sbb
add
mov
out
jns
notb
js
mov
dec
stc
lock
in
jo
mov
sbb
test
mov
jmp
or
push
cmp
fidivs
push
imul
mov
ljmp
and
pop
ret
testl
hlt
es
stos
adc
mov
mov
daa
mov
lret
inc
xchg
mov
popf
inc
shrb
sbb
sbb
loope
loope,pt
adc
je
adc
out
leave
inc
push
pop
in
cmp
mov
lahf
or
push
pushf
sbb
shlb
jnp
lret
mov
inc
xlat
pop
scas
stos
fcomps
aas
cs
lret
adc
jae
das
imul
push
lret
movsl
pop
test
mov
push
adc
pop
dec
sbb
aas
or
pop
test
xlat
mov
insb
cwtl
iret
mov
mov
adc
adc
mov
enter
pop
cmpl
and
mov
cmc
or
mov
fistpl
push
push
dec
icebp
mul
sbb
popa
cmp
lcall
adc
fistpll
cltd
je
stos
rolb
insl
stc
adc
pop
iret
sub
fs
mov
stos
cmp
push
mov
hlt
fstpt
sub
sub
mov
gs
add
jl
aam
cmpl
pop
jno
pop
test
xor
cmp
movsl
shl
push
and
jae
in
mov
out
les
imul
movsb
dec
jmp
mov
mov
cmp
ss
data16
sub
je
fucomi
pop
incb
div
in
mull
stc
inc
roll
ja
and
loop
lret
shll
test
aas
daa
repz
cmp
icebp
rorl
push
xchg
adc
mov
andb
fstp
cmp
insl
jp
add
shrb
aaa
adc
test
dec
fnstenv
cmp
sbbl
test
imul
ret
int
xchg
in
xchg
pop
or
fcomps
out
inc
aam
push
mov
adc
rep
adc
push
cmc
cli
push
std
stos
and
mov
ret
punpcklbw
xchg
pop
sub
arpl
js
in
imul
dec
loop
xor
lods
sbb
hlt
mov
mov
dec
jl
dec
fsubrl
push
fnstenv
push
inc
jae
scas
mov
pop
xor
cmp
add
aas
add
lock
push
or
push
test
inc
dec
sub
dec
sub
push
xor
imul
pusha
jmp
lret
out
insl
pop
ret
out
rorb
das
xlat
dec
shl
mov
inc
jns
cmpsl
inc
call
or
jo
cmpsb
jne
xchg
jns
ret
fadd
into
sbb
xlat
in
and
sub
outsl
fisubrl
mov
push
cwtl
fcmovu
shll
mov
mov
lret
bound
nop
test
movd
pop
cmp
sub
sbb
popf
fs
pop
loopne
in
inc
fisubrs
out
repz
sbb
rep
ljmp
in
daa
adc
push
cmc
pop
xor
aad
movsl
rcrb
clc
js
jae
adc
ss
mov
cmpsl
add
xor
stc
enter
cmp
jecxz
jge
xlat
cmp
and
mov
sbb
and
arpl
int3
sub
enter
sbb
icebp
sub
mov
cld
loop
push
xor
cmp
lcall
pop
je
or
mov
inc
lock
ljmp
add
test
cmp
int3
adc
mov
mov
stos
and
sub
cmp
pop
stos
jge
pop
sub
sbb
dec
sarb
sahf
cli
ljmp
mov
dec
xlat
jl
jo
add
mov
lods
fmull
add
mov
divl
jbe
push
cmp
dec
in
in
std
cmpb
mov
push
mov
mov
sbb
stos
cmp
pop
sub
movl
cmc
and
movsl
je
in
cmpsl
adcb
enter
pusha
test
mov
call
call
push
and
test
lret
insb
push
lds
mov
xchg
mov
roll
inc
mov
and
movsl
sub
in
bound
jae
loope
adc
and
decb
cwtl
popf
iret
inc
loop
repnz
frstor
ret
sub
jne
inc
lods
jae
insl
xor
shl
add
mov
jp
cli
imul
gs
adc
mov
or
mov
int
mov
push
mov
enter
xor
jo
pushf
and
add
fcmovnbe
or
fidivl
ficompl
ret
je
pop
rcrb
das
rcrl
cmc
testb
mov
loopne
sub
sbb
sbb
cmp
out
aad
inc
pop
dec
stc
cmp
mov
push
js
and
dec
push
dec
sbb
pop
shl
into
cld
cs
sub
aas
pop
jnp
or
stc
dec
inc
jno
cmpb
int3
iret
jge
pop
dec
or
cmpsl
gs
leave
or
adc
cmp
orb
xchg
sbb
dec
mov
or
fstps
adc
inc
aaa
lea
add
fstl
lods
sbb
push
xor
cwtl
mov
inc
imul
mov
out
or
or
inc
std
xchg
xchg
mov
sub
insb
loopne
xchg
pop
outsl
movsb
adc
out
and
repnz
adc
cltd
pusha
jg
mov
add
adc
mov
mov
or
dec
mov
push
mov
scas
adcb
jo
js
mov
push
pop
mov
repz
enter
adc
jg
sbb
mov
je
lahf
or
cwtl
pop
enter
es
sub
aam
adc
cltd
cmpsl
jbe
rclb
lret
enter
mov
lret
cmp
aaa
or
pop
pop
ljmp
lahf
push
cmp
and
cmp
push
data16
fdivrl
shlb
dec
or
mov
fld
xor
movsb
pop
add
arpl
fisubrs
jle
dec
andl
stos
xchg
into
inc
add
pop
and
jg
sub
mov
jecxz
stc
popa
mov
in
cltd
xlat
imul
mov
jp
pop
pop
xor
bound
or
cmp
fldenv
cmc
add
push
jmp
mov
ret
lret
ds
mov
inc
inc
mov
popf
cs
insl
imul
mov
pop
mov
push
int3
adc
in
dec
cmpb
xchg
in
out
mov
hlt
das
jcxz
jg
out
cmp
iret
push
inc
xchg
jg
push
or
pop
push
fcmovnu
or
rolb
lahf
das
fisttpll
mov
fdiv
stc
mov
xchg
jp
push
jl
mov
xchg
cmp
mov
out
pop
mull
lock
in
jae
dec
add
shl
ret
loopne
clc
mov
aam
xchg
jns
jp
call
jmp
outsb
adc
dec
jl
xor
insb
lds
fwait
mov
into
jecxz
loop
dec
lea
add
int
fsts
dec
pop
inc
or
mov
sarl
enter
or
or
rol
xor
out
xor
lds
and
jns
test
cwtl
inc
jbe
jl
jmp
and
or
dec
mov
push
cmp
push
add
sti
data16
shll
shll
inc
jno
dec
mov
hlt
outsl
adc
gs
lcall
mov
and
sub
add
pop
shl
mov
inc
lock
mov
push
in
jp
xchg
xchg
inc
aas
and
test
mov
loope
xor
mov
shlb
les
fwait
or
lcall
xor
add
daa
jno
es
cld
daa
stc
and
insb
fcomp
cmp
loop
mov
nop
pop
mov
inc
add
xchg
xchg
dec
scas
sti
cmp
testl
mov
scas
fdivr
jecxz
mov
sbb
out
stos
or
xchg
and
scas
mov
mov
adc
movsb
lahf
mov
or
jno
sbb
insb
dec
or
dec
les
mov
in
movl
xchg
clc
insl
ds
mov
inc
sbb
xchg
mov
mov
mul
test
mov
in
adc
sub
and
jp
jge
or
mov
repz
inc
andl
icebp
call
sub
sub
clc
dec
push
add
and
imul
movsl
dec
xor
cli
mov
movsl
xchg
jb
mov
sub
mov
or
cmp
pop
aad
popf
in
scas
imul
fistl
dec
mov
test
fwait
mov
jno
divb
lret
fcoms
xchg
outsb
mov
mov
push
jmp
mov
gs
mov
jne
cmpsb
jnp
pusha
add
jb
cmp
or
int
push
push
jbe
xlat
inc
adc
push
sbb
fdivl
mov
lods
into
pop
adc
dec
les
sub
int
sbb
sahf
mov
mov
push
push
call
inc
pop
aas
sbbl
or
and
lret
test
das
test
js
sub
movsb
jns
jge
outsl
push
xchg
pop
bound
hlt
hlt
aas
hlt
and
adc
and
mov
sbbb
repnz
sub
ret
rcll
lahf
sbb
sbb
icebp
mov
in
pop
dec
leave
push
rclb
imul
outsl
add
jne
and
mov
inc
test
and
dec
int
xchg
mov
pop
int3
js
inc
js
adc
inc
jo
xor
dec
jno
xor
push
pusha
imul
inc
add
fcmovu
insb
push
and
pop
enter
cmpsb
mov
loope
or
call
jl
fistps
fisubl
mov
dec
notl
nop
pushf
es
mov
popfw
cmp
mov
rcll
popf
or
add
test
outsb
push
jo
jl
push
jecxz
lods
mov
cmpb
fs
jg
pop
sbb
pop
push
aaa
pop
fdivrl
mov
push
inc
dec
incl
mov
jno
shlb
out
sbb
mov
popf
lea
dec
xor
iret
push
xor
cmp
fs
sub
push
scas
jbe
push
test
dec
nop
iret
inc
mov
cmp
cmpsl
divb
xor
pusha
leave
call
aad
sarl
jmp
std
lock
jg
and
lds
outsl
cmp
mov
fisubl
push
mov
lods
pop
mov
popf
push
mov
mov
in
mov
fisubrs
pushf
cmp
aam
xchg
mov
jae
dec
pushf
lahf
repnz
lds
jge
push
dec
add
add
jnp
xchg
inc
rorl
mov
jbe
adc
sti
dec
jecxz
mov
mov
cli
je
bound
roll
jecxz
in
mov
dec
dec
jae
mov
xlat
loope
lock
loop
sti
sub
and
cmp
mov
leave
fidivrs
adc
jle
sbb
push
sub
sbb
lret
faddl
and
loopne
add
cmp
or
push
xchg
mov
dec
inc
inc
sub
lds
xor
cmp
xchg
ds
loop
xor
bnd
rclb
fnsave
unpckhps
dec
enter
in
mov
jns
xchg
sub
or
cmp
adc
dec
sbb
sbb
push
and
lahf
or
mov
and
pop
aas
pop
mov
xor
adc
sbb
xchg
cld
test
push
sub
push
xchg
sub
inc
cwtl
inc
or
inc
push
rol
aam
xchg
add
mov
mov
pop
sbb
cmpl
mov
jno
in
rolb
loope
mov
aad
mov
sub
iret
xchg
aad
mov
jnp
mov
in
mov
and
xchg
push
jb
stc
mov
and
pop
sub
add
cmpsb
aas
bound
fcomps
jge
scas
outsb
xchg
push
dec
scas
sbb
jg
mov
fidivrs
jl
mov
dec
rol
xchg
dec
add
and
xlat
inc
inc
jne
pop
sub
mov
jb
outsb
dec
fnstsw
xchg
testl
repz
test
xor
call
in
cmp
out
dec
scas
lods
ret
jo
enter
pop
mov
stos
mov
aas
pop
and
aaa
sub
cmp
stos
fiadds
add
call
mov
and
aaa
add
sub
jb
add
xchg
xchg
mov
mov
push
mov
cmpsl
imul
xor
pusha
fcompl
push
je
pop
test
lods
fsubrs
add
hlt
lods
out
mov
fs
cmpsb
jno
mov
push
sub
xor
sbb
mov
stc
mov
sub
mov
mov
pop
sahf
push
push
jne
add
xchg
insb
clc
push
mov
js
inc
shl
imul
cli
mov
lock
pop
gs
lcall
sub
andl
das
daa
outsl
jg
stos
inc
mov
or
aaa
pop
pushf
push
push
jp
shlb
add
or
adc
pop
lcall
rclb
mov
pop
mov
xor
iret
cld
iret
dec
inc
data16
in
adc
icebp
insl
push
sbb
imul
out
fildl
fidivl
repnz
sbb
xchg
sahf
ret
mov
insb
xchg
pop
fildll
inc
and
push
jp
addr16
xchg
pusha
mov
push
inc
inc
push
mov
mov
jp
iret
sub
ret
mov
inc
dec
rcll
mov
adc
adc
into
int
and
ffreep
into
xchg
xchg
hlt
mov
sbb
push
cmp
scas
adc
add
rolb
pop
je
out
repnz
mov
loopne
sub
leave
mov
add
jecxz
data16
mov
sti
and
mov
imul
adc
dec
in
pop
cs
in
adc
loope
xlat
jne
stos
daa
ret
and
cld
mov
and
jne
inc
fdivs
divl
cmpsb
adc
insb
pop
cltd
and
mov
xor
adc
adc
push
stos
sti
rcrb
sbb
shlb
insl
pop
push
sub
dec
in
or
xchg
js
dec
out
movsl
jl
xchg
push
xchg
das
cmovge
shrb
push
and
and
imul
jnp
sahf
adc
adc
dec
ja
adc
fdivrs
cltd
outsb
xchg
jg
or
cmp
or
rcrb
push
int
push
push
xchg
push
pop
add
lahf
test
cmp
cwtl
mov
pushf
lret
sub
add
push
fwait
out
ja
dec
leave
loopne
adc
pop
jne
sbb
cmp
out
xchg
add
dec
and
shl
or
js
add
idivl
or
fisttpll
mov
mov
add
and
inc
lods
in
sub
xchg
std
or
mov
insl
test
add
das
dec
cmpsl
test
bound
subb
sti
cmp
cmc
mov
das
loope
inc
filds
sbb
push
sub
push
ljmp
pop
sub
mov
push
mov
xchg
aad
or
aas
and
loop
into
pop
pop
and
scas
mov
dec
and
insb
clc
jge
push
imul
dec
lahf
xchg
ljmp
xor
add
stos
push
aas
inc
out
ja
cmc
aam
into
rcrl
shrb
cmp
in
cmp
data16
shlb
pop
push
mov
arpl
in
aas
jmp
insl
add
xchg
add
sub
jne
pop
shlb
dec
loope
mov
arpl
jae
inc
fstpt
sbb
ss
js
stos
je
cmp
pop
insl
dec
xor
and
adc
test
pop
data16
push
ret
lock
cmpsl
ljmp
int3
fdivrl
fbstp
repz
jne
cld
add
lahf
jnp
das
iret
sbb
mov
jle
mov
pushf
cld
add
pop
or
imul
clc
jns
iret
pop
jbe
test
jae
mov
push
mov
pop
mov
bound
mov
push
and
cmp
jnp
test
add
insb
aad
xchg
ds
fprem
fstl
ret
lods
popf
into
rcrb
inc
jecxz
jo
sub
cmpsb
mov
lea
test
pushf
mov
movsb
insl
add
jl
jae
pushf
call
imul
mov
xor
xor
jl
and
and
inc
sub
cld
aam
stc
pop
push
lret
or
in
outsl
push
shr
sarb
pop
pop
jmp
sub
fsubrp
lea
mov
adc
pop
jecxz
mov
mov
nop
ss
add
dec
dec
icebp
jge
cs
pushf
sbb
cmp
test
test
popa
xchg
mov
push
push
movsl
add
aad
mov
push
jb
sub
das
jmp
inc
push
fs
xchg
arpl
xor
cmpsb
scas
push
inc
cmp
fwait
into
and
ror
push
sbb
pop
xchg
sbb
lahf
icebp
xchg
imul
repnz
imul
test
adc
out
xchg
mov
push
xor
aad
inc
pop
sti
sbb
fwait
les
adc
repnz
add
lds
lret
xchg
les
cmp
adc
cmp
jbe
jmp
dec
jmp
mov
lahf
cwtl
sbb
outsb
lods
ja
pop
cwtl
jg
sub
cmp
movsb
adc
xchg
push
mov
ljmp
jae
jo
and
vpunpckhqdq
pop
fwait
mov
xchg
fwait
adc
and
sbb
fdivl
shll
lret
or
mov
repnz
loopne
outsl
jp
push
add
fbstp
sbb
enter
stos
sahf
cwtl
sub
popa
das
stos
imul
sti
in
mov
mov
dec
push
loop
cmpsl
push
add
mov
jecxz
inc
pop
ret
fdivrs
sub
mov
rcrb
icebp
int3
or
jl
xchg
rclb
inc
sbb
shlb
fcomip
xor
pushf
enter
dec
pop
jo
mov
mov
dec
mov
shrl
push
imul
dec
sub
jecxz
js
sub
adc
shrb
and
adc
dec
ds
xchg
or
pusha
or
sub
inc
xchg
xchg
jb
stc
mov
cmp
xor
mov
roll
push
or
cmpsl
cmp
in
imul
push
lahf
mov
fsubs
inc
inc
fs
pushw
in
mov
lcall
xchg
imul
add
arpl
xor
push
shll
rorl
push
cld
adc
mov
aas
into
cmp
push
sub
in
rcrl
add
cmp
aas
jnp
out
int3
in
xor
or
push
cmp
shlb
ss
int
mov
cmc
test
lret
xor
fs
pop
adc
inc
xchg
jecxz
test
leave
add
nop
and
cmp
les
pop
mov
adc
jo
lea
add
pslld
or
xchg
xlat
fsubrl
dec
xor
push
mov
pop
inc
loopne
push
mov
and
sub
push
insl
test
ss
add
pop
cwtl
testb
sub
andl
loop
imul
mov
sub
push
mov
cmp
aad
inc
add
lret
mov
adc
add
loope
setg
ret
jae
cli
push
test
dec
nop
jle
cli
add
ja
fpatan
xor
sbb
dec
or
lea
lds
mov
out
out
lret
mov
xorb
lcall
mov
mov
daa
cli
pop
add
push
jecxz
mul
daa
dec
cmp
stc
lcall
mov
sbb
mov
xor
jae
lahf
lea
popa
push
xor
lock
or
lahf
xchg
orl
sarb
pop
test
jl
or
xchg
test
cwtl
cltd
sub
sub
inc
jne
push
cltd
mov
movsl
loope
inc
mov
mov
lret
xchg
mov
add
mov
in
pop
subl
push
addr16
xor
cmpsb
outsb
fucomip
imul
enter
mov
aaa
jg
adc
and
lds
cmpsl
pop
ljmp
insl
push
jnp
rcrb
cmpsl
ficomps
call
push
sti
lds
sarl
or
clc
mov
arpl
stc
push
adc
push
imul
add
cli
xchg
insb
popf
out
mov
inc
lret
push
jbe
pop
dec
test
mov
push
data16
mov
mov
sbb
xor
flds
out
xor
mov
mov
test
dec
dec
mov
xor
push
or
ljmp
test
xor
xchg
mov
jg
add
stc
and
js
les
jb
pop
push
dec
rcl
xor
mov
inc
loop
inc
adcb
loope
ret
fwait
lret
fadds
or
xchg
sbb
sbb
ss
xchg
mov
push
pop
rcl
cmp
sub
rolb
pop
and
int
ret
push
add
jns
out
push
xor
hlt
fadd
sbb
les
popa
inc
enter
jae
cld
mov
adc
popa
jl
stos
xchg
inc
lcall
dec
ret
sbb
mov
sub
call
into
pop
jmp
mov
es
testl
lret
mov
les
jae
jle
inc
jp
lcall
xor
add
icebp
ret
fwait
jle
xorb
loope
cmp
dec
icebp
lds
sub
ret
aaa
jl
ret
testb
or
sbb
mov
out
mov
rorb
pop
push
xchg
stos
pop
pop
fisubrs
jg
in
xchg
arpl
cs
cmpsl
xorl
in
and
mov
ds
pop
xor
add
inc
andl
xchg
fwait
mov
mov
jb
test
mov
cmpsb
aas
scas
lret
loope
into
nop
jle
inc
jp
dec
push
iret
adc
subb
stc
das
inc
push
sbb
mov
lods
lods
out
xchg
js
iret
fldenv
mov
lret
inc
and
lret
addb
mov
lret
aad
push
in
fmuls
sub
ret
mov
shll
xlat
outsl
dec
outsb
aaa
mov
sub
clc
aad
add
sbb
cld
je
mov
xor
xor
cmpl
in
and
jae
pop
lea
rcll
xchg
out
push
fistpll
mov
sub
imul
sarb
jnp
jp
mov
sbb
xor
shlb
jg
out
fadd
push
add
nop
jns
or
ja
fistpll
cmp
or
dec
imul
mov
and
scas
fsubrl
inc
repz
jns
push
inc
inc
insl
cmpsl
xchg
jnp
and
aaa
clc
jmp
jne
and
test
xor
loop
ljmp
mov
adc
insl
xor
push
inc
xchg
dec
fidivrs
aas
call
into
push
xchg
lods
lock
dec
outsb
jns
aam
repz
mov
movsl
andb
lock
xor
mov
sbb
outsb
bound
or
pop
or
pop
mov
outsb
ret
movsl
ret
nop
les
addr16
imul
inc
out
xlat
mov
xchg
aas
ret
std
test
out
xor
jg
adc
cmc
dec
stc
push
xorl
test
mov
xchg
mov
adc
lahf
ret
lcall
ja
add
leave
dec
mov
leave
add
pop
dec
add
pop
or
xchg
mov
addr16
out
fidivrs
jnp
call
aaa
lock
call
or
sub
mov
clc
push
sti
test
mov
aam
push
sub
adc
mov
sbb
nop
fs
in
iret
movsl
xor
xchg
fldl
bound
repz
lds
aam
imul
dec
push
fisubrl
push
cltd
mov
loopne
jle
fidivrl
mov
mov
sub
and
roll
adc
dec
pop
insb
push
cwtl
cwtl
ljmp
xor
lock
adc
inc
pop
popa
sub
push
push
stos
xor
cmp
les
jle
movsb
xchg
int
push
sti
pop
pop
mov
popa
mov
out
or
xchg
jae
test
or
sbb
les
sub
aaa
inc
jo
in
idiv
nop
pop
outsl
pop
pop
mov
add
test
clc
lods
out
or
jg
xlat
mov
inc
pop
incl
jb
lret
mov
sbbb
cmpsl
in
push
mov
mov
xor
in
aas
rcll
xchg
inc
add
scas
fisubrl
xchg
les
loopne
cmp
pop
sti
xlat
into
sahf
ss
repz
xorl
and
stos
fsubrl
rcll
push
mov
jle
jbe
mov
pop
dec
push
test
out
arpl
mov
lods
push
loopne
mov
push
iret
test
iret
aas
inc
and
push
sbb
test
add
push
fidivs
mov
cltd
fucomi
jae
clc
int
imul
cmpl
lcall
scas
test
push
or
or
mov
fwait
hlt
push
dec
lret
aad
ficomps
dec
cmp
mov
or
and
lods
xchg
and
and
mov
push
inc
pop
mov
ljmp
mov
in
nop
add
in
lret
fdivrs
cmc
push
mov
or
iret
sahf
xchg
dec
mov
movsb
aaa
aam
movsl
adc
stos
pop
imul
sar
push
or
inc
sarb
enter
lods
loop
lds
fsubp
mov
adc
fwait
clc
xor
or
xor
and
mov
imul
pushf
dec
mov
pop
add
sbb
lea
stc
leave
xchg
int3
jmp
mov
jae
sbb
cli
popa
sub
rcrb
jno
stc
aaa
jae
imul
mov
inc
sbb
xchg
xlat
cmp
scas
fisubs
aaa
mov
fildll
rolb
push
add
push
bound
add
mov
xchg
insb
xchg
lea
or
jbe
test
fisubrs
and
sbb
cmpsb
mov
and
push
inc
gs
sub
pushl
insl
lds
insb
rolb
jg
sub
cli
call
fisubrl
sbb
test
push
pop
push
jl
lcall
addb
loop
les
push
xlat
imul
lret
cmp
pushf
shrb
andb
aad
adc
dec
sbb
test
int
xchg
cltd
sub
out
insl
shrl
loop
jns
test
inc
loopne
xchg
jmp
out
and
mull
pop
adc
mov
ret
mov
fmuls
or
cs
jmp
mov
shlb
test
fadd
xchg
push
pop
or
mov
cltd
fcoms
addl
fistpl
inc
adc
jg
scas
int3
mov
aaa
push
std
ret
shr
pop
xchg
lods
adc
dec
mov
dec
inc
sub
and
das
add
rcll
xchg
decl
ds
sub
mov
mov
stos
inc
fwait
into
and
add
push
ja
dec
das
xchg
cmc
pop
add
fstl
mov
call
mov
or
mov
sarl
call
cmp
pop
and
push
enter
sti
subl
and
inc
mov
sbb
cli
cmp
add
in
cmp
das
and
das
loop
mov
pop
mov
int3
cmpsb
rcrb
push
or
xor
aam
inc
pop
inc
push
xlat
jae
and
inc
xchg
mov
shlb
popa
lret
inc
jle
adc
scas
and
jmp
pusha
ret
mov
dec
sbb
push
pop
popa
pop
mov
inc
negl
pop
lcall
cmp
xor
lods
je
inc
addr16
push
sahf
loope
mov
in
mov
jb
jb
xchg
test
adc
dec
out
push
mov
inc
mov
jmp
in
jne
push
mov
movsl
sub
pop
jle
xor
lcall
push
addb
mov
cwtl
out
add
pop
fdivl
insb
xlat
outsl
out
xor
and
gs
cmp
pop
in
xor
inc
orb
ja
cmp
cmp
push
leave
add
xor
pop
in
js
pop
push
xchg
xlat
iret
movsb
or
mov
push
in
jne
addr16
clc
mov
insl
mov
adc
in
sbb
adc
inc
enter
adc
xchg
sbb
cld
mov
xor
and
lahf
js
dec
stc
cmp
mov
xor
insl
fdivrl
sbb
scas
mov
shlb
dec
mov
mov
mov
dec
insl
les
xor
pop
mov
dec
sub
adc
cmp
xchg
out
and
mov
iret
xchg
icebp
or
jmp
test
pop
xlat
cmovne
pushf
dec
lods
xchg
xchg
loopne
sub
into
or
and
xchg
cwtl
sub
movsl
rorb
pop
jne
xchg
outsl
pop
pop
cld
decl
test
nop
sbb
mov
mov
lock
or
add
mov
mov
movsl
sbb
aaa
sti
xchg
mov
mov
cmpsl
lods
cmpsl
push
in
test
fs
adc
cs
hlt
loopne
pop
add
push
inc
mov
aaa
inc
sub
push
jbe
movsl
nop
popl
jo
shlb
xchg
and
pop
mov
jle
mov
xor
adc
daa
push
leave
rolb
push
push
fisttpll
jmp
jae
xor
mov
sbb
jmp
in
std
aaa
jae
cwtl
loopne
sub
stc
push
sbb
cmp
or
das
in
pop
sub
mov
sbb
mov
jge
jne
cmp
out
adc
ror
movsb
xor
cmp
dec
movsl
jb
addr16
fidivrs
mov
stos
insl
jmp
mov
cli
lds
cmp
fidivrl
aam
nop
mov
push
jnp
fs
stc
xor
push
xor
cmp
int3
mov
push
xchg
divl
adc
sub
popf
stos
lods
leave
fnclex
mov
insl
mov
adc
fcom
pop
movsb
scas
jne
cmp
mov
loope
push
pop
sub
inc
dec
popa
jo
xchg
and
mov
pop
sbb
into
gs
nop
cmp
and
mov
pusha
les
pop
stc
sbb
outsb
int3
iret
shrl
aam
stos
pop
aad
pop
xchg
add
jle
jecxz
fsubrs
loop
shl
dec
in
aas
push
and
test
arpl
mov
mov
add
xor
clc
sub
mov
loop
mov
mov
pop
xor
cmp
mov
lea
inc
int3
push
ja
jb
inc
hlt
mov
push
or
cmpsb
inc
loopne
mov
jge
js
mov
and
imul
test
je
mov
jl
wbinvd
push
pavgb
or
xor
or
sbb
jle
call
or
inc
int3
idivl
and
fistpl
hlt
pop
sub
enter
into
enter
dec
in
es
in
mov
cli
xorl
adc
out
shrb
mov
mov
ljmp
ficomps
imul
jmp
loop
adc
push
out
xor
xchg
mov
mov
lahf
in
xchg
sbb
sub
xor
dec
ja
pop
rclb
mov
ljmp
aad
inc
je
addr16
out
jle
js
fmull
xor
cmp
mov
divl
push
popf
xchg
dec
cld
outsl
add
lret
pop
testb
pop
hlt
lcall
sbb
adc
andb
ss
mov
pop
cmpsl
jp
int3
in
cmp
test
mov
aam
mov
add
mov
inc
push
xor
dec
fwait
sbb
cmp
mov
push
inc
jns
pop
dec
cld
inc
out
mov
pop
clc
gs
cmp
daa
js
cmp
lods
sub
sbb
adc
jne
jmp
pop
cmp
stos
fistps
jnp
cmp
mov
or
repnz
and
addr16
imull
pop
movsb
repnz
dec
lods
std
inc
clc
into
xchg
mov
jbe
cmpsl
clc
pop
dec
xlat
js
mov
es
movsb
pop
mov
adc
pop
addb
mov
fisttpl
push
data16
and
test
int3
fxch
lods
adc
xor
pop
xchg
xorl
dec
inc
inc
add
or
int3
pop
repz
cmp
sbb
std
sbb
xchg
push
pop
adc
dec
imul
mov
repz
sub
pop
and
shlb
pop
out
jbe
leave
loopnew
pop
xlat
sti
pop
adc
sbb
test
sahf
test
mov
int
imul
mov
verw
or
lcall
inc
movsl
and
movsb
out
fs
pop
repnz
rclb
dec
jne
adcb
and
lock
mov
dec
cltd
dec
jbe
add
mov
sub
push
or
mov
cld
andb
sub
fcompl
nop
pusha
clc
jb
mov
nop
in
and
std
and
je
fbstp
xchg
out
loopne
and
mov
xor
jnp,pt
mov
fwait
and
push
jl
mov
sbb
xchg
push
dec
les
mov
cwtl
arpl
aad
adc
adc
jecxz
es
xchg
pop
scas
push
pop
inc
push
mov
inc
push
jbe
inc
and
fwait
mov
notl
xor
push
test
push
jp
ljmp
inc
and
das
mov
int
and
out
fucom
stc
clc
inc
mov
mov
adc
inc
imul
dec
mov
mov
xor
xchg
and
mov
or
std
stos
xchg
test
push
xor
out
data16
pop
frstor
xchg
call
popa
stc
cmpsb
popf
stc
cmp
daa
xchg
pop
nop
sti
adc
xor
out
repnz
sub
jb
or
popa
inc
fwait
push
pop
movsl
idivl
xor
cmpsb
sbb
imul
mov
leave
rorl
movsl
out
in
adc
lcall
stos
test
orb
mov
enter
inc
xchg
clc
xchg
icebp
push
jmp
test
mov
lea
xor
stos
sub
imull
add
movsl
mov
sti
mov
imul
pushf
sub
fiadds
ljmp
push
cltd
pop
outsb
idivl
or
or
shld
ret
pop
enter
xor
mov
cmp
sub
insl
cmc
fnstcw
and
mov
fdivl
outsb
sahf
fnstenv
ljmp
aam
sbb
push
inc
cmp
std
mov
imul
ret
inc
movsl
push
in
dec
sub
inc
cwtl
adcl
je
lcall
push
pop
lcall
idiv
or
dec
in
ret
or
iret
daa
aad
lds
and
lret
mov
dec
mov
mov
push
xchg
pop
pusha
cmpsl
outsb
jg
imul
into
dec
inc
fadds
add
pop
lahf
pushf
sub
mov
adc
gs
movsl
mov
push
movsb
out
pushf
mov
gs
scas
loope
add
fldt
gs
lods
xchg
lods
cli
shlb
mov
jno
jne
popf
mov
jle
aaa
enter
mov
arpl
dec
mov
mov
inc
and
sbb
and
arpl
js
imul
scas
popa
clc
inc
mov
jp
test
hlt
ds
jne
dec
js
jl
dec
mov
inc
inc
aam
jge
and
cmpb
add
push
jno
out
cli
ss
je
stos
mov
cli
int3
mov
jmp
sbb
xor
push
fcoms
call
faddl
repz
movsb
xor
mov
in
sbb
inc
pop
cli
and
iret
roll
xchg
in
js
sbb
fisubrs
jle
or
sub
inc
in
arpl
xlat
addr16
jge
hlt
fstpt
std
xor
pop
cmp
int3
sub
xlat
push
mov
pop
out
jae
and
leave
pop
dec
pop
xor
pop
sub
out
mov
mov
clc
and
idivl
jg
inc
push
jmp
mov
lock
mul
outsb
xchg
mov
into
aam
incl
mov
add
jle
loope
mov
cmp
or
adc
mov
jnp
stos
adc
mov
xor
xchg
lahf
jle
jecxz
out
xor
inc
aam
aam
mov
mov
std
repz
dec
sbb
lret
sub
popf
jo
clc
es
xchg
mov
inc
loopne
daa
leave
xchg
popa
sbb
push
fidivs
ss
stos
cmp
loope
in
adc
lods
or
ret
hlt
mov
enter
mov
clc
rcll
pop
cmp
aas
push
or
sbb
scas
lods
xor
jl
or
pop
rclb
lret
push
xor
and
xor
jbe
mov
dec
mov
add
mov
xor
fcmovnb
stos
lcall
outsl
je
es
rep
fistpll
daa
dec
pop
lea
hlt
stc
dec
pop
jmp
nop
mov
mov
fldcw
sarb
daa
scas
ja
push
jne
outsb
bound
inc
pop
bound
inc
xchg
fildll
sarb
mov
sub
hlt
scas
nop
popa
adc
cmpsb
mov
adc
jne
cltd
lock
cmpsl
adc
nop
movsb
add
hlt
cmpl
xchg
popf
inc
cs
push
mov
icebp
adc
cmp
lock
and
decb
enter
xor
out
insb
pop
sub
fisubrs
arpl
outsl
jg
lret
push
pushf
sbb
and
insb
jbe
xchg
lds
scas
lret
int3
jge
cwtl
hlt
jge
lock
mov
pop
mov
xor
rorl
push
pop
scas
dec
into
cmp
adc
lock
or
cli
shlb
xor
pop
sub
adc
or
imul
cmp
adc
sbb
jp
jg
cmpsl
pop
cltd
fdivl
lea
je
outsb
int
and
xlat
adc
adc
mov
rcll
test
mov
fs
lds
and
inc
cmp
cmovge
xor
outsb
enter
ja
scas
lea
adc
adcl
imul
inc
mov
shlb
sbb
ret
fiadds
ret
adc
sti
mov
faddl
pop
shl
cmp
jmp
push
mov
inc
call
adc
dec
fdivr
fstpl
enter
sub
xor
shl
rolb
rol
fs
xchg
idivl
cmpsl
jle
and
push
sbb
aam
aas
mov
inc
in
sti
scas
lret
pusha
daa
add
add
fdivr
cwtl
rorl
popf
std
divl
ficomps
pushl
insb
test
or
xchg
ljmp
jo
test
pop
je
ja
and
dec
jge
cmp
rorl
pop
repz
sarb
gs
arpl
pop
or
pop
movsl
pushf
adc
nop
jbe
jge
or
or
scas
or
dec
mov
std
fidivl
xor
mov
inc
add
ss
inc
cmp
xor
and
add
mov
aas
and
lahf
das
mov
jle
mov
test
cmovnp
les
fwait
ja
gs
shrb
jmp
mov
loop
push
iret
dec
dec
push
mov
fimuls
lock
xor
test
rclb
dec
mov
insl
stc
add
mov
xchg
bound
shll
nopl
xchg
pop
insl
or
aas
test
insb
xchg
mov
fmull
stc
jmp
cmp
sti
movsb
call
mov
xlat
lret
jmp
push
cmp
pop
or
dec
xchg
shlb
aas
int
mov
gs
and
pop
mov
stc
lea
mov
mov
sub
fs
push
es
loopne
sti
mov
mov
fldenv
jae
jns
adc
ja
dec
jl
mov
inc
ret
mov
rcrb
out
mov
inc
jo
dec
mov
imul
idivb
cmc
movsb
mov
repz
loopne
orb
ficompl
out
jp
aaa
out
sbbl
jle
movsb
int
std
pushf
cmc
and
insb
inc
int3
or
test
xor
pop
adc
dec
cwtl
sub
pop
subb
mov
jp
jl
push
and
jmp
and
rolb
insl
mov
pop
xor
push
sub
aam
mov
es
inc
test
hlt
and
sub
incl
and
aaa
dec
nop
xlat
fwait
jnp
xchg
pop
rorl
cld
inc
adc
test
enter
aas
jo
or
pop
jne
dec
js
call
pop
out
jp
cmp
ss
mov
and
push
or
pop
decb
nop
jp
cmpsb
shrl
dec
scas
ja
dec
mov
pop
iret
stos
icebp
jge
or
adc
les
loope
pop
inc
cmp
xlat
sbb
lea
pop
or
pop
lods
cmpsl
data16
jl
pop
movsl
or
aaa
add
hlt
lret
jo
push
adc
scas
adc
cwtl
fcoml
outsl
sub
pop
in
cs
iret
mov
adc
add
loop
cmpsb
insb
fst
fisubrl
lahf
dec
xor
lret
xchg
push
call
addr16
cmp
test
push
push
fidivrs
push
cmp
fisttpl
roll
insb
jo
lret
out
mov
jge
enter
pop
dec
testl
lock
ss
dec
mov
sti
ret
clc
out
out
clc
in
les
dec
cmpl
sti
sbb
out
xchg
sub
ret
jmp
xor
push
cmc
les
jecxz
loope
clc
or
and
addr16
outsl
dec
movsl
lods
xorl
icebp
stc
jp
in
mov
fwait
insb
dec
mov
dec
and
mov
jnp
fldenv
mov
pop
mov
addl
aaa
cwtl
shr
push
or
pop
in
fucomp
jo
xor
mov
mov
lock
and
mov
adc
lods
or
add
ret
dec
stos
sarb
push
mov
jae
sbb
adc
les
js
xchg
xor
es
stos
pop
rcrb
lods
inc
pop
xor
sbb
push
in
arpl
cmp
and
sbb
mov
jae
fdivs
xor
nop
push
add
fwait
icebp
shrb
xchg
movsl
fcoml
stos
cmpb
rorb
aam
mov
xorb
lods
jle
leave
mov
cld
push
push
xchg
mov
jae
out
movsl
out
inc
sbb
lret
pop
aad
adc
pop
push
pop
sahf
add
fs
daa
jge
pop
jne
jg
pop
push
int3
pop
roll
fcoml
cmp
xchg
xor
mov
mov
shll
xorb
scas
xor
or
clc
lret
sub
xor
out
int3
push
js
xchg
mov
push
push
jae
pop
lcall
push
lods
dec
push
jl
cmpsb
xchg
js
sti
or
sub
pop
adc
stos
dec
xchg
cmc
cmp
mov
lods
int3
sub
pop
cs
ret
and
lcall
in
dec
fisttps
pushf
dec
and
adc
imul
shr
in
xchg
aam
sub
lcall
loopne
push
roll
adc
adc
ret
mov
mov
mov
outsl
xor
int3
dec
or
sub
sbbb
test
insb
xchg
shll
mov
mov
sub
scas
push
pop
mov
out
push
mov
fs
imul
mov
mov
push
sbb
jmp
icebp
jmp
inc
std
nop
pop
std
or
lock
or
in
in
mov
adc
push
icebp
or
add
push
dec
outsl
sbb
inc
aaa
inc
pop
dec
push
dec
ds
mov
add
gs
rcll
or
xor
push
push
add
les
movsb
std
shlb
mov
xlat
int3
push
jno
or
daa
inc
and
shrb
mov
in
outsl
call
or
pop
in
mov
hlt
subb
ds
popl
sbb
cli
aas
and
pop
cmc
cmpsb
push
sub
pusha
std
jmp
add
inc
aaa
loope
xor
in
call
push
push
mov
jns
daa
es
xchg
decl
jmp
mov
dec
aad
in
leave
xchg
lock
jb
cld
adc
add
cmp
mov
pop
daa
xor
push
cmc
xor
pop
call
frstor
dec
pop
and
jne,pn
jmp
cmpsl
ret
in
and
test
lods
xchg
inc
mov
or
lock
mov
xor
int
xor
in
mov
fmuls
sub
loopne
out
dec
movsl
fcmovnu
jb
dec
insl
mov
mov
fildl
push
insl
rclb
lods
cmp
lret
cmc
out
fmull
out
in
shlb
and
cmpsl
xchg
lahf
pop
aas
repz
shl
js
test
jmp
sti
jb
add
decl
jno
jbe
fstpl
cmp
flds
jmp
or
mov
call
cmp
sbb
ret
pop
pop
add
outsl
int
cmp
in
push
subb
cli
dec
pushf
cmp
mov
xor
stos
jno
aas
in
sbb
sbbl
mov
addr16
mov
add
fistl
iretw
addb
dec
xor
inc
xor
cld
addr16
add
fstpt
jmp
loopne
scas
sbb
and
jmp
test
rorb
xchg
adc
fsubrs
mov
shll
sub
mov
lea
and
das
int
mov
adc
push
mov
scas
pop
into
jbe
mov
loope
mov
fisttpl
cs
lcall
ss
sub
jp
jns
inc
mov
inc
idivb
sbbl
mov
jl
aas
mov
popf
in
mov
fmuls
lea
inc
aas
lods
mov
idiv
test
imul
mov
nop
or
sti
and
xlat
inc
popf
mov
sub
pop
xlat
pop
inc
xchg
xchg
pop
push
cmpsb
mov
popl
lcall
xchg
fwait
test
mov
lods
adc
cmp
adcl
mov
fucomp
push
cmp
inc
cltd
push
mov
mov
call
ja
je
cmpsl
montmul
cmpsb
ret
add
push
dec
xor
sahf
shrb
cmp
subb
aaa
outsb
lock
xorb
ja
sub
call
mov
dec
inc
mov
and
out
cmp
inc
fsts
mov
and
ljmp
adc
push
push
insb
push
push
dec
ficomps
addr16
aas
lcall
mov
and
sbb
mov
into
scas
inc
mov
pop
sub
xchg
orl
pop
pusha
or
jmp
lahf
in
push
hlt
cmp
push
mov
xchg
pop
es
jp
scas
popl
aam
clc
add
add
clc
gs
jae
xor
outsl
sarl
jp
jbe
arpl
adc
orl
jle
out
fldz
outsb
jne
lea
xor
call
out
mov
mov
cmpl
xchg
insl
add
fwait
aas
pusha
pop
pop
nop
add
outsl
insb
add
ja
sub
shl
xlat
xchg
sbb
cmp
rorb
les
or
nop
ljmp
pop
pop
idivb
adc
sub
stc
cld
fsubrl
aaa
out
addr16
fnstsw
push
pop
ja
in
cmp
xchg
jmp
aas
inc
cwtl
or
cltd
cmp
xchg
frstor
fidivrl
inc
mov
jo
sub
jmp
mov
lock
push
push
idiv
mov
test
dec
jge
aam
or
sub
and
in
cmp
mov
jp
hlt
xor
divb
clc
push
xor
ja
popf
mov
enter
mov
mov
mov
cmp
push
in
ljmp
jno
movsb
xchg
test
das
in
jnp
xorb
cmp
sbb
sahf
lock
inc
mov
jo
pop
mov
popa
xor
dec
fsubs
std
je
pusha
not
push
loope
lret
pushf
jns
and
jge,pt
mov
cmp
sar
rcrb
aad
cmpsl
shll
push
ljmp
jmp
adc
inc
iret
clc
sbb
add
adc
in
jg
mov
push
lret
dec
sbb
add
ds
lea
insb
das
cwtl
push
inc
push
push
fisubrl
sarl
enter
pushf
push
mov
sbb
notl
das
mov
subl
sub
xchg
lock
out
stc
repz
mov
adc
insb
mov
mov
fisttpl
jne
in
mov
popl
pop
xor
push
sub
mov
push
mov
in
sbb
stos
xor
add
push
mov
lods
lea
xchg
add
xchg
sbb
mov
repnz
jle
lret
mov
mov
adc
adc
loopne
stos
sub
insl
aad
pushf
int
push
pop
mov
addr16
fstp
inc
and
out
push
aad
iret
lret
mov
sbb
sbb
in
rorb
inc
dec
mov
leave
jae
repz
mov
cmp
repz
jns
xor
lahf
lcall
into
push
int
mov
mov
out
inc
mov
and
shl
popa
cmp
and
pop
mov
jns
les
mov
xchg
sbb
mov
lret
xchg
ret
lock
and
sbb
mov
cs
js
mov
dec
dec
std
mov
int3
fsubs
daa
addr16
push
daa
lahf
pop
lods
arpl
pop
repz
dec
fstp
push
int3
ret
adc
icebp
dec
push
pop
mov
sub
jecxz
xchg
fildl
inc
aad
les
hlt
lret
rcr
jbe
mov
fcomip
mulb
or
or
xor
setne
jle
sub
loope
orl
imul
pop
popf
push
dec
jp
imul
xor
adc
cmpl
loopne
jle
outsb
adc
mov
mov
xchg
xor
leave
jns
xchg
pop
mov
or
pop
and
mov
mov
cmp
hlt
nop
mov
mov
lret
push
lock
ret
push
jns
jp
ret
mov
lret
andb
in
ds
push
jo
adc
adc
ljmp
pushw
in
jge
scas
out
mov
mov
or
xor
punpcklbw
mov
mov
pop
mov
jg
inc
add
inc
jmp
negl
sbb
sbb
sbb
mov
dec
sbb
mov
jle
dec
jmp
add
aam
ret
push
mov
push
scas
lea
dec
cmpsb
pop
lock
xchg
popf
cli
cmp
andb
js
fldl
nop
pop
jne
mov
cli
mov
xor
xchg
sbb
negl
gs
mov
jmp
inc
mov
cmp
mov
out
and
fwait
cli
xchg
cmpsb
lret
jg
xor
jmp
fsubr
adc
shrl
push
push
add
aad
pop
sbb
pop
pop
addr16
test
add
hlt
adc
mov
insb
lret
add
popa
mov
add
pop
out
std
cmp
rorb
pop
mov
or
mov
jns
add
sub
sbb
xchg
imul
dec
rcl
push
test
inc
xor
jge
adc
jp
shl
cmc
xor
ds
mov
sbb
mov
mov
dec
lock
xchg
in
xchg
sub
xchg
imul
sbb
jb
sbb
popf
pop
sbb
dec
dec
or
mov
cmp
jle
call
sub
or
lret
stc
adc
cmp
push
pop
test
xchg
push
jne
fdivl
popf
push
mov
add
fcmovnu
xlat
mov
push
add
sbb
jge
adc
test
repz
pop
jmp
jo
mov
cmp
or
sbbl
jo
fidivs
shll
loope
inc
and
enter
mov
hlt
test
xor
jmp
inc
out
push
push
pop
ror
cwtl
sarb
mov
sub
lock
jne
mov
add
xor
shl
sbb
sub
pop
inc
scas
sub
adc
shr
insb
adc
adc
stos
jg
mov
add
rcll
push
jge
loop
insb
sarl
and
pop
ja
mov
leave
testb
bound
pop
and
fcomip
cmp
insb
mov
push
je
mov
subb
xadd
icebp
in
xchg
add
pop
hlt
xor
jge
push
shll
call
xor
in
dec
mov
imulb
adc
jne
inc
xor
lods
shrb
ret
mov
fistpll
xchg
stos
and
sub
loopne
sub
push
push
clc
and
lahf
out
add
mov
pop
push
dec
or
je
aas
lock
and
insb
mov
push
mov
insb
gs
fs
roll
dec
sbb
pushf
cwtl
push
loope
pop
fcoml
repnz
inc
cli
push
sti
mov
fldcw
or
fldenv
fstpl
sub
out
pop
mov
cmp
mov
push
mov
sub
shlb
or
in
popf
mov
mov
sti
movsb
sub
dec
lahf
or
or
pop
gs
in
hlt
in
sti
setle
shlb
jp
ret
mov
test
sbb
mov
daa
jmp
fldl
mov
outsl
ss
out
popf
ret
or
out
je
mov
loopne
jnp
pop
std
test
pop
sti
dec
enter
cmp
mov
adcb
mov
lcall
add
gs
sub
out
cmp
mov
scas
dec
mov
dec
dec
icebp
xchg
mov
ror
mov
cmp
jno
mov
aad
rclb
outsb
jl
rcr
lcall
push
in
push
lea
and
mov
in
push
mov
cmc
push
mov
or
fcmovnbe
dec
ljmp
xchg
dec
adc
adc
cmp
frstor
shlb
outsl
test
pop
and
lret
clc
xchg
cmp
mov
clc
xor
ds
jo
xchg
addl
stc
das
jg
lods
shll
notl
lcall
cmp
xor
jae
and
lds
ljmp
mov
cli
add
inc
push
adc
adc
inc
mov
stos
cltd
fsubrl
adc
cli
add
mov
xor
loopne
sbb
cmpsb
pop
jle
in
push
inc
inc
cs
jns
shll
daa
sub
mov
jns
push
mulb
dec
nop
mov
push
push
pop
in
ret
rolb
insl
cmp
jne
je
fldcw
fistpll
cmp
fsubr
jb
leave
add
fisubl
movsb
mov
push
aad
out
mov
pushl
push
or
subl
sahf
and
sarl
fidivrl
fmuls
mov
inc
sbb
out
pop
pop
and
xchg
mov
jo
fwait
cmpsb
aaa
mov
jns
js
sub
movsl
mov
aam
cmp
out
adc
sarb
in
jmp
call
pop
jne
push
ja
mov
mov
push
shl
pop
xorl
push
test
sbb
mov
pushf
xchg
or
or
pushf
push
lahf
out
stos
cmpsw
jmp
ljmp
mov
flds
std
sbb
or
in
xor
add
pop
pop
mov
enter
mov
das
ret
xor
mov
dec
in
test
pop
or
lea
movsl
pop
jl
imul
sbb
xchg
std
ds
insb
xchg
add
mov
fdiv
imul
inc
orb
xchg
outsb
mov
mov
pop
das
outsb
mov
xchg
dec
repz
in
out
jecxz
addl
mov
jno
xor
ret
call
xor
ret
mov
out
jmp
mov
dec
fwait
pop
and
pop
push
push
push
adc
das
lds
sbb
mov
mov
mov
pop
in
je
hlt
mov
popl
and
adc
cmp
call
shlb
std
sahf
repnz
addr16
push
data16
imul
ret
pop
mov
xor
dec
loop
ja
imul
xor
add
in
stc
and
fnstcw
jno
sub
inc
leave
das
xchg
pushf
mov
jmp
xchg
mov
ljmp
and
repnz
dec
cmp
dec
std
xchg
test
mov
imul
imul
add
std
xor
mov
xchg
xor
rorb
and
jno
insl
leave
xchg
movsl
std
or
repnz
xorb
dec
adc
inc
fdivs
inc
pop
scas
je
rcll
and
adc
incl
das
arpl
or
in
stc
sub
dec
push
xorl
push
mov
lock
in
cmp
je
scas
scas
xor
scas
iret
in
cmp
into
fs
pop
and
sub
aaa
rcll
inc
sarl
test
scas
leave
scas
mov
adc
dec
icebp
xchg
iret
mov
push
popa
jecxz
sarb
push
inc
cmp
pop
inc
or
outsl
stc
adc
decb
mov
divl
leave
data16
cmc
dec
cmp
jl
data16
popa
orb
enter
rorb
cltd
sub
and
and
ss
adc
lods
lret
out
sarl
std
mov
test
movsb
inc
sbb
pop
sbb
adc
push
adc
daa
xor
out
mov
ficoml
xor
pop
jp
leave
xchg
hlt
add
mov
fnstenv
cmp
push
mov
dec
loope
add
loope,pn
mov
xor
mov
inc
add
roll
hlt
cli
mov
mov
fucomp
xor
fistps
adc
rorb
push
jae
mov
inc
or
jne
xlat
int
test
cmp
xchg
imul
fucom
jns
call
rcrb
xor
loope
test
mov
les
int3
enter
mov
insb
mov
mov
xor
ret
sub
cli
scas
adc
icebp
push
mov
mov
bound
imull
jns
lret
mov
xchg
adc
popa
xlat
xlat
jmp
sub
or
gs
xchg
in
shl
fistps
loop
push
add
jg
je
enter
xor
dec
xlat
mov
add
mov
lds
jo
mov
xor
repnz
push
jg,pn
daa
scas
shll
daa
cs
inc
dec
and
push
lret
sub
les
mov
decl
mov
push
aad
mov
decb
xchg
test
mov
or
scas
ret
jb
pop
inc
and
mov
or
out
es
bound
clc
adc
jg
fisubrl
lds
imul
aam
dec
mov
out
mov
fbstp
cmp
sbb
sub
push
adc
int
xchg
mov
nop
cld
insl
nop
jp
or
adcl
fabs
mov
ds
inc
or
orps
scas
inc
out
stos
jbe
sbb
rolb
and
pop
test
and
xor
adc
push
sarl
mov
xorl
and
jge
pop
xor
shl
sub
mov
cmp
sub
test
stos
hlt
movsl
jmp
bound
gs
mov
out
pusha
cmpsb
cmpl
push
jmp
hlt
xchg
sbb
test
inc
sub
sbb
add
inc
loop
xor
jp
imul
mov
mov
and
jae
ja
lock
test
dec
arpl
lock
out
dec
movsl
out
xor
shlb
sbb
lret
pop
and
movsb
iret
adc
xchg
mov
inc
pop
mov
or
fdiv
mov
inc
mov
negb
mov
xchg
dec
bound
gs
mov
xor
fs
sbb
or
mov
mov
cwtl
pushf
stos
rorb
add
fwait
test
das
push
ret
add
or
xor
js
inc
hlt
ret
pop
loope
mov
sub
mov
pop
mov
push
ficoml
pop
and
pop
movsl
inc
test
xor
out
push
loopne
pushf
dec
add
xchg
jecxz
data16
xor
pextrw
or
xchg
ljmp
imul
or
pop
scas
ss
add
lds
jl
dec
insb
sub
pop
fldl
jb
ret
aam
dec
leave
stos
lods
mov
push
mov
pop
enter
data16
scas
cmp
fcompl
loope
aam
pop
loop
adc
xchg
ds
enter
lock
sbb
xchg
mov
sub
ret
fwait
adc
nop
cmp
mov
pop
movsl
leave
aaa
aas
mov
xchg
lock
or
add
xchg
icebp
fiadds
xor
inc
jae
jne
cmpsb
cld
je
and
dec
and
jl
or
mov
popa
push
cmp
stos
lock
xchg
popf
lret
push
push
inc
scas
ret
push
enter
mov
jb
pop
dec
je
push
mov
cmp
jmp
fdivl
adc
xchg
dec
pop
cltd
shlb
mov
push
nop
sub
xchg
sbbl
dec
sub
xor
lods
fs
repz
adc
int3
jbe
and
push
aam
inc
cs
out
lahf
sti
idivl
xchg
shrl
xchg
and
decb
and
mov
jb
add
pop
xlat
xchg
add
clc
rol
loope
pop
cmpsl
mov
data16
sbbl
push
cmp
xor
push
lock
or
xor
xor
test
sub
cmpsl
mov
xor
jae
mov
push
ret
mov
ljmp
dec
test
xchg
aam
in
in
cmpsl
sbb
push
sub
je
jg
lods
sbb
imul
push
js
cmp
mov
mov
mov
inc
imul
xor
int
sbb
dec
sbb
cs
mov
mov
movsb
jmp
push
sbb
incb
push
mov
push
insl
adc
jne
jns
notl
mov
cld
nop
jle
aas
add
es
mov
std
xchg
loope
addr16
fiaddl
mov
fistpll
adc
cmpsb
and
jae
dec
into
nop
cwtl
jne
mov
inc
mov
pop
icebp
dec
cmpsl
jmp
lods
mov
cld
sbb
stos
scas
adcb
cltd
jecxz
cmc
pop
hlt
or
xchg
xor
int3
pop
in
pushf
popa
xchg
pop
repz
push
out
arpl
cwtl
jl
int3
push
jno
std
loop
add
cs
cmp
xchg
jnp
outsb
aas
in
cmp
mov
cmp
lods
xor
addr16
sti
lds
call
je
test
aaa
loopne
outsl
aam
loopw
orl
xchg
dec
daa
sub
test
mov
inc
inc
data16
cmp
or
gs
fdivl
insb
lods
imul
jl
pop
lret
in
xor
mov
cmc
xor
stos
jbe
push
or
in
scas
xor
push
imul
daa
pop
mov
mov
jmp
mov
mov
fistl
jae
mov
dec
pop
pusha
frstpm(287
sbb
cs
push
icebp
out
pop
xor
jge
test
sub
or
jge
push
lret
mov
xchg
je
ret
sbb
and
test
xchg
fsubrs
test
sub
or
fnstcw
addr16
jae
jle
dec
cmp
or
data16
insb
aad
outsb
push
inc
stos
lea
jnp
sub
pop
cli
mov
es
cmp
movsl
or
andl
unpckhps
push
bound
inc
push
sbb
in
aas
cmp
lcall
int
sbb
lret
js
enter
outsl
leave
jle
vphaddubw
test
push
in
mov
sub
mov
sub
popa
push
lock
sub
adc
fdiv
inc
xchg
insb
mov
jbe
rolb
stc
sbbb
jbe
loope
aam
mov
cmc
cmp
fxch
xor
iret
in
adc
out
jge
add
js
subb
xchg
mov
mov
push
scas
pop
pop
bound
fs
mov
push
push
ficompl
orl
mov
jecxz
mov
xor
fs
cld
xchg
sti
xor
dec
xor
jne
sub
jmp
jae
fdivs
lret
sub
into
lret
outsb
test
test
xor
test
mov
ret
test
leave
out
lret
mov
ret
mov
inc
lret
fmul
jnp
and
jp
mov
ss
gs
fnstsw
xchg
fdivrs
pop
cmpsl
mov
or
sub
stc
rorb
fwait
sbb
fistpl
inc
int
mov
cmpsl
jne
mov
test
jo,pn
push
inc
addr16
lahf
pop
cmp
jo
or
sbb
xchg
fstps
add
outsl
pushf
roll
inc
dec
jbe
or
jbe
mov
stos
push
add
scas
std
loope
mov
add
fwait
cwtl
sbb
lods
or
push
lahf
out
pop
orb
iret
or
cmpsl
andl
push
imul
dec
call
insl
and
pop
in
in
sub
mov
cmpsb
jne
daa
push
fcompl
aam
cwtl
out
aad
adc
mov
jmp
cmp
dec
jl
inc
popf
pop
out
push
dec
cld
pop
and
bound
fucomip
in
or
in
push
cmp
jle
push
xor
adc
mov
addr16
pop
cld
iret
dec
ss
mov
sbbl
mov
lods
ret
push
push
lahf
popf
mov
cs
cmpsb
out
ret
xchg
sbb
mov
xchg
fwait
dec
stos
add
jnp
clc
mov
mov
test
iret
mov
leave
addb
fsubr
mov
mov
ret
jb
or
imul
outsb
pop
repz
test
sub
jae
cmp
jle
jl
ret
es
jg
pop
stos
repnz
iret
fcoml
sbb
mov
xchg
out
ret
inc
sub
dec
xchg
cltd
push
dec
add
mov
lret
sti
inc
or
repnz
test
sbb
and
or
stos
das
and
inc
jecxz
push
das
mov
js
jno
and
xor
inc
test
out
xchg
pop
int
fs
jne
cmp
push
sti
cli
loope
pop
mov
fidivs
shrl
jnp
fldenv
sub
add
aad
and
inc
jno
xor
cwtl
push
cmp
icebp
cmp
inc
stos
lret
lahf
lret
stc
lea
movsb
mov
std
shl
subb
jne
jmp
mov
jnp
rol
ja
repnz
inc
addr16
jno
jg
cmpsl
jb
sub
test
fimuls
jno
sti
push
mov
and
push
shrl
jecxz
inc
cmp
cmp
decl
test
mov
jmp
repnz
test
dec
mov
cwtd
rolb
xor
shrl
je
inc
fwait
mov
push
mov
lock
lret
int
xchg
negb
or
dec
int3
or
ja
inc
mov
xor
xchg
mov
pop
imul
ja
cmp
jle
jecxz
fwait
xchg
adc
mov
sti
jne
cli
jbe
xor
shll
and
sub
cmp
sub
mov
xchg
sbb
mov
or
fwait
sbb
push
jns
xor
imul
test
mov
pop
push
xor
mov
fucomip
pop
cmp
roll
andl
loopne
sub
add
roll
sub
int3
xorb
and
jecxz
fisttpl
push
xchg
hlt
xchg
int3
mov
aad
mov
or
mov
xor
mov
push
inc
cmp
insl
hlt
lcall
cwtl
cmpsw
mov
test
cmp
mov
mov
movsl
xchg
adc
rep
dec
inc
mov
div
dec
jno
mov
pusha
ljmp
xor
clc
mov
push
xchg
inc
mov
push
loop
repz
dec
inc
outsl
mov
sub
pop
call
ret
inc
cmp
ret
jnp
icebp
adcb
pusha
xchg
lods
cltd
out
and
xor
add
ljmp
fs
mov
inc
push
push
xor
popfw
pop
add
and
cmpsl
ljmp
adcb
adc
xor
mov
xor
lods
loop
fnstsw
fistpl
mov
dec
jp
bound
fistpll
xlat
popf
sti
jnp
rol
int
push
scas
fwait
cmpsl
mov
popf
inc
mov
pop
and
inc
lahf
xlat
sbb
cmpsl
ret
andb
or
inc
cmp
enter
icebp
in
mov
cmp
push
gs
xchg
out
ret
sub
xchg
cs
rolb
inc
mov
mov
xchg
mov
dec
stc
cmpsl
mov
and
adc
dec
lret
lret
jo
jno
cmp
pusha
iret
xchg
stos
js
mov
and
xchg
or
fidivl
int
insl
push
addr16
int
xlat
fisubl
push
insb
sbb
sub
bound
xor
mov
inc
adc
fcmovne
jg
pop
int3
jno
leave
cmp
cmc
out
popa
fsubrl
mov
repnz
pushf
push
cwtl
int
or
xor
xchg
pop
xchg
dec
shl
adc
jns
js
daa
mov
int
out
addl
int
dec
sahf
jo
pop
mov
cmp
nop
xor
or
xorb
gs
cmp
xorb
or
xchg
mov
push
and
push
iret
mov
jno
inc
in
xchg
adc
in
test
inc
mov
pop
and
fs
xchg
pop
les
mov
or
sub
andb
mov
mov
push
aam
inc
out
cmp
lret
bswap
leave
sbb
jns
negb
sbb
mov
andl
movsl
xchg
pop
dec
divl
std
iret
lock
sbb
cmc
add
mov
aam
stos
cwtl
dec
inc
fmul
xor
push
push
inc
mov
sahf
or
push
outsb
inc
mov
push
hlt
jnp
jnp
push
dec
lret
aaa
mov
or
sarb
lahf
or
scas
enter
xchg
je
xchg
pusha
mov
dec
fisttps
push
rorl
lahf
cmp
test
das
stos
sub
insb
je
xchg
movsb
mov
test
sbb
and
sbbb
ficomps
mov
cmp
jg
movsb
mov
mov
xchg
add
pusha
push
push
mov
ret
dec
imul
dec
mov
loop
lea
data16
icebp
mov
sbb
aad
or
jae
cmpsb
stos
ja
sbb
xchg
or
js
rcrb
lea
fdivr
in
arpl
addr16
push
mov
aaa
pusha
jnp
xor
es
imull
xor
inc
pop
out
popf
jno
mov
icebp
ret
shll
dec
push
sbb
mov
and
jp
jecxz
or
mov
push
cmp
or
cmp
pop
loop
jnp
inc
or
cmpsl
imul
orl
and
xchg
mov
nop
popf
movl
loop
aas
push
push
mov
add
std
clc
sub
or
push
pop
sub
xchg
fisttpll
dec
fists
inc
xchg
or
jns,pt
clc
dec
sahf
jmp
dec
xchg
divb
pop
shl
pop
scas
stos
inc
jno
scas
add
add
sti
nop
clc
mov
fucom
xchg
test
sub
dec
mov
jmp
addb
or
mov
insl
mov
punpcklbw
mov
lock
dec
shlb
test
xor
adc
call
andl
outsl
jl
cli
sub
cmpl
jmp
ret
loop
push
lcall
add
aas
pop
or
pusha
adc
nop
push
test
dec
pushf
mov
adc
sahf
lcall
jne
ss
cmp
dec
sbb
clc
mov
push
pop
rcll
mov
adc
adc
jo
mov
arpl
xchg
dec
cmp
mov
push
loopne
push
cmp
sti
mov
mov
sbbl
fiadds
cs
adc
je
outsl
outsb
xor
and
enter
inc
mov
loop
cld
cwtl
adc
dec
nop
xor
xor
pop
pop
je
lds
rcll
xchg
or
mov
stos
int
fildl
push
add
lcall
dec
jge
jmp
jmp
cmp
scas
cmp
mov
enter
xchg
xorb
mov
fcmovbe
fstpt
outsl
popf
iret
adc
xor
add
test
cli
sahf
inc
stc
icebp
andl
xchg
movsb
jmp
inc
dec
jae
pushf
js
ror
adc
sub
out
scas
jecxz
push
shlb
aas
shrl
add
add
unpckhps
fidivs
inc
inc
dec
aas
shll
and
into
imul
or
dec
shll
mov
add
out
ds
xor
pushf
dec
test
into
push
mov
je
xchg
sbb
popa
dec
call
push
xor
shlb
sti
scas
mov
adc
outsb
push
cmpsl
clc
fstpl
insl
adc
pop
cltd
pop
cmp
dec
xor
stc
pop
cmc
bsr
jne
jnp
adc
jecxz
movsl
push
lcall
dec
sub
mov
call
test
out
cltd
push
push
rorl
push
call
or
mov
repnz
repnz
mov
lret
cmp
mov
xor
adc
jmp
dec
xchg
jnp
rcll
mov
pop
sarl
fwait
push
pop
pusha
sub
jecxz
inc
sub
inc
xor
push
xchg
loope
add
ficoms
lods
add
mov
cwtl
jb
popf
mov
xchg
rorl
mov
adc
add
xor
fiaddl
mov
clc
cmpsl
push
rorb
cltd
fwait
addb
pop
loopne
add
xchg
lcall
mov
out
cmp
jge
mov
scas
pop
pop
mov
sbb
mov
pop
sbb
and
dec
jl
cmpsb
mov
adc
shlb
xor
adc
pop
mov
ret
mov
xchg
cmp
sub
mov
push
icebp
xlat
push
push
pop
pop
sarl
xchg
je
jno
xchg
jmp
in
cmpsl
jmp
popl
jp
lret
and
push
jb
sbb
ljmp
mov
adc
in
or
and
fwait
loop
cmpsl
jp
jmp
aad
lret
mov
arpl
jle
dec
and
rolb
nop
mov
call
adc
dec
test
or
decb
pop
add
mov
or
xlat
mov
push
push
ds
lock
mov
cmpsl
mov
cmp
std
shrl
cmp
popf
iret
aad
mov
jle
push
movaps
push
sub
pop
adcl
adc
add
out
cmp
imul
pop
push
mov
dec
add
shlb
adc
and
push
aas
out
clc
cvtpi2ps
push
sbb
in
adc
pop
arpl
xor
aam
pop
loope
or
mov
lcall
inc
loope
jne
int
addr16
xchg
stos
scas
pusha
xchg
insb
xchg
mov
add
sbb
mov
outsb
sahf
test
mov
pusha
pop
dec
or
cmp
xchg
rcl
mov
cli
inc
insb
or
inc
pop
mov
aaa
mov
mov
mov
out
xor
daa
mov
mov
in
xchg
out
lods
roll
sbb
lret
push
xor
aad
ret
xor
mov
bound
je
push
mov
xlat
cmp
jnp
xchg
stos
add
push
int
in
add
fwait
xchg
cmp
mov
lea
out
addr16
inc
mov
mov
dec
int3
lods
fmuls
adc
fsts
or
mov
inc
ret
js
cmp
add
xor
add
xchg
add
mov
loope
adc
fimull
or
cmc
mov
shll
ja
shll
fistpll
or
push
xor
jecxz
bound
outsl
push
push
mov
inc
push
mov
pop
xchg
jb
inc
scas
mov
mov
adc
mov
sub
or
cmpsl
mov
cmp
sub
mov
in
je
dec
pop
mov
dec
or
cmc
mov
xor
insb
cli
xchg
test
sub
mov
jp
pushf
adc
enter
addr16
pop
inc
mov
ja
mov
inc
xor
mov
shrb
std
mov
jle
and
mov
repnz
pop
out
push
xchg
or
xchg
int
in
sub
enter
mov
push
pop
and
cli
jbe
push
add
dec
jecxz
call
jmp
int
mov
xchg
loop
or
xchg
insb
pushf
shrb
xchg
xor
mov
push
lods
sub
rcrl
inc
xchg
outsb
push
sbb
cmp
scas
mov
and
pop
and
push
cmp
pop
shl
test
push
or
xlat
out
scas
cmpsl
loop
ljmp
fwait
insb
or
je
imul
ret
jo
mov
adc
jmp
cmp
andb
emms
ljmp
sbb
fnstcw
sbb
push
lods
mov
out
repz
fmulp
mov
shrb
imul
ds
mov
mov
jb
fs
sarb
test
adc
adc
dec
je
dec
xor
and
adc
fldl
add
addr16
push
lret
es
pop
and
jl
or
jb
and
pop
mov
addr16
pop
dec
jb
push
in
jp
testb
or
jne
cwtl
jp
jl
arpl
nop
aaa
bound
sub
sub
inc
shll
jge
fisubl
jbe
push
push
cli
xchg
mov
idivl
xchg
enter
cmpb
mov
sti
cld
lods
call
and
push
mov
push
or
gs
pop
movsl
stc
jb
dec
or
lods
jb
xchg
inc
sub
loopne
stos
dec
adc
jbe
push
cmp
mov
and
lahf
inc
pop
xor
ljmp
adc
iret
lret
sbb
sbb
roll
inc
dec
mov
cmc
mov
negl
sbb
pusha
cmc
clc
dec
jno
rorb
jb
add
xor
adc
and
and
aas
pushf
push
inc
and
mov
and
int
xor
mov
mov
mov
sarl
cmp
aaa
xlat
cwtl
and
lahf
jge
adcl
arpl
into
mov
repnz
cmp
repnz
arpl
mov
out
gs
test
popl
cmp
fs
popa
add
sbb
dec
lods
cmp
imull
fucomip
rdmsr
outsl
adc
enter
adc
xchg
out
xor
insb
mov
addl
or
push
adcb
icebp
aad
lods
insb
in
inc
cmpsb
cmpsl
jo
inc
jge
jbe
sub
xor
inc
xorps
aaa
xor
sub
add
ljmp
jns
sti
cmp
mov
lds
xor
adc
xor
sahf
clc
push
xchg
xor
cli
in
xchg
lock
stos
add
sub
jge
dec
jg
pop
mov
test
xchg
sub
cmp
push
dec
pop
xchg
fiaddl
mov
loope
fisttpll
mov
stos
imull
pop
fstps
mov
add
mov
dec
jae
pushf
xchg
inc
movsl
scas
nop
std
lds
inc
daa
repnz
inc
clc
dec
cmp
dec
push
mov
pop
add
pusha
inc
fsubrs
mov
xchg
inc
mov
add
aas
cltd
push
mov
pop
ja
testb
xor
xor
cmc
insb
cltd
sbb
outsb
cmp
dec
stos
jns
decb
jle
mov
xchg
add
std
pop
dec
inc
lods
sbb
sub
fcoml
or
std
mov
mov
xor
bound
xchg
sub
repnz
inc
aaa
fwait
inc
push
mov
jnp
push
scas
xchg
jbe
repz
jae
fucomi
add
call
enter
cs
stc
push
mov
aaa
jb
lods
pop
cmp
fsts
pop
adc
cld
mov
jmp
inc
lret
sub
mov
inc
pushf
in
incl
movb
mov
loop
sahf
addl
mov
dec
gs
lret
sbb
rol
rcrb
jbe
jnp
dec
jne
idivl
enter
pop
ret
sbb
jo
popl
jo
sbb
dec
mov
mov
jge
jb
lahf
xchg
lea
jbe
pop
mov
pop
xchg
lret
sahf
cmp
sub
imul
clc
or
push
iret
gs
xchg
or
fmul
sub
fldcw
roll
aad
cmp
push
pop
sti
out
push
sbbb
mov
dec
mov
fnstenv
mov
and
leave
inc
jg
inc
jb
gs
sub
or
movsl
add
cmp
daa
stos
bound
out
inc
sub
jmp
stos
div
adc
aad
pop
inc
icebp
mov
mov
int
xchg
adc
or
mov
daa
cmp
mov
insl
add
mov
xor
and
imul
inc
cmp
sub
dec
insb
push
mov
int3
aam
rorb
cltd
mov
cmp
in
and
loope
ss
popa
mov
mov
and
cs
xor
popa
scas
mov
mov
loop
hlt
setne
sbb
push
jl
sub
dec
push
pop
fadd
xchg
adc
xor
fcoml
out
adcb
cld
mov
xchg
fisubrl
fsubr
xchg
push
adc
push
je
fsubrs
sbb
xchg
push
outsb
lods
pop
cmp
bound
lret
aaa
mov
dec
out
inc
sub
cmp
test
inc
outsb
adc
insl
cmp
sub
lret
fwait
imul
jecxz
aaa
mov
and
xchg
dec
mov
or
pop
xchg
in
mov
sub
in
sub
test
dec
and
jmp
push
js
out
mov
or
fwait
pushf
scas
js
in
cmp
inc
lds
faddp
cmp
gs
add
movsb
or
xor
dec
ds
fisttpl
push
push
aaa
xchg
bound
in
add
push
mov
sub
mov
pushf
inc
inc
cmp
outsl
pop
shll
xchg
jo
jns
pushf
movsb
mov
jp
adc
pop
cmpsb
roll
std
inc
fisubrl
fnstcw
mov
int3
jmp
inc
xor
ss
cmp
out
jge
add
movsb
sahf
outsb
jae
test
out
mov
call
dec
mov
loope
mov
ss
pop
or
pop
loope
jp
sub
xchg
inc
cld
push
mov
mov
cmp
mov
cltd
lods
adc
or
andb
pop
xchg
fsubl
xor
iret
cwtl
test
arpl
add
ud2
push
mov
int
int
jbe
cmp
xchg
pop
and
gs
jmp
pop
inc
ds
add
adc
repz
dec
aas
sti
ljmp
jecxz
xchg
out
cmp
and
cltd
lock
jmp
sbb
movsb
sub
cmpsl
xorl
jg
pop
shll
shl
cli
out
andl
andl
imul
or
push
add
aad
dec
lea
dec
pop
bound
xor
add
mov
add
mov
test
sub
movsb
jb
fwait
movaps
addr16
into
cmp
jne
fnstcw
addb
arpl
push
dec
xchg
inc
mov
add
sub
gs
adc
push
and
mov
subb
hlt
rclb
out
into
pop
push
xchg
mov
pmaddwd
cmc
mov
mov
outsl
inc
mov
out
mov
call
int3
popa
jbe
in
lods
mov
and
jb
inc
mov
ret
mov
cmp
int3
xlat
inc
xchg
sub
aaa
stos
aaa
pop
adc
addr16
mov
ds
cld
lea
ljmp
sbb
and
in
xor
jmp
inc
jge
andl
mov
scas
dec
cld
jbe
imul
rclb
repz
bound
fldcw
sub
mov
jle
cmpsl
mov
cmp
cmp
int
adc
lods
outsl
push
mov
sahf
and
imul
dec
jno
push
fistpll
mov
sub
testb
jle
push
je
adc
push
inc
cmp
jg
fwait
sahf
xor
push
jecxz
adc
pop
ja
jnp
mov
cmp
nop
test
popf
mov
mov
mov
out
cmp
sbb
push
mov
jmp
clc
mov
pop
dec
mov
xchg
lds
push
xor
jo
mov
inc
push
mov
and
data16
mov
into
xchg
fisttpll
mov
pop
lock
push
adc
lahf
cmp
push
inc
mov
xor
ficomps
out
mov
in
push
mov
adc
pop
inc
xchg
rolb
jg
inc
xor
adc
sub
pop
stos
into
dec
xchg
sbb
adc
fnstenv
sub
movsb
jbe
aad
xchg
rcrb
pop
mov
data16
xchg
push
insb
sti
mov
push
sub
rcr
mov
mov
rcr
int
jg
cmp
sbb
fldenv
adc
or
dec
cmpl
in
adc
push
add
enter
popf
mov
sbb
jmp
data16
aam
cwtl
jmp
mov
addr16
imul
adc
sub
mov
or
or
js
idivb
jmp
push
cwtl
xor
mov
inc
divb
js
ja
sbb
jmp
dec
shrl
jle
pushf
add
xchg
jle
jl
inc
popa
int3
add
pop
xor
mov
or
pop
imul
stos
cmp
xchg
sarb
xor
pop
lret
popfw
fadd
cmc
and
push
sbbb
add
scas
call
stos
or
movsb
mov
cmpsb
out
fcmove
push
and
xacquire
repnz
dec
shr
pop
outsb
nop
push
sbb
cld
jne
outsb
mov
dec
popf
jae
push
ja
push
rcrb
or
xchg
mov
xchg
mov
fs
jb
jle
xlat
ss
xchg
cmp
stc
jl
loop
in
jnp
int
dec
movsl
dec
jae,pn
cmp
out
mov
mov
and
mov
call
mov
or
dec
pop
clc
push
or
das
mov
lods
xorb
movb
jb
inc
ja
fcmovu
lea
xchg
sbb
adc
lret
cmpsl
push
add
les
jl
push
and
push
adc
repnz
out
jl
je
mov
jnp
inc
gs
arpl
cmp
test
js
jb
adc
add
push
xchg
lods
add
daa
dec
mov
adc
rclb
inc
sub
lahf
test
jbe
test
dec
fldcw
or
in
jmp
sbb
imul
clc
pop
adc
mov
repz
jne
outsl
sub
add
dec
pop
repz
arpl
shll
cmpsb
pop
lahf
and
inc
dec
enter
sbb
mov
int
stc
pushf
mov
lret
sarb
call
movsb
adc
xchg
imul
sbb
mov
sbb
pop
into
sti
xchg
ja
inc
sub
hlt
lea
xor
hlt
ret
aam
lods
movl
es
jb
stc
adc
mov
cmp
mov
pop
xor
pop
push
ja
dec
xor
xchg
sbb
add
cmp
mov
mov
add
ficomps
test
insl
and
aad
pop
mov
adc
cmp
mov
and
popf
sub
inc
out
push
les
les
add
or
push
aaa
mov
mov
fs
jns
lahf
push
add
inc
mov
pop
jb
mov
dec
push
adc
cmpsb
outsb
push
fisubrs
jno
xor
out
mov
enter
aad
sbb
ss
and
leave
lock
sbb
fstpt
mov
sahf
daa
fsubrl
sub
test
mov
xchg
xchg
data16
js
mov
mov
mov
test
lahf
jl
imul
or
sub
adc
pop
in
aad
xchg
movsb
pop
hlt
cmp
or
fildll
adc
nop
ljmp
pop
cld
int3
dec
push
pop
or
push
pop
in
rol
pop
pop
dec
stos
sub
dec
push
dec
xlat
int3
loopne
mov
idivb
inc
cmp
out
test
cmpb
mov
stos
mov
xchg
pop
inc
xchg
in
popf
out
repz
dec
inc
mov
push
fidivl
lea
cmp
dec
and
mov
fwait
ror
ljmp
shll
push
sub
aad
ja
notb
hlt
fimull
mov
fnsave
push
lret
fsubl
cmp
orw
hlt
mov
cmp
fs
out
or
push
scas
into
pop
cmpsw
xchg
mov
add
popl
arpl
flds
enter
addb
add
lods
jg
sbb
scas
dec
les
jb
jecxz
inc
test
in
push
imull
cmp
xchg
sar
aam
fldcw
push
xchg
outsb
push
ret
push
jno
test
rorl
xlat
sbb
es
cmp
sti
mov
sub
push
sbb
fwait
int
inc
mov
mov
xor
iret
and
cld
push
inc
cmc
pusha
addr16
inc
es
sahf
and
mov
sbb
pop
sbb
push
xor
mov
pop
fadd
inc
lret
cmp
jl
movsl
pop
sti
xlat
add
mov
pop
in
push
inc
pushf
les
push
dec
ss
cmp
in
in
pushf
sub
sahf
inc
loope
jg
stos
je
or
in
mov
pop
xlat
sti
mov
sub
lock
icebp
iret
cmp
outsl
jecxz
xchg
cmpsl
jp
out
test
xchg
and
lcall
fnstcw
xchg
stos
pop
dec
and
jle
add
int
loope
xor
jb
and
call
xchg
aad
into
std
sbb
lods
xchg
negl
enter
push
sarb
jecxz
push
adc
rcr
ja
add
mov
cmp
dec
mov
pop
out
adc
test
lahf
loope
xchg
cmc
sbb
xor
stos
add
fimuls
sbb
dec
icebp
pop
stc
push
div
dec
and
cli
lods
push
scas
test
test
stos
ds
leave
dec
cwtl
test
dec
sbb
push
insb
inc
cmp
stos
pop
mov
shll
loop
inc
pop
xchg
inc
lock
and
lock
push
dec
mov
popa
stos
or
mov
jnp
pop
xchg
jmp
out
outsl
daa
fidivrl
testb
gs
pop
push
ret
vcomisd
mov
orl
cs
fucomip
xchg
cmp
mov
lods
and
jmp
add
fisubl
pusha
push
adc
and
fadd
or
cmpsb
outsb
in
scas
mov
jecxz
lret
cmpl
push
adc
add
lods
es
cld
cwtl
mov
mov
stos
cld
and
cmpsl
clc
mov
daa
lock
sti
xlat
jbe
into
jmp
arpl
cwtl
das
jne
ror
test
imul
movaps
hlt
call
xchg
in
lcall
inc
xor
or
and
mov
or
fs
xor
jno
imul
fxtract
loopne
hlt
lahf
xchg
movsb
or
aam
xchg
pop
inc
pop
pop
mov
addb
leave
mov
cmc
cmpsb
mov
in
push
testl
leave
mov
cmp
jge
sbb
push
inc
sbb
or
and
and
cmpsl
movsb
dec
insl
test
imul
pop
dec
pushf
insl
and
sarl
jnp
sub
sbb
out
ret
imul
xor
popa
xor
sbb
cmp
icebp
pop
mov
pusha
mov
inc
gs
pop
sahf
pushf
fistpll
fs
iret
hlt
cmp
xchg
aad
mov
pop
dec
cli
into
cmp
into
jp
cld
adc
mov
mov
mov
es
dec
sub
add
test
and
loope
add
sahf
xchg
mov
xor
jno
xchg
fistl
and
mov
pusha
inc
sahf
xchg
je
stos
in
sub
ror
int
mov
out
jge
repnz
mov
int
je
pop
mov
mov
pop
int
adc
cli
inc
jne
scas
sarb
loopne
push
into
out
mov
push
sbbb
imul
or
jo
jnp
arpl
mov
in
pusha
or
imul
subb
or
pop
pop
or
aas
clc
imul
jl
popa
jne
mov
push
mov
push
fwait
sti
jecxz
push
cltd
popa
loop
mov
out
not
aad
in
out
push
inc
popa
addr16
mov
insb
sbb
sbb
fisttpll
push
jbe
mov
push
xchg
hlt
movsb
stos
pushf
inc
call
pop
push
mov
je
push
mov
inc
sahf
inc
push
adc
icebp
mov
mov
mov
fists
sub
push
ja
call
cmpl
mov
add
cmp
push
lret
nop
sub
ja
std
stos
lret
adc
jmp
or
cwtl
outsb
sahf
popl
mov
test
xorb
cmp
leave
call
out
stc
inc
xor
and
cmpl
mov
daa
hlt
adc
jae
inc
stos
inc
jno
push
inc
or
int
push
inc
sbb
and
insb
pop
inc
clc
stc
xchg
or
xor
adc
daa
loopne
lret
pop
scas
in
push
outsb
je
dec
xor
inc
popa
out
cmpsl
xor
push
adc
dec
jl
jmp
stos
sbb
dec
dec
leave
add
jmp
dec
xchg
xchg
imul
dec
cs
jae
jb
ret
push
dec
push
sbb
sbb
sbb
xor
ret
sahf
pop
insl
and
push
and
mov
outsb
jmp
inc
fistpll
mov
jnp
jnp
mov
pop
adc
push
int
dec
js
push
gs
xorb
lahf
mov
adcl
xorb
inc
cmp
and
jbe
push
js
xor
and
repz
adc
push
andl
dec
mov
mov
insl
xchg
jmp
fxch
sbbl
fs
mov
dec
cmc
sub
pop
sbb
xchg
sarb
xor
je
faddl
inc
xchg
sti
shrl
push
adc
sti
je
stos
cs
insb
mov
xor
movsb
add
push
pop
dec
sub
xor
mov
push
or
add
in
loopne
in
add
popf
test
inc
or
mov
jae
push
sbb
inc
mov
xor
xor
mov
add
cmpsb
mov
loope
fiaddl
pop
xor
jmp
mov
jg
into
lds
cmp
sahf
pop
fstl
jecxz
pushf
jne
mov
aas
sbb
in
test
ljmp
and
cmp
jbe
sbb
das
in
push
icebp
pop
jno
push
jg
sub
lea
clc
imulb
push
cmp
ss
xchg
pop
mulb
popa
jp
adc
outsl
dec
sub
push
jmp
jecxz
mov
jmp
ds
add
pusha
shl
pop
jb
clc
push
fisubrl
push
sbb
push
cli
mov
or
les
add
pusha
daa
shrb
pop
pop
sbb
aas
aaa
or
sub
cmp
push
and
or
outsb
popa
and
scas
pusha
mov
dec
or
adc
push
push
mov
icebp
jnp
fsts
call
ds
ss
jmp
in
pop
sub
aam
imul
popf
shll
sahf
jge
push
mov
stos
insb
movsl
daa
cwtl
jmp
and
clc
testb
pop
mov
xchg
nop
pop
into
insl
arpl
dec
test
sbb
filds
dec
add
xor
orl
mov
jle
xchg
out
clc
aad
sbb
stos
ja
push
ret
sbb
mov
xchg
xorb
and
fistl
cmpsb
fs
jecxz
dec
ret
sbb
shlb
test
fs
push
mov
imul
in
imul
or
leave
cwtl
mov
or
mov
pop
mov
xor
lret
dec
cmp
mov
in
cmpsb
sub
je
mov
sbb
mov
xchg
mov
shll
dec
call
stc
pop
adc
fsts
add
jle
negb
xor
cltd
xchg
push
xchg
cmp
mov
fstpl
in
mov
gs
xchg
mov
cmp
out
mov
movsl
cmp
lcall
jb
cltd
sbb
or
mov
mov
das
sarl
negl
mov
mov
aaa
push
adc
adc
pinsrw
pop
cld
dec
js
push
pop
pop
shll
lods
mov
push
fdivs
inc
push
and
mov
shll
out
test
dec
push
and
lea
in
push
and
movsb
xor
sbb
adc
inc
aaa
jmp
jle
add
sub
movsl
cmp
andb
leave
mov
mov
iret
mov
movsl
test
add
xchg
pop
sbb
cwtl
xchg
invd
in
and
out
push
ret
sbb
out
cmp
dec
and
sub
ret
aad
mov
stos
daa
pusha
addr16
call
hlt
dec
lret
and
cmp
inc
pop
push
popa
dec
cmp
lahf
shl
aad
xchg
inc
pop
jb
scas
mov
mov
push
mov
xchg
xlat
outsl
inc
mov
mov
call
push
stos
insl
or
into
sahf
jge
push
xchg
jmp
lcall
leave
loop
stos
mov
jo
mov
mov
jl
xor
mov
inc
out
push
push
push
pop
xor
enter
shll
in
arpl
les
jne
sbb
cmp
or
cmp
arpl
loopne
mov
xchg
xor
pavgb
xor
stc
adc
add
push
movsb
xchg
xor
ds
filds
mov
sub
xchg
in
fdivrl
cmp
mov
xlat
nop
pop
mov
mov
push
das
mov
test
aaa
cmp
js
in
add
jb
test
sbb
sbb
xor
repz
call
add
pop
pop
or
mov
out
das
insl
lods
pop
jmp
xor
or
xor
repz
push
xchg
in
int3
and
dec
dec
insl
test
mov
std
test
push
xchg
push
mov
lret
and
frstor
outsb
push
outsl
stc
notl
or
push
adcb
xlat
sub
sub
and
sub
xor
pushf
fs
mov
xorl
cld
push
or
xchg
int
mov
insl
jbe
inc
xor
fmul
xchg
sub
shlb
jl
cld
push
sub
inc
pop
mov
jmp
clc
sub
adc
movsl
repz
xor
sub
fidivs
and
int3
lret
fstpt
int3
daa
adc
iret
pop
scas
movsb
inc
xchg
lcall
dec
fadds
xchg
in
mov
xlat
jno
jae
dec
mov
push
jp
add
inc
sub
test
pop
insb
in
scas
and
ss
leave
add
out
dec
test
inc
mov
xchg
push
xor
mov
cwtl
icebp
stc
xchg
and
pop
xchg
xchg
push
lcall
es
les
inc
lret
sahf
mov
pushf
push
sbb
fs
sbb
repz
push
xor
andb
sbb
adc
dec
fisubrl
xor
jecxz
push
mov
and
or
adc
adc
jae
int
pop
jp
pop
sub
rcr
mov
aam
dec
xor
sbb
cltd
jo
dec
push
add
mov
mov
pop
and
xchg
inc
fdivrl
in
mov
pop
lcall
mulb
out
fs
cmpsl
int3
out
jo
sahf
dec
scas
mov
mov
mov
cmp
imul
fmuls
inc
fnstenv
and
orl
fs
imul
cmpsl
out
out
xor
xor
cs
sbb
xchg
cmp
repz
mov
outsl
or
out
push
mov
mov
and
push
inc
jne
mov
or
popa
leave
out
iret
das
cmpsl
pop
xchg
mov
fnstsw
lret
jg
sahf
and
sbb
and
mov
fdivrl
test
pushf
pop
arpl
jg
and
out
rorb
jp
cmp
pop
testl
mov
cmp
jae
or
push
add
xor
mov
inc
in
pop
push
jl
lea
dec
cmc
push
push
mov
clc
xchg
sbbl
pop
aam
loope
pop
out
cmpsb
in
bound
xchg
xlat
jno
pop
sbb
nop
pop
lahf
xchg
cwtl
mov
inc
mov
stos
and
in
push
addr16
repnz
xchg
je
push
adc
std
mov
xchg
data16
sbb
mov
pop
cmp
mov
xchg
xchg
inc
stos
xchg
xchg
pushf
add
cs
lea
dec
push
add
fsubs
dec
jp
ss
mov
icebp
adc
dec
sahf
jmp
mov
jns
pop
call
xchg
clc
fcoms
jmp
out
int
lds
movsb
pop
inc
push
or
mov
out
fstl
and
ja
es
jo
repnz
push
daa
stc
sub
mov
mov
lcall
pop
sahf
sub
in
inc
mov
xlat
mov
iret
vcvtss2sd
mov
mov
and
lods
xor
fsts
xchg
fadd
icebp
inc
xchg
dec
adc
and
dec
push
fnstcw
aam
push
lret
ds
jp
xchg
mov
pusha
iret
lock
mov
mov
je
test
mov
aam
arpl
mov
sahf
lds
add
stc
call
loop
xor
roll
pop
pop
loope
aas
out
and
outsl
sbb
jmp
insb
pop
inc
push
lret
and
inc
arpl
fmuls
pop
push
repz
cmp
jbe
push
push
rolb
fcomps
lods
xor
imul
xchg
shll
sub
sbb
rorb
mov
lahf
adc
cwtl
lahf
cmp
in
mov
mov
pop
ss
inc
pushf
xor
arpl
ds
and
jge
jne
and
push
daa
pop
mov
push
mov
aam
mov
aas
xor
test
testb
ljmp
ret
shll
and
lea
pusha
cli
xor
mov
or
sub
and
dec
mov
notb
xchg
add
cs
in
ds
movsl
scas
mov
fs
xor
fcomps
inc
in
js
sbb
shr
ljmp
jne
adc
fs
aam
sbb
mov
scas
cmpsb
pop
inc
add
add
ret
test
shrl
adc
out
fisubl
aad
adc
pop
int3
cmp
xchg
mov
dec
mov
pop
mov
xor
out
clc
cmp
outsb
divl
mov
lret
push
test
xor
pop
add
arpl
xchg
push
cmp
push
mov
push
cmpsl
or
fwait
and
mov
sbbb
cwtl
stos
fdivrl
dec
ljmp
in
test
mov
out
jp
or
mov
sub
push
mov
pop
mov
mov
dec
mov
mov
xchg
rclb
ss
sbb
lea
aaa
test
xchg
inc
stos
sub
addr16
sub
push
movsl
add
test
popf
cmp
rorl
popa
xchg
cli
rcrb
and
pop
rcr
lods
push
cs
mov
mov
loop
pop
shll
mov
pop
cmp
jo
add
or
addr16
mov
addl
or
mov
jbe
scas
leave
inc
cmp
and
adc
sbb
add
bound
add
cmpsl
or
add
and
das
movb
and
aam
gs
jnp
cmp
jmp
and
ljmp
daa
xchg
sarb
pop
fnstenv
fistpl
jne
ljmp
fstpt
jnp
mov
shr
jmp
pop
in
sub
fcomp
popa
in
mov
xchg
js
fwait
adc
jmp
sarl
cmpsl
mov
pop
jns
add
dec
rcr
jle
cmpsl
test
addr16
std
mov
pop
dec
xchg
dec
sahf
sbb
xor
adc
js
imul
mov
mov
stc
dec
ljmp
add
pushf
daa
call
cld
push
jo
xchg
rcl
sbb
lods
mov
xorl
pop
or
pop
pusha
aad
fdivl
fisttps
xor
test
cmpsb
mov
xor
sbb
out
adc
mov
mov
adc
imul
leave
pop
aas
or
mov
pop
imul
lret
sbb
sbb
jle
pop
mov
out
stc
mov
test
ja
push
in
cmpsb
fwait
add
pop
cltd
ja
icebp
or
and
push
pop
xor
aaa
mov
shll
cmp
popf
popa
ds
mov
enter
mov
aas
push
add
je
das
jbe
jb
mov
or
lahf
xchg
shrb
iret
xchg
bound
and
int3
mov
sti
jp
add
mov
inc
sbb
lret
xchg
mov
adc
jl
out
dec
scas
and
fs
je
aad
push
jecxz
clc
call
cltd
aaa
stc
jo
idivl
cmp
dec
mov
and
jmp
jp
push
xorb
stc
imul
push
movsl
sbbl
sbb
sbb
mov
std
pop
jg,pn
cwtl
and
fcmove
orl
mov
fsubrl
xchg
les
stos
leave
imul
aad
jp
js
sbb
icebp
mov
ret
jle
mov
add
mov
adc
sti
div
jmp
pusha
jno
int3
jp
imul
jo
jge
inc
and
leave
pusha
rcrl
fcoml
push
dec
push
and
xor
jmp
ss
inc
fisttps
outsl
adc
sti
cmc
cmp
aam
pop
scas
and
xor
mov
xchg
or
xchg
je
add
xor
leave
cmc
jg
or
int
xlat
ficoms
mov
adc
cld
push
int
pop
cli
sti
loope
and
loop
mov
ja
or
jne
sti
sub
cmc
rcrl
sub
jb
jbe
adc
jmp
addr16
in
jg
sbb
pop
insb
rcll
sbb
cmp
mov
sbb
jmp
fldt
cmp
lcall
mov
repz
mov
jmp
popa
lock
pop
and
outsl
dec
orl
es
mov
pop
bound
stc
das
add
inc
jl
push
cld
aas
mov
int3
cli
push
clc
aaa
addr16
aaa
adc
sub
inc
adc
pop
or
push
lret
stos
dec
push
push
xchg
mov
arpl
and
mov
aas
mov
inc
cmp
push
pop
dec
inc
jnp
sbb
sbb
add
adc
into
dec
cmpsl
sahf
cmp
sahf
dec
jo
mov
lods
fisttpl
dec
movsl
shl
sub
cli
das
test
in
shl
or
test
aas
aaa
xchg
scas
ja
push
nop
mov
sbb
xchg
cmp
and
pop
ret
xchg
push
imul
adc
xor
xchg
xchg
xchg
jb
stos
sub
push
adc
mov
aam
inc
mov
rol
jl
xchg
or
sub
lcall
xor
add
iret
pop
ds
out
mov
dec
mov
in
aam
ljmp
mov
add
lret
or
mov
es
mov
or
mov
sub
outsb
sub
jno
fcmovbe
mov
jo
jb
mov
pop
lea
cs
mov
mov
lahf
ret
or
stc
add
stos
mov
rcll
fcmovbe
pop
ja
cmc
int3
add
xchg
cmp
sti
inc
mov
jnp
cmp
mov
xchg
imull
jge
ljmp
mov
xchg
mov
in
out
iret
jns
mov
cmc
sbb
cltd
dec
shll
xor
subl
std
pop
push
add
and
das
jmp
and
jg
mov
lock
jbe
jle
xchg
sbbb
mov
push
add
out
dec
test
stos
cmpsl
popf
push
push
inc
or
int3
mov
mov
loopne
jns
js
push
jnp
mov
into
push
add
xor
pop
and
lret
fld
mov
ret
data16
mov
stos
pop
add
mov
test
in
popf
push
push
out
sub
cmpsl
jne
push
mov
adc
or
dec
cs
mov
fcomi
outsl
xchg
jbe
mov
stos
repnz
mov
lods
pusha
dec
fwait
call
adc
test
sub
jecxz
outsb
mov
push
pop
add
into
push
aad
aam
cltd
jnp
or
stc
mov
inc
dec
xchg
bound
jl
add
xor
ret
xchg
into
push
cli
ret
sbb
pushf
xor
dec
fs
shll
ret
sbb
clc
and
mov
or
xchg
push
pushf
jge
fcomps
lahf
fs
sbb
sbb
stos
and
jmp
dec
cmp
inc
xor
cmp
repnz
lods
push
bnd
inc
jne
add
loope
bswap
cld
jecxz
xchg
xchg
push
int3
pop
sbb
mov
mov
mov
xor
loope
iret
mov
mov
mov
ds
pop
and
mov
fistps
xor
pop
xchg
aam
sub
icebp
xchg
jl
decl
sub
jp
mov
test
push
idivb
jg
fcompl
mov
add
bndstx
xor
nop
add
cmp
inc
cmpsb
pop
test
mov
daa
jne
inc
cld
pop
addr16
data16
mov
mov
mov
mov
rclb
into
push
decb
aaa
mov
or
divl
repnz
push
sahf
js
std
ss
sarb
push
mul
inc
add
out
cmp
jns
and
inc
bound
lock
and
loopne
nop
inc
mov
mov
mov
repnz
test
fcoms
or
mov
pop
cmp
loop
and
fadds
or
lds
idivl
addr16
jo
or
imul
jle
and
adc
xchg
mov
sub
dec
shrb
sbb
push
xchg
gs
xor
dec
in
jb
inc
inc
into
xorb
pop
fwait
jbe
icebp
jbe
adc
xor
sbb
insl
pop
adc
jg
dec
shll
cmpsl
pop
bound
sbb
movsl
cmp
loop
xchg
sub
add
mov
cld
test
stos
sbbl
xchg
sti
orl
sti
push
ror
inc
aaa
shlb
and
pop
xchg
adc
pop
pushf
add
xor
sbb
xchg
mov
or
inc
xchg
ljmp
lret
or
int3
add
lcall
push
and
mov
fmuls
sub
sti
and
fisubrs
cmc
sbb
sbb
shlb
push
movsl
xor
idivl
dec
adc
dec
movsb
pop
ror
push
push
fidivrs
sub
lret
rcrl
or
push
push
lret
jmp
push
push
pop
mov
xor
sahf
mov
dec
or
push
cwtl
jbe
loopne
mov
in
loopne
jmp
mov
pop
fisttpll
jns
or
ret
out
in
xor
and
mov
push
mov
mov
mov
pop
push
or
stos
gs
sbb
shlb
jp
add
push
mov
dec
and
xchg
ljmp
lods
dec
ret
xchg
sub
mov
push
lods
or
ja
or
and
ljmp
ss
mov
test
xchg
lods
scas
push
mov
in
das
inc
mov
push
fidivs
aaa
lahf
inc
mov
addr16
mov
mov
in
jge
mov
add
and
or
jo
aad
jmp
cld
insb
mov
or
mov
sbb
arpl
push
inc
dec
adc
add
fxch
dec
add
jb
xor
pusha
sbb
add
scas
lock
js
shlb
sub
and
out
cwtl
negb
sbb
fsubr
lods
dec
dec
push
xor
cli
outsl
fs
or
pushf
pop
or
push
cmp
fcomps
or
fs
push
push
std
xchg
test
scas
cmpsb
pop
fisttpll
in
ja
out
stos
pop
cmp
mov
jle
mov
xorb
ss
mov
lock
loopne
jno
cmp
gs
sub
xor
cmp
test
lea
mov
mov
aam
cmp
sub
test
xor
lds
inc
and
mov
xor
dec
mov
xchg
jns
roll
lods
pop
shrb
dec
aas
shl
repnz
pop
lea
sbb
inc
cmp
adc
add
dec
aas
shrb
daa
test
movsl
adcl
sbb
test
test
mov
insl
xor
popa
cmpsb
loopne
adcl
cs
rorb
inc
jle
sbb
mov
lods
push
jne
inc
shlb
cld
ret
xchg
mov
mov
hlt
sbb
or
xor
lcall
daa
pop
outsb
arpl
pushf
sti
hlt
outsb
jecxz
adc
fldt
pop
bound
and
mov
cmp
pop
pusha
insl
not
mov
cmp
xor
xchg
outsb
push
cmc
mov
les
lock
scas
pop
jo
mov
mov
lods
inc
mov
push
sub
lcall
add
and
or
push
or
pop
mov
fs
call
lds
hlt
movsl
mov
lock
inc
sub
cmpsl
or
pop
int
in
cmpsb
stos
jge
adc
mov
faddp
jne
and
and
push
jp
int3
test
aaa
cmpsb
inc
mov
mov
push
and
jne
xchg
mov
push
add
add
loope
enter
and
sbb
rcl
mov
test
xor
je
test
pop
lcall
je
sbb
pop
push
divl
xchg
outsl
dec
jl
or
fs
out
xchg
loope
ret
sub
mov
mov
pop
sbb
stos
add
repz
loope
cmp
dec
test
jbe
add
xor
out
enter
cmp
bound
es
inc
adcb
aad
mov
inc
loop
xor
int
sub
cs
rcll
and
jo
and
pop
mov
scas
mov
push
mov
mov
inc
dec
mov
xchg
pop
push
sbb
cmp
and
adc
mov
mov
outsl
mov
loope
adc
rolb
jmp
pop
add
sbb
sbb
cmp
scas
or
insl
jl
test
or
sub
sub
cs
std
xor
add
and
cltd
add
cmp
divl
in
pop
inc
mov
mov
mov
sub
dec
jnp
xor
loopne
in
fs
mov
sub
je
bnd
jns
add
jae
movsb
adc
sahf
pop
xor
mov
sub
mov
rorb
shrb
jecxz
cld
and
xchg
fimull
dec
sub
stos
push
xlat
inc
inc
mov
daa
mov
mov
pop
jbe
jae
inc
jb
xor
jbe
cmc
adc
out
ss
inc
lret
repnz
sub
dec
in
shlb
repz
jg
cltd
jbe
inc
leave
mov
jge
mov
xchg
cmp
inc
sbb
test
jmp
xor
dec
ret
mov
aad
insl
int3
sahf
jecxz
push
lods
dec
pop
dec
data16
sbb
push
adc
push
add
fisttpll
sbb
jns
orl
mov
xlat
scas
into
loopne
pop
mov
int
inc
inc
adc
jne
xchg
sbb
xor
mov
push
cld
cmp
inc
mov
mov
rolb
jmp
xchg
add
int3
cs
push
adc
repnz
nop
xchg
cli
xchg
outsl
jne
mov
icebp
aas
loopne
icebp
fmuls
insb
cmpsl
cmp
into
adc
in
adc
aas
sbb
push
in
aaa
or
mov
lods
lods
in
jmp
out
int
gs
jmp
jne
jo
mov
lahf
push
push
daa
push
in
adc
out
loopne
or
dec
mov
sbb
cmp
cmp
movsb
xor
rcl
sti
pop
or
mov
sbb
or
pop
inc
mov
jbe
jnp
dec
inc
imul
scas
add
in
loopne
sbb
nop
mov
mov
pop
cli
pop
and
test
cmp
pop
fsubs
popf
testl
xlat
xorl
push
mov
fs
jg
mov
lds
stos
add
imul
and
lret
ffreep
add
popf
ficoms
xorl
jg
daa
popl
cmp
cmp
pop
jp
add
addb
and
scas
subb
jge
add
mov
adc
sub
cmp
mov
je
jo
movsl
out
addr16
fcomi
push
cmpsl
icebp
sbb
popf
mov
inc
clc
in
call
dec
mov
add
mov
push
sbb
sub
pushf
push
out
lahf
loopne,pt
jno
pop
or
inc
jne
ss
pop
mov
rorb
dec
inc
dec
mov
and
push
xchg
inc
add
nop
fwait
adc
imul
loope
sbb
or
icebp
ja
jo
add
iret
sub
or
add
cmp
out
adc
andl
repnz
fisubrl
imul
mov
out
sub
addr16
add
and
jge
inc
pop
stos
xchg
xchg
out
push
mov
fdiv
clc
mov
test
js
leave
int3
cmp
fnsave
pusha
adc
inc
inc
movsl
roll
push
gs
scas
arpl
add
mov
mov
test
dec
jno
stc
xchg
lea
adc
dec
aaa
pop
xor
outsl
sti
out
outsl
cmp
and
dec
stc
lret
mulb
sahf
insl
xor
xor
jle
dec
sbb
jb
mov
inc
xor
inc
sar
sbb
push
xchg
in
mov
push
stc
xchg
cwtl
dec
iret
jmp
fdivrl
add
fidivs
and
sahf
mov
sub
arpl
jg
mov
popf
lea
and
fbstp
sbb
mov
push
mov
ret
cli
dec
jne
out
mov
sbb
lods
lcall
mov
xchg
insl
std
push
push
scas
mov
nop
inc
insb
mov
pop
aaa
arpl
dec
sbb
lret
lds
mov
ret
std
cmp
imul
adc
js
je
mov
pop
and
jg
cmp
add
dec
lahf
jp
xchg
negl
cmp
cmp
jne
mov
add
leave
inc
lret
ja
push
nop
xchg
cmp
jns
arpl
add
add
mov
cmp
scas
inc
jg
inc
shlb
mov
in
xchg
mov
inc
xor
inc
sub
add
lret
mov
push
movsb
mov
adc
or
mov
push
inc
sbb
inc
jecxz
and
shlb
add
call
daa
pop
scas
dec
mov
pop
aaa
cmp
ljmp
test
cmp
fmul
movsl
jne
mov
scas
mov
sbb
mov
add
std
xchg
sub
jb
test
mov
cmpsb
xor
or
nop
pushf
or
pop
mov
jmp
push
std
outsl
mov
nop
pop
sub
out
ljmp
cmp
lahf
and
js
fildll
sub
test
nop
and
xchg
cld
int
ljmp
inc
adc
mov
xchg
or
lcall
lods
cli
mov
pop
and
mov
dec
dec
adc
rclb
cltd
pusha
scas
add
cmp
icebp
insb
dec
mull
inc
imul
push
mov
pop
cltd
in
mov
sbb
sti
pop
imul
dec
mov
mov
or
lcall
mov
pop
loope
imul
ljmp
xor
test
leave
sbb
cmp
imul
pop
insl
push
xchg
cs
jbe
sbbl
aaa
es
loopne
xchg
aad
cmp
mov
mov
push
cwtl
stos
js
leave
jge
sahf
cmp
imull
cmp
pop
add
lahf
rolb
sbb
xor
push
orb
and
adc
mov
dec
stc
dec
mov
dec
ja
rorl
rcrb
jne
dec
clc
xlat
popf
addr16
sbb
rclb
mov
test
shlb
pop
lret
int
out
shrb
filds
lcall
xchg
imul
xor
xchg
and
push
mov
pop
mov
xchg
inc
rorl
add
test
mov
xor
pop
or
sub
jg
les
inc
adc
adc
or
push
bound
out
fdivrs
adc
aad
xlat
std
filds
xor
pop
inc
arpl
in
lods
es
mov
filds
dec
pop
mov
pop
pop
sti
cli
dec
cmpl
cmpsb
adc
sbb
push
lret
loope
cltd
inc
adcb
dec
sarl
mov
aas
clc
adc
in
cmp
adc
movsb
inc
into
mov
pop
xchg
and
mov
push
jle
test
and
outsl
aas
cmp
outsl
mov
popf
inc
out
mov
sub
push
jmp
jmp
or
dec
loope
dec
into
xorl
out
sbb
test
push
mov
or
jge
fwait
jg
sbb
add
sbbl
inc
clc
jo
fwait
push
and
shlb
fwait
or
dec
mov
and
into
sbb
out
push
lcall
jbe
in
ss
shrb
inc
rcr
loopne
and
lret
sub
jbe
daa
and
cmpsl
out
push
xor
dec
cmp
and
addb
iret
jecxz
xchg
jge,pt
xchg
dec
sub
or
adc
and
add
jnp
mov
aad
xchg
popa
lcall
push
out
icebp
jae
in
cmp
cmp
je
add
jl
and
sahf
int3
repnz
push
sbb
mov
add
sub
pop
pop
addb
gs
pop
inc
ss
dec
cmp
ss
mov
mov
fnstsw
jg
push
outsl
mov
ss
fimuls
xchg
jmp
jb
sbb
xchg
scas
in
sahf
arpl
or
mov
adc
sub
pop
pop
shlb
push
insl
xor
cmp
mov
out
icebp
fsubr
and
fwait
in
shll
xchg
jns
lcall
cmc
and
call
shlb
mov
mov
out
div
pop
insb
mov
xor
xchg
adc
jae
cmp
fisubl
inc
cmpsl
loopne
xchg
mov
ljmp
aam
jp
outsb
cld
out
scas
gs
and
stos
movsb
jl
adc
or
adc
xchg
push
dec
addr16
mov
rcrl
movsl
imul
dec
ja
je
push
push
mov
lods
xor
rcrl
stc
add
push
lahf
sub
sbb
add
sub
fnstenv
adc
pushf
xlat
shlb
stos
ja
mov
aad
mov
jmp
xchg
add
popl
test
mov
xlat
popa
push
mov
xchg
cmp
sar
mov
pushf
pusha
sub
xchg
sbb
out
mov
je
fisttpl
pop
repz
dec
cmc
movsl
sbb
shr
add
sbb
jge
test
jae
ljmp
xchg
ret
in
push
push
data16
sbb
popf
test
jbe
das
popa
push
sbb
mov
fs
insb
add
jno
or
jbe
or
subl
sbb
das
pop
push
sbb
jno
lcall
fistps
in
push
int
fcompl
sub
and
push
sbb
jecxz
push
jmp
xor
jnp
sub
pop
sub
mov
dec
std
shll
jmp
int3
iret
loope
lods
jbe
cmp
and
fldcw
repnz
outsb
or
stc
shrl
fdivs
into
pop
dec
test
jbe
sbb
dec
fnstsw
movsl
mov
dec
lret
adc
shll
imulb
dec
mov
ror
and
xlat
fstpt
xlat
popa
inc
js
es
xchg
sub
jnp
cwtl
xchg
sub
dec
dec
adc
andl
int
scas
xor
lahf
and
sbb
xlat
test
lret
imul
insl
mov
rep
pop
push
fstpl
adc
jl
addr16
xor
sbb
mov
cmp
insl
mov
jmp
sub
test
adc
jno
inc
jns
xchg
mov
and
jne
popa
pop
xchg
mov
adc
cmpsl
mov
fiaddl
cwtl
mov
addr16
pop
cltd
xor
aad
xorb
push
lahf
jae
les
out
int3
jbe
mov
rcll
sub
xchg
lret
mov
divl
loop
jae
xchg
dec
in
pop
lock
cld
add
pop
je
adc
inc
push
xor
sbb
add
mov
cmp
jns
loopne
xor
push
pop
das
jg
adc
popf
fnstcw
movsb
mov
shl
aam
push
pop
cmc
repnz
insb
and
and
ret
outsb
sub
ficoml
arpl
js
shrl
js
mov
imul
lret
dec
loopne
fs
mov
mov
push
sbb
imul
cmc
mov
sti
mov
iret
sti
mov
pop
push
dec
jb
insl
neg
stos
loope
iret
pop
rcrb
dec
or
fstl
xor
or
add
add
xor
fisttpl
popf
lods
or
lds
ds
mov
cmp
sbb
rol
popa
jecxz
and
imul
add
push
and
lods
cmp
dec
push
dec
dec
in
add
push
cld
adc
mov
cmpsl
clc
std
push
jno
ret
sub
jg
rorb
andl
nop
repz
iret
jno
ret
xchg
les
shlb
push
addr16
shll
dec
cwtl
xchg
orl
dec
add
push
fisttpll
pop
xchg
or
add
je
mov
addr16
mov
int
inc
call
add
xchg
jp
add
cwtl
jo
and
lods
sbb
xchg
cli
push
inc
call
or
ret
popf
test
rorb
xchg
loope
movsl
push
les
icebp
sub
mov
int
repnz
pop
repnz
push
cmp
pop
enter
int
imull
aas
pop
xor
push
adc
cmc
movsb
push
xchg
popl
out
loope
fbld
add
movsl
jb
mov
mov
mov
leave
push
adc
push
sti
mov
or
addb
pop
push
ret
lea
cmpsb
mov
xchg
mov
pop
shll
dec
shrb
or
mov
dec
int
lods
dec
xchg
es
lea
xchg
push
pop
pop
pop
lods
addr16
out
xor
or
mov
push
xlat
sahf
es
xchg
xor
xor
stc
pop
mov
pop
lds
rcl
inc
inc
shrl
jbe
mov
in
andl
idivb
xorb
cmp
arpl
jl
inc
and
sub
rorl
loopne
test
notl
inc
xchg
xchg
int3
push
nop
and
adc
sub
int3
adc
and
data16
insl
mov
lods
adc
pop
out
add
stc
xchg
jecxz
push
orl
js
nop
pop
adc
xor
jae
pop
lods
or
xchg
pop
jns
push
dec
mov
inc
test
pop
pop
mov
testl
rclb
ja
loope
sahf
mov
push
ret
mov
in
inc
or
jo
loop
jg
dec
pop
sbb
ret
sti
imul
or
out
mov
jmp
out
ficoms
and
push
insl
inc
pop
dec
andb
sbb
stos
jnp
xor
jns
sarl
cmp
pop
mov
jl
and
mov
aaa
sahf
pop
cltd
icebp
cli
imul
jle
in
xchg
cmp
dec
pop
and
shll
aam
enter
mov
jmp
mov
mov
pusha
lret
test
arpl
and
in
enter
and
lret
hlt
mov
insb
es
xor
cmpsb
ret
iret
pop
push
movsb
xor
add
inc
sti
in
lds
mov
and
call
fsubrs
out
fs
or
hlt
jns
aas
ret
push
mov
daa
outsl
imul
aad
outsl
add
xor
mov
jmp
out
jg
fldt
or
or
into
fs
mov
add
rclb
int
cmpb
out
aam
pop
jp
add
and
mov
pop
sbb
cltd
and
xor
sub
cmp
sbb
xchg
pop
mov
loope
or
add
mov
and
dec
shl
mov
gs
dec
adc
mov
inc
add
repnz
push
mov
pop
lcall
loop
out
mov
ret
or
out
movsb
mov
test
pop
movsb
cmc
inc
mov
xchg
adc
popa
adc
ds
and
dec
and
stos
mov
ljmp
lahf
lods
sbb
adc
sub
inc
inc
xor
jne
rcrb
push
aad
sub
add
fildl
cld
loop
sarl
outsl
mov
shlb
cli
shll
pushf
aas
jge
push
cmpl
sbb
dec
lret
mov
push
gs
xchg
and
inc
out
inc
xchg
add
add
js
mov
stos
sbb
hlt
xor
ret
jg
and
push
ja
ja
stc
test
adc
push
adc
inc
inc
daa
sbb
call
pusha
out
inc
sub
push
pop
or
push
fadd
test
add
or
or
cwtl
into
push
xor
in
add
cmp
pusha
mov
out
or
and
jns
insl
fisttpl
dec
scas
jp
jb
dec
push
or
sub
add
mov
and
jnp
cltd
leave
xor
sbb
arpl
mov
adc
jns
cmp
xorl
push
cs
lea
dec
das
jp
push
sbb
outsb
arpl
clc
pop
push
mov
push
or
in
sub
xchg
in
fidivs
and
out
cmpsl
jmp
sbb
or
fildl
jno
xor
int
dec
fmull
fs
ja
push
push
inc
pop
xchg
adc
cli
push
inc
pop
call
lcall
adc
sbb
mov
push
xchg
in
inc
lret
outsl
jno
dec
inc
shrb
inc
cmp
sub
inc
lods
add
in
ja
jle
jnp
je
aas
push
xor
xor
addr16
test
popa
shrb
and
call
adc
pop
imul
das
mov
ja
jno
test
pushf
push
mov
js
jno
je
push
add
cwtl
scas
in
add
fbld
jnp
adc
jnp
mov
sbb
cmp
or
mov
mov
push
adc
imulb
aas
jmp
jmp
pop
arpl
sbb
cmp
or
cld
push
or
std
push
xor
mul
inc
pop
add
int
cmpsb
std
add
ljmp
sarb
push
jge
and
mov
nop
or
movsl
dec
push
jp
fstpt
cmc
repnz
xor
xchg
jmp
in
dec
jne
jge
lcall
xor
cli
fstps
idiv
cmpsl
pop
roll
rcrb
jge
and
idivl
out
outsb
inc
sbb
pop
xchg
mov
out
jo
jo
jecxz
mov
pop
sbb
loopne
xor
lds
sub
mov
scas
and
aas
inc
bound
in
lds
sbb
cmpb
xor
mov
dec
jl
and
xchg
iret
adc
int3
movsl
xchg
sahf
sub
push
add
sbb
add
adc
cmc
popa
std
sti
mov
into
mov
test
xchg
int
outsl
lret
add
addl
sarb
xchg
pushf
inc
xchg
in
sbb
pop
push
dec
pop
movsl
int3
pop
lods
xchg
cmpsl
sbb
aaa
sbb
or
adc
ret
xor
pushf
and
adc
mov
mov
jle
mov
imul
mov
xchg
mov
ljmp
xor
addr16
and
movsl
ja
pop
sbb
cmp
xchg
unpckhps
shll
dec
neg
add
js
mov
sub
shlb
sbb
xchg
in
xchg
cmp
add
fsubrl
fists
fnstsw
loop
xlat
pop
fidivl
pusha
je
inc
aaa
add
cmp
dec
pusha
inc
add
pusha
xchg
jae
lods
dec
imul
push
dec
dec
ret
ret
push
in
popf
cmp
inc
cmpsb
and
mov
cmp
pop
jb
loop
loope
jp
mov
aas
jp
adc
sub
addb
outsl
clc
stc
and
jg
pop
xchg
add
and
jb
fs
adc
jbe
mov
mov
jae
repz
in
data16
int
cmp
xor
insl
or
adc
dec
insl
jg
loope
outsb
mov
push
push
and
call
and
cs
sub
cmp
icebp
imul
mov
ret
lea
scas
fcomps
aam
scas
fsts
mov
fldcw
dec
push
mov
fisttps
jmp
xchg
jge
out
jmp
mov
outsl
xor
jb
popa
pop
cmp
sub
lret
mov
dec
inc
mov
dec
dec
pop
dec
jne
fs
adc
or
sahf
out
and
popa
mov
push
out
jge
adc
stos
nop
mov
aam
daa
into
push
jge
dec
and
fcoml
inc
fwait
xchg
xor
mov
or
imul
mov
arpl
sarl
fcomi
in
je
sbb
mov
into
mov
inc
jo
sbb
enter
inc
cmp
mov
adc
dec
lock
adcl
cwtl
lods
or
sub
pop
sbb
lods
int3
rolb
lahf
ss
inc
sbb
xchg
xor
sub
dec
jnp
cmp
hlt
mov
mov
int
gs
out
ss
in
cmp
or
mov
cltd
push
mov
out
out
scas
mov
fnstcw
pop
out
insb
dec
fldcw
dec
comiss
xor
in
dec
nop
rclb
mov
rcrb
shlb
das
idivb
ss
or
pop
push
xor
sti
imul
rcl
leave
pop
adc
lahf
push
xchg
jae
dec
mov
mov
push
fisubrl
les
mov
movb
add
hlt
cli
dec
and
xchg
mov
lock
mov
jle
cmp
mov
cld
and
adc
or
orb
adc
cmp
cmp
or
in
mov
cmp
pop
mov
mov
mov
sbb
jb
xchg
xchg
sarl
xchg
loop
idivl
divb
fbld
mov
jecxz
lret
dec
subl
cmp
xor
hlt
lock
adc
enter
pop
stos
adc
repnz
mov
ret
sub
add
mov
xor
icebp
push
adc
jbe
cmp
or
rorl
xlat
cmpb
fdivs
mov
je
sbbb
sub
sahf
inc
stos
pop
push
cmpsb
inc
pop
jmp
ljmp
ja
aam
lret
imul
and
push
cmp
fs
out
xchg
mov
cmc
fsubrs
jle
pop
test
pop
enter
rcl
or
sub
xor
and
xchg
push
test
jg
imul
xor
arpl
adc
push
dec
lock
repz
dec
xlat
add
fdivs
xor
or
mov
xchg
inc
imul
scas
imul
jl
mov
mov
ret
insb
in
add
repnz
data16
jae
inc
fcom
cmp
cwtl
outsb
lods
inc
rcll
arpl
jecxz
imul
cs
inc
mov
lock
insb
sbb
jp
cltd
jmp
ss
xor
dec
jp
cmp
roll
outsl
pop
outsb
aam
sbbl
inc
push
mov
call
xsaveopt
and
or
sbb
mov
popf
mov
mov
cwtl
cmpsb
js
andl
mov
mov
xchg
push
dec
xor
cmpsb
ss
das
add
cmp
ret
jnp
fstpt
mov
mov
fs
mov
and
adc
lods
mov
jnp
jns
inc
pop
pop
xchg
xor
fnstenv
jne
push
hlt
mov
roll
xchg
mov
mov
mov
ja
cs
or
sub
outsl
push
lods
push
mov
clc
and
mov
clc
jg
sbb
cmp
mov
adc
loope
stc
cmpl
insl
jge
pop
jnp
mov
inc
movsb
sub
scas
mov
pop
cmc
inc
jle
out
xor
cwtl
enter
cmpl
in
movsl
sub
or
or
test
push
sti
cltd
jbe
cltd
les
mov
cld
stos
mov
or
jne
mov
in
add
mov
dec
mov
int3
xchg
pop
sar
cmp
and
push
mov
test
jmp
imul
cs
into
adc
rorb
lret
xchg
cs
stos
adc
xchg
cmp
nop
xchg
pop
pop
roll
sbb
mov
xchg
iret
jg
xchg
mov
xchg
fisubl
jmp
xchg
out
cld
xchg
mov
jge
jmp
clc
ja
and
jmp
fwait
imul
add
das
push
ret
loop
xchg
xchg
call
mov
bound
mov
mov
inc
sahf
push
push
mov
dec
clc
pop
dec
fistpl
leave
popa
int3
es
outsl
sarb
jo
inc
inc
or
adc
iret
popa
lret
jne
dec
adc
jmp
push
mov
xor
jne
push
pop
mov
setp
jno
ret
push
inc
jmp
inc
mov
out
popf
into
cld
push
and
or
insb
into
call
pop
movsb
add
sub
in
xlat
xchg
sbb
std
loope
jle
repnz
or
xchg
mov
cli
sahf
das
loop
scas
or
pusha
je
fwait
jp
and
repnz
mov
aad
pop
mov
fsubs
mov
mov
sub
movsb
pop
push
shrb
test
cmpb
push
and
insb
xor
pop
sarl
xchg
aas
int3
lret
sbb
insb
or
lea
add
inc
mov
das
mov
mov
call
jle
and
xchg
adc
lds
les
xchg
stos
aam
push
pop
inc
out
pusha
adc
sti
pop
popa
cs
pop
fcmovnu
cltd
xchg
nop
ljmp
push
stos
lods
fimull
xor
dec
jg
mov
mov
popf
pop
scas
ss
call
orb
fisubs
stos
cmp
jge
mov
mov
gs
push
mov
jmp
call
cli
jae
lock
in
jne
mov
lret
add
mov
fists
insb
xchg
loopne
inc
cmp
sarb
pop
sar
sti
jno
jns
pop
cmpsl
rcll
jmp
jb
and
sahf
cmpl
and
push
fisubrl
jne
and
mov
mov
mov
enter
incb
mov
shrb
roll
adc
pop
movsl
jne
test
int
xchg
and
inc
add
mov
into
enter
orl
cmp
mov
dec
in
mov
or
in
int
dec
out
fdivs
out
icebp
xchg
dec
cmp
sub
icebp
xchg
and
outsb
sbb
or
addr16
ljmp
inc
sbb
fidivrl
hlt
fcomp
push
dec
ficompl
xor
mov
dec
rorl
stos
push
ljmp
xor
test
pusha
mov
insl
cs
mov
ror
enter
jge
pop
push
insl
shrb
inc
test
out
inc
or
outsl
mov
out
and
sbbl
data16
lcall
sbb
inc
cs
mov
add
mov
stc
sar
push
mov
imul
imul
aam
bound
icebp
cli
or
pop
flds
push
inc
adc
jge
inc
outsb
lret
out
inc
push
jbe
cmc
jecxz
cmc
pop
notl
divb
out
push
movsb
xor
enter
fisttpl
sbb
out
jne
and
cmpsb
mov
loopne
mov
stc
int3
xlat
xchg
mov
add
add
insl
icebp
fistl
ret
adc
cwtl
inc
lcall
daa
out
lahf
in
fs
lahf
or
cli
lods
aas
pop
int3
ret
mov
mov
fisubrs
lock
inc
add
fs
popf
inc
and
imul
push
gs
fwait
jno
pop
mov
jle
xor
pop
xor
xchg
cmc
adc
mov
jmp
cmp
xchg
mov
aas
outsb
jne
test
in
xorl
push
and
xor
movsl
lret
sub
mov
std
insl
dec
iret
aaa
dec
jl
adc
inc
in
popa
adc
push
mov
jnp
data16
lret
lea
sti
mov
or
adc
push
call
dec
push
cmp
stc
sub
out
leave
mov
sub
or
in
call
stos
fsubrs
pop
shrd
xor
or
cmpsb
add
fcmovnb
xor
cmpsl
xor
mov
lcall
imul
push
push
lds
cltd
int3
sti
daa
push
or
mov
mov
lcall
push
ror
bound
cwtl
adc
and
lret
rol
out
push
adc
outsb
rolb
les
pop
dec
or
test
push
add
jne
pop
add
mov
repz
rcll
xchg
insb
mov
or
scas
aas
stc
fcomi
clc
dec
mov
mov
filds
jne
push
mov
mov
int3
sbb
inc
fcomip
push
sub
xchg
dec
sbb
jmp
lret
nop
sbb
cmp
sub
jmp
adc
data16
aad
mov
inc
dec
aaa
xchg
sbb
imul
and
loop
xorl
push
out
mov
cmp
push
stos
popf
nop
loop
ficoms
mov
popa
rcrl
insl
jnp
jb
add
jp
ljmp
mov
cmp
lods
push
test
jge
cmpb
push
push
sahf
xchg
mov
mov
mov
inc
add
push
pop
mov
mov
sbb
sbb
pop
rol
ja
out
aas
cwtl
inc
mov
stos
add
test
sahf
into
cmp
push
mov
push
arpl
mov
jne
mov
std
push
add
xchg
xlat
cmp
in
dec
fldcw
mov
addr16
pop
cmpsl
lock
xchg
mov
adc
jle
dec
orl
jge
push
movsl
fsubs
out
fisttpll
sbb
ffree
mov
test
movsb
inc
pop
xorl
aaa
iret
lds
setne
bound
ds
out
cmp
pop
inc
lock
cmpb
xor
std
sub
sub
push
adc
fsts
cltd
sub
jecxz
adc
push
outsl
pop
movb
xor
pop
push
shr
in
xor
jmp
pop
xchg
mov
ss
mov
adc
xchg
int3
imul
clc
int3
pusha
cmp
push
lcall
shlb
xchg
xlat
bound
cmp
leave
je
and
xor
test
outsl
mov
xrelease
in
sub
add
cmp
xor
or
jne
pop
jb
cmp
push
ds
xchg
enter
loopne
jecxz
or
cmp
sbb
jne
inc
mov
mov
xchg
pop
in
inc
in
add
xchg
call
dec
pop
mov
pop
mov
les
nop
decl
jmp
int
lock
cmp
fldl2t
push
jb
fsubrp
push
adc
les
jbe
stos
ja
dec
mov
and
dec
add
xchg
jb
sub
sbb
pop
push
mov
dec
inc
test
leave
mov
lds
incl
dec
mov
and
lcall
xor
scas
mov
xchg
lea
and
adcb
jae
sub
xchg
into
cld
scas
pop
xchg
repnz
or
gs
mov
pop
imul
pop
dec
rsqrtps
daa
adc
cmp
inc
rolb
mov
negb
in
data16
pop
data16
data16
dec
call
and
sub
out
cmp
push
stc
mov
mov
cmp
dec
orb
test
add
call
movsb
shlb
test
bound
sbb
sub
fmul
mov
mov
aaa
imul
adc
addr16
cmp
enter
mov
fadd
fwait
jbe
jecxz
adc
push
iret
mov
add
shrb
mov
ljmp
shr
jmp
aad
sub
mov
mov
aam
lret
cmp
jle
fdivs
xor
add
and
push
sub
cmpl
pop
cmp
fpatan
and
pop
mov
xchg
int
mov
clc
in
out
sbb
scas
ds
mov
xlat
dec
and
rcrl
mov
and
or
jl
mov
das
sub
mov
jb
je
adc
idivl
adc
dec
and
ss
add
jge
test
les
or
das
jp
lcall
sbb
pop
adcb
jecxz
mov
subb
jmp
or
icebp
cmp
or
jb
xchg
mov
dec
cwtl
sti
aas
xchg
pop
pop
movl
out
in
inc
inc
nop
cmp
mov
lock
xchg
adcb
pop
ficomps
pop
or
push
or
int
fisubs
adc
sbbb
les
jnp
lds
dec
and
or
repnz
push
jle
cmp
jl
push
int
dec
mov
std
lret
imul
mov
xchg
or
ds
hlt
dec
or
imul
pop
or
call
pop
test
jp
repnz
xor
gs
fstp
orb
mov
dec
jecxz
cmp
pop
add
mov
fmull
mov
xor
cmp
out
jnp
outsl
rclb
movsb
push
xchg
push
cmp
adc
xor
xchg
adc
jb
scas
gs
dec
pop
nop
popa
xchg
mov
stos
rcrb
fildl
movl
shrb
sub
jne
mov
pusha
fdivrs
mov
roll
xor
add
sub
mov
cmpsb
out
pusha
sti
aam
repz
cmpsb
das
sbb
mov
xchg
ret
ret
test
push
lods
xor
sub
jbe
lret
fdivrl
jb
jo
cmpsb
xchg
mov
in
push
test
in
xchg
push
cwtl
cmp
xchg
jno
fs
imul
dec
add
popf
nop
mov
mov
ret
clc
xor
mov
push
sbb
and
leave
stos
add
or
insb
sbb
dec
pop
or
jp
mov
sbb
jo
icebp
jb
push
in
aad
sub
shr
subb
pop
lea
sub
cmpsl
cmp
in
loop
sti
sbb
and
mov
xor
cltd
dec
and
daa
mov
cltd
adc
jno
clc
and
call
bound
adc
fidivrs
hlt
lods
mov
lea
adcl
mov
push
push
push
outsb
loopne
xchg
inc
mov
test
enter
xchg
pop
or
adc
shll
in
sub
jle
fs
and
adc
pop
adc
mov
fwait
sti
xchg
mov
movsl
add
sub
mov
and
xchg
cmpsl
in
into
flds
adc
dec
imul
pushf
fdivr
shll
cmp
aas
adc
je
shll
icebp
jg
push
pop
mov
lret
sahf
rolb
mov
lds
daa
insl
sbb
cvtps2pd
mov
jne
bound
pop
jmp
sahf
xchg
rcl
xor
out
shr
and
jecxz
push
cmpsl
enter
dec
cli
push
jmp
or
jmp
cmp
in
bound
stos
jmp
lret
std
inc
loop
pop
out
pop
inc
cmp
mov
mov
push
pop
sub
or
pop
jbe,pn
mov
loopne
cmp
push
and
sbb
out
inc
clc
fucomp
icebp
cltd
popf
mov
cmc
lahf
rclb
and
es
mov
sarb
sti
xchg
push
insl
in
push
lcall
push
outsb
les
insb
daa
pop
ret
cltd
sub
pop
sub
ja
ret
daa
inc
mov
iret
enter
inc
jo
pop
stos
push
insl
xchg
sti
cmp
adc
jge
lcall
pop
inc
daa
cli
xlat
pop
cmp
push
push
popa
mov
sbb
push
xor
int
out
jmp
aad
ljmp
mov
push
hlt
jne
sahf
xchg
lods
or
int3
data16
popa
or
nop
sub
cld
lcall
or
inc
mov
xorl
pop
ficomps
lcall
dec
jmp
push
mov
and
orl
inc
xor
and
je
or
inc
adc
cmp
ljmp
orl
or
lret
jno
loope
mov
out
bswap
add
dec
rcl
xor
into
mov
in
ljmp
push
scas
scas
stos
mov
or
cld
ss
pop
scas
mov
gs
pop
fcmovbe
das
sub
jp
xchg
scas
add
mov
xchg
jmp
mov
mov
jns
sbb
out
pushf
push
push
or
xor
std
out
pop
ss
inc
shl
pushf
pushf
cltd
mov
xor
sub
sub
mov
mov
mov
xchg
xor
stc
jp
mov
xorb
mov
popf
ret
shlb
loop
cltd
add
ret
xor
int3
pop
nop
cmpsb
cltd
pusha
nop
or
xor
and
xlat
aaa
je
lea
push
js
push
sub
loope
and
pusha
sbb
and
insl
inc
fsubl
xchg
and
or
or
pop
pusha
rcrb
push
sar
mov
mov
fistps
fstpt
inc
leave
sub
adc
and
notb
jno
out
test
mov
mov
out
jp
push
jl
int3
dec
or
dec
cwtl
test
sbb
mov
adc
pop
and
sbb
shll
sub
js
sbb
dec
mov
aaa
push
fs
xor
scas
sub
mov
jae
add
and
ret
insb
insl
mov
inc
mov
push
mov
ds
imul
mov
fprem
fildl
outsb
add
cmp
add
sbb
mov
pop
aaa
xchg
mov
insl
lock
sbb
and
nop
daa
mov
shll
push
fs
mov
and
and
xor
shl
push
out
cmp
outsb
test
mov
repz
xlat
inc
into
pusha
lea
dec
lcall
pusha
test
pop
add
xor
ss
xor
push
fnsave
nop
imul
mov
mov
xchg
push
jmp
or
int3
sub
in
cmpsl
out
addr16
sub
cmp
push
repz
cmpsb
pop
pop
jecxz
push
sbbl
inc
ja
push
cltd
addb
sub
out
jle
sbb
xchg
ja
insb
and
push
stc
mov
adc
cmp
ffree
mov
call
or
scas
add
mov
xchg
out
mov
lret
les
mov
jbe
aad
insl
pop
push
imul
mov
inc
push
icebp
push
sub
pop
mov
and
iret
rolb
dec
inc
stos
mov
or
ss
aam
out
inc
adc
or
ja
lea
aam
xchg
jo
and
movsl
cmc
cwtl
in
sbb
in
enter
out
xchg
mov
movsb
mov
aaa
hlt
fiadds
das
ljmp
incb
arpl
es
dec
arpl
sbb
mov
sahf
sbb
jg
das
int
push
xchg
and
ss
icebp
cs
pop
mov
imul
repz
sti
adc
js
mov
cmp
cs
mov
or
int3
or
imul
push
jmp
out
mov
mov
or
scas
jl
mov
jp
push
imul
jecxz
lcall
xchg
outsl
lds
cmpsb
ljmp
xor
and
imul
out
ss
call
adc
das
adc
rorb
push
push
rcll
mov
push
inc
mov
in
outsb
cs
xchg
pushf
push
inc
outsl
pop
jbe
outsl
add
cli
movsl
fwait
jge
insl
lcall
and
sub
pushl
xchg
daa
negb
push
jmp
mov
dec
push
pop
fwait
and
mov
movsl
lret
jno
xchg
cld
in
dec
pop
jae
iret
leave
sub
loope
push
jbe
mull
mov
dec
sub
sbb
jne
fisubrs
push
xor
push
cmp
dec
adc
jg
push
ret
cltd
sub
das
mov
and
mov
push
pop
push
cli
push
and
mov
pusha
xchg
ljmp
cmc
ficoml
xchg
test
orl
fildll
aas
dec
loope
ret
into
adc
lret
cmp
mov
sbb
fisubrs
add
adc
sub
mov
push
aas
mov
rcrl
outsl
inc
push
push
jbe
mov
scas
xchg
out
mov
popf
sbb
cmp
fwait
xor
cwtl
in
mov
push
out
sbb
push
adc
add
mov
push
xor
icebp
and
dec
jno
loope
faddl
xchg
int3
push
sub
repnz
or
std
sti
add
or
mov
dec
shlb
inc
popa
push
inc
mov
push
xorb
outsb
jb
dec
push
hlt
cmpb
test
lock
jl
push
jno
dec
jg
roll
push
fcomps
mov
pushf
lret
ffreep
incb
das
xchg
idivl
fsubl
test
push
shl
pop
jbe
pusha
insl
jb
mov
dec
data16
ret
pop
or
fucomp
sbb
add
inc
xor
sti
in
scas
cmpb
adc
out
pop
aas
pushf
jb
clc
mov
pop
stos
push
test
cmp
pop
jbe
sbb
lea
fcoml
inc
mov
scas
xchg
stos
out
push
je
cmpb
push
jo
daa
cld
inc
mov
cmp
mov
mov
and
push
stc
jne
pop
ja
outsb
sub
pop
mov
jg
in
ss
call
mov
xchg
add
shl
xchg
inc
xchg
in
xchg
jmp
into
xlat
enter
sub
jo
sbb
adc
cmp
sub
sbb
jno
sbbl
mov
scas
imul
aad
fimuls
adc
cld
lret
sbb
push
rol
iret
push
popf
inc
aaa
push
iret
fsub
lea
loope
sbb
and
mov
jl
cmc
and
or
lahf
sub
dec
stos
int3
sbb
loop
dec
imul
mov
ret
es
daa
rcr
fidivrl
pop
cmp
xchg
and
mov
pop
xlat
cli
data16
jbe
shll
loopne
jno
fisubrl
jns
stos
cmpsl
fwait
mov
jle
icebp
xor
test
sub
arpl
neg
pop
sti
aad
sbb
cmpsl
fcmovne
sub
sarb
mov
mov
cmpsl
cmpsb
mulb
daa
pop
mov
fwait
and
mov
cmp
push
jge
xorb
aad
clc
pusha
adc
jbe
and
or
int
repnz
xchg
push
fs
push
fucomip
mov
push
test
xchg
xor
pusha
mov
jae
or
out
cmp
arpl
jl
dec
mov
mov
cmp
xchg
pop
or
jo
or
xchg
aad
repnz
pop
rcr
aaa
xor
xchg
insl
in
jns
jns
outsl
sbb
test
call
push
sarl
rorl
arpl
sarl
dec
dec
insb
mov
mov
mov
fidivs
fsubs
xor
mov
ja
jne
fcmovne
lds
lods
mov
pop
loope
xchg
mov
jl
clc
jge
xor
scas
mov
sub
aaa
adc
mov
mov
and
fsubrs
sbb
pop
cmc
push
aas
push
iret
ficoml
cwtl
dec
sti
jg
outsb
dec
push
cwtl
sti
sarb
repz
adc
jp
aam
xor
xchg
das
cmp
add
or
xor
dec
mov
std
push
mov
mov
fmul
fildll
pop
dec
jae
ds
jge
mov
xchg
add
rcl
sub
and
test
fldenv
das
add
xor
push
lods
inc
jb
dec
fcoms
outsb
pop
ret
xchg
out
fimuls
push
dec
inc
mov
ja
lea
xchg
test
popf
dec
cmp
int3
pop
pop
xor
cmpsb
cld
int
nop
lods
popa
popa
in
ret
sub
adc
mov
add
cmp
fisttpll
jne
dec
ja
lahf
xor
cwtl
imul
xorl
inc
loopne
jns
popa
cli
adc
iret
pop
fldcw
sub
out
jge
push
xor
adc
or
adc
or
cmc
lods
in
add
jbe
int3
jne
sbb
dec
ss
cmp
out
lcall
jbe
bound
stos
sub
cltd
scas
sbb
es
pop
popf
sbb
add
push
dec
push
js
mov
clc
in
std
pop
dec
hlt
cmp
mov
fmull
divl
jo
mov
xor
mov
push
dec
jecxz
jne
push
or
jo
test
rolb
scas
iret
and
ss
stc
sub
mov
fs
aas
imul
push
inc
add
movsl
rolb
andl
mov
push
repnz
lods
sub
lock
xchg
cli
add
lock
sbb
fsubs
xchg
lahf
inc
xlat
mov
adc
aam
je
ds
pushf
xor
fcom
xlat
std
adc
jae
int
dec
and
add
sbb
clc
add
mov
out
rclb
cmc
cmp
pushf
jnp
or
rcrb
mov
iret
test
jg
push
push
rcll
push
fdivrs
pop
imul
loopne
scas
inc
cld
stc
inc
and
cmp
mov
ss
out
pop
mov
adc
sub
xchg
sub
loope
mov
cmp
pop
mov
in
std
fwait
adc
movsb
cmp
xor
fcomi
fmul
pushl
enter
lock
xlat
sbb
mov
rclb
mov
jb
setl
dec
sub
sbb
jno
xor
and
mov
pop
sub
arpl
or
clc
adc
xor
and
iret
dec
jo
inc
jl
bound
lea
mov
fiaddl
sar
add
inc
mov
mov
subb
sub
fwait
js
daa
popf
mov
imul
int
push
das
shlb
inc
mov
fimull
jnp
mov
pop
pop
nop
pushf
mov
jle
shl
fs
mov
jns
xlat
sbb
sub
dec
and
scas
int3
sub
inc
pop
sbb
inc
pop
iret
aaa
rcrb
xchg
ss
fsts
rorb
mov
ja
mov
dec
xchg
push
mov
lret
xchg
dec
iret
or
aad
mov
in
dec
cmc
mov
and
mov
or
jg
jbe
pop
adc
shrl
sbb
ja
xchg
mov
ja
shll
jns
call
push
or
jne
add
cld
out
mov
fnsave
inc
sbb
xchg
add
jnp
ret
ret
js
push
or
out
jmp
jl
or
dec
sbb
hlt
sub
mov
inc
xchg
add
lock
ljmp
sub
mov
sbb
mov
mov
idiv
jecxz
mov
gs
mov
sahf
sbb
imul
lods
dec
or
sub
and
lods
adc
cwtl
std
dec
pop
sbb
popa
and
aam
sub
xchg
sbb
jp
jmp
xchg
pop
push
test
push
dec
scas
xchg
mov
mov
ss
push
gs
push
inc
ss
mov
jge
mov
jmp
push
adc
ror
stos
aaa
xchg
sti
cli
and
mov
push
out
sahf
dec
pop
test
rorl
cltd
dec
inc
lahf
mov
imul
fiadds
ljmp
cmp
jns
test
imul
pop
out
int3
cmp
jae
insl
arpl
mov
or
icebp
or
adc
xchg
test
add
aam
or
xor
imul
rorl
mov
mov
insl
dec
mov
mov
cli
call
repnz
add
rol
add
jecxz
iret
out
jp
movsl
cmpsl
xor
out
jle
jne
xchg
loopne
pop
test
sub
mov
mov
cmp
fsts
sub
ja
cmc
push
addb
mov
sub
and
enter
inc
add
push
inc
mov
inc
mov
mov
sub
add
push
sub
inc
jmp
xchg
ss
out
dec
mov
loop
out
aam
sub
push
xor
sub
jns
adc
out
cmpsl
imul
sub
in
dec
dec
int
mov
nop
jnp
cltd
inc
insl
jge
sub
dec
cmp
push
xor
fs
xor
lahf
mov
ret
push
and
aam
shll
rclb
out
pop
outsl
mov
add
pop
call
mov
mov
push
ret
sub
sbb
add
fistpl
jp
in
loope
xor
push
movsl
lahf
lods
pop
sub
in
mov
mov
fldenv
cmp
loop
xor
es
in
lret
out
shlb
dec
lock
xor
xor
sti
aaa
add
push
cmp
addr16
sub
je
sub
push
xor
ret
and
sti
push
lret
shrb
jmp
aas
xlat
jmp
out
and
adc
in
mov
mov
mov
mov
inc
mov
push
jp
sbb
add
dec
lret
and
pop
and
dec
push
idivl
and
mov
dec
mov
jp
pushf
xor
adc
mov
mov
jne
les
jne
loop
xchg
push
inc
adc
sub
popa
outsb
push
xor
push
lea
mov
sub
jno
imul
shll
outsl
cld
in
push
sbb
jns
mov
lock
push
aam
ret
mov
mov
sti
pusha
rep
aaa
mov
ret
dec
imul
and
das
cmc
pop
or
iret
or
xchg
neg
mov
popa
sub
scas
pop
xchg
mov
bound
jo
sbb
or
inc
mov
dec
in
test
sub
mov
dec
adc
and
mov
aas
mov
cmp
sti
outsb
lock
iret
imul
mov
call
lret
xchg
or
icebp
pop
inc
sbb
rol
clc
jo
out
aam
xchg
mov
xchg
loop
shrb
cmp
push
xorb
mov
and
cs
mov
popf
jo
ja
mov
sub
xchg
pop
jl
mov
daa
mov
xlat
and
jecxz
sub
out
lods
adc
pop
lds
repz
mov
dec
dec
inc
xchg
sbb
int3
int
shlb
jg
ss
xlat
push
cmp
or
mov
adc
and
push
fwait
mov
jecxz
pop
mov
pop
and
insb
out
gs
mov
fwait
cmpsl
xlat
mov
xor
and
arpl
in
ds
adc
outsl
xor
repz
sahf
dec
add
cmpsb
repnz
imul
push
cmp
inc
jns
and
sbb
push
in
fidivrs
xlat
mov
xlat
add
popf
jnp
or
test
and
dec
aas
out
stc
in
and
inc
pop
bound
jp
and
cmc
aaa
push
fs
push
xchg
add
or
cmp
jecxz
sti
outsb
sbb
or
mov
xor
pusha
or
mov
sbb
mov
jbe
repz
pop
xor
in
mov
test
lea
dec
sti
mov
popf
xchg
fwait
lret
pop
mov
insb
xor
stos
sub
imul
fstl
and
sub
add
filds
inc
stos
sbb
inc
mov
and
js
mov
rolb
stos
xchg
lds
test
mov
cmp
adc
test
or
xor
movsl
cmpsb
lods
fwait
es
push
into
sub
in
dec
sbb
mov
mov
cmp
inc
pop
mov
nop
arpl
jne
in
lcall
mov
in
in
aad
pop
aas
mov
xchg
hlt
inc
inc
fbld
push
test
outsb
sub
xchg
sbb
rcrb
pusha
loop
mov
jns
sub
add
ffreep
repz
and
das
inc
pop
cld
fcmove
mov
ret
jle
add
mov
inc
xchg
sbb
cld
testl
mov
int3
movsb
xchg
popf
mov
repnz
loopne
jge
xchg
xchg
sbb
sub
call
xor
inc
sub
jae
inc
jae
bswap
and
jne
pusha
enter
push
pop
in
and
mov
aad
push
ficomps
pop
add
xchg
mov
test
lea
iret
sub
sbb
mov
xor
call
jo
or
loop
call
sbb
sub
xor
add
cwtl
fidivs
cmp
outsl
push
les
sub
dec
add
jp
pop
pop
jle
and
andl
jge
leave
loopne
dec
xchg
fldt
movsb
clc
pop
test
pop
push
add
jae
cld
jge
fidivrl
jbe
xor
es
or
lret
fistpll
loope
xchg
fcoml
dec
push
aam
push
pop
inc
push
dec
les
jge
jns
push
or
cmc
pop
int3
jo
hlt
rcrb
lret
mov
pop
notb
sahf
stc
sbb
cmpsl
jns
test
dec
adc
cltd
or
cmp
fmull
lcall
push
out
cli
fdiv
mov
sti
jecxz
popf
inc
loop
sbbl
and
lret
jns
filds
js
mov
iret
xor
jle
icebp
in
mov
pop
lahf
lea
and
or
je
mov
pop
push
mov
pop
push
sub
adc
je
lcall
shl
cmp
out
loope
fildl
sahf
sub
sub
popa
add
cmp
mov
xchg
pushf
dec
in
mov
mov
jmp
pushf
imul
mov
rcl
stc
stos
mov
pushf
dec
mov
outsb
xchg
sti
cltd
mov
lds
test
stc
mov
inc
mov
sbb
sub
daa
cmp
nop
mov
xlat
xchg
cmp
es
mov
fxch
es
dec
xchg
rorl
aaa
int
loop
push
stos
fbld
sub
lock
loope
lahf
aas
add
xor
shr
mov
sub
sti
or
dec
incl
sbb
js
jle
movsb
and
adc
dec
push
aad
xor
jnp
rcl
loopne
clc
incl
xchg
aad
adc
or
sub
lods
inc
adc
enter
popf
mov
and
sbb
inc
sahf
shlb
mov
call
push
dec
cs
inc
ficoml
push
and
aam
mov
push
fisttpl
adc
xchg
fmuls
in
aas
aaa
loope
js
xor
fstpl
vdivss
and
pop
in
bound
push
push
lods
fwait
addr16
clc
add
sub
inc
adc
mov
dec
xchg
dec
stos
xor
push
dec
negb
jge
sarl
push
xor
fstpl
pop
mov
add
xor
mov
cld
xlat
popa
mov
ficoms
jmp
xchg
mov
xchg
loop
popa
jp
xchg
inc
in
xchg
mov
int3
cli
stc
test
out
xlat
pop
insl
cmp
push
adc
pop
lds
add
out
jecxz
push
pop
or
testl
shll
bound
xchg
out
xchg
mov
xchg
mov
add
in
sub
imul
push
scas
xor
mov
cmp
popa
in
test
pop
inc
lcall
xor
dec
adc
inc
mov
cmpb
into
jle
mov
xchg
cli
es
icebp
test
test
sbbb
dec
jno
or
pop
outsl
ficoms
sbb
mov
jae
push
adc
lret
call
cmpsb
or
mov
call
cmc
lds
sub
xchg
mov
lds
movsl
jge
popa
mov
adc
fwait
mov
mov
int3
xchg
adc
jnp
popf
xchg
inc
sbb
loope
sbb
call
in
in
jg
lods
jecxz
mov
adc
xorl
out
jmp
push
and
js
rcr
push
fisubrl
push
orl
xchg
cmp
mov
push
xchg
add
or
cmpsb
mov
test
das
dec
adc
add
ss
cltd
jge
inc
stc
xchg
iret
ja
je
nop
outsl
dec
or
fwait
mov
sub
jp
mov
xchg
or
cs
hlt
push
jb
or
push
pusha
sahf
mov
inc
movsb
fisubl
xor
pushf
lods
popa
push
mov
xchg
dec
jmp
lea
mov
hlt
subl
cmp
dec
sahf
lret
pop
hlt
mov
insb
sub
imul
mov
xchg
bnd
sub
fstl
stc
mov
push
cltd
mov
lods
out
mov
int3
pop
pop
inc
pop
and
sub
data16
push
or
out
sub
jno
cmpsb
mov
and
ds
dec
scas
mov
out
jne
add
and
push
push
pop
mov
scas
and
push
adc
dec
and
dec
lcall
imul
roll
push
lock
imul
mov
push
jne
pushaw
divps
mov
lea
insl
rorb
pop
adc
lcall
mov
jg
mov
xchg
mov
xor
pop
adc
iret
jns
subb
dec
ret
mov
sub
jb
cltd
cmp
jge
add
out
loop
mov
call
inc
sub
mov
leave
jge
movsl
jl
adc
adc
mov
lds
pusha
push
cs
and
and
dec
das
push
std
incl
and
mov
cmp
mov
bnd
push
mov
or
aad
iret
clc
out
or
pop
je
clc
int3
fdivs
cld
push
addb
mov
sbbb
and
lret
imulb
xchg
xchg
fdiv
mov
jne
sbb
jnp
dec
sarb
mov
test
ss
addl
mov
in
adc
jmp
sbb
and
addr16
pop
cld
mul
jae
aam
hlt
stos
mov
and
push
jnp
add
cmp
inc
lods
outsl
push
sbb
sub
mov
inc
enter
cs
scas
and
int3
or
mov
pushf
jle
inc
lahf
sub
mov
cltd
ror
ret
sbb
dec
cli
and
push
ljmp
mov
sbb
xlat
inc
shll
inc
les
mov
cld
in
cmp
adc
int
addr16
dec
cmp
mov
call
dec
pushf
movsb
insb
inc
xlat
mov
push
test
ds
sub
mov
shll
mov
lcall
mov
cli
sarb
imul
fwait
jecxz
pop
push
daa
loopne
les
mov
rcll
nop
ret
cmp
outsb
mov
push
sti
mov
jo
lock
push
daa
xlat
ss
dec
adc
sub
cmp
push
push
jnp
pop
imul
add
js
and
jns
cs
cwtl
jne
push
out
push
mov
dec
pop
jae
jo
and
pusha
push
in
mov
pusha
into
addr16
das
sti
mov
test
cmp
sbb
xor
sbb
jp
popf
pusha
sahf
or
jns
cmpsb
jbe
xor
mov
adc
iret
scas
dec
adc
adc
mov
xorl
xchg
out
xchg
xchg
pop
jp
in
dec
add
sub
cmp
ljmp
jl
push
jne
sbb
adc
mov
adc
xor
pop
pop
cmpsl
fstps
xchg
lods
icebp
inc
popf
xchg
pop
jne
in
ret
in
add
mov
cltd
sub
sahf
loop
outsl
pop
scas
jecxz
rorb
call
jle
sub
dec
cmpl
mov
lcall
cmp
pusha
jb
push
mov
cmpsl
arpl
push
js
pop
enter
cs
movsb
jl
pop
test
xchg
add
cli
leave
fwait
in
hlt
or
or
lods
xor
and
pop
scas
mov
incb
lods
add
jb
scas
dec
xchg
ficoms
inc
enter
xchg
mov
inc
imul
sub
mov
mov
and
movsl
cmpsl
add
dec
fiadds
movsb
mov
insb
sub
test
cs
repz
movsl
loopne
ss
jecxz
fwait
scas
jno
mov
stos
cmp
std
fimuls
push
mov
jp
mov
xchg
mov
into
fs
cwtl
loop
inc
int
loopne
mov
cmp
jae
daa
fs
mov
in
or
mov
movsb
fadd
fbld
lcall
push
xchg
sti
leave
cld
lret
mov
in
repz
jo
in
fmuls
jle
mov
sarb
stos
nop
or
fdivrl
iret
adc
pusha
mov
pop
es
enter
arpl
loop
mov
dec
push
pop
mov
cmp
adc
fisubl
and
shlb
in
and
rep
mov
cs
adc
add
dec
jo
movl
push
inc
addr16
jo
dec
loopne
in
adc
jb
adc
mov
in
jbe
in
xor
sahf
or
aas
aaa
imul
cmp
pop
int3
ret
fmuls
sahf
fsubr
shrb
aad
stc
inc
jle
or
adc
test
dec
inc
stc
sahf
sbb
incl
mov
xchg
shlb
xor
dec
xchg
lret
rcrl
ja
testl
jecxz
adc
fildll
sbb
outsb
hlt
shl
imul
lcall
xchg
mov
pop
fsubs
lret
push
in
das
sti
es
or
fisttpll
aam
cmp
inc
cmpsl
pusha
dec
cmc
xor
and
lret
loopne
fcomps
cld
loope
lods
rclb
lea
mov
xor
loop
test
cltd
push
xlat
sub
cmpsb
xchg
in
or
movsl
xor
movsb
dec
movsb
jae
inc
pop
mov
lret
sub
xchg
xor
mov
jl
fsubrl
add
mov
pop
ret
ret
pop
push
jo
jmp
stc
pusha
inc
dec
std
cmc
dec
jnp
ficompl
sbb
cmc
push
jle
add
pop
sbb
aad
sub
testl
mov
into
fisttps
out
mov
iret
aad
mov
lea
cmp
scas
push
push
mov
insl
ret
cs
shlb
mov
loop
aas
and
loop
ret
outsl
sbb
jnp
sub
and
insb
sahf
mov
test
jae
add
fcompl
or
pop
or
lahf
cmc
in
pop
mov
and
pop
sbb
jge
inc
out
dec
sbbl
sarl
inc
das
popa
paddsb
out
mov
aad
subl
inc
pop
cmpsb
outsb
mov
stc
inc
lret
fsubrs
in
sub
or
mov
sti
adc
lret
int
pop
cli
cs
fisttpll
xchg
in
clc
std
xchg
inc
data16
cmc
test
adc
sbb
sysexit
push
xorb
jg
ret
or
push
scas
pusha
jmp
or
sbb
scas
jb
or
out
out
pop
sar
xchg
aad
mov
mov
pop
das
subb
adc
popa
sbb
sub
sbb
xchg
int3
xchg
hlt
mov
mov
popl
clc
fcoms
pop
rcrl
scas
jecxz
out
push
adc
gs
insb
adc
jo
into
mov
xlat
cmc
mov
addr16
ret
gs
pop
push
mov
in
add
jo
xchg
mov
mov
add
cmp
mov
mov
lahf
outsl
ss
sub
ds
push
ja
add
sbb
xchg
into
test
rclb
test
ficomps
test
das
fwait
and
cmp
mov
sub
das
icebp
jae
jno
push
cmp
orl
inc
push
mov
adc
xchg
mov
adc
cmp
adc
out
xor
out
notb
or
mov
xor
dec
adc
test
into
bnd
pop
pop
fcoms
je
hlt
xor
enter
das
jae
fld
cs
ret
loop
jmp
gs
xor
lea
cmc
lods
aaa
scas
addb
mov
jle
pop
and
dec
rolb
movsl
je
mov
mov
sub
mov
fdivrs
clc
dec
test
daa
sarb
mov
call
mov
movsb
lods
inc
fwait
lds
ljmp
mov
mov
into
mov
cmpsb
movntq
out
xor
mov
rol
xor
int
imul
test
cmpsl
les
shll
mov
inc
fldl
or
mov
movsl
mov
arpl
ja
imul
mov
push
out
std
sub
adc
mov
or
lea
sub
mov
repz
dec
decb
pop
stos
or
data16
sahf
push
xor
daa
lods
mov
out
xor
rcr
in
test
sbb
clc
enter
lret
and
jg
shlb
sbb
cltd
or
imul
push
fldt
outsl
dec
xchg
jmp
push
orl
jmp
push
mov
mov
mov
dec
and
sub
jg
inc
pop
clc
mov
jbe
scas
scas
rcr
mov
int
mov
push
leave
add
aad
or
jno
stos
mov
fucomp
outsb
insb
imul
rolb
hlt
sbb
imul
test
test
repnz
mov
pop
inc
stos
or
loope
fwait
ljmp
divb
mov
push
insl
sbb
jge
jne
push
add
out
push
adc
push
sub
jmp
test
xchg
push
xchg
fdiv
addr16
cmc
cld
rol
lahf
pop
fstpl
fists
and
gs
pop
aaa
mov
rorb
jecxz
cmpl
jl
mov
sbb
cmp
pop
shlb
data16
push
lret
rolb
mull
inc
pop
push
fst
icebp
shll
jmp
xlat
sahf
stc
clc
xchg
xor
fisubs
outsb
pop
call
push
mov
mov
mov
stos
bound
or
and
sub
nop
jnp
xchg
push
jecxz
lods
ss
in
out
push
jmp
loope
jb
add
insb
in
sbb
mov
add
mov
and
mov
in
pop
mov
shll
into
push
adc
pop
mov
inc
test
jp
jl,pt
add
mov
cmpsl
aaa
aad
es
jns
adc
fwait
dec
xchg
adc
mov
scas
loopne
shrb
mov
imul
iret
outsl
push
mov
dec
in
test
xor
icebp
push
inc
bound
cwtl
fisubrs
rcll
bound
push
jge
xchg
test
inc
push
ret
dec
lds
jp
xchg
lret
mov
dec
out
lahf
outsb
adc
jge
jo
fs
adc
and
mov
rcrb
rclb
in
rcr
sub
in
add
cltd
ja
pop
scas
jns
outsb
ret
fistpl
mov
int
int3
pop
test
sarb
pop
or
enter
or
cmc
inc
movntps
leave
pop
mov
cwtl
fwait
xchg
test
adc
push
sbb
pop
mov
test
std
mov
je
imul
xchg
mov
lret
and
adc
ret
fsub
clc
ja
cmp
mov
or
mov
dec
or
rcrl
inc
xchg
pop
out
pop
in
push
outsl
je
ret
and
imul
push
adc
mov
dec
sbb
test
mov
iret
inc
jns
pop
out
insb
dec
inc
cmp
popa
push
mov
xchg
adcb
aas
push
cmpsl
ljmp
cmp
movsl
icebp
das
in
push
test
outsb
pop
test
arpl
dec
jge
outsb
decl
and
sbb
sbb
cwtl
test
lock
enter
popa
mov
sar
das
inc
sub
cmc
int3
and
mov
outsl
stos
or
push
mov
xor
test
jbe
hlt
pop
divl
push
cmp
movsl
jge
push
enter
or
mov
dec
inc
sub
lret
adc
or
adc
cmp
out
lea
mov
mov
jae
mov
xchg
out
call
adc
pop
xchg
ja
jnp
dec
xchg
jnp
fistpll
push
jne
int
jge
shlb
gs
divl
arpl
call
jo
sbb
mov
in
push
sbb
inc
enter
int
mov
mov
out
jno
jno
sub
adc
loope
and
mov
pop
rcrb
dec
cli
xchg
les
pop
add
les
mov
fcmove
jnp
dec
inc
mov
loope
mov
mov
xchg
sbb
notl
insb
inc
dec
sbb
push
xchg
fimuls
jmp
sbb
xchg
arpl
ficomps
ss
mov
pop
jno
sub
pop
int
fisttps
sbb
test
add
add
daa
inc
mov
inc
lea
lret
mov
dec
sub
pop
and
frstor
outsl
in
mov
popa
dec
xchg
arpl
fdivrl
fstpt
ds
aam
or
mov
loop
out
faddl
repnz
cli
ret
push
outsb
fstpt
dec
and
push
cwtl
fsubs
outsl
cltd
dec
rcrb
xchg
sub
mov
enter
stos
jp
cmp
inc
or
dec
in
data16
and
loope
xor
arpl
jnp
hlt
adc
xor
mov
pop
das
dec
hlt
cld
int
inc
scas
test
add
sub
or
mov
scas
lods
and
addb
mov
pop
inc
call
cltd
xchg
jle
mov
and
test
movsb
stc
shlb
xor
mov
pop
or
out
cmp
jp
mov
adc
std
jg
stos
and
pusha
xlat
inc
mov
sub
push
lods
test
lahf
das
movsb
lret
lods
das
and
mov
ret
push
lret
imul
stos
jae
mov
inc
ret
mov
cld
mov
shl
inc
ret
gs
sbbb
lods
jb
pop
pop
cmpsb
rol
push
out
jo
fistps
xor
popf
cli
nop
mov
mov
je
inc
jecxz
jl
imul
adc
jle
sbb
daa
cs
loopne
or
stc
in
int3
push
jne
push
push
xchg
xor
mov
push
sahf
subl
and
in
cmpsb
mov
xchg
aaa
dec
ljmp
pop
sbbb
jbe
mov
and
lock
sbb
push
sahf
int3
xorb
jge
xchg
mov
sub
jbe
or
mov
mov
push
and
and
dec
xor
ss
orb
push
test
sbb
pavgw
daa
sub
sahf
mov
int
jns
fwait
dec
mov
sub
fld
jne
sbb
ret
adc
rcr
adc
outsb
cmp
jbe
jae
repnz
push
jae
cld
sbb
sbb
adcb
sahf
sbb
inc
insl
mov
lock
push
adc
jae
xchg
add
cwtl
jo
adc
jbe
push
movsl
cmpb
enter
pop
rcrb
pop
jl
inc
push
cmp
leave
scas
push
sub
das
mov
add
sub
xchg
sbb
xchg
xchg
adc
push
or
mov
adc
ds
jg
or
xchg
inc
mov
inc
imulb
mov
cmp
mull
int
pop
sbb
mov
push
sbb
sbb
repz
xor
sub
and
xchg
inc
cmp
mov
imul
adcb
call
jmp
movsb
mov
lds
adc
into
lcall
mov
sahf
les
mov
int3
mov
push
hlt
sbb
cmp
insl
pop
lock
sar
add
mov
test
lock
dec
das
push
sub
test
movl
push
and
and
dec
imul
push
das
cmp
pop
std
out
sub
xchg
jbe
fcmovne
push
call
inc
dec
in
and
inc
jno
call
pop
xchg
ds
or
sbb
push
xchg
inc
inc
in
pop
inc
lea
ret
push
or
xor
pop
sub
xor
mov
or
pop
in
add
and
clc
pop
shll
int3
lds
mov
shr
fs
xchg
enter
push
ret
sbb
aad
mov
movsl
aad
daa
imul
repz
dec
and
cltd
out
sub
scas
push
mov
std
lret
sbb
mov
ja
xor
call
rcl
jle
fcmovu
je
mov
adc
sbb
jbe
dec
mov
push
xor
stos
enter
out
mov
jge
jno
adc
mov
xor
push
rclb
dec
mov
sbb
pop
shlb
addb
movsl
mov
rcrl
xchg
adc
dec
ficoml
mov
dec
aad
imul
pop
add
adc
pop
lret
adc
shl
inc
push
cmc
dec
negb
in
mov
jg
hlt
mov
inc
loop
xchg
movsw
jle
xchg
cli
sbb
cmc
adc
scas
or
push
push
ss
data16
ss
jmp
bound
int
or
das
imulb
and
jno
popa
shlb
mov
push
lahf
push
xchg
dec
or
jo
cltd
cmpb
mov
addr16
pop
cmp
in
rcr
int3
add
push
fldenv
adc
test
xor
inc
mov
cmp
xor
into
mov
push
mov
xchg
sar
test
or
jns
dec
mov
and
jns
in
test
pop
mov
aam
mov
fst
pop
movsl
and
daa
sahf
ror
push
pop
clc
aaa
pop
fisubs
sbb
mov
pop
mov
jns
or
cwtl
lahf
mov
mov
jmp
pop
mov
inc
sub
mov
xchg
pop
das
pushf
sbb
lds
out
mov
xorps
fwait
imul
push
inc
loop
sub
int
out
inc
pop
bnd
inc
aas
jle
punpckhdq
ret
in
or
lahf
rorb
test
iret
std
outsb
shr
adc
pop
pop
lret
sub
negl
dec
je
xor
nop
or
mov
test
sahf
in
xchg
repnz
mov
sub
cltd
bound
hlt
mov
and
xchg
jge
inc
lahf
cmp
aam
mov
sbbl
mov
mov
and
roll
outsb
cs
fucomi
imul
enter
fstps
and
inc
pop
add
sbb
imul
lods
xchg
or
mov
loop
movzwl
negl
into
movsl
mov
fst
add
mov
das
cmpsb
dec
and
ja
and
stos
in
pop
inc
fidivs
or
jb
mov
ficompl
lea
jle
jo,pn
aas
pop
jns
or
loope
push
adc
fmuls
sbb
daa
jnp
jb
ret
and
sub
addb
jnp
daa
dec
push
pusha
sbbl
and
pusha
cs
mov
jmp
into
shlb
popf
push
pop
pop
test
les
fisubl
lret
and
clc
pop
nop
adc
fisttps
js
push
iret
ss
bound
insl
in
add
lea
out
jmp
mov
sbb
sbb
mov
xor
jbe
mov
cmp
push
mov
mov
call
add
aad
cmp
rcrb
dec
jne
sbb
xchg
mov
test
mov
repz
in
adc
adc
shrb
pop
xchg
push
adc
mov
div
push
cltd
pop
sbb
adc
mov
jno
push
hlt
stc
mov
cmp
sub
imul
add
inc
jbe
add
mov
loope
or
cltd
pop
pop
out
xor
test
je
dec
lcall
movsl
or
lock
jns
test
mov
fsub
shll
mov
sbbl
out
cmp
lods
stos
outsl
cmc
mov
adc
jge
add
in
repnz
xor
inc
cwtl
pop
adc
xchg
add
testb
adc
pop
out
js
push
push
sub
cmpsl
push
fldt
or
and
lea
xor
xor
sub
bound
loop
stos
adc
es
or
addl
jl
jb
push
jno
dec
dec
popa
mov
xor
std
loop
negb
mov
xor
xor
lods
lahf
jbe
fistpll
aad
fldl
enter
sub
ja
xchg
sbb
xchg
jbe
pushf
xor
sub
cmp
testb
insb
movsb
jno
popf
jp
mov
pop
xchg
fucomp
add
fcomps
ret
mov
adc
in
loope
xor
outsb
dec
ret
pop
arpl
sub
lahf
push
push
out
daa
cmp
movaps
cmp
pop
jns
mov
lds
inc
jb
mov
add
data16
mov
sbb
gs
adc
repz
xor
dec
jbe
shll
or
mov
mov
mov
push
inc
xchg
push
notl
ficoms
mov
out
cmp
xchg
cmp
adc
mov
pop
cmp
cld
fstpl
jmp
and
xor
mov
jns
aam
mov
fldt
adc
icebp
push
push
cmp
jne
shlb
shrl
filds
mov
adc
push
mull
sub
test
push
add
lods
sub
cld
xchg
ljmp
out
mov
mov
jle
mov
jns,pt
out
das
icebp
imul
scas
les
in
or
inc
into
in
ret
cltd
out
xor
xor
hlt
pop
adc
loope
adc
jno
shrl
sbb
xchg
fcoml
in
dec
pop
cmp
mov
testl
push
out
inc
sbb
movsb
lods
xor
fwait
push
fdivrl
xor
pop
pop
pop
inc
mov
or
xor
mov
pop
add
xor
lahf
jae
add
or
mov
adc
cmp
sbb
xchg
test
jno
jnp
lcall
adc
jbe
xor
and
add
negl
aaa
add
sub
repnz
sbb
mov
push
inc
xor
mov
xor
xor
insb
loopne
sub
xchg
jecxz
fnstsw
add
mov
enter
test
sti
push
pop
xchg
sub
fsubs
cmpsb
orb
and
adc
xchg
sub
popa
daa
pop
sbbb
or
dec
loope
jp
fstpt
mov
xchg
fstps
fstl
lea
fucomp
mov
mov
push
in
mov
ret
pop
mov
movsb
inc
mov
mov
lods
cmpb
jmp
hlt
loop
adc
mov
lret
fdivl
lret
and
cmpsb
loopne
xlat
out
mov
bound
fsubl
pop
in
xor
inc
mov
and
rcrl
sbb
ss
je
adc
fwait
add
dec
fcmovnu
js
fs
rorb
jnp
les
movsl
add
loopne
mov
mov
loopne
cmp
xchg
mov
cmp
lods
movsl
pusha
sub
out
roll
inc
clc
and
jecxz
outsl
jmp
and
jl
in
mov
add
push
add
insl
hlt
mov
and
push
cmp
mov
xor
hlt
in
ja
or
icebp
cmp
cmp
pop
loop
cli
mov
jecxz
movsb
sub
js
repnz
mov
imul
jecxz
loope
bound
insb
dec
rolb
mov
into
js
sub
mov
fmuls
pop
loopne
or
hlt
add
pop
ja
jno
push
stos
out
imul
aam
lahf
or
dec
xor
mov
mov
mov
outsb
push
mov
in
ret
repz
push
rorl
ret
popf
xor
addr16
movsb
and
fisttpl
fs
scas
and
push
inc
and
hlt
loopne
xchg
jp
loope
add
lahf
clc
popf
rcrl
shrl
dec
lea
mov
sub
jne
pop
aad
and
sub
and
mov
out
adc
call
mov
pop
out
dec
lcall
in
mov
dec
jmp
dec
jns
dec
jge
pop
push
imul
pusha
out
sub
sarl
mov
cmp
sbb
or
and
mov
ret
fs
daa
xchg
faddl
push
pop
adcl
fs
cld
aam
xchg
jb
jno
fwait
iret
push
mov
mov
sub
cmp
icebp
mov
pop
adc
hlt
stos
sti
cmpsb
fucomip
insl
push
cmpsl
adc
mov
and
mov
dec
movsl
mov
sti
sbb
int3
cmpsl
fstpt
addr16
cmp
xor
jb
inc
mov
in
pop
sub
mov
or
fdivs
fmull
jnp
add
fnstenv
sub
fwait
pop
out
mov
mov
and
sbb
stc
leave
mov
push
ljmp
and
hlt
sbb
frstors
icebp
sti
int
dec
rcll
xchg
xor
lcall
insb
das
ds
pop
divl
and
mov
xchg
jmp
pushf
pop
inc
add
incb
aas
adc
and
xchg
dec
outsl
or
jge
popf
add
lahf
in
lcall
mov
inc
mov
xchg
mov
in
add
addb
fisttpll
dec
sbb
cmpsb
and
jl
and
sub
inc
sbb
mov
mov
or
xor
in
sbb
gs
dec
jo
inc
sti
jnp
xor
mov
sbbb
pop
add
pusha
sbb
mov
insb
out
dec
out
sbb
inc
inc
pop
repz
cmp
mov
test
bound
in
int
jae
mov
jge
adc
dec
shr
insb
xchg
add
or
push
xchg
scas
push
sbb
data16
jbe
bound
flds
scas
out
leave
repnz
pop
pop
fs
xlat
subw
mov
cmpsb
cmp
pop
test
sub
pop
arpl
rorl
push
dec
adc
xor
je
clc
adc
shll
mov
stos
or
add
and
dec
aas
mov
clc
cmp
fdivr
adc
push
into
inc
jae
push
inc
xchg
je
xchg
or
std
mov
jne
inc
jmp
in
notl
arpl
mov
inc
ret
add
mov
stos
cmp
gs
js
aaa
lahf
or
rolb
popl
cmpb
cmovns
sub
push
mov
mov
mov
lock
push
xchg
push
mov
in
and
aad
push
dec
xchg
pop
xor
outsb
mov
xchg
rcl
out
xchg
and
sti
rclb
push
xorl
cltd
push
jno
jle
xchg
jno,pt
push
lods
mov
lret
call
leave
pop
mov
cmp
xor
js
xchg
inc
shl
and
arpl
gs
movsl
add
clc
or
sbb
mov
stos
notb
dec
adc
imul
push
mov
mov
pop
movsb
or
mov
and
pop
jg
inc
arpl
jl
out
in
mov
stos
inc
xchg
mull
push
adc
fildl
xchg
loopne
pop
dec
out
cmc
lock
pusha
push
lea
insl
test
mov
sbb
loop
cmp
sbb
testl
dec
mov
sub
inc
mov
add
or
mov
into
test
notb
ljmp
out
and
jbe
mov
mov
test
pusha
push
int3
dec
mov
jae
adc
pop
cmp
jb
xchg
mov
xchg
popa
imul
and
mov
jo
insl
jge
mov
movsb
mov
jmp
cmpsb
add
and
pop
stos
push
inc
cmp
rcll
outsl
sub
es
test
leave
xchg
or
sub
out
xchg
fmuls
std
test
or
in
jno
mov
sub
xor
sbbl
push
clc
push
adcb
mov
or
ret
jge
outsb
mov
inc
or
scas
out
xchg
pop
xchg
mov
xor
adc
push
call
pop
fcmovu
xchg
addr16
jnp
ror
iret
xchg
xor
sbb
enter
movsb
or
scas
mov
pushf
mov
ds
push
or
inc
push
adc
fwait
cmp
ss
cwtl
into
jle
mov
lods
cwtl
lret
into
cld
int3
loop
mov
enter
mov
imul
stos
adc
lea
pop
push
icebp
std
fidivs
and
imul
pop
adc
outsb
mov
test
inc
and
fstps
es
aam
scas
out
pop
inc
testb
sub
in
fsubrl
sub
mov
add
cs
mov
mov
out
lock
pop
mov
test
hlt
call
loop
push
jecxz
mov
pop
ret
mov
mov
sahf
ss
jl
cli
ret
iret
jmp
lret
fstpl
mov
push
sub
adc
pop
adc
sub
insb
rorl
fs
xlat
xor
js
jmp
daa
sub
add
pop
enter
xchg
pusha
add
mov
adc
sub
inc
loopne
sub
sbb
push
mov
in
lret
pop
cmc
cs
push
inc
ret
dec
adc
je
lret
jne
pop
pop
mov
popa
push
sub
out
ljmp
add
push
mov
mov
sub
imul
and
or
dec
mov
aaa
jmp
sar
push
ja
repz
xchg
or
push
dec
and
lods
xchg
dec
int
xchg
shrl
and
sub
clc
sbb
dec
jg
xchg
inc
sbb
lds
arpl
xchg
add
stc
sub
test
arpl
in
test
lods
aas
mov
popf
rcr
add
test
dec
outsl
dec
inc
ret
pop
inc
in
xor
or
jne
inc
jae
jbe
push
add
mov
fwait
les
mov
xchg
ds
xor
jp
gs
jo
out
int
lds
bound
icebp
loopne
push
push
loop
mov
mov
mov
outsl
mov
int
cmpsl
cmc
shr
popf
inc
out
stc
insb
and
mov
ja
aam
int3
fwait
jecxz
test
testb
fsubrp
aas
loop
sbb
aaa
out
sti
sahf
pop
fdivrl
inc
adc
hlt
jae
lahf
movsb
mov
int3
call
mov
sarb
test
aas
leave
test
lret
push
fwait
pushf
dec
sti
loope
stos
lcall
in
mov
dec
add
pop
and
xchg
rorb
add
pop
pop
sarl
imul
push
adc
cmpsb
in
xchg
inc
loop
dec
mov
cli
xchg
xchg
mov
stos
and
jmp
mov
jbe
dec
xor
in
in
sub
sub
movsl
adc
lahf
test
dec
mov
jg
cs
mov
or
mov
roll
push
in
mov
xor
int
dec
mov
sti
ja
jne
fdecstp
push
bndstx
aad
cltd
inc
out
mov
add
rcrb
fmull
out
xor
add
or
pop
js
test
mov
lret
and
repz
inc
push
mov
push
xlat
xchg
hlt
ds
and
dec
jnp
in
sbb
js
arpl
lcall
jmp
sbb
je
mov
int
or
jnp
sub
repz
repz
and
mov
int
mov
shll
mov
call
arpl
fwait
loopne
out
xchg
add
mov
pop
cmp
jg
or
xor
cmpsb
lods
jb
xchg
or
mov
test
xchg
repz
push
xchg
adcl
push
xor
fldt
inc
inc
adc
scas
cmp
or
leave
dec
xor
jo
lea
push
cs
pop
and
lea
cmp
jbe
je
repz
sub
in
sti
jnp
es
cmp
insb
insb
dec
cli
mov
and
and
inc
popa
dec
adc
lea
les
or
fsubr
or
ljmp
loop
and
repnz
addr16
mov
out
loopne
mov
lret
leave
pop
xchg
movsb
test
test
jns
xor
jns
mov
loope
repnz
or
push
cld
pop
out
add
push
jl
push
popa
daa
arpl
out
jmp
add
jbe
mov
outsl
dec
xchg
push
fadds
push
loopne
push
les
inc
xchg
sub
dec
clc
push
sar
movsb
mov
leave
lret
fstpl
jno
loop
bound
test
in
pusha
xor
insl
test
sbb
mov
inc
xchg
xor
sti
mov
scas
inc
std
push
rcrb
ljmp
cli
imul
in
dec
sub
xchg
fstpt
out
jne
add
dec
add
xor
sub
sub
mov
shl
pop
orl
mov
sti
mov
ss
push
pop
outsb
dec
lret
fwait
scas
fidivrs
jl
pop
inc
scas
inc
add
repz
insl
sahf
adc
test
xor
xchg
mov
lcall
jp
pop
mov
and
xor
and
or
lret
rolb
nop
out
sub
lahf
or
xor
popa
popf
dec
mov
cmpsb
push
inc
shll
je
adc
xchg
pop
jecxz
jecxz
mov
inc
test
xor
data16
dec
mov
dec
cltd
mov
jmp
jo
test
repnz
jl
test
mov
jp
xor
cmpl
pop
in
jmp
jo
dec
enter
and
jae
mov
in
mov
and
push
or
jb
sbb
xlat
cmpl
es
fidivrs
fwait
mov
and
popf
push
cli
nop
dec
jmp
jno
nop
lret
and
ds
addr16
mov
pop
lods
mov
dec
and
xchg
dec
and
nop
outsl
popa
bound
sahf
push
sbb
pop
and
iret
dec
and
mov
mov
jmp
jns
int3
aaa
push
and
add
cltd
jmp
fs
ret
leave
enter
mov
ret
dec
mov
pop
pop
add
sub
xor
movsb
out
and
lahf
cmp
xchg
aas
sbbl
sbb
lret
cmp
mov
mov
or
mov
jp
mov
cmp
push
add
cmp
mov
out
std
loop
inc
adc
or
add
imul
fstps
roll
and
sbb
iret
sub
or
dec
in
cmp
pop
jecxz
sbb
fiaddl
adc
xchg
xchg
cmp
icebp
test
loope
mov
into
jge
ror
sub
lea
mulb
rolb
xor
push
test
inc
das
pop
dec
jge
mov
mov
mov
mov
gs
xchg
pop
ds
ret
mov
push
pop
pop
cmp
jae
aam
or
mov
mov
adc
mov
fucom
xchg
push
out
adc
adcb
push
jnp
stc
pop
sub
push
lret
mov
iret
nop
in
pushf
cs
ja
pop
mov
stc
rcrl
fwait
xor
loope
dec
xchg
fwait
add
test
rorb
cmp
xchg
dec
jb
daa
lock
ret
cwtl
dec
repz
mov
and
cltd
jnp
stc
add
mov
ljmp
add
int3
lea
gs
xchg
aas
aam
add
mov
and
push
dec
dec
cmp
sub
and
lret
incl
popa
enter
jns
les
cltd
out
or
cmp
cmp
dec
xor
fmulp
adc
cmp
adc
sub
outsl
xchg
xor
inc
in
out
add
lret
jne
and
lcall
in
and
aad
jnp
add
xchg
movl
fucomip
sub
sarb
mov
fistpll
pop
pusha
jl
out
xor
xor
stos
dec
pop
jp
jl
dec
dec
jge
nop
adc
xorb
mov
shlb
cmp
dec
jle
mov
sbb
mov
mov
cwtl
xchg
dec
data16
jne
negb
jae
pop
push
in
outsl
fbstp
jp
xor
aad
mov
xor
pop
cs
es
mov
adc
aad
pop
andl
xchg
dec
mul
mov
pop
jne
shrb
enter
daa
push
or
inc
ja
mov
inc
in
cmpb
inc
flds
mov
daa
test
popf
inc
mov
sbb
xlat
xchg
xchg
push
shlb
outsb
cmp
xchg
jno
or
push
push
jne
adc
jmp
pop
lret
sti
mov
xchg
xchg
clc
fiadds
into
jae
test
sub
push
add
out
fs
mov
pop
and
pop
mov
mov
xor
iret
jns
pop
pop
mov
jae
aam
addr16
cltd
movsb
cld
xor
jno
out
adc
mov
out
add
dec
addr16
or
rcll
out
sbb
jbe
es
mov
aaa
mov
fstps
cmp
mov
outsl
test
sahf
cld
and
pop
cmpsb
push
and
mul
add
sub
xchg
cmc
shlb
loop
pop
outsb
shlb
divl
fs
call
sub
fdivl
dec
cwtl
cltd
adc
shl
pop
gs
int3
mov
rorb
mov
jl
das
mov
mov
inc
fbstp
lock
add
mov
mov
mov
cwtl
fildl
shrl
sarb
cmp
insb
or
jns
cmp
cmpl
mov
fimull
int3
pusha
sbb
pop
out
mov
inc
mov
xchg
idivb
mov
fcomp
out
stc
cs
das
daa
mov
bound
addr16
sub
or
gs
outsl
lcall
jns
dec
or
jg
mov
imul
imul
lods
sti
sbb
sahf
je
stc
adc
adc
cld
sti
jge
xchg
cmp
call
mov
inc
sub
out
cli
cmc
jg
and
nop
xchg
js
dec
shrl
cmpsb
mov
stc
xchg
mov
adc
ja
arpl
xchg
lahf
scas
push
insl
fs
push
outsl
or
inc
mov
icebp
cmp
xchg
and
fsubs
jb
jmp
push
push
lods
iret
rcrb
pop
lahf
mov
negb
cmp
inc
inc
xorb
jmp
call
stc
stos
inc
dec
arpl
mov
pop
out
out
std
pusha
lret
jbe
inc
dec
test
je
sub
jg
pop
out
pop
push
xor
add
add
test
out
xchg
jl
iret
push
mov
sub
scas
repnz
add
aad
outsl
dec
push
aam
mov
in
pop
stos
jns
js
outsl
add
adc
push
out
cs
mov
pop
cli
adc
pop
je
sbb
fs
mov
out
lds
jno
pusha
repz
aam
pop
and
mov
xchg
outsl
inc
xchg
fdivs
sti
mov
iret
lds
jecxz
movsl
mov
push
iret
xchg
cs
pop
out
inc
xor
cmpsl
push
cmp
int3
sbb
xchg
sbb
jb
pop
stc
ja
shll
push
inc
pop
add
xchg
fs
inc
xchg
cmp
and
jmp
scas
stos
es
sub
or
in
and
pop
and
fs
cld
mov
mulb
ja
mov
cmp
jbe
iret
push
stc
std
fisttps
pop
rclb
int3
pop
jmp
mov
pop
lret
mov
jno
xchg
sub
int
frstor
movl
sub
or
jb
lahf
mov
jle
pop
cwtl
inc
sahf
fstl
das
int
and
enter
pop
xor
mov
adc
pop
sbb
aad
mov
js
fs
negl
scas
fsubrl
out
mov
inc
movsb
push
fwait
and
iret
or
push
dec
xor
pop
inc
xchg
lret
push
xor
hlt
ret
mov
shll
xchg
jle
loope
mov
mov
jp
sbb
add
pop
gs
test
out
pop
hlt
out
inc
popa
pop
decb
fwait
adc
cmp
adc
xor
shl
jns
mov
sahf
inc
int
jmp
cmpsb
pop
jo
dec
dec
enter
inc
mov
and
sub
shrb
insl
aam
sbb
jl
xor
xor
xor
pop
jne
sub
ret
mov
imul
scas
mov
mov
negb
fcmove
sbb
xor
popf
inc
xchg
aad
mov
pop
sub
mov
imul
jmp
shlb
inc
rorl
inc
mov
out
pusha
test
xchg
es
pop
and
int
mov
sub
icebp
mov
add
lods
into
mov
scas
aad
jle
mov
jb
inc
and
dec
inc
aad
int3
fisubrl
jns
cmc
and
and
out
dec
data16
pop
in
xchg
stos
pop
inc
les
pop
mov
popf
sub
inc
and
push
mov
xchg
fstpt
xchg
and
in
push
xchg
jg
pop
sbb
clc
mov
xchg
cltd
inc
pushf
dec
jbe
jmp
outsb
ja
mov
repz
dec
sbb
out
adc
and
ljmp
fdivl
pop
push
lret
add
in
mov
mov
fs
imulb
andb
xor
hlt
loop
mov
sub
test
push
out
outsl
inc
push
push
mov
jns
dec
add
out
add
jae
leave
repnz
add
pusha
dec
add
jnp
xor
in
stos
movsl
fimuls
ret
mov
out
sbbb
insl
inc
xchg
mov
jle
in
jg
xor
in
xchg
jg
push
mov
dec
insb
daa
addl
inc
add
andl
jnp
lods
insl
or
or
push
cmp
lret
lahf
dec
pop
jecxz
mov
mov
inc
inc
inc
call
ja
ss
std
dec
add
sub
cmp
dec
add
add
dec
adc
sbbl
popa
xchg
repnz
arpl
jmp
in
xchg
push
lahf
loopne
and
outsl
outsb
pop
inc
cmp
push
push
stc
pop
subb
aad
rorl
or
dec
loopne
mov
orl
push
daa
leave
imulb
sbb
bound
and
adc
stos
inc
aas
and
push
add
cld
lods
xchg
xor
xchg
sti
mov
cs
xlat
ret
adcb
test
sub
call
xor
push
mov
out
jnp
jnp
addb
dec
les
leave
push
mov
adc
nop
std
lods
pusha
imul
inc
mov
jo
sub
mov
cmp
sbb
mov
cltd
popa
jg
xor
mov
xchg
jns
mov
jl
jle
add
dec
enter
in
dec
mov
and
jns
out
icebp
sub
loop
hlt
notl
pushf
int
and
in
test
ljmp
or
daa
push
aaa
cmp
stos
or
loop
dec
ljmp
hlt
mov
or
pop
lea
push
sti
js
les
sbb
icebp
cs
jle
rclb
icebp
xlat
and
sbb
in
shlb
mov
pop
daa
sbb
cmp
adc
mov
sbb
mov
push
ret
adcb
repz
addb
cmp
add
dec
shlb
shrb
jae
data16
mov
out
out
dec
cmpsl
cmp
sbb
lcall
fnstcw
jb
sbb
xlat
adc
inc
cmpsb
push
inc
push
popf
lds
pusha
cmp
jle
pop
sarb
jg
add
sbb
seta
imulb
or
inc
adc
sub
add
or
rclb
cmp
mov
fcmovne
les
das
call
pop
in
sub
les
les
xor
and
test
bound
subl
pop
pop
dec
cltd
mov
sar
push
das
sbb
cmpsl
mov
stos
inc
inc
adc
jnp
mov
mov
mov
or
dec
fimuls
or
aam
lahf
or
fcomps
pusha
add
mov
fstpl
in
out
cltd
cmp
fnsave
mov
mov
and
cmpsl
cmpl
gs
sub
adc
data16
pop
sbb
movsl
mov
cmp
and
inc
rolb
shll
jb
ret
mov
xchg
popa
mov
je
sbb
adc
scas
pushf
popf
inc
rcll
jnp
movsl
pop
iret
cmp
stos
dec
outsl
pop
test
and
loop
pop
std
inc
scas
cmpsl
sbb
mov
jno
jg
shlb
inc
xor
add
dec
push
inc
push
imul
xor
sub
lret
or
jecxz
inc
jl
inc
and
in
and
popf
xchg
jne
test
mov
mov
add
sbb
cltd
enter
mov
lds
call
sub
inc
pop
arpl
jo
dec
sbb
xchg
lret
adc
fs
in
lods
sarb
dec
dec
imul
and
sbb
shll
xchg
loopne
mov
fsubrs
sbb
sbb
cs
mov
imul
cld
fsts
insb
xor
xor
inc
pop
cmpb
add
test
fbld
mov
lds
push
into
stos
int
pop
or
sbb
enter
nop
xchg
inc
rcrl
fcoms
inc
lock
inc
loope
inc
mov
out
ret
cmc
fnstsw
inc
pop
mov
mov
inc
sbb
push
addr16
addr16
sub
jbe
push
cmpsl
pushf
pop
ljmp
push
repnz
sbb
push
aas
lods
push
dec
mov
lret
pop
je
mov
or
loopne
in
cmpsb
pop
or
or
xchg
fs
mov
sti
or
orl
fsubl
and
addb
outsl
shrb
jmp
in
adc
dec
into
jg
popa
jns
or
mov
shr
jle
adc
push
fstpl
cmp
test
dec
lahf
pop
insl
and
out
mov
mov
fnstsw
sbb
push
frstor
lods
fiadds
inc
push
push
lret
sub
dec
adcb
pop
sbb
xchg
mov
cmpl
inc
push
adc
or
mov
mov
add
mov
les
pop
xor
jae
lret
inc
sbb
xlat
xchg
dec
loop
aad
push
inc
and
jne
scas
xchg
inc
mov
xchg
loope
jnp
or
roll
das
test
das
inc
xchg
in
mov
or
mov
mov
lcall
insl
subl
cmp
jo
scas
mov
inc
mov
push
movsb
add
pop
imul
aad
or
mov
cld
add
push
lods
add
test
mov
scas
adc
addr16
mov
adc
test
jne
push
test
push
gs
popa
aam
cmp
out
cmp
popl
out
dec
out
dec
cltd
jno
mov
adc
pop
cmc
push
fisubl
mov
xchg
pop
movsb
popf
and
add
js
mov
cmp
dec
jecxz
push
or
stos
sbb
jl
aas
pop
jbe
fs
fcomp
mov
je
and
mov
sbb
push
sub
out
pop
stos
je
cmp
scas
adc
lret
mov
sbb
jge
sub
xchg
mov
faddp
sahf
mov
pop
out
dec
enter
xor
das
lcall
jl
test
scas
jp
pusha
ret
push
test
jo
cli
pop
mov
in
insb
orl
div
mov
stc
inc
xchg
cld
adc
jmp
mov
aaa
push
mov
pop
jl
add
xchg
insl
icebp
int3
aaa
xor
jmp
sub
and
xorps
and
mov
sahf
sub
or
outsb
scas
aam
add
and
aad
shll
inc
aad
ja
adc
pop
jns
adc
pop
jp
mov
push
sti
jl
or
xor
jp
les
dec
in
or
adc
push
or
lcall
ret
jge
fsubrs
lahf
mov
fs
mov
movl
into
lock
je
daa
mov
dec
or
loope
pop
arpl
dec
and
jmp
and
mov
imul
xchg
jge
mov
jp
mov
outsb
pop
rol
push
sub
fstpt
mov
mov
cmpsl
sahf
daa
mov
mov
enter
inc
ret
xor
mov
mov
mov
movsb
sbb
sub
iret
add
mov
iret
sbb
push
mov
push
sbb
jecxz
hlt
pop
pop
pop
mov
xchg
sub
and
push
insl
stos
daa
jo
int
out
test
arpl
adc
lret
jp
mov
rclb
inc
add
jmp
mov
lock
sub
cmovne
cmp
jne
bound
adc
sbb
jmp
arpl
mov
ret
pop
mov
add
or
dec
mov
sbbb
push
out
into
es
sbb
dec
dec
enter
inc
sub
and
addr16
mov
adc
push
jb
inc
sub
call
jmp
pop
seto
test
inc
pusha
inc
dec
add
fdivl
mov
and
jno
es
adc
loope
into
pop
jae
sarl
inc
cmpsb
mulb
mov
aas
std
xor
popa
jp
inc
je
mov
out
orl
add
add
popf
jle
pop
jnp
push
jbe
push
je
dec
pop
in
jno
loop
fwait
leave
int
jo
push
xchg
shlb
in
loope
fidivl
cwtl
jo
mov
adc
sbb
or
mov
jp
xor
mov
mov
adc
enter
push
sub
in
xor
ss
jp
ljmp
scas
ja
fs
inc
pop
outsb
adc
scas
or
adc
mov
xchg
int3
out
lods
test
loop
das
js
lahf
scas
ret
dec
jle
xchg
xor
cld
test
or
jle
add
fstl
pop
stc
ljmp
orb
gs
loop
and
jbe
xorl
jne
add
jo
hlt
ficoms
xor
push
inc
aas
sub
mov
and
lods
xor
cmc
fcmovu
sti
sarl
jbe
xchg
fsubr
and
or
xchg
lret
dec
je
fstpt
inc
sub
out
into
pusha
mov
cld
push
imul
popf
jne
jbe
ja
mov
mov
xchg
scas
ss
int
adc
mov
xor
loope
fcmovne
mov
loop
mov
fadds
dec
jns
out
mov
mov
inc
xor
jmp
in
insl
mov
mov
loop
add
xchg
lods
pop
cli
jmp
out
shll
loop
in
enter
fldt
jmp
cmp
mov
jo
fistpl
ljmp
xchg
lret
mov
cmp
cld
icebp
sbb
dec
fwait
dec
jbe
stc
xorl
xchg
sbb
cmpsl
dec
rdtsc
sub
arpl
movsb
cmp
lret
jae
jb
sti
ss
loope
sub
insb
addr16
cs
xor
out
lret
mov
add
cmp
sahf
xor
lods
jne
lret
in
mov
xor
call
cs
loop
pop
and
icebp
stos
cmp
dec
mov
xchg
sti
ja
data16
dec
insl
arpl
faddl
pop
xlat
pop
sbb
hlt
loopne
adc
xchg
cmp
aaa
jl
push
mov
call
cld
cmp
push
xchg
dec
fisttpl
out
into
in
xchg
mov
mov
pop
hlt
mov
add
int
jbe
js
lds
xorl
movsl
sarl
dec
xor
xor
cld
subb
test
cmp
popa
test
pop
push
nop
or
shl
mov
push
adc
mov
mov
mov
loopne
adc
mov
and
ja
sbb
out
mov
daa
movsb
jl
push
inc
push
out
mov
mov
sbbb
mov
push
loope
stos
or
sbb
xor
cmc
inc
fcompl
sub
mov
sbb
jnp
pop
inc
fnsave
inc
hlt
bound
lock
pop
outsl
std
pop
mov
pop
add
xchg
sbb
dec
bnd
fcmove
loop
imul
jmp
push
pop
popa
lods
lock
les
dec
xchg
cmp
insb
fs
adc
mov
test
inc
repz
mov
in
xchg
pop
sbb
movsb
int
jp
push
adc
int
mov
xchg
cmp
lahf
shll
imul
add
call
sub
jae
xchg
int
je
psraw
pop
dec
push
pop
movb
cs
ds
in
or
andl
stos
mov
pop
mov
lret
or
insl
faddl
jne
fstl
insl
loope
les
add
movsb
cmp
adc
out
test
cli
dec
add
inc
pop
pushf
roll
mov
daa
xor
scas
orl
scas
push
fstpl
mov
and
pop
mov
xchg
mulb
psubb
push
adc
and
les
insb
roll
jb
std
and
mov
lcall
mov
inc
arpl
loope
fcomps
call
andb
pop
adc
lret
inc
loope
pop
push
aad
mov
adc
cmp
jno
cmovnp
sub
push
mov
shrl
cs
mov
cld
pop
in
addr16
cmp
cli
loopne
sbbl
xlat
fstpl
sub
xlat
mov
lahf
test
popf
stc
rorb
sarb
pop
dec
jae
or
jmp
inc
cmp
push
daa
push
sbb
jne
push
cmc
enter
jmp
jae
movsl
loope
loopne
and
inc
jo
pop
test
pushf
test
movsb
arpl
ret
dec
fisttpll
aad
iret
imulb
cmpsl
ret
dec
pop
out
push
stos
jmp
cmpl
sti
xor
testl
push
lcall
jge
pop
scas
dec
lret
lea
sub
push
mov
nop
lock
mov
cmp
lret
inc
test
out
sbb
notl
lret
mov
mov
mov
xchg
loopne
imul
xchg
or
stos
xor
out
push
cmp
mov
out
push
xor
mov
add
mov
mov
jno
pop
mov
gs
mov
mov
xlat
sbb
xor
ljmp
adc
mov
or
mov
sub
sti
pop
fsubl
sbb
lds
jne
ja
fmuls
jp
mov
std
lcall
arpl
int3
ds
inc
adc
fcoms
add
xor
fdivrs
jg
add
test
adc
sbb
mov
cmp
das
and
cmc
ret
cmpsl
ss
add
in
push
mov
or
stc
je
sub
mov
xlat
xchg
cmp
lea
inc
cld
icebp
outsl
fucomi
cld
push
test
pop
fs
lahf
inc
sub
rolb
pop
pop
mov
mov
xor
cmp
sub
cmp
sti
sbb
mov
mov
xchg
int
jmp
mov
xchg
and
pop
push
outsl
push
es
divb
popa
jecxz
ret
das
outsl
jne
add
sbb
mov
out
scas
push
leave
bound
in
jge
lds
loopne
pusha
jl
jnp
pop
loopne
push
lea
inc
lret
jne
mov
pusha
aad
xor
cvtpi2ps
mov
pusha
inc
xor
inc
xor
push
bound
add
out
jmp
mov
dec
push
mov
lock
in
sub
mov
xchg
daa
xchg
push
or
dec
call
jne
dec
lock
fcomi
or
lods
jnp
cli
addr16
and
xor
out
jecxz
mov
mov
cmp
mov
sbb
mov
cmp
mov
into
fwait
push
testb
add
outsl
stos
lahf
dec
mov
xchg
ja
sub
cmp
movb
dec
lcall
in
fcoms
mov
stos
gs
adc
cld
pop
push
xchg
cmp
fcmove
data16
sub
and
push
cmpsl
xchg
lds
in
dec
xchg
cmp
dec
jo
or
testl
jne
popf
ss
bound
and
jmp
lahf
mov
loopne
push
add
les
xor
stos
add
xor
nop
repnz
jo
mov
mov
test
inc
xchg
and
jns
jns
ret
add
jp
pusha
cmp
insl
int3
sbb
sbb
arpl
cs
lret
mov
imul
outsb
aad
in
repnz
hlt
shll
movsb
loope
and
push
pushl
add
lret
arpl
rcrb
push
mov
sub
cmp
clc
das
and
and
and
cmp
dec
test
test
mov
push
stos
cltd
push
js
popa
jge
test
add
icebp
or
je
mov
inc
idivl
mov
jge
out
hlt
jnp
add
push
adc
out
cmc
lds
jb
jmp
mov
sub
fwait
in
inc
lods
cltd
or
je
push
in
jecxz
lea
mov
cltd
cs
and
adcb
and
mov
and
loop
mov
mov
or
xchg
sub
sub
xor
add
dec
les
pop
lret
mov
in
mov
lds
loop
cmp
push
call
gs
jp
pop
xchg
mov
fistpll
pop
mov
add
jle
push
mov
push
mov
lret
mov
cmpsl
dec
popf
test
push
fnstenv
and
paddusb
cmc
jecxz
mov
xlat
xor
cmp
into
in
mov
xor
imul
xor
repnz
test
in
cwtl
mov
shrb
adc
jle
pop
and
jmp
adc
mov
in
pop
js
mov
jmp
in
roll
cltd
iret
jmp
jbe
repnz
push
cmp
outsb
mov
enter
mov
jmp
sarl
out
imul
push
fisttps
nop
fcmove
lea
push
arpl
xchg
pop
out
and
test
addb
mov
lcall
imul
call
or
sti
dec
xchg
jmp
xchg
leave
adc
jbe
in
inc
inc
jns
imul
sbb
xchg
push
pop
mov
imulb
lods
push
dec
aad
pop
inc
dec
js
dec
pop
or
fisubs
aas
pop
sarb
mov
fsubrl
mov
push
dec
popf
lret
andl
mov
shll
popa
jg
sarl
add
cmp
or
ror
lods
xor
insl
xchg
jmp
add
outsl
cmp
cld
negb
push
mov
adc
enter
lods
lods
pusha
sbb
add
cmpsb
daa
and
and
push
xor
jo
push
icebp
sbbl
out
dec
loop
addr16
pop
xchg
pop
dec
jbe
adc
or
das
add
icebp
lret
mov
test
adc
out
dec
popa
cli
mov
sbb
leave
push
sahf
mov
jge
or
adcb
in
sbb
add
and
pop
push
imul
mov
js
or
test
or
test
in
adc
xchg
cltd
int3
mov
cmp
push
mov
pop
cmp
call
data16
push
xchg
into
add
lret
ljmp
shll
insb
ds
xchg
or
rcrb
scas
rorb
add
rcl
aad
in
popa
fisubrs
stos
pop
jbe
test
pop
in
mov
iret
ja
ret
negl
imull
aam
add
lret
test
cli
or
in
int3
pushf
sub
pop
leave
cli
cld
cmp
insb
pop
jp
popf
rcll
fsubs
int
jmp
cmp
add
sti
daa
and
inc
std
outsb
xor
cmp
fnsave
add
lea
xor
sbb
add
mov
mul
popf
sbb
xchg
pop
fcomi
or
hlt
or
call
dec
std
dec
and
inc
mov
jecxz
cmp
addb
pop
lea
xor
push
or
pop
incl
sahf
push
jmp
mov
loopne
fs
sub
mov
daa
out
cs
mov
dec
fldt
inc
mov
mov
jbe
rol
repz
outsb
mov
adc
nop
pop
cmp
das
sub
hlt
mov
lods
inc
rolb
pop
cmp
shrl
fcompl
pop
pop
push
mov
xchg
faddl
dec
pusha
insl
jp
iret
into
call
push
icebp
mov
adc
repnz
inc
push
repnz
mov
shl
xchg
xchg
aad
test
mov
xorb
push
mov
test
sahf
jb
cmp
push
mov
xchg
xchg
iret
push
shl
fsubrp
int
cmp
in
push
popf
cld
cmc
loope
xchg
out
outsl
jle
sbb
popf
ljmp
xchg
icebp
les
xor
cmc
ja
or
push
jge
popa
les
dec
lret
inc
dec
xchg
nop
inc
jg
dec
dec
push
jnp
imul
dec
jno
xlat
and
push
push
and
lea
fiadds
lret
fbld
fs
call
aam
dec
add
je
mov
jge
mov
dec
push
data16
or
hlt
xor
rcrl
push
jl
xchg
fiadds
inc
mov
ja
add
jns
mov
and
lods
xor
fcmovb
cmpsl
fldcw
and
cmpsb
call
add
jl
enter
test
data16
in
push
jg
cmp
mov
insb
test
shrb
jge
ds
clc
jmp
xchg
xchg
scas
xchg
scas
int3
cmp
or
arpl
mov
xchg
ljmp
rorb
or
xchg
das
neg
dec
out
or
xchg
dec
sub
into
inc
fsts
mov
arpl
testb
push
std
stos
fdivrl
cmp
sahf
sub
xor
pusha
jns
cmp
test
popa
int
aaa
pop
adc
pop
mov
inc
adc
or
test
repnz
sbb
add
or
mov
lahf
and
sarl
or
repz
mov
jno
cmp
and
mov
or
and
xchg
mov
sahf
mov
inc
dec
jo,pn
xor
outsb
mov
sti
fs
jo
xlat
inc
xchg
dec
rcrl
or
out
ret
mov
sub
int
cvttps2pi
push
pop
outsb
outsb
fisubs
ds
outsb
mov
loope
cmp
out
pop
xchg
push
pop
pusha
les
xor
xchg
je
lock
into
shlb
cmp
sbb
mov
rolb
sahf
data16
into
or
cmc
es
mov
lock
or
mov
ljmp
jae
mov
pop
mov
ljmp
into
mov
test
xchg
mov
push
icebp
cmpsl
in
gs
and
inc
mov
xchg
sarb
pop
mov
add
jmp
test
and
jl
dec
arpl
imul
fidivs
xchg
push
jmp
add
fstl
jae
pop
test
insl
push
cmpsl
push
lret
xor
shl
xchg
test
jnp
pop
xchg
and
fcomip
adc
jns
mov
adc
fldl
add
and
cmp
jge
xor
push
sbb
shll
xor
cli
xor
cmp
ljmp
lea
fadds
dec
cltd
sti
xor
cmp
push
xchg
mov
testb
push
daa
lea
cmp
jmp
add
jns
stos
or
xchg
shr
push
les
cmp
pop
fadd
sbb
test
lods
adcb
pop
xchg
into
xor
pop
sahf
mov
mov
xchg
jecxz
popf
sbb
out
mov
jmp
push
adc
pop
xlat
shrb
add
xchg
mov
and
mov
test
xor
push
lret
mov
pop
dec
sbb
cmpl
loop
jecxz
mov
fcoms
into
int3
and
test
or
and
xchg
mov
pop
cs
cmpsb
sbb
in
mov
mov
bound
add
mov
cmp
dec
mov
mov
lds
call
mov
bound
out
dec
mov
cmp
adc
or
rclb
outsb
and
mov
jl
mov
dec
mov
fimuls
shr
outsb
add
fld
imul
aas
ds
and
fists
out
or
inc
stos
or
push
aas
dec
jbe
cmp
loope
mov
mov
adc
leave
sbb
jno
xchg
xlat
repz
cltd
push
dec
nop
pop
xor
mov
out
int
push
icebp
inc
or
sbb
xchg
mov
cmc
jb
cltd
ret
lahf
or
out
orl
imul
add
arpl
test
xor
out
stc
pop
movsb
jb
sbb
xor
sahf
stos
mov
add
inc
sbb
or
lret
loope
rclb
aas
imul
cld
call
mov
or
popa
fnsave
push
cmp
mov
int
jnp
ret
test
fistpl
jo
cwtl
in
das
dec
leave
mov
fmul
popa
rcl
insb
mov
mov
jno
pop
repnz
cmpsl
imul
or
inc
sbb
add
mull
sub
aad
or
repnz
inc
pop
test
ss
xchg
fidivrl
sbb
sub
fisubrs
and
jbe
das
scas
pop
scas
stos
lret
pop
pop
rolb
jb
aad
test
loopne
out
stc
dec
nop
pop
jb
test
pop
cli
adc
sti
lods
pop
xchg
addb
in
or
out
std
cmpsl
ss
scas
lcall
dec
xchg
lds
mov
cmp
push
jmp
inc
rsm
sti
mov
pop
stc
dec
jl
fmuls
in
movsl
lcall
scas
pop
cmpsb
jmp
pop
cmc
in
stos
mov
call
cmp
mov
popf
jo
sarb
outsb
inc
aaa
mov
sub
rcrl
repnz
shrl
addr16
push
fs
test
sub
lock
fdivl
lret
pusha
and
or
cmpsl
iret
in
nop
int
dec
cs
mov
mov
adc
mov
loopne
pop
rcl
das
jle
mov
stos
jo
inc
jl
nop
jl
pop
pop
and
insl
jbe
popl
mov
jl
imul
xor
sub
jp
ds
sahf
adc
and
sub
xchg
repnz
add
daa
scas
cmp
scas
and
daa
gs
dec
dec
or
outsl
cs
jns
or
pop
adc
aam
adc
inc
cmp
or
mov
mov
and
adc
dec
xchg
xor
shlb
pop
jne
mov
cmp
fdivrs
js
rorb
or
loopne
dec
mov
mov
js
inc
daa
dec
sub
inc
dec
aas
inc
mov
xchg
cmp
jl
iret
or
and
adc
mov
aas
cwtl
push
jmp
xor
sbb
sbb
test
mov
rcr
lahf
mov
and
push
outsl
int3
sbb
and
test
mov
add
fnstsw
push
sub
jmp
dec
sbb
sub
lahf
cmpsl
fwait
roll
xor
inc
sbb
roll
cli
fidivl
mov
mov
das
test
popf
push
jno
cmp
jae
mov
fs
or
sbb
nop
popa
mov
stos
pop
push
adc
inc
hlt
lcall
daa
xchg
scas
sub
divb
sarl
inc
rcr
xor
and
and
push
xchg
dec
cmpsl
cmp
adc
xchg
nop
sbb
lret
cmpsb
push
nop
jmp
lods
fdiv
nop
test
sub
nop
sub
iret
lods
pushf
push
lahf
popa
sbb
lret
dec
sbb
jmp
xchg
and
fidivrs
pop
cmp
sub
sbb
test
sbb
dec
enter
test
loope
sarb
cmpsb
sahf
cmp
call
lret
testb
cmpsb
mov
xchg
mov
mov
mov
jns
fwait
add
xor
je
xchg
shlb
lret
ljmp
pop
lcall
xlat
imul
push
pusha
fwait
test
mull
mov
jb
add
inc
xchg
mov
loopne
push
cmp
pop
cvtps2pi
popa
jmp
mov
fxch
imul
sub
shll
ljmp
lret
dec
jmp
mov
repnz
jmp
adc
je
xchg
fwait
jge
dec
push
mov
xchg
pushf
xor
jnp
cmp
pop
fdivs
icebp
pop
sub
xchg
xchg
shlb
xor
or
imul
es
sub
in
aad
push
aam
mov
add
pop
mov
sti
jmp
mov
aas
sub
xchg
inc
inc
adc
pop
cmp
outsl
xor
cmpsb
bound
or
pop
movsl
ret
mov
add
push
and
ljmp
or
mov
popf
inc
lods
dec
mov
sub
or
push
cmpsb
inc
cmp
ja
xchg
jbe
arpl
js
dec
and
stos
inc
lahf
rclb
outsb
idiv
repnz
add
cs
nop
sbb
lock
pop
lret
outsb
xchg
xchg
jnp
push
adcb
clc
xor
inc
movsb
mov
jl
xorb
test
aas
push
sbb
pop
out
out
bound
push
lea
xor
test
and
jno
ret
movsl
xchg
adc
mov
add
lea
rcr
sub
xlat
cmovs
sub
mov
popl
xchg
lods
inc
pop
movsl
and
mov
jecxz
out
xchg
orl
out
jae
xchg
into
mov
out
sub
cmp
adcb
push
mov
inc
jmp
sub
lahf
lock
test
xor
lahf
fistpll
sbb
sbb
stos
or
lock
jecxz
sbb
daa
div
xchg
fimull
scas
stos
mov
sub
push
or
fxch
outsl
pop
movsb
or
imul
push
scas
pop
mov
imulb
sub
xchg
inc
pop
inc
inc
adc
xlat
invd
add
test
or
jg
xorl
shlb
ror
cli
dec
dec
rcll
xor
icebp
int3
shlb
ljmp
xchg
jnp
jge
lods
mov
lods
adc
push
shl
push
nop
sub
or
loope
mov
cmc
jmp
mov
adc
stc
pop
add
pop
call
notb
xchg
es
jp
out
std
outsb
mul
jecxz
mov
xor
test
inc
pop
push
mov
jp
inc
add
dec
pop
cs
adcl
xor
xor
outsb
push
inc
xchg
mov
aad
mov
rcrb
int
cmp
lods
jp
int
sar
in
xchg
rcrb
movsl
mov
pop
les
cwtl
lds
in
pushf
loop
adc
sbb
movsb
push
adc
xor
mov
out
lcall
mov
stos
mov
sbbl
leave
bound
rcr
sbb
pop
ss
out
pop
push
xor
or
aam
mov
hlt
lods
and
xor
jmp
sbb
cmp
shl
pop
std
call
fcmovnb
mov
shll
adc
in
jns
out
loope
lcall
add
ja
cwtl
xor
mov
dec
movsb
mov
popf
inc
fdivr
add
xchg
mov
jo
std
jge
mov
jg
loope
adc
sarb
cld
imul
iret
xlat
aam
mov
insb
pop
mov
fdivrs
inc
and
rolb
ret
xor
dec
xor
test
dec
fcmovu
inc
sub
jb
push
push
sub
xchg
add
dec
sub
ret
mov
sar
fcoml
and
outsl
nop
fbstp
imul
mov
jnp
mov
dec
jae
cmp
push
out
push
mov
in
out
pop
pop
psllq
arpl
cmp
pushl
adc
sub
sti
sbb
inc
iret
popa
dec
mov
adc
sahf
fwait
and
xor
mov
inc
inc
mov
popf
adc
jno
bound
dec
sbb
sbb
pop
or
and
jno
shll
mov
fisttps
dec
jmp
mov
ss
mov
mov
sub
outsb
adcb
stos
mov
es
push
lods
adc
cld
cmpsl
sti
imul
in
sub
fidivs
rclb
jge
or
dec
dec
mov
pop
dec
dec
clc
cmpsb
cs
das
xchg
mov
or
xchg
pushf
mov
jnp
and
xchg
and
push
pop
ljmp
cmp
loope
leave
mov
adc
cs
inc
push
dec
insl
add
fistpll
rcrl
or
or
inc
xchg
cmp
xchg
and
addr16
stc
aad
in
inc
aam
sbb
xchg
call
mov
fimull
inc
mov
dec
aaa
sbb
and
fwait
gs
fcoml
jbe
and
imul
test
mov
mov
lock
sahf
andl
xchg
mov
ljmp
lcall
cmpsb
sbb
xchg
and
xchg
jp
out
lock
xor
jl
repz
ror
pop
add
push
in
scas
or
lea
adc
dec
ror
or
cmp
fsubrs
sti
sbb
es
movsb
cmpsb
scas
pop
fs
in
test
jbe
fldt
mov
lea
divl
sub
mov
int
xor
lea
cmpl
cmp
sub
inc
mov
and
and
push
xor
inc
cwtl
xor
test
push
xchg
cmp
and
xchg
cld
lock
inc
data16
or
cltd
xor
aad
add
repnz
sub
das
das
inc
push
stos
jl
xchg
and
xchg
dec
mov
fs
ficomps
data16
divps
dec
sti
mov
sub
nop
das
iret
push
mov
rorl
inc
mov
rorb
jmp
in
outsb
jge
jb
fiadds
aad
jo
xchg
xor
aam
sbbb
into
pop
mov
int
loop
jl
cmp
inc
insb
mov
push
adc
jb
push
xchg
in
hlt
popa
das
addr16
mov
lret
add
shrb
pop
mov
lock
sub
jbe
or
mov
inc
jl
fwait
push
cmp
dec
in
xchg
cmpb
mov
or
sbb
push
pop
dec
loop
and
mov
xor
jp
push
pop
ljmp
mov
in
inc
xor
insl
inc
sub
pop
xor
in
je
dec
dec
pop
lods
cs
jmp
enter
adc
setnp
sbb
shll
xlat
aad
pop
pushf
add
mov
std
clc
stc
adc
push
pop
xchg
stos
fidivs
insl
and
and
lods
push
out
cmpsl
lret
test
fcompl
out
inc
adc
add
xor
cmp
arpl
cwtl
jbe
dec
iret
and
xchg
std
out
jle
or
cmp
sub
in
xchg
cmp
xor
dec
pop
xchg
shr
jmp
cmpsb
loop
push
es
cli
sbb
cmp
shl
or
and
jle
jg
ds
sbb
orb
mov
fwait
jb
push
dec
in
pop
and
jnp
mov
leave
xchg
data16
push
inc
pop
adc
dec
jl
sub
push
inc
std
lahf
jle
fsubrl
fs
push
xchg
lods
jl
imul
divb
fdivl
jnp
mov
xor
leave
cmc
mov
or
mov
inc
xchg
mov
rcll
push
daa
mov
pop
enter
mov
pop
and
notb
mov
jbe
repnz
dec
mov
sub
inc
ficomps
cmp
pop
insl
jne
movsb
mov
adc
cmp
jle
and
shll
lret
sub
ja
adcl
inc
pop
jl
cmp
and
push
jle
scas
cmp
xchg
ficomps
xchg
orl
inc
mov
dec
imul
jmp
sbb
cmp
push
inc
xchg
mov
ds
adc
scas
popf
es
fdivs
mov
sub
faddl
insb
mov
mov
jnp
push
mov
mov
fdivs
ret
bound
inc
leave
sbb
mov
xchg
or
add
xchg
mov
adc
xlat
in
hlt
push
adc
adc
mov
in
xor
adc
push
daa
or
mov
sbb
push
sbb
xchg
scas
jnp
and
ds
call
loope
ss
stc
sahf
sub
testb
je
inc
std
mov
rorb
mov
imul
cmpsb
popa
fwait
mov
jge
scas
imul
or
rcrb
push
xchg
subl
jecxz
ljmp
or
and
clc
or
xor
les
scas
jnp
cmp
and
and
mov
ljmp
mov
pop
push
add
push
out
shll
mov
sub
lock
out
sub
jle
xchg
imul
lods
or
rorl
jp
mov
out
pushf
or
dec
jb
call
hlt
mov
iret
out
cwtl
jmp
xor
popf
test
lea
std
sub
fcoms
jo
xor
das
dec
test
cmp
lret
jmp
dec
cmp
sbb
mov
popa
aad
mov
push
int3
cmp
aad
ljmp
inc
xchg
test
lds
jo
inc
sub
mov
cmp
inc
cltd
pop
outsb
sbb
sub
pop
cmp
data16
out
test
sub
repz
pop
xchg
xor
push
dec
mov
and
insb
mov
jecxz
fcoml
shll
mov
popl
ljmp
out
cmc
popf
insb
pop
stos
jle
sub
inc
shll
movd
xchg
ret
or
lods
mov
mov
test
cmp
mov
repz
imul
sub
pusha
dec
fwait
mov
mov
push
xchg
push
cmp
or
in
or
lods
pop
imul
xchg
in
fwait
xchg
ss
add
popf
addr16
mov
pop
cs
inc
jmp
inc
adc
cmc
xor
mov
mov
adc
add
push
pop
stos
das
out
jns
cmp
pop
sti
push
popf
adc
sub
jl
mov
fldt
daa
shrl
sahf
insl
ja
jbe
adc
jle
mov
dec
and
dec
jno
add
push
cmp
cltd
push
aaa
mov
sbb
sahf
adc
pop
lods
jae
std
sahf
fwait
sub
jo
nop
xchg
mov
xchg
inc
cmpsb
insl
ds
popa
clc
ja
jnp
jne
xchg
ds
push
cld
push
das
rclb
adc
stos
nop
sub
js
jno
sub
jecxz
mov
mov
test
loop
jge
inc
ret
push
test
movsl
das
sub
ja
int
or
mov
ss
dec
jnp
inc
jmp
ljmp
pop
adc
mov
popf
rol
scas
push
cmp
subl
mov
decb
add
addr16
movsb
test
jmp
jno
adc
mov
jno
sub
mov
inc
xchg
mov
push
or
mov
mov
pusha
and
cmc
jae
ds
push
xor
mov
int
in
dec
push
test
in
mov
pop
pushf
cmp
imul
push
loop
push
jo
addr16
scas
cmc
mov
mov
les
xchg
pusha
dec
push
mov
mov
sbb
cmpsb
dec
xor
repnz
lods
lods
push
and
loop
sub
jmp
mov
sbb
inc
xor
pop
mov
pop
sbbb
push
push
add
or
mov
idiv
loopne
add
pop
add
bound
mov
xchg
mov
cmp
mov
sub
push
daa
push
fcmovnu
hlt
and
dec
lods
inc
mov
outsl
std
sub
sub
xchg
cmp
jp
mov
add
cwtl
stos
out
movsb
movl
cltd
scas
pop
add
in
xchg
stos
mov
cmp
pushf
ds
sub
push
dec
inc
lods
movsb
cmp
add
or
sbbl
sub
mov
aaa
stos
out
pop
and
insl
lods
in
jns
out
loope
sub
adc
jp
aad
movsl
data16
test
and
mov
sbb
sbb
movsl
lock
vcvttss2si
incl
cmpsl
iret
or
dec
jmp
push
cmp
xlat
and
bound
std
pop
rclb
jno
mov
jns
inc
or
pushf
adc
or
imul
and
scas
xor
jmp
dec
pop
imul
mov
add
out
jp
or
mov
mov
nop
dec
inc
cmpsl
outsl
mov
and
cmpb
mov
das
or
adc
inc
pop
les
cs
fwait
dec
push
int
dec
repz
loope
es
or
clc
or
cmp
adc
shll
imul
mov
mov
insb
jl
jno
rolb
enter
out
das
xor
inc
int
sbb
xchg
pop
loop
shll
dec
add
jbe
ds
pushf
iret
cmp
lcall
jae
div
enter
pushf
in
aam
outsl
std
popf
pop
pop
xchg
add
mov
jl
mov
jle
iret
push
icebp
cmc
xchg
pop
xchg
jmp
lds
das
sub
sub
inc
mov
lahf
out
add
push
dec
xor
stos
lahf
scas
jmp
xor
or
pop
es
mov
dec
out
ljmp
push
inc
xchg
aad
dec
nop
jge
stc
cli
cmpsb
jmp
inc
call
ret
loop
xor
loope
push
jno,pn
es
push
lret
shr
roll
leave
stos
xor
xor
shl
pop
sbb
dec
inc
cmp
iret
ja
in
sti
fdivl
insb
mov
xor
negl
dec
mov
or
fistpll
fstpl
add
mov
mov
lods
dec
lock
cmp
dec
es
sti
or
adc
jnp
xchg
jae
insl
sbb
push
xchg
adc
mov
adc
sub
adc
lods
lahf
mov
mov
sub
mov
out
add
dec
or
mov
shll
popa
and
adc
xchg
jbe
dec
pusha
cmp
and
addr16
mov
mov
mov
or
hlt
inc
mov
into
ss
rol
cs
and
daa
bound
jns
fldt
jmp
sub
gs
mov
insl
lcall
sbb
mov
insb
lea
inc
adc
sbb
xor
push
es
sub
es
sahf
in
add
mov
jne
pushf
mov
outsb
es
ds
fmull
mov
iret
inc
divb
pop
add
and
sub
shll
dec
js
jnp
testl
cltd
inc
inc
sub
test
adc
pop
idivl
loopne
xor
lea
sub
es
cmc
push
adc
xor
xor
iret
rorl
pushf
xor
dec
jmp
push
sbb
movl
pop
int3
popf
shrb
add
add
sbb
adcl
fwait
pushf
sahf
mov
mov
je
fs
or
sub
mov
or
jns
sahf
xchg
loope
mov
nop
cmp
nop
pusha
loope
rolb
adc
cmp
aas
out
sub
aad
negl
loope
int
cwtl
pop
scas
cmp
and
jo
pop
pop
cmp
or
and
cvtps2pi
mov
adc
popl
push
jle
jp
loopne
mov
push
cltd
jb
jecxz
push
insb
cltd
lret
inc
in
or
and
icebp
pop
mov
loop
rclb
call
adcb
inc
jno
shlb
mov
mov
cltd
jmp
rol
adc
cltd
mov
xchg
outsl
and
push
push
in
ja
imul
aaa
cmp
xchg
fnsave
xchg
pushf
jae
inc
in
and
dec
and
test
xchg
push
cmp
push
mov
mov
mov
dec
pushf
or
out
mov
jge
dec
xchg
sub
mov
xchg
enter
mov
add
shl
or
ja
fcmove
adc
idivl
xchg
ror
lret
xchg
ror
ds
iret
and
and
mov
add
xor
call
mov
adcb
mov
cmp
pop
push
imul
xorl
pop
cmpsb
jecxz
fwait
sti
mov
bound
mov
clc
lods
sub
and
std
sbb
jmp
lahf
pop
in
xchg
sbb
test
scas
xor
xor
pushf
push
imulb
loopne
aam
ja
js
sub
pop
xlat
push
sbb
dec
push
call
fmuls
repz
outsl
clc
mov
icebp
dec
lcall
pop
jle
sub
dec
jp
xor
mov
repz
orl
fimull
fwait
sbb
pop
sbb
outsb
xor
and
mov
add
or
xor
xchg
adc
call
fistpll
cld
mov
movb
inc
sti
push
cmp
scas
outsb
and
ljmp
addl
stos
add
fbstp
add
add
cmp
cmp
xor
push
or
ljmp
mov
mov
xlat
add
fwait
dec
pop
mov
mov
pop
pop
push
xchg
movsl
out
cltd
adc
loopne
pop
push
fwait
int3
loop
aad
or
push
pop
xor
mov
push
dec
out
xor
ret
cmp
jl
sbb
add
fwait
cmp
mov
lcall
inc
aad
jnp
incl
ss
jne
dec
clc
push
mov
mov
lods
shll
cltd
xlat
mov
mov
data16
popf
sub
mov
sbb
pop
jmp
xor
jg
inc
scas
adc
xor
enter
push
and
sub
mov
add
cmp
add
dec
lahf
cmc
mov
and
hlt
and
jns
loope
jp
decb
imul
pushf
fnstsw
sbb
xchg
mov
sbb
lret
fldcw
orb
dec
in
sbb
ja
and
clc
cltd
cmp
pop
mov
jo
repz
cltd
sub
mov
pop
xor
and
stc
mov
adc
jnp
ss
lods
sub
scas
push
int
mov
loop
push
fimull
int3
xchg
inc
adc
xchg
ret
xor
cli
pop
and
outsb
or
sbb
fldcw
mov
xchg
add
push
aas
xor
into
pop
sbb
shll
or
nop
cwtl
sbb
mul
pop
sub
aam
insb
shll
xor
pusha
and
out
inc
push
cmc
add
push
mov
out
mov
pusha
nop
in
fwait
fs
push
inc
jle
cmp
inc
jnp
adc
popa
cld
jg
push
shlb
lahf
push
test
cmp
add
pop
sbb
jmp
ss
adcl
cli
cld
jp
dec
int
add
loopne
sub
and
fbld
dec
lds
aaa
xchg
out
push
xor
mov
rcrb
popa
mov
cmp
addr16
stos
insl
pop
push
cmpsb
xchg
fwait
lahf
sti
push
inc
test
je
add
cmp
xor
lahf
bound
frstor
lea
xchg
inc
push
jl
icebp
dec
adc
testl
mov
mov
mov
xchg
sbb
outsb
cltd
addr16
ja
fisttpll
outsl
pushf
add
and
sub
cwtl
mov
icebp
inc
xlat
cwtl
xchg
cmp
pop
mov
shll
adc
jge
ja
push
inc
mov
sarb
loopne
fcmovnb
jecxz
lods
mov
push
ret
shlb
push
cmp
cmpsl
inc
inc
push
mov
push
dec
xchg
inc
xor
dec
inc
xor
loop
fsubrp
hlt
lcall
cmc
loop
rcr
dec
push
or
pop
movsl
mov
sbb
in
les
dec
pusha
xchg
in
in
mov
push
out
xorb
fucomi
dec
adc
loope
or
frstor
push
jne
xor
lods
inc
sub
jno
dec
inc
mov
je
inc
in
mov
xor
xchg
and
cmpsb
inc
sahf
or
cmpsb
xchg
or
testb
pusha
nop
lea
mov
jl
rorl
lret
call
test
cmp
pop
ret
jge
mov
pop
jo
adc
adc
enter
into
notb
cmp
test
sti
aaa
adc
and
lcall
cmp
repz
pushf
cmp
out
mov
jns
mov
inc
adc
xchg
inc
shll
add
in
ljmp
adc
inc
mov
test
sbb
push
xor
daa
cs
dec
cwtl
jne
prefetchwt1
lret
push
push
xchg
addr16
pop
pop
jns
movsl
add
sbb
fildl
sbb
cmp
xchg
adc
lds
mov
mov
movsl
fwait
insb
xor
popa
xchg
lea
fs
icebp
inc
test
sub
out
pop
and
pop
sbb
and
xchg
fcmove
mov
leave
sbb
inc
adc
add
push
cmc
sti
jmp
fdivrl
cld
push
adc
mov
aam
gs
mov
jle
icebp
jo
loope
mov
fdivr
iret
scas
adc
call
xor
add
or
lea
jae
iret
mov
xor
push
jg
mov
les
inc
dec
cmpsl
jno
cwtl
aas
cltd
push
add
rolb
fnstsw
in
or
cs
cmp
cli
push
or
dec
jmp
and
imul
or
mov
cmc
cmp
cmc
jp
jl
jp
adc
mov
jge
dec
push
insl
mov
ss
add
push
ret
or
in
lret
addr16
jg
jp
mov
repz
jb
mov
mov
lret
adc
or
in
int
dec
cmp
gs
addr16
hlt
jle
sti
jmp
fmulp
loopne
mov
or
mov
mov
push
bound
sbb
xchg
fidivrs
push
dec
ds
dec
cmp
aad
mov
gs
lret
lret
push
push
outsl
cmpsb
add
xor
adc
iret
aam
push
pusha
into
adc
jp
jbe
sub
inc
in
mov
push
pop
or
cmpl
add
or
fmull
pop
pusha
push
in
out
icebp
add
adc
push
jg
and
in
rorl
xlat
adc
dec
adc
mov
push
adc
add
loope,pn
jmp
sbb
dec
mov
or
fcoms
adcb
loopne
inc
cwtl
loope
nop
orl
add
push
push
push
sbb
fdiv
ljmp
xchg
test
dec
ss
leave
lods
divl
jl
outsb
or
mov
xchg
jb
mov
or
sahf
mov
lods
cmp
arpl
mov
mov
stc
xchg
into
sbb
call
and
lods
mov
add
into
ds
or
push
ds
cmpsl
dec
jne
or
lret
inc
mov
insl
inc
stos
dec
pop
cwtl
int3
dec
pop
mov
jne
insl
nop
sahf
cwtl
jg
xchg
pop
dec
cmp
xchg
imul
adc
or
sub
aad
pusha
push
lret
sub
out
xchg
movl
aas
xor
xchg
xchg
and
js
fs
scas
xor
or
push
movsl
cld
aas
dec
pushf
adc
pop
mov
xor
loop
outsb
stos
sub
stos
sub
mov
add
in
fs
mov
mov
mov
pop
push
pusha
andb
dec
push
add
orb
pop
jp
psubq
repz
test
enter
rcrb
stos
je
push
dec
sub
outsl
int3
nop
outsb
aad
movsb
int3
mov
inc
sbb
push
mov
ret
ds
in
pop
mov
rsm
repz
loop
dec
in
mov
sub
or
fcoml
gs
jge
ljmp
bound
cmp
adc
movsb
cmpsb
push
test
es
push
mov
fcompl
inc
test
adc
dec
mov
movsb
push
jno
int
lds
adc
xor
arpl
pop
sub
mov
pop
xorb
pushf
test
push
adc
sub
int
or
lret
or
or
mov
or
mov
xor
push
adc
push
and
das
pop
add
mov
jo
pop
xchg
loopne
mov
je
aas
push
inc
sub
std
and
pushf
pop
inc
mov
mov
cmp
dec
mov
stos
adc
push
and
xorl
or
cmp
sub
adc
pop
scas
lds
lods
sahf
pop
add
je
sub
mov
inc
fisttpl
sbb
daa
mov
sbb
pop
fs
jp
sbb
data16
gs
sbb
out
pop
inc
repnz
or
pop
xor
mov
cmc
mov
dec
and
cmp
mov
push
pop
sbb
sbb
stos
aas
fidivrl
stos
jecxz
loope
mov
fistpl
mov
gs
adcb
push
add
jl
push
aaa
scas
bound
nop
cli
ret
int
or
imul
hlt
sbb
xchg
mov
push
mov
xchg
sub
push
mov
ret
adc
and
mov
mov
mov
mov
fisubrs
popa
lock
and
adc
xorb
stos
xchg
test
cltd
out
fdivrp
sti
adc
sbb
or
jnp
ss
in
mov
ljmp
fwait
popa
addl
add
icebp
jns
mov
ss
xor
sahf
and
mov
xor
push
rcrl
pop
inc
push
mov
cmc
int
loop
fs
stc
cmp
out
outsl
mov
mov
push
mov
lahf
or
push
int
jae
jp
movsl
sub
mov
xor
lret
mov
scas
out
fistps
adc
sub
and
mov
pop
aaa
sub
push
std
cli
dec
dec
test
jb
nop
addr16
aaa
gs
adc
and
and
data16
xlat
flds
mov
sti
popa
repz
rorl
pop
sbb
push
orb
imul
aas
or
clc
jb
mov
es
mov
shl
mulb
or
sbb
aam
pushf
adc
packsswb
pusha
jge
fdivrp
push
lret
mov
inc
push
inc
push
and
inc
jno
push
pop
adc
fldenv
mov
sub
adc
or
cwtl
test
out
cli
imul
jnp
xchg
mov
xchg
xorl
sbb
mov
subl
xor
jle
call
idivl
cmp
xor
xchg
and
jbe
inc
xor
test
push
sbb
or
cmp
mull
push
add
or
loope
out
pop
scas
sub
dec
int
inc
mov
pop
sahf
repz
mov
push
dec
mov
adc
xor
sbb
xchg
mov
sbb
mov
pand
cltd
mov
cmp
jle
sub
fmull
pop
iret
or
stos
and
pop
pusha
popf
mov
jecxz
adc
pop
out
ja
sbb
aaa
repnz
mov
aaa
movsb
xchg
xlat
into
pop
lret
nop
inc
addl
imul
popf
out
and
aas
js
sbb
xor
or
mov
test
add
out
add
or
dec
adc
cmpsl
sub
dec
out
jo
outsb
repnz
icebp
push
arpl
dec
mov
xor
test
fmuls
adc
cmp
clc
insb
jo
pop
arpl
xchg
lea
notb
xchg
sbb
fldenv
out
xor
mov
and
or
push
mov
push
pop
aad
cmp
dec
xor
xchg
jle
inc
xlat
clc
inc
fidivrs
loopne
sahf
mov
and
inc
jecxz
xor
inc
cmc
mov
loop
add
mov
adc
aaa
add
dec
inc
call
lea
aad
out
test
pop
mov
cmp
xchg
adc
repnz
mov
int
ds
mov
sub
cld
sub
jge
dec
insl
inc
outsb
mov
lods
outsl
sbb
adc
outsb
adc
sub
lret
xchg
rclw
or
scas
dec
lret
push
push
gs
xorb
ds
ljmp
into
aad
jge
mov
lcall
xchg
sub
rolb
mov
xor
aaa
rolb
mov
ja
jle
mov
mov
cld
rcrb
fdivs
xchg
pop
mov
sbb
scas
xchg
jp
arpl
sub
jl
push
aam
popa
jmp
xchg
xor
out
iret
jge
xchg
add
mov
jle
mov
cmp
mov
sub
movsb
sbb
jge
or
ret
jmp
pop
in
mov
aam
fsubl
rcpps
shl
sub
jp
int3
jle
fnstcw
cmp
repz
mov
repz
or
adc
mov
rcrb
cmpsl
mov
push
ljmp
pop
xlat
sbbb
in
scas
sahf
lock
orb
mov
fsubr
push
mov
sbb
fimuls
nop
out
jl
jo
mov
jbe
inc
jnp
out
movsb
push
add
pop
inc
int3
mov
arpl
add
lods
rolb
pop
das
dec
mov
pusha
sbb
and
cmpsl
xor
stos
xchg
arpl
xor
pop
mov
add
out
loop
lds
into
xchg
scas
dec
push
test
pop
lods
jo
mov
pop
jle
mov
inc
pop
ss
jae
mov
mov
mov
cmp
pop
pop
cmp
test
mov
test
lea
jmp
imul
cmp
call
rcll
imul
mov
adc
into
push
dec
aam
mov
and
xor
inc
jmp
rorl
jg
dec
or
sbb
add
mov
and
andb
movsb
or
cld
ffree
testl
pop
stos
aaa
xor
clc
jns
and
mov
sbb
inc
push
mov
inc
mov
pop
adc
jl
cmp
insl
std
mov
stos
push
xchg
cltd
cmp
push
mov
hlt
sub
lret
sbb
ss
jae
pop
dec
rcrl
mov
push
loope
jne
push
mov
int3
pushf
fcoms
xor
iret
and
movsl
sub
mov
xchg
cmp
addr16
mov
lahf
int3
and
sbb
cli
sti
jg
push
inc
mov
dec
pop
cmp
das
sbb
jl
enter
repnz
inc
stos
mov
movsb
xchg
mov
movsb
sbb
aad
mov
jne
stos
fsubp
jle
into
lods
je
shlb
ljmp
jno
clc
lea
hlt
sub
inc
mov
push
and
dec
lods
inc
push
mov
popa
dec
pushf
out
wbinvd
xor
outsl
mov
jb
fldl
aaa
mov
rcr
push
sahf
dec
mov
dec
dec
fiadds
pop
mov
cwtl
stos
sub
mov
lcall
xchg
test
jae
mov
clc
fnstsw
mov
iret
jp
divl
push
mov
dec
jo
movsl
xor
sbb
mov
cmp
adc
mov
cmp
and
rcl
enter
and
dec
test
lods
les
push
mov
addr16
push
stc
pop
mov
imul
cmp
lods
pop
sub
scas
sarb
push
cltd
and
outsl
xor
ret
jae
mov
loopne
rcrb
mov
xlat
popf
pop
shrb
push
push
add
shl
pusha
and
mov
fsubp
add
js
test
mov
cmpsb
sbb
sbb
mov
rolb
rcl
pop
sub
xlat
and
adc
xchg
cmp
inc
aad
popf
les
push
stos
out
dec
push
int
loop
lret
fists
mov
pop
out
jge
sbb
mov
pusha
gs
or
dec
test
mov
lret
pop
lds
call
int3
sbb
pop
pop
cli
leave
adc
aas
insl
in
push
add
jge
test
hlt
mov
mov
sti
jbe
dec
jmp
daa
cmp
mov
cmpsl
cld
das
ficoml
out
sbb
sar
lahf
xor
mov
xchg
addr16
fadds
or
leave
xchg
sbb
ss
pop
pop
nop
rcrb
js
insb
sub
jns
call
aaa
jl
mov
call
lods
xchg
push
mov
cs
mov
ljmp
fs
mov
incb
pop
mov
scas
push
ljmp
pop
inc
xor
cmp
jae
mov
sub
and
rcr
sub
imul
out
mov
sbb
jb
add
aad
sbb
test
xchg
add
push
inc
fwait
jno
adc
or
lods
inc
dec
loopne
add
jno
movsl
push
mov
fsts
pusha
cs
jl
mov
mov
stos
sbb
into
push
add
imul
cld
xchg
arpl
dec
sbb
and
sbb
inc
lea
int
inc
ljmp
add
ljmp
push
dec
out
xchg
fstpt
aas
add
xchg
rorl
filds
in
fisttps
pop
or
sub
mov
test
jo
js
push
cs
out
or
and
adc
jns
mov
lret
xchg
lock
dec
fisubs
fdivs
push
cmpb
or
inc
add
jle
sbb
cmp
mov
mov
pushf
xor
sahf
sti
gs
xor
cmpl
xor
xchg
fstpt
ss
adc
lcall
jno
mov
add
inc
mov
jge
xchg
outsl
sbb
stc
lret
std
iret
shr
lahf
add
push
test
jmp
adc
cmpsb
pop
dec
loop
js
pop
pop
mov
add
push
push
out
mov
cwtl
xchg
sti
inc
sbb
pop
or
dec
xor
mov
inc
pop
xor
push
jbe
rcll
push
mov
pop
jge
dec
adc
jns
push
dec
test
push
mov
call
or
sbb
or
sub
xchg
bound
jae
jmp
test
inc
scas
push
sti
pusha
inc
jb
std
inc
nop
adc
iret
inc
inc
imul
gs
jp
rorl
sub
pop
sahf
aas
push
inc
mov
test
sbb
push
sub
inc
jae
or
jae
hlt
shrb
hlt
push
jnp
in
daa
push
xor
hlt
cmp
cmp
fnsave
hlt
jmp
outsl
mov
fdiv
int3
pop
push
xor
fstpl
adc
mov
and
pop
add
out
jnp
and
imul
rep
and
mov
dec
outsl
hlt
dec
add
jle
push
mov
push
push
in
scas
inc
repz
movsb
sub
in
dec
xchg
jae
lock
jl
test
push
repz
jmp
jmp
sbb
xchg
loop
jle
add
dec
out
out
push
cmpsb
xorl
jne
les
cmp
add
mov
daa
popf
aaa
stos
in
lods
scas
shll
sbb
inc
dec
call
jb
lret
jecxz
lods
dec
rcl
jb
push
cmpsb
loope
sub
inc
sbb
push
mov
loopne
or
ja
lea
into
jns
mov
sbb
pop
int
mov
movl
xchg
sarl
add
std
sub
pushf
fbstp
add
lea
scas
cmpsl
imul
mov
pextrw
adc
mov
adc
cmc
and
push
and
sub
mov
les
xorl
xorl
mov
in
mov
pop
pop
dec
xchg
movsl
and
fisubs
adc
pop
jns
xchg
inc
insl
out
xchg
andb
xlat
and
popf
inc
jg
bound
mov
push
call
cmpb
std
idivb
dec
ret
aad
push
dec
loope
out
mov
out
enter
aas
mov
pop
rcrl
add
mov
mov
fiadds
jo
cmp
xor
xor
testl
add
imul
sub
stc
mov
push
push
icebp
lahf
push
clc
cmp
lret
clc
stos
sub
bswap
mov
jo
and
add
adc
imul
mov
sbb
test
adc
call
imul
inc
inc
xor
divl
pop
int3
bound
mov
data16
push
mov
mov
fs
lret
push
test
push
mov
rolb
xor
jno
pop
mov
and
mov
push
ljmp
test
mov
test
arpl
mov
or
call
out
or
xchg
test
call
mov
in
call
and
xchg
jle
cmp
sub
out
popa
pop
xchg
imulb
inc
ja
aas
aas
pusha
mov
inc
and
sub
adc
pop
rcll
mov
sbb
int3
out
scas
cltd
scas
xchg
adc
adc
inc
jmp
dec
push
lret
pop
cmp
or
xor
sub
scas
scas
mov
push
enter
das
ja
pop
mov
dec
cmc
lret
xchg
mov
rorl
inc
outsl
hlt
dec
pop
loop
cltd
jnp
sub
arpl
mov
add
stos
dec
loope
push
push
lahf
inc
lods
mov
xchg
pop
daa
cld
xorl
lret
shl
or
inc
out
loope
lds
mov
inc
je
loope
push
xchg
cli
cli
dec
xor
jno
pushf
arpl
sbb
sbb
adc
out
xor
cltd
xchg
mov
hlt
pop
mov
movsb
mov
loope
mov
mov
mov
lea
adc
ret
sbb
mov
mov
push
rclb
std
cld
add
pop
mov
pusha
cmp
nop
push
xchg
out
into
xorb
mov
xchg
lcall
or
iret
into
nop
fmull
aas
adc
sbb
outsl
inc
inc
data16
mov
jnp
mov
adc
inc
mov
pop
insb
fcoml
jno
mov
sub
push
fwait
mov
ljmp
out
pusha
insl
cltd
adc
and
jge
mov
cs
ja
cmp
loope
dec
pop
mov
mov
les
push
dec
fwait
cmp
imul
cmp
xchg
push
in
push
dec
aad
shll
sbb
loopne
dec
add
loop
dec
inc
jmp
clc
loopne
add
jbe
insb
into
jecxz
inc
fwait
or
adc
imul
xchg
or
jecxz
arpl
jecxz
in
pop
mov
nop
int
mov
ljmp
mov
jecxz
daa
sbb
inc
ret
jle
cwtl
pop
dec
repz
outsb
ljmp
xor
sbb
pop
push
cli
rcl
outsb
and
cmpsb
lahf
pop
setb
or
gs
fmull
nop
ret
xchg
mov
dec
loope
xorb
daa
fildll
movsb
pop
popf
inc
mov
sahf
dec
pop
pop
sahf
ret
xchg
xor
inc
xchg
andb
lcall
hlt
xchg
gs
fbstp
mov
add
nop
mov
inc
fwait
add
loopne
cwtl
adcl
scas
sub
movsb
lock
and
cmpsb
in
cli
push
movsb
mov
dec
sub
out
jb
jmp
das
cwtl
or
mov
enter
insb
aad
adc
or
push
aaa
cmp
adc
fidivrs
push
test
mov
or
les
and
cltd
fcoms
fimull
pushf
and
rcrb
cli
mov
cmp
in
cli
sbb
and
cmpsl
cld
mov
xor
sub
test
std
test
cmc
inc
push
int3
shlb
push
xor
sbb
mov
pop
fbstp
enter
data16
aaa
mull
lret
xchg
jmp
and
push
jbe
mov
dec
adc
dec
or
cmpsb
sbb
push
test
xchg
push
mov
repz
jecxz
cmp
bswap
adc
push
jb
or
ss
insl
into
fwait
ds
pop
jo
mov
fistpll
in
sub
xor
sbb
lds
fs
mov
and
and
lret
dec
jecxz
sti
movsb
int3
inc
fs
fisttps
js
cmp
inc
push
cmp
cmpsl
jb,pn
pushf
insl
stos
or
pop
arpl
dec
lahf
ret
push
xor
movsb
push
mov
bound
dec
push
cltd
inc
xor
add
rcrl
jg
adc
stc
fidivrl
fwait
cmp
adc
xchg
jne
lahf
xchg
mov
jne
mov
and
mov
or
push
je
aam
mov
sub
push
jmp
mov
sbbl
adc
out
mov
lcall
incl
dec
xor
mov
dec
out
scas
and
mov
fldcw
and
jg
fst
dec
mov
mov
lret
ljmp
loope
push
pop
xchg
mov
pop
in
std
enter
jge
mov
sbb
inc
xor
pushf
faddl
icebp
push
incl
push
cmp
out
int3
lock
pop
bndstx
icebp
lds
or
mov
nop
pop
mov
fld
mov
enter
repnz
and
mov
pop
dec
sarl
icebp
ss
cltd
ja
ds
imul
in
out
mov
or
lods
pop
xor
ficoms
fsubr
inc
ret
inc
push
mov
mov
popa
mov
popa
fs
jb
int3
inc
cmpl
aam
jb
movsb
cmc
mov
cmp
cltd
outsl
mov
call
fidivrs
push
mov
and
jae
add
stos
icebp
xor
cmpsl
adc
mov
jmp
ljmp
sbb
test
enter
add
dec
push
and
pop
push
mov
mov
pop
mov
adc
out
or
imul
sahf
jns
xchg
or
dec
jge
punpcklbw
xor
mov
cltd
mov
imul
arpl
hlt
das
push
addps
sub
and
addb
adc
dec
fnstcw
scas
loop
cwtl
mov
in
in
xor
mov
mov
xchg
lret
aam
mov
mov
adc
mov
xchg
add
incl
fldt
push
out
jg
jns
xchg
pop
aaa
sub
addb
mov
jno
inc
daa
xor
cmp
mov
sub
xor
scas
iret
sbb
mov
adc
imul
add
sub
je
push
gs
test
or
xorb
xor
jo
data16
xor
adc
sub
adc
nop
and
cld
push
xlat
dec
movsb
das
out
mov
push
test
adc
lret
outsl
jmp
mov
lret
sbb
ja
and
sbb
outsb
cmpsb
mov
push
pop
jg
mov
sub
push
ja
daa
cmp
mov
lret
imul
scas
add
addr16
fisttps
jle
jnp
es
in
inc
cmpl
mov
scas
mov
bound
aad
add
sahf
nop
outsb
loope
pop
jbe
mov
add
test
xchg
push
push
es
dec
dec
adc
js
sbb
add
push
jo
pusha
loop
adc
ss
cmp
xchg
addr16
inc
imulb
jnp
mov
out
inc
lret
bound
jns
dec
cmp
mov
mov
mov
lds
jle
cmp
test
xor
mov
outsl
dec
and
jne
cmc
fwait
in
test
cmp
push
sbb
jae
jb
mov
push
push
xchg
or
mov
mov
test
add
out
ss
shll
add
into
ret
sbb
mov
fbstp
push
fcoms
pushf
xor
jnp
aad
orl
cmp
enter
gs
xor
mov
cmp
push
mov
dec
jecxz
pushf
or
and
xchg
fs
cmp
stos
pop
adc
movsb
test
ret
or
or
push
mov
aas
mov
and
pop
jmp
fwait
and
loopne
rclb
orl
adc
int
fsubr
test
ss
es
rcrl
pop
rorb
movsb
orl
stos
sbbb
cwtl
xchg
xchg
jnp
or
imul
and
pop
sahf
rcll
popf
adc
sahf
pop
or
in
stos
repnz
pop
shrb
xchg
movsl
addr16
sub
jns
or
add
mov
push
sbb
or
punpckhwd
cmp
sub
mov
in
hlt
inc
adc
orb
negl
in
in
jnp
gs
aaa
loopne
push
sbb
popa
push
push
xor
enter
cmc
stc
bound
dec
mov
jns
xchg
dec
cmpl
js
shrb
leave
mov
mov
add
mov
cli
mov
cmpsl
xchg
or
push
loop
ret
mov
pop
inc
rclb
scas
js
pop
aas
adc
xchg
jmp
bound
mov
cmp
int3
addr16
sub
out
and
loopne
mov
mov
xor
movsl
push
and
rcll
mov
out
je
pop
mov
push
inc
outsl
and
mov
dec
xchg
ret
insl
fsubl
addr16
jne
out
mov
pop
cmp
mov
cli
pop
lock
cld
test
int3
xchg
mov
mov
adc
jne
scas
lret
jae
sub
mov
and
rolb
jle
fucomip
loope
jg
xor
sub
jno
mov
imul
mov
lock
filds
movsl
fiadds
mov
add
xor
popa
hlt
cmpsb
cwtl
imul
jae
and
push
push
inc
push
fistpl
dec
rcr
aaa
push
ret
jmp
outsl
lods
out
mov
test
not
std
dec
popa
push
push
mov
aaa
je
push
mov
test
xchg
xor
movsb
fisttpl
mulb
jne
lret
mov
add
sub
sahf
sub
rcl
dec
dec
fmul
arpl
pop
cmpsb
sub
fistps
int3
divl
mov
aad
aas
adc
in
pop
pusha
scas
xor
rcl
mov
xor
push
add
cmp
es
aaa
cmp
xchg
lods
fdivl
dec
sbb
movsb
mov
mov
stos
sbb
lock
jle
jl
adc
shlb
push
pop
xor
lods
cmp
or
test
bound
adc
dec
mov
xor
and
jmp
sbb
or
add
ds
scas
popa
loope
fs
mov
xchg
iret
and
inc
or
aaa
rolb
pop
cmp
jno
jp
inc
rol
cmpsb
mov
mov
mov
es
lds
mov
aad
xchg
out
lret
negl
add
inc
daa
stos
push
cmpsl
or
xchg
sbb
fsubs
addl
dec
jp
inc
push
mov
mov
popa
or
popf
dec
arpl
std
jmp
clc
push
mov
sbb
std
inc
add
push
hlt
call
mov
lret
cmp
dec
pushf
jge
lds
dec
sub
xor
xchg
jl
adc
bound
jo
cmp
test
cwtl
cmpsb
daa
mov
lss
fidivrl
push
pop
adc
jnp
pusha
mov
test
mov
adc
nop
push
sub
ds
mov
lds
idiv
enter
jp
push
cld
dec
bnd
in
adc
in
out
push
jbe
stc
scas
jnp
dec
test
aam
bound
imul
or
mov
pop
inc
pushf
sti
push
and
add
stc
iret
std
repz
sbb
xchg
xchg
push
sbb
rcr
fsubrs
clc
mov
sub
pop
out
jae
inc
ss
adc
push
notl
mov
hlt
mov
pop
orl
popf
mov
rcll
jo
movsl
jmp
add
adc
test
addl
xchg
aaa
std
rcr
in
inc
imul
sahf
dec
cmpsb
in
add
ret
fimuls
sarb
adc
cmp
loopne
sbb
enter
lods
jmp
sub
mov
in
call
decb
scas
test
pushf
test
leave
mov
cltd
inc
cmp
and
inc
jg
jns
push
sbb
imul
cmc
test
mov
push
js
sbb
aad
mov
sarl
add
mov
ficompl
scas
add
sub
ret
iret
and
dec
cltd
ljmp
js
push
scas
bound
lock
aam
rorl
in
and
mov
mov
pop
and
lahf
pushf
dec
dec
testl
add
adc
repnz
out
popf
mov
or
mov
pop
lods
fwait
pop
jb
pop
lods
stos
popa
sub
push
fwait
cmpb
mov
arpl
ret
cmp
ss
push
sub
js
cmp
mov
dec
outsb
push
fsts
sub
sbb
jge
push
xchg
mulb
out
inc
adc
xor
fcoms
mov
fisubrl
cmp
push
mov
dec
stos
mov
cmpsb
lahf
rorb
mov
sbb
pop
test
and
mov
roll
dec
int
mov
push
fidivrs
imul
or
cli
lock
sbb
iret
movsl
in
xor
cmp
insl
adc
loopne
lcall
fidivrl
xor
and
pop
ds
popf
xor
fdivrl
nop
icebp
sub
jbe
adcl
jg
push
ljmp
aas
push
dec
fucomp
sub
cmp
frstor
aaa
lods
mov
mov
xchg
xlat
or
cmc
in
mov
call
lock
sub
xor
push
and
pop
cltd
enter
loope
sbb
out
shll
jo
stos
inc
in
xchg
imul
cmp
popa
int
mov
das
pop
mov
ljmp
mov
pop
mov
mov
ja
insb
decl
shl
cmp
or
repz
fisubs
jae
push
loop
adc
shl
push
push
popf
and
cmp
int3
inc
mov
inc
or
jae
clc
pop
iret
push
dec
pop
sbb
and
cwtl
push
lds
es
ljmp
out
add
outsl
mov
jle
adc
push
xor
test
sbb
jb
or
jmp
pushf
fdivrl
add
mov
mov
fdivs
fcomps
mov
pop
bound
cmp
sub
int
into
std
fidivrs
bound
and
loope
lcall
je
pop
xor
rorb
loope
xor
add
xor
pop
jo
aas
xor
xor
jecxz
mov
inc
mov
in
mov
jle
imul
out
adc
out
inc
adc
mov
jmp
rorl
pop
and
ds
adc
lret
sarl
stos
stos
cs
xchg
push
std
mov
outsb
ret
jb
inc
addr16
dec
push
cmp
mov
cmpsb
push
mov
dec
dec
jns
jno
mov
daa
shlb
pusha
cmpsl
and
std
loopne
add
rorb
pop
cmpsl
adc
cmc
xchg
push
mov
movsl
ja
rcl
iret
faddp
dec
repnz
fbld
sub
xor
out
xchg
cld
mov
fs
jno
adc
jno
mov
out
into
and
aad
outsb
sub
sub
inc
test
mov
daa
movsb
or
mov
jnp
inc
in
sahf
pop
sbb
sbb
dec
jbe
fs
ljmp
cmpb
out
push
cmp
mov
fsubrs
mov
xchg
cmpsl
mov
test
mov
mov
and
push
or
jne
popa
add
sub
cmpsl
sbb
adc
cmpsb
stos
rcll
scas
not
out
fadds
or
xlat
xchg
dec
mov
mov
cmp
clc
loopne
inc
bound
movsb
cmp
fcom
ret
test
addl
loop
xlat
adc
movsb
mov
cmpsl
sbb
fmuls
jl
enter
cmp
dec
jne
add
mov
bound
stc
sahf
stc
cmp
mov
fimuls
jl
aas
rcrl
clc
sbb
cmc
cmpsl
inc
push
adc
movb
and
loop
test
inc
adc
mov
jnp
add
out
test
mov
sub
mov
sub
inc
or
cmp
imul
xchg
or
jmp
push
mov
movsl
inc
sahf
clc
xor
push
xchg
shll
imull
das
mov
das
int3
xchg
adc
lret
daa
push
pushf
dec
mov
jo
outsb
lock
js
xchg
pusha
jnp
fistpll
out
push
inc
fstpt
dec
lahf
push
add
xchg
xor
aaa
adc
dec
jno
rclb
imul
cmpsb
sub
test
shrl
ss
scas
mov
pop
fs
orl
sbb
ret
mov
ret
pushl
mov
cli
idiv
inc
jno
dec
lods
or
sub
mov
insb
cmp
mov
ljmp
mov
mov
vmovq
clc
fmul
mov
inc
enter
jge
mov
add
push
clc
mull
gs
cs
lds
jne
push
sti
pop
add
rcll
xchg
js
imul
push
out
inc
sbb
lods
ret
shrd
xor
and
out
test
pop
mov
mov
fninit
pushf
lods
pop
mov
xor
mov
shld
in
mov
xor
std
movsb
lods
enter
mov
aad
aaa
cmp
fsubs
or
mov
out
insl
dec
mov
lods
xor
flds
fisubl
push
lcall
sbb
dec
pusha
cmpsb
xchg
jbe
fucomp
stos
cs
add
sbbl
gs
cli
outsl
arpl
sub
popf
dec
dec
mov
mov
push
cmp
shll
add
inc
loopne
push
cmp
imul
test
inc
xchg
push
fnsave
cmp
jmp
daa
jmp
add
xchg
pop
and
ja
mov
mov
inc
xor
xchg
push
dec
xchg
sub
test
es
lret
ja
mov
test
loopne
int
insb
push
pop
popf
fwait
int3
inc
push
dec
add
push
dec
jg
popa
das
daa
or
push
sbb
push
shll
cmpsl
jno
pop
adc
mov
shlb
lret
sbb
aam
bound
jae
loopne
fimuls
jo
jae
cmpsb
sbb
push
sti
pop
mov
mov
clc
sbb
fwait
xchg
out
out
test
jnp
in
pop
push
cld
fnstenv
sub
into
es
int
xorb
test
out
insl
cwtl
ljmp
fldl
jge
pop
xchg
push
lahf
jl
test
pop
xor
inc
cmpsb
js
sbbl
shll
cmp
mov
sahf
push
es
aas
mov
xor
xchg
adc
cmp
adc
lea
shll
js
cld
pushf
jb
sub
scas
cmpsb
add
pop
dec
std
aad
into
cltd
je
mov
add
bsr
inc
sbb
aas
jle
mov
lret
lea
jb
xchg
mov
inc
ss
loope
or
clc
jl
inc
xor
adc
dec
pop
int3
or
js
cmp
clc
int
sub
cmp
cld
ret
setno
push
pop
mov
xchg
scas
or
jmp
mov
out
mov
mov
mov
xor
shrl
pop
stos
sbb
rolb
push
mov
icebp
mov
cmpsb
scas
cmp
fnstcw
mov
or
adc
or
push
and
pop
pushl
push
xchg
jge
mov
xor
sub
and
push
sbb
push
inc
push
mov
mov
push
xchg
xchg
ljmp
pop
inc
lock
das
xchg
adc
stc
popa
cltd
jmp
push
addb
xchg
enter
mov
ficoms
and
push
subl
cwtl
aam
jae
imulb
pushf
punpckhbw
xchg
push
inc
cld
lock
xchg
add
jl
rorl
rorb
addl
mov
mov
int
mov
dec
imul
pushf
stos
stos
push
cmp
leave
inc
jns
int3
out
sbb
mov
and
add
lret
fisubrl
push
mov
test
xchg
pop
mov
sbbb
cmp
cmpsl
loope
fidivrl
sti
sub
adcb
pop
lock
and
cmp
ljmp
bound
test
in
sub
ja
inc
cmp
add
lret
out
adc
mov
orb
push
cs
sub
inc
xchg
xchg
inc
inc
mov
inc
push
cmp
mov
mov
mov
inc
mov
fldenv
rolb
stos
cwtl
add
imul
jmp
call
push
dec
xor
push
lods
pop
ret
cs
ljmp
mul
mov
into
sbb
jl
mov
pop
pop
cmp
pop
popf
push
scas
shr
daa
inc
mov
iret
jae
cmc
xor
and
mov
pop
aas
repnz
cwtl
inc
int
jne
mov
and
idivl
out
cmpb
sti
movsb
adc
ss
scas
loopne
inc
in
icebp
jmp
pop
gs
hlt
cmc
ja
and
jb
inc
andl
pop
loop
inc
jb
out
stos
popf
cmpsb
fucomp
mov
mov
or
sbb
push
and
xor
push
pop
roll
out
pop
sub
in
scas
addb
mov
cli
stc
mov
cmp
push
out
lds
mov
cltd
cmp
push
or
jecxz
lret
or
push
and
cltd
cmp
iret
cli
popa
les
push
xlat
push
popa
testb
nop
and
ret
lret
iret
out
push
mov
xchg
mov
int
adc
or
cmp
cmpsb
fs
std
cwtl
icebp
cmp
and
repnz
pop
lea
push
push
repz
sub
xor
mov
fbstp
jbe
push
mov
jmp
mov
mov
cli
jo
cmp
fildll
addr16
mov
push
inc
mov
push
test
jb
jo
xor
fs
mov
rep
and
mov
add
iret
lea
mov
xor
mov
mov
in
fcompl
imul
or
push
fildll
mov
xchg
out
test
cltd
xor
mov
push
and
add
aad
outsl
mov
jo
pop
movzwl
adc
aas
or
sub
not
inc
push
jge
mov
push
rcrb
push
leave
movntps
jmp
sbb
jnp
outsb
inc
sbb
bound
divb
fildll
dec
out
cs
std
jae
in
repnz
js
mov
sbb
add
xchg
ljmp
xchg
stos
gs
adc
dec
outsb
subb
pushf
push
pop
mov
in
inc
sub
repnz
cwtl
cmp
mov
or
mov
test
iret
and
mov
dec
bound
add
jns
add
inc
mov
fwait
jns
into
mov
xor
sub
pop
cmc
adc
mov
mov
clc
pop
daa
cmc
cmpsl
mov
pop
add
xor
cmp
mov
arpl
shlb
jnp
icebp
rolb
mov
insl
ficoms
or
cli
aaa
sbb
mov
inc
fwait
xchg
ja
pop
push
into
cmp
shrl
aas
sbb
adc
icebp
leave
es
adc
jl
mov
sub
iret
xchg
lods
andl
inc
sahf
xchg
or
aas
inc
xchg
mov
dec
xor
in
xor
jmp
fidivrl
fcmovbe
mov
movb
sub
sbb
pop
loop
mov
lods
xorl
leave
pop
cmpb
rcr
aam
sahf
inc
sbb
lock
lds
insl
mov
cmp
lahf
mov
mov
xlat
cli
jae
les
outsb
dec
movsl
inc
add
lahf
or
outsw
xor
shl
xor
mov
adc
mov
pushf
push
mov
dec
or
xor
or
das
xor
cli
sbb
jnp
std
mov
inc
lds
inc
cmp
or
int3
xor
ja
sub
inc
stc
sti
inc
sbb
iret
dec
mov
call
out
imul
pop
movsl
mov
xlat
push
fnstsw
pop
cmp
lods
xor
sbbl
negb
push
jmp
mov
test
pop
mov
jo
les
mul
or
mov
rcl
cmpsl
sub
daa
scas
pushf
stos
or
xor
fimull
sbb
sbb
outsl
mov
in
pop
ficoms
pusha
push
mov
insl
or
add
inc
mov
xchg
jne
gs
shlb
lock
imul
dec
mov
xorl
das
push
inc
sbb
loop
gs
test
repnz
sti
sbbb
and
ret
fwait
sbb
pop
xchg
divl
shll
xor
jo
push
or
ret
test
arpl
shrl
push
movsl
xchg
mov
xlat
jno
add
out
xchg
lcall
fsubr
sub
xor
mov
sti
jp
inc
repnz
xor
xor
xchg
inc
push
mov
cmp
scas
data16
push
loopne
xor
cld
dec
xor
shlb
movsl
pushf
out
outsl
fdivp
cwtl
in
mov
nop
xor
sub
repnz
and
call
frstor
loop
int
add
bound
aaa
stc
movsb
jl
outsl
add
jnp
pop
dec
jle
aas
mov
cmc
enter
imul
sbb
aas
adc
ds
out
addr16
xor
xchg
xor
inc
movsl
icebp
mov
jb
xchg
lret
or
add
es
out
stc
test
add
mov
in
pushf
je
test
add
jo
xchg
xor
ret
adc
and
and
push
repz
pop
in
fwait
pop
cmc
pop
std
aad
imul
imul
repnz
push
xchg
arpl
and
sbb
or
or
sbb
pop
mov
push
lods
or
push
sti
cmp
addr16
dec
lds
int3
std
subl
pop
jns
rorl
pop
add
jle
jbe
cltd
jne
addr16
test
mov
sbb
sub
xchg
mov
sbb
jno
cmp
dec
fsub
inc
sbb
pushf
inc
mov
dec
sub
aas
into
jmp
test
cmp
imul
or
sbb
repz
adc
jl
loopne
call
push
pushf
mov
xchg
xlat
mov
mov
test
add
add
rolb
sbb
nop
lods
pop
rcrb
xor
daa
xor
or
sti
imul
cmp
cwtl
push
arpl
out
dec
push
pop
dec
ret
lods
sbb
mov
mov
in
xor
dec
or
ret
jmp
mov
lcall
cmp
das
lods
data16
push
scas
mov
sbb
jo
lret
add
int3
inc
mov
lods
sub
xchg
mov
leave
xchg
mov
adc
pop
loop
js
pop
loop
adc
dec
sti
jo
sbb
std
mov
mov
lods
jle
sbb
sub
out
js
inc
jb
xlat
xlat
cmp
mov
out
ds
in
fsub
outsl
or
movsl
xchg
mov
lds
insl
lds
mov
pop
inc
pop
xor
dec
jmp
rcrb
lods
add
xchg
popf
int
test
test
repnz
fcompl
cmp
jmp
and
jecxz
and
mov
push
out
xor
sbb
mov
imul
out
je
pop
ja
into
iret
in
test
clc
ret
xlat
or
and
mov
mov
sbb
xor
test
popa
add
bound
and
lock
cmpsl
aam
inc
xor
call
inc
cmc
or
fbld
andb
pop
pop
inc
in
scas
rclb
mov
mov
sub
shrb
dec
aam
shrb
sub
jne
mov
xchg
push
lahf
adc
pop
inc
std
insb
lea
lods
push
sbb
and
out
sub
jne
int
sarb
aad
loope
in
adc
pop
rclb
cmc
inc
pop
int3
jne
stc
cmpb
dec
inc
jae
mov
dec
jg
xor
mov
xchg
stos
imul
pop
jmp
insl
addr16
cli
pop
arpl
sbbl
loope
pop
inc
xchg
jg
into
pop
ljmp
jge
xchg
lock
movsb
jl
call
sbb
jbe
sbb
mov
pushf
outsl
mov
inc
xor
mov
sub
mov
ja
or
push
sbb
icebp
das
dec
fcmovb
rcl
sti
rsm
ja
dec
out
sbb
mov
subl
mov
movsl
add
fisubs
rcrl
xchg
outsl
dec
cmpb
mov
sub
jge
negl
push
or
mov
jne
push
js
and
ljmp
cs
mov
adc
push
shlb
push
add
mov
dec
xlat
pop
in
mov
pushf
pop
out
and
push
cmp
fsubr
js
js
out
dec
rorb
outsb
push
fbstp
cld
pop
rorl
jecxz
subb
xchg
rcrb
mov
lcall
mov
mov
sub
sbb
sub
mov
aas
fdivrl
hlt
lea
pop
enter
jne
loop
test
and
test
sbb
xor
pop
xchg
out
mov
js
adc
loope
cmp
jns
fcoml
mov
fisttpll
out
lret
lods
dec
aas
xor
dec
out
ret
out
sbb
icebp
inc
nop
push
dec
aas
cmp
jge
cmp
pop
fdivrl
fnstcw
outsl
std
in
aaa
loop
jbe
aad
cmp
out
inc
and
nop
nop
insl
imul
les
cmc
sub
in
hlt
lret
mov
jnp
mov
or
and
add
pusha
pop
dec
movsl
andb
repnz
add
cs
movsl
scas
xchg
pop
cs
pop
scas
fs
data16
out
mov
cmp
cs
cld
sub
js
ret
pop
mov
mov
inc
daa
xchg
flds
jae
pop
movsl
out
add
xchg
rcr
int3
mov
ja
movsb
xor
sbb
mov
das
sub
fs
push
in
xchg
push
or
loope
cwtl
cmpsl
xchg
add
nop
mov
sbb
mov
sbb
push
mov
sub
jecxz
fisubrl
xor
shrb
repz
mov
push
inc
cmp
jmp
cmp
pop
je
mov
loop
out
and
add
mov
fnstcw
and
push
jge
mov
icebp
push
sub
movsl
push
insb
imul
push
xor
ror
sbb
std
outsl
inc
xchg
mov
cmp
jecxz
iret
mov
outsl
adc
jmp
stos
pop
lahf
adc
clc
mov
xor
cmp
fsubrs
lods
or
mov
xchg
xchg
mov
add
adc
test
test
or
and
cli
pop
jl
jecxz
imul
jb
xor
cltd
sbb
or
int
mov
imul
aaa
sbb
adc
insb
mov
pop
pusha
loope
lret
and
in
inc
adc
pusha
aas
dec
out
std
pop
idivb
sub
test
jmp
cmp
mov
rcll
sti
add
es
fdivrs
daa
popf
es
inc
mov
xor
sub
xchg
mov
addb
mov
in
sahf
sahf
test
or
popf
or
ret
incb
xchg
scas
outsl
lock
sub
xchg
sarl
push
enter
mov
lret
in
or
xlat
rorl
mov
test
popf
mov
add
ret
and
mov
and
in
out
xchg
enter
dec
pop
fwait
jne
les
mov
cmp
movl
jnp
popa
cmp
xor
sub
enter
cltd
mov
enter
in
inc
push
mov
or
and
jne
mov
push
fwait
mov
cmc
pusha
xor
aaa
cli
cmp
xchg
lods
test
daa
lea
xlat
adc
jo
das
push
lock
je
scas
mov
and
insl
rorl
adc
hlt
mov
pushf
or
push
daa
pop
stos
jmp
dec
pop
jae
sbb
pop
sti
dec
xchg
das
xchg
test
pop
dec
subb
cmpsb
ret
sub
inc
xor
into
leave
es
push
enter
gs
cmp
js
add
imul
int
loop
adc
cmp
sti
adc
aas
pop
dec
xchg
mov
jne
xrelease
inc
in
stos
mov
imul
xchg
repz
mov
dec
lods
mov
sub
adc
xchg
mov
push
jns
ljmp
fcomps
pusha
shll
ljmp
pushf
cmp
cmp
out
add
push
js
adc
js
xorb
vpunpckhdq
out
arpl
test
mov
in
xor
repz
pop
push
ss
sub
mov
int3
cltd
insl
data16
loopne
and
fstl
mov
fadds
push
test
pop
je
mov
dec
cmp
test
and
cltd
outsb
dec
push
or
push
and
xchg
je
push
xchg
mov
loope
imul
and
fstpt
mov
mov
pop
cmp
mov
xor
out
rcll
aas
mov
mov
in
clc
movsl
imulb
cmp
mov
mov
or
mov
clc
iret
fcos
daa
push
cmp
jg
adc
or
push
leave
adc
imul
loope
push
shlb
stc
push
sbb
mov
jmp
mov
inc
movsb
or
and
jmp
push
mov
shll
jge
sarl
dec
dec
lods
mov
adc
test
loope
fcoms
sahf
adcb
dec
push
cld
adc
mov
xor
lret
xchg
dec
aad
push
cltd
mov
stos
ss
push
inc
sub
sub
movsb
jl
in
stos
mov
les
cmp
jae
js
xchg
rcll
mov
mov
and
xor
icebp
sbb
fwait
lcall
jns
pop
das
call
xor
inc
test
fwait
adc
dec
in
push
pop
xor
xor
out
jp
jae
adc
cmp
or
pop
popa
sub
inc
pop
lods
adc
xchg
movl
outsb
push
in
leave
xchg
sbb
movsb
xchg
insl
pop
bound
test
iret
aas
cmp
orl
mov
jle
mov
lret
sarl
std
mov
or
or
fiadds
add
loope,pt
mov
aas
pop
stos
mov
loopne
shlb
pusha
push
jge
jne
jnp
cmp
lret
push
push
hlt
mov
sub
adc
cwtl
fs
mov
fldl
adc
dec
aam
or
std
cltd
leave
jae
mov
xor
movl
pop
dec
push
icebp
and
popa
pusha
ret
and
xchg
loopne
into
cli
arpl
jno
mov
aad
mov
fsubr
inc
cmp
es
sbb
insb
mov
mov
jno
mov
dec
faddl
lahf
push
ficompl
cmp
lret
sbb
cmc
fmull
sahf
in
adc
sbb
xchg
mov
push
push
sub
rclb
jmp
aaa
and
xor
outsb
rcll
and
lret
jae
in
shll
out
inc
xor
ljmp
les
aam
push
call
ja
inc
aad
js
das
dec
test
in
and
mov
test
fdivp
popa
jge
enter
push
pop
push
scas
js
out
or
mov
inc
mov
or
shl
cmp
sar
bound
fadds
inc
mov
push
movsb
iret
pop
push
ss
bound
das
fimuls
inc
mov
add
insl
test
and
popa
bound
and
and
stos
adc
and
push
inc
xchg
cmp
inc
outsb
xorl
mulb
mov
mov
push
out
dec
xchg
aas
pop
push
pop
lret
jo
sub
flds
sub
aam
orb
mov
mov
jge
clc
mov
pop
pusha
test
lret
pop
mov
mov
inc
dec
push
push
clc
jg
out
pop
fdivs
data16
xchg
std
test
out
dec
cmp
lea
mov
ret
daa
dec
fsubl
inc
shrl
pop
das
cld
rorb
shlb
cltd
add
jbe
fadds
in
xchg
divb
cmc
pop
dec
pushf
mov
pop
cmpsl
mov
les
add
idivb
sub
es
pop
mov
dec
aaa
push
movsb
insl
mov
and
rorb
aaa
das
mov
shrd
je
jne
mov
mov
inc
in
cmp
cmp
xor
pop
jecxz
lds
test
dec
rcll
adc
in
inc
mov
in
sub
adc
out
leave
mov
jbe
stos
insl
inc
push
and
sbb
xor
sarl
sbb
pop
jno
fs
jmpw
xor
sub
std
adc
in
mov
mov
nop
andl
test
push
stc
testb
icebp
or
pop
jb
mov
popf
jge
test
int
add
pop
sahf
jbe
mov
jecxz
mov
or
imul
fld
and
insb
fs
shlb
filds
jecxz
test
rorl
mov
outsb
mov
lock
push
jmp
and
mov
sbb
sub
xchg
lret
flds
mov
mov
cmp
rol
push
inc
pushf
sti
xchg
sbb
add
test
mov
and
insb
and
dec
pop
and
in
dec
arpl
movaps
imul
push
ss
cs
mov
or
add
mov
mov
adc
and
sbb
pop
mov
icebp
and
dec
pushf
adc
xor
sub
and
cmp
lret
stc
cmp
pop
nop
int
movsl
les
insl
ss
adc
add
xor
ss
mov
cmp
popf
cmp
out
inc
es
fsubrs
aaa
mov
aad
inc
sub
enter
add
jecxz
gs
cmp
inc
pop
and
jnp
xchg
pop
jnp
test
push
arpl
inc
repz
test
inc
nop
mov
out
hlt
adc
fwait
cs
stos
fistpl
hlt
lahf
sbb
mov
fwait
xor
sahf
or
sbb
xlat
dec
add
xchg
fistps
mov
in
jno
pop
xchg
mov
or
xor
mov
and
cmpsl
inc
test
ss
nop
dec
rolb
pop
fmuls
out
scas
into
daa
mov
push
mov
xchg
mov
jge
mov
add
jge
xlat
sbb
push
enter
insl
dec
dec
pusha
pushf
mov
push
adc
cltd
js
bound
js
ljmp
adc
and
cltd
or
push
jb,pt
jle
out
icebp
arpl
mov
into
sbb
stos
mov
les
loopne
fidivrs
xlat
std
aam
sbb
cmpsb
loopne
dec
mov
cmp
in
jecxz
mov
ret
mov
ljmp
sbb
clc
clc
xor
movsl
xor
cwtl
mov
icebp
lret
insb
cmpsb
push
pop
inc
rcll
pop
mov
in
pusha
cs
add
sbb
dec
mov
push
test
mov
je
dec
hlt
fsubrl
in
inc
pop
icebp
nop
cmp
fcompl
je
int
xor
mov
insl
adc
xchg
popf
rolb
sub
cld
push
ljmp
cmp
clc
cmp
movsl
push
iret
add
xchg
sbb
outsl
lods
int
bound
or
sub
int
stc
jecxz
and
push
cmp
sub
xor
scas
dec
sbb
lret
mov
imul
gs
xchg
or
mov
fdivl
sbb
call
or
push
ss
cmpsl
push
jnp
jl
cli
sarb
mov
out
xchg
rcrl
shlb
lods
cmp
lret
ss
test
jne
adc
into
call
cmpsb
mov
or
jge
push
shlb
in
mov
pop
int3
fildl
out
das
xor
inc
pop
jecxz
jmp
mov
ss
or
movsl
and
mov
ds
jne
incb
dec
mov
out
sub
mov
aas
cmp
lock
loop
in
jmp
outsb
scas
dec
jne
insb
push
aaa
cmc
inc
pop
outsb
out
push
add
jmp
arpl
cmp
dec
pop
int
into
inc
inc
call
xchg
xchg
mov
popf
rolb
push
aas
rcrl
leave
add
ret
movsb
loop
mov
mov
or
and
mov
loope
inc
cmp
mov
mul
mov
sbb
jb
ret
pop
lret
mov
xchg
mov
xor
fmuls
cmpsb
fidivl
loopne
xchg
sub
jecxz
xorb
mov
dec
dec
mov
loope
adc
cmp
mov
mov
bound
or
mov
je
push
mov
cs
xchg
mov
push
mov
clc
sub
mov
call
insl
movsb
int
cld
je
orl
xor
jecxz
add
jns
adc
arpl
push
xchg
loop
add
or
mov
inc
add
or
sahf
cmp
pop
les
xchg
cmp
sub
push
dec
sar
xor
imul
das
hlt
sub
ret
imul
rorb
int
popf
inc
shll
in
in
popf
dec
xchg
jl
sahf
jp
mov
mov
xchg
pushaw
inc
or
xor
addr16
mov
fldl2e
adc
fisubrl
xor
jns
xchg
out
mov
add
add
mov
adc
and
mov
mov
orl
out
push
faddl
or
aam
cwtl
outsb
jbe
out
xor
add
cmp
xor
mov
adc
pop
in
dec
rcr
add
es
pop
ja
jo
ficoms
mov
das
ret
jb
mov
aam
loopne
xchg
fst
sbb
aas
cwtl
mov
popa
aaa
mov
cwtl
dec
dec
cli
cld
xor
sub
test
shll
mov
lcall
iret
imul
sbb
dec
in
add
jg
je
ds
jl
leave
pop
or
mov
xchg
lock
hlt
adc
mov
aam
xlat
jmp
mov
pop
push
xlat
cmp
inc
ja
dec
mov
adc
mov
jae
or
adc
fstps
mov
inc
mov
xchg
imul
push
out
adc
movl
add
out
pop
idivb
and
lahf
add
cmc
testl
or
fdivs
stos
mov
xchg
pushf
mov
cli
adc
enter
mov
push
lods
insl
lret
loopne
adc
scas
fnstsw
dec
in
xlat
lahf
mov
gs
pop
mov
cltd
mov
pushf
out
imul
insb
aam
push
test
xor
in
clts
rcll
push
daa
andb
cmp
mov
lods
aad
sbb
push
in
rolb
ret
jbe
fistpl
or
jle
push
aas
das
mov
lret
or
add
cli
jp
sar
push
scas
sbb
xchg
push
jbe
adc
mov
mov
cli
mov
push
fs
jb
dec
iret
shlb
scas
aam
sub
mov
out
insb
mov
cltd
pop
lahf
adc
push
sub
add
push
jg
and
jns
scas
addl
xor
dec
sysret
jno
jle
sbb
test
push
xchg
mov
mov
aaa
in
into
or
adc
jp
cmpsl
jecxz
dec
lret
add
and
push
xchg
daa
cmpsl
stc
les
xor
cmp
xor
in
mov
lahf
and
pop
inc
dec
cmpb
jbe
mov
inc
jbe
icebp
push
sar
addr16
test
pop
and
addr16
out
sbb
scas
pop
cli
movnti
lea
incl
push
dec
mov
pop
and
inc
xor
jmp
sub
fsubr
sti
or
jae
sub
push
mov
xchg
psubsb
mov
and
in
sub
or
lret
repz
sbb
cmp
out
sti
lea
mov
push
xor
mov
cmpsl
cli
mov
and
popa
aas
jmp
sbb
inc
iret
or
dec
loopne
add
mov
mov
insl
lds
dec
call
mov
dec
imul
outsl
cld
and
mov
inc
push
inc
das
imul
cmp
ss
inc
xor
lock
dec
dec
push
xchg
inc
inc
inc
rcrl
clc
into
cmp
add
mov
sti
test
sub
test
sub
negl
or
mov
adc
mov
jae
movsl
and
sarb
xlat
xchg
jmp
dec
out
hlt
jne
mov
pop
pop
cmpsl
push
mov
lahf
dec
scas
fldl
arpl
nop
jno
stos
adc
cmpsb
repz
mov
mov
mov
lcall
mov
pop
out
pop
mov
or
jns
fcoms
sbb
dec
flds
xchg
add
sub
jnp
cmp
ja
icebp
subl
cmp
add
insl
and
sbb
lret
xchg
in
aaa
lcall
loope
js
das
adc
mov
jnp
xchg
popa
ficompl
dec
sub
enter
xchg
sub
pop
cmp
clc
mov
imul
pop
dec
pop
dec
into
xchg
scas
stc
inc
pop
cltd
movsl
lods
add
push
icebp
or
clc
or
mov
cmp
dec
and
jae
scas
jnp
cmp
sub
mov
mov
mov
dec
test
hlt
or
aam
add
push
js
mov
mov
pop
add
xor
out
add
cmc
out
test
inc
cmpsl
insl
mov
fs
fldt
arpl
xchg
jle
add
jl
dec
nop
push
or
sub
jmp
xor
mov
loop
in
aad
sbb
xchg
data16
add
add
sub
popa
leave
xor
aam
jnp
mov
hlt
mov
cld
xchg
and
mov
pop
enter
xchg
cmpl
aad
mov
addr16
pop
test
xchg
cmp
add
or
repz
test
inc
insb
push
test
dec
jnp
sbb
add
das
test
popf
xchg
pop
test
scas
mov
loope
and
into
into
push
adc
scas
loope
inc
pop
enter
aaa
fiaddl
push
sahf
repz
inc
cmpsl
push
xchg
pop
push
test
in
and
xor
cmpb
dec
inc
out
divb
lret
and
push
imul
or
dec
sub
sbb
sbb
sbb
rorb
addr16
loop
push
xchg
pop
jmp
pop
sbb
stos
jne
orb
test
enter
lret
sahf
dec
push
jnp
inc
cmpsl
outsb
push
loope
cmp
push
in
das
push
in
pushf
cltd
std
xor
jae
cmp
mov
push
js
in
test
test
clc
pop
nop
in
jbe
sbb
sbb
jecxz
lock
xor
jmp
sbb
loopne
xchg
jnp
repnz
ljmp
sti
inc
sub
inc
push
sbb
cmpsl
and
sub
mov
mov
pushf
and
xor
repz
xor
pop
lahf
xchg
stos
sbb
arpl
cmp
xchg
into
add
mov
mov
icebp
into
out
ret
or
mov
or
test
fldcw
mov
xchg
bound
mov
sub
or
push
xor
call
push
jae
push
cmp
or
inc
shll
inc
aaa
cmp
lods
incl
fistl
inc
xchg
lret
cmp
adc
mov
pop
fsubl
and
pop
mov
clc
and
dec
dec
lcall
sahf
inc
add
cld
outsb
xor
or
sahf
jp
ss
mov
dec
into
ja
js
xor
push
lahf
sti
mov
push
mov
pushf
and
cltd
mov
cmpsl
jbe
adc
mov
and
cmpsl
lock
add
leave
dec
mov
ret
sbb
insb
cs
fistpll
xchg
pop
push
inc
fnstenv
xor
clc
pusha
jne
clc
mov
xor
popf
xlat
imul
rcrl
mov
sti
sbb
cmpsl
gs
jge
mov
add
sahf
pushf
pop
fs
mul
bound
and
cltd
cmpsb
stos
or
mov
inc
push
fstl
pop
mov
ds
imul
sbb
test
inc
repnz
fnstsw
inc
clc
cli
mov
cwtl
nop
mov
add
lret
dec
aad
or
jmp
pop
sbb
mov
add
in
pusha
stos
sbb
xlat
add
push
jae
sahf
push
xchg
clc
icebp
fwait
daa
popa
fsubl
pop
push
cwtl
jg
cmpsb
mov
mov
pushf
imul
cld
out
popf
pop
lret
adc
cld
flds
sub
test
lret
jnp
orb
daa
stc
cli
sbb
inc
ja
rcl
or
push
movsb
jl
xchg
outsb
mov
xchg
or
jb
adc
xchg
stos
mov
in
mov
out
sub
pushl
addr16
push
xchg
ljmp
in
fs
test
bsr
mov
lret
xlat
xchg
bound
orb
adc
jmp
cmp
int3
std
and
mov
popf
mov
std
arpl
mov
fistpl
out
xchg
lods
mov
or
jae
cmp
or
jl
lea
loopne
add
pop
or
adc
jg
mov
xchg
rorl
dec
movb
lds
jne
mov
clc
pop
fcomp
mov
subb
jmp
xor
fwait
aas
mov
hlt
adc
mov
xor
mov
in
hlt
mov
loop
sub
sti
cmpsl
dec
push
test
ss
shrl
push
cld
in
sbb
adc
mov
lds
dec
push
add
adc
addb
cmpsl
subb
sbb
mov
cmpsb
jmp
popf
ret
xchg
je
ds
cwtl
jl
sbb
flds
push
addr16
fadds
push
xor
es
sbb
mov
jecxz
pop
adc
stos
in
add
xchg
aaa
or
fistps
pop
pop
in
pop
jp
push
xchg
movsb
ja
sub
hlt
roll
cmc
jns
jp
jge
enter
sti
mov
call
mov
aas
push
in
mov
sub
aam
cwtl
inc
jns
dec
and
or
je
cmp
pop
pop
loope
mov
xor
push
in
rorb
out
lcall
bound
les
ljmp
fistpl
and
lods
lock
fwait
clc
cmp
mov
repz
filds
aad
mov
stos
test
xchg
into
fistl
adc
xchg
jecxz
test
stos
outsl
push
lock
xchg
xchg
xchg
into
inc
cmp
loopne
insb
cmpsl
push
jg
jnp
je
iret
std
sbb
outsl
mov
pop
mov
cwtl
cwtl
push
lods
push
sbb
fcomps
mov
sarl
xlat
cmp
mov
outsb
push
rcl
fldcw
cwtl
shrl
fs
mov
sbb
mov
mov
dec
scas
cwtl
inc
neg
and
pop
outsl
pop
bound
fcomi
shll
sub
nop
jb
jecxz
add
out
or
sub
sbb
mov
insl
xchg
pop
iret
mov
sbb
enter
cmp
jb
jne
inc
pop
es
jae
add
loopw
or
mov
add
xor
mov
lcall
xorb
ds
or
lods
icebp
cmp
lcall
mov
aaa
aad
arpl
imul
dec
lret
movb
idivl
push
add
mov
xchg
xchg
xchg
sub
ret
mov
je
or
adc
push
push
sbb
cmc
lock
push
in
addr16
sti
dec
cmp
xchg
fmull
adc
pop
xor
or
mov
popf
and
popf
das
imul
addr16
mov
mov
dec
xlat
mov
ret
or
stos
jo
leave
pop
adc
pop
int3
or
jl
loopne
jns
mov
fisubs
mov
loopne
adc
push
aad
pusha
pop
lea
out
push
sub
pop
ret
dec
sbb
out
or
lods
pushf
lret
mov
loope
push
dec
xchg
sbb
stos
pusha
pop
rcl
and
push
xchg
adc
and
and
loop
out
sarl
jns
xorb
enter
sahf
cmp
push
cmp
pop
sbb
xor
test
mov
xor
lods
dec
push
icebp
stos
inc
cmp
inc
or
cmp
lds
shll
cmc
addr16
dec
lods
sub
insl
or
addr16
sbb
jecxz
or
jno
clc
lea
in
clc
inc
dec
insl
push
lods
mov
dec
adcl
cli
xchg
pop
mov
inc
mov
out
pop
xor
lods
idivb
test
mov
scas
bound
inc
xor
repz
in
mov
fisubl
mov
or
out
filds
lods
cltd
xor
jle
pop
mov
pushf
stos
bnd
int
outsl
adc
cli
pushf
out
and
stc
and
push
dec
out
lea
lahf
pop
sbb
lods
or
fmul
shr
push
and
xchg
mov
adc
inc
mov
movsl
cwtl
jno
les
fidivrl
data16
rcrl
filds
call
stos
hlt
cld
inc
lret
xor
daa
push
cmpsb
cmp
jle
adc
dec
cmp
cmc
test
lea
fnsave
inc
jns
mov
pop
mov
and
push
mov
mov
sub
sbb
jmp
in
or
sub
push
mov
xchg
in
pop
pop
cmpsb
je
sbb
cmp
out
test
jbe
out
push
sbb
pop
ljmp
js
ret
push
jb
jmp
iret
in
lock
outsl
inc
or
repz
filds
mov
xchg
cmc
rcrl
jno
pop
testb
adc
in
add
sar
mov
jno
jo
aaa
xor
or
lret
add
cmp
dec
lds
ret
aaa
gs
add
sbb
add
jno
xorl
mov
or
nop
jg
jns
mov
mov
rcl
dec
push
aaa
mov
loopne
xor
pop
mov
dec
push
add
scas
lods
xchg
fnstcw
push
sti
push
inc
push
jns
ljmp
lock
dec
lcall
test
arpl
xor
xchg
lcall
sub
cs
fwait
dec
sub
jge
icebp
in
dec
ss
inc
fidivrs
rcr
xor
inc
inc
popa
adc
jecxz
add
add
rorb
pop
pop
rclb
or
xchg
cmc
jo
es
jl
xchg
lret
js
cmp
mov
mov
cmpb
push
insl
adc
mov
repz
insb
dec
jmp
push
mov
lds
aam
sub
mov
xor
testb
imul
pop
aas
loope
xorl
dec
gs
adc
push
dec
mov
push
push
pop
ss
call
jno
addl
lock
int3
adc
shlb
push
inc
fisubs
dec
jns
loope
jnp
xchg
fisttpl
cltd
popa
cmp
mov
shrb
jno
dec
daa
idivw
stos
adc
leave
inc
movq
pop
jb
icebp
pop
gs
mov
jae
loopne
loope
enter
mov
dec
cmpsb
mov
jecxz
lcall
pop
cmp
sbb
lods
xor
push
loope
mov
bts
pop
xor
leave
stc
push
cmp
pop
cmpsl
cmp
movsb
jge
popa
adc
push
push
jle
loope
lcall
xor
add
jmp
bound
xchg
filds
cmpsl
cld
jnp
scas
xrelease
inc
mov
shll
mov
aam
sbb
mov
pop
sub
ds
push
lret
jae
pop
dec
popf
in
pop
rcl
xchg
pop
pop
xchg
call
mov
insb
aad
jl
arpl
aas
outsb
bound
xor
jl
mov
or
cld
mov
cli
xor
push
aam
out
xor
call
mov
fdivrp
nop
add
mov
and
jnp
sub
mov
push
dec
rcrb
sti
les
hlt
pop
xchg
mov
inc
loopne
test
movsb
lret
inc
mov
add
outsb
cmp
sbb
add
jnp
adc
pushf
jbe
mov
push
das
pop
jg
lods
jp
stos
sbb
test
ret
je
sub
fdivl
loop
cmp
jp
cwtl
repnz
dec
sti
lods
xor
dec
pop
pop
push
mov
push
add
pop
inc
mov
dec
aaa
mov
sub
push
fstp
add
mov
jno
sub
lock
inc
out
sub
or
xchg
mov
xchg
cmp
popa
negl
jne
adcb
loop
add
sub
xchg
roll
xor
inc
xchg
xor
das
sti
adc
cmp
jle
outsb
and
je
mov
in
xchg
popf
out
sti
dec
adc
push
imul
stos
popf
negl
iret
xor
stc
or
jno
inc
jl
xchg
jl
xchg
repnz
test
push
pop
imul
sub
aas
dec
pop
loop
icebp
movsb
and
fnstcw
aad
xchg
xor
dec
mov
pop
pop
pop
test
jmp
xor
decb
dec
and
ret
jmp
push
fs
inc
aas
or
jge
jp
push
imul
movsb
and
mov
sbb
adc
sub
jle
lds
and
jp
adc
and
pop
es
jns
je
pop
cs
sub
call
fnsave
xor
shrb
ret
imul
shrl
das
mov
test
or
subb
xchg
cmpsb
jae
push
and
inc
test
mov
xor
xor
dec
push
mov
std
jb
icebp
shlb
or
jo
fdivs
xor
sahf
call
mov
test
sub
lahf
push
repz
pusha
outsl
cmp
mov
pop
mov
pop
cld
jg
adc
je
in
and
sbb
mov
adc
mov
in
stc
sti
addl
sbb
cmp
movsb
sbb
and
sub
int3
sbb
movb
mov
mov
addr16
lcall
js
pushf
mov
mov
push
jb
sahf
mov
popa
cmp
lock
push
jmp
enter
dec
mov
aaa
out
leave
outsb
fstl
mov
jb
movsb
mov
xor
insl
push
call
push
adc
shll
mov
or
loope
nop
sti
or
cli
and
cltd
or
aad
out
pop
or
in
fwait
enter
mov
sti
push
mov
fadds
int3
sbb
pop
or
cmp
daa
push
jno
mov
and
mov
and
popl
pop
mov
sub
and
dec
cmpsb
mov
addl
imul
into
enter
jmp
outsb
sub
stc
or
and
mov
in
or
adc
or
ret
fs
inc
lret
fdivrs
dec
cmp
repnz
xor
cmp
pop
addl
xchg
jmp
lds
push
add
mov
ss
enter
orb
push
sbb
and
mov
lahf
std
jnp
popa
sbb
call
jbe
jae
xor
leave
adc
icebp
sbb
and
aad
jnp
cmpsb
call
jns
jp
in
sbb
cmp
es
push
jae
or
pop
jae
inc
adc
dec
ljmp
out
sub
ret
cmp
cwtl
fisttpll
sarb
mov
aam
daa
push
lcall
jle
aaa
repz
pop
xchg
xor
cmp
sbb
mov
add
cmc
insb
sub
loopne
inc
mov
jg
push
es
xchg
loop
xchg
push
push
sbb
cmp
add
xor
dec
pop
jb
mov
js
out
bswap
lods
cmp
pop
or
cmp
cwtl
xchg
pusha
popf
outsb
mov
and
push
xlat
test
dec
fcomip
push
out
test
add
mov
icebp
pop
loope
fmul
jmp
sbb
adcl
es
sub
js
sbb
clc
scas
mov
movsb
rcr
lock
not
aaa
xchg
and
sbb
mov
push
inc
loope
ror
adc
pop
mov
cmp
push
add
shlb
or
in
loop
and
cli
push
movsl
loope
and
fisttpll
cmp
idivl
popf
jo
scas
fildll
ds
jg
bound
ja
xchg
xchg
push
ljmp
fstps
inc
icebp
sbb
add
xor
sbb
iret
push
in
or
fidivrs
adc
insl
pop
mov
push
dec
xchg
dec
cwtl
repnz
movsl
int3
add
daa
into
push
and
inc
insl
push
insl
sbb
adc
roll
hlt
xor
dec
out
mov
push
jmp
and
pop
inc
jle
je
sbb
mov
dec
pop
in
and
push
jnp
lahf
adc
iret
push
push
loop
andb
inc
mov
lock
sbb
jg
ret
inc
addr16
xor
je
jecxz
xchg
jmp
loop
push
mov
sub
inc
rcrb
cs
mull
sbb
mov
ds
loopne
inc
push
imul
sub
pop
jg
shrb
adc
dec
push
leave
xchg
or
pushf
xlat
out
sbb
mov
mov
lret
stc
aaa
aad
cltd
shll
in
and
jle
in
adc
inc
mov
push
inc
out
jb
mov
jge
lret
vmread
notl
push
push
shlb
push
and
cmpsb
dec
adc
xor
inc
lods
lret
fwait
sbb
and
cmp
jg
sti
popa
and
dec
and
mov
jp
or
mov
std
shrb
pushf
jge
mov
mov
sbb
int
mov
add
orl
push
jb
sub
mov
pop
fbstp
mov
dec
aad
mov
push
loop
or
notl
pop
nop
fstp
adc
pop
mov
jbe
ss
jge
pop
shr
xchg
sub
ret
and
push
xchg
sub
repnz
add
sub
lock
xlat
push
lds
mov
xchg
xchg
aam
test
inc
shl
aas
xor
mov
pop
into
adcl
sub
jge
rcrb
int
cmp
or
mov
hlt
xor
les
xchg
dec
mov
imul
fsubrl
sub
les
xor
lods
js
movsl
inc
pop
dec
stc
pop
es
adc
cmp
inc
jns
push
arpl
scas
jle
lret
xchg
cmp
enter
mov
dec
inc
clc
jge
data16
repz
mov
rcl
mov
cmp
lret
cmpsb
lcall
lock
mov
pop
pop
cmpsb
test
call
xchg
xchg
dec
xchg
add
mov
sub
pop
mov
xchg
pop
xlat
cltd
aaa
mov
scas
std
adc
int
cmp
gs
dec
hlt
or
cmp
cmp
and
lods
mov
imul
push
pop
adc
lcall
inc
adc
cmp
outsl
mov
mov
popa
cmp
inc
mov
incl
fimull
xchg
out
and
mov
jbe
push
dec
pop
and
loope
movsl
movsl
arpl
xchg
push
icebp
mov
loop
cltd
add
outsl
scas
dec
dec
ljmp
stc
xchg
add
lock
jo
xchg
dec
icebp
stos
inc
and
pop
sub
lods
jae
mov
lahf
xor
mov
cmpsb
xchg
inc
xchg
cmp
enter
notb
frstor
inc
dec
test
aam
sub
fstpl
add
pop
xor
cmpsb
xor
repz
sub
ja
stos
push
out
sub
adc
ret
fdivl
call
ss
out
pop
lcall
xchg
sub
lcall
sbb
mov
xor
push
je
sbb
pop
or
scas
mov
fwait
lret
lcall
clc
inc
sub
loop
out
scas
jbe
dec
fldcw
xchg
movsb
dec
sub
fisttpl
pop
psubb
les
mov
rcll
xorl
or
orb
flds
sbb
add
ds
push
mov
test
lds
sbb
mov
ljmp
movsb
sub
and
leave
push
rorl
aas
rcrl
inc
into
mov
cmp
das
inc
xor
dec
in
xorl
jo
mov
hlt
aam
pop
pop
or
mov
and
jp
insl
out
xor
loopne
and
adc
mov
pop
mov
cwtl
jo
in
push
push
or
imul
xor
jg
adc
mov
jecxz
imul
hlt
pop
hlt
inc
sub
push
sarb
mov
jnp
out
mov
push
cmp
xchg
test
cmp
dec
sub
out
push
int3
mov
jno
sbb
das
and
cmpb
sbb
jae
xchg
pop
imul
cmpsb
das
sbbl
sub
push
inc
pop
daa
dec
xchg
lods
xchg
rclb
loopne
push
or
mov
stos
pop
adc
jg
pop
fwait
hlt
sarl
dec
sarb
scas
dec
mov
xchg
mov
mov
iret
sti
bound
scas
sub
out
pop
test
jmp
mov
and
lods
jb
xor
ljmp
inc
and
inc
jb
or
rolb
sbb
repnz
in
xchg
lods
int
shrb
dec
hlt
cli
xor
jbe
test
cwtl
xchg
adc
pusha
xor
sub
xor
repnz
stos
mov
jne
mov
les
sub
or
mov
lret
push
cs
sub
mov
gs
cmp
int3
or
das
add
mov
outsl
ljmp
adc
and
mov
clc
mov
inc
or
push
add
push
mov
pop
jns
fildl
pop
jnp
loope
jecxz
adc
push
rcrb
sub
dec
jg
pop
sbb
jae
xor
inc
jge
mov
inc
test
xchg
ds
cmp
adc
lods
xchg
fisttps
jnp
inc
fistps
xchg
aas
mov
cmc
push
cvtpi2ps
fldt
and
add
repnz
mov
push
ss
or
mov
filds
sub
mov
xcrypt-ecb
cmpsl
dec
or
mov
lret
pop
arpl
fdivs
mov
push
out
jne
xchg
push
into
pop
insl
jecxz
sbb
add
sbb
jae
push
xor
std
push
inc
aam
mov
adc
inc
adc
arpl
jb
out
sub
mov
cmovne
mov
js
leave
xor
xor
and
xor
lea
das
mov
mov
bound
into
dec
shl
push
cmp
pusha
dec
pop
repz
arpl
loope
add
shl
int
andl
cmp
mov
or
mov
xor
dec
jecxz
push
notb
sbb
cmp
mov
push
insb
push
xchg
push
ret
cmp
jbe
icebp
xchg
or
sbb
mov
in
dec
pop
addl
push
or
fsubrl
mov
xlat
aaa
int
fidivs
mov
scas
stos
push
fwait
mov
ret
arpl
jp
shlb
inc
test
xchg
cmp
push
aad
jno
mov
loope
mov
sub
cmp
or
push
sahf
ljmp
jnp
cltd
sub
xor
call
in
into
mov
jnp
jl
push
and
pushf
out
lret
ret
test
fsubrs
add
movsl
cmp
xchg
or
faddp
es
push
dec
test
frstor
fcmovb
sub
popa
xor
mov
scas
das
pop
pop
dec
in
and
ret
mov
mov
push
cmp
ljmp
inc
jge
andb
in
andl
jb
popf
dec
mov
mov
les
out
sub
sahf
fisttpl
mov
shrl
adc
into
pop
movsb
jp
inc
stos
mov
add
mov
fsubs
in
test
insb
out
dec
dec
xor
pop
fiaddl
cmp
cmp
out
test
push
xchg
or
hlt
cmp
pushf
jl
dec
bound
insb
in
outsl
xor
xchg
add
sbb
inc
jp
fldt
jp
stc
pop
pop
xchg
xchg
push
inc
add
enter
imul
mov
stos
cmpsb
dec
jl
fcoms
and
repz
rclb
xor
idivl
or
inc
pop
sbb
push
cmp
and
inc
mov
mov
xchg
cwtl
or
jno
jge
mov
inc
or
ljmp
push
idivb
ljmp
inc
sub
cmovs
or
inc
sbb
std
jg
test
aaa
jnp
and
push
ljmp
push
pop
mov
and
stc
test
sbb
lds
dec
xor
outsl
push
pop
mov
cmc
inc
jns
jmp
dec
cmc
push
repz
push
jecxz
dec
icebp
mov
mov
pop
mov
rolb
cmp
notb
sahf
sub
loop
cld
mov
sarb
popa
fcmove
int3
jno
dec
imul
pop
jecxz
cmc
mov
add
aad
cld
jg
fisubl
mov
adcb
add
movsb
push
aad
xchg
int
adc
das
sbb
sbb
xchg
cmp
inc
sbbl
and
or
ss
outsl
mov
push
adc
test
mov
inc
push
xchg
sbb
ror
xlat
test
pop
sub
cmp
jge
jno
sbb
leave
out
aas
add
sti
jb
adc
sbb
mov
shlb
pop
xchg
mov
daa
adc
xchg
out
out
ja
mov
or
mov
sub
icebp
sbb
fldcw
jecxz
movsb
fadds
push
sbb
lea
xchg
push
dec
jg
mov
lods
add
sub
in
ss
fdivrs
stos
jne
adc
test
xor
stc
push
daa
cmp
push
and
ds
rorb
mov
out
je
cmp
call
pop
xor
cltd
call
insl
ret
ljmp
mov
fs
mov
inc
mov
mov
insb
push
cli
pop
into
jbe
sub
push
mov
pop
addl
dec
sti
movsl
inc
push
mov
lods
imul
mov
inc
movsl
inc
xchg
or
leave
cli
je
mov
sbb
ss
cmp
mov
pop
xchg
insb
sub
xor
addr16
imul
loope
xchg
mov
rcr
js
fnsave
int3
ret
lods
ret
dec
shll
pop
and
insl
js
push
into
scas
push
xor
mov
popa
or
mov
xchg
xchg
std
push
bsf
sub
mov
rorb
sub
jo
push
daa
mov
sahf
insl
inc
push
cmp
ja
xchg
lahf
lds
or
sbb
xchg
sub
aad
dec
inc
in
into
pop
cmp
pop
std
std
cmp
mov
adc
das
outsl
pop
adc
std
xchg
cltd
xchg
arpl
faddl
jecxz
mov
int3
pusha
pop
inc
inc
pop
mov
mov
sbb
xchg
mull
ljmp
pop
inc
jecxz
daa
in
cmp
aam
mov
cli
clc
loope
sarl
fistl
mov
sbb
and
dec
mov
jo
pop
cmp
xchg
xor
in
jle
xor
cmpb
and
cmp
jg,pn
adcb
mov
in
adc
adc
push
add
shll
push
cmp
inc
ja
sub
jge
pushf
loop
addb
fimuls
rcrb
push
mull
pop
sbbb
mov
mov
nop
pusha
pushf
push
daa
gs
jae
inc
push
pop
aad
mov
cmp
inc
or
out
loop
ss
sub
rcll
or
jne
jmp
mov
mov
js
fdivrl
adc
fs
inc
out
leave
push
jg
clc
jb
jnp
xchg
aam
and
sub
mov
cmp
in
cmpsl
xchg
sub
inc
xor
jae
js
mov
cwtl
mov
xchg
push
dec
mov
inc
pop
mov
loop
repz
mov
shlb
push
fwait
loope
cmp
das
xlat
pushf
xchg
jnp
cltd
data16
xor
bound
jle
hlt
movsl
dec
mov
rcll
xchg
out
or
sub
sub
push
aad
les
fisttpll
mov
sub
sub
aam
sar
rclb
xchg
xchg
out
mov
jge
mov
jmp
pop
sahf
push
fnsave
iret
insb
insl
sbb
dec
jle
mov
pop
insl
mov
inc
cmpsb
inc
inc
xchg
mov
insb
jl
inc
loope
pushf
fst
pop
fildll
cmc
ret
jecxz
stc
add
aad
cwtl
mov
xchg
int
jmp
fstpl
jae
mov
mov
cld
ds
lods
mov
test
push
adc
inc
jmp
xor
mov
jp
out
xchg
out
pop
mov
xchg
sti
pop
insb
pusha
mov
jne
cmpsl
rcll
out
inc
mov
addl
pusha
jne
mov
std
enter
rcrb
adc
inc
out
sbb
out
fdiv
stos
cltd
adc
aaa
rcrb
add
aas
inc
adc
aad
in
popa
in
mov
mov
repz
push
mov
aaa
cmpsl
iret
pxor
shl
add
in
push
adc
decb
daa
addr16
das
add
inc
cmp
push
gs
outsb
adc
cmc
mov
adc
fidivl
cld
loope
imul
mov
nop
cmp
cmp
out
xor
push
jns
in
mov
push
out
insb
inc
out
mov
xor
fs
pusha
cmp
iret
sub
negl
aad
push
xor
sbb
fwait
sbb
sti
jae
ret
jmp
notl
mov
xor
fwait
and
push
cwtl
xlat
pop
dec
or
leave
ds
out
or
push
lahf
pop
sti
lcall
rcl
bound
popf
in
and
mov
pop
cld
scas
addr16
cwtl
or
push
mov
mov
inc
jb
pop
fcmovb
adc
aas
xchg
sbb
test
inc
fdivrp
ss
ja
iret
insl
rorl
sub
insl
xchg
lret
in
push
sub
aas
push
rol
outsl
jecxz
mov
xchg
mov
flds
xorb
shrl
mov
jns
xchg
cmc
fiaddl
shl
sub
push
adc
mov
mov
jb
dec
jb
cmp
subb
jb
cmp
mov
mov
mov
lret
lahf
inc
xchg
insb
ret
push
cmp
sahf
mov
add
or
cmpl
push
sub
mov
pop
mov
loop
mov
jno
push
in
stos
mov
xor
fmull
iret
and
mov
mov
mov
or
sbb
add
sahf
call
adc
lahf
bound
and
rorb
pop
mov
mov
test
insb
es
sahf
sbb
imul
fprem1
roll
xor
cs
imul
fdivl
add
sub
dec
lcall
xrstors
enter
lret
inc
pushf
jle
psrad
jle
jbe
pop
idivb
or
mov
pushf
push
movsb
fucomi
adc
sub
push
push
mov
lds
stos
in
xchg
or
leave
mov
mov
sbb
cmp
pop
in
mov
sub
cmp
pop
icebp
leave
arpl
fists
lods
jo
xchg
int
xchg
loop
insb
into
in
mov
xchg
inc
leave
mov
daa
push
mov
stc
stos
pushf
push
adc
jo
in
dec
ret
pop
icebp
or
xchg
cld
into
imul
bound
mov
push
bnd
push
aaa
bound
into
mov
add
je
shr
ljmp
ja
xlat
test
fidivrl
push
lods
dec
or
ss
push
pop
push
movsb
int
call
mov
jecxz
pop
testb
lds
mov
jb
shr
lahf
xchg
xchg
cmp
lret
rcrb
insb
ud0
pop
add
into
and
mov
inc
push
inc
add
sahf
popa
negb
or
imul
xor
jle
jne
inc
imul
popa
mov
into
sti
pusha
loopne
jle
sbb
mov
xchg
or
cmc
inc
xchg
xor
push
test
or
fucomi
mov
pop
movsl
sbb
sub
mov
jp
in
pop
int
mov
and
sub
cmp
fimuls
push
mov
fimull
sub
sub
push
dec
cmp
add
sub
or
mov
testl
stos
rorl
fwait
daa
mov
xchg
dec
inc
push
sub
ret
add
inc
jg
repz
mov
adc
filds
sti
in
scas
mov
sub
xchg
iret
ret
or
xchg
cmpb
loope
ljmp
sub
and
xchg
jg
sahf
mov
fdivl
shr
call
or
pop
cmp
clc
lods
xor
xchg
xlat
and
pop
movsl
inc
mull
lods
mov
fsts
int
popf
inc
ja
adc
repz
sub
les
test
jae
dec
push
rclb
lea
dec
push
fcoml
mulb
add
sbb
or
mov
or
and
or
into
mov
pop
mov
test
cmp
sarl
addl
adc
or
ja
mov
lock
xchg
adc
sbb
push
mov
ja
scas
aad
hlt
fidivrl
ss
popa
add
dec
pop
in
and
add
jl
push
rcll
popf
mov
das
scas
frstor
sbb
adc
mov
push
arpl
push
insb
mov
ljmp
push
add
in
lret
and
pop
push
pushf
add
mov
adc
out
xor
pop
inc
es
mov
jle
push
add
pop
ret
dec
popa
push
rcrl
mov
inc
leave
aas
push
push
loopne
xchg
jae
or
aaa
ss
in
clc
jns
repnz
mov
inc
nop
int3
movsl
or
pop
test
clc
sbb
mov
fs
sbb
adc
nop
lcall
and
xlat
xchg
outsl
inc
mov
jnp
dec
or
and
stc
mov
xor
mov
lds
or
fists
gs
sub
repnz
movsl
pop
sbb
sub
cltd
imul
and
sbb
std
adcl
shll
lock
std
mov
sbb
call
dec
pop
xor
cwtl
jnp
lret
pop
fsubrp
or
pushf
cld
fistl
divb
sub
outsl
lahf
ret
and
mov
pop
aam
adc
pop
pop
rcr
jbe
enter
add
lcall
outsb
aaa
dec
popa
loope
pop
adc
pushf
jno
hlt
daa
out
mov
xchg
sub
daa
cmp
sti
lock
xlat
xchg
lods
cmp
add
add
test
icebp
xchg
rcr
mov
ret
nop
fisubl
or
sti
ljmp
sbb
into
shl
adc
add
hlt
out
movsb
jns
inc
out
and
push
jecxz
pusha
arpl
pop
test
in
sub
cmpsl
add
jge
lret
xor
adc
mov
out
cmpsl
mov
out
movsl
adc
sti
xchg
int3
fxch
dec
cmpsl
inc
add
mov
add
and
pop
outsb
mov
stc
cmpsl
pop
data16
dec
cmpsb
sahf
adc
sub
add
push
test
ds
cmp
movsl
lock
std
xchg
jae
cmpl
push
xor
mov
dec
xor
add
jb
inc
adc
addr16
loop
in
pop
mov
cmp
mov
push
mov
pop
mov
shll
adc
mov
icebp
jno
push
sti
fistpl
pop
cwtl
and
and
clc
pushf
cwtl
sub
cltd
movsl
outsb
jno
adc
fcmovu
lret
ljmp
je
nop
les
lea
stc
xchg
jecxz
sub
inc
or
inc
pop
inc
pop
repnz
mov
sarb
cmc
cmp
pop
cmp
ljmp
testl
sub
dec
sbb
imul
aam
fnstenv
hlt
sti
jae
in
xor
inc
push
mov
pop
fmuls
jp
outsl
insl
fnstsw
in
add
lds
scas
sbb
outsl
adc
int
add
sbb
pushf
dec
addr16
cmp
cmc
pop
pop
cltd
rclb
scas
mov
dec
xor
enter
mov
outsb
pop
jecxz
les
loopne
arpl
or
notb
into
jge
mov
jg
inc
jl
inc
sbb
inc
ret
adc
scas
mov
mov
mov
cmp
adc
add
xor
insb
mov
minps
dec
xchg
sti
or
call
pop
jl
push
loopne
mov
and
jecxz
pop
sbb
arpl
lods
mov
popf
in
cmp
xor
mov
cmp
dec
sahf
jno
cld
xor
lret
mov
add
bound
push
std
or
pop
test
cmp
sbb
rorl
cltd
sbb
sub
out
xchg
ret
jo
xor
add
jge
das
xchg
aaa
xchg
mov
ss
cli
cmp
sbb
jecxz
sub
sbb
out
pop
inc
xchg
sti
inc
xor
clc
adc
cmpsl
dec
out
mov
in
fisubl
rorb
cmp
movsb
cmc
pop
mov
inc
int3
lock
lds
test
xor
arpl
mov
js
cmp
or
in
jb
and
mov
inc
in
int3
js
sbb
das
xor
hlt
test
or
test
adc
cmp
lock
fmul
sub
sti
mov
jb
call
pop
mov
mov
sbb
cwtl
mov
mov
pusha
cmpsl
int
ljmp
cld
mov
cmc
pusha
jo
test
out
and
pop
lds
fcmovne
out
push
lret
scas
xchg
cmp
sbb
loopne
push
mov
arpl
ret
stos
pop
pop
xchg
rorl
cmpsl
dec
push
jmp
lret
dec
xchg
xchg
inc
nop
lds
popa
fldl
cmpsl
pop
sub
mov
adc
imul
aaa
movsb
push
aas
mov
pop
sbb
mov
shlb
pop
sub
inc
fcoms
cwtl
pop
mov
adc
inc
daa
jg
in
loop
pushf
int
xlat
out
ret
add
sub
fs
xchg
inc
mov
mov
movsb
xchg
xchg
jo
cli
and
mov
mov
and
adc
pop
stos
mov
sbb
push
mov
lds
and
leave
mov
xor
push
dec
or
cmc
dec
xor
cmp
fdivrs
inc
push
mov
push
mov
cmpl
mov
jo
sbb
outsl
int3
jmp
sub
repnz
xchg
or
and
iret
in
test
pop
in
stc
xlat
lods
dec
jle
cmp
sbb
lahf
ss
add
insb
addr16
scas
scas
insb
inc
push
repnz
hlt
xor
fdivrp
imul
jp
sbb
xchg
cmp
lahf
cmpsb
clc
sbb
push
inc
inc
je
dec
testl
popf
xlat
rcr
push
repnz
ficompl
push
xchg
mov
xchg
inc
xchg
outsl
cld
add
popa
xorl
cld
push
jno
aaa
add
push
mov
sub
mov
sahf
adc
pop
pop
jns
ret
fstpl
arpl
inc
and
pop
jnp
jecxz
xchg
scas
ja
outsl
fldcw
cld
fdiv
pop
mov
push
sub
and
fidivrl
jp
inc
iret
xor
mov
and
mov
lea
xor
out
shlb
inc
xlat
adc
fnstcw
icebp
in
das
enter
adc
fmuls
jecxz
sahf
xchg
cld
push
fisttpl
xchg
add
dec
aad
jp
fistpll
mov
pusha
jmp
mov
out
push
mov
cmp
jp
rorl
push
mov
ficomps
mov
adc
jecxz
inc
add
mov
hlt
cmp
or
movsb
lret
mov
ds
xor
fisttpl
xchg
or
dec
imul
xchg
aam
int
adc
jmp
mov
out
sbb
repz
mov
jbe
dec
jecxz
rcll
jmp
es
pop
lret
pop
das
fimuls
jno
aad
inc
jp
lret
mov
orb
sub
insl
xchg
pop
pop
pop
cltd
mov
dec
jns
mov
or
xor
push
mov
jl
push
jle
sub
test
and
out
leave
dec
mov
in
lock
rorb
or
pop
int3
mov
push
aad
aaa
sahf
daa
pusha
add
lds
push
xchg
fwait
lds
stc
or
cmp
in
or
mov
lret
and
cli
and
jne
mov
inc
xchg
pop
jb
std
and
clc
pop
pusha
jno
jo
mov
push
mov
cmp
or
scas
mov
cld
dec
or
ja
push
mov
ret
xchg
ror
inc
daa
cmp
divb
cmp
setle
imul
push
aas
adc
add
dec
pop
pop
push
push
in
ficomps
out
int3
jp
rcrb
cmp
mov
arpl
rclb
into
lock
loope
cmp
sbb
lret
sbb
out
lock
sarl
stos
jno
jecxz
data16
and
leave
leave
mov
dec
jne
test
stos
and
ss
push
negb
out
cmp
pop
jne
test
dec
and
pop
dec
push
xor
jecxz
sub
cmpsl
scas
dec
test
xchg
xchg
test
inc
ret
xor
mov
mov
movsb
fildll
test
das
and
scas
imul
cwtl
push
sub
stos
inc
inc
xor
cmp
pop
mov
sarb
mov
jp
daa
and
xor
and
jns
imulb
lods
sbb
xor
daa
shl
mov
dec
adc
addl
inc
lods
ret
adc
add
fsubs
in
mov
sarb
xchg
mov
sub
push
notl
enter
push
inc
imul
addr16
and
add
and
sbb
sbbl
cmp
lods
int3
push
dec
cltd
mov
pusha
cmp
loope
push
jmp
inc
gs
mov
xchg
popl
xchg
lods
xor
pop
dec
sbbb
dec
dec
clc
movl
adc
adc
adc
ret
add
jne
xor
and
dec
movsb
flds
sbb
mov
mov
adc
xchg
jae
xor
lods
insl
xor
sbb
fstps
push
movsb
sar
je
mov
leave
push
or
ds
mov
pop
loop
outsl
lea
jg
cmp
adc
dec
mov
mov
aas
push
xchg
pushf
in
mov
scas
push
jbe
arpl
fimuls
push
dec
int3
sbb
xor
add
or
ficoml
push
jae
int
adc
pop
push
in
insb
cmpsw
pop
pop
or
scas
jo
sub
add
pushf
or
out
mov
repz
adc
in
ss
push
test
dec
imul
bound
sub
test
mov
or
jae
push
lahf
add
xchg
sbb
cmp
sbb
test
push
mov
test
dec
sub
stos
pop
cmp
jnp
jecxz
movsl
cwtl
movsl
cmp
inc
subl
ret
cmp
dec
jb
add
dec
inc
mull
sub
inc
pusha
xchg
fidivrs
and
lods
and
sub
aaa
nop
int3
push
out
push
outsl
jne
or
in
int
lcall
pop
cltd
jb
dec
arpl
fbld
jae
je
jne
push
inc
adc
dec
out
cmp
in
es
mov
push
test
cli
sub
add
mul
xor
or
jmp
mov
fnstenv
loope
mov
xchg
in
push
adc
mov
ljmp
mov
mov
lea
xchg
leave
cmpsl
pop
inc
out
sbb
pop
aam
sub
lea
dec
xchg
sbb
jns
cmp
pop
rcr
std
je
mov
movsl
adc
cmp
iret
sub
cmp
pop
pop
pop
aad
jge
in
add
cld
push
cld
cmp
pusha
fwait
cmp
cmpsl
push
sub
aam
push
repnz
lock
cmp
inc
enter
cmp
in
push
or
add
rolb
ja
add
ja
inc
push
push
cmpsb
add
adc
mov
loop
lock
and
adcl
stos
inc
sahf
xchg
bound
insb
mov
sahf
pop
pop
pop
adc
leave
mov
push
pop
cmp
cli
lods
andb
cld
jo
loope
xchg
push
addr16
sbb
test
mov
js
jmp
mov
push
xchg
ds
sub
mov
in
in
mov
jno
in
jne
mov
fidivrs
cs
in
push
mov
jecxz
xchg
ficomps
cmpsl
or
dec
cwtl
mov
je
pusha
ret
push
mov
xor
add
xor
dec
jg
fdivrl
cmpsb
hlt
fisubl
cltd
mov
int3
ss
fnstsw
pop
sub
call
adc
cmp
notb
leave
or
dec
clc
shr
loope
adc
cmc
inc
test
ret
imul
mov
fcmove
cmp
jb
jmp
scas
xchg
lea
mov
cmpl
filds
outsb
lret
imul
fldt
scas
push
pop
out
stos
cmp
in
adc
and
xchg
cmp
out
insl
sub
push
fcmovne
pop
ja
out
xchg
pusha
aas
xchg
mov
dec
lods
sub
jb
bnd
sub
add
enter
in
add
add
ret
or
cmovb
lods
pop
in
lds
sbb
aam
push
pushl
hlt
xor
cmc
lods
fwait
mov
or
sti
data16
icebp
mov
mov
and
lds
nop
fidivs
mov
xchg
lods
mov
and
dec
lret
fcomi
cmp
adc
push
fisubrs
insb
xchg
call
fimull
popf
inc
cmpsl
scas
cmp
xchg
xchg
stc
pusha
mov
out
xor
mov
cmp
pushf
test
push
mov
jg
mov
std
rcl
push
sbb
test
push
xor
daa
sub
loope
dec
int
xor
jmp
or
addr16
in
icebp
icebp
cmp
cmp
ljmp
insl
adc
inc
std
jae
xchg
cmpl
and
push
xor
push
rclb
pop
hlt
test
pop
push
icebp
fdivrp
dec
dec
fcmovne
sub
and
aad
pop
pop
fnstenv
and
pushf
test
and
cmp
inc
icebp
mov
xchg
fwait
inc
cwtl
stos
jbe
out
out
mov
aad
adc
mov
and
jl
sbb
dec
test
adc
or
add
addr16
in
mov
add
ret
aaa
push
out
add
out
pop
cwtl
sti
pop
and
xchg
add
adc
push
imul
ja
mov
mov
in
and
cmpsl
lea
je
gs
mov
outsb
repz
lcall
jae
daa
sub
sub
arpl
iret
jg
lcall
fcom
push
in
pop
sbb
je
movsl
out
mov
dec
and
sub
sbb
sub
pop
xchg
mov
pushf
push
jge
loopne
sub
popf
jecxz
mov
std
cwtl
and
push
cli
sub
das
pusha
push
and
or
adc
scas
cltd
add
inc
pusha
imul
xlat
shlb
mov
clc
mov
in
sub
add
mov
icebp
sub
int3
mov
les
mov
sub
push
mov
mov
jnp
or
aaa
test
add
mov
cmpl
dec
divl
push
inc
aaa
decb
ljmp
mov
aaa
test
sub
and
stos
mov
out
mov
cmove
repnz
in
jmp
sbb
push
testb
fisttps
rcrl
out
or
mov
gs
imul
and
push
push
push
clc
jge
mov
jp
mov
dec
sbb
es
pop
push
fstpl
aaa
and
cwtl
and
jae
push
shlb
mov
sub
push
inc
and
push
repnz
jl
clc
daa
mov
inc
pop
push
xor
js
cltd
dec
xlat
adc
aaa
jg,pt
clc
scas
pop
les
and
xorb
gs
sub
incb
call
aam
xor
cmp
mov
mov
and
adcb
rorb
fnstcw
hlt
and
xor
push
stos
enter
js
and
int
addr16
dec
mov
or
lock
xchg
push
shr
pusha
dec
pop
sar
pop
add
adc
adc
lods
xchg
nop
dec
sahf
stos
mov
repz
gs
jmp
push
pop
iret
in
and
sbb
lret
mov
mov
pop
das
mov
lea
mov
out
push
or
xor
pop
filds
adc
cmp
xor
jnp
pop
dec
mov
scas
je
nop
nop
cmc
pop
xchg
mov
sarl
out
movsb
and
nop
pop
push
jo
jne
in
neg
fxch
aam
xor
enter
in
adc
leave
jo
cmpsl
jno
ret
dec
fstl
sbb
inc
adc
push
in
push
xor
and
imul
ss
pop
dec
xchg
push
loope
scas
repz
add
lret
dec
insb
push
lds
lret
sbb
stos
in
push
xchg
jecxz
in
push
test
repnz
sub
xchg
inc
fildll
and
jge
dec
aam
mov
bound
scas
shlb
push
xlat
call
add
fldl2e
outsb
cmp
jge
fcom
popf
jb
int3
cwtl
fiaddl
push
sbb
jle
pop
cmp
pusha
popa
inc
xchg
push
lahf
mov
ljmp
mov
or
js
into
add
xchg
sti
fdivl
stos
call
pop
pushf
xchg
sub
inc
sub
xor
pop
jle
shlb
jbe
sub
lcall
inc
xchg
outsl
lret
leave
xor
not
lret
dec
fld
iret
push
dec
int
aas
stc
sahf
lcall
push
xor
shrl
pusha
sbb
imul
add
cmp
and
sbb
lds
nop
xor
fdivrs
ret
sahf
icebp
hlt
pop
aam
cli
in
test
cmp
rcr
es
xor
mov
loopne
lock
jbe
ficompl
jecxz
pop
xchg
pusha
insl
in
adc
adc
test
lahf
lock
xor
enter
add
mov
ss
call
test
mov
clc
sbb
mov
mov
pextrw
pop
add
push
in
mov
push
fiaddl
xor
mov
sub
mov
fldenv
jl
sub
pop
mov
lahf
pop
jbe
sub
lret
mov
jns
add
sbb
push
xor
lock
sub
popf
jnp
jecxz
jns
sbb
mov
into
sub
mov
and
or
pop
adc
jo
mov
cmp
call
pavgw
loop
xchg
out
fadds
push
fldcw
push
rorb
stc
negl
sahf
fisttpl
mov
xchg
call
sub
inc
xchg
iret
ret
and
lods
clc
sahf
xchg
cmpl
out
push
test
loopne
push
sbbl
adc
pushf
das
lock
arpl
cltd
jle
rcrb
inc
scas
push
repz
pop
pop
pop
iret
push
btr
dec
pop
aas
test
xchg
imul
inc
mov
adc
ret
sub
cwtl
jg
inc
xchg
stos
sub
lods
adc
cwtl
rorl
mov
movsl
mov
pop
das
loope
mov
inc
cs
fdivrs
sub
cwtl
mov
add
jb
aaa
sub
inc
xchg
mov
push
xchg
mov
and
loope
ss
test
pusha
bound
aad
xlat
and
jg
mov
fldcw
adc
fistps
movl
lds
ror
fidivrl
push
stos
dec
inc
xchg
out
loop
push
push
subb
cmp
mov
in
inc
es
xor
push
adc
stc
fistpll
mov
sbb
xor
mov
mov
push
sub
lods
push
leave
orb
xchg
lods
and
sub
cli
and
adc
ds
push
inc
test
push
loope
jbe
adc
push
clc
test
scas
xchg
lcall
sti
lahf
icebp
repnz
jnp
int
jno
xchg
cmp
mov
in
dec
cld
icebp
in
pop
inc
fcomp
push
add
cld
test
ss
push
in
je
shll
popa
in
imul
movsb
rcrb
shll
ret
outsb
mov
sbb
jle
adc
adc
or
fcoml
adc
push
ljmp
scas
pop
aaa
push
outsb
mov
push
jle
inc
andl
xchg
cmp
into
jp
xor
xorb
or
jne
fbld
subl
pop
sub
outsb
aaa
loopne
mov
aaa
mov
iret
fsubr
das
cld
fstpl
pop
push
clc
mov
jle
or
xlat
adc
pop
hlt
and
bnd
dec
jno
negb
sbbb
int
dec
mov
outsb
jno
ror
shl
into
or
loop
int3
lock
xor
and
cmp
or
fbstp
subb
or
xchg
call
pop
mov
mov
lcall
push
sbb
adc
hlt
adc
into
lods
mov
pop
mov
aaa
ja
in
outsb
lods
and
cmp
scas
cwtl
cs
outsb
jae
mov
mov
jae
cmp
push
cmc
lods
pop
mov
std
enter
mov
out
dec
mov
push
xchg
adc
cmp
mov
shlb
xchg
push
mov
lret
clc
aas
jl
rorb
sub
jae
inc
clc
push
leave
js
dec
cmpl
push
cmpb
jmp
mov
pusha
inc
xchg
and
dec
scas
add
mov
imul
fisttpll
xor
inc
or
clc
int
popf
lods
fs
sbb
adc
mov
sbb
mov
pmaddwd
pop
fistl
push
or
lahf
mov
popf
mov
and
mov
cmp
and
lret
out
pop
gs
pop
pop
std
inc
inc
xlat
xchg
ficoms
sub
pop
js
jb
xchg
pop
push
filds
cmp
cltd
icebp
lcall
rcll
das
insb
adc
test
sub
lcall
push
inc
push
mov
sbb
popa
arpl
xor
cld
push
pop
cmc
and
mov
push
cmp
pop
rep
or
gs
mov
loope
pop
add
jnp
incl
xchg
mov
dec
loop
sbbl
push
jbe
lea
dec
in
mov
cltd
mov
sub
lret
rcr
add
push
adcb
imul
iret
lcall
mov
push
popf
and
cmp
and
and
pop
add
push
jl
clc
pop
cmpsb
loopne
lret
mov
or
inc
cltd
jecxz
lret
aad
enter
xchg
cs
dec
sub
pop
imul
movsl
sbb
xlat
push
jae
imull
inc
aam
les
loop
ds
cmp
and
shrb
jno
push
pop
sub
bound
int
std
rcrl
jmp
stc
in
mov
pop
aad
hlt
sbb
ss
or
dec
mov
shlb
push
and
fists
pop
out
js
mov
fldl
push
cli
or
push
loop
sbb
arpl
and
movlhps
hlt
mov
push
push
loop
js
sbb
stos
cmp
mov
ja
pop
fadds
mov
lcall
into
sub
xchg
out
add
mov
push
out
push
outsb
adc
dec
inc
out
dec
das
stos
rclb
mov
lret
or
decl
push
mov
mov
mov
sbbb
xor
mov
cmp
dec
dec
push
jbe
sbb
test
or
pop
addb
sbb
fs
xchg
loope
xchg
jbe
lret
mov
mov
jnp
push
push
rcrl
mov
jbe
mov
dec
cmp
data16
in
sbb
shlb
mov
ljmp
gs
dec
test
sbb
mov
mov
inc
jg
cmpsl
jns
mov
pop
mov
mov
sbb
mov
xor
les
add
inc
leave
mov
xchg
subb
addr16
xchg
in
xchg
dec
or
xor
push
sbb
pop
insl
cwtl
lock
imul
movsl
mov
sbb
lret
clc
into
aas
mov
loopne
jmp
fnstcw
or
mov
int3
js,pt
jns
mov
and
mov
sub
in
subb
add
pop
cmp
push
negb
jg
movsl
add
icebp
push
lods
pop
dec
xor
jmp
push
test
mov
dec
aas
subb
fmulp
add
test
iret
add
sub
sbb
in
outsl
mov
or
push
add
out
push
out
inc
and
inc
jnp
pop
jge
jns
and
loope
cmp
nop
dec
xchg
scas
mov
enter
addb
ljmp
add
in
lods
subb
pop
mov
sub
mov
test
cmp
fwait
sub
aam
sbb
cmpsl
bound
sahf
adc
sti
sti
rep
lahf
add
dec
mov
adc
and
adc
add
arpl
mov
in
cmp
push
xchg
cmp
jp
js
fiadds
ljmp
ljmp
std
mov
or
ja
mov
sahf
xlat
test
rclb
jmp
leave
out
dec
cmc
insl
movsb
lret
sub
pusha
push
pop
aam
jbe
jno
pushf
ret
lock
sub
xlat
out
or
xchg
in
mov
ds
out
jb
rcrl
adc
arpl
jns
jl
sub
popf
lods
jl
inc
test
stc
stos
sub
jmp
adc
inc
cmp
pop
fcomp
notb
inc
insl
nop
leave
lret
movsb
repnz
mov
xlat
ds
xchg
jno
inc
mov
test
jns
dec
mov
and
pop
andb
add
add
outsl
sbb
add
push
fists
cmpb
mov
dec
mov
loop
lods
movsl
dec
adcb
adc
clc
lret
lods
sti
fidivs
add
out
lds
ljmp
mov
shlb
mov
add
lcall
je
cli
add
dec
sbb
pop
mov
mov
xor
call
mull
inc
adc
leave
push
and
je
dec
scas
imul
nop
and
stc
je
mov
stos
and
in
lret
pop
shll
sbb
push
push
movsb
sub
dec
push
push
inc
arpl
ss
pop
movsl
xchg
stc
dec
add
sbb
ret
xor
push
and
fisttpll
cmp
dec
sbb
loope
jno
add
inc
ljmp
add
xchg
ret
xchg
fs
mov
ss
pop
mov
pop
and
enter
cld
test
das
pop
sub
dec
lods
rorl
mov
mov
das
sub
cmc
call
movsb
cmc
or
jne
ret
pop
push
cltd
nop
fmuls
mov
push
fstpt
xchg
loopne
cs
sub
mov
repz
ss
movsb
testb
out
fsubl
call
xchg
std
pusha
aad
adc
pusha
mov
fnstcw
mov
arpl
xchg
or
movsl
sbb
jge
add
cmp
cltd
stc
andl
or
cmp
fsubrs
imul
cmpsl
ds
js
shlb
jne
mov
icebp
push
sub
int3
aaa
pop
mov
mov
mov
dec
cmc
add
lods
pop
in
push
inc
into
test
xchg
sub
xchg
mov
sub
cmc
mov
xchg
jne
xor
and
ljmp
repnz
fcoms
dec
jecxz
leave
adcb
fcomp
cltd
mov
cmp
mov
aad
mulps
add
add
pop
and
lahf
jmp
fisttpl
push
pop
add
or
fstl
rcrl
cs
sbb
pop
push
jge
jge
jbe
jg
adc
mov
jl
or
imul
add
movsl
adc
ss
mov
es
xor
fs
lcall
sbb
fcoms
inc
xchg
cli
mul
xchg
pop
xor
dec
xchg
pusha
sbb
ret
popa
add
out
and
xor
add
rcll
xchg
mov
dec
inc
imul
and
arpl
adcb
pop
lret
xchg
mov
out
idivl
push
popf
xchg
and
xchg
adc
rorl
cmp
adc
jno
inc
jns
std
cmp
test
movups
in
pop
les
jbe
push
mov
inc
cmp
stc
scas
xchg
aad
sti
xchg
imul
leave
cltd
xchg
es
or
pop
daa
cmp
sbb
mov
ficoms
mov
scas
xor
pop
out
add
cltd
in
jp
and
push
aam
mov
fcmovbe
push
mov
and
rcl
mov
adc
scas
hlt
push
aas
mov
or
mov
push
inc
push
lods
jo
fmuls
jbe
mov
add
fmuls
int3
inc
cmp
cmpl
jns
jmp
imul
cmc
loop
in
jns
and
pop
mov
cmp
inc
ja
mov
aas
in
push
xor
mov
jb
mov
mov
dec
or
test
mov
fldt
mov
js
mov
cmp
lea
sub
pop
cmpsl
in
stos
or
mov
lods
sbb
icebp
repz
xorl
das
fdivrp
shrb
add
push
pop
lds
sbb
or
mov
cwtl
sbb
andl
dec
mov
sbb
xor
jecxz
cmp
cmp
mov
aas
jecxz
mov
xchg
jns
pop
push
mov
pop
jmp
mov
stos
pop
mov
in
daa
add
xor
add
push
mov
mov
in
loopne
das
divl
mov
add
mov
dec
int3
jmp
sbb
xchg
ret
add
js
lock
daa
clc
or
test
shlb
in
adc
or
and
sbbl
or
xchg
cmpl
jae
pop
fcomip
shr
jmp
mov
xchg
and
push
push
cmpsl
nop
sub
test
xchg
imul
gs
aad
push
inc
pushf
jmp
cmp
in
xchg
cwtl
sbb
test
jp
stc
jge
or
iret
je
push
xchg
and
or
scas
adc
and
std
movsb
xlat
jo
in
dec
stos
and
aad
mov
jecxz
adc
fnstenv
mov
iret
ficoms
scas
dec
sahf
lret
mov
xor
add
push
mov
paddsb
or
push
mov
add
inc
adc
jbe
xor
loopne
cmp
stc
sbb
int
cmp
push
rorl
movsb
push
mov
outsb
lret
mov
lcall
pop
ja
mov
sub
push
das
inc
hlt
xor
add
mul
in
imul
dec
test
gs
xor
jne
ret
xor
push
mov
pop
mov
shr
xor
push
lods
dec
inc
sub
mov
movsl
jae
adc
dec
test
or
je
inc
mov
adc
dec
sti
pop
fs
out
outsl
out
out
js
cmp
adc
ds
mov
sti
test
imul
cmpsl
repnz
in
sbb
pop
cmp
movsl
xor
in
jne
and
push
or
movsl
jge
popa
cltd
shl
test
and
shl
pop
sub
stc
cmp
jne
inc
not
sahf
imul
mov
push
das
insl
test
jnp
xor
xchg
scas
enter
cwtl
lahf
fists
jecxz
movsb
jae
sbb
std
dec
dec
ftst
in
scas
xchg
add
inc
scas
add
xchg
ds
adc
fistpl
outsl
out
loope
and
inc
push
inc
shl
in
int
cltd
jbe
fmul
lods
daa
aaa
jnp
fs
and
adc
mov
mov
cmp
jle
mov
subl
insl
ret
fisubrl
sbb
fisubs
daa
or
sub
ljmp
mov
mov
ss
and
xor
cmp
sbb
jae
out
sbbb
ds
pusha
mov
mov
icebp
adc
ss
push
gs
inc
or
aas
lock
pop
lds
push
pop
push
lock
call
add
cmp
in
into
cwtl
jae
cmp
loopne
das
sbb
repnz
cmp
aaa
pop
lea
shr
mov
pop
fisubrs
add
push
hlt
jle
aam
jmp
testl
jg
ljmp
sbb
mov
adc
and
sbb
out
mov
pop
dec
std
xchg
mov
call
lret
xchg
or
and
clc
cmc
cs
mov
pop
addb
inc
jno
dec
outsl
jno
or
inc
xchg
fisttpll
mov
faddl
gs
aas
jno
cltd
sbb
push
std
and
and
lods
inc
lea
out
imulb
fwait
clc
pop
sbb
sbb
sub
add
out
sub
loop
int3
or
inc
xor
ret
xlat
jne
daa
sbb
push
bound
stos
mov
rcll
sbb
sbb
iret
push
outsl
insl
xchg
mov
mov
push
rclb
lea
dec
das
mov
xchg
dec
mov
xchg
sub
and
mov
dec
movsl
mov
jnp
and
and
je
xor
test
scas
dec
xorl
scas
and
push
mov
cmp
mov
lea
cwtl
and
and
xor
sub
dec
imul
cmpsl
js
popf
sub
sahf
add
addr16
hlt
xchg
mov
and
xchg
mov
xchg
mov
loopne
pop
jae
adc
mov
add
test
sbb
or
cmovo
add
pop
mov
xchg
rcll
mov
xor
repnz
insb
add
scas
movsl
scas
stc
addr16
mov
xlat
in
pop
xchg
xchg
jo
test
jae
jne
data16
pop
inc
xchg
ficoms
adc
xchg
fstps
pop
aaa
imul
loopne
imul
inc
jo
add
mov
ljmp
lods
iret
lret
mov
xchg
das
shr
in
mov
leave
ss
bound
cmp
pushf
iret
adc
mov
inc
cwtl
pop
mov
lock
jbe
jae
outsl
mov
shr
fdivl
loop
adc
xchg
jns
adc
mov
lock
push
popa
mov
lods
mov
cmp
mov
ret
shrb
imul
cmp
sti
or
testl
in
loop
addb
cmp
fists
jb
mov
adc
cld
sub
lock
je
das
out
imul
mov
pop
leave
cld
pop
sbb
aaa
imul
in
fisubs
xorb
lods
shl
mov
mov
cmp
pop
xchg
push
sarb
cmc
insl
imul
in
test
dec
lods
cs
mov
mov
sar
imul
jmp
andl
and
mov
lret
lods
jecxz
ds
dec
roll
cmp
inc
and
cmc
or
add
mov
ss
xor
dec
negb
push
or
std
enter
cmp
inc
aas
jmp
pop
adc
xchg
push
cmovb
inc
iret
or
push
pusha
jbe
fcomps
push
pop
negl
pop
cmp
les
fdivs
bound
add
into
sarl
call
add
ja
test
fsubrs
or
jecxz
mov
ds
sub
adc
or
gs
adc
mov
mov
test
out
lret
jno
nop
les
pop
pushf
mov
pop
inc
dec
movsl
jge
outsl
sbb
inc
dec
sub
rcr
leave
pop
fisubl
lds
call
adc
and
imul
cmp
xchg
sbb
pop
ss
ss
adc
xor
pop
lods
mov
imul
repz
cmp
sub
fildll
jle
mov
xorl
and
sahf
scas
stos
sti
out
adc
xlat
ja
and
and
add
jmp
out
ljmp
xor
xchg
nop
cld
test
mov
or
stos
sbb
sahf
in
mov
ja
gs
rcr
mov
mov
inc
mov
cmp
adc
ficoms
inc
mov
sub
test
sti
mov
mov
sbb
push
mov
cwtl
push
push
jnp
js
jo
ja
jecxz
in
and
sbb
jle
in
xor
mov
xchg
adc
sub
cmp
xchg
test
lds
cwtl
xchg
dec
popl
pop
adc
enter
fucomip
mov
sub
mov
scas
jecxz
jns
push
enter
add
sbb
loopne
dec
dec
and
or
and
mov
jge
scas
sahf
mov
cltd
outsb
jecxz
nop
scas
int
cmp
mov
jae
shrl
shl
mov
call
jbe
scas
adc
adc
shrb
mov
xchg
dec
faddl
sbbl
lret
sbb
movsl
jne
aas
sbb
in
ret
scas
divb
fs
xchg
popa
daa
aam
jg
sub
jle
mov
fiaddl
push
pop
lcall
push
popf
repz
adc
xchg
mov
shl
outsb
jge
mov
mov
jl
mov
mov
leave
pushf
int
pop
xor
mov
int
adc
inc
push
mov
cmp
cld
imul
mov
je
xor
cmpsb
pop
pop
jecxz
scas
or
test
ja
popa
testl
inc
ret
cli
ljmp
xchg
addr16
out
mov
pop
sub
divb
mov
out
jb
mov
cmp
sub
add
sub
cmc
pop
into
enter
mov
inc
jnp
mov
std
push
int
sub
lods
push
imul
sbb
scas
push
and
xchg
or
xorl
xor
lods
fs
push
pop
push
cmc
aas
in
jb
add
jbe
leave
fldlg2
mov
js
aam
lahf
sbb
loope
jp
outsb
aas
pop
loope
lahf
adc
mov
movsl
andl
push
sti
or
jl
or
sbb
mov
shr
sbb
mov
adc
stos
pop
aas
in
xor
adc
or
lea
adcl
fnstcw
in
test
cmp
mov
insb
dec
sub
and
mov
testl
pop
pop
add
sbb
lahf
out
adcl
les
xor
adc
push
fs
push
jnp
or
sub
out
dec
pop
pop
lods
cli
sub
xchg
push
fwait
adcl
out
into
inc
xorb
and
inc
xchg
imul
push
aad
inc
mov
cli
ror
mov
xchg
sbb
cltd
aam
outsb
aam
adc
fistl
push
inc
push
pop
sbb
xorl
push
push
stc
in
dec
test
mov
sub
hlt
xchg
pop
xchg
jg
int3
pushf
push
int
inc
popf
cli
fsubl
add
fsub
mull
add
pop
fstl
mov
add
jle
push
addl
ret
cmp
sbb
cltd
enter
inc
cmp
jp
jmp
lods
lret
add
out
cmp
bound
into
gs
fwait
sbb
pushf
pop
pop
fs
data16
bound
xchg
sub
ds
cmp
mov
mov
jae
jp
pop
jmp
pop
fwait
mov
sub
daa
hlt
daa
lahf
call
xchg
pop
insb
out
adc
mov
mov
sti
mov
loop
pop
jno
data16
mov
in
sahf
cmpsl
lds
iret
int3
call
push
jle
adc
or
insl
outsb
sarl
out
jns
mov
xor
mov
in
or
mov
sub
addr16
data16
es
imulb
jb
fbld
mov
repnz
mov
jne
and
fisubrs
jge
push
jg
in
push
xor
mov
stc
in
nop
iret
sub
dec
or
mov
lods
push
hlt
or
outsb
mov
dec
in
push
fs
das
pop
ss
ss
insb
sti
addb
inc
mov
push
cli
test
xchg
mov
stc
sub
push
sub
push
fwait
push
and
xchg
cmp
jg
sbb
xchg
cmp
push
pop
lahf
cmpl
or
divl
and
xchg
arpl
push
fdivrs
insb
ret
lds
mov
inc
xlat
enter
sahf
push
xchg
out
xlat
aad
push
and
in
test
scas
xor
xor
pop
shll
fcomps
mov
out
xchg
mov
sub
orb
lods
stos
inc
xchg
popa
les
push
dec
pushf
out
xchg
inc
mov
pop
imul
sub
ret
push
mov
clc
mov
outsl
dec
sub
or
cli
ficoms
idivb
movsb
testl
pop
int3
test
cmpsl
xor
dec
movsb
xchg
push
mov
dec
xchg
inc
into
add
imull
int3
dec
xor
in
add
dec
data16
shrb
mov
xchg
lcall
xor
sub
jbe
adc
push
mov
sub
pop
push
fsincos
xchg
cmp
xor
sub
bnd
mov
in
push
lret
loop
pop
fimuls
push
mov
cmpb
cmp
xchg
ds
push
push
mov
and
hlt
inc
add
out
push
inc
lahf
sub
fdivs
rorl
clc
xor
cmp
ficomps
repnz
aad
nop
jae
mov
ret
out
or
dec
add
shrb
cli
push
inc
lock
and
lods
cs
push
lds
rcl
jo
fwait
js
jno
mov
out
in
sarb
mov
mov
sbb
or
cmc
xchg
add
jp
and
push
fiaddl
mov
sub
adc
mov
mov
cwtl
cmp
je
sti
fdivrl
mov
push
jb
int3
xor
in
hlt
add
mov
scas
out
mov
jle
add
pushf
into
jle
push
mov
dec
test
testl
and
xchg
std
xchg
push
stos
cmpsl
out
sbb
pop
adc
cmpsl
and
sbb
inc
jl
xchg
pop
inc
notb
icebp
call
mov
adcl
xacquire
pop
jp
or
pop
xchg
push
sub
out
or
push
adc
repz
out
mov
jbe
mov
cltd
mov
add
jmp
ror
push
add
testl
pop
shll
fistl
jg
orl
pop
mov
shlb
cs
ret
push
repnz
jmp
out
in
pusha
xchg
push
inc
mov
pop
adc
push
sub
cmpsl
mov
and
dec
gs
sub
sbbl
lea
imul
rcll
cmpsl
push
loopne
cmpsl
test
mov
mov
xor
xor
mul
mov
xor
xchg
icebp
in
and
stos
stos
xchg
std
int3
cmp
cltd
add
cmpb
pop
out
xor
push
jae
jle
push
js
push
inc
mov
xchg
sub
fimull
cvtps2pd
xor
sub
push
popa
add
xchg
fwait
ds
in
sub
fs
pop
sarl
cli
mov
xlat
lds
icebp
sahf
ja
pop
std
lea
or
bound
fimuls
lret
rclb
test
fwait
pop
enter
ret
ret
xor
mov
xor
cli
sub
xchg
inc
loope
mov
mov
test
mov
mov
lret
adc
mov
jge
addr16
cli
in
inc
cld
stos
or
stc
sbb
int
xchg
insl
sbb
cs
es
push
mov
and
test
popf
add
ss
jo
nop
xchg
inc
in
push
call
inc
orb
fadds
and
xchg
aas
cmp
adc
mov
and
addr16
nop
out
dec
cmp
ficoms
fs
add
movsl
scas
icebp
lds
xor
lahf
stc
mov
daa
loop
xchg
jg
int
jns
xchg
sub
outsb
xor
in
ret
rorl
lock
imulb
fwait
std
sti
loopne
movsl
mov
jno
fdivs
xchg
filds
inc
repz
lret
jecxz
shrb
xor
sub
xlat
bnd
inc
xchg
nop
xor
jp
nop
into
pop
push
outsb
nop
sub
add
jg
add
xlat
insl
inc
jp
arpl
jmp
in
and
fstpl
insl
repz
in
sbb
add
xor
stos
int
sbb
mov
int3
sbb
cmpsl
xorl
neg
sbb
and
push
adc
dec
adc
push
add
adc
mov
lahf
mov
icebp
sub
cmpsl
mov
mov
xchg
pop
bound
sbb
push
jbe
push
out
test
movsb
pop
dec
dec
in
mov
negl
pusha
es
push
orl
pop
add
shll
adc
fists
push
mov
jne
jns
sbb
outsb
imul
jge
inc
adc
sub
dec
cmc
sti
movsb
add
nop
xor
lods
mov
mov
ja
cmp
pop
stos
or
dec
flds
lock
lret
pop
movsl
pop
push
add
jno
push
insl
dec
aad
mov
adc
sub
xchg
rolb
rolb
cmp
or
mov
pop
and
adc
int
xchg
cltd
js
pop
outsb
cmp
mov
lret
ficomps
xchg
jp
iret
insl
lock
stos
loop
dec
jecxz
arpl
dec
and
outsb
in
xchg
popf
int3
int
mov
lods
scas
sbb
and
cmp
pusha
sbbb
fsubl
incl
add
cld
adc
and
xchg
or
and
jg
mov
scas
sbb
mov
lock
lahf
sbbl
mov
xorb
inc
xlat
cltd
cld
aam
push
inc
jnp
jbe
nop
int
lods
sub
outsl
adc
push
fistpll
leave
xchg
mov
movsl
jmp
jge
xor
xchg
bound
and
adc
fcmovnb
adc
add
mov
imul
pop
xor
xor
mov
push
add
pop
pop
push
or
adc
and
adc
enter
test
add
in
aam
dec
je
negl
add
mov
xor
inc
fimull
orb
xor
inc
decb
adc
pop
mov
mov
mov
inc
mov
sbb
jnp
mov
imul
sbb
les
fdiv
dec
out
sbb
mov
push
sub
cmc
xor
je
stos
lahf
push
jns
ret
fsts
or
pop
rclb
add
xchg
sbb
jl
mov
xchg
inc
jp
fcoml
ja
adc
fs
sub
in
popf
inc
sbbb
js
fidivrl
jecxz,pn
arpl
mul
shll
mov
outsl
dec
insb
or
ret
enter
lock
lcall
loope
xchg
test
push
aad
orb
fstpl
push
jno
mov
std
xchg
adc
std
outsl
mov
and
rorl
cld
jl
jne
ss
aaa
add
fbld
jg
xchg
inc
lahf
jbe
inc
xor
mov
add
jle
cmp
daa
lcall
push
xchg
push
fnsave
leave
cmp
enter
fs
repz
mov
add
aad
pop
jg
jns
stc
jge
xchg
in
pop
leave
imul
xchg
dec
in
leave
push
arpl
iret
or
in
sbb
adc
or
pushl
xchg
into
sub
ljmp
cwtl
push
out
sub
pop
pop
test
sbb
fstpt
pop
scas
data16
push
das
cmpsb
sbb
mov
dec
mov
daa
sti
pop
xchg
movsl
pushf
fcompl
mov
mov
lods
stos
lods
and
adc
xchg
lods
ss
adc
sbb
pop
fcomip
cld
jb
cmp
sahf
scas
sub
notb
arpl
dec
push
into
cli
subl
cli
aaa
out
sbb
stos
adc
das
shlb
cmp
sahf
xchg
mov
das
in
push
cs
add
arpl
rep
ficoms
aad
popa
aas
dec
push
xchg
icebp
jle
jl
or
sub
fmul
into
mov
pcmpgtw
inc
xchg
cmp
fisubs
push
or
fiadds
pop
fwait
xor
std
ljmp
es
in
std
stos
js
pop
xchg
inc
in
fildll
xchg
or
pop
out
dec
dec
push
shll
cmpsb
sahf
xchg
dec
in
pop
cmpsl
mov
dec
loopne
dec
xchg
dec
xchg
out
adc
rcrb
out
mov
or
dec
mov
fdivrs
inc
in
cmc
mov
adc
adc
in
daa
add
jns
cmp
mov
jo
sbb
push
cmc
ficoms
filds
movsb
shlb
jnp
push
mull
dec
aam
jo
cmp
xchg
add
dec
jae
sbb
push
repz
std
test
add
add
adc
xchg
int3
sbb
inc
mov
xchg
das
loope
js
mov
inc
mov
mov
out
fmul
flds
mov
cli
cltd
sub
jnp
mov
fdivl
or
add
and
mov
cmp
das
orb
fidivs
inc
icebp
pop
inc
out
sub
popa
push
mul
dec
cmpsl
int
lcall
fsubl
pop
inc
sub
std
inc
mov
cmp
xor
inc
outsl
pop
xor
stc
popa
cmp
jmp
fcmovnbe
and
or
ss
adc
and
mov
jg
push
in
jnp
dec
adc
pop
aam
lret
adc
data16
aas
dec
test
and
jecxz
adc
inc
int
sub
sar
aam
idivb
inc
pop
xchg
inc
inc
xchg
outsb
mov
adc
dec
mov
addr16
fisttps
sub
mov
cwtl
mov
imul
scas
jle
jns
pop
xor
mov
sti
cmpl
or
test
out
xchg
stos
fnsave
pop
inc
mov
repz
jae
neg
call
stc
fsubrl
push
mov
adc
and
dec
sub
ds
imul
insl
in
inc
lret
and
hlt
movsb
data16
lahf
out
push
push
mov
ret
cld
bound
dec
push
xchg
outsb
or
sub
cmp
mov
mov
pop
imul
sbb
fldt
icebp
jp
roll
sub
xchg
inc
adc
loope
iret
cs
out
inc
aas
mov
mov
add
xchg
mov
rcrb
pmuludq
aas
aad
sub
add
and
and
insl
ds
out
fmuls
push
test
dec
and
fadd
leave
lret
cmpsb
subb
popa
aas
sub
sbb
push
popa
and
shlb
fdecstp
xchg
cmp
xchg
mov
push
fisttpll
xor
in
outsb
cmp
pop
add
and
fcomip
or
pop
fwait
dec
inc
lret
pop
xor
mov
and
cmpsb
xchg
or
pop
in
lcall
push
scas
mov
xchg
lea
stos
test
ja
cmp
dec
sti
sbb
mov
sub
add
or
test
stos
inc
out
mov
testb
enter
popf
lret
lods
pop
cmpsl
dec
cs
or
mov
push
mov
fdivs
fisubrs
shl
adc
outsl
jg
xlat
lret
clc
xor
scas
pop
sahf
xor
int3
aaa
in
adc
xchg
lcall
pop
fstl
enter
movsb
mov
sub
ljmp
cmp
mov
pop
aaa
cmpsl
ljmp
stos
xor
sbb
adc
xchg
aad
gs
jmp
add
cli
clc
mov
push
push
mov
popf
leave
pop
incl
das
std
sarb
enter
repz
add
xchg
shlb
xor
nop
fwait
push
xlat
fstp
loopne
je
cld
fidivs
int3
add
mov
push
push
adc
mov
pusha
jl
ret
push
std
or
cmp
xchg
xor
arpl
mov
test
jb
sti
lods
sbb
push
push
iret
add
add
xor
mov
repz
loope
mov
pop
mov
dec
jmp
movsb
sub
xorb
xor
fidivrs
push
jns
stc
adc
cs
subb
std
xor
aaa
imul
mov
xchg
mov
es
loop
jns
leave
arpl
and
cltd
mov
xchg
cmpsb
fdiv
pop
push
dec
cmp
pop
inc
das
cmp
js
scas
or
lock
rorl
mov
push
mov
fucom
popa
pop
pop
mov
dec
imul
fwait
insb
lret
inc
mov
pop
out
jecxz
or
adc
sub
mov
and
push
fs
rol
lcall
inc
test
xchg
mov
dec
mov
pop
popa
lock
testb
add
jge
incl
jae
rolb
jb
pop
insb
pop
movsl
cmpsl
aad
pop
pop
in
sub
sbb
sbb
mov
int3
sub
add
stc
inc
jb
fsubr
hlt
push
movsb
pop
or
cmp
cs
mov
test
les
jns
pop
cmpsl
loop
sbbl
jnp
iret
lods
fisttps
icebp
add
sbb
mov
add
jge
les
dec
mov
jge
xchg
inc
and
js
outsb
jl
testl
jae
in
push
cmpsb
cmp
subl
aas
fsubp
fcmove
cwtl
ror
shll
andl
and
push
add
cmp
cmp
int3
sysenter
test
sarb
cwtl
inc
cmp
in
or
or
in
lcall
push
addr16
cmp
aas
insl
pop
push
nop
jne
insb
jno
icebp
das
jl
sub
adc
cmp
scas
mov
dec
or
push
loopne
mov
xchg
sahf
mov
movsl
nop
negb
nop
pop
popf
add
push
jb
aad
inc
sbb
sbb
sbb
das
pushf
and
clc
pop
or
loop
sub
roll
sbb
jle
fs
dec
adcb
pop
ret
loope
pop
repz
lcall
sub
sbb
inc
xor
subb
mov
xchg
mov
int3
fucomip
shlb
insl
repz
stos
dec
popa
mov
int
stos
dec
loope
and
stc
andl
mov
inc
jmp
loopne
rcll
push
pop
aad
and
insb
outsb
add
push
push
in
mov
ss
sub
inc
add
add
je
push
adc
ljmp
aaa
dec
test
pop
inc
leave
xchg
dec
int3
shll
pop
inc
into
sarl
mov
icebp
int
daa
inc
fisubrs
iret
fistps
loope
sub
sub
adc
mov
xchg
jmp
xchg
adc
test
cmp
mov
mov
xlat
adc
lods
push
test
aad
les
dec
add
cmp
ret
enter
add
push
outsl
mov
fdivl
push
imul
dec
das
mov
adc
enter
jo
pop
inc
negb
push
out
mov
fsubr
daa
sbb
les
add
in
push
pop
stc
and
sub
sub
roll
cli
bound
or
imul
inc
test
xchg
dec
test
pop
aad
repnz
push
je
sarl
sub
jnp
jge
cld
dec
int3
inc
enter
scas
mov
or
push
pop
push
fisubrl
sbb
repnz
push
mov
rcr
and
or
cltd
mov
cs
jg
jb
adc
cld
lea
ficomps
mov
dec
inc
xchg
popa
xor
pop
gs
add
bound
jb
fwait
inc
mov
test
ret
dec
leave
repnz
jl
or
loope
test
pop
mov
addl
repz
fiaddl
pusha
lds
mov
xorb
pop
or
push
fildll
rcll
inc
xchg
dec
dec
aad
jecxz
or
jmp
xchg
jbe
aam
xchg
out
mov
jp
or
imul
or
cltd
ficompl
dec
cmp
stos
testl
sbb
pop
jge
scas
and
mov
flds
rcl
repnz
ds
andb
mov
inc
call
leave
dec
sub
add
jno
rolb
std
mov
jo
and
or
sub
sub
add
adc
inc
sbb
aam
mov
pcmpeqw
in
sbb
test
inc
dec
fisttps
cmp
fimull
das
dec
adcl
popa
int3
cmp
cmp
arpl
sahf
loop
adc
xchg
movsb
pop
cmp
idiv
jle
movsb
and
daa
push
push
jnp
or
mov
cmp
pop
mov
mov
lea
aas
std
jecxz
mov
in
sub
add
stc
sub
cwtl
icebp
insl
repnz
stos
ljmp
repz
cmp
sti
mov
scas
cmp
cmp
in
cmpsb
dec
add
add
int3
mov
dec
push
jbe
xor
cltd
fnstsw
push
or
or
cltd
xor
mov
cmpsb
mov
ljmp
mov
fstp
adc
loope
mov
push
or
lret
cmp
xchg
insl
xchg
mov
mov
out
lea
bound
stc
outsl
cmp
mov
pushl
xor
xchg
mov
jp
sbb
mov
sarl
xor
pop
pop
pop
and
test
mov
icebp
dec
mov
push
mov
outsb
push
addr16
adc
into
dec
mov
lock
mov
xlat
addr16
mov
mov
dec
fdivs
lahf
push
mov
add
jp
pop
jnp
mov
and
inc
mov
pop
mov
sub
nop
add
dec
out
add
cltd
das
cltd
mov
adc
pop
xorb
mov
cmp
stc
aaa
scas
cmpsl
call
addr16
jne
adc
shll
cmp
mov
pop
pop
addb
int3
inc
aas
or
clc
dec
dec
pop
fnstenv
test
ds
repnz
pop
popa
pop
addl
sarl
mov
mov
test
xlat
inc
popa
adc
sub
and
aas
in
sahf
mov
jmp
pop
jne
dec
iret
sbb
or
cmp
lods
jno
sub
lcall
xchg
lds
rcrl
mov
jecxz
popf
dec
test
lods
dec
rclb
clc
ret
dec
jae
fistpl
jg
pop
xchg
pop
aam
xorb
ret
test
cmpsl
cmpsb
mov
xor
or
xor
aaa
cld
push
or
or
lods
mov
pop
flds
mov
loope
enter
dec
imul
je
imul
lsl
imulb
loop
andb
adc
xchg
mov
das
or
out
pop
enter
loop
es
imulb
orl
addr16
test
dec
iret
sub
sti
loopne
mov
aas
mov
jbe
mov
ds
arpl
xor
and
fldt
filds
push
hlt
mov
dec
out
loope
sarb
pop
arpl
mov
punpcklwd
das
push
inc
and
aam
mov
lahf
ja
push
jp
and
mov
add
xorl
fmull
jns
movsl
mov
adc
ror
lcall
sub
cmp
enter
data16
pop
arpl
or
cld
imull
bound
out
lods
xchg
sbb
add
sarb
lret
daa
sub
cwtl
inc
xor
ficoms
pop
dec
cld
dec
in
out
int3
push
ffreep
xchg
aas
int
xchg
imul
push
inc
in
mov
movsl
icebp
popa
cmp
ljmp
cs
dec
sahf
xorb
pop
jo
sub
and
inc
dec
mov
pop
push
cmp
inc
jae
rorb
or
inc
test
push
push
dec
jne
sbb
xor
dec
jo
adcb
xchg
sbb
push
out
pop
adc
je
dec
jge
shlb
sbb
out
mov
cmpl
repnz
pop
cmp
sahf
add
shlb
push
mov
cmpxchg
push
cmp
sahf
repz
and
int3
shrl
pop
adc
xchg
outsb
aam
xor
push
jb
xor
dec
push
fcompl
sub
jne
pop
xor
ret
jecxz
imul
sbb
sub
adc
out
loopne
and
cmp
jnp
das
arpl
mov
pop
adc
mov
pop
dec
mov
xor
mov
push
jbe
popl
loop
imul
cmc
pop
test
mov
xchg
insb
mov
add
jno
icebp
mov
jg
clc
jne
xchg
xchg
dec
add
cmp
popf
ja
dec
cmpsl
shlb
mov
mov
push
test
addr16
mov
in
loopew
lret
mov
sbb
divb
or
adc
add
jae
loop
fst
push
stc
pop
pushf
addl
jle
scas
repz
out
xor
and
jmp
je
adc
fldl
sahf
or
xchg
inc
dec
cmp
xor
scas
into
aaa
stos
push
addr16
mov
xor
xchg
jo
inc
outsl
inc
in
push
pcmpgtw
cltd
inc
xchg
loope
fsts
aaa
rcll
in
push
mov
call
inc
jb
stos
sbb
jno
adc
mov
inc
xor
sub
mov
fnstsw
pop
aam
shll
jg
cli
int
mov
icebp
movsb
mov
ja
dec
inc
insb
popf
outsb
aaa
dec
ss
sub
mov
or
repz
jne
sub
mov
cli
inc
dec
out
js
cmp
sbb
xor
sbb
adc
inc
icebp
mov
dec
mov
mov
dec
mov
aam
mov
cmc
out
lcall
xchg
aas
repz
aad
sub
outsl
adc
dec
sti
push
stos
add
xchg
push
pop
and
leave
stc
sbb
mov
lds
loop
cmpsb
or
lahf
pop
push
xchg
push
jge
mov
out
jb
pop
and
jno
pushf
das
mov
divl
dec
adc
add
mov
mov
je
test
ror
pop
jmp
cltd
or
jns
cmp
stos
push
cmpsb
sbb
insl
cmp
js
sub
inc
fcompl
push
add
cmc
sbb
ffree
pusha
mov
inc
in
cmp
cmp
in
mov
sarb
xor
mov
lea
cmpsl
pop
push
add
dec
sbb
aad
sub
frstor
cmpsb
into
leave
andl
hlt
jmp
repnz
addl
shrb
mov
push
or
xor
and
stc
repz
cmpsl
fists
mov
jle
inc
dec
mov
inc
movsl
dec
xchg
mov
cmpsl
test
ljmp
popf
sti
cmp
cltd
dec
loope
pop
aad
pop
loope
xchg
ret
popf
sub
sub
daa
add
cli
shrl
sbb
push
jmp
xchg
inc
lods
dec
xchg
xor
enter
and
fisttpll
les
insl
xor
mov
and
push
jae
and
stc
out
and
mov
jae
lods
xor
mov
into
lds
pop
dec
imul
inc
mov
sti
pop
test
and
repz
cmp
loop
jnp
mov
es
xor
shrb
outsl
out
sub
sub
or
add
jle
xlat
hlt
pop
sti
xlat
xor
xchg
and
movsb
sub
popa
sbb
in
xor
sahf
mov
sub
dec
mov
push
xchg
xchg
mov
insb
add
push
dec
adcl
push
dec
mov
push
inc
push
mov
pop
add
xchg
mov
mov
lods
lret
repz
in
hlt
jo
mov
test
cmp
es
filds
mov
stos
dec
out
int3
sub
movsb
xchg
out
imul
cli
cmc
mov
ret
fnstsw
jecxz
push
das
ja
push
insb
lcall
cli
mov
data16
mov
pop
nop
andb
sub
mov
hlt
pop
jg
push
jmp
dec
mov
sub
les
vmovsd
mov
insb
into
jle
adc
int
nop
sahf
icebp
dec
adc
std
rorb
rolb
je
xor
outsb
shrl
out
push
cs
jb
shll
sub
cltd
cmpsl
aad
or
push
mov
xchg
adc
jmp
stos
and
xor
fdiv
mov
fld
lret
or
cmp
add
rcrb
sbb
adc
jl
mov
or
xor
pop
fs
incb
push
aam
adc
jmp
push
out
mov
mov
jmp
idivl
cli
and
pop
in
lock
nop
lret
add
dec
nop
in
aas
into
fcoml
jno
adc
cwtl
adc
clc
mov
pop
out
sbb
mov
gs
fstps
add
xor
mov
lcall
gs
nop
mov
lcall
add
ficoml
pop
test
sar
or
mov
inc
pop
inc
and
js
stc
lods
divl
hlt
test
jcxz
push
mov
pop
push
xor
pushf
inc
sbb
sbb
mov
xor
shll
scas
dec
sub
insl
jmp
pop
sbb
fcompl
xchg
shr
orl
mov
inc
jbe
enter
jo
add
outsb
mov
fsubl
repnz
and
xor
aam
inc
sbb
lret
jns
imul
jbe
cmp
fwait
sbb
mov
push
test
out
sbb
cmc
and
pop
into
dec
loope
in
fwait
xchg
xchg
inc
push
jne
push
dec
adc
lock
jmp
clc
leave
xor
incb
jne
mov
jecxz
push
add
mov
jae
xorl
jne
jp
push
inc
sub
je
xor
jae
push
jg,pt
lods
lock
enter
mov
aam
push
in
sbb
xchg
jmp
cli
jg
test
decl
pop
popa
jbe
or
mov
out
test
xor
pop
add
lods
jecxz
hlt
xchg
push
mov
pop
xchg
lcall
push
xchg
mov
and
outsl
jnp
inc
pop
int
sub
or
pop
popa
pop
xchg
mov
repz
push
ljmp
into
out
xor
add
push
shlb
int
pop
ficoml
mov
inc
mov
pop
pop
cli
icebp
mov
mov
mov
jl
cwtl
adc
in
add
ret
cmp
movsl
lahf
cmpsb
testl
xchg
cmp
push
test
dec
add
outsl
mov
adc
sub
jne
shr
mov
and
push
xor
inc
in
stos
lcall
xchg
sbb
pop
xchg
sarb
cld
and
xchg
mov
je
add
and
scas
cmp
scas
sti
pop
jecxz
jmp
loope
lret
mov
push
jmp
jae
mov
movsb
shll
pop
dec
pop
inc
or
or
int
sti
add
mov
insb
ljmp
mov
dec
loope
or
bound
cwtl
lods
bound
dec
and
push
cld
nop
jmp
pop
mov
mov
pop
dec
ret
and
inc
ss
adc
push
movsb
and
int
xchg
repnz
dec
insl
out
notb
scas
scas
adc
adc
shl
mov
lods
or
mov
push
pop
inc
adc
sub
sti
fmulp
xchg
xchg
and
fwait
dec
adc
arpl
mov
inc
iret
cwtl
lahf
push
sarb
xchg
aad
mov
das
cmp
lock
cmp
dec
adc
pop
jmp
loopne
inc
loop
push
cs
inc
xchg
xor
stos
outsl
lds
inc
or
loope
add
test
dec
lods
les
sbb
cmp
lahf
jle
mov
push
and
lea
andl
loope
sarl
mov
dec
or
fisubrs
jg
adc
sti
jbe
cmpsb
push
pop
flds
xlat
rcll
adc
jl
shrl
add
mov
cmp
mov
mov
insb
hlt
pop
aaa
test
rorl
xchg
repz
inc
inc
cmp
test
mov
les
xchg
insl
leave
out
pop
sub
shrl
jl
jb
insb
test
repnz
sbb
inc
bound
inc
loopne
in
test
orl
sar
jle
out
fucom
call
mov
push
dec
jecxz
imul
mov
pop
fs
les
jg
sub
adc
pop
aas
adcb
daa
adc
pop
call
push
xor
lcall
mov
add
push
inc
aad
scas
push
mov
leave
jno
mov
movb
gs
ficoml
mov
pop
xor
stos
scas
cld
push
sbb
jmp
or
jg
and
mov
mov
and
fwait
int3
mov
outsl
imul
in
sbb
xorb
ret
shll
cmp
subl
or
aaa
mov
repz
cwtl
inc
jae
call
mov
lea
inc
push
stos
shrb
sbb
pusha
ss
lcall
dec
inc
ds
scas
cli
mov
pop
jle
movsb
and
dec
mov
mov
ja
mov
and
or
movb
dec
dec
mov
repz
fldenv
mov
dec
or
aad
repz
decl
pop
out
inc
lcall
rclb
xor
mov
enter
mov
dec
fidivrs
addr16
add
shll
jle
inc
mov
stos
and
inc
sub
in
fiaddl
imul
test
es
pusha
jno
push
in
loop
push
cmpsl
fisubrs
gs
jne
or
nop
les
fdivrl
or
in
inc
mov
aam
enter
cwtl
sub
aas
mov
icebp
jne
ret
push
mov
sbb
nop
jns
imul
flds
in
loop
push
inc
and
out
pushf
cli
xchg
test
push
adc
rol
shrb
mov
pusha
jb
lret
divb
les
and
shll
addr16
inc
mov
iret
out
aas
mov
mov
cld
xchg
jecxz
les
adc
aas
xlat
mov
inc
add
inc
sub
mov
mov
dec
arpl
icebp
movsl
les
dec
or
adc
inc
lea
fcomps
add
adc
pop
inc
testb
lret
sbb
mov
cld
andl
shl
add
fidivrl
sarl
int3
inc
les
or
fdivrp
mov
test
aaa
movsb
sbb
into
and
ret
out
xchg
sub
pop
inc
inc
imul
jno
jp
nop
shlb
in
jge
hlt
pop
inc
mov
jmp
sub
xor
cmpsl
sti
scas
sbb
push
push
int3
push
loop
jecxz
mov
loopne
jnp
leave
sbb
lcall
dec
or
push
adc
jo
and
ret
xor
shll
inc
mov
or
mov
mov
dec
sbb
aas
ret
mov
imul
mov
sbb
and
lock
pop
and
mov
and
pop
icebp
rcll
xchg
sarb
lcall
jp
cmc
loop
jo
mov
and
inc
ret
ljmp
in
xchg
push
add
clc
pop
dec
xchg
add
fsubl
pop
sub
pop
mov
xlat
clc
cmp
enterw
cmp
das
xor
loope
xorl
aas
sub
jmp
mov
lret
test
jl
stc
sbb
sub
sbb
imul
xchg
xchg
mov
pop
xchg
dec
loopne
loop
jl
into
jle
mov
jecxz
ret
inc
mov
ret
arpl
pop
popa
mov
jbe
in
std
ret
dec
std
das
adc
or
or
add
mov
aaa
rcrl
xchg
fs
jl
inc
dec
adc
gs
mov
and
xchg
fcmovb
mov
jmp
outsb
adc
add
adc
cltd
xchg
pusha
mov
cmp
mov
mov
mov
jmp
test
lds
sub
pop
in
jno
push
mov
hlt
mov
pop
sub
shr
loopne
xchg
clc
clc
xor
nop
mov
jge
xchg
xchg
pop
xchg
adc
mov
push
mov
push
gs
shll
popa
mov
mov
outsl
je
dec
ds
outsl
pop
jp
adc
daa
imul
dec
jl
or
pop
adc
jno
cmp
ret
aas
mov
test
and
push
call
sbb
mov
imul
add
inc
add
pusha
and
jecxz
mov
fimull
xor
pop
sub
std
inc
mov
push
cmpsb
inc
sbb
scas
inc
mov
jne
add
cwtl
push
pop
nop
aad
mov
arpl
or
mov
int3
rcr
dec
mov
ss
jl
shlb
push
jo
insb
jns
push
outsl
push
dec
dec
std
inc
push
pop
out
adc
arpl
mov
mul
xor
pop
lods
rclb
adc
jb
adc
leave
push
add
outsl
xchg
lock
into
outsb
jle
fucomp
imul
sarl
sub
syscall
sti
mov
adc
mov
test
ret
ret
je
stos
je
or
sbb
xchg
pop
mov
int3
jmp
xchg
call
data16
into
loopne
stc
cmpsl
adc
out
insb
mov
addr16
push
sub
push
data16
stc
scas
mov
loope
adc
adc
jno
push
mov
and
out
adc
mov
iret
push
cltd
sub
cli
dec
lret
cmpsl
lret
fidivs
movsl
mov
rcrl
mov
scas
test
out
push
sbb
add
mov
mov
pop
dec
sbb
mov
bnd
lret
adc
sbb
adc
mov
sub
jbe
mov
repz
pop
jno
loope
mov
push
sbb
adc
ret
and
jno
out
add
dec
mov
xor
rolb
jb
cmp
iret
arpl
or
push
in
push
out
push
outsb
sti
fdivr
repnz
inc
shl
imul
stos
insl
inc
hlt
bound
push
push
pop
pop
or
push
push
jmp
push
movsb
jle
dec
cmp
cltd
movsb
push
mov
cmp
in
ret
js
xchg
std
out
icebp
in
insb
lcall
jl
push
and
lahf
add
inc
enter
fmuls
dec
inc
lods
lahf
jmp
cmpsl
pop
cmp
fwait
mov
and
shrb
jmp
cwtl
sahf
aas
fsubs
flds
sub
and
cmc
cmc
mov
js
jecxz
adc
mov
ja
hlt
push
pop
outsl
xor
mov
jle
dec
add
and
sti
out
in
in
js
into
mov
shrb
mov
mov
pop
and
or
ja
sbb
push
imul
and
xchg
mov
cmp
sub
movsl
in
into
cmp
xchg
jecxz
and
jecxz
jo
xchg
dec
fsubr
adc
xacquire
inc
jbe
and
jno
stos
dec
jmp
push
lret
pop
pop
sbb
push
into
mov
dec
dec
adc
xor
das
push
in
mov
mov
mov
loope
and
iret
shrl
loope
sbb
ja
lret
mov
cld
dec
rclb
outsb
ret
repnz
notb
mov
ss
daa
repnz
pop
fistps
mov
adc
loope
mov
xlat
jp
in
mov
pop
cs
xchg
testl
pop
iret
mov
mov
enter
aam
lret
lds
mov
repnz
mov
lahf
orl
repz
mov
ret
xor
fs
push
mov
xor
sbb
shll
js
push
xchg
xchg
cmp
xchg
out
pop
or
pop
inc
mov
push
mov
in
or
enter
jecxz
sub
push
out
and
or
fcmovnbe
not
leave
push
les
xchg
fidivs
divb
lea
xlat
xchg
out
sub
push
and
in
jg
movsb
sbb
jle
ret
mov
pop
add
negb
sub
aas
enter
push
mov
lds
and
inc
hlt
mov
pusha
pushf
mov
out
in
push
xorl
lds
push
stos
pop
xchg
mov
daa
aad
lahf
cwtl
lcall
sub
jg
insb
int
xchg
icebp
jb
bound
sarb
stc
jecxz
mov
es
dec
sub
mov
fisubrl
jno
mov
dec
lcall
arpl
insb
and
enter
lods
push
push
loope
fldt
adc
enter
mov
clc
dec
cmp
fwait
inc
jg
mov
icebp
ljmp
cmp
or
fstpl
fidivs
and
int
and
adc
sub
std
int
stos
mov
xor
fdivrp
out
sti
fsts
mov
fstl
xchg
iret
cmpsb
dec
clc
ret
mov
daa
push
out
imul
add
gs
jbe
divb
mov
cmp
sar
adc
sahf
insl
inc
mov
mov
pop
call
sbb
lret
sbb
lahf
add
movsb
or
inc
rdmsr
cmpsl
and
pop
mov
cmp
and
hlt
push
adc
cmp
jo
mov
adc
push
jne
lret
push
adc
xor
in
mov
stos
les
adc
mov
push
lahf
pushl
aad
inc
arpl
shl
sbb
outsb
add
mov
add
inc
sbb
dec
into
mov
outsb
sub
mov
sbb
loop
icebp
xchg
push
sbbb
aaa
lcall
inc
add
dec
sub
cwtl
xor
cwtl
mov
sbb
jnp
or
xlat
cmp
in
aas
into
js
dec
add
xor
mov
pop
cmp
mov
mov
clc
push
pusha
in
xlat
addr16
out
orb
sbb
ret
xchg
xor
fisttps
xor
mov
and
xchg
imul
sarb
cmpsl
adc
ffree
fwait
inc
js
inc
inc
xor
pop
fwait
call
and
cwtl
mov
rcl
mov
iret
fwait
pop
adc
push
js
cmp
push
repnz
adc
pop
inc
test
rcr
jp
in
and
cwtl
call
pop
repz
mov
cmpsl
aad
aam
scas
inc
ret
jle
dec
imull
dec
lret
add
arpl
mov
js
call
inc
inc
sub
jae
push
movsl
imul
call
loop
jle
addb
sub
aam
movl
sbb
into
and
aam
rorb
sbb
loopne
mov
and
clc
jge
push
int
xor
mov
lret
mov
adc
xchg
hlt
ret
or
dec
dec
aas
scas
mov
in
jl
jae
orb
mov
aas
lret
negb
sbb
or
lods
inc
sahf
aam
jp
push
in
fwait
inc
fdivp
cmpsb
adc
sar
roll
adc
pop
cmp
sbb
mov
sbb
cltd
mov
ret
cmp
in
lods
ljmp
mov
ds
inc
or
inc
roll
jle
aam
nop
sbb
add
repnz
imul
inc
push
aam
lock
fstl
jge
jne
ds
pop
add
add
push
xchg
jg
ljmp
stc
mov
adc
pop
es
test
fstpl
sti
jp
mov
scas
xlat
leave
es
or
mov
out
sub
or
aam
imul
daa
sarb
adc
sarb
in
add
push
arpl
or
pushf
insl
jl
push
cwtl
sub
xor
cli
pusha
fsubrl
jo
jae
sbb
mov
mov
repnz
cmp
inc
mov
je
mov
shrb
std
fcoml
cld
mov
mov
arpl
pop
pop
jbe
adc
je
ret
xor
jo
call
push
dec
xchg
jno
push
lock
mov
cmp
xor
leave
sbb
cmp
out
out
iret
inc
and
mov
mov
hlt
rclb
lds
jno
jle
ret
addr16
xlat
ret
es
aad
add
mov
sub
loop
push
jge
pop
mov
cmpl
jne
mov
or
lods
insl
ffreep
mov
mov
lods
sbb
mov
mov
and
pop
fcompp
mov
add
mov
dec
xor
pop
pop
inc
iret
cwtl
aas
inc
test
sbbl
test
mov
test
cmp
xchg
jge
movsl
sti
gs
jmp
sub
fists
cmpsl
inc
jg
xchg
ljmp
ja
adcb
enter
jl
cmpsb
push
sub
sub
inc
out
aad
cmpsl
insl
jae
mov
add
inc
fs
push
adc
mov
inc
xor
movsb
in
loope
sbb
les
xchg
mov
shrb
sub
scas
and
add
mov
scas
mov
or
or
mov
mov
jp
mov
and
jns
cmp
testl
mov
push
and
adc
fnstenv
dec
jno
pushf
shrb
das
push
lods
mov
inc
sub
rcrl
push
imul
push
or
pop
dec
adc
mov
test
mov
inc
mov
xchg
sbb
xchg
out
lea
xor
sbb
jmp
mov
xchg
shll
rcl
mov
cmpsb
outsb
daa
fbstp
ja
or
aad
adc
pop
cmpsl
insb
fucomip
mov
sbb
and
ljmp
pop
dec
rcrb
int
sub
div
pop
inc
out
mov
sbb
loopne
out
lock
pop
and
pop
cmp
out
and
sbb
dec
jp
movsb
fs
xor
inc
loope
fmul
inc
out
sahf
into
adc
js
adc
and
mov
xor
in
ja
popa
add
iret
lds
cmp
mov
cmp
lcall
scas
xchg
testb
dec
adc
adcl
pusha
ret
testl
push
adc
xchg
stc
ss
mov
dec
add
test
mov
clc
std
movsb
add
pop
lcall
mov
xchg
mov
add
stos
jbe
es
shlb
pop
ret
pop
out
rolb
sbb
pusha
loop
jg
cmp
inc
add
insl
dec
sub
or
insb
test
adc
dec
outsb
icebp
popf
rcrb
push
notb
mov
and
jnp
add
dec
jo
cmp
cmp
inc
xor
sbb
or
push
nop
pushf
xchg
push
cli
ja
push
cmp
insl
jo
aaa
popf
dec
inc
mov
and
lods
bound
lret
scas
or
test
pop
pop
sbb
icebp
pushf
rcrb
cltd
rorl
xchg
daa
sub
inc
inc
je
cmc
push
leave
inc
hlt
sbb
icebp
aaa
mov
or
addr16
push
ret
sbb
fs
and
dec
ret
popa
jl
hlt
lds
cltd
pop
push
data16
daa
sbb
outsl
imull
lahf
daa
ret
cmp
inc
sbb
push
ja
and
push
inc
jno
es
sub
jmp
scas
or
jg
ss
xchg
mov
sbb
insb
rorl
cmp
and
loop
and
mov
addr16
scas
jno
jns
sub
ja
gs
mov
cmpsb
sbb
mov
mov
jge
sbb
mov
adc
add
inc
jl
pop
mov
dec
mov
test
cltd
std
inc
push
adc
jb
xchg
fists
mov
daa
out
and
fs
xor
dec
cltd
pop
arpl
mov
test
std
rorb
outsl
xchg
lret
push
movsb
cmpsb
ror
andl
jo
pusha
dec
jae
lret
shll
insb
push
orb
daa
fstl
int
cmpsl
out
jmp
aad
mov
dec
pop
or
inc
insl
fwait
sbb
aas
lahf
pop
pop
clc
ss
shrl
mov
add
mov
xchg
aaa
mov
mov
and
ss
negl
and
cmp
data16
inc
push
in
sbb
es
push
scas
in
inc
push
imul
inc
inc
sub
addr16
loopne
cmp
aam
ljmp
repnz
or
xchg
or
shll
js
sbbl
xor
sub
jno
out
ret
scas
roll
add
jae
jno
mov
add
in
jne
insb
jmp
pop
cmp
gs
mov
int3
xchg
std
jge
push
int3
sbb
bound
loope
nop
inc
inc
mov
insb
int
scas
stos
gs
jne
mov
loop
in
or
inc
xorb
pushf
mov
mov
mov
jb
loop
loop
sbb
xor
fistps
mov
sub
and
pushf
cmp
dec
ds
fdivrl
jnp
mov
cmp
test
fcoml
push
lcall
and
xor
add
push
fld
push
int
inc
jns
cltd
adc
mov
nop
push
ljmp
sti
std
inc
fidivs
jmp
clc
movsb
adc
mov
xlat
jmp
insb
jns
mov
mov
ja
sub
jl
xorb
mov
dec
sub
ljmp
ja
jecxz
lds
inc
shll
hlt
sub
xchg
adc
add
cmp
shrd
xchg
adc
test
xchg
ret
jnp
cmp
mov
imul
sub
std
sarl
jmp
rcr
shlb
movsb
sbb
mov
mov
cmc
clc
fldl
jecxz
sbb
cltd
jnp
mov
imul
xchg
outsl
jns
ret
or
gs
or
and
add
pop
adc
mov
mov
orb
add
xor
insb
dec
loope
adc
mov
push
mov
sub
mov
movsb
and
mov
or
adc
mov
inc
jno
les
xor
pop
pop
cmpsb
test
lock
pop
xchg
lret
sub
mov
fs
add
lds
das
mov
rcrb
xchg
stos
sub
aaa
lods
mov
test
scas
and
rcll
xchg
and
or
in
stos
orb
popf
inc
mov
and
mov
jmp
push
stos
fstps
xchg
std
push
loope
fiaddl
inc
and
sbb
arpl
es
aad
push
adc
cmpsl
ja
and
mov
push
jp
imul
xor
sub
or
lods
add
dec
lcall
push
mov
push
sub
xchg
popa
jb
out
dec
aam
nop
mov
pop
jge
inc
push
mov
ss
mov
cmp
jo
push
mov
pop
addl
push
icebp
push
sbb
cmp
mov
out
xor
scas
mull
jae
fbstp
fldt
ret
pop
mov
pushf
cltd
dec
pop
pop
inc
inc
mov
nop
mov
jb
pop
pop
mov
addr16
or
jnp
fs
mov
cmp
add
or
ret
ret
sbbb
add
cmp
outsl
lret
cmp
daa
mov
sahf
push
cs
incb
jnp
or
sub
mov
fdivrs
mov
sbb
pop
lock
lret
scas
repnz
sbbl
mov
loopne
jns
testl
fsubl
movsl
jp
addr16
popa
inc
fs
cmp
push
sub
push
jg
jno
std
pop
outsb
xor
sbb
mov
add
xchg
out
movsl
ret
iret
sub
stos
sbb
push
ljmp
cli
add
notl
mov
and
test
mov
daa
jb
pop
subl
dec
cmp
lret
push
pop
call
adc
mov
mov
adc
in
addr16
mov
dec
mov
adc
jne
pop
or
jl
lret
jl
std
or
pop
lahf
xchg
popa
or
mov
ds
cmp
cmp
push
bound
es
mov
mov
sub
das
push
insb
clc
mov
enter
jnp
mov
mov
inc
pop
add
outsl
arpl
mov
insb
mov
fldenv
ret
push
jle
add
sahf
and
and
cmp
and
ljmp
xchg
insl
dec
fdivs
cltd
insl
push
ret
daa
mov
lods
mov
popf
pop
inc
push
push
and
mov
mov
inc
rorb
cmp
nop
adc
push
out
cmc
mull
sbb
sbb
xor
mov
mov
mov
fs
and
je
add
or
xchg
cmpsl
add
pushf
sub
push
stos
push
xchg
scas
sub
aaa
in
push
dec
neg
test
lretw
mov
lds
and
or
mov
nop
pushf
hlt
jb
pusha
hlt
push
push
adc
popa
dec
mov
xor
jae
dec
lahf
xor
clc
jmp
pusha
push
mov
mov
loopne
mov
or
addr16
fstpl
repz
jno
call
dec
push
mov
push
fcomps
dec
mov
iret
dec
test
je
xchg
pop
es
insl
ljmp
dec
repz
xchg
movsl
pop
pop
arpl
cmc
inc
add
in
dec
shlb
loope
push
int
adc
mov
mov
in
cmpsb
xlat
jb
add
loopne
or
xchg
movsb
aaa
mov
add
jle
pusha
mov
filds
mov
sarb
lds
inc
push
mov
arpl
cmp
push
xlat
mov
or
xchg
fcmovnbe
and
mov
les
or
dec
sbb
pop
lock
sub
hlt
cmpb
out
jp
es
addl
add
mov
push
scas
mov
push
xor
mov
ficoms
out
inc
push
dec
xchg
mov
test
push
xlat
push
sub
xlat
sarb
xor
rcr
sahf
ds
adc
xchg
adc
mov
dec
sbb
testl
mov
and
pop
mov
or
jle
outsl
jecxz
inc
movsl
push
xchg
lds
mov
cmc
xchg
push
mov
or
in
add
cwtl
iret
ds
inc
mov
jnp
cmp
or
nop
pop
sbb
repz
inc
xchg
xchg
xor
std
mov
ret
adc
jge
jecxz
ficomps
push
ljmp
jge
inc
arpl
pusha
sub
add
pop
loope
cmp
pop
ja
aad
and
ret
inc
loop
ljmp
push
out
mov
ds
dec
ret
outsb
ss
popa
pop
sub
in
in
sbb
xchg
pop
lret
imul
bound
jg
lock
in
jmp
fbstp
push
idivb
int
ja
std
pop
jp
jns
mov
xchg
lea
push
outsl
jg
sbb
xchg
aaa
out
jle
loop
dec
sbbb
jne
add
shlb
and
jmp
jmp
leave
es
mov
ficomps
sbb
sbb
xchg
mov
call
sub
outsb
scas
push
scas
pop
mov
mov
cs
test
or
dec
insl
test
xchg
xor
cmp
cmp
and
xor
xor
das
fcoms
fcompl
jp
jbe
xor
fwait
push
jno
xchg
paddw
sbb
outsb
out
cmc
mov
sub
mov
xor
mov
aam
jns
imul
cmp
repz
mov
push
jmp
inc
mov
mov
outsb
and
rorl
pop
addr16
mov
adc
bound
mov
ja
push
jae
aad
insl
cmp
loope
push
xchg
jp
js
push
xchg
xor
xchg
dec
mov
decl
mov
adc
ds
dec
add
xchg
sbb
mov
mov
insb
jmp
push
push
and
repnz
mov
fldenv
inc
inc
test
fdivrl
shl
add
push
clc
cmp
js
out
jne
mov
out
cmpb
fistpll
cli
dec
js
in
shll
lock
out
add
xchg
adc
dec
pushf
inc
je,pn
pop
xor
mov
push
int
enter
sbb
push
into
add
cltd
jge
imul
inc
mov
in
mov
add
cmp
push
out
pushf
mov
jno
jae
cltd
out
xchg
and
xor
and
mov
loopne
or
cmp
jge
outsb
sti
out
data16
sbb
adc
clc
or
pop
aaa
push
les
cmc
loopne
cmp
imul
push
arpl
loop
scas
in
cmp
inc
jle
pop
pop
shrl
xor
xchg
sub
inc
pop
iret
sti
ss
loop
sbb
in
int3
pusha
lock
insl
dec
aas
sbb
pusha
or
jb
xchg
fcmovne
mov
outsl
mov
cmovp
imulb
adc
and
lock
cld
inc
cmpsb
dec
and
pop
mov
adc
push
hlt
push
push
subl
mov
mov
leave
xchg
adc
mov
xchg
in
mov
jge
ljmp
jns
in
inc
addb
in
mov
cli
jecxz
aad
xchg
add
cmpsl
dec
imul
mov
clc
ret
mov
daa
sub
push
dec
js
or
add
in
cmpsl
push
insl
lods
ret
iret
jge
fucom
popa
test
hlt
repnz
sbb
mov
jb
ds
xchg
movsb
pusha
add
sahf
mov
lret
insb
pop
popa
cmp
xchg
insb
popa
and
int3
xchg
mov
shlb
insb
mov
daa
or
push
add
add
hlt
mov
mov
push
pop
arpl
cmp
sbb
mov
and
jne
mov
jmp
ljmp
shr
push
addr16
mov
icebp
imul
cmp
inc
jp
rcl
int3
jl
jge
cmp
leave
ret
pop
mov
sar
pop
jno
mov
adc
xchg
fs
jb
arpl
mov
rclb
or
push
in
inc
pop
lock
inc
fsubp
adc
pop
push
xchg
and
cld
push
xchg
xor
pop
call
dec
movsl
shrl
outsb
push
mov
inc
rolb
popf
inc
sarb
inc
leave
dec
dec
mov
pop
clc
enter
pop
xorl
mov
cld
outsb
int
dec
jno
mov
filds
mov
shrb
das
xchg
incb
dec
mov
jmp
fldcw
xor
movsl
in
xchg
sub
dec
repz
shrb
lret
mov
jge
pop
movb
popf
cwtl
sub
stos
push
sbb
ljmp
aam
adc
insb
jl
mov
pop
jecxz
les
fnstenv
into
movsl
js
jl
js
inc
jns
movsl
or
fcompl
jno
adcb
std
pop
out
ret
sbb
push
xor
scas
das
in
jbe
popf
sti
stc
add
or
out
mov
sahf
sub
imul
popf
ss
jle
pop
movsl
mov
lea
push
sbbl
dec
or
fwait
test
and
arpl
pop
sub
fdiv
std
imulb
sbb
and
insl
cmpsb
addr16
add
cmpsl
test
scas
cwtl
stos
sub
cmp
mov
orl
mov
mov
hlt
fs
xchg
and
sbb
xchg
bswap
inc
mov
std
sub
test
sub
add
pop
push
test
add
lods
mov
jmp
push
add
out
mov
mov
xor
push
rcrb
data16
push
andl
and
sbb
dec
cmp
repnz
cs
mov
mov
jo
and
lret
stos
xchg
stos
test
std
mov
divb
cltd
dec
cs
pusha
ret
add
cmp
imul
inc
xchg
jnp
xor
dec
sub
jp
pop
repnz
fwait
stc
push
imul
dec
push
lds
bound
cmp
jno
daa
ret
push
mov
mov
adc
cmpsl
cmp
dec
fcomps
push
lahf
je
test
inc
cmc
pop
pop
push
fnsetpm(287
adc
repz
add
inc
icebp
xor
xor
adc
syscall
cmp
aad
pushf
cmpl
in
sbb
lock
push
lea
lods
mov
push
insl
cmc
mov
sub
jecxz
insb
lds
shlb
test
in
pop
mov
mov
mov
sbb
xor
aaa
add
and
ljmp
iret
push
outsl
mov
xchg
inc
add
ljmp
mov
mov
push
pop
popa
dec
fdiv
xor
loope
in
inc
loopne
jbe
inc
pop
and
push
jno
pop
psubd
test
out
les
or
xchg
push
sub
xchg
xchg
stos
test
lock
or
leave
in
add
fucomi
ss
stos
and
adc
lcall
xchg
xchg
or
jmp
mov
mov
cmp
xchg
jo
pop
pushf
aad
cmp
xchg
int3
rorl
ljmp
scas
insb
imull
rolb
push
push
movsb
pop
test
aad
xor
sub
adcl
pop
adc
ljmp
std
mov
into
adc
sbb
sub
sbb
push
out
sarl
push
mov
pop
xchg
sub
jo
or
mov
mov
push
mov
ds
adc
dec
jnp
push
fwait
jbe
sbb
out
imul
call
mov
stc
mov
cwtl
int3
pusha
cld
fdiv
lods
xchg
stc
cmpsl
repz
decl
in
cli
jge
add
test
pop
stc
adc
or
fstl
shll
sub
popa
jne
loope
pop
xor
mov
cmp
arpl
mov
cmpsl
mov
jg
sub
jo
int3
or
pop
and
dec
out
dec
addr16
fucomip
nop
cltd
pop
outsb
ds
xor
cmp
xor
gs
pop
out
and
cmc
jae
iret
insb
and
dec
dec
jb
lea
out
cmp
call
and
push
mov
add
stos
mov
jecxz
inc
sub
mov
add
je
xlat
imul
pushf
cli
add
mov
pop
pop
repnz
jb
fiadds
pop
div
or
ficoml
out
aad
push
and
mov
mov
push
xor
jbe
mov
jl
jle
fsubr
out
fcmovbe
xchg
xchg
cmc
inc
dec
cmp
outsl
and
shll
pusha
jge
or
xor
jp
mov
sbb
xchg
sbb
out
cmpsb
cmp
lret
pop
out
mov
xor
mov
lea
adcb
push
es
sti
jle
adc
jns
mov
sbb
mov
in
sbb
lock
push
pop
cmpsl
daa
cmp
cmp
mov
push
cmp
fildl
mov
adc
jnp
inc
adc
pop
inc
xor
push
inc
jns
or
test
push
pop
push
push
inc
in
hlt
add
and
dec
jl
daa
fstpl
mov
cmp
xchg
push
hlt
jnp
cmp
loopne
cwtl
mov
ret
test
in
and
popa
mov
or
in
xchg
push
imul
es
pop
xchg
test
out
lea
push
ret
lods
sbb
lret
popf
addr16
mov
add
insl
or
add
rcl
xchg
push
adc
icebp
or
subb
fimull
dec
nop
pusha
lea
cld
ror
mov
daa
mov
int3
pushf
xchg
jne
insb
mov
mov
test
or
fnstcw
jge
or
cmp
outsb
mov
insb
imul
cli
loope
mov
and
es
sub
mov
or
adc
sbb
inc
arpl
push
mov
xchg
cmp
xor
mov
and
xor
xchg
test
adc
je
mov
leave
pop
dec
ss
fbld
and
sub
scas
test
mov
pop
cli
mov
jae
insl
mov
es
xor
mov
mov
gs
nop
mov
out
push
test
dec
aaa
rcrl
xor
and
loope
jle
adcb
xor
jl
dec
and
mov
out
jbe
mov
sbb
sbb
rolb
mov
sbb
loopne
add
cmc
and
add
and
outsl
xchg
ds
and
mov
mov
or
das
mov
dec
fsub
add
xchg
dec
aad
and
xchg
mov
and
addl
pop
mov
popa
add
mov
cli
dec
out
inc
xor
or
fsub
jge
push
sysret
aas
std
sub
add
and
push
mov
iret
negl
mul
mov
hlt
test
das
aas
in
dec
sbb
xor
rcll
xchg
inc
mov
cs
xchg
push
scas
xor
bound
rorb
testl
or
pop
stos
loopne
orl
in
movsl
and
mov
push
xchg
popf
ret
mov
sbb
sub
mov
mov
enterw
pop
add
mov
loope
fadds
mov
lds
jno
xchg
dec
cmp
mov
push
xchg
push
aaa
clc
idivb
cmp
mov
int
test
xchg
pushf
adc
imull
sahf
mov
inc
and
jne
ficompl
ss
jno
push
xchg
ret
leave
cwtl
mov
loope
stc
xchg
sahf
xor
shll
rcrb
mov
or
lds
inc
adc
jp
adc
fs
mov
sarb
xchg
mov
and
cmc
es
shlb
lds
adc
mov
push
jecxz
pop
xchg
lock
lods
stc
mov
pop
xor
js
push
or
mov
push
dec
cld
mov
loopne,pt
sub
fldenv
jp
jo
test
adc
jmp
xlat
mov
fdiv
cmc
in
in
jns
loopne
fbstp
movb
imul
inc
jns
xor
aaa
xchg
add
sbb
movsb
xchg
ret
push
mov
out
inc
mov
nop
cmp
in
sub
push
jle
ss
push
cmc
cmp
xchg
jmp
push
mov
mov
scas
out
cmp
adc
jmp
jo
cmp
aam
arpl
or
stc
out
inc
cmp
or
or
je
mov
imul
movzwl
shrb
adc
iret
mov
jge
je
dec
jecxz
ss
adc
test
xchg
cmpsb
test
xlat
mov
xchg
jl
or
nop
xchg
sub
cmp
and
cli
call
fimull
pop
iret
dec
adc
jne
inc
das
mov
lahf
add
and
mov
inc
mov
xlat
mov
sahf
daa
shr
pop
cmpsl
loopne
lods
negb
xchg
xor
xchg
cs
sbb
inc
dec
jl
pop
movsb
in
sbbb
pop
ret
cmpsb
sahf
mov
pandn
add
fsubrp
and
lods
mov
mov
pop
out
lret
addr16
sbb
cmp
outsl
repnz
arpl
sbb
test
aam
pop
xchg
cmp
ja
lret
xor
or
sbb
lock
push
loopne
inc
scas
push
aas
pop
bnd
mov
ljmp
rorl
jge
xor
data16
loope
mov
jmp
les
jnp
pop
stos
push
dec
mov
cmp
jo
fcompl
std
jae
js
mov
insl
push
out
repnz
fcmovnu
loopne
cld
cmp
sahf
sub
ss
pop
fmull
es
jbe
inc
cwtl
mov
repnz
push
cmp
les
nop
fisttpl
and
lods
insl
mov
sahf
or
inc
mov
pushf
fwait
test
push
jp
add
cmp
mov
inc
arpl
dec
adc
or
lcall
negl
mov
mov
mov
lret
xchg
nop
xchg
mov
sub
xchg
pop
rcrb
xchg
or
nop
popf
inc
repnz
sbb
xchg
out
bound
push
add
adc
xorb
ffreep
adc
pop
in
jmp
jae
pop
jbe
movsl
pushf
adc
xchg
adcl
aad
ljmp
insb
cmpsb
mov
aas
lret
xchg
xor
out
and
push
jo
std
and
adc
mov
lahf
sbb
pop
and
push
rorl
and
dec
jbe
jns
add
int3
int
scas
xor
push
or
popa
cmp
jp
mov
cltd
lods
js
lods
pop
xchg
dec
sub
add
lock
xor
xor
es
mov
mov
aam
movsb
xor
pop
jno
inc
push
ret
cmpb
movl
imul
iret
fsts
adc
mov
sbb
adc
inc
ret
and
xchg
or
push
lock
xchg
call
ds
mov
pop
xchg
sbb
xchg
adc
push
push
mov
xchg
shlb
jl
bound
mov
pop
adc
xor
aas
addr16
pushf
lods
std
imul
mov
pop
aas
sar
lds
jle
loopne
jge
das
les
andb
mov
in
mov
push
in
mov
inc
and
jmp
shl
sub
or
push
add
cli
popf
mov
out
inc
inc
jb
hlt
jl
and
mov
lock
add
repnz
inc
pop
fimuls
or
enter
scas
rorl
bound
push
sub
mov
mov
arpl
iret
insb
inc
cmp
test
xor
jmp
push
iret
outsb
adc
mov
xor
xor
pop
push
sub
data16
sbb
fistl
jle
or
jle
addr16
xor
jne
in
push
in
dec
jo
pop
adc
imul
adc
mov
clc
mov
repnz
mov
pusha
out
inc
movsl
xchg
or
popf
stos
and
call
lods
mov
sub
xchg
mov
ret
loopne
out
ret
imull
clc
push
mov
push
xchg
sub
jae,pn
fadd
xchg
fsubrs
imul
xor
jg
sbb
or
xchg
inc
cwtl
mov
jae
fs
or
or
in
fstpt
inc
call
fadds
xchg
daa
notl
xor
pop
sub
inc
cli
or
dec
neg
mov
mov
dec
jns
pop
or
xchg
fidivl
sarb
cmpsb
in
scas
dec
lock
scas
xchg
stos
xchg
movsb
pop
ljmp
pop
cwtl
cltd
cmpsb
jae
xor
sbb
scas
jnp
in
adc
cmp
xchg
add
sbbb
push
rcrl
mov
dec
je
mov
adc
sbb
cmp
adcb
loopne
push
adcl
sub
xchg
cmp
add
call
pop
mov
jo
mov
push
scas
popf
push
dec
imul
mov
call
and
inc
jle
fists
sahf
lret
push
or
cli
xor
das
test
add
ds
mov
xchg
jle
and
and
jle
aas
mov
daa
add
leave
lret
or
lret
mov
repz
gs
addr16
adc
push
xorb
adc
sub
cmc
mov
jg
pminub
xchg
lods
mov
enter
jno
lock
jl
lahf
adc
and
xor
into
bsr
daa
fucom
and
xchg
fldcw
inc
and
and
es
add
js
sbb
lock
cmpsl
scas
push
scas
and
imul
jp
fistpll
mov
fcmove
pop
mov
push
push
mov
mov
xor
sub
adc
jecxz
mov
xchg
adc
mov
lods
imul
xor
call
xlat
mov
add
icebp
outsl
rclb
push
pop
dec
add
fstl
inc
mov
clc
add
insb
jns
jmp
lods
lret
into
xchg
sti
cmp
arpl
sbbl
stos
push
std
cmp
cld
jl
pushf
cmp
sahf
test
mov
daa
roll
xchg
aad
lea
pusha
nop
cmp
xor
rcll
adc
stc
sbb
sub
imul
push
pop
into
in
pop
mov
or
cmp
and
xchg
dec
cwtl
mov
xchg
fndisi(8087
adc
hlt
sbb
gs
inc
add
push
lea
sbb
ror
jecxz
cli
mov
add
push
cmp
jno
testl
gs
ret
lock
push
jns
es
scas
mov
mov
scas
mov
jae
push
lods
mov
imul
xchg
arpl
das
sbb
roll
out
jne
hlt
mov
xor
xchg
inc
adc
and
loop
jp
add
push
es
mov
cli
cmp
mov
pop
fistps
adc
and
jo
enter
ss
daa
and
in
fidivrs
fidivrl
jns
rcrb
pop
leave
rclb
dec
mov
jb
inc
xor
xchg
imul
add
addl
and
out
cltd
lcall
adc
mov
xchg
or
repz
out
sbb
lods
mov
sahf
repnz
inc
and
and
out
outsl
adc
ja
andl
fs
sbb
add
lahf
mov
lahf
or
rcll
es
sar
dec
xchg
sbb
dec
pop
ds
sub
mov
xor
xlat
sbb
jecxz
jl
aas
cmc
jae
repnz
mov
jns
pusha
push
bound
push
inc
jp
mov
or
testl
cbtw
loopne
fcomp
jge
fists
ret
xor
sbb
pop
inc
xorl
mov
mov
cmp
sahf
in
mov
or
sub
ror
inc
rcrb
add
sti
js
jnp
arpl
push
or
mov
xor
sbb
inc
mov
mov
hlt
enter
sbb
mov
adc
and
inc
adc
cld
mov
adc
cmp
in
xor
fmulp
mov
stos
mov
leave
leave
xchg
and
mov
dec
jbe
shll
pushf
ret
dec
out
jnp
mov
stos
outsl
js
repz
xlat
aaa
fwait
in
hlt
vmovaps
int3
rcrb
iret
mov
jge
mov
inc
pop
inc
push
bound
add
dec
push
lods
sub
fcomi
pushf
mov
aaa
sahf
cmpsl
xchg
jle
in
rcrl
enter
cmp
sub
cmp
inc
adc
jle
les
pop
sbb
jae
or
aam
cmc
or
dec
mov
je
mov
int3
addl
xchg
xchg
mov
mov
arpl
js
scas
sbb
rorl
xchg
jb
sbb
lds
push
pop
pop
sti
daa
mov
xchg
lahf
mov
hlt
adc
jmp
mov
lock
jo
push
jns
loopw
icebp
adc
test
insb
or
push
stc
stos
rclb
lock
subb
nop
mov
and
ficoms
sbb
int
inc
nop
pop
or
push
test
mov
outsl
movsb
dec
fninit
aas
mov
mov
sub
in
sbb
imul
jecxz
mov
mov
pop
lock
imul
and
mov
daa
ljmp
scas
inc
mov
pop
xchg
xchg
mov
lret
jg
jg
xchg
and
xor
test
inc
cmp
mov
fwait
mov
sbb
cmp
mov
enter
ja
fwait
ds
or
ds
jmp
jne
addr16
push
mov
andl
push
push
lods
test
jnp
and
aam
fisttpll
xchg
xchg
sub
jno
in
pop
sbbb
gs
stc
popf
inc
mov
xchg
mov
scas
stc
shrl
stos
jecxz
ljmp
shl
adc
cld
les
sbb
mov
cmp
push
xchg
shlb
pop
scas
negl
shll
sbbl
lret
xor
xchg
lahf
insl
repz
add
xor
add
js
outsb
pusha
fisubrs
jne
xor
loope
cmp
shl
fimuls
add
push
scas
mov
add
add
les
mov
ss
popa
mov
js
clc
push
inc
pushf
sbb
or
stc
pop
push
xchg
mov
into
cwtl
fs
add
stc
roll
jb
jg
or
or
cs
pop
pop
cmp
sarl
pop
sub
mov
cli
outsl
sub
test
pushl
ret
xchg
cmpb
sarb
in
pop
jno
jmp
outsb
push
fcoms
inc
shlb
fisubrs
inc
inc
mov
std
aas
sbb
xchg
xchg
mov
adc
stos
fiadds
sbb
xchg
outsl
mov
int3
and
inc
andb
fcmovbe
lds
lds
jge
add
mov
jbe
rclb
mov
shlb
les
sbb
mulb
test
popa
xchg
neg
mov
pop
jge
stc
and
test
jnp
das
lahf
push
test
or
push
mov
outsl
mov
mov
mov
neg
sbb
cmpsb
cmpsl
push
adc
popf
aaa
jmp
sbb
adcb
jbe
rorb
pop
popf
xchg
inc
lahf
mov
cmp
ljmp
leave
pop
test
jb
sarb
and
repz
fstpl
xchg
mov
insl
push
ficoml
or
pop
jns
dec
dec
and
pop
outsb
pop
mov
ss
pushl
inc
xchg
mov
in
mov
shl
sti
lea
mov
push
pop
andl
sbb
pushf
loop
add
and
cmpsb
jae
mov
and
popf
lods
jle
xchg
sarb
ffree
adcb
cmc
sahf
cmp
sub
movsb
scas
int3
rorb
imul
inc
cmp
xchg
or
push
pop
dec
push
mov
insb
jmp
insl
jae
clc
xchg
hlt
or
ja
add
int
stos
inc
loopne
in
lret
ret
rolb
mov
jle
dec
cmp
lea
xchg
sahf
push
mov
icebp
mov
aad
sbb
mov
mov
push
mov
icebp
movsb
sbb
mov
lcall
xor
je
je
fisttpl
ja
lahf
hlt
sbb
repz
movsb
xor
sbb
xchg
mov
xchg
pop
mov
faddl
or
stc
mov
test
sub
mov
inc
jne
ficoms
mov
fs
std
movl
sub
rcl
cmp
inc
push
repnz
ret
roll
mov
adc
gs
adc
jecxz
mov
xchg
mov
rolb
mov
xchg
das
mov
pushf
repz
into
into
int3
sbb
cmp
fmuls
clc
test
cs
in
mov
push
mov
sbb
fnstsw
jge
filds
lcall
inc
repnz
dec
paddd
lds
scas
jle
loope
notl
in
sub
rcl
imulb
adc
outsl
insb
or
inc
jg
insl
sti
test
arpl
mov
push
sbb
push
add
mov
lret
mov
sbb
pop
jle
lea
outsb
verw
adc
hlt
cmpsl
push
xor
jno
cmc
inc
inc
in
jp
fistps
mov
cmp
in
bound
pop
mov
fisttpl
aaa
push
iret
xor
imul
ds
and
mov
pandn
jns
add
mov
das
dec
cmc
mov
aas
pop
pushf
jmp
rcll
jp
aas
inc
lods
push
or
dec
sti
jmp
pop
dec
adc
andl
cmc
out
mov
mov
adc
sub
adc
dec
repz
gs
cld
stos
sti
je
pop
mov
xchg
call
cli
xchg
or
cmp
pop
mov
out
mov
sbb
in
int
mov
les
and
pop
shrb
xchg
call
adc
sahf
mov
xchg
jl
sbb
mov
es
lods
fcoms
inc
bound
and
test
mov
or
insl
sub
mov
inc
cmpsl
xor
xor
inc
xor
mov
mov
lret
cmc
xchg
call
test
mov
mov
jg
insl
push
inc
jg
adc
lock
nop
lock
cmpl
adc
inc
cmp
lret
aas
fwait
cmp
bound
xor
inc
dec
movsb
jp
push
fisubrl
js
and
aad
add
pop
insb
ret
sar
xlat
cmpsb
pop
inc
in
shl
xor
scas
mov
and
cmp
xor
ja
or
call
jnp
xchg
mov
jns
inc
ss
negb
lods
in
mov
scas
ja
mov
rcll
push
int
xor
inc
jg
in
outsb
iret
mov
and
xor
pop
mov
rolb
mov
lcall
imul
push
das
nop
dec
bound
xlat
cmp
adc
jle
push
or
lcall
pushf
ror
adc
cmp
clc
stc
daa
cmp
not
dec
outsb
and
jp
pop
push
inc
enter
cmp
pop
xor
icebp
nop
shll
movsl
insb
jecxz
shr
out
mov
jg
aas
inc
push
sub
lret
inc
lret
out
sbb
adc
movsl
mov
xor
es
fs
out
std
negl
push
jmp
cmpsb
std
scas
xor
das
sahf
andb
jge
aad
xchg
dec
fcompp
sub
les
mov
mov
pop
out
and
adc
sahf
mov
cmp
and
popf
loope
or
push
inc
xor
pop
faddl
adc
add
hlt
ret
push
mov
aam
or
mov
int3
mov
arpl
mov
push
sub
mov
mov
push
aam
inc
adc
imul
ljmp
sub
sbb
leave
stc
fsubrs
nop
push
add
rolb
call
sarl
cmp
std
jae
jl
and
bswap
das
dec
mov
adcl
outsb
adc
dec
out
mov
loopne
cmpsl
pop
test
sbb
and
lcall
in
mov
test
mov
notb
xchg
lods
popa
or
and
push
dec
sbb
jb
loope,pn
inc
pop
inc
push
sub
mov
and
jb
stc
nop
mov
sbb
cmp
sub
mov
pop
inc
dec
shll
mov
add
add
add
jnp
push
pop
jae
sub
adc
test
out
loopne
jbe
std
push
and
pop
lea
ss
sbb
mov
cmp
jb
jg
movsl
or
lock
jo
dec
jmp
mov
dec
inc
cmp
push
sbb
inc
imul
fidivrs
sbb
outsl
cmc
out
shrb
xchg
fcmovb
cmp
inc
stos
pop
mov
ljmp
cmp
dec
cmc
mov
mov
inc
jp
daa
enter
and
scas
sbb
sub
cld
mov
add
mov
adc
aam
repz
push
aad
add
xor
mov
shrl
repnz
and
lds
pop
jmp
pop
pop
mov
dec
lahf
int3
mov
push
inc
stos
fcoml
in
dec
imul
and
enter
pusha
aaa
scas
lcall
pop
xor
and
addr16
cli
jne
adc
jmp
or
push
rorb
into
aad
mov
dec
loope
push
pop
dec
or
fs
mov
in
or
adc
xchg
pusha
shrl
scas
sarb
notl
xorb
cmp
adc
in
nop
cmp
sbb
mov
pop
or
xchg
icebp
and
adc
dec
pop
cmpsl
test
insl
pushw
fisubrl
jecxz
in
add
outsb
jl
dec
ficoml
and
das
pop
jmp
test
popa
jo
call
xchg
addr16
gs
out
and
cmc
pushf
fcomp
pop
inc
test
sbb
mov
loop
mov
jb
sti
sub
sahf
add
xchg
sbb
sbb
sbb
jo
sub
lret
ret
clc
mov
mov
push
divl
enter
int3
xchg
xchg
and
cmp
and
xor
popf
ja
in
cmp
xchg
sti
xchg
test
add
movsb
xchg
inc
add
fs
clc
call
ret
adc
add
mov
adc
sahf
add
ss
je
dec
aas
xor
arpl
lea
aad
mov
in
cltd
add
mov
or
fdivl
fsubrl
orl
scas
mov
cs
lea
test
cmc
pop
xor
push
lcall
nop
jmp
add
sub
add
inc
mov
std
or
pop
lahf
je
and
outsb
lcall
sarl
stos
adc
test
adc
imul
into
imul
cs
pop
in
out
pop
lock
and
int3
out
jl
or
sub
push
in
aam
jge
mov
xchg
sahf
jge
xchg
in
ret
imul
add
pop
mov
mov
xchg
or
lret
aaa
push
adc
lahf
xor
lret
pop
loopne
cmpsb
inc
aas
sbb
mov
scas
adc
leave
or
cmp
inc
push
andl
or
xchg
inc
mov
and
dec
jecxz
js
in
mov
dec
push
push
testb
cmp
gs
cltd
or
fsubrs
sti
les
fidivl
push
or
jmp
arpl
jnp
aad
ljmp
mov
push
push
stos
jmp
xchg
scas
ret
mov
jns
mov
js
clc
add
sub
jge
ret
or
mov
push
enter
out
aas
adc
test
into
add
testl
mov
pop
pop
mov
out
inc
aaa
push
sub
test
dec
sbb
add
and
aas
ret
rcll
lods
negb
xor
mov
popa
fiaddl
out
lret
mov
arpl
adc
cli
mov
or
movsl
cltd
jns
inc
and
and
and
dec
mov
push
mov
sub
or
jnp
adc
mov
sub
cmp
dec
outsl
jbe
jle
and
gs
ret
jge
add
imul
cmpsl
sar
mov
call
cmp
add
xchg
mov
cld
mov
sbb
mov
push
data16
pop
inc
ret
add
mov
pop
div
adc
adc
mov
aad
dec
cmp
and
outsl
into
outsl
cmp
fidivs
jg
gs
xor
repnz
bound
movsl
jmp
cwtl
mov
scas
stos
push
movb
xor
add
push
push
push
jg
hlt
pusha
mov
movsl
mov
lret
add
sahf
sbb
arpl
push
addl
inc
pop
mov
lods
and
pop
xor
xor
into
clc
iret
shrl
pushf
dec
imul
and
js
cmp
test
lret
out
mov
fwait
xor
cmp
mov
jne
pop
jo
out
xor
jne
push
xor
sbb
in
dec
jecxz
or
ja
pop
cmpl
mov
push
scas
adc
mov
in
dec
jbe
test
adc
xchg
aas
or
subb
imul
xchg
loope
dec
shrl
std
adc
xor
adc
jo
cmp
btc
sub
mov
outsb
in
testl
jge
loopne
adc
cmp
push
xchg
lods
shr
mov
ds
enter
mov
mov
out
sub
out
mov
pop
aaa
mov
out
in
mov
mov
mov
cmp
fadd
cmp
lahf
and
jl
bound
lds
out
sbbl
fisubl
test
popf
shl
cmp
dec
jecxz
cmc
mov
inc
push
jmp
adc
dec
out
shl
popf
sub
adc
repz
mov
xchg
pop
sbb
xor
cmp
add
xchg
popa
fucomp
mov
cwtl
jl
xchg
lock
lret
push
imull
fidivrs
and
push
addb
adc
sbb
cmp
mov
xchg
mov
lret
sbb
pop
xchg
pushf
mov
or
neg
pop
loop
jle
jae
fdivl
test
pushl
pusha
add
adc
in
pusha
test
jp
rcrl
es
fs
call
lods
push
inc
gs
jae
mov
pop
lret
pop
mov
flds
repz
mov
mov
loopne
scas
push
cli
adc
dec
movsb
mov
xor
out
fimull
imul
repnz
mov
jbe
out
add
fmull
bound
dec
test
aas
xchg
cmp
xor
daa
mov
fbstp
dec
sahf
xchg
lahf
push
ja
cli
jbe
inc
aam
neg
call
insb
testl
jg
xor
mov
daa
xchg
aad
jge
pusha
pop
mov
adc
hlt
fnstenv
cmp
adc
jb
pop
cld
popf
aad
hlt
cmc
add
aam
mov
insl
ficompl
in
jecxz,pn
or
mov
push
adc
mov
je
mov
and
add
pop
stos
aam
ret
push
shr
xlat
in
dec
mov
inc
sub
mov
mov
sbb
push
sbb
insl
cs
cmp
je
mov
popa
bound
mov
ja
lahf
shlb
sub
adc
out
shll
mov
fisttps
cli
push
dec
data16
push
mov
sub
xchg
sarb
sub
jge
or
ss
in
xchg
jecxz
xchg
xchg
ficomps
bound
jo
imul
int
dec
inc
mov
shlb
ret
cmpsl
aaa
mov
jae
jg
inc
lret
jne
sbb
pushf
sbb
pop
xchg
push
sub
scas
ds
stos
sub
ljmp
xchg
shrl
jbe
and
mov
ds
push
lcall
mov
in
outsb
std
repnz
mov
xchg
mov
pop
outsl
mov
dec
scas
jg
jne
jg
mov
xor
or
sub
lods
sbb
xor
rorl
adc
sbb
sbb
shr
popf
mov
cmp
fcomi
pop
jb
sub
fcmovne
loop
hlt
dec
jo
push
sahf
ret
add
out
push
push
adc
mov
jno
adc
pushf
add
lret
call
jl
xor
or
fxch
andb
mov
jp
mov
sbb
push
aaa
sub
sbb
jno
pop
ficomps
mov
push
ljmp
outsl
fnstenv
jae
leave
xorl
xchg
repnz
rol
ljmp
sbb
pop
mov
lds
popa
push
pop
dec
hlt
popf
fstpl
out
mov
in
mov
outsl
mov
sbbl
repnz
xchg
cli
test
xor
dec
stc
mov
sti
sub
enter
lcall
push
sub
daa
pushf
add
popf
xor
mov
imul
nop
sub
lds
call
push
sub
xor
sarl
clc
adcl
inc
test
pushf
sbb
or
das
push
pushf
mov
dec
mov
jg
mov
popf
out
iret
fst
mov
sub
mov
jecxz
mov
int3
mov
jp
icebp
lods
mov
pop
sbb
mov
sti
sub
or
xchg
xchg
mov
mov
test
sbb
fistpl
dec
std
jbe
or
test
maskmovq
testl
jnp
push
pushf
xrstor
xchg
push
adc
mov
xorl
lahf
sahf
loope
ret
pop
pop
loope
jae
sub
clc
repnz
inc
out
or
cmp
stos
mov
fdivl
or
and
lds
mov
adc
or
xchg
xchg
vpshuflw
das
cmp
and
out
sbb
mov
aam
xor
mov
and
sub
inc
xchg
mov
aam
std
and
jo
into
adc
xlat
or
ljmp
dec
std
hlt
fbld
rclb
stos
push
test
xor
sti
sbb
pop
imul
jmp
sub
loope
jb
ret
pop
ljmp
push
or
mov
jbe
lahf
dec
inc
push
push
push
in
xor
loop
or
pop
jns
sub
test
adc
das
mov
push
popa
mov
and
icebp
imul
xchg
jmp
xchg
scas
rcl
imul
out
das
sbb
test
inc
inc
ljmp
in
or
cmp
push
out
inc
mov
jne
push
jae
scas
or
add
jae
mov
lret
add
outsb
mov
and
pop
mov
mov
fisttpll
hlt
call
pop
popa
lcall
mov
ljmp
xlat
dec
mov
test
test
js
xor
sub
jmp
pusha
dec
inc
xchg
jmp
inc
push
repz
jbe
mov
mov
dec
movsl
inc
jecxz
aas
xor
push
cmp
mov
icebp
xchg
fbstp
jl
data16
popf
inc
fildl
sub
jbe
and
mov
jl
mov
xor
pop
dec
push
adc
cmp
addr16
adc
mov
fbstp
ja
jecxz
sub
and
xor
insl
xor
lds
mov
push
mov
inc
shlb
jl
add
in
in
aad
pushw
mov
cltd
dec
push
pop
push
and
icebp
or
xor
movsl
jl
in
push
enter
xchg
cmp
mov
and
xor
leave
call
pop
mov
push
xor
sbb
dec
pop
adc
out
dec
ret
cld
repnz
lret
jp
leave
sub
or
push
gs
cmp
push
cld
lods
in
sub
bound
popa
int3
popf
push
sar
add
and
sub
fucom
les
jno
movsb
xchg
add
dec
pop
push
mov
mov
jno
mov
dec
add
movsb
sbb
lods
daa
xor
dec
sbb
popf
and
lea
data16
pop
push
lret
ljmp
jg
dec
jbe
pop
movsb
cli
fistpll
sti
mov
dec
fwait
aad
imul
mov
fimuls
lods
xchg
ja
mov
adc
add
mov
sub
arpl
popf
stc
ret
mov
repnz
mov
aaa
xchg
push
cmpsl
sbb
movsb
or
das
je
adc
and
push
out
sub
mov
les
mov
sti
mov
cli
inc
or
pop
cli
jle
mov
movsb
fdivr
push
mov
outsl
lret
in
dec
fcomp
shlb
aam
mov
out
fdivp
xchg
jl
xchg
mov
scas
daa
repz
push
add
mov
nop
out
jnp
lods
lds
push
testl
test
cmp
jg
fistps
xchg
popf
insb
add
mov
addl
std
sub
adc
jl
movsb
jecxz
jecxz,pt
out
hlt
sub
div
xchg
rorl
mov
stos
mov
sub
mov
jl
ljmp
jne
and
das
mov
adc
inc
ret
add
test
sub
dec
insb
jno
lock
or
xor
js
fs
hlt
jmp
cmp
push
cmpsb
insb
ror
jnp
int3
jns
mov
pop
arpl
lods
jo
sti
xor
shrl
sub
mov
into
jb
fdivp
js
imul
lret
mov
push
sbb
mov
jb
fnstcw
mov
mov
leave
xor
mov
jmp
pop
scas
or
and
jae
xchg
inc
lea
lock
outsl
pop
ljmp
sahf
mov
fnstcw
push
jmp
mov
cmc
jle
repz
dec
sub
das
data16
xchg
adc
pop
mov
push
lcall
negb
aad
ret
dec
xchg
movsb
aam
in
inc
xchg
and
sbbb
jno
cmp
sti
add
ret
pop
sbb
dec
adc
faddl
jns
mov
iret
aad
cli
cmp
xor
leave
lods
xor
outsb
jmp
push
imul
dec
mov
jmp
jmp
mov
mull
fsubl
xor
pop
aam
sbb
mov
push
mov
gs
push
sub
enter
fmuls
cs
mov
xchg
or
mov
bound
mov
xor
mov
imul
sub
jnp
xchg
nop
jae
inc
sub
dec
and
adc
mov
jb
out
push
xor
cmpsl
fcom
dec
aam
pusha
adc
pop
xchg
dec
and
out
sub
mov
test
mov
sub
and
dec
sbb
int
mov
lods
daa
jle
outsb
push
adc
inc
push
dec
pusha
xchg
lahf
jmp
ljmp
xchg
xor
mov
insb
les
into
fcmovne
jb
mov
mov
ds
jns
inc
xorl
add
js
jbe
repnz
test
es
pop
and
xor
and
or
xor
push
mov
test
sbb
and
iret
addl
mov
pop
mov
or
mov
dec
stc
xor
push
add
aam
sbbl
cmpsl
es
enter
jns
cmp
pop
push
or
loopne
cmp
sarb
or
shr
push
ja
shl
sub
mov
adcb
pop
mov
cld
jg
xchg
mov
lea
push
stos
ljmp
pop
xchg
aam
mov
hlt
push
dec
cs
iret
scas
or
loope
jp
mov
pushl
jnp
mov
rcrb
out
mov
inc
sub
and
lea
jle
or
shrb
lahf
xchg
imul
adcb
lahf
pop
and
mov
and
je
fdivrl
mov
sub
or
mov
xor
popa
arpl
dec
sbb
int3
mov
xchg
sahf
pop
fisubl
nop
xchg
mov
push
mov
pushf
push
mov
pusha
adc
mov
inc
fmuls
cmp
mov
jge
cmp
outsb
icebp
stc
dec
mov
out
sti
and
xor
lahf
call
dec
xchg
arpl
push
cmpsb
lret
in
jnp
lret
lret
and
dec
out
pop
inc
nop
inc
sub
jmp
sub
sbb
push
test
testl
mov
pusha
lods
cltd
divl
xchg
test
je
or
imul
cltd
rorb
sbb
outsl
in
cmc
lcall
sbbl
ds
scas
jo
mov
cs
cwtl
jge
pop
lea
adc
dec
jns
ja
scas
pop
inc
pop
and
ret
sub
neg
lcall
in
outsl
xor
jmp
ljmp
mov
add
je
or
mov
mov
xor
push
pop
mov
lock
and
xchg
stc
mov
lret
fldl
push
sbb
push
and
pop
xor
out
xorb
mov
and
rolb
dec
pushf
xchg
mov
push
jp
pop
cmpsb
dec
xor
add
inc
stos
adc
jle
fldl
jl
repnz
pop
adc
jne
add
jbe
inc
sub
adc
imul
insl
incl
pop
mov
stos
adc
mov
popf
sbb
jns
scas
add
mov
ss
std
stos
xchg
mov
ds
adc
rolb
mov
lods
cmp
mov
cli
push
push
je
mov
jae
push
sub
iret
cmc
dec
icebp
mov
insl
xor
daa
fcoml
sbb
adc
loopne
and
xor
dec
push
pop
arpl
mov
popa
mov
jns
imul
xchg
xchg
mov
enter
movsl
xchg
mov
jbe
add
frstor
add
cwtl
push
sub
jo
ret
cwtl
lcall
mov
dec
dec
pushf
xor
xor
lcall
jmp
and
loop
enter
mov
jle
fwait
addb
test
frstor
mov
rorl
pop
pop
jge
sbb
inc
push
ljmp
stos
mov
rcrb
pushf
and
push
in
push
mov
je
int3
vsqrtsd
clc
push
xchg
test
mov
xor
in
add
jge
inc
pusha
aam
jge
or
and
push
in
jo
in
ret
dec
lds
or
loop
loop
xor
aad
xchg
sar
adc
mov
cmp
cmpsl
xchg
xchg
jne
mov
inc
cld
dec
xor
out
aas
cmc
sbb
adc
xlat
mov
sti
enter
push
repnz
nop
mov
popa
cmp
sub
mov
mov
lods
lret
pop
rcr
dec
mov
fwait
sbb
andl
or
pop
xor
pop
pop
scas
in
fimull
add
adc
adc
es
xchg
push
xchg
xlat
arpl
add
sti
aas
xchg
cltd
cmp
cmpsb
rcl
inc
aam
push
dec
or
cmc
in
mov
adcl
inc
and
dec
lock
movsl
or
in
mov
lods
shlb
fs
fsubrp
les
dec
pusha
dec
sarb
pusha
inc
rorl
fstl
fidivs
mov
mov
aad
into
pop
test
jne
ret
or
sbb
lret
fsubl
fstpt
jg
movsb
inc
inc
gs
xchg
scas
out
cmpsb
movsl
cmp
lcall
mov
add
sbb
pop
sub
mulb
loop
push
push
aaa
stos
pop
dec
xor
iret
and
js
jp
es
data16
add
mov
xor
add
cmpsb
push
addr16
mov
shl
sub
mov
movsl
testl
leave
out
or
mov
mov
xchg
and
scas
test
popf
lods
fwait
sbb
jecxz
into
ret
cli
pusha
mov
xor
pop
jo
add
cs
jo
and
and
popf
add
negb
mov
push
mov
call
jae
pop
jge
addb
out
push
dec
adc
push
add
lret
pop
mov
not
test
or
mov
fmuls
decl
ret
rorl
leave
ja
jmp
mov
push
cld
nop
add
sub
and
or
cltd
mov
jne
pop
jb
sub
cmc
pop
in
stos
pop
test
and
pop
test
movsb
jl
pop
negl
test
jp
cmpl
mov
out
repnz
int
arpl
popf
inc
pop
in
and
shrl
xor
cmp
ret
push
in
sti
mov
sub
and
xor
cmpsl
call
cld
fs
aas
adc
fs
gs
jno
mov
mov
popa
test
lea
jmp
js
enter
mov
push
insl
xchg
nop
out
and
imul
bound
or
stos
stos
and
inc
xchg
mov
sub
sbb
xchg
rol
mov
jb
icebp
lods
and
sbb
ds
sub
ret
gs
sub
xor
pusha
pop
aaa
mov
ds
sub
mov
or
add
fs
lods
stc
jno
and
mov
cmp
fldcw
hlt
imul
pop
adcb
in
mov
int
sub
dec
mov
and
mov
pop
inc
scas
xor
leave
sub
nop
inc
lods
mov
jne
xchg
mov
jle
xchg
loop
dec
insb
cmp
imul
icebp
gs
dec
lret
or
add
cmp
ret
in
sbb
negb
push
rcr
cmp
int3
pop
ficomps
sbb
push
jecxz
jp
cmp
shr
add
incb
and
lods
int3
mov
xlat
das
push
pop
fisubs
sti
push
into
add
xor
pop
lret
movsl
sub
pop
pop
inc
jbe
lret
mov
ljmp
ljmp
sbb
push
xor
mov
dec
rcr
int
imul
arpl
pushf
jge
test
idivl
inc
ret
in
daa
addr16
sub
xchg
sbb
popa
sub
shl
loop
inc
ss
loop
aaa
and
scas
and
add
jo
jecxz
cmpsl
out
push
or
xchg
cvtps2pi
cmpsb
mov
or
leave
psraw
icebp
mov
aam
cs
je
fildl
mov
fmulp
cmp
push
popa
dec
aam
scas
sbb
pop
stc
push
cmc
mov
vaddpd
push
mov
into
adc
inc
aaa
aad
call
sub
scas
test
and
fdivl
jns
ja
out
ror
mov
mov
xchg
dec
inc
mov
adc
mov
sbbl
cs
fsubs
mov
cmc
add
mov
pop
xor
out
adc
ljmp
dec
xor
imul
test
dec
dec
sbb
mov
enter
lcall
mov
xchg
jb
cwtl
imull
pop
insl
iret
imull
jbe
push
inc
inc
sti
gs
add
push
dec
cmc
jne
jg
stos
sbb
lods
dec
jmp
movsl
jmp
mov
mov
outsb
stc
out
jns
add
clc
fucomip
sarb
jg
cld
cmpl
jns
scas
cltd
insb
and
push
cmp
dec
call
inc
or
nop
cmp
addr16
inc
push
test
repz
ret
or
and
lock
jge
jno
mov
icebp
mov
iret
pop
cmc
in
shr
push
js
sub
jge
shll
clc
jp
pushf
sbb
aaa
lret
shll
mov
mov
ret
stos
sub
je
mov
adc
ret
dec
and
or
jg
addr16
jbe
mov
jl
insb
orl
adc
jp
sbb
mov
imul
adc
xor
push
mov
lock
lock
push
mov
jne
pop
push
xor
lahf
adc
addr16
xorb
cmp
adc
ss
dec
iret
test
push
fsts
jge
mov
xor
mov
add
jno
mov
scas
mov
out
or
xlat
mov
and
lahf
xor
je
xchg
out
push
mov
adc
pusha
sbb
scas
cli
fwait
lahf
xor
push
es
sbb
mov
pop
ss
xlat
mov
arpl
loop
dec
and
out
mov
sub
push
stc
jb
pusha
lret
mov
fildll
sbb
xor
inc
loope
sub
xchg
jnp
stos
sahf
adc
inc
repz
loope
sbb
xor
fimuls
icebp
sarb
sti
mov
clc
or
mov
pop
mov
mov
mov
leave
push
xchg
into
jl
into
jge
sbb
xchg
rep
fs
pop
icebp
add
or
inc
hlt
repnz
pushf
imul
repnz
imul
movsl
out
dec
pop
xor
lds
adc
shlb
std
rcll
je
ud0
outsb
clc
adc
insl
cmp
sbb
jbe
jno
mov
imul
popa
aad
enter
mov
mov
out
mov
outsb
sarb
cld
psllq
cmpsl
mov
es
fildl
sbb
ja
cmp
push
xchg
xchg
stc
mov
push
or
sub
mov
xchg
sbb
pop
pusha
movsl
leave
aas
fimull
cmp
rcr
xlat
das
mov
jecxz
mov
pop
bswap
add
sbb
ja
imul
in
xchg
roll
jae
shrl
add
fs
mov
into
lock
cmpsl
mov
cmp
or
lods
sub
out
xchg
aam
add
jp
mov
into
pop
mov
mov
sub
pop
jle
jae
nop
imul
fldl
popf
push
cmpsb
fs
outsb
xchg
imul
imul
sbb
mov
push
dec
out
bnd
shlb
and
fsubr
cli
jmp
roll
add
into
insl
sbb
call
add
dec
mov
outsl
xchg
pusha
push
data16
lcall
jb
push
sbb
daa
or
mov
adc
push
ja
sbb
test
iret
push
mov
loopne
out
pop
in
in
inc
and
adc
push
test
dec
adc
stc
xorl
or
sbb
aas
popa
in
cmpsb
mov
jge
sbb
ret
cld
cld
inc
in
shrb
push
xchg
sbb
mov
mov
ja
pop
test
jnp
add
sahf
xlat
mov
leave
cmpsl
daa
pop
jp
int
jge
nop
call
jp
jns
sbb
mov
mov
nop
xor
mov
lds
sub
movl
xor
jb
pop
ljmp
adc
jmp
repnz
fbstp
into
mov
push
xlat
adc
in
push
pop
cmp
int3
mov
push
add
in
in
add
jmp
test
lods
mov
lret
adc
fstps
and
loop
call
mov
lock
cmp
jecxz
sbb
popa
inc
mov
in
xchg
popf
jecxz
pop
hlt
loopne
addr16
ffree
or
mov
scas
leave
pop
xchg
test
dec
je
in
vdivsd
daa
fstp
icebp
ret
rcl
data16
inc
loope
mov
adc
push
sbb
mov
movsl
nop
sahf
cmp
xchg
das
jl
pop
jle
push
in
push
les
lcall
rcrb
rcrl
loope
lea
sbb
or
aam
pop
push
out
testl
add
dec
mov
pop
or
fs
xor
fidivs
sub
cmpsb
xor
loope
jae
dec
jnp
jmp
in
inc
aam
scas
jb
jl
rcll
cmc
xchg
insb
lret
or
mov
mov
dec
xor
rcll
in
rclb
jne
or
cld
mov
cmp
and
add
repz
xchg
ret
loopne
mov
sbb
and
popf
mov
jno
push
loop
icebp
loop
add
or
jge
aam
mov
aad
dec
icebp
xorl
icebp
mov
or
cmpsb
adc
das
push
sub
mov
mov
pop
lock
insl
cmp
pushf
pushf
scas
add
push
mov
pop
std
or
xor
push
in
loope
cmp
sub
pop
popf
mov
repnz
outsb
popa
xchg
sarb
lods
outsb
inc
mov
sti
inc
mov
cltd
inc
test
jno
sbb
and
cmp
mov
or
in
pop
sbb
mov
dec
or
jle
add
jge
mov
cmovs
or
push
sti
lret
data16
inc
ficomps
bound
or
sub
cwtl
pop
pop
inc
jmp
les
push
or
ljmp
cltd
jp
out
push
out
movzbl
inc
sti
or
leave
xchg
dec
in
fcmovbe
push
jns
push
jno
scas
jbe
and
jg
xchg
cltd
dec
sub
cwtl
jae
lods
mov
gs
inc
sarl
mov
in
jne
arpl
fsubp
inc
inc
popa
pop
mov
lods
sub
cs
jns
xchg
add
faddl
js
popf
xchg
adc
and
xor
mov
xchg
js
bound
push
push
jl
sbb
dec
addb
movsb
add
fdivrs
and
push
cld
bound
lea
add
pop
push
jo
jne
mov
out
pop
enter
xlat
setbe
pushw
fdivs
sub
ds
dec
jne
jl
sbb
push
add
xchg
jecxz
xor
jl
repnz
fidivrs
inc
push
shll
push
sub
or
call
fwait
or
into
outsl
outsb
les
jo
dec
sub
dec
push
or
hlt
jns
movsb
sahf
sub
imul
popa
inc
icebp
xchg
dec
mov
jbe
sub
ljmp
push
in
xlat
adc
ret
push
xchg
mov
insb
xchg
std
cmpsl
mov
stos
rcr
ror
repnz
adc
push
rcrl
dec
mov
xchg
loop
push
movb
pop
adc
add
loope
jp
arpl
jge
inc
mov
push
jo
sti
dec
mov
cmp
repnz
push
int
push
ds
sub
test
fistps
mov
mov
xchg
mov
dec
clc
aam
push
insl
or
push
jnp
mov
ds
inc
xchg
iret
orl
adc
insl
inc
lcall
xor
dec
fbld
add
xor
adcb
les
jnp
push
push
jns
mov
es
mov
bound
and
and
push
mov
aas
aaa
nop
sbb
icebp
pop
mov
out
adc
mov
adc
popa
pushf
cmp
sub
shr
xor
sbb
movsl
or
repz
lock
pcmpeqd
cmpsb
jmp
lods
popa
cmp
ds
dec
in
lret
in
shll
inc
jne
xor
cmp
mov
sbb
jb
push
xchg
lahf
jne
je
je
mov
cmpsl
je
and
push
sahf
outsl
lods
push
jge
jg
out
xchg
mov
dec
mov
fisttpll
lahf
cmp
dec
sub
fidivl
ret
lock
adc
repz
mov
out
mov
sti
sti
cmpsl
jle
and
adc
mov
out
or
inc
repnz
icebp
lea
pop
mov
scas
lcall
sub
mov
into
std
sub
xor
and
sahf
rcll
mov
lea
mov
push
cmpsl
mov
test
xchg
repnz
adc
mul
xchg
fsts
sti
loope
outsb
or
ja
data16
int
mov
js
mov
or
in
push
stc
out
inc
mov
out
inc
mov
and
repnz
jmp
xchg
push
push
insl
lods
mov
xor
pop
mov
jne
je
jbe
xlat
mov
mov
addl
mov
shrl
ret
test
js
lahf
in
aas
hlt
cmpl
cli
outsl
inc
shlb
push
push
pusha
popa
cwtl
sbb
sbb
bound
mov
xlat
pop
dec
je
cwtl
stc
sbb
inc
and
repnz
or
or
sbb
dec
mov
pop
rcrb
or
push
fistpll
jl
ja
xchg
cwtl
mov
and
ss
test
hlt
pop
sbb
jne
add
jbe
fdivrl
loopne
and
lock
or
sub
push
inc
pusha
call
dec
std
adc
mov
aas
xor
add
test
and
rcll
jae
mov
pop
popa
lea
xor
or
and
cmc
call
pop
sahf
mov
hlt
add
xchg
out
mov
enter
insb
inc
daa
inc
imul
and
jae
push
aam
or
push
and
pusha
push
push
jne
daa
cmp
mov
adc
xchg
leave
int
repnz
jmp
dec
lahf
mov
test
adc
fwait
xor
jle
pop
inc
andl
lods
rclb
rcrl
jae
inc
sub
mov
mov
sbb
mov
jns
lods
jb
add
movsl
xor
or
sub
andb
into
sbb
inc
mov
push
inc
ja
bnd
ficomps
mov
xor
movsl
cmpsb
out
push
inc
sub
push
cmp
xor
je
sub
xor
repz
inc
xor
iret
hlt
xchg
into
ret
push
cmp
inc
xchg
hlt
adc
inc
fsubs
push
cmpsl
jnp
adc
inc
mov
lret
cs
inc
out
es
in
and
in
dec
aaa
outsl
fisubs
fmul
inc
adc
push
and
sub
adc
clc
sub
call
movsb
push
shlb
aam
xchg
cli
das
test
adc
movsl
icebp
inc
pop
mov
imul
sahf
int3
mov
pop
outsb
sbb
jns
inc
add
mov
out
ja
insl
fmul
insl
dec
push
jb
or
js
insl
aad
jle
movsl
mov
push
mov
adc
sub
movsb
mov
xchg
pop
int
dec
inc
sbb
xor
lea
cmp
pusha
push
dec
jp
fnstsw
fwait
push
mov
out
dec
enter
cmp
inc
test
repnz
int
bound
mov
xchg
enter
pusha
outsl
aas
or
jmp
mov
mov
loopne
sub
fwait
out
mov
jae
mov
lret
jle
dec
mov
inc
cld
out
les
jg
enter
xor
inc
sti
pop
leave
es
adc
cmp
add
xor
bt
test
mov
push
outsl
int3
or
arpl
jno
jge
out
fs
push
jmp
inc
pop
int
mov
pop
fst
sub
adc
inc
push
ret
sbb
mov
pop
loopne
and
xor
and
ds
xchg
and
scas
jp
sub
pushf
mov
adc
lds
or
loope
jb
popf
jae
popa
les
and
and
adc
xor
iret
jge
dec
cmp
mov
push
out
pop
cmp
adc
xor
idivl
test
and
ss
or
push
stos
push
js
loope
add
push
and
leave
dec
out
push
repnz
leave
push
mov
push
enter
sti
jl
loope
call
ret
mov
and
xor
or
outsb
test
jecxz
sbb
movq
push
out
std
pop
cmp
or
inc
mov
and
inc
sub
xor
sub
mov
int
cmp
inc
hlt
test
mov
fsubrl
push
vpandn
fidivl
and
xor
push
popa
mov
fdivl
mov
xchg
xchg
and
sub
cltd
xchg
es
push
mov
fsubrs
lock
jb
or
in
mov
cmc
cmp
sbb
sbb
psubusw
xor
in
mov
mov
inc
cmpb
insl
cli
jnp
cwtl
jg
push
push
cli
mov
mov
int3
mov
in
xchg
out
push
mov
fninit
fsubrl
fisttpl
mov
lret
mov
movsl
adc
xchg
in
dec
cmp
dec
into
loope
xor
sbb
mov
subb
fbld
negb
or
add
sbb
aas
mov
fs
jae
das
lock
or
sbb
jae
fwait
xchg
popf
scas
notl
data16
lea
in
pop
sahf
lret
sub
loopne
sub
jge
testb
and
cmp
dec
je
and
dec
filds
dec
nop
out
sub
mov
pushl
psubusw
jbe
ret
sti
fstl
mov
xchg
pop
adcb
movsl
fbld
inc
mov
in
push
out
jle
sbb
mov
call
idivl
nop
rcrb
sbb
fisttps
sar
ljmp
and
out
cmpl
clc
in
push
in
push
bound
insb
shl
enter
movsb
push
mov
cld
mov
ret
fsub
or
int
push
stc
outsl
mov
mov
mov
movsl
push
in
cmp
lock
pop
mov
push
dec
into
into
clc
mov
adc
fsubl
addb
js
inc
and
lock
dec
out
fimull
sbb
push
fmull
push
jb
mov
out
xchg
cltd
or
add
lds
negl
ficoms
int
inc
inc
int
adc
out
lret
je
jne
lahf
push
dec
mov
pushf
mov
rcl
flds
jmp
dec
add
shll
sub
imul
jmp
leave
insb
pusha
test
loop
cmp
jno
mov
movsb
or
scas
mov
xchg
inc
push
cmpsb
in
and
push
push
mov
fbld
pop
pop
test
push
mov
pop
jg
data16
fwait
dec
xchg
sbb
push
adc
aam
lret
mov
dec
pop
add
mov
pop
clc
lea
mov
popa
outsb
mov
cmp
add
xor
push
mov
jg
fisttpl
mov
push
add
dec
jge
lods
scas
jmp
push
test
jb
sub
push
ja
push
xor
push
mov
inc
testl
andl
sbb
jb
outsb
add
lret
push
sbb
ljmp
jmp
push
and
test
xchg
les
mov
jmp
mov
lea
das
in
bound
rorb
ss
mov
lret
adcl
fsubp
mov
ja
xchg
rorb
xchg
inc
pop
lahf
push
cmpl
push
sub
lret
push
push
dec
outsb
in
mov
adc
pushf
lods
outsb
xchg
or
fsubr
xor
mov
mov
xor
fstps
jns
push
push
mov
fsubrs
arpl
enter
cwtl
sub
clc
les
sbb
and
mov
lods
inc
mov
lock
push
outsl
test
popf
jae
inc
and
movsl
jecxz
mov
cmp
das
arpl
pop
xchg
mov
mov
adc
data16
in
xor
dec
sti
into
adc
push
rorb
pop
mov
jne
sti
cltd
outsl
test
lahf
jae
jno
push
add
inc
popf
jae
leave
cmp
cld
pushl
ret
adc
push
ds
mov
xchg
xchg
xor
leave
clc
and
pop
test
mov
lss
mov
jno
in
xchg
adc
call
addl
dec
inc
dec
in
push
mov
jmp
mov
jecxz
push
sarl
jg
cltd
je
sti
push
stc
sbb
pop
pushf
ss
or
push
fwait
cmpl
xor
test
scas
jp
outsb
mov
lods
leave
jmp
fdivrl
pop
sub
scas
xor
inc
ja
jno
enter
rolb
jo
sbb
fmull
lea
jmp
sti
ljmp
xchg
and
outsb
jnp
xchg
xchg
loope
push
fwait
jae
mull
xor
sub
push
inc
cmp
shrb
or
cwtl
pop
sbb
stc
mov
lods
loopne
sub
aaa
cmp
add
je
cmp
mov
lods
mov
fiadds
or
icebp
or
sub
bound
add
arpl
add
xchg
std
push
scas
int3
loopne
push
test
out
ret
sub
int3
inc
inc
fistpl
icebp
shl
fwait
mov
lahf
lock
ljmp
bound
scas
sub
cmp
icebp
xor
inc
in
fisttpll
icebp
mov
dec
daa
fsubrl
pusha
push
and
xchg
popa
mov
lods
mov
mov
out
out
pop
repnz
loope
push
shrb
js
inc
bnd
jle
repz
pop
cmpsb
push
pushf
js
xor
or
ss
mov
add
popf
lret
fstpl
movsl
ret
xor
mov
jo
mov
or
cmc
jnp
xlat
lock
sti
iret
lret
clc
xlat
xlat
sbbb
lock
jne
or
add
addl
pop
xor
lods
add
adc
or
int3
insl
push
mov
rcrb
cmp
in
mov
mov
fists
sti
pop
xchg
jl
pop
iret
cmp
sbb
push
inc
mov
std
cli
cmp
clc
mov
mov
pushf
xchg
push
adc
fs
push
adc
aad
mov
add
out
mov
mov
lcall
stos
inc
xlat
mov
dec
dec
cmp
enter
pop
add
inc
sarb
jns
test
and
hlt
mov
push
push
sahf
inc
jo
adc
fistps
jbe
movsb
pusha
mull
inc
mov
les
dec
and
cmp
jno
je
lods
push
inc
and
sub
into
leave
and
repz
lret
cmp
lods
rclb
pusha
cmp
inc
pop
fidivs
dec
outsb
imulb
sbbl
push
xlat
pop
shrl
pop
imul
jb
es
movsb
xchg
es
es
add
loopne
imul
adc
jecxz
cmp
pop
sbb
pop
lds
sbb
inc
push
dec
shr
mov
cmp
mov
sar
or
inc
out
cltd
lret
stos
inc
lcall
sub
xchg
pop
in
into
push
inc
les
in
mov
inc
mov
push
mov
push
outsl
jnp
mov
rcl
fiadds
mov
xor
fistps
cld
andb
ret
fwait
pop
test
sbb
push
lods
push
or
or
inc
cld
mov
cmp
mov
into
test
loopne
insl
enter
cmp
push
leave
test
cmp
jg
and
ret
shlb
movsl
adc
cltd
mov
fcompl
imul
xor
xor
into
pop
xchg
ljmp
shlb
ljmp
or
leave
pop
ret
mov
ret
or
cmp
push
and
adc
push
pop
and
imul
test
aam
sbb
pop
pop
sub
out
inc
in
xor
pop
add
movsl
push
dec
clc
out
xor
test
xor
addr16
jmp
xchg
bound
and
mov
fs
lock
jge
pop
push
push
sub
cmp
loopne
dec
sub
cwtl
sbbb
rolb
dec
les
and
and
aad
enter
ds
movsb
in
push
mov
pop
ljmp
inc
mov
mov
in
pusha
les
int
pop
test
ja
cmp
dec
lahf
jecxz
xchg
sbb
add
mov
jnp
lret
push
ljmp
sbb
movsb
sahf
repnz
jp
sbb
in
push
enter
jae
icebp
pop
pop
sub
sarl
rcll
cmpsl
mov
jnp
imul
pusha
in
inc
cmp
or
sarb
lods
mov
mov
aam
xor
dec
arpl
xchg
mov
cltd
sarb
stos
iret
fdivs
fmulp
sub
in
negl
mov
aad
out
movsl
imul
fcmovnbe
sub
and
les
sub
lret
mov
bound
fcoml
xchg
jae
scas
push
adc
push
xor
cmp
test
push
cli
add
pop
jp
clc
std
faddl
cs
mov
pop
sbb
cmc
pop
mov
outsl
jb
hlt
mov
jo
into
imull
pusha
ret
out
packssdw
xlat
sti
pop
push
jmp
test
test
jl
dec
loop
dec
push
mov
daa
loopne
inc
dec
push
movsl
movsb
outsb
jg
in
test
mov
data16
inc
sub
jno
mov
mov
ret
sub
mov
adc
imul
xor
dec
sub
stc
aad
loopne
aam
ret
aas
aad
and
sbb
and
jge
cwtl
jno
and
sub
push
or
je
rcr
pushf
in
cmp
insl
or
mov
xor
push
repz
pop
mov
bound
add
xor
insb
gs
jecxz
pop
sbb
call
cmpb
stc
xor
mov
enter
aas
cmc
lahf
push
jb
mov
dec
pushf
inc
subl
jns
mov
push
loop
and
or
cmp
je
popa
sbb
mov
insb
jb
cwtl
xor
call
adc
shrd
pop
inc
mov
fistpl
push
shrb
lcall
sub
xchg
pop
or
sbb
or
sbb
add
aad
cmp
xchg
push
cmpsb
mov
rcrl
adc
add
fisttpll
cmp
fstps
push
xchg
jl
popa
stc
popa
idiv
ja
jp
fisttpll
out
fwait
jns
add
adc
mov
ds
je
cmp
cmpsl
cmp
fsubrp
sub
ja
inc
shll
push
lods
andl
jle
mov
push
cld
jae
jno
scas
inc
adc
mov
mov
pop
out
sub
push
cwtl
lock
mov
lret
out
mov
pop
pusha
mov
imul
mov
hlt
test
stc
xor
pop
adc
dec
pop
sbb
push
adc
add
mov
jno
push
sub
xchg
inc
pop
loopne
add
xor
pop
and
daa
or
mov
xchg
ss
xchg
repz
jo
jno
mov
dec
or
adc
cld
iret
lea
fistl
daa
mov
mov
pop
loopne
movsb
fwait
sbb
decl
lds
test
pop
cmpsb
and
inc
xor
jb
adcl
add
je
mov
or
xchg
adc
shlb
fucomip
fwait
dec
fyl2x
shlb
and
loop
xlat
mov
fdivs
mov
shrl
sub
sbb
xchg
push
mov
fisubrs
xchg
xor
ret
sub
push
xchg
arpl
jecxz
push
sub
imul
mov
and
or
and
mov
in
adc
lcall
jg
jmp
sbb
lret
jecxz
aas
xchg
sbb
sub
xor
mov
scas
out
cmp
sbbl
adc
ja
fs
ljmp
mov
fwait
insl
lret
sbb
pop
outsb
cmp
xchg
movsb
scas
sbb
fwait
mov
test
gs
dec
pushf
arpl
cli
call
jp
stos
mov
stc
xlat
lcall
mov
mov
adc
daa
pop
repnz
pop
xor
or
mov
and
repnz
clc
mov
test
mov
xor
les
es
dec
cltd
mov
lods
pop
js
stos
lods
fadd
sarl
sbb
xchg
repz
push
lea
test
push
jns
aas
aam
adc
xchg
gs
fs
outsb
jb
popa
pushf
pop
negb
pop
ret
lahf
pop
mov
outsb
cmpsb
lea
popf
addl
jmp
mov
test
jl
sbb
ret
ficompl
stos
xor
cmp
insl
out
xor
out
insl
cld
fiadds
movsl
stos
stos
test
add
and
rclb
ffreep
mull
rol
aam
sbb
add
fwait
jmp
sarl
and
in
std
daa
clc
or
cmpl
sub
xor
daa
mov
mov
cmp
cmc
insb
leave
or
xor
push
in
nop
add
add
int3
add
pop
sbb
movsl
push
push
and
mov
into
xor
and
or
inc
flds
mov
sarl
insb
add
inc
inc
push
mov
inc
xor
sub
dec
daa
add
mov
jne
dec
dec
push
testb
in
mov
sub
subl
pop
xchg
sbb
pop
mov
pop
cmp
pop
repz
imul
test
popl
leave
jg
stos
insb
enter
jmp
jns
inc
scas
leave
das
mov
push
es
movsl
sub
les
ljmp
xor
ss
lret
sti
mov
fcompl
xor
cmp
rcrl
call
sbb
push
xor
std
enter
push
test
out
add
aaa
out
pop
clc
movsb
mov
movsb
fdivrs
clc
dec
xchg
mov
out
fisubrl
mov
push
outsb
sarb
xchg
daa
adc
es
lds
jp
dec
loopne
stos
xchg
push
ja
cmp
push
test
mov
fdivr
out
sbb
mov
xor
es
mov
dec
dec
das
testl
cli
ss
push
cmpsb
movb
dec
addr16
add
and
scas
and
xor
and
push
push
push
sub
xchg
ret
mov
mov
shr
cli
loopne
push
mov
sub
mov
push
xchg
jno
call
repz
repnz
cmp
lahf
arpl
das
fdivrl
adc
cltd
lock
aam
push
mov
std
insb
mov
pop
inc
mov
fucomip
lds
test
leave
push
xchg
xchg
enter
std
dec
mov
mov
popf
or
inc
insb
xor
add
enter
ret
dec
cltd
sbb
ret
xchg
clc
or
pop
lea
int
xor
xlat
and
jb
xor
mov
in
mov
jbe
add
pop
cmp
add
jl
insl
adc
sub
lcall
cmp
and
jecxz
xor
outsl
aaa
mov
mov
or
push
cmpsl
mov
pop
icebp
cmpl
or
scas
ljmp
roll
lods
push
sbb
pop
xchg
sbb
pop
mov
int
repnz
adc
or
fxch
inc
out
inc
sub
pop
mov
cli
ja
jle
ja
pop
fldcw
mov
pop
cmpsl
mov
mov
test
mov
sub
inc
adc
lock
xchg
ror
incb
outsb
int3
sub
and
mov
ret
jl
cli
int
lahf
dec
cld
jmpw
icebp
and
test
mov
sub
and
xchg
aas
fsubr
mov
sbb
lea
cmp
or
xchg
pop
xchg
sarb
mov
pusha
pop
xchg
clc
ret
test
hlt
mov
mov
dec
sbb
xchg
sub
inc
jl
into
repnz
adc
fsts
xlat
iret
fdiv
adc
dec
dec
pop
aaa
test
cmp
lods
mov
pop
sub
ljmp
and
rorb
and
xchg
cmpsb
xor
out
xchg
or
jno
loope
add
xorb
loopne
addr16
pop
mov
xor
pop
jge
fimuls
sub
sbb
or
inc
mov
clc
or
mov
mov
hlt
add
movsl
loope
and
sub
test
and
dec
fimull
aad
xorl
aad
cmp
lds
jbe
dec
stos
sahf
in
inc
cmp
push
and
pusha
xor
cmp
shlb
cwtl
lea
mov
clc
sub
hlt
jbe
std
mov
xor
mov
fwait
push
subl
bound
xchg
fisttps
std
lods
jmp
and
sti
dec
movsl
sub
sbb
fadd
ret
shlb
jae
out
ret
add
popa
cmp
xor
or
jmp
shlb
mov
push
mov
mov
in
repz
clc
dec
or
aaa
lea
and
add
lds
out
fisubrs
xchg
cmpsb
mov
xchg
xor
mov
nop
cmp
dec
mov
les
inc
int
ljmp
loop
xchg
sarl
jb
pop
fs
push
dec
jnp
and
stos
pop
mov
ljmp
dec
int
sbb
lods
fimull
push
sub
adc
sbbb
mov
mov
mov
clc
mov
leave
adc
jle
jnp
mov
jno
adc
mov
or
jg
mov
stos
leave
mov
sbb
inc
outsl
fisttps
sub
out
jnp
adc
mov
mov
fstpt
rorl
shrl
cmp
inc
idivb
addr16
lods
rolb
movsb
dec
push
arpl
aaa
fadds
push
lret
mov
dec
or
mov
or
insl
iret
or
adc
repz
popf
lock
clc
testl
lret
xchg
testb
popf
mov
mov
lock
cli
sbb
xor
push
iret
stos
sub
push
cmp
and
aam
pop
mov
cwtl
or
and
leave
sahf
loop
lds
add
je
mov
into
cmp
dec
mov
mov
imul
xchg
dec
popf
bound
and
jmp
popf
or
inc
push
jle
inc
cmp
push
push
xchg
dec
inc
into
push
adc
push
inc
or
mov
dec
movsb
pusha
add
sbb
scas
movsl
adc
aas
push
push
sbb
test
cmpsl
in
je
addr16
jns
lea
or
jno
add
mov
enter
popa
out
js
div
aam
jo
mov
xchg
add
sbb
out
mov
and
and
pop
jmp
pop
push
sahf
popa
push
add
push
lds
or
adc
cld
xchg
aad
jmp
cmp
add
dec
xlat
inc
lock
cmp
sub
loop
sub
xchg
xor
scas
stc
sub
push
je
xor
push
roll
imul
mov
mov
xchg
shl
inc
ss
daa
loopne
scas
lods
stc
in
jl
cmpsb
loop
sub
jmp
int3
es
arpl
int3
push
and
or
sub
jmp
cwtl
jg
jp
shlb
push
pop
mov
push
mov
in
aad
push
lea
add
or
jmp
ret
das
scas
icebp
dec
loop
cmpsb
adc
push
aam
jmp
pusha
test
adc
stc
cmpsb
decl
or
imul
mov
cmp
mov
mov
das
std
ror
out
js
pop
mov
add
jno
cs
pop
fimull
mov
insl
xchg
cld
mov
jb
or
cmpl
pushf
cli
pop
or
dec
cmp
out
mov
data16
sbb
push
ret
rolb
lods
inc
cwtl
or
and
ljmp
push
aas
jns
cmp
popf
and
out
xor
shll
cwtl
push
and
inc
or
test
pop
adc
add
lret
mov
in
dec
push
adc
jle
dec
pop
mov
pop
ljmp
xchg
xchg
cmp
into
push
es
fists
inc
push
jg
and
sub
mov
aad
add
sub
mov
aas
mov
decb
lds
add
leave
fcomip
pop
jl
cltd
dec
mov
mov
call
ljmp
sbb
xchg
imul
je
lods
dec
jno
push
mov
and
xor
push
xchg
jge
test
mov
jb
popa
inc
pop
dec
scas
sahf
sbb
movsw
loop
push
adc
insb
test
int3
aam
hlt
and
mov
sub
jno
pop
repnz
negl
dec
icebp
out
mov
call
xor
insl
xchg
mov
hlt
xchg
push
out
pop
cmp
pusha
fdivs
and
dec
pop
mov
cmp
adc
xor
add
mov
add
leave
daa
cmp
outsl
add
and
shl
mov
xor
jge
repz
shll
sbb
xor
sub
lods
mov
cmp
push
stos
leave
test
mov
aam
insb
sti
enter
push
inc
stos
push
add
pushf
xor
negl
xor
fucom
pushf
mov
mov
or
out
orl
xor
pop
stos
mov
jo
mov
mov
inc
mov
iret
adc
shl
ds
mov
xchg
push
fimuls
mov
push
lahf
mov
aaa
lods
scas
push
add
mov
pop
mov
mov
movsl
sub
sub
mov
repz
xchg
outsb
or
stc
mov
mov
mov
mov
sbb
pop
add
loopne
decl
mov
loopne
cmp
scas
outsl
pop
sbbl
out
sahf
rol
pop
add
pop
popa
mov
idivl
repz
add
shl
mov
stc
test
xchg
hlt
jb
or
inc
pop
lret
mov
addr16
es
cmp
lcall
mov
cmp
bound
sbb
cmp
adc
mov
gs
cmp
pop
and
cmp
xchg
fldln2
test
mov
scas
mov
jno
fcmovnb
sti
aam
stos
add
xchg
scas
leave
in
ja
sbb
fs
in
sub
jg
cmp
fs
int3
sbb
nop
xor
adcl
lahf
lret
adc
inc
out
jo
loop
xor
mov
add
stos
ljmp
lods
xchg
movsl
pop
addb
xchg
or
dec
lock
sti
sbb
add
sbbb
cs
cmp
cmc
add
popf
shlb
clc
cmp
es
dec
stos
out
in
jb
or
mov
pop
lahf
xchg
pop
cmp
inc
pop
popa
lret
pusha
jae
shr
sbb
push
pop
negl
dec
std
jg
cmp
loop
cmp
jmp
jnp
cmp
out
mov
jp
scas
add
jl
jp
jge
sub
clc
or
push
pop
les
ss
and
aas
sbb
lfs
inc
fwait
ror
fdivrs
sbb
repz
test
push
test
lods
mov
int
scas
cli
lock
inc
in
jno
inc
sbb
lret
adc
add
pop
mov
push
jle
hlt
xchg
add
pop
sbb
cwtl
loop
adcl
movsl
and
inc
leave
fs
lods
pop
addb
data16
cmp
sub
hlt
scas
mov
push
cmc
jle
sub
in
cmp
movsl
mov
xchg
mov
and
mov
iret
add
cltd
shlb
and
jae
stc
int3
sub
popf
or
dec
loopne
mov
shr
sbb
push
cmp
push
jp
fcom
icebp
xlat
pop
call
pushf
rolb
xchg
cwtl
jp
pop
mov
jge
push
inc
ret
dec
inc
popa
int
sarb
notb
lods
jmp
push
loope
xchg
mov
push
fsubl
mov
push
jns
mov
pop
xchg
icebp
dec
or
ficompl
in
mov
sbb
stos
or
int3
movb
cmc
mov
sarl
popf
out
xchg
aaa
es
inc
cmp
xchg
add
cmp
mov
fisttps
pop
movsb
mov
adc
aaa
jecxz
int
popa
push
adc
mov
adc
xchg
addr16
pop
shufps
pop
jg
ja
xchg
int3
int
push
cmpb
add
lcall
ljmp
addl
cli
test
movb
pop
jns
mov
sub
jno
lcall
push
loop
inc
mov
shll
sbb
dec
mov
adc
add
loope
aad
pop
ja
pop
mov
std
std
lret
mov
int
push
insl
adc
aas
mov
lods
push
repz
lea
add
insl
cli
das
rcrl
leave
mov
pop
inc
dec
jnp
add
in
daa
mov
aam
add
mov
sbb
mov
popa
push
pop
mov
inc
push
jae
push
push
call
cmp
dec
inc
mov
lds
inc
fisttpll
adc
gs
pop
test
cs
adc
adc
in
call
cmpl
loop
scas
scas
add
insb
addr16
popa
inc
enter
cmp
inc
jno
jge
mov
pop
push
dec
in
mov
bound
mov
test
cmp
sahf
aad
push
out
stos
sbb
inc
push
enter
and
outsb
roll
jp
sub
mov
fmul
call
add
ret
ljmp
je
push
insb
in
inc
cmpsl
jae
hlt
push
lods
mov
cmp
out
sarb
test
mov
fsubrp
push
lods
cmc
test
jge
cs
adc
push
lods
cwtl
push
loop
cmp
or
gs
test
bound
imul
and
or
jle
and
add
jne
jnp
cltd
inc
sbb
rolb
pop
popf
dec
add
jbe
ja
and
test
pop
std
imul
test
daa
rorl
inc
loopne
clc
out
enter
pop
adc
out
pushf
cmpsb
jecxz
push
dec
mov
std
ret
fwait
adc
mov
push
or
dec
lcall
int3
into
and
push
rcll
cld
xchg
insl
in
xchg
in
xor
out
xchg
add
loope
mov
jnp
out
stos
mov
aas
xlat
arpl
add
sbb
dec
inc
ss
xor
pop
xchg
into
popa
mov
jl
adc
cmc
popf
adc
lds
insl
bound
dec
mov
inc
jb
mov
loope
insl
iret
mov
and
xor
add
pop
mov
shll
sub
call
fstps
add
fwait
cld
jne
jmp
and
jno
add
ret
jbe
pop
stos
sub
pop
lods
iret
push
push
xor
lods
pop
cmp
lahf
dec
jmp
lret
dec
xor
out
jp
aam
leave
push
cmp
aad
inc
out
jl
js
mov
dec
fs
mov
add
sti
sub
pusha
push
fsubp
in
lret
xchg
arpl
mov
jne
push
and
in
test
shlb
inc
adc
enter
cwtl
in
loopne
cli
aaa
inc
movzwl
sub
sarb
stos
lcall
cmpsl
fmuls
test
jno
push
stos
adc
gs
add
mov
push
sbb
or
inc
movsl
mov
lea
inc
icebp
pop
mov
decb
sub
les
rcr
lods
mov
sti
xchg
cli
cmp
pop
int
ljmp
pop
lret
imul
call
cmp
adc
test
push
cmc
xchg
xchg
cmpsl
cmp
test
mov
faddp
push
movsb
or
adc
fcoml
cwtl
xor
push
scas
call
sub
xlat
mov
sub
sub
sub
dec
mov
stc
aas
adc
sbb
clc
jp
mov
pop
shr
xor
and
movsb
add
xor
and
cmpsl
stc
xor
stos
ret
lret
sbb
or
xorb
cmp
fstps
jbe
stc
sahf
inc
fstpl
pop
test
nop
add
pop
mov
xchg
cmpsl
jne
data16
aam
jmp
xchg
test
cmc
cmp
pop
jne
xor
fnstcw
repnz
lret
sbb
xchg
inc
in
lcall
xor
pop
dec
dec
mov
ror
push
dec
push
movsl
dec
cmp
test
xor
mov
lods
popa
inc
push
lret
add
inc
jmp
scas
mov
mov
or
ss
das
jbe
jle
dec
movsb
fwait
das
imul
xchg
pop
mov
push
push
sub
enter
lods
cmpsl
push
cmpsb
mov
sub
mov
test
xchg
scas
mov
mov
xor
pop
cwtl
rcl
stos
andb
add
or
daa
push
or
stos
mov
push
imul
fildll
sub
jmp
adc
ja
mov
gs
sahf
sbb
jmp
add
pop
inc
out
stos
and
push
hlt
inc
inc
jbe
inc
repnz
fnstsw
imul
cmp
loop
sahf
les
jo
mov
ds
jecxz
cmpsl
inc
xchg
in
adc
pop
bnd
aas
xchg
xorb
out
xor
push
mov
or
push
jb
mov
loope
imul
pop
xchg
les
hlt
pop
sub
lods
mov
mov
and
mov
ljmp
dec
enter
mov
mov
std
push
xchg
push
out
fisubl
mov
and
lods
pop
popa
jecxz
or
push
or
add
pop
out
and
sbb
inc
inc
orb
sub
and
int
cmp
out
clc
sub
push
push
xchg
push
out
ds
pop
add
push
mov
mov
scas
xlat
or
cmc
lahf
insl
clc
stc
sub
inc
inc
test
jb
push
sbb
push
push
popa
dec
insb
movsl
pop
stos
scas
or
ret
aas
mov
mov
xor
das
jle
mov
rcrl
mov
fsubr
fmull
imul
loopne
leave
inc
out
arpl
test
in
hlt
ficompl
pop
sbb
rcpps
jmp
mov
or
inc
or
dec
dec
push
inc
gs
loope
cmp
cmp
dec
dec
mov
jbe
or
add
adc
mov
inc
or
pushf
enter
insl
mov
xor
pusha
inc
fcoml
jne
inc
and
jmp
aam
psubusb
int
fidivs
mov
cmp
xchg
pop
mov
add
inc
push
mov
es
movsb
neg
dec
roll
jg
ds
push
mov
movsb
lret
cmc
adc
faddl
push
das
test
out
mov
pop
and
push
mov
sub
outsl
stos
test
shlb
jmp
dec
sub
pop
sub
cli
mov
xchg
add
jge
mov
xchg
mov
repnz
pop
push
shl
nop
filds
inc
scas
fisubrs
mov
shlb
fnstcw
fisubrs
mov
jle
dec
pop
mov
mov
dec
dec
pop
dec
movsb
mov
ja
mov
or
or
mov
adc
movsb
pop
adc
cmp
inc
addr16
popa
xchg
push
and
push
mov
or
add
sub
sahf
pushf
out
cmpsb
movsl
leave
daa
imul
push
push
sub
cld
pop
dec
push
add
xor
fwait
xor
jnp
adc
out
pop
xchg
push
test
popf
movsl
inc
mov
movsl
ret
push
out
or
lret
jns
test
lret
cmp
cwtl
ds
add
mov
inc
pop
shl
movsb
fs
in
divl
jle
adc
cmc
xlat
lods
loopne
stos
sti
or
lds
pop
add
aaa
aas
add
cld
out
and
dec
sahf
sbb
stos
outsb
mov
aas
cmpsb
out
arpl
sub
data16
inc
rcl
mov
popl
into
mov
mov
xor
sbb
rcl
aad
cmp
imul
aam
add
xchg
sbb
loope
mov
ds
pop
dec
call
mov
std
cmp
jnp
bound
iret
outsb
cltd
les
or
data16
stc
sub
fdivrs
mov
push
push
mov
cmpb
scas
sub
int
std
or
lock
out
repz
xchg
pop
mov
sbb
nop
pop
fucomip
ss
xorb
rorb
inc
xchg
or
and
adc
pop
sbb
jle
fsubl
mov
dec
loopne
inc
add
jns
push
mov
xor
mov
pop
jecxz
ret
cmp
dec
jb
bound
add
subl
nop
mov
inc
and
sub
dec
lock
dec
pop
mov
arpl
and
jae
or
pushf
aam
jmp
jle
sarl
es
scas
pusha
cld
in
pop
mov
mov
cmp
mov
stos
push
jno
scas
xor
shlb
ljmp
sahf
aad
pop
ret
push
leave
dec
push
dec
xchg
enter
jbe
sub
xchg
adc
jge
jp
mov
add
mov
xchg
inc
mov
jmp
popl
jno
cmp
mov
stos
add
loop
jns
ja
xlat
outsl
addr16
divl
sub
dec
loope
rorl
jl
lds
xor
mov
jmp
mov
mov
or
or
sbb
adc
icebp
sahf
mov
mov
icebp
jbe
xchg
ficoml
push
and
stos
inc
dec
out
xor
mov
je
adc
mov
adcb
sub
mov
popf
lods
outsl
xor
mov
fsts
je
xchg
push
push
arpl
add
fadd
cmp
fs
adc
insw
and
push
cmpsb
jb
out
push
repz
cld
outsl
inc
es
int3
xor
mov
cltd
stos
adcl
cltd
fucomip
jp
fsub
jae
jge
push
sub
push
sbb
fcomip
jne
inc
nop
push
mov
ror
sub
add
or
cld
add
in
out
dec
movl
mov
mov
andl
js
xor
fsubl
movb
mov
inc
mov
sub
inc
and
jbe
xor
sbb
mov
jne
stc
test
jmp
fs
xor
ds
jne
lcall
ds
lret
dec
repz
mov
sub
cmp
fcoml
repz
data16
mov
jb
jbe
pop
lea
sbb
xor
mov
rcr
push
cmpsl
push
cmp
sub
call
addl
and
xchg
add
cld
and
stos
push
pop
stos
scas
cmp
das
aad
out
jne
push
sbb
add
std
pushf
adc
in
pushf
out
mov
into
xchg
fdivs
mov
cmpsb
ret
mov
cmp
lcall
push
lahf
stos
inc
rcrb
in
or
push
dec
ficoml
shll
int3
mov
xchg
mov
mov
push
add
ja
fistl
lods
fldcw
stos
push
jecxz
mov
hlt
xchg
or
sbb
subl
out
imul
repnz
push
into
sub
xor
or
neg
in
mov
sbb
mov
jbe
sub
addb
cmp
movsb
movsl
add
add
mov
insb
and
fstpl
push
jne
shlb
push
xor
in
jno
mov
sti
jecxz
sbb
adc
jbe
leave
cwtd
lahf
bound
and
mov
test
insl
daa
dec
movsb
jg
jnp
sti
mov
cmp
add
shrb
sbb
and
or
cli
sub
jns
stos
fcmovnb
jno
enter
and
data16
das
leave
or
test
push
shll
ss
pop
enter
in
add
xchg
xchg
inc
mov
inc
js
data16
out
in
shlb
push
jo
push
cwtl
or
fdivrs
xchg
leave
mov
jp
jns
nop
aaa
xor
das
push
movaps
lahf
scas
leave
and
imul
std
lret
add
xchg
fnsave
cmpsl
and
mov
dec
lret
push
mov
addr16
push
sarl
lea
sti
or
inc
mov
ja
sbb
dec
sub
sub
mov
imul
sahf
dec
cld
mov
pushf
mov
in
mov
testl
xchg
mov
push
xchg
test
adc
dec
add
inc
jl
pop
dec
loop
or
cmp
mov
rolb
push
aas
sbb
mov
jge
jno
scas
push
push
push
mov
sbb
icebp
dec
mov
adc
adc
xor
pop
inc
ds
or
dec
sbb
sub
jg
out
nop
dec
inc
add
adcl
dec
xor
jecxz
repz
xlat
lock
lods
push
xchg
xchg
mov
dec
or
sub
faddl
xchg
inc
neg
mov
mov
test
jl
pop
in
mov
std
mov
mov
add
lcall
adc
and
jmp
mov
jmp
loop
sbb
call
xchg
call
decb
inc
lret
ret
pop
ja
push
mov
or
jmp
xchg
adc
js
and
push
xor
jbe
je
sbb
lcall
and
popf
stc
pusha
adc
mov
xchg
xor
mov
sub
jb
xor
mov
repnz
fwait
mov
cmpsl
xchg
arpl
aas
les
cwtl
add
sub
popf
push
loop
movsl
bound
pop
aas
push
sbb
cmp
out
pop
movsb
or
mov
and
icebp
test
cmpsb
sub
mov
cwtl
mov
ret
addr16
test
outsb
ljmp
dec
mov
popl
bound
sbb
jle
insb
insl
xchg
rcr
insl
and
out
pop
vcvtdq2ps
cltd
jb
jnp
fisubs
in
dec
and
pop
mov
pop
jl
push
xor
dec
test
jecxz
movsb
icebp
sub
mov
mov
mov
fucomip
jae
or
dec
lods
or
mov
cmpsl
push
pop
ret
cli
inc
in
sub
mov
call
cmp
jnp
rcl
and
daa
incb
lds
in
and
or
mov
pop
in
gs
cwtl
fldt
sti
mov
rcr
add
cmc
sub
cs
mov
fistpll
mov
icebp
js
sarb
xchg
cs
mov
mov
sti
and
and
test
add
jno
pop
pop
sbb
lods
xor
in
cmp
jmp
in
and
mov
xchg
ficoml
cltd
pop
enter
stos
mov
jbe
shlb
sub
lock
xchg
movsb
and
inc
jge
cli
push
add
sarl
iret
jle
sbb
push
lret
mov
jbe
in
xchg
mov
or
jge
mov
ja
xchg
aas
data16
fcompl
pusha
pusha
and
pop
bound
mov
adc
lods
jmp
jmp
fisubl
sbb
sahf
insl
leave
test
cmp
inc
add
popf
clc
mov
and
lahf
cmpl
mov
outsl
in
scas
aad
jae
jae
dec
adc
fcmovne
das
sbb
mov
cli
sbb
push
stc
popa
add
mov
and
cmp
mov
jae
test
sar
add
aas
adc
les
sbb
pop
push
xor
fstp
les
in
icebp
dec
jae
adc
pusha
adc
js
dec
mov
mov
xchg
pop
imul
sbb
cmc
push
inc
mov
clc
lods
push
incb
sahf
cmp
mov
xor
scas
and
sbb
lcall
xlat
popa
xchg
mov
out
in
push
stc
lock
fbstp
mov
pop
push
loope
in
cmp
lret
pop
or
nop
sbb
dec
xor
and
sbb
mov
lods
sub
fidivrs
mov
jle
dec
xchg
xor
sarb
add
ret
xor
pop
xor
enter
jecxz
inc
adcl
jecxz
addb
mov
xchg
xor
dec
add
sub
lods
mov
arpl
push
adc
loopne
test
sbb
sbbb
bound
sbb
xchg
cmp
mov
in
gs
xchg
mov
insb
cmpsl
mov
leavew
push
adc
js
fisubrs
out
bound
lds
test
dec
movsl
jb
adc
sti
test
cmpsl
cmpsl
iret
pop
inc
xor
push
movsl
inc
and
imul
xlat
cmpsb
dec
repnz
loopne
inc
xchg
dec
sub
xchg
xor
out
mov
dec
lods
jl
sub
dec
add
cmp
stos
jnp
rolb
mov
rcl
sahf
sbb
dec
mov
cmc
daa
push
scas
or
dec
push
stos
cmp
test
das
ror
movsb
cmp
ret
enter
push
bound
xor
sub
jecxz
jns
push
aas
mov
dec
js
int3
flds
lods
cs
xchg
pop
jp
dec
push
push
iret
pop
and
mov
jmp
jmp
mov
xchg
mov
sbb
lahf
xchg
mov
imul
ljmp
int
jne
xchg
mov
add
shr
dec
mov
and
pusha
flds
fdivrs
rcrb
pop
fstps
push
nop
jb
lds
add
mov
cmp
adc
xchg
fnstenv
push
mov
mov
lock
outsl
pop
js
pop
loop
jg,pt
jbe
or
sbb
mov
lahf
ss
ds
or
and
xor
push
pop
add
add
push
cli
lahf
ret
in
cld
mov
xor
and
push
cmp
fists
lret
jnp
out
fidivs
aam
fwait
jo
stos
dec
jb
dec
fcomps
popf
adc
ret
cmp
adc
adc
sti
movsl
and
mov
add
sub
out
sbb
sub
mov
das
hlt
lock
cmp
inc
inc
hlt
lea
mov
int3
xlat
xchg
cmp
cwtl
mov
sbb
lds
lahf
scas
pop
cwtl
push
pop
add
push
sbb
js
not
sbb
mov
or
jb
pop
gs
stos
je,pt
loopne
pop
mov
cld
push
inc
mov
in
icebp
push
dec
sub
sahf
int
sub
cmp
or
je
testb
inc
cmp
jge
arpl
add
leave
das
or
rorb
jp
cmpb
adc
add
fwait
lock
xor
push
stc
dec
lcall
data16
movl
sub
xlat
into
mov
gs
inc
dec
mov
sbb
pop
mov
mov
and
or
mov
lcall
adc
adc
cld
dec
test
out
movsl
pop
fidivrs
out
hlt
mov
cmc
je
sub
imul
ret
dec
sbb
jns
arpl
pop
ret
stos
lret
js
add
push
push
cli
xlat
aam
ds
shrl
and
test
push
dec
jne
jne
xor
outsb
mov
out
pusha
fdivs
push
ljmp
xchg
dec
dec
push
xor
rorl
and
xchg
or
cmp
jmp
push
push
nop
scas
mov
popf
repnz
or
loope
add
unpckhps
jg
xchg
outsl
mov
faddl
mov
addr16
loopne
call
arpl
cmpsb
loop
and
pop
push
xchg
jecxz
and
fld
std
cmc
shr
cmp
ret
xlat
cltd
movsb
pop
mov
mov
push
xchg
movsl
push
mov
arpl
dec
push
cmp
test
mov
mov
test
mov
fwait
add
fsubl
inc
add
pop
shl
cmpsl
jae
lods
fnsave
enter
ja
jmp
js
cmovae
push
sub
cmp
xor
dec
jg
jnp
mull
or
mov
push
aas
loope
in
popa
xchg
in
hlt
mov
mov
add
nop
xchg
mov
jnp
pop
xchg
dec
insb
dec
test
inc
inc
inc
test
mov
ds
ss
xchg
mov
push
push
out
daa
test
cltd
rcll
loop
inc
js
jmp
jge
inc
jb
push
and
jg
pop
or
dec
cmpsb
jl
push
fistps
hlt
xchg
popa
xchg
ss
shll
loope
mov
adc
outsl
pop
xlat
adc
add
push
hlt
mov
pusha
mov
out
or
loope
cld
repz
mov
xchg
lock
mov
adc
repnz
xchg
fbstp
jbe
repz
push
inc
mov
or
hlt
cmovo
push
in
push
sti
cmp
mov
mov
xchg
push
and
dec
mov
pop
stos
mov
mov
mov
lcall
inc
adc
mov
cli
fs
movsb
outsb
pop
mov
fmulp
and
push
loopne
insb
stos
arpl
sub
jle
into
adc
fadds
std
jl
lds
in
cvttps2pi
test
stc
les
cmpsl
or
xchg
loope
insb
jbe
call
and
xchg
test
movsl
in
cmp
adc
xchg
lds
adc
fstl
test
push
dec
jns
test
jp
adc
xor
pop
pushf
sub
lock
xchg
aaa
mov
and
fists
cli
xchg
sbb
movsl
je
mov
in
sub
sbb
mov
out
aaa
mov
mov
scas
mov
movsb
aad
mov
mov
aas
insb
jp
jnp
popa
add
sub
adcb
and
test
and
inc
pop
in
jne
out
add
popa
test
fnstenv
pop
cli
jle
jg
mov
xor
xor
xchg
dec
xor
mov
add
xchg
or
pop
fs
or
xor
int3
popa
ret
mull
dec
insb
sub
add
or
dec
stos
push
adc
hlt
or
in
idivl
jbe
add
imulb
mov
inc
or
cmp
jnp
aad
mov
dec
mov
pop
mov
xchg
iret
enter
push
leave
leave
fisubrs
in
dec
mov
push
cmp
pop
into
loop
push
ret
xchg
test
lds
pop
pop
js
xlat
jge
rcrb
sti
jl
js
add
daa
arpl
xchg
leave
xchg
dec
loop
fistps
stc
mov
jb
add
and
inc
das
test
xchg
and
lret
in
sub
stc
sbb
enter
dec
in
int3
bound
cmpsl
out
negb
pop
ret
shll
push
shrl
in
cmc
xlat
mov
and
cmp
adc
rorl
mov
xor
test
lock
inc
in
shlb
sub
daa
sbb
mov
xor
and
out
sbb
bswap
fs
stos
sbbl
xchg
jp
shl
das
int
dec
arpl
inc
cmpsb
mov
aad
fists
test
pushf
dec
sbb
out
ljmp
push
cmp
lret
out
daa
inc
int
ret
fdivl
dec
pop
mov
or
and
and
pop
cmpsb
and
aas
mov
outsl
jnp
cwtl
xlat
mov
aas
loope
xchg
lock
cmp
iret
je
mov
xor
and
push
push
mov
push
mov
cmp
inc
dec
mov
lret
fwait
push
scas
gs
shl
jae
insb
jo
xchg
xlat
dec
lahf
adc
test
sbb
inc
sub
cmc
add
cmpb
push
jns
dec
xor
ss
pushf
fs
stc
push
sbb
dec
mov
xor
pop
test
jmp
mov
and
sub
mov
mov
sbb
test
jle
mov
sub
ret
inc
js
cmpsl
xchg
xor
jae
push
inc
xor
data16
popa
inc
mov
imul
or
cmc
push
divl
sti
mov
xlat
out
rorl
or
dec
pushf
pushf
cmpsb
loopne
and
cmp
sbb
int3
cltd
sub
or
mov
adc
fdivs
mov
gs
pop
xchg
add
hlt
pop
popf
mov
dec
mov
sti
mov
cmpl
ss
fildl
and
pushf
xchg
jecxz
sub
mov
fdivl
aad
lods
shlb
shll
adc
xchg
xchg
lahf
das
dec
push
pop
jle
cwtl
sub
movsl
adc
sbb
pmaxsw
je
in
cmp
loope
and
aaa
aaa
cmp
testl
sti
inc
adc
sahf
pop
repz
xchg
xchg
fwait
pushl
inc
jb
adc
aaa
fiadds
rcr
cmp
ss
lods
xor
push
push
push
add
sub
xlat
repnz
cmc
out
mov
cmp
shrb
int3
enter
jno
push
mov
in
bound
and
mov
test
xchg
pusha
std
adc
jns
adc
sbb
test
jle
rcrb
inc
push
mov
lcall
inc
incb
and
dec
fsubrl
xchg
fisubl
bound
jb
out
jnp
push
dec
cmp
rcrb
imul
add
sbb
sub
out
les
faddl
pop
mov
adc
out
xchg
inc
mov
cmp
or
loopne
push
push
mov
lcall
jmp
das
dec
xchg
mov
mov
sbb
cwtl
cld
filds
rcll
test
push
sbb
mov
roll
sub
addr16
mov
cmp
push
cmpsl
stos
xor
das
test
andl
stos
or
dec
push
in
pop
dec
test
xchg
fmull
sbb
jp
imul
cmc
out
xor
mov
inc
push
mov
faddl
jmp
and
in
mov
xchg
movsl
ret
cmp
in
jp
rcl
and
and
mov
imul
inc
ror
leave
pusha
xchg
outsl
aam
add
xor
xchg
jmp
cmp
xlat
xor
pop
ret
cltd
jg
mov
scas
pop
ret
enter
mov
loope
xor
push
testl
ret
push
push
notb
outsb
jnp
dec
gs
scas
les
int
xchg
add
mov
mov
or
orl
xchg
dec
add
cwtl
addr16
jecxz
pop
imul
mov
test
testl
jbe
loope
mov
sub
imull
pusha
call
scas
or
je
mov
in
fiaddl
daa
sub
adc
sbb
add
fcompl
sub
stc
fsubl
mov
stos
call
sub
sub
loopne
jae
leave
fidivl
aad
push
push
lods
in
cmp
fucompp
test
scas
mov
int
mov
data16
xchg
sarl
ficoml
lret
jecxz
cmp
sub
enter
mov
cmp
mov
imul
inc
add
mov
stos
sbb
add
push
lahf
ljmp
cld
jbe
mov
je
dec
pop
out
imul
inc
jmp
sub
jnp
popf
xchg
adc
or
lahf
and
adc
mov
call
mov
push
and
inc
insb
inc
jmp
ss
js
lock
or
lret
dec
mov
cmp
outsb
xchg
lea
xchg
sbbb
inc
iret
add
push
cmp
scas
jmp
pop
insl
pop
movsb
cmp
pop
sti
lods
data16
inc
int
scas
sub
scas
push
xchg
mov
inc
pop
dec
js
dec
inc
mov
cmpl
rol
nop
enter
push
and
mov
lcall
add
pop
push
add
out
cmp
jp
adc
mov
cmc
mov
fmull
add
popa
stos
daa
movsl
mov
pop
sub
outsl
jg
jae
fs
inc
add
lret
sbb
lcall
adc
inc
xchg
cmp
icebp
mov
das
test
xor
inc
adc
pop
sbb
lods
jo
mov
dec
dec
sbb
dec
outsb
fwait
divb
out
stos
or
jge
lods
xor
in
xlat
aaa
and
mov
push
cmp
mov
gs
jg
or
jmp
shrl
lods
adc
sti
gs
or
imul
out
mov
dec
pop
outsl
and
push
xor
push
roll
clc
rcll
subb
loope
mov
filds
jne
dec
rolb
addr16
add
sub
sub
aas
mov
sti
inc
lods
cs
adc
xor
pop
in
xchg
jb
lea
jnp
jecxz
mov
push
mov
in
ficompl
jl
adc
adc
incl
cmp
sub
add
sub
loope
gs
out
mov
lods
lret
scas
int3
cltd
neg
insb
fsts
mov
xor
shrl
pop
stos
sub
mov
cli
mov
dec
xor
pop
jns
adc
fisubrs
mov
sbb
lret
out
shll
hlt
pop
sub
mov
decb
insb
addb
xor
jge
jno
mov
cli
in
divb
cmc
and
xchg
mov
test
mov
jne
push
sahf
mov
mov
jg
fnsave
xor
lds
xchg
aaa
pop
push
mov
pop
dec
jmp
cwtl
shr
jmp
pusha
movsb
or
mov
dec
icebp
mov
or
imul
cltd
ljmp
sahf
cs
cmovo
clc
lock
imull
nop
push
xchg
insb
sbb
stos
test
cwtl
sub
iret
add
sub
mov
mov
cmp
lods
sti
ret
dec
ret
push
stc
cmc
and
and
mov
mov
xchg
mov
daa
mov
aaa
stos
test
push
push
lret
mov
mov
jecxz
sub
dec
jno
clc
je
fdivl
cmp
fldenv
or
loope
fidivrl
mov
mov
addb
jo
pop
cmp
outsb
sub
push
or
xchg
sub
push
push
lods
loope
lods
cltd
ds
in
fstps
rorb
push
pop
repz
mov
idiv
sbb
sub
xor
jp
and
in
test
lock
js
insb
fisubl
pop
sbb
jp
dec
sub
inc
clc
jbe
fdivrs
inc
mov
mov
rcrl
add
enter
and
jmp
leave
inc
cmpsb
les
call
clc
or
cli
and
adc
sbb
adc
jl
push
or
sub
jae
outsl
ret
and
iret
aad
in
lds
xor
add
rolb
push
mull
cmpsl
mov
mov
and
insb
out
aad
mov
jecxz
fldl
mov
jae
mov
cmp
adc
xchg
cmpsl
andl
fdiv
inc
push
leave
inc
subl
cmc
sbb
jg
icebp
or
xchg
inc
cmpsl
sti
loope
jp
mov
cmp
pop
xor
fdivl
imul
xor
dec
cmp
mov
add
mov
push
test
mov
push
or
push
sahf
mov
ffreep
mov
shl
pop
sub
jo
or
in
lock
repz
cmp
cmpsb
lds
pop
jae
testl
shl
sbb
cld
xchg
fwait
jmp
stos
in
inc
lret
adcl
jp
pop
jmp
mov
cmc
pushl
push
leave
sbb
push
leave
mov
mov
imul
dec
dec
cmp
or
mov
cmp
pop
cmc
cmp
cmp
fsubs
add
jnp
popf
push
mov
mov
dec
nop
xchg
cwtl
xchg
paddsw
jle
cs
mov
sub
pusha
pop
pop
jmp
pop
or
push
mov
fsubr
test
xor
jle
lahf
mov
sbb
and
and
inc
adc
pop
pop
xchg
std
jg
sub
adc
jb
stos
and
cltd
das
sub
out
out
ret
pusha
mov
jae
dec
test
fwait
adc
movsb
cmpsl
jmp
jo
ja
imul
insb
sub
cli
loop
jp
pop
jp
dec
or
mov
jmp
bound
cmp
int3
xor
loope
stos
push
lds
add
daa
les
mov
sub
xor
jmp
or
cmp
test
cltd
sub
adcl
xchg
aas
aad
jne
add
lds
mov
jp
and
jle
xor
cmc
popf
add
cwtl
or
mov
lea
pushw
pop
call
fldenv
imul
pop
mov
lahf
iret
lret
sbb
mov
jg
cmpsb
push
out
imul
inc
jg
add
xchg
cmp
pushf
sbb
idivb
push
jae
and
xchg
mov
mov
ds
sbb
and
mov
sbb
cmp
rolb
and
orb
lcall
pop
aaa
in
push
push
inc
mov
outsb
fistl
mov
mov
into
or
sub
mov
loopne
lods
stc
mov
push
mov
pushf
xor
push
into
arpl
push
pushf
sub
pop
pop
pop
sub
int
imul
loop
mov
movb
arpl
or
push
mov
pop
data16
data16
mov
xchg
fcmovnu
call
xchg
mov
sub
mov
dec
jecxz
rcl
add
fs
loop
inc
pop
pop
subl
xlat
jae
add
lahf
addb
repz
mov
add
and
dec
outsl
adc
loopne
scas
arpl
mov
jbe
cs
pushf
jecxz
cmpsl
cmp
sbb
cmpl
mov
sub
push
or
pop
imul
pop
cmpsl
flds
mov
push
xchg
sub
mov
dec
aas
imul
mov
les
xor
and
maxps
loopne
and
out
xchg
mov
mov
push
jmp
aam
jo
dec
cltd
sbb
cmp
dec
xchg
fwait
sbb
call
xchg
lock
addr16
push
dec
or
or
rclb
add
push
jg
aas
cwtl
std
add
int
inc
and
outsb
pop
inc
out
insb
clc
loope
pushf
inc
mov
lret
add
dec
mov
mov
and
lock
jbe
add
popa
dec
lods
inc
push
xor
andb
notb
lcall
jnp
push
sbb
jmp
rcll
nop
xor
jbe
test
arpl
inc
inc
lds
lock
add
les
sbb
inc
pop
insl
add
fiaddl
lds
pop
pop
std
test
adc
cld
or
test
jp
fadd
mov
testl
pop
iret
aaa
mov
or
test
xchg
icebp
gs
outsb
dec
mov
outsb
mov
std
arpl
push
pop
push
dec
mov
inc
in
mov
sbb
pop
mov
push
cmp
jne
push
and
ljmp
std
mov
mov
out
push
mov
push
pushf
mov
adc
es
lods
dec
loop
scas
pop
js
push
loope
mov
mov
movsb
cltd
flds
arpl
or
jbe
or
sub
push
repz
mov
lcall
push
mov
mov
jp
sbb
stos
mov
sahf
cmp
rorb
popf
mov
dec
mov
pop
pop
cmp
push
push
or
pop
ss
xchg
test
and
jo
mov
aam
mov
out
test
mov
mov
test
stos
sbb
std
mov
ja
adc
dec
dec
out
mov
jae
and
add
jle
bnd
repz
insb
imul
in
xorb
lret
mov
popf
mov
sbb
dec
cmp
pop
icebp
or
adcl
jnp
clc
dec
fisubrl
ret
jo
scas
xor
push
rcll
adc
push
inc
or
add
xchg
sbb
fs
dec
addr16
sbb
add
arpl
mov
hlt
lret
push
sbb
shrl
insb
lea
lods
jno
xchg
jb
cli
mov
rol
insl
cltd
ret
xchg
je
and
mov
repz
mov
pop
shrb
cld
stos
dec
aam
lret
pop
and
or
cltd
sar
repz
ljmp
pop
lods
xor
push
aad
sub
sbb
clc
repz
sub
lahf
in
out
std
notb
cltd
popf
push
outsb
xchg
cmpsb
ljmp
xor
sbb
pop
pop
xchg
jns
nop
sbb
jg
data16
push
mov
inc
in
lcall
adc
fnstenv
dec
dec
scas
push
andl
pop
gs
push
loopne
inc
mov
jns
push
sbbb
incb
rorl
cmpsl
cmp
push
subb
iret
push
scas
lock
cmc
or
inc
sub
xchg
dec
lock
std
mov
cmc
pop
sbb
rclb
aas
dec
or
cli
and
mov
mov
stc
jb
ds
adc
cmpsl
test
gs
xchg
inc
in
sbb
repz
nop
push
clc
testl
dec
dec
in
pop
or
outsb
fisttpl
ljmp
nop
sti
push
xchg
pushf
jbe
out
push
adc
dec
loopne
sbb
outsl
clc
jge
repz
test
imul
push
mov
and
mov
pop
jo
xor
test
fistps
push
jle
mov
cs
add
les
pop
out
aam
and
dec
lods
fmul
outsb
push
sbb
mov
jl
sbb
push
in
adc
jmp
xor
inc
cmp
cs
pop
mov
cmp
xor
adc
push
adc
jge
dec
icebp
aam
xchg
mov
insl
xchg
packuswb
les
int3
orb
pop
add
shlb
flds
arpl
inc
sahf
hlt
dec
xchg
addr16
cmp
lcall
fwait
xor
jne
add
arpl
subb
test
pop
mov
cld
push
push
push
mov
jge
stc
gs
inc
mov
push
mov
dec
aaa
adc
outsl
arpl
xchg
mov
jecxz
mov
lock
inc
sub
insl
mov
ss
mov
mov
je,pt
mov
mov
pusha
loopne
icebp
arpl
stc
mov
jmp
and
mov
cld
imul
push
mov
mov
sbb
mov
sbb
push
dec
push
dec
std
dec
and
fcoml
mov
sbb
shrl
scas
and
cld
add
lahf
jb
data16
icebp
mov
sub
xor
or
jge
cmc
testl
pop
daa
cmpsb
cmpsl
mov
or
cmp
out
mov
mov
sub
inc
xor
inc
cmpsl
push
popa
jne
cmp
sbb
lods
mov
xchg
dec
cld
rolb
cmp
inc
std
jb
mov
xchg
add
insb
xchg
mov
fisttpll
add
js
mov
imul
mov
and
jmp
adc
scas
adc
fwait
imul
repz
mov
dec
out
aam
hlt
sub
shl
flds
and
ds
mov
sahf
add
lds
xchg
ret
stc
mov
sbb
imul
mov
lea
push
mov
inc
sarl
nop
rcl
jae
mov
into
sbb
mov
cmp
push
xor
lahf
sub
into
sub
push
inc
ret
sub
cmp
cmpsl
mov
outsb
mov
pop
inc
cmc
icebp
ficoml
pop
and
xchg
mov
mov
or
out
nop
sub
stos
cmp
call
xchg
sub
dec
pop
and
xor
mov
xor
jge
ret
arpl
das
repz
std
push
push
loope
mov
fld
pop
xchg
adc
adc
mov
dec
cs
xor
and
mov
test
js
dec
jnp
pop
inc
jmp
mov
fs
cs
jb
or
add
sbb
mov
call
pusha
mov
test
out
call
into
jge
and
push
push
loopne
xor
iret
in
pop
imul
imul
pushf
repz
les
outsb
sti
and
movsb
sub
inc
lock
fsubl
or
cmp
sub
sbb
dec
push
lock
decb
imul
shl
movsb
scas
scas
sbb
sub
mov
push
dec
xchg
ja
or
shll
imul
mov
mov
mov
cli
loop
cli
sub
add
jl
mov
sub
cmc
ror
arpl
arpl
stos
jp
repz
mov
iret
pop
mov
sub
pop
aaa
xchg
and
dec
repnz
pop
movl
call
push
lret
jnp
frstor
lods
ds
adc
xlat
push
xchg
or
aaa
ffreep
leave
sub
xchg
ds
xor
pushf
cmc
cmpsl
cli
call
jp
xchg
mov
shll
push
sbb
push
mov
add
popf
mov
push
push
xchg
mov
pop
pop
mov
mulb
cmp
loope
frstor
xchg
movsb
filds
loop
jmp
pop
inc
and
lahf
mov
xchg
pop
mov
dec
sbb
dec
sub
dec
jle
push
lcall
pop
fsubs
mov
and
in
cwtl
daa
ja
xchg
and
cmpb
int
jl
test
rclb
mov
push
call
and
movsl
sbb
or
or
xchg
adc
mov
adc
jecxz
xchg
loop
icebp
hlt
sbb
data16
in
add
mov
jle
pop
or
jmp
pop
arpl
and
sar
adcb
push
rcr
push
shll
stos
inc
jl
ss
inc
dec
clc
jmp
push
addr16
movsl
adc
jge
aam
inc
popa
mov
ss
andb
adc
adc
out
js
movsb
lods
mov
add
add
fwait
inc
subl
mov
fs
inc
mov
loop
ss
or
sbb
lods
push
pop
andl
in
xchg
xchg
xchg
xor
adc
or
data16
pushf
test
sub
aad
mov
pop
jg
incl
dec
pop
in
add
mov
sbb
or
cltd
out
pop
inc
xor
mov
sbbl
cwtl
ja
and
dec
mov
jle
add
enter
fcomip
mov
repnz
lret
in
inc
sarl
out
scas
iret
call
clc
inc
out
lds
cwtl
addr16
jecxz
cwtl
or
icebp
xchg
sub
adc
and
jmp
mov
cmp
pop
fwait
or
and
shrb
mov
stos
out
pop
insl
and
xlat
std
cli
xchg
add
sub
iret
dec
imul
fistps
jp
inc
bound
adc
aaa
bound
fst
mov
cmp
sub
adc
fimull
and
mov
sub
or
jne
mov
inc
cmp
lds
jo
dec
ss
mov
pop
sbb
fwait
mov
xor
popf
nop
pop
mov
icebp
ret
lods
les
mov
das
ret
decl
jp
mov
mov
hlt
mov
mov
xchg
cli
daa
loopne
in
jg
mov
movsl
push
push
jecxz
cmp
cmp
fstpt
pusha
or
xor
xchg
scas
add
scas
icebp
nop
leave
scas
xor
push
jmp
ret
jbe
add
dec
pushf
inc
adc
xor
mov
and
sub
lcallw
loope
mov
scas
mov
loopne
js
pop
repnz
addr16
fwait
test
inc
pop
sbb
fidivs
jnp
int
lods
test
mov
lods
repnz
repnz
pop
iret
xchg
push
int3
ja
mov
mov
loop
subb
neg
jl
adc
ret
lock
fs
xlat
sbb
cmpsb
jmp
fldenv
ljmp
enter
cli
je
mov
les
stos
dec
pushf
sbb
fldcw
sbb
mov
xchg
flds
adc
int
push
lods
test
cwtl
cmp
mov
sti
movsb
push
ss
cwtl
and
jmp
push
mov
addr16
std
jo
test
bnd
call
arpl
negl
and
movsb
push
pop
out
sahf
loope
lret
jg
cmc
lret
pop
inc
xchg
sbb
sbb
mov
icebp
push
xor
lods
inc
and
cli
popf
mov
jbe
les
test
inc
je
fs
hlt
mov
mov
dec
cltd
xchg
ret
mov
pusha
pop
mov
adc
out
jge
add
lret
orl
ja
loop
inc
repz
lds
sbb
and
inc
cmp
and
js
dec
add
jno
pop
push
lock
mov
inc
fdivl
test
sbb
pop
stc
mov
and
in
cmp
jl
shll
inc
stos
mov
or
xor
push
shl
jecxz
jp
sbb
mov
adc
outsb
loop
dec
or
and
xchg
jge
xor
int
push
push
cld
inc
shlb
push
cmpsb
decl
sti
out
cltd
in
inc
xchg
cmp
sub
das
repnz
push
xchg
mov
dec
inc
or
incb
mov
pop
loope
gs
cld
je
sub
mov
cmp
mov
or
lcall
cmp
xchg
ljmp
cmp
packuswb
and
test
sub
lret
test
inc
iret
cmpsl
cmp
imul
idiv
and
stc
icebp
lds
push
fimull
gs
mov
inc
ret
add
aaa
and
jl
cmp
or
inc
push
pop
lret
pusha
inc
ftst
arpl
pop
cwtl
mov
push
fcoml
pop
and
inc
inc
fwait
adc
in
inc
in
test
jg
and
xor
jns
jge
xor
and
inc
mov
and
sbb
jp
out
cmp
fdivs
mov
sbb
cmp
int3
test
dec
fnstenv
xor
aad
shlb
popa
push
ljmp
fadds
das
test
outsb
adc
cmp
ds
xlat
inc
mov
pop
int
fsub
dec
cmp
lods
outsb
lret
push
fwait
adc
sbb
dec
dec
or
es
fsubrl
mov
jp
movsl
adc
ficomps
dec
sub
sti
icebp
mov
jecxz
outsb
pop
xor
jne
xchg
jecxz
pop
cld
inc
pop
or
lods
inc
jp
faddl
jnp
xor
icebp
adc
pop
insl
jnp
inc
lret
sti
push
sbb
popl
jp
inc
mov
jae
addr16
in
loopne
or
sub
push
xorb
add
iret
add
loopne
inc
into
fisubl
sbb
xchg
nop
xchg
test
mov
cld
jnp
out
out
test
jle
adc
add
xchg
fs
dec
icebp
fnsave
mov
icebp
xor
std
pushf
cli
inc
in
jo
pop
call
and
push
call
pushf
leave
std
pop
dec
movsl
inc
in
in
mov
pop
add
inc
cmp
fbld
movsl
fldl
cli
pop
cwtd
shlb
sti
push
push
loopne
xor
or
pop
and
ret
enter
fnstcw
mov
rep
push
roll
mov
jg
push
fnstcw
jl
or
pop
repnz
das
cld
jl
andl
adc
ds
or
sbb
jbe
sbb
aas
aaa
ja
lea
xlat
clc
scas
mov
mov
lods
sub
inc
and
add
mov
and
adc
mov
cmp
inc
and
and
mov
push
outsl
cmp
in
pop
add
in
js
out
inc
sbb
mov
push
mov
mov
push
cmp
jb
rcrl
daa
in
stos
or
cmpsb
out
std
xor
add
cld
in
mov
int
mov
out
pop
sbb
mov
in
loopne
sti
sbb
sub
test
mov
popa
iret
pop
lahf
jo
inc
sbbl
les
jo
insl
ljmp
mov
pop
sub
outsb
jmp
sbb
and
dec
loope
lea
mov
lods
test
notb
jmp
int
push
loope
add
sbb
loope
dec
adc
pop
psubusw
push
jns
sbb
xlat
or
not
ret
fildll
cmc
add
out
popf
or
std
test
xor
adc
xlat
loope
pusha
xor
sbb
loope
std
dec
in
ja
xchg
sbb
icebp
add
scas
inc
push
jge
push
push
cmp
lret
sbb
jne
cmp
fbstp
jne
movsb
push
popf
test
sarb
addr16
icebp
sahf
repnz
mov
add
jp
out
jl
iret
imul
mov
xchg
ljmp
xchg
pop
xor
mov
adcl
jne
cmp
xchg
and
cmp
aad
daa
shlb
cmp
mov
out
cmp
or
xchg
shrl
adc
das
mov
mov
push
fwait
adc
jle
aam
cwtl
mov
mov
in
in
mov
push
outsl
push
lds
jno
shr
test
dec
popl
out
push
cmp
mov
jl
jmp
inc
scas
je
test
pop
pop
in
pusha
jbe
mov
leave
negb
adc
or
popf
mov
inc
insb
orl
push
xchg
ljmp
pop
cmpsb
or
mov
mov
add
rolb
loop
cmpsb
xchg
jno
pop
lret
sbb
aas
cmp
stos
pop
xor
lcall
jae
loop
cmpsb
cmpsb
push
fs
pop
mov
sbb
lods
pusha
xor
jge
lods
rolb
fdivrl
lods
scas
fs
loope
lods
jo
sub
or
arpl
cmp
lock
add
pushf
in
jmp
rol
popf
lds
aad
mov
mov
aam
xor
adc
sub
cld
arpl
in
ret
cli
test
mov
fwait
mov
aaa
or
sbb
add
call
pop
adc
xlat
addr16
imul
cmp
repz
mov
xor
lods
popa
cmp
fldt
mov
sarb
loop
jl
or
and
outsl
cld
pop
mov
enter
fsubp
cmp
in
gs
mov
fcomi
push
xchg
dec
push
cld
mov
fidivs
mov
jne
jne
movsl
mov
nop
jecxz,pt
dec
cmp
xchg
aas
mov
cltd
jecxz
data16
popf
ret
test
and
mov
mov
jmp
lods
popf
fldenv
xchg
mov
hlt
fmuls
cmc
std
jge
aad
dec
iret
inc
sub
lahf
lods
ret
iret
fidivrl
cwtl
mov
lcall
xlat
sbb
mov
pop
in
fcmovnu
pop
enter
push
mov
ss
stos
mov
push
mov
lods
aad
ss
xor
or
add
or
inc
xor
xorl
test
leave
push
cmp
mov
dec
inc
ds
fimull
push
mov
add
imul
ficoms
mov
lahf
jmp
sbb
out
mov
js
mov
in
shrb
adc
xor
xor
xchg
rorl
jne
xchg
shrb
ret
xchg
push
loop
stc
inc
sbb
test
and
daa
sahf
cmp
mov
loope
jae
lahf
mov
mov
rolb
rolb
push
xchg
sbb
shrl
ja
rcrb
mov
test
flds
mov
mov
xchg
inc
cmc
add
sbb
inc
loop
xchg
adc
or
js
sub
in
scas
cmc
xor
sbb
sbb
repz
pusha
or
int
push
fs
or
pop
pop
adc
fidivrl
adc
test
fstpl
iret
mov
or
adc
add
or
mov
mov
pop
jg
call
or
mov
xchg
cmp
pop
mov
xchg
xchg
lret
pop
and
aam
pop
cmp
popf
sbb
psrld
pop
scas
push
lock
sahf
testb
ljmp
dec
ljmp
js
jl
dec
mov
inc
lods
xchg
sahf
daa
inc
sub
lods
push
add
lods
sub
aaa
mov
mov
iret
outsl
push
addps
out
data16
xchg
cmp
pop
sbb
mov
mov
fsubl
fcomip
push
dec
insb
test
cmp
add
adc
dec
mov
push
jno
cmp
mov
mov
add
sub
sub
sub
out
test
mov
mov
mov
insl
repnz
and
add
jbe
inc
mov
jae
mov
aam
xchg
mov
es
xchg
or
lds
pop
aaa
orl
lcall
subl
cwtl
pop
and
pop
push
js
loop
test
push
sbb
pop
sbb
fdivl
cli
push
jnp
push
jl
jb
inc
aam
enter
add
sub
testb
push
or
gs
inc
insl
loop
xor
decb
sub
pop
iret
cmp
mov
inc
sub
push
sub
fs
mov
fwait
lret
es
std
xor
adc
sbb
dec
mov
mov
mov
mov
pop
and
sbb
fildll
fcomps
outsb
sbb
xchg
xor
icebp
cli
lods
imul
push
outsl
lret
test
lret
pop
or
pop
fnsave
push
in
leave
fneni(8087
sub
inc
fcomip
or
sbb
int3
mov
adc
mov
cwtl
sbb
pop
pop
and
mov
mov
test
xchg
xchg
sbbl
mov
xor
mov
shl
movsl
push
dec
add
dec
jne
dec
pop
andb
cmp
rcl
xor
sub
adc
inc
insl
inc
add
insl
sbb
into
or
mov
inc
dec
mov
cmp
pop
mov
adc
sub
mov
mov
arpl
and
mov
cvttps2pi
cli
add
sub
sbb
xchg
mov
fcom
xchg
xor
push
mov
fstpl
sbb
std
dec
popf
or
cli
jb
jne
and
wbinvd
jmp
pop
sti
push
fwait
outsb
outsb
mov
adc
mov
dec
cli
cld
negl
mov
loopne
ljmp
mov
dec
xor
rcl
shlb
add
xor
bound
cld
pushf
clc
testb
mov
fcomp
jb
out
mov
pushf
pop
jnp
mov
aam
mov
jg
aas
dec
mov
push
lcall
out
jo
inc
ret
or
lods
jg
jge
xlat
mov
in
test
insl
imul
or
jnp
sbb
ror
cmp
jle
mov
dec
roll
frstor
mov
push
iret
hlt
pop
pop
and
adc
movsb
pop
ljmp
xorl
test
cmp
addr16
lods
imul
mov
idivl
cmpb
iret
sbb
aam
or
sbb
ret
inc
adc
leave
pushf
sbb
and
loop
mov
push
adc
aas
insb
and
shl
imul
jno
shlb
in
xor
js
xchg
bnd
mov
daa
test
fnstenv
sahf
pop
daa
outsb
es
cmp
dec
scas
mov
lds
movsl
xor
repnz
sbb
push
arpl
jo
dec
dec
push
pop
inc
rcll
push
push
insb
jnp
xchg
inc
adc
push
mov
stc
cmc
pop
ja
lcall
std
xor
mov
loope
mov
mov
cmp
cmp
out
xchg
dec
call
adc
jb
add
push
mov
js
mov
jp
and
adc
stos
mov
nop
and
add
popf
fiaddl
sub
inc
mov
sub
pop
scas
lods
repz
aad
inc
stc
dec
inc
jb
jp
ja
mov
sub
sbb
sub
aas
shlb
insl
std
mov
enter
decb
fstps
inc
pop
aas
xor
push
adc
jne
mov
cmp
rcr
mov
xchg
pop
cmp
add
lret
cmc
xchg
test
mov
pop
cmp
outsl
xchg
flds
adc
xor
test
mov
xlat
or
dec
pop
jns
aas
jg
subl
mov
inc
les
ljmp
jge
mov
ret
addr16
clc
jl
inc
mov
aas
mov
mov
stos
repnz
and
lret
adc
mov
or
arpl
mov
and
leave
outsl
mov
jg
ss
lahf
or
jbe
fucomip
ja
add
popa
pushf
xchg
mov
jae
or
pop
rolb
pop
adc
mov
mov
xor
lods
dec
decb
addr16
in
sbbb
ss
mov
and
jno
out
or
jo
lcall
sub
out
and
add
in
add
dec
and
mov
cltd
decl
adc
push
movsb
pop
push
andb
xor
in
or
adc
xor
mov
scas
or
dec
sbb
sub
or
out
pop
jge
clc
dec
jne
aaa
sahf
jecxz
pusha
add
sbb
subb
cmp
inc
ret
xchg
popa
mov
inc
mov
add
jge
divl
mov
call
imul
sbb
xlat
lock
repnz
lcall
lahf
decl
sub
add
and
xchg
cmp
bound
ljmp
aam
arpl
or
mov
gs
lods
xchg
and
lods
ds
aad
xor
mov
jge
cmc
rcrb
mov
lcall
and
imul
repnz
clc
add
push
movsl
fsubrp
into
outsb
pop
fnsave
std
cmp
xchg
addr16
mov
adc
stos
out
out
inc
ret
sbb
sahf
addl
mov
or
lret
negl
test
cmp
sbb
xlat
gs
ret
mov
mov
add
cmp
sub
fcomip
int3
popf
inc
addr16
cld
loope
bound
lea
dec
adc
jnp
out
pop
push
add
into
push
mov
inc
dec
or
movsl
push
nop
mov
ret
or
lds
pushf
add
mov
mov
sub
hlt
leave
and
loope
mov
xlat
enter
adc
inc
dec
sub
fstps
popf
and
cmp
std
push
jmp
jg
and
cmp
movsl
mov
mov
mov
test
inc
sbb
shll
adc
mov
or
daa
fmull
sbb
pop
push
push
mov
cmp
data16
inc
aad
je
pop
sub
dec
lret
cld
fnsave
imul
sbb
or
adc
adc
jb
pop
bound
adc
pop
fidivrs
add
scas
add
fimull
sbb
cmpsl
fimuls
cmc
mov
test
push
mov
pop
fistl
push
call
xor
mov
fdivrl
push
data16
inc
insb
xor
iret
or
jmp
adc
push
mov
xor
add
xor
jge
xabort
aam
out
cmp
jg
arpl
movsl
rcr
in
dec
push
mov
dec
jbe
mov
adc
js
sbb
cmp
outsb
std
jl
inc
cmpsb
add
sbb
cmp
xor
jecxz
push
dec
faddl
dec
sbb
push
push
dec
inc
movsb
sub
mov
xchg
jmp
test
shlb
lcall
xor
cmp
mov
pop
push
fdivs
jb
mov
les
jne
in
pop
mov
xchg
shrb
clc
dec
frstpm(287
push
enter
outsl
cwtl
in
out
sbb
aas
pusha
fs
leave
sub
in
inc
mov
jno
sbb
inc
and
xchg
mov
sarb
dec
cmp
lcall
fisubrl
out
ret
pop
push
sub
incb
mov
and
or
dec
gs
lock
push
cmp
shrb
dec
jg
xchg
nop
or
mov
js
sbbb
jecxz
jmp
mov
data16
mov
clc
fwait
in
repz
stos
mov
into
push
adc
test
int
inc
cmp
sub
inc
and
enter
dec
xchg
xchg
aam
int
sbbb
pusha
sbb
mov
add
cmp
cmp
scas
insl
mov
pop
data16
jb
jle
ja
pusha
push
gs
push
mov
mov
fs
add
gs
push
sub
in
sbb
inc
or
lds
mov
adc
movsl
mov
ds
aam
js
cmp
aam
push
cmp
dec
jne
lods
shlb
movsb
mov
pop
sbb
lea
js
shll
shrb
pop
jns
push
cmp
sbb
scas
rcr
mull
mov
mov
pop
mov
cmpsb
out
add
xor
cmc
or
pop
xchg
ja
cli
call
dec
sub
repnz
in
push
add
test
cltd
jp
pop
sahf
frstor
mov
jle
fnsave
inc
xchg
test
xchg
iret
fimuls
cltd
sbb
mov
std
aam
or
fistl
movsb
in
fnstsw
mov
mov
xchg
add
xchg
mov
int
aas
cmpb
outsb
int3
in
or
adc
mov
lea
stc
fcmovnb
push
fsts
repz
movsl
jae
into
sbb
pop
mov
fmull
cmp
lahf
jb
in
xor
outsb
xchg
pop
pop
or
inc
sub
arpl
jne
test
mov
cmpsb
pop
mov
int3
sarl
lods
into
je
cmp
push
cmp
sbb
fmull
cmp
decb
fwait
cld
sbb
fcomps
xor
cmp
movsb
mov
mov
cmpsb
imul
sbb
fldcw
or
mov
jo
xor
ret
mov
inc
ds
mov
aam
clc
and
push
mov
insb
pop
icebp
xor
es
pop
fistl
mov
sbb
js
in
mov
mov
mov
cmp
call
push
dec
sub
mov
mov
add
in
cli
mov
test
outsl
push
dec
rolb
cmc
ja
push
xchg
lahf
hlt
aam
lahf
add
dec
or
dec
loopne
data16
add
adc
lds
jp
push
mov
cmc
popf
std
dec
lahf
shl
inc
stos
int3
lods
out
rclb
out
jns
mov
pop
int
loope
sbb
mulb
xchg
adc
pop
test
sar
add
push
into
mov
add
push
bound
call
jmp
dec
imull
aaa
xchg
mov
or
call
jno
dec
cltd
fsubs
mov
add
lcall
insb
inc
std
sbbl
lods
xchg
sub
in
inc
cmpsb
cmp
mov
mov
xchg
sub
mov
dec
sti
push
pushf
mov
iret
mov
vpcmpgtb
in
or
pop
jl
shlb
mov
or
pop
push
stos
bound
push
and
aaa
adcb
inc
mov
cli
shl
shrl
cs
pop
jbe
xchg
rorl
pop
cs
dec
scas
xor
push
cmp
call
lahf
aad
xor
sahf
push
adc
sbb
pusha
inc
push
jnp
ficompl
dec
add
mov
pop
push
inc
scas
movsb
rclb
sbb
pop
sbb
rorb
adc
inc
fisubl
sbb
jae
pushf
hlt
imul
push
pop
sbb
repz
out
stc
lcall
xchg
test
and
cmp
inc
pop
jne
mov
fptan
push
push
push
insl
or
in
scas
sbb
ss
inc
ficoms
arpl
adc
push
mov
xor
in
pop
xchg
xchg
les
mov
aam
adc
daa
xor
sbb
jmp
cld
es
aaa
dec
aam
pop
in
pop
mov
mov
mov
in
int
inc
jge
sub
mov
mov
pop
mov
sub
add
cwtl
xchg
mov
adc
in
dec
outsl
sahf
inc
mov
out
sub
pop
push
cmp
xchg
mov
dec
addl
clc
pop
mov
xor
jnp
and
repz
sbb
stc
jmp
lods
aam
sbb
xchg
jge
sarl
xchg
adc
inc
jbe
push
push
lahf
arpl
sub
cld
call
scas
jne
nop
rorl
push
js
or
arpl
add
mov
push
dec
test
inc
xchg
shl
and
addr16
inc
cmp
popl
dec
or
push
sub
cli
call
pop
outsb
jne,pt
mov
or
out
push
mov
aaa
xorb
loop
aas
sarb
mov
lahf
jmp
mov
loopne
popf
jecxz
xlat
pavgb
pop
dec
and
es
lret
movsb
xchg
pop
shl
inc
orl
mov
rdmsr
sbbb
or
cmc
inc
pop
lods
enter
cmp
inc
fldt
cmp
mov
imul
std
push
cmp
lcall
outsl
movsl
test
ds
add
xor
mov
aaa
push
outsb
pop
sbb
mov
push
sbb
rcrl
push
in
lock
pop
cltd
imul
inc
pop
test
outsl
mov
or
ja
mov
sahf
cmp
cli
js
sbb
jns
lea
and
call
inc
jmp
arpl
push
mov
mov
dec
pop
fcomps
scas
cmc
in
pop
jecxz
fisttpll
aas
clc
push
mov
sbb
test
call
pushf
or
xchg
pop
popf
mov
xor
notl
xchg
sahf
sbb
out
pop
xlat
or
push
in
xchg
sbb
in
scas
lahf
cmpsl
lds
and
xlat
mov
mov
mov
mov
cmp
cmpsl
cwtl
std
pop
shr
jecxz
call
cmpsb
popa
add
dec
loopne
rolb
mov
mov
js
and
popf
jmp
add
aad
xchg
jl
test
sbb
test
pop
aam
xor
movsb
test
add
test
mov
cmp
push
pop
or
fcomip
cmp
rcrl
xlat
mov
or
cmp
or
cmp
mov
mov
roll
pusha
scas
aad
dec
mov
in
in
adc
pop
aas
inc
lahf
sbb
sbbl
ret
ret
xorb
scas
stos
std
pop
mov
hlt
add
push
mov
sub
sbb
cmp
aam
dec
sub
or
sbb
mov
shl
pop
jb
cmp
push
lret
xchg
test
lret
cmp
arpl
and
nop
cli
inc
dec
jp
or
mov
or
add
jmp
jae
sbb
mov
jae
jmp
mov
xchg
sub
leave
push
push
pop
mov
xchg
mov
sbb
push
sahf
jp
fiaddl
or
mov
sar
sub
iret
xor
dec
sub
test
enter
cmp
jns
ror
xor
inc
push
inc
daa
add
add
push
mov
aam
das
scas
cmp
out
ret
sub
les
sbb
mov
imull
enter
scas
decb
or
lods
test
jae
or
push
inc
loopne
ret
fsubrs
xchg
jp
mov
xlat
popa
imul
xchg
out
out
fldt
js
enter
mov
jecxz
add
or
add
stc
mov
inc
add
sub
add
inc
fwait
dec
xchg
push
aaa
and
lds
dec
ljmp
data16
lock
aam
test
xor
push
mov
or
scas
icebp
ljmp
mov
mov
data16
mov
add
lcall
dec
mov
mov
jo
xchg
jae
test
movsl
shll
dec
mov
xor
sbb
cs
or
lcall
stos
ret
mov
add
dec
push
aaa
dec
add
sub
ljmp
sub
and
xchg
mov
das
mov
jp
pop
test
pop
pop
pusha
inc
xor
test
dec
fisubl
or
and
mov
cmp
test
cltd
push
or
loop
out
fimull
loope
into
cmp
or
dec
sub
jmp
xor
xchg
lcall
inc
mov
shrd
xchg
fstpl
scas
repnz
or
out
xchg
xchg
push
add
xchg
dec
loope
je
sub
bnd
and
pop
loope
xlat
sbb
xor
das
comiss
mov
cmp
jns
mov
mov
gs
fbstp
cmp
das
movsl
sahf
inc
pop
and
incb
cmp
inc
mov
xchg
mov
add
or
cmpsl
and
testb
adc
andl
test
adc
stc
popf
in
mov
inc
ja
and
sub
ss
pop
mov
data16
addl
int
movsl
jns
in
push
jb
cs
push
mov
mov
dec
mov
push
and
ret
inc
sbb
dec
adc
add
xor
xorl
cmpsl
rcl
cmp
lcall
data16
mov
pop
push
data16
sti
sub
pop
fstpt
cwtl
cmpsl
mov
xlat
xchg
jmp
outsb
inc
pop
push
enter
or
mov
lahf
push
cmpl
xor
sub
lea
jg
pop
nop
sbb
ljmp
out
cmpsb
aam
decb
ja
lahf
data16
add
mov
or
aam
mov
pop
mov
cmp
ja
loope
jo
adc
mov
aam
jle
adc
lahf
fnstenv
outsb
xor
mov
fs
call
ss
aam
jno
mov
insl
gs
movsb
push
dec
out
pop
sub
outsl
test
jl
cltd
cld
and
push
xchg
jmp
jp
stos
xchg
push
ja
addr16
cmc
jp
mov
enter
mov
cmp
and
mov
mov
add
jb
lret
jns
loopne
jbe
sarb
roll
or
sbb
pop
jle,pn
std
mov
sbb
mov
fisttpl
push
pop
or
mov
jno
nop
lret
pop
jnp
pop
mov
sub
das
adc
mov
test
in
addr16
loopne
data16
outsb
or
js
or
pop
fisubl
mov
clc
pop
in
jno
xchg
out
xlat
push
cli
jno
mov
xor
cmp
mov
mov
sub
jnp
mov
cmc
adc
fwait
cmp
xor
inc
jo
xchg
iret
mov
mov
notl
call
adc
fdivrp
aam
cmp
in
mov
jmp
ja
filds
hlt
and
fisttpll
outsl
push
aad
add
sub
pop
or
fldenv
jbe
dec
adc
mov
xchg
sub
les
sbb
popa
and
mov
push
cmp
fwait
xor
sahf
sub
mov
push
cmpb
aam
rcr
shrl
pop
xchg
aam
pop
xorb
hlt
cmp
sti
inc
imul
and
mov
xchg
popf
es
push
enter
enter
adc
fidivrs
xor
push
sarb
pop
js
and
mov
das
outsl
jb
lahf
pop
and
jbe
in
dec
int
cwtl
popf
and
daa
jb
imul
negl
inc
imul
sub
cmp
test
arpl
jae
jg
push
mov
push
sti
mov
das
mov
insb
xor
sub
in
testl
mov
add
adc
push
cmc
xchg
pop
out
subb
add
sti
mov
sub
xchg
mov
imul
push
decl
ret
into
jle
nop
or
in
jne
lahf
enter
sbb
movsb
mov
bound
lock
adc
dec
divl
sub
jae
cmpl
and
jne
out
push
sub
negl
les
adc
or
scas
jb
movsl
fnstcw
dec
addr16
sub
dec
data16
notb
push
mov
add
mov
mov
jg
cs
push
test
adc
clc
pop
cmpsl
mov
popa
arpl
int3
adc
sub
lret
out
out
xchg
int3
je
movsb
xchg
xchg
jns
push
push
roll
pop
mov
jmp
inc
xchg
push
mov
pushl
xor
or
loope
gs
je
adc
lahf
insl
aaa
cwtl
notb
xchg
cmp
inc
mov
xchg
and
lret
cmp
imul
imul
mov
or
decb
sub
mov
inc
inc
mov
imul
dec
hlt
and
xor
push
xchg
cmp
mov
mov
leave
inc
sahf
jns
push
pop
pop
fisubrs
push
dec
cmp
cmpsl
ljmp
and
jecxz
adc
add
ss
in
fdivrp
mov
aaa
rcrl
mov
mov
cmpb
cltd
jl
add
dec
push
pop
es
daa
xchg
cmc
test
arpl
mov
add
sub
add
addl
ret
cmp
jnp
loopne
mov
sub
mov
mov
dec
lret
mov
pop
pop
xchg
mov
push
inc
jle
and
adc
mov
mov
sub
add
int
imul
and
mov
iret
iret
imul
adc
mov
dec
xchg
xchg
loopne
cmp
xchg
jno
jl
mov
cmp
mov
and
ja
push
aad
jo
dec
repz
sbb
jns
lods
divb
mov
cld
hlt
push
je
insb
lahf
mov
or
adc
xor
scas
cmp
lods
jne
pop
add
pop
mov
inc
inc
in
cmp
cli
jbe
imul
cmp
cmp
fsubr
fsubrl
mov
repz
dec
neg
pop
pop
add
push
xchg
dec
cwtl
adc
lahf
lods
scas
loope
aaa
nop
test
int
jmp
in
push
mov
rorb
pop
sarl
popf
mov
lods
outsl
sub
sahf
push
pop
test
xor
and
mov
movsl
mov
sahf
idivb
lret
test
pop
sbb
outsb
or
and
xlat
fidivrs
in
in
ja
xor
popf
call
test
es
push
jne
push
sub
pop
or
pop
mov
movsl
add
or
sub
rcll
pop
add
mov
aam
nop
pop
xor
jge
fsubrs
out
mov
aas
jecxz
pop
dec
ss
popaw
addr16
fstp
adc
dec
mov
adc
test
clc
pushf
xor
mov
enter
jecxz
push
imul
mov
gs
inc
repz
repnz
in
sub
addr16
mov
ljmp
xchg
pop
repz
cld
in
jle
test
add
testb
scas
add
shl
mov
aad
dec
xor
pop
jg
xor
adc
xchg
mov
pusha
mov
in
mov
rcr
mov
roll
aas
test
cmp
minps
sub
mov
enter
pusha
dec
push
mov
aad
cwtl
cmp
push
add
and
mov
xchg
pop
cmp
addr16
pop
loope
mov
out
mov
dec
fcompl
jg
mov
iret
aas
push
pusha
pop
xchg
lret
jp
mov
mov
in
dec
cmc
and
insb
cmp
fildll
xor
pop
stc
and
jbe
stos
iret
daa
bound
bound
scas
adc
insl
repnz
inc
es
das
call
lds
cmp
lods
jno
push
lock
sbb
out
test
inc
sbb
in
js
cld
push
cmc
je
push
jae
fimull
cmp
xchg
cld
aas
arpl
es
mov
ret
lods
shl
jno
inc
cltd
sub
xor
in
push
push
aaa
movsb
jne
out
adc
iret
ljmp
into
insb
popa
data16
and
inc
jo
mov
ds
das
and
out
xor
add
faddl
stos
xchg
pop
push
sbb
negb
lret
call
sbb
mov
xchg
int
out
outsb
or
mov
pusha
mov
sti
iret
cmp
iret
cltd
dec
loope
subb
je
ds
out
pop
pop
ret
into
jbe
inc
iret
and
dec
dec
push
shr
fiaddl
insb
lea
aad
fldenv
pusha
gs
lock
sub
fstpl
cmp
lods
adc
aam
mov
fwait
pop
sahf
or
orb
lahf
jp
pop
sub
aas
ret
ret
cmp
add
xchg
cmp
inc
sub
jno
mov
inc
mov
jl
shrl
insb
push
iret
daa
hlt
adc
sbb
dec
bound
ficoml
icebp
mov
mov
cmp
test
das
pop
sub
xchg
shlb
sti
mov
pop
cmp
dec
dec
lahf
adc
push
mov
pop
lods
jns
inc
rcl
leave
xchg
xor
ljmp
lods
adc
and
sbb
adc
sbb
pop
xor
pop
inc
ds
cmp
pop
xchg
pop
push
mov
push
mov
add
clc
popf
jmp
fldt
push
lret
movsl
pop
inc
adc
mov
outsl
mov
out
cmp
movsl
test
and
subl
repz
adc
pop
stc
mov
mov
add
hlt
test
pop
mov
push
cmp
jge
dec
out
adc
bswap
jbe
push
js
add
scas
mov
sbb
jecxz
mov
movsl
adc
push
push
out
out
loop
lahf
mov
or
sub
or
pop
fld
icebp
jbe
insb
lcall
ror
fstpl
mov
test
cli
pop
insl
sub
iret
adc
cli
pusha
aaa
stos
or
int
inc
add
or
pop
jae
or
mov
shr
jb
add
cmp
arpl
push
xor
add
cld
call
fptan
push
and
push
inc
ret
mov
test
decl
shll
jge
inc
inc
and
pop
mov
clc
aaa
inc
repnz
pushf
xor
aad
out
xchg
cmp
js
ss
add
add
stos
aad
dec
cs
andl
popa
xor
dec
push
iret
subb
adc
stos
mov
iret
and
dec
fmul
push
pop
rorb
addb
pop
or
jo
sbb
sbb
jb
push
sahf
scas
lock
rorl
call
jns
dec
out
jae
xchg
andb
lret
loope
shll
dec
jo
xlat
or
and
cmp
or
mov
cwtl
sti
mov
jmp
test
fnstenv
int
fadd
and
cmpsb
ret
pusha
leave
sbb
pop
hlt
push
popa
repnz
jmp
and
pop
mov
add
xlat
jae
sbb
jecxz
popf
insb
pop
cmp
mov
je
sub
dec
or
or
inc
add
cmc
out
movsl
movsl
lcall
push
adc
xchg
stc
out
sahf
rclb
mov
gs
sti
fidivs
sti
jno
xchg
aaa
dec
xchg
xchg
cmp
sar
cmpl
iret
stos
call
add
daa
adc
mov
fnsave
mov
lds
mov
pushf
es
cwtl
pop
mov
mov
insb
aaa
mov
sub
clc
lds
fists
add
mov
inc
mov
ret
mov
sub
aaa
xchg
lods
mov
push
push
aad
mov
push
pop
cmc
rol
dec
mov
out
mov
sub
xchg
cmp
dec
sub
dec
stos
xchg
out
xchg
scas
cwtl
xor
xor
out
mov
fimuls
jmp
scas
shrb
pop
pusha
rolb
push
das
dec
iret
and
aad
incb
push
mov
sbb
leave
mov
mov
adc
pushf
lods
icebp
dec
inc
scas
sbb
jl
lods
inc
imul
ret
lods
jmp
add
mov
push
sub
xlat
cli
aaa
gs
mov
add
add
stos
jg
int
fisubrl
loopne
movsb
jae
ret
jmp
jno
pop
jp
adc
pusha
and
std
push
out
cs
stos
jl
add
pop
sbb
dec
pop
jle
mov
ds
mov
xchg
mov
sbb
dec
inc
call
xor
xor
mov
popa
out
cmp
xor
dec
mov
imul
jge
mov
or
fdivrp
sub
mov
sti
aad
adcb
push
mov
sbb
mov
or
inc
les
das
cmpb
cli
fs
cld
jae
aas
add
ja
adc
add
mov
std
pop
arpl
fwait
sbb
pop
or
idivl
pop
les
int
arpl
sbb
clc
aas
and
and
nop
jmp
pop
adc
sub
shrb
xchg
movaps
sbb
daa
mov
inc
cmp
leave
push
pop
xchg
jbe
push
test
pop
cmpsb
in
ds
push
loop
mov
pop
jb
mov
in
std
sub
or
lds
push
cmp
in
adc
xor
jge
mov
jbe
adc
dec
call
aam
fidivrs
insb
mov
jnp
jbe
outsl
into
mov
add
scas
leave
subb
sub
mov
test
xchg
imul
xor
mov
dec
lds
adc
sbb
and
mov
rcrl
lahf
jmp
icebp
push
fistps
mov
adc
shr
sub
in
pop
stc
jno
jne
andps
daa
add
mov
push
mov
xchg
iret
loope
push
enter
sbb
mov
xor
sbb
add
lea
add
fdiv
mov
mov
xor
push
cmp
xchg
dec
add
mov
clc
hlt
std
fnstcw
fisubrl
sub
loopne
mov
orl
pop
clc
push
data16
pushf
pop
jo
insl
lcall
jl
loop
je
popa
xor
sbb
mov
xlat
mov
mov
dec
fnstcw
lods
sbb
add
ss
imul
add
lea
jo
cmp
outsl
add
xor
test
dec
inc
bound
jne
cmc
inc
insl
loopne
mov
mov
xor
push
fs
and
pop
fucom
scas
fstps
mov
fists
scas
js
push
aam
out
cmp
dec
mov
pop
add
add
dec
cmp
mov
mov
ds
push
ljmp
cmp
pop
mov
out
pop
gs
sbb
lds
rcl
js,pn
fwait
aaa
repz
pop
push
mov
mov
jl
rcl
jno
and
or
dec
jae
test
push
push
stos
stos
or
inc
cltd
sub
test
movsl
jp
mov
xor
jle
fcmovnu
imul
push
adc
xchg
aaa
arpl
pop
sub
add
inc
jecxz
hlt
xchg
push
incb
ja
out
dec
bound
cmp
inc
rorb
insl
es
aaa
jp
and
xchg
mov
push
daa
jle
out
je
mov
xchg
xchg
sub
adc
insb
cmp
push
stos
ds
addb
xor
cmp
push
dec
sahf
aaa
mov
cmp
lret
mov
xor
or
add
out
cmp
add
dec
cmp
lds
mov
xor
ss
dec
xchg
aaa
daa
jnp
xor
ss
out
cmc
pop
mov
or
hlt
xorb
lcall
fistps
jno
sar
xor
into
cmpsb
insl
push
insl
sarl
jb
std
sahf
icebp
jnp
sub
inc
lea
sub
in
xor
mov
jmp
and
inc
push
rol
mov
out
push
out
inc
int3
iret
ret
jno
push
movsl
mov
fwait
mov
mov
data16
inc
popf
out
xchg
add
fwait
jmp
mov
daa
jns
nop
pop
stos
mov
f2xm1
enter
sbb
cmc
call
dec
add
insb
mov
sbb
dec
leave
rorl
mov
cli
out
xchg
jbe
xor
pop
insb
bound
cmp
push
test
rcr
mov
inc
insb
or
mov
pop
call
roll
mov
fcoms
and
jl
jmp
sbbb
rorb
into
stos
add
pop
repz
in
ret
cmp
popf
xchg
lods
push
jle
cmp
mov
cmpsb
daa
jnp
pop
stc
jbe
xchg
xchg
hlt
movsl
pop
aas
clc
jno
ja
push
xor
mov
mov
inc
pusha
and
jbe
sbb
arpl
xchg
push
outsb
idivl
stc
mov
add
push
mov
pop
jl
pop
pusha
out
imul
test
aas
in
nop
push
inc
add
insl
loopne
scas
pop
out
pop
push
or
inc
in
loopne
cmp
outsb
rcrl
dec
roll
scas
sbb
es
lock
enter
lods
xchg
cs
xor
mov
inc
adc
add
or
dec
lret
xor
mov
jecxz
or
mov
jge
xchg
mov
xor
xchg
jno
add
ss
push
cmp
pop
les
clc
pushf
xchg
rolb
lahf
ljmp
jns
inc
rcrb
pop
xchg
jo
lds
scas
sub
flds
ljmp
into
js
adc
xor
adcb
fcmovbe
ret
insl
mov
mov
push
cmp
sbb
xchg
inc
mov
lahf
aam
push
je
inc
insb
ds
jl
or
mov
jo
sbb
xor
fistpll
in
fldl
push
push
cwtl
pop
repz
add
js
xchg
sub
nop
fildll
mov
test
loop
pop
lock
scas
sub
pop
and
mov
pop
sbb
and
dec
sub
fmulp
sbb
dec
push
mov
push
lret
or
clc
adc
pop
call
clc
in
inc
mov
push
test
cmp
and
inc
mov
xor
leave
push
push
or
mov
push
cmp
addl
mov
addl
lea
sub
lahf
es
jle
dec
cmp
cli
jo
repz
js
inc
add
or
int3
jg
ficompl
sub
mov
xchg
movsl
sti
add
cmp
lcall
dec
and
cmp
add
popa
xchg
or
dec
das
and
sbb
or
jne
rorb
pop
mov
xlat
or
dec
xchg
data16
shrb
lock
rclb
lods
or
pop
dec
shlb
pop
outsb
jmp
sub
pop
sbb
mov
pop
xor
pop
xchg
xchg
mov
ret
pop
lret
cmp
inc
dec
jno
push
daa
out
pop
pop
loope
inc
int3
dec
or
jmp
or
and
cwtl
pushf
xor
jo
pusha
sub
adc
or
pop
sub
push
and
xor
hlt
fs
mov
les
shrb
mov
mov
adc
push
lods
fisubl
rcrb
dec
jmp
mov
sbb
adc
adcb
xchg
ljmp
cmp
inc
lahf
js
out
mov
add
out
ss
out
inc
xor
popa
mov
cld
aas
popa
movsl
jg
and
cld
fcmovne
scas
xchg
push
xchg
movups
add
js,pn
sbb
test
test
jo
stc
adc
testl
jp
jmp
push
inc
rcll
notb
dec
bound
and
aas
inc
je
into
test
test
insb
pusha
es
into
lcall
pop
cmp
pop
push
xchg
mov
pop
mov
repnz
stos
push
pop
fisttps
push
clc
xchg
xchg
cli
fisubs
or
inc
cld
out
es
pop
ljmp
daa
insb
lahf
imul
sub
jae
mov
ljmp
xor
push
xchg
pop
test
nop
aad
mov
leave
inc
xchg
and
int3
into
hlt
lea
imul
push
pop
jge
pop
push
fnsave
test
outsb
mov
sbb
inc
stos
iret
xor
push
pop
jmp
mov
aaa
pop
rolb
cmp
das
push
cmp
ret
inc
xchg
popa
mov
scas
mov
dec
dec
mov
mov
aad
pop
sub
lahf
push
outsb
test
ret
push
lock
xor
adc
cli
adc
push
xchg
cltd
aam
pop
dec
pop
and
inc
ja
test
outsb
jecxz
jmp
jo
cmpsl
outsb
cwtl
mov
sbb
xor
and
stos
clc
negl
sbb
ret
fwait
mov
mov
dec
stc
cmpsl
fs
out
and
in
test
jg
stos
xchg
into
lahf
mov
push
sub
jnp
scas
jecxz
mov
xor
sbb
or
cld
and
sub
aad
or
sarb
or
nop
mov
mov
ja
cmpsl
xchg
mov
mov
mov
fnstcw
push
lds
sti
lahf
mov
hlt
fdivrs
push
adcl
daa
repnz
int3
jne
sub
mov
add
cmpsl
push
cmp
xlat
sbb
mov
xor
or
popa
mov
lea
cwtl
adc
jns
std
gs
sub
fs
mov
mov
dec
dec
lahf
jb
movsl
je
imul
push
mov
adc
out
adc
jbe
mov
popa
enter
push
cmc
sti
test
cwtl
and
fimuls
cmp
xor
daa
push
sbb
push
push
loop
fwait
lcall
pop
mov
imul
scas
leave
mov
int3
xchg
mov
pusha
jp
pop
mov
or
lcall
fidivl
add
repz
dec
loop
in
in
push
jge
cli
mov
cmp
fiaddl
rcrl
stos
pop
mov
test
stos
in
mov
ds
push
or
mov
mov
inc
cmpsb
lds
lret
push
xor
adc
sub
js
daa
mov
xor
daa
mov
xchg
jns
lea
je
enter
std
pop
push
push
xor
mov
popa
gs
dec
cmpsb
add
lahf
leave
jle
push
lods
and
pop
push
cli
mov
add
mov
sbb
jae
inc
or
loop
fnstcw
in
out
cmp
pop
jae
outsb
pop
aad
mov
inc
stos
movsb
cld
and
jmp
inc
xchg
out
scas
bound
pop
dec
decl
lods
adc
mov
jg
adc
aas
fwait
in
or
jmp
add
push
rorb
jecxz
into
cmp
and
jle
imul
sub
test
hlt
jmp
or
lcall
mov
mov
shr
mov
jnp
dec
movb
xor
jne
sbb
loop
mov
cmp
xlat
mov
cltd
xor
dec
pop
mov
jge
enter
fidivl
test
repnz
adc
push
cmp
ljmp
out
inc
into
lcall
sub
enter
xorl
daa
stos
out
daa
aas
cwtl
outsl
push
lods
and
xor
lea
ja
push
dec
gs
lcall
ret
push
int3
repz
dec
adc
add
shll
sub
or
xor
mov
gs
adc
xor
xor
fcomps
fs
mov
push
push
cld
jmp
jmp
insb
or
push
js
stc
in
sbb
shl
iret
pop
xlat
add
sub
imul
pop
jnp
mov
lea
pop
stc
aam
out
je
mov
imul
cmpsb
data16
aad
arpl
out
sahf
mov
out
xor
in
shrb
dec
xor
mov
jnp
daa
daa
mov
and
inc
xchg
lahf
xchg
pusha
cltd
cmpsb
and
popf
add
push
stos
mov
mov
sub
cs
stc
jae
lods
pop
sahf
dec
cwtl
push
or
fwait
xchg
stc
orl
mov
fs
mov
stos
add
adc
scas
or
mov
jge
cmp
xor
cltd
mov
jp
jmp
enter
adc
mov
xchg
setge
mov
cmc
mov
imul
sub
out
or
jmp
fldl
jae
inc
ds
hlt
mul
pop
and
out
pop
pop
pop
dec
std
lret
sbb
data16
in
mov
push
bound
cmc
popf
cmpsl
fsubs
and
fstpt
mov
fldenv
call
lods
into
jbe
inc
mov
or
pop
sbb
fisubrs
cmp
push
mov
sbb
cmp
fidivrl
mov
lcall
pop
cmp
xor
xor
gs
dec
xor
xor
push
adc
xchg
mov
mov
add
and
xor
scas
iret
insb
dec
add
mov
add
push
push
add
orl
mov
filds
adc
addl
dec
cs
cmp
dec
lods
mov
ret
das
cwtl
push
pop
add
cmp
add
push
inc
or
mov
cmp
push
dec
sub
rcrl
xor
and
es
jne
mov
or
pop
jns
jb
in
lods
aas
repnz
mov
mov
adc
xchg
int3
std
xorl
stos
out
insl
pop
ret
aam
stc
sbb
pop
test
adc
xlat
aaa
repnz
in
pusha
cmp
test
and
cmpb
mov
lret
les
jl
popa
or
addb
jle
pop
dec
cwtl
adc
outsl
adc
dec
mov
fwait
sbb
and
inc
frstor
out
jnp
push
push
dec
jbe,pt
mov
mov
xchg
mov
div
push
push
push
test
loopne
in
lods
jmp
lods
stos
xchg
push
stos
push
lret
cmp
and
push
outsl
mov
mov
dec
subb
hlt
or
hlt
xchg
mov
xchg
jp
push
mov
inc
xchg
add
mov
ret
jl
inc
aad
dec
sub
out
push
fs
cld
lods
mov
jmp
or
call
icebp
es
or
pop
inc
stos
gs
lds
xchg
cwtl
addl
sbb
aam
mov
cmp
or
sbb
pop
fwait
mov
cld
cmpsb
push
jns
mov
xchg
cltd
insb
push
gs
movsb
cmpsl
add
icebp
pop
xor
xchg
scas
in
dec
pop
jl
popf
out
ds
mov
mov
push
ret
in
pop
rol
dec
push
mov
jns
xchg
sbb
adc
roll
dec
out
negl
mov
jg
add
jno
jmp
pop
adc
jnp
pop
test
push
fs
adc
cmpsb
mov
not
in
push
in
ss
push
das
and
dec
imul
and
int
jno
sub
aam
jle
mov
fwait
test
inc
insb
dec
push
mov
divl
out
fisttps
jp
adc
mov
cmc
call
mov
adc
jmp
sbb
add
inc
add
pop
es
shr
aaa
hlt
and
push
aam
fstl
xor
adc
lahf
jcxz
dec
jne
fs
cmpsl
cmp
or
xor
shll
das
xlat
inc
int
cmp
xor
or
jno
adc
fldt
jmp
push
ja
xor
loopne
inc
idivl
push
add
or
push
fstp
mov
mov
mov
aad
cmp
lahf
pop
test
faddl
add
inc
das
iret
aas
mov
mov
lahf
lods
hlt
pop
add
lods
adc
popa
pop
mov
xor
sti
cltd
dec
mov
aas
dec
adc
pop
cmp
push
cli
je
or
sub
lods
dec
call
popa
adc
inc
push
pop
loop
mov
or
leave
lock
leave
mov
cmp
call
xchg
pop
les
pavgw
push
cmp
push
mov
ss
mov
xchg
ret
cmp
mov
les
orl
cmpsb
addr16
clc
and
xor
push
push
in
sub
add
pop
sbb
dec
xchg
adc
mov
test
push
test
mov
mov
add
mov
nop
popf
ret
mov
dec
sbb
sbb
jo
movsl
in
push
xchg
outsb
xor
dec
enter
ret
push
or
pop
fldcw
cmc
mov
cmp
xchg
mov
aam
sahf
xchg
mov
mov
out
mov
mov
xor
movsb
sub
out
lds
push
fsubrl
jmp
int
insb
mov
push
xchg
xchg
les
pusha
cmp
add
mov
mov
mov
js
pop
lea
repnz
fs
mov
and
in
push
jge
out
mov
xor
sub
mov
out
fwait
adc
cmp
push
mov
stos
push
xchg
push
adc
and
imul
lret
cltd
pop
aad
inc
sub
dec
incl
jnp
jnp
dec
mov
ja
lds
adc
lahf
cltd
insl
sbb
stos
das
mov
out
adc
pop
jo
fistpll
mov
ds
popa
fcoml
loopne
cmc
sbb
pushw
fidivrl
pop
leave
ret
jbe
push
dec
pop
or
jecxz
push
add
xchg
pop
pop
cmp
add
je
nop
xor
pop
jno
das
ja
cwtl
cmpl
fdiv
push
and
lret
int3
fnstcw
push
sub
xchg
movl
push
jl
or
mov
xor
dec
jo
loope
stos
xchg
lret
es
test
mov
sub
mov
lret
mov
pop
mov
cwtl
pushf
inc
movsb
clc
push
popa
jmp
popf
stc
inc
or
mov
sbb
imul
xor
fnstsw
dec
mov
in
jne
pop
cli
sti
pushf
arpl
cmpsb
cmpsl
test
divb
inc
stos
push
mov
cmp
stc
mov
stc
testb
adc
adc
jl
ja
aad
cmp
movsl
xor
jle
sbb
sarb
aaa
insl
pop
or
mov
jg
scas
jl
ss
popf
add
or
xor
jns
jg
stos
mov
ds
jmp
xor
mov
fisttps
jae
sbb
add
aaa
std
mov
add
mov
pop
into
in
ret
test
outsb
les
push
stos
fwait
sysret
xchg
stos
jl
pop
enter
dec
ficomps
jp
clc
in
in
xor
mov
push
and
insl
call
mov
adc
and
jb
pop
mov
jl
int3
faddl
divb
xchg
mov
cmpsl
les
push
repnz
cmp
and
push
cmp
add
outsb
movzwl
push
push
scas
ret
and
pushl
das
in
lret
xchg
push
xor
sbb
add
cltd
jecxz
hlt
xor
or
mov
jle
maskmovq
fs
stos
fbld
mov
xchg
pop
dec
cmpsl
rcrl
mov
mov
out
test
dec
sub
cmpb
xor
xchg
mov
jmp
mov
add
or
outsl
fsubr
sub
xchg
pop
hlt
sahf
jle
and
push
test
push
or
out
pop
std
repnz
inc
rol
or
pop
aaa
cli
fisubl
rcll
aam
ret
cmc
push
adc
popf
test
cmc
movsl
cmp
xor
sbb
sbb
add
test
pop
push
lods
push
pop
int3
arpl
das
ret
movb
push
aas
ds
test
adc
clc
iret
or
call
into
cmp
mov
mov
lock
cmpb
cmp
lahf
gs
stos
xor
add
repz
xchg
subb
mov
rcrl
aaa
xor
insl
push
inc
or
xor
mov
push
add
lcall
call
jb
ret
lahf
ljmp
aas
mov
sbb
insl
mov
testb
in
mov
cs
pop
shl
subl
into
mov
cwtl
mov
ss
loop
pop
push
cmpsb
js
je
mov
daa
stos
out
cli
push
inc
mov
and
icebp
sbb
ljmp
js
inc
icebp
sahf
enter
jbe
push
mov
cli
sbb
cli
sahf
mov
data16
jnp
pop
je
loope
jmp
inc
jle
aad
add
iret
pop
jg
or
or
in
cmpsl
into
pop
xor
mov
add
add
popa
call
jnp
std
dec
popl
xor
je
adc
stc
rorl
inc
pushf
sub
pushw
nop
fstps
daa
hlt
mov
loope
push
ja
jp
dec
sbb
or
movsb
and
aad
lds
imulb
or
arpl
in
push
cmpsb
fwait
sub
lea
cmpb
pop
scas
push
cmp
repz
sbb
jecxz
mov
fmul
fistpll
cmp
in
push
jb
push
stos
mov
xchg
cmpsl
movsb
xchg
xchg
aas
inc
push
inc
push
mov
xor
jp
inc
xchg
incl
enter
add
stos
push
mov
fnsave
xorb
cs
adc
inc
push
dec
jmp
das
ljmp
lock
and
movsl
xchg
stc
xchg
fisubl
xchg
pushf
jbe
adc
es
outsb
out
fnsave
xchg
mov
lods
movsb
or
enter
sbb
sub
mov
out
rcrb
jp
pushf
and
jmp
push
sbb
pop
mov
or
lret
pop
adc
pop
imul
in
scas
xor
in
popa
test
pop
out
push
mov
nop
bound
xchg
fidivl
into
sub
jmp
xor
jg
addr16
dec
mov
mov
jo
cmc
icebp
clc
sub
jns
inc
fistl
lock
xchg
bound
fists
lcall
nop
push
jne
jo
lods
or
cmp
add
subl
mov
inc
xchg
daa
add
hlt
out
push
out
sub
testb
out
nop
push
ret
int
jecxz
push
test
pushf
fldenv
test
lods
es
ds
scas
xchg
sbb
call
mov
jmp
cmp
add
cmp
inc
outsl
clc
push
fs
push
jge
imul
mov
and
fisttps
and
cmp
ljmp
mov
add
cmp
mov
fisubrs
xor
push
add
cli
mov
mov
and
aas
filds
into
lcall
dec
mov
mov
pop
scas
fnsave
fnsave
lret
js
cmpsb
push
rcll
hlt
in
out
arpl
leave
jmp
mov
mov
das
test
sub
test
and
xlat
add
les
xorl
xchg
inc
sbb
or
pop
mov
ds
repnz
sub
lcall
cmpsb
sub
in
inc
push
mov
cmc
in
ret
fwait
les
sub
scas
in
dec
sahf
sbb
sarl
inc
and
sub
push
decl
pop
mov
out
daa
adcl
aas
jae
add
inc
in
outsl
jecxz
or
sub
jle
mov
xchg
in
inc
int3
enter
jnp
lahf
nop
sub
mov
inc
popa
mov
lret
in
jns
or
sub
rcrb
dec
imulb
or
sub
adc
lcall
inc
pop
add
scas
dec
stos
test
adc
lcall
add
add
iret
inc
aam
call
push
xor
dec
pop
sub
std
daa
lock
pop
test
jecxz
jp
jns
in
rcr
push
adc
gs
cli
add
js
push
mov
xor
into
push
lcall
inc
pop
adc
push
jne
mov
lods
xchg
mov
and
in
or
clc
xor
mov
lods
xor
iret
aas
scas
pop
inc
lock
sbb
lods
roll
or
dec
sub
popf
mov
cltd
jmp
mov
push
sbb
dec
dec
loopne
int3
hlt
mov
call
subl
imulb
clc
sub
cmp
jb
enter
fisubl
jecxz
mov
movsb
mov
les
jmp
jae
loope
mulb
sbbb
jns
add
enter
sbbb
aad
add
lds
data16
and
std
mov
pop
rcll
aaa
dec
mov
notl
into
les
imul
jno
lahf
sub
add
adc
or
sub
test
xchg
stos
pslld
dec
sub
xchg
inc
adc
pop
les
mov
mov
xor
mov
dec
rcr
sub
js
mov
dec
dec
shrb
or
ss
inc
mov
int3
out
frstor
adc
sbb
out
mov
dec
sarl
not
into
mov
pop
lods
leave
sub
lds
insl
jne
push
jecxz
jge
mov
mov
sub
jecxz
enter
cmp
adc
in
loop
push
adc
cli
pop
inc
mov
mov
pop
cwtl
fwait
xchg
cld
lods
xchg
mov
jp
adc
mov
es
xchg
dec
shrl
fsts
sub
inc
xchg
lock
loopne
rorl
inc
jnp
ja
fsubrl
xor
or
loopne
jmp
sbb
push
jns
dec
ror
sbb
jecxz
pshufw
cmp
push
fisubl
adc
cmp
sub
fcompl
scas
sub
or
in
xor
les
sti
lahf
cltd
lods
push
dec
aad
insl
and
rorl
rorb
scas
in
cmpsb
sbb
dec
leave
mov
sbb
and
add
xchg
rol
pop
jb
add
and
ja
push
and
push
stos
mov
dec
jle
hlt
lods
cli
xor
or
fs
dec
fdivrp
icebp
add
push
pop
push
pop
jne
bound
sub
lret
ret
clc
flds
mov
les
cmp
mov
push
in
sti
fnstcw
outsl
push
sub
push
xor
pop
aad
xchg
insb
mov
repnz
pop
scas
lahf
int3
daa
insl
push
rorl
jmp
movsb
jnp
int
outsl
imul
push
lret
push
cmp
mov
xchg
pop
cmp
fcomi
push
mov
outsb
sti
sbb
xor
mov
and
inc
dec
out
fimull
xor
sub
out
cmpsl
out
or
push
lods
cltd
inc
mov
add
jne
pop
xor
repz
or
popf
sbb
in
scas
stos
lret
or
mov
repz
lret
add
lcall
gs
and
or
inc
or
xchg
call
mov
cmc
lods
xchg
mov
icebp
enter
cmp
jecxz
cltd
mov
sbb
sbb
test
add
pop
cmp
aad
rclb
cmpsb
pop
arpl
inc
clc
and
sbb
push
jne
push
lret
test
jmp
jne
ljmp
push
sbbb
mov
or
scas
jbe
pop
cmp
outsl
mov
xor
mov
pop
ljmp
xchg
and
hlt
xchg
cld
mov
xor
mov
mov
cmp
add
adc
dec
or
out
imul
push
xchg
adc
mov
push
pop
pop
aaa
xchg
mov
test
fstps
dec
and
or
and
in
mov
pop
xchg
fsts
int3
jne
nopl
rcr
in
mov
push
popf
jb
ficomps
pop
fsubrl
inc
fwait
push
stc
xor
sub
cmp
pushf
dec
jecxz
mov
mov
repz
cmp
cld
cmp
call
pushf
int3
dec
sbb
cmpsl
mov
dec
jle
pop
sbbb
jle
fldl
icebp
mov
mov
pop
pop
loopne
adc
mov
daa
int3
and
cmp
imul
mov
push
fisttps
bound
inc
mov
cs
cmp
lods
and
das
out
das
cmpl
mov
pop
pop
fnstenv
out
sub
mov
sbb
pushf
js
fsubs
push
cmpsb
push
dec
xor
out
cmp
ds
rclb
jae
push
mov
fwait
rcll
jl
loopne
sbb
aam
insb
jo
pop
push
pushf
and
lea
xchg
pop
or
cmp
and
jmp
pop
insl
cmp
pop
jae
stc
incl
add
scas
cmp
pop
icebp
mov
test
cmp
lret
push
addr16
sub
je
test
or
pop
test
cmpsl
cmpsb
dec
mov
addr16
xchg
inc
and
stc
ja
jo
mov
insl
jnp
cmp
dec
loopne
jns
and
mov
push
push
test
mov
test
loope
push
cwtl
mov
mov
fmull
jne
xchg
rcll
into
jge
pusha
xchg
cmp
inc
cmpb
sub
jg
movsl
and
dec
mov
or
loope
lods
pop
setb
fwait
push
adc
outsb
sar
lcall
cmp
popa
test
add
jno
inc
mov
cmpsb
sti
xchg
adc
dec
adc
sti
xchg
cmpsl
aas
cli
imul
jg
ficompl
in
mov
and
mov
pop
fs
fmul
dec
outsb
lss
js
sub
aaa
arpl
pop
sbb
lods
ja
push
sub
adc
push
pop
and
paddb
les
push
aas
cmpsl
jns
lret
sub
inc
hlt
pop
add
inc
addr16
jns
fadd
pop
jne
dec
scas
filds
sub
and
push
mov
xlat
or
nop
je
cld
pusha
sarl
lds
xchg
adc
or
sub
rcrl
ds
ds
xchg
xor
add
xor
push
aam
or
mov
test
jo
out
cld
mov
test
jae
adc
aam
mov
cmpsb
test
leave
jo
jae
xor
sub
aaa
clc
ljmp
pop
inc
stc
addl
lock
cs
repz
repnz
and
jle
insb
sub
shl
call
add
in
and
pop
sub
repz
cmpsl
mov
dec
not
sub
subl
int3
jo
jge
pop
inc
jbe
pop
pusha
ljmp
es
mov
inc
lcall
andb
push
xor
loopne
ljmp
push
pop
test
push
dec
inc
jbe
or
out
lds
or
adc
xor
mov
inc
in
int3
mov
cmc
movsb
out
js
dec
and
xor
xor
fdivs
mov
arpl
cmp
mov
ljmp
inc
xor
nop
sahf
push
repnz
int3
xor
mov
pop
mov
sub
push
sub
fwait
les
out
inc
pop
repnz
pop
push
xorb
inc
hlt
loop
sub
sub
addl
inc
xor
jmp
push
push
inc
test
adc
loope
clc
fldl
jecxz
pop
sbb
iret
pop
gs
cmpsl
mov
cltd
xchg
jne
in
in
push
push
in
add
jg
pop
std
xchg
add
jmp
jl
add
into
mov
cmp
cltd
xchg
data16
int3
call
or
xchg
fadds
add
jmp
mov
dec
and
call
mov
xchg
inc
push
add
imull
xchg
in
cmpsb
test
stc
mov
mov
sub
or
scas
mov
xchg
jmp
pop
mov
jb
sub
mov
push
pop
gs
lret
adc
sti
jns
adc
cmp
xchg
mov
leave
xor
ds
arpl
inc
pop
dec
dec
mov
inc
dec
xor
mov
adc
and
into
cmp
and
popa
xchg
sbb
mov
lret
pop
inc
fwait
in
xor
jae
and
xlat
lret
inc
mov
xchg
stos
in
movsb
scas
lea
mov
mov
jp
mov
mov
pop
addb
add
pop
addr16
repnz
and
sub
and
mov
dec
aas
or
ja
xor
add
cwtl
inc
pop
es
push
or
inc
frstor
daa
add
sbb
lcall
out
mov
push
sub
xor
mov
pop
mov
inc
icebp
cwtd
pop
test
jg
xor
push
pop
dec
arpl
shl
arpl
lods
mov
pop
lret
loope
cs
add
mov
sbb
push
fcmovnu
insb
gs
cmpsl
lret
pop
and
icebp
mov
inc
push
daa
test
out
pushf
jo
scas
in
cli
cmpsl
add
push
xor
fisubrs
jno
in
cmpsb
or
out
out
scas
pusha
mov
ljmp
orb
cmpb
subl
into
xchg
pop
std
mulb
stos
lods
shll
sbb
sti
mov
sub
mov
mov
hlt
dec
jnp
insb
push
cmpsb
popa
mov
clc
cmpsb
sbb
mull
push
mov
jbe
insl
rclb
push
jge
jne
pop
andl
push
push
mov
adc
xchg
dec
mov
iret
adc
add
dec
aam
jecxz
les
pop
ret
push
sub
pushl
pop
repz
jl
lds
push
xchg
xor
lea
cmpsb
ja
loope
push
push
inc
pop
ljmp
adc
cmpsb
add
imul
xchg
inc
shlb
and
mov
mov
cmp
adc
or
jle
ljmp
xchg
cmp
repz
into
lds
jb
xchg
sbb
xor
in
aas
jno
mov
and
xlat
sbb
dec
shlb
dec
pop
aaa
cmp
jns
mov
mov
fwait
jne
mov
movsl
cwtl
stc
movsl
sub
mov
cltd
dec
mov
push
cmpsl
je
cmpsl
es
sbb
jb
stc
test
frstor
push
adc
jne
mov
xor
push
rcr
mov
or
xor
sbb
xchg
out
aas
popa
rol
or
test
add
push
mov
scas
jl
daa
ljmp
or
cmp
stc
dec
mov
adc
inc
mov
jp
or
or
dec
sbb
pushf
add
inc
loopne
xchg
jnp
loopne
popf
push
mov
fisubs
mov
xor
cmp
arpl
enter
sbb
out
pop
pusha
push
sub
sarb
push
jl
dec
pop
pushf
push
js
push
scas
js
aas
scas
cwtl
shl
or
xchg
call
mov
sbb
in
or
and
jge
xchg
inc
cs
sub
inc
test
rcll
jge
fs
push
xchg
cmp
and
rcll
xchg
jmp
insl
xor
mov
pop
xor
leave
call
adc
mov
xor
mov
mov
test
lock
mov
cmp
xor
sub
or
cmp
hlt
inc
les
lods
cwtl
mov
xor
cld
pushf
sub
lods
xchg
out
pop
int3
or
cmpsl
cmp
dec
xlat
and
dec
in
int
pop
sub
add
jmp
jl
rolb
inc
sbb
iret
ret
sbbl
push
mov
lock
cltd
pop
mov
cmpl
into
dec
sbb
ret
sub
call
push
and
pop
test
hlt
xor
cmp
and
mov
aad
jmp
sub
pop
push
or
inc
jmp
leave
jne
popf
adc
fstp
outsl
pop
in
xchg
bound
xchg
rol
mov
sub
scas
js
lahf
lahf
imul
jg
jle
loope
mov
pushf
sarb
jecxz
stos
sbb
push
mov
jne
bound
jmp
insl
or
out
lds
mov
jo
mov
out
add
dec
and
sti
inc
push
jbe
gs
mov
cli
lret
mov
push
mov
es
lret
aaa
xlat
xchg
xchg
sti
dec
sbb
lret
lret
cmp
sbb
and
sbb
ret
mov
mov
shrl
add
das
push
lahf
add
mov
or
mov
cmp
scas
xchg
mov
das
xchg
repz
mov
es
sti
push
out
add
sub
inc
or
inc
push
inc
jp
inc
or
dec
cltd
xor
xor
push
mov
lds
push
mov
pop
stc
cmp
dec
jg
xor
adc
loop
add
inc
fwait
mov
cwtl
mov
sub
mov
jne
add
pusha
mov
cmp
or
push
lret
pop
inc
dec
sub
mov
imull
and
cltd
out
mov
sub
repnz
jnp
pop
and
mov
add
es
adc
js
sub
aaa
or
ljmp
push
int
or
and
cmp
xor
pop
hlt
fcoms
lret
mov
push
xchg
xchg
out
cs
add
xchg
movsb
cmpsl
cwtl
fstpl
cmp
mov
loope
test
xchg
aas
mov
mov
mov
cld
adc
adc
xchg
lret
sbb
jno
idivl
cmc
mov
xchg
pop
scas
mov
mov
cld
push
add
das
ja
mov
push
ret
js
stos
ja
sarl
sbb
push
int3
test
cld
lcall
jb
mov
mov
adc
add
or
out
jecxz
psubd
xchg
fsubl
and
dec
cmpb
sub
and
dec
test
cmp
add
push
out
pop
push
jmp
scas
lret
data16
fcomps
adc
repnz
push
hlt
ret
push
xor
lret
inc
dec
lds
xlat
pushl
push
add
sub
bound
push
mov
fnstcw
jg
mov
test
addr16
stos
jne
addr16
dec
stos
jno
xchg
sub
pop
sbb
push
inc
bound
and
stc
nop
pop
and
jae
in
adc
pop
iret
subl
push
sub
enter
aaa
jno
loope
inc
aad
ss
mov
es
xor
es
cmc
scas
cld
aas
push
xlat
sbbb
int
mov
cmp
mov
in
js
pop
es
sbb
das
or
stos
leave
rcl
movsb
jecxz
je
pushf
lahf
pushf
mov
xchg
push
dec
mov
inc
adc
xchg
cmp
dec
or
mov
and
push
call
notl
rolb
mov
push
ljmp
sar
and
pop
in
push
xchg
and
test
cwtl
shr
hlt
jns
mov
or
frstor
fisttpll
mov
mov
je
or
mull
hlt
imul
dec
and
mov
ret
xchg
or
sbb
xchg
cmp
mov
sar
test
loope
push
test
xchg
xchg
pop
hlt
add
arpl
fmulp
push
aam
pushf
sbb
sub
orb
in
jl
mov
into
push
ss
mov
mov
mov
adc
pop
xorl
mov
cmp
sbb
in
and
stos
pop
mov
push
jns
fwait
cmp
jle
xor
repnz
repnz
push
popa
aas
mov
push
sub
mov
pop
push
mov
notb
test
idivl
ret
push
pop
mov
adc
stos
sahf
dec
mov
ljmp
xchg
mov
lods
aas
push
testl
out
in
shr
test
popf
push
xor
flds
or
mov
lcall
pop
cmp
mov
fwait
stos
int
or
push
lods
pop
pop
lahf
es
stos
cmp
lcall
in
dec
imul
lcall
inc
push
push
add
xor
pop
and
out
and
pop
in
mov
pop
fbstp
mov
addr16
sbb
xor
int
lods
loopne
push
and
push
in
enter
lret
in
mov
sbb
in
adc
pusha
jnp
stos
sarl
cltd
sbb
sti
test
pop
sub
ss
les
and
and
push
and
mov
pop
jns
sub
ljmp
int
dec
fisttpl
stc
test
add
aas
xor
inc
pop
out
bound
lock
cli
push
jge
pop
cmp
adc
jge
cmp
les
in
sbb
pusha
mov
clc
sub
sub
inc
jge
push
and
jbe
stos
push
andb
clc
or
jno
xchg
cmpl
pop
inc
cmp
cmp
imull
int3
inc
nop
inc
mov
fisttpl
adc
cwtl
xor
sub
dec
cmc
rcr
mov
scas
mov
out
in
lock
jge
dec
movsl
fwait
sub
jno
pop
pop
out
xor
sbb
flds
sbb
jp
push
movsb
dec
mov
cltd
insb
lds
lods
jne
out
rclb
mov
ja
testb
adc
movsb
or
or
outsl
inc
sbb
push
movsb
cmp
in
sub
cmpsl
std
xor
cmp
mov
sub
jecxz
addl
push
and
data16
mov
repnz
xchg
ret
out
push
pop
mov
push
pop
fdivs
bound
pop
push
inc
jecxz
or
add
jp
sub
cs
xchg
dec
pushf
pop
inc
out
sub
in
cmc
sahf
in
add
mov
or
mov
repnz
mov
test
pop
jge
xchg
stos
dec
gs
iret
push
jmp
ljmp
clc
lock
sub
into
stos
ja
fsubrl
xor
sbb
xor
inc
enter
inc
lahf
mov
xor
lret
fldenv
jnp
test
sub
mov
jl
add
test
int3
dec
repz
je
xlat
push
jnp
scas
push
movsl
push
push
dec
mov
out
adc
movsb
addr16
push
ss
push
stos
cmpsb
jge
out
dec
bound
adc
aas
push
test
pop
xchg
stos
dec
jecxz
mov
iret
sbb
insb
cmpsb
lods
dec
pop
xor
dec
mov
mov
roll
hlt
pop
dec
xchg
lret
pop
and
jb
jmp
imul
arpl
repnz
addl
sbb
jl
stos
pop
add
loopne
mov
lret
pop
inc
leave
int3
xor
popa
out
jb
cmc
fdivrs
js
mov
mov
mov
insb
lea
mov
pop
sbb
and
push
sub
xor
pop
int3
repz
pop
sub
jns
movsl
ret
xchg
cs
gs
dec
mov
jecxz
data16
out
dec
fwait
sub
jb
mov
ret
mov
or
imul
stc
cwtl
jae
into
xor
push
pusha
or
int3
lea
fbld
push
xorl
stos
repz
adc
cmp
fimull
mov
adc
jne
cmp
scas
mov
pop
scas
dec
cmpsb
daa
pop
inc
out
mov
mov
sub
inc
cmp
idiv
xchg
pop
xlat
aam
mov
or
jo
xorb
jmp
iret
dec
loope
shl
jecxz
sub
sahf
xchg
xchg
inc
xor
sbbl
insb
inc
mov
outsb
push
or
jns
test
dec
int
fwait
pop
fwait
or
loope
adc
scas
inc
adc
mov
testb
add
adc
xchg
icebp
mov
ss
fwait
icebp
arpl
andb
mov
into
adc
mov
mov
cs
or
stc
cmp
xor
cmc
ffree
mov
pop
cwtl
ss
test
jbe
jg
and
into
pop
jno
mov
push
aas
repnz
sbb
sbb
dec
out
mov
sub
leave
cmp
or
push
push
cmp
lods
or
lcall
popa
add
xlat
xor
fisubl
mov
scas
xlat
call
dec
pop
inc
stos
inc
mov
cwtl
inc
gs
icebp
fcmovb
sarb
push
mov
mov
jecxz
leave
les
mov
test
xchg
mov
pop
add
shll
mov
mov
mov
dec
jmp
or
add
xchg
lahf
xchg
fnstenv
ret
js
xchg
push
push
pop
ja
repnz
repnz
jbe
imul
imul
imul
movsb
ds
sub
sbb
icebp
loopne
movb
dec
sub
lds
out
sub
mov
push
mov
fmuls
sahf
push
xchg
stc
gs
add
pushf
push
gs
or
or
shll
mov
dec
test
dec
sbb
in
cs
push
jnp
repnz
push
mov
mov
or
out
pop
or
jle
mov
scas
lcall
call
or
xor
std
sub
aad
mov
daa
mov
mov
or
arpl
and
lahf
dec
adc
rcrb
shr
push
mov
and
mov
or
cmp
adc
in
sbbl
dec
sbb
mov
lret
shrl
popa
inc
xor
or
inc
into
or
cmp
cs
movsl
cwtl
out
xchg
mov
lods
lods
bswap
outsb
out
fdivrp
out
leave
adc
mov
dec
sub
stos
cltd
fildl
cmp
dec
jno
mov
cmp
pop
in
popf
test
jmp
jno
add
jp
push
sub
js
mov
testb
stc
dec
sbbb
cmp
inc
sahf
and
stc
push
mov
and
mov
sub
mov
push
add
mov
int3
mov
out
add
inc
xor
cld
push
dec
insb
mov
mov
jbe
fiadds
gs
cli
pop
movsb
mov
sbb
sub
fsubs
inc
add
lds
sub
pop
inc
and
cmpsb
jo
ret
test
push
add
xor
movsb
mov
and
ret
sub
inc
incb
adc
pushf
mov
sbb
pushf
shrb
jl
xchg
cld
addb
pop
loop
imul
test
shll
push
cmp
test
aam
into
mov
cmova
jg
or
xchg
fsubrs
push
aaa
mov
sti
cmp
or
subb
cld
pusha
stos
aas
push
cmp
push
sahf
sub
sbb
aas
adc
sahf
push
push
stc
xor
das
scas
mov
popa
std
pop
push
jbe
push
outsl
fildll
add
mov
xchg
pop
push
xchg
cld
jmp
sub
cmpsb
lods
scas
in
lahf
jno
mov
sub
push
xorl
jle
or
in
stos
or
jge
mov
cmp
mov
xchg
sub
xor
adc
ja
test
xor
mov
sbb
out
shll
push
scas
das
push
or
shlb
imul
mov
ret
subl
push
and
adc
bnd
test
mov
cli
and
or
testb
mov
inc
cmpl
xor
fdivrl
in
movsb
xchg
lret
mov
dec
pusha
xor
movsl
add
or
fcoms
test
das
push
and
movsb
lods
cmp
stc
addl
jp
add
in
stos
and
and
fcmove
aaa
outsl
mov
sub
testb
cwtl
fwait
stc
xchg
mov
pop
and
pop
stos
dec
imul
je
or
lret
imul
pop
aas
xchg
lret
push
xor
es
cmpl
mov
loopne
mov
js
and
aad
inc
xchg
stos
test
mov
sbb
xlat
subb
popf
ds
sub
inc
jae
dec
xor
add
stc
imul
pop
mov
and
xchg
and
pop
fisubrs
sbb
js
xchg
addr16
fsubs
arpl
rorl
dec
add
iret
outsl
movsb
sub
lahf
or
jno
sbbb
xchg
andl
pop
cs
push
jmp
iret
mov
pop
cmp
mov
pushf
and
xchg
cmp
ljmp
popa
cmp
mov
mov
inc
lret
sbbl
lret
xlat
test
mov
jns
aam
scas
cli
add
aam
sbb
stc
add
mov
cwtl
insl
jg
push
mov
inc
jno
das
sbb
or
adcl
into
roll
ret
movsb
pop
fisttps
pop
icebp
ret
cmpsl
int3
jnp
sub
in
add
and
adc
push
sub
cmp
cwtl
mov
in
icebp
setb
rorb
push
test
dec
sbb
push
mov
aaa
push
sbb
fiadds
ljmp
pop
jp
scas
pop
out
lret
add
adc
push
dec
mov
ret
sbb
jns
imul
or
add
lods
push
mov
lahf
pop
xchg
bound
lods
xchg
nop
flds
xlat
mov
sub
or
fstpl
out
adc
popf
sub
loop
or
movsb
je
cmpsl
pop
pop
sbb
in
add
pop
jo
inc
gs
mov
int3
in
addr16
push
adc
scas
lcall
aam
movsbl
dec
add
xor
jmp
mov
mov
and
dec
push
jle
cs
inc
dec
and
and
insb
xor
je
cmp
jmp
inc
imul
je
adc
je
and
loopne
gs
sbb
lret
mov
mov
sti
push
pop
push
add
mov
sbb
fsubs
inc
cli
xor
or
cmc
push
sbb
push
mov
xchg
mov
les
inc
rcll
movsb
adc
add
mov
in
push
test
dec
lds
jbe
xlat
mov
test
jmp
cltd
inc
repnz
jle
ja
add
dec
or
pop
test
fstpt
xor
icebp
adc
sub
inc
pusha
jp
filds
jbe
mov
jp
push
leave
stos
pop
jnp
aas
mov
adc
idivl
ret
xor
ret
inc
popf
push
xchg
rcll
xor
hlt
sub
mov
popf
not
mov
cmp
aad
xchg
stos
cltd
pop
dec
arpl
adc
fiadds
mov
and
jne
push
in
lcall
loop
loope
clc
inc
subl
mov
enter
mov
sub
icebp
aaa
mov
adc
push
lock
jnp
push
sbb
dec
shufps
movsb
xchg
popf
cs
mov
cs
aaa
xor
mov
repnz
sbb
xchg
sub
mov
sahf
and
repnz
inc
jno
jno
lcall
xchg
dec
jno
sarl
push
push
lods
js
int
cmp
mov
shlb
adc
repnz
rcrl
leave
test
icebp
dec
or
test
into
aas
shr
imul
adc
pop
mov
popf
inc
jne
lcall
aaa
sub
jmp
xchg
ja
fsub
test
jae
fistpl
sub
ljmp
std
dec
arpl
inc
leave
les
dec
inc
pop
test
mov
repnz
hlt
js
pop
sbb
add
hlt
in
or
mov
lret
std
sahf
arpl
xor
or
scas
ljmp
fistps
pop
das
mov
and
movsl
or
push
in
jle
jle
cli
scas
and
lcall
stc
jnp
scas
pop
sub
push
push
sahf
imul
jnp
loop
das
add
dec
mov
mov
push
push
subb
xor
mov
pop
push
aas
clc
enter
imul
pop
mov
mov
cmp
pop
fxch
push
jecxz,pt
or
mov
dec
stc
mov
mov
push
loopne
mov
add
sahf
sub
js
mov
dec
fisttps
xchg
and
dec
pusha
aam
ljmp
mov
or
scas
push
rcl
add
lods
add
aam
mov
pushf
lea
xor
adcb
xchg
add
lock
lods
mov
movsb
pop
cmpsb
int3
and
pop
pop
jge
xchg
inc
inc
push
xchg
add
dec
shll
sub
fs
rclb
incb
mov
cmp
adc
push
dec
addr16
sub
shlb
mov
pop
int
ss
andl
out
or
push
in
xor
dec
add
je
or
and
daa
xchg
xor
int3
push
or
subb
dec
inc
rorb
aas
xlat
popa
xlat
bound
jns
or
jne
cmpsb
js
xchg
adc
not
sti
fs
iret
push
test
iret
mov
sub
cmp
dec
jge
push
mov
jne
push
push
loop
mov
push
fcompp
nop
std
popf
cwtl
push
mov
clc
jbe
out
mov
inc
lds
push
sti
adc
out
inc
cmp
lds
adc
dec
jnp
fsubrs
add
cmp
xchg
insb
pop
out
je
sahf
test
jns
sbb
inc
ja
push
mov
sbb
xlat
ret
sbb
iret
aas
fsubl
sbb
aaa
cmp
rolb
div
mov
pop
jne
aad
push
cmp
stos
or
push
cmpb
xor
sbbl
and
mov
ja
sbb
sub
jae
repnz
lods
add
mov
xor
int3
adc
in
mov
push
pxor
mov
nop
repnz
mov
in
test
sub
loopne
int3
xor
mov
ss
or
push
and
xor
out
rorb
fsubrp
push
xor
out
push
movsl
jnp
dec
ja
mov
and
shll
cmp
daa
push
jg
push
sub
adc
mov
imul
inc
inc
outsl
mov
test
xchg
lea
pop
pop
inc
sbb
sub
xchg
inc
test
lret
jp
popf
lds
mov
test
lds
jmp
enter
aam
test
iret
dec
ja
sti
pop
outsb
das
iret
xlat
pop
sub
inc
push
adc
sbb
mov
into
aaa
fwait
out
std
into
or
dec
mov
movsl
movsl
fcomp
xor
and
dec
mov
outsl
outsb
cs
mul
rolb
add
addb
add
or
cmp
dec
std
mov
loop
fsubrs
test
pop
or
ret
cmp
add
sbb
mov
jne
addr16
and
adc
cli
mov
mov
cltd
mov
clc
and
and
cmc
sub
jl
jp
movsb
arpl
add
xlat
mov
push
mov
cld
int3
push
adc
push
sahf
xchg
adc
gs
ret
xchg
out
add
and
repnz
cmp
or
sub
icebp
imul
fmull
add
insb
outsb
nop
add
jne
mov
sbb
pop
andl
ror
dec
pop
in
insb
or
add
cmc
pop
stos
cmpsl
lahf
xchg
add
and
sub
mov
xchg
movsl
jns
lods
xchg
inc
aad
sahf
xor
dec
jmp
sbb
dec
push
pop
xchg
pop
add
push
ret
jg
jg
mov
lahf
mov
ljmp
xchg
sub
cwtl
dec
mov
stc
jl
mov
sbb
fsubp
jb
xchg
ss
pop
xchg
pop
sub
sub
or
cmp
pusha
adc
icebp
adc
test
lods
je
lods
pop
movsl
out
addr16
xchg
icebp
imul
aaa
xchg
xchg
nop
loop
jecxz
aad
adc
adc
dec
mov
test
out
sub
fwait
mov
arpl
sbb
and
dec
shrl
jl
inc
mov
jmp
sbb
add
mov
jne
ret
rep
xor
xor
shl
inc
stos
int
push
inc
jb
mov
mov
push
insb
jecxz
jmp
pop
jg
lods
adc
mov
outsl
adcl
scas
mov
fidivl
inc
lret
cmp
in
push
aad
pushf
ds
sub
push
out
jne
or
mov
in
les
scas
inc
loopne
and
shlb
jbe
jb
pop
push
sbb
cmp
jb
add
test
mov
gs
sahf
outsb
add
mov
lock
cmc
ss
mov
js
neg
jo
xchg
mov
rolb
cmpsb
jne
fs
js
test
add
orb
add
pop
call
add
jno
jo
idivb
rcrb
and
icebp
filds
add
adc
bound
pop
mov
hlt
cwtl
jno
cmp
mul
add
mov
insb
subb
mov
decl
sti
or
pop
idiv
jo
xor
adc
jae
mov
push
mov
hlt
aas
xor
iret
ret
dec
and
push
or
push
push
fstp
jmp
and
xchg
mov
jae
sub
fstp
sahf
xor
cmpsb
mov
mov
xlat
mov
test
mov
or
jbe
pop
push
or
fisttpll
pusha
imul
xor
std
fwait
xor
aad
outsl
pop
rcll
pop
dec
cmp
jmp
dec
fidivs
xor
enter
mov
adc
mov
mov
xchg
aad
rclb
mov
sub
idivl
fs
lcall
jl
sub
in
jne
in
mov
mov
scas
pusha
fstpt
pop
mov
and
scas
popfw
add
cmp
aas
iret
lea
add
sbbl
fldenv
mov
insl
sbb
imul
push
loop,pn
imul
mov
mov
lcall
es
andl
out
scas
mov
or
mov
iret
mov
mov
mov
repz
repz
pop
insl
mov
bound
pusha
xchg
sbb
sub
mov
cld
cmp
adc
sub
cmp
xchg
test
cmp
insb
jo
fdivrs
sti
in
or
xchg
jl
jmp
cmpsb
imul
jb
cmp
shlb
sbb
or
pushf
push
lods
add
pop
fbld
or
xchg
push
into
imul
xchg
inc
xor
sbb
movsl
sbb
test
lds
lret
inc
xchg
test
testb
dec
in
fwait
mov
repnz
clc
arpl
jl
aad
subb
loope
and
or
test
aaa
pop
jecxz
test
pop
mov
icebp
jnp
test
sub
rclb
mov
clc
cmp
out
mov
pop
out
lods
adc
mov
out
mov
sarb
leave
ljmp
xor
xchg
sub
sub
dec
shll
pop
in
imul
aam
shlb
popf
lahf
aaa
roll
testl
mov
push
cs
in
or
jecxz
loope
mov
loopne
cmp
mov
imul
fmul
fdivrl
inc
into
push
mov
out
and
cli
pushf
ja
outsb
pop
sbb
sbb
xchg
mov
mov
sub
repz
pusha
inc
and
mov
sbb
imulb
scas
mov
loop
mov
sub
sub
inc
in
jnp
in
sti
les
loopne
imul
push
out
and
push
cmp
push
movl
cmp
push
icebp
notl
insl
xor
xor
cmp
adc
imul
jns
xor
sti
dec
aam
ljmp
pop
dec
add
dec
mov
mov
dec
loop
int3
xchg
and
inc
sbb
ret
mov
push
adc
pop
movsl
lods
in
lcall
cmp
fwait
aam
rolb
push
mov
dec
mov
inc
insb
jge
sar
or
pop
push
fimull
test
pop
test
popf
push
cmp
xchg
repz
out
dec
mov
dec
stos
mov
push
dec
movzwl
mov
icebp
das
mov
fdiv
adc
cmp
or
pop
repz
daa
mov
cwtl
int
pusha
loop
jbe
jmp
mov
cmp
sbb
xchg
loope
fldenv
popf
je
movsl
xlat
and
lock
and
or
mov
imul
mov
mov
xchg
imul
jecxz
xchg
xlat
inc
das
lods
divl
sbb
cmp
sbb
cmp
jno
cmpsl
sub
lds
fiadds
addr16
in
fildll
lods
xchg
leave
cmp
ds
shr
pop
in
mov
in
loope
lcall
mov
in
int
mov
xchg
mov
dec
xor
aas
xor
xor
pop
scas
or
sbb
push
dec
in
lretw
lret
loop
cmp
shl
sub
push
xchg
jmp
xchg
mov
mov
daa
lcall
jns
fmull
or
ds
jb
ss
pop
bound
cmp
sub
mov
ss
cmp
ret
mov
pop
mov
mov
xchg
testl
mov
in
mov
and
mov
pop
xchg
mov
fldenv
lahf
je
in
das
sar
sub
nop
sbb
das
cmpsb
add
push
lods
dec
push
dec
dec
push
pop
sbb
fsubrs
pusha
insb
jno
jo
insb
aam
or
in
test
lea
insb
decl
gs
cmp
paddsb
xor
imul
pusha
cli
outsl
inc
mov
cltd
push
repz
repz
cmpsb
rclb
adc
cmpsb
mov
divl
mov
xor
iret
add
clc
jmp
ljmp
push
lcall
cli
mov
stc
jns
lahf
in
rcrb
pop
out
mov
inc
pusha
daa
jecxz
fs
es
inc
push
ret
ret
add
dec
inc
add
in
hlt
or
pop
stc
mov
push
insl
jg
out
mov
push
push
push
inc
and
test
repnz
sub
lods
lock
jg
outsl
push
insb
in
shll
cmp
jbe
stos
push
inc
lahf
push
mov
loope
aad
mov
dec
jbe
cmpsb
loopne
mov
jecxz
or
add
or
xor
xlat
lds
aaa
and
addl
or
dec
ficoms
addb
sub
or
inc
aas
aaa
in
mov
mov
int
pop
into
repz
clc
fisttps
add
sbb
mov
fs
push
pop
fwait
lods
ret
sub
jge
repz
pop
dec
mov
rclb
mov
adc
in
rcr
cmp
mov
pusha
mov
xchg
movb
pushw
stos
je
loop
in
hlt
lret
xchg
cli
or
stc
int
fwait
shlb
cmp
sub
mov
pop
outsl
add
jp
sub
call
scas
rcr
in
out
cmp
add
add
outsb
cwtl
add
push
lea
xchg
xchg
out
lods
pusha
mov
mov
negb
or
rol
xor
inc
test
mov
cmp
test
pop
lret
fwait
adc
imul
addb
add
movsb
dec
push
insl
in
es
call
andb
dec
es
mov
mulb
scas
push
inc
leave
nop
or
ret
mov
sbb
mov
iret
inc
xchg
jo
movsl
inc
das
add
jo
sub
mov
push
fwait
cmc
mov
xchg
push
pop
ja
and
pop
popa
pushf
mov
mov
out
mov
and
pushf
mov
subl
insb
jne
sbb
mov
pop
and
loopne
or
div
pusha
and
cmp
and
sbb
stos
and
pop
and
fsts
call
cmp
fistps
or
ret
and
imul
mov
repz
jmp
les
cli
pop
sbb
push
pop
movnti
clc
insb
xor
daa
ret
push
mov
mov
movsl
out
dec
mov
frstor
ret
adc
jg
sbb
popa
xchg
mov
jb
jbe
pop
mov
add
repnz
jne
inc
add
xor
mov
xchg
je
cmpsl
sbb
lret
call
push
fwait
std
cmp
and
andl
sub
and
aas
dec
push
das
inc
addr16
ds
daa
mov
inc
popf
daa
push
adc
test
lods
inc
dec
ret
pop
lret
cltd
and
fiadds
cltd
sbb
cmc
addl
adc
lock
fs
sub
out
lods
fs
stos
ljmp
sbb
push
loope
loopne
jp
sub
add
mov
ds
xchg
rclb
aad
cwtl
daa
push
xor
lds
mov
push
shl
sbb
cwtl
jle
add
call
fistpl
into
sub
cmp
push
ds
out
mov
dec
das
sub
mov
mov
ret
inc
jae
sahf
mov
adc
test
mov
push
jae
popa
imul
mov
inc
xchg
enter
in
stos
inc
or
aaa
adc
sbb
or
and
add
cmp
sbb
pushf
movsl
xor
sbb
test
fstpt
mov
ljmp
add
scas
cmp
cmp
add
popl
or
cmpsb
mov
cmp
mov
mov
pusha
mov
push
mov
lcall
out
or
mov
pop
push
ds
jns
lea
sub
into
imulb
repz
loop
sbb
sarb
sahf
jbe
push
pusha
notl
repz
sub
daa
xchg
shl
pop
xor
stos
pop
add
xor
push
ja
cmp
push
lea
or
fs
inc
addl
xorl
xor
mov
loop
nop
inc
rorb
adc
rcll
xor
leave
popa
inc
mov
and
dec
mov
jl
lods
jo
dec
sbbl
pop
dec
cs
mov
pop
inc
jo
cmp
mov
into
cli
test
pop
pushf
cmp
cli
xchg
cmp
inc
sti
mov
xchg
jo
pop
rolb
xlat
js
pop
dec
cmp
push
xor
lcall
pop
push
dec
sbb
pusha
pop
mov
lret
out
mov
push
icebp
jb
ret
and
mulb
jno
stc
ret
xor
cwtl
pop
mov
sbbb
cmpsb
adc
xor
push
sbb
inc
mov
ss
add
push
push
inc
mov
inc
sub
push
movsl
les
repz
int3
es
cli
icebp
jo
xor
ljmp
push
or
popl
pop
clc
inc
mov
rorb
cmp
mov
push
fwait
js
out
push
ret
roll
repnz
mov
pop
push
enter
xor
cli
popa
bound
ss
dec
jp
or
ss
dec
cmp
pop
int3
xchg
inc
xor
add
add
in
scas
ss
out
xchg
cltd
mov
sub
ds
xor
cs
push
dec
movsl
mov
ljmp
dec
les
jle
cmp
cmpb
outsl
mov
adc
movsl
mov
pop
dec
mov
movsb
sahf
mov
mov
pop
or
mov
jns
mov
in
test
addr16
jle
pop
xor
scas
inc
xor
jb
notb
movsb
jl
loope
dec
fs
in
jl
faddp
cmp
dec
pop
xor
push
add
fwait
outsb
dec
emms
or
xor
mov
pop
xor
xchg
cmpsb
aad
mov
mov
xchg
stos
pop
andl
imul
stos
mov
hlt
arpl
or
mov
push
push
stos
lock
in
sub
std
mov
pop
test
ficoml
xchg
dec
jg
imul
sbb
mov
pop
push
jns
cmp
mov
fs
clc
repz
inc
dec
dec
mov
fstps
fwait
lcall
and
jge
jae
leave
ds
lahf
stos
mov
aad
lods
push
loop
push
loopne
mov
gs
hlt
pop
inc
cmpsb
pushf
hlt
movsb
mov
stc
mov
mov
ds
jge
inc
mov
cwtl
pop
push
sub
lret
sahf
sbb
enter
aad
rolb
jnp
enter
ljmp
or
inc
dec
iret
xchg
pop
popa
mov
int
xor
enter
sub
pusha
adc
outsb
sub
loop
sub
pop
mov
icebp
and
lods
pop
call
sub
xor
out
ds
sub
sub
cs
call
dec
iret
inc
sub
jecxz
pusha
add
xor
je
add
inc
lcall
dec
cwtl
sbb
iret
repnz
jmp
jge
sbb
cmp
inc
pop
pop
clc
int3
xlat
lea
rol
push
mov
mov
or
repz
xor
popl
hlt
cmp
imul
dec
pop
stos
pop
out
add
push
imul
sbb
test
cmovo
adc
xor
mov
mov
pusha
fists
icebp
js
mov
rorb
ja
insl
data16
xor
iret
lcall
xchg
sbb
mov
mov
pushf
xor
out
test
or
xorl
cmp
mov
sahf
and
sub
dec
push
xor
out
dec
outsl
xor
xchg
ja
mov
daa
cmp
lods
add
or
push
xor
pop
adc
mov
cmp
xlat
shl
rorl
pop
jp
adc
mov
test
sub
popa
aad
xchg
lret
push
pusha
add
rolb
mov
pop
rcl
pop
and
dec
cmp
fdivs
mov
lret
jb
jo
int
mov
ljmp
cmpsb
sbb
and
sub
sub
adc
cwtl
movsb
and
loopne
pop
loope
inc
scas
imul
xor
jbe
pop
notb
xor
mov
jge
mov
sbb
cmp
cld
rorb
or
shlb
push
xchg
xor
sbb
mov
into
int
fdivs
dec
leave
mov
addr16
xor
stos
sbbl
jb
call
cmp
sub
ljmp
push
jae
ds
pop
cmp
cwtl
bound
test
ja
movsl
outsl
repnz
test
jp
adc
jbe
mov
mul
jl
jne
daa
sbb
mov
pop
push
daa
ret
add
jnp
lods
repnz
insb
sub
sub
stos
sub
int
cmp
sbb
jl
or
sub
stos
push
mulb
aaa
xchg
sub
sbb
popf
loope
mov
or
adc
mov
and
fsubrs
int3
add
mov
fcmovu
pop
cmp
inc
addr16
je
out
cmpsb
xor
add
xor
icebp
scas
jno
push
sahf
xor
neg
inc
lret
in
jp
dec
xchg
or
sbb
rep
test
jno
inc
cli
in
pop
mov
outsb
gs
sbb
cltd
push
jns
mov
hlt
outsl
sahf
in
adc
sbb
mov
mov
push
adc
fldl
call
rol
push
xchg
sbb
stos
push
dec
repz
fdivs
push
lock
pop
cs
inc
jne
rolb
cmp
notb
rolb
sbb
je
and
fistl
pop
inc
out
or
hlt
pop
push
rcr
inc
pop
out
sbb
insb
inc
xchg
mov
xor
and
out
push
jg
jg
jbe
out
mov
mov
shrb
inc
imul
enter
icebp
lods
adcl
add
xchg
or
or
inc
xor
push
jns
pushl
push
pop
sbb
cwtl
sahf
cmpsl
inc
sub
mov
cs
mov
xorb
aam
and
rcl
xor
dec
popa
xor
mov
cmp
mov
xchg
std
cmc
movsb
repz
mov
aam
fwait
negl
add
sbb
insl
ret
mov
scas
jecxz
clc
inc
bound
arpl
in
jae
fsin
mov
imul
xchg
inc
jmp
sub
mov
movsl
inc
xchg
aaa
ljmp
push
scas
push
mov
pop
popf
rclb
fnsave
ret
add
xlat
data16
cmp
test
inc
dec
pusha
add
mov
hlt
outsl
push
cld
sbb
cs
std
mov
jg
mov
icebp
pop
jns
ds
mov
mov
fiadds
test
cmpsb
lods
pop
mov
jo
enter
sbb
mov
popa
mov
mov
pusha
push
xchg
pop
arpl
xlat
mov
xchg
sbb
cmc
mov
xchg
inc
sbb
add
sub
adc
dec
outsb
mov
das
xor
ja
or
outsl
imulb
popa
orl
gs
sbb
lds
jnp
cmpsl
and
gs
mov
and
movsl
stc
ret
xchg
add
push
and
cli
ss
mov
xchg
push
mov
xor
fisttps
loopne
call
add
sub
outsl
fldt
pop
add
test
xor
loop
xchg
or
pop
negl
movsb
loope
repnz
int3
add
incl
leave
cltd
pop
cmp
mov
jp
cmc
cmpsb
std
and
adc
add
lds
fs
imul
pop
pop
pop
sub
pushf
xor
test
push
testl
jns,pn
mov
push
jo
pusha
mov
ror
or
jo
mov
jnp
mov
fsts
dec
dec
mov
or
shlb
sub
popf
cli
loop
jl
lcall
in
lahf
push
adc
pop
dec
mov
add
mov
xor
jno
ret
cwtl
fiadds
dec
xchg
daa
jmp
xchg
mov
stc
divl
sub
push
lret
sbbb
mov
cmp
jle
pop
xor
fimull
dec
mov
mov
inc
testb
dec
sub
fisubs
or
dec
les
cmpsb
dec
mull
push
jmp
xchg
jge
xor
int
pop
mov
lods
dec
lds
jmp
js
movsl
sarb
mov
sbbb
loope
outsl
mov
ljmp
arpl
adc
mov
xor
scas
dec
jmp
dec
mov
push
add
pop
xchg
and
aas
addr16
mov
mov
imul
rcll
nop
int3
inc
xor
in
data16
into
xor
cmpsb
inc
je
in
dec
inc
add
or
das
dec
xchg
jp
lock
ss
lods
dec
fsubp
or
jge
cwtl
cmovns
add
jnp
in
push
adc
mov
fwait
clc
rcrl
mov
lahf
aam
adc
rcrb
mov
xor
dec
or
dec
inc
das
in
dec
mov
jbe
mov
cmp
ljmp
aad
movsl
pop
jo
jne
inc
or
movsl
jbe
adc
ja
jg
cmp
stos
mov
icebp
ret
pop
cmp
pop
mov
lret
mov
enter
jg
xchg
or
or
mov
push
pusha
idivl
cmpsl
ja
je
loopne
mov
mov
jo
sbb
cmp
adc
popf
push
mov
mov
fildl
add
enter
push
jae
jp
les
jo
sahf
push
aaa
cld
ss
outsb
daa
mov
and
ljmp
inc
pusha
pop
push
cmp
push
sarl
and
cmpb
xor
les
adc
loope
add
icebp
mov
mov
out
ret
cmp
cmp
mov
xor
cmpsl
in
fldt
leave
popa
add
imul
mov
repz
adc
sbb
out
sti
fsubrl
pop
push
imul
and
ja
adc
jno
push
fdivl
cmpsl
ja
mov
adc
or
inc
adc
stos
notl
adc
xor
and
dec
sarl
les
sbb
jbe
ljmp
jnp
adc
repz
pushf
and
lret
sti
push
cwtl
fnstsw
in
ljmp
mov
pushf
dec
jle
push
insl
roll
add
jle
jecxz
fcmovnu
push
pop
jl
test
je
mov
jno
leave
shlb
lods
int
fs
adc
lahf
cli
orl
les
xchg
aad
push
jg
shrb
jbe
sti
movsb
sahf
sahf
or
int
jl
test
outsb
sub
inc
ret
pop
inc
cmp
pop
lcall
add
sub
sub
ret
mov
sti
in
and
mov
sub
movsb
outsl
ss
push
push
sub
cli
jo
sub
cmp
mov
outsb
add
fmul
loope
mov
jmp
pop
mov
inc
fwait
jg
cmp
push
fucomi
insl
fdivrl
xor
call
lods
mov
stc
sub
enter
int3
pusha
inc
sbb
pop
sub
sbb
push
and
mov
cltd
jmp
cmpsl
cltd
xchg
xchg
in
movl
cmp
mov
push
xchg
jmp
sbb
cmp
sub
cmpsl
jo
les
mov
lds
icebp
push
bound
jbe
xchg
in
xor
mov
je
test
add
jnp
scas
add
lea
pop
push
bound
jnp
or
and
push
adc
pop
and
inc
mov
mov
jne
pop
call
aas
adc
sub
or
mov
mov
outsb
aas
mov
add
mov
les
pop
cli
cltd
jno
pop
add
cmp
xor
bsf
out
dec
faddl
fildll
leave
mov
pop
jge
les
dec
mov
dec
mov
sarl
daa
loope
fwait
in
js
dec
adc
clc
mov
add
cmp
mov
and
fs
cmp
cmp
hlt
inc
mov
incb
rorl
xchg
push
imul
mov
pop
xchg
inc
jnp
gs
and
jno
pop
mov
mov
inc
fstp
loopne
fxch
dec
inc
fxtract
pop
xchg
xchg
jb
xor
dec
lahf
push
push
xchg
add
and
dec
mov
outsl
shlb
xchg
sbb
lea
lods
xchg
cmp
xor
sub
mov
cmp
not
hlt
insb
ja
xor
inc
mov
shll
leave
nop
aam
add
sbb
push
mov
and
jb
std
jo
sub
imul
lahf
lret
orb
pop
add
repz
rcll
mov
fs
fsub
fisubrs
jns
shr
pushf
mov
cmpsb
pop
or
shlb
incb
push
lahf
adc
and
push
and
dec
add
add
mov
inc
jl
adc
push
adc
mov
andb
cmp
data16
sub
inc
push
cmc
mov
enter
pop
and
inc
ds
int3
xchg
ret
fisubl
ds
push
in
pop
cs
insl
mov
mov
or
cld
inc
inc
inc
lcall
push
adc
mov
inc
and
push
repz
add
xor
mov
dec
pop
fists
cmpl
cmp
cmpsl
push
mov
mov
int
add
call
push
idivb
mov
xor
pop
jp
mov
xor
icebp
push
mov
outsb
xor
loop
divl
lock
loopne
out
jecxz
cmp
jo
daa
stos
cmp
scas
add
jecxz
inc
subb
movsl
and
jo
sub
lret
pushf
push
shll
mov
inc
arpl
in
scas
lcall
or
lret
ss
adc
push
loope,pn
push
out
mov
lds
cltd
pop
fbld
mov
push
fidivrl
jp
inc
jnp
lds
cmpsl
or
movsl
push
xchg
or
mov
or
lcall
adc
notb
dec
fdivs
push
std
xchg
add
adc
mov
push
mov
mov
stos
stos
outsl
int
jno
mov
jns
jnp
xor
rolb
in
stc
cmp
xor
leave
loop
int
cmp
mov
pop
pop
mov
fbstp
call
enter
cmp
xor
fadds
in
push
ljmp
mov
jmp
push
jp
pop
fnsave
inc
mov
fldenv
pop
push
stos
xchg
xchg
daa
mov
add
aam
and
inc
mov
lods
cmp
adc
fwait
and
out
add
push
mov
jno
cmpsb
lea
mov
cli
fiaddl
sub
pop
insb
jg
push
or
pop
xchg
sbb
cmp
sbb
test
inc
cmc
pop
cmp
dec
test
push
adc
insb
xchg
test
xlat
sub
sub
and
inc
sub
adc
fwait
push
mov
sti
in
bound
lahf
outsb
test
jmp
push
call
pusha
sbb
ret
jle
xor
sub
xlat
push
std
mov
adc
pop
sub
push
cmpsb
lds
and
mov
pop
and
mov
ret
jnp
and
cmc
jno
dec
push
dec
sbb
xchg
jbe
inc
jno
ret
jb
lahf
mov
out
cmpsb
cli
inc
lock
shr
outsl
cmpsb
cli
jl
jecxz
push
mov
jecxz
out
test
loopne
shrb
mov
pop
mov
out
or
jle
pop
test
lods
mov
lods
aam
add
pop
sbbl
inc
lcall
xor
xor
jo
mov
mov
sub
push
xor
push
stos
and
cmp
mov
inc
aam
mov
mov
dec
adc
scas
sub
adc
mov
mov
xor
pop
mov
dec
mov
fistps
aaa
add
pop
xchg
inc
mov
xchg
dec
cmp
inc
fs
or
sbb
inc
data16
mov
adc
sub
or
xor
loop
sub
shlb
pop
jbe
pushf
dec
rorb
out
mov
mov
aad
xor
inc
jne
pop
rcll
xchg
mov
mov
xchg
push
push
jp
xchg
xchg
popa
inc
dec
out
jl
xor
xchg
ret
popa
jecxz
push
imul
test
idivl
negl
inc
dec
aad
jl
mov
mov
adc
je
fistpl
aad
int
in
repz
or
jae
fcomps
out
adc
das
loopne
xchg
cmp
repz
pop
pop
cmp
mov
loop
and
jmp
sbb
fs
inc
nop
dec
ret
sbb
mov
xchg
dec
int3
into
aas
xchg
xor
push
outsb
fs
lods
dec
lods
ljmp
jp
out
fildll
lods
jns
mov
mov
ljmp
xchg
rolb
pop
cmpsb
imul
xor
xchg
out
cwtl
pop
dec
dec
dec
insl
jne
add
cmp
out
sub
pop
xchg
cld
adc
stos
xchg
xor
push
xchg
inc
ja
testb
xor
out
inc
dec
mov
add
add
cmpsb
mov
sbb
push
cmpsl
sbb
lds
ret
cmp
push
aad
xchg
push
test
jo
push
sub
test
jae
loope
add
sti
push
enter
ret
pop
icebp
int3
mov
inc
mov
fcmovnu
xchg
lret
cmp
test
dec
addr16
nop
rcr
inc
int
bound
out
shrl
cli
lret
cld
inc
in
dec
data16
dec
pop
in
rorb
cltd
cli
ficomps
cmp
dec
loop
jp
cmp
jg
jmp
test
xlat
addl
jo
fstl
and
fnstenv
and
stc
dec
add
push
popf
hlt
ret
pushf
lret
leave
xchg
mov
inc
pop
xor
popa
mov
in
int3
loop
aad
adc
sub
push
xchg
xor
fildl
dec
les
lods
fs
pop
jle
fs
test
sti
dec
adc
mov
mov
cmp
pusha
xor
hlt
dec
inc
in
mov
sub
shll
push
pop
daa
arpl
dec
xor
lods
sub
inc
insb
daa
je
xchg
or
mov
cmp
mov
dec
pop
pop
dec
sub
mov
int3
dec
scas
jns
in
les
sub
jb
xor
icebp
sbb
out
lods
bnd
popl
and
add
xor
add
dec
inc
jns
in
cs
cld
out
stos
out
repnz
xchg
out
push
mov
jp
jne
and
shlb
int3
cmp
mov
dec
inc
add
test
out
cld
sti
push
cmp
mov
enter
jae
push
loop
mov
sbb
mul
jmp
and
xchg
pop
sbb
mov
cmc
call
sub
popf
leave
cltd
cli
mov
aaa
out
push
xchg
icebp
push
dec
out
push
imul
and
outsb
imul
dec
mov
out
inc
fadds
xchg
push
cmpsb
or
push
mov
xor
inc
fstpl
shr
mov
sar
push
stos
testl
fwait
notb
xchg
mov
cmp
test
inc
shlb
pop
add
adc
pop
shrl
mov
cmp
mov
xor
lock
xor
xchg
pop
rorl
lods
cltd
in
xor
inc
outsl
dec
mov
int
cld
xchg
fs
inc
xchg
pop
test
jbe
xchg
ud0
push
push
fdivr
push
xor
ljmp
rorb
mov
cld
pushf
pop
outsb
lahf
mov
lods
arpl
int
repnz
xchg
lahf
mov
mov
xchg
xchg
fisttpl
jae
sub
int3
fnstsw
arpl
ja
cmp
mov
pusha
jnp
aad
fcomps
inc
jb
mov
mov
sub
mov
cmc
out
aas
outsb
jno
jns
pop
popf
xor
and
mov
enter
add
or
icebp
mov
out
push
les
mov
jb
mov
xchg
jnp
gs
repnz
gs
add
cmp
and
push
scas
scas
loope
int3
push
push
daa
pop
add
mov
scas
rorb
xchg
sahf
movsb
out
mov
jecxz
mov
out
jnp
push
mov
outsl
es
dec
sub
mov
push
cmp
jecxz
inc
fmuls
cmc
xchg
cmpsb
dec
js
mov
jecxz
es
lahf
scas
stos
fxch
lea
and
mov
push
test
sub
fdivs
test
jb
shr
sub
push
cmp
aad
daa
loopne
jno
xor
in
inc
repnz
sbb
push
aaa
xchg
out
stos
cs
inc
insl
pop
xchg
insb
mov
dec
lret
adc
out
jecxz
jmp
test
jns
cmovge
mov
out
adcb
mov
or
mov
out
jecxz
ds
es
int
aaa
xor
adc
jmp
or
push
dec
mov
imul
mov
jns
dec
scas
andb
add
mov
add
dec
cmc
push
lods
push
pop
xchg
roll
out
cmpsb
dec
sbb
dec
hlt
inc
mov
out
pop
push
imul
pusha
test
dec
pop
sub
outsl
fsubrp
dec
aas
jmp
sbb
lds
stos
add
shll
test
push
or
mov
stos
mov
mov
xchg
jb
fistl
sub
pop
sbb
in
in
cs
jmp
shll
lret
int
xchg
shrb
int
sub
lahf
pop
mov
jp
inc
sub
icebp
xchg
xor
xor
cld
lcall
push
mov
shll
das
push
push
cld
arpl
mov
dec
cld
test
jmp
ficoml
shl
mov
dec
mov
pop
xchg
into
and
iret
and
ret
dec
leave
jne
arpl
and
add
adc
lret
fwait
jno
sub
jnp
inc
mov
daa
fadds
int3
dec
mov
subb
iret
int
icebp
insl
scas
pusha
xor
ret
push
mov
outsl
insl
mov
mov
dec
or
dec
enter
push
jo
in
cmp
js
fdivr
inc
out
pop
inc
push
add
cmpsl
popf
push
or
adc
bound
fstps
dec
notl
cmpb
and
push
inc
js
ds
jb
insb
cltd
inc
cmp
mov
jmp
adc
xchg
fidivrl
adc
mov
sarl
pop
push
test
inc
jl
xor
rcr
adc
jl
cmp
xchg
daa
out
jmp
idivl
jp
pop
cltd
emms
jae
repnz
jg
imul
movsb
imul
jmp
cltd
and
adc
icebp
sbb
pop
les
in
add
cmp
ret
xchg
mov
arpl
mov
mov
sub
jl
sbb
icebp
dec
dec
or
repz
movsl
stc
int
or
enter
sbb
repnz
addr16
aad
lods
cmc
loope
daa
adcb
fcoml
or
sub
and
pop
mov
push
outsl
sahf
and
jo
aaa
jmp
lods
push
pop
cltd
faddl
mov
adc
sub
hlt
leave
sbb
pushf
cwtl
pushf
mov
outsl
or
js
stc
out
mov
sub
xchg
shl
cmc
ficompl
dec
insb
jb
cmp
add
out
repz
outsb
in
jb
repz
popa
enter
pop
aam
andl
xchg
adc
mov
int3
sub
or
insl
sbbl
fnstsw
and
xchg
mov
xchg
cli
cltd
push
sbb
push
aas
cld
mov
mov
movb
stos
enter
fldt
ja
and
es
sub
int
dec
addb
or
mov
fs
leave
sahf
cmpsl
sbb
jmp
ja
push
cmp
and
mov
shrb
pop
movsb
mov
and
aad
ja
adc
push
dec
mov
int
mov
out
sbb
push
fisttpll
sub
in
adc
fists
mov
cltd
ljmp
imul
sub
mov
and
cmp
xchg
inc
outsl
pop
pop
popa
movsl
es
cmpsb
out
add
push
sbb
seto
xchg
sub
sbb
sbb
sbb
or
cltd
add
fst
jne
push
mov
mov
sahf
repz
mov
mov
mov
cmp
xchg
insb
jle
movsl
xchg
jns
stos
icebp
mov
push
pushf
cmp
fcmove
iret
enter
sbb
cmpsl
sub
cwtl
push
iret
lret
sbb
movzwl
ljmp
sbb
ds
push
fistl
xchg
fcomps
ds
push
xor
call
dec
push
fnstcw
jge
pop
sub
test
or
testb
pop
inc
lcall
sbb
push
popf
jbe
or
pop
adc
push
lock
into
sti
faddl
imul
cmpsl
lcall
cmp
int3
jne
outsl
loop
pop
rorb
xchg
pop
push
sti
jp
outsl
sbb
cmp
out
add
stc
incb
push
xor
dec
in
jns
aad
jo
xor
jecxz
shrb
sarb
movsl
push
lods
mov
sub
fcmovnu
dec
ret
into
xchg
xchg
cmp
add
aad
shrl
mov
sub
xchg
enter
add
xor
iret
sub
xlat
or
mov
insb
sub
lock
mul
push
icebp
scas
or
push
inc
push
cmp
and
in
nop
les
in
inc
dec
cmovs
or
push
xorl
xchg
cmp
loop
push
iret
mov
adc
movsb
rcrb
fs
in
mov
ds
ds
pusha
mov
fs
inc
push
stos
cmpsl
cli
cmpsl
pop
xchg
push
cmp
jno
outsb
add
mov
sbb
ja
loop
xlat
iret
push
mov
scas
ret
xlat
jae
cmc
and
aaa
mov
pusha
mov
call
sbb
sbb
dec
lcall
in
mov
lds
jb
fisttpll
ss
out
pop
push
leave
testb
mov
ljmp
or
jbe
cmp
push
cmp
test
aad
std
and
leave
dec
adc
add
loope
fmul
inc
pop
int
stc
scas
lds
das
cltd
mov
cmpsb
add
mov
std
jnp
notl
push
pop
xchg
gs
sbb
es
pushf
icebp
js
mov
into
inc
test
bnd
sbb
scas
cmp
es
mov
xor
clc
mov
push
fimuls
cs
xchg
insl
int3
or
pop
aam
xor
cmp
cmp
test
in
popf
and
sbb
lods
push
loopne
roll
mov
jp
je
lahf
push
sub
cmp
cmpb
mov
cmp
cltd
out
lods
pushf
xchg
sbb
subb
imul
clc
cmp
pop
fs
push
mov
jae
in
cmp
and
dec
aad
push
sbb
es
cmpsb
mov
fstpl
setg
pop
mov
xchg
hlt
insb
adc
cmpl
in
shrb
inc
pop
popf
xlat
sahf
lcall
inc
lahf
mov
btr
sub
xlat
add
adc
imul
push
ret
push
jg
outsl
mov
arpl
or
jecxz
pusha
mov
jne
jecxz
cli
dec
jmp
insb
xor
push
jno
cmc
jo
xchg
push
add
test
mov
jg
test
inc
jnp
add
inc
jp
daa
orb
mov
ror
int3
lea
sub
mov
sbb
popf
push
fcmovnbe
xchg
mov
out
mov
sub
mov
lds
xchg
pop
add
add
decb
mov
leave
aaa
cmp
mov
pusha
popf
xor
hlt
fdivs
dec
add
add
sarb
stos
mov
sub
mov
int
dec
push
out
pop
or
mov
in
mov
je
push
sub
stos
sbb
leave
rolb
arpl
inc
or
add
xchg
mov
push
jmp
jb
aas
add
mov
call
push
pop
jmp
xor
jl
insl
cld
jmp
push
fdivp
scas
pop
movsl
fwait
mov
mov
dec
adc
fsub
sub
outsl
adc
cmpsb
cs
push
ja
mov
leave
xor
inc
in
add
dec
xchg
mov
xor
cwtl
test
mov
lret
push
fstpl
jg
jg
addr16
sahf
sbb
adc
fsubl
pop
mov
test
lods
ret
dec
xor
and
in
add
leave
out
jns
stos
fnop
out
jl
inc
adc
loopne
dec
sbb
stos
movsb
sub
cmp
cmpl
sarl
insb
mov
jae
mov
fsubrl
dec
in
xor
dec
loopne
jne
and
mov
fadds
jno
shlb
cmpsb
orl
repnz
fiaddl
adcl
lret
sbb
mov
pop
add
rcrl
clc
movsl
cmp
mov
xchg
or
aad
je
gs
stc
test
jbe
sbb
sbb
aas
xlat
fmuls
adc
mov
fistl
pop
hlt
push
out
outsl
inc
cltd
btr
cmc
sti
in
add
xchg
adc
out
mov
dec
lock
sbbb
jmp
push
rolb
pop
xlat
es
outsl
lods
test
mov
push
imul
or
ds
jl
lock
or
sub
ret
leave
xchg
stos
mov
mov
cmp
aas
std
gs
sbb
cmpsl
xchg
xchg
test
andb
vmovntdq
xchg
inc
cmp
mov
mov
jmp
lock
aas
fwait
lret
lret
push
cmp
jp
fs
outsb
cmp
xchg
jg
sbb
les
aaa
test
daa
add
xor
gs
mov
daa
mov
push
mov
or
shll
mov
int
and
aaa
sahf
inc
jbe
roll
pop
into
leave
sbb
cmp
lods
xchg
mov
fdivrs
sub
inc
push
mov
or
fcoms
out
push
push
mov
push
inc
mov
clc
iret
mov
lods
ds
mov
add
clc
jo
dec
pusha
jp
lret
lods
lret
shr
stos
movsl
push
and
xlat
shl
cli
dec
mov
addr16
jl
or
sbb
and
movsb
or
loope
daa
sub
ss
inc
push
push
jle
sub
xchg
inc
data16
pop
stos
adc
addb
dec
pop
dec
test
out
es
test
push
out
mov
mov
sbb
add
cwtl
push
out
jl
xchg
dec
xchg
les
xchg
sub
pop
adc
aaa
mov
pop
mov
jns
scas
pop
xor
rorb
out
int3
mov
ja
scas
orl
ljmp
shlb
call
pop
and
test
xchg
int
mov
insb
fbstp
pop
mov
ficoms
jl
dec
outsb
adc
mov
lret
xchg
out
lahf
xor
sub
lret
inc
out
push
lock
and
push
sbb
arpl
and
fistpl
push
add
enter
out
repnz
xchg
cmp
dec
lods
mov
out
fisttpll
sbb
cmpl
fmuls
cmp
pop
sbb
pop
sub
enter
inc
mov
xchg
and
push
adc
enter
rol
popa
inc
lret
or
pop
sahf
mov
bound
pop
ret
stc
dec
mov
jmp
push
mov
loope
je
inc
imul
fnstcw
push
lea
mov
sub
scas
cmp
and
adc
push
sub
cmpsl
push
mov
push
pop
inc
push
mov
jp
pop
rcrb
out
nop
test
std
adc
pop
mov
fs
cmpb
cmp
push
inc
and
test
jo
dec
xchg
adc
enter
pop
dec
push
mul
mov
mov
aaa
sbb
xchg
add
out
outsl
rcl
sbb
hlt
inc
pop
outsl
sti
push
cld
cmp
xor
xchg
scas
fmull
cmpsl
xchg
gs
sub
sub
pop
xor
sub
js
jg
loopne
je
mov
and
cmp
mov
inc
pusha
and
mov
mov
sar
cmp
and
pop
mov
fwait
addr16
jno
test
pop
cmp
jne
cwtl
cmpsb
xor
or
inc
adc
mov
dec
sub
sbb
fildll
clc
imul
pop
mov
out
pop
insl
mov
sbb
mov
into
add
popf
mov
mov
sub
fsubs
cmpsl
push
imul
or
sysenter
xor
into
jb
inc
dec
cmp
mov
das
popa
mov
cmp
daa
add
inc
pop
cmpsl
and
push
mov
repnz
adc
aad
cmp
sub
out
stc
xor
lock
cmp
cltd
or
dec
push
xor
and
insb
call
sbb
mov
jno
inc
fmull
ss
xchg
leave
add
jle
sbb
pop
ret
fidivrl
decb
inc
xchg
xchg
inc
adc
lcall
push
mov
fsubr
test
push
pop
je
lds
mov
aaa
movl
fstps
outsl
roll
out
and
xchg
push
std
ds
xor
scas
popf
cmp
sahf
push
lods
fs
rclb
or
jle,pt
enter
test
arpl
push
mov
jne
sbb
jge
mov
adcb
xchg
aaa
mov
mov
xchg
mov
sub
aas
pop
add
icebp
mov
cwtl
add
clc
aad
dec
cmc
mov
cwtl
rcrb
xchg
mov
subb
ficomps
cltd
adc
mov
mov
push
xor
xor
fwait
int
incl
rcr
lods
push
fs
cmp
cld
sub
es
stos
or
xor
ja
mov
stos
adc
test
or
mov
xchg
cmpsl
xchg
push
inc
punpckhdq
xor
das
xlat
sbb
mov
in
ret
or
and
stos
mov
mov
daa
outsb
lea
xchg
sti
mov
lds
mov
mov
iret
jge
push
imul
and
outsl
stc
clc
dec
or
pop
nop
mov
loope
add
fs
sub
cmp
add
inc
pop
js
push
mov
xchg
test
push
mov
or
jg
mov
mov
jmp
insb
fidivl
xchg
and
adc
inc
in
mov
fisubs
jge
dec
push
pop
out
scas
negb
ss
xor
push
into
call
mov
jp
mov
inc
aas
dec
mov
loop
fnclex
rclb
bound
pop
lds
sbbl
mov
add
sti
cmp
cli
inc
sti
lcall
adc
testl
cmp
hlt
gs
imull
mov
adc
scas
xor
xchg
and
stos
jmp
test
dec
adc
add
jb
ljmp
inc
fcoms
mov
mov
out
cwtl
cltd
inc
adc
sbbl
fwait
push
adc
bound
fwait
mov
add
shrb
pop
dec
aas
lcall
xchg
clc
mov
outsl
pop
xor
push
negb
add
mov
xor
mov
or
pop
jno
mov
mov
xchg
test
lcall
cmpsb
cmpsb
dec
sbb
sti
idivl
jle
xor
mov
push
inc
and
push
lods
push
mov
sub
out
iret
xor
mov
in
add
inc
jbe
xchg
dec
mov
outsl
and
fidivl
or
in
lahf
out
push
aad
outsl
in
or
fwait
push
aas
sbb
cmpsl
xchg
nop
adc
lret
call
into
xor
insl
adc
or
shrb
xchg
dec
cmpsl
push
mov
into
sbb
out
sar
mov
mov
jae
xchg
shrb
cmp
fdivs
lods
cmp
xor
sub
das
popf
cld
dec
fs
sub
loopne
icebp
mov
test
cmp
scas
push
pop
xor
dec
adc
rol
push
rclb
cmp
aam
push
cmp
in
mov
dec
cmpsb
and
rorb
sub
mov
pop
pop
dec
fistps
arpl
xchg
sbb
xchg
data16
std
mov
pushf
out
pop
jns
inc
in
jbe
add
rorl
pusha
mov
dec
jae
mov
jl
aaa
pop
mov
lods
inc
or
popa
jne
imull
lds
jns
xor
pop
mov
xor
sbb
dec
xchg
std
call
mov
jmp
out
sbb
aad
fnstsw
xor
repz
mov
mov
sbb
imul
fdivl
je
add
imul
sbbb
sti
das
negb
ljmp
and
pusha
aaa
mov
dec
mov
dec
or
sub
sarl
pop
aaa
fstpl
mov
loop
sbb
pusha
lret
pop
andb
push
dec
sub
ja
cltd
sti
mov
testb
pop
or
mov
testb
pushf
lods
cmpsb
add
clc
xchg
or
jg
imull
adcb
pop
test
lea
dec
sbb
scas
sahf
jp
lcall
dec
or
push
jnp
dec
movsb
jbe
cmp
xlat
rcrl
dec
push
jo
sub
sahf
jecxz
push
xlat
inc
mov
mov
sub
xchg
mov
repz
mov
jmp
aad
fisubs
andb
dec
in
imul
and
adc
fists
push
pop
sbb
inc
jae
jnp
sbb
iret
hlt
data16
movsl
jp
sub
sub
cmpl
incl
shlb
xor
imul
jo
out
push
pop
mov
mov
inc
push
rcrl
lcall
mov
jnp
stos
mov
repz
push
js
dec
cwtl
mov
loop
iret
fwait
adc
add
sahf
cmp
test
fsub
popf
push
call
push
inc
incb
out
mov
fidivl
sub
nop
inc
fadds
fwait
cmpsl
out
popf
aaa
mov
cmc
fsubr
bound
int3
mov
dec
stos
js
es
sub
adc
mov
xchg
call
idiv
js
clc
lock
or
push
push
push
fld
mov
jge
test
pop
cmp
xchg
ds
and
fwait
ret
and
outsb
in
xor
fucom
or
jb
push
pop
in
xor
pop
enter
xchg
sbb
mov
out
pop
shr
xor
inc
add
test
xchg
in
cmp
xchg
mov
arpl
orl
mov
fs
dec
push
fiaddl
js
mov
or
aas
enter
push
xlat
lret
or
sti
ret
ror
int3
loopne,pt
dec
pop
push
subl
and
int
dec
pop
lds
ret
push
mov
and
cmp
xchg
fildll
adc
adc
add
js
sbb
dec
and
out
adc
jp
loop
add
sbb
imul
and
mov
scas
cmp
or
ds
push
or
or
je
jecxz
fsubl
std
icebp
push
push
adc
push
push
add
push
test
ljmp
movsl
push
sub
jecxz
inc
mov
sbb
aaa
fldt
mov
imul
test
and
stc
ror
dec
mov
into
lcall
sahf
out
cmp
pop
xchg
jae
bound
out
iret
add
rcr
pop
push
or
sub
mov
mov
mov
prefetch
or
push
inc
xchg
pop
pop
imul
rcrb
test
xchg
movsb
rolb
sarb
add
pop
pop
cld
ja
or
movsb
test
in
popf
push
xchg
mov
xorb
adc
outsl
jno
out
cld
cwtl
dec
cmpsl
fstpt
jae
gs
scas
ss
in
jl
sub
testl
in
mov
fs
xchg
xchg
or
shlb
mov
xor
lock
sbb
pop
sbb
inc
roll
mov
int
aas
outsl
mov
pop
subl
data16
and
rcrl
ljmp
lods
or
stc
in
adc
cmp
lock
loope
stc
push
insl
outsb
dec
cmc
mov
fidivrl
and
or
neg
push
popa
fisttpll
push
mov
repz
jmp
inc
lock
lods
shll
and
mov
fwait
into
shl
shl
push
in
dec
mov
insb
mov
mov
push
dec
stos
stc
insb
rclb
jne
mov
sbb
cs
cmp
daa
cmp
jnp
push
movsl
pop
cmpsb
add
in
mov
dec
mov
mov
in
fsubrs
pop
jge
inc
rcrb
add
ljmp
xchg
popa
jp
cmpsl
xor
jae
jae
cmp
repnz
add
cmp
lods
adc
das
orl
adc
pop
pop
xor
mov
iret
mov
fsubl
addr16
push
pushf
dec
arpl
loopne
mov
int
test
adc
jmp
cwtl
inc
jp
dec
xchg
stc
cwtl
dec
mov
incl
aaa
incl
inc
or
sbb
ret
mov
push
gs
pop
adc
and
mov
push
stos
mov
pop
mov
jne
push
sbb
inc
sbb
jo
test
in
sbb
jg
inc
into
xor
movsb
lods
xor
push
roll
insl
add
sbb
loopne
pop
mov
push
adc
and
hlt
adc
and
adc
cmp
push
sub
pushf
rcr
cli
mov
inc
add
out
xor
and
fisttpll
out
mov
popf
cmp
arpl
pop
lcall
mov
mov
or
pop
out
add
sahf
outsb
mov
adc
jns
hlt
mov
sbb
dec
cmp
lret
rcrl
gs
dec
sbb
sti
repnz
lock
or
pop
loope
bound
loopne
fwait
sbb
leave
sub
sbb
cltd
jmp
imul
pop
in
lods
lret
sbb
push
loop,pt
inc
sbb
pop
cmpsb
lds
xchg
or
sar
ja
dec
xchg
inc
jecxz
addr16
jg
lret
hlt
pop
inc
add
popl
dec
in
jp
ss
adc
cmp
ja
ret
xchg
adc
sub
out
cli
fisttps
cmp
mov
mov
or
jns
daa
add
cltd
jae
pop
cli
xchg
mov
dec
inc
sbb
jns
xchg
mov
out
or
jnp
out
pop
dec
push
outsb
sub
sahf
jns
sub
daa
mov
cmpsl
lcall
mov
cmpsb
push
mov
add
adc
roll
xor
scas
sub
je
pushf
sbb
push
mov
jb
testl
movsb
mov
sarb
fucomi
mov
xchg
enter
lret
fdiv
aaa
fpatan
dec
mov
div
mov
lea
mov
mov
mov
sbb
sub
and
cs
push
sub
ffreep
jmp
inc
jge
imul
sti
aaa
push
scas
test
bswap
testb
jecxz
ret
push
jae
repnz
pop
sbb
sbb
push
adc
xor
push
es
scas
in
xchg
jecxz
sub
inc
jge
aas
je
jp
out
imul
cmp
jg
dec
sub
add
loop
cmp
aad
ds
cmp
inc
push
pop
mov
xchg
test
pop
ljmp
adc
test
push
fildll
loopne
cltd
lock
xchg
jmp
push
out
mov
jl
mov
inc
rcrb
adc
cmpsb
cmp
call
mov
pcmpgtb
mov
int
cs
pop
inc
sub
xchg
and
mov
push
fisubl
sbb
mov
psubsb
test
dec
mov
test
jbe
test
or
mov
rclb
jle
add
inc
in
lods
push
xchg
cwtl
pop
push
mov
jmp
and
fcoml
int3
cmp
cmpl
adc
jb
imul
aaa
mov
lcall
ret
xchg
xor
pushl
push
cmp
add
stc
je
mov
jno
iret
mov
aas
lods
stos
nop
dec
pop
loope
jne
sbb
adc
in
xchg
cmpsb
xchg
fimuls
jne
inc
mov
cld
or
push
xor
movsb
out
or
push
inc
inc
repnz
push
dec
lds
add
ljmp
das
or
xor
inc
push
cmp
pushf
call
repnz
pop
lods
xor
jp
sbb
mov
out
mov
ss
mov
cmp
mov
xchg
jbe
xchg
xchg
daa
dec
sbb
hlt
mov
lods
pop
inc
push
or
sbb
dec
cmp
movsl
inc
push
add
adc
imul
mov
or
xor
jmp
fisttpll
out
mov
dec
test
loopne
xchg
int
mov
into
push
cmp
clc
add
jecxz
pusha
sbb
push
sbb
dec
je
jmp
fstps
xchg
insl
lods
ret
xchg
fmuls
inc
fsubrs
mov
mov
jle
xor
inc
imul
jle
cwtl
jns
xlat
inc
mov
cli
jecxz
push
ficompl
mov
inc
mov
icebp
lret
mov
xlat
movsl
std
xchg
in
mov
lods
leave
adc
dec
sbb
cmpsl
fsubr
jl
fwait
sub
mov
xchg
sub
xor
sub
iret
mov
xchg
add
pop
aas
nop
repz
mov
cltd
fsubrl
dec
addb
inc
cmp
sub
fldenv
dec
pop
cwtl
int
test
dec
cmp
mov
dec
xchg
sahf
and
outsl
rcrb
mov
xchg
sahf
loopne
jmp
dec
cmp
les
out
es
sahf
jne
hlt
or
adc
inc
pop
mov
imull
mov
fisubs
jae
sbb
adc
fiadds
jge
fmull
mov
sahf
sub
test
add
pop
push
sbb
cmp
jl
add
mov
in
je
cs
sub
jae
inc
sub
adc
sbb
lahf
inc
in
test
sub
das
jecxz
jbe
sub
xor
jp
mov
pcmpgtb
test
cli
loop
cltd
mov
lods
jb
and
pop
mov
mov
ss
mov
subb
stos
sub
xchg
xchg
or
into
xchg
mov
xor
sbb
shrb
ja
out
imul
cmp
ret
rolb
pop
in
aam
fidivl
pop
mov
mov
xchg
cmp
loopne
pop
inc
out
mov
popa
and
das
popf
mov
cmp
scas
cmp
cmp
xlat
mov
pop
dec
dec
mov
dec
xchg
add
inc
adc
push
les
scas
and
push
int
jo
imul
mov
xor
or
movsb
test
out
cmp
inc
std
decb
jl
cmp
mov
adc
lret
xor
scas
roll
and
and
mov
add
stos
sub
jecxz
in
lret
cmp
dec
repz
gs
sub
cmpsl
adc
cmp
jmp
loop
je
faddl
test
data16
out
add
sahf
push
jp
cmpsb
add
shlb
cmpsb
xlat
sbbb
add
dec
pop
imul
pop
in
jae
pop
mov
jb
sbb
mov
mov
dec
negl
push
lret
push
cmp
in
mov
xor
fnstenv
pushf
cmp
cmp
adc
std
mov
divb
fdivl
sbbl
idiv
loop
fimull
cmp
aas
addb
rcr
xchg
xor
pop
sarb
ss
loop
scas
or
fwait
sbb
pop
jl
cmp
push
fsubl
out
xchg
mov
fstl
xor
jae
or
xchg
push
xchg
push
int3
lea
int3
inc
push
popa
dec
test
mov
xchg
xor
addl
cs
in
lds
mov
mov
cmp
push
jmp
sarl
sub
flds
jmp
dec
shrl
rcrl
lret
mov
xor
dec
pop
mov
icebp
xchg
jne
adc
cmc
test
lods
xchg
lret
inc
fwait
adc
xchg
rcrl
into
jb
out
sarb
mov
call
cs
dec
mov
inc
adc
mov
out
sub
insb
fdivs
aam
dec
inc
outsl
xchg
addr16
inc
movsb
sarb
jo
fmuls
pop
js
ljmp
cmp
fsubl
into
adc
fisubs
lods
cmp
cli
adc
pop
sbb
mov
fcompl
adc
xchg
sub
loopne
push
jecxz
repnz
push
stc
adc
push
cld
lahf
adc
push
mov
leave
xlat
jp
adc
inc
sbb
int3
clc
or
pop
mov
xchg
sbb
scas
inc
sahf
std
dec
jp
mov
sti
insb
mov
cli
dec
outsl
pop
push
test
jae
sti
sbb
sub
add
adc
aad
repnz
in
and
push
mov
movsl
ret
adc
pushf
or
cmp
dec
sbb
inc
jl
and
cld
lret
xor
mov
jmp
in
pop
outsl
push
mov
mov
add
int
cmpsl
test
lods
sub
push
out
add
xor
dec
mov
xor
lods
into
daa
mov
push
clc
sti
rcpps
and
shl
scas
mov
xchg
aaa
mov
mov
lcall
call
test
pop
jo
jns
insb
push
xchg
aad
and
cmpsb
push
pop
jns
inc
in
xchg
cmp
je
leave
into
enter
leave
push
ds
movsl
or
xchg
nop
xor
or
inc
or
add
test
push
push
and
push
daa
subl
push
jae
insb
mov
add
add
cmp
lods
cltd
fcoms
jno
xchg
cmpsb
leave
cmc
into
std
scas
mov
insb
popf
aas
sti
jle
leave
push
dec
scas
cmp
push
inc
mov
repnz
xchg
cmpsb
fldcw
inc
in
pop
dec
xchg
and
lcall
sbb
fdivrl
ljmp
sbb
adc
popa
cltd
stos
xchg
or
mov
jno
in
mov
repz
jnp
lret
fsubl
cmp
pushf
or
mov
mov
cmpsl
mov
nop
push
sbb
mov
iret
jg
xchg
lret
jmp
jmp
add
xor
add
inc
jmp
bound
insb
pop
inc
ret
sub
dec
dec
mov
sarl
and
pop
jmp
inc
pop
push
das
pusha
popf
pop
ret
jp
or
xor
xchg
lods
lock
lods
adcl
neg
jmp
xchg
enter
mov
outsb
repz
sbb
sub
push
cli
pop
hlt
or
xchg
mov
xor
inc
mulb
jl
mov
jbe
xchg
icebp
enter
out
int
push
inc
xor
daa
rol
xlat
pop
stos
xor
out
mov
mov
push
ja
xor
insl
push
in
xchg
lahf
pop
xchg
test
mov
jbe
gs
push
jb
fwait
enter
adc
outsl
mov
iret
jne
mov
mov
dec
or
or
fiaddl
jg
addr16
sti
mov
in
stc
scas
push
into
push
bound
outsb
repnz
fwait
imul
push
mov
push
xchg
inc
repnz
push
sub
mov
and
addr16
dec
inc
insl
xchg
xchg
test
nop
rorl
not
mov
jp
loope
xchg
stc
mov
and
jne
scas
mov
mov
and
cmp
data16
inc
or
popa
mov
cmp
je
adc
lods
sbb
imul
mov
xchg
ds
and
aam
xor
frstor
stos
adc
adc
and
pushf
mov
xchg
push
test
jl
mov
ja
enter
and
pop
repnz
bound
mov
xor
inc
jle
jecxz
arpl
mov
dec
fwait
dec
enter
and
imul
jno
adc
xor
xor
repnz
xchg
mov
es
jp
mov
cwtl
rorb
pop
outsb
mov
jnp
dec
cld
jmp
add
mov
dec
aam
xor
test
shl
test
shlb
push
pop
adc
push
outsb
ds
or
test
mov
mov
stos
xchg
fbstp
aaa
xlat
cmp
insl
push
pop
movsl
addr16
lahf
sti
data16
mov
xchg
test
out
loope
leave
jno,pn
inc
push
jle
pop
stos
aad
shl
xor
fcompl
xor
mov
movsb
and
gs
nop
mov
jnp
add
lcall
idivb
mov
pop
cmc
addl
data16
repnz
adc
fidivs
cmp
mov
ljmp
pusha
rep
cwtl
mov
out
addr16
int3
adc
xor
mov
and
dec
nop
or
jl
cld
sbb
xchg
stos
xor
test
jmp
or
jge
mov
or
mov
sub
fcmovne
jmp
dec
and
outsb
sbb
fwait
pop
add
pop
xchg
mov
test
fmull
out
xchg
out
sbbb
idivl
pop
xchg
sbbl
or
xchg
pop
mov
cmp
xchg
outsl
cmpsl
dec
dec
xchg
inc
in
ljmp
mov
cltd
lret
sbb
int3
insb
popa
movsb
mov
sbb
and
pop
mov
lods
sub
movsb
inc
cld
mov
sarb
jns
mov
jge
int
sti
ficoms
add
dec
insb
fadd
aas
fcomps
sbb
in
dec
or
out
sbb
aaa
dec
sahf
rcrb
xor
pop
add
sub
nop
aam
inc
fcompl
cltd
mov
dec
leave
mov
cmpsl
xor
xor
fisttpll
ret
ret
ret
xchg
add
movq
cs
std
or
pop
adc
fcomi
clc
or
mov
adc
lea
out
fcom
mov
push
adc
fcoms
ret
imul
xor
das
mov
jle
add
dec
outsb
es
mov
sbb
in
mov
and
jp
mov
daa
testb
fsub
inc
insb
hlt
pop
adc
sahf
mov
cmp
test
sbb
out
dec
fisubrs
or
addr16
xor
inc
adc
sahf
mov
lret
and
sbbb
push
cli
xchg
cltd
xchg
mov
ljmp
xorb
fldt
mov
ds
push
imul
data16
mov
sub
sub
das
push
jb
outsl
std
jo
imul
mov
push
mov
repz
sarb
ret
mov
out
ret
mov
push
mov
pushf
test
push
imul
das
add
jl
xor
push
jge
std
movsl
cltd
in
sbbb
popf
insl
mov
inc
iret
filds
xor
addb
rcl
push
mov
in
ret
mov
lret
rorl
iret
jmp
xchg
cmp
push
sbb
scas
mov
push
push
pop
ret
push
pop
sub
pop
aam
xchg
fs
pop
or
scas
into
add
cs
rcll
nop
andb
insb
ljmp
add
or
add
movsb
arpl
outsl
jno
imul
push
insb
or
outsb
pop
mov
out
xlat
in
push
pop
and
mov
imul
jne
stos
cwtl
dec
pop
mov
or
dec
inc
or
popf
push
inc
in
sbb
sub
cli
cmp
addr16
add
inc
clc
mov
mov
adc
xchg
aas
jmp
xor
scas
std
pop
cmp
cmp
mov
jmp
or
sub
xor
ja
std
xchg
fstpt
jnp
popf
mov
sub
cmp
lahf
nop
stos
fs
add
shrb
and
hlt
outsb
push
mov
pop
cmc
xlat
dec
mov
movsl
dec
icebp
orb
mov
aad
mov
add
dec
jne
stos
mov
aas
mov
pop
mov
negl
stos
fwait
into
xchg
mov
jns
mov
sub
and
and
inc
xor
mov
popa
std
push
sarb
sub
loop
mov
fiaddl
xchg
lds
or
cmp
filds
mov
pop
adc
cmpsl
push
and
jmp
or
sub
mov
sbb
clc
jl
mov
xchg
sbb
das
call
sbb
fwait
mov
cmpsl
imul
mulb
cmp
push
cmc
scas
ret
fisubl
mov
cmp
js
xor
sub
sub
lds
sbb
icebp
js
cmp
push
daa
es
push
inc
mov
mov
jmp
ffree
xchg
add
adc
pop
push
push
rcll
push
push
mov
and
es
inc
sbb
cmp
ss
div
in
jbe
mov
arpl
test
dec
mov
outsl
sbb
add
add
test
ret
test
dec
lock
inc
adc
cmp
je
mov
rcrl
popa
jg
sbb
insb
sarb
fs
xor
push
or
mov
and
push
in
push
loope
lds
clc
or
leave
std
enter
insb
fs
cmpps
outsb
and
enter
push
xchg
outsl
int3
or
outsb
mov
or
cltd
xlat
and
sahf
jmp
sub
mov
sti
jg
fucomi
idivb
mov
pop
add
or
inc
cmp
stc
mov
leave
xchg
push
stos
dec
mov
data16
xchg
mov
pusha
fldt
mov
push
cmp
imulb
push
or
daa
in
in
add
gs
data16
mov
dec
roll
push
arpl
mov
in
in
lock
adc
dec
rcrl
fimull
shlb
mov
dec
xchg
mov
push
mov
mov
xchg
repnz
outsl
mov
sub
xchg
push
sub
lods
jne
test
mov
inc
push
sub
or
pushf
sub
mov
dec
scas
pop
les
adc
pop
lds
nop
nop
pop
xchg
mov
sub
call
loopne
xor
in
leave
inc
add
and
call
lahf
mov
jbe
stc
xchg
add
add
lcall
and
lret
stos
sbb
cmp
or
adc
in
jns
sbb
stos
int3
jnp
mov
rcll
insl
cld
das
hlt
int3
mov
sub
lock
data16
outsl
inc
push
xlat
lret
incb
fdivl
push
add
add
push
xchg
dec
rcll
jo
sub
xchg
fldl
or
or
sub
jb
mov
outsl
mov
xorl
xchg
mov
pop
arpl
sbb
gs
inc
adc
dec
fisttpll
adc
insl
cmpsb
push
or
int
adc
mov
mov
mov
jo
dec
cmp
or
sahf
fnsave
wbinvd
data16
ds
nop
push
cmp
stos
add
rcll
or
dec
leave
rol
fiaddl
loop
dec
imul
mov
adc
mov
fstpl
push
lret
cmp
mov
dec
dec
push
ret
and
jb
aaa
fwait
fs
popf
mov
push
pop
and
dec
inc
and
add
mov
ja
jbe
pop
hlt
dec
mov
jo
mov
imul
aam
mov
stos
sub
fstpl
fldenv
xor
cmc
stos
inc
add
flds
lods
sysexit
ret
xor
cmp
sbb
out
mov
mov
xor
cmp
pop
lds
repnz
adc
pop
adc
std
cmpsb
repz
fstpl
jae
mov
je
cmp
int3
push
inc
movsb
je
dec
stc
in
jp
mov
cmpsl
cmp
mov
mulb
test
js
mov
jb
popf
inc
mov
rcrl
lcall
cmpsb
sahf
sbb
jg
cmp
adc
insl
push
dec
inc
scas
adc
inc
and
mov
bound
fsubr
xchg
pop
out
cwtl
jae
and
mov
pop
lds
sub
push
sbb
int
int3
jge
fimuls
ficoml
xchg
lret
shrb
imul
gs
movsl
ret
push
shrb
rcrl
incb
aam
cmpsl
cld
or
je
push
pop
push
pop
dec
and
push
adc
ljmp
adc
push
shr
das
mov
mov
or
scas
mov
xchg
adc
negb
ljmp
or
int3
lods
sahf
pop
sub
fistps
jnp
loop
test
enter
mov
dec
dec
mov
repnz
jae
mov
cltd
push
mov
scas
or
cltd
mov
mov
in
incb
mov
jg
arpl
cmp
in
pop
or
pop
mov
xchg
adc
mov
movsl
mov
out
dec
lds
mov
insl
mov
adc
dec
lds
nop
adc
cmpsb
stos
orb
pusha
test
sbb
inc
mov
inc
mov
jb
jns
test
bound
pop
push
push
shll
sahf
inc
mov
pop
out
push
dec
ds
xchg
mov
push
inc
jg
testb
and
mov
dec
mov
pop
mov
pop
xorl
fidivl
hlt
adc
mov
sbb
sub
insb
mov
ljmp
push
cmp
xchg
push
mov
sbb
mov
xchg
push
or
data16
dec
imul
add
sbb
aad
lock
adc
mov
or
dec
lock
push
out
scas
insl
out
cmc
icebp
mov
push
mov
enter
sub
cwtl
push
jge
cmp
clc
aam
rcrb
xchg
inc
adc
sti
inc
adc
insb
xor
xchg
cs
gs
xor
pop
dec
inc
xor
mov
lods
inc
push
lcall
sub
subb
fld
adc
stc
lods
dec
fwait
inc
outsl
push
xchg
push
mov
jnp
mov
push
test
repnz
nop
imull
stos
movsb
mov
mov
andl
mov
mov
cld
testl
adc
and
mov
addl
mov
mov
orl
jge
loopne
mov
pop
and
push
sahf
bound
or
fs
inc
jecxz
icebp
cmpsb
imul
mov
and
gs
repz
lret
jns
or
bound
xchg
ljmp
push
mov
loop
divl
daa
arpl
adc
mov
fucomp
dec
lds
or
bound
dec
fstps
lea
lcall
inc
movsl
stos
jbe
in
out
addr16
lea
pop
mov
out
push
and
or
mov
cmpsl
stos
cmc
mov
int3
push
or
xor
and
loop
jecxz
sbb
aad
scas
xor
data16
aad
dec
xchg
mov
mov
push
repz
fcompl
push
ja
dec
and
sbb
js
dec
repnz
scas
jno
mov
pushf
xchg
and
insl
fcom
ja
aam
aas
pop
jae
rcrb
sub
out
mov
mov
cwtl
xchg
push
pop
mov
into
cmp
movsl
push
jp
and
paddb
test
daa
pop
mov
jo
fistpll
repz
fisttpll
mov
adc
and
sbbl
sti
loopne
xor
xor
fidivs
jbe
cld
int3
or
aas
or
lret
cmp
adc
xor
or
sub
mov
in
mov
aas
mov
fcoms
pop
movsb
call
xchg
movsl
pop
lcall
rorb
test
adc
shrb
mov
cmp
cmp
daa
movsl
xchg
subb
push
add
mov
add
dec
dec
lds
xor
inc
cld
sub
lahf
and
rolb
je
ja
push
and
int3
pop
sub
or
xchg
cmp
repnz
push
cmp
shr
sarb
fidivl
lea
xchg
out
inc
addl
mov
fwait
sub
sbb
cmpsl
jecxz
das
or
xchg
insl
jmp
add
pop
adc
push
sbb
fistpl
test
lret
mov
lret
leave
in
ss
lret
sub
cli
xor
rcrl
mov
popfw
jae
pop
imul
inc
lods
pop
bound
inc
push
adc
adc
int
inc
cmpsl
push
int
cltd
mov
ficoml
cmpsb
add
daa
mov
or
das
xchg
mov
sbb
push
push
sbb
sub
sub
pop
and
mov
iret
mov
cwtl
adc
imul
cmp
roll
pop
sbb
lret
and
aam
inc
in
mov
loop
sbb
fldl
mov
pusha
adc
imul
push
jp
and
mov
inc
add
add
dec
pop
ret
das
dec
mov
addr16
mov
xor
bound
xlat
pop
pusha
inc
xor
xchg
inc
in
inc
rolb
icebp
pop
sub
in
insb
sub
fld
xchg
inc
cmp
sbbl
call
mov
and
enter
adc
popa
mov
test
xchg
aaa
inc
in
loope
fisttps
mov
cmc
std
popa
add
push
insb
scas
mov
xor
xor
sbb
inc
mov
and
hlt
inc
cmp
loopne
sub
mov
pushf
jns
daa
das
pop
les
push
int
cmp
cld
jbe
pop
add
sbb
mov
es
mov
or
inc
jp
sub
scas
out
cmp
mov
bsf
aaa
call
ds
and
inc
shlb
ficoml
ja
mov
es
pop
fbld
rolb
test
cmc
inc
add
bound
mov
push
xor
int3
and
pop
scas
icebp
mov
shlb
add
fld
dec
adc
repz
in
aas
xor
mov
lcall
and
pop
sub
scas
push
sub
movsb
ljmp
lret
or
outsb
push
dec
arpl
cmc
insb
adc
jno
cmp
adc
aam
cmp
ds
ljmp
pop
in
jo
pop
jns
ret
add
mov
pop
lods
pop
add
daa
roll
pop
add
ljmp
es
scas
test
loop
leave
jmp
inc
andb
or
mov
pop
xchg
jle
imul
or
aad
pop
sbb
mov
adc
lods
jo
mov
push
inc
repnz
es
stos
pop
jns
mov
mov
push
data16
inc
or
inc
jno
nop
pusha
sbb
inc
ljmp
mov
xchg
adc
shl
int
or
movsb
or
jge
mov
test
mov
mov
xchg
js
xchg
and
ror
sub
mov
pop
es
inc
hlt
int
mov
jne
or
out
outsl
jns
sbb
pop
cmp
pop
shrb
add
pop
rcrb
add
into
cmpsb
ret
mov
enter
mov
aaa
inc
xchg
js
xchg
cltd
div
jo
mov
mov
shll
fdivl
jg
cltd
jo
scas
lock
sahf
inc
fildl
jo
or
jns
push
pop
iret
ret
jae
inc
sti
insl
push
jecxz
mov
lret
jnp
insl
imul
movsb
pop
or
je
mov
push
jbe
repnz
nop
in
cmpsb
dec
outsl
test
div
jmp
cmp
mov
cmpsb
xchg
add
lcall
sub
push
inc
icebp
popf
iret
fbld
mov
aam
cmp
rorb
xor
fbstp
adc
xchg
loop
jnp
cld
cmp
mull
hlt
mov
loope
decb
xor
gs
insb
sub
cltd
ja
stc
inc
lret
inc
cmpsb
addr16
mov
jo
inc
jmp
loope
icebp
sahf
and
ljmp
xorl
pop
xchg
enter
imul
iret
push
out
out
nop
mov
in
xchg
lds
clc
push
xor
push
test
push
sbb
or
les
mov
sub
cmp
aaa
add
jno
mov
jbe
lock
js
jge
clc
sbb
insl
out
dec
sti
aaa
test
lahf
mov
inc
stos
hlt
adc
lret
xchg
test
aam
aaa
mov
cmpsb
aad
pop
sub
dec
enter
lock
bound
nop
xchg
dec
push
ret
xor
mov
xor
inc
stc
or
jl
or
test
rorb
jmp
nop
into
ja
nop
icebp
fisubrl
add
push
mov
xchg
daa
sti
loope
je
and
fadd
shlb
xchg
gs
lahf
imul
out
xlat
xlat
xor
subl
pop
xchg
mov
xlat
push
push
lods
pop
jl
gs
mov
leave
cld
xchg
outsb
stos
mov
in
cmp
call
pop
mov
adc
rolb
das
leave
je
pop
movsw
lods
insb
outsl
pushf
js
push
jae
and
out
and
insl
inc
fwait
add
arpl
or
xchg
mov
popf
stos
popf
push
xor
adc
xor
in
xor
pop
xchg
arpl
mov
xchg
arpl
xorb
pop
jmp
aam
nop
sbb
adc
xor
mov
test
xchg
sub
dec
imul
test
jmp
pop
push
and
and
cmpsl
push
ret
xchg
jae
xchg
inc
das
cmc
je
add
push
jae
out
mov
jp
ss
pop
dec
xor
in
sub
pop
cmp
ss
sahf
xchg
cmp
jb
jb
fsubs
lahf
pop
jl
cli
mov
cmp
je
sub
pop
jnp
imul
xor
pop
stos
cmp
xor
cltd
pop
sahf
pop
add
mov
in
xor
fdivr
lahf
jo
adc
cmpsl
adcb
jg
popf
loopne
cmpsb
lods
arpl
leave
popf
sti
jae
js
jnp
into
lahf
fimull
xor
lcall
sbb
imul
sbb
or
ja
mov
lret
shll
insb
mov
pop
fistps
int
push
les
sbb
pop
sbb
test
call
loop
cmp
outsb
or
loope
lret
ljmp
adc
outsb
and
roll
push
mov
ja
andl
xchg
cltd
mov
mov
mov
jo
push
mov
popf
pop
xor
sti
pop
stos
lock
jns
and
scas
das
jo
xor
cmp
pop
add
mov
push
and
pop
in
add
xchg
loope
out
das
jp
test
jnp
dec
push
jl
je
cmp
jecxz
xor
jecxz
adcl
and
fs
or
pop
call
call
pop
fucomip
enter
repnz
cltd
cltd
push
shlb
adcl
xor
int3
xchg
in
js
out
lods
es
sub
sbb
mov
js
and
dec
data16
push
mov
jns
mov
or
mov
jmp
jle
daa
xchg
mov
call
lods
imul
iret
and
pop
mov
aad
sbb
repnz
popf
stos
enter
sbb
out
ret
mov
xchg
mov
popf
das
push
out
in
mov
jnp
mov
dec
mov
lds
out
pop
leave
mov
dec
add
out
lret
dec
repnz
mov
adc
pop
insb
movsl
insb
outsb
inc
xchg
mov
xor
ret
sub
sub
int
pop
stos
incl
insb
xor
push
imul
jo
jbe
in
imul
nop
push
loope
iret
pop
inc
mov
icebp
xchg
lahf
xor
and
mov
sbb
cmp
dec
out
test
fs
das
leave
mov
pop
cmp
daa
dec
shlb
jae
add
adc
lods
insl
scas
iret
aam
scas
adc
adc
jp
mov
ljmp
sahf
xchg
pop
jge
xor
ret
insb
testl
popf
hlt
xor
adc
xor
push
test
aas
adc
cmpsl
nop
imulb
sub
add
int
test
daa
ret
mov
rcr
push
outsl
or
push
push
mov
rolb
cmp
stos
cltd
or
xor
int
popa
loope
pop
rcl
pop
popa
bsr
adc
mov
or
fcoms
inc
cwtl
rclb
insl
roll
push
movsl
and
pushf
ds
xor
addr16
cmc
int3
in
stos
inc
jbe
xor
mov
insl
push
movsb
jmp
int
sbb
or
jecxz
aad
sub
mov
mov
mov
xor
test
andb
sbb
dec
sub
test
mov
push
ja
lea
testb
ds
xor
mov
call
jmp
imul
sbb
test
inc
and
sbb
or
ror
fcoms
in
cmpsb
jo
fsts
jge
push
pop
xchg
fbld
mov
adc
mov
push
sub
jne
mov
sub
dec
orl
test
lods
in
stc
sub
xor
pop
idivl
dec
insl
dec
push
sub
inc
jae
xchg
xor
insb
adc
scas
push
testb
jne
sbb
inc
dec
mov
mov
push
and
jns
pop
sub
shlb
in
sub
xor
jno
sbb
call
add
cmpsb
js
adc
xor
xlat
pop
inc
pop
rcrb
xor
ja
fdivs
outsb
push
lahf
data16
xchg
fidivrl
repnz
jb
call
test
lods
xchg
lea
stos
outsl
popa
jne
push
ja
add
fldt
cmp
test
pop
mov
pop
clc
in
or
pop
xchg
in
pop
icebp
ror
mov
mov
addr16
jne
dec
mov
cltd
mov
mov
mov
sbb
pop
psllw
cmp
xchg
jb
dec
rolb
inc
dec
loope
subl
addr16
push
push
movsw
clc
xor
xor
jno
loope
push
mov
sahf
subb
xor
imul
stos
dec
js
negb
inc
int
in
adc
sub
dec
inc
mov
pusha
ds
dec
sbb
rorl
mov
stos
dec
addr16
push
or
lret
in
insl
icebp
jge,pt
sub
call
xchg
xor
add
or
sbb
pushf
sub
jnp
or
cltd
sbb
mov
inc
jp
mov
in
mov
push
mov
jl
nop
jp
out
push
adc
inc
lods
test
cld
insb
movsb
mov
cmp
xor
jle
sbb
das
pop
andb
adc
xchg
rorb
int3
jecxz
jne
lahf
cmp
sub
mov
xorl
mov
movsb
adc
sub
sti
inc
in
les
inc
fcmovnbe
lret
test
jg
mov
rclb
xchg
adc
emms
rolb
jg
inc
sbb
mov
sbb
popf
stos
or
inc
sbb
sti
aas
iret
sbb
inc
cwtl
test
cld
mov
test
jg
in
or
dec
ss
dec
fs
mov
push
cmp
dec
mov
adcl
and
imulb
xor
jb
push
cld
lods
add
push
fsubrl
and
mov
and
and
enter
mov
lret
xlat
cmp
jecxz
loope
ss
add
into
cli
mov
add
jge
mov
fistpl
scas
div
mov
sbb
dec
aad
arpl
push
lcall
imul
pop
data16
rclb
xchg
scas
push
cmp
rorl
sub
cmp
scas
fcmovnbe
xchg
adc
and
jmp
inc
dec
das
pop
ss
addr16
cmp
clc
pop
jns
push
and
sub
out
adc
movsl
lea
mov
cmp
mov
cmp
push
addr16
xchg
pushf
inc
inc
enter
jbe
mov
xchg
jnp
jnp
call
movsb
cmc
mov
push
jmp
dec
loope
and
cltd
cmp
lock
inc
lret
xlat
loope
or
mov
lahf
xor
int
in
sbb
add
pop
inc
sbb
aad
or
pop
lret
add
ret
loope
imul
xorb
loope
mov
stos
xchg
sbb
shrl
or
adc
adc
clc
jne
jecxz
pop
shr
vpcmpeqw
cmovg
nop
pop
mov
mov
ss
test
cmp
imul
mov
pop
lods
pop
mov
std
sub
into
xchg
pop
jns
lea
fstl
sub
out
test
or
setb
push
mov
or
in
jp
mull
push
cmpsl
jge
mov
mov
mov
loope
int
cli
dec
add
aas
add
fidivrs
mov
push
mov
aad
sbb
jecxz
jle
add
popf
bound
loope
dec
stc
test
and
orb
sbb
and
jo
loop
fcmovnbe
pop
inc
and
or
jmp
lock
arpl
scas
xor
andl
ud0
call
xlat
pop
pushf
mov
aam
movsl
pop
mov
movlps
mov
sbb
inc
dec
xchg
ss
sbb
cli
cmpsl
int
sub
lahf
adcl
jnp
inc
xor
cmp
pop
inc
inc
shrl
not
aaa
add
mov
rolb
cmp
jb
cli
push
inc
jb
mov
ror
inc
mov
jmp
adc
test
mov
xor
fimuls
xchg
nop
dec
push
jp
xor
negb
loop
arpl
adc
push
mov
subl
push
dec
mov
fwait
xor
lea
adc
shl
insl
les
test
cmpsb
ret
stc
cwtl
xchg
cmp
dec
out
jmp
and
inc
cmp
add
stos
sub
dec
sub
enter
fsubs
icebp
or
fcoml
jge
or
inc
add
ret
sbb
dec
or
fs
pushf
jp
shll
test
mov
jno
dec
sub
push
mov
sti
in
push
mov
call
aas
push
dec
addr16
pop
lret
jns
fwait
mov
inc
cmpsl
xor
out
mov
rcrl
cmp
test
add
sub
mov
test
adc
mov
push
jbe
test
into
jmp
add
es
jne
mov
and
ss
test
enter
popa
bound
xor
mov
mov
pop
inc
or
outsb
and
inc
mov
mov
pop
mov
mov
in
xchg
add
loop
mov
fstl
mov
mov
sbb
in
add
mov
jns
mov
sbb
mov
xchg
pusha
iret
pop
mov
and
jecxz
out
mov
int
xchg
dec
xor
pop
mov
les
mov
mov
js
lret
mov
sbb
pop
cmpsl
cli
rcrl
jae
adc
adc
ss
jo
adc
imul
mov
cmpsb
push
pusha
or
xchg
scas
add
inc
in
and
add
or
mov
lods
data16
mov
mov
bound
and
test
mov
push
ljmp
or
mov
cltd
mov
dec
das
push
lds
fwait
dec
add
ja
pop
cwtl
cmpl
adc
jae
and
ss
mov
jne
xchg
jne
mov
daa
mov
lahf
insl
jne
mov
cmp
popa
cmp
movsl
call
dec
sahf
xor
movl
dec
js
or
and
rcl
fists
cs
daa
out
std
inc
fidivs
and
dec
sarb
test
or
sarb
fisttpll
add
adc
cwtl
fmull
dec
je
mov
andb
xor
or
movsl
adc
sub
inc
lret
or
fwait
out
jecxz
mov
jmp
nop
and
mov
es
stc
inc
pop
push
nopl
dec
repnz
push
pop
test
and
cmpb
mov
mov
jo
add
pushf
movsb
xor
or
jge
mov
fwait
in
cmp
push
stc
pop
cmpsb
hlt
xor
sub
sub
jno
mov
push
inc
imull
mov
popf
test
pop
stos
jne
lcall
inc
mov
sbb
fwait
sbb
dec
lret
ret
dec
add
insb
inc
mull
loopne
mov
test
mov
xchg
xchg
mov
cmp
lea
adc
jle
and
xchg
daa
dec
add
mov
and
call
cmpb
out
jle
daa
mov
or
loopne
or
and
mov
loope
mov
xor
pushf
dec
or
adc
repz
cltd
push
insl
mov
incl
into
pop
sbb
out
addb
imul
push
cmpsl
cmp
pop
jb
or
push
xorl
inc
outsl
je
es
sti
inc
sub
dec
cmp
and
cmpb
cmp
ret
andb
adc
enter
adc
fucomp
sbb
es
repnz
ljmp
xlat
popf
jge
cwtl
leave
dec
movsb
mov
cmp
lret
in
out
movsl
xor
adc
mov
jb
inc
enter
xchg
adc
jecxz
sti
xlat
pushf
enter
in
mov
inc
xchg
ret
mov
js
mov
mov
je
pop
adc
cmp
xchg
dec
pop
jecxz
enter
adc
jb
call
xor
cmp
mov
dec
addl
dec
lret
jg
xchg
cwtl
lret
sarl
adc
icebp
mov
pusha
xchg
and
lret
jecxz
adc
int3
dec
lods
push
mov
arpl
lret
in
jno
jae
xchg
xchg
cltd
nop
and
inc
test
icebp
push
xchg
iret
mov
mov
call
and
sbb
outsb
xor
loope
jmp
and
mov
sub
call
xor
loopne
mov
inc
push
std
cwtl
mov
fucomi
adc
stos
ss
and
sub
mov
inc
xchg
mov
aaa
cmp
rolb
sub
or
mov
inc
inc
cmp
cwtl
jns
lea
lret
pushf
aas
sub
push
sbb
pop
popf
sarb
fdivs
and
out
or
and
sarb
jl
pop
jge
sub
dec
mov
test
xor
adcb
outsb
enter
leave
xchg
dec
mov
mov
push
idivb
cmp
jo
jnp
pop
insb
fwait
insl
push
into
adc
cmp
sub
mov
dec
cli
adc
mov
push
dec
dec
dec
repnz
int
repnz
clc
fistl
cwtl
lea
add
addr16
xor
and
lods
out
jmp
pop
cmp
sub
sbb
jnp
imul
jmp
push
cltd
imul
adc
mov
inc
push
lods
sub
mov
add
mov
mov
mov
mov
push
pop
jge
sbb
lcall
xor
jb
xor
decl
xor
fcoml
imul
cmp
shll
cmc
jmp
dec
cli
mov
iret
movsb
rcr
outsl
and
loopne
jnp
outsb
pop
loopne
outsl
jo
ds
divl
pushl
or
sti
cltd
lret
sarb
mov
out
adc
sbb
sbb
push
mov
aad
lret
sbb
adc
js
xor
insl
mov
xor
cld
mov
cmp
call
push
push
sbb
mov
rcll
jge
out
bound
aam
test
push
cwtl
out
cld
stos
aad
xchg
and
jp
sahf
arpl
sub
enter
or
sbb
dec
add
les
jns
cwtl
dec
lret
cmp
jg
scas
aaa
push
mov
xor
sbb
mov
bswap
or
fiadds
sti
pop
movsb
xor
mov
idivb
mov
enter
push
push
xchg
ss
in
push
and
movsl
pop
popw
xchg
imul
pop
pop
sub
lcall
imul
fisubs
jge
test
mov
xor
subb
ss
mov
or
daa
cli
jne
js
mov
shrl
pop
fwait
inc
icebp
add
dec
dec
das
int
push
inc
repz
jbe
sub
gs
jno
xchg
std
or
ljmp
mov
lret
add
mov
cmc
mov
mov
jle
jns
cmp
mov
mov
insl
ja
hlt
jle
xchg
fisubrs
aad
lret
mov
jbe
cmp
jae
nop
inc
je
jnp
sti
std
cmpsb
int3
cmp
xchg
pop
movsl
lds
nop
mov
jae
ds
pop
and
cld
xchg
das
pop
pusha
dec
mov
insb
jae
or
pop
orb
lods
insl
push
pop
push
push
sub
ljmp
in
xchg
aad
xchg
dec
mov
dec
inc
push
xor
out
cmp
push
mov
les
lret
sub
dec
or
xor
jo
incl
cmp
cmpsb
dec
xchg
and
aad
pop
cmp
fld
sub
aaa
inc
imul
jns
mov
cmp
dec
aam
mov
shll
xchg
jns
dec
aas
repz
add
in
adc
imul
mov
pushf
sub
fsubr
xchg
lods
cmpl
cld
cmp
mov
inc
dec
icebp
dec
sub
inc
imul
outsb
into
call
pop
imul
jno
mov
dec
or
icebp
xchg
add
lods
jb
jmp
adc
and
xchg
lret
notb
addr16
lods
call
push
jnp
sub
or
daa
rol
push
mov
pusha
and
xchg
lret
aas
rcll
xor
pop
fcoml
xlat
cmpsl
xor
push
and
pop
pop
cmp
push
out
mov
mov
mov
adc
scas
dec
jge
lcall
mov
push
push
mov
adc
mov
lds
mov
repnz
xchg
adc
stos
mov
xchg
jmp
inc
pop
loop
adc
mov
cmp
ret
push
test
cmp
popa
jbe
sub
xor
cli
sbb
shll
pushf
out
arpl
cltd
mov
test
xchg
lahf
push
cli
js
or
mov
cwtl
pop
cs
scas
out
sbb
push
stos
jo
shll
mov
subb
fwait
out
mov
popf
jb
test
loop
insb
mov
aas
lahf
jp
mov
ss
pop
movsb
or
scas
out
dec
ds
aad
mull
subb
adc
imul
xchg
sbbl
orl
adc
inc
out
sbb
lea
adc
sti
jmp
inc
push
int
cmpb
add
stc
lahf
jbe
test
iret
xor
xchg
mov
pop
mov
dec
jno
test
lret
or
or
mov
adc
or
in
aaa
inc
aas
xchg
sbb
dec
add
daa
sub
dec
sub
dec
popa
jbe
mov
xchg
pop
mov
sub
outsb
mov
shll
imul
push
sub
mov
out
pop
pop
inc
lds
sahf
sbb
lcall
cmpsl
jmp
xchg
fldt
mov
jp
sub
mov
repz
cltd
push
in
xor
sahf
add
pop
mov
pusha
push
aad
jnp
pop
gs
mov
pop
movsl
adc
mov
mov
orb
mov
mov
cmp
les
mov
enter
pop
sub
shrl
das
dec
test
push
xor
jb
movsb
and
scas
sbb
jle
cmpsl
push
mov
cmp
jmp
jno
xchg
pop
les
insb
xchg
pop
in
cmpsb
scas
decl
pop
push
push
mov
clc
out
test
xor
repz
xor
cmpsl
ret
repnz
sub
lods
enter
jnp
fnstenv
iret
mov
ficomps
inc
push
xchg
loopne
fsubs
push
std
dec
daa
jo
shll
shrl
je
inc
aas
add
mov
adc
xor
cmp
pop
push
jmp
cmp
add
fcompl
push
cmp
mov
data16
mov
or
rcrl
or
mov
push
insl
or
incl
in
stc
cltd
xchg
push
or
addr16
test
sahf
std
mov
jge
test
jp
jge
fisubs
xlat
cmc
sub
jnp
in
xor
add
loop
dec
mov
jge
cltd
adc
inc
push
ror
or
sub
into
mov
cmp
les
jo
adc
js
mov
das
nop
push
push
add
mov
shrl
lret
repz
mov
and
inc
cmove
inc
pushf
sbb
push
dec
adc
arpl
and
dec
mov
ret
mov
inc
orb
in
mov
incb
pop
jle
test
xchg
fstps
scas
pop
decb
imul
rcl
gs
cmp
dec
loop
jmp
inc
andl
outsb
scas
jns
enter
mov
popa
ljmp
jg
arpl
mov
out
xchg
xchg
cmp
fsubs
jle
sub
jbe
in
and
mov
aad
mov
ds
or
mov
mov
jecxz
add
sar
xorb
in
arpl
jnp
ret
call
clc
dec
cmp
xor
add
or
xchg
or
and
jmp
mov
test
je
sbb
ret
mov
mov
cmp
xchg
das
pop
stos
iret
lea
sub
inc
in
sub
pusha
sahf
jl
sub
add
adc
or
sarl
jg
insb
iret
sub
xchg
adc
and
pop
icebp
stos
and
int
or
movsl
mov
stos
dec
adc
out
xchg
xchg
jne
jne
cmp
enter
sub
inc
inc
ret
outsb
das
pop
cmp
rdmsr
arpl
and
inc
inc
out
std
aad
stc
mov
xor
adcl
cmp
lcall
add
mov
cmp
les
push
popf
lods
testb
lods
push
movsl
cmc
test
test
fdiv
dec
push
cmc
sbb
subl
jne
test
and
pop
sub
cld
jae
cs
dec
and
shrl
or
call
pusha
cs
mov
mov
mov
and
bound
jbe
fldt
push
jmp
ss
add
out
dec
inc
xchg
xor
jne
inc
pop
repz
sbb
or
loopne
ljmp
sub
mov
je
fs
decb
mov
sbb
pop
xor
adc
pop
cmpsl
pusha
mov
ret
shl
xor
loop
inc
bound
fs
scas
stos
or
cmp
movsl
push
mov
mov
mov
lods
pop
pop
jbe
les
aad
jo
js
pop
xchg
inc
mov
aad
lock
jmp
jp
xor
push
fisubrs
push
enter
ds
sub
push
xchg
sahf
mov
pop
lcall
popf
pop
test
aaa
add
or
fsubs
rcrl
pop
cmpsl
cmpsb
test
sbb
aad
fists
xchg
adc
push
mov
dec
int3
jle
addr16
dec
loopne
cmc
sbb
sub
les
shrb
xor
adc
lahf
cwtl
scas
bound
daa
inc
out
adc
jae
sub
inc
sti
aas
dec
mov
mov
dec
in
adc
xchg
addl
pushf
pop
mov
js
sub
loop
jno
fwait
mov
mov
call
das
mov
inc
aas
push
mov
dec
mov
mov
inc
in
pusha
repz
stos
push
fcmovb
fcmovnbe
add
out
xor
in
outsb
xor
sbb
fidivs
mov
into
mov
test
insb
jp
cmp
pop
or
xor
dec
xor
cmovb
mov
cmpb
in
xchg
sub
or
jae
call
mull
mov
test
icebp
scas
stc
les
inc
outsb
mov
bound
sbb
and
adc
mov
popf
cmpl
and
test
cmp
mov
xchg
mov
lds
mov
sub
adc
lcall
or
mov
outsl
stos
fnstenv
mov
repz
sti
mov
push
enter
xor
xchg
dec
xchg
ffree
popa
push
sbb
aaa
sub
daa
and
dec
pop
aas
ret
cmc
push
iret
out
push
lcall
out
mov
les
mov
and
dec
div
cmc
test
pop
cltd
pop
sbb
or
cmp
pop
das
dec
sbb
mov
inc
xchg
xchg
mov
daa
fldt
mov
out
or
in
int3
pop
aad
leave
lret
mov
or
xor
mov
js
sub
subb
mov
cmp
call
nop
cli
cmp
das
xor
cmpsb
jg
jne
push
ret
jge
mov
addr16
rclb
out
rcrb
dec
jl
jge
lret
nop
inc
xchg
js
sub
repz
xchg
sbb
das
xlat
jmp
cmp
xchg
call
and
sub
pusha
stc
out
rcrb
adc
xchg
xchg
or
gs
dec
stos
int3
ficomps
sbb
divb
pop
scas
mov
cwtl
xchg
inc
inc
inc
stc
inc
xchg
inc
std
xchg
mov
xchg
rolb
iret
lock
arpl
or
mov
aad
mov
sbb
arpl
push
add
xor
mov
cmpsl
xor
fwait
dec
inc
add
icebp
sbb
and
fs
icebp
addr16
jl
adc
jmp
sahf
ljmp
jmp
jle
mov
push
popf
xchg
lds
testl
addl
and
in
inc
lds
stc
imul
sub
mov
popa
cwtl
mov
add
scas
mov
jbe
lock
xchg
push
add
daa
shlb
xlat
sbb
jle
xor
push
inc
xchg
mov
or
arpl
cmp
mov
sbb
lret
pop
mov
ficoms
sub
pushl
jne
push
xor
lret
test
xor
sbb
test
cli
mov
imul
add
cmc
inc
ret
out
je
cld
mov
sbb
sub
pop
movsb
sub
das
pop
pop
mov
arpl
loop
or
not
fisubrs
pop
push
xor
or
lds
fldt
and
jge
daa
add
jg
insb
xchg
in
shrl
cmpsl
out
add
insl
dec
mov
mov
mov
sub
add
jbe
movsl
mov
xor
xchg
adc
sarb
pop
adcl
mov
sbb
ds
cli
push
add
cmp
scas
lea
push
ficomps
cli
cmp
icebp
out
fmul
dec
movsb
sysenter
mov
dec
inc
fstpt
loopne
adc
mov
inc
dec
sub
repnz
ror
mov
lds
mov
add
in
jp
jp
jns
lods
int3
cmp
xchg
cld
rclb
sahf
push
iret
mov
dec
add
pop
aas
pop
push
imul
stos
sub
xor
xchg
loopne
jno
fdivrs
fcmovu
adc
in
cmp
leave
cmc
mov
popf
stos
push
addr16
inc
add
dec
adc
jnp
adc
aas
xchg
add
mov
jg
popa
aad
stc
adc
adc
jns
or
xor
ss
sub
push
dec
sbb
or
or
mov
movsb
mov
pop
in
popf
aas
jge
cmp
dec
pop
aad
dec
inc
adc
jmp
insb
jae
stos
jo
shl
test
test
mov
lock
sub
and
sahf
stos
stc
xchg
mov
sahf
loopne
pushf
popa
das
fists
cmc
dec
push
add
jecxz
imul
mov
inc
xchg
mov
popa
out
pop
xor
fsub
mov
add
pop
ds
dec
test
into
push
xchg
std
cmc
push
lods
push
addr16
push
sbb
std
int
or
push
lds
mov
test
pop
icebp
sub
pushf
stc
inc
inc
mov
lahf
mov
or
adc
lods
faddl
repz
inc
movaps
inc
push
arpl
clc
pop
or
mov
xor
pop
pop
stos
mov
out
cmc
dec
mov
gs
mov
pop
divb
dec
and
jle
xor
andl
mov
mov
mov
lds
cltd
bound
add
xor
nop
ret
jge
pusha
inc
adc
mov
jmp
xchg
ljmp
sub
hlt
hlt
fistpl
adc
pop
enter
pop
fidivrs
inc
sbb
xchg
cmp
sub
testl
jmp
subb
or
push
sub
insl
sbb
dec
and
fwait
ss
sub
jmp
in
adc
sbb
adc
push
pop
in
mov
fildll
ret
mov
and
cmpb
mov
fistl
fldt
sub
cs
mov
cmp
outsb
inc
cmp
sahf
push
test
xor
icebp
adc
aam
lods
ljmp
adc
in
mov
dec
push
aam
mov
insb
pop
loopne
or
or
or
xor
pushf
out
and
or
jmp
mov
cld
testl
lea
fnstcw
and
jge
pop
in
mov
and
je
scas
fsubrl
push
cmp
and
in
xchg
cld
mov
jns
lret
pop
pop
sbb
iret
fcomps
push
or
andl
enter
push
movsl
addr16
add
sbb
in
outsl
jmp
push
clc
in
test
ljmp
mov
pushf
sub
fstl
adc
arpl
sbb
adcl
cltd
out
adc
daa
daa
push
lods
fwait
xchg
jns
jmp
adc
les
inc
cmpb
sbb
adc
mov
mov
out
sbb
dec
jb
jb
or
into
nop
cmp
push
sub
out
sbb
jle
in
jno
cltd
call
mov
int3
negb
test
faddl
test
scas
inc
movsl
pop
adc
movsl
jnp
or
mov
ljmp
and
iret
mov
mov
loope
mov
aad
call
addr16
xor
insl
pop
sbb
pop
jo
cmp
rcll
ljmp
dec
push
pop
rcrl
adc
push
cltd
fdivs
mov
xorl
mov
dec
jecxz
cmp
mov
push
or
hlt
pop
fsubrs
mov
jae
or
adcl
icebp
sti
je
andb
lods
insl
cmp
xchg
call
orb
sbb
vmovaps
lods
lods
push
loop
rcrl
sub
or
sbb
inc
in
pusha
push
pushf
jns
inc
and
cmc
jbe
cmp
sub
outsl
int3
mov
notb
icebp
sub
into
sub
inc
xchg
push
xor
pop
xchg
ret
sub
icebp
push
call
mov
in
and
add
test
adc
shrl
imul
inc
into
xchg
aam
je
mov
imul
and
in
add
pop
pop
push
mov
xchg
daa
sbb
add
mov
aad
fstpl
mov
cmp
add
push
sarb
add
push
out
loopne
aad
pop
loop
ss
jb
outsb
in
iret
in
lods
mov
jns
cmp
add
int
sub
outsb
fs
lea
xor
icebp
in
inc
jp
lret
imul
or
out
in
mov
sti
sbb
pop
adc
xor
mov
nop
push
add
mov
pushf
lods
pushf
stos
jne
sahf
push
ja
cmp
and
scas
shl
sbb
mov
xchg
and
repnz
arpl
inc
pop
inc
ret
mov
mov
iret
aam
loop
lea
push
push
fists
test
cs
ds
push
and
pop
xor
cmp
andb
cwtl
shlb
hlt
jmp
inc
sub
repz
sbb
mov
mov
filds
inc
mov
inc
stos
xchg
mov
pop
lods
pop
sub
pop
cmpsb
flds
mov
xor
dec
inc
gs
jge
adc
sbb
jl
sti
adc
ljmp
adc
sbb
cld
mov
outsl
dec
push
xchg
mov
xlat
fiadds
sbb
out
and
bound
mov
out
in
loopne
fcmovb
sbb
shlb
add
inc
popa
gs
mov
sub
inc
pop
mov
int
loope
inc
jmp
pop
mov
add
mov
or
lahf
inc
xchg
xchg
mov
in
into
es
imul
xchg
sbb
dec
cmp
mov
push
mov
sub
jmp
mov
mov
jae
aam
jl
xchg
pop
fistl
sahf
imul
adc
pop
int3
in
push
lock
add
and
mov
mov
in
cmp
mov
pop
rcrl
ret
insb
sub
or
outsl
sahf
movsl
out
jle
cmc
inc
jle
movsb
and
fwait
jg
daa
inc
inc
pop
push
fstp
sbb
ljmp
insl
xchg
sub
push
mov
jno
and
loope
dec
adc
test
mov
les
std
jg
cmp
stc
sbb
mov
add
adc
int
cmp
in
jo
ret
ss
adc
ret
lock
and
icebp
pusha
ret
test
andb
pop
stos
sti
xor
ss
sub
mov
bound
stos
xchg
inc
sbb
mov
cltd
sub
sbb
pop
test
outsb
adc
sbb
test
outsb
jns
clc
fadd
arpl
add
shr
adc
scas
cmp
inc
sarl
sub
movsb
mov
loop
mov
and
or
iret
ja
bound
inc
clc
cmpsl
mov
adc
xchg
cmp
push
jns
push
jp
ret
rol
sub
pop
sub
stc
mov
mov
mov
mov
mov
repz
sbbl
lcall
mov
repnz
and
mov
test
std
ds
add
xchg
sbb
xchg
and
int3
sti
es
mov
stc
in
iret
push
xor
aas
out
and
aam
add
sub
je
cmpl
ljmp
nop
stc
lods
leave
test
int3
hlt
adc
in
out
cmpsl
xchg
jbe
xor
xor
mov
adc
aaa
mov
jne
lods
fldcw
cmp
paddusw
sbb
xchg
inc
jl
sbb
cmpsb
test
mov
xchg
jnp
push
xchg
and
lcall
jae
loopne
enter
and
stos
sub
into
pop
hlt
cmp
push
out
sahf
icebp
push
and
js
loope
ret
jmp
movsb
pusha
xor
enter
sub
pop
sbb
movsb
rol
into
aam
jmp
je
mov
push
inc
jae
jle
adc
stos
decb
adc
mull
addb
dec
and
xor
leave
or
mov
adc
mov
or
and
sbb
and
fcoml
or
xor
mov
and
or
inc
filds
sub
push
lahf
dec
xrelease
inc
dec
movl
es
xchg
sarb
mov
push
sub
xlat
push
rolb
pop
nop
insb
mov
repz
adc
mov
xor
mov
cmp
adc
jne
shl
jne
xchg
mov
es
xchg
sub
jmp
push
pand
inc
push
sti
mov
push
add
mov
ss
xchg
push
dec
pop
cmp
ret
in
test
xchg
and
and
jl
xchg
xor
ds
sub
inc
cs
add
or
in
in
gs
call
test
jno
hlt
sbb
sbb
imul
mov
pop
es
jecxz
lret
sbb
jle
mov
push
add
inc
mulb
es
jne
add
in
outsl
add
mov
addr16
xlat
repz
aas
sbb
mov
fbstp
outsb
mov
or
icebp
insb
js
addl
addr16
mov
jno
in
or
cmc
in
fstps
movsb
cs
sbb
mov
push
dec
sub
bound
stos
lea
mov
adc
lret
cmp
sub
cli
das
cld
movsb
xchg
leave
sahf
out
fsubrs
jl
hlt
xchg
pop
jo
call
loop
push
pop
sbb
movsl
mov
cs
notl
jl
xor
push
xchg
mov
lret
iret
mov
add
pushl
or
les
push
mov
mov
push
paddb
mov
ret
push
nop
push
pop
xor
sbb
insl
lcall
adcb
popf
pop
divl
cltd
cwtl
ret
cmpsb
pushf
mov
sbb
xor
bound
inc
out
cltd
push
mov
xor
pop
test
pop
ret
test
repz
adc
cmpsl
pop
pop
pop
pop
push
xchg
adc
int
ja
pop
and
sub
lcall
sub
scas
adc
mov
adc
or
mov
mov
sub
test
rcr
xor
mov
pmulhw
stc
lds
cltd
fadds
in
push
push
pop
push
fnsave
repz
pop
cmpsb
inc
and
cli
ljmp
bound
push
xchg
push
sbb
sahf
push
or
mov
and
pop
pop
push
mov
mov
in
shl
inc
call
jb
seta
insb
or
add
dec
xlat
sbb
adc
shll
pop
icebp
popf
mov
pop
pop
mov
cltd
xchg
pop
lds
add
mov
aaa
adc
jg
or
fildll
dec
xchg
nop
lret
mov
sti
dec
es
fwait
int3
mov
adc
mov
into
xchg
jne
mov
mov
in
dec
cmp
fs
xchg
adc
push
cmp
arpl
sub
lods
popa
jge,pt
push
push
aad
xchg
add
xchg
fdivp
es
stos
ror
inc
add
shlb
aas
dec
les
mov
stos
mov
inc
xor
jnp
jb
pop
xor
mov
nop
or
push
and
sbb
adc
inc
or
stos
pushf
jns
aas
adc
dec
fdivrl
test
fisttpll
adc
jns
push
repz
int
inc
add
jmp
mov
fs
inc
jae
in
aad
data16
cmp
xlat
xchg
dec
mov
sti
push
sbb
fists
insl
icebp
call
sub
adc
aaa
pop
cli
xchg
dec
cwtl
fs
pop
testb
adc
pop
and
clc
movsb
add
dec
and
or
push
or
lret
cmp
mov
enter
aaa
sub
push
imul
movsl
xchg
cmovb
shll
shl
add
inc
xlat
mov
and
push
loop
jbe
leave
xor
or
ret
lock
rorl
aam
push
xchg
orb
dec
fsubp
aam
cli
enter
add
test
int
mov
movsl
jns
pusha
hlt
sub
loopne
test
mov
call
aad
xor
nop
adc
dec
dec
adc
push
xchg
push
imul
mov
or
mov
mov
push
leave
xchg
nop
pop
inc
lock
add
mov
push
mov
jns
cmp
lret
pop
lods
cmp
ja
dec
or
jbe
dec
jne
xor
mov
outsl
cltd
xor
add
enter
aad
ficompl
jo
in
sbb
out
mov
sub
push
push
orl
xor
rcll
cmp
mov
mov
data16
xchg
mov
or
lds
js
fisubrl
popa
aad
add
shrb
leave
movsl
jmp
or
push
inc
cs
mov
push
dec
mov
addb
orl
add
lret
nop
scas
dec
daa
movsl
lds
push
les
mull
inc
pop
aam
push
cmpxchg
je
aas
xchg
ljmp
dec
mov
addl
or
push
adc
cli
in
je
adc
cmpsl
push
sub
js
jge
test
push
int3
jmp
imull
sbb
mov
add
aas
or
xor
lods
stos
mov
mov
fidivl
dec
sub
push
hlt
mov
cmp
push
sbb
xchg
ret
pop
xor
hlt
insl
pusha
mov
mov
inc
subl
xchg
call
sub
xchg
mov
js
loope
xchg
push
in
xchg
push
mov
stos
and
aam
dec
ljmp
pop
lock
js
aam
loope
int
xor
push
lock
push
cmp
adc
jns
jge
pop
cwtl
clc
fistl
movsl
addl
dec
mov
and
mov
push
mov
imul
cs
int3
add
push
adc
fmull
xor
shll
push
sbb
and
jmp
fcmovne
scas
jae
fisubrs
rcr
pop
lea
lock
xor
sbb
xchg
sbb
fistpl
cltd
mov
cmp
cli
lret
js
cmp
ds
lcall
les
or
inc
sub
bound
jbe
lret
add
pusha
jmp
out
out
mov
add
dec
and
add
shlb
aaa
decl
xchg
lods
push
adc
mull
pop
daa
popf
call
push
jne
test
or
sbb
sbb
mov
pop
iret
add
push
xchg
fnstsw
mov
sbb
mov
test
outsb
cli
push
icebp
in
xchg
fwait
mov
mov
lahf
dec
pop
jo
ds
icebp
cmp
dec
cmp
mov
scas
leave
dec
int3
inc
mov
sub
cmp
leave
int
es
push
addl
dec
mov
or
pop
test
std
jge
cmp
sbb
ds
xchg
loopne
jb
imul
cmp
or
add
shlb
test
xchg
mov
aaa
pop
mov
jae
dec
inc
cmp
jbe
sbb
fisttpl
popa
or
add
roll
fs
or
xor
or
sbb
mov
nop
xstore-rng
cmpsl
add
inc
and
dec
in
pop
fwait
divl
icebp
adc
in
fnstsw
bound
fwait
jp
outsb
sbb
mov
mov
xlat
and
mov
dec
loope
push
and
jecxz
je
movsl
in
shl
cmc
sbb
cmpsb
xor
or
pop
adc
xchg
xchg
in
adc
pop
movl
flds
add
mov
popa
test
adc
cltd
mov
adc
aad
push
data16
subl
rclb
jno
daa
pop
in
jnp
inc
mov
sbb
gs
inc
add
push
hlt
rolb
add
fisttps
sub
bound
jmp
rcrb
cli
pushw
mov
fdivp
xlat
testb
ficoml
mov
cmovle
lods
mov
jne
jb
mov
daa
test
mov
nop
adcl
xor
shr
lahf
out
gs
ljmp
mov
lods
xor
jbe
inc
addl
fdivs
pop
adc
mov
xor
pop
dec
cmc
les
outsl
insb
clc
test
mov
and
xchg
repnz
in
or
dec
jl
psllw
push
andl
xchg
fldcw
add
enter
jb
popf
push
aad
movl
sbb
imul
fstps
data16
and
repz
mov
fldl
int3
subb
jnp
push
sbb
scas
pop
int3
int3
aas
es
aas
shrb
dec
adc
cmp
jo
mov
sub
nop
push
add
outsb
sub
movsl
pushl
push
pop
dec
lods
nop
dec
push
sbbb
fwait
shrl
fcompl
inc
shll
out
add
jle
addr16
ds
insl
int
in
daa
pop
jle
mov
pop
stos
leave
call
jne
enter
xchg
xor
loop
ret
sbb
push
lret
enter
pushw
clc
cmp
sbb
mov
mov
and
out
pop
dec
cmpsb
pusha
test
mov
push
mov
xor
clc
jno
dec
jb
mov
repz
pop
mov
fsubr
inc
xor
popf
mov
lahf
rcrb
imul
cmp
cltd
ss
rcl
outsl
sbb
dec
dec
ja
jne
cwtl
lret
faddl
in
lret
pushf
icebp
push
dec
movsl
push
shr
repz
addl
fiadds
pusha
jbe
xor
addr16
and
repz
dec
xor
popa
stos
test
cmp
mov
rorl
sub
loop
scas
je
es
jb
mov
mov
mov
and
mov
js
insl
jne
aam
pusha
or
loop
push
push
mov
dec
test
or
pop
cwtl
addr16
faddl
cwtl
push
pop
xor
xchg
mov
orl
ja
int
dec
pop
lock
cwtl
mov
imul
cmp
pop
fisttpll
or
aam
pop
mov
pop
shl
sub
push
add
inc
ss
sti
jl
push
sub
or
jmp
xor
scas
ss
xchg
add
inc
dec
shrb
mov
lret
inc
pop
and
lock
subl
add
out
clc
mov
aas
adc
adc
lock
arpl
dec
js
dec
xor
xor
mov
aam
mov
add
lods
sub
jp
in
lret
xor
push
movsb
or
xor
add
inc
out
add
cmp
adc
mov
mov
cmp
lea
ja
out
or
mov
pop
and
inc
lret
in
in
pop
xchg
cmpsb
xchg
stc
fildl
pop
fs
mov
popa
jp
jae
testl
and
pop
push
add
call
xchg
repnz
xlat
in
xchg
stos
dec
inc
arpl
insl
sti
je
shl
mov
sub
push
test
in
fsubl
mov
sub
mov
push
sub
in
xchg
sbb
pushf
outsl
scas
arpl
cmp
test
pop
push
jb
push
mov
call
push
mov
push
call
movsb
sbb
sahf
jnp
inc
jmp
call
nop
mov
mov
push
push
insl
jmp
mov
inc
mov
stos
subb
sub
inc
in
fdivrl
mov
push
xor
mov
dec
daa
ja
andl
sbb
cli
and
out
scas
lahf
xchg
fs
jae
xor
out
jns
inc
xchg
mov
add
mov
call
cs
adc
repz
cli
scas
daa
aam
rol
cli
and
icebp
movsl
mov
xlat
pop
sub
cmp
aaa
iret
in
jle
inc
loope
mov
popa
test
lret
dec
pop
pusha
test
inc
push
and
daa
mov
inc
lahf
mov
inc
sub
mov
popf
or
daa
add
mov
shll
pushf
add
xlat
aad
aad
mov
daa
dec
sahf
inc
shrl
mov
pop
aas
cltd
in
clc
mov
pop
push
inc
jo
xchg
cmp
jle
and
ret
cs
jno
jg
mov
pusha
scas
inc
xor
mov
iret
cwtl
mov
movsb
scas
xchg
aaa
or
push
jo
inc
in
cli
das
hlt
movsl
pop
mov
mov
scas
lock
lea
nop
in
xor
xchg
cwtl
xor
add
pop
adc
sbb
mov
cmc
movsl
push
xlat
xchg
pushf
int3
test
shr
xor
dec
movsl
dec
and
test
xchg
xor
clc
cld
bound
sarb
jns
push
andps
xor
push
out
pop
jg
dec
mov
outsl
xor
shr
pop
scas
scas
dec
jbe
xor
in
icebp
and
nop
sbb
xor
sbb
mov
je
adc
aad
jl
pop
sbb
arpl
jne
pop
ja
add
outsb
sarl
inc
daa
push
and
jo
sub
imul
sbb
outsb
jecxz
mov
imul
push
scas
setge
cs
add
mov
mov
or
sub
xor
push
mov
les
dec
bound
mov
jnp
and
pop
orl
stos
pop
dec
scas
xor
dec
or
pop
xchg
mov
addl
sbb
rorb
notl
jae
cmp
xor
lea
adc
push
push
imul
in
jle
lods
popf
sbb
inc
xor
aam
cmp
cmpsb
xor
pop
rol
test
add
mov
sbb
cltd
repz
int
std
repz
scas
lock
repz
in
in
hlt
fisttpll
sti
dec
out
jo
insb
xchg
jae
push
mov
call
add
movsb
mov
into
lret
addl
mov
inc
adc
pop
enter
xchg
xor
lock
dec
mov
dec
jecxz
mov
mov
cld
jae
bound
inc
mov
sbb
mov
jecxz
add
cmpsb
pop
sub
xor
cmpsb
mov
or
push
outsb
inc
and
das
fs
push
push
cwtl
icebp
js
and
fcmovb
sbb
adc
pop
into
lods
adc
outsb
dec
fldt
pop
mov
xchg
shll
jmp
add
les
sarl
push
sub
mov
pusha
push
xchg
imul
dec
es
sbb
cmp
mov
fsub
xchg
adc
xchg
or
or
jae
push
lds
mull
xchg
push
fadd
test
sbb
cwtl
rclb
jle
add
dec
cli
adc
jbe,pn
and
mov
dec
divl
jo
push
std
mov
nop
inc
fidivl
adc
push
push
sbb
js
in
sub
ds
push
popf
into
call
adcl
xchg
out
fs
lcall
jge
mov
ror
stc
popa
xor
scas
shl
scas
mov
movsb
or
fistpll
in
jmp
jecxz
je
pushl
cmc
push
scas
cmp
lahf
mov
adc
fldenv
push
loopne
stos
insb
jbe
jge
aad
and
xchg
cmp
sti
and
ljmp
test
scas
dec
shrl
mov
cmp
aaa
cmp
loope
mov
pop
push
push
jno
mov
shll
adc
lea
pusha
or
clc
aam
aaa
xchg
adcl
xor
shlb
or
sarl
lods
mov
cwtl
jmp
daa
xchg
filds
xlat
cmpsl
and
fwait
cmp
add
test
and
stos
adc
fstpt
call
or
ret
xor
leave
mov
sahf
in
scas
push
inc
pop
enter
mov
mov
jle
cmpb
jne
push
stos
shl
faddl
in
xlat
out
sbb
mov
out
adc
push
sbb
cmp
pop
push
jge
fldenv
scas
movsl
and
xlat
add
jle
pushf
fidivrl
sbbb
insl
repz
ss
or
jg
and
popf
cmp
lds
or
sub
mov
sub
lods
xchg
in
dec
push
test
scas
clc
imul
or
es
add
or
pushf
lret
xor
jo
jae
ss
cmp
jno
mov
popf
dec
ret
aaa
aas
mov
stc
ljmp
shrl
imulb
shr
or
jecxz
fidivrl
adc
daa
mov
in
cmp
push
popf
pop
out
fdivl
addr16
and
mov
jg
imul
add
dec
xchg
push
cmp
mov
xor
mov
sub
mov
ss
cmpl
outsb
jne
sub
or
dec
mov
xchg
dec
ss
and
xor
idiv
daa
test
loop
int
loopne
xor
cltd
inc
jge
iret
or
jge
fwait
add
pop
mov
jnp
rorl
ret
sbb
imul
movsb
inc
out
testl
fdivl
adc
dec
roll
or
sub
sbb
mov
addr16
or
xchg
ss
subl
xchg
imul
or
ds
mov
mov
mov
cmp
cld
adcl
cld
movsb
dec
daa
xchg
ficoml
cmp
dec
mov
push
jge
ds
aaa
xchg
cmp
pop
or
scas
sub
xor
dec
inc
or
adc
test
jmp
mov
je
or
jp
cmc
cld
rorl
cmp
lret
inc
and
fwait
imul
in
sub
mov
outsl
mov
add
mulb
add
sub
loop
ds
inc
or
mov
test
test
inc
movsb
cmpl
add
testb
fnop
lcall
clc
dec
inc
xchg
push
xor
dec
push
mov
add
loopne
movsl
fistpl
push
in
jmp
bound
aad
cmpsl
ja
pop
ret
in
and
push
dec
test
mov
xlat
ds
inc
adc
scas
dec
jge
scas
int3
test
icebp
rcrb
mov
push
fnstsw
lock
jb
stos
pusha
int3
data16
jb
xchg
jle
add
adc
loope
push
lea
test
rcrl
insb
ret
outsl
jle
jno
push
cmc
lods
imul
sar
mov
ljmp
outsb
test
subl
cmp
jno
or
and
sbb
repz
jb
gs
out
cwtl
adcb
mov
mov
mov
cwtl
sbb
out
scas
or
lcall
cmpsl
inc
xchg
inc
aaa
movsb
sbb
pushf
inc
sbb
xor
in
pop
sbb
aam
mov
fsubp
popa
lret
icebp
inc
cmpsb
mov
clc
stc
in
rcr
stc
and
ret
loope
adc
jne
ret
rcr
or
ret
mov
dec
fsubrl
shrl
add
je
cmp
sub
js
mov
fwait
add
pop
lods
xor
je
mov
pop
xchg
mov
jecxz
cld
and
fsubl
mov
es
test
jp
add
outsb
shll
arpl
in
frstor
adc
cwtl
leave
mov
outsl
repz
fs
jmp
or
lock
pop
and
push
push
xor
add
mov
push
mov
out
xor
or
icebp
stos
adc
fcomps
pop
cld
cwtl
xor
sti
pushf
outsb
in
icebp
cmp
and
or
shrb
mov
push
fucom
stc
jg
out
addr16
mov
int3
xor
and
sub
mov
push
out
pop
xorb
inc
or
fs
and
out
test
rol
cmc
test
push
sbb
jl
sub
movsl
rcrb
nop
xchg
subl
insb
jno
inc
lcall
fcompl
xor
or
pop
and
inc
and
jae
aaa
pop
addr16
aaa
cmp
cmpsl
imul
pop
adc
mov
push
fstps
bound
or
dec
int
mov
dec
xor
or
mov
cltd
bound
jno
stos
data16
push
jb
icebp
adc
mov
dec
or
out
adc
test
jmp
int
scas
add
jo
inc
fistl
sub
or
fisubrl
xchg
lock
movsb
cmp
push
mov
and
mov
sub
or
push
stc
or
cmc
out
xchg
inc
push
movsl
scas
xchg
cmp
movsl
mov
ret
adc
pop
loopne
lret
jbe
outsl
sbb
jge
or
jle
and
fwait
push
cmc
pop
push
and
cltd
jecxz
insl
pushl
cmovbe
mov
enter
pusha
test
inc
sarb
je
adc
data16
into
fnstsw
add
push
outsb
out
sub
mov
or
adc
pusha
adc
test
lret
repz
lahf
push
mov
mov
test
sbb
out
mov
cmp
int
lock
int3
xchg
or
sbb
xchg
xchg
pop
sarb
or
jnp
mov
jbe
pusha
sub
sbb
cmp
add
scas
scas
stos
pop
aam
sti
lahf
jl
push
push
inc
cmp
int3
fldenv
xor
jmp
ret
icebp
inc
sub
addr16
adc
push
je
push
push
cmpsb
stc
incb
mov
addr16
aaa
cmp
in
or
fisttpl
add
clc
popf
dec
inc
icebp
dec
jge
cld
jns
fisttps
mov
mov
or
cmpsl
xchg
sbb
dec
mov
daa
mov
dec
push
icebp
loope
sarl
jae
pop
pop
popf
jge
push
xchg
cmp
sub
jp
dec
cmp
sub
ret
int
or
mov
aam
repz
add
test
or
sub
addr16
in
mov
aaa
arpl
mov
xor
std
mov
mov
call
cwtl
aaa
xchg
out
les
lret
or
jno
out
adc
divl
adc
xchg
in
adc
out
ja
into
mov
jne
insl
xor
clc
outsb
mov
outsl
xchg
frstor
inc
and
fbstp
mov
aad
xlat
push
roll
cmp
add
loop
shll
repnz
fnstenv
cltd
lcall
xchg
leave
in
lret
cs
ja
das
pop
or
fistps
fadds
cmp
int
push
xor
sbb
adc
int
fmuls
and
or
inc
jne
shlb
xchg
and
push
loopne
cmp
loopne
aas
mov
mov
inc
fnsave
cltd
mov
mov
inc
lahf
adc
cmp
cmpsl
xchg
mov
dec
es
ja
push
sub
sub
mov
adc
je
je
mov
mov
mov
add
stos
pop
mov
xor
mov
jb
ficomps
stc
pop
inc
push
test
mov
mov
div
clc
push
pop
les
ss
dec
mov
push
dec
mov
and
xor
cmc
repnz
imul
bound
push
xor
adc
jo
pop
sub
stos
cmp
cmp
mov
sbb
mov
movsb
jno
xchg
cmpsb
dec
xchg
push
mov
xor
adc
dec
cmp
cwtl
push
and
test
dec
xchg
ljmp
xchg
sub
popa
ss
xlat
mov
fldenv
push
aam
jne
call
imul
xchg
cmp
fnsave
push
fs
xor
inc
lcall
stc
jmp
mov
cmpsb
and
popa
dec
or
mov
in
cmpl
int
loope
dec
push
js
or
add
inc
mov
sub
loopne
lret
xor
push
cmc
repz
ficompl
lods
sub
mov
mov
or
idiv
adc
in
add
mov
mov
in
jns
es
int
or
loope
dec
sub
and
push
aad
or
push
cltd
mov
pop
mov
sub
imul
or
push
adc
cmpsb
add
loope
jl
ret
lock
ret
cmpsb
pop
into
int
xchg
mov
popf
stos
and
inc
out
mov
adcl
dec
repz
dec
in
rcrb
cmp
pop
cmp
inc
jnp
or
out
push
rorb
xchg
xchg
jecxz
push
loopne
ljmp
jp
insl
cmp
stos
enter
fildll
mov
xlat
and
push
out
push
adc
sbb
fs
adc
lret
icebp
cmpsl
out
adc
test
cmp
cmp
popa
loopne
das
push
stc
mov
leave
jg
jnp
cmp
xchg
ja
push
xchg
and
add
out
popa
gs
stc
aam
sahf
fwait
and
jb
xlat
fadd
fsts
ja
fisttpll
imul
inc
xor
shlb
movsb
in
lcall
xor
pop
shrl
cmp
cmpsl
xlat
shr
mov
ret
ljmp
push
fs
into
imul
ja
bound
es
push
cmp
ud1
in
mov
ja
popf
rclb
jnp
jl
lock
push
lds
dec
add
shr
cmpsb
mov
push
add
repz
nop
js
push
daa
pop
xchg
fmull
xchg
adc
xchg
arpl
and
test
xor
dec
lret
jecxz
loop
push
cmpb
inc
outsl
push
js
sahf
inc
jp
jle
fimull
test
stc
sub
lds
xlat
sbb
cmc
or
ljmp
repnz
or
filds
dec
sub
inc
mov
in
xchg
mov
inc
push
ja
pop
lcall
mov
das
test
iret
int3
fldcw
jo
add
inc
inc
and
or
sbb
outsl
dec
push
pop
mov
or
movl
movsb
lock
outsl
push
leave
push
loopne
push
imulb
popa
mov
jb
pop
fstps
fisttpl
and
xchg
push
lret
push
popf
call
imul
dec
pop
pop
test
leave
push
and
inc
mov
lods
lret
dec
out
push
xor
pop
leave
inc
loope
or
cmp
mov
enter
bound
test
and
mov
fnstsw
adc
or
rorb
mov
mov
mov
loop
or
aad
jmp
dec
adc
in
xchg
cmp
mov
cmc
dec
aas
push
jae
cmp
rcll
iret
jmp
cmpsb
test
call
or
mov
gs
popf
mov
loope
push
in
ficompl
addr16
jg
std
out
ss
call
xchg
in
fs
dec
mov
xchg
sub
xor
cli
adc
fbld
rcrb
popa
mov
and
ret
adc
dec
push
popf
lds
and
scas
ds
test
popa
lea
out
lock
mov
std
dec
push
jecxz
insb
rcr
adc
cmp
outsl
add
int3
lea
mov
out
cmc
lea
xchg
stos
mov
aad
cmp
in
pop
sti
cmp
jae
mov
push
fmull
sti
fcoml
lea
stc
lea
int3
lods
ljmp
jo
cld
mov
fcom
mov
pop
sub
fcoms
cmp
mov
addr16
mov
popf
ficoml
lods
out
push
call
fs
faddl
mov
sub
into
pop
shll
and
push
movb
cli
sub
rcrb
outsb
rorb
mov
push
into
jp
jne
pop
dec
mov
sub
push
cmpsb
xchg
insl
shlb
imulb
lret
lds
stos
ds
jnp
inc
sub
jmp
out
mov
ret
xchg
cmp
pop
fsub
add
xchg
test
enter
ljmp
addr16
adc
shl
dec
jnp
iret
push
pop
jae
aam
movsl
enter
cmpl
adc
std
sub
insb
aad
or
lds
dec
push
dec
xor
xchg
and
jne
jnp
loopne
xchg
out
or
int3
fsts
add
imul
jo
ja
cmp
mov
cmp
cmp
das
dec
imul
popa
sub
out
loopne
and
sbb
out
icebp
dec
sub
xchg
dec
cmc
jns
test
add
adc
insl
cli
xor
jp
gs
cs
das
mov
dec
lcall
push
add
addr16
out
sar
in
mov
ljmp
adc
mov
clc
mov
cmp
and
jae
loopne
insl
pop
das
sti
xor
bound
popf
and
outsl
mov
mov
inc
cmp
sbb
das
mov
repnz
popl
std
jle
cmpsl
fwait
inc
ret
std
or
lds
std
add
dec
in
mov
decl
push
jle
movsl
mov
jo
lea
gs
stc
jne
scas
call
mov
out
gs
pop
fisubrs
mov
push
jg
xchg
sbb
popa
cs
jle
jge
ret
sub
sbb
outsl
or
push
xchg
xor
js
adc
bswap
lock
pop
xor
loope
loopne
pop
adc
gs
pop
and
sbb
adc
adc
and
jle
fbstp
add
jg
pop
xor
test
scas
mov
inc
movsl
mov
sbb
test
fdivl
sbb
testb
nop
ret
ret
jg
pop
cltd
sbb
jbe
sub
fdivr
inc
loop
sbb
fistpl
sub
stos
add
push
sbb
mov
sub
jl
scas
ret
fisttpl
cmpsb
jp
aas
cmpsl
add
mov
inc
xchg
cmp
mov
pop
dec
ffree
xchg
mov
inc
jno
push
sbb
adc
int3
les
sub
mov
and
pusha
pop
lcall
xchg
xchg
and
popa
incb
lahf
mov
pop
cmpb
xorl
jb
add
push
scas
fisubrl
stc
jb
ret
xor
outsl
es
pop
rcl
es
je
out
cwtl
mov
imulb
xor
cmpsb
jbe
faddl
mov
mov
loopne
cmp
andb
xor
pop
push
push
out
push
dec
push
jb
xchg
add
jp
xor
xor
xor
cmp
sub
std
bound
mov
fmul
call
mov
das
sub
xor
dec
test
mov
inc
std
add
mov
ss
lods
jge
aaa
jl
cld
adc
fstps
aaa
push
mov
fcoml
sbb
pop
sahf
aam
jecxz
xchg
dec
or
push
xor
mov
icebp
enter
mov
popa
cwtl
loop
sbb
test
daa
mov
ss
xchg
mov
mov
push
push
mov
movsb
cld
lods
push
xor
daa
jmp
das
jne
mov
or
ss
cmp
pop
data16
cmpsl
popa
ds
sbb
and
and
sub
dec
mov
xor
ret
pop
add
mov
adc
push
ljmp
cs
push
repz
stos
inc
clc
scas
pop
filds
shl
xchg
inc
and
or
push
dec
inc
jns
and
pop
pop
sub
ss
jl
and
imul
lods
push
xor
js
pop
jecxz
js
imull
je
mov
pop
or
push
rcr
jl
xchg
or
and
cld
push
jmp
sub
mov
xchg
jmp
mov
out
adc
popl
ret
in
cmp
cmpl
add
sbb
popa
push
inc
adc
ds
pop
or
stos
jmp
or
xor
inc
jns
dec
cmpb
les
call
gs
das
icebp
pop
mov
adc
cmp
data16
xor
xlat
ds
cli
scas
in
pop
jecxz
add
test
outsb
dec
mov
pop
fstps
push
xor
pop
mov
dec
aam
fmull
add
popa
sahf
push
pop
jno
std
push
add
or
jl
dec
add
idivb
imul
or
cmp
ds
in
or
arpl
out
xchg
xchg
test
ljmp
jl
jl
mov
mov
lds
adc
add
adc
xor
popa
pop
dec
push
sbb
iret
je
inc
scas
mov
xor
lock
in
dec
xchg
or
inc
loop
jno
rcr
int
xchg
inc
xor
scas
and
cmc
sbb
fsubl
add
sub
mov
out
xchg
pop
mov
xlat
mov
lcall
sbb
cltd
ds
jns
fbld
lea
pop
jge
push
mov
addr16
arpl
push
shlb
or
lahf
out
pop
sbb
std
scas
mov
inc
add
sbb
dec
lret
out
cmp
scas
test
test
pushf
bound
sbb
out
dec
push
lock
fcompl
mov
lds
lods
int3
push
mov
movsb
in
scas
mov
loopne
adc
sahf
adc
jp
adc
or
fdecstp
mov
jae
jne
mov
lcall
mov
xchg
ljmp
inc
cmpsb
cli
std
lcall
es
sahf
add
sub
std
adc
xchg
xchg
cmp
add
inc
add
xchg
and
les
xchg
pop
xor
mov
fwait
mov
in
ss
mov
push
dec
xchg
loope
lret
pop
and
inc
clc
sbb
and
lahf
stos
icebp
popa
inc
icebp
movsb
push
xchg
sub
mov
cmp
jnp
cmc
arpl
adc
mov
mov
add
sbb
bound
xor
scas
mov
shrl
andb
dec
pushf
stos
xchg
push
mov
mov
lret
cmp
push
sub
gs
sub
xlat
inc
std
jle
jne
pusha
mov
jne
mov
or
xor
in
cmp
push
or
push
mov
lcall
ret
adc
jne
shll
push
xor
or
and
in
inc
in
dec
out
pop
pop
mov
xchg
movsl
fstl
loope
xchg
xor
xor
or
loop
mov
sahf
hlt
jo
xor
sub
mov
fdivrl
cmp
sub
test
subl
js
inc
out
ret
icebp
std
movsb
inc
test
push
sbb
jge
and
sub
jmp
cmpb
mov
aam
mov
and
and
jmp
xor
ja
mov
cmp
inc
mov
iret
mov
dec
out
xchg
fs
sub
mov
hlt
addl
dec
cwtl
fdivrs
lahf
outsb
dec
mov
fisubrl
or
shl
test
or
pushl
pop
adc
cmp
leave
xchg
and
mov
or
jmp
sahf
and
jg
jnp
xchg
das
cmpsl
jecxz
add
xchg
popa
and
add
fstpl
pop
mov
sti
aad
jae
cmpsl
mov
ss
adc
pop
adc
xchg
adc
cmp
test
andb
xchg
mov
sahf
pushf
adc
mov
pop
int
pop
hlt
jle
push
sub
jo
sub
pop
insl
pop
scas
cld
cmpsb
push
cld
add
movsb
mov
mov
sbb
pop
mov
rcl
cwtl
dec
mov
and
mov
mov
sbb
out
or
rcll
dec
int3
xchg
loope
stc
jae
push
addr16
or
sub
mov
outsl
xchg
in
ljmp
cmc
ss
les
push
push
lods
negl
xor
sahf
fildll
sub
mov
inc
jnp
mov
pop
sbb
cli
fildl
dec
andb
test
push
psubw
test
incl
mov
sub
out
mov
repz
dec
out
rclb
scas
mov
add
push
mov
jno
and
pop
pop
test
fnsave
cmp
cmp
cmp
xchg
mov
nop
pop
add
aaa
cmpsl
adc
and
addl
scas
pop
inc
dec
imul
inc
jle
add
cmpb
lods
mov
jbe
mov
mov
scas
je
jmp
add
inc
dec
and
adc
dec
fidivrs
push
pop
pop
fs
lahf
loop
pushf
ret
adcb
sbb
and
out
mov
repnz
sti
lods
pusha
dec
cmp
cmp
push
lcall
dec
inc
fsubrs
cmp
sbb
push
mov
test
ja
rorl
mov
inc
jmp
aas
iret
outsl
movsb
pop
mov
sub
fmul
jne
movsb
sahf
inc
das
push
js
mov
pop
xor
xchg
pusha
add
stos
cmp
nop
push
adc
mov
mov
or
adc
and
test
dec
dec
jae
push
jae
or
inc
fidivrl
jns
orb
cli
pushf
ss
fucomip
adc
test
and
pop
test
dec
push
loopne
data16
jl
inc
and
jno
decl
or
inc
sub
mov
sub
leave
or
outsb
push
cwtl
inc
movb
adc
test
loopne
dec
fdecstp
push
ljmp
mov
push
ret
loop
or
mov
sti
inc
fnstsw
or
sbb
xor
out
mov
push
jmp
dec
pop
and
sbb
mov
add
loopne
loope
push
xchg
sbb
dec
dec
jne
movsl
stos
sub
push
add
push
int
test
icebp
inc
cmpsl
sub
cmp
push
ds
pusha
nop
hlt
lret
sub
fprem
scas
sbb
test
jecxz
je
leave
hlt
jae
lock
dec
repz
imul
repz
or
mov
mov
cli
add
mov
mov
movsb
inc
insb
xlat
incl
sbb
rolb
and
in
lret
mov
std
out
mov
push
stos
adc
mov
aas
cmpsb
aaa
mov
addl
inc
cmp
dec
in
popl
jne
jnp
cmovge
add
pop
lahf
shll
sub
in
scas
pop
lret
mov
mov
fstl
pop
adc
loopne
mov
daa
ja
xor
dec
movsl
inc
dec
or
sbb
xchg
lods
inc
and
and
or
int
rcll
inc
jb
mov
inc
cltd
js
jl
and
sub
xor
pushf
jp
loope
negb
test
fsubs
pop
les
jle
xor
repnz
jnp
ret
xor
sbb
mov
dec
or
mov
xchg
icebp
mov
or
repnz
in
ja
jmp
icebp
icebp
inc
push
sub
jbe
lock
cwtl
xchg
inc
jb
outsb
int3
das
repz
mov
push
lret
jno
or
xchg
shrl
gs
jle
shr
pusha
dec
bound
and
test
mov
sbbl
arpl
cld
and
lods
mov
mov
push
movsl
xor
jge
lds
xchg
pop
jecxz
and
in
test
mov
shlb
inc
or
mov
mov
shr
xor
pop
push
shlb
lea
jne
jns
cmp
and
sub
outsb
fs
aaa
sub
push
xchg
test
push
sub
pop
mov
pop
test
and
ja
cmp
je
in
pop
jae
fisubrl
push
call
mov
adc
mov
sbbl
enter
jecxz
ljmp
jecxz
cltd
mov
adc
mov
xlat
cwtl
push
movsb
xor
cld
pop
dec
and
in
push
jne
filds
pop
push
adcb
fildl
jl
push
push
jae
in
sbb
mov
mov
shll
add
je
leave
lock
add
insl
nop
mov
mov
loope
fwait
hlt
sbb
outsl
js
rolb
fsub
dec
lcall
cli
sub
inc
push
jns
sbb
mov
adc
insb
or
mov
insl
sub
popa
js
stc
xchg
addr16
scas
adc
mov
inc
mov
mov
repnz
cmc
fnsave
sbb
push
pop
xorb
mov
sub
lock
ret
in
mov
or
sbb
push
cltd
mov
pop
cs
idivl
mov
shrl
ret
and
add
mov
mov
lds
fidivrl
xchg
scas
cmc
jge
jecxz
enter
dec
cli
mov
mov
push
push
lret
push
inc
fsts
inc
clc
cmp
pop
clc
sti
dec
fidivl
cmp
dec
mov
imul
jge
jnp
jae
xor
jle
cmp
ss
js
push
sbb
sub
push
orb
dec
or
and
mov
dec
push
jle
shr
cmpsb
mov
mov
ja
or
pop
lcall
inc
adc
jae
mov
jmp
gs
lret
pop
mov
test
sub
mov
pusha
daa
dec
in
jp
fildll
cmp
mov
add
mov
sbb
xchg
dec
lret
cmovno
mov
fildll
xor
sub
jno
lock
call
jg
mov
arpl
sbb
push
into
jb
idivb
adc
inc
sbb
dec
adc
je
loopne
xor
xor
shl
inc
imul
stc
push
sbb
fwait
insl
sbb
jo
lea
mov
add
mov
add
xchg
xchg
xor
mov
scas
pop
pop
jl
xor
xchg
inc
ljmp
aad
mov
mov
mov
push
lret
shlb
pop
lock
sbb
push
fucom
in
insl
jmp
adc
pop
lea
cmp
mov
or
or
mov
cmp
mov
cmp
inc
les
ja
adc
std
xor
mov
enter
pusha
ljmp
mov
mov
mov
push
jmp
aam
movsb
test
mov
lock
sbb
mov
insl
adc
cwtl
mov
les
pop
test
push
gs
ds
sbb
inc
and
in
push
mov
inc
stos
int3
jb
loop
out
mov
jnp
xchg
or
enter
add
fidivl
outsb
leave
sub
sub
mov
cmp
cltd
pop
and
dec
jae
cmpb
loop
scas
mov
push
int
aad
jae
lcall
add
ds
xor
sbb
ljmp
scas
sbb
iret
xor
inc
inc
scas
pop
fucomi
cmp
dec
testb
andl
mov
stos
int
xlat
mov
aad
sbb
sbb
dec
pop
popf
cmpl
and
ficomps
mov
imul
xchg
xor
call
fxch
xchg
xchg
adc
and
js
je
jp
mov
stos
jge
and
xchg
sbb
shll
ja
mov
push
bound
ds
addl
test
loop
cmp
and
bound
jg
call
jmp
or
pop
mov
in
scas
rolb
pop
pop
mov
adc
test
bound
adc
jecxz
lods
into
pminub
and
dec
rcl
inc
rcrb
push
xchg
jge
pop
push
loop
loopne
int3
test
dec
daa
test
jecxz
jmp
mov
fidivrl
dec
adc
dec
mov
rcr
int
lahf
mov
push
pop
iret
insb
sub
mov
fidivrl
adc
sbb
lods
xchg
bound
cltd
dec
out
cmp
out
movsl
sbb
pop
sub
mov
cmp
out
notb
xchg
test
int3
dec
int3
fimuls
fildl
dec
iret
inc
or
xchg
push
ficoms
mov
and
shr
xchg
adc
iret
test
xchg
sub
cli
scas
lea
pusha
mov
gs
es
dec
push
push
cmp
mov
sbb
xlat
int
adc
push
popa
sbb
adc
push
push
gs
sub
hlt
mov
pop
inc
xchg
int
shl
or
ja
sbb
adc
push
mov
xchg
mov
mov
inc
dec
pop
pushf
arpl
out
cmp
test
inc
sub
dec
sbb
add
test
add
mov
in
xchg
mov
pop
outsb
fcom
cmp
std
ret
out
stos
push
push
pop
test
xchg
or
int3
add
lea
in
pop
in
mov
sbb
repnz
popf
stos
inc
dec
mov
jne
mov
call
cmp
or
ret
cmp
cld
add
pop
aam
xor
in
and
jmp
cmp
mov
clc
int3
mov
pop
fwait
testb
push
cmpsl
sbb
xchg
push
mov
cmp
cli
fs
mov
daa
push
subl
sbb
in
ss
aam
xchg
int
xor
and
cmc
ret
push
and
lea
stos
or
ret
bound
jp
adc
xchg
adc
cmpsl
sub
or
stos
xchg
or
sub
xchg
inc
inc
xchg
mov
popa
sbb
adc
pop
mov
xor
add
fcmovne
scas
lret
mov
cmpsl
out
mov
std
mov
inc
pop
fadds
adc
fcompl
cmp
and
js
pop
cmpsb
xchg
xchg
xchg
shrb
push
pop
add
int
lcall
sbb
movb
sbb
push
add
lods
adc
adc
jmp
clc
push
out
mov
cmpsb
inc
xor
nop
dec
or
jnp
pop
aas
jb
ds
mov
adc
sub
outsl
pop
popa
mov
out
dec
push
ret
dec
sarl
neg
inc
jnp
dec
push
sbb
push
jg
lea
and
inc
cmp
movb
jns
mov
mov
sub
pop
repz
rcll
movsb
sub
adc
jae
or
imul
xor
add
fs
sbb
cmp
bound
and
insl
mov
aam
xor
cmp
mov
mov
ret
jp
movl
and
loop
repz
pushf
je
inc
imul
mov
aaa
jb
mov
dec
inc
mov
in
shlb
das
je
cwtl
pop
sbb
jle
in
push
scas
dec
lret
cmpsb
sub
sub
inc
or
inc
or
jp
push
sar
inc
leave
fnstenv
sti
xchg
loope
mov
andl
iret
mov
dec
bnd
xchg
stos
pop
xor
rol
stos
cmpsl
adc
cwtl
jne
je
dec
out
xor
inc
stos
loopne
fsubr
mov
mulb
shl
leave
cmp
lea
movsb
mov
push
sahf
pop
out
out
jl
add
aad
push
jp
inc
stos
jno
cmp
pop
fistl
das
jg
pop
das
cmp
xchg
mov
xor
pop
loop
sub
loop
jmp
lods
inc
enter
pop
call
nop
in
fsts
mov
mov
lahf
mov
jge
jne
dec
loop
sbb
xchg
mov
lds
pop
insl
mov
loopne
fcompl
es
data16
aad
push
push
jo
in
cwtl
stos
scas
mov
outsb
cmpl
push
popf
adcl
subl
jmp
enter
clc
das
and
imul
rorb
pop
lret
cli
out
jle
sbb
inc
popf
les
and
xchg
faddl
and
shl
int3
in
adc
push
fisubrl
pop
out
mov
ret
mov
imul
out
fbstp
pop
mov
mov
sarb
lods
aaa
push
pusha
enter
adc
pop
xchg
sub
mov
aaa
xchg
sub
scas
mov
ja
cmpsb
xor
mov
subl
repnz
cld
cmp
mov
and
fcmovu
lds
pop
cmc
out
lea
adc
cmp
lods
cld
xchg
call
ds
xor
mov
sbb
fiaddl
inc
push
or
daa
mov
cmp
add
cmp
outsl
xchg
sbb
insl
push
push
mov
inc
mov
loope
jge
mov
aaa
in
and
pop
push
mov
mov
insl
and
out
das
jg
xor
sti
cld
xchg
jbe
dec
push
push
mov
sbb
dec
imul
rol
in
xor
fisubl
mov
std
cld
jecxz
sbb
call
adc
iret
pcmpeqd
into
imul
jns
test
adc
xor
ds
push
ja
mov
pop
insb
jo
stos
mov
loop
dec
sbb
push
and
pop
cmpsl
scas
inc
jo
mov
les
roll
or
inc
xchg
xor
or
sbb
push
lock
js
add
jecxz
adc
mov
jecxz
inc
cmp
orl
mov
outsl
outsb
imul
or
jg,pn
inc
pop
push
cltd
in
movsb
or
adc
push
fdiv
xchg
xchg
xchg
xchg
rclb
and
ss
jmp
subb
mov
push
mov
dec
jmp
rcrl
in
xchg
cwtl
mov
sub
es
mov
or
xor
xchg
fidivrs
les
dec
cmp
mov
int
pop
test
push
xor
fldl
nop
mov
dec
lods
sbb
jno
scas
data16
lret
pusha
je
cwtl
or
imul
jns
repnz
mov
loope
dec
ffree
ret
mov
outsb
inc
iret
dec
scas
and
and
adc
cmp
and
insb
in
pop
jp
mov
out
dec
add
mov
mov
jle
jg
lcall
xor
std
pop
sub
movsb
arpl
ja
dec
adc
in
nop
insl
xor
mov
add
fidivrl
in
xlat
mov
setb
add
fistpll
pop
dec
int3
mov
imul
cmp
repnz
inc
adc
mov
cmp
adc
mov
xor
test
loopne
test
cmp
push
fs
movsl
jle
jmp
adc
jl
fisttps
imul
jmp
enter
jl
scas
jle
dec
cmp
ljmp
push
dec
jmp
sbb
push
or
leave
test
mov
sbb
test
xchg
faddl
aam
out
leave
fisttpll
mov
ljmp
and
jns
dec
adc
and
inc
adc
ja
addr16
fidivrl
inc
xor
stos
mov
bound
sub
pop
push
cmpsb
add
nop
inc
inc
fstps
push
pop
jmp
sahf
inc
jmp
data16
xchg
fcompl
jmp
fildll
dec
in
rcrw
mov
xchg
adcl
or
push
mov
cmpsb
mov
mov
aas
xlat
iret
mov
mov
sub
jno
lods
ljmp
mov
int3
dec
into
fcomps
cmpsb
js
mov
movsl
adc
and
xchg
rcrl
mov
mov
jno,pn
adc
mov
jmp
jecxz
cli
pop
aas
shrl
fs
mov
fistl
pop
scas
out
sbb
fidivs
pop
cld
cmpsb
stos
pusha
test
pushl
mov
out
inc
mov
pop
mov
mov
xor
cld
push
stos
pop
stos
jmp
lret
sub
mov
insb
imul
inc
insb
adc
insl
pusha
sahf
pushf
std
stos
cmpsb
test
mov
push
xor
sbb
gs
xor
push
mov
pop
xchg
pop
mov
push
xchg
xchg
and
aad
or
jne
dec
outsb
fwait
outsb
dec
cmp
sti
push
les
and
les
fdivl
inc
xlat
jmp
repnz
gs
cmpsb
push
lods
adc
int
mov
loopne
movsb
mov
jp
and
pop
xor
mov
test
aam
mov
or
lds
cs
push
in
movsb
xor
xchg
and
pop
iret
aad
sbb
fstp
inc
in
jge
pop
pop
popa
push
jb
out
dec
cmp
mov
and
xchg
or
mov
push
jmp
shr
in
out
xchg
lock
cmp
pop
mov
lods
lock
mov
push
add
stos
add
mov
sbb
dec
int
ja
inc
fwait
mov
fnstcw
mov
imul
hlt
lahf
mov
cmp
mov
fwait
hlt
jp
mov
in
hlt
gs
out
add
xchg
push
movsl
add
mov
mov
pop
pushf
out
inc
pop
shlb
pop
inc
jb
daa
dec
and
xor
sbb
adc
mov
push
std
xchg
into
mov
or
out
add
test
aam
pop
xor
or
mov
or
add
jmp
jge
and
inc
pop
leave
mov
mov
jne
add
lret
pop
or
mov
daa
cmp
mov
mov
bound
je
testl
jmp
cmp
mov
fisttpll
push
idivl
cmp
xchg
mov
inc
dec
arpl
sbb
sub
xor
in
aaa
jecxz
mov
pushf
aaa
cmc
push
stos
mov
pop
addr16
xchg
mov
test
cmp
loopne
in
ja
scas
push
daa
push
mov
and
xchg
movsb
sub
rcr
cmp
iret
dec
adc
add
mov
sti
stos
cld
cmc
daa
lahf
pop
mov
mov
lcall
pop
xchg
push
fsubrl
adc
mov
xchg
xchg
add
nop
mov
mov
or
push
cmp
out
xor
ljmp
test
loop
sbb
cmc
sub
jns
insb
mov
ficompl
xor
pop
iret
aam
subb
sbb
out
mov
popa
push
or
mov
ds
and
sarl
pop
clc
ja
pop
iret
sbb
xchg
insl
jle
mov
pushl
leave
mov
mov
repz
jb
les
pop
inc
movsl
jge
test
xor
adc
ds
mov
inc
xchg
loop
inc
or
fnstcw
dec
adc
and
adc
adc
pushf
sbb
out
fsubrl
lahf
xchg
addr16
and
insb
mov
push
xchg
or
xchg
sbb
sbb
js
sub
mov
sbb
repnz
sbb
mov
lock
gs
mov
ds
jnp
or
push
movsb
dec
enter
insl
popf
mov
add
loope
clc
inc
and
test
inc
int3
and
cmp
dec
addl
lods
scas
ja
adc
in
dec
push
xor
or
rol
push
xor
bnd
cmpsl
cmp
negb
icebp
movsl
mov
sub
mov
outsl
jb
addr16
push
outsl
and
rcl
scas
adc
shl
or
rcll
and
cld
lock
imul
cmp
jecxz
sti
jle
les
les
mov
shrb
iret
inc
and
loope
es
jno
imul
pop
outsl
push
xchg
incl
jle
mov
xchg
sub
adc
mov
sbb
mov
sub
ss
mov
out
add
mov
push
add
icebp
test
daa
and
daa
xchg
mov
dec
inc
sbb
pushf
or
divb
adc
mov
nop
inc
dec
xchg
dec
push
jmp
lea
adc
sahf
push
mov
mov
xchg
inc
adc
loop
push
lds
add
scas
add
jl
test
loopne
or
inc
fmul
cmp
data16
out
stc
mov
mov
jae
jp
adc
jg
pushf
nop
cmc
push
pop
pusha
mov
pop
lret
mov
xchg
pop
sub
xchg
test
fbld
sub
jb
sbbb
sbb
divl
xchg
sub
cmp
mov
adc
sbbb
jl
and
leave
out
push
jo
in
mov
fimuls
inc
ret
lds
fcoml
jno
popa
jecxz
sbb
adc
rcr
lret
int3
xlat
sbbl
push
jb
xor
add
jo
xchg
fists
cli
ljmp
bound
enter
scas
dec
adc
shr
out
mov
test
rcll
or
bound
mov
ja
in
popl
call
dec
leave
cmp
and
add
stos
push
incl
fdecstp
lock
mov
mov
jae
mov
lcall
pop
sti
nop
les
xchg
inc
ja
inc
movsl
fwait
mov
add
xlat
push
xchg
jnp
testl
push
cmp
sbbl
inc
cmpl
arpl
jmp
out
push
cmp
fisubrs
add
mov
outsl
fdivp
jb
subb
ret
sub
mov
mov
das
ljmp
adc
shlb
popl
lods
insb
std
mov
lahf
out
adc
pusha
jp
jecxz
push
lahf
pop
pop
lcall
das
or
dec
imul
jp
and
imul
mov
push
jle
mov
jg
jmp
orb
frstor
cld
loopne
cltd
pop
sub
add
mov
lret
mov
in
cltd
sti
bound
rorb
fs
fwait
iret
mov
sbb
and
int3
xchg
pop
mov
xor
and
push
aam
dec
in
scas
push
daa
cmp
rorl
dec
aaa
or
daa
push
inc
xor
mov
mov
leave
test
ret
mov
out
out
pop
mov
or
movsl
mov
mov
testl
sahf
rorb
out
scas
jo
cmp
popa
sub
cld
cmp
imul
push
and
scas
flds
jae
jbe
int3
inc
jecxz
loope
push
sbb
sbb
outsb
xor
sahf
test
sbb
xor
lea
subl
sti
jne
xchg
in
push
fs
pop
mov
inc
jecxz
in
sahf
add
ja
icebp
push
ljmp
xchg
pop
in
shrb
int3
ud0
andl
mul
mov
outsl
mov
ljmp
cmp
cmp
add
cmp
cmp
sbb
jno
notb
mov
ret
bound
in
fstpl
stc
pop
jnp
stc
mov
outsb
daa
jl
sbb
out
into
and
clc
mov
cmp
shlb
and
and
repz
mov
mov
imul
pop
in
sarb
mov
lock
adc
je
sbb
stos
mov
xchg
ljmp
lahf
inc
adc
jno
aad
xchg
pop
jg
in
push
jge
or
pop
cmp
inc
adc
es
fucom
pop
out
out
cwtl
out
push
mov
jecxz
bound
inc
xor
int3
xchg
inc
xor
idivl
mov
cs
int
bswap
inc
xor
ds
loope
pop
or
outsl
cmp
mov
fwait
rcl
pop
pop
xchg
xchg
roll
mov
cwtl
jbe
cwtl
or
test
cmp
mov
out
mov
mov
mov
push
add
add
jg
adc
ljmp
dec
shrl
loopne
in
dec
push
push
inc
xlat
nop
adc
ret
cltd
je
and
loop
dec
mov
popl
add
shrl
popf
movsb
xor
sbb
cmp
jl
sub
pop
ss
mov
pop
add
ljmp
lahf
mov
mov
loope
or
out
adc
sahf
jns
pop
mov
mov
jge
lods
xchg
setno
rcll
xor
mov
out
dec
in
and
pusha
je
fisttpl
mov
cmpsl
fdivp
jmp
decb
into
es
xchg
jp
pop
cmp
aaa
pop
ss
add
mov
stc
lods
push
mov
sahf
or
add
imul
nop
into
xor
negl
add
mov
aaa
int
mov
pop
xchg
adc
in
divb
mov
fwait
or
sbb
jp
jnp,pt
xor
xchg
push
int
xchg
data16
mov
push
sbb
cwtl
jbe
aad
mov
mov
adc
push
dec
inc
gs
add
dec
lea
or
jl
push
repnz
adc
lea
enter
push
jmp
cmp
jne
mov
push
jnp
adc
cli
mov
nop
aad
outsb
cmp
arpl
jmp
push
mov
sub
popl
rorl
push
cwtl
in
pop
dec
inc
inc
mov
decb
cmp
lods
mov
sub
add
ds
sbb
adc
ret
lea
pop
in
pop
popf
mov
call
sbb
jnp
pop
ror
mov
pop
inc
push
outsb
shlb
lcall
xlat
lock
pop
sbb
pop
adc
jb
jbe
test
fidivrs
dec
ljmp
and
push
mov
int3
fxch
cmc
loope
dec
nop
in
notl
pop
mov
lcall
cmp
dec
lds
sub
pop
inc
rol
daa
xor
in
popf
xchg
aad
fs
cld
inc
mov
out
cwtl
sub
popa
push
mov
dec
sti
push
lods
xor
cs
mov
sbb
sbb
mov
enter
lcall
push
jle
shll
inc
aaa
xchg
pop
ljmp
orb
call
subl
push
ljmp
mov
insl
in
rclb
push
cld
adc
fwait
loopne
mov
aaa
dec
in
xchg
push
bound
shll
cmpsl
add
push
lods
mov
pop
adc
je
jg
mov
sahf
cmp
inc
ljmp
xor
mov
sbb
dec
outsl
or
cmp
icebp
dec
sub
scas
sbb
testl
mov
fmull
sti
testl
add
jecxz
lods
sub
cltd
sbbb
jle
out
mov
pop
movsl
mov
scas
push
mov
arpl
aaa
jle
aas
inc
mov
mov
xchg
cmp
mov
add
jmp
jae
xor
mov
or
ret
shlb
push
adc
and
icebp
xlat
xchg
in
push
stos
lods
mov
jle
insl
xchg
inc
es
xchg
xorb
xchg
into
jecxz
xchg
ret
lcall
sbb
and
cli
insl
in
cmpsb
push
adc
add
arpl
adc
jg
out
ret
sub
push
mov
add
and
or
inc
test
sub
xchg
fs
imul
sbb
scas
dec
push
pop
dec
dec
xchg
out
adcl
push
xchg
mov
lods
mov
xchg
loope
into
sbb
jl
push
jmp
push
push
mov
push
movsl
and
sbb
mov
xchg
ret
pop
sub
ror
mov
and
or
loope
pop
lret
jp
mov
loope,pt
shlb
cwtl
xchg
xchg
popa
dec
out
ret
dec
imul
out
sbb
jb
jae
je
mov
aas
inc
in
mov
jae
fimull
mov
stos
inc
mov
sbb
mov
dec
leave
mov
push
cmp
or
xchg
loopne
mov
jmp
outsb
loope
and
pop
incl
sub
std
fsubp
cltd
fcmovnbe
add
shlb
pusha
loop
popa
jmp
movsl
inc
adcl
jg
xchg
add
fdivr
or
push
xorb
scas
push
and
or
dec
lock
cld
adc
leave
sti
pop
sub
xchg
popa
lods
and
cmp
sbb
xor
pop
jle
and
pop
hlt
mov
lahf
mov
xchg
test
sbb
add
mov
and
popf
mov
clc
data16
int
cmp
push
clc
popf
xchg
dec
push
fwait
loop
out
mov
enter
out
test
out
and
sbbl
push
pop
jnp
xchg
les
mov
into
cli
in
lcall
xlat
xchg
and
lods
adc
test
push
hlt
out
mov
je
push
out
pusha
lods
dec
adc
leave
mov
out
xchg
fnsave
stc
test
jo
push
push
dec
add
aad
jle
js
decl
gs
push
stos
add
aad
je
aas
leave
in
inc
cltd
mov
idiv
lods
ficoms
pop
xchg
cmc
aas
lea
adc
jl
addb
pop
stos
mov
in
mov
push
cmp
bound
aas
and
arpl
pop
add
insl
roll
out
jnp
mov
pop
cmp
and
lret
jl
in
adc
aad
add
pop
dec
gs
and
xorl
inc
push
divl
or
stc
push
in
pop
call
jo
cmp
inc
push
scas
call
mov
jno
dec
les
cld
je
mov
in
and
pop
js
xorb
aam
cmp
pop
cs
movsl
decl
jg
fmulp
fistpll
pushf
adc
lea
sub
sbb
cld
xchg
daa
ds
movsb
aam
aas
sbb
xlat
mov
mov
idivl
mov
inc
push
data16
mov
aam
test
popa
pushf
jp
call
inc
test
xchg
aaa
dec
movsl
addb
mov
add
imul
ss
mov
cld
test
aad
inc
pop
cmp
dec
adc
cmp
lret
inc
sub
lea
xchg
dec
xor
sarb
imulb
out
rcll
mov
popf
jecxz
add
sbb
sbb
mov
xchg
xchg
sbb
out
out
pop
adc
bound
mov
or
and
int
inc
cmc
dec
je
jno
in
mov
push
cmp
inc
imulb
std
dec
stos
dec
cmp
test
fstpl
sbb
ret
xor
mov
mov
bound
inc
std
enter
mov
andb
rcrb
stc
call
es
movsl
add
lea
mov
mov
cmp
lret
or
mov
bound
lock
mulb
jl
push
sahf
mov
lret
sub
push
and
xchg
push
insl
mov
ficoms
scas
mov
fstpl
cmpsb
fdivrs
jb
in
arpl
mov
pop
popa
pop
and
cmp
add
andl
pushf
sahf
jnp
push
mov
pop
pop
movb
mov
cmp
mov
loop
or
js
adc
cmp
xchg
mov
jge
insl
ljmp
mov
inc
loop
lcall
cmpsb
out
jbe
movl
out
jge
fnstcw
je
add
stc
not
mov
pop
and
push
jno
and
call
jmp
stc
adc
jp
and
push
loop
mov
or
loopne
popaw
in
adcb
xorb
inc
sbb
stc
fistl
scas
int
dec
out
leave
dec
dec
add
test
jns
jae
push
roll
enter
jmp
inc
test
sub
push
xor
or
mov
pop
fldcw
adc
jl
pop
sub
xchg
push
add
cmp
sbb
sub
and
imul
test
out
sti
add
mov
push
push
mov
sbb
dec
lcall
mov
out
test
fisubrl
jecxz
mov
or
jge
repnz
test
or
adc
inc
push
xchg
jnp
cwtl
dec
shlb
adc
adc
es
jp
add
or
lods
in
pop
adc
sub
jnp
insl
lea
scas
sub
inc
repz
mov
add
jp
push
clc
in
mov
adc
push
fwait
enter
jbe
mov
adc
pop
push
jmp
stc
outsb
pop
and
aas
lods
ja
adc
mov
cmc
mov
mov
stos
push
add
mov
fs
mov
shrb
dec
sub
les
icebp
js
mov
hlt
adc
inc
fwait
xchg
daa
mov
mov
repz
push
pushf
inc
xchg
lea
mov
inc
mov
std
sbb
shlb
push
out
in
sub
je
jno
adc
xor
sets
stos
add
fdivrp
data16
mov
dec
stos
mov
sbb
mov
inc
lret
cmp
push
add
and
cmp
xor
dec
ljmp
dec
pop
xor
popl
aad
cmc
leave
inc
adc
push
fs
or
fs
cld
imul
and
fwait
lock
xchg
sbb
add
mov
dec
lods
movsb
pop
mov
je
add
jmp
icebp
out
push
test
adc
and
popa
es
leave
jns
xchg
insl
sbb
hlt
sahf
or
fsubrs
arpl
cmp
dec
mov
mov
push
pushf
jecxz
lock
movsb
daa
fwait
adc
lcall
push
pop
mov
mov
mov
stc
dec
mov
push
mov
scas
cs
or
in
loopne
nop
fstps
test
ds
clc
adc
cli
das
gs
cmc
popa
cld
cmpsb
sub
mov
jns
and
dec
lea
sbb
sub
arpl
xchg
adc
orl
pop
frstor
dec
mov
mov
pusha
mov
out
icebp
inc
int
ljmp
scas
sbbl
adc
add
dec
imul
aam
aaa
dec
sarl
rcr
subb
jne
add
mov
jb
add
xchg
test
push
push
xor
add
sahf
mov
inc
ss
fs
aas
jg
popa
out
mov
lcall
out
out
jl
push
ja
jl
icebp
mov
or
sbb
hlt
daa
cmp
fsts
and
cli
fstl
cwtl
jmp
icebp
mov
pop
cmpsb
cmp
lahf
fidivrl
js
mov
jmp
xor
mov
insb
push
iret
enter
mov
mov
loopne
or
xor
call
in
mov
flds
mov
jnp
push
xor
out
push
dec
sbb
mov
ficoms
loope
add
loop
bound
xchg
loop
push
scas
pop
jge
cmp
add
push
lods
jl
repnz
loopne
sti
mov
push
push
lods
ret
mov
clc
repz
faddp
dec
int
jmp
xchg
rorb
stos
xchg
pop
sbb
lcall
clc
shl
pop
sahf
pop
mov
jno
dec
mov
orb
mov
ja
hlt
rcll
hlt
xlat
sub
or
fildl
out
stos
cmp
jle
push
lret
addr16
jo
movsl
xchg
pusha
jmp
lret
test
adc
js
lods
aaa
lock
adc
mov
insl
mov
mov
test
sbb
jle
jnp
xchg
pop
pop
ret
mov
jno
stc
mov
dec
cmpsb
add
xlat
jbe
mov
mov
xor
pop
out
lret
es
jno
jae
xlat
jnp
and
jl
dec
adc
in
inc
jno
xchg
vdivss
hlt
sbb
jp
push
mov
mov
xor
mov
dec
push
jnp
mov
pop
sub
push
pop
ss
daa
adc
jno
cld
inc
aaa
fnstcw
ss
rclb
lcall
xor
and
aaa
aad
shll
mov
ret
test
lds
mov
shll
ds
dec
dec
stos
std
stos
enter
xor
mov
lcall
pop
push
dec
fs
fsts
adc
adc
sbbb
xchg
sahf
mov
mov
mov
mov
fisubl
sbb
into
xchg
jnp
push
lret
and
jae
loope
cmpsb
mov
lcall
pop
xor
loopne
pop
div
mov
sub
data16
fcompl
mov
call
jo
mov
mov
add
sub
or
test
inc
xchg
xchg
idivb
or
dec
and
jbe
popa
sbb
fdivs
push
push
or
jp
jl
xor
sbb
dec
adc
inc
lds
arpl
mov
inc
adc
cli
imul
and
fwait
cmp
cmc
xchg
aad
cmp
cmp
lods
pop
cmp
mov
mov
cmp
movsl
test
cmp
fsubrs
roll
pop
stos
subb
mov
imul
shlb
adc
xchg
fwait
xor
div
dec
test
jae
pushf
arpl
mov
cmp
loop
push
push
pop
adc
xor
jge
push
xor
dec
aas
adc
xor
arpl
int
pop
add
dec
mov
xor
xor
dec
sbb
cli
or
scas
rcll
push
xor
xor
dec
dec
outsl
aaa
test
mov
std
add
push
sub
add
xchg
mov
inc
or
es
je
loopne
sub
fmul
inc
js
push
dec
repnz
sub
fsubrs
cmp
and
cmpsl
fmuls
and
fcoms
mov
pushf
jns
jle
jnp
push
jle
lahf
mov
mov
ljmp
call
sub
and
push
arpl
jmp
mov
outsl
push
mov
cs
xor
lods
into
movsb
mov
pop
jl
dec
xor
pop
outsb
ljmp
adc
jne
jne
dec
fistl
mov
inc
mov
cmp
into
mov
sarb
insb
mov
sub
inc
pop
pop
lcall
rcl
scas
xchg
in
inc
push
insb
cmp
jno
jp
xchg
jae
mov
cmp
adc
sub
push
xchg
adc
idiv
cmp
pop
negb
add
enter
test
jge
and
ret
adc
push
xchg
loopne
xchg
adc
popa
push
or
movsl
xchg
jmp
and
cmp
cmp
andb
in
mov
mov
xchg
pop
cmpsb
aam
push
loop
lea
pop
cmp
cmp
fcompl
cmp
imul
clc
mov
mov
mov
icebp
adc
bound
out
mov
jp
jle
mov
sbb
fimuls
add
fucomi
jle
xchg
arpl
cli
pusha
int
add
push
xor
insb
xchg
outsb
lods
push
pusha
lds
in
jmp
stc
adc
test
icebp
xchg
ljmp
pop
jns
xchg
mov
dec
fwait
mov
push
leave
fs
mov
push
and
xor
loopne
sub
xor
insb
add
fstps
mov
es
inc
lahf
popf
es
adc
pop
or
in
push
jb
add
xlat
adc
pop
push
loope
je
jbe
imul
bnd
and
jae
adc
in
test
adc
loopne
mov
out
xlat
enter
or
mov
test
sbb
or
and
popf
push
dec
xlat
dec
aas
loope
push
cmp
jns
jno
jmp
xchg
jae
xor
add
add
stos
bound
sbb
sbb
and
hlt
dec
int3
push
sub
pop
add
lcall
cmp
and
xor
jo
pop
lea
clc
sahf
add
jo
pop
cltd
xor
jno
lret
sahf
je
fmul
and
popf
pop
ss
in
cmp
inc
lods
dec
nop
adc
pop
sbb
push
lock
and
leave
xchg
mov
aas
xchg
jge
movsb
sarb
lds
jp
hlt
mov
sahf
clc
ret
cmc
xor
xor
les
jno
call
cld
out
xchg
add
lods
movb
xchg
fcompl
dec
call
leave
bound
and
ja
cmc
push
mov
push
xor
faddl
mov
insl
icebp
ret
cld
add
clc
xchg
cmpsb
dec
or
scas
fimuls
call
aad
scas
int3
cmp
xchg
or
out
sahf
mov
loopne
pop
popa
out
arpl
cmpb
jecxz
or
lret
mov
and
mov
xchg
sbb
mov
jge
subl
call
movsl
and
nop
fldl
popf
dec
test
sti
adc
das
mov
and
les
xchg
xor
push
adc
jne
jp
out
xor
and
add
push
pop
and
roll
mov
rcll
push
cmc
call
outsl
test
rcrb
sub
xor
test
push
out
aas
sbb
comiss
aaa
sub
cmp
xor
xchg
mov
mov
lea
cmp
inc
jl
mov
and
lds
xlat
xor
sub
pop
clc
pop
sti
lret
shrb
cs
xchg
mov
popf
lock
das
adc
adc
fmulp
dec
or
insb
mov
sub
je
cwtl
ljmp
repnz
or
mov
imul
sub
out
out
ss
scas
sbb
test
xchg
pop
jno
enter
sub
in
add
xchg
mov
je
add
outsb
push
adc
hlt
mov
xor
jmp
mov
sub
jno
cmp
loop
ret
cli
andl
gs
push
push
popa
lds
test
out
inc
pop
in
mov
stos
mov
or
add
push
xchg
fisttpl
lods
and
fwait
pushf
push
add
cmp
jae
jb
mov
push
push
popa
dec
out
pop
xchg
sbb
fwait
and
out
shrl
scas
jae
mov
xchg
xchg
adc
test
in
sbb
fisttpl
mov
jecxz
shlb
popf
ret
jecxz
adc
mov
daa
or
xor
lea
cmc
mov
push
mov
nop
mov
call
movsb
out
mov
addr16
outsl
xor
pushf
push
lcall
movsb
insb
jp
mov
push
sbb
sbb
cmpsl
add
test
test
popf
pop
data16
xchg
dec
xor
out
cmc
add
stc
cmp
and
dec
add
repnz
sbb
leave
fbstp
dec
outsl
or
sbb
ret
cmpsb
push
inc
dec
sti
in
in
xorb
or
nop
icebp
mov
fcomps
rcll
popf
pop
pushf
pop
cmp
divb
xchg
add
lea
pushf
addr16
sub
adc
dec
hlt
pushf
out
adc
xor
mov
imul
int3
inc
lods
rorb
fs
outsl
sbb
stos
jle
ss
outsb
add
xchg
stos
inc
loopne
test
outsl
push
xor
aam
lcall
push
into
pmullw
out
std
js
fdivrs
int
push
and
jne
cs
cli
aad
push
mov
call
sti
xchg
outsl
pop
jo
mov
scas
call
loope
in
jle
xor
shll
out
sbb
mov
frstor
in
push
ja
cmp
pop
dec
shrl
dec
lods
adc
mov
ss
adc
imul
cmp
mov
jnp
sub
lahf
loope
jle
xchg
xor
push
lea
mov
je
stos
test
mov
ds
test
adc
ljmp
pushf
mov
push
es
rolb
sbb
fildl
decl
dec
inc
sbb
pop
mov
xchg
dec
jae
fdivrs
sbb
loopne
sub
pop
les
xchg
xorb
jmp
addr16
ret
inc
inc
pusha
dec
xor
xor
repz
std
push
or
push
and
test
jbe
in
test
call
adc
sbb
das
dec
dec
xchg
fs
and
jge
into
fsubs
jl
pop
lea
fldl
testl
sbb
xchg
jo
pop
test
test
mov
repz
aad
mov
out
add
xor
stos
stos
dec
lea
xchg
in
sbb
ljmp
or
inc
jp
push
or
in
imul
aad
cs
repnz
mov
adc
adc
jg
movsb
pop
fnstsw
dec
pop
xchg
rclb
fwait
sub
aam
icebp
or
aad
fadd
add
fidivl
xor
mov
in
push
lahf
jne
jmp
into
ss
test
sbb
xchg
add
cmp
fdivs
nop
mov
adc
jae
cltd
mov
adc
and
and
mov
push
sbb
test
cs
pop
jae
mov
out
push
enter
push
hlt
cmp
movsl
mov
push
test
xchg
xor
dec
xchg
scas
jno
outsl
cmp
jmp
jge
sub
jae
ret
pop
push
test
cltd
mov
outsb
jno
aad
cmp
mov
cld
mov
add
jo
fbstp
mov
add
and
sarb
gs
out
aaa
or
pop
jp
scas
shlb
test
pcmpgtw
push
insb
popa
push
adc
inc
loope
inc
push
dec
jle
push
imul
add
loop
mov
mov
jmp
imul
ja
inc
aas
sbb
repz
dec
push
inc
insl
sbb
xor
pop
and
cs
bound
lret
mov
outsl
sbb
and
and
push
push
ljmp
mov
xor
scas
addr16
test
in
dec
std
mov
jl
pop
and
lock
daa
adc
pop
and
push
mov
push
popa
outsl
mov
xchg
and
jno
mov
sub
movsb
out
add
leave
insb
sub
fisubs
jmp
pop
add
or
push
mov
xlat
test
mov
jge
xchg
inc
ds
in
dec
push
mov
enter
outsb
inc
test
cmp
push
int
iret
add
push
mov
jge
test
seto
and
pusha
add
push
imul
pop
inc
test
xlat
ja
pushl
dec
mov
push
mov
ret
jnp
dec
jnp
bound
jmp
mov
cmp
sub
rorb
pop
pop
aaa
pop
mov
mov
inc
popf
mov
mov
aad
pop
push
jno
mov
stos
push
mov
xchg
insl
jb
int
cwtl
and
jno
push
cs
jne
or
aam
mov
lret
sub
pop
mov
dec
dec
mov
cmc
sbb
mov
inc
pop
or
test
push
es
jg
push
dec
imul
loop
adc
jb
mov
dec
inc
sbb
repz
fst
jne
std
pop
test
stc
ljmp
fbstp
call
cmc
sub
pop
rcll
stos
stc
mov
das
nop
mov
sbb
or
sahf
and
adc
out
out
insb
orb
jo
cmp
mov
inc
lods
xor
and
mov
out
je
sbbb
addr16
cmp
fistl
mov
sbb
sub
jnp
mov
or
mov
lods
gs
je
negl
stos
into
enter
fst
ficompl
add
mov
sub
sbb
leave
decb
and
rolb
inc
lock
add
ret
and
jno
pop
xor
adc
add
jae
dec
fmull
or
cld
in
jmp
push
mov
sbb
test
adc
xor
in
cmp
cmp
xchg
das
sti
push
repz
cmpsl
mov
jne
jnp
pop
leave
sub
or
enter
xor
add
cmpsl
sub
sub
scas
dec
cwtl
sub
xchg
or
add
sub
dec
shrl
xlat
addl
pusha
jle
addl
mov
inc
mov
dec
cmc
mov
scas
dec
scas
stos
popf
cmp
xor
push
mov
clc
dec
push
lods
ret
and
outsb
sbb
dec
shlb
mov
mov
cs
add
lock
insb
and
mov
int
pop
adc
repz
fucomip
stc
push
mov
das
pop
cmpsb
lds
or
inc
loopne
xchg
or
inc
push
sub
dec
sub
add
daa
inc
lods
fadds
cmp
and
sbb
xor
loope
ja
iret
mov
lods
lret
repnz
xchg
shrb
mov
jecxz
addr16
mov
sbb
lahf
dec
xor
or
sbb
and
cmc
push
pop
jmp
cltd
mov
mov
test
outsb
nop
sub
cld
sbb
nop
pop
aam
aaa
xchg
xor
xchg
test
adc
imull
imull
es
adc
shl
mov
inc
adc
fisubrs
xchg
cmc
movsl
jmp
push
js
into
das
daa
loopne
cmp
pop
mov
outsb
aas
out
fisubl
push
data16
xor
loop
xchg
adc
add
fldt
test
mov
jl
adc
push
mov
or
and
pop
or
or
sub
repnz
dec
lret
xchg
xchg
jg
movsb
leave
push
push
xor
push
lcall
stos
in
mov
js
mov
jno
mov
cmpsl
mov
cwtl
in
xor
jbe
popf
addr16
mov
loope
cwtl
pop
addl
pushf
mov
notl
dec
jns
or
mov
lcall
mov
out
dec
mov
cmc
test
sbb
daa
and
inc
cmp
pop
iret
add
hlt
xchg
es
lret
inc
xor
aaa
in
jecxz
mov
push
mov
xor
das
adc
mov
sbb
mov
jp
data16
icebp
fwait
lcall
jge
xor
add
sbb
push
lds
loop
lods
into
lea
or
xor
mov
pop
ret
and
out
dec
add
shll
jg
imul
in
push
shll
adc
xchg
fwait
dec
push
divb
and
imul
mov
mov
int3
in
sbb
js
sub
or
or
jle
sub
jge
push
pusha
ds
jb
jp
jae
and
enter
push
push
jmp
mov
sub
jl
test
mov
movsl
fnstcw
mov
or
sub
rolb
leave
mov
loope
and
inc
jle
scas
fsubrp
aaa
or
fcmove
out
jl
jl
aad
jp
ljmp
movsl
dec
pop
jmp
jge
mov
xor
and
sbb
leave
push
cmpsb
mov
xchg
jns
stc
jne
pop
dec
push
sbb
sbb
adcl
ret
dec
mov
sbb
inc
rorl
adc
int
push
sbb
and
leave
es
cmp
dec
mov
stos
push
cs
int
sub
clc
arpl
mov
or
jle
ja
out
lcall
enter
xor
cmp
lods
ja
aas
stc
dec
pop
pop
addr16
push
dec
leave
pop
daa
add
mov
mov
fiadds
cs
or
push
adc
out
inc
pusha
inc
dec
or
and
mov
shrb
mov
mov
stc
mov
pusha
sbb
jne
jmp
push
pop
repnz
jp
pop
cltd
sub
jbe
mov
das
cmp
mov
fwait
mov
xor
push
adc
or
xor
int3
out
lahf
pop
test
xchg
xor
xchg
sub
arpl
mov
lret
lods
and
int3
leave
push
dec
pushf
les
push
or
les
jmp
out
fildll
in
fwait
sub
dec
pop
sub
mov
std
test
push
testb
dec
mov
repnz
sub
jo
mov
popa
sub
repnz
dec
cltd
inc
push
dec
mov
add
rol
cmp
cmc
aad
push
mov
popa
aam
lret
or
mov
fnstenv
inc
out
push
mov
in
outsl
xor
stos
pushf
sub
in
and
scas
xchg
sbb
pop
sbb
add
loopne
or
sbb
jbe
jp
or
jne
hlt
sbb
subb
lahf
inc
sub
sbb
lret
std
inc
imul
jecxz
hlt
xchg
cmpsb
popf
cltd
push
push
cmp
xor
cld
xchg
and
sub
adc
xor
xor
jl
jae
mov
dec
leave
dec
mov
and
leave
sbb
adcl
sar
jl
jbe
shlb
cli
loope
mov
nop
das
movsl
dec
test
xor
xchg
fucom
adc
aad
imul
add
ficoms
fisubrs
xchg
inc
mov
mov
mov
pop
mov
xchg
mov
int
lcall
mov
dec
xor
cmc
pop
sahf
mov
and
xchg
cwtl
xor
stos
dec
mov
outsl
cmp
aaa
mov
lret
xlat
aas
dec
xor
and
icebp
adc
int3
fbstp
xchg
sbb
inc
sub
movsl
in
xchg
js
ficoms
enter
cmp
mov
mov
mov
ret
push
xor
fs
pop
bound
and
dec
add
jns
push
test
addr16
out
mov
lock
imul
sub
mov
dec
mov
or
in
out
ficomps
jle
cmp
xchg
pop
push
adc
in
daa
andb
and
xchg
and
imull
and
dec
xor
jo
jmp
insb
pop
sbb
test
pusha
cmp
pop
xchg
push
cmc
cmp
mov
notb
fildl
inc
mov
push
jnp
loopne
js
movsb
mov
fstl
and
adc
mov
xor
orl
xor
lods
mov
xchg
loop
shlb
rcrl
lret
inc
cltd
popf
pop
std
aas
sbb
inc
addr16
and
in
cmp
test
or
or
aaa
lea
rorb
inc
lods
xchg
mov
push
movsl
push
and
adc
movsl
jp
sub
call
ds
pop
mov
push
lahf
daa
in
cmpsb
test
and
sahf
lds
xchg
icebp
add
and
out
jp
mov
jp
ficoml
jmp
sbb
push
add
pop
fs
mov
dec
and
xor
js
in
adc
pop
shrb
add
daa
lea
or
xchg
ja
mov
outsl
iret
data16
or
inc
add
jmp
aaa
stc
push
inc
pop
pop
jae
cmp
jmp
movsl
ljmp
jge
stos
js
jnp
cld
cmp
xchg
push
and
add
inc
sub
cmp
mov
jae
aam
inc
xor
mov
push
mov
pop
xchg
fisubl
push
cs
int
in
test
cmp
adc
dec
cwtl
push
or
xlat
arpl
insb
mov
les
repnz
loop
repz
mov
jge
imul
movl
xchg
jge
lods
mov
clc
sub
in
leave
stos
add
and
inc
aam
sbb
in
into
aaa
cmpsb
lods
dec
repz
sub
popf
lods
sbb
push
and
mov
jg
movsl
popa
pop
cmc
out
stos
pop
cmp
mov
pop
popa
popf
in
and
les
out
sbb
xorb
movb
insl
jecxz
test
addl
push
mov
mov
cwtl
adc
add
jbe
mov
scas
dec
xor
lret
inc
test
xor
call
aas
adc
fwait
mov
sbb
cmp
gs
mov
nop
cmp
fsubs
sbbb
call
scas
nop
pop
popa
and
jl
mulb
xchg
loope
cld
dec
cmp
sar
aaa
mov
adcl
adc
dec
cltd
or
repz
test
mov
and
call
mov
in
mov
fsts
int
std
leave
sti
jns
lock
ja
xchg
jae
lcall
inc
push
push
test
andb
icebp
sub
cs
scas
jb
mov
add
pop
dec
or
dec
cmp
add
aaa
shll
aas
sbbl
cli
into
sub
lock
test
clc
mov
and
pusha
dec
int
mov
es
dec
push
inc
cmp
aaa
and
divl
inc
bound
movsb
jns
and
les
shl
and
xchg
mov
push
xchg
push
pop
adc
iret
aam
jns
lret
xchg
ret
insb
push
xchg
sbb
mov
pop
pop
lea
popa
jnp
inc
jo
jle
xor
outsl
jnp
inc
cmp
xor
dec
mov
adc
or
sbb
and
and
mov
dec
fiaddl
mov
cmc
shll
pushf
cmpsl
lods
adc
mov
int
mov
data16
test
dec
xlat
rol
iret
push
sub
sahf
mov
int
out
fadds
push
das
and
outsl
lods
mov
pop
ja
out
out
and
in
push
leave
dec
sar
leave
jge
jl
lods
xchg
repz
mov
in
pop
mov
out
inc
orb
jnp
scas
ret
pop
inc
call
sub
mov
xlat
sar
push
dec
out
adc
add
add
dec
orb
push
push
jns
fwait
push
adc
ficoml
dec
pop
into
fwait
xchg
push
lods
sarl
inc
dec
sbb
jl
adc
arpl
movsb
adc
sarl
push
add
adc
or
int3
into
push
scas
xchg
mov
jno
lods
rclb
mov
or
pop
jb
fldcw
test
and
out
cld
mov
jmp
js
mov
adc
mov
cli
dec
jbe
aam
mov
jmp
inc
ljmp
out
stos
shr
and
mov
repnz
push
pop
loope
push
xchg
xlat
je
movsl
cmovs
sub
test
dec
push
sub
in
loop
inc
enter
jmp
cli
lea
call
sbbb
lea
mov
gs
mov
les
ljmp
jl
or
push
outsb
lods
arpl
sub
faddl
imul
jge
push
into
sbb
jno
cmp
mov
out
xchg
cs
filds
nop
scas
or
aam
push
lret
mov
inc
in
subl
xchg
lds
mov
and
mov
or
mov
xlat
out
ja
negl
cmc
mov
pop
fsubs
movsl
pusha
enter
test
out
mov
jae
sti
or
cmp
repz
movsb
mov
inc
aaa
inc
shll
pop
das
dec
movsl
and
in
sti
arpl
push
push
int3
lods
mov
leave
test
mov
in
jb
cmp
jbe
mov
mov
imul
pop
and
and
inc
int3
dec
xor
arpl
rolb
jb
sub
pop
jmp
or
inc
sbbb
pop
cmp
imul
mov
test
xorl
jne
cld
xlat
int
lods
sub
lock
mov
jl
dec
xor
movsl
in
rorb
sbb
rol
shll
dec
orl
call
cld
ljmp
mov
scas
dec
fsubrl
sbb
mov
cmp
mov
sub
movsb
icebp
cld
sbb
and
mov
cmp
and
sbb
jmp
ja
mov
fisttpl
negb
daa
je
loope
pop
sub
cmp
dec
and
stos
adc
jns
jnp
bound
push
ss
mov
sub
out
int3
filds
or
xchg
and
sub
jp
pop
jno
dec
push
mov
cld
sub
and
sbb
push
sbbl
sub
jo
into
or
mov
js
mov
mov
xchg
jns
popa
push
jbe
jno
dec
sbb
int
jne
mov
sbb
push
lds
push
xchg
into
inc
or
cmp
mov
mov
cmp
xchg
movsl
xor
lret
decb
add
fdivrs
dec
push
pop
lahf
imul
mov
mov
out
les
les
cmpsb
fistps
adc
xchg
push
les
mov
push
mov
inc
cli
xor
add
sahf
cmp
pusha
or
fidivl
repnz
pushf
add
out
sarb
sub
cmc
pop
add
or
pushf
sub
mov
cs
mov
jge
loop
je
mov
push
loopne
std
or
jp
and
jae
sub
mov
mov
inc
mov
aam
adc
and
mov
bound
pop
xchg
add
mov
cmp
int3
mov
sub
jmp
js
xchg
push
or
cmpsl
push
and
pusha
adc
pop
inc
sbb
ds
mov
shlb
sub
ret
add
rcrl
test
outsl
jb
mov
leave
test
sbb
in
repnz
fnstenv
loopne
ja
or
into
popf
mov
std
int
psllw
inc
dec
in
or
ficoml
test
mov
lret
sarb
ljmp
xor
daa
enter
stos
or
lret
cli
mov
shrb
in
sub
push
inc
orb
loope
xchg
hlt
push
and
ret
and
test
inc
rol
pcmpgtb
push
and
arpl
sbb
daa
dec
xchg
sti
and
daa
sub
cld
jp
in
inc
imul
inc
or
data16
in
ficomps
sti
cmp
lret
mov
lret
leave
pop
jo
ja
stos
les
xor
test
pop
mov
inc
adc
mov
mov
sbb
and
cmp
movsb
inc
clc
ja
and
rcr
mov
cmpsb
push
inc
fimuls
cmpsb
lea
xor
into
into
and
xor
jg
and
push
stos
xor
sti
fcomip
rclb
push
push
ljmp
and
ror
push
sti
popf
or
arpl
add
xor
xchg
add
sahf
mov
or
aaa
fidivrs
xor
insl
pop
mov
into
pop
sbb
sub
dec
cs
gs
std
jae
push
scas
lret
shll
stc
test
std
dec
mov
clc
jb
xchg
fstps
pop
jnp
outsl
mov
sbb
pop
mov
jnp
xlat
jl
add
and
jmp
outsb
jecxz
rorl
sti
orb
push
mov
fwait
mov
test
cld
pop
push
add
repz
or
pop
jne
enter
inc
jg
jge
xchg
rcr
cwtl
push
icebp
popf
outsl
jg
push
lds
xchg
add
imulb
jecxz
ret
movsb
jp
out
inc
cmp
sahf
ror
scas
fisubrs
hlt
dec
mov
outsl
push
jl
incl
or
push
pop
inc
or
jnp
push
cmp
scas
insb
inc
and
outsl
push
mov
shr
inc
mov
sarb
pop
xorb
lret
jns
test
ss
hlt
xchg
lock
mov
sbb
jl
mov
gs
mov
push
pop
inc
imul
into
add
push
sbb
cmp
or
dec
test
fnsave
dec
jns
mov
loope
js
and
pop
ljmp
dec
xchg
push
push
lcall
jb
mov
mov
imul
ljmp
pop
int
ja
into
xchg
out
sti
jns
icebp
pop
mov
add
out
insl
cmp
push
mulb
cmp
dec
ljmp
sarl
xchg
jae
dec
fistps
xor
push
les
fucom
mov
mov
outsl
xor
adc
jge
and
and
inc
les
hlt
xchg
scas
adc
xorl
xor
aaa
or
sub
sub
xor
xchg
hlt
mov
insb
dec
in
icebp
mov
dec
jmp
xor
xchg
dec
dec
push
jb
push
dec
scas
and
add
push
ds
ret
fldenv
jp
shl
mov
inc
jecxz
rcrl
adc
push
aad
aam
mov
push
sbb
int
and
push
xchg
xchg
out
inc
fiadds
dec
into
jl
dec
je
cmp
out
sahf
cmpb
pop
mov
push
push
jno
inc
sub
imul
test
mov
jmp
mov
pop
out
ret
jle
xchg
lods
xor
adc
jnp
adc
lcall
popf
push
adc
test
into
loop
nop
outsl
es
cli
add
subb
xchg
cwtl
stos
in
adc
or
dec
mov
cmc
gs
mov
insl
test
aaa
scas
dec
xchg
cli
mov
add
and
sbb
in
pop
pop
in
call
aas
imul
lcall
icebp
and
lret
lods
dec
cltd
sub
mov
repnz
sub
enter
mov
sbbb
xchg
mov
sbb
mov
insl
dec
jge
mov
mov
ror
dec
cmp
mov
adc
data16
shll
push
inc
or
dec
movsb
shrb
lds
sti
ret
mov
daa
xchg
mov
in
mov
mov
fsubp
mov
shrb
pop
mov
mov
pop
mov
mov
nop
sub
enter
fldl
xchg
cltd
cmpsb
in
mov
dec
jns
mov
or
cmp
jae
shlb
sbb
push
cld
movsb
sahf
insb
mov
repz
push
push
or
popa
lock
jecxz
shlb
sbb
in
out
mov
mov
xor
mov
cmp
push
mov
xchg
sbb
push
inc
call
sub
sbb
or
fwait
popa
xor
adc
and
cmp
sbb
cli
movsb
cmp
dec
jne
insl
cmpsb
inc
xchg
or
pop
cmp
mov
or
sub
push
and
ljmp
sbb
fwait
out
stos
ficompl
add
lcall
lret
das
loopne
mov
std
js
pop
push
pop
pop
fwait
haddps
lods
or
in
sub
sahf
loope
out
adc
lcall
add
rcrl
mov
aam
sbb
cmp
adc
mov
mov
scas
icebp
fidivl
sbb
mov
mov
push
jae
dec
sub
lcall
sub
std
xor
add
mov
xchg
pop
lahf
add
leave
shl
sbb
push
add
mov
xlat
cmp
in
insl
jne
sub
push
lret
in
mov
inc
outsb
jae
dec
ja
sub
pop
scas
push
es
mov
enter
ds
fsubl
mov
sbb
or
or
mov
f2xm1
push
rcrb
adc
cmpl
mov
cld
stc
inc
arpl
add
mov
push
lods
inc
data16
adc
and
rcrw
fs
adc
lahf
inc
mov
in
mov
out
mov
lret
or
cltd
sbb
push
mov
xchg
rorl
int3
sti
stc
lock
bound
jo
imul
pop
cwtl
inc
xchg
call
fidivs
popf
sub
enter
sub
loop
adc
stc
mov
jo
dec
sbb
jmp
inc
add
mov
iret
fwait
mov
xchg
add
orb
sub
pop
int3
insb
xchg
pop
mov
je
add
and
movsl
adc
enter
mov
lock
int3
add
and
xchg
cmc
push
lea
fisttpll
jmp
jl
lahf
outsb
das
lock
dec
dec
xlat
sbb
fbld
idivb
or
cltd
addr16
pop
in
outsl
xlat
or
cwtl
lods
pop
std
add
mov
aas
pusha
jg
out
xchg
pop
shrl
push
sarb
add
cli
ret
jno
mov
popa
jns
cli
cmp
dec
aaa
push
inc
dec
shrl
stc
push
ret
pop
cmp
and
jg
dec
cmpsb
pop
jg
fwait
out
xchg
jmp
pushf
hlt
sub
pop
es
inc
inc
or
mov
add
xlat
jne
ret
xor
inc
stos
mov
dec
rcrb
gs
push
jae
outsb
inc
or
outsb
or
imul
aad
iret
repz
cli
pop
mov
aam
jb
xchg
push
mov
das
mov
jp
mov
sbbl
add
jle
lea
jae
sar
sbb
cmpb
jnp
lcall
ljmp
das
cmpsb
xor
nop
iret
xor
pop
lea
stc
push
inc
jnp
sub
jo
adc
daa
mov
dec
aad
jae
or
stos
inc
inc
dec
mov
inc
iret
xor
test
push
mov
lret
or
outsb
add
dec
mov
das
scas
xchg
rorl
cmpsb
jo
inc
sub
cmp
cmpl
mov
jae
out
repz
mov
adc
sti
or
mov
out
or
add
mov
fisubl
imul
add
ds
insl
mov
je
push
arpl
mov
add
fistpll
call
xchg
xlat
cmc
sub
adc
inc
xor
jno
xor
out
mull
insl
testl
dec
repz
ljmp
pop
daa
mov
add
pop
fwait
push
int
adc
loopne
das
or
fwait
cmc
aam
faddl
add
pop
paddb
iret
xchg
dec
mov
les
mov
hlt
shr
xor
adc
xchg
ljmp
jmp
loop
pop
sbb
imul
add
test
out
mov
xor
xor
rcrl
aad
lods
xlat
sbb
loope
cmp
fwait
pop
xchg
inc
add
lahf
mov
decb
mov
pop
xchg
mov
mov
cld
or
xchg
xor
jp
dec
xor
test
lods
je
call
rorb
std
je
inc
mov
outsl
jmp
push
sub
shrl
and
push
in
mov
jns
aad
jns
push
cli
lods
xchg
ds
adc
mov
lock
aad
cli
mov
mov
fwait
mov
or
cmpsl
add
pushf
sbb
nop
fdivrl
pop
mov
mov
fs
or
jecxz
sahf
test
addb
mov
xchg
out
lcall
shr
xor
mov
ret
incl
dec
pop
dec
dec
aas
es
add
ljmp
pop
inc
mov
sbb
in
nop
nop
stos
jg
int
jl
xchg
sti
jno
test
dec
arpl
ret
popa
arpl
or
jo
dec
add
xchg
test
leave
pop
mov
push
xor
adc
mov
jae
dec
push
insl
mov
add
mov
push
stos
dec
mov
xor
je
movsb
inc
aas
pop
lea
xchg
mov
stos
or
dec
decl
cmpsb
jg
jnp
cmp
cld
out
lahf
xorl
xor
outsl
jo
cmp
scas
jbe
mov
sbb
mov
int3
iret
pop
bound
mov
pop
inc
mov
xlat
into
popa
mov
mov
xor
pusha
jno
inc
mov
mov
sbb
in
ret
dec
jle
cmp
mov
push
shrb
pop
mov
xchg
adc
movsl
sub
push
sub
mov
mov
int
push
inc
fdivs
arpl
add
sbb
push
imul
jo
jbe
sub
jno
xchg
jl
cmp
or
out
out
lahf
jae
out
jno
mov
lcall
shl
push
imul
stos
cwtl
fiaddl
push
test
add
sbbb
in
sbb
and
cmp
mov
fiaddl
pop
inc
mov
mov
mov
mov
jo
loop
and
sub
mov
lcall
pop
lods
lods
decl
vcvtdq2ps
movsb
mov
xchg
popa
aam
into
std
push
xchg
daa
ja
or
cmp
add
push
movsl
scas
clc
pop
add
and
xlat
insl
jae
mov
ret
into
incb
sub
loope
imul
add
mov
or
mov
fildl
dec
sub
dec
dec
repnz
mov
ret
sbb
pop
pop
or
push
test
imul
xchg
inc
push
and
fcompl
cs
shrl
xor
sub
and
dec
sbb
push
adc
push
cmp
je
mov
outsl
and
mov
cmp
push
gs
cwtl
scas
inc
cmpsl
je
out
or
dec
sbb
xchg
test
fcmovnu
adc
sbb
aas
mov
shl
jmp
add
push
fstps
push
rcll
mov
pusha
mov
mov
call
adc
cwtl
outsl
jbe
imull
shr
inc
inc
sahf
push
xor
xlat
int
test
ds
jbe
scas
lcall
adc
ret
jmp
and
xchg
les
mov
add
add
bound
in
pop
push
mov
xorb
sub
daa
sbb
insb
add
or
enter
les
add
out
pop
jae
jmp
mov
lret
mov
int3
jne
sti
lret
out
gs
add
dec
imul
ret
jg
ficomps
ret
icebp
lret
out
mov
push
bound
xchg
jp
mov
repnz
sbb
fsubrl
mov
sarl
mov
outsb
dec
imul
ss
adc
popa
js
outsl
mov
inc
pop
cs
dec
add
mov
in
cs
or
fdivl
add
push
dec
xor
sbb
int3
out
in
xor
leave
inc
dec
jle
mov
jp
enter
add
bound
pop
mov
add
jnp
jno
inc
dec
daa
add
jecxz
dec
dec
js
push
sub
icebp
popf
push
xor
adc
fs
cmp
push
add
lods
inc
mov
xchg
lods
lock
aas
scas
aas
in
xor
jle
loope
inc
push
adc
popa
cltd
in
and
es
push
xor
rol
testl
sahf
xchg
je
rorl
aaa
mov
or
imul
mov
jecxz
mov
mov
jno
lods
nop
incl
cld
movsl
int3
outsl
je
mov
shr
cmp
inc
imul
mov
ljmp
xchg
movsb
mov
dec
repnz
sbb
jge
in
pushf
xchg
push
in
movsb
or
and
inc
push
push
sti
jo
in
call
lock
loopne
mov
push
mov
mov
and
push
js
fxtract
sbb
push
gs
and
jne
lods
cmp
xchg
int
push
sub
ret
aam
int
clc
mov
jge
jbe
pop
test
mov
xchg
cmp
and
ror
arpl
mov
mov
decb
jmp
xorb
pop
ret
cmp
or
lcall
inc
pushf
fmul
mov
and
sbb
xlat
inc
cltd
inc
jo
clc
jnp
push
clc
outsb
or
jnp
imul
jnp
jne
cs
mov
mov
or
mov
xor
pop
dec
mov
adc
push
sbb
pop
je
dec
lcall
pushf
popa
cmp
dec
aaa
add
ret
imul
mov
cmc
xchg
stc
hlt
insb
xchg
data16
add
ret
sbbl
shrb
dec
jl
pop
pop
xchg
xchg
pop
out
test
and
clc
mov
pop
sti
shlb
sub
pop
inc
addb
lret
ja
bound
jp,pn
in
js
and
scas
pop
or
es
into
lock
out
sub
dec
push
jp
sbb
js
xor
xor
or
cmp
inc
or
mov
xorl
ficoml
push
ljmp
xchg
add
mov
and
cltd
mov
cmp
mov
adc
sbb
leave
push
cltd
jg
leave
aaa
jne
inc
div
or
testl
push
sbb
repnz
sahf
ret
cld
mov
aaa
idiv
dec
cld
push
mov
pop
jmp
movl
jb
cmp
lahf
fwait
pop
in
and
popa
scas
lret
cmpsl
push
xchg
jecxz
or
and
or
test
cmp
or
and
jns
or
jb
sbbb
ja
cwtl
inc
push
inc
jp
outsb
mov
jne
fimull
iret
in
push
add
mov
out
jl
mov
addl
xor
fs
push
adc
ss
or
jp
or
dec
test
sbb
mov
rcrl
jmp
or
xchg
jnp
adc
arpl
in
sub
jmp
test
add
mov
mov
icebp
dec
call
clc
les
push
xorb
cmpsb
cli
leave
sahf
imul
je
lea
add
rcl
pop
pop
adc
mov
cs
ret
shr
cmp
movsb
adc
sub
and
pop
sub
movsb
sub
inc
addr16
push
sub
xchg
movsl
out
sub
and
movb
mov
sub
cmp
int3
lret
inc
mov
mov
in
sub
notb
add
movsb
cli
xor
pop
setge
bnd
mov
push
fists
pop
and
aam
inc
mov
aad
call
ds
fbstp
adc
push
test
jp
scas
sub
or
xchg
inc
adc
mov
mov
inc
popa
xchg
dec
cwtl
outsl
flds
jb
and
mov
outsb
lock
leave
push
xor
scas
rorl
inc
test
std
es
call
sbb
or
sub
and
sbb
cwtl
jo
add
cmp
sarb
push
mov
movsl
cmp
test
mov
test
jg
shld
mov
clc
in
lods
adcl
mov
in
jae
in
std
aaa
scas
mov
cmp
dec
inc
scas
xor
dec
outsb
or
fs
lock
mov
cmpsl
cmp
mov
mov
jge
testb
xor
inc
loope
adc
mov
out
stos
or
xor
push
fnstenv
pusha
pop
push
dec
push
mov
push
or
pop
dec
adc
and
xor
sahf
aaa
add
movsl
rcrb
lret
pop
sbb
movmskps
lock
xchg
mov
test
call
xor
lock
hlt
adc
popa
roll
clc
fildll
jnp
mov
cmp
ret
je
push
pop
push
lods
cli
lret
mov
xchg
mov
pop
insl
jbe
push
fmulp
push
lahf
pop
mov
int
das
nop
repnz
mov
xchg
in
mov
jecxz
shlb
ficompl
in
ja
cmp
sahf
lret
dec
jg
or
shll
fwait
mov
jmp
or
ljmp
sub
jno
jnp
lods
cmp
mov
mov
jnp
ja
sti
push
nop
aaa
or
dec
cmp
lods
dec
out
or
inc
lods
sahf
inc
pusha
cmpsb
mov
xorps
dec
xchg
je
xchg
in
jns
dec
lods
or
xchg
aad
sbb
mov
sbb
adcb
pop
ret
lds
push
jecxz
lcall
into
dec
jle
inc
cmpsl
iret
pop
loope
scas
and
fstl
sbb
sbb
xchg
lods
jl
insl
insl
insb
gs
mov
cltd
fwait
xchg
data16
test
add
jae
push
add
mov
pop
movsl
arpl
adc
rorb
mov
ds
or
jecxz
push
jmp
aaa
sbb
test
add
sti
fwait
jg
dec
mov
and
aad
arpl
bound
jne
std
insl
mov
loopne
sti
insl
stc
xchg
idiv
es
add
fucomp
dec
testl
popa
mov
cs
mulb
xor
xor
subb
lods
pushf
dec
out
mov
divl
test
in
ds
push
iret
dec
push
add
imul
adcb
cmp
xchg
outsb
lock
out
cld
jp
xor
xchg
cmp
xor
lahf
jg
push
xor
pop
xor
xchg
out
push
mov
fs
add
aaa
fiadds
out
test
jge
adc
jae
pop
push
add
mov
push
lahf
lds
jns
outsl
test
sub
xchg
push
mov
stc
int
pop
pop
lret
lcall
sub
mov
fs
ret
pop
nop
sbb
or
cmp
inc
jp
mul
inc
sar
adc
cmp
loopne
mov
lods
cmpsl
dec
mov
mov
mov
sub
lds
push
fstps
and
in
sbb
sbb
sub
movsl
mov
testb
ja
orb
inc
inc
movsl
adc
dec
inc
sub
mov
call
out
push
adc
lahf
xor
dec
mov
add
fidivs
jecxz
mov
jno
fstl
or
mov
push
out
push
clc
fisttpl
adc
out
pop
dec
lods
xor
sbb
xor
jmp
xchg
clc
cmp
je
mov
xor
fisubl
pushf
pop
outsb
insb
lods
aaa
out
mov
fstl
lds
mov
xor
nop
mov
and
sbb
jbe
stos
imul
jp
int
and
mov
mov
in
lret
in
dec
ja
sub
add
lods
mov
cmpsb
repnz
aam
push
mov
push
fcomps
lret
xchg
push
pop
aam
nop
mov
add
sub
loop
out
and
pop
pop
std
xchg
arpl
add
mov
pop
jp
adcl
sbb
push
stos
jecxz
mov
mov
jo
dec
sbb
loopne
lret
push
addr16
xchg
xchg
xor
lcall
pop
lock
movsl
call
loope
xchg
push
test
xlat
pop
sub
jmp
repnz
inc
insl
push
xor
lea
in
lock
sub
push
repz
imul
mov
jmp
jle
clc
aas
mov
dec
sahf
lods
test
xor
out
nop
mov
mov
sub
push
pop
mov
jg
mov
ljmp
cmp
std
sbb
fwait
push
repnz
sbb
pop
fcomps
test
std
mov
cmp
pusha
inc
shlb
lock
lahf
pop
adc
sub
cmp
push
push
sbb
dec
inc
pop
mov
aam
pop
loopne
cmp
adc
pop
cmpsb
testl
mov
sbb
mov
pop
add
xchg
test
cltd
sbb
clc
inc
fnstcw
lods
lahf
out
pop
inc
cwtl
pop
das
jne
xchg
adc
rclb
xchg
and
lock
mov
push
loop
mov
mov
movsb
push
sti
jmp
or
out
fstp
cmp
pop
push
std
sti
mov
flds
dec
sub
xor
mov
or
test
gs
xorl
xor
lret
cmp
mov
push
sarb
jle
mov
in
mov
push
adc
add
adc
push
outsl
jns
cld
sub
adcl
arpl
hlt
imul
sub
scas
jge
xchg
ljmp
push
loopne
inc
stos
lret
xor
jl
loope
sbb
mov
mov
jle
sahf
outsb
or
movsl
iret
outsl
call
outsl
push
je
icebp
ret
xchg
lock
ret
nop
pusha
pop
adc
enter
dec
xor
fsubrl
mov
hlt
jmp
xor
outsb
jge
push
adc
mov
or
cmp
lods
arpl
lahf
les
in
inc
sbb
dec
inc
sbb
cli
data16
jnp
std
ret
jp
pushf
dec
lret
inc
iret
mov
push
fs
inc
adc
xchg
aaa
pop
dec
add
lock
je
mov
loope
xchg
xchg
out
cs
add
lock
and
fdivrp
dec
add
mov
dec
iret
cmpsl
hlt
dec
jns
dec
mov
mov
jp
lret
jbe
mov
adc
sub
fwait
or
fldenv
or
in
jg
movsl
stos
outsb
adc
das
jg
cmp
popa
xor
test
inc
sbb
cmp
sbb
rcl
push
jbe
adc
arpl
into
frstor
fadds
int3
aaa
imul
xchg
addb
jge
mov
mov
mov
lretw
popf
pop
call
xchg
jno
sub
mov
cmp
call
or
ret
sub
cmp
sahf
test
arpl
insb
push
xlat
or
push
mov
aad
je
cmc
push
push
fldt
clc
mov
jo
mov
sub
and
inc
pop
xlat
cwtl
fistpll
mov
mov
mov
lret
andl
icebp
pop
mov
faddp
add
push
pop
popf
cld
ljmp
jns
or
enter
adc
clc
ds
mov
mov
inc
ds
leave
iret
shr
test
movsb
inc
dec
pop
fdivs
or
pop
pop
out
shlb
add
mov
std
scas
jnp
cmp
popf
mov
xchg
push
inc
lods
jmp
cltd
inc
inc
add
sbb
popa
xor
and
mov
inc
cmpsl
loope
or
jbe
push
in
pop
stc
lea
std
sahf
and
les
pusha
cli
sbb
pushf
add
faddl
push
test
loopne
adc
nop
push
popf
fcoms
fbld
out
lret
and
dec
in
push
jge
adc
popa
je
addr16
pop
sub
sbb
popa
inc
cmpb
inc
jmp
and
xchg
push
pop
mov
xchg
xor
add
or
es
jecxz
jl
fstps
out
xor
cmp
rclb
out
inc
lret
lret
shrl
sbb
pop
inc
cmp
jle
pop
jmp
add
shrl
push
dec
lahf
adc
cwtl
inc
mov
call
lcall
fwait
stos
outsb
fisubl
push
dec
aas
dec
mov
popf
and
adc
shrb
in
fwait
mov
jl
in
and
sbb
es
hlt
mov
hlt
ja
add
xchg
add
push
jecxz
fistl
dec
adc
xchg
test
aas
mov
cmp
inc
lds
je
push
sti
push
mov
pop
in
test
push
rorb
ljmp
cmpsl
data16
neg
out
test
ja
sbb
loop
sarl
pop
fists
and
pop
test
add
push
sub
or
xor
xchg
ret
inc
xor
sbb
sub
cltd
dec
sbb
int3
aas
xchg
test
hlt
push
sub
xlat
pop
in
mov
sbb
sub
sahf
jo
mov
and
stos
test
xchg
cmpsl
lds
and
dec
cmpsb
std
jnp
and
xor
icebp
pushf
repz
mov
cmp
or
filds
imul
repnz
jns
inc
sbb
ret
fisttps
sbb
xchg
xchg
mov
outsl
xor
jle
dec
repnz
mov
push
ret
push
les
repz
lahf
scas
movsl
dec
mov
dec
ds
dec
pop
mov
mov
dec
add
mov
sahf
int3
sbb
push
sub
sub
cmp
loope
imul
sbb
push
cmp
arpl
push
xor
das
rcr
scas
fildl
mov
push
jae
sbb
sti
push
pop
aad
adc
sub
call
arpl
outsb
xor
sub
or
jmp
xchg
sub
xchg
xchg
mov
add
add
jae
xchg
sub
shll
fnsave
add
sub
lea
dec
adc
jb
popf
aaa
ss
adc
add
pop
push
adc
mov
rorb
sub
stc
mov
jge
mov
pop
cmpsb
and
std
aas
jle
or
pop
enter
aam
sahf
shrb
pushf
cmp
mov
dec
sub
mov
push
xchg
mov
ljmp
in
and
cmc
pop
xchg
jg
fsubrs
push
call
cltd
inc
lret
arpl
jg
push
out
jo
jle
add
adc
scas
cmpsl
push
scas
adc
push
stc
insl
dec
outsl
in
mov
in
lods
pop
dec
dec
mov
iret
stos
adc
fdivl
aad
cmp
loop
add
jb
inc
in
sahf
jle
cmp
jno
insl
shlb
xchg
cmc
pop
push
arpl
imul
sub
push
xchg
fildl
and
jl
shl
out
andb
adc
cld
xchg
mov
sbb
das
fwait
bound
out
rorb
pop
sub
stc
mov
add
xlat
xor
scas
popf
ja
xor
mov
push
pop
mov
dec
push
sbb
fwait
stos
lds
lret
pop
movsl
test
lahf
sbb
xor
lret
inc
xor
lahf
xchg
push
mov
loopne
push
mov
jne
int3
adc
jno
fsubrp
push
sub
mov
or
push
mov
adcl
add
inc
test
mov
cmp
pop
pop
xor
adc
jp
push
xor
repz
mull
test
inc
lret
inc
pop
dec
adc
arpl
ja
lods
jmp
movsb
xor
notb
mov
cs
sbb
xor
jle
mov
mov
adc
and
sti
dec
je
movsb
mov
pushf
mov
arpl
mov
fnstsw
pop
push
test
test
fisubrs
insb
arpl
out
or
negl
mov
cmp
leave
test
addl
adc
popa
ret
sub
repnz
push
xor
in
xor
cmpsb
inc
pusha
icebp
inc
lret
nop
fmuls
jp
mov
enter
push
popa
jg
mov
pushf
je
out
pop
add
mov
mov
into
cmp
scas
xor
leave
dec
decl
test
xor
loope
pop
daa
adc
lahf
pop
cmp
mov
sub
push
sub
inc
in
repnz
push
sub
adc
decb
jle
addr16
in
cmpsb
sahf
fildl
inc
les
sub
mov
js
dec
jb
sbb
ret
mov
push
call
sub
movsl
xor
int
mov
ret
jno
pop
mov
pusha
adcb
test
dec
inc
insb
fisubrs
leave
jne
cli
sbb
mov
repnz
push
roll
rolb
sub
out
leave
or
and
xchg
inc
jle
iret
out
cli
lods
add
cmpsl
mov
and
or
push
out
jnp
adc
inc
loopnew
leave
fxtract
cld
and
pop
mov
repnz
lea
loope
cmpsb
sar
cmp
pop
lret
mov
test
push
xchg
test
pusha
sbb
mov
mov
inc
data16
outsl
test
pop
out
sbb
mov
mov
mov
dec
mov
jns
mov
mov
insl
mov
xor
shlb
loope
jo
mov
ds
cmc
pop
ja
ss
dec
push
popf
in
and
inc
outsb
xchg
sub
mov
imul
pusha
lods
outsb
or
dec
popa
inc
insl
addr16
mov
pop
pop
mov
aas
das
sahf
adc
mov
dec
test
pop
mov
push
cltd
add
and
outsl
aam
push
out
adc
fwait
xchg
inc
mov
pop
sbb
repz
cld
cmp
inc
and
addb
cmp
jecxz
add
js
push
icebp
mov
popa
ficoms
inc
dec
and
sbb
in
rcr
test
xlat
add
arpl
and
xor
stc
fsubs
call
mulb
or
cmp
test
jle
pop
xlat
mov
test
xchg
ret
rcl
xchg
dec
adcl
and
aaa
and
arpl
pop
mov
sbb
adc
sbb
into
add
jae
mov
cmpsl
push
out
mov
cmp
arpl
into
sub
cmpsb
dec
outsl
add
popf
icebp
or
es
pusha
mov
add
or
sub
shll
sbb
shlb
scas
dec
fcomps
stos
pop
iret
stos
cmpsl
mov
cmc
je
dec
xchg
sub
shll
sahf
pop
jae
push
cmp
lods
divl
mov
sbb
aas
jp
and
fs
push
cmp
mov
fstps
fisttpl
or
in
les
ss
leave
pusha
xchg
mov
add
or
jmp
nop
inc
xchg
in
aam
cmp
push
adc
jo
sub
inc
fiadds
push
loopne
mov
mov
push
pop
xchg
inc
add
adc
lret
inc
add
sub
jnp
sub
call
shll
and
mov
out
xchg
orl
fucom
mov
rorl
jl
xorl
add
aad
aam
ss
dec
jne
std
cmpsl
sahf
sub
aam
jo
cmp
sbb
cmp
pop
inc
lahf
roll
lahf
mov
ss
shll
adc
fnsave
hlt
por
sub
fidivrl
dec
arpl
xor
into
cmc
cmp
mov
adcl
and
loopne
pop
fmul
ret
outsl
pushf
dec
add
sbb
xor
rorb
cld
or
aam
lret
add
and
ds
lcall
adc
push
xchg
repz
stc
add
pop
add
jp
or
sub
mov
push
xchg
pop
jno
inc
in
mov
sub
pop
popa
sub
lods
pop
sub
lods
sbb
jecxz
cli
cli
nop
ficomps
imul
lret
cmp
mov
jge
loop
in
xchg
adc
insl
xor
inc
add
dec
mov
push
mov
push
movsl
cmp
loope
jl
ds
gs
jne
test
loop
out
pop
pusha
mov
cwtl
jecxz
xchg
test
xor
aaa
icebp
mov
int
lret
pop
mov
pop
add
sarl
push
popa
insl
cmpsl
pop
jg
add
aaa
loopne
subl
cld
jmp
outsl
push
shll
adc
push
sub
lods
cmp
jbe
and
hlt
shll
addr16
xor
cmp
repnz
add
fcmove
jae
pusha
xchg
repnz
jae
jne
lods
popl
cmp
cmp
or
inc
mov
jge
cmp
inc
push
clc
das
movsb
leave
add
insb
sahf
dec
mov
mov
mov
jge
clc
sub
in
or
repnz
jb
cli
dec
cmp
jo
mov
lock
scas
clc
dec
incb
aaa
sbb
inc
jg
addl
jl
stc
out
jecxz
xlat
dec
dec
mov
or
push
pop
pop
clc
lock
in
imul
ret
add
shlb
sbb
xchg
std
lcall
enter
mov
push
mov
pop
pop
push
inc
sub
popf
ret
jne
je
dec
adc
imul
nop
jl
aaa
xchg
gs
mov
mov
jp
xor
in
bnd
push
rcl
test
sbb
or
and
xchg
push
inc
movsb
stc
jle
mov
dec
sub
lods
sub
sub
xlat
and
pop
dec
addr16
leave
lret
pop
sbbl
pop
and
push
icebp
setge
jl
sahf
adc
clc
cli
repnz
mov
jl
inc
lcall
subb
ret
inc
and
add
testb
adc
rorb
aam
lahf
push
xor
cli
repz
arpl
pop
xchg
sub
sbb
xchg
sub
fs
stos
cld
mov
adc
fimull
js
ds
or
stc
hlt
inc
adc
aad
mov
push
push
call
push
push
std
mov
dec
pop
notb
pop
icebp
push
popa
lcall
cmpsl
icebp
out
jecxz
leave
imul
rolb
sub
cmp
dec
sbb
mov
out
hlt
push
mov
cwtl
adc
adcb
lea
mov
mov
pushf
push
jmp
dec
mov
in
rorl
rolb
clc
out
jb
xchg
pop
mov
jns
test
les
push
rorl
inc
cmpsb
sarb
mov
stc
push
inc
sub
cmp
cs
lret
and
fsub
imul
imul
enter
sub
mov
fisttps
stos
push
mov
push
mov
mov
add
decb
jae
insl
jne
cmp
push
lahf
loopne
add
dec
out
mov
cmpsl
pop
or
roll
mov
subl
push
shrl
jb,pt
fs
rclb
jb
pop
jae
dec
pusha
loope
mov
lahf
mov
or
xorps
cli
or
sti
cmp
and
outsl
call
push
jmp
jmp
into
jecxz
rorb
pop
and
repz
lock
daa
jae
lret
sub
dec
dec
ret
leave
inc
cld
cmp
pushf
frstor
pop
pop
addl
je
mov
insl
sbb
test
mov
in
popf
lret
push
addr16
sbb
and
add
mov
mov
lret
xor
adc
in
orl
push
call
loopne
shll
sbb
jne
icebp
jnp
push
mov
adc
mov
pop
rorb
sbb
cld
aad
pop
xor
jge
mov
iret
mov
push
mov
xor
or
scas
mov
adc
push
aad
jae
rclb
pushf
jl
sub
add
fldt
mov
lock
jns
mov
mov
jo
scas
add
in
ja
dec
adc
xchg
mov
out
cwtl
sbb
cltd
enter
jg
imul
sub
add
gs
ret
stos
xchg
or
or
lret
aaa
mov
and
hlt
flds
cmpb
lock
jmp
insb
push
mov
into
xchg
out
xchg
push
dec
pop
mov
mov
mov
sub
sub
pop
xor
xchg
xchg
insl
adc
imul
stc
roll
inc
repnz
outsb
sub
jecxz
adc
sbbb
fwait
addl
ficompl
adc
jbe
sub
shlb
mov
in
jmp
in
dec
or
mov
mov
jp
jae
pop
xchg
mov
dec
lods
dec
inc
scas
cmc
loope
dec
lret
shlb
insb
xchg
xchg
lods
jmp
mov
mov
sarb
add
or
test
adc
pop
rorl
add
lods
std
cmpsl
mov
sub
inc
jle
rcrl
prefetch
mov
push
mov
or
fs
push
pushl
subl
sarl
outsb
sub
sub
dec
cmp
inc
jbe
sarl
push
lcall
dec
popa
adc
fstpt
outsl
pop
add
adc
mov
xor
into
outsl
or
mov
adc
imul
jp
fadds
or
push
dec
leave
nop
imul
sub
nop
clc
orl
jmp
loope
sbb
push
aas
cmp
pop
outsl
subl
neg
jecxz
dec
push
mov
xchg
push
add
pop
repnz
test
aaa
aam
fwait
xchg
xlat
out
mov
or
adc
pop
inc
mov
mov
mov
dec
insb
mov
dec
jle
push
and
clc
cmp
stos
jmp
inc
xchg
shll
imul
mov
cmp
in
not
pop
mov
dec
pop
clc
in
faddl
mov
push
push
push
xchg
aas
jle
mov
inc
jb
dec
push
mov
dec
leave
shrd
xchg
ret
mov
pop
xlat
sub
mov
mov
xor
stc
test
push
mov
repnz
push
adc
js
cli
cwtl
dec
fstpl
jb
pop
mov
in
cmp
fcom
dec
repz
mov
fdivrl
mov
jle
dec
popf
stc
jle
pop
pop
xorb
inc
xor
lahf
add
and
fsubrs
je
pop
lcall
cwtl
add
add
popf
rep
in
jno
outsl
jne
fcomps
push
push
loope
pop
and
nopl
loopne
cwtl
ja
adc
adcl
arpl
dec
stc
int3
mov
ficompl
jp
lock
mov
mov
xchg
aas
data16
test
fbstp
insl
cmp
dec
adc
mov
cmpsl
xlat
jb
test
mov
sbb
ds
jo
dec
pushf
mov
je
dec
clc
sbb
jge
push
xlat
fistl
jp
pop
add
fisttps
cmpsb
xchg
mov
arpl
xchg
inc
sbb
int3
push
push
xor
pop
mov
xor
push
jnp
dec
push
cmp
add
push
add
mov
fwait
idiv
inc
loop
loope
xor
xchg
pop
repnz
aam
ret
xchg
xchg
mov
pop
sbb
movsb
repnz
sbb
pop
mov
adc
fstpl
and
dec
shlb
push
push
sbb
js
push
insl
mov
mov
mov
cmp
jle
pop
dec
sub
sbb
mov
or
call
adc
js
sbb
cmp
jo
xchg
cmp
rcr
xchg
shlb
cmpsl
test
aam
mov
xchg
stc
popa
jne
imul
notb
dec
xor
sub
dec
test
int3
pop
ljmp
cmp
inc
jnp
push
mov
shlb
or
fldt
push
fldt
orl
sbb
adc
push
lea
sub
add
sbb
rep
push
fwait
xchg
insb
lds
sub
xchg
fs
xlat
ja
enter
mov
xchg
imul
cli
sbb
and
in
and
sub
and
jne
pusha
std
dec
mov
xor
push
xlat
cmp
out
push
push
mov
jmp
xor
mov
clc
test
push
jbe
sub
jb
jl
cs
pop
pop
aas
and
xor
dec
cmp
cs
gs
fstl
jmp
inc
xor
cmpsb
dec
and
push
dec
sti
push
iret
xor
mov
dec
mov
sbb
cld
xchg
or
cmc
lahf
xchg
cmpsl
pop
and
xorl
sahf
movsb
iret
fmull
pushl
repz
loop
cs
push
mov
bound
cmp
cli
adc
sub
jb
daa
stos
sarl
cmp
xor
imul
and
jge
mov
xor
xchg
inc
add
xor
cld
imul
lds
pop
sahf
or
jns
arpl
das
inc
nop
and
dec
mov
out
ds
int
cmp
xor
popf
mov
pop
pop
fcomp
or
or
sbb
xor
nop
lods
xchg
push
out
cmp
rol
jae
js
popa
sub
inc
push
jno
sbb
cld
pop
aad
rcr
fs
mov
sub
lahf
dec
pop
pop
sub
inc
mov
aaa
flds
addr16
xchg
mov
dec
fs
dec
add
insb
xor
adc
sub
loop
add
lods
mov
jge
enter
in
out
shlb
mov
jb
mov
push
int3
inc
xchg
inc
mov
add
pop
movsl
xchg
pop
out
xchg
xor
pop
cltd
push
push
rclb
push
fcmovu
fbstp
inc
movsb
jle
lods
mov
mov
jge
ds
lea
test
push
or
mov
push
loopne
jecxz
mov
shll
dec
in
mov
int3
lcall
mov
ljmp
or
andl
insl
cmp
sub
add
mov
lcall
call
nop
jae
sub
lods
ss
push
mov
push
inc
not
bound
sub
dec
push
pushf
mov
cmp
dec
subl
push
jae
loopne
aam
mov
cmpsl
push
xor
inc
fnstcw
mov
or
aaa
cwtl
inc
inc
lret
cli
inc
fcomp
dec
mov
jmp
jns
ja
rcrb
ret
and
out
jl
jb
sahf
push
xor
xor
into
add
lds
out
sbb
daa
imulb
popf
insb
sbbl
mov
iret
dec
lds
ss
lret
mov
lret
aas
mov
leave
cmc
add
js
stos
and
mov
test
pop
sub
int3
dec
mov
mov
mov
fdivs
mov
xor
fadds
push
int3
cmovnp
in
jns
jmp
jg
lods
or
out
xchg
imul
or
bound
nop
roll
sbb
adc
mov
or
mov
test
movsb
popf
mov
aas
in
xor
and
in
cld
pop
sub
test
or
pop
pusha
adc
aaa
adc
cltd
cmp
pop
cmp
sbb
stc
jns
and
leave
add
daa
dec
cmp
mov
mov
add
push
xchg
xchg
sbb
jmp
xlat
repnz
cmp
pop
mov
jle
dec
popf
mov
sar
test
inc
push
das
pop
jmp
pop
cld
ja
das
jns
sub
test
mov
pop
imull
pop
jge
sub
leave
adc
sbb
cmp
sahf
mov
inc
pop
mov
and
mov
jle
pop
and
cmp
rorb
push
pop
shlb
ja
iret
test
popf
sbb
adc
enter
stos
cmp
js
lods
ss
stos
bnd
mov
lea
loop
mov
cld
pop
xchg
ds
into
fwait
lods
mov
inc
pop
adc
push
int
cmc
dec
jg
or
fcompl
xor
movsb
mov
dec
xor
outsl
xchg
sarl
fsubs
add
inc
cmp
scas
ss
jae
fildl
mov
jle
sti
std
test
aad
pop
rorb
mov
into
in
or
fidivrl
adc
mov
lret
add
pop
ds
sarl
mov
movsl
repz
lcall
aas
push
arpl
add
xchg
gs
cmp
sbb
add
das
xor
enter
push
jno
sub
push
sahf
pop
mov
icebp
loope
jnp
gs
and
mov
int3
push
pop
lds
shr
jge
dec
mov
inc
fdivp
mov
sub
test
add
cmp
leave
push
lret
mov
dec
mov
mov
sti
pmaddwd
lock
icebp
pop
jb
or
inc
fnsave
xchg
addr16
negl
pop
inc
dec
xchg
mov
cmpsl
push
arpl
aaa
inc
mov
dec
js
sarl
es
fisubrs
mov
jp
lock
popf
imul
sub
sub
fidivrl
and
mov
mov
loope
aaa
fwait
sub
sub
sahf
sbb
scas
test
imul
clc
pop
mov
inc
sbb
cs
xchg
jae
nop
sbb
mov
sbb
fistpl
fmull
out
mov
mov
xchg
fsubs
cli
cmc
pushl
insb
jbe
sbb
in
test
mov
mov
ljmp
inc
fdivrs
mov
jne
xorl
gs
test
inc
jl
add
test
sub
xor
push
sbb
push
js
push
fimuls
in
test
push
jbe
popa
xor
cltd
mov
jne
pop
push
loop
test
outsl
fwait
dec
mov
adc
push
sub
adc
loop
insb
mov
imul
adc
xchg
sarl
sub
push
clc
inc
mov
push
inc
pop
in
addr16
sbb
jns
sub
xor
mov
adc
pop
push
pop
mov
cmp
adc
jmp
icebp
jl
pop
jae
sub
jbe
out
movsb
loopne
pop
mull
add
adc
in
xchg
adc
ret
and
dec
mov
lret
fbld
mov
mov
outsb
iret
andb
pop
mov
push
inc
imul
rol
popa
pop
and
repnz
test
shr
pop
xlat
inc
lcall
inc
movsl
in
data16
xchg
cmc
and
jl
push
jmp
sbb
pusha
mov
rorl
dec
insb
iret
push
jae
cmpb
mov
leave
fimull
das
std
dec
dec
cmp
push
repz
dec
inc
ljmp
int3
pop
inc
or
mov
test
pop
popf
or
lods
out
lcall
enter
xchg
rcrb
cli
ds
pxor
scas
sbb
dec
out
loopne
adcl
cld
lock
nop
pop
adc
dec
cmp
jle
rcll
pop
insb
mov
pop
sarl
dec
sub
push
jp
add
xor
fidivrl
pop
jecxz
jecxz
sbb
push
call
xlat
insl
cli
call
mov
cld
inc
lods
xchg
jmp
movsb
sub
ficomps
jb
mov
jb
scas
popf
mov
inc
mov
or
stc
pushf
mov
cmp
ljmp
mov
cmp
sbb
push
adc
arpl
js
into
xor
mov
mov
dec
popa
sbb
aam
pop
push
arpl
mov
aaa
out
sbb
push
out
sti
inc
or
inc
push
jns
add
mov
adc
popf
lock
cmp
sub
mov
add
cltd
jb
ds
lcall
cmp
sbb
cmp
sbb
shlb
outsl
popl
out
xor
fdivrs
push
sti
and
dec
cmp
ljmp
push
es
ja
pop
mov
clc
stos
jno
mov
xchg
and
fnstenv
cld
scas
xchg
push
pop
jbe
pop
hlt
mov
popf
jmp
cmpsl
sub
xchg
inc
and
jbe
jae
mov
push
cmp
cmpsb
icebp
mov
dec
bound
mov
outsb
xor
push
sbb
je
mov
lods
daa
push
and
ljmp
mov
shrb
mov
and
inc
sahf
daa
rcrb
fs
fnstsw
ret
loopne
mov
stos
sbb
js
pop
out
push
leave
lock
stos
pusha
cmpsb
dec
andl
cmp
pop
inc
aaa
xchg
in
xchg
mov
or
loopne
dec
dec
cmc
int
fincstp
adc
dec
adc
sti
popf
lds
int
rcrl
sbb
mov
fwait
cmc
add
or
mov
or
dec
sub
lods
shlb
mov
das
and
adc
lods
addr16
ss
ret
xchg
sub
or
fdivp
xchg
sbb
xchg
mov
adc
std
xchg
mov
xchg
and
les
into
dec
pushf
or
mov
jno
xor
xchg
sub
sub
hlt
int
fsubrp
pop
dec
aas
mov
push
ljmp
pop
sarb
insl
cmp
push
cld
aaa
das
rorb
xchg
aas
fsub
or
mov
fstpt
in
pop
movsb
dec
inc
sub
jae
movsb
jge
pop
push
or
pop
push
mov
leave
dec
sbb
add
insb
pop
and
in
xor
loope
mov
clc
push
imulb
push
sarl
mov
mov
push
jne
popf
xor
mov
add
adc
pop
sub
adc
pop
or
mov
adc
ret
push
and
and
ftst
subb
cltd
xorl
popa
outsb
pop
push
adc
push
fistl
xchg
xchg
xor
out
pop
mov
mov
rol
cmp
inc
lods
pop
iret
jp
cmp
xchg
cltd
lock
jge
rorl
xchg
cmpsb
pushf
pop
outsl
in
in
xor
das
pop
clc
push
dec
out
ret
mov
aam
aam
jae
jmp
add
sbb
lds
shll
in
in
fidivrl
push
jnp
cmp
je
sbb
es
int
sub
sub
push
jmp
sub
sub
nop
pop
mov
sahf
inc
mov
stos
sbb
xor
cwtl
jbe
mov
pop
xchg
gs
out
nop
repnz
ror
lahf
les
iret
je
mov
insl
pop
mov
insl
add
mov
mov
popa
aaa
mov
cmp
xchg
sbb
fwait
aad
pop
add
into
sar
movsb
mov
mov
outsl
int
push
add
xchg
add
les
pop
sub
dec
jmp
subb
inc
pop
imul
loop
add
rol
shlb
mov
mov
scas
jg
pop
jecxz
pop
cmpb
adc
cmp
inc
fimull
enter
xchg
push
xchg
mov
mov
mov
hlt
and
daa
jl
xor
and
out
xchg
mov
cmpsb
fdivrl
enter
mov
cmp
repz
hlt
adc
lahf
je
mov
xchg
and
je
adc
in
fwait
aad
lahf
mov
jge
loop
or
push
xor
xchg
pop
or
cli
jg
fnstsw
xorl
lcall
andl
adc
in
out
subb
std
js
push
jge
mov
add
dec
repnz
xor
mov
aad
jecxz
ss
cmpsl
push
and
cmc
enter
xor
dec
ja
and
jae
xor
adc
insl
daa
add
gs
pop
cmp
mov
xor
push
outsb
popf
mov
xor
addl
adc
rcrl
mov
test
js
cwtl
push
in
sub
pop
xor
fmul
mov
dec
fidivrl
jno
rcll
and
add
mov
loop
mov
inc
xor
cs
cmp
pop
mov
cmpb
sbb
das
out
rclb
rorl
out
mov
and
inc
pop
jne
push
lahf
js
mov
std
arpl
sub
jbe
pushf
les
push
imul
movaps
push
mov
insb
jecxz
cs
hlt
mov
sbb
pop
pop
sbb
test
push
mov
hlt
jbe
pop
mov
ret
fwait
sub
sbb
lods
out
or
gs
push
xor
and
movl
mov
cli
in
push
adc
sub
dec
dec
pop
int
pop
cmpps
das
call
test
adc
mov
mov
sbb
pop
xchg
sub
rcl
ds
cld
pop
sets
mov
xchg
lods
sub
sbb
iret
dec
xor
mov
cmc
add
mov
mov
fdivl
jg
mov
adcl
xor
inc
add
aas
fistps
sub
test
icebp
andb
jns
xchg
or
mov
int
repz
inc
enter
fsts
mov
into
ss
mov
popf
or
pushf
mov
ja
ljmp
rolb
mov
or
je
test
jno
sbb
sbb
sub
addl
inc
pop
dec
pop
mov
jnp
cmp
sbb
andb
sti
pop
ret
xchg
lods
cmpsb
cmpb
outsb
andl
xchg
roll
ss
add
insb
adc
dec
jae
ja
ret
fistpl
jb
dec
cwtl
push
jle
sbb
or
push
add
pop
in
rorl
or
sub
pop
pop
inc
imul
shl
rolb
inc
push
out
daa
das
inc
mov
jl
ljmp
repz
xlat
jg
sub
dec
shl
clc
dec
andl
int
or
rcrl
popa
or
adc
addl
clc
xlat
in
inc
sbb
pop
add
sub
mov
mov
cs
push
int3
mov
out
iret
mov
js
xchg
sub
out
jmp
insl
aad
or
in
je
lds
mov
mov
pop
idiv
enter
ret
dec
rorb
ljmp
cs
test
stos
cmpsb
aam
loop
mov
outsl
sub
dec
push
lock
call
stos
hlt
in
incb
hlt
jmp
add
js
adc
dec
inc
ficoms
fsubrs
jns
add
add
iret
cld
sbb
jle
sbb
stos
lock
mov
sub
out
sbb
in
js
je
inc
jg
mov
cmp
ja
sub
sbb
aam
add
mov
mov
fsubrs
mov
mov
hlt
out
pop
test
mov
dec
lds
mov
mov
and
cltd
jl
cmc
cs
or
je
stc
jb
cmp
inc
xchg
mov
xor
mov
shl
int3
dec
hlt
sbbb
dec
int
mov
dec
fcomip
jecxz
adc
mov
fdivs
fbstp
dec
and
and
xchg
decb
and
mov
into
add
aas
xchg
or
add
imul
shll
loop
out
mov
jne
pop
dec
into
jne
ds
aam
mov
int
dec
jp
gs
pop
sub
push
xchg
xchg
adc
outsb
mov
push
cld
idiv
ja
dec
in
jle
mov
sbb
pop
push
mov
stos
cmp
in
or
and
push
sub
icebp
mov
scas
rcr
in
orl
mov
and
loope
mov
cmpsb
or
pop
mov
adc
mov
lcall
rcrb
dec
imul
and
outsb
imul
push
iret
or
insb
add
sti
lods
fidivrl
ja
test
popl
lahf
iret
adc
xor
pop
xchg
decb
or
push
dec
lods
lock
mov
pop
push
jnp
inc
leave
aas
es
mov
pop
shrl
sbb
int3
or
pop
cmp
aaa
cmpsl
mov
fsubl
jle
cli
and
mov
daa
out
xchg
inc
push
aam
sbb
rcll
lret
inc
push
or
adc
repz
stos
lods
fstl
mov
pop
and
xor
mov
jp
sbb
out
mov
outsb
es
fisttpll
pushl
sbb
fdiv
pop
ds
out
adc
inc
int3
pop
ret
adc
shrb
sub
scas
cmp
mov
ud0
int
sub
aaa
ror
outsl
sbb
shr
imul
lds
rcrl
std
push
jne
shlb
push
sub
arpl
dec
mov
faddp
add
inc
sbb
out
push
mov
mov
bound
cmp
das
xchg
xor
out
sbb
sbb
add
adc
arpl
jb
adc
dec
das
cmpsl
add
pop
arpl
mov
and
les
lret
push
lods
add
xor
pop
adc
jg
cwtl
mov
inc
aad
fs
xor
out
xlat
pusha
pusha
data16
mov
idiv
push
mov
mov
outsl
mov
xor
pop
cmc
shll
aad
push
mov
cmp
aas
mov
mov
pop
incb
inc
inc
testl
es
jmp
stos
dec
pop
xlat
mov
and
cmpsl
leave
aam
xor
sub
nop
divl
adc
cmp
cld
outsb
mov
and
cmc
push
pop
push
pop
push
inc
mov
test
cmc
lret
adc
enter
cmp
lods
lahf
sub
int
pop
adc
arpl
fistl
xlat
cmp
rcll
pusha
push
sbb
and
stos
ret
xor
rcll
popa
ret
pop
or
insl
ja
aas
outsl
sub
cli
mov
je
gs
ljmp
das
dec
data16
mov
xor
sbbl
data16
dec
push
sub
cli
adc
adc
test
sbb
cmpsl
jns
jp
mov
stos
dec
add
push
bound
dec
cmp
sbb
imul
mov
sub
je
dec
sub
scas
cmpl
lret
mov
mov
mov
popf
xorl
xchg
rcrl
jg
cs
out
dec
jae
push
rorb
aas
pop
stos
lock
movl
adc
sahf
pop
int
sub
mov
lea
es
or
enter
or
stos
add
push
jns
mov
mov
jae
adc
mov
jmp
fs
jecxz
inc
inc
and
pop
mov
aas
rclb
fs
hlt
mov
pushf
xor
ret
mov
inc
sub
mov
push
sub
push
xchg
hlt
pop
fcmovb
test
stos
mov
jns
mov
fimuls
xchg
pop
dec
shlb
jle
sbb
ljmp
cmpsl
mov
je
pop
dec
inc
mov
push
stc
pop
lds
ljmp
dec
es
sub
imul
mov
cli
inc
cmc
iret
xchg
push
js
push
mov
cld
int
mov
xchg
loope
mov
sti
mov
imul
or
cmp
mov
push
dec
jb
hlt
mov
fsts
pop
sbb
xor
jle
clc
mov
pusha
aam
mov
hlt
dec
jge
mov
push
xchg
mov
cld
xorl
mov
lds
stc
add
dec
enter
inc
mov
mov
xorb
int
inc
sbb
pop
les
mov
stc
dec
decl
stos
jbe
aad
pop
cmp
out
out
and
movsb
xchg
mov
imull
out
das
push
in
jle
aas
sahf
repz
out
mov
cmp
shll
adc
in
mov
fisubrl
ja
cli
jle
xlat
sar
loop
pusha
cmp
mov
mov
es
mov
push
je
xchg
pop
xor
int
dec
addr16
inc
les
jns
test
sti
les
mov
test
bound
xchg
sarl
jmp
inc
mov
inc
ja
lcall
test
nop
pop
outsb
cmp
test
aas
xchg
or
dec
inc
add
arpl
mov
xlat
and
mov
mov
ljmp
mov
adc
subb
leave
mov
scas
or
xchg
push
add
jp
dec
ds
mov
dec
cwtl
dec
inc
jb
shlb
add
sbb
mov
bswap
push
cmp
jge
dec
sub
adc
imul
es
jmp
daa
push
rcll
and
dec
sub
sbb
popf
int3
cmc
int
call
or
ljmp
mov
fcomi
push
push
jle
cmp
add
inc
push
and
sub
fdivrl
jge
adc
into
test
loop
ds
pop
cmpsb
xchg
cmp
test
int3
pop
andl
repz
out
popf
sarb
es
mov
mov
adc
cli
push
mov
jns
lds
outsl
testb
lcall
sti
insb
and
inc
mov
dec
pusha
aam
jg
popf
mov
mov
inc
xchg
pop
push
es
xlat
mov
and
and
and
test
pushf
fwait
sbb
push
movsl
add
lcall
push
xchg
ficomps
mov
gs
push
fcom
lcall
xor
cli
into
loop
sti
and
sarl
inc
add
sarb
rcll
int3
pop
nop
movsl
repz
cld
ljmp
incb
mov
mov
and
bound
subl
sub
xchg
inc
outsb
pushf
push
int
pop
mov
repnz
pop
inc
in
fiadds
data16
fldt
cmpb
lret
js
lods
jp
xchg
push
adc
xchg
and
jmp
inc
mov
lcall
add
add
mov
std
mov
jo
mov
xlat
ret
jns
mov
movsb
ss
jecxz
cmp
enter
dec
mov
push
loope
push
repnz
mov
inc
inc
mov
aaa
sbb
adc
lret
cmp
xor
shl
cmp
sahf
sub
test
add
addr16
jnp
dec
sti
movsl
aam
in
sbb
pop
dec
icebp
push
stc
inc
in
jp
inc
in
adcl
std
fnstsw
mov
push
inc
std
sbb
jne
mov
and
shll
rorl
jns
incb
pop
dec
pop
arpl
adc
js
aad
jnp
mov
arpl
out
aas
cmpsb
add
adc
cmpl
js
out
pop
xor
inc
cld
das
and
jmp
push
inc
push
lods
int
aaa
push
dec
cmp
ret
mov
in
imul
inc
shll
mov
push
jb
jnp
inc
mov
out
addl
push
ret
cmp
cmp
in
mov
mov
insl
xchg
cmp
call
lock
sbbb
push
dec
adc
mov
cmp
outsl
push
ret
shlb
in
out
jle
push
clc
pop
enter
xchg
ljmp
jle
scas
cli
cltd
add
and
sub
push
lds
sub
int3
loopne
jbe
dec
jo
push
out
adc
push
addr16
lea
mov
and
pop
jge
adc
rclb
call
cmpsl
mov
adc
xorl
jno
jb
sbb
or
cmp
stos
mov
push
xchg
xor
push
cmp
clc
push
insl
stos
sub
jecxz
or
imul
loope
test
inc
cmpsb
fcoms
and
es
cmpsl
fcmovnb
mov
xchg
xor
rcll
shrl
jmp
ret
stos
push
sub
mov
pop
inc
and
sti
insl
sbb
mov
or
call
out
mov
and
cmp
xor
insb
addr16
mov
xchg
inc
int3
adc
fbld
adc
push
push
push
sbb
xor
xlat
xchg
out
cmp
std
inc
mov
jb
push
pop
inc
sub
push
jnp
sub
mov
in
mov
outsl
add
push
xchg
push
aad
mov
sbb
push
imul
dec
jge
pop
popa
fsts
imul
inc
mov
xor
imul
add
es
aaa
mul
shlb
scas
popa
mov
mov
mov
pop
out
jmp
or
jb
mov
cmp
fnsave
jb
test
mov
cld
scas
xchg
xchg
jne
xor
xchg
jp
testb
faddl
loope
xor
mov
imul
push
mov
or
jb
mov
adc
pop
xchg
push
pop
test
ljmp
movsb
enter
test
in
and
mov
inc
adc
sub
iret
jb
mov
jne
inc
xchg
bound
mov
cmp
inc
cmp
lock
lret
jg
mov
mov
out
mov
dec
clc
mov
enter
out
scas
sub
sub
arpl
scas
ret
outsl
dec
aas
and
add
loopne
xchg
mov
dec
outsb
out
or
xor
jg
stos
in
out
addr16
stc
cltd
dec
mov
cmpsb
or
pusha
sub
sub
add
bound
sbb
add
xchg
xor
sahf
ret
sub
les
mov
jl
cmp
sbb
jb
cmpsb
insb
cmc
int
ret
mov
repz
xor
lcall
jmp
int
adc
adc
movsb
xor
inc
dec
and
out
xchg
or
add
mov
lea
shlb
add
idivl
movsb
imul
out
lock
in
loope
cmpsl
or
into
cltd
cmc
adc
js
dec
sbb
xor
xor
cmc
mov
mov
xor
inc
lods
ret
notb
in
sbb
test
mov
in
leave
pop
call
outsl
into
and
outsl
stos
xlat
leave
lea
or
mov
test
cmpsb
sub
pop
pop
icebp
mov
sub
outsb
add
cs
fs
cmp
nopl
push
push
cmc
pop
and
popa
mov
sbb
mov
inc
mov
and
lds
aaa
dec
lock
dec
test
mov
fcmovnbe
xchg
sub
frstor
lods
clc
add
das
cwtl
cmpsb
pop
sahf
out
sub
mov
and
out
lds
insb
inc
jge
adc
out
pop
icebp
sbb
push
mov
incl
mov
das
dec
dec
jle
mov
or
repz
pop
lods
dec
sub
push
into
xchg
cmp
das
lods
xor
inc
sahf
clc
push
xor
jno
test
sti
lret
dec
cmc
in
outsl
je
xchg
test
je
push
mov
xor
inc
repz
pop
dec
pop
pushf
pusha
sbb
mov
movb
xor
jmp
jge
xor
jne
js
xor
mov
cld
xchg
jb
mov
jno
cltd
mov
mov
xchg
sahf
mov
ficompl
lds
inc
mov
sbb
xorl
rcrb
mov
ss
xchg
mov
pop
add
sub
sbb
fisttps
lea
mov
andl
dec
or
imull
insl
lret
jo
and
adc
test
in
push
pop
mov
mov
shll
pop
je
adc
jne
mov
leave
dec
daa
mov
aam
fcmovnb
in
rolb
mov
ljmp
js
seta
lock
shl
lahf
lret
popf
pushf
imul
filds
addr16
aam
das
sbb
cmp
rep
xchg
lock
pop
dec
push
jp
les
mul
sahf
pop
pop
scas
lahf
ja
xchg
sbb
xchg
sahf
rolb
dec
out
fistpll
insl
idivb
cli
test
add
cmp
stos
into
dec
mov
fidivrl
fdivr
cltd
cmp
subb
enter
fisubrl
mov
imul
stc
pop
jae
adc
fld
cld
gs
sub
dec
cli
mov
mov
and
loope
jns
mov
adc
js
cmp
xchg
xchg
pop
or
test
cmp
ror
leave
dec
xchg
lds
out
out
int
out
xor
and
jp
andb
push
dec
and
pop
out
fnsave
bound
jo
xchg
jae
sub
cli
cmp
fldl
shrl
mov
aas
sarl
jge
pop
imul
dec
xor
scas
pushf
popf
ss
jae
andb
outsl
lods
push
call
mov
pop
or
xchg
and
sahf
negb
stc
pop
js
je
fsubs
in
add
mov
jns
sbb
hlt
lock
cmp
in
fs
dec
scas
sbb
imul
in
icebp
xchg
jmp
push
push
cmp
cs
rep
ljmp
fs
ljmp
cmc
xor
insl
out
sub
test
inc
cmpsb
adc
add
fadds
inc
sbb
lahf
lahf
cmp
xor
cltd
popf
xchg
xor
mov
in
cmp
ds
sub
add
pop
cli
xchg
cltd
loopne
jp
and
push
stos
lret
sbb
call
clc
jmp
fisubrl
lds
mov
mov
jo
jbe
rcll
jnp
inc
call
mov
daa
imul
inc
stos
sub
push
xchg
pusha
xchg
and
jno
xor
xor
mov
inc
daa
orb
movl
jns
cmp
rorb
sbb
push
cmpsl
pop
or
push
inc
mov
mov
sbbb
inc
and
shll
pop
daa
jl
stc
mov
mov
aaa
push
sub
mov
push
and
xchg
lahf
fwait
rcl
pop
sbb
and
add
adc
mov
xchg
pmulhuw
cmpsl
dec
inc
shlb
test
hlt
data16
cmp
and
or
push
das
loopne
adc
push
xor
subb
xorl
pop
cmp
and
push
stos
adc
jecxz
push
mov
pop
xchg
insl
mov
loop
std
test
arpl
dec
mov
dec
int3
mov
das
sub
ljmp
sbb
dec
inc
xor
test
scas
subb
js
jmp
cmp
sahf
lock
mov
in
adc
dec
stc
ja
stos
cmp
in
cmpsb
pop
pop
nop
push
push
jecxz
or
scas
or
and
clc
cmp
jp
lock
sub
push
faddl
int
call
test
dec
lods
into
mov
pop
push
ret
pusha
jo
sbb
cld
lea
jne
lock
push
jecxz
pop
inc
cmpsb
xor
mov
pusha
mov
in
cld
sub
sahf
andb
xchg
fstl
jg
pop
sub
push
mov
push
push
out
dec
inc
inc
lahf
mov
bound
popa
dec
jo
xchg
xlat
lock
call
std
and
aaa
mov
mov
mov
jne
out
into
cmpsb
popf
lods
mov
clc
inc
dec
jp
cltd
mov
xor
add
xor
push
cmp
xor
xor
mov
imull
push
test
jl
xchg
sub
sbb
inc
sbb
lcall
rcll
or
mov
ds
or
cmpsb
mov
xchg
pop
cmp
shrl
inc
test
lret
inc
xor
xor
rcrb
es
pusha
popf
movsb
in
jmp
dec
add
push
push
mov
enter
je
xchg
mov
mov
stos
mov
dec
pop
dec
inc
mov
xchg
mov
or
xchg
lods
insl
jns
fisttps
jle
xchg
movl
fsubr
push
mov
call
push
les
xor
mov
pop
mov
jle
test
xor
int3
movsl
mov
negl
pop
fstpl
inc
xchg
test
and
aad
jecxz
dec
out
loopne
out
data16
pop
inc
stc
inc
jmp
leave
inc
push
sarb
mov
mov
mov
mov
loop
mov
icebp
push
sub
sahf
enter
test
jns
rolb
cmp
xor
rorb
and
test
rcl
sbb
rorl
pushf
push
xchg
inc
xlat
sub
xchg
out
stos
enter
mov
dec
jl
insl
pop
es
inc
jp
test
sbb
fwait
lcall
stos
sahf
dec
jge
pusha
mov
movsb
fstpl
inc
push
xor
data16
or
es
pand
cld
jne
pushl
jmp
jae
xlat
ss
iret
fisubrl
lods
cld
out
jecxz
das
sbbl
fdivs
fs
add
bound
mov
mov
mov
fwait
enter
dec
jecxz
in
icebp
dec
stos
lods
jnp
out
sbb
mov
mov
clc
mov
lods
cltd
popa
sbb
ret
insl
sbb
push
cwtl
pop
shlb
adc
popa
pop
inc
je
xchg
inc
fdivrl
sub
loope
lods
cmpsb
stos
xchg
cmp
push
rcl
and
inc
xchg
aam
xchg
outsb
adc
icebp
mov
cmp
enter
insl
mov
mov
inc
rolb
pop
imulb
repnz
mov
push
int
bound
inc
xchg
cli
mov
gs
pusha
ficompl
mov
and
add
aaa
jbe
stos
dec
sub
es
repnz
pusha
dec
xchg
es
push
mov
ljmp
add
mov
inc
xacquire
fcomps
mov
add
mov
inc
iret
jle
and
test
sub
xor
das
les
fildll
jnp
mov
aaa
incb
loopne
pop
test
push
push
adc
xor
cld
adc
in
in
aad
xor
leave
xchg
jge
jecxz
jbe
mov
push
in
arpl
dec
mov
test
adc
inc
rcrl
or
outsl
add
mov
cmpsl
mov
mov
pusha
in
idivb
adc
and
int3
adc
outsb
mov
cwtl
cmp
std
inc
cld
mov
ds
mov
icebp
imul
cwtl
dec
mov
add
dec
nop
insb
cmpb
add
shll
mov
decl
rcpps
fucomip
icebp
add
and
and
push
cmpsl
sub
jecxz
ss
test
xchg
aaa
aam
mov
and
sbb
pop
int
pop
mov
pop
test
or
cld
addr16
scas
push
cmc
and
fcmovb
cmpsb
enter
loop
xchg
mov
das
add
sbbb
jo
mov
push
movsl
inc
or
mov
inc
cmp
out
in
jmp
inc
push
fidivrl
pop
das
xor
lds
or
lret
cli
sahf
ret
bound
out
jno
mov
mov
test
mov
pop
shrl
dec
loope
push
loop
rcrb
fidivrl
mov
mov
push
aaa
out
mov
mov
pop
aaa
mov
pop
cmpsl
xor
inc
fstl
lret
rcl
pusha
mov
inc
insl
rclb
or
pop
fsubl
jo
add
rolb
testb
lcall
out
jle
push
js
xchg
sahf
in
add
mov
cmc
std
mov
popf
mov
std
xor
mov
lds
mov
push
je
loop
out
into
pop
xchg
pop
mov
aam
in
fcmovnu
fistps
orb
push
stc
sbb
xor
or
rcl
pop
mov
ret
daa
mov
mov
lea
mov
push
sub
pop
scas
out
sahf
add
pop
cli
jbe
mov
jo
and
inc
sub
and
dec
sbb
xor
std
dec
push
es
ja
pusha
jno
out
ss
sbb
leave
iret
or
std
dec
mov
stc
arpl
or
rorb
rolb
out
daa
arpl
imulb
lret
mov
sbb
clc
aas
cs
andb
sub
ret
sbb
test
ror
add
inc
mov
lods
roll
push
imul
pop
in
psubusw
pop
sub
int
std
pop
and
jmp
arpl
pop
adc
jecxz
push
mov
and
shll
add
xor
inc
cltd
sahf
push
dec
push
cmp
inc
pushl
jno
sub
cmp
ja
jle
mov
pop
dec
xchg
mov
roll
shll
in
pop
hlt
subl
push
xlat
fldcw
sub
or
fwait
mov
and
icebp
push
xor
scas
pop
or
and
or
xor
in
insl
inc
insb
mov
es
clc
push
xor
rol
add
mov
outsl
clc
xchg
jns
adc
addr16
xor
ja
pushf
outsl
mov
sub
out
or
xchg
daa
mov
int
fnstenv
lods
add
xchg
xchg
scas
push
xor
xchg
sub
cli
jbe
pop
mov
loopne
cmp
sbb
cmp
push
push
mov
jns
out
ds
ficoml
lahf
dec
cmp
pop
pop
pop
cltd
sub
mov
aam
cmp
xchg
lret
xchg
aaa
pop
lds
xchg
or
push
push
add
push
cmp
mov
adcl
call
jne
cmc
leave
movsb
inc
inc
add
ret
ljmp
out
adc
fnsave
pushf
inc
dec
mov
aaa
or
sub
pop
fisttps
repz
mov
out
aad
sbbl
mov
or
sbb
out
cld
cld
mov
fwait
int3
dec
int3
mov
mov
repnz
nop
jmp
bound
je
rcl
inc
negb
in
push
pop
mov
insl
sbb
push
test
js
push
fisubl
in
ret
mov
inc
mov
or
dec
inc
or
leave
ja
inc
addr16
arpl
fwait
or
adc
jmp
das
jne
xor
add
pop
nop
stc
dec
or
cmpsl
arpl
mov
lock
xchg
movsb
fstpt
lea
aam
jb
mov
decl
jp
pop
vcomisd
gs
cmp
xlat
jns
dec
imul
movsl
dec
dec
or
pop
mov
ja
mov
test
xchg
sub
dec
data16
cmp
pop
test
leave
mov
mov
lret
rcrb
stc
lret
fidivs
lcall
int
xchg
mov
inc
xor
imul
mov
or
xchg
subl
push
jno
mov
mov
mul
insb
dec
loope
scas
fisubrl
jle
mov
jmp
sarb
sbb
inc
js
je
xor
aaa
mov
or
testb
in
push
hlt
pop
mov
add
cmp
xchg
inc
pop
filds
testl
cmp
ret
dec
mov
fcompl
lods
fwait
es
jg
inc
dec
jp
jae
or
and
loop
xor
jmp
lret
data16
ja
je
xor
jno
sbb
dec
rcrl
sbb
data16
call
mov
std
mov
pop
mov
sub
and
mov
mov
frstor
push
mov
xorb
out
loopne
icebp
dec
mov
fisttpl
jne
add
mov
cs
push
mov
sub
add
jbe
clc
inc
fdivrs
lock
test
fbstp
pop
inc
jmp
lock
mov
stos
loopne
imul
mov
daa
inc
mov
cmpsb
inc
mov
xchg
xchg
or
inc
iret
stos
adc
push
lahf
jb
test
dec
movsb
fstl
pop
or
push
dec
daa
sbb
pushf
icebp
cmp
rcrb
xchg
sbb
dec
fsub
mov
jbe
testb
push
ss
xor
mov
loopne
out
xor
movsb
in
lods
add
fwait
and
fsubl
mov
dec
dec
mov
push
jae
aas
pop
les
push
mov
loop
ficoml
test
shlb
push
lds
pop
test
gs
adc
xor
stc
pusha
mov
shll
inc
jge
test
in
fldl
jmp
movsb
jmp
incl
iret
xor
mov
or
shll
roll
sbb
sti
or
shl
mov
out
shl
add
in
xchg
and
xlat
add
pop
push
fistpll
sbb
lea
ja
rclb
popf
mulb
je
mov
mov
in
test
jb
pop
out
xchg
test
mov
sbb
ja
mov
ja
or
push
fidivrl
mulb
cmp
sahf
arpl
mov
out
in
je
mov
xchg
cld
xchg
movsl
push
adc
push
int
add
or
mov
lret
inc
mov
xlat
xor
stos
jb
xchg
xor
inc
xchg
xchg
clc
out
fisttpll
cmp
and
cli
aad
nop
add
pop
or
lcall
mov
inc
add
js
mov
outsb
pop
int3
popa
idivb
lret
inc
cmc
jge
in
adc
leave
popf
js
pop
pop
int3
lcall
and
movsw
daa
mov
insb
mov
sbb
repnz
cmp
lods
mov
psubd
hlt
mov
cmc
sub
gs
rep
sbb
div
ds
jno
jne
xlat
pop
jge
cmp
inc
in
enter
mov
jno
xchg
push
and
xchg
xchg
repz
decb
jl
or
call
pop
loop
xor
xchg
test
mov
mov
cmc
jno
push
arpl
cmpsl
inc
or
mov
xchg
jmp
jae
mov
out
cli
cmp
add
mov
cltd
out
xchg
lds
add
inc
je
fwait
cmp
outsl
add
clc
mov
into
pop
fsubrl
cmp
mov
outsb
nop
xor
mov
cmp
jp
pusha
lods
add
cmp
aas
mov
xchg
mov
push
inc
aaa
pushf
sbb
cld
xor
pop
data16
divb
push
rorb
xor
xor
ja
jbe
cmp
add
cmpsl
add
cmp
repz
es
mov
rcll
test
mov
aaa
lock
fisubs
aaa
fwait
sub
cmpsb
sti
xchg
or
or
testl
in
and
mov
and
in
pop
imul
mov
fiaddl
frstor
push
sbb
jecxz
lods
push
fcmove
sbb
adc
add
push
ss
xchg
addr16
popf
not
adc
imul
xchg
fidivl
orl
jb
stos
repnz
aas
xchg
pop
jnp
loope
or
push
xchg
loop
aas
fistps
fidivrl
aaa
nop
cmpsb
inc
xchg
jmp
shrb
movsl
mov
arpl
outsb
movsb
rorl
jge
js
sbbl
xlat
repz
mov
sbb
int
stos
loop
push
outsb
sbbl
jnp
adc
dec
mov
mov
pop
cmp
fstpt
mov
and
cmp
mov
jp
sbbb
pop
or
int
stos
aas
enter
rorb
sbb
inc
push
stos
jns
fists
loope
lret
loopne
aad
pushf
out
push
out
cmpxchg
cmp
test
adc
movsl
inc
lds
scas
jge
das
mov
add
loope
lock
mov
inc
imul
dec
inc
sub
cmp
cwtl
push
jno
inc
roll
or
rcrl
subl
outsl
scas
inc
or
sub
jae
leave
cmp
loope
test
cmp
lods
xchg
add
lods
sub
js
es
push
push
mull
mov
jo
jmp
dec
mov
xor
mov
pop
mov
pushf
push
into
mov
jno
fldcw
mov
in
nop
add
jp
mov
movsl
adc
cltd
pop
in
dec
and
push
inc
movsb
jno
cmpsl
push
xchg
push
dec
orl
test
insl
in
out
sbb
cmpb
sbb
subl
lahf
icebp
daa
lea
lcall
mov
dec
inc
dec
sbb
shlb
test
mov
mov
leave
xchg
addl
movsb
pushf
push
mov
dec
sbb
int3
mov
inc
or
js
and
sbb
call
lock
in
cmpsb
xchg
std
test
add
sbb
aam
inc
ss
fstpl
push
mov
mov
popa
idiv
add
sub
repz
push
xor
lock
sbb
xchg
in
sbb
jae
bound
cmp
jnp
repz
testl
sbb
inc
jns
enter
insb
cmpsl
jecxz
mov
and
cmc
push
cmp
cltd
mov
pop
je
es
mov
aam
or
mov
mov
jecxz
in
lret
push
repz
inc
push
fstl
dec
and
push
push
fsts
sbb
and
sbb
ficompl
daa
dec
xchg
hlt
inc
cmp
fisubl
outsb
mov
inc
rcrb
inc
push
fwait
mov
mov
or
mov
jb
inc
dec
or
mov
jne
mov
js
js
inc
push
lcall
sub
xor
jns
push
and
fiadds
lret
clc
mov
cmp
cmpsb
mov
inc
adc
rolb
and
sti
mov
sarb
ja
int3
push
sbb
test
cmpsl
push
push
pop
inc
lods
push
mov
gs
sbb
int3
fld
dec
jno
ret
js
rol
cmc
mov
shlb
cwtl
lea
jle
pop
test
ds
xchg
xchg
cli
push
test
or
hlt
lods
std
sub
or
int
cmpsb
mov
loop
push
popa
mov
out
call
dec
dec
xchg
shll
sahf
std
aad
inc
jns
xchg
sub
lods
add
in
dec
aam
jnp
cmpl
pusha
and
pop
push
mov
and
sti
or
aad
mov
mov
cmpb
sbb
adc
int3
outsb
mov
adcl
and
stos
xor
push
addr16
int3
mov
pop
and
dec
pop
lret
into
sub
in
cs
cmpsl
sub
cmp
icebp
cmp
jecxz
mov
pop
jb
lret
test
dec
loope
nop
fldl
cmp
test
shr
sub
add
sbb
mov
cld
push
mov
cmp
inc
cmp
dec
adc
push
mov
xor
out
or
mov
cli
arpl
leave
mov
loop
inc
popf
ret
xchg
jo
or
aaa
inc
in
jg
add
push
sub
insl
lods
imul
lcall
fdivrl
sub
enter
mov
mov
jnp
push
sahf
add
arpl
inc
push
andb
mov
lods
mov
or
fistps
cs
stos
mov
movsb
outsl
mov
test
popf
sub
mov
inc
pop
cwtl
subl
jo
das
scas
rorl
mov
rolb
pop
cmp
jp
inc
stc
inc
xchg
dec
mov
sub
jmp
adc
jno
out
xchg
gs
add
cmp
mov
push
negb
cwtl
data16
xchg
add
in
pop
fcom
pushf
fwait
lods
pusha
data16
mov
insb
nop
js
add
mov
mov
lcall
cwtl
add
scas
or
push
je
in
and
fnsave
xor
sbb
pop
lahf
push
test
xor
das
or
fcoml
sub
push
addr16
fnstsw
stos
fistps
in
loopne
mov
lret
out
cs
mov
sbb
lock
cmp
adc
mul
into
lea
and
mov
je
in
dec
test
test
stos
test
push
and
lret
or
bound
dec
or
xor
adc
and
push
sbb
lods
sbb
es
xor
lock
popf
mov
xchg
add
in
arpl
sub
pop
imul
mov
imul
fsubrl
adc
xchg
fildll
lahf
loop
addr16
or
add
decl
mov
dec
cli
jae
bound
fsubl
xor
push
imul
or
jl
faddl
mov
pop
cmp
dec
stc
pop
mov
movsl
pop
shlb
jg
jb
jle
xor
repz
mov
sub
insb
fimuls
lret
or
or
adc
pop
and
mov
mov
arpl
pop
mov
cmpsl
ds
and
insl
pop
mov
push
sub
bound
test
sub
xchg
push
scas
sub
mov
sti
decl
xchg
out
sub
push
jecxz
shlb
add
pop
or
add
or
popf
push
mov
sbb
cmpsl
xorb
mov
adcl
jnp
outsb
fiadds
dec
fs
ret
dec
cmp
add
pop
mov
call
pop
mov
imul
xlat
imul
sub
dec
jbe
scas
xor
das
mov
pop
cmp
push
orb
pusha
jp
out
adc
xor
mov
pushf
push
fstl
xchg
icebp
lock
mov
pop
fdiv
stos
jne
in
lods
push
add
push
mov
das
or
mov
loope
iret
xchg
inc
dec
dec
fcmovnbe
cli
inc
ljmp
jnp
sti
aam
inc
int3
punpckldq
mov
inc
lea
js
jo
add
mov
sbb
mov
out
mov
pop
popf
pusha
movsl
add
fmul
gs
test
sbb
cmp
push
std
pop
cltd
push
ficoms
aas
lds
adcb
sahf
push
ss
movsl
mov
cltd
push
out
enter
adc
mov
and
inc
inc
cltd
or
aad
shl
jmp
inc
push
lods
dec
imul
and
or
lods
dec
jge
fsubr
sbb
call
xor
mov
cmp
sbb
jb
cwtl
and
fsubs
and
push
mov
mov
and
out
out
repz
fldenv
sub
in
fdivl
mov
popf
ljmp
push
mov
outsl
or
dec
sub
lods
push
ret
cmp
xor
jle
mov
xchg
xchg
mov
fldl
mov
jl
icebp
movl
stc
into
mov
adc
rol
inc
movsb
push
mov
cmpl
sahf
inc
push
jnp
inc
cmpsb
cs
ret
add
adc
push
jecxz
sub
sub
gs
shlb
xor
inc
pop
xorb
dec
push
rcl
movsb
lock
mov
xor
cmpsb
xor
and
mov
enter
les
push
add
loop
adc
lcall
sarb
cwtl
fdivrs
ljmp
inc
inc
das
or
lret
call
mov
inc
loopne
and
sbb
int3
jo
pop
push
in
je
fsubl
mov
sub
adc
lea
sub
sub
jmp
lods
add
dec
push
adc
jp
mov
push
fsts
jno
jae
int3
enter
push
jnp
out
dec
xchg
cwtl
pop
loopne
jecxz
aaa
xchg
push
and
dec
mov
xchg
shll
iret
and
sub
call
sub
adc
daa
les
xor
dec
jecxz
mov
or
nop
mov
sub
xchg
aaa
pop
push
fnstsw
and
xor
cmp
cld
dec
mov
lahf
adc
mov
fldt
jg
add
clc
out
int
mov
das
mov
test
jns
mov
push
pop
mov
loope
jbe
jns
sub
push
adc
ret
push
jno
mov
test
int
int
je
dec
cmp
mov
jbe
jmp
jp
loopne
xchg
inc
movl
mov
pop
fwait
mov
mov
mov
mov
jl
jo
imul
int3
stos
xchg
rol
sub
mov
mov
mov
adc
fsts
lahf
xor
ja
outsb
pop
mov
dec
je
xor
mov
adc
sub
jnp
push
gs
add
inc
xchg
push
jne
push
in
insb
pushf
cmpsb
inc
aad
mov
shrl
les
push
sbb
hlt
lret
and
mull
cmpsl
and
ja
cmp
xchg
push
ljmp
gs
cmp
add
sbb
mull
or
jecxz
inc
and
je
int3
shr
ja
je
and
fincstp
fs
mov
hlt
pop
mov
popf
jbe
cmp
pop
movsb
fstps
xchg
inc
repnz
or
jmp
jb
mov
push
or
incl
lcall
push
dec
in
iret
mov
test
js
jbe
mov
mov
mov
call
dec
adc
mov
mov
xchg
sub
and
xor
push
subl
loop
repz
mov
jae
and
test
pop
data16
pop
mov
adc
xchg
rorl
sub
cmpsb
rorb
add
mov
or
or
mov
int
mov
jbe
inc
cmp
aas
in
scas
icebp
jo
dec
test
cmpsb
loop
jb
push
adc
sub
idivb
test
sbb
pusha
push
outsl
shll
add
mov
inc
shrl
dec
lock
push
add
xchg
xchg
lahf
mov
or
repnz
cmp
sbbb
add
mov
les
mov
xchg
cmpb
mov
push
cmp
mov
pushw
push
arpl
fadd
push
and
jns
push
pop
es
sub
addr16
dec
fwait
jl
sub
pushf
mov
jmp
and
xchg
icebp
dec
mov
stc
pop
and
js
jns
loope
xchg
pop
and
sbb
add
clc
xchg
lds
sti
mov
test
jecxz
out
and
ficompl
outsl
xchg
sub
or
addr16
ds
shrl
mov
lcall
lahf
call
and
cmp
and
lock
lock
mov
lods
inc
mov
dec
imul
ss
xchg
pop
pop
jecxz
jge
out
es
add
dec
shlb
into
adc
aaa
mov
aas
sbb
xchg
cmp
mov
gs
inc
xor
and
negb
dec
sbb
dec
lcall
loopne
mov
int
cmp
test
xchg
adc
nop
push
ja
fadds
push
lds
inc
push
sahf
push
cmp
jle
and
jo
mov
mov
mov
xor
sbb
xor
clc
daa
lea
mov
inc
gs
into
rclb
pop
popa
or
mov
cmpsl
sub
psrld
pushf
pusha
call
arpl
mov
sub
mov
sbb
cmp
lods
push
decl
stos
mov
sbb
dec
or
sbb
mov
jne
loope
xchg
push
jo
mov
rorb
test
andl
ficoml
test
enter
push
js
fisttps
and
sub
sbb
xchg
scas
fsts
movsl
mov
inc
mov
add
jp
sub
mov
repz
adc
add
and
push
je
fwait
mov
shlb
push
lcall
arpl
cmc
jno
mov
inc
cmp
and
jno
pop
xchg
push
mov
cmp
mov
adc
cli
add
push
mov
stos
mov
jg
and
xor
popf
jnp
lods
xor
fwait
push
jp,pn
xchg
cmpsb
mov
pop
mov
out
and
sahf
push
sub
fsts
jb
stos
out
lret
mov
inc
mov
push
test
sbb
lea
or
jl
and
xor
adc
mov
lret
push
pop
dec
fidivrl
jb
loop
outsb
sti
push
stc
dec
mov
push
in
daa
push
jecxz
mov
push
mov
imul
mov
or
lret
xlat
jle
push
addl
pop
dec
or
pushf
test
clc
adc
jecxz
repnz
dec
popa
mov
pop
add
adc
sbbb
or
dec
dec
and
cmovns
cltd
stc
mov
and
leave
test
fadd
std
pop
int3
pop
jl
and
mov
jmp
adc
inc
out
inc
sbb
mov
adc
roll
push
mov
fcoms
je
pop
mov
xchg
dec
cmp
fstpl
aas
orb
jb
test
iret
or
fistl
subb
xchg
jecxz
inc
ja
sbb
call
jo
sbb
mov
push
and
cwtl
jg
or
push
cmpsb
nop
loopne
fbstp
hlt
roll
pop
dec
cmpsl
mov
lahf
lret
sti
dec
jecxz
aad
jbe
cld
mov
push
mov
jle
out
repz
pop
loop
jge
movsb
and
adc
ds
out
lds
dec
fs
or
call
outsb
sbb
decl
cld
push
pop
cmp
add
pop
jmp
pusha
pushf
mov
into
setnp
jb
lret
adc
bound
push
xlat
mov
jmp
arpl
sub
sub
fstpt
popa
xchg
arpl
sub
ja
push
outsl
xor
xor
loop
xor
pop
jmp
xchg
and
stos
icebp
xor
test
adc
scas
test
int3
mov
nop
xor
rclb
loopne
xchg
inc
iret
sahf
pop
add
sbb
shrl
inc
repz
aam
cmc
xor
mov
lahf
js
stc
sub
mov
mov
out
adc
pop
aam
nop
aaa
xchg
jmp
xor
pushf
call
inc
fwait
cmc
rorl
in
and
or
xchg
sarl
icebp
jg
test
sub
iret
dec
data16
mov
add
aad
inc
sub
cld
push
xchg
icebp
loop
xchg
sbb
xor
cmp
sub
leave
das
pop
adc
mov
clc
in
sub
sub
movsb
sub
sbb
cmp
in
mov
jns
mov
jmp
pop
pusha
cmp
int
movsl
and
ljmp
rolb
xlat
jne
inc
and
pop
pop
pop
ja
aaa
pop
das
mov
outsb
add
xor
mov
jo
cmp
repz
or
test
arpl
out
mov
std
loop
test
lods
mov
ds
mov
cli
imul
xor
pop
fisttps
push
push
cmp
and
push
lock
cmp
out
pop
push
lret
mov
cmp
movsb
sahf
shrl
rcr
dec
dec
lds
outsl
jno
decb
or
in
pop
je
and
inc
xchg
cs
movsb
or
or
xchg
and
hlt
pop
bound
cmp
pushf
outsb
lock
mov
fildll
stc
ficompl
inc
xchg
inc
or
mov
xor
xchg
jns
lea
and
mov
pop
test
cltd
adc
mov
xchg
jle
jbe
cmp
adcb
inc
or
fcomi
fsubr
jnp
lock
repz
dec
and
cmpsl
filds
out
push
adc
arpl
and
inc
ss
pop
sbb
aam
jno
fcmovne
pushf
mov
and
xchg
mov
jmp
mov
loopne
aaa
arpl
mov
test
ja
rcrb
mov
stc
sbb
popf
stc
ds
lds
outsl
add
les
sub
xor
aaa
es
loope
test
fsubs
out
addr16
mov
add
mov
mov
or
xchg
mov
sub
lcall
pop
andb
cmp
cwtl
daa
in
cltd
mov
push
push
adc
inc
adc
repnz
negb
clc
pop
pop
sub
dec
lret
sub
sbb
in
sbb
movsl
xor
mov
pop
repz
xchg
mov
cmpl
out
pop
adc
or
andl
roll
fstpl
push
cwtl
loop
pop
inc
fdivrp
call
outsb
cmpsl
sbb
pop
ret
movsb
arpl
xchg
mov
rclb
and
and
dec
jnp
enter
xchg
sbb
mov
iret
fsubrp
sub
cs
jle
inc
add
cmp
ret
arpl
subb
imul
orl
mov
lcall
cmp
scas
adc
inc
enter
push
jg
sub
arpl
pusha
jb
xor
aam
enter
movsl
pop
xchg
pop
in
jae
mov
test
cmp
pop
mov
add
or
pop
push
stc
push
andl
jno
xor
xchg
xor
orl
or
push
mov
mov
cmp
push
jle
jecxz
ss
jbe
mov
mov
mov
cs
mov
inc
mov
aam
push
clc
push
dec
out
imul
subl
repz
addb
pop
sti
ret
sbb
sbb
inc
hlt
or
jb
fwait
dec
adc
pop
mov
pop
pop
add
adc
repnz
jp
pop
aam
out
push
mov
dec
lea
ffree
sub
mov
cwtl
sarl
es
stos
popf
push
std
fistpll
mov
in
pop
cmp
js
jecxz
mov
xchg
jb
stos
mov
jns
mov
inc
jmp
mov
and
popa
cmpsl
cmp
push
pop
jecxz
bound
aad
and
rcl
cmp
pop
fbld
and
push
scas
subb
inc
in
cmpsb
sbb
fwait
popa
xchg
mov
inc
jp
jne
mulb
test
xor
stos
jae
cmp
or
iret
mov
out
mov
imul
mov
mov
mov
adc
adc
xor
push
cwtl
jnp
xor
leave
adc
adc
cwtl
out
int
pop
inc
xor
jp
rcr
in
bound
mov
adc
lea
inc
sub
add
push
ljmp
iret
enter
imul
or
lods
push
adc
pop
mov
mov
lock
dec
mov
icebp
adc
aam
rcll
xchg
into
mov
repnz
negb
stos
mov
pop
cltd
ss
and
inc
push
fldenv
sub
lds
inc
test
sub
add
jmp
lcall
dec
push
loop
mov
or
test
movsb
fidivl
popf
pop
adc
mov
inc
pusha
shrl
dec
movsb
jae
adc
mov
add
addr16
fwait
jae
mov
loop
popa
dec
jecxz
cmp
loop
fsubl
or
icebp
lods
xchg
cmp
aaa
je
pusha
push
dec
aad
dec
or
xor
mov
aad
xchg
mov
xor
adc
jb
push
and
enter
cmpsb
mov
adc
in
dec
test
leave
ds
ds
fisttpll
xor
dec
jbe
jecxz
push
mov
mov
push
inc
sub
jle
rcll
sbb
popa
ret
inc
test
outsb
fisubrs
inc
mov
movsb
inc
xor
sbb
lahf
or
inc
iret
jbe
fwait
jl
jae
psrld
and
cmp
xor
outsl
mov
add
repz
sbb
fnstenv
fists
int
sub
pop
lret
mov
and
insb
iret
loop
push
mov
or
shr
testb
nop
xor
nop
popf
movsl
lahf
mov
pop
jns
add
pop
mov
or
lret
add
inc
cs
add
inc
cmpsl
ret
pusha
out
pop
fcompl
xchg
xchg
mov
and
cmp
int
ljmp
popa
sub
inc
mov
jb
add
jno
fsub
cmpsl
xchg
mov
mov
xchg
jno
push
and
dec
xor
adc
movsl
popa
sbb
xor
into
sbb
or
mov
push
adc
fcoml
jge
adc
cmp
shll
cli
stos
push
xchg
adc
mov
ss
cmp
dec
pop
mov
sarl
sti
cmp
lea
push
dec
or
and
adc
ret
xor
ret
xlat
cltd
aas
xchg
adc
ficomps
dec
pop
push
aad
repnz
loope
arpl
scas
cmpsl
int3
add
call
add
xor
orl
pop
xor
mov
loope
mov
jle
add
repz
dec
sbb
ficomps
aad
lret
cmp
rcl
sub
push
mov
cmp
aam
push
mov
movsl
shlb
data16
aam
or
xor
data16
or
mov
ja
mov
push
mov
add
jle
mov
xchg
add
pop
dec
fwait
mov
adc
pop
ds
dec
mov
jle
xchg
ret
sub
insl
adc
test
cwtl
xor
sub
std
or
jnp
mov
push
inc
rcl
mov
rep
jnp
daa
je
sub
and
adc
or
jo
loop
push
lahf
sub
push
cmp
cmpsl
cmp
imul
xorb
dec
outsb
repnz
cmp
adc
inc
es
push
fwait
cld
mov
mov
popa
out
shl
mov
xchg
jb
aaa
cmpsl
addr16
ficoml
loop
sub
xor
outsl
xchg
cld
mov
ret
xchg
xor
mov
pop
add
cmc
jge
adc
or
adc
leave
cli
mov
xor
hlt
in
pop
aad
jb
faddl
popa
lahf
jne
aam
xor
xchg
in
rcrl
add
add
jbe
add
cmpsb
inc
mov
inc
xor
xchg
jns
call
push
pop
adc
dec
imul
mov
call
push
xchg
and
jns
scas
sub
lcall
lock
movsl
outsl
enter
mov
inc
dec
test
fnsave
fcmovnu
sbb
ljmp
xchg
adc
shrl
adc
int3
adc
lahf
xor
xor
sbb
mov
out
mov
mov
js
das
inc
sbb
xchg
push
fmul
test
sub
jp
cmp
stos
pushf
cld
dec
loopne
call
les
add
sbb
push
inc
push
mov
push
aam
mov
dec
adc
lahf
jmp
cmpsb
fnstsw
adc
dec
sbb
jmp
out
stc
inc
xchg
xor
loopne
fildl
mov
sahf
outsl
mov
xlat
cld
fisubrl
adc
xor
push
aad
pop
push
xchg
out
iret
stos
shrb
ss
mov
je
jp
enter
adc
push
js
gs
cld
or
mov
add
inc
inc
movl
divl
lods
daa
xlat
lcall
jle
push
aad
sub
pop
mov
jne
sub
dec
stc
jno
mov
fldcw
mov
ja
inc
xchg
shlb
cltd
xor
mov
or
fldenv
ljmp
mov
sub
xchg
nop
repz
mov
xchg
or
std
mov
fmuls
mov
jmp
cmp
mov
or
cli
test
jmp
into
mov
or
ljmp
shl
imul
mov
adc
mov
int
cmpsl
fisubrl
jb
sahf
cmpb
xchg
out
inc
loop
dec
mov
cmpsb
ds
push
in
fmul
pushf
push
inc
xchg
mov
pop
pushf
push
and
loopne
xchg
jo
or
sbb
add
sub
inc
inc
loopne
rorl
scas
fs
sahf
mov
xor
push
ficoms
out
mov
cmpsb
sbb
sub
jb
fistps
or
fstps
or
push
xchg
sbb
jmp
outsb
add
xchg
mov
xor
mov
movsl
stos
rcl
fdivr
mov
bound
in
mov
loopne
pop
out
inc
push
dec
frstor
iret
adc
sub
hlt
clc
cld
daa
push
shrl
mov
and
repnz
push
pop
inc
pop
cltd
shl
jnp
push
push
pop
dec
inc
cmp
aaa
pusha
lock
push
add
cmpsl
imul
pop
loope
out
daa
stos
mov
cmp
jns
fs
shr
jmp
push
xor
icebp
repz
jmp
xchg
sub
lock
fnclex
push
push
lea
in
xor
xchg
popf
mov
aaa
std
cmp
outsl
movsb
mov
daa
or
push
mov
jnp
xor
or
adcl
mov
jno
addr16
mov
mov
push
pusha
adc
push
sbb
xchg
testl
xchg
inc
ret
push
es
loope
cmp
pop
pmaxsw
mov
jmp
mov
mov
outsl
mov
push
into
dec
fcmovnu
mov
fists
sub
xorl
mov
mov
leave
imul
call
arpl
mov
idiv
mov
std
lods
std
sbb
fsubrl
into
rorb
xchg
jmp
int
xlat
mov
jb
cmp
sahf
daa
fucomip
js
mov
xchg
jg
cmp
arpl
ret
orb
mov
pop
cli
jmp
mov
fnstcw
in
or
je
roll
ja
fsts
dec
xchg
fcoml
test
sbbb
or
or
cs
ja
fcompl
mov
jbe
bound
xor
adc
repz
imul
inc
inc
mov
jns
sub
lcall
lods
and
sbb
xor
pop
adc
xchg
in
pop
pop
fimuls
pop
sahf
sub
scas
mov
faddl
push
lret
mov
push
jnp
fldenv
pop
pop
mov
cs
roll
outsl
out
bound
inc
jnp
sti
sbb
xlat
mov
fimuls
fsubrl
dec
scas
xor
in
movsb
mov
push
movsl
xchg
out
hlt
inc
test
idiv
adc
sbb
lock
int
cwtl
and
daa
sbb
aam
xor
inc
ja
and
mov
pop
shl
and
push
loop
sarb
fmul
ss
cwtl
icebp
pop
cld
push
sbb
inc
das
loopne
sar
ja
dec
cs
xlat
leave
jo
sti
jne
bound
arpl
les
dec
lcall
jne
loop
jg
loopne
mov
cltd
jecxz
mov
leave
push
or
xor
mov
hlt
bound
cld
fstpl
aas
cwtl
xchg
push
inc
add
call
xchg
cs
sub
inc
sub
nop
std
pusha
imul
fcomps
pop
jge
int3
jge
outsl
mov
aaa
sti
sub
in
add
mov
lret
in
xor
int3
enter
lcall
sbb
mov
pop
xchg
ds
cmp
sub
test
xchg
jg
cmp
xor
or
or
mov
or
dec
push
lcall
arpl
ret
dec
es
fldcw
mov
cmp
dec
pusha
scas
and
scas
aaa
push
sbb
xchg
movsl
add
push
xchg
jo
push
sti
sbb
mov
ja
push
test
iret
loopne
mov
mov
cmovne
scas
mov
pop
adc
das
push
mov
jp
push
mov
xor
data16
xor
arpl
mov
mov
aaa
lea
push
call
shl
fistps
aaa
leave
into
dec
sbb
shlb
sub
adc
das
mov
xor
out
push
pusha
adc
mov
push
insl
cld
ds
test
std
cmp
xchg
inc
push
pop
into
mov
loop
cs
popa
jl
pop
andb
std
out
sub
aaa
lret
fsts
xor
rcrl
aaa
sar
sub
push
mov
enter
xor
ret
divb
loopne
out
jbe
jbe
cmp
pushf
divb
shll
aad
lock
fmul
popa
int
jo
xchg
in
lods
ss
dec
mov
lahf
pop
push
pop
fistpl
mov
lret
jbe
stos
clc
xor
xor
lods
shrl
imul
js
andb
xor
negb
pop
mov
int3
jl
mov
cli
or
fldcw
divl
sbb
cli
imul
adc
bound
out
insl
dec
mov
cli
rcrb
popl
gs
mov
push
and
pop
sub
mov
mov
mov
push
pop
cmpsl
out
push
add
mov
jbe
loope
cmp
mov
ljmp
dec
mov
mov
xor
mov
mov
or
js
rcrl
in
call
jle
test
fldenv
pop
rol
sbbb
loopne
xor
ljmp
adc
jne
xchg
lret
inc
scas
dec
cli
inc
jno
int
add
arpl
lock
fs
aad
sar
mov
xchg
loop
push
stos
fwait
lds
and
xor
into
and
arpl
cltd
sub
pop
mov
cmc
mov
lret
mov
imul
pushf
pop
cmp
daa
dec
pop
sub
les
push
and
inc
imul
cltd
add
dec
adc
cmp
fdivrs
and
mov
push
lock
mov
dec
pop
into
in
dec
mov
fsts
xor
fs
addr16
cmp
pop
repz
std
ja
adc
xchg
cmp
fldcw
or
idivl
jnp
pop
pop
xor
and
xchg
cmpsb
add
dec
push
pop
or
adc
out
cwtl
sbb
test
vmovsd
cmpb
jae
loopne
mov
adc
mov
out
adc
mov
sbb
das
xchg
cmpsl
mov
dec
sbb
pop
sub
lds
dec
icebp
pop
adc
dec
movsb
pop
lret
movsb
xchg
sbb
push
incb
ljmp
cmpsb
scas
mov
jb
out
add
clc
mov
mov
pop
mov
das
sbb
jbe
sbb
mov
cmc
push
xor
flds
push
inc
shll
inc
and
call
insl
mov
xchg
mov
xchg
popf
fldl
repz
jle
pop
outsb
test
out
fwait
aam
mov
mov
outsb
mov
jbe
into
dec
jg
jae
ljmp
stc
cmp
or
aaa
adc
popa
jnp
repz
ret
popf
push
popf
loope
push
ja
push
adc
xchg
arpl
push
cmp
push
and
aas
int
inc
fwait
add
lret
mov
mov
add
adc
sbb
into
inc
mov
jns
gs
jl
sahf
push
jb
call
mov
sbb
xor
shrl
push
int
inc
sub
cmp
out
leave
pop
sbb
les
sub
test
jns
mov
aad
xor
lock
js
sub
and
cmp
sub
and
mov
dec
aas
xchg
lock
mov
and
stos
aas
jno
fmul
xchg
fbstp
jne
sbb
mov
xchg
push
inc
lods
jp
or
xchg
push
sub
sbb
dec
mov
into
ss
scas
lods
lret
icebp
dec
test
or
xchg
cmpsl
sbb
add
sbb
dec
dec
adc
cmp
and
pop
pop
imul
jne
or
es
dec
cmp
jne
jbe
xchg
mov
xchg
jecxz
dec
jne
cmpl
aad
in
dec
movsl
adc
ljmp
mov
mov
imul
mov
bound
add
insl
fisubrs
insl
sub
nop
cmpsb
shl
pop
mov
test
movsb
iret
sahf
xchg
rorb
push
and
idivb
dec
ja
pop
nop
outsl
fidivrs
out
jmp
sbb
and
in
and
jle
iret
adc
lret
cs
cmp
fisttpl
xchg
test
mov
stc
fisttpll
loop
mov
mov
das
ret
mov
inc
std
shrl
sub
jb
arpl
xor
scas
inc
fcomps
pusha
pop
dec
cmp
ds
sbb
nop
pop
push
inc
jne
pushf
lret
cltd
mov
in
sub
fdiv
push
mov
fildll
sub
or
lock
arpl
xchg
adc
lea
push
or
movsb
jno
lret
ds
pop
sub
dec
pushf
aam
xchg
insb
loop
rcll
dec
push
xchg
or
sahf
mov
or
scas
ret
jne
and
loope
sbb
push
sbb
daa
push
js
xchg
lds
in
test
mov
dec
pop
mov
or
or
addr16
lods
cmp
pushf
and
jle
cmpsl
add
hlt
out
ds
ret
jo
hlt
stc
es
fstl
add
pop
xchg
mov
int3
movsb
cli
push
pop
or
cli
mov
cmp
loope
pop
jb
into
mov
je
jge
jg
aas
mov
or
loope
movsl
popf
fbld
xor
or
adc
push
xchg
or
xchg
jne
jmp
push
add
inc
addr16
stos
mov
cmp
ret
jecxz
mov
loope
jne
mov
ds
inc
xor
popf
xor
push
add
insb
inc
fidivl
xchg
ret
test
cmpsl
pop
ja
push
inc
mov
push
jmp
xor
enter
scas
lods
adc
sbb
ret
in
jae
sub
jl
inc
into
out
jne
movsb
cmp
outsl
dec
insl
in
mov
mov
outsl
mov
scas
pop
out
sbb
xchg
xchg
out
mov
xor
push
mov
dec
mov
loopne
out
cmpsl
loopne
jp
jns
mov
cld
or
cmp
mov
ja
dec
cmp
ret
rol
mov
inc
cltd
mov
adc
std
cli
mov
mov
jb
or
pop
sbb
shll
dec
mov
sub
add
pop
xor
scas
push
jp
push
push
dec
jp
in
sub
cwtl
mov
push
mov
or
call
call
daa
aad
cmp
cmp
pop
mov
mov
dec
jmp
mov
mov
sti
add
leave
mov
cmp
cmp
adc
pusha
xor
mov
push
leave
lods
jbe
inc
dec
dec
inc
adcl
rcll
stos
pusha
pushf
inc
in
push
fisubs
jae
repnz
jns
ret
ja
test
cs
dec
and
mov
sbb
lds
jb
insb
push
mov
dec
push
or
push
outsb
les
cmp
rclb
add
sbb
and
xchg
scas
shll
dec
dec
dec
pusha
jp
jns
xchg
sbb
aad
into
rcrl
rcll
or
xor
mov
cli
loope
iret
mov
add
cwtl
ret
and
adcb
xchg
js
lahf
dec
xor
xchg
ljmp
lock
push
insl
ja
sti
sbb
cmp
popf
aad
test
sub
lcall
mov
and
sub
xchg
push
adc
sbb
mov
clc
mov
xor
insl
mov
cli
in
dec
sti
adc
sbb
cmp
mov
les
mul
jns
cltd
or
lea
test
into
out
xchg
push
lret
mov
es
xchg
sbb
cmp
enter
push
sarl
jbe
adc
ret
insb
jno
iret
lret
push
loope
push
repz
mov
cltd
mov
popf
loopne
xchg
lahf
sub
or
add
push
inc
out
sub
je
and
add
add
sti
faddl
ljmp
aaa
inc
enter
out
cmpsl
js
imul
xor
push
mov
sahf
pop
pop
or
xor
in
mov
xor
aaa
xor
cmp
cmp
repz
push
rcll
cld
or
das
pop
scas
dec
movsb
int3
fnstsw
or
cmp
adc
push
adc
les
sbb
pop
roll
rcl
mov
inc
nop
jno
inc
lods
fisttps
jle
sbb
cmpsb
xchg
fimuls
xchg
stos
js
int3
xlat
mov
jg
lock
pop
movsl
or
leave
or
sahf
mov
xor
movsl
iret
pusha
repnz
mov
in
sbb
jmp
addl
add
jmp
outsb
cmpsl
mov
mov
sar
mov
insb
arpl
je
cltd
dec
mov
fidivrl
push
sub
in
xchg
xchg
cltd
fs
xor
inc
test
lret
xchg
imul
push
out
jecxz
icebp
ds
int3
scas
add
mov
stc
mov
fistpl
push
pop
mov
pushf
mov
add
pop
les
ror
sti
aad
int
mov
jnp
adc
cmp
mov
movsl
sbb
imul
sub
test
push
pop
pushf
out
cmpsl
mov
arpl
dec
xchg
lods
dec
push
xchg
cmc
fs
dec
mov
and
enter
loopne
adc
int
outsl
shl
xlat
movsb
mov
and
call
aas
mov
lret
test
icebp
dec
xor
loop
cli
xor
adc
jge
or
cmp
popl
sub
mov
dec
add
xchg
nop
and
fcompl
repz
inc
push
sbb
pop
mov
push
mov
lock
xchg
lea
scas
dec
leave
adc
push
fisttpll
cmp
and
mov
fcmovnb
mov
inc
xor
and
sbb
mov
mov
jecxz
inc
lahf
fists
jne
lods
mov
je
jo
sub
jae
shlb
mov
cmp
shll
sub
fnstsw
scas
add
push
negl
lret
inc
sub
push
loop
or
adc
loopne
movsl
cmc
in
in
sbb
add
xor
xchg
or
scas
push
jo
mov
inc
lods
add
and
outsl
shlb
imul
fadd
xchg
mov
stos
mov
push
orl
stc
jno
pop
dec
mov
push
cmpsl
je
dec
cmp
adc
dec
and
sub
xor
pop
cmpsl
jbe
sub
sub
mull
movsl
add
mov
shrl
stos
dec
popa
xor
icebp
sahf
ds
faddp
aad
mov
outsb
and
sbb
pop
shll
fisubrl
xor
adc
clc
fcmove
sti
decl
cmp
imul
sbb
lds
cltd
aam
lret
rcrb
sbb
mov
aaa
sub
and
je
jnp
loop
mov
mov
lret
jp
pop
xchg
dec
dec
loop
or
push
xchg
and
push
pop
add
inc
jnp
fistpll
addl
leave
inc
int3
mov
jecxz
xchg
jns
dec
loopne
data16
pop
mov
inc
pop
gs
loop
cs
dec
mov
sub
out
shrb
pop
popa
cmp
jge
cmp
and
sbb
push
xor
cmp
fcmove
pop
and
push
test
xchg
repz
sub
daa
scas
repnz
int3
cmpsb
out
aam
jmp
movsb
jo
loopne
mov
test
pop
cmpsl
lret
roll
repnz
jbe
jl
xchg
pushf
stos
shll
cmpxchg
movsb
pop
pop
and
sbb
jbe
fs
push
mov
mov
push
pop
xor
mov
add
push
adcb
dec
adc
clc
es
add
mov
jmp
pop
add
stos
lcall
mov
out
mov
or
into
or
mov
in
push
mov
ljmp
aad
mov
jae
es
loopne
and
mov
popf
mov
mov
fcmovne
jns
sub
hlt
pop
repz
pushf
fidivs
mov
cmp
mov
push
cs
mov
das
dec
stos
cltd
xor
aas
loope
mov
mov
int
enter
aaa
add
jmp
stos
scas
pop
sub
inc
andl
push
add
push
insb
jbe
adc
sbb
mov
and
cmpsl
and
in
sub
xchg
into
dec
jno
pusha
das
nop
mov
fidivrs
outsb
in
add
movsb
adc
mov
mov
add
fisubrl
clc
pop
test
xor
cmp
adc
pop
mov
sub
daa
mov
push
cli
fiadds
add
and
scas
add
fsubs
xchg
and
fs
xor
shr
adc
lock
and
es
mov
mov
mov
pop
xor
outsl
xor
loop
and
xchg
push
mov
adc
fdivl
in
jg
aas
je
jnp
mov
addr16
nop
and
aam
cmp
and
push
xchg
pop
add
loopne
xchg
in
cmovg
jle
pop
pop
out
push
jbe
out
loope
test
mov
adc
jecxz
pop
out
es
push
pop
hlt
pushf
push
sbb
movsl
inc
mov
pop
mov
js
bound
lret
je
xor
xchg
cmpsl
jg
dec
sbb
pop
push
sbbl
mov
lret
pushf
scas
ret
xchg
test
jne
popf
sbb
movsl
xchg
and
pop
or
movsl
mov
js
cmpl
jp
mul
inc
nop
mov
mov
out
inc
iret
xor
xchg
int3
icebp
jg
rcl
or
test
push
adc
aam
lock
push
lahf
in
dec
lahf
xor
shll
popf
jl
pop
mov
push
fildll
sub
ret
das
adc
inc
loope
inc
call
int
cmpb
popa
scas
jmp
push
inc
jl
jno
decb
xchg
orb
adc
loope
sbb
lret
addr16
dec
scas
int3
inc
mov
sbb
fnstsw
sub
jl
sarl
add
mov
push
mov
cmc
sub
and
cmpsl
mov
int
cli
ror
push
popl
enter
pop
aaa
cmc
icebp
xchg
data16
les
sbb
xchg
insb
inc
insl
loopne
jle
mov
mov
jg
stos
and
loopne
pop
es
mov
inc
dec
nop
adc
pushl
lea
mov
or
mov
inc
and
add
arpl
lea
mov
rorl
sbb
adcl
lock
insb
push
push
xchg
fldenv
mov
mov
rcrl
jmp
push
or
insl
push
mov
and
mov
mov
add
jnp
xchg
adc
lods
and
outsb
inc
xor
test
je
subb
in
jbe
test
mov
pop
clc
int
shlb
sub
cmpsb
jo
or
inc
js
je
dec
pop
out
pop
fs
cwtl
jle
xor
popf
jnp
cmp
call
and
pop
ja
adc
in
sub
pushf
mov
rcll
fnstsw
cmp
fwait
inc
jne
pop
adc
cmp
shlb
push
test
dec
dec
cmpsl
adc
aas
sub
imul
out
int
movsb
dec
or
mov
stos
mov
and
mov
and
fdivl
sbb
gs
test
hlt
pushf
out
inc
lods
mov
mov
jp
gs
loopne
aaa
dec
scas
xchg
mov
fucomip
movsb
iret
mov
xchg
stos
push
adc
fistpll
adc
mov
push
mov
es
outsb
cli
push
cmp
mov
cld
mov
pop
push
cmp
into
dec
incb
jns
cmpb
stc
lcall
subb
mov
js
aas
lret
mov
mov
lock
sti
popa
fisubrs
pusha
lret
fdiv
pop
mov
stos
jp
mov
aaa
and
fldl
mov
pop
clc
js
fnstenv
les
inc
arpl
dec
cmp
sub
adc
and
nop
decb
xchg
pop
pop
notl
lret
mov
aaa
jge
xor
push
dec
mov
test
push
mov
inc
shrb
jmp
loop
xchg
rcl
mov
negl
sub
pop
cli
shrb
jmp
rcl
mov
mov
repnz
in
lret
or
mov
das
mov
fs
push
adc
in
cmp
push
mov
mov
movsb
fnstcw
pop
and
push
shrb
jle
scas
dec
mov
daa
fs
mov
add
add
jle
sub
mov
pop
lock
inc
add
xor
fstp
sbb
cmp
push
test
mov
sub
mov
enter
inc
sbb
pop
cmpb
in
xor
fisubs
stos
rclb
cmc
aam
jae
aaa
pop
scas
xchg
mov
int
into
and
xorb
insl
or
loop
xchg
sbb
jae
jmp
adc
xor
loopne
loop
out
and
sub
fdivrl
mov
iret
mov
pop
test
lret
in
ret
push
and
sbb
mov
fsubp
lret
nop
cli
and
sub
pop
mov
dec
jne
jle
or
aaa
mov
test
int3
and
mov
dec
and
pop
enter
and
mov
mov
jmp
cmp
in
es
dec
mov
leave
mov
mov
push
cmc
hlt
or
xchg
sbb
cmp
adc
xor
imul
xlat
ficoml
test
leave
loope
int3
mov
cmc
int
repnz
mov
sti
loope
or
or
out
mov
fimuls
cld
push
and
push
pusha
jnp
push
jge
or
sar
inc
iret
jmp
inc
movb
add
test
insb
icebp
ror
aas
and
in
xor
mov
inc
xchg
ljmp
fmull
jo
xchg
fdivr
lcall
leave
cmp
lahf
hlt
pcmpgtb
sbb
fldl
cmp
rorl
fnsave
rorl
adc
push
sub
cmc
fsubr
aas
push
push
jb,pt
pop
test
dec
sub
repz
aas
mov
push
and
int
xchg
dec
jno
popf
enter
xchg
push
add
mov
mov
mov
xchg
mov
push
adc
cli
notl
pop
in
repnz
push
lods
fistps
xor
mov
out
push
inc
call
imul
inc
cmp
inc
or
into
cmpl
dec
into
sbb
inc
mov
cmp
or
dec
stc
ss
fsts
xchg
cs
lods
outsb
sahf
fcmovnbe
jb
mov
mov
adc
mov
inc
push
jecxz
ret
add
shlb
fldt
cmp
jae
mov
stos
sbb
sbb
js
or
jge
mov
mov
je
call
inc
pop
xchg
cli
inc
or
xor
call
mov
adc
pop
xlat
mov
mov
or
lds
mov
sub
push
test
lahf
or
cltd
jns
gs
adc
dec
ja
ficomps
rcl
in
xchg
xor
repz
inc
ret
push
enter
int
fistpl
std
lods
cmp
sahf
add
cmc
ret
dec
outsb
mov
loop
arpl
fs
clc
jecxz
in
inc
mov
inc
pop
sub
iret
in
add
dec
test
jecxz
lea
shll
lds
jl
add
rolb
test
adc
nop
jno
int3
jle
add
cmp
inc
mov
lret
les
clc
add
idivb
shll
repnz
ret
mov
inc
and
lcall
and
call
mov
fisttps
xchg
loope
push
mov
cld
in
push
and
cmpl
or
cwtl
mulb
lods
rorb
adc
and
mov
popf
mov
test
pusha
arpl
ja
add
ror
iret
call
gs
repz
mov
cmpb
out
pop
adc
mov
lods
xchg
cmp
sub
dec
jno
sbb
jo
imul
sub
jnp
sbb
mov
jne
insb
cmpsb
shrl
sbb
int3
dec
inc
loope
dec
subb
ficoml
mov
sbb
in
cli
xchg
incb
adc
cmc
mov
aam
xor
fists
push
das
xor
cmpsb
lods
inc
imul
xor
stos
add
test
cmp
cmp
pop
jns
pop
jns
ds
shlb
push
jo
xor
or
push
test
jne
insl
or
mov
jle
push
push
ret
cmp
cmp
jp
call
lods
mov
nop
leave
and
and
dec
mov
and
mov
add
xlat
jg
loopne
pusha
mov
scas
fisubrs
and
xchg
loope
cld
inc
push
filds
fyl2xp1
pop
in
jl
loope
cltd
vpmovusdw
xlat
mov
push
xchg
lahf
insl
ljmp
mov
cmc
repnz
push
cmp
inc
mov
xlat
ret
jnp
xor
sub
leave
fwait
mov
xchg
adc
pop
and
sarb
shl
cmp
insl
cmpsb
idivb
cmp
push
sub
or
jle
pop
push
in
out
aam
push
inc
cmpsl
hlt
ss
loopne
adc
fcoml
sub
lods
cli
cmp
pop
test
test
jbe
mov
pop
lods
and
scas
mov
xchg
gs
pop
filds
pop
shlb
push
adc
icebp
dec
push
fstl
jo
jmp
jns
cmp
gs
xlat
pop
push
mov
pop
shll
pop
sbb
pop
fisttpl
mov
in
jle
mov
xchg
sbb
mov
jecxz
hlt
enter
mov
mov
push
add
fstpl
insl
mov
mov
imul
dec
ljmp
lods
popf
pushf
fistpl
push
sahf
jns
add
subl
ja
iret
xchg
daa
mov
cmp
lret
mov
jbe
les
fdivl
cmp
xchg
or
test
mov
dec
dec
out
int
repz
xor
ds
lret
test
lret
imul
jge
jnp
test
movsl
in
shlb
rclb
mov
arpl
adc
fcmovnu
das
jae
or
push
sahf
ljmp
xchg
or
aam
mov
cs
cli
hlt
cmp
out
jmp
mov
jae
sub
loopne
mov
and
aam
repz
push
dec
jne
jno
sub
add
testb
out
movsl
add
cli
daa
mov
outsb
dec
bound
daa
sahf
mov
aaa
sbb
cmp
fs
mov
push
sub
mov
jo
mov
jns
out
cli
and
or
jl,pn
lods
mov
cwtl
lds
jle
ss
fsubrl
scas
sub
add
cmp
fimuls
jg
jne
nop
fcom
ljmp
rcl
or
mov
mov
lret
ljmp
mov
data16
js
addr16
mov
cld
popf
cld
pop
push
push
mov
jmp
jp
cs
addr16
inc
cmp
mov
movsb
push
imul
aas
or
inc
cwtl
push
mov
sub
jnp
pop
cli
in
or
pusha
jns
sbb
lods
cmp
adc
insl
push
pop
mov
stc
adc
in
lea
in
insl
jb
mov
out
xor
mov
jne
rorl
and
xchg
mov
push
dec
pushf
shlb
test
out
and
mov
add
das
fists
jnp
jp
xor
adc
inc
push
inc
imul
gs
mov
stc
jnp
popa
jl
pop
jbe
repz
xchg
push
fs
sahf
pop
mov
imul
mov
or
xchg
dec
dec
mov
dec
cmp
int
insl
jle
and
pop
scas
mov
sub
xchg
push
xchg
sbb
jb
pop
xor
push
push
inc
push
cmp
stc
push
inc
aad
inc
cmp
fistps
lret
push
and
xchg
data16
test
pop
loop
iret
rol
xchg
stc
pop
lcall
js
mov
rol
sahf
and
fnstsw
mov
sub
jmp
add
mov
mov
mov
mov
lods
pop
sahf
test
mov
fidivrl
push
push
aas
pusha
pushf
lret
mov
movsb
jb
aaa
out
or
sub
stos
push
les
addr16
jl
out
pop
adc
pop
frstor
stos
dec
mov
lahf
fdivr
fldcw
subb
add
sub
inc
pop
ss
add
cmpsb
jbe
sub
push
xchg
loop
jne
inc
andb
movsb
ja
push
jg
push
ds
test
xchg
or
movsl
int
mov
imull
adc
cmp
pop
sub
hlt
dec
jecxz
and
adc
les
mov
and
cmp
fwait
bound
sbb
movsb
and
dec
cmp
cmp
jns
loope
dec
std
mov
int3
add
lcall
es
mov
xchg
lds
add
aad
sti
dec
push
jae
icebp
stc
pop
ljmp
test
mov
sub
insb
xlat
and
imul
sbb
lret
push
lret
jns
jmp
movsb
shll
pop
iret
iret
jmp
pop
xchg
or
xchg
xchg
push
xor
dec
adc
ds
cmc
lcall
mov
xchg
pop
sbb
dec
sbb
test
das
mov
adc
lcall
repnz
pop
or
loopne
dec
sbb
loope
stos
xchg
fmulp
adc
fisttps
lar
jbe
fidivrl
mov
subb
or
insl
aad
clc
mov
fnstcw
gs
clc
mov
clc
bound
aad
mov
jecxz
jae
cmp
out
or
ljmp
inc
dec
and
test
cwtl
cmp
push
sbb
insl
lret
insl
xchg
bound
shld
sbb
push
sti
inc
loopne
jo
mov
jg
fsts
pop
aas
push
pushf
jb
push
xchg
lcall
mov
popf
imul
push
push
xor
xor
inc
call
xchg
xchg
ret
fs
in
sbb
or
fcom
push
dec
or
test
mov
sbb
xlat
sbb
add
pop
nop
lods
in
aad
mov
mov
js
rclb
bound
mov
jp
mov
out
fisttps
xor
xchg
popa
pop
xchg
in
dec
cmp
sub
mov
sbb
imul
mov
xchg
xchg
cwtl
popa
cmpsl
outsl
jno
in
xchg
mov
adc
jp
cld
loopne
sub
in
push
clc
xchg
int
arpl
lock
das
or
sbb
negb
mov
fisubl
aaa
hlt
aas
push
clc
or
cmpsb
pop
xor
inc
pop
cld
sub
rcl
or
outsl
or
adc
icebp
push
add
cmp
mov
aam
jmp
xchg
push
fidivrs
shrl
daa
daa
lock
data16
push
ffreep
mov
stos
pop
sub
pusha
xchg
and
daa
imul
mov
je
leave
rcl
xor
out
pop
testb
arpl
xchg
loop
aas
leave
dec
jno
gs
adc
leave
lret
mov
lock
pop
roll
pop
cwtl
ret
sub
pop
dec
push
dec
les
data16
cmp
mov
ljmp
repnz
cmp
cmp
jle
mov
loop
incl
ret
jg
push
xlat
push
das
loop
negb
idivb
scas
nop
fsubs
scas
lahf
mov
mov
cmp
xchg
adc
mov
js
stos
test
mov
insl
fsubrs
lret
ret
mov
out
pop
jg
mov
pop
cmpl
xor
in
sub
test
mov
mov
int
pop
test
lea
mov
or
ljmpw
and
xchg
nop
addr16
mov
ret
scas
xor
xor
les
cmp
sahf
pop
aaa
daa
pop
test
jo
cwtl
cltd
jle
xchg
pushf
ds
pop
push
xor
add
mov
or
xchg
cmp
mulb
push
fsubrs
mov
js
hlt
inc
jbe
xor
into
lock
jmp
aam
pop
push
ds
add
xchg
mov
jg
sbb
cmp
dec
outsl
pop
mov
xchg
frstor
and
iret
mov
adc
imul
fld
jmp
jne
adc
mov
push
sbb
or
mov
sub
sub
imul
enter
inc
mov
jp
enter
imul
movsb
fldl
aam
hlt
jecxz
pusha
fdivr
push
mov
out
gs
out
fsubs
xchg
and
insb
repnz
out
jl
arpl
fmuls
dec
mov
iret
adc
aaa
shl
or
cmp
idiv
cltd
xchg
and
sarl
adc
push
sti
lock
sbb
mov
xchg
insl
icebp
xchg
push
add
popf
pushf
sub
or
ss
mov
aaa
and
out
mov
xor
mov
cltd
sub
aaa
adc
xchg
mov
mov
push
jb
sti
mov
mov
and
lcall
adc
mov
call
pop
xchg
inc
xchg
fisttpll
push
stos
pop
fwait
fwait
push
add
xchg
jp
add
cltd
mov
xchg
loopne
push
fldenv
cltd
ljmp
shr
mov
xchg
adc
cwtl
mov
cmp
mov
popf
ss
js
cmp
inc
add
cmp
punpckhqdq
leave
sti
mov
stos
or
sbb
add
lahf
sub
testb
scas
sbb
in
inc
mov
stc
xor
std
aas
sahf
sbb
pusha
lock
mov
mov
mov
push
pop
stc
jb
push
stos
sub
outsb
pop
dec
cld
pop
out
fs
cwtl
jl
hlt
cmp
lret
inc
dec
pushf
cmp
ret
pop
dec
jnp
mov
sbb
iret
inc
sti
xor
aaa
gs
push
iret
and
and
in
mov
cmc
jg
pop
push
mov
cmp
pop
out
xor
dec
test
and
fsubrl
cs
cmpsl
stos
push
out
xor
push
push
xor
or
adc
or
daa
cli
nop
push
sub
or
or
pop
sub
lods
clc
mov
ds
pop
rcrb
pop
insl
cmc
xor
jmp
mull
dec
jb
jae
sub
movsl
repz
xchg
ret
cmp
sub
into
and
sub
ja
inc
push
sub
jo
out
shll
pop
cmpsb
pop
andb
pop
scas
xchg
jo
cmc
fbstp
pop
in
sub
sub
jbe
jae
or
mov
xchg
std
mov
test
ret
add
lods
aas
clc
add
int3
mov
xor
fmuls
xchg
xor
cld
out
pushf
mov
mov
jl
imul
cmp
aam
lcall
push
add
jmp
dec
lock
jecxz
js
loope
aas
jae
xor
std
mov
dec
and
out
xchg
sbb
fwait
pushf
mov
cmpb
lods
aaa
pop
dec
xchg
stos
cmp
add
ja
ficompl
cmp
adc
jne
add
push
rcll
cmp
test
scas
or
jbe
roll
cs
out
pop
je
cmpsl
stc
push
xlat
xor
lea
pop
das
xchg
inc
int
rol
adc
xor
repz
sub
mov
pop
pusha
mov
mov
dec
push
sbb
jno
jo
dec
sbb
pop
in
cld
lock
jecxz
and
sbb
sbb
data16
fdivl
adc
xor
vcvtss2sd
orb
scas
in
std
and
in
fcomps
lods
sbb
fcoml
adc
mov
mov
daa
pusha
cli
loop
popf
clc
mov
pusha
xlat
out
jns
ss
pop
push
test
xchg
loope
scas
dec
pop
cltd
sub
lret
mov
push
iret
sbb
lea
mov
fadds
jge
xor
idivb
lods
and
push
adc
pop
dec
cmp
jno
out
xor
jge
pop
mov
int
sbb
pop
inc
mov
jb
stos
sub
or
adc
or
pop
lock
movsl
mov
fists
mov
lock
inc
rclb
in
push
imul
mov
mov
cmpxchg
andb
push
sbbl
mov
xor
mov
out
loope
fistpll
jecxz
fs
mov
insb
sbb
fldcw
add
sub
rol
sbb
xor
shl
cmp
lods
jge
out
mov
jo
and
repz
test
add
xchg
in
mov
fisubl
xor
ret
xor
push
push
mov
cltd
push
xchg
loopne
mov
push
and
and
inc
dec
js
jb
test
dec
xchg
mov
mov
jbe
lock
mov
aaa
movsb
mov
cmc
stos
sti
cli
ret
into
loopne,pn
incb
pop
pop
push
cltd
pop
mov
mov
and
hlt
xor
ljmp
add
add
dec
int3
test
mov
jp
push
jg
arpl
push
aad
sti
stos
jno
push
push
bound
pop
into
mov
mov
es
jle
clc
pop
and
out
sub
lods
loope
xor
fisttpl
xchg
sub
pop
fsubs
jno
arpl
bound
ret
mov
inc
roll
int3
pop
push
ljmp
cmc
out
daa
sub
in
mov
xor
pop
fidivrl
jne
stos
and
dec
add
iret
sbb
jl
mov
adc
or
adc
sti
pop
jle
sub
xor
xchg
pop
mov
popl
or
and
xor
sub
dec
bound
das
fdiv
mov
jle
adcl
fstl
out
pop
lea
pusha
in
fdivl
jge
dec
jo
scas
cmc
jle
testl
cmp
cmp
inc
fsubs
test
imul
enter
enter
or
adc
lods
aad
mov
sub
rorl
push
jns
test
cmp
pop
cs
outsb
sub
inc
and
pop
inc
cmpb
rcr
dec
insb
mov
test
sbb
pushf
jp
push
jb
push
push
negl
das
sbb
lods
adc
push
push
xchg
mov
push
popf
xchg
or
jmp
ljmp
xor
or
or
mov
repz
xlat
int
subl
clc
in
int3
mov
push
movsb
sbb
inc
test
push
stos
push
jo
jecxz
dec
mov
data16
pop
jnp
cmp
out
pusha
dec
dec
pop
sub
pop
dec
les
or
lods
and
and
sti
cmp
or
sub
jg
leave
and
pusha
nop
push
test
stos
in
pop
jo
push
inc
push
xchg
mov
jle
test
lods
xchg
jns
mov
or
orb
xlat
movsb
lock
leave
pop
hlt
cli
adc
daa
mov
jmp
push
lods
or
xor
mov
mov
add
mov
repz
pop
add
push
outsb
iret
imull
xchg
testb
mov
jbe
pop
sbb
fwait
into
in
pop
mov
popa
jge
mul
xchg
imul
pop
cmc
nop
inc
aas
dec
pop
cmpsb
adcb
sub
aad
test
sub
int
in
cmp
dec
aaa
cvtps2pi
arpl
adc
cmp
scas
ja
push
pop
ret
jg
add
sub
pop
pop
xchg
push
sub
jae
add
xchg
mov
inc
cmp
xlat
mov
test
mov
pop
das
mov
add
push
imul
cli
sub
cmpsl
and
adc
mov
push
ja
jg
call
inc
aaa
add
cmp
cmpsb
lock
cmp
test
insb
dec
inc
test
cmp
dec
adc
sbb
mov
xchg
xchg
ja
or
push
fs
xor
fdivrl
rolb
lea
fdivl
adc
mov
dec
adcl
or
dec
addl
cwtl
loope
lods
cmp
sti
pop
inc
lcall
xchg
and
sub
add
dec
pop
lds
and
insb
subl
jp
aas
xchg
push
inc
jecxz
sahf
cmp
cmp
adc
xchg
mov
or
sbb
insl
or
sbb
xchg
movsb
rclb
pop
sub
add
notl
xor
inc
sub
popf
lret
sbb
int
leave
xchg
fs
mov
popf
jns,pn
out
jbe
add
pop
lar
popf
lret
or
dec
in
sbb
in
pop
popa
add
loop
mov
pop
mov
jnp
test
and
popa
push
dec
jmp
xor
icebp
cmpsb
cwtl
jmp
adc
push
fcoms
xchg
push
loopne
mov
cmc
and
and
or
inc
adc
xor
clc
popl
daa
xchg
mov
pop
pop
sbb
lret
sub
jnp
sti
pop
push
test
outsl
nop
test
mov
lods
sub
xor
ret
cmp
das
or
arpl
push
in
nop
push
cmpsl
cld
mov
jbe
sbb
les
mov
cmpsb
jp
pop
retw
inc
inc
int
jb
inc
pop
imul
cmp
jb,pt
lret
inc
ret
imul
mov
dec
and
xchg
cli
mov
pop
jne
jp
repz
divl
and
inc
push
and
cmp
ds
repnz
pop
imul
adc
and
and
loope
jb
xchg
jmp
jmp
test
out
pop
and
in
inc
mov
mov
aaa
mov
mov
popf
bound
mov
cmp
or
inc
xor
push
cwtl
dec
fnstenv
push
add
inc
cld
out
inc
jge
pop
out
xchg
ret
iret
adc
xchg
xchg
sarl
in
fwait
push
rcl
mov
jmp
sbb
push
push
stos
lret
sar
sub
call
inc
mov
in
sub
sub
or
cmp
add
pop
iret
lock
data16
sbb
testl
mov
clc
or
and
sub
in
xor
in
mov
jnp
mov
pop
sbb
xor
pop
test
push
add
aam
xchg
pop
stc
adc
leave
sarb
push
dec
xlat
sub
pop
jp
scas
aaa
xor
xor
xchg
mov
movsb
or
aad
leave
negl
rolb
clc
popa
dec
stos
fsts
mov
std
std
dec
mov
add
mov
fwait
or
arpl
jne
pop
push
dec
rolb
dec
test
mov
lahf
lods
enter
bound
jmp
mov
mov
push
pop
sbb
ds
int3
cmc
cmc
ljmp
jp
aad
push
or
shrb
xchg
push
sub
mov
dec
or
idivb
data16
mov
dec
dec
cmp
mov
loopne
jle
dec
and
pop
dec
lcall
jae
lds
push
jbe
adc
je
mov
out
mov
mov
add
stc
call
insb
cmp
inc
fdivr
int3
mov
mov
mov
scas
orl
clc
add
mov
adc
lods
and
imul
push
addr16
inc
notb
sub
mov
mov
sbb
push
push
mov
icebp
jecxz
lds
add
mov
mov
mov
scas
mov
lret
lcall
test
mov
test
fisttpl
xor
inc
fimull
aam
lds
or
push
jl
xor
aad
and
xor
push
into
mov
fiadds
mov
pop
ds
add
movsl
out
dec
pop
lea
rolb
loopne
xor
fsts
and
and
call
lahf
int3
fstl
arpl
mov
dec
scas
jo
aaa
nop
xchg
pop
jno
repz
mov
cli
pop
jp
lret
mov
pop
add
xchg
xor
and
xchg
mov
in
xchg
cmc
add
sub
fdiv
xor
inc
fimuls
test
or
mov
popa
in
leave
pop
shll
loope
dec
mov
js
or
addb
adc
pop
mov
sbb
in
enter
lahf
xchg
mov
jmp
shrb
clc
and
push
gs
fldl
das
out
sbb
xchg
std
shrb
scas
xchg
cmpl
call
imul
sub
mov
lret
dec
inc
movsb
data16
pop
out
xor
cmp
shrl
sub
leave
cmp
out
mov
test
addr16
fistpll
and
sub
rorl
mov
jne
roll
aam
pop
mov
jnp
xchg
lcall
mov
mov
inc
jns
sub
pop
xchg
push
loopne
in
pop
lock
jge
fldt
push
mov
call
in
les
push
rclb
xor
and
mov
fdivs
cmp
aam
loope
pop
sub
jb
mov
mov
outsb
inc
rorb
inc
mov
jmp
sub
enter
popf
out
aad
push
repz
lods
mov
adc
out
sbb
xor
fnstenv
xor
push
cmc
or
bnd
stos
orb
mov
mov
leave
sub
ljmp
cld
clc
xchg
test
fwait
xor
jge
sti
in
or
sbb
xchg
mov
or
inc
inc
cmp
mov
out
cmp
xorb
movsb
xor
leave
popa
pushf
inc
popa
and
mov
push
fs
jno
into
jmp
decb
popa
fwait
mov
mov
add
pushf
aas
dec
dec
je
sub
fwait
addb
and
dec
and
sarl
ds
aad
dec
dec
dec
repz
pop
sub
dec
loop
leave
inc
adc
push
mov
dec
lea
insb
inc
arpl
pop
dec
xor
pop
in
iret
pop
mov
jmp
dec
dec
js
sub
or
dec
mov
outsl
mov
sbb
pop
dec
testb
rolb
popf
cmpsl
mov
in
push
pop
roll
fldenv
add
push
push
js
mov
inc
pop
add
jno
in
cmp
lods
pop
push
cwtl
ss
mov
cmp
insl
dec
dec
xchg
adc
push
xchg
cli
mov
pop
fmull
fwait
or
xchg
std
jnp
into
add
clc
shr
push
mov
lret
push
mov
jg
inc
test
mov
ljmp
pop
adc
loop
inc
push
or
sbb
dec
popa
lret
data16
xchg
out
inc
pop
xchg
inc
shll
sbb
out
test
mov
push
daa
dec
cmc
aam
mov
jne
mov
cmc
cmp
movsl
push
xchg
xchg
pcmpeqw
shr
sarb
inc
xor
sbb
jp
test
mov
repnz
cwtl
dec
adc
jle
es
aad
bound
aas
insl
leave
cmp
add
lock
dec
pop
xor
ss
or
fisttps
rclb
jb
add
andb
xor
das
loope
sbb
test
pop
mov
lods
or
xchg
lea
adc
iret
test
mov
xor
fisttpll
mov
jae
xor
mov
cmpsb
lea
push
add
lcall
shll
and
pusha
mov
xor
icebp
dec
daa
loope
fstpl
and
mov
fisubl
mov
xchg
inc
cmc
call
pop
shr
add
adc
dec
mov
lods
jge
movsl
mov
xor
nop
cmp
fcos
scas
repz
add
lret
jmp
mov
hlt
pop
cmc
out
rclb
insl
in
ret
inc
cmp
mov
in
sahf
data16
rcl
xor
daa
jge
bound
dec
cmp
sbbl
inc
dec
ret
jle
loop
int3
or
in
sbb
jle
pop
push
insl
mov
jnp
repz
xor
adc
xor
mov
add
add
pop
add
lock
cmp
adc
lea
testb
roll
ret
cmp
fdivl
fucomi
mov
das
adc
pusha
popf
add
push
xchg
sub
or
inc
cmpl
and
divl
sti
push
outsb
cli
rclb
xor
clc
dec
sub
and
popf
loop
out
push
xor
repz
pushf
xchg
inc
sub
je
mov
push
mov
jo
cmp
sub
scas
lods
in
pusha
cwtl
into
xor
sub
inc
xchg
jbe
sbb
cld
push
lods
adc
cmp
fwait
or
inc
les
xor
push
mov
js
int
shlb
push
mov
lea
pop
or
xor
stos
sub
sbb
xchg
int3
jns
adc
adc
outsl
push
rcrl
adc
ljmp
mov
fdivrs
adc
incl
dec
mov
push
inc
mov
mov
xor
das
sub
mov
arpl
fldl
popf
push
mov
mov
das
dec
data16
xor
jp
in
jae
and
lret
mov
cmp
cmpsb
push
cmpsb
sub
push
adc
repz
mov
in
stos
in
rclb
pushf
xor
mov
subb
fwait
push
aam
push
test
mov
int3
jno
seto
mov
in
mov
jg
jno
jbe
arpl
pop
bnd
mov
adc
cs
ja
imul
inc
in
outsl
xor
ds
je
cmp
xlat
cmc
xchg
jle
dec
xor
sub
lock
xchg
popf
loope
std
mov
test
hlt
lods
mov
pop
aad
push
aam
out
cmpsl
sub
mov
cmp
ret
add
cs
add
pop
push
pushl
jp
ss
shlb
sub
dec
xor
mov
icebp
lods
and
fwait
push
adc
movsl
cmp
sbb
in
out
and
clc
push
inc
rcl
mov
loope
jb
xchg
imul
out
cli
hlt
les
and
sub
dec
scas
ret
pop
pop
or
or
imul
add
aaa
lods
out
lcall
xchg
adc
sub
popw
les
leave
jbe
enter
xor
inc
sub
mov
adc
cs
and
int
cmpsl
push
jne
xor
ja
and
lahf
sub
outsl
ljmp
pop
outsb
jg
sbb
inc
ss
mov
xchg
sbb
push
or
xchg
mov
shlb
outsb
add
lret
outsl
mov
inc
and
sub
dec
stc
add
jbe
add
mov
xchg
push
add
xor
sbb
fcmovnb
ss
fimull
lea
js
pop
adc
mov
pop
sarb
xchg
in
sbb
incb
cs
sarl
stc
jnp
pop
lock
xchg
xor
in
mov
lret
xor
xchg
sti
xchg
mov
sub
out
mov
and
xchg
dec
and
push
repnz
dec
pop
push
test
or
call
into
iret
adc
lcall
dec
cmp
mov
icebp
mov
adc
mov
mov
sbb
xor
nop
jbe
movsl
xchg
jg
add
jns
filds
ja
mov
cmp
addr16
in
pop
and
ret
adc
pop
dec
add
jae
mov
cwtl
mov
fldt
insl
lret
mov
shll
aad
cltd
insl
mov
in
xor
or
sbb
hlt
sti
xor
dec
in
scas
dec
push
pop
dec
jge
sbb
ret
pushf
dec
push
lods
repnz
fdivrl
xlat
pop
xchg
xchg
mov
and
icebp
jle
mov
aas
stc
icebp
lods
repz
dec
test
fadd
test
les
popf
in
test
dec
xor
out
imul
mov
push
xchg
mov
les
sbb
cs
lods
out
pushf
add
test
daa
push
shl
out
mov
nop
cmp
out
xchg
test
dec
mov
mov
fwait
lret
lret
test
xchg
ror
jge
pop
push
and
scas
mov
movsb
addr16
arpl
jle
adc
push
pop
test
jbe
mov
lods
dec
mov
mov
or
xchg
clc
add
or
mov
jle
xor
inc
scas
mov
test
rolb
in
jmp
sbb
loop
aad
cwtl
or
movsl
int
add
xor
ja
arpl
xor
fiaddl
dec
mov
add
add
in
in
bound
les
sub
add
dec
cmpsb
dec
sarl
mov
scas
mov
pop
ds
push
lret
and
mov
pop
sbb
xchg
fwait
movsl
xor
xor
dec
mov
iret
jge
addr16
jmp
cmp
mov
pusha
push
fs
dec
and
cli
test
shlb
jb
cwtl
cli
mov
ret
mov
dec
sub
ret
out
add
dec
call
cmp
mov
les
or
daa
orb
icebp
lods
outsb
jp
adc
xchg
shrl
xchg
xchg
jmp
jbe
jbe
stc
dec
mov
in
mov
js
push
dec
or
fidivl
repz
push
jle
cmc
mov
mov
inc
fst
fimull
add
mov
mov
jns
push
mov
decb
xchg
in
xor
push
shrb
test
pop
pop
repnz
push
popa
aam
mov
rclb
loope
lahf
jo
dec
nop
pop
out
inc
bound
push
jp
cmpsl
enter
xchg
or
push
daa
mov
mov
jno
popa
cmc
sbb
stos
insl
pop
adc
testl
push
add
adc
sub
stos
mov
push
sahf
dec
rcrl
stos
rorl
lds
xchg
loopne
popa
cmp
enter
jg
xchg
stos
out
xor
dec
push
mov
bound
insl
dec
add
scas
mov
imul
lock
and
cltd
nop
lcall
lock
jp
add
test
adc
xchg
fwait
in
mov
xor
mov
enter
popa
emms
fdiv
insl
push
push
mov
test
das
les
hlt
lods
mov
icebp
out
inc
push
mov
sbb
popa
aaa
xchg
xchg
pop
mov
bndldx
jnp
fwait
add
out
dec
lea
jmp
outsb
pop
test
mov
cmpsl
push
mov
jno
jae
jnp
mov
push
or
and
pop
test
lock
jne
sub
leave
decb
push
cli
or
daa
sub
or
jae
dec
xchg
add
cmpsb
out
sub
ljmp
pop
adc
ret
inc
xor
cmp
mov
data16
ret
push
subl
mov
fsubrl
pushf
mov
call
les
in
jg
add
mov
cmpl
dec
ficoml
inc
push
sub
jl
mov
aad
jns
jle
dec
dec
loop
shrb
addr16
jl
jmp
jnp
loopne
jp
mov
mov
add
or
ljmp
dec
mov
mov
and
popl
mov
push
out
jp
enter
jg
aam
mov
dec
enter
mov
icebp
mov
push
cs
dec
adc
inc
testl
mov
sahf
lods
pop
jbe
dec
mov
aad
push
mov
outsb
out
cmp
sbb
stos
mov
sbb
sti
jg
pop
addb
jb
add
sub
lahf
pop
dec
lret
das
dec
enter
and
mov
imul
xchg
mov
push
cld
rcrb
xor
pop
adc
dec
fwait
dec
rorb
inc
xor
cs
xchg
cld
orl
add
ljmp
pop
stos
push
xor
dec
xchg
imul
cmovno
popf
or
jp
sub
scas
loope
stc
les
mov
mov
xor
sbbb
add
mov
cmp
sti
cli
pushf
push
xchg
mov
sub
rcrl
inc
arpl
mov
or
lds
imul
add
inc
push
inc
test
lcall
rcrl
dec
subl
fninit
scas
fwait
push
inc
out
dec
mov
shlb
sub
mov
push
stc
imull
pop
leave
int3
jg
mov
jae
cmpsb
adc
sub
mov
outsb
sbb
mov
push
outsl
add
adc
mov
xlat
jmp
decb
mov
ljmp
in
cld
sar
sub
cmpsl
imul
mov
xor
in
aas
cmpsl
mov
push
test
mov
aam
jb
add
dec
movsl
mov
out
dec
aam
lds
jne
inc
fstpl
push
test
and
jge
loopne
inc
scas
push
call
dec
lret
addr16
push
push
lea
nop
sbb
pop
xchg
loope
lods
mov
fisubrs
sbb
adc
aad
pop
mov
sub
scas
js
stos
xorl
imul
test
cmp
rorb
lret
mov
sti
enter
lods
iret
inc
imul
pusha
pop
cmp
lods
leave
incb
clc
shlb
jp
jl
push
lods
inc
xor
push
jo
jge
inc
int3
sub
clc
fwait
inc
xchg
outsl
fs
test
mov
jmp
imul
imul
int
dec
mov
cmp
loopne
mov
pop
push
mov
repz
imul
rcrl
pop
cmpsb
divl
fcompl
out
nop
mov
stos
xor
rcr
pop
push
gs
cmp
and
inc
leave
and
fnstenv
and
popf
test
dec
aaa
xor
add
mov
xchg
sbb
pop
mov
insb
in
pop
ja
pop
test
cmc
mov
jnp
lea
out
in
scas
cli
ljmp
push
sti
loop
lret
add
outsl
or
mov
dec
mov
fldenv
mov
push
dec
aaa
testb
flds
shll
ror
mov
in
mov
call
lds
hlt
sarl
adc
imul
fisubrl
pop
test
add
pop
dec
adc
or
js
or
push
hlt
andb
dec
cmpsb
lcall
xor
dec
lds
cmpsl
ja
ja
xchg
xchg
stos
or
mov
cmp
add
push
mov
lret
idivl
aam
arpl
es
jmp
mov
das
test
mov
pop
sbb
cmc
ret
cwtl
cs
mov
lret
pop
sbb
sti
cld
lock
mov
cld
pop
bound
mov
mov
cli
dec
mov
adc
ficoml
outsl
shlb
xor
scas
dec
dec
ret
gs
push
cwtl
push
xor
xchg
hlt
jp
daa
cmp
pop
mov
jns
dec
cmc
xchg
lods
add
lcall
jp
pop
ss
inc
xor
mov
fldenv
leave
daa
test
subl
aaa
ss
xor
fdivrs
pusha
leave
aad
mov
imul
nop
orb
scas
fadd
lcall
add
in
and
shll
aaa
int
ret
call
lods
rorb
sub
pop
cmp
or
cltd
pop
out
inc
sub
jns
int3
xor
sub
inc
sub
sub
mov
in
jo
insl
jne
outsb
jge
or
sbbb
or
cmpsb
adc
out
mov
dec
fistpll
pop
in
pushf
pop
jo
or
mov
adc
jge
loope
mov
add
std
cld
xchg
or
enter
fcoms
xchg
mov
mov
dec
fcoms
push
aas
xor
dec
dec
sub
push
jb
fs
xchg
loopne
push
jno
xor
xor
addl
cmp
dec
push
sbb
sbb
fldcw
cmp
fldcw
adc
jmp
inc
subl
imul
call
push
je,pn
add
fistps
dec
push
add
sbb
js
aam
pop
pushf
mov
aaa
and
lods
les
xadd
push
mov
mov
mov
pop
mov
xor
mov
repz
jmp
out
mov
fwait
pop
xchg
in
lcall
pop
data16
lahf
inc
inc
lods
inc
mov
mov
mov
sbb
mov
pop
mov
cmpl
xor
and
dec
mov
inc
pop
cmp
out
lods
jg
adc
dec
out
push
ja
hlt
lods
pop
std
out
mov
cmp
xchg
or
dec
xchg
daa
arpl
xor
and
dec
or
adc
xchg
shl
mov
pop
lea
jecxz
jb
and
sbb
js
imul
mov
sbb
jne
or
xor
lea
movsb
push
lret
cli
jne
push
fistpl
xlat
test
adc
inc
dec
mov
or
sbb
lret
push
inc
mov
sbb
cmp
aad
pcmpgtd
scas
dec
stos
je
ljmp
roll
or
add
sbb
scas
sub
mov
ss
lock
sahf
pop
ret
seta
xchg
sbb
inc
iret
daa
pop
mov
dec
push
gs
test
and
mov
mov
push
jmp
mov
pop
fs
in
shll
out
push
nop
ljmp
cmc
lret
pop
fldt
dec
andl
inc
pushf
fistps
out
es
cmp
adc
push
loop
loope
add
mov
mov
ds
xchg
xlat
xchg
sub
jl
xlat
aaa
ja
mov
roll
icebp
and
xor
icebp
popf
jo
mov
popf
dec
stos
mov
push
sub
jno
repnz
dec
xchg
cmp
mov
add
pop
popf
fiadds
testl
lods
clc
jg
outsl
into
mov
mov
fildl
int
xor
push
sub
mov
add
mov
adc
loopne
stos
or
in
pushf
xor
adc
or
xlat
mov
psllw
adc
xchg
sbb
int
std
push
xlat
lds
mov
xchg
lds
enter
mov
test
iret
jg
cmc
cmc
pop
stos
movsl
cli
mov
jo
mov
mov
mov
adc
adc
push
dec
inc
mov
repz
sub
idiv
shlb
js
jne
nop
int
mov
and
pop
lcall
mov
mov
adc
test
sbb
cmpb
dec
and
movsb
out
push
das
push
movsl
sub
dec
cmp
in
mov
fistl
shrl
jnp
dec
xchg
push
xor
jl
pop
cmp
ret
mov
inc
rolb
andl
ljmp
pop
add
adc
xchg
leave
push
jo
ret
scas
sbb
fstpt
xor
je
enter
gs
inc
jno
rdpmc
sub
aas
cmp
fistl
inc
aaa
fildl
adc
stc
and
mulb
jbe
jp
lret
mov
or
xor
adc
leave
xor
fwait
icebp
mul
dec
jg
inc
mov
sbb
shlb
lods
nop
addl
xor
add
jge
inc
cmpsb
push
fldlg2
mov
nop
push
xchg
gs
ljmp
je
sbb
jl
mov
fsubs
cmp
imul
or
pcmpeqb
stos
lret
hlt
jb
jp
pop
pop
adc
outsl
and
inc
dec
dec
mov
mov
cmpsl
pop
stc
cwtl
pop
sbb
push
scas
ds
xor
mov
cmc
cmp
outsl
sub
js
dec
push
xor
jns
adc
xchg
sbb
jge
pop
scas
shrl
pop
adc
sti
outsl
adc
inc
test
jbe
push
jns
lods
sti
pop
jns
jp
add
cmp
pop
pop
fwait
or
loopne
cmp
sbb
arpl
sub
and
or
lahf
mov
lahf
clc
push
push
mov
out
cmp
ja
and
out
push
jnp
cmp
or
scas
xorl
cltd
daa
jge
add
jb
xchg
inc
mov
repnz
adc
mov
and
xorl
shr
int
xchg
jae
or
outsb
sbb
aad
mov
iret
les
jbe
cmp
incb
add
lods
dec
pop
sahf
push
fimull
mov
fisttpll
sub
sti
cmc
imul
pop
into
adc
lds
inc
dec
or
pop
in
xor
sbb
xchg
das
fisubl
cmp
lods
cmp
adc
lahf
xchg
lret
jae
ret
inc
sti
scas
cmc
mov
nop
inc
fadd
mov
call
sti
cmp
insb
mov
leave
add
pushf
pop
adc
jb
fimuls
jnp
and
das
adc
ss
and
repnz
and
scas
ja
jo
push
add
out
pop
stc
stos
mov
jb
sti
shl
or
test
xor
or
jo
jge,pn
lods
xchg
pop
out
push
push
sbb
insl
fprem
xchg
or
jecxz
cmpsl
xor
xchg
pop
dec
lock
inc
pop
xchg
inc
sbb
lods
mov
jnp
arpl
cltd
ud2
mov
push
cmpsl
mov
mov
jne
pop
test
out
jne
pop
xchg
aaa
cmp
mov
xchg
jnp
fnsave
inc
roll
mov
jbe
push
pushf
lock
stos
leave
sub
ret
xchg
call
sti
cmp
icebp
mov
mov
cmp
adcb
inc
push
lea
scas
cmp
push
repz
sbb
jno
gs
xlat
adc
fwait
jmp
mov
add
jb
hlt
mov
repz
out
and
shr
xchg
xchg
or
push
xchg
aas
imul
xor
daa
out
cs
and
sbb
mov
pop
xor
loopne
leave
cs
in
mov
push
xchg
xchg
sbb
pop
or
hlt
xchg
mov
and
das
sbbw
cmp
mov
cmpsl
sbb
sbb
fwait
mov
jmp
lds
inc
sbb
sbb
dec
enter
push
sbb
pop
push
push
bound
dec
cld
aas
pop
dec
cmp
out
inc
xchg
or
xor
pop
jp
ds
or
push
dec
repnz
cmp
rcrl
xorl
pop
shll
rorl
mov
mov
and
cmpsb
add
aad
std
insb
arpl
dec
xchg
cli
or
sti
sahf
xchg
pop
cltd
pushf
jne
adc
pop
push
scas
fidivl
test
daa
inc
xor
pop
or
pop
lds
imul
inc
jecxz
dec
push
iret
and
mov
scas
cmpb
and
shlb
arpl
mul
pushl
pusha
pop
adc
sbb
xor
daa
loope
ja
jns
mov
orb
pop
mov
mov
and
sbbb
xor
cmpsb
imul
or
les
pop
jbe
minps
add
inc
pop
jae
fnstcw
mov
fcmovnu
gs
inc
fnop
out
inc
les
sbbb
int
test
decl
pop
xlat
mov
test
dec
pop
jns
mov
cmp
std
mov
cmp
scas
sbb
mov
mulb
cmpsl
push
fwait
dec
sarb
jns
mov
mov
test
fldenv
add
jbe
and
or
mov
adcl
addr16
pop
pop
mov
lock
cmp
xchg
mov
adc
and
xor
test
lahf
or
jb
dec
movsl
test
lea
cmpsl
lods
pop
cmp
cmpsb
jmp
mov
sbb
nop
sbb
les
loope
out
mov
out
or
pop
mov
rorb
dec
scas
jmp
les
or
lret
push
inc
mov
out
xchg
and
sbb
fs
test
loope
loop
jecxz
shl
js
inc
fsubr
inc
cltd
sub
fwait
mov
lods
jl
push
sub
aaa
sbb
push
imul
dec
outsl
outsb
fmull
fcmove
aaa
dec
inc
pop
sub
sbb
push
add
fbld
ja
sti
pop
cmp
lods
pushf
sahf
fwait
cmp
jge
cmp
sbb
test
mov
inc
xchg
mov
sbb
xchg
pop
push
push
and
dec
shlb
sub
movsb
mov
iret
sti
lret
push
jno
dec
out
popa
in
test
out
int3
pop
loope
imulb
add
loopne
iret
mov
and
repnz
inc
mov
jbe
add
or
iret
mov
dec
inc
push
and
sbb
rcl
jmp
dec
adc
jne
dec
call
ret
mov
mov
sar
pop
aas
aam
jmp
popf
push
out
dec
cmp
scas
ljmp
out
push
push
mov
jbe
imul
dec
mov
shrb
lret
xchg
pushf
int
push
mov
add
xchg
in
jmp
mull
fimuls
push
dec
dec
out
mov
leave
int3
sarl
cmp
xchg
subb
test
clc
push
enter
xchg
push
mov
in
dec
mov
sahf
xor
dec
mov
lret
lods
jno
sbb
or
negb
mov
jne
std
cmp
ss
or
repnz
mov
cmp
stos
scas
mov
xor
dec
adc
out
inc
xlat
pop
in
sbb
mull
mov
mov
iret
pop
ds
inc
jmp
inc
dec
jmp
in
and
insb
sbb
test
aaa
fists
mov
dec
cwtl
inc
mov
pop
rorl
hlt
call
adc
cmp
dec
cmpsl
hlt
or
shrb
xchg
inc
lret
repnz
ja
or
pop
out
dec
cwtl
mov
lods
jmp
in
popa
inc
clc
aaa
mov
out
inc
inc
push
insl
cs
pop
or
testl
popl
pop
mov
pop
jo
in
ficompl
fsubs
outsb
jecxz
andb
dec
aad
imul
jne,pt
data16
mov
fidivrl
insb
aam
or
insb
in
push
mov
lods
jmp
pop
push
push
into
sub
fisubs
popf
ljmp
icebp
std
sbb
stos
mov
sarb
hlt
dec
ret
xchg
push
dec
sarb
int
xchg
add
inc
ja
dec
push
dec
sti
sub
pop
push
push
sbb
dec
inc
inc
jp
mov
enter
mov
pusha
aaa
aam
add
sbb
out
js
jmp
inc
jae
sarl
pop
or
ja
push
jg
ljmp
lods
jae
test
mov
push
in
lea
rcr
aam
rcrb
mov
pop
cmp
or
inc
mov
aam
loop
cmp
aas
fisttps
xor
dec
add
cmp
ja
add
pop
or
call
xchg
sbb
out
jp
out
inc
inc
adc
inc
sub
mov
jo
push
sbb
ljmp
ja
imul
mov
aas
mov
test
jl
out
push
and
adc
push
lods
ret
mov
inc
pop
inc
pop
xor
pop
adc
scas
fs
xchg
sbb
jno
jno
loope
adc
jnp
daa
nop
es
cltd
add
cltd
pop
repnz
sbb
and
fistps
lcall
and
aaa
sbb
fcmovnu
in
mov
dec
je
bound
lret
or
leave
sbb
in
push
mov
xor
rcrl
fsqrt
or
popa
popa
fists
icebp
cmpsb
push
xlat
int3
cmpsl
rorl
push
mov
sarb
daa
adc
push
bound
lods
inc
push
cmpsb
push
push
dec
xchg
adc
xor
and
dec
jl
lea
loopne
add
mov
mov
loop
outsb
fiaddl
lret
inc
xor
jmpw
sub
cmp
movl
pop
jl
lods
aaa
push
mov
cli
sahf
xor
sub
jnp
roll
in
mov
jb
mov
cmp
dec
add
inc
inc
dec
xchg
fwait
mov
ja
push
sarb
xlat
pop
stos
jo
cld
out
imul
call
pop
or
pop
cmc
inc
hlt
test
pop
sbb
into
sar
out
sahf
sub
xchg
nop
scas
pop
sbb
aam
ja
sbb
pcmpgtd
pop
jmp
pcmpgtw
aam
fcomi
adc
push
test
xchg
inc
push
insl
cmp
sbb
movsl
mov
mov
push
push
test
fmul
scas
cmp
mov
pop
mov
jae
out
notl
fs
imul
pop
inc
sbb
loop
mov
adc
addl
sub
in
cs
xor
pop
gs
push
lock
jne
leave
lds
cmc
addr16
mov
pushf
xchg
push
xlat
out
faddp
lods
add
add
outsl
jnp
push
fstps
mov
in
and
xor
clc
cmc
mov
sbb
mov
xchg
push
jns
adc
cmp
jo
mov
rcll
jo
gs
cli
push
mov
xor
in
mov
test
add
repnz
fwait
mov
cld
jle
hlt
mov
add
mov
in
rcr
cs
jne
cltd
pop
movl
lods
sbb
and
mov
lods
shrl
pop
orl
push
dec
dec
hlt
aas
lods
inc
mov
daa
pusha
loope
mov
cmp
xor
sbb
cmpsl
loop
cmp
cmpsb
aad
push
pop
dec
pop
mov
jecxz
jecxz
xchg
mov
and
int3
or
shll
add
jmp
loope
sub
sub
leave
jge
gs
xchg
add
shrb
xchg
sahf
stos
sbb
and
dec
mov
jp
mov
enter
idivb
fwait
jp
lcall
in
xor
mov
adc
xor
out
adc
fisubrs
dec
mov
sbb
push
out
das
mov
push
je
hlt
lock
inc
jl
jns
sub
jns
dec
pop
test
neg
es
fisubl
iret
popf
hlt
xor
enter
addl
sbb
push
dec
and
mov
lods
mov
push
dec
pushf
das
push
xor
cmp
pop
dec
add
lret
adc
mov
dec
subl
lahf
dec
fdiv
lods
jbe
mov
mov
sti
sub
cli
test
outsl
loopne
loop
inc
mov
data16
pushf
out
inc
rorl
ja
pop
je
in
xor
xchg
or
rorb
movsb
add
lcall
mov
jp
fimull
pop
xor
mov
popf
bswap
sbb
jo
jo
add
adc
push
mov
test
cs
xor
sbb
loop,pt
test
xor
lods
sarl
pushf
sbb
movsb
sub
cmpsl
xorb
dec
pop
scas
in
loopne
jns
stos
out
lea
xchg
test
mov
fwait
sarb
divl
adc
mov
push
jecxz
lds
pusha
call
add
ds
xchg
fstpl
bnd
std
push
dec
dec
add
sub
jle
idiv
ret
leave
aaa
xor
adc
dec
add
orb
in
les
inc
fnstenv
cmpsb
and
fildll
stos
adc
ror
push
pop
pop
inc
mov
int3
mov
sub
ret
mov
mov
or
jnp
inc
cmpsl
jge
mov
xchg
dec
inc
aas
mov
psignd
mov
imul
test
cmp
ja
mov
mov
imul
insb
repz
xor
dec
sar
dec
cmp
lock
inc
xchg
adc
mov
insb
dec
push
xor
icebp
mov
das
mov
xchg
jno
mov
cmpsb
xlat
das
adc
cmp
xor
mov
mov
stos
mov
and
xchg
dec
xchg
adc
dec
cmp
xchg
mov
lea
push
mov
mov
popf
jno
fmuls
adc
pusha
cs
mov
sbb
shll
jno
cld
jae
xor
sbb
std
iret
or
out
xchg
and
or
sub
pop
lret
shrb
divb
lret
add
test
adc
std
sub
rcll
sub
mov
or
lods
jns
inc
jle
cmp
jno
sub
or
mov
test
sti
test
inc
inc
add
ljmp
mov
and
test
xor
dec
movsb
pop
xchg
sti
pop
es
adc
xor
sub
xchg
inc
xor
mov
cmpsb
push
mov
mov
cmp
fisttps
add
push
fcomps
je
add
xor
push
shll
pop
fwait
rorl
imul
pop
mov
je
inc
scas
jb
leave
stos
lea
push
mov
fwait
adc
push
xchg
or
mov
fsub
inc
pop
jge
into
repnz
xor
add
xor
sbb
cmpsl
fcoms
or
sub
call
or
std
movsl
test
dec
pop
es
test
ficompl
lcall
andb
movsl
ss
xchg
push
mov
int
pop
ret
aaa
lret
dec
push
mov
add
adc
cmpsl
cmpb
fdiv
fimuls
mov
mov
mov
sub
icebp
add
sbb
push
mov
cvtdq2ps
rolb
and
cmp
push
mov
outsl
lods
loopne
pop
fistl
sahf
clc
ret
xchg
add
add
jnp
pop
mov
push
sbb
push
jne
ret
cmpsl
icebp
pop
fdivl
adcl
and
mov
test
cmpsb
or
clc
push
lret
loopne
lahf
lods
lahf
lea
xor
sub
sub
shlb
or
push
fisttpll
xor
push
int3
loopne
insl
push
jae
mov
xchg
sub
xchg
cltd
imul
jp
mov
imul
movsb
mov
sbb
or
call
push
sbb
mov
push
push
lret
call
xor
icebp
fistps
lahf
cmp
loopne
pop
mov
push
mov
cmpsb
lcall
xchg
adcl
cmp
and
push
add
sub
in
movsl
sbb
adc
pop
and
insl
cmp
xchg
xor
roll
pop
add
pop
jns
sti
ljmp
push
push
adcb
imul
push
cwtl
xchg
cmp
mov
fcmove
inc
adc
fdivr
call
sbb
dec
dec
test
roll
push
add
ss
dec
pop
cmp
sub
xchg
int3
ret
jecxz
push
insl
arpl
pop
fwait
adc
shll
pop
add
xchg
inc
jmp
call
shll
xor
mov
aaa
pop
inc
xor
pop
mov
cmp
push
cmpsl
adc
and
mov
pop
and
scas
add
cmp
shl
push
pop
dec
dec
scas
push
mov
jb
add
and
loopne
popf
pop
xlat
dec
cltd
adc
mov
addr16
loope
mov
lcall
scas
xor
rcrl
es
mov
roll
loop
cmpsb
add
xor
xchg
and
add
cmp
pop
das
int3
jno
sbb
xchg
mov
cmp
fdivr
xchg
add
imul
mov
fidivrs
jns
cmpsl
mov
rolb
jg
jg
jno
xchg
push
lahf
add
ret
push
outsb
stos
xor
in
add
jns
and
dec
add
hlt
cmp
xor
xor
cltd
imul
jae
xor
cltd
mov
mov
leave
pop
dec
dec
adc
sbb
jge
mov
sub
cmc
lea
cld
pop
int3
ss
cltd
mov
out
inc
fs
pop
gs
out
and
lcall
pop
aam
int
out
mov
mov
xor
xlat
stos
sub
sbb
cmpsb
inc
shll
ds
pop
std
sub
mov
outsb
pop
mov
push
mov
inc
pop
push
jmp
lret
loopne
sub
cmp
test
push
imul
fnstenv
je
mov
jne
lock
aad
mov
int3
jecxz
jne
jmp
imul
imul
pop
xchg
dec
lcall
lea
jmp
mov
push
test
inc
imul
jno
jp
mov
in
push
push
inc
pop
jbe
mov
int3
insl
lods
or
pop
movsb
mov
mov
bound
stos
pop
das
push
rcl
es
mov
adc
popa
pop
movsl
mov
pop
shrb
pop
xchg
and
cmpsl
push
sub
inc
mov
mov
and
jnp
je
cmpsb
sbb
icebp
inc
fisttps
iret
adc
aas
sbb
sbb
mov
lods
or
mov
dec
cwtl
jo
cmpsb
push
test
mov
fnstcw
sbb
les
mov
out
xchg
xor
pop
sbb
shrl
adc
fstp
and
xchg
lcall
dec
ljmp
and
mov
imul
ss
dec
xor
mov
dec
or
shlb
into
outsb
push
inc
mov
rcrb
inc
inc
popf
pop
push
mov
fwait
or
int3
subb
dec
xchg
inc
rcrb
std
mov
imul
xchg
imul
jp
xor
lret
cs
push
js
das
cmp
nop
scas
sbb
push
into
mov
mov
and
push
shr
mov
shlb
xchg
mov
icebp
or
add
aad
test
sbbl
jno
fcomps
adc
sti
rclb
mov
xchg
adc
test
es
icebp
cmpsl
sub
fistpl
clc
pop
pop
xchg
lahf
pop
int3
rorl
int
insl
dec
cmp
cmp
fmulp
sbbb
insb
mov
loope
jl
movsb
cmpsl
outsl
ret
or
out
cmp
cwtl
ret
loop
ret
ja
or
in
imul
xlat
ret
addr16
jg
mov
or
ficoms
into
insl
popf
in
mov
xchg
fimuls
icebp
int3
sbb
insb
mov
xchg
inc
ret
or
jmp
lcall
icebp
mov
cmpsb
push
xlat
std
out
das
test
push
out
rcrb
dec
sbb
dec
imul
mov
mov
call
add
ret
pop
dec
les
repz
adc
fmull
in
icebp
aam
cmp
stos
or
iret
sahf
mov
add
xor
lret
popf
xchg
sahf
fistps
xlat
mov
fiadds
dec
fsubs
jo
xor
mov
pop
shrl
movsb
clc
lock
pop
or
xor
sub
cmpsl
rorb
cmpsl
cmc
mov
dec
mov
test
and
movl
clc
iret
ret
lret
sub
push
ljmp
bound
dec
fiaddl
cmc
xchg
and
add
mov
nop
ret
bound
or
lret
sub
jo
inc
fsubr
inc
mov
mov
xchg
xchg
xor
push
nop
xchg
pop
in
in
xchg
add
xchg
jge
xor
xchg
das
pop
imul
rcr
or
jge
xchg
xor
push
bound
or
popf
out
xchg
and
pop
lret
or
shlb
or
inc
daa
icebp
sub
xorb
andb
pushf
cld
fidivs
mov
sub
xchg
adc
inc
fildll
push
loopne
add
aas
inc
popa
dec
push
imul
repz
xor
clc
add
dec
cmpsl
push
pusha
mov
test
andl
and
ds
es
jge
mov
jmp
pop
pop
jge
dec
xchg
mov
xchg
cld
or
aad
or
movsl
and
adc
jno
out
sar
sub
xor
cmp
lret
xor
jle
jl
cld
push
movsb
sub
jb
in
inc
dec
push
and
mov
add
std
lret
insb
sbb
xor
in
pusha
xchg
xchg
sub
pop
xchg
inc
test
xlat
mov
add
xchg
stc
fmull
add
inc
xchg
or
loopne
test
xchg
sub
sub
imul
decl
in
sbb
xchg
lret
ret
sub
push
jle
push
les
sub
xor
loope
in
adc
mov
pop
adc
ror
adc
hlt
imul
jnp
mov
in
cwtl
mov
icebp
push
out
rorb
adc
cmp
rcl
and
mov
xchg
aaa
cmp
lcall
mov
arpl
out
ss
es
sbb
xchg
jno
push
dec
repnz
and
out
cmp
test
fs
and
mov
dec
xchg
shlb
lods
out
bound
add
leave
mov
pop
add
adc
or
loop
cwtl
in
repz
shlb
in
pop
pop
out
test
pop
repz
pop
ljmp
dec
push
push
divps
push
scas
or
outsb
stos
xchg
add
rcll
insl
fwait
inc
sbbb
lea
pop
sub
pop
pop
jmp
cmc
pop
and
and
fstps
xor
push
ss
rcrb
pop
push
pop
or
loopne
inc
fs
xorb
cli
stos
scas
mov
push
imul
rcrl
sub
mov
jp
fimuls
xchg
sub
pop
aam
imulb
pop
mov
inc
ficomps
push
mov
inc
cld
es
in
xor
xchg
xchg
iret
cmp
push
jnp
xchg
cmpsb
mov
fwait
mov
je
cwtl
lea
cmpsl
jnp
sub
into
xor
and
xor
pop
inc
mov
mov
mov
outsl
ret
dec
fisttpll
fidivrl
js
mov
mov
repz
stos
dec
rcrl
and
pop
arpl
dec
mov
cmpsb
pop
xlat
int
int3
int3
xchg
xor
xlat
lock
mov
cmp
mov
sub
loope
cmpsb
pop
insb
adcl
movsb
pop
inc
rcrb
xor
out
std
or
aam
xchg
outsl
jecxz
les
rorl
xchg
ret
pop
ret
or
mov
dec
shrb
jnp
fsts
das
jle
js
and
iret
mov
dec
sar
cmpsl
pop
mov
pushf
orl
mov
outsb
mov
or
fiadds
leave
mov
inc
mov
cwtl
sarb
sbb
aaa
jno
stos
fsubp
jae
inc
fistpl
cmp
cli
sub
xor
xchg
cmp
push
imul
xorb
xor
sub
aam
mov
inc
push
arpl
sbb
clc
jge
mov
cmc
pop
sbb
in
add
cmp
mov
loopne
imul
mov
and
xor
loope
lret
stos
xchg
test
jnp
dec
leave
ficompl
iret
jno
lea
push
mov
ljmp
cmp
jno
sbb
int
jmp
addb
mov
leave
pop
pop
cmc
pop
xor
lock
mov
xchg
adc
aad
shrl
pop
jns
lahf
mov
mov
cmc
dec
or
out
nopl
sub
cmpsl
shll
pop
addr16
loop
jo
loopne
ds
cs
pop
pop
fsubrs
icebp
lret
fwait
mov
ret
es
divb
lea
add
mov
sub
and
sbb
dec
outsb
mov
aaa
jle
inc
shlb
inc
mov
enter
pushf
cmp
sub
cmp
in
adc
fnsetpm(287
mov
cmp
xchg
pop
mov
mov
aas
popa
mov
mov
jmp
sbb
mov
lods
mov
inc
test
mov
mov
mov
in
ret
pop
xchg
xchg
popf
dec
add
jg
data16
inc
cmp
call
in
pusha
sbb
loopne
jbe
sti
dec
or
dec
dec
mov
popa
cmpsl
gs
sarl
mov
xchg
mov
push
fmull
lds
mov
movsl
xor
ja
pushf
and
stos
movsb
cmp
scas
clc
and
mov
push
clc
repnz
in
std
push
popa
sbb
push
mov
loope
pop
ficoml
rcrl
pop
cmp
outsl
adc
icebp
mov
fmull
cmp
cld
in
dec
inc
das
add
negl
stos
fsubrl
mov
xchg
mov
cmp
repz
aaa
xor
sub
mov
xchg
push
rclb
inc
in
xor
rorl
sub
xor
mov
dec
and
inc
out
lods
gs
push
test
cmp
push
pop
jmp
insb
jb
inc
push
or
mov
and
stos
stc
pop
jno
sbb
inc
dec
cmp
stos
mov
fwait
lods
jne
inc
mov
cmc
sub
and
icebp
imul
push
subb
add
out
stos
mov
dec
mov
xchg
or
fdivr
aad
jae
imul
add
fcmovb
add
jb
xchg
inc
mov
out
mov
imul
xor
pushf
sti
sub
pop
jo
aas
cmp
sub
xor
xor
jg
in
fwait
jo
gs
adc
aam
icebp
scas
xor
cmpl
insb
test
push
push
std
sub
das
mov
imul
mov
inc
cmp
icebp
sub
xchg
ret
lock
sub
dec
cli
or
iret
dec
sub
sahf
sbb
pop
and
add
in
ret
inc
xor
ja
jmp
ret
sbb
add
fld
push
xchg
out
int
mov
daa
or
push
mov
mov
push
push
mov
es
inc
mov
xor
lock
xlat
or
lret
inc
test
loope
push
scas
popf
mov
sar
xor
xor
xchg
push
divb
pop
pop
fcomps
sub
dec
sub
imul
adc
dec
cwtl
aam
or
inc
jge
sbb
mov
je
movsb
pushf
jnp
adc
movsl
fists
sti
push
dec
arpl
hlt
add
dec
test
jnp
pop
pop
mov
mov
mov
jp
fisttpll
mov
popa
push
imul
cmpsb
scas
pop
mov
in
jl
rcrl
mov
hlt
add
xorl
fbld
ja
popf
cmpsl
and
or
add
cli
and
xchg
mov
push
xor
xchg
icebp
bnd
loopne
cmp
cmp
xchg
xor
or
cmp
ret
fwait
sbb
aas
fisubrs
mov
pusha
aaa
pop
stos
sbb
lds
mov
mov
push
fnstcw
imul
or
inc
aaa
jo
fisubl
adc
jp
js
jg
out
aaa
xor
jecxz,pt
or
jno
mov
movl
hlt
mov
pop
clc
pop
cmpsb
xchg
hlt
push
dec
sub
repnz
mov
xchg
push
cli
dec
jg
pop
push
pop
es
dec
jnp
pushf
loope
push
out
jl
xor
pop
icebp
shrl
xor
sahf
cmp
jae
add
jae
xor
jne
std
cmp
jno
lods
xor
cmp
inc
xchg
mov
lret
fwait
retw
cmc
subl
das
mov
in
ss
cwtl
bnd
add
in
inc
mov
cmp
jge
add
fcomi
mov
xor
imul
movsl
rcl
or
mov
fists
cmp
cmp
add
cmc
push
push
scas
xor
test
stos
je
sbb
mov
pop
shl
adc
mov
fsts
mov
jecxz
jne
cltd
mov
and
mov
movsb
xchg
in
pop
pop
inc
inc
cmp
pop
adc
jp
or
add
rolb
cld
xchg
sub
aaa
es
adc
pop
addb
pop
lahf
sbb
lods
imul
insl
mov
cmp
add
xchg
pop
fistl
mov
fcom
add
pop
addr16
or
cmp
or
adc
test
aaa
lea
shl
inc
dec
jno
push
jl
mov
sbb
arpl
jge
and
push
mov
jnp
movsl
and
int
mov
inc
and
out
inc
mov
mov
test
lahf
fstpt
xor
or
xchg
push
jmp
dec
add
cmp
inc
mov
push
aam
loope
pop
lret
push
out
push
in
ss
sbb
fdivrl
or
add
lock
loopne
in
sbb
jnp
test
mov
mov
pushf
xchg
lock
ds
lea
in
sub
inc
jmp
push
mov
or
ret
sub
ss
in
popf
stc
aas
adc
movb
xchg
ret
and
sub
push
xor
or
pop
pop
mov
push
div
and
imul
cltd
mov
cld
mov
movsb
pop
jecxz
jb
out
repnz
xchg
imul
sbb
dec
stos
aas
das
adcb
je
dec
xlat
adc
es
stc
cmpb
sbb
dec
outsl
mov
xor
jecxz
lret
test
xcrypt-cfb
cmpsl
bound
daa
or
lock
mov
div
fcoml
call
and
lret
orb
aam
test
push
mov
outsb
andl
cmp
mov
fsqrt
lret
dec
mov
xchg
pusha
ret
les
lahf
mov
add
loop
cmp
push
mov
cs
fdiv
sub
das
sub
into
mov
sub
push
scas
lret
cmc
inc
xor
dec
sbb
sbb
movsl
out
jecxz
ds
fwait
mov
clc
pop
jb
sbb
or
push
mov
test
roll
adc
in
into
imul
mov
scas
pop
mov
nop
dec
sub
nop
add
mov
mov
xlat
lret
inc
push
fildl
sbb
dec
aad
adc
xor
call
and
aam
xor
sbb
xor
push
sub
pusha
enter
cmpsb
out
or
cmp
dec
ret
out
or
and
repnz
and
sub
fnstsw
dec
in
xchg
jp
fisttps
mov
push
out
adc
xchg
icebp
push
mov
mov
mov
and
pop
insb
les
imul
fistpl
sub
push
and
xchg
enter
cmp
dec
into
dec
xchg
sti
mov
lahf
ja
nop
sbb
push
addl
pop
cmp
imul
loop
xor
pusha
jno
sub
sub
add
stc
mov
ror
mov
jle
loop
leave
ja
jbe
add
fnstsw
rclb
dec
mov
jne
mov
inc
test
pop
jno
push
or
popa
outsb
cmpsl
fisttpll
outsb
enter
inc
out
sub
sbb
pusha
pop
call
or
jb
push
and
aas
loope
jmp
shlb
jl
pop
add
fisttpl
mov
inc
ss
int3
test
test
mov
js
and
push
and
es
inc
push
sti
aad
sub
cmpsl
sub
pop
fimuls
mov
mov
jno
pop
xor
xchg
pop
add
add
add
sbb
pushl
leave
clc
pop
sub
mov
jge
data16
inc
sahf
imul
fdivrs
popa
mov
pop
repnz
mov
jl
dec
mov
test
iret
adc
mov
inc
in
outsl
cld
xor
outsb
sar
imul
mov
inc
lea
adc
jno
cmp
or
jle
mov
push
rcl
jecxz
pushw
jle
inc
insl
dec
adc
fcomi
push
shlb
sti
cmp
int3
sub
mov
enter
mov
xchg
xchg
aaa
add
call
mov
mov
mov
mov
xchg
pop
cld
pop
loop
pop
imul
in
loopne
xchg
xchg
push
and
pop
and
in
movsb
popf
popf
jg
push
xchg
dec
xor
cmp
jp
mov
mulb
xor
addb
jg
stos
out
daa
subl
popl
lea
or
push
popf
push
sti
data16
and
mov
jle
xchg
fimull
movsl
xchg
fisubrl
push
test
dec
iret
shlb
xor
out
rclb
js
movsl
clc
mov
adc
jbe
lahf
cmp
jmp
dec
push
lret
xor
out
sbb
popa
inc
mov
popf
jle
xchg
mov
dec
adc
loop
gs
cmpl
dec
mov
lock
bound
jmp
orl
sbb
mov
insl
ljmp
vsubss
scas
aam
imul
stos
pushf
jbe
sbb
orl
paddd
fmulp
sbb
lret
pop
or
or
xchg
out
rclb
and
xchg
outsl
cmp
jecxz
add
mov
cmp
movl
ds
add
rcll
add
mov
out
movsb
add
push
add
cmp
mov
add
shlb
iret
sbb
mov
cld
inc
xor
mov
ljmp
fs
sub
add
sub
rcll
fstpt
lcall
cmc
lahf
push
movsl
stc
sbb
popa
adc
enter
cmc
adc
repnz
xchg
movsl
mov
dec
xchg
lea
pushf
xchg
push
mov
addr16
fadd
iret
rcrb
push
nop
mov
inc
dec
jmp
cwtl
push
jae
ret
cmpsl
shrl
lods
mov
lahf
push
fisttpl
ret
push
push
add
jge
push
sbb
pop
mov
adc
loope
cmc
push
mov
sub
pop
mov
lahf
data16
cltd
imul
sti
frstor
inc
adc
cwtl
call
lret
mov
xchg
fs
lret
mov
dec
sub
je
mov
and
jecxz
addr16
add
xchg
push
mov
xchg
in
leave
pop
adc
cli
mov
je
and
push
inc
jbe
mov
outsb
dec
std
sti
fdivl
gs
jge
lods
cs
call
ljmp
test
xor
adc
mov
sbb
in
mov
adc
and
or
sbb
test
test
lock
sbb
clc
jne
inc
and
xchg
dec
dec
add
divl
mov
sub
and
lods
loopne
dec
jecxz
sub
dec
mov
push
push
inc
lret
or
xchg
cmp
jg
and
ret
jnp
or
sub
dec
adc
mov
mov
aam
xlat
and
cmc
xor
jne,pt
xchg
push
jl
push
clc
or
pop
sub
sub
or
fcoms
push
bound
lahf
ror
cmp
shl
nop
dec
imul
push
frstor
mov
cmpsl
adc
xchg
lret
ret
jne
sbb
cld
mov
pop
add
aam
sbb
shll
pop
call
xor
and
and
xchg
lret
pushf
push
rorb
cltd
push
loop
inc
nop
andl
xchg
ljmp
or
pop
sbb
pop
pop
nop
movsb
andl
clc
outsl
mov
out
cld
jp
imul
aad
out
dec
mov
mov
addr16
pop
sub
cmp
pushf
adc
dec
sbb
mov
enter
ljmp
mov
aad
popf
fsubrs
xor
fsubrl
mov
bound
and
in
loopne
lock
mov
cli
ja
add
pop
push
jp
sub
fists
inc
lret
xchg
cmp
pop
sub
add
and
add
jl
add
push
mov
cmp
xchg
mov
inc
push
shll
lods
leave
in
mov
lds
rolb
aam
test
sub
sub
cmpsl
loopne
dec
sub
scas
clc
mov
nop
xchg
aas
hlt
out
std
sbb
pop
inc
fldlg2
or
sub
dec
das
cmp
inc
hlt
pop
lcall
int
and
sub
xchg
les
mov
mov
cmp
sti
mov
mov
es
ds
pop
push
inc
adc
scas
gs
mov
cltd
jbe
jns
rcr
pushf
and
into
push
outsb
into
pop
push
imul
cmc
cld
scas
fnstcw
ret
inc
addr16
or
push
ret
stos
in
les
aas
sub
pop
ss
add
addr16
out
and
pop
popl
dec
sti
xor
test
mov
sub
call
pop
outsl
shlb
clc
outsb
enter
rolb
inc
sub
push
in
movsl
push
stos
in
inc
addr16
outsl
in
aam
sbb
imul
mov
test
push
push
flds
cmp
xchg
test
pushf
lret
sub
iret
adc
xor
jecxz
call
xchg
in
lcall
shlb
push
lcall
push
sti
sub
push
pop
and
loop
repnz
dec
inc
leave
xchg
sbb
sub
jp
cmp
cli
nop
dec
jno
shll
xchg
outsb
dec
int3
loope
gs
push
or
bound
push
jmp
push
xor
fldcw
ss
and
xchg
jae
inc
stc
mov
into
pop
hlt
adc
mov
test
repz
shl
xchg
push
jbe
subl
xor
pop
push
fiadds
imul
mov
adc
push
jo
dec
or
lock
in
pop
outsl
in
sti
cmp
jb
cmp
pop
outsl
xchg
or
mov
cmpsl
fnstcw
cmpsl
incb
cmp
pop
jo
arpl
ds
push
shl
jp
addr16
push
jmp
jecxz
dec
mov
jle
mov
adcl
dec
test
or
xchg
pop
xchg
xor
test
mov
inc
mov
cmp
add
addr16
ja
push
mov
ljmp
add
sbb
dec
xor
and
or
and
fwait
cmp
out
adc
jle
neg
fcompl
lahf
and
mov
mov
inc
ss
sub
aam
xor
movsl
cmpsb
mov
jp
cld
andl
push
es
jmp
adc
xchg
movsl
xor
dec
pop
or
or
jp
aam
dec
jge
sbb
mov
sbb
cld
cmp
pop
test
and
xchg
xchg
pushf
lods
stc
arpl
outsl
pop
dec
outsl
idivb
push
enter
dec
cmp
mov
aam
jle
gs
fists
add
fnstsw
arpl
popa
cmpsb
shrb
out
add
jne
insb
test
mov
inc
jae
push
jl
jns
data16
inc
and
xchg
js
test
dec
loopne
dec
pushf
push
jle
pop
mov
sub
in
pop
rcrb
je
lret
xlat
push
cmp
js
sbb
pop
fsub
loope
dec
inc
mov
push
mov
push
inc
dec
fstp
sub
in
adc
fisubl
or
inc
xor
sub
xlat
jnp
push
mov
sbb
pop
jno
mov
orb
mov
pop
jmp
in
adc
and
sti
mov
cmp
int3
imul
jb
pop
ret
clc
insl
sub
fldt
idiv
cmp
fiadds
pop
fnstcw
imul
negb
xchg
orb
test
aaa
jp
jmp
aas
inc
ret
mov
fldpi
and
mov
adc
cmpsl
out
mov
jne
inc
push
les
int
sub
das
test
mov
mov
mov
dec
push
dec
xor
pushf
shlb
fistl
lods
and
das
enter
cli
lret
aad
or
push
test
in
dec
push
imul
or
fs
xor
jns
jne
cmp
xchg
mov
mov
and
or
adc
mov
xchg
push
jo
add
sbb
test
dec
ret
in
js
outsb
mov
bnd
lret
ss
aad
add
enter
pushf
mov
outsb
fsubl
mov
sahf
cmp
shrb
pop
pop
jnp
jo
ja
movsb
pop
cmp
sar
sbb
js
sbb
jecxz
inc
daa
insl
movsl
push
cmp
jae
fstpt
or
mov
adc
data16
push
ds
stc
or
icebp
repnz
xor
mov
cmc
and
pop
sbb
mov
out
sti
out
stos
add
filds
clc
push
aad
ds
enter
mov
hlt
xlat
dec
pop
sti
or
and
mov
mov
test
cmp
ret
pop
data16
and
jl
add
test
mov
or
pop
dec
mov
out
xchg
shl
mov
jns
imulb
xchg
das
mov
sbb
pushf
dec
loop
je
scas
xor
mov
add
mov
insb
ret
aas
insb
mov
pop
xchg
loopne
mov
sbb
cmp
xor
jle
jecxz
lret
jns
ret
push
add
call
movsl
xlat
xlat
sbb
aam
js
arpl
pop
test
pop
repnz
sub
xchg
jne
push
addr16
pusha
out
sbb
mov
fdiv
ror
add
loop
incl
movsl
imul
push
lods
gs
cmp
push
cmp
shl
mov
push
cmpsb
sub
bound
je
inc
pop
roll
out
add
lret
popa
rorb
push
cmp
and
repnz
aad
lds
mov
inc
mov
push
xor
test
jmp
repnz
sti
pop
stos
add
sti
xor
lcall
xchg
stc
int
inc
dec
dec
mov
adc
mov
pusha
std
mov
xlat
inc
out
mov
mov
cwtl
pop
scas
push
push
mov
adc
or
clc
push
loope
sbb
cld
cli
add
faddl
ja
sbb
or
ret
mov
push
idivb
outsb
clc
popaw
in
out
int
xchg
mov
fmull
jge
xchg
cmc
int
jge
inc
mov
jno
inc
mov
cmp
jle
bound
dec
cmpsb
icebp
dec
call
sbb
testb
mulb
ja
and
dec
hlt
dec
mov
xchg
cmp
insl
aaa
pop
sbb
xchg
sbb
jne
mov
inc
mov
push
add
imul
stc
mov
fcmovb
xor
stos
mov
repz
roll
test
or
push
shrb
outsl
outsb
inc
mov
add
cmpsl
int
lret
ss
outsl
jns
mov
mov
es
inc
call
outsb
daa
mov
mov
addb
cltd
cwtl
movsl
xchg
int3
aaa
add
cmp
pop
outsb
and
mov
xchg
enter
in
jo
mov
xor
ficoms
xchg
jp
mov
sub
pop
ja
jl
add
gs
pop
add
bound
icebp
ds
add
jle
sub
jmp
scas
push
mov
ficomps
xchg
int3
repnz
repnz
inc
lods
iret
call
jmp
mov
mov
rcr
mov
ret
pop
adc
mov
cmp
ds
cli
xlat
adc
lods
stos
aad
mov
adc
cmpsl
adc
insl
std
callw
lcall
sub
jae
scas
push
inc
in
ljmp
adc
neg
inc
les
dec
dec
stos
push
enter
mov
pusha
jg
aam
dec
add
jge
out
sbb
outsb
add
mov
das
shlb
or
jns
dec
pop
sub
int3
shlb
mov
cwtl
and
ret
and
xchg
add
sub
mov
lods
out
ret
je
sbb
jp
cltd
div
ret
xor
adc
push
ret
cmp
or
aaa
cwtl
inc
or
int
flds
cmpb
dec
fistpl
cli
hlt
sub
inc
xchg
mov
push
xchg
imulb
dec
jnp
pop
aaa
fstl
hlt
outsb
test
mov
jle
inc
sub
push
pop
rcrb
rcr
mov
shrd
or
push
push
aas
and
pop
or
push
push
cld
outsl
pushf
sti
mov
inc
dec
add
aas
push
cmp
lcall
mov
mov
and
das
fadds
lock
mov
jmp
je
popa
cld
inc
aaa
outsl
push
popa
push
mov
add
rcll
pop
mov
aad
push
and
adc
pop
push
xor
bound
dec
popf
scas
add
ja
xor
lock
aad
pop
push
daa
loope
inc
inc
dec
out
stos
aaa
aam
fwait
pop
sar
adc
push
fisubrl
movsb
xchg
fidivl
cmp
aam
push
pop
pop
pop
stc
mov
pusha
leave
scas
orb
push
xor
mov
xor
push
scas
add
push
xor
sbb
cmp
xor
imul
pop
fstpl
test
jl
xchg
filds
xor
pop
mov
mov
add
out
leave
pop
mov
incl
cmp
dec
fdivrs
xor
leave
cld
leave
xchg
cltd
xlat
mov
push
cmp
setl
xorl
add
addl
sahf
xchg
sbb
sub
xorb
in
dec
push
cli
adc
sbb
adc
adc
sub
mov
enter
sbb
and
mov
notl
int
stos
out
test
dec
xor
and
in
mov
xchg
sbb
cli
pop
sub
or
daa
test
das
adc
pop
jge
cs
fwait
dec
outsl
sub
xor
mov
std
andl
cmp
lods
scas
and
fisubl
sbb
call
stos
out
pop
push
adc
jmp
sub
cltd
cltd
lock
out
hlt
pop
les
pop
fildll
cmc
aaa
shr
mov
dec
fs
fidivrs
dec
adc
dec
push
lret
jne
loop
pop
cmp
test
sub
or
pop
jecxz
clc
inc
xor
jnp
jp
test
and
lock
popf
mov
jge
cltd
test
leave
xchg
push
mov
or
cld
jecxz
mov
xchg
mov
xchg
jge
pop
cwtl
ret
test
cs
mov
jle
dec
and
mov
shll
imul
mov
aad
inc
ss
or
mov
fwait
inc
sbb
and
sbb
and
sbb
test
push
stos
jae
mov
xchg
or
loope
mov
mov
jmp
ret
clc
subl
adcb
lcall
xchg
pop
inc
cltd
fucomip
sahf
rcrl
arpl
xchg
testl
cmp
out
xor
jg
cmp
xor
outsl
push
dec
nop
fwait
bound
pop
jnp
mov
and
sar
mov
xchg
imul
data16
jl
aaa
sbb
dec
add
iret
repz
pop
fwait
add
jp
dec
fisttps
popf
cltd
push
ljmp
sub
jo
mov
ret
clc
das
add
mov
lods
pop
rol
jg
in
fnsave
mov
adc
scas
sbb
mov
aad
es
mov
lds
mov
add
nop
inc
pop
cmc
cmpsb
repnz
inc
aas
jg
mov
and
add
rorb
fldl
pop
daa
and
push
das
testl
aam
jl
push
cwtl
push
cmp
and
inc
out
popa
sub
mov
rol
sbb
jle
xor
call
sub
pop
pushf
enter
push
xchg
adc
hlt
mov
mov
xor
mov
in
push
imul
cwtl
xlat
aaa
dec
or
fs
iret
mov
aam
in
cltd
test
cli
mov
lret
movsl
or
idiv
data16
adc
sub
shll
int3
cmp
mov
fnstenv
mov
out
aad
leave
in
outsb
shrb
adcb
std
loop
mov
mov
arpl
repnz
popa
loope
pop
das
cltd
pusha
icebp
je
push
sbb
mov
jnp
or
std
cmp
ret
and
outsb
cs
jl
jl
push
xor
mov
jo
adc
jmp
mov
push
cmp
testb
movsl
cmp
shll
movsb
aas
pop
pop
mov
lret
push
or
out
sub
mov
sbb
rcll
pop
sbb
or
cwtl
dec
lahf
add
stos
mov
push
clc
hlt
popa
jnp
out
mov
je
imul
xchg
loop
xorb
lahf
mov
xchg
inc
mul
jns
xor
dec
mov
lret
mov
mov
jb
dec
add
jge
repz
add
cmpsl
push
dec
dec
out
lret
cmpsl
inc
nop
es
jae
push
jl
inc
xor
arpl
jg
popf
pop
gs
not
out
out
pushf
in
fsubs
xchg
add
fdivl
mov
fs
and
fisubl
xchg
daa
adc
inc
fists
cmp
mov
mov
add
daa
push
lods
fidivs
lock
inc
mov
cmp
pushf
or
das
push
dec
or
insl
mov
or
or
and
mov
dec
andb
and
pop
dec
xor
mov
cld
cmp
in
fmull
jg
mov
cmp
inc
lea
lods
mov
les
and
xchg
or
pop
jmp
jecxz
add
pop
sbb
mov
ja
xor
adc
pop
addl
gs
test
call
mov
loopne
mov
or
lret
gs
mov
lcall
sub
mov
je
call
inc
pop
and
push
test
pusha
mov
lds
xor
movsl
xchg
add
stos
jns
not
sub
bound
leave
mov
push
daa
mov
pop
and
jb
mov
sub
mov
jns
xor
out
hlt
pop
mov
subb
sub
pop
cld
sbb
mov
or
and
or
pop
or
mov
sbb
mov
mov
pop
push
xor
cwtl
push
test
mov
lret
sti
sub
jnp
notb
ret
mov
scas
jmp
or
jecxz
icebp
dec
xor
cli
lret
test
xor
fucomip
adc
shrb
xor
imul
pushl
add
sub
mov
mov
mov
into
fxch
mov
pop
les
jae
xchg
mov
add
mov
pop
sahf
or
gs
out
daa
xchg
xor
dec
push
mov
xor
pop
push
xor
rcrb
std
jg
aas
sub
xchg
and
adc
xor
pop
pop
mov
xchg
insb
or
dec
ret
adc
fidivrs
cwtl
or
test
cmp
in
popa
push
popa
xchg
js
and
ljmp
fstpt
shr
and
pop
cmc
jo
test
movsb
mov
setg
arpl
ret
inc
mov
lea
sub
pop
sub
mov
pop
dec
mov
stos
dec
push
mov
jbe
add
mov
rol
inc
jae
mull
xchg
into
xor
pushl
mov
xor
fistpll
sti
push
js
int3
repnz
cmpsl
into
test
adc
out
shrb
imul
dec
loop
jecxz
cltd
pop
in
push
jo
adc
test
je
push
xchg
scas
pop
rcr
mov
fstpl
leave
and
icebp
push
lods
fimull
pop
dec
cld
xlat
xor
dec
idivl
cli
or
aas
insl
cmp
pop
inc
push
fidivs
mull
and
jg
mov
decl
adc
xchg
out
ljmp
mov
adc
cli
dec
dec
mov
cmc
ficomps
xlat
js
lea
pop
andl
add
bnd
cwtl
mov
and
repnz
and
adc
mov
push
hlt
cld
xchg
shlb
mov
imul
jne
sbbb
clc
arpl
shll
dec
popf
jle
push
mov
lahf
cmp
dec
adc
pop
add
das
cwtl
pusha
push
movsb
cmp
sub
push
mov
rcll
arpl
andl
dec
dec
xchg
jns
xlat
and
jecxz
in
aaa
sbb
loopne
test
decl
push
cwtl
jno
push
mov
lcall
mov
adc
or
sbb
pop
ljmp
and
push
push
or
adcl
jecxz
fisubs
call
je
arpl
push
dec
fisubrs
push
inc
sbbb
out
dec
fucomip
popf
mov
mov
mov
cmpsb
push
movb
imul
es
pop
popf
call
mov
dec
pop
sarb
call
jnp
cmpb
xchg
dec
pushl
loope
idiv
push
jg
or
add
dec
js
inc
leave
loop
and
or
inc
xchg
outsl
call
outsb
outsl
imul
aas
jbe
cmpsb
mov
lock
or
out
lds
je
dec
insl
das
loop
or
mov
pop
pop
mov
fsubs
xchg
roll
push
ret
lcall
mov
mov
aas
insl
pop
fists
mov
in
inc
ja
xchg
orb
xchg
sbb
xchg
rclb
notb
fbld
xchg
mov
push
push
test
dec
xchg
je
adc
je
sub
cli
push
cmp
and
cmp
sbb
push
jae
es
pop
int3
test
mov
cmc
outsb
sbb
push
cmpsb
lahf
sbb
jge
fdiv
inc
push
fdivr
lahf
inc
xor
pop
in
dec
repz
dec
mov
sti
shl
cmp
daa
jg
cmp
push
out
adc
hlt
xchg
dec
mov
cmc
lret
fs
pop
pop
xor
mov
jns
pop
rcrl
pop
sub
and
inc
dec
and
or
inc
lcall
les
ret
in
jb
lods
popf
push
xor
cld
rolb
sub
loope
mov
mov
outsl
sub
xor
dec
or
inc
rorl
pop
lret
ds
ror
push
xchg
lret
push
push
jno
push
mov
js
jecxz
jbe
jmp
mov
jecxz
flds
pop
jmp
mov
gs
jg
aaa
mov
sub
out
add
das
outsb
ja
cmp
and
jl
in
inc
adcl
inc
cmp
lcall
popf
adc
sbbb
cmp
push
jge
pop
das
shlb
in
lret
jb
out
xchg
xor
icebp
test
mov
push
aaa
sub
dec
nop
lahf
fldt
mov
mov
cmpsb
mov
pop
xchg
inc
movsl
ficoms
fmulp
xchg
das
mov
mov
shll
lcall
xor
sbb
push
outsl
jmp
subl
dec
or
jl
rorb
sbb
jge
fisubl
or
mull
pop
scas
loop
sbb
xchg
cs
sub
jbe
sub
xchg
add
and
lahf
push
rol
mov
or
cli
mov
ficomps
xor
arpl
mov
pushf
insb
pop
aas
or
repz
adc
inc
mov
xchg
pop
in
loopne
imul
pop
rcl
test
mov
cmp
inc
cmp
jmp
sub
fwait
add
out
ss
test
push
xchg
ljmp
pop
cmp
shrl
aas
lcall
mull
fidivrs
xchg
cmp
inc
lcall
pusha
jle
and
xchg
ja
mov
pop
loop
shl
insl
or
cmp
xchg
lahf
xor
pusha
adc
icebp
fiadds
inc
inc
xor
fidivrs
pop
jno
dec
fimuls
or
mov
push
dec
movl
mov
sub
jae
xor
stos
xor
stos
mov
mov
ss
int3
jmp
dec
push
sbb
inc
sbbl
frstor
sbb
in
inc
jae
and
rcrb
ljmp
shrb
pop
fdivrs
sahf
data16
xchg
bound
adc
xchg
outsb
stos
cmp
test
jl
jecxz
scas
push
jle
int3
mov
cmp
les
les
sbb
mov
push
out
into
mov
mov
fsts
mov
jp
shlb
adc
adc
data16
jge
cmp
adc
push
in
lods
movb
pushf
add
fmull
inc
div
mov
iret
fisubrl
mov
dec
ss
les
and
fwait
push
aas
test
ret
adc
test
jne
push
jg
push
inc
adc
in
repnz
push
nop
fsubrl
mov
push
test
jno
cli
sahf
cmp
xor
movsl
jg
cwtl
bound
gs
ss
int3
loope
clc
jle
cmp
xchg
mov
mov
xchg
shrl
inc
pop
dec
je
and
inc
pop
negl
jge
dec
push
sbb
inc
mov
mov
xor
cmp
scas
outsl
pop
jbe
xchg
or
fnstsw
xorb
iret
add
test
decb
xchg
sbb
cmpsb
xor
out
xchg
insb
arpl
push
and
mov
or
mov
sub
inc
cmp
add
jbe
mov
dec
pushf
mov
sub
push
in
call
push
setl
inc
rclb
dec
insl
or
xor
mov
testl
gs
cwtl
js
out
adc
test
xchg
pop
mov
loope
pop
imul
std
sub
or
pop
dec
popa
and
mov
and
into
pop
mov
jne
movsl
sub
std
jns
dec
xchg
cmp
lods
fsubs
or
or
jbe
xor
jmp
mov
pop
aad
addr16
cwtl
xchg
adc
fisubl
dec
leave
inc
mov
pop
mov
pusha
add
and
cmp
ret
pop
int
idivb
fists
fnstenv
cwtl
cmpsb
imul
push
jp
fisttpll
jmp
add
pop
and
push
cmpsl
xchg
imul
imul
dec
jp
jno
mov
in
pop
mov
in
loopne
cmp
push
popf
imul
mov
mov
sub
insl
jl
xor
fdivs
cmpl
pop
push
jno
add
pop
fdivr
xor
mov
pop
rclb
insb
cwtl
pusha
jno
incl
dec
adc
daa
dec
dec
outsl
inc
stos
adc
jle
mov
loope
pop
imul
mov
andb
add
andl
inc
repz
pop
xor
test
jle
outsl
xor
stos
jp
and
jno
mov
imul
fdivp
jno
jnp
stos
je
es
add
mov
mov
mov
js
lds
jg
pop
cmp
sub
mov
sbb
out
or
repz
mov
int3
jp
rcrl
mov
in
std
bound
mov
insb
ret
lcall
pop
push
lcall
sbb
ret
int
sbb
nop
jmp
call
out
arpl
arpl
adc
xchg
leave
or
int3
jmp
out
out
inc
stos
cmpsl
or
push
xor
cld
and
fstpl
in
bound
or
out
lret
fidivs
out
popf
nop
in
add
push
rcrl
repnz
stc
fstpl
jo
sbb
jg
push
call
bound
int3
xchg
mov
loopne
pop
out
mov
sub
jle
jns
and
std
popf
ret
push
lcall
mov
jnp
sbb
mov
scas
enter
inc
xlat
popf
add
int
imull
jne
push
cmp
adc
in
adc
movsl
int3
pop
test
dec
or
outsb
clc
add
stc
imul
or
or
out
or
cmp
mov
jle
das
lahf
mov
daa
sbb
aas
shll
cmovno
adc
mov
mov
lods
fstpl
lret
cld
addl
out
mov
cmp
and
fstpt
loop
js
ret
popf
jnp
sti
add
pop
xor
cli
cmp
xchg
adc
inc
aam
stc
cs
sbb
les
push
sbb
jb
sub
cmp
fwait
repz
inc
lahf
negl
jnp
mov
sub
orb
jmp
mov
dec
movsl
cmp
jo
dec
in
sbb
xchg
xchg
ss
mov
adc
or
xor
insl
add
xor
repz
xchg
leave
repnz
int
adc
jecxz
lods
mov
cltd
xor
int3
sbb
lret
push
mov
test
pop
sarb
out
pop
mov
cmp
pop
add
es
jo
mov
and
loopne
pop
xchg
pushf
mov
sbb
test
mov
outsl
or
xor
push
adc
fsubrl
jg
pop
and
hlt
clc
mov
and
dec
xchg
mov
pop
cld
xchg
dec
sbb
pop
mov
jnp
scas
xchg
mov
sub
gs
xor
inc
xchg
sarl
sub
subl
stos
nop
clc
jne
or
test
sbb
xor
mov
enter
je
sbb
rorb
pop
clc
mov
call
push
dec
inc
shl
dec
mov
sbb
dec
lret
rcrl
imull
xchg
add
mov
ljmp
mov
mov
dec
cmpsb
push
jns
push
sbb
inc
les
fmull
mov
adc
xchg
sub
loopne
arpl
outsb
lods
stc
cltd
or
aas
out
xchg
scas
imul
or
test
cmp
test
mov
adc
inc
and
mov
shr
add
loope
jmp
and
and
and
imul
sub
js
dec
mov
push
mov
push
ss
fwait
outsb
cmpsb
fs
std
or
lea
out
xor
cltd
pop
imull
jns
outsb
inc
clc
int
push
lods
pop
les
jl
or
xchg
mov
call
loope
push
pusha
in
lds
rorb
stos
dec
test
ljmp
scas
inc
adc
mov
clc
cwtl
std
cmpsb
mov
cld
cwtl
push
cli
add
add
cltd
mov
mov
sarl
push
cs
dec
in
lret
push
push
dec
inc
loopne
aad
out
fcomps
into
test
xor
or
dec
dec
js
rcrb
andb
adc
into
mov
dec
ss
jns
or
nop
mov
xor
cmp
push
pushf
xchg
pop
mov
xlat
rorl
push
call
cmp
dec
fadds
jo
or
cmp
int
mov
jbe
jo
mov
mov
dec
mov
add
mov
hlt
cmp
pusha
sub
xchg
push
outsl
out
push
repz
insl
or
jle
jl
cli
ja
call
sahf
mov
clc
in
mov
xor
cmp
lds
inc
out
lahf
add
aas
and
les
jo
aaa
pop
xor
jnp
pop
mov
out
idivl
mov
mov
push
xchg
movsb
xor
jo
xlat
jl
jge
xchg
fidivs
imul
fisubrs
scas
in
sub
pop
fcmovnb
jle
cld
shll
aas
adc
mov
inc
jecxz
mov
mov
in
xor
inc
scas
mov
pop
push
jne
clc
adc
jae
insb
xchg
les
mov
int
jmp
cltd
cmpsb
cmp
pushf
fmuls
repz
cmp
pop
fcompl
push
xchg
pop
les
ret
je
pop
mov
mov
lahf
or
ds
push
push
or
std
out
sbb
sbb
xor
shll
aaa
inc
mov
jle
out
inc
jae
test
les
cs
add
jne
popf
cmp
lods
dec
dec
mov
sub
xchg
or
stc
test
mov
pop
push
ror
loop
js
or
mov
dec
shlb
push
inc
int3
test
xchg
shll
insb
iret
aas
int3
mov
push
push
jno
addr16
mov
ds
cld
add
inc
iret
mov
mov
mov
jl
nop
add
xor
fists
mov
js
sti
js
mov
pop
push
dec
mov
or
mov
dec
jbe
mov
sbb
push
ret
mov
fs
or
bound
aas
cs
ret
xor
fdivrs
gs
inc
sbb
clc
test
popf
loopne
cmpsl
mov
and
shlb
icebp
mov
adc
aaa
in
mov
push
jno
dec
pop
or
mov
int
stos
inc
mov
and
in
mov
ret
cld
push
sbb
ljmp
fnstsw
mov
repnz
pop
gs
sub
mov
and
sub
out
hlt
lock
imul
dec
inc
divl
add
std
sahf
add
lcall
push
clc
jnp
cli
and
addb
in
fsubrl
decb
sbb
pusha
push
xor
add
dec
shrb
lods
rol
test
xchg
jl
cmp
jecxz
push
jno
or
test
movsl
dec
stos
lret
xchg
shlb
add
ret
iret
xor
lcall
and
dec
sbb
push
mov
bound
outsl
jg
mov
out
test
repz
data16
pop
shl
pop
xchg
pop
cwtl
xrelease
mov
je
adc
cmc
pop
mov
lods
sbb
lahf
popl
and
jl
repnz
mov
fsubl
push
mov
mov
scas
and
push
cmp
cmp
xor
push
cltd
sbb
dec
xorb
mov
pop
arpl
cli
icebp
pop
sub
push
icebp
push
ret
ret
jnp
rcr
mov
xchg
in
rcll
jp
sbb
mov
pop
shll
pop
pop
jg
lods
push
aad
lret
ss
dec
scas
or
je
leave
inc
rolb
int
mov
mov
enter
xor
add
inc
hlt
mov
lcall
dec
dec
das
lds
test
fstpt
mov
fs
pop
mov
loopne
xchg
rcrl
dec
int
sbb
ja
cwtl
add
loope
inc
subl
popa
stc
je
aas
jle
fisubrl
repz
in
sbb
popf
pop
lahf
ds
inc
repnz
insl
mov
test
in
sbb
dec
cmp
adc
mov
ror
pop
mov
mov
jecxz
jae
arpl
int3
mov
decl
mov
lcall
push
mov
and
add
sub
jmp
or
popl
fcoms
aad
insb
dec
sub
push
push
push
or
sub
call
test
or
dec
test
test
dec
mov
pusha
stc
into
push
jg
pop
mov
out
mov
cmp
into
aad
std
cld
pop
adc
mov
int
add
push
lret
dec
sub
inc
cld
decb
sub
out
lret
sbb
fbstp
in
add
int
push
mov
dec
mov
cmpsb
push
daa
aad
cmp
pusha
jnp
movsl
add
sub
in
xchg
ds
jge
sub
mov
push
sbb
inc
push
mov
mov
mov
sub
test
dec
dec
movsb
lahf
mov
out
mov
gs
fistps
cmp
outsl
outsl
push
mov
mov
addr16
push
xchg
add
cmpsl
ljmp
add
in
jle
mov
cltd
fwait
je
das
cmp
imul
test
or
iret
fldt
packuswb
adc
add
jge
mov
mov
mov
adc
cld
pusha
jae
es
fadds
push
mov
sub
pop
push
dec
inc
xor
ror
xor
mull
nop
mov
or
arpl
dec
add
xchg
lods
imul
and
sub
lea
mov
xchg
ljmp
pushl
xchg
lahf
ja
push
bound
lret
daa
cmp
mov
nop
or
sti
xchg
out
scas
out
lds
inc
push
push
ja
ljmp
jl
mov
icebp
aaa
dec
jbe
pop
stos
push
repz
mov
ljmp
loope
dec
sbb
mov
lret
adc
in
push
cmpsl
ja
fistpl
add
pop
shrb
lods
pop
mov
cmpsb
subb
aad
sahf
insb
stc
scas
pop
iret
jp
mov
xchg
enter
popw
adc
stc
sahf
in
xchg
dec
pop
test
fldcw
mov
hlt
cmp
mov
stos
movsb
leave
pop
inc
jecxz
mov
sbb
jge
mov
pop
mov
incb
mov
inc
lahf
jae
sub
pop
loopne
aaa
in
adc
fs
push
cmc
add
jp
push
dec
movsl
dec
arpl
imul
cwtl
jae
fyl2x
rcrb
fcomps
scas
hlt
xchg
ret
jae
push
sahf
inc
pusha
jnp
cmp
outsl
setns
jnp
adc
push
xchg
shl
jg
jl
mov
cs
lods
test
mov
insb
int3
xor
int
xchg
pushf
ljmp
jno
jecxz
adc
and
xor
or
sahf
popf
adc
dec
out
call
sub
or
leave
scas
in
in
sub
filds
inc
mov
call
int
inc
adc
push
loop
xor
lea
mov
mov
rclb
sub
leave
cmp
orb
push
sbb
rorl
jg
jo
push
pop
pop
in
test
adc
sti
mov
ret
movsl
push
stos
popf
fwait
jle
jmp
fdivrl
sbb
lret
inc
sub
cmc
cmp
cwtl
repnz
pop
es
adc
loope
fwait
mov
xor
jle
xorb
cmp
pop
jno
cmpsb
dec
or
mov
mov
call
push
sub
lods
shll
stos
sbb
aad
cmp
aam
cmp
in
inc
mov
ja
rorl
mov
gs
or
nop
test
lods
shll
movb
dec
jbe
xor
mov
test
lcall
fsubrp
adcl
push
xlat
lods
xchg
je
aad
mov
sahf
insl
jmp
ret
inc
sbb
rcl
adc
cmp
mov
notl
add
lcall
push
lea
xchg
insl
repnz
lods
jle
jg
pop
cld
cmp
sbb
lock
loope
repnz
ljmp
hlt
xor
andnps
mov
inc
insl
jns
stos
std
inc
rcl
test
mov
lret
cs
fidivrs
mov
add
fidivrl
fimuls
test
stos
pop
pop
pop
repnz
pop
jg
repnz
js
mov
mov
jl
and
push
adc
pop
shlb
sub
sahf
push
stc
call
shlb
jae
mov
mov
mov
xor
mov
xchg
ret
mov
data16
lods
lock
add
data16
mov
imul
nop
dec
push
rcl
mov
push
cmpsl
or
pop
xchg
cltd
mov
outsl
push
cmc
stos
ret
nop
sub
mov
or
push
rolb
push
inc
int
call
inc
decl
cs
inc
sahf
imul
insl
push
popa
cmpsl
leave
adc
adc
pop
ud1
pop
out
inc
mov
pop
mov
pusha
test
cld
inc
movsb
push
je
inc
es
add
cmpsl
cmp
xchg
add
cltd
pushf
push
out
add
jp
adc
loope
sti
in
xchg
fbstp
ret
mov
imul
xor
push
mov
pushf
repnz
push
push
mov
call
int
xor
ljmp
out
mov
mov
xchg
in
es
inc
stos
cmp
fcoml
jnp
leave
xor
outsb
cmp
leave
out
mov
addr16
cmc
push
adc
ljmp
sbb
pop
or
inc
inc
lds
repz
hlt
insb
repz
xchg
inc
loopne
pop
adc
mov
mov
jnp
add
popf
mov
mov
inc
or
mov
ds
pop
push
mov
adc
inc
mov
xchg
movsb
pop
testl
dec
push
add
test
movsb
ja
mov
mov
ljmp
js
das
inc
jno,pt
popf
mov
pop
push
popa
inc
pop
ficoms
inc
fsub
lcall
mov
enter
dec
inc
mov
bound
cld
int
inc
mov
cmp
cmp
out
mov
pop
mov
stos
inc
les
jb
lock
pusha
lcall
jp
aaa
shl
mov
adc
je
pop
out
or
jge
and
jne
push
or
adc
cltd
mov
je
push
aas
je
jbe
leave
dec
jp
push
or
mov
lcall
cmc
cltd
mov
lcall
or
cwtl
dec
mov
xor
or
mov
mov
imul
lock
xor
and
push
push
sbb
jno
mov
test
sahf
xchg
mov
sar
xchg
xchg
sarl
fwait
push
adc
sub
inc
sub
pop
inc
sub
and
sbb
call
negl
dec
outsb
cmc
jo
lods
lds
jbe
adc
sbb
mov
mov
out
popa
jp
aad
stos
div
mov
ja
scas
fcmovu
andl
je
inc
jp
sub
clc
mov
pop
jecxz
fsts
aas
pop
movsb
dec
pop
mov
fisttps
fwait
ret
arpl
test
push
hlt
xchg
imul
mov
lds
movsl
popa
test
cli
or
loop
mov
xchg
pop
mov
pop
sub
inc
cmp
ficomps
mov
pop
testb
inc
jl
or
inc
pop
mov
fdivp
cmp
out
sahf
push
stos
cmpsl
dec
loopne
loopne
pop
into
pop
rorl
jp
rcll
push
xchg
mov
sbb
lret
mov
xor
or
jbe
ret
mov
gs
loop
push
sahf
out
cmp
fistps
xlat
adc
stc
adc
lret
push
xchg
mov
fsubs
les
inc
out
jecxz
fwait
push
rcll
push
adc
loopne
or
lods
pop
pop
adc
jl
jg
dec
test
dec
daa
push
aaa
jg
lock
lds
mov
not
inc
stos
dec
mov
cli
lods
sbb
and
add
rol
sbb
gs
dec
mov
pop
dec
popa
repnz
pop
inc
xor
or
repz
arpl
push
and
inc
movsb
inc
hlt
js
popf
movsb
push
rcrl
movsb
mov
sub
add
aam
stos
lahf
jne
inc
inc
dec
xchg
jae
push
stos
dec
adc
push
shrl
push
dec
stos
add
outsb
and
inc
stos
dec
push
and
pop
cmp
lods
lret
bound
imul
lods
out
mov
xlat
adc
or
test
cmp
dec
jle
int
fwait
sbb
jecxz
cli
push
sbb
ret
movsb
mov
pop
les
xor
cli
ficoml
ljmp
xchg
sbb
adc
and
and
mov
sbb
es
not
inc
or
movsl
inc
ja
lea
arpl
mov
jge
nop
imul
mov
adc
mov
mov
cmp
rolb
sub
enter
push
sbb
popf
hlt
xor
add
sbb
adc
pusha
push
xor
mov
testl
das
jae
xchg
inc
daa
std
repz
loop
test
inc
sub
adc
dec
mov
push
pop
or
stos
es
pop
xchg
and
fwait
jecxz
push
out
add
loop
adc
addb
mov
sarb
jbe
sub
leave
and
daa
xchg
cltd
pop
ljmp
in
sub
mov
je
dec
jb
cmp
mov
sbb
in
push
push
int3
movl
cmc
jg
push
test
stc
pop
push
inc
nop
sub
sbb
repz
in
xchg
lret
popw
xchg
lahf
adc
or
push
sub
or
xchg
mov
fldcw
cmp
arpl
in
lret
lock
fnsave
xor
xchg
cwtl
push
pop
adc
pop
xchg
sub
push
outsl
pushf
add
shll
imul
pop
mov
pop
sub
sbb
xor
ffreep
dec
xchg
repz
je
fucomip
pop
sub
pop
pop
push
inc
daa
rolb
cld
pop
adc
cmp
scas
stc
es
mov
js
sbbb
sbb
out
push
pop
add
pop
loopne
jp
adc
nop
inc
int3
ljmp
lds
cmp
mov
cmc
push
jle
rcrb
push
into
pop
outsb
push
arpl
cmp
ret
cmp
outsl
enter
and
pop
mov
mov
cmp
push
leave
int
repz
std
or
mov
mov
mov
popa
jl
cmpsb
dec
repnz
rcll
fwait
rclb
aad
and
jo
mov
jno
jmp
jmp
adc
jae
test
aas
cmp
inc
scas
mov
add
mov
pop
js
test
sarb
sysret
cltd
or
clc
mov
mov
xchg
bound
inc
add
sub
xor
add
xor
jno
test
cltd
mov
mov
jmp
pop
adc
jo
repz
minps
lock
jae
incl
iret
ret
das
dec
jo
push
dec
jg
inc
lcall
xchg
xlat
dec
arpl
mov
sarb
ret
fs
inc
jne
stos
sbb
stos
push
jmp
cmp
mov
xchg
pop
jo
mov
mov
movsb
into
ret
push
mov
xorl
push
subb
mov
pop
pop
ss
sbb
mov
out
sub
cli
js,pt
mov
sbb
xchg
ljmp
mov
iret
sub
push
rcl
cmp
stos
dec
push
sbb
pop
rcr
sbb
testl
dec
xchg
dec
add
je
inc
nop
cs
mov
sbb
sbbb
mov
mov
ficompl
in
mov
and
shl
push
jl
dec
xor
mov
call
xlat
xlat
pop
inc
rcr
popf
stos
sub
push
dec
arpl
push
cmp
sub
pop
cmpsl
jle
add
stc
es
sub
dec
pop
cmp
mov
aam
dec
stos
and
les
add
mov
sbb
shl
xchg
mov
ljmp
dec
push
xchg
sbb
sub
mov
mov
dec
lret
ja
pop
lcall
mov
mov
sbb
push
outsl
out
cmpsl
mov
es
xor
mov
rcll
in
xchg
push
adc
push
ss
cli
cmpsl
idivl
in
jns
imul
sbb
scas
xchg
jno
es
push
cmc
inc
mov
outsb
das
adc
aas
mov
mov
jbe
aaa
jg
repz
lock
inc
ret
das
push
xchg
imul
in
dec
scas
push
jb
add
ds
jnp
and
mov
mov
jle
or
rol
and
xor
pop
push
das
xchg
std
dec
jmp
ret
jmp
adc
push
sbb
xor
clc
repz
iret
lret
sbb
jbe
dec
push
mov
pop
sbb
sub
dec
pop
cli
mov
daa
dec
xor
jno
and
mov
dec
add
lods
sub
imul
mov
loopne
stc
mov
add
pop
or
into
icebp
icebp
popa
push
test
pop
sbb
in
imul
xchg
fidivrl
and
aad
push
cmp
sbb
pop
inc
sub
adc
dec
test
push
stos
adc
mov
aam
mov
popa
or
in
and
mov
push
push
ljmp
mov
push
rcr
xor
xchg
push
imul
test
xorl
imul
es
mov
push
push
mov
xlat
cmpb
scas
lcall
mov
scas
inc
clc
cmp
lret
fnstenv
das
test
addr16
push
popl
dec
fisttps
mov
lahf
xchg
jle
push
cltd
mov
xchg
mov
sub
mov
or
xchg
or
sbb
inc
push
jg
or
mov
pop
arpl
mov
stos
xor
ds
jae
xchg
fst
data16
pcmpgtb
xchg
arpl
call
int3
fsubrs
or
mov
push
add
push
mov
mov
sub
push
jge
cltd
dec
mov
add
inc
jp
mov
addr16
jno
into
xor
xchg
add
scas
jge
in
mov
call
or
or
push
test
push
movsb
mov
gs
ljmp
and
dec
mov
push
push
jns
das
push
adc
aas
jg
jne
add
loopne
xchg
lahf
movsb
dec
fwait
sahf
mov
jp
out
add
aad
sbb
imul
test
adcl
loop
fnsetpm(287
es
pop
lret
hlt
rcll
cwtl
add
sti
sti
fcom
inc
push
adc
mov
mov
imul
insl
ss
jne
popf
pop
mov
jmp
push
popa
in
aaa
xlat
push
push
sub
lods
lcall
icebp
mov
inc
sub
pop
cmp
mov
jae
xchg
loope
cltd
mov
movsb
add
jno
xchg
adc
mov
dec
shrb
mov
or
call
fsubs
or
lcall
xor
testl
stos
scas
pop
iret
orl
enter
mov
mov
push
jne
push
jmp
pop
inc
xchg
cmp
add
xor
mov
into
pop
adc
jb
fisubs
popw
iret
enter
xchg
xchg
fdivs
fildll
mov
das
lock
shlb
rorl
scas
cmc
dec
mov
cmp
adc
pop
adc
jne
and
push
lea
sbb
inc
daa
xchg
out
pushf
fidivrs
push
adc
xchg
repnz
sbb
iret
nop
cwtl
push
fwait
push
mov
movsb
add
push
mov
test
test
mov
xchg
lods
lret
xorl
mov
cld
shrb
loop
pop
pop
call
popf
hlt
jo
push
and
push
mov
xchg
push
push
and
jb
mov
mov
lock
aad
or
jp
call
sbb
xchg
push
dec
aas
frstor
mov
xor
movsb
sub
repnz
pusha
dec
stc
inc
dec
lret
bound
inc
cs
mov
divb
adc
and
fldenv
add
aas
or
dec
pop
add
mov
addb
fnstcw
pop
loop
xchg
xor
adc
cwtl
fs
test
jb
and
pop
stos
std
xor
outsl
and
arpl
mov
lea
adc
mov
mov
xor
or
movsl
push
cmp
fucom
xchg
ljmp
mov
mov
push
repz
nop
push
out
jno
loop
add
pushf
or
adc
inc
inc
adc
movsl
cmp
cmp
mov
int3
pop
adc
aas
xchg
rcrl
into
pop
les
stc
xchg
mov
adc
int3
inc
and
test
out
adc
xchg
dec
or
xor
xchg
test
cmp
push
in
mov
data16
in
sbb
xor
jnp
inc
int3
mov
out
imul
js
and
push
and
add
cmp
or
test
mov
sbb
lds
sbb
xor
aas
insb
pop
es
sti
sbb
jmp
fistps
mov
les
sbb
imul
movsb
rolb
ljmp
aaa
mov
adc
into
jp
mov
pop
es
mov
repnz
outsl
jmp
jne
add
shl
daa
hlt
pop
adc
mov
jne
out
push
in
xchg
movsl
ret
mov
xor
clc
dec
ja
pop
pop
loop
std
out
or
imul
jns
sbb
je
push
int
dec
ret
sbb
stos
push
push
and
in
lods
jno
lods
scas
std
jns
mov
cmp
scas
push
negw
fisttpl
and
test
cli
mov
xor
lahf
mov
cmpsl
mov
call
xor
xchg
in
out
in
shrl
lea
fs
jo
testb
cs
sbb
jge
cmp
sub
mov
inc
test
mov
or
cmp
int
sbb
cmc
pop
lret
pop
jecxz
push
out
popf
andl
or
xlat
mov
pusha
xchg
daa
sbb
dec
je
and
cld
or
pop
xchg
jnp
gs
pop
dec
dec
icebp
fstpl
mov
sbb
cmp
inc
inc
sbb
es
push
cs
addr16
pop
iret
sbb
push
push
cmp
jg
dec
jae
jg
stos
xchg
mov
cmp
jl
mov
outsl
sub
fsubr
mov
sub
xchg
ret
jae
push
enter
fidivrs
add
mov
xchg
jecxz
inc
and
and
aam
xchg
xchg
stos
xchg
adc
mov
aaa
ljmp
and
mov
adc
mov
add
je
mov
or
inc
pop
push
jns
repnz
inc
mov
int3
int3
and
cmp
mov
lods
or
and
push
insb
inc
sbb
lods
pushf
fmuls
out
pop
rcrl
fisttpl
push
and
int
test
pop
sahf
lock
lds
cmpl
addw
jmp
in
push
mov
mov
divb
cmpsb
aam
jae
fstpt
jg
dec
ret
jp
imul
gs
sbb
pop
jne
icebp
pop
pop
es
cld
fucomp
subl
arpl
mov
pop
mov
test
daa
sbb
sbb
lret
mov
data16
xor
insb
std
add
lods
cli
dec
rcll
cmp
into
and
mov
adc
xor
out
arpl
ljmp
mov
lock
mov
mov
push
xchg
pop
push
out
push
idiv
sub
mov
repz
insl
inc
into
sub
stos
nop
out
sub
pushf
xor
ljmp
cmc
call
rclb
jg
in
arpl
adc
inc
test
int
xchg
aad
mov
xor
icebp
in
mov
adc
push
daa
mov
mov
aam
aas
xchg
cmpsl
imul
mov
pop
jno
push
or
pop
mov
ret
sbb
or
jnp
pusha
push
outsl
fmul
faddl
mov
jae
jae
int
jo
ss
jb
stos
pop
outsb
test
cmp
mov
add
add
aam
sbb
test
popa
add
lds
mov
test
insl
data16
subb
adc
clc
mov
xor
daa
xchg
bound
bound
rorl
mov
inc
jnp
iret
add
pop
add
pop
test
adc
mov
imul
dec
call
jmp
lds
lea
pop
fs
mov
xchg
clc
push
inc
lret
mov
add
es
sub
fs
shll
jmp
sar
lock
inc
jns
jne
cmpsb
icebp
shlb
cmpsb
or
dec
call
mov
pop
jp
bsr
popf
add
dec
lret
addl
in
xor
sbb
cmp
xor
sbb
in
jecxz
fbld
sub
sub
ret
ja
ja
xor
test
mov
out
fs
pop
lods
loopne
cmp
push
movsl
fsubrl
arpl
insb
fwait
sub
fwait
add
sahf
cmpsl
in
jnp
arpl
pop
popf
scas
cmp
sub
imul
xchg
xchg
in
pop
test
mov
pop
repz
loope
inc
inc
and
dec
push
js
lods
data16
dec
pusha
insl
push
mov
test
mov
in
loop
lret
or
adc
out
flds
sbbb
mov
mov
nop
and
pop
stc
xor
xrelease
xor
scas
or
clc
lahf
insl
cli
add
cmp
ret
mov
xchg
rcrb
add
daa
sub
sub
aaa
xchg
jb,pt
sbb
outsb
mov
lods
jno
in
fwait
pop
mov
fucompp
ss
test
je
fimuls
mov
repnz
lahf
sub
or
rorl
clc
loop
out
mov
pop
inc
pop
and
dec
orb
push
popf
or
push
push
pop
rcrl
cmp
pop
movsb
loope
mov
data16
lds
xchg
inc
xlat
rcr
hlt
mov
xor
mov
dec
mov
mov
aaa
cmp
stc
aam
out
ficompl
pop
mov
mov
push
mov
dec
push
cmp
outsb
idiv
psrad
popa
adc
sbb
inc
inc
imul
jmp
push
shll
sbb
mov
lahf
lahf
std
stc
bound
cmp
adc
mov
sti
sbb
lahf
notb
je
cli
inc
je
and
stos
popa
pop
out
dec
std
push
push
fsubrs
test
adc
cs
pusha
cltd
jp
lahf
scas
cmp
popf
lock
mov
push
jno
ja
loope
jnp
out
gs
in
cwtl
cmp
outsb
lods
mov
inc
iret
out
or
cwtl
aaa
ja
xor
ss
fisttps
ret
into
mov
insl
mov
xlat
mov
push
push
sub
es
mov
stc
or
add
sbb
pop
cld
lret
or
jmp
pop
push
jae
inc
mov
jl
mov
sub
das
inc
and
daa
mov
cmp
fwait
and
ret
mov
cmc
sub
dec
enter
cmp
pop
pop
jge
call
sbb
aam
cmp
repnz
push
xorl
outsl
mov
int
icebp
gs
sub
ja
mov
fstpt
inc
insb
repnz
and
and
out
add
jle
push
ret
add
lret
insw
int3
imul
outsb
int3
out
jl
les
jbe
mov
push
and
pop
jp
imul
das
pop
cmp
pop
in
aas
or
scas
cmpsb
cwtl
pop
inc
decb
inc
fists
sbb
aas
mov
push
insl
mov
test
xor
arpl
jnp
fcomp
and
test
mov
jb
inc
xor
aam
mov
fsub
fiadds
and
pop
and
roll
or
adc
out
push
js
sti
push
or
movsb
push
ljmp
loope
cmp
negb
mov
mov
and
aas
xchg
pop
testl
push
pushf
cwtl
xor
in
divb
out
mov
or
and
push
outsl
sub
ldmxcsr
adc
rcr
inc
or
dec
push
cs
mov
mov
push
dec
mov
aas
mov
testb
jp
shr
cmp
test
loopne
sub
fcompl
mov
ja
add
and
addl
mov
scas
subl
push
movl
test
lahf
rclb
aad
ror
out
idiv
add
inc
lds
lcall
mov
xchg
roll
sbbl
push
xor
mov
and
outsl
daa
cld
add
mov
and
fwait
int
ja
adc
fstpt
shlb
dec
arpl
jae
inc
xchg
fucomp
stos
nop
or
push
pop
mov
pop
cmp
fcmovne
mov
xor
push
lcall
mov
xor
bound
ds
leave
shrl
fsubr
push
mov
repz
mov
sbb
movb
xchg
adcb
pop
cmp
mov
into
push
xchg
cmp
push
std
fildll
sub
push
cmpsb
arpl
pop
mov
or
mov
jbe
mov
mov
les
icebp
inc
std
jbe
mov
fsubs
xchg
fnsave
bound
lods
pop
adc
in
imull
push
jns
sahf
push
lahf
lods
rcrb
cmp
ret
jns
xor
out
cld
cltd
cmpsb
int3
insb
jmp
xchg
insl
jnp
push
imul
outsl
cli
mov
popa
aas
loopne
lret
or
push
jb
xchg
into
cmp
jg
push
xor
pop
out
arpl
shll
adc
jp
inc
fists
enter
js
cwtl
xchg
std
std
cld
xlat
mov
cmpsb
into
rcrl
pop
shrl
scas
or
xchg
mov
add
enter
fstpl
cltd
ficomps
push
xchg
and
icebp
dec
add
mov
ret
mov
xchg
es
xchg
push
je
movl
sub
clc
dec
mov
scas
mov
push
popa
adc
sbb
and
std
int
cwtl
mov
jg
inc
add
lcall
fcomps
push
push
push
cmp
pavgb
xorb
mov
imul
in
xchg
or
jmp
std
sahf
insl
mov
push
inc
fucompp
jmp
pushf
ss
dec
xor
out
jo
adc
push
xor
mov
or
or
sub
popa
sbb
sub
push
and
out
bound
pop
lods
clc
iret
cmp
cmpsl
push
xchg
dec
mov
jo
mov
mov
xlat
xchg
or
jmp
mov
dec
fdivl
test
shrl
push
push
push
or
xor
pop
nop
and
aaa
in
push
js
mov
insb
jno
or
xor
dec
mov
daa
sbb
and
ss
lea
pop
xor
dec
addb
pop
stos
pop
rolb
xchg
je
jg
je
push
fwait
xlat
or
inc
je
jbe
push
aad
insb
pop
leave
idivl
xor
adc
cmp
add
sub
sbb
cld
cmp
loopne
rcr
shll
cmp
mov
mov
mov
lahf
xor
lret
cltd
push
mov
test
jl
leave
push
or
cmc
cmp
cmpb
ret
shlb
outsl
inc
je
je
daa
out
push
add
mov
jecxz
xor
mul
inc
icebp
xor
pushf
les
xchg
cli
les
pushf
inc
push
jle
repnz
loopne
jge
out
and
sub
sti
out
xchg
out
leave
mov
into
or
pop
pop
and
arpl
jae
enter
xchg
arpl
inc
fistps
push
test
inc
cmp
lret
cmc
ljmp
hlt
leave
add
push
fisttpll
dec
mov
in
shl
mov
pop
xchg
xchg
call
fs
mov
add
jecxz
cmp
sbb
ljmp
mov
jecxz
dec
fs
mov
mov
in
or
popf
movsb
sbb
cld
orb
and
or
mov
mov
movsb
cwtl
es
lds
adc
movsb
enter
mov
inc
shl
dec
cmc
out
pop
push
pop
push
enter
scas
pop
ljmp
push
cmpsl
mov
in
div
shll
pop
fnstsw
mov
test
lret
data16
xlat
and
mov
and
jae
in
mov
jnp
stc
pop
scas
ret
adc
test
rcll
jae
xchg
popa
cmp
not
xchg
sbb
xlat
arpl
add
mov
lret
push
xchg
xlat
xchg
mov
inc
in
and
std
fdivp
or
aam
jp
add
xor
mov
pop
lcall
xor
adc
mov
rcrl
push
fsubl
pop
fildl
fcompl
mov
mov
push
shr
jo
cmp
xor
and
sub
push
mov
xchg
dec
mov
dec
mov
add
sar
inc
push
in
jge
jmp
in
imul
jecxz
sub
adc
sub
sub
xor
mov
je
mov
leave
mov
sbb
mov
dec
testl
push
int3
mov
push
mov
cltd
lods
mov
push
add
xchg
sbb
adc
jnp
add
sbb
std
adcl
add
lret
add
aaa
shll
out
notl
lds
inc
pop
add
mov
dec
mov
pop
idivl
add
mov
sub
add
stc
cmpsl
mov
xchg
imul
xor
mov
dec
je
fwait
popa
shlb
fs
insl
dec
sbb
pop
inc
cmp
jno
mov
ljmp
sub
sbb
mov
daa
sbb
pop
push
or
adc
and
divb
cmp
pop
gs
outsb
out
jb
mov
mul
adc
mov
leave
mov
bound
cwtl
mov
daa
dec
mov
leave
or
rorl
out
clc
adc
fadds
push
shll
imul
dec
out
cs
mov
mov
fcmove
sbb
in
sub
cmp
enter
pusha
xor
lret
inc
push
mov
pop
or
pusha
and
and
in
xchg
js
adc
inc
xchg
push
mov
xchg
fmuls
int
add
add
inc
mov
mov
pusha
cmp
and
cmp
adc
xchg
cmc
movsb
cwtl
adc
ljmp
imul
mov
ljmp
arpl
cld
roll
push
mov
push
dec
add
nop
fidivl
frstor
in
ljmp
fcmovb
push
mov
xor
rcrl
push
fists
jnp
pusha
in
cmpl
xorb
jge
addr16
ss
sbb
imul
in
xor
cmpsb
or
jp
aas
jne
in
xor
xor
mov
add
xchg
aam
xchg
imul
inc
mov
cmpsb
add
insl
xchg
test
in
outsl
in
or
leave
jbe
out
adc
mov
int
cmp
sbb
or
push
push
cmp
adc
in
jmp
cltd
das
lret
lcall
or
mov
xchg
xchg
adcl
sbb
push
scas
or
ja
out
mov
js
sbb
mov
xchg
pop
or
sub
adc
bound
cld
data16
rorb
pop
lock
sub
ret
hlt
mov
inc
dec
and
int3
or
arpl
mov
xor
bnd
in
push
mov
push
aas
imul
insb
mov
loopne
cmpsb
adc
stos
adc
adc
loopne
push
jle
stc
das
jmp
sbb
xor
lret
std
sub
mov
mov
call
scas
cmp
jne
outsl
por
ljmp
cwtl
rclb
into
xchg
cmc
mov
inc
insl
add
aaa
js
push
and
push
lods
in
aas
iret
sbb
scas
and
add
das
add
xchg
and
inc
out
add
jno
push
xchg
cltd
dec
nop
dec
addr16
cmpsl
pop
push
arpl
ds
scas
je
shll
fadd
mov
jp
xchg
cmp
jmp
mov
stos
js
shl
mov
sub
cmc
push
fisttps
adc
push
jg
or
shlb
dec
movsl
cmc
es
scas
jl
mov
shrl
mov
pop
add
popf
push
push
sub
popf
inc
jg
xchg
push
xor
adc
add
mov
xchg
mov
and
dec
shlb
mov
les
into
cmpsb
leave
lock
mov
xor
outsb
pop
ret
in
and
js
fbstp
pop
adcb
push
dec
adc
inc
out
mov
dec
loop
lret
cmpsl
xchg
sbb
in
lret
push
mov
mov
out
adc
mov
xchg
mov
in
and
or
in
test
imul
cmc
sbb
mov
sbb
dec
cmp
dec
inc
pop
imul
outsb
and
mov
jbe
xor
loopne
push
cli
fcmovb
mov
jnp
pop
cltd
incl
inc
xchg
inc
sub
xchg
out
or
pop
jnp
es
mov
scas
icebp
movsl
push
clc
fists
adc
aas
adc
aas
stos
out
call
mov
sub
xor
xor
xchg
mov
bound
fsts
xchg
mov
dec
repnz
cmp
xchg
call
lcall
fsubl
mov
add
adc
jnp
mul
add
sub
insb
jno
dec
lahf
xchg
mov
pushf
fdivr
jmp
lods
inc
jecxz
dec
jge
ss
cmp
sbb
push
mov
or
push
adc
xor
xchg
mov
aad
adc
gs
cmpsl
sbbl
testb
aas
bound
xchg
dec
mov
push
enter
xor
sub
sbb
and
mov
test
adc
int3
mov
rcl
call
nop
cltd
faddp
pop
and
jnp
out
shlb
mov
push
bound
pop
xor
dec
dec
pusha
push
sbb
aaa
and
ret
pop
movsl
xchg
aas
int
fwait
pop
or
push
fstpl
xchg
dec
jecxz
cmp
insl
xor
adc
push
out
cmp
repnz
imul
pushf
sarb
loopne
in
or
std
mov
pop
ljmp
pushf
xchg
dec
outsb
imul
xchg
dec
mov
hlt
js
pop
cmc
fcmovnb
jge
outsl
dec
jecxz
cmp
add
mov
enter
lret
adc
adc
adc
xchg
orb
push
data16
mov
ret
fnsave
mov
xchg
push
push
xchg
repnz
or
mov
sbb
xor
xchg
pusha
test
cmp
add
int3
jmp
shll
scas
xchg
push
js
outsl
push
loop
jb
sub
fidivrl
and
xchg
aaa
xor
leave
xchg
ret
subb
jle
add
xchg
stos
loopne
fcoml
pop
ret
cmpsb
ds
cmp
lds
icebp
push
mov
sub
aad
subl
cmc
jne
mov
out
add
sub
nop
ret
out
mov
add
bound
movsb
sub
cmp
adc
icebp
mov
adc
sub
scas
push
adc
insl
ss
in
mov
adc
icebp
adc
xor
test
les
push
xchg
jne
ds
test
inc
mov
clc
and
mov
imul
sub
push
xchg
add
jo
jo
lods
scas
filds
mov
lret
lock
lahf
sub
push
popf
fstp
jae
loopne
stos
jmp
hlt
add
push
adc
sub
scas
enter
jo
outsb
cltd
dec
int3
xor
lods
or
and
pushf
movsl
rolb
mov
cli
int3
or
maskmovq
mull
fs
mov
js
mov
and
ret
or
pushf
es
mov
push
mov
lds
or
test
and
jmp
in
int3
loope
cmp
push
jge
loop
xchg
sbb
xor
cmp
test
sbb
and
imul
mov
lock
push
sbb
mov
mov
cmp
sbb
mov
lcall
test
and
xor
jnp
out
mov
pop
xor
mov
cmp
adc
pop
js
and
cmp
adc
xchg
lret
jmp
ss
shll
and
adc
push
subl
clc
jmp
hlt
adc
mov
int3
pop
test
mov
leave
out
mov
push
pop
mov
cli
inc
mov
cmpsl
ret
cmp
xor
xor
fwait
xchg
fdiv
inc
in
movsl
pop
dec
sub
data16
scas
adc
popa
int
xor
mov
jbe
cmp
xor
jne
rol
adc
int3
test
mov
inc
cmp
cmpsb
data16
adc
cltd
and
mov
lfs
pop
scas
jo
push
jmp
sub
cmp
fisttpl
pop
lcall
pop
insl
je
lcall
popf
in
mov
addl
jb
inc
push
out
jb
dec
sbb
inc
pusha
add
push
xlat
std
inc
inc
stos
cmpsb
cli
jmp
icebp
inc
mov
cltd
pop
inc
mov
dec
rolb
xor
add
insb
in
add
dec
clc
test
outsb
pop
mov
addb
inc
xlat
jle
mov
lea
fucomip
lock
jge
jmp
inc
test
fidivrl
sub
dec
mov
fistpll
xchg
int
xchg
or
xlat
daa
dec
clc
adcb
sub
call
ret
stos
pop
jno
cmpsl
mov
sar
jns
and
xchg
outsl
daa
mov
ret
in
mov
aad
dec
bound
jo
and
out
pop
xchg
ds
sahf
adc
pop
add
jne
in
cmp
cmc
push
push
cld
movsl
bswap
pop
scas
dec
jp
mov
pop
add
mov
out
inc
imul
jle
aas
stc
enter
and
rclb
lahf
pop
fists
stos
mov
sub
daa
mov
pop
xchg
js
mov
xlat
mov
fisubrl
pop
aas
mov
les
lods
inc
scas
inc
add
ss
sahf
sub
das
dec
jns
and
faddl
jbe
scas
cli
sbb
repz
push
sub
mov
sub
rcrb
xchg
pop
loop
arpl
jp
sbb
loop
adc
cmpsl
ljmp
cmp
or
add
push
and
mov
ss
leave
inc
inc
push
adc
sbb
and
mov
sub
adc
add
jae
push
mov
jl
inc
pop
sbb
in
lds
loop
repz
lret
xchg
std
mov
mov
mov
enter
cmp
and
imul
and
hlt
mov
fcmovne
andb
jg
test
in
mov
jno
rcrl
pop
xorb
mov
cmp
mov
cmpsl
add
pop
cmp
popa
and
loope
lock
cmpsb
add
mov
xchg
or
jnp
int
fildl
jne
test
insb
out
push
insb
dec
addb
mov
xorb
cmp
xchg
push
test
imul
out
dec
imul
sub
xor
insb
data16
out
add
enter
pop
popf
mov
lods
rclb
hlt
cmpb
ret
jne
daa
in
daa
aas
sbb
inc
mov
testb
dec
cmp
push
mov
outsl
adc
arpl
lock
shrb
xor
aad
dec
mov
mov
pop
cmp
and
pop
adc
mov
hlt
sbb
stos
ret
mov
adcl
adc
mov
mov
fwait
inc
andb
push
mov
cmp
inc
out
out
dec
jno
idivl
cmp
sbb
pop
stos
cmpb
sbbl
pushf
or
pusha
out
sbb
mov
add
and
jnp
or
add
insb
mov
push
outsl
dec
sub
sbbb
fmuls
fwait
pusha
int
in
pop
push
inc
mov
lret
add
mov
bound
mov
mov
popa
inc
mov
pushf
or
push
add
inc
icebp
mov
lahf
jge
movsb
into
icebp
inc
pop
cltd
test
or
push
sahf
imul
mov
mov
iret
sbb
lahf
mov
orps
add
and
mov
pushf
mov
mov
int
push
xchg
and
int
dec
pushf
shrl
or
movsl
shlb
hlt
insl
mov
push
lahf
bound
jno
push
out
mov
inc
repnz
push
mov
xor
ret
xor
lds
mov
mov
call
jb
fucomip
pop
xchg
dec
aad
jnp
inc
mov
hlt
sbb
out
fisubrs
aam
loopne
insb
js
adc
xchg
les
xchg
out
adc
subl
loope
pop
sub
orb
mov
outsl
push
sbb
add
cld
cli
dec
mov
pop
sbb
fcmovnu
push
out
add
rorb
push
daa
fcomi
test
sub
aas
lods
rcll
lret
imul
adc
ficoml
test
jle
lcall
fucomip
cmp
mov
lods
daa
jo
mov
sbb
inc
push
mov
out
mov
sbb
mov
sbb
dec
sub
fadds
cmp
xchg
imulb
outsl
scas
mov
jp
fs
cld
pop
cli
stos
imul
push
leave
insb
shrb
mov
loop
mov
jnp
inc
das
gs
sbb
lods
rcl
movsl
xchg
ds
fiaddl
rclb
jp
in
sti
cli
adc
jl
mov
pushf
loopne
mov
jg
adc
mov
addr16
cmp
je
shr
pop
mov
jae
or
aas
je
fwait
daa
lcall
fsub
iret
aam
xorl
add
cld
inc
ret
and
lock
inc
cmpsl
imul
cltd
and
fidivrl
out
andb
iret
orl
push
jmp
mull
mov
imul
xchg
xchg
inc
imul
sbb
sbb
out
cmp
fxch
outsl
lea
mov
cltd
mov
imul
push
jno
push
ja
loope
cmp
addr16
or
push
push
inc
jmp
push
push
xlat
push
xorl
push
loope
enter
int3
jmp
dec
jl
call
or
xor
mov
jne
call
lds
adcb
jbe
hlt
mov
and
jnp
fwait
divb
clc
inc
enter
lock
push
pop
gs
adc
clts
adc
outsb
stc
loope
in
lods
add
fistps
push
imul
xchg
and
insb
xchg
and
add
lods
inc
rcrl
sbb
fstl
aaa
pop
pop
mov
and
add
cld
movsb
cmp
xor
add
rorl
mov
mov
es
mov
les
dec
pop
cld
enterw
push
inc
mov
imul
pushf
roll
cmp
mov
fists
push
lcall
ljmp
dec
mov
call
in
mov
cmp
push
sbb
xor
mov
sub
add
and
in
jle
sub
xchg
xor
sub
pop
or
mov
imul
add
xchg
mov
lock
cmp
icebp
cli
in
jns
xchg
aaa
aam
push
add
push
push
or
inc
push
rclb
outsb
imul
mov
mov
cmp
or
test
jne
push
lahf
add
sub
roll
sbb
mov
int
adc
int3
jb
jae
dec
add
xor
insl
in
mov
aam
mov
lahf
pop
sub
mov
dec
mov
push
xor
rcrl
cmp
aas
mov
imul
sbb
test
icebp
or
scas
push
xchg
or
int3
fimull
jg
fstl
cli
pop
add
cwtl
cmp
and
xor
stos
jo
scas
popa
cmp
jno
or
sub
mov
sbb
jno
cld
movsb
movhps
adc
gs
dec
xchg
cmp
inc
xchg
gs
inc
jge
ds
es
pop
aas
inc
or
sbb
mov
gs
sbb
incb
mov
sub
push
mov
push
int
sbb
add
xchg
dec
icebp
sbb
insb
pop
adc
pop
jmp
push
sub
out
pop
mov
cmp
insl
or
or
pop
add
cmp
ja
cld
fistpl
shr
iret
aaa
dec
es
popa
lods
or
xchg
ja
ss
stc
jnp
out
and
inc
sbb
mov
and
out
xlat
push
pop
add
dec
sub
and
mov
out
js
loop,pt
sbb
xchg
dec
push
insb
or
push
aad
xchg
cmp
lret
notb
xcrypt-cfb
cmpsl
in
in
insb
pop
mov
std
jne
cmp
jbe
cmp
mov
mov
in
xor
add
sbb
pop
data16
cmp
int
lods
xor
sub
pop
fwait
push
int
lea
les
pop
out
push
out
std
ljmp
pop
lods
dec
lahf
ja
mov
out
pop
scas
popa
jnp
xchg
cmp
loope
pop
jl
xchg
mov
clc
mov
std
mov
sbb
outsb
out
sbb
out
jle
mov
jno
sbb
pusha
jb
xchg
xor
scas
cwtl
mov
inc
push
push
jae
xchg
gs
repz
push
fidivrl
cltd
add
in
fnstcw
ljmp
fsincos
fcompl
push
jp
rolb
push
fistl
add
bound
shll
inc
or
cwtl
lds
sbb
mov
mov
lret
lret
shl
arpl
js
push
test
dec
dec
jo
sbb
ret
xor
xor
ss
mov
popf
pop
xor
xor
mov
jb
mov
add
mov
mov
insl
pop
loope
push
inc
test
jae
dec
test
outsl
inc
aaa
imul
aad
jb
ja
mov
ror
rcl
addr16
pop
int
xchg
pop
cli
idivl
jmp
repz
popw
add
stc
scas
outsl
xchg
jg
stc
out
jle
in
cmp
dec
pop
jg
in
xchg
or
subb
add
pop
push
xchg
xchg
cld
pusha
xlat
popa
sbb
pop
fwait
outsb
mov
add
insb
cli
inc
inc
sbb
enter
xchg
cmp
idivl
mov
mov
cmp
jg
cmp
ds
stc
cmp
rep
sbbb
and
sbb
xor
in
dec
in
fmull
in
xchg
pop
enter
push
fldcw
insb
aas
and
arpl
aaa
dec
mov
pusha
jle
lahf
sub
and
mov
sbb
es
or
out
mov
js
jo
fs
mov
insl
jb
inc
movsl
jno
and
mov
mov
xor
adc
add
pop
jbe
pop
inc
test
pop
xlat
push
fwait
cli
js
push
out
adc
push
adc
sar
mov
loope
adc
lds
xchg
sub
or
iret
into
mov
dec
inc
mov
cmp
mov
inc
sbb
cwtl
adc
push
outsb
imul
fs
pop
roll
lcall
daa
call
out
sbb
int
rclb
ljmp
jp
stos
xchg
lret
mov
jle
ljmp
fs
lods
mov
rclb
jnp
int
outsb
jnp
dec
and
add
mov
xor
test
adc
sub
adc
mov
mov
mov
imul
xchg
jo
xchg
test
jb
data16
cmp
test
cmp
pop
add
pop
test
imul
pop
jecxz
pop
imul
dec
loope
popa
pop
pushf
nop
jmp
ret
imul
cltd
cmpl
or
jge
pop
out
insl
pop
pusha
in
inc
mov
mov
sbb
in
cwtl
lret
iret
and
add
adc
mov
add
les
cmp
pop
mov
aas
test
sarl
inc
or
dec
pop
js
sub
jmp
jnp
lds
or
mov
hlt
inc
add
jnp
xorl
out
bound
addr16
pop
loope
addr16
scas
xchg
mov
mov
and
ror
pop
dec
popa
adc
jne
pop
or
testb
insl
dec
repz
mov
ds
adc
inc
icebp
out
andl
outsb
cltd
mov
or
or
mov
dec
push
rorb
jno
mov
cld
rcrl
out
enter
movaps
dec
scas
outsb
push
dec
cmpsl
int3
testb
pop
sbb
bound
dec
xchg
dec
fwait
xor
popa
xchg
sbb
mov
js
cmpsl
out
sbb
icebp
mov
and
enter
ds
jecxz
push
inc
inc
std
jo
add
jecxz
cmp
jg
mov
cmpxchg
cs
push
imul
cmp
cmp
cmpl
iret
sub
subl
cmp
cmp
sbbl
xchg
mov
test
mov
inc
push
push
roll
mov
adc
pushf
xchg
push
adc
mov
fidivrl
test
pop
shl
in
push
pcmpgtb
mov
mov
adc
frstor
add
push
dec
jp
jbe
jae
in
dec
jecxz
dec
sahf
jne
jmp
lcall
mov
add
xchg
addr16
in
and
xor
stc
jno
pushw
push
enter
mov
dec
clc
sysenter
scas
imul
jae
jg
pop
in
cmp
dec
jg
bnd
adc
dec
rolb
inc
sub
fstpl
cltd
jno
adc
cwtl
test
popf
push
test
in
mov
push
out
mov
inc
sbb
aas
sbb
dec
xchg
cmp
pusha
pop
cltd
sbb
cmp
imul
test
popa
test
andl
cmc
lret
shlb
stc
pop
push
xor
fstpl
cmp
sbb
push
fimuls
mov
sbb
out
xor
clc
push
sbb
mov
loop
subb
out
aad
or
pop
push
mov
fwait
les
or
bound
cld
push
xchg
addr16
stc
rep
daa
inc
and
cmpsl
in
iret
sub
pop
lahf
jmp
adc
frstor
int3
and
ljmp
inc
shrl
repz
mov
jae
cmc
push
leave
mov
test
push
cmp
xor
xchg
dec
test
ja
cmp
lcall
sub
jle
xchg
js
out
mov
movsl
rorl
mov
and
iret
bound
push
push
adc
cmp
xlat
add
xchg
data16
xchg
cmp
mov
jb
adc
fnstenv
mov
sbb
mov
jae
mov
xor
cli
loopne
cmp
enter
cmp
dec
mov
cltd
dec
xchg
xor
jl
mov
nop
jb
ret
repz
inc
scas
mov
test
enter
sahf
and
pop
adc
mov
mov
jmp
and
add
push
into
and
outsl
icebp
dec
jp
jl
cmp
add
loope
mov
dec
add
mov
pop
or
inc
cmp
xchg
xchg
icebp
iret
mov
hlt
mov
or
jno
stos
cli
movsl
pop
out
and
ss
xor
sub
push
and
ja
mov
movsl
std
and
pusha
sbb
push
sub
inc
stos
mov
in
push
cmp
data16
or
jmp
lods
push
and
pop
ret
xchg
mov
test
jecxz
push
xor
fcomps
sub
jno
pop
in
lcall
testb
push
rolb
cmp
sbb
imul
mov
pop
cmpsl
inc
xor
enter
es
shl
fcmovne
clc
xor
int3
shrb
hlt
xor
jns
jns
lcall
mov
jge,pn
pop
mov
dec
xor
ret
mov
std
sbb
push
pop
rcpps
stos
faddp
shrb
pop
mov
int
flds
cld
mov
fnstenv
lds
jb
mov
out
inc
pop
sub
dec
push
shl
rcl
xor
push
lock
aad
in
xorb
out
lods
stc
xchg
pop
lds
jp
test
xchg
jmp
lds
mov
pop
test
popf
movsl
data16
mov
sub
adc
xor
xchg
aad
push
jl
push
pusha
jns
test
mov
sub
and
push
and
lock
jmp
movsb
add
into
lea
xchg
mov
bound
push
jecxz
into
rorb
push
xchg
andb
inc
mov
addr16
sub
xor
cltd
xchg
cmp
mov
gs
daa
lret
rorb
gs
jmp
popf
mov
popf
jno
mov
fstpl
xchg
cmpl
adc
push
jbe
scas
pushf
cmp
jno
inc
in
frstor
jnp
sub
cmp
cwtl
jmp
jmp
jno
push
vxorps
cmp
add
enter
popf
dec
push
fisubrl
insb
mov
movsb
lea
lds
sub
push
jae
adc
test
leavew
and
ret
test
or
out
mov
insb
dec
adc
push
mulb
mov
out
cmc
mov
lods
inc
mov
fbstp
push
xor
sahf
mov
icebp
jmp
sti
inc
jmp
adc
mov
push
lret
or
loope
cmp
scas
rep
pop
and
sarb
push
call
push
sti
mov
pop
mov
pusha
repz
in
adc
fldl
dec
or
fcoml
lahf
mov
les
xchg
mov
movsl
out
imul
ljmp
in
jne
hlt
test
push
jne
mov
mov
jg
mov
sub
or
push
cld
dec
fiadds
and
notb
shlb
sbb
mov
bound
mov
adc
jge
sahf
add
inc
xlat
inc
cmp
fwait
rcr
mov
fabs
ljmp
pushf
add
add
mov
popf
sbb
aas
fdivrl
test
jo
clc
inc
xchg
sti
mov
cmp
movsl
ss
push
je
lock
test
cmpsl
xchg
pop
out
repnz
adc
in
dec
stos
lds
pop
lock
pop
aas
add
xchg
shl
mov
mov
mov
pop
outsl
out
je
mov
add
in
push
push
mov
test
cmc
stos
sbb
jge
ror
inc
jnp
aam
xor
loope
or
cmp
sahf
in
subl
push
push
arpl
stos
inc
roll
or
ss
lds
xchg
fdiv
lret
and
or
inc
cmp
negb
pushf
es
xor
push
sub
sub
lock
into
enter
into
repz
lods
pop
xchg
mov
cmovl
ror
jmp
jnp
cmp
jae
aam
popa
sub
jo
dec
jg
mov
jno
les
pop
sub
mov
stos
cmpsb
cmpsl
jp
fwait
ss
filds
stos
lock
pop
shl
cli
neg
scas
in
mov
imul
fistpl
in
push
repz
pop
int3
pop
loope
jp
sti
xchg
lods
or
and
or
fisubrs
les
repz
inc
cmp
jbe
jl
jle
scas
dec
div
mov
inc
cltd
fnstcw
xchg
inc
jmp
or
aad
xchg
pop
jae
sbb
xchg
push
mov
add
and
lret
es
fisubrs
jne
aas
mov
lret
and
aad
in
lods
inc
ret
std
fisubrl
add
test
rcr
lret
ja
sbb
shl
rclb
test
inc
cmpl
scas
xchg
cli
aad
adc
in
test
adc
add
xchg
shll
mov
popa
xlat
xor
mov
add
inc
rolb
dec
out
jecxz
popa
push
addb
pop
adc
adc
adc
xchg
sbb
movsl
ror
dec
popa
jle
add
mov
pop
ds
daa
out
mov
xlat
pop
xchg
or
in
inc
cltd
and
jp
sbb
xor
arpl
idivl
push
push
push
push
adc
fisubrl
mov
je
addr16
xchg
nop
cld
cs
bound
mov
lcall
lcall
fldl
std
lods
pop
stos
mov
aad
aaa
repnz
ror
mov
fwait
or
repnz
mov
les
cmp
push
inc
pusha
jecxz
xchg
arpl
js
or
rcr
add
adc
ret
pushf
mov
xor
jle
adc
clc
mov
loop
jg
inc
sub
out
mov
mov
xchg
cmp
cmp
jmp
lods
roll
lret
push
call
push
pop
or
xor
dec
add
int3
inc
loopne
mov
mov
imul
out
jno
fists
fsts
push
pop
xchg
imul
push
movsb
popa
mov
ret
sub
hlt
push
in
dec
lods
ljmp
repz
hlt
call
mov
jnp
dec
push
fisttps
mov
mov
push
cld
dec
dec
adc
ja
pop
sbb
test
cmp
inc
xor
xchg
mov
roll
xchg
call
sbb
ja
in
ljmp
lcall
xchg
lret
cmp
mov
insb
push
xor
push
sub
mov
aad
sub
inc
lods
popa
loope
pop
add
daa
les
pop
in
fwait
xchg
fs
daa
repz
dec
addr16
add
mov
inc
add
jle
mov
insl
cli
in
cld
fstpt
cltd
add
repz
cmp
iret
mov
repz
push
cmpb
dec
cmp
add
nop
and
ss
add
xor
xchg
adc
jp
es
and
pop
jnp
push
clc
cmpsb
jne
xchg
pop
cmp
pop
and
xchg
das
jle
xchg
pop
dec
in
mov
inc
mov
arpl
xlat
mov
cmc
icebp
inc
sub
xorl
subl
test
xlat
jb
or
scas
pushf
xor
add
fidivrs
sub
rorb
std
push
push
nop
call
out
add
push
or
add
jl
xor
insl
in
outsb
xchg
sahf
loope
sbb
and
insl
pop
test
xchg
cmp
sub
dec
cmp
jmp
ds
sub
loope
les
push
cmp
sbb
stc
push
mov
pop
fidivrl
cmpsb
add
adc
jmp
dec
les
or
out
lods
icebp
push
cmp
in
xor
jp
cmp
mulb
fcoms
repnz
fdivrl
adc
mov
adc
lods
xor
cmc
sbb
push
inc
push
fnsetpm(287
lahf
xchg
pop
inc
imul
pushf
or
sarb
mov
cs
inc
lahf
cld
jnp
lret
ss
or
xchg
cmpsl
xor
pop
data16
ljmp
popa
out
pop
mov
xor
jno
ret
movsb
jge
pop
sbbb
cwtl
daa
inc
inc
cmpsb
in
lret
test
or
jnp
lret
inc
js
aam
mov
or
cltd
fsubrs
ret
inc
aas
outsb
xor
icebp
es
shrl
inc
jmp
adc
shl
cwtl
mov
js
cmp
xchg
aas
sub
lods
es
dec
iret
ljmp
jp
mov
push
cmp
add
mov
lds
xchg
xchg
aas
xorb
loope
and
ss
test
add
jnp
cmp
repz
mov
leave
add
in
stc
mov
xchg
dec
es
jb
ret
xchg
mov
add
enter
mov
and
in
int3
pop
inc
stc
int
in
and
fbstp
mov
pop
loop
int
dec
je
mulb
mov
ja
ds
sarb
cmp
popf
in
add
fistl
mov
and
imul
repz
or
enter
clc
negl
addr16
cmc
add
fldt
ja
xchg
dec
lret
mov
pop
push
cmpsb
adc
inc
shr
in
data16
fs
test
sbb
aaa
aas
outsl
cld
mov
outsl
lods
adc
sub
pop
popf
int3
push
push
inc
mov
jno
mov
adc
pop
jo
in
xor
or
call
mov
ret
iret
dec
or
adc
add
xor
in
cs
es
sub
mov
inc
mov
in
fstpl
mov
lock
dec
or
sub
dec
pushf
mov
mov
icebp
mov
dec
inc
test
sbb
pusha
lods
sti
cmp
fsubrl
rclb
or
sti
add
mov
icebp
add
std
xor
fnstsw
lods
inc
add
lock
in
sti
dec
mov
and
insl
or
push
test
xor
add
jge
jl
nop
xchg
cmp
pop
add
into
cmpsb
dec
leave
cmpsl
aaa
adc
cmp
ljmp
std
test
sub
pusha
inc
xchg
jo
ljmp
or
stc
pop
xchg
sub
andl
outsb
lcall
xor
popa
and
popf
cmp
add
push
jp
sti
and
fdecstp
push
fs
test
pop
fisubs
push
int
add
inc
mov
dec
fists
add
cmpsb
cmp
cmpsb
lret
std
jmp
fimuls
enter
icebp
pop
add
and
in
and
xchg
ret
out
cmpl
and
cli
das
xor
test
jne
mov
pop
push
mov
add
jle
cmp
jb
outsb
push
es
aaa
xchg
jnp
int
xchg
cmc
lods
mov
outsb
inc
fs
lods
ss
add
or
xorb
movb
stos
add
daa
mov
roll
adc
add
push
sbb
xor
add
or
sbb
mov
lcall
inc
lahf
sub
sbb
push
imul
sti
mov
sbb
mov
imul
sub
xor
mov
add
pop
dec
xchg
mov
inc
enter
into
mov
sbb
sub
sbb
loop
pop
fimull
mov
mov
ja
adc
std
push
mov
orb
sub
pusha
jp
jmp
inc
push
mov
sub
sub
or
scas
not
or
test
sub
jnp
mov
xor
jle
jbe
sti
cmp
lcall
jne
loop
arpl
add
addb
pop
xor
out
ret
or
fistps
adc
mov
adc
xlat
js
lea
jecxz
mov
repnz
out
test
nop
sub
mov
ss
cmovbe
fwait
xor
rolb
icebp
ljmp
dec
fiadds
lcall
mov
fadd
mov
mov
xchg
xor
rorl
adc
mov
cmpb
les
add
mov
repz
inc
testl
mov
or
ds
adc
cmp
shll
dec
addr16
std
std
sub
xchg
sbb
iret
xchg
push
aad
mov
pop
mov
xchg
sub
mov
jo
test
outsb
and
loope
cwtl
sub
or
insb
cli
dec
mov
insl
and
decb
ret
push
jmp
push
jmp
push
xchg
mov
cltd
mov
int
movsb
into
out
pop
mov
out
aaa
or
nop
pop
sbb
out
ja
add
outsb
jp
out
test
mov
mov
push
add
test
in
cmpsb
push
jmp
push
cmp
jb
int
or
iret
jnp
cs
mov
xchg
dec
cmp
push
mov
cmp
bound
lods
shrb
rcl
xchg
jno
cmp
leave
add
push
and
arpl
pop
jge
hlt
push
notl
mov
shll
xorl
hlt
sbb
dec
loop
cld
iret
std
xor
insl
dec
rclb
sbb
add
enter
lahf
mov
roll
cmp
cld
mov
ficoml
inc
pushf
arpl
sbb
pop
xchg
mov
rcrb
sbb
add
fdivrl
ret
inc
dec
bound
stos
inc
std
pop
pop
jl
push
movsl
inc
lret
mul
sbb
pop
pop
push
test
mov
divb
cmp
out
pop
dec
int3
idivb
aad
push
loopne
pop
mov
xchg
stos
inc
cltd
mov
cmp
popf
stos
shlb
jecxz
nop
imull
xchg
or
xchg
enter
inc
int3
lds
jae
jg
push
mov
into
push
dec
push
jg
add
insl
xor
pop
imul
sbb
test
jne
or
mov
pop
xor
test
lret
cmp
vandnpd
leave
xchg
lret
sbb
jle
inc
outsb
pop
lret
rorl
pop
andl
clc
idivl
add
push
aaa
push
pop
inc
aad
and
andb
mov
sub
sti
pop
popf
xlat
nop
out
scas
je
dec
loopne
ret
or
dec
aas
fsubrl
test
cld
clc
or
cmpsl
cmp
xor
movsl
sbb
out
inc
xor
push
push
popf
xchg
je
fwait
mov
and
mov
lahf
pop
movsl
std
add
daa
insb
dec
add
mov
repnz
lock
dec
data16
testl
pusha
iret
rol
stc
adc
add
negl
popa
ret
cltd
xor
jmp
divl
out
jmp
enter
mov
les
and
jne
mov
shrb
mov
cmc
xchg
sbb
xchg
in
pop
test
xlat
dec
xchg
ja,pt
adc
mov
push
cmp
adc
add
scas
mov
and
cmpsb
aad
cmp
repz
xor
popa
nop
movsb
rcll
scas
js
dec
idiv
push
xchg
fdivl
jb
xchg
jmp
mov
fisttpl
jne
adc
adc
int
stos
xchg
dec
ficoml
int
cmp
imul
rclb
xchg
pop
mov
sub
outsl
mov
sbb
sarb
in
out
repnz
mov
cwtl
subb
fidivrs
imul
xchg
jno,pn
pop
cmp
shrl
lock
mov
mov
out
jg
cmpsl
cmp
adc
or
cmp
jns
in
inc
sahf
add
mov
lret
xchg
lahf
and
push
mov
cltd
push
xor
and
popa
sub
push
lods
push
andb
jbe
outsl
sahf
xchg
pop
jge
and
lret
or
test
cltd
lods
test
and
pop
adc
jbe
push
out
pop
mov
rcrl
mov
jecxz
ror
loope
sbb
or
adc
aad
gs
sbb
js
or
rdmsr
in
inc
pop
push
cmp
mov
push
pop
mov
push
jb
mov
sub
lods
fistpll
adc
lret
xor
adc
mov
enter
mov
outsb
stos
pop
sbb
fists
add
iret
sbb
fisttpll
jmp
dec
mov
dec
imul
inc
xor
das
push
mov
and
xchg
ja
adc
lahf
popf
lock
xor
sub
lock
ljmp
daa
add
fistps
es
pop
and
push
sbb
scas
leave
or
outsb
or
push
sar
mov
add
pop
and
mov
mov
fwait
inc
xchg
dec
xchg
sti
je
inc
ret
and
sub
clc
dec
cmpsb
pop
in
std
das
pop
leave
push
fld
push
mov
cli
imul
stc
loopne
je
jle
mov
sbb
push
inc
daa
jno
dec
popa
ret
in
adc
lea
fdivl
ret
fs
mov
pop
push
enter
sub
sbb
gs
push
add
dec
repz
orb
scas
fistps
mov
xchg
subb
bound
adc
cwtl
xor
push
inc
stos
fs
or
xchg
mov
mov
mov
iret
addr16
sarb
inc
sbb
lock
jns
orl
testb
jnp
or
jg
jne
and
mov
lahf
mov
cltd
push
fldcw
adc
jno
mov
fidivs
push
insl
mov
sbb
xchg
shlb
push
or
aad
pusha
popl
dec
pop
or
pushf
pop
and
mov
jmp
popa
movsb
cmp
jle
jecxz
or
rclb
dec
push
sub
repz
into
adc
es
inc
or
mov
pop
aas
repnz
xchg
insl
push
and
jmp
push
push
ds
jns
sbb
push
ret
jg
pop
inc
int
cmpsl
out
xchg
ret
clc
jae
lods
xchg
cmp
inc
cwtl
pop
push
mov
xchg
xor
xchg
cmc
adc
jg
mov
cmp
rolb
inc
cli
dec
mov
ror
bnd
lea
sbb
pop
orb
pop
out
jge
xor
mov
lahf
popa
int
mov
outsl
or
mov
and
adc
and
pop
jecxz
das
std
jg
jae
andl
mov
lcall
and
fistps
flds
gs
out
mov
inc
sbb
inc
add
push
jne
int3
fwait
repz
sbb
lods
or
push
std
aas
mov
push
push
cmpsb
js
subb
mov
fwait
fs
or
xchg
je
leave
jl
fistpl
add
push
jecxz
xchg
gs
adc
push
jae
shrl
or
fs
dec
scas
int3
lds
xchg
ljmp
inc
jecxz
dec
pop
pop
sbb
mov
add
stc
inc
jns
or
repz
jmp
mov
test
sbb
and
sub
or
mov
jge
sub
imul
add
ds
adc
inc
repnz
loopew
sahf
sbb
jne
jmp
aam
inc
dec
xchg
ss
leave
and
lea
sahf
xlat
ret
repz
aam
orl
xchg
outsl
out
loopne
int
push
out
xchg
data16
adc
push
cmpsl
fs
jne
sub
fnstcw
lcall
fmul
cli
xor
ret
cmp
mov
mov
cmpsl
ficoms
lods
push
loope
mov
mov
stc
push
lahf
rcrb
loopne
mov
subb
stc
aaa
in
mov
jmp
cld
sbb
js
jmp
jle
mov
pop
xor
cmp
add
dec
les
or
call
cmp
lahf
leave
cmc
ja
aaa
xchg
je
sti
cmpsl
cmp
and
in
out
mov
cmc
mov
pop
mov
test
outsb
repz
ja
lock
lahf
jne
mov
add
push
insl
adc
mov
es
sti
fstps
inc
push
test
leave
cmp
cmp
mov
inc
imul
cmp
pop
sti
sbb
in
ja
sub
pop
mov
mov
sub
out
stc
push
addr16
out
imul
xchg
mov
mov
stos
scas
out
cltd
pop
lea
cwtl
int
xor
pop
out
into
or
pop
inc
aad
fidivl
pusha
mov
mov
or
mov
push
loope
lds
popf
adc
mov
mov
push
add
outsl
pop
cmpsb
mov
arpl
mov
out
mov
ds
test
mov
pusha
cmp
es
mov
enter
mov
scas
jae
mov
lret
imul
or
lds
mov
lods
xchg
test
ja
push
inc
fst
xchg
hlt
int3
pop
dec
loopne
loopne
in
add
jmp
inc
call
mov
fisubrs
in
xchg
push
adc
xor
call
sbb
add
call
mov
pop
jne
hlt
fimull
xchg
xchg
pop
ja
lahf
lods
and
mov
icebp
outsb
jnp
inc
push
or
xchg
jecxz
out
mov
pop
cmp
mov
push
inc
sub
js
xlat
insb
pusha
xor
and
adcw
pop
mov
mov
adc
push
or
cmp
dec
ficompl
insl
jge
push
inc
push
lret
or
dec
movsl
out
inc
jecxz
adc
ds
in
ds
movsl
cmc
pop
jb
stos
mov
rol
xchg
add
mov
cmp
sub
add
in
jne
mov
inc
adc
in
cmp
imul
xchg
cwtl
push
stc
push
lds
sub
jg
or
insl
ljmp
or
jb
fsubrs
mov
insl
js
sahf
sahf
mov
insl
jmp
mov
mov
xchg
pop
jg
push
je
insb
inc
lret
push
outsl
lcall
jl
inc
mov
pop
mov
pop
dec
lds
cmp
mov
aas
dec
in
hlt
scas
inc
mov
push
rorb
add
inc
inc
xor
pop
test
or
jno
mov
lods
into
inc
pop
hlt
push
nop
or
scas
pop
aad
aad
dec
push
push
mov
ss
orb
aam
cmp
ljmp
pop
mov
fcomps
mov
out
loop
hlt
outsl
push
cmp
fstps
gs
lods
adc
add
or
dec
fldz
cmpsl
jnp
or
add
mov
movsl
rorl
dec
mov
jl
movsb
test
mov
leave
push
ret
mov
pop
mov
jmp
or
scas
aad
xor
mov
and
xor
cltd
mov
imul
add
dec
jecxz
jge
or
push
mov
test
mov
daa
pop
cmp
xchg
dec
sub
movsl
mov
sub
hlt
insl
ret
or
in
iret
dec
imul
das
rcrb
add
adc
jne
repz
sub
hlt
inc
enter
and
scas
sub
dec
xchg
inc
pop
loopne
sahf
push
and
cmp
jle
scas
loopne
sbb
jmp
xchg
inc
js
movsb
xchg
xlat
xchg
ret
and
std
mov
ss
dec
mov
add
cmpb
jmp
jb
lahf
popf
addr16
roll
xor
pop
insl
out
rcl
mov
cmpsb
and
es
or
xor
mov
fisubrl
insl
aas
pop
mov
hlt
lods
cmpsl
es
dec
jg
and
repz
popl
push
mov
dec
iret
push
pushf
mov
outsb
sbb
enter
mov
es
push
sub
xchg
test
inc
cltd
xor
inc
xor
adc
into
out
inc
lret
add
dec
adc
jecxz
lret
hlt
mov
jecxz
pop
jbe
cmp
es
outsb
inc
xor
addr16
hlt
fwait
bound
jno
mov
and
test
xchg
cmc
jge
jbe
pop
xchg
xor
in
adc
xor
cld
aam
add
pop
leave
mov
imul
mov
lods
pop
ss
inc
or
inc
xor
subl
out
pop
gs
repz
stos
push
pop
sub
rcll
arpl
add
xchg
mov
push
adc
jecxz
subb
dec
and
aaa
cmc
push
sub
jno
test
and
jmp
aaa
movsb
pop
out
pusha
dec
xchg
inc
sbb
jns
fcmovnu
push
lods
mov
pop
xor
pop
imul
cltd
sub
dec
add
enter
jb
or
pmullw
loopne
mov
push
mov
or
out
or
popa
or
addr16
mov
daa
cmp
push
sbbl
inc
mov
ljmp
dec
xchg
inc
add
loope
inc
clc
mov
sbb
xchg
mov
sub
clc
cmpsl
inc
addr16
add
xchg
push
mov
arpl
and
jl
js
aam
sub
leave
pop
lds
dec
aas
fisubl
out
sub
or
stos
stos
ret
dec
pop
mov
jl
call
push
mov
mov
jae
shrl
jp
popa
jecxz
sub
ds
pop
dec
test
mov
cmp
cld
fwait
daa
in
ljmp
test
inc
pop
sbb
mov
call
jb
jl
cmp
inc
mov
arpl
jno
into
fbstp
subb
lods
lds
adc
dec
aad
hlt
jle
sbb
lahf
mov
outsl
push
sbb
pop
or
xchg
ja
and
push
lds
outsb
lods
adc
iret
shlb
sbb
loop
mov
shll
fwait
addr16
jp
in
cmp
mov
decl
mov
mov
fdiv
loope
addr16
sub
repz
cmpsb
fdivrl
adc
xor
cwtl
push
imul
pop
mov
pop
cs
mov
sbb
xchg
clc
mov
xor
adc
mov
sti
pusha
pop
mov
cmp
sub
and
add
xor
dec
xchg
push
fcomps
stos
mov
sti
dec
cmpsb
repnz
jmp
xchg
sbb
ror
mov
jmp
test
pop
lret
push
jns
rcrl
leave
jnp
ja
inc
loopne
pop
xchg
fidivs
je
jb
jns
xchg
push
mov
ljmp
push
hlt
int3
lahf
fldcw
ficompl
mov
outsb
jae
in
int3
out
mov
rclb
outsl
mov
hlt
push
or
jnp
test
mov
jo
pushf
fiadds
add
fdivrs
into
mov
pop
imul
mov
dec
mov
xchg
movsb
repz
xchg
std
sti
notb
add
adc
jns
cmpsl
scas
cwtl
cli
rclb
push
mov
mov
and
push
insb
sub
dec
mov
xchg
push
push
loopne
push
xchg
call
ja
push
lea
outsl
pop
repz
iret
cmp
mov
xchg
jmp
std
adc
sub
mov
push
cmc
dec
mov
adc
dec
mov
pop
leave
xchg
xchg
repz
and
jbe
xorl
std
adc
or
cmp
adc
sub
push
js
aas
jle
mov
test
ds
dec
add
fwait
inc
push
std
aam
push
mov
add
jne
imul
dec
outsl
test
dec
mov
adc
mov
sbb
xchg
cmp
rcrl
xor
mov
pop
adc
ss
div
nop
inc
lds
enter
push
clc
psubw
jmp
lcall
dec
fisttps
jg
push
sub
adc
add
mov
push
insb
push
pop
push
push
mov
mov
sbb
jp
loope
mov
cmpsb
testb
repnz
shlb
aaa
xchg
xchg
xchg
add
ljmp
add
scas
add
dec
pop
sbb
mov
ficoml
dec
inc
repz
not
lea
cmpsb
pop
push
fnsave
in
or
jge
lret
ljmp
and
xor
add
sub
or
jne
je
xchg
push
push
ljmp
cmp
pop
sbb
insb
xor
mov
pop
out
or
lahf
inc
test
int
adc
sbb
dec
mov
je
adc
inc
nop
cmp
lea
in
jno
adc
repnz
xlat
loopne
test
push
lahf
mov
or
frstor
int
movsl
mov
pop
sahf
sbb
push
aas
leave
cmp
cmp
jne
sbb
cmp
push
cmp
jns
in
testl
sbb
jg
dec
or
imul
sub
push
repnz
or
ljmp
mov
pop
jge
mov
lcall
sahf
rol
cs
hlt
movsl
imul
mov
dec
mov
aad
sbb
in
adc
orb
sbb
cmp
cmp
add
shlb
imull
cmc
repnz
mov
mov
xor
fsts
and
mov
shl
lods
lahf
push
cli
cmp
dec
sbb
mov
cwtl
andl
mov
cmpsb
xchg
addr16
push
push
fwait
push
jbe
cmc
mov
aas
dec
in
frstor
mov
imul
adc
xor
adc
cmp
mov
inc
hlt
cmpsl
insl
mov
sub
sub
xchg
test
pop
das
int3
pop
addr16
in
lock
loopne
xchg
fstp
jp
xor
into
or
dec
cmp
push
cli
xchg
pop
pop
loope
outsb
js
add
rorb
scas
fcomps
xchg
adc
cmp
pop
mov
mov
add
cmp
addr16
mov
sub
sbb
aas
negl
adc
lahf
scas
push
out
adc
xor
lods
sbb
and
aad
fdivrs
xchg
inc
sbb
aas
out
cmp
and
lcall
stos
pop
xchg
imul
rcrb
cmp
loop
into
dec
lods
mov
jnp
in
mov
push
mov
lcall
out
out
enter
sub
mov
pop
lock
pop
out
nop
sub
mov
sbb
inc
adc
xchg
mov
push
or
add
loope
or
xchg
push
fcmovnbe
lret
int
les
test
dec
add
fidivrs
imul
mov
nop
clc
insl
faddp
mov
sbb
enter
dec
inc
out
and
mov
cmc
test
inc
mov
mov
push
mov
sub
ja
adc
lea
sub
es
aam
sbb
mov
scas
subl
lods
sbb
call
xchg
and
lcall
shlb
in
xor
icebp
and
push
inc
lret
out
in
mov
sub
and
inc
or
enter
daa
push
mov
inc
or
pop
mov
in
fucomp
mov
mov
in
dec
int3
lods
sub
lret
stc
dec
adc
jnp
and
arpl
sub
dec
xor
cmp
fs
mov
cmp
js
out
add
repnz
repz
push
movb
ficomps
aad
and
inc
add
cmp
mov
xchg
mov
ss
int3
stos
push
data16
js
in
out
fldt
cmpsl
lret
lret
imul
repnz
dec
bound
lahf
data16
jecxz
mov
dec
cwtl
xor
sti
sub
xor
fisttpl
jbe
or
xorl
push
adc
mov
sub
and
add
mov
sbb
flds
fwait
pop
mov
rolb
mov
jl
xchg
popa
scas
loopne
mov
out
enter
mov
in
push
ss
or
pop
pop
mov
aad
or
mov
push
or
mov
mov
jmp
inc
inc
pusha
in
and
test
cwtl
test
mov
xchg
enter
and
fmuls
add
jno
push
sub
xchg
lcall
sarb
xchg
cmpb
andb
jne
inc
dec
mov
cmp
daa
mov
xor
leave
inc
sub
add
lahf
mov
rolb
dec
xchg
testb
push
push
xor
cmp
push
inc
adc
ret
pop
xchg
jmp
adc
xchg
pusha
xchg
jnp
mov
cltd
xchg
int3
push
mov
das
push
or
pop
lods
lds
cmp
mov
test
mov
ficoms
leave
lods
js
out
loop
jl
cmc
jns
mov
or
je
sbb
sub
pusha
inc
push
xchg
mov
sti
push
add
gs
ss
stos
lcall
pop
cs
push
fidivs
or
sub
dec
mov
mov
test
cmpl
and
cwtl
stc
movsb
lock
lds
iret
push
jg
mov
movsl
xor
mov
inc
scas
add
sbb
sub
lret
pop
lcall
lock
inc
pop
repnz
flds
mov
sarl
mov
jnp
loope
push
lahf
insb
inc
or
inc
sub
adc
jg
sub
cwtl
adc
dec
inc
push
cmp
rorb
insl
pmaddwd
adc
fcomip
aam
jbe
mov
std
repz
fnstcw
pop
cmc
ja
das
adc
push
inc
mov
mov
mov
xchg
and
ljmp
mov
inc
in
fbld
mov
mov
mov
and
push
inc
inc
inc
adc
mov
hlt
dec
xchg
inc
cmpsl
idivb
mov
neg
adc
push
jp
and
movmskps
cmp
sarb
cmpsb
rcrl
push
repnz
sub
jmp
mov
jle
mov
push
fists
cmc
aad
sub
movsl
sub
stc
flds
push
mov
pop
jbe
push
mov
sbb
dec
xchg
sub
mov
into
push
in
test
jle
inc
popf
repnz
jg
sub
or
xor
sar
jo
movsl
ret
or
das
push
sbb
cmc
outsb
adc
leave
inc
push
mov
testl
leave
pop
mov
mov
gs
insl
cmp
dec
je
mov
and
popf
pop
pop
jns
dec
xchg
andl
inc
add
insl
jmp
pushf
test
mov
mov
sbb
dec
int
sti
dec
mov
insb
jmp
outsb
movb
gs
push
mov
xchg
xor
in
outsl
orl
idivl
outsl
push
add
sbb
xor
dec
lret
push
cmc
outsl
mov
add
popa
fbld
scas
clc
add
clc
and
pusha
das
rolb
xchg
sahf
shl
leave
sti
jg
jb
call
ljmp
jae
icebp
call
jge
and
lock
sar
hlt
add
jg
out
or
into
add
into
movsb
xor
xchg
popf
push
push
into
addr16
cmpsl
add
imul
cmpsb
cmpsb
cmpl
cltd
sub
sarb
mov
jb
jg
cmp
repz
cwtl
cmpl
adc
push
mov
rol
out
jmp
das
pop
or
andl
cld
je
mov
loop
mov
push
test
lds
je
out
push
rolb
dec
xlat
cwtl
adcl
lcall
leave
pop
mov
pop
call
inc
fildll
and
xorl
or
je
enter
xchg
sbb
nop
cmp
or
add
inc
imul
push
ds
jne
repnz
and
adc
cmpsb
sbb
and
lock
dec
arpl
pop
fsubrl
les
mov
addr16
adc
jb
cmp
in
add
loopne
cwtl
add
dec
adc
sub
mov
push
mov
or
aam
xor
daa
fcomi
out
call
fimuls
mov
lods
mov
lcall
clc
subl
fists
xchg
dec
pop
pusha
test
jp
jle
add
jb
and
ds
es
daa
repz
push
popa
and
outsl
movsb
xlat
xor
jmp
fst
test
mov
test
addr16
xchg
in
fidivrs
add
mov
mov
in
sti
decl
jmp
ja
nop
loopne
add
les
das
test
stos
push
xchg
xor
mov
xchg
xor
and
divl
push
pop
pop
sub
inc
popf
test
and
mov
jl
cltd
xchg
and
jns
xchg
js
bound
inc
aam
mov
xchg
fsubr
insl
mov
js
in
int
test
fnstcw
mov
add
hlt
push
xor
mov
xor
pop
test
out
sarl
jbe
sbb
cmpsl
icebp
in
popf
inc
or
aaa
xor
jle
sbb
sub
push
sbb
dec
dec
mov
push
sub
cld
sub
gs
sbb
pop
push
jmp
push
loopne
inc
cltd
xchg
and
cmp
add
movsb
jbe
push
and
dec
jp
leave
adc
mov
jge
jb
mov
andl
xchg
leave
cmc
fs
insb
scas
xchg
and
stc
lahf
xchg
cmp
xor
scas
cmp
xchg
adc
and
fwait
mov
test
orl
sbb
shlb
insl
int
pop
nop
mov
dec
in
cld
imul
shrl
cwtl
insl
dec
loop
insb
jne
dec
popf
fildl
cld
mov
mov
scas
jo
enter
xor
xchg
fcmovu
mov
or
nop
cli
mov
push
shrb
test
xor
ds
in
xchg
jmp
sahf
int3
mov
je
xchg
addb
jp
pop
orb
pop
add
stos
call
andb
into
fcompl
push
push
ret
sti
lock
mov
mov
adc
mov
or
mov
popf
pop
add
push
ja
cmp
inc
mov
dec
test
dec
jmp
scas
ficompl
xchg
dec
mov
adc
dec
in
cmp
jg
cmp
mov
std
int3
mov
jnp
add
aaa
push
push
sub
or
cmp
mov
sbb
and
lock
inc
sbb
xchg
cmp
push
sti
fcoms
mov
xchg
aam
ljmp
xor
je
test
pop
and
add
mov
mov
sub
shrb
sub
lcall
mov
mov
sub
loop
sbb
out
shlb
mov
jle
mov
dec
arpl
mov
add
ret
xor
shr
lods
push
mov
mov
out
mov
lea
inc
add
out
add
fcomip
jo
jns
push
movsb
and
sub
test
sbb
mov
mov
pop
arpl
cltd
xor
sbb
xchg
stos
popf
es
arpl
or
int3
or
shl
je
lods
insb
shrb
je
ljmp
pop
xor
std
out
or
aas
sarl
sbb
dec
jmp
cli
enter
mov
jp
inc
addr16
add
cmp
aad
frstpm(287
imul
cmp
mov
sub
les
test
pop
jmp
sbb
fsubl
push
or
sbb
cmpsl
pop
gs
adc
sub
mov
and
stos
arpl
xor
cli
inc
jg
lcall
inc
arpl
jmp
dec
fidivs
sub
push
lahf
jmp
and
ret
popw
repz
pop
mov
add
es
stc
xchg
mov
stos
clc
mov
popa
bound
arpl
repz
and
adc
mov
pop
push
out
inc
push
or
aad
mov
jp
sar
sti
and
aad
adc
cmpl
push
or
cmp
loope
pop
fsubr
and
pop
ljmp
pop
inc
sub
movntq
lds
sbb
decl
fcoml
cmc
add
push
cmp
mov
dec
lock
lret
or
std
scas
or
xor
cmpl
mov
popa
sbb
jo
out
xchg
lods
mulb
mov
pop
das
loopne
xorb
xchg
test
sub
mov
mov
insl
and
outsb
test
mov
mov
cld
xor
dec
fsubs
mov
or
pusha
pop
insb
adc
xchg
cmc
mov
in
sbb
test
cmp
lds
sub
push
shll
frstor
add
sub
mov
add
push
xchg
hlt
lock
pop
cld
push
std
fistps
inc
inc
ljmp
stc
scas
xor
cmpsl
or
divb
jbe
jecxz
jl
jne
cld
dec
gs
dec
xlat
xchg
mov
add
icebp
cmc
sbb
out
add
out
sbb
mov
out
add
cmp
jg
fwait
pop
push
jle
xor
sub
cltd
push
fwait
in
fsubr
mov
adc
daa
loop
pop
sti
add
cmp
cmp
lahf
stos
inc
inc
vmovsldup
mov
cmpsb
sbb
sub
cltd
xchg
mov
pop
and
push
orb
jno
adc
xchg
dec
sub
push
dec
inc
in
andb
xchg
and
mov
std
adc
out
push
cmp
cmp
cmp
cs
pop
mov
loope
sbb
pusha
and
push
sti
add
cmpsl
jb
stos
jo
cmp
mov
fcomps
inc
in
clc
cmp
mov
andl
pop
cmp
mov
popa
mov
shlb
mov
jle
push
xor
pushf
pinsrw
mov
mov
mov
inc
and
stos
jp
jo
mov
mov
das
mov
ret
jge
pop
ficompl
and
stos
add
je
mov
in
jp
add
sub
adc
int
ja
lahf
mov
data16
push
xlat
push
int3
fcompl
add
jae
fldpi
fdivl
es
inc
in
add
sub
mov
int
ret
roll
in
rol
and
jg
lret
mov
xchg
addr16
movb
push
idivl
or
sub
jnp
dec
je
int3
ret
loopne
movsb
add
mov
add
sbb
mov
sub
mov
mov
inc
mov
les
push
push
adc
xchg
test
cmpsb
pop
xchg
sub
rcr
outsb
xor
mov
jp
xchg
mov
sbb
cs
mov
mov
pop
js
out
and
sub
aaa
push
inc
dec
cmp
cwtl
lcall
scas
sub
aad
xor
int3
insb
int3
sbb
int3
out
mov
push
xlat
pop
ljmp
repz
adc
mov
sub
sub
gs
and
aaa
lret
push
fmulp
cmpsb
test
shll
sub
mov
jg
jle
dec
jns
out
sub
push
jnp
jl
jne
pop
push
test
insb
std
jmp
jbe
sbb
and
jnp
rcrl
jp
mov
mov
test
scas
mov
mov
jo
insl
test
stos
sbb
dec
pushf
push
pop
sub
mov
rol
or
inc
mov
insb
mov
std
mov
or
shlb
fisttpll
inc
push
jne
xchg
inc
xchg
or
add
mov
aam
dec
jo
sbb
fistpl
aad
adc
popf
or
jno
push
push
xchg
jno
xchg
or
aas
mov
jns
daa
dec
sub
ds
push
jne
mov
mov
sahf
push
xchg
jno
outsb
lods
insl
mov
aas
rclb
xchg
daa
cmp
gs
loopne
cmp
mov
sub
movd
or
pop
xchg
mov
jns
adc
sbb
mov
jecxz
mov
fidivrl
or
jl
inc
xlat
inc
pop
imul
fisttps
inc
cmp
add
cmp
add
mov
inc
cmp
sub
das
nop
dec
sbb
ds
sub
mov
xor
pop
aaa
int3
mov
and
popf
cmp
inc
imulb
test
xchg
adc
fdivr
mov
pop
sub
insb
mov
add
insl
fcomip
ds
stc
flds
out
cli
xchg
stos
loopne
jbe
ret
fidivs
sahf
xchg
mov
cwtl
jg
pop
cld
enter
les
xchg
shrl
arpl
je
mov
or
push
xchg
cmp
test
pop
mov
jg
arpl
inc
xchg
push
imul
int3
xor
mov
mov
mov
xchg
int3
dec
jg
xchg
notb
in
ljmp
adc
and
jne
jo
aam
push
dec
stos
insl
dec
dec
sub
fucomi
push
jns
push
dec
test
cmpsl
mov
jb
mov
xchg
int
and
fadds
mov
clc
inc
adc
mov
adc
xchg
cmpb
out
xor
push
xchg
xor
lds
inc
cld
roll
xchg
testl
xor
aad
or
loope
push
or
jecxz
rorb
adc
adc
fisttpll
ret
arpl
std
nop
aaa
push
mov
xchg
leave
fsubp
dec
cmp
jns
cmp
test
push
adc
addr16
pop
clc
decl
fld
xor
push
pop
out
data16
mov
sub
je
xor
dec
pop
mov
jmp
and
adc
mov
and
cwtl
add
aam
mov
fmuls
push
fsincos
cmp
loope
jno
test
sahf
arpl
xchg
mov
in
jmp
insl
sub
in
mov
sbbb
repz
rclb
adc
fnstenv
or
or
jae
sti
add
cmp
xchg
das
cmc
xor
popa
bound
das
sbb
aam
and
mov
pop
push
and
fdiv
mov
pusha
mov
test
jo
stc
ja
inc
mov
std
cltd
in
pop
push
mov
cmp
sub
or
mov
insb
movsb
fcomps
test
mov
fisubrs
lahf
mov
shlb
movsl
fdiv
test
imul
test
int
adcl
cmc
mov
mov
dec
mov
push
inc
or
pop
mov
push
scas
loop
and
cmpb
clc
or
stos
dec
or
mov
icebp
mov
jmp
int3
jae
in
push
data16
cmpl
lret
mov
inc
mov
inc
cld
push
inc
mov
sub
fstl
es
dec
pop
cmc
xchg
fistl
xchg
fistl
test
in
ret
sub
and
jle
and
sub
ret
pop
jns
insb
cmp
add
scas
lods
lahf
lock
test
out
imul
jbe
addr16
filds
push
or
add
inc
outsb
push
push
movsl
bound
jne
xor
nop
xor
outsl
sub
gs
inc
jmp
lret
and
pop
pusha
aad
scas
push
mov
xchg
ret
outsb
mov
rcll
mov
clc
mov
sbb
mov
or
lahf
ds
pop
imulb
or
mov
cmpl
and
out
fwait
and
inc
fbstp
mov
subl
mov
test
gs
xor
test
daa
dec
movsl
pop
sub
or
pop
dec
xorb
mov
stos
loop
sub
hlt
mov
cmp
aaa
test
jns
cmpsl
cmp
mov
push
adc
xor
sbb
sbb
and
mov
jl
lcall
shll
mov
push
add
cmp
outsl
mov
adc
inc
dec
pop
les
add
pop
lds
andl
dec
jns
mov
pop
sbb
inc
lods
xchg
mov
add
pushf
pusha
mov
pop
lods
inc
mov
cmpsl
push
jne
xchg
push
dec
jae
out
dec
negb
insb
jb
lahf
xchg
int3
nop
or
lock
pop
mov
imul
mov
or
shlb
mov
mov
std
xchg
in
fstps
push
adc
xor
push
fmul
enter
clc
push
mov
shlb
push
iret
jb
lret
xchg
mov
clc
sahf
xchg
cmp
pop
scas
int3
cld
pushf
mov
pop
dec
xchg
sbb
test
fidivs
inc
insb
add
sbb
inc
outsl
hlt
cmp
push
dec
loop
lods
xchg
mov
sub
add
jbe
mov
mov
jmp
subl
sub
filds
movb
pop
das
fbstp
xor
sub
pop
std
cmp
pushf
dec
dec
outsb
cmp
or
mov
sbb
icebp
ss
and
fisubs
aas
sbb
jle
adc
push
push
cltd
aad
xchg
das
xchg
jle
push
sbb
mov
lcall
jmp
mov
shrb
aam
dec
mov
adc
cmp
rcrb
rclb
or
loop
aaa
out
call
shl
scas
inc
dec
push
mov
mov
and
and
adc
push
pop
sahf
scas
sti
lea
js
dec
xorl
mov
cmp
cmp
dec
sarl
nop
mov
mov
lock
or
cmc
pop
or
xor
hlt
mov
adc
stos
mov
popf
inc
xlat
arpl
sbb
jle
arpl
movsl
lret
and
jnp
aaa
xor
xor
cmc
dec
hlt
mov
or
popa
dec
cmp
lods
aad
loope
cld
and
add
repz
sbb
lret
pop
inc
inc
inc
push
scas
insb
imul
arpl
cmc
inc
pop
add
clc
sarl
jle
jp
aas
jmp
aas
pop
faddp
adcl
cmpsl
stc
xor
std
stos
pop
ret
pop
dec
stos
insl
cli
scas
insl
jmp
test
shlb
aam
loope
jp
lret
in
daa
sbb
insl
mov
and
decl
jmp
je
out
and
rorb
sti
dec
insl
xchg
cmc
rcrb
out
les
or
add
iret
jge
mov
sbbb
inc
cmpsl
bound
xor
inc
ret
imul
lret
fstpl
enter
jmp
bound
les
shrl
movsl
dec
pop
inc
sbb
dec
and
jno
cmpsl
fs
ret
stos
test
and
test
data16
out
mov
mov
test
mov
ficompl
add
jne,pt
imul
jecxz
jns
cld
stos
xorl
push
mov
jne
xchg
sbb
inc
mov
push
adc
imul
inc
stos
lret
lcall
xchg
mov
xor
add
idivb
sbb
mov
dec
sub
sbb
rcll
packssdw
jmp
aam
out
cmp
test
aaa
cltd
cmp
inc
inc
out
leave
lods
out
push
fidivl
gs
pop
ljmp
pop
cld
je
or
adc
jo
pminsw
jl
add
push
mov
fbstp
ss
and
scas
mov
mov
adc
or
jae
test
cmpsl
pop
popf
rol
mov
mov
pop
repnz
xchg
adc
jne
add
mov
cmpl
sub
jb
sbb
lret
jns
clc
lds
in
xor
xchg
shlb
jbe
iret
pop
mov
cmp
loope
test
mov
mov
pusha
arpl
and
loopne
xchg
push
inc
mov
in
clc
jnp
push
push
mov
pop
mov
mov
mov
rcrl
lock
aam
filds
adcl
lds
pop
push
xchg
pop
xor
dec
rclb
loop
fidivl
pop
leave
xor
outsl
pushf
add
cmpsl
fucomp
out
loop
push
lret
aam
scas
xchg
mov
js
jl
imul
fwait
xor
mov
mov
xor
in
inc
imul
cmp
pushf
and
fsubp
xor
iret
and
push
neg
cmc
fcomip
and
subl
repnz
jbe
add
inc
pop
dec
ds
pop
push
sbb
icebp
cmp
stos
mov
jnp
scas
push
test
iret
sahf
cwtl
mov
aaa
imull
mov
subl
lock
sub
push
dec
xor
pop
stos
or
jne
mov
pop
in
test
sbb
push
cmp
test
adc
and
xor
sbb
insb
jmp
inc
sbb
loopne
push
ljmp
mov
cltd
xchg
adc
or
roll
das
movsl
dec
hlt
sahf
sbb
add
add
or
xchg
ljmp
sarl
add
fs
cli
lds
jmp
lods
shlb
jb
sub
lea
cmc
mov
adcl
nop
mov
mov
por
cmp
jge
in
sahf
jae
rolb
pop
mov
push
sub
xchg
adcl
sub
pop
shl
jb
cld
hlt
inc
jmp
rcll
jbe
daa
out
push
xchg
pop
pop
fidivrs
scas
in
sub
mov
mov
int
lahf
test
add
repz
mov
loopne
sub
ja
in
mov
fwait
addl
movsb
jp
popf
pop
jne
mov
mov
and
dec
loop
repz
les
jno
pop
mov
fwait
int3
push
mov
xor
or
fildl
xor
jne
and
ror
mov
mov
jno
insb
leave
or
push
imul
xor
cltd
outsl
mov
pop
mov
and
stc
insl
lods
mov
out
aad
jle
fists
stos
push
push
fisubl
pop
lods
pop
xor
repz
ljmp
jle
scas
std
fdivrl
push
loopne
cmpsl
inc
fsubrp
mov
add
movsb
cli
jno
and
in
pusha
add
xchg
sahf
outsb
cmp
out
pop
call
add
scas
jnp
adc
repz
cmpsb
das
enter
xchg
daa
xor
ret
andb
repnz
out
mov
push
inc
jb
loop
aad
mov
fwait
mov
mov
fnstsw
jmp
sahf
jns
and
mov
and
fcoms
mov
sbb
movsl
jne
or
inc
lret
outsl
xchg
push
xchg
cmpsb
cltd
mov
ret
jg
popa
nop
and
aad
sti
push
sbb
ljmp
out
js
lret
adc
test
mov
es
push
ret
repnz
cmp
cltd
lods
push
sub
xchg
and
rclb
fstpt
inc
fistl
imul
push
cld
jle
jmp
add
sahf
loop
repz
xor
push
sbb
jl
and
fcom
movsb
scas
imul
lds
pslld
jnp
push
dec
pop
aad
dec
jg
sahf
and
arpl
test
mov
mov
mov
lret
cmpsb
mov
lret
testl
nop
sbb
mov
test
iret
cmp
gs
test
daa
ret
and
imul
js
movsb
ds
iret
fistl
add
push
js
cmpsb
xchg
loop
xor
ret
test
mov
popf
sbb
mov
test
outsl
out
sarl
mov
sbb
sub
aaa
dec
dec
jo
jo
mov
testb
in
cmp
and
lahf
jmp
mov
stos
and
jge
outsb
and
call
ret
mov
lods
cmpsl
dec
jmp
adc
inc
das
xchg
leave
dec
xchg
and
xchg
inc
xchg
cmpsb
sarb
clc
cmp
inc
and
jle
imul
call
or
or
out
xor
jg
add
adc
rol
add
xchg
iret
je
shll
pop
xchg
lcall
adc
imul
cmp
sbb
xchg
fildll
inc
jo
popf
jnp,pt
and
shr
mov
out
and
ret
sarb
mov
in
clc
cltd
daa
negl
out
hlt
shr
enter
pop
lret
lods
dec
dec
inc
xor
add
sti
aad
shlb
movsl
lcall
inc
insb
xchg
inc
inc
test
in
mov
div
lock
mov
push
cmc
stos
in
outsl
sbb
pop
nop
pop
dec
mov
sub
pusha
leave
jge
push
adc
dec
shlb
and
dec
cmp
xchg
js
xchg
inc
ja
adc
int
rcrl
insl
stc
sub
rolb
inc
lcall
mov
adc
fs
pmaxub
add
adc
add
jp
mov
cltd
mov
xchg
andl
push
and
add
repnz
cmp
dec
xor
jg
aas
mov
adc
andl
push
lgs
and
icebp
adc
mov
fstps
cmp
jecxz
ljmp
inc
cvtps2pi
pushf
inc
sbb
stos
lods
xchg
and
adc
mov
push
sub
lds
push
xchg
fidivrs
fidivl
fisttpll
mov
in
push
sbb
into
mov
out
or
testb
pop
lea
adc
out
outsb
jns
push
popf
or
mov
scas
push
into
push
fcom
add
or
ret
xchg
dec
sbb
call
pusha
jmp
add
add
xchg
fcomp
and
mov
jae
add
or
in
pop
mov
dec
fnstenv
lods
bound
mov
mov
sarl
cmpsl
lds
aad
lret
inc
lds
xor
sub
jl
test
adc
mov
cwtl
leave
or
cmp
pop
stos
in
jno
movsb
in
cmp
outsb
into
gs
data16
dec
xchg
pop
adc
jg
jae
scas
cs
cli
adcl
arpl
xor
push
xchg
data16
jmp
mov
int
push
les
mov
out
lcall
add
movsl
repz
jno
cmpsb
inc
xchg
dec
andb
or
jae
lcall
ss
clc
dec
aas
ss
mov
cmp
add
sarl
and
and
mov
lahf
mov
inc
loope
xchg
push
adc
nop
out
cs
sub
jp
mov
dec
int
lcall
and
ljmp
jne
pop
xchg
movsb
mov
andb
sub
lods
pop
scas
test
jl
imul
fmuls
push
push
pop
ljmp
outsb
inc
test
push
mov
sbb
stos
push
lcall
pop
loope
or
adc
cmp
pop
cmp
mov
icebp
jbe
mov
xchg
mov
shl
rcr
add
jno
jmp
mov
inc
lahf
jno
jmp
xchg
gs
inc
push
out
jae
and
ficoml
jno
rcll
lock
lea
inc
into
push
lods
jp
mov
adcb
incl
push
test
fists
jo
cmp
sbb
shrl
jge
jecxz
addr16
push
mov
mov
cltd
xlat
xor
jno
mov
loopne
in
mov
das
adc
out
sub
ja
ret
add
jge
sub
push
cmc
sti
add
pushl
test
sub
les
je
adc
xchg
sub
ds
mov
sub
in
or
dec
sbb
lods
rclb
dec
jge
mov
and
inc
pop
stos
push
shrb
ds
add
add
std
sub
inc
sbbb
int
pop
inc
jle
xchg
push
inc
pop
fstps
and
popa
mov
test
jae
lds
pop
mov
out
push
shlb
inc
adc
xor
and
mov
ljmp
fsubl
cmp
stos
je
or
add
repnz
mov
mov
mov
outsb
imul
cmc
test
outsl
push
dec
insb
jp
dec
out
mov
mov
mov
rorb
gs
scas
add
hlt
or
sahf
inc
popa
jns
ljmp
mov
cmc
test
les
scas
and
mov
pop
dec
ss
fistps
or
pop
pop
inc
pushf
fmull
out
xchg
and
xor
and
cld
pushf
out
mov
jl
lahf
cmp
in
stos
inc
inc
fcoml
clc
sub
sti
mov
dec
movsb
test
jecxz
fldcw
push
cmp
aas
jp
iret
pop
and
pop
mov
jo
mov
mov
push
call
lret
test
stos
pop
mov
or
js
inc
ja
sbb
in
lea
das
int3
inc
jle
add
cmp
dec
jnp
dec
cld
ds
sbb
adc
iret
pushf
mov
clc
call
or
push
stos
xchg
rcll
fs
ret
or
inc
lret
cmc
pop
adc
lods
mov
pop
fldlg2
jbe
addr16
cmpsl
in
xor
adc
inc
into
in
inc
xchg
or
add
and
into
cltd
dec
lcall
sub
aaa
jno
inc
aas
sbb
dec
mov
aaa
gs
ja
adc
idiv
mov
hlt
cmp
addb
adc
ss
sbb
mov
push
xchg
xchg
xor
filds
mov
inc
add
mov
rcrl
sub
mov
xor
jns
lea
je
sub
add
jnp
divb
stos
roll
jbe
mov
inc
divb
idiv
add
bound
cmp
jle
popa
mov
mov
or
pop
in
popf
dec
and
mov
xor
scas
adc
xor
cli
adc
inc
and
je
xchg
mov
out
sub
adcl
push
cld
fstps
inc
dec
and
stc
in
test
js
add
pop
aam
jl
lea
and
xor
scas
lods
dec
je
insb
xor
mov
push
sub
inc
or
mov
call
icebp
adc
mov
out
pop
xchg
test
movsb
andb
push
loope
stc
mov
clc
rcrb
outsb
out
push
ds
outsb
fstps
rclb
je
mov
pop
jb
mov
ljmp
xchg
out
ds
sbb
mov
jo,pn
mov
sti
adc
test
xchg
jno
add
inc
add
loope
pop
adc
and
or
arpl
popf
addr16
nop
dec
xorb
pushl
mov
aam
pop
insl
ffreep
fwait
cmp
xor
imul
cmp
test
and
insl
cmp
movsb
call
int
jmp
sub
popa
test
xchg
mov
push
lret
dec
inc
sub
lahf
pop
in
push
lret
je
mov
das
shrl
test
gs
cld
fstl
pop
xlat
xchg
vandnpd
repnz
popf
sub
fbstp
xchg
out
xchg
cwtl
sub
adc
fucomip
push
xor
scas
mov
xchg
jg
push
mov
std
ljmp
inc
icebp
es
mov
push
pop
jbe
loopne
jnp
test
pushf
jg
scas
imul
inc
and
stos
pop
sub
icebp
pop
dec
sti
adc
sahf
sbbb
out
ljmp
adc
xor
mov
jg
popf
pop
add
subw
mov
sbb
and
rcrb
sbb
xor
xchg
adc
add
inc
in
dec
jle
fildll
adc
popf
push
je
stos
add
movl
pop
adc
lods
sbb
mov
push
cmpsl
xor
mov
mov
pop
add
stc
fcoms
shrl
cmp
xchg
or
mov
push
das
xor
pop
mov
movsl
dec
adc
pushf
adc
rcll
out
lret
cs
mov
push
mov
shrl
dec
xor
jecxz
cld
xor
jae
push
pop
adc
out
ficomps
scas
dec
mov
cltd
insl
cli
in
addr16
sbb
outsl
mov
pop
stc
inc
pop
andb
sbb
call
and
arpl
mov
cmp
or
ja
aas
pop
fcoms
nop
test
scas
insl
loope
loop
inc
adc
inc
jl
stos
jno
sbb
cmp
xchg
sbb
xchg
out
dec
inc
mov
pop
push
test
fsts
push
lock
stc
pop
inc
pop
mov
adc
sbbb
xchg
sbb
mov
cmp
mov
cld
xchg
fcoml
movsl
pop
int
cs
out
cmp
push
stc
mov
hlt
icebp
jb
int
insl
inc
sbb
ds
ds
stos
jb
gs
outsb
adc
sti
dec
add
xchg
pop
mov
or
sbb
mov
cmp
or
pop
adc
xor
int
mov
add
into
sub
mov
in
fldcw
push
dec
int3
in
adc
aaa
mulps
lea
xor
jbe
mov
mov
xchg
jnp
push
shr
stc
das
sahf
fiaddl
mov
addr16
mov
insb
add
imul
in
pop
test
and
scas
test
or
mov
sbb
ret
pop
and
gs
outsl
pop
dec
sub
insl
gs
shrb
push
mov
shrl
jl
aad
sbb
xor
lods
mov
or
add
or
pop
shll
dec
cmpsl
rorb
pop
cmpsl
leave
aaa
xor
test
enter
popa
fcomp
push
addl
adc
sub
sub
adc
add
pop
mov
stos
rcrl
stos
jns
mov
in
sub
test
cmpsl
add
in
and
xchg
bound
aad
jecxz
sbb
pop
repnz
mov
xor
aaa
adc
push
cmc
sub
ret
and
xchg
sub
pop
add
in
jecxz,pt
aaa
pop
testl
pushf
push
int
notb
pop
sub
mov
imul
nop
imul
pop
cmpsl
sbb
jne
cmc
xor
pop
addr16
das
lret
nop
fcomp
testb
fbstp
jo
sbb
lret
inc
cmp
mov
ljmp
icebp
pop
adc
jge
test
xchg
imul
test
fldcw
xlat
mov
fisubrl
sbb
mov
repnz
inc
dec
ret
gs
dec
mov
inc
dec
sbb
inc
loop
mov
mov
pop
je
adc
push
addl
aad
out
xor
xchg
test
mov
cli
jmp
or
cltd
sti
insb
inc
sub
ret
js
outsb
mov
idivl
mov
sbb
or
push
mov
cld
mov
imul
loope
push
std
inc
push
outsb
inc
xchg
cmp
cwtl
repz
mov
mov
mov
adc
push
mov
bound
loope
aad
inc
test
mov
sbb
es
das
mov
sub
fbstp
mov
add
pop
icebp
scas
neg
mov
push
push
mov
inc
jg
jne
arpl
lds
scas
sbb
xchg
add
lock
mov
movsl
bound
mov
pop
cmpl
mov
or
in
lahf
inc
pop
in
lds
in
cmp
and
mov
shlb
xchg
fstpt
xlat
jnp
movsl
jae
int3
gs
sbb
mov
push
nop
jb
mov
ds
mov
dec
mov
scas
sub
xchg
bswap
loopne
into
push
fsubrs
pop
lds
pop
inc
mov
pusha
push
jbe
in
loop
adc
cmpsl
jbe
sub
push
mov
orb
jle
xor
jo
je
jns
int
les
outsl
or
nop
adc
sbb
jl
loope
push
mov
push
movsl
aas
in
outsb
std
fs
ja
js
add
lcall
xchg
das
sub
nop
push
cmp
pop
push
fidivrl
mov
ss
nop
das
gs
or
cmp
jp
and
jl
scas
outsb
cmp
sbb
mov
sbb
cmc
xchg
push
lahf
jo
push
mov
nop
lahf
adc
xchg
out
aad
pop
test
mov
ret
lret
mov
sub
int
xchg
inc
sarl
sbbl
insl
int
push
sarb
mov
jo
popf
sbb
insl
dec
sub
adc
mov
push
inc
push
push
jb
cmpsb
sbb
push
icebp
jl
sub
out
or
fcmove
ret
push
clc
test
sub
add
ret
test
js
shl
repnz
pop
cmp
mov
in
jecxz
repz
jne
js
es
xor
inc
dec
orb
pop
jae
fsubs
mov
sahf
addr16
sarl
xchg
add
mov
imul
ficoml
sti
and
scas
sub
call
and
sbb
mov
and
xor
roll
mov
add
cli
xlat
jno
jno
repz
xchg
lods
sti
mov
or
dec
test
push
xor
jmp
test
imul
adc
lahf
test
js
fidivl
dec
inc
fimuls
pop
push
int
icebp
rorl
test
push
in
adc
hlt
data16
adc
mov
ror
pop
out
xchg
icebp
mov
stc
inc
in
dec
sbb
ss
mov
sahf
roll
sub
adc
mov
adc
mov
sbb
mov
jo
nop
test
jb
pushf
xchg
lahf
mov
jbe
jecxz
es
cmpsl
cmp
inc
or
mov
int
leave
xor
shll
xchg
add
rolb
shll
mov
add
js
dec
arpl
adc
in
bound
mov
sbb
pop
int
imul
daa
inc
mov
cmp
mov
sbb
cld
aam
ss
repnz
cmp
nop
idiv
int3
cmc
or
out
jb
test
mov
in
xor
jle
mov
inc
jns
jg
pushf
push
sub
setge
insl
fldt
daa
and
scas
pop
jnp
es
outsl
jne
arpl
test
loop
jbe
es
push
mov
jmp
nop
cld
imul
cwtl
xchg
aam
insb
dec
pop
ja
mov
xchg
add
sbb
pop
or
mov
sbb
icebp
aam
dec
inc
test
leave
xor
and
in
outsb
out
or
roll
mov
bnd
adc
data16
shr
pusha
and
out
sub
scas
lock
repz
mov
mov
test
xchg
mov
ds
mov
add
xlat
cmpsb
inc
rcrl
push
ficompl
sbb
lea
mov
out
mov
pop
inc
lds
test
mov
xor
sub
inc
jns
movsb
cli
cltd
inc
daa
stc
mov
sub
pop
pop
enter
push
outsl
push
loop
lea
fcmovne
insl
push
ds
cld
es
in
shlb
sbb
inc
sub
jge
movsb
pushf
or
lret
and
es
xchg
in
push
sbbl
stos
repz
or
jl
adc
sub
adc
stos
cs
into
pop
stos
stos
push
and
clc
test
push
mov
lcall
std
aam
jp
mov
jecxz
movb
out
mov
pop
in
inc
push
cmp
ret
lret
fnsave
hlt
test
idivl
dec
in
lret
idivl
gs
mov
iret
and
and
or
mov
mov
loop
cmp
push
and
ljmp
icebp
dec
jb
or
inc
je
sbb
pop
xor
loopne
pop
adc
mov
mov
push
mov
bound
sar
jp
mov
sub
or
sbb
cmp
packuswb
and
enter
sub
clc
enter
mov
jnp
xor
std
lret
lods
pop
lea
inc
inc
adc
rolb
adc
cmp
mov
sub
gs
int
das
jle
dec
cmc
shrl
cmp
lock
lahf
div
dec
jo
fcomps
iret
pop
jns
push
push
push
flds
andl
cmpl
push
dec
js
test
loop
xchg
es
icebp
aam
push
xor
and
jns
adc
xor
and
es
mov
lret
sbb
jb
xor
jg
ret
jns,pt
call
leave
leave
enter
jno
pop
stos
add
jns
aas
mov
jmp
and
shll
mov
fsubr
scas
inc
mov
inc
push
and
fimuls
imulb
mov
out
and
std
loop
sub
negb
mul
repnz
rcll
inc
imull
mov
sub
mov
divb
xchg
mov
test
in
aaa
inc
out
sbb
jb
test
xor
int
aaa
std
pushl
in
lahf
roll
cmp
cmp
fsub
aas
jbe
lea
iret
adc
cmp
je
mov
stos
xlat
sbb
add
mov
pop
mov
xor
sub
popa
nop
cltd
subb
cmp
mov
cltd
push
mov
jae
sbb
fwait
add
mov
mov
inc
push
push
mov
dec
jp
ror
or
xchg
in
notl
push
stos
mov
int3
mov
fwait
rolb
ds
dec
dec
xor
add
mov
dec
adc
pushw
or
cmp
cmp
mov
rep
sbb
hlt
ret
mov
dec
jbe
push
lock
cld
push
cmpsb
fwait
lcall
or
in
mov
dec
sub
in
cmc
jb
cmc
ret
jo
pop
xor
inc
cmp
dec
lret
aad
loopne
imul
scas
test
fstl
cmp
cmp
cmp
mov
inc
loope,pn
adc
in
scas
cltd
fs
test
aas
mov
aad
cmc
sub
jle
mov
mov
xchg
test
mov
mov
int3
imul
adc
dec
cmp
mov
js
gs
shrb
ret
xchg
aas
cwtl
out
sub
mov
lds
adc
mov
fwait
jecxz
leave
mov
pop
lret
mov
sub
xlat
xchg
ficompl
inc
sub
in
sub
mov
ljmp
test
cmp
imul
imul
cli
mov
int3
mov
adc
xor
lea
hlt
cs
jg
dec
scas
sub
mov
in
nop
lahf
cmp
fbstp
test
xchg
inc
add
or
and
sub
jecxz
cmp
shrl
or
push
stos
bound
call
dec
icebp
jle
mov
mov
mov
mov
xor
arpl
inc
add
out
out
xor
lret
mov
xchg
push
sti
jno
arpl
push
cmp
push
test
lds
test
jle
lcall
sub
inc
fdivs
int
ss
int3
stos
loope
lods
cli
int
adc
and
adc
jae
pop
add
cli
and
mov
in
lahf
mov
stc
lret
in
repz
es
sahf
insl
les
jns
adc
xchg
xlat
xor
sbb
ljmp
imul
inc
push
repnz
pop
pusha
cmp
iret
les
push
and
stc
cmpb
jp
mov
nop
imul
or
test
xor
push
ret
inc
andl
je
lods
ljmp
or
lret
rcrl
cwtl
fiadds
test
test
mov
or
pop
sahf
push
out
aam
gs
add
test
dec
incb
call
cltd
bnd
jae
or
dec
shll
sbb
shll
mov
icebp
jb
cmp
cmp
mov
xchg
mov
inc
icebp
nop
dec
fwait
insb
fwait
scas
mov
aaa
jmp
inc
sbb
leave
xchg
iret
push
add
cmp
cli
jo
mov
mov
xchg
andb
cmc
dec
push
or
inc
sbb
mov
push
icebp
mov
mov
lret
push
sub
pop
cwtl
lea
sbb
xor
cs
ret
or
loope
push
ds
lret
jnp
inc
out
movsl
push
sub
ja
fiaddl
les
js
and
dec
mov
xchg
ret
fsubs
mov
jle
scas
cmp
getsec
jmp
jb
or
sub
movsl
or
pop
inc
adc
pop
mov
adc
test
sbb
xchg
test
xchg
mov
out
cmp
stos
xorl
stc
std
sub
or
les
dec
jb
subl
or
inc
or
loop
cmpsb
fdivr
cli
int3
jns
std
mov
out
and
fcoml
push
push
stos
mov
mov
sub
push
cmp
adc
or
arpl
int3
ljmp
nop
jne
cmc
cmp
dec
enter
sbbb
outsl
sbb
clc
sub
mov
les
sbb
jp
xchg
push
sti
test
pop
shrl
pop
je
inc
mov
sub
pop
jmp
mov
push
mov
or
lahf
inc
mov
xlat
mov
fisubl
inc
inc
adc
fidivrs
into
dec
in
xor
je
movsb
aas
jecxz
inc
cli
lea
and
aad
xor
shlb
pop
mov
es
repz
ret
and
in
shlb
mov
cmpl
sub
outsb
pandn
cmp
sbb
sbb
inc
jl
sub
cltd
gs
add
orb
movsb
shrl
cmp
fldl2e
in
lcall
lock
popf
test
jl
cmc
pop
cmp
xchg
repnz
test
ss
das
sbb
push
int3
inc
test
jo
sub
xor
je
mov
lods
in
mov
mov
fadd
mov
cli
push
mov
scas
in
ja
test
sbb
add
xor
stos
adc
shll
and
stos
pop
xchg
lock
cmc
iret
push
aad
xchg
test
inc
adc
add
adc
jo
pop
and
push
out
jl
pop
add
dec
movsl
adc
icebp
inc
mov
mov
cli
cmp
dec
rcrb
dec
pop
adcl
inc
xorl
pop
or
stos
in
push
pop
pop
jnp
stos
pop
sbbb
push
xor
and
int
out
cld
push
push
test
xchg
add
pop
movsb
push
int3
outsl
frstor
push
mov
mov
adcl
mov
mov
push
pop
cmp
aaa
les
loop
mov
adc
fs
push
ss
jle
je
sub
inc
add
sbb
aam
push
out
sub
sbb
leave
dec
cli
dec
fsts
insb
xchg
xor
leave
or
leave
mov
sub
or
cmp
cmp
add
push
jge
ss
push
mov
xor
out
pop
push
add
sub
cltd
jo
or
jle
add
ss
ds
or
adc
push
cmp
mov
arpl
push
data16
push
loope
fwait
iret
cs
push
mov
jg
jno
xchg
stos
cmp
inc
add
cmp
xorb
and
mov
push
push
addb
dec
or
inc
mov
sbb
sub
shrl
das
lret
pop
sahf
jae
mov
mov
xchg
sub
inc
or
aaa
inc
aad
sahf
or
repnz
in
xor
push
xchg
xchg
ret
std
insb
repz
stos
sub
add
pop
push
fistl
jecxz
cmp
sub
jmp
test
or
imul
sub
stc
mov
xor
add
popa
dec
xor
icebp
mov
lahf
lahf
imul
arpl
mov
mov
jne
jbe
out
nop
imul
popf
stc
xor
insl
pop
mov
cld
out
mov
lahf
inc
and
lahf
testl
jge
movsb
cmp
push
data16
jae
ss
pop
outsl
outsb
xchg
inc
pop
into
ja
mov
mov
xchg
jmp
insl
mov
pusha
cmpl
push
xchg
mov
dec
jb
fs
push
loopne
mov
cmpb
roll
fstps
pop
or
ja
outsb
cmp
cmp
bound
push
sub
sbb
cmp
hlt
lret
jle
bound
and
cmpsl
movsl
shlb
repz
bound
fisttpl
mov
dec
mov
sbb
rcrb
pop
mov
icebp
sbbl
adc
and
push
ret
jmp
fwait
test
pusha
or
outsb
stos
mov
inc
jns
jmp
mulps
pop
popf
adc
cld
shlb
jne
out
dec
fsts
cmc
dec
inc
mov
sarb
sub
dec
pop
fsubl
pop
fildl
jb
cmp
cmp
adc
lds
popa
bound
iret
nop
gs
adc
mov
aaa
pop
test
jnp
jmp
out
and
or
js
dec
rclb
adc
mov
mov
xor
mov
das
mov
out
sbb
push
pop
push
rcll
jno
cs
std
scas
jp
push
or
add
push
movsb
and
repnz
jo
inc
add
adc
cmp
das
lahf
cmpsl
sti
and
sub
out
aaa
jmp
mov
sbbl
leave
repnz
jge
adc
int
or
jmp
mov
xor
mov
jl
je
ficompl
lds
ret
pop
inc
insl
adc
xchg
mov
inc
insl
fs
sub
ja
stos
push
sbb
lcall
roll
fsubrs
psrad
cmp
movsb
aas
or
mov
insl
hlt
les
les
jge
inc
daa
mulb
call
mov
in
stc
mov
mov
outsb
xchg
mov
mov
mov
popa
dec
repz
push
cmpsl
push
gs
jb
jecxz
jo
data16
fcomps
xchg
pop
mov
subb
push
sti
xor
test
dec
call
shl
gs
pushf
movsl
sbb
outsb
jae
lods
or
in
adc
inc
in
inc
dec
jecxz
jle
pop
imul
xor
mov
dec
sbb
xor
xchg
repz
xchg
mov
popf
cltd
pop
les
sbb
sahf
scas
xchg
hlt
xor
push
xchg
jp
test
testl
mov
or
push
push
add
cmp
fdivl
or
outsb
aaa
enter
fcoml
mov
std
dec
sbb
xor
sbb
xchg
jge
fdivrp
jecxz
je
pop
stos
cmp
test
pop
stos
xor
push
xchg
pop
and
mov
sub
outsl
push
sub
jb
pop
push
xor
scas
mov
xor
mov
pop
mov
pushf
pop
fistpl
fdivrs
jge
daa
lods
jle
sahf
dec
inc
in
fdivl
jbe
dec
leave
clc
nop
inc
dec
pop
jnp
ror
jnp
hlt
xorb
popf
cld
stos
jae
pop
das
adc
pop
movsl
addb
pop
loop
int
mov
ficomps
mov
incl
and
cmp
cmpsl
jne
xor
stos
out
jne
mov
clc
adc
jno
scas
xor
cld
xchg
mov
mov
aas
cmc
jb
ret
push
push
mov
xor
sbb
das
cmp
jo
xchg
shlb
dec
dec
xchg
out
andb
popf
test
js
test
sub
pop
xor
out
fidivl
and
and
mov
ret
clc
loope
jnp
inc
inc
xchg
mov
inc
jl
mov
cld
cwtl
mov
pop
push
jne
test
push
lret
sub
imul
imull
mov
cmc
jb
adc
jmp
and
je
xor
jl
cmp
mov
bound
cmp
cltd
int3
inc
aad
push
mov
sbb
mov
pop
xchg
outsl
xor
adc
jb
push
xor
ljmp
das
adc
cmp
rcrl
mov
loop
and
dec
mov
ljmp
sub
adc
mov
ds
inc
xor
push
std
incb
test
das
xchg
and
shrl
xchg
mov
test
cltd
into
hlt
lahf
push
outsb
aas
xor
pop
jnp
jge
mov
popf
das
fidivrs
jg
mov
test
insb
imul
cwtl
inc
xchg
adcl
mov
push
mov
lods
ret
add
sbb
or
push
pop
and
mov
pop
subl
push
bound
mov
out
cmp
push
xchg
iret
cmc
push
pop
sbb
cmpsl
jbe
inc
mov
pop
dec
dec
aad
stos
test
jnp
les
mov
mov
stc
mov
cmp
ficoms
ror
push
enter
es
and
out
cs
aaa
mov
mov
xor
loope
cmp
int
mov
add
mov
subb
dec
pop
pushf
push
mov
cmpsl
sub
jecxz
push
pop
mov
mov
aam
negl
jno
adc
and
sahf
ljmp
arpl
xlat
inc
fldt
pusha
inc
test
and
pop
lcall
call
sbb
xor
je
out
loopne
cwtl
jae
dec
fwait
dec
sbb
das
pop
mov
lea
fnstcw
dec
je
adc
popf
push
mov
push
repz
cmp
scas
cmpsl
addr16
je
addr16
push
lods
lods
shlb
testb
add
les
inc
cmp
pop
inc
lock
push
push
xchg
aaa
clc
lods
and
inc
ja
mov
mov
xlat
cmp
jmp
dec
icebp
test
sub
xor
mov
jnp
push
shll
mov
push
mov
mov
cmp
int
aaa
insb
leave
je
push
out
sub
lahf
out
cmc
mov
dec
add
sub
mov
jp
add
std
into
das
fimull
mov
lods
imul
xchg
jne
fldt
cli
mov
out
nop
or
ja
filds
push
ds
lock
xor
ja
ss
outsb
test
test
xchg
and
out
push
out
bound
inc
test
mov
pop
outsb
repnz
loop
sti
mov
cmc
mov
mov
je
push
addr16
ja
ret
push
movsb
popa
dec
mov
aaa
scas
cmpsb
sbb
and
push
jmp
addr16
popa
lcall
in
mov
insl
adc
inc
loope
clc
fnstsw
dec
sub
mov
hlt
fstps
cmp
mov
jns
and
add
cmp
loope
jb
inc
jle
push
inc
add
aad
xchg
mov
stos
mov
push
pop
in
rorl
xchg
sahf
dec
push
lods
push
mov
mov
ja
push
inc
mov
out
dec
pop
or
or
dec
mov
push
lcall
stos
jo
sti
in
cmc
or
and
aas
xor
xor
xor
dec
iret
sub
sbb
sbb
sub
mov
fidivl
jno
cmp
push
scas
mov
sbb
lds
dec
or
sbb
inc
jno
mov
dec
int
xor
cmc
pop
or
imul
outsl
sbb
pushf
xchg
inc
or
dec
xchg
cmp
fwait
pop
or
ret
cmp
jge
cltd
dec
xor
adc
sub
and
xchg
scas
pop
sbb
scas
lods
xchg
cmpsl
adcl
scas
leave
mov
stc
add
and
xchg
rclb
xchg
adc
jbe
std
mov
pusha
shr
mov
lods
mov
pop
fbstp
loopne
sahf
int3
cmp
cmp
data16
cmc
mov
cmp
fisubrs
push
testb
fnstenv
sbb
cmp
stos
xchg
cmove
scas
mov
out
mov
je
orl
test
jp
inc
fstpt
sub
and
dec
insl
pushf
or
pop
sub
scas
adcb
mov
int
int
sub
shll
rclb
pop
testb
jno
mov
adc
push
ss
or
dec
cmp
xor
mov
jle
and
pusha
fldz
jnp
mov
ror
mov
xchg
fisubs
fidivs
push
mov
sbb
enter
cmpsb
pop
and
jae
test
mov
and
mov
fists
and
ret
rcrb
and
xchg
xchg
daa
xchg
pop
int
test
ss
in
imul
mov
popf
int3
aam
mov
lahf
lea
out
sub
cmp
mov
inc
shrl
ret
add
sbb
lret
jo
xchg
jmp
push
scas
icebp
ja
jne
mov
aam
inc
imul
push
jnp
lods
ss
lahf
adc
outsb
filds
lds
lock
jge
insb
leave
mov
inc
jp
aad
or
adc
xor
dec
pop
inc
mov
lret
push
mov
in
lahf
fwait
mov
add
rcrb
sbb
jg
mov
sub
xchg
mov
dec
push
fwait
mov
sub
fdivrp
jl
inc
mov
popf
leave
inc
rorl
dec
dec
psubq
jp
fstp
cmp
pop
jmp
mov
sub
stos
es
int
jg
insb
fldcw
out
les
hlt
cmp
push
mov
inc
das
xchg
mov
push
imul
movsl
sbb
sub
dec
inc
shll
les
fcmove
hlt
mov
popf
sub
out
sbb
mov
lret
ljmp
mov
mov
push
adc
int3
adc
hlt
inc
add
cmp
out
pop
mov
sbb
in
push
mov
bound
rcl
outsb
ss
stos
and
clc
mov
add
adc
nop
ret
push
sbb
add
jno
dec
xchg
xchg
pop
jge
cs
push
xor
adc
jecxz
lock
adc
push
sub
sub
and
sbb
out
into
cmp
rolb
adc
mov
pop
cmp
test
sub
push
mov
jecxz
inc
or
xor
lods
fnstenv
and
pop
loope
sbb
lea
add
xchg
mov
mov
imul
das
adc
dec
aad
jg
arpl
xor
shr
pop
add
pop
loope
jne
sub
xchg
mov
push
ljmp
out
mov
mov
movsl
into
ret
test
lods
sub
aaa
imul
mov
inc
xchg
loopne
movsb
adc
cmc
mov
or
push
in
sbb
loop
or
cmpsb
mov
leave
dec
adc
jge
add
rolb
ffreep
bts
add
mov
inc
incl
fsubl
fstps
sub
mov
ljmp
in
pop
push
xchg
mov
and
mov
xchg
push
cltd
adc
xlat
and
test
jmp
punpckldq
pop
and
fstl
xchg
jne
adc
or
jge
cmp
dec
mov
mov
sbbl
loop
mov
lods
je
cwtl
lea
imul
repz
icebp
aaa
pop
xor
adc
repnz
sub
inc
adc
mov
out
jb
rcrb
lea
cmp
out
adc
fsubs
or
jnp
sbb
jae
into
ficoms
cmp
ja
cmp
xchg
inc
pop
jnp
xchg
cli
add
jp
add
add
and
fldt
movsl
sbb
sbb
xor
scas
jecxz
adc
mov
popf
lock
loopne
dec
addr16
hlt
inc
push
mov
nop
mov
xchg
fdivs
iret
inc
pushf
aam
pop
jp
jne
cmp
push
xor
aam
mov
mov
fdivrp
sub
add
mov
jge
push
and
or
or
cmpsl
stos
je
lret
mov
mov
into
dec
outsb
mov
push
scas
mov
movsl
sbb
arpl
mov
lcall
mov
loope
push
xor
mov
jge
inc
repz
out
aaa
fdivrl
adc
jg
dec
cli
adc
loop
adc
cmpsb
andl
lods
sbb
fiaddl
icebp
imul
in
or
repnz
push
mov
inc
daa
or
sub
pop
push
xor
ljmp
call
jp
pop
je
out
mov
mov
testb
repz
dec
mov
dec
in
push
jl
fistpl
mov
cld
xor
scas
cmp
mov
jg
icebp
adc
bound
inc
test
push
xchg
daa
cmp
scas
aad
cmp
push
mov
ljmp
shll
stc
aad
lret
mov
test
mov
mov
dec
xor
fldl
out
aad
fstps
test
jne
or
push
jge
xchg
mov
lods
mov
frstor
loopne
jp
sbbl
cs
rolb
mov
mov
lods
hlt
loopne
push
jmp
inc
jge
push
jae
adc
xchg
addr16
sahf
cwtl
jns
jge
inc
in
movsl
pushf
sbb
cmc
pop
lret
shll
xor
into
nop
test
testl
fcoms
xor
rcrl
loope
outsb
xchg
clc
inc
pop
adc
aad
mov
call
je
and
testb
arpl
je
add
mov
ss
pop
ljmp
jns
std
jbe
cmp
dec
push
test
mov
gs
in
xchg
mov
pop
pop
mov
sub
mov
inc
mov
pop
push
aam
and
gs
lods
pop
inc
jno
pop
sbb
adc
stc
orb
or
and
sti
xchg
inc
sbb
push
add
push
clc
int3
rcr
mov
fcoms
sbb
push
sub
aad
jbe
ficomps
dec
dec
outsl
jne
xor
xor
xchg
push
cltd
stos
adc
ljmp
push
iret
mov
jne
aam
xchg
mov
inc
int
and
dec
inc
int3
test
mov
mov
jl
in
ja
fcmovbe
repnz
icebp
add
mov
fwait
scas
and
cmp
jbe
mov
stc
scas
adc
movb
in
enter
sub
test
cmp
mov
jp
xor
pop
mov
cmp
dec
mov
movd
in
adc
loop
jl
push
mov
push
out
xchg
dec
shlb
jno
fistpl
mov
fucomip
dec
pop
ss
std
roll
jno
aaa
loop
dec
jbe
data16
and
das
ljmp
fs
jp
out
add
sahf
mov
pop
and
pop
xor
pushf
lcall
jbe
cld
std
jne
cmc
shll
test
scas
and
mov
pop
arpl
and
repnz
dec
test
mov
mov
out
sahf
ror
ficompl
and
pop
ret
cmp
xor
pop
cmc
and
dec
mov
andl
and
jp
xor
push
push
mov
shll
jnp
mov
add
lret
shlb
mov
ja
orb
jns
or
roll
loop
pop
lds
in
push
jecxz,pt
leave
jmp
testb
dec
push
pop
int
imul
faddp
fildll
lret
in
xchg
sbb
pusha
ficoml
repnz
pusha
daa
mov
out
mov
pop
xor
add
call
sahf
fcoml
inc
xor
sbb
add
dec
int3
std
std
ret
adcl
ficoml
fldenv
pop
dec
xor
xchg
int3
xchg
movsl
ret
fistl
adc
sarl
ljmp
pop
or
adc
daa
jge
icebp
xchg
insl
push
arpl
lret
inc
syscall
mov
fisttpll
jbe
push
fdivrp
xor
and
ds
mov
lea
add
out
js
stos
xchg
or
mov
jle
xchg
inc
jo
sub
out
pusha
pop
daa
mov
test
test
gs
xlat
shr
fs
inc
cwtl
pop
test
push
jl
mov
cmp
data16
lds
jge
jl
sbb
jne
cmp
jne
mov
mov
inc
pusha
nop
mov
xchg
repz
notb
aas
in
data16
lcall
je
leave
mov
cmp
sub
hlt
mov
sbb
inc
or
dec
andl
stc
dec
jnp
je
ffree
and
ja
test
push
dec
sahf
repz
sahf
in
mov
pop
xchg
jbe
xor
inc
lods
je
dec
insb
mov
inc
sbb
imul
pop
cmp
lea
call
outsl
adc
vmovaps
push
std
mov
into
push
or
ds
hlt
add
sub
loop
add
or
mov
sbb
mov
pusha
add
cmp
gs
loop
push
and
mov
insb
or
adcl
das
adc
sbb
inc
push
xor
mov
popa
cmp
xor
or
mov
cwtl
pop
in
add
sub
inc
test
mov
sub
add
push
insb
push
ss
cvtpi2ps
loope
loope
cmpl
je
sarb
daa
add
in
insb
mov
je
nop
pushf
rcll
pushf
loope
sub
sbb
lahf
cmp
xor
loop
add
imul
cmp
or
push
inc
enter
sub
gs
cmp
jns
push
or
mov
or
xchg
lea
and
xor
cmpsb
shl
sub
rcl
es
jb
loope
dec
add
fwait
cmp
pop
xor
rorl
mov
lock
in
and
push
xor
adc
and
jle
ljmp
into
pop
pusha
sbb
lahf
cmp
insl
imul
fisubs
mov
pop
add
push
iret
ljmp
inc
and
mov
fisttps
push
popl
ja
xor
ret
inc
cmc
mov
sbb
test
push
mov
and
test
xor
movsl
pop
sti
jmp
sbb
aaa
push
mov
cmpb
xchg
in
xor
push
imul
fnsave
xchg
mov
lret
pop
repz
out
and
mov
scas
frstor
loope
adc
leave
fcmovbe
xlat
cli
inc
adc
mov
dec
mov
add
sub
clc
mov
adc
cmp
mov
aaa
fsub
inc
sbb
or
dec
arpl
mov
fs
jae
sub
repz
or
sbb
xchg
call
fnstcw
out
roll
adc
xor
hlt
add
cmpsl
lret
jmp
mov
enter
mov
push
fs
cmp
imul
or
sbb
movsl
pusha
cmp
xchg
adc
mov
ja
lds
cmp
loope
shll
sahf
js
dec
dec
add
dec
mov
sub
lret
add
pop
adc
aas
cli
sub
push
outsb
test
movsl
fcoms
jbe
pop
bound
ja
and
xchg
in
test
sbb
mov
xchg
or
jns
mov
out
fcompl
repnz
cmp
repnz
out
inc
leave
outsl
adc
nop
xor
xlat
mov
add
sub
pop
mov
mov
out
js
aam
dec
inc
push
lret
pop
ret
popa
or
jnp
test
aad
daa
andl
push
into
inc
idivl
xor
pop
adc
push
shrl
lret
bound
repnz
dec
dec
idivl
sti
in
and
xchg
hlt
adc
pop
mov
arpl
scas
aad
ss
xor
pop
mov
adc
adc
lcall
pop
push
incb
dec
xor
pushf
icebp
testl
in
and
xor
je
mov
out
jmp
mov
inc
sbb
push
les
popl
insl
mov
lds
xor
rolb
mov
push
pop
cli
sbb
or
insb
loop
jnp
jecxz
push
xchg
out
pusha
sbb
xchg
hlt
movsl
int3
pop
or
cmpb
jo
insl
test
fsubs
add
test
jbe
push
mov
sub
outsl
mov
adc
rcrl
sbb
xlat
xchg
jl
outsb
push
fisubl
sbb
pusha
arpl
push
sbb
in
ja
jb,pn
addl
xor
das
movsl
sbb
ja
in
shll
pusha
sub
fsubs
mov
imul
or
add
push
mov
les
sbb
roll
addr16
ds
xor
mov
mov
pop
ret
add
push
lret
sub
push
or
xor
shll
ljmp
jle
ret
inc
mov
mov
popf
push
jp
mov
lret
or
pop
les
push
jno
mov
jl
clc
pop
or
mov
movsl
stos
stos
jl
shr
ret
cmp
adc
sub
and
out
mov
lods
outsl
aaa
xor
sub
adc
pop
test
xor
or
jl
add
cmpsl
mov
and
cmpsl
leave
aam
pop
scas
inc
jmp
pusha
adc
adcl
push
add
cmp
clc
pushf
mov
cmp
imulb
or
loop
and
dec
jmp
inc
cmp
sub
sub
xor
sub
sbb
mov
mov
xor
xor
sbb
jg
mov
push
xor
test
mov
scas
mov
enter
cmp
enter
dec
mov
and
je
out
xchg
push
bound
xor
out
loop
add
jns
xor
es
hlt
push
loopne
roll
sub
adc
hlt
ffree
cmp
pusha
cli
push
mov
jge
pop
and
incl
outsb
push
mov
sbb
sbb
xchg
xor
mov
sub
ficoml
pop
ffree
mov
mov
adc
roll
and
test
pop
sub
xor
stc
cltd
dec
sub
pop
popa
sti
outsb
and
xlat
lds
and
test
inc
push
mov
adc
and
outsl
es
dec
fs
pop
add
pop
mov
dec
stos
pop
mov
popa
inc
cmp
jg
inc
mov
outsb
and
push
jle
pop
lahf
ljmp
je
mov
ss
lret
dec
std
or
int3
add
xor
pop
or
int
ret
aaa
xchg
popa
jg
cmc
or
repz
cmp
mov
cli
int3
jae
add
sarl
jp
sub
fs
xchg
cmpl
dec
and
add
clc
inc
jno
mov
addr16
mov
sub
pop
fsubrl
enter
xchg
sub
mov
insl
mov
push
loopne
xchg
scas
push
or
jle
test
les
jnp
insl
pop
sub
inc
add
push
stc
fidivl
clc
out
sub
cli
repz
lretw
adc
aam
loop
and
stc
push
into
pop
jno
loopne
push
inc
lods
daa
js
add
cmp
pusha
jecxz
fmull
leave
jnp
mov
pop
jnp
add
sar
rorl
push
mov
push
imul
xchg
mov
pop
es
pop
jge
leave
sub
push
lcall
xchg
inc
jge
jno
addr16
dec
dec
or
data16
push
idivb
or
addl
clc
inc
test
pop
psubusb
mov
arpl
or
jne
inc
mov
in
addr16
inc
sub
push
jl
sarl
mov
call
adc
jmp
xchg
in
or
mov
adc
push
stos
xor
mov
rcr
nop
scas
mov
arpl
pop
ja
jb
ret
push
sub
movsb
bound
mov
mov
or
fucomip
lret
test
add
repnz
adcb
lahf
sbb
pop
mov
dec
fiaddl
out
mov
negb
jae
xchg
xor
mov
daa
xor
cmpsl
daa
mov
stos
mov
pop
sub
lea
jbe
push
cmp
lods
sbb
xorb
nop
int3
xchg
mov
int3
pushw
mov
mov
push
inc
add
test
xchg
out
push
shlb
pop
mulb
jne
jmp
add
stos
insl
ret
xchg
repz
add
popf
adc
cmp
xor
lahf
je
int3
mov
fisttpl
mov
adc
jae
lret
adc
mov
mov
sbbb
or
pop
push
add
sbb
push
pop
dec
orb
scas
nop
fsubr
add
shlb
mov
jg
sbb
cmp
enter
mov
ret
test
jne
pusha
and
dec
xor
out
fs
das
mov
ljmp
push
cmp
dec
xchg
push
inc
ucomiss
clc
fistpll
lcall
aad
fnstenv
sbb
dec
fldcw
xchg
xchg
icebp
mov
and
vpsrlq
mov
test
fwait
mov
in
sub
inc
repnz
sbb
aas
daa
inc
dec
lret
leave
and
mov
scas
pop
sub
inc
jb
or
mov
mov
mov
lea
and
mov
cmp
aam
dec
dec
sub
push
push
imul
push
mov
loopne
lcall
pushl
pop
cmp
and
out
mov
ds
fs
sti
fsave
fsubrp
mov
and
js
mov
loop
mov
shrb
les
icebp
add
imul
lcall
call
mov
xchg
add
cmc
incl
test
sub
test
adc
jnp
jb
sbb
bound
and
push
cmc
adc
dec
call
fst
jecxz
adc
repz
out
pop
into
shll
ljmp
lmsw
pop
sahf
jmp
jge
jae
aaa
mov
outsb
xchg
mov
adc
sbb
lret
sbb
fsubr
out
push
xor
cmpsb
cmp
scas
pushf
adc
outsb
jle
inc
inc
jl
push
test
imul
inc
fistl
mov
or
into
js
add
imul
mov
or
inc
daa
and
adc
cld
vcvtps2pd
stos
jp
test
mov
lret
dec
cmp
mov
fwait
jno
aam
mov
leave
int
sub
adc
xor
inc
mov
fwait
imul
popa
incb
dec
cmp
pop
jno
test
movl
dec
push
lcall
xchg
flds
imul
jb
shrb
sar
notb
js
and
das
sarb
in
pcmpgtb
movsb
test
cwtl
fisttps
adc
inc
xchg
lret
push
pop
into
sub
sbb
mov
pop
dec
mov
add
and
int3
jl
add
shll
pop
xor
dec
sub
scas
and
mov
sub
mov
fsubl
leave
lcall
mov
cmpsl
pop
fsubr
push
sub
in
hlt
stos
rcr
xor
vmptrst
sub
inc
jle
cwtl
addr16
lret
or
sub
es
push
sbb
int
sub
insb
stos
pop
adc
inc
mov
push
clc
es
push
mov
jb
stos
cmp
pushw
mov
inc
jne
insb
arpl
rorb
rcll
push
div
sbb
je
mov
add
mov
mov
jl
jecxz
mov
out
fld
inc
push
leave
popa
jp
hlt
sub
adc
into
sbb
es
call
and
cli
fs
adc
adc
dec
outsl
pop
fisubrs
push
jbe
push
push
cmp
fisubs
xor
roll
jle
adc
add
jp
fdivs
jnp
cld
xchg
aaa
add
call
xor
push
jno
mov
or
cmp
xchg
lcall
js
fnstsw
cmp
or
data16
test
cmp
in
xor
leave
push
scas
xchg
insb
sub
sub
xor
pop
call
pusha
add
jecxz
add
stc
pop
fsubs
and
inc
mov
jbe
or
mov
or
cmc
ror
sbb
mov
push
adc
insb
inc
mov
ficoml
mov
movsl
je
and
repnz
mov
xchg
mov
push
out
push
call
inc
popf
mov
and
shl
jo
pop
rcrb
ss
lods
popf
enter
lods
ljmp
and
xchg
fcoml
test
jnp
bound
rorl
jg
lret
in
shll
dec
rclb
sarl
push
xlat
cmp
and
lret
fdiv
movsl
pop
pushf
mov
xlat
fmuls
cmp
xchg
xorl
das
xorl
fs
push
js
lea
sahf
dec
xchg
mov
fistpl
rcl
sbb
cmp
aas
rdmsr
and
out
jecxz
ror
sub
sbb
fdivs
xor
rol
ja
mov
dec
in
sub
pop
mov
fstps
cmp
cli
cwtl
mov
jno
xchg
pushl
add
xchg
fsubrp
cltd
movsl
dec
inc
push
xchg
das
imul
sbb
pop
push
lods
mov
loopne
cltd
jb
push
pop
mov
stc
jmp
add
pusha
pop
dec
int
test
sbb
repz
sahf
push
inc
sbb
mov
repz
sbb
cmpsb
sbb
cmc
jbe
xor
fsts
mov
repz
inc
dec
repz
mov
movsl
in
xor
pushf
shlb
js
aas
loope
and
mov
mov
xchg
mov
jp
lods
sahf
clc
lods
es
ss
fidivl
pop
xchg
into
imul
test
jecxz
mov
das
fwait
mov
fidivrs
sub
jle
sub
in
popa
dec
ss
jo
movsl
pop
rcrb
cmp
mov
repz
iret
jno
das
adc
sbb
cmp
outsl
push
dec
rcl
scas
pop
movsb
cmp
jnp
and
mov
mov
mov
movsl
mov
jle
push
lods
ja
sbb
inc
jg
adc
inc
das
stc
sbb
loopne
sbb
ja
lods
pop
pushf
jmp
sarl
shr
sub
lea
pop
add
jmp
inc
sbb
or
jne
jns
sbb
aas
pop
push
iret
dec
aam
scas
hlt
andb
sti
movsl
fimuls
inc
dec
sarl
leave
cmp
xor
jle
push
add
mov
in
aas
or
pop
movsb
jbe
push
rcl
out
push
push
and
adcb
fcomi
lret
imul
stos
mov
es
push
cmp
jae
xorb
call
fld
int3
imul
aad
jl
sti
cmpsb
dec
inc
cmpsl
push
sbb
mov
jle
push
mov
sub
stos
mov
cld
cmp
je
bound
jns
adc
sbb
adc
push
mov
mov
jge
das
mov
push
xchg
mov
lcall
xchg
jb
jnp
xor
or
mov
fldenv
dec
imul
fs
mov
inc
pusha
mov
loop
lock
cmp
ret
jns
les
jae
push
hlt
call
aas
mov
sahf
rcll
ficomps
pop
jp
ljmp
adc
or
pushf
add
nop
and
ficoml
in
cmp
jne
xor
add
dec
inc
shlb
cmpl
add
or
cmpsb
adc
negl
or
movsb
mov
std
mov
nop
pop
fsubrs
aad
or
cmp
addl
mov
shrb
in
jbe
add
or
inc
scas
arpl
mov
adc
adc
clc
push
cs
loopne
jp
jg
dec
xor
out
repz
fisubs
cwtl
pusha
iret
mov
push
push
xor
add
sbb
loope
cmp
nop
std
imulb
mov
loopne
xor
sbb
sub
xchg
out
nop
lods
outsl
test
xorl
popf
pushf
adc
test
lods
jecxz
inc
popa
pop
dec
fnstsw
sbb
xchg
jmp
dec
mov
ja
dec
cwtl
mov
jecxz
push
or
fstpl
mov
pop
subl
fwait
mov
pushf
push
test
into
leave
add
adc
dec
mov
cmpsb
das
mov
sbb
ss
jo
inc
pop
push
mov
adc
roll
push
adc
shl
mov
xor
lock
data16
push
inc
and
pop
and
adc
sub
pusha
cmp
daa
outsl
inc
scas
je
dec
popa
cmpsb
jle
mov
hlt
outsl
mov
dec
sbb
dec
test
sbb
bound
mov
cwtl
or
mov
sbb
pop
or
sbb
cltd
cmp
in
ja
ss
sahf
ss
inc
jge
cmp
nop
mov
mov
and
ds
xchg
mov
inc
insb
or
mov
jge
xchg
lods
adc
aad
lods
push
add
aam
out
mov
data16
xor
hlt
iret
or
sbb
xchg
mov
adc
in
jae
inc
adc
sbb
mov
in
mov
mov
jmp
insl
test
inc
cmpsl
jns
push
jnp
add
xor
or
jns
outsl
frstor
jmp
sarb
out
in
mov
xchg
xor
test
mov
rclb
cmp
add
rorb
cmp
adc
sbb
out
outsb
jle
xchg
sbb
fwait
lods
stos
out
xor
mov
repz
into
hlt
shll
push
adc
dec
dec
inc
push
cmp
outsb
and
xchg
lods
and
repnz
mov
pusha
xor
inc
dec
loopne
lds
sub
push
inc
addl
out
inc
in
jle
pop
aas
xlat
iretw
lahf
mov
jb
int
pop
pop
popa
mov
dec
int
pop
out
jae
sahf
into
les
jne
dec
pusha
push
mov
or
or
xor
adc
jnp
in
ror
repz
sbb
lret
fisubl
ret
fldcw
or
xor
lret
arpl
int
sub
lds
imul
in
rol
mov
ret
stos
adc
adc
bnd
cmpsb
les
mov
lret
lods
push
int3
pop
js
add
sub
mov
pop
push
shl
shrb
cwtl
cmp
sbb
loopne
pop
leave
xor
in
shrb
pop
iret
and
sub
adc
push
mov
test
inc
into
adc
test
mov
mov
cmp
enter
fdivl
push
out
into
mov
movsl
pop
jo
shll
mov
xchg
push
iret
mov
ret
out
mov
cs
popa
xorl
and
aas
mov
clc
aaa
sahf
mov
in
jno
mov
faddl
push
push
add
sub
lods
cltd
movsb
add
rcr
loopne
inc
push
inc
jbe
fcomp
addr16
into
jbe
cmpsb
pop
adc
xchg
push
mov
adc
mov
mov
jmp
hlt
aaa
cmc
xor
adc
fwait
cmpsb
shrl
jmp
int3
lret
dec
lock
ret
or
push
mov
dec
lods
push
icebp
jae
adc
sub
flds
cltd
scas
mov
fstpl
sbb
loope
push
adc
es
insb
push
cmp
xchg
jb
fisttpll
fsubl
lods
mov
ret
fimuls
sub
inc
out
out
div
call
ds
outsl
cmc
pop
jne
sub
or
and
inc
xchg
jp
scas
inc
add
dec
or
or
ds
sub
fwait
xchg
fs
xor
push
mov
jecxz
xlat
and
sahf
repz
push
outsb
je
hlt
out
mov
pusha
mov
xchg
mov
xchg
mov
dec
inc
int3
or
add
stc
lahf
ret
sbb
clc
not
cld
push
mov
bound
pop
shlb
stos
mov
dec
sbb
cwtl
mov
scas
insl
out
sbb
mov
mov
rolb
jge
nop
mov
ljmp
arpl
xchg
push
lret
inc
sub
mov
adc
fstpt
jo
push
test
sbb
mov
fisubl
inc
ja
rolb
or
ucomiss
mov
ret
inc
push
lahf
xchg
icebp
pop
jns
dec
test
pop
sub
andb
orb
jbe
push
repz
sbb
fwait
das
mov
inc
aaa
push
push
push
inc
mov
xchg
dec
lret
dec
lock
push
and
jecxz
inc
xor
fdivrs
out
sti
std
cltd
stos
lods
mov
mov
xor
fildll
dec
xor
icebp
jbe
jmp
fmuls
xor
jne
sbb
sub
dec
icebp
mov
popa
sbb
ret
sbb
mov
or
test
scas
inc
inc
lds
dec
sub
sbb
or
loope
cmp
xchg
mov
fwait
add
out
mov
shrb
push
mov
push
and
pxor
adc
mov
sbb
sub
out
dec
pop
sub
lods
and
imull
in
cld
mov
test
and
gs
mov
stos
xchg
sbb
adc
or
add
in
inc
lea
nop
mov
or
scas
fadds
cmc
andl
xor
cltd
gs
lcall
jnp
xor
xbegin
hlt
cld
ss
jg
sub
and
add
popl
cli
cltd
fisttps
inc
sahf
lret
fnstsw
sbb
cltd
jns
mov
daa
add
xor
inc
sbb
ds
xor
jp
mov
cmp
dec
hlt
and
xchg
jno
mov
in
xlat
stos
imul
mov
loopne
fld
imul
addr16
xchg
in
outsb
xor
test
mov
out
rorl
mov
inc
mov
sbbl
imul
push
in
mov
aam
lods
sbb
xchg
mov
inc
push
mov
xchg
jae
stc
xchg
mov
inc
sbb
loop
jo
subl
xchg
fincstp
pop
cli
push
mov
out
and
insl
push
pop
nop
mov
cmp
push
pop
push
aam
insb
clc
lods
sbb
movsl
mov
out
ja
push
push
mov
and
push
in
fcomip
cli
addl
popa
arpl
jl
xchg
insl
inc
jmp
test
sub
sbb
stos
xor
and
push
and
jno
xchg
cmpsb
out
mov
negl
lock
daa
arpl
addb
pop
dec
xor
daa
lret
insb
neg
movsl
ja
outsl
and
xchg
lret
mov
xor
xor
hlt
loop
aad
dec
aad
test
iret
movsl
loope
push
push
add
xlat
mov
cmp
mov
leave
inc
adc
dec
imul
jo
mov
mov
cmp
int
jnp
cmp
out
push
in
pusha
push
cmp
popf
adc
add
lret
jbe
into
mov
push
cmpsl
paddusw
pop
sub
or
iret
push
add
inc
xlat
outsl
gs
ficomps
fsubl
jns
sub
xor
icebp
xchg
pop
and
cld
pop
jo
ds
outsb
jmp
sti
inc
xchg
repz
out
mov
icebp
and
fs
gs
aas
mov
je
js
repnz
test
enter
cmp
cs
loope
bound
cmc
divb
imul
movsl
fs
push
mov
push
pop
inc
jecxz
push
data16
lds
lock
clc
nop
jl
mov
sbb
lret
inc
push
addb
stos
push
scas
test
push
xchg
push
xchg
push
mov
cli
repz
stos
fdiv
jnp
gs
std
int
xor
std
jno
ret
sbb
push
and
jns
sbb
rolb
int3
xchg
pop
jbe
adc
xor
push
xchg
cwtl
pushf
fld
out
xchg
cltd
movsb
aaa
das
adc
lret
pop
mov
or
dec
das
and
cmp
pusha
lock
mov
mov
ljmp
pop
insl
xchg
jns
or
xchg
leave
testb
ret
xchg
idivb
div
and
test
xchg
mov
mov
nop
hlt
and
pushf
sub
sub
inc
rorb
inc
imul
sarb
add
ficoms
and
fwait
ljmp
adc
mov
bound
sbb
mov
inc
cmpl
pop
test
adc
inc
push
mov
mov
xchg
mov
mov
test
sub
rcrb
xor
xor
jae
xlat
rorl
inc
mov
fnstsw
imul
xor
xchg
inc
xor
insl
sbb
inc
cmp
inc
sub
push
lcall
mov
xor
out
and
and
jp
pop
popf
not
inc
inc
lcall
js
mov
daa
jae
loop
mov
imul
fyl2x
aas
add
aaa
mov
cmp
jne
adc
push
mov
sbb
adc
inc
test
xchg
mov
add
movsb
ficoml
insl
sarl
mov
jne
push
sub
jnp
fstpl
pop
dec
jmp
aad
test
cwtl
lods
jle
jmp
xchg
into
sbb
call
adc
test
mov
jae
dec
adc
ret
in
repz
and
cmc
pop
jecxz
std
add
lret
loopne
sub
add
or
mov
xchg
sub
dec
ret
lods
sahf
xor
out
xor
jae
mov
sbb
xor
movsb
int3
cmp
loopne
mov
adc
jbe
add
push
mov
scas
xchg
jns
cmp
xor
data16
mov
fcmove
test
mov
aaa
pop
push
div
jo
mov
pop
imul
sub
sbb
test
popa
ret
test
dec
and
bswap
push
orb
mov
cli
sbbb
sbb
negb
pop
je
add
rorb
jmp
mov
jbe
cmp
pushf
out
push
cld
sbb
xor
jge
mov
pop
test
ja
xorb
negb
jae
decb
andl
fbld
cmpsl
in
cwtl
sub
inc
enterw
jae
rorl
rcrl
jecxz
push
pusha
lock
out
mov
mov
sbb
jle
sbb
inc
pop
mov
xchg
pushf
cmp
sub
jns
dec
cmpsl
js
add
cmp
test
pop
bound
sbb
popa
psubusw
loop
ficompl
subl
repnz
pop
insl
rclb
add
out
adc
jbe
dec
inc
lret
mov
lcall
clc
xchg
cwtl
sbb
js
cltd
les
xor
xchg
mov
mov
cwtl
int3
jmp
aad
fsubrl
sbb
lret
inc
fildl
jo
loop
in
mov
lea
push
testb
dec
cmp
pop
dec
out
pop
xchg
adc
sub
sub
fildll
faddl
jb
lret
adc
add
inc
arpl
push
mov
or
bound
ss
cmp
mov
out
jl
imul
xchg
stc
or
ds
lods
loopne
aam
xchg
mov
add
add
inc
or
adcb
es
sub
dec
jno
mov
or
out
shr
test
pusha
sbb
mov
stc
test
fsubrs
lcall
fdivr
mov
mov
mov
or
push
es
xchg
jns
andb
sahf
mov
push
cwtl
lds
movsb
push
push
and
or
mov
sahf
fdivp
fdivp
adc
gs
loop
inc
loope
test
cmp
push
movsb
nop
inc
sub
loop
leave
adc
xchg
jp
cmp
sbb
ja
pusha
adc
test
stc
call
add
shl
lds
cmp
add
das
insl
ret
cmpsb
push
mov
icebp
leave
cwtl
adc
push
sub
clc
je
fdivrl
xchg
mov
leave
xor
inc
pop
mov
mov
movsl
mulb
jmp
fisubrl
js
test
xor
push
movsl
jno
mov
pop
inc
inc
jb
mov
cmp
mov
and
inc
popf
insl
or
insb
dec
leave
lods
bound
int
sub
dec
shrb
mov
push
mov
push
sub
or
rorl
cmpsl
xor
xchg
inc
cmpsb
mov
sub
push
cmpsb
sbb
xchg
adc
mov
pop
in
call
mov
push
repz
or
dec
mov
dec
pushfw
ret
mov
addr16
fisubs
repz
les
ja
xchg
or
adc
ja
and
push
jp
sub
mov
push
leave
jne
nop
lcall
mov
dec
push
scas
lea
pop
shrl
mull
push
adc
hlt
fisubl
mov
imul
inc
mov
stc
push
pop
sub
fistps
inc
out
call
int
pop
pop
loopne
add
out
lock
mov
inc
pop
icebp
fwait
pop
pop
repz
adc
aad
mov
and
sbb
xor
and
xchg
dec
xchg
cmp
inc
jae
movsl
adc
out
repnz
adc
xor
mov
xor
inc
test
test
pusha
outsb
sbb
hlt
inc
cmc
pop
xchg
jp
inc
pop
hlt
jae
add
xchg
jg
lds
mov
jne
add
inc
mov
push
js
xchg
xor
movsl
stos
sbb
jmp
mov
dec
cld
or
test
mov
in
or
je
fdivs
pop
push
lock
loop
pop
mov
jb
cmp
xor
push
mov
sahf
xor
mov
loop
outsb
pop
dec
pop
push
push
inc
or
adc
sub
sub
adc
push
and
inc
mov
cli
cmp
das
push
movsl
test
insb
cmpsl
arpl
mov
idivb
bound
or
mov
pop
mov
les
ret
dec
lods
imul
or
dec
leave
jmp
add
push
fmull
and
mov
aam
fcmovne
lock
fsts
ss
mov
xchg
imul
in
cld
clc
add
sub
add
mov
xor
dec
pop
xchg
sub
sub
mov
shlb
jbe
clc
push
jmp
cmp
pop
das
add
jae
dec
sbb
cmp
ja
xor
stos
lcall
andb
call
lcall
sub
push
xor
test
xchg
outsl
mov
mov
push
add
fstps
sbb
mov
scas
mov
cmp
lret
xor
xchg
sbb
les
push
inc
lcall
pop
inc
pop
pop
stos
jne
cltd
int3
ret
adc
pop
lock
mov
dec
adc
outsl
mov
data16
pusha
mov
inc
dec
xchg
inc
add
pop
push
cmpsb
loope
xor
jno
cwtl
dec
mov
call
test
out
std
mov
xorl
sbb
cmp
and
fucomip
imul
stc
popf
cwtl
lods
or
lock
pushf
pusha
push
outsl
jmp
xor
sub
xchg
loop
add
and
mov
loope
pop
dec
pop
pop
mov
mov
int
push
jp
fwait
cs
push
pop
movsb
mov
dec
jb
int
lods
jb
jo
cmp
jnp
scas
sarl
jmp
jo
dec
mov
mov
cmp
jcxz
mov
sbb
les
loope
enter
or
jle
orl
pop
repnz
dec
stc
out
or
xchg
xchg
shl
pushw
ss
pop
pop
out
jp
into
aas
pop
xor
popa
add
jge
xchg
push
nop
stos
pop
adc
or
adc
pop
int
cli
rol
jmp
cli
xor
outsl
mov
test
in
or
arpl
cltd
je
pop
out
rol
or
subl
mov
mov
test
and
into
cmpsb
fcmovne
loopne
add
sbb
inc
adc
sub
int
inc
dec
inc
inc
out
jmp
mov
ss
push
cmpsl
jp
mov
rorb
push
fiadds
mov
loope
dec
xor
lret
inc
mov
cmpl
shrl
push
xchg
xchg
les
in
lods
insl
push
sbb
and
rorl
das
test
adc
push
or
pop
jae
cmp
pop
sbb
lcall
xchg
xchg
inc
dec
dec
cmp
and
push
shrb
repnz
int3
xor
arpl
xor
add
lcall
xchg
mov
add
je
fnstcw
cmp
jo
fcomps
inc
mov
into
sbb
jo
and
test
or
dec
rolb
fmuls
push
flds
mov
dec
pop
aaa
leave
push
int3
arpl
cmp
ret
mov
lret
lret
nop
mov
sbb
int3
push
push
nop
xchg
fld
outsl
jl
mov
pop
sub
push
xchg
mov
adc
in
push
dec
adc
aam
shl
pop
sub
cmp
rcrb
je
inc
stos
stos
mov
sub
mov
xchg
cmp
movsb
lret
cmp
fidivl
roll
xor
leave
call
jbe
or
xchg
shr
and
in
adc
or
jp
and
xchg
inc
sub
pushf
cmp
push
add
pop
cmp
js
jns
leave
ljmp
clc
call
dec
aas
cmc
adc
cwtl
cmp
push
and
mov
repz
iret
push
scas
hlt
cmpsl
call
arpl
adc
ret
out
mov
lcall
enter
pop
cwtl
aad
add
imull
aam
mov
jns
decb
cmpsl
cmp
sbb
nop
inc
add
sbb
ficomps
aaa
pop
push
and
or
push
cmpsl
scas
out
add
jge
sbb
ds
mov
cmc
pushf
notb
insl
mov
push
lds
dec
cwtl
cmp
enter
cld
pop
popa
adc
into
mov
fldt
orb
outsl
push
es
xor
cli
pop
hlt
or
shl
pop
push
imul
mov
enter
jnp
jl
push
cmp
ret
repz
shll
mov
out
inc
add
and
xchg
pop
dec
dec
lcall
add
fsts
cmp
nop
pop
jno
loopne
pop
test
jmp
popa
push
popf
add
inc
int3
outsl
pop
adc
cmc
out
mov
mov
mov
or
xchg
adc
xchg
xchg
cs
mov
cmp
fisttpll
sbb
adc
mov
inc
test
shrl
insl
jne
push
or
add
or
pop
sub
in
shlb
aad
fmull
cmp
test
cltd
xchg
jo
je
sahf
inc
inc
iret
cmc
dec
insl
in
imul
xor
inc
insl
bound
movsl
mov
and
cs
cltd
add
add
mov
inc
loope
insl
dec
pushf
les
xor
into
idivl
lods
add
cmpl
xlat
mov
daa
and
or
sbb
add
scas
mov
cmp
mov
cs
mov
mov
add
push
sahf
mov
jecxz
dec
xor
or
iret
hlt
je
inc
insb
scas
sub
fisubs
jl
pop
jo
sarl
sub
xor
xchg
lock
xlat
scas
sub
orl
nop
bound
mov
btr
pop
xorl
lods
pop
pusha
mov
sub
movsl
aaa
mov
out
pop
daa
push
mov
xlat
dec
bound
je
fisubs
mov
enter
mov
frstor
das
sarb
shlb
cmp
cmpsb
imul
pop
sub
ja
inc
adc
in
loope
add
clc
repz
repnz
pop
mov
sbb
push
xor
pushf
popa
add
pop
test
dec
xchg
mov
inc
mov
popa
pop
cltd
and
mov
sbb
cmc
push
popa
mov
jmp
outsl
pushf
shlb
addr16
in
ljmp
int
out
dec
aam
jnp
leave
push
cwtl
mov
movsb
jle
ret
ljmp
pop
mov
dec
call
bnd
decl
popf
ds
ja
pop
and
std
jge
loope
imul
and
jae
mov
test
pop
ret
adc
addl
into
insb
cwtl
mov
cmp
ret
add
xor
pop
mov
in
sbb
or
popa
psrlq
ret
es
and
repnz
js
loope
adc
xchg
movsb
or
xchg
in
sub
je
dec
pop
adc
push
mov
movhlps
lret
mov
out
jo
sub
aaa
xorl
ret
push
js
jl
push
jnp
pop
int
xor
into
push
and
cmp
mov
and
fsts
sbb
clc
fs
loopne
mov
fistl
sbb
cmp
leave
fimuls
mov
aam
repz
xchg
sbb
inc
mov
fdivrl
lds
loop
sbb
cs
xchg
and
imul
or
xlat
pop
push
in
xchg
and
ljmp
ret
jne
movsl
movsb
jne
adc
xchg
pop
fcmovbe
testb
dec
mov
jle
push
sub
mov
aas
loop
xchg
cmp
push
and
mov
ja
adc
xchg
ret
push
movsl
push
mov
push
call
cmpb
dec
nop
cwtl
pop
in
jmp
push
fisubrs
cld
pusha
mov
enter
pop
lods
loopne
pop
es
outsb
stos
dec
cmpsb
ss
stc
fisttpll
inc
mov
nop
jbe
pop
dec
adc
out
out
icebp
mov
dec
dec
jae
inc
rol
jecxz
aaa
in
sbb
or
add
test
add
add
jbe
je
xchg
std
push
push
mov
inc
sub
ret
push
pop
xlat
or
scas
je
sub
add
sarb
int
repnz
stc
xor
call
in
test
inc
ljmp
push
sub
aaa
pop
add
je
cli
les
push
xor
aam
inc
jo
jecxz
or
jnp
fisttpl
dec
into
mov
push
outsl
loope,pn
inc
repnz
rcl
aas
sbb
popf
cmp
adc
sbb
mov
mov
inc
bound
into
lea
adc
lds
sbb
pop
mov
push
pop
in
push
fsubl
fildll
stos
mov
popf
outsb
aaa
inc
loop
ds
jmp
sbb
mov
and
in
and
imul
leave
push
push
xchg
mov
loop
scas
mov
aaa
xlat
scas
sbbl
mov
pop
adc
popf
lcall
into
sbb
push
lods
push
dec
cmp
ret
lods
jl
mov
ret
stos
pop
xorb
inc
sbb
mov
dec
out
jns
bnd
ds
cwtl
xchg
mov
dec
sub
pop
lods
push
dec
jnp
mov
mov
or
add
and
and
push
pop
mov
in
mov
or
pop
shll
cltd
in
and
sahf
aas
jo
insb
jb
pop
mov
int3
pop
sbb
ret
sbb
xlat
aas
pop
mov
mov
fwait
xor
xchg
mov
in
test
iret
mov
inc
sub
pushf
nop
cmp
ljmp
cmc
mov
xchg
call
xor
adc
push
fmuls
jbe
xor
test
ljmp
std
mov
adc
std
dec
sbb
loope
inc
int
iret
dec
test
in
inc
pop
mov
cwtl
jno
insb
xlat
dec
fdivl
or
cmp
pop
sub
mov
sub
gs
and
push
inc
inc
jmp
adc
push
nop
je
jns
lock
adc
cltd
jmp
sbb
mov
lahf
jnp
or
stos
es
in
and
out
insl
int
rclb
daa
fisttps
in
aaa
stc
js
pop
and
push
loopne
fldenv
push
les
cmp
push
mov
push
xchg
add
mov
and
cmpsb
inc
or
sub
cmp
outsb
cmpsl
and
aas
popf
insb
mov
jnp
add
gs
out
xor
add
mov
pop
test
sahf
mov
sub
in
lods
jp
pop
mov
aaa
enter
pop
out
in
sbb
mov
loope
mov
cmp
mov
popf
lahf
in
into
pushf
jl
or
jae
mov
fistpl
mov
mov
xchg
ret
sub
filds
inc
dec
jmp
jbe
imul
jp
subb
mov
das
mov
adc
daa
add
ja
or
ret
xor
pop
xor
sbbb
push
in
movsb
pop
jg
test
sub
shll
mov
and
dec
xor
xorb
pop
popf
lock
and
sub
cmp
fistpll
movsl
mov
aas
mov
and
xchg
je
repnz
imul
pusha
mov
out
adc
pop
cmpsb
sbb
sti
cltd
mov
adc
std
jge
call
push
dec
push
out
inc
out
in
lcall
subl
cmpsl
mov
sbb
imul
cmp
mov
arpl
jbe
push
mov
scas
mov
test
imul
movl
das
cwtl
into
cltd
xor
and
xorl
sti
imul
lods
stos
and
mov
mov
dec
dec
cltd
andl
or
sbb
mov
je
mov
xor
adc
or
lods
mov
mov
loope
sti
mov
testl
jg
xor
cmp
push
pusha
adc
imul
pop
dec
adc
pop
daa
and
call
push
enter
xlat
adcl
aam
dec
popa
push
nop
cli
xchg
fs
inc
jo
insl
push
lock
jle
mov
xlat
sbb
push
jmp
xor
shr
cmp
jge
fimull
mov
incb
cmc
stc
std
je
jno
mov
imul
lds
mov
stc
jb
xor
test
sbb
adc
insb
jbe
push
mov
xor
filds
push
sbb
jge
fistps
pop
cmpsb
ret
leave
int
xchg
inc
cmp
cmpsb
push
setae
mov
mov
iret
insb
add
cltd
mov
mov
mov
push
ret
ret
and
pusha
jmp
cmp
push
std
or
rcrb
insb
jp
dec
mov
pop
out
pop
or
inc
xchg
test
xor
fstps
into
imul
test
xor
adc
les
cld
out
ret
test
mov
aas
fmull
pop
and
js
aad
xchg
mov
jmp
rcrl
xchg
inc
repz
call
mov
add
jns
xor
dec
outsl
push
rorb
jno
mov
aam
sub
sub
out
sarl
push
iret
xor
clc
stos
push
sar
sbb
jecxz
gs
sbb
rcrb
xor
mov
sub
mov
int
outsl
mov
sub
mov
shlb
insb
ljmp
cmp
lcall
jo
jmp
clc
inc
imul
cmpsl
popf
push
fldt
repz
cmp
sub
mov
mov
mov
dec
aad
mov
les
or
fwait
push
mov
mov
fnstcw
subb
out
sbb
fildll
cmp
scas
dec
cmpsl
ret
or
lret
leave
cmpsl
lds
ret
insl
jmp
out
aad
in
adc
dec
mov
lods
and
nop
loope
int3
js
inc
xchg
xorl
pop
sti
jbe
sbb
sti
sbb
xor
mov
insb
add
mov
jno
and
enter
cmp
not
stc
inc
xchg
push
mov
sbb
jmp
fidivrs
ret
cmp
and
inc
out
cmc
loop
adc
loope
jbe
sub
cld
pop
int
inc
cmpsl
jp
jecxz
push
inc
cmp
adc
cld
sub
call
jnp
xchg
lahf
aad
jne
cltd
loopne
cwtl
and
lods
es
imul
push
xchg
das
faddl
push
mov
jg
lock
stc
sub
les
clc
jb
mov
pusha
jle
dec
xorl
fisubrs
das
mov
jecxz
decl
jno
adc
dec
and
fisubrs
imul
xor
fstps
mov
sub
cmp
stos
ja
xchg
push
xor
mov
inc
std
movsb
call
push
sahf
enter
fidivs
sub
pop
outsl
xchg
outsl
jo
in
jg
jb
or
add
clc
dec
and
dec
movb
js
outsb
push
and
sbb
xchg
adc
shl
test
sbb
repz
and
shrl
shlb
jmp
inc
sti
fldpi
inc
imul
sbb
sbb
push
xor
pushf
repz
xor
pop
xor
stos
stos
add
adc
pop
jge
leave
hlt
push
enter
cmpsl
lcall
mov
pop
xchg
xchg
sbb
test
fbld
xor
imul
pop
jnp
push
orb
inc
shll
int3
insb
jp
and
pop
cs
je
xor
frstor
rorb
cli
mov
pusha
lock
add
or
sbb
sub
push
jns
movl
xor
and
pop
mov
ret
mov
jno
loop
das
push
and
dec
inc
pop
mov
cmp
or
xchg
pop
lahf
mov
cli
inc
mov
sbb
mov
add
cli
popa
dec
sub
mov
andb
and
pop
dec
lock
fcoml
pop
mov
movsb
jne
loopne
nop
inc
push
jmp
xchg
idivb
jg
mov
mov
mov
push
bound
fcoms
sbb
std
sbb
int3
dec
movsl
jbe
sub
adc
mov
xchg
mov
xor
cmc
mov
stc
mov
mov
lods
insb
lods
test
inc
movsb
push
cmp
aad
mov
xor
std
and
out
add
dec
lods
xchg
dec
fstpl
pushf
mov
cmc
icebp
in
mov
and
mov
or
mov
sub
sbb
clc
in
test
fidivs
sbb
cmpsb
push
js
xchg
cld
scas
test
push
arpl
cmp
sahf
cs
jg
fcoms
loop
adc
sarl
fdivrs
js
pop
test
std
lahf
enter
adc
aam
inc
mov
sbb
push
addr16
xor
dec
cmp
repz
cmp
loopne
sub
jno
jg
lahf
xchg
test
int3
daa
pop
mov
pop
in
or
add
sbb
pop
and
mov
leave
leave
xchg
ret
xor
shr
lds
adc
in
rcrb
xchg
mov
jo
add
pop
dec
mov
cwtl
pop
mov
push
add
add
mov
lahf
filds
in
push
stc
cmp
jnp
loop
sub
enter
imul
jns
cmp
or
sahf
aas
ror
roll
pop
cmp
sahf
jns
repz
sub
sub
jl
lock
sub
jne
mov
mov
arpl
pop
js
xor
inc
push
mov
sbb
mov
sbb
inc
ss
or
cmp
pop
sbb
push
jns
lock
push
and
mov
aad
jb
cmpsb
mov
lret
sbbb
jb
inc
test
scas
inc
or
mov
lahf
fsts
mov
sub
shl
inc
add
adc
arpl
and
push
pop
sbbl
sti
cmp
fbstp
cltd
outsb
sahf
inc
xor
pop
cmp
test
adc
dec
loop
sarl
xor
mov
mov
jge
push
jmp
mov
xchg
push
movsl
std
jnp
or
pop
mov
xlat
jns
hlt
fists
imul
mov
inc
jg
call
mov
iret
and
movsb
jo
xchg
into
or
loopne
push
leave
cmp
add
pop
xor
xchg
adc
add
jo
and
mov
enter
jns
sbb
cmpsb
mov
xor
lock
jb
stos
cmp
fcomip
negl
push
lahf
inc
dec
dec
mov
xor
jg
inc
popf
fwait
push
std
das
stc
sbb
add
pop
orl
jnp
mov
lcall
push
fchs
inc
imull
and
adc
xlat
int3
lods
or
and
push
mov
lcall
mov
into
addr16
jnp
add
jnp
jae
out
fdivrs
lret
mov
add
jmp
repz
scas
cmp
mov
xor
lods
scas
or
mov
lods
std
adc
jg
or
or
les
inc
sahf
push
test
dec
push
add
dec
cli
jne
mov
scas
leave
and
pop
fwait
push
sti
and
push
daa
vpminub
stos
push
xor
lahf
andl
sub
push
or
or
inc
dec
pop
jno
and
or
xor
push
fucomip
sub
jecxz
pop
addl
sbb
pusha
cltd
rol
inc
je
aad
jns
test
lahf
inc
jecxz
insb
add
pop
mov
div
sahf
add
stos
mov
ret
lcall
jbe
sub
sbb
lret
jb
push
orl
imul
mov
pop
mov
cld
jmp
test
out
ja
ret
lods
movsb
bound
vmwrite
mov
lds
cmpsl
outsb
xor
or
testb
les
mov
pop
repnz
lahf
or
call
loop
outsl
aas
rolb
fcmove
ret
faddp
sub
pop
pusha
out
fdivrs
add
jbe
jne,pn
mov
add
enter
repnz
jge
enter
pop
addl
fstpl
and
cmp
sub
sbb
cmc
cld
push
sbb
decb
mov
mov
pop
call
es
sub
mov
sahf
mov
or
rolb
sbb
shl
aas
add
sti
mov
fwait
push
std
scas
outsl
je
add
jb
out
mov
pop
mov
sub
mov
ficoms
mov
std
or
jbe
add
jae
add
test
or
mov
inc
stos
and
push
int3
into
insl
mov
in
adc
daa
mov
pop
jl
je
inc
adcl
in
mov
icebp
adc
jmp
cli
bound
jmp
add
and
mov
enter
ja
scas
push
push
mov
xchg
scas
sbb
sub
cltd
pushf
or
test
mov
and
sub
nop
push
lds
jl
imul
fldt
mov
xchg
sub
addl
mov
push
cmp
pop
lret
pop
movsl
pushf
insl
cwtl
push
mov
cmp
sub
adc
cs
inc
xchg
sbb
add
mov
sahf
mov
jge
popa
sbb
rorb
cmp
pop
int
xor
xchg
adc
mov
es
shr
test
mov
fiadds
adc
idivl
push
fs
fwait
jno
sbb
inc
cmp
lret
mov
lods
cmp
adc
and
movsb
mov
je
sbb
add
pusha
jge
mov
or
fbld
andw
adc
lock
jnp
jecxz
mov
push
std
inc
iret
push
push
xorl
pop
ja
lret
scas
ss
and
imul
push
ret
xlat
dec
sbb
mov
jb
xchg
int3
cmp
cmp
test
jne
add
lods
movsl
xchg
call
and
int
cmp
push
js
jg
cwtl
imul
add
pusha
sbb
jns,pn
ss
sub
and
mov
or
mov
mov
jne
aas
mov
cmp
mov
adc
and
push
mov
iret
xor
inc
pop
imul
and
xor
xchg
mov
inc
and
aaa
hlt
pop
dec
dec
mov
ljmp
dec
xor
xor
lock
cmp
lret
stc
sub
lock
leave
fcoml
icebp
mov
dec
sbb
mov
lret
call
mov
dec
adc
or
adc
push
and
xchg
mov
movsl
pop
ljmp
cmpb
lret
enter
inc
subb
push
mov
and
je
fidivrs
icebp
cwtl
xchg
ss
pop
out
cmp
add
in
or
or
push
lcall
pop
mov
icebp
cmc
aad
lea
dec
orb
mov
imul
adc
xor
mov
sub
jmp
or
hlt
push
lods
push
jne
cmp
out
inc
outsb
sbb
inc
jp
stc
xchg
andl
jns
repz
mov
aad
or
mov
xchg
adcl
mov
and
mov
rorl
mov
fimuls
jmp
aam
int
clc
dec
cmpb
lret
stos
out
cmpsb
xchg
cwtl
xor
cmp
cmp
cmpsb
stos
arpl
lods
filds
or
scas
push
push
dec
xor
test
sub
aad
sub
inc
adc
xor
fs
mov
or
aas
jl
pushl
imul
leave
pop
sub
sti
insb
lahf
sub
lcall
sub
loope
popl
leave
jno
pop
xchg
mov
int3
jb
jns
adcb
inc
mov
pop
imul
sbb
idivb
rorb
cmp
cs
cmp
jmp
inc
lds
sti
sbb
std
push
jmp
pop
scas
aas
sbb
icebp
insl
lcall
fimull
test
stos
in
mov
std
loope
jle
icebp
vpackuswb
sub
mov
lods
andnps
dec
pop
cmp
mov
inc
push
pop
repnz
xor
or
pop
stos
cmp
jo
adc
mov
push
mov
ficoml
icebp
xor
arpl
mov
in
pop
rcrl
mov
mov
out
pop
out
out
insb
loopne
pusha
sub
inc
or
jb
cmp
je
roll
pop
in
sbbb
dec
adc
movsl
lret
aaa
cmp
div
jne
out
ret
adc
jg
stc
add
cmovl
aas
sub
push
add
outsb
inc
push
xlat
pop
xor
and
in
dec
cmp
shll
cmpsb
and
xchg
mov
push
mov
aam
xor
mov
cmc
incb
dec
lods
pop
sub
push
pop
testb
xchg
shlb
mov
or
mov
push
xchg
push
test
jge
inc
icebp
jmp
int
jge
mov
int
sbb
jno
mov
add
fcmovne
mov
pop
stos
outsb
mov
mov
call
sbb
mov
mull
and
lret
mov
xor
mov
or
cs
xor
inc
sbb
mov
cmc
gs
pop
jecxz
das
adc
ja
bound
mov
sbbl
shl
cld
cltd
enter
or
inc
dec
jb
cltd
and
scas
pop
push
push
pop
test
pop
lds
inc
adc
hlt
ljmp
int3
xlat
mov
outsl
jge
mov
jg
mov
mov
cltd
bound
lret
notb
jne
movsl
data16
movsl
addl
mov
shll
cmpsb
xor
or
mov
pop
out
inc
aad
jmp
sub
lahf
neg
fsubrl
icebp
clc
dec
xchg
fidivrs
and
inc
xchg
mov
adc
aas
jbe
and
and
dec
push
call
addr16
cmp
adcl
rcr
stos
xor
pop
add
push
sbb
sbb
lcall
add
lcall
pop
out
jmp
mov
pusha
sub
fstpt
sub
inc
js
xchg
adc
in
movsl
jmp
sbb
adc
dec
pop
xorl
stos
addr16
dec
jmp
mov
push
inc
dec
stos
jb
movsb
iret
lret
or
xabort
mov
and
pop
cmp
push
andb
fsubl
jecxz
call
fnstenv
lods
add
sub
scas
dec
mov
cmp
clc
rcll
dec
jb
aam
fisttps
and
in
sub
fwait
dec
jg
dec
outsl
jecxz
or
cltd
jge
imul
mov
les
jns
mov
sbb
cmp
jnp
out
add
lahf
sub
jb
cld
sub
dec
fwait
popa
stos
cmp
add
lahf
push
arpl
orb
jp
or
scas
loop
pop
add
mov
mov
mov
dec
jnp
addl
jnp
fwait
jmp
mov
bound
dec
mov
mov
pusha
mov
dec
pop
cmp
inc
dec
aaa
cmpsb
inc
inc
sub
dec
or
bound
mov
sti
lahf
jnp
cwtl
cld
sub
movsl
mov
push
cmp
addr16
inc
andb
insb
icebp
mov
cmp
fildl
pop
sbb
aam
mov
roll
xchg
mov
in
jmp
mov
xor
xor
inc
jl
lahf
mov
or
imul
mov
sbb
rol
jecxz
adc
dec
push
cmc
or
jge
leave
add
or
jmp
movsb
push
add
ljmp
loop
mov
mov
mov
or
mov
fsubl
push
and
inc
cmp
mov
mov
mov
movsl
movsb
daa
xchg
imul
mov
pushf
imul
jmp
orb
roll
out
push
iret
cmp
mov
addb
fsubs
pusha
jae
xchg
or
outsb
xchg
cwtl
call
add
sbb
shr
adc
int3
sbb
nop
mov
xor
rclb
fcoms
or
mov
cmp
je
jno
repnz
mov
and
pop
mov
xor
cltd
imul
jmp
cli
nop
and
jp
cmp
xchg
push
cld
or
xor
js
push
sub
dec
ret
nop
cwtl
cmpsb
popf
jne
xor
aas
ja
pusha
mov
dec
xchg
adc
xor
pop
adc
andb
jmp
daa
xor
pslld
push
insl
int
lock
xor
and
sub
cwtl
mov
ss
stos
add
fisubrl
ds
rcll
call
dec
dec
sub
dec
sbb
aad
lcall
mov
scas
lods
adc
xor
add
sti
sbb
shrb
std
ret
lods
pop
cmp
jge
ret
sbb
push
scas
sbb
sbb
clc
loope
lret
mov
insl
ror
lret
pop
add
jns
cmp
iret
fs
lock
xchg
ror
or
add
xchg
mov
mov
xchg
dec
cld
add
jnp
inc
rclb
aam
jecxz
push
nop
push
cmc
in
andb
leave
rcrl
pusha
add
in
iret
fisubrl
xor
std
cmpb
push
lret
fucomp
test
test
arpl
sub
clc
jg
fnstenv
xlat
mov
cld
test
int
fwait
inc
push
in
mov
into
fsubrs
cwtl
jge
push
jo
jl
scas
loop
ds
xor
mov
pop
push
pop
lds
pop
lea
cmp
stos
add
adc
mov
inc
in
dec
mov
aad
add
push
cmp
imul
xchg
or
fwait
ds
jg
je
xchg
mov
sbb
mov
sub
xor
and
jae
cmpsb
fwait
rcrl
add
mov
rcrl
rcll
in
hlt
dec
gs
lock
je
das
sub
repnz
pop
sub
or
jo
aaa
repnz
pop
mov
jbe
cmp
mov
scas
xchg
mov
outsb
xchg
jb
das
jge
lods
clc
fcmovnu
out
pop
xchg
lahf
out
lock
add
pop
aam
mov
in
and
mov
pushf
add
pusha
iret
inc
inc
dec
xchg
push
xchg
add
inc
or
mov
xor
and
insl
xlat
inc
ficompl
rcrl
or
dec
jnp
hlt
in
sbb
lea
lret
or
cmp
cmp
ror
add
xchg
sahf
fldenv
mov
sbb
arpl
push
mov
mov
cld
adc
push
psadbw
faddp
jns
addr16
dec
cmpsb
frstor
fistps
hlt
test
ds
pop
int3
jae
int3
cs
lahf
repnz
sti
rcrl
movsbw
add
roll
pop
dec
cmc
fdivs
dec
mov
in
lcall
mov
adc
rcr
das
push
bound
push
adc
lods
fcompl
mov
test
add
or
icebp
add
push
mov
lock
inc
fdivrl
jb
inc
sub
mov
mov
and
insb
xlat
adc
shrl
xchg
mov
andl
loope
lods
cmpsl
rclb
ret
das
movsb
or
pop
lcall
fs
into
and
pop
dec
cltd
insb
xchg
repz
mov
pop
xchg
xor
mov
adc
imul
addb
jge
mov
inc
push
pushw
mov
mov
add
out
inc
divb
cmpsl
imul
loop
xor
ror
mov
pop
sbb
jecxz
jne
into
dec
pusha
iret
xor
test
in
jns
xchg
in
lods
testb
rcrb
cmp
mov
les
add
stos
aam
popa
inc
ds
dec
push
bound
in
jp
lahf
xorb
cmc
pusha
mov
loopne
pop
outsl
push
mov
dec
test
push
xchg
shr
and
and
add
jae
in
cmp
lret
cli
jns
adc
les
bnd
push
mov
mov
das
sbb
filds
push
jl
loope
xchg
ret
sbb
les
mov
pop
add
and
lods
push
leave
daa
or
xchg
loope
mov
and
popa
outsl
add
jp
rcrl
sbb
test
xlat
xchg
xorb
mov
pop
mov
ret
sbb
mov
or
nop
imul
test
das
outsl
les
lcall
shrb
pop
jae
and
inc
hlt
test
fisubrl
inc
mov
mov
lahf
pop
faddl
movsb
out
pop
pushf
int
xor
aam
push
je
loopne
sahf
mov
jle
sub
pushl
push
add
js
push
dec
aad
sub
jmp
test
ss
pop
jne
stc
mov
das
xrelease
push
sub
mov
inc
adcl
mov
inc
das
outsb
jg
int
mov
add
movsl
pushw
lcall
mov
jns
lcall
dec
fldcw
fwait
push
dec
fsub
cmp
cmpsb
fnstsw
and
loope
lock
ljmp
popf
sbb
scas
jae
sbb
mov
sbb
rcrb
cltd
jg
dec
in
lret
cmp
ret
std
ret
lods
movsb
jmp
add
rol
out
xor
jge
fdiv
in
push
das
aaa
lret
dec
pop
repnz
push
adcl
sbb
in
rclb
loopne
lea
pop
icebp
jecxz
in
xchg
test
out
mov
pop
mov
or
scas
adc
div
push
rcll
sbb
je
adc
jbe
mov
sub
adc
mov
mov
push
inc
loope
jo
pop
test
std
jbe
lea
mov
cmpsb
cmp
icebp
pushl
cld
repz
mov
xchg
xor
mov
mov
sbb
xchg
mov
rolb
popf
xor
sub
call
pop
xor
ret
xorl
icebp
insb
test
call
adc
in
and
pop
out
dec
std
in
xchg
adcl
in
test
das
sbb
jmp
xchg
in
fstpt
and
sub
adc
daa
push
mov
sub
xchg
xchg
repz
orl
rcll
jmp
rorl
lcall
cwtl
xor
mov
inc
cmp
shlb
xchg
outsl
and
out
mov
cltd
and
mov
or
imul
in
out
push
adc
xchg
popf
enter
in
cmp
rcrl
lret
aad
pushf
sbb
rclb
sbbl
shll
sub
ror
sub
sbb
cmp
mov
xadd
std
shlb
push
movsl
xchg
jae
xlat
xor
adc
inc
xchg
cmp
loop
xchg
popa
mov
and
in
idiv
fdivs
or
pop
mov
dec
mov
dec
pop
test
or
ds
and
add
roll
mov
cmp
cs
divl
out
pop
push
fists
cmc
and
arpl
add
enter
add
jp
enter
mov
inc
repnz
cs
lcall
popf
fisubl
mov
rclb
aad
push
iret
pop
outsl
jo
les
mov
cmpsl
add
test
adc
and
test
xcrypt-cbc
cmpsl
push
xor
andb
testl
adc
jg
std
mov
imul
add
jno
xor
int3
sub
jns
fdivrl
in
aad
sbb
jnp
sub
in
xchg
in
nop
rcrb
pop
push
fistpl
test
mov
dec
and
and
mov
mov
sbb
jl
mov
neg
cli
bound
loop
iret
or
stc
adc
in
xlat
les
add
int3
pop
daa
mov
lret
or
pop
scas
pop
cmpl
xor
int3
pusha
mov
and
inc
mov
lods
mov
test
pop
addb
cmp
adc
js
xor
jl
adc
inc
leave
mov
mov
bound
push
mov
push
xor
push
daa
add
mov
and
adc
stos
mov
jle
xchg
pop
sbb
inc
or
sbb
sub
adc
and
cmp
test
push
outsb
pop
add
mov
arpl
jbe
xchg
lahf
ja
xchg
push
mov
andnps
and
xchg
push
cmp
lret
inc
sub
rcrb
pop
out
mov
mov
shrb
or
mov
mov
out
inc
push
data16
gs
je
call
aam
pop
ds
aaa
sub
out
popf
mov
in
ficomps
cmp
rclb
fwait
sti
cmp
mov
mov
cmp
out
jge
aas
dec
jl
mov
ds
dec
mov
add
sub
dec
mov
lods
sub
dec
inc
xor
div
aam
and
and
mov
push
and
sub
fistpl
dec
fimull
inc
sub
leave
mov
mov
es
or
scas
xorl
popf
sbb
aam
xor
jne
sarl
sub
popa
mov
out
dec
push
test
push
cmp
add
scas
shll
out
cmpsl
jle
and
inc
cli
xchg
xor
out
in
pusha
pop
mov
stc
xor
sahf
add
shlb
mov
fildll
mov
repnz
sub
les
stos
xchg
and
fadd
adc
add
ljmp
subb
xor
pop
insl
test
dec
fdivl
imul
lods
mov
inc
loopne
arpl
sbb
imul
aaa
mov
mov
sub
and
sbb
jnp
xor
ljmp
mov
enter
jecxz
push
xchg
dec
mull
in
out
pop
xchg
adc
push
xchg
inc
int3
mov
jns
xor
jecxz
pusha
jae
inc
cmp
imul
andl
dec
xor
fnsave
stos
and
ljmp
cli
inc
adc
add
in
inc
div
jo
xchg
repnz
pop
cmp
shlb
adc
mov
filds
arpl
jne
pop
bnd
push
sbb
imul
jp
and
pop
test
in
call
mov
enter
jmp
mov
repnz
leave
push
push
jnp
insb
pusha
xor
pop
dec
int
or
lods
and
outsb
idivl
testl
mov
adc
lret
daa
inc
cmp
jl
push
pop
nop
jb
xor
add
iret
push
std
fiadds
scas
pusha
daa
jg
int3
dec
inc
imul
lea
inc
fs
jns
sub
inc
jge
nop
or
iret
jb
shrl
popf
jl
insb
push
mov
xor
xchg
cwtl
jle
std
hlt
push
mov
insb
lock
fwait
mov
mov
jnp
xchg
pop
dec
mov
add
into
cld
xlat
cmc
xlat
clc
push
ljmp
add
aas
push
popa
lret
jmp
repz
dec
movsb
sub
push
daa
adc
pop
mov
xchg
dec
pop
fisubrs
into
push
mov
inc
out
movsb
sub
mov
mov
pop
aaa
push
adc
fnstenv
jo
cld
pushf
popl
mov
dec
aaa
hlt
adc
fbstp
arpl
shr
sbbb
fmull
movups
and
jno
and
lds
cli
sub
fdivrp
dec
push
jno
pop
or
or
out
out
cmpsb
in
fidivs
xchg
mov
inc
fistl
jb
cmpsl
jg
test
sbb
cmp
test
xchg
mov
push
add
mov
or
stos
daa
dec
sbb
sub
movsl
mov
pop
mov
gs
test
mov
pop
insl
jbe
cmp
or
mov
pop
arpl
add
jne
ds
push
pop
cmp
push
scas
out
shr
hlt
in
pusha
inc
sbb
jo
sbb
sbb
lret
lret
mov
sbb
gs
or
mov
icebp
adc
jbe
out
scas
push
in
insb
sub
and
add
sub
mov
loop
rorl
xor
push
std
jns
mov
xchg
xchg
cmovge
ds
jecxz
in
dec
les
xchg
xor
sbb
add
out
hlt
dec
pop
jge
xlat
xor
cltd
and
nop
ss
pusha
jp
jmp
lods
and
in
mov
dec
push
dec
pop
xchg
cmpsl
jnp
jp
enter
mov
shr
inc
jae
cs
mov
pop
insl
int
xor
scas
inc
jb
mov
aaa
add
ljmp
jae
push
push
adc
mov
jl
sub
mov
mov
int
sbb
inc
mov
movsb
inc
cmpb
or
fmuls
push
and
dec
lods
dec
imull
int
or
nop
adc
pop
jmp
or
inc
mov
arpl
jb
mov
fmuls
mov
dec
cld
add
push
cltd
xchg
enter
add
xchg
stos
ss
dec
nop
lret
mov
jne
cmpsl
sahf
inc
lret
xchg
test
in
or
cmp
mov
dec
push
shlb
mov
or
push
add
adc
inc
sub
jns
cmp
xchg
testb
cmp
mov
push
mov
sub
mov
int
addb
repz
loop
pop
lds
mov
push
push
sbb
ds
lods
into
mov
shlb
sub
in
movb
inc
lea
movsb
ret
mov
mov
push
insl
leave
addr16
aad
xchg
insb
aas
aad
adc
or
pop
adc
jmp
jno
sbb
cmpsb
mov
push
fwait
jmp
xchg
fstpt
add
add
into
in
mov
pop
xor
mov
mov
jnp
pop
cmpsl
pop
mov
push
or
dec
ret
or
mov
out
push
inc
ss
outsl
mov
mulb
sarb
aas
mov
jecxz
mov
cmp
lcall
fmulp
leave
std
rolb
mov
in
and
pushf
sbb
imul
addr16
paddw
adc
dec
push
cmp
adc
mov
xor
mov
sbb
and
sbb
cli
pop
aaa
jmp
xlat
sub
outsl
and
fs
pop
mov
and
repz
cmc
pushl
pop
pop
push
inc
sub
das
pop
sub
lcall
add
shll
cmp
xchg
enter
sbb
push
shll
inc
sub
fcoms
stos
xchg
cltd
mov
stos
push
in
and
icebp
inc
pop
sub
je
nop
les
addr16
jmp
scas
xor
or
mov
repz
mov
outsl
ljmp
arpl
cmp
enter
inc
fwait
jle
pusha
add
enter
filds
inc
aas
mov
mov
mov
les
mov
ret
mov
outsb
mov
xchg
xor
cmpsl
mov
mov
xchg
mov
push
push
int3
lea
hlt
mov
xorl
loop
sahf
ljmp
addr16
lds
ja
aad
jne
jae
out
push
mov
sub
sbb
ds
xor
test
cmp
mov
sub
dec
insl
push
mov
jmp
aaa
sub
mov
xor
out
and
inc
cltd
jp
dec
in
les
mov
mov
popf
rcl
fcompl
lock
and
sahf
pop
out
jle
pop
scas
push
insb
gs
fimuls
jl
mov
iret
xchg
pusha
fwait
pop
out
push
fwait
mov
ficoms
mov
cmc
data16
popa
add
test
cmp
imul
mov
cmp
pusha
inc
repnz
fcmovne
jo
adc
enter
jg
and
shl
sbb
sbb
insl
adc
bound
je
add
sbb
fdivrl
xchg
out
push
aaa
test
lcall
sub
jp
jnp
loope
add
ss
mov
iret
sbb
mov
jecxz
pop
or
adc
push
out
loop
dec
sbb
mov
jge
cmp
or
ret
jp
dec
in
mov
pop
loope
inc
mov
rcrl
sub
inc
frstor
test
mov
leave
negl
jnp
sbb
or
movsl
rclb
jne
cmp
adc
ret
repz
addr16
sub
idivb
dec
cld
fsts
push
dec
sub
cmpsl
or
xor
stc
loopne
xchg
jecxz
ljmp
rcr
or
push
push
cmp
pop
dec
scas
out
and
pusha
lods
inc
sti
xchg
out
mov
lret
adc
outsl
stos
pushf
fs
sub
pop
gs
daa
add
ss
hlt
mov
dec
or
dec
add
jg
nop
and
mov
push
push
add
cmp
je
cmpsb
jbe
and
and
mov
pop
mov
mov
addr16
lcall
xchg
lods
daa
popf
std
or
jp
mov
imul
push
ja
mov
mov
lea
or
cld
jbe
mov
jp
adc
loop
xor
mov
xchg
je
jge
or
mov
dec
mov
bound
xchg
add
add
or
mov
mov
dec
push
out
jns
push
add
ds
in
dec
clc
leave
jns
rcrl
xchg
and
xchg
rclb
mov
jmp
push
dec
in
fsubs
and
leave
out
push
adc
loop
jmp
mov
out
imul
ds
sbbb
mov
mov
xchg
in
and
and
xchg
test
and
or
sbb
mov
sbb
adc
mov
cmp
push
mov
bound
inc
sti
pop
xor
add
adc
xlat
scas
and
push
xchg
inc
inc
movsl
sti
or
inc
dec
push
lds
outsl
test
lds
pop
add
xchg
sbb
inc
jae
cmp
push
mov
xor
aam
and
lea
adc
fldt
adc
add
outsb
xor
outsb
mov
jg
add
mov
gs
cmc
push
cmc
cmp
mov
cld
mov
cwtl
lods
cmp
sbb
popa
xlat
popa
and
dec
add
add
aaa
test
jecxz
arpl
mov
std
testl
fldl
jb
pushf
pop
cmp
iret
in
lock
es
loop
negb
je
fistpll
in
mov
mov
cmpl
stos
nop
pop
and
mov
subb
insl
sub
pop
fwait
push
and
shlb
mov
aad
mov
sarb
inc
pop
add
out
mov
repz
lods
mov
mov
mulb
mov
adc
sbb
stc
sbbb
adc
adc
cmpsb
loope
test
cmp
loop
aas
pop
push
xor
popf
jb
adc
inc
pushf
or
cmc
mov
movsb
fucomi
out
daa
mov
xor
loopne
or
stos
sbb
jae
out
enter
sbb
loop
in
xchg
sahf
jbe
sub
mov
movsb
mov
leave
movsb
jmp
mov
mov
jecxz
dec
cmp
std
dec
dec
xlat
jnp
mov
nop
mov
mov
jae
or
inc
mov
push
adc
sub
rorl
test
loop
movzwl
adc
iret
lds
cmc
std
popa
lods
sar
cltd
clc
pop
mov
bound
mov
mov
xor
ficompl
stos
mov
fmuls
xchg
les
fwait
inc
pop
and
jmp
es
mov
test
aas
ljmp
sub
fcomi
cmc
cmp
cs
data16
fmul
sti
xchg
xor
cs
out
xchg
jo
fucomp
mov
es
mov
test
xlat
and
sbb
dec
adc
push
push
sahf
push
out
mov
mov
in
ret
jg
adcl
in
adc
xor
xor
lahf
mov
mov
inc
jae
mov
and
fisubs
push
inc
idiv
jmp
stos
aas
mov
in
mov
inc
push
sub
jno
mov
sub
fdiv
out
fcmovne
int3
arpl
inc
dec
xchg
cld
push
cli
aam
mov
lock
cmp
loopne
push
inc
inc
stc
ret
test
inc
dec
jb
pop
xor
int3
mov
lcall
ja
or
mov
cld
cmp
std
adc
cli
loope
push
ss
pop
mov
scas
or
cld
rorl
push
adc
gs
pop
outsl
adc
add
pusha
cmp
xor
sbb
or
fbld
xchg
shrl
and
aaa
dec
jbe
adc
pop
es
push
adc
xchg
dec
cmc
pop
int3
or
stc
inc
data16
mov
lods
js
cmpsb
loopne
lret
adc
jo
push
test
inc
cmp
add
js
xchg
in
cs
pop
or
inc
out
insb
jge
jp
outsb
xchg
mov
and
leave
xchg
lcall
adc
inc
inc
fucomp
orl
ds
jne
je
ficoms
ud1
sahf
int
ret
addr16
int3
xor
call
adc
stos
jle
dec
enter
inc
mov
addr16
cmp
outsl
jns
adc
sti
adc
add
fidivrs
addb
sbb
jnp
push
cmc
loope
gs
and
jp
mov
ljmp
lods
add
aam
inc
stos
std
mov
js
push
cmpsl
mov
insb
ss
popa
fimuls
mov
mov
int3
test
incb
nop
sbb
ficoml
mov
hlt
or
subb
mov
lods
ret
jge
sub
in
pop
clc
sahf
in
ljmp
mov
iret
inc
nop
sub
jb
or
sti
jns
jg
cmp
mov
push
xchg
and
das
js
inc
mov
test
pop
test
int3
lret
arpl
push
sbb
outsb
push
fcomps
mov
inc
and
add
shr
xor
fwait
aas
dec
jnp
out
inc
lret
pop
ficoml
loope
dec
jg
jne
mov
xchg
cld
and
iret
or
int
xchg
shrl
or
imul
ljmp
jl
mov
vsubps
loope
int
jno
test
xchg
and
push
ds
mov
in
mov
sahf
lret
push
jbe
stos
fisubs
mov
fnstcw
cltd
aas
pop
sbb
icebp
jecxz
pop
ljmp
stc
xchg
jg
jnp
sbb
mov
add
mov
xchg
adc
sbb
push
or
pusha
dec
sbb
repz
mov
ss
rcr
ret
test
mov
add
dec
int
es
xor
ljmp
sbb
and
es
frstor
xchg
lret
cmp
cwtl
jle
sub
xorl
or
arpl
insb
inc
stos
inc
xchg
xor
out
xchg
xor
mov
lods
add
ja
fimuls
int3
insb
loop
mov
or
out
add
push
test
cltd
mov
icebp
stos
sahf
mov
add
mov
push
xchg
outsb
push
shll
pop
divps
inc
cmp
out
mov
imul
jo
lret
inc
jb
jmp
std
sbb
ljmp
and
cmp
inc
imull
pop
xchg
xor
lds
jae
sub
cmp
in
mov
ds
pushf
pop
mov
repz
lret
xor
sub
test
into
repnz
push
imul
lcall
inc
insl
xor
rorb
adc
pop
aam
push
jb
mov
jmp
mov
jo
mov
inc
inc
xor
xor
push
shrb
mov
sbb
incb
dec
xchg
repz
jns
sub
jo
fwait
jne
test
in
mov
push
fsubl
test
pop
dec
repnz
or
push
mov
addr16
out
pop
xorb
test
loope
addl
xor
orb
negb
dec
or
ret
adc
sub
imulb
mov
jge
flds
dec
addr16
pop
nop
xchg
outsb
and
sahf
sub
insl
mul
lods
iret
mov
and
sub
mov
sarb
push
subl
addb
repz
sbb
negb
xor
inc
pop
ja
pop
and
xchg
inc
inc
bound
mov
adc
pop
sbb
push
dec
aaa
xor
xor
push
sub
ds
aad
xchg
and
dec
fcoms
pop
mov
push
dec
pop
stc
call
and
cmpsl
insl
xor
xchg
mov
popa
outsl
and
push
pop
pop
ljmp
iret
push
mov
loope
lods
lahf
cmp
inc
dec
into
pop
sarb
xchg
lock
mov
jns
stos
jg
pop
mov
shll
push
insl
sub
sub
and
adc
test
sub
mov
mov
cmp
js
and
mov
xchg
cltd
testl
dec
xor
fwait
sub
outsl
jl
sbb
loopne
sbb
add
sub
mov
jmp
movsb
pusha
adc
hlt
pop
mov
dec
popf
sbb
xchg
mov
movsb
mov
inc
inc
xchg
mov
sahf
adc
cmp
cmp
xchg
fimuls
adc
std
jne
outsl
leave
jecxz
sbb
out
out
out
mov
jge
call
inc
xchg
and
ja
jo
test
test
scas
sbb
into
addr16
add
pop
outsl
xor
jmp
int3
in
or
mov
imul
mov
test
or
xlat
adc
test
sbb
pop
cmp
fstps
adc
insl
inc
inc
pop
cmpl
adc
ja
pop
aam
dec
and
or
fbstp
dec
mov
je
daa
je
sub
and
cmp
xchg
shlb
les
out
mov
xor
repz
and
inc
outsb
rcrl
add
sub
insb
cmc
jbe
and
cmp
dec
jo
push
dec
sti
push
icebp
int
sbb
lahf
cmp
pop
add
lock
jns
subb
leave
fildll
subl
test
pop
insl
icebp
enter
aas
add
mov
xchg
shrb
jmp
sbb
cmpl
pop
push
adc
popf
xchg
xor
sbb
jmp
shl
lods
dec
add
and
lods
or
mov
movl
xorb
arpl
push
pop
popf
sbb
pop
xchg
xor
ret
cwtl
xor
sbb
iret
mov
or
cld
adc
xchg
lods
and
test
jl
or
pop
imul
jmp
mov
jge
xchg
movsl
jp
sbb
jnp
mov
fwait
sbb
cld
paddusb
xor
jle
push
mov
xchg
je
pop
adc
jnp
ljmp
or
in
fsubs
sbb
push
fnstsw
mov
scas
dec
cld
cmp
xchg
push
jmp
fs
push
mov
insb
push
aad
jnp
js
stos
icebp
jns
pop
adc
imul
add
mov
into
sub
inc
mov
or
cmp
xor
inc
out
inc
mov
test
push
enter
sarb
mov
cmp
pop
add
dec
fs
cmp
mov
int3
test
fstps
int3
in
xchg
out
or
or
sbb
loope
dec
fwait
pop
dec
mov
test
jno
mov
rcpps
lds
sbb
xchg
push
sub
mov
and
shlb
aaa
xor
jae
mov
pop
fsubr
pop
arpl
jmp
sar
mov
test
pop
sbb
add
lea
ss
jno
pushf
outsl
cltd
or
add
pop
add
leave
mov
push
fwait
inc
test
hlt
imul
mov
lret
mov
push
js
sub
test
movsl
jge
push
rorl
test
dec
std
cmp
mov
sbb
repnz
repz
mov
fbld
sub
adc
add
repz
cli
inc
dec
mov
mov
jnp
pop
jae
jecxz
fstps
mov
scas
adc
pop
cmp
add
and
mov
and
clc
les
repnz
jne
adc
mov
pushf
clc
lcall
fmull
jne
dec
push
add
sahf
xor
mov
ficoms
mov
outsb
mov
popf
pop
fimull
leave
adc
rcrl
mov
xchg
xor
imul
lock
mov
bound
bound
and
xor
in
lock
xchg
mov
sub
add
subl
dec
jnp
inc
pop
push
fiadds
nop
aaa
aas
dec
xchg
push
ljmp
lret
dec
out
or
xor
xor
push
fisubl
jo
roll
out
mov
cwtl
adcb
xchg
daa
dec
cmpsb
mov
cmpsb
sub
scas
int3
jnp
rorb
fsts
mov
enter
call
repnz
rclb
cmp
sub
jae
les
push
jbe
jo
hlt
in
cmp
xor
shll
gs
xor
jno
mov
ja
sub
scas
mov
pop
ss
stos
xchg
iret
out
mov
pushl
xor
pop
outsb
push
pop
bound
loope
add
jmp
sub
je
sbb
aas
mov
test
es
dec
xchg
pop
push
mov
lods
and
lds
adc
sub
jae
lret
mov
fildll
dec
sub
gs
daa
sbb
loop
jle
mov
mov
in
shrb
xor
sbb
nop
xor
dec
lock
mov
and
or
in
nop
sbb
sbb
cmp
pop
jecxz
dec
push
and
and
int3
inc
subl
lods
shrb
popa
out
cmpsb
push
jbe
adc
pop
fwait
mov
pop
jnp
mov
cmp
jo
jbe
jns
jmp
pop
pop
shrl
lods
mov
xor
sub
in
adc
stc
push
popf
fwait
mov
xchg
xchg
inc
inc
mov
mov
sbb
mov
pop
loopne
mov
shl
sub
frstor
hlt
push
int
std
in
loope
imul
and
shll
mov
mov
addr16
cmc
mov
incl
sahf
fwait
aas
and
pushf
and
cmc
jb
dec
cmc
lcall
mov
push
mov
fisubrl
xor
pushf
ficoms
xor
inc
mov
push
mov
fldt
cmp
xchg
add
pop
nop
js
scas
pop
mov
sbb
js
inc
mov
call
shrl
out
test
stc
outsb
xchg
mov
lock
inc
xor
cmp
sbb
sub
in
inc
add
jbe
add
xchg
es
bnd
jno
adc
pushf
xchg
inc
cmp
roll
setb
mov
inc
mov
aad
bound
push
fistps
pop
stc
push
or
dec
or
push
mov
dec
je
shll
mov
inc
out
aas
adc
inc
loop
mov
cltd
pop
cmp
aaa
insb
sbb
mov
insb
in
pop
shr
je
mov
xlat
das
jns
pop
mov
hlt
pop
aaa
sar
jne
ljmp
cmc
adc
shlb
sub
mov
arpl
dec
push
push
fstl
fneni(8087
int3
jp
mov
andl
es
push
lock
dec
mov
pop
mov
cld
jl
jge
dec
data16
js
mov
jle
aad
xchg
push
sbb
ficomps
mov
inc
inc
mov
popa
push
test
loope
fcmove
sub
lcall
cld
outsb
outsl
mov
pop
scas
scas
js
test
jns
out
adc
xchg
mov
repnz
cmpsb
shrb
xlat
shl
inc
mov
jae
ss
push
or
xchg
sub
psubw
xchg
xchg
dec
sbb
adcl
loope
jge
je
mov
shr
inc
mov
jmp
cld
xchg
fcompl
enter
cmp
clc
sbb
sahf
cmp
pop
jno
dec
cltd
in
inc
adc
mov
lahf
push
ss
cld
in
mov
cli
mov
push
cmp
and
nop
or
dec
and
lock
iret
jne
xor
jb
jl
scas
pop
inc
inc
roll
loopne
xchg
adc
xor
mov
loopne
jle
jl
nop
imul
dec
dec
sbb
fwait
inc
dec
cltd
stc
mov
test
stos
test
shrl
add
sbb
test
lcall
xchg
mov
in
xor
mov
mov
enter
nop
xchg
ficoml
cmp
xchg
cmc
leave
or
hlt
imul
in
cmc
push
mov
ds
push
xchg
sbb
mov
push
sar
and
mov
adc
adc
pop
dec
xchg
mov
add
pop
enter
sbb
sahf
filds
mov
dec
mov
sub
lret
mov
ss
push
test
cmp
sbbl
lahf
pop
and
in
mov
fisubl
es
pushf
cmpsl
pop
pop
inc
mov
enter
xchg
jmp
ret
jge
in
mov
push
mov
stc
mov
testb
jns
daa
xchg
or
fnsave
sbb
mov
insb
test
leave
mov
xlat
out
and
enter
test
mov
or
outsl
cs
jnp
enter
mov
mov
ret
data16
loope
scas
push
sbb
push
icebp
mov
fs
repz
mov
mov
cmp
test
dec
rcr
adc
mov
pop
filds
out
jmp
repz
mov
test
mov
int3
addr16
dec
lret
push
xchg
and
xor
insb
pop
rcll
sub
bound
call
arpl
aam
iret
or
ret
jnp
in
comiss
add
mov
test
aaa
cld
in
inc
and
std
test
out
mov
stos
test
dec
push
mov
or
stos
repnz
mov
jecxz
mov
push
arpl
push
sbb
lods
gs
mov
nop
xchg
mov
lock
pop
sub
movsb
sub
xchg
pop
mov
push
sbb
push
in
int3
fs
mov
add
xor
in
or
xchg
outsl
mov
or
sbbb
aad
scas
push
mov
add
movsl
ds
inc
pop
rolb
push
mov
ret
jmp
mov
jecxz
or
xchg
mov
cmp
xor
bound
nop
pmaddwd
popa
lods
lods
test
adc
inc
fildl
aaa
xor
int
push
scas
and
sti
mov
insl
adc
insl
jmp
mov
and
aad
dec
sub
inc
leave
mov
inc
cmp
cmpsb
fldcw
mov
js
aam
jl
or
sbbb
sbb
scas
jnp
cmp
cmpsl
in
cli
pop
adc
sbb
mov
lcall
int3
xchg
sub
jmp
xchg
push
cwtl
jb
std
lahf
sbb
fists
jl
mov
mov
in
pop
push
addl
in
pop
add
and
pusha
out
pop
scas
fiaddl
lock
pusha
sub
sub
les
adc
mov
les
sub
xor
inc
pop
lods
imul
xor
mov
divb
pop
lea
test
jge
pop
xchg
xchg
jmp
jne
xchg
add
xchg
inc
mov
fs
pop
or
repnz
pushf
mov
movsb
lret
outsl
repnz
dec
lock
push
jne
sbb
cmpsl
dec
xchg
dec
cmpsb
mov
ljmp
addr16
daa
loopne
test
sub
lret
pusha
loop
scas
pop
jno
and
push
xchg
aas
pop
fmul
cmc
stc
lods
fs
push
xchg
dec
xchg
adcb
maxps
dec
xchg
mov
xchg
mov
iret
lds
loopne
or
push
jl
or
hlt
dec
loope
clc
push
outsl
iret
popf
sarl
loope
into
mov
sbbb
pop
loop
in
pop
cmp
lods
icebp
dec
loop
and
mov
pop
sarl
add
or
stc
fisubrl
jecxz
iret
adc
cwtl
pmaddwd
loopne
adc
in
fisubs
adc
push
out
fists
pusha
jno
out
sti
mov
adc
xlat
xorb
aad
pop
cli
in
pop
out
in
mov
rol
icebp
sbbl
cmpsb
icebp
push
cmp
inc
into
push
cmpl
fisubrs
and
jle
xor
push
mov
adc
pushf
inc
push
add
test
xchg
add
ljmp
es
sbb
rcr
push
inc
inc
dec
mul
or
stos
das
jbe
pop
dec
fs
adc
jle
cmp
mov
test
gs
pop
rolb
cli
inc
add
xor
fxch
sarl
out
jmp
popf
enter
int
xchg
lret
inc
fists
push
jmp
push
cltd
pop
test
es
xor
and
xchg
call
jmp
stos
mov
lret
dec
mov
int
dec
sbb
iret
imul
iret
lcall
pop
pushf
es
dec
push
out
push
pop
mov
out
mov
jl
sti
and
and
pop
jno
data16
ja
dec
jp
aad
xchg
arpl
sub
or
movsl
or
aas
pop
pop
out
shrb
lret
in
mov
fiadds
sub
add
xor
pop
ds
pop
loop
adc
and
jg
mov
fwait
dec
clc
nop
ud0
jg
add
mov
push
xor
and
iret
inc
jp
addl
jp
or
jns
jnp
scas
or
imul
and
ret
rclb
mov
lock
sub
push
fwait
add
int
fcoms
loope
xor
stos
arpl
cs
in
int
inc
mov
dec
and
rorl
adc
cmp
gs
xchg
popf
rcrl
outsl
orl
or
shrl
movsb
les
aaa
adc
mov
mov
add
dec
movsb
push
or
xchg
into
fiadds
pop
div
idivl
ja
test
xchg
fistps
adc
mov
or
adc
and
jnp
stos
xor
inc
sbbl
int3
adc
out
mov
pusha
js
xor
cmp
pop
aaa
inc
out
mov
xor
mulb
mov
cmpb
in
mov
ds
pop
in
xchg
jp
test
mov
cmp
repnz
jns
mov
mov
negl
mov
cmp
outsl
loop
sbb
cmovo
cmp
movsb
cmp
clc
mov
lds
ret
outsl
scas
in
sub
push
xor
add
dec
enter
outsb
test
or
xchg
inc
fsubl
ret
cmc
cmp
add
push
aas
xchg
xor
imul
pop
mov
insb
mov
fcomip
adc
rcrb
lods
jo
cs
movsl
xor
and
push
shl
loopne
aad
adc
cmpsl
mov
dec
cmpsb
push
inc
icebp
xchg
sahf
cli
and
jns
push
mov
cmc
in
and
mov
adc
xor
int
bound
xchg
ficomps
into
sub
insl
int3
int
add
roll
cmp
and
mov
xchg
insb
jmp
fucomi
sub
mull
jnp
stc
mov
sti
cmc
subb
or
xchg
out
imul
xchg
fisttpl
sahf
jp
xchg
fnstsw
ficomps
lret
pop
mov
push
negb
sbb
dec
je
mov
add
cmp
add
or
ficoms
sbb
push
ja
sbb
nop
jge
lahf
dec
shlb
cmp
xor
xchg
sti
hlt
addr16
fbstp
insb
mov
pop
inc
invd
imul
adc
mov
cs
pop
subl
nop
sbb
dec
fdivrs
icebp
xlat
out
mov
popa
cli
xchg
std
es
sarl
xchg
adc
adc
cmc
xchg
push
xor
jns
mov
jb
lret
mov
outsb
cmp
adc
mov
pop
shrd
roll
movsl
dec
mov
testl
loopne
outsl
les
inc
push
jge
in
inc
xchg
rcrl
add
jno
das
imul
fwait
lock
mov
pop
cltd
mov
test
and
dec
sbb
sbb
jge
pop
mov
xchg
sub
jae
in
cmc
inc
jecxz
inc
stc
aad
aad
mov
pop
ret
lods
rol
outsb
xor
mov
insl
dec
cmp
notl
mov
jb
imul
clc
mov
jbe
test
push
clc
test
xor
and
ds
mov
or
stc
sti
jmp
dec
cld
push
push
mov
mov
shr
ficoms
push
add
push
femms
pop
cli
xchg
daa
imul
push
xor
dec
or
cli
add
dec
inc
dec
push
adcl
inc
xor
cmp
add
mov
cmp
cs
dec
popf
jmp
and
inc
sarl
mov
mov
cmp
mov
les
incb
lret
int3
cmp
lret
cmpsl
std
mov
outsl
fadd
addb
sbb
lea
inc
and
adcl
test
pop
and
sti
xchg
xchg
and
mov
mov
pusha
sbb
pusha
cld
mov
adc
dec
xchg
push
adc
pop
imul
inc
pop
push
dec
lods
lcall
fcoml
iret
jl
sbb
xchg
adc
cmp
xlat
in
or
fsts
movsl
dec
imul
sbb
icebp
clc
out
mov
adc
out
cli
fisttpll
inc
sbb
test
sbb
in
pop
cmpb
ds
add
shlb
jl
jecxz
and
mov
dec
inc
or
mov
es
inc
mov
mov
jno
xor
push
sub
ja
add
scas
call
movsl
out
inc
push
jno
pop
cmp
rcll
cmpsl
jns
or
xchg
mov
mov
or
adc
fsubrs
mov
push
icebp
insl
push
gs
sub
push
mov
jbe
shlb
mov
gs
add
imul
cld
enter
lods
lcall
jne
fildll
xchg
dec
mov
fninit
mov
loope
xchg
cmpsb
stc
clc
dec
xchg
int3
jge
xchg
xor
aas
aaa
lods
test
xchg
ja
add
cmp
push
xor
aad
and
jg
popa
jl,pn
gs
mov
mov
or
daa
scas
mov
xchg
ret
scas
orl
jo
arpl
ret
dec
inc
xor
mov
pop
das
pop
test
dec
mov
adc
cmp
push
scas
cmpsl
dec
jmp
jae
shll
jg
clc
cli
or
pusha
das
mov
jnp
arpl
rcr
mov
pop
cmp
insl
mov
rcll
test
mov
inc
xchg
ds
pop
mov
push
loopne
xor
mov
jecxz
add
icebp
sub
iret
push
rorb
es
jg
lret
xchg
push
mov
jo
lds
sub
push
call
inc
ficomps
aas
cltd
ffree
hlt
xchg
mov
loopne
sub
push
mov
rol
loopne
adc
or
ss
sub
sbbl
and
jmp
push
es
inc
jo
jge
and
insl
xor
repnz
out
jno
and
jl
mov
scas
dec
lods
sbb
lsl
jns
jecxz
lods
lods
inc
cmc
add
pop
icebp
inc
test
ret
inc
es
sarl
push
sub
cmp
jp
pop
clc
cmp
ret
xor
fildl
mov
jle
push
decb
stos
testb
repnz
loope
xchg
int
or
cmpsb
dec
inc
pop
cltd
insl
fwait
outsb
jp
jecxz
jle
repnz
fnop
sub
popf
or
lret
sarl
fcomp
push
into
jns
fidivrs
call
pusha
jg
or
scas
jo
push
jo
aad
je
aad
mov
test
xchg
fsubrp
mov
loopne
movsb
ss
out
or
orl
push
and
lret
jo
shll
lods
dec
ss
icebp
cmpsb
push
xor
xchg
pop
ret
repz
sbb
dec
or
jae
push
outsl
ljmp
sbbb
outsb
sub
arpl
and
pop
iret
std
loop
xor
jo
in
lret
pop
imul
aad
test
adc
xchg
xor
pop
dec
xchg
les
loope
add
inc
jae
clc
mov
mov
rcrl
outsl
push
xchg
call
cs
arpl
jg
nop
jo
negb
adc
sar
push
mov
and
jmp
cmp
lahf
outsb
outsl
sub
out
inc
int3
dec
pusha
xchg
sti
or
or
add
ljmp
lds
int
fwait
shlb
push
sahf
mov
sub
mov
arpl
adc
and
or
xor
jns
adcb
adc
pop
dec
jmp
jbe
or
test
mov
int3
mov
xchg
test
orl
andl
test
xor
in
inc
clc
add
icebp
and
imul
sub
pop
out
rcll
mov
jae
je
addb
stos
lret
bound
loopne
hlt
cwtl
pop
pop
movsl
stc
inc
or
add
inc
lock
imul
jmp
dec
ljmp
xchg
aaa
imul
daa
sub
sub
jb
xor
jae
push
mov
or
test
shl
push
stos
adc
jno
inc
xor
in
cmc
sub
push
test
je
lret
add
cmp
addr16
cld
icebp
or
add
jp
pop
idivl
movzbl
in
mov
jmp
int
loopne
insl
jmp
xchg
nop
lret
mov
nop
fcomp
pop
pop
iret
push
outsl
mov
jnp
mov
in
sub
xor
mov
jg
dec
push
sbb
mov
int
mov
scas
enter
incb
lods
cmp
insb
jg
dec
sarl
or
bound
mov
test
aas
clc
inc
push
fmull
cmp
pop
mov
jle
aad
push
mov
jnp
xor
mov
add
fbld
add
popa
xchg
psubq
repz
cld
fistpl
push
xchg
mov
sahf
repz
stc
cmp
pop
xlat
lods
mov
mov
adc
lahf
aad
sub
push
xor
lahf
daa
add
loope
sbb
or
dec
iret
jns
cld
jbe
imulb
jg
or
aaa
cmp
ds
lea
mov
adc
pusha
aam
jg
fadd
jns
mov
test
pop
cwtl
xor
in
aam
shll
sahf
push
inc
aaa
cmpsl
rcr
test
mov
lock
pop
cmp
pop
jl
lret
pop
pushl
leave
icebp
outsl
inc
push
fdivrl
ret
jle
push
jb
cmp
fdiv
pop
push
dec
ret
dec
test
ds
jle
cmc
pusha
idivb
xor
shrb
push
js
rclb
push
mov
fildll
aad
ret
jle
mov
inc
inc
mov
or
mov
jecxz
lods
fistl
bound
sbb
in
mov
push
in
and
and
and
ret
test
movsl
icebp
sbb
inc
push
dec
lods
mov
into
outsl
or
imul
lcall
jg
mov
mov
mov
ret
outsb
mov
repz
sbb
hlt
dec
mov
outsl
push
sbb
cmp
call
mov
das
xorb
mov
aad
jo
mov
lcall
sahf
mov
add
push
lods
out
or
movsb
dec
and
in
push
int3
test
out
stos
lods
les
push
fmuls
sbb
inc
ss
ljmp
dec
sbb
seta
xchg
or
mov
in
sbb
mov
or
xchg
ret
inc
xchg
dec
cmp
add
aad
out
or
adc
cli
cmpb
cmp
pop
mov
mov
sbb
outsl
mov
iret
cli
gs
mov
pop
test
and
xchg
mov
and
fxch
xchg
inc
cld
js
dec
fldenv
fsts
std
sub
notl
mov
pop
insb
aas
ljmp
bound
pop
dec
rcrl
lods
jp
test
add
mov
outsl
aas
movsb
mov
ss
cmp
dec
dec
sahf
cmp
fidivl
fisubrs
inc
fnsave
test
push
mov
ds
mov
cmp
sub
ds
xor
out
adc
pop
mov
lea
sti
and
mov
test
inc
sar
pop
bound
shrb
test
test
xchg
popa
ret
loope
std
adc
je
cmp
xor
es
jo
add
push
jg
sbb
movsb
xlat
sbb
outsb
sub
xlat
stos
clc
adc
dec
pop
imul
movsl
ret
psubw
xor
gs
out
inc
dec
adc
fistpll
push
dec
lret
lret
sbb
and
sti
scas
fs
pushf
mov
loope
adc
sti
push
mov
push
arpl
test
stos
and
adcl
push
push
sub
xchg
sarl
and
mov
xchg
sub
cltd
les
les
fisubrs
or
rcrb
and
movsb
loop
adc
adc
dec
fbstp
mov
int3
or
jne
repz
data16
repz
shrb
aaa
sub
icebp
lds
stos
jns
sbb
cmp
bound
push
xchg
sub
das
sub
sub
jnp
mov
call
or
out
xchg
jp
insb
lret
subl
cmp
dec
jb
ret
mov
or
mov
bound
push
test
subl
sti
push
inc
jbe
hlt
stos
repnz
mov
push
xor
push
adc
push
mov
in
sahf
in
mull
call
xlat
or
jl
xor
pop
mov
repnz
js
push
clc
ljmp
xchg
data16
pop
pop
ss
cmpsb
hlt
sbb
test
pop
xor
cmpl
fcoml
push
sub
ret
mov
addr16
int
imul
mov
insb
ret
sub
mov
sbb
shrb
push
addl
js
subl
or
ret
mov
sbb
fists
mov
mov
add
or
sub
xor
and
push
lods
and
icebp
lahf
fcoms
adc
xchg
jecxz
inc
testb
push
sbb
call
iret
andl
cli
aas
cltd
mov
lods
mov
rorb
xchg
aaa
mov
jg
cmpsl
std
push
daa
sarl
xchg
test
call
lret
ret
lods
and
sbbl
int3
jne
add
mov
lods
mov
leave
xor
negl
out
movsb
add
mov
mov
inc
into
mov
out
in
pop
cmp
jno
xor
pop
cmp
movb
sbb
pop
fmul
ds
adc
xorl
lret
push
pop
or
imul
popf
mov
push
leave
ret
jns
sbbl
mov
or
fisttps
mov
push
mov
fcompl
sub
xchg
repnz
outsl
stos
ljmp
cltd
and
xchg
addb
mov
test
sbb
bt
inc
jg
xor
mov
sbbb
out
lea
movsl
lods
adc
lret
mov
add
sarb
loop
leave
outsb
sub
insb
cmp
rclb
mov
jno
test
mov
xchg
int
aad
dec
mov
add
inc
adc
mov
mov
push
and
mov
and
lret
inc
sub
imul
loopne
inc
das
jmp
pusha
clc
rcrl
push
pop
fildl
insb
pop
or
push
mov
push
push
mov
mov
into
jecxz
push
xor
inc
jmp
incl
sbb
xchg
adc
bound
scas
insb
outsl
mov
jecxz
push
es
pop
inc
aaa
jge
sub
or
push
xor
iret
sar
dec
pop
push
mov
das
mov
xchg
or
fnsave
cltd
movsl
sbb
mov
push
notb
imul
les
jne
cmp
out
fdiv
ljmp
push
test
jae
jb
sbb
js
jbe
mov
xor
aaa
in
xchg
lock
add
dec
jmp
fisubrl
mov
fimull
xor
shrb
mov
pop
fwait
xchg
test
imul
dec
push
jp
xchg
imul
pop
les
jmp
fdivr
push
int
hlt
pop
gs
dec
adc
loope
xchg
inc
xor
cmpl
mov
stos
leave
aaa
ja
mov
repz
int
inc
and
push
stos
mov
mov
lds
inc
xchg
jnp
pop
in
loopne
add
push
jg
pop
mov
sub
sbb
shrl
sub
lcall
enter
mov
mov
test
shlb
mov
aaa
lock
out
mov
dec
lret
fsubrl
jp
addr16
sbb
and
jl
lods
rep
inc
stos
jle
adc
stos
pop
hlt
dec
mov
sbb
mov
loope
mov
roll
push
cmp
push
pop
adc
push
hlt
jecxz
divb
insb
mov
push
add
mov
jno
xor
push
jge
stc
sbb
mov
push
or
iret
add
xor
add
lret
rolb
xor
jb
and
test
icebp
mov
fs
inc
aaa
insl
or
push
mov
jno
sbb
rcr
rcrl
push
dec
mov
stos
push
cmp
mov
test
std
cmp
rorl
ret
lods
scas
mov
cltd
xor
push
das
jmp
mov
stc
pop
pop
add
iret
in
mov
cmp
fmulp
adcb
add
imul
mov
int
jl
int
mov
pushf
mov
cmp
outsl
xchg
xchg
xchg
ljmp
push
dec
mov
jl
mov
mov
call
insb
mov
mov
div
pop
pushf
or
and
fdivs
mov
adc
xor
adc
hlt
imul
movlps
ret
or
add
dec
jae
mov
xor
test
dec
fimuls
push
ja
pop
inc
into
jbe
cld
add
xchg
aam
push
mov
arpl
mov
addr16
loope
mov
aad
and
sub
inc
inc
decl
inc
stos
mov
cli
addr16
pop
push
and
xchg
data16
pop
dec
sub
sahf
and
mov
adc
jbe
nop
fninit
mov
cmp
xor
outsl
pop
stos
repz
mov
mov
outsb
inc
imulb
lods
ja
out
mov
xor
mov
mov
inc
adc
dec
lods
or
or
stos
iret
fsubs
mov
jmp
psubd
cmp
add
and
jbe
or
mov
push
lock
sbb
xlat
mov
popf
mov
popa
pop
call
jle
add
xchg
in
xor
sbb
pop
cs
daa
mov
add
std
jb
sub
ficoml
or
nop
fs
loope
cmp
aaa
sbb
pop
add
xchg
xchg
mov
inc
add
sub
sbb
cld
data16
ret
push
dec
filds
adc
pop
movsb
outsb
cltd
test
xchg
rclb
test
push
aas
adc
in
iret
mov
addl
aad
jb
sbb
lret
stos
out
cmp
addb
inc
outsl
push
inc
sub
and
cmp
xchg
lcall
rcrb
loopne
scas
jae
arpl
loope
mov
insb
xchg
mov
aas
jo
scas
jb
or
push
xchg
push
and
mov
stos
dec
pushf
sbb
mov
aam
jno
xchg
jb
sahf
jb
jmp
mov
ret
shll
out
push
cmc
ds
jne
xor
pop
ret
imul
imul
dec
bound
and
mov
sub
dec
repnz
push
xchg
mov
mov
repnz
push
xor
repnz
lods
outsl
cli
in
clc
lcall
scas
xor
jl
xor
fwait
xchg
push
in
imul
mov
daa
xchg
stc
iret
icebp
je
icebp
mov
mov
mov
sbb
add
rorl
mov
ret
xlat
jmp
addr16
sbb
cmp
lods
and
hlt
mov
add
inc
and
push
cwtl
jo
in
fildll
pop
sbb
dec
xchg
mov
add
scas
xor
mov
adc
push
add
jmp
and
cli
xchg
xorb
sbb
mov
sarl
cmp
xchg
xchg
loopne
sub
lea
dec
out
cmp
jns
mov
fstl
xchg
lea
movsl
xchg
mov
add
mov
and
addr16
dec
shll
sub
ficoml
pop
out
in
mov
ljmp
lret
rol
mov
mov
out
xchg
fisubl
mov
jecxz
loop
fildll
xor
test
jnp
xlat
clc
cmp
sbb
into
stos
push
nop
push
inc
cmpsb
call
cmp
nop
inc
lcall
sub
cs
and
stc
dec
shlb
inc
sub
pop
mov
xchg
mov
bound
mov
jecxz
inc
das
mov
dec
cmp
lahf
pop
pop
lret
xchg
cmp
sbb
mov
pushf
sbb
lret
mov
cld
orb
cmp
cwtl
dec
stos
mov
push
ret
pop
dec
scas
imul
in
and
xor
frstor
xchg
mov
jl
jg
mov
push
and
xor
cld
or
mov
imulb
aam
jb
cltd
mov
pop
adc
aaa
ljmp
mov
add
cmp
sbb
cwtl
mov
movsl
je
sub
bound
sar
push
mov
mov
loop
shll
jo
xchg
test
orb
iret
test
push
push
mov
std
pusha
add
fabs
data16
js
xor
aad
or
xorl
hlt
fdivs
and
and
mov
jl
in
lahf
sub
mov
xchg
inc
pop
test
add
sub
rcrl
cmp
stos
and
bound
daa
or
xchg
cli
icebp
test
cld
push
or
shl
dec
jb
mov
pusha
lods
jl
adc
mov
imul
xchg
push
push
pop
loopne
je
jle
std
inc
inc
dec
lock
cmp
insb
lock
out
cmp
xchg
push
push
xchg
jno
bnd
out
jge
int3
push
xchg
sub
jnp
out
sbb
add
mov
ret
nop
adc
mov
add
jne
adc
test
or
hlt
out
sarl
push
cmp
jae
mov
mov
notl
inc
and
orb
fmulp
cmp
sub
mov
jb
sbb
jecxz
push
aam
sub
cmp
fcoml
insb
push
aaa
arpl
test
mov
scas
movsb
das
andl
imul
pop
scas
fcomps
repz
dec
or
push
xchg
or
jno
inc
cwtl
cmp
arpl
adc
xchg
out
mov
push
inc
aad
imul
jmp
push
adc
inc
sub
fmull
sbb
lret
xor
jae
mov
pop
add
aaa
dec
loopne
push
outsb
ret
mov
fists
jmp
jnp
dec
or
ja
xor
fbstp
ljmp
xchg
adc
aaa
dec
mov
stos
jp
lock
xchg
cwtl
xchg
jne
adc
fwait
push
loopne
je
sahf
int3
xchg
sub
or
jb
loop
push
push
xor
push
mov
jg
addr16
mov
mov
lods
pop
lcall
je
and
adc
pop
nop
lods
enter
test
fnstcw
aad
mov
xor
out
and
pop
stos
ja
les
mov
fadds
cmp
and
addr16
pop
sub
sub
subb
pop
mov
jo
es
fidivs
into
dec
lods
in
pop
and
out
push
cmpsl
scas
mov
fwait
inc
cltd
add
mov
mov
test
jo
rclb
rcll
sahf
or
adc
xlat
hlt
popf
pop
out
lock
popa
out
es
lds
and
clc
cmc
push
addr16
mov
pop
fisubl
inc
add
add
jmp
lods
mov
dec
fdivl
sbb
inc
sub
xlat
sbb
xchg
das
outsl
mov
pop
add
inc
mull
mov
push
mov
mov
roll
ds
popf
repnz
aam
xchg
and
cmpsb
das
mov
add
cmp
and
icebp
cmpsl
mov
fsts
pop
or
adc
cmp
std
mov
rcrb
xchg
and
into
dec
add
add
jae
mov
orl
aad
sarl
mov
jb
lods
int
les
test
push
out
aaa
out
shlb
push
mov
fnsetpm(287
into
daa
add
fnsave
add
orb
aad
and
jmp
stc
ret
ror
lahf
or
in
cmc
pop
mov
cmc
pop
fwait
orb
mov
fwait
add
cmp
loope
jge
xchg
pop
mov
or
mov
fdivrl
cs
jo
xor
mov
mov
vunpckhps
cltd
push
add
outsl
cli
sbb
inc
xor
and
mov
imulb
add
movsb
jne
mov
loopne
or
and
sahf
xchg
add
xchg
cltd
roll
mov
add
rorl
push
stc
sub
in
pop
sbb
jbe
xchg
xchg
pop
mov
aad
cltd
test
mov
sub
rcrl
dec
sub
and
adc
cmp
jg
pop
pop
mov
xor
sbb
movb
es
add
jp
call
outsl
adc
pop
mov
ja
xlat
ja
adc
sbb
pop
xchg
jbe
or
dec
arpl
mov
incl
push
int3
xor
cmp
cmpl
outsl
cwtl
imul
xor
call
and
push
imulb
outsl
mov
es
push
lds
inc
sub
jp
pushf
lock
movsb
add
jg
xchg
mov
cli
jecxz
pop
lock
rclb
dec
inc
dec
out
inc
pop
inc
mov
leave
push
adc
outsl
mov
dec
in
mov
bound
mov
pop
jnp
jmp
inc
pushf
xchg
xchg
dec
les
aad
lock
sarl
outsb
mov
xor
cli
inc
loopne
or
adc
outsl
shrl
mov
cs
mov
push
cmpsb
sub
fwait
pop
cmc
cs
mov
cmpsb
xchg
adc
jno
push
xor
sub
fdivrl
dec
lea
fwait
mov
aas
jl
in
fcomip
stc
xchg
in
or
push
testl
mov
jmp
mov
pop
lahf
inc
outsb
dec
mov
ret
sbb
or
or
mov
push
push
das
push
push
arpl
aam
jg
dec
jbe
push
lds
leave
jecxz
cs
call
pop
enter
add
dec
loope
lahf
sub
fsts
iret
xor
sub
inc
jmp
add
pop
test
imul
xchg
int
fstps
aas
and
cmp
bound
jns
push
pusha
add
mov
fs
xor
cmpsl
ficompl
push
inc
loop
lahf
pop
enter
push
mov
mov
xorl
push
into
cwtl
ret
into
fildl
or
movb
int
jecxz
push
push
jg
inc
dec
jbe
jl
cmp
push
sti
mov
fsubp
pop
icebp
push
xchg
mov
dec
js
scas
mov
rcrb
mov
in
adc
out
cmp
or
sub
sub
sarl
jmp
out
out
inc
insl
dec
and
push
dec
jl
je
lods
push
sbb
int
popf
mov
xor
sar
notb
jne
stc
adc
stos
sub
dec
in
rorb
clc
sub
push
movsb
rcrl
test
cmp
push
mov
pop
pushaw
mov
xchg
xchg
scas
push
and
subb
gs
fildl
scas
or
lock
or
push
dec
ret
shrb
bound
outsb
lahf
sbb
in
cmp
pushf
out
movsb
negb
cli
push
pop
outsl
mov
es
inc
mov
testl
xchg
repz
xchg
sbb
pushf
push
and
ja
push
add
scas
in
xor
cmp
mov
xchg
adc
xchg
out
jmp
adc
dec
es
pop
into
pop
sbb
push
ret
cld
in
in
bound
pop
mov
js
mov
movsb
push
lcall
jb
inc
fwait
cs
and
shll
mov
pop
sbb
stc
loope
fisttps
roll
sub
mov
push
or
dec
and
cmp
popa
or
rclb
ret
cltd
repnz
mov
test
sbb
mov
sbb
in
mov
xchg
inc
pop
jne
leave
das
clc
lret
dec
loopne
pop
mov
push
push
jp
push
imul
les
ret
popa
cmp
cmp
mov
xor
jmp
mov
cmpsb
ret
mov
ret
cwtl
push
inc
pop
mov
lds
lods
lods
sub
pusha
es
push
addl
xlat
add
ror
jle
ret
add
adc
clc
inc
divb
fwait
add
xchg
lds
mov
loope
cmpsl
dec
sbb
jne
mov
adc
mov
sbb
mov
bound
push
or
jo
push
fwait
xor
jmp
imul
sub
lods
das
cld
push
lds
lods
or
xchg
jo
inc
push
jmp
outsb
pop
dec
pop
outsl
add
dec
movhps
test
inc
nop
gs
sub
and
shll
jmp
aam
icebp
cmp
sub
mov
dec
lds
push
fnstenv
out
cmp
rclb
add
adc
jge
xor
das
aad
mov
stc
in
inc
pop
pop
xchg
pop
pop
dec
add
loope
push
sub
std
daa
cmp
test
ds
dec
ss
enter
repz
iret
push
mov
xchg
add
mov
testl
mov
ss
push
inc
popf
xchg
add
or
fabs
xor
jo
cmp
in
pop
out
xchg
inc
pop
ss
jle
mov
jno
cli
jne
outsb
test
idiv
nop
adc
mov
or
mov
les
inc
xchg
mov
cmpsb
std
cmp
mov
ljmp
out
jbe
jge
shll
shlb
lods
add
popa
loopne
imul
or
mov
xchg
bound
add
popf
adc
popf
push
loop
dec
sub
adc
add
adc
mov
sbb
sbb
add
add
es
sub
and
fwait
and
or
test
mov
mov
push
sbb
cltd
xchg
dec
test
sbb
call
int3
stos
jns
cld
mov
lret
idiv
sub
icebp
incl
or
jmp
leave
hlt
mov
pop
xchg
orl
ljmp
ljmp
movsl
lahf
fwait
insl
mov
mov
loopne
push
push
xchg
push
sahf
aas
add
pop
mov
outsb
leave
mov
push
sbb
cltd
cmp
xchg
cmp
int
push
xchg
cs
mov
pop
stc
outsl
dec
xor
push
mov
push
or
fisubs
mov
pop
mov
cmpl
jbe
push
xor
mov
cwtl
xorb
pop
jb
dec
push
lahf
or
inc
mov
dec
leave
add
mov
fidivs
push
jge
mulb
jge
lcall
add
mov
jnp
cmp
jo
jmp
and
iret
adc
aam
or
popa
hlt
mov
pop
fstpt
ret
stc
in
push
dec
jbe
pop
popl
jmp
pop
daa
adc
jo
setge
xchg
shll
jno
jge
jbe
and
out
pop
xor
mov
mov
and
adc
clc
inc
movsl
loope,pn
mov
nop
push
mov
dec
cli
lds
popa
lods
ror
std
inc
movsb
ds
and
or
iret
and
sub
sbb
stos
add
arpl
dec
xchg
cmpsb
out
mov
mov
push
xor
pop
cmc
leave
ss
cs
and
movsb
mov
jnp
in
fbld
mov
repnz
sbb
repnz
add
aam
push
push
int3
cli
outsb
idivl
cld
rorl
mov
dec
arpl
mov
xchg
mov
add
test
inc
push
lahf
test
lcall
stos
out
xor
sub
cmp
sti
bound
pop
push
adc
pop
js
int
scas
data16
jnp
push
mov
imul
lea
stos
divl
mov
fmulp
push
inc
insl
jecxz
mov
xchg
int3
xchg
cmp
pop
rorb
cmpsb
mov
out
pop
mov
jl
mov
shll
mov
push
es
into
push
in
inc
addr16
shrl
fwait
cwtl
jb
cmp
sbb
outsb
sahf
loopne
jge
outsb
push
xchg
xchg
lret
sub
push
and
imul
push
test
cmpsb
xlat
cld
or
cld
fs
mov
pop
push
xlat
sub
sti
jbe
xor
pop
dec
xor
shll
pop
xchg
adc
mov
in
mov
mov
push
shr
into
jae
or
or
xor
adc
xchg
pop
pop
mulb
lea
jae
and
sti
test
jg
mov
inc
aas
cmp
mov
push
and
stos
adc
push
xchg
jmp
roll
gs
lock
jle
test
mov
and
pop
adc
arpl
jno
jecxz
stos
adc
push
mov
outsb
sub
adc
aad
jbe
testl
add
sbb
out
ja
cmpsl
cmpl
icebp
xchg
push
por
sub
or
mov
hlt
sbb
jae
cmp
jae
and
adc
xchg
data16
inc
inc
loopne,pn
ja
dec
cs
lods
es
push
jns
mov
loop
or
push
arpl
dec
xorb
adc
idiv
arpl
xor
pusha
cmp
sub
lods
inc
add
xorb
cmp
mov
cs
jae
cmp
fsubr
pop
pop
lahf
out
push
mov
call
xor
shll
outsl
repz
das
mov
mov
fs
orb
push
cmp
movsb
nop
cmovb
adc
out
pop
pop
sub
or
enter
inc
fnstenv
int
jl
insl
or
movsb
fcmovnbe
lea
jbe
js
xor
mov
and
sbb
adc
pop
inc
dec
dec
out
fidivl
mov
sub
mov
sbb
jnp
test
and
insl
in
lahf
loope
dec
pushf
xchg
int3
mov
push
cmp
sahf
xchg
test
aaa
pop
sarb
xchg
popa
popf
imul
cltd
cld
sub
arpl
mov
dec
xlat
aaa
sub
dec
jo
sbb
pop
ret
rol
mov
jb
aaa
lock
lret
adc
cwtl
sbb
pop
popf
jae
les
call
popf
sub
push
pop
adc
sbb
dec
or
in
xor
jecxz
pop
lea
cmp
pop
stos
faddp
inc
dec
and
cli
mov
cmpl
jmp
subl
push
data16
dec
sbb
jecxz
and
sub
scas
mull
and
mov
pop
testb
dec
nop
les
das
orl
push
fstpt
rcrl
cltd
daa
or
dec
shll
lahf
cmp
and
lock
arpl
lds
pop
xor
mov
in
jae
adc
or
dec
pop
test
pop
pop
ja
cmova
les
mov
sbb
inc
lods
in
loopne
jo
lret
lods
mov
sbb
popf
push
cld
inc
add
push
xchg
popa
add
test
iret
fdivl
imul
ja
jno
fstpt
loopne
pop
add
cli
pop
cmpsb
jl
xchg
jmp
add
cmp
push
es
hlt
and
sbb
pop
xchg
inc
mov
xor
out
scas
pop
jge
shlb
gs
push
fcoms
mov
push
fdivrs
cmpsb
mov
sub
ljmp
lcall
jno
je
xchg
in
xchg
bound
hlt
call
clc
sbb
repz
or
aam
add
gs
pushf
ds
test
int3
lea
sub
daa
and
cmp
out
ja
cmp
xchg
jecxz
dec
or
add
loop
test
mov
aam
je
ret
jne
xor
lods
mov
hlt
xchg
and
adc
in
stos
xor
loopne
push
notl
jo
testb
xchg
inc
push
adc
dec
xor
fs
inc
cs
nop
inc
aam
jb
shll
or
lret
icebp
cmp
fldenv
es
insb
jnp
add
mov
pop
inc
test
mov
pop
add
jge
pand
mov
cli
and
dec
dec
dec
aam
stos
stos
pop
stos
xchg
and
adc
movsb
or
pushf
ss
loop
mov
call
fbstp
jne
sbb
jecxz
test
jp
fnsave
inc
jmp
pop
push
and
pushf
aas
inc
ret
fsubr
jecxz,pn
insb
jl
ret
mov
dec
neg
push
ret
xchg
adc
les
cmp
out
arpl
pop
inc
imul
add
jbe
shrb
in
clc
dec
daa
mov
and
xlat
std
dec
fwait
imul
or
imul
xchg
test
mov
imulb
pop
sbb
cmp
inc
jne
dec
lahf
addl
sbb
xlat
rorb
mov
mov
inc
negb
and
dec
cmp
leave
aas
es
test
mov
movsb
jb
push
outsl
adc
popa
cmp
or
add
jmp
loop
sbb
out
imul
test
sbb
mov
sbb
jae
pushf
mov
hlt
je
pop
push
pop
mov
in
and
hlt
xlat
lock
movsb
sbb
xor
inc
sbb
mov
mov
mov
pop
sub
jbe
pop
rcrb
int
adc
mov
movsl
test
and
mov
cmp
mov
fistpll
xorb
mov
sahf
out
movsl
loopne
sub
loope
imul
cmpb
cmp
jge
movsl
fwait
stos
ss
xor
push
mov
push
test
gs
push
sbb
js
ljmp
lods
adc
fistpl
ror
cmp
loop
fdivrs
imul
or
insb
sbb
pop
ret
pop
sub
sbb
int3
push
or
shr
inc
sarl
inc
lcall
ret
shl
mov
outsl
xor
addl
xchg
jo
xchg
imul
ret
mov
xchg
or
mov
dec
pop
mov
adc
sub
inc
aas
mov
int3
xchg
or
mov
cmp
xlat
mov
dec
inc
fidivs
stos
sar
or
stos
notb
push
xchg
xor
fnstenv
push
sbb
push
je
cltd
fimuls
xchg
sub
sbb
inc
push
push
pop
bnd
outsb
xchg
out
stos
wbinvd
xchg
dec
fbld
cmpsb
js
lret
pop
das
cmp
sbb
dec
add
xchg
and
out
repnz
nop
aas
hlt
jo
pop
in
push
cmpsl
pop
mov
sarb
cmp
ss
jmp
dec
sub
icebp
loope
fdivs
or
jg
push
dec
mov
int
mov
xorb
jg
fnsave
mov
mov
or
pushf
aas
jmp
cltd
add
mov
mov
dec
pop
jmp
aaa
out
jmp
sbb
out
jb
mov
or
jb
push
loope
sub
adc
pushl
hlt
mov
inc
mov
shl
sub
cli
dec
dec
pop
cmp
cmp
lock
enter
ja
mov
in
mov
std
repz
dec
xchg
xorl
stos
jmp
cmp
pushf
inc
in
pop
pop
or
add
aam
lahf
sarb
xor
daa
sti
stc
push
sbb
push
adc
call
outsb
dec
xor
sub
lret
xor
dec
mov
sahf
popa
loope
popf
das
inc
cmp
subb
in
inc
mov
pop
shlb
sub
stc
rorb
es
lods
imul
push
xchg
adc
inc
pusha
test
sub
or
pop
cwtl
js
xlat
and
not
cmpsl
sub
push
sti
ret
out
sbb
add
in
iret
loope
outsl
mov
ja
lods
loopne
stos
pop
pop
dec
in
jne
and
icebp
rcrb
imull
arpl
shl
sbb
pop
pusha
out
cld
stos
scas
lds
xor
mov
out
mov
push
loop
push
pop
adc
adc
xchg
xchg
pop
jmp
loopne
fdivr
subl
adc
inc
test
add
cmp
mov
bound
mov
scas
mov
call
bound
decb
mov
jb
mov
arpl
into
xchg
jo
test
lods
xchg
cld
jo
pop
push
adc
add
mov
sbb
fs
sub
or
pop
scas
mov
bound
sbb
push
daa
push
sub
mov
je
pushf
mov
push
push
adc
mov
aas
stos
push
lods
xor
pushf
fldt
sbb
mov
inc
ss
jmp
rol
je
jae
aad
ret
stos
adc
push
mov
and
jb
les
mov
das
add
aad
sub
popf
out
popf
pop
fs
std
jne
inc
or
sbb
enter
sub
lahf
fdivrs
insb
inc
ljmp
and
int3
push
cwtl
rcl
add
xor
jae
jns
lods
hlt
fwait
mov
stos
js
jge
ds
int
les
inc
jge
ss
add
cli
lahf
gs
inc
fsubr
ds
sahf
or
cmpsl
mov
cmp
scas
push
es
insl
shlb
inc
xchg
in
sbb
dec
pusha
inc
adc
jmp
pop
pop
xorl
arpl
dec
inc
fcoml
je
scas
outsb
mov
push
cli
inc
mov
pop
sbb
lahf
out
int
adc
adc
cmpb
fwait
shrb
movsb
add
push
lcall
ja
mov
enter
and
rcll
xor
mov
pop
sbb
in
mov
sub
adc
or
fwait
pushf
rclb
shrb
inc
in
rclb
dec
pop
push
addb
mov
rcrl
dec
mov
xchg
sarb
lahf
cmp
sub
or
aaa
mov
adc
rclb
sub
fldcw
mov
pop
dec
jmp
fisubrs
xchg
adcb
sub
dec
lods
ja
sub
aad
cmp
inc
pop
xchg
test
mov
test
pop
inc
inc
pop
mov
mov
pop
pop
xchg
or
cmp
adc
clc
call
xchg
bound
fcoms
cmpb
pop
int
addl
sub
mov
xor
mov
push
pop
in
dec
or
outsb
ret
lahf
pop
add
call
shrb
in
ds
cmp
and
cwtl
pusha
cs
fidivl
pop
push
repz
ret
clc
daa
inc
or
mov
rclb
dec
mov
aaa
cli
jbe
sub
cld
or
push
sub
stos
hlt
pop
mov
pop
fwait
stos
jno
mov
test
pop
xchg
scas
push
fs
sub
or
imul
divl
push
xor
mov
add
nop
jno
mov
fcmovnbe
ret
add
lret
mov
scas
cmpsl
xchg
dec
mov
pop
and
pop
mov
scas
xchg
out
ljmp
scas
adc
or
scas
pop
enter
push
repnz
mov
in
push
adc
or
sbb
xor
jmp
js
xchg
push
mov
aam
inc
xchg
cmpl
push
xchg
mov
xor
lret
dec
lds
jno
and
jmp
sahf
pop
aad
add
and
adc
pop
mov
add
mov
and
outsb
cmp
daa
test
lods
pop
addr16
cmp
adc
inc
xor
stos
icebp
mov
sub
shlb
in
add
or
xor
cmpsl
push
xchg
scas
adc
pop
cmp
sub
or
mov
int
cltd
js
ret
adc
andl
cltd
mov
stc
mov
mov
movsl
add
xor
sub
gs
add
ljmp
pop
test
ret
mov
xchg
jge
jo
jae
jmp
sahf
jbe
fwait
cwtl
sbb
xchg
or
clc
sub
xchg
out
push
dec
mov
hlt
aad
inc
imul
adcb
or
clc
sbb
in
jge
stc
daa
ror
xchg
outsl
imul
mov
bound
orb
dec
ljmp
inc
je
mov
ljmp
and
pushf
sarb
mov
out
fs
push
in
or
sub
sbb
xor
ss
add
or
sarl
adc
pop
push
and
mov
or
adc
dec
xchg
shl
inc
or
pop
popf
arpl
imul
and
jl
add
jmp
jecxz
or
add
push
add
mov
xor
subl
jno
cmpsl
adc
push
sti
mov
inc
jb
add
clc
or
sub
sbb
call
test
int3
inc
dec
adc
loop
lock
xor
in
xor
push
adc
das
ret
cmp
bound
test
daa
dec
scas
sbb
fwait
int
aaa
xor
adc
cmp
iret
sub
outsl
std
push
pop
loopne
cvtpi2ps
mov
jmp
in
mov
mov
data16
scas
aaa
test
lret
pop
mov
push
inc
push
or
rorb
jp
movsl
cld
sbb
push
not
lcall
jmp
in
fildl
push
xchg
test
inc
stos
mov
dec
inc
xchg
cmp
push
sub
scas
pop
sub
jo
loope
pop
fmuls
push
popa
insl
outsb
ret
es
push
cmp
adc
mov
sub
loope
or
scas
notb
cmp
ret
test
pushf
fsubrl
jge
hlt
xchg
push
xchg
jecxz
inc
mov
push
les
push
push
ljmp
enter
push
inc
jl
fs
fscale
rcll
sub
add
imul
cmc
sub
push
int
rcr
jnp
push
fildl
out
xrelease
adc
or
ss
test
idiv
repz
std
dec
pop
cld
ds
loop
sub
xchg
push
sbbl
icebp
jmp
lahf
stos
dec
xor
push
repnz
lcall
es
xchg
mov
je
stc
andb
dec
imul
enter
mov
fs
xor
aas
pop
fwait
mov
stos
inc
or
pop
pop
jbe
in
pop
mov
mov
sub
mov
xchg
and
ss
push
sbb
adc
aam
insl
scas
mov
sub
icebp
jno
adc
mov
xor
cmp
repnz
adc
cmp
pop
or
and
insb
scas
fisubl
pop
mov
sub
cmp
pop
sbb
jne
dec
jbe
sub
js
cmc
lea
mov
pop
ss
sbb
inc
mov
inc
mov
xchg
rol
dec
inc
rcr
sbb
aaa
hlt
lods
outsl
sub
push
js
mov
sbb
fscale
insl
pop
int
ror
cwtl
lods
push
dec
mov
adc
inc
lret
jg
cli
xchg
dec
xor
gs
rcrb
rorb
sahf
jbe
xchg
cli
xorl
dec
and
cmp
enter
mov
jp
fistpl
stos
test
dec
xchg
popa
mov
cltd
sub
sarl
addl
outsb
mov
pop
loop
add
pop
xor
adc
add
pop
data16
jge
xchg
call
insb
cmp
sbb
pop
and
outsb
adc
add
dec
jp
push
push
fsubr
xor
sbbb
bound
fs
imul
cltd
mov
mov
fwait
jmp
loope
and
data16
inc
cmp
shrb
jmp
xor
inc
adc
adc
cli
bound
icebp
mov
in
pop
test
add
xor
mov
xlat
jo
adc
lret
js
nop
shlb
scas
jne
adcb
mov
push
adc
mov
sti
adc
mov
repz
and
dec
sti
mov
lcall
pop
dec
mov
ss
or
add
adc
orl
ja
testl
stos
test
sub
imul
inc
stos
xor
je
pop
outsl
push
loope
int3
loopne
jno
loop
sub
sbb
popf
add
pusha
pop
jae
jge
into
or
push
mov
pop
jae
out
pusha
popf
popf
push
push
dec
mov
imul
add
pop
jle
in
xchg
mov
mov
imul
lret
and
insl
xchg
inc
cmpsb
push
mov
add
jg
mov
xchg
in
aad
cmpsl
mov
dec
lahf
jl
inc
sbb
pop
adc
std
jne
push
push
cmpsl
mov
pop
ret
gs
lods
mov
test
add
int
dec
cmp
push
fsubr
xchg
mov
mov
jae
fistps
imul
insl
push
sbb
neg
jl
sbb
ljmp
add
adc
mov
fsubrp
cmp
push
repnz
inc
pop
jp
sbb
cmpsb
stos
dec
xchg
push
sbb
and
add
sti
jmp
mov
lds
jne
int
ror
mov
call
jno
sub
std
mov
mov
mov
sti
insb
lret
bound
rcl
xchg
dec
sbb
ds
rorb
inc
inc
xchg
adc
xchg
inc
mov
jge
sub
bound
repz
xchg
xor
mov
cltd
imul
add
lds
push
dec
stos
test
cmpsl
mov
rdmsr
rorl
js
ljmp
or
dec
sub
add
pushf
pop
out
fldcw
xor
xchg
dec
adc
push
inc
xchg
mov
adc
aaa
xchg
cmp
jg
mov
mov
jmp
xchg
shl
hlt
in
inc
mov
pusha
loope
ja
lcall
jbe
jl
pop
dec
pop
outsb
adc
cmpsb
cmovle
addb
in
lcall
sahf
movsb
push
sub
ret
test
jbe
sub
jae
cmp
cmp
mov
in
lcall
xchg
in
mov
iret
out
fwait
mov
xchg
hlt
mov
xchg
aas
fchs
loope
fst
sbb
cmp
lret
add
mov
mov
testb
push
lods
xchg
fsts
data16
cmp
sarb
in
out
mov
cmp
xor
ret
mov
mov
sti
fwait
xlat
mov
int3
mov
cmp
mov
jae
sbb
js
pop
mov
addr16
cmp
test
dec
and
push
cli
jne
dec
push
outsl
aad
faddl
pop
addb
add
lds
pop
mov
pop
stos
push
daa
stos
incb
pop
push
dec
out
pusha
ret
pop
dec
inc
movsb
pop
test
stc
les
push
data16
cmp
test
sbb
push
push
repz
inc
stos
lods
sub
popa
ret
in
jbe
sub
std
adc
ds
int3
frstor
xchg
or
test
cmp
push
add
les
in
jno
cltd
js
fildl
jge
xor
int3
add
es
fwait
lcall
loope
ljmp
loop
std
xchg
mov
adc
cmp
add
fdivr
mov
jl
or
sahf
fisubl
test
push
mov
mov
mov
out
test
inc
movsb
sti
sub
pusha
and
dec
or
fwait
pop
imul
add
adc
push
cld
dec
ljmp
mov
pushf
ror
pop
sbb
adc
fnstsw
testl
cmp
xor
std
scas
popf
lcall
jl
aaa
push
rcrb
adc
mov
push
xor
sub
adcl
repz
lret
outsl
fdivrs
enter
pop
cltd
hlt
sub
or
mov
mov
sahf
xchg
arpl
mov
inc
imul
repnz
push
push
inc
es
clc
scas
cmpsb
jbe
mov
sbb
mov
xor
xchg
dec
jmp
shl
cli
les
cmpsl
push
xchg
and
repnz
out
push
insb
mov
inc
into
xchg
loope
sub
sbb
dec
push
fstl
sub
cmp
testl
jmp
in
xor
lods
mov
pop
push
imulb
ds
and
mov
loop
mov
loope
addr16
insb
in
push
icebp
or
shll
stc
xchg
lods
fwait
mov
hlt
mov
or
ja
sub
cmp
mov
sahf
roll
push
test
mov
iret
dec
cmp
or
fbld
cmpb
xor
sub
fsubrl
push
ret
sti
sahf
mov
sub
mov
push
in
int3
cmp
cmp
xchg
fnstenv
add
iret
fsubl
inc
scas
ret
cmpsl
in
dec
push
xchg
xor
mov
rol
mov
mov
and
mov
push
in
adc
sbbb
insl
mov
push
std
or
mov
mov
lret
or
jae
xchg
sti
inc
or
add
cld
xor
in
lea
aas
out
push
xchg
xchg
aas
movsb
sarb
das
clc
cmp
xor
aaa
in
mov
cmp
test
test
int3
xchg
inc
pop
jbe
movb
out
repnz
das
dec
shl
jg
push
mov
negb
xchg
xlat
pop
rorl
int3
loope
test
lods
outsl
jb
jo
pop
add
pop
cmp
mov
dec
jbe
adc
jb
gs
inc
sub
call
dec
jnp
push
mov
lods
cli
mov
imul
add
sub
adc
inc
jno
or
push
ret
cmp
outsb
dec
pop
scas
xlat
stos
push
loopne
sahf
lahf
adc
dec
cmp
cmpsl
fs
xchg
cmc
add
hlt
dec
sub
push
push
jle
popf
es
and
sysret
adc
mov
rcrb
les
jnp
jns
jb
daa
inc
je
pop
fwait
lods
cli
out
in
jl
add
lcall
mov
in
es
dec
cltd
in
insl
mov
movsb
xchg
sbb
or
mov
js
cli
das
aas
sub
xchg
dec
jae
addr16
mov
push
mov
in
ljmp
int3
loope
inc
adc
xlat
loop
pop
add
dec
mov
lods
out
jle
pop
popa
mov
push
jae
push
dec
ret
push
imul
jns
mov
xchg
mov
ss
mov
mov
pop
cmp
push
sahf
addr16
orb
leave
sbbl
xchg
repz
aam
jns
mov
mov
jecxz
inc
fadd
mov
in
movsb
jge
cmp
sarb
mov
mov
mov
xchg
fstl
nop
cmpsl
push
mov
fistpl
sbb
jne
adc
push
push
mov
dec
push
orb
clc
push
sub
sbb
pop
cmp
shrl
out
mov
pop
jne
repz
sub
movsl
mov
ljmp
iret
push
aad
cld
jp
fldcw
fadd
jle
rorl
inc
mov
pop
int3
mov
mov
mov
pushf
bound
adc
sti
lret
aaa
cmp
sub
jle
cld
jnp
add
enter
das
push
xchg
xchg
xchg
orl
pushf
lods
fadds
pop
jecxz
sub
scas
xor
push
clc
pushf
in
inc
aas
jbe
stc
push
xchg
push
mov
mov
inc
sbb
or
lret
arpl
adc
adc
cs
call
popw
push
sbb
cmpsb
mov
mov
xor
sarl
cmc
mov
out
and
sbb
and
imul
xchg
aaa
aaa
mov
sti
cmp
mov
xor
aad
test
out
push
adc
lcall
mov
loope
out
jno
sbb
pop
dec
or
pop
cmpsb
add
cmp
dec
sub
cwtl
mov
push
xor
xchg
sub
dec
cs
mov
pop
lahf
in
stos
xor
shrl
repz
xor
je
out
daa
ss
dec
jl
cmpb
push
adc
mov
outsb
xchg
push
lahf
jnp
aam
pop
fisttpl
mov
pusha
mov
sub
nop
std
ret
pop
dec
xlat
loopne
dec
mov
mov
test
shl
xchg
divb
inc
outsb
pop
and
dec
xchg
or
add
lds
cs
outsb
and
ds
pop
aad
or
div
mov
cmp
es
dec
dec
cmp
xor
icebp
ds
mov
pushl
cld
lcall
lret
je
jmp
dec
mov
ljmp
jl
aam
decl
and
cmpsb
lods
mov
in
add
ror
and
adc
inc
adc
lea
ja
dec
stc
test
push
scas
add
cmp
xchg
add
mov
jno
mov
xor
loope
mov
jnp
inc
mov
add
mov
jnp
jmp
inc
lods
sarl
aad
imul
xor
mov
or
or
jo
and
mov
cmp
and
adc
adc
addr16
or
hlt
popf
xor
push
xchg
addr16
mov
inc
je
push
insb
das
int
fidivrl
lret
scas
mov
fildl
ficoml
or
ja
mov
stos
jmp
stc
lcall
lret
les
popa
inc
inc
push
frstor
cmp
sti
cmp
jno
sub
insb
mov
mov
xchg
movsl
pop
mov
mov
adc
mov
inc
leave
das
popf
jae
push
movsb
mov
dec
or
add
nop
push
xor
movl
inc
daa
dec
stos
gs
aaa
inc
gs
mov
outsb
xchg
push
popa
test
lret
outsl
add
imul
xchg
imul
cmp
scas
xchg
mov
xchg
add
sahf
lahf
gs
add
cltd
cltd
enter
mov
iret
cmpl
cld
mov
int3
pop
scas
dec
mov
sub
test
jmp
inc
mov
loop
mov
jge
mov
lea
jnp
jl
bound
or
mov
cmpsb
sbb
pop
jecxz
icebp
lods
and
jno
daa
leave
les
out
cmp
lcall
pop
ficoml
loop
inc
out
movsl
stos
or
cmp
adc
faddl
fwait
lea
add
pop
rcll
shrl
mov
xor
repnz
mov
inc
aam
popa
jne
call
xchg
xor
je
fistl
sub
jmp
push
shll
dec
xor
inc
fimull
sar
das
outsb
xchg
add
ret
decl
out
mov
jg
push
sub
fstps
popa
dec
xor
ds
push
mov
mov
inc
adc
push
mov
ret
out
sub
mov
inc
loopne
negb
movsb
add
mov
add
fsubrl
scas
pop
xchg
rclb
and
dec
add
sub
cmpsl
jns,pn
lods
scas
unpckhps
jne
jle
aaa
repz
inc
jnp
push
inc
andl
cltd
pop
into
mov
xor
mov
push
enter
or
dec
sub
push
and
shr
pop
fwait
push
push
pop
dec
xor
inc
push
mov
dec
and
out
adc
cld
cmp
adc
xchg
fmulp
clc
jmp
dec
fldl
cmp
test
cmp
ss
pop
push
add
jmp
lret
inc
js
or
sbb
lret
inc
push
push
lods
jecxz
jg
adc
lock
sub
pop
add
es
subb
insl
jo
cmpsl
jnp
add
dec
jno
mov
xchg
scas
cmp
push
dec
test
and
mov
sar
sub
lds
cmp
daa
cli
lea
stos
mov
cmp
pop
cmpsl
out
adc
mov
lret
or
inc
and
push
mov
sbbl
fistps
cwtl
pop
jg
fisubl
push
jnp,pn
sti
push
rolb
outsl
orb
test
rcl
fmuls
scas
fdivs
xorl
repz
lret
jl
rolb
add
das
mov
jg
mov
out
lret
lods
xorb
dec
sti
cmp
cli
xchg
mov
xchg
dec
loope
fidivrl
pop
cmc
mov
iret
insb
nop
cmp
leave
sbb
data16
xchg
push
xchg
lahf
adc
cmp
or
into
cltd
shl
jmp
pusha
popl
mov
cmp
xchg
insb
mov
add
out
std
pop
mov
imul
cmp
pushf
add
jns
push
sahf
inc
mov
cmp
int3
or
mov
lods
repz
fs
scas
mov
or
mov
lcall
xorb
fwait
push
mov
pop
idivl
fisttps
ja
mov
push
sub
adc
int3
cli
add
dec
inc
and
stos
sbb
pop
pop
loopne
add
test
jno
dec
ss
xchg
scas
jae
js
xor
movsl
loop
in
insl
in
fisubrs
jmp
push
into
or
sbb
in
sbb
lods
jl
mov
rorl
push
faddl
xor
xchg
into
sub
ret
fisttpl
sub
jns
push
push
and
lods
jb
jnp
shrb
testl
dec
cwtl
add
movsb
xor
pop
or
xchg
in
adc
jp
inc
insl
subl
dec
jb
cmp
pop
cmp
xor
jno
mov
adc
push
or
mov
lea
mov
xlat
mov
lcall
cltd
sub
cmpsb
jmp
push
out
sub
ds
sub
jg
sahf
ja
dec
shll
aad
jmp
lahf
test
outsb
inc
loope
popf
mov
mov
mov
ss
sub
add
push
movsb
cs
fstp
test
call
xor
decb
iret
add
shrl
sahf
add
xchg
pop
jns
mov
mov
xor
cwtl
or
arpl
and
xchg
gs
in
cwtl
mov
and
cmp
inc
pop
push
sub
es
orl
add
adc
shll
pop
cld
mov
lret
adc
lret
std
das
scas
enter
cmpsl
int3
mov
add
in
sub
jno
arpl
lds
mov
lahf
stos
arpl
add
dec
sahf
ja
adc
js
push
in
cmc
in
cld
pop
adc
and
inc
or
je
pop
addl
mov
inc
test
adc
adc
xor
das
movsb
subl
ja
mov
test
sbbw
cmp
add
loopne
adc
rsm
es
add
inc
popf
add
ret
into
mov
in
xchg
std
fstpl
pop
loop
mov
neg
call
mov
jle
out
loope
popf
jecxz
bswap
aam
bound
push
mov
adc
fsubl
adc
das
cmp
xchg
pop
pop
xor
jl
fbstp
out
cmp
ucomiss
arpl
pushf
push
sbb
mov
cs
call
push
sahf
mov
pextrw
mov
nop
lock
inc
in
or
sbb
test
inc
xchg
push
push
pop
sub
stos
sub
pop
or
jo
les
scas
sbbl
dec
sub
in
lcall
pop
dec
inc
or
inc
outsb
lahf
or
lds
insl
stos
out
jb
mov
jmp
call
mov
in
xchg
pop
in
xor
imul
in
mov
jo
andb
pop
mov
adc
sahf
mov
fldcw
mov
pop
mov
ret
test
dec
lea
cli
mov
sub
repnz
and
add
imul
adc
xor
mov
js
pop
mov
mov
stc
je
sahf
mov
and
mov
sub
dec
pop
xor
lret
xor
call
dec
xor
xchg
pushf
fbstp
xchg
sbb
sbb
gs
movsl
jb
dec
inc
in
addr16
lods
cwtl
mov
inc
shrl
fsubr
lock
or
fsubp
mov
push
movsb
xchg
arpl
fwait
into
orl
sub
cs
push
pop
movsl
push
stc
add
fwait
cmpsb
fdivrs
pop
cmpsb
pop
fadds
shr
xlat
or
ret
xor
lret
testl
fisttps
repz
es
sti
popa
push
aam
loopne
mov
rclb
and
mov
xlat
test
and
xchg
mul
sbb
pusha
and
enter
outsl
dec
dec
lods
js
stos
cmp
xorl
mov
and
mov
mov
mov
mov
sbb
mov
repnz
icebp
pop
jl
ss
mov
popf
ljmp
sub
cmpsb
dec
sub
sub
sub
insl
pop
jbe
cmpsl
stos
mov
sub
xchg
xchg
pusha
push
in
mov
sbb
mov
loope
add
adc
adc
setns
xchg
sbb
ret
les
inc
testb
aaa
add
into
int
inc
int3
push
jne
sub
inc
mov
jp
mov
scas
bound
jmp
mov
xchg
rcrl
ret
movsl
mov
pop
cmp
mov
push
mov
addr16
int3
dec
xlat
ds
insl
pop
enter
and
jmp
push
scas
dec
lea
outsb
push
test
mov
test
pop
mov
sbb
add
or
sbb
rol
add
aad
ds
pop
in
dec
fidivs
jo
xor
cmp
adc
loopne
test
movsb
in
insl
cmp
pop
pop
mov
mov
clc
pop
pop
mov
scas
out
jle
mov
fistpl
push
int3
sbb
adc
outsl
outsb
or
mov
inc
jne
loopne
push
mov
sbb
add
and
les
adc
adc
out
lods
in
adc
fdivs
int3
xor
adc
mov
fists
mov
push
mov
sub
loope
pop
jg
jl
or
xor
jmp
call
iret
out
mov
fisttpl
lea
cwtl
push
mov
push
ret
xor
call
jl
inc
jo
xchg
or
add
add
xchg
das
stos
push
aas
sub
and
xchg
js
fadd
cmpsb
pop
mov
mov
cs
adc
jp
in
dec
or
call
or
test
or
mov
les
enter
lret
mov
mov
mov
ror
enter
popa
out
mov
sub
sub
fnstcw
mov
das
sub
jle
pop
call
shlb
inc
push
push
shr
in
insl
xor
or
and
repnz
jg
ljmp
in
aam
out
lret
in
mov
push
in
lret
sub
dec
xor
sti
mov
mov
dec
aad
ud1
push
lcall
jo
and
outsb
sbb
or
in
mov
inc
stos
mov
xchg
push
xor
dec
mov
mov
mull
xor
jne
xor
or
nop
mov
xchg
jl
aad
cmp
mov
sbb
sub
pop
or
pop
mov
imul
pop
push
inc
push
mov
test
jae
jg
xlat
cmp
test
orl
cmp
pop
inc
mov
shlb
sub
push
mov
call
popf
aad
test
fnstcw
or
inc
xchg
call
xchg
aam
dec
lds
f2xm1
movsb
jno
call
jle
inc
pop
loopne
icebp
rorl
lds
jae,pn
lods
pushf
cmp
push
mov
adc
push
test
in
add
arpl
je
stos
mov
add
iret
jle
outsl
fsts
jl
xlat
dec
into
inc
hlt
pop
lret
adc
data16
ret
push
cld
dec
xchg
xor
loope
arpl
imul
ficoms
xor
and
out
sub
adcl
jae
push
iret
or
push
adc
push
cmp
mov
mov
lock
pop
dec
sbb
orb
sti
and
daa
mov
je
xchg
loop
loop
jno
lret
inc
pop
xchg
out
mov
jno
or
cs
jo
or
fsubl
adc
jae
add
lods
jmp
xchg
add
sub
push
pop
inc
mov
mov
mov
pop
cwtl
or
jnp
and
mov
test
adc
ret
lea
dec
sub
mov
dec
cmpsb
add
jp
adc
mov
push
fdivs
add
jle
push
mov
push
xor
lea
mov
mov
push
xchg
mov
mov
loopne
aam
daa
mov
cmp
nop
adc
in
outsl
mov
and
int
xchg
mov
mov
aaa
dec
mov
pop
inc
pop
mov
add
sbb
xor
sub
imull
insl
les
jp
ret
hlt
xchg
stc
mov
push
sbb
mov
sub
fcmovnu
add
fstpl
imul
daa
and
mov
into
dec
mov
popf
cmpl
or
ss
daa
movsl
lea
add
xor
mov
push
test
aas
popf
cli
adc
xor
dec
adc
dec
or
frstor
mov
xchg
int
xchg
jbe
lcall
or
jecxz
xchg
pop
stos
jp
cltd
cld
pop
xchg
popa
lods
push
adc
cmp
test
mov
mov
inc
loop
or
aam
imul
push
push
mov
push
das
jle
das
inc
cli
mov
sbb
call
pop
pop
lods
push
and
adc
testl
bound
je
cwtl
es
xor
cmpsb
add
jo
leave
mov
adc
cmp
fmul
cmpsl
addr16
xchg
leave
sahf
cmp
dec
aaa
mov
out
out
icebp
mov
cmpb
ret
push
cmp
adc
rcrl
gs
iret
sbb
add
adc
xchg
xchg
jp
out
sbb
out
pop
fmul
rcrb
das
pusha
and
in
xchg
into
fldl
stc
loopne
xchg
jle
outsb
jecxz
pop
movsb
in
push
stos
cmpsb
xchg
cmp
pop
and
cmp
leave
pop
jp
and
cmpsb
or
mov
leave
sub
out
mov
sbbl
pop
cmp
out
data16
xor
addr16
mov
cmpsl
in
add
fstl
sbb
std
outsb
ss
or
mov
jle
and
push
jns
jmp
cmpsl
push
adc
in
push
inc
lea
aad
pop
in
push
and
jbe
das
add
adc
xor
movsb
leave
sbb
sub
inc
mov
sub
push
adc
mov
loop
int
cmp
clc
sbb
fwait
add
jmp
xor
sbbb
jmp
cmp
sub
sbb
jge
mov
dec
mov
pushl
sbb
cltd
js
outsl
jns
push
jecxz
sbb
cmp
daa
mov
icebp
outsl
pop
loop
mov
and
andl
adc
pop
hlt
sub
dec
jge
arpl
pop
in
mov
push
xchg
lea
push
test
add
and
mov
notb
popf
arpl
cmp
xor
sbb
inc
in
and
jnp
mov
sbb
fidivrl
nop
movsb
sub
popf
repnz
jnp
xchg
push
repnz
popf
xorl
jge
push
sub
xlat
ret
out
sub
cmp
jns
aas
push
scas
cmpsl
add
add
inc
imul
add
xchg
mov
in
hlt
sub
loopne
adc
iret
sbb
nop
mov
rcrb
add
xlat
cmpsl
sub
mov
or
and
and
in
sbb
rorb
jno
mov
push
push
xor
mull
and
mov
mov
pop
sarl
xchg
clc
pop
std
test
pop
rcr
sti
mov
loopne
mov
xchg
or
mov
rorb
push
xchg
push
mov
out
mov
jp
mov
imulb
leave
int
pop
pop
xor
xor
test
hlt
ret
mov
sarb
xor
out
xlat
stc
jp
popa
xor
bound
mov
xor
fwait
add
dec
addb
and
andb
jecxz
push
mov
fstl
xchg
in
cmpb
adc
hlt
sbb
jnp
add
lds
mov
sub
jo
sbb
inc
jecxz
mov
std
inc
push
out
pop
mov
rcrl
pop
add
fwait
enter
cmc
sub
cmc
cmpsb
pminub
out
sbb
nop
mov
das
hlt
fisttpl
xor
push
add
pusha
mov
out
fsubs
push
pop
inc
outsb
cmc
orb
jb
push
xchg
cmc
mulb
lcall
outsl
clc
mov
rolb
pop
inc
fcmove
ret
cmp
xor
xorb
dec
add
mov
adc
and
and
leave
movsl
or
arpl
adc
ljmp
pop
sbb
cmpsb
int3
mov
mov
jae
cmpl
and
es
iret
es
mov
fadds
add
xor
scas
xchg
popa
sub
pop
enter
sbb
stos
sti
jno
jae
jne
inc
xchg
in
pop
in
push
or
mov
sahf
repnz
dec
mov
ret
pop
leave
push
or
mov
push
xchg
adc
inc
sub
mov
loope
pop
cwtl
test
nop
sbb
or
lahf
sbb
mov
adc
inc
and
cmpsb
jae
lret
cltd
jl
xor
push
or
jg
adcl
fimull
test
pop
pop
or
push
xor
repz
test
stos
daa
into
gs
jnp,pn
js
rcr
out
hlt
loopne
cmp
and
sub
sub
mov
pop
jb
cmpsl
call
cmp
in
ss
loopne
xchg
mov
je
dec
negl
popf
ret
out
dec
movsb
adc
xor
or
ja
xor
xor
pop
lods
cmp
fisubrl
mov
and
mov
mov
mov
aad
dec
push
lahf
mov
imul
and
sub
xchg
push
dec
outsl
loop
in
mov
cmp
xchg
pop
pop
out
cmp
cmpsl
movsl
mov
adc
push
xor
lods
sub
sub
aas
push
adc
fwait
pop
xorl
xlat
push
jp
lret
jl
mov
lret
adc
bound
cmp
pop
ds
adc
loope
pop
sub
xchg
iret
mov
jb
pushf
push
mov
lock
inc
dec
pushf
xor
push
mov
mov
pop
cld
jle
lret
and
loop
dec
sub
push
pop
loopne
sbbl
test
dec
in
pop
loope
mov
mov
test
mov
ffree
mov
adc
clc
dec
test
and
add
push
movsb
rorb
add
ljmp
and
xchg
in
xor
push
pop
ljmp
inc
cld
push
ret
xor
nop
loop
jmp
mov
push
adc
mov
popf
mov
sahf
jbe
inc
mov
daa
xor
push
and
xchg
jne
fimuls
mov
nop
dec
cmp
into
xchg
cli
je
iret
cmp
push
cmp
add
mov
stos
cmp
add
xchg
xchg
out
cltd
xchg
add
push
pop
into
stos
loope
pop
jg
inc
iret
push
pop
icebp
insl
inc
fidivrs
ds
sbb
mov
fsubp
popa
pop
aaa
sub
enter
cmp
adc
scas
pop
adc
mov
sub
add
sub
test
or
dec
stc
mov
repz
mov
dec
into
push
lea
lret
ret
aad
in
das
jp
mov
xor
jle
jmp
sti
jge
dec
shr
test
imul
mov
inc
sbb
movl
pop
fimuls
mov
mov
out
bound
pusha
test
fs
mov
int3
xorb
add
push
mov
lret
shll
ss
and
or
inc
cmp
clc
dec
mov
xchg
sub
pop
add
push
repnz
into
sahf
test
lods
mov
sysenter
sbb
push
jb
push
adcl
fistpll
into
dec
jle
sub
lea
sti
inc
in
fwait
add
aad
ret
test
jp
leave
call
sub
orb
dec
dec
stos
sbb
inc
scas
jne
jl
js
bound
daa
aas
mov
add
xor
leave
xchg
dec
mov
pop
xor
nop
imul
stos
mov
imul
mov
test
or
fwait
push
enter
mov
rolb
cld
push
xchg
lods
cmp
jns
divl
lcall
sub
adc
roll
inc
cmp
xchg
in
xchg
cmp
aaa
outsb
repz
aas
inc
xchg
in
into
jp
mov
lods
in
hlt
movsl
int
shlb
cmp
cmp
daa
mov
popf
sub
leave
adc
push
xchg
loopne
movsl
out
mov
stos
test
mov
in
jg
stos
push
test
push
cmpsb
lret
stos
repz
pop
insl
cmp
xor
add
sti
push
fisubl
es
lcall
cmp
arpl
ja
inc
push
inc
insl
sahf
mov
movsl
jo
sub
dec
mov
data16
pop
inc
cltd
xor
pop
jge
jl
imul
jb
push
std
mov
in
jg
xchg
ret
ds
addr16
aad
rolb
ljmp
je
fists
rol
or
cmpsb
dec
lahf
mov
lret
nop
in
ja
mov
shlb
and
xchg
pop
negl
popf
js
in
xchg
ret
mov
push
stc
add
xor
mov
loop
daa
mov
and
sbb
xlat
mov
pop
imul
push
or
mov
push
mov
sub
xchg
mov
adcl
xchg
notl
subl
fbld
nop
or
and
sub
inc
je
or
pop
fbstp
cltd
push
mov
push
in
xchg
pop
fisubrl
push
in
jbe
pmaxub
pop
out
dec
sub
add
dec
lret
std
in
mov
xor
push
mov
pop
ret
cmp
lds
cmpsb
pop
sub
xor
sbb
cli
fs
mov
xor
es
sbb
push
out
dec
rcll
xchg
mov
add
notl
pop
adc
into
cltd
ljmp
or
xchg
add
xor
push
pop
xorl
push
or
or
stc
rcrl
xchg
xor
adc
xchg
sub
jmp
xor
outsb
lock
dec
sbb
mov
push
pop
mov
inc
popf
aam
jne
in
rolb
mov
aas
fisttpll
xchg
iret
and
rcl
push
xchg
aam
dec
call
outsb
push
push
ret
xor
mov
out
fyl2x
fmul
jle
pusha
xchg
mov
aam
loope
add
mov
fwait
mov
insb
out
loopne
dec
cmp
cmp
xchg
xor
das
leave
mov
scas
cmpsl
sbb
testb
add
adc
adc
and
mov
aaa
mov
cmpsl
jno
push
jbe
movsl
ret
jmp
or
iret
dec
adc
enter
in
jbe
or
cli
aas
inc
inc
cmp
mov
add
pop
sbb
lret
outsb
das
shr
pop
fistl
loope
or
imul
repz
out
push
les
sti
movsl
or
cmp
jecxz
cli
push
and
imul
jge
jnp
pop
mov
mov
cs
je
sti
loopne
and
push
in
sbb
repz
push
xchg
push
movsl
lahf
pop
inc
sub
sub
ret
add
sbb
dec
adc
stos
andb
ja
test
cmp
dec
into
lcall
shl
stos
test
imul
sbb
enter
popa
jle
xor
rcl
xor
stc
in
in
push
mov
enter
out
pop
sbb
inc
fcmovnu
xor
stc
xor
pop
cmp
mov
cwtl
mov
push
fdiv
adc
test
mov
in
fadd
jp
add
mov
jbe
cmpl
sbb
jmp
mov
mov
lcall
xor
adc
mov
cmpb
push
ds
cltd
pop
cs
cwtl
sti
or
loop
xorb
repnz
fsubl
dec
cmp
aas
adc
xchg
pop
sbb
fnsave
loope
mov
stc
jg
or
movsl
dec
mov
out
movsl
dec
scas
jg
lock
movsl
sbb
pop
movsl
outsl
out
mov
jl
ja
xor
sub
and
fbld
and
sbb
jecxz
push
mov
add
andl
mov
push
jae
inc
xor
fs
push
pop
sarb
add
test
push
mov
mov
pusha
clc
pop
jg
scas
fstps
ja
hlt
repnz
cmpsl
dec
repz
xor
adc
adc
test
ret
test
in
pop
mov
pop
cwtl
into
int
negb
aam
mov
or
sbb
bound
in
mov
add
lcall
imull
xlat
and
in
ja
jl
gs
pop
xchg
lret
mov
cli
aas
incl
mov
dec
movsl
xchg
in
dec
sub
mov
push
sar
pop
mov
in
ja
mov
mov
bound
xchg
xor
add
mov
push
sub
jmp
lea
fwait
dec
imul
sbb
imul
sub
sub
iret
movsl
fimuls
ret
cmp
mov
cld
je
ficompl
push
orb
sub
pop
daa
mov
arpl
cmpsb
aam
out
xor
mov
std
add
push
iret
in
sub
and
bound
arpl
pop
jecxz
arpl
jmp
add
push
cmc
add
call
shlb
or
daa
test
cmp
mov
stos
push
sbb
jl
lods
popf
pop
stos
dec
sbb
dec
repnz
cmpb
cmp
inc
sub
push
imul
lds
fisubl
dec
xor
and
cmp
dec
hlt
jl
mov
rol
popf
sub
and
pop
fmuls
push
push
push
mov
mov
lds
jb
adc
mov
xor
imulb
cmp
xchg
icebp
sub
arpl
vpsubw
pop
shr
lods
js
aas
lret
ret
lcall
sahf
enter
push
jp
jo
inc
leave
inc
pop
cmpsl
dec
mov
clc
push
test
dec
pop
out
jo
fisubrs
mov
cltd
fcomip
dec
fwait
push
inc
jo
dec
sub
popf
pushf
pop
pushl
mov
std
popa
mov
cmp
mov
sbb
insl
movsb
pop
xlat
in
jne
inc
add
pop
imul
pop
ljmp
call
fistl
lods
dec
fcmove
or
sub
shlb
and
add
pusha
fwait
cwtl
sahf
add
sub
inc
lahf
jecxz
inc
push
xchg
and
xchg
push
in
js
xor
sbb
or
lods
xlat
andl
mov
and
pop
in
push
and
lret
out
sbb
sbb
mov
inc
lds
push
hlt
mov
mov
test
fmuls
into
mov
push
lcall
and
cmp
fistpl
popa
push
dec
mov
inc
inc
push
xor
pop
dec
enter
push
xchg
adc
jecxz
pop
gs
push
cmp
adc
xchg
movl
sbb
test
into
in
daa
xor
jge
cmp
out
movsb
jae
sahf
pop
jg
pop
sbbb
imul
or
cli
mov
pop
mov
adc
ljmp
inc
fisubl
ljmp
fdivrs
mov
and
add
push
inc
inc
jl
cmp
xor
mov
or
cmp
adc
loope
aaa
mov
imul
jo
and
daa
adcb
push
inc
iret
nop
sahf
pop
mov
loopne
sub
jg
jge
xchg
jg
sti
mov
pop
push
jg
lcall
inc
imul
adc
mov
push
into
movsl
add
sbb
pop
sti
rclb
cmc
loopne
cli
xor
xchg
lret
shll
out
cmp
push
cs
stos
add
stc
pusha
pushf
cmp
dec
add
lret
cmc
loop
test
sub
pop
pop
loopne
sub
xchg
jns
testl
shrl
out
mov
jecxz
lock
loop
xor
push
jno
repnz
and
push
neg
stc
loope
imulb
loop
daa
adc
or
jl
push
ret
out
xchg
jp
lea
xchg
popa
std
dec
je
lret
push
fbstp
ror
or
aam
pop
push
fcomps
push
cs
out
pusha
jg
jp
gs
arpl
push
push
dec
sbb
or
das
lea
mov
fs
cmp
fwait
leave
jb
out
mulb
inc
cltd
sub
sbb
jno
jle
push
scas
sub
adc
mov
mov
xchg
sbb
lods
xchg
jb
xchg
mov
add
add
out
loope
decb
cmpsb
inc
adc
dec
iret
faddl
mov
into
out
add
scas
sti
cmp
sbb
cmp
mov
xor
test
jmp
stc
mov
push
leave
jl
xchg
sbb
jae
xlat
es
dec
fs
push
jns
test
test
loopne
push
push
jne
jns
cld
adc
data16
jnp
cmp
stc
push
adc
xor
push
mov
pop
push
sbb
fcompl
out
or
sti
mov
mov
xor
dec
aaa
lret
lret
mov
lcall
add
pop
fstl
jge
push
xchg
dec
out
jnp
shrl
jno
dec
icebp
movsb
pop
inc
sbbl
jne
sub
adc
push
dec
mov
inc
fwait
push
fdivr
mov
or
and
lret
enter
inc
jg
cld
pop
dec
ljmp
push
push
mov
pushf
adc
lret
mov
ret
push
push
repz
icebp
sbbb
outsb
out
repz
cmp
xor
loop
jb
stos
out
inc
jmp
sub
in
rcr
push
xchg
xchg
mull
pop
loopne
test
jne
aam
test
push
mov
sbb
jle
repnz
mov
pop
xchg
inc
xchg
lea
xor
mov
cmp
jp
inc
icebp
dec
bnd
cmc
test
xor
sbb
push
push
pop
ror
inc
add
cmpsl
xor
xchg
lret
call
mov
mov
insl
inc
imul
lods
pop
xchg
iret
es
pop
mov
cld
jbe
js
push
into
adc
push
fstl
insb
mov
inc
subl
lds
js
jmp
aaa
leave
into
aad
movsb
mov
sub
je
cld
mov
inc
cmp
movsl
es
lret
cmp
pop
pop
movsl
and
es
xchg
cmpsb
lods
mov
or
adc
repnz
rcrl
adc
loope
and
lds
push
ja
mov
cmpb
jmp
cmc
mov
loop
ret
push
jecxz
xor
cwtl
jp
lds
mov
sub
fcoms
pop
pop
gs
xchg
mov
jmp
jne
push
cmpsb
mov
pop
lret
add
negl
lret
popl
sub
mov
stc
xor
jbe
inc
lods
pop
add
add
xor
and
dec
mov
dec
cmp
or
pop
popa
test
cmp
sub
mov
fisttpl
jns
mov
fsubl
adc
mov
stc
lods
mov
clc
jge
mov
mov
cmp
sub
and
push
adc
mov
lods
mov
push
rorb
bnd
enter
icebp
aam
imul
inc
cmpsb
lret
subl
xchg
push
lret
xchg
push
xchg
int3
add
lcall
lcall
mov
stos
bound
adc
lret
mov
sbb
std
popa
jl
sti
dec
int
or
mov
out
ja
mov
test
ret
orb
jmp
clc
fistpl
fldt
leave
or
and
call
mov
push
sub
xor
jnp
and
bnd
push
cld
das
jbe
dec
outsl
rcrl
cmp
pop
cmpl
inc
lea
xchg
mov
jp
dec
pusha
clc
mov
xor
imul
in
test
mov
add
sub
xchg
pusha
and
mov
mov
inc
flds
add
enter
mov
pop
cmp
sbb
dec
jne
add
push
cmp
inc
mov
jns
or
test
push
rorb
je
sahf
out
add
imul
adc
push
stos
xlat
cmpsl
jp
push
ja
push
cmp
mov
cmp
adc
cmp
add
jl
sbb
push
xchg
bound
pusha
ret
jecxz
cmp
dec
pop
and
sub
cwtl
mov
cmp
and
orl
pop
xchg
sub
sbb
sbb
and
jl
andb
push
fistps
leave
mov
out
flds
mov
and
out
jle
jo
sbbb
pushl
outsb
xor
pop
in
xchg
jne
mov
sub
das
mov
sbb
bound
xor
scas
sub
cs
mov
dec
fadds
jb,pn
scas
insb
test
rolb
push
ljmp
mov
repnz
pop
cltd
mov
sbb
es
cmp
and
hlt
test
das
fs
push
cmp
mov
shrb
and
orl
xchg
cmp
push
stos
adc
mov
mov
xchg
test
jno
jge
cwtl
stc
jns
outsb
push
xchg
popf
jno
sub
in
inc
or
jae
outsl
faddl
loop
xchg
fldcw
test
sbb
nop
or
sti
cmc
inc
scas
pusha
sub
push
std
sahf
repz
dec
mov
stc
and
lret
mov
xor
in
cli
xor
aas
hlt
scas
and
pop
xchg
cli
or
faddl
jne
push
cltd
sbb
dec
test
cmp
inc
dec
lret
stos
rcrb
add
and
aam
cmc
sub
pushf
sub
pop
hlt
mov
in
mov
sti
adc
mov
imul
pop
out
add
sbb
out
repz
mov
outsb
out
mov
imul
mov
dec
lret
test
and
nop
pop
xchg
mov
nop
movsb
or
ret
push
and
insl
stos
mov
xor
stc
movsl
roll
aam
fildl
jmp
cmp
mov
adc
shl
test
push
dec
xor
push
fwait
popa
inc
scas
xchg
push
roll
std
sub
fistpl
aaa
cmp
into
add
loope
jo
push
sub
mov
jo
xchg
icebp
bound
fstl
ljmp
and
jnp
inc
and
dec
cmpsb
int3
popf
mov
stos
out
sbb
lret
mov
inc
out
push
xor
mov
cbtw
pop
push
repz
sub
sbb
pop
sub
dec
test
ret
cs
roll
sbb
js
push
mov
fs
mov
add
pop
aad
add
fdivrl
inc
lock
movsl
sar
push
jno
mov
jbe
jo
mov
dec
dec
ja
popf
jle
inc
push
bound
imul
js
sbb
sub
cmp
push
test
xchg
or
push
sub
xchg
push
cld
jns
lods
xchg
fs
ds
lret
int
xlat
roll
fisubrs
push
mov
insl
push
test
mov
push
sahf
jg
stc
xor
aas
cmp
popa
mov
xchg
push
sub
outsb
cli
mov
mov
mov
aas
push
and
cld
das
pop
aad
lahf
rcrb
mov
loope
push
xor
sub
push
out
xor
aaa
sbb
scas
dec
mov
sbb
xchg
fwait
mov
ja
pop
push
inc
imul
and
sub
js
push
sti
inc
frstor
sub
out
into
sub
mov
iret
mov
jmp
adc
jecxz
aad
or
sbb
pop
lahf
push
dec
lret
and
and
stos
sub
jne
into
sub
lds
lock
mov
mov
jge
decl
lods
xchg
fcomi
pop
lret
das
je
arpl
mov
pop
adc
or
rcll
jle
mov
testl
xchg
adc
push
mov
repz
inc
mov
mov
leave
mov
aam
insl
fnstcw
fadd
les
mov
int
aad
shr
adc
out
cmp
mov
and
es
lock
mov
ds
ja
daa
cli
pop
xlat
sarl
jae
or
mov
les
mov
adc
lods
int
test
sbb
sbb
and
jo
mov
mov
int3
scas
cli
fsubs
js
xor
movsl
popf
imul
pop
pop
pop
cltd
mov
clc
push
cld
sub
in
sub
pop
pop
pop
and
dec
adcb
shl
cwtl
push
jp
cli
stc
adc
in
stos
and
fidivrs
pop
mov
push
fwait
mov
or
sbb
hlt
jb
test
push
sahf
cmc
jp
mov
or
xor
jl
dec
cmp
pushf
pop
fidivs
add
out
testb
mov
lret
pop
mov
stc
lret
sti
xor
dec
je
xorl
inc
lods
int3
pop
mov
daa
cmpsl
aas
cmp
or
loopne
or
push
add
push
jnp
sbb
dec
fwait
pop
mov
and
push
lcall
es
dec
scas
xor
bound
imull
inc
repnz
xchg
fbstp
dec
jae
scas
cld
imul
adc
xchg
test
mov
pop
cmpsl
push
mov
cld
sbb
mov
jo
adc
pop
incl
cmpb
add
orl
movb
mov
xor
sahf
mov
mov
lcall
add
insb
and
push
pop
cmp
pop
sbb
loopne
add
jg
out
push
adc
scas
addr16
dec
dec
into
lods
pop
lcall
lock
push
pop
jecxz
pop
pop
mov
aam
lods
addr16
outsb
in
in
jae
pop
stc
or
fistps
std
xor
pop
push
jp
repnz
jb
jl
orb
popf
icebp
sti
pop
stos
aam
mov
or
lcall
sub
adc
arpl
fneni(8087
dec
sub
mov
jno
dec
sub
cmpsb
xchg
cmp
push
imul
jg
insb
inc
xor
stos
fstp
or
shlb
push
or
mov
insl
add
and
rorb
jp
mov
pop
mov
sahf
sub
xchg
lods
out
dec
iret
rcrl
cmc
sbb
stos
jg
lds
ret
cltd
cmp
out
repnz
xchg
je
push
fldl2e
into
popf
push
xchg
dec
popa
stos
push
push
outsb
adc
pop
std
bound
pop
outsb
push
lods
movsl
pop
lahf
out
cltd
sarl
fstpt
push
cltd
push
mov
lods
xchg
push
nop
popa
jnp
ss
popf
sbb
lcall
scas
sub
add
xor
addr16
xor
in
pop
dec
dec
xchg
sub
or
outsb
jge
rcll
je
aad
addl
jle
sti
mov
aad
pop
cld
mov
add
cli
pushf
pop
xor
loopne
mov
lcall
xchg
jbe
stos
push
subb
pop
inc
xchg
mov
js
fistpl
inc
repnz
pushf
push
inc
test
lahf
cmp
mov
sbb
loop
dec
clc
mov
dec
mov
ljmp
je
jl
icebp
mov
loopne
jmp
push
jno
subl
orb
sarl
jge
mov
dec
mov
iret
push
pop
sub
mov
xchg
pop
nop
pusha
or
jae
jmp
gs
stc
leave
xchg
and
lods
mov
mov
pop
icebp
ss
add
int
lods
cmp
dec
ds
add
out
mov
mov
sahf
out
pop
mov
mov
arpl
into
push
lods
out
sbb
push
jecxz
pop
std
jae
test
ret
sbb
test
int
or
pushf
fnstsw
mov
inc
repz
inc
call
dec
pusha
sub
inc
mov
rcr
inc
lcall
xchg
icebp
mov
dec
lds
gs
mov
aad
mov
or
jae
xchg
lret
adc
es
insl
ss
push
enter
mov
scas
in
imul
icebp
and
inc
ja
and
mov
xchg
aad
pop
cmp
xchg
or
into
mov
sub
stos
jecxz
xor
and
mov
adc
incb
pop
mov
cld
pop
sbb
dec
movl
jae
push
xchg
ret
shrl
sub
fcompl
dec
cmp
mov
in
inc
lret
fwait
nop
ss
mov
jl
xchg
pop
adc
ret
mov
fildl
inc
sbb
and
pop
hlt
fildll
mov
aaa
or
subb
mov
xchg
lock
xor
fs
fcmovbe
imul
or
mov
xor
adc
jno
call
imul
adc
or
ffreep
scas
scas
ffree
mov
add
jmp
cmp
push
mov
push
pop
inc
test
imul
push
dec
pop
imulb
or
adc
pmaxub
fnstenv
mov
clc
sahf
sbb
jg
pop
lock
cmp
inc
roll
movsl
pop
popa
js
ret
mov
dec
and
mov
mov
jb
aad
fs
adc
shll
mov
xor
mov
pop
loop
push
rcl
push
rcrl
jmp
out
int3
pop
inc
sti
ds
xor
call
sub
mov
std
stos
shll
jbe
push
inc
sub
test
jae
orb
repz
inc
loop
inc
cmc
ficompl
xchg
push
insb
in
js
or
xor
add
rcrb
inc
cmp
fadds
jbe
stos
lea
ljmp
cmc
xchg
lret
lahf
pusha
fldt
jo
je
jno
cmc
pop
or
cmp
in
mov
push
cltd
mov
fwait
imul
push
enter
fucompp
je
cli
bnd
test
mov
repnz
pop
jno
push
inc
cmova
jp
xchg
aaa
idivb
pop
pusha
pop
adc
mov
jb
xlat
inc
pop
enter
aam
call
lmsw
pop
test
mov
mov
cmp
adc
push
pusha
sub
and
fcompl
pop
cmp
sub
cmp
lods
bound
int
and
in
daa
push
adc
shll
push
aam
lret
cmpsb
pushf
pop
cltd
sub
sbb
jae
sbb
pop
xchg
lds
movsl
mov
popf
add
in
jmp
js
daa
cmpsb
ret
popf
lea
fyl2x
je
inc
pop
scas
mov
popf
push
mov
pop
cwtl
arpl
cmp
and
outsb
dec
dec
push
movsb
imul
lahf
cmp
mov
adc
xchg
add
imul
clc
mov
jo
nop
clc
push
shrb
push
sub
in
jbe
out
or
ret
lahf
scas
push
jecxz
data16
sub
addr16
add
inc
dec
sbb
sbb
xor
mov
sbbl
lret
dec
ljmp
push
adcb
xor
scas
inc
jnp
cmp
les
in
mov
xor
jne
call
xchg
movsl
insb
jne
test
mov
cmp
cmc
repnz
xchg
push
mov
inc
cs
lcall
ss
fdivl
add
fsubr
cmpsb
pop
pop
xor
sub
mov
fadd
mov
enter
aas
xor
sub
out
mov
pop
pop
mov
sub
jo
inc
adc
or
mov
stos
dec
cmp
mov
aam
pop
and
xchg
push
inc
fs
add
and
mov
push
lods
addr16
mov
mov
icebp
bound
test
mov
stos
std
mov
popa
adc
adc
mov
pop
cmp
sub
jnp
daa
xchg
cmp
inc
xor
rcll
push
das
mov
cwtl
xchg
jno
and
aam
mov
push
xor
push
pop
cmpsl
stos
jg
add
cli
sti
xchg
sar
add
ljmp
fwait
ret
or
testl
pop
jp
sti
fidivs
rcr
cmp
divb
pop
filds
mov
mov
adc
sub
lcall
out
pop
mov
jp
shlb
xor
mov
lods
push
cmp
pop
and
jbe
jno
xchg
xchg
mov
dec
inc
inc
icebp
push
push
pop
xor
pop
lds
jg
xchg
pop
test
mov
outsb
sbbb
push
jecxz
sub
pop
psubusw
decb
or
popf
xchg
lahf
lods
xchg
test
cmp
scas
gs
lock
inc
paddusb
das
and
sub
imull
in
js
shl
and
xor
divl
sub
or
lods
mov
pop
in
std
sub
and
fs
adc
adc
cmpsl
xchg
pop
mov
or
mov
xchg
in
mov
in
and
and
stos
arpl
fs
repz
cwtl
pop
sbb
inc
pop
mov
add
sti
movsl
push
divb
sub
shll
xor
push
jmp
mov
mov
subb
negl
leave
xchg
pop
pop
push
or
test
adc
cmp
faddl
mov
xor
cs
or
xlat
mov
loopne
gs
mov
loopne
arpl
sbb
cmc
adc
jg
push
neg
add
ljmp
sbb
cmp
loop
push
sbb
push
sbb
arpl
mov
jae
je
push
movsb
into
stos
leave
fdivrl
add
vhsubpd
push
cmpsb
xlat
sub
push
sub
rol
mov
test
push
lds
clc
cmp
xlat
and
xchg
mov
andl
lret
iret
jg
cmc
icebp
pop
lahf
out
mov
sub
lret
and
jl
sbbb
adc
es
outsl
push
sahf
fnstenv
inc
sbb
dec
dec
aad
jl
fcmovbe
outsl
mov
dec
or
iret
adc
inc
nop
jg
mov
jmp
incb
mov
clc
pop
add
adc
jg
out
push
push
or
inc
jnp
pop
out
scas
cwtl
sbb
cmp
mov
push
jmp
mov
sub
adc
ret
mov
in
or
add
outsb
cmp
add
movsb
sbb
dec
and
je
hlt
cltd
subl
cmp
ret
rol
jg
ljmp
fidivrs
int3
mov
jne
mov
jo
out
and
xor
push
and
movsb
pop
jne
shl
cmp
aad
mov
jno
push
test
adc
push
push
ss
lcall
subl
inc
popf
push
sub
cmp
push
or
arpl
xor
lds
xor
xchg
jecxz
repnz
stos
pop
pop
xor
push
and
and
shlb
cld
add
sub
icebp
jb
pop
repnz
xchg
inc
scas
mov
sahf
dec
daa
jbe
fnstcw
or
enter
pop
xlat
ret
or
aad
xor
sahf
dec
pop
xor
sbb
inc
divb
adc
test
add
pushf
mov
cmc
mov
repnz
sub
dec
jbe
in
leave
and
sbb
or
cmp
lods
xchg
loopne
pop
in
out
ret
push
mov
mov
mov
jmp
mov
fwait
iret
hlt
pop
mov
push
or
add
test
mov
inc
cmp
pushf
mov
sahf
inc
cmp
std
int3
sahf
lods
aad
add
cmpb
inc
mov
ficomps
inc
xor
stos
add
mov
lods
and
and
sub
into
push
adcb
cli
sub
call
jp
cmp
xchg
enterw
vmovdqu
ret
sbb
adc
lret
mov
fildll
push
sbb
xor
dec
gs
sbb
xchg
ljmp
adc
mov
ret
xchg
push
js
jle
fistps
sbb
xchg
hlt
cmp
paddb
dec
popf
and
mov
int
and
fcomp
or
cmc
movsl
sti
mov
dec
sbb
cwtl
divl
cmp
xor
mov
xchg
add
insl
inc
push
jl
dec
inc
les
cmpsl
mov
push
pop
in
inc
xchg
add
hlt
jg
lods
mov
add
inc
mov
lahf
sub
loop
jo
xchg
xchg
sub
push
or
dec
xor
cmp
movsb
mov
sub
or
in
add
xor
shl
jge,pt
push
shlb
and
xor
lahf
lods
pop
js
sub
mov
out
fnstenv
inc
out
and
popa
cmc
es
jg
fisubl
imul
adcl
xchg
jnp
aaa
dec
fidivrl
rcrb
int3
fidivs
jle
test
sarl
sbb
xchg
sub
inc
stos
mov
repz
jp
cmp
jg
jmp
shlb
movsl
sub
int3
popf
xlat
mov
fadds
nop
mov
fcompl
jne
out
cwtl
popf
fcomp
sbb
push
fs
test
mov
or
lret
out
inc
mov
fs
xchg
push
push
gs
add
dec
mov
ret
inc
xor
push
dec
stos
mov
sub
mov
movsb
xor
mov
in
adc
and
jge
mov
cwtl
mov
aas
test
and
pop
cld
mov
mov
outsl
fsubr
lock
ja
loop
inc
inc
push
ret
cmp
sbb
mov
out
pop
add
dec
mov
sahf
loopne
mov
popa
mov
cli
ds
test
push
jno
in
cmpsl
and
stos
insb
mov
movsb
test
adc
lods
mov
bnd
add
test
sub
add
fs
xor
call
not
lea
mov
ja
icebp
jmp
mov
mov
pop
sahf
cmpsb
out
in
jnp
or
xchg
add
push
and
fldenv
dec
push
popa
jmp
add
pop
loope
jnp
rcr
stos
imul
lds
popa
pushf
adc
out
push
ja
or
fidivs
xor
jne
add
cmp
inc
and
dec
sbb
ss
imul
les
bound
add
pop
adc
shll
stos
loope
idivb
mov
stos
and
inc
push
xchg
push
orb
sti
add
add
jp
xchg
enter
jo
mov
icebp
dec
sub
mov
mov
cmp
sub
xchg
js
out
icebp
jp
pop
repz
add
imul
xor
mov
push
and
xor
cmp
adc
jne
dec
lahf
mov
sbb
das
ja
and
aaa
or
cltd
aas
mov
imul
sbb
dec
pop
loop
inc
dec
jne
out
test
jge
mov
adc
mov
pop
or
iret
mov
or
pop
call
iret
and
adc
adc
in
cmpsl
dec
dec
repnz
orl
gs
in
or
mov
jmp
xor
pop
or
xor
pop
ret
jnp
shrb
pusha
xchg
add
dec
loopne
mov
cmpsl
xchg
pop
sahf
cmpl
dec
jns
cmp
mov
hlt
aas
sbb
enter
pop
mov
sub
loop
push
lods
cli
push
cmp
pusha
lods
pop
sti
xor
outsb
lods
shl
push
xchg
aas
push
jl
sub
sub
ret
stc
lret
fwait
xlat
out
stos
sbb
pop
cld
push
cld
add
mov
iret
test
adc
xchg
or
loop
mov
pop
out
scas
and
push
popl
mov
sbb
loop
cmpsl
adc
clc
mov
call
mov
sub
jae
in
les
adc
xor
daa
imul
repz
lods
lret
repz
nop
cltd
popf
mov
push
test
mov
imul
xchg
ficomps
inc
mov
sub
push
arpl
sbb
es
and
cmp
int3
add
leave
xlat
mov
pop
shll
sbb
in
fwait
dec
jp
aaa
std
dec
iret
adc
rcrl
nop
sqrtps
add
sub
testb
mov
bound
pop
jg
adcl
xchg
push
aam
ret
and
inc
dec
or
inc
mov
or
fucomip
imul
out
mov
adc
add
sahf
nop
shlb
xchg
add
pop
mov
mov
int
dec
test
push
or
add
adc
in
xchg
popf
lret
or
out
in
je
int
enter
out
xchg
pop
enter
push
add
ret
cltd
sub
movsl
xlat
in
lds
dec
bound
dec
adcb
xchg
loopne
iret
adc
scas
call
cld
add
clc
stos
push
xchg
fmull
push
or
ficompl
mov
jecxz
out
cltd
rol
add
inc
xor
fiaddl
je
sbb
lods
and
push
pop
ds
sbb
push
pop
aaa
daa
cld
add
aas
sub
add
loope
push
add
push
push
lcall
push
ffreep
jle
push
xchg
outsl
xchg
mov
dec
jmp
dec
js
add
pop
inc
dec
loope
pushf
jae
scas
pop
lods
or
leave
mov
lahf
sbb
xchg
insl
xchg
or
mov
xchg
mov
das
xor
xor
fnstsw
subb
adc
subb
or
xchg
js
mov
divb
lret
pop
sub
lds
mov
dec
les
pusha
mov
repz
int3
sub
testb
test
push
divb
dec
inc
jne
repz
xchg
cmpb
sbb
xchg
pop
in
push
dec
adc
jnp
dec
fdivs
mov
mov
jp
les
lret
inc
pop
ja
jmp
jge
sub
stc
mov
or
mov
fisubrl
sbb
gs
inc
ret
fcmovbe
js
lock
das
nop
add
std
scas
iret
insb
sahf
cmpsb
int
cmpsl
orl
sub
test
jns
fwait
incb
shll
data16
xchg
in
mov
xchg
dec
jl
shlb
dec
lds
dec
arpl
mov
dec
repnz
add
and
cmp
int3
pop
mov
cmp
mov
int3
aam
jae
xor
hlt
or
test
testb
adc
ficoms
btc
jge
stos
mov
add
dec
mov
push
sub
push
inc
sub
fimull
icebp
mov
push
pop
scas
arpl
sbb
repz
or
mov
sub
lods
mov
loopne
cmpsl
lock
loope
out
xchg
adc
jge
adc
cmp
inc
roll
loopne,pt
inc
and
fcomps
cli
int3
push
jne
ret
mov
or
icebp
ror
and
xor
xor
dec
sub
bound
pop
lods
sbb
inc
or
push
rorl
rcr
cli
sub
sub
lods
mov
shrl
movsb
inc
sahf
dec
xor
adc
rolb
cmp
cmp
pop
mov
ljmp
cmp
adc
pushf
or
jle
mov
popf
outsb
xchg
mov
xchg
fidivl
enter
dec
fidivrs
fwait
or
sub
push
cwtl
mov
imul
lock
das
push
mov
sub
xor
shll
mov
cmp
add
scas
mov
lds
mul
in
stos
mov
out
add
pushf
and
lret
arpl
shl
sbb
les
sub
mov
mov
scas
xchg
or
add
psllw
int3
mov
je
fwait
mov
data16
imul
mov
cmp
pop
push
push
scas
mov
hlt
pop
jnp
xchg
mov
pop
push
jecxz
push
push
sti
mov
pusha
inc
adc
xchg
pop
out
ljmp
pop
shlb
movsl
addr16
scas
lods
xor
fisttps
mov
xor
iret
xchg
daa
cmc
test
cmp
pusha
lahf
int3
and
push
std
pop
adc
jmp
call
cmp
stos
add
out
inc
nop
add
sbb
scas
ja
pop
push
pushf
jb
negl
add
test
push
test
push
das
in
mov
insl
adc
arpl
dec
add
jbe
and
sahf
addr16
xor
mov
mov
push
arpl
sub
ficompl
dec
mov
mov
testl
popa
data16
cmpsb
push
sbbl
dec
push
sub
adc
pushf
adc
cmp
mov
call
aam
sub
adc
adc
leave
mov
mov
cmpsl
rcl
xlat
push
xorl
aad
es
xor
cmp
add
out
inc
das
std
mov
cmp
fsubs
dec
dec
inc
int3
or
push
dec
lea
mov
cld
rol
iret
mov
mov
test
rcl
mov
inc
push
mov
cli
sbb
xchg
xor
xchg
cmpsl
fisttpl
jle
aaa
dec
ja
xchg
mov
add
sbb
xor
imul
shll
push
and
popf
fwait
push
insl
or
dec
pop
mov
std
lock
jg
andl
arpl
lahf
pop
inc
jns
aaa
sbb
loopne
xchg
sbb
pop
mull
xchg
aam
xor
pop
push
sub
movsl
js
repnz
xor
cmp
push
mov
mov
gs
push
push
inc
cld
ret
mov
dec
repnz
shrb
inc
into
adc
and
jge
fisttpl
mov
inc
sub
aaa
jo
rclb
pop
jae
mov
xor
ficompl
or
jp
xchg
inc
lods
cmovp
mov
jbe
fidivs
out
cmp
and
pop
xchg
add
rcrl
aad
push
push
scas
jg
xlat
mov
cmp
mov
adc
icebp
xchg
aas
int3
lods
int
or
dec
out
scas
push
movsl
lods
js
inc
addr16
inc
repnz
mov
idiv
sbb
pop
insl
xchg
popf
gs
lret
testb
int
mov
xor
movsb
inc
add
pop
and
adc
je
aam
stos
push
add
mov
sub
mov
ja
sbb
sbb
aam
jecxz
daa
cmpsl
ss
sbb
mov
sahf
pop
xor
aad
cli
jno
cltd
jb
dec
or
out
cld
pop
dec
mov
cltd
push
sbb
pop
pop
roll
inc
and
inc
mov
jg
lds
sahf
test
sub
daa
imul
lds
ljmp
or
jl
iret
push
popf
ss
sarb
push
and
das
mov
ss
add
pop
adc
lds
rorl
cmp
cmp
outsl
iret
cmp
mov
test
dec
mov
sub
rclb
in
cmpl
push
rcrl
scas
loope
push
push
push
jne
cmp
std
sbb
cmp
xchg
jae
jae
idivb
xchg
sub
lcall
or
pmaxub
gs
and
xchg
or
sub
ret
or
in
xchg
pop
ret
mov
sub
jns
jne
repz
mov
or
les
shlb
call
push
bound
js
stos
test
cmpsb
jle
stc
testl
arpl
cmp
add
int3
pushf
fmul
iret
or
sbb
je
sub
xor
push
and
xor
aam
push
lea
adc
adc
popf
inc
and
dec
sub
jge
loope
nop
inc
push
sub
js
int3
sbbb
mov
add
pop
clc
dec
hlt
and
std
shlb
adc
xor
push
std
lret
daa
ljmp
or
push
push
dec
xor
mov
xlat
mov
inc
mov
xchg
push
cltd
in
in
mov
push
or
dec
out
and
mov
add
mov
pop
dec
les
gs
ljmp
sbb
rolb
in
testl
ds
stos
adc
jns
testl
cltd
sbb
mov
fldcw
loopne
sub
xchg
jecxz
insb
shr
std
mov
xlat
mov
cmp
fwait
cmp
cmc
lds
enter
dec
mov
push
out
push
idivl
fimuls
cmp
push
push
mov
cwtl
into
in
test
ffree
lods
fs
and
pop
movsb
adc
es
mov
push
and
dec
js
outsl
mov
popa
mov
inc
insl
jecxz
adc
je
fnstenv
in
mov
int3
inc
fs
dec
xor
sti
call
dec
pop
leave
and
push
add
fcmovbe
stc
push
add
fcomps
push
mov
movsl
fadd
movsb
pushf
push
adc
sbb
mov
sbb
popa
in
gs
std
xchg
or
mov
xchg
sbb
ja
mov
test
and
fildll
xchg
push
shrb
pop
mov
daa
pop
clc
shl
xchg
mov
in
loopne
dec
push
jb
fsincos
je
cmp
sti
jne
cmp
rcll
sub
aaa
daa
mov
sti
pop
lea
shlb
dec
dec
in
movsl
daa
mov
popa
leave
aam
pop
sub
loope
push
add
incb
mov
mov
insb
mov
out
inc
push
mov
push
imul
jb
xchg
loop
add
data16
dec
mov
pop
lods
xor
pop
and
xchg
and
rol
jae
hlt
add
xchg
push
mov
and
out
mov
in
mov
arpl
in
mov
ljmp
fstps
sarl
jmp
add
ja
dec
cmp
icebp
cld
mov
pop
xchg
push
add
enter
cmp
xchg
jne
jnp
sbb
insb
loope
jno
std
lcall
mov
jne
bound
aaa
imul
stos
sbb
pushf
pop
nop
xchg
fcomps
mov
push
mov
jb
shll
cli
push
sub
das
xchg
sbb
lret
dec
or
out
mov
xor
out
pop
jg
pop
cmc
xor
push
push
clc
out
cs
xchg
outsb
das
cmp
or
cmpsl
inc
es
jae
pop
cltd
jae
pop
lea
xor
subps
fst
addr16
hlt
sarb
push
xor
mov
fcoms
push
jecxz
jno
and
rcrb
jo
out
xchg
mov
cmp
pop
push
xor
cmp
shrb
xchg
sbb
sub
fildl
mov
adc
scas
add
dec
cmc
jecxz
out
xlat
fs
stc
push
imul
xchg
lret
movsb
dec
fucomi
adcl
cmc
js
sbb
ljmp
into
or
lock
push
add
sub
xchg
and
into
stc
sub
outsl
and
and
mov
test
mov
scas
jmp
mov
cmc
in
xor
push
xchg
cwtl
fwait
mov
dec
ret
in
sub
imul
cmpl
fs
pop
mov
sti
pop
int3
sub
jae
and
pop
pop
iret
les
and
hlt
jo
loop
jo
repz
add
push
xchg
xchg
enter
out
fadds
insb
mov
cli
sub
out
repz
push
add
jg
aas
lcall
test
lahf
in
push
fiadds
ret
pop
xor
pop
and
lods
xlat
pop
or
xlat
adc
inc
jp
push
pop
add
lock
lds
jmp
je
arpl
sbb
sbb
sahf
cmp
mov
es
push
aas
sbb
mov
and
sub
sub
fs
pop
xchg
std
jno
xlat
cmpsl
push
lahf
in
mov
inc
sbb
packuswb
mov
jns
mov
sub
and
stos
ret
loop
add
sbb
test
mov
mov
insl
push
int3
out
aad
cmc
push
xor
lock
test
or
and
out
fdivs
xorl
pop
lea
sub
aad
add
jne
dec
lock
inc
xor
out
xchg
mov
and
repnz
loope
inc
dec
jge
sub
push
loop
dec
adc
xchg
scas
jl
nop
outsl
adc
inc
les
hlt
lret
mov
dec
sub
mov
inc
pop
xorb
and
test
inc
imul
out
jle
loop
pop
pop
mov
or
jmp
sbb
jle
in
imul
fadds
rcr
mov
out
pushf
rcrb
sbb
push
loope
mov
xchg
xor
scas
pop
imul
stc
jl
cmp
ds
pop
inc
mov
xorps
imul
sbb
push
xor
fwait
in
push
jl,pn
jl
cmp
cmp
mov
sbb
add
subb
or
pop
std
xchg
push
imulb
mov
ljmp
mov
mov
aaa
es
or
dec
loopne
outsb
or
out
movsb
push
cld
or
scas
xor
cmp
mov
dec
or
jns
inc
xchg
add
imul
hlt
mov
imul
mov
in
cmp
icebp
mov
stc
stos
push
and
divl
aad
rcrb
sets
shrb
sbb
sub
pop
xor
cmpsb
lds
or
repnz
mov
sbb
sbb
mov
addl
rcll
mov
dec
enter
or
xor
and
out
cs
lea
mov
sub
inc
call
inc
jmp
jp
mov
div
jl
sbb
hlt
xchg
and
orl
scas
repnz
inc
xorb
testl
fscale
adc
jns
in
add
sbb
inc
mov
sbb
idivl
dec
xchg
pushf
test
push
cmpsb
loopne
pop
arpl
cmp
mov
jne
out
js
cwtl
xor
push
insl
out
push
sub
push
xchg
aaa
popf
xchg
mov
arpl
les
aam
testl
add
test
jecxz
mov
xchg
xchg
lock
dec
cltd
imul
mov
andb
pop
or
stc
out
xchg
xchg
sub
std
mov
dec
push
or
pcmpeqw
ja
sarl
repz
int
cmc
mov
iret
add
mov
push
shll
roll
xchg
jle
test
outsb
mov
mov
mov
sbb
unpcklps
addb
xor
push
mov
addl
test
sub
mov
cmpsb
rorl
pop
cmpsb
lods
mov
or
mov
xchg
ljmp
or
stc
inc
xor
hlt
mov
cmpsb
adc
sahf
cmc
sahf
pop
inc
arpl
test
inc
xor
arpl
bound
fdivr
or
xchg
xchg
mov
cli
xchg
push
xor
scas
mov
fstpt
repnz
inc
cmpsl
pop
scas
xchg
in
push
pusha
mov
cld
out
xor
sub
fistpll
shll
adcl
aam
aas
rcll
sub
aam
stc
sub
inc
xchg
shr
jmp
ds
fbstp
inc
dec
xchg
xchg
int
pop
and
clc
test
sbb
rcll
dec
push
mov
lcall
pusha
je
dec
jmp
jl
loop
stos
and
jae
bound
jp
or
dec
or
or
pushf
cmp
sbb
mov
shll
cmp
out
mov
sbb
jmp
fsin
mov
or
mov
mov
sbb
test
add
loop
xlat
decb
add
lods
adc
mov
mov
scas
push
add
push
out
aas
xchg
cmp
sub
sti
cmp
es
mov
sub
push
pop
std
and
adc
sbb
pop
pop
pop
sahf
push
or
movsb
adc
out
dec
push
int
cs
xor
add
mov
or
xchg
dec
out
jp
cmp
mov
inc
add
popa
mov
jge
icebp
dec
mov
rcrb
pushf
sets
cmp
xchg
test
add
push
pusha
in
notb
mov
test
dec
xchg
mov
popf
addr16
mov
aam
inc
jnp
stos
xor
repnz
test
stos
or
dec
adc
mov
pop
cmp
mov
js
pop
and
test
mov
jae
test
cmp
popf
lods
outsb
mov
add
loop
cmp
ret
loope
or
add
xchg
mov
testb
xchg
loop
lahf
inc
cmc
mov
sub
mov
inc
inc
adc
nop
sub
sbb
mov
adc
rclb
fwait
jnp
rcrl
jno
xor
push
pop
push
mov
xor
mov
out
aad
cmp
stos
mov
xchg
dec
outsl
bound
or
sbb
int3
imul
jns,pn
pop
mov
imul
ljmp
mov
and
cmp
negl
push
inc
mov
daa
repz
or
loope
cmp
imull
inc
xchg
scas
js
repnz
pop
pop
add
inc
sarb
add
xor
idivb
les
int
aam
add
ss
cmp
out
xchg
add
xlat
xor
call
pop
lds
sub
mov
pop
push
push
cmpsb
sbb
outsl
in
test
jb
push
ja
movl
loope
out
and
pop
sbb
aad
adc
adc
push
mov
push
inc
pop
push
or
push
daa
fsubrl
push
mov
mov
lret
das
scas
movsb
jo
iret
lea
cmpsl
xchg
popa
sub
lea
lock
fsubrl
adc
loop
repnz
scas
jmp
dec
addr16
outsl
sti
lea
sbb
adc
cmpsl
xor
xor
scas
mov
or
cmp
and
loop
je
movl
loope
mov
fadd
sub
adc
out
inc
call
pop
outsl
adcb
in
test
scas
add
cmpsl
jge
in
cmp
ljmp
int3
mov
jmp
stc
pop
cmp
add
xor
push
std
sti
lret
push
sub
test
cltd
jp
sub
cmp
xor
jb
imul
add
sahf
addl
fwait
cmp
xchg
mov
jo
xchg
lock
mov
outsb
pop
enter
xchg
xor
or
mov
sbb
xlat
int
jmp
shrl
movsl
push
ljmp
je
shrb
loop
cmp
mov
pop
bound
adc
scas
adc
fdivl
lods
sub
add
rcll
lcall
dec
xchg
mov
add
stos
add
sbb
pop
adc
jnp
sub
mov
shlb
ss
int
inc
stos
fistl
pop
and
into
scas
mov
roll
jnp
sub
push
cmp
aas
stc
jl
push
mov
fisttps
xchg
adc
sar
fs
mov
mov
loopne
iret
mov
jl
subb
out
lods
jo
cld
in
lods
sbb
ficoms
adc
repnz
mov
jge
dec
xor
push
lret
push
nop
lock
mov
xchg
sub
pop
sbbl
icebp
inc
dec
es
fbstp
es
or
inc
mov
pop
pop
je
sbb
mov
xor
mov
int
outsb
rcl
jecxz
or
cmc
out
sbb
inc
adc
aas
add
or
adc
or
jg
mov
in
aas
jp
ja
mov
fisttpl
lcall
push
mov
adc
push
cltd
jle
fsubrl
in
andb
mov
pusha
in
add
mov
adc
and
lahf
stos
xchg
jb
push
push
mov
sbb
and
mov
xor
stc
xchg
sbbb
das
add
enter
mov
push
scas
cmpl
dec
stos
fbld
cmp
pusha
scas
js
mov
sub
shrl
rolb
jp
and
mov
test
cs
incb
xor
cmc
imul
stos
rorl
pushf
je
xchg
and
push
pushf
jb
inc
ret
cmp
adc
fstpl
rcrb
cli
lods
insl
outsl
mov
pusha
jecxz
sub
int
std
rcl
mov
push
mov
cmpsb
or
stos
shrb
ljmp
xchg
call
nop
mov
sbb
lock
add
call
mov
lds
push
aaa
data16
scas
lahf
pop
mov
les
lds
inc
sbb
adc
nop
jmp
mov
ljmp
insl
add
cs
add
jmp
pop
test
push
xor
lods
adc
xchg
loopne
xchg
mov
sti
adc
sub
outsl
aas
or
loop
aas
jg
adc
cmp
push
rorl
into
stos
hlt
ljmp
or
iret
repnz
inc
mov
push
and
add
adc
xchg
outsl
xchg
add
into
pusha
push
cmp
mov
stc
daa
mov
sub
stc
mov
lret
mov
push
xor
xor
add
movsl
add
daa
inc
in
inc
jl
adc
push
add
push
jno
sub
dec
add
lahf
cltd
or
out
push
inc
push
adc
xchg
xchg
add
daa
pop
rolb
pop
mov
sti
or
sub
rcl
fstpt
movsl
cmpsl
imul
pop
lret
movsl
dec
mov
sub
push
outsb
dec
adc
push
push
xor
xor
ljmp
out
jno
out
pop
dec
cld
outsb
repnz
js
mov
shll
xchg
test
jno
repz
movsl
stos
and
int
pop
cmp
adc
loope
dec
add
outsb
mov
scas
pop
sbb
xor
scas
ljmp
xchg
sahf
push
ret
loope
cwtl
mov
or
into
lret
sbb
xchg
and
dec
jmp
xor
mov
push
add
popa
cmp
pop
mov
test
add
dec
lss
push
sbb
add
dec
icebp
jle
xor
xor
aad
test
jne
shlb
adc
jb
std
mov
in
mov
xor
add
fstl
in
lret
lahf
adc
cmp
pop
popa
add
pop
scas
movsl
jl
cli
sbb
pop
dec
in
movsl
jecxz
cmpsl
mov
lea
inc
pop
inc
fcoms
ja
arpl
push
sarl
sahf
imul
mov
lea
rcrl
arpl
mov
xor
js
shrb
stc
fs
adc
icebp
addr16
imul
xor
and
mov
int3
arpl
stos
sbbb
out
cs
fwait
xchg
lahf
sbb
mov
movsb
push
sub
jo
push
test
clc
cmp
or
fldz
push
xchg
pmaxsw
inc
add
int
cmp
and
out
pusha
jb
xchg
mov
mov
jl
add
lds
std
outsb
pop
js
ret
mov
ss
jl
addr16
cmc
cwtl
fists
mov
cmp
je
jl
inc
xor
mov
shlb
outsl
inc
loopne
iret
cwtl
das
pop
adc
sbb
hlt
mov
inc
lret
push
xchg
cld
push
cmp
xor
xchg
jno
outsb
mov
jecxz
xchg
inc
push
add
or
sub
sti
mov
js
movsl
adc
rcrb
lcall
push
pop
cltd
pusha
inc
xchg
idivb
and
mov
mov
pop
movsl
imul
pop
inc
incb
aad
comiss
xchg
ljmp
pop
cmpsb
and
data16
add
call
lret
lea
addr16
push
insl
ds
shll
add
sahf
add
push
mov
enter
cld
add
aam
lret
data16
rolb
neg
adc
lods
fwait
xchg
fmull
shll
sarl
and
sbbb
scas
mov
lock
sub
mov
fldl
pop
outsl
ds
insb
sub
loope
and
aaa
push
pushl
cmpsl
mov
cmp
fildll
rcr
sarl
vucomisd
sub
push
pop
shrb
sub
lcall
dec
ret
and
ljmp
and
out
mov
ja
adc
clc
in
xchg
mov
fstpt
add
sbb
xlat
lahf
jle
mov
lret
addr16
sbb
std
sub
popf
jg
sbb
dec
dec
repz
dec
mov
cmp
pop
ss
mov
ret
test
in
cld
jo
cmp
loopne
mov
cmp
adc
fdiv
xchg
xor
testb
stos
push
push
mov
pusha
nop
jmp
shll
mov
xor
cltd
inc
and
bound
mov
sub
sarb
std
jns
push
rorb
add
push
mov
jae
lds
mov
mov
ja
and
sub
out
hlt
test
aas
je
pop
decb
repz
je
dec
adc
out
push
pop
sbb
mov
inc
out
out
repz
jecxz
pop
test
leave
cmp
inc
test
aaa
aam
or
jge
xchg
mov
mov
mov
ss
adc
xchg
push
push
stc
push
es
xor
test
lret
push
mov
mov
cltd
inc
pop
icebp
jge
test
sbb
nop
xor
nopl
sbb
out
les
mov
fneni(8087
mov
or
roll
stos
inc
insl
pop
sbb
xor
jbe
ss
dec
xchg
adcb
lahf
lcall
les
ret
std
loopne
pop
test
mov
lods
stos
enter
test
lds
fwait
aad
add
adc
adc
pop
je
fcmovbe
mov
adc
cld
jo
pusha
lds
cmp
out
and
ja
ret
cmp
xor
xor
dec
cmp
mov
jb
out
rcrb
enter
movsb
shl
bnd
sub
stc
pop
stos
inc
movsl
int
push
subl
adc
fs
lret
push
jo
cs
shl
fistps
adcb
and
arpl
push
ljmp
inc
push
pop
test
fimuls
sbb
inc
adc
stc
adc
dec
pop
mov
subl
popf
sub
mov
sub
push
mov
lods
pop
test
bound
dec
sub
and
cmp
lods
pop
push
test
inc
mov
xorl
insb
sub
or
pop
sahf
jnp
mov
popa
cmc
xor
je
lds
dec
mov
orl
hlt
out
iret
mov
fs
pusha
out
andb
insl
xor
push
xor
movsl
jge
test
faddl
cmp
aam
incl
push
outsl
lods
mov
cld
xchg
inc
mov
lds
pop
in
inc
jnp
dec
pop
sub
fdivr
movb
les
sbb
inc
push
cld
insl
cmp
loop
leave
repnz
sub
out
pop
cmpl
mov
jmp
push
add
sbb
jmp
jo
dec
mov
pop
enter
aaa
arpl
inc
cmp
out
out
in
frstor
add
lods
hlt
les
inc
push
adc
dec
repnz
sub
sbbl
push
mov
inc
cmpsl
push
add
mov
inc
push
ljmp
mov
scas
ret
aad
sub
movsl
jno
lds
hlt
ljmp
mov
jmp
lods
cs
dec
lods
lret
je
negl
push
cwtl
clc
xor
loope
xor
and
add
adc
push
loope
dec
xchg
aam
icebp
outsl
jne
nop
cli
mov
mov
fsub
ljmp
mov
insb
sbb
sub
loope
push
orb
push
add
das
pop
mov
push
jnp
fwait
pusha
mov
test
pusha
sub
cs
push
push
outsb
lcall
cmpsb
mov
pop
sub
dec
adc
push
ficoms
std
out
fcoms
xchg
sub
cmp
pop
inc
inc
cwtl
add
scas
pop
insb
shl
cwtl
sbb
mov
lea
mov
inc
in
inc
jle
jo
cld
jl
xchg
xor
cwtl
jo
dec
push
inc
sub
pop
xor
mov
adc
dec
imul
lds
mov
pop
push
jno
loopne
push
pop
push
test
fimuls
dec
mov
or
rcrb
movl
subb
pop
jg
inc
sub
add
xchg
add
xor
pop
dec
in
popf
popf
shrb
cmp
mov
ret
ss
aas
lods
js
fcmovnbe
in
loop
dec
daa
idivl
and
cmpsb
sbb
jno
mov
sbbb
cmp
add
push
test
cmp
pop
fdivl
lods
imul
xchg
nop
ja
movsl
pop
add
cmp
cmp
int3
dec
sarb
test
inc
jno
mov
or
mov
push
mov
mov
push
cli
sub
pop
jne
fidivs
add
sbb
ds
testb
jbe
mov
daa
cmp
mov
cmp
int
into
mov
fwait
dec
pop
pop
inc
adc
testb
loopne
sub
mov
xchg
jo
inc
pop
lret
sbb
movsb
aad
and
test
pop
push
sbb
sbb
cmpsb
ja
dec
and
or
pop
in
lcall
mov
lret
xorl
out
sub
test
insb
aam
xchg
test
outsl
push
cmp
pop
adc
xor
into
data16
icebp
mov
fld
xchg
repnz
cs
xchg
icebp
jb
and
out
jmp
fstpt
jl
cli
xor
mov
std
leave
insb
popa
mov
lods
dec
insl
pop
inc
cld
movsb
add
jmp
pop
scas
or
je
aas
mov
jns
scas
inc
mov
adc
mov
inc
notb
cmpb
cli
jo
jg
sub
cmc
clc
cs
shrl
push
mov
push
or
inc
leave
jecxz
bound
jge
xor
xor
xchg
int
mov
fwait
mov
sbb
pop
aas
push
mov
push
xor
mov
cmc
dec
fs
imul
xchg
mov
xor
xchg
cmpsb
je
pop
push
inc
dec
int
push
push
sub
cld
mov
mov
out
mov
cltd
imull
jge
lahf
out
xchg
lahf
and
sub
inc
jmp
pop
stos
js
xchg
cli
jb
inc
jno
popf
cmp
mov
pushf
and
push
sbb
mov
adc
call
das
cld
idivb
add
xchg
and
cmpsb
jl
sbb
sub
adc
push
inc
sub
sub
xchg
ret
add
jge
fdivs
mov
push
add
jge
cmp
jae
dec
test
imul
aaa
sub
mov
jne
xlat
ljmp
sub
or
dec
rcll
addr16
cmp
leave
pop
out
fsubl
adc
bound
outsl
xor
or
xor
pop
mov
inc
add
js
sbb
test
xchg
shll
cmp
jecxz
dec
lea
sub
fbstp
int
push
mov
scas
out
add
pop
dec
pop
ja
pop
cmc
push
inc
cli
shrb
pop
inc
dec
adc
adc
xor
mov
and
andl
sbb
in
xchg
shr
or
push
xchg
xchg
cmp
cmp
aam
cltd
dec
mov
inc
sbb
mov
jmp
lcall
aas
mov
cwtl
pop
fdivs
mov
pusha
xchg
popa
mov
dec
jp
xor
loop
add
cmpsl
out
mov
push
dec
jno
mov
xor
subb
mov
mov
adc
inc
ja
mov
fcomi
inc
and
in
insb
pop
pop
jmp
ss
or
mov
jl
cli
and
hlt
inc
int
sti
lret
adc
stc
dec
sahf
pusha
leave
loop
icebp
pop
aaa
cmp
mov
or
adc
dec
push
sbb
push
push
movsl
sub
ret
fdivl
rorb
jecxz
and
xchg
sub
add
mov
cld
outsb
push
push
ret
mov
in
imul
dec
dec
das
cs
fadd
mov
pop
dec
rorb
loopne
cltd
divps
push
inc
ss
mov
gs
fnstenv
jne
pop
xchg
pop
pop
sbb
andb
jecxz
adc
or
movsb
fistpll
jmp
ficompl
ret
sbb
sbb
jg
push
xor
cmp
cld
fstps
pop
insl
adc
jno
int
cmc
sbb
jnp
cmp
xor
fcomps
arpl
jmp
cmp
push
push
test
or
jne
push
aaa
out
inc
ret
lcall
add
es
mov
mov
data16
imul
add
in
xchg
mov
test
sbb
adc
push
ret
popf
add
out
lcall
pushf
mov
mov
or
cld
push
add
mov
outsl
cmpl
xchg
push
lods
rolb
fstpt
pop
in
lods
push
insl
adc
sbb
repz
mov
jne
cmp
xlat
loope
jp
imul
mov
jg
jb
dec
push
xchg
pop
movd
mov
test
ds
dec
ss
xchg
jns
jb
inc
stos
push
pushf
fs
loope
sbb
hlt
mov
xchg
sub
sahf
push
out
js
cmc
adcb
jmp
popa
inc
cmp
pusha
mov
xchg
fmuls
push
cld
lret
stos
inc
sbb
sub
pop
jne
dec
and
adc
jg
add
out
dec
jp
ficoml
cmc
in
mov
mov
mov
xor
leave
mov
xor
popf
pop
add
inc
mov
jmp
sub
in
adc
shlb
xchg
inc
hlt
outsb
mov
inc
cld
std
cltd
fxch
jmp
insb
outsl
loopne
dec
push
pop
mov
in
mov
neg
sbb
fidivl
dec
adc
sub
inc
sub
mov
mov
mull
andb
jl
or
cwtl
and
dec
dec
andb
test
rcrb
int3
pusha
jl
dec
dec
popf
das
je
outsl
pop
xor
xchg
add
cmp
orb
xor
test
mov
int3
movsl
mov
jae
sbb
lret
pushf
movsb
stos
popl
out
imull
mov
insl
push
ss
les
mov
inc
rorb
inc
xchg
lcall
call
popa
scas
ja
dec
mov
push
inc
fcomp
inc
ja
mov
xchg
stc
cmp
fisttps
jle
cmp
or
imul
mov
negb
pop
jl
imul
dec
out
sub
cmc
pop
xchg
imul
adc
outsb
clc
jp
imul
and
jnp
and
test
xchg
dec
jecxz
or
and
xlat
and
adc
out
into
loope
adc
out
jns
or
stc
and
jg
xor
pop
aam
xchg
sub
out
sub
jns
mov
mov
and
mov
cmp
clc
adc
add
call
cmp
cmpsl
enter
jne
pop
loopne
scas
push
outsl
jne
loope
xchg
xchg
inc
data16
jecxz
fistpl
or
xchg
lock
dec
js
subb
push
add
fistpl
sar
pop
mov
pop
idivb
ljmp
and
inc
test
nop
loopne
repnz
int3
iret
ret
fildl
adc
arpl
ja
push
cmp
inc
jbe
and
push
ljmp
rolb
sbbb
in
push
jno
subb
push
lea
ss
xor
mov
rclb
in
in
pop
or
out
inc
out
pop
shr
mov
outsl
sarl
cmp
in
test
lret
pop
sbb
out
mov
das
cmp
cmc
inc
xchg
mov
pop
push
sub
out
mov
push
push
punpckldq
push
stos
inc
mov
mov
and
jo
mov
push
pop
icebp
xchg
js
aaa
int
pop
lods
sub
mov
in
movsl
call
loope
in
mov
add
mov
sub
jbe
int3
push
dec
and
or
lret
add
ja
and
test
sbb
data16
popf
cmpb
xor
movsl
cmp
scas
jo
rol
inc
dec
mov
or
ret
cmpsl
and
sbb
nop
jg
cli
dec
pop
mov
out
stc
jmp
add
jl
or
hlt
mov
fcos
dec
push
pop
mov
xlat
ljmp
fimuls
adc
mov
popf
xchg
cmc
jge
test
cltd
dec
xchg
outsb
jl
mov
faddl
and
inc
mov
pop
add
cmp
adc
shr
shll
jmp
es
pop
cli
jl
sub
sub
popa
push
push
pusha
cmpsl
push
push
sbb
fcomps
cmp
push
jg
jge
enter
and
dec
nop
in
in
jp
movsb
push
jl
push
mov
sbb
repz
xorb
and
and
xchg
cmpsl
sbb
in
xor
push
ds
jge
pop
push
arpl
addr16
fists
fcmovnu
movsl
hlt
aaa
sub
jmp
arpl
imul
movsl
movsb
adcb
and
ret
pop
or
shrb
cmp
outsb
adc
push
jl
test
fdivrs
push
sub
inc
mov
pop
cmp
and
pop
addr16
pop
imul
xlat
movsl
push
mov
icebp
mov
cwtl
ret
add
nop
fisttpll
daa
shll
push
insl
es
cmp
and
les
arpl
fnstcw
into
leave
ss
lahf
push
mov
loope
lcall
adc
nop
int
nop
fsubp
or
in
mov
mov
aaa
push
mov
cmc
rcrl
push
pop
cltd
sub
ror
in
jle
pop
mov
ss
outsl
cld
push
push
sbb
in
out
lds
pusha
jle
push
fdivrl
aas
scas
rorl
ds
sti
mov
adc
sub
sub
outsl
pop
rcl
inc
sub
pop
mov
data16
sub
movsl
rcl
adc
dec
sbb
cmc
es
test
lret
dec
int
ret
test
push
js
mov
sbb
pop
xorl
out
das
add
data16
call
pop
pop
pop
dec
std
pop
out
or
aaa
daa
das
fisubl
pop
add
pushf
outsl
pop
sub
inc
movsb
mov
dec
mov
cmpsb
stos
lret
je
aaa
and
cld
movb
aam
pop
bound
enter
outsl
cmpsl
push
jbe
mov
and
out
std
addl
inc
int
popa
rcrb
mov
dec
jecxz
xchg
gs
pop
cmp
and
sahf
mov
cli
add
imul
inc
push
rolb
xchg
gs
clc
jo
pop
mov
xorb
inc
pop
adc
mov
or
cmp
add
loop
cmpsb
cs
xor
inc
stos
popa
cmpsl
push
or
or
and
sbb
mov
jo
add
out
push
pop
lea
pop
aam
cmp
in
mov
lahf
push
inc
out
das
in
jnp
mov
mov
stc
cmp
xor
in
dec
shl
aas
sbbb
or
cmpsl
out
mov
xchg
jbe
push
add
xchg
lahf
rclb
xchg
js
cmpsl
xchg
add
jmp
lea
stos
fsubs
cmp
push
imul
ja
xchg
call
push
sbb
pop
lret
pop
fcoms
sub
mov
ret
xor
cmp
insb
lods
loope
inc
mov
xchg
jno
icebp
adc
ret
nop
ja
mov
movsl
jbe
ja
outsb
xlat
fldenv
jb
cmc
pusha
jno
popf
jl
jae
push
shr
adc
daa
inc
sbb
out
xchg
and
xchg
loop
and
cmpsl
repz
shrl
mov
cmpb
xchg
popa
sub
dec
fiaddl
ret
adcl
lret
dec
add
lret
inc
push
push
inc
xor
or
push
sahf
jae
sbb
lods
lods
xor
in
fldl
daa
and
mov
insl
lret
adcb
xchg
imul
adc
repnz
insb
pop
cmp
pop
fsqrt
push
mov
add
mov
int
xor
mov
arpl
in
xor
insl
out
push
out
xchg
xchg
test
into
mov
shr
jl
dec
fdivrl
and
out
adc
scas
in
inc
cmc
mov
leave
icebp
push
js
fwait
test
or
pop
and
jae
fimull
cmp
add
nop
sub
fiadds
mov
adc
out
inc
xchg
bswap
or
mov
clc
mov
mov
xor
mov
mov
cli
aas
fmull
imulb
cmp
sahf
push
or
shrb
sbb
add
mov
adc
or
push
mov
mov
wbinvd
push
jbe
mov
pusha
and
adc
mov
sbb
push
jbe
movsb
add
or
dec
sahf
pusha
popa
movsl
mov
dec
hlt
mov
add
push
dec
jne
sbb
add
testl
pop
insb
test
or
lods
insb
jp
xor
jbe
lds
jge
mov
scas
gs
incb
mov
fstps
fwait
push
cmp
xchg
call
pop
clc
xor
xor
mov
push
dec
push
lods
lret
xchg
shll
add
dec
pop
dec
adc
push
daa
cmp
lods
cmp
stos
stc
push
sub
mov
xchg
aas
enter
mov
sub
call
daa
pop
call
daa
rcrb
aam
or
movlps
outsl
in
loope
inc
lods
xchg
cld
std
je
cmpsl
sahf
sub
xlat
fdivr
adc
inc
lret
lahf
ljmp
sub
push
loopne
mov
inc
scas
or
in
insl
xchg
mov
cld
rcrb
test
xchg
out
push
das
gs
or
enter
xor
sbb
xlat
push
divl
mov
sub
adc
jmp
sbb
out
or
or
es
sub
lcall
lods
test
cmpsl
mov
out
mov
adc
aas
lea
xchg
test
pop
imul
bound
and
inc
in
xchg
jecxz
popa
cmp
sub
push
jp
xchg
push
or
pop
imul
cmpsl
mov
test
push
mov
mov
cmp
mov
sbb
cmc
push
dec
or
add
adc
stc
push
enter
imul
or
push
xlat
aad
scas
pop
adcb
pop
xor
add
mov
dec
mov
in
loop
test
int3
mov
rcl
mov
out
mov
push
aas
xlat
fsubs
mov
daa
inc
cmpsb
aaa
and
sahf
cli
xchg
xchg
fwait
bound
sbb
daa
dec
xchg
dec
jb
adc
aad
push
mov
test
inc
mov
adc
push
push
push
pop
and
push
inc
jbe
inc
clc
mull
adc
mov
adcb
je
daa
jecxz
sbb
pop
pop
mov
cmpsb
test
dec
or
pop
negl
jbe
and
xchg
ror
test
popf
xor
les
out
lods
adc
push
dec
xlat
js,pt
insl
push
test
and
and
mov
jae
sbb
jns
jmp
cmp
xor
or
push
push
outsb
sbb
in
jns
and
mov
cmp
sub
xor
movsb
inc
dec
daa
or
xchg
daa
cmp
sub
in
inc
es
ret
xchg
dec
mov
out
jmp
sub
xor
xorl
outsl
mov
push
and
push
test
ja
push
mov
aaa
pusha
adc
xor
shrl
or
jecxz
in
leave
add
ds
or
ja
jge
or
add
cmpsl
dec
jg
inc
cmpb
or
sub
or
mov
cs
testb
mov
inc
stos
mov
cmp
fstps
and
xor
out
add
pop
inc
out
cmp
in
fistpll
js
inc
aam
push
pop
push
lret
test
or
push
mov
pop
nop
or
sbb
scas
test
jnp
mov
cmp
pop
dec
ds
arpl
push
push
mov
sti
aad
fcoml
or
jg
ljmp
xor
insl
jae
jl
ror
dec
add
fldln2
mov
fsubs
mov
lret
add
adc
mov
int
sbb
pop
fdiv
xor
mov
pop
popf
xorl
or
test
inc
imul
in
cmp
imul
movsl
int3
xor
aad
or
jmp
adc
push
add
jecxz
outsl
outsb
lret
cld
xchg
or
pop
in
pop
add
push
or
pop
dec
dec
dec
gs
dec
in
lock
fadd
pop
in
sbb
sbb
pop
ficompl
call
addr16
test
cltd
sbb
push
ss
cwtl
mov
push
dec
xlat
pop
jnp
test
addr16
fbstp
leave
xchg
adc
xchg
inc
ljmp
rcll
xchg
mov
les
xchg
pop
scas
jmp
icebp
mov
test
les
mov
repnz
and
dec
pmaxsw
inc
adc
aam
scas
push
push
adc
cmp
aas
in
mov
ror
cmpsl
xchg
imul
xchg
mov
pop
mov
lcall
loopne
mov
cmp
aaa
pop
adc
mov
aas
out
mov
sti
inc
lea
imul
lret
mov
aad
pop
data16
cmp
inc
xchg
add
dec
mov
ljmp
mov
cmpsb
cmp
pushf
cltd
mov
imul
sbb
in
enter
add
xor
out
sti
aad
daa
loope
push
repnz
subb
lret
pop
test
mov
jl
dec
sbb
cmpsb
lret
lahf
jg
jb
cli
or
daa
call
mov
mov
xchg
add
iret
or
cmpsl
dec
mov
sar
mov
or
leave
das
sbb
push
shrl
fadds
xlat
scas
push
jle
pushf
les
pop
mov
and
test
xchg
mov
ds
test
scas
arpl
jb
xchg
test
lods
inc
sub
xor
mov
loop
shlb
and
or
pop
or
in
mov
negb
mov
test
jl
mov
int
jle
push
xchg
cwtl
mov
outsb
iret
sbb
xchg
jmp
or
pusha
pop
iret
loop
test
pop
in
pusha
dec
dec
fwait
imul
jb
mov
cmc
call
movsl
fnstenv
aam
fisubs
loope
dec
xchg
mov
mov
orps
call
add
adc
mov
mov
imul
cmpsb
pop
adc
stos
xchg
push
mov
stos
imul
jge
ret
icebp
dec
loope
addr16
iret
movsl
mov
es
mov
lret
pop
loopne
data16
push
and
mov
dec
sbb
int3
dec
cmc
js
pop
stos
adcl
and
loopne
addr16
fwait
into
sub
sbb
or
out
shlb
test
outsl
mov
adc
mov
test
into
popl
movsl
inc
adc
cmpsb
sub
and
pop
dec
idiv
cmc
jbe
pop
inc
insl
sub
fptan
testb
mov
adc
outsl
popa
and
call
lock
sub
movsl
iret
lret
and
sbb
pop
lret
std
xor
aam
cltd
imul
es
jg
xor
push
mov
imul
mov
lahf
inc
add
or
test
mov
push
mov
push
xchg
mov
cmp
or
nop
int3
mov
loopne
xor
scas
lods
cwtl
adc
inc
iret
gs
arpl
cmp
ljmp
icebp
in
gs
fwait
adcb
push
pop
mov
ljmp
iret
stos
ja
sbb
shrb
stc
cmp
push
jne
fcomp
pop
iret
imul
jae
pop
jle
xlat
popf
or
in
aas
ret
stos
sub
jo
cmc
fidivl
outsl
imul
push
scas
out
adc
inc
mov
xchg
daa
dec
ror
iret
or
sbb
icebp
sbb
pop
mov
add
loopne
pop
mov
out
add
insl
pop
inc
mov
out
movsb
add
repnz
and
test
mov
xor
mov
jp
aaa
iret
sub
jnp
dec
insb
sub
sarb
lock
cli
cmpsl
fcomp
jnp
insb
rcrb
leave
push
out
sub
aas
stc
loopne
sbb
bound
cmp
or
inc
call
xorb
fimull
bnd
inc
cli
or
andl
insb
mov
ficomps
and
mov
out
loope
mov
push
in
das
inc
pop
test
fdivrs
or
jns
fdiv
adc
mov
sbb
mov
mov
push
dec
mov
push
and
xor
popf
into
frstor
sti
into
mov
mov
les
xor
daa
cli
jbe
mov
mov
ret
loop
mov
scas
xor
add
push
adc
loopne
add
xor
cwtl
pop
movsb
sub
aaa
xchg
pop
in
pop
jno
cs
and
iret
dec
inc
sub
pop
pop
xor
xor
rcll
mov
out
cmp
cmp
in
jo
jle
lret
lods
push
fistpll
mov
jl
xchg
ljmp
test
in
dec
out
daa
ficomps
idivb
mov
rcrb
xor
adc
dec
adc
lea
sbb
shrb
outsl
add
jle
mov
sbb
mov
lcall
mov
lods
stos
les
jno
ljmp
push
shlb
pop
xchg
ds
add
adcb
xor
mov
aas
popa
xchg
xor
lea
mov
lods
lret
xchg
mov
dec
sub
mov
cli
mov
movsl
pop
adc
or
stos
clc
and
cmp
enter
push
pop
adc
std
or
jne
movl
inc
nop
mov
adc
imul
mov
lods
mov
mov
pop
adc
xchg
pop
dec
pop
dec
xor
lahf
fimuls
imul
and
push
or
push
in
addb
fidivl
xor
faddl
lock
mov
rol
es
or
xchg
mov
in
jmp
cmp
xchg
cltd
daa
fsub
mov
inc
mov
jbe
aaa
cmp
push
scas
sub
sbb
cld
ja
mov
dec
out
xor
push
push
mov
aad
sub
nop
xor
imul
jno
cmp
in
les
sbb
nop
jmp
rclb
xor
ds
jecxz
pop
or
imul
push
xor
push
repnz
adc
imul
cwtl
jno
repz
pop
hlt
push
inc
idivb
imul
push
add
and
cs
add
cs
jge
scas
js
scas
fiadds
decb
xchg
xlat
cwtl
jnp
and
pop
enter
jb
icebp
xchg
outsl
out
push
jle
pop
ds
or
int3
dec
out
hlt
push
aaa
ja
push
mov
out
add
shlb
lahf
rolb
les
faddl
aad
out
daa
or
fcmovu
mov
cmp
or
sbb
ror
lods
and
enter
pusha
bound
cltd
out
fsts
aad
outsl
pop
fucomi
add
int3
inc
test
xor
shr
cltd
mov
sti
cmpsl
mov
cmp
cmp
sub
add
xlat
push
loope
scas
jo
mov
fildl
cmp
or
notl
addl
loope
mov
repz
or
popf
mov
mov
aam
pushf
es
inc
movsb
cmp
xchg
push
xchg
mov
ss
or
pop
dec
mov
adc
outsl
lods
sub
stos
fnstcw
cmp
lret
pop
insb
clc
jmp
mov
int
mov
ljmp
adc
push
xchg
sahf
das
fs
push
jno
cmp
cmp
cmp
sbb
scas
or
xchg
lods
icebp
xor
fisttpll
enter
cltd
out
push
push
push
jmp
andb
cmp
sarb
jnp
pop
mov
pop
and
insb
adc
or
sub
mov
sbb
and
outsl
or
in
stos
and
imul
popa
stos
shlb
pop
data16
pop
icebp
jnp
or
jmp
cmpsb
sub
jo
mov
data16
jb
in
sbb
inc
insb
in
lock
data16
testl
int
jnp
inc
cmc
rol
jp
dec
jmp
jne
mov
cld
ficoms
hlt
push
lds
jno
push
int
into
aad
xor
jb
push
cmpsb
mov
push
and
ss
sahf
stos
and
jo
test
hlt
dec
cwtl
rcrl
jmp
mov
jp
sbb
sti
sub
notb
xchg
dec
mov
jo
lods
sti
dec
das
sbb
mov
push
fimuls
rcrl
cld
sub
sub
in
out
outsl
outsb
or
pop
call
outsb
mov
cmp
push
sbb
push
cmp
sub
dec
and
jp
lods
dec
aam
test
das
int3
adc
jae
gs
inc
xchg
test
ret
inc
outsl
or
leave
fisubrl
outsl
sub
jecxz
negl
out
push
iret
fiaddl
cmp
pop
dec
push
dec
fwait
je
icebp
inc
pop
sbbl
subb
test
fidivl
and
mov
mov
push
and
pop
enter
outsb
xchg
add
pop
push
xor
dec
pop
push
or
je
inc
mov
es
cmp
mov
sahf
push
inc
xchg
repnz
lds
mov
cmpsb
sahf
adc
add
aad
scas
mov
fsubl
cmp
jmp
jne
cmp
movsb
pop
fcmovu
or
dec
sbbb
adc
push
cmp
fisubrl
fcomip
out
mov
pop
repz
push
and
out
or
mov
clc
cli
aas
repnz
mov
aam
and
insb
fadds
push
stos
mov
adc
xlat
arpl
popf
and
xchg
dec
inc
jnp
shrb
in
xchg
and
arpl
jns
adc
out
js
jns
rclb
dec
cmpsb
arpl
fnstcw
popf
rorl
cmp
lds
mov
push
mov
clc
inc
cmpsb
mov
frstor
cmp
mov
insb
lds
ss
addr16
popf
fsubr
test
dec
sbb
mov
lods
sahf
push
jae
push
dec
push
mov
add
xor
jge
aad
pop
repnz
popa
mov
iret
mov
mov
pop
xchg
sub
inc
jmp
popf
sbb
insb
inc
xchg
cmp
cwtl
les
mov
xor
lock
mov
out
loopne
xor
mov
sub
loop
mov
add
fimuls
out
lahf
sbb
push
pop
sbb
fwait
shlb
rcr
pop
aam
dec
cltd
push
cmp
gs
push
adc
movsb
add
dec
cmpsl
outsb
in
adc
dec
enter
enter
and
out
bound
mov
into
inc
lahf
aam
mov
test
in
jo
adc
into
add
sub
cmp
mov
test
jo
call
adc
xchg
shl
or
mov
pushf
xor
xchg
scas
push
dec
out
xlat
cmc
dec
cmp
mov
aad
lock
mov
mov
mov
push
addb
aam
test
jb
je
xor
cmpsb
lock
in
pop
mov
jl
dec
pop
orb
prefetch
xor
movntq
out
outsb
aam
pop
sub
cmp
xchg
jmp
jbe
inc
xrelease
adcl
imul
push
push
stos
imul
imul
adc
int
loopne
mov
lcall
shlb
xor
sbb
test
insb
cmp
inc
dec
add
push
fisubl
rcrl
jecxz
stc
hlt
inc
ss
xchg
inc
pop
xlat
fnstenv
imul
daa
negb
popf
push
mov
ficompl
pop
mov
xorb
test
leave
push
jle
insl
xor
loop
adc
adc
mov
imul
xlat
cli
xor
dec
loop
outsb
mov
ja
push
mov
outsl
cmp
je
mov
mov
cs
cmpsl
mov
jl
imul
outsl
in
dec
sti
stos
std
stos
into
je,pn
shrb
ss
lods
mov
push
dec
dec
add
jnp
leave
dec
js
jbe
out
inc
inc
das
outsl
sbb
inc
shrb
add
aad
mov
add
imul
mov
pop
sarl
lret
sub
test
or
stos
out
and
rcll
sbbl
inc
imul
sub
cmp
out
xor
jmp
dec
ret
dec
jns
pop
pop
xchg
inc
push
mov
sub
pop
dec
mov
inc
push
pop
test
cmpsl
pop
enter
rcr
jg
arpl
xor
jns
and
in
cltd
or
jl
jae
lcall
clc
ds
arpl
cmpsb
insb
jecxz
add
mov
mov
pop
jae
lods
xor
sbb
popf
adc
push
jno
cltd
xchg
scas
jns
cmp
sahf
xchg
cli
xlat
rorl
outsl
push
push
int
and
pop
dec
push
inc
cmp
add
push
and
inc
xlat
call
xlat
sbb
clc
jmp
int
dec
or
loopne
and
ret
cmp
jo
dec
popf
fs
mov
das
mov
loopne
das
out
jle
rcl
sahf
jmp
jns
icebp
push
mov
pop
imul
stos
lea
scas
push
iret
mov
scas
test
aas
mov
jo
jecxz
inc
jbe
outsl
adc
test
push
cs
cmpsl
adc
mov
or
pop
out
sub
mov
and
xorl
in
sahf
sub
test
mov
or
scas
mov
fcomp
push
dec
addr16
push
sbbl
out
or
mov
pop
nop
pop
cmp
xchg
daa
outsl
sub
into
data16
pop
shrb
push
add
sbb
aaa
mov
andb
mov
pop
scas
mov
dec
stc
rol
daa
aad
mov
movsb
icebp
cmpb
stc
ja
nop
ror
dec
fs
lret
adc
xchg
rclb
ss
das
repnz
push
cmp
mov
pop
mov
dec
ret
fwait
aad
sahf
cmpsl
pop
rcll
push
push
arpl
loop
mov
xchg
sub
mov
or
shrl
or
aam
gs
pop
cmc
mov
stos
flds
mov
cld
mov
test
pop
push
xchg
outsl
xchg
repnz
sub
xor
dec
sub
push
adc
cs
push
fdivl
fdivrs
pop
mov
lret
add
je
in
cmpsl
stc
ud2
daa
xor
push
xor
ds
lock
pop
aad
sahf
clc
mov
lahf
inc
in
cmp
sahf
out
and
mov
xorb
stos
leave
cwtl
add
scas
or
xchg
inc
aaa
push
push
cmp
mov
lods
daa
ja
adc
dec
adc
cwtl
test
mov
cmp
mov
and
and
jb
testb
mov
push
inc
daa
inc
xor
sub
sbbl
in
jns
test
cs
xlat
ljmp
pop
fs
sar
iret
sti
mov
sub
repnz
dec
add
and
jmp
vpsubsb
std
push
outsl
repz
cs
pop
inc
mov
lret
pop
arpl
shrl
pop
xchg
mov
sub
jno
jp
stos
clc
cli
dec
repnz
adc
and
pushl
inc
inc
lods
scas
fwait
jl
jle
lods
gs
cli
xchg
movsb
inc
add
dec
jb
push
push
and
xorb
inc
xchg
shrl
jmp
push
pop
inc
push
jp
cmp
push
roll
jns
daa
fnstenv
mov
push
inc
mov
call
or
mov
daa
dec
arpl
das
pop
add
pop
flds
inc
rcll
es
inc
xchg
mov
sub
dec
loop
inc
loop
xor
xchg
mov
ret
mov
loop
xchg
pop
out
sub
aam
mov
sub
fnsave
sub
mov
roll
push
jns
roll
pop
xchg
fcoml
and
mov
and
dec
fcmovb
fldt
add
cmp
jns
adc
xchg
adc
aam
mov
and
fcoml
fs
sbb
out
fdiv
push
push
mov
inc
push
sbb
fnsave
das
mov
ret
out
and
out
scas
jbe
rcl
mov
mov
dec
or
jns
movsb
ret
stos
cmp
cmp
call
add
pop
mov
mov
sti
cwtl
es
cmp
in
ret
adc
std
pop
pop
jge
add
adc
aad
lahf
dec
mov
shrl
push
mov
add
dec
push
inc
lcall
add
fstpl
jno
xrelease
xor
adc
js
push
loopne
pop
lock
xlat
dec
aas
jnp
mov
dec
lcall
push
xor
rolb
xchg
psubsb
fldcw
push
das
sub
adc
mov
dec
and
in
cmp
aaa
fcoms
insl
add
or
imul
rorb
jecxz,pt
push
repz
sub
jmp
notb
out
push
js
mov
or
cld
sbb
sub
and
mov
pop
loope
out
xchg
or
dec
lock
scas
mov
scas
or
ret
out
roll
xor
lods
lea
mov
nop
insb
jge
push
rorl
jge
aaa
daa
push
ss
gs
aad
adc
xchg
fildl
andl
xchg
test
cmp
pop
xchg
mov
jne
mov
orb
mov
jne
xchg
fdivrs
daa
cmp
sub
fisttpll
xor
and
and
mov
sbb
shll
gs
sub
xor
pushf
lea
pop
and
xchg
and
pop
lahf
orb
cltd
ja
out
lahf
pop
mov
push
lahf
aaa
mov
jno
std
in
sbb
lods
inc
nop
add
push
inc
outsl
mov
mov
mov
icebp
icebp
out
rcl
dec
push
dec
cld
mov
in
shlb
jne
jnp
xchg
jmp
xchg
or
push
cld
sbb
cs
cmp
dec
dec
nop
mov
lcall
movsb
cmp
cmp
push
add
push
push
push
and
fwait
adc
in
hlt
cmp
ds
in
sbb
test
clc
adcb
insb
incb
lock
andl
sbb
cmp
arpl
jo
push
nop
sbb
jg
ficomps
adc
lea
jecxz
test
stos
jge
imul
add
mov
rcr
loop
pop
or
lock
lea
jg
fbstp
call
imul
jnp
negb
push
and
push
je
leave
das
jge
in
out
adc
jo
cmp
insl
idivl
sbb
out
mov
and
inc
or
test
imul
fnstcw
lock
mov
loopne
cld
add
fistps
gs
popf
push
mov
mov
sbb
and
insb
cltd
jge
outsl
divb
add
push
fwait
jmp
mov
push
test
movsl
inc
dec
dec
in
inc
pop
test
mov
decl
je
pop
ret
add
mov
lahf
fisttps
dec
cmp
jg
mov
inc
or
jp
dec
int3
mov
pop
es
mov
xchg
es
xor
mov
je
push
loopne
icebp
mov
adc
mov
push
out
or
inc
inc
lea
mov
pop
jb
popa
repz
jg
push
ret
xchg
imul
outsb
imul
cmp
xor
xchg
mov
rolb
orb
sub
inc
adc
pushl
fwait
loop
mov
loope
icebp
adc
pop
cmp
push
data16
mov
sbb
stos
sub
insb
inc
insb
jae
mov
lcall
icebp
adc
popa
fcmovu
movsb
imul
xor
fisttps
imul
dec
sub
icebp
inc
sub
jecxz
mov
jmp
jle
inc
lods
jae
dec
push
mov
aas
int
xorb
aaa
stc
movsb
inc
sbb
into
ljmp
jns
test
sub
out
lahf
push
pop
sub
jl
jo
mov
imul
jne
jne
xorb
add
xchg
mov
aas
mov
cmp
aad
ja
dec
aad
xor
loopne
fwait
push
gs
jb
testb
ja
lods
addr16
adc
es
hlt
divl
adcl
push
aam
mov
clc
add
sub
sbb
ds
push
sub
rcll
mov
mov
xor
aaa
and
les
sbb
sbb
fs
ds
or
call
repnz
shl
dec
sub
sbb
push
arpl
int
mov
pop
outsl
and
push
mov
and
xor
xchg
cli
pusha
cmp
mov
lods
fidivs
jnp
push
mov
iret
xchg
loopne
inc
fistpl
pop
and
lods
xor
js
nop
cld
lret
cmpsl
fcmovnu
dec
xchg
pop
add
popa
pop
les
enter
inc
loop
xchg
adc
add
add
fs
cmpb
xchg
xchg
scas
lret
loop
filds
mov
ret
jmp
lods
push
outsl
cmp
loop
mov
add
pop
lods
lret
xor
cli
xor
subps
addr16
pop
push
xor
insb
hlt
cmpsl
cmp
lds
daa
lret
sarb
stos
inc
loop
lcall
push
adc
xor
mov
cmpsl
lock
xor
outsl
and
gs
imul
jne
mov
xchg
sbb
sub
shlb
xchg
inc
int
fcmovnbe
mov
mov
loopne
int3
repnz
jmp
push
jg
mov
xchg
mov
aaa
lods
pop
adc
lahf
setns
pop
icebp
jns
mov
mov
xchg
or
mov
insb
mov
jmp
adc
sti
cmpsl
push
jecxz
iret
les
inc
adc
enter
dec
aaa
pop
jg
ds
sbb
mov
sbb
std
insl
cwtl
int3
loop
jno
add
addb
sbb
mov
stos
or
xchg
lret
loopne
pop
push
subl
add
fimuls
mov
add
ss
shrb
xor
scas
popa
push
push
xor
jg
sub
scas
fdivrl
mov
fists
adc
aad
sbb
pop
repnz
inc
lock
faddp
pop
enter
imul
push
lds
jae
mov
inc
leave
mov
rolb
adc
movsl
and
cli
push
inc
add
sub
iret
xchg
lods
dec
jge
aas
fsub
jle
movsl
inc
cwtl
cld
mov
xchg
icebp
mov
add
cmpsl
xchg
fistpl
shll
fmull
clc
xor
int
loope
cmpsl
movsb
add
mov
ret
sub
popf
test
jbe
mov
out
add
dec
sub
and
mov
mov
add
mov
inc
mov
dec
mov
pop
arpl
sub
bound
addr16
push
fldenv
cmc
lret
repnz
cmp
insb
shrb
mov
adc
sub
lea
sbb
xchg
or
out
xor
adcb
loopne
lds
mov
add
into
mov
and
aad
jae
inc
pop
repz
out
mov
mov
push
movsb
inc
sbb
mov
gs
or
sub
movsb
cmpsl
and
lret
out
mov
mov
add
notb
lods
sbb
or
adc
in
xchg
shll
xor
loope
cmp
pusha
out
cmpsl
fs
xor
or
mov
pop
loope
mov
xor
and
mov
cli
push
ss
sub
jae
test
sbb
pop
testb
es
pop
mov
xor
imul
mov
repnz
mov
adc
popl
out
dec
dec
popa
in
vpunpcklqdq
dec
jns
adc
mov
push
push
pop
call
rorl
loopne
xor
aaa
mov
call
fs
inc
jecxz
fcoms
scas
fucomi
sbb
lods
cwtl
or
or
filds
mov
mov
jnp
and
movsl
jb
push
adc
ja
add
mov
test
jbe
cmpsb
xchg
cmp
sbb
jl
cmp
dec
insb
jl
push
in
ds
rclb
lods
cmp
fst
sbbl
xchg
lret
xor
and
sbb
test
nop
outsl
or
sub
icebp
dec
jp
js
push
mov
fsubrp
xor
mov
or
stos
cmp
sub
cltd
lods
hlt
repz
xchg
ds
jecxz
add
adcl
mov
gs
adc
out
icebp
xchg
mov
push
jnp
jno
pop
insl
jmp
int3
push
mov
adc
clc
sbb
dec
cmp
adc
add
negb
loope
leave
adcb
aam
lea
fdivl
pop
pop
sbb
or
aas
xor
add
in
mov
iret
fdivs
inc
lret
notb
lahf
sbb
add
mov
sbb
pop
jne
ret
mov
bound
dec
test
push
nop
add
jle
shrl
sub
dec
je
add
rcrl
push
aaa
movsl
enter
xchg
lret
scas
push
popa
pop
xchg
cwtl
cmpsb
inc
inc
mov
cmp
out
mov
fdivs
leave
mov
or
add
pop
inc
out
pusha
sbb
js
and
pop
add
fisubl
ja
inc
inc
and
out
and
lret
popa
loope
xchg
ss
cs
push
int
jo
push
push
push
cmp
popa
sub
mov
divps
mov
push
jno
xchg
outsl
xchg
lods
xchg
sti
mov
dec
sub
xchg
rcrb
add
or
repz
sarl
es
cmp
jae
ret
sub
out
push
and
sub
dec
sbb
incl
dec
in
imulb
pop
es
adcb
sbb
lock
inc
in
push
pop
repnz
jle
insb
jge
mov
subb
enter
push
hlt
in
cmp
mov
inc
mov
cli
out
outsb
and
push
aas
out
inc
inc
call
dec
dec
xchg
sbb
mov
ret
sub
cmp
cmc
mov
cmpsb
xlat
and
dec
pop
cmp
cltd
shll
ja
jnp
adc
add
lods
outsb
test
pop
ss
cmp
imul
fsubrs
ss
test
and
or
inc
cmpsb
cltd
sub
xchg
mov
ret
out
call
adc
mov
into
popa
ret
loopne
sbb
push
scas
sbbl
enter
xchg
scas
and
and
sbb
out
in
cmp
loopne
mov
pop
jb
outsl
jmp
fs
shlb
adc
jne
test
dec
mov
mov
jae
cmpsl
and
mov
push
movl
daa
pop
jecxz
ret
icebp
out
xchg
popf
xchg
push
out
pop
scas
std
sti
dec
or
pop
adc
ficoml
sarl
sbb
dec
repz
mov
cmp
fmuls
aam
imul
inc
pop
in
xor
mov
loop
xor
data16
mov
push
push
inc
fisttps
push
sub
jns
ss
lret
pop
repnz
pop
test
jl
testl
orl
es
les
push
lret
xchg
subl
mov
mov
add
mov
sub
cli
int
loopne
xchg
imul
or
mov
xchg
ret
pop
mov
xchg
enter
mov
movsb
add
aas
jmp
into
stos
mov
gs
cmp
pop
jp
mov
ljmp
cmpsl
lret
and
or
shr
cmc
into
mov
pop
in
and
cmpsb
mov
lret
pop
jae
or
fnstenv
mov
test
clc
lds
add
and
add
sbb
daa
sub
jae
lock
ljmp
sarl
inc
mov
aam
mov
arpl
mov
pop
cmpsb
stos
mov
add
addr16
cmpsl
outsl
ss
or
in
adc
cmp
adc
orb
punpcklwd
subb
cli
popa
in
add
enter
aaa
stc
push
or
jo
mov
xor
les
inc
loop
lcall
mov
mov
cmpl
mov
push
repz
add
cmp
aaa
leave
loope
mov
push
in
aad
jo
fnstsw
push
fcoms
sahf
mov
xor
add
lret
mov
stos
sub
adc
jg
mov
loop
stos
in
aad
jns
xchg
sub
rcrl
loope
mov
or
inc
cmp
mov
fisttps
dec
and
add
imul
addb
outsb
cld
mov
imul
adc
xor
icebp
pop
mov
mov
das
hlt
mov
lcall
push
sahf
push
adc
mov
fistl
sahf
dec
push
inc
sub
je
xchg
add
sbb
push
popl
test
mov
jmp
iret
repz
dec
mov
in
leave
lods
push
mov
add
sbb
adc
sub
xchg
and
rcll
pop
aam
lret
jecxz
xchg
mov
test
cmp
mov
jbe
jge
add
cmp
int3
out
out
or
xchg
cmpsl
ljmp
sbb
xchg
lcall
int
sbb
pushf
shl
xchg
or
push
or
fdiv
jo
dec
push
push
sti
pop
add
inc
movsb
mov
bnd
xor
push
cltd
jnp
mov
rorl
lock
dec
cmp
fdivl
dec
imul
dec
or
stos
imulb
pop
mov
shrl
in
cltd
pushf
cltd
sbb
aaa
loope
or
push
lods
mov
lea
test
sub
movsb
sub
cs
xchg
mov
sub
sti
or
jne
xchg
jo
hlt
mov
push
sub
dec
inc
pusha
sti
push
mov
mov
pop
xor
jnp
sbb
push
mov
lret
dec
icebp
aaa
divb
or
xor
inc
pop
jb
cwtl
mov
aaa
cmc
ret
popa
xor
sub
sbb
addr16
mov
mov
xchg
mov
stos
mov
sti
inc
push
xor
sub
mov
cmp
scas
ret
insl
adc
stos
insb
clc
sbb
mov
test
dec
jmp
div
sub
fstl
add
shll
inc
mov
mov
dec
add
mov
dec
pop
pop
mov
and
jge
jl
repz
mov
dec
shlb
dec
outsb
jae
jge
xchg
adc
subl
and
ds
pusha
movsl
lock
ret
push
mov
jecxz
inc
addr16
and
sub
jb
pop
into
scas
add
fidivl
nop
pop
sbb
or
xchg
add
stc
test
lret
iret
xor
push
insl
in
nop
out
adcb
out
test
es
inc
push
daa
push
xor
adc
jne
ret
fwait
pop
adc
or
test
and
aam
stos
mov
ljmp
gs
aam
jae
aaa
cmc
gs
fcoms
cmpsb
sbb
aam
leave
jns
cmp
mov
clc
cmp
rol
xchg
stc
jae
xchg
js
lea
and
sbb
clc
outsl
mov
es
addr16
fwait
jns
push
lcall
ret
jns
movl
popf
fidivrs
jns
filds
jae
sub
gs
lods
fdivrl
mov
and
add
mov
sbb
fdivs
lea
out
in
inc
mov
cltd
inc
lods
pop
loope
popa
sbb
ljmp
add
rcrb
sarl
pop
mov
inc
icebp
fisubs
lock
inc
popa
xor
add
sub
mov
mov
add
fstl
shll
push
repnz
pushf
outsb
cmpsb
dec
in
daa
mov
bound
add
jg
dec
test
es
lret
xchg
or
inc
sub
mov
bound
insl
inc
test
adc
movsl
pop
sbb
fwait
stos
faddl
jno
xor
pushf
and
cli
inc
bound
mov
jnp
inc
ret
mov
out
inc
mov
lret
push
mov
rcrl
js
jo
sbb
sub
mov
test
lods
decl
stos
pop
mov
jmp
dec
mov
pop
psrlq
sub
orl
lds
jge
rcrb
shl
dec
adc
xor
lret
loopne
leave
xchg
daa
outsl
dec
pop
mov
pop
push
stos
lea
jg
push
mov
iret
das
repnz
push
inc
cmp
and
mov
adc
arpl
subl
out
leave
inc
xor
mov
lret
loopne
cmp
pop
cmpsb
mov
inc
inc
divl
lds
sub
add
xor
jnp
icebp
xor
mov
cmpsb
inc
dec
push
popf
dec
jne
adc
cmp
xchg
int3
lock
mov
enter
or
or
and
push
cs
lcall
out
lods
mov
aam
and
fnstcw
cs
je
mov
dec
sub
mov
inc
lock
cmp
cmp
dec
and
mov
mov
jne
mov
pop
lret
shl
jno
bound
jle
cmp
pop
push
int
jmp
cli
xlat
stos
ljmp
rcll
jne
pop
pop
inc
sti
bound
xlat
xor
ss
dec
mov
call
call
sub
mov
mov
inc
rclb
push
addb
pusha
cmp
in
fs
leave
inc
pop
mov
cmp
jmp
sti
jmp
mov
or
push
mov
out
insb
repz
pop
mov
xor
iret
cld
push
sbb
mov
add
in
imul
xchg
outsl
lahf
insb
aas
and
dec
adc
sbb
xor
sub
fs
lahf
inc
lahf
sub
mov
lret
call
xchg
loop
pop
and
nop
int
or
loop
lcall
dec
jp
cli
stc
cld
mov
hlt
sub
sub
imul
push
arpl
xor
cwtl
outsl
test
in
and
add
jmp
rcrl
xchg
xchg
adc
orl
sub
push
sub
popa
lds
aam
dec
xor
shrl
outsb
fwait
enter
push
inc
pop
das
mov
cli
in
loopne
imul
out
jne
out
push
inc
pop
insl
lret
data16
push
insl
addr16
lahf
mov
push
pop
sarl
adc
in
xchg
adc
les
mov
xchg
test
fisttps
jb
mov
mov
sahf
incb
push
xchg
in
or
cmp
xlat
push
add
adc
push
jmp
loopne
sbb
mov
dec
pop
fidivrs
sub
pop
pop
lods
push
aam
add
jo
xchg
les
jo
mov
leave
sar
sbb
xor
fwait
xor
je
ljmp
jle
out
pusha
cmpsb
mov
rorb
pop
popf
arpl
or
fisubrl
or
adc
rolb
cli
mov
xchg
ret
fiaddl
jae
inc
popa
nop
mov
xchg
dec
cmp
xchg
in
sub
cmp
jno
test
aas
inc
scas
mov
bnd
mov
mov
inc
jle
cmpsl
add
pop
dec
dec
mov
xor
push
leave
aas
aad
fwait
daa
xlat
mov
leave
sbb
aas
or
scas
test
popa
pop
adc
sub
push
imul
subb
jns
jmp
push
stc
cld
int
fistps
cmp
or
movsl
in
in
movsl
pop
pop
lret
jne
lcall
repnz
pushl
and
push
mov
and
icebp
sbb
aaa
mov
popa
mov
mov
cmp
push
mov
std
rcrb
lcall
pop
ds
cli
fisttps
in
pop
push
push
add
jb
inc
mov
in
push
into
loop
fdivrs
xlat
cwtl
add
fsubrp
ljmp
dec
push
loopne
sub
rcr
ret
push
and
xchg
jmp
pop
stos
cmp
out
femms
xor
and
and
nop
out
inc
imul
or
loopne
daa
xor
sbb
into
or
cmpsb
loopne
jle
aam
mov
lea
rcrb
dec
pop
gs
test
das
pusha
enter
jo
push
add
or
clc
es
mov
pop
lods
pop
cmpb
push
dec
push
adcl
cmp
mov
filds
xor
mov
sbb
adc
sbb
stos
lds
jne
xor
or
mov
repz
fisttpll
jge
push
mov
jb
xor
jle
leave
inc
or
mov
jg
enter
dec
sbb
aam
or
fdivrs
sbb
mov
push
cmp
insl
les
ds
sbb
mov
insb
and
lock
cmp
mov
add
jle
and
jmp
addr16
ljmp
inc
fdivr
test
loop
fadds
adc
addr16
push
or
and
cmp
cmp
test
lahf
add
lcall
into
lahf
insb
fwait
stos
xor
cmpsl
stc
jecxz
das
or
mov
cmp
adc
cmp
or
add
cwtl
mov
jl
sbb
jbe
pop
mov
std
pop
push
xor
pop
stos
push
imul
cmp
insl
adc
or
mov
testl
or
fcoms
pop
fdivs
loop
xlat
cmp
lahf
pop
mov
push
ja
int
bnd
les
addr16
pop
sbb
pop
jle
jnp
lcall
bound
orb
pusha
mov
hlt
sbb
lcall
xchg
scas
push
clc
dec
dec
jmp
adc
inc
mov
fmull
fstpl
push
inc
cmc
inc
in
push
dec
mov
lcall
xchg
into
pop
pop
pop
xchg
mov
ss
push
cmp
and
filds
push
or
scas
mov
xchg
pop
mov
push
leave
leave
fidivl
andl
or
push
dec
fdivrs
pusha
hlt
xchg
xchg
mov
mov
push
roll
std
outsl
sub
data16
mul
fistpll
or
xor
jecxz
test
loop
adc
sbb
pop
mov
and
or
mov
ficompl
pop
mov
inc
or
dec
movsb
mov
and
test
jns
add
and
push
nop
push
or
push
test
andl
aad
jge
aaa
sub
daa
adc
mov
adc
dec
pop
add
push
cmp
sub
scas
xchg
data16
aas
fsubs
mov
mov
xor
sub
test
arpl
hlt
push
mov
insl
aaa
mov
ja
pop
ja
add
sub
add
cltd
cmp
pop
cmp
int3
ret
adc
mov
fdivs
rcrb
and
and
lret
xchg
test
xorb
test
xchg
or
pushf
pop
add
clc
lods
sbb
add
sarl
mov
push
shrl
pop
mov
dec
movsl
mov
ror
cld
cltd
call
jbe
rolb
jl
stc
push
push
stos
dec
je
dec
enter
aaa
sti
mov
jns
mov
sub
xor
loope
test
or
or
repz
loopne
or
adc
pop
jne
inc
sub
and
adc
lret
inc
mov
cltd
mov
cmp
inc
dec
push
inc
jl
sti
sub
ja
push
mov
lock
push
ret
or
adc
pop
xor
fcmove
andb
add
ss
arpl
rcll
jmp
fimull
cli
and
testl
in
xchg
add
cmp
das
loope
ficompl
stos
mov
mov
out
fdivrs
push
cli
iret
mov
scas
jge
xor
cmpsl
pushf
adc
sbb
sub
mov
jg
loopne
test
inc
dec
add
cli
imul
scas
sbb
js
ds
repz
inc
outsb
mov
and
scas
in
std
xor
pusha
push
lock
inc
push
fcoml
dec
scas
xchg
mov
push
jl
pop
mov
and
cmp
scas
dec
mov
jnp
fdivr
xchg
add
sahf
lret
inc
add
repnz
and
mov
andl
xchg
adc
icebp
mov
xor
add
fdivl
fwait
cmp
mov
daa
mov
aam
xor
xor
lods
jno
push
lret
pop
imul
sub
dec
orl
mov
xchg
fcmovnbe
loope
negb
xor
shll
out
daa
sti
loope
iret
out
cmp
pop
shrb
mov
jg
push
cmp
ds
test
cmc
cltd
jp
mov
fmul
add
push
pop
mov
jne
xchg
jl
add
lds
aad
aad
add
add
push
and
cld
stos
aaa
xchg
lea
cli
mov
jge
sbb
js
cmp
hlt
adc
test
mov
and
xchg
std
div
push
call
or
mov
mov
es
cltd
inc
or
jge
adc
mov
fwait
pop
and
or
cli
or
sbbb
xchg
mov
ret
push
mov
clc
adc
enter
push
xchg
repz
call
add
bound
aas
imul
mov
mov
les
cmp
fildll
in
cmpsb
mov
xor
into
sbb
je
nop
mov
outsb
push
add
sbbb
and
stos
push
std
xchg
xchg
inc
pop
inc
lea
and
dec
fsubrs
push
bound
pop
fs
push
and
pop
push
cmovg
in
and
je
sbb
outsb
xchg
fnstsw
test
es
dec
cmc
fsubrp
dec
imul
jg
scas
xchg
in
xchg
pop
and
xchg
add
pop
lahf
test
aad
add
aaa
scas
cs
out
fdivs
mov
xchg
push
out
xor
outsl
cld
pushf
cltd
jp
dec
pushf
sub
push
ljmp
xchg
or
or
fisttps
or
icebp
pop
pop
mov
loope
or
ds
outsb
mov
int
pop
mov
dec
inc
lods
mov
std
mov
dec
stos
lret
cld
and
fcomps
jp
mov
dec
mov
add
fst
pop
cmpsl
push
push
pop
cmpsl
enter
xchg
pop
pusha
jge
out
fisubrs
or
pop
ret
repz
mov
shlb
dec
aam
and
sbb
mul
rcl
inc
mov
sbb
sub
into
cmp
jns
rorb
loopne
outsl
sbb
mov
lods
cmpsb
aam
loop
xlat
je
daa
loopne
dec
shll
imul
adc
adc
sub
mov
mov
insl
fildll
cld
dec
push
mov
mov
or
mov
insl
cs
incl
decb
shr
lret
cmp
sbbl
outsb
in
leave
jnp
es
aam
out
movsb
push
sub
mov
push
adc
and
dec
lock
add
mov
mov
addr16
xchg
ret
addr16
addr16
test
sub
dec
rorb
repz
mov
sub
call
out
loopne
pop
repnz
imul
mov
push
ljmp
xor
movsb
sbb
pop
shlb
dec
aad
cmp
inc
add
sti
rclb
dec
pusha
mov
cmpsl
fmull
pop
lock
repnz
dec
add
sbb
pop
or
loope
and
pop
ljmp
push
mov
dec
add
out
clc
fst
divb
xchg
inc
lds
push
or
push
push
popf
bound
out
loope
rcr
mov
jno
outsb
add
fadds
inc
insb
fs
sub
sub
mov
imul
pop
pop
imul
repz
adc
imul
mov
pop
mov
bound
scas
cmp
xchg
mov
mov
pop
leave
test
cmpsb
stos
subl
and
fsubrp
and
into
xor
insl
out
mov
sub
jo
xchg
xor
or
enter
xchg
sub
enter
les
iret
cs
shr
into
xchg
je
push
jmp
out
aad
js
mov
loope
mov
sbb
insb
std
mov
shrb
or
es
in
mov
jge
add
lahf
add
dec
pop
push
iret
pusha
mov
pop
std
fistps
lcall
gs
cmp
dec
sub
dec
mov
repz
cmp
xor
add
push
jle
rcrb
fs
sbb
mov
cli
loope
je
cwtl
add
lcall
push
pop
inc
jae
imul
sbb
sub
shll
scas
out
imul
cld
cmp
xchg
mov
push
dec
sti
push
rclb
xchg
loope
inc
add
mov
mov
dec
xor
das
negb
jp
mov
out
sub
xchg
dec
cli
push
cld
nop
fst
repz
and
jnp
aad
aam
inc
insl
sbb
cmp
cltd
mov
dec
cs
sbb
push
xlat
pop
das
push
pop
out
pusha
adc
mov
int3
or
inc
ss
inc
scas
dec
out
scas
outsl
lea
xor
dec
dec
adc
mov
pop
shll
rorb
pop
and
inc
jl
mov
cld
mov
imul
lds
mov
in
xchg
cmp
in
out
dec
inc
rcll
nop
cmp
xchg
repz
test
and
sbb
shll
loope
jmp
push
push
push
mov
xor
in
xchg
lods
negb
push
orb
mov
and
out
sbb
rorb
int3
int3
xchg
lcall
fldt
pop
rolb
xchg
clts
das
jno
mov
ret
outsb
sbb
push
add
loopne
xchg
or
pop
decb
inc
stc
and
sbb
cmp
sub
aad
mov
test
stos
push
stc
idivb
mov
mov
loopne
xor
test
mov
js
sbb
inc
pop
lods
dec
call
stos
lock
xlat
add
mov
mov
test
dec
repz
fistps
xor
sbb
enter
out
or
popa
cmp
jmp
xor
mov
cmp
add
sub
jl
cmpsb
mov
out
loope
cmpsl
mov
jo
pop
pop
in
jecxz
xchg
cmp
mov
shrl
xor
sbb
rcl
mov
xchg
fiaddl
sbb
xchg
std
mov
xchg
lret
sub
cmpsb
into
inc
hlt
rorl
sbb
dec
ret
sub
sub
cmpl
rorl
push
sub
dec
sahf
lcall
jmp
pop
into
aad
cmpsl
std
jmp
jbe
test
rorb
mov
xchg
lahf
push
adc
mov
iret
enter
pop
mov
lods
ret
push
jno
in
add
xor
jge
push
js
mov
fs
leave
mov
fdivl
arpl
jp
int3
lret
ret
adc
loop
ja
pop
mov
push
push
pushf
lea
cmp
or
add
sub
pop
dec
pop
test
int
loop
sbb
cs
inc
or
es
add
push
pop
pop
sub
subb
shlb
test
push
pop
rcrl
and
cmp
jb
mov
aaa
pop
xchg
std
aam
sbb
sbb
ss
hlt
js
cmpsl
ret
push
lods
mov
fcmovnb
or
mov
dec
rolb
je
push
pop
xchg
pop
movsl
enter
frstor
rcl
pop
adc
cmpsb
out
ret
les
mov
arpl
shll
das
sbb
xor
lods
dec
xchg
push
jmp
adc
adc
cmc
cmp
xchg
hlt
fistpll
adc
outsl
inc
icebp
jp
push
ja
fs
pop
adc
push
insl
jle
imull
imul
jno
mov
test
sub
sbb
sub
pop
movsb
shlb
cltd
aad
adc
popa
cld
outsb
ja
addr16
out
xchg
into
push
icebp
push
cld
cmp
arpl
mov
outsl
sub
lds
jnp
aaa
imul
inc
jne
xor
dec
inc
adc
or
pusha
pop
shl
imul
push
adc
fcmovnu
or
pop
es
push
sub
test
cmp
cmp
lcall
popa
dec
push
loopne
mov
jl
jp
rcrb
xor
iret
fcmovu
and
testb
aam
cmpb
jns
add
inc
das
repz
adcb
addl
or
hlt
fbld
push
add
into
popf
sub
jae
adc
cmp
adc
cmpsl
pop
jmp
add
sbb
dec
dec
scas
or
and
xchg
push
ja
push
inc
mov
mov
aad
adcl
stc
add
mov
loopne
std
mov
mov
dec
lcall
aam
int
mov
pop
pop
xchg
scas
mov
or
lahf
adc
test
loop
scas
js
push
fwait
adc
int
lock
sbb
out
and
lret
scas
add
mov
notb
xor
nop
test
leave
popf
ja
adc
mov
sbb
jns
loopne
sbb
mov
mov
test
lret
add
mov
jae
add
cmp
clc
test
dec
leave
stc
adc
test
popl
push
cmp
insl
mov
lods
xchg
ss
add
jne
push
xchg
popw
pop
orl
pop
fimuls
rcl
push
xor
inc
xchg
cmpsl
imul
sub
fstpl
or
push
inc
das
bound
mov
adc
mov
sbb
scas
jne
loope
or
and
pop
movsb
mov
inc
sub
inc
iret
fs
mov
jecxz
popa
fistps
sub
dec
mov
lock
push
cltd
std
dec
hlt
callw
mov
jbe
or
outsl
sbb
mov
rolb
jle
jbe
push
std
jle
adc
xchg
out
xor
push
mov
mov
jg
mov
popa
jecxz
mov
or
push
aad
push
outsb
in
dec
sub
jno
mov
outsl
push
inc
outsl
sbb
cltd
xchg
frstor
test
sarb
inc
cld
fs
clc
pop
aaa
stos
pushf
fbstp
pop
sub
push
jb
stos
xchg
push
cmc
pop
ja
js
lret
test
pop
dec
mov
push
inc
cmp
out
jne
pop
outsl
pop
pop
xchg
inc
push
es
out
mov
mov
add
sti
icebp
popf
icebp
mov
ss
in
das
cmpsb
cmp
sub
xor
push
in
repz
sub
stos
jb
cmpl
das
jg
popa
in
mull
add
pop
sbb
jnp
mov
out
cmp
pop
mov
jmp
push
xor
mov
mov
out
push
pusha
insb
sti
aas
lods
clc
push
loop
mov
daa
lds
sahf
and
dec
lret
jp
test
ret
push
enter
dec
dec
shlb
flds
push
outsb
mov
jbe
dec
mov
cmp
adc
lds
and
mov
push
adc
xchg
add
xchg
xor
sub
sbbl
push
xchg
inc
leave
cltd
jae
divb
test
inc
int
sub
ljmp
in
mov
leave
scas
rcrb
pop
pop
adc
mov
pushf
in
inc
repnz
sbb
std
movsb
enter
gs
dec
pop
imul
inc
jo
inc
movsb
dec
xchg
cmpl
fidivl
add
clc
int3
or
lret
fmul
and
sbb
cltd
scas
nop
mov
cmp
push
pop
xchg
add
jg
insl
addl
mov
call
sub
dec
mov
into
call
jmp
add
shlb
inc
ljmp
jg
fdivrp
int3
adc
jl
sub
imul
xor
pop
bound
mov
pop
push
popa
mov
push
mov
insl
leave
mov
push
inc
xchg
xorb
mov
inc
cmpsl
or
movsl
mov
jl
and
jns
xor
sbb
adc
cmp
dec
adc
pop
xchg
ljmp
jno
dec
cmpsl
dec
stos
fwait
mov
fs
xchg
repz
push
inc
andl
decl
subl
add
xchg
dec
cmpsb
jns
sbb
nop
or
push
mov
in
push
sti
jp
mov
mov
push
push
mov
pop
fnstenv
or
gs
dec
imull
in
out
call
fldl
loopne
loopne
jbe
jmp
xor
hlt
cmp
scas
mov
mov
inc
aam
dec
imul
xlat
mov
imul
xchg
xchg
xchg
rcrl
add
mov
add
cltd
pop
inc
mov
ds
jp
jne
mov
scas
push
pop
dec
push
push
pop
cltd
les
lahf
sub
cltd
lods
bound
mov
adc
fbstp
pop
aad
addr16
out
or
inc
cmc
rolb
iret
fstpl
pop
lahf
imul
push
push
cld
scas
mov
xchg
and
mov
dec
fwait
push
nop
push
dec
pop
sub
mov
out
rclb
push
cld
mov
addr16
xchg
adc
pop
arpl
insl
in
scas
insb
int
stc
add
lds
cmc
xor
lcall
fldenv
arpl
mov
clc
int3
xchg
testl
and
aam
mov
mov
xor
jmp
push
push
sbb
lea
test
ja
movsb
sbb
cwtl
pop
cmp
sub
adc
inc
and
data16
fcmovb
xlat
fisubs
lret
sub
shlb
jb
xor
and
leave
ss
ret
and
cmp
jp
jbe
mov
pop
adc
jnp
test
xchg
mov
fnsave
lahf
push
pop
sub
lds
jne
idivl
dec
dec
cmp
jl
mov
int3
mov
div
pop
movsb
add
ds
or
insl
pop
and
movsl
repz
jl
shr
imul
shlb
inc
iret
push
mov
jnp
aaa
fs
sbb
and
push
aad
fcoml
imul
push
xchg
inc
fdivs
xchg
pop
or
int
cmp
and
bound
push
mov
fnstenv
add
ljmp
or
popf
repnz
mov
dec
sti
shlb
and
iret
sahf
xchg
sbb
cli
mov
out
lahf
incb
sbb
xor
jne
adc
push
call
xor
mov
je
in
cltd
hlt
loopne
xor
xor
adc
flds
fimuls
cmp
cmp
and
or
jo
jp
xchg
pop
pop
lret
outsl
cmc
iret
push
les
and
imul
das
push
aad
dec
inc
mov
loopne
push
outsl
gs
pop
xchg
fstl
mov
mov
mov
dec
out
mov
jg
iret
add
sub
mov
ds
pop
int3
lock
mov
fldl
jp
mov
pushf
cli
in
push
or
pop
adc
fnsave
xor
cmp
push
cmpsl
scas
xchg
cmp
xchg
cmpsb
cmp
push
inc
push
in
mov
dec
iret
gs
mov
dec
or
add
das
hlt
jnp
mov
insl
lahf
daa
sub
mov
pop
mov
das
lret
test
je
adc
mov
mov
ss
jle
xchg
xchg
rcrb
mov
outsl
popa
add
pop
xchg
inc
pop
in
lcall
push
ffreep
jbe
dec
or
fsubp
leave
jmp
pop
stos
mov
mov
loope
push
repnz
cmp
jae
xor
lods
fsubrs
inc
popf
or
lods
test
pop
xor
sarl
into
mov
xor
inc
ljmp
inc
ja
sarb
pop
xchg
and
es
lret
mov
mov
icebp
pop
add
rorl
ja
psubw
movsb
popa
add
scas
xor
jb
mov
and
gs
jp
cmp
adc
cwtl
dec
je
xchg
scas
bound
fdivl
stos
movsl
cli
scas
int
jb
and
cli
icebp
mov
out
jb
inc
out
cltd
sbb
xor
sub
jb
sti
sub
in
aam
cmpb
xchg
mov
mov
xchg
lods
int3
xor
je
cmp
sbb
std
xor
add
mov
into
add
adc
ret
mov
pop
mov
and
fbstp
xor
dec
pop
jne
cli
sub
cmpsb
mov
add
es
and
mov
sbb
xchg
aaa
adc
dec
mov
rcrl
inc
pop
aaa
push
add
jmp
aas
pop
idivl
test
pop
mov
push
bound
push
int3
mov
pop
pop
xchg
or
divb
mov
xchg
add
pop
into
lea
adc
pop
sbb
addr16
int3
push
scas
fnstsw
jo
dec
in
mov
fadds
lea
push
cltd
sub
cmovle
and
push
mov
int3
mov
mov
mov
lds
fsubrp
movsb
xchg
insl
inc
out
sbb
out
mov
add
inc
jo
out
inc
loop
aad
mov
push
out
lcall
xor
mov
inc
aas
lock
cltd
stc
dec
sub
mov
mul
mov
les
dec
cltd
rcl
hlt
lds
mov
jecxz
fwait
das
ljmp
stos
sbbb
shll
nop
lahf
mov
xchg
out
dec
es
or
cmpsb
aas
pop
xchg
leave
dec
or
aas
aad
mov
inc
mov
out
add
imul
or
je
out
jl
mov
pop
lods
sbb
lods
rol
out
mov
pusha
inc
jae
cmp
fisttpll
js
add
jne
dec
sub
sbb
or
popa
repnz
pusha
and
xor
lret
out
loop
pop
adc
mov
add
mov
jae
cltd
xchg
fs
or
fs
cs
mov
xor
mov
and
add
repnz
adc
or
mov
mov
mov
add
rcl
jns
mov
dec
pop
pop
test
mov
sub
push
popa
test
idivl
mov
xchg
ret
shrl
xchg
ja
lods
mov
xchg
sbb
call
je
xchg
jns
lcall
pop
fprem
dec
in
cs
adc
mov
loop
cmp
add
fbld
mov
sub
jmp
cmpsb
dec
in
aam
pop
cmpsb
test
imul
jne
xor
sub
push
sahf
push
pop
xor
inc
lret
sub
pop
mov
pushf
idiv
repz
popa
out
lock
pop
push
xchg
ret
ljmp
popf
xchg
xchg
lret
xchg
jg
pop
sub
push
mov
fdivs
test
test
push
push
cmp
stos
enter
cmc
jge
ret
cwtl
je
pop
daa
jle
in
rorl
scas
jmp
mov
mov
mov
cmpsl
and
ds
rolb
test
ud1
jne
data16
sbb
out
stc
test
ret
mov
shll
stc
xchg
fldl
fldcw
rclb
lock
fdiv
ret
rcr
sqrtps
imul
ja
lret
cltd
cmp
sti
push
popf
add
bound
sub
sbb
xor
in
and
sbb
lock
dec
call
mov
enter
mov
shl
xchg
outsl
mov
clc
imul
mov
xchg
xchg
out
jae
rorl
pop
sub
push
or
inc
arpl
mov
mulb
mov
pop
mov
out
rorl
mov
mov
mov
or
je
hlt
out
ja
lret
dec
ret
pop
js
pop
loop
jnp
push
pop
in
out
stos
and
scas
dec
add
call
jl
dec
lcall
push
fwait
pop
cmpsb
ja
lods
jle
cmp
iret
test
leave
pop
dec
and
data16
sub
lds
jno
dec
outsl
or
movsl
inc
push
sahf
pop
sti
sub
enter
mov
cmp
pop
xlat
icebp
out
lods
xchg
test
mov
mov
lods
mov
arpl
and
pop
sub
jle
test
rclb
cmp
call
movsb
or
repz
ds
into
push
and
lock
add
sbb
outsb
lea
outsb
mov
stos
js
loop,pt
inc
fdivl
lret
fwait
aas
addl
sub
xchg
pop
jmp
and
in
xchg
jp
sub
mov
adc
xchg
ret
or
jl
and
xchg
jne
or
jae
or
inc
jle
repnz
cmpsl
inc
fstpl
aad
add
mov
mov
lahf
repz
cli
ljmp
xor
scas
out
les
lods
jno
imul
mov
sub
and
xor
jno
in
push
mov
xchg
inc
cmp
jle
mov
fiaddl
cwtl
notl
sub
sbb
fs
outsl
mov
dec
lcall
or
std
push
add
imul
flds
push
lods
js
ja
fdivs
unpcklps
js
fstpt
je
mov
lock
push
cmpl
dec
mov
xchg
scas
nop
es
or
insb
or
ret
dec
jl
or
clc
pop
dec
pop
mov
fdivr
pop
cmp
jle
dec
adc
mov
repz
repnz
xchg
fstl
sub
or
pop
lcall
test
mov
mov
shrl
push
inc
sti
sub
movsl
jg
mov
ret
mov
popa
out
pop
mov
jecxz
leave
cli
cmp
or
das
popa
enter
notl
sbb
push
sbb
mov
sbb
scas
dec
out
cld
mov
mov
insl
arpl
jo
adc
jbe
fadds
scas
nop
jnp
jne
roll
ret
xorl
mov
ja
jge
inc
bound
xor
xchg
sub
ja
mov
or
test
add
xchg
pop
mov
dec
aaa
adc
jo
repnz
lret
mov
inc
sahf
mov
xchg
mov
xor
mov
mov
dec
mov
mov
js
lret
cmp
jae
mov
movsl
add
dec
xorl
dec
pop
fistpl
in
fnstcw
lcall
mov
pop
aaa
sub
push
in
push
iret
fwait
jo
or
test
inc
xor
xchg
subb
xor
aam
jecxz
inc
pop
xchg
cmp
mov
int3
push
mov
test
inc
pop
mov
js
outsl
cmp
loope
hlt
sub
jne
aaa
nop
pop
push
outsb
xchg
test
out
int
iret
inc
sahf
pop
push
cmp
mov
xchg
das
inc
daa
push
fildl
popa
addr16
fcmovb
ljmp
and
loope
mov
jne
adc
mov
fildl
push
lea
stos
cwtl
push
and
sbb
outsl
mov
andb
ret
push
xlat
adc
mov
dec
mov
int3
or
jae
rcr
push
lret
or
lcall
lock
lds
mov
sbb
or
adc
push
lods
scas
icebp
lods
xchg
shll
sbb
dec
dec
andb
mov
insl
out
js
fdivp
stos
stos
xor
dec
add
and
stc
xchg
jns
sub
mov
or
scas
cli
xchg
jno
sahf
out
adc
testl
nop
cmp
sbb
jae
or
or
lcall
add
dec
pop
and
jno
scas
sarl
xchg
mov
pop
sub
fnsave
cmp
mov
xlat
dec
pop
addb
stos
sbb
push
add
jp
es
push
push
and
ja
mov
lahf
pop
testl
xchg
cld
jns
test
sbb
push
jae
sbb
sbb
bound
int
xchg
pop
sbb
add
inc
into
adc
les
out
mov
inc
push
adc
sbb
adc
loope
jg
and
mov
sub
and
test
push
in
jmp
jmp
add
nop
icebp
jg
ja
sahf
and
lods
sahf
jge
sti
fcompl
push
dec
xchg
ljmp
pop
js
jno
fsubs
mov
xchg
dec
enter
fcmove
xlat
pop
int3
mov
aaa
aaa
lahf
je
sbb
push
xchg
push
add
popf
faddl
cmc
lods
inc
clc
cmp
add
aas
aam
dec
imul
cmp
mov
insl
inc
adc
sbb
outsb
leave
dec
lret
jbe
outsl
jge
lcall
jne
xchg
mov
cmpsl
mov
jnp
push
testb
sti
and
bnd
or
mov
xor
mov
lret
lret
cmp
enter
insl
and
ljmp
adc
es
psllq
psrld
divl
fsts
or
pop
stos
pop
or
arpl
push
incl
pop
push
in
mov
clc
popa
cmc
cmp
mov
inc
out
xchg
xchg
xlat
mov
mov
pop
xlat
cmp
aaa
sahf
lcall
shr
cmc
std
xlat
insl
lret
or
pop
lds
into
push
adc
pop
pop
aaa
sbb
ljmp
fisttpl
xchg
imul
rorb
shlb
gs
pushf
int3
and
push
cmp
mov
fistpl
mov
loop
xchg
xor
pop
dec
subps
not
and
push
sub
mov
add
adc
and
ficoml
fidivl
xchg
xor
sti
iret
out
out
sbb
push
out
adc
pushf
dec
pop
mov
adc
mov
js
pop
out
mov
movb
stos
popf
pop
jp
sbb
xchg
data16
add
adc
mov
fdivrs
test
sar
arpl
lahf
fildll
out
adc
lds
inc
shll
jnp
mov
mov
mov
movsl
lea
jb
pop
jne
mov
lock
insl
dec
xor
fldenv
aas
imul
or
pop
test
push
aam
lcall
jae
dec
cmp
push
aam
lods
sbb
movsb
mov
notl
lahf
mov
xor
ret
pop
mov
repnz
into
sub
iret
imul
test
cmp
add
mov
inc
js
mov
cmp
or
mov
add
pushf
push
sub
insl
stos
lret
repnz
je
and
aaa
xchg
js
xchg
mov
mov
xchg
loop,pn
in
test
mov
inc
pop
xchg
xchg
cmp
xor
sbb
pop
popa
pop
mov
jne
jmp
fs
inc
or
outsb
push
jg
pop
push
mov
loope
ds
xchg
popf
out
into
fwait
testb
mov
jne
popa
pop
xor
mov
jb
mov
stos
add
cmp
jns
addr16
js
shll
dec
test
sti
leave
mov
movsl
aaa
sub
fs
enter
cmpsb
push
push
mov
fildll
mov
xchg
sub
test
sub
mov
push
jge
xor
sub
push
adc
and
inc
rcl
push
xchg
dec
jae
sub
pop
in
sub
and
jge
iret
jo
or
lret
and
fidivs
pushf
in
mov
ljmp
test
or
notb
xchg
test
lahf
shr
xor
ljmp
mov
mov
stos
lret
xchg
dec
xor
push
dec
adc
arpl
icebp
getsec
ffreep
loope
mov
pop
push
repz
dec
mov
xchg
sbb
cld
mov
es
popf
adc
enter
xchg
inc
scas
dec
lea
inc
mull
sub
add
xor
adc
sahf
xchg
ret
add
inc
jbe
cmc
adc
das
cmc
cwtl
cwtl
jecxz
mov
and
in
sbb
mov
fwait
repnz
decl
ljmp
add
xor
fldenv
cmp
test
nop
mov
das
daa
add
inc
clc
or
imul
or
icebp
popa
mov
sbb
xor
into
or
sub
iret
add
jl
repnz
sbbl
xlat
test
push
enter
test
cwtl
jb
popf
in
or
loop
sub
fcmovnb
inc
push
ja
sbb
rclb
xor
loop
inc
dec
and
add
sbb
push
insl
out
push
jns
sub
shlb
clc
push
push
jne
aaa
inc
mov
ja
in
pop
imul
and
fs
inc
xchg
repnz
popf
or
int3
std
repz
jbe
pop
in
inc
daa
mov
mov
push
outsb
mov
jg
movsl
mov
ljmp
inc
xor
jge
outsl
jge
incb
inc
repnz
mov
mov
push
movsb
cltd
mov
movb
mov
divl
push
loopne
dec
pop
push
sub
popa
fs
add
sub
push
ret
jmp
ret
inc
ds
add
fwait
daa
out
inc
jae
add
out
arpl
dec
sbb
sbbl
outsb
dec
cld
lods
ja
inc
mov
cltd
xchg
mov
mov
aas
ret
cmp
dec
iret
subl
mov
jle
into
std
fistpl
mov
daa
dec
stc
mov
pop
pop
leave
fdiv
ret
jne
int3
xor
pusha
xchg
stc
lcall
shl
loop
jmp
dec
div
loop
shlb
push
push
sub
aaa
in
fsubl
es
lds
in
clc
repz
in
jge
fwait
js
mov
cmc
lret
sbb
pop
leave
jle
pop
leave
inc
mov
or
mov
arpl
inc
leave
test
fmuls
xorl
xor
outsb
int
sub
xchg
fwait
adc
stos
adc
dec
dec
dec
sub
add
cmp
adc
sbb
mov
sbb
loopne
inc
cltd
xchg
or
pop
xor
cwtl
fnstenv
stc
adc
cwtl
paddb
xchg
lret
adc
pop
dec
add
jp
out
xor
xchg
fs
jbe
repnz
sarl
xchg
sbb
push
dec
js
std
aaa
jne
xchg
and
test
xlat
push
aad
sub
in
push
xor
loopne
scas
and
or
decl
inc
jbe
test
sub
xor
subb
pand
aad
xchg
adc
and
jp
sbb
mov
scas
pushf
loope
movsb
faddl
pushf
mov
xor
lcall
sti
lods
dec
cmp
arpl
or
pop
out
fsubrs
push
or
xchg
ss
les
sbb
xor
xor
dec
sbb
fsubrl
mov
daa
and
shll
xor
mov
hlt
pop
jle
jo
push
xchg
out
and
and
inc
std
add
and
call
mov
jo
pushf
mov
push
adc
inc
jle
shlb
insb
cmp
insb
push
rcr
fbld
inc
mov
pop
jle
or
push
inc
aas
lret
cltd
push
jl
sub
test
jp
sub
xchg
shlb
setb
and
das
sahf
std
por
add
jmp
inc
enter
out
inc
out
mov
enter
mov
fisubs
cmc
dec
lahf
inc
lds
add
sub
rorb
inc
fsubp
lods
lea
pop
inc
jecxz
push
xor
mov
jg
inc
sub
cmp
fidivl
mov
sbb
sub
pushf
js
leave
sbb
lcall
mov
push
fidivrl
cmp
test
loop
ret
popf
jmp
push
xor
lock
ja
sub
ficoms
push
mov
repz
fs
gs
rcll
mov
jno
cmp
clc
adc
lcall
test
sbbl
or
scas
xchg
stos
push
add
and
loopne
xor
fidivs
xchg
xchg
ss
xor
mov
popa
or
scas
add
lea
sbb
jno
cmpsb
adc
xchg
add
fadds
jmp
incl
mov
jae
int
and
xchg
pop
pop
ss
cmpsb
hlt
jae
out
jl
xlat
ret
lret
ds
fcmovnb
dec
xchg
loop
stos
dec
rcrb
test
xchg
xchg
and
fs
xchg
ljmp
aad
ret
jmp
dec
sub
lret
pop
ret
rcrl
gs
jbe
test
push
in
jp
das
rcr
and
bound
dec
iret
xchg
cmp
out
sub
jp
jns
mov
xchg
in
add
and
test
fbld
aas
jecxz
jle
cmpsl
lods
push
popf
adc
fnstenv
sub
push
in
and
cmp
and
add
fucomp
inc
mov
scas
or
pop
mov
sub
addb
push
jno
shll
std
push
shll
cmp
adc
sub
loope
xor
rclb
inc
test
push
iret
pop
mov
sub
lods
in
leave
fiaddl
inc
mov
das
scas
add
clc
or
loopne
mov
rolb
lret
daa
gs
notl
and
mov
js
add
lret
mov
sbb
rol
jl
fldenv
sub
icebp
dec
ljmp
and
mov
adc
hlt
xor
push
xchg
scas
aad
shrl
or
mov
dec
mov
push
add
ffree
mov
je
idivl
popa
fstl
adc
jmp
jo
ds
inc
add
dec
sarb
adc
jne
xchg
mov
std
lock
adc
mov
jge
ret
mov
xchg
loope
into
add
or
lods
adc
outsl
xor
popa
sub
mov
sub
imul
cmpsl
inc
lods
mov
jno
incl
out
jne
sahf
jo
inc
mov
fstpl
rcrb
dec
pop
fsubl
pop
cmpsb
pop
cmp
add
mov
mov
rcrl
push
inc
loop
mov
and
nop
mov
jg
jno
xchg
rcrl
cmc
pop
xor
xchg
aas
insl
xchg
and
arpl
insl
and
js
sbb
scas
xchg
xor
mov
cmp
daa
jge
call
xor
dec
adc
pusha
or
fnstsw
xor
jmpw
arpl
push
es
mov
loope
in
out
in
cmp
inc
stc
sub
mov
xor
pop
fwait
add
lock
add
add
adc
jmp
aas
movsl
mov
loop
outsl
and
cld
call
jns
shrb
loopne
gs
mov
pusha
imul
jg
insl
jecxz,pn
out
adc
int
jmp
mov
cmpsl
mov
pop
hlt
xor
xor
mov
sub
out
repnz
mov
cmpsl
xchg
scas
jle
test
mov
jo
and
ret
stos
aas
xor
jbe
test
xchg
inc
dec
dec
xchg
add
loop
cmp
fimull
and
les
stos
stos
or
adc
push
arpl
out
dec
clc
int
xchg
cmpl
pop
das
inc
sub
xchg
in
lret
sti
jmp
cs
inc
fstpl
lahf
and
andb
push
jne
adc
cmpsb
sbbl
and
sub
clc
fisubs
add
pop
insb
dec
icebp
ljmp
out
popa
lret
fsubrl
mov
jl
in
xchg
pop
mov
xchg
outsl
sbb
js
iret
in
mov
cmpsb
and
dec
rclb
pop
out
fcompl
addr16
sub
hlt
scas
in
je
lds
addr16
sbb
cmp
int3
push
push
stos
dec
xchg
xchg
or
xchg
into
pop
leave
push
inc
movsl
cmp
ret
mov
cmpsl
cmp
dec
push
mov
mov
sti
xchg
sub
imul
sahf
mov
mov
iret
sbb
lods
ja
nop
pusha
mov
mov
dec
lea
sbb
std
sub
jl
bound
pop
popf
filds
mov
mov
fwait
test
out
push
scas
pop
mov
dec
sbb
aaa
rclb
lret
sub
bnd
sub
aad
adc
push
cltd
ffreep
int
ret
call
and
jle
pop
arpl
rcll
pushl
jmp
stos
sbb
or
data16
xor
or
cwtl
push
adc
loop
adc
out
and
ja
xor
in
fstpl
in
iret
push
out
lcall
adc
popa
clc
push
cld
scas
in
or
add
loopne
popa
fwait
mov
xor
stos
stos
inc
aas
cmp
sub
stc
push
xchg
ss
notb
cmp
mov
pop
aas
push
sbb
test
dec
xor
pop
push
lds
lea
sub
or
jns
ret
lret
ja
rcr
js
inc
js
add
aad
aaa
xor
adc
insl
mov
les
dec
ljmp
subl
in
xchg
cld
mov
push
lock
in
adc
cmpsl
mov
lock
fucomip
inc
inc
insl
outsb
sbb
nop
sub
and
lock
movsl
mov
push
in
into
sub
mov
push
xchg
popf
sbb
jb
and
jno
outsl
ljmp
mov
test
adc
xchg
sub
jmp
test
ror
imul
sbbl
add
cmp
iret
bnd
pop
dec
sub
loope
out
ret
fcmovne
lahf
fwait
xchg
or
mov
lahf
fwait
popa
stos
and
in
sbb
std
jle
fwait
les
mov
mov
leave
pop
test
mov
add
and
cmc
push
adc
imul
xor
imul
dec
xor
mov
pcmpgtd
imul
cs
jmp
mov
imul
lds
mov
fwait
mov
sub
jmp
xchg
roll
repz
icebp
cmp
xor
cli
jne
outsl
xchg
and
lcall
data16
cmp
imul
aam
scas
xor
push
sub
pop
sub
test
icebp
inc
fidivrs
insb
cmp
mov
sbb
mov
imul
std
aam
scas
pop
cmpl
aas
xchg
call
cmp
in
and
daa
xorl
jo
test
jge
in
push
or
xor
mov
popf
jbe
jnp
movsl
pop
push
rcll
sbbl
xchg
cmp
push
adc
jns
jnp
aad
js
gs
inc
pop
loopne
lock
dec
pushf
xor
and
shl
dec
ficompl
ret
cld
jae
or
insl
and
lods
fidivrl
jge
add
jne
jecxz
jp
cmpsb
int
add
jge
bound
cmp
push
mov
cmc
popf
adc
shl
test
int3
shrl
pop
pop
sti
lea
jmp
psubusw
mov
ds
mov
cli
push
push
aas
and
adc
dec
jl
and
jecxz
push
arpl
xor
scas
dec
mov
adc
bound
adc
add
aam
cli
faddl
pop
test
and
xorb
fwait
outsl
sar
rol
push
cwtl
mov
repz
sub
push
jge
cwtl
arpl
xchg
cmpsl
lcall
sub
dec
call
lock
ds
sub
pop
sub
test
mov
insb
jge
xchg
push
es
jge
or
out
and
out
fldt
repz
jns
sahf
jp
sub
add
test
inc
pusha
cmp
mov
clc
adc
adc
jle
lret
lds
aam
cld
jecxz
sub
xor
jmp
xchg
xchg
mov
xchg
in
aam
adc
inc
mov
scas
fisttpll
mov
movl
mov
pop
pop
in
pop
aas
daa
je
leave
cmp
adc
out
insl
mov
hlt
dec
inc
mov
add
push
ja
in
push
adc
shrb
or
dec
mov
icebp
mov
in
pusha
les
mov
cmc
sbb
inc
ficompl
xor
push
shrb
popa
rcll
inc
mov
aam
repz
fwait
lret
sub
adc
sbb
add
dec
enter
fdivrl
jp
and
cltd
outsl
xor
inc
stc
cwtl
sbb
inc
sub
movsl
test
add
jge
jo
in
fcmovnb
in
test
js
lahf
lds
or
mov
daa
mov
jae
mov
sbbb
xor
lea
addr16
pop
mov
lea
add
xchg
data16
mov
jecxz
sbb
loope
jae
lret
push
mov
out
leave
lcall
fisttpll
clc
cmpsb
and
cld
aaa
sahf
jns
or
xchg
movsb
aam
mov
cli
cmpsl
jmp
mov
icebp
sbb
push
mov
inc
dec
or
lret
inc
jne
add
mov
jle
cmp
pop
sub
loop
fstl
and
outsl
test
and
sets
aam
jo
mov
mov
call
jbe
divb
push
jmp
xchg
or
repz
scas
pop
lods
data16
loopne
xchg
and
lcall
inc
or
stos
cli
inc
lahf
cmpsl
aaa
repz
jg
or
insl
dec
jne
cmp
dec
pop
push
shrl
jnp
je
mov
loop
adc
inc
idivl
dec
xor
enter
jge
dec
adc
cld
int
or
dec
mov
add
es
sbb
jecxz
or
aad
jp
jmp
call
imul
mov
mov
fmul
lods
dec
pop
xchg
jecxz
outsb
imull
fucom
mov
mov
frstpm(287
addr16
hlt
mov
xor
jno
mov
popa
jb
cmp
insb
or
mov
out
lret
pop
sbb
insb
xchg
cld
orl
inc
fisubrl
int3
fbstp
jb
aaa
cwtl
cmp
aad
daa
ja
push
mov
inc
jno
add
or
jnp
popf
ja
xor
mov
xor
pmulhuw
fnstcw
dec
and
xchg
lcall
jecxz
jnp
shll
fidivs
sub
insl
repnz
mov
mov
addr16
cmpsb
cltd
sbb
sti
xlat
cs
inc
add
sbb
std
aaa
loopew
mov
pusha
add
and
add
data16
mov
mov
lds
mov
push
fnstsw
xor
das
out
aad
mov
dec
andb
xchg
cmp
sbb
and
andl
out
dec
mov
xchg
lock
inc
mov
fildl
faddp
push
daa
aam
orl
es
in
mov
add
fmull
cmpsb
and
roll
adc
loop
fwait
xor
jmp
cmp
sbb
adc
mov
mov
mov
fnstenv
xchg
dec
mov
add
lahf
fwait
int3
push
sbb
out
xchg
and
insl
repz
test
mov
push
pop
fnstcw
imul
scas
sub
ss
das
add
mov
js
pop
sbb
xorl
mov
repnz
inc
popf
gs
ljmp
and
jmp
jecxz
cmp
icebp
outsb
mov
sbb
leave
scas
stos
rorb
mov
aad
pop
mov
cltd
dec
jmp
push
xchg
xor
inc
mov
imul
push
cld
or
insl
and
lock
xchg
inc
xchg
out
mov
cmpsl
ljmp
rorl
in
aam
jl
lods
adc
or
mov
sarl
sbb
out
sub
wrmsr
ret
sbb
movsb
les
xchg
and
cwtl
mov
jne
mov
cmp
js
sub
xchg
gs
xchg
push
mov
push
dec
sahf
aam
decl
xchg
shrb
and
pop
test
arpl
adc
test
loope
mov
or
mov
jg
jb
jle
push
fcomp
xchg
das
or
rol
fstps
orl
inc
pop
mov
xor
push
shlb
popf
movsb
loope
push
insl
mov
mov
cmp
mov
arpl
in
xchg
mov
sarl
pop
scas
cmp
loope
scas
int3
ret
mov
push
push
cmp
cmpl
movsb
fwait
xchg
cmc
sti
sbb
and
inc
mov
adc
ds
mov
adc
mov
cmpsl
arpl
stos
inc
out
outsl
jl
rcrl
sub
mov
cs
outsl
jno
add
mov
inc
int
push
inc
sbb
sarl
fistl
and
icebp
test
xchg
sbb
aaa
in
scas
mov
ret
jecxz
fsubrs
loopne
aas
in
pop
cwtl
cmpsb
cwtl
jle
inc
dec
cli
fmull
call
xchg
outsb
sub
push
out
dec
lods
mov
lea
popf
pop
movsl
mov
cltd
jbe
mov
pusha
mov
mov
xor
jmp
push
xchg
or
aam
and
mov
shrl
loop
in
cltd
lods
mov
pusha
pop
xchg
out
sar
or
inc
addr16
mov
sbb
cmp
lds
or
add
rcr
adc
test
insl
movsl
pop
add
outsb
fisttps
cmovge
mov
push
mov
cmp
fcompl
decl
push
aaa
dec
sbb
enter
sbb
adc
cmp
bound
insb
movsl
jo
pop
aas
inc
or
push
mov
adcb
cwtl
mov
push
mov
in
loope
xlat
loopne
je
stc
test
out
pop
imul
fs
lea
jg
cld
fisttpll
xchg
jp
mov
push
mov
je
ret
cmp
adc
test
repnz
xlat
fcoms
sub
js
ret
dec
xor
out
push
mov
cmc
clc
sub
mov
push
mov
add
dec
pop
push
and
mov
or
imul
mov
inc
pop
enter
icebp
mov
cmp
push
sbb
cwtl
pop
push
pop
xchg
xor
notl
add
xchg
fists
add
data16
mov
adc
cmp
mov
mov
and
mov
adc
sahf
out
xor
push
sbb
lret
les
jge
pop
lods
or
pop
jo
add
add
mov
jmp
repnz
loopne
adc
or
stos
hlt
jge
jbe
cmp
out
int3
daa
push
cmpb
mov
shr
inc
mov
sbb
sub
out
imull
int
loopne
psubusb
or
sub
cmp
psrlq
mov
add
inc
daa
lcall
and
sub
jmp
jge
sub
popf
loopne
in
jl
mov
xor
les
sub
adc
pop
cmp
jbe
enter
mov
int3
dec
adc
inc
xchg
sbb
push
mov
xor
xchg
fcoms
hlt
pop
daa
clc
or
sub
hlt
decb
push
jle
jmp
repnz
sbb
mov
mov
popf
cmp
cmpsl
jmp
mov
dec
pop
pushf
ficomps
mov
jno
sub
stos
push
int3
add
bnd
pop
fidivrl
jne
aam
mov
sub
stc
fwait
adc
mov
sbb
push
dec
mov
and
arpl
insl
mov
cmp
fdivrs
test
clc
adc
testb
adcb
jns
dec
lods
out
xchg
into
sub
icebp
push
cmp
dec
pop
lret
adc
aas
iret
fisubrs
inc
mov
and
fs
cmc
mov
cs
cli
and
arpl
pop
fneni(8087
outsb
add
push
adc
mov
xchg
xor
in
lods
mov
ficomps
inc
push
jns
js,pt
test
mov
cmp
push
ret
imulb
mov
stc
jno
aad
mov
or
inc
or
roll
cli
or
test
mov
leave
bound
repz
shrb
imul
movsl
push
sub
jmp
lds
addr16
sub
dec
hlt
add
push
jl
movsb
pop
das
jmp
fisttpll
xchg
mov
js
mov
add
out
mov
stos
push
mov
rorb
jbe
push
mov
cmp
sub
cwtl
stos
mov
outsb
mov
and
mov
jnp
jns
test
loop
jns
iret
mov
cmpsb
addb
scas
pop
insb
jl
add
and
jp
xor
popa
cmpsl
push
add
adc
inc
ret
inc
orb
sahf
loope
inc
cmp
push
data16
ds
cmp
int
outsb
adc
add
test
loopne
cmp
popa
fisttpl
inc
mov
xchg
inc
fildl
jae
sub
bnd
cmc
scas
loope
lea
rclb
mov
scas
push
add
outsb
xchg
add
imul
ret
leave
call
mov
xor
mov
loope
test
stc
sti
inc
repz
test
fmul
mov
xchg
mov
xor
ljmp
in
adc
mov
jg
pop
fcoml
outsb
fnsave
or
cmp
push
jne
into
xchg
daa
inc
cld
fisttpll
xor
mov
and
adc
sarb
rolb
dec
mov
sub
test
jmp
test
shlb
pop
xchg
popf
sub
loop
fs
into
sbb
ja
mov
jp
sti
js
test
inc
outsb
xor
cli
arpl
xchg
lret
in
push
in
icebp
repnz
popa
cmpsb
fsub
sbb
int
xchg
lret
pop
lods
sahf
rcl
cmp
jecxz
stc
xchg
js
fcmovnb
pop
sahf
xchg
repnz
loopne
movsl
ss
stos
push
int
xor
mov
sbb
lret
aad
stos
jl
dec
int
sub
xor
stos
dec
les
lods
outsb
dec
dec
aad
xor
outsb
call
push
inc
cld
mov
ficoml
inc
insb
aam
sub
and
xor
sub
xchg
addr16
jno
daa
into
pop
cmc
mov
cli
mov
and
rorb
pop
mov
adc
xor
filds
xchg
mov
stos
sbb
xor
push
es
inc
int
in
mov
or
sbb
inc
xchg
xor
jo
pusha
mov
sbb
cmpsl
lock
cltd
loopne
pop
ljmp
push
mov
sub
pop
sub
fs
inc
xor
and
sub
out
loope
rcll
jnp
push
push
mov
mov
lret
pop
inc
push
adc
mov
add
sbb
and
or
jmp
push
cmpsl
inc
add
lock
lds
pop
aam
pop
test
mov
call
push
popa
mov
cmp
stos
andl
lret
xchg
cmpl
mov
rcrb
mov
mov
out
test
xor
xor
mov
test
out
scas
out
push
cmpsb
mov
cmp
fs
pop
jecxz
xlat
cld
and
stos
outsb
or
loopne
or
push
jle
and
js
ja
pop
sbb
dec
add
movsl
mov
mov
cmp
ljmp
imul
xor
rolb
sbb
xor
jb
leave
jo
add
fmull
and
es
std
xchg
scas
mov
aad
lea
sbb
and
xlat
jnp
fiadds
jge
mov
mov
push
pop
ja
mov
pop
jb
xor
leave
adc
jb
xor
adc
dec
or
mov
mov
js
push
int3
nopl
xchg
cmp
or
popa
push
mov
lds
cmp
and
mov
aad
push
cmp
inc
dec
arpl
jno
pushf
shr
mov
add
stos
lcall
arpl
pop
loope
xlat
out
addr16
or
jle
insl
aad
inc
lods
subb
sti
movsb
push
dec
sbb
push
inc
cmp
mov
scas
sub
jno
iret
mov
cmp
sub
loopne
in
adc
adc
dec
mov
fstps
scas
push
pop
mov
mov
in
xchg
xor
dec
ljmp
sahf
jle
stos
out
jno
stos
icebp
clc
repnz
sbbb
inc
xchg
icebp
jns
push
fsubr
mov
adc
or
popf
lret
cs
sub
or
push
ljmp
jo
mov
imul
jo
sub
push
push
movsb
pop
adc
mov
daa
adc
addr16
xlat
push
movsb
xor
shlb
or
pop
sbb
sub
testl
adc
inc
add
out
aaa
int
in
push
call
mov
rcll
jns
movsb
loopne
and
sahf
mov
dec
outsl
cmp
outsb
cltd
add
inc
inc
xchg
mov
jbe
push
cmp
push
hlt
fsubrs
xchg
pop
or
lahf
lds
aaa
lret
mov
ret
jmp
movsb
lock
lods
dec
stos
inc
dec
mov
xor
sahf
pushf
adc
sub
pushf
ret
jb
xchg
dec
fldt
aaa
leave
jecxz
push
stos
jle
ror
loope
sbb
adc
in
xchg
push
test
int3
pop
xor
adcb
inc
mov
or
fsubs
mov
xchg
and
xor
out
mov
xor
xchg
into
out
and
repz
inc
jne
jle
xchg
pop
dec
jp
push
sahf
and
pop
push
aad
inc
lret
cmpsb
gs
int
sbb
out
aas
or
or
sub
fstl
push
shr
mov
bound
cmp
push
cli
sar
jg
push
std
push
ss
stos
lret
out
rclb
mov
mov
xchg
sbb
inc
or
cmpsb
and
mov
les
lods
fsubrp
ja
inc
into
sub
xor
mov
int3
mov
jae
adc
insl
mov
bound
cwtl
sbb
jle
mov
pop
add
iret
jmp
jmp
add
repnz
push
fdiv
mov
subb
push
shlb
andl
repnz
jo
xlat
call
adc
call
add
aad
insl
pop
mov
in
leave
ss
dec
popf
xlat
sub
nop
cmp
xor
adc
xlat
sub
jns
push
andb
dec
mov
movsb
pop
fiaddl
ja
jge
push
test
mov
dec
fsubr
fucomip
push
imulb
mov
adc
mov
cmpsb
test
stos
int3
mov
dec
xor
cltd
inc
in
mov
fs
xor
cs
cwtl
cmp
sti
ljmp
mov
std
sub
cwtl
std
in
pop
ret
mov
adc
bound
jo
mov
lcall
and
adc
nop
and
loopne
mov
pop
add
xchg
mov
dec
dec
dec
add
leave
push
daa
xor
lahf
add
fs
call
rclb
or
dec
mov
mov
and
arpl
mov
sarb
stos
add
nop
sub
mov
add
stos
and
mov
mov
repnz
mov
xor
std
loop
pusha
sarb
xorb
mov
pop
xor
xor
adc
inc
out
mov
in
and
pop
stos
jmp
call
call
fabs
mov
xchg
adc
and
lds
dec
into
sub
fucom
mov
inc
xchg
jl
cmc
cmp
icebp
cltd
fldt
into
or
jmp
xchg
outsb
mov
push
xor
inc
in
or
lods
mov
push
xchg
out
ret
andb
adc
xor
mov
dec
add
mov
iret
repnz
sbb
clc
xchg
mov
push
out
mov
inc
int3
push
or
bound
cli
jp
push
dec
jae
inc
call
sarl
arpl
add
dec
push
sbb
pusha
jbe,pn
cmpsb
ret
gs
push
jmp
mov
call
xchg
dec
sub
add
fs
and
push
imul
loopne
mov
adc
in
push
bound
wbinvd
pop
loope
es
sub
xchg
mov
clc
jmp
sbb
push
inc
inc
mov
xor
out
jecxz
and
in
sub
hlt
adc
shl
mov
jl
jge
add
dec
jne
das
mov
stc
daa
mov
test
cltd
xor
xchg
cmp
dec
fst
inc
push
mov
adc
and
les
lret
mov
aaa
pop
shll
mov
shrb
push
lret
adc
pop
js
out
pop
lcall
testb
mov
push
ja
loopne
sti
cmp
mov
push
daa
imul
mov
dec
xor
lcall
mov
xchg
inc
cs
inc
hlt
adc
pushf
jb
jae
mov
sbb
call
and
mov
in
popa
outsl
enter
jbe
es
es
sub
push
fldcw
jae
push
xchg
fdivr
cmp
ss
mov
leave
mov
or
iret
insl
popa
fwait
hlt
mov
cmp
ja
popa
pop
dec
loop
xchg
insl
mov
jl
dec
cs
or
mov
fisttpll
mov
leave
test
jae
sbbl
mov
add
fistl
pushf
jle
cmpsl
dec
pushf
pop
js
dec
mov
out
inc
pop
inc
leave
sub
adc
negw
jne
mov
and
cld
dec
adc
iret
sbb
cmp
lahf
int3
call
loope
fwait
sar
xchg
jg
lret
lcall
lret
xor
addr16
into
mov
fimuls
sub
dec
adc
push
push
add
jno
stc
xor
arpl
xlat
movsl
xchg
pop
or
or
insl
mov
das
pop
cmp
sbb
repz
das
xor
dec
jno
sub
data16
mov
fsubrl
out
pop
cmp
mov
decl
mov
inc
shr
dec
and
push
das
cli
push
frstor
stc
inc
cltd
cld
push
xchg
pop
incl
jle
or
imul
xchg
rorl
push
pop
mov
fiaddl
sub
scas
mov
push
fistl
mov
mov
andl
or
sbb
nop
imul
jl
inc
inc
mov
in
clc
mov
cmp
roll
mov
jo
pop
inc
mov
mov
loopne
sbb
mov
jns
mov
scas
je
jae
xor
mov
dec
idivb
js
dec
push
imul
adcb
inc
cld
and
data16
sub
xchg
add
xchg
js
cs
pop
mulb
or
pinsrw
sbb
stc
test
loop
inc
in
mov
adc
mov
jl
cli
bound
xor
and
stc
and
mov
pop
push
paddq
stos
jge
pop
pop
add
test
aaa
sbb
rol
and
arpl
leave
adc
scas
test
testb
loopne
xor
insl
push
scas
mov
hlt
or
loop
pop
dec
cltd
mov
sub
jne
cmp
adc
sar
mov
rorb
out
dec
and
loop
aas
lock
call
sub
orl
ds
jo
cli
cld
fwait
push
mov
mul
ret
push
dec
xor
dec
adc
mov
outsl
jge
je
xlat
jo
mov
mov
pop
cld
sbb
in
pop
lcall
adc
push
pop
js
jl
popa
mov
fistps
xchg
and
adc
ret
sbb
cmp
xchg
xor
repz
stos
idiv
jmp
xchg
and
sbb
lret
pop
ja
or
mov
dec
push
or
loop
mov
rcrl
dec
push
aad
jecxz
pop
sbb
mov
adc
mov
mov
pop
mov
mov
cmp
rcl
iret
out
lret
dec
sub
cmp
mov
and
test
jno
add
adc
movsb
xor
test
xchg
leave
in
sbb
xchg
dec
iret
test
into
xchg
mov
stos
int3
addr16
lret
push
cmp
fstpt
sbb
cld
das
mov
stc
xor
lds
test
jb
daa
andl
mov
mov
push
adc
or
add
mov
dec
test
in
xchg
push
outsl
int3
pop
inc
ljmp
xchg
push
pop
out
lock
jb
mov
icebp
out
jl
inc
fmull
dec
fmull
pop
push
push
inc
xor
cmpsl
movsl
sub
cli
movsb
jne
dec
cmpsb
hlt
fimull
lock
fwait
std
loope
lods
sub
inc
jb
outsl
into
pop
xor
test
push
sbb
fsubr
adc
add
cmp
dec
push
sbb
xchg
mov
or
jb
repnz
jbe
lcall
aas
lods
adcb
add
jmp
imul
imul
mov
or
xor
into
out
lods
pop
add
mov
into
scas
dec
jae
iret
mov
shl
cmp
push
xor
cmpsb
adc
or
mov
ljmp
fsubrs
fstpt
clc
add
rcr
lret
cmp
popa
lds
out
mov
sub
lret
sbb
jmp
pop
fwait
push
movd
xor
add
sub
adc
lock
push
stos
adc
cmp
inc
int3
outsb
into
arpl
xlat
and
mov
add
loope
jge
jp
je
add
cmpb
call
movsb
popa
sbb
cmp
or
jecxz
or
adc
pop
ret
es
roll
jge
repz
scas
sbb
mov
in
pop
xchg
lea
mov
test
push
cmpb
jae
rol
out
pop
mov
scas
ja
sbb
insb
cmp
ret
xor
push
scas
imul
into
cltd
mov
mov
sub
popf
lret
hlt
cmpl
xchg
pop
jnp
push
and
mov
xor
mov
in
pop
dec
mov
mov
jge
mov
adc
leave
jmp
xchg
pusha
dec
fcoms
xchg
loop
stos
adcb
movntps
mov
fdivs
lock
lahf
repz
movsb
xlat
inc
sub
sub
or
pop
test
jmp
push
and
arpl
and
aas
clc
ja
daa
jg
ja
orl
xchg
cmp
jbe
stos
xchg
fwait
xchg
xchg
mov
jne
lahf
fidivl
jle
jnp
mov
cmp
xchg
lea
iret
or
insb
pop
mov
mov
loope
add
cld
inc
inc
lods
movsb
dec
aaa
mov
push
xlat
sub
stc
adc
add
sbb
mov
xlat
push
mov
cwtl
xlat
loopne
mov
push
add
mov
xchg
sbb
loop
hlt
add
sbb
add
sub
or
into
xchg
scas
pop
inc
imul
icebp
pop
pop
and
push
rcll
xlat
int
pop
jb
inc
cltd
test
push
add
push
mov
pop
sahf
stos
leave
ja
or
push
jmp
mov
mov
adcl
enter
push
mov
scas
and
pop
je
shlb
insl
scas
cmc
mov
dec
es
scas
mov
adcl
jnp
jno
cmc
pop
insb
ds
cmpb
add
inc
out
xchg
mov
outsb
ja
rcrb
fisttpll
aaa
or
in
clc
jns
mov
sub
testl
std
aam
jmp
adc
cmpsb
cmp
add
xor
sahf
loop
jae
or
lods
dec
inc
inc
cmc
fwait
dec
sahf
pop
repz
xchg
pop
xor
std
push
mov
in
cltd
adc
mov
mov
scas
adcl
jbe
and
fldenv
out
les
xchg
stos
sub
jge
adc
adc
testl
lahf
popa
cmpsl
dec
mov
xlat
outsb
scas
push
lods
sub
call
test
and
pop
fidivrl
add
lods
and
movsb
mov
jnp
leave
adc
and
std
inc
ss
out
inc
jmp
into
outsl
cwtl
je
xor
ds
iret
insl
pusha
pop
cmpsl
jp
jns
jle
imul
jns
int
mov
mov
fisttps
leave
sub
das
or
jmp
dec
mov
xchg
hlt
jmp
push
addl
fwait
hlt
push
xor
iret
sbb
inc
xchg
aaa
mov
popf
jno
arpl
pop
mov
sub
cli
mov
add
cmpsl
and
xchg
mov
into
xchg
test
test
adc
subl
dec
xchg
cli
jle
arpl
sarb
aad
aaa
xor
mov
dec
movsl
mov
in
pop
lea
inc
mov
sbb
cmp
enter
insl
jae
test
cmp
cltd
and
sbb
insb
and
jp
or
ret
push
mov
push
rcl
dec
js
rclb
ds
aad
and
mov
xlat
cltd
push
mov
orl
in
sti
xor
rcl
add
pop
sub
cmp
lods
fcomps
add
or
and
push
aaa
jbe
ljmp
aaa
and
mov
push
shr
sbb
mov
arpl
popa
xor
cs
mov
xor
in
xchg
adc
dec
arpl
pop
jb
mov
sbb
inc
imul
jecxz
testb
push
test
les
std
cmc
aam
fucom
das
lods
mov
gs
mov
or
jp
aaa
in
mov
ja
lock
pop
adc
imul
and
mov
push
stos
mov
and
mov
lds
xchg
lcall
inc
fs
shll
pop
mov
repnz
aaa
ljmp
dec
xchg
cmp
sub
popa
xor
call
xchg
mov
or
jb
push
pop
mov
dec
pop
movsl
push
jnp
call
pop
bound
sub
adc
insl
and
push
pop
push
scas
jbe
shl
adc
inc
push
insl
pushf
xor
jno
pop
push
adc
mov
sarl
sub
imul
jecxz
jg
addl
inc
pop
pop
sbb
aaa
cmpsb
sbbb
sarb
sbb
loop
testb
xchg
jl
je
push
and
mov
loop
hlt
std
inc
mov
sbb
jl
pusha
inc
test
mov
cmp
test
jae
pop
and
push
nop
pop
inc
in
out
fsubl
xchg
loopne
outsl
roll
mov
jns
xchg
add
xchg
ret
add
out
inc
mov
dec
scas
mov
pushf
ss
jbe
test
loopne
loop,pn
sbb
icebp
clc
mov
out
mov
and
cli
mov
rolb
sar
or
or
cs
rcrl
jl
loope
mov
ja
movsb
dec
jbe
cld
sahf
push
add
outsl
int
mov
loope
repz
es
int3
dec
shlb
sbb
add
out
sbb
dec
add
dec
loopne
push
popa
mov
or
push
aaa
xlat
ljmp
std
xchg
stos
clc
dec
insl
in
sbb
mov
mov
inc
mov
outsb
mov
stos
and
sub
cmp
inc
loopew
jbe
lea
sub
pop
scas
inc
test
xlat
mov
imul
lock
jbe
fldt
or
xchg
ds
dec
mov
fistpl
les
imul
xchg
nop
inc
ds
iret
fstpt
sbb
fldcw
mov
pop
sbb
scas
mov
fnstsw
addr16
add
int3
dec
insl
jle
and
lods
cmp
push
inc
pop
mov
div
cld
div
xor
outsl
shlb
dec
pushf
icebp
mov
fstl
mov
dec
int3
xor
ret
add
dec
loopne
or
sbb
push
std
scas
cmc
mov
cs
add
push
arpl
andb
cmp
sahf
test
and
jbe
lret
sahf
and
insl
aam
xchg
xchg
mov
mov
lahf
testb
cmp
out
jmp
aas
push
lods
mov
leave
adc
sub
and
insl
mov
jbe
out
scas
jae
lods
mov
mov
aad
imul
sbb
ret
jmp
movsb
mov
loopne
mov
mov
sub
xor
sub
cwtl
mov
iret
adc
call
outsl
lds
outsl
fwait
jns
sub
cmc
shlb
nop
dec
scas
js
pop
xlat
shl
shrb
fwait
cmp
fisubs
mov
pop
mov
scas
stos
fmulp
push
sbb
int
cltd
stos
mov
mov
repz
pop
dec
out
pusha
sbb
adc
rclb
mov
adc
mov
pop
mov
and
subb
std
cmp
test
jne
insb
inc
mov
fsubl
jno
hlt
mov
xchg
and
out
sub
out
mov
ds
push
jnp
ret
shll
inc
fnstenv
push
call
inc
xlat
lret
call
lods
push
repnz
bsr
inc
mov
ficoml
jle
aam
or
mov
loope
addb
dec
in
sarb
aas
push
push
mov
push
int3
fldcw
push
xchg
mov
sahf
dec
es
dec
test
mov
aam
fdivs
out
insl
jp
frstor
fcmovnbe
out
sub
add
fdivrs
popf
out
pushf
ret
mov
aad
dec
mov
sbb
sti
xor
sbbb
sbb
fdivrp
popa
andb
mov
push
icebp
dec
mov
mov
lods
push
or
dec
pop
dec
test
cmp
enter
and
fs
pop
mov
xor
insb
imul
movsb
xchg
outsl
mov
push
in
movl
xor
jge
sub
jo
sbb
ljmp
pop
cmc
push
mov
ss
hlt
fsubl
repz
mov
jbe
jp
nop
add
lahf
pusha
push
dec
mov
nop
arpl
lods
dec
or
fsubr
ret
sub
or
stos
pop
ficomps
scas
or
shl
test
mov
cmp
jmp
aam
pop
lret
dec
and
mov
aaa
jmpw
lret
aam
mov
jno
or
fldenv
xchg
lcall
arpl
in
fdiv
stos
cltd
lea
jge
ret
xchg
pop
or
jae
hlt
or
xor
aas
mov
cmc
and
push
iret
sbb
pop
cwtl
or
test
or
shrl
data16
inc
xchg
adc
outsl
push
mov
enter
fs
out
sbbb
cltd
cmpsl
sbb
fs
and
mov
mov
clc
sbb
iret
jo
leave
shll
push
xlat
pop
ja
add
dec
adc
insb
bnd
mov
bound
pop
movsb
mov
push
loopne
or
call
fs
xchg
xor
dec
js
adc
lcall
mov
xchg
mov
pop
push
pushf
pop
xor
scas
pop
mov
nop
and
subl
cmp
dec
pop
xor
test
movsl
movsl
push
loop
ss
pusha
data16
pop
repnz
mov
inc
add
adc
aam
jp
sbb
js
push
sub
hlt
jl
xchg
out
out
xor
mov
cmpsl
sub
in
or
push
jne
cmp
mov
sarl
lahf
lret
mov
pop
lods
xlat
ficompl
mov
lret
lea
add
lcall
lea
aad
adc
insb
cmp
lods
syscall
mov
jmp
imul
divl
fstps
scas
xor
ret
insl
sub
outsb
and
and
cmp
push
int3
cwtl
push
clc
mov
loop
dec
push
repnz
pop
sarl
xor
loopne
and
rcrl
movsb
or
sbbb
cmc
ds
fmul
std
insl
lds
sbb
xchg
xor
sbb
sbb
ficomps
lods
jl
mov
pop
inc
or
je
shrl
mov
movsl
in
filds
leave
imul
popa
shr
hlt
test
cmpsl
xorl
mov
adc
jl
add
stos
xchg
mov
adc
cmp
cmpsl
pop
push
push
out
lcall
jne
pop
lcall
out
mov
sbb
jmp
scas
out
into
mov
popf
jmp
push
ja
negl
and
aas
or
xchg
lcall
sbb
xlat
xor
imul
mov
lods
push
sbb
clc
xor
mov
repz
es
pop
xchg
push
cld
cmp
pop
movsb
xlat
mov
in
outsb
fnsave
dec
mov
xchg
mov
cmp
and
shlb
and
cmp
popf
sub
test
popa
or
clc
or
aaa
jae
pop
pop
std
mov
psrlq
cmp
adc
adc
sub
mov
mov
xor
adc
popf
ljmp
jno
cld
fldenv
call
dec
addb
fists
dec
xor
mov
sub
jge
mov
xchg
xchg
pop
push
sbb
sti
outsl
pop
push
push
xor
cmp
sti
or
insl
jbe
cmp
jmpw
mov
jbe
dec
lret
mov
push
mov
orl
in
icebp
clc
outsl
mov
orb
jbe
mov
pusha
push
xchg
in
dec
scas
std
push
add
nop
or
adc
add
dec
push
xor
imul
gs
into
loopne
xchg
popf
jnp
mov
dec
arpl
cmp
or
inc
xchg
pop
jecxz
push
rcrb
addr16
sbb
out
shlb
aam
mov
jae
mov
outsl
mov
scas
lret
out
test
mov
ret
fistl
fcmovnbe
lds
aad
in
push
adc
mov
aaa
inc
inc
adc
xor
cltd
lods
aaa
pop
dec
sbb
push
aam
call
clc
sti
add
pop
xchg
iret
setge
in
les
je
testl
outsl
push
movsl
imul
pop
jne
and
insb
std
mov
es
ret
push
sbb
test
jmp
mov
je
inc
lcall
mov
cmp
cmp
xlat
jmp
push
xchg
push
out
sbb
jmp
pop
gs
push
mov
loopne
loope
sub
sbb
mov
add
jle
adc
stos
jno,pn
or
pop
ror
jmp
jmp
xadd
inc
fsubp
xchg
call
jge
mov
test
div
jl
mov
dec
ja
stc
sub
mov
loope
sub
js
ret
pop
push
shrb
stc
cmp
fnstcw
jecxz
repnz
inc
jmp
cltd
pop
jmp
subb
xchg
lret
or
jns
popa
xchg
arpl
inc
mov
and
cmc
mov
leave
lods
sub
lret
inc
xor
ds
lret
out
adc
testb
adc
and
jo
dec
mov
shrl
mov
xchg
jecxz
jns
xchg
sub
es
and
in
call
scas
or
loop
add
push
jmp
test
popf
sbb
xchg
rcll
jp
sti
sub
out
ss
sbb
scas
stos
inc
cwtl
cmp
inc
imul
add
push
dec
sub
mov
cmp
es
mov
in
push
inc
scas
ja
and
pop
icebp
dec
subl
inc
into
ret
or
mov
jo
ret
add
cwtl
jle
or
int
pop
out
daa
sub
test
repz
cmp
imull
cmp
dec
cmovns
fs
sbb
cmp
pop
xchg
mov
and
mov
pusha
jle
mov
cmpsb
adc
cmp
xchg
jecxz
aaa
insb
mov
pop
adc
dec
jb
lret
push
out
jge
ljmp
jge
fwait
addl
sub
push
sbb
cmpsb
sub
loopne
cmp
xor
cmpsl
fstpl
sbb
add
pop
lds
add
pop
xor
shlb
push
pop
sub
adc
push
mul
stos
loope
jmp
jl
xchg
push
lcall
mov
mov
sysret
dec
sub
or
sbb
jns
sbb
jns
dec
push
paddw
loop
mov
mov
loop
mov
dec
pop
std
push
divb
loopne
jge
loop
int3
sti
cwtl
pop
in
stos
lock
loope
fs
sub
sub
push
xor
out
negl
lret
mov
mov
flds
pusha
push
add
or
testb
cmp
popa
out
add
test
mov
in
mov
sbbb
std
inc
adc
nop
js
cmp
and
jnp
push
xor
scas
stos
das
inc
test
mov
daa
popf
sub
mov
or
sbb
mov
rcrl
and
pop
insb
xchg
movsb
cmp
insl
cltd
fs
ret
fwait
mov
nop
push
adc
gs
mov
push
shlb
mov
jo
dec
icebp
insb
stos
hlt
and
and
je
push
scas
lock
cmp
enter
stos
inc
dec
mov
cs
jbe
inc
lcall
mov
xchg
mov
mov
adc
clc
xchg
scas
fwait
cmp
je
jp
jae
pop
dec
pop
gs
or
shlb
mov
mov
int3
jo
cmp
mov
nop
cvtps2pi
adc
xchg
cmp
and
inc
inc
mov
cmp
out
mov
or
movsl
in
lock
ret
int3
pushf
xor
dec
or
pushl
js
insb
movsl
fisttpl
addr16
lods
push
into
cmp
ljmp
movl
xor
push
sub
in
pushf
gs
xor
ljmp
sub
sub
sti
xchg
fimuls
imul
jg
aad
sub
mov
push
or
stos
inc
aaa
int
pop
aad
cmp
mov
xchg
add
outsl
in
xor
push
cmp
mov
test
lock
in
pop
pop
icebp
icebp
xor
in
and
std
fists
dec
adc
xchg
sbb
lret
jno
shlb
sti
fnclex
loopne
sti
dec
cmp
lods
in
and
cmp
pop
test
xlat
xchg
cmpsl
mov
popa
ds
test
loope
sti
into
jcxz
push
push
inc
movsb
mov
pushf
stc
sbb
cmp
fdivl
inc
push
in
sbb
arpl
mov
add
pop
sbb
mov
scas
jb
push
imul
imul
jecxz
imul
mov
ficoms
ret
mov
mov
pop
dec
inc
in
inc
lods
nop
pop
xchg
pop
mov
push
repz
adc
mov
jno
pop
shrl
test
imul
ret
cmpsl
mull
sub
insl
jbe
adc
rcrl
inc
sarl
and
loope
inc
push
mov
es
or
jp
push
or
or
gs
cli
add
fnstenv
pushf
xchg
xchg
pop
dec
sub
push
movsl
push
inc
nop
loopne
icebp
cs
add
fstpt
subl
pop
or
mulb
adc
dec
mov
stos
inc
mov
xor
iret
sbb
push
dec
ret
insb
out
add
mov
inc
sbb
test
or
mov
movsl
or
adc
push
push
out
mov
and
sbb
insb
pop
ret
xor
xchg
popa
sbb
fcmovnb
in
push
jno
lret
mov
mov
inc
mov
mov
lods
out
sbb
add
xchg
je
clc
mov
dec
mov
adcb
mov
cmp
loop
in
add
in
xchg
iret
sub
and
daa
mov
addr16
movsb
mov
out
pop
mov
jo
xor
fisubs
mov
jno
out
sti
shrb
dec
test
inc
dec
rorb
cmp
jp
and
scas
xor
push
pushf
xor
dec
fsin
mov
add
push
inc
out
add
dec
xchg
mov
jmp
shll
inc
mov
sbb
mov
jg
push
pop
pop
in
pusha
mov
fs
mov
jns
xchg
mov
lcall
sub
gs
sub
cmp
fdivrl
int
shlb
lods
fldt
out
dec
in
shlb
mov
jno
jnp
aad
cmpsl
cmp
xchg
pop
je
mov
sbb
dec
mov
mov
repz
in
test
outsl
rcl
sub
lahf
jnp
jp
or
pop
xchg
mov
testb
adc
fldcw
inc
test
popa
cmc
cwtl
pop
lcall
movsl
pop
sbb
xchg
sbb
cmpb
xchg
je
dec
pop
mov
inc
sub
in
pop
lock
stos
cmpxchg
and
int
dec
mov
lods
xchg
xchg
fwait
push
push
push
sahf
pushf
fwait
mov
out
add
mov
loope
shlb
mov
cmc
mov
or
jmp
js
fldt
lods
pop
out
mov
nop
mov
in
adc
xor
lods
mov
out
ror
dec
test
sbb
rol
or
mov
mov
scas
jo
or
popf
hlt
dec
xorb
in
pop
ficompl
fbstp
dec
mov
mov
lahf
cs
insl
movsl
aaa
pop
mov
xchg
imul
pop
dec
addr16
popa
icebp
lea
mov
cmp
outsl
jo
sbb
cli
mov
add
outsb
out
mov
outsb
push
data16
mov
test
sbb
inc
push
pop
loope
cmp
add
lock
pop
adc
lahf
xchg
leave
add
fildll
cmp
popa
hlt
out
aas
daa
add
bnd
mov
xlat
pop
inc
pop
out
rorl
rcl
or
inc
or
dec
aam
rcll
rcrb
packsswb
test
jmp
mov
ret
push
jp
mov
and
jne
jnp
mov
cmp
mov
sub
rclb
pop
sahf
mov
xor
cltd
or
insl
push
fsubrl
sbb
int
pusha
aaa
fists
movswl
add
pop
insb
js
ret
jbe
xor
adc
sbb
xchg
mov
mov
ds
testl
jns
xchg
mov
adc
sbb
add
les
adc
push
loope
adc
stos
push
dec
jb
lock
cmp
int
mov
add
rcrl
ss
sub
inc
icebp
adc
mov
inc
mov
jmp
daa
xlat
fldl2e
pop
and
lods
movsb
std
or
xchg
xchg
add
fsubs
cmpsb
or
jae
pop
pop
mov
cltd
sub
sub
mov
jge
push
aaa
push
add
imul
iret
popa
repnz
inc
das
push
jae
jns
into
sub
push
dec
add
push
loope
inc
lea
sti
mov
fists
adcb
xchg
cmp
popf
cmp
scas
mov
adc
jb
fmulp
pop
mov
and
pusha
out
mov
mov
or
pop
push
cwtl
push
loop
adc
sub
fistpl
jo
mov
aaa
and
dec
inc
and
jo
data16
mov
xchg
lahf
jne
leave
fistl
lods
je
repz
cltd
sub
sahf
repnz
and
das
xchg
push
rclb
pushf
push
aam
pop
outsb
and
mov
or
push
push
lret
cmpsl
or
mov
mov
sbb
ljmp
add
push
or
push
lea
scas
in
call
stos
stos
mov
pop
shll
mov
jge
xchg
pop
mov
inc
mov
pop
mov
aaa
add
sbb
in
sub
sbb
xchg
mov
jp
xor
add
push
jbe
ljmp
into
subl
scas
fisubrs
insb
out
dec
test
mov
out
arpl
dec
pop
xor
shlb
jecxz
loope
push
jnp
jp
clc
sahf
push
or
and
jb
mov
cmpsb
outsl
scas
mov
dec
ror
loope
cmp
ret
xchg
sub
leave
imul
mull
add
or
or
les
lods
in
orb
imul
mov
push
insb
inc
xlat
out
jbe
cmp
fwait
cs
xchg
pop
je
popa
fdivr
dec
xchg
push
scas
push
mov
jecxz
push
dec
mov
mov
je
jl
insl
ss
xchg
scas
enter
subb
lods
jmp
inc
js
mov
mov
sahf
roll
stos
scas
mov
pop
jle
add
push
jp
and
sbb
repz
cmc
add
mov
les
movsl
inc
adc
push
adc
mov
dec
adc
adc
cmpb
jno
testb
add
push
leave
adcl
clc
cwtl
loope
mov
out
xchg
cmp
dec
fucomp
outsl
add
clc
mov
cmp
mov
xchg
js
cld
int
js
jmp
xor
test
into
sub
pop
pop
push
andl
xchg
test
mov
cmp
ja
int
xor
ds
out
in
xlat
jb
cwtl
jae
mov
sbb
insl
sub
sbb
adc
ja
nop
push
test
xor
aaa
nop
mov
out
xor
push
xchg
xchg
scas
aas
mov
test
lret
and
and
push
cmp
icebp
sti
aaa
push
les
and
lock
sub
jbe
gs
and
movb
jecxz
mov
scas
shll
std
rcrl
xchg
pusha
prefetcht1
mov
dec
dec
mov
push
dec
stos
xor
mov
cmp
inc
imul
dec
xchg
pandn
pushf
mov
dec
sub
mov
sti
push
in
push
add
sbb
ja
and
inc
ljmp
ja
or
mov
sub
mov
ja
xchg
and
jo
bound
pop
jg,pn
dec
jle
ja
daa
xor
repz
mov
pop
mov
int3
sbb
jge
test
adc
xchg
adc
clc
das
repz
cs
lcall
xor
les
test
lret
dec
mov
inc
clc
pop
clc
lds
or
jns
inc
mov
pop
pop
aam
push
fstl
jns
clc
mov
xchg
stc
out
add
lock
cmp
jmp
inc
cli
lea
pop
sbb
and
out
mov
repz
imul
inc
lahf
xchg
mov
add
inc
jmp
imul
jne
inc
inc
mov
add
sub
jnp
daa
js
xchg
and
push
dec
lret
lods
imulb
mov
xchg
push
and
push
dec
pop
inc
mov
test
jb
enter
test
negb
dec
xorb
xor
dec
cmp
push
ljmp
mov
cs
or
out
pop
mov
cmp
adc
loop
push
push
inc
popa
jp
or
or
and
test
fstps
enter
imul
xchg
mov
ljmp
mov
pop
fisttpll
xlat
iret
jmp
mov
into
js
xchg
sub
outsb
outsb
push
add
std
bnd
xchg
jbe
arpl
movq
arpl
adc
bound
test
jle
pop
sbb
jle
test
psrlw
jo
xorb
dec
push
in
xor
cld
jnp
xchg
shrl
push
and
outsb
add
outsb
in
test
push
sbb
push
test
ret
scas
mov
subb
jge
int
fcoml
xchg
sbb
jae
in
adc
lahf
int3
xor
push
inc
nop
or
sub
jmp
mov
cltd
mov
fsubrs
cmp
push
or
mov
sbb
in
fcomp
cld
cmp
mov
outsb
inc
or
pop
loopne
mov
xorb
xchg
mov
mov
outsl
or
mov
js
inc
shll
mov
dec
mov
gs
repnz
pop
jbe
lods
rorl
inc
movsb
out
cmpsb
jo,pt
imul
sub
dec
xor
aam
inc
adc
mov
inc
xor
shll
push
stos
hlt
or
aas
adc
movsl
lea
mov
cmc
fcomps
fmul
sbb
pushf
clc
mov
loope
dec
pop
pop
dec
push
insb
pop
cltd
xlat
leave
push
scas
mov
mov
jle
outsl
mov
ds
mov
dec
cmpsb
or
xchg
sbb
icebp
dec
inc
dec
mov
into
scas
idivl
mov
insl
sahf
mov
sbb
inc
ret
loope
in
lret
int
mov
and
jmp
aam
sarb
in
subb
imul
stos
cmpsb
xchg
push
xchg
inc
push
fwait
jmp
ss
loop
and
call
test
in
or
stc
negb
mov
xchg
cwtl
mov
inc
cmp
jne
movsl
and
test
lret
push
addb
mov
xchg
mov
dec
flds
in
ja
mov
inc
xchg
in
mov
inc
fdivrl
dec
cld
adcb
cmp
pop
pop
movsl
and
xchg
imul
sbb
cmp
cwtl
ja
in
scas
lds
mov
ret
mov
stc
inc
int3
dec
xlat
leave
inc
loope
movsl
shrd
mov
lret
or
mov
or
testb
aaa
jb
lret
shr
insb
jbe
lret
mov
xor
adc
mov
std
dec
cs
sub
push
mov
cmp
cwtl
xor
int3
popfw
dec
inc
pop
es
mov
out
cli
and
mov
sbb
test
and
cmc
lock
mov
add
stc
push
jns
push
sub
xor
ja
test
daa
js
fwait
scas
mov
ret
fisubl
xchg
mulb
xor
decb
dec
aaa
ds
push
rcr
movsb
xor
lock
pop
loope
sti
cmp
xchg
imul
stos
mov
jbe
jns
mov
mov
sbb
mov
les
fadds
arpl
mov
pop
stos
and
test
dec
sub
pop
add
daa
ret
incb
subl
push
sub
sbb
cmpsl
arpl
cmp
push
or
dec
stos
inc
sub
pop
or
gs
into
out
mov
push
sbbb
aas
out
sub
inc
arpl
mov
rclb
dec
xchg
push
pop
js
lods
mov
jle
jb
divl
pop
popa
clc
jnp
popf
test
inc
add
add
idiv
xlat
int3
mov
imul
movsb
enter
leave
push
loop
int3
iret
mov
int
or
sbb
sub
lret
out
mov
adc
mov
int
xchg
aaa
test
inc
mov
mov
or
lret
sahf
popf
pop
int3
push
jno
mov
subl
add
mov
inc
and
imul
icebp
sbb
xor
fiaddl
ficoms
mov
or
adc
inc
lcall
les
pop
lret
aaa
mov
fs
or
inc
xchg
cmp
ffree
ja
sahf
lea
pminsw
bound
inc
pop
mov
jns
mov
inc
pop
sbb
movsl
pop
inc
ret
add
mov
lcall
aam
adc
or
lret
cmp
movsb
ljmp
mov
jle
in
lret
add
js
or
gs
icebp
mov
sbb
lret
xor
das
mov
mov
fldl
rcrb
aas
add
out
jp
subl
xor
dec
mov
loope
jnp
push
nop
fcomps
add
pop
mov
cld
hlt
js
ss
xor
lods
jg
arpl
dec
mov
scas
mov
jb
pop
mov
cmp
hlt
and
pop
adc
jle
fs
bound
pop
pusha
ss
rolb
xchg
insb
roll
mov
cwtl
pop
ret
mov
cld
adc
jmp
sbb
inc
xchg
mov
pop
ljmp
mov
cld
test
cmp
aas
incb
xchg
push
cmp
xlat
add
push
insb
mov
incl
dec
sbb
sbb
xor
cwtl
pop
loope
jg
jb
mov
pmulhuw
pop
loopne
loopne
gs
icebp
roll
add
push
out
gs
loope
sbb
ret
mov
les
call
push
or
mov
push
incl
sub
sub
push
jmp
ror
cmc
test
mov
sub
inc
popf
cmpsb
out
in
jns
sub
sub
fbstp
out
daa
sbbl
xchg
xchg
insl
pop
mov
pop
sub
dec
push
adc
mov
sbb
and
je
cmp
pop
mov
mov
push
lret
jae
gs
aad
enter
movups
mov
dec
aaa
mov
xor
inc
addr16
xor
pop
jno
loope
je
and
cmp
cld
xlat
mov
cld
sarl
mov
leave
ss
xlat
push
lds
xor
in
in
push
sub
and
jb
jnp
fcomps
test
int3
sbb
lahf
jl
push
mov
sbb
lret
pop
movsb
fwait
or
xchg
arpl
push
xor
and
sbb
mov
dec
cmpsb
cltd
testl
xor
shlb
scas
aaa
push
xor
and
xchg
fld
bnd
sbb
sbb
sbb
add
sub
fwait
mov
push
cmc
scas
jae
cli
mov
lret
test
out
push
sbb
sub
nop
lret
adc
and
mov
adc
push
loope
jns
sbb
stos
test
xlat
ficoml
lret
fs
jo
push
xlat
add
movsl
jmp
mov
sbb
icebp
sbb
cmpb
push
pop
inc
xchg
push
cmpsl
dec
aad
mov
and
xor
movsl
jb
xorl
cmpb
cli
add
ret
ss
mov
xchg
cmpl
std
mov
cs
sbb
pop
sub
mov
or
sahf
push
mov
xchg
pusha
mov
cwtl
mov
icebp
inc
das
cmp
sub
add
movsl
das
js
mov
outsb
int
sahf
push
fcmovnbe
dec
ret
in
or
inc
in
sar
mov
sub
rorl
daa
push
adc
mov
sbb
sbb
mov
xchg
fadd
hlt
cmp
mov
js
mov
cmp
and
outsb
test
cltd
fcmove
fsubrs
sub
bound
jg
pop
dec
dec
lret
inc
aas
and
call
xor
ffree
sub
lahf
rorl
aaa
mov
and
cs
cmp
pop
mov
jno
dec
shrb
mov
add
jg
fdivrp
mov
pushf
and
shlb
pop
std
mov
fcmovb
int3
sbb
in
shrl
addr16
fistpl
bound
pop
pop
mov
lds
xlat
mov
fildl
aad
or
movb
mov
mov
fcoms
and
push
sub
leave
push
cli
push
push
frstpm(287
jno
xchg
loop
cmpsl
test
and
bound
enter
pop
adc
mov
fildl
filds
les
cli
inc
jle
mov
imul
lret
hlt
stos
add
push
adc
imul
das
iret
rcll
xchg
fwait
jno
jns
loope
mov
xchg
lahf
sub
sbb
daa
sbb
aaa
xchg
test
add
cmp
and
jbe
bound
nop
xlat
ljmp
jb
jae
ret
lds
pop
btc
mov
xor
inc
ret
dec
js
imul
lret
loope
add
sbb
jmp
xchg
sub
dec
add
mov
jl
push
outsl
mov
ja
jmp
xchg
ds
pop
sub
jo
adc
lods
cli
jne
add
in
movsl
fs
outsl
aaa
sub
ret
pop
and
in
jl
add
add
xchg
mov
imul
pusha
mov
xchg
inc
mov
mov
aam
sub
xchg
lds
sbb
fcomp
fdivs
hlt
lods
mov
popa
cli
sbb
sub
jne
mov
push
aad
lods
jb
sbb
add
mov
pmovmskb
gs
mov
in
inc
and
leave
call
jno
and
push
sbb
dec
sbb
aas
pop
loope
sar
cwtl
aad
inc
daa
pop
subb
scas
inc
push
mov
les
sbb
pop
push
jmp
imul
xchg
inc
rorl
adc
xchg
enter
push
outsb
pop
cmp
jecxz
lret
xor
insb
xor
push
out
or
sub
add
idivb
shlb
sbb
test
add
rolb
icebp
sub
add
daa
insl
stos
pop
lds
mov
pop
icebp
jl
ljmp
xchg
jns
mov
xor
mov
xchg
jmp
cmpsb
mov
loopne
inc
cmp
andl
xchg
xchg
pusha
cmpsb
mov
pop
jno
jge
out
mov
mov
xchg
mov
cmp
or
and
insb
adc
enter
adcl
jae
mov
aaa
mov
bound
andb
pop
adc
cmpsl
inc
rcl
cmp
gs
call
cmp
jns
addr16
pop
test
dec
cmp
arpl
rcll
jne
insl
xor
mov
push
mov
jnp
pop
test
mov
in
into
pop
xor
mov
add
dec
fidivrl
mov
enter
xor
xor
mov
test
mov
cwtl
push
sub
call
mov
stos
aas
cmp
xchg
pop
cmp
cli
mov
lock
call
test
or
stc
scas
mov
cmp
adc
mov
sbb
mov
lea
iret
or
or
icebp
dec
stc
stos
enter
es
data16
into
or
mov
icebp
cld
out
sub
in
mov
mov
and
inc
ljmp
xorb
adc
sbb
xchg
dec
mov
jnp
outsl
and
insb
pop
mov
push
rolb
jnp
shr
mov
fistps
adc
dec
mov
int
sbb
aas
xchg
inc
outsb
cli
sbbb
frstor
ds
js
pop
xchg
orl
in
push
xor
out
je
dec
and
push
push
sbb
scas
nop
icebp
mov
loopne
xchg
inc
push
sbb
leave
mov
imul
ret
xor
jmp
mov
cmpl
cld
adc
popa
mov
ss
mov
push
add
sbb
push
dec
data16
aas
loope
xor
cmp
inc
iret
push
jecxz
leave
push
sbb
icebp
dec
xchg
fs
insl
mov
fisubrs
aaa
push
push
sub
adc
cli
add
in
mov
jecxz
xor
pop
hlt
rcll
fldt
dec
mov
inc
sbb
pop
push
pop
push
or
loopne
xchg
into
lret
or
jmp
sbb
push
or
les
aad
add
in
inc
cmp
sti
mov
xchg
mul
scas
mov
and
dec
enter
das
cmpsl
adc
jl
aad
fistpl
fnstcw
test
cmp
stc
movsb
pop
leave
rorb
or
add
dec
adc
push
cmp
cmpsl
jmp
and
xor
and
pop
sbb
mov
insl
fstp
movsl
inc
cmp
shll
mov
dec
inc
inc
xor
add
sahf
gs
aad
aas
add
icebp
arpl
hlt
sub
into
push
mov
dec
int3
stos
in
sub
mov
ds
lahf
xorl
mov
stc
add
test
out
jne
outsl
inc
loopne
repnz
les
imul
fpatan
push
js
pop
add
movsl
pop
adc
push
lea
stos
std
push
lret
in
jne
stos
out
xor
leave
int3
hlt
dec
into
test
mov
and
mov
je
int
mov
sahf
lahf
out
cmp
in
or
push
scas
shlb
bound
mov
or
pop
sbb
inc
shll
hlt
es
lcall
in
sub
mov
push
and
and
loop
mov
cwtl
das
mov
inc
addr16
popf
cmp
scas
outsb
aam
dec
fwait
dec
adc
sub
cld
popf
loopne
stc
pop
std
call
xchg
push
gs
and
push
xor
lods
jae
push
setle
adc
sub
and
mov
shlb
mov
outsl
imul
test
shll
pop
sahf
sbb
push
push
loop
mov
jmp
dec
jp
aad
scas
fiaddl
jge
fistl
jbe
adc
lcall
inc
add
clc
push
jge
ret
inc
lds
mov
xchg
inc
sbb
xlat
fbstp
xchg
test
fsubrs
cmp
aad
inc
mov
shl
inc
xor
cmpsl
lods
push
mov
xchg
cmc
adc
jp
or
jge
sbbb
mov
jg
daa
fs
bswap
fidivrl
sub
outsb
cli
stos
cltd
xchg
incl
loopne
xor
sub
mov
sbb
dec
xchg
hlt
xor
lahf
pop
pop
jmp
fstl
push
test
cli
js
xchg
push
aas
adc
gs
pop
nop
xor
mov
scas
pop
ss
sbb
lret
bound
out
dec
adc
rol
xor
mov
push
sub
push
jbe
movsl
sbb
mov
popa
cmp
sub
mov
xchg
lcall
rorb
jl
dec
pop
xchg
iret
rolb
test
scas
inc
lret
mov
add
dec
adc
push
jae
iret
mov
adc
or
rol
gs
jnp
loopne
std
stos
jl
repnz
movq
mov
sub
data16
sub
and
aam
jmp
jb
xchg
cltd
repz
popa
aad
shr
ss
pop
xor
inc
lods
adc
and
mov
std
lret
lret
iret
cli
adc
gs
pop
xor
insl
pop
mov
subb
iret
and
pop
jl
pusha
cmc
jo
fisubrl
push
push
js
xchg
push
aas
and
popf
xor
cmp
xchg
pusha
pop
jne
pop
xor
sub
cltd
addr16
inc
test
arpl
and
rclb
ds
jp
push
ja
push
jmp
pop
jl
mov
add
jp
test
xor
es
inc
divl
cltd
sbb
clc
mov
mov
gs
mov
repz
sub
stc
sbb
dec
mov
aad
mov
pop
inc
stos
orb
loop
xor
incl
inc
insb
push
ljmp
jg
aaa
lahf
lret
cwtl
ret
lcall
pop
lahf
pop
out
pop
dec
fists
mov
xor
and
daa
adcb
cltd
lods
sbb
mov
push
lds
sti
loopne
jae
adc
mov
andl
popa
test
pop
in
hlt
push
add
in
les
rcl
jmp
cwtl
mov
mov
push
xlat
sbb
jmp
mov
and
rcll
mov
cmp
clc
mov
jp
and
adc
stos
scas
popl
mov
mov
loopne
jnp
cmc
inc
mov
arpl
cs
xchg
adc
push
jle
cmp
adc
je
xchg
adc
shr
daa
inc
push
test
lods
or
movsb
add
cmp
cld
or
stos
enter
into
leave
inc
out
or
movsb
lret
jo
aaa
lret
or
push
fildll
scas
xor
into
cmp
jecxz
pop
inc
inc
xor
stc
lea
sbb
inc
push
dec
sbb
sbb
ds
lods
push
push
int3
stos
les
dec
pop
rorb
enter
xor
das
mov
sub
and
adc
rol
sbb
pushf
je
sub
fwait
push
or
jnp
xor
dec
sbbl
cmp
les
cmc
rolb
ljmp
out
sub
js
repnz
mov
sbb
mull
sahf
js
stos
aaa
xor
int
sbb
dec
mov
lcall
xchg
mov
dec
cmp
cs
rcr
lret
and
fisubrl
ja
xchg
sbb
popf
sahf
int3
cmpl
test
sub
mov
rorl
xchg
pop
push
and
fldt
xor
aaa
push
or
aaa
lcall
adc
in
jnp
outsl
push
xorb
pop
loope
ljmp
mov
or
xchg
xchg
pop
jecxz
insb
out
enter
leave
enter
jns
jbe
xor
jnp
cmp
lods
test
cmp
jb
mov
cmovle
scas
cmp
xchg
and
sbb
pusha
fwait
out
fwait
lds
adc
push
mov
aad
sti
js
enter
fbstp
cmpsl
pop
mov
jne
aas
sti
mov
arpl
jae
cld
xlat
lret
icebp
jle
xchg
adc
dec
push
hlt
fidivs
into
cmp
loopne
jle
rorl
lods
cmpsl
jp
ljmp
sbbb
or
lds
cmp
xchg
orb
rcll
fdiv
push
inc
jle
imul
outsl
popf
mov
int3
fnstsw
clc
mov
out
lahf
lock
dec
movsl
lock
lea
push
stc
call
mov
shll
push
adc
leave
je
call
pop
mov
and
dec
in
je
and
push
adc
jno
jb
cmp
fidivl
inc
push
mov
xor
mov
imul
in
ret
es
out
sub
push
lock
add
dec
int3
cld
subb
pop
rorl
dec
lock
push
push
xchg
adc
inc
jmp
fsubs
lahf
movsl
cmp
jbe
mov
sub
cs
inc
inc
in
mov
or
or
sbb
outsb
and
pop
int3
aaa
xchg
fdivl
rcr
cmpl
rclb
cmp
mov
push
xor
mov
cmpsb
jno
xchg
lds
iret
dec
ljmp
in
outsb
loop
push
mov
fldenv
xchg
xchg
adc
sarl
out
outsb
cmp
xchg
insl
adc
mov
pop
adc
sahf
mov
xor
xchg
pop
jnp
adc
and
stos
xchg
imul
orb
shll
jns
and
sbb
call
std
sbb
cmpsl
sub
leave
mov
xor
test
fldt
pop
int
lods
ret
jo
adc
fwait
xchg
out
fiadds
mov
out
das
dec
clc
pop
mov
xor
in
fnsave
int3
out
stos
mov
mov
mov
lock
jle
rcrl
std
push
push
iret
lods
cmp
push
cltd
imul
adc
js
jno
cmp
sbbb
push
sbb
or
jo
and
imul
xor
arpl
nop
dec
pop
push
dec
or
sahf
xchg
test
cltd
inc
ljmp
icebp
popf
outsb
jae
loop
pop
icebp
xlat
insb
xchg
sahf
or
adc
jno
lods
adc
loop
pop
xchg
das
mull
mov
mov
push
sahf
js
orl
stos
push
inc
ljmp
dec
xor
addr16
lret
sub
sub
xchg
lahf
cmp
insl
aam
gs
orl
imull
arpl
rclb
lret
push
out
cmp
imul
and
jne
rcrl
adc
adc
pushf
jp
push
ljmp
into
cmpsl
std
popf
sti
add
daa
loopne
loop
in
aas
push
jbe
ljmp
mov
adc
mov
mov
bound
mov
and
inc
lods
mov
cmp
stc
pop
loope
add
jae
or
jae
xor
mov
adc
addr16
xor
cli
stc
adc
xchg
jb
cmp
das
jbe
loopne
sahf
and
test
jecxz
subl
clc
cmp
xchg
les
cmp
outsl
int3
in
mov
sbb
or
and
xchg
aaa
push
xchg
jecxz
xor
dec
or
aaa
mov
inc
mov
sub
pop
mov
jnp
or
add
adc
inc
cmp
std
bound
fs
and
fidivrs
jbe
nop
pop
lock
sbb
stos
fsts
out
fcomps
repnz
cmp
gs
into
cmp
sti
cld
adc
in
das
aam
xchg
popa
rcll
xchg
out
mov
icebp
imul
je
out
xor
sti
mov
sbb
loop
push
movsb
xchg
out
dec
xor
jb
and
adc
fdivl
adc
xchg
lods
xchg
movsb
arpl
inc
xor
aam
jg
sbb
aam
inc
inc
ret
cs
jecxz
pop
mov
test
jmp
stos
xor
ljmp
lcall
mov
pop
stos
nop
and
sbb
push
jbe
and
fildl
fsts
jmp
or
sbb
out
fcmovnu
shll
jle
inc
insb
or
aas
imul
idiv
jl
in
iret
in
cli
jo
sub
jae
enter
into
mov
data16
cs
in
hlt
sub
loope
mov
push
cmpsb
xchg
and
stc
enter
imull
lcall
jns
ficoml
and
je
mov
lock
and
aad
xchg
pop
test
or
bnd
cltd
and
mov
cmpb
stos
fsts
adc
push
mov
leave
sbb
stos
movsb
or
in
sbb
loop
xchg
in
ljmp
les
das
jl
insl
adc
into
orl
sub
xor
push
sti
push
dec
mov
out
hlt
rol
inc
mov
adc
nop
test
jecxz
ret
or
mov
in
xor
mov
cmp
sub
addb
mov
xor
jb
sahf
pop
jb
dec
mov
or
in
outsb
dec
adc
mov
stc
mov
movsl
scas
sub
add
and
pop
mov
xor
ss
cmp
dec
xchg
dec
sub
push
lods
xlat
hlt
loope
jg
mov
decb
jmp
popa
xchg
xor
out
js
and
dec
pop
test
add
sti
mov
ds
pop
ret
call
sub
xchg
cmpsl
mov
popa
dec
icebp
lods
add
adc
rcrl
jle
xchg
repnz
fisttpll
push
pop
test
push
std
mov
addl
pop
fisubrl
stos
clc
sbb
jo
sub
jb
cmp
push
dec
nop
out
xor
push
fidivl
xor
mov
addr16
aas
or
into
les
and
mov
and
sub
cmp
pop
out
push
pop
sub
and
aas
ret
sub
mov
mov
mov
cmp
and
cltd
insl
xor
mov
nop
jmp
mov
repnz
sbb
int
mov
popa
sub
cs
fsubrl
mov
adc
and
pop
mov
jmp
add
inc
fisubs
or
sbb
in
mov
lea
movsb
icebp
xor
pop
add
pop
mov
or
sbb
notb
add
es
jg
enter
cmpsb
add
outsl
xor
out
mov
pop
jno
mov
ret
cmc
rol
mov
xlat
arpl
retw
push
pop
push
outsl
or
or
mov
push
testb
mov
jg
or
pop
mov
int3
pop
jnp
lret
ret
sub
dec
push
mov
inc
ret
and
mov
push
xlat
mov
inc
clc
or
mov
and
lret
in
dec
mov
inc
out
insl
fs
dec
pusha
pushf
ljmp
inc
xor
out
inc
arpl
pop
add
fildl
mov
or
mov
push
test
mov
cmp
dec
xchg
lea
jne
in
adc
leave
xlat
aad
jno
pop
jmp
fsubrs
lahf
pop
mov
mov
pop
fnstcw
xchg
cmp
popa
cmp
mov
adc
sub
mov
lods
out
xchg
call
xorb
mov
xchg
outsl
cmpsl
outsb
pop
popf
add
imul
ror
xchg
xchg
add
add
call
aam
aaa
mov
enter
xchg
push
pop
movsb
loope,pt
test
adc
outsb
jmp
xor
scas
out
sub
pop
or
inc
ds
nop/reserved
push
xlat
fdivs
adc
cmp
sub
les
mov
lcall
adc
mov
dec
stc
pop
mov
enter
cs
mov
jnp
or
jnp
pop
fsubrs
andl
xor
mov
in
cmp
jb
mov
stc
pop
imul
and
mov
push
jnp,pt
inc
pop
fimull
cwtl
push
push
rcrl
imul
adc
imul
stc
inc
test
xchg
cmp
out
shrb
inc
jb
or
and
mov
push
stos
xchg
mov
je
sub
cld
cmp
jbe
mov
test
mov
xor
mov
dec
fxam
jno
jae
cmp
cmpsb
pop
fsubl
cmpsl
arpl
into
pop
call
cmpsl
ljmp
addl
scas
jnp
mov
mov
lods
pop
loopne
orl
shll
fwait
cmc
aas
lock
mov
enter
xchg
and
sub
aad
in
fstp
movsb
mov
push
or
into
iret
movsb
cs
mov
nop
gs
sti
sbb
mov
push
je
orl
jg
pop
push
adc
mov
lea
push
cmc
in
pushl
rclb
test
fwait
rorb
inc
push
sbb
bound
aam
clc
jecxz
xor
pushf
mov
icebp
dec
aam
sbb
pop
jne
dec
cli
cmpsb
and
xchg
fists
int
test
test
mov
rolb
push
jg
lcall
fistps
dec
mov
mov
ljmp
mov
outsl
dec
lea
repnz
and
jno
push
dec
shl
xchg
les
das
clc
in
mov
mov
js
idivb
lret
jnp
push
clc
scas
std
inc
mov
lea
test
cli
or
fs
sbb
dec
fwait
push
es
sub
inc
xchg
das
xor
clc
sbb
ja
ret
mov
dec
mov
es
into
cli
int3
nop
jp
push
leave
push
lods
pop
pop
mov
push
pop
mov
clc
into
cmpl
mov
movsl
test
and
std
adc
mov
sub
sub
xlat
sub
mov
arpl
imul
pusha
sub
or
cmpsl
pushf
sbb
mov
out
xlat
iret
sbb
imul
push
fmull
test
addl
test
push
in
push
pop
mov
jp
mov
and
pop
mov
outsb
push
movsb
aaa
inc
movsb
cmp
sbb
out
fisubl
pop
int3
in
mov
scas
xchg
push
mov
popf
pop
sbb
or
xchg
jae
jb
rolb
or
jo
jae
jmp
shll
arpl
dec
inc
or
sub
test
in
imul
adc
xor
jne
addr16
lahf
mov
jmp
or
dec
call
imul
xchg
or
sub
pop
jle
and
mov
daa
add
xor
cs
mov
add
sbb
ret
stos
lahf
mov
xor
sub
xchg
jge
lahf
call
incb
or
fiaddl
mov
shrl
inc
lcall
pop
jl
and
aaa
loop
iret
rcrb
or
sbb
call
cmc
adc
inc
add
jle
aad
out
jae,pt
int
outsb
push
adc
repz
push
sbb
mov
sub
inc
adc
bound
inc
or
dec
in
push
ds
xor
or
pop
xchg
jns
push
inc
lock
out
pop
push
pop
int3
js,pn
ss
or
adc
mov
fnstcw
lret
add
js
mov
aaa
lea
sub
insb
and
cmp
mov
std
in
insb
es
pop
lea
push
frndint
cmp
pop
insl
xor
and
inc
fnstsw
fistpl
in
push
icebp
jecxz
enter
stos
es
fucom
and
pop
loop
mov
xchg
mov
dec
add
aam
aad
iret
lds
ljmp
push
inc
cmp
sbb
pusha
adc
scas
mov
cmp
mov
xor
mov
mov
mov
data16
jp
pop
subb
dec
lret
pushf
and
scas
push
fmul
mov
cwtl
or
xchg
hlt
outsl
lods
pop
std
or
push
jne
mov
cmp
jecxz
sbbb
fsubrp
adc
cltd
test
lods
repnz
jle
loop
adc
xchg
mov
mov
fs
and
xlat
xor
test
fbld
sahf
fwait
ret
and
lods
dec
aas
dec
sbb
mov
out
xchg
data16
jp
and
sbb
lock
popa
imul
pop
in
inc
or
daa
cmc
bound
sbb
mov
adc
je
arpl
jg
daa
sbb
xchg
shrb
stos
pop
fcmovnu
test
and
jmp
rorl
mov
fwait
xor
bound
scas
ret
es
cli
pop
loope
mov
lret
js
push
insl
sahf
adc
jb
sub
mov
daa
mov
outsl
dec
insl
fdivrs
pop
inc
and
nop
xor
xchg
xchg
in
jge
pop
cmpsl
mov
mov
or
clc
cli
outsl
call
jge
dec
lret
cmp
neg
test
add
cmp
pop
adc
mov
fmull
fcomi
lods
ja
jo
push
mov
pop
xor
pop
scas
dec
loop
dec
xlat
and
xchg
pop
test
jge
rep
xor
adc
cmp
add
or
les
cmp
or
lods
xchg
dec
sub
mov
fs
fiaddl
insb
push
ds
mov
inc
in
or
mov
jecxz
sub
aaa
mov
je
lret
sbb
ret
cmpsb
insl
and
lea
mov
push
int
mov
test
or
nop
dec
pop
lcall
mov
xor
mov
and
dec
push
jmp
cmp
sbb
out
out
nop
inc
and
adcb
and
cld
roll
lods
xor
test
nop
inc
fstps
ficompl
xchg
movl
sbb
ss
mov
sbb
je
rolb
push
sub
mov
mov
lods
pop
push
das
int3
add
inc
or
cltd
pushf
lret
scas
push
cs
cmpsl
mov
pop
mov
out
pop
push
cmpsb
jns
push
fwait
into
in
and
out
leave
xlat
pop
mov
mov
push
je
sub
in
and
ljmp
in
ret
sbb
xchg
jae
fmuls
mov
xor
fs
and
pushf
cwtl
sti
or
xlat
mov
xor
inc
ret
es
out
lods
xchg
mov
push
sub
add
lahf
push
pop
push
ja
jo
stos
sahf
mov
imul
jg
imul
lahf
mov
nopl
pop
mov
pop
push
adc
dec
ret
in
mov
loope
jno
and
dec
lods
sub
aas
add
clc
mov
int
subb
leave
xchg
xchg
inc
add
repz
ja
push
sbb
mov
pop
push
ret
arpl
push
cli
cmp
xor
ret
jmp
dec
lret
fstpt
inc
ss
movsl
xchg
dec
es
lret
lock
sub
fwait
call
fwait
ljmp
pop
or
in
xchg
ret
test
xchg
arpl
mov
and
xor
and
add
xor
or
fistpll
ret
movsl
xchg
dec
lea
xchg
or
push
arpl
jo
je
lods
in
insl
fcom
popa
dec
clc
cmp
lcall
xlat
push
lods
inc
out
data16
je
cmp
push
es
stc
fs
arpl
xchg
sub
add
pop
rolb
xchg
or
jmp
mov
out
sbb
test
sahf
sub
fcoms
and
sbb
mov
dec
lods
pushw
lret
pop
iret
cmp
pop
pop
jb
mov
sahf
inc
dec
or
mov
pop
cld
dec
and
outsb
lcall
popf
xchg
aas
sbb
insl
inc
sub
push
popa
sbb
or
cmp
cltd
shlb
jle
xor
mov
pop
pushf
jl
sbb
xor
loop
sbb
mov
shll
jb
in
dec
cmpsl
insl
jbe
arpl
jb
xchg
jl
lahf
push
aaa
iret
xchg
mov
stc
sub
es
lret
test
je
sbb
mov
dec
fldcw
xchg
or
ror
mov
pop
cmp
fs
push
mov
shlb
mov
mov
jl
push
jl
sbb
cmp
cmpl
out
mov
loope
pop
imul
add
pop
sub
movsb
cmpsb
loop
pop
sbb
mov
sub
and
adc
xchg
mov
pop
mov
inc
lock
fs
jbe
adc
adc
or
adc
push
or
outsb
inc
jg
out
sub
xor
es
adc
outsb
xor
xor
or
stc
mov
push
sub
dec
push
andb
fistpl
dec
inc
push
push
mov
fnstenv
mov
pop
fidivl
stos
outsl
lods
push
pop
mov
mov
flds
push
dec
sub
sbb
fistpll
imul
mov
push
in
lahf
xchg
cmp
arpl
sbb
pop
mov
rcrb
add
adc
lods
mov
push
mov
pop
out
push
fs
or
clc
in
arpl
pop
clc
jae
in
xor
jb
cmp
mov
fimull
cmp
mov
adc
lcall
lock
cli
jle
jo
in
outsb
and
orl
jmp
out
push
push
jne
out
outsw
mov
fnstsw
jbe
adcl
push
out
mov
arpl
push
sbb
movsl
mov
fsubl
imul
popf
jbe
pusha
pop
mov
mov
dec
outsb
xor
stc
cli
push
je
movsb
jmp
js
fisubrl
fmul
mov
xchg
cmp
jg
push
popl
fcoms
and
jge
stc
add
sbb
out
cltd
sbb
xchg
inc
cmpsb
dec
imul
sbb
insl
out
stos
es
adc
or
ds
jno
aam
pop
test
push
loop
jmp
jg
insl
jecxz
add
fwait
arpl
movsl
xor
popa
and
inc
roll
idivl
dec
inc
sbb
popa
push
aaa
mov
dec
inc
or
inc
enter
sub
or
pop
jnp
inc
test
jg
mov
push
mov
push
mov
pop
push
pop
aas
movl
cmpsl
xchg
xlat
rclb
outsl
scas
insb
lcall
mov
cmpsl
sbb
into
push
fcmove
shlb
sbb
repz
or
sti
ljmp
add
add
mov
push
out
pop
mov
push
mov
call
lret
or
sub
mov
pop
popa
loopne
cmp
loope
cmpsb
xchg
jg
insb
sub
sti
nop
mov
idivl
add
test
mov
push
filds
fcompl
push
stos
and
into
add
jecxz
dec
jo
xchg
mov
adcl
dec
sbb
gs
adc
lock
xchg
mov
les
ljmp
inc
int
pop
fs
js
or
in
hlt
cmp
negl
inc
ja
repz
fnstcw
jb
xchg
subb
orb
sbb
rcrb
or
sbb
clc
jne
jg
sub
mov
lahf
cltd
xchg
sahf
das
push
hlt
int3
xchg
jns
es
sbbb
cli
jbe
push
testl
mov
jo
inc
cmp
out
adc
movsl
inc
sbb
jecxz
mov
sbb
inc
in
cmpsb
addr16
xchg
and
push
jns
fildl
jns
sbb
add
insb
cmp
icebp
pop
sbb
fcmove
in
jns
mov
push
test
cmp
inc
pop
fwait
or
out
cs
fbld
cli
pushf
mov
dec
push
out
push
scas
mov
lea
cmp
shll
sbb
pop
fimull
lods
ret
pushf
push
dec
sub
cmp
loope
ja
je
rorb
cmp
pusha
and
das
jmp
dec
stc
leave
popf
subb
adc
adc
adc
out
or
mov
fmuls
pop
out
mov
in
pop
jne
stos
aas
lock
xor
jne
stos
and
lahf
fisttps
xchg
test
inc
cwtl
aaa
mov
cmp
shlb
sbb
sbb
xchg
adc
scas
aam
inc
xor
stc
sub
cs
xlat
cltd
sbbl
testl
loop
std
sbb
popf
pop
je
and
mov
les
imul
int
xchg
dec
je
leave
mov
loop
cmpl
pop
jmp
dec
repnz
xchg
imul
xor
fmull
jns
sahf
xchg
ffree
or
lds
sub
dec
ret
mov
scas
jb
int
ja
cmpsb
loope
lea
out
ret
int
lds
push
insb
xchg
jle
or
mov
ret
pop
or
lock
push
and
lret
sub
or
aas
xchg
mov
inc
sub
inc
xchg
jle
sbb
inc
mov
xor
jo
or
repz
addr16
jo
xorl
inc
mov
cs
adc
push
mov
rorl
mov
fcoms
cmp
pushf
in
enter
orb
mov
and
pop
sub
repnz
and
andb
adc
cld
push
fcmove
mov
out
add
xchg
std
popf
lds
cmpl
mov
fcompl
rcr
stos
nop
push
push
jb
jle
push
sub
jb
repz
subl
dec
inc
xor
mov
inc
jge
in
sarb
inc
and
jne
pop
ret
jecxz
dec
fildll
mov
jnp
jns
movsb
jp
jp
aad
and
push
inc
dec
cmp
inc
xor
out
cwtl
push
xchg
mov
sub
mov
lock
inc
push
push
shll
ret
mov
mov
sti
cmpb
xchg
xor
jmp
lods
int3
xchg
jge
movsl
xor
fmull
push
test
cwtl
frstor
adc
sahf
push
or
xor
mov
mov
sbb
ret
repnz
or
xor
les
fucomip
iret
mov
mov
addr16
or
sti
mov
mov
adc
and
inc
outsl
sub
fldl
sub
test
add
das
pop
mov
mov
bound
mov
shrb
cli
insl
pop
aaa
push
or
popf
shr
lea
scas
test
outsb
sub
sarb
mov
lret
sbb
mov
int
fdecstp
popa
adc
and
inc
xchg
lea
dec
cmp
pop
dec
iret
or
push
mov
scas
xor
xchg
jnp
inc
bound
or
shll
jns
sub
pop
cmpsl
rcrl
pop
sbb
cld
cld
xor
add
ret
mov
push
fbstp
lret
sbb
sub
pop
mov
ss
add
cmp
mulps
loope
cmp
adc
subl
subb
mov
fstl
les
mov
add
arpl
push
sub
dec
cs
mov
and
inc
add
iret
jge
test
lret
sti
leave
aas
cmc
cmp
aaa
les
jp
add
add
and
sub
popf
in
out
neg
inc
imul
into
inc
mov
push
push
in
dec
ss
push
ds
jne
jecxz
sti
mov
roll
pop
movsb
dec
aas
cld
push
xchg
aaa
lods
cmc
andl
jnp
inc
adc
push
mov
mov
lcall
and
adc
inc
adc
xor
mov
arpl
loopne
jno
stos
xor
push
out
movsb
inc
cmp
cmp
mov
adc
inc
and
jmp
cwtl
xchg
xlat
jb
test
icebp
out
jmp
and
out
inc
test
arpl
inc
ss
jbe
ficoml
or
out
sbb
xchg
imul
cld
jecxz
adc
mov
clc
jne
jecxz
jle
and
sbb
jp
in
clc
test
jo
jnp
pop
mov
mov
add
jecxz
xchg
mov
xchg
lea
jle
xor
add
popf
xchg
mov
inc
and
fs
je
mov
and
sub
inc
mov
flds
roll
sbb
and
out
dec
mov
data16
xchg
inc
imul
dec
pop
cwtl
in
and
mov
mov
xor
decl
push
ret
into
or
pop
in
popf
or
push
jns
sti
lea
pop
adc
fnstcw
sbb
sbb
xorl
cli
jns
jp
jnp
and
iret
pop
out
in
das
mov
xor
out
scas
insl
adc
xchg
dec
aam
adc
imul
jo
pop
sahf
xlat
leave
dec
lds
pop
loopne
pop
fs
jbe
hlt
fnstsw
cmp
ja
jno
sbb
inc
test
roll
fisttpll
data16
test
mov
mov
add
aaa
add
push
orb
push
imul
add
lods
dec
mov
in
aam
lods
mov
add
mov
fwait
cli
lahf
pushf
xor
fs
push
in
jae
mov
or
mov
enter
andl
pusha
ja
xchg
mov
test
aad
pushf
arpl
into
or
lret
pop
push
roll
mov
enter
cmpb
sarl
inc
and
push
mov
pushf
pop
call
fadds
out
movsl
cs
xchg
xor
or
stos
sub
push
pusha
in
je
sub
xchg
repz
mov
sub
dec
orl
dec
leave
aad
jle
adc
pop
mov
add
fcmove
mov
hlt
or
clc
ljmp
add
cmc
test
sbb
cmpb
or
aam
leave
and
pushf
and
push
xor
mov
adc
mov
xor
pop
and
inc
cmpsb
hlt
push
pop
mov
sahf
xor
pushf
idiv
adc
xor
jecxz
push
xor
scas
dec
pop
mov
pop
mov
or
add
mov
xchg
jmp
push
dec
addr16
out
adcl
je
and
mov
faddl
leave
ljmp
test
pop
out
int
and
dec
mov
mov
cmp
or
pop
pop
out
sub
cmpb
fwait
popa
pop
jg
and
mov
arpl
or
shl
sub
sub
jg
jle
int3
imul
cmp
dec
mov
scas
mov
repz
add
ds
lock
push
push
mov
adc
pop
add
inc
scas
adc
and
fadds
test
adc
sub
sbb
jae
subl
and
jns
fisubrs
leave
sahf
lock
fsubl
mov
or
jno
push
int
fstpt
movsb
jle
adc
lds
inc
sub
pop
and
ds
bound
adc
cmp
std
scas
dec
ficomps
arpl
lea
pusha
sbb
in
push
sbb
adc
and
js
shl
imul
push
fwait
push
leave
add
push
mov
push
sbb
in
pop
stc
iret
xchg
sub
xchg
inc
mov
bound
jl
cmp
ret
adc
icebp
dec
and
mov
or
iret
test
lcall
negb
xor
inc
sub
add
jns
pop
dec
fadds
push
flds
fld
mov
or
jb
push
das
cmpsb
cli
jmp
inc
lret
ret
xor
sbb
or
lods
clc
lret
and
fwait
les
adc
jge
cltd
push
mov
mov
jnp
mov
inc
push
jae
notb
mov
out
enter
jbe
fcompl
sbb
jne
push
aaa
inc
adcl
mov
cmp
xchg
jns
rorl
jne
jno
adc
fsubrs
outsb
or
mov
inc
into
ret
add
and
repnz
mov
pop
push
jp
add
int
jae
cmp
test
lock
dec
andb
incb
dec
ficoml
test
pop
daa
mov
into
lods
pop
imul
pop
test
fcomps
jno
clc
dec
and
aam
add
add
push
scas
xchg
insl
sbbl
in
in
push
inc
sar
shr
pop
mov
xchg
leave
imul
cmovge
mov
popa
add
leave
ja
jo
fadds
das
fs
outsb
sbb
sub
ret
jl
mov
xchg
sti
or
out
xchg
pushf
aas
stos
push
xor
mov
ret
xchg
in
inc
pop
lahf
addr16
frstor
movsb
dec
dec
push
inc
mov
cmp
dec
pop
clc
xchg
add
test
ror
lods
mov
add
or
cwtl
inc
xchg
or
xor
mov
fimull
fdivl
popa
aam
fidivrs
adc
xor
iret
adc
and
jo
mov
sub
int3
inc
lods
lods
mov
or
xchg
xchg
je
adc
idivl
test
cmp
out
cwtl
fdivs
jbe
les
ss
push
push
arpl
xchg
loop
xlat
and
jmp
jns
pop
pop
bound
loope
jle
out
bound
pop
in
rcll
fcomps
fldt
cmp
fidivs
sbb
adc
aad
popf
leave
sub
imul
mov
and
gs
aam
dec
stc
mov
adc
xor
cltd
mov
fcmovnb
cwtl
inc
sbb
out
fbld
int3
adc
in
adc
enter
xchg
cmp
jmp
je
frstor
or
cmc
sub
mov
shll
jne
sbb
into
repnz
xor
aam
xchg
inc
sarb
in
ja
mov
ljmp
popa
sti
pop
xor
lret
icebp
sbb
bound
mov
xchg
push
inc
mov
loope
ss
push
inc
mov
mov
stos
lea
mov
out
ret
inc
inc
mov
xchg
xchg
cmp
imul
notl
dec
or
mov
push
ja
fiadds
test
jbe
dec
cli
lcall
ret
and
loopne
or
sbb
adc
cmp
mov
cmp
fs
arpl
insb
mov
dec
dec
sub
mov
jmp
push
pop
into
pop
in
adcb
jns
lea
dec
adc
add
pop
into
aas
mov
loop
jle
inc
fwait
or
xchg
mov
sub
insl
xor
ljmp
cwtl
push
mov
xor
int3
or
add
shr
inc
lret
xchg
mov
imul
or
push
and
loopne
sbb
icebp
loopne
mov
enter
scas
push
popl
fimull
mov
pop
sbb
bound
inc
lcall
cmp
mov
popf
cs
push
adc
push
insl
mov
add
aam
out
iret
fistpll
pushl
les
add
push
shrl
add
sahf
outsb
fstpt
andl
ss
test
ja
cmc
cmp
jle
and
popl
testl
mov
dec
pop
adc
out
or
xchg
adc
jle
addr16
loope
or
imul
dec
stos
stos
ljmp
icebp
xlat
imul
mov
fnsetpm(287
in
shll
loope
jo
sbb
divb
daa
test
jl
mov
sbb
fisttpl
sbb
mov
jno
aad
sub
lea
and
push
add
push
aas
mov
sub
out
sbb
xchg
js
jmp
lock
inc
ljmp
push
ljmp
xchg
daa
lods
aad
int3
mov
xor
dec
cmp
xchg
scas
xchg
mov
cmp
mov
push
shr
punpcklbw
lret
mov
sbb
leave
mov
xor
das
mov
enter
or
in
notl
xchg
lahf
clc
ret
mov
add
out
repz
js
mov
shll
stc
inc
xlat
pop
ret
mov
cltd
pop
stc
lcall
dec
sub
jno
push
mov
shll
rcrb
mov
mov
add
mov
std
pop
imul
xchg
ljmp
mov
gs
jno
jle
cmp
xchg
adc
mov
mov
dec
outsb
jp
mov
adc
out
jmp
das
popf
fnstsw
out
std
inc
pop
mov
push
test
ret
push
outsb
lcall
in
inc
sub
push
dec
jg
cmpsb
push
fwait
mov
sub
push
push
mov
xrelease
sub
in
stos
sbbl
sahf
xchg
incb
loope
aam
push
pop
xchg
rorb
loop
jg
adc
scas
cmpsb
insl
pop
cmp
repnz
pop
mov
in
out
addb
setg
shl
loope
xor
mov
loope
sub
xchg
xchg
addl
inc
pop
pop
push
inc
repz
adc
mov
subl
adc
xlat
or
iret
aad
cmp
jp
cmpsl
lcall
enter
mov
out
in
inc
inc
cmp
push
cmp
sub
popl
cld
test
pop
fwait
jo
aas
movsl
jecxz
pop
mov
cmc
adc
jle
push
les
inc
shlb
ja
mov
stc
notb
mov
sbb
stos
mov
aaa
leave
imul
daa
out
mov
mov
xchg
daa
mov
dec
adcb
xor
fiaddl
and
je
cld
xchg
cmp
mov
aam
sub
add
cmp
xchg
loop
sub
push
mov
aas
xor
sub
dec
sbb
sbb
iret
dec
adc
or
inc
jecxz
or
aam
rol
cmpsl
dec
mov
gs
sbb
fists
inc
hlt
push
int
mov
xor
push
sahf
scas
jno
cmp
xlat
jle
adc
pusha
xor
cmpl
jecxz
ja
jo
and
dec
jne
mov
push
sub
add
jmp
or
mov
idiv
inc
xchg
xor
mov
in
hlt
mov
jne
cld
fistl
testb
cmpsb
jns
push
push
xor
popf
leave
ss
or
arpl
add
mov
mov
mov
out
addb
ds
call
adc
mov
es
fwait
je
xchg
dec
xchg
lea
cmp
stos
stc
fnstcw
push
push
std
jne
adc
out
mov
jns
or
dec
rcl
jg
fbld
cmp
jno
cmp
adc
fwait
jae
jbe
pusha
push
xchg
dec
sbb
cwtl
mov
fs
stc
pusha
lret
pop
es
jno
je
or
stos
dec
std
hlt
in
inc
daa
mov
leave
xchg
or
add
add
or
fisttpl
xor
sub
sub
xor
cmpsb
push
jp
sub
popf
cmpsl
ljmp
mov
cmc
push
cmc
dec
push
mov
or
lret
pop
add
pusha
pop
pop
lods
imul
pop
fnstcw
popf
pop
nop
push
adcb
sahf
add
imul
jne
popa
scas
out
rclb
xchg
cmp
cmp
cmpsl
mov
cs
add
imulb
mov
jge
out
inc
sub
clc
imul
cld
fs
popf
xor
out
mov
pusha
xchg
into
lds
out
es
mov
lock
push
sbb
xchg
dec
push
out
cmpsl
mov
in
arpl
orl
repnz
filds
cmp
ret
in
into
addr16
mov
xor
lds
jge
push
fnstenv
jl
cmp
cmp
test
int3
lret
cmp
inc
lea
mov
fstl
xor
lea
sub
test
jl
movsb
pop
outsl
push
rcl
add
mov
test
test
add
pop
arpl
dec
orl
push
sub
or
daa
lret
mov
test
inc
jg
fxch
xchg
lds
mov
jnp
jmpw
lcall
jbe
mov
mov
in
xchg
and
mov
jg
test
xchg
in
dec
outsb
mov
pop
mov
or
cmp
frstor
or
pusha
or
pop
mov
je
adc
cmp
roll
mov
xchg
push
scas
or
pop
mov
testb
mov
stos
aaa
pop
push
xchg
outsl
xchg
dec
pop
xor
test
or
or
pusha
lods
xor
cwtl
stc
push
addr16
or
bound
xchg
adc
mov
or
gs
mov
pextrw
and
lea
imulb
jo
dec
movb
cmp
jne
jo
jle
insb
loop
inc
ds
xchg
cwtl
jbe
jb
jne
stos
hlt
sbb
insb
ja
xchg
jb
movsb
cmp
mov
cltd
jmp
test
inc
rorb
jns
pushf
loope
jae
mov
pop
imull
add
mov
push
or
test
mov
lock
rclb
fmuls
dec
adc
es
mov
int
rcll
subb
mov
ja
sub
fistl
and
in
fldenv
mov
pop
icebp
ja
fwait
mov
or
popa
clc
cwtl
les
imul
dec
sbbl
aaa
lds
jg
push
bound
divb
lcall
mov
mov
fdivrs
js
pop
add
sub
data16
cmp
mov
xor
mov
subb
push
xchg
aam
scas
inc
rcrb
jmp
push
xor
jmp
add
mov
stos
es
test
test
xlat
fdivp
test
pop
push
inc
int
xchg
pop
cmp
adc
push
jg
cmp
cmp
xor
psadbw
push
mov
xlat
insl
dec
lahf
inc
or
jnp
mull
addb
sbb
popa
mov
stc
je
insb
imul
out
mov
cwtl
xor
jnp
xchg
xchg
in
xor
shr
sahf
and
mov
cltd
lods
dec
popa
out
aaa
sub
add
int3
pop
mov
cltd
mov
std
sub
cmpsb
sub
pop
popa
adc
aas
inc
mov
cmp
lods
fstpt
jmp
add
pop
test
mov
pop
mov
push
sub
repnz
and
bound
lcall
adc
jbe
neg
inc
add
add
cmp
loop
js
jge
inc
mov
rclb
movsl
clc
mov
ds
sub
out
cmp
pop
fists
xchg
jl
adc
in
or
dec
into
xor
push
inc
push
shlb
jmp
push
xorb
daa
outsl
xlat
pop
push
nop
or
adc
repnz
inc
data16
jp
cmp
clc
sbb
push
dec
push
ret
fs
xchg
das
cs
out
ja
xchg
jnp
aam
and
dec
add
adc
adc
inc
scas
lcall
and
hlt
xchg
inc
lock
ss
inc
cmp
pop
cmp
mov
push
pop
test
lea
das
fmuls
fsts
test
decb
add
mov
call
sbb
mov
add
mov
and
xor
hlt
lods
jnp
inc
xor
and
mov
xchg
xor
dec
jno
and
and
cltd
into
mov
ds
adc
cltd
mov
rorb
add
adc
inc
cmp
push
les
or
inc
push
call
xchg
call
sub
pop
adc
imulb
fwait
sbb
stos
in
arpl
in
dec
repnz
in
ljmp
je
jnp
mov
inc
add
mov
out
mov
fistpll
leave
jle
lock
cmp
loopne
sub
mov
imul
cld
dec
cmp
shll
lahf
sti
xchg
adc
and
cltd
dec
jnp
les
mov
mov
sbb
or
cmp
enter
imul
cmpsl
or
mov
xchg
push
out
hlt
incb
mov
mov
dec
xlat
cmp
xchg
cmp
jo
daa
or
pop
or
add
pop
test
xchg
push
push
imul
add
out
pusha
pop
mov
mov
xchg
sbb
mov
fstpl
mov
call
and
addr16
ret
mov
jl
adc
xchg
adc
lods
mov
inc
outsb
cmpsl
cltd
ds
xchg
in
mov
dec
shlb
in
xor
jmp
mov
and
add
pop
cmp
fwait
test
mov
mov
dec
push
adc
xchg
in
or
pop
aas
fwait
vmovlps
je
add
fnstsw
xchg
in
mov
pop
mov
push
imul
ss
and
lock
mov
in
mov
addr16
mov
pusha
subl
outsb
pop
xchg
dec
mov
in
push
mov
mov
ljmp
mov
xchg
lods
push
into
lods
mov
xor
or
loopne
sbb
nop
insl
mov
les
dec
data16
vmovmskps
dec
insb
pop
and
jae
into
outsl
inc
jae
pop
mov
fidivl
push
lahf
pop
fnsave
xchg
movsl
add
pop
add
ror
and
sub
dec
jmp
and
out
or
push
dec
std
jmp
pop
iret
jmp
incb
movsb
les
scas
pop
ljmp
cwtl
or
mov
lcall
add
stos
add
loope
icebp
jl
push
aad
adc
and
leave
loope
cld
push
jne
pop
and
loopne
sub
ljmp
xchg
sub
fwait
mov
in
add
ss
or
fcoms
ja
out
rorb
jo
and
add
call
xchg
lds
test
movsl
adc
aad
xor
push
bound
cmp
adc
pop
mov
ret
mov
add
clc
jl
push
insl
inc
dec
jge
xor
push
dec
pop
or
int3
adc
sub
rol
adc
dec
cld
xor
mov
pop
mov
aad
insl
ljmp
add
inc
es
in
hlt
test
addb
cmp
xlat
inc
jns
loopne
add
nop
testb
mov
xor
movsl
rorl
cmpsl
jecxz
les
dec
adc
cmp
and
adc
and
jecxz
inc
or
lret
es
lea
popf
xor
jae
dec
out
inc
outsb
lea
sti
adc
aad
jbe
loop
xor
cltd
shld
inc
push
inc
jl
jno
or
lret
xlat
mov
mov
addl
test
jnp
aaa
jno
mov
imul
lods
mov
mov
dec
mov
js
jp
icebp
xor
and
arpl
mov
loop
dec
jmp
das
test
jne
fimull
rolb
mov
lds
sahf
cltd
pop
pop
pop
cmpsl
sub
int3
adc
std
mov
ret
mov
clc
je
icebp
pop
je
roll
test
sbb
xorl
sarl
and
outsb
shrl
shl
inc
shrl
xor
popa
adc
xchg
mov
push
pop
popa
push
loopne
mov
frstor
jmp
jg
out
push
and
lcall
test
cmc
stos
mov
enter
dec
jne
jg
outsb
adc
mov
jo
jmp
lret
jbe
fildl
fisttpl
movsl
andb
out
aam
sahf
fwait
jbe
out
push
call
ss
push
sbb
jmp
mov
aaa
mov
adc
in
cmp
push
sti
rolb
mov
push
xor
adc
mov
in
inc
pop
es
ja
add
cmc
stc
or
sub
jo
inc
push
sub
fs
outsb
mov
xchg
lock
arpl
loop
cld
inc
mov
mov
xlat
cmpsb
mov
sahf
mov
fdivrs
leave
and
jo
xor
add
adc
jo
pop
jecxz
loop
addr16
addl
pop
lods
and
dec
jbe
xor
add
fs
fwait
jno
jo
sub
mov
dec
test
mov
test
push
push
jns
out
cld
mov
lods
enter
jae
push
enter
mov
xlat
imul
xchg
or
xchg
arpl
cmp
mov
and
punpckhwd
or
sub
decl
movsb
aad
ss
insb
fildl
or
mov
jb
and
xchg
add
mov
fcompl
stos
aad
sub
mov
movsl
jl
scas
and
hlt
lahf
mov
xchg
xchg
stos
pusha
fwait
cmp
or
loop
test
sbb
push
stos
add
or
cwtl
sbb
pop
and
test
xchg
hlt
cmp
mov
loopne
test
xchg
sub
cmp
enter
dec
js
xchg
sub
int3
arpl
cld
and
movsl
rcrl
or
sarb
sub
xor
aam
insl
pusha
mov
mov
cmp
in
sub
leave
dec
mov
lcall
mov
imul
xchg
or
aaa
stos
push
sbb
fbld
mov
adc
sub
icebp
ficoml
dec
jl
pop
add
sar
stos
fnstcw
sbb
lcall
mov
push
loope
mov
arpl
jge
iret
pop
stos
dec
mov
push
adc
inc
test
pop
and
les
sbb
dec
shrb
sub
out
movsl
and
push
jae
sti
mov
sub
lret
or
lods
out
mov
cli
mov
dec
out
xchg
jae
xor
dec
cmpsb
mov
jmp
lahf
movsl
adc
fadd
xor
int3
sub
nop
std
nop
fwait
xchg
hlt
insb
dec
adc
sub
dec
fidivrl
pop
dec
dec
movsl
inc
inc
scas
lods
mov
imul
inc
lcall
popa
pop
out
aad
jmp
das
xrelease
dec
test
fs
popf
push
mov
sub
lds
xchg
lret
neg
cld
aas
xor
scas
aas
push
mov
mov
mov
cmpsb
mov
test
jg
es
mov
mov
pop
or
pop
jp
out
push
lahf
iret
xor
mov
movsl
jl
in
or
shlb
sub
sub
fimuls
add
movsl
outsl
bound
jg
idivb
or
cwtl
cwtl
push
loopne
je
pop
jns
and
aad
call
leave
int3
ret
pop
je
subl
jbe
call
loopne
dec
pop
dec
ss
out
add
and
loop
mov
ficompl
test
jnp
jb
cmp
movsl
mov
pop
xor
push
fstpt
out
popa
fmull
in
hlt
mov
jnp
add
inc
ljmp
sbb
mov
mov
push
mov
or
dec
cmp
jnp
fwait
and
mov
pop
andb
cwtl
or
sahf
lock
xor
cmp
test
mov
cmp
add
pop
lock
or
dec
in
xor
lret
xchg
push
sub
pusha
mov
repnz
cmc
loop
mov
mov
jp
mov
sbb
mov
xchg
idivb
bound
and
jl
mov
inc
insl
std
add
xor
sub
outsb
pop
inc
sbb
jb
mov
mov
stos
inc
mov
sub
lret
lcall
insb
ss
fisttpll
jns
cli
js
stos
xchg
push
xor
push
pop
insl
jp
push
xor
aas
cmp
mov
daa
jns
cld
ss
fisubs
lods
fsubrp
push
push
mov
mov
fpatan
clc
push
mov
hlt
or
movsb
xchg
ret
sbb
popa
lock
mov
add
cmp
stos
push
push
fcompl
lret
mov
mov
sub
sbb
popa
xchg
sub
sti
lds
sbb
aad
fists
add
jecxz
dec
out
fs
jnp
sbb
in
inc
dec
jb
or
mov
leave
lock
mov
adc
rcll
rolb
sahf
pop
mov
in
cmpsl
mov
cmp
or
sbb
out
mov
xor
imul
fwait
ret
jb
scas
sub
filds
mov
adc
adcb
cmpsl
lea
xlat
adcb
loope
xchg
xchg
clc
cli
push
add
cmp
adc
or
or
into
repz
mov
arpl
sbb
jecxz
jne
adc
sbb
shrb
mov
shl
rcll
test
push
ljmp
aaa
inc
xchg
push
jl
scas
pop
je
pushf
push
repnz
dec
jl
out
test
and
movsb
inc
mov
mov
addl
lods
xor
int
rolb
mov
jo
dec
outsl
outsb
orb
stos
cmc
jno
jle
cmp
pop
mov
mov
out
sbb
out
lahf
cli
icebp
mov
xchg
imul
push
out
xor
adc
jo
psrld
mov
or
stos
sub
clc
xchg
mov
andb
pop
cmp
test
lock
dec
je
jo
mov
or
push
stos
lea
add
ret
lods
test
jo
outsl
mov
fidivrl
sub
sbb
pop
mov
insb
aad
sbb
pop
stos
in
push
mov
cmp
push
and
test
cld
scas
notl
clc
lods
cmp
out
mov
fstps
je
movsl
aam
scas
jmp
mov
insl
push
stos
sahf
subl
mov
imul
jbe
add
pop
ret
insb
inc
loop
push
fwait
aad
repnz
mov
adc
lcall
push
aas
inc
xor
rcrb
push
cmpsl
pushf
add
fstps
mov
faddp
mov
lds
loopne
lret
es
outsb
pop
dec
adc
xlat
xor
out
fdivs
adc
jbe
sub
pop
and
sarb
push
mov
xchg
and
jg
les
sub
rcr
daa
out
jmp
stos
inc
mov
cwtl
sub
shrb
inc
mov
inc
aam
xor
test
cmp
ljmp
rcrb
sbb
icebp
js
mov
jge
inc
dec
jo
and
mov
cmp
bound
and
jbe
out
aas
push
push
aam
ret
dec
loop
inc
mov
push
int
add
leave
dec
lret
cmp
push
jmp
movsl
out
addr16
mov
ret
cmp
das
mov
lea
jns
sarl
subb
add
inc
ja
xchg
js
jnp
push
or
mov
mov
jmp
inc
test
lret
shl
fimuls
sub
call
mov
sbb
push
rclb
inc
scas
clc
out
add
push
mov
loope
jbe
pop
test
js
sub
out
outsb
in
jmp
mov
pop
out
gs
mov
sub
mov
xchg
mull
mov
lods
movsb
or
leave
std
mov
sbb
xor
mov
pop
adc
jmp
das
sub
dec
mov
xor
loop
add
jge
cwtl
xchg
subl
xor
dec
mov
dec
fcoml
stos
in
ja
pop
xchg
mov
mov
xor
jge
imul
and
dec
xchg
jb
sub
inc
cmp
stos
push
out
ljmp
mov
cmpsl
mov
js
dec
repz
repz
rcrb
out
in
and
popf
roll
inc
out
cmp
fs
xchg
cmp
dec
mov
xchg
adc
xchg
jecxz
add
mov
mov
test
sub
js
rorb
loop
pop
or
lea
lcall
addr16
push
adc
fmuls
cmp
in
outsl
insb
xchg
imul
xchg
dec
nop
pusha
or
jmp
xchg
insb
pop
push
push
ror
pop
iret
popf
push
ss
mov
add
jno
inc
jnp
dec
cmp
aaa
pop
hlt
fbld
sbb
aam
adc
cmpsb
rclb
jecxz
adc
inc
push
fstpt
lahf
add
outsl
mov
push
add
cmp
aaa
shll
das
xor
fstpl
jle
add
test
mov
push
mov
lret
lret
sbb
ss
jno
sub
jnp
dec
push
and
pop
and
icebp
icebp
jbe
cltd
push
and
xchg
ficoml
nop
sbb
ret
mov
mov
add
bound
xchg
sbb
mov
cltd
jle
ret
or
int3
sbb
in
aam
add
sub
rcll
cmp
or
imul
in
xor
and
sub
nop
in
xchg
cmp
jns
sub
repnz
lods
movsb
popf
jne
out
cmp
dec
jl
mov
aam
sub
out
fstps
testb
pop
outsb
jns
and
xor
imull
jecxz
loope
ficomps
pop
dec
outsl
push
neg
inc
fcmovb
mov
mov
jne
aas
insb
xor
stos
or
lods
repnz
rcll
inc
cli
jns
mov
add
jge
movsb
fwait
sbb
sbb
add
ljmp
ds
ja
nop
jg
fistl
das
jbe
sub
in
xchg
imul
jbe
lcall
pop
dec
fimull
loopne
test
pushf
jl
bound
push
imul
jbe
pop
cli
mov
adc
xchg
movl
call
dec
push
das
mov
fmuls
test
ss
mov
imul
mov
into
push
lret
fdivs
movsl
in
inc
inc
mov
lea
into
ljmp
mov
mov
and
cltd
add
mov
pop
add
xor
je,pn
sbb
sbb
xchg
sub
imul
fsubs
movsl
aaa
xchg
lret
mov
mov
fucomip
negb
outsl
sub
iret
clc
mov
jmp
loopne
xlat
jmp
jge
cmpsl
adc
jb
mov
fcos
test
es
jle
push
mov
stos
aaa
inc
imul
ja
mov
test
fsin
push
cmp
inc
int3
enter
mov
int3
fldl
out
inc
cmpsl
and
int
nop
pop
sub
insl
shll
and
pop
mov
packuswb
popl
pushf
aaa
insb
inc
pop
push
mov
inc
mov
jno
mov
sub
clc
mov
test
ja
ljmp
add
jecxz
sub
inc
cld
adcb
sti
lret
sub
push
push
arpl
movsl
shrb
fs
and
cs
jg
xor
pop
lret
or
ljmp
push
sbb
sub
and
loopne
sub
or
xlat
inc
sbb
adc
mov
jo
sbb
es
sahf
sti
fstl
pusha
pop
sub
xorl
lahf
xchg
and
or
fs
mov
jg
fstpl
mov
pop
gs
pop
adc
popl
push
les
nop
sbb
push
jb
push
adc
pusha
cmp
in
and
cld
ret
xchg
jmp
cmpsb
mov
cmp
pusha
fidivrs
repnz
dec
cld
xchg
cmp
jg
xor
jecxz
pop
aas
fiaddl
xchg
mov
sbb
mov
pushf
js
xchg
jae
jno
out
mov
popa
fnstsw
js
xchg
insl
pop
data16
pop
hlt
in
fs
xor
mov
pop
rcrl
imul
inc
shlb
inc
into
push
xor
aaa
ficoms
and
inc
xchg
jbe,pt
sarb
xlat
int3
outsl
test
add
sub
push
popf
cmc
in
aad
addr16
lcall
mov
mov
dec
or
bnd
add
inc
or
push
xchg
dec
mov
aaa
or
lret
or
arpl
std
out
mov
hlt
in
mov
addr16
in
mov
add
jmp
bound
sub
fldl
mov
mov
mov
xchg
mov
adc
insb
mov
push
sub
xchg
sbb
pop
push
push
movsl
xchg
add
outsb
je
lods
push
jge
aam
cwtl
pop
testl
inc
jp
pop
add
js
pop
ss
mov
push
xchg
pop
jg
push
insb
sbb
xor
test
wbinvd
mov
int
scas
xchg
sarl
sub
xor
imulb
xor
inc
jae
and
repnz
xchg
jge
call
adcl
out
xlat
mov
jnp
lock
into
dec
and
mov
sbb
ss
flds
insl
mov
mov
sbb
cs
and
push
mov
cmp
popf
mov
mov
gs
daa
cmp
out
mov
cld
pushfw
or
xor
mov
mov
std
push
dec
inc
fidivrs
xor
cmp
sbb
add
or
popa
cmpb
dec
sti
in
mov
xor
enter
sub
pop
add
xchg
int3
xor
inc
and
ret
int3
sbb
push
adc
lret
aaa
cmp
es
lret
pop
in
negb
jns
les
cs
or
adcb
push
mov
ja
or
cwtl
addb
add
mov
push
sbbl
out
fwait
nop
cmp
in
jae
faddl
test
pop
push
xor
dec
fsubs
incb
xchg
ljmp
mov
jbe
pop
es
sub
bound
pop
dec
jle
je
adc
dec
gs
mov
aam
or
out
push
dec
cmp
scas
push
or
xchg
and
scas
jnp
imul
aaa
ds
mov
mov
push
cltd
lock
dec
xchg
adc
sub
popf
inc
jae
popa
pcmpeqw
testb
iret
popa
fistl
out
and
daa
xlat
mov
lock
fldl
adcb
cmp
xlat
jno
and
in
or
mov
push
adc
jg
or
popf
popl
mov
fwait
sti
pop
pusha
stos
or
cmpsl
sub
mov
ja
daa
sub
and
fs
or
inc
movsl
adc
cmp
dec
pop
test
mov
fsubp
xor
cmp
mov
jns
xchg
jge
in
insb
push
and
js
mov
and
push
push
loop
fisttps
cmp
lock
cmp
sub
cmp
insl
call
js
jae
rorl
or
ret
je
mov
je
pop
mov
pop
dec
pop
mov
cwtl
push
pop
push
mov
jnp
test
aas
jmp
pop
cmc
adcl
push
mov
jns
dec
sbb
outsb
jp
jmp
pusha
mov
pop
adc
fldcw
push
push
stos
add
inc
jl
pop
out
dec
add
into
dec
xor
pushw
mov
dec
mov
xchg
jbe
sbb
and
stc
pusha
inc
in
pop
push
fiaddl
lods
jle
sbb
into
push
xchg
lret
cs
xchg
fwait
in
pop
adc
cli
xchg
inc
fwait
sub
clc
cltd
mov
mov
and
std
xor
loop
jp
aad
inc
leave
pop
and
repnz
mov
sti
test
push
adc
aam
repnz
icebp
pop
or
dec
mov
xchg
fdivrl
loopne
cli
and
push
data16
inc
fldt
orb
dec
lods
sbb
and
stc
fstps
add
std
divb
mov
sub
cwtl
pop
in
fs
lock
xor
add
repnz
lcall
dec
imul
mov
lock
push
outsl
sub
push
adc
inc
or
sar
mov
mov
pop
ljmp
icebp
clc
orl
cltd
cmp
ds
xor
xchg
sub
int3
aam
adc
cmpsl
jo
jle
lods
mov
aaa
int3
sti
inc
dec
xor
mov
cmpsl
pop
xchg
mov
in
jae
mov
mov
std
or
adc
movq
dec
outsl
enter
xchg
jl
stos
stos
pop
lret
fsubrs
loopne
cmp
pop
cmp
jmp
nop
scas
lret
dec
loop
imul
push
or
and
jb
dec
cs
popa
test
fnstsw
pop
iret
fwait
mov
ds
mov
jp
jmp
stc
bnd
pop
jl
inc
push
mov
pop
cld
adc
add
cmpsb
pop
or
fnstsw
out
fsubs
mov
pop
mov
loopne
int
push
jmp
push
xor
call
push
leave
leave
lahf
aam
jmp
ret
inc
add
enter
push
adcb
mov
std
out
cmp
dec
outsb
xlat
push
pop
fwait
pop
jbe
es
mov
mov
andb
fs
dec
or
out
test
iret
leave
fcomi
stc
test
vprotw
and
sub
mov
pop
jecxz
lock
mov
movsl
test
cmp
pop
in
ljmp
mov
js
inc
lret
or
dec
cld
fildll
push
xchg
sub
or
fmuls
fcmove
outsl
in
adc
xchg
cmp
gs
mov
and
mov
in
cmpsb
lods
nop
cld
js
add
and
in
mov
iret
in
push
fs
dec
jns
pop
add
mov
lcall
shrb
mov
pop
sub
mov
or
sbb
bound
mov
cmp
xchg
push
push
outsb
xor
mov
add
test
cltd
arpl
into
xchg
aas
repz
ja
adc
jne
rorb
sub
leave
dec
sahf
inc
lret
or
inc
fidivrs
pop
sti
mov
jne
or
jmp
imul
rcrb
mov
in
call
sub
inc
cwtl
or
dec
outsb
leave
out
repnz
mov
mov
fcmovnbe
and
call
mov
mov
cmp
cmp
cmpl
mov
mov
xor
loope
mov
jge
cmpsl
aam
inc
jno
and
inc
loop
leave
repz
fmuls
fldl
mov
lods
lock
push
add
fs
rep
jns
loopne
test
cltd
into
loope
push
js
lods
jg
jae
outsb
adc
stc
orl
push
imul
lods
lods
addl
data16
imul
mov
mov
inc
sarl
mov
xor
sub
lret
test
adc
inc
lret
ret
mov
xchg
rcll
dec
sbb
pusha
shlb
das
pop
inc
lea
xchg
push
add
pop
cmp
fstl
or
sub
xchg
or
mov
jecxz
adc
test
inc
aas
stos
repnz
push
pop
inc
and
stos
stos
scas
jecxz
jp
dec
movsl
dec
arpl
aas
mov
sbb
mov
je
hlt
ds
jg
loope
lds
into
lret
out
mov
sub
cmp
inc
mov
jg
out
leave
cld
mov
mov
inc
cmp
cmpsb
jge
movsb
lahf
scas
push
xchg
cwtl
into
mov
loope
xchg
sub
xchg
js
or
lods
fs
xchg
adc
mov
fwait
out
or
lcall
in
cmp
clc
fisubrs
imul
cmpl
aam
or
adc
daa
aaa
mov
mov
sbb
jb
cwtl
mov
das
cmp
dec
inc
push
cmp
inc
out
andl
stc
pop
xlat
call
mov
rcr
push
jne
add
xchg
jle
pop
sbbb
pop
loope
fwait
pusha
pop
inc
les
mov
dec
cwtl
addr16
xchg
adc
ss
mov
cltd
lods
cmp
jnp
pop
cltd
scas
test
xor
add
mov
int3
dec
mov
jle
ret
pop
xchg
sub
mov
dec
icebp
xor
jmp
add
sbb
popa
ljmp
lret
hlt
repz
ret
outsl
scas
inc
popa
fisubrl
cmp
icebp
es
lea
outsl
scas
movsb
dec
jae
imul
sub
xor
rcrb
ja
faddl
mov
cmc
jbe
dec
stc
jle
mov
sub
icebp
pop
ret
mov
roll
mov
or
pop
nop
pop
lahf
cwtl
pop
xchg
jne
lahf
aam
dec
out
sbb
dec
push
push
push
and
iret
daa
xor
mov
inc
mov
xchg
and
sub
addr16
sub
push
jp
adc
cmc
cmp
dec
pop
mov
out
push
dec
in
pusha
mov
pop
dec
mov
sbb
push
mov
mov
push
add
fiadds
hlt
sub
or
pop
mov
mov
sbb
pop
pop
and
je
sub
rcr
test
push
fstl
xor
shrl
pop
or
push
aas
xchg
cmp
lock
insb
mov
dec
xor
cmp
mov
xor
sti
cld
scas
xchg
cli
dec
es
mov
ja
pop
sub
in
mov
mov
mov
loope
into
add
cmpsl
mov
popf
jg
xchg
cwtl
test
adc
dec
add
imul
xchg
shl
movsb
andl
in
mov
shrd
or
xchg
repz
sarl
cmp
js
mov
mov
lds
cmp
lret
cmp
insb
jbe
into
or
xchg
out
lcall
and
xchg
loopne
cltd
xor
mov
test
es
lcall
rolb
and
inc
shll
xchg
roll
fsts
pop
cmp
mov
inc
setp
imul
jge
push
mov
xchg
out
test
jecxz
xlat
repz
shll
icebp
mov
xor
fbld
ret
jecxz
mov
cwtl
mov
stos
adc
push
or
sub
stc
adc
out
add
cmc
push
and
mov
and
mov
sbb
pushl
test
or
mov
adc
adc
sub
add
movsb
fisttpl
jle
lods
xor
test
xchg
push
push
sub
push
insl
imulb
in
sub
int3
cltd
in
rep
push
pop
fwait
inc
rorl
xchg
stc
xchg
insl
mov
xchg
jmp
xchg
pop
inc
xor
test
sbb
jbe
mov
jno
cmp
or
xor
pop
mov
pop
leave
and
hlt
stos
cmp
sub
sbb
movsb
xchg
xchg
insb
and
jge
lock
and
jl
fidivrl
mov
add
cs
mov
mov
add
or
fisttps
pop
dec
adc
fidivs
js
je
imul
test
lods
and
aaa
sub
aad
cld
pop
xor
ret
lds
ficoms
xchg
std
push
sti
popa
xchg
dec
iret
sub
lret
enter
mov
imul
loop
sarl
mov
dec
pop
lds
or
jo
push
scas
push
mov
pop
mov
fimuls
jnp
push
jle
repz
ss
ret
sbb
jmp
cmp
int3
mov
add
xchg
push
popa
and
out
sub
mov
lcall
cwtl
inc
mov
xor
aam
adc
mov
out
xchg
sub
mov
push
push
cmp
fcomps
movsb
rcrl
sbb
test
or
pushf
mov
mov
stos
sbb
mov
fwait
pop
stc
sbb
bound
stc
ss
cld
xor
sahf
xchg
add
movsb
js
pop
popf
xchg
cmpsl
xchg
scas
jl
xchg
dec
enter
ret
fwait
pop
shrl
inc
xlat
into
in
push
fmulp
and
add
mov
and
std
mov
jns
jmp
adc
mov
dec
push
xor
jmp
mov
pop
es
out
jnp
popf
inc
inc
mov
andl
mov
xor
aad
push
ja
xchg
xor
inc
inc
bound
jae
shl
gs
addr16
mov
and
loop
jb
xor
mov
out
jp
or
daa
dec
inc
jo
dec
in
lods
gs
xorb
add
mov
and
and
push
loopne
add
rol
rcll
sbb
out
jne
test
les
mov
push
pop
adc
and
mov
add
jmp
add
jecxz
loopne
cmpsb
stc
icebp
sahf
and
dec
pop
nop
jmp
mov
nop
pop
cs
loope
xor
movsb
pmullw
or
arpl
aad
mov
jo
xchg
cmpsb
mov
pop
mov
das
in
es
pushf
lods
outsb
jo
xchg
xor
loopne
adc
mov
add
add
loope
fs
mov
push
addr16
mov
cltd
jmp
dec
insb
out
push
shlb
dec
hlt
mov
pop
mov
pop
leave
and
dec
mov
cmp
cmc
adc
cwtl
mov
hlt
test
dec
mov
mov
rcl
ret
mov
xor
pop
addl
xchg
mov
xor
dec
dec
add
and
iret
sbb
sbb
sahf
jmp
outsl
clc
and
in
les
shlb
pop
sbb
scas
mov
mov
popf
movb
ljmp
xor
inc
cli
fnstcw
or
pop
ror
mov
add
sbb
sbb
mov
mov
je
dec
sbb
mov
divb
push
loope
and
loop
mov
dec
pop
inc
stc
rcrb
push
pop
mov
mov
out
dec
mov
popa
adc
nop
sub
into
outsb
cmp
mov
mov
dec
in
jne
dec
out
subb
inc
add
daa
cwtl
adc
push
je
jmp
mov
cmc
mov
xchg
shlb
inc
and
in
dec
and
loope
cli
pop
push
push
cmpl
push
bnd
clc
stc
xor
push
jg
mov
jle
jnp
jecxz
fbstp
dec
test
loope
mov
jge
out
dec
push
cmp
dec
fs
outsb
cs
mov
cmpl
loope
dec
imul
mov
push
stos
sbb
fidivrl
xlat
pop
enter
les
mov
adc
fwait
sub
hlt
mov
jge
and
cmp
pop
mov
loopne
int
gs
mov
pop
popf
out
mov
leave
and
add
fmuls
pushf
scas
in
push
in
mov
jecxz
xorb
repz
mov
stos
cmp
in
mov
jmp
dec
add
aas
push
fs
ret
dec
in
in
lret
jbe
pop
in
mov
sbb
push
xchg
jecxz
pop
in
xchg
mov
out
loop
pop
lahf
aas
or
push
sub
cmp
push
stos
call
add
xor
mov
mov
aas
mov
repnz
hlt
cmp
mov
pusha
pusha
jmp
pop
xlat
cwtl
mov
das
adc
sbb
cmp
fisubrl
jb
mov
jnp
shrl
roll
jbe
inc
adc
fdivrs
mov
mov
mov
pop
int
cmp
pop
fmull
loop
cmp
dec
fcompl
mov
fisttpl
push
push
push
lods
sub
cwtl
inc
rorl
lret
cmp
inc
dec
sbb
mov
sbb
push
aas
xor
mov
xor
ljmp
dec
xor
data16
std
cmp
hlt
std
dec
leave
jp
jb
push
leave
push
push
fsubrs
adc
mov
and
cmp
sbb
or
jae
lret
mov
jnp
jp
or
fstcw
imul
cmp
js
mov
pmulhw
negb
jo
sbb
scas
mov
stos
sbbb
and
push
nop
sub
stos
mov
xor
fstl
or
pop
and
imul
add
inc
sbb
dec
mov
mov
imul
jge
das
std
mov
jge
push
cltd
jge
mov
dec
mov
xchg
push
xor
mov
xor
add
loope
mov
in
push
mul
inc
outsb
cltd
enter
adc
dec
inc
paddb
lret
jo
mov
or
scas
add
inc
movsl
mov
cmp
gs
jbe
pop
inc
fsubrs
dec
imul
inc
sub
jbe
inc
imul
fisubrl
sbb
xchg
mov
out
adc
jecxz
push
jp
cmp
xlat
jae
cmp
or
jecxz
aam
jne
addr16
sbb
or
leave
xor
xchg
pop
mov
mov
fisttps
outsl
cs
divb
mov
sub
cld
inc
std
sbb
xchg
mov
jns
int
push
xor
clc
sbb
iret
ret
jo
xchg
push
add
das
jl
push
or
mov
data16
and
adc
pushf
and
jnp
xlat
ffreep
sbb
mov
fdivrs
cld
sahf
test
xchg
lds
xchg
cmpsl
pusha
mov
repz
adc
jl
scas
dec
mov
aad
outsl
jge
mov
add
out
xchg
and
in
mov
movb
push
add
in
sub
notb
sti
test
mov
sub
sub
icebp
into
xchg
mov
movsb
inc
andb
out
xchg
or
ret
pop
pop
lcall
jnp
and
adc
mov
cmp
inc
leave
ljmp
add
cmp
sbb
out
in
jae
loopne
fstps
adc
sbb
adc
mov
push
jbe
stos
mov
jae
xchg
notb
inc
dec
stos
pop
xchg
pop
pop
add
bound
add
push
enter
mov
pop
sbb
or
add
in
mov
or
shll
adc
data16
cld
aad
popa
lret
sbb
stos
lcall
outsb
xchg
sbb
add
push
xchg
and
pusha
fisubs
outsb
or
pop
sbb
call
ret
fisubs
in
jae
lock
lret
andl
cmp
loope
and
sub
sahf
cld
pop
gs
sbb
ret
mov
push
sub
jl
lahf
pusha
mov
fidivrl
push
inc
test
fsubl
in
or
dec
dec
mov
sbb
add
iret
pop
int
inc
jnp
push
xchg
push
rcl
pop
push
push
adc
arpl
pop
mov
fucomp
pop
jns
aad
sbb
lds
add
lahf
or
icebp
sub
cmp
pop
aam
push
dec
lods
dec
sbb
adc
dec
scas
iret
scas
mov
dec
adc
out
pop
outsl
and
xchg
add
push
in
adc
xor
cmpsl
movhps
movsb
xor
out
pop
loop
popf
sarb
js
mov
lahf
add
push
aad
popa
jmp
adc
dec
repnz
incb
push
in
inc
and
xlat
arpl
cs
pop
add
jne
adc
push
sbb
clc
shl
lods
inc
push
les
push
add
and
fsubr
mov
mov
or
xchg
insb
lds
inc
std
fcomip
inc
xchg
xlat
sbb
sti
fnstcw
pop
les
push
pop
ficoml
faddl
clc
sbb
popa
xchg
cmp
mov
out
rcll
cli
fiaddl
test
jnp
xorw
adc
lahf
pcmpeqw
aaa
cltd
std
mov
mov
pop
mov
adc
loopne
xlat
xlat
int
loop
hlt
in
xchg
or
cwtl
xchg
aas
outsb
mov
aas
repnz
out
mov
xchg
jp
xchg
xor
pop
hlt
push
push
in
fstl
xor
inc
push
xchg
mov
in
dec
or
cmp
cmp
ficoml
pop
push
addr16
fbstp
inc
stos
lret
jp
stos
jns
inc
jns
mov
aas
inc
adc
pop
mov
add
flds
jecxz
cmpsl
xor
fisubs
push
mov
mov
daa
rcrb
add
mov
mov
cmp
cmp
mov
fnstcw
and
aas
jecxz
jl
repz
sahf
outsl
fmul
push
sbb
or
xor
jecxz
xor
xor
icebp
outsb
xchg
mov
dec
mov
jno
push
inc
repz
movsl
jge
nop
mov
and
sbb
lahf
xchg
mulb
push
or
add
cmp
lret
mov
stos
shlb
sub
jmp
mov
rol
leave
scas
nop
jb
ds
push
mov
fimull
adc
pop
std
lret
inc
pop
outsl
add
pop
bound
pop
in
ss
sti
les
imul
das
fisttpll
nop
sub
and
dec
mov
jbe
push
js
mov
mov
sub
and
lea
pop
ja
inc
mov
pushf
xlat
mov
arpl
roll
sarl
pop
mov
and
add
fs
xor
dec
movsb
fwait
adc
adc
arpl
insb
jp
imul
dec
stos
add
and
ljmp
push
xchg
stos
push
mul
push
test
or
sub
shl
sbb
jo
add
or
iret
scas
mov
icebp
mov
sbb
or
into
mov
jmp
push
adc
and
or
addr16
pop
cmp
add
mov
mov
aaa
xor
sub
jecxz
int
lods
jb
outsb
add
out
test
cltd
mov
push
xchg
or
scas
lahf
mov
add
pop
jbe
fcom
scas
pop
mov
push
subb
jbe
xchg
lods
xchg
xchg
jecxz
mov
pushf
jmp
ljmp
imulb
mov
jnp
movsl
inc
mov
add
cmp
or
jno
xor
add
push
cmpsb
push
push
imulb
das
fucomip
sahf
inc
sbb
add
and
xor
lock
ret
lods
popf
loopne
cld
fists
das
pop
fcomip
icebp
add
add
shrl
sbb
aas
out
lds
sub
in
divb
mov
mov
inc
jmp
cli
cmp
fmull
iret
pop
imul
xchg
jmp
sbb
add
stc
lods
or
popa
push
lds
popf
rsqrtps
fisttpl
jo
xor
xchg
in
ljmp
push
push
scas
movsl
into
sbb
popl
fldl
pop
mov
cmpsb
pushf
mov
xchg
lods
pop
shrl
test
xchg
push
cmpsl
cmovs
push
xchg
xchg
push
xchg
fnstenv
mov
aam
pusha
cmp
insb
test
imul
test
push
ljmp
sub
and
mov
pop
ss
push
stos
nop
js
lret
mov
je
loopne
repz
negl
stos
fisubrl
in
iret
mov
push
push
inc
iret
addr16
push
xlat
fdivl
test
std
lds
adc
outsl
pop
adc
cltd
in
add
push
cmc
add
jne
add
ljmp
cmp
insl
out
xchg
inc
fbstp
jge
push
jne
ret
inc
popa
push
xchg
jecxz
repnz
jg
jae
insl
dec
and
decb
add
dec
nop
xor
and
mov
mov
mov
mov
mov
rorl
mov
mov
mov
int
pop
cmpsb
scas
inc
sahf
sbb
clc
or
fdivrp
xor
outsb
jo
jne
popf
adc
inc
and
in
aaa
or
sub
pop
adc
cmp
mov
lahf
xlat
outsb
repz
pop
inc
into
pusha
mov
push
scas
dec
add
dec
and
dec
stos
mov
push
push
filds
or
and
xchg
cltd
xchg
test
mov
test
nop
mov
or
movsl
cs
pop
lret
xchg
leave
ret
jl
popf
ss
ss
std
testb
cltd
loope
mov
aas
or
xchg
pop
push
and
fidivrl
mov
repz
push
ja
sti
in
test
sahf
cmp
xchg
xorl
push
add
popa
imul
mov
daa
in
xor
pushf
fsubl
insb
and
mov
mov
pop
pusha
or
sbb
jno
test
pop
leave
or
enter
inc
popf
mov
aas
pop
adc
xor
in
pushf
or
in
or
sub
decb
xor
mov
sahf
int
and
test
dec
in
jg
adc
pop
cmp
sbb
pop
test
jns
xchg
cs
das
out
add
mov
cmp
cs
mov
cltd
mov
imul
add
xchg
mov
gs
jge
sub
mov
xor
lret
loope
lret
lret
outsl
arpl
sbb
inc
mov
xchg
popa
or
mov
icebp
lahf
aaa
jecxz
dec
lock
test
lret
mov
fsub
fstpl
adc
repnz
add
aas
jb
push
push
mov
ret
in
mov
pop
mov
mov
daa
push
xchg
fstpl
lret
arpl
push
gs
ja
jbe
loop
jno
sbb
push
pop
in
mov
hlt
dec
and
leave
hlt
xor
mov
pushl
subb
push
adc
std
js
jbe
xor
mov
xor
bound
test
cmp
cmp
xor
das
jecxz
movsl
push
xor
or
jg
and
mull
aaa
push
pusha
jmp
ret
addr16
hlt
and
pop
test
mov
inc
pop
cmp
pushl
jo
daa
rcll
push
or
adc
cmp
sub
jb
sbb
jne
xor
adc
movsl
push
inc
mov
jmp
sbb
mov
add
adc
jbe
loopne
add
xor
les
fsub
insl
dec
cmp
pop
jle
pushf
dec
xor
lock
jae
or
push
roll
xchg
repz
and
ja
imul
loopne
cmp
or
js
lods
jmp
sbb
mov
adc
shlb
clc
ret
xor
popf
sub
in
inc
loope
mov
in
pusha
push
in
mov
daa
jno
xchg
or
mov
mov
push
adc
es
mov
xchg
sahf
push
repnz
push
sbb
dec
jp
arpl
pop
scas
or
or
aas
xchg
clc
jo
cmp
lods
push
in
add
xchg
sbb
cwtl
mov
xchg
inc
mov
mov
pop
pop
mov
mov
repnz
aad
add
in
push
daa
arpl
mov
mov
pop
jo
push
test
mov
das
cmp
or
test
push
arpl
dec
lret
mov
and
loopne
adc
cmc
xor
shlb
dec
cmp
fs
add
sub
jg
or
push
jmp
jbe
cmp
or
repz
aam
ja
and
pop
cmp
repnz
jg
adc
push
adc
pop
fbstp
les
call
sub
jnp
xor
sub
jmp
add
and
lock
stos
mov
inc
adc
int
push
mov
movsbl
faddp
in
adc
lret
mov
pusha
fstpt
into
xchg
push
shll
hlt
aad
mov
sahf
test
icebp
shll
xchg
negb
cwtl
out
or
push
mov
sub
movsl
lret
push
incl
orl
stos
mov
cmpsl
adc
adc
or
flds
mov
sub
fidivs
out
pop
xchg
add
lods
and
xchg
inc
adc
mov
loopne
mov
lods
xchg
sahf
scas
sbb
inc
dec
leave
repnz
sub
out
jne
xchg
mov
xor
out
movsl
adc
push
push
mov
mov
lahf
rclb
jno
mov
addr16
std
jo
xlat
jmp
sti
or
dec
stc
inc
mov
or
imul
outsb
or
inc
pop
inc
adc
bound
adc
mov
jl
repz
rcl
mov
fnstenv
movsb
push
shll
and
shlb
sar
out
xchg
jnp
aas
jno
jb
clc
xchg
mov
out
xlat
dec
fistl
daa
lock
dec
add
or
xor
pop
push
iret
mov
pushf
das
dec
push
cmp
lea
sarl
stos
adc
and
imul
jge
jecxz
or
dec
mov
mov
sbb
fsubrl
cmc
jne
in
cwtl
xchg
pop
mov
inc
aam
dec
fldt
xor
mov
or
out
arpl
cltd
movsl
and
mov
cmc
jge
sbb
xchg
cmp
stos
xchg
in
cmp
dec
jge
cmp
and
pop
xchg
aas
cld
test
and
jbe
sar
test
fisttpll
fs
and
iret
ret
mov
add
sarl
pop
push
adc
jp
lahf
loope
inc
mov
xor
xchg
jne
outsl
repz
mov
pusha
test
lods
loop
mov
dec
lcall
cs
sub
ret
movsl
and
test
aam
add
pop
cmc
or
mov
and
add
int
push
jl
sahf
inc
ffreep
ret
cmpsb
dec
xor
adc
mov
test
sbbl
jno
movsb
xor
xor
loopne
cltd
jo
cmp
pop
xlat
shll
lcall
mov
sbb
sub
outsb
jg
idivb
leave
jb
mov
adc
sub
ljmp
push
inc
mov
je
enter
popa
mov
sub
aaa
cli
pop
cmp
add
test
adc
cmp
jnp
jo
lahf
push
into
imulb
cltd
arpl
inc
in
mov
sahf
xor
pop
mov
hlt
jp
mov
adc
addl
sbb
inc
scas
pusha
inc
in
jp
aaa
lea
aaa
imul
mov
ret
mov
scas
or
sbb
jp
pop
cmc
mov
sub
cmc
or
and
add
ficomps
stos
pop
shl
xor
sub
out
mov
dec
sahf
mov
negb
mov
in
call
lret
ja
insb
in
ja
or
cmp
cltd
add
xchg
xor
into
ss
ret
bound
sbb
mov
mov
mov
mov
xor
fucomp
lret
push
cltd
sbb
iret
fmuls
bound
inc
adc
insb
fucomi
add
ja
rclb
bound
loopne
push
sbb
jb
insb
aad
or
in
testb
jecxz
jnp
or
adc
out
push
dec
mov
aas
jmp
pop
shlb
hlt
mov
dec
repz
push
repz
xchg
pop
daa
jp
or
xor
mov
enter
xor
cmp
push
rcrl
testb
dec
add
sahf
dec
adc
ret
in
test
sbb
sbb
out
adc
or
into
add
lea
cmp
and
int3
xor
mov
popf
jecxz
cmp
in
std
xchg
jae
add
pop
dec
xchg
xchg
xchg
call
jmp
sbb
mov
hlt
fs
mov
sub
sahf
sub
jecxz
bnd
jp
dec
outsb
loope
aaa
and
jecxz
jl
cmp
shl
in
orl
stc
xchg
lret
sbb
test
pop
add
aad
adc
or
ljmp
dec
cmpsl
inc
sbb
push
lret
test
sub
xor
aam
in
adc
leave
or
dec
sahf
xor
xlat
mov
cmpsb
pop
cmc
addl
adc
jne
lods
fidivs
push
cld
and
sbbl
mov
adc
cs
inc
and
sahf
cmpsl
mov
fadd
and
xor
push
sub
jmp
xchg
out
dec
inc
pop
lahf
and
or
adc
jae
out
ret
addr16
pop
stos
outsl
mov
call
or
jno
mov
iret
int3
jns
mov
push
inc
pop
test
repz
add
test
fmull
mov
ss
push
and
je
mov
xor
add
cmpsl
insb
sub
lock
cmp
outsl
addr16
jg
in
in
mov
pop
stos
mov
push
in
adc
adc
scas
aas
sahf
ret
mov
mov
add
les
push
mov
jae
cld
dec
int
rcr
or
imul
jmp
adc
stos
out
stc
sti
mov
sub
mov
fnstsw
pop
push
xchg
dec
mov
js
xor
subl
das
or
jne
outsl
sub
jmp
and
sub
or
cltd
stc
or
jle
xchg
lods
insl
sbb
adc
lock
fisttpll
xor
mov
mov
std
jmp
add
stos
pop
cltd
push
repz
sbb
pop
rcl
cmpb
and
add
repnz
cwtl
aas
in
dec
inc
stos
subl
data16
mov
imul
mov
out
out
xor
sub
shl
cmc
xchg
lret
icebp
inc
fdivl
and
ss
xchg
hlt
mov
mov
jle
mov
lds
nop
adc
int
jp
push
xchg
pushf
out
push
xchg
xchg
cmp
jmp
mov
or
dec
mov
scas
addl
mov
out
push
int
pop
iret
movsl
or
mov
cmpsb
and
jnp
push
gs
lcall
jecxz
int
sbb
adc
xchg
js
pop
ja
sub
xchg
fwait
sub
dec
mov
loopne
lock
in
test
jp
test
xchg
test
mov
scas
mov
into
xor
shl
outsb
roll
and
ret
mov
mov
inc
ret
cmpsb
xor
cwtl
lret
cld
popf
and
out
push
xchg
fs
inc
jmp
ret
insl
dec
daa
inc
lcall
cli
cwtl
into
mov
cmpsl
xor
mov
lahf
cltd
movsb
jp
call
inc
dec
shl
inc
imul
test
ds
push
sbb
pop
dec
mov
loop
sub
mov
imul
lret
scas
sub
fdivrl
lds
pop
notl
rcl
test
cwtl
mov
xchg
fiaddl
xchg
stc
sub
xchg
pop
iret
bound
mov
fldenv
adc
sbb
roll
push
popa
push
or
push
jo
xor
jge
lret
sbb
movsl
inc
ds
ja
bound
mov
popf
out
lahf
aam
fmull
xchg
rcl
out
cmc
es
inc
pop
cmp
inc
out
inc
pushf
lcall
lret
xlat
jmp
mov
test
and
daa
inc
adc
movsl
lea
cmp
push
and
lret
xchg
add
pop
push
js
push
pop
pop
adc
outsl
popa
jb
inc
or
aam
and
adc
in
push
roll
add
mov
dec
pop
popf
mov
xchg
push
sub
jmp
jl
dec
lret
inc
mov
mov
or
jecxz
sub
sbb
andl
cwtl
repnz
jns
mov
xor
inc
push
add
sbb
lahf
xlat
xchg
roll
push
cmp
sub
cwtl
mov
inc
or
pop
loop
addps
inc
xchg
xchg
arpl
mov
mov
add
fists
add
ret
xchg
push
mov
cmp
xchg
inc
pop
xor
addr16
out
arpl
xchg
dec
mov
pop
or
sub
cmp
xchg
sbb
mov
mov
mov
inc
aam
adc
sub
pop
fcmovne
add
pop
dec
sub
arpl
push
and
xor
sti
inc
inc
sarb
mov
in
pop
ficoms
mov
imul
or
xor
scas
subl
jmp
in
and
mov
aam
xchg
out
xchg
jmp
pop
sub
mov
dec
xor
adc
xchg
ret
pop
xor
cmp
test
in
lahf
xchg
cmp
xor
popl
ds
icebp
push
std
mov
push
out
js
mov
leave
into
andl
pop
aam
xchg
orl
data16
ds
loopne
inc
and
mov
mov
push
sti
push
pop
push
aaa
inc
push
or
outsl
jns
mov
lret
sub
xchg
cltd
push
mov
sub
and
or
jb
pop
pop
mov
xchg
pop
push
sbb
lcall
fnstcw
leave
lret
add
add
aas
pop
cmp
insb
lret
xor
repz
dec
add
mov
stos
xchg
jnp
repz
push
mov
adc
pop
mov
xchg
rorb
ljmp
xorl
xlat
sbb
mov
ljmp
popl
test
hlt
mov
mov
lds
mov
xchg
sbb
out
fidivrl
sti
scas
inc
jns
cli
stc
out
mov
add
jmp
dec
jns
jne
loop
mov
sbb
jmp
push
pop
leave
orl
jno
jne
sub
outsl
or
lret
repnz
ja
xchg
scas
mov
aas
or
jecxz
popa
dec
fidivl
aam
nop
jns
int
cmp
enter
imul
and
mov
inc
push
mov
push
aad
push
cli
notb
add
and
mov
movsl
jns
push
fstpl
clc
xchg
std
sbb
jmp
es
cli
sub
ret
fcmove
fwait
les
xor
jbe
ret
sub
cmp
pop
sub
adc
dec
jne
loopne
lahf
loope
fdivr
mov
rolb
arpl
arpl
insl
lock
push
fsubrl
pop
or
sub
hlt
inc
dec
dec
aaa
mov
cmp
popf
push
fdivs
es
lds
loopne
mov
dec
enter
aad
pop
cwtl
push
ret
pinsrw
stos
jb
insl
jo
and
push
inc
xor
daa
xchg
push
mov
aaa
lock
inc
push
push
popf
lds
jl
loop
jl
jg
cmpsl
sti
mov
dec
mov
jae
xor
ds
cmp
insl
sub
mov
xchg
jl
mov
test
das
inc
sbb
repnz
stos
mov
mov
das
mov
das
or
sbb
daa
and
mov
out
mov
mov
cltd
add
ja
sbb
dec
add
mov
and
stc
or
push
in
cmp
leave
in
push
lahf
cmp
push
clc
push
mov
or
mov
push
mov
xchg
das
jo
adcl
xor
push
stos
shrb
xchg
inc
or
push
stos
into
subl
shlb
je
imul
adcl
jl
xor
adc
sub
pop
push
ret
fisubl
pushf
or
jg
jcxz
or
adc
mov
mov
pop
orb
and
repnz
sahf
out
dec
les
mov
inc
sti
das
cmp
dec
out
mov
jmp
int3
xchg
jp
xorl
sbb
push
ret
loopne
xchg
jmp
lret
push
push
xchg
pop
inc
movb
or
mov
jns
outsb
jae
imul
sbb
cmp
mov
mov
mov
movsb
pop
neg
aam
mov
jg
mov
les
push
and
repnz
cmp
icebp
push
mov
stos
movsl
add
or
push
xor
mov
out
xchg
enter
arpl
or
fcoml
lods
ja
ret
shl
jns
cmpsl
cld
lahf
push
adc
dec
das
mov
ljmp
out
xchg
hlt
aaa
and
les
repz
sbb
jp
jo
xchg
std
test
ds
pop
ret
or
inc
cmpsb
mov
repnz
mov
mov
or
bound
xlat
jecxz
ss
jne
jae
outsl
ret
iret
mov
sar
adc
xorb
jb
jno
dec
pop
hlt
lret
pop
test
jnp
icebp
rcrl
inc
xor
stos
inc
pop
mov
and
hlt
clc
int
mov
push
push
scas
and
jne
xor
jl
mov
xor
sahf
shll
rclb
rorb
sahf
adc
int3
pop
add
add
mov
arpl
add
scas
inc
fs
cmp
cmp
mov
mov
bound
dec
xchg
fstl
das
push
jmp
mov
bt
stos
fbld
test
cmp
push
jo
hlt
imul
xchg
lea
dec
jbe
adc
jb
scas
push
dec
cmp
cmc
jns
cli
pushf
hlt
mov
jb
mov
or
rclb
lock
and
mov
js
int
repz
adc
ret
dec
jle
add
loope
add
loop
mov
jg
mov
icebp
shll
pop
fwait
xchg
adc
cltd
dec
lcall
ret
xchg
push
outsl
incl
out
xor
cmp
cwtl
notl
arpl
cmpsl
or
sbb
inc
out
jl
addl
les
xchg
loope
imul
pop
das
mov
push
int
pop
sub
sarb
pushf
hlt
sub
xchg
mov
sub
ss
push
mov
mov
cmp
sbb
test
scas
jp
mov
jp
dec
mov
fsubrl
in
xor
imul
fadd
jg
sbb
sahf
jae
scas
call
andb
lds
rcrl
pop
jb
jmp
mov
adc
mov
xchg
ror
mov
inc
push
in
lret
push
or
pop
in
popa
add
jle
insl
pop
sub
mov
in
xorb
xchg
mov
pop
pop
push
aaa
gs
adc
cmp
fwait
test
sbb
lds
inc
int3
in
leave
push
add
aad
pop
push
jns
jae
cmp
cwtl
pop
cwtl
mov
sub
sahf
mov
fsubrs
es
leave
sbb
mov
mov
es
mov
jge
xchg
pmaddwd
push
sahf
cmpsl
test
repz
or
aad
pop
movsb
pop
in
ljmp
push
jo
bound
ss
mov
mov
inc
pop
pop
fisubrl
dec
add
push
xchg
int3
or
mov
pop
adc
push
push
data16
aas
test
adc
arpl
hlt
xor
dec
xor
sahf
add
les
lods
scas
ret
sub
jmp
loopne
daa
pop
push
adc
mov
outsb
addr16
push
jecxz
movsl
inc
and
pop
stos
cmpsb
test
xchg
es
iret
inc
sbb
repnz
lret
inc
adc
mov
pop
lcall
hlt
mov
dec
ret
popa
cmp
lods
mov
push
adc
ds
push
repnz
cmpl
push
sbb
mov
pushf
out
aad
cmp
fsts
jne
mov
adc
jle
out
fcmovu
dec
cs
inc
xchg
jb
xor
popa
movsl
mov
movsb
out
xchg
sbb
call
jge
repnz
add
jbe
lods
sub
in
out
jb
cmpsl
test
dec
cmp
lcall
notl
iret
sbb
jo
in
or
add
jne
jecxz
in
lret
mov
mov
cwtl
je
push
daa
enter
and
es
dec
aas
xor
xchg
push
push
test
cmpsl
pop
jmp
xchg
loop
popf
mov
movsb
xor
popa
loope
mov
sbb
xor
out
dec
mov
data16
sahf
mul
adc
lods
add
lcall
sbb
sarb
xor
pop
je
scas
aaa
int
jbe
inc
xor
inc
stos
das
push
or
push
ds
dec
pop
dec
xlat
or
sub
bound
fwait
sbbb
sub
movsl
loop
push
rcll
fs
lods
clc
arpl
in
es
loop
ja
xlat
push
xor
movsl
ret
ds
mov
and
sbb
fs
imulb
inc
dec
arpl
xlat
xchg
outsl
dec
ljmp
add
test
sub
fdivs
notl
clc
fmull
repz
shlb
jmp
pop
andb
jae
sbb
fisttpl
xchg
mov
xchg
stc
ja
xchg
sahf
das
xchg
jbe
sub
adc
fbld
and
cmc
sbb
add
orb
jns
fisttpl
mov
out
bound
hlt
lods
push
inc
mov
cmp
or
in
shll
ficompl
jp
into
fnstcw
pop
mov
adc
jmp
das
pop
aas
mov
xor
add
mov
mov
xor
sub
jb
int
cld
stc
stc
or
mov
mov
ret
sbb
std
gs
cmp
sub
dec
das
ret
sub
daa
adc
adc
imul
sub
bound
push
gs
mov
jg
popa
xor
push
inc
mov
push
adcb
sbb
lods
in
jg
repnz
adc
fadd
insb
xor
lods
movsb
mov
xor
pop
pop
adc
xchg
jno
mov
lea
pop
lret
sarb
inc
out
adc
and
pop
xor
push
mov
cmpb
inc
test
jno
and
pop
ret
ss
add
cmp
add
dec
jbe
sbb
in
pop
cmp
aam
xor
and
lahf
repz
inc
popl
in
mov
adc
fstl
outsl
daa
push
nop
inc
cmp
mov
movsb
lock
push
push
clc
mov
adc
sti
sbb
bound
test
sub
mov
dec
cmp
dec
mov
les
out
sahf
out
arpl
sbb
and
dec
bound
movsl
or
push
popa
jge
ja
sbb
ret
add
push
adc
leave
xchg
push
sbb
and
scas
rcr
imul
cmc
mov
lret
and
mov
add
inc
jp
rol
sbb
scas
shrb
test
jl
out
inc
jo
dec
adcl
add
js
dec
test
imul
mov
stc
jbe
aad
or
notb
inc
dec
movl
cmpsl
adc
dec
jle
cmp
adc
mov
rcrb
xchg
inc
mov
sub
push
ret
repnz
bound
inc
jg
xlat
arpl
sub
sub
mov
jnp
cmc
lcall
jne
xor
jnp
add
or
leave
sahf
cmp
pushf
sbb
es
sti
push
push
iret
cld
jbe
ret
push
push
cmp
div
pushf
popf
int3
test
icebp
push
dec
lods
sbb
cmpsl
popa
jne
movsl
sbb
in
mov
sarb
iret
outsl
mov
sbb
mov
shlb
sbb
mov
jecxz
lret
mov
sub
mull
inc
dec
sti
push
das
xor
pop
and
test
add
sbb
ret
iret
mov
push
jae
test
mov
aaa
aas
and
xor
mov
mov
add
mov
lds
pop
dec
jge
pushf
test
sub
ljmp
out
into
aas
fcmovbe
jne
and
aaa
fwait
xor
loopne
push
inc
pop
iret
gs
jbe
mov
je
cmpsl
pop
testb
push
and
xchg
test
push
das
mov
jmp
jle
lock
xlat
adc
inc
enter
testl
cmp
outsl
add
dec
stos
or
mov
adc
out
dec
lea
sub
stos
icebp
ret
shll
or
out
xor
stos
push
rclb
repnz
scas
aas
xchg
push
stos
sbbl
rdmsr
ljmp
push
and
test
mov
jle
push
pop
mov
add
sub
mov
popa
cmp
in
enter
sbb
sbb
mov
push
sahf
cs
sub
call
cwtl
xor
cmp
int
fdivrs
std
and
mov
or
mov
push
mov
mov
sbb
les
xchg
sbb
inc
es
jbe
add
test
xlat
or
pusha
int3
and
cltd
push
outsl
ds
mov
shr
mov
xchg
pusha
or
arpl
dec
ret
inc
lret
dec
mov
aaa
lahf
mov
mov
mov
mov
xor
stos
incl
lods
and
rorb
cmp
mov
aaa
pop
dec
lcall
dec
mov
jo
cld
repnz
inc
sti
movsb
movl
fs
add
setne
xor
pop
ja
push
lret
lahf
sti
mov
outsb
leave
fidivrl
add
dec
shlb
sbb
stos
jp
data16
mov
pop
mov
jne
inc
insb
add
dec
push
push
ret
adc
push
sub
test
sub
xchg
cmp
xor
lcall
ret
xchg
popa
mov
mov
arpl
imul
xchg
out
ret
xor
push
loop
and
into
leave
fisttpll
or
cmp
in
push
fisttpl
mov
popa
add
pushf
lds
daa
cltd
mov
loopne
out
pushf
jno
inc
inc
call
addb
xchg
pop
ss
cmpsl
xor
lock
xchg
xorb
lcall
push
lret
xor
xchg
sub
mov
divb
push
fsubrs
push
fisubs
loopne
dec
jp
sub
cmp
and
fsubrl
sub
xor
dec
inc
mov
or
ret
loopne
cld
scas
in
or
mov
cmp
fs
js
insb
dec
sub
rolb
xchg
jg
xchg
into
push
push
push
fbld
bound
push
lods
decl
add
sub
sbb
stc
sub
ret
ficompl
cmpsl
loopne
push
and
inc
ss
push
mov
js
and
icebp
jecxz
mov
xor
inc
clc
sub
aaa
cmp
testl
adc
loope
lahf
add
call
scas
jnp
scas
testl
push
or
ret
mov
insb
push
mov
jg
dec
sahf
ret
dec
inc
mov
pusha
jns
dec
test
popa
fs
inc
cmp
dec
mov
sub
cmpsl
divl
add
or
push
mov
pop
cmp
xor
jmp
hlt
mov
cmp
mov
sub
push
lcall
or
in
xor
out
cmp
sub
xor
xor
pop
lods
jbe
dec
mov
xor
test
sub
inc
and
xchg
aas
sbb
xchg
ja
cmpsl
movsb
mov
mov
push
outsb
push
pop
or
push
inc
in
in
ja
hlt
int3
mov
sti
pop
add
ja
push
or
call
aam
push
es
mov
and
scas
push
int3
cltd
bound
and
push
adc
dec
sub
cmc
test
push
mov
andl
pop
fiaddl
es
push
js
enter
lret
mov
lret
jp,pn
push
jg
mov
mov
jp
jmp
adc
pop
xchg
xor
insb
stos
adcb
lea
pop
mov
or
sbbl
daa
mov
mov
push
adc
mov
mov
adc
sbb
adc
inc
cli
fsubl
pop
cwtl
ficoml
mov
mov
es
lods
cmp
pop
mov
jo
xchg
sub
xor
mov
pusha
fs
dec
adc
les
rcll
or
xchg
mov
pop
js
movsl
aas
jl
xchg
ds
push
fcoml
mov
das
push
push
pop
test
je
roll
cli
mov
jb
mov
adc
js
cmp
test
mov
mov
pusha
gs
mov
aad
sub
ds
cmp
mov
addr16
sub
pop
pop
dec
lret
test
mov
popa
cmp
fdiv
mov
into
adc
add
cmp
xchg
mov
sbb
sti
sbb
mov
cmp
sub
outsb
dec
mov
frstor
es
xor
imul
xor
pop
add
mov
xchg
cmpsb
jae
add
leave
insb
stc
jnp
jb
adc
js
cmp
inc
add
push
das
lret
int
stos
jo
or
enter
fistl
pushf
test
cmp
xor
jnp
sahf
cmp
jb
iret
repz
ss
dec
mov
pop
and
jno
scas
sub
dec
dec
scas
hlt
fmul
mov
mov
popa
mov
sbb
test
pop
sti
ret
add
test
jecxz
and
insl
out
jl
pop
aas
aam
es
orb
cmpsl
cmp
lcall
lcall
fwait
std
or
adcl
mov
add
inc
inc
inc
in
rorl
mov
pop
ljmp
and
xchg
mov
cmp
inc
stos
jp
mov
pop
add
jge
and
stos
out
imul
and
xlat
popa
push
xchg
lea
test
mov
add
lret
imul
imul
and
call
pop
js
ljmp
dec
mov
negl
push
push
inc
adc
add
out
xchg
lahf
imul
cld
loopne
jne
push
mov
xchg
jp
cmc
push
out
push
mov
xchg
in
gs
cmc
stc
sbb
test
ss
dec
popa
movsb
aaa
jmp
in
jne
fwait
add
test
mov
push
adc
mov
adc
fadds
dec
orb
inc
dec
rcrb
dec
in
int
push
jbe
je
inc
cmpsl
inc
loopne
pop
in
push
sub
subb
mov
and
insb
add
sub
repz
jmp
popf
jae
imull
or
pop
inc
add
testb
sub
popf
pop
sbb
cmp
mov
xor
pop
int
and
and
mov
out
decl
outsl
pop
icebp
ljmp
imul
das
xor
repz
idivb
jp
repz
mov
jp
int
jmp
inc
adc
inc
adc
mov
add
inc
data16
inc
insb
out
sbb
leave
dec
cmp
mov
divb
push
dec
lret
mov
and
daa
ljmp
out
stos
push
into
lods
mov
xchg
mov
sub
mov
pop
call
jl
aas
jl
fldcw
cwtl
pop
data16
lret
sbb
cmp
imul
jle
adc
insl
sub
sbb
sub
mov
in
cmp
jns
mov
ret
push
cli
aaa
cmpsb
push
jo
inc
xor
out
sarl
fwait
enter
mov
and
xchg
es
imulb
mov
sbb
cli
and
movsl
cmpsb
test
mov
push
es
pop
sbb
loope
out
gs
push
inc
fldcw
scas
dec
fisttpll
dec
neg
int
xor
imul
mov
fldcw
pop
xchg
call
inc
inc
cmpsl
sub
out
or
pop
addr16
push
cmp
mov
out
imul
sbb
int3
add
cmc
pop
sbb
pushl
push
inc
in
ret
mov
popf
push
sbbb
aad
ss
dec
in
repz
inc
lods
addr16
leave
jns
clc
ss
jg
push
incb
enter
popa
sahf
pop
and
or
jns
xchg
jne
insl
les
js
mov
aad
divl
shlb
fisttpl
lods
jno
call
and
pop
push
sti
inc
dec
les
fcmovnbe
sub
mov
sahf
pushf
jp
stc
sahf
movl
or
data16
or
cmp
aaa
loop
inc
arpl
xchg
cs
int
out
sti
leave
sub
fcmovu
cmp
inc
adc
enter
das
xorb
cmp
imul
jb
gs
orb
cld
xlat
sbb
adc
push
arpl
rorl
loop
cmp
fnstenv
cwtl
into
cmc
sbb
movsl
sub
jge
lahf
clc
inc
and
pop
cmp
cld
inc
scas
aaa
xor
faddp
cmp
test
scas
loopne
cmovs
cmp
stc
or
adc
pop
push
call
jne
mov
push
addr16
cmp
or
cmc
sub
push
or
and
mov
test
add
jbe
aaa
fsubl
pop
into
or
mov
mov
sarl
cs
and
pop
xor
push
xor
and
xchg
add
fiaddl
imul
pop
mov
xchg
shl
hlt
dec
jl
dec
sbb
loop
repz
sbb
daa
xlat
adc
in
js
gs
loop
lods
daa
or
inc
in
mov
mov
jno
and
push
lret
shll
dec
aas
std
cltd
test
mov
rcr
outsl
xor
bound
push
pusha
mov
testl
xchg
mov
mov
popf
adc
xchg
rcrb
jb
in
popa
xor
push
arpl
outsb
dec
inc
mov
inc
fimull
push
lds
sub
xchg
inc
xor
das
and
cmp
iret
lahf
sar
xchg
mov
lret
aad
add
stos
mull
and
jae
mov
cmpsb
add
int
jbe
inc
lret
pushf
xchg
mov
adc
lret
clc
popa
cmp
xor
dec
ss
push
add
jp
out
sti
jge
int3
mov
push
jo
loopne
imul
mov
fadds
push
int
xor
push
pop
les
js
add
mov
xchg
adc
push
mov
mov
stc
push
nop
cli
adcb
xlat
popf
xor
fstl
stos
scas
xor
aaa
mov
jb
movsl
sahf
clc
scas
push
lahf
sbbb
mov
fcoms
stos
and
cmpsl
idiv
jno
add
pop
aad
pop
test
icebp
insl
sub
and
ds
mov
xchg
add
test
popa
fstpt
jmp
cmp
imul
pop
push
insl
sti
mov
stos
ftst
icebp
sbb
cmp
aas
cli
shlb
fiadds
dec
stos
pop
cmp
and
stos
mov
std
push
lds
push
mov
sub
hlt
fsubrp
test
int3
and
xor
push
outsl
xchg
xor
sbb
add
loope
ror
mov
sbb
add
or
hlt
xor
lock
xchg
fldcw
pop
es
scas
add
fwait
pop
push
fcomip
scas
les
jge
cmp
ds
pop
push
mov
sbb
ss
ficompl
loope
pop
ljmp
xorb
push
cwtl
mov
sub
lock
out
adc
pop
sbb
mov
dec
pop
push
mov
lret
xchg
inc
ljmp
ret
mov
addb
mov
xor
cmpsb
lret
rorb
dec
xor
ret
movsl
mov
pop
std
cmp
sbb
mov
xchg
lcall
xor
imul
xor
pop
stos
or
add
cmp
xchg
cs
aaa
loopne
adc
stos
jbe
std
cltd
jb
in
fstpt
movsb
pop
rolb
mov
cmp
daa
inc
fimuls
mov
pusha
xchg
test
mov
xor
outsb
call
push
xchg
dec
imul
pop
jecxz
in
shll
inc
aad
movsb
loopne
pop
out
mov
or
icebp
scas
ds
rorb
push
int3
jp
ljmp
dec
shlb
mov
dec
nop
insb
icebp
pop
mov
and
icebp
scas
mov
mov
addb
cmp
mov
test
mov
or
fisttpl
xchg
lds
push
insb
push
outsb
shlb
les
mov
or
xor
xlat
repz
jae
mov
insb
lds
mov
mov
adc
imul
sbb
in
scas
add
test
sbb
hlt
loop
mov
lods
push
lock
fs
adc
mov
add
movsb
ja
fisubs
pop
into
adc
roll
aas
adc
push
push
lock
inc
adc
data16
mov
and
push
push
sub
js
cmpsl
sahf
inc
fcmovu
xor
outsl
loope
and
xor
fnsave
addr16
pop
leave
adc
or
add
mov
inc
xlat
daa
sbb
rclb
add
sbb
xchg
ret
pusha
addl
int
and
icebp
push
pop
nop
dec
push
adc
push
shll
cmp
pop
sbb
notl
mov
test
pop
in
fcoms
and
je
xor
xor
mov
mov
enter
jl
addr16
leave
cmovne
add
decl
dec
jmp
xchg
dec
pop
sahf
mov
mov
out
cmpsl
pop
mov
int3
lds
inc
xor
adc
sub
fsubs
push
add
jge
cmp
out
pop
nopl
sbbb
xor
aaa
adc
xor
cltd
jle
adc
push
shlb
insb
and
add
les
xor
dec
sbb
enter
enter
bound
sub
dec
es
les
xor
pop
or
pop
stc
mov
sbb
add
adc
out
mov
cmp
and
rorl
subl
xchg
jae
imul
xchg
aaa
in
jne
shlb
push
lds
enter
xchg
iret
jle
push
hlt
and
add
mov
pop
iret
mov
jns
mov
stc
fwait
sub
lret
and
pushf
fsubl
jno
pop
mov
ja
ret
jnp
or
xchg
cwtl
jb
int3
push
fldl
mov
sbb
adc
mov
push
or
adc
iret
sbb
cmp
js
insl
das
arpl
mov
jmp
lahf
ja
mov
adc
sub
push
mov
pop
cmp
jne
pop
scas
pusha
jb
inc
push
or
fisttpl
cmp
inc
xor
cwtl
cmp
es
pop
and
xor
rcll
pop
xchg
int
add
pop
aam
lock
cmpsl
repnz
or
xor
and
xchg
pop
stos
psubd
scas
mov
jecxz
into
mov
call
in
stc
and
into
scas
mov
outsb
out
stc
ja
cli
jo
ljmp
adc
inc
push
sarb
and
sarb
imul
fcoml
mov
movsl
inc
dec
xchg
inc
jns
add
ds
pushf
xchg
push
sbb
in
stos
inc
and
addr16
test
js
repz
test
mov
psraw
sbb
div
and
popa
dec
cld
bound
cmpl
and
or
add
test
loope
push
ss
or
sub
movb
sub
jmp
leave
cmpb
adc
test
test
dec
push
xchg
addl
movsb
xchg
pop
xchg
lahf
or
movsb
insb
jnp
dec
xor
push
pop
push
popf
out
cmp
lds
jecxz
popf
aas
jmp
loop
cmpsl
push
mov
int
and
fidivrs
dec
bound
mov
adc
mov
cmp
dec
test
aam
out
inc
shll
adc
push
jb
mov
sub
cmp
fdivl
adc
pop
push
js
out
call
dec
or
and
roll
fisttps
sub
fst
xchg
arpl
sbb
repz
push
gs
jp
cli
cmp
pop
cmp
xchg
rol
cmpb
pop
cmp
and
dec
outsl
shrl
mov
push
jo
fdivl
in
fldcw
xor
pop
mov
fwait
xchg
jg
push
or
sar
std
mov
sub
rorl
loope
cld
sbb
mov
jmp
ficoml
push
rcll
outsb
xchg
insl
insb
imul
popf
dec
rcl
test
mov
dec
xor
xchg
sub
push
sub
fwait
cmpsb
mov
mov
xchg
fidivs
mov
xor
push
rol
pop
jae
movsb
cwtl
lcall
mov
int
leave
inc
push
cmp
pop
pop
movsb
inc
out
aad
shrl
ljmp
lea
xchg
ja
repnz
mov
jo
scas
adc
push
into
cmpsb
mov
out
cmp
clc
adc
jae
sub
dec
mov
scas
bound
adc
adc
add
or
hlt
in
andb
stos
rorl
mov
es
xchg
outsb
jl
rcrl
sahf
daa
jp
add
fildll
mov
cmpl
fmuls
test
movsl
xor
push
mov
pop
push
or
sub
xor
mov
out
sub
xchg
cs
dec
aad
adc
pop
idiv
dec
pop
pushf
clc
xor
imul
pop
inc
out
push
inc
or
push
mov
pop
pop
std
ret
mov
or
lcall
mov
rorl
dec
loope
adc
insl
inc
cli
push
stos
aaa
xchg
cmpsb
shll
jne
mov
mov
pop
mov
mov
adc
iret
test
outsl
dec
imul
call
loopne
es
inc
rcr
xchg
adc
insl
subl
or
add
movsl
loop
pop
dec
mov
jnp
sarb
push
or
sbb
nop
inc
sbb
jmp
or
xchg
push
pusha
push
addr16
bound
lahf
stos
inc
ljmp
clc
stc
int3
nop
xor
pop
in
js
push
testb
xchg
sub
mov
inc
xchg
and
xchg
xchg
aad
mov
mov
sbb
jle
xor
enter
xor
lds
mov
mov
jmp
loop
int3
ja
rcrb
pop
ljmp
imul
test
cmpsl
adc
aad
loopne
pushf
push
xchg
enter
push
jae
inc
fisttps
xchg
cli
jl
push
mov
ds
cmp
ficoms
sub
std
enter
inc
sbb
mov
sub
pop
out
add
fiaddl
subb
daa
dec
fiaddl
mov
ljmp
mov
push
adc
xor
lods
pop
xor
ja
enter
adc
pop
or
repnz
imul
popa
movsb
xchg
pop
adc
fmull
loope
lods
stos
xor
mov
mov
jmp
test
shlb
inc
mov
push
dec
dec
sbb
out
mov
xor
into
data16
mov
mov
dec
mov
pushf
sub
dec
mov
leave
lea
or
testl
push
jno
fdivrs
loope
lcall
fisubrl
test
rcrl
jns
add
xchg
sahf
test
add
mov
xor
out
icebp
addr16
dec
aas
insl
and
dec
stos
add
aam
dec
dec
and
loopne
mov
mov
or
dec
movsl
int
pop
retw
mov
xlat
push
test
test
inc
sarb
movsl
test
es
aas
push
pushf
push
stc
int3
xchg
idivb
push
pop
scas
out
outsl
adc
loope
repz
add
lahf
cltd
lret
push
adc
cmpsb
add
call
fimull
ret
jecxz
int
jmp
insl
add
fsubl
add
lds
aaa
das
shrl
pusha
fnsave
and
and
fdivl
and
xor
fistpll
fdivp
cmp
and
sbb
and
jno
shll
mov
ret
push
icebp
adc
xchg
ss
or
pop
pop
in
mov
pop
adcl
pusha
in
out
and
fsts
jge
dec
movb
push
jno
mov
lret
dec
cmc
add
and
sub
mov
dec
fs
cmpsl
leave
ret
iret
dec
arpl
scas
or
push
mov
stos
xchg
daa
icebp
adc
cmp
loope
fidivrs
jmp
ljmp
lods
xor
subl
or
int3
and
fs
inc
pop
js
push
into
dec
stos
cmpsb
mov
fwait
and
imul
mov
xchg
cs
mov
cmc
aas
scas
pop
pop
repnz
mov
fwait
shrb
xor
mov
rolb
push
dec
cmp
mov
lock
repnz
push
insb
lock
push
or
add
jae
and
and
in
inc
out
sarb
popf
fnsave
into
mov
mov
rcll
dec
sbb
adc
inc
in
lods
jno
mov
test
test
stos
dec
loope
mov
push
mov
xor
mov
mov
popf
mov
js
xor
mov
lods
inc
mov
mov
sbb
inc
xor
mov
fwait
int3
in
adc
test
push
sub
test
movsl
add
and
subl
pop
sbb
sbb
lods
inc
outsb
push
mov
jmp
push
out
or
xor
add
imul
scas
jno
std
jno
xchg
cld
inc
mov
cmc
mov
inc
rol
jle
mov
out
imull
mov
pop
subl
dec
fiaddl
hlt
lahf
dec
rclb
leave
popa
test
add
add
pop
add
sahf
mov
or
sbb
mov
cmpb
mov
mov
rdseed
push
add
int
cmp
int
add
mov
cltd
dec
jo
cmp
pop
xor
or
jl
das
cwtl
insb
xchg
mov
add
pop
fistl
push
adc
sub
lcall
sub
adc
adc
das
dec
stos
pop
ror
mov
xchg
sbb
pushf
mov
mov
dec
cltd
js
mov
stc
mov
inc
mov
sub
and
fldenv
inc
mov
cld
adc
sub
repnz
leave
fbld
cwtl
sub
std
inc
inc
ret
mov
mov
add
adc
call
sbb
mov
shrl
je
jl
sub
xlat
pushf
sub
cs
push
stos
dec
test
dec
daa
push
sbb
in
mov
mov
ret
cmp
vpshaw
movb
stc
lods
jg
adcl
int
push
fidivrl
and
xchg
out
sahf
jmp
jnp
cmp
out
and
insl
addr16
sbb
push
rcr
jmp
lea
xchg
push
pop
cmp
cmp
shll
scas
sub
xchg
xor
xchg
mov
or
ficomps
xchg
sub
mov
cwtl
xchg
pusha
mov
dec
repnz
bound
sub
les
fs
decb
mov
mov
aad
loopne
mov
hlt
jg
mov
adc
pop
lret
out
add
cmp
adc
pop
and
fs
jae
lock
push
or
xlat
mov
test
in
mov
mov
add
mov
xor
mov
lret
add
mov
sub
add
ror
mov
xchg
inc
mov
gs
add
loop
push
lods
mov
fwait
or
jecxz
jp
inc
mov
imul
mov
add
cmp
flds
adc
xchg
or
iret
ja
stos
call
lock
jne
inc
scas
push
lcall
inc
jne
notb
bound
pop
xchg
ror
adcl
dec
rcrb
bound
ds
rolb
insl
push
push
pop
fdivrl
outsb
mov
leave
lds
push
mov
xchg
mov
test
outsl
test
pop
mov
push
bound
jle
add
xchg
xor
mov
or
je
dec
xor
lods
ficoms
pop
and
nop
lock
push
xchg
dec
push
lea
cmp
scas
mov
jecxz
and
xchg
cwtl
xor
dec
push
or
fstpt
dec
movsb
sub
cld
mov
orl
pop
add
dec
and
dec
push
addr16
mov
xor
shlb
test
sbb
jle
inc
fildl
ficomps
cmp
and
jnp
in
or
and
push
mov
clc
cmpsl
movsb
inc
pop
pop
shr
mov
mov
xor
cltd
ja
in
mov
je
inc
add
les
mov
cld
inc
ljmp
or
ret
jl
cmp
es
mov
sub
dec
mov
mov
test
mov
pushf
mov
cmp
fcoml
pop
cltd
dec
pop
xchg
push
and
inc
push
jecxz
fcomi
sbb
sahf
into
sbb
fmuls
jle
jge
inc
push
out
fcmovu
cmp
fdivs
stos
insb
shrb
xor
aad
cmp
imulb
dec
jb
xor
cmp
or
mov
or
or
adc
push
push
sbb
cli
mov
sub
iret
jns
push
repnz
jbe
inc
out
das
mov
adcb
arpl
push
shrl
sahf
stc
test
mov
push
ret
mov
iret
imul
push
xchg
cld
fildl
sbb
lods
test
adc
ja
aad
inc
push
xor
pop
fcmovbe
and
ds
mov
mov
mov
fisttpl
bound
xchg
stc
cmp
push
fbld
stos
cmp
outsb
aaa
push
repnz
test
sbb
cmp
fs
or
cmovs
jae
in
xchg
xchg
rol
les
int3
test
std
add
movl
hlt
call
outsb
pop
push
popf
xchg
clc
mov
mov
sub
in
out
fcompl
mov
pause
or
push
fnstsw
call
add
test
mov
fwait
push
mov
jnp
loop
sbb
add
mov
jp
cmpsl
mov
pop
cmpsl
jmp
outsl
mov
cwtl
xchg
out
or
inc
push
out
push
loop
mov
adc
cmp
jp
lods
or
mov
and
incb
movsl
mov
movsl
test
data16
sbb
aas
inc
pop
aas
insb
xchg
add
cmp
arpl
sub
dec
add
mov
out
clc
adc
dec
inc
inc
lret
fistps
pusha
fsubrs
arpl
cmp
andb
xor
mov
push
out
repz
xchg
or
imulb
into
enter
rclb
sarb
in
aas
enter
push
xchg
jp
imul
dec
cmp
cmpsb
fdiv
aaa
dec
dec
and
int
xor
pop
test
push
lret
or
inc
inc
adc
imul
js
inc
cmp
inc
loopne
dec
testb
js
push
mov
out
mov
out
data16
mov
xchg
cmp
mov
call
cmpsl
add
les
rcr
inc
shll
xor
std
aad
fcmovnbe
mov
sbb
roll
cmp
pop
out
inc
stos
negb
dec
leave
add
inc
loopne
push
mov
cmp
test
movsl
jb
loop
mov
adc
jae
test
insb
add
int
adc
out
data16
xor
test
inc
fstpl
add
inc
and
push
mov
in
dec
ja
insb
icebp
mov
test
sub
push
cld
pop
out
icebp
push
jo
adc
xorb
fptan
ret
ds
dec
dec
cmp
stc
popa
pop
jg
pop
inc
xchg
les
movl
ja
xchg
sbb
xchg
out
repz
nop
mov
pusha
push
and
data16
and
mov
and
mov
add
scas
add
xchg
sub
jne
gs
pop
in
xchg
xor
pop
fldl2e
dec
shr
je
sub
adc
test
pop
cli
outsb
inc
mov
je
lds
out
mov
fsubrl
sub
das
lods
jecxz
lret
lret
push
test
in
loop
out
fucom
movsl
mov
push
and
jnp
cmc
lods
shlb
cwtl
cmp
inc
les
jp
leave
adc
sbb
lock
clc
test
lcall
mov
jle
dec
push
adc
or
mov
mov
sub
xchg
into
jae
xor
add
ljmp
mov
mov
jp
dec
jl
mov
aad
dec
mov
dec
xlat
adc
mov
ja
push
or
dec
pop
ret
push
pop
cld
loop
stos
pop
out
inc
sub
pusha
push
mov
xchg
int
mov
sbb
dec
xlat
jge
leave
push
sbb
movsb
stc
dec
enter
pop
mov
push
push
cmpsl
sub
cmp
mov
mov
xchg
pushf
sub
sar
jo
xor
ljmp
jne
bound
sahf
movsl
jb
adc
in
aam
mov
fistpll
mov
xchg
scas
test
andb
aaa
and
jno
adc
cwtl
stos
inc
jl
ljmp
dec
je
push
xor
inc
popf
hlt
lock
jns
cltd
and
xor
push
lock
bsr
push
dec
test
sbb
and
mov
pop
mov
fadd
dec
fists
add
nop
jge
sbb
push
push
sub
dec
leave
mov
jg
pop
arpl
insb
mov
mov
jl
xchg
in
xlat
sub
sbbb
or
pop
test
cld
jnp
jp
insl
sub
ds
movsb
bound
movsb
sarb
fld
ficoms
addr16
pop
out
stos
call
mov
cmp
sub
dec
sub
insb
int3
test
sub
jae
xchg
rcr
enter
hlt
int3
sub
imul
xor
jmp
push
test
jmp
xchg
jns
push
cmp
push
mov
clc
sbb
jmp
jnp
leave
in
out
lea
xchg
pop
inc
stc
sub
xchg
mov
loope
daa
jle
jno
xchg
test
push
cmpsl
add
aaa
jmp
sahf
push
insb
hlt
sub
inc
mov
sbb
lods
movaps
xor
jb
push
dec
insl
outsb
stc
iret
xchg
adc
fldcw
in
aad
fmulp
aas
xchg
addr16
sbb
mov
mov
shll
sbb
and
lret
and
in
and
or
outsb
push
data16
jecxz
iret
es
rcrb
cld
pop
mov
adc
jl
lock
test
push
xchg
pushf
mov
pop
mov
pop
inc
fistpll
outsl
mov
outsl
and
stos
orb
iret
jae
popa
ja
inc
in
push
mov
push
sub
sti
mov
in
jg
xor
sbb
out
sbb
lea
adc
stc
push
in
fwait
or
call
or
pop
loopne
or
leave
mov
sbb
push
mov
jecxz
dec
push
sbb
mov
icebp
push
and
sub
push
dec
out
cwtl
ret
add
incb
mov
push
xor
mov
mov
and
cwtl
fidivs
jb
out
inc
pop
push
cmp
dec
inc
test
shlb
jb
pop
jmp
add
or
push
arpl
sbb
mov
mov
mov
sub
icebp
repnz
push
cs
sub
dec
test
test
int3
cmp
push
repnz
mov
sbb
out
cmp
mov
mov
sbb
mov
mov
pop
loop
xchg
xor
xchg
add
sbb
xor
es
pop
std
xor
not
sbb
in
xchg
push
call
mov
loopne
outsl
mov
pop
adc
fstl
pop
cmp
cmp
call
cmp
inc
negb
movsl
sbb
shl
pushf
cmpsb
push
pop
das
test
jl
fwait
xor
add
ja
mov
push
test
leave
push
adc
xlat
jecxz
jge
in
int3
rcrb
add
mov
mov
jnp
std
push
lods
popf
rcrb
loop
scas
inc
dec
pop
xchg
inc
repz
adc
fiadds
ret
pop
xchg
xchg
ret
outsb
inc
adc
aas
jle
dec
dec
mov
pop
imulb
out
stos
icebp
mov
pop
inc
lods
push
sub
cmc
inc
adc
imul
hlt
in
les
sub
test
jbe
push
jmp
lods
lahf
dec
mov
outsl
jnp
lret
fsubrl
jmp
fcoml
leave
lret
jo
inc
add
mov
jl
push
test
pop
xor
xchg
pop
add
ficoml
add
jle
cmp
in
mov
xchg
cli
lcall
pop
lods
sti
cmp
mov
xor
test
rcl
shll
addl
sbb
fbstp
dec
jo
mov
mov
arpl
sbb
xchg
mov
nop
jl
xchg
inc
shrl
xchg
cmp
fsts
add
inc
cli
push
sub
xor
sarb
xchg
push
out
mov
xor
push
push
pop
pushf
xchg
jne
insb
fistps
ret
or
xor
mov
mov
lods
mov
cmp
xchg
adc
lods
pop
and
icebp
add
iret
sti
dec
fmull
cld
clc
nop
rcll
add
scas
jae
mov
clc
icebp
adc
in
jns
fsubrp
add
out
push
add
cltd
push
jb
fldenv
jg
sub
rorb
nop
test
push
iret
jl
xor
addb
hlt
pop
ja
insl
movb
sbb
mov
cmp
and
adc
jae
fs
sbb
mov
insl
xor
sbb
stos
insl
pushl
add
inc
xchg
frstor
add
mov
imul
aam
pushf
sahf
loope
dec
mov
xor
stos
icebp
pushl
lret
cli
and
aad
test
pop
cld
call
in
push
aaa
addr16
loope
jge
jb
dec
xchg
inc
dec
sub
insb
out
mov
je
cmpl
inc
push
lods
imul
shlb
dec
mov
lods
stos
aaa
in
push
adc
or
sbb
test
fcmovbe
mov
arpl
popa
test
aaa
out
and
pop
push
inc
fistl
mov
in
mov
insl
push
jl
push
or
in
push
pop
xlat
enter
hlt
outsb
mov
push
in
nop
test
inc
fnstsw
sub
ss
gs
dec
sbb
or
jno
loop
test
iret
pop
adc
xchg
int3
stos
cmc
push
out
dec
jb
mov
fistpll
pop
sbb
or
pop
fists
xchg
lods
mov
call
push
je
mov
pop
decb
dec
ljmp
ret
xchg
sub
out
cmp
or
fisttps
push
stos
push
test
cmc
pop
jbe
and
jl
insb
mov
data16
push
add
inc
mov
out
mov
daa
fnstcw
inc
mov
adc
cld
sub
fs
inc
cltd
jb
mov
mov
inc
enter
outsb
or
mov
push
xchg
sub
mov
xor
enter
push
sub
cltd
cltd
je
inc
or
lods
sbb
xchg
daa
mov
mov
addb
scas
or
sbb
sbb
sbb
mov
xor
cmp
xchg
lock
dec
add
adc
and
sbb
jae
inc
push
cmp
pop
pop
xchg
fdivs
sub
inc
push
cmpsb
xchg
scas
aas
jbe
stos
lret
pop
lock
push
outsb
outsb
mov
lret
pop
lret
xor
cld
sti
jle
sub
push
lcall
sbbb
ss
out
inc
xchg
add
mov
xchg
sub
push
aas
add
int
or
sbb
in
or
lea
jo
lea
aam
mov
lcall
add
adc
std
bound
in
testl
sub
cmp
add
fwait
mov
js
mov
xchg
dec
out
stos
dec
sub
sbb
shrb
sbb
push
mov
gs
cmp
xor
jne
sbb
mov
inc
lcall
mov
mov
dec
das
cmp
xor
iret
movsl
xchg
and
inc
lods
inc
mov
pop
cmp
jmp
mov
mov
ds
dec
roll
mov
mov
mov
push
mov
mull
cmp
mov
or
mov
xchg
mov
jo
jmp
addr16
mov
lock
icebp
fwait
pop
mov
fisttpll
and
das
xlat
or
cmpsb
mov
and
xchg
xchg
imul
mov
mov
test
inc
aas
loope
inc
aas
xchg
mov
rol
iret
cmpsl
push
addl
mov
daa
out
popf
or
dec
cmp
mov
xchg
pop
jo
and
pusha
push
lds
jecxz
mov
pop
js
inc
xor
mov
adc
jg
scas
mov
sti
cmp
loope
stos
inc
push
rcrl
sbb
and
xchg
loopne
repnz
sub
std
psubq
cmp
sbb
dec
test
mov
jg
xchg
xchg
daa
adc
stc
mov
in
outsb
sbb
dec
scas
inc
imul
in
mov
and
push
xchg
sbb
and
js
cmp
push
xor
xor
repnz
xchg
dec
insl
ds
push
lret
daa
mov
adc
push
xorl
sbb
mov
test
sahf
std
enter
aam
mov
dec
shrb
mov
sub
loop
popa
setle
push
sub
cli
mov
out
fcompl
pusha
pop
test
fs
or
dec
push
test
out
cmp
or
add
mov
mov
inc
lods
pop
push
mov
lret
jnp
dec
mov
inc
rcll
fs
jnp
inc
xchg
pop
push
pop
cltd
lret
or
fiaddl
cmp
test
dec
lret
cli
inc
fisubs
cmp
xchg
mov
cmp
xchg
cwtl
shlb
push
imul
adcb
repnz
es
inc
mov
mov
inc
addr16
imul
add
rcrb
loopne
jge
pusha
adc
xor
and
lods
or
mov
pop
sub
in
aas
lock
xor
push
cmp
out
std
mov
in
jbe
mov
vmovss
push
mov
lahf
push
iret
cli
fs
pop
hlt
bound
push
cmp
dec
sub
push
cli
sub
or
pop
push
cmp
xor
dec
test
xchg
pop
mov
insl
xchg
scas
and
mov
mov
mov
mov
das
push
dec
je
and
or
mov
into
aam
popa
es
xchg
insb
popf
int
decl
or
test
dec
ljmp
pop
daa
jns
mov
xchg
jmp
loope
push
mov
roll
enter
sbb
mov
jbe
dec
idiv
or
aaa
xchg
or
jno
sbb
pop
sbb
pop
in
cs
push
mov
or
push
xchg
int
push
ja
aam
test
or
xchg
push
xor
clc
lea
pusha
loope
loope
pop
pop
pop
xchg
jns
adc
pop
mov
daa
lret
adc
inc
sub
cmp
das
push
xchg
inc
or
ror
aaa
aam
sub
cmp
xchg
jecxz
cmc
xor
xchg
mov
or
inc
jmp
adc
out
xchg
in
add
cmp
cmp
cmpsb
ret
push
orl
sub
mov
xchg
pop
ret
ja
mov
jmp
arpl
push
aad
mov
lret
cmp
xor
mov
mov
arpl
into
fs
aas
jecxz
jno
sbbl
inc
je
pop
mov
clc
movsl
roll
scas
pop
lods
aaa
or
out
mov
dec
out
mov
ret
arpl
decb
cmc
adc
and
pop
call
mov
fsubrl
push
add
in
push
pushf
stos
dec
sbb
movb
mov
jno
xchg
ret
sbb
ret
mov
movl
dec
aas
outsb
repnz
mov
arpl
mov
dec
cmp
pop
ret
movhps
aam
xor
pop
or
outsb
dec
in
xchg
popf
enter
scas
testb
mov
test
aaa
jp
in
setp
je
jge
sub
xlat
ja
xor
inc
sub
sub
push
and
lret
mov
ret
in
leave
cmp
mov
mov
push
addb
sbb
jmp
call
shlb
sti
enter
and
in
lahf
fadds
scas
xorl
fistps
jns
or
mov
notb
xor
fdivrl
mov
mov
cwtl
lods
push
test
jle
in
mov
jne
or
or
mov
push
dec
mov
fisubrl
sub
mov
jno
push
mov
or
stos
sbb
testb
xchg
and
xor
jp
cmp
cli
lahf
adc
pop
inc
out
ds
enter
in
inc
aas
dec
mov
bound
jecxz
mov
enter
jl
mov
test
cmp
push
sarl
aad
orl
ja
xchg
pop
jne
dec
sub
xchg
jns
pusha
bound
mov
sbb
mov
add
jo
popf
aam
cmp
fildll
pusha
dec
decl
mov
ljmp
push
bound
shlb
inc
jb
lret
jae
test
bound
mov
aas
pop
adc
cmp
pop
mov
je
es
adc
mov
mov
mov
sub
out
dec
repnz
xor
push
and
shll
bound
fildll
pop
rclb
outsb
sub
lret
mov
mov
push
mov
mov
lret
lds
cmp
xor
inc
int3
scas
lock
rorl
lea
pop
pop
or
mov
test
jmp
jge
sbb
nop
xor
jl
outsb
movsb
mov
shrb
and
popf
loopne
fnstcw
mov
pop
pop
ret
loope
stos
xor
fidivrl
cmp
icebp
push
push
sbb
push
lea
and
xor
int3
adc
pusha
mov
repz
cwtl
xchg
popa
push
or
repz
pop
gs
gs
movsb
lea
cmp
iret
sbb
jnp
mov
sti
jecxz
repz
fwait
adc
xor
out
mov
sahf
jg
push
xor
mov
or
loop
sbb
jae
and
fdivr
in
sub
jno
fcmovne
sti
rcr
roll
punpcklbw
je
jge
daa
mov
jg
nop
push
sti
sub
xchg
push
adc
fs
or
fcoms
sbb
ja
mov
adc
movsb
xchg
jns
outsl
scas
lods
roll
mov
and
sbb
xor
cmp
movsb
clc
jnp
or
imul
daa
popw
and
out
frstor
push
cmp
sub
call
loopne
sbb
fstps
sub
mov
xchg
loope
xchg
js
rcl
int3
cmpsb
cmp
xchg
es
xchg
mov
cltd
cltd
adc
push
jg
cmp
sbb
repz
jg
lahf
shlb
mov
sub
out
out
lahf
mov
fistpl
xor
pop
adc
xlat
fidivl
dec
pmulhuw
lea
xlat
out
js
cltd
adc
sub
addl
mov
icebp
sub
mov
pop
jno
inc
and
int
pop
fcmovu
ja
popf
inc
nop
dec
dec
out
mov
pop
int
fistps
xor
jne
jno
in
cmp
ja
dec
ss
push
in
mov
pop
add
push
mov
xor
sbb
sbb
iret
out
lahf
add
lods
repnz
daa
jno
mov
jp
testl
inc
mov
aas
test
aam
inc
dec
dec
inc
iret
in
sub
and
cmp
inc
lahf
dec
jp
jecxz
insl
clc
int3
in
call
cmp
ljmp
in
fwait
mov
xchg
pop
int
leave
jge
out
add
inc
mov
jecxz
imul
sti
mov
cmp
sbb
popa
xchg
mov
push
and
pop
pusha
jmp
add
jg
pop
popf
dec
jne
xchg
xchg
jno
pop
loope
outsb
stc
int
add
sbb
pop
sahf
js
lret
xchg
mov
mov
testl
jno
inc
into
add
pop
movsl
and
data16
dec
imul
jae
inc
mov
pop
popf
lahf
leave
sbb
in
cmpsl
cltd
pushf
mov
out
clc
dec
test
mov
mov
out
aad
sub
jns
idivb
sbb
shr
dec
dec
mov
mov
or
mov
pop
push
cli
fnstsw
and
jle
pop
xchg
or
out
and
cli
iret
lea
mov
negl
cltd
inc
shll
pop
dec
je
xor
push
cmp
fadds
jo
cmp
jle
fcmove
scas
mov
cltd
sub
fwait
ss
pop
pop
mov
xorb
btr
inc
movsl
ror
sahf
sbb
dec
in
jne
lret
popa
add
add
call
ljmp
leave
fwait
mov
addb
gs
or
mov
mov
in
pop
adc
or
rclb
shrl
out
xchg
inc
fwait
je
lods
xor
std
sbb
loop
mov
ficomps
cltd
int
ror
xor
outsl
mov
mov
xor
hlt
jns
sub
orl
adcl
mov
cmpl
mov
sub
pop
into
lds
dec
dec
lcall
pop
xchg
and
popf
jns
pop
inc
pop
jo
in
pop
sub
ja
mov
stc
xchg
insl
shl
inc
push
xchg
ja
inc
jb
js
jno
jecxz
ljmp
and
ljmp
push
mov
sbb
movsl
pop
jg
not
icebp
push
xlat
das
adc
test
cmp
smsw
testl
addr16
je
mov
dec
mov
int3
popf
sub
xor
adc
sbb
xchg
dec
adc
and
jae
repz
sub
popa
push
or
imul
test
mov
inc
fsts
mov
repz
xchg
inc
xchg
sub
mov
add
lods
sbb
mov
xchg
add
cwtl
loopne
lret
jmp
jecxz
mov
sub
ret
cmc
jnp
ss
jnp
imulb
mov
loope
jae
fisubrs
push
ret
test
subb
sbb
aad
mov
adc
jl
outsl
mov
adc
add
jo
pushf
je
movl
orb
in
mov
pop
lods
mov
dec
std
filds
sbb
jnp
rorl
mov
mov
cmp
or
call
cmpsl
mov
xchg
inc
mov
xchg
daa
adc
adc
add
inc
mov
adc
stos
and
sub
stc
jbe
push
jb
mov
into
add
repnz
rorl
jl
mov
sar
cwtl
pushf
inc
test
mov
mov
icebp
mov
dec
in
cmp
movsb
mov
and
sub
jae
add
xor
js
into
mov
pop
dec
sarb
xchg
lret
jl
or
dec
fnstcw
pusha
pop
jno
push
lcall
cs
lods
cmp
or
std
add
cmpsl
cmp
sbb
hlt
lret
mov
jge
xchg
mov
push
and
push
mov
mov
sub
es
xor
or
imul
rolb
insb
lods
mov
jno
scas
xchg
mov
xchg
adc
mov
xchg
mov
cmpsb
cmp
xchg
loope
out
dec
add
jg
lcall
add
inc
shlb
les
std
aad
add
push
fs
mulb
pushf
push
and
into
aaa
call
setp
test
cmp
bound
stc
out
mov
pop
cmpsb
cmp
int3
call
lods
xor
mov
jns
imul
clc
or
inc
cmp
adc
xor
cmpsl
in
outsl
fdiv
mov
xor
or
jnp
inc
andl
or
xchg
adc
out
inc
and
and
popf
scas
inc
hlt
rorl
imul
sbb
add
lods
sbbl
jg
gs
dec
loop
push
lahf
sbb
scas
ret
sbb
pop
add
or
gs
sti
popf
add
or
dec
lahf
xchg
sti
xchg
mov
pop
or
aaa
cld
xchg
cwtl
outsb
test
pusha
xor
fcomip
add
in
clc
pcmpgtw
jns
xchg
xchg
test
popf
dec
sbb
push
test
xchg
xchg
cld
xor
sub
in
or
test
adc
sub
cmpsl
sub
or
adc
lods
fcmovnu
insw
or
and
scas
inc
jae
pop
mov
popa
sub
inc
push
mov
dec
sub
lods
pop
mov
out
jae
and
fwait
lds
push
adc
into
mov
int
adc
adc
stos
sub
es
push
cltd
push
popf
jl
mov
pop
and
mov
or
aas
sbb
add
mov
mov
movsl
xchg
add
jecxz
sarl
lret
leave
or
inc
push
xchg
pop
ret
insb
pop
jns
mov
dec
sti
sti
pop
out
insl
je
fstps
lret
scas
mov
xor
push
lock
add
mov
cli
stos
add
pop
mov
push
repnz
test
das
adc
pop
dec
scas
outsb
movsl
sbb
jae
pop
loop
mov
push
pop
fildl
fwait
push
insb
or
dec
mov
pop
mov
push
and
pusha
mov
push
ja
pop
pushf
in
in
adcb
sbb
aas
cmpb
icebp
out
andb
fadds
cmp
adc
add
lcall
cmpb
cld
sbb
pop
aaa
imul
cld
subb
cltd
and
and
mov
xchg
add
sub
adc
dec
or
ljmp
ret
add
cmp
icebp
sub
xchg
call
subl
jge
scas
cli
mov
push
mov
pop
fwait
mov
lret
push
stos
jnp
xor
jp
add
mov
fistl
add
mov
sbb
mov
fldl
leave
adcl
dec
adc
out
push
cli
lcall
sub
push
in
mov
or
lret
aam
fidivrl
mov
add
mov
cwtl
por
dec
xchg
scas
adcl
dec
xor
jns
ret
sbb
lds
mov
sbb
jle
xchg
cmp
test
push
sarl
mov
div
pop
pop
ja
xorb
mov
es
sub
ds
inc
lods
cmc
pop
sub
mov
jecxz
popa
mov
stc
fstl
outsl
add
ja
push
inc
lret
and
mov
sub
cltd
xor
subb
aaa
and
and
jmp
sub
leave
sahf
mov
aad
lea
lahf
add
push
jnp
loop
push
xchg
push
mov
bound
mov
xor
call
sbb
xchg
inc
out
pushf
scas
mov
mov
pop
loop
mov
out
cltd
aaa
mov
lock
xor
stc
and
sahf
call
sbb
cwtl
jl
mov
and
das
scas
call
pop
adc
sbb
vpaddusb
imul
or
mov
lock
pop
pop
xchg
dec
jg
imul
dec
je
push
sbb
out
ret
sub
shl
and
cltd
cmp
push
icebp
stc
cltd
inc
popa
je
push
movsb
les
and
aaa
mov
ja
dec
sub
xchg
or
aad
cmp
mov
adcl
rcll
xchg
and
pop
pop
cwtl
dec
xlat
mov
outsb
scas
loop
adc
mov
push
cmpsl
pop
or
mov
push
lods
es
testb
xchg
iret
lret
sbb
mov
inc
xor
cmp
mov
or
adc
dec
notl
adc
sub
ds
mov
sti
fucom
mov
mov
push
or
repz
roll
int3
pop
jae,pt
mulb
imul
adc
cmp
mov
ds
icebp
pop
dec
mov
sub
jae
push
js
scas
je
test
push
jbe
mov
imul
and
or
scas
incb
inc
pop
scas
in
inc
repnz
jne
mov
jbe
cmp
sbb
mov
scas
js
in
jne
mov
lds
ljmp
lods
jne
add
sbb
inc
add
fstl
adc
dec
pop
gs
call
rcrl
rcll
aam
or
out
aaa
xor
add
mov
ret
and
aaa
ljmp
xchg
fcoml
pop
pop
int3
call
adc
push
arpl
in
std
add
fcomip
out
xor
test
pop
loop
lret
jl
rol
lds
sbb
xchg
mov
pusha
js
in
cltd
add
aad
repz
push
cmp
loope
sbb
pop
push
shll
cmp
in
mov
nop
notl
fnstsw
jecxz
mov
mov
pop
repnz
push
sbb
daa
mov
cmc
push
je
mov
mov
xchg
inc
xor
sub
adc
fwait
mov
xor
shrl
jne
ljmp
add
mov
in
pop
shr
leave
sub
fsubr
jge
push
notb
lods
lret
into
movsb
aas
data16
leave
sub
mov
call
or
subb
push
pop
iret
loop
jmp
jge
adc
sbb
repnz
int3
dec
xor
mov
push
ret
daa
mov
cmp
test
ret
cmp
pop
test
jo
lods
inc
pop
movsb
add
stos
in
or
outsb
xchg
cmp
xchg
sub
out
jle
pushf
mov
inc
cwtl
shll
adc
dec
call
add
imul
mov
repz
aaa
mov
jo
mov
jbe
add
cmpsb
shrb
dec
out
fsts
scas
cmp
addr16
jb
fildll
fcoms
ds
out
fwait
push
pushf
sahf
cwtl
xor
incl
cmpsb
xor
js
and
and
cmp
inc
xor
mov
xlat
cmp
mov
cmp
scas
push
ret
cmp
les
xor
dec
scas
insb
in
mov
adc
xchg
or
rclb
movsb
roll
add
xchg
add
xchg
adc
rcrl
enter
jns
xchg
lret
or
rcrb
adc
rorb
fsubs
stos
mov
cld
cmp
lret
jecxz
sbbb
orb
test
dec
daa
aad
test
out
push
fdivp
rol
xchg
test
pop
daa
pop
in
pop
fbstp
aaa
xchg
popl
or
mov
lds
movsl
lds
and
inc
adc
mov
popa
stc
and
xchg
fdivl
inc
sti
and
sahf
fnstsw
jge
sbb
mov
stos
mov
push
out
cltd
cmp
shlb
jne
dec
cmc
adc
sbb
adc
xchg
stc
sbb
jbe
into
push
sahf
ljmp
inc
aaa
pop
aam
ds
dec
aad
dec
in
mov
mov
sbb
imul
test
dec
shrl
fldenv
movsb
push
and
add
lret
mov
fildl
fisttpll
sbbl
cli
jnp
jp
sub
dec
or
sub
ss
add
push
push
xchg
jo
jmp
sbb
test
dec
ljmp
lret
mov
cli
dec
fwait
adc
push
inc
and
test
mov
and
sbb
loop
pop
push
jno
loope
scas
and
dec
outsb
in
cmp
hlt
pushf
mov
es
data16
lret
lock
xor
mov
pushf
lods
jmp
jecxz
into
in
sbb
nop
jb
push
mov
dec
xchg
lods
fs
xchg
add
add
jbe
incb
xor
dec
xchg
ljmp
scas
pushf
or
test
pop
addr16
shlb
insl
cmp
xor
xor
sub
add
orb
test
js
fldcw
les
pop
ss
and
push
arpl
mov
test
stos
out
sub
cltd
sbb
mov
int
iret
sti
insl
sub
or
movb
sti
adc
into
loop
and
adc
jl
movsl
mov
inc
scas
out
jb
xchg
test
pop
mov
mov
pop
mov
cmc
push
adc
sbb
call
push
dec
subl
jbe
xchg
sbb
das
lea
lahf
iret
scas
loope
mov
lret
lods
cmpl
xor
cli
fisttpll
ret
dec
mov
and
bound
addl
daa
sarl
push
std
inc
sbb
mov
rorl
fisttpl
mov
jae
xchg
repnz
popa
adc
push
stc
jl
aam
fists
lcall
cmpsb
call
inc
sbb
push
dec
pop
test
insb
xchg
addr16
movsb
jp
xchg
std
jg
pop
mov
fwait
dec
testb
std
xchg
sbb
cmp
stos
or
pushf
xor
xchg
or
inc
je
mov
mov
mov
add
iret
in
push
push
aad
dec
mov
dec
xchg
inc
sbb
lods
rorl
pop
int
dec
nop
shlb
and
shl
movsb
add
inc
sub
lds
fmul
xchg
fs
dec
mov
sahf
adc
pop
xchg
xchg
mov
fstpt
and
int3
ficomps
sbb
scas
bswap
pop
bound
mov
jp
aas
dec
out
orl
stos
adc
ljmp
and
dec
mov
jmp
pop
addr16
mov
mov
xor
filds
xchg
loopne
add
add
decb
mov
jo
add
add
inc
or
adc
mov
js
xor
jnp
mov
jmp
imul
stos
mov
cld
mov
push
sbb
push
cltd
xor
shlb
push
push
dec
or
xor
shll
mov
mov
cs
pusha
fldcw
arpl
pop
sbb
adc
sub
mov
shl
fsubrl
and
cmp
nop
hlt
xchg
add
iret
jl
mov
lret
test
push
in
push
sub
add
pop
aas
cmp
test
or
popl
test
imul
mov
fmull
add
int
or
or
cmp
nop
dec
xor
jbe
insl
adc
sti
daa
por
test
aam
add
jb
mov
sbb
ds
imul
and
ret
ja
ret
adc
push
mov
jb
xlat
cmpl
cmpsb
dec
xorb
pop
xor
sub
movsl
and
pusha
dec
aas
jge
cmp
adc
inc
jne
fcoms
aad
shll
dec
hlt
outsb
jmp
cmp
mov
mov
outsb
adc
test
aad
mov
inc
xchg
jo
push
push
dec
mov
cmp
adc
mov
jle
and
dec
jmp
cmpsl
xchg
inc
mov
inc
fmuls
out
mov
fnstcw
outsl
dec
jge
mov
jge
xchg
outsb
xor
cmp
testb
js
adc
inc
orb
adc
and
cmp
inc
mov
jle
and
das
add
push
sub
cmp
cmp
push
inc
adc
inc
imull
mov
test
fsubp
aaa
pop
repz
or
mov
xchg
aam
adc
dec
ja,pt
push
int
add
xchg
ss
idivb
lock
push
xor
std
pop
jne
add
pop
mov
lods
ljmp
sarl
push
lret
ljmp
lods
add
jecxz
adc
dec
scas
mulb
cmp
mov
inc
lret
push
out
jo
ret
test
fs
imul
jg
aaa
fisttps
push
pop
int3
pop
loope
and
addl
or
stc
or
test
inc
jae
push
pop
inc
test
jns
push
punpcklwd
mov
pop
dec
push
icebp
jecxz
addl
cmp
movsl
push
add
ss
and
jae
test
test
ficomps
pop
inc
sbb
xchg
fisubs
cmpsl
aam
sbb
xorb
je
inc
sub
jge
negl
and
in
xor
inc
xor
fdivl
shlb
or
mov
cmp
and
and
movsb
and
jne
testl
push
setb
add
jns
loope
and
pop
xchg
jg
mov
stc
subl
roll
movsb
arpl
push
add
mov
sub
mov
sti
fisttps
mov
mov
inc
jecxz
add
testl
sarb
sub
mov
adc
mov
shll
movsb
xchg
and
jp
mov
pop
push
xchg
xor
mov
je
pop
ror
ror
mov
ficomps
mov
das
xchg
ja
fsub
jo
call
loopne
rclb
sbb
movsl
shll
mov
fcomip
sti
lock
sar
mov
xchg
inc
jne
mov
sarb
mov
xchg
faddl
jbe
xor
or
xor
inc
push
div
pop
or
cwtl
daa
es
xchg
rcrb
push
xlat
mov
sbb
and
and
cwtl
adc
dec
inc
and
in
mov
lcall
rorl
pop
pop
jmp
adc
adc
inc
mov
and
ret
mov
add
push
dec
ret
pop
loope
inc
sub
or
jl
push
enter
rcr
sbb
adc
xor
fistl
arpl
lods
pop
pusha
cmc
and
clc
out
fs
push
out
push
cmpb
test
lret
push
jge
jo
stos
imul
dec
cmp
jbe
pusha
int3
pushf
mov
mov
in
xchg
loop
test
push
shl
in
mov
scas
lods
inc
clc
lret
mov
xor
xchg
outsb
ficompl
ds
mov
das
repz
aam
ss
mov
outsb
or
pop
rcl
lcall
ljmp
push
popf
das
scas
push
lret
push
jl
add
xchg
fcoms
fdiv
add
outsl
push
aas
cmpsb
cmpsb
dec
dec
leave
jbe
andl
int3
jge
gs
sub
push
addb
stos
scas
cmp
sub
sub
xor
out
push
fadd
add
adc
jb
std
inc
into
scas
xchg
sahf
or
jp
sub
cmp
bound
jge
or
dec
lds
mov
leave
out
inc
movsb
cmp
xchg
or
mov
clc
fs
xchg
shrl
aad
sbbl
xchg
inc
int3
out
aad
jns
stos
aas
push
addr16
sbb
cs
je
pop
arpl
cli
push
xor
dec
jb
push
les
sbb
sub
and
fwait
popf
loopne
repnz
xor
lret
jl
addr16
pop
pop
dec
push
mov
cmp
gs
sarb
inc
or
mov
xchg
hlt
shl
lret
fidivrs
add
stos
stc
or
ss
lods
movsl
data16
inc
add
test
dec
jp
punpckhbw
sub
jg
int3
mov
scas
pop
jne
dec
cmp
xor
leave
adc
fwait
into
in
dec
dec
repnz
mov
out
adc
ud0
sub
in
inc
ljmp
pop
mov
data16
dec
and
or
ss
fsubrp
fsubrp
fsubp
in
push
jl
lods
sbb
das
lcall
push
cmp
or
lahf
in
mov
out
cmp
mov
scas
mov
hlt
pop
scas
jbe
stos
aaa
dec
pop
or
rcrl
mov
cmpsb
fidivs
pop
xchg
test
lea
sarb
pop
ds
cmp
add
out
pop
dec
jmp
xchg
in
pop
rsm
xor
xlat
xchg
add
and
stc
pop
fidivrl
and
jp
pop
inc
mov
mov
clc
cmp
stc
hlt
sbb
sar
out
xlat
push
lret
fistpl
stc
or
and
stos
inc
fadds
frstor
hlt
test
pop
pushf
add
pop
mov
pop
cmp
xchg
or
lods
nop
mov
cmpsl
push
test
enter
rol
mov
popa
repnz
mov
mov
pop
jge
jae
addr16
hlt
out
pop
push
push
shll
rcl
jg
xor
ljmp
test
push
cmp
dec
mov
sti
aaa
cltd
jno
xchg
xchg
add
or
daa
nop
repz
repnz
cmc
xchg
xlat
jle
mov
sub
sbb
push
xor
into
mov
inc
lods
pushf
cmp
out
idiv
outsb
jno
push
xchg
daa
jge
xor
lds
int
push
ret
imul
cmp
call
dec
pop
sahf
xor
inc
orb
mov
sar
jl
cli
imul
lcall
jne
test
pop
sbb
arpl
fnstcw
jne
mov
filds
inc
xor
and
mov
fistpll
xor
movsl
sti
aas
sbb
mov
cmpsl
or
rcll
sbb
xor
mov
dec
jmp
into
jl
add
sub
push
das
test
enter
fidivl
fldl
or
cmp
or
lods
adc
pop
lahf
pop
scas
test
sti
test
push
push
pop
shll
cltd
in
pusha
dec
shrb
loop
and
fwait
mov
fisubs
jecxz
add
fwait
mov
shl
sub
mov
ja
jp
mov
mov
cwtl
lcall
cmp
jb
sbb
inc
or
add
fnsave
mov
nop
and
je
ljmp
sbb
js
mov
add
cli
movsl
sub
cmc
adc
or
dec
jmp
push
dec
imul
adc
adc
add
das
add
lods
jb
fnstenv
mov
insl
and
loope
fsub
jo
or
jns
loop
cwtl
dec
inc
adc
fwait
xor
cmp
xor
jne
scas
cmp
or
out
cmp
jo
test
push
jno
ja
leave
test
loopne
mov
adc
loopne
movsb
loopne
sub
sub
loope
adc
nop
out
lahf
mov
int
pop
mov
dec
mov
pop
sarb
cs
cs
dec
loopne
inc
inc
hlt
call
sbb
lods
mov
adc
inc
sub
imul
lret
fnstenv
pusha
repz
jmp
pop
mov
jecxz
or
push
sub
jns
lret
push
jp
in
add
shrb
lods
shrl
jle
cmpsb
test
pop
sbb
sahf
jns
std
sub
or
mov
mov
insl
sbb
xor
cld
inc
in
aam
call
dec
jg
outsl
pop
cmpsl
stos
push
add
jno
push
jge
scas
pusha
or
adc
add
sahf
in
adc
out
dec
test
imul
ds
aam
adc
icebp
adc
lea
mov
jge
jae
stc
outsb
and
dec
mov
mov
ss
mov
mov
or
xor
mov
cmp
cmp
stc
cmp
iret
mov
icebp
jne
jle
in
sti
sbb
jmp
enter
mov
mov
or
xorl
js
adc
and
mov
imul
ljmp
or
nop
pop
pop
push
xor
std
sbb
fimull
jno
push
mov
movsl
enter
xor
out
add
ret
lds
pop
ret
jmp
loope
mov
out
xchg
and
jno
mov
jbe
inc
and
aas
clc
and
add
pop
clc
jecxz
sbb
cmpl
popf
clc
mov
xchg
arpl
pop
mov
xchg
inc
lds
and
mov
adc
mov
movsl
xchg
sbb
test
push
cmpsb
clc
mov
testl
and
pop
or
and
pop
loopne
addl
pop
xchg
in
mov
or
jl
and
or
mov
movsl
push
sbb
pushf
das
or
aaa
into
xor
test
adc
adc
xchg
xchg
lock
push
lret
test
push
dec
xor
loop
jmp
xchg
stos
mov
cld
fsubrl
inc
sub
lea
or
sti
xchg
sub
mov
fisubs
pop
jno
int3
sti
icebp
push
je
pop
jns
fs
sub
or
outsl
ja
jge
pop
dec
xchg
push
pop
jo
in
cmp
mov
push
in
pushf
dec
pop
lods
or
std
jl
push
mov
xlat
outsb
cmpsb
popa
mov
mov
out
mov
pop
popa
stos
decl
adc
aas
inc
mov
enter
scas
ljmp
je
jae
sbb
xchg
mov
jmp
pop
adc
pop
cltd
out
or
and
dec
repz
in
mov
mov
aaa
mov
push
in
inc
ret
mov
adc
ljmp
lea
aam
lods
mov
arpl
ret
popf
xor
push
push
xchg
jge
jecxz
out
rcrb
cmpsl
insb
test
les
pop
push
mov
and
movsl
xor
and
pop
cmc
fwait
xor
psrad
push
ljmp
inc
int3
and
dec
repz
inc
pop
test
mov
sbb
js
sti
pushf
je
movsl
adc
popf
popf
sub
int
or
mov
xchg
cld
ret
xchg
jl
mov
test
pop
jge
cmpsl
pusha
cltd
in
push
push
push
sbb
push
xor
test
dec
cltd
addr16
inc
scas
jne
cld
inc
scas
inc
dec
rol
mov
imull
and
int3
jnp
pop
movsb
adc
xchg
sbb
daa
xchg
cwtl
rcrl
or
xchg
lods
jae
xchg
xor
mov
add
xor
xor
out
loop
mov
js
fsubrl
pop
pop
inc
int
negb
jae
mov
jle
sbb
push
mov
fwait
scas
xchg
ficompl
daa
mov
or
pop
fimull
xchg
out
lahf
pop
push
roll
pop
subb
je
and
xor
pop
cld
loope
cmpsl
les
jecxz
push
lods
push
xchg
inc
add
pusha
sbb
jnp
adc
xor
mov
push
rorl
xchg
subl
inc
jge
sub
xor
daa
out
jne
fs
ret
mov
fdiv
repz
js
inc
clc
dec
fisubrs
xor
out
filds
add
lea
mov
movsl
mov
mov
push
fld
aam
dec
jmp
daa
sub
cmc
sub
jb
inc
subb
dec
ret
orl
cmp
jmp
nop
insl
fwait
add
adc
and
in
out
lds
hlt
sbb
popa
scas
adc
out
inc
and
push
lods
cmpb
dec
lock
std
into
fldt
mov
mov
icebp
pop
xchg
popf
rol
fistpll
test
fcoms
sub
and
or
rclb
sub
jns
divb
lret
in
jnp
je
das
xchg
push
movsl
dec
mov
popa
sub
ss
mov
inc
idivb
repz
dec
mov
rcr
inc
rcrl
pop
adc
lods
gs
test
add
adc
sub
dec
sub
and
mov
dec
ds
mov
out
stc
xchg
mov
es
and
sbb
add
pop
pop
leave
jbe
jge
stc
cmp
test
xchg
adcl
pop
lea
add
dec
fidivrl
mov
cmc
mov
mov
jnp
cmp
shlb
pop
icebp
pop
jecxz
add
jecxz
sub
js
sbb
data16
shll
in
adc
lds
mov
add
inc
dec
imul
js
mov
cmpsb
insb
xchg
jge
jge
in
cltd
push
mov
xchg
cs
mov
insl
pop
mov
imul
out
sahf
mov
jno
cmpsl
cmpsl
fnstcw
inc
cmpsl
das
push
inc
add
xor
outsl
cltd
push
jg
pop
pushf
jnp
out
fs
sahf
lods
inc
cmp
inc
test
mov
outsl
xlat
fimull
inc
pop
insb
xchg
mov
mov
xor
mov
nop
js
jb
sub
incb
gs
cltd
adc
push
and
push
adc
hlt
sbb
in
sub
xchg
hlt
inc
pop
xchg
sub
mov
pop
mov
mov
jmp
movsl
and
test
xor
jae
sub
mov
pop
icebp
adc
jnp,pt
jl
test
and
adc
call
out
sbb
cmp
out
push
test
push
in
stos
lahf
std
rcl
cmp
dec
add
adc
insl
movsb
lods
inc
inc
ds
inc
daa
mov
inc
loope
es
push
xchg
mov
lcall
adc
inc
xchg
rcll
scas
jae
add
sub
xchg
xor
mov
inc
hlt
test
mov
sarb
inc
stc
stc
cmp
call
mov
mov
sti
call
pop
mov
and
cmp
popf
dec
leave
or
adc
push
pop
stc
mov
mov
inc
cld
daa
jae
test
jmp
mov
outsl
aaa
cmpsb
cvttps2pi
push
call
mov
push
fsubrl
mov
sub
and
out
mov
xor
jmp
push
mov
inc
pop
mov
aas
mov
fs
mov
call
out
fmul
push
lahf
scas
loop
movl
jmp
adc
pushl
pop
movsb
cld
sbbl
and
sbb
aad
xlat
sub
mov
cmp
jb
pop
pop
jle
xchg
mov
es
dec
std
es
push
add
imul
push
and
adc
imul
test
dec
sub
push
es
push
out
sbb
cmp
dec
les
dec
imull
fwait
push
addb
test
mov
or
mov
jnp
xchg
dec
pop
stos
repz
subl
dec
mov
cmp
pop
jbe
push
mov
jae
scas
jmp
and
nop
sbb
mov
xor
ds
aad
fistpl
sahf
add
stc
loope
pop
out
cli
and
cltd
jecxz
ret
sti
and
leave
mov
cmp
imul
sbb
shll
in
jecxz
insl
and
insl
es
inc
popa
cmp
jae
mov
lret
pop
mov
test
jbe
adc
jmp
pop
jmp
sti
xor
inc
scas
xchg
mov
out
popa
loope
out
js
mov
xor
mov
inc
push
lods
mov
xor
xor
push
mov
aad
pop
jb
or
out
push
inc
xlat
rol
lret
cmp
jno
xchg
and
mov
mov
out
xchg
cmpps
and
cmp
push
cwtl
roll
idivl
sub
mov
arpl
mov
add
js
mov
shrb
ja
nop
rolb
loopne
mov
xchg
pop
clc
lret
addl
cmp
pop
jns
aas
fidivs
rcrl
imul
stc
jno
fiaddl
cmp
mov
pop
push
pusha
popf
cmp
popa
sub
ds
sbb
lcall
jl
test
call
xor
dec
mov
fadds
jne
test
sub
jecxz
nop
inc
or
std
clc
test
clc
xchg
fwait
pop
mov
jp
repnz
mov
data16
cmp
mov
or
test
std
jne
hlt
jno
in
or
jle
pop
inc
cmp
sbb
mov
adcb
pop
aas
mov
dec
xor
out
loope
call
ds
insb
sar
inc
mov
mov
ficompl
je
push
int3
push
or
xor
xor
jbe
pop
aaa
xor
fimuls
nopl
shrb
dec
jne
mov
pop
xor
mov
and
sbb
cmp
imul
in
stos
out
inc
xchg
icebp
jmp
mov
xor
cmp
clc
pop
rclb
pop
dec
or
push
mov
cli
fs
xchg
mov
cmpsl
mov
scas
fstps
fnstsw
sbb
ret
cltd
jecxz
in
dec
push
icebp
push
push
cmpsb
inc
shlb
dec
movsl
dec
dec
fcompl
mov
push
lahf
cmp
sub
mov
mov
sbbl
jb
cltd
hlt
dec
jecxz
imul
in
pop
outsl
jnp
std
inc
mov
push
cmpsb
push
addr16
rcr
mov
daa
movsl
sbb
add
idivb
inc
or
in
add
adc
add
mov
fldt
pop
aam
mov
div
or
hlt
int
xchg
mov
mov
push
adc
lods
jbe
and
xor
mov
push
jl
je
adc
or
test
pop
mov
gs
jb
cmpsb
and
pop
fs
fcmovu
mov
repz
aas
push
sub
fucomp
cmp
mov
jb,pn
movsl
sti
push
cs
gs
xchg
or
shll
dec
and
in
std
mov
xchg
cmp
mov
cld
mov
mov
cmp
add
bound
sbb
stos
push
sti
dec
sub
jge
pusha
adc
xchg
push
cmpsl
jp
cmpsl
out
ja
repz
or
ds
out
fs
and
push
fsubr
mov
int3
movl
ds
sbb
mov
sub
push
adc
cld
jb
xchg
outsb
inc
lahf
jmp
int3
arpl
repnz
and
cmpsb
call
incl
sar
xchg
jbe
pusha
es
mov
sbb
ret
imul
push
push
decl
jecxz
cltd
jae
mul
or
pop
addr16
mov
rorl
push
scas
fisubrl
dec
ret
dec
add
and
in
in
mov
into
sbb
add
inc
xchg
loopne
push
outsb
xchg
push
popa
dec
and
xchg
cmp
and
leave
cmp
xchg
pop
imul
iret
repz
pop
add
add
push
insl
jle
mov
push
out
fstpl
mov
or
dec
fimull
add
xlat
jo
cltd
int3
popa
cmpsb
mov
sbb
imul
dec
xchg
cmp
and
loop
pop
mov
and
ret
cmpsl
aad
fldcw
iret
add
jne
jle
sub
mov
mov
jmp
fwait
sti
mov
stos
inc
movsl
cld
pop
inc
data16
xor
jl
cmp
xor
movsl
ret
jb
xor
arpl
mov
mov
cwtl
push
test
jo
loope
mov
int3
or
outsb
daa
or
stc
or
push
shlb
pop
out
pop
xchg
or
push
pop
mov
ret
and
ja
fmull
pusha
movsb
push
push
or
xchg
repnz
xlat
push
sub
gs
mov
sub
cmpsb
xchg
push
lods
sbb
nop
cltd
xchg
adc
ss
in
lret
dec
push
adc
mov
shrl
lea
rcr
mov
test
inc
push
push
mov
insl
inc
push
cmpsl
shlb
outsl
pusha
leave
unpckhps
lahf
jb
xchg
in
add
mov
xor
ret
mov
pop
js
and
mov
dec
pushf
jno
mov
fs
sbb
push
mov
inc
jmp
xchg
mov
in
daa
lea
in
imul
xor
sbb
push
ds
push
jmp
cwtl
lret
cmp
leave
sbb
std
pushf
or
pushf
xchg
popf
push
leave
pop
cmp
in
mov
adc
mov
bound
mov
inc
dec
shlb
add
int
leave
pop
xchg
aaa
push
fimull
repnz
push
cmp
jns
or
cmpsb
push
nop
sbb
clc
fwait
pusha
jmp
outsl
lods
mov
jl
roll
cli
cmp
popa
loop
dec
gs
loop
frstor
enter
jb
ja
loope
daa
leave
push
aaa
lods
adc
into
rcrb
test
fsubl
fdivr
xchg
lds
push
into
pop
dec
push
enter
sub
sbb
inc
aas
imull
lret
rclb
adcl
imul
cmc
rolb
or
mov
adc
cmp
push
lcall
test
cld
and
ja
into
xor
dec
sti
shlb
pop
or
xor
adc
xchg
cvtps2pd
sbb
popa
popf
xchg
jo
mov
shl
cli
mov
out
test
xchg
sbb
sbb
incb
arpl
in
lcall
cmp
test
in
push
jbe
push
jp
psraw
sbb
jae
mov
mov
aad
fld
sub
sti
cs
mov
imul
pop
sub
imul
push
test
mov
cmp
mov
jmp
mov
jge
lods
cs
xchg
pop
enter
scas
lods
mov
shl
jnp
call
pushf
inc
push
ds
or
lea
ds
mov
inc
and
pop
push
push
jl
jmp
aad
faddp
sub
mov
dec
jle
xchg
mov
cmpsl
pop
outsb
arpl
push
jg
scas
ret
mov
mov
jo
shll
jmp
rorb
hlt
out
mov
xchg
jmp
aaa
pusha
dec
les
sbb
fsubrs
iret
sub
popa
stos
adc
enter
mov
ljmp
sti
push
stos
andb
sbb
jp
icebp
lret
push
rolb
or
test
push
rcrb
cld
mov
sub
and
jbe
mov
pop
push
jnp
jg
inc
mov
cmpb
enter
sbb
push
aaa
adc
and
cmp
jbe
add
push
lret
or
fidivl
scas
pop
add
data16
push
movsl
div
fistpl
movsl
out
sbb
or
imull
xchg
imul
scas
sbb
ss
mov
cmp
int3
mov
hlt
add
arpl
lcall
push
adc
es
cld
inc
cli
sahf
inc
ret
outsb
sbb
shl
cmpl
and
ss
ret
xchg
sbb
pop
icebp
pop
stc
es
or
in
xchg
mov
mulb
aad
pop
lods
lds
loopne
movsb
sbb
inc
out
adc
out
rorb
sub
call
inc
loopne
mov
call
insl
xor
jae
mov
icebp
cmp
mov
imul
xor
pop
in
into
pop
add
loop
jge
add
stos
mov
and
fld
bound
cmp
dec
or
mov
fnsave
xorb
mulb
fdivl
adc
mov
outsb
mov
andb
cmpsl
nop
or
mov
bound
pop
out
jmp
sub
aam
sti
cmpsl
cmp
out
insb
enter
dec
test
movsb
pop
jmp
pop
inc
jle
jl
xor
movsl
and
xor
pop
movsl
push
cmp
gs
or
mov
scas
clc
pop
cmpsb
lcall
fisubl
mov
add
mov
mov
idiv
je
add
dec
test
loopne
hlt
lods
leave
sbb
ja
les
inc
push
and
push
xchg
push
insl
mov
and
inc
or
xlat
sahf
in
xchg
mov
adc
jns
push
push
add
lea
add
jle
aas
xchg
cmp
sbb
mov
icebp
shrl
lock
ret
xchg
jg
lds
cmpl
movsl
or
adc
int3
xchg
jne
addr16
fsubrl
clc
fcomps
in
and
mov
stc
fidivs
outsl
out
xor
or
jnp
add
into
or
jp
loopne
sbbb
sbbl
sarl
enter
sbb
xchg
cmc
out
cs
jp
jbe
lcall
mov
fldenv
mov
sub
pop
out
ret
ljmp
mov
xchg
std
movsl
movsl
int3
push
out
pop
fsubrs
adc
mov
bound
in
pusha
xor
mov
mov
imul
out
insl
pop
mov
add
push
subl
lahf
pushf
sbb
ret
notl
xor
dec
dec
mov
mov
inc
mull
push
aas
call
mov
adc
cmpb
dec
add
add
push
jo
mov
push
and
lock
lods
sti
add
in
adcb
data16
and
jb
arpl
orb
sbb
lea
pop
adc
pop
mov
test
pop
lods
movsl
insb
mov
bound
mov
lea
les
sub
repnz
jg
es
shl
push
or
das
in
xchg
movsl
push
roll
cmp
pop
jl
xor
push
add
or
push
pushf
bound
loop
push
and
pushf
leave
mov
ror
mov
cs
jns
sub
in
jl
inc
push
mov
cmp
jo
or
mov
pop
outsl
cli
and
movzbl
mov
lods
ret
sbb
ret
inc
aad
js
je
mov
pop
sub
pusha
icebp
mov
scas
out
cmpb
icebp
mov
mov
cmp
lahf
and
das
or
pandn
and
ficoms
adc
add
jmp
mov
jmp
movsb
ljmp
shrl
add
ljmp
mov
sarb
frstor
xor
aaa
in
mov
cld
xchg
push
icebp
or
inc
lahf
sarb
adc
pushl
inc
mov
std
lock
sub
lods
mov
add
nop
add
push
clc
or
jnp
xchg
je
loopne
movsb
mov
fs
out
jae
sti
cwtl
xchg
mov
inc
adc
push
mov
into
test
je
loopne
shlb
push
das
jge
sub
data16
shll
xor
mov
cmp
pop
and
test
insl
out
mov
or
int3
or
jmp
mov
int3
rcr
add
inc
adc
fiaddl
es
out
mov
in
xchg
shlb
push
insb
dec
adc
int
dec
mov
popa
inc
lock
push
lret
lea
or
xchg
imul
mov
daa
or
mov
fnstsw
adc
jmp
leave
sahf
jo
fwait
sti
ret
jp
test
decb
fcoms
jo
jbe
hlt
xchg
dec
mov
mov
mov
pop
jns
inc
lds
push
push
jge
push
mov
mov
loop
jnp
dec
sub
jb
jo
jae
mov
xor
xchg
scas
xor
mov
sarb
mov
into
int3
and
je
jns
fisubl
into
sub
inc
outsb
dec
sub
push
scas
mov
mov
mov
xchg
dec
dec
adc
cmp
movsl
iret
mov
ret
sub
xor
fcompl
mov
xchg
lret
test
popa
add
rorb
enter
or
or
ss
imul
in
add
ss
pop
jmp
mov
aas
adc
inc
sub
pop
cmp
xchg
movsb
mov
bound
push
sub
sub
fcom
pop
push
push
and
fcoml
mov
push
ss
ficompl
std
mov
add
dec
cld
xor
pop
addr16
xor
jg
jnp
pop
je
test
adcl
sbb
mov
sub
fmull
cld
out
test
mov
sbb
jp
xchg
xorl
mov
int
ds
ds
fdiv
xchg
jnp
adc
cs
std
int3
divb
xor
mov
rcll
je
mov
add
decl
ficompl
xor
xor
dec
das
jmp
push
push
test
lds
es
push
idivl
xchg
mov
call
push
enter
gs
out
in
gs
sub
out
jecxz
and
imul
inc
scas
jmp
jle
sbb
stc
sub
jmp
fdivl
xchg
hlt
addr16
lret
jmp
mov
lods
cld
jecxz
mov
mov
dec
cltd
in
ja
int
pop
mov
addr16
test
adc
mov
adc
ss
mov
fiadds
push
push
mov
mov
cld
cmp
jmp
sbb
fwait
addb
rclb
cmp
or
cmp
or
mov
frstor
insl
nop
cwtl
xor
js
clc
xchg
inc
and
mov
fisubrl
inc
iret
jl
lods
out
std
fldl
movsl
adc
mov
pop
fisubrs
xchg
jge
sub
mov
stos
ret
lret
cmc
movsb
add
and
test
cmp
std
hlt
test
bound
dec
pushf
push
lods
jmp
sbb
sub
inc
mov
sbb
lcall
and
jnp
xor
pop
jno
lods
xchg
xor
xchg
adc
jp
out
sbb
in
jp
add
jmp
leave
mov
jle
scas
pop
adc
mov
iret
sbb
rcrl
pop
mov
mov
dec
mov
xor
xor
mov
jnp
je
dec
pop
mov
xchg
test
add
shll
xchg
imul
gs
add
test
faddl
mov
jns
test
in
mov
push
sbb
jg
pop
pop
mov
mov
out
pop
pop
add
cmp
sub
xor
in
xor
and
xor
adcl
mov
sub
outsb
cs
push
xor
dec
fwait
xor
lcall
jns
out
in
xchg
cld
loop
in
out
movsb
inc
jnp
clc
clc
push
pop
add
out
movsb
test
loopne
pop
rcll
or
or
dec
jbe
stc
mov
ss
push
sub
lahf
rcrl
dec
arpl
mov
fs
cmp
test
dec
xor
cs
stc
xchg
pop
dec
push
and
pop
adc
mov
push
test
xchg
fldl
mov
push
aas
pop
out
data16
cmp
stos
sti
dec
lods
arpl
fstps
sbb
push
xor
test
out
into
ficoms
shll
ret
xor
outsb
xchg
cmp
cmp
fs
lock
mov
xor
push
mov
out
sub
cmp
mov
dec
dec
lret
inc
pushf
adc
push
xlat
xchg
dec
pop
ds
jo
pop
mov
jp
stos
adc
ret
stos
mov
adc
xchg
cmpsb
stc
xor
shlb
lahf
js
mov
imul
fiaddl
test
add
pavgw
or
mov
lock
imulb
cltd
lds
mov
rcrb
imul
cltd
push
es
adcl
push
mul
loopne
out
sbb
incl
xor
xor
mov
mov
cs
in
flds
loope
stos
mov
fimuls
mov
mov
mov
jb
std
insl
push
inc
mov
gs
inc
in
sub
daa
push
aaa
popw
and
jb
pop
inc
dec
imul
jns,pt
add
dec
push
das
inc
inc
pop
push
lock
mov
and
dec
jbe
ror
xor
push
inc
sbb
cmpl
movsl
mov
enter
push
add
jo
adc
sub
jne
loope
jb
xchg
bnd
lds
add
fiaddl
mov
or
insl
imul
insl
push
adc
loop
scas
mov
cmp
arpl
xchg
sbb
xchg
lods
pop
pop
lods
popf
cmp
aaa
js,pt
sarb
lahf
sub
aas
sbb
cmp
in
fsubrl
lcall
out
out
int3
inc
pop
es
jns
mov
scas
loop
and
push
mov
adc
jno
pop
xor
popa
adc
pop
inc
ret
or
testb
and
mov
cwtl
mov
pop
fiaddl
xorl
faddl
pop
movsb
jbe
lock
cs
cmpsb
fwait
out
mov
or
sbb
shlb
sub
les
jecxz
out
arpl
xchg
cwtl
dec
pop
mov
push
call
jae
mov
ficoms
and
and
pusha
in
add
lds
int3
pop
ds
out
sub
fs
arpl
cmp
cmp
lcall
dec
jbe
jno
stc
pop
xchg
sub
cmpb
outsl
inc
add
mov
push
ror
add
push
mov
loopne
insl
xor
or
xlat
mov
out
lods
jae
inc
imul
gs
movsbl
dec
pop
sub
dec
mov
fisttpl
scas
icebp
repz
xor
inc
jno
pop
aam
inc
and
mov
inc
dec
lods
xchg
pop
into
and
lods
fdivrs
jno
rorl
sarb
cmc
orb
pop
push
add
inc
pop
and
sub
xchg
cld
lods
jg
pop
add
and
subl
mov
rcrb
or
mov
jnp
mov
and
fs
dec
mov
sub
mov
ret
lcall
scas
or
cltd
gs
pop
xor
ret
out
in
fsubrl
in
push
push
test
push
adc
int3
xor
push
call
std
cmp
cmpsb
pinsrw
test
fwait
sahf
sti
jmp
and
daa
jbe
jo
fmull
mov
ds
fisubl
test
pop
jb
rcl
push
sbb
in
cmpsl
out
mov
nop
ss
lods
adc
pop
stos
divl
negl
aas
or
std
sbb
int3
or
lds
push
adcb
mov
adc
cli
mov
es
add
mov
fistpll
sbb
xchg
cmpsl
push
insb
jg
in
jo
into
inc
pop
push
and
dec
inc
sbb
cmp
push
rcl
xchg
jno
lahf
scas
inc
xor
pop
add
roll
jns
and
bound
mov
es
icebp
mov
outsl
test
sub
ja
mov
out
int
iret
lods
and
mov
push
aaa
or
icebp
jnp
mov
in
jge
sahf
mov
push
into
or
sub
pusha
daa
jmp
cmp
add
pusha
adc
repnz
mov
jecxz
jns
les
cmp
mov
fs
inc
into
neg
mov
lret
data16
dec
jg
push
pop
aam
sti
add
mov
jno
test
sub
mov
hlt
out
fstpl
or
cmpsl
cmp
mov
xor
mov
dec
pop
fld
stc
lock
test
xchg
leave
imul
mov
outsl
fsubrs
inc
xor
sub
mov
dec
test
loopne
and
mov
test
mov
popa
push
inc
int
sti
test
ja
inc
lea
std
xchg
xor
add
sub
sbb
fisttpl
dec
push
mov
cmpsl
push
rorb
or
cmp
and
dec
inc
sbb
fdivr
mov
xchg
call
and
mov
pop
lea
sub
xchg
daa
rolb
add
ljmp
aas
xlat
push
pop
pop
xlat
push
in
dec
mov
jmp
mov
pop
add
push
add
das
jns
out
outsb
sbb
push
cltd
pop
stc
lods
in
jno
xchg
sub
in
xor
inc
cli
lahf
imul
shll
repnz
jecxz
ret
imul
leave
push
cs
bound
mov
imulb
faddl
sub
loop
cmpl
nop
ss
call
cmp
push
inc
mov
lahf
mov
inc
addr16
xlat
sbb
outsb
adc
mov
push
jne
out
int
fcomps
sub
pop
in
fbld
pop
cmp
stc
push
out
pushf
jl
leave
mov
add
iret
clc
cwtl
out
cs
dec
popa
imull
movsl
or
push
xchg
xchg
out
cmpsb
subb
arpl
sub
inc
lea
push
cmc
jmp
leave
mov
in
mov
fwait
add
sub
push
push
int
lret
clc
and
loopne
dec
mov
push
les
stos
pop
test
xchg
and
cmc
mov
js
inc
mov
jg
popa
mov
test
dec
fisubrl
inc
shll
sti
mov
test
push
movsb
and
mov
ljmp
mov
pusha
shll
mov
notb
pop
mov
xchg
popa
sub
push
xlat
fwait
lcall
sbb
xchg
cltd
jb
fcmovne
and
adc
xchg
xor
mov
lcall
dec
test
and
xchg
lds
push
mov
fs
repz
mov
xor
outsl
fwait
jnp
xchg
push
stos
shll
pop
scas
pusha
out
adc
and
xor
popa
cwtl
out
lcall
adc
jae
ljmp
sub
imul
sbb
cltd
mov
cmp
pop
les
dec
mov
push
out
xabort
add
cmpsl
mov
mov
rol
outsb
push
shrl
daa
ss
lret
xchg
adc
dec
sub
leave
popf
or
notb
jo
test
cmpb
pop
sbb
sbb
in
and
test
fmulp
sub
aam
jno
mov
shlb
xchg
and
ljmp
cs
ds
mov
mov
ret
repz
inc
mov
xor
dec
loop
mov
test
mov
xchg
mov
dec
div
lahf
sub
push
mov
mov
jle
xchg
add
xchg
divl
fs
add
inc
push
mov
or
sbb
dec
dec
jl
ljmp
cltd
inc
push
mov
in
lcall
sub
sub
into
xchg
xchg
add
mov
shrl
fwait
push
jmp
pushf
or
inc
adc
fucomip
call
or
hlt
add
pushf
outsl
sub
cld
imul
add
ljmp
fstps
adc
hlt
dec
test
int3
cmpsl
xchg
je
mov
rorl
sbbb
fs
or
mov
mov
sub
jne
bound
adcl
xchg
add
jl
xchg
sahf
mov
xchg
jb
sbb
pusha
push
push
movsb
out
cmpsl
inc
jg
push
xchg
or
push
aad
mov
test
sub
push
add
add
addr16
fdivr
cmp
push
iret
dec
stc
mov
push
das
movsl
repz
pop
dec
es
mov
stos
lahf
mov
shl
pop
mov
dec
add
out
xlat
mov
nop
pop
jecxz
and
sub
dec
out
lret
xchg
push
arpl
stc
stos
push
sub
adc
stc
std
adcb
in
int
pop
and
pushf
aad
inc
xchg
icebp
adc
push
outsb
mov
fs
movl
mov
dec
data16
jb
or
and
jge
mov
inc
loope
and
popf
scas
outsl
or
mov
or
jl
lcall
ss
mov
dec
aaa
pop
pop
imul
std
sub
or
and
repnz
sbb
or
fcoml
repz
fildl
mov
inc
xchg
xchg
xchg
aas
mov
or
inc
adc
xchg
stc
mov
lods
pushf
dec
cmp
xchg
add
jnp
ljmp
pop
cwtl
fsubs
ret
jns
pop
divb
mov
jmp
jmp
movsl
mov
jl
or
cli
mov
sub
xlat
push
adc
test
cmp
or
sbb
mov
lret
mov
push
and
in
iret
int3
aas
das
xchg
adc
push
fwait
dec
aam
jno
pop
outsl
outsl
jno
repz
ja
fmul
mov
xchg
mov
mov
dec
ja
pop
out
jp
push
cmp
test
or
ret
ds
iret
fstps
mov
pop
std
push
lds
mov
ja
cmpsl
mov
push
mov
push
cmp
sahf
xchg
mov
cmp
add
sbb
ret
xchg
leave
jge
jno
ret
push
or
add
fwait
add
out
inc
je
mov
lods
push
stos
movq
mov
stc
into
lcall
jp
xchg
pushf
arpl
orl
cltd
cwtl
sbb
jns
cmc
lret
mov
jo
in
sti
mov
adc
int3
je
mov
push
icebp
sti
cwtl
loopne
cmp
xor
sub
push
int
cltd
imul
dec
ljmp
push
push
xchg
mov
cmc
bound
addr16
adc
jb
adc
mov
dec
sub
popa
xor
mov
gs
cmpsl
inc
jo
loop
mov
jno
cmp
inc
ja
xor
pop
fnstcw
push
add
or
push
sub
adc
xor
adc
adc
dec
and
lods
jne
push
cs
sub
jecxz
pop
lock
js
inc
ss
les
movsb
pop
mov
shlb
mov
lret
xor
adc
mov
imul
dec
faddl
mov
push
outsb
cmp
and
repnz
lods
add
or
stos
mov
xchg
and
mov
int
jge
out
or
mov
xchg
loope
or
xor
inc
fstpt
daa
mov
jmp
out
sub
or
add
sti
mov
jae
stos
sti
clc
cs
fstps
out
xchg
inc
adc
mov
dec
addb
mov
test
pop
and
sub
mov
mov
inc
dec
fmull
add
fcoml
popa
ss
mov
jne
cmp
icebp
cwtl
ja
and
popf
dec
scas
adc
inc
xor
sub
in
ds
pop
and
lds
cmp
jo
iret
mov
or
xchg
pushf
or
push
dec
sarb
divb
adc
fimuls
xchg
mull
push
and
test
adc
inc
ja
lods
and
dec
loopne
mov
lock
push
sub
std
mov
clc
enter
mov
cwtl
icebp
cmp
xlat
and
ror
call
popa
jge
dec
shlb
ficoms
pushf
insl
int3
and
inc
cld
pop
sbb
insb
push
jl
sbb
pop
out
add
mov
xchg
jae
xor
push
lock
shl
out
lea
pop
imull
and
sbb
rcrb
call
rcrl
shrb
inc
cmp
ds
insl
in
movb
addl
ret
pop
loopne
test
lcall
cmp
mov
sbb
dec
iret
cmp
shll
xchg
fstpt
lds
movsb
popa
into
inc
sbbb
mov
das
and
jmp
pop
add
ret
push
mov
adc
push
dec
mov
js
sub
inc
and
mov
fistpl
cli
fcmovb
in
add
pop
dec
push
mov
ja
vsubsd
inc
in
sbb
and
push
out
adc
std
test
popf
adc
sbb
mov
hlt
cli
lea
imul
test
scas
sbb
decl
xor
pop
adc
andb
call
pop
or
pusha
icebp
outsl
inc
push
ficomps
or
cld
aaa
adc
add
and
ror
faddl
xor
and
pop
ss
popa
dec
push
sub
cmp
mov
outsb
adc
or
enter
add
repz
mov
push
fcoml
push
mov
es
pop
jl
or
xchg
loope
test
jl
push
movsb
add
push
call
into
imul
pop
adc
mov
out
shll
int3
dec
out
or
jp
cltd
mov
jne
lcall
sahf
insb
popa
jb
push
std
out
lea
cmp
lahf
ja
stc
out
add
mov
adc
jle
xlat
int
jl
data16
pop
pop
cmpsl
mov
sbb
fldcw
ficoml
jae
add
sbb
lret
mov
gs
les
add
dec
push
pushf
dec
push
out
rclb
push
cs
ret
addr16
sbb
or
ret
movsl
sbb
scas
js
inc
inc
lods
test
test
xchg
mov
les
push
rorl
aam
mov
or
inc
lods
jbe
les
mov
mov
cld
pop
dec
cmp
ja
out
fs
std
dec
les
mov
jne
les
je
out
adc
xor
push
fnstcw
or
mov
dec
adc
stc
test
jg
sbb
movsb
mov
popa
popa
dec
enter
notb
cmp
xchg
lods
mov
scas
jne
jmp
jl
scas
repz
jp
mov
lock
mov
subl
adc
cmp
add
xchg
mov
inc
mov
mov
icebp
xor
ja
dec
pop
push
data16
test
ljmp
fistl
lret
lock
loope
in
les
and
fildll
fwait
xor
outsl
jp
notb
jbe
std
clc
mov
mov
mov
sub
cmp
or
pop
hlt
inc
adc
inc
lods
and
mov
iret
sarl
cwtl
xchg
jp
out
adc
sub
push
lods
add
je
data16
outsl
fsts
xor
ret
cmp
fwait
insl
add
dec
leave
rorb
loop
mov
cmp
add
and
inc
out
push
inc
mov
daa
lods
xchg
push
mov
pop
sub
xor
dec
jbe
insl
test
sub
xor
stos
in
push
adc
push
xchg
cmp
pusha
xor
fnstsw
js
add
sbb
repnz
xchg
movsl
jp
and
repnz
xor
test
jnp
aaa
adc
insl
mov
dec
add
dec
sbb
mov
fldt
les
psubusw
xor
mov
jp
shll
fsubr
adc
mov
xchg
mov
add
jnp
cmp
psubb
js
mov
pop
daa
icebp
jnp
mov
ffreep
xor
movsl
cli
ja
pop
fsubl
daa
push
enter
cmc
jl
fsubrs
dec
lret
or
in
icebp
jge
les
cmc
inc
ret
xchg
insl
xchg
pop
and
pop
cmp
ljmp
sbb
pusha
outsb
cmp
cs
mov
add
repz
outsb
orl
aas
aaa
popf
dec
imul
test
cwtl
mov
adc
cmpsb
mov
mov
leave
add
enter
mov
push
jae
popf
add
push
xchg
add
loope
xchg
jne
adc
inc
out
nop
frstor
stos
jbe
jb
add
repz
out
mov
out
in
sbb
cs
icebp
xchg
mov
in
lcall
and
mov
mov
aas
add
mov
scas
arpl
stos
int3
out
mov
or
loopne
shrb
int3
dec
int3
test
pop
in
or
lcall
test
and
into
adc
mov
mov
cs
push
andl
cmp
lock
sti
xor
icebp
push
lock
fldt
lods
dec
out
lret
push
ja
or
out
push
jno
adc
fimuls
sbb
jp
test
jb
xchg
repz
orb
inc
mov
outsb
loope
xchg
arpl
inc
push
pop
push
jge
cs
or
aad
inc
in
daa
pushf
out
mov
cmp
cli
pop
pop
nop
xor
enter
fisubl
icebp
fs
or
sub
adc
popf
cmpsl
test
subl
stos
sub
sbb
cmp
out
lret
push
lea
and
mov
jne
mov
push
add
xchg
xor
jb
test
jb
loop
add
inc
adc
pop
ss
pop
out
sub
shrb
mov
lds
repnz
pop
xchg
or
pop
gs
bound
or
dec
adc
das
ret
aad
inc
jnp
lds
or
ljmp
and
xchg
shrl
lcall
adc
stos
mov
cmpsl
adc
inc
jmp
sahf
jl
and
push
std
inc
fldl
out
loopne
adc
sbb
sub
dec
sbb
jg
or
or
faddl
add
cmp
lret
mov
js
addr16
loopne
insl
mov
pop
fsubrs
pop
scas
popa
in
cmc
cmpsb
or
gs
andb
mov
sar
or
es
bound
lret
mov
in
or
inc
cmpl
xchg
adc
ficompl
and
mov
cmp
pop
mov
loop
xor
fcmove
cld
lahf
jmp
mov
cs
ficoms
adc
or
fdivrs
adc
jmp
repnz
xchg
inc
shlb
and
jl
popa
push
lret
mov
pop
in
imul
and
sbb
cltd
roll
push
adc
push
sbb
je
xlat
ret
ja
test
imulb
pop
shrl
lods
jle
xor
sub
lea
aad
dec
dec
or
push
adc
shll
or
sbb
mov
cmp
insb
mov
jnp
outsl
cwtl
dec
lds
jns
cmpsb
scas
xor
adc
sub
cmp
mov
jle
cmp
lds
cltd
stc
es
mov
push
inc
mov
or
out
add
push
stos
sub
mov
sub
ljmp
push
push
insb
jns
test
push
shrl
clc
xchg
sbb
cli
xchg
test
imul
push
std
into
lret
jns
outsb
inc
sub
mov
sub
mov
daa
mov
sbb
decb
aad
mov
gs
aas
jge
subb
lds
ficoms
mov
xchg
xchg
xchg
jae
sbbb
adc
mov
imul
dec
shlb
jnp
cmp
xchg
mov
cmpsl
faddl
lcall
mov
subl
arpl
jmp
adc
stos
rcrb
mov
popf
cli
dec
cmp
mov
adc
in
sub
dec
and
dec
outsl
call
aam
jb
std
sub
enter
dec
sub
mov
stos
xchg
pop
in
adc
rclb
movsl
sahf
pop
push
sub
cmpb
js
xor
loop
inc
mov
fs
adc
ss
jnp
jnp
lahf
mov
int
inc
xchg
rolb
daa
xchg
sbb
adc
add
and
aad
aaa
pop
sbb
lock
pop
mov
aas
jb
daa
inc
cmpb
cmp
das
popf
fiaddl
fiadds
and
mov
push
movsl
lds
and
lods
cmp
cld
mov
mov
lret
sti
hlt
popa
xchg
fdivp
mov
fsubl
or
popa
fwait
mov
ljmp
xor
jge
out
mov
aaa
rep
insb
cld
pop
xchg
push
jne
das
jo
mov
fnstsw
popa
lahf
ficompl
sbb
inc
clc
and
fdivr
clc
adc
pop
push
imul
enter
and
pop
adc
or
cmp
xor
cmpsl
mov
xchg
mov
fimuls
add
ja
inc
loope
xchg
cltd
test
push
and
pop
cmpsb
imul
leave
inc
ret
mov
aad
popf
out
mov
mov
rcll
push
testl
or
jnp
mov
popl
jno
test
mov
xchg
jg
mov
pop
loope
rcrb
push
test
xor
rcrb
sahf
jge
mov
imul
filds
icebp
cmpsl
test
jg
fistpl
fmuls
push
fdivr
pop
and
or
scas
dec
xchg
in
popa
sub
std
lahf
jg
dec
adc
xor
test
jle
push
cli
movsl
js
xorb
fldcw
bound
lahf
dec
sub
arpl
jae
and
cmpl
int3
xchg
test
mov
out
xor
ftst
popf
pop
cmp
sbb
and
test
xor
cmpsl
jne
mov
push
cmp
add
jnp
cli
ds
pushl
dec
pop
gs
sti
int
cmpsb
and
invlpg
push
data16
dec
testb
fwait
dec
imul
or
leave
mov
stos
call
cmc
sub
mov
lret
pop
mov
mov
mov
js
in
scas
popa
pushf
sbb
lcall
int
push
pop
lds
fistpll
test
fldenv
pusha
scas
sahf
lea
sbb
mov
int
sbb
push
xor
push
subb
and
sub
popa
sahf
in
lods
cltd
lds
hlt
dec
repz
push
push
xlat
arpl
adc
xchg
stc
aad
jns
push
add
mov
add
pop
push
push
and
fucom
mov
or
jecxz
push
add
ret
test
cs
and
rcl
rclb
inc
adc
movsb
and
mov
cmpsl
lea
clc
push
stc
out
mov
add
sahf
aaa
add
and
pop
xchg
cmpsb
dec
xchg
mov
xor
pop
loop
std
es
call
mov
mov
dec
out
ja
mov
or
nop
cs
or
lret
sarl
loopne
scas
daa
iret
pop
mov
sti
enter
ret
pop
cwtl
mov
call
sub
rolb
ret
dec
inc
sub
shrb
jg
add
loopne
inc
pop
inc
mov
pop
leave
jmp
sarl
sub
addr16
xor
sti
adc
imul
push
test
add
mov
rcrl
adc
push
iret
nop
xchg
and
imul
xchg
aas
push
push
xor
sbb
outsl
hlt
mov
mov
mov
cmp
inc
notl
aaa
xchg
pusha
mov
adc
mov
xor
adc
das
and
pop
inc
pop
lds
xchg
xor
cld
in
ljmp
sbb
sbb
shlb
xlat
movsl
mov
cmp
mov
pushf
pop
lret
pop
or
mov
ljmp
hlt
rcll
jbe
add
aad
movsl
mov
out
ret
loopne
ret
lock
or
lahf
cmc
out
xlat
pop
add
inc
xchg
push
cmp
push
in
scas
inc
cwtl
jno
sbb
mov
stos
addr16
jge
add
mov
mov
xor
push
fdivr
out
jne
xchg
test
pop
or
in
mov
dec
xor
ss
sahf
adc
push
add
xchg
sub
lret
pop
xorl
fidivs
iret
lods
push
pop
leave
iret
mov
insl
fldenv
das
test
add
in
mov
repz
cmpsb
mov
rcll
sbb
push
pusha
pop
cmpsb
mov
or
aam
pop
icebp
movb
push
cmp
sbb
js
dec
lock
push
jge
jae
and
xchg
xchg
shl
imul
shl
and
das
out
popf
sbb
dec
ljmp
out
lods
add
mov
or
inc
ret
mov
xchg
lret
and
cwtl
in
out
pop
fiadds
call
and
stos
adc
popa
int3
add
push
stos
andb
les
jae
mov
clc
lock
push
shlb
adc
xor
out
mov
push
aad
insl
subb
mov
das
enter
mov
jae
and
xchg
jbe
data16
bnd
mov
inc
xchg
fcmovnbe
cmpsl
psllq
pop
mov
fdivr
adc
push
pop
or
add
xchg
mov
sub
dec
lock
sti
pop
shlb
lret
ss
fdivr
iret
insb
scas
mov
movsl
adc
popf
lea
loop
test
xchg
fwait
ss
mov
pop
push
loope
inc
mov
and
mov
cmpsl
sub
sub
sbb
sbb
add
add
xor
sbb
ret
scas
lcall
insl
pop
sub
xor
test
ret
sahf
sbbl
cmpsl
loop
cli
jecxz
arpl
popa
adc
repnz
mov
jge
in
push
jp
jne
mov
jo
xchg
out
inc
lret
mov
dec
lea
add
cmpsl
xchg
mov
imul
cmp
int3
push
movsb
cli
mov
fstl
and
mov
movsl
icebp
pop
inc
outsl
subl
xlat
cli
icebp
pop
pop
cli
lods
lods
cltd
and
xlat
mov
test
dec
or
sbb
adc
mov
ds
mov
xor
std
int
xchg
subb
or
ds
cmpsl
xor
sbb
ss
les
cmpsb
adc
dec
jnp
out
jmp
dec
pop
sahf
pop
repz
lret
add
jge
aad
outsl
xlat
sbb
std
push
push
mov
cmpsb
mov
lock
pop
mov
popa
addr16
ja
adc
dec
push
jp
mov
cmp
sub
cmp
adc
int
cmp
cmpsb
and
rcl
mov
cltd
mov
adc
pop
jne
mov
push
popf
std
orb
xchg
cld
jne
testl
pop
jg
mov
sub
hlt
aad
mov
xchg
test
fs
mov
adc
sub
mov
xor
push
movsb
push
mov
inc
fstps
mov
daa
adc
lods
add
out
jae
dec
pop
dec
shll
pop
push
pop
cmp
bound
mov
sahf
jg
cmp
mov
xchg
int
fwait
mov
mov
rcrb
jmp
aad
in
stos
inc
xchg
adc
ret
xchg
pusha
dec
xor
test
pushw
shrb
mov
dec
je
iret
lahf
sbb
das
cmpsb
jge
jb
out
lret
cwtl
int
mov
ds
imul
push
movsb
bound
repz
out
cmp
in
add
jno
mov
int3
lret
ljmp
lret
mov
aad
mov
jbe
and
jno
xchg
xor
cmp
fcomps
xchg
out
mov
pop
pop
sti
mov
push
movl
dec
mov
repz
and
add
lods
cmpsb
rolb
mov
lods
sarb
inc
pop
lods
jmp
pop
push
mov
or
orl
repz
vpsadbw
imul
add
and
data16
das
int
loop
and
incl
pop
loopne
sub
jns
jge
pop
test
fmul
sbb
pop
scas
and
mov
lods
jbe
mov
cmc
fldl
adc
das
dec
add
add
add
xor
imul
nop
mul
add
jne
mov
add
stos
push
enter
stos
int
fstpt
adc
cmp
cmpsl
or
pop
or
sarl
nop
ret
dec
stos
xor
mov
sub
or
cli
jp
test
jb
add
shll
ror
mov
leave
mov
mov
pushf
push
or
jg
sbb
push
shrb
jge
mov
add
nop
mov
push
push
pop
icebp
out
jge
pop
or
mov
popf
push
daa
addb
dec
adc
in
test
in
inc
sub
call
push
or
ret
sbb
faddl
test
addr16
jns
lret
popf
stos
stos
lret
lcall
dec
rcrl
add
and
rcrl
add
xor
js
pusha
adc
or
bound
xchg
xchg
jecxz
ror
jns
mov
adc
inc
repnz
jno
outsb
lea
sbb
scas
sbb
outsl
mov
nop
mov
mov
pop
pop
xorb
and
cmp
mov
shrb
inc
mov
aad
fstpt
mov
jle
jmp
and
and
fsubl
fcoml
adc
jg
xchg
sub
sbb
xchg
incb
adc
cmpsb
xchg
jp
adcb
jg
popa
or
aas
stos
outsl
insl
ja
lcall
adc
pop
test
outsb
mov
sbb
repnz
sti
sbbb
scas
rcl
and
pushf
pusha
push
test
leave
mov
ja
gs
push
adc
insl
inc
mov
sbb
ss
or
shrl
je
iret
inc
pop
dec
pop
or
repz
jp
imull
xchg
lret
pop
jp
mov
rcl
pop
arpl
test
xlat
lods
or
jb
out
mov
and
mov
insb
push
je
xchg
xchg
inc
jno
hlt
mov
in
insb
inc
mov
jns
ror
into
cmp
and
test
push
inc
mov
mov
lret
sub
test
sub
mov
clc
sub
fdecstp
cmp
orb
and
sbb
scas
cmp
xor
cmpsb
pop
push
imull
test
ficoml
push
aaa
data16
jge
fadd
dec
fcmovbe
cmp
aaa
xor
adc
push
or
pop
mov
into
xchg
out
sub
sahf
pop
mov
aad
push
jns
push
jb
push
jg
mov
in
push
xchg
imul
pop
mov
pop
cli
push
dec
push
mov
imul
mov
add
ljmp
cmp
mulb
clc
push
loopne
std
std
mov
add
mov
imul
dec
ret
ror
dec
adc
mov
jo
icebp
out
sub
cmp
jbe
cli
jl
add
out
cwtl
pop
stos
xor
icebp
dec
mov
leave
imul
mov
mov
test
fcoms
out
cli
sub
xor
add
and
mulb
shlb
dec
pusha
sarl
imul
xchg
or
cmpsl
jl
adc
push
hlt
daa
cli
out
leave
aaa
icebp
add
mov
or
sbb
dec
fmull
and
stos
xor
mov
shl
inc
cmpsl
push
enter
rclb
mov
push
mov
icebp
movsb
jg
adc
xchg
push
movsl
jge
inc
jge
jns
cs
pop
call
mov
xor
xor
test
out
mov
mov
push
stos
add
pop
mov
sub
cld
mov
jno
xor
sbb
std
jle
cmpsb
push
sub
clc
inc
jecxz
cmp
std
fwait
repnz
fidivrl
inc
ja
addr16
add
clc
rorb
bound
add
mov
mov
pop
adc
test
xlat
lret
or
and
mov
add
iret
push
out
popf
repz
cmp
jne
xlat
loopne
sbb
jmp
jbe
and
jg
ret
clc
es
rclb
mov
stos
dec
xchg
mov
mov
mov
addb
fst
inc
movsl
fxch
or
push
xchg
in
out
dec
adc
inc
dec
das
and
mov
orb
stos
mov
dec
lods
test
add
inc
push
jne
out
fwait
fwait
lcall
and
push
jnp
sub
pop
test
xchg
lock
jle
jge
popa
xchg
jo
jno
jo
addb
pop
adc
sub
ds
clc
mov
or
mov
bnd
cli
mov
push
or
adc
and
popa
mov
ljmp
sbb
add
push
test
mov
mov
cmp
add
push
hlt
sbb
shl
jne
push
pop
jle
js
dec
int
adc
ja
sahf
shr
imul
cmpsb
sub
sub
dec
add
mov
push
shlb
iret
mov
xchg
outsb
lea
or
xchg
cmc
scas
mov
pop
ja
push
dec
xor
jp
xor
nop
or
inc
pop
adc
in
and
adc
rcrl
mov
jae
adc
add
mov
rcr
fisubrl
mov
inc
sti
jg
push
loopne
xchg
cld
inc
in
bound
pop
push
jg
aad
lret
jmp
pop
mov
fistps
aad
subb
pop
inc
imul
xchg
add
sti
add
std
les
xchg
rolb
mulb
out
sahf
and
cltd
pop
pop
imul
leave
xcrypt-cfb
cmpsl
and
jle
out
jno
mov
mov
leave
and
jo
cmp
fisubrs
std
imul
ss
and
push
mov
add
and
sub
sti
ds
cmp
gs
xor
mov
aam
and
xor
out
mov
push
jae
scas
loope
inc
mull
jl
cmp
leave
add
cmp
loope
and
sbb
lea
jmp
aam
and
dec
sbb
add
jg
pop
call
mov
out
jmp
ficoms
loope
nop
dec
ss
cltd
jae
fnstcw
scas
dec
jmp
pop
jns
inc
das
xchg
lret
lret
mov
stos
jns
mov
jbe
sub
mov
mov
dec
mov
rorb
in
shlb
imul
mov
roll
addr16
fcoml
js
iret
divl
jae
rclb
mov
mov
arpl
out
sbb
xchg
notb
push
stos
aam
lret
sbb
add
ficomps
add
push
mov
xchg
cmpsb
sub
sti
loop
push
fwait
adc
add
sub
cmp
fnstsw
testl
lcall
add
into
nop
out
and
mov
daa
es
cltd
imul
push
loop
xor
ret
mov
outsb
adc
sub
fmul
negb
add
adc
fdivp
imul
sub
sub
xor
push
dec
cli
jg
fistl
cwtl
inc
scas
in
adc
add
ds
ds
pop
mov
inc
insl
mov
repnz
sub
xchg
sbbl
mov
pminub
mov
hlt
stos
fcoms
xchg
jbe
fs
sub
mov
rolb
shl
or
pop
jbe
dec
dec
pop
ret
cmp
into
add
out
popa
icebp
rclb
pop
adc
pushf
pop
mov
mov
mov
mov
mov
lahf
rolb
scas
lret
ret
sub
mov
shrl
cmp
inc
fiadds
jp
pop
and
or
mov
jae
fdivs
dec
add
cwtl
xchg
lcall
sub
addb
loopne
test
popf
mov
mov
pop
mov
loope
iret
lods
add
push
cli
jmp
xchg
xor
popf
ljmp
popa
in
inc
insl
adc
jae
mov
pushf
xchg
pop
mov
xchg
cmp
fisubrs
mov
sbb
push
mov
and
xchg
and
scas
popf
jecxz
sbb
aam
sbb
xor
mov
in
jo
xchg
ret
hlt
pop
lock
enter
inc
xor
into
scas
out
mov
or
push
insl
int3
cmp
fs
xlat
push
pusha
push
mov
cmpsb
inc
out
cmc
mov
mov
insb
mov
pop
and
test
sub
mov
mov
clc
fmull
aad
popf
mov
jge
jae
add
pusha
and
mov
in
mov
imul
fwait
dec
cmp
nop
mov
or
lock
xchg
iret
dec
dec
mov
and
imul
xor
mov
sub
scas
mov
es
inc
into
in
in
mov
data16
jne
push
ret
mov
adc
cmp
lock
stos
ret
inc
scas
mov
push
push
fiadds
sbb
iret
jb
inc
lahf
inc
pushf
mov
mov
sti
sbb
out
mov
inc
and
out
aas
adc
shrb
add
pop
sub
scas
mov
lods
xor
xchg
les
sarl
pop
jg
dec
xor
scas
jbe
mov
and
xchg
mov
sbb
push
movsb
mov
andb
rcll
pop
or
push
das
and
mov
jnp
bound
sbb
mov
dec
jecxz
aam
push
or
mov
cwtl
pop
cmp
stos
sbb
frstor
sub
add
fs
ficoml
add
mov
clc
or
inc
pusha
insl
mov
push
push
ss
ficompl
push
xorl
mov
push
cld
movsl
leave
or
mov
add
sub
add
lahf
add
into
dec
mov
outsl
and
das
popa
into
ja
js
repz
xor
fstpt
pop
loopne
xchg
lods
outsl
sub
imul
sub
leave
jbe
dec
inc
add
out
test
repz
add
gs
cmpsl
clc
add
xor
roll
cmp
sbb
push
lods
jmp
popa
push
lcall
mov
dec
cmpsl
push
xor
xchg
int
add
rdtsc
xor
jmp
mov
mov
push
mov
add
jle
cmp
fs
jo
lock
sub
into
shll
push
pushf
int
ja
repnz
cmp
jne
add
lret
pop
shll
and
add
mov
addr16
or
popf
or
dec
adc
and
inc
sbb
movsb
pop
mov
test
mov
fxch
fisttps
xchg
pop
lcall
inc
pop
sub
loope
call
fwait
cmp
sbb
adc
shlb
stos
xchg
das
iret
adc
cmp
pusha
xor
jp
xlat
push
sbb
lret
icebp
ds
push
shll
lock
push
pushf
add
mov
mov
fldt
mov
jae
xor
add
aas
cmc
in
sbb
or
xchg
lock
xchg
cltd
ljmp
xor
add
lods
addr16
dec
and
cltd
lods
int
cli
enter
imul
xor
test
sbb
sbb
rcl
stos
scas
addr16
shlb
lahf
mov
pop
and
dec
and
add
inc
cltd
and
push
jno
das
mov
ds
and
sub
std
push
mov
mov
sarb
add
mov
aad
pop
or
std
pop
mov
lds
push
cwtl
dec
cmp
mov
dec
sub
sbb
mov
cmp
lods
and
sbb
mov
sub
mov
sub
mov
fsubrl
push
and
imulb
lods
sub
call
mov
movhlps
nop
ljmp
data16
cmp
rcrl
pop
jp
icebp
jg
jmp
mov
lret
addr16
outsb
stos
mov
test
jnp
pop
push
and
push
lret
in
aas
ljmp
fdiv
push
add
adc
xor
and
shl
add
test
je
std
adc
das
clc
jo
aas
sahf
or
xchg
cld
push
jno
push
incl
sbb
mov
leave
lahf
pop
add
loopne
xor
cmpsb
or
addr16
jo
lcall
or
rep
sub
inc
lods
sahf
dec
test
jae
bswap
inc
xor
mov
push
push
in
xchg
inc
xor
xor
test
cmp
adc
data16
inc
daa
arpl
push
scas
aas
clc
lret
jno
pop
cmp
iret
jecxz
mov
cmp
push
flds
and
insb
inc
outsl
aas
xchg
add
push
loopne
repz
gs
scas
aas
push
add
push
fdivrl
std
and
jmp
ret
xchg
and
and
loopne
sti
or
test
arpl
push
out
sub
rorl
add
movsb
shll
ss
mov
and
push
dec
jle
sub
test
imul
pop
mov
mov
pop
sbb
xchg
mov
icebp
sbb
xchg
or
pop
daa
fbstp
ror
rclb
dec
inc
add
repnz
cmp
cmpsb
push
popf
xchg
cld
adc
mov
jmp
dec
jge
mov
cmp
in
xor
mov
mov
sbb
je
inc
imul
out
and
subb
es
ljmp
cmpsb
cmp
mov
pushf
rclb
int3
xor
fwait
dec
adc
dec
push
mov
sub
negb
divl
ret
daa
mov
pushf
mov
and
mov
and
sarl
inc
fs
test
mov
cmp
repnz
xor
test
enter
pop
icebp
and
mov
mov
cmpsl
mov
ret
std
mov
sub
mov
dec
cmpsl
sbb
inc
loop
mov
and
test
mov
jp
out
aad
push
out
jbe
mov
les
jb
sbb
pop
roll
xor
mov
mov
ret
lret
gs
dec
jo
mov
in
push
inc
jle
andl
in
movsl
adc
adc
push
xor
ljmp
mov
mov
mov
mov
hlt
push
inc
adc
sub
lahf
xchg
lods
enter
scas
repz
in
gs
jb
pop
jne
ljmp
test
xchg
pop
cmp
pop
pushf
ret
xchg
cmpsl
testl
sbb
in
lret
pop
adc
dec
movsb
pop
pop
nop
xchg
ret
daa
jbe
dec
outsl
dec
or
loop
and
adc
inc
push
xchg
int3
jb
lds
mov
adc
mov
into
or
dec
push
daa
mov
popf
mov
inc
or
jb
pop
pop
mov
inc
pop
mov
jne
imul
cmp
daa
add
add
xchg
rep
mov
fdivr
mov
imul
or
cltd
mov
popf
xor
xchg
mov
jge
sub
fnstsw
in
sahf
pop
and
rclb
dec
jecxz
in
and
in
int
insb
pushf
clc
inc
daa
int3
mov
fmull
cmc
mov
bound
or
ja
push
push
dec
mov
xlat
mov
dec
clc
hlt
adc
roll
xchg
dec
iret
adc
mov
fldenv
add
lahf
add
lods
into
mov
sub
add
pusha
loop
aad
and
in
incl
jns
pop
mov
ljmp
decl
mov
and
insl
push
out
aaa
icebp
sub
mov
in
and
inc
jge
subl
clc
xor
fildl
cmp
out
pop
inc
lods
push
xor
out
add
jecxz
inc
xchg
xlat
mov
jmp
jbe
fucomp
testl
pop
loop
notl
dec
xor
cwtl
inc
lods
jbe
push
or
mov
jae
mov
gs
sarb
jmp
push
mov
subb
push
cmpsb
ret
int
mov
into
int
lea
jmp
xchg
gs
mov
out
call
arpl
jbe
and
xor
jl
xchg
push
xor
xor
dec
or
or
daa
mov
mov
fcmovbe
cmp
fdivs
gs
mov
mov
cmp
mov
xchg
ret
mov
sub
icebp
cs
gs
pop
popa
sahf
inc
movq
fnstenv
rorb
add
xor
ja
sbb
xchg
inc
aas
mov
aad
sub
xor
mov
nop
mov
pop
cltd
jo
mov
hlt
sbb
mov
xor
dec
jp
orb
jmp
leave
rolb
push
xchg
cmc
scas
mov
repz
popa
jmp
push
pushf
push
lret
jbe
es
xor
push
adc
call
loope
in
out
and
outsb
pop
mov
mov
push
in
sbb
out
sti
incb
xor
test
mov
inc
cmc
pop
sbbl
not
repz
mov
stc
arpl
pop
or
jb
cmp
inc
mov
js
out
sub
aas
lock
les
js
lcall
enter
xchg
sub
mov
mov
xchg
outsl
andl
in
shll
sbb
push
jo
sbb
cli
das
jbe
mov
jo
sub
test
mov
ret
mov
fldl
and
mov
test
in
das
xor
aaa
repz
lcall
inc
js
adc
loope
mov
mov
sbbl
cmp
mov
les
int3
jecxz
es
test
dec
mov
xchg
loop
movsb
mov
dec
cmp
pop
gs
mov
jecxz
pop
je
js
mov
and
pop
into
inc
imul
cltd
push
aaa
stos
sbb
rcll
push
pop
test
test
and
bound
mov
push
das
push
imul
aaa
pop
jne
mov
jns
into
or
push
loopne
lcall
add
jae
mov
cmp
inc
xor
jge
push
sbb
sbb
mov
lods
inc
add
add
out
sub
in
or
sub
je
mov
jno
sbb
jmp
aad
fstps
pop
push
cs
pushl
and
mov
out
in
ficompl
mov
push
in
or
push
mov
push
jecxz
mov
stos
mov
mov
std
mov
jle
movsl
hlt
jo
push
xchg
add
xor
dec
sub
mov
aad
xor
push
or
arpl
jnp
mov
cmc
jmp
stos
xor
arpl
inc
push
cltd
popa
mov
adc
stos
xor
fisttpll
inc
ret
pop
jns
push
imul
mov
or
or
jmp
pushf
lea
loopne
les
xchg
and
adc
jmp
push
daa
sbb
xor
stos
sbb
adc
and
inc
scas
adc
and
jl
sub
andl
lods
mov
in
mov
inc
repz
and
decb
cmp
adc
mov
cwtl
std
jmp
test
cmp
xchg
adcl
jl
test
dec
sahf
lods
add
and
sub
scas
lret
popa
jg
popa
jo
sahf
icebp
push
mov
loopne
cld
mov
mov
insb
cmp
dec
pop
mov
sub
jno
inc
push
push
shlb
mov
jecxz
add
jae
xchg
daa
mov
cld
pusha
mov
mov
test
xchg
sub
push
pushf
cmp
cli
out
pop
pusha
mov
xor
pop
push
sbb
pop
xchg
popf
pop
mov
lock
add
gs
mov
fldcw
push
jbe
adc
mov
test
dec
sarb
jns
sub
sub
xor
mov
mov
cmc
add
jns
add
leave
imul
push
pop
pushf
in
mov
xchg
jecxz
stc
add
push
rclb
add
in
lahf
testl
cmp
mov
ret
xchg
lds
sti
push
movsl
or
pop
fcom
inc
sbb
rcl
aaa
or
sbb
lretw
mov
out
les
mov
pop
sarl
scas
fsts
push
xor
stc
mov
jb
jae
inc
sbbl
cld
sub
jbe
mov
or
loop
adc
inc
sbb
mov
jmp
inc
ficoml
jp
push
jge
pop
aas
jnp
int3
jne
or
adc
cmpsb
dec
test
test
jno
dec
dec
mov
into
hlt
insb
inc
in
push
adc
mov
ret
push
pop
movsb
addl
pushf
xchg
cmp
ljmp
dec
daa
xor
inc
icebp
int3
test
scas
loope
cmp
js
es
cmc
inc
and
sahf
sbb
shrb
ficompl
fwait
stc
jge
aad
lret
jmp
push
or
dec
adc
dec
pop
gs
dec
imul
clc
mov
pop
sub
sbb
mov
or
xor
pop
dec
and
hlt
es
int
inc
xchg
ja
adc
sarl
mov
lods
rol
xlat
mov
arpl
negl
out
cmpl
or
dec
fstps
jmp
sbb
cli
mov
lret
pop
xchg
scas
lea
xor
mov
bound
jbe
into
in
sbb
bound
push
cmp
stos
and
xor
fdivr
mov
in
js
add
stos
js
pop
loop
cmpsl
int3
ror
inc
js
adc
repnz
fwait
mov
push
push
inc
xlat
mov
adc
mov
fimuls
mov
and
mov
xchg
lods
popa
adc
and
pop
pop
out
cmc
lods
into
arpl
cmpsb
pop
imul
imul
mov
jns
mov
or
jp
test
hlt
sbb
xchg
pusha
aam
pop
fdivrl
movb
adc
dec
inc
pop
popf
sahf
into
test
lahf
sbb
mov
arpl
or
mov
mov
dec
cld
sub
cld
rcll
dec
ja
outsb
in
inc
pop
xor
cmp
mov
shlb
fmul
push
pop
inc
add
loop
inc
sti
leave
cmc
in
clc
aad
dec
shll
call
pop
loop
lret
jmp
mov
in
lock
and
and
hlt
dec
or
aad
mov
xchg
lds
imul
lock
xchg
jno
icebp
sub
cmpsb
into
mov
sub
adc
xor
aam
sub
fstl
sbb
xchg
das
cmpsl
lret
dec
std
pop
push
fcoms
inc
and
ja
outsl
or
clc
fisubrl
mov
aas
mov
lcall
lds
inc
sub
iret
lret
jle
std
or
in
dec
jb
jb
pop
daa
scas
dec
pushf
sub
sti
and
fisttpll
dec
cmp
xchg
mov
mov
mov
push
fprem1
popf
shrl
add
lcall
push
mov
data16
frstor
fsubs
loop
mov
fs
lcall
cmp
and
clc
jecxz
sub
xchg
sbb
cmc
cmpsb
adc
push
xchg
lock
push
repnz
cmovl
sbb
fsubrl
out
mov
inc
popf
incb
ja
addr16
fsubrp
adc
clc
rcr
vmread
cli
mov
cld
cmp
jo
jg
mov
arpl
xor
and
movsl
pop
shlb
adc
inc
in
mov
icebp
dec
test
lcall
out
test
xor
je
lock
mov
sub
fnsave
ss
addl
data16
ficomps
inc
add
iret
fcoml
stos
xchg
cmpsl
pusha
ds
inc
add
pushf
mov
int
mov
arpl
jecxz
jle
and
out
sarl
in
fldenv
fwait
aas
sarl
or
inc
lods
sbb
pop
mov
cwtl
in
in
das
test
sbb
aam
sbb
outsb
pop
mov
add
leave
cmpb
loopne
push
xchg
xor
xor
and
iret
js
sbb
lret
cmpsl
add
push
pusha
mov
insb
out
dec
sbb
pop
aad
and
pop
mov
jbe
mov
and
sbb
inc
add
jge
pop
sti
dec
mov
xchg
hlt
sbb
push
insl
mov
pusha
stos
lods
mov
cwtl
aam
cld
fucomp
decl
push
sub
aad
outsb
flds
fstps
sub
push
add
dec
adc
leave
sbb
popf
ljmp
jge
mov
in
dec
pop
cmp
mov
lds
pop
xchg
test
ret
pop
xlat
mov
mov
dec
mul
mov
xor
inc
xor
xchg
xor
test
mov
xor
jbe
out
mov
xor
je
jae
pop
cmp
add
xor
or
xor
das
sbb
jge
cmp
ret
adc
sbb
mov
cwtl
xor
cwtl
mov
push
mov
imull
xchg
or
dec
and
xchg
in
sub
test
or
or
lock
cwtl
add
sub
add
aaa
dec
xor
jg
in
cld
cmp
cmpsb
jnp
aas
jns
scas
test
xor
sti
mov
sub
out
enter
fwait
enter
sbb
mov
pop
adc
rcrl
cld
xor
mull
in
hlt
xchg
cmp
jno
jb
fneni(8087
sahf
cwtl
jle
mov
sub
mov
or
js
cmp
xchg
rcll
popf
sbb
out
push
mov
sbb
xor
jo
call
push
xchg
and
jo
and
lahf
fwait
or
pop
unpcklps
mov
dec
push
nop
jecxz
xor
xchg
call
scas
lcall
push
or
mov
movsl
clc
les
ret
jge
popa
psubusb
mov
into
scas
mov
arpl
pop
add
les
and
rorb
mov
ret
add
xor
mov
push
xchg
inc
pop
ljmp
mov
insl
icebp
and
mov
lahf
daa
pushf
lcall
push
adc
imull
mov
push
fdivl
jmp
cld
push
push
negl
aaa
std
inc
mov
fisubl
je
cmp
ja
push
movsb
xor
shll
imul
sub
scas
pop
inc
xor
mov
shlb
test
xchg
stos
lods
mov
and
inc
mov
sbb
xchg
test
mov
mov
fsts
xchg
dec
sti
inc
cli
adc
mov
xchg
clc
jp
cmp
pop
push
shl
xchg
sbb
pop
mov
push
xor
fwait
lds
bound
adcb
push
sti
aaa
dec
dec
loope
out
or
in
adc
int
push
das
movsb
dec
push
cmp
mov
dec
push
dec
stc
cmc
pop
lods
testb
imull
adc
jae
adc
lods
mov
jl
imul
push
xchg
add
test
enter
mov
cmpsb
es
xchg
cmp
enter
sub
outsb
sbb
fnsave
mov
pop
inc
mov
inc
xor
iret
call
push
or
es
inc
xor
add
jns
mov
lcall
mov
inc
or
test
iret
xlat
inc
cmpsl
dec
push
pop
pop
and
scas
lds
mov
sbb
xchg
cmp
dec
add
push
rorl
mov
cmp
inc
cmp
adc
adcl
mov
cmc
sub
jmp
jmp
cmp
aaa
add
mov
push
addb
cmpsl
mov
mov
inc
mov
iret
pop
insl
outsb
xchg
nop
mov
xbegin
xchg
jae
or
add
lret
out
adc
lea
insb
push
in
lods
inc
fisubl
mov
push
fsubl
imul
dec
dec
lea
gs
or
shll
bound
sbb
pop
or
jl
rclb
sbb
mov
cmpsl
add
fs
adc
insw
movl
gs
mov
repz
mov
iret
pop
scas
push
jmp
dec
cltd
xchg
adc
das
pop
pop
andb
push
inc
cmp
dec
leave
daa
xchg
clc
loop
gs
dec
sarb
and
adc
cld
mov
adc
inc
pop
mov
test
loop
les
pop
adc
xchg
pop
mov
outsb
jp
aam
mov
test
es
mov
adc
adc
leave
ret
pop
ss
add
xchg
inc
insl
lcall
xchg
clc
lahf
je
xchg
in
xor
adc
fstpt
adc
mov
jle
inc
or
push
jmp
xor
cs
aam
mov
cmp
sbb
xchg
shlb
in
jno
leave
mov
xchg
mov
add
loope
jl
add
mov
mov
jns
fldl
xor
jecxz
pop
pushf
cmp
push
xchg
in
out
push
test
and
mov
insb
nop
jp
inc
stc
inc
outsl
test
clc
mov
push
out
fbstp
lret
xchg
into
pop
mov
push
mov
mov
pushf
sbb
adc
gs
cmp
pop
mov
mov
addr16
adc
pop
adc
add
sbb
fbstp
mov
js
push
jl
push
push
or
xor
cmp
cmp
dec
cmp
ds
dec
sbb
sbb
push
jae
sub
loopne
mov
ss
pop
aas
xchg
sbb
movsb
dec
lcall
mov
lret
popa
notb
negb
pop
sbb
mov
push
pop
xchg
scas
fs
js
test
sub
popa
xchg
mov
idiv
int3
mov
pop
ret
dec
lahf
push
pushf
repz
lds
shll
ja
jnp
and
out
xchg
inc
xor
adc
and
mov
push
xchg
jle
mov
lret
out
fnsave
fidivrl
mov
jb
iret
daa
mov
sbb
pop
dec
aaa
pop
sub
ret
test
fstps
pop
ret
lea
xlat
test
xor
fs
sahf
int
pop
sbb
insb
sub
pop
bndldx
ret
out
in
mov
push
stos
add
fsts
jbe
xchg
sbb
xor
or
idiv
stc
xchg
pop
add
dec
mov
and
leave
int3
pusha
add
jo
icebp
ljmp
out
insl
or
loop
ficomps
ds
sbb
ret
mov
inc
dec
jae
mov
pusha
mov
add
cmp
xchg
sbb
adc
xchg
xor
and
push
faddl
out
popf
mov
les
pop
shlb
in
xlat
mov
xlat
pop
push
shr
fstp
cmpl
push
xchg
inc
inc
inc
jg
or
pop
cmp
test
movsl
dec
repnz
cmp
insb
push
or
imul
repz
ja
loopne
pushf
outsl
push
mov
or
popl
pushf
repnz
in
lcall
jl
dec
rorb
je
pop
outsl
push
jns
ljmp
fdivs
pop
adc
mov
test
pavgw
and
mov
aaa
pop
jns
arpl
ret
aaa
jle
pop
mov
xor
jmp
pop
fisubs
push
shrb
aam
jg
cmc
je
pop
and
and
outsb
es
std
sub
nop
adc
fldl
push
jg
stos
test
jle
mov
xchg
cmp
cmp
jnp
popa
mov
aaa
sub
jnp
ds
out
test
cmp
ja
in
sbb
in
cld
or
dec
mov
push
fidivs
inc
pop
dec
push
pop
xor
fisttpl
outsb
cmc
lea
mov
fstps
mov
rolb
and
test
xchg
in
lret
jecxz
call
pop
lret
iret
lcall
xor
ret
cmc
or
pop
test
sbb
cmpl
int3
mov
mov
divl
inc
gs
mov
add
push
ljmp
jg
and
decb
out
gs
les
bndstx
dec
cmc
jecxz
pusha
in
push
push
mov
cmp
test
pop
dec
aad
notb
rcrb
fildll
pop
pop
adc
add
stos
jl
jmp
adc
push
fiadds
jns
in
mov
sbb
xchg
insl
cmp
push
addr16
jmp
mov
mov
sub
mov
call
and
dec
cltd
frstor
stc
push
aaa
xchg
iret
leave
dec
mov
jne
and
aad
mov
loopne
movb
adc
rorl
jmp
sbb
cltd
and
xor
xchg
pop
xchg
mov
push
pop
pushf
sbb
aas
mov
or
fmull
call
outsb
in
test
mov
inc
push
cmc
roll
jo
push
icebp
imul
fildl
pop
test
or
xor
sub
popa
cmpsb
int
lea
inc
xchg
repz
lea
aas
jb
lea
pop
adc
push
lock
in
pop
shl
out
lcall
inc
lods
pop
arpl
cli
lahf
and
and
fwait
fcomi
mov
push
sub
mov
pop
and
push
iret
fxtract
rolb
shr
jbe
fwait
outsl
sub
adc
mov
stos
xlat
add
mov
negb
jl
jl
mov
or
aam
sbb
lods
orl
mov
movsl
mov
aam
or
inc
or
xor
int
push
iret
lcall
mov
nop
inc
out
xor
dec
or
and
add
adc
popf
xchg
daa
ja
push
mov
mov
or
cmpsb
adc
es
inc
scas
or
inc
mov
cmpsl
flds
std
mov
pop
xorl
in
lret
sbb
imul
test
mov
mov
or
orl
pop
mov
into
cli
inc
jbe
xor
mov
out
test
jecxz
outsl
xchg
mov
and
rolb
mul
js
push
or
vmptrst
jnp
addr16
mov
or
lahf
pop
jmp
mov
inc
jnp
xor
stos
enter
mov
lock
mov
imul
scas
pminsw
or
cwtl
outsb
jmp
jnp
stos
fadd
push
sbb
push
cmpsb
movl
push
out
dec
stos
cmp
mov
dec
push
push
cmpsl
stc
mov
ja
call
lret
imul
mov
popf
pop
sbb
std
fwait
testb
fucomi
out
dec
sub
sub
fs
adc
push
mov
cltd
nop
mov
pop
cmp
testb
mov
movsb
fisubrl
pop
dec
cmp
pop
inc
inc
rorl
adc
jno
mov
jno
xchg
lea
scas
icebp
addb
xchg
je
jecxz
fdivrs
scas
adc
xchg
cmp
aaa
mov
jbe
jecxz
div
sub
xchg
push
icebp
mov
pop
hlt
lea
in
outsl
push
orl
sbbl
inc
les
pop
and
out
mov
push
push
loopne
js
in
loope
test
fiadds
xor
lods
das
dec
cmpl
push
xlat
mov
inc
push
stc
jnp
mov
push
xchg
xchg
pop
js
dec
stos
adc
fldt
mov
cwtl
jmp
in
mov
fidivs
fstps
mov
xor
and
sbb
cwtl
pop
pop
repnz
mov
movsb
xor
jne
shll
inc
int3
push
and
xchg
ret
pop
je
fsubs
loop
sub
test
outsb
jp
fxch
dec
insb
mov
mov
cmpsl
fmulp
enter
mov
sub
ljmp
jle
jl
sub
xor
and
hlt
rcll
in
jp
pop
cmp
ficompl
mov
clc
les
pop
loope
mov
xchg
test
sbb
sub
sahf
dec
and
cmpsl
lock
adc
mov
push
in
pop
das
mov
inc
scas
roll
and
cmp
jmp
pushl
sub
gs
cltd
enter
pop
mov
inc
add
add
out
divl
pop
loop
cld
xchg
dec
inc
in
sbb
push
dec
jbe
push
cmpsl
mov
cmpsl
pop
lret
ds
pushf
sub
out
je
jbe
adc
fs
mov
cmc
cmp
pushf
insb
mov
sub
cmp
add
lret
and
test
andl
addr16
cmp
xor
jo
scas
xchg
scas
sub
data16
mov
mov
pop
push
lods
neg
push
popa
push
fsubl
push
sbb
dec
add
cmp
std
popa
push
xchg
mov
or
lret
mov
arpl
sbb
xchg
pop
test
and
jno
js
test
mov
sbb
outsl
loopne
add
mov
test
adc
bnd
nop
mov
xchg
pop
iret
push
jae
xchg
lret
and
or
int
das
sub
dec
push
fldl
es
lods
cltd
mov
nop
add
pop
jle
adc
ljmp
mov
fisttps
sub
hlt
jae
int3
xchg
cmp
jb
cmp
imul
data16
std
xchg
pop
fs
mov
imul
pop
inc
fcoml
push
xchg
mov
in
les
bound
inc
push
cltd
mov
enter
xor
repnz
or
ja
mov
test
inc
ja
push
lret
adc
pop
sub
popa
ds
jno
mov
mov
cld
test
arpl
xor
in
xchg
pop
xchg
lea
jp
sbb
testl
jno
in
lret
pop
movsl
push
lret
jmp
icebp
loop
scas
jp
xchg
mov
jo
pop
lret
adc
add
or
pop
dec
loop
imul
mov
stos
sub
pop
clc
shlb
fisttpll
adc
xchg
stos
loop
and
popa
cli
cmp
xchg
insl
xchg
xchg
jecxz
mov
repnz
iret
clc
mov
ds
dec
ljmp
and
daa
push
sub
iret
shrl
sbb
in
xor
in
icebp
mov
mov
pop
mov
or
push
or
push
fsubl
mov
mov
ret
and
dec
push
mov
jg
cwtl
in
dec
and
push
ljmp
or
xchg
sub
push
loop
loop
jo
mov
arpl
pop
or
dec
adc
insl
daa
xor
sub
ret
mov
lahf
cwtl
int
mov
lea
inc
jnp
bnd
and
cmp
push
mov
cmp
pop
sub
rorl
test
mov
fwait
les
ffreep
enter
rcll
mov
and
shlb
pop
js
iret
lods
cmc
push
sub
ja
push
jb,pn
pop
push
rcr
test
xor
or
gs
mov
or
mov
mov
movsl
lret
mov
xchg
in
pushf
ljmp
sbb
jl
jmp
faddl
mov
lahf
jle
jg
xor
dec
or
jne
daa
mov
sub
inc
inc
pop
and
adc
push
pop
fs
cltd
mov
sub
dec
mov
push
outsl
mov
mov
leave
xor
and
scas
test
mov
mov
adc
jge
imul
mov
adc
pause
add
or
cmp
mov
push
imul
sub
add
imul
scas
sub
pushf
aam
pop
jb
outsb
cmpsl
xchg
or
aad
jne
scas
jecxz
cmp
fs
js
subb
push
fimuls
push
pop
jae
jae
insl
add
cwtl
push
pop
lds
xchg
and
jg
xor
dec
mov
je
mov
aaa
pop
xchg
mov
dec
pop
push
add
test
jns
pop
mov
xchg
lcall
enter
pop
mov
test
popf
lea
setnp
imul
or
and
imul
ljmp
out
mov
enter
nop
repz
jne
push
cmpsl
mov
dec
fdiv
and
mov
xor
test
arpl
xchg
enter
pop
int
mov
popf
xchg
rep
stos
pop
mov
xchg
icebp
lret
cmp
add
jp
mov
mov
xchg
aas
jno
mov
lahf
mov
es
scas
jns
jge
arpl
cmp
out
rcll
psraw
push
push
adc
mov
add
enter
int3
adc
pop
jb
call
mov
lahf
cmc
cmpsl
mov
mov
jnp
pusha
fcmovne
mov
gs
mov
pop
pop
rcrb
mov
mov
push
jns
cmp
test
out
cwtl
jmp
inc
sub
aam
or
cmp
sub
lcallw
push
scas
pusha
inc
mov
mov
mov
es
fiaddl
inc
or
pop
cmc
in
sti
mov
xor
cmp
add
xchg
cmp
aaa
repz
mov
icebp
arpl
mov
pop
sbb
or
jno
lea
fnstsw
les
fidivrl
sbb
lods
mov
lcall
push
ja
mov
dec
fmulp
pop
pop
loopne
mov
ljmp
out
stos
fadd
dec
push
inc
sub
ss
xchg
pop
inc
add
adc
jmp
lret
cmpsb
fstps
xchg
mov
fcomp
pushf
repz
lcall
push
xor
mov
cs
cmp
pop
mov
mov
call
xrelease
insb
xchg
pop
inc
imul
imul
add
int
xchg
cmp
jae
push
sbb
imul
negb
dec
mov
pop
cmp
loopne
mov
lcall
inc
int
sub
xchg
inc
add
ljmp
scas
xchg
inc
ficoms
inc
inc
push
mov
xchg
mov
dec
test
sub
mov
jae
mov
mov
fucomip
adc
cmp
xchg
lahf
xor
lret
pop
syscall
pop
push
mov
xorl
in
sbb
add
mov
repz
push
push
mov
sahf
into
rcrb
xor
sub
ljmp
mov
jb
mov
cmpsb
imul
add
les
leave
push
icebp
dec
jl
jbe
int3
mov
jbe
dec
jp
insl
adc
sbb
or
insl
mov
sub
sbb
dec
mov
int
std
inc
xchg
xchg
jb
pop
jno
xor
inc
and
fisubrs
cld
sbb
nop
sbb
xchg
jecxz
add
mov
or
aad
test
mov
dec
lret
repnz
dec
add
or
test
scas
popf
movsb
push
cmp
stos
xor
adc
dec
into
inc
in
sbb
mov
push
or
fisttps
mov
or
jg
mov
mov
fists
movsb
add
mov
aaa
push
add
mov
add
xor
jl
fdivs
sbb
xchg
les
adc
xor
sub
sahf
xchg
out
push
add
push
jnp
repnz
jmp
mov
test
jae
sarb
push
pop
test
jge
shl
push
pop
test
sbb
mov
cmpsb
test
int
jb
int
xchg
cmc
fs
movsl
jns
xchg
add
jae
pusha
ficoms
cmovne
ficoms
add
fldenv
dec
mov
das
cld
icebp
jge
fistps
sub
xchg
repnz
fs
and
dec
dec
stos
jl
int
jecxz
int3
scas
das
jmp
test
pop
outsb
pop
xor
or
push
icebp
push
icebp
add
inc
ds
inc
and
out
push
sbb
jnp
shl
push
jecxz
xchg
push
popf
sbb
outsl
sbb
lds
adc
xor
xchg
pop
or
lods
gs
adc
mov
ret
lahf
xchg
mov
push
cmp
mov
jg
mov
cmpsb
cmp
sub
insl
pushf
xor
gs
cltd
add
inc
mov
cltd
popa
xor
repz
adc
out
dec
fsubrl
fdivrl
sbb
ret
or
push
ret
sub
sbb
inc
push
dec
push
scas
cld
mov
pop
rol
sub
or
lret
rcrb
sbb
mov
mov
mov
xchg
adc
outsl
sbb
es
xchg
lret
loopne
inc
fwait
loopne
rcrb
mov
repnz
mov
into
adcl
ret
cmp
xchg
push
adc
push
add
imul
dec
add
ret
aam
arpl
out
mov
jo
or
sarl
dec
fldl2e
cmp
and
pushf
dec
enter
pop
and
push
or
cmp
jg
ss
js
mov
js
rorb
or
lahf
loopne
aas
pop
out
jne
dec
scas
mov
fs
jno
mov
addr16
pop
aas
pop
mov
jmp
adc
hlt
inc
mov
mov
bound
pop
mov
adc
push
adc
shll
jae
sti
jns
icebp
mov
xor
aas
sub
push
cmp
xor
mov
lea
sarl
cld
clc
push
and
add
fisttpll
popf
repz
cli
aas
inc
or
sbb
and
lods
mov
call
jmp
mov
jno
xor
rcrb
movsb
leave
inc
lea
pop
or
jnp
xchg
jnp
sbb
inc
jmp
jg
push
jb
icebp
jge
repnz
fwait
sbb
adc
and
mov
xor
inc
jb
rcl
mov
imul
add
das
mov
adc
mov
les
pop
mov
ret
sub
stc
xchg
xchg
call
sbb
in
dec
pop
lds
gs
icebp
lahf
movsl
pop
cli
inc
dec
outsb
popf
dec
jecxz
mov
andl
push
repnz
popf
jg
gs
push
dec
arpl
je
popf
out
jae
pop
roll
xor
sub
orb
in
mov
push
lods
jmp
xorl
mov
pop
cli
std
xchg
mov
jns
sub
mull
sub
addl
scas
xabort
les
add
loop
xchg
mov
lret
fcompl
mov
in
push
push
add
sbb
mov
ficompl
fadds
outsb
cmp
jnp
jle
fldlg2
ds
pop
repnz
xchg
mov
jb
ret
pop
testb
shrl
out
sbb
xor
xor
les
in
mov
xor
ret
xorl
dec
pushf
mov
dec
out
push
les
inc
rep
imul
dec
and
mov
call
popa
cmp
sbb
dec
mov
les
mov
jb
call
mov
inc
adc
push
fists
mov
mov
ds
cmp
mov
jb
and
popa
pop
cmpsl
es
les
ret
nop
sbb
xchg
mov
pusha
repnz
ss
mov
and
lret
and
lea
mov
and
inc
cmpsl
add
scas
mov
adc
fildll
push
jns
int3
mov
dec
xor
icebp
std
mov
xchg
sbb
mov
dec
aaa
inc
lret
aaa
xchg
loopne
into
in
scas
stos
cmpsl
and
dec
xor
pushf
sbb
movsl
sbb
push
mov
add
sub
popa
push
inc
test
dec
jo
dec
push
mov
loope
push
jne
ret
cli
movsl
sub
cmp
testl
mov
pushf
out
cwtl
mov
ret
xchg
push
jb
dec
scas
jne
ja
add
imul
lcall
ret
shll
lods
inc
ja
cmp
adc
pop
fstps
enter
pop
sub
les
jb
pop
mov
adc
xlat
popf
adc
aad
fwait
ja
inc
shll
jb
mov
xchg
inc
rcrl
roll
mov
inc
addr16
loope
pop
ja
shll
jecxz
popa
shl
jg
sahf
sbb
and
loope
mov
or
orl
aad
dec
je
mov
pop
shlb
inc
call
mov
sarl
mov
aam
aaa
in
das
inc
dec
sub
ds
pop
cld
xor
cwtl
cli
mov
inc
or
rorb
fsubrl
dec
scas
ret
enter
clc
add
jp
icebp
jno
call
sti
mov
adc
aas
or
pop
jmp
hlt
icebp
mov
mov
xor
stc
mov
dec
cmp
mov
jl
in
stc
mov
in
mov
es
mov
push
pop
fxch
jns
shrl
pop
sahf
outsl
je
push
cli
arpl
inc
iret
mov
sub
jmp
xor
push
enter
xchg
cmp
push
cmp
cmp
jb
jmp
xchg
cmp
xchg
arpl
out
lods
pusha
rclb
stc
pop
aam
ds
mov
dec
je
xor
sahf
icebp
scas
add
xchg
push
cmp
test
jp
fs
ret
subl
adc
mov
jmp
fdivs
xor
hlt
negl
ret
test
dec
sub
xor
push
xchg
pop
jmp
lahf
cld
pop
jge
xchg
out
shl
mov
pop
js
loope,pn
dec
jns
push
je
sub
sub
mov
ret
lret
test
sbb
mov
pop
aas
in
mov
xchg
fstpt
dec
mov
sub
sbbl
sbb
inc
xchg
mul
inc
sahf
int
rcrl
pop
dec
sub
and
cs
or
mov
cmp
add
dec
xor
pusha
sti
mov
cmpsb
dec
jno
mov
lock
arpl
in
jae
push
push
dec
mov
les
cmp
xchg
andl
lea
inc
push
repz
cmp
mov
subl
adc
mov
jecxz
hlt
mov
xor
loopne
jmp
jae
xor
repnz
dec
or
push
add
sub
inc
and
pop
shr
dec
imul
addr16
lret
jae
idivl
mov
roll
mov
mov
jecxz
dec
push
das
je
pop
pop
push
icebp
lret
add
or
pop
mov
imul
xor
sbb
test
dec
cmp
lahf
int
sub
icebp
mov
cltd
mov
lods
dec
dec
pop
insb
fcoms
cmp
imul
fbstp
inc
push
xor
xchg
pop
sub
inc
les
add
dec
push
lret
or
push
adc
fcompl
jmp
mov
or
aam
pop
push
in
jecxz
fs
sbb
stc
andb
mov
lahf
inc
cmpsl
out
aas
movsl
mov
lret
jge
imul
cmpsb
xor
inc
mov
cmc
scas
mov
std
test
incl
std
xor
and
idivl
jo
xor
in
mov
mov
mov
cmp
out
fidivrl
outsl
aam
in
movsb
nop
lock
jge
dec
aad
or
emms
pop
out
lds
gs
jno
out
out
mov
popf
mov
inc
clc
mov
mov
lds
and
add
push
mov
sbb
xchg
hlt
lods
dec
sarb
push
mov
and
jbe
lahf
push
push
mov
fildl
movsb
mov
mov
in
lahf
mov
lcall
dec
xchg
push
scas
inc
dec
popa
fwait
sub
jne
xor
mov
cld
sbb
mov
push
incl
mov
in
je
mov
movsb
mov
ret
leave
sahf
push
xorl
xchg
sub
inc
ja
repnz
fildll
and
push
jns
mov
mov
pop
cmp
sub
inc
sahf
inc
pop
push
outsl
das
sbb
mov
xor
jl
in
inc
mov
push
leave
test
inc
xor
cmp
std
jne
mov
loope
and
pop
push
xor
lods
pop
nop
xorl
xor
or
push
adc
stc
push
push
in
push
out
sarl
push
cmp
leave
jns
popa
xchg
out
sbb
popf
add
in
jmp
js
cmc
leave
mov
jns
ret
nop
js
out
jle
mov
mov
push
dec
mov
and
fstp
or
stos
insl
fcmovnb
sarb
mov
fidivl
imul
pop
stos
nop
push
repz
icebp
into
repnz
test
fwait
mov
xchg
sbb
das
aaa
cli
add
mov
shlb
xchg
sbb
shl
lret
xor
mov
xchg
loop
lea
lea
push
xor
shlb
aaa
clc
push
aas
jns
mov
repnz
inc
inc
rcrl
inc
mov
push
adc
fldt
sti
inc
mov
mov
movsb
js
push
aas
dec
mov
xor
cmp
sbb
out
std
dec
pop
fildl
fisubl
inc
inc
pop
mov
pop
cltd
mov
iret
sbb
js
adc
rcrb
add
push
cmp
or
or
popa
aam
inc
or
xor
push
popf
pop
jo
fistpll
sub
lock
or
imul
mov
jb
cmc
pop
fidivrl
scas
test
xchg
mov
out
pop
sub
inc
cmp
cmp
cwtl
test
xchg
fsubrs
fistl
je
pop
cmc
jp
stc
mov
lock
mov
inc
inc
push
ljmp
movsl
hlt
out
ret
aam
in
repz
adc
cmpsb
addr16
std
or
sub
stc
loopne
cmp
test
sub
and
cmpsb
dec
addr16
out
insl
mov
cltd
xchg
andb
xor
movsl
mov
imul
dec
jbe
inc
sub
hlt
push
mov
pop
rcrl
inc
fnstenv
push
push
push
in
pop
xor
push
jl
lds
pop
xor
mov
loop
mull
test
test
adc
inc
xlat
add
roll
fldcw
dec
mov
add
out
pop
jmp
pop
lea
dec
pushf
mov
xchg
push
movsb
mov
cmp
std
test
or
add
dec
xchg
in
sub
xchg
pop
mov
or
push
jp
xor
lret
jg
repz
and
mov
bound
imul
mov
inc
das
ret
arpl
sahf
mov
xchg
mov
rorl
mov
mov
jl
and
sub
add
jle
rcrb
jne
clc
in
ja
push
jno
js
push
jecxz
jo
ljmp
rorb
push
adcb
cmc
fstpt
mov
fchs
xlat
in
std
shl
push
and
ret
dec
adc
adc
pop
sbb
insb
scas
lret
adc
sub
jl
push
sbb
ret
in
aaa
fsubl
xor
loop
inc
hlt
xlat
mov
fwait
pop
dec
lock
jns
data16
xor
mov
cmp
ja
aaa
cmc
sub
mov
loopne
outsl
movl
xor
and
sbb
dec
sub
aad
es
imull
xor
dec
dec
cmp
js
bound
es
lods
addb
imul
fldl
mov
pop
sub
cld
movsb
sbbl
jb
popa
mov
and
mov
and
mov
inc
cmpsl
xchg
xchg
mov
cli
push
int3
jmp
outsb
jmp
push
or
pop
push
in
lret
mov
rcll
loope
pop
std
dec
inc
stos
cmpl
jae
fld
fisubrs
push
mov
inc
push
ss
xchg
jg
je
dec
push
pop
push
movsb
xchg
and
push
xlat
and
inc
push
rorb
xchg
sbb
cltd
out
arpl
push
or
sub
hlt
js
or
inc
or
decl
insb
lcall
stos
and
adc
jo
mov
inc
cwtl
xorl
sahf
cs
in
adc
ret
test
mov
push
subl
es
in
cmpsl
iret
jmp
sti
mov
aaa
add
cmp
rcl
add
push
and
lock
push
sbb
mov
gs
push
test
js
lret
sub
pop
mov
add
movb
aas
hlt
mov
gs
out
mov
and
jbe
push
pop
hlt
mov
test
inc
dec
js
jnp
in
mov
sbb
pop
lcall
and
inc
mov
cmp
mov
jmp
inc
repnz
pop
add
dec
ljmp
arpl
or
fwait
les
sahf
mov
mov
pusha
bound
fstl
test
loop
cmc
dec
xchg
mov
gs
and
movsl
stos
jo
mov
lcall
mov
imul
inc
lcall
fcmovb
jp
sbb
cmp
cs
out
in
lahf
xchg
lret
popa
insl
mulb
push
hlt
push
dec
xchg
inc
pop
sub
fcompl
setne
xchg
add
andl
dec
out
sub
fisubrl
push
or
insl
test
pop
push
icebp
ja
inc
insb
adc
mov
and
push
je
jl
sub
add
mov
and
xor
jl
hlt
aas
cmpb
aas
and
nop
inc
js
cmpl
xorb
sub
pop
cltd
sub
push
pop
xchg
inc
adc
mov
subb
mov
dec
mov
test
das
stc
js
lret
movsl
out
jg
add
pusha
ret
mov
push
jae
je
call
cmp
orl
imul
adcb
and
das
fbstp
inc
in
loope
xor
in
jns
lods
pop
add
sbb
mov
push
out
mov
in
jp
xchg
mov
xchg
jnp
aam
mov
dec
mov
jo
jmp
and
xchg
fs
push
pop
and
pop
mov
test
clc
jmp
scas
adc
or
jecxz
shl
in
mov
pop
jl
lods
jno
rorb
mov
xor
movsl
mov
pop
test
enter
xchg
jae
mov
test
adc
imul
lret
xchg
xchg
jge
xor
out
cmc
xlat
addl
int3
aaa
mov
sar
mov
fs
adc
mov
ds
stos
movsl
xchg
filds
sbb
cmp
inc
fcoms
adc
loop
xchg
mov
mov
dec
arpl
and
sub
inc
arpl
cmp
test
repz
xchg
testb
ret
test
nop
stc
out
stc
or
lock
in
mov
fcompl
data16
js
jmp
inc
push
shlb
imulb
pop
jmp
test
rcl
addr16
xchg
dec
push
call
in
out
int3
adc
icebp
imul
insb
cltd
push
out
dec
mov
and
inc
xchg
ficompl
xchg
fcmovnb
subl
mov
push
cltd
mov
or
mov
scas
popf
aas
adc
inc
mov
jecxz
xor
inc
or
in
aas
and
cmp
dec
popa
push
ret
ds
sbb
jne
aaa
pop
sub
sub
dec
and
xorb
pop
xchg
xchg
test
jno
push
fsubrp
into
mov
das
cmp
xor
push
xchg
and
mov
jnp
or
xchg
pop
stc
daa
push
test
mov
push
add
adc
xchg
das
iret
sbb
mov
push
pop
sti
push
jb
mov
fs
sti
mov
addb
cltd
insl
and
or
addr16
add
mov
outsb
adc
xchg
into
fcoml
bnd
loope
outsb
inc
inc
jae
and
sub
loope
dec
in
mov
lea
sub
xor
scas
adc
loope
fisttpl
add
adc
dec
test
and
daa
or
mov
sub
ret
sbb
jmp
and
cwtl
push
fwait
push
xor
leave
sub
das
arpl
outsb
mov
std
xchg
in
fists
pop
inc
in
in
inc
push
xor
call
mov
test
not
in
pop
aaa
js
ficompl
push
scas
in
aam
jbe
movzbl
shlb
mov
es
jno,pn
roll
into
jge
adc
pushf
outsb
xchg
enter
jbe
out
jne
xor
push
xor
jg
shl
hlt
jne
mov
sub
dec
or
or
movsb
pop
mov
imul
into
add
add
gs
jo
cld
aad
mov
jbe
cmpsl
rorl
push
pushf
les
push
mov
inc
mov
fdivs
mov
aam
cwtl
add
cmp
call
xchg
mov
xchg
cmc
fcmovne
xor
hlt
add
xchg
pavgw
cmp
xchg
ss
add
dec
out
fnstsw
inc
jne
or
xlat
out
loop
rclb
notl
sub
xchg
add
aad
xchg
cmp
push
inc
scas
test
pop
hlt
cmpsb
lcall
in
popa
pop
movsl
adcl
adc
imul
mov
jne
push
fnstcw
jae,pn
lret
adc
sub
add
aad
sub
cmp
or
icebp
out
test
jg
cltd
xor
push
dec
pop
outsl
cmp
cld
dec
mov
sbb
scas
cmp
fldcw
mov
mov
adc
arpl
sub
sbb
shll
push
xchg
jg
mov
ret
push
pop
add
xchg
adc
nop
into
mov
xor
mov
adc
lea
pusha
int3
cmpsl
leave
pop
mov
ds
push
stc
mov
test
fsubl
push
movsl
cmp
sub
mov
jmp
cmpb
dec
lahf
nop
adc
dec
jl
test
in
notb
mov
addr16
imul
lret
adc
aad
pop
dec
enter
nop
lds
mul
pop
sbb
aam
sbbb
sub
push
lret
cmpsb
or
sarl
lods
jmp
dec
add
lahf
in
sub
stos
sahf
lahf
sbb
loope
xlat
jmp
imul
jecxz
gs
sub
cmpsl
push
mov
mov
mov
pusha
dec
pop
cli
mov
mov
mov
push
mov
dec
call
enter
cld
push
in
rcrl
cmp
jecxz
ret
or
jl
add
divl
rol
mov
mov
nop
movsl
fldcw
sbb
out
inc
and
push
stc
fidivrs
in
sub
pop
repnz
lcall
outsb
dec
out
lret
pop
push
lods
push
xlat
nop
out
push
mov
mov
in
lret
addr16
arpl
cmpsb
mov
jnp
mov
std
pusha
inc
test
les
repnz
pop
movsb
or
inc
xchg
mov
into
jl
jo
add
test
pop
and
out
loop
in
mov
aas
cmc
in
push
mov
mov
inc
negl
and
pop
or
or
scas
icebp
test
jge
mov
test
mov
mov
fwait
xchg
incl
aad
mov
xchg
add
movsb
add
or
mov
inc
sub
dec
push
test
dec
xor
cmp
cmp
xor
in
cmp
xor
xchg
out
push
and
or
pop
lret
lahf
imul
es
insl
push
pushf
pusha
xchg
je
fwait
push
mov
movsl
or
lcall
pop
std
les
cmp
xor
aaa
scas
inc
xchg
mov
ljmp
ret
rcr
inc
movsl
xchg
jge
popa
loop
imul
push
mov
in
shl
xchg
icebp
sub
pop
lret
test
pop
ss
inc
lahf
std
sub
sbb
cmp
xorl
jl
mov
dec
sub
mov
das
int
push
jmp
add
cli
sar
fxch
pop
sbb
mov
lret
fs
pop
out
sahf
jns
push
dec
gs
adc
mov
scas
mov
jnp
adc
inc
sarl
and
and
frstor
mov
scas
iret
adc
jns
cmp
push
cmpsl
push
loopne
dec
inc
cltd
pusha
lods
push
cs
push
stc
lret
sbb
inc
aaa
mov
adc
fucomp
inc
test
arpl
mov
fidivrl
out
pushf
jle
repz
mov
lock
fmuls
jmp
adc
std
lock
repnz
jle
adc
popa
jae
sub
push
jnp
adc
imul
xchg
pop
adc
lea
dec
ret
data16
hlt
cmc
fmull
in
push
lds
sub
cmp
out
fucomip
pop
inc
pop
loop
pop
dec
jne
out
test
jg
pop
sbb
in
lods
adc
aas
xor
mov
sbb
inc
loopne
dec
add
mov
insb
mov
loopne,pn
jl
and
loopne
and
sahf
fldenv
lret
pop
aas
inc
loop
jge
mov
pop
mul
pop
and
push
lret
popa
and
or
roll
divb
pop
imul
test
sub
stos
sub
test
sbb
jecxz
aam
cs
xor
icebp
mov
movsb
lods
ds
sub
daa
test
mov
ret
pop
pop
jae
cwtl
shrl
das
aas
gs
mov
iret
mov
inc
inc
lods
insl
cli
xchg
jne
scas
sarb
sub
loope
test
pop
lods
movsl
pop
testb
mov
add
jmp
decb
and
leave
into
lret
push
pop
in
mov
mov
ds
stos
add
fwait
xor
idivl
adc
jmp
pop
mov
fs
mov
test
gs
mov
mov
pop
cmc
ror
inc
iret
sbb
xor
bound
or
push
loopne
test
jo
sub
sub
loop
jle
icebp
sbb
stos
ret
sub
insl
loope
jl
jg
jns
push
cmp
push
dec
cmp
add
add
mov
icebp
stc
ljmp
ja
int
sub
inc
jge
xor
xchg
cmc
jo
fidivrs
js
aad
int
xchg
sbb
adc
add
outsl
or
cmpsb
icebp
stos
inc
in
pop
cmp
jo
adc
loop
mov
add
ss
jns
xor
push
pop
rolb
and
ficomps
shll
sub
loopne
pop
adc
scas
dec
jecxz
sub
fstl
imul
bound
xor
adc
pop
jp
push
call
ret
je
jno
sbb
fbld
test
xchg
push
push
jae
loopne
mov
in
xchg
jno
ljmp
lcall
pop
xor
pop
sub
add
cmp
in
sub
xchg
jecxz
outsb
mov
xor
fldt
repz
mov
and
inc
xchg
inc
rcrb
push
subb
cmp
sub
fnstcw
int3
adc
sbb
jp
xchg
xor
leave
jnp
ficomps
pushf
add
shl
cmpsl
sub
jnp
and
jp
and
cli
mov
stos
mov
bound
mov
lcall
cmp
mov
mov
fwait
add
pop
out
mov
hlt
or
xchg
push
arpl
cmp
adc
push
sti
ljmp
stc
mov
xlat
sbb
cmc
stc
std
fisttpll
jmp
inc
pop
mov
iret
addr16
pop
adc
aad
mull
or
out
arpl
mov
jbe
adc
cmp
mov
jo
scas
fadd
outsl
pop
outsb
int3
je,pn
aam
inc
mov
loope
call
ror
loop
cmpsl
out
int3
aam
int
int3
mov
cmp
adcl
cmp
movsl
pop
and
push
addr16
sub
in
test
ret
add
loopne
ss
lods
adc
xchg
cmc
sbb
popa
add
mov
cltd
dec
dec
ds
xchg
pop
and
mov
mov
jl
mov
repnz
mov
stc
out
jg
push
bound
dec
jp
push
aam
jne
jnp
jp
jb
leave
jo
cmp
shl
in
inc
lss
mov
scas
movl
cmpsb
inc
and
iret
lods
jae
jmp
popf
fldt
xchg
jecxz
cld
pop
movsl
faddl
sub
cmp
xor
imul
xchg
xchg
mov
push
push
adc
dec
pop
movsb
bound
mov
mov
xor
lods
and
mov
pop
add
stos
jmp
mov
ss
xchg
imul
nop
pop
rep
and
adc
mov
lods
ja
cli
lret
pop
dec
add
or
adc
fnsave
pop
fadds
xor
or
mov
lock
mov
push
jg
pop
lea
popf
inc
int3
stc
adc
imul
sti
mov
sbb
aad
push
pop
pop
xor
cltd
pop
mov
mov
out
sbb
mov
in
lahf
jge
push
adc
xchg
sbb
out
into
dec
mov
jl
aam
sub
push
dec
sbb
inc
xor
pop
fcom
popa
or
out
dec
ds
andb
popa
mov
jle
insl
or
add
inc
jbe
push
pop
test
cmpsb
loop
outsl
das
outsl
loop
and
mov
insl
mov
lea
aad
pop
clc
pop
xchg
insb
out
test
loop
mov
inc
les
and
nop
and
aad
lcall
fwait
sbb
mov
mov
add
cmc
cmpsb
pop
inc
je
xor
pusha
mov
push
loopne
push
jg
mov
pop
sub
inc
inc
sbb
mov
jns
xor
movsb
pop
mov
xchg
adc
loopne
mov
mov
dec
lret
ret
ret
xor
push
inc
shll
push
cmpsb
or
add
rcrb
xchg
xor
fbld
adc
out
mov
shlb
std
fbld
rcrl
pop
shlb
and
outsl
dec
mov
xchg
stos
jns
or
fwait
lea
jecxz
cmp
bound
stos
sub
cltd
stos
inc
push
test
jecxz
or
fwait
outsb
fimull
mov
and
or
test
std
dec
sbb
dec
cwtl
int
outsb
mov
xchg
mov
into
dec
sub
pop
add
aaa
arpl
mov
int
lahf
mov
push
into
mov
lcall
push
sbb
arpl
insl
ja
fsubs
fisttpll
xchg
je
mov
dec
ss
iret
fs
sbb
cwtl
cmc
sub
sub
cmc
add
xor
cmc
cmc
mov
test
sub
ficompl
cmp
push
dec
mov
jnp
mov
mov
mov
add
testb
fld
jae
add
mov
aas
xchg
xor
repz
fildl
dec
repnz
push
mov
icebp
mov
cld
es
adc
dec
iret
add
push
scas
mov
sub
mov
pop
xor
xchg
cli
into
jo
push
sahf
fwait
jmp
xor
mov
mov
mov
in
daa
lret
and
jge
jbe
sbb
enter
xchg
mov
jecxz
mov
enter
mov
cmpsl
pusha
jmp
push
fwait
lcall
sub
sub
cmp
mov
fdivp
jo
out
icebp
pop
mov
stos
and
inc
mov
std
nop
lret
xchg
ret
push
aas
frstor
jmp
je
mov
loope
fildll
pop
fwait
imul
int3
xor
jecxz
add
nop
mov
pushf
cmp
sarb
cmp
and
push
push
cmc
pop
fldenv
imulb
pop
mov
push
fidivrs
scas
dec
mov
push
inc
addr16
dec
mov
shll
xor
filds
dec
hlt
scas
xchg
fnstcw
js
lods
sbb
aam
cmpsb
fsubl
adc
mov
lods
loop
mov
ret
lret
pop
mov
ds
pop
clc
jge
adc
fcomp
in
mov
cltd
mov
cld
push
loop
mov
out
loop
sub
adc
sub
bound
jge
jne
xchg
cmp
rorl
scas
add
mov
aam
dec
fwait
mov
push
lods
imul
cmc
stos
vshufps
int3
pusha
cld
fwait
loopne
mov
mov
xchg
movsb
enter
hlt
push
lods
xchg
dec
clc
and
mov
xchg
dec
in
imul
ljmp
out
push
push
out
push
out
in
mov
in
mov
mov
pop
ljmp
add
dec
imul
int3
push
push
test
jmp
inc
pop
cmpsl
mov
mov
test
or
mov
das
aaa
in
dec
sbb
xchg
sub
imul
jno
ljmp
jmp
push
stc
in
je
in
or
jl
lds
pop
outsb
pusha
xor
in
inc
inc
pop
pop
mov
cmc
lock
mov
push
jp
loope
fdivrl
lds
mov
mov
adc
and
imul
inc
rorl
mov
push
jp
and
push
xchg
push
mov
in
shlb
sti
shr
xchg
or
mov
lret
das
ret
mov
call
jo
push
xchg
out
cmc
and
jecxz
sub
mov
pop
mov
xchg
fs
sub
lret
xor
add
or
stos
popa
inc
push
add
add
lret
rcrb
xlat
push
idivb
insl
enter
xchg
lods
push
popf
sbb
add
shrb
test
cmp
jbe
or
xchg
enter
jmp
inc
xor
xor
pop
dec
pop
jmp
add
dec
iret
cwtl
mov
and
outsb
inc
inc
xor
add
out
inc
call
fistpll
fdivl
sti
gs
jnp
stc
push
jp
jge
mov
jns
cmp
push
decb
mov
lret
add
lcall
js
and
cltd
push
adc
cltd
icebp
or
push
jle
int
sub
xadd
or
mov
push
lock
cmpsl
inc
adc
loopne
testl
cld
push
fcmovne
xor
mov
jmp
shlb
outsl
pop
daa
or
lds
stos
mov
insb
das
in
lahf
movsb
jmp
mov
movl
or
in
lock
shl
push
mov
ret
pop
mov
shll
outsb
ljmp
push
mov
jmp
sub
lods
sub
mov
outsl
lret
insb
inc
push
mov
mov
call
ret
cltd
jbe
xchg
push
add
data16
sub
sub
insl
out
cmp
mov
movsl
outsb
inc
mov
aad
inc
jle
dec
in
testl
xor
xor
popf
outsb
inc
cmp
in
lock
fsts
movsb
fidivl
mov
or
popa
adc
jo
lods
pushf
dec
out
jmp
xchg
and
sahf
jns
jnp
add
dec
loope
xchg
ss
and
xchg
xlat
cmpsb
and
mov
test
nop
push
mov
push
in
lea
jecxz
xor
loope
cs
sbb
inc
or
lahf
jge
fwait
sbb
sbb
cmp
lods
mov
sub
into
out
imul
ja
fwait
fs
adc
dec
cmp
sub
push
in
std
mov
cmp
add
leave
mov
out
icebp
cmpsb
fistl
bound
scas
movsb
into
scas
sub
inc
data16
push
int
jne
lcall
mov
loope
cs
fs
stc
je
pop
leave
sti
icebp
and
xor
inc
imul
cmp
dec
push
pop
xor
xchg
leave
or
xchg
arpl
adc
int3
inc
scas
or
pop
jl
mov
and
clc
jp
divl
jae
dec
loop
icebp
xor
outsb
sbb
push
lods
test
mov
fistpll
dec
cmp
mov
loope
xchg
add
addb
pop
ret
push
push
xor
dec
fldt
int3
mov
jle
imul
sbb
or
lret
jp
cmp
inc
sub
sbb
outsl
cmp
xor
mov
jl
ror
add
xor
fcoml
outsl
mov
pop
push
pop
adc
inc
dec
xor
cmp
push
or
jnp
scas
pop
mov
jo
daa
lea
adc
rcr
jnp
mov
into
add
or
mov
fldenv
insb
mov
dec
jge
push
adc
push
out
hlt
and
in
sbb
imul
test
or
imul
sahf
dec
aam
bound
movsb
xor
leave
cmpb
adcb
mov
repz
ljmp
xchg
cmc
shlb
mov
fs
in
mov
jecxz
roll
sub
pusha
test
add
sbb
outsb
aad
push
rcll
or
jne
xchg
or
outsl
rcll
fdivs
push
outsb
jge
adc
and
pop
mov
mov
adc
cmpb
cwtl
jecxz
fwait
sbb
cmp
in
xor
popa
std
int
push
js
inc
xchg
pop
push
add
push
int
test
push
arpl
xchg
stos
mov
pop
dec
cmc
in
ret
fcompl
es
out
cmp
or
dec
push
add
mov
jnp
loope
cmpsl
ja
sub
bound
mov
js
rolb
pop
pop
mov
aas
sub
std
loopne
test
xchg
sbb
or
pop
frstor
adc
xchg
pop
or
mov
rolb
sahf
push
loope
aam
pop
mov
fdivrp
pop
call
int3
lods
mov
repz
movsb
xchg
outsb
push
push
sbb
sub
pop
sbb
mov
and
rcrb
cltd
lods
cmp
xor
cmc
cmpsb
cmp
jmp
das
sbb
mov
icebp
and
cmpsl
popf
fmulp
xor
inc
insl
dec
inc
sahf
and
stos
jle
in
sub
push
mov
fsubs
mov
pushf
insb
rclb
and
pop
mov
jle
inc
imul
call
xor
adc
jmp
jbe
mov
add
jnp
jge
out
mov
or
cmpsb
mov
mov
int
push
sub
xor
pop
std
or
shrl
in
repz
mov
mov
inc
pop
jg
test
pop
mov
rcrb
adc
cmc
lods
jne
inc
gs
add
addr16
adc
mov
scas
mov
sbb
int
jne
jp
xchg
push
mov
xorb
insl
fs
loope
inc
sbb
pushf
add
add
inc
outsl
add
or
outsl
xor
mov
outsb
rcll
jle
jmp
jp
mov
sbb
inc
int
cli
adc
sti
fimuls
orl
mov
adc
push
outsl
iret
pop
nop
inc
das
imul
icebp
dec
add
out
icebp
das
arpl
inc
sbb
push
repnz
ret
nop
scas
fs
imul
movl
movsl
sub
jmp
push
or
dec
push
pop
ljmp
popa
add
push
xchg
repz
sti
cmp
les
jnp
lock
stos
jle
stos
sub
push
jb
sbb
cltd
shrb
insl
mov
xor
aam
push
ret
xor
std
movsb
out
pop
daa
sti
mov
pop
pusha
test
or
pop
ljmp
or
insb
pop
lock
mov
out
stos
cld
push
pop
inc
loopne
outsb
es
icebp
push
push
imul
jp
in
lock
stos
xchg
cmc
fdivl
mov
lret
mov
or
sub
lea
dec
and
imul
xor
cmp
pusha
xchg
movsl
cmpsb
dec
aad
lahf
hlt
test
aam
pusha
dec
cmp
cmp
and
fwait
jns
xlat
aad
push
add
sub
add
dec
sub
popa
xchg
mov
stos
les
addr16
xchg
jmp
mov
sub
or
xor
mov
sub
dec
push
and
xchg
stos
addl
in
lea
andl
das
sub
enter
jae
jl
in
push
dec
icebp
clc
and
xchg
insl
outsb
repz
sbb
or
out
push
jle
push
mov
mov
pop
ljmp
xchg
popa
adc
faddl
or
pop
call
sub
les
adc
mov
cwtl
sub
gs
mov
gs
jge
pop
and
jmp
fs
jle
jle
leave
mov
cmp
push
ret
insb
std
lea
lcall
add
pusha
pushf
imul
jge
inc
sbb
cmp
jmp
fiadds
xchg
dec
jg
and
sbb
sbb
mov
jbe
rcll
fnstcw
ret
jmp
and
movb
push
adcb
mov
mov
xchg
push
xchg
mov
pop
faddl
mov
out
lock
notb
mov
push
mov
leave
or
pusha
or
and
dec
sbb
xor
sub
dec
dec
mov
ret
add
sbb
and
xchg
inc
stc
jbe
fidivrs
int3
lods
push
dec
shrb
pop
dec
ds
fwait
hlt
xchg
xchg
frstor
sbb
mov
loop
popa
cwtl
mov
inc
repnz
xorb
mov
jp
xor
sbb
push
les
cld
mov
cmp
stos
xchg
stos
loopne
pop
sub
out
push
mov
xchg
fdivrl
dec
fisubs
xchg
mov
jno
fnstcw
ja
cmpsb
push
shrb
cltd
pusha
dec
dec
sbb
and
jmp
pop
loopne
push
cmpsb
das
in
sub
xor
mov
xor
dec
lods
sbb
mov
jne
adc
cmp
and
insb
cmp
outsl
rclb
push
inc
lahf
lahf
mov
xchg
imul
outsl
lods
mov
popf
daa
mov
xlat
mov
xor
jb
push
mov
mov
pop
dec
cmp
dec
add
push
push
mov
jnp
aaa
insb
ja
lods
mov
mov
enter
jo
fwait
addr16
jge
or
push
push
sahf
push
out
cmc
and
cmpsb
je
outsl
fiaddl
stos
in
roll
mov
adc
scas
jecxz
jp
fwait
outsl
iret
pushw
push
push
adc
cld
sbb
jle
addr16
and
and
hlt
aaa
int3
fcmovne
jns
icebp
pop
ret
dec
je
jle
sbb
notb
jmp
mov
push
adc
lock
popa
insb
add
push
push
xlat
clc
daa
pop
ljmp
bound
jge
fmull
subb
popf
push
and
out
fsubrs
xor
xchg
mov
dec
adc
xorb
sub
jo
lahf
test
xchg
int
stos
stos
push
push
xorl
adc
test
lea
out
icebp
lahf
mov
sbb
outsl
mov
sub
cmc
jne
cli
pop
jae
stc
arpl
mov
sub
mov
xor
shll
adc
and
out
push
push
arpl
xor
pop
xor
cli
sbb
sub
stos
adc
cmp
mov
pusha
push
and
and
sahf
test
arpl
aam
mov
leave
lds
dec
rcrl
jl
andb
clc
xchg
mov
sbb
and
mov
add
or
ja
hlt
jo
sarb
push
jo
rcl
jno
stos
clc
imul
ret
xchg
enter
mov
fucomp
xlat
imul
dec
or
sti
pushf
mov
or
sub
and
shrl
jae
and
sub
popf
sub
fwait
pop
adc
mov
aaa
jnp
mov
mov
out
xor
sbb
scas
aad
pop
cmp
bound
in
mov
cmpb
or
lods
stos
stc
mov
cs
push
inc
or
push
adc
mov
jmp
in
mov
inc
add
add
rcrb
push
nop
sti
shrl
out
scas
fnstenv
dec
mov
test
arpl
xchg
ja
pushf
icebp
in
add
jmp
mov
jb
and
jns
cs
and
mov
cwtl
les
lret
lods
lahf
pop
ds
sub
xchg
push
bound
jmp
in
and
aam
cwtl
out
xor
idivl
out
or
push
push
pop
fs
ror
cltd
jmp
imul
pop
dec
imul
adc
xor
push
imul
pop
dec
mov
loope
xor
xchg
test
cmp
or
jmp
scas
xlat
rcrb
jae
sub
add
inc
xor
add
cmpsl
mov
sub
add
xor
mov
into
or
pop
lcall
out
inc
dec
and
dec
lahf
cwtl
pop
shlb
mov
mov
push
cmp
lcall
iret
aaa
dec
sub
xchg
dec
ret
out
add
lds
push
fisttps
or
and
add
push
pop
mov
pop
fidivs
push
clc
jp
cmp
loope
popf
mov
and
jl
and
nop
adc
mov
xchg
mov
sub
leave
push
mov
mov
lods
sbb
sbb
push
jbe
scas
stc
and
leave
mov
lret
inc
mov
xchg
sti
iret
clc
sbb
sub
sbb
les
pop
xchg
dec
shrb
mulb
daa
jno
xor
or
jecxz
jns
dec
jmp
mov
sti
sti
mov
lods
movb
fucom
pop
xchg
mov
pmovmskb
jbe
pop
addr16
aaa
pop
in
push
aaa
xor
shrl
hlt
lds
cmpsl
ret
imul
jg
ffree
inc
sub
outsb
xchg
or
adc
push
jno
lret
stos
daa
sahf
outsl
lret
in
cmp
push
or
das
inc
inc
and
dec
dec
fdivrp
leave
pusha
addr16
jo
mov
add
outsb
filds
mov
fistps
and
pop
cli
fldt
hlt
xchg
and
repnz
pop
lea
daa
pushf
cmpb
inc
lahf
stos
cwtl
push
mov
je
jns
adc
and
or
add
sbb
aaa
loop
inc
sub
mov
pop
jbe
jno
cmp
sub
out
inc
filds
rorl
inc
push
mov
daa
sub
jbe
shrb
test
mov
aas
aas
push
inc
xor
pop
sub
mov
flds
adcl
mov
push
imull
push
sahf
mov
cwtl
sub
jae
fcmove
popf
jb
jmp
fwait
dec
bound
in
cmp
cmp
mov
cmp
inc
pop
add
mov
in
loope
jns
sbb
pop
movsl
push
dec
inc
pop
or
jnp
dec
jmp
pop
mov
cmp
out
stos
and
add
outsl
push
insb
stos
je
mov
ret
push
adc
call
mov
repnz
push
mov
sbb
cmp
imul
and
inc
negl
mov
push
cmp
je
xchg
ds
decb
lock
ret
lahf
rorl
cmp
shl
and
ret
cmp
xlat
jns
insl
cmp
jo
jo
jge
sub
mov
mov
jns
scas
dec
cwtl
cwtl
jbe
or
mov
cmp
push
sahf
cmc
call
lods
jecxz
mov
cltd
std
js
iret
add
aam
jae
jb
xlat
loope
fs
pop
jo
insl
in
movsb
cltd
mov
sub
int3
pop
es
insl
and
mov
mov
sbb
icebp
jne
inc
paddb
cmp
sub
orl
jae
idivb
int3
push
sbb
adc
jnp
adc
div
inc
jmp
fcomps
or
dec
test
sub
rolb
mov
cs
fmull
lods
js,pn
in
scas
cltd
xchg
call
cmp
adc
adc
or
wbinvd
sub
insl
pop
pop
and
push
adc
outsb
cld
sti
adc
fldenv
testb
test
and
lock
mov
add
dec
or
jne
sti
insl
pop
and
mov
nop
pop
imul
les
xchg
jmp
stc
inc
sbb
movups
mov
mov
cmpsb
scas
in
int
fstpt
in
mov
jb
sub
or
add
fcmovne
jp
mov
mov
call
sbb
push
adc
sub
fmuls
pushf
sub
gs
cmp
pusha
sbb
cmp
mov
test
pop
mov
mov
and
movsb
in
inc
mov
imul
je
js
lea
sbb
enter
rolb
adc
mov
dec
dec
addr16
xchg
pop
adc
mov
in
ret
test
loopne
sbb
fisubl
xor
bound
mov
mov
ja
popa
push
inc
sahf
cli
out
sti
gs
mov
hlt
enter
lret
lea
pop
and
jnp
pop
xchg
data16
out
jmp
cmp
jne
pop
jne
or
pusha
cli
push
sti
mov
popa
jl
mov
shrl
adc
imul
lcall
xchg
dec
stos
dec
movsb
pop
sbbl
inc
bnd
push
in
cmpl
fs
or
out
xor
jge
xor
pop
sub
arpl
pop
into
ret
mov
jp
fucom
push
dec
ljmp
mov
xor
mov
cld
xchg
fnsave
imul
sub
xor
imul
ffreep
adc
dec
sti
enter
imul
and
push
mov
rol
aam
mov
jge
ret
pusha
mov
cmpsb
fnstsw
mov
into
pop
cmc
cltd
cltd
xor
xchg
sub
jg
loopne
outsb
jb
pop
and
add
cmp
test
or
into
addr16
sub
fldl2t
jmp
mov
fcomip
mov
or
mov
push
std
xchg
movsb
jmp
jnp
jo
pop
scas
pusha
jmp
fnsave
push
xchg
mov
das
fsubr
push
out
jo
movsb
cmp
mov
inc
icebp
inc
pop
and
adc
in
andb
jl
xor
es
jns
sub
fdivrs
mov
dec
pop
mov
orb
pop
std
pop
inc
out
test
push
adc
iret
pop
push
xchg
mov
aaa
stc
inc
gs
adc
mov
lods
jo
jge
mov
xor
jge
sysenter
ja
in
es
mov
ret
pusha
cmp
ljmp
dec
mov
cld
scas
mov
jb
mov
adc
jecxz
ds
adc
cmp
dec
rcr
add
add
lds
jae
inc
mov
bound
fmuls
cmp
xor
test
rcll
mov
dec
mov
lods
adc
sub
fnstenv
in
icebp
mov
and
rolb
out
inc
xor
mov
add
inc
ja
sub
xor
call
inc
arpl
mov
movsb
fs
cwtl
mov
inc
dec
js
adc
addr16
lret
inc
mov
sbb
int
aas
pop
fistl
mov
das
sbb
xchg
mov
outsl
ds
mov
mov
loop
andb
add
imul
sub
out
or
or
js
xlat
icebp
dec
insl
stc
jnp
mov
sub
hlt
and
xchg
lock
imul
test
mov
cmpsb
rcl
mov
and
repz
mov
movsl
fnstcw
pop
xor
inc
dec
es
loop
je
adc
lds
faddl
js
adc
ret
mov
dec
cmp
bt
shl
or
inc
adc
xchg
and
and
adc
gs
imul
es
testl
mov
xor
cmp
push
hlt
mov
fisttpl
sub
in
dec
sub
cmp
mov
call
pusha
sub
jne
shll
xchg
adc
sub
and
or
mov
ljmp
pop
add
fstl
mov
hlt
xchg
and
mov
pop
mov
xor
mov
jb
inc
and
adc
jns
cmp
xchg
jmp
dec
xorl
rcll
jge
in
stc
lahf
lahf
xchg
jge
xchg
lret
xlat
pop
int
sbb
cld
movsl
aad
adc
adc
lcall
sbb
jmp
pop
mov
jl
cmp
insb
sti
lret
int
lcall
cmpb
mov
repnz
ret
rolb
or
jp
inc
pop
sub
fsubrl
pop
mov
pop
lods
xchg
mov
push
push
push
shrb
rolb
and
inc
inc
and
sbb
cli
int3
hlt
mov
inc
and
jo
dec
xchg
arpl
leave
jmp
jo
mov
jae
dec
pushf
and
mov
stos
cmp
sar
lret
xchg
imul
mov
pop
sbb
xor
xchg
std
out
lock
push
cmpsl
mov
jnp
add
out
push
dec
arpl
pop
dec
jecxz
xlat
adc
mov
mov
adcb
mov
cmpsb
xor
gs
outsl
insb
popf
xor
lods
jmp
addr16
jecxz
xchg
out
mov
or
xchg
adc
mov
mov
popa
test
sub
in
push
dec
lret
rclb
jno
arpl
fwait
or
clc
mov
cmpsl
inc
sbb
push
cltd
xchg
sub
inc
fdivrl
pop
xchg
loope
mov
iret
movsl
jne
jae
xor
pop
mov
ljmp
mov
push
xlat
mov
fmulp
sub
cltd
add
fisubrl
ja
mov
xor
xchg
dec
cmpsb
aad
fucomi
add
and
shlb
dec
and
pop
icebp
jge
js
mov
test
or
pusha
mov
loop
mov
ret
xchg
movsb
dec
lea
stos
fidivl
pop
or
dec
push
in
jp
mov
pop
mov
les
dec
cmp
imul
in
orb
insl
xorl
cmp
jb
inc
pop
xor
lcall
and
sub
into
and
mov
int
arpl
push
mov
xor
js
cmp
jecxz
xor
lea
rcr
mov
fstl
ret
jg
imul
mov
sar
jle
cmp
xchg
sti
pop
fisubs
sub
fmull
stos
push
sbb
and
sbb
mov
push
or
and
leave
dec
jnp
mov
hlt
adcb
sbb
jne
jbe
jmp
shll
dec
pop
lds
xchg
mov
pop
mov
jns
out
out
mov
pop
arpl
shrl
or
or
ja
sub
xchg
xchg
or
mov
out
inc
mov
xchg
and
xor
push
dec
xchg
rdpmc
mov
lcall
loope
adc
mov
mov
mov
pop
stos
pop
pop
outsl
xchg
fldt
jecxz
test
cmp
xchg
in
push
mov
mov
cmp
push
sbb
icebp
xor
xchg
pop
xor
add
es
sbb
movb
mov
jl
lods
loop
stos
das
mov
inc
jbe
mov
cmpsb
xchg
sub
sub
orl
sbb
sub
in
stos
into
mov
mov
mov
ret
adc
and
movsb
dec
loop
mov
fmulp
loop
pop
xchg
add
xorb
jbe
ss
decl
das
pop
popa
and
in
adc
mov
movsl
jmp
ljmp
or
mov
outsl
and
mov
ret
dec
mov
inc
aam
sub
jae
aaa
xor
arpl
into
aad
sbb
fucomip
inc
mov
inc
lods
xchg
push
pop
dec
fstpt
loope
mov
pushf
int3
jo
in
xlat
mov
add
stos
mov
adc
test
bound
push
mov
xchg
leave
sbb
cmp
fisttpll
add
jl
adc
pop
ds
jne
pop
jb
add
rcr
push
lock
in
lock
xchg
pop
mov
pop
mov
icebp
jns
lds
xchg
push
fisubrl
cld
cmp
sub
ud2
xchg
pop
xor
lods
aad
insl
bound
xor
sbbl
cmp
insl
cwtl
jp
xor
xchg
or
xchg
cmpsl
pop
xlat
mov
inc
push
ss
jle
add
insb
inc
xchg
cltd
dec
lds
cmp
jmp
push
hlt
dec
fwait
rcll
mov
loop
xchg
sub
sbb
into
out
iret
mov
jno
push
jne
inc
cmp
xchg
inc
addr16
pop
cli
jmp
imul
daa
dec
jge
xchg
addb
jno
mov
imulb
cmc
push
lea
dec
les
not
into
sbb
fdivr
mov
sbb
and
out
sbb
ffreep
xor
jbe
aad
xor
stc
jmp
jne
sub
jns
bound
push
sbb
mov
xchg
add
imul
shrb
stc
mov
jmp
lcall
cmp
fstl
xchg
popa
or
daa
jmp
scas
negb
push
jns
shrl
gs
mov
cli
cli
fldenv
inc
sbb
movzbl
out
mov
dec
out
clc
icebp
cs
inc
lea
mov
inc
add
pop
or
sub
repnz
icebp
and
mov
lret
seto
test
cltd
shl
in
pusha
mov
ret
clc
mov
or
out
jo
jg
popf
nop
pop
xchg
push
jmp
rcrb
mov
mov
lret
push
pop
inc
adc
repnz
push
pop
push
push
lahf
jmp
fmulp
adc
sbbl
pop
shll
inc
mov
fidivrs
xchg
add
jne
xlat
xor
push
xchg
mov
jmp
sbb
mov
popf
sbbl
lods
cli
cli
test
pop
loop
and
inc
jle
push
std
rcrl
pop
push
shlb
sarb
icebp
cltd
mov
cmc
and
mov
shr
inc
fnsave
enter
dec
aam
xor
data16
mov
push
add
insb
lea
cmc
std
je
mov
sbb
fnstcw
loopne
mov
jl
push
sub
daa
add
sarb
cwtl
orl
les
adcl
iret
sub
lds
lret
fwait
out
add
ret
inc
lods
xor
jae
in
shll
add
xchg
jne
ljmp
nop
mov
jecxz
negl
lock
jae
mov
dec
movsl
pop
jl
or
lahf
out
mov
loopne
lods
mov
in
lret
jae
out
in
push
call
loop
xor
aad
mov
cmc
aad
pop
pop
xchg
cwtl
pop
clc
jp,pn
frndint
push
daa
repnz
mov
jbe
sahf
pop
or
jns
hlt
call
mov
sub
xchg
daa
les
shlb
mov
dec
or
xor
xor
repz
pop
jp
jecxz
and
mov
jecxz
inc
fsubr
in
inc
sti
mov
sub
cli
loop
inc
cmp
mov
adc
push
xor
fstps
or
in
adc
cmc
adc
lcall
loop
push
mov
insl
xchg
mov
fs
shrl
in
inc
dec
mov
cmp
loop
js
cld
cmpsl
sub
dec
and
inc
sbb
std
and
loopne
mov
movsl
adc
stos
ja
lcall
lock
daa
lods
ret
orl
jp
ds
sqrtps
cmp
icebp
or
std
mov
insl
mov
dec
push
inc
addl
jnp,pn
pop
or
push
mov
push
mov
sbb
push
out
inc
sub
dec
push
adc
xor
aas
hlt
test
lods
pop
mov
adc
std
cs
inc
and
mov
dec
adc
or
or
dec
adc
sbb
and
icebp
hlt
or
sahf
push
jo
pop
cmp
leave
mov
insl
negb
popf
iret
pop
mov
mov
sbb
pop
sbb
xchg
aad
rolb
xchg
mov
inc
test
dec
cld
mov
xchg
movsb
lock
xor
dec
int3
sbb
test
pop
mov
jge
inc
loopne
stos
fadds
shlb
mov
addr16
dec
aad
xor
fcomps
mov
sub
movsb
iret
inc
push
loop
cmpsl
cmp
repnz
jge
gs
lods
and
mov
push
fmul
repz
repz
xchg
addr16
addr16
adc
push
and
dec
add
mov
int3
pop
adc
and
and
enter
ret
das
and
bound
sbb
pop
dec
scas
xor
xchg
xchg
push
rolb
mov
mov
js,pn
push
lods
xchg
adcb
movsb
leave
mov
mov
lret
fucomip
pop
inc
dec
and
mov
int
or
inc
movsl
out
and
push
mov
jns
mov
or
cmp
jae
lods
test
jl
dec
inc
xchg
in
adc
push
enter
outsl
cltd
mov
mov
cmp
stos
jbe
clc
cmpsb
js
sbb
inc
cli
ror
mov
adc
je
lea
add
ffreep
mov
loopne
sub
fwait
pop
add
dec
lea
xlat
out
movsb
cmp
ja
adc
imull
jo
cmp
mov
idiv
pusha
jle
mov
out
pop
lock
mov
out
lahf
das
mov
sahf
ficoml
or
or
stos
hlt
out
xor
test
mov
push
sbbl
or
sub
jae
sbb
das
cmp
aam
mov
hlt
faddl
or
add
xchg
push
shrb
xchg
sahf
fwait
inc
jecxz
shl
andl
lahf
xlat
popa
lcall
ret
outsb
lods
nop
arpl
int3
imul
iret
push
adc
inc
ja
mov
fdivp
jp
push
lret
movsb
imul
mov
adc
push
or
dec
pop
pop
sarb
xchg
test
inc
pop
fst
pop
movsl
jp
aas
push
cmp
adc
push
mov
pop
aad
test
cli
out
mov
inc
repnz
mov
pop
testl
adc
inc
add
inc
xchg
xor
cwtl
sahf
add
into
ret
sub
jl
nop
test
fiaddl
xchg
sahf
adc
in
es
mov
mov
pusha
xchg
sbb
cmp
popf
fxtract
clc
imul
bound
jb
daa
and
test
xor
sti
jg
xor
pop
aaa
test
pushl
inc
inc
sub
xchg
mov
adc
xor
or
loopne
scas
cmp
hlt
sbb
add
std
cld
cli
xchg
mov
fwait
mov
mov
inc
jnp
sub
push
out
inc
sub
pop
mov
scas
add
cmpsb
lea
and
mov
mov
jne
mov
or
mov
dec
mov
jae
pop
mov
sub
subb
mov
dec
inc
push
cltd
adc
lea
and
push
fdivrp
fisubl
mov
cld
cmp
inc
mov
xchg
jbe
rclb
out
mov
sub
stos
and
xchg
mov
addb
out
iret
inc
mov
jp
or
movsl
cmp
mov
push
int3
pop
leave
sub
jo
imulb
pop
sbb
in
sub
insl
dec
fucom
sbb
clc
mov
rcr
fsubrl
scas
popf
ret
mov
out
pushf
das
ss
mov
add
inc
ror
clc
lret
shl
bnd
addb
or
mov
ja
push
cmpsl
cmp
fidivrs
or
hlt
jp
andb
xchg
xchg
jb
pop
aad
fidivrl
dec
dec
lods
fdivr
xchg
loopne
inc
adc
stos
mov
xchg
dec
fidivrl
setnp
nop
iret
xchg
pop
or
jno
xchg
mov
xorb
push
enter
xor
cmpsl
push
sbb
cli
adc
in
mov
subl
fcmovb
jne
or
in
jmp
mov
mov
popf
dec
lcall
cmpsl
cs
sub
sbb
stos
xchg
rclb
mov
mov
adcl
fdivs
in
stos
cwtl
aam
outsl
push
js
in
xchg
mov
outsb
jle
xchg
dec
mov
mov
mov
pop
adc
pop
xchg
outsl
lcall
aam
sahf
sub
xor
hlt
ja
loopne
sti
sub
xlat
xor
loop
and
push
sbb
add
jo
inc
dec
lret
pushf
dec
mov
add
dec
out
aaa
jg
and
and
movsl
sub
int3
cltd
aam
repnz
in
arpl
or
inc
mov
xchg
inc
pop
in
jl
push
push
sub
cs
in
cmpsb
lret
stos
es
clc
hlt
inc
pop
scas
pop
movsb
dec
xchg
lret
xor
inc
mov
jecxz
popf
push
jae
cmp
stos
sbb
jl
loopne
push
jmp
call
mov
les
cld
jge
mov
mov
popf
adc
and
lret
addr16
cltd
jnp
dec
in
jge
les
add
mov
inc
out
pop
data16
ficoml
dec
mov
call
aaa
das
jne
into
add
add
mov
jns
hlt
je
test
hlt
ret
shll
jne
mov
cwtl
or
fs
sbb
fdivs
inc
push
xchg
inc
sarl
arpl
mov
mov
mov
adc
iret
repz
or
jo
std
popa
mov
or
push
cmpsb
pop
ret
test
mov
adc
adc
mov
call
xor
mov
lock
inc
jns
jecxz
xchg
cmp
nop
push
cld
xor
pop
fs
shrl
jns
loope
jns
arpl
and
outsl
mov
pop
jge
out
pop
cli
xor
imul
rcl
mov
fmuls
cwtl
int
mov
mov
mov
pop
or
outsb
cwtl
and
ret
imul
jae
lret
sbb
inc
xor
pop
aad
lret
lahf
divl
and
xorl
mov
jp
ret
shll
cmp
popf
aam
rclb
test
pop
enter
inc
cmp
or
push
shrb
out
hlt
into
movsl
jnp
push
imul
add
in
xchg
and
pop
loop
mov
sbbb
ss
lea
ja
dec
mov
arpl
push
cltd
mov
add
mov
out
int
mov
xor
out
jge
call
fldt
loope
pop
aam
fisubrs
aad
scas
xchg
lahf
push
push
sub
daa
pop
or
shll
scas
add
or
dec
sti
insb
mov
std
or
dec
outsl
sbb
jge
ja
test
fisttps
hlt
xchg
add
pop
xor
cmp
ss
add
sahf
das
adc
fs
push
cld
jg
add
inc
inc
stos
adc
mov
hlt
imul
dec
and
and
or
cmpsb
sbb
dec
xlat
imul
mov
inc
sbb
jecxz
or
cmp
outsb
inc
push
repz
stos
ljmp
jge
dec
cmp
fiaddl
jns
dec
xchg
test
data16
cwtl
cmpl
xchg
repz
fwait
or
test
test
cmp
adc
nop
or
dec
xor
push
ret
test
xor
jp
in
mov
cmp
cmp
jnp
push
cmp
sbb
stos
lds
and
fcoms
das
ljmp
mov
aad
push
inc
inc
mov
pop
xchg
inc
cmp
test
mov
push
ficoms
sub
xor
leave
cmpsl
int
xor
iret
pop
scas
fisubrs
xor
ds
fbstp
xor
add
inc
jns
dec
gs
loop
inc
movsb
mov
mov
fmull
int
rcrl
arpl
cmp
insl
adc
xlat
and
ds
aas
mov
push
rol
fmulp
push
pop
ljmp
cmp
push
fisttpl
add
iret
int
jmp
daa
shrl
std
or
cld
cmp
outsb
popf
movsb
cld
out
or
sbb
inc
rolb
push
or
dec
aas
xchg
outsb
push
sarl
cltd
xor
pop
xchg
adcl
jno
mov
out
jbe
outsb
and
lods
xor
lds
cmp
popf
xchg
xchg
dec
dec
or
loop
je
fwait
div
lret
movl
jo
stos
subb
ss
push
out
add
mov
push
xchg
iret
jmp
cld
jge
pop
ss
push
xchg
ret
jno
shl
push
inc
jl
jge
aad
dec
ret
push
xor
mov
push
cmpsb
push
pop
or
imul
and
push
popa
mov
mov
movsl
loope
sub
jmp
mov
mov
or
pop
cmp
mov
outsl
std
mov
outsb
aas
aas
lea
mov
lods
shrb
lahf
mov
cmp
lahf
pop
jns
pop
cli
xchg
cmp
dec
fiadds
fdivrs
xor
or
js
lds
cli
insb
and
add
icebp
fwait
leave
loop
and
mov
push
clc
xor
inc
mov
pop
insb
pop
cmp
mov
jg
pop
fiadds
sub
divb
inc
clc
sbb
sbb
mov
sbb
jb
jae
mov
cli
sti
test
jno
orb
dec
push
add
push
fidivrs
lock
add
sbb
xor
pushf
xor
inc
lret
inc
test
insl
stos
or
loop
jl
ja
xchg
stos
enter
test
bswap
fwait
sar
xchg
or
add
push
push
adc
inc
mov
mov
xchg
inc
fst
lods
or
leave
cltd
mov
aas
jb
push
dec
adc
or
shlb
outsl
sub
mov
adc
nop
add
xlat
mov
pop
mov
shlb
sub
inc
movsb
dec
push
jnp
fsubl
pop
jg
lret
pusha
pop
fdivrs
int3
aaa
loope
es
cmp
adc
pop
mov
pop
jbe
mov
dec
push
lods
sbb
sbb
jb
frstor
addr16
adc
mov
lcall
lock
xor
movsl
out
jecxz
mov
adc
bound
repz
aaa
jns
ss
negb
into
shll
popa
inc
mov
pushl
loop
bound
mov
pop
push
ljmp
in
or
pop
mov
mov
add
clc
push
mov
je
stos
sbb
xor
icebp
dec
sbb
ljmp
dec
rolb
lock
lret
cmp
add
xor
fsubrl
add
cmp
push
pop
adc
notl
push
pop
hlt
push
cli
fildll
mov
leave
stos
imul
dec
adc
lods
or
daa
call
inc
mov
and
test
ret
xchg
add
mov
imul
push
movsb
mov
mov
mov
or
and
std
cmc
xorb
xor
push
nop
dec
jg
stc
inc
mov
sahf
rolb
aad
and
mov
sub
jb
std
into
pop
fnstenv
lds
test
movsl
pop
xchg
adc
outsl
mov
dec
adc
mov
add
adc
mov
shl
jnp
inc
push
in
sub
xchg
movsl
pop
jg
add
scas
dec
popa
dec
push
push
insl
je
in
adc
push
into
sub
fwait
mov
push
adcl
pop
movsl
ljmp
push
dec
push
aam
sub
sbb
fwait
jmp
push
addr16
adc
inc
mov
cmpsb
mov
sbbb
std
gs
add
sbb
lock
shr
cmpsb
mov
sbb
add
xorl
mov
ret
sarl
xor
push
mov
pop
ficoml
mov
imul
dec
push
adc
mov
adc
jl
adcl
add
dec
gs
jle
inc
push
scas
pop
cli
adc
jecxz,pt
sbb
push
inc
jp
cmpsb
xchg
cmp
push
insb
mov
push
pushw
pop
aas
nop
push
cltd
fists
ret
push
jae
dec
sbb
pop
cld
outsb
out
sub
and
push
lods
loope
lods
stos
xor
jg
sti
or
js
inc
sbb
adc
js
data16
imul
aam
fmuls
add
sbb
push
jb
sub
popf
and
push
jecxz
sbb
scas
pop
add
pop
test
sahf
jle
mov
pop
mov
aad
pop
cmp
sti
mov
xor
shlb
cmpsb
inc
dec
adc
cli
lea
sbb
xor
aaa
imul
cmp
fucomi
or
in
mov
or
add
pop
outsl
mov
les
xor
fcomp
mov
adc
xor
mov
mov
pop
test
jae
add
lret
inc
xchg
into
rclb
inc
ror
mov
or
jmp
lcall
push
shrb
stc
push
or
adc
xlat
popa
aam
adc
shrl
push
mov
and
lret
pop
nop
adc
jp
adc
sti
js
movb
jbe
jle
int3
je
repz
loop
fistps
insb
sbb
cmpl
xchg
fcmovne
pop
leave
rcrb
cli
in
ja
mov
leave
xor
into
dec
stos
sbb
shrb
sbb
adc
mov
jmp
mov
das
fs
test
lods
repz
idivb
dec
in
stc
pop
insl
push
mov
repz
loopne
inc
movsl
push
push
rcl
dec
jne
add
jne
test
shl
cld
cmp
out
mov
enter
stc
inc
mov
cmp
movsl
test
pop
sub
pop
ja
hlt
lret
sub
ljmp
sbb
inc
ret
test
xor
pop
mov
xor
add
sbb
push
push
and
decb
mov
inc
imul
cmova
lret
clc
sbb
fs
stc
dec
mov
out
add
lcall
lcall
hlt
or
scas
scas
xlat
sbb
repz
loop
bound
inc
cltd
repnz
adc
sbb
mov
jge
dec
mov
or
repz
sbbl
xor
dec
frstor
or
and
or
movsl
rcrl
jnp
dec
dec
or
loop
sar
mov
mov
cwtl
sub
or
js
xchg
pop
push
pop
and
pop
or
pop
into
adc
ss
stos
aaa
push
mov
nop
out
add
pushf
pushf
fstl
and
cmp
push
pop
add
inc
jmp
ficoml
lods
cli
ffree
icebp
mov
jae
sbb
cmp
dec
adcl
sub
lock
sbb
or
or
sahf
bound
pop
lods
test
inc
push
jnp
xchg
sub
outsl
jp
mov
jecxz
xchg
cmpsl
or
sub
daa
xor
mov
cld
mov
xor
loope
inc
adc
hlt
sti
pop
test
in
mov
jnp
test
subb
js
push
or
addl
out
and
enter
es
push
jns
xor
xor
das
pushf
into
sbb
bnd
push
loope
lret
push
mov
scas
or
lea
inc
mov
inc
and
and
repz
shll
xchg
mov
add
stos
inc
or
mov
push
cmp
push
push
call
add
call
xor
sbb
out
mov
fwait
sub
inc
sub
rcll
mov
add
ljmp
inc
pushf
shlb
das
jns
add
popa
ja
fnstcw
push
stc
mov
hlt
jle
repnz
add
das
push
mov
lds
call
and
dec
push
arpl
inc
daa
subb
test
outsb
sbb
imul
lret
mov
mov
fstpt
notb
pusha
fimuls
imul
iret
mov
xor
mov
push
dec
and
out
lahf
inc
push
lahf
mov
jnp
je
cmp
mov
fcmovnbe
jnp
lds
jbe
in
dec
sbb
outsl
mov
pop
sub
int
daa
and
emms
mov
inc
shl
lcall
dec
mov
jb,pn
and
aam
dec
dec
and
call
cli
pop
mov
into
jp
inc
jbe
lods
les
aas
xchg
xchg
mov
or
insl
dec
pusha
pusha
mov
js
shlb
decl
sbb
dec
mov
cmp
push
dec
jge
add
lods
and
loopne
push
aas
fistpl
pop
rorl
inc
mov
push
mov
ficoms
jo
pop
popa
fs
push
jg
xchg
not
lods
pusha
lahf
push
push
in
stos
add
xchg
dec
ljmp
mov
scas
or
or
sahf
fsubrs
mov
and
mov
aam
bound
fnstenv
cli
frstor
mov
cltd
enter
stos
jg
in
cli
in
stos
jecxz
pop
xchg
arpl
imul
cmc
mov
daa
repnz
mov
xor
sti
fdiv
cs
push
jp
adc
inc
adc
jmp
sbb
insb
and
jecxz
mov
dec
cmpsl
push
movsl
addr16
jb
mov
fdivrl
in
das
loopne
fsts
in
adc
aam
outsl
repnz
sbb
push
inc
imul
lret
mov
add
aaa
dec
jne
jl
push
cmp
cmc
shrl
call
pushf
xchg
ja,pn
xchg
mov
push
shl
movsb
int3
pop
and
fimull
lods
or
or
stos
push
cltd
ss
xor
pop
scas
cmp
cmp
int3
and
out
jne
pop
push
rcll
inc
xor
jge
aam
out
outsb
inc
add
imul
es
insl
mov
ljmp
rorl
lcall
stos
mov
jb
mov
mov
cmp
dec
lods
xchg
push
cmp
in
dec
sbb
call
xchg
adc
adc
test
fisttpll
es
push
push
pop
xchg
inc
or
xor
mov
push
adc
into
xchg
cmc
mov
mov
inc
and
mov
scas
enter
mov
clc
imul
stos
das
sti
lods
sub
sub
dec
cmp
pop
and
xor
inc
inc
adc
lds
ja
mov
aam
mov
xor
adc
aam
sub
mov
icebp
lods
mov
loope
ds
sub
jbe
lds
cmp
dec
xchg
inc
fwait
or
cmc
stos
mov
mov
push
cmp
jp
pop
xor
in
pop
jbe
add
les
ljmp
repnz
stc
je
jo
loopne
or
out
pop
pop
push
andl
jns
insb
idivl
jle
sub
or
mov
out
scas
aaa
jge
into
fidivrs
mov
adc
stos
inc
jo
or
test
lahf
movsb
cmp
in
jb
jmp
test
andb
sbb
push
scas
les
hlt
gs
pushw
int3
and
inc
adc
sub
leave
idivb
das
xor
loope
insl
fs
in
ljmp
mov
das
xor
xor
push
popa
push
rorl
mov
insl
fiadds
aad
movsb
inc
shr
into
adc
sarb
in
fcoms
add
pop
stos
jns
or
gs
ljmp
xchg
sbb
pop
inc
stos
or
push
iret
adc
mov
ret
jae
fs
add
ret
insl
and
stos
add
dec
push
sub
cltd
andb
into
mov
mov
test
mov
fstpt
pop
push
pop
cltd
cmpsl
dec
pop
sbb
pop
push
cmp
es
mov
dec
sub
insb
jle
or
xchg
rcrl
xor
push
fsubr
test
insb
adc
sbb
lret
testb
cmp
add
flds
and
nop
ds
push
shrl
cmp
adc
fistpll
fsts
mov
mov
adc
mov
xchg
std
mov
hlt
flds
pop
lret
mov
dec
sbb
adc
pop
addb
sub
loopne
and
and
outsl
test
adc
inc
imul
adc
imul
out
sbb
in
sbb
stos
movsb
jg
push
or
movsl
push
lds
adc
or
adc
fdivrs
xchg
push
rolb
mov
rcll
es
fisubrs
dec
push
leave
out
jne
xchg
mov
push
inc
push
jnp
bound
outsb
mov
ror
mov
cmp
mov
bound
movsb
lea
sub
daa
scas
mov
jge
pop
insl
add
mov
push
out
dec
xchg
mov
sub
push
jp
mov
inc
push
flds
push
pop
ljmp
das
aaa
pushf
addr16
ror
jo
cmpsl
jno
imul
mov
push
cld
sbb
test
imul
cmpsb
call
cmp
push
fidivl
mov
das
inc
aad
mov
fisubs
sti
mov
icebp
mov
mov
jmp
jns
mov
push
sbb
test
push
xchg
dec
mov
movsl
adc
es
jle
ja
pop
insl
pop
sbb
push
push
adcb
mulb
xor
inc
popa
rorb
out
movsl
and
popa
arpl
fdivl
cmc
ja
xlat
cmc
xchg
xlat
or
cmp
mov
mov
xchg
sahf
aad
mov
dec
loopne
pop
pop
mov
mov
cmp
jmp
jo
mov
pop
fstpl
sub
je
push
jae
out
ds
cmp
inc
outsl
jnp
sbb
cwtl
jnp
mov
in
xor
push
testl
mov
mov
cmp
or
rcrb
add
dec
jmp
inc
push
add
test
mov
jae
dec
jno
inc
inc
fcomi
dec
call
cmc
test
das
incl
mov
popf
dec
jmp
xor
aas
sub
sbb
xor
jmp
sub
add
push
dec
repnz
pop
jecxz
call
inc
pushf
cmp
insb
pop
cmp
aaa
xchg
mov
aam
mov
adc
sbb
jle
incb
and
add
in
cmp
cs
or
stos
stc
add
les
test
xchg
add
in
sub
int
test
sbb
incl
sarb
sbb
faddl
shll
cmp
mov
popa
lods
inc
outsb
push
scas
jmp
scas
adc
fdiv
mov
and
dec
int
sub
dec
dec
mov
sbb
mov
push
add
add
sbb
mov
sar
cmp
in
and
out
repz
jg
lods
add
push
decl
loopne
dec
outsb
rolb
sbb
je
and
jbe
lods
int
pop
aad
dec
sbb
add
push
dec
cld
mov
insb
iret
aad
aas
add
adc
sahf
scas
insb
mov
pop
cmc
adc
cmpsl
outsb
sbb
and
xchg
leave
lea
andl
out
xor
fcomps
xchg
movsb
subl
int
push
cmp
jne
pop
pop
inc
mov
lret
inc
in
xor
dec
and
or
lcall
scas
and
lcall
mov
xchg
in
rorb
push
imul
xchg
jmp
dec
mov
mov
scas
inc
test
and
mov
adc
xchg
xchg
pusha
daa
ljmp
pop
rcll
aad
popf
lret
ljmp
in
jl
sti
xor
push
pop
dec
pusha
inc
lret
aad
lods
and
sub
mov
outsb
enter
leave
inc
sub
sbb
sahf
sbb
and
cs
cli
add
xchg
out
jnp
add
loop
scas
mov
push
jl
cmpsl
imul
cmp
es
jbe
sub
sub
fdivrl
xor
pusha
mov
shll
in
and
mov
inc
xor
mov
mov
pushf
bnd
dec
ficoml
std
and
addb
or
aaa
mov
xchg
stc
dec
xor
mov
sbb
scas
lret
mov
mov
shrl
repnz
loop
loope
adc
push
jo
lret
jg
jno
and
rcl
xchg
jo
outsb
hlt
mov
ret
lods
sub
aaa
sub
mov
lret
gs
in
mov
out
lock
and
mov
fistpll
mov
jnp
xchg
ss
out
scas
lds
lock
cwtl
popa
xlat
cli
in
out
adc
testl
clc
pop
lods
cmpsb
add
push
mov
test
arpl
shll
call
lret
ds
shlb
lcall
jmp
andb
insl
sub
pop
adc
jae
out
sar
iret
cmpsl
scas
and
dec
int3
in
out
xchg
sbb
inc
fcmovbe
stos
and
cwtl
movsl
mull
int
jb
lods
pop
mov
lcall
sub
add
add
adc
mov
add
push
shlb
arpl
subl
lock
rolb
jmp
xor
test
cmp
adc
mov
ja
or
clc
xorb
les
movl
sbb
dec
cmpsb
pusha
imul
mov
arpl
xchg
pop
inc
push
add
scas
mov
mov
test
mov
push
adc
loopne
fists
cmp
add
or
xor
mov
mov
xchg
push
iret
cmp
mov
cmc
pop
cmp
push
adc
xchg
into
dec
pop
dec
rcrb
adc
sbb
psubd
pushf
sahf
mov
sub
lock
jnp
bnd
loopne
icebp
subb
dec
outsl
movsl
adc
or
das
mov
push
sub
sbb
ficomps
or
xchg
loop
add
fldl
int
sub
inc
pslld
cli
sbbl
pop
push
xchg
movsb
scas
jp
xchg
out
push
sub
xchg
xchg
sbb
rcrl
int3
xor
xor
lcall
jae
mov
or
and
add
sti
xchg
dec
pop
pop
mov
sbb
dec
fldenv
out
sahf
fwait
cmovp
std
lahf
cmp
mov
test
popf
mov
adc
mov
jae
sub
test
outsb
xlat
push
mov
ds
push
jns
pop
push
je
repz
push
jns
movsb
or
or
push
ret
dec
jmp
lahf
xchg
pop
sarb
fdiv
fdivrl
lahf
inc
jae
xor
mov
lret
inc
or
xor
mov
sub
fcmovbe
push
pop
shrb
mov
lcall
jo
jns
fnstcw
sub
das
lret
leave
sub
and
dec
xchg
mov
fdivrs
pop
fs
into
lea
pusha
or
std
mov
bts
scas
mov
rorb
xchg
mov
dec
pop
xchg
stos
rolb
push
jno
inc
sar
cmp
dec
test
in
gs
jo
popw
push
sbb
jae
mov
fs
or
add
sbb
inc
cmpl
sub
or
mov
hlt
xchg
jno
mov
mov
and
loop
ret
repnz
cwtl
cmp
push
adc
mov
mov
jge
or
sub
xchg
mov
fildll
daa
scas
mov
xchg
leave
sbb
sub
add
cmpsb
in
test
icebp
daa
mov
sahf
sbb
mov
cmc
inc
mov
hlt
dec
lret
or
mull
nop
fcmovnu
sti
mov
push
add
sbb
push
cmpsl
dec
push
mov
ljmp
adc
xchg
xor
pusha
xchg
xchg
or
dec
mov
out
cmpsl
push
mov
shrb
jecxz
push
pop
test
pinsrw
out
pop
cmc
push
adc
test
in
pusha
out
xchg
mov
icebp
std
and
mov
lds
cmp
pop
movsl
insb
jnp
xchg
mov
sbb
mov
cltd
aas
sub
data16
sub
pop
mov
dec
je
or
or
mov
mov
stc
scas
mov
adc
pop
insl
sahf
cmp
das
inc
inc
movsb
xor
and
add
xchg
add
sbb
mov
cltd
not
mov
push
xlat
js
sbb
mov
mov
mov
jge
scas
loope
pop
jnp
push
loop
xchg
das
mov
iret
jecxz
dec
fdivrl
push
adc
stos
dec
faddl
arpl
ds
lret
dec
fstp
pop
btr
add
sub
jecxz
es
aad
mov
cmpsl
pop
mov
lock
sub
xchg
xor
pop
std
adc
subb
or
jg
enter
dec
jbe
dec
pop
push
shl
dec
sbb
jecxz
or
cmp
in
xchg
dec
nop
testb
test
outsl
sbb
mov
ljmp
test
or
scas
push
fistpl
sub
iret
dec
dec
out
loop
aam
and
jmp
sarl
pop
xchg
xor
jl
inc
cmp
sub
sub
outsl
xlat
mov
out
mov
mov
jb
outsb
dec
in
jne
adc
stos
push
lret
notl
lods
sbb
mov
push
orb
scas
hlt
mov
jno
insl
test
scas
fbstp
cmp
xchg
leave
dec
sbb
xchg
mov
bound
jl
inc
or
push
or
dec
decb
cmp
cmpsl
call
out
sbb
and
icebp
sti
cli
adc
mov
clc
lock
dec
out
hlt
mov
lahf
pop
jno
xchg
or
sub
mov
dec
pop
lds
sbb
in
mov
jnp
adc
and
or
fcmovu
addl
in
and
inc
lret
mov
dec
and
ret
mov
and
pop
push
mov
clc
push
mov
js
xor
cs
pusha
or
adc
popa
xchg
mov
lret
stos
sbb
dec
mov
jmp
push
mov
dec
clc
mov
xchg
xchg
and
fisttpl
rol
adc
repnz
pop
mov
jecxz
lods
add
jl
lds
cmp
les
or
test
js
andl
ret
push
das
cmp
outsb
xor
push
out
mov
mov
mov
inc
adc
jl
pop
pop
imul
cmpsb
add
lcall
pushf
and
fmull
test
inc
js
rcrl
push
pushf
lods
aam
pop
rol
lret
lahf
int
xbegin
or
jecxz
xor
rorb
fwait
adc
inc
mov
mov
das
dec
nop
out
stos
mov
in
cmp
out
nop
sub
iret
inc
add
cmp
inc
repnz
insb
xchg
aas
mov
movsl
loop
sbb
and
pop
cwtl
std
ljmp
push
jmp
jmp
dec
cs
adc
ja
cmp
xor
xchg
push
iret
cli
stc
mov
push
cmp
mov
lds
add
push
push
push
mov
aaa
pop
ljmp
repz
imull
lods
mov
sahf
push
lahf
in
jae
mov
lds
sbb
dec
pushf
sub
rcll
xchg
mov
icebp
les
mov
pop
inc
popa
mov
pop
or
stos
repnz
mov
or
lret
sahf
sub
cmp
fistl
xor
jp
pop
popa
movsb
nopl
incb
sub
jne
fstpt
ret
xorl
inc
arpl
adc
data16
call
adc
jo
mov
orb
jae
aas
mov
enter
dec
xor
aaa
fstl
fwait
sbb
leave
leave
nop
xchg
int
jns
test
inc
jbe
ret
mov
loop
shll
xor
lret
pop
scas
jnp
or
mov
pop
mov
dec
loop
repz
dec
xchg
xchg
push
imul
mov
cmp
dec
push
test
movsl
xchg
inc
push
cmp
jae
shll
pop
push
jge
jmp
push
js
push
repz
mov
fs
mov
dec
addr16
push
jmp
xchg
push
xchg
mov
xor
imul
or
lea
mov
xor
mov
inc
pop
iret
inc
outsl
fs
mov
adc
mulb
shl
cmp
insl
jbe
lcall
jbe
inc
jge
rcll
add
sbb
cwtl
in
rorl
test
add
test
scas
adc
fstpl
inc
pop
repz
lea
push
inc
inc
ss
ret
sbb
popa
sub
pop
mov
subb
jno
mov
iret
push
movsb
push
mov
xor
pop
mov
stos
xor
jl
push
push
out
data16
xchg
mov
push
mov
mov
jmp
test
add
cmp
out
lock
pop
xchg
push
xchg
sbb
call
add
jo
mov
xor
cltd
push
fs
or
aad
data16
fs
pop
add
stc
inc
pop
loope
lods
rclb
sbb
les
cmp
xor
movsl
pop
stos
xchg
or
fdivrs
mov
out
outsl
iret
test
call
xchg
insl
sub
ror
and
jno
xlat
lods
inc
popa
pop
dec
outsl
cwtl
outsb
fisttps
jae
fisttpl
and
sbb
aad
xchg
lds
arpl
inc
mov
cmp
push
loop
jmp
ljmp
mov
lea
cwtl
shrb
shrl
cmp
dec
loop
add
fisubl
stos
int3
adc
fcmovnbe
jo
dec
mov
jne
das
or
add
inc
orl
jge
mov
xor
call
inc
imul
cmp
cmp
pop
lret
and
dec
bound
popa
pop
scas
lahf
jnp
pushf
scas
out
push
cmp
xchg
pop
or
test
in
add
xor
mov
aas
jecxz
add
lret
or
cltd
lea
je
out
sub
push
jne
mov
mov
mov
lret
ja
popf
xchg
mov
out
inc
pop
xchg
mov
icebp
push
xor
inc
adc
or
daa
stos
mov
jp
sub
lret
sti
int3
fsubrl
cmp
popa
and
dec
pop
cmpsb
test
outsl
add
popa
fisubrs
les
add
cmp
mov
pushf
pop
cmpsb
jl
cld
xchg
pop
sti
pop
repz
adc
loopne
leave
aad
add
sbb
jecxz
mov
outsl
stc
stos
dec
jle
xchg
lds
pop
movsb
inc
not
fcoms
popa
bound
adc
add
inc
lock
out
mov
ss
scas
mov
adc
cs
lsl
popa
icebp
rorb
sub
cltd
inc
pop
xchg
push
xor
sar
add
in
dec
xor
mov
sbb
movsb
jae
jb
cmpsl
jmp
jg
imul
gs
insb
jae
mov
pop
in
les
sbb
daa
popa
cwtl
jns
stos
adc
popf
xor
push
sub
add
mov
pop
rclb
jge
inc
icebp
sbb
adc
pop
cli
mov
mov
pop
cli
sub
mov
cmp
adc
ss
cld
add
and
nop
xchg
clc
out
insl
jnp
repnz
xor
push
pop
or
mov
int
ficomps
leave
std
out
xchg
loop
push
notb
dec
lret
sbb
push
enter
pop
movsb
xor
xor
mov
out
shr
into
js
pushf
add
popf
and
out
xlat
hlt
sbb
js
lods
pop
jnp
js
and
jecxz
sub
mov
out
cld
ljmp
inc
dec
nopl
cli
xor
pop
or
mov
sti
arpl
and
aas
cmpb
aas
cmpsb
mov
leave
inc
popa
out
inc
pop
out
lcall
scas
mov
icebp
stos
cmpsb
xchg
adc
adc
adc
cmc
pop
std
js
mov
sub
cli
and
and
push
aas
jmp
xchg
xor
sahf
xchg
mov
push
hlt
in
ficompl
aas
ror
add
test
inc
or
or
lret
cmpsb
xchg
dec
divb
and
aaa
pop
pop
les
into
pop
pop
fs
gs
sbb
mov
test
cmpsl
pusha
aam
and
mov
cmpsl
shrl
mov
xor
sub
stos
inc
or
or
shrl
xlat
and
sbb
lret
mov
in
mov
jge
int3
sub
or
jge
out
sbb
aas
stos
out
hlt
jl
sub
fst
cmp
push
test
xchg
gs
pop
gs
out
sti
sbb
xor
mov
push
pusha
dec
add
cwtl
shl
call
lods
xchg
dec
ret
xlat
dec
out
loopne
dec
mov
mov
xor
and
pop
mov
sub
sbb
jg
add
jnp
fildll
mov
aas
fdivs
daa
sbb
fldt
sbb
mov
dec
mov
lret
les
add
insl
int
xchg
jmp
out
rol
popa
in
test
dec
jg
or
ss
mov
mov
insb
lahf
sbb
in
sarl
push
dec
cmpsl
subb
inc
vphaddubw
xor
lcall
xor
pop
bound
sbb
dec
pop
repnz
das
repz
les
pop
pop
sbb
mov
insl
sti
adc
fs
dec
push
dec
fildll
jmp
icebp
scas
dec
fsubrs
test
sub
lods
hlt
mov
push
leave
addr16
mov
cmp
push
cmp
in
push
jp
mov
sahf
sbb
or
dec
cli
test
outsb
xchg
cmc
cmp
xchg
adc
add
fistpll
int
add
and
dec
cmc
test
shl
mov
out
adc
mov
sbb
js
mov
cmpsl
leave
insb
movq
leave
pushf
mov
sbb
in
in
fdivl
and
mov
adc
test
mov
xchg
mov
std
outsl
mov
jg
loope
in
cltd
adc
adc
imul
adc
out
pop
imul
mov
je
ja
or
mov
mov
jp
cwtl
jns
and
dec
icebp
repz
jbe
xchg
call
mov
fucom
jae
pop
aam
jo
mov
mov
push
mov
add
or
or
fsubrs
jp,pt
xchg
add
or
cmp
scas
shlb
iret
movsb
idiv
or
mov
out
xorl
and
inc
lds
mov
mov
ficomps
mov
lret
push
inc
push
or
mov
mov
fwait
sub
scas
dec
dec
sub
and
repz
dec
cmpsl
aam
sahf
xor
jno
hlt
mov
ret
pop
gs
std
cmc
cmp
or
inc
popa
rclb
add
mov
dec
inc
cmp
jle
sub
shrl
std
mov
outsb
xchg
mov
notb
pop
mov
mov
ret
cwtl
or
and
icebp
xor
fcmove
sub
roll
mov
cli
xor
int
sbb
adc
inc
mov
rcll
xor
push
adc
fists
scas
js
push
cmp
pop
into
pop
push
rclb
outsb
outsl
add
divb
xor
dec
mov
ret
insl
fidivrl
inc
rorl
addr16
ret
fldt
cwtl
jae
clc
aad
js
adc
insb
xchg
pop
or
xchg
xor
mov
mov
lret
dec
roll
into
xlat
fwait
mov
imulb
lods
adc
loopne
cmpb
fs
outsl
test
loopne
pushf
rclb
dec
and
scas
jbe
into
cmp
icebp
cld
or
sub
rclb
ret
mov
mul
icebp
cmpl
roll
pop
lods
imul
and
gs
cld
and
outsb
jmp
sbb
sbb
pop
pop
aaa
xor
pusha
test
jmp
add
or
insb
push
les
mov
and
mov
mov
mov
sahf
test
popf
jb
jmp
xchg
mov
sub
adc
jg
mov
dec
mov
mov
stos
std
in
mov
testb
xchg
sar
mov
sbb
aad
mov
pop
cli
push
sbb
push
ror
xchg
ja
mov
std
lea
in
inc
cmp
js
stos
mov
and
fildl
and
mov
adc
inc
sbb
fwait
and
mov
jp
push
inc
ds
dec
jecxz
sahf
cmpsb
aaa
iret
push
arpl
jg
addr16
and
xlat
sbb
jg
rclb
ret
pop
cmp
dec
jge
sbb
push
out
cmp
lcall
sub
in
out
fldenv
adc
inc
ret
in
push
xchg
xchg
add
movsl
push
cwtl
mov
inc
sbb
lret
cmp
pushf
aaa
insb
or
dec
mov
cmovb
and
inc
mov
adcb
shrl
pop
jl
stos
mov
dec
push
adc
adc
push
int
repnz
call
jbe
ja
sub
adc
sti
stos
mov
sub
sub
inc
jae
xchg
jl
out
bound
cli
xchg
shll
pop
imul
les
mov
stc
enter
gs
mov
jbe
and
jmp
mov
test
cmp
push
and
push
int
mov
dec
mov
fldenv
addr16
in
fucom
pop
in
out
imul
sbb
cwtl
cmp
jae
jns
fdivs
pop
sbb
adc
aad
stc
cmp
data16
add
pop
xchg
jmp
xchg
gs
inc
flds
xchg
push
jb
clc
pop
mov
cltd
movhps
mov
dec
popa
fst
jmp
int3
mov
jg
ret
mov
jg
fdivs
sub
xor
pop
mov
mov
movsl
or
aaa
push
lds
mov
insb
sub
in
and
pop
pop
js
mov
mov
insb
gs
movsl
dec
lods
push
mov
mov
mov
adc
je
pop
pop
jbe
mov
repz
jbe
dec
divl
mov
loope
out
sbb
pop
je
jo
ja
cli
inc
lcall
outsl
test
dec
lcall
dec
dec
fstp
lds
and
xchg
dec
xchg
add
flds
das
cmp
bound
mov
cwtl
fcoml
aad
sbb
cmp
popa
dec
push
inc
pusha
mov
inc
pop
jno
xor
xchg
dec
int3
ss
into
adc
cmp
inc
test
inc
cmpsl
pop
cmpsb
adc
mov
cltd
lock
push
and
fxch
or
pusha
inc
mov
mov
xor
jno
jl
mov
jge
jge
repz
push
mov
inc
fadds
mov
leave
call
mov
dec
ss
sar
push
dec
dec
lock
add
mov
and
and
dec
jg
addr16
enter
or
pop
pusha
mov
push
jnp
dec
loop
pusha
cmc
fstps
imul
repnz
jns
push
mov
push
pusha
lahf
inc
sti
mov
std
lods
xchg
and
jnp
sub
bound
cmpl
sbb
push
ffreep
mov
loope
dec
sbb
xor
push
out
std
sahf
gs
pop
push
xchg
push
scas
jb
mov
fcompl
xor
push
call
fstps
jne
push
cli
pop
push
insl
std
and
adc
pop
xchg
jb
inc
imul
lret
inc
sti
jg
mov
movsb
outsb
in
mov
sub
xchg
aas
dec
push
aad
cmpsb
inc
sbb
ret
push
sub
test
adc
cmc
test
dec
dec
xor
dec
xor
push
test
loope
xlat
mov
lds
lcall
jb
mov
add
negl
out
jl
add
push
xchg
sub
loopne
add
dec
popf
push
sub
fistpl
sbb
dec
ss
sbbb
push
mov
jmp
xchg
xchg
leave
pop
leave
xchg
add
inc
mov
sub
lret
test
inc
and
or
jae
cmpb
jb
mov
pusha
aam
pop
mov
mov
inc
sarb
in
cmp
es
sbbb
sbb
mov
jbe
pop
lcall
add
fsubrl
mov
cmp
sbbb
imul
ret
insl
inc
leave
sbb
dec
mov
sub
mov
lds
dec
inc
mov
mov
lret
sub
xor
outsb
cli
call
mov
and
inc
mov
loope
gs
push
test
push
xor
jbe
jne
jl
or
jle
insl
xchg
mov
push
repz
fimull
push
sub
inc
std
xchg
xchg
jo
in
test
jbe
cli
stc
test
in
mov
xchg
testl
out
pop
pop
repz
jns
push
repz
iret
push
test
out
xor
cmova
push
aam
mov
mov
dec
mov
push
and
dec
xor
xlat
sub
iret
call
ja
jle
scas
in
dec
and
adc
dec
pop
cltd
mov
pusha
push
in
shr
scas
sbb
jl
dec
jg
cli
push
stos
mov
inc
dec
mov
or
jne
jae
mov
sub
mov
cmpsl
dec
seta
pop
cld
mov
mov
inc
insb
cmp
popf
xor
outsb
xor
adc
jmp
xchg
rcrb
mov
pop
lea
mov
jne,pt
arpl
xchg
and
movsl
in
xchg
adc
sbb
dec
mov
loopne
into
iret
repz
scas
in
jae
jno
pop
enter
movsb
pop
sahf
popa
pop
mov
aam
adc
rclb
xor
jecxz
lods
ds
xlat
js
cli
mov
mov
mov
add
dec
mov
ds
xchg
jl
fstps
pop
hlt
jg
jb
rol
adc
sti
push
fcmovu
je
or
mov
pop
shlb
sub
push
shll
xor
xchg
mov
jg
cli
and
push
stos
lods
adc
adc
pop
push
or
xchg
dec
lret
cmovnp
cmpsl
pusha
mov
inc
mov
inc
xchg
mov
in
hlt
stos
xor
mov
dec
lahf
shl
sbb
mov
jns
inc
push
shrb
cld
sahf
jl
leave
sub
out
mov
mov
fiaddl
jno
fstl
lods
or
lret
and
xlat
sub
pop
in
lock
sar
pop
mov
sub
mov
pop
sbb
inc
adc
adc
mov
lods
shlb
inc
notl
mov
xor
ja
loope
jbe
fwait
popa
int3
daa
jmp
dec
in
stc
push
lods
or
push
out
fstps
push
pop
cmp
rolb
addr16
out
mov
out
loope
shll
mov
fsubrl
jns
jb
in
push
bnd
dec
push
cs
xchg
cmp
xchg
cmp
inc
scas
mov
testl
jmp
int3
or
mov
insl
cmpsb
jle
or
in
aas
movsl
scas
test
mov
push
in
cwtl
scas
roll
pop
add
in
movsl
adc
rcll
add
popf
mov
fs
test
xchg
repnz
mov
cld
jne
pop
sub
sahf
in
adc
out
mov
push
rcll
mov
shrb
popf
xchg
addr16
dec
inc
push
fidivrl
fsubr
inc
mov
icebp
jnp
pop
mov
cli
xchg
xor
pop
push
cmp
outsb
es
push
dec
xchg
jae
in
xor
add
fnsave
add
inc
shll
pop
sub
sub
aas
mov
sbb
or
mov
or
insb
leavew
sub
cmpsl
push
push
xchg
push
add
fdivs
pop
ss
xchg
mov
jge
std
inc
out
jmp
rcr
jb
push
cwtl
xchg
nop
andl
sbb
sbb
and
fstpl
push
or
xchg
popf
pop
or
addr16
divb
add
bnd
xchg
xchg
jbe
cmp
enter
into
test
mov
xor
inc
pop
mov
xchg
dec
push
and
inc
push
sub
cmp
aam
shll
daa
mov
aas
xor
mov
push
inc
les
dec
mov
mov
hlt
dec
pop
push
push
and
inc
add
xor
dec
into
dec
loopne
cmp
leave
pop
sti
add
in
dec
mov
or
ret
mov
mov
enter
cli
decb
add
sub
or
add
mov
xor
mov
mov
add
lret
std
les
sub
mov
imul
sbb
cwtl
popf
dec
pop
arpl
sbb
and
sub
dec
sbb
inc
stos
fiaddl
pop
dec
stos
fnstenv
aaa
xor
outsb
xor
push
jl
cmp
xchg
fwait
push
std
mov
mov
mov
adc
enter
imul
adc
push
sar
add
and
sbb
fwait
aad
repz
add
adc
push
testl
ret
add
sub
out
movsl
pop
stos
outsl
mov
popf
xchg
sbb
les
cmp
jo
push
lods
mov
adc
sbb
andl
sub
jne
add
stc
shrl
movsb
pop
aam
fmuls
lret
jae
lds
dec
rolb
inc
add
movb
or
aad
jnp
adc
in
mov
or
stos
sbb
push
lea
out
mov
cmp
and
in
out
testl
pop
test
ljmp
xor
pop
jmp
into
xor
cmp
jmp
jae
inc
add
mov
int
fcompl
std
out
add
xor
stc
cmp
ficoml
and
cli
add
cmp
into
lret
lahf
pop
adc
movsb
sahf
outsl
gs
sbb
inc
icebp
mov
fmull
in
inc
je
fcmovbe
sti
imul
lahf
in
jbe
xchg
movsb
pop
dec
inc
push
cmc
dec
mov
mov
cwtl
jo
jmp
nop
aas
adc
sub
dec
ret
iret
dec
xor
xor
ljmp
dec
lret
fmuls
shll
xchg
pop
push
push
leave
and
pop
or
cwtl
mov
cs
pop
repnz
loopne
adc
inc
rcrl
add
xchg
pop
shl
mov
push
jmp
frstor
adc
jns
jl
add
negl
adcb
xchg
clc
data16
in
iretw
jmp
pop
mov
rcrl
xchg
movsb
popf
dec
adc
call
mov
dec
neg
dec
cli
dec
fists
ret
inc
mov
mov
arpl
xor
fisubl
out
test
nop
ss
add
iret
sbb
sub
or
ss
mov
jge
push
add
cmp
test
pop
repz
sti
les
rolb
xor
jl
sub
mov
xchg
mov
push
jne
jp
mov
pop
lods
cmpsl
push
adc
loop
sub
repz
jne
push
xchg
jb
sahf
and
daa
and
lahf
js
daa
mov
test
sub
mov
pop
call
iret
xor
pop
or
inc
insl
xor
stos
xchg
add
test
adc
stos
je
js
pop
lds
rcrb
clc
negb
mov
push
xchg
push
push
js
sbb
inc
jp
popf
movsl
pop
ret
inc
test
pushf
mov
enter
popa
sub
stos
mov
push
mov
and
out
sarb
push
loope
inc
punpckldq
dec
cmp
enter
popf
testb
insl
push
inc
xchg
adc
int3
lahf
dec
mov
ret
inc
push
add
icebp
lods
push
icebp
fimuls
add
push
adcl
out
mov
pop
dec
pop
cmp
dec
into
idivl
outsb
cli
bound
dec
out
call
mov
lea
jg
scas
jmp
movl
push
arpl
jbe
xchg
add
mov
xchg
inc
jno
push
mov
leave
xchg
fmuls
rcl
mov
out
ret
lods
leave
pop
ret
cwtl
lret
cmc
add
cmp
sbb
lcall
stc
xchg
jl
mov
outsb
mov
pop
ljmp
jnp
sub
mov
push
or
cmp
mov
mov
adc
popf
daa
cmc
sub
sub
fstps
test
cmc
add
loop
out
cmpsb
subb
pop
or
dec
ds
or
test
cmp
subl
scas
push
in
pop
cmc
sub
pop
pop
bound
pop
aas
xchg
and
xchg
fs
lods
sub
and
xchg
hlt
jns
cld
push
xor
and
jbe
lret
pop
xor
fcom
icebp
jns
mov
out
int3
mov
fstpt
ljmp
dec
xlat
daa
into
popa
adc
fidivl
fwait
adc
cmpsb
daa
push
add
lods
mov
stos
xchg
mov
imul
jp
test
mov
popa
adc
jecxz
out
push
repnz
test
in
cli
cmp
pop
mov
adcb
xchg
adc
push
jns
xorb
push
sti
sti
sub
lea
and
into
sub
pand
leave
jmp
cli
xchg
in
fwait
jle
ljmp
fcmove
push
inc
sahf
add
outsb
bound
dec
jae
adc
cli
and
xor
fisttps
adc
adc
push
out
mov
add
outsl
pop
fcomip
aaa
fdivrl
pusha
test
imul
pop
mov
scas
bound
dec
cwtl
enter
or
xor
sbb
push
aaa
fstl
mov
push
adc
jle
cltd
enter
repnz
pop
rol
pop
fldz
loopne
pop
dec
lock
shlb
test
jecxz
pop
and
jbe
and
ss
ret
push
jg
dec
daa
sbb
out
jbe
testl
mov
movsb
scas
out
cmp
pop
pop
lods
xchg
sbb
jae
popa
or
lds
out
rcr
add
fs
movsb
cmp
lods
and
push
add
inc
inc
jle
cmpsb
jg
shrb
pop
mov
xlat
mov
loop
fdivl
test
mov
int
and
leave
hlt
or
out
jge
js
in
xor
scas
imul
sub
push
pop
push
sbb
in
add
xchg
jmp
call
sub
mov
xor
push
ljmp
fnstenv
add
sbb
push
jmp
or
xchg
xchg
adc
mov
movb
mov
addr16
outsl
xor
lret
xchg
loopne
call
je
insb
cmc
adc
std
je
hlt
or
jle
mov
popa
sub
lahf
adc
or
iret
jbe
inc
dec
xor
push
fstpt
jae
ljmp
mov
jge
clc
out
or
adc
mov
lahf
out
lret
add
pop
cmp
or
cltd
sarb
xchg
mov
imul
arpl
mov
mov
inc
sub
data16
mov
mov
xor
and
loop
fbstp
lret
xchg
fldl
sub
inc
xchg
jp
jmp
ret
xchg
insb
pusha
add
xor
adc
sbb
mov
dec
sub
hlt
sub
pop
lret
inc
sub
adc
jmp
jbe
add
jl
mov
clc
in
jns
lcall
sahf
jmp
jl
ja
mov
push
int3
mov
pushl
adc
mov
stc
mov
xchg
mov
adc
inc
shr
jns
xchg
push
xor
jno
adc
add
sbb
cs
arpl
xchg
push
xor
sub
jmp
or
sbb
les
xchg
mov
add
sbb
sti
jae
mov
in
lds
pop
push
jge
ds
into
push
clc
bound
arpl
push
xor
dec
cmpsl
push
in
or
out
push
xor
popf
jne
cmp
add
cltd
xchg
sub
out
or
jnp,pn
aad
icebp
sbb
ja
fisttps
inc
cmpsb
sahf
adc
out
or
cmpsb
xchg
adcb
test
cmp
in
loope
jmp
cmp
add
lret
mov
incb
sub
pop
jge
pop
mov
mov
inc
pop
adc
mov
lods
imul
mov
xorb
lds
ja
adc
pop
sub
loopne
ja
cltd
sbb
pop
movsb
mov
or
jb
sub
pop
jmp
js
sbb
fwait
mov
push
lcall
mov
mov
push
inc
fisubrl
pushf
sub
dec
out
ds
std
shlb
test
fcompl
test
dec
jo
loop
adc
push
cli
outsb
orl
ret
cmp
mov
pop
xchg
iret
add
fsubrl
imul
ret
cltd
add
push
mov
stos
xchg
sbb
xchg
and
iret
jl
sub
mov
push
inc
push
rclb
clc
bound
enter
cmp
shrb
ss
mov
sbb
imulb
aad
jne
jnp
or
mov
jmp
push
fistpll
jge
sub
push
adc
xor
stos
js
sbb
mov
lahf
and
or
jae
mov
lcall
and
adc
jcxz
sub
or
mov
shr
inc
cwtl
pop
ret
jb
xor
aaa
je
and
stos
lret
std
mov
or
push
ss
sub
add
insb
stc
pop
sbb
stos
mov
push
in
leave
scas
jno
xchg
aad
jecxz
loop
shl
jb
pop
pusha
sbbl
stos
xchg
aam
cmpsb
jbe
aad
rcr
mov
dec
test
adc
aas
pushf
mov
jl
sbb
lods
dec
mov
xchg
pop
fwait
dec
mov
rcrb
out
cmp
in
mov
lahf
mov
fildll
mov
cld
mov
fwait
pop
cmp
sbbl
fistpll
sub
sbb
sub
pop
aaa
push
sub
data16
lea
test
out
or
adc
mov
cld
loopne
cmp
scas
push
jle
mov
gs
ds
lds
dec
rorb
les
out
inc
pop
dec
adc
mov
inc
dec
ret
mov
or
cmpsl
test
sbb
addl
rolb
adc
bound
das
shlb
stos
outsb
ret
xchg
in
lods
xchg
pop
repnz
sub
out
shlb
add
sbb
mov
daa
and
inc
and
sub
push
sub
fidivl
test
inc
fisttpl
mov
lret
push
dec
movsl
dec
je
sbb
inc
and
cmp
das
nop
fbstp
iret
lret
arpl
jmp
xchg
jecxz
repz
insb
test
enter
cmc
test
ja
sahf
out
imul
aaa
cmp
push
add
or
movl
xchg
cmp
sti
xlat
jle
je
inc
mov
popf
imul
mov
pop
les
out
fnstcw
push
stos
fstpt
lods
cmc
cmpsb
arpl
mov
xorb
or
lea
jle
push
mov
mov
in
fbld
leave
add
sub
pop
xor
mov
mov
push
xchg
leave
popf
pop
scas
sahf
xor
inc
mov
repz
and
sub
push
ret
fcomps
or
loopne
fwait
mov
cmpb
mov
lahf
cwtl
inc
inc
cmc
lret
shlb
jp
sub
ljmp
ds
aaa
clc
sub
shr
in
mov
pop
cmovb
cld
jns
fidivs
lods
cmp
into
add
leave
test
into
jp
push
push
js
mov
insb
test
fisttpll
cmp
dec
mov
cld
mov
lahf
data16
and
scas
andl
sbb
loop
jb
xchg
dec
lods
pop
and
add
mov
shlb
pop
in
int
aad
lea
and
nop
out
iret
add
cltd
adc
fisttps
push
and
out
cmp
sbb
repz
push
imul
ss
mov
sbb
jno
mov
out
test
mov
cmp
dec
mov
adc
out
jnp
ja
adc
scas
lea
push
gs
xor
scas
fidivs
in
xor
stos
dec
mov
xchg
add
push
rorb
sbb
and
mov
lret
imul
push
xchg
ret
fsubr
ja
rorb
jbe
xchg
or
addr16
push
mov
push
shll
pop
out
popf
sub
xor
cli
cmp
mov
shlb
enter
mov
sbb
xchg
in
push
and
cmpsl
fstpl
addl
dec
mov
pop
dec
sub
jge
rcr
adc
push
dec
xor
mov
cltd
stos
fsub
leave
repnz
pop
mov
xchg
jne
mov
fdivrs
push
push
aam
push
inc
mov
push
mov
xlat
xor
or
pop
es
mov
jmp
loop
xchg
fisttpll
idivb
adc
fwait
cmp
mov
dec
enter
mov
les
pop
adc
dec
push
cmp
xor
scas
sbb
inc
loope
jp
or
sarl
and
mov
push
jp
ret
dec
and
inc
pop
mov
mov
push
mov
mov
lret
adc
fwait
sub
jle
sbb
pop
cmp
test
and
xchg
das
and
lea
dec
ficomps
mov
pop
and
adc
bound
aaa
sbb
mov
addr16
fnstsw
loopne
jnp
push
jle
push
jl
fisttpll
fcoml
divb
mov
jno
dec
jl
andb
dec
cmp
nop
mov
adc
sub
sarb
and
scas
push
int
rcrb
jecxz
and
push
sub
push
pop
enter
leave
fsubl
mov
push
push
ja
and
orl
inc
push
sub
sbb
xor
fisubl
ljmp
mov
mov
imul
ja
sbb
popf
xchg
test
mov
clc
pop
mov
fbld
cli
and
pop
popf
out
mov
test
lahf
lret
test
mov
rcrb
mov
push
dec
xchg
or
sbb
push
phsubd
aam
mov
out
mov
iret
jp
lret
sar
adcl
pop
std
shll
jae
out
cs
push
into
pop
lret
je
xchg
addr16
xor
xor
insl
xchg
fmuls
or
aad
popa
jge
push
gs
mov
cmp
mov
cmp
pop
ret
mov
push
sub
pop
xor
int3
lcall
push
lods
out
in
pop
loopne
xchg
sbb
and
mov
fldt
xchg
je
cmp
pusha
cltd
es
xchg
test
or
clc
call
lock
in
jg
out
fninit
out
enter
sbb
dec
mov
mov
sub
imul
sbb
pushf
adc
divb
jne
sub
or
xor
enter
sbb
or
sub
cli
shlb
xchg
subb
dec
push
jecxz
dec
add
add
mov
xchg
cltd
outsb
cmp
mov
leave
sub
cld
fildl
lret
arpl
arpl
jns
popf
adc
sub
push
jp
cmp
movsb
cmp
push
int3
test
js
aaa
pop
addb
jle
sti
test
adc
and
jns
sub
ret
adc
dec
lea
xchg
scas
cs
adc
or
cmp
pop
outsl
dec
pop
pop
sub
mov
jae
and
mov
xchg
adc
xor
and
mov
jbe
xor
xchg
out
clc
push
pop
pop
fstpl
arpl
loope
lcall
xor
aam
sub
mov
jo
pop
xchg
test
dec
ss
mov
xchg
push
ret
mov
or
sub
and
sarl
cld
add
xchg
sti
int
inc
mov
mov
cmp
inc
xchg
adc
and
add
ds
jmp
or
daa
into
pushf
pusha
push
pushf
mov
gs
xchg
cs
dec
xchg
std
jb
and
lahf
push
pushf
cmc
pushf
xor
mov
mov
inc
push
and
lea
jb
int3
sub
mov
xchg
popa
or
pop
cmp
mov
xchg
shll
lock
test
jnp
out
add
movsb
insl
out
jns
add
inc
in
and
rol
test
add
push
pop
jno
mov
add
mov
cli
je
cmc
pushl
out
hlt
outsb
nop
cmp
fstl
pop
mov
xor
hlt
inc
mov
sahf
sub
inc
mov
add
das
adc
lods
sbb
or
adc
bound
std
subl
popf
mov
and
cmpsb
out
mov
fidivrs
ds
push
das
lea
loopne
pop
movsl
mov
test
scas
stos
out
mov
cltd
sub
cmc
shll
xchg
rclb
test
push
cmp
bound
sbb
es
jle
jae
pop
scas
sub
shrl
pop
add
push
rcll
in
xor
int
clc
mov
test
sub
call
xchg
and
mov
sub
xor
mov
clc
cwtl
pop
xchg
xchg
fisttps
jnp
andl
rorb
push
add
int
repz
sub
cmpsb
adcb
js
cmp
push
pushf
fucomip
push
stos
bound
sbb
fisubrs
xchg
pop
jecxz
push
fadd
ss
ss
sahf
cmpsb
mov
scas
ja
je
sub
repnz
sub
pop
lret
add
cmp
dec
lods
xlat
dec
repz
pop
sub
lret
xor
nop
mov
mov
es
sub
daa
std
int3
rep
xchg
or
js
add
push
lods
aas
pop
mov
pushf
push
inc
dec
inc
imul
in
sbb
pushf
jle
hlt
scas
out
mov
cmp
iret
loope
sub
cltd
shlb
adc
mov
ljmp
and
enter
adc
pop
data16
inc
mov
ds
push
stos
insb
arpl
sub
and
cmp
sub
cmc
ds
in
mov
imul
out
mov
jmp
push
xchg
aad
xchg
mov
mov
daa
ret
cmp
int
leave
insb
sub
jp
sub
xor
mov
dec
stos
mov
mov
fimuls
mov
outsl
xor
jle
rorb
mov
ror
pop
into
iret
xchg
fs
pop
adc
mov
mov
jae
lahf
mov
or
mov
mov
in
jp
popa
std
hlt
jno
lret
xlat
sub
mov
dec
jge
sub
jmp
xchg
xchg
jg
bound
stos
test
or
orl
cmp
les
pop
and
ja
out
pop
and
jae
mov
ljmp
inc
add
cmp
mov
push
dec
out
mov
or
lods
dec
xchg
adc
pop
in
subb
clc
or
test
dec
insb
cmc
out
scas
out
scas
fsubp
jne
push
aam
push
inc
jne
xor
in
lock
dec
pop
rcll
and
mov
jecxz
nop
into
loopne
in
pop
lret
test
sti
bound
cmp
dec
mov
aad
add
adc
cmp
xchg
sbb
shlb
lock
inc
repz
push
repnz
movsb
adc
lcall
mov
lods
aaa
xor
aas
mov
mov
or
loopne
xchg
push
test
icebp
ljmp
pop
or
shll
xchg
xchg
aad
sbb
out
dec
xchg
mov
pop
xor
cmp
scas
mov
stc
iret
push
mov
mov
outsb
xor
scas
outsb
stos
arpl
insb
pop
rorb
inc
gs
sahf
mov
mov
jo
ljmp
fildll
enter
push
test
repz
mov
and
push
shrl
iret
or
fistps
sub
pop
pshufw
test
jno
mov
leave
cmpl
xor
ficomps
mov
xchg
pop
push
mov
xor
call
andb
je
addr16
xchg
inc
dec
insb
mov
js
cmp
insb
bound
inc
js
and
ret
push
dec
mov
inc
in
pop
ljmp
hlt
cmp
push
add
aam
xor
fst
popa
pop
mov
pushf
cltd
inc
mov
jge
fwait
rorb
mov
mov
roll
sub
add
hlt
mull
data16
sub
test
daa
sbb
sti
push
mov
pop
mov
ror
fcmovu
pop
iret
and
sbb
xchg
xor
add
dec
push
xrelease
aam
jb
add
jmp
iret
movsb
iret
mov
mov
push
out
shlb
dec
gs
shrl
sbb
movsb
push
xchg
stos
sbb
in
test
jg
lods
insl
popa
popf
repz
es
lea
mov
mov
adc
imul
fldt
push
out
in
andb
ja
xor
fabs
sub
adc
xor
mov
and
cltd
das
push
xor
sbb
sub
dec
pop
inc
aaa
dec
xchg
dec
cmp
mov
ja
imul
daa
nop
mov
mov
ljmp
mov
es
mov
inc
popa
mov
jnp
cmpsb
xor
jecxz
sub
mov
in
mov
inc
push
shlb
in
jb
std
or
and
mov
dec
or
inc
movsb
aam
jno
lea
push
or
pop
dec
inc
dec
jbe
std
ret
ret
pusha
stos
in
idivl
push
in
outsl
lds
cwtd
mov
int
lcall
out
push
jmp
mov
mov
and
mov
xor
mov
xor
inc
loope
lods
clc
push
lahf
mov
jge
es
ret
outsb
movsb
jae
sahf
pushf
sbb
std
inc
aas
fdivl
outsb
loopne
add
int3
ss
clc
dec
and
sub
dec
pop
push
mov
lods
repnz
leave
or
mov
repnz
push
ljmp
xchg
add
repnz
jecxz
cltd
les
js
mov
in
les
cmp
enter
push
icebp
jmp
push
pop
popa
rcrb
mov
roll
or
xchg
xor
sub
xor
jecxz
and
pop
cmpsl
test
dec
getsec
shrb
testb
movsl
cmp
lea
pop
cmp
pop
sahf
outsl
xor
aad
call
sub
jb
mov
xchg
lcall
cmp
sbb
std
arpl
mov
mov
repnz
stos
insl
arpl
bound
mov
fisubrl
jge
fimull
pop
push
ljmp
push
push
inc
ja
scas
lret
fucomp
sbb
dec
jns
cmp
jne
cmc
inc
mov
xor
and
cmc
push
rcl
inc
negb
cmpsb
cmpsb
movsb
mov
add
xchg
popl
sahf
ficomps
cli
out
cltd
cmpsb
pop
xchg
pop
dec
leave
adc
nop
xchg
sub
sbb
cmp
loope
das
mov
ror
les
inc
dec
push
leave
xor
int
adc
std
cmp
cmc
ror
cmpl
mov
loope
add
popf
mov
mov
lret
in
jmp
insb
jbe
test
pop
xor
cmp
mov
popf
stc
cmovno
testl
mov
xchg
pusha
lahf
xchg
shll
sub
dec
xor
leave
out
push
add
or
lea
dec
mov
aas
xor
or
push
sbb
lret
and
sbb
sti
popf
loopne
pusha
add
xchg
ds
fnstenv
int3
icebp
and
jg
in
add
clc
movsb
cmp
outsb
out
dec
xlat
test
dec
cmpb
aam
scas
xchg
lock
sub
push
jmp
pop
inc
xor
lods
xchg
xor
mov
shl
movsl
mov
notb
jo
clc
pop
es
cmp
ja
pop
push
xor
xchg
scas
xor
xlat
push
aad
cmpb
cli
popl
xor
mov
mov
out
jp
outsl
adc
loope
jp
xchg
cmp
cmp
int
leave
cmp
dec
dec
mov
jo
pop
push
sahf
xchg
lock
xor
or
scas
rorb
ficompl
sub
outsb
sub
dec
push
hlt
int3
mov
movsl
test
es
inc
adc
inc
xchg
mov
sar
or
mov
or
enter
push
jne
ss
adc
inc
pop
inc
bound
and
inc
or
xchg
lcall
mov
repz
sahf
lock
mov
clc
inc
or
enter
repnz
dec
and
cmp
std
loopne
js
ror
adc
shl
mov
push
mov
fsubl
add
push
xor
dec
je
aaa
mov
xchg
jnp
std
cmp
pusha
add
sarl
push
shlb
pop
and
jbe
daa
ret
aas
fadd
pusha
pop
jns
aas
clc
jbe
xchg
icebp
std
sahf
insl
mov
xor
xchg
stos
inc
mov
cltd
in
fisubl
sbb
cmp
sahf
fwait
or
lea
push
dec
insl
test
and
sbb
cmp
fsubs
push
cmpsl
push
jl
std
nop
pop
pop
pop
loop
mov
pop
lret
mov
push
loop
push
nop
pushf
jmp
mov
leave
inc
cld
dec
int3
mov
add
sub
inc
test
xor
ret
popa
mov
out
mov
xchg
adc
mov
fbld
imul
mov
clc
jl
ds
mov
ret
movsl
sub
push
mov
mov
inc
ss
sbb
mov
movsb
cmpsb
cmpsl
into
rcl
into
sub
adc
jmp
push
xor
jge
push
sub
adc
pushf
cmpsb
cwtl
and
sbb
push
lahf
adc
mov
mov
push
cwtl
mov
inc
mov
fcompl
xchg
fstpt
pop
mov
test
aaa
iret
push
bound
sub
test
xchg
xchg
xor
dec
aas
mov
fsubrl
orb
testb
int
mov
jecxz
jg
dec
xor
insl
jg
mov
add
push
ljmp
stc
mov
ja
nop
add
jne
popf
lds
imul
xchg
xchg
mov
daa
test
insl
jne
ret
ret
pop
pop
cmp
xchg
call
sbb
cmp
ficoms
lods
out
xchg
cmpl
push
and
fwait
mov
mov
mov
dec
stos
or
mov
loopne
mov
cmp
gs
js
push
mov
cld
fs
loop
jmp
in
push
add
sbbl
adc
imul
cmp
inc
stc
mov
sub
cmovno
jmp
add
sub
inc
jbe
shll
pop
and
cs
nop
inc
call
mov
jecxz
xchg
out
nop
cwtl
pop
mov
mov
pop
cmp
dec
cmp
ja
fadd
inc
inc
fimuls
iret
inc
push
out
inc
cs
xchg
mov
sbb
repz
daa
xor
cmpsl
push
pop
cmp
pushf
cs
jge
xchg
out
inc
jne
mov
jae
sahf
adc
sarb
out
mov
adc
cmc
mov
xor
cmc
fdivp
jno
stc
adc
dec
fdivrl
dec
mov
cmpb
xor
loop
cmp
pop
dec
fiaddl
mov
cmpsb
aam
sbb
sti
mov
and
ss
ds
mov
mov
aas
gs
negl
mov
insb
repz
inc
in
loope
icebp
jne
dec
sub
inc
pop
inc
ljmp
cmp
jo
adc
mov
cmpsl
daa
rorb
adc
mov
dec
jp
stos
mov
jge
pop
sbb
test
cmc
ljmp
dec
sub
insl
nop
into
push
lret
icebp
adc
pop
and
fs
add
xor
leave
imul
mov
sub
and
push
xorl
test
pushf
mov
mov
and
push
aas
adc
scas
loope
sbb
int
xchg
cmc
jl
pop
xchg
xchg
je
and
fnstcw
fwait
xchg
fs
daa
xor
cmp
sahf
xor
xchg
repnz
mov
jno
or
xor
fwait
sub
mov
sbbb
push
mov
ja
mov
popf
pop
out
mov
outsb
or
inc
dec
pop
xor
fsts
inc
cmp
jg
push
push
lahf
sti
inc
push
inc
mov
popf
pop
and
push
cs
cmp
stc
cmp
test
dec
mov
cmp
xchg
jge
xchg
mov
sub
stos
pop
scas
test
ds
mov
ds
dec
std
sub
sahf
stc
xchg
clc
mov
pop
and
cmc
lods
cmpl
push
bound
mov
loope
adc
sbb
xlat
es
sarl
loop
mov
sti
inc
push
xor
popa
jp
cpuid
cld
gs
mov
inc
outsb
bound
outsl
hlt
cs
stos
mov
out
cmp
lods
aam
mov
stos
add
shl
clc
cmpsl
popa
or
pop
insb
cmp
cltd
movsb
stos
cmp
shl
mov
out
and
mov
popf
les
and
xchg
rcrl
jmp
pop
adc
je
adc
mov
mov
stos
iret
scas
nop
call
mov
into
and
dec
lea
outsl
add
dec
sbb
jge
pcmpeqw
jns
cwtl
ss
movsl
mulb
adc
cmpsb
test
add
orb
and
or
mov
pop
cli
ret
aaa
sub
mov
ds
xor
mov
jmp
and
mov
lret
push
pusha
scas
mov
pop
call
int3
bound
scas
shll
pop
ds
in
push
cs
shll
mov
into
and
inc
in
mov
outsb
lods
lret
cmp
pop
and
fdivs
arpl
push
shlb
pushf
or
lods
lret
cmp
out
gs
sbb
dec
movsl
mov
xor
dec
test
jmp
enter
mov
cmp
scas
sub
aaa
shll
fs
cmp
iret
stos
inc
sbb
sbb
lock
int3
enter
lds
out
mov
add
outsb
mov
or
cmpsl
xchg
mov
scas
aad
xor
movsb
out
mov
insl
jge
test
fildl
inc
and
into
in
mov
bound
fsubrl
pusha
jne
and
loop
jmp
or
shl
aad
add
xorb
orl
cmc
bound
mov
mov
dec
jns
lret
ret
fmull
jecxz
dec
push
adc
cmp
std
and
insl
pop
or
adc
addr16
push
sub
xchg
imull
dec
push
push
xchg
jb
or
and
lods
cli
and
ret
movsb
xor
mov
xchg
adcl
pop
mov
xchg
push
cmc
xchg
lahf
cmp
jl
add
call
pop
xor
add
clc
mov
out
adc
int
pop
sti
jno
mov
or
aas
outsb
pop
inc
pop
je
cli
imul
int
or
lahf
outsb
neg
cmc
add
xorb
push
sub
rcll
push
sbb
xor
data16
lock
inc
fwait
cmp
add
adc
cmp
cs
fsts
insb
push
shrl
jl,pt
iret
cs
and
cmpsb
repz
shlb
mov
incb
jb
sbb
ret
in
data16
sbb
xchg
loope
rol
test
pushl
into
in
call
imul
enter
or
sub
cmpsb
outsb
and
imul
pop
fstpt
jecxz
sti
dec
jmp
mov
cli
sti
and
ret
int
leave
sbb
aam
push
cwtl
js
xchg
pop
cmp
mov
xchg
mov
jg
push
sbb
and
imul
adc
lret
sahf
mov
inc
adc
pop
cs
icebp
stos
cmpsl
pushf
or
fstpt
out
xor
jnp
loopne
jl
stos
pop
into
mov
lods
cmpsl
inc
mov
sub
movsl
and
sub
out
fxch
fcom
sbb
in
movsl
xchg
jl
movsl
or
push
push
out
stc
jle
shrl
je
add
add
imul
push
ljmp
loope
in
pop
int
rorb
ss
repz
imul
std
imul
mov
xchg
pop
ja
aas
ljmp
sub
fistpl
xor
ss
or
dec
add
xor
mov
ret
std
fidivs
xchg
fnstenv
lods
aam
or
scas
mov
jmp
push
out
sub
outsb
sbb
movsl
sti
mov
mov
dec
mov
inc
popf
mov
cmp
adc
mov
cmp
mov
push
or
rcrb
mov
and
scas
xchg
sarl
mov
lea
mov
pop
std
adc
jge
xchg
or
mov
icebp
bound
jno
adc
xchg
in
lret
test
xor
out
fsincos
shlb
fstpl
mov
and
into
ror
sub
inc
ror
aam
add
bound
dec
pusha
pop
pop
add
bound
push
mov
inc
mov
test
repz
sbb
mov
dec
fbld
sub
lock
cmc
arpl
mov
xlat
pop
mov
daa
lcall
mov
stos
jmp
sbb
mov
inc
mov
sbb
xor
xchg
mov
or
add
cmpsb
inc
adc
movsl
mov
jg
out
sub
cwtl
push
or
pushf
ss
or
dec
mov
jmp
outsl
mov
mov
popa
adc
sub
sti
jl
mov
faddp
lods
and
adc
es
mov
xor
aaa
call
out
xchg
iret
ret
cs
inc
imul
push
sub
pop
nop
mov
fiadds
out
fimull
add
xchg
inc
lcall
scas
sbb
lret
mov
mov
or
pop
mov
and
sub
sub
mull
jbe
lock
adc
pop
cmp
es
push
les
push
sti
jae
jmp
cmp
arpl
adc
sti
sarb
pop
mov
pop
push
pushf
add
cmc
dec
jae
js
mov
out
add
icebp
ret
mov
mov
arpl
inc
ja
sahf
cmp
push
mov
nop
adcb
cmp
mov
enter
or
mov
movsb
js
mov
int
pop
stos
sbb
jno
mov
addl
inc
sbb
imul
sub
movsb
nop
xor
jmp
inc
scas
lods
adc
inc
or
jge
cmp
movsb
adc
into
jne
lock
xchg
cmc
push
cmp
lret
xor
int
mov
sbb
mov
mov
out
push
stos
xchg
jmp
and
sbb
adc
sbb
xchg
in
pop
lahf
daa
xchg
push
nop
std
lds
imul
mov
pop
aad
mov
and
rcll
fstl
das
dec
jmp
or
icebp
rolb
scas
insb
imull
inc
cwtl
inc
pop
ds
sbb
shl
ja
pop
jo
mov
mov
lahf
push
xchg
daa
sub
scas
in
bound
pop
pop
ret
and
push
fcoms
stc
inc
int
jb
cli
xchg
aam
jo
loopne
push
outsb
sbb
push
roll
fs
mov
sbb
lods
or
jl
adc
sub
mov
cmpsb
mov
insl
sub
dec
jg
in
aad
or
cmp
in
dec
test
jmp
imul
aam
adc
inc
push
test
or
sbb
cmp
std
fxam
scas
aaa
jns
fstpt
movsb
hlt
gs
pushf
in
or
mov
dec
mov
adc
and
shrl
push
sub
imul
std
sbb
adc
adc
add
fwait
mov
pop
pushf
inc
mov
cmpb
dec
icebp
jns
ret
mov
mov
in
out
aaa
mov
sbb
sub
lods
lock
xor
out
inc
push
and
call
les
jns
popa
pusha
pop
mov
or
jmp
push
push
imul
pop
insb
and
repnz
and
ljmp
jle
mov
cwtl
movups
sbb
ljmp
es
cld
sbb
adc
mov
and
ret
push
imul
rorb
xchg
call
cmp
repnz
cmp
push
and
xor
mov
out
cmp
fcmove
push
or
or
cmpsb
dec
lds
in
dec
addr16
pop
xchg
dec
mov
pop
add
sbb
xor
mov
adc
lret
cwtl
xchg
adc
cwtl
mov
js
adc
out
sbb
stos
fs
jl
mov
sbb
pop
push
adc
xchg
xor
xchg
jp
jge
out
dec
cwtl
dec
sub
dec
outsl
fsin
dec
jl
adc
mov
push
pop
sbb
xor
xorb
jl
fadds
fldl
insl
xor
insb
aas
subl
pop
xor
repz
je
pop
sub
sti
push
or
rorl
xchg
aam
rolb
sti
push
inc
popl
xor
xor
mov
data16
xor
in
fildl
jge
scas
lock
mov
loope
test
add
aas
xor
mov
fwait
ss
ret
bound
or
mov
mov
ljmp
fmul
dec
lea
xchg
push
inc
xchg
inc
pmuludq
jp
sub
mov
or
test
repz
push
push
mov
lahf
mov
sbb
enter
and
inc
pop
cwtl
push
mov
mov
mov
mov
or
test
and
cmc
stos
movsl
push
jp
pop
cld
popf
jno
or
pop
add
sub
mov
rclb
push
jmp
ljmp
pop
and
cmp
leave
idiv
pop
sbb
movb
shl
int
sbb
sbb
fnsave
inc
lea
in
movsl
repz
lret
mov
insb
or
fiaddl
rolb
jno
stc
adc
jne
stos
add
push
mov
xchg
jg
cmc
xor
and
or
cmp
mov
sbb
rolb
test
fsqrt
dec
in
jae
push
add
adc
shrl
inc
cltd
xor
ds
xor
insb
pop
cmp
pop
push
jg
lret
outsl
jl
cmp
shlb
icebp
mov
xchg
add
sub
xchg
daa
in
rcll
mov
aad
ds
jns
out
shll
and
cli
call
pop
jp
into
and
adc
jb
inc
inc
dec
stos
mov
mov
leave
add
add
xor
push
mov
lsl
stc
lcall
movsb
xor
xorl
add
aad
mov
mov
sbb
iret
fimuls
pop
jge
ja
push
in
cmpb
sub
jnp
das
mov
fcoms
adc
pop
pop
hlt
test
sti
cmpsl
inc
jae
enter
xor
or
fisttpll
push
cmp
push
adc
sbb
lea
sbb
test
out
push
jnp
add
je
pop
sub
mov
mov
inc
mov
or
lock
pop
push
adc
sbb
inc
sub
pop
jecxz
pop
or
loop
jbe
jno
arpl
adc
mov
inc
xlat
repnz
into
daa
or
ret
jg
pop
adc
dec
shrl
or
outsb
push
in
scas
mov
jbe
sahf
aad
mov
outsb
lods
cmpsl
test
cmp
and
cmpsb
sbb
divl
mulb
cs
mov
test
sbb
xor
test
add
mov
pop
xlat
or
mov
adc
out
sahf
ret
ja
fdivrl
xor
cli
popa
mov
iret
sbb
jne
jle
push
call
clc
mov
sub
mov
stos
mov
dec
out
cmp
mov
or
xchg
fs
orl
push
xor
mov
in
les
inc
and
cli
inc
push
movsb
daa
lret
fsubl
in
pop
in
icebp
fldcw
inc
loopne
in
jns
lret
outsb
mov
aaa
lds
shll
pop
repnz
int3
mov
mov
test
outsl
pop
adc
mov
mov
jmp
or
xchg
sub
and
inc
pop
fdiv
clc
xlat
subl
xchg
xor
movsb
inc
mov
sub
lret
fs
std
sub
movsb
or
jmp
repz
daa
icebp
repnz
or
ret
repnz
or
loop
imul
icebp
cmp
ret
fcoml
adc
clc
loop
sar
std
push
xor
nop
inc
test
sbb
and
sbb
mov
mov
push
rclb
sub
ljmp
outsb
push
arpl
add
fbld
push
aaa
jge
inc
cmc
xor
scas
call
sub
movsl
insl
mov
popa
and
in
es
into
add
xor
xor
movsl
xchg
jg
out
and
ljmp
or
cld
in
mov
mov
dec
aad
pushl
popf
and
test
rcl
mov
nop
loopne
into
lret
add
mov
movsl
adc
andb
in
orl
or
cmp
push
mov
sti
stos
mov
add
mov
mov
movsl
mov
dec
mov
cmp
fs
inc
sbb
or
rcr
loope
repnz
jns
push
sbb
test
inc
xchg
sbb
gs
ss
ss
mov
dec
push
out
pushf
dec
pusha
je
cltd
test
rolb
cmp
xchg
xchg
mov
shll
jp
jnp
mov
dec
test
fs
inc
and
jns
xchg
lahf
lods
inc
iret
shlb
dec
adc
pop
mov
dec
imul
or
std
add
fisubs
mov
notb
jle
xor
fcmove
mov
or
adc
in
or
cmp
jbe,pt
adc
mov
inc
bound
adc
aam
stos
fldenv
clc
xor
adc
imul
out
decb
jae
jmp
lcall
jge
jp
sbb
jmp
push
and
mov
cmp
cmc
jge
nop
shrb
cmp
jp
ja
sti
sbb
int
lock
inc
dec
mov
cmpl
xor
imul
enter
mov
rcll
push
push
sub
gs
nop
aad
fstps
cltd
aad
jne
fs
gs
mov
jmp
fwait
movsl
leave
dec
enter
mov
int3
gs
and
pusha
ret
out
jge
loopne
aas
push
loopne
xor
dec
mov
stos
lods
imul
popa
jmp
popa
enter
push
push
sbb
loope
addr16
pop
orl
push
test
aad
jno
repnz
ret
ret
std
add
aam
pop
cs
add
pushf
push
movsb
pop
nop
in
and
xlat
or
sub
cmp
or
icebp
cmp
out
in
scas
std
popf
push
jecxz
sub
push
rolb
lcall
or
add
xor
out
fdivrp
cmp
adc
xor
dec
or
das
movsl
call
and
test
sbb
pop
fiadds
lock
push
mov
fxtract
stos
fidivrl
xchg
mov
xchg
adc
stc
push
mov
imul
xor
jo
push
cmpsl
sub
inc
loop
addr16
cltd
push
mov
call
push
mov
and
xor
dec
insl
mov
ret
cmp
sub
ret
clc
pop
mov
push
sub
pop
sub
mov
inc
into
mulb
adc
test
jne
xchg
icebp
jbe
icebp
mov
mov
test
mov
es
or
push
adcb
pop
ljmp
pop
jbe
push
xor
in
in
jae
add
and
shll
add
mov
xor
cli
fxch
lret
shr
sbb
add
xchg
or
leave
clc
add
sbb
mov
rorl
fstl
xchg
inc
xor
sbb
popa
pop
cld
lds
out
fidivrs
in
test
adc
cmp
dec
icebp
add
fs
dec
push
nop
cmp
pop
fucom
dec
jae
pop
adc
and
idivb
mov
fwait
inc
insb
jle
inc
dec
std
and
xor
jne
dec
xchg
lock
adc
adc
xor
inc
sbb
inc
xchg
fistpll
dec
sti
inc
add
in
pop
aas
test
sbb
fwait
add
icebp
test
or
or
push
jns
out
andl
inc
inc
or
arpl
leave
popa
sbb
aad
lock
jnp
cmp
mov
sub
cld
movsb
or
sub
and
pusha
pop
inc
sub
dec
jl
shll
push
ja
mov
and
adc
testl
loop
sbb
push
pop
pusha
jns
nop
loope
insl
xor
mov
inc
adc
cmp
stos
cmpsb
and
pop
in
cs
rcll
cmp
xor
fnstenv
mov
pop
jo
jns
mov
mov
rclb
xchg
xchg
xchg
cmpsl
mov
cmp
sbb
clc
inc
add
fcomps
dec
fs
in
aas
ljmp
mov
jb
dec
lock
packuswb
addr16
out
cmp
loopne
insb
lods
fldcw
adc
jb
aam
xorb
mov
in
loop
aaa
bound
pop
fsts
jbe
test
or
bound
fnstsw
aam
lahf
lods
dec
sbb
iret
mov
fwait
stos
and
out
sub
dec
cmp
into
mov
push
sbb
adc
dec
stos
push
add
sbb
aaa
jecxz
xchg
and
inc
pop
imull
mov
gs
popa
out
mov
les
scas
dec
mov
mov
popf
mov
aam
push
fdivrs
xchg
mov
mov
sub
mov
pop
push
and
adc
repnz
mov
fistpl
pop
inc
out
jecxz
jecxz
xchg
add
cmp
enter
mov
pop
cmp
icebp
lods
iret
shrb
mov
fwait
outsb
xchg
aam
jp
sarl
cmp
enter
inc
lret
fwait
imul
jecxz
fs
rcrl
das
pop
bnd
fwait
jb
outsb
lret
cs
xlat
ret
xor
mov
and
test
sub
add
add
ret
pop
je
cmp
repnz
outsb
mov
sbbl
stos
pop
push
cmp
inc
push
mov
mov
addr16
mov
lds
test
ret
push
scas
movswl
rcrb
clc
inc
test
iret
repnz
cmp
cmp
and
sub
mov
adcl
test
mov
ss
xlat
pop
inc
mov
push
sbb
dec
jbe
jb
sbb
pop
fcomps
icebp
push
cmpsb
push
pop
popf
repnz
jns
inc
pop
loope
dec
xor
mov
test
cmpsb
aam
lret
jb
mov
popa
xor
enter
jmp
shll
nop
mov
xchg
mov
mov
mov
add
or
inc
add
lret
or
sbb
xor
shlb
aam
icebp
aam
add
mov
lods
loop
push
jo
out
cmpsl
inc
sarb
or
leave
cmp
cmpsb
pop
xchg
mov
test
jno
mov
icebp
and
xchg
in
sti
loop
cli
lcall
dec
or
xlat
lret
mov
data16
mov
mov
cmp
sbb
into
out
xlat
jae
je
adc
cmc
xchg
out
push
pop
cmp
xchg
psubq
mov
sbb
icebp
mov
jbe
dec
decl
dec
pop
dec
lods
stos
adc
mov
imul
mov
jecxz
cltd
or
shll
out
lcall
add
aam
jae
sbb
iret
gs
and
andl
in
sub
lret
sbb
dec
jmp
sub
lret
outsb
adc
shll
push
jge
aas
mov
movsb
mov
xchg
and
mov
inc
test
jnp
faddp
test
add
sub
mov
jmp
sti
addr16
lea
fstps
daa
adc
pop
hlt
sub
fdivs
in
outsb
jns
gs
and
insb
mov
cli
ljmp
pop
mov
aam
push
mov
jns
std
lret
or
insl
mov
fs
jnp
pop
add
shll
cltd
outsb
cmpsl
inc
inc
dec
mov
inc
mov
sub
adcl
inc
dec
jle
in
jge
pop
js
aaa
jae
and
lret
cmp
pop
repnz
pop
xor
push
lea
pop
pop
xchg
xchg
test
push
aaa
loop
aaa
sbb
cmp
or
jno
test
test
push
outsl
jae
adc
cmp
mov
nop
jns
and
das
mov
jg
aas
imul
sbb
push
mov
imull
dec
loop
jb
data16
xchg
or
outsb
xlat
or
sbb
sbb
mull
pop
inc
mov
xor
out
and
push
jl
out
loope
jo
outsb
nop
push
imul
lods
push
push
orb
xchg
jne
shll
lods
pop
roll
cmp
ret
test
inc
adc
cmp
popf
mov
xchg
out
aad
cmc
pop
jo
aas
mov
jg
push
pop
out
loop
cwtl
cmpsb
add
scas
mull
mov
mov
jno
das
gs
test
scas
in
imul
inc
into
dec
cmc
jg
ja
pop
cld
mov
jo
mov
icebp
js
inc
mov
cmp
cmp
imul
sub
fmull
mov
in
test
mov
jb
outsb
outsl
jno
lahf
mov
loope
in
or
ljmp
fldt
aad
shl
push
jbe
dec
test
dec
fadds
pop
push
adc
mov
lahf
sbbl
xchg
cmp
adc
test
gs
into
dec
pop
pop
enter
ja
add
add
in
mov
jmp
repz
outsl
daa
in
popa
mov
lret
jne
mov
mov
add
xor
sbbb
sub
mov
or
aaa
clc
rclb
nop
cld
xchg
jb
and
out
and
das
cmp
and
das
or
adc
push
test
xchg
ljmp
or
dec
mov
imul
ret
sub
push
jbe
into
in
es
dec
aam
jmp
inc
dec
adc
out
pop
cmp
mov
arpl
movsl
in
and
xor
and
sub
xor
call
mov
gs
inc
sub
xor
sub
hlt
dec
inc
pop
shll
ljmp
and
je
add
mov
and
jecxz
fdivs
mov
into
aas
jbe
push
loopne
jmp
inc
mov
xchg
mov
test
daa
cmp
js
outsl
mov
add
ja
and
sub
push
dec
fs
and
shl
mov
inc
lret
les
jo
rcr
adc
jae
xchg
sub
scas
push
jbe
inc
xor
das
and
inc
push
pop
dec
mov
insl
out
imul
push
popf
dec
mov
in
dec
mov
cmpsb
cmpsb
xchg
xor
stc
lock
dec
inc
repz
push
loop
add
testb
inc
inc
pop
xor
js
movsl
mov
push
jecxz
mov
out
pop
pop
sbb
mov
out
negb
add
add
push
cmp
cwtl
jl
cmpsl
xor
andl
cmpb
cmp
outsb
mov
inc
pop
mov
sub
and
repnz
jno
stc
and
mov
sbb
or
xor
sub
enter
out
pop
shlb
dec
jmp
out
jno
cmp
in
fwait
idivl
jns
inc
add
pop
pushf
and
jae
add
stc
in
add
ret
xchg
mov
imul
sbb
or
or
mov
out
loope
dec
cli
ja
push
repnz
lds
mov
subl
int
enter
adc
in
movsb
and
and
cmc
in
xchg
into
mov
mov
cmp
clc
out
push
mov
sbb
inc
mov
cltd
popl
test
inc
es
negb
repnz
add
aas
mov
xchg
imul
mov
and
cltd
inc
test
jecxz
les
gs
jnp
mov
xchg
pop
push
inc
adc
and
dec
xchg
push
cmp
fsubrp
lods
cmp
pop
movsb
jmp
nop
mov
cwtl
xchg
sahf
pop
pop
inc
jmp
les
push
sarl
scas
in
std
loopne
sbb
jb
inc
mov
rorb
fldenv
mov
lods
adc
div
adc
mov
sub
mov
out
ds
lret
inc
mov
clc
daa
out
repnz
sbb
rep
mov
mov
pop
aam
xlat
ret
ret
mov
pop
lods
out
inc
int3
cwtl
mov
in
xchg
sub
dec
xor
push
mov
lea
adc
inc
pusha
divb
pop
shld
mov
cs
and
add
push
fwait
in
adc
pop
xchg
xorl
out
scas
in
cmp
or
enter
inc
fdivs
popa
or
shll
out
dec
sbb
int
cmp
push
int
fsubrl
xchg
bound
xlat
add
fs
mov
notb
ljmp
mov
adc
subps
or
dec
js
push
aad
ret
adc
frstor
cmp
imul
cmp
or
inc
out
jbe
mov
pusha
ja
leave
jmp
cs
sub
loopne
js
inc
es
cmp
aas
aam
fsubr
rclb
adc
cli
mov
jp
pop
sbb
sbb
or
aam
xchg
mov
scas
bnd
outsl
fidivrl
repnz
push
out
xor
mov
push
xor
lds
frstpm(287
sbb
orb
in
lret
std
fildll
xchg
add
ficomps
cs
sbb
call
mov
pop
cld
test
mov
mov
jbe
sub
aas
mov
mov
mov
aas
xchg
lret
test
nop
add
imul
xor
adc
pop
cmpsb
mov
sub
imul
ja
cltd
les
arpl
js
jbe
movsb
rep
mov
loopne
xor
mov
jge
sarb
dec
fwait
mov
inc
and
mov
cmp
and
enter
ds
stos
jne
je
repnz
xor
stos
into
gs
push
cmp
mov
clc
pop
mov
test
cs
shrl
push
jnp
adc
in
inc
cmp
sbb
les
and
stc
orl
pop
repnz
arpl
mov
mov
add
xchg
cmc
ror
mov
jb
cmpsl
cmp
ja
xor
into
sub
loope
int3
push
xchg
ss
sahf
push
push
push
repnz
jnp
les
pop
outsl
jns
cmp
sub
lcall
and
cli
icebp
xchg
jnp
js
adc
push
xor
dec
dec
dec
outsb
test
mov
lret
rol
mov
xor
mov
nop
and
xchg
inc
mov
fxch
iret
lods
add
mov
and
push
pop
bound
scas
xlat
sarb
fdivrl
sbb
jg
gs
xor
repz
fwait
dec
sub
pop
cmp
push
cwtl
pop
xor
and
xor
adc
cmp
inc
in
js
inc
andb
adc
mov
sbb
sbb
ret
roll
push
xor
je
mov
push
lea
repz
push
pop
jp
sub
cli
test
cmp
out
scas
push
xorb
test
xchg
dec
roll
mov
mov
loopne
lret
mov
jmp
dec
add
leave
iret
sub
jl
cmp
fistpl
test
pusha
sbb
fiadds
xor
movsl
and
fists
sti
fidivrs
xchg
inc
cmp
cmp
mov
sbb
sbb
leave
mov
lods
sub
or
sbbl
fidivrs
inc
adc
loope
or
call
fwait
and
lock
mov
lcall
push
xchg
mov
fsubrs
test
add
xchg
sub
or
dec
or
ds
aad
xchg
push
lret
cmp
in
sub
adc
in
xchg
xchg
outsl
cmpsl
sahf
push
inc
or
add
icebp
test
pop
imul
mov
xlat
sbb
clc
xchg
cli
push
and
pop
mov
mov
xchg
and
xor
and
or
push
xor
repz
inc
push
fadds
or
jmp
adc
js
enter
push
loop
lds
cmp
dec
lahf
mov
pop
xor
dec
sbb
sub
cmp
sub
adc
gs
dec
xchg
insb
lock
adc
inc
mov
push
lret
ss
cmpsl
aaa
add
jb
stc
pusha
jle
adc
xlat
mov
fwait
repnz
pop
iret
psrlq
addr16
jb
loope
pop
test
std
test
nop
testb
fidivl
loope
daa
int3
clc
xchg
mov
mov
scas
repz
mov
push
and
push
mov
in
andb
xor
fists
pop
pop
cmp
dec
lahf
fs
loope
cmp
sbb
sbb
sbbl
pop
in
dec
adcl
jns
rcl
sbb
adc
imul
loope
inc
push
sbb
or
pop
sub
scas
cltd
fwait
jno
je
fucomip
pop
mov
lcall
icebp
adc
xchg
fldl
add
dec
pop
lds
gs
pop
sub
or
fmulp
cmpb
xorb
test
mov
mov
and
mov
adc
fstpt
inc
push
jmp
mov
sub
add
xor
mov
or
lea
jb
inc
xchg
icebp
push
test
sub
jp,pn
in
out
hlt
lahf
jnp
popf
mov
push
pop
cli
xchg
mov
arpl
es
cwtl
test
cmp
mov
inc
push
pop
xchg
pop
inc
jae
ljmp
xor
push
pop
sahf
mov
ret
xor
mov
ret
cli
imul
cli
iret
lock
test
movsb
call
gs
xor
add
xor
pop
cmp
sbb
aas
jle
push
je
nop
mov
push
popl
loop
in
lret
inc
cmp
andl
ret
sub
jb
insl
mov
pop
rcll
imul
cli
lret
cmc
inc
adc
mov
dec
pop
imul
xchg
jne
pop
fmul
int
arpl
jno
neg
popf
cmp
les
mov
push
dec
cltd
fwait
repz
xor
lods
xor
xor
mov
mov
push
movsl
repnz
cmpsb
adc
jp
or
les
xchg
cmp
mov
push
cmp
mov
add
imul
and
xchg
xchg
out
daa
aaa
cmp
mov
lret
add
js
jae
mov
das
enter
dec
push
std
fstpl
in
call
cmp
rolb
mov
add
push
mov
aaa
in
lcall
jmp
mov
stc
test
jge
mov
cmp
int3
push
out
dec
bound
cmp
fcomp
mov
cmc
popf
outsl
and
mov
lds
sbb
sahf
sub
sbb
icebp
xchg
cwtl
shl
pop
mov
icebp
movb
mov
iret
xchg
cmp
pop
mov
mov
jae
enter
mov
loope,pn
xchg
mov
xlat
dec
int3
xchg
outsl
add
std
mov
sub
sbb
sub
inc
clc
lahf
or
push
cs
fstps
xlat
fnstenv
mov
fwait
adcl
into
js
lods
xchg
lahf
sar
or
ret
xchg
cmc
push
ljmp
jbe
push
imull
cbtw
pop
pop
cs
sbb
popa
gs
lret
pop
call
jno
mov
in
mov
nop
lcall
aam
sbb
bound
jns
pop
dec
sahf
sbb
and
adc
cmpb
enter
push
mov
push
ss
mov
roll
movsb
sbb
sub
addb
sub
lea
imul
and
pop
xchg
adc
popa
rcr
cmpsb
and
loopne
mov
test
xor
pop
sti
out
adc
mov
movsb
loop
dec
mov
cmp
mov
adc
mov
ds
sbb
arpl
mov
movsl
pop
fs
leave
mov
jnp
pop
sbb
arpl
test
lock
and
pop
mov
cmp
push
push
out
or
push
sarl
adc
jecxz
pop
mov
xchg
inc
inc
xchg
sub
xchg
mov
jnp
pusha
push
fbld
mov
jl
adc
jb
and
jno
in
in
inc
out
adc
ret
hlt
jo
sbb
ret
adc
ret
scas
int
mov
add
fstl
scas
ja
sti
sahf
cld
sbb
adc
in
push
enter
inc
add
pop
jnp
cltd
sbb
repnz
into
xor
insl
or
out
xor
cmpsb
jnp
mov
dec
dec
dec
sahf
xchg
popf
xorl
std
and
inc
or
inc
mov
lret
call
test
cmp
mov
push
int3
in
fistpll
stos
outsl
subb
jle
jns
sar
push
lcall
mov
outsl
fnstsw
loop
or
add
sbb
enter
mov
push
adc
es
leave
mov
dec
negb
fwait
cltd
cmp
out
mov
int3
mov
sub
lret
sbb
add
mov
insl
out
aad
jb
adc
sub
pop
ds
shl
ret
out
and
sub
sbb
pop
mov
ja
jne
inc
popa
mov
pop
std
xor
clc
aam
orl
dec
add
jo
fimull
jb
fneni(8087
ficomps
cmp
fyl2xp1
cmpsl
jno
rorl
sub
std
rorb
mov
iret
xor
inc
mov
jae
jo
out
sub
arpl
xchg
lods
or
cltd
insl
js
sbb
outsb
arpl
outsb
xlat
sub
adc
movsb
jg
std
daa
xor
rcrb
sub
or
add
in
lret
sub
imul
jae
leave
cmp
aaa
pop
lock
stos
lahf
ja
aam
lock
inc
mov
or
xchg
xchg
imul
or
js
mov
xor
or
repnz
xor
mul
loop
mov
lods
aad
dec
out
or
mov
hlt
lods
loope
test
hlt
test
imul
sbb
hlt
mov
push
pop
mov
jecxz
cmp
test
jmp
inc
stos
pop
mov
int3
stos
sub
mov
mov
push
fnstsw
aaa
dec
and
adc
daa
daa
out
pop
xchg
cmpsl
out
cltd
xor
push
push
int
xor
xchg
inc
lods
stos
pop
stos
rolb
test
hlt
jecxz
insb
inc
pop
cld
sub
arpl
lea
out
fwait
cmp
sbb
jmp
lcall
or
cld
lock
xchg
mov
test
mov
xchg
dec
push
xor
xor
loopne
cmpsl
pop
mov
lret
lret
popf
sti
cli
dec
enter
jne
loopne
cwtl
nop
mov
cwtl
outsb
and
gs
bndstx
jbe
std
int
iret
pop
or
and
push
xor
imul
out
add
adc
movq
mov
cmp
push
cld
pop
cmc
ljmp
push
enter
clc
add
jle
insl
mov
int
rorl
sbb
nop
inc
xchg
loop
push
push
insl
imul
divl
jb
filds
frstor
inc
imul
pusha
arpl
fld
out
add
pop
fiadds
cmpsl
das
das
sub
les
insb
hlt
sbb
shll
adc
cmp
mov
int
sbb
add
cmp
stos
pop
mov
idivl
sub
jns
iret
fbstp
loope
jno
test
mov
leave
test
enter
popf
inc
mov
mov
mov
pop
mov
dec
and
inc
and
add
sbb
xchg
loopne
xchg
dec
test
les
iret
mov
mov
jae
add
jb
cmp
fiaddl
loopne
cwtl
xchg
xchg
sbb
mov
xchg
jecxz
xorl
mov
jle
test
xor
jle
hlt
adc
cmp
xchg
dec
and
sub
fisttps
inc
fs
xor
cs
call
xor
adc
test
inc
pop
movhps
repz
mov
fs
xchg
inc
scas
jmp
mov
mov
stc
pop
mov
inc
jmp
pop
or
mov
adc
pusha
and
adc
adc
mov
cwtl
mov
mov
shlb
fmull
hlt
call
mov
fsubr
movsl
pop
mov
xchg
fdivrl
mov
iret
adc
cs
xchg
ret
push
xchg
test
sub
xlat
sbb
or
aaa
adc
adc
mov
sub
cmp
sti
lock
rol
gs
outsb
xor
roll
out
movsl
lea
pop
or
inc
pop
mov
and
mov
xchg
fs
sbb
sub
test
into
enter
jo
data16
mov
adc
rolb
and
pop
jmp
xchg
and
add
sbb
cmp
fisttpll
mov
scas
divl
jns
in
or
cld
enter
lods
scas
push
mov
subl
rcll
mov
int
pop
imul
lcall
pop
popf
and
xor
je
cli
and
xchg
lcall
ss
mov
js
adc
mov
mov
add
jp
sbb
rcl
xchg
xchg
mov
enter
adc
mov
push
cmpb
xchg
js
mov
aaa
mov
add
rclb
or
into
push
mov
inc
inc
loop
data16
pop
add
fiadds
adc
pop
and
dec
or
in
fucomp
aaa
sub
fistpll
jge
std
jo
stos
sub
fs
je
or
clc
inc
scas
pop
add
fistpll
xlat
jne
xchg
ja
adc
arpl
lods
mov
adc
or
mov
mov
je
andb
roll
repz
gs
sub
and
cs
fistps
sbb
pop
cmp
or
test
into
insb
lcall
xchg
pop
test
fsubr
int
inc
push
jns
lcall
pop
jno
xchg
jns
jns
sahf
rcrl
push
lret
filds
jle
scas
xchg
movsl
into
xchg
popa
adc
fbstp
xor
mov
addr16
mov
stos
and
test
mov
stos
pusha
sbb
lret
mov
lods
xchg
data16
pushf
jge
xchg
push
sbb
jl
pop
js
les
fldt
push
inc
and
and
outsl
mov
xor
inc
js
cmp
arpl
mov
shl
xor
and
cmp
stc
test
in
jns
jns
mov
jmp
dec
shl
mov
int3
xchg
mov
fiadds
lahf
jnp
xchg
in
fwait
dec
aam
or
push
ljmp
push
dec
fstps
sub
dec
fdivrp
cmp
sbb
scas
push
pop
nop
nop
push
mov
stos
xchg
and
repz
jo
push
push
repz
out
test
mov
outsb
pop
mov
mov
xchg
add
jp
cli
or
out
xor
fwait
cmp
cmpsb
sub
pop
jno
cs
out
cltd
and
xchg
stos
std
cmp
inc
inc
adc
cltd
fwait
push
inc
gs
fcmovb
or
jns
sub
mov
ja
push
or
push
add
fnstsw
pop
dec
xor
mov
cltd
dec
xchg
rcll
or
iret
scas
in
ss
pop
pop
pop
push
sbb
and
fbld
std
mov
jb
cwtl
das
lea
adc
mov
cmp
loope
out
aam
and
jl
in
sarb
aam
and
xor
in
mov
push
xchg
or
push
arpl
jo
mov
in
pop
lahf
mov
mov
cli
push
sbb
cmp
mov
and
push
fimuls
cmp
aas
les
mov
test
popa
mov
movsl
aaa
iret
push
inc
loope
mov
hlt
ret
lods
jl
push
cmc
mov
pop
ss
push
lret
lahf
ss
repz
push
fdivl
out
mov
mov
rorb
sbb
mov
or
fwait
xchg
cmp
outsb
mov
divb
int3
mov
mov
sub
incl
xor
in
shlb
mov
add
sub
std
int3
cmpsl
test
and
mov
jbe
pop
jns
arpl
mov
cmp
mov
mov
push
ret
mov
daa
out
loope
mov
lods
mov
xchg
dec
mov
jnp
es
mov
loop
or
roll
or
in
std
xchg
jmp
dec
bound
lret
jns
out
fstl
dec
sub
dec
nop
fsubrp
sar
int
push
lahf
or
int
inc
pop
dec
cmc
or
fimull
pop
mov
or
jne
cmp
pop
inc
fdiv
sub
lcall
or
loope
mov
sub
cltd
jmp
jecxz
pop
and
mov
pop
push
movsb
shrb
xchg
xchg
fisttps
sbb
and
rcl
inc
mov
les
lock
outsl
jne
repz
add
roll
das
pop
insl
test
out
ja
adc
pop
fistps
lods
mov
cmp
mov
xor
ljmp
sbbb
mov
mov
mov
or
mull
lret
pop
repnz
arpl
mov
cltd
ficoml
decb
test
xchg
test
pusha
and
jne
hlt
jg
add
aad
in
push
aaa
mov
mov
andl
jbe
adc
adc
sub
sub
pop
fdivl
push
sahf
divb
mov
sub
or
or
jo
bound
shr
add
in
imulb
jnp
dec
pushl
out
leave
test
shlb
lcall
pop
inc
lcall
pop
fdivrp
addl
fdivrl
add
adc
and
push
data16
bound
push
sbb
sub
cmpsl
jecxz
aam
adc
mov
pop
into
movsb
cli
shlb
insl
xchg
push
rcl
dec
fistps
test
stos
and
mov
scas
sub
inc
dec
stos
adc
dec
subl
hlt
int
dec
mov
lea
paddsw
sbb
jne
add
notl
add
cmp
mov
mov
mov
jno
shr
cmp
stos
push
push
sti
xor
xchg
add
dec
das
inc
cmp
add
test
xor
es
mov
xchg
cmpsl
mov
fistpll
sbb
xor
jmp
jmp
jmp
pop
pop
push
xor
bswap
jle
pop
push
and
das
fcmovu
lea
dec
les
fnstcw
lods
push
mov
pop
insb
in
lahf
mov
xchg
push
rol
push
xlat
push
mov
cltd
mov
push
push
or
cld
pop
popa
mov
cmp
mov
push
jl
pop
pushf
mov
sub
push
ja
jp
lahf
dec
or
and
sarl
lock
adc
int3
mov
cmpsl
mov
mov
push
ss
aad
fmulp
sub
inc
icebp
or
add
imul
out
outsl
pop
xor
in
sub
std
inc
sbb
fs
or
clc
add
jno
out
or
jmp
jno
xchg
sub
leave
loopne
or
adc
sub
das
sub
push
daa
lret
ficoml
insb
and
xor
shufps
test
pop
mov
pop
jecxz
in
es
fstpl
pop
jnp
xor
push
dec
mov
lcall
mov
xor
sbb
and
pop
mov
neg
sbb
adc
jecxz
and
cli
inc
pop
inc
adc
mov
add
xor
mov
inc
push
movsl
sbb
cld
cli
rorb
lods
nop
fcoml
loopne
cld
jl
or
and
mov
sbb
cli
andb
insl
and
xchg
dec
or
out
lcall
lret
jmp
nop
or
mov
dec
cmpsl
mov
out
aas
mov
mov
scas
fidivrl
daa
nop
adc
in
aad
aad
es
outsb
out
notb
add
ret
cmp
push
pusha
push
mov
repnz
movl
loop
sahf
iret
jbe
loopne
mov
inc
ret
lock
scas
bound
mov
das
push
push
xor
clc
sahf
icebp
mov
int3
ja
cli
jge
scas
sub
add
adc
pop
in
fiadds
lock
mov
jae
cmpsb
add
xchg
jle
orl
cmp
andb
mov
pop
fucom
movsb
mov
fdivp
cmpsb
jne
jle
ror
les
int3
pop
loop
cld
mov
addl
es
in
sbb
mov
popf
test
push
mov
sub
lret
pop
mov
mov
cmp
repnz
pop
je
icebp
add
sti
push
inc
fwait
or
jge
insb
loopne,pt
ljmp
xchg
sub
jecxz
push
pop
cmp
jns
in
stc
xor
pop
int3
xlat
sbb
movsb
add
xor
repnz
push
and
loop
out
insl
and
pop
testb
jne
push
or
fwait
mov
pop
pop
dec
into
and
in
cmp
imul
and
sbb
aad
sbb
sbb
cmp
ss
xlat
scas
add
adc
imul
and
jp
ret
outsb
cmp
xor
out
stos
push
ljmp
mov
push
addr16
out
adcl
or
fcmove
jp
push
sahf
lret
adc
fistpll
and
push
jmp
mov
lods
push
jb
sahf
loope
ss
pop
push
mov
jns
pop
lock
imul
jp
sarb
rcr
mov
sub
pusha
cmc
dec
bound
lahf
fstpt
mov
dec
out
movsb
shlb
movsl
cmp
je
test
mov
cmp
mov
ds
rorl
mov
aam
loop
lock
fstps
addl
outsb
jmp
dec
xor
icebp
mov
sub
jecxz
push
stos
or
mov
in
fsts
sub
ss
pop
push
push
stc
clc
dec
orb
xchg
test
inc
push
mov
mov
cmp
enter
fldenv
adc
sub
push
sub
outsb
sub
test
aad
sbb
mov
dec
clc
outsl
mov
or
loopne
outsb
addr16
inc
loopne
arpl
add
jmp
ja
and
xchg
rcll
repz
rcl
pop
loope
mov
jp
pop
adc
dec
mov
inc
lret
jecxz
popf
rcrl
add
sbb
mov
inc
or
lock
or
push
add
jecxz
scas
clc
popa
shrb
imul
cmp
sub
test
lea
outsb
push
jmp
std
clc
loope
adc
inc
icebp
cmpsb
pop
mov
int3
test
mov
xchg
sti
push
shll
shlb
loope
inc
pusha
out
mov
ja
cltd
or
push
lea
inc
inc
sub
xlat
in
push
rep
sbb
leave
push
clc
pop
mov
popa
push
and
rcrl
or
arpl
test
mov
cwtl
adc
or
loope
or
lods
cmpsb
inc
jo
stc
arpl
mov
js
ds
loope
fwait
push
jle
and
xor
push
cs
jp
xor
push
iret
xchg
mov
fs
jo
lea
adc
cwtl
push
cli
dec
dec
jo
xchg
xchg
jae
iret
push
and
js
sbb
movsl
sbb
dec
int
fwait
dec
xor
mov
sbb
je
stos
pop
inc
mov
pop
loop
inc
pop
fisubrs
ds
popa
pop
xchg
jmp
inc
aaa
pop
bound
push
or
mov
inc
xchg
addr16
jecxz
mov
fdiv
adc
pop
mov
movsb
mov
inc
std
sub
enter
fs
add
push
jg
lods
js
push
jno
inc
pop
sub
ds
dec
das
sub
push
arpl
mov
idiv
xor
dec
add
or
ss
jne
pop
push
push
sub
test
out
and
xchg
bound
test
cmp
jmp
idiv
adc
mov
nop
pop
push
pusha
jae
dec
outsb
mov
ret
aam
out
add
lock
fisubrs
hlt
loop
popa
popa
daa
lret
cmp
jo
sbb
out
int3
fnsave
or
daa
in
mov
mov
imul
and
dec
sarl
adc
mov
add
aaa
pop
test
and
out
pop
xchg
loop
pusha
jbe
mov
outsb
jge
push
scas
or
xor
mov
out
scas
iret
insb
pop
ljmp
jno
adc
push
aaa
and
popa
xchg
push
stos
cs
ret
dec
popf
test
xchg
inc
jge
or
in
pop
lea
sub
mov
incb
test
scas
insl
pop
jecxz
sbb
adc
sbb
push
cld
add
enter
leave
cmp
mov
sbb
test
scas
sbb
jl
mov
rcrl
pop
sbb
pop
loopne
sbb
pop
dec
test
ret
pop
and
sahf
mov
fldenv
xchg
sbbl
aam
in
daa
and
xlat
cli
into
jo
and
jp
rolb
xor
sbb
enter
ljmp
inc
jns
adcl
push
push
dec
jmp
cmp
and
repz
inc
xor
dec
fmuls
ljmp
das
hlt
mov
loop
sub
jnp
lods
adc
int3
mov
push
inc
adc
sub
scas
sbb
fldenv
mov
ss
jle
outsb
lock
add
dec
push
scas
or
add
mov
add
mov
fldenv
sti
sbb
or
mov
in
fstpl
subb
and
sub
stc
movsb
leave
popa
jle
jno
aaa
loopne
fmull
inc
cwtl
dec
xor
mov
dec
repnz
out
test
jle
mov
pop
call
adc
outsb
js
test
and
cmpsl
xchg
mov
jne
clc
mov
pop
push
xor
mov
rol
cmp
lret
dec
les
insl
or
clc
or
or
adc
xorb
and
or
fstpt
xor
nop
aad
rclb
outsl
fisttpll
push
xor
stos
cltd
andl
sbbw
mov
std
xchg
mov
or
dec
and
imul
popa
inc
inc
lahf
sarl
xchg
fmuls
shlb
dec
lret
outsb
xchg
pop
mov
decl
bound
xchg
or
dec
add
jl
ret
mov
scas
mov
and
or
lahf
jg
add
lds
inc
lods
jbe
mov
shrb
ds
out
adc
es
dec
aas
pop
add
add
stos
pop
push
je
das
rclb
rclb
inc
jbe
pop
xchg
jne
mov
jo
int3
push
mov
sbb
and
ss
jle
movsb
push
lret
sbb
test
cltd
mov
mov
aaa
xchg
sub
mov
pop
mov
aaa
lea
xor
fs
cs
pop
jl
and
pop
mov
insl
sub
rolb
cwtl
fcoms
mov
notb
cmp
jmp
pop
jb
in
pop
xchg
or
mov
inc
sub
mov
inc
jecxz
mov
pushf
call
data16
dec
cmp
sbb
sbb
in
sbb
mov
pop
pop
mov
outsb
mov
add
setl
jb
push
push
xchg
lret
cmpsb
fistl
xlat
push
daa
ds
mov
push
dec
lods
pop
fsubr
sahf
dec
push
imul
pusha
sub
cmpsb
push
cmpsb
ljmp
stc
jae
mov
aas
fs
push
sahf
push
testb
push
jae
in
cs
pop
lcall
jg
or
or
inc
faddl
seto
pop
cmp
das
cmc
cs
jmp
push
movswl
adc
cmpsb
xor
push
outsb
or
xchg
pop
fisubl
adc
mov
fwait
pop
into
mov
push
sub
mov
xor
enter
adc
xchg
dec
adc
stc
xchg
inc
push
aaa
scas
xor
into
stos
inc
mov
lahf
aas
push
fdivr
pop
cmpsb
data16
test
enter
test
ret
xor
ror
test
in
dec
mov
jmp
xor
jo
adc
cmp
scas
js
ret
pop
or
mov
je
mov
movsb
inc
sub
mov
idivb
mov
sbb
adc
or
ret
and
mov
nop
sbb
ds
jbe
push
cmp
push
mov
inc
adc
xchg
mov
mov
loope
ljmp
loopne,pt
sbb
into
shll
mov
xchg
adc
jg
fucomip
or
in
sub
cmpsb
enter
icebp
push
fmuls
cli
das
mov
sbb
les
es
je
test
pop
shlb
cmp
sahf
cmp
and
in
fsubs
in
xor
push
ds
test
push
sub
gs
xchg
addr16
sub
lahf
pop
pushf
scas
add
jno
sub
ja
inc
or
jne
mov
inc
fs
pop
insl
fucom
call
dec
pusha
mov
test
loope
arpl
push
pop
mov
pop
push
add
jl
xor
mov
imul
or
outsl
fcoms
inc
pop
mov
movsb
jne
lock
rorl
sbb
es
cltd
xchg
jo
xchg
inc
jp
add
jl
das
jmp
add
jnp
cld
cmp
in
push
jl,pt
enter
xor
adc
dec
int
fsubp
sbb
sub
or
push
sbb
pop
in
loope
push
add
mov
in
cs
repnz
popa
mov
ss
pop
cmpsl
cmp
insb
mov
mov
dec
xor
push
mov
jns
clc
aad
mov
sahf
sbb
es
lods
daa
pop
pushf
int
pop
pusha
add
stos
mov
cld
ficoml
clc
xor
add
jnp
mov
ljmp
jne
or
nop
pop
sub
std
sti
push
mov
daa
dec
and
push
mov
xor
lcall
enter
inc
rcrb
pop
push
adc
sbb
outsb
jnp
pop
ret
test
addr16
pop
cmp
adcb
insb
addr16
mov
xchg
inc
mov
fiadds
xlat
push
cld
push
dec
mov
imul
cmpsb
mov
out
sbb
std
sbb
mov
sbb
bound
arpl
jle
mov
loope
fdivrs
pop
test
insl
clc
scas
and
mov
movsl
xor
pop
test
or
gs
jecxz
add
scas
xlat
inc
mov
mov
mov
popl
cs
bound
inc
stos
pop
cmp
lcall
into
add
dec
aaa
scas
popa
fidivrl
fs
fistpl
fwait
mov
popl
mov
xchg
fwait
aas
xor
addr16
mov
test
and
sbbl
xchg
or
fimull
xor
jecxz
xor
push
out
out
sbb
sarb
lret
shrb
mov
mov
sbb
js
mov
std
shlb
sbb
ja
test
adc
or
push
lret
pop
les
and
in
lds
jge
xor
sbb
lock
scas
rclb
mov
dec
fsubrl
xchg
or
mov
dec
mov
cmp
cs
xor
leave
add
in
mov
push
repnz
inc
cltd
and
sub
push
js
dec
cmp
loope
insb
daa
insl
int
pop
call
adc
in
lock
test
xor
sahf
out
dec
xchg
cwtl
insl
mov
adc
arpl
and
mov
and
add
inc
lods
lahf
loopne
mov
cli
push
fldl2e
mov
lds
or
ret
xchg
hlt
mov
or
jge
test
pop
mov
push
faddl
movsl
dec
jmp
mov
stos
ja
call
stos
cltd
lods
popa
popf
stos
jmp
sub
in
pop
sbb
xchg
xchg
pop
imul
pop
pop
sub
shl
adc
mov
shll
cmpsl
ljmp
mov
fwait
xchg
xchg
dec
lods
dec
cwtl
jg
sarb
push
or
sbb
mov
int
mov
add
jmp
scas
and
flds
push
fcoms
or
in
xor
iret
sbb
out
call
jl
push
arpl
int3
lahf
lods
sbb
idiv
shlb
add
mov
loopne
sbb
cs
loop
cmp
xorb
add
mov
xor
imul
stc
add
sbb
push
push
sub
sub
jo
or
jg
fs
mov
jmp
mov
push
jne
xor
in
adc
mov
xchg
dec
lock
fwait
push
fwait
jb
sub
inc
or
pop
cmp
inc
xchg
lcall
jnp
mov
and
pop
cmp
inc
in
pop
lods
inc
scas
fidivrl
xor
cmp
xor
lahf
xor
repz
int
bound
cmp
add
imul
sbb
and
jl
sbb
fisubl
sub
inc
sbb
imul
test
mov
inc
jno
jae
push
call
cmp
cmp
pop
cmp
aas
dec
mov
data16
popa
and
mov
dec
scas
xchg
fs
outsl
sbb
loope
jp
push
js
mov
xor
mov
inc
pop
dec
sbb
cmp
adc
adc
push
inc
inc
cmpsb
ss
dec
in
test
mov
ljmp
ret
jae
cmp
ss
shl
jl
jmp
cwtl
je
and
dec
decl
inc
push
push
out
andl
mov
dec
stc
in
add
inc
shrb
sti
xchg
inc
mov
insl
clc
in
mov
xchg
gs
sbb
xchg
or
fldl
lcall
inc
les
mov
add
std
push
cmp
cld
loop
rcrl
mov
and
push
scas
hlt
inc
lret
lea
shr
jge
add
cmp
mov
push
icebp
xchg
jno
je
sbbb
outsb
aas
xor
repz
rolb
xlat
std
xchg
mov
and
dec
dec
fisubs
out
xchg
nop
int
mov
jae
lods
div
imul
xchg
out
cmc
ret
fstps
mov
fstpt
jns
mov
push
loop
ret
mov
fldl
sbb
call
imul
jg
pop
jp
scas
xor
into
pushf
or
add
jae
mov
popa
unpckhps
and
cmpsl
sub
in
sub
stos
cld
and
xchg
aaa
lret
push
loopne,pt
fs
adc
aaa
rorl
mov
xor
and
jl
mov
movsl
jecxz
je
sub
repz
dec
clc
call
cmp
aad
cmpsb
mov
xor
movsl
jecxz
popa
mov
lret
int
leave
rcrb
outsl
js
outsb
shlb
imul
cmp
iret
stos
push
adc
pop
cld
int
lret
mov
call
sub
sbb
lock
es
in
imul
cmp
lcall
lods
ret
test
xchg
sub
inc
arpl
mov
ja
lret
adc
std
xchg
mov
mov
daa
xchg
inc
and
rolb
dec
shll
in
mov
jno
shll
fwait
enter
add
sub
mov
cmp
imul
sub
sti
pop
addr16
or
push
imull
sub
vpackuswb
lcall
cmpsl
pop
jb
sbb
push
psubd
mov
das
lea
xchg
adc
lods
dec
in
bound
sbb
ficoms
repz
or
addb
dec
shlb
push
mov
adc
pop
jae
sti
adcl
cli
mov
fcmovnu
cmpsb
inc
cld
mov
mov
dec
jecxz
or
test
pop
fnsave
test
sbb
imul
push
xor
test
stos
int3
xor
jp
test
and
rorl
pop
xchg
pop
lea
cmp
mov
aas
mov
add
mov
mov
jp
pusha
adc
aas
sarl
std
lahf
pop
dec
mov
mov
inc
xchg
call
add
pop
mov
xchg
repz
push
subb
loopne
in
cmpsb
aam
push
cli
jo
icebp
pushf
cmp
cwtl
adc
cli
scas
jae
movsl
daa
lods
jmp
adc
jae
movsl
nop
mov
fistps
xor
lods
outsl
mov
mov
cltd
push
repz
inc
mov
mov
cmc
dec
jns
add
inc
pop
pop
ffree
add
fsubrl
mov
jge
jle
xchg
or
add
inc
clc
xor
je
hlt
and
imul
rorb
call
adc
jp
or
xor
sbbl
adc
lds
pop
fcoms
xor
xchg
cltd
xchg
push
leave
adcb
dec
stos
push
jl
test
lock
cld
stc
dec
jle
out
jecxz
mov
push
adc
insb
int3
incl
ret
mov
xchg
mov
sub
loop
loope
shrb
not
adc
push
sub
xchg
xchg
repz
jno
insb
fs
bnd
cmpsl
mov
adc
rorb
movsb
or
repz
repz
add
or
leave
xchg
sub
jne
aaa
inc
mov
mov
inc
cmpsb
mov
mov
xor
aas
fsubl
jae
adc
out
jnp
aad
shrb
aad
aam
mov
stos
cmp
mov
pop
xlat
or
inc
test
jb
arpl
imul
xchg
fs
or
xor
insb
mov
push
repz
sub
xchg
add
rcrb
cmpsb
test
adc
std
loop
and
jge
and
hlt
movsl
mov
xchg
xlat
xor
and
mov
sub
mov
out
das
test
cmpsl
dec
subb
call
xchg
pushf
test
mov
mov
rolb
data16
shrb
lret
push
xor
jno
mov
pop
test
adc
lret
jne
inc
cmpsb
fbstp
scas
cmp
jge
mov
adc
jo
jp
jnp
mov
loopne
lods
dec
inc
mov
jb
les
lahf
dec
dec
leave
ret
jl
les
xchg
dec
out
sti
dec
insl
mov
pusha
and
cmpsb
mov
mov
call
cs
bound
dec
pop
in
or
lods
daa
push
pop
sbb
jne
jecxz
and
sbbl
pop
or
nop
mov
pop
out
mov
lahf
mov
mov
or
sub
mov
scas
movsl
std
mov
xchg
sbb
or
pop
outsl
push
cltd
xchg
rsm
xchg
inc
jb
push
pop
arpl
push
ficompl
out
js
popf
mov
push
mov
mov
cli
popf
jae
push
loopne
outsb
fwait
jecxz
and
and
fdivr
jnp
lods
orb
sbb
and
mov
sbb
sub
fcmovbe
movsb
addb
jae
jg
scas
aad
lods
outsb
xor
cmp
pop
mov
xchg
mov
lods
cmpsl
pusha
mov
dec
fdivrl
fdivrs
rorb
xchg
and
lods
xor
loop
inc
mov
rorb
icebp
popa
dec
xor
jge
fwait
pop
sbb
in
adc
cmp
pop
aaa
hlt
fsts
sbb
sbb
out
cmp
scas
pop
xor
test
sub
jmp
mov
sbb
or
sub
push
ja
mov
ljmp
push
push
mov
pop
sub
out
adc
dec
sbb
mov
inc
pushf
mov
pop
adcl
bnd
imul
pop
shl
mov
or
fmulp
or
jne
aaa
nop
test
xlat
mov
rclb
jno
mov
lea
das
cmp
dec
int3
enter
and
mov
inc
aam
cld
lret
mov
les
mov
adc
out
stos
sub
sbb
mov
fimull
add
nop
mov
xor
aaa
rclb
and
mov
cs
xchg
iret
add
dec
stos
adc
int3
lahf
and
scas
fildl
lret
pop
and
add
dec
pop
push
aad
push
jae
mov
pop
ja
or
mov
test
push
jbe
dec
jecxz
or
es
or
std
fsubp
and
dec
rcrl
cmpsb
jns
and
aad
cwtl
jns
add
mov
fcoms
adc
inc
lds
jbe
push
sbbl
aad
xchg
fmull
mov
sub
in
dec
out
stc
into
and
add
and
lahf
mov
xchg
fs
cltd
sbb
sbb
inc
add
scas
mov
lcall
test
adc
mov
aaa
test
mov
fbstp
cmpsl
ja
mov
jge
sbb
lods
idivl
icebp
xor
xchg
lcall
jle
push
arpl
sub
fstpl
cmp
aas
into
cmova
nop
mov
mov
sbb
push
add
scas
sbb
xor
mov
aas
mov
addl
dec
daa
adc
adc
nop
cmp
xchg
sti
test
repnz
rorb
xchg
outsb
jnp
sbb
sub
aad
in
lea
xor
mov
mov
push
push
test
push
out
adc
and
fisubl
ret
dec
call
xchg
and
sti
repnz
and
fsubp
lods
arpl
inc
ret
jecxz
movsl
jae
xchg
ret
push
ss
xchg
mov
popa
cwtl
push
xor
cli
fsubs
inc
mov
cmpsb
cld
dec
xor
insl
xchg
jb
dec
add
add
add
mov
bound
ja
pop
adc
xchg
inc
xor
popa
stos
movsl
mov
sub
cmpsb
pop
push
xorl
mov
adc
and
xor
xor
push
mov
jbe
lcall
push
out
adcb
shlb
push
dec
shll
cld
fistpl
cmp
jle
lahf
xchg
push
or
mov
in
out
enter
std
out
adc
lods
push
popa
add
mov
sub
pop
xor
jno
push
xor
fstpl
rclb
subl
push
daa
lahf
mov
push
adc
bound
or
adc
jbe
jge
fwait
lods
stos
add
jmp
ror
jns
mov
aas
mov
aaa
leave
mov
nop
cld
jb
cmova
mov
arpl
lea
sbb
stos
sarl
adc
repnz
aam
cmc
flds
sbb
inc
mov
ljmp
fsubl
xchg
in
andb
out
xchg
dec
test
je
test
jg
xchg
xchg
sahf
imul
and
insl
mov
or
out
dec
xchg
ficompl
or
mov
mov
int
ss
xchg
lret
test
pop
aad
jns
or
add
push
cs
insb
dec
rcr
mov
gs
and
gs
cld
adc
ret
mov
outsb
push
or
std
int
xchg
divl
dec
push
les
mov
xor
dec
stc
pop
jg
das
push
mov
inc
jmp
xlat
or
aam
enter
out
and
mov
push
jne
sub
cli
repnz
popa
adc
pop
imul
aaa
stos
jmp
dec
pop
adc
lret
sahf
jne
cmp
mov
push
xor
rcrb
pop
dec
sub
pop
mov
idiv
xor
cwtl
pop
or
dec
loopne
adc
nop
imul
sti
mov
nop
clc
les
pop
ret
aaa
aad
mov
adc
lods
and
call
and
jge
cmp
push
inc
in
adcb
enter
dec
mov
sub
mov
lcall
and
push
mov
add
push
lret
das
mov
mov
mov
cmpsl
adc
jl
lods
push
pop
and
pop
sub
mov
dec
sahf
or
push
dec
lock
dec
xchg
faddl
sbb
push
loopne
adc
insb
mov
data16
ret
in
or
lods
jne
jb
xchg
pusha
call
pushf
mov
add
mov
add
lahf
fwait
cmpsb
loop
aam
jmp
adc
push
xor
aas
out
fwait
xchg
mov
dec
inc
add
in
mov
insb
push
pop
xor
xchg
fisttpl
ret
pop
rorb
or
in
push
iret
add
lea
scas
insl
popf
jle
repnz
in
xor
dec
mov
pop
test
fidivs
mov
clc
ja
mov
pop
xchg
lea
adc
dec
es
jp
sub
nop
cmpsl
mov
and
fisubrl
test
cmpsl
jecxz
inc
sub
xor
mov
psrlw
xor
and
or
test
leave
and
pop
add
xchg
sub
adc
inc
mov
pop
cwtl
xor
xchg
push
sbb
push
sbb
mov
or
movsl
int
sub
es
jne
pop
adc
mov
sub
or
loop
lcall
xchg
inc
mov
je
aas
mov
dec
xchg
ds
pop
push
inc
insl
cmp
cmpsb
scas
std
popf
mov
xchg
mov
cmp
mov
mov
insl
pop
adc
jae
fimuls
cld
ss
xor
imul
or
jns
adc
fwait
movsl
popa
push
aaa
mov
fwait
out
shlb
in
inc
jecxz
and
jne
cwtl
and
loope
add
sbb
ljmp
sbb
mov
pop
ror
push
ljmp
pop
stos
inc
add
scas
adc
cmpsl
sbb
inc
sub
fmuls
out
in
hlt
add
and
sbb
push
sbb
out
inc
or
mov
cmp
in
out
cmp
cwtl
inc
test
pop
adc
mov
leave
mov
sar
rcr
mov
mov
and
xchg
bound
sti
and
addr16
sub
mov
repnz
scas
pop
scas
jne
mov
test
out
adc
ljmp
cwtl
xchg
sbb
push
out
push
ss
jb
in
cmp
nop
hlt
inc
lds
xchg
ja
xchg
test
xlat
or
es
je
xlat
xor
push
nop
ret
subl
mov
inc
fidivl
movsl
movsb
stos
bound
xchg
sbb
bound
imul
xchg
jge
jmp
in
test
ss
mov
jl
movsl
lea
inc
and
test
in
xor
cmp
sub
into
hlt
xor
inc
stos
adcl
mov
iret
push
cli
or
lcall
cmpsl
inc
push
shll
lock
inc
test
popa
cmp
stos
sbb
cs
xchg
int3
xchg
into
push
out
movl
pusha
or
and
scas
ds
pushf
jo
xchg
dec
mov
adcb
gs
je
lahf
cs
sar
into
push
cmp
mov
mov
jp
cmp
imul
jae
stos
out
xor
jl
int3
dec
ja
lods
jnp
outsb
lods
mov
push
sti
pop
js
xchg
rclb
push
bound
int3
mov
push
jne
cmp
inc
inc
dec
adc
lds
push
jnp
int3
addr16
inc
ret
mov
mov
mov
call
adc
je
mov
negb
cli
sar
lods
ja
loop
divl
je
in
sub
fimuls
jbe
fsubs
aaa
mov
jmp
dec
mov
int
loope
add
rolb
mov
cmp
shlb
adc
jle
xchg
insb
dec
add
popf
pusha
xor
leave
and
mov
shr
push
push
outsl
imul
fs
stos
cld
cmp
pop
cmp
adc
mov
jle
jno
lods
mov
loop
pop
inc
xlat
push
aad
lods
addb
pop
ja
dec
dec
jp
jp
cmp
mov
xchg
movsl
jnp
loop
orb
cld
xchg
mov
push
pusha
jb
add
insl
fldt
push
out
movsb
lods
lock
dec
add
repnz
jmp
test
pusha
jne
lret
push
out
popa
and
pop
cmp
iret
sub
out
dec
scas
cwtl
add
jl
sti
jne
sub
enter
push
js
aam
xor
mov
clc
xor
mov
and
test
ja
hlt
mov
arpl
lret
jbe
data16
sbb
dec
adc
out
fiadds
sti
sbb
insl
jmp
int
insl
mov
int3
insl
jmp
mov
xchg
loop
ja
testb
movsb
test
mov
das
jecxz
add
cmp
popa
mov
or
jnp
xchg
xchg
cwtl
movsb
les
sarb
pop
mov
and
jno
or
xor
in
es
cltd
test
in
cmp
inc
push
jb
bound
mov
aas
cmp
aam
out
cmpsl
mov
imul
cmp
xchg
shll
jae
cwtl
dec
jp
sub
leave
mov
flds
pop
xchg
ss
add
mov
dec
mov
lcall
sub
cmc
fnsave
sahf
rorb
je
and
xchg
add
mov
or
icebp
addl
sti
lods
sar
test
and
xor
out
cli
inc
fisubrl
mov
lea
mov
icebp
push
stos
popa
into
cs
mov
ja
cltd
addl
push
out
call
test
js
outsl
jle
inc
adc
cmpsb
cmpsl
lcall
mov
fidivrl
nop
cmp
mov
lcall
and
test
loop
jmp
add
inc
out
test
push
xbegin
int3
mov
xchg
pop
loop
mov
repz
pop
cltd
fsubrl
aas
jo
mov
pop
mov
add
xor
xor
mull
orb
cwtl
push
inc
into
mov
es
cmp
pushf
push
cli
iret
rcll
jge
pop
pop
push
inc
pop
dec
lods
add
xor
test
xchg
imul
bound
lret
push
in
sar
movsb
movsb
or
int
sub
ja
je
data16
icebp
and
sti
sbb
loopne
retw
mov
xor
fcmovnbe
sbbl
loope
je
repz
push
or
push
xlat
push
cmpb
dec
stos
leave
scas
hlt
sub
leave
jge
mov
pop
pushf
adc
mov
cmp
xchg
roll
addl
fwait
out
push
pop
lods
inc
je
jge
push
outsl
mov
and
andb
shrb
sub
bound
bound
sub
ret
push
cmpb
jle
xchg
les
leave
cmpl
and
push
mov
or
ja
dec
jae
mov
xchg
cltd
rcl
push
sbb
or
out
movsb
cld
sbb
sub
cmpsl
lods
jge
popf
inc
insb
adc
call
daa
add
sbb
jp
mov
cli
pop
cli
inc
mov
or
ljmp
inc
pushf
addr16
or
add
mov
jp
sti
rorb
sbb
xchg
pop
stos
movsb
out
in
cmp
dec
inc
sbb
hlt
pop
cltd
fnstsw
push
out
jae
jno
sti
inc
push
outsl
out
int
inc
cmp
ficoml
inc
in
cs
pop
ret
popa
std
sub
cmp
outsl
std
mov
cli
jl
enter
inc
push
xchg
xchg
jle
inc
loop
cmp
add
add
pusha
sbb
cmp
mov
lods
xor
jp
push
pop
sbb
push
sar
sbb
and
fisttps
aaa
addr16
in
dec
pop
lcall
in
or
sar
pop
mov
sti
adc
pop
aam
adc
or
jb
das
mov
mov
iret
mov
dec
push
pop
xchg
push
ss
rclb
ds
pop
add
mov
into
push
cltd
mov
dec
in
add
cmp
sub
nop
je
sbb
and
mov
push
xchg
arpl
fidivrs
pusha
and
popa
xor
loopne
inc
into
mov
jne
test
js,pn
push
hlt
ret
mov
imul
loopne
test
sbb
inc
mov
jnp
adc
pop
int
mov
ljmp
jg
mov
call
leave
pusha
or
shl
loop
or
aam
dec
aaa
lods
faddl
xlat
pop
insb
imul
leave
cmpsb
mov
enter
xchg
shr
dec
xor
cmp
insb
mov
dec
push
sbb
pop
jmp
and
sub
ret
fdivs
xor
outsl
pop
addr16
scas
dec
xor
xorl
jp
jle
sub
test
push
and
or
rcl
scas
xor
mov
xor
mov
cmpsl
xor
lea
sub
test
fdivrl
push
and
out
pop
sbb
sbb
fwait
pop
fs
repnz
insl
clc
sbb
push
enter
rclb
cmpsb
icebp
pop
les
add
ret
add
cmp
daa
cmp
mov
movsb
xor
ja
test
or
enter
pop
pop
adc
push
jmp
xlat
mov
lds
mov
pop
mov
out
sub
mov
roll
int3
fistl
mov
sbb
test
shlb
jg
stos
mov
icebp
mov
shr
call
cltd
mov
inc
jne
lods
lea
adc
xor
cwtl
sbb
pop
jns
cmp
mov
pop
xchg
loope
jmp
or
clc
push
and
or
jno
mov
jle
sbb
aas
es
inc
jo
loope
push
pop
and
mov
in
ss
sub
icebp
setne
and
jns
repz
mov
in
imul
mov
jae
sbb
and
sahf
out
adc
push
dec
imul
shrl
sahf
ret
movl
daa
xchg
mov
or
adc
pushf
test
push
hlt
dec
outsb
es
pop
xchg
jecxz
and
or
pop
xchg
push
add
insl
pushf
ja
loop
outsl
inc
test
aad
pop
xlat
inc
mov
mov
fwait
inc
jo
mov
and
xchg
push
mov
in
rorb
fidivl
and
mov
push
gs
std
pop
push
sbb
sbb
jae
pop
imulb
iret
and
in
add
and
loopne
inc
push
hlt
mov
in
daa
sbb
test
cmp
and
mov
scas
jae
mov
and
stc
dec
lea
mov
mov
sub
ja
nop
repz
addr16
inc
jb
int3
and
inc
incl
cmp
mov
inc
jp
mov
gs
in
mov
data16
movsb
or
out
fdivl
adc
cmpb
fbstp
inc
js
cmpb
idivl
dec
sti
xor
ljmp
out
or
xchg
sbb
aam
cwtl
scas
or
lcall
into
xor
sub
xor
mov
push
repnz
adc
ljmp
lcall
push
sbb
sub
jge
gs
push
mov
cmpsl
push
ja
out
jle
inc
xor
and
sbb
push
ret
jmp
div
test
push
daa
mov
pop
addr16
jp
xlat
mov
ja
loope
jbe
loop
stc
xchg
movsl
inc
test
add
and
adc
es
stc
jb
shlb
xor
cmp
dec
les
push
push
push
jo
dec
cli
lods
push
xchg
into
inc
mov
mov
test
cli
bound
stos
xchg
rcll
cmp
popa
cmp
mov
test
sahf
loopne
xchg
nop
sbbl
mov
gs
dec
mov
ljmp
or
int3
sti
push
enter
and
mov
pushf
shl
adc
push
mov
and
mov
cli
inc
das
sub
xchg
lea
loopne
and
lods
xchg
test
dec
mov
sub
inc
pop
sbb
mov
pusha
xchg
lods
in
pusha
add
in
mov
sti
dec
mov
mov
mov
pop
xchg
lods
dec
out
lahf
cli
jo
out
add
scas
push
push
jno
cmp
stos
sbb
add
pop
mov
subb
movsb
push
in
pop
dec
sub
mov
enter
jl
into
lock
repz
dec
mov
push
scas
clc
jge
popl
push
mov
dec
pop
adc
ret
jb
inc
rclb
add
cmp
sbb
push
bound
cmp
pop
pop
pop
dec
xchg
mov
inc
xchg
pushf
lar
push
jb
push
push
mov
les
imul
fnstenv
fbstp
inc
and
mov
adc
out
xchg
mov
xchg
sti
add
test
adcl
xchg
jno
adc
and
push
pusha
inc
mov
bound
addr16
popa
mov
fmuls
inc
jnp
loop
shlb
ja
jecxz
fstl
xchg
iret
fiadds
shll
dec
enter
jle
je
rclb
mov
jp
xchg
jns
ss
pop
xchg
or
cmp
jno
cmp
push
sub
xchg
mov
pop
add
sub
push
mov
idivl
lods
jo
jle,pt
popl
xchg
stc
rclb
les
or
enter
ljmp
push
pop
notl
lock
jle
loope
in
jecxz
sub
aam
jb
mov
jae
loopne
push
pop
and
jle
add
imul
test
and
jmp
cld
cmpsb
js
mov
push
ljmp
jl
add
scas
push
pop
or
repz
adc
lods
int
and
pop
mov
mov
sub
mov
sub
cmc
push
xlat
lods
enter
cmpsl
in
or
sub
insb
sub
mov
imul
faddp
mov
cmpsl
loop
std
ret
repz
push
jae
aas
negb
in
pop
push
cmc
ret
int3
inc
xor
nop
xchg
les
sbb
sti
dec
jo
jmp
or
or
jb
jge
aad
ljmp
pop
insl
cmc
in
addl
es
addl
shrb
jns
dec
inc
data16
adc
dec
mov
outsb
pop
jg
cmpsb
xlat
aam
sub
jo
dec
xor
cmp
jno
add
into
fprem
or
aad
daa
insl
fdivl
mov
jno
rcrl
mov
sub
loope
jbe
aad
inc
mov
dec
xchg
dec
test
push
ret
mov
shl
repz
sbb
dec
mov
pop
cmp
sbb
cmp
jmp
fwait
adc
and
test
in
xor
pop
sub
call
enter
je
sub
or
insl
mov
xchg
cmp
outsl
cwtl
push
stc
cmpsl
rclb
repnz
mov
jle
loop
aas
xor
movsl
dec
or
dec
testl
add
sbb
scas
jle
sbb
icebp
adcb
fistl
push
sub
enter
and
inc
test
adc
rcr
movl
loopne
mov
sbb
test
out
popf
sbb
lcall
dec
cld
cmp
mov
add
mov
cltd
mov
mov
cmp
cwtl
rclb
repnz
push
mov
enter
adc
test
and
lahf
sbb
jbe
mov
and
daa
adc
or
xchg
addr16
mov
shl
jns
mov
mov
mov
add
mov
jnp
icebp
jecxz
xchg
orb
pop
in
or
xchg
cltd
dec
mov
mov
aaa
pop
loop
mov
pop
clc
int3
and
adc
xchg
dec
enter
lret
test
stc
arpl
push
aad
fistl
or
xor
jne
or
push
xchg
jmp
popl
out
int3
ret
cmpsl
jecxz
mov
lret
fs
bound
int3
jecxz
hlt
jl
pop
mov
push
lret
test
enter
idivl
fsubl
clc
jmp
vshufps
popf
fs
je
int
or
out
jle
fsubl
dec
and
inc
sahf
dec
mov
lods
ret
ljmp
xchg
mov
adc
in
test
inc
mov
cmc
mov
push
sub
cmp
jbe
sub
sub
mov
dec
mov
ror
jmp
fwait
test
loope
cmc
and
xchg
lret
jmp
mov
mov
sbb
push
jo,pn
out
pop
ss
cmpsl
cmpsb
pop
jno
xor
test
xchg
cwtl
ljmp
xor
out
sbb
or
in
insb
je
scas
jmp
hlt
inc
outsl
mov
sbb
or
into
or
lock
js
add
nopl
ds
sub
inc
sti
cltd
inc
mov
xor
xchg
lods
fwait
xchg
sti
adc
movsl
mov
push
cmp
lock
push
cmp
hlt
maxps
sub
and
js
push
fbstp
cmp
mov
fistps
iret
mov
mov
mov
std
andl
add
push
mov
cmp
dec
ret
mov
sbb
arpl
shld
aam
es
cmpsb
cmp
sub
mov
xchg
or
cli
push
mov
mov
mov
lcall
popf
add
lcall
je
and
push
loop
mov
and
sbb
and
push
push
fidivrl
shl
jmp
stos
gs
movsb
xchg
add
ljmp
imul
das
push
xchg
sub
xchg
mov
inc
pop
cmp
pop
xchg
cs
lods
xchg
push
popf
sar
push
jne
add
mov
xor
mov
add
push
mov
cwtl
out
repz
fnstcw
or
lds
imul
push
in
out
leave
xchg
jg
jnp
popa
sbb
les
mov
cmp
ja
inc
sbb
mov
int
xchg
aas
mov
shlb
lods
ja
addb
push
jl
in
dec
sub
stos
xlat
lea
dec
movsb
pop
fsubr
gs
cwtl
js
jle
mov
push
dec
jns
pop
cmp
mov
imul
loope
jo
daa
movsl
push
addr16
and
adc
add
mov
or
inc
mov
sub
mov
stos
enter
sub
adcb
jo
jmp
scas
mov
push
cwtl
pop
popf
sub
shl
jnp
negb
dec
mov
mov
mov
lds
mov
inc
cltd
mov
imul
dec
xor
loop
and
mov
call
lahf
adc
test
pop
sbb
cmp
lahf
popf
mov
lahf
arpl
mov
incb
inc
arpl
or
xor
aas
pusha
mov
mov
fwait
pushf
add
data16
test
lock
sti
push
fsubs
push
mov
fbstp
jb
or
ldmxcsr
push
roll
movsl
scas
pop
enter
lods
stos
add
fptan
push
dec
mov
inc
cmp
adc
inc
xlat
jp
lock
lea
std
cmp
arpl
outsl
xor
mov
inc
sbb
mov
push
pop
in
pop
jne
adc
and
sahf
aam
mov
aam
imul
pop
jo
mov
or
ret
sbb
cmpb
fs
push
lods
vminss
lods
enter
std
adc
cli
sbb
jo
add
dec
xchg
int3
mov
xor
inc
shrl
fs
test
sbb
push
imul
xchg
xchg
lret
jge
dec
dec
mov
and
dec
sub
dec
inc
add
and
call
roll
lock
jmp
stc
mov
jecxz
jne
push
stos
mov
mov
negb
out
insl
fiaddl
cmp
sbb
sbb
mov
xchg
inc
jle
in
das
lea
add
hlt
mov
jne
mov
xchg
test
test
out
cmp
sub
mov
lods
pop
add
adc
xchg
das
rorl
mov
sahf
adc
sub
leave
cli
sbb
push
adc
cmp
je
adc
lods
cmpsb
in
xor
enter
dec
repnz
push
dec
add
mov
into
stc
jae
ret
sbb
xchg
aam
push
in
test
rcll
frstor
repnz
lahf
push
or
clc
or
imull
and
adc
gs
repnz
fnsave
scas
xchg
int3
xchg
aas
dec
arpl
push
insl
movsb
gs
lret
dec
push
lcall
fldenv
aad
cmp
cmp
outsb
icebp
fwait
jae
and
inc
insb
dec
popa
mov
pop
mov
ljmp
sbb
and
add
loope
repnz
or
maxps
rorb
in
xchg
adc
jmp
xchg
adc
insb
push
xor
cmp
xchg
ljmp
fwait
lcall
cmp
leave
loopne
dec
push
mov
mov
in
fs
subb
dec
xor
add
xor
dec
or
cmp
push
adc
and
in
ret
cmpsl
jns
jno
enter
pushf
movb
xchg
inc
into
je
cmp
mov
mov
jp
mov
out
cmpsb
xchg
aad
loop
inc
and
out
fsubl
ret
jecxz
idivl
jg
adc
mov
aas
mov
aaa
xchg
dec
mov
lock
mov
fstpt
add
leave
jmp
mov
cli
push
mov
or
xchg
sub
in
push
in
notl
adcl
cmp
pusha
mov
icebp
add
iret
in
or
dec
mov
xor
test
xor
push
enter
aad
xlat
jle
lret
jecxz
int3
cmp
in
js
mov
jns
mov
dec
sbb
call
add
aam
jns
fisttps
mov
and
add
sti
je
fisubrl
cli
adc
pop
jns
gs
repz
jbe
inc
jo
fs
mov
mov
xor
pop
mov
sbb
rolb
std
and
orl
rcl
jns
xor
popf
mov
aad
or
mov
imul
data16
dec
lret
jp
repz
mov
mov
scas
fs
nop
cmp
push
je
xor
pop
out
xchg
mov
ds
sub
lret
push
mov
rcrl
add
out
mov
adc
sub
mov
scas
sahf
pop
adc
shlb
insl
fisttpl
leave
jns
inc
dec
xchg
mov
inc
call
xlat
and
ficomps
mov
mov
mov
icebp
mov
mov
js
sbb
iret
icebp
cmp
cmpsl
pop
jge
nop
mov
cwtl
fcompl
mov
lock
cmp
loop
push
flds
xor
add
adc
adc
scas
pop
mov
aas
inc
add
lret
cmp
scas
pop
ret
aas
fdivl
mov
test
cli
adc
aas
sub
add
sub
xchg
test
ja
les
pop
lret
lret
mov
lods
pusha
mov
xor
lods
push
js
fcomps
es
pop
imul
mov
push
mov
jg
fcomps
repz
movsb
lea
lock
add
ds
cmp
push
icebp
push
xchg
add
fidivrl
scas
inc
or
sub
shl
js,pn
add
scas
and
imul
mov
mov
aaa
and
cmp
fsts
imull
leave
in
das
stc
fdivr
pop
push
dec
jae
pop
jg
lods
ret
adc
imul
icebp
pop
fneni(8087
xorl
and
hlt
lock
or
push
daa
xchg
std
jecxz
cmp
not
push
testl
dec
in
es
outsl
neg
and
and
pop
pop
out
in
push
ja
rorb
outsb
xchg
push
iret
idivb
xor
pop
insl
shll
mov
stos
mov
xchg
arpl
pop
roll
add
notb
or
movsl
inc
test
pop
mov
int
pop
cmp
lcall
ss
push
push
sbb
and
movsl
das
aaa
or
add
jge
xlat
mov
pop
xchg
aas
ret
ret
push
lcall
div
aam
adc
sub
mul
sti
imul
in
pop
loop
mov
inc
icebp
cli
xchg
push
mov
lcall
jge
sub
cmpsb
inc
push
xchg
rcl
or
mov
sub
lahf
dec
in
hlt
adc
mov
pop
xor
cs
mov
outsb
jge
in
adc
call
enter
jno
lret
pop
cmp
push
dec
adc
jmp
and
sbb
test
js
sbb
bound
repz
xchg
pushf
sbb
mov
ss
sbb
push
scas
xor
lret
out
stc
push
mov
cmp
es
hlt
inc
sub
mov
add
push
mov
gs
je
jnp
sarl
push
popa
andl
scas
scas
xor
dec
inc
and
aad
xor
es
add
adc
cltd
mov
je
filds
push
imul
mov
mov
les
stos
jae
mov
or
jecxz
js
fwait
sub
inc
push
or
aad
addr16
add
cmp
je
fsubrl
sub
adc
pop
mov
add
mov
scas
and
mov
mov
in
and
and
or
enter
addr16
jg
xchg
xchg
sahf
or
push
cmc
out
shrb
imul
and
dec
adcl
inc
lret
loope
cmp
cli
loopne
idivl
shr
pop
test
inc
outsl
ja
and
xchg
xchg
negl
fbld
push
fdivr
arpl
mov
mov
jnp
shll
sub
daa
add
mov
jmp
push
pop
fdivr
loope
lahf
inc
xchg
xchg
jg
add
lock
rclb
mov
scas
cs
fsub
ja
in
push
cwtl
into
xor
hlt
movsb
inc
push
aas
dec
adc
and
dec
bound
and
dec
mov
fsubrs
fistps
movsb
mov
pop
movsl
test
mov
jns
fs
fisttps
sti
mov
push
out
out
xchg
xchg
add
movsb
fmulp
xchg
clc
movsb
mov
xor
jbe
cmpsb
iret
into
adcl
pop
je
adc
enter
lock
dec
sub
cwtl
ljmp
pop
jp
sub
sbbl
mov
xchg
cmp
pop
xchg
sub
add
fstpl
xchg
or
jo
xchg
inc
jg
dec
fmull
testb
xor
sub
and
pop
mov
pushf
rolb
dec
inc
sahf
push
loope
loop
in
lea
test
in
jae
sub
lods
cmp
insb
and
jg
push
lods
loop
fcmovnu
pop
ds
mov
stos
push
fildll
pop
mov
dec
fistl
mov
mov
fmul
dec
jae
aaa
in
jmp
push
ret
insl
imul
hlt
jg
repnz
xor
lahf
mov
ftst
mov
std
pop
dec
lods
sub
mov
aas
or
mov
imul
sahf
popf
mov
test
push
cmp
mov
sbb
pusha
push
aad
push
iret
dec
cmp
cmp
add
imull
jecxz
dec
add
jg
jnp
clc
outsb
lcall
jecxz
fistpl
ret
xor
rcrb
fcompl
je
insb
bound
pop
int
out
xchg
xlat
sbb
xor
movsb
jns
fistpll
add
rorb
inc
sbb
jns
gs
inc
push
and
cmp
mov
mov
in
jmp
push
inc
sbb
shr
xchg
shll
mov
pop
std
incl
mov
xchg
inc
ss
cli
shrl
orb
rcl
shlb
push
cmp
call
sbb
sbb
push
xchg
fstl
iret
out
add
pop
push
scas
cmp
adc
sub
outsl
test
add
imul
jmp
inc
xor
mov
sub
add
lods
dec
inc
cwtl
cmp
jl
ljmp
cmp
sub
shll
fs
sub
inc
xor
rolb
push
lods
out
psubb
fstpl
fisttps
jne
test
pop
lret
jne
push
pop
movsb
icebp
out
add
push
imul
adc
and
test
cmc
xchg
xchg
push
adc
xor
inc
dec
loop
push
and
imul
fimuls
mov
mov
hlt
out
and
hlt
clc
fucomip
fwait
or
pop
lock
sub
leave
aaa
sbbb
aad
cmp
sbb
cmpsl
mov
movsb
addb
aam
pop
sub
push
dec
sub
jnp
xchg
mov
fisubrs
cltd
in
cmp
arpl
cmp
jne
cmp
es
stos
clc
xchg
fildl
adc
cli
popa
mov
lret
in
sbbl
jnp
mov
std
aam
jmp
cmc
mov
cmp
xchg
xchg
mov
mov
sub
push
jecxz
lods
cmp
jae
jbe
sbb
stos
sub
jb
js
cmp
pusha
inc
lcall
movb
lret
fisubrs
out
leave
add
xchg
in
popf
sbb
mov
orb
cmp
xchg
int
xlat
inc
cmp
mov
dec
int3
ror
xor
adc
outsb
cmp
pop
push
dec
loop
in
pop
test
push
jecxz
mov
dec
xor
es
and
pop
sahf
gs
addr16
add
mov
lahf
mov
in
pop
sahf
cmp
cmp
daa
out
rcl
enter
add
cmp
mov
scas
addr16
subb
out
stc
insl
inc
test
shrb
aad
pop
jmp
scas
adc
ret
xor
imul
jmp
sahf
cld
test
jg
insb
fidivs
xor
cmp
aaa
nop
hlt
cmpsb
pop
and
xor
aaa
pop
clc
sahf
neg
repz
loopne
int3
ljmp
inc
fucomp
xor
mov
xor
inc
mov
mov
inc
pop
push
addl
cwtl
leave
push
pop
inc
jecxz
mov
cs
jb
adc
adc
fcom
xchg
jo
xchg
nop
xchg
mov
ja
js
lahf
shl
lods
fdivrs
gs
pusha
fst
push
mov
push
xor
cmp
sub
inc
adc
add
iret
clc
rorb
test
sbb
add
fdivrl
sahf
dec
lock
out
shlb
call
lret
roll
jns
xchg
idivl
test
out
mov
mov
jp
sbb
lret
and
lods
out
xor
test
out
inc
push
sti
jns
fcomps
out
out
inc
ret
mov
data16
ja,pt
xchg
adc
data16
lods
add
mov
or
scas
and
inc
fxtract
mov
mov
xchg
xor
pusha
aad
cmpsb
xchg
jge
loop
negl
cmpsl
sub
pop
jb
fldcw
push
shll
int3
outsb
dec
mov
sub
imul
xchg
cmp
mov
aaa
in
sub
pushf
aam
sbb
add
cmp
cmp
push
enter
fiadds
inc
mov
addr16
xchg
add
clc
gs
sbb
popa
pop
xor
dec
mov
xchg
push
inc
outsb
sahf
in
fnstenv
cltd
xor
lret
fsubrs
mov
push
push
dec
lea
dec
mov
adc
mov
outsb
outsl
sar
flds
insb
mov
adc
out
push
out
mov
pushf
popf
sub
popf
insl
movsb
iret
stc
push
dec
dec
mov
dec
mov
call
mov
pop
leave
hlt
mov
scas
pusha
ss
push
cmp
push
insb
scas
pop
out
xor
pop
pcmpgtb
sbb
jg
push
hlt
jns
dec
pop
cmp
add
lahf
adc
cmp
out
mov
stos
sbb
pop
stc
pop
xchg
movsb
sti
das
push
flds
icebp
dec
or
stos
mov
fabs
adc
js
push
insl
inc
out
iret
shll
repz
and
xor
ds
insb
shlb
iret
inc
inc
push
js
in
push
out
adc
loop
or
mov
sub
sub
aam
sahf
jns
mov
jo
jg
imul
inc
lret
aam
mov
js
mov
push
test
rcrb
push
jno
xchg
lcall
jmp
cli
sbbl
pop
push
popf
mov
jp
sbb
inc
cmpl
enter
mov
outsb
insl
imul
int
mov
push
repz
sti
mov
adcl
inc
shrb
inc
dec
cwtl
scas
adc
inc
xor
daa
xchg
push
cwtl
sub
cld
mov
mov
pusha
xchg
xchg
insl
in
push
xor
pushf
push
mov
inc
daa
sub
push
repz
out
mov
mov
push
fldenv
cmpsl
dec
out
lahf
pusha
nop
jmp
dec
add
ret
xchg
clc
xchg
arpl
jmp
mov
adc
pop
cmpsl
test
mov
jle
jo
jns
xchg
loop
cmp
mov
jecxz
push
hlt
sub
mov
call
push
in
and
pop
sbb
insb
cmc
test
fildll
push
xchg
mov
mov
aad
repz
rorl
adc
sbb
ret
paddb
sbb
adc
fsubs
dec
stos
jmp
xchg
xchg
sarl
ret
add
mov
leave
mov
add
mov
les
pop
es
rcrl
pop
subl
push
fmuls
mov
mov
sub
jecxz
std
popa
iret
mov
sbb
cmc
sbb
pop
int3
xor
imul
lods
jo
inc
out
mov
and
mov
into
push
fs
rcrl
in
cmp
pop
leave
inc
divb
dec
icebp
mov
and
mov
ss
fsts
insb
xor
mov
les
sarl
arpl
fistl
subl
daa
imul
xlat
mov
sbb
push
rcll
push
xchg
icebp
pop
ret
and
xchg
sub
ljmp
imul
jb
test
lcall
cmp
ds
xchg
imul
mov
fldl
orl
mov
and
dec
adc
pop
or
shrb
std
lds
xlat
lret
cli
mov
mov
mov
jge
insb
cmovp
cwtl
fimuls
iret
inc
scas
in
rcrl
ljmp
mov
pop
lea
pusha
out
adc
test
cmpsl
add
fisttps
arpl
mov
in
push
mov
adc
enter
mov
mov
arpl
jbe
shr
xor
xchg
xchg
sub
cwtl
rcrl
or
data16
add
bndstx
or
out
loope
insl
cli
out
dec
clc
arpl
pop
pushf
push
imul
out
push
into
arpl
pop
or
mov
ja
fisubs
cs
jp
xor
adc
mov
sub
push
inc
stc
push
sbb
mov
mov
arpl
int3
daa
sub
or
cmp
dec
test
lahf
mov
lods
sub
hlt
xlat
mov
fmull
lds
ds
mov
icebp
sbb
lret
pop
sbbl
push
cli
loopne
js
bound
push
repnz
push
sbb
inc
xchg
and
fists
jp
js
jnp
loope
test
sahf
cmpsb
pop
mov
mov
pop
fidivl
insb
mov
jecxz
mov
lret
jge
mov
mov
int3
cwtl
fcomi
push
cmp
cmp
push
lea
and
clc
scas
jbe
or
rolb
testb
nop
pop
test
and
mov
or
cmc
inc
xor
out
popa
in
jnp
add
jle
inc
insw
xorb
dec
jge
hlt
mov
loope
js
xchg
sub
or
or
ljmp
push
in
push
cmpsb
fimull
loopne
pushf
outsl
sub
add
push
jns
dec
mov
inc
js
add
bnd
dec
jo
jne
jne
pop
bound
fimull
leave
jmp
cmp
pushf
cmp
nop
daa
pop
inc
xchg
adc
int3
lcall
inc
lods
nop
popa
cmpsb
push
cmp
shlb
adc
inc
mov
cld
andb
pusha
into
inc
xchg
push
lret
les
nop
dec
sub
pop
jb
inc
in
jg
sbbl
movsl
push
mov
in
push
lret
pop
add
mov
adc
sbb
jle
cli
mov
sbb
inc
out
sub
mov
mov
in
mov
push
mov
dec
outsl
es
xlat
jns
inc
xor
test
popa
fmull
aad
push
adc
fwait
mov
inc
mov
out
call
inc
push
sahf
mov
sbb
push
imul
push
sbb
aaa
hlt
adc
xor
gs
adc
jge
ja
out
scas
mov
lret
dec
loop
add
jg
aaa
mov
jge
jo,pn
jg
jnp
lods
leave
mov
or
ficoms
rcll
sub
adcb
xor
call
dec
mov
dec
iret
into
outsb
imul
adc
inc
push
dec
adc
inc
mov
mov
das
outsb
icebp
jp
mov
clc
cs
mov
cmc
xor
mov
adc
dec
or
addl
mov
pop
inc
jb
cmp
mov
mov
test
incb
jmp
jae
and
lock
rcl
cs
mov
lcall
scas
xchg
and
mov
push
push
jmp
popf
fsin
push
aaa
cli
adc
cmpb
loope
or
adcb
je
or
mov
jp
mov
mov
mov
xor
push
out
sbb
insl
enter
leave
mov
cmpsb
test
test
das
dec
sti
sub
pop
add
add
or
fwait
not
pop
mov
sarb
pusha
dec
cmp
test
rcll
push
xchg
inc
pusha
movsl
nop
pop
or
xor
fcoml
xlat
push
fisubl
pop
dec
push
lock
addr16
dec
xor
add
jo
cmpsb
sbb
stos
out
adc
pop
jmp
push
orb
in
push
pusha
flds
notb
rep
in
jg
out
adc
sbbl
inc
jne
call
daa
jno
sub
cmp
out
repz
ror
ja
aad
xchg
out
enter
or
scas
or
lock
pop
mov
out
xchg
add
rol
add
inc
mov
xlat
jae
dec
xor
das
mov
in
sbb
int
lret
or
arpl
lods
icebp
lahf
inc
daa
jge
test
arpl
cli
mov
dec
mov
xchg
xor
xchg
addl
inc
dec
dec
push
push
inc
cmpb
sub
and
je
jmp
sbb
mov
xchg
in
xor
aam
pop
xor
add
ljmp
xor
ret
or
xor
add
jecxz
loopne
stc
lods
sub
xor
out
cs
in
or
jmp
into
nop
js
inc
cmp
or
es
mov
mov
sbb
ds
add
mov
jbe
cs
push
into
jb
inc
pop
cli
mov
and
mov
jp
sti
cmpsl
movsb
loope
or
lods
mov
pop
pop
hlt
jne
lret
leave
scas
xchg
ljmp
push
rolb
ds
mov
je
and
xor
pusha
inc
jg
cmp
pop
pushf
mov
mov
mov
lods
test
lahf
stos
or
mov
ret
inc
movsl
imul
lcall
rcr
inc
mov
push
push
xchg
push
out
mov
out
pushf
mov
sbb
addb
inc
pop
push
dec
mov
xor
and
je
jo
rcll
test
dec
mov
or
adc
pusha
add
les
andl
in
leave
jl
push
xor
xchg
lea
jl
fnstsw
sbb
into
inc
fcomp
js
leave
mov
sahf
pop
push
std
sub
add
mov
sbb
aad
pop
adc
and
cmp
in
inc
fcoms
mov
mov
insl
lahf
and
mov
cmp
mov
lods
dec
jge
ljmp
adc
add
movsl
jb
inc
fsubl
ss
out
insb
jge
fnstenv
int3
inc
adc
dec
stos
mov
lcall
sbb
pop
int
inc
pop
ss
inc
mov
pop
js
stc
xchg
lods
stos
pushf
sbb
add
push
in
ds
xchg
std
cmp
inc
sub
pop
pop
sub
outsl
movups
lods
dec
sbb
cmpsl
push
ret
aaa
push
test
out
sbb
ja
nop
xchg
int3
shll
adc
pop
and
mov
in
sub
not
dec
mov
jnp
push
rep
rcl
into
mov
loopne
push
es
cld
xor
pop
xchg
aam
mov
pop
repnz
outsl
test
pop
cmp
xchg
gs
sbb
sub
or
mov
and
fisttpl
inc
loopne
push
pop
or
add
aam
dec
mov
pusha
xor
add
adc
jns
aaa
imul
pop
data16
adc
sbb
mov
jmp
ljmp
inc
mov
icebp
cli
push
mov
imull
jge
inc
cmp
cs
sbb
nop
int
nop
lret
ds
pushw
daa
es
mov
sbb
les
test
daa
out
pop
out
jns
jno
filds
jmp
or
add
mov
aad
fwait
or
cld
pop
aaa
mov
push
rolb
mov
cld
sbb
cs
xor
xchg
nop
mov
cmp
inc
push
mov
hlt
inc
cwtl
inc
sub
out
das
or
out
inc
clc
lcall
in
push
sti
gs
mov
cmc
and
loop
adc
jmp
daa
std
cmpsl
enter
mov
loop
push
lret
cs
sbb
sub
jae
stc
pop
hlt
jmp
repnz
aam
rcll
mov
stc
cmp
cs
or
inc
push
fiadds
inc
stos
lock
and
or
pop
add
pop
hlt
mov
lds
fiaddl
or
insb
jge
int3
mov
inc
jnp
cmp
dec
sbb
loop
cmp
adc
or
push
xchg
test
out
mov
jbe
test
fprem
pop
fdivs
or
cmpsl
lea
xor
or
pop
iret
sbb
push
into
sbb
lret
mov
insl
arpl
mull
out
enter
es
and
fwait
pop
add
insl
call
movsb
fistps
fstl
pusha
inc
fwait
adc
sbb
jle
jae
sub
xchg
push
je
sti
loopne
cmp
sub
test
mov
add
adc
mov
adc
xor
push
nop
mov
loope
jl
jge
mov
pop
out
cmp
push
add
mov
cmp
lcall
jge
out
xchg
fs
lea
in
jecxz
ss
ja
scas
shll
mov
out
jp
mov
mov
adc
cld
rcrl
inc
call
sbb
lahf
fwait
mov
mov
pusha
repnz
inc
lods
int3
dec
jbe
dec
cmp
cmp
fs
xor
sbb
loopne
pop
imul
sbb
cmp
mov
mov
gs
jg
int
mov
or
mov
sbb
addb
and
movsb
jne
lods
adc
pop
inc
and
pushf
pop
sbb
data16
out
xchg
add
jae
test
fisubrs
push
ret
and
je
sbb
push
inc
push
push
mov
popa
into
push
jb
sti
adc
and
or
xor
mov
es
fdivrl
xor
imul
je
icebp
aas
inc
shl
aaa
test
testb
dec
out
cmp
daa
sbb
fistpl
adc
test
dec
jge
movsl
cmp
fsubs
orl
xchg
push
or
mov
stos
xor
out
cmp
mov
pop
je
and
inc
in
subb
pop
in
fcmovne
sbb
dec
xor
das
out
mov
iret
sub
bound
xchg
int3
aam
add
mov
shll
ds
iret
push
adcb
loop
rcl
testb
int3
ret
repnz
mov
stos
scas
mov
push
adc
into
sub
outsl
mov
lret
and
xchg
sbb
dec
xlat
ja
jmp
int3
cmp
sbb
push
mov
xchg
jle
jne
mov
and
sbb
stc
sub
cld
inc
jae
addr16
div
pop
fcmovnu
push
popa
pcmpeqd
and
push
shll
nop
cltd
jno
addl
mov
inc
mov
loope
outsb
clc
test
xor
andb
ret
add
fistpll
pop
inc
into
jnp
mov
mov
inc
cmpsb
addl
stc
push
cli
iret
in
mov
bound
pop
outsb
cltd
ds
jmp
push
jo
and
add
sub
cmp
lahf
cmpsb
inc
inc
and
sub
sahf
test
mov
cld
add
inc
inc
xlat
and
aaa
and
pop
push
or
sti
aaa
aad
in
mov
inc
scas
xor
mov
and
fstpt
popf
into
mov
rorb
into
push
cmp
mov
push
inc
aaa
xchg
arpl
rcrl
dec
jnp
stc
fwait
loopne
pop
sti
popa
int
mov
add
popa
pop
inc
icebp
pop
lock
rolb
enter
push
mov
popa
es
insb
fstpt
add
add
call
jbe
insl
push
loopne
shll
dec
stos
push
push
lods
ret
push
push
stc
cmpsl
xchg
leave
xchg
aad
mov
ret
into
xor
sub
movsl
lret
xor
in
out
add
xor
push
popa
jl
arpl
inc
jb
mov
sub
and
xor
pop
aad
sub
jae
push
jo
in
jp
inc
inc
das
pop
xchg
add
mov
dec
mov
xchg
jmp
pop
loope
call
lahf
aad
pushw
inc
xchg
mov
or
pop
pop
or
sub
jb
stc
adc
mov
mov
mov
ja
fdivl
fdivl
pop
or
stos
inc
call
mov
out
das
sbb
rolb
pop
popf
test
dec
stos
aam
jmp
ret
add
push
push
lea
mov
leave
pop
or
das
call
xchg
or
cmp
push
ljmp
lods
daa
sbb
imul
mov
sbb
jb
dec
dec
rorl
lcall
popf
adc
outsl
iret
mov
and
pop
cltd
dec
pusha
jae
addl
sti
fs
in
int3
pop
dec
mov
test
dec
add
test
cmpsl
stc
in
stos
aad
push
lcall
xor
dec
mov
sbb
push
in
inc
cmp
mul
and
idiv
or
outsb
cli
iret
fwait
inc
mov
aad
inc
xor
sbb
pop
test
nop
test
jecxz
push
lret
adc
fsubrl
or
add
xchg
sub
and
js
loopne
mov
dec
sbb
stos
imul
push
jae
adc
fwait
outsb
sub
js
jo
dec
sbb
xchg
fwait
sub
jl
loope
lods
cmp
gs
sbb
imul
jno
rclb
mov
dec
adc
scas
jecxz
or
out
lahf
psllw
icebp
xchg
add
in
lahf
pop
mov
push
mov
fs
adc
mov
lret
cmp
cmpl
jne
mov
repz
add
dec
popa
mull
es
movsl
mov
pop
gs
outsb
in
int
jb
sub
or
xor
iret
jae
adc
nop
xor
cmp
add
mov
jnp
sahf
xchg
lods
in
mov
sub
sbbb
push
fadds
mov
out
stc
outsl
imul
adc
jnp
stos
xor
mov
adc
stos
lret
bound
fxch
test
in
mov
imull
adc
cmovns
mov
shlb
cwtl
fcompl
sbbl
nop
outsl
push
cmpsb
adc
push
cmc
negl
fs
sti
mov
sbb
sti
test
or
push
inc
ss
jl
popa
mov
clc
gs
stos
nop
pushf
adc
jge
mov
lods
sub
jle
jb
mov
outsl
mov
sbb
sahf
jns,pt
mov
fwait
outsb
lcall
cld
sub
inc
lock
mov
pop
jp
or
mov
jp
imull
outsl
aaa
enter
pop
popa
orb
fsubs
sbb
testb
xchg
enter
or
cmp
filds
mov
scas
mov
mov
js
or
sbb
scas
xor
pop
xchg
sbb
add
push
jns
mov
and
lahf
mov
fwait
sbb
xchg
mov
ss
lcall
or
enter
mov
xor
popl
pop
ret
stc
mov
into
cmp
bound
mov
xor
lcall
in
pop
fstpl
jp
sti
mov
inc
cld
lock
jae
imul
mov
dec
into
aaa
xor
and
pop
jb
jmp
xchg
push
push
or
mov
mov
xchg
inc
lret
sbb
and
mov
ficompl
mov
xor
dec
mov
sub
pop
outsb
cld
hlt
xchg
rcll
mov
adc
pop
into
and
icebp
in
cmp
cmpsb
cmp
pop
mov
lock
cmp
add
in
dec
stos
pop
leave
into
insb
sbb
push
or
mulb
inc
sbb
dec
adc
fidivrl
fcmovbe
cmpsb
mov
fbstp
inc
add
push
dec
outsl
inc
jbe
scas
fbld
mov
and
jmp
in
das
and
imulb
cmp
test
in
lods
test
jo
and
es
stos
imul
push
lret
fldenv
into
das
fsubl
push
jmp
shll
shr
sub
inc
shll
cli
out
sbb
pop
and
iret
add
push
mov
and
shlb
mov
stos
xchg
jp
mov
movsb
stos
cmp
jnp
fisttps
sub
sub
test
xchg
loop
pop
fwait
int3
fwait
aas
push
jmp
or
push
push
jge
test
pop
pop
cwtl
pop
jo
sbb
hlt
and
cmp
cmpb
pop
out
mov
fxch
mov
pushf
cmp
xchg
or
orl
std
repz
push
jp
jno
adcl
icebp
lods
orl
inc
xchg
or
aas
inc
add
aad
or
lods
je
jbe
cmp
out
jns
add
xor
cmp
jp
pop
push
jno
aaa
dec
or
mov
std
ret
lods
in
xchg
jae
fcoml
sbb
cwtl
js
add
pop
mov
jnp
mov
or
push
or
mov
adc
rol
cmp
jbe
enter
imul
loopne
xor
mov
sahf
repnz
add
xchg
xor
cs
cmc
lret
rcrb
xor
mov
mov
imul
out
dec
dec
adc
neg
xlat
sahf
jno
test
pop
gs
addb
addr16
movsb
sti
or
lods
add
loope
or
stc
pushf
xchg
fnstcw
fimull
pop
and
pop
inc
mov
push
lds
sbb
cltd
arpl
std
cmp
fidivs
daa
mov
mov
pop
outsb
lret
mov
sub
int3
mov
adc
das
sbb
dec
loope
dec
je
out
fwait
and
jbe
sub
aaa
and
daa
sub
pop
add
or
lret
jmp
and
inc
or
addr16
mov
adc
hlt
int3
outsl
xchg
add
add
cmp
icebp
ljmp
cmp
xor
xor
push
pop
pop
xor
mov
inc
sti
mov
jnp
or
out
sbb
sbb
cwtl
cmp
push
mov
or
sub
mov
add
push
mov
dec
push
xchg
adc
outsl
and
cmp
jl
pushf
lss
mov
mov
fucomi
ljmp
iret
jmp
cmpsl
adcl
pusha
aaa
cmpsl
jp
dec
dec
mov
sub
sbb
clc
in
mov
and
xchg
jmp
xor
jge
lahf
cmp
dec
and
aad
sub
or
mov
es
sbb
adc
loop
sbb
push
cmp
xor
sbb
mov
pop
pop
aam
xchg
push
mov
xchg
pop
rcl
cmpsb
fildll
dec
push
aaa
es
outsl
stc
mov
out
adc
je
dec
xchg
cli
and
test
xor
inc
loope
fildll
dec
scas
sub
shl
pop
jne
stos
in
bound
jne
dec
inc
cmpsl
add
sub
out
adcb
push
add
sub
test
dec
jmp
rcrb
fwait
nop
xchg
jmp
dec
aad
call
leave
call
jne
lds
loope
push
mov
lret
pop
cs
stc
jbe
xor
cmp
and
lcall
jns
loop
push
lret
dec
lock
clc
adc
xchg
das
sub
fistpl
or
adc
sub
mov
dec
and
sbb
mov
sub
fiaddl
mov
dec
addb
mov
cld
mov
sub
aaa
icebp
or
movsl
cli
jo
aas
mov
pop
push
enter
sbb
subl
jecxz
or
mov
ffree
inc
pop
jnp
add
scas
jp
mov
mov
fdivs
pop
fsubr
mov
mov
call
addr16
pop
pop
repnz
test
dec
mov
xor
add
gs
in
addb
adc
sti
fcmovnbe
sbb
aas
mov
jnp
aam
jp
push
xchg
push
sbb
in
scas
fnsave
clc
int
dec
cmc
pop
pop
imulb
jmp
and
pop
xchg
mov
rolb
mov
in
mov
test
call
sbb
sbbb
mov
inc
mov
cmp
jp
add
dec
mov
fwait
ds
aaa
sahf
inc
xchg
aas
lcall
lret
xchg
imul
add
jecxz
jge
orb
push
pop
aam
mov
cmp
add
cwtl
inc
pop
push
cmp
stos
cwtl
out
aas
test
xor
xor
data16
dec
jne
adc
pop
xchg
loopne
mov
pop
add
add
mov
lcall
data16
mov
sub
pop
cmp
in
cmpsb
mulb
rcr
push
sub
pop
test
cmp
mov
push
add
ljmp
dec
outsl
xchg
scas
nop
fs
pop
in
mov
lret
pop
mov
int3
mov
xchg
fcomps
dec
jge
call
dec
in
mov
pop
inc
andb
lahf
xor
ja
outsb
jp
loopne
mov
ret
mov
mov
lea
outsl
cmp
lea
jno
pop
in
mov
inc
push
int3
movsb
mov
add
ss
lods
cwtl
loopne
or
jge
outsb
mov
in
je
add
sbb
sbb
out
scas
or
pop
rorb
lcall
into
fs
or
into
xor
stc
push
xchg
adc
divps
test
inc
test
add
mov
lods
mov
inc
jp
lcall
xor
addr16
sahf
jae
mov
push
gs
in
stos
or
cmc
and
add
dec
rcrb
mov
lods
fisubs
or
mov
add
or
int3
inc
mov
or
out
inc
xlat
and
xchg
fildll
dec
cli
xlat
push
inc
aad
lahf
popf
sub
js
imul
mov
ja
fisubrl
das
js
nop
imull
leave
adc
jle
push
fwait
inc
js
subl
setl
or
inc
int3
xchg
mov
xchg
inc
push
xlat
leave
inc
sub
popa
imul
sahf
data16
cmp
and
inc
mov
insl
arpl
dec
lods
fwait
ss
sbb
aam
data16
add
push
arpl
and
fcmovnb
incb
adc
jmp
repnz
fisttpl
mov
push
jnp
cs
das
mov
das
sub
test
lea
fldl
add
adc
xchg
stc
nop
adc
outsl
aad
mov
movsl
mov
and
push
shl
insb
pop
mov
push
in
and
test
cmp
cmp
daa
push
sti
outsb
popa
inc
cmp
xchg
cmp
test
es
fcmovnu
or
pop
adc
add
int
outsl
adc
jbe
out
sbb
push
add
test
xlat
xchg
mov
dec
data16
data16
jae
mov
dec
sbb
inc
roll
ficompl
pop
out
test
mov
dec
lcall
sub
loopne
aad
sbb
mov
js
rcll
dec
bound
mov
sbb
lods
sub
inc
lea
push
jo
cltd
lods
mov
nop
push
mov
sub
inc
hlt
add
lret
shrb
imul
fcmovnu
xor
and
test
adc
mov
rcr
lods
pop
sub
repz
or
shl
pop
aam
fists
imul
aad
and
dec
out
cmpl
pop
testl
mov
mov
sub
fdivrs
std
or
clc
lret
icebp
dec
jecxz
push
rcr
add
add
sub
lds
inc
xchg
call
lea
scas
or
ja
or
mov
dec
jne
mov
out
mov
cmp
sbbb
ficoms
xor
push
jecxz
jmp
adc
and
aas
mov
ljmp
inc
repnz
ja
cmp
hlt
pop
pushf
mov
mov
movsl
sbb
sbb
pop
jle
or
push
mov
cs
cmpsb
mov
jmp
js
or
loopne
in
add
pusha
mov
hlt
repnz
sub
rcrb
mov
sub
xchg
sahf
fiadds
scas
sbb
push
test
imul
sbb
and
jae
push
or
jns
shlb
xchg
jns
xchg
add
in
aaa
scas
ss
addb
inc
insl
lds
ss
pusha
push
jl
cmp
xor
icebp
dec
ret
jmp
idivb
mov
push
sub
outsl
je
pop
out
sbb
jnp
fisubrl
pop
movsl
or
mov
into
pop
subb
xor
pop
jnp
push
jl
inc
xor
fadds
or
gs
fstl
jecxz
pop
incl
out
mov
or
aas
hlt
imul
leave
lahf
mov
inc
scas
stos
mov
pop
push
push
leave
pusha
daa
cli
push
push
mov
lods
and
push
rolb
in
and
stc
lock
nop
js
inc
cmpsb
push
sbb
xlat
inc
repz
inc
inc
andb
cs
mov
jbe
inc
call
jmp
push
adc
jecxz
pop
xor
test
stos
inc
fwait
pop
leave
cmp
js
mov
jle
cmp
lods
sbbl
or
xor
cmp
jno
test
stc
shlb
mov
or
lods
aaa
add
nop
ret
call
out
lds
pop
mov
iret
sbb
rorl
mov
mov
rol
adc
sahf
rorl
jne
psrad
push
imul
mov
rcl
mov
xor
nop
addb
ret
lahf
nopl
dec
sahf
adc
mov
inc
mov
mov
add
pop
lods
pusha
pop
jg
shlb
jbe
test
mov
mov
xor
push
xor
fidivl
xchg
inc
fldt
add
xchg
add
call
test
add
call
or
jmp
ja
in
bound
mov
xor
jmp
rol
repnz
add
sti
jo
xor
divb
int3
pop
jl
imul
je
or
pop
subb
andb
fucomip
mov
mov
lock
mov
mov
or
mov
aaa
add
cli
xor
lahf
in
iret
add
mov
in
insb
test
sarl
sub
jle
or
cld
or
adc
ljmp
adc
mov
incb
and
jmp
pop
stos
mov
sti
insl
ret
idiv
dec
push
xchg
roll
int
xchg
pop
push
sub
adc
fldt
mov
lret
in
popa
mov
push
repz
data16
outsl
pop
idivl
add
insb
mov
das
sub
popa
xchg
jno
test
jmp
lea
mov
ja
stos
dec
das
jns
mov
cs
mov
inc
int
jge
dec
push
xor
pop
xor
dec
inc
lret
sub
into
outsb
clc
adc
add
aaa
cmpsb
addr16
mov
out
stos
shll
movsb
mov
sbb
insl
imul
cmpsb
or
andl
mov
mov
adc
jge
sti
or
sbb
icebp
pop
mov
loop
inc
ja
fsub
and
and
in
loop
sub
sti
insl
out
mov
sahf
loope
lcall
arpl
out
jno
cmovl
xor
lods
push
ret
push
mov
ret
jno
sahf
das
jno
jecxz
ss
ret
daa
lret
gs
movsl
inc
lahf
mov
fs
jnp
ja
and
outsl
lcall
or
test
lods
mov
je
movsl
add
mov
rclb
clc
pop
add
jle
in
movsl
lahf
rol
fidivrs
add
jnp
cltd
xchg
idivl
ljmp
pusha
cltd
insl
imulb
and
dec
mov
scas
fdiv
repnz
loope
sub
rol
push
shlb
insb
and
cmp
pop
popf
cmp
loop
adc
int
rcrl
sbb
dec
xor
xchg
push
inc
lret
or
add
adc
in
mov
xchg
inc
les
cmp
int
adc
mov
dec
xchg
dec
cmp
int3
enter
lret
push
mov
adc
sub
and
mov
dec
push
mov
pop
ret
xlat
cli
mov
inc
mov
and
arpl
jnp
fimuls
adc
into
out
cmp
loop
sub
mov
idiv
dec
xchg
mov
mov
mov
sub
cmp
sbb
push
push
xchg
and
xchg
jle
int3
call
clc
out
in
mov
lock
out
push
dec
int3
push
add
xor
cmpsl
mov
iret
sub
out
ret
cmp
sarl
es
xorb
xchg
mov
mov
pop
inc
enter
out
aam
mov
and
inc
cmc
inc
pop
gs
and
dec
mov
clc
rcr
adc
cmp
sbb
mov
jle
sarl
push
lock
mov
push
push
sbb
mov
jnp
insb
mov
cmp
or
sub
shrb
or
dec
aas
out
subb
mov
mov
xchg
ss
inc
adc
cmpb
xor
loopne
and
or
cmp
sub
xlat
jp
mov
xor
stos
in
pop
roll
pop
js
popa
adc
mov
lods
inc
scas
data16
call
subb
xchg
mov
scas
xchg
xchg
mov
loop
int3
fs
aam
nop
pop
cs
lea
pushw
and
ret
xchg
jno
dec
dec
sahf
sarb
jge
pop
add
push
push
fucomi
mov
outsl
sahf
adc
clc
ja
add
inc
cmp
in
add
cld
ja
cmpb
dec
sti
stc
lret
das
inc
rclb
incb
ret
je
in
fs
sbb
dec
sub
mov
test
pop
dec
fldenv
jns
inc
push
mov
jne
push
loop
in
rcl
pop
xchg
insb
out
xchg
cmpsl
mov
or
push
xchg
fnstcw
mov
push
sub
outsl
xlat
add
add
jge
movsb
pusha
daa
mov
xor
test
push
lea
dec
out
xchg
xor
ss
push
mov
sarl
je
call
sbb
cltd
adc
out
lret
into
out
inc
int
jne
ja
xlat
pop
or
add
movsl
dec
in
lret
imul
cmp
add
inc
aad
pop
and
data16
add
and
stc
fwait
add
loop
int
sbbl
int3
fs
arpl
jl
and
lea
mov
or
jno
mov
xchg
xchg
rcrb
sub
and
add
xchg
aam
xor
cmp
sbb
sub
xchg
mov
ret
addr16
dec
pushf
icebp
cmp
and
inc
cld
in
xor
pop
das
xor
js
dec
sar
inc
shrl
cmpsl
pop
push
sub
xor
mov
ljmp
sbb
rolb
ljmp
cmpsl
mov
xor
fwait
mov
in
add
nop
inc
xor
loop
push
in
xchg
mov
pop
das
xor
hlt
cmc
and
jnp
xchg
mov
pop
repnz
aaa
test
cmp
scas
adc
mov
out
xlat
int
push
fildll
jne
jmp
xchg
js
adc
dec
add
mov
clc
fiaddl
fnsave
je
and
jb
push
jno
cld
stos
mov
jnp
fidivrl
pop
test
icebp
in
dec
bound
sbb
adc
jecxz
jb
adc
mov
push
mov
cmpsb
mov
rclb
fstpt
shlb
jmp
insb
mov
clc
cmp
mov
test
pop
add
repnz
sub
and
mov
cmpsl
mov
or
orl
arpl
dec
add
mov
repnz
int3
mov
ret
jl
mov
repz
pop
shrl
inc
push
sub
fidivrl
scas
mov
mov
jns
mov
leave
out
adc
hlt
mov
ret
mov
imul
push
rcrb
outsb
push
ret
movl
in
emms
in
mov
sbb
ret
loopne
jo
mov
call
xor
dec
inc
test
stos
ja
test
cltd
dec
lcall
icebp
jns
gs
lods
cwtl
pop
and
cld
sbb
into
in
and
into
pop
lret
pop
loope
lds
adc
nop
mov
aad
pop
stos
inc
outsl
xchg
mov
add
leave
inc
ss
test
js
fwait
mov
insl
jle
and
and
or
gs
xor
inc
xchg
aas
xor
pop
lret
pop
or
cmp
cmpsl
jb
jl
lds
mov
je
fwait
sbb
outsb
cs
out
outsl
dec
jmp
lods
push
fbld
aam
fcmovne
jmp
das
cmp
jmp
jbe
pop
mov
cmpl
xor
xor
loope
jno
fsubs
ja
jne
cld
and
in
inc
add
push
roll
imul
fimull
add
sbb
or
add
sbb
adc
clc
add
pop
mov
movsl
repnz
xchg
ret
dec
push
cli
sti
mov
jecxz
fdivrl
pushf
scas
inc
test
add
dec
and
arpl
in
adc
dec
addr16
rcll
xor
jbe
push
out
mov
bound
fsubrl
subb
pop
sar
mov
insb
and
xchg
popa
mov
cmpsb
loop
lahf
ljmp
mov
incb
imulb
jns
jp
std
iret
rolb
and
inc
jle
adc
cmp
mov
push
leave
add
out
addl
mov
rcrb
xchg
scas
pop
fistpl
xchg
pop
jns
fistl
enter
aam
mov
out
mov
inc
lret
mov
shll
arpl
or
les
sbb
jmp
dec
lods
pop
adcl
fstps
and
push
sbb
xorb
dec
mov
fwait
xor
fsubrp
xlat
cmp
cltd
scas
mov
in
and
or
xchg
push
mov
dec
mov
sbb
cmpsb
and
aaa
xor
popa
sbb
enter
dec
push
lods
xchg
out
cmp
dec
cmpsb
rcr
pop
dec
cmp
xchg
enter
lea
lcall
xchg
dec
adc
lds
pop
sahf
and
out
scas
jne
loopne
rcll
test
or
subb
jmp
es
nop
adc
dec
jnp
hlt
lock
xor
icebp
mov
and
adc
cmovnp
shrb
or
xchg
dec
cmpb
out
stc
rcrl
movl
fdivp
pop
cli
jl
jmp
scas
into
pop
idiv
inc
pop
adc
mov
mov
das
imul
adc
mov
jbe
push
add
inc
xchg
movsb
lds
cmp
push
scas
push
call
scas
jecxz
dec
mov
mov
fbld
mov
cmp
inc
or
pop
sub
cli
add
arpl
jl
ss
ret
outsl
cmpsl
leave
scas
cmc
dec
inc
mov
push
scas
ss
in
xor
inc
jnp
aam
shrb
outsl
stos
push
ja
cmp
inc
mov
in
mov
inc
movsl
adc
push
daa
push
and
out
flds
test
sbb
jmp
in
in
sbb
js
inc
ficomps
mov
xchg
and
push
mov
jb
sbb
jb
mov
aam
xchg
or
push
ss
pop
inc
fs
xchg
mov
subb
ja
mov
xchg
cmp
loopne
mov
xchg
jmp
sub
movsb
mov
jae
js
cmp
xor
pop
pop
cmp
stos
cmpsb
jge
sbb
cmc
loope
imul
push
insl
or
ljmp
mov
insb
repnz
jno
fistl
push
enter
js
mov
add
cld
or
loope
mov
int3
pop
jg
pcmpeqd
repz
fldt
mov
jno
push
dec
pop
imul
inc
shr
scas
stc
jmp
mov
pop
outsl
mov
test
je,pt
out
add
js
sarb
fisttps
adc
aam
pop
jmp
ret
lret
outsl
pop
sbb
push
popa
lea
cs
mov
mov
mov
lods
enter
or
in
or
jo
mov
jae
mov
cmc
push
mov
stos
mov
jno
aas
mov
sub
insl
mov
movsl
iret
pop
fdivs
inc
insb
test
arpl
inc
dec
fimull
int
std
aam
int
add
lds
pop
mov
inc
loope
sub
add
fldl
and
inc
shr
insl
pop
movsl
dec
pop
into
in
das
xor
inc
and
dec
call
mov
imul
ds
insb
or
pop
adc
sbb
mov
lods
pusha
ljmp
push
xchg
mov
aad
mov
icebp
roll
xchg
subb
pusha
shrb
mov
push
sti
icebp
mov
inc
popf
jno
mov
push
adc
in
dec
sar
es
lods
mov
dec
cmp
pop
data16
scas
mov
pop
mov
cwtl
sahf
es
mov
jo
pop
andl
rorb
jmp
inc
nop
pusha
pop
negb
mov
imul
sub
add
enter
push
jnp
rclb
pop
xchg
mov
fld1
xchg
mov
or
adc
push
push
ret
repz
mov
sub
mov
cltd
outsb
outsl
xchg
out
das
dec
xchg
and
adc
fs
mov
jl
ja
testl
leave
in
and
adc
sbb
pop
imull
out
lock
mov
inc
rcr
popf
es
jge
lds
push
fbstp
or
enter
dec
lods
call
movsl
inc
or
adc
and
push
lcall
xor
xlat
jl
and
xor
cli
xchg
pop
mov
dec
ja
in
in
fs
mov
push
lahf
rorb
adc
and
hlt
sahf
add
xchg
and
stos
xchg
xchg
stc
push
mov
jl
mov
in
mov
inc
xor
push
push
xchg
movb
push
fadds
cmp
mov
sbb
mov
out
sbb
popa
jno
fldcw
mov
mov
pop
xlat
fadds
jl
jb
sub
jp
addl
pop
pop
dec
push
sbb
mov
xchg
ss
xchg
mov
push
mov
cmpsl
push
into
mov
out
xor
pusha
sbb
sbb
insb
dec
and
sbb
lahf
sub
adc
xlat
gs
xor
lods
in
mov
into
sub
dec
cmpsl
mov
fwait
lods
and
ljmp
push
adc
fcoml
mov
out
cmp
cmp
out
repz
test
pop
jae
shrl
pop
pop
hlt
xor
pop
mov
movsb
lahf
jns
aam
pop
int
fdivrl
cmpsl
fisttps
jns
lea
cs
jg
or
push
push
iret
mov
lea
mov
ret
daa
cmp
sub
decb
or
insl
insl
mov
fiadds
add
xor
mov
insl
imul
mov
mov
sbb
fmull
and
fidivs
bound
sub
add
mov
mov
cmpsb
lret
shld
pusha
icebp
mov
push
push
sub
sbb
jnp
fisubrl
shrl
movsl
and
cmp
insl
mov
iret
pop
decl
jmp
lds
call
dec
add
loopne
je
cld
aad
or
rcll
cmc
cli
iret
mov
fcom
jmp
jg
pop
adc
and
shr
out
les
lcall
push
addr16
int3
push
dec
add
and
stos
ret
push
cmp
mov
in
ret
inc
inc
addr16
mov
nop
xchg
jg
xchg
sbb
decl
mov
xchg
cmpsb
test
dec
aaa
and
push
jb
jmp
jne
cmp
cmp
push
insb
jecxz
jno
aas
dec
ror
stc
sbb
mov
adc
and
lock
mov
ss
clc
mov
sub
test
lock
mov
jns
hlt
add
ret
lock
or
sub
mov
pop
mov
sub
mov
or
pop
xchg
adc
and
cmpsl
xlat
std
mov
mov
ret
rorl
mov
shlb
in
dec
and
xchg
in
add
loopne
ficoml
xor
xchg
aaa
sbb
xor
push
sbb
lods
mov
dec
pop
in
mov
push
clc
dec
aas
sub
in
push
add
push
dec
xchg
outsl
mov
pop
cmpsb
divb
out
jmp
dec
hlt
rcrl
out
fwait
lahf
in
push
push
enter
and
movsl
or
and
add
scas
mov
xor
jns
cmpsb
sti
add
mov
mov
mov
popl
int3
add
dec
xchg
jecxz
cli
pop
fisubrs
loopne
addr16
adc
push
jne
jb
data16
shlb
pop
sbb
sbb
fwait
lahf
arpl
mov
mov
mov
je
add
push
or
lea
in
mov
lods
adc
les
leave
out
dec
mov
or
movsl
inc
sti
cmp
dec
aam
cmpsb
mov
in
repz
aas
dec
xchg
inc
ror
mov
pop
cltd
cmc
xchg
mov
and
pushf
outsl
int3
adc
mov
mov
xlat
fwait
test
or
dec
pop
fstl
arpl
ds
mov
adc
inc
aaa
enter
mov
mov
js
xor
jl
dec
jb
inc
ljmp
adc
outsb
das
insl
mov
mov
sbb
scas
push
adc
in
pushf
jnp
in
out
adc
mov
push
outsl
test
jae
adc
adc
jp
add
pushl
adc
pop
or
test
mov
jle
imul
nop
pushf
lock
adc
cmp
shl
stos
cld
scas
ret
jnp
jp
xor
pop
push
mov
inc
dec
xchg
test
xchg
test
adc
sahf
ret
pop
push
sub
and
jecxz
testb
and
push
pushf
pop
push
push
cmc
bound
xchg
imul
jns
mov
jl
cmpb
cmp
adc
jp
scas
push
adc
test
push
xchg
and
outsl
cmp
mov
out
xor
popf
mov
rcrl
mov
in
pop
pusha
dec
xor
sbb
stc
sbb
pop
mov
cmp
repnz
mov
imul
and
or
shr
jecxz
xor
push
xlat
stos
data16
test
jp
and
cmp
mov
test
test
daa
mov
or
mov
out
push
mov
pop
sub
in
sahf
cmpsb
popa
xor
shlb
adc
or
or
lar
push
mov
xchg
push
scas
sub
xchg
das
je
add
out
cmp
movsb
stos
mov
and
and
js
xor
outsl
push
fisttps
into
lea
inc
xlat
arpl
dec
loope
xor
jmp
sbb
outsb
xchg
cld
shr
enter
inc
dec
shll
adcb
xchg
addr16
ret
fisttpl
mov
mov
sub
roll
mov
xchg
lods
and
gs
in
lods
mov
fmul
xor
inc
dec
dec
inc
dec
sbb
dec
orl
sub
pop
in
cld
pop
in
mov
jecxz
mov
test
mov
inc
es
test
rorl
jbe
push
punpckhbw
sub
cmp
inc
sub
inc
ficomps
data16
dec
int3
dec
pop
jae
pop
in
jl
or
nop
dec
push
pop
out
mov
inc
cmp
mov
shl
lcall
or
lcall
scas
dec
test
mov
ret
cli
adc
xchg
dec
js
add
ljmp
mov
cmp
xor
mov
or
aad
cmc
adc
ds
inc
dec
add
adc
mov
sahf
js
mov
repz
imull
jne
stos
inc
adc
ds
fwait
mov
das
and
sbb
sbb
pop
nop
push
mov
cmpsl
gs
cmpsl
ss
in
imulb
cmp
sub
or
ja
lea
xor
lock
nop
aam
xor
cs
xor
ret
test
mov
or
sarb
call
repz
inc
fmull
cmp
push
add
mov
xchg
xchg
push
inc
movsb
ja
ret
cmp
sbb
push
mov
pop
xlat
dec
inc
sbb
ljmp
cli
daa
shll
or
scas
mov
or
ret
das
jle
divb
push
push
rorb
cltd
out
notl
mov
shlb
jp
cld
xor
add
xchg
repz
idivl
mov
dec
in
ret
es
mov
adc
mov
lcall
fcomps
lods
clc
push
jge
stc
jnp
out
mov
popa
cmp
jp
dec
fcoml
push
data16
scas
and
dec
push
xor
idivl
mov
sbb
stc
dec
or
rorb
add
icebp
mov
sbbb
cld
and
sbb
jl
imul
pushf
dec
popf
cmp
pop
pop
xor
ljmp
movb
lcall
roll
lods
test
loop
mov
lds
stos
int
or
insl
ljmp
lds
rcll
scas
push
ljmp
mov
lcall
je
mov
stc
fisubrs
cmp
in
shl
jecxz
cmpsl
hlt
mov
mov
in
cmp
cmp
cltd
ljmp
insb
dec
orl
test
inc
adc
sbb
cltd
outsb
fdivs
insl
and
fcomps
fs
inc
popa
dec
mov
test
mov
mov
aas
xor
and
nop
adc
gs
mov
pop
jl
xchg
push
cli
bound
insb
je
out
xchg
dec
je
jecxz
mov
push
add
popf
lea
mov
dec
and
aam
fistpll
pop
rolb
mov
adc
ss
repnz
or
sub
rolb
mov
outsb
cmp
dec
sub
dec
mov
enter
enter
push
sbb
or
xor
scas
pop
imul
sti
xor
pop
inc
mov
ss
or
fdivrl
inc
jecxz
imull
icebp
pop
jae
jne
xchg
dec
ret
or
cmp
lods
idivl
add
xchg
or
jo
mov
pop
pop
rclb
xchg
roll
outsl
mov
ret
popf
lret
stos
inc
and
push
das
imul
xor
rcll
push
ja
inc
in
and
push
mov
sub
adc
ljmp
cmp
imul
push
in
or
test
mov
in
lods
add
sti
add
pop
jae
mov
sarl
test
ret
fsubr
lods
sub
outsb
daa
jbe
sbb
scas
sarb
pop
xchg
dec
jp
enter
data16
mov
shll
les
adc
test
dec
test
repz
mov
inc
jmp
push
jb
iret
sub
imul
es
mov
sbb
xchg
testb
in
and
and
cmp
pop
mov
sti
aad
scas
in
cmp
jle
subl
pop
pop
inc
dec
push
js
outsb
das
es
fimull
pop
mov
sub
ss
sub
stos
pop
cmpsb
cld
add
and
out
fidivrs
cmp
mov
loopne
mov
add
sub
add
fildl
test
out
xchg
aad
cs
xor
ret
xchg
jae
in
or
cmpsl
inc
sub
test
mov
mov
xchg
ret
inc
push
sub
movsl
xchg
and
clc
clc
cmp
xor
jmp
lock
sub
mov
mov
sarl
add
dec
rcrl
xor
gs
push
sub
jl
test
and
fs
in
mov
jne
ja
fcoms
enter
inc
out
adc
je
outsb
and
imul
popf
jecxz
push
sbb
dec
dec
jp
outsl
mov
lea
mov
std
add
aam
pusha
inc
or
imulb
and
lahf
dec
gs
dec
jmp
jo
xor
aaa
add
loopne
push
xor
aam
mov
ret
xchg
sub
ss
fistpl
movb
dec
push
out
adc
gs
or
pop
orb
cmc
popf
inc
push
xor
inc
add
xchg
jo
pop
rolb
lea
lods
dec
jae
jno
cmpsb
jne
cmp
ja
mov
pop
cmpsl
icebp
mov
call
or
jg
cmp
dec
xchg
add
movsb
jne
pop
aam
stos
fwait
and
push
xlat
cmp
sub
sti
mov
mov
repnz
add
test
inc
cmc
xchg
outsb
imul
push
out
clc
imull
jnp
out
cmp
push
popf
push
outsb
outsb
mov
mov
stos
adc
and
scas
in
mov
adc
mov
fisubl
hlt
sahf
sub
popf
notb
daa
or
xchg
pop
mov
pop
dec
add
loope
fisubs
xchg
data16
or
in
dec
mov
dec
lock
sub
sarl
xchg
in
loope
lods
adc
js
inc
jle
xor
sub
les
add
aam
or
add
xchg
cwtl
fidivrs
jle
ds
mov
add
add
test
cmpsb
xor
popf
rorb
iret
adc
pop
mov
and
sub
cmpsb
cmp
jecxz
ljmp
iret
mov
cwtl
xchg
sahf
push
pop
cld
push
cmc
jns
lock
in
loop
inc
xor
push
push
pop
iret
and
ss
sbb
jmp
xchg
stos
mov
insb
xor
ficoms
outsb
adc
and
dec
mov
rcrl
sub
dec
and
lcall
push
es
rorl
push
cs
in
cmp
mov
mov
loopne
fildl
sub
add
push
iret
mov
xchg
scas
jmp
aas
mov
mov
mov
lea
xor
out
lahf
push
jmp
shrb
inc
fwait
jge
pop
dec
pusha
or
pop
loope
out
lret
cwtl
imul
fadd
xor
mov
xor
push
leave
mov
mov
pop
or
repnz
mov
and
aam
popa
lret
dec
loope
aaa
les
pop
or
roll
jnp
lahf
xchg
add
ds
jp
fidivs
inc
pop
or
fnstcw
lret
ja
jge
add
pop
popf
push
sahf
sub
mov
cmp
jne
dec
pop
cmpsb
cmpsb
mov
pop
mov
es
pusha
dec
dec
daa
in
dec
sarb
xchg
push
push
mov
rcrb
and
jae
xchg
pop
or
dec
jecxz
jmp
in
out
and
lret
push
enter
adc
movb
jecxz
cs
pop
outsl
mov
jbe
fidivrs
mov
pop
lock
jno
loopne
inc
mov
nop
aam
andl
das
pop
nop
cmpps
dec
call
and
out
icebp
cmpsl
mov
and
xor
fldenv
scas
push
or
rorb
das
repnz
sub
and
mov
sub
ret
ret
rorl
pusha
lcall
dec
xchg
push
adc
in
mov
inc
je
adc
push
jnp
adc
add
movsb
xchg
cli
jmp
in
lock
mov
mov
jne
and
adc
cmp
mov
rorb
ret
mov
dec
mov
ja
jle
test
jl
aaa
mov
insl
dec
clc
and
ss
xor
xor
mov
xchg
loop
rcrb
rcrb
insb
mov
mov
adc
dec
lahf
ret
repz
add
pop
push
cmp
stos
shl
cltd
pop
outsb
je
fs
sbb
or
clc
push
fs
jno
pop
cwtl
imul
mov
leave
imul
pusha
sbb
imul
cmpsl
lret
inc
mov
cmp
shlb
sbb
inc
add
push
insl
jl
loope
sub
mov
sbb
out
push
mov
inc
push
and
mov
add
jno
and
sbb
mov
inc
arpl
aaa
popa
or
shll
loope
inc
js
pop
gs
add
mov
or
add
dec
nop
mov
inc
xchg
cli
int
adcb
cmpsb
cmp
mov
test
dec
sahf
pushl
mov
jb
xchg
int
nop
lods
not
scas
aad
xchg
xor
int
popl
les
push
icebp
xchg
in
in
pushf
movsb
xchg
inc
cmp
shlb
fcmovnbe
aas
xchg
cmp
popf
add
and
xchg
dec
mov
mov
and
jo
push
out
das
arpl
cmp
push
outsb
je
pop
test
add
lahf
sub
mov
clc
push
push
mov
push
out
test
arpl
mov
mov
xchg
or
xor
dec
lret
sbb
inc
in
jp
data16
and
jns
jl
scas
inc
mov
jbe
rcr
test
push
lcall
cmp
cmpsl
mov
fmuls
es
sbb
leave
mov
ror
sarl
arpl
dec
iret
repz
dec
in
xchg
adcb
inc
jecxz
sbb
out
lods
push
stc
lahf
or
repnz
aad
int3
push
pop
lea
push
rcrb
push
and
idivb
dec
dec
or
lret
arpl
popa
xchg
pop
cltd
mov
push
ret
fldl
sub
mov
mov
jb
call
loop
sahf
jg
aas
fdivl
cld
pop
lret
int3
pop
rcll
sbb
repnz
jnp
outsl
mov
incl
popa
or
and
jns
dec
pop
ret
arpl
mov
xor
push
add
jmp
ja
or
dec
sbb
inc
xor
xchg
fs
xchg
leave
xor
repnz
call
int
out
scas
leave
lret
shll
xlat
mov
icebp
dec
scas
inc
and
cltd
test
aaa
mov
jae
enter
pop
mov
add
es
cld
rclb
jmp
mov
repnz
xor
dec
cmpsl
test
mov
rorb
pop
cltd
add
repnz
pop
sub
arpl
out
push
sbb
cmpsl
adc
ficoms
push
cmp
loop
dec
in
jge
test
pop
jnp
mov
xchg
aaa
imul
sub
push
xorl
ja
in
and
sarl
insb
sub
lock
mov
in
push
cmc
mov
mull
push
cmp
adc
mov
scas
out
xchg
sub
aaa
mov
mov
mov
or
fsubr
adc
aam
scas
cltd
xor
mov
adc
push
jmp
pushf
xchg
and
lret
mov
jmp
movsb
xlat
or
sub
ret
xchg
test
lahf
add
inc
stos
mov
fnsave
push
sahf
shr
imul
rorb
dec
call
add
bound
cmc
ds
cmpsl
xor
outsl
ret
ljmp
arpl
dec
push
ljmp
ljmp
addr16
mov
mov
dec
xchg
push
movsw
jnp
mov
lea
cltd
call
ret
adc
add
sub
cld
xchg
subl
xchg
mov
fists
subl
push
imul
push
mov
mov
mov
xor
imul
add
notl
scas
jno
pop
pop
aaa
test
jae
and
cmp
loope
or
push
inc
das
in
popa
cmp
mov
ret
xor
test
out
xchg
cmpl
push
ret
sbb
sbbl
daa
ficompl
add
jnp
mov
test
mov
adc
les
fidivs
in
xlat
outsb
lock
xlat
out
seto
push
push
imul
dec
adc
out
mov
lock
repnz
xor
stc
in
and
ret
xor
movzwl
data16
push
dec
adc
adc
lret
inc
cld
mov
xchg
mov
xchg
stos
enter
cld
jge
push
pop
xchg
sets
shl
sub
popf
adc
push
inc
mov
pusha
jno
jnp
pop
fisttpl
cmp
lret
pmulhw
jl
in
mov
add
sbb
out
loopne
insl
fldcw
cmp
xchg
pop
cmpsb
xchg
sbb
xor
and
inc
daa
and
cli
xor
or
push
lahf
dec
lds
mov
mov
cmp
nop
mov
ret
rcr
stos
imul
cmp
int
sbb
mov
iret
fwait
mov
ficoml
jp
push
jl
pop
shrl
xlat
jno
movsb
adc
xchg
jbe
push
not
cmp
dec
movsl
jl
add
les
cmc
cld
subl
pushf
cmp
dec
dec
je
pusha
cs
push
enter
and
xor
jmp
jg
mov
xchg
ret
int
lret
mov
push
jle
cmpsl
adc
dec
mov
inc
or
xor
cmp
cmp
lods
and
jnp
push
std
gs
hlt
imul
scas
pop
in
out
daa
lcall
lret
lahf
ret
push
cmpsb
cmpsb
popa
inc
inc
std
and
aaa
cmp
dec
mov
imul
push
ja
pop
cmp
fs
sub
fmul
adc
test
mov
or
mov
movsb
and
repnz
cmc
int
xchg
cld
xor
jbe
pop
stos
and
mov
mov
pop
popa
mov
ja
scas
mov
cmp
cmp
xchg
inc
inc
sub
and
inc
outsb
jb
lods
xor
mov
bound
add
loopne
lea
add
jns
add
xor
test
std
leave
aad
push
push
mov
dec
je
rsm
mov
scas
mov
stos
adc
sub
adc
mov
popf
inc
cmp
pusha
xchg
mov
and
adc
shlb
jmp
adc
popf
movsb
sbb
add
insb
add
adc
mov
stc
xor
xor
fnstenv
jmp
shll
loopne
ret
xchg
pop
mov
push
sbb
or
inc
or
mov
or
cmp
fcompl
xorl
std
jmp
cmc
je
ja
std
pop
jno
inc
pop
lahf
mov
inc
sub
push
and
or
mov
push
sub
lahf
dec
mov
sbb
ret
in
int
sub
ljmp
xor
push
iret
fs
pushf
jo
dec
xchg
mov
ja
mov
inc
dec
test
mov
cmp
clc
mov
mov
ja
gs
xchg
xchg
adc
and
std
in
fildll
pop
scas
lret
dec
cmc
decb
lods
popa
push
sarb
mov
fnstenv
mov
and
lock
imul
adc
rorl
mov
jno
add
dec
outsb
add
popf
adc
gs
push
sarb
xchg
mov
mov
sub
and
push
and
into
pop
ret
ret
or
sti
jns
rorb
push
and
mov
xor
push
je
dec
inc
cltd
and
mov
add
jne
inc
mov
push
test
add
xor
and
add
mov
imul
xorl
mov
push
icebp
movsb
sub
lcall
in
add
inc
cmp
push
cmpsl
ficoml
gs
mov
je
xchg
je
xchg
add
and
push
lret
sub
push
in
jp
ss
ss
pop
mov
mov
int3
xchg
cmp
pop
jmp
es
xor
adc
ret
lods
add
rcll
and
es
inc
sbb
fidivl
ja
mov
mov
cmp
mov
sbb
mov
pusha
cmp
fs
adcb
in
dec
fldl
pop
xor
or
add
sbb
sub
pusha
iret
or
jmp
shrb
xor
push
cli
mov
pop
sbb
movsl
inc
sbb
daa
jge
adc
adc
sbb
in
aas
repz
ljmp
dec
mov
jmp
lahf
pusha
imul
dec
xchg
sbb
jns
pop
push
imul
xchg
and
popa
or
ret
fwait
mov
mov
push
lret
cwtl
ljmp
gs
push
or
sar
aaa
iret
int3
lret
inc
rorb
or
mov
in
xchg
mov
mov
int3
xchg
inc
cmp
dec
push
xchg
sub
lods
sti
or
jmp
xor
movsl
jp
sahf
fsubrp
lcall
sbb
cltd
pop
pop
or
xchg
mov
inc
idiv
push
nop
xchg
stc
dec
and
jle
mov
sub
mov
shr
addr16
insl
lahf
add
mov
in
pushl
in
cs
adc
xchg
addl
aam
mov
jge
outsl
fidivl
xchg
out
push
rcr
sub
cmp
jns
mov
popa
in
dec
lea
pusha
sbbl
icebp
lods
jmp
les
rcll
mov
adc
std
clc
and
inc
fsubs
lods
xor
iret
mov
mov
add
cmp
movsl
push
cld
repz
or
lods
fwait
mov
jl
dec
sbb
inc
in
and
stos
lcall
pushf
jle
pop
jl
pop
jne
push
mov
sbb
pmaxsw
pop
adc
nop
int3
or
shrl
and
push
pushf
push
les
mov
jge
adc
pushf
in
add
jmp
jmp
and
sti
gs
pop
xor
fstpt
jnp
sbb
jg
aas
jno
sub
cs
jnp
bound
jbe
sbb
lret
movl
push
mov
movsl
std
cli
ljmp
jl
jne
and
mov
cs
jmp
shlb
fs
movl
stos
push
cmpsl
es
testb
in
pusha
stc
addl
into
push
jno
mov
push
ja
stos
add
out
stos
pop
push
xchg
loopne
jae,pt
xor
ds
daa
out
jge
lods
fisubrs
mov
scas
rol
mov
clc
pxor
ja
fdivp
je
jge
mov
xlat
mov
jge
stc
push
sub
sub
cmovae
adc
xchg
sub
push
mov
inc
jo
inc
fwait
sub
sarb
xchg
or
lret
aad
imul
imul
test
in
pushf
mov
popf
inc
mov
sub
jp
enter
sub
lods
inc
mov
fidivs
lds
popa
inc
daa
sub
out
les
sbb
in
leave
in
dec
mov
dec
ljmp
push
pop
std
dec
or
pop
mov
in
leave
mov
je
insb
mov
lods
xchg
out
out
add
arpl
mov
movsb
outsl
into
fisubl
mov
in
mov
jle
sti
adc
xor
sbb
pop
popa
xchg
mov
mov
loopne
cltd
idivl
pusha
repz
xor
je
pusha
je
pop
popa
in
mov
ljmp
loop
lods
out
nop
and
popa
xchg
mov
testb
xchg
jne
and
jg
shl
and
int3
mov
push
adc
dec
ret
mov
mov
stc
int3
and
sub
push
sub
dec
cmp
data16
int
mov
inc
jo
pop
fs
mov
fisttpll
aaa
stos
in
dec
mov
in
hlt
push
push
int3
push
dec
iret
inc
fstp
jbe
fadds
cwtl
mov
sub
mov
lods
lret
jecxz
pop
mov
stos
pop
clc
inc
ret
cmp
mov
enter
lret
mov
sbbb
cmpl
or
pop
clc
lea
dec
cld
sub
jle
leave
das
out
pop
insb
pop
mov
in
popa
pushf
popw
push
inc
jg
test
mov
dec
add
mov
dec
stc
sbb
lods
jecxz
test
mov
jp
xor
lods
testl
pop
inc
lret
add
jo
dec
mov
pop
jg
or
jae
inc
add
jno
mov
je
dec
xor
mov
adc
push
iret
icebp
sbb
mov
or
sbb
dec
cmp
adc
dec
or
jp
sbb
mov
std
sbb
les
mov
mov
cltd
es
and
jecxz
rorl
scas
mov
jno
cld
pop
test
sbb
or
jne
mov
out
mov
fwait
aad
fmull
into
and
pop
push
cmp
es
ja
std
lea
push
stos
mov
sbb
xor
xchg
xchg
cwtl
xor
xorb
hlt
adc
inc
inc
inc
inc
in
push
add
div
jnp
fdivrp
xor
sub
lret
and
sub
xorl
fidivl
arpl
mov
incb
insb
or
xchg
lret
daa
sbb
jnp
out
testb
mov
cld
jo
adc
repz
cltd
aad
into
ret
and
inc
pushf
enter
inc
and
cmp
pop
or
test
mov
push
call
xchg
in
push
push
dec
pop
sub
sub
add
loop
add
aam
sbb
in
jae
and
into
rclb
jge
nop
cld
test
dec
adc
mov
or
arpl
jge
mov
cmc
push
cmpsl
test
jne
enter
xadd
adc
aad
mov
in
lds
jg
shll
cmp
stos
dec
adc
pop
jbe
out
pop
mulb
aam
pop
popf
cmc
adc
loope
sub
inc
out
pusha
sub
push
mov
or
mov
push
mov
lret
mov
in
adcb
aam
shll
out
xchg
mov
loope
inc
xor
data16
into
xchg
pop
xorb
mov
sub
xchg
in
xchg
mov
imul
dec
or
out
xor
pop
in
or
clc
xchg
sub
mov
bound
or
aas
insb
outsl
xchg
push
cmp
pop
sbb
mov
dec
fsubl
lods
test
test
sub
outsb
or
xchg
jp
hlt
dec
pop
dec
jmp
pop
int3
shrb
imul
aaa
gs
jae
pop
mov
sub
xchg
test
xlat
aam
test
pop
into
stos
jnp
xchg
sbb
ret
cmp
jns
hlt
lds
fsts
fistpl
dec
lret
dec
pop
sub
dec
decl
sub
mov
movsb
int3
inc
loope
xor
lea
xor
enter
add
ror
outsb
loopne
pop
add
aad
cmp
rclb
fiaddl
test
cmp
movsb
pop
xchg
adc
shll
cld
mov
sub
pop
gs
aad
lahf
imul
adc
test
scas
xchg
mov
sbb
mov
inc
cmp
sub
insb
mov
cmp
mov
cmpsl
mov
jae
sbb
sahf
mov
xchg
jo
out
sahf
pushf
dec
xchg
sbbl
setbe
push
sub
fidivrs
push
xchg
mov
sbb
cmpsl
inc
mov
inc
test
add
xchg
orl
mov
repz
loopne
cltd
inc
sub
sbb
sahf
xchg
mov
std
xchg
cmp
mov
adc
fiaddl
pop
loope
popa
into
lret
mov
sub
push
mov
lds
jne
movsl
mov
lock
push
decb
movsb
std
mov
and
sahf
dec
dec
sub
pushw
inc
ja
scas
int3
ret
sub
aam
add
sbb
loope
call
mov
popf
cmc
mov
push
vcvtss2si
xor
push
shll
xchg
out
mov
scas
adc
cmpl
or
cmp
pop
repz
pop
mov
cmpsl
out
jl
inc
xchg
addr16
int3
pop
mov
pop
sbb
imulb
fmull
sub
sbb
cmpsl
push
shll
data16
aaa
lcall
push
xchg
or
int
push
jb
std
mov
and
inc
mov
adc
hlt
in
test
bound
jno
jge
push
fisubrs
dec
pushf
and
push
js
enter
push
fidivs
mov
push
aad
lods
fsts
sbb
test
cmpsb
pop
sub
mov
aas
jecxz
mov
andb
adc
mov
inc
je
adc
es
fsub
dec
push
mov
addb
stc
mov
inc
jg
ja
addr16
pop
or
mov
stos
inc
sbb
test
data16
fidivrs
fidivl
inc
and
insl
mov
sbb
addr16
or
xor
daa
mov
push
frstor
repz
mov
repnz
and
lret
cwtl
and
xchg
fcoml
xor
sub
push
hlt
ret
sub
test
je
mov
mov
adc
mov
xchg
stc
add
jmp
mov
cld
mov
aam
call
mov
inc
scas
mov
dec
fstpt
shll
dec
repz
cli
lock
pop
mov
jo
test
rcl
cmp
inc
jno
sti
rorb
lds
cmp
int3
push
xlat
cmpsb
aad
sub
dec
pop
mov
fidivs
rep
sbb
mov
inc
leave
jno
sub
cmp
popf
int
scas
cmpsl
jns
lock
sbb
xchg
xor
sbb
cmc
jno
and
stc
div
and
pushf
aaa
js
and
stc
leave
call
sarb
out
mov
push
fstpl
sbb
movsl
or
sub
dec
adc
mov
enter
sti
adc
lock
cmp
xchg
lock
dec
aad
in
xor
push
xchg
sbb
imul
int
test
movsb
out
add
pushf
inc
sbb
insb
or
pop
mov
test
xor
lods
movl
xchg
inc
rorl
int3
push
sbb
mov
dec
xor
dec
adc
pop
cld
adc
add
out
data16
sub
ss
out
sub
jmp
loop
sbb
push
jae
sub
imul
pop
sub
jp
xchg
xchg
inc
jo
aaa
push
cmp
mov
inc
jns
lock
mov
adcl
pusha
cmp
mov
loope
call
repnz
sahf
mov
xor
or
or
scas
or
adc
imul
fucomip
xchg
cmp
lock
mov
dec
pop
xor
jmp
ja
test
sahf
fs
aaa
ljmp
pop
and
or
dec
movsb
shr
inc
sbb
test
sbb
lds
xchg
pop
inc
das
pop
sub
inc
ficoml
jae
add
and
sbbl
dec
pushf
int3
popf
cmp
mov
pop
lret
aas
in
mov
sub
das
xchg
pop
dec
jo
jbe
push
xchg
and
push
pushf
xchg
adcl
xchg
bound
adc
popa
imul
jns
nop
cmp
addl
cmp
sbb
icebp
out
pop
jmp
pop
clc
jecxz
mov
movl
and
lods
inc
pop
pushf
jnp
sbb
inc
movsl
add
test
xchg
hlt
mov
andb
mov
addr16
or
outsb
cltd
aas
mov
cmp
inc
arpl
pusha
sbb
mov
adc
push
insb
or
push
bound
out
jl
add
jo
xchg
rclb
sbb
pop
stc
xchg
xlat
scas
aam
mov
jmp
or
into
addr16
dec
and
fnstsw
jno
jg
dec
cmc
int3
mov
inc
je
and
adc
pop
xchg
xchg
pop
inc
nop
js
sahf
aas
int
negl
lret
adc
pop
lock
push
imul
cmp
js
loopne
dec
add
sbb
arpl
ljmp
arpl
push
dec
fbstp
test
test
mov
push
fucomip
mov
fildl
xorl
dec
xor
xchg
add
daa
sbb
out
cmpsb
dec
xor
popa
dec
into
inc
aaa
rcrl
andb
or
xchg
loopne
cmp
loopne
test
fs
inc
or
mov
lcall
dec
push
xor
adc
jne
and
outsb
push
mov
jbe
cmc
xor
mov
fistl
pop
dec
rcr
rcrb
lret
insl
stc
outsl
mov
jle
dec
push
call
inc
hlt
addr16
test
xchg
add
imul
jne
fdivrl
adc
into
add
add
dec
mov
aad
xor
sub
mov
shll
lock
mov
jns
jmp
cmp
push
sub
mov
xor
mov
xchg
xchg
sbb
daa
shll
or
pusha
mov
mov
pop
mov
fcmovbe
inc
xor
aaa
dec
movsl
lods
fwait
adc
pop
les
stc
fs
icebp
jmp
adc
sub
imul
es
and
enter
test
and
and
inc
and
sub
enter
xor
sub
fcomps
ret
outsl
daa
ret
push
and
and
das
push
shll
cmp
sbb
pop
add
mov
mov
xor
or
cmp
push
scas
jno
cmp
mov
stos
scas
gs
popf
ret
xchg
pop
jae
jne
popf
dec
fwait
add
pop
mulb
push
call
aaa
lcall
mov
mov
daa
inc
sti
lcall
int
jnp
and
pop
stos
mov
pop
sbb
imul
push
ja
and
pop
mov
ss
and
pop
lods
pop
and
push
mov
inc
jge
and
lea
popa
mov
pusha
mov
and
call
sbb
popf
popa
cmc
orl
push
jg
push
sub
xor
fstl
inc
mov
jp
cltd
into
ljmp
jecxz
imul
push
aad
mov
inc
fcomps
and
jo
test
mov
fs
and
sub
dec
jge
sbb
dec
jnp
xchg
inc
push
pop
mov
int3
je
push
sub
leave
pop
xor
shlb
shll
and
shll
shrb
das
pop
imul
out
stos
pop
push
xchg
int
stos
pop
mov
pop
xor
popa
inc
pop
cmp
push
sub
roll
add
push
sub
sbb
rol
in
and
add
leave
jl
out
movups
leave
jmp
inc
push
out
push
lods
je
add
rcrl
ja
pop
cmp
out
aam
adc
mov
cwtl
adc
pusha
add
das
idivl
jbe
adc
inc
fisttps
ret
mov
cs
add
scas
pusha
es
xchg
fs
jp
adc
push
xchg
jmp
scas
insb
add
lret
push
pop
faddl
loop
mov
cli
ja
cmp
xor
enter
mov
jo
testb
repnz
xchg
imul
icebp
push
mov
fimuls
jecxz
jle
pop
add
dec
insb
xchg
sbb
xchg
cmp
clc
in
pop
push
loop
mov
sbb
popf
std
pop
cltd
jno
adc
xor
dec
or
js
jle
bnd
jecxz
roll
jecxz
aam
dec
lock
add
aaa
cmp
loope
cmc
fwait
jmp
or
or
add
xor
or
fidivs
cltd
or
cmp
sub
or
jo
repz
iret
repnz
sti
or
stc
push
lahf
imul
jae
sub
sub
jno
cmpsb
dec
icebp
adc
push
sahf
dec
xor
cmpb
inc
int
insb
sbb
pop
and
xchg
jmp
adc
stc
mov
sub
push
cmp
jnp
sub
arpl
sub
packsswb
xor
ret
popf
dec
jbe
addr16
inc
adc
jne
leave
jne
inc
fwait
not
pop
mov
sbb
xchg
movb
pop
std
lret
addl
xor
pop
jo
out
sub
and
fs
stc
push
sbb
pushf
sbb
jae
lret
jl
cmpsl
je
sbb
cltd
daa
inc
repnz
sub
jg
imul
fidivrs
dec
rcr
roll
shl
icebp
in
sar
dec
inc
movsb
fcomp
pushf
fstpl
in
push
stc
adc
addb
cmp
iret
xlat
ss
mov
add
shlb
clc
dec
xchg
jo
inc
dec
jb
cmp
jl
sbb
cmp
and
dec
push
push
outsl
inc
add
mov
clc
xchg
out
cld
mov
xchg
jbe
jl
aam
mov
mov
test
stc
and
cmp
int
sub
arpl
jns
aad
lods
imul
in
fwait
pop
xchg
adc
fidivrs
sbbw
or
mov
lock
inc
sbb
clc
int
cwtl
jecxz
mov
push
mov
test
sub
shrb
inc
mov
testl
sbb
or
mov
push
mov
mov
xor
inc
jle
xchg
sbb
repz
xchg
mov
jg
xor
mov
inc
in
adc
in
mov
xchg
sub
jne
je
jo
push
hlt
jbe
push
jns
nop
lods
or
mov
movsl
adc
out
xorb
jecxz
inc
scas
out
xor
dec
or
sub
mov
mov
clc
mov
lret
scas
push
and
cmp
sbb
adc
lods
mov
adc
lea
mov
mov
add
pop
add
cmc
push
stos
push
or
adc
aaa
js
push
mov
mov
add
das
mov
lods
xchg
je
ljmp
or
push
repnz
cmp
xchg
in
sub
leave
adc
cmp
inc
mov
xlat
mov
std
loop
call
and
cmp
xor
addb
divl
stos
and
stos
insb
adc
out
shlb
mov
dec
lret
jge
xchg
add
add
sub
out
push
cwtl
dec
mov
xor
inc
mov
les
push
mov
cmc
mov
or
cmc
popl
xor
pusha
push
mov
mov
ds
daa
popf
repnz
jnp
adc
fldcw
cmp
out
pushf
mov
stc
in
scas
mov
or
ss
dec
jg
pop
sub
imul
sub
sub
dec
shll
xor
push
stos
test
clc
fists
push
xor
or
sbb
mov
fsubrs
sbb
out
sub
inc
inc
into
out
push
pop
xor
mov
shrl
dec
shlb
pusha
int3
mov
addr16
in
loopne
scas
sbb
fs
sub
cltd
add
in
icebp
sub
jg
in
pop
sbb
push
pop
ljmp
pushf
daa
jns
xchg
mov
jo
dec
adcb
dec
add
icebp
jno
pop
pusha
stos
aas
aam
out
int3
xchg
pop
mov
test
xor
out
adc
dec
and
jo
sbb
ss
enter
or
hlt
jmp
xor
adc
xor
cmp
std
lcall
mov
inc
pop
sbb
mov
push
push
repz
sub
and
pop
mov
add
push
lods
adcl
push
test
jmp
inc
in
je
jle
in
sub
repz
fnstsw
fimuls
clc
rorb
dec
insb
lods
jl
jns
jnp
or
and
addb
repnz
stos
add
ds
in
insl
dec
dec
adcb
aad
gs
add
mov
or
sbb
pop
mov
xor
popf
out
pop
push
jmp
loope
inc
movsb
call
pop
dec
cmpsb
lods
add
fadds
push
inc
pushf
dec
scas
push
je
pop
sbb
mov
lcall
test
into
addb
adc
sbb
icebp
jo
pop
cltd
push
pop
mov
fcomp
addb
xchg
xchg
cmpsb
or
cmpsl
stos
ret
sbb
jg
cld
adc
icebp
jo
ja
sbb
add
jae
push
xchg
pop
xchg
adc
xchg
rcrl
push
push
pop
push
mov
mov
aam
add
mov
ret
adc
fsubl
fstpt
sbb
xchg
sbb
cmp
xchg
push
pmulhw
aas
lea
cmpsl
mov
repz
xor
dec
icebp
sub
sub
ret
pop
repz
jmp
pop
mov
xor
ljmp
movsl
lahf
jno
test
push
std
scas
and
cmp
call
in
mov
int
int3
stc
mov
add
adc
inc
sub
cmpsb
sub
and
add
adc
es
mov
iret
cmp
mov
sbb
in
and
push
insl
inc
and
scas
cltd
or
mov
jle
lahf
mov
es
mov
in
leave
and
or
mov
mov
dec
mov
pop
lods
stc
xchg
jmp
xchg
lods
cmp
dec
xor
mov
pop
xlat
fisttpl
dec
dec
push
mov
adc
add
pop
cmp
jns
lcall
lds
cld
nop
and
cmp
xchg
ljmp
in
mov
call
icebp
jne
bound
jns
fsubs
jno
out
lods
mov
push
xor
push
or
icebp
jae
dec
inc
push
mov
push
dec
aam
in
decb
cmp
jge
shlb
sbb
xchg
pop
ljmp
add
sub
out
mov
in
push
loopne
push
add
jmp
ficompl
push
test
aas
jg
stos
or
mov
sub
movsb
add
scas
cld
rorb
scas
cld
lea
sbb
add
cld
cmp
cld
clc
inc
lods
sub
imul
mov
mov
and
jo
cmp
cmpsl
aaa
add
mov
inc
mov
cwtl
xor
data16
cltd
loope
mov
insl
into
in
xchg
pop
cld
stos
leave
out
push
add
fwait
hlt
jae
push
and
push
ljmp
inc
dec
insb
ja
xor
dec
lret
clc
pop
pop
mov
mov
xchg
xchg
aad
out
aam
scas
add
xchg
ds
test
or
inc
orl
int3
icebp
and
or
repnz
call
js
fidivrl
sub
push
fildl
popa
scas
jno
les
rolb
push
jp
cmpsb
mov
js
incb
repnz
push
pop
out
shr
xchg
repnz
jmp
aaa
test
sub
leave
cmp
out
or
pop
pop
es
lods
xor
push
cmpl
jns
cmp
fucomp
cmc
in
pop
mov
scas
xchg
fistps
push
iret
adc
push
mov
xchg
add
inc
jl
mov
lret
push
xchg
xchg
push
cmpl
mov
dec
sbb
sub
mov
mov
mov
push
lock
push
jge
std
ret
test
mov
cmp
pushf
sub
mov
dec
ror
imul
or
leave
ja
nop
in
outsb
adc
jo
and
sub
pop
pop
jmp
inc
ja
testb
push
push
ss
pop
pop
sbb
sbb
test
and
arpl
mov
mov
xchg
in
fcmovbe
insb
adc
orb
xor
aas
mov
lret
jge
xor
cmp
xchg
cmp
sbb
mov
dec
push
rolb
jecxz
out
mov
push
cld
jmp
loop
sti
add
xorl
mov
repz
add
sub
mov
add
pop
add
push
test
push
test
arpl
xor
rorl
fs
dec
pop
dec
mov
adc
mov
insl
mov
sub
std
pop
andb
xchg
or
sbbb
pop
test
xchg
add
mov
int3
push
js
mov
imul
dec
sahf
pop
mov
cmp
dec
fwait
dec
or
lahf
outsb
mov
notb
inc
inc
push
mov
cmc
and
cmp
cmpsl
popf
fs
js
xchg
ss
cwtl
pop
cmc
out
jo
xor
aas
xchg
mov
mov
dec
subl
and
lds
sti
ret
and
negb
xor
shlb
dec
cmp
sti
insb
scas
shr
movsb
cli
dec
pop
ss
es
lret
hlt
push
cli
rclb
in
cli
adc
cs
sub
sarl
imul
xor
jge
mov
cmp
jnp
repz
push
pop
add
mov
sbb
dec
jb
jp
mov
je
pop
fdivs
sbb
xchg
pop
jg
push
ds
fsubrs
loope
std
outsl
aad
xorl
lcall
xchg
gs
add
push
push
aam
pop
sarl
outsb
xchg
push
in
sar
inc
mov
pop
std
in
pop
jne
pop
adc
out
cmpsl
jbe
pop
in
xor
loop
imul
cmp
int3
cltd
mov
cmpsb
nop
mov
ror
sti
test
fs
sub
jmp
dec
cmpsb
jle
mov
mov
push
xor
pusha
sbb
mov
testl
inc
sub
inc
imul
mov
repnz
mov
lock
in
repz
xor
leave
xchg
push
out
mov
adc
jns
out
mov
push
dec
jl
in
push
mov
and
add
or
dec
xor
inc
jbe
cltd
lock
sahf
xchg
sbb
xchg
dec
add
ret
mov
adc
stos
push
xchg
out
lcall
xlat
out
cmp
aad
or
push
shrb
adc
mov
jno
ja
cltd
adc
push
inc
gs
in
xchg
lahf
xchg
mov
push
add
ret
sub
ja
mov
adc
xchg
jns
pop
cltd
xchg
push
xchg
int
xchg
ljmp
jno
sti
xchg
xchg
mov
pop
cmp
daa
out
test
mov
push
bound
xorb
stc
mov
push
fildl
and
and
loopne
inc
fs
xor
mov
adc
aas
xchg
lea
icebp
mov
ljmp
inc
jp
in
cmpsl
int3
cmp
lret
jae
loopne
imul
xlat
dec
pop
cmp
pop
pop
mov
xlat
fwait
xor
fisubrl
mov
jge
js
pushf
je
int
xchg
pop
and
jno
es
fs
aam
jge
lock
clc
ljmp
xor
cmp
or
mov
cli
and
push
fs
dec
push
push
loop
mov
popf
testb
test
lock
jg
inc
xor
sub
fistpll
sti
aas
pop
iret
xchg
push
add
lods
push
mov
push
xchg
push
sub
sbb
xor
push
fdiv
sub
fcom
rcll
stos
inc
add
pop
and
mov
sub
lock
xor
xchg
ficoms
sub
push
mov
or
inc
jno
mov
stos
cmpsl
jg
mov
enter
push
clc
bound
sub
popa
cmp
popl
mov
jl
fidivl
test
cmc
push
inc
lahf
mov
adc
mov
test
in
add
ss
push
mov
mov
scas
js
call
lahf
lock
ficompl
lock
std
aas
ficoms
push
popa
jle
int3
mov
xor
pop
cli
pushf
sbb
pop
add
ja
jns
inc
jle
arpl
push
fisubrl
sbb
out
mov
ret
icebp
cwtl
sub
xor
es
inc
xor
mov
stos
std
scas
mov
out
xorl
push
xchg
out
scas
into
fs
push
cmc
ret
ds
mov
imul
fsts
sbb
xchg
nop
or
xor
dec
or
insb
lret
add
stc
cli
mov
mov
xchg
pop
fsubrs
push
jmp
push
lods
jge
push
pop
loope
sub
and
pop
out
push
and
pop
sub
pop
fmull
outsb
xchg
mov
das
lods
xchg
xchg
dec
xorb
xchg
test
xchg
cmp
fisttpll
shlb
inc
bound
in
add
pop
inc
jae
fnstcw
jmp
fildll
into
or
repz
scas
ds
ja
dec
or
sub
bound
or
insb
lock
xor
outsl
add
repz
outsb
inc
add
sub
xchg
lea
or
or
mov
dec
cmp
cmp
jl
mov
lcall
xchg
inc
bound
fistpll
cmp
mov
mov
and
push
sub
xchg
push
ret
sbb
stos
cmp
jno
rclb
sbb
stos
pop
pop
popf
sbb
push
jg
gs
les
pop
dec
mov
les
xor
mov
pop
cmp
push
push
mov
hlt
leave
cmp
movsl
xchg
divl
inc
sbb
push
cmp
sub
lea
sti
adc
mov
push
out
daa
jnp
iret
inc
lods
cltd
std
lret
scas
mov
add
or
adc
lret
jae
into
in
mov
and
sbb
mov
jmp
in
xor
cmovg
ljmp
jo
dec
fldt
insb
inc
mov
and
add
adc
jge
fdivrp
pop
das
and
ljmp
imul
bound
insb
push
xor
sbb
nop
xor
icebp
sbb
pop
idivb
and
or
out
inc
add
mov
inc
cmpsl
cmp
and
and
sbb
bound
cmp
aaa
leave
mov
test
push
pop
adc
lret
or
inc
dec
push
lret
int3
mov
sbb
mov
and
ljmp
pop
jno
ljmp
mov
aam
jo
clc
dec
sahf
dec
mov
aaa
xchg
lods
out
jbe
xchg
xchg
push
test
inc
push
add
subb
and
rep
adc
addb
loop
mov
xchg
push
inc
sub
cmpsl
popa
inc
fs
insb
push
ds
dec
sub
cmp
fsubl
jno
sbb
faddl
push
xchg
int
cmc
ror
lret
inc
shr
clc
cs
pop
arpl
in
ffreep
xor
and
stos
insl
lea
gs
pop
jmp
pusha
pop
mov
out
inc
std
mov
dec
xchg
gs
sub
into
lock
daa
jno
add
rcl
push
add
pop
out
std
mov
es
add
mov
gs
push
lods
adc
add
xchg
in
mov
xchg
fwait
das
xor
iret
insl
inc
pop
and
adc
add
mov
vmread
in
jl
inc
lahf
lea
jmp
sub
jl
mov
push
mov
mov
in
aas
mov
cmp
enter
dec
int3
test
sbb
jmp
shrb
sub
and
movsl
mov
in
mov
cmp
dec
cmp
mov
mov
cltd
jbe
cmp
mov
push
xchg
popf
push
sbb
stos
les
stos
pusha
cli
lods
add
cmpsl
movsl
fwait
jl
cmp
mov
mov
jp
and
jb
xchg
lret
out
arpl
mov
outsl
rclb
sub
xchg
mov
mov
adc
pop
mov
add
xchg
mov
inc
stos
push
xchg
sti
jne
hlt
dec
loopne
inc
insb
dec
ret
cmp
push
mov
push
push
imul
movsb
push
jg
insb
and
lcall
popf
adc
inc
jne
stc
jecxz
insl
lret
jp
outsl
pop
xchg
add
stos
sbb
stos
out
rclb
push
add
mov
es
js
lret
push
pop
push
ret
clc
adc
cmp
sbb
movsb
mov
xlat
cmp
inc
lea
xor
dec
adcb
ds
jle
xchg
inc
movl
add
ret
mov
xchg
js
and
mov
add
decl
out
lds
cld
inc
and
dec
jne
xchg
pushf
sub
adc
xchg
mov
scas
jle
inc
sbb
fldenv
loopne
in
cltd
pop
aam
cmp
sahf
mov
inc
mov
clc
sbbb
sbb
daa
xlat
orb
stos
inc
jns
dec
or
rorb
pop
ljmp
mov
scas
lea
adc
clc
aas
and
fcmove
push
cs
shlb
loop
sti
ret
sahf
inc
push
bnd
shlb
cs
sbb
add
iret
add
push
outsl
pop
hlt
pop
lds
xor
jo
iret
cmc
inc
imul
clc
or
dec
jecxz
xor
sub
mov
adc
inc
cli
push
and
mov
add
fisubrl
aas
in
imul
inc
std
lahf
test
mov
xor
imul
lahf
gs
sbb
xchg
jbe
cmp
arpl
cmp
jg
ret
leave
inc
shrl
imul
dec
xor
lock
pushf
stc
xchg
pop
ret
adc
adcb
or
push
pop
mov
test
loop
mov
cmp
cli
inc
xchg
leave
out
adc
cmpsb
sti
xchg
ja
cwtl
cld
dec
popf
cld
pop
xor
fidivrs
fsubrp
inc
push
jne
iret
lock
pop
push
jnp
cltd
sarl
int3
nop
es
push
add
js
fisttpl
xchg
rcll
and
test
or
lret
mov
adc
mov
pop
push
pushf
int3
aam
cmpsb
xlat
test
cwtl
cmp
out
xor
sub
shll
cli
fdivrs
ds
ret
es
mov
dec
pop
mov
pushf
jns
pop
scas
inc
ss
inc
test
repnz
pop
loope
bswap
mov
dec
xchg
bnd
sbb
lds
pop
repnz
loop
or
movsl
mov
inc
cld
nop
rcl
add
das
stos
push
outsb
mov
push
mov
movsl
jecxz
insl
sub
dec
xor
dec
cs
leave
pop
fwait
mov
jb
cs
mov
pop
inc
fmul
mov
dec
inc
xor
mov
ficompl
sub
test
cmp
sbb
mov
divb
sub
rcll
cmp
stos
addr16
mov
les
insb
fsubr
inc
mov
xchg
lea
dec
push
jmp
and
les
xor
inc
inc
pop
mov
arpl
cmp
add
insl
add
xor
fisttpll
fstpl
iret
xlat
daa
and
mov
in
cli
push
pushf
adc
inc
pop
cli
mov
xchg
xor
cmc
xchg
aaa
or
cli
mov
aas
push
in
mov
ljmp
stc
leave
call
nop
xor
cmp
push
sbb
mov
push
pop
ljmp
in
scas
xlat
inc
js
jle
cmpsl
adc
int3
int3
rcrb
mov
cmp
push
movsb
jbe
push
pop
jnp
lds
sbb
nop
push
cvttps2pi
jne
cwtl
mov
movsb
dec
xchg
leave
mov
insl
les
dec
inc
jne
je
push
fistl
lods
pop
push
add
cmpsl
jl
aad
adc
mov
add
mov
sbb
cmp
hlt
jl
ds
mov
jmp
dec
shlb
cmp
pusha
incb
mov
xchg
incb
sbb
ljmp
inc
pop
cmc
lea
push
mov
mov
cmp
pop
mov
shrb
mov
addl
fwait
icebp
rcr
scas
push
dec
ret
sub
je
mov
mov
dec
je
dec
leave
leave
cmpsb
cmp
aam
arpl
lret
xchg
jno
xchg
jmp
repz
jmp
ret
push
mov
sbb
mov
mov
cmc
clc
clc
push
push
rcl
xor
loopne
mov
stos
sub
pusha
call
mov
popa
dec
mov
add
arpl
mov
in
sbb
jnp
cmc
jp
iret
push
stos
arpl
adc
xchg
test
ss
mov
adc
adc
movsl
or
mov
fcoml
in
adc
pop
mov
cltd
xchg
and
ljmp
stos
inc
loope
mov
lea
aaa
mov
inc
test
imul
in
out
imul
cmpsb
call
dec
mov
cli
push
repz
scas
pop
data16
ljmp
lea
jmp
adc
das
mov
xchg
cmp
out
outsb
jle
aaa
rorb
ret
adc
sub
push
daa
add
popa
ljmp
push
in
repz
sub
ficoml
out
aas
aas
ja
xchg
jl
insb
daa
xor
cmp
outsb
lcall
jo
std
xor
lock
lods
pop
push
cmpsl
daa
je
cmc
into
scas
movsb
cltd
fstps
pop
and
adc
aad
adc
iret
jno
dec
mov
pop
insl
loop
mov
std
subb
cmp
mov
iret
xlat
xchg
fstp
mov
cmpsl
push
and
mov
mov
mov
xor
pop
loope
jb
loopne
fildll
aas
lea
je
jg
popw
test
or
jle
shrl
repz
dec
roll
les
pop
popl
adc
adc
repnz
mov
stos
add
std
jnp
sub
mov
cmp
ja
jnp
sbb
mov
loopne
inc
push
dec
or
push
mov
pusha
pop
or
dec
mov
jmp
push
sbb
sbb
adc
xor
and
inc
fsubp
push
fisttpl
iret
jbe
out
icebp
sub
jg
jne
pop
lods
adc
lret
loopne
popa
in
mov
jg
pushf
push
dec
dec
jb
scas
pop
scas
stos
or
jbe
jo
mov
mov
pop
jb
jo
adc
xor
sub
cmp
pushf
and
loopne
fisubrs
sbb
sbb
or
push
mov
mov
cmc
jle
ret
adc
and
in
popa
subb
or
stos
and
dec
push
and
sbb
sbb
mov
adc
int3
push
cmc
or
divb
add
or
rclb
push
mov
negb
xor
jno
cmp
pop
dec
pusha
insb
and
sbb
es
xlat
mov
dec
sub
jge
mov
out
fistpl
cltd
cmp
mov
mov
fistpl
jg
mov
xchg
dec
sbbl
enter
scas
out
shrb
out
xchg
lds
pop
xchg
rorl
push
repz
sbb
pop
lock
add
xchg
sbb
loop
arpl
mov
add
mov
insl
jmp
lods
gs
shll
stc
outsb
sti
pop
jae
pop
push
in
cmp
xchg
jge
cwtl
xor
pop
sub
pop
and
ja
imul
ss
popf
xchg
xchg
pop
sub
adc
xchg
mov
jecxz
jno
lcall
xchg
pop
ror
jae
push
notb
fst
or
hlt
inc
mov
sbb
dec
adc
test
sub
sarl
pop
sbbl
mov
int3
xor
mov
xchg
clc
fs
icebp
jb
dec
rorb
cmc
orb
jg
and
stc
dec
adc
test
pop
and
push
shl
inc
pop
mov
es
mov
mov
pusha
add
into
int
or
pop
rolb
inc
cld
or
jl
push
lds
and
dec
and
insl
xchg
xchg
mov
fbld
pop
aas
sub
popf
inc
xor
jnp
insb
jp
sarl
mov
fnsave
sahf
nop
mov
test
std
sbb
call
test
pusha
mov
cmp
ret
repz
cs
cs
stos
addl
daa
cmp
das
and
test
mov
dec
fsub
mov
repz
sbb
mov
xor
cmp
adc
lods
mov
cmc
arpl
cld
lods
sbb
call
dec
jno
repnz
add
or
les
ljmp
loopne
in
dec
orl
sub
loope
in
sti
mov
xchg
xor
or
xchg
xor
arpl
xor
lds
dec
inc
stos
cmp
in
insl
push
and
loope
stos
cmp
es
mov
leave
enter
repz
outsl
orl
mov
pop
mov
popf
cmp
fucomi
movsl
mov
inc
push
jecxz
push
pop
outsb
enter
push
mov
adc
jle
ret
enter
scas
mov
lds
outsb
jnp
bound
or
out
mov
insl
mov
inc
jmp
mov
jg
sbb
bswap
gs
push
xor
sbb
aas
repz
rolb
outsl
fld
xchg
inc
push
out
dec
push
movsb
ds
scas
jg
fsub
jbe
subb
wrmsr
fcoms
sub
mov
or
inc
stos
call
shll
cmp
cmp
mov
jnp
fcompl
testb
or
dec
cmpsb
jp
inc
mov
out
inc
js
pop
addl
stc
clc
int
sub
gs
and
dec
pusha
ja
test
ret
orb
mov
dec
cmc
xchg
ljmp
icebp
sub
xchg
popa
roll
mov
test
cld
cwtl
push
cmp
data16
pop
inc
push
les
and
ss
aaa
mov
and
inc
insb
andl
xor
hlt
jae
dec
rcl
pop
popa
stc
xlat
mov
hlt
sbb
mov
js
lea
jmp
xor
sub
aam
in
inc
aad
loop
inc
push
cmp
inc
and
decl
arpl
sti
jo
sarl
dec
mov
test
dec
add
and
add
std
popa
jbe
inc
xchg
and
push
cmpsl
jecxz
jns
pusha
adc
jcxz
pop
push
inc
adc
xor
fisttps
cmp
addr16
out
xchg
lods
xor
scas
jbe
daa
imul
xchg
jae
and
adc
mov
arpl
mov
inc
bt
cmpsb
cwtl
lods
inc
movl
cmp
enter
ret
mov
mov
iret
shrb
mov
adc
add
dec
xlat
pop
push
or
out
jbe
lds
cmp
mov
pmullw
mov
cmp
mov
cmp
enter
idivl
ja
fs
mov
mov
jae
push
lret
adc
dec
cli
int3
xchg
mov
lods
push
cmp
ret
sbb
lret
xchg
lds
pop
lods
inc
adc
test
jbe
mov
clc
sub
xor
mov
inc
xchg
cmp
adc
or
cmp
inc
lret
je
inc
jl
fldl
js
fisubl
xor
sbb
and
sub
pusha
sahf
lahf
push
stos
mov
ss
out
xchg
cmp
cmpsl
xchg
mov
leave
mov
push
fs
inc
lods
es
xchg
push
ds
icebp
push
out
xchg
lea
fcoms
scas
lret
pop
scas
je
frstor
sarl
leave
fdivr
rcrl
js
loope
jp
ja
push
lods
lahf
pushf
push
cli
mov
xor
dec
inc
or
jne
pop
sub
and
xchg
dec
push
pop
xor
cmp
mov
sar
cmp
mov
or
ss
mov
sub
sahf
dec
add
xorl
xor
movsl
cmp
sub
icebp
jbe
outsb
loopne
test
and
addl
push
jle
into
addr16
jae
in
sub
xor
push
idiv
mulps
in
lea
cmpsb
sub
jg
xchg
test
jns
dec
je
jl
jg
jmp
inc
subb
lods
loope
jl
insl
sub
adc
sarb
push
test
int
jae
and
jp
push
jo
mov
repnz
leave
sti
loop
fsubr
and
inc
and
inc
movsb
cmp
scas
dec
std
mov
jge
movsb
and
ds
aam
and
xchg
fstl
mov
xchg
dec
mov
adc
or
xchg
xor
mov
scas
jbe
or
pusha
clc
jecxz
addr16
sub
jecxz
mov
loopne
add
scas
mov
mov
and
cs
fstl
xchg
int3
mov
mov
ja
addr16
pop
cmp
add
cmc
push
test
loop
xchg
mov
sub
aas
lret
push
sbb
call
pop
mov
cmp
stos
add
roll
loope
add
sbb
aas
jo
enter
push
pop
mulb
fistps
mov
repnz
or
mov
mov
bound
dec
mov
add
mov
pop
stc
mov
and
test
mov
xchg
popa
pop
ret
or
nop
pop
push
in
pusha
test
pushf
les
int3
push
push
mov
jno
jae
pop
rcl
rcrl
sbb
stos
pop
push
rcl
mov
imul
aam
pop
inc
ficomps
shrb
mov
mov
sahf
pushf
test
xor
xchg
push
lock
pop
push
and
popa
mov
jb
cmp
dec
xchg
pop
adc
xchg
push
lods
loopne
divl
cmc
dec
push
mov
cs
mov
stc
push
pop
and
stc
pop
mov
mov
add
sub
mov
sahf
cld
mov
and
xor
jg
mov
inc
shll
sti
cli
cmp
adc
or
mov
push
or
jp
ret
mov
jp
in
mov
sbbb
mov
aaa
mov
insb
or
pop
lock
loop
sub
jns
jnp
or
lea
pop
pop
std
dec
xorb
lret
shlb
jbe
push
jo
outsb
mov
push
int3
scas
mov
enter
sub
test
int3
jl
sub
adc
jge
dec
aas
adc
sbb
xchg
ret
push
mov
or
add
pop
inc
andl
addb
mov
xor
repz
mov
mov
xor
aaa
dec
pop
mov
lret
xor
fld
fwait
popf
jg
sub
insl
ljmp
sbb
out
jno
pop
aas
aaa
jecxz
xor
fdivrl
sub
es
or
xor
xor
rorl
mov
arpl
es
or
lahf
sbb
and
in
pop
leave
jbe
xlat
fcompl
dec
xor
sub
divb
mov
adcb
sbb
sub
xlat
cs
fucomi
adcb
imul
ds
mov
in
pop
adc
rcrb
and
fs
fnstcw
add
mov
mov
repz
rcll
pop
lods
pop
or
mov
xchg
mov
test
lcall
out
fnstcw
inc
xchg
jbe
mov
in
add
ret
fwait
cmpsb
push
or
mov
xor
pop
mov
xor
cmpsb
cmp
add
push
push
test
aam
out
add
xchg
push
mov
shlb
sub
dec
sti
call
jecxz
sbb
into
das
gs
jecxz
adc
shlb
out
lea
mov
lret
pop
into
sti
mov
insb
dec
jns
iret
fcmovbe
std
mov
jne
push
push
pushl
or
push
mov
cmp
lea
fidivl
jb
cmp
sbb
jecxz
test
cmp
sbb
pop
pushf
aas
xchg
mov
aas
pushf
aam
cmp
incl
jno
adcb
cld
mov
in
xchg
stos
or
add
out
push
push
scas
xchg
dec
pop
add
push
in
enter
sbb
andl
dec
pop
cmp
outsb
aam
xor
mov
flds
add
and
aaa
jae
js
call
jge
scas
jp
not
xchg
and
mov
fstl
fwait
fwait
notb
sub
test
or
mov
fstps
mov
pop
imul
in
mov
inc
mov
pusha
lods
pop
mov
push
jne
pop
pop
filds
fcmovne
es
jg
jl
nop
dec
jae
divb
daa
stos
test
and
ss
fwait
inc
xor
ljmp
aas
pop
push
sarl
test
and
punpckhbw
and
adc
pop
nop
pop
add
into
sahf
jecxz
ss
mov
cltd
adc
adc
icebp
jo
shl
test
sbb
int
or
stc
mov
out
das
gs
cmpsl
push
mov
jo
imul
jnp
cmp
pushf
xchg
xchg
xchg
mov
fisubrl
push
mov
loop
sahf
outsb
lds
adc
pop
or
sbb
stc
push
xchg
and
pop
pop
mov
outsl
sub
sarb
and
push
das
lock
jo
outsb
es
jecxz
or
lret
push
mov
xchg
mov
addr16
mov
or
or
adcl
push
adc
cmp
adc
jbe
lcall
bound
rcrb
sub
lcall
push
inc
cmpsl
lock
loop
jmp
test
pushf
rolb
lock
lods
xlat
cld
mov
mull
sub
fisttps
sahf
daa
dec
xchg
dec
into
cs
xor
xor
in
std
bnd
xchg
imul
pop
xchg
sub
xor
data16
xchg
sub
jne
mov
adc
lock
iret
push
add
xchg
add
pop
mov
in
pop
test
out
in
daa
lods
rcr
jg
cmp
aad
rol
nop
dec
ss
insb
dec
push
into
or
test
jb
push
cld
pusha
test
xchg
and
pushf
xor
imul
fildll
jno
pop
stos
sub
test
scas
stc
mov
mov
data16
outsl
fucompp
inc
mov
push
in
test
mov
cmpsl
xchg
push
cs
loope
or
lcall
int
out
jae
add
movsl
pop
leave
pop
mov
inc
das
xchg
movsl
int3
test
sub
cmp
xchg
push
lret
out
xchg
xor
fwait
ds
xchg
ret
xor
sbb
dec
fisubrl
dec
fs
stc
sub
sub
cmpsb
das
data16
cmpsb
daa
int3
lods
pusha
cmp
sarb
mov
nop
dec
test
xchg
outsb
sbb
cmpsb
add
ds
cmp
push
cs
pushf
cmp
cs
dec
push
jbe
jp
dec
xchg
mov
push
out
adc
not
xchg
jl,pn
cwtl
pushf
sarl
xchg
stos
add
pusha
iret
cld
push
jecxz
xchg
push
andb
scas
int3
adc
add
pop
hlt
sbb
cld
lock
jle
push
cmp
push
mul
dec
cmp
jecxz
call
in
test
sbbl
repnz
popa
test
mov
sub
mov
aad
mov
push
or
push
fsubrp
xlat
pop
and
and
lds
sbb
sbb
scas
sub
aad
lahf
lea
ljmp
in
and
push
test
bound
and
in
and
fistpll
xor
xchg
loope
pop
or
mov
ja
andl
fnsave
sti
jmp
call
fsubrl
cmp
enter
loop
push
scas
xor
jmp
add
imul
push
insl
add
mov
out
sbb
inc
enter
fidivl
ss
shlb
adc
xchg
into
stos
leave
jp
pop
lahf
mov
in
bnd
test
enter
and
lods
filds
repz
adc
popf
or
cmp
cmc
test
add
inc
fstpl
pop
sub
popa
mov
ljmp
out
sub
fs
adc
pop
out
icebp
cmc
mov
mulb
inc
fidivl
in
pop
jle
fldenv
arpl
fwait
rcrb
xchg
inc
ja
jo
or
je
sbb
pusha
pop
subb
sbbb
jmp
dec
bound
mov
ja
stos
mov
insb
jb
cmp
or
xchg
fimull
push
sbb
pop
sub
pop
xor
sub
pop
pop
mov
sub
or
fiaddl
in
mov
ds
lret
sahf
mov
fs
pop
xchg
fsubr
ret
divb
adc
mov
insb
inc
ja
lcall
imul
mov
jns
sbbl
test
sub
in
xchg
addr16
push
lds
jnp
cmpsb
and
xchg
scas
bound
ror
mov
mov
sub
lods
mov
mov
pushf
inc
xor
scas
clc
fsubrs
shll
into
push
and
movsbl
je
outsl
sbb
cmp
out
mov
lahf
pop
inc
call
push
mov
or
mov
add
inc
adc
pop
pop
movsb
scas
adcb
mov
push
inc
or
lock
subb
int
iret
dec
bound
xor
cli
mov
cs
adc
xchg
push
in
jae
cwtl
shlb
cmp
scas
sub
xchg
add
mov
xor
es
nopl
pusha
adc
ret
inc
xor
add
dec
ja
in
pusha
sub
xchg
lods
jle
sbbl
mov
jg
test
adc
mov
dec
or
icebp
inc
inc
std
jle
mulb
inc
inc
shrl
cmc
xchg
sbb
add
into
mov
jp
cmp
push
cmc
sbb
xchg
mov
dec
test
es
cmp
xchg
ret
mov
push
push
xchg
sahf
shlb
test
mov
add
fmull
mov
xor
call
jo
in
enter
fdivrl
popf
xor
xchg
repz
jle
cmp
js
shlb
mov
fstpt
and
push
jge
jbe
stc
sbb
paddq
xor
jae
sub
cli
ljmp
push
inc
add
or
adc
ret
ss
jns
cmp
fmull
add
mov
mov
push
sbb
rcrb
movsb
cltd
sbb
jge
aad
pop
clc
add
jnp
movsb
cltd
cwtl
jl
mov
outsl
jae
dec
mov
push
push
lea
inc
fstpt
sub
jb
push
push
xchg
push
push
outsl
int
sub
jle
test
shr
movlps
mov
loopne
test
pop
lret
jmp
cmp
inc
cltd
inc
shrl
imul
xchg
xchg
cwtl
leave
leave
pop
sub
jne
cmp
movsl
xchg
outsb
das
mov
dec
das
jmp
imul
mov
test
addb
dec
negl
in
in
inc
jnp
decl
pop
in
push
call
shld
and
out
cmpsl
inc
jne
fadd
stos
ds
imul
enter
and
repnz
je
pop
push
enter
std
push
lahf
dec
mov
sbb
mov
sahf
dec
add
shrl
lcall
insb
mov
push
dec
sbbb
test
lahf
outsb
push
xor
fisubrl
jb
push
push
ret
daa
xorl
fstps
add
push
imul
jo
add
outsb
add
inc
xchg
loopne
subb
cmp
sbb
clc
push
cmp
inc
fbld
cmpsl
cmp
push
jecxz
jmp
test
adc
add
insl
aas
adc
jecxz
dec
fstpl
imul
ds
incb
maskmovq
idivl
cli
clc
mov
pop
and
mov
sbb
scas
jmp
or
ljmp
pusha
push
jecxz
shlb
imul
loop
and
test
push
ret
or
cmp
mov
pop
mov
and
lret
call
dec
sub
les
xchg
jbe
fisubrl
sub
inc
clc
lret
dec
push
push
repz
and
dec
hlt
or
or
int
mov
aad
jae
shlb
aas
mov
mov
in
out
dec
inc
mov
test
loop
scas
add
cmp
xchg
sub
adc
lods
xor
iret
in
stc
dec
cmp
xlat
arpl
mov
dec
sbb
inc
insb
dec
dec
push
outsl
or
dec
sub
sub
sbb
inc
sub
xchg
insl
in
arpl
mov
lock
mov
addr16
rclb
dec
mov
mov
loop
jecxz
jl
xchg
add
mov
pop
mov
adc
add
mov
xchg
repnz
fs
cld
mov
sub
lods
stos
call
scas
cmp
push
lcall
mov
push
inc
lods
adc
loope
mov
lret
xor
cmp
inc
les
outsb
in
clc
in
ret
jle
dec
adcl
sbb
or
movsl
push
dec
add
subb
jns
cld
or
lret
cmp
sahf
xchg
sub
xchg
xor
cmc
insl
adc
repz
mov
push
icebp
cs
xor
pop
push
fwait
sbb
cmp
mov
jnp
int
sub
scas
cwtl
jae
lret
adc
mov
cli
arpl
dec
loop
adc
dec
xor
cmc
fdivrp
push
xor
fidivl
andl
jle
jge
push
adc
out
icebp
xor
jp
xor
das
neg
jge
adc
mov
pop
mov
xor
ret
push
push
sub
push
xchg
ret
fcomps
out
rorl
fdivrl
jle
dec
sbb
sahf
add
cltd
inc
loope
faddl
xor
jbe
shlb
sub
cld
decl
bound
xchg
adc
adc
dec
call
adc
sbb
lret
cli
inc
popa
outsb
push
mov
loopne
daa
pop
mov
add
dec
jl
sti
je
push
cmp
and
pop
sbb
out
push
and
in
ss
xorb
mov
rclb
sub
lret
lret
cmp
push
mov
mov
pop
inc
xor
push
mov
push
dec
pop
ret
mov
stos
xchg
gs
cmp
push
cltd
ds
mov
add
stc
sbb
in
loopne
nop
data16
adc
and
xchg
fdiv
xor
jnp
jmp
mov
xor
lret
xor
addl
adcb
push
shlb
cs
fdivp
bound
inc
adc
mov
div
pop
sub
mov
jno
jp
popf
sbb
adc
sub
and
xchg
out
movsb
dec
and
inc
jmp
dec
and
icebp
mov
insl
enter
aad
int3
jle
fcoms
mov
sbb
cmp
test
mov
or
pusha
xchg
mov
and
imul
pop
testl
test
add
fsubrl
mov
ja
mov
cmp
mov
dec
cmp
mov
add
add
int
out
imul
push
or
push
push
pop
aad
loopne
lea
imul
push
mov
xchg
out
dec
lods
das
dec
dec
test
push
je
jmp
adc
movsb
jae
les
or
cmpsb
sub
mov
int
not
sbb
mov
imul
addr16
cmp
and
add
outsb
xlat
movsl
insl
add
popa
xchg
lock
mul
jo
push
push
scas
mov
lret
add
movsl
test
mov
sbb
js
loopne
pop
xchg
mov
xchg
add
in
sbb
lret
push
mov
jnp
push
push
arpl
and
out
mov
mov
jl
mov
stc
pop
or
fwait
xchg
fstpl
pop
das
out
dec
pusha
mov
jns
out
xchg
and
sbb
fstps
or
pop
stos
add
dec
dec
insb
fwait
mov
aam
sbbl
or
adc
xchg
jl
mov
lahf
mov
fistps
movsb
les
sub
cmp
lahf
dec
dec
cmpsl
push
arpl
xor
adc
xchg
data16
insl
jge
xchg
fnstsw
scas
cli
sub
mov
mov
mov
out
bound
ljmp
jg
dec
sti
or
jno
hlt
inc
test
dec
das
loop
xorb
inc
sti
movb
mov
stos
and
je
mov
jae
or
test
jne
cmpsb
jo
imul
jg
ljmp
popa
push
push
jmp
mov
cmp
push
mov
mov
pop
jne
adc
lds
pop
aas
and
rcll
mov
add
outsl
pop
stc
hlt
ljmp
sbb
or
pop
dec
jne
das
test
sbb
add
mov
stos
mov
dec
mov
jno
lret
ss
push
fsubrs
je
insl
mov
or
xor
push
or
daa
jo
fisubrl
cmp
lods
cwtl
movsb
out
lods
roll
imul
lea
dec
lods
jle
cmp
and
std
pop
sub
leave
clc
sub
adc
lock
loopne
das
mov
xor
mov
cmp
jmp
or
jle
scas
adc
daa
mov
mov
test
jns
mov
jl
insb
test
lds
xchg
cmpsb
outsb
test
pop
pop
cmc
insl
xchg
test
rcll
shlb
imul
stos
push
lods
cmc
lret
pop
pop
inc
or
add
xchg
fs
test
popf
cmpsl
jmp
in
leave
test
repnz
enter
roll
mov
fisubrl
call
sti
aas
rclb
jns
fcomps
pop
ja
aad
push
add
fldenv
lcall
testl
ljmp
jnp
and
fiaddl
sbb
dec
mov
dec
inc
mov
push
icebp
jb
xchg
pop
out
mov
or
sbb
or
mov
lret
call
bound
vpcmpeqd
add
or
jbe
sar
nop
pop
xchg
lock
packuswb
imul
stc
ljmp
or
xchg
adc
clc
scas
fcmove
mov
decb
int
or
popa
cmp
fisubrs
in
jnp
sbb
inc
leave
jmp
cmp
loope
adc
mov
sbb
dec
dec
lret
sub
or
push
int3
insl
js
add
out
aas
cli
sahf
inc
lahf
inc
sahf
outsl
sub
jo
mov
add
mov
jmp
and
mov
pop
shlb
cmc
fwait
fwait
adc
js
loope
test
inc
jae
or
rcrl
shll
pop
mov
loopne
ds
mov
into
push
mov
add
lods
xchg
mov
dec
xor
inc
mov
adc
addl
xlat
mov
fsubrl
scas
jg
movsl
dec
pop
mov
in
dec
adc
repz
mov
jg
xchg
xlat
jae
mov
mov
ss
adc
cs
inc
mov
adc
movb
notl
push
push
ja
xchg
mov
insb
sbb
out
pop
lahf
lds
sub
sahf
scas
mov
sbb
pop
imul
ret
push
fcompl
adc
inc
jmp
pop
ret
leave
mov
push
push
movb
sbb
movsb
nop
xchg
loopne
ds
mov
adc
fwait
jns
push
bound
and
mov
scas
movsl
push
mov
sbb
into
push
nop
inc
adc
xchg
jnp
inc
test
jnp
inc
movsl
ffreep
imul
lar
lahf
rcl
pop
addr16
outsb
mov
push
ss
xor
xchg
inc
add
sub
clc
or
xor
pop
adc
lods
mov
jg
imul
inc
push
imul
adc
push
addr16
pop
int3
andb
pop
or
mov
shr
movzbl
aaa
pop
pop
int3
inc
loop
jl
std
jle
mov
add
test
sub
sub
push
dec
scas
sub
cmc
inc
mov
popa
push
add
cld
ds
or
xchg
inc
mov
xor
outsl
imul
mov
add
mov
data16
mov
repz
stos
jae
add
sbb
push
in
xchg
sti
lcall
mov
lahf
call
clc
push
mov
cmp
push
add
push
push
mov
ret
inc
xchg
pushl
push
mov
xor
dec
add
ret
cmp
xor
movsb
mov
pop
xchg
ret
cmpsl
xchg
fsubrl
mov
jg
cmpsl
pop
jle
sub
lret
xor
inc
jl
push
cmp
or
mov
std
pop
sbb
push
cmpsb
dec
mov
xor
dec
mov
add
inc
pop
dec
pusha
mov
cmpsb
lret
jmp
lret
cli
lods
cmp
cmp
adc
xchg
inc
push
loope
das
imul
es
jne
test
dec
mov
test
sbb
xchg
das
xchg
inc
adc
mov
leave
push
pop
mov
jle
fdivrs
adc
cmc
sahf
mov
mov
mov
sbb
jle
je
jne
dec
pop
xor
push
popf
adc
std
push
dec
inc
xlat
mov
push
dec
jl
push
xor
fiadds
adc
es
pop
test
pop
rcr
sub
lret
ljmp
mov
dec
xchg
ss
popf
or
out
mov
cmpsb
xchg
lret
sbb
xchg
xchg
hlt
sub
ja
inc
xchg
sbb
cmp
outsl
loopne
mov
add
mov
loope
and
cmovge
xor
cmp
fxch
add
aam
mov
jmp
sub
jl
adc
cld
cmpsl
adc
es
clc
or
pushf
add
and
push
xor
aaa
xlat
sbb
or
std
fstps
mov
addr16
or
enter
aam
dec
fcoml
and
mov
shl
mov
inc
mov
cmp
or
push
outsl
mov
or
shlb
inc
fstl
jnp
test
inc
lret
add
cmp
out
lods
imul
inc
push
sub
scas
push
adc
ret
cmp
loope
nop
xchg
push
fsubs
je
ljmp
xchg
orl
in
popl
test
jp
incb
mov
imul
mov
mov
hlt
aam
cmp
sbb
loopne
pop
dec
cli
outsb
jg
inc
mov
adc
mov
packuswb
dec
ljmp
popa
pop
jecxz
das
outsb
aad
pushf
mov
xchg
jnp
fucomi
mov
push
mov
dec
stc
push
mov
fstpt
add
rorb
sbbl
cmp
mov
adc
cwtl
jl
xor
cmp
mov
or
jp
push
test
lcall
or
push
in
pop
push
stos
addr16
cmp
jg
pop
in
xchg
add
mov
inc
push
inc
pop
mov
push
jnp
repnz
int3
dec
push
lret
push
insl
lods
sub
es
lds
inc
addr16
call
cmp
xchg
inc
lahf
mov
and
rolb
xchg
dec
cmp
std
shr
std
jbe
lcall
adc
shlb
repz
data16
adc
dec
test
repnz
mov
lods
dec
xor
mov
ds
mov
repz
fbld
push
add
into
inc
cmp
sbb
or
orl
clc
jmp
jae
cmp
stc
mov
pop
imul
or
int
leave
jl
mov
int
cmp
lods
stos
jge
adc
jns
popl
sub
mov
cmp
loop
cmc
mov
inc
js
ds
idivl
in
sbb
or
pop
xchg
jae
cmpsb
inc
pop
add
scas
sub
xchg
add
inc
push
xlat
mov
out
cmpl
jb
cltd
xchg
test
test
inc
mov
out
sbb
movsl
lret
stos
popf
cmp
dec
outsl
and
lret
sbb
dec
mov
lret
xchg
adc
out
adc
adc
in
cmpsb
je
cmpsl
and
dec
mov
rorb
outsl
insb
pop
dec
mov
sub
push
jno
repz
les
movsb
cmp
push
or
xchg
xor
mov
mov
je
fnsave
fcoml
mov
imulb
push
add
sbb
xchg
addr16
mov
sub
daa
jle
or
cmpsl
xchg
je
arpl
ljmp
pop
push
bound
pop
mov
enter
frndint
lret
iret
es
sbb
or
fld
mov
cld
sbb
jbe
xchg
or
push
push
jle
mov
add
and
imull
stc
nop
xchg
icebp
and
hlt
mov
jl
inc
mov
out
mov
jg
enter
cmc
jp
fdivrl
xchg
hlt
jo
fidivl
out
add
xor
mov
js
mov
xor
cwtl
xor
cmp
jns
or
in
cli
jmp
nop
dec
stc
add
sti
pop
and
fs
mov
fisubrl
cmp
clc
rol
pop
lods
or
mov
iret
push
sub
sbb
xchg
xor
stos
push
js
mov
or
add
das
ret
pop
outsl
lahf
fidivs
cmp
addb
shll
mov
popa
mov
inc
ret
or
sti
lods
adc
int
pop
xchg
mov
inc
xchg
cmp
lods
mov
test
ror
cs
sbbb
inc
int3
push
mov
sbb
pop
or
lahf
sub
cmp
fisubrl
sbb
aad
or
inc
leave
xor
in
loopne
add
pop
icebp
or
cmp
stos
lods
ficompl
scas
sbb
in
and
push
jo
lods
xchg
xchg
int
mov
or
and
mov
jne
pop
pop
sbb
sbb
inc
cmp
jge
and
xchg
inc
ffreep
iret
int3
adcb
clc
sbb
xor
ss
das
icebp
pop
push
test
push
int3
mov
insb
lcall
pxor
test
lcall
lock
fstps
sbb
sbb
clc
enter
loopne
mov
add
and
cmp
lahf
push
push
lsl
sbb
cmovns
dec
test
mov
mov
pop
les
and
and
xchg
add
mov
scas
push
xor
lds
pop
cli
jne
inc
mov
xchg
jle
idivl
jmp
fs
jb
sti
push
adc
xchg
inc
dec
and
push
mov
inc
and
loop
push
mov
sbbl
test
add
fisubl
inc
sti
les
sahf
dec
or
les
xchg
aad
mov
sbb
push
dec
rcrl
mov
mov
stc
pcmpgtw
xchg
mull
cmp
sbb
rcr
xlat
int3
fadds
rcrb
push
js
adcb
push
nop
jns
and
push
into
inc
pop
xchg
flds
loop
jecxz
push
mull
inc
mov
lret
inc
cs
imul
outsl
bnd
push
outsl
inc
dec
pop
sbb
and
shr
adc
mov
push
loope
xchg
addr16
aam
sahf
out
call
gs
sbb
or
jmp
mov
mov
mov
popa
xor
sbb
add
sbb
adc
push
jl
in
lds
cmp
mov
enter
addb
loopne
pop
mov
testl
sub
dec
loope
xchg
js
and
mov
shlb
push
negl
loop
fnstcw
cltd
jbe
mov
in
xchg
sahf
lods
test
cmpsb
lds
adc
popa
nop
repnz
jle
clc
sti
movsb
or
and
pop
push
out
push
in
push
or
ds
lcall
std
sbb
hlt
xor
test
pop
lret
mov
fcomps
sbb
cld
push
sbb
shrl
jo
xchg
loopne
mov
cltd
inc
divb
xchg
insl
movsl
lcall
or
mov
cld
lds
xchg
insb
cmp
xor
es
mov
add
pop
push
dec
xchg
jl
in
ja
stos
xchg
lods
pop
cld
and
mov
std
mov
mov
fidivl
and
ja
and
push
sub
jmp
popf
bound
data16
add
jo
pop
fmull
movl
lcall
mov
rclb
pop
add
mov
dec
xchg
sub
xor
or
inc
adc
jecxz
pusha
mov
mov
mov
scas
pushf
stc
jb
jecxz
push
arpl
sub
aaa
jnp,pn
scas
iret
mov
or
push
shrb
push
out
jmp
sub
adcl
or
mov
xor
adc
and
int3
sbb
jae
int
push
inc
frstor
mov
or
arpl
fstl
adc
sbb
mov
xchg
add
test
and
and
lds
popl
mov
ret
negb
call
ror
mov
push
add
imul
movsb
lock
fsts
mov
orl
pop
adc
ret
push
mov
xchg
sub
or
repnz
add
or
cmp
aas
ret
ja
mov
jge
push
aam
or
or
inc
enter
adc
sar
vpmulhuw
mov
xchg
adc
sub
in
js
sbb
mov
and
mov
dec
mov
dec
mov
sub
push
xchg
out
dec
es
xchg
jno
mov
loop
push
sub
cmc
add
and
cmp
mov
xchg
jne
out
push
shll
insl
loopne
cli
scas
insb
push
imul
xchg
lret
movsl
popf
mov
jne
cmpl
into
xchg
xchg
mov
lret
dec
enter
mov
cmp
lods
loope
enter
push
push
inc
dec
rolb
xchg
movsb
stc
pop
cmp
inc
mov
in
jl
ja
pop
or
push
dec
dec
mov
inc
inc
je
call
loop
adc
lock
or
sbb
adc
lock
mov
push
int
adc
jg
andl
jnp
cmpsb
loope
ffreep
lods
call
lcall
mov
and
and
cmp
mov
adc
jns
std
push
mov
add
inc
in
jge
test
sbb
inc
mov
mov
xor
jno
mov
dec
ret
shrb
mov
fdiv
out
mov
push
fisttpl
test
es
xchg
mov
xlat
mov
xor
addr16
jne
hlt
cmp
jge
leave
clc
sub
jns
xor
mov
and
clc
stc
das
in
shrl
loopne
mov
and
lods
mov
es
addr16
push
adc
popf
es
inc
cli
cmp
and
aam
or
mov
mov
jbe
cld
pushf
shll
push
addl
sbb
add
rcrb
xor
and
jmp
imul
lahf
cli
xor
addr16
or
and
sbb
sub
test
pop
jmp
outsl
ds
addl
daa
out
aad
add
cld
sbb
dec
jmp
or
ffreep
mov
jp
lahf
test
sub
mov
adc
loope
jp
pop
xchg
icebp
xor
out
xor
or
or
adc
leave
push
pop
mov
lock
mov
stos
dec
push
mov
inc
aaa
jnp
insb
es
and
imul
out
out
test
jg
adc
cmp
stc
jle
mov
adc
pop
sbb
push
cwtl
bound
scas
cmp
out
push
adc
fbstp
sub
fidivrl
cmp
shrl
out
jmp
fmuls
xor
cmpsl
jae
std
fisubrs
pushf
push
aad
mov
inc
pop
cmp
mov
push
test
cmp
xlat
insb
sahf
xchg
pop
mov
inc
mov
adc
jecxz
arpl
sbbl
int3
xchg
cld
cmp
fisttpll
sbb
movsb
mov
sub
pop
push
mov
in
push
test
push
aaa
repnz
test
outsb
xchg
popa
mov
adc
cmpsl
mov
loopne
xchg
xlat
sar
adc
mov
fs
xchg
push
cmp
sbbb
clc
outsb
inc
mov
adc
aad
and
loopne
xlat
push
mov
fwait
aad
shrl
jnp
mov
sbb
pop
or
faddp
pop
sub
jno
scas
in
xchg
scas
out
adc
divb
test
xor
mov
loop
repnz
in
push
pusha
jg
test
lods
out
loope
adc
adc
xchg
shll
fbstp
sbb
sbb
lock
sbb
mov
rcrl
mov
push
xor
fstl
pop
pop
and
daa
cltd
in
repnz
stos
test
inc
stc
mov
pop
pop
push
xchg
scas
push
arpl
dec
mov
es
or
in
jae
jne
std
push
fs
lahf
in
aad
or
cmp
pop
or
cmp
das
sbb
scas
pusha
out
mov
mov
mov
add
lret
out
adc
aad
bound
adc
add
insl
int3
aaa
pusha
out
loope
adc
enter
shlb
lcall
cwtl
sub
mov
add
addr16
add
inc
bound
cmp
push
movsb
pop
sti
pop
adc
loopne
sbb
dec
in
fs
and
pop
lods
xor
add
cs
stos
jae
and
test
adc
jae
jp
dec
sbb
dec
cwtl
jo
sbb
das
test
mov
jbe
xchg
dec
cltd
lock
imul
mov
js
iret
mov
and
sbb
pop
test
mov
jne
mov
cltd
lret
movb
sub
dec
push
pushf
shrb
mov
ja
test
imul
sub
adc
xor
push
or
mov
iret
sti
xchg
mov
inc
testl
enter
adc
pop
ret
outsl
fisubrl
lret
sub
popa
mov
fsubs
rolb
and
pop
cmpsb
scas
cwtl
js
js
sbb
in
pop
scas
and
ljmp
loope
loop
orb
push
and
sbb
hlt
mov
jnp
out
push
cmc
xchg
xor
cld
arpl
or
adc
loop
jmp
cwtl
popa
loope
jmp
mov
push
shl
jg
bound
negb
imul
dec
je
fldenv
aam
mov
mov
xchg
jecxz
sbb
in
inc
stos
add
test
in
andb
and
mov
ror
lret
imul
dec
fnstcw
test
je
or
adc
inc
mov
test
jge
mov
adc
lret
inc
sub
push
sbb
mov
and
movsb
hlt
scas
sar
es
lcall
bound
fstpl
mov
cmpsl
jge
cmp
lods
bound
or
xor
fstl
into
sbb
sub
mov
int3
out
xchg
inc
imul
imul
out
sub
test
jae
popa
pop
mov
popf
sahf
add
add
sarb
lock
lock
mov
inc
push
dec
pop
dec
mov
fistps
stc
into
push
sub
ljmp
push
repz
push
lock
or
cltd
pop
inc
xchg
add
cltd
cli
aam
mov
xor
aaa
pop
add
push
add
je
out
xor
imul
sbb
xor
ret
sbb
cld
jmp
in
xchg
out
fsubrl
in
stos
scas
pushf
test
xchg
scas
jl
or
jmpw
out
pop
jnp
jge
scas
cwtl
and
cwtl
or
data16
fdivs
cmp
adc
dec
push
out
aaa
mov
pop
sbb
cwtl
mov
decl
mov
pop
lods
popf
out
push
sar
ds
xchg
loopne
push
imul
das
pop
xchg
mov
out
and
fistpll
nop
fiaddl
fs
cmp
popa
jmp
sub
lret
testl
pop
mov
mov
push
int
adc
add
xchg
clc
scas
mov
mov
mov
std
push
and
push
cli
out
sbb
cmc
iret
lods
ss
aaa
sahf
arpl
dec
cmp
clc
ljmp
in
adc
test
mov
mov
push
aam
rorw
mov
dec
cmc
frstor
mov
xor
push
test
aad
add
jmp
inc
stos
rcrb
fs
cmp
outsl
sub
adc
jl
fstp
aaa
dec
pushf
add
aam
test
add
insl
js
dec
pop
inc
xchg
inc
cli
jae
cmp
shl
mov
xchg
jl,pn
push
jg
push
mov
mov
mov
mov
cli
mov
sbb
int
test
sbb
and
push
rcl
pop
jnp
inc
or
iret
rcl
add
in
and
add
pop
subl
cmp
pop
in
dec
lcall
fstpt
js
out
test
les
fiadds
movsl
add
push
and
adc
dec
and
fs
dec
jle
dec
sti
incl
cs
roll
pop
movsl
lret
jns
jo
enter
imul
dec
sahf
sub
aad
out
xchg
dec
outsl
mov
or
mov
shrb
or
push
push
movb
or
jg
cmpsb
xchg
pop
lods
jecxz
dec
out
int
into
push
shll
sti
mov
std
inc
test
cmpl
mov
inc
jmp
dec
or
or
cvtpi2ps
test
jp
mov
lods
xchg
inc
xchg
mov
xchg
arpl
nop
jg
inc
mov
jns
test
jbe
dec
pushf
jmp
stc
or
pop
jb
into
cmp
imull
cmp
cmc
cmp
add
push
jo
clc
adc
fcmovbe
lret
push
arpl
add
push
test
fstp
icebp
dec
mov
insb
cmp
int
ja
xchg
ljmp
inc
popf
or
das
xlat
xlat
or
sti
faddl
dec
cwtl
dec
cltd
inc
fld
sbb
inc
int
out
xchg
cwtl
pop
jmp
imul
xor
jmp
cwtl
bt
mov
xor
daa
or
push
cwtl
xor
clc
xor
arpl
dec
xchg
xor
push
addl
adc
iret
iret
add
mov
aas
std
pop
push
addb
or
cmp
pop
lock
add
cld
jge
adcb
add
sbb
mov
cmpsl
mov
filds
hlt
stc
mov
push
je
movsl
add
sub
or
or
lret
lahf
hlt
stos
lea
cmp
or
cld
lods
jno
sbb
inc
shrb
or
mov
je
lahf
je
jns
ret
and
mov
jns
inc
jns
and
mov
jne
lahf
pop
mov
lock
sub
add
in
cmp
hlt
popl
add
cmp
test
add
or
loopne
mov
mov
leave
fcompl
inc
pushf
adc
mov
fmull
in
push
mov
sbb
pop
pop
fs
push
test
rcr
fidivrl
rclb
mov
mov
mov
fildl
inc
add
cld
push
mov
jle
fisubrl
loopne
out
mov
ja
inc
jbe
test
incl
int3
imul
fsubr
fisttpl
mov
mov
into
movsb
mov
xchg
leave
or
clc
and
fs
push
scas
jle
in
imul
jp
cmpsb
push
sub
or
xor
jp
cmp
xlat
enter
cmp
out
xchg
push
inc
jl
dec
cwtl
js
jge
jg
mov
sub
sbb
adc
sarb
fsubrs
push
jo
test
test
jecxz
jo
arpl
jecxz
xor
mov
mov
fsub
and
ja
pushf
mov
dec
adcl
popf
out
xchg
push
or
leave
cld
xorl
or
add
pushf
dec
cmp
aad
scas
div
fdivp
mov
jecxz
in
daa
cltd
mov
push
inc
mov
in
in
mov
cmp
js
cmp
mov
sub
jns
addb
push
ret
movsl
pushf
mov
pop
mov
dec
loope
jbe
test
push
repz
jns
out
jbe
nop
in
insl
adc
jnp
pop
mov
xchg
sbb
and
sbb
stc
lret
sub
push
jb
and
jo
test
ret
mov
scas
push
in
cmc
xor
jg
lods
jb
ds
lea
lods
cmp
insl
pop
mov
xchg
pop
cmc
cmp
or
mov
repnz
repnz
les
cmpsb
cltd
mov
daa
movsl
adc
mov
call
es
mov
mov
bound
out
adc
push
cmp
call
cmp
mov
inc
or
fwait
pop
leave
pop
iret
insl
in
push
ds
nop
pop
mov
pop
mov
out
cmp
mov
adc
mov
push
and
jne
in
jecxz
or
xor
cmp
pop
clc
sarb
mov
mov
pop
dec
cmc
sub
fiaddl
add
pushf
loope
fmull
pop
or
ds
rcll
sti
xlat
test
shl
lcall
dec
mov
dec
mov
int
cmpsl
pushf
xchg
pop
dec
hlt
or
xchg
push
xor
xor
imul
jae
or
add
mov
test
aad
movsl
dec
mov
sti
out
cld
int
adc
cld
inc
adc
ret
pushf
jge
mov
mov
inc
xchg
adc
ret
xchg
push
mov
fdivrs
or
call
push
in
in
xlat
adc
outsl
pusha
icebp
repz
cmp
sub
lret
popf
lods
repnz
mulb
in
or
ret
dec
push
lea
nop
xchg
pop
lahf
mov
popa
mov
xor
lcall
in
leave
xchg
clc
loopne
dec
sti
icebp
lds
popa
pop
aam
sahf
push
scas
int
testb
imul
test
cli
jg
lea
jno
xorl
fstpl
adc
mov
jle
push
mov
ret
cmpsl
jmp
lock
call
and
jge
inc
hlt
in
cmp
jl
sbb
lahf
pop
icebp
and
push
jecxz
jecxz
mov
jns
subl
add
xor
lea
sahf
jmp
jp
outsl
rcrl
dec
jp
push
lods
jb
ss
adc
xchg
or
inc
pop
adc
frstor
cs
fildl
cmp
fidivl
mov
shl
andl
adc
jnp
std
das
jne
arpl
push
fwait
push
xchg
orl
out
arpl
sti
outsl
push
ds
xchg
cltd
mul
pop
pop
sbb
jae
mov
or
lcall
mov
mov
imul
mov
das
ficompl
sub
subl
pushf
xor
test
daa
std
mov
mov
ret
mov
mov
or
lret
push
mov
int
mov
hlt
jg
inc
xchg
fs
nopl
gs
and
loope
cmc
adc
or
cmp
mov
jg
aas
inc
movsl
arpl
sbb
xchg
pusha
nop
lods
and
pop
les
test
and
popf
cmp
push
mov
and
jge
mov
sbb
sarb
inc
fs
inc
inc
repz
inc
inc
inc
sub
movsb
inc
sti
jns
mov
gs
pop
xchg
sub
jne
cs
clc
jne
out
in
push
int
jnp
or
mov
cld
inc
scas
fidivl
push
lods
xchg
add
in
push
add
cmpb
cmpl
movsl
stos
dec
movsl
mov
mov
push
add
push
cmpsl
push
sbb
bound
arpl
clc
std
test
xor
daa
jno
inc
mov
mov
sub
mov
jmp
sahf
popf
push
leave
mov
mov
repz
fsubrs
fisubl
add
sub
lods
dec
xchg
fisttpll
bound
ja
lret
frstor
lcall
cld
push
or
and
sbb
dec
bound
out
pop
shll
repnz
cld
pop
and
sub
xor
or
cmpsb
mov
push
daa
xor
adc
popa
iret
cmp
dec
push
adc
iret
ljmp
je
mov
in
fdivrl
adc
push
sbb
sub
mov
mov
push
sub
dec
loop
and
imul
mov
xchg
fsubrs
das
jae
ret
int
mov
sbb
pop
push
mov
mov
jbe
jecxz
xchg
movb
xor
dec
rcr
imul
push
pop
mov
cs
fstl
jbe
mov
fisttpll
pop
sub
rol
pop
mov
xor
inc
adc
mov
popf
rcll
pop
stc
push
pop
or
in
inc
xor
add
data16
or
inc
and
jb
cmp
add
xor
mov
pop
daa
xlat
jl
cmp
sbb
mov
jp
and
nop
dec
fbld
insl
mov
test
pushf
mov
cmpsb
jmp
or
xchg
xor
push
rcrl
mov
cwtl
clc
popf
into
pop
in
push
lds
add
xchg
cmp
enter
push
outsl
and
dec
mov
dec
xchg
jo
xchg
mov
push
inc
data16
int
pop
enter
sub
push
mov
and
inc
addr16
adc
jmp
jle
nop
inc
sub
jae
inc
outsl
imul
push
xchg
rcrl
push
adc
shll
shl
sarl
cmp
cwtl
pop
xchg
cmp
or
fcmovnu
adc
sbbb
iret
aam
mov
xor
xlat
fadd
fldenv
sub
xchg
pop
mov
shrl
adc
inc
loop
pushf
push
daa
or
imul
push
mov
jno
sbb
jnp
leave
movl
pop
std
jnp
stc
cmp
pop
test
popa
mov
jg
and
mov
test
imul
or
sbb
or
xchg
sbb
inc
mov
add
cmpsl
fadd
cmpsb
fdivl
in
inc
and
mov
fsts
fisttpll
out
sub
add
incl
fildll
fcomp
ljmp
stos
fcmovnb
imulb
xchg
cmp
je
repz
and
mov
cwtl
and
ss
sbb
fdivs
pushf
jno
lods
jno
jp
push
testl
jp
xchg
jne
fld
outsl
pop
inc
push
cmp
xchg
fnstenv
sub
es
popf
std
push
fildl
in
dec
adc
aas
popa
pop
ja
test
sbb
ret
jb
cltd
dec
addr16
testl
sub
cmp
int
jne
fimuls
repz
add
mov
out
or
cwtl
iret
dec
cmpsl
aas
out
push
jno
in
hlt
test
ss
out
std
cmp
adc
add
or
xlat
jnp
xlat
mov
pop
cmp
popa
adc
or
sbb
jbe
mul
xor
xor
loopne
adc
jo
std
test
jno
sbb
les
mov
mov
subl
iret
jbe
xor
mov
aas
js
and
push
pop
lret
jb
adc
sbb
popf
ss
inc
insb
sub
push
test
aam
xor
add
xor
cmpb
push
lret
sbb
and
test
shrl
enter
test
xchg
cmpsl
fisttpl
push
mov
cltd
xor
fsubr
movsb
pop
stos
jmp
mov
inc
repz
or
xchg
shlb
fsubr
lahf
push
lahf
inc
stc
insl
lcall
sub
dec
ret
clc
stos
push
mov
add
aad
sub
ss
in
aas
jo
fstp
fldcw
or
cwtl
or
cmpsl
out
push
or
mov
adc
test
jl
in
push
aam
xchg
lret
push
pop
sbb
in
pop
cmpsl
stos
xchg
ret
add
sbb
jne
out
outsb
es
mov
mov
lods
test
sub
sbb
iret
xchg
cwtl
jb
stos
mov
push
movsb
inc
cmp
das
mov
std
out
pop
lods
lea
cwtl
push
push
outsb
rcr
aaa
mov
ret
xchg
les
stos
xchg
mov
pop
mov
insl
pusha
sarl
scas
adc
jae
shrl
lret
lods
mov
sub
movsl
cmp
xor
fldl
lcall
loope
cmp
sbb
enter
mov
xor
or
jno
push
xor
mov
loop
sbb
imul
or
hlt
sar
mov
dec
lcall
into
push
sub
outsb
out
sub
xor
dec
shll
testb
add
mov
xchg
mov
test
mov
adc
pop
insb
sub
outsl
pop
bound
mov
push
daa
xor
cmp
mov
mov
xchg
stc
xlat
rolb
arpl
pop
lds
cltd
push
cwtl
mov
adc
and
pop
leave
stos
imul
xchg
sbb
xchg
mov
inc
hlt
xchg
lods
jo
pushf
adcl
test
xor
scas
push
push
jp
lods
adc
inc
stos
inc
jno
or
mov
arpl
ss
lock
sahf
repnz
fwait
scas
or
inc
or
push
stos
popf
aas
aas
push
in
lods
mov
or
mov
jnp
sub
and
test
ret
adc
fdivrl
push
push
stos
cmpl
push
xor
outsb
and
pop
out
add
add
loope
lret
cwtl
pop
aad
subl
jmp
jge
call
adcl
dec
lods
stos
pop
lods
cld
push
push
jle
dec
ljmp
pushf
fcoms
clc
leave
popf
or
adc
call
adc
mov
jmp
cld
repnz
pushf
stos
cmpsl
push
add
sbb
inc
mov
cmc
addr16
mov
jle
pusha
jb
fdivp
stc
jbe
loope
or
mov
mov
notl
adc
lock
scas
inc
sub
pop
xchg
jo
test
outsl
adc
hlt
mov
inc
into
gs
not
sub
pop
or
cmpsb
mov
fcoml
lcall
iret
inc
std
jg
pop
dec
inc
daa
or
jnp
cmp
sarb
repz
mov
mov
inc
daa
rolb
insb
xchg
rclb
jge
pusha
aas
cmp
ret
push
jbe
pop
mov
and
xchg
jne
inc
data16
movsl
cmp
lods
adc
inc
negb
outsl
push
inc
mov
push
add
mov
sbb
adc
mov
fildll
inc
jmp
xlat
pop
mov
xchg
cld
insb
pusha
inc
push
and
notb
fwait
sub
data16
popa
mov
jg
popa
push
xchg
jnp
lcall
mov
mov
mov
mov
mov
aas
test
pop
fmuls
push
inc
ficoms
addr16
or
mov
or
scas
mov
mov
in
or
push
or
push
ljmp
mov
pop
sub
and
int3
xchg
sbb
inc
adc
popf
les
or
xchg
mov
call
jecxz
mov
or
pop
jle
and
or
or
rcr
out
cmp
stos
fwait
pop
daa
or
fwait
xchg
arpl
add
imulb
imul
arpl
inc
jo
adc
jno
call
cmc
inc
pop
push
inc
add
mov
jne
push
je
sub
fidivrl
repz
xor
dec
mov
mov
mov
cmp
push
aad
enter
out
fwait
pusha
ja
pop
add
push
or
imul
or
mov
or
dec
push
ljmp
out
ljmp
mov
dec
insl
loopne
mov
add
and
inc
popf
sbb
push
xchg
mov
xchg
lcall
pop
push
xchg
jg
sbb
pop
jp
flds
std
sub
adc
mov
pop
xchg
jge
cltd
das
add
scas
imul
loopne
xchg
divl
sti
lds
and
push
adc
pop
push
mov
cmp
adc
cmpb
insb
mov
cmpsb
js
add
loope
mov
xor
das
mov
fwait
push
lcall
lods
pop
inc
cmpb
or
inc
in
nop
or
fists
fistpll
scas
decb
sbb
pop
ficomps
jg
fiaddl
dec
inc
jne
mov
adc
shr
push
push
sbb
orl
jle
or
xchg
repnz
mov
sub
movsl
xchg
mov
cltd
jle
xlat
shr
jmp
repz
cmc
mov
xchg
lret
loopne
adc
lds
push
mov
shlb
subb
or
cmp
ret
xchg
es
and
test
das
adc
xchg
out
adc
enter
imul
jne
sub
jae
mov
aam
sti
int
mov
mov
mov
mov
mov
rep
pop
clc
in
leave
mov
fcoms
clc
jmp
mov
mov
pop
jg
enter
inc
mov
fcoml
xorl
repz
pushf
shrb
out
sbb
outsb
cli
push
inc
mov
add
jb
pushf
rolb
sbb
mov
aaa
or
fistpll
pop
inc
cmpsb
test
cmc
lea
mov
arpl
frstor
push
cltd
and
dec
imul
sbb
add
ficoms
and
push
or
add
nop
mov
add
cmp
js
mov
fistpl
fimuls
jb
jge
sub
in
cmp
call
imul
push
push
mov
fcmovnbe
les
stos
and
lret
arpl
fidivrl
mov
es
mov
xchg
push
jge
test
test
or
test
pop
inc
jmp
fldcw
sub
arpl
pop
or
push
pop
fdivl
pop
loop
fisttpll
neg
lret
aam
sar
test
insb
mov
clc
cmp
sbb
repz
cmp
mov
dec
add
push
in
push
cmp
sbb
mov
mov
dec
int
jo
push
pushf
sub
and
lcall
dec
xchg
in
sub
in
dec
fcmovne
lcall
push
sbb
adc
pop
fildll
jecxz
push
int
lea
ret
pop
and
insl
sti
push
add
fdivl
loopne
push
out
and
repnz
mov
mov
stc
pop
ret
shlb
pop
fs
pop
mov
popa
pop
mov
fxch
or
adc
clc
mov
scas
mov
xchg
xor
or
xchg
out
pushf
hlt
cmp
shlb
adc
fstpt
inc
repnz
es
dec
xor
dec
in
jns
imul
sub
cwtl
out
or
sar
rol
fstpt
in
lret
pop
imul
sub
jb
int
bt
fcoml
inc
cmp
stos
xorb
aas
int3
mov
jmp
mov
sub
ljmp
sub
outsb
pop
push
movsl
cli
test
sub
icebp
popf
and
iret
sbb
pop
adc
dec
inc
jg
fcompl
sub
pop
push
xchg
shlb
push
mov
std
es
rorb
cmp
in
inc
negl
push
adc
jbe
popa
dec
test
dec
hlt
jg
and
adc
pop
fadds
addr16
iret
dec
inc
loope
sub
add
and
inc
sbb
int
pop
or
outsb
add
popl
decb
mov
pop
in
hlt
scas
shll
dec
lcall
pop
add
jl
aaa
inc
int3
mov
fisubrl
inc
xchg
dec
mov
out
test
mov
push
pushf
icebp
ja
adc
or
jae
test
sub
and
cmp
lods
cmp
push
loop
lds
push
sti
push
and
or
aad
repnz
das
xor
in
mov
fdiv
jecxz
adc
xchg
pop
inc
add
xchg
inc
ficoms
cmp
in
jae
rorl
xchg
sub
je
cli
dec
shr
loop
test
mov
push
mov
adcb
int3
imul
push
arpl
adc
adc
pop
sbb
and
movsl
stos
mov
cltd
mov
xor
popf
push
push
lods
arpl
sbb
and
jecxz
lods
mov
pop
lret
jae
lock
mov
dec
loop
sub
test
push
pushf
leave
mov
or
jno
add
adc
rcll
aaa
dec
ficomps
pusha
mov
sbb
daa
xchg
imull
dec
xchg
arpl
arpl
or
push
ss
lods
dec
and
push
enter
aas
sub
push
sub
in
cmp
outsl
inc
aaa
push
lock
sbb
inc
and
aas
push
add
mov
push
inc
xchg
shl
dec
outsl
filds
mov
sbb
mov
push
mov
adcb
hlt
push
stc
iret
cmc
cmp
es
loope
cmp
popf
mov
push
or
mov
fldt
fistpl
lods
push
push
cli
push
mov
mov
enter
je
iret
inc
aas
lahf
pop
mov
sbb
mov
lcall
jg
sbb
and
aaa
cmpsl
aaa
jns
jbe
xchg
mov
sub
pop
xchg
mov
pop
jno
inc
popw
mov
cmpsl
adc
sub
add
aad
fxch
inc
lock
inc
fisubrs
adc
mov
scas
shlb
movsl
imul
and
scas
into
pop
jl
insl
dec
test
push
push
pushf
pop
imul
inc
mov
and
dec
loop
or
pop
mov
cmpsl
adc
mov
fidivl
xchg
mov
cmpb
js
add
ret
jmp
mov
mov
insb
loope
sub
jl
jecxz
and
jle
mov
xchg
mov
sub
mov
mov
loopne,pt
push
lret
call
push
addl
movsl
mov
loope
fs
ss
xchg
mov
and
xorb
jp
hlt
pop
jg
mov
lods
push
adc
stos
push
out
loope
pushw
inc
xlat
dec
out
xchg
fidivs
fs
mov
jg
add
sahf
add
push
aas
xchg
test
push
sub
ret
aaa
push
dec
rclb
cmp
jle
cltd
lahf
dec
cwtl
popa
fidivs
jg
xor
push
mov
jo
test
nop
lret
and
int
enter
shll
lea
fwait
inc
push
jle
mov
jne
fwait
mov
xchg
mov
push
mov
mov
add
xchg
test
fs
js
pop
fwait
insb
adc
enter
in
mov
push
push
inc
and
imul
mov
enter
dec
ret
cmp
and
mov
mov
jl
stos
push
cmp
clc
push
sub
nop
inc
jnp
scas
in
lahf
neg
dec
lods
cmp
movsb
fdivl
movsl
fidivl
pushf
cs
sti
cmp
sub
and
mov
inc
and
adc
and
add
lods
xchg
rcr
dec
dec
in
neg
pop
mov
ja
jnp
and
daa
mov
lahf
jl
adc
stc
out
and
fildl
imul
inc
mov
movsl
imulb
fcomi
mov
jno
test
mov
and
icebp
andb
hlt
jb
fistpl
mov
add
mov
sub
cmp
divb
int
clc
xor
shll
out
ja
mov
or
ret
adc
jecxz
dec
aaa
inc
push
jmp
sub
out
push
mov
out
pop
mov
les
repz
cmc
mov
xchg
sahf
pop
mov
mov
popf
inc
mov
mov
cmc
outsl
mov
clc
sarb
mov
inc
push
aas
add
in
add
mov
sahf
mov
mov
push
cmp
mov
jbe
dec
iret
pushf
xor
mov
shll
lret
mov
mov
and
fstpt
cmp
or
xor
cmpsb
fidivs
outsl
scas
imul
int
sbb
movsb
cmp
into
shl
mov
cmpsl
movsl
mov
neg
out
mov
cmp
stos
mov
jb
xchg
add
fidivrs
pop
les
xchg
int
fnsave
ss
stc
dec
mov
pop
call
mov
sbb
xlat
jmp
cs
mov
sub
sbb
popa
jmp
push
scas
or
loopne
cmc
lahf
xchg
lods
push
stos
inc
dec
push
dec
xchg
hlt
mov
test
mov
iret
jno
pop
sti
jmp
sbb
arpl
out
data16
out
add
cmp
cltd
fsub
ds
inc
xchg
pop
lret
lret
roll
pop
jbe
fs
jp
mov
add
and
jp
mov
inc
movsb
jge
push
push
jl
mov
adc
outsl
adc
mov
aam
push
or
mov
ret
sub
dec
hlt
mov
pop
pop
dec
shl
cmc
push
addb
sti
popf
and
push
xor
xorb
movsb
dec
push
cmp
jecxz
stc
shl
mov
scas
rol
movsb
mov
out
pusha
into
push
or
rolb
dec
lock
fmuls
pusha
cmc
stos
fcmovnb
pop
push
mov
add
andb
xor
mov
mov
dec
sub
aam
inc
sbb
stos
ret
jge
sar
push
and
sti
cmp
test
bound
gs
popf
xchg
and
mov
pop
out
loopne
cltd
movsb
das
addb
pop
or
mov
mov
dec
inc
test
mov
aam
xor
js
movsl
inc
cmpsl
dec
stos
jns
dec
popf
cwtl
popf
cwtl
xchg
fs
test
push
lods
mov
popa
in
sbb
xchg
cmp
adc
or
hlt
xchg
jb
orl
dec
jno
jb
das
in
sub
and
shll
dec
jl
es
adc
dec
ja
movsl
jnp
testl
sbb
add
in
push
sahf
adc
mov
nopl
lods
xor
imul
inc
add
arpl
fcoml
int3
adc
lods
fadds
fistps
and
lds
dec
and
ljmp
mov
jno
xor
mov
shrb
dec
jnp
aaa
outsl
hlt
in
int
lds
es
mov
decl
or
cwtl
aam
push
in
push
shlb
fxch
or
adc
xchg
and
pop
xchg
adc
mov
push
loopne
pop
cs
jo
or
mov
cld
xlat
inc
sub
fstl
das
push
test
sub
sbb
out
jge
pop
or
mov
sarl
cmp
push
inc
shll
xor
call
push
shll
test
movsb
lcall
add
int3
sbbl
inc
popa
sub
jo
mov
roll
aam
notl
insb
fidivrl
icebp
in
mov
icebp
lahf
movl
mov
enter
mov
bound
enter
sbb
xlat
imul
jnp
pop
dec
lods
mov
mov
mov
add
xchg
scas
loop
scas
js
mov
inc
rcrl
movsl
adcb
mov
adc
gs
pop
inc
sub
test
xor
mov
and
add
xchg
jg
xor
cwtl
int3
dec
xor
inc
cmpsb
in
xchg
mov
in
inc
add
roll
xchg
sarb
push
push
or
scas
mov
cmp
xchg
jle
push
and
adc
xchg
sbb
jle
js
jmp
xor
inc
xor
imul
pushf
aad
pop
add
jnp
or
sbb
loopne
add
clc
test
pop
mov
adc
mov
pop
cli
call
outsl
cmp
daa
test
sbb
mov
or
xlat
sbb
repz
shrb
loope
lea
loope
loop
mov
jmp
sub
jmp
push
rcrl
adc
test
addr16
mov
insb
in
js
adcl
xchg
test
dec
fimull
mov
cltd
or
adc
jnp
inc
and
jl
push
cmp
lret
push
jge
les
xchg
pop
out
add
loopne
dec
cmp
sbb
jbe
push
jno
dec
inc
sahf
jno
mov
mov
dec
stc
mov
mov
fcompl
mov
pop
aas
pop
ds
mov
xchg
out
xor
push
or
mov
loop
mov
hlt
inc
jmp
cltd
and
sub
add
add
aaa
mov
sbb
xchg
jne
les
cwtl
adc
lods
test
jg
xchg
scas
jae
lret
std
sbb
sti
pop
shll
pushf
xchg
cmpsl
into
js
shrb
popf
xor
add
or
and
in
jle
or
mov
adc
out
in
vpor
xorb
push
sti
stos
int
cmp
scas
adc
pusha
fisttps
pushw
loope
inc
sbb
and
mov
insb
arpl
cmp
fidivl
std
test
in
rcll
xchg
xchg
mov
rorb
xchg
iret
sahf
push
xor
xchg
dec
faddl
pop
xchg
ljmp
stos
and
in
mov
adc
js
cmp
test
add
mov
stos
addr16
test
mov
scas
rorl
push
shrb
jp
pop
sub
pop
loopne
mov
lods
rcr
out
dec
mov
and
push
sti
adc
xlat
imulb
lods
cmp
std
mov
push
mov
mov
and
jmp
or
out
aas
push
mov
lods
mov
sbb
push
mov
arpl
scas
or
mov
xchg
sub
xchg
clc
xchg
outsb
or
ljmp
pop
in
cmpsl
or
inc
jle
xor
rcrb
int
adc
push
cmc
sbb
movsb
add
xor
xor
cltd
or
fstl
lds
popa
jge
cmp
in
push
jecxz
out
mov
repz
add
cmp
sbb
sbb
push
cltd
fldt
sub
jl
jg
mov
test
data16
jle
xchg
shr
sbb
fnstenv
and
movsl
int3
insl
idivl
add
inc
jle
xchg
mov
mov
pop
mov
js
imul
xor
aam
outsl
clc
sub
out
or
dec
xor
flds
aam
shlb
outsl
int
or
out
xchg
xor
int3
xchg
sub
mov
and
pop
das
andb
and
pop
mov
jnp
xor
std
add
adcb
sbbl
push
cli
sti
cmc
popf
dec
pop
add
cmpsl
ja
sub
test
lahf
out
stos
popa
fisubrl
mov
in
mul
lahf
add
add
test
or
inc
out
jno
int3
sarl
jbe
push
popa
push
jb
lods
sub
pop
sbb
ljmp
inc
adc
xor
sbb
shr
pop
mov
lea
cli
xchg
xor
repz
js
push
stc
xchg
cmp
leave
call
and
lret
adc
push
jbe
mov
push
push
adc
ret
mov
notl
xor
or
or
cmp
pop
in
sbb
xchg
mov
ds
adc
pushf
xchg
and
pop
mov
nop
xchg
sbb
push
mov
push
adc
adc
iret
fsubrl
push
sub
loope
xchg
lods
arpl
loopne
pop
inc
jg
les
inc
jge
mov
aas
adc
fldt
data16
popf
cmp
cmp
or
xlat
mov
sbb
bound
inc
in
leave
or
mov
xor
mov
push
mov
xlat
xlat
insb
push
pop
sarl
jbe
pop
dec
adc
jb
adc
inc
jg
inc
cmp
pop
adc
outsl
cmp
mov
sub
std
jmp
pop
and
mov
rolb
imul
push
mov
clc
or
daa
mov
xchg
or
mov
or
les
dec
jnp
cmp
gs
iret
out
cli
or
sti
idivl
mov
jnp
add
leave
or
cltd
jns
adc
imul
add
lods
rorb
out
nop
fisubl
mov
jbe
into
shl
hlt
lcall
push
lcall
jnp
mov
leave
or
lcall
lock
scas
fwait
pop
pop
daa
push
loope
dec
jns
stc
fwait
dec
xor
pushf
xor
fcmovu
shrb
and
and
lods
fxam
pushf
cmp
leave
or
sbb
mov
cmpxchg
xchg
sbb
outsb
out
loopne
mov
mov
daa
movsb
and
cmp
push
pusha
jmp
out
jp
inc
sub
jp
popf
pusha
sbb
mov
mov
cli
xlat
in
in
lods
lods
inc
sbb
or
test
lock
fdivp
adc
push
mov
mov
or
jo
xchg
fbld
and
sub
pop
add
add
lcall
adc
mov
or
js
jl
rclb
loopne
pop
testl
inc
hlt
and
orl
ret
mov
pop
fiadds
fdiv
mov
xchg
les
cmc
jp
mov
fucomp
xchg
ret
pop
mov
cld
xchg
xchg
dec
push
pop
daa
xor
mov
xor
adc
inc
mov
sub
xchg
mov
cmp
addb
pop
data16
cli
pop
popa
call
aaa
and
mov
push
or
insl
aaa
cmp
jg
out
daa
inc
mov
push
fs
daa
inc
les
neg
sub
and
jge
xchg
jb
xor
cmp
pop
sub
or
adc
push
xor
add
jb
hlt
xchg
cmp
imul
int
and
clc
imul
stos
sbb
pusha
mov
fadds
adc
out
in
jle
jo
inc
pusha
cmp
jnp
mov
out
cmp
addr16
xchg
stc
test
arpl
jne
inc
add
loopne
dec
mov
jns
mov
jl
mov
test
push
mov
push
outsl
mov
dec
out
xor
ds
add
fsubrl
bound
lods
adc
jo
wbinvd
cs
aaa
arpl
cmp
sbb
lret
nop
imul
lahf
pusha
stc
insb
mov
xlat
mov
jb
or
pop
lods
cmp
and
add
mov
mov
mov
cs
mov
or
stos
into
or
int3
sahf
cmp
lock
call
or
sbb
adc
scas
or
lods
mov
arpl
aas
fidivl
mov
jge
inc
lock
mov
movsl
inc
jo
fdivrs
repz
fistl
inc
sub
push
pop
xchg
js
int
and
dec
stc
fnstenv
insl
orl
call
cmc
in
lret
ror
xchg
rcll
mov
ljmp
lock
nop
and
ret
mov
add
sbbl
jl
decl
out
daa
xor
hlt
mull
lcall
ljmp
dec
test
sahf
or
enter
jbe
imul
or
push
int
pop
insl
cltd
mov
jns
add
jo
xchg
xchg
lds
mov
ja
daa
out
dec
hlt
jmp
movsl
fdivrl
or
jecxz
stc
loop
dec
add
push
fadds
les
dec
inc
imul
leave
bound
or
or
jnp
jb
loope
ret
push
mov
into
xlat
cltd
or
inc
mov
mov
jmp
bound
rorb
test
mov
lcall
pop
add
sbb
pop
mov
jecxz
pop
ret
and
dec
fwait
jge
push
shrb
cmp
fwait
inc
loope
shrd
xchg
mov
jno
loop
insb
mov
lods
testl
adc
xchg
les
push
jns
test
das
mov
incb
incb
ret
sbb
sbb
insb
jno
xchg
mov
push
sbb
jnp
rcll
out
and
sahf
and
adc
mov
dec
fsubs
fsubrs
adc
xor
cld
sub
fidivrl
das
out
sbb
sbb
add
mov
sub
cmp
add
sub
pop
nop
jmp
cmc
xor
fcoml
movsb
dec
mov
popf
mov
scas
imul
jns
jnp
fisubrs
or
lret
incb
and
lods
repz
outsb
fistpl
lock
les
pop
dec
adc
movsb
or
aam
fdivrs
or
rcl
das
jne
pop
cmp
push
imul
mov
movsl
movl
sub
fs
stc
movsl
into
cmp
xchg
push
add
movsl
sbb
in
cmc
add
cmpsb
stc
or
rcl
cmpsb
dec
mov
sub
iret
int3
clc
xchg
xlat
das
scas
leave
pop
inc
lods
sub
push
xchg
mov
mov
testl
iret
mov
pop
imul
and
add
cmp
sbb
xchg
sub
rorl
ret
lret
mov
cmp
data16
int3
stc
dec
push
pop
xor
or
out
dec
add
cmc
and
sub
fcoms
flds
pop
dec
stos
inc
xor
divb
push
iret
mov
ret
sbb
inc
repz
loopne
inc
push
push
xlat
imul
leave
rorb
mov
sub
xchg
rcrb
mov
es
and
imul
mov
cwtl
movsb
dec
mov
out
repnz
pushf
imul
movsb
cmpsb
or
mov
test
pusha
xchg
aam
scas
iret
cmp
sub
pop
in
test
jmp
movb
push
and
mov
clc
into
dec
add
xchg
jnp
xchg
subb
jae
gs
inc
imul
xchg
out
sti
andl
hlt
jp
cwtl
mov
inc
pusha
dec
mov
sub
mov
std
jg
mov
pop
mov
les
mov
sti
xchg
mov
popa
mov
setne
mov
in
popa
test
insl
movsl
mov
movsb
call
inc
jne
push
cmp
push
add
and
mov
sub
out
push
rcr
or
mov
int3
mov
pop
push
adc
in
add
mov
sbb
movsl
dec
aam
or
sub
xlat
mov
shl
push
or
fistl
or
and
cmp
pop
mov
int3
xchg
cs
movsl
ret
in
fldl
mov
push
and
clc
mov
jbe
dec
dec
sbb
mov
ljmp
xor
les
xor
dec
xor
repnz
inc
adc
sti
push
jno
xor
shl
loop
mov
stos
dec
sar
mov
and
loop
add
inc
push
fstl
cltd
xchg
dec
mov
cmpsb
mov
mov
dec
adc
leave
lods
or
fnstcw
mov
push
push
scas
insb
xchg
jg
xchg
scas
je
imul
insb
ret
xorl
sbb
add
dec
test
jmp
out
push
sbb
inc
insl
lds
jecxz
add
pop
je
out
add
fwait
outsl
cmc
mov
xor
std
and
test
into
xchg
std
negl
das
sbb
add
cmp
mov
pop
aaa
inc
and
pop
jl
sbb
push
push
adc
pusha
xchg
mov
adc
fdivs
leave
inc
testb
and
mov
push
push
sub
push
aad
enter
mov
sub
sub
clc
sbb
std
or
in
sub
lods
jmp
fcomip
lods
or
scas
jnp
cmpsb
mov
fwait
addl
push
sti
movsb
mov
cmp
cmp
cmp
and
xchg
jecxz
dec
cmp
xchg
jmp
mov
js
fsubr
or
lahf
loopne
js
movsl
repz
cmp
mov
push
pop
mov
xor
push
jp
rolb
or
mov
nopl
mov
push
sub
sub
rcrl
dec
cmp
or
in
cmp
mov
push
mov
movsb
ss
aam
mov
dec
cmp
imul
push
or
lret
mov
test
inc
stos
jp
push
aaa
imul
fs
outsl
inc
adc
es
mov
jns
lcall
cmp
insl
push
dec
mov
push
jb
cmp
out
in
scas
cld
bound
jb
pop
xchg
xor
stos
iret
or
sub
dec
lret
adc
fdivrp
ja
and
rcrb
add
rcll
xor
dec
push
pushf
pushl
and
or
sbb
mov
cld
dec
scas
test
push
cmp
ret
aam
sbb
push
mov
loop
repnz
sub
jge
sbb
pop
jmp
les
jo
xchg
add
inc
ret
dec
lret
push
and
xchg
pusha
jp
lret
sub
push
push
lea
scas
cmc
cld
out
rclb
addr16
inc
test
cmpsb
cmp
cli
scas
or
in
adc
pop
imul
mov
pop
xor
or
xor
push
imul
popf
std
data16
sbb
repz
cli
pop
jmp
and
cmpsb
jle
scas
jle
mov
inc
dec
push
out
negb
lcall
push
or
sbb
adc
mov
and
jp
in
out
mov
dec
sbb
inc
lods
cmpb
add
int3
fistl
mov
jb
pop
mov
push
lods
popl
mov
add
add
pop
idiv
jae
sub
andl
add
sbb
fcomps
loope
and
push
or
xchg
add
sbb
fists
ljmp
xchg
mov
ficomps
jecxz
cs
xchg
into
xchg
lret
es
mov
gs
imul
rcr
outsb
das
add
loop
and
ja
shlb
daa
lret
hlt
push
dec
lods
ja,pn
mov
sbb
or
mov
lock
jnp
xor
addr16
fdivrs
stos
cmp
lret
imul
in
mov
jb
int3
pop
out
ret
mov
cli
push
sub
jb
orl
add
push
subl
mov
js
xor
sbb
iret
jp
and
orb
enter
xor
push
iret
orl
icebp
adc
jb
movsl
pop
push
outsb
stos
cmpsb
mov
and
daa
pop
subb
out
pushf
xchg
sub
jmp
pop
es
in
inc
dec
mov
mov
or
aaa
xor
lcall
sbbb
shrb
jb
lret
lds
mov
in
in
inc
adc
or
dec
aas
xor
xlat
push
mov
dec
jl
jmp
lods
jl
and
or
mov
inc
sub
pusha
lds
add
shll
jb
mov
adc
sbb
arpl
arpl
out
sbb
out
or
push
mov
push
fdivrl
negb
shlb
popa
adc
dec
jmp
or
std
or
jb
inc
and
push
adc
iret
push
or
pop
imul
call
scas
mov
sbb
xor
out
outsl
jne
subps
and
push
pop
mov
xchg
jne
out
movsl
into
sbb
arpl
xchg
push
push
jmp
mov
or
sbbl
loop
mov
or
shr
sbb
sub
es
add
faddp
inc
cmpsl
mov
inc
lret
inc
in
push
push
jb
cmpsl
add
push
xor
add
mov
cmp
add
lods
pusha
xor
lret
push
pop
inc
subl
jmp
es
jno
jecxz
xchg
jno
add
adc
push
pushf
insb
add
loop
push
and
test
dec
outsb
or
or
mov
lods
out
push
fnstcw
or
out
mov
pop
adc
pushf
xchg
push
in
cmp
arpl
mov
repz
lock
adc
cmp
insb
xor
stos
xor
lahf
sarl
cmp
add
loope
cmpsl
mov
mov
pop
cmpl
inc
or
sub
lahf
pusha
sti
or
lret
je
add
stos
mov
dec
inc
cltd
cmpsb
lret
ror
or
mov
jb
ret
pop
mov
pop
sahf
loop
ljmp
or
dec
and
mov
movb
movsb
mov
xchg
out
inc
inc
pop
or
push
cwtl
push
jns
and
cmpb
xchg
lock
stos
lea
inc
int3
push
add
push
and
sbb
int
mov
or
fmuls
jb
in
int3
adc
push
ja
dec
pusha
mov
fdivrl
loopne
shlb
and
sub
orb
movsb
xchg
jmp
out
add
sub
sub
mov
push
jp
add
cmp
jmp
in
xor
mov
push
movsl
fcompl
or
mov
fcomip
test
lcall
add
sbb
cs
sbb
mov
adc
mov
cwtl
push
int
ficoml
pop
jo
pop
test
add
fiaddl
aad
jl
mov
jmp
fs
cmp
cmp
pop
lods
bound
or
jecxz
scas
test
lods
jne
divl
and
xor
push
mov
sub
jle
mov
mov
in
jg
imul
push
scas
adc
cmpsl
xchg
fsts
or
out
and
negl
add
adc
cmpb
mov
cmc
or
mov
int3
mov
push
inc
fisttps
fcoms
sub
ja
subb
outsl
andl
push
push
jns
lret
cli
sub
fisubs
leave
ljmp
or
jle
fstps
mov
jl
pop
inc
aas
xchg
or
push
inc
fiadds
incl
sub
mov
sti
jg
push
mov
xchg
fs
dec
inc
bound
mov
push
jmp
cmp
push
int
sbb
pop
sub
test
mov
lahf
stos
rcl
push
sarb
orl
xor
sub
out
in
adcb
xchg
sahf
jecxz
jno
out
clc
pop
std
push
cli
and
enter
cmp
mov
outsl
pop
xor
sarb
out
push
lock
shlb
adc
movsl
or
sbb
daa
repz
sbb
aam
mov
int3
int3
inc
jae
js
aaa
scas
imul
cmp
movaps
jmp
jae
dec
push
mov
lcall
cmpsb
jg
mov
hlt
cmp
xchg
inc
mov
and
mov
stos
sub
cmp
les
andl
inc
mov
insl
movl
inc
dec
test
out
mov
js
sbb
mov
shrb
movsb
adc
test
test
mov
xor
mov
cltd
outsl
sarb
in
mov
push
loope
out
leave
jae
scas
and
dec
out
lret
out
je
fistpll
js
adc
js
cmp
push
sti
pop
push
rorb
adc
pop
mov
sbb
add
push
sbb
or
dec
push
ficoml
mov
fimuls
push
push
add
call
aad
push
mov
cld
xchg
aaa
dec
gs
popa
fisubl
stos
mov
aam
popf
cmp
dec
mov
outsb
aad
cld
or
imul
add
xlat
mov
mov
mov
shr
rolb
shlb
aam
ljmp
scas
clc
jo
ds
js
jb
xchg
or
std
mov
aam
adc
jmp
pop
xchg
cmc
and
mov
fdivl
lods
out
daa
aas
mov
push
idivb
push
movsl
fsubp
mov
std
pop
jecxz
push
jge
cmp
pop
xorb
xchg
roll
stc
mov
pop
ret
adc
idiv
xlat
and
les
int
mov
insl
xchg
add
or
stos
xchg
sbb
mov
nop
xor
push
xor
fmuls
lcall
sub
movsb
xchg
je
mov
cmp
xchg
mov
push
sub
jnp
imul
xor
mov
fdivrs
xchg
and
adc
lds
push
and
jbe
and
jecxz
shl
or
jge
fidivrl
mov
xchg
add
inc
xchg
arpl
pop
sub
cmp
adc
sbb
in
ja
rorb
movsl
seta
sub
stos
aaa
mov
sub
pop
xchg
push
jmp
adc
jbe
sbb
sub
ficomps
gs
xchg
sub
scas
ss
decb
cmp
xor
pop
mov
repnz
cs
out
cmc
lock
stos
mov
sbb
negb
sub
or
shl
pop
cld
rorl
xchg
pop
addl
mov
pop
les
dec
sti
pop
add
nop
test
push
test
jae
mov
cmpsb
mov
loope
insl
ds
dec
jl
scas
dec
push
sub
pop
jg
xor
es
jbe
sbbl
sbb
popa
in
repnz
jecxz
ret
mov
inc
repz
stos
mov
ret
and
push
adc
cltd
fsubl
inc
movsb
int
popa
in
mov
mov
data16
loopne
add
aaa
movsl
ret
pop
xor
daa
or
pushf
or
lea
inc
mov
add
add
and
addl
xlat
iret
push
stos
mov
jae
inc
jnp
lods
cld
lret
loop
jno
out
cld
sub
lds
out
les
scas
sub
movsb
mov
cwtl
popa
mov
add
loop
outsl
jbe
mov
xor
jg
pop
adc
inc
shl
ret
xchg
cmc
rcl
fs
clc
add
mov
push
mov
push
das
out
hlt
mov
test
popa
lcall
daa
test
jae
or
mov
loop
fistps
dec
mov
out
sbb
es
ljmp
jmp
push
clc
jb
fs
inc
push
xchg
pop
add
fstpt
ja
cmc
inc
cmp
add
mov
pop
and
xchg
ret
ds
dec
movsb
rcrl
jl
adc
loop
decb
leave
enter
jae,pt
pop
lods
xor
je
cmpsl
push
inc
scas
outsl
fiadds
add
icebp
lahf
cmp
ljmp
mov
lock
fnop
cmc
jecxz
mov
or
add
js
mov
aaa
and
inc
push
fistl
std
fstps
mov
loop
push
lea
arpl
mov
scas
mov
test
mov
add
mov
push
iret
push
call
inc
inc
fwait
imul
jno
add
xchg
or
mov
out
es
cmp
mov
mov
jnp
roll
sub
mov
repz
daa
mulb
inc
push
sub
cmp
inc
xor
aaa
imul
in
push
mov
add
aad
lods
cwtl
push
cmp
push
mov
insl
mov
adc
pop
dec
jg
mov
or
push
leave
mov
or
ret
add
movsl
jb
jecxz
je
movsb
aad
and
mov
enter
ljmp
dec
les
dec
pop
add
arpl
cmc
cltd
daa
sub
leave
mov
lret
mov
push
aam
imul
aas
add
call
ss
inc
popa
push
int
cmp
mov
popf
rcll
sub
rolb
in
push
xchg
out
pop
sahf
mov
iret
mov
je
dec
call
loope
cmp
ljmp
mov
insb
and
dec
xor
pop
jmp
mov
jle
jl
movsb
add
int3
inc
into
subl
pushf
shl
pop
push
fcompl
stc
lret
dec
mov
xor
popf
add
mov
das
aas
jbe
sbb
js
fdivl
jg
or
add
es
out
jns
mov
and
sbb
fwait
cmp
push
enter
xor
cmp
mov
mov
pop
imul
in
or
popa
in
adc
shll
cmp
xchg
in
dec
push
fdivr
ja
mov
pop
pop
mov
aas
jmp
rcll
mov
mov
stos
mov
ja
push
mov
jnp
cmpsl
mov
jecxz
or
ss
repnz
adc
xchg
test
mov
jae
adc
call
add
jge
addr16
dec
sub
fimuls
mov
cmp
xchg
addl
call
xchg
in
inc
aad
std
dec
ret
andl
adc
mov
cwtl
stos
aam
out
imul
fstpt
xor
mov
movsb
sub
insb
jp
mov
test
lea
xor
ss
dec
in
jno
icebp
cs
ja
mov
xor
add
pushf
les
push
sub
add
gs
mov
push
dec
mov
shrl
jl
dec
icebp
inc
addr16
jle
mov
push
or
lea
into
adc
insb
imul
and
scas
fsub
sub
cs
mov
test
mov
es
sbbb
xor
repnz
subl
stos
sub
sub
fisttpll
pop
add
jb
fs
xchg
adc
lea
and
test
fists
scas
or
or
fucomi
pusha
pop
xor
mov
andb
mov
pop
in
bound
outsb
rolb
fdivs
pop
in
mov
jmp
insl
cmp
and
scas
rcll
sub
data16
xchg
mov
pop
mov
aaa
lea
adc
dec
cmp
sahf
mov
fcomps
or
xor
ja
in
and
aaa
fimull
in
mov
imul
test
call
out
or
bound
in
jo
notb
dec
imulb
inc
sub
mov
out
adc
push
jp
mov
repz
mov
sbb
int3
xorl
lret
jns
sub
sbb
cmp
data16
inc
outsb
push
jns
cmp
shll
ret
sbb
xor
inc
and
outsl
rorl
iret
and
mov
sbb
outsb
dec
or
mov
and
mov
sbb
jb
push
push
sarb
pop
insl
jo
add
enter
adc
mov
xor
push
dec
cmp
mov
mov
aam
mov
push
and
js
xchg
pop
dec
pop
jp
or
push
add
push
daa
sub
test
sbb
test
inc
dec
or
jb
adc
xor
scas
mov
cmp
pop
sub
cltd
ret
mov
mov
push
cmp
xor
outsb
aas
js
or
cmp
jp
mov
stos
filds
mov
jg
inc
and
mov
push
and
mov
adc
adc
clc
shlb
pushf
popf
bound
dec
into
push
out
mov
dec
fmuls
add
pop
cmpsb
loop
js
xor
out
imul
je
jmp
cmp
xchg
cmp
call
cmp
jmp
and
ljmp
dec
mov
movsb
fimull
sbbl
push
out
es
sub
sbb
stc
cmpsl
inc
stos
dec
cltd
imul
sub
ja
jp
insl
xor
jns
jecxz
nop
or
push
lahf
or
add
xor
mov
jge,pt
sbb
dec
mov
adc
out
enter
push
jno
dec
leave
test
mov
xchg
xchg
icebp
loope
sbb
test
imul
fsubrl
xor
pop
jnp
das
xchg
std
push
movsl
adc
subl
and
fldt
jae
xor
xchg
push
mov
push
dec
push
jecxz
pop
out
sub
push
sbb
or
mov
cmp
loop
or
cs
and
xchg
pop
test
or
or
add
dec
push
fsubrl
pop
cmpsl
ss
dec
iret
pop
ds
ljmp
cs
fldenv
rol
test
adcl
mov
lret
sub
or
mov
insb
sahf
lods
test
xchg
and
push
imul
loope
pop
adc
ffreep
mov
jge
xor
jae
data16
imulb
sub
lea
push
xor
xchg
lock
int
xor
test
adc
pop
fsts
mov
pop
fs
sbb
push
sub
xor
gs
push
cmp
gs
adc
pop
mov
sub
imul
jo
ds
outsl
fs
mov
in
add
mov
into
or
dec
rcrb
xor
push
in
sbb
dec
inc
push
adc
pmulhw
aad
neg
adc
enter
or
movsb
std
ret
repz
or
xchg
and
mov
std
inc
shlb
lods
xchg
ret
push
dec
in
jmp
and
imul
cmp
hlt
push
pusha
js
mov
mov
out
mov
sbb
pusha
sahf
mov
sub
js
movsb
cltd
mov
jp
rorl
mov
lret
or
into
cmp
fs
test
xchg
mov
jbe
cmp
push
vmovd
sbb
inc
pushf
mov
jae
fnstcw
call
stc
sub
cs
insb
mov
das
or
mov
clc
xchg
dec
cmc
lret
pop
mov
mov
popa
in
addr16
push
fdivp
outsb
adcb
jmp
cltd
mov
or
lds
mov
pushf
fdivrp
mov
mov
data16
pop
or
ficomps
test
std
clc
pop
xor
ffreep
mov
das
iret
push
outsl
lret
mov
icebp
dec
mov
push
clc
jb
xor
jl
int
and
in
sbb
mov
cs
mov
jno
push
stos
cltd
loopne
jo
arpl
xor
sahf
mov
out
stos
pushf
int
add
pop
push
push
mov
dec
addl
daa
ds
aaa
push
shlb
mov
jb
fdivrs
or
mov
insb
fs
or
push
fcomip
adc
data16
movsb
jmp
add
mov
icebp
movsb
in
mov
into
adc
daa
addr16
jecxz
mov
notb
cli
mov
xor
dec
mov
mov
idiv
add
adc
arpl
mov
xor
dec
fs
push
ret
cwtl
xchg
and
mov
and
jo
xchg
sbb
xchg
sbb
aas
jns
pushf
cltd
rcll
push
or
scas
and
les
lret
xchg
lds
or
and
mov
jb
xchg
in
xor
and
je
push
xor
xlat
jmp
test
sbb
pop
fwait
dec
fisttpll
rolb
shrb
push
ds
fsubl
mov
sub
mov
lret
lret
or
xor
incl
pop
stos
lds
lds
mov
cmp
sbb
out
xchg
sub
loope
jno
mov
and
ds
adc
sub
call
cmp
cmp
scas
daa
inc
push
sub
mov
fsubl
push
scas
shr
mov
cmp
xor
push
int
inc
orl
addl
je
popa
adc
leave
xchg
fsubrl
cmp
gs
adc
jmp
imul
movsl
inc
mov
lds
inc
add
add
cli
sbb
xchg
pop
aaa
and
inc
shll
jecxz
lret
mov
jb
out
addr16
mov
dec
mov
xcrypt-ctr
xlat
adc
popa
mov
call
stc
sbb
in
mov
push
in
mov
in
cli
sbb
popa
inc
xchg
stos
and
sahf
xchg
cmp
mov
push
push
push
aaa
cs
and
lods
cmp
aas
lahf
scas
rorb
ja
iret
jne
aam
in
loopne
hlt
insl
mov
add
fmull
pop
push
pop
sbb
jg
ret
xchg
cmpsl
xchg
loop
stos
mov
icebp
lea
lahf
inc
inc
adc
push
pop
insb
mov
adc
mov
push
leave
stos
in
loopne
leave
std
imul
shlb
hlt
in
mov
xor
inc
pop
cli
adc
dec
int
cmp
xor
pop
jbe
negb
lods
cmpsl
sub
cmpsl
xchg
cmp
push
mov
fdivl
sub
incl
js
xchg
in
mov
scas
sub
mov
in
fwait
push
lds
or
imulb
dec
mov
mov
push
and
dec
mov
je
add
pop
jp
data16
lods
out
jp
jmp
cmpsl
inc
popf
jnp
xchg
xor
std
or
pusha
inc
or
punpckhbw
cmpsb
add
test
in
rcrb
pop
ffree
and
out
pop
push
jp
mov
loope
cmp
mov
push
insl
adc
xchg
jle
sbb
or
movsb
xor
pop
mov
lahf
cmp
sarl
testl
lods
sbb
gs
cs
xor
and
and
vmwrite
inc
pop
rcll
pop
xor
lds
ficomps
mov
test
movsb
push
enter
mov
stc
jg
mov
xor
ret
and
out
movsl
lret
sbb
mov
ret
inc
lret
and
xor
data16
rcll
push
xchg
imul
inc
test
xor
jmp
iret
dec
adc
ds
mov
fstpt
adc
jae
imul
subl
stos
in
inc
sahf
daa
ljmp
mov
inc
jmp
push
pusha
nop
cli
aas
insb
mov
pop
insl
jl
jle
push
push
stc
and
sahf
inc
lock
insl
out
les
pop
mov
mov
xchg
lods
inc
or
ljmp
mov
int
sbb
out
mov
lcall
sub
jnp
insb
imul
psadbw
cmpsl
cmpsb
pop
arpl
clc
mov
pop
dec
xchg
mov
fdivs
insl
push
mov
filds
xor
push
xchg
pusha
push
adc
popa
cld
push
loopne
and
mov
lea
fbld
gs
dec
fwait
data16
pop
fimuls
enter
cld
add
mov
add
push
into
push
sbb
ret
enter
ds
rclb
sbb
test
fisubl
dec
and
shr
dec
jns
repz
mov
add
mov
iret
out
mov
seta
adc
mov
popf
sub
push
mov
xchg
push
test
add
inc
pop
mov
inc
mov
push
and
clc
cmp
pop
add
xchg
in
sbb
clc
jp
adc
sub
mov
lret
mov
adc
mov
and
mov
mov
fcoms
and
mov
push
jnp
push
insb
inc
mov
fs
cmp
xchg
pusha
dec
cld
lods
testl
fsts
imul
fsubp
mov
mov
bound
cmp
and
aad
mov
ret
in
aam
mov
inc
ds
ret
ret
push
std
pop
xchg
xchg
cwtl
push
cmp
shlb
pop
lcall
jg
or
cmp
inc
enter
mov
push
mov
cmpsl
xchg
nop
pop
mov
jp
stc
out
cld
jge
push
pusha
out
jl
mov
popf
pop
jmp
aad
lock
mulb
test
popf
or
xor
xchg
loope
push
jbe
fucomp
xchg
sub
xor
xchg
pushf
ret
lret
das
rcll
repnz
repz
and
adc
cli
jl
nop
sbb
mov
inc
add
xchg
and
sahf
cmpsb
adc
xchg
mov
mov
es
mov
sbb
dec
mov
lock
popa
xchg
out
pop
mov
dec
and
stos
out
test
stc
enter
das
and
test
cmp
push
fists
rcll
adc
jb
stos
loop
fdivr
pop
cli
pop
cs
popa
aas
push
cmp
lret
xor
xchg
jbe
movb
nop
or
sub
xlat
mov
insb
mov
or
js
pop
scas
nop
pop
adc
xchg
sub
out
fnstsw
sbb
and
int
or
fwait
cltd
mov
push
scas
xlat
jae
pop
movsb
add
movsb
add
xor
ljmp
testl
inc
jp
or
inc
add
testl
mov
into
in
ss
and
push
icebp
bound
lcall
sub
jp
or
adc
mov
inc
inc
or
pop
and
popf
movsl
xchg
lods
add
xchg
cmpsb
xor
add
pop
cwtl
add
mov
sub
push
xchg
shrb
das
data16
aas
dec
xor
mov
icebp
fadd
sbbl
push
rcrb
imul
add
adc
jnp
jns
xor
cmpsb
in
adc
js
repz
mov
inc
push
cs
mov
sub
popa
shrb
aaa
jl
pop
mov
sub
subl
popa
mov
xchg
mov
jnp
xchg
sub
xchg
stos
das
in
and
in
fcmovnb
cmpl
add
sahf
lahf
add
les
or
ss
popf
pop
out
or
aam
dec
add
mov
ret
out
je
cmp
xor
test
rcrl
ror
jmp
negl
adc
orl
pushf
mov
out
rolb
lock
xor
mov
push
jnp
add
jb
out
mov
inc
mov
cmc
mov
add
unpckhps
shlb
push
and
test
sub
ss
idivb
dec
mov
mov
xor
in
movsl
in
movsl
dec
adc
lea
mov
dec
add
sub
sbb
jae
sbb
xchg
loopne
sbb
xchg
xlat
mov
sbb
dec
jp
inc
daa
mov
jb
jnp
popf
jl
and
sub
fsubr
inc
cvtps2pi
test
cld
fcoml
lock
mov
sbb
sahf
inc
dec
cmpsb
add
push
in
mov
inc
sti
cmp
clc
imul
jb
fsubl
push
xor
fists
dec
jae
fnsave
adc
push
leave
das
repnz
test
jge
fidivrl
push
aam
shrl
aaa
cmp
outsl
fisttpll
jns
loopne
movsl
arpl
arpl
mov
dec
shlb
add
scas
adcb
dec
inc
gs
lret
out
xor
pusha
fstps
nop
mov
pop
cmpb
xor
addr16
fmulp
testb
sub
lock
and
cmp
and
lret
xorl
mov
inc
xchg
push
daa
insl
aad
insl
push
fdivp
lods
cmp
mov
outsb
in
aas
push
add
cltd
cmp
jl
pop
add
popf
loopne
push
stos
mov
lods
lcall
mov
push
rclb
mov
dec
fmull
jmp
mov
xchg
cltd
sbb
or
add
adc
push
scas
dec
int
out
dec
mov
mov
sbbb
loopne
mov
mov
dec
xchg
loopne
insb
pop
jle
mov
xor
jmp
xchg
mov
outsb
pop
jns
sbb
or
out
or
les
gs
jle,pn
jg
or
jno
inc
inc
lods
cmp
pop
push
mov
push
lcall
xor
xchg
sub
jle
jno
iret
xchg
insb
jge
imul
or
lcall
or
pusha
test
daa
nop
data16
enter
fsts
or
push
sub
cltd
xchg
xchg
xor
out
jmp
jg
rcrl
dec
pop
incl
mov
cmpsb
jle
loop
mov
jne
mov
pop
in
pop
push
pushf
enter
stos
add
mov
pop
ds
aam
scas
push
mov
jg
jg
jg
sub
ret
inc
int
test
sbb
or
push
loope
lock
iret
fs
das
loopne
or
jae
repnz
mov
in
and
push
jnp
inc
inc
adc
std
and
adc
dec
bound
push
jnp
and
loope
and
nop
mov
insl
xor
cmpsb
outsb
call
enter
mov
adc
cmpsb
addb
fidivl
xor
stos
mov
jecxz
pop
movsl
in
mov
test
jnp
jge
pop
xchg
out
cmp
je
push
mov
popa
xchg
loop
stos
dec
adc
repz
nop
or
roll
xorl
ds
lds
gs
sti
mov
cmp
ret
push
push
pop
dec
repnz
pop
or
and
mov
fucomi
jecxz
push
sub
push
or
aaa
test
lcall
sahf
mov
lods
nop
pop
inc
mov
sti
mov
mov
clc
sub
inc
sbb
xchg
daa
or
adc
xorb
rcrl
int3
jge
add
jp
loop
cs
cli
aas
fcoml
fnstenv
jnp
pop
cmc
call
mov
mov
inc
mov
lods
aas
push
mov
aad
lock
mov
xor
enter
sbb
xchg
adc
and
push
ljmp
lahf
dec
iret
cmc
in
adc
pop
mov
add
sar
add
dec
pop
cmp
fwait
or
mov
aad
push
inc
pop
sub
dec
sub
pmullw
aad
loop
js
sarl
stos
dec
fwait
sbb
nop
pop
sub
mov
inc
or
lret
shll
repz
ja
in
jp
out
lods
je
shrl
subl
pop
ret
cmp
outsb
pop
or
jle
xchg
out
jp
inc
fcmovu
inc
repz
out
scas
adc
pop
clc
pop
ret
shlb
sub
dec
daa
xlat
sub
sub
enter
cmp
push
lods
xchg
ja
arpl
mov
push
lock
repnz
jne
adc
iret
jb
dec
add
jl
cwtl
idivb
cmpsb
pushf
add
mov
inc
cmp
cmp
rorb
push
fsub
push
xchg
lds
roll
iret
mov
mov
clc
movzwl
sub
pop
outsb
adc
sti
xchg
add
xchg
cltd
cs
sbb
inc
lock
pop
sub
test
mov
cmp
popa
das
adc
pop
faddp
push
orb
jnp
pop
xchg
js
cmp
pop
iret
insb
push
mov
xchg
mov
cmpsl
adc
pop
cmp
das
scas
inc
xchg
push
dec
sbb
pusha
push
sar
dec
cmp
mov
mov
out
sub
nop
push
mov
aas
jge
add
jmp
pushf
gs
dec
test
mov
cmove
in
mov
and
xchg
test
or
movsl
icebp
sub
xor
xchg
fdivrs
shlb
dec
das
flds
xor
sbb
push
xchg
repz
inc
pop
roll
in
adc
fisttpll
sub
add
mov
daa
push
cli
stos
popa
cld
lret
adc
and
test
or
cmp
mov
mov
push
dec
out
out
cmp
fdivs
mov
inc
xchg
mov
push
daa
adc
call
ja
pop
xor
mov
sahf
aas
mov
int3
repnz
int3
div
mov
aam
pop
and
cmpsb
push
mov
scas
inc
xchg
push
cld
ret
lcall
xor
adc
mov
js
daa
mov
nop
dec
in
fstpt
loope
into
jnp
push
test
sub
ja
dec
or
mov
stos
fists
xchg
push
out
xor
sbb
push
shr
xchg
rorl
mov
insl
adc
cltd
xor
pop
push
xchg
test
mov
icebp
or
push
xor
inc
lcall
in
jnp
pop
jp
out
out
sahf
mov
into
ret
add
cmp
cmp
pop
fs
mov
jne
cs
rcl
cmp
pop
xchg
outsl
hlt
adc
mov
pop
pusha
sbb
inc
lahf
push
lcall
cmc
fs
lcall
cmp
add
add
mulb
mov
mov
sbb
jp
inc
lret
xchg
insb
les
clc
je
roll
mov
mov
aad
dec
cmpsb
ror
mov
scas
std
scas
mov
or
push
jne
pop
out
imul
pushf
pop
pop
xchg
repz
add
dec
test
sti
and
pop
push
jl
jmp
or
aaa
nop
lcall
fcom
icebp
movsb
enter
cwtl
bswap
xchg
stc
lcall
xor
scas
xor
mov
push
or
les
xor
xor
in
jns
adc
fwait
cmpsl
mov
jnp
or
sub
add
fdiv
add
in
dec
dec
and
jmp
inc
jnp
sahf
and
in
enter
fucom
push
in
int
hlt
inc
pop
ret
sub
push
pushf
ror
popf
xchg
testl
sub
loope
dec
pop
push
std
ret
jecxz
test
mov
pop
rcll
xor
aam
lock
xor
pop
test
mov
in
push
mov
inc
lock
pop
cmp
lret
pop
mov
sbb
push
mov
adc
lahf
sti
ret
bound
inc
push
jle
sub
test
pop
movsl
or
xchg
pop
sbb
xchg
add
sarl
dec
add
and
rcll
cld
rclb
pop
lcall
mov
shrb
data16
add
add
jns
lds
in
aaa
loope
pop
call
jmp
sbb
int3
hlt
dec
scas
and
int3
jae
out
adc
dec
das
test
pop
stos
and
fstl
fstpl
sbb
inc
dec
scas
aad
pop
ss
sub
pusha
mov
xor
repnz
in
mov
jp
fisttpl
sbb
push
adc
cld
mov
push
loope
pop
test
fsubrs
sahf
imulb
xlat
sub
jo
mov
es
mov
mov
dec
es
push
sbb
dec
dec
mov
xchg
out
daa
ret
leave
nop
sarb
dec
xchg
pop
xchg
or
add
scas
pop
loopne
pusha
adc
sbb
fldenv
shrl
out
jns
stc
sbb
std
xchg
dec
lods
and
rorl
adc
pushl
jns
inc
repz
es
pop
jl
repz
mov
xchg
jl
pop
push
out
xor
sbb
adc
insb
adc
dec
decb
pop
lods
ret
std
add
stos
mov
jb
push
inc
sbb
pop
stos
shll
or
scas
into
movsl
push
adc
mov
lds
push
ret
lcall
lods
pop
clc
add
into
xchg
dec
or
adc
movb
xorb
adc
pushf
sahf
test
aas
les
add
sbb
cmp
and
and
pop
mov
push
rolb
sbb
call
cld
loope
adc
add
sahf
or
jbe
mov
loopne
lods
mov
xor
add
mov
stos
or
pop
movsl
adc
scas
fcomps
cld
and
inc
es
lock
jne
mulb
sbb
pop
xor
cwtl
inc
out
scas
insl
jns
pop
pop
push
or
push
jle
inc
pop
mov
xlat
outsb
mov
dec
mov
rcl
mov
jno
sub
aad
jno
addr16
into
pop
mov
fldcw
call
or
inc
cwtl
dec
sarl
adc
mov
pop
outsb
hlt
mov
rcr
shrb
dec
pushf
or
fbld
push
cmp
movl
dec
lret
mov
add
inc
mov
js
sbb
push
inc
lahf
je
add
test
mov
daa
mov
hlt
adc
or
outsl
in
out
adc
jno
mov
push
daa
jo
cwtl
and
xor
cmp
lock
loop
movsl
jne
push
inc
xor
fwait
inc
imul
js
std
in
and
lods
xor
hlt
cmp
pop
push
cwtl
jmp
and
and
cmp
stc
aaa
lock
xor
push
cmp
dec
pop
jl
les
cld
and
pop
push
popf
sbb
push
stos
mov
aas
xchg
cwtl
mov
les
jmp
fildl
cmc
loope
dec
int3
in
lods
xchg
mov
mov
fwait
out
sbb
nop
jge
stos
jns
sub
std
repz
enter
push
in
out
outsl
adc
arpl
add
enter
push
pop
add
jae
dec
stos
inc
in
push
push
clc
adc
adc
add
lcall
push
sarb
add
mov
sbb
mov
add
inc
fisubl
std
sub
or
jo
adc
outsb
subb
fiadds
in
cmpsl
nop
loope
inc
cmp
xor
out
xchg
dec
clc
stc
xor
sbb
jl
pushf
test
orb
pop
mov
xor
mov
nop
cmp
ja
and
dec
mov
fdivl
in
mov
lret
cs
mov
movsl
inc
and
subl
das
xlat
adc
add
inc
mov
inc
and
mov
pop
push
or
and
mov
pop
test
push
and
or
pushf
pop
cmp
icebp
lock
das
idivb
mov
psubq
xchg
out
cltd
xor
mov
sbb
adc
shlb
jecxz
cmp
xor
clc
aad
xlat
dec
pop
push
push
sbb
mov
mov
dec
cmpsb
mulb
out
in
push
push
pop
cmp
xor
call
data16
add
pop
xlat
std
or
notl
or
jnp
dec
leave
in
iret
jl
xchg
lret
outsb
inc
std
mov
mov
push
push
negl
jp
jp
mov
xchg
sub
pop
jno
repnz
int3
int3
jno
push
pop
and
addb
arpl
cmpsl
pop
test
mov
imul
fs
stos
aad
dec
aaa
imul
cmp
xchg
mov
outsl
andb
jb
addr16
pop
test
inc
inc
int3
mov
push
add
xor
shrl
int
icebp
pop
push
and
mov
xchg
xchg
data16
testl
fldl
in
dec
out
outsb
dec
in
cwtl
cltd
inc
shrl
lods
popa
mov
xchg
js
pop
cltd
push
mov
fs
push
or
insl
fsubrl
stos
jmp
sahf
add
dec
push
jmp
andl
out
aam
jg
std
dec
jae
inc
test
jge
arpl
jae
imul
mov
mov
inc
pop
adc
dec
pop
cmpsl
mov
je
cli
cli
adc
mov
mov
pushf
dec
jae
mov
mov
div
outsl
cmc
fs
jne
push
xchg
adc
mov
xor
cmp
xor
stc
shrb
hlt
mov
lret
outsl
sbb
ret
or
cltd
cmpsb
test
jae
mov
sbb
movsb
and
mov
scas
dec
push
fsubl
or
out
fldl2e
push
mov
jle
lea
mov
enter
stos
daa
xchg
push
push
pop
mov
clc
int3
mov
cld
rolb
add
add
int
jo
rcl
out
in
inc
js
insb
jle
ficomps
xorb
aas
mov
fs
outsl
mov
mov
cwtl
mov
inc
xchg
pop
call
dec
sub
xchg
test
outsb
mov
add
not
lret
aas
das
fadd
mov
sub
repz
scas
fcmovu
mov
mov
iret
and
mov
add
push
pop
inc
lret
mov
movsb
pop
addr16
nop
int
xor
jmp
sbb
xchg
and
movsl
divl
repnz
rclb
aad
or
jb
dec
xchg
xor
push
push
jecxz
adc
mov
mov
lock
mov
mov
sub
loope
ss
jbe
inc
ret
xchg
imul
mov
mov
out
mov
xor
push
or
cltd
or
and
adc
leave
xor
movsl
shr
mov
add
fistpl
fidivrl
ret
mov
into
cmpsb
pop
mov
mov
sbb
les
xchg
ds
push
sub
stos
pop
sbb
or
popa
pop
leave
xor
mov
push
mov
mov
jle
adc
xor
dec
jmp
enter
mov
insl
and
jb
adc
mov
and
xor
push
cmpsb
inc
push
sbb
mov
addb
scas
int
sbb
mov
psubw
pop
js
ret
or
cld
xchg
sub
nop
fdivrp
and
dec
fsubl
mov
js
fcomp
cmp
lods
and
pop
loopne
popa
pop
lahf
mov
test
sub
inc
outsl
mov
hlt
pop
inc
or
mov
mov
popf
bndldx
icebp
cmp
ret
jnp
jnp
insl
lods
sbb
imul
shlb
mov
or
sbb
pop
bound
test
mov
jbe
and
adc
mov
dec
insl
pop
fnsave
repnz
pushw
mov
cs
in
mov
andb
adc
pop
push
hlt
out
popf
xlat
pop
mov
std
add
inc
sub
mov
fsubl
bound
cwtl
ret
push
bound
xchg
daa
popa
xor
fmull
and
lcall
dec
lahf
outsb
or
rorl
mov
scas
adc
lods
test
cld
adc
cmp
sub
scas
int3
mov
or
cmc
xchg
hlt
push
mov
xchg
adc
stos
rolb
test
es
cmpsb
popa
clc
lahf
cmp
xchg
jb
out
adc
mov
movsb
xchg
shl
dec
popa
roll
inc
mov
pop
pop
imulb
pop
imul
push
rcrl
push
jne
push
ss
gs
dec
add
sub
fiaddl
sbb
jl
xor
mov
dec
into
sbb
cmp
bound
push
and
dec
dec
pop
rcrl
mov
sub
fbld
sbb
fdivs
xor
inc
xchg
cmpl
mov
jecxz
jo
push
cmp
mov
lods
sbb
lea
aam
dec
sub
cli
jns
lcall
mov
xor
stc
fwait
pop
or
mov
push
leave
insl
dec
pop
es
jbe
in
dec
push
pushf
jg
cmp
test
mov
les
scas
mov
test
pop
icebp
js
icebp
pop
aam
lock
cmp
std
and
inc
ficoms
mov
sub
mov
out
aam
adc
inc
mov
mov
jl
out
in
lret
mov
and
sbb
push
xchg
adc
jbe
loopne
stc
dec
inc
dec
sub
fs
push
push
add
shl
xlat
cmpsb
mov
enter
shll
mov
mov
imul
jo
fcompl
jo
adc
dec
and
sbb
dec
and
cwtl
imul
sti
sbb
inc
rcl
cmpsb
cltd
push
cmpsl
push
mov
fwait
push
movsb
pop
add
sti
jo
xchg
pusha
aam
out
ds
adc
mov
push
xor
in
arpl
notl
loop
cmp
pushf
movsl
jbe
xchg
out
sti
insb
movsl
xchg
mov
mov
ds
inc
or
sub
fimull
lcall
pop
mov
xchg
mov
pop
mov
pop
push
testl
dec
sub
lea
pop
add
dec
lahf
das
push
pop
or
fimuls
pop
inc
pop
add
push
adc
xlat
aam
pop
lahf
movsl
sbbb
mov
push
push
popa
or
push
cmpsl
mov
xor
inc
aam
pusha
cmpsl
cmp
sahf
aaa
pop
inc
out
out
stos
fbstp
and
loop
ljmp
cli
dec
aaa
dec
cmp
test
mov
lcall
jl
mov
aad
jnp
or
rcr
and
ret
mov
pop
out
sti
pusha
arpl
mov
or
les
fcoml
and
jp
out
xchg
stos
in
mov
fadds
cmp
in
mov
xchg
or
jg
das
ja
inc
mov
dec
test
add
mov
leave
dec
push
adc
adc
insl
pop
push
and
repnz
sbb
pop
mov
ja
cmpsb
std
sahf
and
lea
jnp
or
mov
mov
icebp
sahf
popf
inc
lea
div
mov
xor
rcll
ds
in
jns
mov
sahf
jle
pop
jne
sti
mov
mov
subb
iret
cli
mov
inc
sbb
push
setnp
jae
movsl
dec
mov
dec
xorl
fcomp
fisubrs
out
pop
clc
ljmp
inc
add
clc
repnz
int3
loop,pt
insl
js
inc
stos
add
aas
xor
cmpb
icebp
mov
test
push
out
nop
je
sub
loopne
jae
in
les
sbb
test
inc
mov
hlt
dec
and
mov
out
push
out
or
shll
and
push
mov
dec
fsts
lods
ret
mov
in
pushf
pop
mov
fs
mov
dec
adc
inc
mov
mov
mov
mov
mov
fiaddl
inc
es
or
xchg
mov
sub
push
mov
ret
jmp
scas
push
sub
cmp
clc
fisubs
and
sub
call
fidivl
mov
xchg
scas
es
push
in
xorl
int
cli
mov
pusha
ja
fs
jne
dec
inc
add
cmp
push
pushf
mov
mov
out
js
jbe
sub
sbb
leave
ret
jecxz
mov
outsl
cmp
int
cltd
jp
gs
and
mov
mov
mov
sbbl
ret
rorb
jecxz
ret
jno
xor
out
pop
or
mov
xchg
movsl
jg
repz
jp
cmp
mov
mov
sbb
mov
adc
jle
ljmp
dec
sub
out
out
adc
rorl
jns
sub
scas
xor
mov
mov
out
push
or
xchg
cmp
lds
gs
inc
mov
cmp
movsb
xchg
mov
outsb
test
pop
clc
sbb
jecxz
or
ret
sub
inc
jl
and
pushf
test
leave
mov
mov
mov
xor
xor
fs
sub
sbb
sbb
stos
jns
xchg
lahf
repnz
adc
inc
jb
int3
and
insb
outsl
lea
fnstcw
xchg
movsl
pop
or
les
lcall
sbbl
popa
stos
pop
add
dec
sbb
push
andl
push
dec
aaa
orl
mov
ss
xor
in
push
xor
lods
rcl
insl
mov
pushf
das
aam
sbb
in
mov
dec
jmp
je
fstpl
out
notl
and
and
and
test
add
cli
adcl
inc
dec
inc
decl
test
cmc
sti
mov
daa
int3
lods
inc
or
scas
leave
js
mov
out
testb
jne
popl
pop
pop
incl
addr16
adc
adc
mov
mov
repnz
adc
mov
mov
cmpsl
xchg
popa
sahf
mov
dec
inc
es
push
xor
lea
mov
jecxz
lret
dec
jns
dec
insb
idivb
pop
outsb
and
add
insl
test
int3
ja
jmp
or
jp
jbe
frstor
mov
roll
test
iret
mov
test
stc
pop
pop
xchg
ret
cmc
imul
jnp
mov
inc
out
cs
cmp
xchg
pop
xor
sub
movsl
aam
inc
mov
pushf
pop
popa
in
fists
cld
in
pop
loope
or
pop
iret
xchg
lock
sarl
mov
and
jns
icebp
and
cmp
packuswb
lret
stos
mov
push
mov
mov
add
int
add
imul
fcmovnb
sbb
sbb
aad
jo
pop
inc
jl
cmp
mov
repz
lret
out
mov
repz
mov
mov
jae
jl
inc
and
or
mov
cmp
cmp
out
out
jb
repz
dec
dec
das
in
iret
shlb
xor
sub
lret
test
cmp
adc
inc
sbb
out
and
addr16
pop
pop
push
or
pop
repnz
pop
pop
and
addb
pop
mov
pusha
std
push
mov
push
imul
movsl
mov
sti
movsb
sti
jmp
mov
inc
sub
pop
push
xor
push
ljmp
inc
pushf
pop
xchg
imul
push
or
sub
jb
je
aam
scas
and
xor
xchg
and
lret
pop
sbb
ljmp
push
gs
out
and
hlt
aaa
mov
sbb
inc
add
je
int
cmp
lcall
jl
out
mov
cmp
rclb
aaa
mov
movsl
push
cmp
pop
mov
add
sahf
rorl
cltd
cmp
lea
popf
mov
mov
imul
iret
xor
mov
push
out
outsl
inc
sub
dec
and
je
push
inc
mov
add
lods
fisttps
nop
insl
into
fucomp
xlat
scas
aam
mov
jl
dec
xchg
rorb
inc
sbb
pop
ja
pop
add
mov
arpl
aad
jne
movsb
nop
out
xchg
pop
inc
sbb
test
cmp
stc
mov
sarb
fwait
push
faddp
mov
sub
xchg
xchg
fildll
mov
adc
cld
push
nop
inc
lods
faddl
pop
jp
xor
dec
xor
and
jmp
mov
icebp
inc
outsb
mov
mov
outsl
daa
outsl
mov
sahf
cmp
stos
nop
pop
jnp
int3
ret
loop
mov
add
push
popf
cmpsl
out
push
sub
xchg
rolb
sub
test
sbb
testb
mov
std
add
or
clc
mov
test
repnz
mov
sbb
outsb
in
cmpsl
and
jmp
lret
std
rcrb
push
and
adc
das
out
bound
mov
call
lea
call
stos
sbb
inc
mov
pop
fistl
inc
ret
jge
or
scas
xchg
shll
and
fcoml
and
cli
mov
push
sbb
les
fucomip
mov
hlt
and
xchg
xor
out
adc
test
je
sub
adcl
sub
clc
ds
out
push
jbe,pn
pop
je
xor
push
add
jmp
push
mov
pop
mov
outsb
sub
push
sub
gs
add
sbb
xor
sahf
xchg
stc
xchg
out
mov
call
push
outsb
mov
in
inc
sub
aad
sbb
sub
movsb
and
test
out
jmp
into
mov
outsl
sar
add
mov
and
xor
adc
sbb
mulb
jne
fsubrs
dec
ficompl
cmp
inc
fisttpl
cmp
xor
or
mov
cmp
mov
lahf
add
pop
mov
out
movsb
jne
pop
pushf
in
inc
fwait
push
jp
fs
shll
pusha
into
ficompl
jae
loop
shll
lret
test
iret
in
leave
push
inc
arpl
jnp
orb
inc
push
mov
jno
mov
decb
sbbl
rclb
sarb
cmp
cli
add
dec
call
pop
out
fisttpll
jecxz
pop
add
addr16
stc
push
rcr
scas
mov
enter
push
orb
stos
xor
insl
cmpsl
lods
addl
xor
mov
mov
jle
push
clc
and
insl
enter
orl
push
scas
xchg
bnd
clc
sbb
js
int
dec
mov
fnstenv
outsl
mov
xor
mov
adc
daa
loope
push
rcll
jmp
mov
dec
jb
or
and
lods
and
or
pushf
pop
mov
lret
pop
dec
push
cmp
mov
enter
pop
and
jbe
xchg
js
sti
ja
dec
scas
stos
push
pop
pop
mov
pop
inc
aad
lods
inc
lret
aam
mov
mov
adc
and
pop
xchg
add
jmp
fucomip
mov
xor
sub
mov
leave
stos
bt
vcvttss2si
push
adc
repnz
stos
add
mov
imul
leave
inc
xor
sub
inc
mov
mov
pop
inc
ret
and
mov
enter
mov
xchg
ror
jecxz
sub
jns
js
js
mov
clc
xlat
aad
nop
adc
xchg
cli
add
push
xchg
jnp
cmp
mov
jmp
mov
push
jbe
dec
mov
sub
inc
xchg
stc
ds
scas
mov
das
and
push
cmp
repz
cmp
or
inc
push
adc
andl
enter
push
mov
cmp
jl
push
ret
aam
or
ret
sbb
ret
sub
outsl
int
or
mov
xor
pop
sub
dec
les
cmp
sub
cmp
ret
push
aas
xor
scas
sub
mov
xchg
in
add
or
movsl
sbb
fs
jns
mov
mov
subb
les
ja
sti
inc
pop
push
es
xlat
lret
sbb
rcrl
sarb
cwtl
fldenv
xor
adc
idivb
adcl
out
xor
loop
adc
hlt
mov
sub
jbe
loop
pop
push
push
mov
dec
rorb
xchg
mov
js
std
fmuls
push
movsb
das
leave
push
call
adc
movl
adc
dec
stos
repz
ret
push
xchg
sbb
xorl
mov
repz
rorb
pop
mov
jne
xor
cmpsl
xchg
pusha
mov
mov
scas
and
mov
xor
lret
mov
xchg
add
inc
pop
xchg
cmp
cmovns
mov
push
sbb
fists
lea
mov
out
repnz
gs
stc
insb
outsl
push
in
sbb
pop
dec
out
shrb
fcmovb
js
aaa
shrl
movsl
in
lcall
jo
or
out
or
lods
cmpsl
push
xchg
mov
aam
mov
inc
mov
push
scas
inc
fisubrs
pop
mov
popf
call
hlt
adcb
imul
mov
daa
ret
inc
xor
loopne
mov
shll
idivb
fsubs
mov
ljmp
adc
jbe,pt
push
int3
and
movsl
mov
cwtl
js
pusha
jmp
test
mov
hlt
and
mov
adc
sti
int3
call
sub
jnp
pop
loopne
std
leave
add
cmp
sbb
mov
mov
inc
pop
popf
mov
out
jl
out
sarb
dec
sub
mov
xor
dec
and
mov
addr16
xor
testb
cmpsl
das
leave
or
mov
insb
cmp
mov
inc
or
test
xor
adc
repz
cmovb
push
fbld
dec
sub
mov
arpl
repz
cmpsb
nop
imul
es
dec
out
sub
loop
adc
mov
test
or
sub
adc
outsl
call
jp
xor
movl
sub
fnstcw
fs
inc
push
add
push
es
jmp
xchg
adc
push
lods
mov
mov
stos
enter
mov
adc
pusha
outsl
jb
in
test
mov
push
arpl
cmp
push
or
push
movsb
popf
and
loope
mov
aaa
sbb
ljmp
rorb
and
div
rorl
mov
into
xor
cmp
dec
and
fldcw
aad
sub
insl
adcl
mov
cmpsl
arpl
cmc
mov
cltd
hlt
xor
xchg
inc
cwtl
inc
test
cld
pop
sarb
jo
jb
pop
cmp
xchg
cmp
addr16
push
dec
movsl
incl
mov
jecxz
push
pop
data16
push
xchg
mov
xchg
push
insl
mov
push
mov
jno
and
int3
lds
pop
in
pop
push
mov
pop
push
mov
cs
icebp
sub
mov
mov
dec
pop
push
movsb
stos
mov
cmp
aam
imul
psrlw
xchg
lock
pop
xor
test
push
mov
push
or
les
lods
les
xor
gs
into
adc
jbe
mov
jp
push
imul
je
decl
popa
stc
es
add
iret
sub
lea
sub
insl
pop
popf
mov
addr16
and
or
bound
js
cwtl
sub
cmpsb
js
add
xchg
jecxz
mov
or
idivb
aad
sub
inc
jmp
lods
mov
jge
mov
ss
imul
mov
out
push
into
sbb
sbb
or
ret
jne
adc
add
lods
dec
mov
adc
and
lock
push
sarb
ret
test
enter
dec
icebp
mov
pop
pop
rcrl
scas
adc
or
sbb
push
xor
test
sbb
adc
mov
adc
jno
int3
add
sub
xchg
testb
sub
xchg
jmp
sub
aas
fcomps
jne
shll
repz
pop
xor
pop
pushf
inc
out
cltd
sahf
and
dec
or
sahf
shld
nop
dec
cmpsb
mov
popa
jo
das
xor
xchg
in
add
pop
stos
xor
mov
pusha
mov
sub
sub
mov
dec
xor
ficompl
clc
xchg
mov
dec
fbld
aam
mov
iret
enter
jnp
movb
mov
dec
push
imul
sahf
lret
xor
jge
sub
sar
rclb
scas
mov
sbb
inc
addb
inc
sbb
sbb
rcrb
ror
rolb
in
jne
testb
popf
ja
mov
xchg
icebp
inc
hlt
xor
dec
insb
loop
fwait
dec
fstpt
das
aad
xor
pushf
mov
cmp
adc
mov
xor
lds
icebp
dec
or
xchg
xchg
jns
idivl
in
mov
xor
popa
imul
sub
fisubs
cmp
and
mov
sbb
cmpsb
or
inc
adc
fidivl
jmp
cld
mov
ficompl
ficomps
push
adc
loop
pop
add
sbb
into
sub
scas
dec
nop
das
dec
push
int3
xchg
loopne
fstpl
test
pop
inc
fnsave
lea
adc
fs
sbb
orl
mov
stos
mov
fistl
xchg
jnp
push
fdivrl
int3
outsl
xor
dec
test
xor
lods
or
fcoms
in
jb
adc
test
inc
push
mov
fldenv
lret
sbbb
or
push
aas
cmp
sbb
xor
dec
sbb
rolb
sarb
fmull
xchg
mov
repnz
out
arpl
adc
xchg
out
xchg
or
pop
cmp
and
dec
lods
mov
sbb
fnstenv
adcb
mov
cltd
or
vminsd
push
js
cmpsl
fstpt
rcr
into
xchg
mov
int
mov
pop
clc
sti
dec
movsb
xchg
inc
imul
cmc
in
je
mov
push
fimuls
add
arpl
mov
xor
out
add
bswap
add
aaa
push
test
and
arpl
push
jl
mov
test
push
fstp
ret
xchg
cmpsb
xchg
int3
mov
rcrb
es
push
pop
xlat
popa
mov
jno
xchg
xchg
mov
repz
push
incl
mov
mov
scas
daa
push
push
lea
jb
or
inc
cmp
jno
pushf
imul
add
outsl
sti
or
rcll
fcmovu
push
lret
in
nop
mov
pop
arpl
test
mov
cltd
shr
dec
into
jl
cmp
cmp
in
cmp
inc
lods
stos
pop
cmpb
and
sahf
rcrl
ret
fcomi
mov
or
add
add
aam
xchg
push
cs
mov
fs
jge
xchg
sarl
sbb
les
stc
pop
mov
mov
ss
jge
xor
xor
inc
inc
sub
mov
inc
jo,pn
jno
xchg
roll
jns
shl
dec
ret
push
rcl
leave
mov
ret
mov
leave
jg
es
decl
cmp
insb
repz
dec
stos
dec
jbe
add
push
sbb
in
gs
adc
adc
cmp
pop
mov
push
jae
mov
nop
mov
sbb
lret
and
inc
insl
rcrb
mov
add
enter
mov
push
addr16
ss
pop
in
in
fimull
je
lods
inc
push
sbbl
xchg
sahf
or
cld
xor
dec
incb
add
enter
out
mov
inc
js
cmp
roll
jmp
repz
lea
push
cltd
lahf
out
aas
movsl
pop
jb
imul
jmp
push
stos
pusha
xchg
mov
sbb
mov
inc
jns
pop
push
andl
adc
and
and
jae
or
insl
sarl
or
push
xor
pusha
push
adc
jbe
comiss
ret
sbb
inc
movb
pop
jl
test
sbb
sub
xchg
push
cmp
pushf
adc
sub
and
and
pusha
in
dec
ds
roll
push
inc
jns
call
popf
sub
lods
inc
jbe
ficomps
mov
sarb
movsb
xchg
repz
les
aas
arpl
pop
xlat
push
and
clc
pusha
stos
or
imul
loope
pop
movsb
icebp
pushw
pop
in
sbb
stc
sub
in
sbb
pop
loope
xchg
sbb
sbb
or
xor
ret
xchg
or
push
pop
cmc
pop
insl
xor
push
in
xlat
and
es
repnz
aaa
incl
cltd
and
mov
pop
sbb
xchg
cmp
add
jo
jno
stos
cmpb
sbb
jge
dec
jae
fcompl
xchg
jno
mov
fs
mov
inc
add
push
dec
adc
out
lock
mov
cs
stos
cmp
insb
movsl
add
inc
add
sub
repnz
inc
outsb
push
incb
mov
mov
cmp
inc
push
or
sub
ficompl
pop
fs
aam
push
popf
mov
dec
sbb
jne
shrl
xchg
dec
lret
sub
ret
dec
add
mov
dec
out
pop
cltd
fs
mov
cmpl
add
in
stos
mov
shrb
adc
lea
xor
cwtl
cwtl
dec
ds
push
xchg
push
mov
sbb
mov
mov
push
das
lds
mov
pop
push
push
xor
add
in
xlat
fmul
idivb
pop
pop
std
movq
ret
cwtl
test
xchg
pop
rorb
arpl
jne
ret
cli
mov
and
fsubl
cmpsb
or
inc
insl
xlat
jb
add
mov
ss
mov
pop
insb
les
mov
dec
mov
dec
in
mov
dec
mov
mov
mov
jecxz
dec
and
add
sbb
xchg
push
sbb
push
xchg
cmp
adc
sub
movb
fcomi
sbb
mov
cwtl
sbb
or
jle
sub
gs
adc
add
push
mov
xor
je
pushf
ja
xlat
movsb
sti
xchg
test
sub
movsb
cltd
cmc
push
sub
jno
mov
adc
or
mov
or
outsb
push
les
js
insl
mov
call
repz
jns
fisubl
mov
add
or
and
jecxz
xchg
sbb
lret
mov
lods
inc
push
xchg
aam
jb
mov
xchg
outsl
or
sti
movb
fistps
ljmp
sarb
shrl
loopne
fcomip
sti
and
pop
popf
cs
pop
jne
adc
add
pusha
cld
dec
gs
rcrb
lods
or
insb
js
lahf
js
loop
pop
dec
dec
cs
jae
enter
inc
aam
test
cmp
ud0
mov
mov
mov
xchg
xor
jp
fldenv
out
aad
xor
dec
stc
loop
lret
lock
push
jo
int3
mov
insl
cltd
sub
cwtl
push
mov
add
lods
adc
lock
test
andb
and
or
lods
or
pop
xchg
adc
or
iret
je
lods
and
sub
cltd
cmp
lret
add
or
out
xlat
scas
cmp
inc
repnz
scas
pop
les
and
pop
bnd
mov
xchg
cmp
dec
dec
cs
push
fs
jno
aas
jg
sbb
push
xchg
scas
into
nop
jbe
outsl
sbb
push
sbb
mov
ja
scas
ja
stos
pop
ror
stos
in
adc
dec
sti
fisubrs
repz
jecxz
sarl
cmc
and
and
adc
ja
iret
xchg
jl
push
sbb
add
push
jl
in
aad
jmp
aam
jmp
xchg
pop
loope
idivb
scas
cmp
les
mov
popf
getsec
push
lock
and
or
jge
and
stos
add
push
xor
xchg
fisubl
dec
and
fcomps
dec
es
iret
and
cmc
int3
mov
ret
sub
xlat
pop
cmp
push
cmpsb
mov
test
cmp
inc
lods
ss
imul
jp
jl
lea
xor
out
lock
and
outsb
xor
pop
xor
sub
into
fsubr
or
pop
outsb
inc
inc
mov
dec
out
xchg
pop
scas
popf
mov
int
push
mov
sbb
into
lea
mov
daa
mov
push
iret
jne
cld
movsb
out
xchg
push
jl
jge
lods
scas
fnstcw
xor
into
test
push
data16
shrb
into
gs
loop
mov
xor
push
cmp
iret
push
adc
dec
push
mov
jae
inc
int3
pop
push
push
mov
out
sarb
mov
rcrl
jp
gs
jbe
js
mov
lret
ror
jno
insl
sub
popf
mov
hlt
lret
jns
add
mov
xor
scas
dec
mov
aad
cmp
js
fcoms
jo
push
lret
dec
and
cmpsb
or
jae
mov
pop
daa
testb
movl
xor
mov
and
bound
add
sub
out
cmp
push
adc
sbb
sbb
js
or
pop
push
xchg
mov
lea
push
stos
and
adc
adc
daa
add
mov
add
fisubs
std
pop
xchg
andb
cmp
ds
dec
in
andb
int3
inc
call
pop
push
pop
fwait
jp
lea
jo
xchg
mov
sbb
xchg
add
adc
cmp
xchg
gs
lea
cmp
pop
outsl
es
cmp
insb
inc
pop
push
or
rorb
sbb
sub
mov
repnz
arpl
test
movsb
test
test
sbbl
adc
xchg
std
lea
mov
cwtl
inc
mov
and
mov
scas
push
sbb
leave
jmp
fdivs
mov
stc
cli
add
lds
or
std
call
inc
insb
xchg
adc
mov
aad
je
loope
ljmp
fs
dec
into
xchg
loope
add
push
jnp
mov
pop
mov
fmuls
cmp
sbb
aam
xor
idiv
adc
pop
fld
push
and
mov
movd
sarl
or
cmp
popa
loope
pop
lret
sbb
pop
movsl
inc
loope
add
mov
adc
inc
jno
pop
sbb
ret
leave
jno
pop
test
fsubrl
movl
std
add
cmp
mov
xor
or
std
xchg
sbbl
dec
js
jmp
sbb
imul
inc
mov
jo
in
mov
out
enter
xor
mov
scas
fs
test
cmp
push
jns
cmp
notl
std
xchg
dec
dec
jl
pop
jp
sbbl
jo
mov
cmp
pop
mov
dec
lcall
xorb
adc
cmp
repnz
movsb
enter
sbb
subb
test
pop
mov
mov
push
aaa
mov
lahf
inc
jl
cmc
hlt
fldenv
xlat
pop
push
lahf
lcall
rorl
sbb
cwtl
pushf
cmc
and
push
pop
xor
fwait
sti
push
xchg
pop
sub
ss
stos
loopne
addr16
iret
mov
jb
sti
mov
cmovne
mov
in
rcll
jno
xchg
or
jmp
adc
sub
rcl
adc
popw
push
bound
mov
insb
xchg
xchg
movsb
hlt
imul
bound
es
loope
cmp
aas
xor
xchg
rcr
xor
push
in
insb
jo
sti
movsl
test
sahf
xchg
xchg
cmc
sub
clc
mov
popf
xchg
ja
xlat
pop
fcomp
aad
dec
cmp
push
ds
inc
mov
jg
or
fisttpl
sbb
nop
aam
ffreep
dec
add
inc
imul
push
or
pop
lret
jg
sub
in
in
insb
test
mov
stos
lahf
popa
mov
out
mov
cmpsb
mov
and
mov
cmp
sbb
in
or
cld
xor
lock
push
sti
adc
shll
mov
adc
mov
inc
cmp
dec
in
or
iret
and
jo
dec
mov
loop
xchg
lods
int
or
fbld
sbb
xchg
pop
js
xor
xchg
ss
dec
mov
ljmp
adc
sub
xchg
adc
lret
xchg
jae
fwait
pop
movb
dec
loopne
dec
imul
hlt
loopne
mov
dec
inc
cmpsb
lcall
cmp
jp
scas
stos
add
and
sahf
orl
adc
lret
mov
mov
je
lahf
push
sbb
sti
vminsd
lock
push
out
and
orb
cmpb
jne
xor
movsl
jnp
sarb
inc
xor
rcrb
add
cmp
push
imul
in
pop
loope
aas
jmp
xlat
push
xchg
lret
repz
stos
lods
cmp
inc
subb
test
mov
ja
jnp
fnsave
cmpb
sti
mov
cmp
xchg
mov
pop
and
insl
lods
push
insb
lret
jb
add
ds
hlt
mov
pop
cli
imul
out
jbe
or
mov
sub
xchg
dec
iret
cmp
xchg
into
fisubrl
inc
in
int
fsub
sbb
ja
jb
dec
push
sbb
cmp
xchg
adc
push
divl
push
mov
nop
cmp
repnz
mov
inc
xlat
mov
jg
or
pop
jl
aas
cmp
imul
or
push
scas
dec
bnd
sbb
and
or
pop
fwait
and
out
mov
out
ds
loop
in
arpl
lods
xchg
push
mov
xchg
mov
movsb
int
jp
cli
repnz
into
leave
into
cld
outsl
dec
mov
dec
stos
or
push
and
lret
je
std
popa
jbe
stos
lret
jnp
xchg
lock
shll
mov
jae
stos
iret
xor
icebp
or
fwait
pop
pop
rol
lret
push
inc
lahf
and
in
sarl
jnp
inc
aad
sahf
lea
out
dec
mov
mov
jg
and
jno
fnstenv
xor
sbb
or
push
xor
aaa
outsb
add
ljmp
push
daa
xchg
and
je
jg
loopne
cli
ja
cltd
mov
mov
cmp
jns
test
mov
xor
cmp
mov
icebp
cmp
mov
sbb
mov
out
into
test
jb
pop
faddp
shll
addr16
andb
jne
jle
pop
movzwl
mov
push
sbb
cmpsl
xor
mov
cmp
stos
jae
add
push
addb
in
pop
sub
ret
shl
loop
mov
and
jge
mov
cltd
dec
pusha
scas
jle
push
xchg
dec
push
mov
jmp
push
int3
jg
jnp
fstps
xor
mov
sbbb
cmp
repz
loope
push
js
xor
cmpl
ljmp
into
popf
mov
or
dec
pop
test
insl
divb
sbb
aad
mov
xchg
ljmp
aas
xorb
jne
jle
mov
mov
sbb
cmp
adcl
push
dec
push
aam
inc
push
inc
sub
cmpsl
add
sbb
push
dec
fadds
leave
jge
inc
add
pusha
mov
lahf
jp
xchg
inc
sub
pop
sub
daa
negl
cmpsl
sub
ja
andb
aad
popf
icebp
icebp
and
stos
stc
add
jp
adc
inc
jb
fldenv
cmp
repnz
movsl
xor
imul
out
movl
addl
shrl
sbb
xchg
fnstenv
mov
arpl
jmp
repz
pop
jg
sarl
fidivs
cs
pop
in
ss
testl
jno
sbb
or
pop
and
icebp
and
sbb
xor
imul
cmp
stos
loope
into
inc
ljmp
in
into
xchg
bound
adc
lock
out
cmp
mov
fdivs
or
mov
jno
sub
mov
outsl
xchg
mov
xor
rcrb
test
jne
ficoml
add
cmp
test
test
fldt
scas
ret
xchg
jecxz
pop
xlat
testl
xchg
xor
mov
mov
add
in
mov
cmp
xor
and
mov
inc
mov
jno
movl
popl
mov
xchg
sub
into
daa
sub
xchg
dec
iret
xor
mov
pushf
mov
xchg
push
iret
push
mov
divb
xor
and
lds
rorl
jo
iret
lcall
adc
jbe
adc
je
sbb
inc
mov
and
dec
dec
dec
sbb
shrl
push
pop
xchg
pop
sbb
jbe
jmp
add
ljmp
mov
fidivrs
cmpsb
adcb
lcall
mov
fs
outsl
or
jnp
js
xchg
xlat
mov
mov
sbb
mov
loope
inc
out
mov
mov
mov
shlb
test
gs
mov
sub
jno
push
gs
xor
mov
inc
dec
pusha
rolb
stc
lods
call
jge
loope
insl
scas
dec
add
repz
out
scas
xchg
ret
add
adc
negl
jecxz
in
aam
or
pop
into
jmp
jmp
or
ret
fcmovb
imul
repz
aam
and
enter
in
dec
imul
hlt
inc
dec
mov
imul
jle
in
dec
in
mov
cltd
das
movsb
jle
or
dec
sbb
in
cmp
hlt
test
inc
fwait
jmp
and
pop
add
pop
jmp
fcoms
out
aad
cli
pop
add
cmc
push
iret
call
adc
push
or
cs
add
adc
cli
mov
test
sti
cwtl
cmc
adc
jg
clc
movsl
lret
ds
sub
jle
cmp
push
push
xchg
mov
pop
sub
lds
es
rorb
out
push
sub
or
cmpsb
lds
and
cmpsl
push
repz
dec
xchg
jmp
dec
mov
fwait
xchg
int3
adc
push
pushf
dec
mov
test
mov
push
shl
mov
pop
imulb
cmp
mov
or
dec
es
addl
add
adc
mov
mov
mov
in
cli
shrb
adc
in
adc
adc
push
sahf
sarb
push
sub
mov
mov
lods
xchg
std
mov
inc
sub
xchg
mov
lea
ljmp
sub
leave
loop
scas
sub
enter
xchg
in
xchg
jecxz
js
out
insb
adc
fs
adcb
xchg
pop
lcall
adc
pop
xchg
sbb
sarl
cltd
jle
inc
add
cwtl
orl
or
sub
aaa
pop
rolb
lock
mov
jl
pop
or
xor
jbe
cli
testb
cmc
inc
jne
mov
out
sub
repnz
jecxz
or
sbb
xchg
icebp
mov
inc
mov
jbe
add
mov
fimull
pusha
popa
icebp
leave
mov
cld
inc
cmp
jp
into
pusha
dec
testl
notb
cmpsl
jle
dec
test
mov
loop
jnp
xor
popa
fimuls
sbb
jb
sub
clc
mov
mov
loop
adc
movsl
rclb
pop
in
cmp
test
lea
das
mov
popf
ljmp
push
and
test
iret
jno
js
ss
mov
icebp
xorl
and
inc
inc
rolb
cwtl
sbb
xchg
fbld
xorb
mov
mov
cmpsb
cmpsl
lret
pop
mov
cmp
pop
add
mov
sub
sti
mov
sub
xlat
ljmp
push
sar
add
insl
imul
stos
out
inc
xchg
out
xchg
mov
int3
push
fsubrs
mov
or
xchg
push
insb
lret
lcall
and
cltd
add
lahf
mov
fcoml
andb
imul
sar
jno
dec
repz
imull
rcll
outsb
inc
sarl
lods
fcomps
jl
pop
inc
call
jp
test
hlt
xlat
lret
mov
nop
scas
mov
or
add
pop
push
in
push
pop
mov
ret
push
jmp
mulb
shlb
inc
xchg
subl
in
mov
dec
push
mov
mov
or
int3
inc
int
lahf
jnp
pop
cmp
sub
or
int3
sbb
fidivrs
mov
add
xor
jge
mov
sahf
mov
dec
in
sbbl
cmpsb
mov
mov
push
add
decl
xchg
push
jg
rcll
jne
in
das
filds
xchg
scas
mov
stos
cmp
popa
mov
pop
ret
shlb
xor
aam
jecxz,pn
test
push
lcall
xchg
sub
scas
xchg
addr16
xor
test
inc
gs
addr16
push
sub
xchg
jne
mov
shlb
xchg
pop
sub
xchg
fwait
ja
rcl
mov
add
lcall
outsl
outsl
fmuls
fwait
inc
sub
inc
stc
inc
cmp
cmp
xor
std
cmp
add
test
push
inc
ljmp
scas
mov
jnp
add
cltd
out
and
lcall
mov
push
lea
xchg
cli
mov
in
in
mov
sbb
jg
ja
and
mov
jmp
mov
rcll
pop
inc
sub
adc
and
mov
icebp
pop
mov
mov
lds
mov
push
hlt
adc
adc
mov
cli
ficomps
pop
xchg
push
add
clc
lahf
incb
and
jg
xchg
dec
and
pop
pop
andb
lods
sahf
test
js
xchg
push
icebp
stos
dec
pop
cli
mov
sub
orl
in
lret
js
pop
mov
aas
cmp
ss
push
add
pusha
sbb
pop
out
pop
into
inc
ds
or
mov
movsb
or
dec
mov
mov
sub
test
jae
mov
xchg
jmp
xlat
xchg
bound
in
mov
pushf
cmp
pop
cltd
cmc
aam
ret
test
or
inc
add
sub
inc
add
xchg
jg
push
xchg
daa
jl
gs
sbb
jmp
dec
mov
mov
aad
pusha
iret
push
or
ss
cmp
xchg
stos
jb
addl
jl
sub
push
sbb
fsubrs
cmpsb
mul
mov
out
sarb
adc
add
mov
and
shll
insl
pop
push
xchg
sahf
sbb
aaa
sub
mov
adc
testb
xchg
imul
clc
pusha
mov
stos
pop
mov
jg
cli
fisttpl
nop
in
ret
sub
or
stc
fstl
and
mov
adc
mov
xchg
ret
dec
and
addr16
outsb
ja
push
fsubrl
mov
mov
fcompl
xchg
in
cmc
sbb
cvtps2pd
jb
jbe
adc
iret
ss
outsl
xlat
sub
dec
in
sahf
mov
push
outsl
ds
pusha
es
test
fdivs
fisttps
lock
pop
and
rorl
outsb
cli
inc
pusha
mov
mov
daa
rsm
mov
mov
out
sub
jne
and
mov
mov
outsb
jb
movsb
orl
divl
adc
fildll
daa
pop
mov
outsb
sbb
test
dec
je
jns
adc
cli
pop
lods
mov
negb
ljmp
xchg
in
jb
jmp
inc
inc
mov
and
mov
popl
or
inc
or
divl
cs
mov
and
jnp
pusha
lret
fcmovbe
xchg
daa
daa
fwait
adc
dec
mov
arpl
xchg
imul
adc
mov
push
xchg
sub
sub
ret
shrl
mov
mov
xchg
sahf
mov
sahf
pop
sbb
ljmp
cmp
xor
movsb
dec
xor
lcall
sbb
xor
outsb
jno
jecxz
in
in
add
xor
shlb
je
push
shrl
push
xlat
pop
lock
jge
fstpt
std
mov
lds
xchg
gs
xchg
adc
push
xchg
out
ret
cmp
out
sub
je
mov
jbe
lods
mov
divl
sahf
ret
jbe
sub
push
xlat
stos
adcb
jle
mov
pop
sahf
lods
jp
pop
xlat
aaa
enter
cmp
aad
imul
stos
mov
inc
btc
pop
xor
adc
out
inc
pop
lret
cmc
ss
enter
inc
scas
test
addb
in
push
mov
add
adc
mov
mov
testb
push
xor
je
insl
cmp
cmp
stc
mov
adc
inc
imul
push
repz
les
mov
outsl
dec
xorl
popa
out
xor
or
ficoms
dec
mov
imul
jp
fsubs
popl
in
xor
call
idivl
xor
ret
jne
inc
outsl
into
jl
sbb
mov
test
lods
mov
jp
into
shll
sbb
push
add
sub
filds
imul
or
sbb
jns
int
add
lods
jne
aad
cmp
rcrb
jmp
stos
add
ret
lea
adc
push
fisttps
sub
push
mov
or
dec
fcompl
cld
sub
je
ljmp
popf
sar
aaa
bound
mov
mov
jl
movsb
into
push
cmp
test
test
dec
and
rorl
inc
arpl
xor
pop
dec
jne
xlat
jmp
jae
mov
in
dec
mov
push
int
jge
cs
add
sti
cmp
insb
insb
loop
fcomps
dec
movsb
idivb
stos
or
mov
es
in
mov
adc
xor
loope
shll
lods
xchg
sub
push
mov
add
dec
push
sub
or
push
pop
in
xchg
lea
jbe
xor
aaa
in
mov
andb
insl
lock
jns
cmc
xchg
in
sub
and
jb
test
arpl
inc
cli
sbb
pusha
das
push
lock
jae
push
gs
xor
out
sbb
pop
adc
mov
pop
sub
lea
iret
ret
int3
add
clc
inc
jge
jb
dec
les
sbb
dec
push
jbe
popf
jne
mov
xor
enter
pop
xor
mov
scas
lods
enter
movsb
xor
into
leave
cltd
jecxz
push
xor
jle
jbe
das
orl
sub
rclb
xor
rorb
shlb
xor
inc
xchg
dec
aam
pop
xchg
dec
dec
or
adcl
or
sbb
or
inc
mov
push
divb
scas
popf
stos
sub
int
or
ja
sub
push
jl
out
fsubl
add
lds
aam
shrl
or
xchg
pop
dec
cmpsb
push
aad
or
push
inc
push
add
lock
push
loopne
negl
insb
and
fs
inc
fcmovnb
shl
call
data16
mov
fistps
lret
cwtl
jecxz
dec
in
xchg
adc
jecxz
jl
inc
ret
scas
inc
sahf
pop
jne
push
and
push
add
outsb
movsl
xchg
xchg
aam
jg
cmp
test
push
in
jbe
div
pextrw
mov
movsb
cmpsb
mov
arpl
adc
mov
cltd
shll
dec
mov
popa
lahf
in
fcompl
repnz
jg
test
mov
pushf
leave
xchg
add
add
lahf
sub
cmp
pop
xchg
rcrl
aam
xor
ret
and
add
sbb
lea
pop
ret
divb
lret
xlat
xor
cld
pop
lahf
iret
std
pop
adc
sti
popl
outsl
lock
rorl
andl
ret
iret
pop
sti
push
jo
inc
subl
sbb
das
lods
mov
cwtl
pop
hlt
pop
fisubl
jne
int3
addr16
adc
and
es
adc
lret
xchg
mov
cmpsl
cmp
bound
adc
fs
jp
adc
jle
jns
int
adc
aad
jmp
mov
or
loope
imul
out
in
dec
xchg
popf
push
in
mov
push
sti
shlb
cwtl
lcall
and
scas
pop
add
or
jnp
jns
orl
adcl
ret
pushl
mov
pop
cmp
subl
imul
sbb
mov
inc
lret
push
dec
inc
sbb
inc
pop
xchg
cwtl
daa
and
cmc
and
push
mov
fildl
jae
cli
jle
enter
push
scas
jmp
lods
mov
add
pusha
xchg
fwait
mov
mov
movsl
fnstsw
push
cmp
inc
mov
sub
or
jno
and
es
cmp
push
xchg
pop
in
bound
push
and
lods
jmp
add
test
scas
pop
pop
arpl
inc
scas
mov
insl
call
insb
jae
lods
dec
filds
data16
cld
dec
loopne
push
xchg
gs
mov
add
loop
push
orb
jae
out
fwait
xor
call
adc
sub
or
mov
inc
stos
repnz
sbb
rcrb
hlt
xlat
enter
popf
cmc
cmp
call
add
stos
and
and
cmp
mov
mov
out
je
fisubl
inc
and
push
pop
xor
incl
jno
sub
inc
and
mov
imul
lock
fistps
int3
movsl
subb
mov
mov
sub
push
rcr
push
out
cmp
push
jp
jecxz
leave
dec
es
or
sbb
sbb
jp
ds
mov
js
cli
iret
pushf
xchg
xchg
mov
xor
mov
mov
sub
adc
popa
adc
pop
mov
mov
in
xchg
mov
jo
and
cwtl
dec
jecxz
test
push
dec
iret
cld
mov
inc
roll
inc
int
xchg
scas
xor
inc
addl
or
repnz
insl
or
dec
sbb
mov
sub
test
sbb
ljmp
nop
push
das
and
pop
call
fidivs
and
mov
roll
js
xchg
pop
hlt
lods
fwait
jns
outsl
shll
mov
shrb
and
dec
data16
inc
mov
fs
sbb
cmp
sbb
enter
test
push
cmp
sbb
popf
add
popa
loopne
cwtl
sbb
fistpl
mov
lret
push
mov
add
add
fwait
xor
xchg
push
in
outsl
lahf
lea
stos
sub
stc
mov
xchg
lods
loopne
mov
jge
stc
push
fstp
mov
push
pushf
popa
xor
cli
imul
mov
push
and
lret
sbb
sbb
lods
fnstcw
aad
jg
mov
xlat
imul
aas
xchg
dec
lahf
idivl
repnz
pop
ds
sbb
push
add
loop
jnp
add
arpl
les
pop
sti
lret
xchg
pop
sub
mov
push
aam
adc
sbb
add
in
jnp
std
syscall
in
hlt
stc
testl
aad
scas
aam
ret
dec
repnz
fwait
nop
and
pop
and
and
fsubr
mov
sub
pop
aas
loop
inc
push
inc
pop
pop
icebp
jnp
xchg
pop
xor
cmp
je
test
stos
gs
push
push
lret
mov
add
rorb
fildl
dec
xlat
mov
pop
ret
push
mov
cld
sub
fcoml
mov
int3
das
mov
mov
loop
inc
outsb
into
icebp
sbb
add
or
mov
rorb
pop
or
push
jb
xlat
test
sub
mov
rcrb
and
shr
cmp
cmpsb
push
jecxz
dec
repnz
mov
lock
xchg
out
add
mov
add
call
cmp
and
out
cmp
mov
icebp
jne
and
mov
rol
push
jnp
mull
push
sub
push
mov
adc
xchg
in
and
push
push
push
aas
adc
inc
cmp
xchg
jno
lahf
lds
jl
adc
push
push
repnz
mov
pusha
cltd
cmp
xor
cmpl
jno
loope
mov
int3
inc
fwait
test
addr16
repz
sub
rcl
fiadds
sub
xchg
push
adc
movsl
cmp
inc
mov
out
pop
roll
mov
std
loopne
lods
cli
in
inc
push
xor
fisubrl
cmpsb
cld
or
dec
mov
in
cs
xchg
and
inc
les
inc
cmp
mov
scas
shr
bound
sbb
test
imulb
and
shll
mov
mov
inc
mov
test
or
repnz
mov
jmp
or
roll
mov
call
fwait
bnd
out
data16
dec
pop
inc
adc
mov
add
rclb
sbb
sbb
adc
adc
fsub
in
loop
adc
pop
insl
mov
fildll
pop
imul
adc
adc
ljmp
add
xor
loope
or
and
fistpll
mov
test
mov
pop
shlb
inc
sbb
cmpsb
repnz
std
in
lods
dec
xor
adc
ja
fildl
shll
cltd
sbb
cmp
std
fmul
sarl
sub
js
loop
notl
hlt
jne
mov
out
mov
jae
push
sub
cmp
push
js
mov
lds
mov
push
inc
xor
scas
push
pop
xchg
sbb
pop
js
pop
inc
sbb
ja
lea
shl
ljmp
stos
push
loopne
jnp
mov
dec
imul
fdivrp
cli
test
sbb
cmp
inc
sbb
xchg
rclb
insb
push
xlat
xchg
jmp
xor
cwtl
push
outsb
pop
clc
pop
pop
ljmp
repz
push
jae
rorb
dec
jg
aas
mov
xor
mov
xchg
mov
xlat
out
es
cltd
push
sbb
adc
insl
mov
cli
shrl
adcb
aaa
int
cmc
pop
into
mov
call
bound
bound
mov
in
movsl
sub
stc
xor
push
test
xor
gs
cli
mov
pop
mov
mov
es
xor
icebp
or
movsb
jp
movsl
mov
fisubs
sbb
pop
repnz
push
xor
sbb
lret
pop
push
pop
lcall
push
xchg
aad
nop
or
sbb
daa
cmp
mov
les
int3
ret
cmp
and
cli
repz
jo
adc
mov
faddl
rcr
aad
loope
inc
shlb
push
roll
test
jbe
lods
push
aas
mov
mov
jle
mov
mov
pusha
leave
js
lods
aas
sbb
inc
mov
or
das
add
cmc
lcall
xor
push
les
jo
je
cmc
and
shr
addr16
pop
in
mov
outsl
xchg
sub
push
je
xchg
and
xchg
xor
cltd
dec
in
aas
sahf
add
lds
cltd
adc
cmc
jo
arpl
ljmp
sbb
lods
mov
dec
dec
cmp
push
int3
sub
int
pop
push
jl
orb
ret
xlat
inc
fcmovbe
pop
mov
call
mov
ret
push
adc
xchg
pop
dec
faddl
movsl
jne
nop
aad
sbb
cmp
jl
mov
jo
out
mov
test
inc
sub
adc
aad
sbb
mov
loopne
mov
jns
cmp
jb
or
cmp
test
pop
pop
insl
popf
lret
into
inc
pusha
mov
xchg
cmpsb
mov
loopne
sahf
adc
fwait
or
dec
es
lcall
sub
jg
cmp
cmpsl
mov
clc
mov
xor
mov
negl
pop
cld
ljmp
add
push
push
push
scas
mov
mov
dec
clc
push
ret
movsl
fidivl
dec
adc
cs
cmp
ret
sub
leave
cs
aaa
aaa
incb
insl
jb
push
scas
test
lahf
repnz
leave
ficomps
scas
enter
fstpt
ret
mov
and
arpl
lods
adc
ficoms
hlt
sub
out
mov
enter
imul
dec
into
aam
sbb
leave
xchg
push
sarb
hlt
dec
and
jmp
idivl
mov
jecxz
xchg
push
sti
out
push
shll
inc
jge
mov
int
mov
arpl
and
int
lds
cld
add
sahf
mov
fldcw
sti
jo
adc
and
sub
dec
dec
je
pop
imul
leave
int
pop
pop
push
adc
jle
fiaddl
jo
push
loope
in
ficomps
and
movsl
xchg
cli
cltd
jmp
fbld
dec
imul
xor
sbb
cmp
es
in
and
es
leave
jno
mov
xchg
pop
into
dec
loope
mov
into
outsl
mov
push
add
ret
mov
aaa
gs
lds
dec
push
or
adc
push
divb
rolb
pop
cmpsl
mov
cmp
es
aam
js
pop
push
push
mov
cmc
call
arpl
cmp
cmpsl
sbb
pop
cld
mov
cltd
mov
shll
dec
push
jb
and
lods
lret
sbb
adc
out
pop
faddl
test
enter
fsubrs
jae
cmpsl
sbbb
sbb
adc
mov
ja
out
das
mov
push
pop
fistl
in
out
add
es
push
and
ror
push
loop
fwait
push
fildll
sub
aas
xlat
popa
aaa
lcall
rcr
mov
imul
push
jg
cs
sub
imul
out
xor
cmp
mov
mov
mov
sub
pop
jmp
pop
xor
xchg
std
aam
in
leave
push
xor
ljmp
popf
add
jmp
gs
mov
push
les
lods
or
inc
out
cmpsb
cmp
xor
mov
push
cmpsl
mov
add
jmp
aaa
stc
lods
xchg
jne
test
jbe
or
mov
and
pusha
int3
cli
xor
inc
test
mov
adc
adc
shlb
add
sub
fwait
mov
hlt
xor
jae
popf
jne
mov
inc
add
aad
mov
pop
push
pop
rcrb
scas
lods
mov
out
cmp
mov
mov
ja
lods
rorb
fldenv
test
dec
lock
xor
xchg
push
int
shll
jne
aad
sarl
jo
popf
adc
sub
inc
in
xchg
cli
testb
xchg
dec
sqrtps
sbb
enter
cmc
push
popf
imulb
and
imul
mov
fisubrl
dec
adc
daa
push
pop
divps
mov
out
movsl
adc
imull
fistpl
push
ljmp
stos
in
sub
cmpb
in
test
adc
int3
jns
push
xchg
es
lea
pop
add
je
js
repnz
rorb
call
jns
stos
pop
sub
push
jne
outsb
cmp
cmpl
daa
or
repnz
into
add
repnz
in
mov
lahf
fcoms
cli
lds
push
rcll
push
mov
test
inc
lcall
mov
cvtpi2ps
imul
and
xchg
mov
ret
push
add
out
push
jmp
sbbl
push
das
imul
xor
or
xor
jmp
jns
int
fcompl
ljmp
inc
inc
pop
sbb
xchg
out
push
mov
in
and
fisubrl
dec
and
es
nop
lock
sub
pop
mov
and
ljmp
icebp
pop
mov
inc
push
mov
dec
sbb
mov
mov
sbb
stos
pop
and
or
jge
sbb
jno
popa
int
in
je
repnz
jnp
dec
mov
mov
or
pop
fucomi
js
adc
add
cmp
dec
or
scas
inc
cld
xor
std
shl
shll
lret
lods
jp
daa
movsb
sbb
lea
mov
daa
nop
adcl
pop
or
pusha
xchg
mov
mov
cs
mov
mov
add
mov
js
les
fwait
dec
xchg
jle
push
das
cmp
inc
push
js
xchg
sarb
dec
inc
shll
lds
and
sub
out
adc
dec
pop
fidivrl
sbb
js
clc
sbb
xchg
cmpsl
es
push
pop
shl
sub
in
xchg
lahf
lods
xchg
call
mov
cltd
lea
shrl
icebp
test
outsl
xchg
iret
inc
adc
xor
dec
aad
stc
jle
cmc
leave
loope
mov
stc
les
mov
sub
sub
dec
into
gs
sbb
data16
jge
dec
push
rolb
add
shrb
iret
fiadds
mov
inc
lods
test
into
fimull
icebp
xor
dec
xor
cmpb
jae
lcall
and
ja
addr16
aad
fstpt
ljmp
inc
xlat
fs
push
movsl
shll
lahf
imul
push
or
enter
mov
mov
out
adc
mov
push
xchg
nop
inc
insb
insb
push
add
push
pushf
pop
sbb
mov
sub
ja
stos
adc
push
rolb
lret
repnz
cmpsl
int
std
pop
repnz
xor
subl
mov
cwtl
push
lahf
jl
cmp
cmpsl
xor
aad
push
push
rep
mov
pop
pop
imul
fcomp
and
jnp
inc
arpl
mov
jns
cmp
sub
adc
out
cld
mov
adc
daa
ret
jge
fyl2x
sbb
mov
and
je
pop
iret
jmp
push
xchg
mov
stos
pop
fcoms
idiv
xor
inc
push
pop
stos
cwtl
mov
and
xorb
xor
js
mov
call
sbb
insl
fs
cltd
insl
cmpsl
pop
sub
mov
dec
inc
xorl
sbb
call
xchg
cli
out
xor
cs
cmp
mov
popl
shll
mov
loope,pn
out
ret
jl
rcr
jo
cmp
aad
jns
push
cmpsb
jle
sub
out
data16
or
loopne
int3
jg
outsl
mov
shrb
xchg
out
sub
adc
aam
ja
jp
jp
dec
adc
and
cmp
sub
push
sub
push
fstl
xchg
dec
ret
out
jne
dec
jo
jle
decb
and
push
popf
mov
lcall
int3
pop
pop
fldenv
mov
out
int3
jge
push
cltd
sub
add
inc
sbb
arpl
xor
push
jp
out
mov
cmpsl
push
mov
jge
sub
inc
cmpb
call
cmp
add
nop
clc
pop
sbb
imul
dec
inc
lret
outsl
nop
aaa
xchg
movsl
dec
add
xchg
cmp
push
jnp
xor
add
sub
xchg
insl
test
cwtl
iret
cmc
ljmp
popa
ljmp
mov
dec
fwait
imul
inc
daa
push
js
jg
testb
jbe
hlt
xor
and
cmp
les
lds
mov
and
dec
fs
mov
dec
xchg
mov
ds
in
imul
push
insl
repnz
adc
push
xor
in
inc
rolb
xchg
test
or
fsts
sahf
push
xor
cmp
cli
stos
outsl
scas
mov
or
jg
sbb
inc
pusha
pop
pop
aas
sbb
jmp
pop
lods
mov
ds
push
push
xchg
adc
sub
mov
and
shl
insl
imul
repz
pop
ljmp
inc
inc
or
inc
imul
andb
xorb
sbb
ljmp
popa
xchg
lods
sti
daa
sub
cmp
lret
mov
movsl
out
xchg
icebp
push
lds
fsts
cmpsl
mov
sbb
xor
leave
popf
mov
sub
mov
nop
les
xor
cltd
xor
out
pop
nop
fimull
sbb
add
adc
daa
mov
mov
xchg
cmc
andl
out
jns
mov
lods
and
mov
sub
dec
xchg
jnp
mov
push
outsl
loop
xchg
outsb
cltd
jle
test
sub
mov
xchg
inc
arpl
insl
pop
enter
xchg
sbb
mov
and
xor
cs
je
jo
lahf
movsl
sahf
sti
mov
sbb
pop
cmpsl
test
mov
repz
outsb
pop
fistpl
lock
test
dec
idivb
lahf
es
adc
xor
or
jl
roll
shl
leave
push
mov
popf
mov
ss
pop
xor
add
or
adc
mov
pop
push
push
jp
into
add
xor
pop
fwait
push
inc
iret
addr16
push
inc
or
movsl
jmp
add
dec
in
sti
xor
frstor
push
pop
arpl
xorb
mov
mov
fistps
in
and
jecxz,pn
cmpsb
xor
push
adc
out
cmp
pop
mov
int3
lods
or
cli
add
in
xchg
jle
in
lods
movsb
out
jnp
ror
loopne
xchg
popf
shrl
cs
or
lret
and
jl
test
leave
mov
scas
mov
repz
jo
int3
sbb
clc
lahf
jo
push
int
cli
pop
call
int3
push
cmp
and
test
sub
xorb
out
fwait
and
nop
aad
cli
dec
mov
xchg
mov
cmc
lock
sub
dec
leave
out
mov
aad
mov
shll
outsl
cmpsb
push
pop
icebp
xor
ja
cmp
data16
subl
es
fldt
jb
cmp
aas
dec
sub
dec
dec
jns
mov
dec
jns
hlt
sbb
jge
push
sub
cmpsb
mov
aad
lods
xchg
cs
loopne
daa
push
pusha
ret
dec
mov
cs
add
cmpl
pop
ljmp
inc
sahf
pop
mull
sub
mov
bound
and
jne
stc
pop
and
aad
inc
ja
or
and
repz
scas
dec
jmp
push
pop
sub
lea
sbb
arpl
lods
pop
mov
js
mov
mov
mov
or
xchg
ret
daa
pop
xchg
repz
jno
leave
push
test
add
cmp
push
in
sahf
xchg
outsl
movsb
imul
movsb
and
lods
scas
cli
cmc
ja
pop
inc
adc
jg
jmp
or
and
xchg
scas
and
mov
dec
add
movsl
xchg
ss
clc
cmp
xor
imul
sbb
loop
lods
sub
stc
vpunpckhbw
add
xchg
mov
sbb
daa
andl
mov
xchg
test
inc
stos
xor
jecxz
pop
fnstenv
stos
fcompl
jns
test
lods
push
xor
push
int
inc
icebp
pushf
dec
dec
cmc
leave
fadd
cld
inc
jb
cmc
jbe
cmc
xor
xchg
sbb
add
loopne
stos
mov
je
jne
outsl
jno
mov
ret
les
push
pop
test
mov
sbb
mov
pop
and
xor
gs
sbb
xchg
sbb
jnp
movsl
sarl
divb
repnz
mov
dec
mov
cld
arpl
pop
loopne
dec
popa
mov
scas
cmpsb
pop
lcall
cs
lahf
mov
cmc
add
push
outsl
jl
dec
cmp
xlat
faddl
jmp
jl
pusha
mov
dec
jbe
cmpsb
jno
adc
ficoms
xchg
sbb
lods
jo
cmp
insl
push
aam
push
neg
lret
test
push
stc
fistpll
cmp
in
jg
xchg
dec
mov
push
sub
bound
lods
adc
lods
ficoms
pop
mov
jle
sbb
push
lods
and
xor
mov
push
test
cltd
add
pop
lahf
es
or
outsb
pop
outsb
lds
aam
mov
aad
cmpsl
jp
and
mov
cld
rcl
push
and
add
sub
dec
mov
add
pop
inc
rorb
clc
adc
fadd
xchg
idiv
adc
mov
dec
mov
cmp
and
sbb
les
or
add
and
lret
pop
xchg
xchg
test
aaa
cld
push
push
idiv
lahf
leave
pop
jne
ja
cmp
jne
sbb
push
pop
push
adc
inc
lods
push
xchg
call
and
sbb
pop
mov
push
into
ss
mov
pushl
add
outsb
mov
and
shlb
stc
test
out
xchg
or
dec
dec
xchg
daa
jg
mov
insl
adc
dec
rcl
inc
pop
jecxz
mov
aaa
xlat
sbb
jge
add
out
cmp
xlat
mov
push
jle
sbb
shrl
outsl
inc
sbb
sub
ljmp
push
lods
flds
inc
loopne
push
lcall
cld
pop
cmp
aad
orl
mov
and
dec
adc
mov
jecxz
mov
mov
call
lods
repz
fs
in
mov
notl
sbb
sti
movb
dec
mov
les
xor
pop
and
ret
std
push
xchg
sub
movsb
xlat
lock
inc
pusha
cli
outsl
mov
jmp
adc
or
test
cmp
xchg
pop
xor
hlt
les
dec
jnp
or
fiaddl
mov
fidivs
lahf
orl
and
sub
fadds
cmc
adc
mov
pop
xor
push
xchg
dec
jl
adc
push
aam
in
pop
iret
xorb
cmpsb
add
inc
aas
and
retw
movsl
cmp
pop
pop
mov
pop
lret
cmp
ficomps
int
or
cmp
out
xchg
push
pop
stos
cmp
pop
sbb
call
push
mov
xor
jg
push
lock
cmp
xor
lods
je
enter
data16
or
push
push
xlat
les
rorb
lret
fucomp
fdivs
pusha
fstpl
mov
test
cmpsl
repz
sbb
pop
cmpsl
in
dec
inc
stos
xchg
aad
or
add
xchg
xchg
adc
push
add
adc
xor
sub
jmp
repnz
data16
xlat
sbb
push
stos
or
data16
adc
repz
push
es
outsl
shll
lahf
cmp
rcrl
and
or
fwait
addl
aam
in
mov
inc
push
adc
std
jecxz
sbb
out
jns
dec
arpl
in
mov
cmp
fdivs
lret
shrl
xchg
cmp
cmp
mov
xchg
dec
sbb
lods
sub
mov
outsl
in
lret
jl
lahf
rol
cmp
sub
add
repz
cltd
cmp
xchg
gs
pop
mov
lret
pop
dec
jg
push
pop
jbe
test
stc
sub
fldl
push
inc
mov
dec
jl
lcall
cmp
mov
cmp
adc
scas
out
cmp
ds
push
aad
dec
dec
push
lahf
hlt
int3
loopne
xor
sbb
cmp
rolb
xor
dec
pop
xadd
cli
stc
xor
imul
movsb
sub
out
pop
das
inc
dec
sub
dec
je
push
mov
sub
imul
imul
and
push
jnp
add
lods
dec
push
rorb
mov
jae
test
pmullw
lcall
pop
dec
mov
adc
dec
push
mov
add
dec
xchg
aas
pop
into
xchg
or
in
ret
inc
icebp
movsl
negl
xchg
iret
out
add
push
stos
add
ret
pop
sub
data16
bound
popa
jb
sbb
fildll
pop
sub
fsubrl
gs
push
outsb
insl
dec
mov
xor
cwtl
std
int
cld
incl
outsb
sbb
cmp
xchg
push
dec
adc
lods
inc
xchg
movsb
adc
cmc
mov
pop
push
inc
mov
pop
outsb
addl
ret
push
inc
inc
jne
repnz
mov
and
orl
test
lcall
push
int3
and
outsb
sbb
out
fiadds
addr16
les
sub
jle
cmp
and
mov
push
jg
dec
cmpsb
adc
imulb
mov
mov
addb
xor
call
ficoms
xchg
cmpsl
sbb
shrl
lock
mov
xchg
stos
jecxz
xor
pop
ficompl
test
mov
dec
dec
jmp
ret
aaa
dec
fidivrl
xchg
mov
pop
mov
sti
ret
insl
inc
mov
enter
faddl
repnz
in
sbb
mov
repz
adc
cmp
mov
out
xor
in
jg
push
add
cmp
or
xlat
cmpsl
dec
add
cmpsl
adc
scas
mov
and
add
sub
stos
into
fdivrl
orl
or
aad
adc
xor
cmp
sub
mov
jne
xlat
dec
mov
or
jecxz
repnz
cmp
push
sarb
cs
out
push
in
jp
xchg
inc
ljmp
pop
mov
subl
loopne
push
mov
lahf
mov
and
das
popa
es
cs
and
mov
sub
fnstcw
test
add
mov
push
mov
scas
xor
mov
stos
sti
add
mov
jg
jae
pushf
push
jae
das
ds
insb
test
cmp
mov
shlb
dec
dec
lods
das
jle
sbb
repnz
add
dec
rcrl
pop
jnp
pop
in
or
imul
jae
push
and
xchg
mov
hlt
sub
push
or
repnz
adc
pop
xchg
arpl
fistl
stos
xor
xchg
fwait
leave
std
out
pop
scas
repnz
cmp
lods
push
xor
jo
pop
or
xchg
xchg
mov
add
jp
outsl
in
iret
loope
mov
bswap
pop
movsb
adc
outsb
shll
pop
jp
iret
inc
xor
shl
or
fmuls
cmp
bound
pop
cmp
xchg
xor
pop
mov
sub
mov
cmp
popa
inc
fbld
mov
push
fwait
gs
fs
mov
test
dec
inc
ret
iret
sbb
mov
push
mov
pop
repz
aad
imul
mov
pop
cmpsl
lret
jmp
inc
push
movb
out
inc
in
xor
lods
fldcw
lods
xor
xor
jb
adc
push
sub
mov
std
dec
into
adc
jle
or
pop
dec
sbb
int3
outsb
adc
aaa
rolb
ljmp
dec
jno
pop
adc
nop
pop
xchg
sbb
shll
jl
leave
in
stos
xor
xlat
inc
or
arpl
push
int
loopne
mov
xchg
adc
stos
jl
adc
dec
stos
out
push
gs
xchg
test
mov
jle
les
lret
adc
mov
and
lods
je
jle
lea
sbb
popa
int3
mov
jno
dec
lahf
sahf
test
push
xor
xlat
lret
sti
and
rcr
inc
xchg
and
popf
cltd
lods
mov
imul
sysret
xchg
cmp
loop
adc
popa
push
stos
out
jmp
repnz
cmp
jne
adc
in
rcrb
and
and
add
in
adcl
mov
mov
inc
pop
shlb
lods
xchg
jecxz
push
push
add
mov
sub
out
pop
daa
and
sti
sbb
inc
and
cli
mov
lds
pop
mov
add
repz
lea
aad
jns
dec
jae
add
or
in
xchg
xor
fistpl
or
adc
push
xor
and
insb
push
xchg
sti
mov
inc
scas
mov
jnp
inc
sti
ss
xor
rsqrtps
arpl
dec
xor
mov
mov
test
fwait
icebp
xor
xor
cwtl
pop
mov
cltd
stos
dec
pushf
xorl
idivb
cmp
push
aas
mov
ret
adc
fcmovnb
xchg
fnsave
shll
mov
mov
xchg
arpl
in
mov
jnp
ja
sub
add
pop
xchg
into
and
xchg
repnz
mov
std
jle
ja
lock
xor
sub
cmpb
xlat
adc
arpl
pop
inc
and
rolb
jecxz
cmp
pop
ljmp
mov
loop
and
jne
fidivrs
cmp
lods
lock
mov
inc
rcr
sub
aas
mov
leave
or
rcrb
dec
xorb
dec
mov
dec
std
add
dec
enter
push
scas
clc
mov
fnsave
flds
add
adc
cmpsl
mov
add
cs
push
loopew
sbb
push
icebp
or
sbb
jp
lret
sub
movlps
ljmp
pop
int
xchg
push
pop
out
addb
xor
out
adc
pop
or
jg
rcrb
cmp
pop
divps
push
xchg
add
cmp
pop
cwtl
imul
adc
dec
mov
sbb
fincstp
jg
xchg
test
push
add
jge
faddp
jmp
xorb
hlt
xor
imul
js
movsl
lret
popf
jg
scas
xor
pop
out
jno
mov
pop
mov
mov
jecxz
mov
lret
out
cmp
int3
jecxz
mov
and
dec
popf
sbb
or
int
sbb
mov
pop
cmp
shlb
ds
pop
fistps
dec
les
mov
ficoml
pushf
daa
dec
movsb
fisubrs
adc
xor
xchg
js
push
vpcmpeqb
jnp
jecxz
out
je
cld
out
pop
sub
mov
inc
push
shlb
jmp
mov
pop
cmp
mov
cmpsl
adc
dec
popf
xchg
ret
add
hlt
mov
scas
and
mov
mov
insl
ds
lods
cmp
test
into
mov
sbb
sub
scas
mov
loope
in
in
sbb
push
inc
insb
cltd
inc
mov
push
movsb
push
in
mov
jno
jbe
xchg
cmp
pop
inc
sub
fldcw
inc
cmpsl
dec
imul
jg
ljmp
sub
adcb
inc
sbb
test
popf
aas
leave
imul
lds
ja
sub
pop
inc
pop
fnstenv
add
dec
lods
xor
xchg
or
push
jmp
inc
sub
mov
push
cmp
inc
sub
push
decl
sub
movsl
push
dec
jno
lcall
xlat
popa
inc
in
push
push
test
cmp
roll
cmp
jbe
xchg
hlt
and
sub
xchg
notl
mov
int3
mov
and
jecxz
cmp
or
jmp
or
cmp
push
cs
fs
dec
fwait
je
add
sbb
clc
add
adc
shl
fiaddl
adc
xchg
addr16
cmp
dec
fnsave
pop
ja
push
jle
es
dec
mov
daa
in
scas
adc
dec
sbb
mov
in
inc
jg
cld
xor
and
inc
fsubs
pushf
xchg
xchg
ficomps
stc
push
inc
out
push
rorl
out
pop
mov
lds
mulb
ret
xchg
popf
sahf
shl
shll
outsl
popa
pushl
lock
or
fidivl
inc
xor
push
adc
add
fwait
arpl
xchg
jmp
call
cli
mov
dec
push
xchg
clc
icebp
sub
ss
xor
fnstcw
dec
mov
or
add
in
inc
ljmp
xor
jbe
mov
int3
sub
decl
add
cmp
stos
jmp
add
sub
mov
inc
mov
addr16
sub
negl
mov
repz
xlat
in
add
dec
mov
mov
xor
or
inc
cmpsb
cmp
or
aaa
mov
loop
cwtl
pop
pop
scas
stos
stos
dec
sti
or
jbe
push
cmp
notb
adc
jno
push
add
or
stos
pop
mov
out
pop
lods
add
adc
scas
cmp
lods
ret
leave
aaa
aam
fisttpl
pushf
outsb
dec
xchg
cmc
sub
arpl
popa
mov
mov
jo
jnp
mov
xor
bound
mov
push
cmc
inc
xchg
pop
lods
adc
push
out
dec
pop
inc
fisubs
cwtl
loopne
imul
fidivrs
bnd
test
dec
andl
push
and
dec
xor
pusha
xor
sub
daa
push
call
rcr
push
or
loopne
fildll
in
daa
sarl
push
dec
repz
data16
or
orl
pop
cmp
and
fadds
aam
insb
ds
and
cmpsl
add
stos
dec
aas
test
xchg
xchg
cmp
div
lret
add
arpl
scas
out
data16
mov
rorl
xchg
jge
dec
ds
rorl
into
stos
push
mov
push
mov
push
inc
xor
ds
int
and
shlb
jmp
inc
pop
lahf
scas
fisttpll
pushf
jne
lods
jmp
inc
insl
jp
pop
inc
push
pop
aas
jae
movsl
or
iret
mov
cld
xchg
stos
orb
xchg
xor
enter
cmpb
mov
imul
lea
inc
jae
pop
adc
or
mov
fcomps
and
jg
popa
add
cmpsl
xchg
jge
dec
inc
jns
inc
lret
aaa
lahf
inc
mov
in
stos
xor
push
mull
stos
lret
add
dec
fstl
pop
jp
icebp
xchg
lahf
movsb
loopne
shrl
js
sub
int3
jbe
and
stos
inc
adc
push
mov
cmp
dec
lock
les
lcall
jno
cwtl
mov
xchg
insb
outsl
adc
mov
rcrl
icebp
nop
mov
loope
jge
js
lods
mov
stos
andb
cld
ret
mov
xchg
sub
shlb
xor
lcall
cli
test
ficomps
loopne
in
add
adc
data16
xor
nop
mov
cmpsb
mov
in
lods
imul
orps
add
inc
fidivs
push
in
popa
pop
repnz
fsts
dec
pop
aam
lods
test
jo
sbb
lods
daa
adc
xor
insb
cwtl
rolb
ret
in
sub
fidivrl
jp
cmpl
mov
add
pop
cmpl
add
nop
lret
aas
jl
outsb
inc
notl
lods
inc
mov
pop
inc
adc
sbb
xchg
and
adc
lret
movsl
lfs
mov
adc
mul
adc
stos
add
push
push
cwtl
shufps
adc
sub
inc
arpl
test
stc
fsubl
jp
or
pop
aas
dec
pop
mov
jg
sbb
outsl
dec
jecxz
jbe
lds
rorb
lcall
movsb
callw
add
push
lods
or
push
bound
fs
adc
stos
pop
out
loopne
hlt
push
sbb
sub
pushf
mov
inc
mov
sbb
inc
and
scas
sub
rcrl
stos
out
push
mov
scas
dec
and
mov
sub
mov
ret
cli
push
cwtl
rorb
push
fld
lods
fcoms
and
adc
cld
sub
les
inc
jg
inc
jb
dec
push
std
push
add
stos
out
and
inc
imul
bound
scas
add
sub
inc
jecxz
push
outsb
enter
lcall
test
mov
xchg
push
test
lea
push
dec
imul
ret
aad
aas
fsub
sbb
repz
rcrl
sbb
adc
push
adc
popf
enter
mov
shlb
sub
test
push
lock
js
pop
in
or
mov
in
or
outsl
cmp
roll
xchg
stc
gs
pushf
cmp
negb
ljmp
mov
mov
inc
xchg
or
push
movsl
arpl
jecxz
pop
push
stos
ljmp
dec
lock
mov
dec
stc
aaa
mull
pop
xor
adc
push
pushf
leave
xchg
jecxz
lret
pop
iret
pop
test
and
jbe
fistl
jae
out
adc
test
lahf
ja
inc
mov
add
fidivrs
mov
sbb
inc
repz
jg
lret
out
pop
jns
adc
rorl
mov
jo
int
andb
inc
cmc
xchg
xlat
psrld
mov
dec
dec
je
in
rcrb
cmp
cmp
fucomp
jae
js
data16
mov
adc
inc
arpl
mov
mov
jne
aad
mov
mov
or
and
les
aam
cmp
dec
pushf
dec
cmc
testb
aad
mov
and
pop
out
xor
mov
sub
lret
ds
aas
add
mov
push
popf
shlb
sbb
push
std
cmp
xor
push
cld
add
push
pushf
test
xor
jbe
repz
popf
cmc
in
xor
adc
cld
push
sub
jge
inc
nop
js
int3
insl
out
xor
mov
push
andl
mov
sbb
mov
call
sub
mov
insl
dec
hlt
in
push
mov
sub
test
popa
dec
mov
in
sti
fiadds
aas
push
lahf
jecxz
enter
sti
jle
xchg
mov
mov
in
sub
xor
outsl
jmp
mov
out
pop
jg
xor
xchg
mov
sub
jle
jmp
jmp
std
xchg
pop
pop
or
sbb
and
andl
scas
lret
pop
leave
repz
xchg
dec
test
lea
pop
jnp
push
dec
das
or
cmp
xor
popf
in
fs
cmp
adc
mov
dec
test
inc
adc
leave
adc
repnz
fmull
movsl
dec
jo
and
xchg
mov
repz
adc
cmpsl
sbb
shrb
inc
lock
jb
out
push
outsb
mov
dec
xchg
mov
jmp
and
xchg
pop
dec
xor
int
cltd
aaa
outsb
push
jp
mov
mov
push
sarb
push
test
xlat
xchg
cmp
dec
and
ret
pop
push
pop
repz
lods
push
das
push
ja
dec
faddp
and
daa
movsl
jle
pop
aam
imul
clc
int
pop
mov
std
out
mov
adc
and
xchg
mov
stos
nop
leave
mov
ss
popf
mov
adc
ss
mov
cmp
or
jnp
push
pminub
lods
movsb
mull
test
incb
xor
test
sub
sbb
push
inc
pop
cltd
jle
inc
adc
scas
push
inc
xor
pop
iret
cltd
xchg
das
add
or
daa
andl
in
daa
fidivs
insl
jecxz
mov
push
sbb
xchg
jbe
das
scas
cltd
or
jl
sub
stos
xchg
pop
popa
ss
pop
push
adc
mov
mov
lock
or
jb
jmp
sbb
add
cmpsb
pop
pop
cmp
pop
jp
pop
mov
imull
es
jp
lods
gs
test
dec
xor
xor
or
pop
call
pop
frstpm(287
or
xlat
adc
outsl
shl
in
or
push
add
lods
pusha
jmp
in
sub
cmpsl
dec
pop
inc
mov
loop
or
mov
adc
cwtl
imul
mov
cld
cwtl
mov
in
outsl
xor
adc
mov
dec
lcall
movsbl
sti
jb
push
fstpl
dec
aam
out
jmp
adc
sbb
call
jge
in
test
adc
push
enter
les
xchg
pop
mov
lret
adc
add
call
push
fidivrs
leave
sbb
pusha
dec
sbb
jl
mov
push
scas
ja
aad
test
shrl
aam
mov
lret
mov
dec
pop
xor
gs
and
jmp
stos
jmp
cmp
jecxz
scas
dec
and
mov
push
sbb
cwtl
inc
mov
fadds
mov
xchg
fldt
and
rclb
and
andb
cmpsl
aas
add
mov
enter
jae
mov
push
pop
stos
inc
sub
nop
pop
jp
inc
mov
adc
cmp
fistpll
cwtl
pop
inc
mov
out
inc
ljmp
adc
sbb
pop
sbbl
dec
int
jmp
lods
aas
out
mov
dec
mov
push
scas
dec
insl
test
movsl
rcr
inc
inc
push
jae
add
popa
xchg
pop
mov
sahf
mov
jb
aas
sbbl
dec
negl
ficoms
inc
rol
pop
xor
mov
scas
sub
inc
cwtl
movsl
rorb
fmuls
dec
jbe
sbb
inc
lods
or
add
pushf
and
xchg
xchg
push
aas
out
inc
outsb
out
xchg
fsubrl
sahf
leave
in
sahf
sub
daa
mov
fcmovnu
jg
push
cltd
sbb
cmp
and
iret
adc
stos
sahf
push
cmpsl
loopne
in
inc
push
ljmp
sub
cmp
lret
dec
lea
out
inc
out
mov
push
mov
push
test
cmp
orl
divl
push
jl
aaa
outsl
dec
pop
jg
inc
push
lock
adcl
sar
mov
jnp
fwait
push
xchg
stc
cmpsb
imul
push
das
shrb
rcrb
out
js
dec
mov
iret
xor
mov
dec
jl
lea
and
lahf
push
add
add
std
inc
faddp
loopne
adc
ret
repz
popl
sbb
das
sbb
pop
pop
xor
mov
popf
aas
ret
pop
dec
or
inc
arpl
insb
mov
dec
push
lcall
ffreep
cmpl
lret
lds
jo
ret
push
dec
xor
into
cmp
stc
popfw
push
movsl
xchg
aaa
fwait
push
scas
stos
cmc
repnz
nop
das
pop
xor
dec
fs
ja
mov
scas
fidivs
repz
push
mov
mov
mov
out
add
mov
xchg
jne
ror
shlb
pop
jecxz
add
pop
js
pop
push
push
adc
movsb
xor
adc
add
adc
or
jns
aad
loopne
adc
daa
mov
jecxz
out
mov
mov
scas
xchg
iret
push
xchg
pop
mov
mov
cs
add
or
pop
xor
mov
clc
push
xchg
mov
roll
mov
adc
gs
dec
mov
rorl
bound
xchg
in
clc
call
ret
mov
inc
xchg
jne
and
std
xchg
movsb
push
push
xorl
cli
arpl
add
dec
gs
repz
push
adcb
fldenv
inc
cmc
and
xlat
xor
pop
dec
jecxz
push
testl
iret
adcb
mov
push
xchg
dec
sub
aam
mov
in
adc
outsb
mov
mov
pop
loopne
test
mov
rcrl
inc
lods
jge
inc
pop
loop
xchg
rcrb
cmp
push
test
mov
scas
pop
pop
or
out
jecxz
scas
jns
cmp
test
inc
mov
sbb
lcall
movsl
mov
lds
dec
and
mov
or
bnd
sbb
cmpsb
aas
scas
mov
sbb
out
jge
lods
pop
negb
les
adc
mov
mov
stos
nopl
pop
or
dec
jae
sub
inc
aam
mov
int
ret
mov
fs
cmp
sub
cwtl
repnz
and
jge
jecxz
into
sub
fists
mov
cld
ds
imul
jo
adc
enter
fisttps
outsb
fwait
sahf
mov
cli
notl
aas
outsb
xor
nop
ja
xor
mov
and
jl
xor
decb
into
dec
push
mov
dec
add
js
insl
flds
inc
in
stos
pop
sahf
cmp
insl
enter
fs
or
jbe
push
mov
fimull
adc
fildl
xor
jmp
lahf
fwait
je
adc
out
dec
jns
mov
andl
cld
add
adc
mov
mov
adc
imul
cmc
dec
fwait
xchg
push
push
repz
shrl
inc
mulb
setnp
inc
aam
push
stos
daa
dec
cmc
pop
divb
sti
xor
adc
movsb
and
sub
mov
pop
xchg
aaa
lock
mov
add
sarl
or
insl
pop
push
mov
sbb
pop
sbb
inc
gs
mov
ja
jns
in
lds
dec
xor
in
mov
dec
xchg
mov
das
popf
out
inc
xor
jns
mov
pop
shl
sbb
adc
push
repnz
xor
and
jl
lock
mov
inc
sub
inc
inc
xchg
outsb
ljmp
mov
xchg
and
fildll
jo
sbb
sbb
adc
ds
push
data16
xchg
cld
mov
sahf
icebp
movsl
or
repnz
pop
cmp
fucom
jb
ficoml
mov
jb
test
adc
out
dec
cmp
jp
xor
nop
and
into
lcall
scas
dec
jecxz
sub
pop
fdivrs
dec
shll
and
sub
push
daa
mov
push
jne
fmull
pop
ljmp
add
sbb
cmpsb
imul
push
lea
xor
icebp
nop
jmp
rorb
xor
jmp
adc
pop
and
orl
xchg
xchg
xor
subb
add
shl
sub
mov
xlat
mov
jnp
rclb
and
fildll
push
cs
dec
sbb
fucomi
dec
fsubs
fnstenv
and
jmp
sub
inc
add
mull
mov
pop
and
dec
test
mov
add
push
jo
aaa
subb
jo
fwait
int3
jmp
mov
lods
inc
mov
jp
or
fisubs
adc
jmp
in
stos
mov
out
repnz
adc
mov
in
jp
fwait
ljmp
pop
out
setg
mov
sub
lds
mov
jmp
xor
xchg
xor
xlat
loope
adc
jae
push
xchg
mov
jbe
lea
bound
lods
mov
mov
enter
mov
loope
loope
inc
jmp
jp
arpl
mov
sub
jbe
dec
aas
mov
dec
clc
cmc
imul
sbb
or
dec
clc
cs
and
rol
out
inc
dec
pushf
in
sbb
lret
xor
dec
cmp
sub
pop
xchg
clc
outsl
pop
add
jg
mov
scas
ds
mov
add
lret
jecxz
and
push
push
or
lea
jg
pushf
cmpsl
test
faddl
sub
pop
lods
adc
les
test
aaa
cmc
mov
cmp
shlb
jae
pop
add
imul
movsb
cmp
jl
bound
add
pop
dec
sbb
nop
into
or
push
and
mov
xor
fbstp
push
mov
xchg
cmp
mov
popa
das
dec
adc
gs
pop
sbb
lea
lcall
shrl
add
inc
fldt
mov
sub
xor
or
int3
aad
scas
mov
xorb
lods
lahf
cmp
mov
sbb
icebp
iret
dec
sbb
in
inc
scas
mov
push
pushf
scas
out
test
adc
push
les
jnp
inc
pop
cmp
mov
popa
xor
arpl
add
test
mov
adc
sbb
and
dec
dec
jae
and
das
clc
repz
movsl
daa
dec
jae
xor
flds
notl
sbb
xor
cmp
pop
xchg
scas
int
pop
mov
incl
pusha
mov
or
mov
sarb
xchg
or
loope
adc
lds
add
or
xor
and
jne
gs
jle
or
inc
dec
xchg
divl
adc
fldt
push
push
mov
adc
insb
and
out
sbb
xchg
xlat
shlb
mov
push
or
jo
lods
push
mov
adc
lret
add
mov
push
cwtl
add
lret
dec
xor
fildll
jbe
mov
or
pusha
sub
and
dec
jge
push
push
lods
xchg
jae
in
xor
mov
sbb
mov
mov
sti
xchg
pop
inc
xor
pusha
call
dec
int
lods
fldl
ret
xchg
mov
sub
rolb
sbb
out
fnstsw
test
add
push
cmp
shl
lods
ljmp
or
jae
gs
notb
jl
fcomps
adc
inc
mov
sbb
rorl
outsb
xor
out
imul
dec
in
inc
call
xor
hlt
std
push
or
dec
les
cmp
iret
nop
imull
adc
sub
mov
jmp
xchg
insb
mov
aaa
aad
push
push
pushf
dec
aam
cmc
fdivrl
mov
push
adc
mov
addl
popf
in
das
xor
jae
cli
ljmp
dec
out
test
jle
adc
xchg
jecxz
insl
push
js
sub
cmpsl
test
sbb
inc
stos
mov
dec
imul
push
mov
aas
jnp
xchg
pop
adc
lret
in
lea
sti
dec
sbb
add
mov
insb
dec
sarl
mov
or
data16
shl
cmp
pushf
stos
push
inc
mov
aad
hlt
push
fdivl
in
inc
cld
stos
shrl
xchg
imul
lret
mov
pop
lds
cmp
mov
in
es
cmp
popf
rclb
adc
pop
imull
imul
arpl
add
mov
push
dec
or
out
jnp
jle
std
sbb
adcb
mov
notb
outsl
cli
lcall
sbb
std
clc
mov
loop
mov
mov
push
scas
ret
movsl
popl
scas
mov
mov
adc
cwtl
mov
lcall
cmp
xor
aaa
scas
xchg
shl
call
jecxz
loopne
jge
aad
mov
movsb
outsb
inc
inc
dec
mov
dec
mov
repnz
ja
incb
iret
loope
icebp
pop
sbb
push
push
addb
imul
ret
jp
dec
mov
mov
mov
cmp
dec
push
mov
add
test
ret
adc
sub
aad
addr16
das
push
add
or
push
das
cld
pop
pop
in
jo
add
pop
test
ljmp
and
dec
push
out
xchg
aas
push
sbb
lcall
pop
lea
or
lods
pusha
js
lock
or
sub
mov
rclb
cmp
and
daa
jp
mov
cmp
push
pushf
std
push
adc
ljmp
adcb
rcrb
loopne
iret
ja
pop
ficomps
jle
je
mov
movsb
push
fwait
int3
mov
jne
or
test
out
int
jge
stos
notl
mov
out
stc
das
push
pop
into
lds
in
stos
mov
push
in
fcom
inc
mov
outsl
ljmp
inc
ljmp
jns
subl
and
add
pop
push
xchg
pusha
outsb
ret
cltd
lahf
jle
in
push
jne
sub
jg
pushf
mov
push
out
add
push
fsubrl
sbb
insb
xlat
mov
movsb
sub
iret
out
gs
or
sub
lcall
xchg
sbb
sahf
imul
xchg
pop
nop
repnz
add
cmp
int
mov
mov
adc
sbb
sub
insb
lret
out
xor
jo
dec
repnz
mulb
jae
push
fwait
or
lock
and
jl
sub
sahf
pusha
bnd
dec
cmp
test
aad
lock
iret
and
push
in
dec
stc
das
jl
pop
xor
add
inc
pop
dec
scas
in
dec
dec
mov
push
out
in
stos
adc
inc
mov
sbb
xchg
int3
dec
imul
insb
fstps
adc
inc
scas
aad
das
shl
gs
sarb
inc
or
mov
fwait
repz
xchg
sbb
inc
jae
xlat
fimull
add
ds
inc
sub
jnp
adc
mov
sarl
mov
fidivs
mov
jns
or
addr16
xor
xchg
cmp
int3
mov
test
in
push
cli
fdivrl
xchg
cmp
adc
add
insl
mov
outsl
stos
xor
inc
sbb
aas
push
mov
mov
push
bound
dec
shl
jecxz
ret
popa
mov
decl
pusha
testb
scas
loop
scas
xchg
cwtl
not
sbb
cltd
inc
mov
adcb
or
popf
js
dec
jb
ljmp
decb
add
adc
popa
shlb
call
push
ret
ljmp
cmp
mov
mov
loopne
les
xor
xchg
sub
xor
sub
imul
js
jns
push
sub
jnp
ds
mov
dec
xor
mov
sbb
mov
lret
jmp
mov
negb
mov
out
sbb
or
push
hlt
xor
or
mov
mov
testl
xchg
sbb
xor
sub
add
adc
mulb
jb
mov
scas
aad
xchg
pushf
push
fistps
mov
xor
or
push
or
out
daa
add
lret
insb
incl
push
and
adc
andl
out
shlb
ss
jl
popa
pop
inc
hlt
insl
and
jne
sub
push
xchg
sub
arpl
aas
adc
imul
cmpsb
xchg
jl
cmc
cmp
adc
lock
add
in
clc
fdivl
inc
inc
xchg
xchg
sub
ffreep
out
add
jns
adc
xlat
mov
pop
mov
xorl
or
jo
mov
shrl
inc
popf
sub
shr
or
nop
mov
adc
lahf
xorb
nop
jo
mov
mov
test
xchg
popf
nop
mov
mov
loope,pn
and
into
add
je
lret
or
push
clc
fldt
cmc
add
pop
iret
fisttps
xchg
and
jno
pop
mov
or
push
mov
xor
cmp
fdivrs
daa
push
shl
jae
call
ja
cld
and
adc
out
fs
mov
cli
jge
inc
test
xchg
inc
push
rorb
push
xor
stc
outsl
adcl
or
mov
int
ja
xor
xchg
mov
adc
pushf
inc
aas
test
inc
sbb
test
jae
das
mov
cld
adc
les
mov
sbb
push
lcallw
movsb
pusha
cli
xchg
jbe
xchg
gs
dec
jnp
fmul
cs
sbb
fwait
mov
adc
and
or
pusha
clc
xchg
adc
push
and
in
xchg
sub
push
rorb
xchg
dec
lock
je
jl
jl
shr
sbb
lret
mov
xchg
sub
sahf
mov
aaa
data16
aad
cltd
cltd
ss
push
add
inc
lods
call
jb
mov
adc
dec
add
adc
add
mov
mov
mov
mov
and
push
push
mov
cltd
and
subl
out
mov
xor
pop
scas
adc
test
and
fidivrl
pop
push
push
ret
gs
cmc
xor
push
aaa
pop
aam
add
shrl
xlat
leave
adc
xchg
cmc
jns
mov
loop
ret
adc
jg
xchg
aaa
adc
cwtl
xchg
sahf
xlat
call
iret
dec
lahf
dec
cld
cli
ljmp
inc
rclb
cmp
pushf
aas
enter
cmp
xor
sbb
and
pushf
iret
divb
xchg
xchg
mov
pop
decb
or
xchg
rorl
rcll
push
or
notb
mov
imul
outsl
sub
cmpsb
xchg
mov
push
adc
rclb
jo
mov
jmp
xor
ljmp
cmp
lcall
dec
popa
sarb
sbbb
popf
mov
push
push
add
xor
incb
and
insb
mov
fistps
imul
mov
sub
xchg
fldenv
fwait
sahf
ss
pop
mov
sbb
rcll
mov
cmpsb
in
push
rolb
add
ss
rorb
es
movsl
jno
and
push
xor
or
xchg
or
pop
lock
and
imul
call
mov
out
jo
inc
push
sahf
pop
push
and
shl
test
fxch
popa
test
fldt
mov
pop
push
mov
jo
shlb
sub
add
out
sub
shll
cmpsb
push
outsl
insb
sbb
rcrb
xor
out
gs
push
adc
cli
and
in
int3
rol
imul
add
jnp
mov
jp
fadds
sti
xchg
mov
inc
sbbb
push
and
pop
lret
pop
enter
repz
popf
rclb
fiadds
or
mov
sub
fsubp
mov
loopne
dec
js
in
aad
andb
add
movsl
jge
push
and
add
and
scas
adc
xchg
inc
out
jbe
sub
addr16
xchg
or
insl
repnz
xchg
std
aaa
xchg
es
leave
fsts
adcb
dec
rclb
mov
jle
inc
pop
jb
lds
and
pop
pop
clc
fdivrs
fisttpl
std
adc
jne
xchg
mov
sub
das
ror
rolb
jmp
and
cmp
ret
sarl
sub
data16
sub
mov
add
in
dec
or
mov
mov
jecxz
push
inc
pop
inc
dec
jl
mov
movl
adc
cmp
notl
cs
adc
mov
lcall
out
sbb
and
add
jo
nop
jnp
xor
pop
jle
pusha
sar
mov
add
push
call
cmp
les
js
jnp
sub
mov
lds
imul
xlat
xchg
jl
or
and
mov
js
cmp
fsubp
sahf
inc
add
loope
dec
lds
ljmp
imul
insl
hlt
push
jmp
add
sub
push
pushf
iret
fisubrl
xor
fmull
sti
pop
call
into
xlat
or
cmp
dec
call
pushl
repnz
aas
xchg
test
enter
or
jecxz
add
fwait
lcall
and
and
movsl
jns
mov
xchg
lods
or
or
mov
shlb
ret
arpl
push
mov
push
xor
out
push
and
dec
scas
divb
daa
mov
into
jb
fcom
adc
bound
in
xorl
xchg
add
stc
emms
js
ss
pop
mov
shlb
or
mov
add
xchg
adc
pop
lods
pop
inc
adc
mov
xor
pop
fwait
adc
add
insb
and
faddl
js
mov
cmp
mov
or
dec
divl
mov
subl
arpl
in
test
cmc
sbb
mov
pop
add
or
and
in
push
mov
mov
fxtract
js
sbb
adc
sbb
fcmovnbe
pop
inc
inc
mov
sub
lret
bnd
jno
mov
pop
xorl
inc
repz
push
icebp
mov
lea
mov
lds
fisubs
pop
adcb
hlt
shl
push
lret
and
jp
popf
mov
in
push
fsubrp
fisttpl
cltd
cmpsl
mov
push
sar
add
xchg
icebp
outsb
xchg
repnz
sub
lds
pop
mov
subl
out
aaa
push
js
mov
jns
arpl
sub
stos
adc
xchg
sub
adc
pushf
xchg
xor
repnz
jo
adc
jl
xor
push
pop
ljmp
mov
sti
fisubrl
lahf
loop
cmpb
inc
test
jo
dec
mov
xchg
xchg
push
inc
inc
jo
repz
dec
pop
pop
xor
fwait
loope
sarl
out
in
js
jle
mov
sub
push
cs
cmc
xchg
pop
stc
add
cmp
jl
pop
addr16
data16
in
sub
sbb
sbb
lds
adc
clc
fisttps
mov
movsb
iret
int
push
jmp
push
adc
add
inc
inc
jg
mov
push
pop
ret
outsb
int
xchg
test
or
sti
jnp
in
mov
pop
add
mov
cvtpi2ps
sar
push
movsb
add
cmc
cmc
and
mov
inc
out
rcrb
ja
lods
cli
mov
adcb
adcl
xchg
fdivs
inc
loope
mov
outsb
cmpsb
out
and
int3
mov
inc
outsl
fucomp
in
push
stos
fidivl
xlat
and
inc
stos
push
dec
or
xor
ret
aas
jbe
inc
push
ljmp
xor
in
addb
dec
mov
sub
xor
fidivrs
sete
jbe
movq
and
sti
sbb
mov
and
push
mov
das
push
lret
and
inc
cmpsb
jnp
ficompl
or
hlt
and
ss
popf
sub
jmp
nop
xchg
into
rclb
int3
insb
dec
mov
fcoml
shlb
xchg
and
dec
jmp
rcll
sti
dec
and
ja
shlb
add
sbb
pop
cmpsb
out
or
sahf
jno
aas
out
js
add
sbb
jb
pushl
push
arpl
xchg
loope
jle
push
cmp
in
mov
out
jecxz
ljmp
fisttpll
dec
inc
bound
mov
jae
push
ss
adc
sbb
pop
inc
pop
jo
sarl
popa
jnp
popa
inc
fldl
xor
in
aaa
in
or
sbbb
inc
xor
ret
mov
jge
mov
call
cld
and
xchg
notl
loop
cwtl
dec
shl
in
push
pusha
mov
pushl
cmp
mov
sub
xlat
mov
ljmp
ror
xchg
ret
mov
mov
out
inc
cmp
sub
jle
jecxz
jnp
inc
mov
jno
loop
fistl
xchg
jno
popf
imul
ljmp
and
xchg
sbb
xchg
cli
into
test
or
hlt
fldenv
iret
or
jae
lcall
icebp
dec
inc
stc
xor
addr16
es
or
ds
push
jg
scas
push
divb
mov
scas
mov
iret
out
cwtl
int3
sbb
popa
loopne
mov
lds
lea
fstpl
dec
inc
cmp
cld
enter
aaa
xor
arpl
jnp
sti
pop
adc
mov
mov
push
sti
mov
dec
xchg
loope
and
clc
ret
pushf
jg
dec
mov
int
gs
dec
hlt
mov
inc
lahf
push
pop
call
mov
xchg
push
xor
out
into
out
mov
jle
les
xor
add
test
or
sub
sub
adcb
dec
data16
pop
sub
sub
dec
hlt
sti
sti
je
jbe
call
mov
xor
xchg
push
daa
xchg
jbe
neg
mov
jns
push
aad
jg
rcrb
aaa
xchg
cld
pop
jno
inc
inc
lock
cltd
cmp
fwait
jo
fmul
cs
cvtps2pi
sub
add
popa
fisubrl
fnstsw
push
mov
daa
dec
pop
pop
arpl
add
mov
jb
dec
test
scas
xchg
adc
mov
out
push
dec
mov
pop
inc
push
pop
orb
lret
sti
out
fidivrs
inc
js
mov
pusha
pop
gs
movsb
sub
inc
push
shr
ret
push
add
dec
sarb
cmp
shlb
mov
pop
mov
push
push
adc
cmp
aaa
sub
insl
mov
xor
push
or
out
or
jbe
lea
xchg
add
xlat
js
jae
sub
mov
cmp
pop
lret
and
push
andl
jmp
test
sahf
or
push
pop
xchg
sbb
dec
dec
call
popa
add
mov
adc
sub
add
fwait
orl
stos
xor
icebp
jnp
call
lahf
sbb
inc
xor
fisttpl
or
lahf
pushf
shr
sub
jne
adc
ret
int3
ret
dec
loope
jg
orb
mov
dec
sub
xchg
mov
cmp
jle
xchg
icebp
mov
call
sub
fsubl
imul
xchg
sub
pop
cmp
leave
jmp
js
mov
cmc
rclb
test
mov
jmp
jne
sbb
nop
mov
inc
mov
fstpt
xor
ljmp
mov
movsl
xchg
pop
cld
pusha
cmp
inc
sub
leave
mov
out
jae
or
rcrb
sub
cmp
push
fwait
dec
les
fwait
mov
jae
imul
jmp
inc
cld
jnp
aam
cmp
push
lea
push
cmc
sar
or
cmpsb
mov
cmp
mov
sub
xchg
or
cmp
ds
testb
cmc
sahf
mov
shlb
push
out
xor
dec
sub
add
mov
jno
cmpl
adc
es
inc
sbb
imul
mov
xchg
sub
fcmovnbe
outsl
sbb
xchg
adc
idivl
data16
jo
cmc
insl
iret
xor
les
and
jb
fdivrs
add
clc
sbbl
adc
icebp
int
push
push
inc
push
enter
loop
mov
vpminub
jle
inc
lcall
mov
and
loopne
jnp
int
adc
lods
jp
js
mov
and
sub
lret
mov
pop
mov
cltd
div
aad
sbb
outsl
cltd
xlat
les
mov
ret
adc
push
pop
adc
push
bound
mov
jg
mov
scas
mov
aam
icebp
aam
pop
ret
push
xor
lods
inc
and
sti
orps
loope
dec
sbb
xor
daa
inc
js
jecxz
or
inc
test
stos
or
mov
arpl
sub
repz
mov
sub
cs
pop
jmp
cld
ljmp
loop
or
adc
mov
addb
std
cli
setge
mov
cmp
gs
out
loopne
push
fiadds
adc
lods
sahf
jns
outsb
mov
pop
loop
insl
dec
fldt
inc
mov
mov
nop
xchg
push
jle
and
jne
cs
fisubs
pusha
cmp
xor
sub
fs
push
hlt
cmc
sbb
std
incl
add
enter
outsl
fwait
sub
into
movsb
pop
or
shrl
mov
jmp
jno
jp
cmp
mov
subb
jno
outsb
loopne
mov
icebp
mov
mov
loope
test
int3
cld
es
mov
in
nop
jecxz
pop
fldl
negb
jmp
shlb
dec
and
mov
mov
insl
cmp
loop
addr16
mov
rorl
inc
popa
movsb
inc
es
out
inc
mov
inc
mov
test
xor
xlat
int3
xchg
test
cmp
in
into
enter
cmp
jge
data16
push
add
std
or
jo
push
rolb
xor
les
cwtl
push
dec
in
cs
pop
lds
shll
cli
and
and
xchg
mov
stos
imul
cld
popf
movsl
aaa
cmp
call
cmp
or
xor
mov
aaa
in
adc
adc
in
cmpsb
les
mov
mov
shl
lods
sbb
fwait
pop
ss
leave
pop
scas
aad
inc
aaa
into
out
neg
jecxz
idiv
dec
pop
mov
pushl
pop
pop
imul
sahf
aam
out
dec
and
stos
or
aad
fwait
imul
ret
ss
js
add
fwait
stos
nop
adcl
xor
ljmp
sbb
lods
xchg
xor
mov
adc
mov
aad
cli
xlat
xor
mov
aam
test
adc
mov
and
mov
repz
dec
ret
std
repz
roll
pop
sub
test
mov
push
in
sub
push
movsl
pop
sub
dec
or
or
push
imul
and
sbb
movsl
dec
jmp
mov
pop
xor
lods
jo
jae
cwtl
adc
mov
add
sub
fs
xchg
lret
mov
inc
cmpb
push
popa
leave
push
shll
gs
loope,pn
out
add
jmp
icebp
jecxz
lods
lret
pop
jbe
pop
jecxz
cmp
push
sbb
dec
pusha
out
in
adc
popf
fwait
xchg
mov
and
inc
dec
lcall
and
pop
lock
sub
lea
shrl
int3
cmp
add
and
adc
gs
and
inc
cmp
adc
jge
les
lret
and
xchg
mov
push
enter
dec
mov
jne
sahf
push
xor
jp
inc
icebp
sub
cmpsl
cld
ss
jns
pop
outsl
dec
xor
in
xlat
cmp
inc
push
cmp
pop
xlat
ljmp
add
data16
cmpsb
scas
jle
or
xchg
or
dec
pushl
insl
pop
pop
and
mov
jg
inc
int
xor
mov
out
icebp
inc
add
push
mov
leave
cmp
push
out
ret
push
mov
addr16
outsb
xchg
scas
xchg
push
mov
sbb
jge
fisubs
adc
push
xor
cmp
mov
pop
sbb
insl
mov
fildll
xchg
test
dec
pushf
in
adcl
in
insb
mov
ds
add
xchg
push
daa
or
or
rcrb
add
xor
cwtl
push
xchg
push
dec
ds
mov
inc
movsl
cmpsb
xor
or
adc
add
push
and
stos
mov
lock
push
inc
cmp
paddusb
push
mov
pop
pop
and
filds
adc
push
rol
push
cmpb
sahf
adc
push
inc
push
icebp
push
adc
int3
mov
dec
add
jno
xchg
jle
scas
mov
mov
push
inc
in
jne
dec
and
call
int
or
push
cmpb
ret
lret
fsts
xor
xchg
push
xchg
xor
xchg
aaa
jnp
in
cmp
mov
repnz
mov
sti
insl
rcll
rcrl
jno
inc
or
rcrb
cmp
jmp
arpl
push
inc
aas
jg
shlb
mov
xchg
mov
or
mov
cwtl
xchg
ja
inc
xor
or
and
adc
ret
cmp
inc
mov
mov
test
call
aas
bound
pop
pop
mov
xor
mov
icebp
mov
xor
daa
dec
add
jmp
lret
jno
sbb
xor
xor
clc
cwtl
ret
mov
sti
das
cmp
xlat
jno
ud2
push
jne
xchg
xorl
scas
cli
push
and
imul
je
movsb
repnz
enter
popf
in
mov
clc
bound
stos
mov
add
jns
lods
sub
inc
and
sbb
push
mov
repz
mov
add
mov
mov
in
xchg
test
push
or
mov
mov
sbb
nop
jg
ljmp
imull
adc
lahf
inc
xchg
and
pop
movsl
and
div
lahf
push
mov
sub
test
mov
sbb
mov
pushw
and
pop
mov
ficomps
push
outsl
xchg
hlt
fcom
xlat
push
nop
js
cmc
fstl
pop
add
arpl
std
imul
in
cli
mov
add
pop
dec
mov
sbb
dec
sub
lods
iret
loopne
in
es
iret
and
out
adc
push
pop
xlat
add
negb
imul
hlt
je
in
ret
add
push
or
pop
cmp
inc
pop
or
movsl
push
stc
test
jae
sbb
pop
mov
push
pop
sbb
push
or
adc
das
rol
sub
sar
lea
mov
adc
sub
fidivrs
insl
xor
pop
cmpsl
dec
mov
jbe
adc
fnsave
jl
sub
sahf
adc
frstor
enter
lods
push
inc
cmpsb
cltd
push
adc
rolb
popa
pop
push
push
pop
push
jecxz
in
dec
ret
test
adc
fildll
clc
sub
adc
cmp
pop
inc
mov
das
inc
mov
fcmove
sbb
mov
iret
out
in
ds
and
add
imul
add
cmp
or
and
mov
fisubrs
add
mov
imull
mov
push
fstl
jle
cmp
mov
aas
jle
mov
cwtl
lahf
xchg
pop
pop
fidivrs
es
mov
xchg
inc
sub
cmp
jbe
jns
add
cmp
js
arpl
movsb
lahf
loopne
fiaddl
lock
push
bound
sub
arpl
xor
push
stos
test
jmp
jo
pop
and
xor
insl
and
sbbb
les
cld
pop
xchg
lret
mov
stc
jnp
cmpsb
loope
ret
daa
pusha
sbb
or
cld
jmp
mov
pushf
mov
fwait
test
or
incl
in
or
sbb
in
shll
arpl
into
aam
add
imul
adc
mov
xor
lods
sarb
inc
sub
sti
mov
jb
mov
jecxz
loope
jo
scas
stc
fdivr
push
dec
push
jnp
cmpsl
or
icebp
mov
divl
insl
or
in
push
daa
out
adcb
and
inc
sub
xchg
pop
mov
lcall
imul
je
xor
cwtl
fucomi
pop
lods
jns
cmpsb
out
pop
test
es
xchg
jne
sub
jno
sahf
das
adc
pop
das
sbb
inc
out
sbb
xchg
push
dec
xor
daa
lcall
jle
stc
add
mov
es
fcomps
lea
sbb
loop
jbe
mov
or
icebp
data16
jne
mov
in
sub
jne
mov
pop
xchg
cwtl
cli
movswl
sub
orl
xchg
dec
std
or
xor
fidivs
shrl
mov
pop
lcall
je
daa
mov
xor
push
jle
call
cmp
or
insl
jp
mov
adc
adc
stos
push
push
mov
mov
jno
std
push
add
stc
imul
inc
push
add
imul
mulb
dec
int
mov
jne
cwtl
imul
insl
lods
adc
cmp
sbbb
xor
inc
or
sub
cmpsb
std
lret
in
push
dec
popf
sbb
adcl
add
fs
jae
outsl
mov
mov
xor
pop
out
push
insl
inc
sahf
test
push
cmp
xor
sub
xor
rcrb
push
lods
dec
mov
int
mov
or
push
and
mov
mov
adc
call
cli
xor
mov
mov
or
xchg
add
int3
or
mov
arpl
dec
mov
cmc
dec
jge
mov
in
daa
cmp
push
in
subb
sub
mov
clc
in
mov
aam
repz
xor
sbbb
sbb
test
push
mov
mov
sub
sahf
aam
insb
arpl
iret
test
stos
lcall
shll
mov
popf
jl
rol
popa
mov
out
in
add
jmp
and
lods
pop
das
sub
mov
mov
or
mov
popa
insl
push
orl
int
andl
dec
jle
cltd
iret
push
ljmp
sub
roll
jl
jl
cmpsb
negl
insb
lock
int3
dec
cmp
xchg
lret
add
insl
or
mov
mov
push
out
jns
jle
cmp
xor
shr
scas
push
mov
mov
sub
fsubrs
jnp
fbld
pusha
into
mov
cmp
popf
mov
xor
dec
sbb
push
inc
repz
out
addr16
jno
or
push
outsl
jmp
mov
cmpsb
mov
cmp
mov
testb
rcll
fisttpl
nop
jmp
out
or
dec
mov
push
dec
xchg
cld
and
aad
mov
inc
adc
shl
cmp
mov
mov
jge
sbb
pop
push
leave
insl
xchg
or
mov
dec
jmp
loope
sub
out
test
mov
xchg
inc
in
jg
test
aaa
jbe
loopne
and
push
sti
inc
call
or
and
jno
push
cmp
mov
adc
mov
out
repz
imul
xchg
das
into
loop
stos
push
sarl
popf
cmpsl
pop
and
adc
lea
push
dec
sbb
cltd
mov
ffreep
sbb
adc
std
sub
testl
pop
loopne
push
or
lcall
ljmp
enter
inc
mov
addr16
push
rolb
push
cmp
movsb
push
dec
lds
mov
scas
adc
gs
int
std
lods
loop
call
mov
cmp
mov
outsb
cwtl
cmc
sbb
push
cmc
mov
es
cmp
inc
xchg
or
dec
icebp
push
lods
and
inc
cld
cmpsb
aaa
ret
shrb
xchg
cwtl
test
jae
popf
xor
add
add
dec
sbb
pop
into
mov
dec
pop
jns
and
movsl
int
push
pop
addr16
gs
cs
pop
mov
outsb
adc
addl
hlt
popa
mov
aaa
cmpsb
outsl
mov
nop
popf
push
sub
lret
jno
movsl
xor
ret
mov
insl
in
push
in
cltd
sbb
cmpsb
cwtl
xchg
lret
negb
add
stos
dec
and
ss
fsubrs
scas
imul
xchg
add
xchg
out
dec
cmpsl
mov
cld
add
or
add
pop
cmpb
pushf
stc
pushf
xchg
aam
mov
mov
mov
or
aas
in
in
cmp
pop
loope
and
dec
mov
jo
out
or
dec
loopne
lods
adc
adc
xor
xchg
dec
loopne
push
call
repz
inc
sub
scas
addr16
stos
insl
fists
rcll
fwait
js
push
xor
fisubrs
cmc
xor
sub
jecxz
icebp
cmp
cwtl
cmp
mov
push
movsb
pop
outsl
insl
add
cmc
mov
sti
fdivs
add
dec
mov
sub
dec
sub
xchg
sarb
jl
mov
sbb
dec
inc
xor
dec
js
popa
fisttps
mov
inc
xor
js
stc
popf
std
test
pusha
test
fists
mov
mov
mov
das
outsb
outsb
push
and
insb
adc
lret
daa
or
in
sarl
pop
xor
pop
or
in
push
iret
dec
mov
gs
mov
push
inc
rol
out
imul
xor
pop
pusha
or
push
pop
sub
or
mov
pop
sahf
push
mov
lret
rclb
push
outsb
pop
xchg
daa
es
mov
cmp
push
loope
add
jle
popa
stos
sub
mov
lods
jge
insb
xchg
test
test
rcll
out
cmp
dec
add
fsubrl
fidivs
mov
jl
jmp
jg
sbb
cmpsb
dec
sbb
add
shlb
in
xchg
ja
push
cmp
jmp
leave
fcmovu
lahf
or
sbb
mov
in
fwait
xlat
daa
movsl
dec
push
ds
pop
and
adc
ficoml
xchg
push
or
dec
mov
jge
adc
bound
adc
popa
cs
popa
std
movsb
adc
mov
stc
pop
push
adc
fisubrl
dec
scas
subb
mov
xchg
clc
out
push
fidivl
mov
sub
outsl
scas
mov
stos
add
movsb
push
mov
jnp
mov
adc
js
aaa
lea
jmp
xchg
cmp
adc
jno
das
sarl
repnz
sub
lcall
inc
rorl
popa
push
pop
test
rcl
aaa
lock
cli
fisubrs
and
int3
dec
dec
and
out
in
stc
xor
loope
push
notb
pop
lahf
scas
add
imul
bound
imul
sbb
insl
dec
stos
mov
mov
jg
push
and
sarl
fldenv
fcoml
or
mov
arpl
mov
mov
cmp
mov
xor
push
push
or
jo
add
xchg
mov
add
dec
repz
dec
xor
dec
icebp
ret
sub
mov
lods
jle
inc
jne
mov
push
sbb
xor
fidivrl
sti
add
add
sahf
enter
jae
mov
jle
xchg
sbb
fstpt
subb
fistl
pop
ret
dec
xchg
mov
sarl
fcmovb
fwait
int
arpl
ss
xor
cmp
push
mov
dec
push
pop
mov
jl
and
in
push
loopne
lods
xor
jb
notl
cli
push
aas
adc
jmp
jae
inc
mov
enter
pop
add
fldt
jp
outsb
sbb
outsb
sbb
xrelease
push
or
jbe
push
cmc
mov
dec
push
mov
jge
ss
rcr
pop
aam
insb
sbb
jl
mov
pop
dec
mov
in
add
mov
flds
fsubrs
and
pusha
jge
lds
std
mov
loope
cwtl
insb
insl
gs
and
and
and
mov
repz
add
fucomp
jl
mov
sbb
push
rsm
pop
cmc
popa
and
aam
sbbl
test
std
cmp
cmpxchg
mov
cmp
sub
jne
outsl
xor
xchg
aad
fadd
push
fwait
shrb
or
jae
ja
xor
and
jae
xor
das
shll
stc
enter
and
inc
ret
bound
push
ret
fnstcw
add
mov
cmp
cmpsl
loop
sbb
lock
aaa
mov
ljmp
lret
int
outsl
inc
movsl
pop
mov
lods
mov
xchg
mov
sub
jle
mov
iret
icebp
aam
xlat
adc
add
inc
jns
test
inc
add
enter
out
je
leave
ja
and
and
iret
psadbw
cmp
mov
add
sub
mov
fistpll
cmc
enter
fadd
rcl
mov
sbb
jmp
xchg
out
xchg
pop
popa
pop
int3
icebp
repnz
dec
sub
pop
rclb
mulb
outsb
inc
insl
xchg
test
push
pop
xor
fimull
cld
fstps
pop
push
aad
fnstcw
mov
fcomps
or
sub
dec
xchg
ss
and
and
int3
adc
pop
sub
xchg
in
jle
out
jmp
pop
jecxz
jmp
mov
fsubrl
cmp
xchg
arpl
fdivrl
leave
mov
pop
repz
cwtl
add
pop
fistps
shll
adc
mulb
inc
lret
push
push
aaa
push
xlat
rcrb
mov
out
cmp
jg
popf
stos
xchg
inc
jno
xor
and
enter
popf
repnz
jmp
in
mov
or
in
pop
jne
es
pop
xchg
push
adc
adcb
cli
xor
mov
adc
push
jl
jnp
sub
int3
fwait
push
setbe
in
push
add
sbb
mov
shlb
int3
bound
adcl
lahf
jl
jecxz
inc
ret
mov
push
cmpsl
push
mov
test
nop
lret
je
ficoms
into
dec
xchg
jmp
sub
imul
xor
rorb
sub
jbe
dec
jmp
das
add
xor
push
pusha
xchg
into
cmp
out
mov
popa
incl
test
stos
xchg
sub
jnp
xchg
xchg
nop
mov
mov
arpl
or
sub
mov
out
xor
outsl
test
dec
xchg
es
vmovups
sti
in
sarb
xorb
cmpsb
sbb
mov
fwait
mov
movsl
aam
add
incb
shrb
cmc
incb
nop
dec
int3
push
jae
sbb
ffree
leave
mov
sbb
jnp
lea
and
and
repnz
jb
fidivrl
ds
jo
cmp
jecxz
pop
lods
xor
sbb
mov
lds
lret
inc
xchg
adc
sub
loope
fcompl
packsswb
jns
fisubl
push
or
add
jae
in
imul
jmp
aad
flds
mov
jno
or
push
stos
mov
ss
and
mov
rorb
adc
mov
push
cmp
inc
leave
jmp
or
test
enter
lahf
or
and
mov
sbbl
dec
test
jbe
and
mov
mov
test
xor
xchg
or
pushf
xchg
nop
rcll
pusha
mov
push
mov
pop
and
sub
movsb
int
sbb
mov
movsl
pop
sub
and
mov
into
out
loope
xor
cmp
movsl
jae
loope
dec
or
testb
sbb
add
into
xor
decl
lods
js
fcmovu
ficoml
mov
mov
inc
sbbb
push
jecxz
std
into
mov
push
scas
and
les
std
loop
loopne
clc
push
mov
adc
notl
in
and
xor
mov
sub
cmp
mov
cmp
xchg
xchg
subl
cmp
aad
xchg
hlt
loope
stos
sub
rcl
pop
mov
sbb
or
and
stos
jmp
jo
or
mov
xor
mov
push
add
stos
das
mov
pop
fucomp
jg
movsb
mov
jmp
aam
int
aam
mov
popa
ss
ljmp
and
ss
and
xor
pop
or
xor
jne
fldenv
xchg
jae
dec
xchg
aam
push
std
push
lcall
jo
aam
adc
fs
test
xor
fistps
push
mov
cmpsl
mov
cmp
pop
insb
sbb
and
sahf
shrl
pop
cwtl
mov
cld
test
mov
jl
cmp
and
cmp
jg
mov
add
xor
cmp
push
fidivs
loope
in
icebp
or
sti
mov
xor
xor
les
add
jns
mov
mov
loopne
test
scas
dec
jmp
push
outsb
and
mov
push
ss
cli
dec
popf
bound
jmp
add
sub
jno
in
dec
jecxz
pop
out
lds
out
xor
or
notl
sub
popa
inc
aad
fidivl
inc
mul
es
dec
push
jmp
repz
cmp
cs
xor
ret
lods
dec
cmpsb
cmp
sbb
movsb
mov
movsl
test
movsl
fs
cmp
push
lods
aad
out
fdiv
mov
testl
clc
icebp
leave
daa
cmpsl
or
lods
in
out
popf
rolb
adc
pop
aam
pop
notl
fcompl
iret
push
fstpt
adc
jmp
xchg
ret
xor
jae
jns
adcb
sbb
lret
pop
sub
cmp
mov
daa
xor
and
js
cmp
daa
std
dec
xor
adc
inc
sbb
je
lahf
test
pop
jp
enter
je
jo
mov
cli
adc
setge
shll
lock
mov
xor
or
sbb
inc
cmp
xorl
pop
dec
push
ljmp
out
cmpsb
adc
insl
hlt
and
mov
push
js
int3
or
sar
imul
repnz
lods
mov
psubusw
push
push
jg
lods
mov
rcr
in
popa
push
fcmovnbe
add
dec
mov
pop
adc
push
pop
cs
loopne
and
xor
bound
sub
imull
push
daa
imul
loope
and
mov
add
and
jmp
or
dec
dec
sti
push
popf
add
test
test
lds
cmp
int
lock
jl
mov
cmp
add
jae
pop
je
cmp
inc
jle
stc
ror
insl
pop
out
rcl
js
pop
lods
fisubrs
popa
cli
dec
pop
std
cli
popf
mov
push
rcrl
jb
xchg
and
subl
sub
cmp
push
popa
loop
jbe
ss
and
mov
jg
cltd
cs
jmp
lods
push
dec
mov
cs
push
mov
jae
in
dec
adcl
jecxz
jns
lea
add
xchg
shll
iret
cli
addr16
pop
jp
jge
lcall
push
fiadds
inc
xor
ret
xlat
mov
dec
xlat
add
out
shll
sbb
adc
jmp
mov
xchg
xchg
testl
inc
xor
scas
ficoml
fwait
pop
jmp
push
add
xor
aad
xor
dec
pop
loope
ret
cmp
cwtl
push
cld
adc
jmp
cwtl
mov
sbb
loopne
sahf
xlat
push
mov
jecxz
ljmp
ljmp
lods
fists
imul
and
ds
ret
scas
dec
jl
dec
data16
xor
sub
iret
pop
add
imul
push
test
out
sbb
xor
dec
xor
dec
and
movsl
pop
aas
cmpsb
ror
int
jmp
adc
or
insl
je
xchg
outsb
js
sbb
leave
lock
mov
std
inc
dec
pop
adcb
and
pop
hlt
imul
xchg
test
sarb
adc
adc
add
in
sti
fcompl
repnz
mov
or
fimull
xor
aad
fs
dec
cmp
addr16
leave
inc
imul
inc
jmp
pop
cmp
into
jp
fnstenv
shrl
stc
nop
loopne
sbb
in
pop
test
outsl
adc
pushf
jle
shlb
loope
icebp
add
jb
lret
hlt
rcrl
jnp
xor
xchg
mov
andl
jp
outsb
dec
popf
dec
cmp
mov
int
jbe
sbb
and
imul
aas
mov
jle
push
sub
xor
jge
jo
jns
lods
ds
jecxz
xchg
outsl
call
mov
dec
outsb
cwtl
add
in
push
repz
data16
dec
cmp
div
enter
jbe
pop
loop
mov
mov
push
pop
xchg
pop
push
xchg
pop
cmp
js
rcrb
cmpsb
push
push
xchg
repz
xchg
not
sub
setne
mov
stc
mov
std
mov
lock
push
xchg
in
jns
and
cwtl
fs
mov
mov
adc
sarl
test
xor
insl
inc
jge
adc
push
xchg
push
sub
push
dec
pop
movsl
cmpl
inc
shll
repnz
add
jecxz
imul
outsb
dec
mov
fdivrs
dec
xchg
sahf
pop
mov
mov
popf
dec
add
arpl
jne
adc
adc
scas
xchg
and
in
sbb
mov
pop
adcl
mov
jle
and
lea
sbb
ljmp
add
aad
sbb
xlat
and
push
inc
mov
or
popf
scas
insb
adc
vmulpd
jmp
push
js
add
add
jp
inc
fistpl
gs
inc
je
adc
mov
jo
aad
cmpsl
das
movsb
in
inc
sub
sbb
sti
mov
fistps
mov
out
arpl
pop
cmpsb
xabort
lret
dec
js
enter
into
inc
repnz
call
jbe
movsb
jnp
xor
scas
mov
sub
inc
push
sub
jbe
jae
push
into
gs
das
push
pop
icebp
jp
push
aam
push
lods
cmc
xor
push
sbb
add
loope
xchg
jo
addr16
data16
das
pusha
sarl
test
mov
sarb
push
popa
sub
cmp
rol
dec
les
fbld
sbbl
or
mov
push
xchg
jmp
in
lods
jb
mov
repnz
mov
mov
pop
adc
leave
leave
std
loopne
inc
push
nop
mov
inc
xchg
stos
xchg
xor
mov
push
push
fnstenv
in
add
adc
loop
adc
rolb
loope
jbe
adc
push
and
test
sub
push
sbb
cs
cmp
push
adc
pop
mov
ret
test
sbb
jno
mov
sub
lret
ror
std
into
add
add
std
ss
pusha
data16
jp
jbe
xchg
adc
mov
dec
lods
or
in
lahf
push
xchg
imul
or
rcr
nop
cmp
and
orb
pop
data16
xor
enter
mov
inc
sti
jecxz
movsl
push
pop
test
push
insb
lret
lods
je
loope
and
or
add
sub
cmp
sbb
test
xchg
cmp
fldl
frstor
repz
out
cli
cmp
xor
loop,pt
jnp
jb
hlt
inc
fwait
sub
shr
jne
gs
sub
js
insl
fnstcw
imul
test
mov
mov
negl
ret
lret
outsb
addr16
mov
hlt
in
insl
cmp
das
or
pop
and
mov
inc
jg
jmp
imul
aad
dec
es
std
mov
ret
and
insb
clc
mov
mov
outsb
popa
fistpl
sub
jbe
sbb
cmp
imul
outsl
pop
scas
or
ja
pop
ja
mov
inc
sub
popa
sub
jbe
xchg
pusha
adcl
scas
stc
gs
daa
lds
in
sahf
inc
gs
xor
insl
pop
sbb
add
or
adc
shll
rolb
xchg
shll
idiv
data16
test
mov
test
gs
xchg
clc
outsl
xchg
ret
xchg
lea
sub
jle
and
mov
aaa
push
pop
inc
lea
adc
pop
sub
sub
call
out
lcall
dec
cmp
xchg
pop
mov
iret
and
callw
xor
mov
sbb
sbb
arpl
out
adc
dec
cmp
es
shll
in
fwait
imul
or
and
dec
mov
push
out
or
inc
push
daa
stos
push
lcall
mov
sub
jne
sbb
fwait
lret
fcmovu
and
push
data16
jo
push
mov
adc
mov
jl
adc
je
dec
xor
sti
sub
sahf
and
or
or
clc
pop
js
scas
cmp
pop
push
sub
add
lahf
xlat
mov
loopne
hlt
sbb
xchg
or
scas
std
inc
jno
inc
out
xchg
sbb
dec
mov
lods
mov
xlat
bound
inc
imul
jecxz
push
pop
testl
and
cmp
or
jno
lock
faddl
in
pop
pop
lcall
push
iret
xor
inc
rcrb
or
add
ja
aam
lea
call
insb
pop
mov
lds
stc
xchg
stos
in
leave
jno
lret
fcmovbe
rclb
push
cwtl
xchg
hlt
push
incb
mov
psrlq
es
clc
xlat
add
push
mov
cmpsb
in
outsl
fisubrl
insl
imul
loopne
inc
push
dec
fisubl
dec
jbe
andl
rcrb
xchg
pusha
cld
jmp
insl
scas
push
cmp
fwait
movsb
ud1
cs
sbb
and
sahf
sub
inc
jl
jg
fcoms
push
fninit
icebp
push
in
cld
push
test
ljmp
lods
bound
scas
lods
xchg
or
sbb
push
jnp
ret
mov
test
jecxz
sbb
mov
jb
loopne
push
jmp
or
jno
and
fisttps
adc
pop
jo
mov
cmp
popf
test
rcll
es
adc
maskmovq
imull
mov
int3
fs
in
push
or
sbb
xchg
rcl
stos
ffree
and
sub
xchg
imul
addr16
push
pop
push
or
int
xchg
xchg
jp
out
out
push
test
fwait
pop
mov
xor
mov
inc
xchg
psllw
dec
inc
cs
nop
mov
or
xor
jge
inc
and
add
decb
mov
cmp
sti
cmp
dec
dec
insb
out
xchg
dec
aaa
scas
scas
shr
imul
out
jo
jl
cli
stos
sub
dec
sub
cmp
inc
pop
ja
cmc
adc
sti
adc
cmp
dec
sbb
in
cmc
fucomp
out
aas
repz
cmp
push
pop
push
pop
cmp
mov
and
mov
cld
mov
xor
std
stc
aam
push
icebp
leave
adc
fnstsw
dec
stos
cmp
inc
pop
divl
jb
xchg
push
lea
movsl
xor
mov
pop
jo
lock
mov
and
sbb
ret
test
mov
int3
cltd
out
jmp
mov
aam
ret
jae
xor
shll
push
mov
sub
enter
mov
sub
dec
jbe
movsb
es
rclb
cmp
scas
fldcw
dec
mov
mov
leave
sbb
or
cmpsl
ja
mov
push
xchg
mull
and
push
daa
fcoml
and
or
or
pusha
adc
outsb
in
and
ljmp
mov
xchg
nop
nop
pop
mov
dec
mov
aad
xchg
dec
in
cld
movhps
dec
mov
and
mov
lret
dec
pop
test
xchg
cli
and
dec
adc
leave
std
sti
jbe
bound
ret
test
dec
fs
push
ljmp
ljmp
sti
imul
pop
inc
mov
sbb
pop
adc
sarl
aad
add
rcll
andl
push
out
mov
out
aad
addb
mov
in
mov
xchg
test
enter
loop
jp
mov
cmc
leave
pop
fsts
mov
rorb
enter
loope
rolb
mov
sub
fimuls
jae
cmc
in
movl
mov
in
outsb
push
dec
fcmovb
adc
push
lods
cmpsb
call
cltd
ret
jno
add
fdivs
jbe
roll
push
jle
clc
mov
sub
pop
aaa
aad
lahf
cmp
sbb
or
in
xorb
pop
mov
dec
addr16
xchg
push
jnp
add
and
shlb
outsl
xor
push
xchg
sub
bound
mov
cld
cmpsb
mov
cmp
pop
lds
into
sbb
dec
pop
jecxz
movsb
shll
and
mov
mov
push
jae
packsswb
jecxz
mov
cltd
xchg
imul
repz
movsb
pop
fwait
mov
popf
sbb
fmull
push
fistpll
test
push
adc
insb
bound
and
sbb
rclb
aad
ret
iret
and
adc
push
xchg
xchg
inc
xlat
push
rclb
out
dec
push
cmp
fld
in
cmp
or
inc
inc
sbb
sub
std
cltd
pop
imul
addl
push
pop
lcall
push
icebp
fs
mov
adc
decb
out
inc
inc
add
mov
stos
aad
scas
pusha
jl
xor
pop
std
and
mov
pop
cwtl
adc
insb
mov
cltd
jmp
mov
mov
dec
imul
xchg
push
xor
dec
mov
sub
inc
xor
mov
sub
jmp
mov
enter
repz
xchg
inc
addb
hlt
dec
pop
and
das
ror
pusha
jne
test
inc
cmpl
xor
push
lds
bound
fmuls
adc
test
ja
push
out
and
hlt
mov
ljmp
jmp
jle
or
push
insl
movsl
dec
movsl
inc
pop
push
mov
pop
add
jmp
shl
shrb
jle
call
sub
inc
and
jmp
dec
rorl
and
sarb
into
lret
add
lock
cmpsb
fldcw
aas
sbbl
xorl
stc
mov
in
mov
loopne
cld
test
iret
mulb
shll
xchg
je
mov
push
cwtl
outsb
mov
lahf
ss
das
or
daa
cmc
or
xor
xor
daa
cmpsl
jbe
rcll
gs
adc
movsl
adc
add
fcomps
in
out
cs
mov
add
xchg
inc
xchg
sub
sub
insl
mov
loop
negl
test
icebp
dec
dec
cld
sbb
andl
xor
mov
lret
ror
cmp
mov
mov
movsl
jge
mov
loop
sbbb
inc
or
popa
mov
mov
pusha
es
outsl
bound
imul
fwait
test
lcall
mov
mov
cld
cwtl
sub
cmpb
jbe
mov
daa
imull
cmp
cs
lods
out
push
aad
and
push
push
dec
jnp
stos
mov
enter
shlb
pop
xchg
mov
fidivrl
jnp
mov
pop
stos
xor
clc
sub
fdivs
inc
mov
xlat
lods
rcrl
cmp
xchg
scas
pop
mov
roll
dec
or
pusha
fildll
lret
scas
lret
shlb
pop
pop
in
iret
inc
popl
push
adc
dec
push
mov
outsb
sub
mov
inc
sub
dec
and
cs
test
xchg
inc
out
nop
cmp
sub
xorb
cmp
cmp
jne
mov
lods
mov
mov
cmp
xor
xor
jb
xor
push
and
jnp
pushl
stc
pop
inc
test
mov
out
pop
sub
sub
aam
ss
out
jo
add
dec
cwtl
jmp
or
add
inc
lods
int
ret
out
push
loop
lock
repz
aaa
pop
xchg
cmc
pop
cmp
ss
in
pushf
lds
jne
mulb
push
inc
mov
movsl
adc
ror
dec
in
add
out
xchg
jecxz
sbb
jae
xchg
pop
nop
cs
out
pop
inc
scas
pop
mov
ret
mov
stos
sub
xor
sbb
andb
pop
or
ljmp
xchg
xchg
or
scas
pushf
test
scas
pop
xchg
inc
hlt
inc
rcrb
push
out
mov
xor
ds
subl
out
in
shll
int
hlt
addl
mov
cmpsl
pop
pavgb
pop
mov
add
popf
inc
js
jb
push
fsts
ret
mov
inc
dec
dec
fdivl
cmc
in
fisubl
mov
xor
inc
stos
cli
sbb
daa
pop
sub
and
push
cltd
cmpsl
xorb
nop
mov
sub
xbegin
insb
sub
cwtl
sub
dec
dec
daa
out
cmp
je
xor
ret
les
stc
mov
mov
loop
sahf
repnz
mov
mov
mov
push
out
push
jbe
out
cs
lahf
les
pushf
dec
out
cmp
cmp
lock
ret
and
lcall
xchg
in
xchg
xor
sub
das
movsb
lret
cmc
ret
repz
into
push
lods
out
inc
das
jle
leave
scas
inc
dec
scas
popw
add
lds
push
ja
push
sbb
imul
aas
lea
outsl
mov
sti
mov
es
lret
or
adc
mov
mov
pop
mov
sub
mov
mov
out
in
and
pop
push
sbb
inc
mov
pop
sbb
mov
pop
outsb
shl
gs
jge
repz
notl
sbb
pop
js
push
jle
or
mov
imul
sbb
add
lds
push
out
add
push
test
mov
inc
out
sub
loopne
scas
and
retw
in
inc
outsb
cmp
jns
inc
out
rolb
and
setns
daa
into
ds
or
push
lcall
mov
xchg
push
in
inc
incb
es
inc
push
mov
xchg
lds
sbb
push
inc
insb
xchg
sbb
add
dec
inc
sbb
sub
add
lcall
repz
ss
lods
push
or
push
int
gs
cld
jp
push
add
mov
mov
mov
outsl
add
int3
fimuls
jnp
sbb
xchg
aaa
inc
pop
pop
insb
mov
bound
ss
fisubs
dec
mov
jns
xlat
ss
lret
and
jae
mov
idivb
lods
or
int3
fwait
adc
test
loopne
in
jnp
clc
cmpsl
loop
lcall
pop
das
jl
xor
in
pushf
iret
out
jb
and
mov
and
into
xchg
cli
pop
mov
pop
cmpsl
inc
and
mov
repnz
fisttps
mov
sbb
fstps
in
mov
mov
ds
pop
xchg
jb
data16
insl
stos
xor
inc
xchg
loope
sub
jle
sbb
cmc
dec
cli
subb
push
jnp
or
jmp
mov
jg
in
dec
ret
mov
xlat
orb
or
adc
xlat
pop
pop
adc
mov
cmp
inc
lods
rolb
sbbl
fwait
xchg
jp
push
popa
ljmp
mov
rcrl
fisubrs
push
into
js
xchg
cmp
or
xchg
cwtl
adc
inc
fdivrl
mov
dec
and
xor
ljmp
test
jl
test
in
rorl
ret
sub
mov
mov
xchg
cmp
adc
fwait
clc
scas
and
push
and
pop
out
jg
insb
mull
inc
mov
cmp
test
or
fiadds
xchg
xchg
jb
add
lret
jnp
hlt
fsqrt
inc
dec
popf
jle
xchg
jbe
lods
jl
cltd
sbb
mov
sub
movsb
inc
mov
out
inc
adc
shrb
sub
stc
call
fcomi
dec
inc
push
sub
adc
cmp
ret
in
test
or
orl
pop
xchg
in
dec
dec
mov
icebp
cmp
sub
add
movsl
or
cld
in
movsb
sarb
inc
mov
jg
inc
insb
push
aad
xor
push
fildl
in
xchg
xchg
mov
jno,pn
cmp
jae
addb
or
or
out
ljmp
inc
inc
adc
cmp
loop
call
test
push
mov
dec
shl
mov
cld
ficoml
dec
sub
sbb
mov
inc
add
xor
fcmovu
iret
or
bound
jmp
flds
xor
cmc
cli
push
dec
add
inc
fcom
push
or
enter
fmuls
dec
sarl
ffree
movsl
ror
sti
push
aam
das
fisubs
dec
in
loopne
cmp
xchg
test
mov
in
cmpb
outsb
push
das
xchg
lahf
adc
cmpsb
adc
lret
jae
ss
jg
or
cmc
icebp
test
push
mov
icebp
pop
xchg
push
push
scas
cld
push
loop
pop
stos
add
out
xor
dec
mov
lods
xor
mov
dec
add
jo
lahf
pushf
cvtpi2ps
or
add
call
int
pop
or
loop
subl
cmp
mov
addr16
and
and
xchg
popl
shll
scas
and
add
insl
jnp
sbb
jae
mov
push
jl
add
inc
xor
cwtl
clc
in
push
adc
jae
aas
sbb
pushl
xchg
mov
mov
mov
mov
cwtl
not
jg
lret
mov
fnstsw
cmc
push
sti
cmp
mov
jno
adc
cmp
and
daa
mov
out
jno
sti
leave
jb
cmp
mov
fsubrl
xchg
jl
cmp
pop
or
xchg
xchg
mov
movsl
sbb
push
and
loope
push
xchg
nop
pop
xor
lret
shrl
pop
xor
shlb
xlat
push
add
push
loope
mov
imul
fcoms
je
addr16
pop
cmp
shl
inc
test
inc
adc
daa
dec
pop
mov
in
push
rcr
mov
push
pop
mov
cmpsb
lahf
icebp
outsb
and
dec
mov
push
cli
shl
clc
ret
xchg
out
dec
sbb
negb
fisubs
imul
and
imul
sbb
arpl
sahf
daa
lret
clc
into
pop
xchg
dec
insb
mov
add
stc
imul
add
inc
aaa
mov
pop
inc
jbe
push
movsl
bound
nop
gs
dec
pusha
sti
jle
mov
lock
mov
xor
push
mov
icebp
inc
push
mov
enter
in
popa
pop
cld
fwait
stc
test
pop
cmpsl
lcall
sbb
sub
orl
add
inc
cmc
insl
popa
mov
dec
sub
xlat
divb
mov
imul
add
test
inc
xchg
fists
push
lea
jb
inc
cmp
cld
and
lret
xchg
xchg
mov
jge
or
add
jae
pop
mov
or
dec
pop
movsb
adc
leave
addb
xor
out
xor
sbb
outsb
cmpsb
mov
iret
adc
aaa
jbe
push
lret
jne
rorl
stos
push
mov
jo
or
aam
add
cmpsl
mov
jmp
mull
roll
out
shlb
out
push
sub
xchg
and
shlb
ret
lcall
insl
fs
dec
hlt
scas
dec
fnsave
push
dec
lods
push
sub
loope
ss
jl
clc
mov
xchg
push
lods
call
aam
out
xchg
in
pop
mov
into
or
cmp
aaa
in
loopne
stos
sbb
cltd
dec
adc
cmp
dec
lea
mov
loope
xchg
sahf
sbb
cwtl
pushl
sbb
negb
push
iret
scas
lods
xor
xchg
jbe
and
add
cmpsl
stos
xchg
dec
xchg
mov
int
leave
push
popa
mov
mov
xor
cld
push
push
push
fs
notb
xchg
pop
pop
xor
ss
sarl
cs
fadds
xor
push
xchg
add
mov
insl
scas
inc
push
push
jbe
dec
sbbl
cwtl
clc
mov
fcomip
fistpll
hlt
mov
pop
xor
add
sub
sub
inc
es
stc
pop
push
jne
loopne
imul
dec
notb
std
mov
into
sbb
das
and
push
repz
cmp
inc
fdivr
lods
dec
xor
pop
inc
add
pop
pop
clc
xor
add
mov
and
js
fdivp
inc
mov
ds
out
in
sub
sub
dec
cmp
mov
or
xor
or
lcall
imul
aas
mov
adc
adc
inc
pop
movl
scas
repz
cwtl
insl
pop
test
repz
cmp
fistpl
pop
test
cmp
jbe
sub
sar
sub
pop
std
clc
mov
arpl
xor
pop
pop
dec
call
pop
jecxz
imul
fmul
fcmove
dec
jge
test
icebp
cmp
inc
inc
xor
daa
dec
xchg
test
out
mov
ljmp
mov
mov
inc
inc
jne
aad
mov
adc
icebp
dec
ss
pop
mov
or
int3
cmp
stc
stc
add
xor
inc
pusha
mov
into
mov
imul
mov
and
cmp
or
xchg
out
lea
or
jbe
cmpsl
jmp
push
mov
or
cmp
es
cmp
test
jns
sub
test
mov
mov
daa
jge
mov
roll
arpl
test
push
in
jge
fdivl
push
in
dec
int
inc
jle
fcoms
fwait
jnp
mov
jns
jo
ljmp
sbb
ret
mov
sbb
cwtl
call
sub
in
cmp
add
scas
repnz
dec
inc
movsb
cmp
push
jle
or
out
fnsave
mov
out
lock
fldt
dec
daa
jl
adc
aas
incl
xor
leave
cs
inc
aam
call
jp
pop
cli
and
icebp
dec
leave
andl
fs
jae
xchg
aas
outsl
pop
pop
mov
test
xchg
push
dec
cmp
mov
adc
ds
outsl
fstps
mov
je
out
pop
lods
mov
popf
mov
ss
pop
aas
fwait
cld
lahf
inc
lods
dec
aam
dec
bound
add
inc
and
dec
xlat
mov
or
hlt
fisubrl
add
xor
mov
mov
lahf
aam
mov
and
fwait
cmpl
lret
pushf
push
mov
dec
sbb
xchg
loope
mov
cli
fs
push
dec
filds
fs
fucomi
pusha
push
push
mov
jbe
inc
or
call
sub
jg
in
imul
test
out
dec
dec
int
mov
mov
ss
inc
mov
xchg
xchg
xor
push
sti
lcall
inc
ficoms
imul
push
je
imul
fnstcw
lods
mov
xchg
sbb
mov
add
loope
repnz
mov
fwait
aad
stc
xor
in
scas
mov
enter
enter
xchg
and
push
fsts
in
push
pop
or
inc
xchg
mov
lock
loop
outsb
inc
push
cmp
dec
cld
fwait
jns
jle,pt
mov
into
push
or
xchg
pop
push
std
push
clc
dec
fistl
add
roll
inc
mov
push
jne
sub
es
imul
mov
cs
adc
cs
repnz
or
test
pop
scas
mov
jg
adc
inc
xchg
dec
gs
add
push
movsb
or
fistps
jno
mov
lret
mov
dec
pop
fimuls
into
rcrl
sbb
push
aam
repz
push
pop
dec
sbb
fisubl
inc
adc
daa
xchg
sub
and
jmp
fsubs
bound
mov
mov
aam
sub
ja
cwtl
insl
cmp
ss
sub
sub
add
leave
mov
ljmp
outsb
test
addr16
arpl
inc
adc
ficoml
ficoms
cmp
jb
add
in
popf
imul
dec
mov
dec
cltd
sbb
pop
popa
cltd
mov
xor
dec
in
inc
pop
aas
inc
push
in
sub
add
out
pop
idivb
insb
add
js
pushf
lret
mov
insb
adc
jae
movsb
in
mov
imul
fwait
outsl
inc
movd
aaa
data16
xor
push
iret
mov
scas
ror
cmpl
sti
cmp
leave
xor
cmpsl
dec
dec
mov
pushf
icebp
fidivs
sbb
shrl
adc
pop
imul
aam
arpl
jbe
push
arpl
rorb
adcb
lds
jle
dec
inc
mov
xor
out
adc
ja
cmpsb
mov
mulb
mov
mov
lahf
mov
mov
leave
sub
fcomps
fdivl
mov
mov
dec
jge
cmp
movsb
mov
xchg
stos
lahf
fstl
fstps
ds
movsb
sbb
leave
pop
sbb
mov
or
rorl
mov
sub
lahf
jle
in
shll
xor
repnz
das
repz
push
ss
pop
shll
pop
adc
pop
dec
lret
sbb
mov
mov
movsb
push
shrb
data16
xchg
mov
andb
sub
ljmp
nop
loop
sbb
fstpt
ret
push
in
jp
sub
or
pop
mov
or
aam
sub
out
loop
add
pop
push
push
or
xlat
mov
leave
fsubrl
mov
adc
hlt
jo
cld
lds
adc
aas
mov
add
dec
pop
std
int
pop
cmp
in
cwtl
xchg
andl
jbe
aaa
adc
jp
fucomi
lcall
mov
addb
pop
out
clc
fildl
aas
fwait
inc
mov
idivl
push
es
xchg
movb
sub
adc
pop
in
mov
adc
test
pop
inc
pop
pop
fsubrs
inc
lret
xchg
xorb
mov
jmp
xor
sbb
cmp
aad
je
hlt
and
xlat
pop
cmp
insb
push
repnz
inc
decb
cmp
aad
mov
lods
cmp
pop
mov
xor
lock
push
std
andb
iret
test
imul
jb
mov
push
out
das
jecxz
fistps
and
into
adc
lock
jecxz
leave
and
movsl
lds
pop
push
pop
outsb
add
xchg
pop
xlat
mov
test
sbb
das
rorb
jmp
adc
push
incl
es
pushf
in
rorl
dec
cmp
xlat
dec
jns
dec
jmp
and
in
jns
es
lahf
cs
inc
cmp
scas
insl
mov
jmp
xchg
loop
loope
fcompl
hlt
xchg
rol
add
cmp
iret
es
cld
jnp
jb
or
arpl
push
inc
jb
pop
and
pop
jns
mov
xchg
or
arpl
loope
outsl
adc
dec
ret
jne
pushf
into
sarb
jno
cmp
dec
rorb
mov
idivl
xchg
or
popa
jmp
in
call
sbb
inc
sub
movsl
fnstsw
loope
test
insl
xchg
inc
inc
mov
mov
jbe
cwtl
in
loopne
fsubl
fcmovbe
xchg
jo
sbb
fmul
mov
xchg
mov
add
stos
xchg
sahf
leave
and
test
ds
mov
add
push
fisttpl
test
xchg
jb
fxch
fwait
mov
xchg
xor
loop
jecxz
push
sbb
inc
xchg
dec
xchg
std
repz
insb
mov
cmp
pop
aam
push
nop
out
ficoml
sbb
popa
lret
cmp
push
cmp
xchg
lea
push
or
mov
popa
leave
lcall
sbb
movsb
jne
arpl
test
or
insl
xorl
les
jbe
mov
or
lods
mov
push
lret
xchg
dec
mov
mov
mov
aad
fidivrl
movsl
mov
xorb
dec
cmp
int
stos
inc
adc
jp
jmp
or
cmp
in
dec
fsubs
push
fidivs
bound
int3
adcl
int3
rcll
cmc
and
imul
sbb
or
adc
add
mov
mov
cmp
xchg
sbb
daa
sbb
or
or
call
sub
dec
js
test
sbb
sahf
push
dec
lret
inc
push
jns
lods
inc
stos
inc
push
cltd
sub
rolb
sti
adc
xor
sbbb
nop
shll
jb
outsb
fbstp
js
mov
sub
movsb
test
mov
adc
enter
leave
jmp
add
inc
sahf
add
loop
mov
xor
out
mov
inc
mov
sti
aam
faddl
mov
outsb
dec
pop
test
pop
popa
sar
jl
push
cwtl
pop
clc
lds
andb
xor
mov
out
dec
addr16
mov
mov
add
stos
mov
imul
mov
and
enter
icebp
push
popl
sub
mov
mov
push
and
orl
cmp
daa
mov
push
pusha
in
pop
cmpsb
aaa
scas
out
fadd
fisubrl
test
push
xor
mov
add
rcl
push
lock
pushf
pop
or
push
fsubrs
ds
clc
jbe
addl
mov
lods
cli
xchg
andb
sbb
scas
jns
dec
jge
ja
loopne
stc
sbb
mov
adc
mov
decb
lahf
sub
cmp
pop
sub
std
cmp
jns
rorb
add
xchg
pop
shll
addr16
pop
cld
sub
mov
push
pop
pop
movsl
pop
test
jecxz
xchg
push
jnp
mov
jmp
cmpsl
rcrb
xchg
test
mov
sti
push
sti
stc
stc
jmp
inc
or
or
repnz
test
scas
cmp
lahf
and
and
int3
inc
mov
lock
fwait
mov
xor
aad
push
mov
mov
or
mov
mov
call
aaa
pop
mov
xchg
inc
std
enter
ficomps
test
adc
xchg
movsl
cltd
lods
fsubrl
sbb
mov
push
int3
mov
mov
aam
mov
lret
add
daa
dec
inc
add
jg
es
call
push
jno
mov
dec
cmp
xlat
sbb
mov
fnstsw
pop
mov
or
and
out
lret
insb
aas
in
sbb
subl
es
mov
lods
xlat
popa
clc
aad
xchg
mov
mov
gs
and
test
mov
mov
dec
pop
or
insl
sub
mov
test
aam
cmc
out
stos
pop
in
loope
iret
std
test
mov
push
sub
stos
jns
mov
mov
mov
addr16
jne
fldt
sbb
push
mov
add
cmp
lcall
in
cwtl
jecxz
jno
lea
jl
stc
fs
call
sbb
mov
inc
call
adc
out
add
in
xchg
dec
aad
ffree
xchg
fcomps
mov
adc
or
adc
imul
test
fbstp
lock
or
lcall
repz
jl
fucomip
mov
or
jo
jge
cmp
push
pop
xor
cltd
dec
push
xchg
pop
push
idiv
ja
push
pop
mov
arpl
cld
lods
je
mull
negl
push
neg
add
pop
mov
mov
int3
jle
push
leave
in
push
movsl
lods
test
dec
dec
xor
ret
sub
outsb
dec
mov
rorb
arpl
or
in
inc
lret
push
adcb
fsts
xchg
enter
jp
lcall
out
xchg
sbb
add
dec
mov
pop
shrl
int
ret
mov
xchg
pop
rcll
or
std
add
mov
cmp
mov
orl
mov
insb
movsl
mov
sti
lahf
insl
mov
js
pop
das
mov
cmp
and
dec
faddp
mov
fistl
lock
cmp
in
sbb
push
aas
jnp
dec
fidivl
or
push
mov
nop
fwait
shl
cmp
mov
mov
lret
hlt
fsubl
or
sbb
pop
mov
jmp
daa
xor
lea
test
cmp
inc
sub
push
lea
dec
pop
sub
ljmp
xchg
sbb
test
testb
sbb
pushfw
cmp
fdivrl
jae
sbb
mov
jmp
cmpsl
test
jbe
mov
pop
ds
test
xchg
sbbb
dec
repz
xor
jl
sub
push
fisubrl
pop
add
fsubrp
xchg
and
lret
pop
jo
xchg
call
in
stc
push
out
outsb
mov
add
negb
lods
bound
lahf
jae
inc
daa
mov
dec
mov
sub
push
push
sub
xchg
dec
sub
in
ss
lds
xorb
call
loopne
leave
out
jp
xchg
call
pop
dec
out
inc
loop
jno
mull
sahf
ror
xor
xchg
or
push
pop
test
adc
adcb
daa
iret
xlat
out
sahf
or
stos
or
mov
jo
mov
movsb
hlt
mov
sbbl
pop
dec
mov
or
scas
mov
and
push
push
push
inc
ss
insb
lods
jp
pop
xchg
cmc
out
sahf
sub
pop
sahf
movsb
movsb
test
mov
jbe
sub
mov
push
or
loop
mov
push
mull
add
mov
mov
jmp
sbb
push
pop
mov
xor
jg
sub
mov
mov
xor
mov
inc
cmp
pop
in
jecxz
or
movsb
into
aam
mov
xor
lea
shrb
inc
sbb
sbb
add
std
xor
pushf
push
mov
pop
nop
lahf
jbe
sahf
dec
mov
stos
or
mov
sub
push
xor
aam
sub
pop
cmp
orb
pop
sti
or
pop
popf
pop
imul
jo
fadds
add
dec
xchg
inc
adc
lods
mov
sbb
icebp
mov
icebp
mov
jecxz
push
mov
pop
arpl
push
lock
lret
inc
xchg
ret
xor
fnstcw
xor
pop
lds
sbb
xchg
out
adc
xchg
add
out
imul
cmp
jmp
pop
pushl
stc
out
cmp
pusha
leave
mov
push
mov
mov
rorl
sub
cmp
stos
ja
fdiv
mov
push
lds
enter
push
shrl
xor
cli
or
mov
mov
dec
dec
add
inc
mov
xchg
mov
mov
jecxz
lea
adcl
pop
mov
inc
pop
cmpsb
aaa
int
shll
call
push
popf
imul
decb
inc
xchg
leave
out
imul
cwtl
xchg
cs
xchg
and
mov
push
std
lret
and
mov
sbb
addr16
cs
std
or
jo
mov
xchg
ret
and
rorb
lods
cwtl
cmp
daa
push
inc
inc
std
das
jns
shl
cmc
pop
jbe
sub
add
icebp
pushf
sbb
div
adc
aas
sub
js
loop
inc
pop
loope
lret
adc
notl
push
mov
jae
push
sub
call
std
push
std
ja
cmpsb
cs
or
data16
inc
inc
jl
test
sti
lcall
pop
in
xchg
ds
fsubr
push
mov
fisubl
lret
push
ret
popf
fs
add
pop
push
ds
in
dec
jae
xchg
rcll
fdivl
mov
push
je
or
ret
rcr
jno
mov
mov
cltd
out
in
stos
add
hlt
mov
lock
movsl
es
push
iret
dec
pop
dec
jmp
fimuls
addb
les
stc
enter
orb
xchg
inc
add
je
xchg
sbb
adc
cli
pop
cld
fmulp
cmp
lea
hlt
repnz
cmc
daa
xchg
stc
pusha
jns
fs
sub
xor
sub
xchg
clc
mov
daa
lret
dec
inc
in
mov
pop
ljmp
rclb
mov
pop
adc
dec
shlb
adc
out
jbe
add
jne
or
or
sbb
mov
fadd
xor
inc
clc
xor
dec
clc
sub
fs
dec
sbb
imul
or
push
mov
and
fwait
pusha
and
adc
js
movsb
rcrl
fxch
cmp
cmp
or
lods
test
js
mov
lcall
mov
pushf
jle
mov
dec
jl
mov
lock
gs
aad
lea
enter
sbb
xchg
popl
jl
int3
stc
lds
lcall
and
xor
or
dec
push
and
nop
in
push
hlt
addb
insb
push
pop
add
ret
pop
pop
shll
in
movsb
ret
inc
pushf
into
xor
int
cmpsl
shll
add
test
xchg
jmp
jnp
gs
idivb
jle
add
push
scas
cwtl
insb
loope
xchg
mov
daa
int
sbb
push
mov
cmc
punpckhwd
rorl
push
add
pusha
add
jbe
dec
imul
rcr
xor
or
push
cs
and
sbb
popa
mov
adc
push
xlat
inc
stc
pop
cwtl
sub
mov
lcall
ret
jmp
mov
pop
inc
les
xchg
iret
lds
sbb
fcmovbe
iret
xchg
cmp
stc
aad
loop
stos
jb
pushf
rorb
adc
mov
mov
icebp
fs
mov
cmp
imul
dec
xchg
roll
mov
mov
inc
mov
or
arpl
mov
sti
aas
cwtl
lods
shlb
test
jmp
jge
aad
scas
in
sahf
push
jle
jl,pn
mov
test
push
mov
pop
jae
sbb
cs
jbe
lds
pcmpgtd
and
xchg
push
mov
xor
loop
xor
ficoml
pop
fwait
lods
cmpsb
popf
mov
jg
sbb
mov
adc
or
arpl
pusha
fnstsw
incb
cmp
mulps
mov
dec
xor
call
ficoms
mov
ret
mov
aaa
and
jle
cmc
psraw
outsl
mov
fs
scas
mov
sub
dec
call
sbb
jno
aas
rolb
aad
negb
mov
push
loopne
std
stos
push
cmp
mov
push
cmpsb
addr16
in
in
xorb
sarb
pop
repnz
mov
divb
sbb
xchg
leave
ret
loope
out
mov
clc
cmpsb
scas
xorb
stos
sbb
lcall
outsl
add
push
movsb
outsl
mov
lret
sub
addl
cmp
js
inc
xchg
xor
mov
jno
pop
jg
mov
and
xor
imul
xor
mov
xor
fldl
mov
imul
int
cmp
pusha
or
inc
in
fnstsw
movsl
scas
fs
push
push
jo
out
jmp
outsl
mov
call
sub
stos
imul
xlat
mov
jns
aad
sti
cmc
stos
push
sub
testl
cmp
adc
stos
inc
xchg
xor
xchg
cltd
mov
pusha
or
mov
imul
fcomps
sbb
es
test
pop
std
mov
cmp
jb
mov
push
int
push
add
int3
out
mov
fstpt
sub
je
dec
inc
sahf
out
lods
pop
lock
pusha
js
xchg
xchg
cmpsb
xchg
out
inc
adc
jbe
add
mov
cmp
inc
and
stos
push
and
unpcklps
shlb
sub
enter
fadd
mov
sahf
and
roll
pop
dec
pop
sahf
imul
or
hlt
pop
aas
inc
mov
jne
sbb
inc
push
and
cmpsl
in
mov
das
ficompl
fwait
orl
lea
cmp
mov
bnd
nop
adc
ss
mov
call
loope
push
dec
int
fs
test
jno
jle
fistps
xor
into
xchg
adc
test
rcr
sti
xchg
ljmp
scas
inc
mov
dec
outsb
imulb
mov
inc
dec
jp
and
sub
lahf
mov
dec
icebp
dec
andl
push
clc
aas
pop
sub
subb
or
jnp
sti
push
ret
out
xchg
sar
cmp
inc
mov
fs
ss
jp
dec
mov
lret
ret
pop
pop
pop
push
cmc
push
outsb
xchg
addr16
xchg
dec
dec
push
fstps
mov
repz
je
mov
mov
dec
lds
inc
add
mov
flds
xchg
sub
test
mov
push
and
sbb
push
fnstsw
mov
cltd
outsl
jae
and
pop
inc
jle
es
test
pop
outsb
add
cwtl
xor
mov
lds
stc
ja
pop
dec
xchg
push
mov
fnstcw
aaa
shl
jg,pn
outsb
clc
jle
fildl
repnz
loope
rcrb
mov
out
test
mov
mov
stc
out
mov
out
lret
cli
test
dec
out
addr16
and
push
subb
leave
leave
mov
mov
fdivr
push
or
sbb
push
gs
ret
fs
outsl
jne
pop
in
mov
jp
sub
mov
xchg
cmp
fisubrs
lret
jp
mov
rorl
mov
sbb
xor
cmpsb
addb
mov
mov
aad
and
jmp
cmp
roll
sarb
lret
pop
pop
fdivrp
mov
cmp
out
xchg
and
repnz
and
sbb
pop
add
push
in
inc
add
movq
mov
ljmp
stos
add
int3
sub
jle
scas
or
out
jbe
in
and
popa
sbb
adc
sub
cmp
out
xor
cmc
jb
nop
push
or
repz
sbb
loope
xchg
add
arpl
es
lahf
dec
dec
mov
xchg
stos
lret
or
stos
inc
xchg
inc
xchg
insb
test
xchg
aad
in
in
imul
das
add
test
inc
xchg
xlat
cmp
add
popa
xchg
cmpsb
or
mov
push
dec
or
imul
cli
inc
test
cmp
cld
inc
xor
sarl
xor
and
xchg
shlb
mov
jge
fisttpll
sbb
test
int
push
or
or
sbb
adc
jne
dec
sbb
pop
insb
insl
mov
imul
ficoml
orb
mov
sub
push
xchg
adc
iret
mov
mov
sti
fwait
pop
sbb
sub
das
adc
cmp
stc
leave
cmpb
pop
js
and
and
enter
arpl
fists
stos
ljmp
inc
sbb
mov
sbb
lods
and
aaa
xor
dec
adc
and
dec
cmp
xlat
cmpb
adc
cmpb
nop
dec
ss
call
push
dec
mov
xor
cld
and
shll
outsl
cmp
std
mov
inc
stos
js
xchg
jns
insb
xchg
push
mov
cmp
insb
cmp
adc
jnp
insb
inc
xor
iret
xchg
lock
aam
shll
xor
mov
int
push
push
lahf
lahf
pop
hlt
movsb
or
sahf
popa
xor
and
xchg
push
mov
cmp
clc
pop
ret
jl
cld
jbe
dec
movsb
mov
cmp
and
scas
dec
push
mov
aas
adc
xlat
pop
jns
insb
outsb
and
jecxz
in
enter
mov
xchg
add
jl
lods
clc
or
push
out
pop
cmp
push
jl
dec
sahf
sbb
jae
neg
mov
insl
test
rolb
loope
and
jle
inc
outsl
sti
inc
movsb
fisubl
push
xchg
dec
jae
adc
ljmp
inc
aaa
fsubrs
mov
xchg
pusha
outsb
mov
pop
jg
sub
dec
out
xchg
mov
pushf
push
or
inc
jo
push
loope
loopne
sti
jle
loop
subl
xchg
lahf
das
push
inc
fimuls
cld
rcl
or
sbb
mov
jo
cmp
out
stos
sbb
mov
aam
jnp
jp
inc
xlat
ficoml
or
inc
sub
mov
mov
arpl
push
push
mov
mov
rcrb
mov
xchg
and
int3
jl
adc
jae
add
mov
rolb
pusha
ds
lds
icebp
xchg
push
dec
xor
out
xor
inc
fsts
outsb
and
in
inc
mov
or
xor
in
les
inc
fwait
in
mov
cs
jmp
dec
sbb
xrstors
inc
push
pop
in
stos
jne
mov
out
test
xchg
adc
dec
das
iret
add
jne
loope
rolb
jno
mov
jle
push
sbb
imul
mov
fcom
insb
jle
mov
dec
inc
push
inc
ds
and
sti
mov
inc
clc
movsl
push
xchg
inc
test
dec
sahf
subl
jle
push
insb
pusha
decb
lods
out
je
dec
das
daa
test
out
movsb
xor
push
push
scas
and
fcompl
les
adc
in
jecxz
je
fidivrs
enter
call
and
or
mov
and
enter
and
push
je
repnz
dec
in
cld
dec
js
shrb
scas
sbb
bound
and
je
adc
xor
imul
int
add
or
mov
xor
lods
xor
mov
jns
push
mov
fcoml
popa
movsl
imul
lea
shrb
xor
pop
add
push
push
sub
icebp
cmp
jp
jo,pt
aaa
hlt
fs
test
mov
shlb
jle
out
xor
sub
sarl
enter
xchg
shlb
jg
sub
add
movsl
mov
jne
fldl
dec
scas
push
stc
inc
mov
jecxz
stc
dec
test
sbb
mov
add
adc
push
test
pop
mov
mov
push
jmp
cmpsl
mov
dec
xor
or
cmp
popf
add
xchg
mov
popf
insl
push
jae
sti
pop
xchg
lret
call
adc
ljmp
jne
inc
mov
emms
pop
jmp
mov
cmpl
scas
sbb
pushf
sahf
add
dec
jge
xor
xor
or
int
push
pop
xchg
jnp
js
shll
adc
test
lcall
push
repz
in
pushf
xlat
inc
ret
mov
outsl
mov
sbb
adc
ss
loop
pop
js
cmp
push
rcrb
stos
cmpb
insb
ja
clc
arpl
aad
sbb
xchg
test
pop
popa
in
or
loop
xchg
dec
xchg
leave
in
aad
cld
loope
xor
lds
jle
dec
addl
push
pop
test
sbb
xor
and
inc
decb
pop
xchg
lods
lods
add
jecxz
movsl
push
sbb
inc
dec
and
mov
mov
aam
jecxz
add
push
roll
cmp
pop
out
mov
nop
mov
pop
jmp
pop
outsb
jbe
xchg
cmp
mov
add
push
imul
loopne
outsb
dec
cmp
pop
rclb
imull
xchg
roll
cwtl
pop
out
fdivrl
in
dec
sti
in
xor
movsb
orb
mov
scas
pushf
jae
lods
fisttpll
sbb
and
dec
call
enter
cmp
inc
mov
daa
or
loop
pop
fmul
loope
dec
cltd
aad
inc
push
sbb
je
xchg
ret
fnstsw
add
and
inc
jb
xor
dec
test
pop
aas
inc
jecxz
inc
sbbl
mov
xchg
dec
ret
jl
push
aad
cld
lods
adc
sbb
int
loop
enter
cmpsl
sar
inc
inc
fdivrl
adc
xor
mov
das
cltd
lds
fcoml
sbb
test
dec
adc
jge
add
push
insb
lea
std
into
lods
ret
mov
movsl
arpl
or
jl
movsl
jnp
imul
std
pop
mov
mov
lret
xor
and
sbb
or
jecxz
push
fmuls
testb
xchg
push
popa
test
enter
outsl
mov
push
out
jle
insb
jecxz
data16
addr16
adc
call
add
add
daa
jne
icebp
push
addl
push
mov
fiaddl
mov
bound
sahf
shlb
xchg
les
fs
shrb
xchg
xchg
xchg
pusha
adc
out
mov
mov
movsl
cmpsl
sbb
cmp
or
gs
mov
into
std
cmp
sti
int3
fidivrs
popa
call
into
and
inc
jns
sub
xor
in
addl
ret
dec
mov
cli
xor
xor
call
mov
outsl
lock
cmp
rolb
xchg
dec
adc
popf
es
jl
outsl
or
xchg
test
cmp
mov
mov
xor
insb
lods
dec
fstps
and
outsl
jge
xor
lahf
mov
sbb
inc
mov
out
pop
ljmp
and
jl
cmp
pop
mov
pop
add
imul
jns
hlt
push
mov
lret
lahf
stos
lcall
cmp
xor
out
ljmp
addr16
call
cs
movsl
fst
xchg
das
nop
or
xchg
cld
sbb
stc
jecxz
lds
mov
cmp
dec
xchg
fwait
dec
movsl
xchg
imul
test
dec
movsb
outsb
sub
and
addr16
push
xchg
mov
xchg
push
fsubrs
and
mov
and
arpl
pop
movq
cwtl
mov
xchg
movsb
arpl
sub
mov
and
pushf
js
mov
add
cwtl
loope
imul
adc
dec
push
jns
std
adc
sbb
xchg
ja
dec
cmp
jno
add
mov
mov
clc
into
rcl
add
ja
xchg
test
rolb
daa
imul
sub
sbb
aad
into
push
ja
add
sub
adc
outsl
lret
mov
imul
cltd
popf
mov
push
or
mov
cmp
ja
pushf
mov
sbb
jno
pop
ljmp
mov
loop
mov
xor
or
cmp
in
pop
xchg
sarl
lret
xor
mov
test
js
aaa
and
enter
xor
fildl
nop
hlt
cmpsl
push
jbe
sahf
rcrl
mov
xor
push
je
lahf
pop
loope
xlat
sbb
mov
jecxz
push
pop
push
xlat
jo
xchg
pop
cs
sub
sbbl
pop
outsb
sbb
inc
and
shll
and
prefetchwt1
or
outsb
dec
jno
out
sbb
push
xchg
lret
jne
inc
test
mov
mov
ljmp
mov
xor
and
insl
cltd
jecxz
sbbl
adc
or
dec
cmpsl
scas
xlat
cmpsl
mov
jge
aaa
cmp
repz
jl
cmp
dec
dec
aam
stos
cmpsl
daa
push
clc
jl
arpl
sbb
fcmovnu
insl
dec
scas
xchg
andb
addr16
dec
push
adc
loopne
push
dec
sub
out
je
mov
mov
xchg
mov
mov
testb
ljmp
mov
push
int
adc
aas
sub
shrb
adcl
push
or
dec
add
pop
repnz
lea
mov
xor
sbb
xor
mov
es
cli
vmread
int
push
or
mov
dec
imul
mov
scas
sub
add
lock
sub
jnp
mov
out
in
fnsave
mov
lcall
test
add
xchg
bound
mov
lock
xchg
sbb
aad
inc
jmp
hlt
mov
repz
cmp
dec
fcmovb
inc
xlat
rorl
xchg
mov
test
dec
push
roll
ror
xchg
test
push
leave
pop
mov
mov
adc
stc
jns
xchg
mov
xchg
insl
add
cmp
dec
lds
mov
mov
jnp
cmp
aaa
or
mov
mov
or
data16
pop
movsb
notb
iret
int
or
mov
insb
or
dec
pop
cmc
lcall
hlt
lret
and
leave
lret
jnp
adc
cmp
xchg
fsubrs
inc
std
xlat
aas
in
ss
lahf
leave
mov
in
dec
push
sbbl
pop
in
pop
lds
cmc
mov
jnp
dec
fldenvs
icebp
fsubrs
mov
popf
or
out
push
loop
scas
pop
test
into
mov
pop
call
cmp
fldl
leavew
dec
arpl
insl
cwtl
rclb
pop
icebp
add
pop
f2xm1
fistps
mov
mov
inc
icebp
out
shlb
cmc
int3
mov
add
nop
mov
sub
mov
sar
or
loope
pop
cmp
hlt
imul
pop
and
sub
and
out
ja
out
jnp
aas
adc
inc
xor
pop
inc
out
mov
outsb
jns
leave
cmp
push
xchg
std
push
roll
aad
bound
test
adc
dec
mov
sbb
scas
icebp
inc
or
mov
mov
outsb
mov
push
fimuls
aaa
adc
adc
loopne
inc
or
jae
push
xchg
xor
cltd
mov
imul
pop
or
jo
gs
add
mov
xor
jge
mov
dec
pusha
lock
mov
jae
iret
shlb
jnp
sti
shlb
push
mov
pop
clc
dec
fcompl
sub
add
mov
xlat
jmp
in
leave
jmp
sbb
ds
cmp
pop
inc
mov
sbb
mov
mov
pushf
sbb
push
aas
das
jg
mov
mov
int3
dec
int3
aad
scas
stos
inc
cwtl
xor
hlt
push
mov
mov
bound
xchg
addr16
xchg
rcrb
mov
notl
shlb
or
cmp
add
aad
roll
lds
pop
leave
arpl
repnz
and
ficoms
cmp
scas
jb
iret
sub
jno
xchg
inc
sbb
add
cltd
fcomp
inc
cmp
loopne
shrl
daa
xor
push
sbb
jge
mov
ljmp
fcompl
push
addr16
jl
loop
mov
add
lea
jne
lcall
aas
xlat
add
punpckhdq
sub
jl
cmp
pop
imul
sbb
jle
mov
jbe
add
xlat
mov
inc
jge
pop
jno
call
out
jbe
out
lods
pop
lahf
imul
popf
lods
ficoml
mov
mov
testl
mov
lcall
cmp
adc
cmpsl
xor
dec
insl
stos
xor
lds
fdivp
dec
mov
inc
int
int3
insl
pusha
pop
and
push
xor
aaa
icebp
sbb
into
cmp
sbb
xchg
add
inc
push
or
cld
pop
stc
dec
push
lods
cmpsl
sbb
movsb
loop
gs
jge
jns
dec
pop
or
cmp
pop
and
icebp
nop
mov
dec
in
pop
add
push
jg
push
push
jge
cmpsb
mov
mov
sbb
push
mov
fistps
hlt
ss
xchg
mov
lea
xchg
push
sbb
cs
cmp
lcall
mov
addr16
scas
add
cmp
sbb
aad
lods
in
out
mov
fidivrs
xchg
xor
jge
cmp
lock
repnz
mov
inc
insb
int3
lcall
sbb
sbbb
cmpsb
pop
sub
jbe
jg
cmc
fisttpll
pusha
orl
hlt
mov
shrb
jae
mov
in
xchg
repz
lods
xor
push
pop
mov
adc
andnps
addb
sub
mov
jnp
cld
lahf
jmp
adc
jbe
les
jnp
imul
scas
push
popa
les
push
ret
insl
xor
into
pushl
rcrl
nop
push
mov
test
pop
in
cld
or
stos
lods
mov
shlb
fcoms
cmp
lcall
add
add
mov
ret
test
sub
pop
into
sub
in
outsl
lcall
rorb
loop
shrb
outsl
sub
in
mov
jns
push
mov
push
or
incb
sbb
cmp
xor
ror
outsl
jmp
nop
cmp
popa
sub
mov
add
outsl
xchg
sahf
stc
in
es
rcll
test
dec
out
test
sarl
lods
test
insl
pop
in
call
shrl
jl,pn
in
movsb
add
mov
stos
test
jmp
shlb
push
mov
int
jecxz
lds
add
fcmovb
mov
out
enter
mov
push
or
sub
mov
or
xchg
aas
leave
sarl
nop
sub
loopne
in
pop
push
and
sahf
dec
jp
push
jp
shl
dec
add
xchg
push
inc
or
pop
and
arpl
ret
daa
mov
inc
push
pusha
add
ds
sti
or
xchg
xor
mov
jg
pushf
inc
sbb
cmp
and
push
inc
stc
and
dec
sbbb
jae
push
jl
js
movsl
add
movsl
jae
add
fildll
hlt
ss
and
jns
xlat
sub
hlt
jg
je
fs
ss
adc
stos
cmpsb
or
pop
mov
mov
shll
pop
scas
std
mov
in
xchg
das
js
push
pop
jle
sbb
call
lcallw
imul
popa
and
push
xchg
sub
dec
lds
mov
movsb
and
inc
mulb
mov
dec
and
jne
pop
leave
lock
mov
outsl
inc
jle
mov
dec
outsb
push
lods
mov
adc
xchg
ss
stc
sahf
pusha
cli
cwtl
ret
jl
jbe
sbb
cltd
call
jbe
cmp
xchg
nop
mov
aad
lret
std
mov
add
mov
mov
fwait
out
push
jge
sub
push
add
sbb
adc
jae
mov
xorl
adc
xor
ljmp
in
cmp
iret
rcll
or
dec
jecxz
xchg
popa
sbb
adc
pop
jl
fwait
inc
cmp
mov
mov
jns
andb
dec
inc
jns
adc
ret
and
jmp
scas
sub
hlt
sbb
cltd
arpl
or
mov
js
inc
inc
ret
pop
add
add
push
cmp
mov
frstor
jne
clc
mov
cwtl
push
gs
out
loopne
out
adc
repz
rcll
leave
pop
inc
inc
sbbl
pusha
push
cli
sbb
mov
imul
mov
pop
dec
call
xlat
jnp
push
lock
mov
adc
movsl
movsl
pop
cmp
cmp
jae
sbb
xchg
test
mov
add
icebp
and
adcb
mov
sub
lea
xchg
mov
cld
jecxz
xor
bound
mov
out
aad
adc
scas
xlat
xor
insl
or
test
movl
in
mov
jb
jmp
movsb
inc
popa
cmp
mov
out
push
push
in
cmp
orb
sti
xlat
jno
imul
jo
fmull
clc
in
xchg
mov
sub
mov
and
fcoms
xor
inc
pushl
adc
xlat
jg
mov
add
ficomps
mov
imul
cld
and
das
repnz
and
cmp
pusha
jb
cltd
arpl
mov
ret
enter
xchg
insb
xchg
les
pop
hlt
push
in
ficoms
push
or
rol
jl
arpl
mov
test
sbb
sub
fistps
out
inc
mov
pushf
int
loop
sub
inc
rorb
push
lods
call
xchg
cltd
push
sahf
jae
test
je
hlt
mov
fcomp
or
add
jmp
mov
pushl
mov
ret
pusha
rorl
add
pusha
mov
jp
xchg
or
inc
leave
jno
sub
sbb
imul
mov
jnp
nop
leave
push
xor
jb
dec
push
loop
jl
dec
jmp
lea
fwait
sub
sbb
stos
aam
in
int3
jmp
sbb
scas
into
popf
pop
dec
iret
fsubr
inc
push
adc
and
dec
mov
cmp
std
loop
adc
push
lea
nop
mov
xchg
lahf
inc
mov
add
xchg
and
add
rcrb
jo
pop
xor
lock
mov
and
subb
push
cmp
out
and
xor
daa
ljmp
jne
rcrb
and
fs
cmp
sub
mov
jp
lock
jo
sti
pop
mov
xchg
subl
mov
loopne
and
dec
sbb
or
ret
aas
js
cmp
mov
scas
sub
mov
mov
jp
xchg
test
lods
jmp
cmpsb
mov
in
pop
adc
in
jns
xor
sub
xchg
das
xor
adc
add
adc
jl
sti
orb
repnz
scas
sbb
or
sub
shr
data16
popa
or
mov
mov
or
xor
add
mov
pop
inc
dec
ss
fwait
pop
pop
sbb
stc
mov
xor
in
leave
ja
fstps
fiadds
pop
pop
xchg
in
outsl
hlt
lods
cmc
cmpl
inc
xchg
imul
ret
mov
jecxz
mov
ds
iret
imulb
xor
ljmp
xchg
mov
into
gs
pop
mov
int
cmp
lods
popa
int3
and
stos
cli
cmp
push
aaa
in
jmp
lock
iret
stos
pop
mov
jnp
adc
call
adc
cmpsb
pop
jb
jmp
cmpsb
push
pop
xlat
hlt
or
nop
cli
fistpll
inc
insb
sbb
mov
adc
sbb
adc
shrb
cmpl
movsb
fndisi(8087
inc
sub
imul
adc
mov
cmc
icebp
cmp
xchg
jno
out
mov
cmp
cmp
cmp
sahf
xor
xor
push
inc
daa
mov
arpl
pop
dec
mov
ds
in
mov
mov
inc
das
fimull
jle
movsb
outsb
add
push
mov
cltd
andb
cli
daa
call
imul
outsl
fstpl
jo
shrb
mov
and
cmpsl
stos
cmp
cmp
std
xchg
aam
pusha
inc
ficompl
lahf
aaa
nop
xor
cmp
cmpsb
mov
in
sub
aad
addb
adc
jb
sub
and
in
mov
pop
cli
in
inc
push
shrb
jle
sbb
pop
cmp
repnz
mov
lea
or
cmp
xchg
lods
scas
fidivs
popa
xor
inc
mov
out
ljmp
sub
and
inc
and
xchg
add
daa
cs
xchg
push
lds
xor
jne
dec
mov
jg
loopne
les
outsl
out
pop
inc
cltd
mov
in
cmp
mov
mov
pop
inc
clc
pop
inc
push
pop
cmp
into
xchg
jmp
inc
jg
mov
cmpsb
mov
aad
lock
mov
mov
push
lods
sub
jo
gs
daa
cwtl
fdivrl
cld
pusha
pop
aaa
shrb
in
cltd
xchg
jbe
mov
fisubrl
pushf
sbb
push
xlat
dec
adc
push
nop
stos
jns
jnp
stos
sub
jmp
xor
repz
sub
aam
mov
push
rorl
inc
add
sahf
sub
mov
icebp
jno
in
pop
leave
pop
leave
in
mov
lds
lds
and
ret
sbb
add
adc
fistl
int
mov
push
mov
push
andb
push
or
mov
lds
mov
pop
jl
lock
data16
lods
cld
push
js
add
fcomip
add
or
and
gs
xor
into
mov
les
jp
cmp
out
pop
insb
shl
lcall
mov
jae
or
leave
lahf
sbb
jnp
push
xchg
cmp
orb
mov
loopne
adc
sbb
roll
mull
mov
into
mov
sub
fsubs
pop
jecxz
xchg
push
fists
cmc
jg
insb
iret
xlat
push
or
pop
push
cmp
adc
mov
push
fadd
cmpsl
push
jge
jge
icebp
int
dec
out
sbb
es
xor
cmp
leave
inc
fwait
and
or
jo
xor
pop
mov
aaa
xchg
repz
rclb
and
in
pusha
and
xor
rcrl
pop
mov
adc
and
mov
mov
in
inc
aas
xchg
mov
push
loope
inc
or
decb
push
jl
jnp
dec
scas
cmp
push
and
outsb
aam
pop
int3
push
adc
and
push
test
rorb
mov
jne
xchg
cmp
fwait
push
and
mov
sbb
or
aad
mov
or
cmp
negl
mov
jae
fbstp
jns
sbb
jns
sub
nop
mov
popf
adc
icebp
inc
or
or
ljmp
mov
lcall
jle
mov
and
ds
les
idivl
cmp
or
jecxz
add
xchg
loopne
outsl
in
push
test
daa
dec
sbb
insl
mov
pop
add
or
insl
bound
or
pop
pop
stos
sbb
xchg
mov
cmpsl
arpl
inc
daa
clc
jl
or
or
enter
lods
addl
or
cmp
test
int
xor
outsb
mov
mov
jp
sbb
jmp
push
mov
popf
sub
repnz
or
fcmove
int3
xchg
and
or
out
jge,pt
mov
std
dec
hlt
xor
jnp
test
push
repnz
cs
aas
adc
je
pop
subb
outsl
shlb
fcompl
push
adc
push
out
and
cmp
cmp
popa
mov
push
add
or
data16
mov
adc
push
xor
iret
pop
dec
xor
pop
add
fisubrl
pop
dec
push
push
mov
mov
aad
add
nop
fwait
aam
shlb
iret
in
jo
xor
dec
mov
xchg
js
fsubrs
ja
cmc
adc
and
and
mov
and
jae
mov
test
jb
popf
jno
jns
jl
shll
or
cs
cmp
dec
in
and
loopne
sbb
push
xchg
add
lea
inc
jno
jo
lret
sub
inc
mov
out
mov
cltd
add
pusha
movsl
xor
inc
pop
jge
push
ror
test
mov
fdivs
jno
movsb
adcb
das
mov
divb
pop
iret
cmp
push
adc
cs
int3
jno
mov
jl
mov
rolb
lcall
stos
sbb
aad
dec
les
add
test
xchg
test
addr16
dec
mov
lret
mov
push
xchg
push
data16
add
jae
jne
movsl
loop
xchg
and
xchg
fdivrs
stos
jb
loopne
sub
loop
or
sub
repnz
adc
stos
xchg
outsb
clc
dec
cmpsb
leave
leave
in
mov
mov
push
adc
pop
mov
dec
jo
int
xor
call
rorl
cs
test
sbb
lret
out
cmp
mov
adc
cmp
jno
je
dec
dec
out
jg
jnp
test
lcall
mov
adc
sub
pop
dec
xchg
sbb
xor
mov
mov
fcoml
shrb
and
lods
add
ljmp
cwtl
iret
rcrb
in
pop
nop
cwtl
shll
outsb
testb
xchg
jmp
jge
sbb
jmp
push
dec
sub
mov
pop
add
out
les
stos
xor
imul
xorl
push
shl
imull
dec
dec
jg
test
xor
xchg
scas
mov
push
inc
sbb
int3
dec
testl
mov
mov
lcall
popa
icebp
sbb
jo
lret
pop
mov
adc
inc
xchg
cli
xchg
jae
pop
xchg
inc
push
push
lods
nop
push
inc
addr16
xor
jl
dec
imul
cmp
fadds
xor
or
dec
in
scas
fcoms
and
sub
roll
and
pop
cmpsl
jbe
in
cmpsl
sub
test
and
mov
mov
jge
mov
div
mov
or
loope
xchg
mov
add
scas
sbb
sahf
out
mov
push
inc
pop
xlat
adc
sbb
or
adc
mov
mov
lods
imulb
rcrl
insl
xchg
jge
leave
insb
xchg
inc
push
lock
iret
inc
cmpsb
mov
mov
jg
pop
sbbl
push
push
addr16
push
inc
scas
fs
xchg
cltd
ss
inc
mov
ficoms
out
mov
sti
adc
mov
mov
adc
cltd
mov
sbb
pushf
dec
mov
sub
sbb
push
and
xor
push
repz
out
scas
imull
sub
and
push
movsb
cmp
lds
pop
sbb
out
add
jo
pop
sti
sub
xor
enter
and
lar
mov
dec
out
out
popf
js
push
test
fmull
out
iret
dec
xchg
pusha
mov
lret
push
push
data16
mov
cmp
je
jge
stos
clc
dec
lea
cmp
push
ds
lods
inc
jmp
adc
rorb
cmp
jno
and
adc
addl
xor
lcall
dec
mov
fcomps
push
jne
lds
jbe
or
xchg
mov
adc
push
mov
cmpsb
push
out
jae
xor
in
movsl
lds
out
cmpsb
ficomps
leave
and
and
movsl
jl
cmp
adc
fwait
mov
daa
je
sarl
sbb
pop
into
clc
mov
xor
sbb
push
test
mov
pop
and
mov
ret
fs
fsin
mov
mov
clc
push
mov
aad
mov
push
insl
shll
pop
andl
jbe
iret
xchg
dec
pop
into
fdivp
cld
push
inc
inc
or
mov
adc
sub
mov
xor
stos
xor
push
aaa
push
cmp
out
xchg
ljmp
es
outsl
lahf
inc
push
pop
sub
pop
inc
adc
pop
xor
push
shl
sub
fisttps
adc
inc
iret
fadds
sub
fidivrl
dec
clc
dec
iret
mov
or
jmp
std
nop
push
add
cmp
ret
fst
std
jmp
lret
push
ret
inc
and
jg
pusha
orb
pushf
les
sbb
cmc
pusha
mov
sti
sbbl
mov
icebp
xor
f2xm1
test
movsb
mov
adcb
push
test
sub
sbb
dec
inc
cmpsb
les
jno
dec
dec
popf
sbb
cmp
call
arpl
lret
xor
jg
mov
sub
xor
pop
xchg
daa
cmp
and
rclb
xor
out
rep
and
das
rclb
cld
sub
aas
in
mov
mov
ljmp
mov
ss
inc
adc
stos
pop
pop
addl
lods
jp
insl
mov
shll
push
pop
xchg
mov
loop
mov
xchg
fwait
sub
jmp
and
inc
adc
outsb
mov
aad
push
int3
out
das
stos
adc
test
js
jl
mov
cltd
mov
push
rclb
adc
or
cmp
push
push
sbb
cmp
pop
out
into
pslld
fs
mov
in
mov
or
jp
pusha
stos
and
pop
mov
jbe
das
dec
mov
push
ret
lods
out
mov
into
outsb
sub
or
testl
xlat
jge
fcmovb
frstor
clc
xchg
push
add
mov
das
pushf
mov
outsb
pop
jecxz
das
mov
xchg
in
and
cld
xchg
dec
pop
mov
jle
jmp
adc
mov
lahf
mov
mov
ja
or
call
push
faddl
inc
mov
lods
stos
std
outsb
cmp
adc
insb
xchg
lock
fisubrs
js
mov
jmp
xor
pop
cld
int
fwait
pop
outsb
repz
imul
mov
jmp
jg
popa
push
fst
arpl
fdivrp
sub
add
and
jb
js
xor
stos
lea
jecxz
nop
dec
test
and
add
mov
xchg
std
push
xchg
cmp
jmp
or
inc
lea
je
ret
mov
lods
push
mov
hlt
push
inc
inc
es
fiadds
outsb
xlat
mov
cmp
lods
bound
loop
jbe
out
cmp
dec
mov
sar
cli
repz
jbe
int3
int3
inc
jmp
pop
push
jno
or
imul
sub
sahf
dec
rcll
lock
xor
hlt
repz
cmc
inc
push
xlat
in
lcall
cmp
outsl
dec
mov
sub
pusha
shlb
adc
faddl
pop
fists
add
scas
or
hlt
aaa
mov
outsl
ljmp
sub
jne
sbb
out
pop
cmp
test
bound
shrb
cmp
adc
int3
fistpl
sbbb
rcrb
push
sub
and
add
data16
pop
adc
out
push
rcrl
mov
outsl
cltd
lock
push
pop
cli
fxch
dec
pusha
rclb
pop
scas
aad
cmpsb
pop
add
lret
das
gs
xchg
push
ljmp
pop
cmp
addb
out
addr16
stc
pop
inc
dec
inc
jecxz
xor
push
adc
mov
add
fyl2xp1
and
xlat
dec
daa
lods
loope
mov
and
dec
cmpsl
push
push
aas
cltd
int3
call
fsubrs
xor
add
mov
leave
sub
sub
test
jns
mov
imul
adc
cmp
sbb
ljmp
mov
call
ljmp
jo
icebp
mov
pop
xor
bsr
ret
push
std
pop
xlat
cld
pop
roll
insl
mov
out
push
push
repnz
mov
call
add
pop
xchg
addb
test
nop
mov
mov
repnz
ss
inc
dec
loope
test
roll
ficoml
and
mov
pusha
or
lods
das
test
nop
shrl
repnz
jb
dec
sub
fcoml
mov
bound
in
sbb
pop
dec
sti
lods
ja
loope
les
fildl
sahf
out
popf
ret
lods
adc
fnstsw
out
mov
adc
mov
out
popl
and
cli
lcall
adc
push
das
push
xor
test
lock
out
xor
push
fisubl
inc
add
in
xor
cmp
sbb
jp
sbb
je
cmp
xstore-rng
cmpsl
mov
xchg
popf
xor
add
jb
jnp
add
fstl
in
cmp
push
cs
pop
xlat
scas
mov
lods
sbb
cmp
leave
xchg
les
cltd
pop
je
xor
xchg
es
cld
test
push
std
add
and
xchg
out
push
shll
lods
jo
push
cmp
aad
sub
cmp
cwtl
or
cmc
fsts
xlat
mov
rol
rolb
mov
test
cmp
pop
add
push
xor
push
pop
out
mov
out
dec
lret
push
lods
push
mov
js
lock
fdivl
and
cmpsb
mov
sti
movsl
jne
rcrl
je
sub
add
notb
mov
pop
out
enter
lods
and
mov
xor
adc
sub
scas
fs
sbb
pop
xlat
cmp
push
and
add
pop
out
xchg
imul
push
sahf
scas
lock
lds
lahf
cltd
dec
mov
and
sti
imul
fwait
lret
mov
dec
jae
int
xor
je
test
cmp
nop
push
dec
in
in
sbbl
mov
call
push
lods
sti
adc
shlb
fmuls
mov
arpl
and
daa
sub
xchg
add
pop
dec
mov
push
fdivs
mov
add
cs
bound
mov
dec
mov
xlat
out
ljmp
mov
je
adc
hlt
out
sbb
add
inc
aam
xor
fs
mov
andb
mov
daa
ret
in
mov
loope
rcr
adc
jecxz
mov
int3
inc
call
fwait
adc
fidivs
xor
xor
int3
fwait
jbe
shrl
imul
mov
mov
rorl
push
dec
in
jno
cmp
xchg
cmpsl
sti
push
in
aam
rcrb
test
mov
or
fisubs
sbb
mov
mov
loopne
test
dec
outsl
cmpsb
bound
cmp
jmp
mov
adc
stos
or
insb
jo
and
lret
cmc
sbb
mov
mov
cmp
into
jp
daa
int3
jge
cld
pushl
sub
and
inc
xchg
scas
je
cmc
pop
sbbl
pop
movsl
jle
cmp
sti
leave
push
pop
mov
popf
jp
and
adc
lods
xchg
ds
inc
pop
gs
sbb
push
movsb
adcl
pop
dec
sub
sub
xor
lods
jg
pop
jmp
xchg
mov
std
out
or
insl
jnp
mov
jl
dec
push
das
lock
imul
pusha
mov
das
push
jl
xor
lds
aas
sbb
adc
call
push
pop
mov
icebp
bswap
cmp
iret
cwtl
into
and
cmpsl
stos
in
and
or
jp
push
std
mov
mov
push
xchg
add
sub
clc
add
mov
push
push
xorb
fwait
rolb
inc
pop
sti
icebp
add
hlt
std
adc
fmull
mov
sub
call
mov
jecxz
xchg
test
int3
cmc
adcb
andb
out
xor
fcomp
mov
or
inc
mov
stos
rcll
or
cmp
iret
call
lret
mov
rorl
cs
into
arpl
sbb
sub
push
adc
lret
pop
lahf
xor
and
sub
inc
and
adc
jmp
je
ja
dec
cmpsl
push
std
pop
daa
insl
mov
arpl
or
mov
inc
xorl
cmp
mov
roll
jae
cmp
pop
mov
xlat
addr16
adc
fmulp
mov
jbe
sub
inc
insb
xchg
bound
cmpsl
cli
jne
jae
loope
add
push
sbb
shrl
sbb
xchg
test
or
mov
test
data16
loopne
mov
dec
cmp
insb
es
inc
test
pop
cwtl
push
xor
popf
jae
add
mov
sub
push
not
cmp
fcoms
jl
ret
faddl
cmc
inc
sub
mov
out
inc
jl
cltd
xor
add
fcmove
cmpsb
ss
xor
xor
xor
aam
dec
sub
push
or
push
cmp
inc
in
cmpsl
mov
shll
adc
cmp
shrl
dec
jl
dec
add
mov
dec
pop
cmp
xlat
fs
xor
jbe
js
fdivrl
aam
xor
rcl
sub
idivb
push
notb
call
sub
movsb
adc
call
dec
jmp
sub
xlat
push
push
in
stos
mov
pop
movsl
ss
xchg
push
xchg
xchg
and
pop
adc
adc
stc
pop
xor
into
fisttps
in
js
push
sub
jmp
daa
testb
leave
fidivrl
jp
cmp
inc
clc
testb
sub
dec
popf
adc
inc
pop
shufps
push
rclb
push
and
gs
pop
mov
cs
mov
int
sub
test
mov
adc
add
ficompl
cmp
testb
outsb
push
leave
lret
jecxz
shll
aam
enter
pop
sbb
stos
pop
adc
jge
std
fsts
cmpsb
leave
fisubl
out
cmpsl
shll
pop
movsl
sub
cmp
dec
sbb
stc
into
shl
push
or
loope
movsl
sbb
cmc
sub
mov
pop
mov
rdpmc
cli
ficompl
pop
sbb
adc
adc
sar
clc
mov
dec
aam
lods
inc
repz
jecxz
psubw
push
aad
mov
pop
enter
sub
in
popa
sti
ja
inc
sti
bound
mov
lods
outsl
push
or
lods
je
mov
dec
out
sub
scas
push
rcrl
nop
mov
pop
dec
test
mov
jbe
mov
pushf
out
in
jb
cmp
roll
add
xor
sub
push
and
cmc
inc
bound
jnp
test
push
cld
iret
fmull
pop
shrl
inc
dec
movl
dec
repz
std
xor
jg
outsb
rcrb
shll
pop
jmp
fcomip
in
js
pop
adc
jle,pn
pop
into
adc
push
decl
add
ja
divb
mov
pop
push
dec
jae
inc
mov
je
push
mov
rorb
jle
jbe
mov
xchg
push
clc
pusha
sbb
cmp
std
repz
daa
outsl
stc
xchg
insl
int
nopl
cmp
xchg
ret
insb
mov
cmp
add
notb
pop
mov
mov
xor
adc
lcall
or
push
pushf
or
mov
or
les
lcall
xchg
pmuludq
push
cmc
lcall
ret
sub
sarb
cmpl
psubusw
sbb
jnp
mov
push
les
je
ds
add
lods
or
out
mov
mov
pop
lods
cmpsl
jmp
dec
shlb
shlb
clc
icebp
fistpll
add
repnz
jmp
iret
rorb
imul
sbb
insb
adc
cmp
sbb
xchg
cltd
pop
shlb
or
push
jle
faddl
mov
lret
push
rcl
clc
adc
sbb
jb
cmpsl
nop
cmp
shlb
jnp
add
cmp
lds
int3
or
mov
cmp
jg
scas
cmp
imul
test
outsl
mov
stos
xor
jmp
sbb
inc
xchg
mov
andl
inc
mov
and
and
aas
stc
xor
shrb
hlt
mov
pop
stos
pop
jp
sub
aad
popa
outsl
sub
pop
cmp
gs
mov
ret
inc
or
cwtl
mov
mov
je
hlt
insb
xor
add
out
scas
push
mov
mov
call
subb
jmp
aaa
xor
sbb
ljmp
sub
popf
movsl
lcall
sub
gs
arpl
pop
fmulp
scas
mov
inc
adc
xchg
jns
mov
pop
xchg
call
mov
xor
sahf
dec
nop
jge
loop
int3
push
iret
popl
and
stc
loopne
rcrb
mov
cmp
mov
dec
push
ret
mov
add
insb
pop
lods
arpl
roll
popa
rol
loope
xor
push
inc
xchg
adc
fisubrs
ficompl
and
add
add
test
fmuls
add
inc
popf
mov
push
push
xchg
in
pushf
and
mov
insl
add
lds
popa
push
or
push
mov
cwtl
stos
cli
sarb
dec
jmp
pop
cmpsb
jecxz
outsb
int3
dec
inc
ljmp
out
xchg
dec
cli
xchg
inc
ror
repnz
mov
cwtl
and
jecxz
adc
popf
insl
mov
movl
icebp
sbb
jl
data16
sbb
inc
dec
dec
ljmp
mov
stos
enter
pop
lcall
test
pop
jg
and
ds
stos
mov
inc
mov
ja
dec
dec
inc
xlat
test
pop
lret
je
sbb
xor
std
inc
fmuls
fnstenv
xorb
loopne
fsubl
pop
outsl
jle
pushf
out
xchg
add
jl
jp
outsb
sar
addr16
jne
mov
shrl
lcall
add
xchg
fists
orb
mov
xor
sbb
mov
pop
repnz
ss
das
mov
mov
push
mov
outsl
mov
sarb
xor
cs
or
cmp
repnz
jp
cmp
mov
lea
mov
dec
dec
sahf
or
push
bound
jne
push
push
inc
ja
rcrb
sahf
pop
jnp
mov
xchg
js
test
push
dec
rcll
stos
xor
repnz
int3
shll
cmpsl
mov
loope
and
inc
or
stc
das
test
sub
cmp
leave
mov
ds
xlat
inc
or
ss
ret
ja
ret
pushf
test
fnsave
or
leave
call
cmc
xor
imul
loope
cmp
ljmp
lock
cmp
mov
aad
aam
fbld
lods
leave
repnz
mov
cli
ds
dec
add
roll
cmp
mov
sub
cwtl
inc
lret
jmp
xor
mov
inc
clc
mov
in
rcrb
pop
test
div
and
pop
aas
mov
popf
fs
lds
out
loopne
sub
shl
lds
add
fwait
subl
std
and
clc
and
jno
call
rolb
or
pusha
in
add
mov
dec
ds
pop
sub
add
fisubrl
inc
loope
cli
cmp
loope
fistpl
cmp
dec
out
add
test
inc
add
ja
notb
stos
jecxz
test
mov
sub
dec
cmpsl
adc
pushf
insb
xorb
dec
repz
es
or
es
mov
mov
fsubrs
call
mov
stos
mov
inc
idivb
jo
lods
and
imul
in
stos
punpcklbw
or
pusha
sarl
std
and
mull
leave
in
hlt
gs
ficompl
fs
or
neg
rcll
pushf
pop
std
add
inc
pop
lret
bound
cmp
sub
xchg
rol
or
cmpsl
cmp
xor
mov
adc
jecxz
add
xchg
mov
out
dec
sub
push
pop
ss
cs
inc
xor
lods
sbb
fbld
je
movsl
lds
cltd
and
lret
pop
cmp
mov
pop
repz
or
addr16
addb
xor
bound
add
pop
outsl
jl
shl
push
add
mov
iret
adc
or
xor
sbb
sarb
push
adc
inc
rcrl
xor
add
lret
mov
dec
lret
mov
inc
filds
into
out
lds
xchg
xchg
jnp
mov
xor
dec
adc
mov
nop
sub
out
popa
jno
dec
cmp
stc
push
and
popf
sbb
int
mov
inc
jecxz
mov
dec
sbb
inc
fcomps
cmpl
mov
adc
sbb
cwtl
mov
push
pop
nop
popa
mov
adc
lcall
int
fisttps
cld
sub
filds
mov
lcall
std
pop
std
aas
movsb
pop
cmp
dec
scas
fcomp
jp
out
cli
push
sarl
mov
and
jno
add
mov
bound
sarb
lcall
outsl
mov
lret
dec
jle
sub
aam
stc
xchg
insl
fldcw
and
sub
sbb
rcll
mov
pusha
sbb
ja
jl
test
lcall
dec
aam
iret
mov
into
xchg
push
je
jg
enter
inc
mov
rcll
xor
inc
sbb
sbb
daa
xor
pop
jbe
push
mov
aam
and
insb
in
adc
and
mov
jp
add
mov
jnp
push
fidivs
inc
adc
and
leave
pop
aad
sub
lods
mov
cmc
add
cmp
adc
lods
pop
add
mov
pop
imul
lret
rclb
jo
ds
lods
fcmovu
push
inc
daa
sub
enter
stc
and
imul
adc
dec
and
mov
push
jp
sub
sahf
and
add
pushf
xor
pop
xchg
hlt
cmpsl
adc
or
cmp
add
imul
mov
xor
sbb
imul
sarl
iret
popf
notl
and
lock
mov
lret
jg
movd
adc
pop
inc
mov
lea
cmp
jle
mov
sub
xchg
mov
or
or
subb
or
xchg
jmp
cld
lock
pop
and
cmp
and
and
pop
aam
shll
mov
enter
jne
mov
add
mov
push
outsb
data16
popf
push
dec
mov
jnp
aas
test
stos
mov
jp
ss
dec
fistl
sub
shlb
pop
neg
mov
inc
fistl
bound
mov
out
lcall
bound
js
pop
iret
sub
ljmp
fisubl
lret
add
lret
mov
mov
jl
scas
ds
jecxz
sbb
inc
or
xor
imul
scas
dec
sbb
fistps
pop
cmp
pushf
scas
stc
repz
adc
je
mov
mov
push
lds
mov
loope
inc
dec
sbb
gs
push
aaa
adc
bound
or
repz
mov
scas
xchg
push
inc
icebp
and
jp
adc
lahf
xchg
xchg
mov
filds
hlt
sbb
es
imul
fucom
jmp
cmpsl
or
inc
and
or
les
mov
cmp
jle
lds
jecxz
loope
insb
xor
add
jb
xchg
test
jge
fcomip
lea
or
xor
jge
cli
or
movsl
sbb
add
push
cmp
mov
movsl
add
mov
inc
scas
jno
xor
mov
mov
xchg
movsb
aaa
test
movswl
aam
jae
test
xor
cmpsb
clc
jecxz
xchg
sub
dec
iret
jbe
sub
and
xor
daa
ret
and
fucomip
sbb
dec
sbb
lods
loopne
addr16
xchg
lods
pushl
pusha
cmpsb
loope
js
nop
je
insb
inc
mov
gs
fimull
xchg
lods
lret
leave
test
test
loopne
aad
adc
addb
cmc
inc
add
mov
pop
fs
aad
cltd
addr16
lods
lret
aam
sub
inc
stos
push
movsb
push
push
cmp
mov
adc
dec
pop
popf
and
test
add
jl
xchg
fcoms
or
sub
pop
outsb
adcb
imul
into
adc
enter
loopne
cmp
dec
cli
inc
jnp
xchg
hlt
dec
jns
sbb
das
mov
mov
adc
add
lret
cmp
push
aam
cltd
xchg
jns
xchg
dec
xchg
inc
test
scas
and
dec
xor
out
jp
adc
jns
and
dec
sbb
into
xor
and
xor
outsb
sbb
push
imul
pop
pop
fsubr
pusha
and
xchg
sub
popa
pushl
lods
iret
movsl
adc
mov
and
repnz
xchg
aam
cmp
repnz
imul
push
push
xor
sbb
mov
rorl
and
pop
add
pop
enter
mov
dec
pop
xchg
je
stos
ja
adc
mov
push
sahf
es
push
mov
pop
push
push
add
leave
lret
mov
call
js
rcrl
fdivrl
sub
cmp
mov
xchg
fdivs
insb
pop
jmp
mov
fstpl
adc
xor
jmp
mov
ret
mov
mov
popa
sbbl
mov
imul
mov
bound
and
sub
push
into
fs
xchg
insb
int3
fmul
aam
push
sbb
mov
mov
pop
scas
inc
sub
push
in
xlat
add
cmp
and
stc
mov
shlb
fidivs
enter
jne
push
sbb
mov
mov
fadd
pop
dec
frstor
hlt
sti
push
stos
lods
sub
inc
pop
inc
push
cmc
sbb
dec
loopne
mov
inc
push
std
mov
pushf
dec
in
dec
loop
jge
lret
out
mov
pop
insl
ds
not
aaa
add
jg
std
aaa
sbb
xchg
or
xchg
cltd
dec
mov
dec
stc
xor
cmp
xlat
jg
push
out
dec
and
sub
les
cld
mov
mov
jns
xor
push
nop
and
sbb
roll
xor
fsubs
fcoml
call
sahf
ss
scas
inc
cltd
test
sbb
icebp
imul
stc
ja
and
incb
stos
jl
xchg
and
in
sub
fdivp
mov
lds
cwtl
jmp
js
out
dec
lea
imul
xchg
inc
cmp
xchg
fcmovnu
dec
daa
inc
sahf
lods
add
popa
leave
add
xor
jae
push
and
push
and
int3
sub
jb
xchg
sbb
mov
jne
int
pushf
mov
in
lods
lods
aas
addr16
sub
pop
imul
int
scas
scas
and
aaa
cmp
add
pop
adc
je
fldcw
inc
cld
mov
add
in
jecxz
movsl
lahf
fildll
lret
xchg
lods
mov
mov
inc
fldl
adc
jg
jl
aam
pop
fisubrl
sbb
pop
aad
push
cmpsb
fsubp
or
add
pop
jne
jp
push
leave
flds
pop
inc
xchg
dec
or
jg
cmpsb
imul
xor
sbb
popa
test
pop
push
sbb
mul
cmpsl
int3
roll
adc
pop
fst
lock
mov
mov
push
ss
dec
std
cmp
shufps
nop
lea
inc
nop
push
mov
inc
rclb
sbb
pop
pusha
xchg
fdivl
mov
mov
lock
cmp
pop
cli
cwtl
add
jmp
outsl
mov
sub
xor
pop
inc
insb
ja
cmp
sbb
fdivrl
inc
sub
sti
dec
jns
jno
ret
cld
ja
subb
int3
jno
fs
inc
push
ret
jg
aas
push
sahf
inc
or
jecxz
mov
mov
lds
fsubr
cmp
daa
int3
mov
fwait
jb
or
inc
in
xchg
jp
xor
dec
jmp
adc
mov
xor
mov
sub
lret
jmp
cltd
or
movsb
inc
xchg
cmpsl
std
out
movsb
adcb
or
mov
ficoms
daa
mov
and
jae
mov
jl
sub
dec
mov
movsb
sbb
push
sbb
and
ss
repnz
xchg
xor
and
rorb
repz
dec
faddl
push
jns
add
jle
jbe
push
aam
fadds
inc
dec
dec
loope
mov
adc
and
movl
jne
sub
push
outsl
daa
out
inc
dec
or
fldcw
cli
pop
pop
or
ss
cs
fldt
into
daa
dec
pop
fldt
les
mov
lahf
aam
inc
and
cmpsl
add
ja
outsb
popa
push
movsl
shl
insl
es
sub
repz
pushf
mov
sarl
jmp
int3
inc
ror
cmp
ljmp
icebp
jg,pn
pop
outsl
je
addr16
sub
je
leave
mov
sub
xor
xchg
or
mov
or
push
shlb
pop
xchg
cmp
lods
adc
testl
in
jmp
adc
ja
icebp
push
or
mov
fists
sbb
mov
fcoml
cmp
or
jns
dec
std
mov
aam
sub
add
cli
jl
xchg
mov
addl
jmp
pop
test
sub
ret
jmp
shll
mov
xchg
in
in
mov
cmc
ja
cmp
xchg
mov
jb
out
xor
pop
dec
jo
out
pop
fdiv
shll
jo
and
cmp
cmc
cmp
sbb
adcl
push
pop
aad
test
xchg
jg
jecxz
and
pop
out
push
ljmp
push
out
in
movsb
mov
xor
or
xchg
popf
mov
mov
push
sbb
or
add
cmp
or
sub
out
mov
lods
enter
sbb
lret
inc
push
add
sbb
mov
nop
dec
dec
insl
adc
mov
adc
xchg
lock
jp
cwtl
jne
ficomps
adc
les
iret
push
movsb
lret
push
pause
bound
push
pusha
popl
popf
das
push
mov
mov
fwait
add
mov
add
out
mov
lea
mov
lret
and
adc
div
pop
sub
sub
dec
stos
pop
adc
pop
push
in
inc
jbe
sbbb
mov
push
mov
jge
mov
rcrl
fisttps
adc
sub
ljmp
insl
ljmp
cltd
mov
aaa
cmp
les
outsb
xchg
loop
mov
repnz
push
dec
pop
mov
aas
lahf
pop
mov
fwait
mov
xchg
sub
test
sub
xchg
jecxz
fdivrp
push
cmp
lea
sub
cmp
inc
idivb
xor
jne
pop
inc
ret
mov
mov
scas
testl
pop
ret
loop
adc
pop
lcall
sahf
pop
in
ss
jne
in
scas
pmaxsw
mov
fidivrs
sub
aaa
jle
lret
int3
cs
call
out
pop
popf
icebp
stc
push
dec
es
out
jge
push
mov
push
cmp
xor
enter
xlat
inc
lcall
lcall
xor
cmp
into
cld
push
fisttps
dec
stos
imul
mov
or
jbe
cmp
aam
xchg
enter
lock
repnz
movsl
push
dec
pop
das
push
jg
mov
fwait
mov
ss
push
mov
add
sub
push
dec
and
imul
sarl
pop
jb
push
mov
push
les
pop
fidivrs
test
out
sub
popa
adc
pop
iret
cmp
scas
fnstsw
adc
xchg
out
popa
mov
iret
xchg
mov
notb
pop
out
fisubrs
cli
or
pusha
mov
adc
adc
addb
xchg
jp
dec
hlt
test
dec
inc
inc
jo
les
sub
insb
cmp
mov
clc
push
adc
fidivrs
sub
mov
pop
mov
les
dec
sbb
rclb
cmp
iret
into
inc
jg
push
pop
lret
rol
loopne
mov
insb
cmp
mov
mov
cmp
mov
rorl
pop
sbb
fiaddl
lds
mov
push
xchg
in
jl
pop
les
adc
scas
adc
sbb
rolb
ja
mov
mov
clc
cmp
loope
jecxz
mov
pop
in
sti
cmp
in
fbld
jg
repz
nop
cmp
jmp
push
aas
sbb
pop
pop
incl
and
fsubrs
cld
pop
xor
or
in
inc
shlb
jns
popf
inc
push
push
pop
pop
jns
dec
mov
fsubs
sbb
scas
mov
mov
lock
call
rcrb
mov
lds
adc
dec
fistps
fwait
mov
sti
dec
push
dec
jle
pop
jo
mov
fildll
fmull
dec
pop
outsl
int
stc
cld
xchg
sub
pop
jne
stos
push
xlat
mov
out
mov
insb
cli
mov
ret
inc
pop
cmp
mov
sub
xlat
dec
inc
mov
push
int3
sub
lods
fidivrs
movsb
xchg
flds
ljmp
in
inc
or
push
sbb
pmaxsw
mov
test
pop
je
sbb
push
adc
loope
jg
test
push
clc
call
movsl
out
inc
jge
aad
sbb
add
sbb
xchg
movsl
mov
cmpsl
out
fiaddl
sub
out
in
sub
movsl
jae
push
mov
rcll
inc
mov
leave
popa
out
inc
pushf
adc
repnz
push
xchg
cmp
adc
sbb
jmp
add
jg
xchg
cmpsl
test
sub
adc
out
insb
enter
or
mov
stc
jle
inc
cmpsl
ffree
xchg
leave
cmp
cmp
dec
cld
pusha
lods
dec
push
jmp
inc
inc
je
ja
repz
dec
cmpsb
push
pushf
arpl
inc
negl
pop
mov
sbb
flds
push
test
fisubrl
loope
and
sbb
and
add
adc
xor
in
movsb
into
scas
fdivrs
adc
jbe
rorl
outsb
andl
das
jae
call
rorl
adc
fld
bound
sub
mov
and
jecxz
pop
xor
push
sbb
adc
hlt
cmp
cwtl
mov
stc
xchg
pop
ret
mov
jb
cwtl
mov
add
call
sub
sub
mov
mov
cmpsb
sbb
xchg
int3
xchg
pop
xlat
test
xchg
inc
sub
or
data16
es
repnz
popf
push
push
idivb
adc
or
cld
sub
and
fistps
in
in
mov
shl
sbb
pop
xor
insl
jp
mov
scas
fbld
es
mov
das
xchg
jl
and
lods
cmp
icebp
xlat
dec
lods
xchg
jmp
dec
lret
int
inc
das
sarb
inc
mov
hlt
arpl
push
cmp
out
lret
fsub
std
and
xchg
mov
push
lret
loop
mov
lcall
lea
aad
pop
es
aam
nop
les
call
das
xchg
sbb
ds
jo
cmp
ror
mov
pop
add
inc
adc
shlb
loop
cwtl
jle
sbb
push
add
pop
push
adc
add
lds
mov
push
pop
push
add
bound
js
lock
bnd
outsb
outsl
ret
sahf
test
repnz
lret
mov
mov
ds
sub
push
in
in
jae
xchg
xor
adc
push
ja
mov
xor
xchg
push
js
int3
dec
add
movsl
mov
out
mov
jno
add
sub
jge
rcll
lock
aas
xchg
and
pushl
outsb
mov
pop
outsl
xor
and
lods
andl
xchg
cmp
hlt
repnz
sti
mov
ret
js
inc
push
sbb
inc
xchg
add
lret
negb
repnz
mov
xor
or
dec
bound
cld
loopne
pmaxub
adc
fldt
mov
imul
pop
daa
and
ja
xchg
loop
sbb
arpl
adc
xchg
dec
cmp
arpl
mov
frstor
dec
push
adc
xchg
leave
push
sub
xlat
jmp
popa
sbb
cmp
mull
mov
or
lods
jbe
adc
lcall
shll
and
inc
int3
pop
lock
inc
jne
sub
addb
mov
test
addr16
jb
idiv
jnp
cmp
cwtl
mov
jb
loop
fdivl
jo
insb
xor
xchg
or
jae
aad
add
and
dec
jecxz
scas
sbb
lret
test
add
and
ret
rcl
cmp
push
push
push
adc
jle
xchg
sub
xor
jno
jno
cmp
jae
leave
lea
mov
xor
out
aas
sub
add
iret
jecxz
cmp
loope
aam
inc
sbb
fcmovbe
mov
mov
sbb
jno
in
inc
fldenv
mov
adc
aaa
fdivrs
stc
inc
clc
inc
xchg
xor
xchg
sbb
adc
xor
lcall
stc
xorb
cwtl
pop
and
mov
enter
mov
or
mov
mov
call
pop
jge
adc
mov
push
fisubrs
jecxz
sbb
push
mov
sbb
jp
mov
mov
fimuls
pop
into
or
and
fst
adc
in
in
jp
mov
pop
in
mov
add
js
aam
andb
data16
or
xor
js
fisttpll
jb
sbb
mov
dec
sarl
xor
stc
das
into
pop
cmp
or
or
ret
cmp
dec
pop
add
stos
imul
xor
mov
pop
dec
out
mov
inc
outsl
sbb
fisttpll
pop
cltd
enter
jno
shl
cmp
cli
outsl
mov
imul
ds
ss
lea
mov
out
jmp
mov
sbb
adc
jp
cltd
sbb
aad
das
jbe,pn
js
xlat
popa
adc
xor
inc
xor
pushf
mov
int
movsl
cwtl
mov
xor
and
mov
push
or
iret
jae
out
mov
test
in
aam
sub
mov
lea
sub
data16
xchg
mov
fmul
je
sub
bound
stc
pop
icebp
mov
push
dec
adc
cwtl
mov
push
adc
cmpsb
xor
sbb
popa
sub
cs
xchg
cld
push
aam
mov
lods
adc
out
sbb
cwtl
jno
xchg
les
mov
ja
mov
bound
stos
xchg
jae
fwait
insl
mov
call
orb
add
out
popa
inc
xor
fnstenv
aad
loop
sti
jl
push
mov
push
adc
popf
test
les
sbb
lods
dec
inc
jle
out
aam
seto
popa
cs
icebp
daa
mov
leave
cmpsb
ja
fcomps
push
mov
xor
ljmp
mov
out
fld
xchg
ret
sti
imulb
jle
xchg
add
mov
pop
xor
xchg
or
mov
dec
and
fisttpll
movsl
aam
pop
sub
ds
add
data16
mov
mov
dec
jbe
xchg
dec
add
scas
jmp
loopne
sbb
and
insl
or
add
cmc
mov
data16
or
xor
inc
xchg
leave
mov
out
scas
fcomi
jecxz
and
cvtps2pi
pop
add
inc
push
imul
jmp
sub
jge
add
cld
sub
out
add
sahf
mov
dec
push
addr16
lods
lret
add
or
in
jmp
xchg
cmp
pop
and
inc
lcall
mov
sbb
mov
jno
pop
movsl
push
cmp
inc
or
lea
arpl
jo
das
xlat
nop
xor
xor
add
xchg
mov
sbb
cld
xchg
jp
push
mov
jo
mov
dec
nop
shll
mov
xchg
insb
jecxz
scas
aam
xor
adcl
repz
mov
outsb
or
mov
idivl
or
or
adc
fdivrp
daa
jbe
jae
cmc
adc
sub
gs
push
mov
lods
lea
mov
lea
mov
fwait
lcall
pop
add
cmp
mov
leave
xchg
jl
cmc
or
push
lret
adc
sbb
adcl
sarl
aas
stos
xchg
inc
jae
mov
cmp
icebp
fldcw
push
jl
mov
xchg
inc
jne
and
inc
jo
xor
push
mov
or
cs
adc
sti
testb
lret
mov
or
adc
into
cmp
mov
mov
mov
pop
flds
dec
test
lret
mov
outsl
fcompl
enter
aas
dec
daa
mov
jo
rcrl
gs
xchg
mov
ret
rorb
insb
std
div
es
jg
call
hlt
dec
lea
cmpsl
out
test
jl
sbb
divl
test
scas
icebp
adc
sbb
sub
shll
icebp
lods
cwtl
inc
mov
adc
and
stc
loop
pop
mov
inc
jp
fcompl
ja
lods
test
stos
rcll
xor
sti
mov
cmovs
xor
xor
cmc
xchg
pop
int3
into
jmp
inc
pop
cltd
lods
loopne
je
and
repz
mov
leave
dec
in
fisubrl
insl
mov
mov
sub
bound
inc
int
outsl
ficoms
push
sti
adc
imul
or
movsb
loopne
or
xor
cli
daa
stc
sbb
insl
xchg
in
jge
subl
pop
push
jge
ljmp
incl
xchg
dec
add
push
mov
call
xor
shr
daa
out
ret
or
and
xchg
iret
sbb
lret
movsb
daa
mov
xchg
inc
push
int
in
mov
adc
mov
mov
sbb
adc
ljmp
pop
or
push
imul
pushf
add
femms
repz
push
and
push
jno
fwait
inc
dec
enter
rcrb
insl
arpl
push
ds
mov
mov
fs
mov
pop
inc
mov
dec
dec
push
out
pop
mov
mov
inc
nop
xchg
or
sub
xlat
pop
jecxz
nop
mov
jbe
leave
divb
mov
mov
in
je
push
vprotd
sub
or
xchg
in
pusha
and
roll
xor
outsl
push
jg
cmp
mov
adc
aad
dec
push
je
das
hlt
cmp
sarb
push
push
adc
fs
cmp
out
mov
ja
lcall
aad
rorl
or
pop
pop
imul
jge
inc
fdivs
js
daa
setne
inc
enter
punpckldq
sarl
or
fldt
cmp
stos
xchg
inc
jecxz
mov
add
adc
inc
cmp
and
pusha
data16
push
xchg
sbb
jp
les
sbb
insb
xchg
in
in
inc
outsb
push
scas
int
movsl
jo
cwtl
not
mov
sub
dec
adc
lods
push
cld
cmp
nop
jbe
push
pop
add
cmp
call
rsm
mov
sbb
or
sbb
xchg
pop
add
daa
mov
shlb
das
fiaddl
push
or
lahf
sbb
out
cli
mov
add
jp
inc
lea
icebp
push
movsb
lcall
push
mov
sti
sbbb
fisttpl
fidivrl
cmpsb
sub
xchg
push
in
call
xor
mull
sbb
mov
inc
pop
mov
mov
sbb
mov
cli
xchg
mov
hlt
sub
in
aad
and
ss
cmpl
xchg
lahf
mov
cli
jno
sti
outsl
shl
pop
lret
push
cmp
push
mov
dec
jmp
insl
popa
fdivrs
movsb
dec
pop
push
xor
jmp
xchg
call
cmp
pusha
lock
sub
sahf
ljmp
ret
push
cmp
aam
pop
sbb
dec
xchg
adc
xor
leave
pop
mov
data16
mov
xchg
test
lea
rclb
xor
pop
ds
movsl
xor
loopne,pt
test
loopne
testb
xor
idivl
pop
lock
lds
sahf
dec
add
xchg
fldt
inc
inc
dec
push
and
movsb
hlt
call
cmp
and
push
rcll
cmp
jne
add
mov
out
fsubp
inc
mov
mov
mov
mov
mov
pop
adc
mov
mov
jbe
mov
loope
sbbb
pop
mov
xchg
mov
iret
iret
xchg
idiv
cmpsl
mov
lahf
pop
push
or
das
xchg
mov
sub
stos
dec
js
leave
mov
xor
cmp
or
or
sub
ret
dec
fcoms
jge
dec
insb
adc
data16
in
adc
mov
daa
cmp
fucomip
sub
cmp
inc
lcall
sbb
inc
and
cmp
cmp
and
fsubl
test
mov
lea
icebp
cltd
test
add
xor
lds
push
test
popa
es
dec
mov
adc
add
jl
idiv
mov
sub
mov
sub
imul
jne
jae
xor
clc
xor
push
pop
cli
jmp
loop
out
adc
dec
insl
nop
pop
or
adc
sbb
in
cli
outsl
add
rclb
add
test
into
add
out
cmp
push
ret
lock
mov
movsb
lods
and
sub
inc
in
adc
sahf
loopne
mov
cmp
xchg
jg
scas
loope
test
jnp
test
iret
xor
insl
movsl
data16
adc
and
pop
and
fcomps
out
pushf
cmp
lsl
add
xor
sub
pop
jl
ds
js
pop
add
enter
push
sti
fldt
add
push
sub
push
aaa
xchg
mov
sub
sbb
test
cmc
sbb
mov
or
lds
sbb
or
sahf
mov
inc
and
shlb
pop
pop
xorb
cmp
xlat
mov
sbb
fisubl
mov
add
mov
xor
push
movsl
xchg
push
scas
push
jns,pn
xchg
fsubrs
pop
ret
cmp
mov
es
pop
ret
mov
jle
js
mov
mov
xor
mov
mov
sahf
cmc
cltd
outsb
aaa
fwait
out
xor
call
in
dec
and
jl
lahf
xchg
ss
fwait
add
lock
add
icebp
dec
jb
icebp
loop
push
push
jb
cli
sbb
aad
sub
in
das
cmpb
int3
jne
sub
or
stc
js
mov
jnp
in
cmc
sbb
lcall
dec
mov
in
shrb
fstpt
sbb
popf
push
sbb
cmpl
jle
mov
jne
pop
xor
inc
cmc
pop
mov
lea
aas
insl
mov
rcll
lea
adc
fstpt
loope
inc
call
shrl
xchg
out
inc
mov
xlat
outsb
mov
jecxz
sbb
inc
adc
out
pushf
xchg
mov
inc
addr16
xchg
pop
lret
cmp
jo
nop
loopne
inc
pop
out
ja
xor
dec
push
fnsave
cmp
inc
clc
pop
clc
scas
jne
mov
aad
push
dec
std
test
repnz
insl
rcll
inc
repz
pop
daa
jge
insb
in
mov
inc
xchg
lods
addr16
xlat
clc
dec
add
dec
xchg
jb
sub
movsb
cmp
xorl
out
and
jnp
movsl
inc
dec
in
and
jae
or
mov
test
fistpll
push
mov
div
arpl
test
idivl
inc
sub
divl
lcall
les
adc
push
fsts
repnz
ret
fidivrl
xlat
scas
adc
aad
xor
movsl
add
dec
repnz
outsl
addr16
lret
xchg
hlt
mov
xchg
test
sbb
pop
pop
cmp
scas
pop
cmpsl
mov
mov
jbe
addr16
filds
adc
fwait
ja
stc
lahf
inc
push
ljmp
mov
dec
push
sub
popf
mov
sub
loopne
int3
mov
or
movsb
sub
ljmp
sbbl
repnz
outsb
sub
push
aas
movsl
cmp
xor
mov
in
adc
and
cltd
outsl
notl
movsb
test
xor
adc
mov
lds
push
sub
aaa
ja
or
mov
rorl
out
fwait
inc
loopne
les
or
sbb
jg
andb
fstps
cmc
movsb
cwtl
inc
pop
enter
dec
std
push
or
xchg
adc
enter
mov
loop
loope
iret
enter
inc
mov
daa
xchg
mov
add
in
outsl
mov
insl
daa
orb
loope
adc
xchg
xchg
arpl
loope
ret
mov
lret
imul
mov
inc
loope,pn
xchg
pop
stos
outsb
mov
mov
test
sub
and
pusha
inc
loopne
frstor
adcb
loopne
xchg
dec
mov
dec
jmp
jecxz
jge
inc
es
ja
jno
callw
repz
sbb
jl
sbb
pusha
and
push
ljmp
int
xchg
rcr
and
outsl
push
into
mov
or
jle
jnp
aas
imul
js
dec
mov
sbb
int3
pushf
push
add
ret
outsb
cmp
loop
jb
jne
cmpsl
enter
xchg
jae
movsb
test
or
push
pop
mov
fldt
ficoms
fucomip
daa
inc
jo
xchg
xor
stos
jp
lret
fstl
add
int
hlt
testb
or
outsb
xchg
push
lret
add
mov
fnstcw
test
xchg
out
push
ficomps
inc
or
es
sbb
outsb
and
jp
stc
add
xor
jmp
clc
ss
or
ljmp
cmp
out
out
jp
lds
and
inc
aaa
dec
rclb
out
test
cmc
shlb
pop
lock
xchg
scas
nop
syscall
xchg
mov
sub
and
mov
xor
or
add
mov
dec
adc
push
dec
xor
add
sbb
aad
ljmp
mov
xchg
cli
lcall
jae
cwtl
es
dec
and
mov
sub
jmp
push
cwtl
stos
bound
ss
pop
les
test
loop
jl
sbb
lds
ds
jbe
pop
imul
xor
outsl
bound
clc
sub
mov
sbb
push
in
add
out
ret
push
adc
addr16
mov
add
pop
mov
jle
test
cmp
hlt
pusha
and
js
scas
pusha
dec
out
sbb
aam
mov
in
lret
aaa
or
inc
test
rorl
movsb
xchg
add
mov
aas
sub
push
adc
xor
mov
sbb
fs
push
repz
inc
cmpsl
imul
mov
mov
add
jno
movsl
lret
push
fmull
fwait
loopne
xchg
lcall
fsubs
sub
xchg
jne
dec
jo
sbb
add
pop
das
movsb
push
mov
push
cmpsb
mov
mov
push
add
push
lods
cs
subb
xchg
add
jle
xor
shl
scas
push
push
daa
add
mov
adc
es
mov
mov
sbb
mov
sub
add
cltd
sbb
xchg
adc
sub
mov
inc
jno
dec
repz
sti
or
inc
scas
hlt
sub
lret
loopne
mov
push
cmpsl
mov
pop
lea
lret
inc
mov
jecxz
pop
movsb
inc
jbe
int3
sbb
add
push
jmp
dec
xchg
pop
loopne
pop
ja
cmp
scas
daa
mov
or
cmp
in
push
pusha
testb
pop
xchg
pop
push
incl
int
dec
cmp
insl
sbb
xor
inc
push
cmpsb
jns
daa
pop
add
ror
xchg
pop
sub
imul
flds
push
sti
int
xor
xor
jmp
dec
pop
adc
outsl
cmp
push
add
push
inc
sub
pusha
mov
mov
cmp
add
call
and
push
fisttpll
cmp
cwtl
test
pop
fsubrl
stos
cmc
fwait
mov
xchg
push
add
jmp
cmp
mov
pop
shl
int3
clc
sub
adc
fstp
test
fldenv
sub
xchg
sahf
jo
cmp
es
or
adc
arpl
ds
leave
mov
stos
movsl
dec
add
jae
test
mov
mov
cmp
int3
in
jne
xor
xchg
lods
push
cltd
push
cmpb
enter
jle
sub
cmp
stc
adc
es
cmc
mov
std
addr16
sarl
out
pop
sub
jae
data16
inc
fwait
iret
cmpsl
xor
aas
sbb
push
dec
test
dec
cmpsl
movsl
fisubl
repz
lea
das
xchg
outsb
jl
cld
push
mov
sub
pop
ja
insl
shll
scas
cmp
adc
cmp
jne
mov
out
mov
pop
push
push
clc
scas
fisttps
mov
cwtl
in
xor
xchg
lret
push
inc
add
mov
sarl
jge
mov
unpcklps
test
mov
es
outsl
sbb
pop
lea
cmp
into
mov
scas
test
loope
nop
jl
ss
xchg
add
sub
dec
addr16
adc
mov
clc
in
cli
mov
mov
loop
and
lds
in
inc
sbb
mov
notb
in
add
stc
jmp
iret
add
xor
xor
dec
pop
mov
fistps
sbb
dec
jb
das
jg
sbb
aaa
rorb
fistpl
lret
in
mov
pop
adc
es
lock
cld
mov
sti
lret
nop
pop
cmp
push
pop
insl
fadd
sti
cmp
cmp
pop
into
test
sbb
cmp
sub
divb
jp
ret
icebp
push
lret
add
sbb
in
pop
xchg
xchg
push
cmp
mov
mov
bound
dec
add
mov
imulb
jmp
call
shrb
out
add
fisttpll
aaa
pusha
inc
push
or
cltd
dec
xchg
sub
sub
adc
mov
out
inc
sbb
mov
fisubl
dec
inc
xor
shrl
push
jae
mov
add
or
sub
es
fcmovne
repz
pop
das
addr16
add
push
rep
xor
mov
mov
push
push
mov
jp
imul
mov
xor
das
std
mov
out
xlat
mov
test
out
xor
icebp
ja
jne
js
pop
and
push
cld
cmpsb
jbe
pop
and
pop
lds
loop
jle
or
nop
mov
lret
or
icebp
subl
repnz
dec
aas
lahf
adc
push
push
sub
xor
pop
insl
aam
mov
sub
fs
cmp
pop
mov
out
leave
into
cltd
xchg
flds
jnp
and
sbb
add
sub
stc
test
jne
xchg
pop
aad
jp
push
mov
dec
int
testb
shr
icebp
cmp
scas
es
cmc
inc
pop
iret
dec
aam
pop
mov
xor
or
sub
xor
and
adc
in
mov
pop
xor
and
out
out
pop
mov
jbe
mov
out
dec
repz
popa
movsl
insb
lahf
inc
pop
out
mov
sbb
orb
in
pmulhw
sti
test
push
sbb
add
cld
push
jle
jbe
xchg
xorb
mov
in
lea
xchg
mov
pop
out
lea
fwait
test
fsubr
mov
pop
sbb
sbb
mov
xor
dec
cwtl
pushf
and
and
enter
and
mov
pusha
jo
fisttpl
pusha
and
mov
test
loopne
ret
or
std
or
push
pmulhw
shl
xor
mov
xchg
fnsave
movsl
testl
and
sub
stos
sub
test
mov
add
inc
sub
and
loopne
out
stc
ret
xchg
in
dec
or
stos
mov
bound
mov
and
insl
gs
ret
dec
call
data16
mov
sub
les
mov
jmp
jae
repnz
cmp
pop
pop
insl
mov
jb
movsb
mov
subl
in
js
hlt
pop
mov
mov
push
xor
dec
clc
in
and
in
xor
pop
dec
imul
sub
push
dec
inc
and
pushf
and
in
into
push
mov
out
aam
dec
clc
push
xchg
mov
ret
or
fsubrs
dec
inc
push
and
mov
ss
mov
scas
xchg
jg
scas
add
jb
mov
dec
aad
dec
in
cs
loop
xor
inc
pop
dec
xchg
cmp
daa
cmp
pop
push
push
push
movsl
das
fsub
xchg
sub
dec
or
cs
ja
enter
add
sbb
js
stos
cmp
push
in
jno
sub
xor
ja
xchg
xchg
push
sbb
mov
mov
or
xchg
mov
mov
sahf
xchg
pop
push
xor
jb
jnp
std
pop
mov
push
std
in
lods
in
inc
test
sarl
and
jnp
push
mov
mov
xchg
pop
js
and
test
shrb
xlat
scas
es
cmp
in
xchg
ljmp
xchg
clc
or
or
mov
mov
add
cmp
adc
pop
jb
fcompl
in
push
lds
lret
mov
std
ljmp
rclb
fwait
push
inc
jbe
scas
int3
xchg
lahf
xor
out
rorl
sbb
jns
push
shlb
stos
sbb
dec
push
sbb
stos
inc
idiv
pop
and
ror
cwtl
popf
lahf
adc
mov
xor
jne
mov
sub
rcrl
pop
and
rolb
and
xchg
iret
jg
in
shlb
pop
repz
les
pop
sbb
stos
pushf
mov
dec
cltd
ret
movb
mov
icebp
push
mov
push
out
out
ficoml
push
inc
mov
xchg
aaa
test
int
pop
or
fsubs
lahf
xchg
js
cmp
pop
test
addr16
sbb
or
add
mov
inc
xchg
pop
roll
xchg
jecxz
in
inc
lock
adc
fcompl
cmpsb
stos
mov
xlat
inc
push
sub
jb
aas
fisubrl
sbb
out
repz
xchg
in
movsb
cmpl
mov
adc
insl
lret
or
test
mov
clc
mov
push
lock
xlat
ss
cmpsl
sbb
mov
mov
cmp
jbe
das
mov
stos
rorl
inc
lods
push
mov
je
inc
repnz
push
jns
int
movsl
pop
sbb
fdivl
sbb
sub
hlt
mov
jp
or
aas
sub
sub
mov
mov
inc
add
dec
jge
andb
bnd
stos
or
ret
jle
fldenv
inc
loopne
mov
xor
fsubs
pusha
lahf
mov
shll
push
pop
pop
or
lods
scas
jbe
bound
stc
es
nop
cwtl
adc
psllw
ja
sub
sub
je
jmp
pop
loop
sub
mov
int
es
cmpsl
inc
popf
outsb
dec
add
jle
dec
rorl
lret
icebp
dec
pop
cmp
popa
and
mov
daa
outsb
jge
fildl
mov
add
into
push
pop
popa
xchg
ret
xchg
add
popf
jl
pop
and
push
mov
repz
pushf
mov
add
jne
dec
sbb
mov
mov
xlat
mov
rorb
fisubl
repz
into
xor
ja
ss
int
mov
insb
or
cmp
sbbl
push
jno
dec
lods
test
dec
fdivrs
mov
repz
out
aad
pusha
movsb
movl
cmpsb
lea
ja,pn
ret
xchg
into
stos
popa
add
pop
cmp
push
mov
cmp
add
add
ss
sti
xchg
leave
push
imul
jmp
cmp
add
ret
movsl
xor
xchg
jbe
pop
es
xchg
sbb
or
call
cld
jns
xor
sahf
subl
fiadds
test
mov
insl
subb
and
js
sub
in
lret
ljmp
push
aad
mov
mov
and
loope
xorb
shlb
pop
cld
in
fisubl
xchg
jb
add
and
aad
dec
add
sbb
push
ret
inc
data16
cmp
mov
andb
stos
mov
insb
pop
das
mov
sbb
sbb
loop
sahf
mov
mov
sti
push
add
pop
les
dec
sbb
les
pop
daa
int3
adc
xor
mov
negb
adc
pop
ss
adc
rcl
test
cmpsl
shll
adc
sbbb
mov
lret
inc
xchg
scas
jmp
cli
les
imul
ret
lahf
dec
ja
fcomp
adc
ja
js
or
leave
pop
push
cltd
aaa
lods
sbb
inc
sbb
mov
out
sbb
adc
cmpsl
jmp
into
in
cltd
es
nop
mov
push
dec
pop
xchg
mov
xchg
push
and
ljmp
movsl
cli
test
jmp
stos
mov
cmpsb
dec
inc
xor
mov
fs
push
mov
aad
cs
pushf
call
sahf
ljmp
divb
fcomp
outsl
scas
cmpl
mov
dec
xor
in
js
xor
inc
push
rcr
pop
sbb
pop
cmp
fwait
hlt
pop
and
jp
cwtl
or
cltd
xor
add
repnz
mov
roll
mov
inc
push
mov
popa
xor
shll
cmp
mov
lea
adcl
xchg
mov
fcmove
inc
push
mov
das
rcll
pushf
enter
or
xchg
rclb
and
scas
out
or
clc
and
cmc
cmpsl
cmc
movsb
lods
mov
cli
sub
jnp
adc
pop
out
adc
cs
aad
jp
loop
int3
dec
outsb
ds
sbb
mov
inc
xchg
aas
mov
sti
push
inc
jbe
ret
add
cwtl
fistpl
testb
fidivrs
add
rcrl
xchg
pop
inc
xor
test
and
add
scas
lds
loopne
out
inc
lcall
fldl
inc
push
subl
mov
mov
xchg
push
jecxz
or
and
jmp
cmpps
pop
adc
push
push
xchg
adc
out
inc
mov
loope
mov
sub
int3
mov
mov
mov
shrl
arpl
lcall
jbe
push
push
aas
mov
mov
jle
xchg
dec
out
int3
dec
outsb
xchg
dec
orl
jb
sub
mov
add
out
xchg
jo
fidivl
inc
popl
pop
fmull
and
sarl
mov
or
push
stos
lret
sub
push
dec
cld
xchg
inc
inc
pop
sbb
movhps
sub
adc
lock
lods
mov
inc
push
or
push
push
mov
repnz
or
mull
testb
pop
dec
adc
xor
fnsave
xchg
daa
xchg
ret
inc
inc
mov
dec
daa
shrl
mov
loopne
in
add
testb
cmp
loope
push
arpl
pop
adc
into
jecxz
lock
sbb
mov
jbe
jp
sbb
roll
call
cmpsb
or
std
subl
loopne
pop
ss
in
xchg
mov
iret
pop
push
adc
in
and
movsl
inc
mov
aad
sub
clc
scas
mov
jns
jmp
push
pop
mov
mov
sub
xor
add
mov
ja
xchg
jo
movsb
hlt
sub
aad
movsl
dec
mov
dec
mov
cmp
test
orb
add
test
cmovle
ja
lcall
bound
sub
mov
xchg
hlt
push
jl
and
insb
enter
and
cmpsl
stos
outsb
sbb
xor
pop
stos
xchg
add
lret
push
cmpl
pop
push
fsubp
test
mov
test
xchg
and
mov
mov
push
cmp
dec
or
sahf
cmp
enter
fidivs
push
daa
mov
mov
gs
jb
setno
imul
movsl
and
and
movl
loop,pt
outsb
lea
jle
dec
inc
std
sarb
add
inc
popa
sub
adc
add
mov
cmp
or
sub
mov
and
inc
int
fsubr
out
lret
mov
adc
jge,pn
roll
imul
push
loope
lock
xchg
movsb
loop
les
je
aad
mov
sub
scas
imul
mov
adc
aam
bndstx
mov
fadd
sti
imul
jle
data16
push
or
xor
xchg
lods
aam
aaa
pop
aam
xchg
xor
mov
fcoml
imul
dec
out
scas
lods
negl
jnp
fidivrs
mov
ret
or
pushf
movsb
pop
cmpsl
loopne
mov
bound
iret
sub
jbe
push
pop
call
push
call
inc
bound
jmp
addl
fldt
mov
dec
xchg
adc
mov
mov
orl
shll
test
fsubrs
add
sahf
sti
add
mov
loopne
mov
add
arpl
daa
out
or
movsb
es
sahf
xchg
push
out
ficomps
mov
call
adc
sbb
fidivs
push
les
jne
jbe
in
iret
or
icebp
jo
sub
pop
loope
repz
push
xor
jbe
arpl
jb
and
pop
jne
jle
out
test
push
or
popa
out
inc
push
loop
in
enter
mov
add
dec
mov
or
or
xchg
pop
cltd
mov
inc
xchg
and
pop
xchg
or
and
inc
jp
mov
push
push
cmpsl
mov
int3
dec
fst
mov
pop
cmp
inc
cld
or
aas
dec
popa
sub
adc
fs
aaa
dec
xchg
inc
enter
jl
movsb
xchg
out
shlb
nop
pop
jo
sahf
lcall
mov
fcomps
shlb
add
mov
cmp
int
fwait
insl
stc
mov
aam
add
add
shll
les
jg
jecxz
gs
popa
jge
ja
sub
inc
jbe
iret
cltd
call
pop
mov
cmpsl
pop
jnp
jnp
xchg
mov
mov
jae
push
lea
in
imul
nop
iret
push
ja
xor
cmp
adc
mov
sbb
xor
sub
fistpl
shll
insb
and
nop
xor
cmp
dec
inc
aam
pushf
andb
outsl
dec
jle
add
out
sti
mov
fwait
add
xchg
hlt
js
xor
aad
adc
repnz
xchg
call
or
ja
into
jb
push
mov
xchg
cmp
inc
sub
mov
leave
lods
cs
sub
pop
lret
icebp
ret
mov
lahf
inc
add
daa
in
lret
or
ljmp
mov
test
jmp
push
xor
sub
mov
push
movsl
test
nop
andb
cmp
jg
ja
jmp
aas
sub
movsl
dec
fcomip
test
sarb
rcll
mov
jecxz
inc
aaa
scas
scas
andl
rorb
jne
pushl
or
lahf
cmp
pop
add
push
push
adc
push
clc
and
gs
jg
ficoml
sarl
inc
adc
lock
cmp
mov
popf
dec
and
mov
cmp
jnp
mov
aam
dec
sbb
in
cmp
sub
xchg
aas
shlb
pop
fwait
iret
sti
cmp
clc
cmp
cmpl
stc
gs
imulb
push
andl
push
mov
iret
pop
nop
cmpsl
popa
in
inc
shlb
imul
and
xlat
lods
cs
adc
scas
stc
jecxz,pn
pop
and
fisttps
pop
mov
cmp
aas
jle
stc
xlat
sub
sbb
rclb
jne
push
stos
add
sti
bound
and
adc
mov
mov
add
jp
sub
and
and
int
cli
jl
mov
repz
pop
mov
addl
dec
mov
adcb
cmp
push
aas
shrb
xchg
inc
pop
fisubl
and
lods
rolb
sub
xchg
imul
mov
cs
cmpsl
sub
inc
jnp
xchg
fadd
ret
mov
xchg
in
dec
pop
inc
aas
inc
cmc
mov
mov
mov
daa
das
sbb
fs
test
pop
adc
mov
jne
movsb
cmp
xor
aad
mov
fmulp
test
lcall
sub
sub
and
test
sahf
jecxz
pmullw
lret
mov
cmp
stos
shrb
inc
int
push
dec
or
inc
xor
pop
pop
or
dec
addr16
std
into
negl
insb
rorb
and
fcmovne
push
loopne
mov
mov
stc
int
subb
dec
mov
dec
xchg
pop
xor
push
or
mov
mov
mov
push
xchg
mov
push
push
jl
or
clc
cli
xchg
das
adc
lods
orb
iret
xchg
dec
jb
out
cmp
xor
gs
in
scas
les
mov
fs
inc
insb
push
dec
adc
sbb
fwait
xor
push
stos
ret
push
sub
mov
fs
or
cltd
dec
sti
adc
push
jbe
xchg
call
ffreep
into
mov
aas
les
push
mov
mov
test
xchg
cmp
inc
fistl
and
mov
popa
je
scas
adc
lds
push
loopne
jns
or
pop
sarl
or
pusha
jno
in
cs
add
icebp
add
orl
jle
ja
shl
inc
pop
dec
push
dec
xor
addr16
cmp
mov
inc
in
stos
cmp
stc
xchg
int3
stos
shll
fwait
aas
lcall
adc
cmp
adc
and
hlt
adc
int3
shll
outsb
mov
jmp
xor
lahf
lea
or
addr16
pusha
pushf
lock
sub
ret
stos
icebp
subb
imul
ret
lods
les
fildll
movsl
pop
sbb
sbb
inc
ljmp
or
mov
jo
pop
mov
and
idiv
push
shrb
mov
js
pop
cmp
aas
addr16
addr16
inc
or
add
fidivrs
leave
dec
mov
push
cmp
inc
lods
fwait
lret
arpl
stos
push
push
mov
sbb
dec
mov
in
jb
daa
xchg
pop
fdivr
loopne
out
xor
cmp
iret
mov
mov
in
popf
mov
arpl
scas
adc
fs
sbb
sti
mov
or
mov
jg,pt
sub
fistl
dec
cmpsl
and
sub
aas
and
jns
xchg
fcom
lret
pop
fwait
imul
xchg
shll
mov
push
fsts
int3
test
lock
psubw
sbb
jnp
rcll
inc
les
inc
bound
mov
add
or
or
mov
xor
push
stos
dec
dec
or
pop
in
push
loopne
loope
setnp
mov
leave
xchg
sbb
fwait
add
or
cmpsl
cwtl
or
lock
and
pop
aaa
test
stos
mov
or
insb
pusha
mov
cltd
into
jae
cs
out
popf
lss
ss
push
add
hlt
stos
sub
or
testl
cmp
mov
mov
es
aad
add
shrb
push
pop
add
mov
into
inc
push
mov
jne
shll
cmp
je
xor
xor
xor
js
fidivs
xor
inc
stos
aas
add
dec
adc
lods
cmp
lahf
jb
mov
sbb
out
pop
das
and
sbb
ja
xchg
icebp
jecxz
out
gs
inc
jno
cltd
das
out
fisubs
rorl
scas
lcall
popf
xchg
sbb
jle
scas
jge
cmpsl
je
jmp
inc
in
mov
add
inc
pop
bsf
nop
prefetch
xchg
mov
sub
repnz
out
ss
fidivrs
nop
rcrl
mov
divb
jg
aaa
xchg
mov
fwait
xchg
ja
xchg
dec
jp
jo
dec
mov
decb
in
insb
dec
add
fildl
mov
lods
mov
and
adc
mulb
icebp
or
insl
orb
cmp
cld
scas
or
fadds
outsb
xchg
xchg
sbb
xchg
loope
mov
cmp
loope
add
out
add
xor
mov
push
mov
mov
xchg
add
imul
ret
fadds
jge
lcall
jg
lods
cmp
sbb
pop
pop
sub
xchg
aad
frstor
stos
test
pop
cmp
rolb
pop
xchg
dec
clc
popf
fsubs
mov
daa
adc
in
push
lcall
jne
push
mov
iret
dec
xchg
movsb
mov
or
sub
or
xchg
jno
jg
lock
xchg
cs
or
mov
in
into
lock
pop
testb
jb
lret
out
xor
ja
pop
inc
adc
test
sbb
sbb
and
out
lea
or
imul
add
movsb
add
or
cmpsb
testb
je
mov
xor
fcoml
ret
imul
lcall
cmpsl
aas
mov
mov
pop
add
repz
jmp
adc
stc
push
xor
fistpl
sti
sbb
jo
jno
add
fwait
imul
loop
aad
je
loopne
jae
shlb
in
popa
out
pushf
mov
mov
lahf
jne
in
shrb
inc
sub
les
rcrb
dec
stos
adcl
rcrl
cmp
dec
inc
add
scas
push
jno
sbb
mov
mov
sbb
pusha
cmc
incb
rolw
xchg
xor
cmc
pop
push
arpl
dec
gs
mov
int
mov
insl
shrl
fcoml
imul
call
push
push
pushf
adc
ss
fiaddl
xor
jnp
mov
push
out
sbb
in
div
push
dec
notl
movsb
mov
jmp
cmp
in
adc
call
idiv
add
ret
jb
out
adc
fwait
push
fcoml
pop
xchg
movsl
in
out
out
mov
dec
test
jne
cmp
pop
int
sbbb
sub
jl
std
ljmp
dec
mov
ficoms
mov
push
and
push
dec
add
test
es
ret
loopne
jmp
or
and
xor
sbb
mov
or
lcall
not
pop
mov
and
pop
push
adc
xchg
sbb
in
mov
xchg
pop
fsubrl
or
ljmp
cmpsb
enter
int
mov
ja
mov
push
movsb
sub
or
xchg
xor
lods
sub
popf
ss
xchg
inc
inc
test
xchg
js
repnz
ret
addr16
adc
push
enter
out
je
out
cmpsb
rcrl
xor
push
sub
mov
add
or
mov
aam
mov
add
xchg
inc
jmp
aaa
push
push
ret
jle
outsb
out
repnz
mov
pushw
xchg
xor
or
mov
jbe
rcrb
mov
adc
ret
push
jmp
rcl
out
lock
and
dec
nop
jb
int
enter
data16
ret
je
dec
inc
enter
rcll
addr16
push
outsb
nop
adc
out
sbb
cmp
and
out
fwait
cmpsl
push
sbb
adc
dec
mov
mov
add
das
in
imull
cmp
sub
dec
inc
sbb
sbb
jp
rcll
and
mov
pusha
mov
cmc
inc
cs
data16
int3
xchg
fs
pop
mov
nop
mov
fcomps
or
out
sti
mov
adc
mov
xchg
inc
clc
jnp
fmull
gs
sbb
shrb
adc
push
js
jg
jnp
das
adc
sti
xchg
and
or
dec
fmull
cld
outsl
adc
les
sar
imul
aam
adc
shlb
shrb
dec
cmp
push
ficompl
mov
jge
rcrl
jo
mov
cmc
aaa
pop
add
push
mov
adc
cmp
rcll
aam
inc
xor
nop
insl
dec
jb
pop
andl
jge
lcall
fsubr
hlt
sub
mov
mov
or
mov
push
cmc
xor
and
mov
cmc
fstpl
movsb
loop
ret
outsl
xchg
subb
pop
dec
or
aam
movb
jmp
and
fs
xlat
cmp
clc
mov
scas
fisubrs
shlb
fistpl
mov
mov
out
and
jmp
sub
std
jns
add
push
xchg
mov
popf
push
out
clc
add
pop
out
fcompl
and
in
xor
cmp
les
js
ret
pop
inc
inc
aad
out
les
and
mov
lods
jbe
sar
imul
pushw
push
push
ljmp
aas
mov
das
lods
sti
mov
push
adc
mov
mov
lods
cltd
ljmp
imul
sbb
mov
sub
lret
fwait
out
xchg
and
in
aaa
dec
rcl
or
mov
cmp
pop
jle
lds
or
stos
jns
or
lret
lcall
sub
add
mov
popa
fsub
mov
mov
int3
testb
sub
xchg
jns
imul
sti
loopne
adc
loop
add
cs
or
and
sti
pop
dec
mov
sbb
push
decl
push
jg
sar
sti
stos
nop
repz
in
cltd
adc
sbb
movsl
in
pop
es
fldt
dec
cmp
sahf
mov
or
mov
arpl
es
cli
int
or
xchg
fisttpl
sti
popf
daa
cmpsb
mov
adc
or
xchg
jge
lods
cmp
sub
testb
repz
xchg
xor
ljmp
pop
out
stos
mov
jge
test
shrl
mov
movsl
jbe
mov
icebp
sub
inc
in
clc
xor
mov
outsb
mov
mov
addr16
jnp
dec
lock
or
push
imul
stos
stc
in
movsb
lods
leave
shlb
movsb
jae
mov
xchg
xchg
jbe
jnp
fs
ficoml
fs
sbb
pop
mov
or
shlb
pop
aad
loop
in
xor
mov
lods
mov
loopne
into
or
test
mov
fnstcw
test
push
cmp
or
bound
std
jne
les
jns
into
xor
and
fsts
or
or
mov
mov
cltd
mov
inc
or
and
jmp
add
sbb
mov
imul
push
shld
scas
xchg
scas
in
dec
dec
xchg
push
adc
dec
sub
mov
pop
negl
je
rcrb
outsb
mov
pop
xor
sbb
push
add
adc
or
mov
rcl
push
cmp
movsl
xchg
dec
pop
lock
jecxz
xor
adc
mov
out
sar
or
gs
cmc
stos
push
testb
inc
movl
fwait
leave
dec
in
cwtl
push
or
adc
out
jge
dec
sbb
cmpb
sbb
mov
mov
or
inc
out
ja
fwait
pushf
jg
push
popf
dec
sub
adc
adc
scas
and
add
fmuls
jge
movsl
xchg
rcrb
push
in
and
lds
fsubs
aaa
shrb
push
dec
aad
jg
mov
stc
pop
dec
hlt
mov
dec
aas
daa
mov
addl
jo
cmp
pusha
cwtl
xchg
mov
inc
add
fcomps
adc
cmp
inc
and
outsb
in
nop
inc
xchg
pop
sti
rorb
outsl
lea
xchg
push
test
inc
test
mov
loop
cmp
cmp
and
pop
push
mov
jecxz
cmp
sbb
sbb
js
fdivrp
and
je
sbb
xchg
sub
and
push
pop
fbld
movsl
mov
jp
dec
push
push
clc
cmp
movsb
pop
fisubrl
scas
mov
sub
shrl
sub
mov
jne
mov
in
adc
cmp
nop
inc
xchg
and
inc
dec
pushf
adc
add
imul
fildll
xor
out
mov
inc
insb
dec
shlb
push
lock
sti
sbb
xlat
adc
call
lods
shlb
dec
fmull
pop
notl
jmp
fcompl
adc
adc
je
ljmp
icebp
adc
mov
push
leave
mov
dec
pop
jb
cwtl
mov
pop
xchg
rcrl
ret
mov
mov
js
jmp
inc
das
mov
fdivl
adc
and
fcmove
out
repnz
dec
dec
lods
clc
jne
inc
out
mov
xlat
jp
inc
mov
mov
popa
adc
out
sub
fwait
or
xor
pop
imul
dec
jnp
mov
inc
cmc
and
js
gs
add
inc
flds
pop
mov
nop
insb
jo
ds
ljmp
ret
mov
mov
fmuls
sub
sub
jns
fstps
mov
andl
dec
jns
pusha
cmp
icebp
and
popf
and
and
frstor
add
mov
push
pop
mov
sub
jg
inc
test
ret
and
mov
popa
sub
mov
ds
xchg
scas
xchg
je
add
adc
fistpl
add
sbb
ds
mov
jo
mov
add
mov
xor
add
and
mov
inc
mov
ficompl
mov
scas
jle
dec
dec
shll
cmpsb
leave
push
and
add
nopl
insl
in
sahf
bound
pop
pop
outsl
mov
lcall
sub
or
cmpsl
xor
popa
cmc
push
mov
fisttpll
fiadds
jmp
loop
fmull
mov
fistl
aad
loop
repz
sbb
flds
lret
popf
int3
in
aam
enter
and
adc
loopne
mov
mov
dec
lcall
test
shlb
lds
fisttpl
stos
lret
lcall
scas
mov
in
testl
repz
sub
ret
mov
mull
in
rclb
jg
scas
cmc
xor
ja
aas
out
adc
add
jecxz
sbb
adc
or
outsb
sahf
dec
fwait
mov
arpl
std
rcll
pop
lahf
cld
mov
push
into
pop
adc
notl
mov
pop
jno
or
sbb
adc
sub
enter
pop
mov
pop
enter
sti
out
inc
xor
xchg
xor
adc
pop
cmpsl
xchg
mov
mov
cmpsl
mov
mov
sbb
mov
push
fldt
repz
stc
pop
mov
inc
mov
mov
ret
shr
push
lret
and
lcall
push
inc
or
jmp
adc
and
sti
sahf
push
dec
and
adc
sbb
add
xor
inc
testl
jbe
inc
cmpl
mov
push
mov
sub
adcb
mov
sbb
icebp
add
mov
loopne
jne
inc
xor
fs
imul
push
inc
xchg
jmp
inc
jns
insb
mov
mov
lret
sub
popf
xchg
adc
dec
adc
mov
dec
fstps
and
xchg
or
push
and
push
scas
outsl
push
dec
loopne
stos
popa
scas
ds
inc
xchg
sarl
ret
bnd
jl
insb
notb
sbbl
mov
pop
and
adc
loopne
mov
fwait
test
sub
ret
std
int3
pop
repz
cmp
addr16
cltd
xor
push
ret
jns
repz
inc
ret
repnz
mov
mov
or
aaa
and
push
gs
or
scas
mov
in
leave
sti
imul
sub
repz
push
and
push
jmp
pushf
jno
in
or
dec
cld
enter
stos
imul
daa
sbb
das
push
fiadds
sbb
fldl
push
hlt
mov
cs
mul
jae
dec
ret
sbb
ret
add
mov
adc
mov
jo
mov
adc
ja
dec
mov
sbb
cmp
insl
in
jge
mov
out
outsb
jecxz
and
and
pop
jge
mov
ret
and
dec
jg
mov
mov
and
fadd
mov
xchg
loopne
and
dec
and
rcll
sub
add
lret
and
or
outsb
jl
cwtl
cmp
push
pop
dec
mov
inc
jle
rorb
inc
mov
mov
cmp
les
sbbb
or
jae
mulb
shll
sub
outsb
clc
mov
xchg
in
loope
inc
mov
mov
or
or
cmp
lods
inc
loope
std
cmp
shlb
hlt
in
mov
sub
leave
fcoms
fstl
mov
add
cmp
mov
movb
aaa
pop
mov
and
shld
cwtl
aaa
dec
addb
xlat
jbe
pop
out
pop
lcall
iret
hlt
jp
mov
jp
inc
mov
push
repz
mov
jne
add
mov
arpl
ficoms
aad
push
je
ficomps
test
mov
lret
imul
adc
dec
hlt
pop
iret
or
push
xlat
fadds
pop
mov
int3
bnd
popf
dec
pushf
ljmp
xlat
test
or
jl
lcall
lock
push
imul
jp
adc
imul
je
ud1
ljmp
cmp
or
sub
sub
mov
outsl
or
mull
adcb
lock
test
pusha
or
inc
sbb
movsb
loopne
dec
push
addb
cmp
pop
sbb
call
cmp
je
pop
ficoms
cmp
jp
push
and
iret
xchg
ss
xchg
xor
add
cmp
sbb
into
int3
mov
or
mov
push
mov
js
adc
aam
sar
sbb
sbb
jecxz
andl
jmp
enter
inc
outsb
icebp
pop
push
or
xchg
dec
jl
inc
mov
add
imul
fdivrs
ja
ss
in
cmp
or
pop
nop
jne
bound
hlt
dec
mov
xor
shl
mov
xor
rcl
les
jns
rcr
or
cmp
sub
mov
cmp
outsl
ss
rol
lds
pop
repz
shll
pop
adc
and
in
and
push
mov
cmp
xchg
cs
add
js
or
aam
pop
test
ljmp
adc
lock
push
sti
cltd
jecxz
mov
xor
out
iret
arpl
dec
cwtl
cmp
add
jbe
xor
xor
sub
inc
adc
mov
sahf
adc
mov
sahf
les
out
cltd
push
jp
lahf
ljmp
add
fstps
clc
push
add
cmpsl
add
aas
mov
mov
mov
mov
push
xchg
jge
enter
stc
mov
jae
movsl
jbe
pop
pushf
push
dec
rol
call
xor
dec
loope
mov
pop
imul
dec
mov
push
cmp
mov
xchg
out
jnp
ljmp
ja
jmp
jl
xor
sub
xchg
pop
push
out
rclb
push
mov
shlb
or
cmp
and
push
ja
pop
mov
dec
ret
mov
jo
cmp
int
jp
loop
cmpsl
xor
pop
sti
cmp
dec
push
div
or
loopne
ljmp
xchg
fcoml
hlt
jle
inc
or
lahf
adc
cmp
shlb
push
pop
pusha
cmp
fnstsw
xchg
adc
ror
test
mov
or
pop
js
fistps
adc
fs
dec
mov
movsl
arpl
mov
lock
mov
add
push
lahf
mov
mov
and
rclb
shlb
ljmp
movsl
cmp
mov
jg
stos
sub
loop
loope
add
xchg
xchg
or
add
xchg
inc
push
pop
aad
xor
cmp
push
into
fwait
fs
dec
lahf
adc
stos
imul
add
insb
or
shrb
test
or
gs
jae
push
in
or
movsb
and
jno
fcoml
xchg
outsb
jmp
out
ja
in
adc
insl
cld
cwtl
inc
pextrw
push
imul
cld
fists
ret
loop
xchg
call
in
fimuls
fdivrl
adcl
mov
mov
outsl
shlb
lock
les
push
xor
gs
jg
inc
xor
outsl
dec
pop
mov
inc
xor
pop
cmp
push
daa
and
das
insb
xchg
sub
pushl
cmpsl
xchg
enter
push
and
test
cmp
ds
push
ret
ljmp
push
daa
mov
push
sub
mov
test
push
mov
sub
or
and
imul
sub
sbb
xchg
aaa
fisubrs
pop
pop
lret
jl
pop
movsb
mov
xchg
inc
ffreep
ret
adc
inc
mov
sbb
cmpsb
adc
pop
sub
adc
into
in
cmp
insl
sbb
mov
imul
adc
dec
pop
loopne
pop
aaa
dec
insl
jo
or
int3
decb
enter
dec
pop
dec
test
inc
cmpsl
push
dec
lock
sub
and
aaa
and
pop
icebp
aam
test
fstps
mov
js
aaa
mov
aam
xor
fwait
mov
into
cs
int3
sbb
sub
push
cmpsb
mov
lds
push
mov
mov
or
sbb
lcall
xor
xchg
popf
scas
mov
mov
mov
dec
pop
mov
out
xor
adcl
push
js
frstor
sahf
test
mov
add
in
xchg
lret
xchg
cld
lahf
xor
mov
or
add
stc
lret
and
dec
test
fistpl
sub
adc
mov
push
adc
ret
mov
xor
and
sbb
pop
repz
push
push
xchg
or
aad
dec
lret
fnstenv
xchg
xchg
xlat
pop
mov
push
bnd
pop
lcall
xchg
pop
adc
mov
push
mov
inc
popa
movsb
enter
pop
or
mov
push
cmp
sbb
stos
sahf
insl
dec
std
xchg
test
adc
mov
dec
mov
push
in
fcmove
xor
xor
pop
xchg
inc
int3
pop
push
push
call
fisubl
xchg
lds
mov
sti
cltd
mov
and
push
mov
cs
dec
jl
fcmovnb
cmp
mov
leave
sahf
sahf
jb
ficoms
jns
sarl
xor
lods
cmp
adc
sbb
cli
jb
and
imul
xor
sbb
or
jbe
aas
mov
pop
xchg
fiaddl
repz
fdiv
test
mov
out
loopne
lcall
pop
pop
icebp
aam
out
push
fistl
mov
pop
inc
sbb
pusha
or
repnz
sub
fcoml
jl
dec
sbb
sub
xchg
sbb
shll
aaa
andb
jae
std
mov
mov
mov
jl
adc
fcompl
push
les
ffreep
cwtl
and
xor
leave
mov
jns
call
call
mov
das
fwait
rclb
fldcw
mov
sbb
and
cs
cmp
xor
mov
int
ficoms
jo
js
pop
mov
shll
int
imul
mov
xor
mov
jg
xor
nop
adc
stos
ss
push
add
dec
aaa
or
jne
xchg
adc
jbe
jmp
dec
mov
sbb
inc
xchg
jne
pop
pop
adc
pop
xchg
push
mov
jecxz
pushl
inc
inc
lahf
das
push
imull
pop
pop
add
jle
lds
enter
pop
insb
mov
popf
sbb
add
scas
repnz
rol
stc
insl
mov
or
mov
mov
ss
aad
adc
ds
jl
jecxz
orb
mov
mov
lods
cmp
enter
outsl
push
xchg
or
divb
ljmp
cmp
loope
xchg
in
cmp
daa
outsl
jge
jle
xor
lods
insl
cmpl
sti
out
adc
cmp
movsb
pop
xor
nop
daa
mov
add
andl
repz
add
fwait
sub
test
add
les
dec
push
cltd
pop
lcall
fisttpll
and
jae
sarb
or
scas
cmp
mov
xlat
adc
outsl
push
sub
das
mov
ret
fnsave
xor
enter
jns
mov
ret
lea
sbb
sbb
mov
xchg
xor
mov
sub
pop
jmp
xor
int3
xchg
fisttpl
clc
push
lea
sub
call
mov
test
fcmove
rclb
es
push
int3
je
test
rolb
cld
sbb
dec
inc
hlt
xchg
or
jo
mov
dec
lock
fildl
push
imul
mov
mov
cli
das
sbb
jbe
popf
lea
add
dec
ljmp
outsl
dec
popa
loope
pop
ds
clc
addr16
sbb
lods
jle
pop
lret
scas
stos
push
xlat
outsb
push
cmpsb
rcrb
push
xor
xchg
xor
mov
and
sub
rcrb
inc
not
enter
mov
dec
mov
mov
cmpsb
repz
ljmp
jnp
push
das
imul
sbb
jg
addr16
mov
push
mov
dec
rcrb
incb
jl
rcrb
imul
fbld
mov
push
xlat
test
push
push
pop
xchg
inc
jns
sub
pop
and
jmp
inc
jo
push
cmp
fbld
dec
ds
insl
mov
jecxz
dec
xchg
sbb
stc
xchg
pop
xchg
ja
push
fwait
les
sub
lods
clc
sti
nop
pop
addr16
add
test
lods
and
hlt
int3
pop
out
ljmp
and
ret
rcl
adc
lea
mov
hlt
push
adc
ss
adc
mov
sub
and
push
xor
icebp
push
sbb
dec
ds
mov
sub
mov
xor
nop
lds
or
js
ffree
rcrl
push
xor
add
xchg
arpl
movsb
adc
jmp
cmp
mov
lods
pop
xor
and
cmpsl
push
clc
addb
aaa
notl
inc
mov
cmp
and
jle
mov
xchg
insb
sub
mov
adc
imul
dec
aam
aas
in
mov
nop
add
mov
outsl
leave
jns
xlat
popa
pop
mov
aaa
pop
or
data16
stc
mov
subb
mov
mov
or
xchg
in
dec
adc
lods
inc
insb
push
xchg
sbb
pop
xchg
mov
sarb
bound
stc
aad
ljmp
mov
sub
ret
mov
sub
pusha
sbb
xchg
lret
push
inc
cs
in
push
and
cli
mov
sub
mov
ljmp
cs
stc
mov
out
loope
outsl
cmp
ljmp
das
lfs
cmpsb
mov
inc
js
xor
add
in
je
dec
cmp
dec
jns
imul
xchg
test
push
pop
mov
ret
pop
insb
in
mov
add
lock
xor
xor
xchg
xchg
or
js
scas
xor
sti
push
dec
cmp
mov
xor
in
mov
and
mov
cmc
push
stc
pop
add
imul
rol
pop
mov
mov
cmp
or
jno
fmuls
pop
push
lea
jns
add
pop
lock
cs
jnp
insl
inc
es
sub
and
pop
jecxz
sub
cmp
in
inc
xor
es
mov
pop
rorl
or
or
or
push
in
mov
jae
mov
and
add
icebp
jne
push
stc
push
dec
mov
xor
cld
dec
pop
add
dec
fs
add
outsl
icebp
gs
repnz
popl
fcomp
ror
rclb
mulb
shrb
mov
adc
int
ret
nop
jl
jmp
add
inc
xchg
in
inc
push
and
out
add
inc
hlt
mov
adc
cmp
xchg
sub
pop
andb
sahf
fsubrl
jl
cmpsl
xchg
rorl
mov
popa
and
test
inc
loope
jmp
ret
push
jl
sub
imul
pusha
dec
fcompl
movsb
add
jmp
add
insb
push
insl
mov
insl
in
mov
loopne
ss
adc
inc
push
xchg
cmpsl
movsl
add
leave
xor
sub
inc
pushf
push
mov
decb
jnp
int3
int
pop
jo
pop
out
and
push
mov
fistps
mov
xlat
dec
int
push
and
pop
jne
addr16
stos
sbb
enter
iret
and
adc
adc
lcall
bnd
and
call
inc
out
inc
popa
fcmovnbe
mov
scas
ja
pop
rcrb
test
jae
and
cmp
in
addr16
jmp
cltd
stc
xchg
ja
add
mov
ret
jecxz
xchg
jnp
cmc
in
cld
leave
ds
push
adcb
jae
mov
adc
xor
xor
mov
mov
jae
add
xchg
xorl
and
mov
jmp
inc
pusha
cmpsl
shrb
test
sbbb
mov
inc
mov
lret
pop
int3
jl
in
mov
mov
je
sahf
or
aas
fsubr
or
mov
xor
dec
imul
insb
aaa
push
popf
popf
icebp
push
popa
jae
pop
cmp
arpl
mov
mov
fsubs
dec
xchg
inc
nop
hlt
inc
mov
fwait
je
imul
hlt
jae
sub
jns
lcall
mov
mov
xchg
adc
push
fs
incl
xor
insl
incb
aad
stos
xchg
fcompl
mov
add
jmp
enter
shl
rorl
shrl
inc
xlat
inc
jecxz
clc
scas
out
bound
mov
out
sub
adc
fwait
loope
xlat
jbe
les
stos
and
outsl
clc
jle
fidivrl
in
daa
into
sbb
ja
lahf
xor
push
call
movsb
fs
adcb
sub
cmp
and
call
mov
lcall
and
dec
ljmp
or
dec
in
lret
and
test
imul
dec
ds
push
imul
sbbl
aam
dec
jmp
fmul
int
roll
scas
xor
pop
mov
mov
inc
je
aas
xchg
out
mov
mov
xor
jno
or
je
movsb
movsb
enter
pop
in
or
xor
in
sub
mov
in
xchg
pop
cltd
dec
test
hlt
mov
push
loope
sub
xor
out
dec
fidivl
or
stos
dec
mov
cltd
push
fwait
lahf
push
jl
je
xchg
push
push
jecxz
inc
cli
inc
lock
mov
rcll
mov
bound
jno
adc
xchg
sti
push
or
pop
add
lods
pusha
or
daa
inc
je
pushf
mov
test
call
sub
popf
jp
and
xchg
add
adc
lds
rorb
loope
out
mov
mov
rcr
aas
inc
or
jnp
xchg
and
and
mov
stc
das
inc
fcomps
xchg
jns
or
bound
inc
push
pop
jl
jae
push
out
stos
jecxz
sbb
fs
clc
clc
sbb
ss
adc
push
inc
in
pushf
xchg
loopne
lcall
dec
cmp
jbe
adc
inc
lods
repz
mov
and
dec
push
mov
rcl
in
sub
cmp
fldcw
adc
nop
jno
js
add
mov
jmp
sub
inc
aad
inc
lret
adc
loope
mov
dec
mov
pusha
and
insb
dec
cmp
inc
outsb
imulb
rcr
jp
call
jb
dec
imul
sub
js
pop
push
aas
std
movl
push
jnp
pop
popa
or
pop
and
shlb
loopne
pusha
mov
jns
jmp
and
add
adc
loopne
aaa
and
or
fnsave
arpl
adc
sub
xchg
xchg
sub
dec
cltd
cmovne
sbb
insb
xor
inc
fldcw
dec
mov
cmp
dec
bound
jge
pusha
arpl
mov
outsb
adc
popf
add
cmp
insb
sub
les
xor
arpl
shl
mov
mov
test
pop
lock
sub
std
cltd
jns
pop
cmp
cmp
js
out
xor
inc
mov
testl
dec
cmp
shl
cmp
mov
mov
ljmp
ret
dec
and
mov
addr16
popa
subb
into
shll
mov
jne
shlb
roll
inc
gs
cmpsl
adc
and
cld
sahf
clc
or
push
jb
pop
or
mov
fstpl
imul
adc
mov
xchg
ja
sbb
nop
test
jb
push
cmp
pop
stos
mov
xchg
inc
test
stos
xlat
test
xor
insb
and
xor
jno
mov
sti
push
mov
out
push
cmp
and
jmp
mov
out
ret
inc
and
aad
std
cltd
cmp
call
inc
mov
sub
add
and
pop
mov
in
test
movsl
in
movsl
loope
mov
out
les
test
out
add
dec
inc
add
xchg
pop
test
sbb
aad
dec
xor
in
or
addb
push
push
add
xorb
loope
cs
add
pop
push
lds
adc
lcall
xchg
loopne
sahf
inc
add
push
popf
imul
es
push
add
roll
lods
cmpsb
mov
scas
cmp
push
aam
jp
adc
sub
jo
jg
ja
sub
sub
xor
push
lds
fidivrs
ja
fst
sub
fisubrl
dec
xor
pop
stos
stos
xchg
sub
mov
cwtl
mov
mov
filds
push
mov
dec
sub
xchg
setbe
xchg
mov
inc
sub
test
sar
jae
adc
mov
inc
cld
and
popa
xchg
lret
out
clc
cmp
cmp
jno
std
loopne
jg
xor
pop
movsb
cltd
scas
and
pop
inc
popa
fs
and
filds
ret
cmp
scas
sub
adc
push
xlat
loopne
sbb
mov
mov
pop
xchg
mov
lcall
pop
subb
and
add
add
cltd
jno
pop
pop
jg
insl
cmp
add
mov
jne
ss
xor
mov
lahf
cmpsb
and
inc
ret
faddl
js
mov
fsubl
jno
add
push
jl
push
push
mov
shl
cmpsl
xor
adc
cs
shr
fidivrl
mov
jp
loopne
sub
imul
int
xchg
jo
push
stos
mov
mov
jl
repz
xchg
andl
rorb
push
icebp
test
addb
fisttps
push
push
out
inc
mov
adc
ffree
add
es
cmp
or
std
rcll
push
aaa
and
jl
sub
jmp
push
pusha
xchg
dec
sahf
jns
jo
pop
in
mov
jmp
incb
stc
mov
dec
dec
xchg
sbb
sbb
stos
mov
mov
std
mov
loopne
sbb
les
dec
mov
mov
vmovdqa
stc
push
leave
inc
pushf
mov
adc
jne
mov
and
fidivl
rcr
xchg
dec
dec
insb
rcr
andl
mov
into
sti
xchg
int3
bound
lahf
cmpsl
imull
xorb
mov
mov
sbb
clc
hlt
mov
or
loope
xchg
imul
mov
das
cltd
adc
jo
or
mov
scas
jmp
int3
pop
push
jg
push
xchg
cld
add
das
sbb
add
fisubrl
outsl
imul
push
jmp
inc
scas
xchg
shll
push
mov
mov
mov
sti
pushf
xlat
fcoms
clc
popf
cwtl
stos
jno
push
in
fnsave
inc
pop
push
dec
cmp
daa
jae
movsb
cmp
lret
movsl
inc
pop
xor
dec
scas
inc
jae
push
test
add
push
lods
test
jle
dec
push
int
sbb
out
cmp
in
mov
fisubrl
xchg
sbb
aaa
adc
cwtl
push
sbb
shrl
test
xchg
imul
dec
jge
sub
cmpsl
cmp
jo
pop
mov
popf
xchg
lods
xchg
out
popa
mov
mov
push
mov
fstl
mov
in
or
js
lahf
mov
rol
mov
dec
clc
pop
push
aas
divb
fwait
push
push
shl
jl
push
outsl
mov
mov
or
adc
cmp
sub
ja
test
mulb
pop
lods
xor
cmp
xor
js
xchg
in
mov
mov
loopne
shlb
sbb
nop
stos
ror
imul
test
push
or
xchg
dec
cld
sub
cmp
xor
ljmp
dec
or
fistps
and
jbe
mov
pop
fsubrs
mov
cmpl
inc
jp
jle
or
mov
jg
into
lds
test
pop
xor
fsubs
add
out
xorb
mov
gs
dec
pushf
push
fistps
clc
dec
mov
mov
lock
stos
mov
cmpl
inc
mov
sub
pushl
sub
sbb
lods
dec
cmp
dec
xor
cmp
arpl
sub
out
jne
xor
xchg
sub
nop
sbb
jecxz
inc
out
xchg
cmp
dec
jb
orl
out
iret
ja
ja
movsb
dec
cmc
jb
and
jp
test
mul
pop
add
jmp
inc
lcall
mov
mov
sahf
aas
aad
push
repz
xchg
cmpsl
and
enter
jecxz
cs
mov
mov
pop
cmp
test
add
ja
scas
sub
sub
push
xor
ret
aas
call
jno
pop
xor
ljmp
add
movsb
pop
incl
lock
pop
out
divl
jno
mov
mov
jmp
ja
push
adc
nop
dec
xchg
jmp
data16
das
scas
adc
jns
or
int
push
adc
add
stos
jns
cmp
arpl
shlb
xchg
dec
add
mov
movsl
fildl
nop
or
push
mov
lds
ret
mov
sub
loope
or
outsb
repnz
sub
aad
sub
iret
ret
push
cmp
sbb
add
xor
mov
adc
test
push
mov
movsl
xchg
jle
sbbb
adc
push
sub
pop
sub
add
push
jae
bnd
out
mov
push
cmp
fucomip
sub
xchg
push
shl
sahf
mov
add
xchg
dec
xor
js,pn
add
xlat
adc
xchg
push
sub
es
div
jne
dec
cmp
out
in
out
inc
ds
pop
idivl
pop
mov
add
inc
loope
repnz
push
or
and
repz
arpl
loope
cmp
mov
sub
test
and
dec
cmp
jns
add
xor
cmp
popf
xor
insl
iret
adc
lret
mov
pop
add
movsl
mov
pop
mov
xchg
cltd
stc
pop
xchg
fildl
movsb
movsl
xchg
cs
pop
pop
xchg
jb
das
fdivrs
ljmp
add
jb
js
sbb
cmp
xchg
xchg
mov
daa
add
add
xor
lock
inc
xor
dec
and
jb
cld
mov
loopne
pop
repz
int
outsb
movsb
push
int
inc
pop
jg
sub
lcall
in
stos
pop
ds
add
fisubrl
mov
push
fs
cltd
insb
cmp
lret
scas
cmpsb
pop
cld
xchg
flds
xor
sub
sahf
push
mov
push
das
jmp
push
sub
push
mov
gs
cwtl
fmuls
cli
mov
test
xor
mov
inc
push
mov
dec
movsb
loopne
cmp
int
jno
dec
adc
inc
mov
pushf
xchg
std
mov
add
gs
xchg
sub
adc
fildl
dec
or
pop
mov
lcall
inc
push
xchg
mull
jne
into
mov
in
jl
cwtl
inc
int3
stos
pusha
push
mov
or
aas
and
cmp
mov
jb
pushf
les
sub
test
mov
pushf
add
mov
sti
jmp
sbb
sbb
mov
adc
xor
mov
test
insb
mov
push
cmp
les
iret
jl
sbb
jb
mov
bound
shr
fwait
push
cld
fadds
mov
inc
xchg
add
pop
pushf
mov
sbb
xchg
pop
mov
sbbb
mov
mov
aaa
aad
inc
stos
pop
pusha
mov
fadds
pop
or
jecxz
mov
pop
inc
sub
cwtl
das
popa
rcrb
xchg
xchg
mov
paddw
add
or
cwtl
leave
inc
inc
pop
xor
cwtl
mov
inc
push
orl
shlb
mov
and
test
or
add
popf
push
mov
outsl
out
cld
outsb
add
testb
gs
inc
ja
out
jmp
jo
dec
jp
insl
xchg
cmc
or
xchg
mov
cmp
inc
sub
popa
stos
lds
out
pushf
pop
cwtl
out
jb
bound
sbb
sub
scas
cmp
fnstcw
sub
out
cmp
sub
jmp
pop
push
xchg
or
orb
sub
mov
push
mov
outsl
dec
outsb
movsb
push
adc
jae
sarb
and
sbb
sub
and
mov
sarl
or
out
test
adc
hlt
adc
adc
add
outsl
test
xchg
push
lahf
popa
lcall
mov
test
or
cmc
cmp
and
add
repz
test
mov
dec
loopne
fstl
inc
jno
nop
xor
repz
mov
cmp
cltd
sbb
icebp
adc
add
imulb
dec
sbb
adc
fistl
or
outsl
and
rcll
xor
sbbl
add
popf
xor
popa
ror
jge
lods
mov
mov
popf
lock
or
jae
sub
xchg
hlt
push
jecxz
popa
jecxz
int3
cmpsl
mov
imul
or
out
fdiv
out
mov
mov
or
mov
out
call
lods
mov
push
push
scas
cmp
or
divl
inc
int
dec
jg
fs
sbb
push
popf
cs
popa
dec
scas
test
cld
sub
xlat
movsl
inc
and
pop
sub
jo
cld
clc
ficompl
arpl
xchg
push
cmpsb
cwtl
adc
shll
ljmp
pusha
repz
dec
aad
jl
xor
ds
pop
mov
cmp
xchg
je
ret
jno
xor
jl
inc
shll
arpl
fcmovbe
jbe
xor
jle
adc
push
fiadds
out
popf
jge
sbb
ljmp
cmp
fsts
dec
jo
cld
pop
dec
scas
and
mov
ror
popa
mov
and
and
xor
aam
or
or
inc
imul
jle
jl
loope
cltd
dec
mov
fs
mov
jae
cmp
cmp
mov
push
sbb
lods
xlat
popf
notb
mov
pop
dec
xlat
das
pusha
pop
pushf
sbb
data16
mov
dec
and
mov
push
in
cwtl
pop
aas
push
sbb
rcrl
sub
lret
fwait
pushf
inc
imulb
cli
add
dec
icebp
mov
push
mov
shll
and
pop
xor
push
xor
clc
push
enter
mov
repz
jo
fldcw
lds
test
xchg
into
cmpl
shll
sbb
jae
fcoml
sub
gs
add
xchg
mov
in
xor
mull
mov
ss
lahf
mov
rcr
les
std
stc
adc
out
xchg
pushf
dec
fsts
cwtl
into
das
push
add
aam
mov
add
xor
das
imul
or
call
or
sub
cs
or
pop
out
gs
fcomp
or
dec
adc
sti
cli
add
js
fidivs
and
daa
out
cli
jl
pop
call
jl
out
jp
notl
mov
mov
sahf
les
adc
out
mov
orl
out
xchg
pop
and
in
and
add
push
adc
and
dec
int
inc
cmp
add
mov
inc
fdivrs
mov
mov
int
in
sti
inc
dec
jb
cs
aam
pop
cmpsb
sbb
lcall
and
jmp
fdivrl
icebp
insb
aas
adc
fldt
push
xor
push
xchg
sbb
xor
cmp
mov
jb
pushf
int3
in
ret
xchg
inc
arpl
inc
int
dec
cmp
sub
pop
daa
test
mov
add
dec
int
int
in
enter
pop
cld
in
je
xchg
mov
jbe
out
mov
not
fadd
and
enter
xchg
add
mov
mov
popa
mov
xor
jg
add
ds
pop
fsubrs
mov
lds
and
xchg
push
ljmp
stos
and
test
sub
xchg
sub
mov
xchg
push
rep
aas
pop
jb
imul
mov
mov
fdivl
pop
add
push
push
dec
lahf
cmp
push
xchg
dec
outsb
mov
push
pop
inc
add
xor
cwtl
xor
fs
lahf
popa
sbb
lcall
iret
ficoms
add
and
pop
pop
notb
stos
push
lret
jns
cltd
dec
es
dec
es
addr16
bound
mov
adc
mov
testl
test
imul
iret
jbe
mov
add
sahf
fisttps
data16
hlt
sbb
ds
or
sbb
cmp
add
sbb
pop
loope
pushf
mov
sbb
cmp
jecxz
xor
cmpsb
mov
fwait
stos
inc
rol
popf
adc
or
pop
into
dec
ds
sbb
pop
xchg
lds
sub
xor
cmp
clc
mov
mov
jp
and
mov
mov
lea
shll
add
das
outsb
outsl
add
sahf
mov
mov
xor
and
fildl
add
cmovge
jg
incb
inc
mov
aaa
sub
push
push
cmpl
shll
xchg
outsl
inc
jl
inc
dec
loope
fstpt
nop
outsb
push
aaa
adc
dec
xlat
mov
and
mov
inc
lahf
adc
je
mov
jmp
addr16
test
movb
cld
and
and
stos
and
rol
lret
jge
arpl
shlb
dec
inc
or
pop
mov
daa
and
pop
aaa
inc
cmp
int
into
out
adc
jns
or
mov
int
add
arpl
cmp
jp
jne
lods
or
std
les
add
sbb
sahf
xchg
jp
xlat
insl
add
push
lret
push
cmp
pop
sbb
stos
jge
out
mov
mov
insl
loope
mov
loope
ljmp
cltd
push
pop
sar
jbe
popf
out
fldenv
mov
out
or
into
xlat
jns
dec
push
mov
insb
jp
ljmp
lea
lret
dec
cltd
jo
les
dec
gs
fstpl
inc
cmp
loop
mov
scas
test
lock
xor
add
jnp
and
enter
out
ljmp
in
mov
dec
aaa
loopne
adc
daa
jp
push
fs
leave
ds
sbbb
and
or
push
leave
jno
nop
sub
lret
repz
ror
repz
ljmp
stos
repnz
das
mov
das
mov
cmp
cmpsb
lret
sub
adc
xor
sub
push
dec
cwtl
mov
mov
pop
xchg
jg
out
lods
scas
stos
inc
inc
test
push
popf
cmc
push
int
add
cmpsb
dec
jle
mov
add
cmp
arpl
push
leave
xor
mov
popa
nop
out
push
mov
mov
not
cs
enter
mov
dec
icebp
negb
sub
xchg
sysenter
push
xchg
xchg
fimuls
xchg
shll
in
cltd
or
shll
mov
std
push
loopne
stos
or
sub
shrl
or
push
or
out
dec
push
call
xlat
inc
lahf
js
aad
popl
mov
push
andl
lods
jbe
lods
scas
xor
cltd
loope
int3
imul
inc
cwtl
push
outsb
jbe
out
jno
les
rcl
pop
dec
fmuls
rorb
out
dec
inc
call
sub
cmp
cmp
inc
popf
add
stos
sbb
xchg
xchg
jmp
loope
cwtl
push
into
sub
ret
mov
push
fldl2t
and
nop
adc
out
aaa
pusha
mov
int3
adc
xor
shr
mov
loope
jecxz
imul
and
jo
sbb
sbb
sahf
xchg
add
add
xor
inc
in
sbb
mov
cli
xchg
ret
add
das
cmp
scas
in
fcomp
adc
cltd
dec
rcrb
insb
pop
push
andl
in
imul
fisubrs
insl
test
jmp
fmuls
mov
pop
jge
xchg
scas
xor
fsts
sbb
lods
lods
aaa
sub
paddb
test
aam
or
arpl
imul
xor
or
cmp
pop
sahf
lahf
cmc
xchg
xchg
pop
out
sbbl
jb
sbb
cwtl
ljmp
mov
dec
cmp
xor
pop
cmpsb
lods
mov
adc
loope
out
scas
sub
pop
or
sti
inc
jg
mov
push
cmpb
sbb
fwait
xor
cld
pusha
out
adc
aaa
sub
jge
outsb
pop
ss
inc
fsubr
out
and
xor
and
pushf
pop
stc
push
ret
in
adc
call
jp
jb
ljmp
data16
ret
mov
sahf
repz
mov
lret
shl
je
add
imul
movsl
add
jo
ret
jns
jno
mov
or
arpl
lea
call
cwtl
aam
das
lahf
push
mov
dec
pop
cs
mov
adc
outsb
sahf
add
cmp
rcr
es
push
mov
ljmp
inc
xor
loop
movsb
mov
add
insb
dec
hlt
adc
mov
movsb
sarl
mov
mov
jge
jno
in
int3
push
stos
jns
clc
nop
outsb
jns
inc
and
and
and
sbb
mov
jle
movsl
cmp
sbb
out
les
xor
add
pop
out
jecxz
inc
js
insl
in
fstpl
outsl
out
adc
andb
lret
adc
sbb
andb
xchg
enter
sbb
sbb
inc
mov
inc
and
repnz
push
dec
cmp
lret
nop
mov
sub
sbb
mov
or
sti
lea
repnz
addb
arpl
add
mov
jnp
clc
xor
xor
xchg
cmpsb
mov
inc
push
sub
push
mov
loope
fadds
push
fs
and
repz
js
push
or
in
fistps
scas
and
aas
fdivrs
xchg
xchg
gs
call
imul
mov
add
call
sub
push
jle
je
bound
aad
xchg
xor
add
and
inc
fsubp
nop
and
push
add
mov
pop
insl
jg
sub
dec
push
mov
in
les
jne
movsb
insb
sbb
sbb
test
mov
inc
mov
cmp
and
lret
push
mov
test
out
push
shll
orl
mov
popa
pop
mov
add
insl
mov
mov
jns
shl
sti
push
nop
je
jecxz
pop
daa
leave
pop
cmp
mov
loop
mov
or
rcll
lock
push
jns
or
lds
bound
xchg
adc
add
adc
cmp
cmpsl
jns
jno
loope
jl
test
xchg
mov
sbb
iret
xchg
pop
leave
sub
mov
push
lods
jl
cmp
pop
xchg
sub
push
hlt
push
fcomp
pushf
lret
loop
gs
test
mov
push
test
sbb
xchg
mov
sbb
push
call
aam
push
ds
mov
add
jle
pop
stc
mov
sub
sbb
fcmovnb
mov
fs
and
xchg
lock
cs
stos
js
fnstenv
push
push
out
mov
fdivrs
inc
popa
scas
add
lods
insl
in
inc
and
aad
pop
xor
inc
leave
imulb
int3
push
out
xor
jno
popa
adc
jl
dec
aad
mov
push
push
or
pop
dec
mov
dec
adc
mov
fiadds
in
lea
cmpsl
mov
sub
pop
pop
add
std
inc
icebp
ret
fwait
int3
jne
fcompl
mov
adc
loope
stos
cmp
and
lock
out
push
push
sub
cmp
add
loope
sti
inc
data16
and
test
lods
dec
pop
sub
mov
aam
dec
sti
mov
inc
jae
mov
movsb
daa
mov
ljmp
out
sti
xchg
push
xchg
xchg
mov
push
in
dec
out
es
outsl
fs
and
in
test
mov
cmc
call
add
nop
mov
pushw
dec
insb
mov
call
cltd
inc
shl
stos
jg
loopne
mov
sub
push
rclb
jno
mov
xor
jo
sub
push
add
test
out
mov
adc
out
int3
ss
or
push
fadds
inc
sbb
pop
daa
hlt
add
sub
push
icebp
sbb
or
dec
dec
pop
xor
jb
out
call
mov
mov
adc
mov
fists
inc
loop
sub
out
mov
rcrb
fs
jl
nop
adc
sub
jo
in
fisubl
cmp
sub
lcall
cmc
test
movsb
loop
or
lahf
mov
dec
cmp
cmpsb
popa
dec
stos
cltd
or
popa
imul
lods
stos
jno
cld
stos
push
jge
fsubrl
inc
pop
and
add
enter
lret
enter
mulb
inc
daa
or
sbbl
cmpsb
bound
mov
das
add
hlt
aad
ja
sub
loop
cmp
sbb
pop
xchg
outsb
lock
loopne
xchg
in
pop
in
and
cmp
sbb
cmpsl
aas
pop
xchg
rcrl
mov
jmp
add
push
pop
cmp
sub
xor
mov
or
dec
and
sbb
dec
aam
jne
mov
stos
cmc
adc
test
adc
dec
jb
insb
or
mov
movsb
jle
insb
or
pushf
xchg
jns
shlb
shrl
dec
cmpsb
add
int3
adc
jne
cmp
cld
hlt
ret
push
mov
cmp
insl
idivb
shufps
test
lock
nop
sub
xor
test
in
stc
cmp
shr
fldcw
sbb
or
test
mov
pop
sarb
ljmp
jmp
push
sub
nop
sahf
fimull
popa
out
dec
push
xchg
sbb
mov
cwtl
negb
lret
and
ret
push
mov
cs
or
cs
mov
adc
inc
cmp
sar
arpl
xor
scas
cmp
aam
fsts
jmp
in
adc
ljmp
or
adc
lahf
rorb
ret
mov
add
adc
xchg
aad
sbb
into
insb
lret
pop
push
or
push
sbb
stc
scas
mov
xor
aas
enter
and
mov
xchg
and
mov
imul
vsubpd
mov
cmp
loop
pop
repz
les
std
pushl
in
xchg
mov
xchg
jmp
push
sub
repz
iret
push
pop
cmp
call
inc
es
adc
aad
sbb
mov
negl
out
mov
pop
pop
mov
imul
jle
mov
mov
out
aad
adc
stc
cmpsb
in
mov
jns
xchg
outsl
andb
push
fwait
sbbl
sub
lret
xchg
pop
jmp
sub
dec
or
lea
mov
sub
test
or
cmp
pushf
sbb
aas
addr16
cmp
jl
inc
mov
icebp
xor
push
sbb
or
scas
stc
call
or
xlat
jb
es
inc
inc
cmpsl
test
push
jl
repnz
ret
arpl
jmp
xchg
push
sub
sbb
out
xor
jp
push
cmp
mov
movsl
push
mov
push
cmc
inc
daa
ret
mov
dec
cmpsl
dec
or
dec
dec
or
in
push
stc
in
jmp
out
ret
mov
ret
push
inc
cmp
rcll
mov
adc
lds
pop
cld
cmp
shr
mov
mov
pop
filds
dec
pop
in
cmp
call
sub
cli
loopne
int
jecxz
jne
jle
gs
lahf
mov
jmp
mov
ljmp
sbb
sarl
rcrl
roll
mov
stos
xchg
inc
push
ret
mov
and
inc
mov
push
mov
data16
nop
cmp
outsb
add
xchg
pop
psubq
push
cs
jmp
xchg
lds
rcrb
mov
jle
pop
add
clc
pop
mov
xor
sub
loop
in
push
les
cmovg
scas
pop
xchg
incl
test
test
enter
sbb
adc
push
gs
add
dec
test
in
into
std
dec
jge
or
call
cmpsb
subl
addr16
and
sub
test
push
fcompl
cmp
ficompl
stos
add
mov
add
divl
xchg
shlb
inc
sub
rcrb
lea
add
dec
mov
in
iret
cs
push
lcall
gs
cmp
sarl
add
fisttpll
jg
pop
bound
int3
sub
pushl
pushf
in
js
pop
xor
cmpsb
adc
stc
mov
sti
mov
lret
test
int3
sbb
popf
pop
mov
cmp
loop
adc
orl
sbb
lea
out
mov
lods
les
mov
rcrl
jecxz
or
cmp
cmpsl
jne
jbe
xor
xchg
cmpsb
mov
mov
sub
jne
xor
ret
or
lahf
test
dec
dec
or
adc
inc
push
mov
push
fucomi
xorb
in
pop
dec
and
outsb
test
hlt
add
cmpsb
aas
bound
sbb
lods
inc
mov
mov
mul
cld
ss
add
and
mov
mov
inc
mov
test
ss
or
movsb
imul
fsubrl
jle
enter
and
jns
addr16
cltd
push
inc
xchg
push
push
jg
mov
add
mov
aam
mov
rcll
aad
adc
push
mov
xchg
xor
dec
rol
sub
ret
inc
sahf
bound
pop
cmp
and
pcmpgtb
jmp
mov
xchg
push
push
hlt
movsl
mov
cli
or
jne
sbb
xchg
into
and
mov
jnp
movsl
dec
data16
fadd
sbb
add
sub
mov
sbb
dec
gs
fsubl
mov
and
xor
aaa
mov
lds
sub
xor
mov
orb
lods
inc
sub
jp
inc
test
or
push
mov
or
js
addb
test
movsb
je
adc
adc
dec
fidivl
mov
mov
notb
dec
sbb
cld
out
sub
add
or
jns
cmpsl
mov
stc
cmc
pop
add
adc
pop
ss
push
push
repnz
mov
cmp
or
jge
repz
lea
ret
and
testb
jo
nop
push
nopl
dec
mov
mov
cli
gs
inc
test
or
or
mov
fnstsw
iret
repnz
arpl
rorb
lea
popa
outsb
adc
into
add
mov
pop
inc
daa
adc
and
dec
jo
push
jl
jecxz
xor
mov
loope
negl
sub
das
fadd
cs
out
mov
hlt
leave
jbe
sub
arpl
add
push
add
out
insl
add
repnz
add
mov
outsl
mov
daa
cmc
lea
add
pop
sbb
xchg
cmp
cmpsl
out
add
arpl
xchg
rcl
inc
fisubl
lcall
sbb
aad
test
lds
add
jae
int
mov
pop
rolb
mov
mov
mov
cmpsb
dec
or
jns
inc
or
jbe
je
adc
sub
in
ljmp
mov
bound
call
ljmp
xlat
adc
fdivrs
inc
mov
loop
mov
jb
and
mov
neg
mov
aaa
push
fcmovnbe
sbb
mov
xchg
test
pop
xor
pop
sbb
loop
push
jmp
push
xor
inc
scas
mov
xchg
mov
xchg
or
dec
in
hlt
das
cmpsb
pop
push
add
push
lods
dec
nop
adc
sbbl
imulb
je
cmp
ret
jl
sahf
in
scas
pop
push
push
sub
pop
sbb
popa
dec
push
ficoms
jae
out
pop
leave
out
bound
loope
scas
sub
jb
sub
dec
and
push
das
mov
iret
lock
inc
xchg
jne
daa
aaa
mov
lds
xchg
adc
adc
cltd
lods
push
test
adc
mov
adc
xchg
xor
das
out
je
aad
sbb
push
jae
push
fs
lret
adc
inc
jmp
rcrb
dec
mov
cmpsb
cmp
and
mov
pop
add
cmp
and
mov
gs
lock
dec
adc
int3
sbb
cwtl
push
dec
insl
pop
dec
arpl
ljmp
bound
push
inc
outsb
xchg
imul
add
ret
add
jo
fisubrs
and
notl
mov
int3
xor
cli
addr16
jnp
in
sub
sub
or
xchg
mov
cmpsb
sub
and
push
enter
jmp
mov
call
xchg
outsb
xchg
lock
push
sbb
leave
stos
loop
movsl
lock
test
xchg
jae
inc
inc
pop
lods
xor
xor
out
and
inc
mov
jl
push
push
push
in
out
rorb
ficomps
and
stos
jb
dec
incb
jmp
push
fmuls
xchg
out
ljmp
mov
cmpl
sti
addr16
push
or
mov
clc
fstps
adc
loope
ret
sub
cmpb
ret
das
test
xchg
pusha
rol
and
negb
lahf
add
xchg
sub
mov
cmpsl
movsb
mov
xor
sub
fisubs
sub
insl
dec
inc
mov
outsb
mov
jb
pushf
pop
xor
leave
xor
fs
xchg
sarb
mov
push
sub
dec
enter
or
jnp
sbb
xchg
and
pop
test
negl
mov
or
sub
push
xchg
punpcklwd
and
pop
jmp
mov
test
pop
test
jecxz
dec
jbe
push
jge
add
or
adc
cmpsl
xor
dec
mov
out
sahf
bound
adc
shrd
inc
decb
int3
cltd
pop
xchg
mov
cs
adc
and
ss
and
xchg
into
rorb
fsts
xchg
push
cmpb
arpl
dec
xchg
mov
xor
nop
cmp
fldcw
adc
sbb
loope
jmp
sub
jecxz
mov
mov
push
movb
test
mov
jg
and
lret
out
mulb
testb
inc
ss
idivl
mov
pop
insl
push
aad
in
inc
push
lret
jne
push
push
hlt
fsubp
lods
mov
adc
sub
popf
ret
cmp
or
pop
and
or
out
lods
fdivrs
scas
das
dec
push
push
inc
sahf
std
sub
mov
in
outsb
ja
mov
push
iret
sbb
lahf
sti
std
cwtl
push
das
lock
cli
mov
loopne
and
lahf
test
fldcw
js
test
add
lock
outsb
rcrl
js
cli
dec
mov
shlb
xor
popa
mov
sub
pop
dec
repz
insl
pop
and
jl
xor
dec
ja
ficoms
sbb
into
lds
pop
pusha
dec
adc
in
fiaddl
shlb
popa
push
sbb
dec
pop
add
inc
test
push
jg
sbb
push
adc
pop
popf
lret
xor
fwait
push
xor
mov
lods
push
or
rolb
nop
ljmp
mov
clc
push
sbb
adc
push
cwtl
push
pop
inc
jg
cmc
sti
dec
adc
ret
ljmp
inc
repz
dec
lret
jmp
test
addr16
add
add
xor
inc
aad
jge
pop
push
enter
add
sub
add
out
dec
out
call
xchg
fcom
inc
lock
mov
lods
fsub
cmp
mov
add
loop
jbe
shll
cmc
cmpb
leave
push
negb
sbb
clc
mov
mov
inc
jo
loop
pop
jnp
jl
and
jl
ret
sbb
cld
push
lock
mov
inc
cmpsl
xlat
out
sarl
adc
sub
shll
jg
into
or
jecxz
and
push
add
mov
mov
cld
pop
dec
into
push
push
inc
sbb
insl
cltd
ja
sub
and
mov
cmp
insb
xchg
push
jp
add
lret
sbb
dec
jmp
mov
xchg
mov
addb
outsb
mov
xlat
pusha
pop
dec
jle
hlt
mov
pusha
out
in
ss
sbb
push
pop
add
xor
ja
mov
lcall
sub
je
out
jbe
insl
fsubl
cmc
divl
cmp
nop
dec
mov
out
or
lret
xchg
cmc
add
out
div
mov
cs
jmp
test
outsl
sbb
sarb
nop
push
and
in
sub
test
jbe
ficoms
sbb
mov
orl
fninit
icebp
shl
outsl
lds
cmpb
cwtl
ljmp
xchg
lret
cld
push
jnp
pop
sbb
movsl
out
and
clc
leave
je
ret
lods
flds
mov
cs
push
xlat
pushf
jne
xchg
xor
or
in
mov
pop
jp
jecxz
int3
jnp
out
sbbl
repnz
int3
repz
jl
xchg
sbb
xlat
add
adc
cmpsl
mov
mov
and
mov
les
or
mov
pop
mov
das
outsl
sbb
jae
notb
repz
cwtl
xor
movhps
xchg
inc
xchg
pop
sbb
movsb
iret
push
jb
adc
addr16
jecxz
inc
jne
xchg
rorb
and
lahf
pop
pusha
test
sub
adc
nop
fbstp
cmc
inc
pop
jbe
test
bound
insb
imul
and
pop
idivb
sbb
movsl
insb
das
jg
or
or
push
add
test
sahf
into
inc
popa
das
push
sbb
sbb
push
push
insb
cmp
aam
int3
fnsave
mov
inc
movsb
jp
ljmp
push
lock
lret
jne
lret
cmc
inc
push
jbe
dec
add
sbbl
jmp
cmp
andb
outsb
or
lret
cmpb
adc
or
aas
sbb
cmp
lahf
jecxz
hlt
adc
mov
mov
scas
in
cmp
pop
add
pusha
cmp
push
jns
and
sub
fs
cmp
rorl
jnp
or
adc
loop
lea
sub
pop
aas
out
cmpsl
inc
pushl
dec
sbb
jge
sub
scas
mov
mov
fwait
mov
adc
fmuls
mov
iret
push
sarl
lods
mov
sarl
push
faddl
push
insl
fwait
push
cwtl
lock
cs
outsl
pop
stos
cmp
pop
ret
out
fs
clc
adc
sbb
and
push
sub
sbb
jns
cld
stos
daa
es
fmuls
sbb
sbb
push
daa
adc
add
rolb
or
xor
pop
ret
in
mov
pop
call
add
jle
cmp
push
xchg
sub
xorb
push
dec
lcall
xor
cmp
outsl
sarl
mov
sti
and
dec
dec
jbe
jecxz
mov
and
faddl
imul
fstp
movsl
int
pop
cmc
ja
inc
fwait
popf
dec
call
enter
xor
and
dec
fs
xchg
push
xor
xchg
xchg
push
sbb
add
mov
push
push
repnz
or
push
sahf
cld
xor
inc
cmp
dec
fistl
std
mov
xorb
mov
mov
imull
dec
mov
sub
out
ret
cmp
lret
add
pushf
je
outsb
fwait
xor
ret
decb
push
pop
fildll
ljmp
push
popf
mov
cmp
mov
mov
fwait
pop
outsl
int3
stos
adc
cli
shll
loop
lods
pop
out
test
sub
add
enter
sbb
clc
push
insl
test
push
addr16
cmp
stos
pop
and
je
mov
popl
addl
into
fadd
cmp
dec
cmc
mov
rep
cmpsb
push
pop
pop
neg
add
mov
sub
dec
xchg
iret
push
loope
outsb
push
push
add
xchg
bound
out
xor
xor
xchg
shl
lcall
sar
mov
ja
push
fnstcw
inc
dec
inc
ret
clc
sub
dec
sbb
insl
sub
stos
pop
sub
dec
push
sub
hlt
and
lock
test
dec
in
stos
int
inc
add
cmp
dec
daa
sub
out
ljmp
mov
mov
sub
sub
loop
pop
xorb
ror
addr16
outsl
imul
mov
dec
add
icebp
xlat
mov
in
mov
jg
xchg
push
pop
and
repnz
fcompl
mov
aas
inc
dec
xor
je
jae
and
cmp
or
mov
adc
xor
xchg
aam
mov
jecxz
cmp
loop
or
dec
add
mov
popf
daa
pop
and
lock
je
sub
push
movsl
jo
inc
enter
mov
mov
out
xor
addl
rcl
in
mov
mov
jle
cli
movsl
fsubrs
add
push
pop
pusha
das
mov
jge
mov
mov
dec
xor
add
in
aad
movsl
dec
imul
lahf
cmc
add
rcl
add
xchg
lcall
pop
punpckhdq
and
nop
lods
inc
out
push
xchg
mov
cwtl
arpl
adc
lcall
cmp
jbe
push
jo
stc
jmp
iret
lret
adc
andb
adc
or
sbbb
mov
addr16
sbbb
inc
sub
test
mov
out
cmpsb
sti
iret
xchg
testb
sub
ret
fistps
lea
adc
inc
xchg
inc
fldl
or
dec
mov
outsb
sub
bound
mov
sub
cmp
andps
int
sbbl
clc
or
and
mov
xor
push
scas
push
in
pop
das
mov
ds
pop
cltd
popf
mov
in
and
add
or
fmuls
sbb
and
mov
scas
and
testb
sub
aam
sbb
icebp
fcomps
je
mov
ja
mov
dec
sbb
xor
xchg
or
mov
shrl
dec
sub
dec
lea
mov
lods
and
mov
pop
push
xchg
xchg
sbb
shrl
sub
dec
pop
and
shll
xchg
cmpsb
fnstenv
jl
dec
and
xor
push
mov
push
rcll
ja
xor
adc
sbb
test
mov
or
mov
imul
jne
test
xchg
xor
or
lret
and
outsl
lea
jno
jp
inc
popa
sub
addr16
dec
stos
rep
or
jne
sub
fadds
movsl
pop
aam
repz
aam
fucomp
insb
cltd
sub
repnz
stc
sub
mov
cmp
push
dec
xchg
pop
pop
cmp
add
xchg
sbb
lahf
and
xchg
dec
popf
imul
icebp
sbb
icebp
test
outsl
lret
repz
stc
xchg
das
cmp
dec
lock
data16
sbb
fnsave
pop
jecxz
mov
jg
je
xchg
stos
shll
test
xchg
inc
xlat
cmpl
lods
lds
add
dec
xor
mov
test
stos
in
out
dec
add
inc
sahf
das
sbb
or
loopne
fcoms
jg
das
clc
sarl
leave
push
lret
mov
mov
sbb
xor
fstl
mov
mov
rcll
adc
sbb
out
pop
gs
cmp
cmp
xor
icebp
sbb
movsl
lahf
mov
xor
mov
shl
xchg
xor
pop
pop
pop
adc
shll
popa
fisubl
pop
mov
rolb
or
sahf
loopne
sbb
loop
outsl
into
outsb
push
mov
popa
nop
cmc
adc
sbb
sahf
mov
jmp
xchg
xchg
aad
lds
mov
lahf
mov
push
cmp
jge
pop
mov
aad
jge
pop
cmc
cmp
rclb
xchg
scas
xor
bound
sbb
imul
out
loope
outsb
insl
or
push
inc
sbb
push
ror
and
dec
sbb
xor
lcall
push
jl
push
lret
mov
sub
loop
std
rcrb
js
adc
mov
scas
jge
int
jae
cmpsl
cmp
adc
outsl
push
shrl
imul
inc
cmpsl
push
mov
sbb
push
and
jecxz
mov
adc
xchg
dec
xchg
repz
js
arpl
jne
stos
mov
sbb
inc
push
jle
adc
sti
inc
std
xchg
mov
les
and
xchg
xor
jmp
mov
out
orb
and
mov
loope
js
cmp
sub
leave
movsl
fdivs
sub
push
ja
bound
movsb
xor
movsb
negl
and
lds
stc
lock
call
jns
hlt
sub
xchg
xchg
and
mov
xchg
mov
pop
inc
cmp
fwait
cmpsb
mov
jae
sbb
push
lea
xlat
pop
out
nop
mov
inc
popf
out
cmp
xchg
pop
mov
lcall
jo
jae
fstpt
je
push
sub
add
arpl
mov
cltd
aam
jnp
push
jge
pushf
popa
mov
in
arpl
sub
jle
xchg
xor
pop
cmp
mov
imul
mov
jo
jo
fwait
cmp
cwtl
cmp
push
mov
iret
jl
pop
jo
loopne
jp
and
xor
push
sbb
insb
jl
push
pop
dec
jecxz
sub
loopne
cmp
lcall
add
push
push
push
sti
insb
shrb
mov
outsb
test
and
lock
cld
xor
xchg
inc
lds
and
imul
add
push
mov
clc
cli
jb
lods
in
inc
xor
xorb
outsb
pop
sbb
push
xor
jmp
pop
dec
pop
out
adc
fdivr
cmpsb
inc
rcrb
cmpsl
int
xchg
inc
mov
cld
inc
pop
dec
lea
inc
adc
insb
loopne
lods
add
fstpl
rol
jb
lret
push
mov
mov
cli
push
push
popa
lret
xlat
jmp
aad
mov
cmp
pop
ror
roll
lock
movsb
pop
sub
pop
fdivrp
in
adc
hlt
int
adc
sti
mov
cmp
aam
mov
adc
adc
push
push
aas
xchg
sub
jbe
in
mov
gs
cmp
lret
add
outsb
sub
cmpsl
xor
sbb
xor
or
outsb
leave
in
mov
push
insl
jle
inc
mov
cmp
mov
out
lea
sbb
xchg
imul
xchg
addr16
xchg
ljmp
mov
je
int
lock
add
je
mov
xchg
hlt
pop
mov
mov
negl
stos
mov
sbb
mov
cmpsb
mov
dec
mov
mov
cmc
adc
enter
xor
jb
ljmp
scas
push
test
iret
or
das
push
and
add
cld
es
es
pop
inc
jl
cmp
pop
clc
cmpl
mov
aad
add
fildl
dec
cli
ja
aad
mov
jge
and
pop
jb
repnz
or
jmp
ljmp
fwait
mov
push
inc
test
lea
test
inc
dec
jle
fisttps
push
inc
arpl
fimuls
ss
jl
mov
jge
iret
inc
mov
mov
lods
nop
push
es
out
ja
int3
fwait
in
dec
inc
test
xor
aaa
xchg
mov
test
jnp
sbb
sub
add
mov
ja
ret
mov
jo
or
xor
lret
xchg
leave
sbb
jg
mov
push
cmc
lret
mov
mov
int3
repnz
aad
adc
mov
or
fnstsw
arpl
push
push
inc
fwait
cwtl
decb
call
fidivl
inc
mov
sbbb
ljmp
jecxz
out
adc
mov
xor
push
inc
pop
insb
test
pop
adc
dec
imul
cmp
dec
cmp
lret
sahf
aas
jne
mov
or
push
dec
cmp
test
into
adc
push
sub
jnp
pcmpeqb
icebp
mov
push
jge
lock
add
jns
sub
movsb
and
js
cwtl
inc
ret
loopne
loope
pop
cld
jns
mov
mov
repnz
mov
test
and
sub
mov
test
jo
mov
xchg
mov
xchg
mov
cmp
mov
enter
js
and
jmp
push
nop
xor
mov
dec
jmp
adc
adc
mov
xor
inc
cmp
int
sub
test
shl
jne
inc
adc
mov
inc
test
int
out
pop
push
test
aam
mov
imul
loop
ret
push
daa
fsts
jo
and
dec
xchg
out
mov
cli
je
out
mov
mov
iret
push
jg
inc
in
aaa
daa
dec
push
add
add
roll
jo
sbb
out
jmp
daa
insb
sub
in
pushf
repz
test
add
pop
mov
fld
pusha
or
pop
xchg
and
jecxz
ret
push
mov
xchg
ss
and
call
hlt
mov
jbe
cmp
rorl
cli
mov
add
ret
jg
mov
cli
out
xchg
lds
pop
mov
andb
jl
add
push
popa
aam
push
cmp
jo
insb
movsb
add
nop
cmp
sub
lds
xor
stos
adc
loopne
cmp
rcrl
aam
das
test
outsb
hlt
sbb
add
mov
pop
or
outsl
sbb
xchg
push
test
ja
addb
stc
inc
popa
inc
fcomps
push
cmp
mov
pusha
or
outsl
neg
pop
cmp
xor
or
jmp
test
push
xor
stos
jb
subb
push
ss
pop
dec
adc
bswap
adc
cmp
inc
inc
clc
jns
jnp
cltd
jmp
loopne
cld
sub
push
cmp
pusha
ret
xor
xchg
cwtl
insl
xchg
cmp
xchg
fstpl
lods
fldcw
mov
iret
inc
add
dec
rcrb
pop
mov
ljmp
add
lret
shr
cltd
loop
sub
dec
lret
sub
int
andb
jl
sub
imull
daa
jp,pn
sub
jmp
ljmp
xchg
or
sti
std
mov
call
or
int
xchg
pop
daa
dec
sahf
push
mov
cmp
lds
mov
mov
add
cmp
aam
lds
cmp
addr16
lret
inc
inc
jbe
push
mov
popf
adc
leave
fistpl
imul
add
inc
std
cmp
inc
xlat
push
adc
ja
lahf
repnz
aaa
push
stc
sbb
daa
add
mov
bound
in
dec
push
xor
adc
divb
insl
dec
push
sarl
psubw
inc
insl
dec
lahf
inc
popf
xchg
and
sub
aaa
pop
adc
jne
xor
insl
hlt
jne
loop
int
fsubrs
mov
jae
sbb
aaa
inc
lahf
inc
mov
mov
cld
sbb
inc
insb
adc
cltd
or
icebp
jb
arpl
pop
int3
adc
fs
test
cmp
rclb
fisubl
xchg
jno
cld
es
dec
ficompl
mov
adc
imul
mov
cmpsb
inc
dec
mov
pop
fwait
stos
mov
cmp
pop
sbb
cmp
or
push
and
aaa
jmp
and
jb
into
adc
movsb
lea
cmp
mov
xchg
cmp
mov
int
pusha
cli
shrl
rorl
inc
sub
jp
pop
mov
insb
mov
nop
fcmovbe
or
mov
insb
sub
les
push
mov
xchg
xchg
mov
clc
xor
dec
aad
sbb
jmp
popa
insb
push
xor
jmp
pop
mov
lahf
test
pop
lcall
dec
mov
loope
jle
pop
dec
add
push
scas
sbb
leave
fdivrs
call
add
xchg
std
push
sahf
sub
popf
push
sub
ror
mov
xor
cmp
xor
fistpll
cwtl
pop
push
inc
inc
cmc
pop
and
push
push
mov
jne
mov
repz
out
sub
push
js
mov
test
scas
scas
pop
push
call
jns
icebp
jae
adc
rcr
mov
lea
std
or
cltd
sub
in
in
insl
icebp
mov
adc
and
test
sbb
sub
addr16
movsl
inc
scas
es
ret
fisttpl
stos
ja
outsb
div
mov
cmp
popf
bound
adc
int3
or
adc
xor
add
inc
push
out
jnp
jae
stc
jecxz
adc
jae
xor
mov
fsubrl
dec
subb
fnsave
gs
xchg
mov
mov
mov
sub
mov
cli
pusha
ret
mov
and
jno
out
clc
movsb
adc
ficompl
minps
jbe
decb
cmpsl
jge
mov
xchg
and
sti
int3
hlt
pushf
lea
stc
and
inc
push
xor
mov
or
lahf
idivl
lcall
in
icebp
dec
sub
mov
mov
jae
les
movntq
add
or
and
cmpsb
test
pandn
hlt
or
or
outsb
fldenv
imul
pop
push
or
mov
xchg
cmp
call
ja
sbb
sti
cltd
cmpsl
jle
inc
mov
pop
nop
or
add
sbb
push
aaa
test
or
adc
lahf
sub
pushf
xchg
fnstsw
test
sti
push
clc
adc
xor
fsubr
jp
fsts
fisttpll
push
jge
jo
inc
mov
cmpsl
subb
push
and
divb
int
pop
inc
mov
and
daa
xor
icebp
push
pop
pop
fs
in
aas
int
xor
adc
xor
jns
out
addr16
cltd
loope
shlb
fnstenv
push
loop
sbb
add
cmp
inc
das
mov
lods
push
add
loope
xchg
cmc
lcall
jno
mov
mov
movb
lea
jno
ret
sbb
lods
insl
mov
loop
push
and
push
cltd
mov
push
and
es
xor
push
movsb
mov
les
cs
push
pushf
xor
add
mov
mov
adc
mov
clc
xchg
push
sub
mov
test
out
jne
loopne
push
cmpsl
ret
push
lahf
test
aas
dec
imul
stos
pop
mov
jp
inc
mov
int3
mov
sub
mov
mov
es
xchg
shlb
xchg
sbb
cmp
add
adc
pop
scas
jo
test
testl
imul
and
ret
test
adc
mov
add
jmp
mov
cld
les
shlb
pusha
dec
lods
mov
jnp
sub
pusha
cmp
jl
mov
mov
cmpsl
xchg
mov
jg
jbe
jecxz
iret
sbb
xchg
rorl
fcoml
aas
or
shrb
fidivrs
icebp
dec
jne
pop
mov
or
popa
xchg
es
jae
loopne
xchg
jno
sahf
sbb
js
dec
push
inc
pop
lret
hlt
mov
push
jae
out
daa
std
jp
or
je
into
callw
popa
ja
sub
int3
test
mov
mov
jge
jl
cs
inc
arpl
inc
jle
and
add
pop
sbb
mov
inc
jecxz
and
mov
lea
mov
and
sub
sbb
sarl
push
jnp
leave
mov
fimuls
movsl
jg
test
pop
mov
cmp
push
test
popa
ds
dec
les
pop
jae
jge
icebp
outsl
ss
enter
out
mov
or
mov
sahf
shlb
dec
mov
aad
cli
push
outsb
inc
mov
fstpl
inc
lahf
fsubrs
push
pop
jbe
iret
sub
and
sbb
ficoms
or
insl
test
inc
pop
nop
dec
fistl
fnstsw
sahf
sub
add
inc
loop
push
mov
push
pop
jns
clc
jecxz
cmp
mov
pop
or
sar
pop
das
jl
jle
jl
outsl
aam
xchg
pop
nop
and
and
jb
mov
xchg
jbe
bswap
jge
cmpsl
xchg
jne
pop
cmpsb
pop
inc
adc
sarb
add
nop
inc
imul
cmp
push
mov
and
ficompl
sub
lret
int
add
jo
out
call
idiv
pop
dec
jmp
int
jge
ds
and
arpl
out
popf
rcll
jge
jns
mov
aaa
fsubrl
sahf
shl
int
jne
sub
aam
fnstcw
or
sahf
mov
in
aad
dec
mov
addl
scas
jecxz
jle
movsl
mov
mov
pop
into
mov
or
or
jno
pushf
std
xor
mov
inc
mov
hlt
jne
fnstcw
sahf
mov
cltd
mov
or
clc
cmp
pop
sbb
icebp
xchg
enter
and
ja
ja
jno
xchg
and
inc
loopne
or
sub
push
xchg
bound
sbb
jmp
repnz
xor
rorl
inc
nop
mov
mov
sahf
mov
mov
push
rcr
lock
jle,pn
and
xchg
ja
or
mul
out
xor
std
shrb
mov
es
lcall
inc
stc
clc
movsb
mov
lret
jne
sub
or
leave
push
arpl
add
xchg
gs
loopne
and
xor
xor
pop
fcmovnu
push
orb
icebp
repnz
adc
repnz
sbb
mov
jmp
or
pop
push
imul
jno
or
mov
or
loop
xchg
repnz
sub
in
orl
inc
in
and
xor
dec
xchg
fistps
jns
mov
test
orl
jmp
rorb
gs
inc
and
xchg
push
push
xor
inc
ds
test
mov
push
mov
test
mov
push
inc
inc
dec
popa
cmpsb
sub
xor
xchg
xchg
movsb
sar
pusha
jno
dec
pop
xlat
es
js
mov
inc
inc
push
jl
xor
push
mov
adc
insb
sbb
lret
or
mov
and
cmpsb
push
sub
mov
dec
repnz
mov
hlt
jb
cmp
rclb
adc
xor
xchg
jmp
inc
repz
sahf
xor
jle,pt
mov
mov
push
jg
outsl
cwtl
mov
insb
int
adc
adc
frstpm(287
fimull
inc
pop
mov
pusha
jb
lods
inc
pushf
or
cmpsl
push
shr
imulb
sub
pop
and
fnstsw
and
rep
popf
jne
daa
test
cmp
mov
mov
and
lret
out
fisttpl
add
dec
gs
pusha
jge
mov
cli
lods
fstp
or
and
add
xchg
int
pushf
sbb
sub
xchg
hlt
pop
push
push
hlt
add
mov
dec
inc
sbb
jb
pop
test
and
mov
xchg
pop
and
call
imul
xor
ret
or
addr16
bound
mov
in
or
xor
test
xchg
add
cmp
mov
lahf
pop
jo
sbb
xchg
xchg
add
aas
add
ficoml
int
bound
pop
mov
fstpt
std
lret
into
div
ds
lods
add
pop
jbe
aas
icebp
jmp
add
sti
loop
and
mov
rcrl
mov
fbld
jo,pn
outsb
add
cmp
jge
mov
pmullw
movsb
push
sbb
sti
int3
je
clc
inc
fwait
mov
cmp
cmpsl
out
adc
sub
add
sbb
shrl
cmc
dec
sub
jbe
mov
lret
or
ds
push
dec
into
xchg
inc
mov
push
sbb
push
icebp
jge
sti
mov
fisubs
outsl
arpl
dec
movsl
scas
mov
cld
push
lea
test
sub
pop
shrl
test
mov
jne
test
pop
loopne
movsl
cmp
iret
popf
push
mov
xchg
out
push
push
in
std
bound
mov
jle
fcmovnbe
lock
ret
sub
jbe
xchg
mov
pop
insb
sbb
lds
mov
rcll
push
push
fs
rcl
adc
xorps
hlt
mov
in
cwtl
lds
mov
jo
inc
test
ret
pushf
push
jb
leave
mov
and
jo
mov
push
shrl
call
mov
mov
lods
subb
pop
lret
push
sub
add
xor
scas
jne
or
add
or
movsb
add
push
mov
xlat
fprem
xchg
xchg
dec
mov
and
lahf
imull
jl
jno
f2xm1
cmp
mov
scas
repnz
mov
pop
aad
mov
test
dec
mov
xchg
jo
pop
pushf
xchg
stc
lcall
adc
adc
fisttps
pop
neg
or
inc
addl
jb
adc
cwtl
push
jnp
xor
mov
sbb
rol
je
push
xchg
mov
push
mov
lret
sbb
push
bsr
mov
push
cmpsl
loop
sub
cmp
lock
es
jno
cmp
xor
leave
or
imul
lock
test
orb
cmp
daa
stos
pop
out
push
scas
repnz
dec
pop
mov
xchg
pop
mov
jns
test
pop
sarb
ja
frstor
sbb
inc
negl
cltd
xorb
mov
fiaddl
fistl
leave
mov
sbb
int
cli
out
mov
sbb
icebp
mov
imul
dec
xchg
incb
sbb
adc
inc
shr
fldt
or
arpl
leave
das
cmp
cli
cli
sbb
dec
lcall
xchg
in
and
out
inc
inc
xlat
dec
xchg
out
push
push
pop
xor
out
fldcw
mov
add
mov
xchg
aas
or
cmc
popf
lret
lret
lret
mov
fistpl
out
dec
in
xchg
popf
roll
int3
icebp
jno
jmp
mov
or
adc
pop
lret
push
cmp
push
mov
or
jl
push
movsl
xor
fldcw
push
add
fucomip
sbb
adcb
inc
sbb
cmp
jmp
lock
cmc
xchg
inc
cmp
clc
jo,pt
cmp
jo
insb
push
stos
adc
jns
outsl
pop
pop
pop
push
hlt
cs
push
inc
je
sub
sbb
xor
dec
sahf
xchg
mov
inc
cmp
mov
and
mov
ret
cltd
mul
movsl
push
or
test
mov
adc
gs
mov
mov
pop
add
push
inc
xchg
js
jo
fildll
push
xor
mov
popf
inc
mov
push
in
mull
adc
ret
mov
out
mov
shlb
jge
and
icebp
je
imul
xchg
pop
and
mov
fistpl
mov
mov
dec
dec
or
xchg
aam
pop
cld
pop
clc
sbb
in
mov
push
push
negb
test
mov
xchg
sbb
mov
jp
insb
stos
stc
stos
inc
mov
lret
adc
shll
rcl
sbb
push
mov
insl
jge
in
sti
sbb
cmp
movsb
jnp
mov
xlat
xchg
iret
out
fs
scas
jg
mov
movsb
aam
or
xchg
dec
xchg
jge
inc
mov
cltd
mov
jne
aad
rcrb
ds
and
cmp
fidivrs
pop
outsb
push
lods
cwtl
xor
shl
mov
pop
or
cmp
addr16
sub
das
push
mov
adc
aam
xchg
push
cmp
jno
sub
mov
repz
jae
adc
leave
mov
cmp
les
and
imul
fsubl
sbb
scas
mov
hlt
movl
jmp
aam
mov
dec
les
mov
push
jno
pop
dec
push
push
aam
outsl
test
mov
into
mov
inc
sbb
ret
out
fbstp
test
cmp
imul
xor
int
xchg
call
fdivl
dec
pop
int3
stos
lcall
sbb
repz
loope
mov
jo
aad
das
mov
push
dec
lds
into
inc
out
lock
aas
sti
daa
or
cli
test
jno
sbb
rcl
bound
flds
nop
sub
sbb
sbb
std
outsb
mov
imul
mov
pop
in
fs
inc
or
jl
push
hlt
adc
jecxz
dec
inc
out
pop
add
dec
push
add
sub
scas
clc
pusha
dec
mov
add
jmp
adc
fs
xor
repz
flds
dec
xor
into
insb
pop
outsl
mov
in
jne
push
mov
xlat
xchg
cltd
not
aas
pop
insl
push
pushf
jp
cltd
das
pop
or
mov
xorl
add
outsl
inc
in
sbb
sahf
or
std
aad
lods
dec
aam
jbe
inc
pop
adc
aaa
jmp
insl
sub
dec
mov
inc
sti
xchg
in
out
std
fcomps
dec
xor
sub
add
add
in
int3
pop
mov
movsl
int
jmp
push
lret
pop
lcall
and
xchg
sbb
mov
lds
sbb
xchg
icebp
es
pusha
add
mov
outsl
sbb
push
mov
orb
bound
and
in
sub
nopl
fcoml
cmpsl
popa
lds
inc
mov
add
cmp
inc
push
dec
sub
add
imul
jbe
dec
sbb
mov
jle
je
push
cmp
cmpsb
mov
jns
xchg
rcrl
xchg
and
mov
jl
xor
clc
pop
mov
xor
dec
and
test
enter
ret
test
lret
xchg
mov
shll
in
enter
push
jne
sub
cmp
stos
fisubs
dec
les
movl
loopne
add
sti
ffreep
into
and
fsubrs
push
shlb
push
push
xchg
cmp
pop
jp
push
test
add
xlat
adcb
adc
push
xchg
mov
pop
and
dec
push
mov
cmp
leave
les
out
or
ljmp
fldl
add
leave
iret
sarb
or
sub
fcomi
sbb
in
adc
push
mov
add
dec
push
movsb
cmp
lods
fisttpl
shlb
push
test
and
mov
inc
jecxz
stc
mov
mov
sbb
push
pop
jl
loope
sbb
pop
xchg
mov
sbb
or
popa
pop
fnsave
addr16
push
fistpl
push
jecxz
sub
push
sub
mov
xchg
dec
sub
fidivrl
cmpsb
cld
xchg
sub
dec
push
jno
mov
adc
or
xchg
outsl
imul
mov
or
adc
dec
sub
out
pusha
jl
mov
cmpb
test
sbb
sbb
inc
es
ljmp
push
fidivrl
cmp
or
sbbb
jmp
adc
mov
push
sub
mov
js
pop
decl
adc
adc
cmp
sbb
pop
xchg
stc
stc
les
fcoms
push
cmpsb
out
jg
lahf
mov
sub
xchg
addps
insl
call
inc
adc
pop
fstpt
pop
cmpsl
pop
addl
push
pusha
dec
stc
inc
imul
sub
pushf
scas
bound
and
in
sub
and
xchg
rorb
xchg
scas
movsl
xor
or
pop
rorw
or
popf
ss
mov
in
mov
enter
bnd
das
loopne
test
adc
lret
sbb
mov
mov
int
mov
fildll
neg
mov
push
add
lcall
xlat
jmp
out
mov
mov
xchg
and
out
mov
outsb
cmp
mov
test
sbb
and
decl
es
dec
enter
jmp
cmpsb
pushf
into
add
adc
pop
add
repz
test
sbb
xor
adc
lret
adc
mov
inc
xchg
push
mov
add
fdivrl
cmp
lods
bound
xor
adc
push
std
stos
fstpl
fwait
rcrb
pop
mov
sub
in
inc
cmp
jnp
stc
and
mov
js
dec
cmp
mov
pop
in
cmpsl
sub
and
inc
adc
or
out
loop
clc
mov
fisttpll
pop
rorl
inc
inc
add
call
outsb
sub
jns
push
add
mov
pop
popl
outsb
push
xor
repz
sub
sub
pushf
and
mov
stos
gs
sti
aaa
test
add
cmpsl
hlt
pop
jno
mov
inc
in
sbb
pop
jmp
mov
pusha
mov
dec
or
mov
into
xchg
das
pop
insb
out
dec
mov
xchg
mov
je
mov
add
xchg
inc
adc
dec
int3
not
inc
pop
imul
xor
sbb
push
mov
mov
outsl
fadds
loopne
mov
adc
or
mov
dec
es
fcompl
mov
in
fcmovnu
cmpsl
push
dec
or
stos
lock
daa
push
or
xor
push
out
add
jg
xchg
nop
sti
es
xchg
xor
shrl
test
sbb
icebp
sbb
cmpb
jg
push
aam
inc
and
xchg
cmp
into
ltr
sbb
mov
call
icebp
in
adc
dec
or
cs
ja
mov
jne
xchg
xchg
push
xchg
int3
mov
and
push
adc
scas
test
sub
psrad
loope
dec
fnstcw
dec
adc
cmpsb
divl
repnz
mov
fsubs
and
inc
js
push
lods
lahf
jbe
leave
sbb
dec
call
cmp
cmp
sub
movsl
fucom
jecxz
int3
sarl
xor
add
or
xchg
jmp
adc
mov
push
or
sub
jge
push
shl
in
in
inc
xor
lea
xchg
push
dec
ljmp
mov
xchg
out
in
scas
std
jecxz
sbb
mov
cmpsl
fcoml
push
popa
mov
cli
ret
jne
lods
ljmp
fildl
out
cltd
icebp
xchg
fistpl
push
stos
sub
orb
rclb
add
sti
cmp
push
mov
ljmp
repz
xchg
cmp
xor
pop
jo
xor
cwtl
sbb
std
mov
dec
sub
mov
adc
mov
xchg
test
enter
shlb
movl
xor
inc
out
sbb
xor
andl
push
cs
mov
sarb
push
lds
push
dec
std
stc
sti
jle
stos
add
xchg
pop
push
mov
add
mov
or
mov
adc
or
stos
cmp
std
or
mov
adc
ret
divb
outsl
add
and
xchg
jno
in
inc
loope
push
iret
mov
or
jecxz
push
xor
stc
ljmp
aad
xchg
adc
sub
add
fcmovu
jnp
mov
fdivrl
lock
outsl
sbb
dec
xor
je
loopne
shrw
jne
cli
sbb
push
fldcw
loope
inc
inc
cwtl
mov
push
test
div
sub
popa
push
push
andb
mov
xchg
test
adc
cs
nop
xor
mov
mov
jbe
into
cltd
in
orl
adc
je
jl
and
mov
jne
leave
jb
xor
mov
aam
push
sub
mulb
mov
adc
xchg
cwtl
in
xchg
push
mov
loope
test
inc
std
fwait
mov
cmpsb
xor
pop
mov
test
bound
push
xchg
inc
ja
rclb
jl
inc
jns
xor
aam
xchg
xchg
test
adc
cmp
fwait
add
push
gs
pop
pop
mov
aad
scas
jp
repz
outsb
sub
es
mov
mov
inc
xor
adc
scas
test
push
lods
push
shlb
cmp
pop
mov
xchg
inc
aaa
inc
call
ss
dec
adc
or
int
mov
arpl
pusha
aam
addr16
ret
fs
mov
js
cmp
cmp
jo
lock
lea
je
bnd
sub
lds
stos
cli
fsubs
outsb
ficomps
test
adc
mov
or
xchg
ret
loop
and
push
add
mov
lret
mov
jle
and
cs
pop
pop
inc
xchg
in
and
outsb
fcompl
cmp
pop
in
or
gs
dec
rolb
int3
lods
repnz
xor
dec
push
push
sub
mov
jns
decb
dec
into
inc
test
mov
pusha
stos
imull
push
jle
movsl
sub
mov
cmp
add
cmp
push
and
rcl
rorl
mov
fimuls
fnstenv
sub
ljmp
ret
aaa
jecxz
out
mov
inc
sub
scas
dec
push
mov
in
inc
negb
fcmovbe
mov
xor
pop
cmp
and
orb
test
cmp
cmp
ret
push
ja
inc
stos
cmpsb
das
bound
popa
pop
enter
mov
push
rclb
add
sbb
adc
mov
xor
outsb
xchg
mov
js
or
lods
pop
mov
add
lret
mov
out
mov
jo
add
outsb
sbb
cmp
aas
inc
mov
loopne
fs
xchg
outsl
or
push
ss
sub
in
mov
pop
pop
mov
xchg
icebp
mov
imul
jle
loopne
sbb
lret
jle
imul
sub
mov
mov
add
add
mov
mov
mov
outsb
pop
fistl
inc
mov
outsl
pop
dec
andb
fwait
enter
sbb
in
into
sbb
arpl
aad
fstpl
mov
sub
xchg
rorl
lahf
sbbl
xor
int
add
xlat
sbb
scas
cmc
iret
xor
dec
iret
push
xchg
xchg
ret
push
cwtl
xchg
test
repnz
add
dec
push
or
fwait
mov
fimuls
jo
lret
mov
mov
mov
push
fldln2
fmul
push
sub
out
dec
iret
inc
and
int3
sub
insb
stos
ss
xchg
mov
sbb
test
cmp
scas
cmp
and
mov
rcl
mov
lcall
push
sbb
cmpsb
or
xlat
mov
aaa
sub
sar
xor
mov
movsb
ret
pop
into
call
test
call
xor
xchg
int3
or
dec
lock
add
xchg
add
outsb
push
dec
cmpsl
rep
add
adc
jo
imul
dec
sub
pop
xchg
xlat
cmpsl
xor
in
sahf
adc
lods
adc
mov
cmp
jecxz
test
push
pop
jp,pt
rcrl
sahf
push
cli
mov
push
mov
das
rcrb
pop
and
clc
sbb
inc
xchg
popa
cs
subl
pushf
dec
xchg
scas
std
mov
movsl
mov
sub
das
bnd
mov
hlt
test
jb
lods
les
ret
xchg
out
fldl
jb
dec
cltd
out
scas
xlat
dec
cwtl
enter
adc
dec
or
sbb
cmp
lea
ds
xchg
fisubs
cmp
adc
pop
imul
xor
test
xchg
repz
mov
js
push
inc
pop
mov
ret
idivl
pop
int
sar
xlat
add
cmpsb
cmpl
inc
adc
and
mov
xor
inc
orl
mov
notb
add
scas
das
mov
push
popf
cmp
movsl
lock
pop
inc
add
mov
rcr
cwtl
pop
xor
xor
adc
lahf
lds
xor
cltd
mov
pop
sbb
cmc
xchg
movsb
data16
add
and
decb
ljmp
into
les
push
into
or
sub
in
in
xchg
add
fisubrl
adc
mov
mov
imul
and
dec
xchg
jns
inc
mov
inc
ja
bound
into
fs
add
clc
cmp
mov
in
or
or
inc
lret
hlt
cmpsb
stos
sub
imul
pop
dec
aam
lea
jne
arpl
push
testl
pop
xor
mov
inc
add
repnz
pop
sbb
add
sub
jle
movsl
and
hlt
adc
aaa
cmp
das
ss
cltd
out
daa
or
ret
loopne
and
fnsave
inc
jnp
dec
insl
inc
xor
xor
pop
mov
pusha
inc
push
push
in
mov
mov
mov
repz
xor
pop
movsl
je
xchg
in
add
aaa
push
es
inc
dec
xlat
fcomps
sbb
pop
outsl
ss
adc
jno
and
mov
dec
mov
scas
dec
sbb
push
out
and
in
call
cltd
cmp
jp
xor
gs
mov
mov
sbb
xchg
test
pop
cmpsb
mov
sub
inc
insl
es
jmp
das
imull
dec
sub
jae
mov
arpl
xor
sbb
movsl
sbb
fxch
jge
call
or
xlat
nop
xor
mov
add
insl
jno
mov
sti
add
out
xchg
xor
xchg
mov
lods
cmp
sub
mov
pop
jge
pop
mov
add
pop
mov
ss
lds
ljmp
xchg
jl
sub
adc
xlat
cmc
loop
mulb
lret
mov
and
outsl
rcl
pop
fsubr
int
adc
add
lock
mov
push
test
mov
push
push
and
xchg
cmc
and
cmp
cmp
gs
lods
mov
cmp
sub
fadds
into
and
sub
lcall
xchg
out
out
cmp
sub
xchg
ret
push
lret
scas
aas
pusha
scas
mov
loop
cld
loopne
add
pop
lret
ljmp
test
call
orl
add
lods
xor
inc
mov
test
rcll
int
dec
adc
jge
cmp
test
ljmp
mov
in
sbb
xchg
ljmp
sbb
mov
dec
mov
adc
sahf
mov
cltd
push
jp
jne
mov
popa
or
gs
inc
inc
cmp
nop
cmp
xchg
sbb
dec
pop
xor
arpl
aam
jle
mov
gs
int
xchg
cmp
push
subb
inc
mov
mov
addr16
iret
enter
repnz
and
movsl
mov
mov
mov
add
ror
push
xor
add
popa
cmp
and
jae
xchg
repnz
cltd
or
sub
sahf
hlt
cmp
stos
rep
pop
jns
jae
pop
dec
xchg
and
and
stos
test
mov
add
testl
xchg
mov
ds
cmp
mov
jge
jno
xor
cld
cmpb
lock
fcmovu
cmp
in
jge
push
test
pop
cmp
jo
mov
jmp
stos
cwtl
sub
mov
cltd
add
xchg
stc
faddl
test
pusha
cmpsl
sub
ss
repnz
insl
outsb
dec
inc
data16
inc
cmp
in
pushf
cmpsl
pop
cmp
call
rorl
imul
xchg
jne
add
cmc
pop
xchg
cmp
lret
sbb
test
lds
and
in
stc
jl
mov
inc
sbb
push
xchg
into
lock
std
push
mov
stc
or
adc
and
xor
pop
imul
int3
insl
in
cmpsb
aas
insb
std
gs
cmp
int3
xlat
aam
sbb
sbb
xchg
int
lock
cmc
adc
scas
out
jl
out
nop
lds
dec
lcall
pop
in
mov
add
jbe
test
out
int3
cs
testb
xchg
and
mov
shlb
jecxz
xchg
lcall
into
gs
mov
cmpsb
sbb
and
ja
in
mov
out
sbb
cmp
xor
sbb
and
mov
mov
pop
fistps
fnstcw
sbb
cmpsl
lods
es
sbb
mov
dec
add
aaa
shl
add
push
mov
insl
push
mov
push
sub
mov
and
js
push
mov
or
or
jecxz
enter
mov
push
data16
nop
in
dec
in
jmp
mov
gs
dec
pop
cmp
and
jge
movl
xor
movsb
jg
aaa
push
cmpsl
jp
xor
mov
ret
outsl
xchg
push
pop
sbb
dec
in
sub
mov
push
and
and
data16
push
cld
fstpt
int
test
sub
rorb
and
inc
and
xlat
arpl
pusha
in
inc
or
push
jmp
cmp
dec
repnz
rcr
inc
ficoms
adc
popa
lock
je
xor
mull
ljmp
or
stc
and
mov
cmp
inc
lods
test
jbe
xor
mov
inc
xor
mov
jo
mov
cmc
repz
push
outsl
sub
push
xor
test
pop
test
jle
jbe
mov
cmpsl
out
leave
fdiv
imul
sub
das
out
inc
push
xchg
ljmp
add
jmp
mul
pop
out
mov
push
sub
mov
cmp
add
mov
insl
add
mov
ret
xor
push
push
or
scas
clc
sbbb
add
pop
jae
adc
data16
mov
imul
and
arpl
fs
addr16
push
inc
pop
lock
test
push
negl
adc
out
dec
jle
orl
ljmp
mov
cwtl
xor
hlt
aas
lock
leave
inc
adc
into
cwtl
jne
cmp
insb
sahf
sub
xadd
inc
repz
cmp
mov
pop
inc
xchg
sub
ret
push
insl
lahf
imul
or
fists
or
mov
cmpl
cli
dec
test
cmp
in
insb
aad
pop
shrl
fildll
sbb
mov
pop
mov
into
jbe
pop
stc
outsl
and
sub
sbb
inc
cli
jae
mov
mov
das
in
jecxz
fbstp
mov
xchg
mov
cs
dec
adc
or
xor
imul
into
push
fcoml
xorl
adc
imul
or
leavew
stos
sub
xchg
fcompl
fimuls
push
sar
decb
sbb
out
outsl
cltd
dec
push
jae
insl
adc
push
push
xor
mov
lcall
in
pop
mov
adc
movb
aaa
aaa
add
imul
sbb
into
sub
shrb
mov
dec
dec
adc
lcall
out
xchg
xchg
int
pop
lds
sbb
mov
out
pusha
xor
add
js
movsb
out
mov
dec
sbb
pop
mov
push
bound
xor
push
mov
or
and
dec
jecxz
xor
cltd
daa
je
lret
jo
pushf
mov
mov
and
push
mov
clc
adc
scas
jg
inc
into
orl
jmp
dec
inc
fnstenv
jne
sub
mov
and
mov
stc
fildl
ja
dec
jne
bound
lret
xchg
pushf
in
xor
jno
lret
mov
cmp
les
aaa
ds
jo
addl
fisttpll
push
popa
and
insl
test
fisubrs
pop
orl
pop
ret
mov
xor
into
xchg
test
xor
xlat
sarl
xchg
stos
pop
and
jb
lret
dec
inc
icebp
sbb
into
hlt
fxam
dec
sarb
iret
pop
clc
leave
or
adc
mov
xor
push
jge
stos
andl
sbb
xor
insb
pop
outsl
and
cmpsb
rolb
or
cmpsl
cmp
imul
mov
and
xchg
adc
clc
call
sub
jl
sbb
rcll
pop
pop
adc
insl
jmp
and
add
invd
in
mov
scas
sbb
xchg
cmp
mov
mov
xor
or
jl
inc
lahf
push
inc
mov
pop
movsb
push
popa
xchg
loopne
lcall
inc
jbe,pn
inc
into
dec
inc
das
cmp
and
in
shlb
push
fldenv
scas
pop
jb
jecxz
dec
ds
fdivrs
dec
inc
sarb
jp
stos
add
lret
pop
js
adc
jno
jae
mov
pop
sbb
sub
psrad
mov
cmp
sub
mov
mov
gs
add
aaa
cwtl
inc
or
nop
and
leave
pop
or
leave
arpl
rclb
and
fnsave
test
fmul
dec
dec
or
idivb
xchg
cld
cwtl
xchg
cmp
ja
add
outsl
ficomps
xchg
add
add
test
adc
push
jbe
sub
add
stos
stc
cmp
fsubp
adc
insl
mov
adc
int
mov
jmp
in
xchg
xchg
push
xchg
lret
jmp
mov
or
adc
push
enter
jmp
pop
pop
cmp
xchg
lods
xor
xor
popf
sub
jae
mov
jle
xchg
clc
cmp
int3
in
outsl
dec
les
lds
adc
sub
mov
icebp
loope
lea
call
aam
sbb
rcll
movsl
mov
cmp
gs
pop
out
mov
fs
or
and
mov
xchg
dec
mov
pop
es
jge
push
daa
insb
jae
ficompl
adc
push
push
bnd
or
es
cltd
xchg
inc
jl
fimull
add
imul
subb
popa
jae
fwait
inc
fstpl
aas
hlt
enter
fst
mov
dec
lret
daa
mov
dec
mov
mov
inc
push
add
shrl
mov
push
lea
jbe
data16
in
decb
add
xor
dec
ja
mov
mov
inc
xchg
xor
idivb
add
stc
in
int
and
and
and
shll
outsl
outsl
in
mov
inc
mov
je
sub
add
pushf
sbb
daa
inc
jnp
and
es
hlt
imul
mov
aas
outsl
cld
icebp
jo
in
adc
mov
sub
xor
lret
cmpsl
xor
sahf
adc
std
mov
lcall
fucomi
ret
int3
das
push
push
cmp
lds
xchg
scas
je
bound
sub
xchg
outsl
xor
mov
imul
xor
ja
insl
dec
fldcw
test
addr16
cmp
push
rorb
add
sahf
pusha
ret
xchg
and
or
fldl
add
fstps
outsb
and
cmc
sub
jns
inc
aam
mov
js
mov
fildll
fists
xor
xchg
xchg
mov
roll
rep
push
cltd
cs
imul
pop
mov
or
dec
push
and
adc
pop
pcmpgtd
cmp
jno
sub
push
stc
outsb
sti
iret
xchg
jge
lods
adc
mov
idivb
sub
pop
push
loope
ss
std
fcomp
adc
jb
mov
adc
and
outsl
rclb
sarl
cmp
xlat
xchg
or
xor
mov
dec
pop
inc
out
dec
xor
push
xlat
push
pop
xacquire
movsb
sbb
int
int3
push
cmpsl
mull
mov
push
clc
mov
mov
mov
sarb
jo
rorb
cld
call
xor
les
cmp
cmp
jbe
test
inc
out
fwait
pushl
mov
add
or
out
xchg
cmp
push
jns
inc
inc
sbb
test
adc
pop
rol
sti
push
pop
mov
push
mov
movsb
popf
mov
fwait
mov
lahf
shl
lods
sbb
out
shll
in
test
aad
dec
adc
outsl
rclb
push
subb
push
insl
jmp
lahf
jl
mov
pop
xchg
xchg
inc
cmc
lret
push
pop
andl
mov
dec
jmp
pop
aam
gs
sub
cmpsl
sub
mov
and
add
add
xchg
hlt
xchg
pop
mov
xchg
scas
xchg
dec
bound
popa
jecxz
push
or
fldenv
sub
cmp
lret
pop
or
mov
das
shr
mov
imul
test
jno
cltd
bound
xchg
loope
int
lahf
xchg
adc
sbb
sbb
xchg
mov
inc
int
push
push
mov
sbb
addb
xor
xchg
dec
cmp
xlat
fcompl
push
pop
sub
mov
xor
iret
imul
xchg
in
cli
mov
mov
cltd
jbe
aam
mov
aaa
insb
mov
inc
jbe
imul
sub
mov
pop
mov
pop
aas
repz
jl
mov
mov
cltd
stos
nop
push
dec
mov
mov
jl
int
imul
insl
clc
jno
dec
adc
push
mov
lahf
sahf
aam
pop
add
mov
pop
dec
scas
push
out
mov
and
or
ljmp
push
out
fdivl
push
pop
fsin
es
fisubrs
clc
enter
int3
add
mov
shl
push
jge
xchg
sbb
out
dec
clc
nop
pushf
in
sub
scas
jp
sub
xchg
dec
ret
test
sti
or
xor
ja
jne
dec
push
imull
inc
aas
mov
or
inc
inc
cmp
das
ljmp
and
fdivs
dec
mov
mov
cmpsl
pop
idivl
clc
icebp
push
mov
loope
aas
cli
xor
pop
cmp
jne
xor
pop
or
mov
adc
imul
jo
stos
mov
in
xor
icebp
mov
iret
adc
adc
push
sub
stos
ret
jl
mov
mov
pop
pop
repnz
mov
bnd
mov
or
adc
mov
mov
inc
and
lods
int3
fsubs
or
popa
mov
or
adc
mov
push
popf
jae
in
mov
jmp
fdivrs
ret
sbb
data16
push
mov
enter
loop
pop
mov
bound
pop
dec
push
or
or
xchg
dec
xor
leave
fnsave
sub
jns
leave
adc
cmp
push
cli
mov
mov
ss
fists
mov
lods
lods
in
cs
pop
mov
mov
add
mov
inc
mov
xchg
test
cwtl
roll
sbb
sbbl
jge
in
xchg
mov
mov
xchg
cmp
push
repz
je
loope
movsl
jno
push
mov
jae
mov
adc
mov
rcll
dec
xchg
inc
std
mov
les
leave
xchg
pushf
sub
nop
icebp
cltd
sbbl
mov
push
stos
sub
mov
in
mov
pop
jne
push
and
fstl
cwtl
clc
adc
cs
cld
insb
iret
or
push
push
or
ds
xchg
pop
push
cmc
in
sub
and
leave
push
fldl
pop
push
aas
mov
and
das
xchg
test
ljmp
sti
mov
push
ds
sbb
xchg
dec
stos
lea
sub
gs
jge
sti
jle
js
mov
push
cmp
jns
push
enter
push
imul
mov
enter
stc
fcoml
xor
xchg
testb
lds
insb
stc
fiadds
dec
bound
mov
popa
xchg
pushf
cmp
jo
mov
repnz
jno
pop
test
and
out
cmp
dec
mov
cwtl
inc
fiaddl
movsl
loopne
push
or
xor
cltd
push
inc
ja
add
stc
cmpsl
cmpsb
bound
dec
cmp
shl
cmp
fsubl
divl
or
aas
cli
shr
out
mov
sub
cli
orl
loop
notb
insl
daa
aaa
mov
xchg
iret
mulb
les
pop
push
scas
jbe
insb
jmp
push
mov
cli
and
xor
enter
push
cmp
jge
xor
push
addr16
jnp
movsb
push
repz
inc
lds
inc
cmp
filds
push
mov
mov
cmp
mov
lds
pop
jne
xor
push
mov
adc
mov
mov
inc
movsb
outsb
insl
and
push
jb
in
push
leave
cli
les
cld
and
ret
jae
or
in
ret
imul
dec
inc
jge
ret
fdivrl
mov
cmp
and
loope
mov
stos
stos
in
mov
popa
add
or
dec
xchg
mov
xchg
scas
and
int3
xor
ja
cmpsl
movsb
mov
adc
inc
adc
andb
adc
cmpsb
int
aaa
out
and
fists
cmp
out
popa
daa
mov
add
cltd
neg
aaa
cmp
scas
int3
out
cmc
inc
adc
jbe
test
pop
xchg
jbe
iret
add
leave
xchg
add
daa
and
push
insb
jl
xchg
sbb
ret
lret
xorl
adc
popl
nop
pop
push
jmp
push
leave
repnz
jmp
pop
jg
adcb
sti
push
pop
xchg
nop
aas
mov
data16
test
insb
sub
push
pop
ficoml
xlat
test
push
push
movsb
notl
or
icebp
jge
mov
scas
in
sub
lods
add
adc
lret
pop
xor
clc
jg
insb
mov
xchg
mov
xchg
aam
pop
daa
sub
nop
mov
push
nop
jmp
jmp
in
jns
and
dec
ficomps
aam
gs
stos
int3
fwait
push
call
and
sub
inc
jge
mov
xchg
or
fbld
push
mov
mov
ljmp
addb
popa
shlb
es
lcall
jecxz
add
push
decb
ja
stos
mov
sbb
pmaxsw
in
mov
dec
lahf
mul
aad
push
addr16
cmp
sti
das
and
rcrl
pop
and
cmp
or
pusha
pop
xchg
cs
scas
and
loop
mov
dec
lock
test
push
shlb
add
inc
cltd
popf
lcall
and
cmpsb
pop
dec
pop
lods
stos
lret
pop
inc
enter
mov
push
les
mov
jle
and
lods
ds
int
and
add
pop
push
cmp
imul
xchg
pop
out
popa
aam
test
push
lahf
sub
pop
shr
or
imul
sbb
xor
sti
bound
bound
ljmp
iret
in
lds
push
test
mov
pop
sub
adcb
dec
xchg
sbb
mov
jo
dec
xor
xor
lret
push
xlat
mov
xchg
push
xor
sbb
mov
aam
pushf
call
jb
into
push
fdivr
adc
sub
cltd
lods
push
popf
sbb
data16
cmp
aad
sti
and
mov
xchg
repnz
adc
mov
sbb
shl
xchg
iret
mov
or
in
notb
pop
jne
jle
add
cltd
int3
mov
or
divl
mov
jle
dec
xchg
xchg
out
and
mov
test
fistpll
inc
inc
clc
adc
add
pop
pushf
fcoms
fmuls
xchg
dec
outsb
xchg
cmp
pop
xchg
shlb
lret
dec
rorl
lahf
push
xlat
outsb
dec
and
test
sub
and
dec
jmp
das
ret
vpcmpgtd
ds
pop
push
adcl
sti
loopne
add
or
or
pop
fsts
cs
imul
fs
cmc
lret
shrl
shr
xlat
enter
jo
pop
in
dec
bound
data16
xor
pop
insb
xchg
aam
xchg
adc
stos
testb
sbb
out
fwait
and
push
fadds
dec
cmc
fldl
fwait
shll
sbb
mov
in
mov
sub
xchg
push
jae
add
enter
or
sub
inc
cmpl
insl
shll
push
into
push
lock
sti
repnz
cmp
pop
mov
lds
icebp
pop
cmpsb
push
fwait
test
inc
pop
rclb
jnp
push
and
jne
fiaddl
xchg
in
fs
lds
adc
mov
fwait
adc
insl
cmpps
sub
jl
lret
or
shl
ficoms
sub
adc
enter
jg
jp
ficomps
add
or
mov
push
dec
ljmp
out
push
imul
fistl
stos
cmp
imul
xchg
adc
adc
and
pop
cmp
add
fcmovne
xorl
imul
xlat
adc
adc
dec
dec
xchg
jle
scas
pop
js
aad
jl
ret
mov
int3
mov
xchg
out
lret
cmp
xlat
adc
sbb
mov
imul
test
inc
xchg
add
lcall
into
cli
les
push
push
and
or
stos
sub
test
jmp
dec
filds
ror
icebp
aaa
dec
or
dec
sub
push
mov
movsb
mov
pop
inc
and
decl
lahf
cld
arpl
cmc
sub
inc
clc
das
orl
mov
jge
les
mov
cmp
mov
loop
leave
ljmp
ljmp
or
sbb
mov
push
xchg
adc
sbb
sbb
or
lret
sub
and
inc
cmp
adc
push
out
or
xor
test
mov
les
jbe
xor
in
sbb
inc
fwait
loopne
repnz
xchg
inc
lds
sub
sbb
or
sub
add
and
outsb
mov
ret
inc
mov
push
in
jbe
loopne
inc
sahf
adc
outsb
mov
jae
cmp
test
mov
jae
jnp
ss
cmpsl
bound
lods
or
aam
push
dec
jae
and
or
push
jno
sbb
fcoml
pop
xor
xlat
fwait
loopne
movsl
ja
outsb
pop
ret
adc
push
or
mov
shll
outsl
and
jl
xchg
push
push
or
push
rolb
outsl
adc
mov
xor
lahf
mov
push
inc
fsubs
stc
push
add
xchg
cmp
sbb
test
push
cmpsb
out
or
xchg
mov
add
mov
xchg
ljmp
and
mov
sub
mov
imul
inc
insb
daa
sahf
sub
ljmp
ds
insl
sub
push
popa
mov
stos
shl
mov
pop
outsb
mov
mov
mov
cwtl
pop
jle
jbe
scas
sub
or
icebp
addr16
and
aad
push
cwtl
div
or
mov
pop
inc
sbb
enter
cmp
and
scas
jnp
daa
les
dec
pop
out
test
mov
sbbb
push
push
mov
mov
add
pushl
jbe
in
xchg
or
push
pop
jge
in
jno
push
pop
pop
call
outsb
push
jno
jg
jnp
addr16
stos
imul
shll
inc
dec
test
mov
sub
leave
lea
pushf
popf
sub
ror
insb
mov
shl
sub
cltd
pushf
shlb
xchg
in
ret
fsubl
aad
cli
push
in
jb
jns
cli
cmp
imul
jl
jl
movsb
inc
cld
mov
roll
test
jge
pop
sub
jl
xchg
jae
mov
sarl
cmp
lcall
out
cmovne
int3
mov
adc
or
sbb
shrl
movsl
js
inc
sub
cmpb
cwtl
and
daa
int3
sbb
jo
ficoms
xor
add
xor
inc
jg
and
mov
pop
daa
push
lret
cmp
adc
fidivrs
mov
sub
pushf
fwait
mov
mov
pop
fnsetpm(287
jl
mov
pop
xor
and
je
inc
cmpsl
and
out
mov
push
loop
xor
js
call
out
mov
or
fwait
and
loope
stc
repnz
jg
popf
xchg
jge
ljmp
outsb
bound
jge
adc
jg
cwtl
xor
pop
sbb
movsb
dec
jnp
add
test
jecxz
pop
lahf
mov
push
popf
aad
not
mov
add
movsl
add
andb
jp
cmp
fmulp
add
xlat
rorb
mov
repnz
mov
cmpsl
xor
icebp
mov
add
inc
add
icebp
mov
push
cmpsl
mov
nop
push
jae
loop
shll
hlt
ret
cwtl
mov
push
popa
mov
mov
lcall
add
xchg
inc
pop
dec
pop
in
adcb
icebp
add
mov
pop
cltd
mov
jle
xchg
lods
xor
adc
popa
dec
push
inc
xor
loop
pop
mov
mov
mov
sbb
imul
jl
divb
addl
push
xor
mov
add
adc
iret
repz
test
std
aam
sarl
aaa
mov
and
mov
iret
ret
cmpsl
insl
sub
cld
mov
mov
mov
test
je
icebp
scas
mov
add
mull
push
andl
xor
cmc
imul
sahf
inc
cmp
fisttps
and
jg
or
outsb
mov
pop
ds
lret
or
jns
hlt
and
stos
test
je
fsub
popa
rcrb
inc
push
or
mov
push
outsl
xchg
mov
in
mov
dec
sub
seto
fdivrp
pop
lea
sub
andl
dec
xchg
push
jo
ret
cmp
push
subb
shll
fnsave
pop
cmpsl
and
jne
mov
inc
stos
std
fistpll
xchg
mov
in
jb
sbb
inc
cmpl
repz
and
pop
mov
add
sahf
and
push
jne
jmp
gs
sbb
shlb
sbb
and
pop
and
and
push
bound
pop
xor
and
cmp
mov
addl
stc
inc
dec
ret
inc
or
cltd
xchg
mov
pop
xlat
push
xchg
lods
popf
fistpl
adcl
xor
push
pop
insb
outsl
in
mov
lahf
in
mov
stos
jp
rcl
es
sub
pushf
int
push
bound
sbb
jg
mov
push
ret
jle
sbb
in
lds
lret
lret
cmp
pop
pusha
mov
push
jle
xor
cmc
lods
lds
cmp
in
sub
cmp
iret
in
mov
ret
gs
dec
in
jecxz
andl
lret
adc
cmpsb
aad
inc
xor
outsb
iret
push
shl
je
repz
pop
push
xor
andl
aam
stos
xchg
xor
int3
movsl
mov
ja
lcall
aas
ss
jno
push
imul
fs
inc
jae
jnp
and
xor
sbb
outsb
cmc
adcb
mov
jb
sub
cmp
test
adc
gs
scas
sub
es
pop
fildll
add
ret
xor
pop
adcl
dec
pop
jmp
pusha
mov
loopne
clc
sahf
fs
lcall
jb
sub
lock
mov
xor
arpl
mov
insb
add
push
mov
sub
dec
cmp
es
or
jne
jo
icebp
or
in
fldt
scas
inc
enter
imul
stc
clc
sahf
push
or
out
lcall
mov
in
pushf
sub
insb
in
in
pop
xchg
es
daa
rolb
in
test
xchg
mov
jne
insb
arpl
mov
jge
ds
call
ja
xor
mov
into
xchg
mov
iret
ret
or
movsb
test
jo
rclb
push
stos
testl
add
loop
fwait
movsl
lahf
sarb
in
into
push
mov
mov
sub
fsave
cmpsb
pop
addr16
lcall
leave
aaa
je
mov
outsb
adc
dec
pop
dec
leave
ja
es
int3
push
adc
aas
adc
mov
push
sub
outsb
fistl
lcall
andl
les
iret
mov
pop
push
out
adc
movb
mov
pop
bound
mov
jo
inc
pop
rcl
mov
and
loopne
in
dec
dec
or
repnz
cltd
shrl
xor
or
push
xchg
movsl
sub
push
inc
flds
xorb
loope
sbb
cmpsb
jne
xor
sbb
pop
sub
mov
sbb
mov
cld
shlb
cmp
mov
pushf
mov
dec
pop
out
cmp
call
cs
push
mov
cmc
nop
adc
punpckhbw
xlat
sbb
test
mov
xchg
jne
push
xor
test
test
in
mov
jecxz
adc
cmpsl
lods
scas
stos
xchg
pmuludq
leave
cmpb
inc
xchg
xchg
repz
fimull
push
xor
in
lret
jl
dec
inc
jmp
inc
out
ror
loopne
and
jns
iret
add
imul
adc
add
std
stos
sub
pop
aaa
insb
xchg
incb
fwait
xchg
lods
push
stos
lods
or
sarb
add
mov
adc
add
pop
das
or
add
leave
scas
adc
xchg
pop
ja
js
pop
cli
pop
hlt
cmovl
inc
mov
pop
push
jp
xchg
lock
push
addr16
jmp
mov
stos
inc
mov
mov
ret
lret
cwtl
push
ja
in
data16
sti
jae
cmp
add
xchg
in
or
push
dec
jp
fsubl
push
cmpsl
fs
sbb
rcrl
sbb
xchg
add
jge
or
and
sub
imul
rcrl
pop
out
sub
cmovb
cmp
push
sarb
adc
xor
push
shll
pop
orl
int
adc
idivl
adc
cmpsl
cs
jne
cmp
and
mov
call
or
lods
js
inc
adc
push
inc
adc
hlt
ds
and
out
test
outsl
and
add
js
dec
cmp
aaa
mov
adc
sub
mov
xchg
jmp
mov
jns
loop
push
pop
cmp
decl
mov
push
jge
rep
stos
sbbl
loop
mov
scas
sbb
add
fstp
lcall
icebp
sub
mov
xor
push
pop
and
mov
push
dec
dec
aaa
fildll
or
aaa
push
out
stc
subb
or
cli
jno
and
out
sti
repnz
inc
idivl
clc
mov
mov
pop
ljmp
pop
pop
xchg
mov
hlt
mov
inc
mov
adc
mov
aad
stos
cld
jg
sahf
pop
lock
or
xchg
ret
jns
dec
adcl
nop
push
lods
pop
addr16
sbb
mov
push
repz
pop
pop
stc
inc
lods
cmp
fisttpll
shll
push
fwait
fs
mov
pop
into
pmaddwd
mov
pop
lods
xchg
mov
cwtl
inc
movsl
push
leave
sbb
leave
mov
xlat
mov
fdiv
icebp
cmp
mov
push
sahf
dec
jno
sti
sub
mov
fnstcw
out
xchg
dec
stos
fnstcw
cmp
roll
mov
or
addr16
push
xchg
jb
cbtw
outsl
xchg
loopne
ja
push
mov
inc
jle
xchg
add
jecxz
in
ficoms
inc
fwait
scas
jnp
das
pop
insl
sbb
mov
cwtl
push
inc
and
xchg
out
adc
dec
ret
jg
ss
inc
into
push
in
or
int3
sub
gs
push
add
mov
fidivs
push
testb
mov
insb
jnp
les
fsubl
test
std
xchg
push
add
mov
sub
jns
inc
fstps
imul
and
incb
stc
in
sarl
test
and
daa
xchg
inc
repz
and
mov
lcall
add
stc
sarb
jbe
adc
push
mov
bound
imul
les
loop
das
cmpb
das
pop
and
ja
dec
out
jo
push
rolb
sbb
sub
push
lahf
push
add
jb
lahf
jle
cs
fcomps
imull
or
stc
int3
aad
pusha
stos
movsb
xchg
inc
loope
cwtl
adc
mov
mov
dec
icebp
aad
lahf
pop
out
lock
mov
adc
out
pop
popa
jno
cmp
addb
cmp
pop
cmp
pop
jle
mov
inc
popf
sbb
push
ficompl
cltd
sbb
or
mov
test
or
lods
inc
les
test
in
xchg
inc
push
movsb
pop
add
xchg
jle
out
fimull
addr16
js
mov
dec
cmp
data16
sub
mov
xor
push
test
in
add
jb
insb
cmc
mov
mov
push
fstl
xchg
mov
ret
xchg
sti
push
and
sub
mov
mov
add
imull
clc
pop
stc
int
mov
cld
ja
aam
sub
add
inc
and
pop
xlat
fs
ret
insl
push
pop
sub
in
mov
adc
mov
jg
sbb
xor
inc
mov
and
jnp
fiadds
mov
mov
ret
xchg
mov
sbb
out
insb
xor
scas
cwtl
mov
testb
cwtl
xor
adc
or
add
xlat
imul
xchg
std
nop
push
movsb
pop
popf
adcl
add
push
jle
jl
fcoms
test
stos
lret
lock
add
in
sbb
imul
stc
ljmp
push
cwtl
sbb
sahf
aam
dec
mov
or
sahf
iret
mov
imul
jnp
xchg
or
sarl
inc
inc
fsts
cltd
sub
lret
sub
dec
ret
ret
and
mov
aaa
cltd
inc
pop
in
push
cmpsb
sub
adc
outsb
mov
sbb
pop
loopne
aam
mov
dec
test
adc
scas
add
push
mov
popf
test
fadds
out
fsubs
jnp
pop
fimull
stos
jne
insl
dec
sub
push
pop
pop
outsl
fwait
mov
lret
iret
xor
dec
adc
jo
push
cli
test
mov
sbb
repz
rol
dec
adc
lods
lahf
cmpsb
xchg
and
test
fcmovbe
lods
jbe
imul
jmp
push
sub
lret
aad
int3
dec
sbb
insl
loope
xchg
inc
scas
fwait
sbbb
out
dec
mov
inc
mov
push
sbb
js
mov
add
in
aas
xchg
pop
xchg
lcall
jbe
dec
inc
dec
xor
adc
icebp
xchg
call
popa
cwtl
fcoml
mov
daa
in
dec
pop
cli
add
cld
sbb
test
imul
or
push
dec
inc
lods
fmulp
xlat
mov
and
out
sbb
scas
xchg
fsubl
les
inc
fwait
xchg
and
xchg
fld
scas
cmpsl
jns
dec
xor
push
imulb
xchg
lcall
or
push
mov
or
adc
push
push
or
xlat
or
adc
ret
das
movsb
jnp
xor
mov
rcrl
dec
xchg
outsb
mov
pop
xchg
sbb
ret
outsb
sub
and
repnz
repz
ja
cmpsl
jbe
arpl
or
mov
and
outsl
in
loopne
mov
and
inc
mov
in
jl
mov
ficompl
and
pop
xlat
cs
or
and
push
pop
dec
in
xchg
cli
sbb
fs
inc
lret
loop
and
dec
and
push
push
jmp
add
cltd
leave
loopne
ret
jge
sub
mov
and
xchg
lcall
test
push
mov
vpshuflw
fisttpl
pop
mov
mov
mov
test
icebp
enter
pop
xor
pop
mov
divb
xchg
out
rclb
repz
es
in
cmp
lods
std
mov
mov
mov
xor
leave
lods
mov
mov
jns
mov
movl
cwtl
mov
aad
xlat
imul
dec
sub
jb
popa
mov
insb
sarl
scas
ljmp
js
inc
mov
add
mov
sbb
jmp
mov
popl
idivl
test
int
xor
ss
cltd
add
movsb
icebp
fwait
scas
jns
xor
and
mov
call
fs
xchg
int
hlt
mov
push
shrl
dec
push
leave
inc
sbb
xor
mov
xor
clc
cs
ljmp
jae
cs
lret
out
imul
dec
add
arpl
cld
sub
cmp
mov
xchg
add
test
ljmp
scas
cld
sub
ss
dec
hlt
fsubs
cmc
sarl
sbb
lret
pop
xchg
cmp
or
cmpsl
ja
inc
out
mov
cmpsl
adc
ja
adc
and
testb
jmp
jnp
adc
inc
mov
aas
or
or
dec
fisubs
sbb
popl
cmpsl
imul
insb
fstps
cmp
popa
sub
sahf
in
outsl
dec
sbb
mov
jne
or
ss
data16
movsl
mov
pop
dec
mov
push
mov
sarb
inc
cmp
loop
cmp
sbb
scas
popf
lret
cmp
and
and
cmp
in
dec
cmpl
adc
jle
push
enter
mov
dec
fmull
pop
lock
das
jns
sahf
push
arpl
xorl
sbb
pop
ds
dec
sbb
dec
fdivrs
cmpsb
test
pop
icebp
hlt
negl
sub
push
adc
mov
or
inc
mov
data16
test
dec
pop
sbb
sarl
cwtl
aaa
jg
xor
xchg
pop
xchg
shrl
out
inc
or
sbb
clc
mov
mov
int3
or
sbb
xlat
pushl
jo
stc
outsl
pop
xor
xchg
mov
or
outsl
mov
jecxz
mov
dec
dec
dec
loop
pop
adc
or
jne
fistps
ja
cmp
out
cltd
data16
imul
sbb
cmpsl
push
adcl
xor
mov
lahf
gs
jns
cli
ret
sub
rcl
mov
fmuls
and
pop
test
fs
fst
mov
insb
xor
lea
xchg
clc
cmp
mov
movsb
scas
scas
jb
lret
imul
or
in
adcl
xchg
mov
push
aaa
pop
add
adc
ret
xor
cmp
fsubrl
pop
xchg
fnstcw
arpl
or
sbb
das
shlb
testb
mov
aaa
aas
pop
add
mov
push
out
push
jno
fstpl
jl
inc
jle
adc
jmp
push
or
lods
ljmp
inc
pop
pop
fadd
rcl
arpl
jl
jmp
push
outsb
mov
wbinvd
cmp
sbb
mov
subl
and
jp
jne
lods
jge
pop
mov
pop
cli
cmpsl
mov
xor
out
decb
jne
cmp
roll
mov
pop
jecxz
inc
mov
inc
jb
add
push
aaa
pop
xchg
dec
andb
dec
insb
data16
xor
inc
jae
or
outsb
jge
imul
lcall
sub
lcall
jmp
inc
das
jle
ret
push
jge
mov
xor
jnp
repnz
mov
or
adc
lods
out
add
mov
mov
mov
sbb
or
repnz
jecxz
dec
out
xchg
jl
xor
int
imul
adc
add
add
inc
outsb
iret
mov
pushf
jmp
add
mov
add
in
mov
movsb
loope
xor
pop
mov
out
and
mov
or
mov
hlt
lret
xor
cwtl
inc
mov
fstpt
addb
aad
pusha
cmp
push
mov
cmpsb
xor
adc
xchg
mov
pop
mov
in
pop
out
pushf
icebp
add
sbb
add
cmc
mov
and
fdiv
inc
dec
fimull
add
rol
adc
dec
or
mov
or
mov
dec
pop
mov
mov
push
mov
jae
sti
jne
fldenv
lcall
lahf
mov
sub
pusha
je
mov
insl
push
mov
jl
loope
sti
popa
and
jae
sahf
sahf
dec
adc
shlb
cmpsl
xchg
lds
stos
xlat
and
ret
xchg
shll
push
xor
repnz
add
in
add
loope
nop
jecxz
daa
sub
add
sub
bound
sbb
and
filds
pop
push
out
sbb
shlb
fmull
das
rcrb
inc
adc
push
jecxz
push
sbb
rolb
nop
shrl
and
dec
jle
add
and
clc
mov
mov
xchg
pop
mov
sarl
push
ljmp
cmp
int3
pop
sbb
pop
ss
and
mov
dec
jns
pop
mov
nop
push
jl
std
xchg
loopne
or
lret
sub
xchg
outsb
cmp
fisubrs
or
dec
mov
cmpsl
popa
ljmp
fcomps
jmp
stc
aaa
push
lret
ljmp
ret
sbb
lcall
add
xlat
fsubl
jnp
rcl
xchg
xchg
dec
add
add
pop
inc
push
mov
les
iret
xchg
jae
sub
mov
subl
xchg
outsb
cmp
je
inc
fisubrs
push
fimull
test
mov
cltd
mov
lock
aad
mov
fsubs
mov
inc
cld
stos
xchg
sub
mov
js
xor
xchg
add
lea
lock
add
dec
mov
mov
sbb
lret
jmp
fidivs
inc
sub
xchg
push
xor
pusha
shlb
mov
fwait
jae
cltd
dec
cmpsb
jns
fdivr
sbb
mov
xor
iret
mov
insb
mov
cltd
mov
enter
push
dec
mov
dec
fdivl
pop
inc
lods
push
nop
test
fisubrs
mov
add
mov
loope
arpl
and
mov
mov
and
rorb
imul
popf
nop
out
push
and
sub
or
sbb
fdivrs
inc
sub
pop
cmpsb
stc
jae
into
mov
scas
les
push
iret
mov
sbb
adc
mov
cmp
shlb
mov
pop
test
out
nop
pop
or
mov
jb
dec
ljmp
out
enter
punpcklbw
gs
bound
and
lcall
inc
jo
scas
mov
dec
mov
add
cmp
adc
jno
pop
jnp
in
cmp
jb
mov
cwtl
xor
cmp
out
stc
pop
or
xchg
pop
mov
mov
out
sarb
movb
fcomi
xor
mov
jp
push
adc
lret
mov
ds
daa
sbb
shrl
lahf
int3
jg
push
dec
mov
push
cmp
sbb
sbb
test
or
jne
test
cmc
inc
ds
mov
data16
jne
cs
xchg
dec
into
rcll
cmpsb
out
cld
lcall
jecxz
lahf
adc
mov
xor
sahf
movsb
xor
adc
add
int3
jne
pop
pop
cmp
in
aad
clc
lods
out
lds
fidivrl
enter
adc
pop
inc
mov
xchg
and
mov
push
cmp
fadd
mov
and
popf
je
js
fwait
xor
ja
sbb
std
loopne
mov
push
xchg
sub
adc
call
data16
mov
mov
int
mov
int3
ret
push
pushf
xchg
cmp
xor
push
insl
lds
jle
sub
call
adcb
cmp
addl
sbb
dec
dec
insb
movb
xchg
out
aas
loopne
inc
sub
or
or
call
mov
adc
xchg
xlat
xchg
dec
dec
popa
sub
cmp
icebp
jg
idivb
loope
es
mov
jge
das
jle
pop
cmp
cmc
stos
insl
ja
or
stos
test
push
sti
mov
xlat
fdivrl
pop
pop
cwtl
mov
jmp
jle
fsubrp
cmc
push
xlat
cwtl
pop
sti
sub
mov
inc
divl
test
mov
shrl
pop
and
imul
lea
push
ljmp
xor
popf
mov
sahf
out
xor
mov
aaa
cmp
fstpt
lea
or
xchg
or
pop
push
loope
inc
shl
fisttps
lret
adc
pusha
inc
cmp
inc
xor
cld
xchg
jmp
bound
loope
xor
test
sti
mov
cmp
xor
pop
or
dec
call
mov
inc
pusha
fwait
lret
sarb
fucom
ds
mov
ror
cmp
push
mov
cs
fld
out
sub
pop
lods
xor
add
cmpsb
jp
jge
xchg
pushl
iret
cmp
or
inc
jns
je
add
sahf
pop
imul
push
stos
and
fcmovb
cmp
mov
into
inc
pop
mov
cmpsl
stos
add
icebp
pop
pop
mull
lret
mov
lret
inc
cmpsb
subb
add
pop
test
xchg
mov
pop
fucom
mov
fs
pop
adc
lahf
lret
cld
pop
dec
movsl
jnp
mov
push
xor
ds
sbb
xchg
dec
sti
je
sbb
stos
mov
dec
add
xor
cwtl
mov
mov
and
popa
sbb
lock
sub
inc
ja
dec
jnp
dec
cld
repz
push
daa
mov
js
xor
sti
lret
hlt
add
adc
sahf
push
enter
popa
push
mov
and
push
cmc
out
fistpl
xchg
add
pop
sbb
mov
es
sbb
flds
sti
push
data16
lods
mov
cltd
jle
add
fstp
inc
hlt
xchg
mov
js
fadds
orb
dec
mov
xor
adc
sti
ljmp
lret
das
fcomps
xor
cmp
dec
stos
xchg
sub
adc
fstpl
and
adc
js
ret
fnsave
int
push
inc
std
dec
and
jnp
xor
xchg
insl
adc
rcl
add
dec
nop
nop
jo
mov
popa
cwtl
adc
sbb
fdivs
jl
push
lds
mov
loop
test
cli
stc
stos
jmp
jo
mov
rorl
xor
leave
ljmp
push
rorb
or
or
add
cmp
inc
pushf
into
sub
add
shrl
push
mov
cmpsb
sbb
dec
mov
jmp
xor
jle
jnp
inc
insb
insl
push
inc
dec
pop
gs
xchg
xchg
mov
adc
cmp
out
push
jle
add
push
bound
jp
mov
xchg
movsb
pop
fwait
cmpsb
cmc
daa
in
addl
push
cmp
and
lret
sub
es
jmp
out
repnz
sti
inc
mov
repnz
clc
mov
icebp
ret
adc
scas
jns
cli
loop
in
test
mov
outsb
mov
mov
clc
pop
sbb
stos
xor
xchg
fsubrl
xchg
mov
add
adc
lret
push
lods
jl
jne
dec
scas
addb
enter
inc
sahf
dec
xchg
outsl
sbb
aad
xchg
push
lock
add
hlt
fistpl
cld
sbb
scas
dec
add
jns
out
pop
loopne
and
hlt
mov
insb
ljmp
ffreep
and
pop
in
mov
dec
push
xor
xchg
aaa
mov
xchg
dec
mov
mov
and
orl
fsts
loopne
pop
pop
insb
shll
push
iret
sub
stc
mov
data16
jmp
stos
popf
push
lods
push
mov
mov
outsb
add
jae
sub
jmp
aam
cwtl
ss
jmp
adc
loopne
and
mov
sub
rcr
int
fidivs
xor
fldcw
dec
and
test
int
inc
push
das
mov
bound
pop
ret
mov
es
cmpsb
mov
hlt
aad
insl
pop
movsb
fsubrs
jno
repnz
add
or
jecxz
inc
and
mov
insl
xchg
and
and
push
push
cmpsl
rorl
cmp
jbe
scas
lock
cmp
sbb
in
mov
mov
mov
push
daa
push
repz
push
es
pop
push
hlt
mov
mov
pop
addl
loop
sldt
xchg
ffree
jne
das
cld
jo
prefetchnta
test
mov
ret
pop
add
mov
ss
add
cmp
xchg
imul
xor
pop
xor
mov
mov
sarl
pop
pushf
adc
ds
int3
imul
push
aas
push
in
lea
out
push
push
js
sbb
inc
pop
and
and
mul
cmp
pop
add
loope
cli
or
and
inc
jmp
dec
mov
or
leave
jg
test
out
fs
mov
or
xchg
add
jp
mov
xlat
and
ret
push
lock
clc
lods
mov
ret
repz
shlb
jno
jae
jmp
mov
sub
test
mov
pop
sarb
pop
sub
pop
sti
icebp
int
add
cli
sbb
mov
mov
stos
decl
sub
mov
leave
adc
mov
dec
xor
xor
lock
insl
xor
or
push
stc
insb
or
imul
push
xchg
sbb
cmp
out
int3
pop
mov
bound
cmpsl
icebp
push
out
lods
fbstp
sarb
sbb
call
cmc
test
int3
ljmp
aam
in
inc
int
das
aas
das
pop
sbb
mov
pop
filds
sub
das
rclb
data16
push
and
insl
lret
outsb
loopne
cmpl
aad
push
int3
addr16
mov
movsb
cmp
pop
and
mov
push
enter
jne
inc
fnstcw
cmp
in
mov
push
popa
out
push
rcrl
icebp
loope
lahf
xchg
pop
lock
or
push
test
jecxz
sbb
mov
cwtl
das
mov
enter
test
inc
xchg
hlt
into
xor
mov
mov
xchg
dec
shrb
add
aad
idiv
or
in
shrb
mov
out
addr16
into
or
lds
xchg
mov
lods
repz
lock
add
mov
shlb
in
shr
test
xor
lcall
dec
push
cmp
dec
fsubs
ja
or
push
daa
lods
aas
cld
sub
loop
sub
out
cmpsb
mov
xchg
push
sbb
xor
pop
sbb
and
or
repz
push
repnz
push
std
daa
fnstsw
mov
xchg
push
andb
test
int3
sub
nop
and
push
cmpsl
xor
dec
inc
mov
jb
cmp
pop
fdivrs
dec
and
push
sub
dec
sbb
clc
sahf
xchg
cmp
movzwl
mov
sbbb
shll
jg
add
cmp
stos
xchg
mov
popa
cmp
fistl
adc
lcall
shrb
push
fisubl
pop
mov
mov
das
outsb
push
shrb
cmpl
jmp
adc
mov
pop
xchg
xchg
cmp
lret
or
cmp
in
cmpsl
jmp
dec
lock
ljmp
ret
sbbl
and
and
add
adc
std
clc
lret
loope
mov
dec
test
dec
xchg
dec
loopne
das
mov
aad
test
sbb
aas
lea
and
gs
shll
xchg
fadds
push
jno
cmp
mov
jg
outsb
xchg
pop
loopne
pop
cltd
addb
lret
sub
pop
repnz
testb
jge
fstpt
sti
or
and
mov
ljmp
lret
std
pushf
sub
xchg
fcmovnbe
and
pop
cmc
adc
addr16
add
stos
ret
sub
in
int
pop
jg
jbe
jnp
or
sti
cs
test
sub
sbb
int
repnz
cmp
xor
xchg
sub
out
out
adc
in
inc
ficoml
pop
mov
test
sahf
fnstcw
test
xorb
pop
cmp
xchg
lahf
int3
jno
divb
mov
lods
sbb
push
inc
sbb
adc
mov
xchg
int
xchg
cmp
ds
jg
out
sbb
jnp
push
je
cs
loop
mov
lods
fidivrl
lret
fwait
leave
cld
sub
insl
adc
in
or
add
movsl
ljmp
lret
repnz
jge
cld
lods
xor
push
imul
xor
outsb
adc
xchg
dec
inc
and
movsl
fiaddl
fisttpll
push
paddsw
xor
xchg
stos
mov
xchg
xor
xchg
mov
cs
aad
xor
pop
or
scas
jg
jnp
mov
add
cli
into
xor
or
mov
ret
push
fcmove
fadd
repz
jmp
dec
cld
cmc
add
and
stos
add
js
arpl
jae
dec
sarl
push
mov
hlt
iret
cmp
push
ljmp
and
sar
dec
inc
mov
sbb
sbb
fsubl
scas
push
jnp
adc
cmc
mov
shlb
and
mov
mov
gs
movsl
std
pop
xchg
sub
dec
add
fs
and
int
mov
mov
sbb
mov
sbb
out
arpl
jecxz
dec
lahf
xchg
imul
pop
jb
jg
ret
popf
mov
hlt
sbb
inc
cmc
negb
jno
imul
sub
js
stos
and
sbb
add
and
mov
aad
add
cmp
jnp
std
xchg
rorl
mov
jmp
movsb
or
mov
mov
popa
in
dec
jns
je
test
or
mov
testb
sub
sbb
in
sub
icebp
shlb
stos
fs
dec
and
fnstenv
int
movsb
mov
outsl
mov
jnp
mov
fdivl
scas
in
mov
sub
int
notl
lret
fcoms
sbb
loope
pop
sbb
hlt
pop
ds
sti
sbbl
cmp
cltd
mov
ja
fldcw
sbbl
mov
mov
ret
inc
data16
jecxz
scas
loopne
adc
jmp
pop
push
in
cmpsl
pop
mov
push
jecxz
push
sbb
pop
test
imul
mov
pop
mov
adc
ja
push
jmp
loopne
sbb
lret
nop
jno
or
aas
movsl
jge
cmpsl
push
xor
pop
sti
subl
fisttpl
adc
sbb
das
cmpsb
dec
test
lods
mov
gs
sub
cmp
dec
sti
cmp
rcll
mov
stc
shr
xor
imul
test
lret
inc
pop
popf
daa
sub
push
insl
sbb
ja
push
sub
rcrl
mov
dec
lcall
test
cmp
scas
cmp
jae
mov
stos
dec
cmp
addr16
imul
incl
cmp
fs
lock
and
jmp
pushf
lret
mov
inc
shl
cmc
mov
xchg
xor
dec
shr
push
outsb
shrb
and
shlb
sahf
dec
aam
mov
pop
adc
ret
add
repz
mov
adc
push
xor
dec
imul
into
lahf
push
mov
jmp
rcrl
inc
xlat
cmp
pop
mov
jecxz
cwtl
cmp
lret
jge
aas
push
stos
push
cltd
sbb
sub
addb
loope
inc
jp
adc
shl
pop
mov
hlt
iret
or
push
shr
mov
icebp
sbb
in
sub
xor
mov
loop
xlat
lret
rorl
shlb
jo
mov
xor
xor
stos
mov
pop
roll
sbb
test
packsswb
testl
pop
ja
lods
pop
xlat
add
jne
jo
arpl
mov
jle
std
pop
rclb
movsb
mov
xor
xchg
cmpsl
jmp
test
popa
mov
and
adc
sbb
and
dec
dec
aaa
dec
lea
out
jbe
sub
inc
fisubs
je
std
lahf
jecxz
adc
mov
mov
mov
pop
jbe
hlt
push
mov
jae
jne
stos
or
push
pusha
pop
scas
inc
and
fiaddl
test
add
push
bound
das
or
xor
dec
sub
xchg
cmp
cmp
outsl
aad
xchg
enter
fidivrs
jbe
mov
aad
xchg
ret
or
and
lock
loope
imul
or
sub
std
adc
cltd
shlb
add
lahf
xchg
add
rorb
mov
jg
sub
cmp
sub
sbb
mov
adc
cmp
and
pop
inc
dec
xchg
jp
stos
insl
arpl
lock
sbb
daa
pop
fcoms
lds
fcompl
loop
gs
aaa
out
aaa
cmp
jae
push
int3
jne
int3
cltd
xchg
mov
enter
sbb
push
cmp
or
mov
jb
scas
or
rorl
fcmovb
and
mov
xlat
arpl
enter
push
pop
xchg
rclb
stos
xor
add
adc
sub
inc
dec
test
pop
jbe
mov
idivb
out
lret
mov
pop
adc
scas
push
dec
mov
testb
xchg
adc
sub
test
xlat
jg
or
push
xchg
sbb
sub
rcll
shlb
mov
mov
dec
ror
pop
and
shll
pushf
or
sub
xchg
dec
sti
mov
xor
push
mov
push
cmp
out
xorb
cmc
imul
ret
mov
adc
xchg
and
mov
lea
sti
inc
sub
mov
mov
enter
mov
xchg
bound
pusha
add
mov
xchg
pusha
shl
fwait
in
ja
in
or
add
movsl
push
clc
mov
mov
and
or
clc
clc
mov
pop
add
fmull
ljmp
inc
or
xchg
add
sub
push
dec
mov
mov
out
jle
imul
cmpsl
push
lds
add
negl
cmp
movsl
movsb
pop
xchg
sbb
sub
in
lar
push
je
cmp
pop
and
stc
jmp
pxor
aam
jp
mov
push
add
idiv
pop
inc
cs
cmp
jne
lret
push
add
push
xchg
pop
push
xor
add
rclb
das
cli
jecxz
std
shrl
inc
push
inc
xor
mov
stc
ljmp
adc
shll
add
fiadds
add
out
stc
add
xor
pushf
lods
lret
sbb
shr
addw
xchg
push
bound
negb
ss
pop
outsl
push
xchg
sub
test
sub
loop
push
dec
sbb
adc
test
repz
stos
stos
daa
lret
test
mov
dec
ret
mov
lds
incl
aad
pop
mov
push
je
sub
std
adc
scas
js
les
enter
mov
push
xchg
cmp
inc
or
inc
ss
call
mov
popl
lret
mov
cltd
push
jae
lea
cmpsl
fisubl
out
xlat
jb
cs
mov
xor
inc
ds
and
or
fisubs
enter
ror
cmp
in
mov
and
aaa
jp
loopne
scas
sub
dec
xchg
imul
paddsb
imul
mov
imul
shlb
inc
fcomps
les
push
mov
bound
mov
movsb
jmp
dec
decl
push
flds
in
xor
int
sub
jo
push
js
dec
fistpll
das
sbb
call
xchg
outsb
std
test
cmp
inc
xlat
lcall
pushf
sub
cltd
jno
cmp
lahf
jle,pt
cmpsl
jbe
or
ret
sbb
mov
and
je
ja
cmp
mov
cli
ret
hlt
jb
xor
pop
xor
mov
mov
addb
jns
aam
pop
push
pop
inc
fstps
inc
stc
dec
jne
orl
out
jo
add
mov
std
xlat
hlt
jb
repnz
ljmp
inc
jge
popf
dec
seto
inc
cmp
outsb
mov
inc
mov
inc
ret
out
jb
push
jbe
mov
or
push
xor
sub
ret
add
outsb
jbe
cmp
pop
xor
imul
out
lods
out
mov
or
add
sub
pop
pop
xchg
movsb
sbb
pop
add
mov
lea
and
and
cli
popa
or
jo
pop
notb
sub
jno
sub
arpl
adc
push
push
push
pop
xchg
xor
repnz
mov
rcll
add
push
test
or
stos
add
xor
sub
dec
bound
cmp
dec
pop
movsb
andb
cwtl
sub
outsb
cmpsb
mov
push
pop
in
and
xor
test
mov
cltd
rcrb
mov
mov
out
mov
sub
mov
cmp
pop
aaa
enter
in
test
mov
ss
mov
rclb
mov
or
sub
pop
dec
mov
sub
xor
addb
cli
lret
or
pop
xlat
loopne
call
insb
mov
sbb
lret
sbb
jno
inc
cld
cmp
mov
sbb
ret
cwtl
xchg
lcall
pop
adc
cmp
xchg
and
cmp
mov
stos
in
ja
pop
rclb
or
test
test
pop
lods
lcall
mov
lret
and
push
adc
push
pop
icebp
sub
test
mov
daa
xchg
sub
rclb
sbb
mov
push
push
out
jmp
jnp
xchg
push
sub
dec
push
add
fmulp
inc
xlat
in
pop
inc
insb
or
add
pop
movsl
shlb
lods
or
or
push
adc
cmc
push
mov
or
or
lods
pop
int3
je
pop
xor
and
ret
lcall
jno
out
cli
mov
cwtl
add
cmp
aas
mov
icebp
lock
insl
fimuls
mov
jb
sbb
shrl
add
das
fwait
std
push
pop
clc
cmpsl
xchg
lock
das
xor
jecxz
pop
shll
mov
jg
sub
adc
and
and
sti
js
pop
or
js
jo
sbb
aas
sbb
iret
cmp
mov
pushf
into
lret
sbb
mov
fidivrs
push
cwtl
push
adcl
sbb
jne
pop
test
push
sbb
push
adc
call
fucom
inc
mov
outsb
cld
rcrb
sti
push
pop
stc
outsb
dec
cmpsb
push
fistpl
dec
push
aad
rolb
jo
jnp
loop
stos
or
ja
or
and
adc
inc
cmp
jnp
adc
fwait
and
mov
add
jb
mov
mov
cli
xchg
rcr
sahf
add
scas
pop
mov
scas
xor
sub
aam
or
mov
fsts
cmc
leave
jo
xchg
jnp
or
inc
sub
inc
cwtl
mov
jl
filds
stos
mov
sti
insl
stc
scas
loope
xor
push
into
insb
xchg
push
in
or
cmp
nop
fidivrs
xor
push
ss
mov
or
jmp
cmp
mov
out
insb
imul
add
ret
fisubrs
pusha
dec
clc
rclb
pushf
outsl
clc
adc
add
test
int
adc
xor
push
xchg
pop
add
dec
neg
clc
mov
mov
or
jne
ja
popa
call
xchg
loopne
inc
adc
jp
shll
stc
gs
outsl
push
push
fldt
jno
push
and
mov
popf
bound
bound
cs
xor
sti
push
repz
inc
shrl
jns
inc
xor
xchg
int3
sbb
push
jg
cmp
pop
pop
fcmovb
sbb
cmp
xchg
dec
push
fdivl
insl
pop
xlat
cmpsb
lcall
cmp
aam
xchg
push
push
xchg
cmpsb
lret
and
ljmp
repnz
push
cs
sub
or
pop
add
adc
in
xor
imul
sahf
mov
xchg
sbb
adc
insb
add
ss
xor
int
test
pop
cmp
push
jno
iret
mov
mov
mov
in
pop
xchg
icebp
lret
and
push
aas
jnp
mov
arpl
rolb
leave
push
jb
mov
push
adc
push
adc
lcall
xor
and
pop
out
mov
adc
rcll
adc
jo
jno
sbb
popf
or
in
sub
enter
mov
and
xchg
mov
add
ret
out
jle
lock
dec
sub
push
lret
cltd
push
dec
into
pop
mov
pop
push
loop
stos
push
ds
pop
mov
dec
sbb
xlat
out
stc
or
push
mull
add
orb
sub
movsb
jae
lea
pop
xchg
jo
jae
loope
movsl
pushf
jmp
xchg
push
jno
orl
mov
call
push
lods
xor
insb
movsb
inc
mov
arpl
lcall
pop
adc
sahf
push
dec
inc
adc
xchg
ret
cltd
rorl
das
gs
and
adc
pop
repnz
in
cmpps
dec
mov
movsb
fsubl
lret
icebp
mov
das
sbb
fcompl
sbb
stos
mov
pop
das
out
jbe
nop
scas
mov
icebp
push
jle
push
mov
out
jbe
inc
std
movsl
mov
ret
pop
push
xor
dec
cmpsl
jp
add
add
cmpl
test
mov
jle
ss
fdivs
pop
lahf
xchg
test
push
mov
push
cmc
sub
xchg
pop
fcompl
bound
push
scas
sbb
inc
lret
sub
out
loopne
push
arpl
daa
lods
ljmp
in
jns
inc
pop
push
push
nop
mov
lcall
test
fdiv
sbb
xchg
xor
in
std
mov
push
sub
in
mov
jecxz
enter
faddl
add
adcb
mov
mov
idiv
cmp
dec
mov
cwtl
or
shlb
popa
in
int3
sbb
mov
cmc
gs
adc
push
pop
arpl
mov
into
cmp
lods
call
aam
ret
mov
or
inc
enter
rorb
inc
or
inc
aas
and
clc
push
and
mov
pop
in
scas
cmp
test
xchg
jl
imul
xor
inc
jbe
and
test
sbb
inc
shrb
push
ret
and
rolb
lahf
sub
inc
stc
and
fsubrl
es
push
push
mov
stos
mov
int
scas
or
leave
push
xchg
adc
xchg
std
ljmp
clc
insl
cmpsl
or
inc
jne
push
xor
xor
ljmp
addr16
je
shl
push
adc
pop
dec
pop
sub
rorl
pop
xor
rep
mov
pushf
ret
aad
mov
out
pmaxub
inc
movsb
ja
fcompl
leave
or
in
cmp
inc
mov
das
dec
fldenv
xchg
ds
inc
adc
cli
xchg
fdivl
push
imul
mov
sbb
insl
aam
mov
icebp
aad
psubq
mov
dec
movsl
cmpsl
aad
or
push
mov
divb
jmp
jl
mov
stos
inc
sbb
jg
xchg
ss
mov
dec
xchg
sbb
sub
frstor
jg,pn
push
add
stc
mov
dec
jnp
out
jmp
fwait
mov
orb
mov
and
imul
ss
add
popa
cmp
fmull
adc
add
fs
cmpb
in
lods
mov
bound
ss
lea
stos
add
add
fidivs
mov
ret
adc
mov
cmpb
xchg
mov
xor
test
mov
dec
call
inc
daa
addr16
pop
push
add
int3
sbb
push
jno
fwait
sub
pop
sub
and
pop
xorl
jp
sbb
andb
push
mov
addr16
movsl
fwait
aad
out
es
les
add
ljmp
repz
xor
pop
cmp
and
cmp
mov
js
ret
rcr
adc
pop
dec
mov
and
pop
mov
test
sbb
enter
jmp
push
cmpsb
fidivs
out
xor
push
inc
daa
mov
mov
jb
lcall
inc
mov
sub
hlt
cmp
mov
es
nop
fdivrl
imul
sbb
xchg
daa
cmp
mov
mov
scas
cmpsb
sbb
rclb
frstor
sub
sbb
xor
mov
out
inc
or
data16
insl
push
xor
lret
por
cmc
ret
cmp
ljmp
xor
and
ljmp
mov
pop
xchg
in
sbb
and
cmp
xor
adcb
fldcw
add
lea
inc
mov
mov
leave
or
js
es
xchg
cli
adc
popa
loope
jno
je
outsb
sub
jne
xor
or
cmp
xchg
bound
sub
or
in
jbe
std
in
mov
inc
push
or
or
and
xchg
enter
push
inc
add
push
call
jle
jns
inc
popf
xchg
mov
pop
sub
jl
in
cmp
sub
lods
sbb
mov
jbe
and
dec
inc
push
notb
push
dec
js
rsm
jmp
sbb
pop
aas
pop
popa
in
imul
fwait
pop
std
mov
and
mov
adc
jp
xor
out
fcompl
daa
or
push
xor
jmp
cwtl
sti
pushf
inc
dec
imul
inc
outsb
inc
scas
pop
hlt
addb
enter
aaa
repnz
inc
fwait
js
sub
sti
mov
jl
add
fwait
jno
lcall
fdivrs
out
cltd
xchg
cmp
inc
insb
lcall
arpl
fisubs
jp
inc
pop
loop
sub
test
mov
push
pusha
mov
push
pop
inc
fs
sbb
ja
gs
jno
outsl
xorl
pop
je
mov
adc
and
sub
lock
inc
adc
sbb
lock
push
or
xchg
pusha
sti
inc
mov
mov
out
cmpsl
xchg
sub
add
aaa
adc
mov
jmp
and
sbb
sbb
pop
imul
out
lock
pushf
sub
aas
or
pop
xor
sub
xor
mov
pop
sub
insl
jp
push
fwait
outsb
inc
add
xor
lcall
push
sbb
cltd
insb
js
pop
dec
inc
gs
jle
adc
popa
test
js
sbb
xchg
dec
stos
jne
fiadds
std
add
sarb
iret
add
add
das
adc
sti
dec
fs
pop
daa
sbbl
clc
aam
push
jp
add
fists
and
sbb
outsb
xchg
mov
or
cwtl
xchg
sbb
cmpsb
addb
sub
das
test
mov
push
loop
cmp
imul
test
xor
adc
iret
mov
imul
pop
mov
lods
fwait
xchg
repz
cltd
mov
test
fsubrs
lahf
cmpsb
ficomps
bound
xchg
shl
add
xchg
xor
pop
xor
lea
pop
movsl
mov
stos
insb
out
and
test
stos
mov
pop
push
sbb
jge
mov
push
stos
xchg
scas
es
mov
jne
adc
xchg
sbb
xor
sub
ja
or
sbb
outsb
lret
faddl
cltd
jnp
aas
scas
std
repnz
xor
mov
push
mov
cmp
rol
mov
cmp
out
cltd
mov
divl
push
leave
insl
pop
pusha
mov
inc
les
xchg
push
pop
lret
movsl
mov
add
or
enter
sbb
in
push
push
pop
daa
mov
cld
insl
imul
test
test
cmp
add
insb
aam
add
sub
imul
add
cli
cmc
jo
cld
aas
xor
inc
je
fcompl
cmp
mov
mov
into
outsl
pop
jg
shlb
int
movsl
fdivrp
lret
jns
daa
jb
js
outsb
adcb
lcall
pop
aaa
call
xchg
inc
dec
pop
imul
or
aam
mov
icebp
ja
fwait
dec
inc
pushf
jg
mov
pop
and
in
mov
mov
dec
rol
idiv
push
adc
push
dec
dec
sub
jmp
inc
add
mov
jp
mov
push
fs
insb
inc
xor
dec
jp
fwait
mov
dec
inc
cld
repz
push
adc
or
sub
js
xor
push
idivb
cmp
push
imul
mov
stos
cmpb
cli
std
test
inc
pushw
adc
push
xchg
arpl
lods
mov
mov
xchg
lret
cld
and
roll
das
aam
stc
sub
mov
cmp
clc
mov
xlat
pop
ljmp
cli
mov
inc
or
aas
ja
mov
adc
xor
push
sub
sub
movsb
sub
xlat
lret
movsb
sub
or
pop
in
mov
jp
outsb
lret
sub
mov
inc
jne
xchg
xchg
pusha
jbe
dec
cmpsb
sbb
xor
jbe
outsl
xchg
imul
jge
jne
in
mov
push
into
les
dec
mov
push
mull
popf
cmp
and
jge
leave
test
adc
pop
mov
sbb
lds
ror
dec
mov
mov
xlat
pop
leave
sub
push
popa
xlat
ret
and
push
push
push
sbb
jnp
cs
jl
stos
loope
imul
push
sbb
pop
or
out
pushl
push
test
or
fcmovb
xchg
add
and
sbb
pop
fldt
adc
lret
cmp
xor
cs
mov
cmp
movsb
fwait
add
fidivs
aad
ds
mov
test
dec
pop
mov
test
and
pop
mov
cmc
inc
adc
out
mov
jnp
lea
rolb
or
push
mov
push
jo
lock
das
and
mov
adc
cmc
sbb
vmread
leavew
xchg
ret
push
mov
std
pushf
adc
mov
aas
or
inc
jp
dec
js
ljmp
and
mov
sbb
push
pop
mov
mov
pop
push
xor
int
fnstcw
jl
fcoml
mov
pop
dec
adc
jle
sbb
fidivrl
cmp
xchg
inc
mov
cld
fsubl
ljmp
aas
int
fdivrl
push
and
dec
push
aas
add
repz
cmp
je
mov
add
dec
dec
mov
xchg
push
mov
inc
mov
xor
ficoms
push
pusha
mov
les
push
push
pop
jle
push
add
mov
adc
sub
aas
push
jo
jle
sbb
bound
stc
in
mov
sbb
push
cmp
leave
cwtl
mov
mov
jno
mov
popf
xor
mov
mov
lret
mov
in
mov
clc
dec
and
loopne
push
or
add
adc
mov
enter
fistps
jge
daa
data16
xchg
pushf
dec
hlt
mov
insl
jae
pop
add
sbb
push
loop
gs
xchg
ret
cmpsb
sti
rcl
repz
dec
or
imul
loope
setae
hlt
and
daa
inc
in
lret
insl
call
out
je
mov
cs
cwtl
pop
mov
cmp
inc
push
jno
fsubl
mov
popa
es
mov
repnz
outsb
int3
push
ret
jae
pop
data16
ret
or
arpl
pop
dec
imul
js
or
dec
shl
das
pop
inc
icebp
aam
fs
cmp
cmc
cmp
sub
inc
cmp
dec
or
out
loop
mov
xor
int
out
loopne
mov
test
bound
fimuls
sub
sbbl
ret
push
lret
add
push
pop
cmpsb
inc
jg
lret
adc
jmp
xchg
lods
jmp
pop
xchg
pop
sbb
jbe
push
das
cmp
mov
test
or
idivb
dec
jmp
repz
aas
stos
ficoms
lea
pop
mov
fistps
inc
repz
das
xlat
jp
or
sahf
push
nop
adc
pop
dec
jl
push
gs
test
adc
ret
lea
scas
fwait
inc
scas
imul
mov
fwait
pusha
sbb
push
clc
ss
sub
les
mov
xchg
lock
jno
xchg
out
adc
dec
decl
daa
push
pop
shrb
inc
inc
inc
scas
sbb
jb
push
and
bound
or
in
sub
cmpsl
sbb
jno
ret
into
pop
cmp
cld
mov
and
sahf
jecxz
mov
mov
movl
lahf
jmp
mov
sbb
dec
std
xchg
xor
incb
add
sbb
xor
mov
ds
ja
aad
xchg
shrl
rorl
jl
sub
and
push
adc
push
ret
cltd
mov
xor
push
pop
dec
sub
not
lret
cmp
aaa
fidivs
aas
and
sub
inc
jae
andl
inc
jo
push
adc
or
fnstcw
dec
dec
jbe
pop
gs
lret
mov
je
mov
jno
push
rcll
repz
xchg
inc
out
aad
andb
test
and
mov
or
push
xchg
scas
pushf
xchg
pushf
or
shll
ljmp
adc
stos
or
rcll
test
dec
or
xor
push
mov
mov
and
or
cmpsb
out
push
inc
rorl
mov
ja
test
lea
lods
mov
rcrl
jl
das
dec
jp
enter
or
xchg
dec
inc
dec
pop
cli
cmp
mov
mov
xchg
mov
cmpb
adc
mov
inc
repz
ret
cmp
aas
aad
shl
test
cmp
nop
mov
xchg
inc
pop
iret
hlt
icebp
jl
cmpsl
jb
jp
and
jns
lahf
cmp
dec
dec
cmpsl
jge
mov
push
push
dec
lods
push
imul
mov
and
stos
adc
enter
jp
lahf
pushf
loopne
add
pop
push
fstpt
mov
int
lret
out
cmpl
sti
xor
sub
push
je
out
in
sbb
out
loop
inc
inc
popf
js
cmpsb
fimull
xchg
repz
pop
cld
pop
cs
incb
jbe
mov
in
testl
xor
sub
mov
scas
out
aam
xchg
data16
in
inc
inc
aam
pop
icebp
je
fimull
mov
repnz
rorb
test
sub
sbb
sub
cmpsl
cmpl
lods
inc
nop
pusha
call
and
xchg
les
xchg
insl
sub
scas
dec
popa
inc
js
cli
movsb
out
sarb
gs
mov
lcall
adc
mov
add
sbb
xor
jae
jae
inc
jo
cmp
inc
adc
fdiv
push
adc
cmpsl
insl
sub
fbstp
rol
outsb
scas
inc
adc
stc
cmpb
sbb
xor
rolb
rclb
stc
loop
cmp
test
mov
aad
dec
cmp
adc
and
mov
or
stos
clc
cli
cmpsl
xchg
inc
pop
mov
enter
pop
or
imul
push
push
mov
pop
hlt
repz
cmpsb
es
add
inc
pop
insb
push
and
xchg
sahf
inc
jbe
enter
out
xor
dec
movsl
inc
push
pop
cld
adc
push
nop
sti
je
bound
adc
inc
nop
js
or
orb
gs
sbb
or
xchg
mov
fsubs
imul
ds
cmp
test
push
mov
mov
movsl
test
and
shr
push
or
testl
das
jmp
add
dec
cld
sbb
xchg
mov
cmpsb
cmp
sbb
stos
sub
inc
pop
jnp
xor
mov
xchg
lock
sub
xchg
or
stos
lahf
mov
sbb
call
jbe
hlt
mov
mov
or
sbb
mov
adcb
and
sbb
sbb
or
xor
das
mov
xor
jmp
fimuls
ss
sbb
ljmp
pop
mov
test
aas
mov
adc
xchg
push
in
cltd
mov
fistpl
loop
loopne
add
add
adc
push
les
pop
cmp
rolb
icebp
adc
jle
dec
sbbb
mov
adc
cmp
fisttpll
subb
fiaddl
call
add
fiadds
mov
adc
sti
inc
fidivrl
loope
scas
in
stc
xor
push
cmp
pop
repz
les
cmpsb
xlat
cmp
aas
mov
add
es
cmc
push
inc
test
xchg
aad
add
lret
pop
and
inc
repz
aas
or
mov
aam
stos
cs
imul
or
ret
dec
incl
mov
mov
insl
cld
shrl
dec
mov
jno
mov
aam
int3
stos
or
xchg
add
xchg
stc
xor
and
repz
sub
out
sti
gs
push
push
in
push
push
push
mov
shl
in
push
in
xor
sarl
jae
add
mull
pusha
pop
adc
jbe
fwait
int3
sbb
pop
mov
popf
loopne
adc
xor
stos
les
in
xor
out
or
lahf
xlat
outsl
jb
bnd
mov
in
fwait
repnz
mov
cmpl
cmpsl
imul
xchg
lret
nop
stos
jge
pusha
mov
jno
lods
test
sub
cmp
repnz
xchg
mov
sbb
popa
jno
bswap
pop
add
movsl
dec
adc
popf
xor
push
mov
jmp
sub
pop
ffree
pop
cli
xor
jecxz
sbb
cltd
lret
cld
insb
out
dec
mov
rol
sbb
inc
inc
xor
adc
mov
bound
aad
lret
jo
inc
aaa
sbb
in
jg
insb
data16
cli
push
inc
xchg
add
cltd
xor
pop
inc
dec
test
push
fsubs
das
mov
add
nop
mov
loope
jae
test
pop
ret
rclb
gs
cltd
pop
stos
xchg
adc
dec
shrb
mov
outsl
fldenv
loopne
mov
cld
aas
arpl
cmp
loop
imul
shl
pop
or
scas
push
repnz
adc
idivb
cmp
xchg
mov
out
mov
pop
fisubrs
aad
ret
test
in
in
cmpl
arpl
pop
mov
out
push
andl
inc
loopne
jae
add
inc
cmp
and
xor
push
dec
xadd
and
sub
xchg
inc
mov
mov
mov
mov
fs
pop
pop
sti
dec
les
and
xor
imulb
gs
into
in
idivl
cltd
lods
out
lcall
aam
mov
add
leave
cld
aas
xor
adc
jne
cmpsb
jnp
push
push
pusha
nop
fidivrl
cmpsb
fdivrs
cmp
test
push
mov
andb
inc
sbb
mov
dec
pop
push
fyl2xp1
lds
test
push
daa
mov
inc
or
jg
jecxz
push
mov
stc
data16
fiadds
cli
adc
lock
push
fmuls
cmpsb
out
mov
divb
ficoml
stc
and
mov
push
shll
setbe
rorl
pushf
cs
mov
push
in
jg
pop
rol
clc
into
mov
jmp
test
cld
mov
xchg
mov
pop
or
and
ret
pop
hlt
mov
lahf
mov
daa
pop
jbe
lret
mov
pusha
mov
hlt
add
fdivrp
addr16
jl
cmp
push
test
and
sub
out
ficompl
inc
add
mov
ljmp
add
pop
jbe
mov
or
adc
or
cwtl
sub
push
mov
inc
hlt
mov
jp
jle
loopne
inc
lds
dec
fidivrs
fadd
aad
cmpsb
pop
lock
js,pt
loope
push
xchg
mov
movsb
sub
insb
jp
out
das
fisubl
xor
lock
addr16
add
shll
sbb
js
pop
xchg
push
leave
inc
out
cmp
rcrl
stc
bound
xor
rcll
mov
mov
aas
bnd
or
fstpt
inc
lods
jge
mov
xor
pop
les
dec
xchg
inc
cmp
inc
cmpl
rorb
scas
outsb
xor
push
add
or
orb
sub
pop
cs
xchg
stc
sub
mov
iret
xchg
hlt
test
jle
push
inc
icebp
push
testb
pop
jb
dec
sub
stos
cmpsl
push
sub
loop
push
xor
lret
jo
int3
repnz
xchg
dec
imul
or
xchg
xchg
xchg
cltd
int3
fidivrl
fwait
test
lret
mov
mov
mov
clc
fistpl
sti
jg
std
or
es
adc
test
adc
scas
test
out
add
pop
mov
jmp
fcomi
pop
pop
pop
mov
popa
pop
popf
clc
ljmp
fsubs
cld
das
popa
roll
sub
movsb
scas
mov
pop
sbb
pop
cwtl
adc
pop
shl
outsl
xor
fistps
xor
stc
pop
mov
call
pop
inc
and
adc
xor
mov
sar
cmpsl
inc
loopne
scas
and
in
mov
inc
sub
ljmp
dec
arpl
or
mov
ja
or
mov
dec
xchg
sbb
idivb
orl
ret
sub
dec
mov
dec
xor
out
jecxz
and
scas
sub
jne
push
sbb
xor
aam
lret
mov
inc
xor
iret
pop
xor
push
dec
shrl
and
mov
out
push
and
cmp
push
scas
fisubrl
aaa
cwtl
movsl
repnz
loopne
sub
loope
out
mov
jbe
jg
xor
pop
cmc
and
push
sbb
push
push
pusha
mov
xor
push
cwtl
cmc
sbb
leave
cwtl
int3
mov
out
or
xchg
push
imul
dec
leave
inc
lock
stos
arpl
push
lock
jae
xlat
fwait
jge
push
jge
or
xchg
ret
lea
jb
dec
xor
bound
dec
pusha
ret
iret
sahf
cltd
dec
sahf
add
push
pop
movsb
xchg
sbb
in
repz
shlb
loope
mov
jmp
sub
jp
data16
cli
scas
shlb
rol
pop
xor
jno
xchg
dec
cmpb
ficomps
jae
fcmovbe
inc
out
je
jmp
fs
loop
rdpmc
aad
cld
push
jge
out
push
dec
cmp
cmp
ret
push
scas
test
aaa
aad
sbb
adc
stos
scas
fbld
cmp
dec
xchg
mov
mov
add
jae
mov
repz
sub
pop
cli
aas
enter
inc
lds
mov
lods
jo
repnz
pop
jge
mov
pop
lahf
inc
adc
test
inc
cltd
pop
sbb
insb
mov
pop
add
sbb
adc
insl
jl
xchg
mov
hlt
xchg
sbb
lea
mov
or
inc
xchg
cld
dec
mov
or
cmp
xchg
mov
pop
es
hlt
cmp
mov
sbb
fldcw
adc
ret
mov
cmp
mov
jno
daa
fadds
pop
cmp
test
xchg
flds
sub
jmp
jecxz
aam
jb
iret
in
lret
into
in
imul
je
std
xchg
lahf
cwtl
sub
int3
scas
jmp
shl
dec
ret
out
mov
rol
outsb
das
aad
pop
orl
mov
mov
aaa
mov
adc
add
enter
xchg
subb
hlt
jmp
arpl
sbb
les
mov
mov
aaa
sahf
jp
adc
stc
xchg
scas
jge
inc
pop
pop
sub
adc
pusha
inc
mov
movsl
ja
inc
xchg
pop
push
xlat
push
sub
sub
popf
lea
filds
push
sarl
push
sarl
cwtl
or
les
inc
scas
xchg
cmp
and
and
mov
xchg
cmc
sub
mulb
push
or
std
mov
mov
xchg
ret
mov
push
jp
ljmp
mov
inc
adc
enter
inc
cmp
sbb
fistpl
fdivs
imull
adc
in
jne
imulb
sbb
sub
mov
cmp
and
or
fsub
sbb
leave
inc
pop
aas
cmpsb
in
das
imul
xchg
dec
sbb
mov
jg
pop
inc
int
fsubs
sti
out
mov
or
das
in
dec
xlat
addr16
pop
fsubs
bound
lods
xchg
jae
es
sbb
mov
je
inc
stos
jo
sarb
mov
iret
or
mov
out
sbb
cli
movsb
shll
cmc
push
incb
into
mov
mov
idivb
daa
or
fcomps
fnstenv
jg
push
lahf
dec
push
jno
sub
push
repnz
test
popl
add
xor
rclb
dec
mov
sub
push
mov
stc
adc
out
daa
jge
inc
cmc
jp
jmp
push
stos
aas
push
xchg
lock
adc
ja
js
daa
in
daa
mov
loope
sahf
stos
add
mov
xorl
popa
xchg
scas
jge
cmp
jp
mov
jnp
xchg
loope
mov
repnz
enter
addl
insl
test
aad
inc
into
insb
test
lcall
ret
movsb
pop
hlt
gs
pusha
inc
push
cltd
hlt
int3
scas
mov
daa
call
outsb
out
lods
xor
pushf
mov
in
sbb
and
jns
mov
inc
mov
cmp
add
lret
fldt
inc
mov
cmpsl
xchg
dec
lret
shl
mov
sahf
lcall
or
inc
and
sub
test
in
xlat
sahf
jge
push
sub
and
add
xor
push
insl
xchg
mov
ret
jnp
mov
adc
lret
jg
push
fbld
push
scas
outsb
sub
cld
add
pop
pop
pop
enter
jbe
sub
jg
adc
xchg
in
sti
xchg
loope
out
imul
daa
xlat
mov
sbb
scas
or
lods
xchg
popa
inc
xchg
pushf
out
mov
or
shl
mov
fcoml
mov
ret
ss
data16
aaa
scas
sbb
xor
push
and
push
ljmp
in
dec
and
jle
mov
mov
mov
pop
jp
jno
jle
cmp
cs
and
xchg
mov
cmc
cwtl
push
cmc
pop
sbb
sbb
movsb
mov
add
lea
je
jo
pop
pop
push
test
mov
loopne
fsubrp
pop
cmp
in
sub
sbb
ror
loop
dec
fwait
adc
js
stos
mov
and
arpl
inc
insb
jne
lcall
lds
sbb
insl
popf
mov
push
popa
jl
push
mov
mul
cltd
xor
inc
pop
jnp
sub
das
or
loopne
call
pushf
jb
cmp
jno
lods
and
mov
xchg
push
pop
sbb
popl
push
movsb
inc
lret
jecxz
and
inc
dec
ds
cmpsl
add
adc
ffree
les
fisubrl
sub
aad
dec
xchg
push
sbbl
shll
jo
jae
and
jl
xor
test
out
sahf
xor
xor
xor
loopne
call
imulb
das
gs
add
pop
mov
sar
loope
mov
stc
jns
daa
adc
ret
mov
mov
mov
pop
scas
inc
add
popa
int
and
imul
xchg
fdivl
out
xchg
js
cmp
aam
jg
mov
jl
xchg
ja
movsb
add
out
jle
push
dec
lret
push
cmc
aam
mov
mov
dec
and
lea
fsubl
cmovb
cmpl
mov
adc
jl
mov
sub
jae
daa
add
pop
or
fdiv
lds
push
test
test
in
stc
ficomps
pop
and
jae
push
clc
or
xchg
nop
and
movsl
lret
outsb
inc
fistpl
movsl
jl
push
scas
in
fwait
cmc
sbbb
adc
pop
aaa
sbb
cli
jecxz
cmp
lea
hlt
sbb
stc
pop
mov
jmp
xchg
xor
addr16
pop
xor
lea
adc
add
jecxz
dec
push
pop
push
push
test
xor
daa
packsswb
lea
int
ret
xchg
insb
mov
icebp
mov
sbb
pushl
pop
push
add
and
fisubrs
jl
push
fstl
decl
mov
adc
push
hlt
cmp
sub
repnz
pop
repz
cltd
mov
jmp
adc
xchg
sub
mulb
jge
lds
stos
mov
mov
mov
dec
push
in
scas
negl
pushf
add
das
scas
ret
inc
push
ds
fstpl
inc
cli
add
add
mov
add
mov
out
jecxz
mov
cmpsb
xchg
out
stos
aam
leave
dec
lods
insb
popf
pop
cmovbe
popf
pusha
mov
stc
pop
lahf
es
stos
sbb
mul
ds
cli
push
ljmp
cmc
jle
cmp
test
or
sub
js
xor
inc
jle
add
enter
outsb
fs
and
je
test
pop
mov
pop
pusha
inc
mov
ret
push
outsl
jl
lods
mov
mov
out
clc
out
mov
jns
mov
push
stos
mov
xor
sbb
insb
cmpsb
jge
sbb
andl
fcoml
sub
mov
jmp
push
roll
gs
pop
jl
les
xchg
adc
mul
mov
or
adcl
mov
or
xchg
popf
test
xchg
rcll
bound
fistpll
cli
push
ficompl
push
dec
xor
nop
das
out
mov
sbb
scas
cld
sbb
xchg
data16
push
and
add
fmull
mov
mov
jl
mov
in
mov
push
sub
das
push
mov
ret
sub
cmp
add
mov
arpl
push
dec
sti
clc
lahf
mov
fstps
push
xchg
mov
insb
clc
mov
xor
pop
cmpsl
inc
dec
jl
in
xor
mov
push
adc
imul
test
stc
popa
add
push
int
decb
mov
lahf
scas
cmpb
push
iret
jecxz
je
xchg
cmp
mov
adc
mov
pop
or
out
frstor
sarl
lock
mov
jae
pushf
ret
mov
cmpsb
pop
push
inc
addr16
cmpsb
mov
mov
cmpsb
insl
dec
hlt
rolb
fisubs
aam
imul
push
loopne
sub
jl
push
outsl
cltd
mov
pop
add
std
xchg
cmc
mov
xlat
in
xchg
xchg
shl
sub
xlat
test
add
jnp
mov
fs
sbb
mov
and
lds
pop
es
in
cwtl
cmpsb
fisubs
fdivrl
inc
add
pop
fmul
cmpsb
sbb
out
inc
iret
jmp
sub
xchg
sbb
nop
rcl
popf
push
adc
fs
in
adc
int
js
out
xor
push
add
sub
pop
fcoml
sbb
xchg
data16
insb
push
dec
movsl
mov
jbe
fcmove
mov
ret
jnp
lock
xchg
fsubrl
inc
stos
push
and
jecxz
arpl
lea
jl
mov
add
je
push
cld
jp
enter
inc
lcall
add
in
push
xchg
fmull
push
out
jo
sbb
lock
sbb
sbb
rclb
push
sbb
mov
xor
jg
mov
push
jle
aam
es
shrl
add
adc
sti
lock
jl
outsl
dec
shr
mov
cmp
adc
jno
mov
dec
mov
push
jbe
inc
pushf
leave
mov
cmpl
add
pop
cmpsb
cmp
mov
test
or
gs
jb
fwait
sbb
in
xchg
cli
cltd
mov
jo
aad
add
cli
xchg
sbb
jb
in
ss
aam
into
rcll
pop
pop
and
add
or
dec
pop
scas
imul
repnz
mov
jl
int3
in
jne
lcall
sbb
test
repnz
and
lods
mov
add
aad
dec
xor
shr
sub
sub
mov
cmp
shlb
mov
icebp
imul
mov
ss
hlt
iret
ret
add
mov
and
aam
mov
insl
xchg
subb
xor
xor
cmp
sbb
loope
sub
xor
adc
sbb
sbb
test
mov
cmp
mov
cmovge
xor
add
xchg
les
cmp
pop
mov
cmpb
fwait
jmp
cld
in
fbstp
sbb
pop
push
jle
rorb
push
xchg
je
pop
call
test
mov
push
cmpsl
sbb
movsl
jg
fst
pop
sahf
aad
lods
pop
mov
das
pop
sbb
and
push
mov
and
pusha
jae
xor
repnz
dec
aam
add
pusha
test
cs
int
add
pop
mov
mov
loopne
xchg
xchg
mov
cmp
xor
mov
adc
pcmpeqw
adc
or
and
push
sbb
rorb
jmp
out
je
pushf
sub
ficomps
fistl
or
or
xchg
and
add
scas
addr16
mov
mov
pop
cmp
cmpsl
loop
lcall
sub
stc
mov
pop
cmpsb
jbe
stos
sub
or
push
and
adc
pop
jle
pop
lods
pop
sbb
stos
cmp
fisubl
and
movsl
xor
lret
lcall
pop
and
cmp
mov
nop
jle
and
add
mov
inc
dec
dec
xor
mov
std
scas
sub
xor
sbb
test
adc
cmp
xor
mov
xor
dec
fldt
cmp
or
dec
push
hlt
dec
sub
out
sahf
pop
bound
mov
add
pop
inc
rcrl
xor
push
loope
mulb
mov
in
jno
es
push
iret
pop
add
aaa
xor
mov
rclb
sub
pop
lods
push
push
repz
fadds
sbb
push
jg
sti
out
out
repnz
repz
sti
xchg
cmpsl
mov
xor
pop
addb
fcomps
xor
add
or
das
mov
adc
into
out
pop
xor
sbbb
or
or
test
push
xor
scas
addb
pop
mov
inc
inc
mov
mov
lcall
pop
lock
ret
pop
add
das
outsl
push
inc
adc
xchg
cmovbe
cmp
sbb
popa
pop
pand
fbstp
call
shll
ja
cmp
lahf
ret
push
lock
xor
outsb
fs
ficomps
adc
dec
jns
xchg
out
jae
dec
push
add
adc
xlat
dec
les
pop
lahf
mov
bound
mov
inc
and
mov
jg
sbb
call
mov
out
popf
inc
call
ret
jns
cltd
inc
mov
pop
ja
xor
mov
xlat
xchg
mov
mov
mov
sahf
stc
ffree
addr16
pushf
cmp
addps
jmp
mov
aam
mov
popf
mov
xor
sbbb
pop
repz
adc
cli
push
scas
cmc
jne
add
adc
fs
inc
popl
ds
stc
rclb
test
and
sbb
adc
inc
or
push
inc
into
sub
repnz
jbe
cltd
mov
adc
sub
adc
jne
jge
pop
mov
das
ficoms
xchg
sti
push
loopne
pop
lahf
aaa
or
sbb
shll
pop
sahf
or
shrb
fidivrl
sub
adc
jae
lret
cmp
jg
dec
lcall
xor
cld
aas
xchg
or
dec
inc
mov
pop
and
ret
loope
in
testl
pop
mov
xor
push
sbb
cmpsl
push
mov
mov
dec
mov
mov
pop
fidivs
push
push
mov
xchg
scas
repnz
sub
cmc
push
inc
lret
mov
loop
mov
mov
push
push
lea
cmp
fisubs
mov
dec
loope
les
aam
mov
fimull
pop
sbb
sbb
push
mov
xchg
mov
cld
int
js
push
jecxz
xor
mov
mov
and
outsl
andl
jl
pusha
adc
aad
dec
xor
lods
es
outsl
sub
fisubl
and
rclb
inc
call
popf
shr
addr16
sub
dec
stc
inc
mov
push
out
dec
outsb
push
push
aas
imul
push
popf
adc
cmpsl
pop
push
jbe
push
or
insl
and
mov
jecxz
lcall
les
out
es
scas
cmp
inc
sub
or
mov
add
pop
fidivs
lcall
iret
jle
push
or
sbb
test
push
inc
and
sahf
lds
pop
ret
xchg
sbb
loop
xchg
cmpsl
sahf
shlb
test
push
out
add
sub
pop
ljmp
aam
aas
andl
adcb
cmpsl
fucom
mov
pop
in
mov
mov
jg
mov
ret
cli
out
outsb
bsf
fucomi
sbb
pop
xchg
adc
xchg
mov
inc
cmp
sbb
sbb
adc
mov
xor
fsub
and
leave
push
cmp
iret
pop
push
jne
clc
sub
inc
mov
int3
adc
call
fistpl
add
xor
sub
xchg
pop
xchg
fdivrs
lock
sar
ret
insl
mov
mov
cmp
stc
scas
inc
or
adc
pushf
mov
sbb
mov
hlt
pop
push
pop
cmp
jl
sub
bound
mov
in
sub
dec
popl
roll
imul
mulb
mov
xchg
sahf
clc
out
xor
mov
jg
dec
pop
or
mov
je
ja
inc
adc
cmpsb
movsl
in
popa
mov
dec
jge
mull
scas
adcb
mov
pusha
imul
lret
ficompl
in
fistpll
cmpsb
pop
sub
xlat
xchg
lret
cmp
rolb
push
cmc
pusha
xor
mov
icebp
ljmp
cmp
loope
sahf
scas
mov
pop
addr16
gs
jmp
cmp
mov
idivl
mov
mov
shr
sbb
adc
sbbb
scas
pop
inc
adc
sub
leave
mov
xor
sub
pop
xchg
push
or
out
xlat
adc
sub
loope
into
test
fcmovu
mov
lea
or
inc
fnsave
adc
orb
out
cld
jnp
jno
jge
lahf
or
movsb
sbb
into
inc
movsb
push
push
fdivl
adc
inc
mov
fstl
push
mov
out
sub
pop
lahf
sub
pop
push
pop
jge
rcll
mov
loop
stc
xchg
mov
rclb
push
xlat
movsl
xchg
lcall
out
dec
lret
int3
fwait
pop
repz
sub
mov
mov
hlt
addr16
mov
sub
dec
movsl
and
sbb
add
mov
outsl
push
jne
inc
xchg
inc
popa
mov
dec
adc
push
mul
mov
push
stos
and
cmp
xor
fnstenv
pop
jmp
xchg
pop
mov
jo
sbb
test
cmpsl
xor
push
xchg
loopne
jg
cli
jno
cltd
xchg
inc
mov
pop
loope
mov
or
jg
ja
outsb
pop
jo
cmp
test
or
pop
mov
push
repnz
add
push
adcb
xor
adc
fdivr
in
addb
stc
dec
sub
sub
fisttpll
fwait
int3
sub
push
in
test
mov
sub
inc
pop
repz
fdivrs
popa
idivb
sub
les
or
jae
add
icebp
inc
les
cmp
jb
fimuls
aaa
sub
jae
hlt
pushf
popa
jecxz
inc
fdivr
mov
int3
icebp
gs
sbb
push
fnstcw
push
pop
cltd
push
stos
mov
pop
inc
sbb
add
xor
cmpb
add
loope
jns
xorb
add
rcr
add
ret
push
add
inc
inc
or
dec
xchg
pop
sub
sbb
imulb
push
outsl
pop
sub
orl
adc
push
fidivrs
cmp
test
roll
ljmp
cmp
adc
ficomps
inc
stc
movsl
and
inc
sub
pop
scas
add
flds
int3
cmpsl
jle
inc
shr
or
sti
cmp
add
cmp
or
mov
sbb
dec
daa
jg
add
in
fisubrs
lret
add
ret
fmulp
pop
push
fildll
cwtl
push
xchg
rolb
push
cmc
xchg
mov
sahf
gs
jg
int
loope
aam
js
icebp
mov
out
nop
and
inc
jl
jne
mov
sub
cmp
repnz
insb
scas
xor
sbb
leave
outsl
ds
pusha
xor
pop
inc
fwait
lods
cmp
mov
stos
sub
pop
adc
add
fimuls
jg
xchg
and
and
leave
sbb
cli
adc
add
add
mov
fsubp
mov
mov
dec
incb
aas
add
sbb
inc
int3
int
xchg
and
iret
inc
mov
inc
pop
add
and
sub
lods
aaa
mov
sbbl
shlb
inc
nop
test
ljmp
ljmp
jl
call
jg
out
inc
inc
push
test
and
ja
adc
ds
dec
lock
aas
xchg
sti
cmpsb
hlt
cmpsb
jns
cmp
jecxz
and
jge
and
les
mov
mov
dec
jp
fs
jle
sarl
popf
dec
sbb
sub
cmpsb
out
enterw
aam
fsts
ljmp
jecxz
mov
icebp
jg
xchg
ret
das
pop
mov
cmp
mov
mov
mov
xchg
add
shll
dec
out
fstps
add
addr16
mov
xchg
lahf
mov
mov
dec
rcrl
rorl
into
ret
pop
scas
pop
lret
dec
sub
mov
sub
popa
xchg
aad
fnsave
sub
ret
movsl
sti
pop
aas
add
outsl
lcall
jmpw
mov
hlt
jne
jb
cwtl
jmp
arpl
pop
push
movsb
dec
test
ja
add
sbb
dec
dec
std
cmp
jb
in
xchg
push
jge
xchg
addr16
and
add
in
jmp
lds
aas
xor
sbb
loop
lock
daa
rcll
or
mov
jg
push
arpl
or
ret
xor
pop
fildll
out
arpl
inc
repnz
mov
nop
sub
pop
and
jbe
insb
lahf
push
cmc
sbb
push
fdivrs
inc
lcall
or
loop
sbbb
add
lods
into
lods
push
jnp
inc
pop
in
sub
lea
test
imull
sub
mov
inc
xchg
inc
idivb
in
loopne
or
sbb
inc
scas
inc
std
inc
inc
loop
xlat
shlb
jecxz
ljmp
std
in
xchg
ljmp
mov
ljmp
add
push
pop
fiadds
inc
addr16
in
jge
push
push
out
rcrb
and
and
inc
pop
lods
in
mov
pop
gs
cmpsb
lods
inc
jecxz
push
dec
js
sbb
jl
add
mov
or
add
je
ljmp
push
dec
hlt
xor
es
inc
fwait
add
lds
dec
cmp
arpl
fbld
or
popf
ret
rorb
sub
bound
out
mov
adc
or
mov
and
add
add
dec
mov
addr16
lret
xchg
push
shl
popfw
in
xchg
cmpsl
es
add
stc
data16
mov
insl
repnz
fcomps
xlat
xchg
add
push
ds
aaa
movsl
xchg
xchg
jnp
pop
insb
cmp
xor
arpl
ficomps
fsts
jle
cmp
pop
jl
mov
or
ror
lock
clc
mov
es
fimull
aas
in
lods
test
andb
sbb
push
push
and
add
popa
decb
pop
jmp
js
icebp
dec
sub
push
xlat
pop
adc
mov
pusha
cltd
and
sub
dec
push
mov
adc
fwait
or
xlat
and
movsb
and
rcll
popa
data16
out
or
sbb
xchg
aam
inc
sbb
pusha
adc
cmpsb
jnp
ja
mov
mov
jp
pop
jbe
je
mov
loop
sub
push
test
lahf
sbb
js
or
cmpsb
dec
xchg
sbb
sahf
movsb
adc
and
jbe
cmpb
and
jb
imul
lds
dec
mov
adc
and
lods
push
mov
fdivrl
fstl
lcall
cmp
mov
xor
and
push
aaa
in
stos
cmpsb
out
lock
mov
cmpsl
out
jb
in
push
out
sub
jns
jg
adc
xor
int
jmp
xchg
lea
imul
sub
in
push
movsl
xchg
dec
sarl
cmpsb
movsb
sub
sub
movsl
clc
rorl
mov
fwait
cmp
in
negl
outsl
in
push
mov
lret
adc
out
pop
jbe
loopne
outsl
aad
mov
cli
push
inc
jno
fcoms
in
out
jns
jbe
inc
lcall
sbb
insb
jnp
pop
insl
jle
and
cmp
jnp
cmp
cmp
popf
popa
clc
jecxz
clc
loope
lds
cmpsl
xor
addb
jae,pn
xchg
loopne
jbe
xchg
dec
xchg
inc
test
xchg
orb
xchg
test
negl
adc
stc
or
inc
out
inc
pop
div
jge
mov
in
push
insb
push
sub
mov
sub
in
pop
pushf
adc
inc
cmc
xlat
rclb
push
sub
out
or
lahf
sti
xchg
mov
jns
jno
or
or
adcl
movsb
lcall
inc
mov
popf
aas
out
add
addr16
add
out
mov
mov
jle
mov
dec
stc
out
add
xchg
mov
xchg
adc
pop
jecxz
mov
scas
xor
or
in
push
and
inc
pop
xor
ljmp
cmc
dec
cmpsl
aam
push
mov
pop
int3
sub
popf
push
ret
int3
icebp
push
rorl
mov
orl
jno
pop
mov
into
add
pushf
sahf
sub
test
nop
faddl
lahf
aad
fs
push
es
pop
call
movsl
jle
and
pop
lods
or
mov
push
orb
dec
out
jl
orl
pop
push
pop
bound
jle
jg
jb
adc
push
enter
repz
or
push
pop
inc
fcmovu
out
into
jns
test
mov
dec
adc
aam
lret
pop
mov
lret
inc
cmp
pop
enter
adc
push
fisttpll
mov
sar
sbb
jmp
add
lods
adc
xor
call
cmp
pop
cmpsl
dec
inc
inc
rcr
jp
adc
leave
hlt
push
fcoms
xchg
cltd
mov
inc
cmp
dec
js
add
jno
push
push
insb
pop
sbb
mov
xor
sbb
fimull
fbld
xchg
out
in
jmp
or
lock
mov
ret
stos
roll
sub
mov
cmpsb
arpl
pop
mov
xor
mov
arpl
push
mov
sub
mov
ror
jle
inc
mov
filds
xorl
leave
push
mov
in
mov
fld
aaa
fst
notl
xchg
ret
and
in
mov
out
push
cmp
sbb
les
jo
stc
test
hlt
lods
es
call
cmp
ret
js
aad
cmp
stos
lea
mov
or
or
mov
lret
and
xor
pop
jecxz
fs
iret
xorb
inc
xor
inc
add
dec
push
repz
inc
jge
xchg
mov
popf
stc
pop
incb
scas
jo
pop
and
jae
add
cld
jge
int3
shrl
imul
xchg
push
orl
cmc
dec
adc
xchg
push
or
lret
mov
and
mov
das
mov
pop
cmpsb
lret
xchg
push
mov
mov
sbbb
std
add
sub
xor
pop
loope
mov
cs
loope
ljmp
lods
push
lret
inc
jecxz
cmp
es
movsl
xchg
test
loopne
mov
stos
lcall
dec
mov
jb
cli
sbb
cmc
stos
push
mov
dec
mov
out
pop
jno
xchg
aam
daa
pop
ss
loope
push
xchg
and
ja
lds
std
sbb
lea
in
out
jecxz
mov
jno
xchg
enter
out
mov
jecxz
jae
add
aas
jecxz
lods
loop
aad
inc
je
jp
xchg
fisubrs
addl
or
fcoms
jp
sub
mov
leave
dec
das
or
mov
jo
scas
call
cmpsb
sbb
jo
rcr
jb
push
jb
pop
jmp
mov
icebp
iret
add
sub
jb
inc
pop
daa
xchg
xor
in
mov
adc
adc
xchg
inc
ljmp
xchg
fiaddl
lods
mov
arpl
mov
pop
ja
mov
xor
test
lea
adc
sub
sbb
inc
loope
stos
fmul
add
xchg
push
push
mov
mov
pop
cwtl
or
aam
jnp
or
push
je
jae
aas
xchg
arpl
mov
jecxz
rclb
mov
dec
mov
pop
dec
adc
mov
mov
pop
aam
xchg
inc
out
lcall
mov
mov
ficompl
test
or
sub
xchg
adcl
lcall
push
push
cmp
pop
mov
xlat
mov
rol
cmp
add
sbbl
xor
lahf
pop
jp
popa
cmp
cmp
jnp
mov
imul
testl
push
pusha
and
push
daa
sub
fidivrl
scas
in
xchg
sub
xchg
mov
addr16
fidivl
push
int3
rcl
adc
mov
fidivrl
mov
xor
sahf
lret
add
outsl
imul
cmpsb
inc
stos
arpl
push
pushf
mov
and
mov
xchg
cmp
mov
push
addl
les
add
dec
pop
testb
les
jle
mov
dec
call
xchg
loope
and
adc
add
mov
mov
cmp
and
pushf
or
sbb
loopne
dec
scas
or
xchg
daa
sbb
insl
jb
outsb
fs
push
pop
shlb
sahf
stos
and
xchg
sbb
test
in
mov
lea
sbb
jae
dec
cmp
ss
dec
or
xlat
movsl
je
sbb
sbb
clc
sub
aad
mov
addr16
jb
aas
xchg
data16
inc
std
sbb
mov
hlt
lock
sbb
sub
xchg
xchg
sub
dec
inc
mov
repz
ds
js
loop
stos
loop
push
xor
fwait
shl
std
add
call
rcrl
push
mov
mov
cmpsl
xor
pop
and
push
and
inc
std
xchg
mov
inc
aaa
lcall
dec
xchg
and
xchg
sbb
mov
push
loope
cmpsb
sbb
loope
mov
and
mov
lock
mov
movsl
pushl
pop
mov
stos
push
ljmp
icebp
bound
and
test
arpl
xchg
in
pusha
mov
jle
dec
inc
int3
inc
sti
pop
and
and
add
ret
repnz
subl
mov
rorb
xor
icebp
dec
mov
lahf
mov
movsb
inc
cmp
xchg
mov
xor
inc
inc
adc
insl
enter
mov
mov
or
pop
add
pop
cwtl
cwtl
leave
pop
dec
push
popa
call
sbb
xchg
dec
add
sbb
js
and
add
sub
xor
cmc
enter
cmp
les
divl
out
ljmp
or
push
sub
rcll
add
mov
fxch
in
push
clc
jnp
push
jno
xchg
jns
aam
stos
xchg
int3
push
push
cmc
mov
out
jbe
jecxz
fbld
test
fsts
fcmovnbe
push
cmp
sbb
mov
cmp
sub
rorl
sub
pop
xchg
sub
mulb
and
mov
pusha
lods
cwtl
mov
clc
jno
test
mov
lods
dec
xchg
sbb
and
inc
lahf
roll
loop
jle
push
clc
mov
rolb
rcrl
jae
dec
pop
fnsave
test
outsl
loopne
push
repnz
scas
push
jnp
shlb
and
mov
and
dec
mov
jno
cmp
and
push
rcl
pop
call
dec
insl
sub
cli
movsb
sub
push
std
push
push
scas
inc
mov
mov
cmp
mov
mov
js
clc
mov
das
jecxz
insb
mov
out
jecxz
cmpsb
lds
mov
dec
scas
mov
int
mov
leave
ret
jb
jnp
adc
jns
dec
and
xor
cmpl
jae
rol
mov
xor
mov
push
pop
sbb
sbb
ret
mov
fcoml
icebp
loope
scas
push
in
or
dec
mov
cmp
jno
and
out
cmp
push
cs
adc
xchg
daa
push
dec
adc
sahf
test
mov
inc
xlat
jno
pop
sbb
jl
inc
das
xchg
sbb
out
cld
data16
in
pop
xchg
xchg
mov
rolb
inc
jp
cmp
sbbb
hlt
clc
es
iret
fsubl
or
adc
cwtl
hlt
mov
and
xor
subb
dec
sbb
add
mov
int
daa
sbb
mov
int
insl
and
mov
cmp
ljmp
cmp
xchg
adc
std
out
popf
pop
subb
mov
mov
nop
fs
lcall
mov
inc
push
repnz
cli
adc
add
fs
lods
inc
int3
add
stos
test
int
fcoml
sbb
loopne
ret
pusha
sbb
sarb
ret
xorb
stos
xlat
jmp
aam
int3
pop
mov
repnz
push
inc
addb
mov
push
addr16
jnp
and
pop
daa
pop
add
mov
lcall
test
loop
xchg
or
mov
add
jle
lea
aam
sub
aaa
rcr
push
xchg
push
lcall
jae
cmp
mov
cmpsl
repz
in
mov
add
fwait
push
pop
mov
iret
shrb
push
aad
mov
in
insb
xchg
push
mov
lret
mov
sub
jb
test
xor
mov
inc
into
test
fwait
ljmp
call
les
push
movsl
cli
xchg
push
mov
push
jl
mov
fidivs
mov
sbb
inc
sbb
fisubl
stos
shrb
xchg
cmp
in
mov
pusha
aad
inc
lcall
dec
mov
pop
test
add
loopne,pn
leave
dec
jle
jbe
shr
stc
xor
mov
fsubrp
mov
lds
ds
and
mov
mov
sub
cwtl
mov
lret
ret
js
mov
test
mov
test
fiaddl
enter
pop
or
adc
mov
test
xchg
jecxz
mov
aaa
rcl
scas
xchg
ret
xchg
subb
sbb
lods
pop
imul
sub
inc
cmpsb
push
ja
mov
or
js
pop
sbb
xchg
loop
mov
xor
inc
mov
je
test
mov
pop
mov
lcall
addl
stos
pop
lods
pop
jmp
sub
ss
aad
clc
js
mov
xchg
xchg
out
jp
in
xor
inc
mov
sbb
xchg
in
test
mov
in
xor
and
cmp
cmp
push
dec
pushf
push
mov
adc
and
or
xor
add
cli
xor
add
cmp
rorb
and
add
das
nop
cli
xor
inc
test
fistpll
mov
in
inc
scas
fwait
xor
loop
push
cmc
push
jne
je
inc
mov
sub
jnp
inc
inc
ljmp
dec
push
cmp
or
or
ja
movsb
mov
jg
test
cmp
mov
mov
mov
cmp
lock
mov
adc
cwtd
stos
in
hlt
jae
hlt
cmc
adc
cmp
sti
fwait
push
fidivrl
cmpsl
add
mov
addr16
out
int
xchg
movsb
rol
sbb
sbb
enter
stc
cmp
rcr
jnp
push
lret
mov
or
add
cltd
cmp
vshufps
bound
scas
bnd
dec
mov
test
sti
mov
ja
pop
dec
or
dec
jle
pop
jl
addr16
pop
int
jmp
or
pmovmskb
push
subl
hlt
adc
lods
mov
movsb
add
cmp
data16
cmc
mov
clc
pop
sub
mov
nop
inc
dec
repnz
lahf
fidivrl
inc
cmp
push
push
pop
xchg
scas
xchg
inc
dec
xor
cwtl
icebp
mov
pop
mov
cmpsb
dec
pushl
rol
and
mov
pop
repnz
mov
inc
out
jne
push
adc
dec
popf
scas
xchg
in
pop
hlt
mov
pusha
test
jmp
sub
jg
mov
xchg
lret
or
cmc
fisttps
push
cmp
mov
incl
sbb
das
push
push
divl
cmp
in
pop
mov
inc
nop
fldt
jp
iret
ds
in
sub
add
data16
add
inc
loop
shl
mov
gs
jae
lea
cli
sbb
fwait
out
movsb
test
daa
das
in
pop
dec
jl
sahf
scas
mov
scas
xlat
jae
mov
popf
jnp
sbb
out
lret
enter
lret
lcall
shrb
ljmp
push
push
out
std
dec
inc
sub
and
mov
repz
pop
adc
sub
inc
inc
dec
dec
in
sahf
in
orl
jnp
sub
mov
cmc
cltd
xchg
dec
mov
scas
mov
shll
jno
addr16
stc
fnstsw
cmp
dec
add
mov
jp
mov
jl
movsb
mov
call
loop
adc
push
sub
data16
mov
jmp
dec
inc
shrb
in
lods
shrl
sysret
cmp
repz
iret
dec
lcall
stc
sbb
cmp
loope
cmp
pop
mov
and
enter
sbb
aaa
into
push
mov
sub
adc
dec
cmpsb
push
les
js
and
call
ret
pop
imul
add
insb
pop
imul
cmp
sbb
scas
pop
cltd
add
stos
lea
mov
xchg
xor
lcall
sbb
jmp
pusha
out
push
push
popf
fldenv
xor
lret
faddl
in
xor
or
adc
sbb
jp
popa
in
test
lods
test
adc
jmp
lea
gs
add
mov
rclb
jo
or
ljmp
int3
xchg
jae
inc
shll
pop
lahf
outsb
jmp
popa
sub
mov
and
add
lret
rcrl
sub
scas
lret
sub
mov
stc
stc
pop
jmp
xchg
push
mov
ret
jle
add
mov
jmp
cmp
push
sbb
sub
add
hlt
cmp
or
mov
push
mov
sub
xor
subl
mov
popl
xchg
leave
lret
and
mov
sti
insb
jg
mov
dec
out
push
sar
insl
lock
std
jne
cs
fsubrl
mov
call
and
lcall
fcomp
imul
or
dec
movsb
mov
jne
xchg
xor
sar
jnp
call
cs
into
rcl
cmp
xchg
fsubl
sub
sti
sahf
test
shlb
test
add
stc
pop
jae
movsl
enter
lret
ret
sub
dec
xor
push
loope
inc
xchg
js
pop
sbb
data16
pop
pop
mov
and
cmc
xchg
out
cmpsl
fdivs
cwtl
test
stos
and
mov
cltd
push
inc
push
fdivrs
jo
mov
js
hlt
dec
fdivs
in
inc
jl
aaa
stos
fimuls
or
lcall
and
aaa
sbb
gs
jecxz
cmp
in
jmp
sub
sbb
cmpsb
adc
xchg
pop
negb
dec
and
stc
lods
push
cwtd
mov
or
pop
jp
jecxz
mov
jecxz
dec
adc
out
leave
ficoms
sahf
push
jbe
mov
sub
inc
adc
inc
test
jle
inc
jbe
test
aad
push
popl
in
add
imul
enter
ffreep
hlt
xchg
jae
hlt
dec
movsl
xor
movsb
into
push
dec
jns
andl
pop
push
xchg
push
xor
daa
sub
xorb
scas
jp
cmp
mov
fucompp
clc
scas
popa
call
xor
out
or
jmp
cwtl
xlat
xchg
mov
lahf
adc
push
and
fnsave
ret
push
out
sbb
leave
outsb
and
das
jo
insb
out
pop
pop
xchg
sahf
iret
inc
adc
jecxz
sahf
rol
xchg
aaa
scas
and
mov
rcrl
popf
movsl
xchg
jbe
or
lret
mov
xlat
ret
mov
neg
add
push
loopne
ja
sbb
daa
push
dec
add
xlat
mov
mov
push
pop
addr16
push
mov
dec
adc
cmp
jo
out
cmp
dec
xchg
xchg
gs
test
sbb
scas
mov
cmp
sbb
sbb
xchg
cld
lock
fdivrl
fwait
or
nop
fwait
into
imull
cltd
notl
mov
pushf
xor
lods
hlt
mov
outsb
dec
pop
fcomi
imul
or
push
mov
and
cli
ljmp
cmp
inc
jp
dec
jmp
pop
pop
insl
ficompl
pop
movb
inc
jmp
jmp
dec
outsb
xchg
mov
shlb
insl
stc
pop
cs
xor
ljmp
enter
add
insl
and
out
push
adc
push
add
loope
mov
mov
int
mov
mov
add
push
repnz
aad
idivl
xchg
dec
sub
js
sbb
mov
les
aad
add
pop
daa
pop
cli
mov
call
pop
xchg
popa
ret
xor
mov
xor
shl
jmp
call
jl
dec
fcmovu
and
imul
dec
push
xchg
add
cmp
and
jecxz
push
xor
ja
std
leave
sbb
stos
adc
jno
jg
pop
icebp
sub
aas
pop
pop
push
mov
push
inc
or
lea
push
lcall
xor
mov
call
xor
sub
movsb
fidivs
mov
cmp
arpl
xchg
repz
scas
inc
push
nop
in
sbb
dec
leave
popf
dec
dec
xchg
mov
movsl
xor
mov
mov
jb
adc
xor
xchg
jmp
fs
pop
push
das
adc
push
mov
dec
inc
inc
out
insl
fidivl
scas
cs
mov
insb
pop
jmp
cmp
dec
adc
sbb
daa
test
xchg
jnp
xchg
aad
jg
lret
mov
push
loopne
inc
jbe
inc
and
cmp
into
pop
and
jle
or
fldl
mov
push
sbb
dec
jmp
mov
mov
out
mov
loop
mov
xchg
shlb
icebp
enter
push
fs
xchg
scas
sub
adc
cs
cwtl
std
push
add
push
mov
lods
push
mov
jg
ret
aas
push
mov
mov
fisttpl
mov
and
lret
repz
aaa
inc
push
movsl
addr16
into
rorl
xor
addr16
ds
dec
jns
shr
xor
aas
lahf
inc
addr16
mov
aaa
jge
xchg
mov
test
inc
popa
or
cmc
lds
pop
movl
daa
pusha
dec
pusha
ss
jmp
push
lahf
pop
movsb
stos
dec
out
scas
fiadds
icebp
cld
lret
add
bound
cs
daa
ds
stos
ljmp
lock
popf
lret
lods
hlt
into
dec
adc
dec
sarl
mov
mov
inc
cmp
push
and
xchg
loopne
out
adc
inc
inc
xor
pop
push
xchg
push
mov
sbb
mov
rcrl
into
out
pop
xchg
push
or
dec
or
mov
hlt
dec
or
pop
incl
fisubs
mov
or
xchg
sbb
sub
repz
mov
jmp
and
dec
pop
lcall
mov
push
fistps
daa
push
cmp
test
add
dec
repnz
mov
aad
stos
rclb
mov
jg
xor
test
test
jl
mov
inc
adc
xor
ret
mov
push
lret
mov
pop
mov
cmp
pop
sti
push
lret
and
addr16
mov
dec
mov
aad
inc
jge
outsl
hlt
imul
jns
pop
dec
adc
pop
std
hlt
popf
lods
dec
lcall
push
mov
adc
or
mov
cmp
insl
pop
decl
dec
repnz
data16
or
xchg
xchg
xchg
movsb
add
lock
add
cs
arpl
icebp
push
cmpsb
jae
and
leave
cwtl
imulb
ss
lret
in
dec
fsts
test
push
lock
js
or
sbb
outsb
bound
idivl
loop
in
xchg
out
mov
cmpsl
inc
das
push
sub
xor
loop
jns
mov
or
mov
imul
cmc
int
push
and
inc
mov
mov
push
push
mov
mov
stc
cmp
cltd
rcll
push
inc
nop
push
xor
shl
mov
xorl
dec
iret
movsl
fistl
scas
jae
mov
push
arpl
inc
fwait
xchg
pusha
pop
out
mov
pop
sbb
imul
out
pushl
pop
mov
in
sbb
add
orb
mov
cmp
and
jo
adc
add
pop
rorb
mov
ficomps
lods
mov
out
xor
adc
mov
ret
imul
das
icebp
xchg
or
add
lahf
xor
daa
fwait
mov
sbb
int3
push
push
lahf
adc
enter
out
sbb
sbb
mov
sub
int3
iret
xor
mov
lods
mov
mov
into
lret
sbb
fidivl
mov
lock
adc
jne
fisttpll
insl
xchg
aaa
out
icebp
lret
sbb
xchg
jae
add
push
sbb
xchg
jp
sbb
std
mov
movb
and
dec
out
rclb
out
rcl
imul
jp
adc
adc
stos
or
hlt
loopne
lock
or
xlat
push
neg
mov
xorl
mov
icebp
and
mov
pop
sbb
cmp
rclb
sub
test
adc
js
rcll
dec
std
dec
pop
in
dec
sarl
dec
arpl
mov
jle
or
push
divb
jb
in
adc
xchg
call
fidivl
ror
popf
aad
and
aaa
stc
or
ret
and
les
jecxz
pop
test
jne
mov
or
add
ss
or
fidivl
cmpsb
mov
sbb
das
mov
test
cmp
and
sub
movsb
inc
cmpl
outsl
test
dec
cs
sbb
arpl
add
nop
and
jbe
inc
nop
inc
inc
sbb
push
xor
movb
shlb
push
xor
jne
lods
mov
rcrb
ss
mov
or
aam
ret
sub
enter
orl
std
dec
scas
push
inc
xor
xchg
test
pop
stc
les
xchg
imul
xlat
or
clc
and
and
mov
inc
mov
jge
fidivrs
pusha
mov
pusha
nop
sub
stc
xlat
push
push
push
aaa
test
and
ja
aas
sbb
cld
lock
bt
jecxz
pop
push
add
xchg
or
jo
xor
push
pop
dec
aaa
and
and
aaa
ficompl
out
scas
insl
mov
lea
push
mov
push
imul
push
lock
faddl
mov
sub
aam
or
imul
adc
addr16
cmpl
dec
fsubrs
lcall
leave
push
aam
sbb
or
mov
cwtl
aam
lods
dec
fcmovb
adcb
lds
inc
fwait
add
mov
jecxz
lds
push
negb
out
or
mov
leavew
lret
outsb
loopne
lds
push
or
inc
cmpsl
push
gs
cmpsb
or
sbb
mov
xchg
hlt
int3
lock
mov
js
rorl
lcall
pop
loop
pop
xor
push
in
xchg
lock
pop
lock
lcall
cmp
push
add
int
push
test
xchg
fiadds
in
bnd
lahf
jo
push
inc
rcll
inc
ja
aaa
imul
push
or
shrb
pop
aaa
pushl
sbb
pop
cwtl
jle
je
insl
push
mov
imul
cwtl
push
sbb
sbb
imul
adc
mov
or
mov
dec
pop
idivb
in
jae
or
mov
dec
mov
mov
xor
fwait
inc
adc
inc
or
and
pop
xor
xchg
xor
mov
sbb
and
cmpsl
shrl
lret
aaa
ds
and
cli
arpl
pop
mov
pop
or
data16
xchg
clc
aam
in
ss
mov
aas
mov
inc
xor
sbb
sbb
mov
add
and
hlt
pop
movl
push
insl
movsb
xchg
fs
testl
mov
lods
test
pushf
pop
push
cwtl
into
xchg
lret
push
ror
ja
dec
mov
cmp
std
xchg
sbb
daa
mov
in
stc
push
fs
or
mov
cmp
mov
stc
push
push
fcoml
fiaddl
or
mov
insb
mov
add
jae
icebp
mov
pusha
push
mov
scas
subl
inc
push
dec
aaa
pusha
push
dec
cmpsl
pop
inc
jle
insb
adc
jge,pn
xchg
push
and
mov
sarl
inc
adc
jne
mov
outsl
imul
scas
mov
mov
jmp
jae
jb
cmp
clc
inc
cmp
lcall
jp
popf
adc
jp
xchg
and
or
lahf
inc
push
stos
jl
movl
adc
and
pop
inc
push
fidivl
or
cmpsb
pop
mov
aam
cmpsl
adc
fbld
mov
lret
je
fisttpl
inc
js
xchg
movsl
sahf
adc
aas
divl
fcmove
pop
xchg
and
int3
inc
inc
mov
loopne
add
jns
mov
ljmp
sbb
mov
pop
repnz
cmp
adc
mov
or
clc
or
dec
adc
add
jae
stos
lods
xchg
pop
mov
push
out
pop
xor
dec
cs
mov
roll
xor
mov
push
pop
test
out
inc
pop
fsub
mov
or
sub
push
jno
mov
scas
add
insb
lea
and
lret
push
or
inc
inc
mov
jne
cmpsb
dec
mov
inc
and
mov
and
adc
rcrl
mov
jb
xchg
stos
std
cld
jl
cwtl
cld
scas
jge
push
pop
movsl
pop
inc
pop
ret
sbb
jns
push
push
mov
inc
inc
ds
xchg
pop
loop
add
lcall
cmp
jle
adc
push
ret
es
and
pop
pop
jmp
push
push
orl
jmp
mov
js
fwait
jbe
add
shrl
sub
mov
add
jg
cmpsl
fisttpl
popa
lret
test
fmulp
xchg
mov
daa
dec
adc
sarl
sub
imul
movsl
rcrl
sbb
mov
mov
outsb
andb
jno
cmp
pop
cltd
pop
shrl
pop
push
inc
push
inc
xchg
mov
dec
pop
insl
mov
push
xchg
btr
pop
mov
es
push
scas
pop
daa
mov
dec
xor
dec
shlb
jb
jp
in
pop
lahf
loopne
insl
jbe
push
inc
faddl
mov
push
pop
in
jmp
dec
dec
cld
dec
pusha
dec
std
in
xor
xor
iret
xor
jno
daa
cmp
and
jae
mov
add
mov
hlt
sub
outsb
mov
jl
xor
loop
pop
imul
into
dec
hlt
xor
xchg
push
insb
sbb
and
or
js
sub
pop
pop
jae
iret
js
fidivl
outsb
adc
lahf
mov
inc
add
cmp
je
andl
int3
cmp
es
xchg
lea
adc
push
push
xchg
movsl
pop
xchg
mov
in
mov
inc
xlat
insl
fldl
lock
adc
inc
sub
shll
lds
loop
imul
jmp
push
add
dec
pop
mov
inc
dec
mov
sub
pop
out
mov
dec
pop
es
loope
jmp
inc
xchg
mov
push
pop
xchg
dec
je
jle
inc
inc
mov
xor
shrb
inc
xchg
ljmp
jp
bound
xchg
jp
pop
ss
lahf
lods
mov
push
test
sbbl
mov
mov
test
pop
test
cmpb
mov
mov
aam
xor
lds
lret
pop
jle
cwtl
aas
sub
in
jg
sbb
jae
inc
test
orl
pop
or
js
push
lods
repz
sahf
aad
pop
mov
mov
or
mov
fs
jmp
jmp
popf
cmp
flds
dec
pushf
jle
xchg
xor
out
inc
cmp
test
mov
arpl
insb
mov
dec
out
xchg
sub
cmpsl
frstors
push
push
sbb
out
enter
add
mov
cmc
sbb
push
lret
dec
push
std
ud2
pop
mov
shlb
push
out
pop
cmc
sti
jo
leave
ss
shll
scas
add
pmaxub
cmp
cmp
out
or
lcall
and
mov
add
inc
cmp
mov
inc
out
out
aas
dec
sub
ljmp
or
push
aaa
scas
popf
mov
xlat
call
mov
xchg
cmp
inc
std
xlat
fs
cs
fimull
gs
pop
xor
cmp
or
push
pop
push
push
cmp
or
cmc
fnstcw
bound
lods
fsts
fidivrs
hlt
and
push
inc
inc
mov
sub
les
idivl
loopne
cmpsl
gs
testb
test
mov
jl
sub
imul
or
xor
into
shll
fsubl
mov
jb
fstl
dec
test
cltd
sbb
aam
push
dec
fstpl
jg
imulb
pop
out
mov
aaa
sbb
lret
loop
add
dec
cmp
jae
push
xor
sbb
ljmp
jnp
stc
inc
or
cld
dec
mov
cmpsl
xor
fisubs
sarb
xchg
cltd
push
loopne
mov
cltd
jno
inc
cmp
testl
es
sbb
test
xor
call
adc
push
nop
pop
xchg
mov
and
and
pusha
cmp
dec
jmp
xor
add
test
push
mov
out
das
push
push
mov
push
cli
bound
mov
jecxz
lods
popf
cwtl
fucomip
sti
insb
cmp
fsubl
nop
cmp
xor
faddp
adc
push
jae
and
add
cmp
jmp
lea
aas
hlt
icebp
sbb
dec
mov
test
jbe
jns
sti
subl
lods
dec
mov
lods
popa
mov
push
ljmp
jmp
repnz
dec
pop
dec
xor
lahf
lret
add
cld
xchg
fs
jp
add
addr16
rorl
insb
sbb
or
scas
lods
fisubrl
fadds
sub
daa
xor
lahf
in
rcrb
test
lcall
shll
sub
loope
sub
jbe
iret
iret
dec
jb
not
outsl
leave
stos
ss
ret
popl
push
mov
xchg
push
shlb
loopne
js
mov
adc
test
adc
cltd
sub
sub
inc
adc
inc
jge
dec
sahf
pop
inc
jne
inc
mov
pop
pop
sub
jno
mov
xchg
push
icebp
sub
jecxz
out
lock
movsb
test
push
aas
jge
lea
mov
incl
mov
lds
scas
cmc
rcrl
mov
in
scas
dec
and
movsl
movsb
pop
xchg
ret
mov
lock
lods
xchg
cmp
xor
loopne
mull
cmp
int3
jo
ja
cmp
fwait
cmp
cwtl
cli
pop
cmp
aas
xchg
pusha
push
mov
or
lds
cmp
mov
and
stc
cmp
add
mov
dec
push
nop
call
idivb
or
int
push
aad
test
mov
std
cmc
fadds
mov
push
inc
in
call
sbb
aad
cli
jp
push
inc
or
fsub
sbb
fisttpl
rcrb
hlt
mov
sub
mov
mov
inc
popf
xchg
mov
lea
pop
mov
jno
and
mov
or
push
adc
mov
dec
adc
std
dec
sbb
stos
mov
dec
test
jg
jl
push
aam
xor
mov
sub
in
and
fmul
inc
inc
fstl
aam
in
iret
push
or
cmp
gs
unpckhps
or
sub
inc
loop
mov
push
add
sbb
incl
mov
mov
mov
adc
inc
push
das
je
jno
and
insl
cmp
lahf
xor
mov
aad
psrlq
data16
and
mov
xor
add
out
int3
aad
mov
rcr
ret
jp
rcr
mov
scas
push
and
inc
loopne
sbb
xchg
adc
push
pop
cwtl
clc
pop
test
jecxz
aad
test
add
out
push
mov
push
cmc
and
cwtl
int
testb
andb
push
shll
test
push
ja
imul
ds
mov
sbb
mov
xor
adc
lods
nop
pop
cmp
push
sahf
loop
pop
or
xor
outsb
cwtl
out
cld
mov
cmp
ret
add
cli
sbb
or
add
push
xor
imul
sbb
cld
xor
jecxz
dec
pop
xorl
jmp
dec
sbb
lods
jo
jl
lretw
xor
or
cmp
rorl
nop
jmp
xchg
jbe
push
jns
mov
mov
add
sub
fnstsw
pop
mov
sbb
in
fstp
dec
inc
loopne
pop
mov
add
xor
mov
and
sbb
hlt
adc
lds
mov
insb
outsl
push
xchg
add
outsb
in
fnstcw
in
imul
stos
jnp
sbb
lods
std
jecxz
jg
pop
cmp
mov
ljmp
sbb
add
pushf
pop
cld
xlat
inc
andb
inc
cmp
sti
aad
push
push
clc
inc
xchg
mov
xchg
dec
hlt
lahf
add
pop
lds
stos
xor
sti
jo
mov
and
arpl
dec
mov
push
push
xchg
shrl
and
test
repnz
add
je
jge
das
dec
outsl
data16
sbb
leave
cmp
in
fdivs
rcrl
aaa
mov
push
out
xor
dec
in
add
pushf
jl
pop
inc
pop
xchg
lods
xchg
add
or
xor
adc
add
push
in
and
js
wrmsr
inc
cmc
out
cld
movsl
movsb
dec
hlt
sub
mov
sub
pop
dec
xlat
xchg
arpl
mov
in
sub
cltd
mov
xchg
into
fbstp
imul
or
xlat
inc
ds
cmpsl
pop
jle
mov
pop
push
in
std
push
jb
ret
dec
clc
push
roll
daa
mov
cmp
ljmp
fdivl
push
rcrb
fdivs
leave
push
imul
ljmp
xorb
and
in
fisubs
in
loopw
mov
and
dec
std
jno
adc
push
aad
inc
cmp
std
inc
mov
jmp
xchg
lds
mov
sub
int3
es
ljmp
into
int
cwtl
cmp
test
push
and
mov
call
test
lods
je
cwtl
pop
shlb
mov
xor
out
ss
pop
jg
adc
popf
popf
dec
or
add
into
pcmpeqd
xor
pop
insb
push
push
sub
mov
nop
pop
test
fwait
push
lret
push
cmp
mov
jle
mov
pop
movsb
arpl
mov
jg
je
cmp
cmp
test
or
jp
sbb
fwait
push
or
in
dec
pop
enter
xor
andl
push
cmp
leave
fidivl
sbb
mov
mov
dec
sub
fstps
ljmp
pop
cmp
mov
jl
inc
cmp
fdivrl
add
jns
out
movsl
mov
cmp
and
push
xor
dec
dec
mov
jo
push
cwtl
pop
xor
mov
popa
mov
orb
cmpsb
cmp
mov
icebp
jp
inc
jg
fimull
adc
xchg
jl
fbstp
lea
fs
lods
fcomp
mov
jae
js
cwtl
push
dec
pop
mov
mov
push
push
out
lret
push
push
lahf
mov
lretw
xor
fidivl
pop
jns
xchg
pop
add
arpl
ljmp
or
or
in
mov
xchg
sbb
inc
push
repz
jae
cmp
sbb
test
push
jl
out
test
movsl
xor
sbb
nop
test
jae
cmp
imul
mov
xor
lock
add
jle
mov
loop
inc
jmp
pop
rclb
xchg
insb
jne
sub
std
sarl
mov
cmp
push
xchg
fdivrl
call
nop
jns
mov
or
movsb
inc
sbb
sub
pop
scas
call
gs
into
lods
jbe
pop
and
shl
fisubrl
sub
or
cmp
lcall
and
adc
test
clc
mov
bound
xorl
ss
out
dec
inc
mov
adc
in
dec
cwtl
fildl
adc
push
sbb
push
inc
push
jle
rolb
add
fcoms
addr16
fwait
pushf
push
mov
push
adc
xchg
ss
ret
add
repnz
test
xorl
loope
push
ljmp
cmp
inc
orl
cmp
push
pop
push
lods
push
stc
pop
ret
dec
fstps
xchg
addr16
cwtl
test
sbb
inc
movsb
jb
addr16
scas
out
es
mov
pop
int
mov
xchg
aad
rolb
test
cmp
clc
xchg
cwtl
push
xor
xor
mov
add
inc
xor
hlt
cmpsb
push
xor
pop
loope
frndint
rcll
loope
jle
iret
daa
loopne
sbb
aaa
xchg
add
xor
stos
out
insb
cmp
call
cld
jp
pop
mov
mov
push
test
insb
repnz
add
jecxz
cmp
fimull
jecxz
fnstcw
fs
and
es
jno
adc
jg
mov
push
push
cmpl
push
nopl
in
sub
dec
mov
cmc
shl
jb
sbb
lahf
add
adcl
sbb
fucom
bound
jnp
jo
test
cmp
mov
jl
sbb
shll
mov
rolb
fsubs
leave
insl
sbb
or
dec
or
jg
sbb
mov
test
lahf
mov
cwtl
xchg
cld
fsubr
out
in
dec
adc
adc
insl
and
xor
stc
js
outsl
mov
xchg
ret
xor
mov
and
stos
aaa
fmuls
jg
and
imul
enter
sbbb
inc
jge
mov
jmp
cwtl
and
out
adc
inc
inc
mov
ficoms
sub
jecxz
stos
into
xchg
in
jae
mov
pop
int3
in
mov
jo
add
add
inc
cmpsb
and
xchg
sbb
cltd
popf
push
sbb
jnp
mov
les
les
es
out
cmpsl
clc
rorl
lock
dec
xor
std
cmpsb
jno
xchg
and
fdivl
mov
popa
add
pop
cmp
xor
leave
push
or
mov
adc
and
imul
test
lods
jmp
repz
xor
inc
jbe
sbb
loopne
sahf
xor
pop
pop
sbb
or
test
enter
std
push
call
sbb
fbld
xor
jb
or
lods
mov
cs
sub
stos
loopne
inc
mov
or
dec
xor
dec
enter
aas
addb
test
out
push
xor
mov
out
and
push
fiadds
int3
xor
push
scas
lahf
push
and
aad
andl
jnp
and
out
dec
lods
test
ss
bnd
idivl
jo
sub
push
mov
mov
jecxz
sbb
repz
pop
js
push
mov
syscall
testl
sub
repnz
enter
jmp
xor
xchg
sub
test
and
ja
inc
push
sahf
stos
imul
test
aad
jns
add
mov
movsb
lahf
and
push
das
loopne
pop
push
sub
lcall
mov
sahf
jl
sub
cmpsl
insl
nop
or
pop
dec
roll
mov
aam
adc
jmp
fs
inc
add
inc
add
sub
dec
mul
nop
mov
out
and
fdivrl
add
push
pusha
xchg
imul
sub
out
lods
jno
pop
es
into
jmp
sbb
push
push
andl
sbb
jmp
or
lods
jle
dec
inc
pop
daa
xchg
push
sbb
aas
stos
fisttpll
mov
xchg
sub
xchg
sti
mov
mov
arpl
push
mov
pop
insl
rorb
jb
aad
add
stc
cwtl
push
and
int3
push
or
lods
testb
and
lcall
daa
je
call
inc
cli
addb
cmp
imul
das
add
dec
fidivl
mov
xor
cld
nop
outsl
sbb
imull
and
mov
jae
out
sbb
adc
lret
adc
es
iret
ja
xchg
pusha
int
aam
fs
mov
mov
jne
sub
cmp
fwait
rcll
fucomi
es
aam
sub
jo
adc
outsb
inc
enter
lock
dec
insb
pop
mov
xor
mov
inc
popf
fldl
push
and
or
pop
xchg
push
cld
adc
sub
jecxz
stc
sub
inc
fcoms
jp
mov
dec
xchg
mov
pushf
cli
pusha
adc
or
icebp
dec
and
push
nop
sub
cmp
xchg
rol
ror
jp
dec
jl
pop
push
flds
mov
add
mov
sub
and
mov
pop
inc
jg
inc
cltd
jno
into
fsts
mov
inc
mov
adc
adc
in
xchg
add
dec
cmp
pop
push
jl
mov
jmp
ror
stc
es
outsb
mov
lcall
sbb
ds
inc
testl
jg
push
dec
and
and
insl
cmp
lods
stc
adcl
insl
xchg
loop
push
pop
cli
sub
xor
inc
sub
and
add
xchg
sbb
mov
jmp
sbb
and
aam
jne
data16
mov
mov
adc
icebp
mov
pop
push
sbb
shr
sbb
pop
xchg
jns
cli
insl
and
leave
mov
and
movhlps
fidivrs
mov
jb
pop
jmp
ret
ret
push
jbe
push
add
cmp
mov
and
xchg
adc
mov
ret
sbb
or
jmp
ja
xchg
imul
setp
add
mov
sbb
push
lds
jae
mov
or
cmp
cmc
scas
push
adc
rorb
loopne
lret
push
aam
jo
into
xorb
in
outsb
aad
test
lea
mov
sbb
xor
leave
push
jmp
scas
jno
jg
shrb
in
fcmovb
data16
and
shrl
jbe
dec
and
outsl
repz
jecxz
aaa
mov
int
adc
rcrb
mov
stc
repz
orl
inc
cmpsl
enter
int
aad
and
bnd
push
loope
mov
sub
fcmovnu
push
xchg
stc
out
bound
outsb
das
inc
addr16
or
cmpsl
and
mov
lcall
lods
sbb
frstor
cmpsb
ret
icebp
pushl
call
lret
or
fdivrl
adc
shrb
add
nop
cmp
sub
rcrl
pop
cwtl
icebp
scas
cmp
dec
out
xchg
notb
mov
push
cs
jno
into
mov
addb
cmp
pusha
mov
dec
int
movsb
push
cltd
add
imul
les
lds
call
cltd
addr16
pop
arpl
and
adc
imul
xor
pop
addr16
ss
outsb
jne
push
mov
push
jmp
fcoml
fisttps
lea
leave
out
lret
loopne
xchg
icebp
sti
fildll
ret
push
movsl
fwait
sbb
or
xor
scas
leave
adc
outsb
ret
fsts
jg
inc
push
push
mov
test
repz
sbb
sti
xor
adc
loope
sub
imul
dec
shl
add
scas
xor
lock
cmp
mov
int3
loope
add
scas
push
out
sbb
and
jl
pop
repnz
stc
xor
jg
sub
mov
push
mov
std
push
cmp
inc
rorl
aad
push
adc
rolb
cld
stc
sbb
mov
mov
inc
sti
ss
stc
cmp
rcll
loope
jl
loope
mov
cwtl
aaa
out
mov
sub
and
clc
mov
xor
into
push
cmp
mov
and
aaa
fildll
sub
ljmp
aam
aam
push
mov
es
repnz
hlt
mov
std
jne
lds
loop
and
pusha
add
test
pop
or
imul
bound
into
mov
outsl
addl
and
mov
mov
lret
xor
and
xchg
xchg
lds
lcall
push
fwait
cmp
inc
dec
mov
cmp
mov
mov
push
js
fstps
rcrb
out
xlat
pop
ficoml
test
xchg
adc
popf
add
push
lahf
mov
cmpsl
add
out
mov
roll
aad
inc
mov
hlt
xor
sub
cmp
jno
xchg
xlat
sub
int3
mov
push
adc
pop
jae
sarb
sbb
lods
push
mov
fwait
pop
cltd
or
movsl
not
iret
aaa
mov
adc
pop
lret
mov
clc
mov
dec
adc
sub
mov
cmp
or
mov
push
and
jmp
mov
mov
ret
push
stc
mov
std
mov
sub
mov
subl
xchg
xor
into
xor
xchg
aad
xchg
and
dec
mov
cmp
cltd
xchg
and
push
mov
push
das
mov
mov
jp
scas
hlt
fisttpll
pop
enter
mov
adc
xor
jecxz
in
pop
xchg
sub
cmp
outsl
inc
and
xor
dec
xor
cmpsl
and
mov
bound
add
fmull
push
ja
cmpsl
mov
test
jge
hlt
mov
pop
sbb
repnz
ja
int3
sub
out
sbb
mov
loopne
and
das
cmp
xchg
rorl
sarb
daa
call
insb
xor
dec
add
sbb
imul
loopne
jbe
in
js
xor
mov
xchg
or
ljmp
sbb
dec
inc
push
sbb
cmpsl
int
mov
mov
dec
ja
mov
mov
mov
adc
sub
sbb
sub
out
mov
sub
jno
mov
in
mov
and
add
fistpl
icebp
idivb
add
and
in
ffreep
jle
fucom
mov
repnz
mov
leave
stc
dec
into
nop
ret
dec
inc
xchg
std
test
cmpl
mov
mov
jns
ds
xchg
dec
in
pop
imul
jg
push
icebp
xor
and
popa
mov
fucomp
fisttpl
xchg
adc
cmpsb
cmp
ficoms
xchg
scas
push
dec
xor
push
inc
out
sub
jb
add
xor
aas
test
popa
incl
jae
pop
popa
ja
sar
es
xchg
fdivl
dec
cmp
mov
push
mov
out
or
sub
ja
jle
popfw
jno
push
into
cmp
stos
bound
int3
sysenter
mov
stos
rcrl
daa
outsl
cmc
xchg
outsl
cmpl
jnp
add
sbb
mov
neg
pop
stos
popf
pop
sbb
int
repz
nop
ja
fsubp
fcoms
push
mov
sti
repnz
jl
ret
push
sahf
ss
pop
adc
mov
ret
mov
repnz
jb
pushf
mov
ficompl
stos
je
sar
jae
mov
gs
out
xlat
imul
ret
sahf
pusha
mov
scas
xchg
xchg
cmpl
test
daa
out
call
or
cwtl
xchg
out
cmpsb
dec
fxam
and
loop
xchg
pop
jns
ret
enter
jmp
dec
pop
xor
test
pushf
cmp
push
or
outsb
lock
test
mov
insl
ja
or
test
jo
and
xor
lret
cmpsb
and
xchg
sbb
dec
iret
fsubrl
ljmp
enter
push
adc
jb
in
std
pusha
cwtl
ljmp
or
lods
jo
int3
jmp
mov
push
insl
cmpsl
push
adc
insl
xor
adc
xor
dec
insl
imulb
xor
or
movsb
subb
sbbb
pop
sbb
dec
xchg
ljmp
daa
inc
lahf
mov
arpl
push
aam
push
sbb
icebp
hlt
repnz
jmp
mov
aaa
lea
xchg
mov
popl
dec
test
sub
test
sbb
adc
or
push
inc
adc
inc
and
adc
ss
jbe,pn
cmp
dec
or
in
lahf
sarb
sti
sbb
cmp
bound
gs
dec
call
sti
je
push
pop
outsb
and
das
bound
addb
add
mov
out
pop
and
lods
sub
lahf
adc
xchg
fwait
adc
mov
cmp
repz
frstor
cmpl
xchg
or
push
jno
dec
imul
pop
enter
addb
bound
fdivl
nop
loope
cmpb
xchg
or
aam
and
decb
popf
or
mov
push
aam
add
mov
ljmp
jp
jge
loope
pop
cli
shlb
shlb
cmpsl
push
js
call
dec
dec
es
and
mov
mov
add
ljmp
sarl
inc
and
pop
insl
xchg
jecxz
push
add
cmp
mov
sub
outsb
fmulp
mov
jmp
mov
mov
enter
mov
dec
pusha
mov
sahf
xchg
imul
leave
push
mov
sub
lcall
mov
mov
insl
cltd
incl
adc
std
pusha
adc
mov
insb
stos
scas
mov
fldcw
jb
cli
add
pushf
adc
sbb
and
or
not
jnp
sub
cmpsl
push
test
dec
mov
inc
mov
push
test
inc
iret
data16
jae
dec
std
push
into
popa
sub
clc
jnp
ljmp
int
mov
mov
lret
pusha
pushf
mov
cmpsb
daa
push
cltd
iret
dec
in
mov
loope
push
push
mov
xor
adc
mov
mov
pop
lea
xchg
pop
cmp
aaa
fildl
pusha
stos
push
icebp
inc
std
leave
out
mov
mov
xchg
xor
into
push
sbb
fcoml
andb
mov
xchg
mov
fucomp
pop
scas
lret
stos
xor
lds
sbb
test
push
out
cltd
in
cli
jae
xor
inc
and
clc
shlb
mov
or
sub
repnz
xchg
jmp
leave
and
scas
aaa
mov
jo
cmp
sub
pop
daa
inc
inc
cmp
adc
in
out
pop
lock
cmp
fs
sub
jnp
jecxz
loop
pop
call
or
rep
push
fsubr
xchg
cmp
cmp
push
xchg
push
sbb
cmpsb
or
sti
fidivrs
hlt
into
jmp
jns
fidivl
movsb
mov
dec
push
push
jl
clc
adc
or
push
push
test
ss
cmpsb
pop
push
test
cltd
into
stos
sbb
mov
push
dec
pop
int
pop
nop
enter
ret
into
jg
jno
inc
lea
pop
clc
add
push
das
cmp
jmp
mov
push
and
xchg
sbb
mov
cmc
shll
dec
out
jmp
mov
cmp
mov
fs
les
add
pop
addl
js
sub
movsb
dec
aaa
xchg
dec
idiv
and
jecxz
mulb
jle
and
mov
repz
std
out
sub
outsl
jae
adc
and
inc
in
stc
aam
movsb
cmpsl
ret
mov
movsb
cmp
sub
insl
leave
xchg
movsb
add
pushf
mov
daa
data16
sbb
fs
dec
and
repz
sbb
lcall
sbb
mov
mov
pusha
mov
inc
cmp
mov
inc
mov
mov
cli
push
in
and
mov
mov
hlt
push
cmp
stc
add
pop
push
adc
cmp
mov
data16
jmp
dec
jle
popf
and
jle
and
and
repnz
xorb
leave
pop
inc
mov
add
jecxz
sub
inc
cld
and
mov
subl
lock
imul
out
in
xchg
mov
cmp
sbb
lret
inc
sub
and
dec
scas
ljmp
fisttpl
adc
adc
dec
scas
or
or
pop
push
repz
pop
lods
jecxz
push
push
test
and
stos
sahf
cli
stos
adc
testb
fs
loopne
dec
mov
push
push
push
sub
mov
inc
fstl
inc
xor
jmp
fbstp
sub
es
xchg
pop
xor
aam
out
pop
pusha
loop
mov
iret
xchg
pop
add
cmp
mov
in
iret
dec
sub
stos
loope
out
xchg
inc
out
adc
mov
mov
jnp
cltd
mov
sbb
ret
fs
aas
mov
pop
pop
mov
sub
add
mov
ret
or
add
rorb
push
ja
or
dec
imul
addr16
and
stos
push
jp
cld
adc
adc
hlt
and
aas
jl
cmpsl
cwtl
out
jb
mov
adc
xor
in
mov
push
xlat
shll
test
xor
jp
cld
dec
lcall
int
jnp
mov
dec
or
sbb
lods
arpl
cmp
lods
rcr
pop
jno
add
cld
fisubl
sbb
mov
movsl
call
shll
movsl
call
mov
adc
xchg
out
out
int3
and
movsl
xchg
in
cs
cmpsb
or
lock
and
jb,pt
sub
mov
call
inc
inc
jl
icebp
nop
shlb
jp
pop
dec
mov
divb
cmc
jge
test
xor
nop
sbb
mov
ja
lods
jp
leave
imulb
pop
xchg
sub
and
clc
shl
gs
xchg
pop
jmp
and
xor
std
pop
mov
fsubrp
fcoms
cmp
or
leave
aaa
nop
cmpsl
inc
js
loopne
rorb
lret
add
push
dec
ret
dec
xchg
xor
inc
sub
cltd
sarb
stos
push
hlt
mov
mov
int
or
sbb
adc
inc
add
xchg
sbb
pop
ljmp
push
ret
loope
jge
xor
or
jl
cmpsl
lods
dec
cmp
outsb
iret
cmp
gs
sbb
mov
repz
in
roll
ror
or
and
roll
xlat
lret
daa
adc
loope
pusha
mov
pop
mov
aaa
call
pop
cwtl
int
aas
inc
dec
clc
xchg
pop
mov
add
repz
insb
jo
stos
lcall
je
in
out
movsl
push
inc
jnp
fwait
rcrb
push
lods
mov
bound
pop
ljmp
es
fstl
iret
or
sarl
into
add
mov
cld
pop
adc
vhaddps
add
ja
leave
jp
push
out
in
jle
pop
sub
in
xchg
popf
cmpsb
jp
daa
jmp
jnp
mov
mov
movsb
add
jp
pop
popf
jbe
jae
rcll
in
fwait
sub
push
arpl
xchg
cmpb
mov
mov
push
insb
push
jecxz
in
repz
aaa
aam
ljmp
rclb
lock
dec
int
fcompl
ds
pop
sub
outsl
mov
jae
inc
mov
pop
mov
lock
aad
dec
cmp
push
inc
ret
mov
aam
mov
adc
dec
test
test
sub
hlt
popa
cmp
push
iret
lock
out
cli
dec
mov
pop
les
fisttps
mov
rcr
adc
insl
pop
notb
jp
pushf
xor
test
in
aad
aaa
mov
scas
loope
out
or
movsl
jecxz
xor
loope
rcrb
sbb
sub
jno
mov
jl
cli
sbb
and
sbb
mov
add
push
pop
mov
dec
push
cwtl
lret
ja
negb
mov
cmp
cwtl
cmpsb
mov
sarb
mov
xor
adc
in
jnp
jns
mov
push
lods
mov
enter
and
and
sub
jge
sub
pop
fs
test
dec
add
pop
stc
std
xor
loope
outsl
xchg
jns
xor
or
push
push
scas
or
and
imul
sbb
cs
lea
mov
mov
leavew
gs
scas
sbb
adc
xchg
ds
xchg
push
sbb
inc
inc
mov
push
fimuls
dec
mov
inc
imul
xor
iret
xchg
sbb
mov
mov
dec
aaa
stos
add
repz
js
sti
xchg
mov
mov
or
arpl
lea
mov
jp
pop
loope
sbb
mov
push
push
ret
fcoml
push
pop
pop
xchg
jg
shll
ret
xchg
pop
pop
pop
std
cmp
ror
hlt
mov
out
pop
xor
add
lcall
mov
jge
out
mov
jnp
jl
mov
popa
les
fdivr
lods
lds
loop
mov
lret
sub
cli
loope
mov
xchg
pop
jo
push
mov
mov
int3
mov
sbb
imul
in
out
dec
scas
cmp
fisubrl
xor
shlb
lcall
test
pop
sbb
movsb
negb
mov
insl
fcmovu
pop
sbb
push
mov
mov
cmc
pop
mov
insb
sarb
fidivrs
jle
cwtl
out
mov
popf
mov
adc
cmp
dec
dec
daa
pop
inc
jge
imul
jnp
jp
sbb
and
pusha
imul
and
imul
or
cmp
imul
repnz
hlt
push
push
pop
cmp
and
ljmp
pop
in
xor
inc
or
lods
ret
inc
jo
mov
stos
sub
loopne
push
xchg
aad
out
dec
mov
and
fdivl
imul
roll
arpl
mov
out
pusha
cli
jle
out
xlat
adc
mov
push
pop
in
jl
sub
loope
inc
or
add
daa
or
xchg
int
mov
xor
inc
bound
call
sar
jl
and
call
push
popf
pop
push
cmc
and
insb
xlat
sub
push
add
idivb
in
jecxz
jns
outsl
mov
lods
out
push
push
fcoms
add
stc
sbb
mov
xchg
mov
cmp
imul
loopne
iret
test
jg
rcrl
add
push
cs
loopne
rcrb
outsl
adc
mov
sbb
dec
data16
clc
jb
clc
js
imul
rcrb
jne
dec
std
and
int3
loope
outsl
sub
shlb
jecxz
adc
cld
xchg
lret
mov
aam
and
sbb
adc
and
int3
sahf
mov
inc
mov
push
sub
les
lret
sti
cmp
dec
rorl
sub
add
mov
cmp
pushf
aad
fcoms
test
mov
int
and
out
gs
xchg
jne
insb
dec
cld
mov
fldz
xchg
sti
in
sbb
push
stc
andl
out
mov
jne
ljmp
pop
cmpsl
xor
mov
aad
mov
ljmp
adc
push
adc
lret
and
mov
rcll
ja
xchg
inc
cli
pop
push
inc
and
or
mov
xchg
add
mov
jb
cmpl
iret
mov
jecxz
add
dec
xor
mov
push
xchg
sub
jg
xor
cli
int
cli
xor
adc
pop
sub
push
jae
lret
fldenv
sbb
fsubr
or
out
mov
cmp
daa
shrb
fisttpl
dec
mov
and
decb
xchg
adc
fcompl
int
inc
pop
add
xchg
test
es
das
daa
pop
sub
sbb
out
ljmp
in
mov
inc
add
push
sub
cmp
stos
xchg
sahf
jae
loop
iret
mov
cmpsl
enter
mov
mov
mov
sub
dec
cmp
jne
cmc
dec
mov
out
mov
cmp
jbe
iret
popa
sub
dec
lahf
cmp
call
lock
aam
jg
xchg
dec
leave
cmp
sub
and
daa
imul
sub
mov
je
pusha
fsubs
ds
add
xchg
xchg
push
leave
jb
fstpt
sub
into
in
es
xchg
pop
shlb
shll
sub
aad
lret
and
and
clc
ds
push
pop
jp
xchg
cli
clc
testl
mov
xchg
ljmp
aas
pop
dec
mov
sbb
data16
nop
mov
mov
mov
pop
adc
insb
mov
jmp
fsub
dec
aad
cmp
inc
loopne
popa
orl
sbb
loope
shr
js
popa
insb
out
cmp
or
pop
xor
gs
jl
jnp
loope
sahf
add
mov
shll
rclb
enter
add
cmp
inc
pop
popl
inc
sub
clc
in
xchg
nop
sub
push
xchg
xlat
arpl
push
sub
pop
xlat
pop
xchg
enter
ss
leave
stos
adcb
or
jae
and
cltd
sub
adc
repz
popf
test
movsl
mov
or
outsb
jmp
dec
test
imul
subb
out
mov
pop
or
add
adc
xor
mov
xor
xor
frstor
push
add
mov
imul
adc
ljmp
popf
cmp
dec
nop
cld
jg
cmp
dec
idivl
and
xor
dec
rolb
pushf
add
cmp
adc
adc
mov
pop
int3
mov
sub
test
cmp
out
xchg
pop
xchg
lock
pop
mov
test
inc
xor
and
sarb
lret
cmp
repz
mov
lcall
sarl
mov
lods
sub
test
pusha
mov
xor
into
push
incl
pop
lret
scas
xchg
test
lret
jne
sbb
rorb
rclb
pop
arpl
jae
addr16
add
out
aaa
cmp
cmp
andb
pop
or
inc
lret
mov
ret
add
lock
cmp
lret
add
std
fisttpll
xchg
xchg
inc
jl
mov
mov
push
test
into
or
and
jg
ds
add
imul
fnstenv
xchg
push
cmp
sahf
pop
and
mov
mov
dec
lret
pushf
inc
sub
mov
or
into
mov
fs
mov
leave
xor
mov
aas
mov
jge
rcrl
xor
lcall
in
arpl
test
movsl
stos
mov
loop
sahf
or
xor
jns
std
lods
push
sub
lods
testb
push
add
pop
cmpl
std
mov
into
mov
cltd
scas
sbb
mov
dec
xchg
cli
xchg
xchg
pop
sarb
cmp
out
lahf
lcall
push
scas
ret
call
hlt
lret
fisttps
mov
cmp
push
pop
daa
das
adc
sahf
rorb
inc
rorl
and
push
mov
xcrypt-cfb
cmpsl
es
sub
mov
in
mov
and
mov
dec
or
dec
mov
push
loopne
push
xchg
push
movsb
mov
jo
mov
sub
adc
xor
rcl
dec
or
dec
pop
sbb
pop
pop
xor
mov
push
mov
dec
adc
jp
push
push
dec
inc
xor
in
sub
lret
daa
repz
cmp
cmp
int
xor
push
add
aam
lods
jl
sub
xchg
inc
xchg
jo
ret
xor
cmp
xor
ja
lods
lea
ret
fcmovnu
jle
pop
lods
adc
aad
push
imul
imull
mov
iret
xor
mov
cmp
pop
das
lahf
std
pop
mov
pop
push
sbb
cmp
fstps
lahf
cmc
scas
mov
or
inc
jo
sbb
inc
push
call
push
xchg
cmp
fwait
or
jo
imul
push
inc
js
or
mov
dec
fimull
mov
aad
jno
das
push
sbb
push
into
insl
and
je
mov
out
ficompl
push
decb
mov
orl
cmp
outsl
cltd
shr
add
lret
mov
rorl
inc
negb
xchg
dec
in
push
fsubl
jns
dec
stc
addb
pop
or
rclb
adc
fistpll
dec
cld
dec
scas
mov
mov
inc
mov
hlt
adc
scas
pop
arpl
inc
pop
stc
std
pop
outsl
lock
in
andl
mov
test
or
nop
ds
adc
insb
sub
mov
lods
dec
jp
dec
add
push
and
cmp
dec
test
dec
mov
xchg
push
dec
fcomps
nop
mov
inc
out
cmpsb
cmpsb
out
hlt
in
push
and
mov
xor
xchg
push
scas
stos
dec
mov
inc
cmpb
popf
andb
sub
pxor
xchg
les
pop
push
add
adc
dec
cmp
into
jecxz
mov
adc
mov
fimuls
mov
inc
and
mov
cmp
or
in
inc
sub
sub
jb
xchg
mov
scas
mov
pop
mov
push
imul
in
push
scas
es
adcb
xor
sbb
mov
xchg
lret
inc
or
orl
jbe
loope
or
popa
mov
add
cmp
and
dec
dec
popf
outsb
cmp
into
push
sahf
jmp
cmpb
mov
cltd
mov
shrb
cmp
sub
js
sub
pop
cli
fistps
dec
push
fidivrl
xchg
fstpt
lods
xchg
outsb
or
xor
xorb
jne
insb
pop
lods
ss
fsts
pop
xor
sub
sub
in
je
pop
fisubrs
dec
lret
inc
push
stc
sti
rol
push
jae
mov
sub
in
mov
dec
fisttpl
push
inc
mov
rcll
dec
mov
inc
out
mov
lods
cld
and
out
push
cwtl
ret
aad
fidivs
insl
int3
sbb
add
mov
inc
xor
repz
js
mov
xchg
pop
dec
scas
hlt
jl
push
movsb
leave
lods
das
pop
test
xor
out
add
imul
or
insb
xchg
mov
mov
jle
stos
pop
cmp
cmp
stos
xchg
or
ds
jecxz
mov
xlat
daa
inc
and
or
lahf
xchg
add
cmp
xchg
push
pop
jns
lea
dec
mov
std
ds
and
shrl
gs
mov
pop
and
add
cli
push
int
adc
dec
call
sbb
iret
adc
fildll
xor
jg
jp
sti
cmp
je
iret
jmp
cli
mov
and
dec
add
pop
and
push
cmp
in
iret
or
movsb
jmp
rorb
xchg
sbb
xor
jmp
incl
cwtl
test
icebp
jae
shll
fisttps
sbb
sub
pop
adc
lahf
cmp
pusha
xlat
je
lock
scas
fsub
lods
stos
sbb
adc
and
sub
repz
mov
mov
or
xchg
outsb
ret
or
pusha
pushf
sub
imul
test
das
xchg
insl
arpl
push
jbe
add
mov
sub
inc
or
and
or
cltd
gs
loopne
sub
sbb
or
push
xor
fs
xor
and
sarl
push
and
cwtl
xor
pushf
enter
ret
add
xchg
daa
fisttps
xor
sub
out
add
adc
test
or
ficoms
je
std
enter
mov
ret
fidivrs
jl
pusha
mov
das
shlb
rcll
adc
les
inc
or
popf
and
xor
or
push
pushf
cwtl
cld
movsl
fdivrs
cmpsb
aad
shll
rolb
mov
loopne
jp
sub
jne
mov
js
lods
sbb
xor
je
in
mov
gs
daa
or
xor
icebp
sarl
and
mov
clc
mov
imul
in
xor
inc
aam
add
xor
mov
inc
mov
and
cld
xor
jl
daa
sub
dec
mov
into
or
repnz
test
daa
cmpsb
lds
mov
les
outsl
cmpsl
pop
sarb
jae
les
jnp
das
inc
repz
xor
btsl
aas
cmpsl
adc
jp
dec
mov
pop
pop
lods
ret
jae
jne
add
and
xchg
pop
adcb
cltd
lcall
mov
je
add
cmp
daa
fwait
jecxz
je
lea
add
push
bound
xor
push
jbe
out
out
outsl
xor
insl
lock
ficoms
mov
adc
xchg
loope
jne
jbe
test
ret
lds
fimuls
cmp
cmpsb
int3
mov
pop
outsl
jnp
jge
incb
cs
add
cltd
xlat
sub
inc
sub
sbb
jb
sub
rcrl
sahf
mov
mov
pcmpgtw
ret
das
xchg
cmp
imul
sbb
cmpsl
sbb
inc
mov
notl
addr16
add
scas
daa
jmp
test
cmpsb
lret
nop
daa
popf
in
lods
and
sub
pop
and
ret
lcall
out
mov
jne
dec
mov
jno
mul
sti
aam
adc
js
popa
adc
aaa
pop
pop
or
sub
push
lret
iret
or
sbb
mov
pop
cmp
mov
arpl
lcall
push
imul
jno
mov
lcall
ret
stc
popf
xchg
inc
test
sbb
ds
popa
stc
pop
jno
push
ficomps
rcll
call
sbb
mov
popf
jne
mov
adc
ficomps
or
and
lods
mov
dec
sbb
push
jp
dec
xchg
lea
mov
mov
ljmp
or
out
dec
stc
adcl
sbb
dec
or
ja
sub
or
mov
cltd
sub
inc
cmpsb
dec
test
ret
movsb
push
or
sbb
sbb
outsb
cmp
xchg
lahf
cmp
xchg
dec
test
inc
dec
pop
sbb
or
cltd
fcompl
mov
mov
xor
pop
cmp
cmc
inc
les
push
imul
or
xchg
add
lcall
std
jns
ss
xchg
dec
push
dec
pop
cmp
aad
fsubrs
jmp
mov
pop
popf
dec
add
fwait
lods
push
in
mov
push
and
mov
mov
inc
xchg
sub
adc
or
push
or
jp
sbb
ja
xor
xchg
iret
mov
xchg
mov
push
add
pop
push
adc
xchg
add
in
sbbl
mov
push
mov
add
hlt
jge
loope
xlat
fs
cmp
xor
pop
dec
sti
outsb
push
cs
mov
xchg
into
mov
fwait
imul
xchg
dec
imul
lahf
hlt
xchg
push
outsl
inc
xchg
push
dec
add
cmp
adc
cli
cmc
cli
sub
insb
xor
or
push
and
mov
mov
mov
pop
in
xor
nop
xchg
xchg
adc
ja
iret
mov
add
in
and
mov
sub
adc
pop
lea
imul
shrb
cmp
jb
ret
popa
sub
dec
xlat
jno
jb
jle
mov
enter
stos
mov
pop
add
js
or
sarl
pop
xor
sbb
int
ja
fadds
movsl
test
mov
or
mov
gs
inc
sub
leave
jne
pop
xchg
and
orl
sub
push
rorl
sub
aad
dec
outsl
push
and
loop
push
and
jae
call
fprem
xlat
mov
xor
scas
insl
pusha
cmc
mull
mov
insw
mov
fbld
cld
xor
mov
loopne
mov
pop
push
mov
int
test
insl
repnz
pop
pushf
sbb
sub
add
fisttpll
inc
or
cmpsb
mov
scas
or
and
xorl
pop
dec
enter
mov
inc
sbb
sub
cmc
je
add
push
cmp
inc
insl
aaa
int
aad
add
xchg
stos
test
setl
outsb
pop
jo
nop
jne
adc
sub
push
push
jecxz
add
shl
sbb
push
sub
mov
xor
insb
scas
pop
scas
orl
jmp
das
sub
xchg
fwait
jge
fimuls
aas
pop
test
dec
sbb
sbb
pop
adc
xlat
sub
add
xlat
imul
lea
fldcw
sub
test
xchg
or
cli
cmc
mov
pop
lods
xor
jbe
pushf
lret
call
mov
push
adc
xchg
insb
stc
ret
cmpsb
loop
stos
outsl
pushf
inc
push
out
lods
loope
or
pop
mov
inc
out
dec
cltd
stc
adc
jecxz
pop
ljmp
aaa
in
call
movsb
loop
fimuls
outsb
jp
loope
loop
mov
sub
push
add
and
pop
inc
es
xorl
in
add
push
mov
cmp
fs
xor
mov
mov
leave
sub
mov
push
sbb
cmpsl
aaa
mov
push
push
or
inc
lret
push
xor
mov
xchg
inc
xchg
repnz
bnd
aad
mov
fwait
sbb
aad
lds
insl
adc
and
sbb
add
roll
fistpl
out
add
lahf
les
lcall
ret
jnp
jns
push
cmp
add
xor
sbb
mov
std
push
les
dec
sub
jle
lds
loope
out
leave
adc
ja
mov
cmp
inc
ret
xchg
or
pop
mov
adc
ljmp
xchg
icebp
cmc
call
and
add
add
ret
test
int3
push
nop
loope
fcmovu
xchg
mov
lahf
or
ret
cmpsb
mov
into
fidivrs
aad
jae
das
pop
mov
pop
ret
mov
mov
inc
pop
flds
sub
inc
push
bound
fidivrl
jmp
inc
fimull
ss
xor
fucomp
push
push
dec
xchg
add
push
loop
pusha
shlb
cmp
roll
out
mov
fdivrl
popa
jns
push
mov
into
xchg
mov
pop
pop
mov
mov
jecxz
push
mov
shll
mov
sbbb
lret
call
jl
sub
nop
lahf
dec
mov
and
add
inc
stos
test
repnz
popf
sub
xor
ret
add
xchg
mov
call
test
fsubl
sub
cmpb
jecxz
mov
mulb
pop
adc
inc
sti
add
sbb
pushf
xor
mov
cld
shl
sub
push
xchg
sub
stos
add
fisttpl
mov
aad
loope
popa
dec
jne
cmp
cmp
jns
inc
and
jg
pop
inc
pusha
pop
and
dec
arpl
mov
insb
mov
pop
sub
and
and
unpcklps
fadds
xlat
dec
les
out
shl
loop
push
jl
imul
adc
int
add
movl
fwait
repz
jno
sbb
repz
cs
pop
cmp
or
or
and
adc
vunpcklpd
jl
icebp
mov
or
dec
push
inc
push
or
into
ss
and
mov
sbb
sub
dec
pop
cmpsl
lcall
sti
das
xchg
icebp
push
and
jne
rcr
fstp
add
sbb
mov
daa
jmp
lret
cmpsl
cwtl
pop
pop
aam
cmp
sti
cmp
xchg
sbb
cmpb
cmp
in
inc
xchg
mov
ljmp
dec
in
push
inc
push
adc
dec
add
inc
jmp
sbb
jo
mov
popa
dec
cmpsl
jb
cltd
aad
push
data16
adc
mov
inc
sub
out
scas
out
lea
sub
mov
movsb
mov
adc
xchg
jnp
ljmp
push
xchg
outsb
sbb
cmp
xlat
lcall
jge
inc
shlb
sbb
xor
fwait
inc
sbb
imul
cmp
cmpb
sbb
in
movsl
std
adc
mov
in
ss
pop
xchg
push
cmpsw
push
or
pop
mov
ds
xchg
aad
mov
rcrl
into
daa
xchg
add
fmul
arpl
sahf
popf
xor
or
and
lods
js
repnz
xchg
das
lcall
gs
shll
cmpsl
mov
jne
inc
jbe
sub
dec
mov
sub
jnp
ret
test
dec
pushf
enter
icebp
dec
nop
movsb
lret
popa
popa
repz
aaa
mov
inc
aad
push
popl
mov
add
sub
bndstx
clc
call
fisubrl
jle,pt
test
xor
nop
sbb
lcall
gs
inc
dec
sahf
sbbl
fmulp
fbstp
sbb
sahf
and
mov
scas
cmp
add
scas
pushf
jmp
mov
xchg
mov
ret
sarl
xorb
inc
mov
sub
sub
dec
jp
push
test
inc
xchg
add
lea
std
mov
dec
fwait
popa
and
adc
mov
jbe
push
fbstp
dec
mov
add
addr16
aas
hlt
xchg
jne
cmp
mov
xchg
cwtl
shrb
mov
fisttpll
inc
jno
sub
cld
xlat
xor
adc
pop
icebp
sub
xchg
pop
es
jle
fdivrs
pop
fmuls
sub
int
push
hlt
std
jg
jge
sub
sbb
push
jg
jecxz
add
mov
jecxz
scas
pop
mov
stos
lcall
jns
pop
leave
pop
sub
jo
push
roll
repnz
cltd
dec
or
dec
adc
rclb
xchg
sub
js
adc
jmp
sbb
sbb
rcr
or
das
rclb
xor
xchg
les
sbb
xchg
push
jl
test
mov
nop
sbb
enter
ja
in
scas
fidivs
jle
mov
lcall
popa
mul
mov
xor
jmp
sbb
aam
pushf
pop
or
jp
push
adc
adc
fcomip
pop
and
and
pusha
sub
cmp
fdivs
mov
int3
inc
pop
xor
leave
push
push
xchg
jp
mov
mov
shrb
xchg
pop
roll
xor
mov
call
mov
mov
repz
popf
mov
or
push
into
or
stos
cmp
xchg
mov
inc
fwait
ret
imul
and
into
imul
in
fnstsw
gs
mov
testb
shrb
jo
add
or
sti
xchg
lcall
inc
rcrl
and
ffreep
dec
push
cld
cmpsb
lcall
ror
insl
ret
push
jg
cmp
in
mov
pop
ss
cmp
push
xchg
push
sub
and
or
int
fabs
and
cmp
pop
js
nop
pop
mov
or
dec
outsb
inc
mov
mov
ss
mov
dec
das
fmuls
push
das
or
mov
sti
call
cmp
cwtl
mov
xor
xchg
lods
mov
push
sti
sbb
jbe
and
sahf
in
scas
int
dec
pop
movsb
adc
test
icebp
push
mov
xchg
cmp
push
outsb
fsubl
dec
pop
outsb
in
dec
shrb
xchg
ljmp
push
inc
mov
dec
std
sub
loope
cmpsl
aad
xchg
push
and
xchg
mov
xchg
adc
or
inc
xor
adc
push
xchg
movsb
pop
mov
imul
das
negb
lcall
ljmp
mov
sar
fs
pop
xor
fcmovu
into
pop
ret
stc
jle
mov
inc
imul
fs
test
push
lods
add
add
push
loop
jo
popa
and
shrl
call
es
sbb
movsl
leave
aaa
jl
leave
mov
stos
and
icebp
imul
mov
arpl
push
jp
xchg
loope
push
int
pop
push
imul
and
ljmp
cmc
gs
shll
ljmp
pop
jne
inc
inc
addl
icebp
std
push
pop
rcrb
in
jno
inc
std
or
dec
incl
fnstsw
movsb
imul
mov
stos
jmp
sbb
jne
mov
or
mov
ficomps
adc
xor
aas
xchg
and
or
inc
int
sub
sbb
popa
add
jp
sub
xor
inc
dec
or
js
adcl
lds
mov
jns
push
pop
addr16
pushf
sub
dec
fadd
mov
cmp
popf
out
in
test
jle
ds
pop
cmp
rol
or
mov
dec
insb
lahf
scas
cmpsl
push
and
adcl
jmp
dec
xor
fwait
adc
mov
aad
pop
aaa
lcall
ss
lods
fcmovnbe
mov
ds
aas
fildll
and
xor
out
into
fxch
adc
mov
sti
or
push
sub
and
int
xlat
testl
mov
popa
aaa
popf
stos
and
insb
and
push
scas
and
xor
dec
cmp
and
movsl
inc
mov
sub
out
dec
jmp
jbe
clc
int3
add
decl
push
stos
adc
rorl
push
mov
repz
mov
subb
mov
lret
xor
jge
ds
fsubrl
mov
sbb
jg
push
movsl
sarl
movsl
add
dec
out
dec
jbe
pop
mov
stos
xor
jg
jl
sbb
sub
bound
sti
scas
xor
xor
test
fs
imul
lcall
cs
cmp
fs
inc
test
inc
mov
and
shrb
out
pop
ret
aaa
bound
xchg
adc
inc
aad
fisubs
push
in
test
lcall
cmp
mov
mov
dec
xlat
cmp
cmp
mov
cli
shrl
loop
pop
jae
sub
pushf
jnp
mov
jb
jbe
cmp
testl
ret
mov
loope
xchg
ja
pop
push
shl
loopne
into
popf
push
xchg
push
inc
popa
push
and
shl
sub
in
addb
dec
dec
xchg
dec
stos
repz
cmc
loop
or
imul
xchg
add
push
inc
sti
jle
das
pop
adc
sbb
outsb
dec
int3
sub
lods
cmpsl
call
cmp
push
push
xchg
jmp
mov
sub
inc
sahf
pusha
jnp
inc
movsb
sub
ss
das
stc
ret
jae
cmp
mov
or
xor
mov
and
shlb
inc
ret
xor
cmpsb
fdivs
and
loop
ss
enter
ljmp
icebp
mov
push
add
sti
loop
outsb
mov
jecxz
je
mov
rorl
xor
cmp
mov
sbb
push
mov
subb
cmc
mov
aaa
in
xor
mov
ja
je
xchg
test
push
mov
sbb
push
xor
inc
pushf
lret
pop
lahf
adc
sti
stc
sub
cmp
fimuls
lret
repnz
jnp
hlt
sub
jecxz
xor
xchg
xor
into
es
jle
addb
aaa
pusha
dec
inc
xchg
icebp
push
daa
mov
push
aam
sub
sub
mov
add
les
shll
mov
negb
loopne
dec
xchg
out
xchg
lock
pop
cmc
nop
sub
inc
push
push
lret
pop
popf
shr
xor
pop
mov
push
adc
sub
jns
ret
test
push
ds
mov
arpl
pop
repnz
into
lods
mov
mov
pop
icebp
push
in
dec
icebp
pop
bound
fcomps
xchg
jb
imul
lcall
rorb
sub
push
sbb
xor
adcl
lret
xor
outsb
jmp
dec
mov
push
pop
test
mov
inc
leave
sbb
stc
push
sti
push
cmp
lods
mov
and
cmp
mov
fistpl
and
cmp
mov
repnz
int3
sbb
adc
out
inc
inc
inc
dec
xor
test
gs
and
jb
jne
arpl
movsb
dec
push
iret
sbb
movsl
filds
test
outsl
add
fiadds
jne
je
pop
xchg
xchg
mov
aas
fs
cmp
dec
dec
cli
es
jl
das
shl
bound
pop
dec
aam
jnp
sarl
nop
xchg
xchg
xchg
sub
clc
pop
sahf
cmpsl
fucomip
fidivs
sub
and
xchg
lea
cmp
outsl
xor
push
xor
mov
dec
mov
push
dec
out
add
pop
in
and
lret
push
and
sub
cwtd
jecxz
mov
repz
and
xchg
subl
cmp
xchg
cld
jp
pop
fs
movsb
test
pop
aam
jbe
repz
out
sub
mov
out
mov
stos
es
mov
mov
and
pop
fmulp
maskmovq
idivl
mov
imul
cmp
pop
stos
xor
pop
or
arpl
shll
movsl
rcrl
loopne
jl
insb
push
push
cmpsl
scas
in
dec
pop
stos
mov
dec
add
mov
jmp
xor
mov
xor
inc
xor
popl
in
or
push
mov
push
sbb
fdivrl
mov
inc
push
sub
pop
mov
in
cmp
movsb
adc
pushf
fcoml
shlb
mov
outsb
lahf
adc
or
sub
mov
and
adc
cmp
cmp
mov
stc
lahf
mov
or
dec
mov
in
test
call
lea
movsl
jg
lea
vprotb
add
push
jl
cmpsb
popa
jae
add
hlt
jp
cli
mov
fiadds
jbe
inc
leave
sbbb
xor
insl
ficomps
xchg
inc
nop
in
roll
int3
sbb
test
sub
mov
movsb
xchg
cmp
hlt
jmp
rcll
pop
cmpb
inc
cmpsb
jne
shlb
pop
popf
pop
insl
add
out
mov
insb
idivb
imul
in
dec
mov
pop
hlt
push
insl
sbb
pop
test
outsb
jl
dec
jo
ja
ds
aas
xor
push
mov
pusha
xor
or
cmpsb
xchg
sbb
jmp
xchg
fwait
xlat
sub
mov
aad
popa
jg
push
push
xchg
pop
imul
js,pt
inc
xor
add
xor
leave
push
lahf
push
and
adc
repz
mov
add
xchg
add
mov
mov
sub
sbb
lahf
mov
sub
and
fdivs
mov
imul
repnz
jae
xor
clc
dec
dec
cwtl
jle
xor
int
adc
gs
dec
fcoms
xchg
xchg
inc
pop
ljmp
popf
andl
dec
lods
loop
pop
adc
pop
xchg
or
cli
ljmp
rolb
lret
add
mov
adc
movsl
sub
mov
adc
inc
outsb
iret
lret
cmp
jns
repnz
into
imul
cmp
push
xor
inc
adc
les
sar
add
adc
lods
hlt
jbe
and
imul
push
out
sub
fucom
cmp
pop
lret
dec
and
mov
cli
push
jo
cmc
out
mov
data16
xchg
xchg
in
push
and
sahf
sub
sbb
dec
jae
call
lock
pop
mov
out
pop
jo
jl
ret
sbb
jns
push
movsb
cmp
or
stos
push
mov
cs
out
xchg
in
cmp
and
or
pop
sahf
jmp
add
scas
mov
fcmovnu
add
xor
mov
sub
scas
test
notl
lcall
or
call
fldl
mov
xchg
aaa
repz
or
push
loope
xor
push
bnd
int3
movmskps
andb
adc
add
sti
lcall
scas
lahf
js
inc
or
add
cmp
cmp
pop
aad
cmp
loopne
mov
lods
mov
pop
dec
std
dec
xchg
jae
dec
pop
sub
lahf
mov
inc
popa
scas
stc
mov
pushf
ljmp
scas
sahf
sbb
sbbb
xchg
rcrl
mov
movsb
pop
popa
sub
ret
outsb
and
push
je
mov
fstpl
insl
in
and
push
cmp
jne
inc
dec
lret
clc
repz
jbe
and
pop
imul
les
aad
pop
cmp
es
xchg
and
dec
mov
xchg
adc
pop
dec
test
mov
test
mov
cwtl
es
push
inc
in
push
lods
roll
cld
push
stos
incb
iret
aas
lahf
iretw
int
cmpsb
or
mov
inc
ljmp
repz
out
sub
cmpsl
pop
cmp
mov
mov
aaa
fscale
rorb
cld
xchg
mov
mov
ss
pop
shlb
mov
mov
cmpsl
mov
addr16
mov
out
jnp
aaa
push
scas
or
stos
call
jl
jnp
xchg
inc
daa
add
orl
or
pop
push
movsb
add
or
out
dec
call
push
loop
mov
sub
fucomi
or
pusha
test
cwtl
cmp
shlb
pop
mov
lahf
adc
stos
jge
shlb
out
data16
cmp
sahf
subb
idivl
add
fdivr
aas
push
cmp
inc
mov
lret
jle
loop
out
xchg
dec
movsb
mov
incl
pop
cmp
ja
mov
es
xor
jle
cmp
push
cltd
inc
mov
daa
outsl
fisttpl
stos
xchg
push
scas
pop
pop
fdivs
jbe
adc
dec
xchg
bt
repnz
into
lret
test
add
inc
adc
popf
inc
mov
add
mov
fwait
les
dec
iret
cli
sub
inc
push
dec
test
jl
pop
insl
ret
shrl
sub
cmpl
or
dec
stos
shlb
push
xor
data16
aad
jg
cmpsb
jo
repz
jmp
aaa
dec
je
xlat
ret
add
sbb
in
and
out
fidivrl
stc
std
stos
lods
cmpsb
dec
add
std
fsts
push
adc
adc
pusha
popl
xchg
pop
xchg
retw
filds
xchg
jo
jne
cmc
and
nop
sbb
or
cltd
xchg
push
dec
scas
les
mov
cmpsl
popa
aaa
repnz
push
dec
dec
xor
xor
and
add
daa
push
cmp
dec
adc
movsb
mov
repnz
mov
pop
aad
sbb
mov
stos
out
sbb
pop
xor
sbb
daa
xor
mov
insb
ficoml
mov
data16
das
jmp
stos
mov
cmp
mov
call
insl
ficoml
add
push
sbb
push
mov
fimull
pop
dec
fisubrl
bound
gs
push
scas
std
mov
mov
mov
mov
sti
add
xor
into
push
mov
lret
popf
xchg
cmp
xlat
subl
shlb
fdivp
mov
push
loopne
or
repnz
inc
adc
xchg
xchg
cmp
xchg
cmp
lock
sbb
aad
enter
sbbb
lock
or
into
mov
jle
cmp
cmpsb
or
cmp
jb
sub
cwtl
pop
andl
clc
repnz
int
idiv
or
rolb
lret
jb
test
lcall
fimuls
jns
shll
sbb
mov
loop
push
dec
xchg
dec
movsb
loope
jmp
ss
push
and
inc
out
inc
xor
call
lock
sub
xlat
sbb
push
and
ss
pop
adc
inc
addl
int
in
stc
mov
inc
je
xor
out
sub
lret
popf
enter
add
rorl
or
pop
xor
adc
cwtl
add
mov
mov
pusha
test
push
dec
push
lahf
mov
add
inc
inc
mov
pop
lcall
fneni(8087
mov
and
repnz
in
frstor
and
in
jae
inc
rcrl
sbb
mov
cmpsb
cmpl
pop
xchg
movsb
inc
dec
mov
sbb
jle
rcrl
or
xor
dec
lret
outsl
sbbb
data16
and
scas
mov
pop
mov
sub
mov
sbb
jb
incl
cmpsb
inc
cmp
cmpsl
push
ja
call
jecxz
jae
adc
stc
mov
xchg
push
clc
sub
sti
sti
xor
dec
lea
stos
mov
or
sub
jmp
pushf
imull
xchg
int3
mov
stc
inc
jp
mov
bound
add
rclb
out
push
das
push
cltd
fmuls
insl
ret
bound
push
std
stos
loopne
adc
pushf
stos
bound
push
aas
xchg
out
inc
out
jg
cwtl
fcomi
stos
pop
pop
aas
fidivrl
and
pop
je
mov
push
xlat
mov
cmc
lret
xchg
add
mov
insb
test
push
or
pop
iret
paddusb
mov
aas
dec
in
jecxz
ret
popa
mov
cli
mov
sub
pop
out
sub
sub
fldt
movsl
inc
jmp
fsubs
sbb
push
xlat
popl
sbb
inc
sub
add
repnz
mov
xchg
cmpsl
sub
jb
and
mov
mov
mov
push
or
dec
pop
rclb
ret
ret
dec
mov
faddp
xchg
scas
jnp
inc
into
lea
dec
sbb
lret
dec
jnp
adc
lds
mov
pop
mov
sbb
xorb
push
or
enter
repz
xchg
ds
push
in
in
and
add
mov
and
pushl
cli
lods
imul
mov
loopne
outsl
aaa
add
lods
shrl
pop
mov
pusha
inc
push
imul
add
inc
jp
and
sti
and
fcompl
imul
adc
jb
mov
sbb
xchg
adc
adc
xchg
cmpsl
mov
cwtl
jecxz
dec
aaa
enter
push
push
cmp
fbstp
gs
xor
mov
pop
loopne
fs
dec
pushf
or
xlat
cmpsl
mov
mov
lods
cmp
dec
lret
mov
mov
adc
xor
arpl
ss
fistpll
pushf
push
popf
xchg
test
sbb
nop
mov
sbb
mov
hlt
pop
and
lods
aas
fdivrl
cwtl
xlat
je
testb
xchg
sub
or
or
jge
or
or
mov
push
pop
inc
addr16
repz
out
mov
shll
xor
sti
aaa
sub
pop
xchg
fwait
xchg
in
jl
pop
repz
mov
cli
fists
adc
scas
mov
sub
xchg
inc
xchg
xlat
xor
pusha
arpl
adc
mov
inc
xchg
and
pop
ret
testb
inc
pop
and
rorl
push
subl
and
int
mov
outsb
add
cli
adc
shr
jno
cmp
repnz
adc
push
xchg
sbb
push
jecxz
mov
xor
inc
test
popa
xor
idivl
rcll
push
jbe
icebp
sub
test
xlat
popf
adc
and
xchg
push
mov
movsb
mov
jecxz
cmp
fcomi
insl
lret
adcb
popf
adc
push
add
addr16
mov
scas
cmp
jno
icebp
add
mov
sbb
imul
aaa
jmp
mov
pop
push
xchg
out
xchg
pusha
pop
sub
inc
lcall
je
push
repz
je
dec
adc
mov
pop
mov
or
inc
das
mov
mov
inc
fucomp
jl
sti
out
inc
sub
inc
out
fsubs
jne
in
jle
xchg
lock
jbe
mov
daa
adc
lea
pop
icebp
clc
leave
sti
adc
leave
fisttpl
xchg
sbb
stos
push
add
outsl
pop
jl
popa
xchg
jg
push
and
inc
inc
xchg
jnp
jecxz
lds
mov
fimuls
sbb
fldenv
packsswb
and
clc
and
push
shll
mov
icebp
or
bt
pop
mov
bound
sarl
pop
mov
pop
adc
push
mov
sbb
addb
add
xchg
sub
inc
xor
fisttpll
mov
lods
push
sahf
sbb
xchg
add
mov
inc
lret
mov
cs
pmaddwd
js
mov
jno
in
pop
int3
and
rorl
inc
mov
sbb
sub
pop
add
and
mov
push
and
dec
into
mov
mov
or
push
gs
ror
push
adc
movb
sarl
push
xchg
test
jmp
pop
mov
jg
jbe
push
cmp
mov
pop
sub
loopne
or
mov
add
ss
aad
sbb
pusha
add
fdiv
add
lcall
cmp
leave
mov
or
adc
sbb
xor
cmp
scas
dec
sbb
das
cmpsb
mov
sbb
cmc
rorl
mov
mov
test
dec
mov
daa
mov
test
xchg
mov
dec
test
add
cs
shll
sub
jl
ss
cli
aad
dec
fiadds
mov
push
cmp
jo
mov
std
pop
iret
int
xlat
arpl
inc
jo
and
adc
stos
jmp
or
mov
lcall
hlt
sbb
sbb
aaa
xchg
leave
sbb
or
popa
sub
into
mov
jbe
inc
adc
icebp
ret
aam
fisubrl
ds
sub
mov
gs
jl
mov
and
cli
pop
lret
aad
rclb
pop
pop
cltd
sar
sbb
je
jno
xchg
push
movsl
clc
xor
mov
xchg
mov
lcall
xchg
rcl
pop
dec
xchg
xchg
lds
add
and
mov
jo
cmp
add
les
cmpsl
fwait
pop
jg
in
add
out
in
imul
mov
sub
cmp
shrb
jge
mov
dec
negl
xor
sub
sti
addr16
call
movsb
cli
mov
lds
in
in
jnp
and
pop
xor
add
mov
das
mov
sbb
xor
andl
mov
rcll
stc
pop
jge
sub
outsl
cmp
rcrb
add
mov
dec
or
ss
jne
adc
mov
addb
es
std
sub
cmp
cmpsb
fildll
jnp
mov
or
and
ds
push
outsl
dec
ja
add
shlb
imul
dec
dec
int
imull
div
ret
inc
adc
push
test
xor
mov
push
jmp
and
sub
icebp
mov
aad
in
jge
pop
std
negb
mov
jne
lods
shrl
sub
jns
loope
outsb
mov
ja
mov
jl
iret
mov
mov
dec
jb
mov
jecxz
xchg
pop
out
mov
jl
repz
sub
sub
inc
add
dec
push
cwtl
mov
push
leave
sub
fbstp
add
adc
mov
out
out
data16
or
jmp
xor
dec
movsl
pop
pop
mov
dec
xchg
xor
jno
sti
shrb
xor
dec
scas
lock
int
jecxz
dec
push
int
js
dec
ja
outsb
mov
stos
push
stos
fldenv
jg
iret
sahf
in
pop
inc
inc
push
jnp
jnp
int3
jbe
das
subb
push
ljmp
das
fwait
sub
mov
cmpsb
aad
sub
les
aad
add
push
mov
movsl
divl
push
pop
pop
loop
outsb
fistps
les
in
std
jne
les
data16
and
ret
add
mov
cmp
movl
add
jb
push
jmp
outsl
fst
or
mov
js
mov
and
in
jmp
pop
dec
mov
pop
or
int
pop
shld
jno
cltd
gs
or
sbb
push
out
cmpsb
and
xchg
ffree
fisttps
jge
cmp
and
into
cli
mov
lret
adc
aam
lret
outsl
cwtl
sbb
je
cwtl
in
mov
sbb
loope
arpl
jo
lcall
movsb
jge
adc
and
jecxz
pusha
xchg
jne
push
xchg
cmp
es
and
andl
xor
lock
scas
dec
mov
and
or
in
mov
fwait
sub
mov
movsb
int3
ss
das
test
mov
mov
popf
push
idiv
dec
fildl
mov
lock
inc
jbe
push
fnstenv
movsl
test
movlps
xchg
pop
test
dec
fnsave
xor
ja
xor
add
cmp
push
aas
push
test
clc
mov
fstpl
sarb
nop
xchg
mov
inc
sarl
jmp
sub
xchg
lret
jo
ljmp
insb
leave
cli
or
repz
dec
push
pop
repz
pop
mul
xchg
and
add
or
add
mov
and
enter
pop
mov
push
mov
mov
or
pop
mov
push
rclb
mov
cld
or
and
mov
in
clc
and
sahf
mov
cmp
mov
test
pop
subb
sub
sbb
push
cmp
icebp
movsb
out
cmp
out
adc
in
movsl
outsl
fsubrp
push
or
test
ljmp
sbb
xchg
xchg
jl
mov
das
xchg
or
mov
adc
cltd
xlat
jo
stos
in
js
clc
cmp
inc
fcmovb
je
push
jle
sub
mov
jle
mov
xchg
fsts
wbinvd
push
inc
add
push
sub
mov
xor
stos
shl
je
add
loopne
jmp
and
xchg
je
jp
jecxz
cmpsl
adc
vandpd
pop
in
adc
sub
lock
sarb
sbb
sub
mov
insl
mov
jp
push
loope
addr16
dec
ret
fsubrp
andl
add
dec
and
icebp
sbb
mov
sub
in
fwait
lds
dec
jecxz
aam
push
cs
jo
mov
fwait
pop
xor
cmp
loope
cltd
push
icebp
mov
sub
dec
insl
lcall
adc
xchg
mov
pop
arpl
jge
shr
divl
int3
xor
out
mov
repz
sub
loop
sub
mov
iret
adc
push
sub
pop
pop
loope
faddl
sbb
aam
pop
pushf
dec
xchg
cmp
arpl
pop
push
daa
inc
test
inc
pusha
clc
jb
nop
test
fcoml
xlat
aaa
leave
lret
popa
outsb
outsl
scas
arpl
test
push
dec
xor
or
aam
cltd
aam
dec
mov
or
xor
jns
mov
xor
add
mov
syscall
cmp
or
cmp
adc
pop
or
jno
xchg
mov
fistps
xor
dec
sbb
xlat
push
lea
vpsrlw
icebp
and
nop
sbb
stos
aad
sbb
arpl
pushf
xor
jmp
sbb
cmp
add
and
data16
pop
xchg
jl
jno
popa
test
mov
leave
xor
xor
imul
mov
cltd
xchg
mov
sar
mov
mov
push
cld
loope
sub
sbb
cmp
dec
aas
and
daa
dec
xchg
fcoml
lock
ja
mov
cwtl
out
loope
mov
and
xor
daa
fnstenv
push
xor
jb
scas
xchg
bound
sub
leave
mov
popa
inc
lret
sub
subb
movsb
sub
mov
mov
sbb
mov
stos
into
leave
test
mov
push
add
fstpl
lcall
movsb
icebp
xchg
aam
pop
xor
pop
sbb
pop
adc
sbb
pop
dec
xchg
dec
xchg
loop
mov
jbe
repnz
popf
jbe
fidivl
jecxz
shlb
arpl
adc
cld
daa
push
sub
pop
pop
popl
sti
push
push
mov
xor
dec
mov
mov
mov
mov
pop
pop
pop
fcmovbe
mov
and
mov
mov
cli
sub
mov
or
mov
enter
outsb
rorb
mov
imul
dec
insl
pop
cmp
pusha
jne
iret
filds
loop
jl
stos
mov
shll
jo
lods
jl
int3
aaa
add
or
imul
loopne
mov
arpl
stc
pop
dec
stos
push
out
push
lret
or
pushf
jb
negb
bswap
sbb
xorl
out
pop
lea
cmpsl
data16
push
je
mov
loop
aaa
adc
add
jp
cmp
inc
xchg
cmp
hlt
lods
jle
call
xor
orb
outsb
xor
push
jnp
imul
rol
sub
mov
dec
lods
push
andl
mov
and
fidivrs
cmp
jp
or
mov
pop
lods
push
aam
and
push
xchg
divl
test
jns
sub
push
aaa
inc
dec
pop
frstor
nop
cmp
fistpll
notl
or
push
inc
loope
xor
test
cwtl
or
push
popa
lock
mov
outsb
inc
imul
push
cmc
stos
pop
pushf
out
pop
xor
aaa
dec
xor
jno
mov
mov
inc
xchg
dec
xor
dec
enter
sbb
xchg
cmpsl
add
loope
lds
test
push
sbb
jmp
dec
roll
stos
outsb
xchg
stos
stos
pusha
xchg
adc
repz
sbb
mov
or
and
in
aaa
xor
dec
out
mov
sub
cmp
aaa
mov
sbb
mov
sub
or
mov
hlt
stos
scas
notl
add
add
mov
sub
fiaddl
mov
mov
xor
push
ss
outsb
sub
stos
fldt
fldcw
fcoml
mov
sbb
lods
inc
adc
mov
popf
xor
or
jno
in
aas
push
mov
sub
outsl
dec
mov
push
mov
lcall
mov
or
mov
mov
adc
pop
or
sbb
ds
sbb
mov
jnp
sbb
fdivrl
cmp
and
dec
in
pop
add
pop
les
mov
fnstsw
sub
inc
xlat
rcll
bound
popa
push
cltd
xchg
mov
sub
jnp
inc
pop
pop
lock
lods
add
ret
sub
cmp
ds
xchg
jmp
loop
mov
jg
jmp
mov
sbbl
lea
outsb
out
push
in
movsb
lock
pop
mov
iret
jle
xlat
add
sahf
call
clc
aad
mov
ljmp
cmp
adc
ljmp
xchg
das
xchg
xchg
add
andb
clc
je
into
adc
test
fisubrl
jb
fists
mov
mov
insb
pushf
mov
shl
nop
cltd
xchg
addl
push
rolb
mov
movb
inc
xchg
sbb
out
or
les
push
add
mov
int3
xlat
leave
pop
mov
and
nop
loope
jge
dec
sbb
in
and
adc
scas
outsl
xor
dec
cmpsb
frstor
mov
or
lock
push
push
mov
push
shrb
pop
cld
cmpsl
jne
xor
jbe
jmp
lahf
push
cmp
jge
cmp
or
aas
rcrb
loopne
jge
xchg
ret
push
mov
jg
mov
push
mov
imul
dec
xor
sti
cmp
negl
rcll
push
and
stos
jl
lahf
les
inc
sub
testb
je
fldenv
dec
pop
pop
xchg
test
xchg
fldl
hlt
mov
scas
mov
pusha
push
mov
push
add
loop
fs
shll
and
jb
int3
push
jo
pusha
nop
shl
mov
mov
jb
jg
adc
gs
or
gs
xchg
out
mov
dec
lret
xchg
scas
mov
arpl
jo
negl
popf
xlat
hlt
push
mov
aad
cmp
aam
test
sbb
sarl
lock
cmp
insb
aad
push
repz
movsl
cmp
xchg
fists
or
xchg
jle
ret
aaa
xor
and
pushf
lods
lcall
mov
push
dec
push
popa
lret
and
and
jge
repnz
aad
or
inc
scas
mov
and
aaa
out
int3
sbb
call
pop
dec
inc
push
xchg
xor
aad
fcoml
cli
sub
movsl
pop
mulb
sbb
movsl
inc
gs
pop
lds
jmp
in
add
imul
sbb
adc
sub
inc
jnp
iret
cwtl
sbb
daa
call
mov
dec
shlb
lahf
fs
pop
rcl
cmp
test
pop
push
cltd
aam
cld
xchg
xor
insb
scas
push
cltd
sub
push
add
xor
jae
inc
xchg
push
adc
test
std
jns
pop
insl
addl
loopne
sub
jge
jle
call
rcl
into
push
hlt
mov
xlat
test
js
outsl
shlb
int
inc
popa
fs
aad
jno
cmpsl
sarb
mov
mov
jecxz
into
inc
test
cli
dec
jg
iret
mov
outsl
in
inc
lcall
fdiv
sbb
punpckldq
int
roll
insl
sbb
and
insb
inc
gs
mov
ss
mov
jae
jg
add
jb
ficoms
std
jbe
push
xchg
mov
stos
xchg
push
outsl
sub
repz
outsb
push
shl
je
cmp
sbb
in
stos
sbbl
daa
es
adc
cmp
inc
inc
mov
std
mov
std
sbb
sub
adc
cmp
gs
push
adc
jbe
aas
enter
outsl
inc
inc
xchg
cltd
pop
and
in
lock
rolb
push
pusha
and
sbb
js
xchg
scas
push
inc
lods
insl
or
jae
scas
imul
lds
adc
je
mov
inc
int3
xor
xchg
test
sub
sti
xor
xlat
sub
cmpsl
dec
ret
leave
cltd
ret
or
in
sub
adc
and
adc
adc
in
pushf
mov
ljmp
jp
mov
movl
inc
cmp
loope
jmp
out
leave
pop
imul
js
add
cmp
mov
mov
in
mov
sub
jl
adc
and
ficoms
stc
ret
sbb
sbb
fstpt
bound
fidivl
movsb
mov
cs
out
rol
xchg
add
xchg
stos
stos
cmp
repnz
mov
scas
mov
dec
xor
pop
mov
aas
mov
pop
lea
fisttpll
iret
mov
and
popf
stos
ljmp
dec
cld
push
lock
fs
xchg
or
cli
loope
popf
test
iret
cmp
xchg
movsl
fcmovbe
pusha
scas
in
test
pop
shrl
in
ljmp
xlat
jns
out
jne
notl
mov
jge
ds
xor
dec
mov
mov
enter
xlat
xor
clc
lods
bnd
cmp
add
jp
sbb
lret
fs
mov
mov
data16
ret
lods
ret
andl
int3
pop
and
jle
repz
mov
rclb
movsl
mov
js
mov
mov
sbb
scas
stc
lcall
mov
sub
outsl
cmpsl
lods
lods
add
jmp
xchg
mov
mov
and
mov
sahf
mov
mov
adc
in
mov
cmp
lret
and
adc
es
jmp
jp
icebp
mov
sbb
push
and
std
sbb
es
lods
jne
or
and
pop
mov
mov
cmp
mov
sbb
stc
lock
roll
adc
xchg
and
inc
aad
inc
push
mov
sub
xchg
xor
sar
dec
fnsave
clc
xlat
stos
popa
clc
sbb
idivb
leave
inc
fmul
icebp
cltd
xor
add
xchg
pusha
mov
dec
sub
loopne
in
repz
in
adc
dec
mov
push
divb
pop
popf
outsb
dec
test
jle
mov
mov
xor
mov
jne
mov
push
pop
cmp
pop
in
stos
xor
mov
push
xchg
cmpsb
cmpsl
add
push
pop
fsubr
jo
lahf
jne
int
jmp
lea
pop
repz
sub
stos
stc
or
push
push
hlt
lods
jnp
mov
mov
mov
fcomi
aaa
cwtl
addr16
jne
sub
roll
mov
fcompl
sbb
iret
adc
pop
lret
fcoms
jle
sub
icebp
outsb
repz
nop
hlt
pop
movsl
xor
es
jb
mov
dec
loopne
mov
push
add
add
fmull
mov
js
mov
pop
sub
int3
insl
push
mov
mov
fidivs
jl
daa
ss
arpl
mov
push
loope
in
cld
xchg
adc
lea
inc
jb
dec
and
jns
ljmp
bound
or
jnp
popf
mov
and
lcall
push
inc
mov
dec
xlat
inc
cmc
and
xchg
jmp
lcall
jne
xor
xchg
or
lods
push
aam
stos
cltd
lock
std
jge
into
push
xchg
mov
fstl
mov
xchg
xor
or
rol
stc
stc
xchg
loop
adc
adc
clc
mov
push
and
push
lret
movsl
jae
std
arpl
sbb
gs
jp
adc
push
push
popf
mov
inc
into
xlat
lock
xor
xchg
aaa
divb
mov
push
mov
shll
lods
cmp
cli
dec
xor
pop
in
pop
push
fsubs
push
data16
lods
ret
pop
sub
fsubrs
fs
and
cmp
push
adc
pop
mov
mov
jno
jnp
sub
ja
les
adc
das
sbb
and
add
mov
sbb
push
je
sbbl
test
mov
and
cmp
mov
lods
push
gs
xor
imul
daa
push
call
inc
rolw
jns
dec
or
dec
psllq
iret
rclb
stos
dec
movsb
andb
dec
fcmovbe
sub
loopw
xchg
xchg
pop
xchg
mov
push
enter
mov
push
jl
xchg
push
xor
xchg
ror
mov
pop
mov
std
pop
dec
mov
xchg
clc
insl
add
mov
or
fisubl
inc
mov
cwtl
mov
in
add
jl
xchg
adc
clc
pop
movsb
pop
out
std
in
adc
inc
sbb
enter
fmul
dec
out
sahf
xor
xor
xchg
dec
mov
pop
popf
std
jb
jle
ficoml
loope
inc
mov
sar
xchg
add
push
pop
fwait
dec
sahf
cltd
out
dec
mov
popa
mov
mov
addr16
scas
sub
cli
push
add
out
cmp
roll
pop
xor
in
popf
shl
mov
lds
push
pop
imul
or
xor
test
std
cmp
mov
aas
xor
outsb
out
or
jns
jg
and
or
iret
xchg
ja
rcll
nop
add
lahf
lret
lret
pop
mov
push
or
pop
dec
aam
push
mov
nop
adc
repnz
pop
pushf
dec
fwait
jb
cld
add
fcompl
jno
xchg
inc
pusha
je
mov
jne
adc
in
push
push
pop
cmc
inc
xchg
stos
xor
in
repz
cmp
or
fwait
xchg
mov
push
sub
sub
sbb
inc
call
cmp
loopne
in
xchg
jbe
mov
int3
jecxz,pn
push
mov
pop
dec
cwtl
jnp
or
movsl
mov
dec
les
ss
std
xchg
fwait
jo
inc
mov
movsb
xchg
adc
out
cmp
test
add
pop
mov
test
ja
test
and
or
fcomip
jp
aaa
adc
inc
dec
cmp
cmp
mov
ja
mov
push
push
mov
adc
cmp
cld
int
mov
adc
add
push
loope
sahf
jmp
stos
inc
dec
stos
xor
lds
jle
fcomps
call
fisubrs
movsl
cmp
push
aad
push
cmp
cmp
scas
shrl
xchg
pop
scas
adc
aad
call
clc
xor
push
mov
pop
rcl
dec
sbb
jmp
ss
add
daa
cmp
out
add
shlb
mov
pop
mov
insl
push
test
or
stc
je
xchg
and
xor
mov
test
fcoml
and
sahf
mov
pop
jp
leave
mov
lea
inc
aas
push
sarl
lods
sub
jg
insl
pop
xor
sub
add
out
sarb
aam
xchg
jae
dec
cmp
dec
ljmp
jl
mov
and
arpl
mov
or
clc
and
and
psubsb
sub
cs
mov
jnp
addr16
push
les
sbb
jnp
add
inc
out
cmp
data16
mov
mov
xchg
movsl
xlat
leave
mov
es
xchg
fwait
or
data16
xchg
or
es
push
and
fidivrl
mov
test
jle
jle
mov
mov
sbb
aad
iret
cmpsl
imul
test
adc
in
gs
test
cvttps2pi
push
fxch
jmp
mov
dec
cmp
pop
jo
jmp
aaa
pop
lods
rcrb
jbe
adc
xor
ret
movsl
xor
pop
orb
cmp
sbb
imul
sahf
sbb
call
out
dec
mov
arpl
aad
clc
add
sbb
repnz
repz
sbb
mov
push
ja
xchg
pop
js
mov
add
mov
fsts
xchg
repz
push
ss
fwait
pop
push
pusha
xchg
pop
arpl
ret
push
lods
or
xchg
js
fldcw
sub
imulb
pop
mov
lret
loope
ret
test
fidivrs
fnstcw
jne
xchg
aad
or
add
fwait
cmpb
xchg
inc
mov
sahf
out
adc
sub
ds
int3
add
mov
in
js
inc
jge
mov
sarb
test
pop
xchg
std
adc
cld
addr16
cld
sbb
in
bound
push
lock
cmp
out
aam
lret
pop
sbb
or
push
inc
sbb
or
pop
out
notb
cmp
sbb
mov
adc
and
les
push
sbb
cwtl
mov
sbb
jg
lods
add
mov
imul
clc
mov
jle
ss
xor
ja
jge
bound
mov
push
xchg
jae
popf
cmp
xor
out
add
shlb
and
faddl
mov
stos
cmp
mov
dec
dec
jl
jb
seto
addl
cltd
ret
aam
ds
fldcw
adc
in
xchg
xor
mov
xor
into
dec
push
out
pop
clc
in
xor
push
push
fst
fdivrs
les
cmp
xor
add
mov
aad
or
in
jmp
cmc
lret
mov
outsl
rorb
push
es
out
fldl
insl
std
out
cmovbe
mov
or
test
add
mov
push
dec
inc
cmp
jmp
push
fsts
insb
sub
cmpsl
or
sbb
xor
pop
aas
hlt
mov
lock
cmp
pushf
mov
mov
rcl
xor
inc
xchg
xchg
dec
and
clc
pushf
into
scas
rorb
sub
inc
and
outsb
cmpsb
jno
sub
xchg
mov
orl
mov
test
int3
push
inc
xchg
popa
fnstsw
ret
and
insb
mov
sahf
jae
shlb
and
psubq
mov
jb
testb
flds
pop
in
ss
xlat
shlb
jnp
pop
inc
jl
xchg
insb
inc
dec
ljmp
dec
enter
cmp
shrb
sub
nop
pmuludq
push
xchg
jmp
xchg
lods
xor
mov
pop
into
enter
lcall
lahf
ret
inc
scas
cmp
inc
and
dec
mov
lods
nop
mov
mov
cmp
stos
inc
inc
fs
repz
or
in
mov
adc
mov
cwtl
sub
cli
mov
inc
mov
in
adc
mov
jmp
sti
jo
push
ficompl
dec
cmp
mov
call
fwait
pop
mov
cmpsl
cmp
enter
jbe
nop
sub
aas
adc
notb
mov
cltd
or
les
sti
int
xchg
les
xchg
mov
nop
and
lea
xor
sbb
xor
ret
stos
int
flds
jo
repz
call
in
loope
test
shll
notb
mov
rorl
popf
rorl
imul
xchg
lea
in
inc
and
mov
test
rcrl
xorb
arpl
mov
and
hlt
imul
mov
ror
xchg
sub
and
sbb
xchg
lret
lldt
xor
or
or
adc
jb
lahf
int
sahf
xchg
ficompl
cli
mov
inc
ret
add
lea
cmp
int3
mov
cmc
pop
push
xchg
rolb
mov
cwtl
pop
push
mov
ljmp
pop
cld
pop
pop
lret
mov
cltd
stos
mov
or
xchg
faddp
call
or
sub
pop
test
cmp
sbb
mov
mov
jge
out
into
xchg
xchg
int3
arpl
xor
loope
xlat
mov
mov
shlb
ss
das
jecxz
mov
sbb
push
cli
inc
pop
repz
push
mov
ret
or
insb
pushf
inc
mov
sahf
xor
lods
xchg
and
sbb
aad
mov
ss
jg
mov
fwait
mov
push
mov
push
js
pusha
add
fmulp
mov
mov
adc
lcall
or
or
addr16
inc
inc
pop
ds
das
movsb
push
std
dec
cmc
sub
jp
enter
rcrl
cmp
jno
cmp
xchg
outsl
xor
cld
jg
fstps
aad
cli
fwait
jns
xor
andl
mov
adc
pop
mov
loopne
and
xchg
lock
xchg
shlb
in
dec
push
fwait
andl
sarb
jns
lods
orb
ljmp
test
sub
lods
lahf
mov
sbb
and
xlat
mov
dec
in
cs
or
adc
jo
sbb
mov
xchg
pop
or
push
aad
mov
iret
lea
lods
jg
mov
xchg
adc
and
cs
jmp
cmp
mov
notb
xchg
adc
and
push
push
or
sarl
ficoml
pop
int3
xlat
out
add
mov
iret
and
mov
mov
inc
push
xor
sub
push
fs
cwtl
jge
mov
inc
mov
ret
inc
jl
inc
in
in
lock
movsl
push
pop
add
mov
pushl
xor
enter
test
mov
addl
push
loop
loop
push
pushf
jp
mov
nop
xchg
out
test
loope
push
xor
addr16
mov
add
xchg
cmc
sahf
js
in
jmp
outsb
pop
fwait
orl
cmpsb
xor
xchg
and
leave
cmpsl
mov
out
out
testl
pop
mov
mov
mov
in
fs
xchg
mov
int3
cmp
lea
ds
fistpl
and
jmp
xchg
scas
cmp
das
cld
shll
inc
jno
icebp
in
mov
xlat
xchg
ss
loopne
inc
insb
or
or
lods
push
addr16
dec
test
addr16
push
stos
imul
dec
pop
ja
into
fsubrs
xor
cmpsl
scas
push
add
jecxz
mov
adc
or
inc
pop
fadds
and
orl
and
mov
js
pop
mov
add
shl
popa
mov
ja
push
loopne
xchg
xor
hlt
mov
scas
inc
lcall
pop
mov
push
hlt
aas
mov
mov
popf
add
movsl
cwtl
xchg
pop
arpl
daa
call
sarb
cwtl
add
and
scas
jo
rclb
outsl
pop
pop
push
adc
jbe
rcll
movsb
inc
std
sbb
aas
ror
fistl
and
movl
xchg
xor
pop
clc
sub
jecxz
ds
push
pop
imul
xlat
repnz
clc
jno
fists
inc
in
xor
pop
pop
mov
aam
test
cs
lcall
data16
fisubs
das
push
arpl
sbb
dec
fisttpll
negl
stc
fs
idivb
ficoml
xchg
mov
leave
cs
idivl
hlt
js
and
adc
fisubrs
push
pop
and
xchg
ror
faddp
sbb
imul
pop
dec
in
cmp
cmp
daa
mov
loope
mov
stos
jnp
arpl
dec
lods
pushf
jb
test
adc
cmpsb
inc
dec
mov
roll
rcrb
mov
push
data16
inc
dec
push
lahf
into
jp
call
mov
fldlg2
pop
mov
sbb
mov
adc
xchg
jecxz
addr16
or
cli
xor
adc
pusha
fsubl
fimuls
add
mov
arpl
hlt
sub
jge
je
push
popf
cmp
lahf
nop
lahf
cmpsb
adc
cmpsb
movsl
pop
add
mov
cmpsb
push
test
inc
sub
add
aaa
mov
mov
adc
jo
cmp
and
xchg
push
mov
cmp
adc
or
loop
psraw
push
sbb
xor
filds
add
aas
imul
out
pop
mov
repnz
mov
push
sbb
les
cwtl
cmp
jae
sub
repz
fiaddl
loopne
lea
mov
cmpsl
stc
iret
inc
or
and
cmp
push
pop
jecxz
mov
mov
int
popf
out
jno
sub
fcomp
lds
test
pop
cli
jle
jmp
mov
cli
xchg
loop
add
xor
cs
push
inc
sbb
into
push
inc
test
inc
je
fstpl
cld
imul
into
je
dec
mov
ss
dec
inc
cmpsb
test
insb
mov
cmc
inc
daa
or
xor
push
testb
xor
mov
adc
test
icebp
or
jae
push
inc
mov
outsl
pop
adc
fxch
dec
pop
cmp
and
jns
aas
xchg
insb
pop
or
aas
cmp
cli
xor
jbe
jb
mov
mov
push
mov
mov
cwtl
call
sbb
mov
pop
in
fstpl
dec
inc
cmpsb
and
jbe
call
sub
sub
jge
push
dec
pusha
xor
or
inc
mov
decl
cld
fmull
adc
pop
icebp
sbb
xor
fbld
icebp
icebp
fidivrs
and
mul
mov
addr16
mov
lret
jecxz
or
adc
cmp
sub
push
fsubs
test
aam
addl
add
aad
or
dec
sub
and
scas
mov
adc
lret
cmc
inc
lret
push
push
adc
pop
pop
xchg
inc
inc
in
dec
faddl
ljmp
xchg
inc
add
inc
pushf
jle
xchg
jge
and
out
xchg
lret
push
inc
icebp
ja
ret
xchg
fadd
push
or
out
sti
arpl
out
ret
jecxz
test
fldt
sti
mov
inc
loop
push
adc
testb
decl
fwait
das
setle
dec
lret
xchg
popf
sub
hlt
adc
mov
pop
sub
je
data16
rcr
xor
xor
jmp
xor
stc
and
adc
sub
mov
movsl
repnz
xchg
dec
lock
das
aad
mov
or
stc
sub
je
icebp
push
sbb
xchg
arpl
add
enter
pop
jmp
xlat
stos
addb
cs
mov
xchg
in
inc
cmp
inc
stc
movsl
js
popa
xor
mov
fcomps
pop
rcll
push
in
jbe
push
sahf
fidivs
xchg
xor
mov
leave
jmp
xchg
adc
cld
cmp
add
pusha
and
push
add
xchg
xchg
daa
add
mov
loopne
in
fwait
inc
lret
sbb
cwtl
in
xchg
lcall
pop
cmp
sub
and
inc
jbe
cmpsl
mov
mov
pop
out
lods
add
stos
cld
push
push
sti
test
mov
inc
stc
sbb
test
xor
and
scas
nop
mov
inc
inc
and
xchg
and
adc
shlb
jecxz
lds
mov
inc
setl
mov
scas
movsl
lcall
negb
mov
push
iret
addr16
and
xchg
mov
or
jmp
mov
mov
fs
sbb
cmp
pushl
into
enter
push
mov
add
ds
mov
jo
jae
or
mov
jle
push
sbb
test
jle
pop
popf
scas
xlat
lods
push
pushf
enter
xor
or
fdivr
adc
cmpsb
cmp
int
sbb
pushf
and
xchg
ljmp
sbb
mov
pop
cmp
mov
push
cltd
js
dec
mov
pop
cwtl
sbb
or
pushf
sbb
add
lds
mov
loopne
test
dec
scas
pop
scas
scas
mov
std
sti
imulb
sbbl
xor
aad
mov
arpl
repz
adc
mov
mov
cmpsl
push
sbb
in
pop
xchg
add
sbb
data16
push
sbb
repnz
add
jns
mov
shll
imul
sub
sub
sub
dec
xor
sub
mov
mul
add
cmp
stc
push
pop
in
push
sahf
lock
mov
daa
or
inc
cmp
pop
fsubl
jge
push
out
shlb
je
add
lret
int3
push
ret
out
incb
ja
stos
push
or
aas
push
sbb
and
add
dec
jl
cmpsb
pop
and
xorb
pop
cltd
adc
sub
subb
add
jno
ss
lea
cmpsb
mov
imul
aaa
pop
mov
loopne
in
mov
jmp
inc
dec
mov
out
pop
xor
or
pop
imul
xlat
jmp
xchg
xchg
jno
pop
call
mov
test
ljmp
out
scas
ja
cli
aas
shlb
lods
pop
xor
xor
insb
sub
push
push
mov
mov
outsl
push
lock
sub
sub
dec
popf
aaa
fimuls
xchg
rcll
mov
inc
or
cmp
cmpsl
push
negl
or
pop
shrl
mov
mov
orl
sub
lods
movnti
lcall
mov
iret
add
jae
sub
pop
xchg
add
icebp
mov
add
mov
push
fidivs
cmpsb
es
cmpsl
cwtl
repz
les
inc
das
cmpl
or
cmpsl
pop
int3
push
push
data16
mov
or
mov
imul
imul
out
fstpl
clc
jl
push
sub
push
jae
xchg
cli
lret
aad
sti
mov
rcrb
xor
inc
rol
xchg
das
pop
aas
fwait
push
and
jecxz
rorl
hlt
sti
mov
sbb
lods
lods
xchg
xchg
popf
or
jmp
fsubp
sub
cmova
int
xchg
in
sbb
jne
pop
jmp
clc
fwait
mov
es
aad
outsb
popa
leave
aad
push
mov
je
mov
aas
rclb
add
cmp
popa
ret
inc
sbb
ss
jns
mov
cmp
adc
pop
out
and
mov
jnp
cli
out
mov
mov
leave
daa
or
pop
ljmp
jb
popa
movb
cmc
xor
aam
lods
sub
mov
push
pop
and
fdiv
mov
cltd
shll
cld
cli
repnz
outsl
cmpsl
or
add
mov
push
arpl
mov
imul
out
dec
cmp
xor
xchg
cmpsb
mov
cmp
jnp
ljmp
sbb
sbb
or
add
push
mov
icebp
inc
pop
add
mov
mov
idivb
add
or
repz
sti
lods
mov
and
mov
cs
pushf
xchg
scas
movsl
dec
jg
sbb
push
fwait
sub
jns
mov
fs
push
imul
and
lds
fsubrl
ja
scas
mov
ret
dec
rcrl
dec
inc
mov
sbb
out
sbbb
and
inc
or
pop
cltd
cmp
punpckhdq
cmp
dec
xchg
jne
xor
scas
and
inc
adc
jmp
das
and
mov
pop
insl
push
shl
xchg
leave
popf
jmp
testl
pminsw
push
mov
push
and
int3
mov
sub
jp
jnp
dec
into
cwtl
adc
add
jg
and
push
test
movsb
cmp
cmpsb
stos
or
push
loopne
int
or
sub
popa
xor
xlat
insl
jae
in
int3
or
xchg
sbb
push
pop
xlat
shlb
ja
repnz
lds
adcb
imul
mov
fdivl
imul
push
decb
push
and
sub
imul
sbb
aas
enter
std
pop
leave
repnz
mov
xchg
xor
gs
ficoms
insb
push
stos
ljmp
adc
popa
mov
push
sbb
jmp
insl
rorb
insl
sbb
stos
jmp
sbb
out
add
add
push
loope
clc
sbb
pop
xor
addl
shl
sahf
and
mov
mov
lea
fcomp
push
adc
inc
mov
sub
sbb
jne
xchg
xchg
dec
jae
icebp
mov
rcrl
cmp
mov
push
movsb
cmp
test
xchg
jo
mov
mov
and
xor
push
int
and
iret
cmp
add
lods
sub
sub
adc
xchg
shrl
xor
add
lahf
arpl
sbb
dec
push
test
in
cmp
cmpsb
dec
xchg
push
lahf
aam
jbe
push
push
dec
add
push
push
xor
addr16
ret
pop
mov
xlat
mov
insl
das
aad
adc
out
mov
jle
cs
jns
jno
rcrb
jo
jle
inc
add
out
int3
mov
std
pushw
ret
xor
fwait
mov
sahf
mov
pop
fistpll
mov
wbinvd
insl
sti
jg
sbb
inc
mov
jge
mov
push
repnz
jns
inc
jae
mov
lcall
es
out
sbb
out
xchg
lret
mov
mov
mov
or
jns
jns
ret
mov
hlt
push
das
in
fisttpl
push
jne
mov
int3
dec
cmp
inc
rcl
xchg
jmp
cwtl
sarl
xchg
adc
stc
hlt
aad
or
lahf
cmp
xlat
sbb
cmc
scas
jmp
cmp
das
mov
xchg
out
clc
loop
pusha
retw
xchg
mov
les
xor
shlb
or
sub
repz
push
jne
andb
mov
in
xor
pop
divb
stc
scas
push
xchg
jns
adc
cmc
or
int3
adc
and
add
lret
pop
jae
push
push
outsb
sub
mov
jp
je
test
xchg
push
mov
inc
sbb
in
gs
push
lcall
out
loope
pushf
inc
inc
push
cmp
lods
cli
add
cmp
pusha
loope
rorl
icebp
call
cmpsb
xchg
cmp
add
jns
popf
jb
pop
imul
leave
popf
sbb
sti
cmpsl
cmp
lahf
roll
sub
pushf
jmp
enter
push
test
mov
shl
xchg
xor
xor
mov
je
sub
mov
mov
and
cli
jne
xchg
cwtl
arpl
in
ss
arpl
lcall
sbb
lcall
orl
js
add
xchg
pop
cld
jge
adc
dec
adc
ss
xor
fcomps
push
inc
cs
mov
sbb
xor
cltd
mov
mov
push
and
fdivl
popa
jno
fiaddl
cmp
and
sub
xor
fwait
aas
push
jp
push
and
cmp
das
jae
cli
imul
mov
push
movsl
outsl
cmp
or
rol
out
jp
ljmp
inc
shrb
js
sbb
xor
rclb
les
std
and
sbb
or
mov
mov
add
or
sbb
mov
frstor
loop
lods
push
hlt
stos
movsb
jae
pop
int3
mov
and
sbb
xchg
jg
scas
dec
rcrb
and
push
mov
fdivr
or
insl
mov
fs
test
xchg
inc
sub
adc
std
ret
fnstsw
hlt
dec
outsb
push
dec
jnp
aad
and
pushf
dec
lods
cmp
dec
pop
sbb
dec
push
jne
jl
call
arpl
xor
fcomi
test
add
and
stos
bnd
pop
mov
out
xchg
into
mov
in
mov
loope
cli
jl
xor
aad
sub
in
mov
dec
int
fwait
cmp
dec
hlt
sub
adc
jle
leave
mov
roll
mov
jmp
es
lods
adc
dec
push
mov
stos
mov
cmp
enter
cmpsb
adc
jp
call
movsb
jp
addr16
or
cmp
and
pusha
add
inc
addr16
stos
arpl
and
mov
mov
sub
test
inc
inc
inc
add
add
jl
push
pushf
or
pop
out
sti
mov
jnp
cmp
rcl
aaa
lret
lahf
fsub
xchg
inc
jo
add
and
sbb
sub
xchg
shl
push
sahf
adc
stc
jo
jne
lods
aad
inc
push
pop
hlt
dec
add
jmp
test
or
lea
sbb
cs
idivb
dec
or
insl
or
sbb
xor
mov
addr16
cmc
mov
movsl
mov
push
dec
fisttpll
xchg
call
jl
adc
add
sarl
test
or
ljmp
pop
jecxz
test
pushf
or
rclb
and
mov
test
push
mov
in
scas
data16
popf
pop
lahf
hlt
es
scas
bnd
mov
cmp
push
jo
cmp
push
xor
mov
jae
ror
inc
dec
jo
pop
insl
lahf
loope
js
out
punpcklwd
test
int
mov
data16
and
pop
dec
fldenv
es
sbb
add
push
adc
pop
push
jcxz
mov
in
insb
test
push
jmp
jp
mov
les
clc
dec
enter
dec
mov
or
xchg
push
icebp
lods
ret
stos
mov
push
push
mov
push
push
dec
dec
int
loop
imul
das
inc
jne
dec
jbe
stc
nop
mov
aaa
stos
or
xor
jb
or
loopne
imul
and
dec
andb
mov
cmp
inc
mov
and
call
adcl
sbb
fadd
xlat
pop
xor
out
imulb
mov
or
fwait
nop
out
sub
mov
sub
jge
dec
outsl
cwtl
cltd
mov
inc
jbe
call
pop
jle
jle
popa
mov
imulb
adc
jae
stos
ds
cmpsb
adc
les
and
sub
xchg
stc
inc
fcmovb
pop
movsb
into
aam
pop
lods
sbb
int3
std
inc
mov
push
sub
pop
or
shll
imulb
xor
jbe
scas
mov
inc
gs
into
mov
or
push
xchg
pop
mov
mov
shlb
shll
ds
mov
pop
jg
sbb
mov
fldl
rolb
pop
sbb
jecxz
imul
fildll
pop
es
in
xchg
jbe
adc
das
mov
lods
jo
xchg
pcmpgtw
mov
and
sbb
dec
mov
cmp
lods
push
mov
lock
push
xchg
arpl
mov
aad
mov
fnstenv
scas
lods
cli
xchg
mov
jp
cmp
setb
bound
hlt
sub
dec
subb
addr16
std
jg
xlat
lret
xor
xor
ss
and
cmpsb
sbbb
dec
mov
xor
xchg
adc
in
adc
dec
and
jnp
jbe
mov
push
mov
filds
flds
dec
leave
cmpsl
mov
mov
ss
inc
rorl
push
arpl
mov
in
mov
cmp
dec
test
pop
dec
adc
lea
jae
pop
stos
mov
inc
cmc
mov
push
or
cwtl
fnstsw
or
sbb
std
shll
jg
daa
sbb
pop
mov
and
std
cmp
cmp
sub
cmpsl
add
pop
sti
sbb
and
adc
andb
and
test
add
mov
mov
pop
mov
scas
mov
cli
mov
aaa
lret
mov
js
push
pop
sbb
pop
bound
mov
xchg
pop
push
mov
pop
loopne
xchg
mov
pop
push
sub
int
lea
icebp
das
mov
pushf
lock
andb
int
in
mov
je
outsb
iret
cs
inc
sbb
pop
sub
ja
jmp
sbb
insl
adc
pop
push
pavgb
faddl
mov
xchg
mov
cmp
sub
out
push
jnp
add
mov
mov
xchg
cmp
aam
ljmp
pop
push
dec
rcrl
ja
pushf
and
clc
sub
add
sbb
adc
ss
int3
iret
loope
jbe
xlat
loopne
mov
cmp
out
or
outsl
inc
sub
xor
int3
popa
add
pop
dec
arpl
or
test
add
aas
cmp
nop
jbe
ret
mov
and
xor
pop
ja
lods
add
inc
ss
aam
daa
push
mov
mov
ror
rorb
imul
test
cmp
mov
dec
loop
and
inc
mov
sub
pusha
in
jo
ds
pop
jnp
mov
pop
lods
jecxz
dec
mov
nop
mov
xchg
and
aas
mov
out
mov
imul
xchg
fildl
mov
inc
popa
dec
lds
jecxz
mov
mov
push
mov
popf
cmp
cmc
mov
inc
stos
shlb
mov
push
into
jnp
inc
add
fistpll
pop
and
lds
fidivrs
movb
jo
push
ret
push
das
xor
into
into
fcmovbe
or
mov
fcmovne
negl
pop
sbb
add
and
in
mov
mov
dec
dec
rclb
inc
aas
adc
addl
mov
test
mov
mov
lods
lret
sub
xor
out
out
daa
xchg
ret
jl
dec
pop
jl
xchg
dec
mov
stc
stos
test
ljmp
scas
repz
cmp
pop
xchg
mov
push
mov
jl
add
mov
mov
sbb
pop
test
cmc
pop
or
jo
roll
call
and
inc
dec
cmp
imul
dec
je
xchg
movsl
lcall
into
sub
roll
mov
stos
popa
clc
pop
and
arpl
ljmp
or
push
aad
jae
pop
mov
add
into
or
sbb
adc
mov
pop
fstp
sbb
ljmp
xor
inc
mov
aas
push
pop
xchg
mov
adc
lret
repnz
push
sub
out
mov
mov
stc
cmc
mov
xchg
lret
push
mov
popa
jb
jl
add
sbb
push
pusha
imul
in
jne
mov
mov
sti
out
std
fisubrl
mov
sub
fdivrl
scas
or
mov
out
push
sbb
mov
and
ljmp
cwtl
jo
or
rcrb
jbe
pop
push
mov
push
ret
lret
sbb
sub
std
mov
mov
push
cltd
daa
sub
aaa
jle
cwtl
lods
mov
inc
addl
imul
aaa
xchg
insb
insb
in
rcpps
add
stos
shll
mov
call
cld
xchg
push
add
jl
mov
and
das
bndldx
cwtl
adc
fidivs
cmp
dec
popl
std
cmp
pop
adc
mov
icebp
mov
dec
push
in
fnstsw
push
popa
das
pop
out
xor
cmp
adc
push
lods
decl
dec
jae
sahf
shrl
mov
and
or
movsb
lock
mov
mov
mov
cltd
pop
or
outsb
arpl
popa
and
pop
jae
add
cli
mov
jne
and
xchg
mov
sbb
push
inc
jns
add
inc
ljmp
cmp
push
mov
push
out
sub
xlat
pusha
cmp
dec
jl
sbb
xor
lahf
jge
clc
shr
movsl
pop
outsb
sbb
sbb
loopne
xor
mov
sub
test
push
pop
push
mov
repz
daa
push
lea
test
mov
inc
loopne
or
fists
mov
stos
jmp
push
sbb
scas
xchg
stos
fsubl
sarl
jmp
dec
jecxz
movsb
in
popf
inc
jno,pn
xchg
xor
int
js
ror
xchg
pop
in
repnz
adc
mov
rcr
pop
cmp
xchg
sub
cmc
mov
mov
insl
and
test
push
sti
int3
outsb
cmp
cwtl
cmp
or
mov
test
jns
fadds
adc
pop
mov
mov
out
jae
xorl
fs
out
jns
jbe
testl
xchg
stos
mov
mov
inc
stc
out
sub
aas
push
ljmp
inc
shlb
jo
sub
fiaddl
test
sbb
pop
mov
xchg
push
add
out
arpl
lret
or
mov
popa
into
mov
mov
pop
cli
xchg
popf
push
mov
leave
les
mov
shr
out
add
data16
dec
inc
mov
inc
dec
into
inc
fimuls
mov
inc
das
mov
jge
xchg
adc
test
aaa
push
mov
cmpl
aam
mov
dec
jmp
arpl
inc
leave
dec
in
pop
mov
mov
pop
aas
outsb
xchg
call
jae
loop
jecxz
xor
movsl
adc
dec
int3
push
out
addr16
xor
sbb
out
data16
mov
shll
in
je
test
int3
cmp
jns
repz
mov
pause
pop
in
mov
aas
lods
jae
sti
out
cmc
sub
repz
fstps
inc
cmp
repnz
imul
rcrb
mov
clc
jmp
sbb
cld
mov
cmp
and
es
sbb
pushf
dec
sbb
mov
xchg
popf
and
fldcw
xor
aad
into
repnz
mov
lods
mov
mov
cmp
ljmp
insb
dec
sub
mov
xor
mov
je
adc
outsb
or
andl
cmp
cmp
mov
nop
sub
xchg
inc
pop
insb
lods
ljmp
shll
mov
add
scas
fadds
cs
jae
sub
mov
imul
adc
jp
cmp
shrb
add
xor
sti
outsb
je
pop
rorl
and
inc
sub
jno
fstpt
jnp
dec
push
popa
repnz
xlat
dec
pushf
adc
add
cld
mov
pop
mov
lahf
dec
xor
dec
dec
add
mov
pusha
add
jne
jae
filds
or
stos
mov
add
jp
mov
cmp
adc
bswap
xor
jl
xor
in
pop
xlat
xor
fistpll
loop
dec
aaa
idivb
dec
sahf
lods
ss
push
sbb
jp
mov
push
push
mov
sbb
int3
dec
add
lret
jns
test
shl
jle
jnp
pop
in
xchg
pop
cmp
movsl
inc
mov
lock
adc
xchg
xchg
insb
sbb
or
pop
cmpsw
pop
push
fisttpl
mov
cwtl
nop
incl
mov
aas
movsb
push
or
and
rorb
jl
out
add
mov
repnz
out
push
arpl
push
lock
jle
adc
jl
push
mov
out
ficoml
jae
push
rorl
mov
cwtl
insl
pop
je
add
cmpsb
add
add
pop
ret
inc
lahf
push
mov
ret
sbb
pop
cmpsl
int3
cmp
enter
push
add
rep
iret
mov
mov
loopne
cmp
jmp
popf
jns
inc
shlb
movsl
out
icebp
xchg
fisttps
pop
sub
xchg
add
movsl
jb
outsl
sub
std
fwait
scas
push
mov
outsb
xor
frstor
lds
pop
in
ja
sbb
int3
sub
dec
mov
movsb
push
jp
sub
ds
test
mov
fldt
jg
clc
and
fistpl
aas
adc
inc
mov
rorb
lea
adc
and
out
ja
cmp
movl
or
outsl
mov
mov
call
cmpsl
and
jns
push
scas
sbb
push
adc
cli
dec
jbe
inc
outsb
mov
cld
jle
fsubl
pop
stc
sahf
xchg
les
outsb
pop
ret
movsl
mov
jge
imul
jmp
lahf
xor
popa
int
jne
aam
xchg
ds
xchg
loope
pop
lcall
lret
xor
push
outsl
jl
sub
bound
shll
xchg
xor
out
xchg
dec
jns
sub
pop
mov
call
sub
push
mov
mov
xor
je
dec
jg
int
sbbb
jmp
push
pop
jno
mov
and
and
sub
and
test
cmc
mov
dec
addr16
fbld
lahf
push
ret
int
test
push
test
mov
movsl
dec
imul
mov
aam
inc
data16
jmp
stos
je
sbb
mov
mov
xor
mov
or
cwtl
mov
subl
pop
test
xlat
clc
push
pop
cmp
je
cmc
nop
inc
roll
arpl
gs
push
clc
fcomi
adc
mov
in
lcall
addr16
mov
push
add
jo
xchg
repz
sbbb
adc
loopne
push
sub
sub
jo
pop
or
sub
inc
fxch
shr
mov
jbe
mov
cld
push
sbb
ftst
and
push
divb
insb
jp
lret
sub
ja
hlt
jne
sbb
or
lods
dec
ljmp
pop
mov
add
addr16
jae
jmp
adc
fwait
xor
mov
pop
jle
daa
mov
in
out
add
roll
iret
lock
and
test
dec
pop
ficompl
test
aas
ljmp
inc
sti
cmp
popf
xor
xchg
pop
shll
jns
int
add
dec
ja
stos
jno
jp
jns
xorb
adc
sub
xlat
scas
sub
add
fwait
dec
push
sub
loope
jecxz
cmp
sub
sub
xor
sbb
test
xchg
adc
cmp
call
fbstp
movl
outsl
mov
pop
test
push
mov
sbb
jp
xchg
clc
sbb
leave
or
jo
pop
add
pusha
test
mov
outsb
fistl
mov
es
jge
xor
lds
or
insl
insb
mov
mov
mov
jo
or
andl
stos
into
xor
jnp
and
xor
lcall
push
adc
jne
xor
xchg
push
push
popa
outsb
adc
cltd
jl
mov
mov
lcall
mov
push
cmpsl
test
add
cmpsl
adc
sbb
lcall
movsb
int3
out
cmpb
aaa
xchg
gs
decl
andl
mov
pop
mov
inc
xchg
jmp
loopne
xor
jp
inc
mov
js
rol
test
cwtl
mov
push
adc
jne
dec
add
inc
jnp
out
mov
decl
inc
loop
mov
adc
jns
inc
ja
inc
pop
lds
and
mov
cmpsl
int
flds
icebp
daa
jb
sti
aas
mov
pop
fdivl
daa
mov
mov
scas
sbb
cmpsl
mov
mov
aas
lahf
sub
and
or
mov
adc
fs
mov
push
imul
icebp
dec
sub
pop
imul
push
iret
jg
test
jmp
call
mov
outsl
enter
adc
push
pop
shll
push
or
stc
imul
bound
mov
push
shl
xlat
and
filds
ss
sbb
xor
test
xchg
mov
jbe
pop
aad
call
add
fsubl
fdivrs
daa
fdivr
ret
inc
and
cmp
scas
or
and
sub
mov
out
xor
dec
xchg
pop
xchg
stos
in
addl
lock
inc
jb
mov
pop
in
movsb
int3
hlt
xchg
push
aam
shrl
pop
mulb
mov
sbb
insb
push
or
jo
js
xchg
inc
mov
or
sub
sbb
sbb
add
xor
ds
rcrb
mov
rcr
inc
adc
mov
dec
in
aam
cli
adc
int3
xlat
imul
out
mov
push
loopne
repnz
sbb
mov
xor
testb
sub
scas
stc
scas
mov
or
stos
shrb
sbb
movb
jnp
xchg
adc
jne
addr16
mov
cmp
movl
pop
outsl
pushf
fcomip
pushf
and
fistps
call
in
mov
dec
xorl
stos
jecxz
pop
test
xchg
xchg
cmpsb
out
pop
std
divl
add
dec
add
adc
pop
test
neg
push
lahf
cs
add
mov
repz
sarb
pop
push
rcl
pop
popa
xchg
jo
enter
pop
xorb
sbb
mov
jle
ret
out
fs
fistpll
mov
scas
xchg
lods
in
scas
cli
pop
add
cmpsl
fsub
and
mov
mov
out
dec
cwtl
push
xchg
pop
mov
mov
cs
out
cmp
lahf
into
hlt
fidivl
shrl
xchg
enter
adc
divb
dec
arpl
and
add
xchg
and
dec
lahf
outsb
mov
sub
dec
mov
xor
dec
mov
dec
ja
pop
rclb
adc
loopne
push
pop
mov
shll
rclb
jne
push
imul
jl
shlb
data16
js
icebp
xchg
bound
inc
pop
jb
xchg
pop
cmpsb
cmp
cmp
dec
lret
orb
mov
adc
andl
in
sub
aaa
jne
push
cmpsb
xchg
aad
in
aaa
and
stc
movsl
push
pusha
cmpsb
repz
ss
outsl
ret
jnp
cmpsb
jmp
inc
das
rcrb
scas
adc
insb
xchg
xor
out
div
mov
in
stos
js
lcall
lret
subb
bound
sbb
xchg
pop
push
fs
dec
or
js
mov
mov
test
xor
xchg
jle
inc
cmp
mov
inc
adc
mov
icebp
mov
push
mov
mov
mov
jl
xor
pop
inc
inc
push
insl
mov
sbb
jle
mov
call
mov
enter
mov
cltd
insl
push
lds
mov
push
hlt
lods
fs
cs
pop
arpl
xor
inc
rcrb
lea
inc
push
shrl
push
out
inc
sub
jne
mov
xor
jb
cld
dec
jp
jge
inc
clc
add
enter
jo
dec
mov
xchg
pop
fbld
add
push
fadd
or
movsb
add
shlb
xchg
cwtl
dec
push
dec
push
cmpsb
cmp
gs
pop
leave
cmpsl
imul
inc
mov
xchg
mov
jmp
mov
sarl
push
mov
jge
ret
daa
and
mov
mov
jne
lret
pop
insl
cld
xchg
mov
push
shlb
scas
inc
pop
sub
push
sbb
enter
mov
cmp
mull
sub
xor
xchg
roll
movsl
push
push
mov
or
popf
cs
jnp
outsl
sbb
shrl
push
scas
decl
daa
jmp
aam
movsb
jnp
mov
cmp
cli
lock
cmp
arpl
push
divl
faddl
xlat
push
pop
xor
shll
push
ja
xor
shr
dec
iret
add
mov
or
in
cltd
jge
mov
test
jno
jae
stos
add
sbbl
jbe
xchg
sti
inc
mov
sbbb
roll
push
dec
jle
jne
mov
pop
push
xchg
lods
mov
repz
xor
jle
lret
repz
out
movsl
jl
imul
xchg
inc
push
jp
popa
cmp
push
mov
out
push
clc
test
mov
sarl
xorb
inc
push
loop
nop
pusha
mulb
jecxz
pop
cmp
test
or
mov
sti
or
pop
outsb
fs
enter
lock
jmp
inc
push
mov
mov
in
daa
or
xor
in
aam
imul
xlat
push
in
leave
js
les
addr16
loopne
test
jge
pop
jo
pop
movsb
test
popa
dec
cli
push
in
lea
jne
mov
inc
repz
iret
lret
rcll
repz
lea
mov
xchg
jp
pop
sub
cmp
xchg
pop
les
mov
stos
mov
mov
sub
insl
jmp
pop
push
aaa
sbb
aas
faddl
or
jbe
in
pop
test
incb
pop
inc
repz
jbe
fistps
ss
inc
sbb
mov
push
pop
mov
leave
or
ror
push
cmc
xor
pop
xchg
shr
shl
mov
frstor
call
in
dec
dec
andl
fisubl
shlb
and
xor
pop
and
jo
mov
or
cmp
lret
pop
insl
imull
push
les
push
in
stc
sti
jg
cmc
push
inc
and
mov
jnp
and
loop
pop
jmp
mov
cltd
movsb
sub
add
movsl
add
fldcw
imul
mov
shlb
insb
pop
aaa
dec
xchg
insb
inc
pop
xchg
aas
call
into
fwait
mov
adc
add
test
imul
icebp
dec
in
lods
mov
dec
add
push
fdivl
add
mov
xchg
sahf
cmpsb
add
adc
aaa
add
cmpsb
xchg
xchg
fwait
xchg
scas
pop
push
add
mov
ja,pt
jge
lods
inc
mov
push
cmp
ret
mov
xchg
into
add
popa
add
ret
mov
lret
mov
lods
add
mov
push
xchg
repnz
decl
cmpsb
push
lahf
xor
pusha
pop
lcall
aad
mov
push
inc
dec
les
inc
push
scas
leave
mov
inc
sahf
dec
negb
sub
xchg
jnp
dec
daa
cmp
jmp
loopne
gs
testb
mov
fsubp
xor
ret
xor
into
mov
dec
mov
add
cmp
cwtl
inc
or
sbb
push
dec
sub
out
out
fmuls
setl
stc
jmp
js
in
outsb
lods
jmp
sahf
mov
cld
xor
mov
xorb
push
lods
xor
dec
inc
nop
lods
scas
sbb
les
stos
addb
movsb
ss
shlb
lods
frstor
add
add
fwait
loope
xor
dec
aaa
adc
mov
jns
arpl
sbb
pop
loopne
jge
jno
xchg
jg
sub
fisubrs
xchg
mov
adcb
imul
sti
and
mov
out
dec
jo
mov
xchg
cmp
hlt
lock
jge
jge
decl
pop
das
xchg
xor
mov
pop
das
cli
pop
pop
sarb
mov
int
xlat
fs
or
dec
stos
xchg
cwtl
sbb
sbb
fisttps
aam
jl
arpl
add
push
imul
and
out
popl
mov
shrl
mov
mov
fsts
cmpsl
test
dec
test
jmp
vhsubpd
addr16
add
ds
stos
or
mov
arpl
cld
lcall
adc
ror
out
clc
inc
lods
push
rcl
xor
shl
dec
lcall
pop
fadds
shll
outsb
fistpll
mulb
stc
cli
rcrb
cmp
add
adc
loopne
sub
jbe
cmp
je
jp
sbb
pop
jge
and
and
lds
roll
pop
mov
popf
aad
gs
mov
cmpsb
or
add
xchg
daa
std
sbb
add
and
bound
mov
or
es
imul
loope
frstor
mov
sbbl
sbb
aad
push
cli
insl
mov
pop
nop
jmp
cli
shlb
lods
mov
cmp
test
cmovae
mov
mov
fildll
adcl
and
jno
inc
push
xorl
push
inc
test
xor
and
out
pop
pop
cmp
pop
leave
xchg
push
sub
jmp
stos
mov
inc
test
push
inc
pusha
or
mov
in
jno
adcl
stos
sahf
pop
loope
mov
es
test
xchg
mov
insb
pop
inc
sub
mov
adc
xor
enter
or
mov
cmp
nop
add
mov
lods
sbb
in
or
repnz
mov
mov
adc
lret
stc
insl
adc
sbb
test
dec
jae
inc
loop
clc
lds
cmp
push
mov
scas
and
jo
int
mov
xchg
cmp
sahf
into
fisubrl
fdiv
enter
imul
in
fld
add
jge
jl
stc
jae
imul
in
call
stos
aaa
into
xchg
mov
loope
ret
dec
cmp
xchg
movsl
idivb
add
mov
xlat
mov
testl
movsb
sahf
mov
sub
push
push
or
stos
cmp
push
pop
cmp
pusha
add
popf
loopne
push
cmovl
push
rorl
cmp
lods
loop
das
mov
adc
xchg
dec
shrb
or
add
lods
aad
imul
fcmove
xor
pop
pop
pop
movsb
sbb
push
xor
ret
fcmovnu
sbb
ja
ss
add
dec
fninit
sub
aam
mov
sti
inc
jne
fisubl
inc
push
repz
xchg
xor
in
push
orb
add
inc
outsl
inc
xchg
mov
in
ss
leave
jns
loop
scas
adc
cmp
cmp
adc
sarl
xchg
jnp
inc
pop
xor
mov
inc
rcrl
outsb
mov
repz
or
lahf
out
rorl
subl
xor
xor
lret
xor
push
arpl
xchg
adc
jne
cmp
mov
decl
xorl
mov
sub
mov
adc
or
lds
sub
cli
je
push
xor
jle
dec
push
sti
faddl
push
js
jg,pt
cmp
jo
cmp
pop
mov
into
lret
or
insl
mov
ss
pop
mov
sub
and
addb
mov
or
rolb
mull
je
xlat
dec
adcl
out
pop
dec
iret
inc
push
push
xchg
daa
add
lea
and
inc
cmp
xor
xlat
lcall
test
xchg
daa
adc
rcll
dec
gs
jb
or
bound
repz
xor
cmp
add
ret
jmp
sti
push
jecxz
jne
push
leave
negb
push
cltd
mov
pop
insw
or
mov
sbb
sub
mov
aaa
xchg
push
fidivrl
add
mov
scas
insl
stos
clc
ficompl
push
dec
sti
dec
insb
dec
xor
pop
ljmp
jp
sub
adc
pop
dec
rol
into
mov
nop
push
pusha
xchg
pop
jg
push
pop
sbb
movsb
sub
fwait
jno
movsb
cli
pusha
mov
mov
xorb
js
pop
adc
out
or
stos
loopne
pop
fsubl
adc
mov
enter
xor
ror
das
pop
idiv
mov
jecxz
dec
jg
stos
mov
sbb
jnp
and
lahf
lods
je
pop
pop
mov
push
test
testb
cli
jmp
pop
mov
pop
mov
push
pop
or
pop
jg
jnp
sub
mov
push
lds
cmp
mov
and
mov
sarl
pop
pop
mov
data16
inc
mov
mov
daa
ret
push
mov
dec
imul
and
dec
in
dec
mov
test
xlat
mov
or
movsl
pop
inc
mov
sbb
test
rorb
mov
std
out
and
adc
and
xorb
mov
cld
pop
add
cmc
cmpsl
lret
stc
mul
add
inc
arpl
and
lods
mov
push
outsb
mov
lret
push
ljmp
insb
mov
popa
outsl
pop
cmp
mov
adc
mov
jge
mov
in
shr
out
xchg
dec
xor
das
aas
pop
cld
mov
outsl
repz
fwait
add
js
xlat
push
and
inc
enter
mov
or
add
or
jp
mov
stc
scas
cld
and
dec
mov
jge
cmp
jb
or
test
fwait
or
loope
xor
stc
popl
movsb
fdivl
ficompl
clc
push
xor
push
xor
mov
or
mov
aam
mov
iret
add
out
rcrl
add
lcall
cmp
cmpsb
inc
mov
shrl
les
push
cmp
push
aas
stc
add
mov
rcll
sahf
out
add
sbbb
cli
mov
ja
cmc
sbbb
inc
ds
idivl
in
jnp
clc
stos
movsl
movsl
neg
inc
xchg
add
cli
scas
jmp
das
ret
dec
jne
mov
mov
pop
shlb
fildl
push
lret
inc
sarb
aad
unpcklps
stc
bound
shll
leave
sub
push
test
ret
jl
dec
xchg
push
pop
mov
stos
int
test
or
decl
xchg
cmc
inc
pop
inc
test
out
lcall
scas
adc
xor
iret
js
adc
and
imul
mov
je
dec
jl
sub
imul
lods
in
cmpb
in
addr16
gs
loop
lret
testl
pop
sub
stc
pop
jmp
or
leave
xor
xor
loop
add
push
loopne
xor
jmp
mov
sar
fimuls
shll
xchg
inc
or
xlat
adc
xchg
xchg
add
push
cmp
or
xchg
push
xchg
bnd
mov
sahf
mov
aam
adc
es
xor
add
cmp
loop
or
add
cli
sub
jno
rcl
sub
or
ljmp
xchg
out
hlt
cmp
pop
mov
push
push
incb
add
outsb
or
adc
inc
mov
jbe
in
pop
repz
rcll
push
xor
cmc
cmp
int
idiv
addr16
mov
mov
stc
jp
mov
mov
pop
ja,pn
lds
ret
mov
cwtl
aam
and
bound
movb
pop
or
push
pop
sbb
out
stc
mov
or
lcall
inc
jl
inc
fidivrs
lock
in
testb
sub
arpl
mov
jp
loopne
lock
ds
or
sbb
mov
scas
adc
scas
push
stos
lcall
xor
xor
cmpsl
mov
inc
gs
push
xchg
jae
add
test
sub
push
xchg
jp
sub
push
xchg
test
movsb
inc
adc
and
mov
jmp
mov
scas
ret
add
je
cmpsl
push
sarl
cmpsl
movsb
movsb
adc
arpl
aam
pop
out
stc
dec
jecxz
adc
test
in
jge
sahf
add
xchg
aad
sub
adc
std
inc
repnz
pop
or
mov
xor
std
hlt
rorl
push
jp
sub
cs
popa
adc
sub
mov
cmpsl
jp
jae
fucomp
bound
mov
aam
iret
call
jle
xor
sbb
add
mov
outsb
and
jne
ss
push
das
or
mov
dec
sub
movsb
mov
in
dec
push
and
fcmovu
xlat
push
hlt
mov
sbb
dec
icebp
decb
pop
or
mov
and
jnp
std
push
int
pop
push
and
aad
mov
mov
or
jne
pop
mov
imul
cs
sbb
pop
mov
sub
cmc
add
aad
loope
cmpsl
mov
push
lods
les
jmp
or
imul
lret
jns
outsl
and
imul
leave
or
sbb
scas
mov
xchg
mov
adc
sub
insb
and
xchg
push
leave
dec
loop
lds
mov
cmp
mov
ret
test
in
je
sbb
jecxz
or
ret
fdivrl
inc
rcrl
mov
ret
scas
pusha
adc
sub
mov
clc
sbb
jg
sub
push
xlat
push
pop
cmp
jno
mov
pop
pop
pop
xchg
std
add
shrb
jl
in
sbb
mov
ljmp
movsl
or
int3
iret
sarl
xor
jecxz
sti
fsubrl
into
adc
sub
mov
dec
les
or
push
ja
jmp
add
outsb
hlt
push
jbe
add
dec
nop
mov
add
sub
test
in
movsb
cmp
loopne
cmp
out
pop
testl
xor
icebp
jae
iret
fistpl
sub
mov
xchg
sarl
stos
push
data16
in
nop
sbb
dec
push
mov
shl
stos
xchg
lods
call
add
mov
ljmp
test
ret
outsl
shll
inc
mov
sarb
cmp
insl
out
xchg
test
mov
scas
iret
add
int3
lds
mov
sub
lret
imul
in
call
cmp
inc
inc
ja
mul
popa
jb
scas
mov
xchg
add
aam
jg
bound
call
stos
push
or
inc
mov
clc
xchg
mov
or
fdivrp
leave
mov
addr16
outsb
cld
cmc
pop
jp
stos
and
fldcw
or
sub
scas
out
or
cmpsl
xchg
push
shrb
sub
dec
das
mov
inc
xchg
flds
mov
cltd
xchg
popf
sub
cs
arpl
out
test
pop
daa
push
fistpl
aam
xchg
les
jl
push
push
popf
stc
xchg
mov
jbe
inc
inc
pop
push
leave
xchg
daa
mov
movsb
lock
movsb
mov
ja
mov
test
or
pop
mov
sbb
je
div
cmp
stos
and
je
mov
jecxz
out
iret
imul
adc
adc
popa
imul
jns
out
int3
stos
pop
aad
inc
clc
addl
mov
je
movb
std
jno
inc
mov
and
mov
push
pop
or
stos
hlt
jmp
jl
or
cmp
shrl
or
push
dec
push
imulb
jmp
repnz
xchg
xchg
and
inc
or
popf
out
pop
dec
mov
adc
movsb
cmp
mov
add
in
loop
bnd
sub
gs
cmp
pop
sub
loop
and
outsb
fadd
rcl
mov
out
jecxz
pop
nop
jecxz
das
lods
into
shrb
mov
lock
or
addl
xor
jmp
push
fmuls
setg
push
push
shll
add
fsubp
or
add
cld
push
mov
jl
jno
jb
adc
pop
clc
dec
jecxz
xchg
dec
js
aam
popa
dec
negb
or
mov
pop
jle
sbb
adc
imul
into
add
gs
icebp
iret
pop
dec
sbb
data16
jl,pt
ret
lock
cmp
cld
and
add
sbb
rorl
fnstcw
cs
dec
pushf
enter
lds
mov
sbb
ret
mov
cld
dec
int3
or
mov
jne
cwtl
insl
popf
scas
shll
in
adc
stc
in
adc
sbb
adc
push
lret
ljmp
movsb
mov
or
xlat
shl
cmp
lcall
xor
push
dec
out
sub
icebp
dec
mov
imul
sti
addl
imul
and
push
adc
add
sti
adc
std
iret
mov
outsl
loopne
les
pushf
and
jl
ffreep
or
adc
lds
inc
adc
lret
inc
and
dec
loopne
mov
movsb
mov
pusha
dec
data16
lret
fildll
sti
fisubrs
adc
mov
lcall
cwtl
fstl
test
pop
jge
insb
cmp
xchg
mov
aam
aad
lods
jmp
incb
sub
divl
and
ds
test
mov
or
mov
xchg
sub
mov
pushf
in
xorl
xor
mov
loop
ja
pop
sbb
cs
das
mov
imul
inc
lock
mov
outsb
jne
inc
jmp
xorl
pop
mov
cmp
out
sbbl
in
push
shll
fs
xor
xor
bound
pop
je
icebp
stos
in
inc
fnstcw
adc
inc
fildll
mov
xchg
or
ljmp
inc
adc
addr16
adc
xor
add
lds
mov
xchg
test
stos
mov
enter
jno
neg
or
and
or
fcmovne
jmp
add
leave
mov
push
mov
loopne
sar
xor
dec
fwait
cmp
cmc
test
ficompl
lahf
loop
cli
negl
xchg
sbb
ss
scas
add
push
xchg
mov
in
je
mov
out
pop
jmp
popa
pop
pop
push
mov
inc
rcrl
adc
test
adc
jecxz
mov
lods
xchg
test
cmp
or
mov
xchg
adc
cld
fsubl
push
jle
pop
outsb
movsb
push
pop
loope
clc
insl
test
aaa
and
fmull
pop
inc
pushf
jle
xor
jo
data16
jmp
lret
jl
jecxz
jg
sbb
out
mov
ret
sub
lods
and
and
add
in
fwait
sbb
xchg
or
adc
clc
push
mov
push
mov
lahf
dec
imul
sub
aam
fwait
sub
ljmp
xchg
cmc
cmc
fstps
push
push
in
add
sbb
movsb
cmpl
adc
jne
add
stos
adc
sub
jecxz
jno
jae
add
lcall
push
mov
mov
mov
flds
insb
push
roll
shlb
mov
in
mov
roll
in
pop
jg
insb
aad
cmp
mov
pop
dec
cltd
dec
mov
lods
xor
ret
hlt
enter
mov
outsl
nop
adc
mov
mulb
pop
add
inc
mov
push
daa
fsubr
jno
repz
filds
or
add
popf
adc
mov
push
daa
popa
mov
in
mov
das
pop
outsl
xor
clc
jb
push
adc
jnp
add
xchg
pushf
adc
data16
outsb
stc
xor
mov
mov
jne
dec
cmc
pop
enter
pop
jns
push
fnsave
xchg
repz
stos
pop
jg
popa
push
push
out
sub
test
lret
adcl
lahf
adc
or
cld
xchg
in
adc
jmp
xor
pop
mov
jg
adc
dec
cmc
out
fdivr
dec
jb
xchg
int
adc
jns
pop
xchg
lods
insb
test
xor
push
pop
xchg
mov
pop
das
push
cld
push
fsts
pop
jnp
or
cmp
das
in
adc
jnp
jb
subl
jb
or
cmp
mov
shrl
or
and
cmp
sub
lahf
or
sarl
sbb
addr16
push
outsl
adc
adc
out
movsb
testb
int3
jl
dec
cs
dec
dec
ljmp
daa
or
dec
test
mov
jmp
lret
fistpl
test
aam
ds
xor
or
pop
and
add
pop
aaa
out
jb
insl
jb
push
aas
hlt
hlt
shll
mov
or
jno
mov
testl
push
push
shl
xor
orl
mov
push
fcoms
push
xor
pop
adcb
int3
jle
out
xchg
stos
std
in
daa
enter
pop
inc
cmpsb
pop
into
dec
pusha
jae
mov
neg
je
xchg
lret
insl
fsubr
pop
jne
mov
mov
repnz
push
test
mov
jb
cmpsb
into
out
mov
mov
std
cmp
push
lods
insl
dec
movsb
add
movl
dec
inc
adc
loop
sahf
sbb
pop
pop
push
cltd
int
push
lea
loop
imul
popf
lods
inc
adc
mov
js
stos
subl
mov
pop
jbe
int3
cmpsb
cli
pop
cwtl
cmpsb
pop
push
dec
pop
mov
mov
jle
scas
mov
fsubr
jbe
rcrl
push
addr16
adc
xchg
jmp
push
out
mov
inc
jnp
cli
cli
je
testl
in
popa
test
ss
cmp
xor
jnp
das
testl
jb
ljmp
out
gs
idiv
mov
inc
mov
in
insl
test
hlt
ret
sbb
loopne
push
nop
cs
rcrb
out
clc
xchg
fsubr
adc
mov
jbe
xchg
stos
lock
pop
xchg
inc
jl
pop
rcrb
js
add
pop
cmp
adc
xchg
inc
scas
aaa
xchg
lock
shll
jno
cltd
push
jge
repz
sub
mov
jecxz
rorb
sbb
aam
pop
pop
cli
aam
in
sub
repz
rol
and
test
inc
cli
ss
sub
stos
cli
push
loopne
cmpsl
xor
adc
shrl
rcrl
scas
xchg
pop
cmpsl
mov
and
or
jb
punpckhbw
mov
mov
cmpsl
movsl
jl
dec
test
add
add
fiadds
lahf
mov
outsb
and
out
dec
jge
or
cwtl
mov
jb
rcr
popa
aaa
insl
lock
add
stos
pop
xchg
inc
jae
xchg
mov
insb
es
or
or
ret
jg
xor
sbb
adc
add
dec
fmulp
shlb
cmpl
jg,pt
outsl
pop
xor
push
mov
outsb
mov
add
sub
mov
int
and
hlt
std
ljmp
xor
dec
add
adc
cltd
call
add
mull
jno
push
dec
xchg
mull
cmp
or
add
cmc
and
jne
jnp
rclb
pushf
add
aam
push
outsb
inc
lds
push
sbb
arpl
int3
shll
repz
icebp
loopne
cmpsl
add
icebp
fisttpl
addr16
ret
aad
ljmp
arpl
clc
xorb
daa
lea
stos
or
stos
lock
ret
sbb
mov
cmc
cli
dec
fcomi
dec
sbb
pop
insl
cmpsb
testb
cmpl
das
xchg
jmp
inc
jecxz
iret
subl
aad
scas
add
cmp
bound
test
mov
mov
mov
and
movsl
mov
pop
fiaddl
sbb
rclb
je
outsb
jmp
lods
add
push
repz
xlat
push
cmp
push
std
iret
out
arpl
mov
cli
inc
lret
out
mov
loopne
in
jns
sub
mov
sbb
adcl
movsl
icebp
addl
xor
push
mov
mov
fwait
xchg
or
cli
into
lcall
xchg
dec
xor
call
rclb
jne
pop
mov
test
dec
pop
or
adc
repz
adc
sub
jge
cwtl
mov
mov
insl
pop
aas
jg
xchg
sbb
xlat
imulb
pop
lret
icebp
push
jge
lcall
xorb
shll
mov
cmp
adc
leave
pusha
push
fsubl
jmp
adc
mov
stos
sub
jg
jns
sub
adcb
out
push
cmp
push
out
pushf
bound
ds
lahf
mov
int3
jb
in
xchg
adc
or
xor
pop
or
add
pushf
lret
and
dec
insb
mov
bound
jae
cmp
pop
mov
jb
jae
das
repnz
sub
mov
mov
fcoml
fiadds
jne
and
loop
into
adc
adc
inc
mov
and
nop
dec
daa
test
jns
push
sbb
lahf
insl
es
jle
sarl
or
cmp
xchg
jb
mov
shll
ljmp
or
pop
in
mov
xlat
push
push
nop
push
and
push
cmpsl
int
gs
inc
jg
out
xor
pop
sub
cli
in
mov
popa
xchg
jne
pushf
cli
and
inc
aam
cmp
ret
inc
inc
inc
dec
dec
sub
popa
int3
mov
ljmp
ljmp
or
ud0
push
frstor
mov
sub
out
fisubrs
inc
mov
and
pop
or
inc
xchg
jmp
loopne
call
dec
pop
outsl
and
inc
pop
mov
adc
sub
orb
sarb
das
push
sti
pushf
ret
inc
xor
jne
mov
notl
jae
je
add
jns
cmp
or
sbb
pop
push
pop
imul
xchg
pushf
jo
fsubr
jge
cltd
das
push
ss
inc
sbb
inc
add
mov
aad
mov
add
insl
loop
push
xlat
mov
sub
jbe
ror
mov
push
pop
cmp
in
mov
lret
int
jae
int
scas
fldcw
scas
outsb
push
pushf
lock
mov
aam
inc
leave
sub
imul
dec
ss
mov
inc
inc
ja
inc
je
dec
or
out
inc
fistpll
fistpl
sub
cmp
xlat
push
jp
mov
aaa
jmp
int3
sub
cmp
loope
out
inc
imul
or
lahf
mov
es
jl
mov
sar
cld
xlat
aas
lret
cmc
xor
push
inc
jb
nop
inc
movsb
mov
sarl
popf
mov
fmuls
loope
lret
xchg
inc
push
push
icebp
adc
rclb
fldenv
xor
lcall
cld
in
mov
dec
push
call
scas
aaa
and
jle
jae
xchg
push
inc
notb
inc
ret
cs
lahf
xchg
rep
or
pop
push
fsts
dec
pop
add
out
daa
cwtl
enter
sub
jae
mov
push
mov
xorl
sub
popa
inc
pop
pop
ss
cli
push
iret
cmp
fs
adc
jno
clc
push
stos
stc
add
sub
push
pop
cmc
inc
imul
stc
shll
or
inc
mov
out
jbe
mov
popf
call
int
das
mov
sbb
rclb
imul
jo
pop
push
pop
pop
shlb
sub
arpl
pop
loope
shll
add
pop
xor
push
inc
mov
in
ret
sbb
mov
mov
cld
sbb
pop
cs
cmp
add
and
scas
sahf
aas
scas
mov
xchg
mov
sub
fnstcw
lret
pop
and
rcrl
add
inc
popa
pop
sub
inc
adc
sbb
sub
std
cmp
and
shl
mov
outsl
mov
sub
shr
xor
xor
inc
push
pushf
jp
aam
int
and
jle
imul
rolb
mov
out
pop
pop
push
adc
hlt
cmpb
push
xor
xor
out
add
aam
jmp
xchg
sbb
js
dec
mov
cmp
aas
push
or
loope
xchg
test
mov
enter
jecxz
mov
outsb
and
lcall
inc
mov
cwtl
inc
and
ficoms
fsubp
je
add
scas
push
ss
adc
and
jb
cld
sub
mov
push
iret
cltd
outsl
call
movsl
push
sub
js
bound
ret
test
cmp
pop
mov
test
xchg
loop
xchg
add
repz
ret
call
pop
cld
ds
fcmovb
mov
add
stos
popf
xchg
add
adc
std
addl
adc
into
adc
sbb
mov
out
xchg
rcl
faddl
divb
jmp
xor
incb
shr
sbb
inc
dec
cmp
mov
cmpb
sbb
aas
inc
ljmp
jno
mov
push
mov
adc
lds
ret
xchg
sub
nop
xchg
daa
and
test
push
test
lds
xor
push
lahf
xor
mov
jb
ja
fdivr
adc
xchg
loope
outsl
xchg
daa
jecxz
sbb
xor
stos
add
cld
addr16
xchg
ss
std
in
and
int
cltd
fcmovbe
inc
shl
cmc
mov
jno
cmp
ja
pop
lahf
ljmp
scas
lahf
push
adc
out
pop
sbb
test
pop
in
jmp
fld1
js
xchg
std
rorl
les
into
or
out
stos
mov
js
je
in
sub
sti
shr
push
jp
shlb
push
mov
inc
mov
sub
fnstcw
dec
sbb
subb
xlat
adc
loop
in
or
cmp
xchg
jecxz
ffreep
stos
xchg
or
push
lock
pushf
int
sub
movsl
adc
fistps
int3
out
loopne
or
push
adc
nop
or
hlt
xchg
inc
addb
mov
imul
sub
push
mov
ret
fidivrl
dec
pop
xlat
pop
inc
loop
xor
xor
pushf
cli
jbe
addr16
leave
rclb
add
or
xchg
imul
push
sbb
push
cmp
push
repnz
icebp
sbb
incl
cmc
sbb
jns
test
aas
inc
sub
sbb
adc
pop
aam
fidivs
iret
lock
in
pushf
dec
push
lcall
xlat
out
fs
enter
push
arpl
push
push
faddl
leave
fsubl
cmp
jne
js
mov
adc
addr16
int3
xchg
and
inc
loopne
fadds
pop
xor
lods
xchg
fiaddl
clc
sti
cmp
ja
lea
sbb
aam
fdivr
sub
mov
jbe
sbb
sub
aam
cmp
pop
divb
and
cmp
xor
mov
adc
pop
cmpsb
dec
je
jns
mov
ffree
jno
shl
cmp
or
push
pop
add
inc
das
add
dec
repnz
loop
aaa
mov
jmp
xor
pusha
or
icebp
out
lods
arpl
cmp
das
or
adc
pop
cwtl
das
leave
inc
cli
lret
and
xor
rorb
and
dec
mov
sahf
cltd
ja
cmp
xlat
aas
add
sub
jno
lock
pop
fs
pop
xchg
sub
xlat
shrb
xchg
enter
ret
gs
dec
int
lds
or
in
inc
movsw
cltd
loop
push
add
push
pop
jg
push
fisubrs
loop
jge
xchg
push
mov
insl
js
cmp
xchg
and
mov
int3
clc
subb
mov
fnstsw
mov
inc
mov
jns
pop
dec
int
xchg
imul
xor
inc
sub
mov
push
rcr
cmp
mov
and
xchg
mov
insb
jecxz
xchg
or
inc
sar
mov
sbb
call
sub
cwtl
sbb
fldl
loopew
sbb
call
aas
loope
iret
xor
in
in
fnstcw
dec
mov
movsb
xchg
cmp
inc
cmp
cmpsb
push
sahf
arpl
mov
or
or
push
or
jp
xor
icebp
fdiv
fbld
xchg
pop
shlb
in
pop
filds
push
mov
in
cmp
imul
push
jbe
xchg
or
sub
repnz
int
xchg
test
and
ret
mov
push
frstor
cltd
pop
mov
sub
imul
rcrb
push
jge
rorb
add
xor
adc
ds
sub
test
push
aam
jg
mov
in
xchg
aam
addr16
scas
xor
aad
stos
test
addr16
push
pop
mov
xor
xor
xor
pop
push
movsl
and
or
add
pop
dec
rorl
jle
in
mov
adc
sbb
stos
mov
add
fsubr
daa
xor
adc
loope
stos
mov
test
sbb
pop
mov
jle
lock
mov
negl
push
push
loopne
lods
mov
shll
sub
call
xor
movsb
mov
push
pusha
mov
mov
inc
add
lahf
dec
imul
jg
dec
lret
jno
jp
ss
push
out
shll
inc
test
ret
ret
sub
int3
sahf
mov
sbb
push
add
cmp
call
pop
into
les
mov
adc
loope
pop
dec
jecxz
fucomi
iret
push
push
cmc
shll
imul
leave
sti
fwait
mov
inc
pop
jno
cmp
mov
mov
pop
cmp
icebp
stos
aas
into
jbe
insl
cmpsl
push
ret
pop
lret
cmp
rcr
xor
int
adc
add
jge
rorl
in
or
out
stos
dec
xor
jp
or
int3
pop
bound
pop
sahf
clc
aaa
mov
xor
pop
add
divl
loop
mov
repz
movsb
xchg
cld
cwtl
sarb
fcom
sbb
js
mov
call
aad
das
jl
dec
adc
testl
mov
int3
jno
fs
adc
push
inc
push
mov
cli
add
aam
and
in
push
shrb
stos
sub
pop
jb
xlat
inc
add
jge
push
mov
or
push
jne
lcall
lock
test
loopne
xbegin
inc
fsubrl
sahf
rcrl
mov
and
rcrl
shll
dec
ja
jp
sbb
pop
adc
xchg
pop
cltd
aaa
shrb
sbb
xor
push
sbb
sub
cli
push
xchg
fsubrl
test
in
xor
test
push
mov
bound
xchg
ds
loop
xchg
lcall
push
cld
subps
mov
repnz
iret
xchg
push
mov
adc
sub
xchg
pop
insb
adcl
scas
mov
ret
and
push
inc
cwtl
test
aam
mov
xor
popf
out
mov
aad
xchg
stc
nop
aas
mov
fucomip
and
ds
xchg
cmpsb
jae
or
out
inc
cmp
ljmp
inc
inc
out
mov
scas
xor
pop
std
cmpsb
push
mov
ss
push
jns
push
jb
rcll
test
or
sbb
adc
mov
js
scas
push
iret
and
xchg
jp
outsl
mov
jmp
jo
adc
add
lods
rcr
sti
pop
inc
mov
dec
aad
adc
xchg
mov
mov
mov
jp
sub
bound
mov
pop
mov
adc
dec
mov
idivb
outsb
xchg
and
mov
xor
int
nop
sub
push
inc
ja
mov
fwait
sub
call
pop
ljmp
leave
and
push
cmpsb
and
test
mov
dec
aad
cmc
fldenv
inc
mov
testl
jb
add
arpl
add
lds
mov
mov
inc
std
jno
test
daa
push
push
cltd
add
sub
dec
bound
sbb
fdivrs
pop
nop
xor
mov
jb
insb
jnp
es
jecxz
and
fwait
xchg
sub
cwtl
addb
in
out
sub
mov
outsl
mov
mov
inc
outsl
xor
scas
cmpsb
call
inc
cmpsl
mov
lock
cmp
and
push
and
xor
arpl
stos
cmp
or
lret
push
or
int
rorb
out
xchg
test
mov
lret
fiaddl
inc
mov
mov
push
je
pop
int
and
dec
jge
in
ljmp
nop
and
in
fwait
mov
ret
sub
push
xor
cmpsb
ficoms
stos
insb
sbb
aam
cmc
lret
lds
outsb
aad
in
insb
pop
push
outsl
ljmp
pop
lock
jle
pslld
push
dec
imul
mov
dec
bound
push
pop
cmpsb
popf
cmp
lea
int
push
jmp
sub
out
in
das
clc
rorl
inc
add
mov
mov
ds
push
fucomp
push
divb
pop
movsb
flds
sub
nop
jp
mov
cli
adc
repz
mov
sub
xor
mov
push
push
pop
loop
imul
fiaddl
jbe
sahf
adc
aam
repnz
adc
pop
lods
mov
cmp
aad
and
push
jge
xchg
mov
sbb
xchg
scas
dec
stos
lcall
scas
jmp
arpl
adc
mov
ljmp
lcall
xchg
insl
inc
pushf
adc
push
jecxz
adc
mov
pop
cmpb
jbe
dec
add
out
ja
int3
sub
mov
jbe
dec
addb
pop
ret
aam
jno
push
test
add
mov
ljmp
inc
daa
jb
test
mov
fnsave
and
enter
inc
fcompl
js
pop
push
cwtl
flds
push
adc
lods
loop
outsb
vmovsldup
push
and
inc
sub
mov
adc
adc
jbe
arpl
inc
add
lds
lret
outsb
rolb
lds
popa
roll
adc
into
adc
sti
pop
or
pop
jecxz
inc
pop
add
sarb
orl
popf
mov
ret
scas
mov
jmp
out
das
repnz
pop
or
sbb
loope
fldl
dec
insb
pop
fisubl
mov
lret
loopne
push
dec
and
shll
and
or
fisubrs
aad
sub
into
adc
in
push
dec
inc
loop
scas
outsl
into
push
xor
add
push
sbb
fldl
and
out
mov
add
cmp
hlt
outsb
inc
adc
aaa
mov
lea
inc
jnp
push
in
std
mov
clc
rolb
and
jmp
or
mov
sbb
xchg
out
out
and
icebp
add
mov
dec
mov
out
or
lahf
sub
adc
lea
nop
ljmp
mov
jmp
hlt
iret
aas
lcall
push
or
leave
cltd
dec
orb
imul
aad
push
jnp
outsl
aam
and
scas
jo
outsl
pop
or
jge
sub
cmpsl
mov
add
and
ret
adc
push
mov
ret
insb
push
push
fistl
mulb
adc
es
pop
fnstsw
data16
lret
xor
inc
xchg
xchg
int3
lcall
sub
sbb
sub
sub
adc
out
cmp
inc
ja
jecxz
outsl
cmp
pop
js
mov
lret
mov
arpl
xchg
xchg
push
adc
sbb
movsb
xor
mov
aaa
xchg
cmc
pusha
pop
daa
outsb
ljmp
in
test
xchg
test
dec
mov
push
mov
adc
adc
loop
rcrl
cltd
mov
jae
negl
lock
scas
ja
dec
hlt
pushl
negb
aaa
je
cmp
add
mov
in
sub
jbe
rclb
cmp
mov
push
add
sbb
dec
mov
sbb
mov
sub
notb
adc
xor
mov
xchg
sbb
push
rorb
loopne
sub
and
dec
lcall
into
out
push
addr16
into
mov
inc
in
inc
sahf
sub
ror
xchg
fldcw
pushf
scas
jae
roll
dec
fs
dec
add
pop
shrl
mov
in
jae
mov
mov
or
inc
scas
movb
iret
inc
fucom
out
lods
dec
add
sbb
push
cmp
xor
daa
int3
sar
imul
jno
imull
cmp
in
or
sbb
repz
dec
test
mov
in
xchg
outsb
and
icebp
mov
mov
sbb
jnp
xor
das
pop
mov
in
cld
popf
fidivrs
xchg
idivb
fnstsw
das
cmpb
movsl
fistps
js
adc
push
or
or
imul
in
sbb
enter
mov
dec
insb
jl
or
fbld
adc
mov
sub
jne
xorb
jo
cmpsb
dec
jmp
sub
stos
das
or
xchg
loope
push
jge
pop
xchg
xorl
sbb
jp
repnz
out
xchg
push
jecxz
cmp
in
xor
sub
mov
pusha
xor
leave
insb
test
mov
call
lds
fisubl
jg
push
lret
inc
jg
pop
pop
and
inc
rcrb
mov
add
xor
pop
xchg
or
xor
and
push
sub
into
call
ret
ror
xchg
cmp
bound
sbb
enter
shlb
enter
jmp
pop
das
or
fsubs
je
cmp
push
jle
fwait
daa
or
mov
insb
mov
pop
les
sbb
cmpb
inc
xor
rcr
xor
push
in
fisubl
ja
cs
mov
jo
out
clc
sbb
pop
popf
adc
call
fs
in
adc
repnz
cmp
cmp
sub
pop
ret
adc
mov
lret
mov
movsb
lds
push
xchg
xchg
dec
insb
push
xchg
out
rcr
mov
cmp
fwait
das
insb
outsl
rolb
aad
lods
sub
xchg
add
jle
jns
mov
lcall
add
and
inc
sub
addb
dec
push
stos
or
jo
mov
xchg
sarl
fs
pop
ja
mov
cmpb
and
cltd
mov
cmpsb
jb
popf
jmp
imul
shrb
sbbl
lock
jmp
arpl
xchg
sbb
mov
push
sub
fmull
es
or
push
mov
leave
stos
bound
aam
jns
pop
les
popf
mov
xor
jge
and
jg
mov
jnp
pop
sbb
lods
sbb
xchg
sbb
mov
xchg
cmpsb
leave
mov
aas
add
lret
imull
cltd
or
ds
test
inc
ljmp
ss
dec
and
test
dec
adcl
pop
insb
mov
icebp
push
ror
dec
pop
dec
ficoms
gs
je
push
jae
mov
psrlw
jge
hlt
movsb
imul
popa
lahf
add
dec
dec
jle
sbb
pusha
add
mov
or
dec
lods
and
xchg
roll
mov
adc
ds
cmc
cmp
mov
and
repnz
inc
out
push
imulb
clc
loop
out
pop
and
add
mov
sarb
pop
lds
xor
xchg
jle
ret
pop
je
xchg
add
out
pusha
in
xor
add
sub
lret
jmp
jp
ljmp
dec
add
nop
loope
cmp
xor
or
in
in
icebp
sub
mov
mov
inc
les
mov
stos
or
aaa
imul
sub
jl
xor
xor
adc
mov
test
jnp
inc
add
out
push
xchg
xor
mov
add
jbe
mov
insb
popa
pushf
arpl
scas
xchg
gs
xor
or
pop
mov
cmp
arpl
push
mov
stos
jge
dec
aaa
dec
fisubrs
cli
xlat
cli
ljmp
into
iret
mov
cmc
mov
dec
int3
andl
fisubrs
lds
mov
mov
xlat
xor
adc
pop
mov
xchg
lret
xchg
mov
sbb
jecxz
testl
jne
lods
loop
sub
es
sbb
dec
cmc
jb
js
mov
inc
cmc
lea
aaa
fnstcw
jl
dec
cmp
adc
add
aam
punpckhdq
in
ja
cmp
add
lock
pop
icebp
xchg
ret
adc
rcrl
dec
or
std
sub
cmp
xchg
dec
out
pop
mov
jle
mov
movl
pop
in
stos
sbb
adcb
out
insl
ds
xchg
cld
ja
lods
cmp
loop
stc
into
adc
mov
imul
mov
push
jns
sbb
lret
arpl
mov
push
insb
fiaddl
pushf
mov
int
fsts
xor
cmp
ficoml
sbb
jle
mov
push
data16
adc
xchg
hlt
add
sbb
xor
int3
jecxz
in
pop
mov
out
bound
arpl
xor
outsb
inc
jb
mov
popl
movb
add
out
imul
sub
movsl
mov
cmp
clc
enter
xchg
leave
pop
and
std
pusha
push
daa
xor
jb
xor
xor
mov
mov
dec
add
cmp
mov
loope
add
pusha
sub
adc
scas
dec
scas
test
in
movsl
dec
es
iret
jns
push
adc
xchg
xorl
push
jmp
es
data16
mov
pushf
shlb
lds
lea
pop
into
sbb
sbb
lds
and
insl
mov
xchg
mov
pop
shll
xor
mov
mov
testb
jge
inc
or
mov
cmp
into
sbb
lods
into
and
clc
xor
popfw
jae
lret
or
sub
sbb
lds
outsl
xor
or
add
pop
cwtl
icebp
mov
insl
popf
push
push
sub
lock
cwtl
stc
loope
xchg
jns
jbe
loop
negl
pusha
sbb
cmp
daa
loopne
cli
mov
jge
pusha
cmp
xchg
test
insl
enter
cmp
movsb
lcall
cmp
jbe
push
lds
add
adc
or
cmpsl
scas
sbb
fisttpl
arpl
mov
jnp
push
sub
sub
mov
in
roll
test
sbb
and
imul
sbb
jle
or
or
mov
mov
andl
xor
mov
aas
or
sub
pop
lret
test
dec
lret
cmpsl
push
adc
pop
sub
xchg
cmpsb
cmp
or
out
cmpsb
pop
sub
push
lret
mov
pop
arpl
xchg
aad
and
sub
cmp
flds
ret
xchg
jmp
xchg
out
lods
and
bound
xorl
fisttpll
push
jns
mov
xchg
loopne
outsl
adc
xor
test
jno
stos
pop
xchg
movsb
fsub
sbbb
adc
repz
pop
fisttps
and
sbb
push
and
sub
in
cmp
push
insl
add
in
pop
jnp
sbb
cmp
adc
mov
jmp
nop
sub
xchg
cmpsl
xor
adc
jb
cmp
jns
push
outsb
adc
add
dec
pop
test
and
add
jp
fstpt
or
jle
mov
loope
jae
cmpsb
in
inc
sbb
jle
and
xor
mov
test
repz
mov
and
mov
inc
lret
xorb
sahf
iret
loop
mov
pop
pmulhuw
and
or
inc
jl
loope
and
lods
jmp
mov
cs
cli
fs
dec
lahf
fdivrl
adc
mov
pop
and
jns
adc
lods
les
jno
lret
sti
xchg
sub
int
and
fldenv
fsubr
sbb
sbb
add
jno
inc
int3
sub
imul
std
mov
les
jmpw
cmp
fcomps
xchg
test
es
sub
cmp
gs
stos
andb
out
gs
or
cld
mov
xor
mov
xchg
xchg
inc
mov
jo
mov
add
sub
fildl
pop
sbb
sub
mov
jmp
mov
imul
pop
pop
in
dec
fsubrl
mov
ljmp
add
push
or
jp
pop
insb
loopne
pop
dec
in
jae
cld
jg
dec
sub
and
lods
sub
or
cmp
lret
sub
pop
inc
push
stc
in
movsl
dec
nop
xchg
arpl
mov
fwait
jo
dec
sub
xor
movsb
cmp
popf
add
cs
adc
jns
aad
loopne
stc
in
xlat
mov
adc
or
stc
cmp
and
jb
jb
cmp
enter
jl
add
sub
mov
jmp
shlb
xchg
ljmp
dec
push
icebp
and
cmc
push
xor
push
inc
data16
jp
stc
repz
mov
mov
mov
imul
repz
movsl
aaa
xor
test
test
out
xchg
sub
dec
repz
cmc
or
dec
pop
aad
pop
jne
fwait
pushf
ficoms
notl
in
pop
pop
cli
bound
lods
filds
aam
cmp
sahf
add
ljmp
movsb
push
jo
jae
popf
cltd
inc
lds
int
cmpsl
int
cli
fcomps
jo
mov
jns
test
adc
repz
es
shlb
in
sub
out
gs
adc
fistps
mov
out
push
sub
loopne
jbe
jae
pop
scas
jns
insb
adc
inc
jns
xlat
pop
outsb
sub
sbb
pop
mov
mov
pushf
jmp
add
in
in
aas
xlat
imul
add
push
inc
cltd
pop
cli
bound
mov
pushf
cmp
shll
push
xchg
inc
cld
movsl
iret
mov
and
pop
pusha
fstl
inc
scas
pushf
xor
cs
movsl
sbb
mov
dec
aaa
fisttpll
mov
mov
in
add
sub
ss
imul
mov
mov
movsb
dec
mov
rorb
stos
jb
jo
jecxz
sbb
jnp
loop
push
mov
or
shlb
pop
out
sub
popa
dec
or
jae
sbbl
imul
add
xchg
xchg
jbe
add
inc
lahf
loope
shlb
add
loopne
call
scas
sbb
cltd
sti
aad
lcall
xlat
fistpll
xor
cmpsl
insl
les
and
mov
mov
inc
lcall
cltd
inc
push
les
enter
mov
movsb
orb
scas
cmp
jecxz
test
dec
and
scas
xor
lcall
leave
cmp
or
ss
push
push
add
sub
or
mov
push
mov
imul
leave
gs
add
cmp
inc
add
sarb
adc
idivb
dec
push
pusha
xchg
jb
arpl
lods
testb
sbb
jbe
fldt
aas
adcl
push
dec
and
movsb
pop
outsb
cmpsb
cmp
pop
add
enter
hlt
sub
jo
sub
dec
lods
mov
push
in
push
das
lcall
in
out
inc
mov
jne
fcomip
sub
dec
stos
mov
jne
sub
push
dec
dec
pushf
xchg
ficoml
cmc
inc
into
fistps
gs
add
jge
in
cmpsb
movb
push
enter
inc
jno
cmp
adc
xchg
and
in
lds
scas
xor
fists
bnd
xor
add
stc
nop
pushf
mov
xchg
in
xlat
inc
in
sub
js
int
clc
cld
jns
clc
je
jecxz
dec
sbb
cmp
mov
ffree
shlb
pusha
xchg
or
in
pop
mov
xchg
movsl
lock
xor
in
fidivl
sub
cmc
push
sti
stos
aaa
inc
adc
push
jg
mov
and
movl
sub
je
fcom
sbb
negl
jae
adc
mov
xchg
mov
jp
or
xchg
jge
jnp
jp
je
insl
fs
das
adc
repnz
push
jns
cmp
sub
cmp
scas
and
jg
xchg
aas
js
addr16
mov
sbb
imul
pusha
cmp
inc
aam
jnp
test
pop
in
xor
pop
stc
aaa
xor
pop
add
fistps
dec
cmp
notb
push
lret
sbb
xchg
mov
enter
lods
sub
rorb
std
mov
cmp
lods
pop
stos
jbe
fcmove
pushf
sarb
gs
les
test
cmp
cmp
sub
insl
push
inc
shll
cmpsb
aaa
jp
das
mov
sarb
rorl
xchg
pushf
add
pop
lods
out
adc
je
cli
mov
xchg
call
jmp
and
stos
jbe
fwait
testl
jb,pt
mov
lcall
imul
insl
data16
ss
push
xchg
lret
sbb
fadds
loop
aas
pop
cs
jge
in
lret
and
xchg
lds
stos
out
sub
push
or
lods
mov
mov
lcall
and
sbb
mov
jno
daa
or
xchg
mov
test
sub
jl
push
aam
jns
outsb
cmp
jecxz
sbb
ficomps
lret
lret
gs
add
ja
leave
scas
mov
flds
xchg
insl
bound
mulb
lea
test
inc
mov
lock
mov
dec
xchg
rclb
add
out
jle
pop
pop
adc
mov
xchg
add
psubsw
repnz
dec
aas
cmc
cli
ret
cmp
out
jle
xchg
or
in
pop
sub
inc
sbb
cltd
xor
jb
add
lret
xchg
dec
jae
mov
adc
pop
adc
pop
movsb
leave
push
cmp
rcr
jmp
imul
mov
mov
sbb
pushf
sbb
cmp
stc
inc
repz
mov
mov
pusha
sub
push
icebp
fs
ljmp
push
add
pop
or
pop
les
dec
cli
std
outsb
pop
cmp
adc
cmp
pop
adc
cmpsl
neg
cmp
movsb
dec
fisttps
cmp
mov
inc
shll
xchg
mov
cmp
cmpb
iret
aad
jmp
xchg
mov
aam
cmp
lock
adc
subb
cmpsb
sarb
pop
lahf
push
mov
adc
cmpsl
icebp
push
ret
das
loopne
push
dec
push
xchg
mov
cltd
xlat
aad
fidivl
jo
lahf
subb
frstor
cmp
adc
test
loope
inc
lret
add
pop
mov
cmp
inc
and
inc
pushf
mov
rcrl
xchg
addb
les
mov
jmp
or
fmull
xor
pop
addr16
or
shlb
pop
dec
jmp
jmp
adc
fs
mov
rol
push
xlat
push
mov
lock
and
cmp
movsb
pop
push
mov
divl
scas
mov
xchg
rorb
imul
scas
mov
out
adc
ds
push
cld
and
into
jnp
popa
mov
or
loop
mov
sbb
mov
xor
outsb
cmp
test
mov
aas
test
scas
jge
aam
enter
icebp
stc
stos
mov
lea
movsb
xchg
divl
mov
dec
in
mov
mov
jmp
push
sub
pop
lods
xchg
jb
cmp
in
xchg
out
xlat
adc
adc
push
loope
mov
popf
pop
cwtl
nop
adc
std
xor
xorb
push
stc
hlt
fs
insl
lret
or
aaa
dec
iret
ljmp
popa
in
in
mov
mov
inc
int3
nop
stos
mov
leave
cltd
sbb
mov
dec
mov
mov
pushf
dec
mov
push
ds
xchg
add
lods
out
add
aas
scas
out
paddusb
stc
adc
repz
arpl
mov
cltd
sub
clc
push
sbb
mov
out
pop
daa
mov
test
xchg
xorb
stos
xchg
push
cmp
mov
dec
add
add
fnstsw
fsts
fdiv
and
fildll
icebp
cmpsl
adc
mov
xor
stos
xchg
lret
mov
mov
xor
sahf
cmp
dec
out
in
cmpl
pop
into
lock
push
mov
ficompl
mov
inc
ret
dec
enter
mov
popf
add
pop
pop
insl
pop
xchg
push
mov
shl
es
xchg
inc
ljmp
clc
in
lds
add
mov
dec
jae
pop
adc
shrb
xor
inc
bound
sub
mov
and
pop
push
adc
or
inc
dec
test
mov
sbb
mov
fcoms
sbb
cld
jmp
add
test
or
push
pushf
mov
fisttpl
stos
mov
das
sub
movsb
push
lahf
repnz
sbb
mov
enter
ljmp
fwait
sbb
lea
add
xchg
adc
adc
dec
mov
std
jae
jg
fcoml
xor
xchg
stos
icebp
movsb
insb
xchg
pop
fidivrl
loopne
and
popf
les
lahf
cmp
push
aas
insl
sbb
sbb
or
xchg
mov
inc
dec
in
mov
adcb
cmp
pushf
mov
addl
inc
ljmp
xchg
fldl
inc
sahf
push
fwait
jae
stos
mov
fidivl
roll
aad
mov
mov
cltd
ret
and
test
popa
ficoms
inc
in
imul
push
out
pop
xlat
dec
cld
jne
sub
je
inc
jmp
add
and
xchg
mov
mov
push
rcl
xchg
mov
push
adc
inc
or
pop
addr16
stc
cmpsb
and
cmp
xchg
mov
hlt
sub
sbb
sub
in
rcr
add
inc
dec
jns
outsl
mov
adc
jle
dec
ds
dec
cmpsb
dec
mov
mov
xchg
xchg
lret
fnstcw
mov
add
ljmp
lcall
cmp
dec
es
push
ret
xor
xchg
xchg
push
mov
out
loopne
cmp
mov
test
das
into
mov
mov
repz
mov
data16
add
or
lods
bound
movsb
adc
adc
adc
out
push
sub
inc
inc
aaa
imul
repz
popf
fsubs
sti
lret
sti
ds
loope
ret
inc
push
mov
jecxz
pop
in
or
xor
bswap
push
rcrb
shll
shrl
jp
in
pushf
mov
sub
mov
loopne
rorb
addr16
or
add
fnstenv
hlt
mov
jp
jle
pop
cmp
into
insl
in
jo
js
fimuls
inc
bound
jge
cmp
repz
inc
mov
insb
jno
ret
test
xor
inc
push
popa
sbb
push
add
inc
lods
xor
ret
loop
mov
lahf
stos
dec
stc
mov
jmp
call
mov
push
pop
add
pushf
xor
push
mov
xchg
iret
stos
jmp
fsts
push
fistpll
rol
fs
scas
push
stc
mov
out
jmp
pop
mov
adc
mov
jmp
mov
xor
int
cmp
xlat
fcmovbe
ret
scas
mov
mov
aad
adc
push
mov
mov
lea
and
lret
ret
xchg
pop
call
pushf
sub
xchg
pop
or
cbtw
xchg
lds
sbb
fsub
and
ret
push
std
inc
dec
vpmaxub
jb
push
test
aam
ja
arpl
pop
mov
xor
loope
ret
mov
add
test
cmp
inc
js
lock
lods
cwtl
mov
add
in
imul
add
jg
mov
int
jbe
ss
add
enter
cmp
sub
adc
ss
insb
lods
pushf
rep
push
mov
pop
adc
dec
pop
insb
pop
sbbl
push
out
pop
push
cmc
xchg
push
fimull
ret
pop
push
xchg
mov
jb
bound
xor
jo
hlt
jge
das
lret
sub
stc
xchg
outsl
add
xchg
aas
mov
jmp
jo
imul
lret
inc
fsubs
shrb
pop
jle
cmpsl
arpl
jae
loop
jnp
add
or
xchg
ljmp
jo
out
shrl
aam
sub
xchg
cltd
and
cmpsb
inc
aas
out
jmp
pushf
sbb
dec
out
into
inc
push
mov
iret
divb
int3
rcll
push
stos
xchg
fucomip
inc
popa
loop
inc
mov
je
mov
imulb
or
push
mov
ja
fidivs
push
sti
lret
sarl
push
mov
pop
pushf
cli
xor
mov
xchg
mov
mov
aad
jp
arpl
cltd
sub
mov
adc
into
push
xchg
jg
and
mov
int
nop
arpl
lods
pop
loop
jb
push
neg
rorb
push
test
fcomp
out
inc
jne
inc
push
mov
ret
dec
cmp
es
dec
inc
lds
sub
mov
gs
test
subl
das
mov
dec
cmp
insb
in
stos
popa
cmp
xchg
or
in
dec
add
cli
inc
mov
ficoms
imul
movsl
mov
pop
imul
cmpsb
sub
jae
icebp
out
jecxz
adc
vcvtsi2sd
mov
lock
rcr
in
push
andb
out
or
outsl
dec
sbb
adc
hlt
sub
mov
xlat
aas
jmp
out
and
add
lahf
rolb
pop
adc
scas
jo
ja
fcomps
dec
xchg
jmp
rcrl
push
pushf
decl
cld
inc
sub
out
rorl
add
pop
cmp
in
inc
jo
jecxz
mov
int
je
pushf
sarb
orl
jp
fsubrl
aad
cltd
repz
mov
ror
jb
mov
xchg
xchg
lods
jp
jge
pusha
test
loope
sbb
in
or
xor
xchg
add
adc
adc
mov
outsb
xor
mov
sbb
or
stos
or
pop
outsb
mov
insl
mov
addr16
mov
push
xchg
in
jno
sti
fmull
jle
vpcmpub
push
cmpsl
xor
xor
stos
and
mov
mov
subb
es
fcmove
add
xchg
into
adc
cmp
out
xor
lock
sti
pop
mov
or
pop
pop
test
pop
icebp
sub
jecxz
inc
into
repz
xor
xor
sub
pop
mov
mov
imul
inc
sbb
popa
inc
outsb
cmc
std
clc
cmp
faddl
and
jo
loope
js
mov
loope
aaa
pop
pop
sysenter
movsb
std
add
xor
stos
lods
sub
das
cmp
stc
pop
ficomps
xchg
es
xor
mov
mov
repz
inc
mov
mov
xchg
aaa
fistl
test
pop
xchg
add
sbb
popf
sbb
data16
ficomps
addr16
sbb
push
std
popf
cmp
cmp
sbb
mov
or
and
inc
dec
mov
and
pop
cmpsl
insl
cmp
and
xor
lahf
ja
mov
xchg
das
and
jl
out
fcomi
aas
hlt
jmp
and
jl
xor
popf
xor
stos
mov
fdivl
jno
push
cmovns
mov
aad
das
dec
push
in
cmp
adc
push
mov
pop
add
out
mov
inc
jl
pop
add
push
inc
subl
add
inc
lods
adc
mov
icebp
pusha
fs
mov
push
ret
xchg
ss
test
add
and
in
inc
fdivr
add
icebp
lea
clc
fdivrs
xchg
cmp
push
dec
cmpsb
or
popf
loopne
test
sub
push
mov
inc
rcll
cltd
ja
insl
shlb
mov
push
inc
adc
sub
dec
mov
mov
arpl
divl
inc
add
xchg
mov
nop
jmp
jb
jg
sbb
repz
outsl
pusha
pusha
hlt
mov
dec
mov
stc
nop
roll
fnstcw
mov
adc
not
inc
add
sti
call
or
adc
and
inc
xlat
pop
dec
js
stos
mov
cwtl
inc
sbb
pusha
push
aas
mov
lds
decl
xchg
aad
rclb
call
jle
shrl
addr16
jo
and
das
sti
icebp
xchg
ret
pop
jo
nop
mov
fucom
sub
mov
or
adc
sub
push
mul
idivb
ficomps
aam
add
cmpsl
or
repnz
push
mov
lea
sub
rorb
mov
shrl
in
mov
pop
jne
out
dec
cs
push
adc
pop
insb
fsubrl
mov
mov
in
push
push
sbb
xchg
loopne
fstps
mov
pop
pop
aad
popa
aas
aad
aam
dec
mov
jno
cmpsl
push
shufps
mov
and
in
jb
push
pushf
pop
js
test
cmp
jle
mov
sub
das
sti
sarb
shll
ljmp
and
inc
push
xchg
pop
std
shl
or
xchg
adc
push
sub
cld
cs
adc
call
mov
out
adc
xorb
arpl
pop
jno
inc
jb
enter
jns
cltd
pop
ficoms
dec
es
lahf
clc
pop
loopne
dec
inc
mov
stos
mov
jge
or
mov
in
movsl
roll
cmpsl
inc
pop
pop
ljmp
push
lcall
arpl
push
pusha
in
outsb
cmpsb
pop
jmp
nop
daa
mov
test
mov
inc
lahf
sahf
imul
adc
mov
xchg
fsubrs
push
sbb
cs
pushf
lods
fbstp
push
mov
repz
jecxz
jne
cwtl
mov
imul
addr16
mov
sbb
mov
mov
inc
repnz
test
outsl
das
js
arpl
jns
shll
mov
lahf
stc
prefetch
loopne
dec
mov
cmp
jmp
xchg
hlt
mov
data16
mov
jo
or
jnp
and
pop
enter
and
mov
pop
popf
sbb
cs
adc
les
adc
sub
dec
jbe
popf
cmpsb
mov
xorl
push
jge
and
popf
add
dec
subb
sbb
leave
mov
cld
push
imul
sub
fwait
sub
cmp
mov
ss
or
mov
cmp
call
cs
or
inc
xor
shl
inc
addb
sub
cmpsb
leave
xchg
cltd
xchg
pop
xchg
call
out
dec
pop
xchg
in
mov
dec
fmul
ljmp
xchg
stos
movsb
pop
add
les
push
mov
sub
cmc
add
mov
hlt
rclb
flds
mov
and
jle
push
stc
pop
mov
addr16
inc
callw
xchg
pop
and
mov
and
xchg
testb
shll
pop
dec
int
inc
fisttps
adc
cmpsb
out
mov
insb
pop
xor
xor
dec
je
xchg
and
lcall
jne
sbbl
std
dec
push
push
lcall
add
and
bound
das
call
jmp
xchg
dec
and
negb
rcrb
iret
mov
popa
lret
push
sub
cltd
mov
aaa
cli
xchg
jge
xor
mov
ret
adc
popf
mov
sub
outsb
push
rcl
jmp
adc
in
xor
mov
ljmp
cmp
dec
jns
cmp
pushf
ret
push
bswap
loopne
add
ja
js
lea
adc
inc
popa
push
lret
sub
test
mov
jae
mov
lcall
cmp
adc
or
and
add
subb
int3
cs
pop
jb
cwtl
or
and
fisttps
aam
jecxz
imul
das
mov
insb
insb
cmp
pop
pop
push
lea
push
fcoml
xlat
fwait
mov
test
inc
push
sub
adc
aad
out
enter
jno
fldt
pop
xor
and
es
stc
orl
adc
add
rorl
test
add
pop
enter
adc
push
rol
adc
stos
mov
mov
rolb
fwait
aas
or
adc
shl
test
test
leave
enter
sar
mov
sbb
dec
cwtl
inc
aas
mov
imul
add
mov
inc
xlat
out
les
pop
push
push
outsb
aas
sub
adc
divb
cmp
pusha
mov
inc
cmp
jo
xor
mov
jb
mov
ds
xor
fs
jp
jmp
mov
add
xchg
sbb
pop
das
inc
jmp
pop
insb
adc
mov
out
imul
sbb
imul
mov
out
ljmp
jb
dec
call
and
adc
jo
pop
inc
pusha
repnz
daa
aaa
pop
add
pop
sahf
adc
fisubrl
lret
mov
push
iret
out
xchg
or
mov
sbb
fucomi
negl
mov
xorb
or
mov
sub
jmp
insl
ret
test
dec
xlat
jnp
push
mov
and
pop
outsb
dec
mov
movsb
mov
filds
addr16
inc
jmp
pusha
rcl
je
pop
xor
mov
test
lea
inc
pop
cmc
jp
add
movsb
or
or
jp
iret
in
gs
jp
movsl
inc
mov
jae
aam
cmp
xor
jmp
push
mov
loop
or
arpl
pop
imul
jno
test
mov
xlat
add
inc
cmp
lods
mov
cmp
fldcw
sahf
hlt
and
pop
dec
dec
inc
add
mov
js
imul
mov
xchg
hlt
stc
mov
inc
xchg
sbb
cmp
adc
or
es
jmp
adc
dec
xchg
jle
call
dec
xchg
aad
std
mov
cs
js
pop
pushf
mov
popf
or
in
sti
out
add
arpl
in
stc
int3
pop
les
jmp
lret
repz
push
inc
inc
lods
mov
in
mov
dec
jo
lahf
mov
or
orl
ds
aam
cmpb
sbb
cmp
movsl
xor
lods
xorl
ret
pop
aad
push
fcmovnb
or
mov
xor
and
push
push
jb
lock
cmc
call
jge
stos
push
loop
pop
mov
dec
xor
lock
mov
aam
cmp
lds
pop
pusha
dec
mov
jns
or
fbld
mov
inc
incb
mov
add
mov
jo
pop
push
mov
divl
in
stc
jecxz
fcomps
xchg
cltd
out
lcall
xchg
push
cmp
and
dec
or
push
pop
ret
cmp
fs
jae
adc
leave
jns
in
dec
mov
std
mov
adc
or
jne
mov
sbbl
sbb
test
cmp
inc
fwait
push
ret
mov
mov
je
sub
and
mov
xchg
pop
dec
cmp
push
inc
in
loope
insl
mov
mov
and
push
cli
mov
inc
stos
sahf
fidivrl
cmc
orl
pushf
insl
mov
xchg
mov
xor
clc
imul
clc
inc
jae
out
mov
mov
test
push
jo
pop
lret
pop
dec
iret
dec
addr16
xchg
jne
daa
sbb
mov
mov
or
fwait
lahf
jo
xchg
cmp
or
sbb
les
lock
adc
out
icebp
les
xor
mov
int3
pop
mov
cmp
rol
stos
push
or
lock
jge
mov
mov
add
ret
scas
adc
mov
outsb
les
pop
arpl
and
dec
loopne
jmp
test
and
sysenter
jmp
loopne
push
movsb
dec
push
shll
icebp
mov
mov
in
movsb
std
push
add
add
lahf
movsl
negb
add
push
lret
sub
lods
insl
sub
add
push
xor
ja
sbb
data16
pause
and
mov
negl
ljmp
dec
enter
xchg
in
stos
ficomps
pushf
rorl
mov
rorl
iret
push
jl
mov
cld
insb
pop
sub
movsb
jbe
mov
mov
and
aas
cmpsb
pop
scas
jo
mov
xchg
or
js
dec
shlb
push
and
fistps
stos
es
scas
mov
sbb
add
xor
adc
jbe
fcmovb
ffreep
mov
or
test
pop
mov
pusha
movsl
pop
clc
mov
fs
mov
inc
adc
pop
push
xchg
gs
int
in
cwtl
and
lea
xchg
mov
iret
rorb
int3
xchg
xor
cmpl
in
xchg
inc
jno
loope
shrl
popa
fcmovb
jmp
in
addr16
ss
mov
sbb
and
ret
add
test
xchg
rcl
sar
and
cmc
lds
sahf
repnz
adc
mov
lcall
imul
popf
add
aas
daa
out
mov
pop
push
or
sub
scas
repz
pop
jns
push
adc
adc
sbb
xchg
in
cmpsb
jne
mov
jp
add
add
out
enter
loope
xor
mov
push
sarl
xchg
cmp
add
xor
inc
aam
call
mov
cltd
roll
shlb
pop
in
dec
movsb
imul
sub
pop
add
adc
imull
lahf
jecxz
inc
inc
xor
mov
ljmp
pop
add
xchg
lock
popf
xor
inc
das
and
or
iret
dec
jnp
push
out
rorb
stos
das
movsb
mov
sbbb
mov
cmp
sbb
mov
xchg
and
add
fcmove
cmp
fsubrp
add
cmp
xor
jecxz
sbb
mov
outsb
jns
pop
data16
sbb
leave
pop
add
adc
shlb
daa
ljmp
fisubrl
mov
fcomi
les
pop
pop
aad
daa
mov
dec
insb
xor
je
cmpsl
das
das
insb
push
insl
xchg
ret
xchg
xor
pop
sbb
cmp
in
aad
inc
movsb
sub
in
xor
sbb
in
popa
das
inc
out
mov
mov
int
dec
mov
mov
cmpsl
jmp
lret
cmp
outsl
lea
fs
mov
jns
dec
div
imul
sub
movsl
orb
jbe
push
jecxz
xor
fs
aas
mov
dec
xorb
ja
cli
loopne
add
jp
arpl
fadds
mov
ror
pop
insl
das
mov
sub
incb
push
jae
add
fcmovnbe
sbb
mov
jo
lock
cmpsb
xchg
cmp
jle
add
arpl
push
orl
adc
xchg
push
and
aas
popa
cmp
sbb
scas
cwtl
std
cmp
pushf
add
and
inc
incl
jno
mov
or
sahf
in
or
cmp
cmp
out
xor
adc
incl
adc
int
or
outsb
pushl
mov
jbe
call
movsb
xchg
xchg
lcall
filds
cmp
dec
das
data16
fldcw
repnz
in
jb
neg
mov
mov
test
mov
adc
pop
fwait
movsb
pop
cmp
sarl
xchg
lock
mov
push
ja
ret
cmp
sbb
cwtl
int3
mov
sub
insl
push
mov
out
xor
pusha
aad
or
xchg
popf
ret
dec
in
divl
nop
inc
cmp
insb
roll
add
stc
cmp
cmp
insb
mov
adc
jbe
or
xchg
add
repnz
add
fldenv
lea
push
icebp
inc
sti
sub
dec
das
gs
mulb
cmp
insl
and
test
and
pop
pop
adc
rcrl
mov
push
inc
cwtl
or
or
mov
push
pop
push
lret
push
push
sbb
push
xchg
pop
lret
subl
sub
lds
fincstp
inc
fwait
pop
mov
mov
fdivrs
aas
scas
xor
adcb
pushf
mov
mov
dec
cs
xorb
cmp
cld
in
mov
or
leave
jmp
jns
fldl
mov
pusha
jns
and
int3
sbb
xchg
cmc
jne
push
sti
mov
mov
daa
movl
push
ror
in
lds
push
adc
in
mov
lock
cmpsl
int
and
lcall
adc
pop
insb
pop
lds
lods
in
nop
movl
mov
stc
sbb
xchg
push
cld
into
in
daa
and
mov
cmp
clc
inc
push
cmpsl
in
xor
in
cwtl
mov
popa
aad
ret
aas
je
add
sbb
xorl
fwait
test
outsl
das
add
sbb
pop
inc
push
icebp
stos
fmul
fadds
addl
ja
xchg
lods
adc
add
lock
mov
outsl
inc
xchg
sti
ret
into
popf
repnz
pop
imul
iret
es
and
push
and
sahf
and
pop
aam
jns
push
push
and
fadd
and
jp
add
sar
cmpsb
adc
cmp
mov
popl
in
mov
es
jge
imul
xorl
je
and
pushf
mov
sbb
icebp
pop
mov
mov
inc
pop
cld
mov
enter
xchg
sbb
out
sbb
lret
fcmovnb
out
sub
andl
imul
daa
stos
sbb
push
retw
mov
xchg
add
and
dec
js
fcmovne
test
jp
mov
sbb
ss
mov
int3
loop
pop
outsl
push
xlat
loop
add
pushf
push
dec
pop
ret
negb
inc
mov
mov
pop
adc
jno
idiv
or
add
int
addl
ljmp
jmp
xchg
js
cmp
sub
outsl
stos
lret
lcall
addr16
xchg
scas
xor
and
movsb
pop
ja
gs
mov
sub
and
shrl
cs
cmpsl
cmp
fdivl
leave
imul
push
mov
repnz
lods
mov
cmp
lahf
jg
mov
mov
ret
fstps
push
dec
dec
orl
inc
cltd
xchg
outsb
fdivs
jle
ja
mov
cltd
jnp
push
test
sbb
lret
ds
aaa
lret
push
iret
pop
sti
dec
sub
jo
xchg
add
push
int
ja
cmp
loope
fwait
jns
stos
stos
pop
scas
sub
idiv
aad
push
into
pop
jmp
bound
and
aad
sahf
pop
push
inc
nop
push
push
dec
fwait
xlat
mov
add
pop
or
incl
das
push
js
mov
es
nop
subl
ja
je
div
push
das
int3
or
push
or
pushf
and
scas
mov
mov
inc
pushf
ret
cmp
jecxz
jmp
pop
je
xchg
aaa
xor
jo
mov
push
add
in
mov
in
pop
jae
push
pop
ror
or
sub
aas
push
dec
mov
mov
inc
adc
cli
and
fisubrl
jae
imul
jb
push
insl
fwait
cmpl
push
ret
sbb
inc
fldenv
gs
sti
fildl
pop
mov
enter
insb
test
mov
frstor
scas
rolb
lret
cli
and
stos
push
call
sbb
in
add
cmp
jns
jmp
xor
scas
movsb
xchg
incl
mov
cmp
sub
pop
sub
push
fstpt
inc
jle
movsb
fidivrs
pop
stos
dec
mov
jns
out
xchg
and
or
mov
mov
cltd
aas
movsb
inc
lcall
xchg
add
hlt
leave
xor
cmp
in
enter
or
push
addl
lds
out
push
or
popf
add
int3
inc
mov
dec
push
imul
or
and
mov
cmpl
mov
test
mov
inc
jns
repz
xor
dec
pusha
stc
sbb
jp
inc
mov
and
iret
inc
inc
into
out
ljmp
jb
and
iret
aaa
inc
hlt
js
in
or
or
mov
inc
outsb
aaa
int
div
jne
pop
mov
dec
push
lcall
pop
ret
cwtl
add
mov
pop
push
mov
jns
test
mov
dec
in
popf
fstpl
sub
shll
sarl
push
mov
and
aaa
adc
cmc
sbb
mov
jns
popf
cltd
push
push
in
cmp
push
mov
lds
fnstsw
add
sbb
push
in
iret
lahf
cltd
adc
imull
adc
repz
add
divb
test
sub
stc
cmp
and
js
shlb
cmp
ljmp
mov
fmuls
clc
out
dec
fdivs
ljmp
inc
js
jnp
jp
push
hlt
adc
jmp
loop
xor
roll
repnz
aas
jmp
rcr
mov
or
popa
adc
push
loope
sar
stos
xor
lds
ss
jnp
imul
mov
fimuls
aaa
xor
mov
mov
data16
icebp
in
outsl
and
xchg
stos
aam
push
mov
bound
mov
call
xchg
roll
rcl
pop
out
jl
pop
insb
test
inc
cmc
xor
out
pop
repz
sar
int
lods
sbb
cmpsb
out
in
xchg
lods
fistpll
movsl
push
mov
xor
add
lahf
ds
cmp
cwtl
shll
push
pop
add
mov
jo
ud2
cltd
aaa
stos
add
idiv
lea
mov
stos
sbb
test
adc
jb
cltd
cwtl
or
or
pop
push
adc
rol
divb
pusha
mov
jnp
push
in
into
mov
clc
call
cmpsb
lcall
mov
add
jae
rcrl
loopne
xchg
cwtl
add
fidivrs
inc
xchg
lods
mov
aam
xchg
or
out
mov
notb
push
ljmp
mov
inc
adc
or
scas
cmpl
sbb
mov
js
out
loop
into
dec
out
mov
xorb
bound
and
sbb
loopne
dec
bound
push
jmp
mov
das
enter
add
jo
js
cmpsl
pop
fs
xor
rep
inc
daa
stos
mov
fcoml
test
push
sbb
rcrb
cmp
je
mov
or
dec
in
or
aaa
ss
fcoms
outsb
pusha
sub
add
daa
lods
insb
jne
shrb
and
adc
xchg
hlt
cld
mov
cli
add
lret
push
pop
xchg
mov
sub
push
push
push
inc
popa
loop
lock
clc
sub
inc
fstl
mov
addr16
je
lahf
jnp,pn
clc
cmc
add
fwait
mov
sub
stos
fstl
xchg
jbe
lods
add
testb
push
dec
add
roll
nop
fsubrl
testb
xchg
push
lods
sbb
xor
add
or
push
cmp
test
and
lcall
mov
rcrl
inc
xchg
cltd
adc
loop
data16
xchg
int3
fs
frstor
les
xchg
and
aaa
pop
arpl
lock
inc
aaa
dec
push
and
sbbl
ret
lea
stos
jge
rcr
xchg
daa
in
or
inc
cmp
xor
xchg
xor
and
ja
inc
cli
lret
cwtl
ss
outsl
mov
js
jmp
jge
in
cmp
bound
fwait
push
xlat
lret
xor
test
dec
andl
sub
mov
orl
int3
cmp
add
lods
cmp
mov
stos
dec
in
mov
cmpsl
sahf
jmp
ret
cmp
nop
add
sbb
and
push
out
sarb
lods
or
sahf
fcoml
mov
pop
pop
sub
loopne
xor
fs
inc
insl
xchg
stc
fmull
mov
rcl
jl
js
outsb
dec
iret
mov
push
dec
mov
test
shrb
adc
mov
fs
fidivrs
scas
in
lock
xlat
mov
xchg
jmp
lret
push
xchg
mov
subl
setno
repnz
loop
cvtdq2ps
aam
test
push
cli
dec
cmp
sbb
adc
jae
or
fucomip
or
sbb
mov
out
xor
sub
test
xchg
std
cmp
or
push
and
or
int
stos
inc
lds
dec
aad
inc
pushf
mov
jbe
pop
stos
mov
pop
dec
inc
idivb
ds
or
and
testl
xor
adc
pop
xor
movsb
lahf
ret
filds
adc
and
adc
mov
xchg
in
dec
pop
mov
cli
push
je
jb
ss
jmp
ja
test
cmp
les
aad
inc
jg
xor
add
sbb
push
mov
push
cmp
sbb
lds
pop
jcxz
sub
xor
adc
push
shll
aas
mov
inc
pop
cmp
sbb
in
cld
arpl
ret
in
orl
or
xchg
aad
pop
or
or
popa
inc
mov
dec
pop
fimuls
mov
enter
jg
inc
test
icebp
xchg
push
sub
jp
pop
aad
pop
sub
or
fsts
inc
mov
cmpsb
sub
and
lcall
cmp
push
dec
or
inc
sub
and
adc
mov
aam
daa
inc
sahf
adc
incl
stos
nop
dec
test
gs
add
int3
fidivrs
pop
loop
js
xchg
insl
cwtl
or
sbb
xchg
push
add
mov
inc
jo
cmpsb
insb
inc
or
aad
xor
outsl
jg
jg
repnz
jb
stos
cmp
dec
sbb
aas
movsb
orb
lock
adc
and
cld
insb
iret
pop
mov
loopne
repnz
js
mov
fs
adc
sbb
ret
mov
out
or
in
movsl
adc
push
xchg
push
test
gs
lods
in
aaa
push
iret
adc
xor
push
lcall
mov
pusha
add
hlt
or
imul
and
je
divl
mov
cwtl
pop
popa
mov
mov
cmp
jp
mov
cltd
in
aas
out
aam
push
cli
push
mov
fiaddl
imul
pop
push
in
insl
sbb
sbb
xlat
imul
push
loope
mov
js
jle
pop
dec
or
cmpsl
test
je
jle
sbb
pop
lret
xor
add
xchg
add
cmp
pop
int3
sub
loopne
enter
push
sbb
mov
push
loopne
in
push
and
mov
sbb
mov
mov
pop
and
and
repz
jb
test
in
sbb
fs
pop
add
jnp
rcll
and
sbb
cmp
mov
jecxz
insb
push
sub
mov
mov
push
sbb
xchg
ret
or
jecxz
jmp
pusha
mov
stos
pop
mov
jae
sub
scas
pop
adc
push
ss
ret
cmc
cmpsb
cs
lret
aam
movsl
and
fidivrs
iret
outsb
scas
lret
cmovb
sbb
mov
flds
push
adc
fwait
jnp
scas
sbb
adc
loop
das
sub
pop
adc
inc
jp
cmp
rorl
mov
insl
sarb
lahf
xchg
imul
in
shlb
adc
cmp
mov
movsb
lods
cmp
xchg
fidivrl
cli
mov
push
cs
and
push
clc
sbb
jl
movsb
xlat
js
sub
cmp
daa
movsl
lods
fistps
pop
cli
or
aas
mov
xor
or
add
jg
and
pop
repnz
push
mov
push
popf
popa
not
jg
cli
outsl
xor
mov
pop
imul
jl
xor
js
jno
jne
fs
cmp
ret
pusha
jp
and
stos
push
loope
daa
stos
fbstp
test
inc
popl
adc
xor
cmpsb
lret
lods
sbbl
cmc
add
or
stos
cmp
xchg
jne
mov
ds
mov
mov
dec
jnp
dec
lcall
ret
dec
cmpl
in
in
sub
push
mov
outsl
mov
xchg
dec
daa
sub
sbb
enter
pop
push
xchg
fisttps
dec
dec
mov
sbb
xchg
jno
movsb
ret
bnd
int3
dec
push
and
movsl
dec
sbb
mov
scas
xchg
jg
sub
lea
pushf
rolb
cli
inc
insl
insl
pop
fs
iret
inc
jmp
adc
int
dec
pavgb
xor
divl
lods
sbbl
fs
xchg
xor
and
dec
mov
loopne
mov
fdivr
js
nop
mov
inc
mov
add
pop
mov
sub
dec
stc
jl
enter
mov
sbb
sub
push
cmpsl
adc
lods
adc
push
xchg
movsb
xchg
icebp
mov
test
add
call
addr16
cld
pushf
test
rclb
mov
push
aam
int
icebp
divl
popf
xchg
mov
clc
dec
or
stos
jbe
mov
dec
filds
cmp
movsl
push
gs
insb
mov
repnz
bound
ret
dec
and
mov
decb
into
mov
jno
mov
jmp
roll
inc
cli
or
ds
and
sarl
out
aad
fisubrs
cmp
cld
mov
and
sbb
xchg
mov
and
cltd
sub
xchg
mov
sub
addl
pushf
or
frstor
cmpsb
pushf
jo
jne
pusha
dec
ja
jnp
mov
cld
xchg
sub
jg
not
mov
jecxz
cmp
movsb
cmp
push
std
testb
and
dec
fadds
clc
fstpl
jb
add
popa
es
aas
xor
aam
mov
xchg
mov
scas
cmp
dec
cmpsb
cli
scas
cmp
push
cmc
xchg
sub
orl
mov
ret
or
mov
jo
inc
aam
insl
jnp
xchg
mov
in
imul
dec
jl
mov
ss
sbb
mov
loope
mov
dec
into
stc
mov
shll
xor
out
xlat
inc
lds
sub
jge
or
mov
mov
insl
sbb
inc
test
xchg
ret
cwtl
sbb
xor
out
mov
mov
gs
xchg
pop
movsb
daa
lret
xor
jmp
pop
jg
push
jbe
movsb
and
mov
cmpsb
insl
jle
mov
test
dec
scas
push
imul
cmpsb
xlat
inc
imul
or
jbe
out
jmp
insl
arpl
xor
cltd
out
inc
addl
in
arpl
mov
cmp
jns
stos
add
jle
repnz
aas
dec
pop
xchg
shrl
movsb
xor
loopne
lcall
adc
movsl
dec
out
dec
adc
mov
adc
or
mov
mov
pop
sbb
lods
jecxz
fsubl
xor
sbb
shll
insl
push
jp
xor
push
leave
hlt
xor
leave
jg
divb
jmp
mov
mov
cmpsl
jl
mov
into
xchg
bnd
out
cmp
sarl
lcall
jns
xchg
sub
xchg
push
push
xchg
sbb
inc
outsl
stos
fwait
out
jle
pusha
adc
ss
jge
scas
out
push
mov
dec
or
fsubl
loope
addr16
fwait
cs
mov
cltd
dec
ljmp
jae
pop
icebp
mov
dec
mov
cmpsl
sti
jmp
xchg
push
loop
pop
jns
xchg
fldt
stos
shr
pop
das
test
jle
sarl
push
xchg
inc
loope
xchg
pop
dec
insb
inc
xchg
jle
jmp
xchg
je
mov
lret
add
mov
push
shl
sahf
add
sbb
ja
jnp
mov
push
lcall
sti
out
dec
fidivrl
fnstcw
mov
pop
loope
int
or
mov
dec
std
pop
push
aad
mov
es
or
lods
enter
xchg
adc
add
push
sub
inc
mov
lods
fsubs
lret
shlb
sub
add
dec
faddl
aas
push
fidivl
cli
cmp
push
test
outsl
cmc
daa
fistps
sbb
sub
cmp
mov
push
aam
stos
cmc
xlat
ja
mov
push
pushf
and
in
fbstp
fnsetpm(287
mov
loopne
xor
mov
xor
cmp
mov
sbb
pop
push
stc
lods
mov
jmp
dec
xchg
aaa
lahf
fs
jl
xchg
push
adc
mov
lods
dec
stc
lcall
jns
int3
adc
ret
or
test
or
xchg
cmpb
push
call
in
es
std
test
stos
mov
mov
mov
mov
mov
mov
js
int
sub
cltd
jo
cmpsl
lock
fldenv
loop
call
cld
jp
add
inc
sbb
pop
loop
dec
fs
pusha
ss
xlat
push
jl
xchg
ljmp
fnstsw
sbb
or
daa
test
adc
push
sbb
aas
push
dec
pop
movl
cmp
bswap
inc
or
daa
xchg
cli
adc
cmp
pushf
or
xor
sbb
repz
sbb
lods
aaa
adc
and
push
jne
bound
mov
mov
mov
je
sub
lahf
cwtl
and
popa
in
pop
mov
sbb
sub
pusha
dec
addr16
sbb
repnz
leave
xchg
or
pop
lret
icebp
in
push
adc
pop
daa
das
inc
push
xor
fsubrl
int3
sahf
sahf
or
jo
pop
mov
jno
cmp
in
xchg
xchg
sub
dec
test
xchg
mov
aaa
jp
out
lret
mov
jp
lret
addr16
dec
js
xchg
xchg
outsl
mov
ja
or
test
sbb
or
sbb
pop
test
mov
sar
aas
sub
cmp
jbe
or
outsl
std
dec
xchg
inc
mov
sbb
jnp
push
add
test
iret
sti
pop
fdivrs
cmp
mov
jo
pushf
xchg
out
cmp
fstpl
add
sbb
movsl
xor
stos
arpl
cmp
stc
hlt
add
jg
mov
andb
dec
out
jl
out
sbb
pop
lods
ds
sbb
mov
lcall
push
add
arpl
jp
mov
leave
jmp
outsl
xchg
out
aam
cmc
cli
jae
xchg
pop
popa
and
add
xlat
push
or
mov
push
and
lock
arpl
shrb
ljmp
lock
sbbl
pushf
push
pushf
je
jns
pusha
push
jne
mov
loopne
das
push
outsb
sub
into
shlb
inc
and
jnp
inc
dec
and
in
icebp
add
push
jnp
orb
inc
fwait
xchg
sub
addl
add
sub
stc
push
ljmp
incl
xlat
push
arpl
xchg
dec
mov
shlb
loop
pop
or
push
dec
push
jecxz
aaa
in
add
loopne
and
outsl
dec
outsl
push
push
sbb
jno
sti
jle
rol
or
add
les
fisttpll
mov
addr16
lods
push
and
sbb
pop
dec
lods
outsl
outsl
mov
add
sub
or
add
scas
add
push
in
or
jge
not
loopne
push
mov
loope
imul
sbb
xor
je
mov
jmp
sub
or
das
cld
cmpsb
inc
xchg
iret
xor
rcll
sbb
shlb
sbb
les
pop
mov
push
xor
lds
addr16
add
jecxz
pop
lods
lret
mov
stos
mov
jo
cmp
or
inc
dec
in
jg
cmp
mov
dec
inc
lea
dec
adc
xlat
and
fildl
fwait
divl
dec
out
mov
cmpsb
cmp
pushf
sbb
sub
test
xor
popl
pop
add
xor
lock
cli
aaa
int3
and
fs
pop
push
aam
js
mov
inc
sub
mov
push
outsb
xchg
popa
jne
sub
mov
fmulp
sbb
out
mov
test
test
in
mov
mov
mov
cmp
jns
add
push
lock
adc
sbb
adcl
sbbb
sub
daa
iret
push
mov
es
pop
clc
je
cmp
cmp
xchg
addr16
scas
adc
xor
dec
and
adc
repz
jnp
push
jge
leave
sbb
mov
cmp
mov
test
push
cwtl
stos
adc
dec
cli
fiadds
mov
rcrb
lcall
sarb
imul
xor
ss
and
xchg
or
dec
mov
mov
mov
out
mov
mov
shll
nop
stos
loopne
shrl
inc
jne
xchg
popl
out
arpl
popa
mov
test
push
inc
je
sahf
cwtl
jmp
pop
sbb
inc
ret
rep
shlb
lods
adc
repnz
mov
and
imul
xor
sbb
mov
inc
shl
or
pop
enter
cmp
lcall
sar
bound
js
mov
data16
dec
repz
pop
fistpl
lea
js
mov
sub
stc
leave
lock
dec
mov
sbb
lret
and
push
loop
inc
loopne
popa
sbb
pop
ds
dec
mov
movsl
arpl
push
das
int3
or
int3
in
fwait
lds
mov
fsubp
cmpsl
dec
push
and
xchg
sub
call
jmp
sub
addr16
sub
aad
xchg
mov
and
sub
sti
cmp
popa
add
mov
ljmp
lock
out
cmpsl
fs
sahf
shl
xchg
xor
push
jbe
mov
mov
adc
idivb
sub
xchg
adc
xor
loope
and
sub
repz
fwait
sbb
mov
add
adc
decb
stc
lods
gs
and
outsl
mov
dec
lock
dec
mov
push
shll
push
xor
movsl
hlt
out
mov
lret
inc
mov
outsb
hlt
push
in
daa
push
mov
xchg
mov
adc
fidivs
jo
push
aad
jo
adc
ror
aam
int
or
repz
rorl
into
pushf
ds
cwtl
pop
add
outsb
cmc
push
fsubs
ret
nop
pop
dec
jl
lret
imul
mov
push
lcall
pop
xchg
jp
adc
push
pop
out
sbbl
loopne
xchg
push
inc
dec
inc
aad
push
outsb
push
mov
cwtl
mov
push
stos
cmp
test
mov
loopne
shrb
sub
jp
dec
xchg
jbe
mov
dec
push
cmpsb
sti
mov
pop
or
and
faddl
sbb
out
pop
pop
mov
or
jb
enter
enter
push
xor
ds
mov
sub
or
sbb
sub
ds
data16
call
lods
ror
adc
jae
push
push
fdivs
movsl
shlb
mov
popa
and
mov
loope
mov
jo
xchg
mov
or
and
mov
ror
les
cmpsb
pop
lret
dec
js
push
into
adc
adc
rep
pop
cmpsb
test
clc
pop
xchg
xor
jle
xor
gs
dec
scas
mov
pop
jge
std
lret
stc
js
sti
pop
out
div
mov
lock
jl
adc
das
fsub
divb
adc
test
cmc
das
or
mov
cmpsb
cltd
loop
xor
pop
xchg
pushf
mov
push
dec
push
cmp
add
std
and
jns
stos
add
mov
xchg
call
rcrl
cmp
lahf
loopne
jno
int3
mov
sub
pushf
jnp
arpl
pavgb
jne
fistpll
popa
adc
xor
mull
cmpsb
pop
sbb
mov
lahf
push
jmp
stos
pop
mov
or
dec
loopne
inc
mov
xor
push
push
add
adc
inc
lret
sub
popf
dec
adc
cmp
pop
inc
dec
xchg
aaa
push
push
inc
leave
pushf
sbbl
cmovle
xor
push
sub
xchg
imul
fidivrs
call
pop
cmp
mov
cmp
xchg
and
sbb
icebp
aam
in
lahf
mov
std
out
js
lock
icebp
jns
mov
mov
aad
xchg
or
mov
insl
test
decb
orb
popa
push
dec
aam
cltd
or
sbb
jge
daa
sub
mov
push
std
inc
les
dec
shlb
fcmovu
adc
outsb
xor
xchg
insb
insl
mov
hlt
or
std
xorb
pop
fstps
mov
pop
rcrb
add
inc
xor
aas
mov
popa
lcall
rcrb
cmpsb
and
into
fneni(8087
adc
cmp
pop
frstor
mov
mov
pop
lea
pop
sub
pop
ljmp
mov
cmpsb
idiv
mov
ljmp
pop
mov
lods
in
xor
cmp
cs
xchg
and
scas
pop
mov
mov
movsb
mov
mov
outsl
jno
stos
adc
mov
lret
les
bsf
xorl
lea
ljmp
lock
lret
pop
jno
xchg
and
roll
xor
dec
jp
sahf
aad
clc
loopne
mov
add
or
jecxz
push
je
out
jne
testl
lcall
mov
mov
pop
cmp
xchg
xchg
mov
mov
push
mov
aas
jp
ss
or
add
pusha
or
dec
ret
repnz
js
jl
stc
mov
mov
shlb
lret
scas
pop
mov
nop
xor
pop
cmc
loop
ljmp
lock
mov
fsts
into
xlat
push
sub
shrl
pop
xchg
inc
adc
imul
outsb
lock
jns
dec
fst
arpl
scas
jmp
nop
cli
clc
lods
rcr
add
dec
out
cld
stos
jne
xchg
inc
cmp
mov
sbb
adc
cld
pop
aas
addr16
xchg
cmp
hlt
adc
fdivl
call
pop
inc
jae
mov
cmp
adc
cli
lahf
adc
pop
mov
cli
xor
in
iret
out
mov
int
into
add
loopne
lea
inc
jecxz
dec
lock
xlat
xchg
call
dec
popa
mov
jae
loope
ret
push
pop
scas
repnz
xor
lods
pop
popf
mov
sti
jge
pop
fisubrs
pop
fcmovu
test
call
or
jns
xor
std
lcall
orl
mov
jp
cmp
bound
fdivs
jne
mov
mov
das
dec
imul
addr16
xor
cmp
test
xor
xor
xor
cmp
pushf
push
pop
xor
add
pop
incl
mov
lods
test
pop
inc
fmul
loope
mul
pop
sti
and
and
enter
xor
ds
jns
mov
xchg
xor
cmpsl
sbb
mov
fisttpll
pop
mov
mov
das
xor
jle
dec
mov
lcall
dec
mov
add
inc
sbb
xchg
imul
xor
incl
mov
ja
cmp
sub
mov
enter
push
in
insb
push
aam
in
cmpb
mov
add
cwtl
ljmp
aad
cmp
andl
push
sahf
mov
mov
cmp
sub
ret
mov
nop
mov
insl
outsb
mov
aaa
cltd
mov
mov
adcl
and
add
fidivrl
lds
push
ja
loope
sbb
jp
mov
and
push
fbstp
in
fcompl
in
push
fldenv
and
cmp
mulb
test
and
dec
ret
cli
loopne
int3
mov
aaa
ret
rcl
mov
mov
fidivl
jno
pop
dec
and
add
sub
push
push
pop
out
push
cwtl
add
and
cmp
mov
lahf
shll
gs
addr16
xlat
out
mov
pop
insb
xorl
pop
pop
mov
dec
loopne
dec
add
mov
cwtl
jg
cwtl
jle
push
mov
dec
sti
lcall
sub
and
xchg
mov
mov
int3
lcall
xchg
push
mov
aas
pusha
scas
add
popf
call
xor
mov
and
mov
cmc
mov
movsl
mov
jo
xlat
mov
enter
repz
fisttps
data16
cmp
xchg
les
cs
add
int3
shl
lods
std
dec
add
push
in
pop
cltd
xlat
loop
cmpl
ss
adc
or
movsb
push
push
mov
sub
inc
dec
stc
int3
mov
jg
icebp
xchg
test
jmp
sbb
adc
dec
mov
pop
sahf
enter
in
mov
jbe
lea
imul
sub
push
push
gs
or
dec
aas
scas
aad
jecxz
pop
dec
lret
xchg
push
xchg
mov
in
xchg
cmp
dec
pop
fnstsw
lahf
mov
cmp
mov
pop
fwait
mov
test
push
insb
jp
cmp
and
mov
xchg
push
lods
add
pushf
push
fstpl
pop
aaa
and
scas
and
into
mov
mov
outsb
mov
jnp
adc
xor
iret
icebp
icebp
jnp
add
sbbb
adc
add
call
movsb
push
cli
daa
sti
push
jne
or
mov
xchg
push
jg
hlt
cs
shl
pusha
cmpsb
inc
pop
push
mov
sub
cmpb
pop
push
cmp
cmp
insl
in
cmpsl
movsb
cmpsl
in
push
mov
outsb
into
mov
and
push
jl
fmuls
push
cwtl
out
mov
in
aad
mov
xor
movsl
sbb
negl
mov
xor
aas
mov
add
mov
test
imul
sub
int
lahf
bnd
outsl
fists
mov
jp
orb
test
out
xchg
out
cmp
lea
outsb
sbb
ds
cs
loopne
fdivrs
js
mov
dec
xor
push
and
fiadds
cmc
and
pusha
fnstenv
dec
pusha
pop
popf
mov
pop
mov
sbb
mov
cwtl
push
loopne
cmpsl
lret
jmp
imulb
mov
gs
xor
mov
mov
fcmovne
call
adc
or
call
dec
fimuls
popf
lods
into
test
mov
sub
and
addb
cwtl
cmpsl
cmpsl
icebp
add
cmp
inc
sub
mov
sbb
push
mov
in
daa
sbb
or
mov
daa
test
xor
pop
filds
imul
bound
dec
inc
mov
and
xchg
cmpsb
pop
xchg
mov
int3
divl
cmpb
sub
lcall
mov
xchg
push
cmp
dec
jno
mov
mov
sub
dec
int
dec
mov
jg
std
test
sbb
cltd
repnz
inc
jo
mov
test
data16
int
push
cmp
xchg
rolb
mov
lret
mov
out
jp
push
jnp
ja
and
popf
enter
dec
lock
and
mov
jb
in
inc
mov
pusha
cmp
int
bound
jae
dec
pop
dec
sbb
je
jecxz
mov
ret
add
push
add
push
in
outsl
mov
pop
scas
mov
cmpsl
bound
jp
mov
scas
xchg
rol
sbb
mov
popf
in
sub
pop
lahf
in
addr16
mov
mov
ss
adc
insb
ret
call
leave
dec
out
push
cltd
xor
ror
add
xchg
adc
int3
iret
jbe
xlat
pop
or
dec
pop
jne
fcomps
sub
or
xchg
sbb
jmp
repnz
cli
lea
int
push
into
and
lcall
loope
jl
pop
push
mov
sub
test
and
push
adc
addr16
fdivs
push
daa
push
pop
push
and
ja
outsl
inc
lcall
dec
std
jge
pop
pushf
xor
cwtl
sbb
popa
add
pop
std
sub
sbb
adc
add
jo
int
inc
sbb
fs
in
mov
mov
lret
inc
pop
mov
push
outsb
sti
dec
out
cltd
lret
ror
cs
dec
stc
jae
push
jbe
test
rolb
mov
xchg
fmull
fdivrl
sti
cmc
cmpsb
mov
rsm
adc
repz
ss
loop
dec
shlb
out
inc
sub
sub
mov
scas
stos
adc
test
fcoml
fsts
inc
adc
aaa
aad
dec
ror
push
push
out
mov
dec
dec
pop
and
movsl
nop
dec
cmp
mov
jmp
aad
lret
fcompl
mov
or
shl
and
sub
arpl
push
fdivl
test
clc
aad
xor
fwait
insb
jo
jns
sub
pop
pcmpgtw
and
fbstp
jp
or
leave
cmp
cmp
add
push
add
int
cmp
add
xor
subb
jo
call
mov
jbe
pusha
jmp
xchg
cmp
mov
jmp
cwtl
xchg
lds
les
xor
fcomp
add
inc
mov
xchg
or
sbb
sbb
loope
loop
js
nop
dec
or
daa
pop
xchg
std
roll
jo
dec
push
jecxz
daa
into
push
cmp
xchg
outsb
int3
add
mov
cltd
fwait
cmp
pop
pop
inc
mov
call
out
mov
out
push
sub
jle
shrb
dec
and
gs
xor
ret
or
out
push
sbb
sbb
mov
fcomi
enter
push
loop
lock
adcb
subb
nop
xor
lahf
jae
cmp
sub
and
enter
lock
cmp
addr16
mov
mov
insl
les
repnz
in
xchg
inc
adc
mov
call
dec
sti
out
in
mov
sbb
incb
lret
sbb
sbb
loope
das
cli
sub
dec
js
mov
and
sti
sti
lahf
sub
insb
xor
sahf
xchg
rclb
mov
ror
sub
pop
in
push
pusha
movsl
jmp
imul
cmpsb
jno
imul
cmp
mov
jne
jb
movsb
dec
dec
mov
xlat
adc
mov
icebp
pop
push
je
inc
xor
lret
fs
fistpl
call
icebp
mov
mov
cmp
nop
push
in
loope
cmpsb
sbb
out
xchg
adc
lahf
sbb
leave
into
mov
andb
jmp
je
mov
andl
stos
inc
in
aad
mov
add
mov
push
mov
and
adc
xchg
mov
daa
adc
mov
into
pop
iret
cwtl
aad
pop
sbb
pop
into
mov
mov
pop
adc
fstpl
fidivrl
cmp
rolb
and
imul
push
pop
into
and
arpl
cmpsb
cmc
je
stos
inc
repnz
or
mov
lcall
shlb
ss
je
sahf
sub
ret
mov
fs
xchg
sti
mov
fsubs
sub
ss
arpl
ret
add
lods
cmp
sbb
sbb
std
inc
sub
aas
or
aaa
leave
xchg
popa
sub
add
push
stos
sub
pop
sub
jp
hlt
int
mov
cmc
int3
xchg
lea
out
pop
hlt
and
mov
addl
sahf
repz
cmpsl
cld
les
scas
hlt
and
jbe
pop
fstp
fs
cmp
push
fld
lcall
imul
test
pop
mov
imul
mov
xchg
xchg
mov
dec
jnp
jo
cs
mov
adc
and
testl
xor
xchg
push
iret
jbe
pusha
sahf
fmuls
shl
jae
sub
push
fdivl
out
mov
int
push
jo
jbe
sti
adc
adc
idivb
leave
mov
xchg
pop
bswap
sbbl
cmp
enter
or
jecxz
xchg
imul
stc
in
jb
inc
sub
notb
dec
dec
cmp
jg
in
adc
inc
xor
fldt
repnz
inc
or
lret
push
xchg
or
xorb
push
sbb
loope
popa
popf
inc
add
in
pop
out
popf
shl
lea
mov
jg
add
sub
xlat
cli
inc
popf
xor
mov
out
ds
mov
pop
xchg
imull
cmc
mov
push
popf
stc
iret
fucom
xor
xor
sub
jb
aaa
dec
subl
outsb
jecxz
movsb
mov
or
and
scas
inc
mov
push
mov
dec
ja
pop
push
imul
mov
outsb
ret
clc
xor
shlb
adcb
leave
das
add
cmp
or
xor
pop
hlt
push
inc
cltd
or
ljmp
push
xor
xchg
lcall
mov
or
pushf
insb
adc
jecxz
mov
adc
or
add
lds
jl
xor
fidivs
negb
inc
xor
adc
sub
push
jo
shlb
mov
das
sbb
or
insl
and
push
inc
jmp
dec
addr16
mov
add
or
in
sub
mov
pop
jmp
lret
nop
fistps
in
fisubs
arpl
mov
mov
jp
push
xchg
cmp
mov
not
fistpll
mov
aam
popf
test
cmp
push
fldcw
xchg
int3
stc
pop
and
sub
jge
sbb
sub
sbb
jmp
sub
dec
loop
mov
mov
aaa
and
xor
outsb
lret
lea
mov
jne
insl
decb
or
push
insb
shlb
cmpsl
bound
fisttpl
mov
jmp
cmp
inc
sub
pop
sbb
push
aaa
push
lret
leave
repz
movsl
in
jno
clc
popa
cld
ds
sbb
lea
nop
jmp
sar
aam
jp
loop
and
mov
dec
stos
add
jno
adc
shlb
jmp
loop
out
out
outsb
ret
cmpsl
rorb
push
subl
mov
sbb
int3
lahf
xchg
orl
sbb
shrb
jg
cltd
add
daa
inc
push
and
inc
std
mov
addr16
pop
jae
je
adc
add
fnstenv
fimuls
sbb
in
in
in
push
cmpsl
jl
scas
pop
sbb
xor
andw
xchg
push
shll
bnd
xchg
lcall
and
out
movsb
mov
or
insb
cmp
ret
orb
ret
lret
loop
scas
popf
mov
or
in
push
and
push
sbb
test
orl
inc
dec
adc
dec
inc
daa
pop
lods
jecxz
inc
push
xor
popa
dec
mov
dec
aam
and
mov
xor
xchg
lock
cmp
int3
dec
aad
mov
sbb
aad
sbb
jns
adc
adc
sub
fists
inc
mov
dec
xchg
pushf
cs
insl
dec
xor
adc
je
iret
push
daa
rcl
jnp
es
insl
in
or
jmp
stc
imul
mov
sbb
cmp
xchg
pop
sbb
std
mov
xchg
pop
stos
out
adc
and
xchg
mov
ficomps
push
dec
mov
xchg
repnz
int3
hlt
sbb
into
and
mov
xor
pop
call
test
pop
push
lret
pusha
push
cmp
dec
les
movsl
xor
pushf
arpl
xchg
insb
xor
test
xor
jns
dec
cmp
push
in
sbb
cmpxchg
ss
or
rcll
cli
mov
jne
or
js
or
adc
add
repz
iret
or
aam
int
cwtl
inc
das
cltd
mov
adcl
cmp
mov
mov
sbb
xchg
inc
mov
mov
pop
cwtl
dec
in
mov
mov
setle
mov
mov
jb
push
xlat
adc
push
cltd
mov
push
or
and
or
addl
stos
xor
mov
xlat
in
lds
shrb
int
sub
call
cmp
jge
add
add
fwait
push
pop
cmpsb
xor
mov
jp
int
inc
negl
sub
repnz
fsubs
test
pop
lea
aad
and
mov
ljmp
cmp
movsb
imul
adc
xor
incl
sub
pusha
jmp
out
imul
jg
lret
imul
ja
daa
imul
adc
jp
inc
mov
push
cmp
mov
jle
popa
xchg
cs
mov
enter
xorl
lods
lea
mov
push
push
sub
loope
mov
pop
frstor
movsb
cmp
jge
xor
add
xor
inc
xor
fcoml
jmp
gs
fsincos
mov
dec
xor
aas
sarb
push
jne
cmpl
mov
pushf
test
and
ret
outsb
das
lds
test
repnz
jo
mov
loope
cmp
xchg
sbb
cwtl
adc
push
iret
das
xchg
jb
lock
dec
jae
xchg
push
inc
sub
add
dec
push
inc
pslld
jnp
or
xchg
dec
mov
adc
mov
mov
adc
xor
lret
ror
sarl
cld
push
dec
sub
or
mov
jbe
cld
rorb
repz
push
or
lahf
pushf
mov
movsb
mov
cmp
loopne
cwtl
inc
adc
shrl
pusha
icebp
decl
push
push
icebp
xchg
mov
cmpsb
test
jmp
sbb
rcl
icebp
test
clc
fnstcw
push
stos
sbb
or
inc
pop
inc
jge
cs
pop
pop
stos
gs
or
cmp
stc
jne
mov
dec
mov
scas
mov
xchg
sbb
sub
into
and
xchg
jo
xchg
or
aas
int3
lea
dec
jbe
test
jmp
xchg
xchg
fldenv
fadd
xor
xor
mov
mov
jnp
and
cmpl
xor
repz
pop
mov
add
jmp
or
cmpb
pop
xlat
mov
clc
hlt
ret
outsl
cmc
pop
sub
add
pop
cmp
adc
pop
mov
in
outsl
daa
lahf
inc
loopne
xor
scas
movsl
bound
ds
sbb
mov
leave
cmp
sbb
and
inc
imul
fs
pop
mov
mov
in
fiadds
add
xchg
pop
je
lret
or
out
mov
inc
or
orl
pop
sbb
rolb
or
lahf
hlt
gs
addr16
test
push
lea
sti
mov
jnp
aas
pop
cltd
hlt
btr
or
jecxz
out
pop
lods
lods
xor
jecxz
mov
test
jl
inc
sub
stos
std
mov
mov
mov
cs
or
jp
xor
mov
roll
es
fcoml
add
dec
cs
das
push
sbb
out
ret
shrl
mov
sti
int
fcoml
jl
sub
xchg
sti
jno
push
leave
lds
call
gs
or
into
rorb
sub
data16
outsb
imul
cmp
int3
push
stos
inc
enter
jnp
mov
lret
jmp
sti
jecxz
loop
pop
pop
out
test
andb
xor
test
dec
jne
xor
gs
jp
fiadds
add
push
movsb
inc
sub
dec
inc
mov
sarb
clc
xlat
fiaddl
lds
sarl
ret
sub
cmp
sub
and
lods
ret
mov
lret
xchg
movsl
mov
sbb
outsb
mov
daa
or
mov
xor
jae
and
pop
lods
push
outsl
cmpsl
imul
push
or
incb
push
mov
ss
and
pop
stc
cs
push
dec
adc
inc
xlat
sub
jmp
sahf
aaa
ljmp
into
lret
adc
or
mov
xchg
dec
jns
sbb
ja
mov
aaa
and
test
and
stc
and
add
lds
mov
andb
xchg
mov
mov
jmp
xor
mov
in
jmp
mov
cld
lds
xor
or
jns
sti
dec
push
jmp
cwtl
sub
pop
das
mov
xchg
mov
xor
or
into
adc
pop
movsb
lods
xchg
mov
dec
mov
pusha
jbe
das
movsb
out
jnp
xor
gs
sbb
and
orl
fimull
testl
push
mov
stc
dec
icebp
xchg
mov
pop
je
stc
andb
int
adc
leave
xor
pop
popf
rorb
adc
jge
pop
loop
pop
ljmp
pop
xlat
lock
mov
fcompl
ret
xchg
outsb
xor
add
mov
push
jg
lret
cmp
xor
pop
jecxz
cmpsb
jl
lret
and
push
outsb
jnp
shll
mov
push
inc
sub
push
jle
mov
jo
cld
inc
pop
jge
dec
adc
sbb
add
stc
xor
loopne
sbb
jb
es
loope
inc
out
mov
shl
mov
repnz
addb
mov
inc
mov
ljmp
subb
or
adc
add
adc
mov
jbe
sbb
pop
fcompl
ret
and
add
mov
mov
jne
imul
das
sbb
mov
push
ss
sbb
leave
leave
nop
xchg
loop
sbb
aad
rol
in
lods
mov
xchg
sub
ret
loop
adc
imull
aaa
into
clc
daa
lods
jo
sbb
pop
jecxz
sbb
gs
push
inc
mov
imull
lds
push
movsb
xlat
sub
imul
push
mov
lcall
and
push
lret
cwtl
lahf
in
inc
in
mov
sahf
int
cmp
scas
push
jmp
jns
sbbl
jg
invlpg
and
mov
bound
push
es
daa
imul
cmp
pop
fwait
mov
clc
xchg
dec
xchg
sbb
sbb
inc
push
inc
jnp
push
and
push
inc
bound
sbb
aaa
mov
mov
cmpsb
push
and
or
fsts
dec
and
and
int3
xor
cs
jne
adc
inc
jae
pop
mov
jns
stos
addr16
mov
and
inc
mov
enter
add
and
mov
imull
sbb
dec
andl
aas
or
scas
pop
in
sbb
orb
pop
jp
arpl
enter
je
scas
xchg
test
xchg
adc
cwtl
xor
aas
fiadds
mov
xor
pop
cmpsl
jne
aaa
or
mov
or
pop
xlat
lret
ret
sub
fistps
cltd
dec
pop
test
xchg
xchg
rolb
movsl
out
out
mov
stc
jbe
jns
sbb
int
cmpl
mov
es
jg
sub
adc
push
jp
les
xlat
in
cmp
sub
jmp
sub
lahf
mov
lock
jl
adc
pop
icebp
divl
popa
inc
push
add
into
push
xor
jge
jg
push
pop
xchg
adc
inc
outsb
nop
and
mov
cmpsl
xchg
stos
pop
imul
mov
adc
outsl
mov
sbb
bound
inc
xor
gs
fsubl
in
lods
out
mov
mov
cwtl
enter
stos
dec
pop
aas
jge
pop
cmp
inc
mov
das
sbb
dec
movsb
xor
in
and
negl
mov
mov
or
test
mov
sbb
bound
int3
lock
fisttps
das
scas
imul
jp
ds
into
sbb
rclb
sbbb
daa
filds
xor
fldenv
pop
mov
cmp
fidivrs
add
imul
jp
imul
push
nop
mov
mov
xor
sar
xchg
add
inc
mov
mov
outsb
test
push
cmp
cmpsl
sbb
xor
jne
xchg
jns
or
insl
cmpsl
lds
push
mov
lea
push
aam
nop
in
loopne
jae
mov
push
or
sub
fisubs
ret
add
gs
jl
jge
mov
xchg
sarl
mov
cmp
dec
pop
gs
test
inc
out
xlat
adc
mov
shlb
hlt
ror
xchg
and
xor
xchg
sar
outsb
nop
jmp
mov
ds
or
in
jg
jne
xchg
inc
adc
and
out
inc
and
or
xor
mov
inc
cmpsl
and
movd
mov
xchg
inc
pop
repz
jns
pop
dec
cld
jnp
aam
push
and
je
leave
mov
rclb
aaa
ret
mov
mov
lds
xlat
pop
in
call
and
stos
adc
push
jl
sub
outsb
push
stos
push
imul
xchg
cmpsl
js
repnz
movlps
inc
jmp
pop
inc
mov
addr16
xlat
lods
ljmp
aaa
sub
mov
push
jb
xchg
lods
add
idivb
push
roll
push
and
mov
xchg
sub
hlt
iret
or
lea
cmc
xchg
shll
and
jge
mov
loope
pushf
adc
cmp
xchg
andb
sbbb
sub
pop
push
or
lret
scas
sbbb
fimuls
mov
mov
and
mov
push
inc
xchg
cs
int3
pop
cmp
lods
arpl
mull
inc
ficoml
jle
pmulhw
sbbb
adcl
lds
imul
dec
or
rclb
lret
mov
fnstsw
and
xor
xchg
ret
xlat
xchg
sarl
imul
rclb
push
mov
ret
lcall
loop
mov
jge
mov
cli
jae
out
jle
mov
shll
add
or
or
insl
xor
ja
inc
push
aas
mov
cmp
loopne
pop
arpl
cli
lret
out
sub
ds
dec
mov
ret
loope
jo
and
nop
mov
mov
lahf
jle
test
xor
jmp
movsl
aas
movntss
and
pop
jne
cs
dec
test
push
mov
mov
xor
pushf
xor
jg
mov
gs
loop
js
xor
insl
cld
xor
inc
jge
xchg
pop
cmpsl
sbb
andl
loope
arpl
push
icebp
loopne
cli
cmp
mov
push
push
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
aam
outsb
dec
dec
ja
sbb
mov
loop
push
mov
movsl
push
xlat
xchg
fldl
pusha
mov
sbb
cwtl
fbstp
loopne
mov
adc
scas
ljmp
push
pop
or
rclb
aaa
adc
xor
mov
mov
popa
out
lcall
mov
shlb
jl
outsb
mov
sub
cmp
dec
jl
pop
xchg
incl
dec
jae
mov
cpuid
sub
mov
mov
inc
out
mov
push
sub
push
dec
outsl
sub
jo
fildl
cmp
ret
ja
fs
aam
sbb
or
push
inc
lcall
les
add
push
loope
loope
scas
xor
mov
repz
dec
pop
jg
lahf
push
and
cwtl
and
cli
lods
lods
pop
leave
insb
pushf
xor
sti
enter
mov
je
xchg
shrb
inc
cmpsl
push
idivl
jp
and
and
push
into
aas
in
pop
pusha
adc
add
mov
out
repz
mov
lcall
shll
jecxz
inc
and
test
stc
mov
sub
pop
ds
mov
pop
lock
jae
push
test
mov
xor
lcall
addr16
sahf
ffree
sub
sub
jl
clc
cli
mov
scas
test
sub
imul
and
pop
pop
jle
mov
inc
ret
sbb
insb
fisttpl
pop
mov
int3
inc
jl
out
cld
sub
outsb
jg
mov
dec
xorl
andb
aad
movsb
or
sub
out
insl
pop
repnz
test
inc
fisubl
mov
mov
xlat
fst
iret
push
aad
leave
addr16
fidivl
dec
pop
fsubl
mov
inc
sub
scas
ret
push
out
cld
cs
ret
clc
cmp
mov
shlb
out
mov
aad
into
add
stos
xor
mov
or
ja
xor
enter
sbb
cmp
mov
cmpsl
mov
hlt
mov
ss
pop
out
and
xor
mov
aaa
dec
jmp
cltd
fimuls
in
xchg
mov
jb
sbb
pop
sbb
mov
and
imul
imul
ss
jo
sub
mov
xchg
and
jae
mov
fildl
rsqrtps
cld
fisubrl
push
xor
call
or
mov
xchg
shll
daa
sub
scas
test
jle
fldl
add
jbe
mov
mov
and
cld
adc
cs
repnz
imul
int
sbb
jns
aas
sub
add
cwtl
adcb
nop
xchg
xchg
jns
adc
out
pushl
int
jecxz
lret
cmpsl
jbe
das
sarl
sarb
xorb
rcrl
popf
scas
or
ja
pop
jmp
lock
addl
in
jge
sbb
out
mov
xchg
push
jae
lcall
addr16
sub
push
mov
lcall
scas
divb
fdivrl
popa
mov
xchg
sbb
divl
push
jecxz
sbb
adc
rolb
jge
std
lods
lea
dec
insb
lcall
in
jmp
iret
sbb
dec
out
dec
iret
int
loop
jb
addl
jp
adc
inc
fcompl
mov
in
xor
mov
imul
xchg
push
add
jl
dec
leave
dec
mov
sub
out
stos
or
popa
int3
scas
iret
sub
dec
xchg
mov
nop
lock
inc
xchg
or
xlat
ja
push
andb
inc
lock
repz
mov
int
movsb
inc
adc
push
arpl
lcall
fs
mov
cmp
sbb
lds
aas
mov
fidivrs
mov
rcrb
mov
jne
adc
jl
loop
mov
lret
imul
mov
outsb
and
xchg
or
scas
loopne
xchg
addb
add
popf
sti
or
clc
mov
mov
lods
jbe
push
mov
push
mov
mov
fldcw
sbb
xor
test
in
stc
or
and
jmp
nop
sub
xor
lcall
dec
fnstenv
jb
fmul
fdivl
pop
lahf
mov
in
and
in
fs
out
jmp
cmp
lcall
fdivr
adc
test
out
outsb
fdivs
cmp
shlw
mov
imul
ret
adcl
push
jo
adc
adc
lret
les
mov
rcrl
or
push
aaa
in
insb
ljmp
xchg
mov
mov
cs
xor
sahf
je
mov
xchg
dec
cwtl
and
push
cmp
imul
cld
pushf
add
ljmp
idiv
pop
mov
jb
int3
ss
or
ret
ret
mov
js
fcoms
and
sbb
mov
repz
mov
push
adc
jmp
pop
xchg
test
mov
in
not
int3
leave
cmpsb
aaa
cmp
push
jge
ljmp
push
xor
inc
adc
mov
insl
xchg
fstpt
jnp
popf
lock
addr16
xchg
fs
popl
sbb
sub
adc
ja
add
inc
leave
xchg
jp
mov
out
shrb
cmp
loope
or
inc
xchg
xchg
xchg
adc
xchg
add
xlat
ret
add
or
clc
push
sbb
mov
mov
pop
push
pop
sub
imul
movsb
lods
call
arpl
std
mov
loopne
addb
lret
mov
repz
js
icebp
cs
push
cmp
sbb
sbb
or
sti
in
cwtl
scas
out
ljmp
jle
mov
and
mov
pop
popa
xor
or
lahf
adc
orb
lret
jae
lahf
enter
ja
sub
pusha
outsl
pop
sub
push
mov
rorl
test
xchg
lds
and
mov
add
loope
iret
or
cmp
outsb
push
rcl
addl
sahf
mov
xchg
xchg
mov
xchg
ja
dec
add
xchg
xor
scas
xchg
inc
cmp
pushf
adc
shrl
pop
daa
xchg
sub
adc
ljmp
pop
dec
jge
in
popa
clc
aam
imul
test
mov
in
mov
mov
stos
out
test
jmp
sbb
imul
sahf
imul
or
push
dec
sarl
xchg
ret
add
push
test
out
lods
and
dec
in
mov
cmpsl
and
push
xor
inc
pop
pop
scas
mov
jb
or
ljmp
mov
pusha
or
xchg
out
nop
dec
ds
jns
jg
jecxz
sbbb
aaa
loop
sti
jg
pop
jmp
aad
adc
xor
and
xor
adc
out
jge
mov
ret
cmpsl
and
pop
jno
push
test
xlat
frstor
jp
std
adc
aaa
mov
sbb
lock
jno
mov
addb
int3
sbb
inc
ljmp
stos
pop
mov
mov
out
int
into
jge
imul
or
pop
test
pop
pop
inc
dec
mov
mov
mov
xchg
jge
push
lret
addr16
jnp
push
push
rclb
dec
rol
out
cmpsl
pop
xchg
jge
sbb
and
cltd
decl
test
pushf
mov
jnp
inc
inc
sahf
sbb
pushf
add
in
sub
and
xor
and
adc
nop
jne
inc
xchg
mov
ds
fildl
push
inc
ljmp
mov
orl
mov
cmp
int3
mov
cmc
pop
jmp
cmpsb
lret
lret
mov
jo
lea
out
addr16
xchg
into
lret
mov
mov
inc
ljmp
mov
addr16
sub
push
loope
fucom
std
inc
das
js
pushf
or
mov
lcall
iret
add
sub
movsl
push
insl
mov
imul
and
int3
sbb
mov
pop
js
sarb
pop
xor
mov
cmp
sub
push
int
or
enter
sub
in
xor
movsl
pop
aam
lods
into
loop
cmp
sbb
xor
stos
pop
or
orl
and
lcall
sbb
cltd
psubsw
mov
dec
out
mov
sub
xchg
popf
ss
out
mov
nop
xor
mov
mov
add
dec
pop
nop
mov
roll
jmp
dec
imul
aas
decl
push
add
leave
loop,pt
shrl
mov
add
out
shll
clc
sub
cmp
imul
and
and
dec
loopne
popf
mov
popa
test
add
inc
and
push
notb
fistpl
iret
pop
pop
adc
data16
bnd
mov
shrb
hlt
mov
shrl
push
sub
leave
xchg
lods
add
adc
sbb
test
lahf
push
sti
cmp
stc
xor
push
push
dec
inc
imul
test
add
repz
iret
xor
out
mov
push
xor
add
push
cmpsl
je
testb
xchg
je
or
inc
dec
aaa
gs
lods
push
jae
mov
mov
inc
std
mov
aaa
mov
daa
sbb
jecxz
xchg
andl
lret
cwtl
mov
ret
mov
jne
shll
popa
jbe
and
fbstp
pop
push
insb
pop
mov
xchg
es
lret
add
jae
cmp
loop
es
jo
xor
daa
cltd
cmpl
mov
test
das
cli
xchg
mov
fcom
aad
sets
stc
inc
push
dec
xchg
inc
es
cmp
add
test
out
mov
jne
sbb
test
lock
mov
jge
sub
icebp
pushf
pop
test
int3
cmpps
ds
jb,pt
int
mov
stos
test
push
jmp
lods
pop
test
andl
popa
gs
testb
adc
xor
adc
call
push
jno
mov
xchg
jbe
mov
xchg
gs
xchg
test
lcall
add
push
clc
lret
ret
sbb
ss
or
or
sub
or
mov
xchg
mov
repz
rclb
push
mov
mov
fcmovnbe
lret
pushl
lock
sarb
imul
mov
aad
movsb
lock
xor
adc
add
ss
in
pop
insb
scas
mov
sbb
dec
or
cmpsl
xor
adc
xchg
int3
call
rcrb
daa
sarb
icebp
jns
push
sub
cmp
dec
sbb
in
xchg
daa
dec
dec
add
mov
sbb
lock
jae
repnz
pushf
nop
jle
adc
cli
int3
rclb
out
hlt
popf
scas
jle
jecxz
icebp
fisubrl
out
jp
out
push
movsb
bound
jne
push
in
pop
xlat
les
adc
jbe,pn
repz
jne
enter
and
inc
inc
scas
cmc
scas
pop
test
cmp
ds
jle
fneni(8087
mov
jmp
lret
icebp
jno
fdivrs
ret
test
outsb
stos
pop
or
paddusb
pop
in
int3
gs
test
mov
sti
fimull
sbb
inc
adc
jecxz
add
dec
sbb
pushf
daa
push
loope
repz
rol
test
sti
mov
inc
mov
and
subb
into
cld
and
lds
push
out
hlt
mov
push
ret
sub
out
pop
jge
cmp
std
cli
sub
mov
push
movsl
outsl
pop
sub
mov
and
push
std
xchg
pop
mov
inc
mov
pop
pushf
jmp
sub
js
mov
bswap
cmc
sti
js
adc
gs
adc
imul
aad
cmpsl
insl
ret
mov
pop
dec
notl
pop
adc
daa
aam
fucomi
icebp
mov
popf
and
pop
hlt
jmp
push
xchg
xchg
pop
and
jno
ret
aad
xchg
push
xor
lahf
mov
bound
jno
ljmp
cmp
jge
cli
inc
or
push
and
sbb
addr16
fistpll
insl
rclb
loope
dec
dec
adc
and
mov
fstl
lcall
aad
sub
lret
xchg
add
and
cmp
mov
out
fxch
pop
test
lds
lret
or
jmp
hlt
cmp
js
push
fdivrp
pop
ss
les
mov
lcall
xor
je
mov
and
std
testb
nop
fstpl
mov
cltd
dec
mov
pushf
pop
push
lock
xor
fdivrs
aas
scas
pushf
test
clc
and
dec
push
scas
stos
push
shll
mov
insl
fiaddl
aaa
das
adc
sbb
ja
sub
push
lahf
push
popf
rorl
cld
scas
loop
js
jl
fcmovne
sub
in
sub
int3
test
sbb
arpl
cmp
lods
test
dec
ret
test
int3
or
mov
jno
adc
cmpsl
push
push
test
gs
cmp
or
pusha
xchg
insb
cmp
xchg
lods
fisttps
adc
nop
xchg
mov
push
pop
or
and
xor
lock
jbe
cwtl
cmp
jbe
fsubrs
push
jp
sub
cmc
and
int
pop
lcall
insl
mov
inc
jg
icebp
cli
add
arpl
imul
out
dec
mov
mov
or
pusha
mov
add
inc
mov
cmpsb
push
sub
adc
call
mov
jge
sub
pop
adcl
sar
mov
mov
data16
hlt
inc
xchg
or
push
shlb
push
push
cmc
std
jge
jmp
mov
lahf
push
mov
das
stos
dec
loope
sbb
dec
mov
adc
mov
push
rclb
sahf
xor
lahf
or
inc
xchg
xor
adc
scas
movsl
enter
fldt
popf
fstpl
arpl
jmp
mov
imul
dec
fstpt
popf
lea
aaa
out
stos
push
into
xor
pushf
add
and
add
mov
add
pop
bound
fdivr
ds
rcrb
movsl
adc
jb
stos
mov
sbb
inc
movsb
into
lods
and
mov
xchg
bound
mov
fildl
scas
push
adc
pop
adc
pop
mov
lds
test
xchg
loop
mov
inc
jnp
push
add
sbb
mov
dec
push
mov
push
outsl
jge
sbb
mov
sbb
lahf
loopne
sub
xor
decl
cmp
adc
ja
pop
outsb
xor
inc
lods
shll
inc
testl
fisttpl
int
stc
cs
add
div
mov
aad
sbbb
adc
aad
sahf
dec
cld
xchg
fdivr
aad
call
hlt
sbb
cli
sbb
stos
sub
insb
ret
xchg
lcall
lods
cltd
jle
jns
xlat
test
int
mov
push
scas
pop
add
sbb
mov
js
cmp
mov
gs
mov
push
fwait
addb
pop
int3
negb
pusha
sahf
lcall
sahf
das
dec
out
xor
jae
sbb
cmpsl
shll
mov
lahf
mov
scas
into
enter
push
mov
call
lock
addr16
orl
enter
out
xchg
das
jno
int
sub
xchg
push
xchg
ds
fmuls
pop
and
dec
popa
dec
and
mov
shrb
push
repz
scas
jle
bound
ja
mov
mov
sub
stc
or
inc
jl
arpl
xlat
sbb
add
loopne
sub
mov
push
popa
or
idivl
shlb
cmc
aam
rclb
test
aas
test
paddsw
add
xor
dec
mov
scas
adcl
jle
mov
mov
add
mov
add
lret
out
adc
mov
orb
cmpb
push
add
inc
pop
jb
shl
jp
gs
pop
mov
icebp
pushf
cmp
stos
enter
test
push
and
pop
jae
clc
cmp
mov
push
pop
rcll
dec
loope
pop
js
jmp
dec
sub
aam
loopne
mov
pop
lret
clc
addb
flds
xchg
jmp
icebp
das
cmp
je
lahf
push
xor
popa
sub
sbb
mov
push
sahf
push
insl
jge
inc
lea
adc
lret
sub
fwait
add
jmp
inc
ljmp
jns
pop
repnz
mov
addr16
ret
inc
nop
popf
or
movsb
pop
test
rol
popa
popa
adc
insl
and
popa
push
mov
daa
out
cmc
aad
mov
mov
mulb
gs
lock
mov
mov
fcmovne
jle
pop
adc
mov
or
gs
add
jne
lea
addr16
into
jle
imul
inc
shrb
or
outsb
mov
movsb
mov
std
mov
sub
insl
addr16
xlat
subl
divb
jp
xor
rorb
add
arpl
inc
or
sbb
mov
sbbl
cld
out
xchg
pop
aad
adc
sub
inc
mov
imull
and
push
and
mov
push
scas
xor
iret
cmp
popf
fisubs
and
push
mov
and
ret
call
loope
and
mov
push
adc
sbb
xchg
adc
jle
inc
cld
addr16
sbb
div
xchg
fidivl
pop
dec
adc
fwait
push
push
adc
mov
pop
mov
push
and
pop
test
fwait
jb
je
inc
ret
push
pop
scas
jo
ljmp
mov
adc
jle
test
jecxz
push
jbe
in
fcmovnu
push
stos
leave
xchg
or
das
arpl
lds
lcall
add
sub
xchg
out
sahf
fmul
jp
test
neg
jmp
roll
cld
dec
cmc
mov
mov
rcll
aaa
iret
jb
mov
jge
jnp
rcrl
dec
add
in
int
cli
and
xchg
xchg
ja
sub
mov
aam
pushf
movsb
mov
cmpsb
mov
push
lea
lock
lods
pop
popa
shrd
mov
sbbb
out
or
orl
pusha
inc
inc
insb
mov
lea
cwtl
inc
test
adc
ljmp
movsb
stos
mov
aam
stos
pusha
scas
dec
pop
mov
jb
push
or
sub
mov
sbb
lods
cs
ja
and
call
inc
add
addl
out
mov
popf
sbb
xor
and
ljmp
popf
jo
xchg
sub
cli
dec
inc
cltd
dec
fcoml
push
dec
test
cwtl
cli
pop
lods
fcmove
ja
ds
sbb
or
popa
jae
out
movsl
out
add
mov
dec
daa
aam
pop
movsl
frstor
dec
dec
or
xor
stc
int
lods
xchg
xchg
nop
adc
or
out
out
mov
xchg
int3
fildll
clc
es
inc
push
in
mov
ret
shlb
inc
xchg
mov
icebp
int
add
fwait
stos
in
xchg
ss
adc
jmp
cli
xor
jbe
add
cwtl
jno
mov
adc
dec
cltd
mov
not
sbb
ret
add
or
cmp
dec
jnp
repz
dec
sbb
push
daa
sub
mov
popa
andl
sahf
movsl
stc
push
mov
fisubrs
cld
iret
fs
pop
shll
dec
xchg
ljmp
stos
dec
aaa
aaa
sub
es
jp
into
or
adc
mov
mov
sar
adc
cmpsb
stc
aad
and
adc
mov
add
cmp
mov
mov
dec
fcoms
faddp
sbb
add
nop
ret
lods
push
int3
inc
jae
stos
mov
adc
jo
into
lahf
filds
jmp
and
xlat
mov
icebp
xchg
jo
test
sub
sti
mov
and
cli
lods
inc
dec
ud0
js
sub
jno
cmp
fistpll
mov
out
sub
sbb
xor
dec
add
sub
or
push
jg
in
dec
fdiv
jle
hlt
adc
mov
pop
in
inc
add
outsl
cltd
cmp
test
data16
cmpsb
push
imul
cmp
fxch
cmc
jns
mov
mov
scas
mov
iret
jb
jmp
and
imul
les
pop
aaa
daa
adc
xchg
mov
int3
std
push
mov
sbb
xchg
pusha
pop
xchg
gs
inc
fs
jnp
add
dec
cs
push
insb
lcall
jae
mov
std
mov
pop
mov
into
dec
sub
xor
cwtl
mov
ss
xor
jb
sbb
cmp
scas
in
sub
es
sahf
aas
xchg
ljmp
rolb
cs
jae
or
lret
nop
daa
mov
insl
cmp
sahf
aam
gs
xor
push
cld
mov
cmp
sbb
lcall
sub
imul
push
cmp
or
xlat
fists
push
and
sbb
xor
sub
insl
pusha
pushf
jecxz
movsl
mov
push
jle
fbstp
sbb
fldt
push
aam
push
lcall
es
push
xchg
ret
ror
and
and
mov
aaa
push
cmp
fiadds
aas
imul
lret
mov
pop
mov
ficoms
aaa
add
xchg
out
hlt
adc
add
xchg
stos
dec
nop
aam
dec
pop
mov
sub
mov
ret
loope
and
add
push
push
out
dec
fwait
push
scas
imul
mov
inc
movsl
add
inc
mov
cmc
pop
or
pop
ja
sbb
push
out
cmpsb
xchg
mov
add
jae
gs
xorb
adc
aad
popa
popa
pusha
or
fnstcw
js
mov
stos
lcall
inc
xor
cmpsb
stos
lock
outsl
adc
xor
pop
mov
shlb
xlat
cmp
mov
mov
dec
imul
into
sub
mov
and
mov
gs
push
jne
push
fwait
sub
xlat
add
jae
xchg
pop
adc
mov
shll
cltd
mov
imul
je
lea
jmp
bound
sbb
fldt
je
cwtl
je
push
mov
push
xchg
int
xor
xor
test
pusha
adc
cmp
repz
jae
jo
pusha
adc
insl
push
and
mov
jo
fistl
sub
jne
sub
lock
mov
sbb
scas
and
test
jle
cmpsl
pop
jmp
pop
stc
nop
fs
pop
cs
jnp
push
push
jmp
es
push
ficomps
xor
adc
mov
or
mov
mov
sbb
push
lcall
dec
pop
and
pop
movsl
dec
cmp
and
cld
clc
sub
or
js
jno
lods
outsb
lret
or
mov
stc
add
jns
lock
nop
lret
fistl
or
cli
inc
std
push
neg
stos
sbb
jle
mov
stos
cmpsl
xor
mov
mov
add
mov
icebp
push
cwtl
icebp
pushf
xchg
push
adc
adc
andl
sbb
or
subb
jle
sahf
pop
frstor
ret
sarb
xor
xor
push
lods
or
push
sub
mov
add
lds
pop
sub
push
push
cmp
in
mov
sbb
pop
test
xchg
int3
push
sbb
and
scas
adc
xchg
adc
add
inc
jmp
cmpl
aas
inc
or
jecxz
xchg
pop
out
lret
pop
sti
aas
pop
mov
and
mov
or
mov
sti
xchg
add
mov
push
arpl
dec
pop
push
dec
and
pop
xchg
aad
sub
iret
bound
inc
inc
pop
inc
in
cmpb
sahf
add
popf
add
jb
sub
test
add
dec
je
push
inc
and
arpl
inc
mov
push
dec
hlt
mov
mov
dec
xor
add
shll
push
sbb
ja
xor
adc
sahf
loope
imul
jmp
stos
and
mov
call
cltd
push
pushf
mov
push
xor
out
ret
mov
add
and
inc
mov
div
mov
mov
mov
adc
and
push
popf
and
inc
ljmp
dec
mov
pop
push
push
adc
outsl
insb
sbb
popa
cmp
es
mov
and
jl
jae
push
jns
jns
les
push
jp
push
xor
stos
call
lcall
mov
jg
jb
imul
inc
leave
mov
and
push
inc
in
repz
sub
pusha
push
insl
inc
jmp
or
ret
sbb
mov
repz
sbb
ret
xchg
sbb
test
jl
mov
cmp
bound
inc
fildl
push
sub
cs
jae
dec
lods
lods
enter
push
or
pop
decl
shlb
aaa
adc
mov
pop
or
popa
hlt
push
dec
adc
lods
cwtl
xchg
push
incb
mov
hlt
xchg
aam
in
pop
and
shl
sbb
dec
cmp
push
mov
xlat
mov
lret
sbb
bound
outsl
test
fsubs
stc
out
cmp
arpl
icebp
push
ffreep
jne
xor
xchg
pop
dec
cmp
lret
scas
dec
jge
push
jnp
mov
jge
test
xor
push
xchg
daa
lods
daa
sub
mov
cmpsb
sub
cmp
pop
fisttpll
fnstenv
xchg
push
xchg
sarb
mov
cld
pop
add
int
jl
xchg
add
repz
xor
jmp
fstpl
out
mov
adc
outsb
roll
fmul
cvtps2pi
ljmp
or
mov
movsl
mov
mov
dec
pop
inc
push
jle
subl
sub
stc
jbe
imul
jns
std
cmp
movsb
xchg
inc
icebp
xchg
movb
adc
mov
mov
cmp
jp
test
js
test
and
cmpsl
sub
mov
inc
dec
adc
es
xchg
ret
insl
mov
out
push
cmp
cmp
pop
push
lods
adc
inc
dec
or
pop
jg
sahf
dec
xor
insl
cmpsb
mov
testb
mov
cld
mov
loopne
push
jge
dec
mov
sbb
les
jge
mov
or
ljmp
dec
fildl
add
out
enter
mov
pop
shl
pop
mov
cmp
jo
bound
adc
popa
sbb
cli
je
mov
and
insl
adc
or
jmp
sub
sbb
std
inc
jo
std
rolb
sub
and
les
filds
push
inc
push
xchg
aad
lods
xor
addl
pushf
sti
xchg
adc
jbe
xchg
scas
or
ja
es
rorb
je
loop
rorb
pop
dec
nop
xlat
in
push
loope
out
inc
or
inc
bt
xor
loop
xchg
mov
jmp
sub
fmull
mov
jl
movsl
xchg
decb
push
xor
push
iret
dec
jecxz
sbb
sarl
dec
adc
push
orl
and
int3
cmp
std
jp
sub
mov
sub
dec
lcall
cmc
cmc
sub
sbb
lret
inc
imul
dec
fnstsw
push
adc
test
xchg
loop
repnz
scas
or
xchg
je
add
jns
ljmp
xchg
push
loop
pop
xor
mov
mov
jecxz
add
rorb
movsl
push
fisttpll
xor
xchg
mov
bound
testb
ret
mov
mov
loope
pusha
pop
and
push
std
into
adc
call
in
push
pushf
cmp
adc
push
bound
cmovnp
in
push
mov
inc
aaa
mov
mov
xchg
fstpl
aas
sbb
and
add
push
pop
lods
scas
jle
test
scas
outsb
popa
sub
fwait
push
jp
ret
jns
or
rcrb
and
jl
adc
rorl
mov
in
xor
dec
repnz
sub
or
aam
and
test
dec
sbb
cmp
and
popa
jae
mov
mov
or
fs
sbb
icebp
inc
test
inc
jge
jnp
out
mov
out
ret
je
pop
stos
inc
or
subb
jns
nop
push
mov
loope
ds
xchg
daa
fisubrs
dec
xlat
push
subb
jmp
jmp
adc
xchg
clc
mov
adc
sub
hlt
test
adc
mov
into
sbb
or
lds
loopne
inc
call
dec
pop
outsb
dec
les
adc
fldl
in
jb
icebp
jae
jge
sbb
mov
dec
ret
pop
and
lcall
test
push
push
lds
cmpsb
bound
mov
push
pusha
xchg
add
adc
inc
mov
lock
movsl
mov
out
lock
fsubl
verw
adc
mov
sbb
sarb
mov
dec
mov
lock
lret
jne
pop
inc
lahf
lods
dec
fimuls
enter
movsb
pop
imul
push
xor
mov
shll
add
add
add
insb
xchg
sub
iret
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
inc
outsb
add
movsl
insl
