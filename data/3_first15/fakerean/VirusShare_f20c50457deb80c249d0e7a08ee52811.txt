sbb
add
mov
xchg
movsl
inc
call
dec
mov
lret
idivb
mov
jnp
jmp
or
mov
movl
ret
leave
out
jg
adc
setno
cmpsl
mov
lcall
jno
cmpsl
cmpl
mov
cmpsb
add
mov
test
repz
icebp
lods
push
fldlg2
cmp
imul
dec
out
hlt
ret
inc
mov
fwait
es
iret
xchg
push
sub
rcrb
je
lcall
and
dec
ss
or
nop
sub
pop
inc
gs
add
adc
loopne
in
fisubl
call
jp
fs
xor
enter
stos
arpl
pop
das
adc
push
cmp
test
pusha
or
sti
stos
in
mov
jbe
imul
adc
lret
push
repz
lods
in
mov
xchg
mov
mov
pusha
dec
sub
dec
mov
adc
fistpl
pop
gs
jb
or
imul
mov
xchg
cli
jnp
add
in
mov
dec
stos
scas
cmpl
cli
and
das
mov
xorl
cmpsb
cwtl
or
dec
insl
out
sub
bound
stos
mov
jmp
test
jne
or
pop
or
imul
int
lea
nop
mov
push
mov
adc
sub
jg
ret
imul
in
mov
xorb
je
std
push
sub
adc
xchg
aas
and
mov
call
adc
mov
cmp
pop
sub
pop
mov
mov
sbb
dec
out
add
out
add
mov
or
and
inc
negl
inc
cld
mov
loopne
sbbb
in
cli
xorl
cltd
jmp
stos
shl
jns
or
xchg
out
iret
imul
dec
xchg
gs
or
lods
inc
ret
fdivl
cld
jmp
push
sub
das
xor
int
mov
inc
push
mov
lods
rcrb
cmp
inc
dec
xchg
sbb
ret
fisubl
ljmp
lds
aaa
addr16
out
push
jp
rol
jle
jl
loope
dec
je,pn
jbe
sub
or
test
jnp
mov
push
adc
leave
push
mov
sarb
dec
ss
shll
dec
je
ja
insl
pop
sbb
andb
push
xor
dec
sub
add
inc
daa
and
pop
cmp
jns
adc
lret
mov
xor
sub
push
addl
xchg
fsubl
ljmp
popf
icebp
mov
push
stos
cmp
rolb
into
xlat
push
jb
sub
je
repz
xor
or
gs
jmp
fmul
out
jp
aas
aaa
insb
inc
addr16
lea
sti
lock
int3
imul
mov
xorl
loope
sti
xchg
push
sub
sti
imul
mov
sub
or
les
mov
lcall
mov
ds
outsb
ds
mov
and
sbb
pop
iret
pop
or
test
adc
lods
dec
adc
enter
dec
or
ficompl
into
adc
adc
rcr
sbb
jno
sbb
aam
xchg
xor
push
imul
add
aaa
aas
aas
adc
xchg
lahf
loop
mov
mov
inc
jb
pop
sti
adc
xchg
and
insb
psubusb
mov
mov
adc
jne
pop
cmp
mov
inc
inc
lcall
xor
mov
and
sub
arpl
push
or
outsl
cmp
sbb
pop
or
dec
movb
fiadds
adc
rolb
pop
pop
push
add
mov
pop
jmp
mov
push
repnz
pop
ds
movsl
cmp
or
arpl
lcall
mov
xchg
push
fdivrl
in
sbb
xchg
inc
xlat
push
and
imul
pop
fs
inc
adc
loope
xor
sub
out
cmp
int
add
test
sub
xchg
mov
adc
adc
fisubrl
jp
inc
vmrun
inc
jl
lahf
test
adc
mov
jecxz
cmp
dec
pop
arpl
cmp
sub
dec
sbb
aam
insb
fs
mov
pop
mov
mov
mov
test
aam
flds
xor
cld
out
sub
dec
push
pop
mov
mov
or
pop
dec
sub
mov
adc
push
push
adc
jp
xor
shrb
or
push
adc
mov
and
sub
pop
lock
dec
push
ljmp
je
dec
xchg
ror
jle
cmp
orl
dec
sub
add
or
inc
es
gs
in
mov
adc
aad
xor
xor
dec
xor
pop
std
add
enter
cmovge
sbb
mov
xor
call
push
addr16
mov
int3
daa
jmp
fcomi
aas
fsubrl
clc
scas
test
pop
sub
push
push
mov
nop
xor
cmp
mov
lahf
and
and
mov
and
adc
push
cmpl
cmpsb
mov
and
mov
sub
dec
sti
pop
mov
push
or
clc
pusha
movsl
xor
lahf
mov
and
cmpl
clc
jg
mov
add
jns
stos
aam
std
mov
pop
aam
pop
adc
push
xchg
fwait
lret
xor
cld
jl
sbb
and
outsl
xchg
fistps
pop
pushf
adc
jecxz
xchg
mov
mov
fsub
enter
cmpb
inc
mov
xchg
ja
call
pop
jnp
pop
es
test
popa
push
cmpb
out
into
fadds
cmc
jmp
iret
inc
mov
in
popa
clc
push
jle
sbb
jne
out
outsl
xchg
test
repnz
aam
jno
add
mov
push
test
arpl
das
inc
sub
cmpsl
mov
test
stos
lahf
or
ficoms
pop
repnz
sub
insl
pop
adc
mov
shll
push
cmc
mov
jp
scas
mov
jbe
xchg
or
xor
jg
jae
outsl
aaa
pop
mov
or
fsts
imul
mov
dec
push
pop
clc
push
mov
mov
jl
pop
inc
jnp
in
pop
and
rorl
imul
dec
xor
mov
mov
mov
xor
pop
adc
pop
lods
pop
out
push
leave
or
mov
inc
scas
cmp
cltd
pop
jno
add
xor
int
sub
pusha
add
movsb
mov
repz
fisttps
or
push
repz
lret
iret
adc
addr16
jae
pop
pop
iret
int3
lret
ror
pusha
sub
mov
ds
cmpsl
sbb
pop
bnd
jns
adc
cltd
or
cmpb
in
lahf
jno
or
xchg
jne
mov
lahf
mov
sub
mov
adc
les
outsb
cmp
push
shr
sbb
ja
and
neg
pop
ret
inc
les
outsl
adc
or
dec
das
ja
les
jne
lds
ficoms
adc
roll
int3
mov
pop
dec
pop
dec
negl
insb
ds
iret
push
dec
cmp
adc
clc
lahf
out
or
clc
cmp
notb
popa
xor
or
xchg
pop
dec
addl
lahf
mov
mov
xchg
cltd
inc
jns
mov
inc
fwait
pop
cmp
enter
cltd
fcmovnu
xorb
pop
loopne
idiv
sar
mov
xlat
mov
mov
cmpsb
fisttpl
xchg
or
add
jg
pop
mov
add
imul
fldenv
lock
mov
inc
or
adc
mov
xor
xorb
inc
jle
jno
add
popf
or
adc
shll
je
js
pushl
ds
pop
sub
mov
ror
jnp
pop
pop
fists
and
pop
push
jne
fldenv
cmp
lret
out
push
enter
fwait
or
gs
ljmp
lahf
mov
sahf
and
push
dec
fisubrl
mov
gs
dec
fsubrl
shrb
pop
andl
aam
mov
movsb
push
push
jno
daa
mov
out
pop
push
mov
ss
cmp
jp
dec
pop
pop
xor
cmp
inc
pushf
sti
fistps
inc
mov
int3
cmp
push
out
es
sbb
imul
dec
fistps
and
pop
xor
imul
xor
adc
jle
dec
lcall
adc
cmp
push
mov
and
out
jg
cmp
pop
and
xlat
test
jo
mov
loope
mov
rclb
bound
mov
mov
add
daa
sarb
and
lcall
dec
out
sbb
add
jmp
lret
jbe
aas
push
and
mov
inc
sbb
add
dec
gs
cmc
mov
loopne
scas
mov
les
xor
mov
mov
sbb
jle
out
int3
pop
jae
incl
popl
sub
stc
sbb
push
xchg
lock
mov
mov
cltd
push
dec
jp
dec
dec
iret
gs
insl
adc
loope
pop
or
jle
cmp
notb
inc
mov
or
push
aaa
jle
adc
mov
ljmp
test
mov
pusha
subb
mov
stc
inc
jo
fisubs
adc
lds
xor
out
mov
mov
push
jns
jne
mov
flds
cmp
push
mov
fidivs
and
mov
es
xor
push
pop
shlb
rcrb
mov
mov
sarb
mov
and
adc
lds
shrl
gs
add
mov
sbb
adc
cmpsl
fwait
jno
cld
test
push
repz
cmovno
ficoml
pushf
mov
ret
add
cmp
cwtl
mov
push
andl
movsl
jle
loopne
lods
xchg
aad
rcrb
test
sarl
cld
push
ss
and
imul
add
test
mov
jae
add
mov
add
fcmovnbe
mov
test
mov
out
int3
jb
xor
fcmovnb
xchg
js
mov
ss
mov
icebp
scas
lret
and
pop
ljmp
mov
sbb
out
out
and
jbe
daa
scas
mov
or
and
ss
into
outsl
data16
inc
push
ds
sbb
ss
nop
lods
xchg
jns
mov
xor
cmp
jns
mov
mov
and
cmp
lea
sbb
aam
inc
push
jns
mov
adc
mov
inc
std
cs
fmuls
enter
cli
sub
je
std
lret
push
das
dec
jne
dec
dec
xchg
cli
lret
fstl
ja
sub
lret
arpl
movsl
or
xchg
mov
xchg
xchg
lods
jle
leave
ja
jp
sub
sahf
fwait
mov
aam
mov
test
xor
lods
aad
je
fstps
adc
inc
jmp
cmpsb
lret
cwtl
shll
xchg
adc
insl
cwtl
mov
push
lods
jnp
orl
ret
cs
mov
sbb
popa
mov
sub
je
arpl
sarl
leave
inc
adc
test
dec
mov
popa
sub
negb
aas
gs
clc
cmpsl
icebp
gs
add
or
inc
xor
xchg
out
iret
sbb
jecxz
sbb
jb
mov
xchg
push
sub
jle
dec
xor
xchg
sbb
push
jmp
xor
jno
sub
xlat
pop
inc
jnp
xchg
pop
add
push
pop
cli
ds
imul
ja
leave
jle
mov
test
add
repz
add
xchg
xor
push
dec
outsb
bnd
scas
add
add
push
mov
push
inc
mov
das
stos
and
xor
inc
clc
dec
lea
push
xor
xorb
test
arpl
lcall
orb
adc
arpl
shr
jns
pop
push
mov
pop
adc
test
mov
inc
inc
mov
push
fwait
jb
jbe
mov
pop
in
jp
lret
push
xchg
notb
xor
mov
shrb
mov
adc
dec
jno
cli
inc
scas
pop
call
lods
into
out
rcrl
stos
jo
cs
test
push
inc
adc
shrb
pop
sub
into
dec
xor
addr16
rcrl
fsubs
pushf
push
cwtl
lock
mov
push
jge
addr16
fsubl
lret
mov
roll
nop
sub
sub
arpl
jecxz
test
xor
ret
cmp
jns
je
movsb
scas
jg
pop
cmpsl
fbstp
cmp
push
outsl
push
lea
rcrb
xchg
or
shrl
add
push
mov
or
in
aam
lahf
cltd
icebp
mov
punpckhbw
jbe
xchg
jb
and
and
test
inc
jg
in
daa
loopne
outsb
es
movsl
jle
jbe
mov
data16
mov
jp
in
fiaddl
push
pop
pusha
mov
sub
stos
fsubs
xor
cmp
xchg
popa
jmp
test
mov
jno
jae
gs
fwait
rorb
gs
fiaddl
xor
adc
push
pushl
inc
into
sub
adc
add
jmp
stos
movsl
fwait
pop
dec
arpl
jge
aas
scas
xor
out
cmp
xor
sbb
lds
fmul
sahf
mov
movsl
mov
add
es
jmp
into
dec
shl
xlat
cmp
addl
adc
icebp
and
fisubl
lret
cli
test
add
jo
in
pop
in
adc
fsubl
sub
sbb
jne
ds
lock
xchg
jnp
sbb
rorb
lds
lds
add
mov
ljmp
push
inc
xchg
or
lock
pushf
xorb
xor
lods
fstpl
sbb
ret
cmp
add
mov
pop
mov
jle
out
loopne
xchg
xor
inc
inc
and
clc
or
into
pop
aad
mov
pusha
fimull
fxrstor
mov
sti
xor
insb
int3
sub
insb
in
andb
jmp
jle
outsb
mov
mov
and
dec
and
sbb
add
push
je
popa
rolb
add
push
cmc
shr
jmp
js
fs
mov
mov
js
insl
rorl
andl
aad
cmp
insl
cmp
mov
das
das
add
sarl
aam
adc
popa
add
shlb
sbb
jecxz
ficoml
test
pop
xchg
pop
fucom
and
ret
cmpsb
out
cmp
jno
xchg
loopne
add
fisubrs
pop
push
push
jmp
inc
mov
xchg
xchg
sub
lcall
sub
fs
xchg
test
daa
and
inc
mov
dec
mov
test
pop
push
int3
cmpl
mov
dec
mov
ds
fisttpl
sti
std
mov
dec
jbe
cmpsb
adc
mov
scas
lret
orb
aaa
pop
lcall
stc
in
inc
mov
loop
das
sub
mov
jge
repnz
adc
or
lahf
or
xchg
pusha
or
das
test
xor
mov
outsb
dec
pop
rcrb
loope
jp
fdivl
or
mov
xchg
jmp
pop
xchg
shlb
imul
sub
int
add
leave
fbstp
mov
daa
push
lcall
lea
outsl
xchg
push
incl
pushf
outsl
inc
jle
pop
fldenv
dec
and
inc
mov
jl
and
repnz
cmc
pop
and
sbb
pop
shll
xlat
lahf
iret
or
dec
sub
lahf
lret
cld
cmp
loop
add
outsl
pop
sub
ret
or
scas
push
xor
mov
mov
outsb
arpl
mov
cmc
jecxz
test
dec
outsl
imul
pop
pop
mov
xor
inc
notl
daa
cmp
outsl
dec
ficomps
jmp
out
push
out
shlb
lret
mov
xlat
mov
inc
adc
dec
cmp
cmp
pop
pop
stos
mov
lods
testb
mov
adc
xchg
aaa
cltd
mov
test
mov
je
jp
jp
lret
daa
pop
loop
and
pusha
mov
shll
mov
pop
cmpsb
out
push
mov
rol
cwtl
mov
cmpsb
div
out
lods
aaa
popf
sbbb
ss
xchg
mov
adc
in
xor
cmp
sub
sub
cli
je
scas
ret
addr16
out
jne
xchg
add
shl
xor
xchg
jp
mov
pop
push
jp
ret
push
adc
lcall
sbb
out
adc
pop
mov
insl
enter
jbe
test
cmp
fs
mov
cmp
mov
xchg
xchg
pop
lcall
rcl
dec
xor
add
sarb
data16
sbb
jne
add
add
in
repnz
ja
lret
fimull
in
cmp
sbb
cmp
sbb
cwtl
sub
jge
push
daa
push
dec
xor
fwait
mov
jg
in
out
adc
iret
mov
outsb
xchg
push
mov
pop
jl
sub
dec
mov
cmpsl
or
push
divl
or
adc
incl
lods
xor
push
cmp
push
push
or
les
imul
mov
sub
out
test
loopne
movsl
or
lcall
shlb
xchg
jno
xchg
jns
cmpsb
cmp
mov
and
mov
sbbb
sub
or
flds
sub
sbb
xchg
push
sbb
add
mov
popa
push
lock
jne
dec
push
jnp
stc
pop
sub
test
mov
dec
lahf
outsb
addl
in
sub
cmp
xchg
mov
sarl
arpl
xor
and
lcall
sub
xchg
mov
push
inc
das
adc
arpl
decb
out
jbe
sti
mov
nop
bound
out
pop
insl
in
sub
jmp
cmp
in
cmp
hlt
and
push
aaa
ret
shrl
js
cmp
stc
fs
mov
cld
lea
fmul
mov
mov
loope
lret
xor
imul
pushf
adc
jb
icebp
lods
mov
adc
stos
sbb
lds
xlat
add
inc
jbe
jae
adc
push
inc
les
imul
mov
jno
jne
scas
leave
dec
int3
jg
popf
repnz
out
daa
mull
movsl
movsl
lods
cmpsb
icebp
pop
sbb
out
and
inc
xlat
xchg
and
test
setae
cmp
mov
xchg
std
loope
mov
imul
or
mov
sarb
out
gs
mov
repnz
mov
pop
je
fcmovbe
lea
test
inc
setbe
push
mov
cmp
inc
stc
lahf
inc
ljmp
dec
xchg
sub
pushf
lds
gs
insb
aaa
fdivr
insb
popl
outsl
or
pop
pop
ljmp
icebp
sub
cmp
subb
jo
shlb
js
xchg
mov
cmp
fnstenv
push
scas
xchg
xchg
das
or
loopne
sbb
mov
imul
gs
pop
inc
sub
outsb
and
les
mov
jae
shrl
push
ret
add
mov
mov
xlat
mov
js
add
int
rcrb
mov
sbb
test
fwait
mov
pop
mov
dec
mov
push
pop
mov
xchg
out
mov
test
mov
lods
pop
pusha
cwtl
jno
jno
xchg
cmp
cltd
push
icebp
push
mov
inc
ficoms
add
jno
inc
push
rcrl
jae
cmp
mov
sub
cld
cmp
stos
popa
or
je
push
xchg
mov
xchg
hlt
fdivrl
mov
push
push
xchg
call
cmp
cmp
addl
jl
sti
sub
mov
mov
mov
stos
fldl
bound
lret
or
scas
pushf
sbb
push
pusha
dec
and
divl
lret
pop
mov
cmp
pop
sti
test
sub
push
xchg
pop
mov
xchg
cmpsl
inc
adc
pop
jne
lock
xchg
sub
inc
adc
push
and
jge
xchg
jp
or
scas
movsl
pushf
mov
clc
mov
push
inc
in
addl
lret
mov
jbe
andb
mov
fsubrp
mov
add
lock
pusha
mov
or
fbld
or
popf
ss
pusha
mov
xlat
fiaddl
mov
fdivl
cmp
jle
cmp
mov
add
enter
popa
out
jns
pop
imul
sbb
fwait
mov
sub
loopne
pop
or
adc
cmp
lea
adc
xchg
sbb
repnz
xorb
shrb
xchg
push
or
mov
push
add
sub
dec
mov
jmp
jmp
adc
arpl
inc
lds
jecxz
insb
add
push
jbe
xchg
mov
lods
add
mov
fwait
jmp
stos
iret
into
mov
push
add
les
push
push
adc
mov
cmpl
xchg
lahf
mov
pop
ret
jge
jns
adc
imul
xchg
and
lcall
sbb
pop
push
xor
pop
out
pop
cwtl
add
mov
inc
imul
leave
push
les
cmp
adc
data16
dec
cld
ret
enter
arpl
pop
rcl
and
repnz
es
stos
lret
mov
test
hlt
insb
mov
nop
push
or
aas
iret
push
insl
push
repnz
daa
cmpsl
jno
daa
imul
push
bswap
shlb
lea
lea
ja
incb
jne
mov
add
mov
in
push
xchg
jne
fst
mov
aam
inc
sbb
xchg
jno
out
popf
inc
xchg
lahf
lahf
je
and
subb
pop
add
test
pop
hlt
int3
add
or
fidivs
test
cmp
pop
cmpsl
loope
lods
call
mov
add
or
sahf
pop
je
ds
adc
lret
addl
inc
lret
pop
loop
scas
sbb
out
orl
adcl
dec
insl
popa
xchg
into
mov
sub
push
pop
add
imul
add
cmp
mov
movb
cmp
movsl
lret
es
loop
cmpsl
lcall
cld
ss
add
sbb
jmp
mov
sub
mov
mov
jnp
push
ds
scas
inc
mov
mov
pop
adc
addr16
cwtl
mov
imul
jae
cmp
and
sub
sub
add
mov
sbb
lahf
aas
jge
lahf
inc
dec
cmc
push
insl
adc
inc
mov
xor
imul
pop
scas
mov
adc
data16
popf
lods
mov
daa
mov
xor
mov
arpl
or
enter
ficoml
and
pop
adc
dec
mov
cmc
aam
pop
bound
test
push
leave
xor
pushf
mov
mov
pop
ret
mov
addr16
mov
cmp
and
adc
xor
int3
xchg
movsl
jle
mov
sahf
mov
lahf
and
das
outsb
xor
aas
xor
lret
imul
popf
scas
jno
or
ljmp
cmc
imul
xor
fstpt
dec
lea
mov
test
ret
fcomps
lret
cld
push
jge
xchg
mov
jno
test
and
pop
sti
adc
or
iret
xchg
sahf
std
xor
sti
cwtl
mov
mov
ja
insb
inc
adc
nop
clc
inc
push
jno
push
pushf
fwait
add
mov
dec
mov
mov
sahf
jg
repnz
adc
jo
push
popa
aaa
fildll
add
lcall
iret
nop
out
or
dec
int3
sub
or
gs
sti
pop
bound
mov
xchg
into
jbe
sti
pop
jp
jle
fnsave
or
mov
pop
inc
pop
sub
pop
mov
mov
mov
ds
adc
std
mov
mov
ljmp
aaa
cli
pop
jne
iret
js
lods
pop
int3
ds
lret
cmp
push
cld
inc
and
push
or
lods
in
jno
and
and
ja
xchg
pushf
lds
lods
movsl
xchg
mov
test
jb
adc
pop
out
sbb
fmull
xor
ror
enter
rorb
out
rorl
mov
dec
loop
addr16
fcomps
xchg
adcb
xchg
mov
negl
pop
int3
cltd
pop
dec
and
pop
jg
pop
rorl
jo
in
es
sub
into
dec
movsl
xchg
js
jnp
jno
mov
mov
mov
loop
push
xchg
lods
sub
outsb
xorb
jo
mov
sti
push
xor
cld
mov
mov
add
add
inc
call
stos
pop
jbe
jne
mov
push
mov
jo
daa
and
pusha
mov
loopne
mov
stos
inc
sub
sbb
sub
sbb
scas
sti
js
ds
jge
inc
xchg
data16
xchg
push
in
xchg
jg
and
outsb
sub
in
mov
sub
ljmp
into
andl
dec
loopne
cld
xchg
into
mov
add
sub
cs
out
pop
enter
or
in
fs
insb
inc
pop
mov
jmp
fs
movsb
test
push
movsb
imul
insl
inc
lock
and
push
xchg
lea
test
aaa
repnz
imul
cmp
dec
mov
and
xor
lcall
movsb
add
push
add
sbb
adc
push
jmp
jno
and
dec
push
cmp
inc
out
sbb
push
stc
into
call
mov
mov
lcall
xchg
mov
lods
lea
push
adc
mov
cmp
ret
loopne
addl
mov
add
cmc
lcall
outsb
and
das
mov
inc
add
mov
inc
cli
xchg
mov
push
bound
jnp
je
imul
jno
insl
lcall
fwait
in
jge
es
xchg
or
enter
jb
sahf
push
hlt
out
out
pop
or
icebp
jne
jb
int
or
fldl2e
aad
xlat
sbb
scas
icebp
cwtl
idiv
sub
inc
dec
xor
mov
pop
mov
sahf
aaa
jmp
addr16
xchg
pop
pop
in
cli
inc
cltd
dec
pop
cmp
sub
sbb
push
insb
stos
jmp
and
sbb
jecxz
mov
push
aam
ljmp
xchg
sub
xchg
or
sbb
push
dec
push
push
leave
and
lret
adc
sbb
out
or
ja
sub
mov
mov
inc
cmpsb
inc
mov
ret
stos
push
sub
and
dec
jl
pop
sbbl
out
xlat
mov
jbe
pop
adc
shr
mul
aam
inc
sbb
mov
fstpt
xor
or
push
mov
inc
mov
popf
movsb
mov
pusha
mov
nop
test
or
cli
cmp
insb
add
imul
in
push
rorl
xorb
mov
jmp
jbe
sbb
pop
fyl2xp1
cmp
xchg
mov
jl
mov
idivb
movsl
jbe
xor
shrb
or
loop
in
inc
out
jbe
nop
push
bound
mov
or
mov
mov
pop
iret
dec
repnz
cli
inc
fidivrs
mov
notl
icebp
fadds
nop
cwtl
fcom
mov
dec
mov
xchg
cli
or
popf
in
mov
sar
and
jno
bt
cmp
jl
mov
movsb
or
shlb
cltd
jne
cmp
xchg
dec
out
xlat
dec
cmp
mov
je
mov
pop
cld
sahf
out
je
dec
faddl
mov
pop
cmpsl
xchg
push
fucomp
inc
cmp
push
xchg
jl
out
push
pop
dec
xor
adc
jge
pop
popa
or
fcomps
fildll
call
sar
xchg
mov
add
inc
add
or
bound
jns
out
inc
mov
in
mov
fidivrl
stc
arpl
imul
fwait
mov
fwait
popa
inc
pop
aad
push
int3
test
sbb
rclb
fwait
shl
ljmp
push
aad
out
mov
and
cld
jbe
pop
jnp
mov
jno
insl
sub
ds
adcl
fstpl
dec
or
xchg
popa
icebp
ljmp
jo
cwtl
mov
jae
or
adc
or
arpl
pop
cmpsl
mov
sti
sbb
sbb
pushf
lods
xor
jg
sub
cmc
or
movb
cmpb
cmp
loopne
hlt
mov
add
shll
outsb
cwtl
jne
sub
fcoml
cmp
jb
and
mov
popf
sbb
cmp
sbb
push
dec
inc
shll
mov
iret
movsb
dec
mov
xor
fs
jle
std
sbbl
mov
xchg
and
mov
xor
mov
test
mov
push
dec
push
icebp
xor
das
pop
mov
ret
jmp
imul
aaa
and
or
pop
test
je
sub
fs
pusha
lret
rcr
pop
pop
sbb
fwait
cs
xchg
inc
aad
jae
es
mov
sub
sbb
mov
mov
add
pop
sbb
fidivrl
insl
aas
int3
xchg
jmp
testb
cld
xlat
out
gs
or
nop
sub
push
or
xchg
pop
ret
test
sbb
adc
jnp
cmp
rcll
js
fiadds
xchg
or
cwtl
fdivrs
es
leave
push
lahf
les
sub
adc
xor
add
inc
dec
into
fcmovnu
rclb
jecxz
cmp
mov
xchg
fldl
lea
pop
xchg
pusha
in
lds
mov
mov
sarb
mov
jecxz
into
inc
cmp
mov
push
push
mov
in
outsb
sbb
and
mov
fisubrs
mov
jne
add
mov
aad
test
sbb
xchg
push
popf
jmp
out
mov
aaa
ror
js
hlt
sbb
and
fsubp
cmp
outsb
or
xchg
imulb
sub
rclb
lds
loope
add
mov
lds
pop
ficoms
movsb
cvtdq2ps
add
add
xor
pop
ljmp
clc
cmp
lcall
sbb
add
sub
push
outsl
orl
jle
jnp
fisubs
or
mov
loope
das
push
stos
int3
jle
add
or
inc
cltd
daa
or
xchg
mov
pop
dec
into
fdivrs
dec
pop
out
jnp
lea
push
lods
dec
rorb
dec
aas
ret
pop
or
repz
dec
aas
test
jo
cmp
imul
mov
hlt
aad
cld
dec
cmpsb
hlt
mov
lret
xorb
mov
out
jle
ljmp
adc
into
sbb
inc
pop
loopne
sub
insl
lods
out
push
xchg
xchg
or
in
mov
sarb
inc
cmpl
pop
add
or
cmpsl
js
xor
roll
xchg
xchg
fiaddl
stos
cmp
jmp
xlat
daa
adc
ljmp
pop
test
jecxz
adc
mov
jno
or
ljmp
out
jno
cmp
or
inc
push
shlb
je
shlb
push
cmc
cmp
inc
int
xor
sub
popf
aaa
stos
cmp
adc
movsb
mov
stos
repnz
push
xor
pop
testb
and
pop
gs
lahf
scas
mov
call
inc
leave
test
bound
mov
lcall
jmp
xchg
inc
xchg
inc
mov
xor
aad
lds
outsl
dec
or
xor
movsl
popa
jle
jns
sbb
lea
xchg
jbe
pop
sub
dec
mov
fs
aaa
data16
sbb
adc
lea
xchg
push
pushl
mov
fildll
pop
gs
jb
and
aas
or
in
icebp
pop
jp
fs
jg
xlat
sub
mov
dec
cmp
ja
mov
mov
repnz
rorb
into
dec
repnz
mov
mov
cmp
sbb
aam
sub
add
scas
dec
xor
mov
and
rcrl
orb
dec
ficoml
cmpsb
out
push
andl
sahf
mov
test
movsb
push
fldcw
cltd
lea
mov
cmp
or
xchg
xor
xlat
jne
sbbl
sub
loope
push
lahf
ret
popf
pop
sub
or
dec
inc
push
insl
pop
fsubl
sub
insb
stos
insb
xchg
into
xchg
inc
adc
pop
dec
mov
incb
inc
sub
dec
rorl
push
or
repnz
test
icebp
push
pusha
ret
ja
adc
div
xchg
jle
xchg
jbe
mov
inc
outsb
test
idivb
dec
mov
repz
leave
pop
pop
bound
movsb
mov
cli
ljmp
lret
sub
stc
aas
add
jns
push
loopne
jecxz
push
push
or
negl
jle
mov
and
ss
out
cmp
and
sahf
lar
js
lret
aam
in
nop
mov
xor
repnz
mov
enter
mov
loop
rcrl
xchg
push
sbb
inc
in
aaa
popf
std
pushf
push
test
fidivs
insb
aad
out
push
std
pop
enter
aam
adc
cmp
inc
push
xchg
mov
push
dec
pop
xchg
popf
jl
or
sti
ds
out
mov
cmp
jne
clc
jb
aaa
cmp
loope
popf
xchg
dec
xor
imul
cmp
fstpl
pop
cwtl
xor
xchg
scas
or
dec
pop
jne
pop
cmp
loop
mov
xor
insl
scas
das
cmp
data16
add
sbb
xor
pop
xor
movsl
orb
mov
add
pusha
bndstx
xor
jmp
sub
mov
push
mov
mov
scas
iret
fwait
inc
pop
lret
mov
leave
repnz
jo
aas
call
testl
pop
out
cmpl
ja
push
jl
icebp
ja
inc
cmpsl
inc
imul
es
mov
in
mov
push
pop
xchg
cltd
pusha
popa
mov
mov
add
repz
pop
sub
test
sub
jbe
cltd
imul
inc
jecxz
mov
ret
mov
das
jp
hlt
ss
adc
call
push
pop
mov
out
jno
fwait
test
andb
inc
jbe
arpl
dec
out
or
icebp
mov
repnz
les
pop
stos
rcr
inc
aas
xor
inc
sub
sub
and
jle
cmp
sub
xchg
cmp
sub
jne
pusha
sbb
mov
jnp
add
into
xor
cmp
xchg
sub
rorl
push
pushf
stc
hlt
imul
mov
cs
stc
xor
inc
mov
add
outsl
das
mov
or
inc
inc
rol
iret
jae
nop
mov
stos
scas
test
sub
ljmp
add
test
sahf
xor
pop
in
fcmovnu
jno
dec
inc
xchg
rcr
add
inc
jae
inc
push
ds
movsb
scas
imul
adc
movb
xor
jne
repnz
or
jg
add
xor
subb
cmp
mov
nop
sub
add
insb
pop
push
call
into
in
hlt
jp
jecxz
into
and
test
shll
xchg
inc
jno
sub
or
sbb
add
sub
mov
sbb
mov
je
andb
cld
jg
adc
mov
mov
ss
gs
icebp
loopne
lret
popf
pop
push
sub
ljmp
hlt
rorb
fwait
imul
imul
mov
jns
rcrl
jns
mov
jmp
lahf
mov
pop
in
sub
rcrb
xchg
pop
mov
aaa
push
inc
pop
push
and
scas
cmp
into
out
mov
inc
xchg
in
aam
cmp
fiadds
loopne
loopne
xchg
mov
imul
std
movups
out
or
pop
jl
mov
lret
cmp
jmp
adc
std
out
adc
es
xchg
mov
push
adc
mov
scas
cmp
daa
ljmp
lret
sti
jo
fists
repz
arpl
into
sbb
cmp
push
ret
mov
test
add
data16
mov
mov
jmp
mov
lcall
fidivl
pop
lahf
rolb
popa
lret
lea
adc
stc
in
ss
mov
sub
mov
pop
xchg
and
call
cld
int
cwtl
std
xchg
xchg
incb
insb
sub
scas
loopne
and
stos
stos
in
mov
lds
cltd
cmp
dec
cli
fcmovne
data16
icebp
mov
mov
fdivrs
push
dec
jp
xchg
mov
and
mov
mov
iret
call
icebp
fnstsw
and
iret
mov
sub
pop
mov
int3
push
call
lods
pop
in
std
mov
cmc
cltd
adc
push
pop
cmp
data16
scas
pop
xchg
sarb
inc
fistps
pop
push
pushf
pop
push
sub
sub
adc
out
movsl
inc
mov
pop
jno
cmp
out
add
push
adc
mov
enter
jge
mov
jne
mov
xchg
mov
push
mov
jb
add
fsub
and
sbb
xor
imul
sub
and
or
mov
or
mov
je
cmc
cmp
pop
push
and
cmc
out
aaa
mov
sbb
sahf
enter
and
aas
js
push
cli
movsl
es
mov
add
push
ror
xor
mov
dec
scas
dec
je
add
iret
test
dec
pop
mov
gs
std
cld
shll
sbbl
mov
adc
stos
es
or
mov
addr16
dec
adc
call
mov
cmp
std
test
mov
xchg
pushf
in
sub
pop
push
xor
ret
add
xchg
mov
mov
inc
push
sbb
add
push
jne
enter
loope
testb
arpl
jno
add
dec
push
scas
sub
jo
aaa
lahf
stc
xchg
aam
sub
mov
cwtl
jb
mov
icebp
sub
cs
aas
add
and
cli
ffree
pop
adc
jns
xchg
sub
dec
out
test
jnp
push
jmp
pop
xor
faddp
cmp
pop
aaa
lds
xchg
or
into
jmp
imul
sub
add
sahf
insl
nop
lahf
xlat
cmp
test
inc
mov
push
popf
mov
mov
sub
mov
mov
and
adc
jl
jl
ret
jmp
xor
push
jo
stos
cmp
dec
stc
xchg
xchg
and
add
imul
sahf
push
clc
and
mov
in
lcall
jecxz
fcompl
sahf
jnp
fdivrl
sbb
mov
test
dec
loop
dec
js
add
out
push
nop
in
in
adc
mov
cmc
push
add
dec
and
or
sbb
sub
inc
ficoms
xor
cltd
lret
popa
and
lock
mov
fst
in
xlat
inc
mov
adc
add
lahf
iret
jge
out
sarl
mov
jbe
push
lock
js
xchg
pop
bound
push
jecxz
mov
sbb
shrl
fstl
jp
movsl
in
ss
addb
or
xlat
pop
pop
int
test
or
pushf
loopne
xor
ja
inc
rcll
cmp
sub
or
mov
hlt
mov
xorl
mov
push
xor
insb
xorb
aad
mov
mov
pop
and
mov
xor
fcoml
mov
popf
cli
addl
lds
test
inc
xchg
lcall
mov
inc
into
stc
pop
into
gs
int3
adc
je
push
and
fwait
jne
jno
sbb
mov
enter
popa
mov
sbbl
add
sub
cmpsb
jp
push
push
cs
mov
push
push
add
and
push
imul
xchg
jmp
xor
push
pushf
cwtl
jnp
aaa
mov
dec
xchg
dec
je
sbb
repz
mov
mov
mov
jo
loopne
bound
nop
pop
push
mov
stc
cmpsb
jb
js
lret
mov
adc
xor
mov
inc
insl
outsl
jmp
xchg
and
insl
lcall
in
imul
hlt
mov
jge
adc
into
mov
hlt
inc
data16
push
add
jne
push
xchg
cmpsb
and
push
ret
xor
dec
xchg
mov
cmc
xor
fstpt
filds
mov
adc
int3
fdivrl
aas
sub
xchg
fstl
dec
mov
ljmp
aam
or
lods
add
sub
sbb
jmp
cltd
push
pop
and
xchg
test
jg
lock
cmp
mov
imul
adc
lods
loop
push
addb
in
sbbl
cltd
jle
aam
in
jg
fidivrl
jl
xor
mov
ret
mov
movsl
cs
cmp
lods
dec
dec
insb
test
out
cli
inc
insl
cs
mov
jne
test
out
ror
and
pusha
xor
addr16
aas
mov
jg
xchg
mov
adc
push
sub
xorl
andb
sar
mov
jae
inc
fbstp
test
xor
mov
loop
scas
pop
roll
jge
into
add
insl
outsb
xor
inc
dec
mov
fmuls
or
aas
fldlg2
std
inc
test
xchg
pop
add
mov
pop
std
sbb
fistl
cmp
or
dec
xchg
repnz
xchg
popa
push
stos
sub
ret
jmp
daa
rorl
cmpsb
fcmovnb
mov
cmp
mov
push
xor
mov
repnz
push
push
enter
mov
les
pop
leave
mov
imul
sbb
ds
lahf
sub
jl
sahf
jge
scas
jle
sbb
push
dec
or
iret
les
lret
stc
addb
sarl
cld
bound
adc
pop
xchg
adc
cmpsb
cltd
sub
sahf
mov
jge
cmp
mov
push
out
std
sbb
add
or
js
sbb
loopne
xor
out
add
int3
in
mull
out
out
inc
dec
sti
cmp
repnz
mov
cmp
out
pop
xor
xchg
mov
pop
lret
push
mov
xchg
cmpsb
cmp
jno
mov
mov
mov
push
rcr
das
call
in
push
outsl
rcl
sub
repnz
push
mov
jge
xchg
and
dec
mov
cmp
aam
shr
into
and
mov
adcl
cmp
out
xor
aas
lea
test
jo
add
adc
sub
dec
leave
popf
fmulp
int
in
testl
cli
inc
sahf
rorb
push
dec
cmpb
and
mov
cmpsl
or
out
adc
cmp
insl
xchg
dec
mov
subb
fcmovne
xchg
add
outsb
lahf
pop
or
cld
je
mov
jno
lret
add
int3
inc
dec
push
sub
jle
xchg
dec
or
xor
mov
mov
mov
mov
push
push
jae
xchg
inc
fsts
push
imul
xchg
adc
pop
jge
mov
push
sbb
fiadds
mov
xchg
outsl
mov
and
popa
scas
enter
rcrl
mov
pop
adc
xchg
or
adcb
sbb
inc
fwait
imul
xor
out
and
in
dec
fdivr
push
jge
imul
arpl
enter
daa
loopne
jae
rcrb
push
jp
es
nop
push
popa
jl
xchg
scas
jae
fcmovu
xchg
push
xchg
mov
fisttpl
pop
std
pop
sbb
sbb
les
jne
sarb
daa
jl
shrb
loop
dec
cli
rorl
jo
inc
lret
pushw
jg
xor
scas
dec
incb
outsl
adc
ljmp
subb
or
out
leave
es
aas
inc
pushf
enter
and
cmp
fnstsw
inc
dec
imul
in
cli
xor
insb
jbe
jp
loop
icebp
jno
xchg
cmpsl
mov
int3
sub
mov
pop
shlb
pusha
insl
inc
mov
mov
adc
and
sbb
cmc
pop
ret
rclb
xchg
inc
mov
pushf
jno
adc
je
adc
cmc
push
xchg
sub
je
lods
dec
push
or
ljmp
dec
adc
cld
testl
jno
fwait
xor
add
sub
inc
xchg
sahf
xchg
push
cmpl
data16
mov
pushf
or
xchg
hlt
inc
mul
cmpsb
xchg
mov
dec
pop
mov
mov
fsts
sbb
lcall
sub
mov
or
hlt
jnp
cmc
mov
jae
out
inc
xor
pusha
and
mov
loopne
dec
push
movl
push
pop
sbb
xor
adc
call
push
jmp
or
imul
sub
ret
call
pop
jecxz
fsubl
dec
arpl
xor
clc
nop
rcrl
jg
sarb
cmp
scas
xor
scas
sahf
es
fisttpll
adc
and
popa
das
mov
push
outsl
push
sbb
xchg
mov
jge
pusha
cmpsb
push
pusha
out
mov
adc
inc
int3
mov
xor
xchg
xchg
addl
sub
ja
flds
dec
test
lock
loope
loope
popf
gs
int3
push
adc
xchg
rorl
es
jnp
rcr
aam
dec
sti
popf
dec
sub
das
cwtl
insb
sub
pop
xchg
outsb
jg
push
pop
fsubs
cmpsb
mov
das
and
je
call
add
mov
or
or
mov
out
or
add
cmp
addl
sbb
and
movsb
sub
ficomps
inc
push
push
mov
pop
cmp
pop
jecxz
je
inc
aaa
add
sbb
pusha
adc
cmpsl
pop
pop
push
ds
inc
pushf
cmp
ja
inc
in
fwait
cmc
mov
sbbl
sbb
xor
dec
shll
inc
arpl
dec
mov
push
dec
push
ror
xor
add
push
divl
movl
lods
sbb
xlat
inc
sbb
jecxz
nop
mov
and
pop
movb
es
daa
pop
popf
xchg
and
push
mov
pop
sti
xchg
cmp
mov
ss
lds
dec
icebp
fstl
scas
cwtl
clc
jne
frndint
insb
mov
cmpsl
dec
or
fmull
cmc
jae
sub
xor
sub
add
jle
sub
pop
out
adc
pop
lahf
ja
insl
nop
sbbb
mov
outsl
jecxz
cmp
or
shll
cmpsl
subl
es
cmp
cmpsb
jbe
lcall
mov
jl
and
aaa
ffreep
xor
push
or
int3
pop
stos
aam
inc
sbb
jl
out
mov
cmpsb
frstor
inc
push
shlb
lcall
jbe
and
adc
or
mov
imul
cs
jp
clc
mov
sbb
inc
shll
cmp
leave
push
stos
cmp
enter
pop
iret
jnp
push
lahf
in
js,pt
sub
inc
sub
out
repnz
sub
xor
inc
cmpb
in
xchg
ret
out
iret
xchg
addr16
adc
mov
push
or
das
xor
inc
cld
pop
push
mov
mov
roll
xor
xlat
mov
pop
jmp
adc
jmp
add
das
js
lahf
xchg
lret
push
inc
stos
dec
push
sub
ljmp
divb
testl
cli
mov
loop
or
cltd
jmp
add
mov
inc
mov
imul
cmp
mov
lea
lcall
insb
pop
gs
mov
lock
dec
cmp
rcrl
cltd
popf
mov
sbb
pop
mov
js
loopne
adc
rorl
fstpt
aam
cmpsl
fstpl
das
movsb
out
sbb
xchg
test
test
cld
fsubl
pop
jb
pop
jecxz
add
stos
pop
cmc
or
lea
fnstenv
xchg
sbb
ds
or
mov
incl
jmp
loope
dec
mov
dec
mov
jns
sbb
ja
test
sub
sbb
push
repz
test
xchg
out
fwait
jle
pop
push
mov
xchg
xchg
or
xchg
push
mov
mov
jmp
cmpsl
and
pop
mov
pop
pop
lret
cmp
hlt
shll
xchg
fistps
dec
xor
movsb
mov
es
or
inc
bnd
aaa
adc
jge
cltd
mov
dec
leave
scas
pop
ljmp
mov
cmpsl
aas
and
hlt
xchg
orb
mov
push
popa
pushf
xchg
cmp
insl
sti
cmp
pmuludq
pop
cld
gs
js
jae
fstp
fnstsw
call
sub
sahf
pop
mov
inc
sbb
jb
add
out
scas
roll
and
add
xlat
adc
add
orb
sub
icebp
sahf
jne
sub
mov
sarb
std
xchg
imul
mov
ret
and
inc
ds
cmpsl
imul
sbb
dec
pushf
cli
out
dec
jnp
pop
dec
cmpsl
inc
xchg
iret
jb
inc
into
mov
pusha
cmpsl
sbb
dec
aad
dec
bound
sbb
popa
mov
mov
mov
icebp
outsb
ds
lock
mov
mov
in
int
aam
pop
insb
mov
mov
lret
fdivl
fidivrl
mov
add
and
mov
jbe
adc
inc
xor
push
or
sbb
lret
lret
lret
cmp
subl
aad
pop
lds
mov
out
jle
inc
ret
or
adc
loop
std
mov
pushf
mov
test
xor
lea
and
xchg
idivb
sbb
mov
fnsave
mov
push
movsb
aam
inc
mov
rcl
sub
mov
xor
mov
test
sbb
adc
test
sub
push
lcall
cmc
sti
sub
jb
lds
aaa
arpl
fistpl
imul
rorb
mov
jp
jae
movsb
sub
lret
mov
xlat
or
movl
out
cmpsl
inc
cmp
test
mov
mov
imul
daa
cmp
jae
mov
add
cli
pop
outsb
fcoml
dec
pop
cld
mov
and
idiv
jle
jb
imul
and
icebp
sub
push
pop
aaa
sbb
cmp
std
xorb
push
mov
xor
xchg
stos
inc
clc
mov
test
xor
dec
push
fnstenv
idiv
divl
push
loop
sbb
mov
sub
ror
subb
sbb
sbb
int3
sub
test
xchg
sbb
mov
push
lods
jno
push
loope
inc
test
push
jae
pop
gs
or
mov
and
dec
inc
adc
mov
test
mov
xor
or
dec
and
mov
test
xor
cwtl
xor
popa
mov
dec
out
data16
mov
lcall
cld
stc
fwait
mov
pop
push
pop
add
popfw
dec
mov
mov
test
movb
scas
mov
rcll
in
loopne
inc
aam
sub
xchg
aam
jp
in
bound
or
fwait
mov
shll
sbbb
xchg
repz
jns
adc
cmp
xor
jns
arpl
sbb
pop
neg
bound
adc
cld
repnz
aad
mov
inc
cmpsb
dec
fistl
fimull
call
pop
fcomps
xchg
sub
dec
dec
adc
lret
push
push
mov
mov
mov
mull
test
mov
push
lret
or
sub
inc
test
repz
ja
mov
inc
das
lods
or
popa
in
xor
xchg
ja
jl
sbb
loopne
mov
xor
adc
mov
xor
dec
rolb
xor
hlt
or
sbb
cmp
and
or
mov
xchg
sarb
cmp
adc
ds
ss
jo
mov
pop
lock
inc
es
push
sub
in
gs
cmp
add
push
testb
daa
cwtl
mov
dec
mov
jl
xor
insl
push
mov
rcl
sub
inc
repz
mov
mov
in
sub
into
jle
pusha
jnp
fwait
xor
mov
sti
inc
lods
push
incb
jbe
bound
inc
loope
out
fcmove
xchg
mov
test
cmp
pop
outsb
cmpsl
ror
ror
xchg
and
jns
mov
imulb
ja
and
insb
loope
or
cld
mov
jno
mov
push
sahf
cmp
pop
bound
sbb
imul
sahf
lahf
xchg
mov
es
aam
fucomp
cmp
cmp
jns
add
lahf
pop
loope
fstl
jl
or
stos
pop
adc
sti
fsubrl
jne
lods
divl
adc
in
push
jmp
inc
imul
outsb
push
dec
loop
jns
addr16
jecxz
icebp
call
std
xchg
xchg
scas
xchg
in
xchg
mov
orb
adc
mov
out
sahf
pop
xchg
ret
inc
xchg
mov
jp
push
jae
sti
insb
pop
stos
xor
cmp
xchg
and
jmp
popf
or
divb
inc
push
jl
arpl
outsl
xor
dec
jmp
es
shlb
xchg
int3
mov
pop
pop
mov
gs
pusha
xchg
jb
sbb
fstpt
roll
sbb
mov
xor
inc
jb
dec
inc
sbb
mov
popf
mov
mov
xchg
adcb
sbb
adc
jne
into
cmp
inc
jns
or
xor
icebp
pop
aas
testb
in
repz
cmc
shlb
inc
lds
push
add
mov
test
scas
pop
gs
push
sar
loopne
adc
mov
ss
or
cld
cmp
pop
add
fdivrs
loope
add
cmp
insb
lea
add
dec
mov
cmp
pop
mov
das
aaa
addl
adcb
fs
mov
rcl
xchg
mov
adc
push
pop
cmpsl
push
jno
test
pop
fidivrl
mov
and
and
shl
ja
inc
subl
fwait
push
out
push
dec
out
and
je
ret
dec
cmpsb
icebp
sbb
sbb
cmp
pop
or
cltd
insl
inc
add
inc
jmp
loopne
enter
out
pop
cmpsl
cld
adc
lret
mov
imulb
cmp
add
or
jno
and
or
and
sub
imul
in
sbb
mov
pop
dec
mov
movsb
mov
add
mov
inc
pusha
shlb
leave
sub
sarb
mov
into
lods
cmp
ja
data16
rorb
mov
and
inc
push
aad
adc
jns
inc
push
xchg
insb
jbe
sub
xor
aas
and
test
stos
ficomps
or
inc
dec
jmp
inc
sbb
xchg
movsb
or
add
inc
in
imul
call
sbb
dec
adc
lods
test
adc
mov
rclb
shll
cld
adc
pop
inc
adc
mov
lcall
inc
frstor
mov
xchg
add
dec
fdivrs
daa
xor
adc
add
repz
lea
js
pop
arpl
dec
insb
mov
testl
inc
jmp
dec
mov
sub
mull
fst
dec
xchg
push
je
pop
adc
jno
ss
mov
inc
leave
rcl
mov
enter
inc
push
movsl
mov
add
repz
imul
mov
mov
jnp
dec
fcoml
imul
aas
scas
sarl
pop
fdivrs
pop
fadd
mov
int3
and
mov
sbb
push
and
movsb
pop
faddl
and
push
cli
add
or
inc
lcall
stc
add
or
push
divb
sub
in
dec
movsb
xchg
pushf
stc
pop
lds
outsl
inc
mov
xchg
imul
sub
ja
cmp
inc
dec
jmp
xor
lock
stc
mov
enter
inc
xchg
shl
and
out
das
pop
jecxz
into
shrl
fidivs
dec
pop
mov
popa
lock
repz
adc
jp
mov
mov
roll
aad
dec
sbb
loop
inc
into
jno
fisttpll
lock
cwtl
adc
xor
xchg
cltd
push
addr16
inc
inc
lret
mov
cmpsb
sbb
test
mov
adc
aam
sbb
cs
popf
pop
je
incl
mulb
clc
call
pop
lea
jo
adc
xchg
xor
ret
dec
lret
dec
and
lahf
in
pusha
mov
push
insb
sub
rolb
or
xor
or
flds
mov
cmp
js
xchg
icebp
fdivl
cli
ds
aam
mov
shll
cmp
sub
fidivl
and
setge
fnstcw
jb
inc
and
mov
data16
mov
or
or
pop
scas
aas
xchg
cmp
pop
inc
fisubrl
or
into
js
adc
mov
xor
inc
repnz
adc
pop
mov
xchg
adc
sti
mov
inc
inc
fdivrs
ds
insb
or
dec
mov
outsb
into
popa
and
outsl
mov
xor
pushf
xlat
mov
adc
repnz
inc
jg
adc
lahf
shll
mov
ret
lret
stc
enter
clc
addr16
into
sub
cmp
test
aas
imul
xchg
cmp
insb
pop
je
mov
lcall
mov
dec
xchg
ret
and
movsb
shl
jle
jle
fiadds
filds
sbb
insl
into
adc
clc
ljmp
mov
lahf
adc
mov
lea
pop
imul
xor
fsubrl
in
fs
sub
xchg
push
addr16
lcall
lea
js
test
cmpb
lret
and
scas
mov
jp
hlt
mov
mov
ret
shl
lahf
ret
pop
imul
sub
and
push
mov
jmp
mov
cs
and
inc
and
dec
in
lds
stos
lock
jp
dec
xor
jmp
jecxz
or
cmp
dec
cmpsb
fsts
icebp
adc
add
repnz
testb
test
adc
sbb
jbe
pop
inc
loopne
dec
adc
mov
mov
movsl
and
adc
test
adc
sbb
in
jne
pop
scas
or
sbb
ret
call
cmp
add
stos
test
popa
mov
inc
inc
outsl
lods
xchg
aaa
cld
mov
jno
dec
xchg
mov
idivl
ss
push
adc
out
cltd
adc
mov
loope
or
and
hlt
sbb
mov
loope
push
sarl
rcrl
js
or
scas
bound
jno
sahf
loopne
ljmp
sbb
mov
xor
repz
negl
sub
in
mov
fsts
mov
sub
aam
mov
std
push
pop
sub
dec
loope
cmp
jg
shrb
pop
sub
stc
jb
into
mov
adc
cld
cmpsb
fnsave
testl
mov
add
repnz
gs
dec
mov
push
lahf
jle
xor
sbb
mov
int3
sbb
movsl
mov
sbb
adc
fmuls
mov
or
in
xorb
and
xchg
dec
dec
ror
sub
or
je
scas
lds
pop
jne
or
loopne
sbb
mov
inc
mov
jns
add
xor
mov
out
inc
mov
pop
and
xor
bts
push
addb
pusha
mov
out
mov
cmp
out
test
push
lea
xchg
pop
roll
imul
ret
movsb
jne
bound
je
hlt
jo
call
aad
pop
test
in
scas
lret
test
rcll
addr16
pop
jecxz
or
sub
adc
adc
jp
iret
gs
sbb
mov
inc
sti
jno
xchg
push
enter
or
movsb
movsb
xor
pop
movsb
xor
rorl
or
clc
ret
and
dec
mov
arpl
or
push
push
inc
in
adc
int3
aam
nop
imul
sub
mov
stos
pushf
mov
inc
fmuls
mov
xchg
fists
push
mov
lret
cmp
idivb
jge
clc
iret
push
jnp
sbb
cld
xor
jecxz
mov
pop
add
aaa
sarb
xchg
mov
stos
xchg
sub
mov
xor
push
pop
pop
ror
or
popf
out
cmp
pushf
mov
add
sub
insb
pcmpgtw
ret
xchg
jg
lock
xchg
aaa
inc
sti
sbb
jle
inc
imul
mov
fadd
loop
xchg
stos
sbb
jbe
dec
and
int3
lahf
mov
mov
insl
popf
lds
mov
icebp
dec
mov
mov
enter
pop
call
outsl
pop
arpl
in
scas
mov
jns
and
test
in
js
mov
dec
sub
and
psubd
je
cmc
xor
scas
xor
mov
pushl
mov
lahf
pop
adc
aad
cmc
sbb
mov
mov
push
xchg
xchg
popa
orb
or
and
jb
or
adc
adc
add
cmp
lret
adcb
sub
adc
and
mov
sub
push
xor
gs
sub
pop
outsl
pop
jle
outsb
loopne
sbb
jb
lcall
add
nop
out
inc
jecxz
and
dec
sbb
or
ror
push
pop
mov
je
enter
push
xchg
inc
pop
dec
jl
imul
or
mov
sbb
movsb
pop
xchg
addr16
insb
out
lret
inc
cmp
push
stos
mov
std
cli
lods
aad
mov
mov
cmpsl
std
jo
or
mov
cmp
adc
loope
mov
lret
movsb
mov
sbb
pop
cmc
out
fmull
cmp
and
aas
incl
std
pop
dec
dec
mov
test
add
icebp
adc
sub
mov
xorps
leave
outsb
and
stos
push
cltd
loope
push
lret
lods
psrld
test
cwtl
fidivs
mov
pop
test
push
int
ja
jnp
mov
cmp
pop
fchs
fadd
mov
adc
and
and
ja
fisubrs
sub
insb
stos
test
mov
jae
fadd
sbb
stc
xchg
adc
push
xchg
sbb
std
dec
add
sbb
dec
push
adc
es
in
test
loope
divl
xor
call
mov
scas
lret
dec
jns
inc
loope
lock
cwtl
add
es
pop
stc
cs
sub
or
fwait
sbb
dec
cmp
gs
xor
xor
push
mov
pop
or
sub
adc
mov
in
cmpsb
aaa
ret
mov
mov
sbb
mov
in
push
push
xor
add
test
inc
fists
inc
xor
cmpsl
jae
sub
mulb
fcomp
mov
insl
add
insl
cmp
stc
mov
xchg
sub
jo
clc
insl
mov
inc
xor
fdivrs
cmpsb
mov
push
addr16
xor
inc
movsb
stos
fldenv
and
fldz
data16
shlb
lcall
pushf
xor
xorl
jb
enter
les
jno
int
push
inc
pop
stc
and
mov
add
push
inc
fildll
push
xchg
cld
add
and
push
dec
pop
sbb
mov
movsb
mov
xor
dec
sbb
push
push
and
inc
rcll
push
shlb
push
adc
movsl
mov
sub
mov
xchg
out
hlt
popa
adc
shr
addb
pop
gs
jle
add
or
hlt
xor
ja
sub
inc
stc
in
dec
lret
iret
push
or
mov
cmp
pop
fwait
gs
insl
mul
cmp
repz
test
sbb
mov
je
xchg
jo
movsb
mov
aas
leave
adc
adc
sub
lret
mov
in
and
cmp
adc
jno
rcl
lahf
sbb
ljmp
mov
js
or
mov
pusha
push
xor
or
fcompl
test
lahf
sarl
lds
pop
jmp
push
pusha
fcmovnu
xchg
mov
movsl
out
jle
aas
add
cwtl
in
mov
test
inc
outsb
repz
mov
ret
dec
lret
test
fwait
sub
out
xor
sub
lock
imul
mull
shrb
je
negl
faddl
cmp
imul
outsl
es
mov
inc
jp
je
leave
shr
out
addr16
in
and
adc
fidivl
cmpsl
ja
stc
push
cmp
loopne
pop
shll
adc
mov
mov
sub
sbb
jae
cmpsl
sbb
and
inc
jb
sbbb
mov
cmp
and
mov
pop
bound
ror
sbb
mov
imul
xor
dec
dec
rcll
imul
ficompl
jg
leave
data16
stc
mov
iret
mov
and
mov
or
cmp
add
push
jnp
lods
js
loopne
inc
sbb
pop
or
sub
cmc
fs
call
push
dec
lret
mov
xchg
add
movsl
and
clc
mov
xchg
inc
insb
fiaddl
sbb
inc
loope
lahf
bswap
cltd
inc
xchg
and
mov
pop
fistps
mov
popa
sbb
jo
movsb
jo
test
outsb
add
mov
imul
cmp
mov
stos
or
mov
into
or
rcrl
mov
cmc
out
icebp
jne
push
add
ret
mov
inc
insb
iret
xlat
test
lea
jg
lods
dec
xor
es
xchg
push
popa
push
mov
cld
push
mov
push
ds
dec
lret
pop
aas
out
shr
mov
pushf
jne
gs
jmp
ja
cwtl
aad
fisttpl
push
inc
lcall
inc
std
js
jb
arpl
mov
sbb
inc
fwait
jno
push
dec
cwtl
push
add
cmp
jmp
cmpsb
inc
je
scas
test
lock
mov
into
xor
cli
adc
pop
icebp
enter
jge
push
mov
lods
jecxz
add
pop
dec
rcr
adc
aas
cmp
xor
push
pop
jmp
adc
lock
psubsb
mov
and
mov
mov
sbb
test
mov
add
jno
jl
fsubrs
data16
xor
pusha
in
jne
xchg
mov
leave
mov
jno
xchg
mov
push
mov
and
adc
das
imull
aad
push
and
add
fisubrs
xchg
cmp
or
cmp
cmpsb
lock
dec
push
xor
xchg
rclb
scas
rorb
push
loop
int3
icebp
loop
bound
adc
pop
insb
sub
stos
cmp
mov
bound
sbb
pop
cmpsl
adc
stos
mov
add
mov
cli
jl
mov
aaa
ss
stos
in
shr
rol
in
jp
cmp
xlat
lahf
push
es
adc
iret
dec
xchg
xlat
aam
cmpsl
cmp
xor
daa
sbb
mov
std
pop
and
mov
repz
in
lcall
daa
sub
sbb
aam
jmp
imul
inc
xchg
rcll
sub
imul
inc
mov
fnsave
xchg
movsb
or
mov
add
mov
or
dec
xchg
cmp
inc
les
inc
imull
push
inc
insb
inc
test
popf
dec
xchg
gs
mov
nop
sub
jp
lahf
jmp
cmp
cmpsl
mov
mov
mov
pop
ljmp
jbe
inc
lods
ret
dec
mov
in
sbb
adc
dec
mov
sub
or
mov
ret
rcrl
xchg
cli
pop
popf
dec
test
popf
das
scas
add
into
inc
or
and
sub
mov
outsl
or
pop
in
mov
xchg
fildl
jns
fwait
and
or
inc
js
pop
insl
sarl
push
and
popa
sub
push
pcmpgtd
mulb
or
adc
cld
ret
movsb
sub
push
or
cmp
icebp
les
mov
mov
adc
lahf
repnz
sub
rcrb
out
icebp
or
sub
and
push
pop
dec
cmp
test
bound
push
aaa
pop
jns
jp
jae
mov
mov
mov
cli
je
sub
dec
or
add
aaa
scas
test
sahf
enter
lea
sbb
pusha
out
dec
mov
insl
push
movsb
xor
out
xor
pop
cli
lret
xor
ss
sub
imul
faddp
add
scas
cmp
and
add
out
in
sbb
mov
test
xor
push
fisttpll
fs
addr16
sbb
sbbb
jo
mov
cld
ret
add
lds
mov
aam
push
add
pop
jle
lret
push
fwait
cmp
mov
jl
or
push
aad
add
test
inc
push
pop
sub
out
roll
pusha
inc
sbb
xchg
sub
push
cmp
subb
faddl
mov
ret
jp
stos
xlat
xor
jae
out
adc
mov
jp
inc
add
pop
pop
dec
xor
xchg
repz
xor
cmc
aam
aaa
lock
lock
outsb
xchg
ja
mov
adc
int
idivl
test
dec
sti
gs
pop
sub
mov
push
addr16
jns
decl
push
inc
sub
std
inc
mov
add
leave
icebp
jle
test
inc
hlt
add
setno
lods
push
mov
jno
mov
rcl
aas
and
adc
add
jbe
push
mov
sbb
shl
jo
test
cltd
addr16
jne
scas
lds
or
loope
movsl
and
add
xchg
mov
inc
out
jecxz
dec
sbb
popa
dec
in
dec
sub
mov
or
mov
mov
cmp
or
imul
jecxz
jp
fwait
mov
pop
outsb
jnp
xlat
fnstcw
cli
jns
dec
cwtl
scas
jl
add
es
push
into
shr
mov
call
sahf
lods
loop
shr
int
sbb
mov
sqrtps
mov
mov
inc
jg
fimull
insb
scas
in
mov
xchg
cmp
adc
cwtl
dec
test
add
movsl
subb
jge
add
dec
mov
and
sub
stos
push
enter
fs
xchg
mov
lea
fmull
enter
inc
xchg
mov
aam
xchg
les
movsl
scas
mov
sub
in
sbb
or
mov
cmpsl
shl
cwtl
cmp
adc
repnz
and
xor
jg
out
std
sbb
int3
or
dec
pusha
movsl
ret
ret
and
ja
stos
lret
loop
xor
mov
fsub
lods
sti
push
xlat
rorl
popl
stos
xchg
sub
stos
mov
mov
adc
fstps
in
push
jmp
xchg
cwtl
fsubrs
popa
mov
repz
adc
or
arpl
inc
cmp
cmp
cmp
cltd
or
xchg
mov
jno
lea
aaa
sub
mov
mov
mov
xor
jns
mov
into
test
adc
mov
xchg
mov
adc
and
jo
dec
into
hlt
and
paddsb
fstl
lods
jp
sti
imul
setge
stc
xor
jg
fsubrs
sub
mov
push
push
xchg
test
lods
cmp
mov
cmp
js
cwtl
push
mov
pop
dec
imul
mov
mov
dec
cmp
xor
cmc
insl
idivb
lea
out
jecxz
or
cltd
inc
or
jns
mov
xor
xor
sbb
add
das
xorl
popa
stc
addr16
mov
pop
dec
and
mov
mov
fsqrt
mov
pop
daa
sbb
cmp
xchg
sbb
insl
jnp
xchg
filds
lds
hlt
pop
sbb
push
cmp
xor
cmc
cmp
shrl
fsub
sarl
lahf
cltd
push
cmc
shlb
push
rcl
mov
pop
xlat
mov
movsl
xor
mov
push
dec
imul
jo
call
dec
enter
gs
jbe
pop
mov
movsl
jne
pop
xchg
sbb
xchg
popf
sbb
iret
cmp
ret
adc
mov
mov
js
mov
xor
pop
imul
push
stos
push
mov
cli
out
or
test
adc
bound
cmp
sub
and
inc
stc
test
pop
jo
jo
fsubrs
mov
daa
dec
les
arpl
fs
jl
cld
add
add
cmp
lahf
sbb
push
mov
test
mov
adc
sub
adc
hlt
pop
mov
pop
dec
cmpsl
push
xchg
and
xchg
xchg
lock
add
mov
js
or
mov
mov
sbb
leave
xchg
ret
sub
test
cmpsl
and
ja
outsb
cmpsb
cld
or
stos
and
xchg
add
pop
push
add
lock
rcll
sub
or
fadd
imul
mov
push
mov
inc
sahf
fwait
xor
push
mov
fnstenv
jge
mov
pop
loope
inc
and
jg
in
pushf
xchg
inc
incl
sub
outsb
gs
lods
pop
jmp
jnp
cld
push
retw
filds
fsts
sub
add
sbb
sti
fidivl
inc
insl
lock
fistl
lods
rcrb
mov
cmp
push
clc
cmp
mov
xor
xor
mov
cmc
aaa
inc
in
pop
insb
sti
pop
adc
inc
mov
test
pop
sbb
nop
arpl
xchg
adc
mov
mov
std
cmpsl
cli
cmp
pop
test
xor
sub
fisttpll
leave
fsubrs
imul
jb
scas
imul
xchg
andl
mov
adc
stos
push
pusha
dec
rorb
jae
mov
adc
stos
lret
push
dec
jl
cltd
add
cli
jp
cld
fmuls
fwait
xchg
and
inc
adc
mov
dec
mov
sbb
movsl
daa
dec
lods
daa
movsl
stc
lea
mov
adc
scas
cmp
sar
push
and
push
dec
jae
aad
dec
aam
mov
call
mov
fcoml
mov
insb
loopne
inc
insl
adc
mov
pop
sub
add
mov
pushf
add
aas
idivl
dec
fistl
sbb
mov
sub
shr
sbb
ss
lret
xchg
es
inc
imul
insl
xor
repnz
jo
xchg
imul
sub
inc
rorb
inc
mov
dec
movsl
lahf
lahf
pop
in
das
lea
mov
fidivl
jge
cli
xchg
xor
sbb
negb
sub
cmp
ficoml
add
pop
sub
mov
inc
in
mov
mov
jge
jo
mov
xor
cmp
jmp
xchg
call
jecxz
fnstsw
push
in
sbbl
mov
inc
dec
cmpsb
pop
and
sub
jno
pop
dec
adcl
gs
mov
cmpsb
fucomp
andb
andb
jle
movsl
sahf
cltd
aam
mov
inc
into
pop
fcompl
jnp
inc
cmc
mov
sub
xor
imul
aas
ljmp
in
out
and
insl
lock
pop
dec
cmp
adc
mov
pop
leave
cwtl
jp
int
adc
sbb
push
bound
fdivr
imul
in
test
push
mov
adcl
or
inc
jbe
mov
nopl
jne
sbb
sub
jl
sti
lret
pop
jbe
int
call
fmull
stos
sti
mov
cmp
adc
and
ret
sti
mov
fucomi
add
sti
aad
out
repz
pusha
mov
out
push
push
inc
push
pop
iret
jb
xor
xchg
mov
ljmp
sub
cmp
shr
aad
jo
adc
roll
sub
xor
repz
mov
ret
aas
pop
lret
icebp
popf
ja
pop
mov
into
mov
mov
out
pop
pop
mov
test
xchg
jl
arpl
cltd
stc
xchg
dec
movsl
rcrb
push
adc
scas
push
sub
nop
pop
into
and
cmp
filds
not
sub
movsl
and
stos
sti
addb
dec
adc
xchg
cmp
scas
push
push
xchg
push
jge
cmp
lcall
push
ret
rcll
cld
add
dec
out
push
or
add
sub
aaa
mov
iret
push
cmp
xor
sbb
xor
stc
jecxz
dec
fcoms
ret
cmp
jl
and
xor
jp
push
mov
jne
jmp
mov
rcrb
rcll
xchg
enter
xor
dec
popw
xor
dec
cltd
mov
xchg
push
into
or
out
fnstsw
mov
shlb
add
imul
pop
inc
test
push
jnp
mulb
push
add
sbb
leave
cli
in
and
repnz
in
dec
mov
stos
pushf
and
and
lahf
mov
adc
cmc
insl
std
sbb
ficoms
in
lcall
sub
and
dec
mov
adc
push
mov
inc
push
push
jns
push
mov
sub
cmp
aam
lret
shll
push
fcmovb
lods
add
and
ja
lock
adc
call
test
ss
je
mov
pop
js
in
out
orl
fimuls
and
js
fwait
sub
push
mov
add
inc
mov
push
loopne
xor
xchg
cld
pop
test
xchg
xchg
mov
jbe
add
ss
lds
inc
add
xor
repnz
xchg
xchg
push
push
pop
xor
popa
or
lret
pop
inc
rol
subb
rcll
fistl
popa
dec
not
dec
movsb
je
mov
and
inc
lea
push
stos
mov
addl
fcmovbe
xchg
ds
mov
jns
cltd
pop
push
daa
pop
ret
lods
mov
lods
sub
sub
add
aaa
pop
xor
clc
movsb
iret
or
mov
push
jnp
pop
pop
push
lret
xchg
inc
stos
jp
and
sub
or
cmpb
out
dec
xchg
lcall
sub
cmp
and
pop
fiadds
adc
std
imul
fdivrl
shr
pushl
or
fs
xor
mov
in
adc
int3
leave
jl
xor
fwait
and
or
cmp
xchg
enter
xor
sbb
int
mov
bound
cmp
enter
push
xchg
and
out
clc
scas
push
pop
pop
int3
xor
iret
dec
hlt
cmp
cmpsl
adc
xchg
testb
add
out
outsb
popa
test
cli
sub
adc
cmpsb
xchg
insb
and
rcll
lea
je
xor
fisubrl
jne
scas
inc
adc
movsl
cs
inc
std
notb
pop
adc
arpl
insl
jo
mov
and
loop
fcmovne
push
dec
ja
ljmp
or
ret
jns
mov
sti
inc
mov
das
lret
mov
stc
pop
nop
test
add
mov
push
inc
in
repz
pcmpgtw
fidivrl
mov
out
test
xor
aas
lock
dec
ret
loop
mov
rorb
and
fwait
jmp
push
into
add
xchg
mov
xchg
outsl
mov
insb
or
mov
pop
sahf
in
fmull
mov
lods
pop
int3
xorl
mov
jge
xor
mov
fdivrl
movsl
lea
out
adc
push
xchg
push
lea
pop
into
xchg
insl
scas
in
push
mov
lods
cmp
xlat
dec
out
sub
stos
insl
inc
lret
or
add
test
out
rcrb
cmp
mov
sub
daa
push
sti
enter
ja
in
dec
or
out
js
sub
pop
fistpl
dec
enter
outsb
mov
mov
loope
loop
xlat
int
in
std
or
outsl
daa
push
mov
pop
mov
ds
mov
jmp
leave
adc
std
das
insl
add
xlat
inc
pusha
aas
aad
jge
scas
in
scas
or
fcoms
andl
nop
movsl
les
mov
mov
adc
pop
rolb
pop
xchg
push
movsb
or
in
roll
rcll
mov
cmpsb
mov
push
sbb
pop
sub
fstl
push
inc
fwait
iret
dec
in
add
push
andb
xchg
popa
fsubrs
dec
je
in
mov
ja
cmp
mov
out
add
mov
idivb
ds
in
pop
xchg
pop
add
sbb
push
or
add
or
sub
int3
fs
dec
mov
mov
imul
cmp
imul
jg
jbe
in
jl
fldt
popf
lods
insl
sub
mov
loop
inc
dec
and
repz
inc
push
arpl
test
daa
std
sbb
ret
cmp
mov
or
lods
mov
mov
shll
out
mov
insl
lds
repz
bound
mov
lret
psrld
cli
bnd
lock
lods
cmp
ss
popf
out
orl
lods
inc
sub
sub
pop
stc
cmp
cmc
pusha
out
add
pop
cltd
nop
and
ficompl
lds
sub
stos
fdivrl
pushf
ss
push
add
aas
sub
and
mov
mov
and
outsl
xchg
xchg
insb
inc
mov
sub
add
or
test
jnp
incl
mov
movsb
andl
adc
push
lret
scas
sbb
jge
dec
add
sbb
icebp
cmp
cmp
lcall
pop
ljmp
fcompl
jbe
jge
stc
pop
aaa
out
xchg
out
test
in
stos
ja
mov
cmpsl
push
sbb
movsl
pop
adc
pop
movsb
cwtl
push
adc
in
jp
jns
mov
push
sub
negl
mov
aad
pop
or
adc
cmpsl
mov
cltd
idiv
out
rcrl
outsl
xchg
xchg
scas
lret
mov
ss
sbb
cmpsb
jbe
jge,pt
scas
adc
push
jns
cmpsb
mov
cmp
mov
dec
or
arpl
lods
mov
add
rcl
mov
mov
jae
jbe
push
aad
jne
lcall
push
xor
sbb
out
xor
shrb
pop
cmp
sbb
push
in
mov
imul
test
in
xchg
mov
loop
and
xchg
scas
in
aaa
andl
fdivrl
leave
pop
jmp
mov
negb
jecxz
clc
es
jl
testl
xor
insb
xchg
xor
popa
outsb
adc
pop
push
stos
popa
jle
jp
adc
subb
and
or
insb
jp
fldl
mov
mov
sar
repz
negl
aad
enter
cmp
fcoml
push
imul
rcrb
cmp
mov
dec
scas
adcb
mov
adc
cmpsl
lret
xchg
push
xchg
lods
mov
ja
cmp
nop
jle
iret
sub
xchg
int
imul
lahf
mov
pop
pop
jne
stos
out
mov
pop
mov
jns
cmpsb
xchg
enter
pushf
cmc
insb
jge
cmp
sti
lahf
clc
sbb
lret
sbb
or
andb
xlat
stos
dec
lret
test
rorl
rcrb
jl
arpl
sbb
mov
push
int
cwtl
cld
dec
out
andb
jp
jae
mov
fcomps
jl
test
jb
nop
jo
add
shl
imul
es
lea
jns
inc
push
add
and
cltd
movsl
lret
ret
test
jo
lods
mov
jno
lahf
adc
sub
js
mov
loope
lret
jo
cmc
inc
xchg
mov
pop
pop
test
popa
mov
fidivl
jae
fdiv
hlt
push
push
insl
mov
push
dec
sbb
jl
mov
sub
pop
add
into
inc
or
adc
and
push
repnz
push
cltd
sbb
jne
out
or
dec
xor
nop
inc
or
mov
jl
mov
mov
cld
mov
test
jae
es
outsb
fmuls
sbb
ds
test
xlat
mov
xchg
xor
clc
arpl
sub
arpl
scas
jmp
dec
addb
enter
xchg
jl
es
pop
cltd
and
iret
mov
cmp
lods
pop
es
inc
cmp
xor
jmp
subb
or
shll
cmp
insl
shrl
pushf
mov
push
in
mov
jmp
cmpb
mov
push
pusha
sti
mov
sbb
add
cmpsb
in
mov
adc
lret
sub
mov
adc
cmp
in
push
push
scas
pop
push
orb
jne
in
xor
or
ss
clc
popa
cmp
in
xchg
icebp
sbb
popf
int3
jo
adc
rol
cmp
adc
jmp
test
fldenv
mov
dec
ret
xchg
into
pop
mov
push
pusha
mov
and
mov
mov
or
or
sub
inc
jp
add
aaa
sub
inc
fldl
mov
push
inc
adc
mov
vmread
adc
push
sbb
xor
pop
mov
mov
jmp
push
dec
cmp
scas
mov
sti
dec
rorl
cs
xor
aas
sbb
inc
insl
std
dec
mov
sbb
in
imul
sbb
loop
or
repnz
push
popl
mov
ds
fdivp
push
mov
push
adc
jp
test
std
add
test
iret
xchg
xchg
add
mov
enter
inc
aam
gs
and
mov
mov
or
orb
and
pop
sub
sbb
jnp
mov
adc
cmp
lea
mov
sahf
mov
pop
add
jecxz
movsb
dec
icebp
js
mov
testl
mov
jmp
dec
sub
mov
push
xchg
stc
fnstsw
lds
test
imul
and
repnz
sbb
inc
cmc
mov
xor
push
mov
xchg
add
jecxz
pop
fcomps
test
adc
das
lods
push
out
ffreep
jo
aad
xchg
out
cmp
or
loopne
aad
aaa
and
mov
dec
pop
addl
xchg
add
inc
and
leave
and
arpl
outsb
insl
repz
aad
sti
adc
repnz
jae
adc
andb
push
push
or
and
test
idivb
adc
xor
inc
lea
int3
loope
push
sahf
xchg
xchg
adc
je
jmp
movsb
mov
mov
adc
mov
add
aad
andb
movsb
cmp
mov
aas
pop
pop
test
sub
pop
cmp
clc
xchg
jle
jae
je
leave
aam
loopne
lods
inc
outsb
insl
xor
outsb
sub
leave
add
arpl
fs
clc
fdivrs
dec
xchg
insl
fmull
mov
insb
mov
in
imul
mov
shll
or
pop
iret
xor
adc
push
enter
inc
lahf
adc
xor
push
fadds
mov
sbb
inc
leave
push
xchg
xchg
or
ja
into
rcrl
mov
repz
adc
mov
test
lret
xchg
outsl
push
xor
pop
out
push
dec
pushf
xlat
sbbb
push
mov
int
jae
aas
pop
sbb
fisttpll
ficomps
sbb
daa
popf
jmp
daa
sbb
jl
push
sbb
hlt
dec
pop
and
sub
scas
popa
out
jle
push
scas
mov
orb
mov
xlat
stc
dec
and
pop
pop
enter
jbe
mov
test
cmpsb
jle
test
dec
push
push
fidivrl
sahf
jmp
and
xorl
cmp
in
xor
lcall
lods
xor
xlat
aaa
bound
shrl
jg
dec
nop
iret
fdivrs
addr16
pop
pop
test
dec
aas
and
pcmpeqd
jbe
jbe
orl
cmp
andl
and
repnz
jg
fwait
arpl
mov
sbb
addr16
cwtl
pop
ret
xchg
xchg
pop
cmp
rcr
and
ds
in
lock
out
sbb
cmp
cmp
mov
jle
or
rolb
aam
mov
scas
pop
loope
and
clc
enter
lret
push
ja
inc
testb
inc
fstpl
pop
aas
ffree
pushf
arpl
cmpl
lods
inc
dec
ds
xor
insl
pop
or
mov
cmp
jg
scas
gs
and
push
in
mov
push
and
sbbl
mov
in
lcall
divb
push
out
rcll
pop
and
call
adc
popa
adc
jg
roll
ficompl
xchg
mov
pop
mov
icebp
push
mov
pop
rcl
pop
leave
scas
cmp
in
cwtl
aad
mov
add
aam
repnz
and
inc
test
xor
adcl
ja
push
inc
jb
scas
dec
add
sti
sarl
lcall
call
pop
outsl
iret
jmp
xchg
inc
add
das
mov
in
pop
pop
pop
add
ret
icebp
out
jl
ror
mull
jbe
outsl
and
adc
and
stc
bnd
mov
dec
clc
lea
cwtl
fmuls
mov
xor
push
jg
mov
mov
push
push
mov
dec
aad
fldenv
out
aam
std
jmp
mov
fs
push
xor
sahf
fs
mov
push
ret
jnp
subl
or
std
adc
pushf
mov
mov
and
xor
lea
sbb
inc
mov
rcll
rclb
popf
inc
shr
testb
sahf
push
test
xor
fcoml
mov
lret
jae
aaa
ss
xor
aad
ret
mov
lahf
sahf
sahf
je
mov
fldz
and
inc
xchg
mov
inc
mov
xchg
insl
sbb
call
clc
push
out
lds
cmp
add
sahf
das
insl
mov
mov
and
xchg
pop
lret
fstps
xchg
testb
scas
mov
lahf
into
push
fsubrl
sbb
jb
dec
in
lods
pop
push
dec
mov
into
mov
mov
lods
pusha
pop
frstor
ja
out
mov
scas
sbb
xchg
in
mov
adc
jb
jg
in
sbb
inc
jge
add
pop
push
in
pcmpeqd
imul
pushf
stos
sub
jbe
sti
xor
fdivl
mov
test
prefetch
or
xchg
test
adcl
mov
pop
arpl
cmp
mov
jge
jne
pop
cmc
mov
stos
pop
pop
cmp
cmpb
add
lret
sahf
sbb
add
pushf
push
fs
test
in
aam
xchg
and
sbb
repnz
inc
push
mov
in
pop
xchg
arpl
pop
inc
ja
data16
sbb
cmp
out
mov
je
andl
dec
push
mov
pushf
mov
dec
jmp
es
mov
rolb
inc
jb
adc
ret
lods
adc
movsl
push
jns
jae
push
cwtl
test
pushf
push
jo
pop
fidivrs
or
fnsave
mov
shlb
sbb
andb
jb
stc
leave
inc
ret
push
cld
insl
lret
sbb
fs
pop
loop
mov
jb
or
cmc
bound
push
cmp
dec
push
shlb
insl
or
inc
aad
inc
fdivl
idiv
jecxz
lret
rolb
mov
inc
pop
pop
lock
jnp
xor
jb
pop
xor
imul
test
fisttpll
out
cmovs
sbb
leave
pop
daa
jae
cmp
xor
push
mov
test
inc
rcrb
insl
or
jnp
repnz
pushf
mov
cmp
negl
inc
jnp
cmpb
je
mov
mov
ja
fwait
rcrb
pop
lea
dec
sahf
jge
iret
loopne
roll
adc
aas
mov
xchg
lret
mov
stos
xlat
test
push
das
pusha
leave
into
mov
imul
sbb
mov
or
call
mov
stos
rclb
xor
mov
int3
outsb
stc
sub
jns
inc
jb
xchg
in
adc
stos
movsl
and
cmp
testb
ss
std
lds
fnstcw
cmp
or
int3
lock
adc
js
lea
push
shrb
cs
mov
cmp
cld
cwtl
aaa
gs
mov
or
dec
loope
xor
push
jae
cmpsb
mov
mov
add
pop
outsb
mov
push
cmp
pop
fcompl
xorl
dec
js
rcrb
mov
pop
adc
xor
jbe
lret
pop
mov
xchg
fwait
mov
cli
push
mov
sub
stos
shufps
dec
adc
cmp
sub
test
pop
sbb
mov
adc
ja
cmc
pop
mov
xchg
fs
test
mov
mov
push
jmp
inc
xor
or
cmp
lahf
and
in
pop
or
cmp
mov
xorl
xchg
jg
cmp
out
gs
and
and
inc
xor
mov
lret
imul
jno
jp
mov
pop
nop
jge
lahf
mov
cmc
neg
mov
adc
push
mulb
mov
jno
adc
dec
loopne
nop
adc
out
inc
mov
mov
or
sub
and
mov
and
push
cmpsb
pop
push
dec
in
lods
shrl
jecxz
mov
xorb
cmp
and
dec
movsl
stos
loop
pop
repz
push
cwtl
or
cmp
or
xor
cmp
jne
sbb
loop
dec
push
pushf
lds
jne
ja
stos
add
pop
xchg
sub
cmpsb
mov
ret
xchg
sahf
jnp
fisubrs
push
shll
dec
push
xor
ret
je
out
adc
cmp
cmp
adc
or
scas
cs
aam
lret
mov
jge
insl
rorb
stos
lods
stc
add
iret
xchg
incl
fsubl
pop
dec
mov
xchg
jmp
imul
xorl
inc
xchg
movb
or
jns
mov
dec
cld
mov
shrl
sub
ljmp
xchg
mov
push
enter
fs
inc
fwait
outsb
dec
inc
neg
sbbl
sub
fcmovbe
pop
stc
xchg
mov
add
xor
ret
faddp
lock
movb
cmp
push
or
inc
adc
jge
mov
test
cmp
mov
insb
mov
addr16
cmp
sbb
hlt
push
push
sub
dec
dec
inc
lods
test
fmuls
adc
imul
jmp
ret
jg
mov
lret
fsts
testl
xor
movsb
scas
loope
fs
enter
xchg
lds
inc
dec
add
icebp
cmp
les
xchg
cli
fldcw
dec
mov
lods
mov
clc
lds
jge
cmpsl
loopne
pop
cmpsl
xchg
bound
iret
sub
mov
clc
cmpsb
daa
lods
lret
sbb
mov
inc
pusha
cmp
cmp
add
adc
add
jmp
or
rclb
fucomi
scas
ds
push
dec
loopne
pusha
aas
mov
adc
jb
jmp
loop
xchg
je
shlb
add
call
adc
leave
fwait
lock
orl
or
icebp
pop
sbb
adc
xor
add
imul
lret
mov
sub
pop
mov
inc
aad
inc
pop
iret
or
cmc
loopne
xchg
jp
sahf
sub
mov
mov
stc
inc
mov
ror
xlat
daa
push
cwtl
push
call
mov
lods
push
jne
test
mov
cmpsl
mov
inc
hlt
out
mov
pop
ret
call
dec
sbb
dec
sub
or
sbb
repz
out
shlb
jnp
mov
lea
ret
push
pop
inc
push
push
mov
sbb
lret
sahf
adc
inc
dec
jne
fs
or
lret
arpl
leave
sar
lahf
int3
rcr
cmp
jge
fsub
mov
jp
pushf
pop
mov
mov
iret
lcall
xchg
fidivs
mov
lods
cmpxchg
add
push
sbb
pop
xlat
fldz
loop
pop
push
addr16
out
push
lods
sub
adc
jbe
jge
gs
jl
iret
pop
orb
fwait
jbe
hlt
add
stos
icebp
adc
cmpsl
adc
ja
pop
jecxz
bound
jmp
xor
repz
add
inc
jne
test
mov
movsl
ficoms
dec
fstl
sti
out
xchg
mov
in
movsb
hlt
negb
pop
push
xor
sbb
sar
push
mov
sub
or
and
pop
cld
push
mov
add
mov
push
or
jecxz
pushl
mov
in
sbb
ffree
and
out
adc
or
and
sbb
add
sbb
pop
daa
pop
pop
add
mov
xchg
loopne
pop
icebp
mov
mov
ret
push
into
add
cmp
pushf
rep
in
aad
sbb
add
mov
xchg
in
pusha
sub
cli
dec
loope
pop
lahf
sub
mov
rcrb
mov
repnz
jp
sbb
rcll
movsb
iret
or
mov
shl
jnp
xchg
int
or
push
or
jle
push
dec
sub
ja
push
scas
cmpb
cs
das
arpl
pusha
inc
add
xchg
aaa
sub
jmp
fs
stc
mov
cld
sbb
mov
dec
cmp
daa
lock
mov
push
sbb
mov
incb
pushf
cmp
and
js
lds
or
dec
or
stos
cmp
call
or
ljmp
iret
push
add
xchg
inc
pop
scas
imull
add
sbb
loopne
push
lods
dec
out
fcoml
cmp
pushf
cltd
xchg
pop
add
outsb
int3
mov
push
xchg
adc
mov
pop
add
mov
adc
aas
fdivrs
sub
pop
push
shr
jnp
fdivl
sub
ret
inc
out
and
mov
int
outsl
cmp
xor
insb
cmpsb
fxch
daa
cli
xchg
pop
push
adc
xchg
inc
cmp
push
mov
mov
xchg
mov
xor
jp
lds
std
hlt
or
xor
shll
sbb
mov
int
dec
pop
and
dec
xlat
inc
shll
iret
adc
xchg
shrb
inc
pop
int3
push
lea
shll
lahf
xlat
lret
mov
test
ret
add
jb
int
sub
and
int
lods
dec
imul
or
pop
cmp
adc
or
pop
xchg
sbb
lock
orb
aad
int3
ds
sarl
and
xchg
inc
mov
roll
and
clc
mov
push
cld
test
loop
fsubrl
in
cmpsb
or
jecxz
sbb
jmp
mov
stos
daa
jo
sbb
test
add
xchg
fisubrs
or
pop
and
enter
or
sbb
mov
shll
frstor
jne
pop
rcrl
jns
ss
adc
ret
icebp
dec
data16
push
hlt
call
jno
lds
fimull
loopne
imull
out
cld
jg
out
or
nop
lods
in
sbbl
dec
or
push
adc
mov
mov
lret
or
cwtl
int
aas
leave
call
jnp
add
cmpsl
push
adc
loope
fnstenv
adc
popf
aad
mov
movsb
push
and
add
or
dec
shll
inc
cmpl
xor
rcrl
ss
sub
cmp
jne
dec
xlat
and
add
push
inc
sub
ja
xchg
push
cmp
mov
jmp
cmpsb
movsb
lods
inc
rcll
pop
into
fists
inc
mov
shrb
data16
inc
aad
mov
xchg
adc
hlt
mov
mov
daa
jg
adc
sbb
pusha
push
cs
cmp
les
sub
xchg
push
lods
push
insl
nop
sub
aam
adcb
iret
test
push
hlt
call
std
xchg
aas
shll
mov
cmc
scas
enter
lret
test
fistpll
xchg
push
pushf
mov
jp
test
push
sbb
xchg
mov
repnz
hlt
xchg
pop
xchg
insb
add
rorb
jbe
out
push
xor
addr16
pop
movsb
fbstp
in
cmp
dec
cltd
and
sahf
pushf
icebp
cli
xchg
scas
sbbl
cli
dec
jno
mov
inc
ds
pusha
add
gs
jp
inc
pop
push
xor
pushf
inc
ret
sbb
scas
clc
pop
cs
loopne
ror
call
fdivr
iret
push
inc
jbe
lods
cmp
pop
sarl
loope
add
inc
mulb
xor
xchg
jg
inc
popf
mov
jp
movsb
jbe
jne
cli
xor
or
xor
jecxz
cmp
mov
loope
sub
and
xchg
jl
aad
test
dec
push
sbb
out
movsl
clc
xlat
sbb
adc
add
xchg
mov
rcrb
ret
fiaddl
int3
leave
int3
mov
pop
push
in
movsb
leave
cli
sub
es
sub
mov
int3
add
adc
adc
and
sbb
lock
add
jle
outsb
xor
cmpsl
pop
in
mov
cmc
ret
fsubl
jmp
rcll
jae
xor
lds
out
xchg
xchg
pusha
loop,pt
add
pop
and
les
mov
pop
loope
fisttps
lock
mov
jecxz
or
jo
je
in
in
and
and
xor
mov
mov
lret
ja
push
loop
gs
jae
pushf
sub
test
not
leave
repnz
jno
jnp
pop
jl
lds
xlat
scas
cli
fcoms
movsb
loop
dec
mov
int3
jb
adc
inc
stos
inc
hlt
out
es
sbb
add
out
mov
jp
xor
mov
in
or
pop
lds
jno
and
dec
shlb
inc
jmp
fisttpl
or
inc
and
test
xchg
add
cmpsl
clc
sbb
mov
popa
lret
adc
lcall
mov
xchg
jnp
xor
and
jle
test
push
or
mov
xchg
loopne
xchg
out
sub
or
xor
push
or
add
or
imulb
loopne
pop
push
out
xlat
jle
mov
or
mov
call
aad
xor
movsb
mov
pop
cmp
out
or
push
jne
cmpsb
js
push
movsb
mov
mov
push
mov
mov
sbb
stos
cmpl
or
adc
les
shrb
mov
pop
mov
lods
popf
dec
inc
or
jbe
xchg
repz
mov
dec
ljmp
in
cli
out
inc
jg
andl
adc
shrb
mov
mov
jmp
scas
mov
jle
test
dec
dec
nop
jbe
xor
ljmp
sbb
orl
add
mov
add
outsb
jb
int3
cld
mov
mov
sbb
addr16
mov
inc
xchg
xchg
jmp
sub
sbb
jmp
call
push
or
movsl
xchg
mov
loop
ret
push
icebp
lcall
mov
cmp
pop
sub
test
pusha
xchg
xchg
jmp
mov
cwtl
insl
xchg
dec
push
stos
arpl
add
dec
or
fbld
lret
aam
push
jb
pop
sti
leave
xorl
or
aas
dec
cli
bound
clc
add
inc
cmp
test
mov
mov
pop
lret
movsl
movsl
mov
rcrb
add
mov
popf
dec
lods
xchg
or
aad
xor
xor
and
inc
out
dec
jge
inc
sub
push
xor
xchg
je
fsubl
call
mov
pop
jbe
jnp
mov
cltd
loopne
jmp
cwtl
pop
or
sbb
sbb
and
mov
ret
fs
xor
xchg
and
cltd
mov
xorb
shl
gs
pop
inc
mov
sub
mov
sbb
xor
push
mov
cmp
jmp
in
mov
popf
iret
shr
inc
ljmp
mov
subb
cltd
adcl
push
push
les
sbb
loopne
adc
in
mov
pop
add
inc
xchg
sbb
cmp
mov
out
mov
sub
and
pop
outsl
push
cld
repz
test
adc
into
mov
pop
test
daa
inc
xchg
sbb
inc
sbb
cmp
aad
pushf
mov
xchg
xchg
sbb
push
rclb
int
fimull
mov
inc
add
insb
int3
mov
bound
sub
pop
push
in
push
sub
in
jbe
jl
jns
lods
mov
mov
push
aaa
cmp
fimuls
jecxz
jp
xor
pushf
jne
sti
dec
scas
xchg
mov
inc
add
mov
mov
repz
push
and
hlt
xor
sub
mov
and
mov
mov
lods
ds
in
leave
and
roll
cmp
sub
addr16
xor
fdivl
sbb
js
xchg
sarl
dec
icebp
mov
aas
cmpl
stc
and
fstps
xor
addb
cmpsl
or
cmp
sub
ret
aad
sbbb
push
or
aad
cs
fwait
mov
leave
jl
push
es
cld
push
adc
clc
mov
jae
mov
test
and
inc
xor
or
out
sub
std
sbb
aam
add
pop
adc
xor
sbb
or
movsb
xor
je
xor
pop
out
fidivrl
into
cs
shlb
mov
and
gs
push
lock
ss
jbe
in
out
loop
sbb
adc
mov
push
pop
inc
insb
sbb
mov
push
mov
push
notl
adc
insl
dec
mov
pop
int
mov
inc
call
jl
cmp
ja
push
add
pop
insl
sarl
push
mov
dec
out
and
arpl
sar
sub
lcall
shrl
negl
jg
adc
ja
adc
popa
pop
lea
inc
mov
pop
mov
pop
push
test
ret
or
xchg
lods
dec
das
ja
pop
pusha
fs
push
mov
and
mov
push
adc
dec
fidivrs
lods
dec
or
mov
pop
and
xor
mov
data16
xor
xchg
in
mov
cmp
sub
hlt
cmp
into
push
cwtl
shll
pop
and
push
pop
int3
sarb
repz
mov
mov
or
mov
fs
in
outsb
sbb
test
mov
std
and
sbbb
aaa
xlat
push
sbbl
mov
daa
mov
or
sub
sbb
in
inc
adc
dec
dec
inc
jnp
lahf
sbb
stos
cld
inc
push
sti
pusha
jb
xchg
pusha
cmp
pop
mov
cmpsb
clc
jnp
xor
gs
shlb
test
cmc
mov
nop
cmp
inc
pushf
pushf
pop
loope
and
ficoms
pusha
inc
xchg
test
cmpsl
scas
test
lds
out
lcall
jnp
test
adc
and
incb
dec
ss
lock
pop
jl
fcmovnbe
insb
and
movsb
sarl
xchg
and
xor
dec
ja
mov
outsb
xchg
test
add
std
ds
mov
iret
jbe
call
add
xor
sbb
cmp
pop
mov
pop
lock
scas
ljmp
lock
mov
sbb
adc
jne
test
in
daa
xacquire
sbb
cmp
fnsave
sbb
or
imul
es
jnp
ficoml
in
dec
dec
pushf
cmpsl
lock
dec
sub
scas
mov
rclb
repz
out
sbb
adc
fstps
xchg
sahf
out
cmp
dec
cmp
int3
aaa
dec
cmp
fisubrs
mov
adc
push
jno
or
sbb
mov
out
inc
imul
sub
stos
jae
cmp
std
jp
sub
cld
adc
movsbl
or
mov
add
shl
mov
rolb
jb
stos
dec
addb
sub
out
addr16
mov
cld
cld
dec
xchg
lods
je
sti
and
jge
dec
cmpsb
sub
mov
add
stos
jne
mov
imul
adc
adc
mov
dec
xor
test
mov
mov
pop
mov
mov
cmpsl
and
sub
jecxz
fisttps
inc
pop
iret
dec
push
loope
mov
in
xor
jmp
pop
leave
mov
int3
fisubrl
jnp
ds
xlat
js
je
xchg
out
add
out
dec
mov
mov
adc
test
fstp
or
lret
mov
xchg
insl
popa
jg
cwtl
lcall
xorb
fdivrp
es
xor
adc
adc
jb
cli
outsl
mov
inc
in
xor
inc
mov
xlat
sub
or
adc
xchg
gs
cmp
int3
mov
adc
orl
dec
push
fs
ljmp
mov
jb
rcrl
mov
xor
decl
sub
adc
xchg
jae,pt
movsb
stos
fildl
jecxz
jae
dec
adc
lods
pusha
pop
inc
stc
sub
mov
push
insb
movsb
inc
imul
jno
in
push
mov
jmp
loope
int
cmp
lret
jle
subb
mov
mov
adc
lods
nop
mov
mov
leave
sti
xchg
stc
pop
rcrl
sbb
sbb
jl
push
aaa
inc
int
bnd
xchg
xor
pop
push
push
add
lods
shl
movsl
in
xchg
fldcw
or
idivb
mov
sbb
jae
ljmp
jmp
xchg
test
addr16
std
push
cmp
stos
test
lods
cltd
xchg
jmp
add
mov
loope
adc
pop
and
pop
xor
xchg
addr16
or
inc
sbb
pop
mov
mov
push
aam
fldenv
fists
arpl
cmpsl
into
add
pop
inc
adc
sahf
mov
or
dec
fldcw
pop
cltd
inc
in
xor
jno
rclb
xchg
cs
aam
addr16
mov
movb
sub
cld
mov
xchg
mov
and
add
lret
orb
dec
scas
into
mov
addl
mov
mov
cmc
pushl
out
add
sbb
test
mov
inc
nop
mov
test
sbb
xorl
pop
dec
mov
jmp
pop
insl
out
scas
add
pushf
bound
xor
jle
int
fsts
pop
and
test
arpl
and
push
pop
inc
push
pop
jno
movsb
mov
call
mov
jae
and
fimuls
arpl
mov
lret
popf
vpsllq
out
mov
pop
xor
andb
ljmp
mov
or
loope
cmc
dec
icebp
mov
xor
inc
pop
fwait
dec
mov
fucomi
sbb
push
int
int3
or
fisubrl
sbb
insl
mov
imul
fldl
iret
icebp
sarb
sbb
inc
jo
popa
xor
in
in
jns
roll
stos
lret
cmp
out
add
shl
out
fscale
shl
mov
daa
push
repnz
lret
mov
mov
shl
inc
fnsave
sub
std
pop
loope
mov
mov
cmp
push
pop
ret
imul
pop
repnz
inc
mov
jo
iret
cltd
push
xchg
push
cmpl
das
fnstcw
lahf
ret
xor
jb
or
jb
pushf
and
sbb
fmuls
lcall
mov
int3
cmpsb
xor
xchg
cltd
scas
addr16
das
fsubrs
adc
sub
sbb
mov
inc
mov
mov
loope
or
int
mov
cmp
rorl
notb
cmpsb
cmpsl
ds
stos
add
test
addr16
lods
clc
mov
xor
inc
nop
push
ret
stos
xlat
adc
xor
addr16
test
cmp
mov
popa
mov
cmpsl
gs
mov
dec
pusha
das
lahf
inc
push
sub
fs
or
pop
xor
sbbl
push
inc
aam
sbb
ja
jge
aaa
mov
or
push
idivl
dec
sub
sbbb
pop
faddl
sbb
jge
push
fnsave
arpl
sbb
and
lods
lret
ss
or
ffreep
adc
insb
sbb
mov
mov
scas
sti
mov
jmp
cld
sub
cmp
jae
sub
stc
int
cmp
lcall
or
shr
push
int
rcl
pop
pop
aas
adc
jmp
lret
aad
jmp
in
outsl
mov
cmp
cmp
das
adc
daa
repnz
mov
fucomip
lds
sbb
clc
fcmove
mov
jns
jns
gs
lcall
or
cmp
bound
insl
and
xor
mov
add
test
cs
or
dec
mov
and
mov
aad
pop
sbb
mov
adc
jge
mov
in
push
or
mov
sbb
dec
push
push
sub
jb
je
lahf
pop
call
xor
adc
arpl
and
push
sub
add
inc
pusha
push
mov
rcr
sarb
or
pop
lret
loop
jne
jo
lcall
std
xor
dec
inc
jmp
fbld
sub
mov
pop
por
add
or
ds
int
in
repz
sqrtps
mov
and
and
mov
icebp
scas
mov
sub
sti
stos
cmp
jb
insl
pop
lock
mov
movb
aam
jb
adc
xchg
ficoml
push
mov
push
xchg
scas
pop
scas
fmulp
mov
inc
mov
pop
xchg
mov
push
mov
sub
push
insl
jne
or
sbb
and
cmp
or
and
xor
testb
xchg
add
fs
imul
mov
pop
fidivs
push
fstps
outsb
iret
sbbl
and
into
cmp
out
pop
movsl
jne
mov
xchg
cmpsl
cmp
lods
push
jmp
in
pop
sbb
cltd
shll
xor
loope
fdivrl
push
xchg
jno
pop
push
test
sbb
pushf
shll
pop
jle
pop
mov
mov
ss
cmpl
ret
mov
repnz
add
popa
sbb
pop
pop
jb
mov
andb
xor
pop
sbbb
movsl
sub
mov
mov
shl
cmp
movsb
pushf
scas
shr
fdivp
popa
int
cmp
and
fldl
mov
cmpsl
sbb
aaa
inc
movsb
fisubrs
test
int
dec
push
call
jb
je
sarl
lds
jle
jg
ljmp
int
ret
ja
rcrl
sbb
push
lds
push
inc
push
shl
nop
or
or
hlt
aam
pop
cli
jno
pushf
in
push
pusha
mov
fimull
pop
sub
iret
je
bswap
inc
fs
loop
int
loop
sbb
cmpb
xchg
push
mov
shl
insl
inc
mov
push
and
sub
mov
pop
xor
loop
inc
cmp
insb
js
xor
or
sub
ja
cwtl
inc
in
lds
push
add
xchg
jmp
addr16
push
xchg
push
clc
test
pop
fisttpl
push
insb
stc
xchg
lods
test
ficoms
adc
std
add
mov
dec
cmp
ds
pop
mov
repz
cltd
out
aas
enter
mov
pop
xchg
cmp
enter
testb
inc
jp
scas
push
lods
add
push
shl
mov
or
xchg
movsl
rcr
ret
xor
mov
inc
in
pop
lea
inc
xor
push
jecxz
jge
les
stos
or
fwait
mov
xor
cs
sbb
xor
cmpsl
push
jl
xor
test
mov
fidivrl
sub
pop
adc
dec
pop
shlb
and
sub
sbb
mov
les
add
inc
addb
repz
xchg
enter
pop
shrl
das
cs
int
loope
loope
fs
cmp
adc
into
pop
ret
clc
popf
cmp
cltd
dec
jbe
lcall
push
imul
and
das
loopne
outsl
pop
mov
sbbb
loope
or
daa
and
push
sub
cmc
mov
cmpsb
out
mov
outsb
sbb
push
call
or
fs
push
leave
add
xchg
push
sub
aas
jl
add
sarl
mov
or
xor
jge
jle
pusha
or
out
nop
rcll
insl
and
dec
in
lods
stos
xchg
add
cwtl
cmp
inc
cmpsl
test
push
imul
dec
mov
icebp
xor
out
popl
fidivrs
jg
xor
inc
xor
xchg
sbb
cmp
mov
jbe
and
test
jle
or
add
mov
adc
adc
enter
data16
jp
in
inc
int3
int
out
jmp
xchg
dec
sti
pop
mov
pop
mov
jb
adc
mov
pop
popf
jb
xor
lahf
aad
shll
and
loope
adc
or
test
sar
sbb
jmp
mov
jo
iret
and
jecxz
mov
addl
cwtl
xor
xor
push
cs
inc
mov
addl
ret
xchg
push
out
ja
scas
sbb
mov
jbe
cmpsl
or
dec
jb
cmp
mov
scas
fadds
call
imul
decl
decb
jb
dec
neg
call
or
mov
cmpsb
jge
es
insb
aaa
xchg
adc
lret
insl
xor
cwtl
or
pop
outsb
jmp
add
in
or
loopne
mov
int3
jmp
ljmp
into
sub
sti
scas
ljmp
inc
fadds
xor
stos
rcrl
insb
or
lcall
push
scas
and
push
jo
and
xor
push
xor
cmp
push
inc
outsl
add
sbbb
and
rcll
arpl
xor
cmc
mov
aas
pop
or
les
inc
inc
fidivs
or
cmp
into
scas
les
mov
jbe
es
test
ret
mov
div
loope
or
or
sbb
and
mov
mov
fstpt
xor
jp
daa
fs
mov
xor
movsb
cmp
decb
in
nop
nop
xorb
jmp
xchg
inc
pop
xchg
push
inc
mov
into
mov
mov
imul
xor
clc
cmp
mov
mov
stos
in
and
pop
aad
outsl
xchg
fldenv
mov
mov
sti
jg
cmp
cmc
jnp
leave
pop
icebp
fsubrl
xor
mov
test
lock
bound
xchg
aas
jae
in
mov
mov
inc
bswap
sbb
mov
stc
sahf
daa
fcoms
xor
scas
lret
nop
adc
mov
pop
out
nop
test
cmp
jbe
add
imul
jne
sbb
fdivrp
dec
mov
imul
shrb
testb
loopne
fwait
xchg
stc
mov
push
dec
fsubp
jne
mov
sti
sbb
out
sub
adcb
dec
add
es
sbb
sti
fnstsw
scas
pop
std
out
jp
xor
xchg
stos
neg
adcl
adc
rorl
movsl
cmpsl
rcrb
cmp
pop
or
push
mov
xchg
xchg
les
pop
jnp
jns
mov
mov
cmp
je
xchg
inc
or
mov
dec
inc
mov
lret
int3
and
rcrb
test
cld
dec
sub
loopne
cli
mov
cmp
or
scas
mov
in
or
or
mov
out
jge
lds
dec
cmpsb
aaa
and
je
or
test
mov
lock
out
push
or
call
jne
in
add
sbb
loop
sub
mov
dec
xorl
jo
negl
push
jae
sbb
inc
and
das
out
ljmp
dec
sarl
movsl
nop
dec
jmp
mov
pop
flds
fildll
mov
fnstcw
sti
and
sub
das
lea
adc
adc
dec
dec
mov
mov
insl
xchg
sbb
ljmp
mov
scas
ret
jge
pop
xorl
mov
pop
test
imul
sub
adc
mov
cltd
repnz
ljmp
arpl
xchg
mov
scas
cmp
pop
mov
fcompl
lea
cltd
loope
mov
jl
pop
shrl
and
popa
pop
in
mov
xchg
pop
aad
gs
sub
pop
adc
ljmp
xor
jae
stos
jecxz
pop
shl
int3
pusha
dec
xchg
cmp
xor
movsl
or
adc
jnp
out
cltd
xor
mov
mov
inc
loop
push
loopne
nop
pop
lods
pop
pop
lea
fwait
jne
lcall
cmpps
sbb
push
inc
outsb
or
lock
xchg
enter
dec
jp
push
inc
std
cmpsb
loope
sub
fisubrl
push
mov
nop
push
sub
dec
lods
icebp
mov
in
cmpsl
stos
xor
bound
arpl
cmpsb
cmc
mov
sbb
in
push
mov
inc
js
enter
aaa
lock
mov
imul
or
ss
gs
scas
stos
enter
pop
scas
divl
pop
add
outsl
and
add
aam
sbb
xchg
sti
push
mov
xor
add
add
mov
imul
and
xor
lahf
into
mov
daa
jns
push
pusha
cli
jle
lret
pop
sub
andb
mov
xor
xor
mov
out
paddq
adc
or
ret
cs
cmp
xchg
pop
adc
mov
sub
xlat
xchg
xchg
jnp
out
dec
mov
daa
add
mov
jns
cmovno
push
or
jb
inc
pop
cmp
enter
in
pop
loop
bound
daa
mov
mul
add
les
das
xchg
add
xor
decl
aad
sarl
loopne
cmp
mov
gs
mov
dec
rol
cmc
push
dec
mov
jg
xchg
mov
xchg
adc
fisttps
dec
dec
mov
insb
clc
subb
push
dec
pop
jno
movsl
mov
sub
xor
mov
push
or
imul
inc
push
mov
xchg
pop
pop
jmp
in
aaa
jno
in
jge
jae
dec
inc
out
outsb
xor
and
cmp
adc
shrb
and
les
jae
testl
pop
mov
push
cmp
loop
popf
hlt
lds
movsl
movsl
outsb
adc
cwtl
push
and
sbb
insl
xchg
rcrl
push
loope
outsl
jp
dec
nop
cltd
mov
dec
cli
rorb
ss
sub
insb
add
iret
sub
push
arpl
dec
cmp
cld
movsb
sbb
int3
mov
popf
push
jl
adc
mov
fisttps
divl
pop
pop
sbb
out
lret
lods
lret
andl
adc
sbb
cs
push
jbe
shl
stc
ljmp
inc
arpl
sti
jb
pop
xchg
sub
xchg
sbb
lahf
jno
es
adc
sbb
push
gs
outsb
icebp
adc
out
xchg
jno
scas
jmp
fbstp
imul
lock
xchg
jnp
fstpt
sahf
jecxz
stos
push
mov
xchg
push
mov
dec
adc
xor
in
in
enter
pop
cli
in
inc
dec
aam
sbb
and
gs
sbb
js
test
sub
sub
out
gs
outsb
in
adc
pop
aaa
leave
gs
jb
out
rcll
mov
sbb
add
xchg
mov
or
dec
stos
les
loop
adc
mov
push
and
xchg
mov
inc
fucomip
sahf
shrl
arpl
movsb
icebp
lods
inc
push
inc
daa
in
mov
insb
in
pushf
cmp
stc
bound
pop
jnp
lcall
adc
add
test
fdivl
cmc
sahf
jmp
sbb
add
addr16
js
pop
jne
add
andb
push
pop
mov
or
mov
push
cmpsl
add
jmp
arpl
test
jmp
mov
xor
or
adc
adc
xor
movsb
arpl
lods
call
aam
pop
mov
jae
aaa
push
repnz
repnz
add
js
aas
mov
scas
ja
sub
call
rorl
push
dec
call
mov
shlb
in
xchg
in
cwtl
pop
aas
adc
push
mov
test
xchg
mov
push
or
arpl
pop
sahf
sarl
push
push
test
repz
xlat
je
jns
loope
test
sub
xchg
push
jge
mov
add
lahf
push
andl
xchg
out
pop
push
mov
add
scas
cmpsb
or
sarb
adc
ror
and
mov
mov
pop
add
or
cmc
outsb
aaa
popa
sub
mov
loopne
pusha
push
mov
sub
in
rcl
pop
out
sub
add
lret
movsb
push
arpl
dec
je
mov
fcoml
das
imul
stos
outsl
scas
fcompl
imul
jno
fnstcw
pop
pop
rcl
jo
inc
xlat
dec
adc
push
fistpl
mov
and
popa
pushf
pop
divl
fmulp
movsl
cmp
into
jecxz
ret
insb
ss
ss
add
lret
jge
mov
adc
xor
mov
das
xor
cs
out
mov
mul
xchg
jge
outsb
sbb
es
push
test
add
jp
mov
jno
shl
fcomi
mov
sbb
ja
push
jp
mov
mov
lahf
dec
aam
test
mov
jge
dec
and
lret
mov
mov
out
xor
push
dec
cmpsb
push
sub
cli
ret
cmpsl
jmp
pop
cld
fcmovu
pop
mov
xor
cld
dec
mov
in
add
shrl
sub
ds
shr
cmp
sahf
hlt
mov
push
dec
inc
dec
pop
cld
mov
adc
addr16
outsl
sbb
loop
out
or
push
cld
add
xor
add
test
mov
outsb
test
push
or
pop
inc
pushl
mov
pop
mov
sbb
mov
negl
jge
pop
loope
cmp
mov
add
hlt
sbb
mov
inc
out
ss
mov
arpl
rorl
jmp
ljmp
mov
inc
mov
push
push
ja
jo
sbb
out
ret
adc
rclb
mov
decb
sahf
je
ljmp
pop
addr16
mov
sub
fisubrl
test
jo
pop
lods
sub
pop
in
mov
adc
push
cltd
and
gs
arpl
out
xchg
pusha
ljmp
cltd
test
sub
xchg
pop
sub
lea
adc
pop
mov
dec
sar
iret
insb
mov
daa
dec
ret
inc
pop
add
out
adc
cmp
pop
push
xor
mov
add
push
pop
pop
in
sub
sbb
fs
les
push
aam
and
fcomip
jl
xor
mov
stos
int3
xchg
cmp
cmp
cmp
ljmp
mov
and
jmp
aad
ds
cli
xchg
push
mov
mov
fists
cmp
push
nop
inc
lret
stc
push
leave
sbb
mov
dec
das
int
addr16
adc
mov
xchg
cli
inc
push
popf
push
jns
sbb
jmp
cmp
adc
aas
or
out
xchg
push
fisubrs
fisttpl
fwait
gs
inc
lea
lret
fldcw
inc
xor
mov
std
roll
xor
dec
cld
addl
int
cmp
pop
arpl
imul
rcl
jb
stc
fstps
add
int
cwtl
adc
mov
push
xor
sub
incb
shl
inc
mov
aad
xchg
pushf
scas
aaa
push
inc
xchg
jne
sub
mov
cmpsl
es
imul
cmp
cmp
or
imul
rol
in
xchg
repnz
inc
hlt
and
andb
mov
mov
mov
push
dec
loop
leave
loope
clc
addr16
popa
xor
mov
mov
test
jecxz
aas
repz
insl
fisubs
and
sar
pushl
loope
inc
std
xor
cmp
adc
icebp
movsl
cmpsb
xchg
push
cmc
je
ja
sbb
lcall
cmp
dec
lcall
jne
scas
bound
outsb
jnp
das
in
scas
jl
cld
out
iret
fldcw
aam
and
in
mov
adc
cld
xchg
int3
sahf
out
xor
shll
loopne
xor
fstl
loope
insl
sub
mov
clc
into
ficoms
testl
mov
and
repz
repnz
test
int3
and
adc
xor
xor
fildl
mov
jo
jnp
push
les
repnz
clc
fstpl
movsb
inc
jns
or
or
pusha
movsb
adc
mov
pop
cmpsl
outsl
pusha
daa
loopne
add
repnz
mov
fs
sub
cmc
sub
mov
inc
sub
fists
xchg
std
imull
leave
pop
mov
jmp
rcrb
shl
jle
lea
stos
lahf
and
lods
pushf
negl
out
lea
and
xchg
xor
nop
pop
test
popa
mov
cmpsb
lods
push
jno
cmp
fwait
fs
mov
cli
lret
xor
fildll
movsl
pop
adc
and
inc
lret
mov
jns
inc
sub
mov
les
xor
and
xchg
dec
cli
jns
mov
pop
mov
and
int
jo
dec
arpl
frstor
pop
mov
lret
mov
mov
ljmp
cmp
test
int
pusha
lcall
stos
dec
xor
pop
inc
mov
inc
into
jne
fcmovbe
stos
call
pop
cwtl
dec
mov
jnp
mov
pop
mov
in
mov
movsb
and
cmp
dec
outsl
pop
repnz
or
ss
xchg
inc
sbb
xchg
fisubrs
mov
or
jae
cltd
pushl
mov
fstpt
jle
sub
lock
sarl
cwtl
push
and
mull
xor
mov
js
add
sti
scas
sub
cs
push
addr16
test
fimull
nop
dec
insl
jo
mov
cwtl
mov
push
and
insb
add
jne
mov
repz
push
xchg
adc
push
iret
std
test
mov
stos
test
movl
mov
mov
xlat
adc
inc
mov
std
shl
lcall
test
loope
loope
adc
jbe
aaa
sbb
mov
rolb
test
test
test
mov
add
in
subb
sub
and
xlat
or
int3
popf
pushf
inc
dec
jl
addr16
call
or
into
xchg
mov
mov
and
sti
cmpsl
sub
push
sub
cs
nop
idivb
dec
dec
jbe
push
test
push
cmp
lea
dec
fcompl
shl
in
push
push
jp
mov
mov
fsubrs
inc
fcmovnu
repnz
mov
inc
fsubrs
jmp
jp
mov
cli
gs
sti
repnz
imul
mov
out
dec
aas
sbb
or
mov
addr16
push
push
js
xlat
push
push
pop
pop
daa
ret
stc
cli
dec
and
in
call
cmp
in
pop
std
mov
sbb
mov
and
enter
leave
test
test
aas
push
sbbl
cli
push
mov
faddl
insb
out
shll
test
in
and
jmp
test
xor
sub
int
xor
iret
push
push
test
movsl
es
fiadds
fwait
movsb
out
nop
dec
sbb
mov
fs
cltd
and
push
ret
inc
leave
cwtl
bnd
cmc
sbb
dec
mov
mov
loopne
sbbl
xchg
mov
cmp
xor
add
pop
aas
ret
fstpl
mov
sbb
setl
int
out
add
add
test
inc
adc
mov
mov
jge
andl
pop
xchg
in
sub
mov
loopne
mov
xchg
loope
arpl
pop
cmp
mov
adc
shrb
clc
push
push
jnp
out
clc
mov
mov
sub
ret
inc
cmp
or
mov
dec
test
xor
dec
and
jmp
and
jnp
shll
imul
lds
into
pop
mov
imul
jne
sub
dec
push
or
imul
gs
ficomps
popf
and
jae
aaa
ret
enter
jne
test
lahf
push
notl
mov
pop
mov
jp
das
adc
ret
hlt
push
pop
jecxz
scas
out
or
arpl
add
push
pop
sbb
hlt
sub
push
fwait
into
cmp
nop
clc
and
and
dec
stos
and
clc
mov
mov
push
push
int
popf
or
test
bound
jecxz
test
into
and
pushf
fidivrl
adc
dec
lods
imul
arpl
jmp
push
scas
fbstp
cmp
fs
in
push
cmp
jnp
call
sbb
xor
adc
and
cmc
repnz
pop
cmpl
dec
jg
cmpsb
repnz
mov
lret
hlt
rcl
cmp
mov
sti
sarb
bound
xchg
gs
icebp
leave
pop
popa
mov
mov
fstpt
sub
inc
mov
xor
lahf
repz
push
cwtl
decb
lock
cmp
fbstp
mov
jnp
mov
mov
lret
pop
outsl
mov
lret
insl
lea
in
add
jp
adc
mov
das
push
xchg
push
and
xor
pop
sub
mov
mov
mov
or
mov
push
adc
gs
jecxz
fmuls
repz
push
gs
insb
fucomp
pop
daa
cmp
pop
out
pop
jno
fdivr
lea
mov
imul
sub
addr16
fisttpll
push
mov
jmp
push
imul
mov
mov
shll
cmp
pop
clc
mov
aas
call
or
inc
mov
sbb
xchg
push
cld
out
and
cli
mov
bound
int
push
int
mov
inc
fistps
inc
xor
imul
iret
out
out
rcrl
mov
add
mov
cmp
dec
pop
xor
pop
xor
out
movsb
xor
mov
push
popa
adc
mov
lock
and
inc
inc
ja
cmp
add
push
jge
roll
jp
and
aas
sti
gs
ds
mov
int3
mov
push
add
mov
add
iret
pop
jns
dec
outsb
dec
popa
sbb
adc
mov
push
call
push
push
jbe
js
mov
pop
subb
push
pop
std
loop
push
test
push
ret
fistps
into
mov
push
shl
es
xor
and
cmc
or
lahf
int
inc
mov
mov
mov
xor
jl
push
inc
js
cmp
mov
lret
sub
mov
sbb
push
or
adc
fs
aad
clc
cmpsl
out
adc
or
push
fmull
repnz
out
int3
stos
xchg
xchg
and
orb
add
int3
fmul
loop
xor
nop
out
jne
push
subl
mov
iret
outsl
and
cmp
cmp
cmp
mov
mov
fsts
mov
push
push
add
repnz
testb
push
lahf
adc
leave
xlat
mov
shll
pop
rorl
je
movsb
cmp
test
call
pop
js
dec
pop
in
in
in
or
sbb
jbe
inc
sub
xchg
data16
jo
sbb
push
push
mul
sub
xor
or
fldcw
and
pop
xchg
xchg
nop
pop
cli
add
sbb
mov
sub
adc
pop
ja
push
mov
fptan
dec
daa
je
jecxz
sti
gs
mov
gs
fwait
add
notb
lahf
xor
dec
std
not
pop
icebp
dec
jmp
fdivrs
hlt
ja
out
pusha
cld
sub
xor
fldcw
lock
lahf
imull
or
cmp
fstps
outsl
out
dec
shlb
ret
xchg
sub
push
lock
std
sub
pop
adc
pushf
imul
dec
add
push
pop
es
sar
inc
mov
xor
mov
bound
rolb
aam
rcrb
jg
or
pop
pop
mov
jmp
dec
jbe
push
fcmovbe
jmp
xchg
jo
lods
lret
pop
mov
icebp
dec
add
dec
or
lock
lods
mov
andl
cmp
mulb
nop
es
clc
int
out
jb
sub
cmc
jge
xlat
xor
lret
mov
repz
mov
out
outsl
pushf
xlat
cltd
dec
sti
sbb
out
add
and
data16
loop
iret
lds
gs
mov
and
outsl
cld
xchg
dec
cmp
pop
add
or
pop
insb
mov
mov
pop
add
stos
mov
enter
insb
daa
cmc
out
xchg
xchg
test
mov
test
cmc
inc
xlat
mov
xor
arpl
xchg
out
push
cmp
in
addr16
rcrl
repnz
dec
aam
jg
out
nop
iret
repnz
adc
jns
jns
and
xor
or
and
popa
sub
sbb
mov
xchg
dec
notl
and
loop
cmpsl
das
imul
push
cltd
mov
scas
jp
gs
sub
jbe
sbb
jmp
xor
adc
in
cmp
and
leave
cmp
les
jl
inc
xor
cmp
jnp
shll
pushf
fisubrl
xor
loope
jo
popa
push
out
int3
mov
jmp
adc
push
inc
lcall
push
pop
and
cmp
cld
outsb
mov
inc
out
out
lods
pushf
add
xchg
movb
cmpsb
jo
fidivrs
sbb
push
int
enter
push
pop
push
scas
sbb
lock
sti
out
mov
test
push
cmp
sub
push
push
sbb
push
push
and
fildll
and
and
les
ljmp
push
movsb
sub
cmp
xor
sbb
push
mov
sbbl
shll
mov
mov
clc
mov
mov
mulb
push
call
mov
loopne
xlat
mov
inc
dec
arpl
repz
pop
insl
dec
mov
test
addr16
sub
dec
cmpsl
xchg
enter
cltd
loopne
out
inc
mov
out
fsubs
sahf
cltd
push
and
out
jno
or
cmp
ja
adc
fsubrp
aad
or
stos
cltd
cmp
mov
jae
cltd
ds
adc
rol
pop
mov
jmp
repz
loopne
dec
les
xchg
push
int3
sbb
add
fistl
cmp
in
cmp
push
mov
sti
and
cmp
shll
xlat
loope
mov
and
inc
movsb
imul
jb
fxrstor
mov
insl
out
mov
dec
mov
and
dec
jmp
xchg
out
dec
pop
adc
push
sbbl
aas
sbb
xchg
mov
add
xor
sbb
fs
mov
lock
aam
call
pop
pop
lahf
pause
idivl
jns
stos
arpl
fmull
inc
jnp
ret
adc
aaa
fnstsw
ror
mov
sub
and
repnz
in
jmp
jns
dec
inc
pop
cltd
flds
or
int
push
cmp
cmp
or
leave
push
sti
out
in
andl
fcmovnbe
sti
mov
into
inc
mov
inc
repz
dec
sbbl
inc
sahf
jae
pop
test
add
mov
clc
or
push
repz
fiaddl
or
mov
fldl
movsl
jo
mov
inc
dec
jp
lret
xor
gs
lods
ja
xchg
fs
push
or
mov
lock
push
or
aaa
neg
and
and
lods
mov
mov
push
jb
mov
add
clc
mov
push
fwait
aad
cmp
push
and
adc
xchg
xlat
xchg
pop
add
jl
loope
add
lods
incl
aaa
fmul
pop
cmp
ss
pop
push
cmp
mov
js
into
and
shrb
xor
clc
aam
pop
mov
mov
cli
or
repz
sub
mov
aas
int3
test
or
dec
sbb
cmp
push
inc
sub
pop
gs
mov
out
repnz
sahf
outsb
outsl
dec
in
dec
les
push
mov
xor
xor
cli
sbb
cmp
sub
daa
rcll
push
cmp
add
mov
mov
sahf
outsl
xchg
inc
pop
pop
mov
js
fmuls
mov
cmp
bound
sbb
gs
shlb
jmp
daa
add
sub
push
inc
cld
in
addr16
incb
xor
popf
or
loopne
outsl
fdivrs
adc
jbe
mov
jae
xchg
stos
cmpsl
xchg
cmp
xchg
add
popf
lods
out
sub
fimull
sub
push
inc
inc
adc
out
outsl
lret
mov
dec
mov
pop
dec
mov
sbb
je
and
clc
int3
loope
jnp
mov
inc
mov
inc
adc
mov
cmc
and
out
lea
mov
gs
adc
sub
lahf
imul
pop
jle
cli
mov
in
pop
mov
mov
inc
nop
lods
sub
pop
mov
aad
mov
sti
mov
inc
adc
jb
jb
mov
inc
xchg
jae
or
jnp
push
jmp
jb
mov
pusha
imull
mov
in
xchg
ret
aas
xchg
aas
adc
pop
fstpl
add
xchg
loop
fnstsw
adc
fstps
lea
dec
pop
movsl
inc
repz
test
es
in
out
mov
inc
in
into
xchg
xor
sbb
repz
inc
cwtl
fcoms
jl
mov
or
test
das
lods
add
inc
test
dec
push
repnz
sbb
mov
xchg
jbe
dec
xor
add
xor
nop
adc
repz
sahf
adc
jp
loop
jmp
xor
pop
scas
in
imul
lret
out
call
popa
xchg
in
mov
scas
or
xchg
pushf
jmp
jae
xchg
cmp
pop
or
js
and
adc
mov
shlb
cmp
push
mov
jbe
adc
aas
add
mov
cltd
mov
mov
cwtl
cmp
pop
xor
inc
movsl
mov
push
xor
xor
mov
cmpsb
push
inc
add
ja
lahf
cli
lods
pop
cmp
comiss
scas
ret
movsl
lcall
xorb
add
cltd
fadds
sbb
aam
push
out
iret
lea
xor
push
lods
cmp
addb
lcall
jno
int
jns
cld
adc
imul
roll
cs
and
jl
sub
cmpsl
mov
or
loop
cs
mov
into
xor
nop
movsb
sub
ja
mov
insl
push
adc
pop
lods
lods
inc
sub
lods
sti
lock
mov
aas
push
mov
pop
scas
iret
fwait
mov
imul
mov
xchg
movb
arpl
mov
loop
dec
adc
ljmp
idivl
fwait
mov
sbb
mov
add
cmp
in
lcall
sbb
sbb
inc
idivl
adc
in
cmp
mov
add
lret
cmp
jae
repz
fildl
xor
sbb
mov
push
jb
es
pop
and
fdivl
xchg
adc
aaa
lea
dec
push
mov
add
test
push
and
jo
cs
jge
subl
pushf
jecxz
mov
je
push
pop
add
movsl
pop
adc
setne
shrb
push
pop
test
int3
fmull
rolb
sub
push
add
jo
sahf
pop
push
mov
push
jnp
or
jle
stos
add
sbb
addr16
sub
je,pn
cli
sub
dec
or
cmpsb
scas
xchg
imul
insl
lods
cmc
lds
xchg
aaa
jo
iret
sbb
xchg
pop
adc
lret
or
add
fdivl
push
cmp
xor
rcrb
add
outsl
mov
clc
mov
pusha
pop
jno
hlt
in
imul
jns
out
scas
jno
ficompl
outsl
jle
iret
cmp
cmpsl
adcl
inc
lret
cmp
call
sbb
out
mov
in
sub
mov
outsb
pushf
mov
incl
cmpsl
push
nop
dec
adc
mov
and
mov
push
mov
jno
dec
loope
inc
repnz
and
jmp
shlb
cli
pop
add
sub
sub
aad
aam
in
jnp
out
js
sub
arpl
xchg
dec
scas
stos
cltd
fwait
jge
lods
xor
fwait
cld
mov
arpl
std
mov
or
add
push
sbb
adc
or
lds
sbb
ret
mov
sbb
cmp
push
and
jge
int
inc
cltd
mov
enter
mov
and
xchg
pop
push
cmp
fdiv
fsubrl
pop
xchg
dec
popa
stos
je
add
or
or
inc
cmpsb
cmc
push
pop
stc
xchg
xchg
jecxz
lea
hlt
sbb
repnz
or
loop
pop
imul
inc
popl
movsl
and
mov
sub
xchg
gs
call
cmpsb
adc
cmp
and
push
movsb
pop
sub
pop
hlt
rcl
jae
repnz
out
shlb
lods
and
nop
mov
pusha
cltd
ret
dec
add
unpckhps
push
repnz
scas
cltd
jb
lret
into
test
out
adc
enter
xchg
pop
lods
popf
shr
repz
xor
out
pop
jb
stos
xchg
and
insl
mov
aaa
out
je
add
mov
out
je
push
daa
inc
jge
std
dec
cmpsl
jbe
stos
cmp
call
push
sahf
push
icebp
or
xorl
outsl
inc
inc
xchg
push
aad
push
mov
mov
cmp
and
adc
inc
xor
xchg
daa
pop
call
push
sbb
in
mov
js
ret
outsb
add
js
repz
pop
in
add
loopne
pop
sbb
test
inc
adc
pop
adc
push
xchg
loope
fdivs
pop
test
int
or
adc
lods
out
or
imul
scas
jmp
adc
enter
mov
add
fdivr
cmc
add
in
lods
push
push
push
roll
out
leave
std
fwait
jl
sub
xchg
pop
jo
pop
pop
xlat
aas
push
xchg
cmp
mov
mov
lea
adc
call
add
jns
push
jne
mov
xor
call
xor
cs
push
cmp
addr16
insl
inc
ret
push
outsl
test
push
pop
xchg
mov
mov
sbb
jns
mov
int3
pop
mov
xor
cmp
movsl
mov
hlt
and
adc
cltd
mov
or
add
mov
stos
ret
pop
aad
jne
imul
jno
xchg
call
lret
add
cs
sub
fldt
fwait
lods
jmp
pop
inc
mov
sbb
mov
loop
jbe
adc
lret
loope
jno
popf
notb
jle
jo
adc
dec
ljmp
mov
ret
cmp
outsb
xchg
and
jge
push
int3
fisubs
sti
icebp
mov
stos
lcall
aaa
push
loop
fnop
imul
ljmp
push
xchg
dec
xor
or
mov
pop
jle
shlb
data16
dec
int
xor
mov
ret
fmuls
mov
insl
adc
pop
sub
pop
in
lret
dec
mov
inc
inc
xchg
lahf
xchg
in
mov
or
jmp
push
out
test
mov
out
arpl
push
fnstsw
push
cwtl
and
pop
fcomps
into
in
lahf
and
leave
mov
rol
into
pop
aas
daa
aas
out
xor
stos
int3
jo
cmp
loopne
xor
into
ret
xor
jns
clc
and
sbbb
cmpsb
jbe
push
stos
dec
pop
push
jb
or
cld
andb
cmc
xor
dec
shl
xor
pusha
or
sub
sbb
sbb
aam
push
push
aaa
adc
repz
and
inc
inc
mov
out
pop
pop
std
sahf
in
lret
out
sub
stc
adc
mul
mov
inc
aaa
mov
mov
test
imul
xchg
scas
mov
xor
daa
aas
dec
test
pusha
shr
cmp
out
add
aaa
jmp
fnstenv
and
cmp
std
xchg
mov
or
test
xchg
cs
sub
cs
iret
scas
mov
rorb
cmc
popa
or
icebp
jns
push
pop
xchg
push
mov
movl
in
mov
cs
or
addr16
and
push
sub
stc
pop
aas
inc
xor
sbb
pop
dec
sbb
sub
mov
stos
mov
les
lock
mov
xlat
pusha
ficoml
xchg
jns
sbb
or
sbbl
sbb
adc
mov
jle
xchg
lret
jno
push
and
leave
add
outsb
out
lods
repz
aas
adc
or
in
aas
andb
int3
hlt
push
pusha
cs
push
jbe
pop
and
in
sbb
mov
into
mov
jae
loop
loopne
mov
jae
ss
jb
mov
pop
or
out
fwait
push
movsb
jl
add
ret
xorl
mov
sub
cmpsl
pop
or
add
out
jle
jecxz
cmp
add
int3
cltd
mov
mov
stos
mov
or
lcall
imul
sti
xor
popf
mov
cmp
dec
add
xor
jae
insl
in
cmp
mov
aaa
ss
adc
mov
mov
push
xchg
xor
jne
sar
xor
jo
mov
mov
adc
lods
pop
xchg
xor
xchg
adc
pop
loopne
cmp
idiv
pop
jp
push
enter
pop
test
jne
mulb
mov
xor
fst
dec
iret
aad
adc
pop
cmp
fstl
jl
push
aaa
sbb
in
insl
jno
int3
aas
out
add
push
jbe
std
test
rorl
mov
sbb
out
cld
xlat
outsb
and
inc
rcr
insl
call
sbbb
out
xor
adc
lock
addr16
cli
popl
sbb
ret
pushf
leave
mov
inc
sub
xor
pop
ror
pusha
sbb
jmp
fdivp
jg
test
sub
pop
cld
mov
das
lds
push
and
pop
push
sub
movsb
dec
or
jle
or
mov
xchg
call
jmp
sub
cmp
add
dec
push
in
out
or
aas
inc
mov
pop
test
bound
insl
xor
out
idivb
lret
inc
dec
sbb
icebp
aad
jge
sub
std
dec
outsb
mov
inc
dec
jnp
int3
add
gs
js
sub
int
sar
lret
aaa
call
hlt
jmp
and
xchg
push
enter
out
js
push
sub
jmp
ja
icebp
mov
pop
mov
dec
lcall
rorl
xor
inc
mov
xor
adc
inc
lock
sub
push
mov
lea
adc
dec
fcmovnu
data16
cmpl
popf
fisttps
adc
out
addr16
sti
sti
test
jb
into
push
mov
fnsetpm(287
sub
cmc
sti
sub
or
stc
and
mov
lock
jnp
or
or
mov
fwait
aas
clc
sbb
add
pop
icebp
fmul
mov
fsubl
cs
test
popf
push
cmp
jb
mov
jo
lock
roll
cmp
cmp
and
xchg
and
loope
daa
dec
xorl
icebp
lahf
or
out
insb
push
adc
gs
rorb
mov
xchg
sahf
movsl
cmp
adc
xchg
sti
push
out
or
push
add
xchg
lods
pusha
scas
push
arpl
lret
clc
movsl
xchg
in
insl
ret
repz
pop
add
jb
lahf
push
push
sti
mov
out
pop
and
mov
or
in
mov
insb
adc
gs
cmp
or
test
push
xor
adc
aam
add
mov
xchg
pop
testl
xor
jno,pt
popa
fdivr
adc
mov
and
sbb
mov
int
jns
popa
xchg
sub
add
jae
cmpsb
dec
in
jbe
lret
mov
bound
in
xor
dec
ret
xlat
in
xchg
nop
into
popf
into
popf
adc
jbe
adc
lret
loope
and
sub
rcrb
scas
fsubl
adc
lret
pop
push
mov
repnz
sub
movsl
les
sbb
insl
jno
cli
and
std
aaa
fbld
cs
fadd
xlat
dec
lds
popf
cmp
les
mov
mov
mov
out
call
mov
mov
mov
lds
std
arpl
fiadds
subl
fs
cmc
xlat
adc
mov
xchg
lods
mov
lock
add
movsl
hlt
and
and
fbld
push
add
xchg
lods
jbe
push
adc
shlb
cmpsb
xchg
mov
mov
test
pushf
cltd
call
fdivs
pusha
jns
cld
int3
jne
jmp
xchg
mov
jae
mov
pop
add
popf
arpl
push
mov
xchg
pop
jl
insl
add
fimull
sarl
xor
adc
adc
push
dec
imul
push
lods
movsl
jge
or
incb
xchg
ss
int
inc
mov
xor
cmp
nop
or
loopne
test
imul
stc
cltd
and
scas
into
rolb
pop
ss
dec
xchg
lahf
xor
dec
push
xor
popf
or
xchg
in
mov
push
ljmp
mov
fsts
lahf
decl
cld
test
xor
cwtl
jnp
pop
cmpl
jge
shl
xchg
xchg
or
xor
aam
or
sbb
shlb
or
jmp
fidivs
and
xor
or
mov
jb
add
push
xor
push
call
sbb
or
leave
pop
inc
mov
sti
movsb
popa
aam
aam
mov
mov
inc
pop
lods
dec
dec
hlt
loope
and
outsl
jb
mov
xor
xchg
dec
and
mov
xchg
push
xor
xchg
pop
or
out
hlt
hlt
push
jp
sbb
push
leave
nop
roll
pop
sub
decl
mov
out
out
dec
push
orb
jge
jp
jmp
cmp
xlat
mov
xchg
adc
pop
iret
mov
andl
and
or
mov
jl
mov
pop
xchg
rcrl
xor
push
push
lea
imul
cmp
xchg
sbb
inc
sub
push
xchg
rorb
cmp
jbe
xchg
jecxz
and
int3
xchg
sub
pop
shl
addb
call
test
es
mov
add
xlat
into
xchg
shlb
fs
lods
pop
sbb
out
je
icebp
xchg
inc
or
xchg
popa
and
out
inc
cs
xor
or
xor
mov
clc
adc
xor
and
dec
es
mov
pop
adc
loop
sbb
push
addr16
pusha
lea
int
lds
out
xchg
mov
pop
xorb
sub
sbb
push
adc
in
xchg
mov
and
adc
in
fidivl
mov
ret
inc
cli
call
xlat
adc
out
xchg
dec
jns
fwait
popl
pop
mov
shrb
mov
into
rorb
jp,pn
and
adcl
hlt
mov
ficoms
or
jl
out
adc
mov
and
inc
push
mov
ret
clc
fistpll
inc
pop
cmc
out
fstpt
in
outsb
out
fwait
cmp
mov
bound
push
cs
je
mov
aas
jecxz
fcomi
mov
push
mov
or
call
adc
scas
mov
out
cld
inc
cmpsl
add
dec
aad
shll
push
in
mov
or
cmp
out
das
cmp
iret
push
ss
scas
mov
dec
imul
stc
fisttpl
sub
out
dec
jecxz
mulb
fwait
mov
or
test
pop
clts
adc
lret
push
lods
pop
xchg
xor
clc
sbb
inc
fdivrp
cmc
lock
mov
mov
sbb
cmc
stos
add
mov
pop
pop
icebp
mov
outsb
cltd
ret
call
mov
enter
xor
rorl
mov
nop
and
mov
dec
lret
ret
mov
inc
and
xor
jecxz
cld
test
mov
and
cltd
xor
or
clc
mov
gs
and
prefetch
or
inc
fstpl
mov
arpl
mov
leave
ret
jle
clc
int
int3
enter
xlat
pop
xchg
push
stos
adcl
xlat
xor
test
stos
mov
cld
aaa
popa
scas
xchg
mov
xorb
popf
test
mov
xchg
out
aas
cmp
jne
popf
out
pop
sub
or
pop
jmp
push
xchg
pop
lret
mov
mov
leave
push
wbinvd
xor
mov
xchg
in
mov
in
push
push
ret
jg
fists
repnz
mov
push
hlt
outsb
mov
out
addb
mov
xchg
test
sbb
ds
sbb
xor
and
add
inc
mov
dec
mov
mov
add
push
icebp
jecxz
cmpl
ret
inc
push
inc
mov
movsb
std
add
sub
fstpt
sub
dec
lcall
lock
arpl
inc
pop
push
inc
leave
fnstenv
xchg
cmpsl
add
daa
es
mov
push
sbb
jle
xor
mov
pop
dec
aaa
inc
jecxz
imulb
shll
pop
inc
daa
pop
daa
fs
les
out
sub
rclb
sbb
loopne
xchg
cltd
inc
lahf
mov
in
or
xlat
mov
icebp
add
mov
addr16
add
xchg
xor
pop
fsubrs
pop
ja
sub
pop
mov
repz
mov
push
inc
push
xor
dec
cmpsb
pop
fisttpl
stos
test
mov
xlat
mov
pop
ret
fimull
jecxz
ficompl
ljmp
stos
popa
fldenv
pop
mov
mov
pop
cld
outsl
xlat
pop
mov
push
mov
pop
lret
ja
or
xchg
outsl
cmpsl
or
adc
mov
push
lret
popa
popa
scas
lock
dec
data16
ret
and
clc
push
xor
test
js
loope
pushfw
dec
mov
dec
ret
bound
sbbb
loope
xor
inc
push
dec
push
ret
sbb
mov
js
jmp
jae
push
jmp
stc
jns
in
fucom
push
aaa
mov
and
xchg
and
sbb
and
cld
fbld
sub
xchg
dec
stos
jo
add
shl
mov
xor
xchg
cwtl
push
in
rep
xchg
adc
inc
jbe
push
sbb
mov
aam
push
jl
cmp
scas
aam
mov
aas
lret
adc
ljmp
xor
imul
test
mov
shrl
sbb
mov
icebp
xchg
enter
xor
xchg
inc
es
cmpsl
daa
pop
rclb
in
fsubrs
setg
and
aaa
gs
xchg
mov
push
sub
test
sub
in
push
hlt
cmp
and
loope
adc
push
iret
shll
add
ret
pop
jmp
cmovb
enter
daa
and
mov
mov
xchg
xor
insb
and
out
mov
push
rcr
push
daa
add
in
pop
add
xlat
xchg
pop
dec
mov
repz
fisttps
xchg
fwait
in
push
jmp
filds
rol
adcl
es
fcmovu
xchg
call
in
pop
sbbb
jae
cld
sbb
mov
fwait
inc
adc
and
sti
push
sbb
dec
add
cli
hlt
adc
mov
xchg
and
jmp
ret
push
divl
xor
jo
jns
out
pop
js
mov
lods
pushf
lahf
fmull
add
mov
push
lea
insb
lahf
outsb
int3
nop
leave
sbb
call
jmp
stos
lea
bound
cltd
and
movsl
mov
aam
cld
fmuls
lahf
lret
movsl
fs
cmp
aam
call
mov
ficoml
cltd
test
int
xor
stc
sar
daa
sub
dec
mov
pop
arpl
pop
roll
add
movsb
pusha
sarb
jge
add
insb
jecxz
xchg
out
pop
push
out
and
pop
and
imul
mov
lock
mov
or
adc
cmp
mov
mov
jno
loope
adc
bound
mov
jnp
xchg
jp
sahf
cmp
cmp
shr
adc
std
lret
sub
mov
push
out
mov
mov
fnstsw
sub
push
adc
mov
lahf
cltd
and
or
mov
or
or
out
inc
nop
aam
in
imul
outsl
dec
mov
pop
inc
xor
je
xor
xchg
fwait
adc
dec
test
nop
mov
sub
xlat
cmp
and
dec
fs
dec
mov
jl
pop
mov
mov
testb
mov
stos
xchg
cmp
cmp
out
inc
ret
popa
aas
pushf
out
mov
ss
push
shrb
addr16
int
dec
testl
mov
and
push
cltd
push
xor
mov
fs
and
mov
or
sarb
push
dec
out
stc
mov
cmpsl
jne
stc
je
sbb
aam
push
subb
inc
arpl
jae
xor
out
shlb
add
ret
jl
adc
mov
mov
in
mov
cmp
xlat
into
fldcw
shrb
jg
jns
ror
stos
cmp
mov
sbb
sub
adcl
out
push
mov
aaa
adc
sub
jg
push
popa
in
adc
mov
lds
inc
orb
clc
xchg
add
adc
mov
or
add
fs
imul
cli
out
in
pop
aaa
push
pop
jo
out
or
sti
sub
push
jl
mov
das
or
aaa
mov
inc
push
pusha
push
lcall
fndisi(8087
or
outsl
jne
xchg
lret
sar
ds
cmp
and
inc
mov
jge
mov
push
sub
stos
jo
popa
in
or
test
xchg
scas
jnp
or
push
mov
cmp
pop
cmpsb
cmpl
xor
xchg
aas
xor
out
mov
mov
xchg
pand
cmp
adc
aaa
jp
mov
sbb
mov
pop
das
push
push
xchg
inc
xor
outsb
mov
cli
fcoms
and
and
sub
pop
dec
lret
daa
mov
sbb
popa
xchg
jns
jnp
stos
outsb
xchg
inc
dec
inc
repz
pop
ss
pop
hlt
hlt
mov
and
js
push
test
jnp
fdivrp
cmp
add
lret
adc
std
shrb
cmp
xchg
loope
fwait
or
cs
mov
xchg
pop
or
jnp
leave
in
pop
andb
ficompl
pop
mov
xchg
fsubrp
iret
flds
inc
jmp
xor
pushf
movsb
cltd
pop
imulb
and
mov
push
bound
js
ljmp
add
xchg
cmp
push
test
mov
fwait
std
stos
sub
mov
js
mov
cmpsb
jmp
mov
dec
cmp
mov
xor
push
dec
roll
pop
sub
push
in
inc
daa
inc
adc
mov
mov
mov
dec
lahf
dec
pop
popf
adc
push
and
and
sub
outsb
pop
or
shrb
dec
lods
mulb
mov
stc
add
imul
pop
fcoml
push
fwait
and
call
xorl
pop
fwait
jbe
add
repz
repz
flds
std
adc
sub
mov
inc
ret
and
or
mov
mov
imul
dec
fsub
je
cli
loopne
aam
hlt
ljmp
or
rcrb
addr16
or
xchg
icebp
out
aaa
add
jle
ret
fldenv
mov
jb
fs
loop
ret
xor
iret
iret
repnz
adc
or
add
imul
adc
mov
daa
fxch
int
incb
cltd
jo
cmp
jle
aas
stc
sbb
sbb
jbe
xor
jg
cmp
mov
jmp
mov
or
ret
jne
inc
es
pop
xor
xchg
shr
push
mov
jo
cmp
lods
and
repnz
ds
jno
ret
ljmp
int3
jmp
or
mov
inc
sub
out
addr16
fildl
xor
arpl
ds
jo
dec
aaa
in
mov
add
cltd
loope
jnp
xchg
adc
jg
push
inc
dec
cld
jbe
movsb
push
stos
mov
or
sbb
add
dec
and
pop
fdivrl
leave
inc
mov
or
aam
lods
out
sti
jo
push
mov
mov
out
int
arpl
xchg
xchg
sub
mov
or
lret
das
stc
popf
jbe
repz
push
in
sub
cmp
xor
mov
lock
fcom
xor
ja
outsb
jg
mov
das
adc
pop
sub
outsl
mov
pop
or
or
and
and
enter
cmp
je
adc
xor
xchg
test
ss
movsl
add
push
mov
popf
and
pop
stos
lahf
cmp
mov
jmp
ret
jne
cmp
imulb
aad
sbb
test
cmp
fcomps
or
xor
std
pop
push
xchg
hlt
jno
cmp
sbb
ret
add
repz
cmpb
mov
mov
add
add
push
adc
xchg
dec
mov
lret
lods
pop
daa
repz
cmp
mov
xor
xchg
adc
pop
insl
jo
mov
test
sub
sarb
xchg
cwtl
add
movhps
popf
dec
adc
fcoml
pushl
mov
cwtl
dec
add
insl
pop
ljmp
aad
cli
add
stos
mov
mov
ds
mov
mov
or
sbb
or
pusha
inc
insb
shll
and
subl
mov
rclb
outsl
adc
sub
or
sahf
mov
add
inc
adc
clc
hlt
icebp
adc
bnd
mov
lods
stc
nop
pop
xchg
mov
cmp
test
clc
pop
in
jae
sub
sub
or
xchg
out
mov
or
lret
stc
ds
cmp
xchg
repz
dec
push
push
idivl
sub
out
xchg
stos
out
in
mov
push
inc
xchg
mov
popf
test
jge
xor
movsb
mov
scas
loopne
leave
push
insb
orl
ret
mov
movsb
sbb
pop
xchg
sub
dec
insl
js,pt
push
cs
stc
insl
mov
mov
mov
mov
pushf
and
mov
mov
jb
mov
gs
pusha
enter
jecxz
sub
or
jge
call
adc
lock
xchg
into
cmp
shl
cmp
lods
jl
lock
insl
mov
sbb
mov
sub
pop
mov
test
outsb
pusha
inc
mov
repnz
movsl
bound
or
pop
mov
popf
xor
pop
mov
les
cmpsl
adc
jmp
rorl
pop
jne
daa
int3
cli
xchg
jb
dec
into
sbb
aaa
arpl
xrelease
ss
mov
lcall
xchg
fisubrl
sbb
cwtl
popf
out
jns
sbb
test
cwtl
int3
pop
dec
cld
pop
ret
ds
jae
dec
mov
clc
mov
sahf
fstpt
imul
jge
stos
fwait
cs
call
jnp
loopne
cld
cmp
xlat
outsl
cmp
pop
xchg
inc
dec
inc
decl
xchg
pop
shll
rorb
pop
in
cltd
dec
ret
jmp
inc
cmp
push
pusha
xchg
addps
out
repnz
movsl
sbb
dec
cltd
mov
mov
mov
loopne
fisttps
sbb
mov
jge
scas
fwait
subl
inc
dec
jge
adc
cli
add
jns
in
repz
xor
mov
add
push
ret
repz
pop
mov
lock
mov
pop
push
add
push
xchg
andl
pop
lahf
in
fcompl
push
add
ja
jl
cld
mov
fiadds
in
pop
inc
mov
fimuls
xchg
dec
cmc
xor
sahf
nop
xchg
shl
sbb
jno
xor
pushf
in
sub
rclb
mov
push
pop
test
mov
dec
jmp
mov
adc
jns
xor
shr
lahf
mov
pop
sarl
dec
inc
xchg
mov
xchg
xchg
cmp
sti
fs
mov
jno
push
sahf
mov
or
xor
das
je
test
fs
iret
jae
data16
sarb
sub
lret
mov
sub
adc
xchg
cmp
xchg
lahf
stos
aaa
jp
jbe
push
xchg
inc
mov
nop
in
mov
neg
ret
and
push
xor
jo
addr16
test
addr16
arpl
outsl
rcll
pop
xor
aad
fstpl
loopne
adc
jns
pop
bsr
std
mov
or
mov
pcmpgtw
mov
mov
or
mov
sti
sbb
in
mov
and
cmp
sbb
aas
jo
pop
jnp
push
movsb
fcmovu
leave
mov
clc
int
push
inc
jmp
xor
add
cmc
test
aam
test
jl
and
add
fcmovnbe
insl
dec
fisubrs
mov
outsb
xlat
adc
jne
lods
sbb
das
adc
fiaddl
push
cmp
lods
fwait
push
lds
dec
pop
push
adc
testl
iret
pop
inc
ficompl
imul
loope
std
or
inc
xor
jns
add
leave
push
lea
mov
or
mov
lcall
insl
inc
les
int
test
in
push
xor
movl
daa
dec
adc
xor
cmpsb
aaa
andb
jp
push
cmpsl
ud2
xchg
pop
cli
ja
mov
jno
jp
hlt
cmp
pop
xor
sub
enter
mov
jmp
xor
popa
mov
outsl
and
ret
dec
push
out
addb
stos
shll
rorb
xor
mov
cmp
mov
loopne
hlt
ja
jno
insb
pusha
push
stc
cs
pop
cli
push
push
mov
rcrl
pushf
mov
sub
jbe
cmpsb
push
jo
sub
add
jae
mov
outsl
pop
mov
fildll
gs
popl
les
or
adc
shrl
filds
mov
add
call
outsl
mov
lods
pop
push
xor
fistpll
pusha
sbbb
xchg
and
jne
push
cwtl
add
add
push
mov
sbb
int
dec
fcomi
int
popf
dec
jo
inc
outsb
lcall
lea
movsl
decb
xor
mov
daa
mov
add
test
insl
notl
push
jmp
adc
or
lods
jl
add
sub
inc
ja
push
js
add
scas
dec
loope
lahf
and
dec
and
pop
xchg
dec
add
mov
mov
and
js
insb
add
lock
sti
push
stc
sub
aam
add
cmp
int
pop
movsl
std
in
push
cmpsl
fimull
aas
insb
rorb
cmp
mov
mov
pop
xor
jae
iret
dec
sbb
std
pop
dec
pushf
int3
test
push
jcxz
mov
arpl
jb
mov
subl
cmc
sub
je
sbb
inc
insl
aad
dec
ss
xchg
sub
pop
rcll
and
sbb
dec
int3
pusha
cwtl
je
fists
push
inc
fwait
jnp
pop
lock
test
fimull
sub
xchg
sub
out
js
aad
mov
xlat
jg
mov
inc
aad
mov
cltd
cmc
cmp
lods
cmc
and
sbb
lret
xchg
inc
outsl
vmwrite
inc
jl
out
lcall
pop
cld
ror
inc
xor
xchg
push
adc
sub
int3
aaa
pop
sti
popa
sbb
sub
cmpsb
test
sbb
jno
push
xor
rclb
or
jg
mov
aad
dec
scas
jp
pop
cmp
insb
mov
mov
mov
pop
clc
aam
jge
ss
adc
das
dec
daa
push
add
fwait
sbb
cltd
fisttpl
push
out
pop
add
ss
fdivl
xchg
mov
rorl
pop
mov
inc
pop
pop
cmp
ljmp
or
or
or
enter
sahf
xor
imulb
cmp
sub
popa
jmp
pushf
out
loopne
js
xchg
repnz
pop
arpl
mov
mov
ds
lock
inc
out
arpl
mov
outsw
add
cmp
xchg
ja
cmp
xchg
add
lahf
push
ja
push
outsb
and
and
sbb
imul
cmp
dec
inc
std
adc
out
lahf
mov
fcmovnu
cmpsl
sbb
outsb
cmp
xor
pop
lcall
jecxz
jno
notb
pop
pop
jbe
mov
dec
adc
pop
add
jo
xor
ja
ret
push
lret
dec
mov
sub
xchg
leave
sbb
ljmp
jae
jg
add
mov
enter
push
xchg
mov
push
gs
xor
cmpsb
sub
push
mov
mov
adc
out
out
hlt
fcoml
out
inc
adc
pushf
jle
adc
loope
mov
dec
mov
aaa
mov
sbb
sub
fsubrl
push
test
xchg
jmp
inc
fadds
stos
addl
add
scas
repz
jecxz
cmp
add
sbb
cld
adc
test
mov
push
jmp
das
push
clc
sbb
lret
xchg
pushf
or
cmpsb
adc
daa
imul
cwtl
repnz
or
or
pminub
test
xchg
dec
dec
popa
push
xlat
jge
ss
or
aam
and
imul
jne
xor
ds
mov
dec
lea
pop
pop
insl
test
cmc
inc
dec
pop
xor
js
dec
lea
push
ret
data16
cmp
add
test
mov
test
cmp
aas
test
imul
addr16
pop
jo
ret
call
dec
mov
js
adc
dec
mov
pop
aad
stos
xchg
sbb
fld
mov
sub
xor
filds
inc
test
mov
shr
or
cld
jl
cli
imul
or
lcall
mulb
xchg
repz
cmc
cmc
inc
mov
xchg
add
and
cmp
jbe
stos
js
ds
pop
enter
repnz
mov
sbb
adc
sub
jmp
adc
in
xchg
jecxz
cmp
inc
das
test
fstps
push
popf
pop
les
inc
jnp
pop
fists
or
leave
push
cmp
jo
lock
loopne
fadds
dec
scas
inc
sbb
pop
jnp
ret
jmp
movsl
arpl
call
icebp
push
mov
js
mov
pop
insb
aad
adc
movsb
jge
adc
push
sahf
pop
mov
mov
sub
adc
rorl
pop
lcall
cmpsl
repz
out
std
jmp
loope
inc
paddusb
lock
dec
jo
xchg
jb
push
lahf
cmpsl
arpl
insb
stos
pop
ljmp
jg
jle
xor
xor
mov
add
jno
cli
stc
jae
enter
mov
les
push
push
xchg
xchg
shlb
or
push
jae
jno
sbbb
rorl
sbb
imul
dec
rorb
pushf
xor
jle
std
dec
es
mov
pop
xor
mov
cmpsl
mov
xor
push
outsl
jge
stc
stos
mov
pop
stc
inc
mov
sbb
jl
in
sbbb
aam
inc
fwait
push
pop
inc
hlt
popa
xlat
inc
push
std
dec
jecxz
xchg
pop
sbb
int
pop
aaa
push
stos
add
mov
mov
add
or
sub
shrb
mov
cwtl
inc
daa
pusha
repnz
sbb
es
rorb
sahf
subb
rcr
and
aaa
xor
aad
pop
call
or
ss
addr16
push
or
pop
xor
mov
mov
or
into
sbb
jbe
lods
mov
xlat
add
dec
pop
or
enter
fsubl
adc
test
add
cli
ret
addr16
cmp
mov
xchg
pop
pop
movb
cmpsl
cmp
inc
or
xchg
cmc
pop
divw
xor
mov
mov
jl
shr
lret
jo
mov
push
jno
dec
push
adc
rolb
push
insl
cmc
add
xchg
mov
stc
pop
push
ret
inc
rolb
and
xchg
nop
fistl
scas
mov
mov
and
mov
pop
mov
jg
inc
mov
push
jg
cmpsb
push
fs
pop
scas
fbld
jns
jp
jns
jg
jecxz
or
xchg
mov
fmulp
mov
int3
fldt
sub
dec
pop
pop
or
bound
add
iret
cld
aaa
push
xor
ffree
mov
aaa
mov
int
jmp
inc
fldenv
popa
in
imul
insl
or
cmpl
mov
pop
sbb
dec
out
in
cmp
xchg
andl
int3
mov
push
daa
mov
jns
out
les
outsl
out
or
mov
add
fmuls
ss
ret
xchg
push
hlt
jo
xchg
mov
inc
adc
inc
cmp
cmpsl
mov
in
sub
push
inc
movsb
dec
add
rorl
dec
test
xor
adc
insb
jl
sahf
enter
aaa
out
je
pop
das
pop
pop
faddp
push
ja
xlat
mov
mov
sub
and
lock
mov
sub
orb
or
pop
test
fcoms
jmp
cs
lcall
xchg
push
sub
enter
testl
popf
mov
aam
int3
cmpsb
xchg
jp
pop
lods
adc
jns
add
adc
rorl
inc
jae
lret
fstpl
sbb
gs
add
sub
push
push
push
lcall
pop
orl
int3
int3
fistpll
cltd
xlat
cmp
pop
adc
mov
add
stos
bswap
sbb
call
in
add
and
loope
mov
jo
faddp
insb
jge
cs
push
xor
test
mov
or
xlat
dec
iret
bnd
out
push
dec
pusha
mov
sbb
fdivp
cltd
cmp
push
mov
jbe
int
pop
jno
stos
mov
dec
loope
mov
lea
adc
mov
repz
inc
cmp
out
cmp
sbb
and
in
dec
lods
mov
aas
movsb
add
and
loope
push
mov
adc
gs
int
and
dec
jg
xchg
push
int3
cmp
test
scas
into
xchg
pop
fistpl
gs
and
inc
ret
div
lods
xor
aaa
jl
dec
mov
cmp
cmp
ret
scas
jbe
sub
cmpsb
adc
cmp
arpl
and
sbb
je
dec
je
dec
xor
pop
stos
dec
sbb
sbb
xor
sub
shlb
mov
xor
out
jnp
push
test
push
inc
int3
scas
inc
add
pop
dec
cmp
jge
cmp
mov
test
jnp
or
pop
push
push
jns
lods
dec
scas
mov
xlat
push
aas
data16
ficoml
outsb
movups
fwait
xor
daa
lret
test
or
sub
adc
pop
cltd
sbb
dec
cmp
dec
mov
sahf
jbe
cmc
dec
push
and
lock
jno
test
push
dec
mov
arpl
pusha
aad
aad
push
xchg
pop
int
pushf
xorb
inc
pop
mov
xor
sti
and
pop
push
ds
mov
or
loope
sbb
add
call
adc
outsl
jmp
adc
das
sub
add
add
aaa
addr16
cmp
js
mov
mov
add
sub
cli
push
push
and
or
inc
push
adc
popl
xchg
andb
mov
cmp
jns
xor
lock
int
add
push
add
sbb
pop
xchg
adc
push
mov
mov
fmull
xchg
ds
add
scas
mov
or
mov
icebp
into
push
hlt
and
je
adc
jmp
sbb
gs
fisubs
outsb
jne
mov
mov
clc
shlb
cmpsl
mov
ljmp
neg
int3
inc
dec
mov
sub
jle
jle
sbb
hlt
mov
pop
xor
iret
lahf
inc
jnp
mov
pop
sbbl
outsb
idivb
mov
push
dec
jne
call
or
xchg
jb
sub
and
and
xchg
xchg
nopl
dec
repnz
or
movsl
push
int3
xchg
testl
push
clc
adc
leave
xchg
outsl
mov
xlat
repnz
inc
add
push
jo
gs
pop
pop
xor
cmpsb
pop
dec
dec
out
add
test
sti
ret
mov
sarl
and
orb
sub
push
push
sbb
in
sub
cmp
dec
cvtpi2ps
adc
sub
aam
mov
sbb
dec
and
ficompl
addl
or
sarl
mov
cmp
add
call
lods
aad
aaa
adc
jge
add
jp
dec
das
xor
das
sti
cmc
or
outsb
cli
jae
push
sbb
pop
dec
pop
sub
add
jb
loop
ret
cmp
mov
shlb
fs
in
sbb
sar
inc
fldcw
outsb
adc
mov
sbb
sub
mov
cmp
in
icebp
xor
loopne
testl
fidivs
rolb
lock
jmp
imul
lcall
sub
int3
jno
fwait
sbb
sahf
push
mov
loope
pop
fwait
jbe
aaa
inc
std
dec
movsl
push
imul
push
scas
mov
scas
and
adc
sub
push
stos
mov
shll
aas
faddl
outsl
repnz
sub
nop
call
loope
xor
mov
pusha
dec
std
sub
fbstp
xchg
hlt
pop
roll
jne
add
ret
jge
jmp
xor
cmp
xor
lods
shll
test
pop
adc
push
jns
inc
imul
mov
mov
test
cwtl
insl
xor
mov
dec
fimull
leave
pop
jle
leave
xchg
xor
icebp
pop
stos
in
test
int3
inc
mov
add
xor
popf
outsb
pop
mov
push
add
push
jg
mov
sub
inc
das
sub
or
shr
imul
aad
dec
mov
ljmp
inc
mov
push
pop
mov
sbb
mov
out
idiv
jge
jns
movsl
and
sub
repnz
dec
rcr
cld
adc
ss
sbb
ffreep
dec
pusha
dec
and
dec
test
dec
fcmovbe
xchg
jo
jb
rep
mov
mov
pop
xchg
xchg
je
mov
iret
adc
lea
push
aam
pop
push
std
jmp
lods
add
jns
int
add
sbb
and
xchg
mov
cli
pushl
lret
mov
mov
mov
outsl
scas
push
adc
in
pop
jno
mov
bound
mov
lods
movsb
cmp
rcrl
push
push
pop
lea
or
push
lret
ja
push
icebp
push
adc
sbb
jae
mov
jb
ffreep
out
lret
and
sub
xchg
adc
ljmp
decl
icebp
sti
mov
fstp
out
ljmp
inc
or
push
std
sarb
lret
mov
xor
mov
sbb
movsb
mov
imul
push
lcall
shrb
xor
lods
call
scas
sbbb
pop
xchg
stc
movsb
sbb
out
test
in
sbb
pusha
sbb
sub
push
jg
es
das
shll
rolb
push
inc
repz
fstpl
dec
in
in
push
not
and
adc
dec
idivb
lods
cmpl
call
pusha
movsb
call
movsl
mov
push
adc
fwait
es
dec
ret
mov
xorl
xor
inc
mov
nop
mov
sbb
jge
dec
shll
pop
mov
xchg
out
xchg
int3
sub
stos
leave
aad
cltd
out
lret
movsb
jns
ds
xchg
push
jne
dec
add
mov
mov
inc
add
fistps
sbb
inc
sbb
mov
or
mov
jecxz
fisubl
ret
xor
mov
dec
mov
dec
cmc
out
pop
push
and
clc
insb
lret
fsubs
add
fidivl
pop
es
sbb
mov
pop
and
sub
and
pop
stos
xor
in
mov
add
jae
mov
enter
sahf
xchg
fwait
sub
lret
mov
mov
loope
inc
outsb
add
push
lcall
ss
das
ret
dec
pop
mov
inc
lock
inc
push
cmc
ljmp
call
pushf
jg
pop
xchg
pop
clc
dec
pop
mov
loop
stos
jo
out
push
or
arpl
popa
xor
inc
mov
sub
scas
sub
shl
ljmp
pop
mov
sbb
gs
popf
mov
test
adc
adc
cmp
rolb
cmpsl
aaa
jecxz
mov
test
and
add
rclb
fs
cltd
movsb
sbb
xor
divl
jp
push
push
popa
dec
outsl
mov
cmp
sub
or
sub
push
xchg
xor
sub
loopne
xor
mov
sbb
frndint
shl
out
andl
aad
pop
daa
mov
adcl
ds
dec
insb
pop
fbstp
xchg
movsb
idiv
movsb
imul
or
inc
scas
pop
jecxz
iret
xchg
sub
pop
in
cli
faddl
mov
pop
inc
pop
or
mov
inc
andb
inc
fwait
sbbl
insl
inc
jbe
imul
mov
out
aaa
ds
xchg
mov
data16
inc
sbb
jle
stos
aaa
sub
insb
jo
adc
add
mov
add
mov
mov
pushf
ss
jge
popa
cs
adc
push
push
xor
xchg
xchg
pushl
div
jecxz
sti
lret
jge
lods
mov
jmp
jp
pop
test
sub
sub
cs
mov
out
xchg
das
sub
cltd
rclb
je
mov
sahf
jge
or
fs
inc
mov
push
push
stc
push
insl
dec
imul
enter
mov
dec
adc
loop
add
adc
sti
das
divl
cmp
or
cwtl
mov
sbb
inc
adc
adc
bound
faddl
jl
jl
dec
sti
out
pop
cld
icebp
ficoms
pop
inc
add
test
test
and
loop
jnp
dec
cmc
mov
jecxz
sahf
rolb
inc
inc
fnstsw
mov
addr16
adcl
or
das
xlat
scas
sub
lea
popf
or
ds
mov
mov
lret
pop
pop
daa
adc
test
xchg
push
jbe
jle
adc
mov
xchg
cltd
and
or
fs
xchg
mov
in
mov
filds
mov
fdiv
sub
imul
cs
sbb
pop
stos
inc
mov
icebp
cmp
fisubs
insl
or
sbb
adc
mov
or
sub
popf
repnz
mov
insl
sbb
je
pop
jmp
dec
adcl
jns
fwait
mov
jg
mov
xor
enter
imul
jg
pusha
mov
inc
shlb
loop
outsl
adc
dec
xchg
lcall
push
push
leave
icebp
inc
and
lods
fbld
cld
xchg
into
test
stos
push
daa
into
subl
jp
mov
lock
enter
lcall
dec
jecxz
imul
push
xlat
mov
test
push
xchg
push
mov
push
adcl
scas
lret
sub
xor
mov
testb
cmpsl
popf
or
cmpsl
stc
fnstenv
inc
mov
aad
mov
sub
inc
xchg
outsl
fldenv
test
mov
pop
inc
xor
cmpsl
hlt
lds
daa
fs
pusha
lret
adc
aas
subl
mov
test
mov
push
sub
sarb
and
jbe
and
pop
push
or
orl
imul
jmp
data16
adcb
xchg
xor
pop
out
fnstcw
addr16
jno
std
mov
and
daa
cmp
cmpb
cmpsl
dec
dec
or
in
push
int
js
sub
push
jns
inc
iret
bsf
push
push
jl
lret
shll
enterw
cld
jo
loopne
add
fcom
and
cwtl
sbb
inc
mov
test
loopne,pn
cli
sub
cmp
adc
lret
cs
repnz
sub
or
cmpsb
pop
sarb
popa
xchg
test
add
jle
orb
cmp
push
cmp
or
out
imul
clc
pop
inc
push
xlat
aas
lret
pop
lret
add
gs
or
and
imulb
mov
cmp
push
adc
movsl
and
inc
lods
insl
add
mov
popf
inc
rclb
pop
in
mov
mov
mov
test
jb
popa
jl
lret
jmp
shll
jnp
dec
pop
notl
add
loope
dec
and
les
imul
inc
ret
inc
xor
cmc
mov
xchg
cld
adc
pop
dec
mov
out
lret
inc
pop
pop
xchg
pop
cltd
or
insb
lahf
adc
sub
inc
inc
arpl
cmpsl
and
mov
clc
sbb
loop
and
repz
mov
and
and
jp
lds
sbb
popf
mov
push
sbb
push
pushf
jmp
mov
ret
ja
cs
xchg
cmpsb
out
mov
divl
push
pop
or
cs
outsl
insb
xor
mov
mulb
daa
xor
insb
jg
xchg
lret
std
mov
xor
jmp
and
cmc
aas
xchg
sarl
das
inc
test
insb
adc
cli
mov
test
xchg
enter
jmp
es
scas
jnp
cmp
sbb
push
push
jl
in
pop
push
movsb
jnp
adc
mov
pop
lret
xor
das
inc
in
mov
xchg
adc
jae
xchg
cmp
add
mov
push
cld
test
mov
fidivs
inc
or
imul
xchg
push
mov
cs
mov
vmwrite
mov
pop
jl
jns
push
loop
mov
jl
scas
mov
cwtl
and
les
cmc
mov
ja
add
push
cmp
insl
mov
test
rolb
push
mov
sbb
les
mov
cmp
ret
inc
dec
xchg
aad
dec
adc
in
sub
mov
outsl
sub
insb
cmp
cmp
or
xlat
adcl
jb
stos
aaa
mov
pop
movsb
ljmp
das
out
or
addr16
adc
sub
and
mov
inc
inc
bound
pop
mov
and
xlat
fs
lret
mov
sub
mov
cli
enter
loopne
adc
push
mov
mov
mov
in
into
dec
lods
add
xor
psrad
pusha
inc
fiadds
mov
fnstsw
sub
pop
loopne
and
mov
jle
dec
loope
shll
filds
or
sbb
adc
xchg
loop
sub
cmc
aam
scas
jno
mov
ds
subb
jl
roll
por
pop
imul
pop
or
stos
stos
ds
xchg
mov
lods
jne
cs
gs
enter
es
out
cld
xchg
pop
pushf
mov
sbb
xchg
stos
cmp
mov
loop
mov
ret
sti
in
cltd
pop
cmp
and
dec
cmp
lahf
mov
xorl
mov
sub
mov
lcall
or
add
mov
daa
adc
mov
inc
cmp
out
out
into
in
or
and
arpl
divb
or
dec
add
inc
repz
push
fnstcw
mov
andl
bound
mov
xor
icebp
xor
orl
jge
lds
fistpl
add
dec
pop
mov
leave
cmpl
mov
cmpb
xchg
pop
out
daa
mov
aaa
loopne
cmc
sub
inc
dec
jmp
popa
mov
lods
or
push
or
adc
idiv
aas
addr16
js
lds
lret
out
mov
mov
ret
pushl
lea
jnp
jnp
pop
sarl
sbbl
pop
lcall
into
jns
rcrb
sub
lret
sti
js
int3
xchg
xor
dec
pop
inc
sub
inc
int3
jbe
test
loop
pop
sub
or
sahf
icebp
jecxz
fs
dec
mov
shll
adcb
popl
repz
lods
dec
jns
lahf
fistpll
iret
lret
imul
mov
insl
fst
out
mov
in
ds
mov
inc
or
loopne
and
xchg
int3
lods
pop
or
aas
out
jp
bound
xchg
mov
pop
lock
iret
mov
jg
aad
test
inc
push
cmc
sbb
out
xchg
in
inc
push
test
dec
dec
movsl
roll
jnp
jle
pop
cmpl
push
js
insl
mov
leave
iret
iret
sahf
cmp
or
icebp
ljmp
dec
xlat
sar
add
jnp
lret
xor
cmp
cmpsl
lods
jg
outsb
and
inc
arpl
mov
ljmp
iret
psubq
lret
mov
pop
dec
mov
test
out
pop
xor
js
cmp
fsubp
push
lods
xchg
popa
jb
setbe
dec
scas
cli
jns
leave
add
mov
and
mov
pushf
sar
sub
ret
cmp
dec
mov
rcll
mov
mov
cltd
xor
mov
mov
repz
mov
dec
sbb
push
lods
or
in
jb
mov
push
sti
cwtl
xrelease
pop
ficoml
inc
stos
adc
mov
add
cmc
movsb
minps
lds
je
adc
js
cltd
mov
test
push
xlat
push
mov
xor
aas
sti
insl
add
and
test
in
incl
sub
mov
xlat
js
and
push
fists
lods
cmp
loope
mov
int
push
das
mov
sti
hlt
push
cmc
dec
pop
sbb
sarb
push
mov
test
inc
pushf
aas
ror
in
push
jnp
inc
or
dec
mov
or
adc
call
daa
and
adc
jno
cmp
imul
jno
mov
jecxz
incl
or
mov
push
xchg
enter
pushf
repz
pop
arpl
addr16
cmpl
loopne
ficoml
rorl
dec
repnz
sub
or
repnz
dec
mov
sbb
jecxz
bound
cmp
mov
sub
mov
push
and
rcrl
mov
lock
mov
jae
pop
in
xchg
xchg
and
shll
jg
mov
jns
mov
mov
out
inc
xchg
push
les
leave
lret
push
xorb
pusha
cli
jne
lds
cli
fwait
jp
xor
jbe
mov
mov
lret
mov
gs
mov
xchg
push
scas
aaa
cwtl
pop
ja
leave
mov
xchg
roll
mulb
inc
sbb
push
sti
dec
ret
loop
ja
lds
xchg
mov
fnstenv
push
cld
pop
or
arpl
and
fidivrs
mov
inc
shrl
mov
popf
xor
sub
xor
movsl
dec
aaa
test
fucomi
popa
mov
mov
mov
push
fdivp
je
call
je
sub
jo
pop
jl
xchg
jge
sub
divb
std
ficompl
jb
mov
adc
mov
mov
mov
mov
and
xlat
sbb
xchg
push
cmpsl
xor
jecxz
shl
das
movsb
jge,pt
lods
jnp
inc
dec
and
mov
mov
outsl
push
inc
jmp
int
sbb
in
dec
cmp
pusha
rcrl
mov
adc
aad
pop
xchg
nop
dec
push
mov
cmpsb
fdivrl
rcrb
inc
test
add
mov
into
sarb
sarl
jno
jno
add
or
pop
mov
mov
in
movsl
push
shlb
xchg
rorb
jle
pop
dec
mov
cwtl
cmp
inc
lcall
jb
dec
inc
mov
subb
cs
mov
lret
xchg
xor
pop
xor
in
ja
jle
inc
adc
mov
cld
mov
lret
fmull
push
insb
shll
cmp
repz
push
cmpsb
popl
inc
clc
cld
aam
or
xchg
test
push
pop
sbb
push
inc
jb
jo
or
cmc
rcrl
ss
stos
addr16
push
dec
repz
popa
inc
push
dec
jb,pn
js
add
mov
pusha
dec
sub
adc
mov
rorb
pop
xchg
pop
and
push
cmp
incl
icebp
mov
pop
sbb
mov
lret
sahf
xor
ret
les
in
ret
dec
addr16
pusha
xchg
cmc
lods
inc
in
xchg
adc
je
jnp
scas
sub
idivb
fstpl
xorb
stc
dec
push
inc
sahf
inc
inc
pop
mov
jge
mov
dec
sub
cld
pop
pop
gs
loop
pop
jns
dec
add
mov
pusha
inc
ficoml
push
adc
fwait
pop
mov
fcmovb
add
je
sbb
mov
outsl
nop
mov
rol
fmuls
je
sub
out
icebp
push
aad
push
mov
inc
lret
roll
shrl
push
inc
sarl
mov
push
pop
fidivrs
cmpb
and
xchg
push
push
dec
xlat
stos
scas
in
jnp
dec
sub
inc
insb
push
or
adc
sbb
cwtl
imul
leave
push
push
dec
sub
popf
scas
mov
loope
arpl
sti
cmpl
and
inc
idivb
into
notl
xchg
or
shrl
jae
fs
sahf
inc
mov
dec
cmp
mov
fistpl
ret
xchg
push
jle
in
sbb
xor
mov
adc
addr16
arpl
insb
test
cmc
cmpsb
cmp
out
and
mov
jae
fistpll
outsl
ret
and
fldl
cli
cmp
int3
pushl
dec
adc
jae
cmp
jle
adc
sbb
pop
sub
add
pusha
pop
mov
dec
jp
and
fisubs
xor
mov
arpl
push
std
jb
cwtl
adcb
movsb
and
jb
mov
xchg
filds
loope
rcrb
aam
push
nop
fidivrl
ss
sub
mov
pop
mov
cwtl
adc
lock
ja
mov
adc
daa
xchg
mov
sahf
cld
cld
push
clc
and
sbb
imul
cltd
inc
je
jp
adc
das
dec
fistps
subb
bound
xor
cmp
outsb
xorb
das
xchg
jp
pmulhw
aad
in
popf
xchg
sub
inc
push
mov
movsl
fists
add
stc
pop
insb
les
addb
and
fcoms
jmp
jle
fisubs
cmp
test
pop
or
lock
jmp
mov
clc
repnz
cmpsb
je
adc
xchg
xchg
cmpsb
imul
xchg
mov
xor
imul
push
sub
mov
mov
dec
icebp
mov
bound
mov
pushf
fldt
fdivrs
ss
clc
push
sbb
movsl
sbb
sub
sub
inc
jp
cmp
jp
and
mov
outsl
bound
fisttpl
test
xchg
popf
inc
push
or
cmp
fists
in
adc
mov
jo
aas
imul
cmpsl
xor
jecxz
popf
or
pop
in
add
inc
clc
xchg
mov
icebp
stc
sahf
add
sbb
and
push
sub
test
fnstsw
pop
xchg
ret
inc
jg
test
push
in
in
xchg
xchg
add
pop
les
dec
aam
fstps
mov
add
js
push
jb
adc
jp
dec
outsb
sub
mov
add
lods
xchg
sbb
pop
les
jnp
fwait
call
add
mov
mov
add
divb
mov
mov
push
fbstp
ds
jmp
aad
xchg
imul
jbe
xchg
dec
mov
mov
inc
push
push
imul
fs
mov
loop
sarb
jb
enter
dec
in
pop
xor
push
ret
jmp
mov
arpl
insl
fs
mov
in
xchg
int3
mov
mov
and
cs
pusha
cli
icebp
add
cmc
ret
mov
ret
jg
xchg
add
inc
dec
xlat
jmp
outsl
xor
sbb
sbb
jp
xchg
lds
ret
jle
pushf
sub
data16
mov
aas
idivl
pop
lods
fmull
gs
jecxz
sbb
pushf
or
inc
dec
test
cmp
leave
xorb
fists
es
insl
adc
loope
outsl
xchg
pop
adcb
push
mov
aas
sbb
icebp
xlat
clc
adc
das
lret
int3
push
imul
xor
sbb
loop
pop
insb
mov
pop
fiaddl
adc
cltd
jmp
lea
xor
dec
push
adc
inc
push
sub
sbb
insb
add
leave
or
lds
mov
dec
inc
jg
lret
mov
and
jne
cmp
sbb
and
outsb
test
jg
orl
fwait
xor
cmp
inc
test
lahf
addb
mov
jg
jno
incl
pop
push
in
or
xchg
out
xor
repz
lret
fcompl
faddl
test
push
push
ds
dec
sbb
pop
sub
adc
mov
je
in
pop
sti
outsl
shll
jge
movsb
or
dec
stos
in
pop
mov
popf
adc
adcl
mulb
jg
decb
icebp
push
pop
cmp
and
andb
lret
inc
or
jns
sbb
popf
jl
push
or
pop
xchg
int3
lcall
rol
lods
xchg
hlt
mov
idiv
jns
gs
sbb
jne
add
or
inc
ret
aam
mov
push
or
call
jb
pop
sub
sbb
sub
mov
sub
adc
ss
insb
push
cwtl
cmc
mov
push
pushf
and
pushf
cmpb
loop
out
pop
jae
rcll
in
and
dec
icebp
pop
cmp
insb
pusha
pop
jne
mov
loope
push
sub
fadds
mov
sub
in
xlat
divb
and
pop
and
mov
dec
test
pop
cmp
lret
inc
andl
dec
aas
loope
rorb
in
cmp
sbb
add
jno
jge
ds
add
fsubrs
jne
xor
dec
fsts
pushf
ret
jg
add
cli
xor
mov
sbb
xor
sub
inc
mov
sti
arpl
add
xor
outsb
sub
fcmovne
jne
pop
es
lahf
lock
pop
jle
add
lret
or
repz
loop
push
mov
xor
scas
int
pop
in
stos
js
push
pop
cmc
loop
mov
popf
sub
mov
mov
sub
andl
pop
aas
filds
push
roll
enter
mov
pop
lcall
jp
adc
mov
sbb
fldl
xchg
mov
shl
xchg
push
mov
mov
jecxz
inc
outsl
js
repnz
dec
and
cmc
or
jecxz
dec
mov
sbb
and
rorl
mov
xchg
inc
jb
lret
iret
movsl
shlb
mov
loope
lea
loop
xchg
daa
imul
loopne
mov
dec
jno
repnz
pop
pop
aaa
scas
mov
xchg
pop
sahf
mov
xor
cmpsl
pop
out
rorl
push
jg
pop
mov
jl
icebp
int
ss
out
mov
adc
push
sbb
dec
lcall
ljmp
fadds
cs
fstps
pop
test
and
fcomip
or
pop
lods
fcoms
jle
pop
mov
or
lcall
outsl
popf
cmp
ja
mov
mov
ret
pop
and
mov
out
mov
pop
adc
add
cmp
sub
jo
lret
inc
aaa
icebp
outsb
inc
or
xchg
jl
jl
xchg
sbb
insl
nop
ds
jns
fidivrs
ljmp
lods
lcall
movsl
scas
pop
mov
push
add
ss
nop
xchg
xorl
es
pop
repnz
rcrl
fwait
stc
push
inc
outsb
lock
fwait
scas
push
or
in
test
flds
pop
adc
xorb
sub
jmp
in
fwait
pop
out
mov
adcl
ljmp
fsts
aaa
js
inc
les
sti
in
push
sti
mov
pop
in
cwtl
and
movsb
stos
out
mov
sbbb
in
inc
enter
decl
inc
jnp
fisubs
sbb
dec
cmp
mov
xchg
dec
jbe
gs
out
mov
pop
aam
or
cmpsb
pop
iret
pop
int
or
movsl
jbe
add
lret
mov
bound
sbb
pushf
sarl
orl
pop
mov
cmp
jae
dec
and
inc
into
jge
cmpsl
call
enter
xchg
ret
push
push
mov
add
fs
xor
outsl
mov
pop
cmp
dec
or
stos
sub
in
xchg
inc
add
in
inc
xor
adc
ljmp
mov
stos
cmp
out
into
sbb
mov
mov
test
sub
push
jl
shl
sti
addr16
push
shrl
je
mov
rsqrtps
rcrb
iret
arpl
mov
lock
pop
stos
or
jg
inc
jmp
stos
mov
dec
dec
repz
fs
or
inc
mov
repz
ret
pushf
inc
int
addr16
loope
mov
stos
mov
sbb
push
pusha
inc
jge
lret
pop
cmc
xor
mov
rolb
call
mov
cwtl
out
jecxz
mov
sub
mov
inc
inc
jmp
inc
call
mov
dec
lock
push
fs
xor
les
enter
jns
pop
cmp
ds
gs
sbb
lcall
add
xchg
ffreep
lods
and
push
popf
lret
hlt
dec
stc
push
test
dec
fbld
in
push
sti
cmpsb
add
out
popa
mov
mov
jb
out
dec
inc
jno
test
push
pusha
and
scas
out
add
and
ds
sbb
mov
in
xchg
mov
mov
hlt
pop
lret
mov
inc
mov
xchg
push
adc
pop
jne
sub
lods
leave
or
pop
std
cmp
push
std
shrl
imul
push
insl
inc
stc
add
stc
loope
movsl
lock
pop
push
sbb
xor
arpl
sbb
movb
or
imul
lahf
std
in
dec
cmp
cli
jmp
test
sub
scas
cmc
sbb
dec
inc
or
fs
xchg
jbe
pop
popf
adc
movsb
lcall
insb
pop
arpl
push
pop
cld
cmp
inc
inc
shlb
adc
imul
and
cmp
xchg
call
xorps
jb
inc
scas
pop
std
out
cmp
lds
shlb
into
mov
add
icebp
and
or
ficompl
dec
cmp
insl
add
je
pop
mov
adc
int3
int
jle
adc
pusha
sbb
mov
cmpl
imul
pop
scas
cmpl
mov
cli
dec
aaa
cmp
fs
clc
mov
cli
xchg
mov
enter
cmp
adc
pop
mov
add
sbb
push
and
int
jo
aam
call
stos
sti
add
inc
fcomp
arpl
inc
leave
or
mov
orl
xchg
pop
mov
imul
int3
mov
mov
subl
push
xlat
cwtl
push
or
das
rcrl
jl
adc
sub
pop
fldl
stc
push
in
pop
test
lret
pop
ficoml
popa
in
cmpsb
int
jmp
sbbb
cmc
arpl
add
mov
and
or
mov
ds
pushf
xchg
adc
add
or
pop
int3
filds
lea
dec
cltd
cmp
xchg
mov
sbb
mov
cwtl
jno
scas
cwtl
repnz
aam
xchg
inc
mov
bound
mov
pop
out
fstps
xchg
pop
pop
pop
mov
loopne
jl
mov
mov
pop
and
or
mov
and
mov
xlat
cmp
cmp
add
add
and
pop
lcall
jg
not
divb
out
xor
xchg
imul
xor
stos
adc
dec
cmpsl
xor
lcall
and
or
rcrb
rcrb
repnz
sti
dec
aam
sub
push
aaa
out
jecxz
jae
call
lcall
cmp
adc
faddp
mov
ret
mov
icebp
insb
inc
lahf
cmp
add
cmpsl
fiadds
cs
fsubrl
mov
xor
jnp
inc
jge
into
mov
mov
inc
jnp
mov
mov
xorb
test
sbb
or
fildl
add
mov
jns
mov
sub
or
cli
adc
in
insl
fisttpl
repz
add
push
into
sti
xor
pop
jmp
pop
addr16
inc
int3
jg
jo
adc
push
imul
add
xchg
fildl
dec
notl
adc
and
mov
mov
ret
xchg
jmp
stos
icebp
test
xchg
mov
or
jl
lcall
ret
push
scas
push
pop
xorb
insb
jecxz
or
pushf
jecxz
das
ficoms
xor
cmpsb
pop
inc
xorb
mov
fwait
sub
dec
cmp
lock
add
shrl
and
xlat
mov
jnp
jno
dec
mov
push
inc
in
cmp
arpl
jle
je
xchg
popa
cld
lahf
shrb
cmp
adc
fs
push
or
sub
mov
mov
scas
dec
xchg
mov
mov
mov
sti
in
push
inc
inc
or
rcrl
iret
dec
jno
mov
arpl
mov
mov
fistpll
les
cmp
cmc
dec
xor
sbb
ja
dec
fwait
xor
adcb
pop
jns
fwait
or
jns
jecxz
add
sub
cs
das
dec
sbb
lret
inc
jecxz
call
es
ja
jp
lret
xchg
ss
repz
enter
lods
lock
push
int3
or
and
xor
xchg
std
je
adc
call
xor
pop
repz
jns
and
fists
push
leave
fnstsw
jecxz
call
or
call
repz
jecxz
in
ret
push
or
mov
movsb
mov
jl
jl
ljmp
insb
adc
pop
in
pop
cmpsb
inc
mov
ret
fbld
adc
push
jge
cmp
fldt
pop
add
je
push
pusha
or
jne
mov
mov
sahf
dec
test
aas
dec
xchg
dec
inc
xor
rcr
xchg
or
stc
jle
les
mov
and
xor
sbb
dec
das
imul
ljmp
and
mov
mov
fwait
sbb
cli
outsb
stc
andb
push
add
popa
ds
or
jno
shlb
dec
inc
push
sub
xor
adc
pop
mov
sbb
cmpl
cmc
dec
mov
pushf
imul
rolb
mov
inc
mov
mov
xchg
add
xorb
dec
hlt
setae
mov
in
in
xorb
mov
out
sbb
sub
pop
stos
shlb
lret
xchg
pop
cmpsl
daa
mov
jnp
push
jp
adc
xlat
mov
ret
pop
addr16
dec
cwtl
mov
inc
stos
sub
out
jne
sub
pop
lock
mov
jecxz
mov
lret
pop
xor
mov
mov
add
sbb
dec
inc
cli
mov
test
sub
rorb
negb
incb
sbb
js
cmp
out
mov
nop
mov
gs
xlat
add
or
call
pop
mov
inc
push
dec
jae,pn
push
bnd
and
loope
dec
jne
leave
sub
aad
mov
shrb
repnz
sbb
shl
out
cli
jecxz
call
mov
add
bound
add
add
cmpl
jns
jbe
push
scas
mov
jo
aas
xchg
mov
in
add
xlat
push
fwait
sub
fstpt
cmp
dec
sbb
xchg
mov
sbb
mov
mov
data16
xlat
das
sbb
add
jle
push
lds
jo
mov
inc
adc
mov
xchg
cld
les
xchg
jle
stos
call
outsl
test
rcl
sub
sub
mov
lods
mov
xor
out
das
out
dec
loopne
sahf
add
and
ret
bound
call
push
popa
and
inc
cmc
dec
iret
js
xchg
mov
pop
insl
fcomps
mov
xor
fisttpl
cmp
pop
loop
cmp
mov
cwtl
xlat
inc
pop
outsb
push
jb
xor
in
inc
int
sarl
in
push
fbld
jne
sub
jne
adcb
cmp
push
stos
iret
and
sbb
aaa
push
ja
gs
stos
dec
cmp
mov
dec
inc
xchg
test
lret
test
nopl
push
rcrl
lods
ljmp
stos
addr16
mov
aaa
mov
ss
cwtl
outsb
loopne
call
xchg
movsb
push
test
lods
sbb
es
fistl
lret
xchg
xorl
cli
jne
ret
dec
cwtl
cmp
aad
popf
jle
cmp
xchg
imul
adc
jbe
sbb
cmpsb
push
cmpsl
fst
xchg
movsl
test
leave
ljmp
adc
mov
mov
sbb
call
cmp
mov
dec
and
sti
nop
into
ffreep
lea
es
sbb
push
mov
outsb
cmp
cltd
std
and
sub
xchg
ss
xor
mov
add
dec
loopne
xor
pop
aam
cli
xchg
jo
cmp
test
add
mov
jp
rorb
inc
cwtl
xchg
pusha
leave
dec
push
shlb
lods
xchg
pusha
mov
popf
mov
or
lret
scas
aad
sahf
loopne
cmpsl
in
js
mov
xor
pop
leave
pop
std
in
out
inc
mov
jne
in
push
pop
cmpsb
pop
push
aaa
ljmp
lret
mov
loop
pop
out
ja
and
pushl
and
mov
arpl
ja
stos
lcall
and
sbb
mov
loop
add
mov
mov
out
int
push
test
movsb
xchg
in
adc
or
cmpsl
das
inc
std
stc
les
int
jnp
sub
xchg
lret
enter
mov
dec
pop
rcrb
and
arpl
sub
negb
jo
lds
scas
pop
stc
add
hlt
fbld
in
repz
in
jns
xlat
test
adc
loop
outsb
cmpsb
leave
fisubl
and
out
not
xchg
scas
outsb
mov
call
les
outsb
xlat
xchg
cmp
pop
test
mov
pop
psubusb
xchg
mov
out
jae
pop
rolb
in
inc
xchg
inc
xor
and
pusha
aaa
aas
jge
dec
jl
push
pop
sub
popa
in
loope
in
inc
cwtl
aam
movsb
ret
sarb
arpl
pushf
dec
fwait
pop
pop
aad
push
or
or
cwtl
fldcw
push
xchg
fcoms
fs
movb
inc
mov
les
mov
push
movsl
out
xor
xchg
sbb
push
jae
insl
dec
dec
test
popa
mov
and
mov
shrb
jnp
jl
or
push
mov
fisttps
mov
sahf
dec
repz
xor
push
sahf
and
and
addr16
in
cmp
cmp
lahf
cli
das
fcompl
push
xchg
outsl
jecxz
insb
sbb
lcall
pop
lea
nop
imul
pop
es
xlat
mov
xchg
mov
fcoml
jge
outsl
cmpsb
add
pop
xor
ds
rcr
pushl
in
xchg
cmp
mov
in
adc
inc
inc
lahf
dec
arpl
push
mov
push
aam
or
dec
and
sbb
xor
mov
aam
cwtl
daa
lgs
dec
test
adc
lret
xor
mov
and
inc
icebp
sub
xor
in
cltd
icebp
bound
bound
cmp
xlat
cli
out
add
mov
fldt
adc
arpl
push
mov
mov
dec
fists
mov
aaa
pop
jecxz
bound
xchg
xor
pop
ljmp
cmpsb
les
insb
push
fcmovnbe
das
mov
mov
add
push
cmpb
data16
test
mov
mov
pushf
jg
mov
fcom
movsb
imul
cmp
stos
andb
xor
push
sbb
cltd
adc
push
xor
pop
inc
and
dec
arpl
add
jl
pop
xchg
jp
aas
add
pop
pushf
dec
pop
jmp
lds
loop
jge
adc
push
inc
in
xchg
adc
mov
or
enter
test
aaa
aaa
cwtl
pushf
into
or
andb
imul
jae
xchg
bound
mov
adc
into
adc
std
adc
ja
add
mov
clc
fbstp
xchg
or
mov
loopne
orb
cmovo
push
test
out
jge
pop
clc
test
mulb
sbb
lahf
pop
int3
pop
dec
mov
xchg
lahf
fidivrl
outsl
cmpsl
mov
push
pop
sbb
pop
lea
js
lcall
pop
stos
fwait
and
ljmp
lods
add
lahf
sahf
mov
push
test
ret
ds
add
mov
sarl
and
ss
xchg
jne
or
insb
lods
cmpsl
pushf
sub
icebp
inc
lock
jle
xchg
sbb
adc
push
jae
rorb
enter
mov
inc
ds
movsl
jns
and
mov
aad
xor
xor
xchg
hlt
sbb
inc
inc
iret
das
fs
js
les
mov
jge
shl
sbb
adcl
mov
daa
mov
xchg
mov
adc
adc
lea
data16
arpl
sub
idivb
mov
adc
arpl
pop
ja
adc
jo
inc
bound
fcompl
sbb
mov
ss
adc
je
les
xor
insb
mov
add
ret
out
mov
dec
pop
cs
xchg
inc
jg
mov
add
mov
jg
clc
test
icebp
loop
cmp
xchg
cmpsb
sub
cli
popa
inc
rolb
xchg
mov
fdivrl
cmp
sub
leave
lock
lahf
push
ss
testb
xchg
repz
cmp
std
fsts
test
xchg
or
insl
sub
aad
in
fwait
cltd
mov
aam
enter
fldt
aaa
mov
mov
inc
in
fidivs
add
push
out
xchg
and
addr16
aad
add
pushf
cmp
and
and
bound
pop
stos
lea
lcall
out
stos
mov
xchg
iret
rolb
lds
inc
sbb
lcall
sub
fcoms
out
and
jns
shlb
adc
fimuls
pop
insl
xchg
sbbl
insb
fbld
xor
lret
lea
push
insl
setae
dec
xchg
insb
push
dec
sarl
push
pop
addr16
lods
xchg
orl
mov
jbe
sub
jg
add
stos
aaa
push
pop
and
mov
movsb
ljmp
shr
sub
xchg
xchg
movsb
push
dec
lods
adc
lret
xchg
or
xchg
add
pop
es
lahf
mov
sbb
aaa
add
jae
jmp
sahf
in
push
push
cwtl
sahf
enter
push
arpl
mov
ret
add
outsl
outsl
jno
arpl
mov
push
fdivp
aas
and
leave
push
fnsave
mov
push
jmp
mov
and
iret
sbb
fwait
aaa
bnd
addr16
out
dec
imul
jle
mov
xchg
pop
inc
aam
adc
les
xchg
mov
push
movsl
mov
in
cmp
ret
mov
add
imul
inc
cmpsb
and
cmp
pop
popa
jmp
add
icebp
stos
push
mov
adcl
mov
push
cli
cltd
flds
or
repz
add
icebp
lods
add
test
xor
icebp
pusha
pusha
add
mov
mov
jp
lds
xchg
outsb
or
mov
sbb
sbb
pop
mov
fwait
jp
and
fisttpl
cmp
xchg
cmp
mov
shll
hlt
or
int3
sub
add
ret
add
inc
orl
mov
mov
adc
lds
fmull
push
add
leave
in
jge
ficompl
push
repz
fstpl
loop
inc
sbb
adc
jge
dec
faddl
inc
jno
in
xlat
lret
and
jno
adc
inc
enter
dec
mov
mov
adc
xchg
in
sub
je
hlt
pop
shr
scas
sub
adc
call
push
pop
repnz
xor
and
add
sub
std
add
jno
xchg
icebp
cmp
dec
xor
sub
test
push
bound
and
dec
stc
std
icebp
shl
ss
shll
mov
sbb
push
hlt
out
fwait
push
lret
xor
test
cmpsl
aam
fsts
fnstsw
adc
mov
shr
jle
pushf
push
xchg
lahf
xor
das
add
out
idiv
sbb
adc
pop
andb
stos
mov
stos
xchg
jmp
aad
fistl
insl
cwtl
mov
mov
cmpsb
xchg
push
add
loop
imul
subl
cmpsb
ss
fnsave
test
adc
mov
in
loopne
push
lret
mov
cmp
mov
test
stc
xchg
aad
inc
scas
cmp
sub
cli
stos
jo
ret
and
cmp
cmp
xor
add
xor
cmpsb
jnp
call
xlat
aam
and
xchg
clc
cmp
push
das
push
cltd
mov
int
mov
xor
lcall
call
dec
ficoml
and
mov
push
xchg
int
arpl
js
sub
add
pop
push
je
aas
or
hlt
cs
pop
data16
or
mov
fwait
dec
push
fiaddl
pop
and
je
ret
outsb
add
lods
std
sbb
sbb
push
xchg
push
mov
push
cmc
sub
mov
mov
sahf
shrb
fldl
sarb
and
dec
xchg
mov
je
loop
xor
addr16
or
jmp
push
jg
inc
addr16
push
sbb
push
sub
jge
movsb
push
push
jo
sub
dec
and
stos
jne
decl
cltd
jecxz
push
insb
std
dec
push
push
cld
je
inc
pop
mov
cmp
test
push
adc
adc
fsubl
in
outsb
lahf
fldcw
test
testl
push
sbb
roll
add
adc
add
jmp
addr16
mov
orl
cmc
pop
sub
test
add
jp
sub
xchg
sub
int3
push
subb
lds
mov
xchg
lahf
rclb
movsb
sbb
jb
push
shll
in
xchg
adc
xor
clc
loop
test
out
out
dec
push
and
cmp
movsb
mov
sbb
or
cld
nop
popa
or
xchg
add
stos
jnp
js
leave
pushf
lret
insl
imul
leave
pop
jg
push
loopne
mov
repz
add
mov
cmp
out
pop
lods
fstpl
jmp
movsb
je
jecxz
mov
push
pop
test
hlt
cltd
sbb
xchg
push
ds
in
adc
xor
pop
ss
pop
jp
mov
je
sbb
mov
das
mov
cmp
mov
lea
dec
and
adcl
push
xchg
cmp
or
lahf
roll
mov
insl
jno,pn
adc
inc
ss
jg
inc
lea
sbb
xor
int3
add
ljmp
rolb
cmp
ds
in
sub
test
mov
cmpsb
faddl
jg
push
sbb
adc
nop
cmp
adcb
jle
scas
dec
xchg
ds
dec
adc
push
ss
xchg
jg
mov
mov
mov
in
mov
push
or
call
jo
push
dec
mov
adc
cli
out
int3
jno
mov
push
imul
stos
xor
cmp
jb
ret
xor
cld
sub
insl
jmp
add
lret
arpl
adc
xor
fsubs
push
add
sub
rorb
or
dec
and
push
jb
jae
pop
jmp
sbb
arpl
pop
mov
pop
pop
outsb
dec
mov
in
push
mov
jge
in
mov
insl
or
dec
mov
test
scas
sahf
pop
popa
or
cmp
dec
mov
sub
test
push
mov
adc
xchg
lahf
mov
dec
jg
iret
rcrb
clc
movsl
pop
addr16
mov
cwtl
jo
fmull
mov
jmp
xchg
leave
push
pop
ror
xchg
sub
jae
in
jmp
int
test
inc
repnz
dec
loope
test
test
inc
mov
bnd
and
or
xchg
add
negl
fidivrl
mov
pusha
icebp
push
cmp
xor
mov
es
xchg
inc
aas
imul
insl
mov
and
iret
mov
mov
add
inc
sub
int3
test
mov
dec
mov
leave
sub
ret
pop
dec
sti
test
es
cmpsl
jl
andl
scas
jae
pop
dec
jecxz
mov
mov
test
ret
inc
and
lcall
mov
das
mov
push
outsl
in
test
or
aad
aas
shll
sub
cld
pop
cs
inc
call
xchg
mov
enter
cmp
sub
mov
cld
sbb
mov
movb
pop
mov
rcrb
dec
jl
push
pop
mov
inc
push
das
fistpl
dec
cmp
loopne
pushf
dec
mov
ffreep
pop
xorl
imul
jle
add
or
mov
out
hlt
mov
push
jmp
cwtl
mov
mov
mov
or
repz
pop
mov
pop
jp
sbb
cwtl
or
aas
sbb
push
cmpsb
sub
popf
insl
xchg
dec
jnp
aaa
xorl
jle
inc
rcll
outsb
outsl
lods
ja
enter
lds
push
push
je
gs
je
cmp
jne
shrl
sti
ret
aad
xchg
mov
and
xchg
ret
sbb
int
push
inc
pop
add
lcall
mov
dec
xor
or
popw
push
mov
xchg
or
addb
std
mov
and
add
xorl
arpl
mov
int3
pusha
xchg
jp
cmp
in
pop
mov
adc
xchg
dec
outsl
lret
in
dec
jl
iret
into
cmp
sbb
fst
jge
arpl
cld
not
mov
jmp
out
sti
jbe
loope
sarb
adc
mov
addr16
mov
ret
mov
add
push
les
adc
push
jbe
fs
mov
add
aad
or
lods
mov
leave
movsl
lahf
inc
push
imul
mov
in
xchg
gs
inc
sub
ja
or
outsb
scas
mov
add
mov
lcall
ret
xor
pushl
cltd
push
jno
popf
aas
lock
sahf
push
push
pop
xchg
scas
dec
dec
xchg
xchg
mov
xchg
dec
stos
mov
movsl
add
jle
ss
jns
sbb
movsb
pusha
test
inc
xor
loopne
scas
fisubrl
xor
push
cli
sub
inc
jnp
xor
mov
xchg
outsl
or
or
mov
and
cmp
mov
pushf
and
fnstcw
test
jns
jo
lock
push
ficoms
shrl
sarl
add
and
imul
dec
cmp
std
cmc
push
mov
cmpsl
dec
arpl
xchg
out
push
scas
insb
push
and
int
mov
add
sub
pusha
mov
add
xchg
fucomp
lahf
sub
push
out
shlb
mov
test
jp
pop
inc
xchg
das
jle
aad
sbbl
mov
je
loope
mov
lock
jmp
xor
sub
add
sbb
bound
pop
arpl
dec
fstl
dec
and
mov
jmp
nop
jo
arpl
xchg
imul
mov
cltd
adc
mov
mov
stos
add
lock
or
test
pop
or
stc
mov
rorb
sbbl
jno
mov
adc
loope
or
xchg
lcall
stos
cmpsl
pop
daa
sub
sbb
or
ss
push
int
adc
std
out
adc
push
ss
imul
sbb
stos
mov
int3
pop
les
cmp
pop
lods
fdiv
mov
sbb
pop
les
mov
xchg
pop
cmpsb
jecxz
or
pop
jl
mov
stos
push
test
addr16
lock
dec
xchg
adc
inc
mov
push
push
sub
adc
out
sbb
dec
cs
mov
jge
cld
push
inc
lods
dec
mov
out
insb
mov
dec
mov
mov
adc
mov
loopne
shll
jns
or
aad
or
mov
lds
pop
decb
jl
into
popa
dec
aad
out
int3
lods
inc
cmc
hlt
push
mov
push
das
xor
cld
or
divl
mov
and
pop
pop
push
test
hlt
enter
jg
dec
je
cwtl
mov
pop
add
adc
movsb
mov
sahf
outsb
and
add
mov
or
bound
cmp
and
mov
sub
fs
into
cs
cmpsl
and
mov
in
stos
and
pop
xchg
sbb
mov
mov
pop
loopne
out
lret
mov
gs
jb
cmc
loopne
cmc
js
add
or
imul
push
jp
jg
jbe
es
aas
push
cli
pop
jge
lcall
into
lods
je
sti
xchg
mov
fs
lods
inc
jns
mov
rcr
fldl
mov
std
sub
inc
es
mov
mov
shlb
ss
test
sub
movsl
lahf
cmp
sbb
dec
adcl
or
in
jno
stc
jb
shl
insb
xor
xor
lahf
cmc
push
xchg
idivl
jle
add
add
dec
test
xor
imul
scas
jp
adc
push
push
mov
xchg
adc
js
lods
dec
jmp
scas
xchg
test
jmp
mov
dec
popa
mov
jle
dec
orb
popf
push
mov
jnp
mov
pushf
or
and
push
cli
mov
dec
imul
xor
cmpsl
dec
or
hlt
sahf
xchg
pop
cltd
mov
fdivrs
mov
rcr
push
xor
das
insb
shll
fstps
push
push
daa
bound
jl
daa
arpl
push
sbb
iret
movl
cmp
sbb
mov
mov
popf
lock
iret
rcrb
xchg
hlt
cmpsl
cli
jns
xor
sbb
xchg
out
dec
cltd
movsl
ss
out
jp
arpl
daa
decb
jne
xor
orb
mov
and
adc
test
sub
call
pop
ja
inc
jle
test
mov
repz
shlb
xor
xor
ficompl
sahf
dec
pop
cmp
ret
jg
mov
jbe
mov
mov
enter
mov
cmp
loope
pushf
push
sub
mov
iret
test
push
cltd
ljmp
testl
ja
cmc
mov
mov
and
idivb
jnp
xor
and
adc
add
add
arpl
xor
popf
test
in
mov
mov
dec
cmp
xchg
sub
and
icebp
mov
xchg
xor
mov
sub
cmp
ror
pusha
and
push
sub
test
sti
push
push
pop
out
jno
pop
and
xor
xor
dec
pushf
jmp
imul
add
jl
rcll
testl
pop
enter
mov
cli
ljmp
aam
ljmp
mov
test
push
cli
loope
jge
popf
das
sub
pop
fdiv
cli
rcrl
mov
popa
push
cmp
push
add
mov
dec
xchg
add
push
fwait
and
jg
cmp
clc
jge
lcall
cmp
pop
mov
sub
dec
inc
lcall
cltd
mov
xchg
pop
sub
xchg
adc
lods
mov
jg
adcb
out
jno
lahf
imul
fsubs
push
add
aaa
mov
ss
daa
mov
dec
pop
push
adc
or
and
dec
pop
lock
cmp
add
test
subl
arpl
lret
pop
fildl
rcll
mov
sti
xchg
inc
outsb
mov
in
stc
pop
mov
xor
pop
stos
xor
sub
out
iret
pop
ret
jb
push
or
iret
cmc
cmpsl
repz
roll
stos
sub
fldenv
dec
inc
test
cwtl
addb
xor
push
push
cwtl
mov
mov
addr16
imul
int3
mov
and
in
cltd
inc
rolb
jns
inc
mov
ret
mov
enter
dec
rolb
lahf
jo
je
scas
fwait
push
lret
or
push
jge
test
pop
lods
adc
test
jp
mov
ja
stc
xor
xchg
dec
notl
adc
into
sbbl
je
mov
and
cltd
and
pop
jp
push
add
xor
mov
push
mulb
loop
dec
mov
ret
fdivrl
push
icebp
rorl
inc
jb
jae
cmpsl
aaa
sub
and
mov
mov
pop
lock
jnp
call
movsb
xchg
mov
pop
pop
mov
or
mov
loop
mov
lock
imul
iret
popa
and
icebp
sub
repz
pop
nop
mov
in
sub
mov
jp
push
cmp
or
rorb
sub
scas
cld
ret
cmp
push
push
lret
jge
add
xchg
and
xor
mov
mov
stos
fnsave
dec
add
stos
jg
inc
inc
shlb
or
cmpsb
push
sahf
mov
sbb
sub
push
xchg
xchg
arpl
shrb
push
xchg
loop
jbe
inc
das
inc
lret
pop
data16
out
clc
mov
jnp
adc
dec
lds
or
cmp
xchg
mov
in
das
scas
cmpsb
es
mov
add
lock
mov
xor
push
inc
leave
insb
hlt
cmpsb
mov
sbb
xor
fsub
inc
lret
fwait
adcb
mov
lods
enter
iret
dec
lock
mov
js
or
cmc
push
stos
inc
push
scas
cld
leave
cltd
ss
mov
pop
fmull
sbb
les
mov
mov
jno
cmp
adc
or
lock
and
cmp
xchg
daa
xchg
ja
subl
cmp
cmp
jo
lea
pop
cmc
sbb
outsb
cmpsl
pop
lods
je
testb
daa
lock
add
xchg
push
pop
dec
bnd
adc
mov
mov
in
jnp
andl
sub
mov
hlt
iret
dec
movsl
cmp
out
xchg
std
cmpsl
popf
imul
shl
mov
sarb
fwait
outsl
rcrl
mov
je
mov
sbb
es
icebp
cmp
fldl
and
add
dec
mov
loop
pop
sbb
decb
and
insl
cmp
pop
cmpsb
inc
sub
jmp
cmp
lods
cwtl
pushf
and
insb
aaa
punpcklbw
mov
xchg
nop
jbe
loop
cmp
mov
das
push
pop
inc
lret
pop
into
jmp
mov
lcallw
xor
xchg
mov
es
mov
pop
push
push
xorl
xchg
outsb
bound
jae
iret
dec
lods
mov
xchg
add
lea
icebp
xchg
outsl
cmp
jp
imul
xor
mov
pushf
xchg
sub
add
adcb
popf
dec
sahf
scas
xchg
pop
xor
cmp
jae
dec
dec
test
dec
aad
jnp
ds
cmp
jmp
dec
adcb
enter
or
lret
add
mov
add
cmp
pop
jns
dec
ss
into
cltd
add
mov
adc
pop
sbb
xchg
jb
mov
repz
loop
inc
das
in
clc
mov
add
or
dec
jmp
daa
mov
mov
stc
ss
stos
xor
cmp
xchg
sbb
imul
mov
les
jge
or
sbb
mov
mov
mov
int
add
pop
xchg
jns
fildl
js
and
clc
mov
subb
inc
out
fcomps
push
cmp
orl
fcoms
cli
stos
cmpsb
idivb
fs
popf
push
lret
negb
jp
jae
scas
pop
cmp
arpl
xlat
aas
xchg
pushf
int3
add
xorb
or
xchg
push
pop
fucomip
mov
in
xchg
insb
push
mov
mov
inc
fldcw
rclb
add
pop
sub
sub
sub
nop
stos
cmp
pop
add
and
fstpt
xor
xor
and
mov
cmpsb
mov
andb
mov
mov
xchg
push
push
enter
lret
out
lds
test
jae
ljmp
rolb
movsb
mov
fstl
fwait
and
cmpsb
loop
xchg
inc
int
incb
das
call
stos
hlt
adc
adc
dec
sbb
jmp
dec
outsb
into
xchg
jmp
es
fwait
adc
lret
enter
das
int
mov
lock
ds
pop
lret
ss
daa
fidivrs
cmp
dec
test
cmp
bound
and
xlat
pop
movsl
push
xchg
dec
dec
dec
sti
jb
mov
fmuls
add
jo
fnsave
test
adc
cmpsb
scas
mov
fsub
xchg
jns
add
xchg
jns
test
lock
out
mov
stos
ficoms
mov
inc
jae
add
enter
pusha
int3
loop
shrl
xchg
jb
repnz
pop
xor
mov
sub
loope
mov
fstl
push
jnp
lret
mov
std
in
fsubr
cmpsb
and
popf
fwait
sub
fcoms
pop
mov
mov
test
imul
inc
xchg
jmp
xor
ja
xor
insl
outsb
clc
andb
loopne
sub
cmp
mov
jo
fwait
xor
imul
imul
push
ficoml
adc
xchg
or
iret
out
std
ficomps
push
sub
adc
sub
and
jl
and
repnz
mov
or
mov
lods
cmp
cmpsl
jg
dec
fisttps
or
sti
aaa
iret
xchg
push
movsl
inc
imul
dec
out
pop
bound
je
add
fsubl
xlat
xchg
inc
in
push
mov
cld
dec
push
repnz
and
jno
xchg
mov
jl
mov
jae
add
lock
lods
and
js
cmp
inc
outsl
push
jo
sbb
loop
dec
fdivs
fs
jnp
icebp
ds
lret
push
mov
pusha
jp
popa
jo
dec
outsb
fnsave
stc
dec
jl
fstpt
pop
out
inc
scas
xor
mov
pop
inc
popf
hlt
mov
pusha
js
int3
outsb
stos
or
in
mov
push
lret
and
sub
test
dec
mov
pushf
insl
movsl
scas
cmpsl
int3
sub
mov
sarb
mov
lock
cmpsb
sub
pop
mov
xor
movsb
push
add
or
stc
jg
mov
or
mov
cmp
fdivl
cmp
mov
or
mov
inc
push
aaa
mov
push
int3
xor
int
test
stc
movsl
and
lods
jp
push
lods
push
cmpsl
orl
xor
fwait
outsl
movsb
mov
shr
jbe
jnp
lcall
sbb
pop
loope
mov
xor
cmpsl
test
leave
pop
push
movsb
cmp
enter
mov
jl
inc
jb
std
movsb
and
cmp
pop
test
loopne
andl
int
mov
jg
in
lahf
xchg
mov
sbb
stos
ds
fisubs
es
inc
and
movsw
push
adc
push
dec
and
xchg
aam
loopne
hlt
cmp
call
cmc
xchg
mov
popa
lods
push
push
stos
das
mov
out
icebp
push
cli
push
pop
aam
jp
and
pop
in
and
cld
js
cmc
sbb
add
mov
ret
xchg
fisttps
cmp
mov
std
orb
push
sbb
loopne
sbb
and
jle
add
push
cmp
xchg
test
push
jae
cmpsl
pop
add
pop
pop
cmp
loope
fistl
out
mov
xchg
std
cmp
xchg
mov
lock
lods
mov
je
add
xchg
xchg
mov
xor
test
sbb
mov
popf
shlb
mov
jbe
adc
add
fidivrs
insl
jns
or
adc
cmp
xchg
lret
inc
repnz
dec
jmp
or
jb
fwait
out
or
and
je
xchg
lahf
dec
sbb
push
add
imul
syscall
insl
popa
mov
fiaddl
mov
gs
ljmp
fistpll
repnz
cli
das
aam
ljmp
jp
fbstp
or
xor
xor
jnp
inc
jp
inc
loope
je
xor
lods
mov
xor
lret
xchg
es
inc
ret
push
dec
popa
out
sbb
adc
inc
xchg
insl
pop
leave
push
xor
push
adc
test
fldcw
fdivs
iret
inc
mov
pop
aam
push
bnd
mov
xchg
or
pusha
mov
hlt
shl
je
enter
lret
pop
fdivrl
shl
cmpsb
inc
cltd
xlat
xchg
cmp
and
cmp
mov
lret
push
xor
inc
addr16
int3
es
sbb
outsb
faddp
std
enter
aad
xchg
mov
lret
repz
push
pop
insl
popf
mov
xor
xchg
or
in
xor
rcrb
pop
mov
push
sub
cltd
jle
mov
dec
popa
adc
push
fsubp
leave
sti
in
mov
testl
jns
add
xor
insb
inc
or
xchg
subb
rolb
xchg
pop
cmp
adc
add
add
fcmovu
adc
mov
outsl
and
lock
pop
mov
or
mov
aaa
pop
adc
mov
xchg
sbb
dec
mov
adc
and
push
sbb
add
cli
add
mov
mov
fmuls
push
pop
cld
jbe
or
das
cmpb
insb
popl
push
push
adc
adc
xchg
xor
push
movsl
push
xchg
test
xor
pushf
in
jg
mov
movsb
in
int3
mul
nop
add
js
add
subl
inc
js
aaa
test
scas
add
sub
shrl
aaa
sbb
jns
sub
bound
jmp
cmpsl
mov
rorl
fs
popf
mov
imul
sbb
notb
mov
rorl
test
lds
dec
ror
and
mov
movsl
mov
hlt
cmpb
dec
jb
sub
mov
mov
test
mov
mov
cwtl
loope
ljmp
fstpl
sbb
loop
and
out
scas
jne
sbb
fs
jb
xchg
dec
xor
mov
xchg
cmp
dec
push
jge
hlt
or
stos
dec
dec
inc
loop
dec
xchg
arpl
hlt
loopne
mov
repz
aam
dec
jbe
cld
mov
popf
jne
xchg
imul
dec
sub
jne
and
cmpsb
push
cmc
jmp
and
dec
sbb
cmp
div
loopne
inc
fistpl
add
push
cmp
cld
mov
dec
std
add
inc
ds
repz
dec
in
shrb
pop
gs
popf
add
cmp
cli
pushf
or
iret
jmp
hlt
andl
inc
and
gs
mov
les
test
fstl
sbb
enter
inc
rep
mov
scas
jle
hlt
push
insl
out
inc
sti
gs
add
fsubs
in
push
push
test
aam
push
shlb
xchg
fwait
mov
sbb
or
sub
insl
rcl
je
or
movsl
jns
testb
jmp
cmp
mov
das
out
xchg
push
out
imul
test
outsb
inc
xlat
mov
mov
div
mov
dec
mov
and
cld
leave
call
push
cmp
sbb
and
xlat
ljmp
add
sbb
testl
mov
loop
sbb
fsubrl
jbe
daa
xor
in
call
fstps
jp
rcl
jecxz
test
mov
or
sti
out
bound
out
xchg
dec
test
mov
jnp
dec
fs
lds
mov
mov
mov
mov
dec
jno
pop
fs
mov
bound
add
lcall
push
jnp
jae
ja
mov
xchg
in
mov
xchg
push
mov
les
int
clc
aas
jbe
jns
or
dec
mov
inc
or
icebp
xor
pop
sbb
sahf
movsb
mov
outsl
or
sti
jg
sbb
xchg
adc
sarb
js
call
jecxz
jge
push
sbb
jb
or
enter
mov
cmpsl
pop
mov
in
sub
and
dec
sti
push
icebp
cmp
fs
mov
pop
push
js
lods
icebp
sub
sbb
mov
out
xchg
dec
jmp
inc
dec
mov
xchg
ret
mov
push
pop
bswap
es
add
sbb
add
xor
push
hlt
popa
je
les
dec
push
std
cmp
es
xor
and
xchg
mov
inc
add
pop
and
nop
sti
inc
xchg
adc
push
mov
fbld
pop
imul
adc
scas
or
cmp
and
in
dec
and
leave
jo
je
mov
push
sub
adc
ret
push
rcr
and
bound
push
insb
inc
mov
push
negl
cmpsb
xor
mov
inc
addl
pop
out
inc
jno
pop
popf
test
mov
or
loop
mul
fs
mov
loope
xchg
ss
mov
data16
fidivs
cmp
xchg
imull
adc
test
mov
jae
adc
icebp
addb
test
test
scas
add
lods
pop
mov
icebp
lea
push
ja
mov
fnsave
adc
inc
daa
pop
paddsb
pop
sbb
or
fwait
add
lods
add
push
xchg
pop
pop
aas
cmp
xchg
cltd
sbb
add
stos
pushf
and
ror
clc
enter
imul
ret
cmp
mov
outsb
mov
xchg
stos
mov
jns
imul
or
fistps
cmpsb
pop
adc
or
xchg
adc
ret
leave
cmp
inc
mov
xchg
cmp
movsl
imul
lods
cmp
or
test
mov
stos
enter
in
pop
scas
inc
ret
enter
inc
movsb
add
rclb
cmpsl
iret
arpl
mov
popf
or
xchg
das
call
push
sti
pop
mov
sbb
sbb
je
scas
gs
jbe
inc
rcr
cld
xchg
daa
lahf
ror
jnp
repnz
add
pop
sahf
imul
and
xchg
inc
cmpsb
jo
mov
jecxz
xchg
imul
addr16
push
hlt
sti
icebp
mov
jno
ja
push
xor
ds
sahf
divl
mov
add
push
xchg
mull
sbb
popa
xchg
movsb
pop
lods
cld
adc
sbb
jbe
jmp
jno
out
addr16
clc
in
or
sub
dec
sub
pop
push
xor
dec
lret
pusha
lcall
int3
inc
push
mov
adc
mov
addb
loop
stc
ret
inc
into
imul
inc
push
and
scas
pop
pop
sbb
push
adc
lret
mov
xchg
cmp
sub
insb
shlb
push
fstps
xchg
js
jg
sbb
push
shrb
cmpsb
adc
cmc
popa
dec
sbb
std
mov
cmpsl
sub
mov
cmp
outsb
fldt
inc
xchg
sbb
jno,pn
cmpsb
jmp
pushf
mov
icebp
cs
mov
xchg
or
sub
mov
jl
jmp
ds
and
and
movsb
dec
in
jg
push
push
nop
in
aam
lcall
push
popa
mov
add
dec
js
leave
push
inc
pop
mov
mov
mov
xor
push
mov
mov
insb
fstps
mov
clc
pusha
lods
movsb
hlt
mov
dec
dec
clc
adc
adc
testb
or
inc
push
addr16
in
mov
mov
out
and
mov
dec
insl
dec
and
mov
xor
mov
sub
stos
es
fildll
or
cmp
mov
sbb
popf
fcomp
aad
out
and
sub
jmp
or
fbstp
movsb
subb
mov
mov
out
mov
icebp
jg
mov
cmc
fidivrl
adc
jge
add
rol
push
stos
sbb
hlt
push
push
or
enter
insl
stos
xor
and
bound
mov
push
shlb
rol
pop
pop
fmul
push
mov
icebp
aad
incb
push
push
call
and
fildll
push
inc
pop
ret
adc
addr16
fcmove
mov
mov
mull
fwait
rorl
aaa
in
pop
adc
xchg
pusha
cmpsl
outsl
in
test
mov
imul
dec
out
lret
movsb
xlat
mov
lret
fsub
adc
xor
movsb
push
mov
add
push
out
insb
cmc
or
mov
add
xchg
adc
mov
push
sub
lods
mov
icebp
das
inc
and
sbb
xchg
in
lret
pop
sahf
pop
xchg
into
clc
push
sub
xor
popa
jecxz
xchg
out
jmp
sbb
mov
and
insl
rcrl
xor
xlat
cmp
push
daa
lods
cld
adc
dec
sbb
lds
lock
test
sub
test
adc
loope
push
mov
aas
dec
mov
popa
xlat
lods
or
add
imul
mov
push
pop
movb
out
sbb
fsts
mov
push
movsl
in
dec
data16
jmp
icebp
jbe
fistpl
jecxz
mov
or
adc
add
sbb
pop
cmp
bnd
ds
jnp
adc
aas
in
pop
mov
inc
andb
xchg
xchg
mov
fisubrl
sbb
lahf
cmp
adc
xchg
dec
mov
add
or
push
cltd
lds
dec
out
aas
clc
jge
and
fisubl
mov
inc
scas
xor
dec
test
lds
sbb
das
cmc
xchg
xchg
mov
jb
xchg
inc
mov
xor
mov
mov
or
add
test
dec
lret
stc
cli
add
xor
aam
jecxz
lahf
sbb
ds
xchg
sub
xorl
xor
or
xchg
fsubrl
fimuls
jns
test
pop
ljmp
add
outsl
scas
jb
jb
mov
push
or
icebp
mov
imul
jle
aad
shll
mov
scas
xchg
jmp
xor
ja
push
mov
mov
mov
cmp
gs
or
aad
inc
pop
adc
ljmp
add
call
fmul
fst
push
ja
mul
xchg
xor
inc
jp
aad
sub
in
andb
adc
adc
pop
xor
lahf
adc
repnz
pop
fadds
test
jnp
test
sbb
jae
sbb
cmc
jg
icebp
pop
xchg
das
stos
fucom
mov
mov
imul
pushf
shll
lret
sbb
insb
ja
mov
out
lcall
mov
mov
ss
pop
outsl
test
mov
dec
dec
sub
pop
outsl
test
in
pop
loope
xor
jae
test
inc
das
int3
lahf
and
rcr
or
dec
xchg
ror
adc
ja
sarb
mov
lret
orb
cltd
filds
in
mov
decb
inc
adc
xchg
jle
jae
stc
jmp
pop
lds
cmp
push
fs
pushf
nop
dec
sarb
int
xor
fisttps
addr16
mov
ja
icebp
iret
adc
mov
push
testb
out
or
sbb
and
push
xchg
je
push
test
jb
push
aaa
sbb
xchg
sub
subb
and
and
outsb
mov
rcl
mov
add
xchg
push
jp
push
push
pop
and
pop
loop
sub
std
jg
or
fistpll
pop
in
mov
and
cli
and
outsb
lret
inc
cwtl
sub
outsb
jp
idivl
fucom
mov
cmp
cmp
out
dec
xchg
dec
scas
mov
mov
jle
leave
sub
sbb
and
std
popf
mov
inc
icebp
push
int3
mov
mov
mov
lret
push
jmp
xor
or
push
out
loope
push
fildll
cmpsl
push
popf
dec
imul
jecxz
leave
or
scas
jne
repz
iret
repz
insl
repnz
mov
jmp
dec
xor
arpl
movsl
cmpsb
mov
dec
scas
repz
ret
jecxz
fisubl
xlat
mov
testb
lret
data16
mov
cmp
jnp
andb
jns
pushf
rcrl
sub
jecxz
sub
mov
dec
mov
hlt
mov
add
mov
xsha1
cmpsb
dec
mov
repnz
push
insb
xchg
cmc
pop
adc
inc
mov
fstl
or
enter
seta
loopne
or
dec
test
adc
jnp
fildl
sbb
adc
addl
mov
repnz
test
das
jge
test
pop
xor
jmp
std
xchg
xor
aad
stc
es
or
inc
mov
aad
fisttpl
stos
stos
cmc
xor
lods
pop
ja
sub
les
movsb
add
sarb
mov
sub
sarb
pop
dec
sbb
ret
sahf
aad
jecxz
xor
sub
dec
or
fidivs
movb
or
lret
test
xchg
push
insl
jp
or
jmp
and
outsl
rcr
xchg
jnp
xchg
sub
xor
inc
insl
das
out
adcl
push
je
mov
nop
sub
and
js
rorl
pop
adc
mov
mov
out
jmp
cmpsl
stc
push
lret
and
stos
jo
std
mov
aas
pop
gs
inc
ds
or
jae
pop
loop
stos
ret
inc
lahf
orb
pop
insl
or
sbb
and
mov
fs
rolb
jae
sub
adc
mov
push
or
ljmp
sbb
leave
mov
cmp
cmp
scas
mov
mov
sbb
inc
push
pop
xor
cltd
fnstenv
inc
xchg
aad
mov
jne
jle
mov
in
rorl
and
mov
inc
cmp
mov
jns
adc
and
mov
jnp
xlat
cmpsl
divl
leave
testb
cli
cltd
fwait
lea
adc
aad
jg
cmp
pop
ret
std
cmp
adc
fmull
mov
add
and
test
ljmp
rorl
push
or
ss
inc
jnp
mov
inc
pusha
lods
xchg
ror
aaa
out
stc
mov
inc
mov
sub
out
outsb
outsb
std
notb
inc
dec
pop
fists
enter
mov
adc
scas
add
notb
cmpsb
fcmove
xor
jno
dec
shlb
or
jle
or
addr16
mov
mov
pop
shlb
xlat
int
leave
xchg
sar
pop
cmp
cli
push
daa
xchg
or
out
jnp
movsb
mov
jne
inc
mov
mov
stos
pop
push
pop
xor
push
in
xchg
es
divb
enter
loop
in
jp
insb
adc
jg
mov
std
fimuls
lret
jo
mov
sbb
orl
push
and
test
sbb
movlhps
movsl
adc
adc
movsb
mov
adc
int
add
dec
xor
and
mov
pop
mov
cmc
or
call
or
repz
pop
mov
xor
lahf
bound
adc
mov
pop
add
iret
lret
popf
ljmp
xor
sbb
sbbb
fldcw
popf
mov
sub
adc
jge
scas
mov
test
xchg
movsl
lods
mov
mulps
out
std
je
cmp
mov
lcall
inc
pusha
pop
lods
hlt
and
dec
cmpsl
sub
xchg
or
mov
adc
leave
aad
fwait
bound
inc
or
jne
je
scas
cmpsb
adc
test
aas
lret
test
mov
shrb
xlat
push
fs
xor
inc
xorl
fstps
in
cwtl
daa
dec
jo
cmp
inc
pop
scas
dec
mov
fadd
and
pushf
pop
sbb
jb
lcall
or
orl
xor
scas
mov
mov
mov
push
dec
sub
mov
add
call
and
out
out
cs
cmp
xchg
cmpb
push
js
adc
addb
pop
in
mov
push
add
push
es
aas
ljmp
ss
pusha
pusha
das
jns
int
sub
push
rol
dec
cs
loop
sbb
in
mov
test
cmc
pop
cmp
xchg
rol
pop
pop
mov
scas
dec
mov
or
popa
lock
enter
loop
push
arpl
mov
sbb
cmpsb
adc
xchg
jbe
sbb
sbb
jecxz
shrb
aam
jns
in
push
push
movsl
movsl
orl
ds
int3
or
mov
jo
jno
leave
scas
adc
insl
shlb
shlb
sbb
adc
cmpsl
outsl
dec
mov
aam
mov
adc
mov
addr16
push
testl
or
and
cmp
rorl
pop
lods
enter
add
imul
mov
jns
outsb
out
xchg
dec
outsb
dec
outsb
cmp
push
pop
out
xchg
inc
scas
cmpsb
pop
sbb
jne
sbb
inc
scas
add
inc
fisttpll
ret
jo
rcr
and
ja
scas
or
popf
pop
sahf
out
sbb
out
inc
dec
int
mov
mov
and
into
ja
push
cmpsb
sbb
dec
push
fidivrl
test
iret
or
jne
decl
inc
mov
test
loopne
and
js
pop
out
pop
sarl
cmc
inc
fdivrs
aad
push
addr16
out
lcall
sbb
clc
adc
lods
mov
xchg
bound
sti
iret
mov
pop
clc
sub
sub
fcom
ja
mov
push
cmp
dec
aaa
jp
dec
jne
mov
cs
mov
push
pop
fcmove
repz
or
add
and
mov
dec
fstl
scas
jmp
sbb
mov
mov
andl
cwtl
xor
sbb
testb
adc
imul
scas
sbb
pushf
jmp
mov
mull
push
pop
cmp
dec
stc
les
and
dec
mov
stc
push
stc
js
dec
and
sbb
mov
mov
dec
ljmp
sti
test
out
xor
xor
ja
push
adc
xor
sti
icebp
xchg
outsl
cmpb
and
inc
nop
sahf
cmp
insb
out
or
mov
rcll
nop
or
lods
leave
pop
push
addl
add
out
je
xor
mov
ret
cmp
test
andl
sub
notl
stos
movsl
pop
xor
popa
mov
or
shrb
mov
loop
int3
mov
jecxz
cwtl
adc
mov
daa
mov
pop
sbbl
inc
insl
fsub
or
jl
in
or
cs
mov
mov
push
inc
pop
lods
dec
pop
xor
call
int
jmp
mov
ja
inc
addr16
mov
pop
ds
mov
or
std
inc
push
pop
ret
icebp
cmp
gs
pop
fs
imul
mov
add
mov
roll
fwait
pusha
mov
fsub
adc
adc
adc
clc
movsb
pop
out
or
jp
sarb
cltd
xchg
cmpsl
mov
push
xchg
ljmp
addr16
sub
jge
mov
fcoms
pop
mov
xchg
leave
mov
cmp
sbb
mov
bnd
cmp
rclb
fnstsw
sbb
xchg
cmp
add
and
push
insb
ds
adc
dec
pusha
push
jge
divl
idivl
xlat
std
leave
imul
mov
dec
jg
outsb
xorl
repz
ret
aas
push
or
xchg
inc
mov
outsl
movsb
adc
xchg
cmp
fbstp
jne
rolb
push
mov
mov
sub
ljmp
xor
outsl
imul
add
popa
shl
mov
or
add
pusha
sbb
jae
repz
jp
into
mov
mov
fadd
call
repnz
push
aam
dec
add
clc
jae
test
cltd
dec
mov
ret
inc
inc
pop
mov
hlt
push
inc
pushf
pop
mov
sbb
scas
xchg
clc
sbb
sti
mov
dec
sbb
int
je
mov
mov
push
in
sub
aaa
pop
mov
adc
call
sbb
mov
pop
dec
mov
cmp
js
xor
mov
jb
add
push
xchg
or
mov
jmp
and
sub
push
jle
adc
negb
lret
std
imul
aam
icebp
lahf
xchg
mov
inc
test
fmul
loope
or
add
adc
dec
lods
jae
pusha
mov
and
xchg
xchg
popa
or
outsb
xor
pop
push
xor
push
xor
fbld
or
arpl
stos
xlat
call
dec
mov
arpl
dec
jo
or
outsl
out
imul
mov
and
aad
mov
cmp
in
dec
xchg
pop
adc
sbb
aas
sbb
roll
sbb
xor
test
dec
sahf
cwtl
mov
loopne
sbb
into
ficompl
iret
pop
adc
mov
sbb
cwtl
sahf
mov
mov
mov
aam
cld
iret
clc
add
sub
adc
mov
and
xor
out
xlat
insb
xor
aaa
clc
push
sub
pxor
inc
jle
push
sub
xchg
jno
jo
mov
mov
test
fwait
push
mov
adc
lock
dec
fwait
imul
xor
das
andl
xor
testl
lret
sub
insb
in
xchg
popf
mov
iret
sarb
lret
repz
repnz
xrstor
fsubr
mov
cltd
cmp
movsb
stos
aad
add
xchg
xor
sub
in
je
addr16
mov
movsl
into
xor
cs
push
lea
push
in
lahf
inc
xchg
push
outsl
pop
push
lcall
and
lcall
in
in
adc
cmp
pop
add
cmp
in
push
jbe
xchg
cmp
sbbb
ss
ja
ja
add
mov
popf
sbb
cli
cmp
push
or
out
lea
sti
xlat
aas
mov
inc
iret
mov
mov
xor
flds
mov
push
lea
sar
fwait
pop
mov
xchg
mov
mov
dec
outsl
inc
and
lcall
leave
dec
xchg
cmp
outsb
pop
cmpsl
sahf
or
adc
popf
add
pop
lock
push
mov
mov
jecxz
andb
xchg
fdivr
bound
outsb
mov
out
sub
imul
mov
out
int
dec
cmp
mov
sbb
scas
ss
aas
in
add
int
imul
pusha
sub
cmp
sbb
cs
scas
pop
data16
pop
jg
int3
int3
xor
push
lds
push
mov
jns
pop
push
mov
push
jae
lahf
jb
out
dec
test
cmp
vcmpsd
call
cmp
xchg
lret
idiv
xor
mov
add
push
and
repz
xor
pop
lock
dec
lret
push
subl
call
jns
arpl
and
and
xchg
jns
mov
daa
pop
inc
add
std
xor
sti
insl
mov
pop
lcall
pop
cmp
cmpsb
lock
push
xchg
rol
es
sbb
cld
jmp
inc
xor
rcr
and
cmpsl
jnp
insl
jno
icebp
inc
inc
adc
out
filds
data16
out
dec
nop
dec
push
jl
ljmp
in
movsb
inc
fyl2xp1
dec
rcl
mov
sarb
and
movsl
pop
inc
inc
rcrb
jg
push
mov
movsb
and
jno
and
mov
imul
jecxz
cmp
mov
cltd
movsb
pushf
cmpl
sub
movsl
mov
test
pop
mov
and
sub
stc
pop
add
xlat
mov
cmp
cwtl
push
jmp
lods
jne
sbb
cwtl
inc
outsb
inc
or
and
xor
movsb
icebp
or
lods
test
push
stos
enter
stc
jecxz
and
sti
pop
sahf
ds
add
cmp
mov
push
cmp
dec
add
divl
inc
adc
mov
or
mov
scas
adc
mov
add
ds
movsb
dec
cmpsb
inc
pusha
jge
push
adcl
cmp
mov
in
xchg
sbb
je
rolb
pop
mov
sub
mov
push
add
sbb
mov
adc
aas
pop
and
pop
mov
cmp
fbld
in
loope
or
push
ja
cli
mov
popf
xlat
scas
testl
dec
ficoml
test
mov
cmpsl
mov
inc
iret
push
imul
adc
cli
fimull
or
loop
pop
fstp
sub
and
mov
pop
bound
fsts
xchg
outsb
mov
ss
jp
in
testb
sahf
cmp
adc
sbb
jecxz
orl
dec
std
pop
das
dec
push
lods
jg
inc
fiaddl
xchg
mov
bound
nop
xor
fldlg2
xchg
stos
rclb
insb
pop
adc
sbb
dec
xor
push
sub
pop
sbbl
fdivrs
out
pop
repz
pop
adc
push
push
xchg
add
mov
jns
jp
inc
scas
sub
push
lret
hlt
mov
dec
dec
jo
mov
add
pop
out
jmp
xor
mov
jle
lret
lcall
dec
ret
adc
or
adc
cmpsb
cmp
pushf
dec
movsl
test
loope
mov
cmpsb
or
clc
enter
rolb
rol
pop
rcll
pop
add
test
xor
sub
push
sbb
mov
daa
mov
dec
xor
mov
add
test
push
mulb
sub
cwtl
insl
fwait
or
adc
mov
fstpt
adc
push
or
inc
aas
test
sbbl
clc
lock
lods
ficoml
jl
test
cmc
jge
test
cld
mov
sbb
sarl
nop
jns
js
hlt
in
mov
xchg
jp
and
gs
in
pop
mov
hlt
push
mov
xor
inc
pop
les
std
xchg
test
push
lods
incb
pop
andl
lods
iret
stos
imul
pop
in
aam
mov
xor
jo
xchg
push
gs
dec
ss
loopne
test
mov
xor
cmpsb
cmp
lods
shll
aam
jbe
pop
xor
xchg
stc
pop
fcoml
xchg
cmp
or
leave
dec
sbb
push
lds
icebp
adc
or
xor
xchg
or
push
cwtl
arpl
sti
sub
inc
repnz
or
insl
fwait
imul
filds
gs
xor
dec
fnstenv
loope
push
nop
xchg
push
mov
pop
lods
xor
out
test
sbb
rcll
cmp
gs
int3
mov
fimull
dec
xchg
jg
enter
pop
aam
int
loopne,pt
xchg
sub
mov
and
add
pop
decl
mov
das
and
insb
icebp
inc
fcmovnu
mov
ja
jo
push
or
ret
fdivs
shlb
adc
xchg
cltd
and
pop
jbe
in
xor
sbb
insl
jbe
jl
shl
insb
push
gs
ljmp
push
pop
pop
adc
xchg
push
test
or
mov
inc
addr16
popa
dec
repz
fs
inc
cmp
outsb
mov
or
inc
mov
insl
scas
icebp
pop
insb
stos
mov
push
and
out
dec
sub
pop
sar
mov
push
jns
dec
mov
sub
mov
aam
cmp
daa
inc
pop
dec
mov
shlb
ficompl
mov
jp
daa
sub
sub
xchg
cli
push
mov
push
mov
adc
mov
insb
fcmovnu
out
cwtl
pop
in
mov
jnp
pop
pop
int3
arpl
inc
pop
es
cmp
stos
shlb
mov
aas
xor
pop
adc
test
mov
cld
aaa
sub
push
push
sbb
sahf
fcoml
sub
push
fnop
fs
ffree
inc
push
fsubr
daa
mov
and
adc
jno
test
je
xchg
jae
cmp
cld
adc
int
testb
mov
sub
sub
test
adc
dec
je
popa
add
xorl
sub
imul
les
insb
push
jecxz
mov
pop
sub
or
pop
and
mov
adc
fcmovb
fbld
sub
in
jle
flds
test
lock
sbb
jnp
and
insb
add
sarl
mov
hlt
icebp
cltd
int3
xlat
test
into
pop
enter
addr16
xor
outsb
repnz
push
push
fsubrp
lahf
xlat
shl
xchg
daa
sbb
ret
xor
sahf
std
sti
dec
push
sbb
cmp
lds
inc
inc
xchg
mov
add
popf
movsb
shlb
dec
sbb
sub
add
sub
arpl
js
repnz
xchg
cwtl
pop
movsl
jns
jmp
fs
lea
pop
jo
cltd
inc
int
xor
xchg
adc
loop
xor
mov
aad
outsl
mov
push
call
outsb
add
ja
cmpsb
sti
adc
daa
push
adc
xor
sbb
lret
fstpt
pushf
jo
inc
js
mov
cs
inc
adc
dec
xor
and
push
mov
gs
mov
aam
jp
cmpsb
mov
mov
mov
sub
pop
mov
shl
mov
rcrl
in
lahf
mov
inc
jge
push
mov
imul
or
adc
insb
pop
pop
outsl
int
mov
lods
mov
out
inc
adc
movsl
test
bound
jns
sub
bound
loop
ljmp
addr16
xchg
cmp
ret
xchg
gs
mov
icebp
out
jge
lock
dec
ret
push
inc
jae
lods
div
rcl
testb
xor
pop
mov
adc
out
call
daa
imul
push
ds
imul
xchg
sbbl
adc
xchg
sub
and
outsb
adc
arpl
sbb
mov
mov
and
lods
mov
pop
insb
jg
insl
cltd
int3
test
xor
dec
lea
in
rol
pop
out
repz
nop
inc
mov
xor
fnstenv
fimuls
es
out
jb
cmp
fmulp
pop
xchg
ja
lret
lods
mov
dec
imul
inc
pusha
sub
sub
loope
dec
mov
out
shlb
call
add
adc
mov
fucomip
sbb
cmp
enter
fnsave
js
inc
in
lods
lods
ret
into
ficompl
jae
ror
xchg
jno
push
orl
movsl
xor
sub
testl
sub
dec
test
jp
decb
aas
pop
xor
push
inc
ja
jb
lret
xchg
shr
mov
add
and
and
les
lret
inc
int3
or
mov
je
int3
pop
xor
mov
jns
push
sub
dec
mov
push
fcomps
ds
dec
leave
lret
fwait
sbb
rclb
mov
je
fidivrs
outsl
lret
fisubrs
les
aad
cmpsb
inc
mov
dec
xor
mov
mov
mov
adc
mov
pop
push
mov
ljmp
sbb
sahf
je
repz
daa
lds
imul
mov
dec
js
dec
out
lods
jne
inc
cmp
in
repz
in
aaa
jbe
rcrl
repnz
in
aad
fnstcw
movsl
mov
and
in
imulb
mov
out
adc
enter
or
insb
std
pop
sbb
hlt
push
aad
or
cmovns
pop
dec
inc
push
lahf
add
push
daa
loop
gs
add
arpl
or
scas
outsl
sub
xchg
outsl
or
test
in
inc
popa
pop
or
jle
push
inc
addr16
daa
out
pop
cld
xor
fdivrs
mov
mov
rcll
outsb
scas
jl
lods
push
arpl
lcall
jg
imul
ret
fs
and
sahf
inc
inc
sti
cmp
das
adc
fwait
mov
jo
outsl
out
cmp
cmpsb
aaa
loopne
pop
pop
repz
in
mov
jbe
ret
hlt
scas
cmpsb
adcb
and
mov
sahf
xor
imul
lret
out
mov
mov
lret
outsl
push
push
xchg
dec
pop
or
test
jg
xor
jmp
jnp
cmpb
popa
ss
scas
test
lret
and
xchg
jo
dec
push
fildl
push
les
and
sub
icebp
pop
fdivl
cs
xor
adc
cli
and
sub
es
lret
xor
sbb
fidivrl
and
xchg
xor
loop
pusha
outsl
in
cwtl
test
mov
stos
sbb
pop
ret
or
out
pop
iret
fwait
lcall
cmp
lcall
cwtl
mov
fidivrs
push
xchg
scas
mov
pop
les
ss
mull
jnp
push
mov
repnz
or
les
sahf
mov
mov
lods
cmp
push
add
imul
rolb
iret
cltd
shlb
movsl
pop
sbb
data16
mov
inc
movsb
jmp
cmp
xor
jae
fcmovbe
mul
scas
cli
inc
test
mov
lods
int3
push
loop
rorl
fists
dec
lret
mov
or
pushf
std
add
aam
xor
inc
rolb
sub
sub
imul
mov
out
xchg
or
pop
popa
pop
jns
cli
cmp
shrb
mov
out
cli
outsl
push
cmp
mov
jmp
dec
jg
pop
pop
test
aaa
adc
sub
out
cmp
rol
and
push
jne
clc
mov
ret
push
mov
jecxz
lods
xlat
mov
add
inc
aad
and
addr16
lcall
nop
xor
jge
or
sahf
push
jle
add
aas
out
out
pusha
sbb
movsb
into
fsubrs
daa
or
sbb
mov
in
push
mov
gs
jb
out
aas
jbe
sub
push
sub
nop
jecxz
mov
pop
inc
lret
add
and
or
and
cmpsb
movsb
mov
push
cmp
roll
inc
xor
pop
leave
sbb
mov
sub
daa
push
push
sub
dec
lods
outsb
or
xchg
outsb
imul
mov
insb
mov
cs
push
das
xchg
out
xchg
xchg
or
shlb
jmp
out
test
lahf
in
push
adc
inc
jg
mov
mov
loope
jae
pop
test
xor
cmp
je
aad
pop
es
cmp
fcom
rcr
inc
inc
add
test
inc
jecxz
cld
mov
jecxz
xchg
fldl
popa
mov
outsl
lahf
mov
repnz
test
mov
mov
sbb
loop
add
mov
push
shl
call
mov
pop
xor
xor
cmp
test
xchg
aaa
pop
subl
xchg
sbb
push
push
xchg
jns
outsl
mov
jmp
rcrb
clc
mov
sbb
loope
push
ja
mov
sub
xor
mov
icebp
sbb
or
lret
int
or
je
sbb
loop
xor
cmp
push
cltd
push
inc
jns
out
xor
add
jg
pop
popa
jbe
clc
std
xchg
cld
icebp
or
popf
lahf
pop
pop
sub
mov
repnz
dec
test
data16
cmpsl
test
pop
mov
fists
movsl
fmull
fwait
add
mov
mov
sbb
pop
sbb
jno
cld
or
push
lret
inc
dec
fidivs
push
xchg
adc
jne
lock
mov
or
xchg
mov
inc
sbb
lea
aam
out
sub
xchg
jno
mov
icebp
pop
mov
cmp
icebp
jbe
pop
mov
xorl
mov
xor
mov
icebp
jl
addl
jmp
ljmp
leave
lds
dec
stc
ds
nop
sbbl
lods
mov
repnz
cltd
scas
shlb
shll
idivl
mov
loope
rorb
das
mov
adc
jecxz
and
push
pop
pop
test
push
mov
cli
pop
pop
sub
xor
loope
xchg
das
xor
lret
add
fbstp
loopne
and
dec
lock
xchg
rcrl
and
pop
lods
mov
movsl
daa
fs
cmpsl
xor
and
pop
loope
jo
cltd
lret
cmp
mov
push
ss
shlb
pusha
daa
movsb
add
das
cld
ja
xor
mov
mov
div
inc
ret
xchg
or
cld
and
xchg
lods
daa
pop
mov
xor
mov
fldcw
jns
inc
ds
jo
cmc
push
push
lcall
addr16
aam
sbb
rsqrtps
add
in
imul
ja
mov
fisttps
or
lret
dec
mov
ficoms
movsb
and
scas
movsl
mov
jmp
or
add
idivb
idivl
fwait
pusha
test
imul
cs
pushf
pop
pop
movsb
popf
stc
lea
inc
push
xchg
mov
lret
cmp
arpl
and
aam
mov
sbb
and
repnz
jmp
js
subl
call
add
or
lods
sub
mov
rorb
adc
cmp
sub
imul
cmp
repz
inc
dec
or
popl
insb
adc
les
dec
stc
add
push
xorl
test
popf
es
mov
and
adc
mov
mov
loopne
sub
in
addr16
decb
decl
jp
adc
stos
xchg
pop
and
and
add
mov
mov
jecxz
push
and
cmp
movsl
sub
mov
ss
pop
add
pop
or
lret
loope
pop
out
jo
push
and
or
mov
sub
xchg
insb
dec
into
leave
mov
test
loope
push
imul
fisubl
push
aas
sarl
cmp
gs
mov
inc
mov
pop
inc
aam
sub
mov
or
fs
pushf
mov
lret
push
aam
daa
pop
adc
cli
push
add
add
sub
cmp
and
push
dec
pop
adc
adc
mov
cmpsb
pop
pop
mov
mov
dec
fwait
xlat
test
xchg
jb
pop
scas
popf
addl
js
xor
fldenv
test
mov
ljmp
ret
enter
int3
loopne
push
xchg
dec
rorl
das
ss
mov
int
pusha
repz
cmp
jge
test
inc
rolb
add
adc
roll
xchg
adc
cli
out
sub
sub
and
mov
and
or
xor
test
in
cmp
jno
cvtps2pi
mov
sbb
imul
int
xorb
les
ret
loopne
mov
pop
adc
mov
rclb
rcl
or
pop
jne
mov
pop
les
ljmp
mov
pop
sbb
loope
pop
push
insb
mov
int
push
rcr
mov
jge
jmp
imul
mov
ret
push
sbb
arpl
les
mov
test
iret
xlat
decb
cmc
data16
pop
cmp
cmp
jne
test
cmp
adcb
and
sbb
shll
lahf
push
mov
jno
and
aad
adc
dec
xchg
dec
dec
jnp
adc
bnd
cmpsb
repnz
filds
cmpsl
sub
pop
in
cmpsl
test
lret
jo
sub
loope
cltd
inc
ret
adc
dec
xor
in
add
jge
and
push
add
jae
stos
imull
xor
jmp
mov
inc
shlb
lods
or
lods
xchg
sub
mov
sahf
repz
pop
jae
rcll
out
mov
repz
mov
mov
stos
enter
popf
aaa
sub
or
daa
ret
mov
out
add
ror
test
in
js
cmpsb
ss
into
cmpl
sti
dec
enter
and
loop
notl
sub
lods
cld
xor
push
xchg
test
pop
mull
push
test
and
xor
aad
psubd
pop
dec
daa
mov
repz
sbb
push
lcall
add
loop
cmp
jbe
int3
jmp
cmc
stos
jne
sbb
jl
divb
rcrb
nop
pop
lcall
cmpl
cli
mov
mov
and
inc
loop
daa
ds
xchg
mov
mov
jle
mov
mov
nop
add
pushf
icebp
mov
fdivrl
cmp
sub
dec
xchg
fsubl
std
das
inc
lcall
test
in
mov
divl
pop
negl
lret
out
fsts
mov
cmp
dec
jg
stc
inc
adc
ret
sbb
scas
jge
js
and
test
mov
jmp
jo
push
xchg
sbb
or
lods
fisttpll
sahf
inc
test
mov
xor
push
add
adc
dec
add
xor
cmc
loop
xchg
mov
jnp
mov
mov
xor
jl
cmp
xchg
fs
add
mov
icebp
imul
mov
lods
push
xor
hlt
fs
push
mov
push
shrb
xor
pop
dec
sub
mov
loopne
mov
int3
sub
xchg
lahf
mov
enter
das
pushf
mov
in
add
jne
mov
jne
jge
repz
sbb
mov
mov
inc
push
mov
fisubs
flds
cmp
xchg
mov
negb
das
mov
pop
sub
and
aaa
cmpsb
lcall
pop
sti
push
sub
jge
adc
adc
jle
jmp
add
bound
insb
xorl
inc
mov
mov
add
imul
jmp
sbb
roll
cwtl
outsl
dec
add
mov
inc
adc
ficoml
inc
jb
xchg
pop
adc
mov
xor
ds
xchg
pop
std
cmpsl
pop
outsl
call
sti
or
aam
xchg
xchg
fidivrs
mov
inc
push
inc
movsb
xor
ds
and
sbb
sub
dec
or
add
loopne
pop
jmp
sub
or
negb
call
mov
out
inc
das
das
jno
daa
mov
mov
icebp
xor
push
sub
ror
pop
dec
push
filds
xchg
pop
push
and
aas
mov
inc
fdivr
push
movsl
es
dec
jmp
rorb
int3
sub
pop
xorl
jnp
lea
jle
std
js
xor
scas
test
dec
push
dec
call
mov
dec
jge
fdivr
jp
cmc
mov
xor
xor
push
and
testl
sbb
daa
xchg
or
lret
push
add
adc
stos
adc
orl
mov
cmc
insl
mov
je
jbe
adc
pop
insl
adc
adc
pop
sub
movsb
fistpl
orb
in
mov
mov
jecxz
add
je
pop
into
mov
and
test
or
mulb
mov
enter
sbb
insl
dec
rcrl
mov
stc
leave
cmc
or
jno
lods
in
add
outsb
fdivs
adc
cld
push
xchg
insb
insl
jp
or
call
mov
in
jae
sub
xchg
jo
jno
push
pop
jnp
push
pop
mov
xchg
frstor
call
shrl
pop
call
or
xchg
push
stc
pop
lds
mov
mov
sti
push
ret
movsl
int
movsb
mov
jns
push
sbb
mov
add
adc
mov
orb
iret
mov
jl
int
aam
mov
int
push
dec
es
dec
fcompl
jecxz
add
outsl
sub
xor
aam
mov
nop
cmpsb
add
pop
mov
cwtl
int3
or
jl
xor
leave
mov
cmp
test
jns
in
mov
mov
fwait
pop
xchg
test
xor
add
lea
js
inc
mov
mov
cmp
imul
int
andb
or
divl
cmc
xchg
mov
or
bound
lea
push
add
pusha
ss
lea
test
sbb
gs
xor
cmp
inc
adc
test
mov
outsb
aam
leave
std
scas
aad
inc
jge
mov
sub
shl
hlt
flds
xchg
fldl
push
push
dec
cmpsl
rclb
push
insl
arpl
add
or
addr16
jnp
sbbb
xor
inc
sub
xor
loopne
out
fwait
mov
orl
fnstenv
movsl
xor
fwait
push
lods
cld
jp
inc
mov
or
dec
mov
add
inc
xchg
into
adc
lret
mov
or
mov
adcb
dec
mov
dec
andl
or
add
push
dec
pop
sahf
mov
je
pop
mov
xor
and
shll
push
push
cmp
fdivrp
mov
aaa
dec
imul
cmpb
pop
dec
lret
ljmp
movsb
jmp
push
mov
hlt
add
or
add
or
mov
ret
decb
dec
outsb
push
push
dec
xchg
insb
push
fimuls
call
push
cmp
stos
insb
jnp
leave
test
aaa
daa
arpl
adc
inc
pop
pop
test
data16
test
iret
mov
test
and
fs
int3
into
push
jge
lds
shll
mov
jno
cmp
and
adc
xchg
mov
test
inc
in
popa
int
add
xchg
test
insl
xor
fwait
dec
push
leave
pop
sub
mov
mov
movb
dec
pushl
push
lret
addb
je
scas
xor
sbb
mov
or
dec
xchg
and
mov
sbb
scas
popf
xchg
aad
add
hlt
push
jno
mov
clc
push
or
test
lds
cmpl
outsl
mov
js
scas
das
add
enter
fidivrs
or
fldenv
je
daa
js
scas
test
adc
aad
sarl
push
add
clc
insb
mov
mov
scas
jg
push
dec
das
or
mov
pop
adc
cs
adc
push
fnsave
leave
mov
push
mov
lds
sbb
hlt
icebp
add
adcb
cwtl
call
add
stos
sbb
and
lock
inc
out
repz
cmp
xchg
decb
ret
ds
adc
add
jbe
mov
sahf
inc
into
in
mov
mulb
xchg
nop
lcall
pop
jle
add
sbb
mov
sbb
xchg
shrl
xor
mov
dec
aaa
mov
or
aaa
push
outsb
xchg
dec
mov
push
leave
scas
es
cmp
cli
mov
into
cltd
and
dec
stos
repnz
shlb
and
mov
out
into
lods
push
ficompl
mov
add
dec
enter
jbe
ret
sub
notb
jo
rorl
adc
stos
sub
rcrl
iret
mov
pop
mov
out
gs
sbb
dec
add
or
movsb
addl
insb
mov
pop
xchg
lahf
xor
xor
jno
sahf
popa
cmp
add
pushf
xchg
mov
leave
std
jbe
xchg
sbb
gs
adcl
js
ljmp
daa
pusha
xor
mov
insb
mov
inc
jns
jnp
arpl
xor
mov
sti
inc
pushf
stos
mov
fmulp
cmpsl
mov
push
orl
stos
jae
sbb
insl
imul
jmp
inc
das
mov
mov
push
lret
flds
xlat
repz
cmp
js
imul
mov
pop
sub
sbbb
sahf
je
add
xchg
rcr
mov
sti
aaa
add
std
movsl
mov
ret
and
xor
dec
hlt
lock
dec
icebp
mov
mov
push
int
jp
stos
loope
pop
pop
adc
cmc
mov
add
or
loope
scas
je
clc
mov
cli
cmp
mov
fistpll
lret
sahf
in
shl
xor
sbb
das
sarl
in
add
js
jno
imull
xor
mov
pop
and
mov
loopne
ficoms
push
mov
xchg
jno
ja
cmp
push
bound
xchg
push
ljmp
fiadds
popf
push
mov
dec
sbbl
outsb
pop
cmc
test
iret
test
jns
lcall
loope
lret
cwtl
mov
stc
fsubr
mov
cmp
fdivs
iret
bound
rcl
lock
mov
js
jnp
div
nop
imul
out
mov
js
push
pop
cmp
rorl
pushf
jle
fsubs
mov
mov
push
mov
push
pop
dec
lcall
sbb
inc
adc
mov
popa
js
push
daa
out
add
jmp
pop
or
fsubrs
mov
and
scas
fstl
nop
cmovge
pop
mov
int
cmp
mov
mov
loop
inc
pusha
test
das
adc
ja
and
mov
push
jl
dec
insl
call
scas
and
iret
xchg
ja
gs
push
mov
pop
js
jo
and
in
test
jbe
or
and
xchg
stc
push
ljmp
or
ret
xor
and
pusha
mov
xchg
mov
jnp
pop
cmpsl
dec
mov
out
scas
loope
jo
push
repnz
jae
test
std
out
mov
xchg
and
pusha
aam
add
jbe
push
pop
cmp
pop
std
sub
mov
test
dec
push
pusha
sub
neg
comiss
lea
cmp
mov
call
out
stc
mov
pop
shlb
jo
iret
sahf
pop
jns
sub
sbb
repnz
add
andl
mov
dec
pushf
aaa
int3
fdivrs
cmp
jl
jbe
out
mov
lods
je
loope
repz
adc
inc
dec
jp
cmp
mov
add
fnstcw
jno
cmpsb
je
and
dec
fstpt
je
lcall
and
into
loopne
fdivrl
gs
popf
stos
and
and
inc
or
lods
dec
cmpsb
cmp
cmp
scas
mov
xchg
test
push
into
sti
pop
fiaddl
imul
frstpm(287
adc
bound
inc
jl
cmp
push
pop
out
sahf
scas
dec
ss
dec
mov
test
and
jg
fisttpll
fldl
and
pop
pop
ret
push
push
adc
rcrb
lcall
push
jl
jb
adc
es
mov
and
aaa
xor
lret
mov
add
das
ljmp
gs
roll
adc
call
ds
inc
fsubl
bound
pop
mov
pop
and
ss
xor
mov
xchg
popf
out
outsl
and
xchg
xor
inc
mov
in
jno
in
out
sbb
xor
in
int
lock
orl
or
data16
mov
pop
popa
sti
inc
xor
stos
mov
cmp
ficoms
loopne
lock
mov
adc
dec
insb
or
xchg
ljmp
nop
fisttps
rolb
pushf
push
mov
or
pushf
jle
push
cwtl
repnz
push
sarb
and
jo
xchg
jbe
mov
mov
sub
jl
aas
insb
push
or
ja
aaa
mov
dec
addr16
mov
add
cmp
sarb
out
add
mov
jmp
pop
arpl
push
mov
dec
mov
cmp
mov
mov
lahf
or
mov
lock
and
scas
xor
out
lret
mov
ret
mov
add
sbb
subb
lcall
mov
mov
lret
sbb
je
cltd
pop
and
cmp
inc
sbb
js
and
ljmp
test
fdivrl
jo
xor
loope
aas
jle
xchg
vmread
cli
push
gs
push
dec
or
cmp
xchg
hlt
es
orl
dec
je
xor
sti
or
xlat
movsb
xor
sbb
push
mov
xchg
dec
jne
outsl
inc
out
rcll
je
lods
out
jmp
sub
sbb
int3
ljmp
dec
sahf
sub
rolb
pushf
sbb
fimull
and
in
mov
cli
in
xchg
dec
jae
sbb
mov
addr16
xor
inc
mull
insl
jmp
shll
stos
jne
mov
rolb
push
scas
mov
and
mov
leave
repnz
xchg
out
gs
ds
mov
fwait
jno
jle
rcll
sarb
pop
push
pusha
cltd
jmp
inc
cwtl
sti
pop
orb
clc
or
addr16
lock
in
mov
outsl
je
cmp
mov
stos
lea
icebp
push
dec
jl,pt
fwait
sub
inc
in
lock
imul
or
fiaddl
add
outsb
imul
hlt
pop
popa
jo,pn
popf
inc
test
inc
lahf
loope
leave
sbb
sti
loope
addr16
fcmovne
idivl
test
mov
adc
add
imul
jge
xchg
jmp
mov
push
xchg
outsl
xchg
aam
pusha
rcrb
mov
cmp
jl
ret
jae
jae
or
sbb
xchg
add
pop
inc
fs
hlt
xlat
mov
sub
mov
fsubs
shrb
mov
pop
icebp
push
popf
cmp
inc
popa
mov
in
and
jg
stc
insb
jno
imul
xchg
push
addr16
pop
cld
jb
ljmp
into
mov
mov
mov
xchg
sbb
sbb
sub
movsb
pop
mov
ret
jbe
dec
add
lods
mov
aas
adc
pop
test
outsl
or
inc
add
xchg
jmp
xor
inc
mov
movb
xchg
iret
dec
test
test
jns
cmp
pop
out
in
inc
and
incb
rcr
mov
jg
into
adc
aam
inc
dec
or
lahf
call
movsl
push
mov
sub
dec
mov
sbbb
mov
data16
jmp
sarb
arpl
add
out
sub
or
dec
jmp
enter
dec
mov
out
cmp
cmp
dec
inc
fnsetpm(287
lds
roll
mov
mov
pop
jno
inc
inc
dec
js
jno
mov
dec
xor
adc
enter
testl
movb
movsb
outsb
pop
and
xlat
lock
mov
imul
jo
inc
inc
lea
pop
mov
lock
fidivrs
dec
jnp
mov
mov
jge
dec
pop
mov
sbbb
xor
cli
fsubs
js
sub
call
mov
jecxz
out
or
inc
shlb
dec
pop
inc
jecxz
imul
xor
inc
sbb
or
scas
jmp
lods
push
aaa
jnp
cld
addr16
test
addr16
pop
nop
push
pop
in
es
dec
aam
imul
mov
hlt
jmp
shr
inc
jecxz
repz
sbb
cmp
fldenv
mov
inc
push
iret
adcl
inc
xor
insb
icebp
adc
into
sahf
adc
xchg
xor
mov
mov
jmp
pop
jecxz
xor
cltd
pop
je
xchg
jae
shrb
mov
mov
mov
push
jne
sub
xor
push
and
inc
inc
fists
inc
bound
data16
add
mov
enter
pop
push
in
ffree
repz
ret
mov
mov
mov
or
arpl
or
jle
mov
std
xlat
lds
mov
mov
testb
inc
mov
fildll
mov
mov
js
sbb
xchg
fidivs
out
xchg
ja
arpl
push
pop
loop
jg
and
lds
call
jo
icebp
jbe
scas
rcll
inc
lods
cmp
mov
mov
mov
dec
jnp
in
dec
into
fcmovnu
lret
sti
jb
repnz
jecxz
inc
idivb
arpl
pop
mov
mov
adc
aam
or
jg
dec
xchg
xor
jp
neg
mov
gs
mov
push
mov
popf
cld
fsubl
sbb
or
mov
frstor
fidivs
jne
and
test
fs
or
sahf
xorb
mov
mov
jle
xadd
sbbb
lea
loop
and
dec
stos
and
jmp
sbb
xlat
icebp
and
cmpsb
nop
jne
mov
sub
mov
out
icebp
insl
jp
xor
fisttps
pushf
mov
adc
sub
inc
dec
lea
or
mov
loope
imul
push
insb
repnz
loopne
movntpd
dec
add
inc
xor
xchg
fcomi
mov
mov
dec
scas
ss
movsl
push
sbb
pop
mov
jns
add
mov
pop
pop
call
pop
pop
cli
shll
rcll
sqrtps
ljmp
jmp
push
add
and
sub
push
fists
sbb
ja
fmuls
movsl
mov
jns
sub
test
xor
jno
mov
es
mov
adcb
pop
aad
icebp
out
into
orl
aad
ret
add
adc
push
dec
cmp
std
ret
jp
mov
cmc
jp
fistpl
lock
sti
cltd
xchg
popa
ret
sbb
cmc
push
push
xchg
inc
push
nop
ds
popa
gs
xor
sub
or
or
jle
jns
add
sbbl
ret
incb
rcll
test
je
ret
fwait
nop
cmp
lods
sub
data16
scas
imul
mov
pop
pop
test
mov
clc
fmul
and
xor
jg
test
fstpt
shlb
sbbl
push
xor
test
pushf
test
stos
mov
sti
shr
cld
std
mov
repnz
cmp
nop
jbe
lock
xchg
lcall
cli
sub
cmp
inc
pop
xor
xchg
adcl
cld
jp
mov
xchg
mov
push
inc
stos
iret
jp
sub
fisttps
xchg
pop
or
push
sub
push
adc
cltd
test
cmp
fs
mov
mov
rclb
cltd
inc
aas
pop
test
enter
test
pop
in
dec
repnz
ret
dec
mov
mov
mov
sub
sti
pop
int3
sbb
mov
test
inc
jmp
repnz
dec
pop
or
aas
hlt
xor
cld
imul
lret
cmp
xchg
jl
and
sbb
sti
fstl
call
sbb
jo
scas
lcall
mov
dec
sub
into
sbb
nop
stos
movsb
pop
cwtl
ficoms
pop
ss
pop
ret
into
mov
enter
gs
cmpsl
jo
sti
icebp
cmpsb
or
call
jmp
mov
and
loope
pushf
push
xchg
adc
add
and
cmp
addb
cmp
in
mov
inc
cmp
mov
pusha
in
lods
and
loop
dec
lret
pop
fcomp
nop
sub
movsb
ja
dec
aad
jbe
add
das
xchg
mov
dec
cmp
loop
xchg
adc
pop
aad
sbb
sbb
mov
push
mov
dec
sbb
imul
in
cmp
fsubs
int3
test
in
imul
jnp
jbe
lods
icebp
fmulp
stc
sub
ficoms
xchg
push
outsl
fcmovnb
inc
fistpl
jmp
dec
in
xor
rcl
sub
adc
ljmp
sub
fistpl
rorl
stos
mov
fsubs
int3
push
test
aad
and
xchg
jnp
cli
sub
xor
add
bound
fidivs
je
add
aam
mov
hlt
push
call
mov
ljmp
sbb
fs
iret
cmp
push
add
cmp
clts
enter
add
dec
pop
push
mov
mov
mov
fsubrs
popa
out
mov
stos
push
test
mov
and
enter
outsl
lods
xchg
dec
lock
fwait
jbe
jae
fbstp
push
in
rorl
divl
push
jp
xorl
lock
add
sbb
rorb
ret
test
int
fisttpl
and
ss
sbb
leave
push
mov
adcb
in
scas
xchg
mov
dec
into
or
mov
pop
inc
mov
mov
jmp
in
fbld
xchg
or
fstps
icebp
ja
int
mov
int3
sahf
sub
mov
mov
adc
loope
mov
mov
pop
push
pop
and
push
sbb
jae
or
cli
popa
in
loop
fsub
sbb
pop
cmpsb
pop
in
int
add
jp
push
jg
inc
push
sbb
add
mull
scas
cmp
push
sub
in
mov
mov
cwtl
out
subb
jae
push
leave
mov
andl
or
mov
xchg
sti
push
ja
xchg
arpl
aam
push
cmp
inc
out
loopne
xchg
cmpsb
sbb
push
ret
mov
xchg
bound
std
out
xchg
jnp
xchg
test
popf
popf
xchg
dec
rcl
lret
aad
dec
dec
ss
iret
dec
xchg
sub
xchg
dec
outsb
filds
or
sti
mov
adc
jne
xor
xchg
adc
outsb
sarb
push
sti
fnstsw
xchg
daa
dec
adc
pop
jecxz
push
imul
sbb
int
cmpsl
es
dec
mov
cmpsb
dec
adc
je
mov
shlb
lahf
inc
pop
out
fisubl
add
pop
xor
aam
mov
pop
scas
jg
cmp
lcall
pop
cmpsl
lea
call
mov
pop
nop
hlt
xchg
aam
pop
pop
mov
pop
sub
mov
sti
xchg
scas
fdivs
dec
adc
fisttps
js
xor
pop
push
ror
push
or
and
ss
inc
mov
inc
push
jne
lods
xchg
mov
jle
mov
lahf
cltd
push
into
push
inc
lret
sub
push
pop
sub
jmp
data16
mov
ljmp
jecxz,pt
sbb
xor
push
add
jle
push
bound
fistps
mov
add
cli
jg
dec
popa
ficoms
mov
cmp
add
or
loope
jmp
xor
fsubl
fisubrl
mov
push
aaa
push
outsl
cmp
jo
cli
out
lods
mov
lods
add
adc
std
out
mov
or
int3
and
mov
repnz
cltd
pop
push
mov
pop
mov
xchg
mov
mov
mov
lret
sbb
outsl
adc
or
push
push
mov
dec
and
dec
frstor
jmp
test
jae
push
mov
pop
xor
mov
mov
pushl
sti
dec
fs
xchg
xchg
mov
imulb
fistpll
cmpsl
jne
push
pop
cli
push
xchg
test
ror
jecxz
mov
mov
stos
sahf
xchg
pop
jae
or
add
sbb
adc
mov
mov
stc
cmpsl
push
mov
imul
push
or
add
xchg
clc
cmpsb
xor
inc
xlat
sub
scas
add
test
jns
test
or
jae
or
popa
sarb
mov
pushf
jle
jmp
inc
mov
inc
xor
sub
xor
mov
lret
aaa
iret
cmp
xchg
shl
scas
cmp
movsb
jo
sbb
hlt
sbb
loopne
jnp
and
sub
aaa
test
push
xchg
jmp
lea
ds
mov
and
jmp
mov
sbb
xor
call
icebp
les
or
inc
pop
out
sub
add
jge
rcrl
rcrl
cmp
int
jl
sub
iret
adc
mov
stos
jns
cmp
out
jno
ljmp
aam
out
lds
aad
or
arpl
mov
aaa
fldenv
dec
jno
out
xor
mov
lahf
shlb
jo
std
cwtl
pop
test
popf
insl
pushf
sbb
cmp
lods
push
xor
arpl
dec
lods
inc
xchg
stc
sub
roll
pushf
mov
push
lret
sbb
out
in
stos
inc
xchg
repnz
lcall
sub
and
sahf
in
sbb
sbb
cmp
ljmp
shl
add
cltd
pop
mov
cmpsl
pop
rolb
mov
lret
pcmpeqb
jae
add
mov
jmp
xchg
fsubs
scas
or
pop
aam
sti
push
or
cli
xchg
dec
sub
insb
and
cmp
sub
jbe
call
lcall
mov
inc
mov
cmc
shl
push
aam
mov
adc
cmp
gs
xchg
leave
sub
ljmp
in
aam
mov
addr16
add
orb
inc
mov
js
and
xor
loopne
scas
lods
cmpsl
mov
adc
cmpsl
mov
mov
pusha
ret
mov
sub
repnz
ret
push
les
push
enter
pop
jl
sbb
test
xchg
mov
std
popa
push
bound
push
cmp
roll
push
add
mov
out
ds
pushf
loop
push
fwait
mov
mov
add
fnstenv
or
int3
jae
jno
sti
inc
popf
add
cmp
or
mov
fwait
add
je
emms
test
pop
adc
mov
es
mov
cmp
xchg
add
popf
test
dec
jg
xchg
sbb
sub
bnd
scas
push
out
xchg
cmp
inc
mov
je
rclb
jnp
pusha
aaa
xor
and
out
dec
dec
sahf
lcall
cltd
mul
imul
cli
sbb
jmp
jecxz
jmp
push
push
mov
mov
out
dec
hlt
loope
xchg
movsl
mov
push
in
and
nop
add
push
fidivrs
or
xchg
xchg
xor
in
inc
test
fnstsw
pop
loope
decl
scas
scas
les
shll
add
mov
lahf
jnp
or
loope
add
xorb
fwait
pop
out
iret
cmp
out
adc
mov
imul
bound
rcl
mov
mov
mov
movsl
mov
fisttps
out
mov
sti
adc
and
fisubl
loop
test
int
xchg
movl
jg
pop
mov
cmpsl
ds
sbb
xchg
xor
daa
inc
xchg
xor
rcrb
mov
add
imul
aaa
aam
adc
cli
in
stos
cli
lods
push
mov
mov
mov
inc
std
mov
out
xchg
cmp
push
jnp
fwait
movhps
imul
sub
sbb
les
rorl
fsubrl
pop
inc
aaa
mov
mov
push
pop
repnz
subb
popl
in
fst
dec
cli
je
stc
push
and
pop
and
and
push
shrl
mov
xlat
pop
in
lret
out
cmpsb
xchg
loope
pop
add
es
push
xchg
fs
repnz
lock
pop
fs
lods
mov
add
into
jp
fcomps
add
adc
ds
xchg
add
and
cmpsb
mov
lea
xor
into
out
jb
jno
xor
push
cmp
dec
inc
xor
sti
pop
and
dec
or
cld
mov
jmp
arpl
out
and
cmp
and
inc
fs
xchg
mov
jecxz
imul
xchg
or
inc
push
jns
or
in
dec
ss
mov
adc
mov
dec
or
adc
mov
jecxz
filds
imul
push
in
repnz
sbb
cmpsb
mov
loopne
sbb
pop
leave
dec
mulb
mov
pop
cmp
adc
rclb
cmc
xchg
and
xchg
jg
insl
mov
mov
or
es
dec
mov
dec
add
adc
mov
repnz
or
mov
mov
and
mov
sbb
cltd
mov
pop
rcll
push
xlat
out
push
out
jb
push
xor
cltd
and
or
jecxz
in
popa
adc
jnp
out
sub
push
fnstsw
hlt
or
adc
mov
ja
sub
mov
cmpl
pop
and
and
cmpsl
hlt
stc
mov
dec
pop
jns
stos
imull
cwtl
inc
test
mov
mov
iret
nop
imul
push
cli
push
shrb
fstl
imul
cmp
mov
cmp
mov
out
or
out
test
test
int
pmovmskb
je
jecxz
flds
add
inc
call
mov
jg
shlb
int3
jecxz
lahf
and
gs
in
fistl
push
cltd
xchg
inc
stos
shlb
fs
imul
jp
xor
mov
sahf
mov
loope
pop
inc
mov
stc
aam
jo
orl
dec
push
or
dec
jl
mov
adc
imul
cmp
ficompl
daa
pop
jno
popa
sar
sbb
clc
pop
cli
adc
repnz
xchg
jle
xor
daa
and
add
in
jo
add
std
cmpsb
mov
push
test
sbb
cmp
pop
xor
inc
mov
add
stos
push
ja
mov
movsl
les
push
add
cmp
cmp
cmp
nop
pop
mov
and
inc
add
out
jg
shlb
push
add
insb
int
sbb
jo
dec
xor
cmpsl
inc
divl
push
xchg
lcall
gs
xchg
shlb
std
xor
sub
arpl
sub
mov
lcall
pop
sahf
jmp
jne
xor
dec
and
mov
mov
fstpt
inc
in
loope
mov
dec
ror
inc
or
mov
mov
mov
xor
cmc
pop
cmp
popa
stos
mov
imul
les
ret
sbb
lods
movsb
adc
popf
push
mov
push
pop
iret
sub
repz
movntq
bound
and
mov
xchg
xor
jle
cmp
mov
push
aaa
mov
xchg
mov
addr16
mov
jae
andb
je
xchg
or
xor
dec
in
lea
and
fimull
fimull
jae
mov
dec
push
gs
sub
loope
xor
idiv
and
jp
and
imul
push
dec
fnstenv
sbb
mov
lret
jge
icebp
stos
cmp
sbb
je
jmp
jp
fsubrs
xor
and
es
loopne
lds
mov
mov
inc
loop
adc
and
leave
mov
lods
out
inc
sbb
outsl
mov
pushf
inc
cmpsb
out
adc
push
daa
daa
add
mov
repnz
imul
jb
adcb
cltd
inc
xchg
dec
cld
push
lods
jno
mov
orb
mov
gs
mov
cmc
and
shlb
pop
pop
clc
ficompl
cltd
mov
pushf
in
mov
inc
nop
add
mov
shl
test
add
cmp
rcrb
pop
shrb
mov
push
or
sub
mov
jmp
testb
mov
inc
outsl
shrl
cmpsb
mov
mov
out
fisttpll
mov
fcmovnbe
mov
mov
push
dec
mov
push
adc
pop
mov
leave
std
sbb
ljmp
andw
rcrl
or
push
aad
or
mov
cmpsb
and
jge
mov
fisttpl
adc
dec
adc
pop
add
adc
leave
lds
dec
test
xchg
and
rcl
movsb
out
push
lahf
or
sub
sub
pop
pop
jb
aad
cld
fnsave
adc
out
pop
aaa
jge
sbb
iret
aad
pusha
test
xlat
cmp
push
xchg
pop
xchg
jmp
orl
jno
fstps
inc
push
hlt
sbb
lcall
das
scas
xchg
dec
and
lock
xchg
test
jmp
cmp
ds
sbb
pop
cltd
out
stc
dec
faddl
out
xchg
push
insl
lock
sti
mov
outsl
fidivs
mov
mov
push
inc
sub
and
out
adc
test
and
mov
rclb
imul
mov
jl
lret
popf
mov
xchg
pop
fldcw
pop
inc
lret
dec
add
xchg
std
pusha
mov
lret
in
fcmovnb
xchg
ret
cmpsb
jae
gs
mov
scas
subl
inc
xlat
cli
mov
test
add
ljmp
aaa
int3
ss
dec
push
pop
cltd
cmc
mov
xchg
jl
xor
fists
mov
jb
sbb
jnp
ds
add
in
sub
cmp
jecxz
inc
adc
cli
pop
dec
sbb
mov
stos
dec
or
xchg
mulb
cwtl
mov
fwait
jp
or
call
sub
aam
rcll
fldl
mov
mov
shll
pop
lret
sarl
out
jb
add
xor
xchg
sub
jge
pop
mov
pop
mov
push
cmpsb
inc
testl
cmc
aas
sbb
and
or
jle
sub
sbb
hlt
jae
lret
mov
dec
inc
xchg
scas
or
cli
mov
ss
pop
nop
xchg
xchg
imul
shlb
ja
in
push
push
xor
sbbb
mov
lret
loope
icebp
jns
sbb
sbb
and
popa
mov
aam
inc
dec
es
mov
pop
push
fs
and
xor
jmp
movups
es
insb
inc
aad
daa
push
mov
or
xchg
repz
mov
fdivrl
mov
popa
xchg
add
push
jmp
push
mov
mov
shll
add
xchg
shrl
lret
lcall
dec
sbb
inc
mov
aaa
jae
push
shrb
mov
add
and
js
lret
pop
push
sbb
inc
or
push
loopne
fisubl
or
cmp
movsb
imul
xchg
sub
cmp
pop
stos
pop
jb
popa
subb
repnz
ja
push
push
cmp
cmp
shrl
test
xchg
loop
leave
pop
mov
sbb
imul
in
inc
xor
insl
inc
mov
lahf
repz
mov
adc
mov
push
gs
into
fnstsw
mov
je
lods
xchg
cmp
inc
and
adc
push
xchg
sbb
mov
fidivs
call
adc
bound
mov
sbb
mov
mov
daa
lahf
mov
movsb
fdiv
mov
test
sbb
inc
mov
lods
inc
into
xor
mov
mov
jl
sarb
test
bnd
or
mov
sbbb
xchg
popa
push
sbb
sbb
adc
mov
gs
mov
cmpl
adcl
jo
mov
add
inc
mov
out
add
push
add
pop
je
mov
or
mov
mov
inc
fwait
shlb
js
sbb
popf
test
mov
imul
mov
out
data16
cmpsb
pop
test
add
dec
das
dec
iret
inc
xor
or
scas
fidivl
ss
xor
or
jne
pop
pop
mov
test
jbe
mov
add
fdivs
iret
sysexit
mov
subb
cmp
test
cli
mov
pushf
adc
negb
mov
lods
mov
ffreep
mov
pop
ds
mov
shll
sti
jo
or
lock
adc
sti
mov
jno
lret
inc
lcall
add
and
push
lahf
push
movsl
push
pop
adc
stc
stos
xchg
or
cmp
lods
call
fisttpll
hlt
inc
stos
mov
decl
pop
mov
ljmp
into
popf
xor
push
mov
adc
in
in
jg
mov
rcl
shlb
and
pop
dec
mov
test
insb
or
rcr
movsl
dec
pop
mov
jb
in
mov
pop
or
popf
push
sub
shrl
jnp
push
xlat
push
aaa
daa
sub
aaa
push
cmp
daa
scas
mov
enter
pop
mov
in
mov
pushf
jnp
jecxz
outsl
cmp
and
mov
jns
test
or
outsb
das
loopne
cmpsl
loop
inc
or
pop
out
push
jp
js
push
inc
cmp
into
xchg
ss
jb
jmp
mov
and
cmc
push
sbb
xchg
notl
adc
mov
push
pop
add
popa
dec
popf
ja
arpl
aam
and
pop
mov
inc
icebp
xor
xchg
aas
xchg
imul
push
and
mov
adc
loope
daa
int
push
xchg
and
mov
lods
mov
pop
sub
pop
add
fildll
mov
je,pt
es
clc
push
inc
ss
fs
pusha
popa
rorb
in
ja
xlat
jge
flds
mov
mov
dec
repnz
push
adc
push
test
inc
leave
adc
mov
call
popf
pop
mov
popf
jmp
leave
loopne,pt
scas
ret
sbb
pop
mov
adc
pop
stos
repnz
in
enter
aam
fldenv
fbstp
mov
sbb
je
push
mov
fstpl
hlt
pop
mov
xor
pop
inc
pop
jae
push
pop
into
sbb
mov
xor
push
test
add
mov
movsb
pop
pop
push
mov
push
push
or
in
shl
or
xor
sub
push
lahf
adc
ror
xor
cmp
cltd
cmc
incl
adc
scas
fidivrs
xor
mov
lahf
mov
js
inc
arpl
inc
pop
aaa
enter
pop
cmp
adc
pop
adc
and
cli
sub
and
idivb
hlt
lea
movsb
push
cmp
test
mov
imul
or
dec
xor
cld
add
movsb
outsl
or
push
int
mov
outsb
mov
lret
or
xor
ss
sub
std
loopne
nop
sahf
scas
mov
mov
idivb
inc
loopne
jmp
jg
dec
push
dec
cs
clc
insb
dec
stos
int
fucomi
gs
or
je
xor
enter
sbb
scas
andl
bound
dec
xchg
pop
icebp
lods
repz
and
outsl
loope
outsl
repz
leave
ret
imul
pop
fldt
repz
mov
cmp
popa
aam
aad
imul
sbb
mov
sti
jle
push
in
xchg
xchg
xor
cmp
cmp
or
or
jns
jecxz
or
xor
hlt
lock
out
je
push
fisubrs
pop
loope
xor
shrb
std
mov
or
pop
push
lds
xor
sbb
mov
and
xchg
dec
rorl
mov
hlt
xchg
fnstsw
mov
lods
inc
test
ret
ss
out
inc
jo
add
fxch
push
loopne
vmaxps
test
sbb
outsl
imul
cwtl
mov
adc
flds
daa
sbbl
into
mov
add
jecxz
mov
rcrl
dec
mov
arpl
mov
ss
inc
stc
or
push
ds
jns
rep
mov
push
fdivrl
cs
jbe
pusha
add
fsubs
shll
sbb
jns
xchg
pushf
popa
mov
sub
pop
mov
arpl
popf
cs
scas
popa
enter
jne
sarl
xor
imul
xor
and
or
mov
jl
scas
popf
lret
insb
arpl
daa
inc
and
jle
inc
push
int3
inc
mov
insl
xchg
mov
sti
mov
push
jnp
mov
into
mov
inc
imul
mov
dec
push
xchg
loope
push
jae
dec
mov
lods
mov
pop
ljmp
in
push
dec
fwait
popa
nop
dec
and
fs
les
pop
adc
inc
inc
imul
fnstcw
je
dec
add
pushf
mov
add
mov
mov
test
pop
repnz
fnstcw
arpl
inc
jge
mov
iret
add
in
xchg
push
dec
leave
stos
and
xchg
out
sub
out
cmpsb
mov
out
cmp
mov
mov
shlb
lea
loop
jo
pop
and
out
out
lahf
cmp
mov
mov
add
idivl
aad
push
arpl
or
arpl
jno
xor
push
mov
inc
mov
test
movsl
adc
popf
cmp
push
loope
adc
repnz
enter
jmp
sub
xchg
adc
int
ficomps
push
pop
adc
xchg
jmp
fists
jne
das
cmpsb
push
cltd
push
aas
jnp
mov
mov
cmpsb
xchg
pop
aaa
dec
jle,pt
cmp
lret
clc
cmpsl
scas
aam
sahf
movsb
adc
mov
pop
push
aad
adc
add
push
inc
mov
sahf
xor
loope
cld
nop
bound
loopne
push
out
cmpsl
lock
cmpsl
pop
jmp
add
jmp
xchg
dec
xchg
xchg
andb
xchg
pop
push
out
sbb
and
sub
xor
xchg
sbb
pop
loop
and
add
xor
popa
das
decl
aaa
in
dec
sbb
out
mov
pop
fimull
fnstenv
push
sti
dec
lret
std
rorb
adc
mov
lret
imul
inc
cmp
mov
inc
inc
or
jl
mov
push
mov
jl
out
gs
or
cs
mov
mov
xchg
les
inc
sub
sub
stc
mov
dec
frstor
aas
pop
mov
js
xor
dec
mov
stos
push
add
rorb
js
cmp
and
or
fisttps
insl
cwtl
xchg
adcb
ds
cli
pop
pop
outsl
cs
pushf
repz
imul
push
in
push
loopne,pn
shrl
jns
out
aas
orl
inc
out
out
ds
daa
push
lahf
fs
call
lea
shlb
jmp
fisttpl
fstps
mov
repz
jl
gs
mov
lock
fiadds
cmpsl
sub
xchg
sbb
sti
movsl
cld
mov
rcrb
popa
jno
dec
in
dec
cs
pop
cmpsb
les
out
and
fidivrs
stos
ret
sub
cmp
gs
push
or
les
mov
fnstenv
test
add
cmp
xchg
adc
pop
or
and
mov
jle
std
js
push
stc
in
rol
xor
int
sub
jnp
rcrb
shlb
adc
inc
cmpsb
xor
mov
xlat
mov
ds
add
repz
pop
mov
popa
pop
aas
pop
inc
jns
pop
push
and
das
mov
popa
jmp
ss
pop
inc
xlat
ficoms
jnp
popa
jbe
mov
addr16
mov
xor
enter
jp
in
arpl
inc
jmp
sbb
jge
outsb
xor
mov
push
nop
test
pop
aas
push
sub
enter
mov
push
jb
mov
adc
inc
cmpsb
nop
push
je
or
adc
ret
pop
mov
jmp
jp
pop
cld
dec
add
mov
inc
and
push
test
xchg
and
stos
adc
cwtl
pop
xchg
lea
repz
xchg
pop
jbe
mov
mov
repz
push
cmpsb
and
cwtl
mov
orl
push
add
clc
push
je
sarb
in
inc
cmp
stos
xchg
add
adc
xchg
js
sbb
subl
les
pop
add
lahf
fs
sbb
cmp
into
lods
cmpsb
xchg
pop
repz
in
pop
inc
xchg
inc
sub
xchg
jp
int3
push
push
dec
mov
test
inc
and
add
pop
pop
insb
xchg
mov
sub
jne
scas
pop
push
jno
push
mov
dec
insl
jae
jbe
cmpsb
imul
sub
sbb
mov
adc
adc
mov
je
loop
rcll
xchg
mov
test
test
in
cld
mov
xchg
xchg
sbb
int3
stc
xlat
jnp
aaa
mov
jae
fdivrl
push
inc
inc
jl
scas
inc
jg
leave
mov
jmp
test
xlat
or
imul
push
mov
lock
jnp
bnd
sbb
stos
aam
stc
fdivl
aas
xchg
movsl
pop
and
and
rcll
stc
push
mov
bound
jmp
stc
shr
jmp
aaa
mov
scas
cmp
ss
pop
gs
test
sbbb
adc
inc
and
imul
fadd
or
lcall
test
jmp
push
cmpsl
jae
inc
icebp
imul
test
out
sub
adc
nop
movsb
mov
das
test
out
sbb
sub
dec
icebp
lock
stc
lds
and
sahf
or
or
inc
adc
icebp
dec
ljmp
cld
pop
mov
pop
mov
add
jae
int3
dec
inc
sbbb
sbb
adc
pushf
out
ret
out
inc
popf
dec
pop
mul
or
push
jae
mov
sub
xchg
and
mov
arpl
adc
inc
xor
pop
pop
xor
and
xchg
xchg
loop
stc
ss
mov
mov
sub
dec
cmc
addb
adc
xchg
fimull
cld
das
into
fildll
sbb
push
sub
clc
rclb
sub
or
fstl
xor
xchg
push
jae
jl
cld
ret
push
dec
and
imul
sti
and
mov
loop
sarb
inc
sub
repnz
icebp
in
divb
and
sbb
xor
add
mov
outsl
pop
mov
push
sbb
inc
xchg
cmp
fdivr
cltd
dec
jo
out
mov
sub
sub
xchg
cmpsb
inc
xchg
adc
mov
sbb
stos
pop
daa
out
mov
inc
sbb
sub
in
mov
and
lods
or
cmp
dec
pop
cmp
ja
loopne
inc
or
inc
xchg
push
sbb
addr16
inc
mov
cs
daa
gs
stos
mov
test
stos
pusha
insb
mov
xor
mov
fs
sbb
shll
pusha
inc
pop
in
rorb
mov
fisttps
insl
sahf
cli
les
aas
push
rorb
loope
adc
fmuls
movsl
jo
inc
daa
lds
cs
cmp
cs
negl
cmp
xlat
push
pushf
negb
jge
jp
outsb
sar
or
movups
and
ret
xchg
enter
aam
push
dec
or
out
subb
sahf
push
jge
lods
fidivs
repnz
das
insl
xor
bound
or
and
mov
pop
dec
cmp
cli
fadds
sub
add
in
and
dec
lahf
adc
fadd
mov
ss
add
mov
push
jle
sub
call
stos
or
mov
imul
fwait
inc
fwait
cmp
aaa
push
push
mov
mov
cmp
fisubrl
negb
mov
mov
sbb
in
jbe
mov
push
cmp
push
dec
mov
mov
in
std
mov
mov
jg
xor
mov
mov
inc
or
cmp
xchg
stc
mov
mov
mov
sti
add
push
shrl
addl
outsb
mov
cwtl
and
mov
and
or
int3
mov
or
push
jecxz
movsl
inc
rol
daa
sub
rorb
jp
int
gs
cwtl
sub
into
ficoml
jae
xchg
sbb
add
xor
mov
hlt
out
jbe
mov
xchg
cmp
pop
scas
xchg
cmc
adc
or
fdivrs
inc
pop
mov
sbb
data16
mov
movsb
loop
xor
lock
pop
dec
cwtl
mov
push
dec
and
sbbl
jg
cmp
mov
mov
iret
ret
cmpsb
sub
stos
js
add
adc
loopne
pop
pop
dec
fs
roll
cmp
movsb
pop
pop
lods
add
movsl
jp
add
push
xchg
lret
scas
ret
ljmp
xor
inc
rcl
jbe
ja
adc
xor
cltd
pushf
ds
add
xchg
xchg
shl
cs
jae
jno
ret
push
cli
pop
imul
sub
bound
xchg
mulb
les
test
push
dec
lods
out
outsl
sub
mov
push
lock
pop
data16
adc
icebp
lods
cmp
sbb
adc
add
xor
jp
push
aam
ja
js
lret
loopne
cs
popf
mov
rorb
pop
pop
adc
call
leave
xor
jns
lea
cmpsb
jbe
xor
dec
xchg
mov
fidivrs
cmc
sub
loopne
fstps
andb
jmp
fimuls
imul
stos
mov
shll
dec
pop
or
lds
inc
ss
nop
loop
les
mov
es
enter
icebp
out
sub
mov
test
adc
lahf
sbb
sbb
inc
jb
lret
mov
or
cmpsb
or
scas
inc
hlt
xchg
ljmp
add
mov
push
mov
sub
and
insb
add
sahf
adc
dec
mov
out
mov
aam
lods
adc
ss
insb
loopne
and
testl
int3
jo
iret
jmp
cmp
push
into
xchg
fwait
inc
push
pop
lret
lods
aaa
subl
mov
imul
outsl
push
ror
mov
js
adc
iret
int
jo
pop
ljmp
loopne
cwtl
or
xor
das
in
insb
stos
popf
pop
jg
imull
shl
sub
outsl
loop
xchg
mov
mov
negl
lods
lods
subl
cmp
mov
cmp
xlat
and
sbb
insb
xchg
cld
jp
cmp
imul
mov
jno
hlt
rcr
lds
aas
popf
jno
cwtl
jg
ret
mov
sub
popa
mov
and
scas
xor
or
rorb
sub
sbb
sbb
mov
mov
xor
lock
insl
icebp
pushf
adc
leave
lods
sbb
jae
pop
add
js
scas
leave
add
dec
jl
xchg
sub
and
push
push
jb
shll
and
sbb
pop
andl
cmp
push
jnp
pop
xchg
movsl
int3
jnp
xchg
cs
mov
lods
pop
dec
and
mov
or
push
and
stos
cltd
lods
pop
sbb
repnz
cmp
jecxz
mov
xchg
jge
cmp
shll
or
scas
sub
pushf
lods
addr16
dec
testl
xor
nop
and
mov
or
sub
sbb
jno
dec
shrb
mov
and
mov
push
movsb
xor
mov
push
pop
jp
adc
add
sub
leave
xor
test
push
sarl
rcrl
stos
xchg
bound
nop
das
cmp
sub
arpl
fstp
test
cwtl
mov
push
roll
mov
aam
fistps
jno
lock
jg
dec
into
add
sub
and
mov
lret
push
fucom
pop
push
lret
call
inc
ds
fisubrs
push
mov
jecxz
and
roll
xchg
insl
push
mov
cmp
es
dec
lcall
xchg
mulb
cs
push
sbb
pop
loop
mov
mov
add
push
cmpl
sti
xor
sbb
pop
jge
lock
xor
pop
mov
cli
test
and
xor
jae
iret
testl
xor
adc
cld
std
mov
movsl
add
mov
clc
xchg
scas
jg
cmc
jbe
sbb
inc
lds
movsb
lcall
xchg
test
frstor
pusha
testl
dec
mov
adc
adc
daa
jb
ljmp
mov
mov
inc
jb
jmp
xchg
mov
ret
mov
add
add
push
scas
bound
xchg
das
push
ljmp
push
scas
cmp
rcrl
lock
fldcw
mov
test
xchg
xchg
mov
cmpl
dec
xchg
ret
pop
insb
rep
fists
int3
push
and
add
stos
lea
sbb
test
xchg
push
xchg
sbb
pop
in
int
jp
mov
pop
dec
mov
roll
in
int
mov
inc
repnz
leave
roll
add
xchg
mov
lods
ret
movups
push
jg
and
je
out
sbb
cmp
ds
sbb
or
or
clc
mov
cmp
fwait
movsl
mov
jae
push
cltd
mov
stc
ljmp
mov
mov
push
mov
push
jnp
jle
jl
mov
push
xor
xor
sbb
ret
loope
arpl
leave
sub
xlat
lea
add
jne
into
loop
xor
mov
mov
ljmp
mov
cli
shl
fisubl
or
cmpl
data16
ds
pop
mov
push
shlb
js
or
push
std
repnz
add
and
mov
bound
inc
mov
loope
das
in
xor
loopne
lock
shll
rcl
ret
fwait
scas
mov
call
insl
pushf
sbb
leave
push
push
inc
stos
repz
xor
dec
scas
iret
sub
inc
pop
icebp
subl
outsb
movsb
outsl
scas
enter
lret
dec
and
in
or
cmc
loop
jmp
jmp
out
inc
inc
jo
xchg
inc
push
fsubl
orb
js
push
jbe
pusha
jb,pt
sbb
adc
mov
mov
scas
inc
stos
icebp
dec
pop
push
fimuls
aad
push
fstpt
mov
shlb
pop
lahf
ficoms
mov
loop
push
movl
pushf
or
xchg
jl
in
xchg
xchg
stos
gs
mov
adc
jo
ror
lds
cmp
icebp
mov
rclb
shl
mov
xchg
js
xor
mov
movsb
adc
xchg
push
das
xchg
sub
mov
push
loope
sub
mov
jg
or
sbb
mov
push
popf
scas
mov
les
add
cmp
jecxz
mov
push
inc
sarl
iret
push
lsl
sbb
mov
stos
push
inc
movsb
cmc
jle
ret
jle
sub
xor
xchg
test
fbld
ja
xchg
adc
xchg
inc
pop
mov
nop
test
or
cli
lods
ror
or
dec
lods
push
rclb
shll
fs
enter
clc
sub
ss
or
add
pop
mov
fnstcw
dec
pop
and
test
lret
mov
cltd
fcomps
jae
fidivl
pop
add
outsb
mov
out
int
xchg
das
dec
and
xchg
mov
jle
mov
scas
enter
cmp
call
pop
sarb
hlt
repnz
iret
xchg
imul
outsb
mov
icebp
sbb
repz
xchg
dec
stc
mov
aad
add
dec
insl
mov
hlt
mov
jne
and
lds
fcoml
mov
jno
push
mov
jecxz
add
cmpsb
jns
std
dec
push
xor
test
adc
out
ror
mov
imul
sahf
pop
sub
lock
cltd
gs
dec
addr16
inc
jmp
adc
int3
scas
xor
dec
data16
xchg
nop
loop
sbbl
test
mov
jns
jae
dec
pop
jl
mov
mov
mov
push
pop
push
in
into
iret
pop
jae
pop
or
into
loope
xchg
lcall
pop
test
xchg
xor
xchg
pop
aaa
popa
and
out
push
push
mov
stos
hlt
outsb
pop
cmc
adc
mov
sub
int
iret
hlt
das
or
xorb
lret
jecxz
cmpsb
fildl
fdivs
das
rcr
hlt
sbb
inc
jbe
dec
sub
pop
mov
aam
sub
aam
push
xor
jnp
add
ds
or
mov
mov
outsl
icebp
lods
jae
push
int3
test
xchg
push
jnp
pop
add
aas
dec
clc
xor
icebp
fs
sbb
cmc
cmp
mov
xlat
mov
cmc
in
fstp
add
add
and
sahf
add
mov
addb
jbe
dec
stc
icebp
addr16
xor
iret
ret
mov
mov
ret
mov
pop
arpl
add
pop
ficompl
movsb
sub
cmp
fprem
fsubs
inc
mov
mov
pop
mov
mov
fisttps
mov
dec
jae
das
out
daa
mov
sub
aaa
test
xchg
lods
mov
xchg
int
flds
fcomp
test
cli
nop
orl
mov
mov
inc
lahf
and
scas
aaa
out
daa
jb
push
mov
imul
mov
push
ret
and
out
add
cmpsl
pop
inc
sub
xor
and
mov
cwtl
mov
sub
dec
sub
and
cwtl
mov
sahf
mov
bound
xchg
push
roll
scas
lret
and
sub
jae
add
imul
fdivl
mov
js
push
adc
xor
out
out
dec
mov
push
dec
jecxz
shll
pop
outsl
cs
int3
rclb
xchg
adc
sahf
mov
clc
pop
or
daa
js
inc
mov
push
push
sahf
sbb
iret
or
sub
in
cmpsb
inc
mov
mov
mov
pushf
out
jmp
pushf
jmp
into
int
nop
icebp
rclb
mov
dec
fsubp
sub
mov
mov
aad
scas
sub
icebp
mov
mov
hlt
mov
movsl
lods
jecxz
enter
dec
jecxz
push
dec
cmpsb
adc
add
imul
mov
xor
jo
test
or
mov
xlat
dec
xor
push
aad
push
je
cmpl
or
mov
pop
sbbb
or
je
pop
divps
mov
nop
mov
xchg
or
lods
inc
mov
push
push
sub
mov
xorl
lret
pushf
loopne
pop
fisttpll
or
loop
std
outsb
jne
mov
ljmp
addr16
iret
loop
shlb
lahf
push
imull
imulb
aam
push
dec
fdivrs
pusha
movsl
das
xor
je
inc
cmpsl
sti
push
fdivrl
xor
leave
shr
mov
adc
add
and
mov
add
jae
dec
pop
out
fcmovnu
lds
xor
push
sub
pop
stos
out
jp
cmpsl
jle
outsb
aas
idivb
push
stc
xor
pop
push
xchg
and
sub
inc
mov
and
mov
inc
jno
outsb
pop
sbb
aas
push
js
imul
lcall
mov
or
icebp
int3
test
xchg
inc
iret
es
adc
ret
xor
lods
mov
insl
sub
aam
mov
push
push
xchg
cmc
mov
and
sar
add
xchg
and
cmpsb
pushf
xor
pop
into
rcrl
mov
pushl
or
adc
push
sbbl
stos
cli
sti
orb
dec
jae
call
add
lret
fisubl
in
iret
pushf
mov
jge
inc
xchg
inc
sbb
mov
cli
mov
stos
popf
out
int
outsb
enter
inc
popf
and
dec
jne
xor
xchg
shll
cmpsl
add
dec
je
shrb
iret
or
cmp
das
adc
int3
insb
mov
and
daa
cwtl
mov
mov
ljmp
adc
rcpps
sub
gs
or
stos
mov
das
into
or
add
and
ss
icebp
push
mov
cmp
cmp
rcll
popa
test
mov
inc
sbb
push
push
repz
cs
pop
and
pop
dec
loop
in
mov
stos
or
shl
out
sbb
add
add
shll
sbb
scas
ljmpw
dec
addb
cmp
mov
stos
lea
sahf
pop
popa
xor
mov
xchg
pop
xchg
mov
sbb
loop
dec
or
jp
jg
cmpsb
and
add
int
test
shrl
cmp
loop
scas
xchg
lret
hlt
and
shll
fsubrl
pop
movsl
fisubs
sbb
rcr
popa
jnp,pn
das
out
jo
push
clc
mov
rolb
lret
sbb
ja
push
sub
mov
inc
data16
mov
cmp
notb
pop
mov
leave
inc
add
dec
out
dec
pop
cmp
adc
adc
and
sbb
xchg
out
mov
xor
dec
pop
sbb
jecxz
xchg
roll
mov
sbb
pusha
jp
push
or
outsb
jns
jbe
or
or
inc
es
je
aas
mov
daa
cmc
mov
sahf
mov
cmp
mov
dec
test
out
and
jl
cmp
or
shll
mov
push
pop
or
outsb
int3
pop
push
ds
cmpsb
add
xchg
dec
add
jo
mov
sub
testl
cmp
and
inc
loopne
rcll
and
shl
xchg
fwait
pop
stc
stc
in
dec
or
popa
adc
and
and
jno
lods
mov
shll
pop
popf
mov
mov
sbb
add
loopne
int3
cmpsl
or
into
fnstsw
and
jns
push
das
in
pop
jns
xchg
mov
and
xor
in
insl
mov
dec
cmpsl
mov
fsubp
aad
aas
pop
nop
jmp
roll
lods
xchg
insb
sbb
xorl
add
idivb
test
call
es
imul
push
test
mov
dec
sub
xor
dec
inc
inc
js
jb
inc
loop
xchg
mov
call
in
aaa
mov
fcomip
cmp
mov
out
les
scas
fwait
dec
lahf
ds
loop
adc
adc
shll
mov
sbb
leave
std
push
xlat
lods
cmc
shr
fwait
mov
out
fdivl
sarl
adc
inc
test
bound
sti
ss
adc
inc
cwtl
xchg
and
pop
dec
fidivs
les
imul
cmp
repz
popf
aas
xor
xchg
mov
scas
dec
adc
cltd
jbe
fstl
mov
sbbl
lods
pop
sbb
icebp
mov
cwtl
stos
hlt
test
lret
xchg
dec
pop
repnz
in
pushf
lea
dec
xchg
mov
mov
pop
or
pop
jne
aaa
jb
jmp
fs
jno
arpl
test
xchg
adc
arpl
jb
mov
fs
push
ds
fistps
sub
jp
sub
hlt
jecxz
add
loopne
sti
roll
mov
xor
loope
gs
push
xchg
adcl
mov
cmp
jp
addr16
sbb
inc
ret
shll
dec
pop
xchg
adc
aas
int3
into
dec
cmpl
imul
cmp
sub
inc
test
aad
orb
cmpb
shl
or
push
jbe
dec
sub
xchg
shl
movsl
cmpsb
cmp
les
mov
and
and
push
sbb
in
jmp
or
jae
mov
sub
xchg
test
fidivl
xchg
std
cwtl
bound
icebp
cmpsl
dec
sub
jbe
xor
cmpsl
cld
outsb
mov
jne
test
ljmp
push
jb
inc
and
in
clc
test
inc
fimull
test
out
cltd
mov
xor
lea
adc
orl
dec
adc
repz
cmp
fwait
jae
movb
adc
push
in
fsubl
lea
mov
into
int3
mov
and
sbb
cmc
cmp
movsb
daa
and
inc
mov
test
sub
inc
in
adc
cld
mov
cmp
int
mov
lahf
pop
push
mov
popf
movsl
fmull
js
inc
je
test
shrb
pop
insb
inc
push
imul
or
lcall
ja
repnz
xor
xor
cmp
fs
sbb
es
push
push
sbb
out
loopne
scas
in
test
les
sbb
push
fcmovnbe
dec
sbb
icebp
jge
and
xchg
lods
outsl
pop
xchg
mov
or
lcall
push
outsb
out
mov
movb
add
popf
and
dec
icebp
shrb
fxch
mov
pop
add
sahf
int3
sbb
sbb
pop
into
adc
ja
test
rolb
pop
sub
hlt
ret
pop
dec
inc
cmp
dec
xchg
adc
inc
ds
aam
xor
rol
out
push
xlat
push
lahf
ret
sbb
xor
xlat
loopne
mov
test
inc
sbb
jbe
incb
je
js
aas
shll
sbb
pop
or
pop
or
fildll
ds
arpl
push
sbb
movlps
xor
jae
in
cmp
das
movsl
mov
mov
sti
dec
adc
mov
test
icebp
and
xor
sub
orl
sbb
mov
icebp
lods
add
movsb
xor
pop
mov
push
bound
enter
in
mov
mov
inc
xor
js
daa
sub
sti
outsb
fsubrs
push
leave
test
and
mov
sub
imul
stc
cmp
repnz
hlt
pushf
mov
pop
and
sub
out
add
adc
cli
js
xor
sub
loop
add
push
lods
lret
add
inc
lcall
lods
mov
add
mov
cmp
xchg
jb
add
jp
mov
or
addr16
xor
push
js
enter
test
das
pop
xchg
push
xchg
jecxz
out
in
ja
fidivrs
and
mov
adc
xor
push
pop
mov
mov
pushf
inc
sbb
push
dec
cmp
pop
inc
aam
and
cmp
arpl
bswap
xchg
mov
cmp
or
xchg
mov
push
cmp
shr
jbe
pop
call
loope
adc
inc
xlat
mov
int
mov
insl
inc
outsb
mov
lahf
mov
xchg
sub
ss
push
sbb
xchg
dec
fsubs
jnp,pt
lds
hlt
divl
dec
aas
ja
xlat
test
dec
dec
adc
scas
xchg
in
nop
sbb
xor
mov
das
js
inc
aaa
idivb
jecxz
movsb
xchg
popf
js
sahf
sbb
pop
ljmp
lret
pop
arpl
fildll
mov
xor
adc
dec
inc
cmpsb
fs
adc
mov
push
movsb
xchg
mov
cmpsb
nop
lcall
lea
mov
cltd
push
loopne
or
push
mov
jge
xchg
xchg
iret
into
xchg
pusha
push
shlb
aas
enter
fistpll
std
jbe
or
adcb
rol
push
and
jp
dec
and
add
pop
add
rolb
and
jecxz
sbb
xor
int3
leave
xorb
jg
pop
cld
or
ljmp
stc
lahf
or
jl
repz
xor
add
fwait
lea
and
or
dec
fcompl
into
ja
aam
or
and
and
daa
jl
lock
jo
enter
sbb
imul
test
push
inc
cmp
jne
lret
or
fnsave
in
mov
jg
push
inc
mov
dec
mov
mov
cmp
in
sbb
popf
add
dec
or
add
cmpsb
dec
ja
mov
sbb
jge
and
sbb
push
inc
cmp
fiadds
mov
insl
out
xor
adc
imul
xor
pushf
leave
repz
arpl
pop
dec
xchg
xchg
sub
ljmp
jno
lcall
pop
adc
push
les
ja
xchg
xchg
push
shl
xor
rcrl
and
stos
dec
pop
or
dec
jg
jo
add
adc
mov
adc
pop
push
sbb
mov
arpl
arpl
lods
into
sbb
pop
mov
jo
and
cmp
dec
fs
rclb
out
nop
or
push
lods
cld
sub
fcoml
mov
cld
arpl
adc
sahf
outsb
jb
fld
push
insl
fdivl
mov
les
enter
mov
jb
aam
jmp
dec
add
bndstx
xor
push
mov
dec
faddl
push
int3
mov
or
rolb
or
and
xchg
scas
xchg
cmc
ror
add
dec
lahf
gs
mov
mov
jns
dec
cmp
mov
jmp
cmp
xchg
shll
daa
cld
xor
lods
cmpsb
cltd
push
mov
rcl
jmp
cmp
rorb
mov
pop
inc
loopne
jp
pop
icebp
cs
rorb
push
jne
cmp
ret
sub
mov
push
or
ss
loop
jae
adc
dec
jne
mov
mov
push
xor
stos
or
and
fstp
adc
sar
pop
mov
cmp
jmp
sbb
addl
push
pop
orb
cmp
mov
in
insb
pop
jb
xor
xor
xchg
xchg
ss
mov
push
repz
out
jae
or
or
dec
sub
fs
inc
mov
int3
mov
mov
xlat
ret
ljmp
xor
mov
pop
sub
bound
jg
fistl
and
dec
dec
add
dec
xor
enter
icebp
lahf
cmpsb
in
xchg
mov
stos
inc
push
mov
push
dec
mov
jns
leave
mov
push
inc
dec
xor
mov
call
das
rol
fnstenv
jno
adc
fldt
dec
cmp
pop
fadds
jp
and
mov
mov
mull
jmp
stos
scas
sbb
aam
daa
lds
aad
jo
test
jp
xchg
mov
xorb
je
adc
inc
ss
rcrb
lock
fsubr
mov
push
mov
adc
xor
ror
cmp
sub
out
rolb
mov
lea
sub
or
mov
test
or
mov
xor
or
loope
inc
fmull
dec
popa
push
and
jns
lds
hlt
mov
in
aaa
xor
push
add
fld
mov
jmp
adc
loopne
and
sbb
fldt
mov
xor
rclb
fiaddl
sbb
push
sub
mov
leave
and
mov
mov
test
mov
push
sub
xchg
fidivl
ljmp
sbb
xchg
ss
xsha1
popa
pop
jne
inc
fsubs
test
jnp
cmp
adc
add
std
fidivl
out
xor
mov
or
jge
insb
pop
ja
addr16
sbb
loope
adc
cmp
out
ret
data16
mov
lds
call
xchg
and
add
xchg
xor
sbb
ljmp
sub
push
movsl
mov
sub
inc
mov
dec
mov
mov
popf
gs
add
push
xchg
dec
sbb
nop
in
inc
mov
sar
lret
loop
mov
jnp,pn
pop
mov
cmpsl
and
popa
lods
loope
cmp
mov
lock
xlat
dec
dec
andl
and
adc
sub
mov
and
push
shll
jo
mov
cmp
push
cwtl
imul
repz
rcll
jbe
les
loopne
cmp
insb
pop
sbb
push
mov
pop
jecxz
packsswb
repz
pushl
mov
decb
lret
icebp
das
pop
mov
xor
in
jb
push
pop
push
xor
js
cmc
loop
mov
add
les
sub
dec
dec
std
int3
imul
enter
adcl
jge
in
push
sub
sub
inc
ljmp
je
cmp
or
jmp
outsb
mov
shll
adc
ret
popa
mov
sub
scas
dec
adc
call
fsubl
imul
aas
ficoml
cli
popa
repz
fdivrs
stos
outsb
sub
aaa
cmp
insl
lods
fnstsw
jo
mov
jge
mov
repnz
jmp
out
pop
jg
in
loop
pop
jb
sub
into
add
mov
pusha
test
push
test
add
out
cli
adc
hlt
mov
push
mov
sub
inc
adc
mov
mov
andb
jo
outsl
daa
shrl
aad
mov
jl
xchg
cs
or
add
js
fmull
aaa
loop
sub
or
jp
dec
jle
inc
insl
pop
xchg
call
pop
movsl
jbe
dec
add
jle
es
int3
mov
mov
dec
test
xor
clc
xchg
stos
mov
sbb
in
cld
push
sub
mov
push
mov
ret
mov
pop
push
and
js
push
xor
ja
jne
xchg
add
jne
outsl
inc
loop
rclb
les
fdivl
pop
loopne
popf
cmc
or
imul
xchg
and
sti
inc
jge
push
jnp
or
rorl
sti
cmp
lret
cmpsl
aam
aas
mov
add
sahf
inc
mov
cltd
xor
outsl
faddl
xchg
scas
xlat
jl
movsb
std
pop
push
xchg
and
lcall
jg
loopne
pop
mov
test
pop
push
ss
das
adc
lods
popa
jp
hlt
push
pop
test
push
push
pop
lahf
sti
mov
cs
pop
cs
filds
jmp
inc
mov
pop
mov
insb
pop
addr16
mov
mov
inc
and
ret
mov
mov
mov
mov
fnsave
mov
daa
idivb
cmp
mov
mov
mov
pop
adc
dec
aam
inc
in
xchg
out
mov
lods
sub
dec
or
sub
sarl
xchg
stos
xor
fsts
outsl
sub
add
adc
shl
loop
mov
mulb
fs
movsl
pop
push
nop
push
mov
aaa
cmp
mov
aam
test
sbb
xchg
jnp
add
cmp
mov
and
push
imul
hlt
sbbl
adc
cmc
cmp
mov
cltd
mov
adc
movsb
aad
or
adc
test
test
in
ja
mov
test
sub
int3
sub
sub
cmpb
xor
adc
dec
pop
fdivrl
adc
or
cmp
scas
xor
pop
mov
mov
sub
movb
push
sub
cld
loope
mov
ds
dec
mov
jp
arpl
adc
sub
mov
cmp
xchg
mov
mov
hlt
cs
mov
movsl
pop
mov
cmp
mov
sbb
arpl
shlb
iret
jno
mov
lret
xchg
lds
pop
pop
repnz
mov
xchg
or
dec
sub
add
mov
lahf
ret
fnstcw
cmpb
out
add
js
sub
je
testb
mov
jns
rol
mov
out
out
nop
mov
cmp
xchg
add
cmp
or
mov
cli
ja
lods
xor
and
out
and
sub
fistl
push
push
out
fldl
arpl
pop
jmp
and
fidivrs
xor
test
je
test
out
loope
sar
jb
xchg
adc
test
mov
mov
pop
or
cmp
mov
ret
inc
mov
mov
enter
mov
jp
imul
scas
or
movsl
insb
movsl
stos
xor
xchg
mov
cmp
addb
push
aas
gs
scas
and
cmp
xchg
cltd
xor
mov
inc
jg
or
pop
out
dec
mov
or
scas
pop
jmp
notb
lock
dec
push
pop
xor
push
out
xlat
int3
adc
xchg
int3
sbbl
mov
clc
or
std
adc
or
inc
cltd
test
lods
out
xlat
jle
mov
cmp
leave
icebp
push
ficomps
shll
test
test
jl
ret
mov
fisttpl
or
popa
aad
aaa
lods
cs
mov
cmp
mov
addr16
pop
cmp
add
call
mov
pop
shll
push
cmp
jp
xchg
ja
or
pop
jb
js
es
shrl
sarl
adc
mov
out
ror
xor
and
lcall
push
cmc
xor
push
stos
mov
adc
jb
add
addr16
aad
sub
xchg
cmp
and
inc
inc
jo
shll
sub
sbb
or
xor
fcmovnb
jno
add
stos
je
sub
adc
sbb
add
or
inc
xchg
cs
sahf
mov
dec
pop
ret
jno
mov
outsb
jl
in
neg
loopne
mov
jmpw
loopne
pop
sub
mov
add
fldln2
push
movsb
sarb
push
int3
mov
jmp
inc
ljmp
lock
inc
stc
mov
rcl
fdivs
adc
mov
jg
gs
out
andb
int3
sub
sti
jb
xchg
dec
xchg
das
ret
repz
call
pusha
mov
xchg
pop
lret
pop
sbb
xchg
scas
pop
sbb
xor
incb
cmp
dec
and
cmp
shl
cmpl
sbb
jg
addr16
jno
mov
loope
call
pushf
push
jmp
rol
movsl
sub
mov
enter
mov
adc
mov
notl
dec
cmpsl
stos
push
gs
pushf
jge
imul
test
test
and
in
jmp
jne
rcrb
xor
adc
mov
xor
or
les
cs
repnz
push
aaa
adc
lods
sbb
mov
dec
inc
movsb
or
add
mov
xorb
ds
movsl
mov
rolb
jecxz
sub
movsl
gs
cmp
mov
das
add
xchg
outsb
xor
ret
addr16
push
mov
shll
pop
mov
mov
add
fs
mov
dec
sti
pop
push
fnsave
and
rcll
lds
int
outsl
ljmp
inc
jecxz
push
sub
es
addr16
stc
pop
das
stc
int
mov
scas
aas
jge
pop
sti
xchg
pop
jecxz
push
subl
mov
inc
test
adc
outsl
push
sub
mov
inc
xlat
movsb
dec
lcall
cmp
out
sbb
fstl
movsl
jg
lahf
fs
repz
mov
or
xor
xlat
int3
out
xchg
jne
out
leave
cwtl
jmp
mov
imulb
lods
pusha
mov
or
aad
mov
inc
loop
pop
pop
orl
xor
mov
jl
dec
and
mov
ja
fidivl
jp
popf
or
rcrb
jmp
push
mov
sbb
std
aam
xchg
jno
add
lcall
jge
xor
or
sub
cmp
sti
push
xor
xchg
pop
lahf
cwtl
pop
xchg
adc
mov
lock
pushw
mov
aam
js
fdivs
mov
sbb
nop
jmp
mov
push
xchg
adc
inc
xchg
in
push
dec
psrlw
arpl
xchg
cmpsl
movb
mov
aaa
cmpsl
popf
leave
push
or
mov
cmp
cmp
dec
sub
mov
test
push
sbb
aas
jno
fidivrs
mov
inc
stos
add
aas
cmp
shlb
pusha
jno
ret
and
sub
jo
jne
sahf
dec
or
dec
outsl
push
in
sub
xchg
lods
mov
dec
pop
in
movsl
addr16
inc
and
mov
pop
inc
test
mov
scas
test
hlt
sbb
mov
or
and
enter
inc
call
into
xchg
dec
imul
add
icebp
jp
xorb
sbb
mov
repz
jp
pop
sbb
mov
pop
arpl
pop
jo
xor
outsl
sbb
push
and
fildl
sbb
cmp
pusha
imulb
jl
popl
mov
jmp
test
push
jnp
cmp
pop
jecxz
les
fisttps
out
xor
idiv
lret
fxtract
or
inc
pop
popf
cmc
sbb
push
cmpsl
sti
dec
inc
xchg
jb
xchg
mov
inc
daa
cmp
in
or
je
cmp
sub
icebp
mov
or
sbb
lds
mov
shlb
repz
sarl
xchg
lea
or
aad
stos
fwait
jbe
pop
pop
and
in
pop
mov
popa
inc
sbb
push
int
adc
xchg
insb
ret
and
movsb
call
ret
mov
adc
rol
cmp
sbb
mov
mov
stc
inc
xchg
std
inc
roll
sbb
imul
dec
mov
dec
mov
or
dec
mov
jbe
shlb
push
fcoms
mov
inc
leave
push
xchg
cwtl
pushf
lcall
leave
std
jmp
rcrb
xor
pop
jae
jg
fistl
mov
std
neg
or
mov
insl
pop
mov
sbb
fistps
xor
popa
ror
xchg
mov
pextrw
dec
lock
push
shrl
xchg
cmp
fwait
pop
or
dec
jae
ret
std
movl
mov
ljmp
ds
cli
xchg
or
sub
jno
cltd
mov
mov
xchg
ret
pop
jbe
mov
xchg
aad
dec
mov
sub
xor
scas
xchg
mov
lret
add
jno
xchg
dec
or
inc
mov
cmpl
into
pushf
das
mov
jae
jge
adc
fucomi
push
shlb
ljmp
pop
ds
fsubl
mov
xchg
scas
mov
add
push
bsr
mov
push
xchg
lock
cmp
xor
push
cli
push
add
dec
inc
loopne
cmp
out
sbb
mov
lret
pop
or
push
cmpsb
test
xchg
inc
mov
imul
mov
icebp
loopne
arpl
cmpsl
or
xchg
ss
test
mov
aaa
insl
mov
xchg
mov
pop
pop
and
mov
sub
and
jl
rcrl
int
mov
push
lock
and
jge
mov
inc
bnd
ret
jecxz
sbb
insl
hlt
push
add
js
mov
sbb
iret
jb
mov
movsb
sub
push
movsl
test
fs
repnz
sub
sbb
rorl
ds
fwait
jle
out
mov
or
mov
mov
push
xor
adc
adcb
pop
sbb
inc
or
ds
das
das
push
sub
jmp
cmpsl
addr16
lahf
nop
add
call
xchg
push
cmc
mov
scas
cs
aaa
lods
sbb
gs
mulb
ja
add
popa
cltd
xor
out
mov
testb
inc
cmp
dec
lret
int3
fs
mov
out
and
mov
cmc
inc
mov
mov
into
imul
into
xor
adcb
lahf
ss
pop
pop
push
addb
push
xor
sbb
imul
adc
popa
test
adc
insl
iret
xor
loop
insb
pop
out
mov
mov
mov
jns
jg
mov
mov
das
out
mov
dec
add
test
insl
cmpsl
adc
pop
push
sub
mov
cmp
inc
dec
and
inc
jge
jne
ds
push
lret
imul
jmp
jg
stos
cmp
js
lods
push
je
xchg
mov
push
jb
ja
loopne
aam
bnd
nop
imul
cmp
clc
cmpsb
out
inc
dec
mov
jae
scas
mov
movsb
orb
cmp
xchg
inc
jnp
xchg
push
rcll
jl
stos
adc
and
and
sbb
dec
cmp
shrb
xor
cld
int3
or
add
mov
testb
in
push
add
xchg
out
or
sub
adc
adc
mov
mov
fistpl
and
dec
sbb
mov
sbb
push
lea
jbe
fdivl
and
mov
sbb
sbb
inc
imul
jecxz
fldl2e
stos
pop
stos
xor
cmp
pop
lea
push
sbb
icebp
cli
lods
jo
call
lahf
jbe
push
and
jae
hlt
pop
pop
adc
xor
jns
adc
fisubrs
adc
stos
xorb
outsb
lahf
outsl
loopne
out
repz
ljmp
xorb
xchg
mov
out
loop
addr16
les
jae
add
sub
sbb
push
pop
mov
jmp
xor
pop
and
jmp
lret
xchg
out
mov
mov
jg
or
jmp
xchg
mulb
mov
push
jbe
jl
aam
mov
or
shll
xchg
in
lahf
fmuls
cmp
mov
pushf
lahf
ss
insl
sbb
push
hlt
loopne
rorb
in
xchg
repnz
adc
lods
jmp
ficompl
clc
aad
shll
jb
lea
mov
mov
pop
xor
add
fnstsw
jge
lret
sti
cmc
int3
jae
dec
stos
sub
testb
push
jo,pt
sub
cs
push
jne
adc
and
out
push
call
inc
mov
add
icebp
sahf
lea
pop
push
pushf
imul
jo
mov
cmp
icebp
out
pop
in
mov
dec
pop
or
lea
imul
ret
mov
scas
das
mov
mov
pop
nop
push
mov
pop
mov
dec
mov
mov
pop
les
xchg
movsb
and
jno
aad
inc
bnd
cmp
mov
mov
mov
out
sbb
add
push
pop
mov
or
js
xchg
inc
loope
int3
ret
or
pop
and
cmp
subb
mov
int
pushl
add
das
sub
mov
mov
or
data16
out
cmpsl
dec
jge
sub
adc
shl
add
jno
push
rcr
pop
mov
testb
lret
mov
xchg
inc
insl
adc
jno
test
sub
xchg
hlt
mov
fldt
mov
push
sub
and
lds
cmp
xor
xor
scas
iret
nop
test
test
rcrb
dec
adc
imul
and
out
or
imul
xchg
mov
popa
dec
add
pop
cmp
scas
mov
rorb
xlat
arpl
push
ljmp
dec
test
imull
mov
jne
in
rolb
pop
dec
jae
mulb
mov
repnz
fmul
or
cli
sub
lods
jg
insb
div
out
xor
pop
add
dec
mov
outsb
loop
movsl
pop
xor
lret
jmp
clc
dec
sbb
loopne
push
or
in
xor
out
ljmp
adc
sub
addr16
cmp
aam
mov
jbe
stos
lods
xor
pop
arpl
cmpsl
xchg
cmc
bound
aaa
mov
clc
adc
xchg
jg
bound
dec
daa
aaa
dec
lret
ret
loope
mov
test
inc
push
in
sub
rcrb
mov
aas
ret
add
je
adc
shll
jns
loope
mov
pop
lods
sub
push
xchg
cmpsb
rcrl
xchg
mov
dec
adc
sbb
les
push
sbb
stos
fwait
dec
adc
dec
add
rorb
jge
mov
pop
dec
dec
pusha
insl
dec
and
ds
jle
cld
shl
and
enter
inc
bound
add
sbb
cmpsb
jp
jp
inc
dec
leave
insb
inc
pop
into
xor
inc
in
mov
dec
cmp
sbb
inc
push
sbb
mov
push
push
loop
loope
leave
sarb
xchg
mov
clc
mov
subb
and
or
adc
pop
mov
dec
movsl
inc
ljmp
or
inc
gs
dec
mov
xorb
stc
pop
sahf
ja
sub
jecxz
or
in
jno
icebp
mov
cmpsb
movsl
push
rcll
inc
mov
orb
lods
movsb
in
mov
mov
push
lea
arpl
mov
push
fs
inc
shr
inc
adc
arpl
imul
lret
mov
loope
es
xchg
push
and
arpl
cli
mov
pop
addr16
mov
sbb
sub
repz
int3
aad
and
cmp
mov
daa
out
cmpsb
mov
add
cs
adc
mov
mov
pop
push
or
lahf
adc
dec
mov
sbb
inc
std
mov
rclb
and
jae
dec
pushf
cmpsl
repnz
out
out
add
mov
in
in
cltd
add
push
add
std
test
clts
mov
mov
push
daa
inc
fs
ret
dec
inc
cmp
stos
push
insb
leave
push
push
push
jp
pusha
lods
data16
int3
and
int
lds
sbb
or
xchg
test
das
fisttpl
mov
fstpl
pop
xchg
aad
test
sub
outsb
adc
jne
into
icebp
mov
outsb
int3
fs
les
mov
scas
in
dec
jne
cmpsb
dec
aaa
daa
pop
cmp
cltd
pushf
sti
fdivrs
sub
stc
stc
mov
std
or
ror
cmc
gs
adc
pop
pop
cli
jb
jg
mov
andl
pushf
jecxz
out
sbb
mov
push
xchg
sbb
pop
sbb
dec
fnstenv
xlat
jecxz
cmp
int
xor
dec
stos
dec
sbb
std
stos
jl
cmc
push
dec
test
or
lods
add
fisubrl
mov
call
rcrl
inc
xchg
add
lds
popf
daa
fldcw
pusha
mov
sub
mov
push
and
jae
cld
inc
jno
sub
mov
insl
cmp
not
orb
sub
xchg
mov
adc
jecxz
fidivrs
xor
inc
mov
fabs
cld
xor
sub
ds
loope
sub
fwait
or
je
cmp
inc
and
jae
sbb
enter
inc
mov
push
sub
or
shl
cld
loopne
js
jb
xor
cli
sarl
mov
inc
mov
iret
clc
or
inc
outsb
pop
aaa
pop
push
mov
sub
cmpsb
out
or
cmpsb
mov
movsb
mov
cmp
push
addr16
pop
xchg
mov
push
push
ds
and
adc
rol
cmp
pop
in
fwait
pop
or
insb
imul
adc
xor
xchg
sub
dec
push
lds
or
and
stos
cmp
mov
mov
cmc
das
or
jl
xor
pop
dec
gs
and
jbe
add
adc
add
xchg
pop
sahf
imul
ljmp
dec
hlt
add
pushf
sbb
sub
push
push
scas
adc
cmpsl
andb
stos
cltd
jmp
loop
lahf
fwait
out
bound
insl
adc
sbb
outsb
mov
dec
loop
xor
push
xchg
sub
lcall
into
cmp
and
fstl
dec
sub
out
fidivrl
xchg
xor
jbe
jg
mov
mov
test
mov
add
das
das
xorb
leave
lea
fcoms
xor
lods
sub
adc
lea
jne
dec
mov
fldcw
ja
sub
jns
pop
mov
dec
inc
imul
push
sub
scas
mov
and
or
imul
mov
fstl
ja
inc
fwait
sbb
jge
mov
les
cltd
push
or
jns
xchg
int
andb
pop
push
sub
cmpsl
inc
aam
int3
dec
es
add
mov
adcl
push
sub
xor
jmp
psrlw
js
push
fs
adc
aad
xor
in
xchg
add
jnp
push
xchg
fmuls
movsb
add
mull
scas
push
sti
pop
js
test
xchg
fmull
out
test
xchg
sbb
jnp
popa
aam
pop
aam
nop
jb
iret
movsl
add
xchg
push
and
adc
cmp
hlt
cmpb
ret
icebp
addl
xor
push
push
jecxz
adc
or
std
or
push
inc
xor
dec
mov
dec
arpl
pop
cmpl
mov
mov
jg
rolb
das
push
das
sub
pop
or
adc
xchg
jl
test
add
cmpsb
mov
dec
scas
lock
dec
sub
mov
inc
pop
dec
data16
aad
mov
mov
es
cmp
mov
in
push
negb
cmp
add
icebp
aas
add
dec
push
loopne
int3
add
popf
addr16
xchg
push
cmpsb
push
pop
in
push
add
push
stos
mov
xor
es
push
mov
sub
loopne
int
xchg
outsl
push
xlat
cmp
shl
mov
stos
cmp
push
lock
dec
adc
and
inc
adc
pop
adc
jmp
shrb
mov
mov
mov
mov
ljmp
in
and
ss
xor
dec
shlb
mov
inc
negb
arpl
inc
fucompp
stos
rol
adc
insb
lahf
push
fmull
movsl
out
cltd
ds
test
and
fdivr
or
dec
neg
fildll
lods
movsb
iret
and
add
adc
xor
aam
pop
in
icebp
inc
cltd
jo
xor
add
clc
jle
orb
xor
dec
lods
dec
inc
iret
mov
push
cmp
and
mov
xor
mov
sub
xor
test
inc
inc
das
dec
nop
cwtl
mov
bound
imul
daa
cmp
push
cmpsl
andl
mov
aas
jmp
shr
sub
inc
jbe
dec
mov
mov
xchg
dec
daa
addl
fcoms
mov
xchg
xor
shll
pop
xchg
std
je
popf
jne
add
push
mov
lea
clc
jle
movsb
nop
jne
and
rorb
push
je
loop
jno
fcomps
mov
fcmovnb
lahf
mov
jle
mov
mov
xchg
dec
or
js
cmc
mov
scas
and
mov
jbe,pt
pop
sahf
jecxz
pop
dec
jae
std
pop
push
imul
push
xchg
aaa
push
lcall
pop
in
sbbb
cwtl
fnsave
in
xor
outsl
inc
ss
pop
xchg
insb
movsl
mov
cmp
xchg
repz
in
mov
leave
mov
fadds
xchg
lock
popa
sub
pop
sub
notb
addb
mov
push
sub
or
add
fs
and
movb
cmpps
push
pop
inc
xchg
mov
sbb
je
adcl
fldl
fidivrs
out
pop
mov
push
outsl
je
iret
push
mov
dec
cltd
push
jae
push
lods
or
test
jb
aad
loop
dec
dec
inc
xor
fisubl
sbb
fnstsw
lods
cs
dec
loope
sub
push
push
loop
or
push
frstor
xlat
sbb
jno
aaa
pop
lahf
pop
jecxz
je
xlat
repz
repnz
inc
int3
scas
fisttpl
dec
clc
and
dec
ret
sbb
imulb
bswap
sub
lods
cli
and
cmp
ja
mov
repz
jge
iret
adc
xor
lahf
orl
sub
imul
or
cmp
idiv
cs
hlt
addr16
pop
in
xchg
inc
addr16
jg
push
add
xlat
scas
sahf
scas
mov
arpl
andl
fs
andb
pop
jae
insl
mov
mov
decb
popa
jge
or
stos
push
in
lret
std
pop
and
bound
pop
cmpsb
sub
aam
in
cmp
push
out
lret
mov
adc
xor
add
jmp
pusha
mov
jb
cmp
push
mov
mov
dec
cmp
inc
xchg
jbe
xchg
and
fs
daa
mov
jle
and
dec
lcall
mov
xor
mov
ss
pusha
enter
test
pop
inc
in
mov
and
andb
mov
mov
adc
xchg
ret
cmc
ret
jp
add
mov
push
int
mov
sub
push
loop
in
sar
cmp
push
data16
idivl
or
inc
cmp
pop
ret
or
mov
ja
loopne
adc
sub
mov
pop
mov
je
lahf
push
and
ret
popf
repnz
xorl
mov
ret
inc
push
mov
adc
notl
inc
data16
jmp
cmp
add
xchg
jge
mov
movsb
cs
mov
mov
jl
inc
push
mov
into
xchg
and
pop
int3
js
jno
sahf
xchg
push
mov
xchg
cmc
xchg
cli
pop
imul
pop
or
outsl
adc
add
cmpsl
mov
scas
dec
pop
lock
jns
xor
into
xlat
xchg
enter
add
jmp
jle
shll
and
in
clc
dec
and
adc
mov
repz
das
inc
bound
fwait
add
fcomp
mov
outsl
das
lds
je
movl
dec
adc
scas
adc
pop
lods
addr16
xchg
lock
pop
jns
jge
loope
jmp
jl
and
repnz
rorb
mov
pop
adc
jbe
add
xor
in
ror
cmp
cwtl
pop
pushf
mov
test
scas
fdivr
sbb
std
jg
cmpsl
and
out
aad
nop
pop
jg
mov
dec
stos
add
inc
sbb
mov
inc
jbe
andb
xchg
insb
jle
icebp
sub
fs
push
rorl
movsb
aam
inc
add
lcall
sar
mov
roll
dec
cmpsl
or
std
and
out
daa
dec
xor
fwait
inc
jecxz
fdivs
mov
push
out
sbb
jmp
lock
lods
add
or
test
xchg
dec
and
mov
or
sarb
js
andl
packsswb
dec
movsl
clc
push
rorb
aad
jns
inc
or
nop
and
jo
and
pop
andb
push
imul
cmp
into
rcrb
sub
shll
sub
sbbl
ret
popa
jp
push
xchg
imul
mov
push
fs
inc
cs
insb
jo
and
pop
nop
mov
mov
jge
sti
xor
fistpll
pop
dec
popa
mov
iret
cmc
mull
rorb
mov
dec
testb
sbb
aaa
adc
clc
jg
push
jns
mov
mov
arpl
cwtl
sarb
mov
loopne
sub
or
call
stc
adc
xor
jle
sub
sub
jb
movsl
cwtl
clc
addb
jnp
sarb
insl
imul
push
das
int3
stc
pop
lret
inc
movsl
mov
mov
push
ljmp
dec
xor
jl
repz
jle
push
loopne
inc
call
stos
test
pop
test
dec
jnp
nop
lret
jne
add
pop
sub
push
xchg
mov
dec
ja
add
iret
std
aas
rcrb
out
push
mov
lret
mov
push
jnp
test
pop
rcrl
mov
sbb
jns
add
stc
jae
imul
scas
sub
movsl
xor
fisttpll
not
sub
sbb
jb
xchg
sarl
insl
shll
push
loope
push
dec
jecxz
mov
add
in
jno
jge
imul
fstp
pop
sbb
jno
std
ss
cmpsb
and
or
mov
je
xchg
pop
pop
dec
cs
adc
jo
inc
pusha
cmpsl
lods
dec
push
insb
loopne
jbe
push
xchg
sti
mov
cmp
xor
popf
nop
sub
lret
les
xchg
test
mov
xlat
das
loop
lcall
inc
std
push
push
ja
pop
adc
decl
dec
inc
mov
push
or
sub
ss
aam
adc
movsb
das
stc
cli
cli
aad
stos
pop
jno
jge
mov
cli
arpl
xchg
test
dec
cmp
ds
shlb
enter
insl
test
mov
or
addr16
sbb
jo
dec
lods
pop
cmp
inc
loopne
sbbl
test
jo
xchg
push
push
xchg
dec
xor
rorl
xchg
inc
cmp
fsubp
mov
sqrtps
push
clc
and
push
or
xchg
sub
ljmp
push
mov
mov
pop
xchg
jge
xchg
dec
adc
push
repnz
ja
cmp
lret
jae
mov
mov
mov
push
data16
dec
xor
insl
mov
mov
push
sbb
pusha
cmp
test
sbb
out
mov
and
xor
jge
or
pushf
ja
push
adc
adc
jnp
push
push
arpl
pop
push
pop
call
cmp
sub
insl
ror
or
jo
les
push
enter
cmpsl
mov
push
dec
pop
xchg
dec
jge
and
lods
les
sti
movsb
xchg
lret
push
push
mov
arpl
or
test
add
les
ret
stc
daa
repnz
cmp
mov
cli
pop
mov
pop
sbb
orl
xchg
xchg
stos
dec
add
dec
xlat
stos
and
pop
jecxz
repz
shr
fcmovnb
sbb
popf
in
sub
cmp
cld
ud0
es
add
and
rclb
fsubr
mov
xor
sbb
mov
icebp
xor
mov
lock
jmp
out
js
mov
imul
sub
jb
sbb
xchg
jb
xchg
mov
mov
fwait
jo
pop
stc
sbb
mov
mov
scas
push
push
shl
inc
out
mov
fs
sti
orb
daa
xorl
jbe
jb
stc
inc
scas
das
lock
or
jmp
sbb
bnd
jl
test
pop
fisttpll
add
loopne
sbbb
sub
mov
adc
pop
shlb
in
xlat
mov
sbb
dec
push
repz
daa
pop
ja
mov
lods
je
jns
into
cmp
rcrl
leave
mov
call
or
pop
test
lcall
aaa
pop
and
outsb
imul
fistpll
push
aad
js
out
sub
iret
fstl
cmp
cmp
inc
mov
out
adc
ds
mov
daa
stos
jle
ret
adc
sbb
cs
sub
mov
out
cmc
dec
inc
and
or
inc
ficoms
sub
dec
scas
outsb
xor
mov
mov
inc
movsl
jmp
setb
cmpsb
notb
dec
push
jns
cmp
pop
out
shlb
bswap
lcall
xor
stos
repnz
sub
and
sub
jns
shlb
mov
xchg
and
mov
inc
insl
add
mov
dec
loop
popf
mov
mov
jecxz
pop
cwtl
jl
addr16
pop
add
adc
mov
aaa
outsb
add
lahf
adc
aas
hlt
lahf
repnz
icebp
aam
stc
lods
xchg
xor
imul
stc
add
arpl
cli
xor
cs
cmp
gs
xor
sets
mov
add
inc
mov
inc
dec
loop
popa
inc
aas
mov
movl
dec
in
pop
movsl
pop
in
pop
pop
stc
sahf
fsts
cmp
int3
lret
pop
aad
adc
in
fnstsw
scas
push
sbb
adc
dec
clc
cmp
imul
inc
pop
popf
int3
xchg
mov
xchg
or
fsubp
xchg
pop
pop
mov
pop
imul
pushf
gs
mov
pushf
sbb
mov
mov
jne
repnz
push
nop
ljmp
addr16
bndstx
mov
xchg
mov
leave
dec
fs
lret
insb
bound
jo
incl
sbb
hlt
add
inc
mov
pop
loop
outsl
cmp
leave
fcmove
cld
out
pop
jnp
inc
shrb
sub
push
xor
xor
mov
mov
sbb
cmp
jl
mov
inc
in
jg
dec
inc
push
add
sub
mov
lea
cmp
push
cmpsb
add
nopl
inc
mov
xor
sbb
xchg
pop
outsb
cltd
cmpsb
sub
dec
lea
push
jmp
shl
push
sbb
xchg
fidivs
popf
sub
jne
or
shll
dec
add
jne
jo
adc
jb
mov
sub
push
jp
sbb
fs
cmp
shrb
out
inc
in
ja
adc
lret
ror
outsb
cmovp
push
lods
push
dec
inc
jl
inc
mov
pop
aad
shll
cmp
fsubr
mov
lods
and
or
loop
inc
popf
addr16
shl
mov
bound
aaa
adc
lcall
push
lret
mov
pushf
ret
lret
inc
cs
out
clc
jno
xor
or
sub
xor
inc
out
cmpsl
xor
icebp
adc
test
loopne
lea
pop
dec
das
testl
add
hlt
vmwrite
int3
lret
xchg
mov
aad
mov
and
ja
sub
dec
or
dec
pusha
aad
fimuls
mov
sub
imul
mov
lods
fcomip
sbb
push
fisubs
fsubl
push
imul
mov
scas
or
out
and
xor
lcall
pop
sub
outsb
mov
inc
sti
push
sub
ljmp
pop
sbb
add
pop
jnp
fs
xchg
lods
cmc
add
popa
repz
push
imul
lcall
dec
pop
dec
hlt
aad
mov
xchg
push
fisttpl
adc
push
cmp
mov
xor
xchg
fisubl
mov
out
jb
or
aad
dec
mov
pop
add
lret
xchg
inc
jmp
and
pusha
vmwrite
inc
gs
xchg
mov
jbe
jle
sub
push
in
inc
jecxz
dec
int
pop
sub
inc
or
and
fsubrs
mov
jg
add
loope
cmp
xor
sub
jecxz
leave
outsl
es
mov
out
pop
jecxz
fcmovnb
xor
and
sbbl
movl
test
fnsave
push
jne
scas
rcr
jbe
pop
sarb
adc
pusha
arpl
pusha
pop
addl
pop
add
inc
xlat
jp
repnz
pop
aad
mov
subl
dec
mov
jnp
aad
loopne
dec
sbb
rclb
sbb
mov
sub
mov
inc
addr16
rcll
adc
mov
das
sbb
das
ds
ds
sti
loop
fldcw
or
sbb
cmp
or
scas
test
aad
sbb
push
or
adc
push
push
sbb
ret
sahf
sub
imul
xorl
jmp
in
and
aas
fwait
sub
pop
out
inc
stos
lock
mulb
mov
or
imul
jo
je
addb
cs
mov
mov
in
fstpl
pop
lods
cs
std
nop
loop
imul
popf
gs
jge
mov
push
inc
shr
xor
scas
adc
mov
arpl
insl
jb
loopne,pn
dec
out
pop
adc
xor
mov
adc
mov
sbb
dec
or
shll
in
mov
add
repz
rcr
cs
cmpsb
lds
mov
adc
paddsb
fldcw
movsb
cli
out
into
lods
sbb
mov
test
jg
xlat
lea
cld
fs
adc
push
call
lock
je
sub
sbb
or
cmpsl
nop
dec
add
inc
ljmp
dec
stos
jnp
and
int3
xor
jo
in
std
pusha
shr
sbb
ss
mov
aaa
cmp
pop
pushf
pusha
sti
push
std
lret
mov
push
add
xor
mov
ds
push
sar
sub
in
dec
insl
xchg
repnz
iret
mov
ficoms
and
popf
aas
add
sbb
mov
xor
xor
pop
out
pop
sub
daa
xor
cmp
mov
sbb
sahf
jns
nop
mov
icebp
adc
rolb
lds
sbb
push
pop
inc
fiaddl
and
pop
sub
cmpsb
dec
pop
into
adc
shl
push
mov
lock
pop
fistpll
jnp
xor
xchg
jp
jns
mov
into
push
jne
lret
fcoms
mov
jb
das
iret
addr16
add
cmp
mov
jl
mov
int
orb
xchg
add
xchg
push
ud0
jne
push
lcall
test
test
outsb
sub
xchg
mov
cltd
mov
data16
inc
pusha
icebp
arpl
or
and
jbe
push
repnz
enter
jns
pop
push
aad
je
cld
mov
lds
aad
jp
push
and
das
mov
fwait
sub
call
xchg
mov
mov
jbe
or
sbb
mov
daa
leave
cmp
cs
jg
push
lea
jl
mov
sub
test
lods
test
bnd
leave
cmpsl
and
lcall
mov
adc
xor
nop
mov
ja
mov
lahf
xchg
test
cmpsb
jb
ja
dec
ljmp
lahf
lock
sbb
inc
les
mov
and
and
test
or
orb
cmp
or
sub
jns
test
mov
ret
push
or
mov
divl
loope
jl
out
movl
adc
js
ljmp
pop
xchg
test
in
and
sbb
and
jo
cltd
insl
les
add
clc
aam
les
adc
push
pop
nop
xchg
dec
in
fwait
testb
aaa
jmp
mov
xchg
popf
mov
cmp
cld
dec
add
movsl
adc
push
cwtl
mov
subl
out
jmp
push
sub
shrb
gs
cld
push
cmpsl
add
fucomip
adc
sbb
mov
cwtl
pop
lock
sbb
stos
xchg
fildll
xchg
xchg
or
lahf
xchg
or
mov
imul
ror
and
gs
pushl
das
mov
lds
inc
jno
add
xchg
add
cltd
sbb
push
icebp
jge
xchg
push
or
test
add
xchg
lods
mov
mov
inc
or
mov
subb
out
jb
cmc
push
pop
or
andb
repnz
cli
mov
test
mov
int3
inc
dec
pop
pop
js
outsl
testb
pop
stos
sbb
notb
mov
mov
jl
jp
dec
pop
mov
dec
jmp
sbb
fdivrs
outsb
pop
or
loope
mov
test
outsl
push
scas
inc
sub
or
imul
ret
outsb
cmp
mov
rol
fldcw
lret
ja
push
push
add
push
mov
aam
in
fwait
add
adc
insb
cld
and
cmpxchg8b
jecxz
mov
inc
dec
rolb
loope
sbb
jg
cli
clc
inc
add
sbb
push
cwtl
dec
pusha
adc
jmp
mov
addr16
jmp
icebp
mov
adcb
push
mov
dec
lods
ss
mov
and
jmp
lods
xchg
xor
sbb
adc
dec
hlt
leave
dec
dec
into
jo
sbb
pop
imul
bswap
sub
popf
sub
pop
ljmp
movsb
pusha
dec
sub
fistpl
sbb
and
mov
cs
fs
pop
ljmp
stos
in
jmp
mov
sbb
xlat
test
mov
push
adc
cmpsl
adc
lock
into
lret
xor
lds
or
add
sub
inc
xchg
inc
add
mov
push
and
sti
gs
scas
xor
xlat
or
mov
push
jmp
cwtl
add
leave
or
or
nop
mov
fiaddl
lahf
stc
push
dec
popf
xchg
add
popf
and
cmp
mov
fs
lods
incl
push
jb
jno
push
cs
mov
sub
scas
aad
xchg
dec
lahf
fwait
mov
shll
mov
xor
cmp
js
adc
dec
test
ret
sar
decl
jle
sub
es
and
lods
pop
ror
lods
mov
popf
into
jecxz
mov
or
or
arpl
and
pop
mov
pop
xchg
lods
mov
nop
jns
popf
mov
push
cli
arpl
test
sub
shlb
movsb
or
data16
jae
jnp
leave
call
push
xor
mov
jecxz
lods
xchg
nop
mov
jnp
mov
jl
xor
and
add
push
loopnew,pn
jmp
scas
inc
rcll
pop
mov
pop
xchg
fisubrl
cs
jl
jg
negl
mov
ficoms
es
aad
cmp
xorl
in
fwait
xor
pop
ficoms
mov
adc
cmp
repz
inc
les
xchg
pop
or
pop
mov
out
xor
mov
pop
inc
mov
outsb
lret
inc
add
test
sbb
and
std
int
mov
pop
pop
rcrb
aaa
xor
jae
add
outsl
lock
insl
jne
dec
repnz
xor
sbb
dec
add
inc
and
std
mov
imulb
cwtl
jne
or
out
jge
pop
popf
addr16
lcall
sbb
std
addl
ja
add
xor
inc
cmp
lcall
pushf
xchg
iret
push
fildll
mov
lret
pop
ficompl
inc
dec
aaa
mov
sub
or
push
sbb
cmp
lock
test
pop
lret
cmp
rcll
sahf
rcll
sbb
pushf
psubd
scas
in
test
cmp
mov
shll
dec
or
dec
fwait
repz
std
sub
or
lahf
xor
mov
mov
rcrb
enter
xchg
lds
fimuls
inc
jns
adc
ja
jno
add
sbb
xchg
fistps
adc
jg
sarl
adc
mov
mov
xlat
mov
sbbl
inc
fsubr
jno
inc
test
cmove
mov
test
std
popf
xchg
imul
sbb
lret
and
dec
jns
das
inc
in
xchg
or
cmpl
call
ja
jle
subb
andb
cli
aad
lods
mov
pop
mov
rcrb
shr
dec
adc
ljmp
insb
jb
and
and
punpckldq
adc
or
data16
imul
icebp
add
leave
or
xor
loope
jge
int3
mov
jae
lods
cltd
rorl
xor
xchg
sub
and
data16
in
ror
out
push
imul
jle
mov
xor
sahf
lods
mov
cmp
jmp
icebp
iret
mov
dec
addr16
icebp
sbb
jmp
data16
test
jl
outsb
test
dec
enter
stos
mov
sbb
sbb
scas
jns
pop
movsb
fsubrl
add
rcrl
xor
rol
add
inc
cs
inc
dec
inc
popf
int3
xchg
aaa
in
lret
js
mov
sbb
inc
mov
daa
inc
fildl
imul
inc
ss
sbb
in
jae
add
xchg
pop
mov
testl
cs
lret
fnstenv
cs
mov
or
out
mov
jle
addl
sbb
leave
ljmp
mov
pop
out
lahf
inc
stos
addl
sub
cmpsl
xor
outsl
aas
jmp
inc
sbb
lea
js
ud0
dec
std
mov
mov
mov
pusha
push
in
pop
mov
outsl
testl
and
xchg
xor
mov
lret
jl
pushf
mov
add
shll
mov
sbb
mov
xor
cs
fnstsw
ds
adc
sbb
sti
rorl
cmpsl
testl
push
call
cmpsb
mov
push
sbb
push
in
cmpsl
cmp
mov
movsb
sub
add
aad
in
adc
sarb
mov
cmp
fbstp
xor
and
fxch
inc
fistps
scas
repz
leave
aas
xor
mov
dec
push
sub
inc
test
pusha
and
cmc
xchg
sbb
adc
stos
lods
pop
pop
dec
mov
sub
test
aad
xchg
add
and
rorl
xchg
xor
negb
loope
ja
stos
int3
push
push
or
push
dec
dec
push
imul
stos
cld
inc
pop
test
inc
lock
sti
inc
and
pushf
pop
sbb
out
xor
xchg
push
fidivl
lock
xchg
xorl
insl
add
add
pushf
dec
rcll
adc
cld
adcb
fdivrs
jmp
cmp
insb
int
pushl
jb
fadd
pop
ja
sbb
push
mov
aad
mov
rcrb
mov
sbbl
add
mov
push
add
and
loope
pop
jno
pushf
push
stos
ret
cmp
sti
mov
mov
sar
jmp
and
das
call
je
fcmovbe
enter
sub
lret
sub
dec
ret
bound
lcall
xchg
jl
jnp
loopne
mov
rorl
or
out
pop
dec
xchg
ret
scas
push
push
sub
jmp
mov
xor
fsts
cmpsb
add
xor
dec
ds
pop
cmp
xor
sub
out
mov
fiadds
scas
xchg
hlt
pop
and
sub
xchg
pop
pop
mov
inc
mulb
mov
sahf
test
xchg
push
cmp
lahf
push
dec
xlat
popf
test
jmp
xchg
imul
fwait
jle
mov
daa
imull
dec
mov
mov
enter
repz
jbe
lock
les
xor
outsb
push
addl
fdivrl
xor
ljmp
ds
jl
mov
popf
movsb
in
fidivrl
xor
add
lret
lods
adc
leave
xchg
addr16
fstps
mov
addr16
shll
jle
popf
mov
icebp
fiaddl
ret
inc
scas
sub
popa
cmpsl
add
xchg
jns
mov
cmp
aaa
daa
jae
cwtl
sbb
pop
fcoml
cmp
in
daa
imul
roll
cs
dec
or
outsl
mov
mov
mov
out
pop
push
or
imul
inc
pop
stos
xchg
shll
mov
mov
test
arpl
into
pushf
movl
sub
sub
sub
xchg
cmp
mov
in
or
popa
lds
iret
sbb
or
xchg
dec
les
mov
inc
repnz
jo
pop
jno
repnz
pop
or
js
mov
xor
scas
inc
shr
dec
mov
inc
mov
stos
clc
mov
and
jl
mov
incl
mov
xchg
mov
aam
lea
loopne
fbstp
jmp
sti
push
mov
stc
stc
fimull
out
mov
and
ja
or
sub
push
push
pop
shll
add
scas
or
push
and
mov
shr
push
sbb
cmpl
daa
jmp
jno
rorb
jae
jne
aaa
in
pop
mov
mov
dec
adc
mov
or
push
in
ss
adc
das
mov
or
mov
ljmp
jo
shlb
stos
sbb
xchg
stc
push
sarb
ret
jo
inc
add
pop
inc
inc
pop
aad
cmp
xor
push
je
fucomp
or
int
aas
cwtl
rcr
leave
dec
mov
pushf
pop
push
xchg
test
pop
xchg
sti
leave
inc
mov
addr16
dec
inc
mov
movb
push
test
into
inc
jnp
dec
cmpsl
mov
in
ss
movsb
pushf
cmc
ja
add
push
dec
mov
pusha
pop
mov
lods
pop
pop
adc
mov
leave
clc
or
mov
sbb
cmpsl
fiadds
fisubl
dec
xor
mov
sub
dec
push
inc
adc
daa
xchg
pop
cmc
in
mov
std
jmp
sbb
and
pop
mov
sub
mov
lcall
lcall
lea
sub
and
pop
push
mov
and
loop
sbb
rcrb
in
inc
mov
fst
dec
mov
pop
clc
adc
sbb
xor
pop
in
imul
inc
pop
test
pop
push
and
out
aam
cmpsl
push
aaa
clc
hlt
xor
cltd
mov
pop
fnstenv
push
fscale
adc
dec
rcrb
xor
rcr
addb
lods
imul
in
test
and
aaa
pop
sbb
push
or
data16
sub
push
jl
test
rclb
cmpb
leave
pop
push
icebp
xchg
mov
rcpps
test
cltd
mov
push
test
lds
push
lret
das
sub
ds
cmp
xchg
cmpsb
mov
pop
mov
cs
lahf
lods
int
mov
dec
mov
sbb
das
add
mov
out
jmp
xor
shrb
stos
or
xor
add
inc
fimull
jae
aas
movl
ja
stc
sub
pop
fadds
cmp
jb
inc
gs
pop
pop
and
in
andb
pop
cmp
mov
xchg
jo
pop
jns
and
popa
cmpsl
nop
popf
fcom
mov
jl
gs
add
aaa
jo
cli
cmp
addr16
mov
pop
and
loop
lock
mov
cli
inc
ds
xor
bnd
aad
mov
dec
cmp
dec
or
mov
xchg
sub
mov
out
push
nop
cli
into
bound
push
and
aam
adcb
shll
push
add
mov
and
rclb
inc
cmp
leave
dec
jbe
add
cmp
out
inc
jl
xchg
fisubs
pop
cltd
rcrl
adc
xchg
xlat
pop
aaa
out
dec
fisubl
push
inc
neg
shl
xchg
das
mov
add
aam
sub
push
jns
adc
xor
mov
sbb
rorl
arpl
mov
sub
subl
and
push
pop
mov
adc
dec
mov
stos
cld
and
jp
adc
call
orl
and
push
mov
dec
xchg
push
push
stc
sbb
xchg
push
aad
jae
xor
mov
adc
mov
jo
inc
aaa
cmp
or
xchg
lods
add
jae
test
ss
repz
xchg
rolb
sti
mov
loop
ss
inc
pop
mov
mov
mov
lods
pop
sbb
fwait
cmpsb
mov
pushf
push
jae
mov
jnp
inc
aam
mov
xchg
adc
inc
push
das
jo
movsl
leave
push
xchg
out
xchg
fnsave
pavgw
lods
adc
adc
repnz
mov
mov
push
mov
and
sub
scas
outsb
xchg
cmpsl
cs
outsb
test
or
adc
shr
jg
sbb
mov
fwait
xlat
insb
push
inc
je
sub
sbb
jno
inc
lret
ss
add
cmp
mov
mov
adc
dec
dec
dec
mov
mov
inc
sub
or
test
xchg
dec
xor
sub
out
adc
rclb
cmc
jmp
push
dec
jecxz
sti
aam
inc
sub
lock
mov
fs
xor
or
xor
xor
adc
test
inc
lret
xchg
andl
pop
lds
fldenv
xchg
cmc
adc
fld
add
enter
jge
or
js
scas
mov
mov
and
cwtl
fistpl
into
mov
or
adc
nop
daa
pusha
pushf
int
add
mov
fcoml
repz
push
sub
and
jnp
shlb
mov
jg
gs
aas
arpl
or
jae
dec
dec
rorl
sub
fcoms
popl
jne
adc
fsubrs
shlb
cmp
jnp
gs
sahf
cmc
xor
lods
leave
std
outsb
dec
ret
rcr
aas
iret
xchg
je
sub
fsubs
lods
movsb
ret
ret
mov
sbb
inc
jge
or
je
mov
mov
sbb
add
pop
lock
imul
gs
stc
push
mov
xchg
xchg
aam
pop
jns
sarb
add
xchg
or
cli
mov
xlat
add
pop
divps
cmc
push
mov
sub
pusha
pop
jecxz
ret
testl
push
or
sub
fs
stc
loope
fs
sahf
out
inc
mov
in
stos
cmp
pop
aad
cs
lods
imul
sbb
pop
popa
mov
hlt
adc
mov
imul
cmp
jns
inc
add
popf
push
cmp
gs
stc
push
jno
ds
fwait
js
sbb
mov
jmp
les
andb
call
fadds
add
imul
ljmp
mov
adc
ss
decl
mov
hlt
jns
xchg
mov
add
or
push
lock
out
push
ficomps
inc
hlt
jns
sbb
es
inc
in
mov
adc
mov
out
or
loopne
adc
ficomps
pop
movsb
jecxz
rclb
jno
cmp
push
push
in
sbb
cli
pop
adc
cmp
mov
mov
cmpsb
add
nop
mov
test
ss
cmp
xchg
cmc
jle
xrelease
dec
mov
rolb
mov
scas
ja
movsb
sar
xor
test
jmp
mov
imul
pop
fs
adc
lock
mov
pop
rcl
leave
aad
sahf
fnstcw
mov
add
push
stc
cld
ds
repz
jl
jle
repz
cmpsl
sbb
mov
cmp
cmp
add
pop
jno
stc
ret
sub
fdivrs
sbb
jae
addl
xchg
xor
sbb
lea
and
pop
push
test
test
imul
lret
adc
xchg
mov
aam
out
or
sub
cmp
sub
and
lods
jle
paddq
addb
imul
cmp
insl
sub
mov
mov
ja
mov
mov
je
adc
add
and
push
outsl
in
pop
pop
lea
sub
fiadds
inc
out
cmp
fiaddl
mov
inc
cwtl
xor
or
imul
sub
inc
pop
and
sbb
cmpl
adc
mov
les
xchg
mov
mov
testb
jl
mov
pop
outsb
push
int3
orl
push
neg
fcoml
add
inc
outsb
cmp
imul
lock
popf
inc
cmp
push
pop
lret
aam
mov
ffree
jb
adc
inc
data16
pop
or
pop
push
mov
lds
fcoml
out
sub
mov
push
sub
and
aam
insl
loope
inc
mov
je
loop
pop
pop
cmpsl
leave
movsb
out
sbb
cltd
dec
xchg
decb
dec
adc
lret
mov
mov
repnz
sbb
pop
push
insl
jp
cltd
repnz
fstps
fsts
pushf
jg
and
psrld
cld
je
inc
mov
mov
iret
popa
fists
das
xor
fs
les
dec
push
pop
outsb
jmp
iret
sub
jne
and
ret
sbb
sbb
xchg
fildll
call
int
aad
addr16
xchg
cmp
sub
xor
push
jge
jmp
sarl
dec
mov
data16
arpl
fsubs
mov
enter
cwtl
push
cwtl
lods
pop
mov
adc
stc
nop
jmp
dec
cs
sub
dec
test
push
call
mov
stos
mov
or
mov
add
or
adc
xchg
scas
cmp
xor
push
inc
cwtl
shll
push
mov
mov
jne
jo
in
lahf
mov
lret
mov
jns
stc
adc
pop
dec
jp
sbb
fisttpll
mov
xor
cmp
cmp
pusha
adc
sbb
xor
adc
inc
add
movsl
mov
jo
call
mov
movsl
rcl
or
inc
pop
aaa
rep
lret
inc
and
daa
cld
or
fwait
sbb
outsb
pop
pop
stc
frstpm(287
sbb
mov
aaa
test
das
and
add
ss
lds
sbb
push
movsl
cmpsl
pop
push
adc
sbb
jnp
dec
and
sub
mov
std
xor
mov
cmp
ja
xchg
test
pop
cmp
or
lods
or
scas
movsb
jge
out
or
and
mov
clc
add
je
cli
test
insb
shr
sahf
movsl
ja
push
or
mov
out
shlb
out
mov
icebp
int
outsl
mov
mov
inc
cs
cs
xchg
mov
aad
push
sbb
and
push
mov
nop
fbld
xchg
popf
mov
fsubrp
hlt
sub
xor
add
jg
add
pop
and
xchg
lea
add
lea
gs
fildll
stos
imul
repz
fildl
sbb
dec
js
cmc
in
fwait
test
pop
dec
push
lret
inc
out
push
je
std
repnz
out
mov
add
testb
pop
mov
or
cmp
push
mov
or
icebp
pop
out
lret
sbb
imul
inc
lock
or
xchg
mov
pop
mov
pop
add
push
xlat
pop
sbb
or
aaa
and
sub
mov
mov
xor
mov
std
push
call
cli
mov
xor
push
sbb
mov
cmp
dec
adc
mov
mov
mov
sub
int
outsl
mov
ret
adc
add
les
pusha
mov
loop
jle
inc
pop
add
fldenv
fnstsw
scas
aad
lcall
pusha
or
mov
shrb
sahf
dec
leave
test
icebp
nop
pop
jne
dec
addl
arpl
xor
sbb
jbe
pop
ror
fsub
fsubl
dec
add
jb
jle
repz
jae
rolb
inc
xchg
or
out
shll
push
xor
xchg
mov
lret
sti
sub
push
orb
lahf
fstpl
xchg
add
dec
leave
gs
dec
xchg
adc
xor
xchg
pop
cmpsl
daa
xor
sbb
fadds
into
aad
int
mov
mov
xchg
test
addr16
sbb
loop
xorb
pop
lret
mov
or
or
mov
cmpsb
pushf
dec
repnz
mov
xchg
mov
mov
repnz
pop
xor
ret
gs
leave
push
mov
inc
leave
xchg
clc
jo
mov
push
mov
insl
popf
leave
sub
push
jg
jecxz
cmp
pop
lods
xor
test
pop
xchg
inc
pushf
pop
pusha
clc
aaa
aam
mulb
js
repz
insb
push
sahf
inc
sub
or
into
loopne
sub
push
mov
ret
or
call
fnstenv
js
sbb
lahf
std
xchg
sbb
out
dec
jle
cld
outsb
push
es
fs
fbstp
jp
xchg
lods
in
cwtl
cmc
lea
pushf
iret
jbe
into
addl
test
push
fidivs
sti
je
cld
push
rcrb
stc
xchg
xor
out
ds
outsb
addr16
filds
pop
mov
push
add
mov
addr16
adc
mov
in
push
xor
xor
xor
mov
or
mov
cltd
out
add
sbb
pop
pop
adc
or
mov
lcall
mov
jne
out
mov
fwait
jno
sbb
inc
orb
jle
popf
sbb
mov
fisubrs
hlt
lds
sbb
cmp
fdivl
xor
rolb
pop
ret
divl
mov
les
push
repnz
popa
adc
mov
movsb
repnz
inc
and
jg
cmpsl
dec
scas
pop
stos
in
xchg
data16
mov
call
ljmp
mov
sub
in
and
or
mov
mov
lods
mov
push
neg
adc
call
adc
lods
shll
in
mov
or
jo
add
adc
in
push
aam
das
pop
jmp
xchg
popa
lcall
data16
movsb
movl
sbb
add
mov
and
add
pusha
mov
jbe
stos
enter
mov
insl
push
inc
xchg
mov
cwtl
adc
sbb
xorl
fwait
push
out
xchg
test
jg
or
fmul
dec
sti
ret
xor
outsl
mov
repnz
xchg
popa
jae
movsl
adc
dec
iret
mov
xor
pop
jno
es
mov
lock
push
and
or
int3
outsl
add
imul
lahf
xor
cwtl
movsb
add
sbb
push
add
shrb
jge
xor
andl
or
and
xchg
mov
xor
lock
cmc
cmpsb
jne
adc
xchg
and
imul
pmaddwd
adc
shrb
nop
jo
fs
fucomi
push
pop
push
pop
dec
cmp
push
sub
xor
fnstsw
filds
inc
jne
mov
out
mov
inc
push
sahf
dec
mov
jnp
xor
fstpl
sbb
pop
hlt
xchg
or
push
nop
icebp
movsb
out
or
add
pop
sbb
mov
scas
out
ret
mov
xor
jp
clc
xchg
jecxz
inc
std
movsb
pop
clc
mov
jg
xor
mov
outsb
cmp
sub
and
das
xor
adc
inc
lcall
insl
and
mov
je
in
ljmp
neg
jle
jl
mov
and
mov
fnop
xchg
adc
sbb
xchg
dec
int
mov
add
das
inc
dec
cmp
out
imul
and
mov
mov
addr16
loope
call
or
fdivs
add
out
xchg
scas
sbb
cltd
cmp
sub
jno
sub
sti
test
inc
adc
or
cmp
fucomip
rsm
jb
jg
cmp
insb
cli
bound
fimuls
repnz
out
lock
inc
push
jbe
xor
lea
inc
mov
test
inc
cli
dec
les
push
inc
call
jbe
dec
nop
sahf
mov
mov
push
mov
add
cmc
nop
push
lret
xchg
cmp
outsl
jae
sub
pop
xlat
popa
dec
xlat
out
ss
or
mov
lahf
lcall
push
and
aaa
inc
pop
jae
mov
punpcklbw
testl
mov
fmull
inc
inc
mov
leave
xlat
adc
push
jle
push
mov
aaa
out
je
out
lea
gs
jne
mov
lea
insb
mov
mov
shl
jne
mov
pop
push
out
sar
xchg
mov
pop
mov
sar
mov
xchg
out
lods
pop
mov
adc
addr16
adcb
sub
sub
push
push
push
jne
sub
sbb
lret
je
data16
xchg
push
push
hlt
ljmp
aas
std
pop
sbb
jle
mov
jnp
inc
faddl
mov
js
mov
mov
pusha
xlat
xchg
std
lods
pop
jmp
push
imul
adc
cmpsb
dec
add
or
pop
xchg
repz
jecxz
daa
mov
add
inc
je
outsl
out
xchg
pop
mov
inc
xchg
fdiv
roll
add
sbb
or
fwait
cwtl
orb
and
bound
data16
pop
and
push
in
lea
sub
arpl
mov
sub
mov
jnp
mov
mov
pusha
sbb
ret
stc
aaa
mov
pop
push
and
repz
pop
cmp
adc
mov
push
fisubl
and
adc
mov
push
mov
fisubl
inc
mov
call
es
enter
xor
and
sub
push
sub
mov
out
sub
pop
add
pop
push
push
ror
xchg
inc
push
lods
sbb
add
lock
cmpsl
push
pop
lcall
dec
imul
jp
mov
sub
mov
or
mov
add
mov
movsl
ljmp
mov
std
jbe
pop
mov
loope
mov
test
inc
stos
pushf
daa
and
dec
dec
cld
movsb
dec
mov
pop
push
roll
sub
mov
iret
test
and
push
fld1
mov
and
aas
sarl
cld
in
cld
xchg
xor
sub
mov
enter
mov
jecxz
adc
inc
loopne
xor
negb
scas
aas
arpl
cmp
pop
add
xchg
cmp
mov
pushf
andl
ds
mov
test
fmuls
daa
inc
push
mov
inc
ret
shlb
mov
fs
add
mov
mov
mov
stc
shlb
sbb
adc
jg
cltd
xor
and
loope
add
or
jge
daa
movsl
xchg
idiv
or
jmp
bound
rcll
jecxz
dec
mov
cld
add
es
mov
xchg
scas
nop
dec
xor
out
jp
jbe
mov
lahf
fdivs
shlb
in
fcompl
sbb
fnsave
loope,pn
jbe
in
sbb
out
sti
jns
out
or
dec
orb
addr16
pushf
dec
xor
inc
lods
pmulhuw
adc
adc
mov
cmpsl
lods
imull
mov
jns
les
mov
movsl
repz
scas
call
ja
movsl
flds
jno
ljmp
arpl
sti
cmp
ljmp
or
and
test
adc
ljmp
add
filds
int3
jge
cmpsl
sub
add
mov
mov
mov
add
je
dec
loopne
outsl
mov
cwtl
push
mov
in
jns
test
inc
pop
fsubl
mov
out
push
mov
mov
add
xor
iret
lahf
add
xor
mov
shlb
xor
dec
ja
mov
andb
push
cmp
inc
inc
cs
dec
pop
pop
cld
aad
jae
and
or
movsl
bound
lods
loope
push
lcall
jecxz
xchg
or
loope
roll
cli
add
lahf
movsb
pop
js
push
lahf
cmp
inc
add
lret
ds
dec
leave
aaa
aaa
sahf
andl
mov
pusha
mov
bound
ficoms
and
or
xlat
add
into
bound
adc
leave
sub
sub
scas
lret
or
dec
test
arpl
lret
into
add
bound
mov
lcall
pop
xor
es
sbb
scas
aaa
or
xchg
sbb
negb
sub
inc
sub
xor
mov
je
pop
xor
ror
cli
in
jecxz
push
lcall
ljmp
sub
mov
cmp
jl
mov
push
ss
jno
inc
mov
and
mov
inc
in
pop
sbb
adc
fidivrs
sub
mov
sbb
cmpsb
sqrtps
in
jne
adc
inc
sahf
stc
fcoml
cmp
rcl
push
sbb
add
add
mov
pusha
jne
js
cmp
xchg
xchg
lret
jmp
fs
sub
mov
xlat
pop
aas
sbb
xchg
addr16
je
fisubl
in
xchg
lock
pop
mov
call
sbb
sahf
clc
inc
mov
fidivl
das
mov
int
inc
jae
push
pop
out
xchg
sbb
popa
add
fdivrl
xor
fnstenv
fwait
inc
and
lock
jecxz
rclb
sbb
js
mov
jae
jecxz
cld
dec
lock
mov
inc
sbb
das
mov
add
jne
push
scas
icebp
leave
mov
xor
lret
cmpsb
or
loopne
mov
mov
xor
test
mov
aas
jo
js
mov
cmp
sub
insb
pop
push
xchg
push
daa
push
xor
cs
es
xchg
cmp
mov
in
pop
in
es
pop
xchg
mov
mov
push
jne
out
shl
je
pusha
stos
ds
repz
ret
mov
mov
push
push
sub
cmpl
xor
jp
mov
ljmp
sub
ja
cld
repnz
dec
stos
int3
pop
pop
popl
push
into
sub
cs
adc
cli
adc
rorb
add
and
jnp
and
jecxz
mov
mov
pop
movsb
pop
repz
pusha
outsb
pop
ja
aas
pop
inc
dec
insl
mov
sub
je
adc
ja
cmp
syscall
push
mov
lods
mov
mov
dec
xor
pop
in
inc
sbb
shll
adc
repz
sar
call
xchg
sbb
addr16
xor
adc
cld
bnd
les
test
and
mov
das
mov
lcall
xorb
xchg
add
inc
cld
cli
push
fldcw
sbb
mov
or
outsb
ds
enter
js
push
rorl
xchg
dec
mov
push
stos
adc
add
push
pop
cmp
mov
std
mov
jo
lret
and
js
loope
push
sub
lret
and
test
and
int
mov
mov
jle
cwtl
lds
dec
cmc
pop
je
mov
adc
push
and
sahf
inc
je
jmp
push
mov
cmp
jbe
mov
pop
mov
add
adc
scas
push
dec
cmp
or
jnp
cmp
sub
xchg
dec
xchg
shr
stc
xchg
outsl
jbe
fnsave
bound
mov
mov
push
negl
and
out
push
sbb
push
xlat
orl
mov
or
jecxz
jns
mov
fsubs
inc
pop
cli
pop
jne
ja
cmp
enter
jno
sub
pop
inc
jns
mov
fs
push
sub
add
pop
sahf
in
repz
jo
icebp
rcl
xlat
xchg
fcomps
mov
pushf
nopl
xor
enter
insl
xor
mov
pop
ficompl
dec
je
jns
je
xchg
data16
mov
pop
and
mov
clc
shrl
sub
std
adc
test
fsubs
fwait
stos
je
sub
js
dec
adc
mov
fistpl
roll
sub
jne
out
shrb
xchg
mov
cmp
mov
jbe
push
adc
ret
mov
mov
dec
js
mov
mov
mov
dec
mov
dec
js
and
lahf
mov
xchg
jmp
sar
fadds
icebp
cmc
jae
adc
xchg
push
add
and
xor
lret
sub
jo
sbb
sti
xlat
mov
and
sub
fwait
in
lods
mov
add
aas
int
and
dec
and
icebp
mov
push
repnz
movsl
dec
adc
leave
add
fistpll
and
pop
dec
mov
and
test
xchg
adc
inc
xor
inc
out
sti
xchg
lret
sub
dec
mov
push
lret
call
push
pop
push
or
xchg
out
rcrl
aad
dec
dec
out
mov
cwtl
and
push
sahf
loope
lods
xchg
add
popl
adc
xor
int3
daa
inc
mov
dec
mov
scas
push
mov
jne
pop
pop
aad
dec
insl
cmp
inc
test
int3
sti
jb
jo
pop
dec
or
sbb
int3
mov
and
add
sbb
xor
enter
push
fs
pop
or
rol
dec
mov
push
pop
mov
call
push
movsl
xor
add
lea
cltd
aaa
aad
repnz
enter
or
nop
cmp
add
and
js
sub
test
sbb
sbbl
scas
jbe
jne
movsb
push
js
enter
add
push
mov
stos
imull
mov
leave
stc
push
push
test
cwtl
out
dec
mov
add
push
dec
mov
inc
push
fdivrs
push
out
dec
ficoms
mov
shlb
out
xlat
std
mov
xlat
mov
jle
inc
stos
push
cli
mov
repz
adc
js
xor
fs
push
sti
mov
and
and
addl
xlat
hlt
pop
jbe
cmp
mov
in
repz
adc
insb
cmpsl
mov
xchg
inc
test
and
lods
adc
xchg
sbb
jmp
and
out
pop
pop
lcall
ja
xchg
mov
aas
divb
fiadds
add
nop
xchg
aaa
xchg
fcoms
add
ds
enter
inc
pop
les
fistps
fistps
loop
mov
test
hlt
mov
mov
xor
adc
pop
dec
xor
and
inc
fwait
movsl
lcall
scas
xor
cmp
push
mov
int3
xchg
rcrb
pop
icebp
dec
sub
jb
pushf
jae
sbb
push
test
push
movsl
dec
adc
push
das
adc
push
push
or
imull
shlb
loope
sbb
or
mov
int3
in
jle
xlat
aad
mov
mov
adc
fldcw
adc
test
cmp
dec
fidivrl
outsl
shl
sub
clc
adc
das
ds
sbb
fmuls
cmp
int3
pop
pushf
imul
mov
pop
hlt
arpl
xchg
mov
pop
insl
gs
lret
jbe
xor
jo
sub
lods
inc
sahf
lret
loope
mov
push
jg
test
adc
mov
mulb
sbb
dec
mov
ljmp
jae
outsl
mov
js
stc
sbb
lods
ret
add
or
out
xor
mov
enter
and
cmpsl
scas
xlat
aas
sub
data16
inc
out
pop
jne
xor
add
imul
mov
ret
imull
xor
addr16
jae
testl
or
add
loop
push
andw
jl
shrb
lds
idivb
push
fbstp
and
stos
mov
imul
dec
shrb
sub
lea
add
out
cmp
stos
add
inc
dec
lcall
pop
cmp
or
push
mov
fs
icebp
sbb
subl
sub
inc
dec
enter
out
push
or
ds
add
jmp
and
in
mov
es
aas
cmpb
or
sbb
dec
xchg
test
div
stos
xor
jg
loope
and
or
mov
scas
int
xor
and
xor
mov
lahf
test
push
jno
mov
aad
xor
push
sbb
mov
je
nop
shlb
lods
sbb
mov
cmp
and
xchg
movsb
lods
adc
mov
movsb
fs
lock
sub
jb
jle
xorl
and
xor
add
dec
sub
sbb
jp
std
cmpl
aad
in
in
mov
fs
jp
jno
and
in
repnz
ja
dec
or
mov
scas
adc
stos
cmp
pushf
sbb
push
jbe
loop
ja
subl
mov
add
xchg
in
addr16
es
push
xchg
fiadds
sub
shrl
sti
pushf
enter
aas
or
push
inc
lret
test
sbb
call
push
xor
in
in
xor
mov
mov
test
dec
scas
pop
sub
fwait
mov
mov
ja
mov
push
in
adc
stos
popa
loopne
or
add
sbb
aad
inc
sbb
mov
sub
adc
xchg
repnz
jo
loop
fidivl
push
cmp
repnz
imul
jo
rcrb
cmc
push
inc
mov
lret
dec
das
xchg
or
or
and
jl
jle
add
loopne
mov
enter
arpl
jle
adc
movsb
inc
dec
mull
jle
imul
ds
jecxz
adc
add
fwait
outsb
arpl
pop
orl
scas
jg
fadds
out
jnp
pop
mov
xor
xor
push
ljmp
lcall
cmp
or
adc
xlat
xor
push
push
add
push
dec
pop
cli
or
dec
imul
jecxz
push
out
leave
mov
sub
into
cmp
or
add
fsubrl
scas
test
push
sahf
cmp
pop
cmpl
dec
out
adc
rcr
xchg
pushf
imul
mov
sub
ja
dec
outsb
mov
fs
add
or
insb
add
xchg
ss
out
and
imul
xor
aad
xor
xchg
xor
push
cmp
jmp
mov
int
into
repnz
mov
ficomps
xchg
addps
mov
xor
cs
loope
xchg
clc
mul
xor
outsb
xchg
sbb
call
ret
in
sahf
pushf
aam
xchg
xor
pop
les
mov
jns
sbb
mov
ds
popa
adc
jp
pop
test
fwait
sub
popf
sub
clc
pop
mov
and
aad
push
and
xor
sub
in
mov
cmpsl
mov
das
mov
push
xchg
rcr
into
push
or
dec
pop
fldenv
nop
out
adc
sub
fildll
jno
les
dec
loop
je
shl
inc
out
lcall
xor
lsl
das
ss
jg
cmp
cwtl
push
xlat
dec
sub
jnp
mov
xchg
dec
or
pop
push
dec
pop
mov
adc
jae
cwtl
sbbl
and
and
jno
out
sub
xchg
test
add
inc
std
rclb
mov
std
cli
iret
sbb
xor
test
xchg
jecxz
dec
xlat
fsubp
push
sbb
in
fwait
pop
xor
and
in
out
addr16
stos
cmpsb
les
test
push
faddp
sbb
cs
push
mov
rorl
pop
gs
insl
iret
movsl
dec
sbb
mov
push
mov
xchg
lcall
xor
lcall
jno
jnp
pop
movsl
dec
mov
dec
je,pn
les
push
in
loope
repz
int
xlat
push
cmp
pusha
mov
and
xor
hlt
adc
sti
dec
fnstenv
rorl
in
adc
repz
ljmp
fwait
scas
or
push
xchg
popa
ret
mov
and
dec
gs
bound
mov
daa
dec
mov
lods
push
loopne
inc
adc
in
pop
cmpsl
and
or
xchg
into
pop
nop
lods
inc
inc
movsl
fcomi
mov
mov
push
rorl
sbb
loopne
mov
rorb
ljmp
enter
cmp
and
js
inc
jne
push
int
dec
and
cmp
push
push
mov
cmpsl
ret
inc
test
mov
fbld
cmp
xchg
mov
xorl
fdivrl
jns
or
xor
pop
pop
xchg
pop
fwait
sub
aas
and
or
inc
adc
leave
jecxz
test
jle
adc
movsb
arpl
aad
in
xor
or
stos
bound
cmp
mov
js
out
call
ds
pop
ds
adc
sbb
int3
inc
aam
add
and
cmp
inc
jmp
inc
and
ljmp
xchg
cli
mov
sti
enter
orb
cmp
jno
sub
push
movsl
sahf
mov
inc
pop
loopne
popa
add
mov
jo
xor
cli
inc
sub
fists
loope
push
lret
outsl
jae
leave
jae
stc
push
shll
xor
inc
dec
mov
std
popa
pop
jne,pn
ljmp
outsb
or
test
mov
mov
pop
inc
sub
imul
push
xchg
shrl
stos
pop
nop
repz
mov
cwtl
mov
call
mov
or
loop
mov
sub
inc
xchg
loop
lcall
in
jmp
int3
jl
stc
jnp
mov
lods
sub
push
movsl
add
jecxz
lds
dec
mov
insl
push
jo
jns
es
adc
mov
push
push
pop
mov
add
daa
lret
out
cmpsl
pusha
repz
jnp
imul
gs
sub
cltd
xlat
je
push
shll
adc
in
iret
aam
pop
outsb
mov
in
rolb
loope
push
mov
mov
imul
mov
jle
jne
shlb
loopne
adc
push
pop
lret
jnp
pop
jge
ret
imul
mov
jle
test
test
test
leave
cmp
dec
mov
sar
pushf
stc
inc
shll
push
pop
or
outsb
push
push
lds
xor
adc
push
stc
sbb
xchg
arpl
fs
jo
cmp
sbb
test
pop
sbb
and
fmul
cmp
dec
push
push
or
sbb
mov
insl
xor
das
sti
inc
lds
scas
jbe
mov
jne
enter
push
inc
mov
ret
cmp
cld
mov
daa
sub
mov
xchg
xor
push
ljmp
jmp
and
xchg
bound
mov
in
push
out
idivb
lret
or
sbb
cwtl
xor
shlb
std
cmpsb
adc
jmp
or
call
sti
insb
or
in
daa
push
cld
or
and
and
inc
les
sbb
jmp
test
lret
mov
xor
ss
int3
mov
sub
mov
add
xor
fs
enter
adc
add
pop
mov
lods
and
xchg
fcmovu
sub
sub
fistpl
fcoml
loope
jl
pop
lcall
rep
mov
push
jb
addl
push
push
cmpsb
sub
xor
shll
subl
movsl
decl
sbb
fists
pop
loopne
jno
hlt
add
lea
mov
mov
lea
mov
std
inc
imul
mov
dec
call
ja
mov
aam
cwtl
out
nop
or
pop
cwtl
xor
loope
dec
sbb
jl
sbb
or
hlt
and
clc
bswap
fcmove
inc
scas
outsl
and
scas
mov
dec
xchg
jne
dec
xor
test
aas
and
xchg
int3
push
sahf
mov
clc
loopne
lock
jmp
xchg
into
ja
adc
ss
xor
in
jecxz
cmp
pop
aaa
jne
loop
mov
daa
pop
xorb
adc
mov
pop
inc
xor
xchg
clc
xchg
outsb
xchg
dec
test
mov
pcmpgtw
mov
jge
mov
cltd
mov
or
mov
sbb
xor
lock
sub
aad
ret
insb
sti
iret
mov
inc
pop
push
sbbb
cli
stc
loop
out
adc
push
fsubr
in
xchg
xor
sahf
stc
leave
mov
dec
mov
adc
inc
mov
sbb
sti
call
fs
pop
sbb
fldcw
jo
scas
inc
sbb
or
xchg
cmp
cmp
xchg
pusha
das
out
es
out
in
cmp
jo
out
je
dec
orb
sbb
sar
pop
push
jg
inc
js
xsaveopt
mov
pop
add
test
rol
ror
neg
xor
or
pop
add
mov
in
ja
lret
les
dec
jnp
xchg
mov
push
sub
mov
inc
es
nop
pop
test
inc
movsl
fwait
cmc
mov
xchg
pop
lcall
dec
hlt
cmpsl
fwait
int
mov
sbb
inc
add
push
daa
nop
cmovae
scas
clc
cmp
data16
test
clc
imul
data16
sub
inc
pop
mov
aas
jb
lcall
dec
push
cli
shr
arpl
out
mov
and
iret
stos
popf
mov
in
repz
jne
pop
sub
xchg
sbb
ret
jecxz
cmp
scas
popa
out
call
adc
jno
inc
out
loope
sti
out
cltd
mov
in
xor
mov
mov
loopne
jo
jl
xchg
fs
push
cmpl
mov
add
adc
jle
mov
mov
insl
xlat
test
or
lods
or
sbb
dec
push
outsb
inc
or
sbb
mov
jns
push
mov
adc
fistps
dec
mov
and
roll
push
movsb
xchg
lds
mov
stc
lret
cmp
or
clc
push
cmpl
pop
sub
fwait
mov
sbb
push
cmpsb
push
inc
test
sub
mov
mov
lods
xor
or
add
cmc
mov
push
stc
mov
pop
repnz
sub
pop
sbb
and
cmpsb
ds
xchg
jo
aas
gs
pop
sarl
push
dec
push
out
imull
mov
lret
shl
daa
popa
outsl
adc
dec
enter
jle
sbb
pushf
data16
sbb
dec
cmovge
jg
sti
js
lods
push
xchg
sti
into
add
out
imul
sbb
adc
lret
ja
sbb
jne
sub
pop
push
adc
nop
mov
dec
and
pop
inc
or
jge
lahf
push
addr16
rolb
add
imul
aad
lret
cmp
jns
dec
mov
repnz
cmp
inc
les
mov
iret
pop
out
jmp
sub
sbb
imul
inc
fwait
lock
movsb
and
cmp
cmp
jne
lods
xchg
mov
and
pop
push
add
cmp
test
push
fisttpll
cli
mov
pop
push
cmp
inc
fnstenv
inc
cs
cld
xor
dec
int3
nop
les
sbb
cmp
pop
xor
sub
stos
pusha
xchg
adc
iret
cmp
push
ss
push
mov
fimull
cmp
adc
call
adc
cmp
cmp
and
shrb
cmp
mov
pushf
push
out
xchg
and
lahf
inc
lods
mov
cmp
mov
pop
stos
call
adc
aaa
stos
movsb
sbb
cmp
mov
loopne
sub
jg
and
out
push
lods
push
sub
aad
xor
push
mov
mov
movb
aad
sti
pop
inc
push
into
mov
pop
and
xchg
gs
and
jl
lcall
out
mov
mov
push
ret
mov
sbb
ret
jne
jle
sarb
mov
inc
and
xchg
roll
aas
pop
jmp
pop
call
sub
iret
jp
mov
cmc
inc
dec
stc
in
stc
cltd
call
mov
xor
outsb
in
pop
js
inc
cmp
lcall
mov
es
xchg
xor
pop
mov
push
xor
pop
and
pop
gs
ja
push
mov
and
mov
pop
pop
and
push
jle
cmp
jge
dec
pop
imul
adc
test
cmpl
and
in
outsl
inc
fisubrs
mov
adc
imul
jmp
xor
insl
xor
das
jno
sbb
lahf
sbb
and
mov
fs
fdivrl
jmp
mov
js
sbb
sahf
aad
repz
push
test
loop
lahf
out
cmpsl
jno
jle
enter
mov
je
add
das
add
adc
xchg
mov
out
jae
dec
shll
mov
adc
adc
cmpsl
adc
pushf
push
cmp
pop
mov
sbb
lahf
inc
adc
push
mov
lret
test
hlt
das
and
stos
inc
mov
iret
subb
pop
cmc
lods
jns
cmp
fldcw
sub
ret
mov
rcrb
add
push
add
pop
lds
sbb
inc
mov
mov
mov
adc
cli
rorb
fidivs
mov
not
dec
jns
daa
mov
xor
push
dec
out
inc
mov
adc
mov
inc
pusha
insb
iret
cld
inc
mov
jg
mov
lods
test
repz
inc
sub
rol
jg
pop
push
arpl
stos
push
bound
loop
cmp
adc
push
push
les
mov
loope
inc
les
mov
sub
adc
scas
adc
pop
loopne
inc
in
and
movsl
testl
loope
roll
push
mov
pop
dec
hlt
cmp
mov
shll
imul
mov
adcb
rcrl
cli
jl
add
scas
scas
pop
jle
loop
js
loope
inc
sub
dec
mov
or
stc
xchg
out
movsl
push
xchg
mov
in
xchg
pusha
dec
or
mov
sbb
ljmp
mov
js
test
addl
xor
jae
ja
mov
push
add
clc
popw
stc
mov
stc
cmpsl
or
pop
jb
xor
lahf
rorl
mov
pop
xor
ss
jg
xor
inc
pop
jg
cmp
call
cmpl
pop
ret
aad
inc
rcr
jno
int
jne
bound
sbb
fadds
jmp
and
push
jne
adc
shlb
ljmp
mov
mov
pop
inc
filds
xor
out
test
or
and
outsl
test
bnd
insl
clc
push
mov
jmp
imul
imul
adc
ds
es
fs
cmp
test
dec
gs
jo
andl
or
out
mov
cmp
jle
xchg
jne
lcall
loop
pop
and
mov
in
pop
movsb
and
scas
ret
cmpsl
sub
iret
xchg
sahf
sub
cwtl
scas
add
repnz
lahf
cmp
inc
mov
and
fistpll
movsl
mov
pop
lret
cltd
or
push
test
adc
daa
sti
stos
mov
or
mov
mov
loopne,pt
xchg
test
mov
fnsave
dec
or
gs
std
fdivs
test
add
xchg
mov
sub
sbb
or
in
addr16
std
jecxz
dec
scas
add
jno
mov
mov
out
xchg
repnz
pop
loope
dec
je
pushf
xchg
jle
cmp
pop
dec
ja
loop
sub
add
lret
sbb
ja
imul
push
stos
rclb
pop
fucomp
das
clc
clc
and
mov
ss
out
jg
mov
in
lods
mov
pop
push
insl
aam
jo
jmp
lret
icebp
out
int
add
and
push
sub
negb
push
and
pop
adc
push
mov
or
je
sub
push
xchg
fcoml
sub
mov
xchg
addl
aam
test
aas
sbb
inc
loopne
push
xlat
into
cltd
sub
fdivs
insb
jno
scas
call
pushf
iret
pop
add
sub
xor
out
ficoms
cmp
in
les
imul
outsl
jmp
mov
das
sbb
sub
jmp
add
xchg
pop
pop
push
mov
jmp
testb
add
lea
mov
fstl
mov
inc
jecxz
dec
jp
lods
in
jecxz
mov
das
sub
sub
cwtl
movsb
pop
or
jge
push
sahf
sub
push
sbbb
in
data16
xchg
jo
fstpt
gs
pop
mov
lea
ret
addb
push
fs
pop
dec
pusha
sub
and
cmp
jns
test
addl
iret
in
and
in
outsb
test
pop
add
mov
mov
pop
mov
fcmovne
frstor
ljmp
add
xor
fnstsw
test
movsb
mov
fsubrp
mov
jmp
dec
mov
scas
leave
adc
and
mov
add
int3
xchg
xlat
sub
addr16
mov
imulb
ret
in
cmpsb
testb
pop
lods
nop
scas
scas
in
cmp
push
or
sub
dec
inc
lods
stos
loope
hlt
imul
and
xchg
ret
xor
lcall
mov
pusha
adc
mov
push
mov
lods
jns
jno
mov
push
adc
movsl
mov
std
xchg
out
lock
jns
popa
xchg
sbb
lds
or
cmp
rorl
mov
or
in
movsb
jle
cmpsl
iret
lods
stos
and
cmpsl
add
lock
and
jns
mov
jnp
and
je
test
daa
cmpsl
pop
enter
xchg
gs
bound
call
cmp
les
repnz
inc
mov
pop
es
adcl
xor
insb
ja
add
mov
cmpsl
inc
jge
xor
adc
sti
das
loopne
cmp
and
lea
sti
lcall
sbb
rcrb
lcall
lods
out
rcrb
stos
nop
pop
dec
icebp
xchg
pop
icebp
std
bound
or
mov
clc
sbb
lods
div
testl
fcmovnbe
in
loope
sbb
test
lock
dec
inc
xor
cli
mov
jle
imul
cltd
vmread
or
mov
jl
insl
xchg
mov
inc
mov
es
cmp
sbb
jl
inc
sbb
test
scas
mov
dec
mov
test
aas
add
test
lret
call
call
xchg
and
dec
adc
stos
push
ffreep
aam
shlb
or
and
sarb
arpl
outsb
nop
sbb
dec
or
test
imul
push
rol
mov
aas
cmpl
or
popa
mov
ds
xor
or
leave
hlt
xlat
dec
mov
pusha
outsl
shrl
mov
jmp
pusha
xchg
ret
mov
sbb
xor
dec
lret
or
mov
cmc
fmuls
sub
aaa
test
add
and
daa
adc
adc
insl
push
movl
inc
loop
rol
xor
push
xchg
pusha
push
sbbb
gs
cmpsb
in
mov
mov
mov
add
xchg
aaa
into
inc
rcrb
fs
insb
push
cmc
out
and
std
push
scas
dec
push
lock
lahf
mov
mov
loope
hlt
in
sbb
mov
add
cwtl
addr16
cmpsb
mov
loopne
cmc
jp
stos
pushf
pop
pop
sub
dec
jbe
popa
stc
inc
mov
xchg
xchg
xor
and
movsb
loope
rolb
xchg
or
xor
into
jp
jnp
dec
add
cld
andb
stos
outsb
inc
das
ljmp
mov
mov
mov
jb
sub
mov
sbb
push
pop
mov
call
xchg
mov
mov
imul
fucomi
mov
call
in
jae
fcoms
pusha
adc
inc
dec
in
mov
js
jmp
add
jbe
push
out
xchg
inc
cmp
out
and
jns
mov
cmp
cmp
leave
mov
stos
lret
jmp
pop
loope
sbb
sub
cmc
mov
xor
and
stc
neg
daa
sbb
bound
mov
cmp
pop
jl
xchg
mov
fcomps
stos
mov
popa
push
stos
xchg
sub
dec
repnz
cmp
mov
mov
shlb
jmp
lret
xchg
test
push
lahf
jecxz
pop
int
enter
push
inc
movsl
pop
test
jno
pop
lock
cmp
inc
mov
jbe
push
aad
cwtl
jb
andnps
mov
sub
aad
xchg
sbb
shlb
mov
aaa
lret
add
jge
mov
fisubrl
cmpsl
push
mov
lea
dec
pop
shrb
aaa
out
mov
orps
dec
xchg
xchg
push
es
cld
aas
fldt
das
shll
out
xor
push
jmp
jmp
jmp
inc
sub
enter
outsl
adc
popf
jle
mov
jecxz
inc
aad
fstl
testb
push
dec
test
loope
xlat
push
insl
aas
cmc
fistl
aaa
aas
enter
sbb
jnp
xchg
enter
or
aas
sub
negb
mov
mov
fwait
jmp
ucomiss
mov
in
mov
inc
xor
ja
fidivl
pop
mov
outsb
sbb
xor
sub
gs
add
mov
cmpsl
cli
in
orb
pusha
and
roll
cmpsb
add
movsb
enter
and
xchg
dec
aad
dec
in
dec
daa
add
and
jl
xor
fnsave
cmpsb
xchg
jmp
cmp
adc
or
push
lock
pop
adc
scas
in
add
add
sub
insl
movb
cmp
and
dec
inc
push
cmp
sti
imul
sbb
mov
dec
mov
pop
xchg
push
lods
hlt
mov
or
sub
pop
xlat
push
xor
add
inc
stos
mov
mov
ret
fnstcw
pushf
add
call
xor
inc
xor
iret
loope
mov
mov
stos
mov
testl
movsb
xchg
push
cmp
pop
pop
pop
loop
sub
jl
pusha
xchg
cmp
movsl
jno
out
mov
lcall
mov
test
out
inc
mov
push
push
sub
mov
pmulhuw
or
clc
push
loope
jecxz
inc
andl
mov
push
pop
mov
mov
and
sbb
dec
icebp
mov
jmp
sub
pop
push
xchg
and
dec
sub
ret
lods
out
jo
inc
mov
push
lcall
xor
popf
nop
adc
jmp
push
xchg
and
scas
add
mov
or
and
lods
xchg
mov
push
cmp
xchg
inc
or
xchg
cs
lods
inc
push
xor
push
out
dec
out
inc
stos
pop
outsb
dec
iret
in
add
mov
pop
data16
das
jbe
xchg
ret
dec
dec
in
and
ret
and
scas
repz
add
mov
inc
xchg
jo
scas
rorb
mov
arpl
nop
mov
jb
pop
ficompl
pop
pop
xlat
mov
lods
add
arpl
jle
jmp
rorl
gs
pop
pop
out
mov
pop
push
adc
js
fidivrs
mov
sub
mov
sbb
lahf
popf
jmp
sub
push
cmp
iret
jle
push
fdivrs
add
xor
sti
pop
jecxz
aas
je
nop
cltd
ficompl
or
fadds
inc
push
push
mov
and
or
rclb
inc
gs
mov
and
nop
movsl
or
iret
icebp
mov
inc
inc
inc
imul
cmpsb
cmc
add
lds
dec
sbb
adc
repz
cwtl
push
ja
or
es
cmp
test
and
or
sub
jmp
outsb
and
fistps
out
sub
sbb
push
mov
jp
sarl
lcall
push
movb
out
fdivrl
push
adc
inc
push
call
movsl
adc
fidivl
ss
push
xchg
cmpsb
mov
sbb
mov
sbbl
and
out
fdivrs
in
das
sub
pop
icebp
testl
iret
dec
or
lret
pop
daa
and
ja
or
cli
add
xor
stos
adc
rcrb
int3
cmp
push
adc
sub
mov
imul
cltd
cmpl
cwtl
adc
in
pop
lea
int
mov
movsl
adc
cmp
xor
cli
adc
pop
sarb
and
inc
push
mov
cmpsl
out
add
dec
rclb
pop
or
dec
xor
add
fdivrp
inc
orb
sti
mov
mov
movsb
pushf
xchg
les
test
and
pop
adc
mov
es
mov
xor
test
rclb
adc
dec
jne
sbb
mov
push
sub
loop
pop
sahf
xlat
aad
lahf
push
sbbb
fnstenv
lock
aad
ja
jmp
pop
aaa
leave
push
and
or
inc
stos
add
stos
sarl
jp
cltd
push
or
jb
xor
in
sub
xchg
loop
outsb
fimull
ret
mov
insb
mov
jns
into
sbb
pop
lcall
cmp
jmp
out
jle
mov
jl
sbb
mov
jbe
dec
add
push
jl
test
jmp
pop
loopne
std
push
and
jb
push
and
negl
test
incl
mov
lds
aad
es
ficoms
mov
addr16
ret
ret
cmp
repnz
movsb
mov
cmp
insb
sbb
mov
add
mov
cltd
cmpsb
sub
mov
imul
mov
cs
cmpsb
cs
stc
add
and
sub
out
jne
xchg
xorl
sub
movsb
mov
fidivs
cmp
xor
add
repz
dec
call
cmp
or
inc
inc
rorl
jbe
testb
stos
inc
sub
jg
cmp
das
cltd
int3
ret
mov
sub
dec
mov
cltd
out
xor
out
and
cmpb
jb
ss
mov
lds
or
insl
dec
sub
dec
mov
orl
outsl
scas
jae
mov
xor
pop
xor
scas
inc
subl
cmpsb
mov
and
in
out
sbb
shrb
mov
jecxz
std
addr16
js
addr16
adc
mov
pop
push
rorl
jle
stc
sub
out
sbb
mov
mov
das
jg
mov
mov
mov
stc
cmp
dec
mov
and
pusha
inc
adc
push
ds
push
stos
jle
ja
add
adc
aas
dec
pusha
jns
pop
xor
push
dec
imul
xchg
sbb
sbb
divb
lcall
xlat
dec
mov
stos
push
addr16
jg
xchg
ss
shrd
mov
dec
das
and
ds
jl
push
shl
fdivrl
lds
idivb
add
inc
pop
push
xor
rorl
ljmp
push
mov
jne
dec
lods
scas
das
fistpll
sbb
daa
shlb
loop
pop
lret
xchg
test
bnd
pop
mov
mull
divl
push
and
mov
pop
pop
dec
aaa
stc
dec
cmp
xchg
ret
shlb
push
xchg
sub
xor
xchg
nop
decl
jg
sub
daa
inc
add
push
es
jne
xor
mov
cwtl
push
sub
or
jbe
in
loop
push
inc
in
cli
pop
push
or
sarb
movsb
addl
scas
inc
pusha
jge
les
movsb
cltd
sbb
mov
dec
popf
divb
push
xchg
je
jmp
nop
mov
xor
push
cs
outsl
fs
lods
je
adc
pop
mov
insl
xor
push
add
jl
bound
aam
xor
and
rolb
fwait
sarl
mov
push
in
push
sahf
jge
cmpsl
cmpsb
add
pop
fidivrl
fwait
icebp
es
cs
mov
adc
sub
mov
push
mov
sbb
inc
inc
jae
insb
jae
and
cmp
dec
shlb
inc
andl
dec
and
je
pop
jecxz
outsb
push
aas
push
fwait
sbb
xchg
gs
lret
mov
xchg
push
or
cmp
jle
sti
mov
sbb
fwait
mov
enter
jne
pop
inc
sbb
jg
int3
adc
cmp
scas
inc
mov
lods
lret
jnp
push
subb
loopne
movsl
cmp
lahf
hlt
pop
sti
dec
fidivl
dec
sarl
inc
sti
loopne
aaa
sbb
xor
cltd
adc
xorl
xor
cmp
inc
mov
insb
shl
mov
inc
in
xchg
sti
inc
movsb
lock
fstl
or
fnstenv
jns
cmp
out
sbb
movsl
lret
cmp
xor
mov
jb
lret
int
mov
mov
adc
out
icebp
cmc
mov
bound
ljmp
cmpsl
and
or
dec
loop
mov
pop
sbbl
movsl
mov
push
cmp
pop
pusha
and
icebp
xor
mov
jae
pushf
fstpt
movsb
daa
aad
inc
pop
loopw
mov
add
inc
divl
inc
mov
jl
mov
xchg
rcrl
sbb
cmp
imul
xchg
cmp
clc
int3
adc
or
roll
jne
cmpsb
std
adc
std
je
ficoml
stos
pop
rolb
or
pusha
mov
pop
xor
xor
popf
in
push
test
adc
pop
fisubs
roll
mov
ffree
cli
xlat
cmp
add
xchg
lcall
lock
mov
shll
outsl
ljmp
xchg
ret
adc
jnp
sbb
mov
lock
leave
test
outsb
xor
cmpsb
repz
push
sub
aam
fwait
loop
lahf
lds
and
mov
lods
ljmp
ja
aad
lods
lret
xor
push
pop
sbb
fucomip
mov
jae
add
lods
dec
mov
enter
loopne
push
mov
mov
inc
xor
lret
adc
xlat
adc
jmp
xchg
sub
mov
or
jge
xor
imul
mov
cmpsb
mov
scas
rep
les
mov
incb
sbb
aam
xchg
inc
pop
jno
jmp
add
sub
leave
cmp
or
out
add
jl
mov
cmp
insb
mov
push
push
loopne
or
xlat
stos
mov
dec
sub
lods
and
mov
jbe
or
or
pop
repnz
shll
stc
sub
js
jne
fiadds
adcl
scas
pop
sub
add
nopl
jecxz
cmp
pushf
add
insl
movsl
lcall
arpl
cmpsl
ljmp
pop
cli
std
mov
lcall
pop
lret
fs
pop
sub
jp
xchg
lcall
add
and
jns
dec
mov
pop
cmp
scas
rorb
push
sti
bound
inc
jp
xchg
push
dec
in
popf
test
jo
out
push
xchg
or
pop
leave
jno
and
xor
stc
jecxz
cmp
mov
cmp
mov
xor
bound
sbbl
lock
in
rorl
mov
sub
dec
jp
das
xor
cmc
rcrb
add
ret
pop
cld
pop
xchg
test
mov
dec
jns
cli
add
mov
sub
popa
std
cs
mov
ret
imul
push
int3
test
or
cmp
sahf
push
aaa
cmp
pop
leave
jmp
or
lret
jnp
sub
jno
shrl
loope
and
mov
push
lock
cmpsl
iret
icebp
xchg
mov
jg
xchg
clc
pop
les
push
sahf
fdivs
mov
pop
mov
gs
outsl
icebp
or
rcrb
xchg
out
sub
sub
mov
aad
or
insb
xchg
sub
pop
shrl
sbb
adc
sbb
pop
leave
stc
addb
pop
pop
lcall
call
jg
and
mov
enter
cmp
inc
bt
decl
addr16
add
scas
mov
das
sbb
fwait
xlat
pop
jle
sub
pop
sbb
mov
xchg
dec
fstpt
bound
inc
cli
sti
and
pop
leave
daa
outsl
pushf
aad
clc
jae
enter
call
lods
scas
fisttpl
in
sub
mov
cmp
mov
mov
daa
repnz
es
sbb
lods
and
ja
ret
out
loopne
jno
in
leave
incb
jle
sbb
aas
mov
or
jmp
pop
hlt
lea
ljmp
and
inc
jbe
cltd
fidivs
xchg
arpl
int
andb
xor
nop
stc
inc
stc
rcll
xor
jns
xchg
inc
popf
in
add
dec
pop
out
cltd
mov
daa
dec
and
cmp
or
repz
mov
rclb
hlt
push
push
shrb
cli
hlt
out
fs
in
xor
in
das
icebp
aas
inc
aad
cmp
xchg
das
ds
pop
adc
mov
out
xor
sbb
testl
add
or
aam
aaa
adc
popf
sbb
inc
jge
add
add
repz
insl
fistl
pusha
lea
pop
mov
in
xlat
insl
sub
sbb
ja
jp
sbbb
adc
fistpll
add
cli
pusha
ja
adc
test
dec
cli
inc
cmp
lahf
rcrb
cwtl
jno
lods
fists
mov
jb
dec
rcrl
xchg
mov
adc
aam
rcrl
popa
xor
test
rcrl
mov
jbe
dec
data16
and
lret
int
xchg
cwtl
jle
dec
push
mov
xor
or
jbe
sub
pop
sub
lods
inc
ret
jno
out
pop
cmp
pop
cmp
std
and
mov
cmc
adcl
je
test
stos
and
into
sar
fcomp
jecxz
fists
test
mov
cmpsl
mov
imul
gs
sbb
out
stc
pop
out
sbb
sub
andb
jg
xor
adc
jno
sub
ljmp
xchg
xor
inc
add
fxch
jmp
sahf
enter
loopne
xchg
inc
mov
lock
das
cld
ret
xor
in
dec
xchg
mov
outsl
in
or
roll
xchg
addr16
or
mov
repnz
movsl
subl
mov
pushf
shr
inc
rolb
lock
sbb
sbb
icebp
imul
lds
or
out
repz
js
lods
test
cmc
test
sub
push
or
pop
adc
das
push
ljmp
lret
lods
imul
dec
sbb
pop
dec
and
aas
mov
test
call
sbb
inc
sbb
subl
or
push
daa
adc
mov
jae
arpl
push
fisttpl
sbb
test
pusha
test
xor
sahf
pop
or
fwait
mov
daa
pushf
add
mov
in
and
pop
jmp
adc
adc
and
test
xchg
out
loopne
lods
or
addb
nop
jb
push
or
repnz
pop
xchg
jo
mov
push
mov
xchg
cmp
xchg
test
in
xchg
scas
aad
cmp
loopne
sub
lahf
les
mov
popa
mov
jbe
loopne
test
shll
mov
jbe
jp
and
test
pop
stc
ljmp
push
xor
dec
sahf
add
xchg
enter
mov
cmpsb
jle
xchg
mov
or
jnp
stc
in
xlat
pop
insb
in
not
cmc
daa
leave
pop
in
push
loop
lret
incl
pop
jmp
sbb
fnstenv
and
sub
mov
xchg
push
dec
pusha
shlb
std
pop
testb
icebp
out
icebp
xchg
cmp
ds
lret
lcall
cmp
movsb
ret
test
adc
push
adc
inc
mov
rcr
arpl
gs
icebp
mov
sub
pop
out
or
stos
dec
dec
outsb
or
int3
dec
push
add
add
repnz
jae
mov
jp
inc
les
jb
mov
push
shlb
fiadds
pop
jecxz
rcr
adc
or
sarl
and
outsb
add
and
js
notb
cld
repz
and
sbb
xchg
inc
pop
inc
jmp
aad
dec
iret
or
push
cmp
and
mov
lods
mulb
lods
mov
sub
jmp
sub
push
mov
lcall
pop
sbbb
pop
mov
es
push
scas
popa
shr
dec
dec
leave
push
shrb
sbb
addr16
and
xchg
in
sbb
sub
aaa
inc
out
inc
stos
popa
lock
aaa
fcompl
push
leave
mov
sbb
ds
xchg
dec
fcoml
xor
dec
out
ret
cli
mov
in
or
cmp
push
cld
and
stos
shll
adc
int
roll
mov
lods
adc
cmc
mov
dec
div
fs
sbb
or
decl
je
test
scas
fcompl
mov
loopne
jnp
sbb
rorl
dec
xchg
pop
pop
scas
push
cmp
cld
jl
dec
subl
in
divb
lcall
sbb
pop
jle
jbe
sbb
adc
test
sbb
pop
rorl
lcall
hlt
sbbl
add
cld
fiadds
xor
add
xor
mov
cltd
test
dec
fcmovnb
push
sar
sub
sti
pop
mov
enter
sub
lods
rcll
test
orb
mov
aaa
fisttps
mov
sbbb
adc
xchg
negl
pop
les
cmp
sbb
lock
adc
inc
in
scas
and
add
jne
mov
rcr
mov
mov
mov
out
sub
ret
rcl
sbb
ljmp
sbb
imul
data16
pop
call
adc
mov
dec
adc
push
and
xchg
jb
daa
xchg
xchg
scas
aas
pop
es
cltd
mov
scas
popa
xchg
xchg
inc
fnstcw
mov
mov
push
out
and
or
sbb
push
pop
jb
std
mov
jbe
mov
pop
popa
hlt
movb
ds
dec
push
sub
push
cmovp
shll
xchg
and
inc
mov
into
std
add
sub
push
sbb
and
in
test
fisttpl
scas
insb
leave
inc
cmpsb
out
push
xor
cltd
jne
xor
inc
cld
pop
shll
cmpsb
jp
addr16
fldl
pop
ja
add
das
pop
jnp
sub
xchg
push
or
aaa
mov
icebp
insb
test
pop
mov
jne
cmp
mov
lea
jne
in
ljmp
sahf
je
shlb
loop
sub
xor
test
je
mov
sub
sar
iret
jnp
in
sti
xor
pop
sub
and
and
inc
or
add
in
loop
adcl
cld
adc
pusha
adc
xchg
and
mov
jae
jge
and
cld
test
fiaddl
or
xchg
daa
sub
inc
in
repnz
pop
mov
xchg
pushf
call
ret
fucom
xorl
or
lret
push
xchg
icebp
pop
cmp
and
xchg
sarb
ja
lret
ret
xchg
xor
push
cld
movsb
sub
std
outsb
sarb
mov
add
xor
fldenv
in
mov
push
loopne
ja
ret
mov
pop
outsl
dec
mov
push
clc
lret
aas
or
add
pop
dec
imul
jo
insl
xor
popf
iret
or
adc
out
push
insl
jo
cmp
xor
push
pusha
aas
js
ja
pop
dec
dec
cmp
cmp
jl
roll
addr16
add
ds
int3
xchg
adc
ret
inc
sub
mov
mov
inc
push
mov
add
mov
add
xchg
xlat
mov
cs
rorb
sbb
test
fcompp
mov
pop
test
test
jecxz
sbb
jp
dec
enter
jmp
add
gs
pop
xchg
pop
push
ret
out
push
test
pop
in
adc
das
push
ffree
add
imul
int3
add
mov
push
xor
imul
or
mov
lock
cmp
jl
icebp
or
add
scas
sbb
lret
mov
pop
pop
fadds
in
push
pushf
mov
jbe
xor
pusha
add
das
add
cmpsl
lcall
jecxz
mov
and
mov
fisubrs
add
inc
xchg
and
scas
xchg
dec
cli
gs
inc
lcall
hlt
lods
inc
loopne
stos
shrb
push
imul
inc
xlat
pop
imul
sub
data16
jge
or
pop
dec
or
lahf
data16
or
xchg
sub
cmp
jl
aad
mov
xor
and
cmpsl
add
sbb
into
cwtl
roll
adc
movsb
add
and
xor
pop
int
stos
xchg
cmpsb
mov
movsb
fidivrs
mov
mov
cltd
inc
dec
fiaddl
test
mov
dec
add
insb
lods
aam
add
ss
js
divb
jl
jns
xchg
xor
les
add
xchg
aaa
pusha
mov
mov
sbb
mov
fisubrs
pop
fcomi
sahf
pusha
div
add
lds
sub
scas
jo
sbb
pop
mov
fiadds
mov
jo
dec
fistpll
jle
pop
in
loope
int3
lcall
inc
test
adc
jle
aaa
mov
inc
sub
dec
sub
cmp
dec
xchg
sub
inc
inc
shrl
enter
inc
fiadds
cmp
aam
les
xchg
std
lret
into
mov
push
ror
dec
arpl
outsb
ja
sub
cmp
adc
jecxz
add
mov
push
rclb
mov
push
jecxz
xchg
mov
iret
movsl
jp
jo
loop
ret
notb
pop
fdivrp
jmp
dec
sub
outsb
mov
pop
push
stos
and
sub
push
xchg
xor
movsl
lahf
add
dec
test
mov
jl
xlat
loope
xor
nop
cwtl
inc
pop
sbb
inc
enter
lret
cmp
lods
loopne
mov
add
insb
popf
jb
add
and
cmp
imul
test
jmp
cmp
xor
adc
test
in
lcall
dec
sub
pop
cmc
rorb
shll
xchg
ss
adc
jbe
mov
in
cmp
stos
lcall
sub
jp
ficomps
loopne
sbb
pushf
cmp
inc
inc
rcll
ficoml
pusha
jl
mov
test
lds
movsl
dec
mov
xor
loopne
mov
ljmp
jmp
fst
jle
jge
fs
icebp
xchg
cwtl
xchg
push
jns
ret
test
mov
mov
out
dec
mov
aad
aas
xchg
jb
inc
into
lcall
inc
inc
xor
push
iret
mov
ljmp
xor
testl
and
and
ljmp
sub
push
nop
dec
push
jle
or
and
popa
mov
dec
es
inc
inc
fimull
xor
cmpsl
xchg
imul
inc
adc
rorl
jns
decl
shrl
mov
or
stos
push
dec
xor
sbb
aaa
mov
nop
hlt
shr
sub
sub
sub
push
lret
push
xchg
nop
fwait
imul
xor
xchg
stos
test
repz
or
mov
push
dec
movsb
sahf
js
and
fisttpll
lahf
mov
xchg
sbb
ret
push
loope
out
ds
cmp
sbb
pop
xor
cmp
add
cld
mov
insb
insb
dec
loope
mov
inc
pop
xchg
int
mov
shrl
adc
inc
cmp
mov
jl
lods
inc
enter
roll
into
inc
cmc
adc
add
divl
ss
arpl
jp
subl
in
je
xchg
sbb
lcall
mov
jl
xchg
out
lret
mov
jecxz
scas
shl
lcall
in
movsl
and
outsb
dec
repz
xchg
test
orb
jno
das
or
fisubl
andl
in
popa
ret
enter
sub
fsubrp
dec
imul
daa
stos
dec
loopne
loope
das
jnp
jg
pop
test
mov
clc
ljmp
push
push
addr16
mov
cmp
cmp
daa
dec
sub
imul
and
lret
cmpsb
mov
xchg
or
scas
mov
cs
mov
pop
stc
jg
dec
or
sahf
stc
cmp
pushf
hlt
clc
sarl
fdivl
xchg
lods
sub
xor
jge
stc
mov
pop
pop
dec
pop
scas
mov
mov
sub
push
inc
and
mov
mov
inc
or
push
or
jne
repz
fidivl
mov
xor
sbb
ljmp
sbb
jns
cld
js
sub
push
add
int3
movq
ret
push
push
jmp
test
mov
fwait
cs
mov
lods
mov
aad
ds
cmp
mov
out
add
mov
pop
adc
mov
jecxz
jae
and
outsb
ret
mov
lods
repnz
jecxz
or
fxch
xchg
lcall
push
sbb
call
xchg
call
adc
out
dec
mov
data16
dec
movsb
xor
dec
xlat
lock
inc
mov
dec
clc
fildl
fs
sub
mov
lods
add
sub
cmp
jg
lea
sub
jbe
je
dec
pop
sti
lods
fstl
xchg
setb
divb
jmp
add
inc
lock
into
sub
das
push
inc
xlat
out
push
or
mov
movsl
sti
cmp
xchg
test
pop
popf
test
loopne
pop
push
jo
test
outsl
add
std
or
gs
mov
jae
idivl
cmc
out
subl
rclb
push
repnz
mov
push
jbe
lock
xchg
orl
dec
test
mov
das
stos
cmp
xorl
icebp
daa
add
mov
xor
mov
adc
mov
enter
lret
clc
mov
cmp
out
push
loope
ret
cmpsb
cld
arpl
bswap
mov
cmpsl
insb
mov
xchg
xor
sarb
dec
mov
in
aas
push
mov
jno
lcall
mov
outsb
das
or
push
jns
dec
sub
clc
push
sbb
pop
push
leave
iret
roll
sub
and
fisttps
cltd
push
sub
in
bound
aad
push
gs
das
adc
xor
outsl
xlat
test
gs
in
mov
cmp
and
cmpb
in
scas
sbb
push
xlat
mov
push
lods
stos
in
scas
je
push
scas
test
or
aad
hlt
sub
in
sahf
xlat
cmpsb
mov
pop
rcrl
arpl
adc
mov
mov
dec
sbb
xchg
xchg
xor
mov
mov
loop
push
repnz
sbb
xor
pushf
fwait
daa
xor
mov
pop
into
outsl
inc
fidivs
popa
dec
jb
gs
lcall
and
sbb
mov
push
ret
jno
ss
jnp
and
sub
cld
pop
push
cmp
add
inc
mov
xchg
into
popa
test
cwtl
sub
adc
cltd
popa
out
jae
push
sbb
inc
mov
inc
icebp
mov
out
icebp
xchg
pop
push
fwait
mov
lea
add
lea
xor
repz
push
and
je
fs
xchg
rclb
pop
insb
xchg
outsb
jne
shlb
mov
insl
inc
mov
xchg
into
and
sub
pop
dec
add
pop
or
jb
std
jns
mov
mov
mov
lods
int3
outsb
jge
lods
shll
scas
inc
aaa
int
shlb
jns
sahf
add
out
sbb
xorb
or
sti
xchg
xchg
push
imul
adc
pushfw
jnp
mov
cltd
jecxz
and
fcompl
push
inc
jle
pop
notl
cs
pop
sahf
sti
and
pop
mov
loopne
aam
in
xor
pop
rclb
stos
jp
arpl
adc
aaa
add
scas
aas
fs
je
pop
lods
pop
sbb
icebp
mov
rclb
adc
xchg
xor
aam
sub
mov
out
adc
push
push
es
les
mov
pop
hlt
dec
dec
shll
mov
clc
and
movsl
addr16
in
mov
xchg
lahf
dec
mov
mov
xor
jno,pt
ljmp
jne
dec
adc
adc
outsb
clc
mov
mov
push
pushf
ja
stos
mov
inc
push
or
out
inc
mov
leave
mov
mov
xchg
nop
stc
xchg
add
imul
imul
popa
fptan
std
stos
bound
jmp
ja
lret
sub
mov
sub
jo
clc
dec
enter
pop
sbb
mov
inc
mov
mov
ljmp
lods
shrb
pop
inc
int3
cmp
dec
mov
sub
mov
jns
test
fcomp
int
inc
jns
test
push
pusha
fisubs
xchg
cmp
aad
outsb
pop
jnp
icebp
dec
add
mov
sti
test
push
and
mov
in
inc
adc
push
adc
out
pusha
and
or
movsb
mov
dec
push
mov
movsb
xchg
arpl
sub
push
cmp
in
push
out
pop
fcoml
inc
mov
aam
stos
xchg
cmc
push
jo
inc
jb
xor
xchg
or
ret
fs
je
push
inc
pusha
mov
push
push
rorb
xchg
push
inc
fwait
fwait
cmp
cwtl
inc
pop
pop
dec
cmp
sub
inc
into
and
lret
push
ss
cmp
cs
xor
mov
imul
dec
lret
push
ficoml
std
cmpsl
rcrb
jl
xchg
push
mov
mov
dec
es
ja
cltd
dec
loopne
shll
lds
icebp
xchg
pop
add
mov
clc
pushf
cmp
jle
int3
ret
and
test
cmc
ret
outsb
nop
inc
mov
sbb
or
stos
int3
cmp
mov
nop
imul
sahf
es
xchg
jecxz
loop
sti
cli
ret
jmp
out
pxor
mov
outsb
scas
rclb
xor
and
mov
enter
mov
iretw
in
xlat
arpl
fidivs
les
lock
neg
or
fldenv
loope
mov
out
xchg
mov
cmp
enter
sbb
jp
nop
jg
rorl
dec
pusha
iret
data16
pop
mov
js
pop
shll
addl
in
or
nop
lret
js
mov
xor
jno
subb
push
cld
pop
adc
and
and
jecxz
pop
adc
insl
add
popf
and
dec
cltd
mov
in
mov
mov
in
cmc
cld
imul
add
xchg
popa
dec
aas
mov
in
xchg
inc
lods
ret
test
dec
fdivs
dec
mov
cmpsl
jae
mov
ret
bound
ret
add
xlat
popa
les
enter
out
pop
pop
ja
or
pushl
push
fs
mov
gs
adc
pushl
mov
in
mov
fldl
jne
insl
lahf
shlb
dec
inc
sub
jbe
fbstp
xor
mov
ds
adc
cmpsl
arpl
xchg
fisubs
xor
sbb
aad
lods
or
dec
cmp
jb
mov
adc
sub
repz
bswap
lea
lea
cmpsl
push
es
and
bound
pop
in
pop
sti
pop
cmpsl
sub
and
xor
lret
inc
ljmp
jbe
adc
aad
lods
aas
jno
outsl
or
jne
mov
pop
bnd
pop
roll
jg
xchg
and
pop
sub
xchg
jb
out
mov
mov
pushf
fnsave
xor
sahf
push
push
xchg
sti
fbstp
dec
je
aam
pop
aad
faddl
cmp
cmp
int3
dec
fdivrl
adc
orl
cmp
jb,pt
mov
icebp
addr16
adc
nop
das
test
inc
and
sbb
mov
push
sahf
jno
aaa
add
push
pop
notb
arpl
push
sbb
movsb
jae
int
pop
divl
repz
xchg
dec
xchg
fistps
movsb
clc
sub
stos
fsubs
xchg
xor
pop
cmp
sti
out
lcall
imul
repz
sub
add
and
mov
sub
in
adc
sub
in
dec
icebp
add
jo
clc
mov
lcall
and
aaa
cmp
aaa
cmp
and
sbb
pop
lock
xchg
bound
jae
in
xchg
mov
fdivl
xchg
add
mov
push
xor
shlb
loope
bound
mov
test
arpl
dec
jne
jmp
adc
adcb
or
fdivrl
outsb
inc
push
out
sub
out
lret
imul
sbb
pop
jae
iret
mov
inc
pop
je
mov
int3
inc
jmp
mov
mov
imul
xchg
sbb
ret
xchg
mov
mov
mov
mov
lret
push
push
fcoml
lds
lcall
rorl
shlb
mov
push
pop
xchg
sti
mov
gs
mov
cmpsl
mov
sub
std
test
pop
adc
stc
rcrb
jae
pop
jle
iret
xlat
push
jge
filds
rcrb
jns
xor
mov
mov
jb
push
outsb
sbb
jnp
not
stos
mov
insb
stos
inc
cmp
fadd
das
cmpsl
clc
xchg
lds
cmp
decb
cmp
jg
test
sbb
jp
jecxz
mov
repz
jne
pushf
xchg
ljmp
fwait
pop
test
mov
push
cmpsl
add
mov
fs
stos
xor
push
in
pop
mov
push
rcrb
lcall
inc
aaa
mov
dec
test
lods
push
jno
sahf
push
push
gs
mov
and
xor
ret
jmp
leave
jmp
push
mov
mov
inc
push
add
sub
pop
sbb
pop
xor
jnp
in
jns
dec
and
mov
out
push
insb
inc
mov
xchg
fidivl
inc
jge
mov
pop
imul
xchg
xchg
arpl
imul
push
pop
movsb
loop
jbe
pop
cmp
sahf
sub
stc
jae,pt
fisubl
pop
imul
ja
mov
xor
das
jne
sarb
push
xchg
pop
jmp
xchg
pop
sub
ja
cmp
mov
pop
sbb
xor
mov
ficoml
sub
cwtl
jae
mov
rclb
mov
xor
or
shll
in
dec
stos
rorb
bound
dec
dec
shrl
jne
shlb
rcr
sub
cld
inc
mov
mov
in
andb
sub
lods
shll
fdivrl
cmpsl
iret
mov
cmp
addr16
mov
add
and
xchg
popa
pop
repnz
add
stc
xchg
xor
add
orl
dec
or
xchg
fisubl
sbb
mov
repnz
call
fsubrl
out
fwait
adc
and
and
aas
scas
cwtl
iret
shrb
ror
and
mov
ret
sub
int
push
cmp
mov
test
icebp
push
or
into
jnp
jl
clc
fwait
mov
inc
and
mov
jnp
or
dec
push
sbbb
test
pop
inc
cmp
sbb
repz
popa
and
rorb
in
aam
cmp
addr16
mov
lods
pop
cltd
movsl
popf
xchg
mov
movsb
repz
sbb
testb
in
fsubl
push
cmp
inc
mov
bndldx
ljmp
push
mov
scas
ss
add
and
aam
icebp
cltd
fs
clc
popf
int
and
or
jae
daa
inc
push
cmp
adc
mov
sbb
fcoml
or
aam
mov
aam
pushf
hlt
sahf
mov
lea
rcrl
jge
out
mov
mov
inc
sbb
shll
inc
popf
pop
mov
pop
jl
adc
lahf
mov
cmp
add
xchg
dec
mov
jns
lcall
rcrb
enter
inc
sub
push
or
pop
adc
icebp
pop
mov
int3
call
data16
test
mov
dec
mov
es
leave
sub
xchg
push
cmp
out
nop
jbe
clc
test
xchg
lods
test
dec
inc
int
fistpl
pop
jge
or
stos
ficomps
bound
cld
out
loopne
mov
shrb
rcl
or
std
jo
lods
outsl
inc
sub
xor
loopne
xor
dec
jno
xor
dec
push
xchg
ljmp
fisubs
popa
loopne
rclb
fnop
sub
and
popa
xor
sbb
ficompl
enter
xor
and
xor
mov
nop
dec
in
fnsave
faddl
mov
rol
out
scas
sahf
cmp
xor
cmpsb
in
mov
mov
movsl
sub
jnp
repnz
lahf
mov
test
mov
insb
sbbb
sbb
ljmp
movsl
dec
jle
mov
mov
push
or
xchg
xchg
push
dec
pop
cmpsl
jp
mov
mov
out
mov
add
lock
fldenv
pop
nop
lods
lock
leave
jno
mov
dec
mov
xor
dec
jecxz
cwtl
out
adc
adc
sbb
sub
jmp
mov
movsl
xor
sub
inc
add
jns
mov
mov
mov
hlt
int
xchg
mov
lock
loopne
sbb
into
xchg
mov
sbb
xchg
sbb
pop
mov
or
stos
cmp
pop
leave
xchg
testb
into
bound
dec
pinsrw
adc
bound
ja
fidivrl
nop
inc
ud1
push
sub
jp
test
add
idivb
testl
jo
inc
fsts
inc
push
mov
adc
jmp
push
inc
xchg
jecxz
test
and
test
inc
lcall
sub
or
jae
xor
mov
outsb
dec
adc
xor
iret
insl
sbb
ret
sub
mov
iret
repz
popf
ret
jecxz
arpl
sbb
enter
pop
cmp
inc
pop
mov
inc
jle
xchg
ret
sub
in
push
orl
ljmp
ds
rcll
xor
mov
ja
dec
pop
pop
in
add
adc
mov
movsb
lea
dec
dec
outsb
pusha
test
inc
lret
jno
add
xor
jnp
lds
aaa
mov
test
gs
xor
outsl
pop
aaa
fbld
mov
push
fs
ds
idivl
add
sbbb
cmp
push
push
cmp
std
test
add
rcl
or
push
sub
inc
dec
mov
sbb
fcmovnb
ljmp
mov
sti
jmp
cli
pop
jmp
popf
lods
adcb
sahf
push
mov
and
mov
inc
inc
test
mov
pusha
or
test
pop
fucom
js
pop
sub
jno
mov
add
xlat
hlt
jnp
icebp
insb
mov
movsl
fisttpll
xor
xchg
repnz
jg
pop
xchg
mov
mov
jo
ljmp
add
jb
and
adc
lea
pop
add
adc
test
inc
inc
sbb
jno
lds
out
aaa
mov
mov
es
adc
lods
cmc
loop
fildll
int3
mov
subb
loope
adc
nop
jne
adc
mov
jnp
ljmp
mov
add
xchg
mov
das
lcall
arpl
pop
fistpll
xchg
imul
hlt
icebp
sbb
lret
cli
lods
inc
mov
pop
mov
int
fists
sbb
cmc
adc
cs
jp
fwait
mov
add
and
cmp
jg
push
mov
or
in
insl
movsl
jl
mov
jmp
pop
nop
xor
sbb
xor
cmp
out
pop
push
sahf
dec
lret
jbe
xchg
sbb
add
xor
inc
cs
loopne
call
jge
iret
call
push
pusha
sub
jae
cmpb
jl
mov
repz
out
xlat
jmp
filds
repnz
dec
std
cltd
das
xchg
repnz
stc
pop
addr16
xchg
lods
into
jmp
dec
lcall
andb
inc
lods
push
push
xlat
mov
lock
sbb
loop
ret
pushf
sub
pop
push
mov
mov
mov
cmpsb
push
and
pop
data16
xor
fucomp
scas
push
jo
scas
cmpsl
push
push
add
stos
test
movsl
ficomps
cmpsb
push
inc
aas
out
ror
pop
dec
clc
xchg
push
fildll
stos
ret
stc
mov
inc
loope
inc
jmp
ja
inc
mov
push
mov
std
sub
jno
sbbl
or
lcall
imul
fcomp
inc
mov
xor
mov
xchg
dec
jmp
movsb
mov
dec
mov
mov
into
aam
popf
mov
in
and
sti
jl
xchg
lret
in
out
mov
mov
aas
addb
and
dec
js
cmc
or
push
hlt
sub
test
mov
insb
sbb
int
pop
bound
add
dec
fldt
in
pushf
insb
add
lret
mov
sub
cmp
das
and
cs
pop
fidivrl
aam
xchg
xor
xchg
fildll
mov
or
lods
cmpsb
mov
and
push
bound
inc
sbb
dec
fsubp
dec
mov
jnp
loope
pusha
cmpsb
pop
roll
cwtl
aad
fwait
lcall
std
outsl
scas
inc
adc
js
mov
idivb
dec
pushf
leave
lahf
outsb
in
add
in
rol
pop
rclb
mov
js
adc
dec
pop
lods
mov
jecxz
push
xor
inc
sbb
push
xchg
xor
xchg
stos
xchg
push
ss
mov
popf
test
and
inc
mov
jae
pop
cmp
cmp
inc
mov
lret
fimull
push
push
sub
pushf
inc
dec
xor
xchg
mov
adc
mov
pop
ret
cmpsb
pop
popa
or
mov
sub
movsb
mov
xchg
push
cmp
xchg
pop
popa
cmp
cs
mov
cmp
xchg
pop
fwait
js
aas
test
jl
and
ljmp
cmp
pop
das
std
icebp
insl
aas
flds
dec
dec
lcall
mov
pop
jbe
and
lret
cmpsl
dec
sti
xlat
jge
mov
cltd
pop
mov
mov
adc
lcall
int
push
jns
repnz
movl
or
pop
and
adc
sbb
and
sbb
pop
rolb
xor
test
mov
or
jle
push
loopne
ficoml
dec
call
push
das
xor
sarb
loopne
cmp
sbb
mov
sub
pusha
push
dec
and
aas
pop
push
adc
call
cmc
fst
mov
es
cmp
stc
mov
push
aad
mov
sbb
xchg
and
mov
xchg
jno
imul
push
ja
push
insb
dec
sub
movsl
pop
sub
mov
mov
add
fcoms
mov
mov
pusha
and
fimuls
or
int
lcall
mov
movsb
leave
mov
out
call
outsb
dec
jb
pop
add
inc
out
dec
and
loope
cltd
cmpb
sub
scas
inc
xchg
mov
nop
or
inc
mov
loop
sub
add
addr16
sub
push
into
fwait
add
cmpsb
push
ja
insl
xchg
xchg
outsl
xchg
pop
movsb
incl
or
push
or
pop
or
jmp
jnp
bound
add
je
add
push
outsb
sub
jbe
pop
scas
inc
push
inc
into
lret
sub
push
add
cmp
mov
arpl
xor
jno
test
pop
mov
fldl
jge
push
cs
push
jge
mov
dec
mov
cmpb
out
push
cmpsb
push
or
xor
fwait
pop
lcall
or
and
xchg
and
and
sahf
sub
cs
in
lcall
test
in
adcb
shrl
inc
repz
outsb
sbb
or
jle
movsl
popf
inc
jnp
push
adcl
cmp
mov
sub
mov
nop
movsb
adc
fsubs
enter
and
add
sub
lret
loope
inc
fdivs
mov
sub
push
mov
jmp
ja
lods
cltd
scas
std
ss
ret
dec
dec
push
push
or
mov
adc
jno
mov
lahf
and
subb
xor
mov
iret
leave
test
push
sbb
cltd
cwtl
mov
push
arpl
insb
aad
cs
hlt
lea
aaa
out
add
test
out
xor
jb
push
test
pop
and
sbb
je
jb
pop
jnp
shll
xchg
xor
mov
popf
or
push
pop
inc
and
dec
cwtl
sbb
and
sub
xchg
pusha
fsubl
leave
jl
mov
push
or
sahf
mov
rol
inc
fmulp
rcr
xchg
push
sub
inc
lods
cmovno
icebp
fcompl
cmpsb
inc
dec
aas
out
add
lods
out
sbb
jae
std
xor
adc
aad
mov
mov
hlt
mov
inc
push
fists
daa
dec
ficoml
lds
cli
mov
dec
mov
jne
or
mov
inc
mov
mov
push
sub
leave
push
jo
daa
pop
xor
fs
sti
pushl
adc
rep
push
jl
callw
ret
mov
mov
xorb
and
lea
pop
pop
ficomps
push
faddl
cmpsb
cs
inc
pop
sub
adc
lods
jl
xlat
lret
fildl
jmp
sahf
sahf
add
loope
mov
jbe
xchg
sub
jne
cmp
lock
sub
stos
in
pop
lret
mov
add
decb
enter
mov
xchg
cmpl
fbld
xchg
or
mov
and
dec
dec
and
sbb
pop
inc
pop
cmpsb
jle
pop
mov
mov
jbe
clc
sub
xor
repnz
or
out
cmc
cmp
je
jl
push
push
add
inc
cmp
pop
adc
das
addr16
in
cmp
cmp
shr
in
cltd
stc
aam
in
out
sub
mov
std
and
movsb
data16
idivl
fldenv
or
pusha
repz
sbbb
scas
cmc
sbb
inc
fidivs
pop
adc
out
dec
insl
jnp
pop
push
test
shll
out
lods
hlt
js
pop
push
cmp
push
dec
or
jo
dec
mov
mov
gs
fsubrp
xchg
in
sbb
pop
jmp
mov
in
pop
and
stos
lock
pop
rorb
cmp
ss
dec
or
jecxz
pop
adcb
add
iret
cld
add
cwtl
adc
ljmp
inc
xor
enter
out
xchg
xor
and
int3
xchg
dec
pop
mov
call
loope
dec
cwtl
cmp
jmp
mov
inc
sbb
divb
adc
and
das
inc
shll
lret
ja
mov
les
insb
lods
xlat
cltd
adc
pop
dec
cmp
insl
sbb
fsubs
sbb
pop
push
adc
lods
repz
arpl
nop
push
lock
rcll
fistl
fcoml
pop
clc
fcmovb
in
sub
aas
inc
rcrl
fsubrp
icebp
sbb
fisttpll
scas
sub
jbe
mov
dec
inc
nop
sbb
mov
and
leave
mov
rcr
in
test
xor
ds
arpl
sbb
jmp
int
or
push
dec
sbb
sbb
popa
dec
cmp
cmpsb
outsl
filds
add
imul
cs
jg
sbb
negl
fsubr
push
fsts
test
or
gs
push
mov
jg
lcall
add
outsl
movsb
mov
dec
imull
sbb
or
insl
cli
and
push
mov
dec
adc
mull
rcll
mov
aad
shl
mov
inc
push
jae
jge
ds
sub
sbbl
fucomp
pushf
mov
sub
adc
adc
cmp
jge
push
pop
pop
std
lahf
jecxz
mov
cld
sub
xchg
movsl
sub
mov
cmp
ficoml
lret
mov
dec
ds
or
aad
movsl
repnz
pop
add
push
push
adc
pop
sbbb
incl
test
mov
nop
mull
mov
sbb
push
adcl
scas
pop
add
movsl
dec
outsl
and
pusha
xchg
sbb
add
pop
xorl
adc
stc
mov
xchg
mov
push
scas
mov
mull
inc
push
sub
test
cld
and
or
stos
pop
mov
shl
sub
dec
lods
adc
or
mov
hlt
xchg
mov
icebp
pop
jecxz
jae
popf
add
add
in
loope
cmp
xchg
xlat
cs
xchg
pop
icebp
int3
sub
xor
xlat
sub
jo
enter
mov
arpl
int
mov
in
cs
jae
push
call
mov
sbb
mov
pop
jmp
stc
mov
add
mov
jge
adc
out
xchg
mov
mov
and
add
mov
loopnew
scas
or
add
dec
jp
dec
lret
add
clc
sub
loopne
dec
popf
mov
pusha
add
in
xchg
push
enter
pop
leave
rolb
push
aad
pop
test
and
cs
testl
out
call
cmp
js
xchg
pop
out
mov
dec
push
enter
jae,pn
push
mov
adc
icebp
add
push
cmpl
or
xchg
enter
add
xor
adc
jmp
cmp
sub
loopne
cmp
jnp
jg
sub
mov
mov
int
mov
add
testl
sti
or
pusha
cmpsb
sbb
xor
ret
leave
rclb
mov
pop
sti
outsb
into
dec
rolb
push
sbb
cmp
imul
lret
repnz
or
in
push
push
shlb
inc
xchg
into
ss
adc
dec
gs
and
xor
dec
mov
push
push
jns
lock
in
dec
add
loop
sub
js
shll
mov
cmp
lret
imul
sbb
mov
repnz
cltd
and
push
sarl
cmp
jmp
mov
sub
add
xor
in
dec
inc
es
xchg
dec
push
arpl
subb
cmc
xor
daa
leave
popa
dec
and
fistpl
inc
sbb
out
call
fcompl
xor
xchg
dec
pushf
adc
xchg
icebp
jg
dec
scas
and
sbb
outsb
in
out
push
aam
sub
popf
roll
sbbl
or
adc
hlt
push
bound
xchg
add
mov
repnz
ss
mov
or
jo
stc
lods
stos
and
les
adc
sub
cwtl
pop
test
add
adc
xchg
pop
push
int3
fisttpl
loopne
fistl
and
fld1
sti
jg
add
xchg
cmp
das
sti
adc
jno
mov
or
movsl
jle
adc
ret
mov
test
dec
sub
aad
sub
hlt
sbb
add
mov
scas
inc
ret
fldl
inc
mov
fnsave
in
inc
in
adc
xchg
lods
loop
dec
pop
mov
ficompl
cwtl
pop
xchg
sbb
cmp
sbb
or
inc
popa
add
nop
add
cmpsb
xor
stc
lock
jnp
jle
mov
gs
mov
into
stc
int3
and
sar
fwait
in
mov
mov
out
cmpl
dec
test
push
jae
enter
fwait
xor
int3
loope
push
icebp
or
in
std
fstpl
mov
aad
ja
or
popf
ficoml
push
sbb
notl
or
mov
and
cltd
rcrb
xchg
sub
nop
mov
popf
push
loope
js
jmp
test
fmuls
or
test
test
xchg
pop
stos
stc
sub
dec
popa
inc
sub
and
cmp
jae
add
fs
hlt
out
mov
mov
jmp
mov
jne
pop
cmp
scas
jb
adc
jle
mov
ret
mov
ficompl
xor
push
xchg
lahf
xchg
cli
mov
lock
cli
mov
test
stc
mov
stc
loopne
jge
lea
mov
icebp
mov
cmpsl
mov
int
jge
sbbb
add
mov
lret
xchg
aad
popa
sar
lret
pop
idivb
ficoms
jbe
shrb
jle
call
es
cwtl
pop
daa
inc
pusha
adc
inc
inc
sub
mov
and
cmp
cmc
aad
js
test
jne
push
fwait
add
adc
inc
xor
xchg
cmc
ss
fiadds
and
insb
xchg
dec
cmp
jae
fcom
cmp
stos
sti
xchg
adc
jge
sbb
into
mov
int
xor
adc
sbb
jae
jno
roll
add
mov
shlb
mov
out
aaa
lahf
dec
je
inc
mov
outsb
cmp
bswap
xor
push
fs
push
pop
daa
cli
aad
sbb
sbb
testl
aaa
pushf
mov
xchg
pusha
push
es
test
out
inc
xchg
div
add
jbe
movsb
dec
mov
movsl
fdivs
mov
imul
lret
mov
lea
gs
cld
adc
popf
and
add
mov
pop
inc
or
and
jle
arpl
adc
test
push
rcll
dec
outsb
or
push
out
roll
mov
rcll
sbb
lret
xor
aam
out
clc
test
scas
scas
xchg
lods
test
imul
and
sbb
stc
nop
cwtl
cmp
xor
mov
testl
aam
mov
int3
inc
mov
mov
outsb
jl
xlat
and
stc
fcomps
xchg
and
dec
loop
mov
cmp
pop
nop
cmp
movsb
jmp
jmp
addb
aaa
arpl
pop
adc
stc
xor
popf
mov
mov
incb
add
aad
dec
mov
cmp
aas
jmp
lods
mov
inc
mov
je
mov
inc
rcr
inc
inc
repnz
xlat
add
xorb
stos
aad
nop
movsb
push
xchg
rolb
popa
jns
outsl
mov
inc
pop
stos
mov
fwait
mov
in
movsb
lods
xchg
out
dec
add
push
xchg
mov
shlb
and
cmc
js
aad
clc
cs
and
jg
imul
insl
xor
fcom
mov
push
jb
scas
fwait
bnd
jl
aaa
ret
xchg
scas
mov
mov
loop
lea
popf
addb
or
pop
adc
iret
jmp
add
rcl
ja
gs
push
push
cltd
popf
mov
dec
shr
pop
push
into
aaa
xor
jp
popl
jae
in
and
xor
mov
sbb
jnp
clc
xor
cltd
xor
sbb
movsl
jnp
adc
xchg
mov
add
test
and
and
pop
lahf
and
mov
xlat
mov
jmp
divl
or
push
daa
xor
outsb
add
das
repz
pushf
xor
aam
mov
fcmove
adc
mov
in
arpl
add
das
sti
xchg
sub
jl
lahf
cmc
pop
sub
scas
inc
lds
lret
int
lock
sub
jmp
loope
mov
dec
and
ret
mov
iret
or
inc
enter
jnp
inc
fisttps
call
aas
loopne
adc
jno
mov
inc
es
dec
lahf
jne
aaa
jg
sti
out
mov
sbb
outsb
xchg
mov
test
out
xor
int3
loop
and
mov
add
cltd
loopne
sub
fstpt
popf
loope
mov
fbld
dec
jno
pop
pop
add
fistps
add
les
inc
in
or
pop
or
sub
out
cmp
pusha
pop
mov
pop
and
sti
movsl
out
mov
js
mov
call
int
sahf
add
add
fstp
xlat
sbb
movsb
mov
sahf
in
push
xor
notb
mov
mov
push
fs
mov
lahf
mov
inc
js
cs
das
cmp
jl
divb
repnz
add
xor
cli
sbb
mov
ljmp
push
push
mov
pop
xor
ret
and
add
or
cmp
ljmp
out
cmpsl
orb
ja
test
pushl
push
add
dec
mov
js
xchg
arpl
stc
and
cmpsl
call
push
mov
and
and
loope
mov
fisubrs
lahf
sbb
call
lret
stc
push
cs
rcr
stos
arpl
jnp
cmp
pop
add
inc
bound
dec
add
push
jp
sub
adc
in
repz
adc
add
adc
inc
ds
adc
ja
addl
cmpsl
mov
jo
jl
popl
sbb
push
sub
adc
sub
cmovge
lret
jae
pop
mov
jle
xchg
lahf
out
jo
lock
sub
test
scas
add
insb
sub
shll
push
push
mov
dec
fcoml
out
pop
das
xchg
test
in
add
cmp
inc
cmp
or
mov
sti
sbb
inc
ret
mov
js
shlb
push
adc
comiss
in
popl
stos
dec
loope
out
inc
jl
into
cmpsl
sub
popf
dec
stos
or
mov
std
mov
jno
shl
jnp
scas
jp
repz
sbb
pop
decl
fcmovnb
add
pop
pushf
aam
mov
loopne
mov
jge
loopne
ret
aas
pop
xchg
mov
imul
adc
loop
std
sub
stc
imul
lretw
xor
sbb
sbb
in
jmp
fmull
in
pusha
sub
aam
sub
stc
mov
pop
xor
aad
pop
sbb
les
and
test
movsb
mov
pop
dec
testl
scas
loope
cmpsl
and
dec
int
aas
sub
sbb
int
test
jl
out
sub
or
movups
xchg
mov
out
push
mov
mov
out
dec
sub
mov
lcall
enter
stos
imul
mov
push
mov
sbb
xchg
dec
jne
jae
xchg
shl
mov
cmp
insb
repnz
pop
aaa
inc
pop
stos
fxch
and
pusha
ds
fsubrs
ds
sti
out
insb
sti
adc
mov
add
sbb
adcb
sbb
pop
arpl
iret
subb
inc
cltd
clc
insb
push
test
testb
push
stos
in
pop
and
mov
div
push
mov
stos
outsb
fmuls
popf
leave
inc
lock
fdivp
lcall
push
mov
sub
popa
sbb
lcall
rcll
out
insl
add
xchg
shrl
pop
mov
mov
mov
mov
repz
cmp
dec
int3
xor
pop
adc
lret
mov
fstps
pushf
call
cwtl
mov
out
fstl
add
xchg
mov
mov
ljmp
enter
cmp
or
add
xchg
rol
mov
cli
insl
xchg
pop
stc
fistpl
jns
cltd
xchg
push
push
ljmp
inc
fdivrs
enter
in
mov
ret
lds
jmp
jo
sbb
pop
loope
push
add
mov
pop
xchg
jno
sub
inc
mov
fsubrs
mov
push
pop
paddusb
jge
pop
dec
and
lret
and
mov
rcll
test
push
les
dec
push
add
inc
pop
bound
push
mov
sub
or
call
popf
lret
mov
adc
inc
sbb
fsub
ds
mov
jne
mov
cmp
fists
or
mov
lret
sub
xorl
jmp
lret
xor
cmp
fnstcw
jae
call
stos
sub
add
out
mov
gs
stos
pop
jae
aaa
mov
out
in
test
push
jbe
push
pop
repz
xchg
fwait
jnp
sbb
mov
sbb
filds
loope
pop
shlb
xlat
in
enter
jno
les
push
push
movsb
sbb
cmpsl
add
leave
fisubrs
push
fists
cld
addr16
xor
xor
test
ds
fnstsw
fistpl
leave
mov
cmp
add
push
rcll
inc
adc
leave
mov
sub
cld
mov
jo
std
ss
ljmp
sub
and
xchg
gs
xchg
jnp
imul
add
mov
push
aad
add
es
in
hlt
dec
dec
xchg
lahf
xor
cmp
das
pop
mov
jecxz
js
mov
outsb
inc
jecxz
xlat
inc
push
pop
push
lret
out
cmp
mov
xchg
in
int
push
je
inc
fsubrs
das
lea
mov
xchg
pop
imul
fimuls
iret
cmp
add
enter
iret
xchg
xor
pop
xchg
push
mov
ficoms
mov
aaa
imul
roll
xor
inc
dec
mov
sbb
int
rcl
or
mov
je
test
xor
insl
xlat
xor
pop
into
mov
dec
movsl
aas
cmp
movsb
cs
cvtpi2ps
dec
mov
xor
push
addr16
mov
ret
mov
mov
jle
aam
jecxz
nop
adc
ss
icebp
adc
or
cmp
inc
pop
mov
lds
jle
inc
push
insb
and
repz
lds
xor
xchg
pop
mov
aas
insb
sub
loopne
out
cmp
xor
jb
ret
addr16
xor
test
pop
xchg
inc
mov
mov
test
xchg
out
dec
pusha
in
xor
nop
jmp
loopne
cmpsb
test
add
ror
lahf
imul
push
int
movsl
fwait
repz
es
jo
dec
pop
aam
mov
adc
sub
sbb
insb
jmp
mov
into
cmp
jle
mov
mov
dec
adc
adc
dec
cmc
jecxz
test
and
outsb
imul
jmp
cmpsb
cmp
pop
icebp
jb
cmp
push
or
out
pop
pop
sbb
daa
pop
adc
xchg
push
repz
jbe
pop
add
outsl
jo
int3
push
xchg
aaa
inc
ljmp
cs
and
std
fwait
inc
mov
lahf
in
std
cwtl
mov
dec
add
push
insl
jg
call
pop
sbb
mov
push
push
int3
push
pop
xor
mov
daa
leave
jl
leave
mov
inc
jae
sub
cltd
inc
sbbl
cmp
jl
roll
push
sbbl
popf
sub
push
cmp
ficomps
rorb
mov
out
push
dec
jle
lock
adc
nop
lock
shrl
cmp
xor
push
mov
mov
out
lret
hlt
mov
dec
les
cmpsl
mov
or
repnz
push
bound
and
loop
mov
and
and
nop
and
rcrb
ret
mov
push
adc
and
jo
xor
clc
inc
and
add
sar
in
push
and
fmulp
call
push
js
push
inc
inc
or
into
cmp
sbb
dec
call
jp
mov
outsb
jbe
or
adc
sbb
popf
inc
movsb
test
mov
mov
cmp
int3
xlat
push
in
lods
mov
ret
je
xorl
add
out
cltd
pushf
cmp
ret
or
sub
inc
add
push
insl
fimuls
sub
arpl
in
testl
sub
clc
or
cs
jg
push
mov
adc
nop
lcall
and
inc
sahf
adc
add
inc
mov
lahf
xlat
divb
leave
pop
cmc
xchg
add
movsl
cmp
addb
cmpsl
lahf
sub
stc
add
nop
lock
sbb
sbb
add
lahf
adc
jae
ja
js
adc
cltd
fcomip
pop
xor
pop
hlt
iret
xor
sub
pop
lock
addr16
sti
sbb
adc
and
loope
and
jl
sbb
std
mov
enter
mov
sbb
jb,pt
sahf
mov
inc
arpl
mov
xchg
icebp
mov
and
sbb
mov
fsubrl
cs
popa
jg
popa
shll
fisubrs
cltd
fwait
outsl
outsb
push
sbb
pop
inc
aad
dec
dec
rorl
mov
sbb
jmp
shll
jmp
mov
lods
in
inc
inc
leave
cld
xchg
test
aas
fdivp
cmp
jnp
jno
arpl
mov
add
xchg
inc
subb
jmp
jp
inc
xor
nop
mov
iret
fs
mov
pushf
mov
mov
pop
lods
push
jbe
out
ds
fld
xor
inc
mov
cmp
mov
insl
jg
data16
ret
arpl
jo
dec
dec
mov
mov
rorb
xchg
dec
fnstcw
jno
cli
mov
shll
inc
push
jmp
jae
jecxz
fbstp
ret
lods
jecxz
mov
pop
ljmp
pop
mov
xchg
sub
fs
sahf
clc
pop
pop
push
jecxz
cld
insl
xlat
aam
nop
jecxz
incl
cmp
jbe
mul
loope
popa
or
or
out
pop
aad
jmp
mov
mov
iret
sbb
pop
aad
stos
jns
ret
mov
or
jo
fcoms
leave
outsb
add
arpl
pop
jp
das
fwait
movsb
add
pop
pop
lods
pop
popa
fcmovnbe
dec
push
or
mov
and
mov
pop
insl
sbb
dec
xchg
aaa
shll
mov
cmp
movsb
xchg
daa
cwtl
and
in
xchg
pusha
or
es
push
jl
cld
xchg
aaa
xchg
mov
jo
mov
repnz
sarb
mov
mov
and
and
fidivrs
and
jmp
pop
bound
je
imul
jmp
addr16
lcall
call
roll
iret
xor
lods
mov
xorl
mov
cmp
push
pop
pop
movsb
inc
movsb
fwait
sbb
outsb
test
or
fimuls
sub
negl
inc
and
pop
xlat
inc
inc
mov
sbbl
sbb
addr16
sub
pop
push
xor
jmp
cli
aad
mov
cld
or
into
testb
aad
cmp
ret
mov
pop
push
shlb
inc
cmpsl
out
or
aas
mov
scas
sbb
inc
adc
jg
cmpsl
je
mov
repnz
lahf
les
ljmp
stc
xor
adc
fisubs
inc
xor
into
jbe
repz
jae
adc
js
adc
inc
fadds
clc
imul
fisubl
call
adc
loope
lcall
push
mov
jo
shlb
in
or
notl
les
xor
test
jbe
rorl
or
inc
aad
leave
sbb
pop
push
dec
push
hlt
add
sbb
jle
sub
loope
insb
std
mov
mov
push
mov
in
ja
imul
shr
scas
scas
adc
dec
mov
pop
rorl
inc
subl
cmp
in
xchg
mov
addb
shll
inc
out
rorl
xchg
pushf
sbbl
pop
in
pop
dec
inc
mov
lret
ret
inc
out
add
mov
pop
cmp
lock
cltd
jl
and
cltd
imulb
sbb
sbb
loop
lcall
fcmovbe
mov
ds
aad
or
inc
dec
push
mov
insl
rolb
fisttpl
test
adc
cwtl
lds
lret
fld
xchg
shll
or
pop
outsb
add
cmc
lods
xchg
xchg
sub
inc
xor
pop
inc
enter
and
mov
mov
or
cmp
stos
mov
push
sub
mov
adc
push
lret
notb
pop
push
push
cld
neg
mov
ds
inc
push
push
dec
out
pop
sbb
inc
loop
push
shrb
mov
gs
dec
pop
dec
mov
test
sahf
or
je
xchg
fwait
popf
push
push
push
sub
jae
cmp
pushf
xchg
xor
in
pop
sub
fdivs
shl
inc
mov
movsb
and
inc
push
jno
jnp
movsl
ljmp
ljmp
add
mov
les
xchg
les
scas
arpl
cld
cltd
xchg
jb
mov
push
sub
mov
pop
int
adc
scas
mov
ficoml
sti
lea
out
inc
jns
cmp
xor
cmpsl
pop
inc
pshufw
test
dec
and
inc
mov
push
jne
stos
repnz
push
adc
xorb
and
add
lock
gs
mov
xchg
jno
mov
pop
sbb
mov
in
fs
xchg
xor
add
mov
add
fwait
push
xor
daa
lahf
test
xchg
cmp
add
js
jl
mov
mov
push
gs
push
pop
es
loope
jbe
jg
dec
mov
dec
cmove
iret
xchg
popa
or
enter
pop
out
and
pushf
das
cmp
pop
shrl
jl
cmp
cmpl
mov
dec
inc
or
ficompl
shl
xor
shlb
pop
lret
shl
test
adc
jmp
mov
cltd
js
push
sub
and
add
mov
lds
cmp
jae
xchg
inc
push
xor
pusha
das
jecxz
in
int
pop
push
pslld
pop
mov
mov
mov
aam
out
into
sub
cmp
mov
mov
jl
stos
fistl
insl
js
cwtl
bound
or
mov
lret
pushf
xor
jnp
pop
pop
dec
inc
ret
js
ss
or
sub
rorb
jecxz
in
pop
repz
sub
sbb
inc
fstps
popf
mov
mov
insl
xchg
pop
and
inc
loopne
ss
clc
mov
dec
mov
testb
imul
push
cmc
int
sahf
and
dec
loop
das
sbb
jle
xor
sub
rolb
xchg
sub
xchg
ret
mov
scas
xchg
inc
insb
fdivrs
aaa
sti
inc
pop
ficoml
mov
into
adc
adc
ret
movsl
pmullw
addb
xchg
test
push
xchg
in
fnsave
popf
negb
dec
stc
popf
sub
mov
or
cwtl
rcll
inc
xor
scas
jb
push
dec
mov
stos
int
push
xor
dec
decb
push
push
sar
cpuid
inc
xor
jb
push
in
sti
insb
aas
int3
in
xor
xorb
scas
mov
cmpsl
std
aas
into
mov
ja
arpl
jp
call
or
pop
adc
mov
adc
sbb
imul
imul
es
stos
jbe
push
or
sbb
push
daa
xchg
shl
fdivl
sub
xchg
call
adc
mov
das
lods
jno
xorl
and
and
xchg
fwait
lret
test
orb
ss
xor
adc
cmpsl
inc
dec
scas
sbb
popa
pop
sub
inc
andb
dec
mov
test
shlb
cmpsb
js
add
inc
leave
lret
mov
notl
sbb
xchg
orl
sbb
cltd
dec
adc
sbb
xor
fcoml
roll
sub
aas
clc
mov
push
inc
sub
add
int
inc
ret
sti
dec
clc
insb
inc
data16
pop
jns
xchg
pop
xor
test
xchg
inc
mov
fstp
insb
mov
mov
mov
push
mov
mov
push
push
out
insb
imul
ret
mov
ljmp
xchg
mov
pop
mov
movsl
std
popa
cwtl
outsl
movsb
fildll
pop
fidivs
insb
cmpsl
ds
lahf
imul
pop
dec
mov
xor
ret
je
mov
inc
shr
fstpl
outsl
mov
add
push
mov
sbb
sarb
ret
repnz
dec
inc
push
in
cmc
pop
and
sub
and
mov
and
mov
fcmovne
fdivr
mov
js
cmp
xor
dec
mov
and
pop
sahf
sbb
push
ret
shll
or
mov
ret
dec
aam
cmc
dec
mov
insb
push
cltd
and
add
inc
push
mov
int
jbe
ret
sbb
and
clc
shlb
scas
pop
push
mov
cmc
xor
jg
pop
sub
dec
fbstp
or
mov
dec
repz
icebp
inc
pushf
sub
test
ret
aad
cwtl
sbb
adc
and
sub
shrl
popl
lahf
lock
pop
dec
rcl
push
js,pt
sub
sub
adcb
out
jb
xchg
shlb
add
data16
mov
lods
sub
imul
or
fucompp
les
dec
adc
mov
aad
push
popf
popa
aad
push
xchg
fcmovne
inc
in
imul
movsb
call
xchg
je
cmp
sub
mov
cmc
sub
je
mov
enter
xchg
fstpl
aas
pop
pop
pop
or
or
fsubl
pop
jecxz
pop
fistl
rclb
sbb
pop
std
data16
aam
and
and
mov
out
cmp
cmp
loop
add
dec
dec
out
dec
sub
jb
or
pop
test
pop
jle
ror
xchg
out
clc
popa
push
jb
leave
pop
adc
pushf
insl
pushf
push
push
jmp
int3
imul
and
inc
pop
mov
test
jmp
add
mov
scas
mov
push
cmp
cmp
insb
inc
push
sub
and
fsub
andb
loop
sbb
in
sbb
cli
sub
imul
ret
add
push
jmp
test
inc
sbb
push
ret
adc
cwtl
fwait
call
iret
dec
rcrl
sbb
sub
fcomi
mov
jecxz
inc
dec
cmp
outsl
fbld
sbb
or
push
adc
imul
mov
cs
pusha
pop
and
lret
int
inc
fbstp
fcos
add
inc
add
cmp
bound
mov
inc
adc
sub
mov
xor
push
jae
hlt
leave
pop
out
xor
mov
mov
sahf
dec
cs
push
js
cmp
inc
scas
jge
and
xorl
pop
aad
adc
mov
xchg
mov
nop
pop
sbb
mov
ret
add
lret
lcall
les
jp
jb
test
mov
mov
add
jle
fdivs
outsl
lcall
sub
cmp
int
jge
push
dec
mov
lret
adc
repz
mov
or
add
frstor
sub
pop
xor
sbb
or
sub
das
inc
pop
add
dec
movsb
and
call
sbb
and
repz
div
sub
outsb
or
jmp
jle
dec
cmp
pusha
ss
cmc
mov
inc
in
repnz
mov
sub
pusha
add
rcrb
adc
dec
xchg
or
es
fcoms
pop
mulb
outsl
repz
loopne
mov
and
push
fdivr
cmp
fists
xchg
pop
leave
out
incb
lods
fidivrs
dec
inc
pop
cmp
mov
and
pop
jmp
js
xchg
jnp
scas
mov
pop
jg
mov
xor
enter
shrb
lahf
push
enter
adc
pop
cmpsb
push
pop
repnz
test
mov
push
mov
inc
sub
test
sub
adc
mov
jne
cmp
shrb
sub
jl
pushf
jle
lcall
test
aaa
mov
and
sub
mov
dec
notl
aad
mov
dec
ret
int3
inc
fistl
enter
mov
adc
roll
adc
add
inc
jae
xor
das
in
sbb
int
data16
clc
rol
jnp
mov
push
jnp
loope
push
xchg
icebp
ret
cmp
jle
sub
mov
dec
or
cs
ljmp
fsub
push
outsb
inc
movsl
pop
aaa
pop
testb
jb
jp
xchg
push
movsl
push
sbb
fwait
mov
jl
sub
in
xor
out
mov
bound
fmull
fwait
push
loopne
ss
mov
pop
lret
dec
cld
ja
adc
push
loopne
aad
mov
hlt
dec
or
sbb
rcrl
or
pushf
fdivr
dec
add
xchg
stos
aam
ret
fsub
xchg
mov
inc
daa
sub
aaa
and
mov
inc
mov
iret
das
aam
mov
sub
cmp
xchg
popf
ljmp
jo
decl
mov
repz
fisttps
test
and
cmp
loopne
or
into
and
notl
imul
lcall
insl
test
dec
subl
add
add
inc
jg
mov
jnp
fimuls
cmp
movb
test
ljmp
mov
adc
push
pushf
adc
mov
iret
sbb
or
or
stos
loope
jnp
or
cmp
sbb
in
inc
fcmovb
or
xchg
test
icebp
imul
nop
aas
enter
mov
out
in
sub
lahf
jne
inc
cmp
shl
pop
dec
mov
repz
test
add
outsb
xchg
mov
leave
or
outsb
sahf
cs
pop
outsb
mov
sbb
dec
or
add
xor
mov
push
insb
mov
mov
dec
in
xchg
pop
and
int
cmc
adc
das
aaa
push
inc
jge
mov
rorb
mov
sub
dec
fbstp
push
pop
rorl
es
push
or
mov
jno
std
cmp
pop
into
push
seto
mov
mov
es
cltd
outsb
in
data16
xchg
fdivrl
popa
inc
cld
push
jecxz
xor
fdivrl
roll
jp
cs
cmp
sbb
loopne
mov
jmp
out
fnstenv
xor
fcomp
push
sub
inc
inc
out
push
lods
gs
cli
jp
in
xchg
lcall
das
in
mov
shrb
mov
mov
add
cli
inc
fcmovnu
mov
pop
fwait
mov
or
repz
cmp
xor
mov
adcl
das
and
dec
fstpt
add
cmp
add
cmp
xchg
or
push
push
ffree
and
adc
sbb
ljmp
mov
cmp
testb
xchg
lahf
cld
je
out
sub
pop
ret
outsb
mov
jns
cli
or
xor
xchg
adc
lods
iret
testb
lods
pop
das
dec
fsubr
sarb
sbb
rorl
push
push
pop
push
imul
cmp
cmpb
fcmovnbe
xor
adc
rcll
cmp
cmp
or
jg
and
add
inc
icebp
gs
lods
xchg
pop
dec
xor
inc
sbb
cwtl
mov
fdivr
sub
mov
mov
jecxz
mov
sti
mov
xor
dec
xchg
mov
in
pop
adcl
pushf
or
mov
or
mov
scas
in
ret
xchg
mov
orb
push
jne
xor
test
cmp
mov
mov
cmp
movsl
or
fucomp
add
inc
fnstsw
pop
and
sub
push
andl
add
sbb
shrb
jae
adc
cmpsl
lds
imul
repz
or
roll
into
stos
jp
and
sbb
and
push
lret
jle
mov
daa
pusha
lahf
jae
sti
imul
cmp
lcall
jbe
add
mov
ror
orl
pop
negb
rolb
in
and
jp
stc
cwtl
pop
and
cli
sub
add
leave
test
jno
outsb
inc
daa
dec
lea
fwait
push
ja
lods
dec
into
ljmp
jnp
xchg
imul
jno
lods
es
pop
inc
int
mov
jo
lret
mov
pop
mov
sahf
xor
ja
imul
add
arpl
sarl
jbe
int
shrl
and
nop
cmp
mov
daa
inc
sbb
jle
mov
int
inc
arpl
jecxz
xor
xchg
sahf
popa
mov
fnstsw
nop
leave
xor
adc
pop
lea
movsb
xor
push
int3
out
jnp
rorl
xor
fucomip
js
pusha
lcall
xchg
loop
push
push
rcr
or
xchg
mov
sub
or
fcoml
stos
cmpsl
jo
push
dec
lret
fwait
int3
dec
lock
mov
mov
leave
les
popa
inc
sbb
mov
push
popf
jne
out
push
in
mov
xchg
daa
gs
cmp
sub
cmp
sub
and
les
add
cmc
cmpl
fdivrs
lock
mov
mov
stos
pop
movsl
lds
push
pop
xchg
mov
cmc
xchg
mov
pushf
or
inc
xchg
jbe
mov
push
test
fwait
push
xchg
push
xchg
out
or
cwtl
dec
push
push
push
mov
rorb
add
ret
pop
and
add
push
lods
cmp
and
fstpl
sbb
xlat
jb
enter
call
call
xor
pop
sti
cmp
xchg
add
pop
daa
lret
push
ljmp
mov
cmp
insb
arpl
mov
dec
add
push
call
push
into
das
push
sti
xlat
push
xlat
movsl
sbb
mov
pop
push
scas
repz
popf
add
pop
movsl
inc
iret
cld
into
test
lods
sahf
xor
push
inc
jns
icebp
jae
xor
pop
fneni(8087
jnp
stos
inc
addr16
xor
sub
pop
hlt
daa
insl
sarl
mov
psubb
inc
dec
dec
add
movl
jp
add
mov
cmpsl
dec
cwtl
popa
xchg
or
aaa
mov
add
mov
outsb
dec
pop
mov
stos
cmpsl
cmp
xor
xor
and
push
xchg
inc
dec
xchg
mov
stc
inc
push
xchg
mov
adc
cwtl
loope
sbb
outsl
repnz
movsl
cmp
mov
xchg
jno
push
sbb
rclb
fwait
popa
outsb
pop
mov
adc
dec
inc
xchg
sar
gs
or
jbe
push
aas
leave
shll
test
xchg
add
inc
add
aaa
fwait
xchg
pop
jne
push
int
out
xor
test
mov
loopne
pop
and
sub
pop
ja
jnp
xchg
test
sarl
inc
jno
cmp
imul
mov
add
fstps
cltd
and
divl
xchg
cmp
fcomps
rcrl
xchg
jl
mov
pop
out
call
cmp
repz
xchg
sub
lret
int
jbe
cmpsb
mov
imul
sahf
das
in
mov
stc
push
push
cmpsb
sub
imul
mov
je
arpl
sbb
lcall
sbb
xchg
mov
push
adc
data16
add
clc
sbb
pushf
dec
ss
lret
push
mov
mov
inc
cmpsl
dec
and
xor
push
and
test
bound
adc
jno
adc
in
fidivrl
lock
js
test
jnp
rolb
inc
xor
rcl
pop
popf
cmpsb
inc
clc
sbb
outsb
xchg
sub
cmpsb
ja
xor
ret
repz
cmpsl
push
outsb
loop
je
pop
xchg
inc
loope
mov
gs
cmp
hlt
and
loopne
push
cwtl
sahf
xor
dec
addr16
cmp
push
inc
inc
jp
adc
xor
test
stos
mov
insl
and
cmp
push
push
jmp
es
negl
int3
mov
jp
jle
sbb
aas
sub
cltd
add
cmp
aas
add
fldenv
inc
xchg
outsl
cli
pusha
xchg
popa
sarb
call
loopne
leave
in
push
movsb
test
jmp
xor
leave
data16
pop
xchg
push
fdivr
subl
pop
jae
enter
and
adc
jnp
fwait
xor
add
neg
movntps
xor
mov
call
pop
pop
cmp
popf
out
xor
sbb
lahf
int3
mov
out
fst
je
jecxz
mov
jle
jecxz
mov
xchg
ret
popa
fiadds
ja
xchg
das
lahf
enter
lahf
cmpsb
sbb
mov
xor
mov
call
jns
aad
lret
inc
pop
sub
xor
sbb
push
pushf
in
cmp
js
lahf
jge
push
repnz
das
addr16
pop
add
sarb
imul
sbb
jg
mov
shll
or
sbb
out
cwtl
clc
inc
pop
stc
cmpsb
pusha
shll
xor
outsb
push
sbb
lahf
adc
out
mov
stos
mov
xlat
in
movsl
add
fwait
mov
jne
adc
sbb
into
pop
jns
sbb
insl
in
inc
divb
lret
push
bound
fs
pop
jns
mov
mov
movntq
mov
or
mov
iret
in
xchg
test
pop
jae
call
sub
ficompl
jmp
movsl
jecxz
outsl
enter
jae
aas
lods
stos
and
rcll
push
cmp
xchg
sbb
xchg
out
sub
test
mov
sub
nop
push
sbb
sbb
or
les
in
enter
cwtl
imul
std
insl
out
dec
mov
in
negl
jbe
cwtl
xchg
adc
arpl
addb
insl
movsb
sbb
imul
test
loop
sbb
and
push
xlat
nop
fildll
jno
xchg
add
pop
xchg
loope
push
cmpsl
pop
or
pop
sbbl
mov
faddl
mov
or
push
mov
lahf
fsts
add
jo
or
sbb
mov
mov
sbb
je
push
sarb
jmp
test
push
jp
fbld
mov
sti
shll
fisubl
mov
insl
or
sbb
jo
aas
mov
mov
dec
das
xchg
mov
pop
popa
mov
mov
dec
push
pop
ljmp
dec
sbb
pop
jge
push
xchg
pushl
dec
xchg
sbb
clc
repz
jge
or
cmc
rcrl
and
sbb
iret
pop
xor
xchg
xchg
test
ss
jo
cmp
and
inc
or
inc
adc
mov
pop
xor
pop
frndint
imul
xor
imul
out
insb
xor
scas
stos
imul
loop
into
add
xchg
subl
mov
xor
xor
inc
fldenv
sbb
scas
xchg
mov
shl
mulb
mov
out
sub
test
cmp
fstl
jnp
insb
daa
xchg
mov
ret
pop
add
int3
cmp
sarb
sub
mov
cmp
icebp
daa
aam
mov
imul
outsb
sbbl
lret
nop
pop
movsb
loop
mov
adc
sbb
fisttpl
loopne
pop
icebp
mov
lahf
and
push
scas
dec
or
mov
or
std
xchg
daa
movsb
pop
out
add
sub
in
push
jnp
hlt
jo
ret
sub
mov
shlb
stc
mov
cmp
imul
jg
push
mov
ja
rclb
rcr
loop
pusha
sub
inc
and
push
shlb
mov
stos
push
gs
cmpsb
inc
fwait
xchg
fdivl
add
push
jecxz
test
sub
clc
outsl
ds
xor
xchg
and
popf
std
ljmp
rcr
repnz
in
mov
xor
das
pop
mov
adc
mov
sub
rclb
fldl
mov
sbb
test
shl
mov
bound
add
pop
test
or
ds
insb
mov
cmp
and
in
fsubs
push
adc
ds
dec
in
rolb
sub
ss
je
dec
pop
push
test
les
bound
in
jo
sbb
cmpsb
mov
stc
clc
inc
dec
lock
pushf
pop
push
jl
lock
out
in
hlt
mov
cmovs
outsb
inc
lret
aad
idivb
push
orl
and
jnp
aam
dec
sbb
cmp
ds
outsl
or
dec
xlat
jo
dec
cld
push
pusha
jbe
and
pop
sbb
or
scas
sub
or
jno
xor
insb
push
mov
add
scas
or
stos
adc
add
mov
ss
pop
pop
xor
adc
jae
jno
xchg
inc
stos
paddw
es
inc
movsb
dec
and
inc
dec
ja
mov
addr16
ret
adc
inc
xchg
push
negb
fildll
test
loopne
cli
in
data16
out
mov
pop
sti
fbstp
xchg
int
push
lahf
mov
fmul
dec
outsb
inc
or
dec
lret
mov
jnp
enter
es
adc
lcall
add
ss
sbb
inc
inc
psubd
jns
imul
js
inc
dec
outsl
and
pop
mov
or
das
jmp
insb
outsl
les
mov
mov
pop
out
mov
das
scas
dec
dec
test
ja
enter
xchg
in
insl
or
shr
adc
inc
icebp
pop
fcmovu
cmp
stos
pop
into
in
into
sub
fimull
push
std
add
int3
andb
lret
iret
add
sbb
test
movsl
rcrl
mov
adc
dec
out
scas
fisttpl
and
pop
cmc
xor
adc
add
or
add
sub
popa
adc
cwtl
sbb
xlat
pop
dec
test
imul
adc
xor
push
jbe
int3
push
xor
adc
cmp
out
mov
push
push
push
pop
aam
nop
xchg
xor
out
rcrl
scas
sbb
lods
mov
and
mov
and
aaa
mov
cld
loope
push
push
jmp
add
stc
lret
in
cwtl
movsl
addr16
jno
sbb
inc
add
xor
fbld
test
inc
mov
push
mov
adc
bound
push
sbb
mov
out
js
sub
dec
dec
sub
enter
outsl
lock
das
xor
fsub
push
out
addr16
adc
or
rclb
xchg
or
and
bound
cmp
cmpsl
and
inc
sub
cmp
push
rorl
fcmovnb
sub
mov
sub
mov
and
int3
gs
hlt
outsl
pop
or
mov
fisttps
adc
mov
pop
jo
jle
mov
aam
scas
scas
test
add
sub
sbb
testb
imul
outsl
xor
mov
test
fs
and
lret
push
popf
dec
xor
mov
sub
sub
or
jmp
into
out
adc
lret
leave
lahf
lea
andb
push
cmp
xorb
incb
lret
cmp
xchg
xor
jbe
push
push
push
nop
pusha
sbb
sub
aaa
mov
cmp
pop
js
test
lahf
repz
inc
mov
inc
xor
jo
and
mov
push
push
sub
push
add
add
lret
dec
sub
push
push
jne
sbbl
dec
sub
or
arpl
fsubrl
mov
fisubs
xchg
push
mov
pop
push
cwtl
fsubrl
inc
cmpsl
adc
ret
into
add
inc
stc
out
xchg
clc
fucom
pop
out
push
lods
fadd
push
filds
fisubl
sbb
jge
lcall
out
lods
fimuls
inc
das
arpl
add
iret
and
push
stc
test
mov
jl
cmc
iret
cmpsl
out
push
and
fimuls
cltd
xchg
xchg
shrw
sub
and
cmp
out
movsb
push
mov
loopne
pop
repnz
jno
cmp
xorb
repnz
add
xchg
shlb
jae
cwtl
mov
dec
inc
xchg
sbb
addb
push
insb
mov
xchg
arpl
mov
jnp
cmp
repz
lods
add
xchg
jp
inc
mov
sbb
int3
dec
inc
cs
and
cmp
popa
dec
add
mov
xor
mov
pop
jo
lds
fstpl
cwtl
jae
add
sbbb
or
mov
mov
mov
repnz
outsb
test
shll
shr
leave
adc
hlt
into
enter
fs
test
mov
loopne
cmp
mov
repz
inc
sub
lds
into
or
mov
mov
sahf
and
cmpsl
and
add
push
bound
cmp
sbbb
enter
ret
dec
jl
pop
jae
add
mov
dec
ds
insl
leave
push
fwait
or
sahf
ret
mov
loopne
icebp
pusha
scas
add
xor
pop
cmpsl
adc
loope
out
loope
lods
subl
fistpl
and
add
fnstenv
ret
push
dec
sbb
jno
dec
xor
shrb
icebp
pop
inc
ret
icebp
adc
fwait
jne
push
mov
xor
lods
mov
push
and
mov
outsb
sub
fdivl
jno
or
and
insb
inc
jg
pop
xor
loop
loop
cmp
das
ja
mov
call
cmc
jp
adc
jecxz
jo
adc
in
enter
pusha
sub
int3
imul
cmpsl
push
cmp
test
push
fistpll
pop
daa
dec
and
adc
mov
pop
mov
jns
mov
dec
xchg
push
icebp
js
jbe
jle
lahf
cwtl
cli
maskmovq
inc
mov
add
push
aam
sbbl
cld
lahf
adc
push
dec
jae
cmpsb
aas
mov
subl
cmpsl
jo
inc
push
xchg
stos
fdivrs
push
jp
out
out
aam
jbe
pop
rorl
fbstp
inc
and
insb
mov
dec
rclb
lcall
jle
mov
ljmp
or
movlhps
or
lea
out
xor
sbb
lret
cltd
mov
aaa
adc
int
fwait
push
and
adc
in
sti
lret
fisubs
data16
sbb
fcomps
mov
dec
push
call
push
xchg
bound
add
aas
and
mov
je
std
mov
xchg
test
and
out
std
jge
negb
inc
lcall
adc
pop
test
jnp
sahf
sbb
push
aad
xchg
xor
fwait
xchg
pop
stos
fimull
mov
pop
insb
imul
cmc
fmull
dec
add
out
jnp
jbe
mov
push
rorb
sbb
int3
jmp
sbb
xchg
mov
dec
or
pop
in
mov
mov
pop
add
inc
imul
rclb
push
mov
mov
lcall
sahf
sahf
mov
fdivr
movsb
loop
push
jmp
or
mov
adc
daa
cmp
sbb
and
sub
cmp
movsl
mov
pop
and
pushf
out
mov
jmp
ja
cmp
pushf
incl
mov
mov
ja
daa
add
xchg
ljmp
insl
int
xchg
xchg
inc
adc
mov
in
shlb
inc
jmp
repnz
mov
mov
imul
push
inc
lahf
int
aam
pop
adc
mov
es
rol
sti
push
fcoml
mov
movsb
scas
push
xchg
jb
sub
sbbl
xor
push
sub
mov
hlt
cmp
and
mov
idivl
out
xlat
mov
jmp
jle
adc
add
inc
xchg
jno
push
sbb
hlt
pop
enter
icebp
in
xchg
dec
loop
dec
rorl
sbb
dec
cld
xor
out
inc
stos
sub
jns
cmp
pop
ret
inc
pop
adc
stos
mov
jle
repz
inc
out
jne
bound
jp
leave
mov
inc
fcoml
pop
xchg
repz
cmpsl
jmp
mov
or
imul
xchg
mov
es
mov
cmp
or
cmp
push
lods
jae
push
ja
jnp
or
mov
pop
cld
pop
scas
inc
shrl
leave
or
adc
mov
mov
inc
push
shll
cmpsl
cwtl
lods
and
insl
or
cwtl
cmpsb
inc
cmpl
idivb
insl
test
push
out
pop
jns
push
push
mov
pop
int3
push
inc
popa
and
pusha
xchg
xor
loope
pop
hlt
sub
lahf
jbe
pop
rcrb
cmp
inc
fwait
push
sub
and
dec
test
jns
jb
clc
aas
push
scas
out
out
enter
sbb
or
push
mov
ficoms
fcoms
out
ret
jecxz
mov
and
and
cmp
pop
movsl
sbb
and
xchg
out
and
adc
cmc
push
repz
movsb
sbb
and
enter
ret
dec
push
es
cmpsb
insl
sbb
ds
dec
sbb
dec
cli
clc
aam
aaa
ror
pop
test
xchg
stc
add
fimuls
fnstsw
lods
fwait
lods
sub
in
dec
adc
adc
sub
hlt
dec
mov
pop
data16
addl
adc
mov
movb
out
mov
mov
lods
jmp
loop
in
stc
or
outsb
mov
xchg
outsl
dec
pop
daa
mov
push
iret
shrb
pop
jl
mov
fbld
movsl
loope
and
stos
push
dec
dec
aas
mov
inc
mov
sbbl
iret
jb
inc
mov
and
sub
inc
pop
out
repz
mov
mov
les
and
ret
inc
jae
fcmove
adc
xchg
ljmp
scas
xchg
mov
rcrl
insl
arpl
ud1
mov
mov
pop
fmull
stos
mov
gs
inc
jg
sbbb
stos
mov
cmpsb
sub
aaa
cli
jne
repz
icebp
shrl
or
sbb
dec
sub
fstps
arpl
aas
jp
js
jbe
aad
fldln2
cmp
xorl
loope
inc
pop
mov
push
jnp
and
xchg
lahf
mov
dec
fcomip
movsb
call
dec
dec
and
fnstsw
test
add
and
pop
xchg
sub
les
push
out
pop
xor
das
out
inc
dec
cld
xchg
mov
dec
and
pop
jae
sbb
or
adc
aaa
aad
sub
into
or
std
mov
dec
stc
cld
pop
sbb
push
lret
mov
jne
push
xchg
je
fimull
xchg
sahf
arpl
fisubl
cmpsb
adc
inc
les
int3
pop
andb
hlt
stos
aad
stc
popa
xor
cmpsb
lcall
jne
rcrb
popa
inc
add
xchg
jge
in
push
shrl
dec
xor
pushl
icebp
sbb
clc
lcall
pop
repnz
je
xchg
push
jnp
mov
mov
push
dec
aad
jo
push
daa
insb
pop
sbbb
mov
pushf
sbb
xchg
out
push
in
bound
mov
pop
fsubs
sbb
and
fnstcw
repnz
mov
inc
adc
test
inc
insb
rclb
pushf
outsl
test
mov
ret
xlat
sub
mov
xor
pusha
es
out
fisttpll
push
cmp
int3
cmp
pusha
jae
add
jg
popa
outsl
xchg
adc
out
xchg
out
cs
push
mov
xchg
mov
inc
into
sbb
popf
pop
imul
xor
shlb
push
out
or
sbb
mov
pop
inc
or
scas
mov
out
mov
popa
xor
dec
das
test
cmp
cmp
inc
stc
cwtl
sub
sahf
jmp
sub
ret
push
xchg
mov
cli
xchg
mov
push
inc
repnz
popa
int
imul
dec
insb
arpl
and
cmp
call
add
sub
popf
sub
cmpsb
pop
add
lret
cmp
mov
sub
into
sub
cmc
mov
add
data16
push
or
cmp
inc
add
in
xor
dec
movb
mov
jmp
push
xchg
shlb
mov
mov
xchg
mov
push
ficoms
jne
enter
mov
fistpl
std
je,pt
and
sbb
jmp
jle
daa
pushl
fcoml
jnp
xchg
insb
push
lcall
dec
test
and
inc
popa
int3
pop
add
pop
dec
pop
cmp
sub
and
sti
aam
jno
mov
sbb
jbe
push
mov
pop
xchg
cmpsb
mov
fld
cwtl
dec
mov
in
cmc
push
dec
mov
or
push
loop
hlt
cli
je
rcrb
loop
add
int3
jo
and
jae
stos
add
pushf
rolb
loop
and
inc
push
std
lret
scas
xchg
fildll
nop
xchg
hlt
orb
sarl
shrl
bound
add
scas
adc
inc
mov
in
popf
shlb
inc
fcoml
call
jle
pop
popf
inc
rorb
rolb
sti
repz
jnp
mov
push
movsb
cltd
aas
nop
lret
inc
sub
ret
ret
int
and
or
or
mov
test
pop
xchg
lret
xchg
ss
ss
into
cmp
pop
xchg
cwtl
repz
fistpll
push
sti
out
hlt
and
test
lock
dec
bound
mov
mov
rcr
int3
idivl
ds
mov
mov
and
fsubl
test
out
sbb
stc
xchg
lods
xchg
daa
fdivl
xor
dec
mov
cmpl
mov
add
fldl
mov
dec
add
mov
adc
dec
imull
movsl
jge
jb
stos
iret
in
or
fisttpll
inc
xchg
icebp
fwait
aas
push
cmp
fcoml
lahf
dec
mov
xchg
dec
repz
lret
sbb
insl
into
adc
fs
jmp
push
fiadds
ds
cmp
xor
sub
xor
les
ret
or
sbb
sub
invd
push
mov
pop
push
push
fs
in
repz
mov
dec
sbbl
sti
xorb
ss
jle
arpl
mov
xor
dec
mov
and
xchg
and
xor
push
xor
rolb
les
iret
inc
dec
pop
icebp
xor
mov
xchg
pop
dec
mov
sarl
mov
adc
xchg
mov
loopne
push
inc
pusha
fstl
push
lcall
xchg
movsl
test
dec
icebp
es
loop
loopne
in
and
xor
sbb
jecxz
fmulp
and
or
icebp
fcomps
dec
pop
hlt
adc
icebp
xor
and
xchg
mov
inc
mov
cmp
orb
rcll
lea
jbe
dec
in
xchg
cmp
ficoml
jae
jne
adc
adc
and
pop
movsl
in
decl
pop
lcall
xchg
out
or
inc
lds
inc
xchg
mov
adc
cmc
inc
loopne
xchg
mov
push
sub
or
div
dec
testb
ja
std
dec
cmp
test
imul
cmp
shll
mov
out
cmp
scas
push
and
mov
dec
hlt
cmp
ret
call
dec
mov
lods
cli
scas
andb
out
dec
arpl
pop
fcmovnb
mov
sub
pop
cmpsb
in
add
jle
into
xchg
xchg
test
es
dec
cmp
and
js
shll
aam
testl
xor
mov
leave
jp
adc
mov
adc
movsl
jge
push
aad
sbb
repz
cmpsb
jae
aaa
clc
add
cmp
sub
jge
mov
rcll
nop
pop
mov
fnstsw
mov
sbb
lock
shr
push
testl
sub
mov
hlt
pop
int
dec
insl
addr16
and
jae
adc
mov
mov
xchg
xchg
cmp
cmp
fcomip
leave
cltd
adc
lods
iret
in
loopne
or
shrb
daa
clc
hlt
push
popf
int3
adc
aaa
test
adc
fcmovne
in
ja
xchg
xchg
shl
cwtl
adc
jle
ret
ret
enter
push
mov
mov
push
xchg
push
js
roll
or
adc
pop
pop
stos
imulb
pop
mov
sbb
add
jmp
mov
mov
add
insb
push
insb
ds
mov
inc
dec
jb
adcb
adc
mov
loop
jecxz
mov
ds
outsb
lods
cs
pop
bound
mov
mov
pop
mov
insb
je
ljmp
into
aad
sbb
js
int3
loope
mov
fmull
imul
movsl
and
cmp
aad
push
rorb
pop
mov
mov
cmp
pop
mov
xor
scas
push
inc
je
inc
insl
xlat
test
aas
adc
arpl
xor
push
cltd
shlb
mov
fdiv
bound
add
inc
adc
push
push
leave
imul
gs
mov
pop
add
cwtl
adc
mov
and
addl
pop
gs
scas
jae
fmull
pop
sub
roll
fmuls
pop
test
sub
jge
fbld
movsl
stos
outsb
add
dec
rclb
aad
lock
xor
roll
std
push
sub
inc
loop
rcr
jl
or
inc
adc
addr16
popf
call
cli
cld
test
pusha
imul
hlt
inc
xor
rcrl
adc
sti
mov
test
sbb
repz
sbb
dec
cwtl
mov
fdiv
adc
pop
add
and
jb
lock
repnz
push
inc
dec
aaa
fwait
aam
push
mov
cmp
add
ds
push
fdivp
inc
and
int3
mov
push
xchg
and
pop
inc
aaa
mov
mov
dec
push
dec
dec
push
test
bound
push
jne
cmp
int3
dec
lods
adc
sbb
stos
or
jnp
add
movsl
faddl
inc
ljmp
in
daa
mov
inc
les
mov
movsl
shll
sub
push
adc
xchg
out
popf
cltd
cld
pop
jge
jns
sbb
fsts
lods
push
jmp
pusha
mov
cmpsb
pop
sar
mov
lcall
pop
cld
fcomps
sub
jge
cld
xor
inc
lret
sub
xchg
mov
and
sti
outsl
sahf
aam
jns
add
jnp
repnz
shll
in
test
das
inc
insl
fcomps
je
add
inc
arpl
mov
scas
vmwrite
insl
inc
cmp
mov
cmpsl
xchg
add
add
cwtl
mov
pop
addb
jb
adc
shll
lea
mull
inc
rcrb
scas
add
mov
test
stos
and
movsl
push
pop
mov
cmp
cld
aas
imul
test
push
popf
or
call
cmp
mov
add
roll
addr16
in
jns
test
push
and
mov
inc
mov
das
mov
stos
int
mov
or
flds
add
dec
jb
or
sti
inc
test
aaa
cli
roll
les
call
in
lock
xor
and
enter
add
and
int
loop
adc
or
les
pop
out
push
sbb
sub
add
adc
gs
jo
or
adc
adc
icebp
inc
or
xor
test
or
push
mov
out
mov
adc
pop
aad
or
push
push
pop
push
pusha
iret
mov
cwtl
add
call
mov
inc
adc
inc
mov
enter
ficompl
adc
sbb
pusha
data16
xor
fnstenv
push
mov
lret
and
int
movsl
sub
fistps
cmp
adc
repz
pop
sbb
lea
mov
in
or
and
mov
gs
mov
lret
inc
mov
sub
repnz
jmp
fs
cld
jb
add
je
in
faddl
pop
cs
test
shlb
and
add
push
das
mov
int3
xchg
mov
ljmp
sub
lods
cmp
mov
in
fildll
sub
test
fimull
mov
andb
xchg
mov
add
mov
aas
stc
mov
out
pop
jge
test
or
fidivrl
clc
leave
daa
mov
sbb
lahf
imul
fnstenv
mov
push
add
lds
inc
add
xor
scas
fs
add
lcall
lods
push
cwtl
mov
inc
or
test
or
sub
movsb
cmp
repnz
cld
in
cmp
das
andb
stos
frstor
inc
aas
out
dec
in
or
cmpsb
outsb
mov
sahf
or
int
rcll
sbb
popf
cmpsb
push
fists
popa
in
dec
pop
pop
fldenv
outsb
es
sub
jg
cld
mov
xchg
push
inc
rorb
add
mov
push
push
pushf
xchg
test
cmp
sbb
test
push
out
lds
xchg
xlat
jmp
push
mov
jge
jmp
mov
sub
rcrb
in
sbb
mov
mov
mov
mov
in
dec
insl
push
adc
imul
test
insb
or
cli
out
lods
mov
push
mov
mulb
sub
jecxz
jae
mov
lcall
cmpsb
adc
into
mov
mov
sub
arpl
scas
fisttpl
js
jmp
pop
sub
addr16
xchg
jmp
cld
arpl
or
push
mov
pop
cmpsb
inc
sbb
out
xchg
arpl
and
add
lods
lds
sub
cmp
add
insl
push
insb
jo
mov
gs
pop
ss
xchg
cltd
dec
insl
call
add
mov
mov
out
add
pop
sbb
mov
je
cs
addb
mov
in
lock
fistps
or
mov
jg
xor
je
bound
js
pop
sub
jl
push
jp
jns
aas
dec
popa
loope
jno
cmp
icebp
ljmp
xor
test
sbb
push
inc
xor
mov
or
mov
xchg
shrl
fidivrs
adc
mov
test
or
fadd
fisttps
cmp
pusha
movsl
mov
mov
adcl
popf
push
adc
loop
pop
push
dec
mov
cmp
xchg
popf
push
cwtl
sbb
gs
jnp
xor
lock
add
adcb
mov
or
notl
sahf
outsl
adc
lock
fistl
jp
sub
sarl
pop
add
mov
inc
inc
sub
inc
ljmp
or
push
fwait
data16
popa
insl
sbb
sarb
mov
add
sub
mov
add
dec
mov
ret
loope
pop
cmp
or
shlb
dec
lret
dec
mov
scas
ja
std
push
fucomip
pop
fildl
insl
sbbb
pop
push
int
mov
lcall
dec
adc
aad
add
js
inc
sarl
sbb
inc
dec
mov
in
loope
pop
movsl
lods
push
cwtl
xchg
inc
pusha
inc
out
pusha
inc
mov
faddl
jb
push
sbb
in
es
or
pop
pop
sub
pop
in
dec
enter
sub
pop
mov
inc
xchg
shl
add
test
loope
pop
jmp
loopne
ja
adc
inc
lods
xchg
sbb
inc
lret
adc
dec
ss
sti
sbb
ljmp
cld
popl
dec
sub
stos
and
and
sub
repz
movsb
aam
std
lds
scas
mov
adc
xchg
mov
adc
sbb
pop
mov
sub
imul
repz
test
popa
scas
testl
mov
pop
mov
out
push
sbb
inc
mov
cmp
add
es
leave
sbb
sub
insl
pop
lret
jo
cmpsl
lahf
mov
enter
or
bound
push
xor
mov
icebp
fisttpl
dec
stos
mov
add
lcall
rcr
out
test
shl
mov
inc
cltd
sarl
ja
and
mov
or
push
fldl
cs
out
push
iret
mov
mov
fdiv
mov
lock
sti
scas
subb
lea
pop
or
mov
sub
scas
xor
imul
lcall
mov
mov
lahf
in
and
jns
aam
and
add
loope
icebp
mov
adc
enter
cmpsl
xchg
push
lds
push
sub
outsl
adc
cwtl
movsb
inc
cwtl
push
and
mov
sarl
outsl
mov
dec
data16
scas
or
cmp
add
push
jo
inc
testb
or
pop
rorb
ja
orl
arpl
fadds
mov
add
adc
xor
ret
cmp
ret
clc
nop
push
pop
call
push
loop
and
outsl
and
add
fcmovu
in
lcall
test
sahf
mov
xor
into
adc
xchg
lret
pop
fucomp
lcall
or
xlat
push
sahf
xchg
cmpsb
push
cmp
mov
xchg
mov
rolb
sbb
push
or
cmpsl
pop
out
push
push
cs
icebp
stc
outsl
testb
mov
adc
sbb
mov
push
pop
ds
dec
push
jge
dec
pop
push
mov
sub
add
leave
jne
jmp
push
ss
pop
adc
test
jb
adc
jmp
cld
scas
mov
lds
das
rclb
dec
jno
inc
mov
push
hlt
dec
neg
mov
adc
cli
scas
inc
sti
cmp
pop
sbb
pushf
jae
repnz
loop
or
or
and
jno
adcb
mov
js
imull
sbb
and
or
lahf
or
stos
adc
sbb
mov
lahf
cwtl
xchg
inc
mov
cmp
adc
gs
sub
push
in
adc
mov
and
xchg
aas
jle
call
cs
sub
inc
dec
xchg
ja
sbb
or
sub
jg
sub
and
loop
add
push
jae
push
sbb
or
out
dec
push
das
stos
ljmp
mov
das
imul
cmc
lcall
inc
xor
jl
jnp
dec
mov
mov
cs
mov
cmpsb
push
xchg
jbe
pop
add
frndint
loop
cmp
jno
fistpll
xchg
imul
xchg
inc
or
mov
and
cmp
jno
jl
sub
mov
sbb
loop
psubusw
cmp
cmpsl
jg
xlat
decb
in
out
in
push
or
cltd
jle
cmp
test
xchg
test
je
jns
aas
lcall
fsubrp
and
xlat
stos
sbb
xlat
xor
lret
pop
push
in
out
sub
cmp
out
xchg
lahf
pop
ds
mov
cmp
or
test
and
xchg
adc
sbb
xor
pop
shrb
jns
fs
lea
std
and
lds
push
push
orb
bound
popf
xchg
jnp
dec
jecxz
or
xchg
xor
mov
aam
or
add
fdivrs
inc
jbe
jae
cmp
sbb
fistpll
subb
enter
dec
jne
jnp
pop
mov
in
shrb
scas
inc
add
sub
leave
out
ss
sbb
in
in
adc
mov
cmpb
mov
dec
pop
fimull
pusha
fistl
lcall
xchg
pop
push
ss
push
add
enter
or
lahf
add
inc
and
cmp
filds
xor
mov
mov
jnp
aad
lock
js
dec
scas
repnz
pop
fcoms
sub
imul
or
inc
aad
in
sbb
adc
push
sbb
push
pushf
gs
xor
out
cmpsl
cmp
adc
cmp
jp
std
inc
xor
std
inc
mov
jbe
mov
loop
sbb
mov
addr16
int
sti
xor
decb
cmc
rorb
nop
rcr
mov
mov
addb
push
dec
arpl
cmp
sub
inc
or
lods
jg
cmpl
es
stos
subb
mov
inc
mov
call
shrl
adc
jecxz
mov
lret
and
adc
in
cmp
push
xlat
push
mov
pop
sahf
into
fistps
arpl
mov
in
shll
inc
mov
adc
cli
jl
and
fstl
push
js
adc
call
inc
adc
cmp
negb
icebp
jle
xchg
ljmp
ja
fs
dec
out
adc
mov
pop
sti
mov
mov
pushf
repnz
push
cwtl
pop
mov
js
sar
mov
or
mov
sbb
or
call
lcall
add
xor
pop
xchg
dec
xor
jp
adc
fbld
push
inc
lods
cltd
sbb
fistps
call
iret
sbb
dec
sub
daa
arpl
xchg
xchg
xchg
test
imul
jp
fs
sahf
fnsave
jecxz
mov
dec
out
les
sbb
xlat
aas
mov
loope
sub
enter
cwtl
hlt
cmp
movsb
dec
or
sub
js
ficomps
scas
and
outsl
rcrl
pop
cmc
je
xorl
and
cmp
cmp
or
mov
sbb
cltd
testb
lods
xor
cs
inc
mov
and
test
lcall
js
sbb
inc
mov
jno
lcall
js
ljmp
cmp
mov
or
shr
and
pop
sub
or
sbb
cltd
js
dec
ds
ja
push
and
imul
add
jg
cmp
sub
scas
push
sbb
and
adc
sub
xchg
cmp
and
sub
push
xor
pop
and
test
test
gs
cmpsb
add
adc
sahf
jmp
jg
rcl
jne
xchg
jge
inc
cltd
or
mov
adc
insl
fists
popa
dec
fists
cmpsb
out
dec
ja
inc
ret
jl
loopne
shrb
bnd
mov
xor
rolb
push
stos
mov
rcll
and
jle
in
in
jmp
aas
pop
int
mov
mov
pusha
movsb
fdiv
push
xor
ror
fldt
jo
push
mov
lock
and
adc
cmpsb
sbb
or
xor
sbb
in
test
sub
imul
or
adc
xor
iret
jb
shlb
push
sub
cmp
xchg
shlb
inc
orb
outsb
aad
cmpsb
sub
mov
int
out
cs
mov
pop
pop
popf
add
ret
mov
or
dec
dec
mov
dec
loopne
inc
mov
xchg
jb
mov
ret
add
je
jae
inc
pop
shlb
repnz
js
xchg
push
and
aad
mov
hlt
int3
int
xlat
je
cmp
mov
in
iret
push
cli
mov
push
jg
cld
xchg
movsb
jecxz
push
je
xchg
ds
inc
mov
jns
xchg
push
dec
mov
out
mov
fsubrs
push
xchg
fwait
out
repnz
testl
push
gs
ret
or
xor
inc
imulb
and
cmp
xchg
push
mov
pop
and
inc
mov
cmp
sub
idivb
mov
mov
inc
out
mov
sub
test
outsl
adc
cmp
dec
add
sub
push
repz
cmc
insl
hlt
xor
cld
out
dec
leave
pop
daa
mov
xor
call
adc
jp
mov
inc
xlat
adc
add
push
inc
in
ds
cmp
xchg
ret
iret
sub
popf
lret
push
pop
sub
inc
cmp
outsb
cltd
rcll
lods
repz
sbb
shlb
or
js
enter
fs
fnsave
mov
scas
push
xlat
lods
movsb
mov
add
or
sti
clc
sbb
xchg
fistpl
sub
mov
pop
lahf
pop
out
in
xor
sti
jecxz
sub
das
out
mov
cltd
mov
sbb
pop
push
sbb
mov
jnp
xor
mov
adc
sbb
or
push
xor
adc
dec
pop
call
fldenv
int
lock
ljmp
fmuls
in
es
andl
adc
fildll
leave
mov
inc
outsl
sbb
inc
stc
test
mov
or
imul
mov
pop
arpl
xlat
lds
dec
aas
out
xor
mov
leave
jbe
cmpsb
add
lds
negl
icebp
loopne
js
xor
lahf
push
pop
mov
push
les
sub
pop
fisttpl
push
mov
mov
gs
mov
popa
sub
jecxz
repz
pop
or
cmp
add
loope
in
inc
pop
outsl
test
mov
fdivl
in
les
adc
dec
dec
imul
sbb
cld
das
lcall
in
add
cmpsl
adc
scas
gs
mov
push
sbb
pop
and
pop
popa
push
and
push
jo
addr16
ss
jnp
pop
mov
inc
int
gs
pop
es
pop
nop
xchg
mov
jb
pop
inc
pop
sbb
xchg
inc
sbb
dec
pop
imulb
add
mov
cmp
jnp
lods
lea
test
inc
xor
mov
in
push
inc
std
sub
rcr
add
cli
cmpsb
pop
fidivrl
dec
xlat
xor
iret
out
les
and
or
imul
mov
inc
sahf
push
enter
sti
mov
xor
sbb
sbb
adc
es
loop
das
pusha
fdivrl
push
test
icebp
stc
in
push
pop
dec
jp
test
push
xor
pop
and
or
hlt
xor
js
sub
mov
xchg
pop
sti
sbb
sahf
insl
stos
add
add
xor
int3
mov
and
jo
faddp
lret
insb
movsb
daa
cld
lret
mov
fucomip
jle
pop
adc
cmp
mov
ss
test
je
lock
xchg
and
ret
mov
mulb
std
movb
imul
adc
or
dec
and
cmp
and
aad
pop
in
popa
cmpsb
jp
dec
mov
mov
xchg
loopne
ret
xor
jne
lret
popf
push
mov
cmpsl
xchg
lods
xchg
xor
push
push
pop
loop
hlt
push
lods
nop
ds
dec
lds
xchg
jno
shll
or
scas
fidivl
in
jo
hlt
cmpsl
sbb
xchg
mov
fwait
dec
and
ds
jecxz
in
dec
pop
adc
cmpsb
or
in
mov
rcrl
test
jl
cmpsl
or
lahf
daa
mov
or
push
mov
inc
cmpsl
je
in
scas
ret
outsb
mov
sahf
mov
mov
jecxz
cltd
icebp
or
repnz
stc
xor
dec
outsl
adc
fdivrl
cmpsl
add
sbb
sbb
mov
aas
in
xorb
aad
and
xor
and
xlat
sbb
into
add
push
aam
jae
mov
imul
xchg
xchg
jno
ret
andb
jae
shrl
nop
mov
sub
xor
push
push
jmp
seto
inc
daa
pop
cmp
std
lods
pop
and
out
arpl
dec
dec
jae
mov
test
sub
adc
adc
inc
loopne
rcr
jmp
fdivrs
mov
fimuls
push
inc
push
mov
test
mov
pop
rcll
ficoml
and
ret
mov
mov
mov
loope
mov
xchg
aaa
xor
pop
out
mov
add
mov
pop
pop
ljmp
lahf
cmp
pop
stos
push
push
scas
dec
repz
cli
hlt
dec
fsubl
inc
cmp
fisttpll
xchg
clc
stc
rol
mov
inc
add
mov
cmc
xchg
jp
sbb
in
roll
test
adc
adc
bswap
fbld
test
in
into
shlb
adc
addr16
ss
test
sarb
and
scas
mov
sahf
jmp
fwait
xor
aad
dec
or
ficoml
imul
repnz
jg
mov
mov
fildll
pop
cmp
sub
shlb
push
mov
mov
insl
shrl
ds
add
fmuls
test
imul
idivl
in
xchg
push
int
ret
bound
fwait
cltd
inc
lahf
mov
xchg
aas
jecxz
and
pop
xor
pop
insb
inc
data16
xor
dec
xchg
pushf
push
sbb
movsb
inc
repz
xor
pop
arpl
mov
iret
mov
lret
jp
es
clc
mov
incl
xor
jmp
sbb
loope
clc
jo
xchg
pop
lock
repnz
or
add
outsl
add
or
mov
adc
clc
test
inc
add
jnp
int
cmp
inc
iret
cmpsl
push
pop
push
testl
inc
pop
push
cmp
pop
and
aam
mov
xchg
or
jmp
mov
shrl
stc
xchg
adc
add
fidivs
int
sub
adc
cwtl
shrb
adc
push
xchg
dec
or
out
push
dec
mov
or
pop
mov
test
ss
cli
push
pop
test
adc
ds
mov
mov
scas
mov
lds
xchg
mov
stc
push
and
std
es
adc
call
mov
ret
push
xor
repnz
push
imul
pushf
and
cmp
hlt
shll
adc
adc
push
neg
inc
movsbl
int3
mov
in
xor
stc
dec
dec
daa
in
cmp
inc
mov
mov
imul
sbb
pop
fidivs
out
cmpsb
jmp
mov
sbb
stos
daa
stos
or
adc
pop
sbb
mov
paddsb
sub
aam
add
shl
sbb
scas
dec
adc
out
into
adc
sbb
push
iret
stos
push
mov
outsl
fimull
fcomip
addr16
xchg
out
mov
xlat
mov
fmuls
dec
adc
je
or
sarl
mov
clc
xlat
fcmovne
cmc
popf
lret
popa
shll
sbb
lahf
mov
lret
and
xchg
mov
adc
jmp
pop
adc
outsl
mov
push
push
xor
cmp
popa
fstpt
out
jecxz
sbb
scas
adc
cli
out
dec
dec
mov
lods
ret
repnz
inc
std
mov
dec
bound
pusha
xor
or
push
movsb
lds
push
pop
test
pusha
push
ja
inc
leave
mov
lret
inc
mov
decl
je
mov
outsl
ljmp
adc
lea
jnp
and
mov
sub
lea
repz
jbe
out
push
fs
cs
imul
hlt
xchg
aam
call
dec
xor
lock
push
popa
mov
adcl
push
xchg
test
cmc
pop
sub
es
arpl
xor
pop
pop
repz
pop
or
aam
cli
pop
mov
xor
xor
shrb
scas
mov
mov
lock
nop
nop
ja
adc
mov
lods
jno
mov
ret
loop
lods
pop
cmp
lods
leave
inc
mov
and
stos
pop
arpl
sbb
xchg
and
sub
icebp
fwait
jecxz
push
clc
dec
call
ret
or
jle
sbb
adcb
adc
scas
dec
in
mov
pop
shl
inc
push
stc
and
or
out
lcall
in
xchg
and
and
inc
push
push
mov
jmp
or
add
fwait
xor
add
cld
dec
adc
int
sub
pop
push
insb
clc
iret
mov
jge
sahf
push
mov
adc
ficoms
push
mov
arpl
sti
lret
outsb
pop
movsl
push
push
rcll
jns
ss
shll
out
cmpsb
fsubrl
ja
ja
cs
ret
mov
insb
adc
lods
jnp
imul
aam
mov
adc
imul
ljmp
xchg
test
xorb
stc
mov
mov
jmp
inc
aam
mov
aam
pop
pop
loope
fldl
into
pushl
dec
lret
adc
mov
push
cmp
icebp
lcall
aad
int
cmpb
jno
test
and
cltd
or
addb
dec
xlat
mov
add
lods
movsl
testl
icebp
ficomps
cld
xor
jle
mov
mov
test
test
aam
push
xor
outsl
movsl
scas
aad
mov
adc
jge
shr
test
es
or
pop
xchg
bound
aaa
push
cltd
inc
mov
xor
int
repz
mov
and
lret
jl
outsb
out
aam
cmc
hlt
fcoms
add
cwtl
insl
push
das
dec
mov
adc
pop
sub
pop
add
aaa
xor
mov
dec
jbe
stos
add
dec
aas
sbb
jge
jne
push
fidivrs
test
call
test
lds
fnstcw
cmpb
sbb
and
and
out
test
nop
cwtl
or
dec
xchg
fisttps
mov
jns
adc
push
add
pop
cwtl
push
jg
or
mov
cmp
popa
aaa
clc
pop
int
aas
testb
maxps
push
sahf
shr
cmp
nop
push
jbe
adc
xor
data16
or
movsb
mov
mov
pop
or
fidivrs
cltd
pop
inc
daa
jle
in
mov
bound
cwtl
dec
sub
cld
stc
loop
subl
call
cmp
or
xlat
jne
adc
insb
mov
subl
xor
push
sbb
cmp
hlt
add
pop
repnz
jg
lock
ds
rorl
test
sbb
push
xor
or
clc
xchg
aam
ja
cmc
lea
cmp
data16
cs
mov
push
shlb
inc
xor
aad
addr16
aaa
push
dec
sbb
cmpsl
int
lods
push
sbb
aad
daa
pop
pop
cmp
nop
shlb
cmp
xor
je
mov
or
hlt
ja
cwtl
std
push
repnz
mov
pop
sub
push
neg
lahf
jne
in
xchg
jg
jge
out
arpl
pop
mov
add
hlt
scas
outsb
sbb
imul
jg
jg
ljmp
mov
pop
std
cmpsl
jnp
mov
lahf
inc
mov
insb
mov
jns
dec
sub
inc
addr16
add
mov
mov
lods
in
mov
mov
mov
addr16
les
mov
pop
jg
out
add
insb
mov
xchg
cmp
cmp
pushf
mov
pop
into
cmpsl
adc
push
mov
cmpsb
jns
in
inc
out
mov
lds
sub
rorl
cmpsl
or
inc
daa
jbe
push
sti
xor
xor
jns
mov
mov
enter
ljmp
inc
call
or
sub
jnp
inc
popa
dec
adc
pop
inc
adc
and
pop
add
pop
dec
out
psadbw
scas
cmp
loope
jge
cmp
cmp
and
nop
out
pusha
shlb
inc
mov
cltd
ljmp
sahf
dec
sub
insl
in
xor
aam
loope
loop
inc
xor
leave
pushf
cmc
pop
arpl
cmp
and
scas
sti
dec
test
rcrb
xchg
test
fs
test
inc
xor
test
or
adc
adc
cld
sti
pop
cmc
inc
movsl
pop
ja
sub
dec
xor
clc
aaa
out
sub
inc
push
aas
out
test
and
pop
inc
insb
mov
ret
ret
out
and
jae
sti
idivb
jmp
je
clc
mov
daa
mov
cltd
mov
cmp
sub
cmpsl
mov
in
mov
es
repnz
mov
iret
cmp
sbb
pusha
push
jns
jmp
push
outsb
imul
aam
inc
cli
pop
cmp
andb
cmp
call
add
push
divps
xorl
cli
push
ss
je
sub
push
or
fcomp
aaa
insb
jo
xor
mov
inc
and
into
xchg
jno,pt
xor
test
dec
nop
into
xor
mov
mov
or
push
ds
xor
out
fisubrl
bound
cwtl
or
enter
icebp
cmp
mov
sbb
pushf
mov
mov
outsb
fnstenv
xor
movsb
popf
sti
dec
scas
jecxz
repz
xchg
sbb
push
in
jnp
jne
sbb
xchg
add
pop
sub
lea
or
test
dec
sub
dec
pop
sub
in
clc
rcrb
popa
bound
mov
push
pop
xchg
push
rolb
sbb
jp
cmp
jae
imul
xchg
and
xor
mov
jae
pop
outsl
stos
add
xchg
push
fsubrl
mov
xor
add
mov
cmp
out
call
xchg
lret
rcl
je
sbb
arpl
add
aam
mov
cmp
mov
xchg
push
shr
in
add
or
push
add
cmp
aad
fstps
push
pop
sub
test
lcall
push
sbb
aas
popf
cmpsb
add
into
xchg
xchg
scas
pop
jae
ret
jno
negb
adc
or
or
pop
les
rcrb
cmpsl
xchg
scas
lcall
into
divl
cmpb
lret
jecxz
int3
fxch
jo
out
mov
in
inc
add
sub
xchg
cli
push
mov
mov
enter
xor
ja
ret
icebp
fucomip
fisubl
xchg
xlat
lahf
sbb
mov
push
int
mov
jo
loope
lods
mov
out
add
cwtl
fsubs
lahf
aaa
cmc
test
lret
imul
ja
scas
or
filds
xor
out
inc
xchg
jl
mov
cmpsl
jno
mov
mov
test
cltd
xor
cltd
sar
test
jns
aam
enter
imul
mov
loope
aam
lea
cwtl
mov
sahf
xchg
or
jae
rcrb
ja
pop
insl
push
inc
out
fcmovu
push
dec
mov
push
sbb
pushf
test
add
push
jecxz
ds
or
mov
jl
pop
sbb
out
fidivs
pop
adc
ret
shrl
push
jle
add
xchg
clc
add
push
aam
inc
mov
jge
enter
lea
add
sarb
dec
or
jecxz
iret
add
enter
jb
movsb
jle
pop
add
jns
pop
cs
dec
lock
stc
mov
test
mov
das
and
sub
inc
lahf
mov
ss
mov
dec
jecxz
jo
pop
inc
sahf
jnp
sbb
add
fs
icebp
xchg
sbb
sbb
xchg
daa
and
nop
popf
or
adc
and
lock
sahf
test
imul
push
push
stos
jmp
dec
dec
out
mov
leave
cmp
adc
leave
sub
mov
aaa
bswap
jb
cmp
dec
or
xor
adc
cli
inc
les
add
ja
popa
push
loope
mov
xlat
dec
xchg
pop
jae
flds
dec
sbb
jp
movsl
mov
adc
dec
jge
mov
inc
jge
sub
dec
rcrl
or
sub
sub
pop
orb
icebp
xor
test
jmp
xor
int3
mov
cmpsb
sti
inc
mov
test
xor
xlat
imul
popa
or
push
mov
fimull
dec
pop
movsl
imul
fwait
lods
xor
cmp
repz
cmc
xor
js
dec
push
jmp
push
jne
dec
mov
pop
pushf
and
cli
stos
insl
dec
pop
sub
pop
sub
inc
xlat
sahf
cld
push
adc
sub
push
je
jecxz
mov
xor
pop
fdivs
jo
push
cmp
dec
pop
les
gs
add
mov
into
jmp
aam
pop
out
adc
cmpsl
xchg
std
sub
imul
clc
les
dec
test
cli
push
cmp
lahf
adc
xor
les
das
pop
inc
outsl
xchg
add
imul
dec
jge
mov
fmull
mov
lahf
je
mov
sbb
cmp
dec
hlt
cmp
das
ds
inc
jno
rol
iret
xchg
mov
movsl
fs
add
ficoms
mov
movsl
addr16
rcr
sbb
cmpsl
or
in
xchg
and
int
leave
repz
rcrb
xchg
in
orb
iret
add
push
popa
dec
inc
sti
push
fwait
test
jmp
test
fmul
jae
data16
cld
popa
mov
xor
mov
and
lcall
mov
movsb
dec
leave
sti
popa
push
jne
dec
pushf
pop
xor
sbb
mov
cmp
mov
sbb
xor
pop
push
lcall
addr16
cmp
mov
dec
insb
adcl
and
sbb
cmpsl
pop
xorl
and
jle
jbe
xchg
sti
rcrb
dec
jle
out
push
iret
stc
adc
inc
loop
mov
movsb
add
push
mov
fldcw
inc
pop
push
mov
sbb
push
repz
dec
int3
popa
in
or
cmp
ja
dec
cli
out
mov
and
add
mov
rcrb
je
cwtl
sarl
repnz
jecxz
into
shr
idivl
push
sub
cmp
pop
imul
push
adc
aam
sti
inc
pop
cmc
mov
mov
scas
cmp
push
pusha
inc
les
pop
pop
ja
lods
xchg
cltd
aad
push
jo
lret
scas
xchg
enter
imull
test
sahf
sbb
push
aaa
cmp
les
push
jno
mov
enter
xor
xchg
std
and
mov
add
int3
mov
xchg
mov
imul
rcr
push
mov
ficoms
pop
mov
ret
and
mov
jecxz
pop
push
mov
nop
pop
shll
xchg
mov
jae
in
lret
sbb
hlt
mov
mov
inc
adc
repnz
mov
xor
addb
int
in
add
shrl
in
inc
mov
jns
xchg
mov
addr16
loop
xchg
js
mov
cld
fadds
and
mov
xor
mov
outsb
iret
pop
fbld
lock
jae
icebp
push
pop
aam
lahf
cmp
or
call
outsb
mov
add
pop
jmp
cwtl
jae
xor
cmp
movsl
test
and
lock
add
xchg
sbb
test
jbe
xor
fstp
add
add
fdivrl
out
adc
xor
lret
call
cld
cmp
loop
int3
xor
ret
leave
adc
xchg
shlb
mov
aas
loop
aad
fs
jecxz
sbb
xor
cmp
push
xor
mov
cwtl
mov
dec
or
repz
mov
and
cmp
das
int3
andl
mov
xor
adc
push
mov
adc
adc
fldl2t
add
jbe
mov
pop
pop
xchg
xchg
lea
pushf
dec
add
out
fsubs
add
into
jno
xor
or
les
xor
call
mov
inc
cmp
andb
push
popf
mov
fistpl
and
orb
jge
ja
push
lret
loop
push
fcom
popf
out
out
jb
pop
fimuls
lods
inc
sub
daa
inc
mov
in
repnz
sbb
add
xchg
or
push
movb
ret
sub
nop
rclb
add
mov
in
dec
mov
push
jbe
dec
dec
and
xchg
or
pop
sbb
jle
push
imul
jne
and
lcall
dec
jg
ljmp
orb
test
movsb
cmc
in
and
sbb
xchg
push
mov
jp
jecxz
pop
or
cltd
adc
or
sbbb
cld
insl
lods
sbb
xor
jecxz
fwait
les
push
mov
je
and
mov
stos
jge
stc
mov
pmaddwd
jle
mov
sub
dec
leave
pop
mov
inc
mov
pop
fldenv
cmp
adc
test
test
dec
movsw
push
pop
shl
sbb
pop
loopne
repz
jae
push
adc
jle
cmp
mov
in
testb
pop
add
fildl
mov
xlat
lahf
push
push
loop
adc
push
mov
js
sbb
clc
jp
adc
fiadds
aas
mov
cltd
in
inc
outsb
lret
mov
std
mov
test
clc
mov
in
cmp
mov
mov
mov
cltd
clc
stos
or
pop
rcll
movsb
pop
sbbl
fcomp
int3
scas
insb
sbb
in
subb
in
cmp
jb
xlat
xchg
ficoml
pop
clc
pop
xor
leave
inc
pop
and
clc
out
outsl
or
addb
jl
xor
push
imul
jg
pop
sub
or
call
ret
dec
xor
mov
sub
popa
aaa
sbbb
mov
mov
cmp
pusha
mov
mov
jmp
mov
and
pop
sbb
jl
sbb
or
pop
je
psubd
fsubl
and
cmpsl
jg
or
scas
xchg
fs
lcall
dec
inc
aaa
jo
or
mov
insb
repz
xorb
aam
add
mov
out
fmuls
outsl
out
cmpsl
sub
dec
xor
pop
adc
push
jne
cltd
sar
test
movsl
sub
and
add
out
or
mov
out
mov
sbb
and
mov
jnp
in
aaa
or
mov
mov
je
aam
fldcw
or
fs
jge
jge
pop
cmp
ljmp
es
sahf
cmp
cmp
mov
jne
test
repz
dec
mov
adc
xchg
add
jno
xor
xlat
jecxz
into
mov
sbb
push
add
xor
ret
or
mov
jp
out
in
int
lods
loope
mov
adc
stc
cld
add
xor
inc
inc
fwait
roll
roll
cmp
jnp
sbb
inc
and
outsb
pop
sub
mov
xchg
xor
sub
rol
jecxz
pop
cld
dec
pop
aas
outsb
adc
push
imul
add
cmp
sub
mov
add
jnp
or
icebp
mov
dec
lret
push
lahf
xchg
cs
mov
andl
mov
sub
mov
pop
incl
ja
clc
stos
mov
das
dec
ret
and
add
sti
jbe
push
daa
cmp
xchg
dec
dec
pushf
mulps
lods
mov
pop
adc
in
sbb
stos
mov
pop
fs
loop
mov
out
inc
or
fs
mov
push
cmp
push
and
not
enter
stos
rcll
out
clc
add
push
mov
rcrl
mov
inc
clc
mov
mov
add
xor
inc
iret
mov
and
aam
xchg
enter
mov
clc
push
inc
les
lret
data16
xor
mov
outsl
aaa
ret
sub
int
ss
stc
and
jo
xchg
int
mov
adc
or
push
sbb
adc
dec
ret
lods
rclb
xchg
and
sbb
pusha
sahf
or
ja
xor
andb
mov
add
loope
popa
mov
or
cmpsl
cmp
ds
inc
xor
mov
and
and
repnz
cmp
push
insb
in
fisttpll
fnstcw
fs
xchg
loop
mov
lds
and
fstps
hlt
jmp
int
addl
push
jo
sub
pop
sub
add
xorl
mov
and
xchg
push
or
cmp
pop
sbb
xlat
pop
je
test
mov
popf
loope
popa
stc
insl
je
ljmp
and
addl
mov
out
ljmp
stos
pop
es
jo
push
inc
fildll
xchg
popl
and
push
push
mov
dec
jecxz
filds
fcomps
jge
in
inc
xchg
xor
sbb
mov
jmp
popf
lret
icebp
adc
mov
adc
lods
pop
aad
stos
xchg
cwtl
lds
arpl
add
mov
loopne
stc
imulb
push
pop
ret
lds
cvttps2pi
push
mov
mov
push
test
lea
iret
popf
insb
stos
adc
mov
enter
aad
push
rorb
leave
mov
mov
mov
xchg
movsl
push
scas
lods
mov
and
jmp
cmpsl
in
je
repz
dec
filds
iret
popa
pop
jno
and
jns
lds
sbb
push
fcompl
test
mov
lea
pop
out
stc
pop
stc
dec
test
aas
sub
inc
cwtl
aam
dec
xchg
fisubl
fwait
sub
jnp
jl
rcll
mov
aad
mov
cmpsb
mov
add
aad
dec
imull
fildll
fldt
nop
jo
inc
pop
add
mov
movsb
lcall
and
xchg
xchg
push
lahf
jbe
pop
movl
or
dec
imull
and
push
arpl
dec
in
roll
cmp
mov
mov
or
aam
sbb
jne
xchg
sbb
push
call
fwait
cli
arpl
xchg
mov
insb
mov
leave
inc
hlt
outsb
jns
cmp
cs
or
insb
icebp
or
dec
sahf
mov
sti
scas
ret
adc
stos
call
mov
loope
icebp
xor
jno
cli
inc
clc
push
fwait
sbb
fbstp
ficoms
mov
sahf
add
loop
adc
xor
clc
and
insl
mov
dec
push
divb
fcoml
xlat
adc
and
jp
xchg
add
mov
cmpsb
fstps
test
inc
cmpsb
adc
js
mov
mov
add
mov
ret
lret
xor
in
fwait
adc
int
push
mov
faddl
lods
test
ret
sbb
and
mov
and
cli
xchg
sub
mov
call
movsl
sbb
daa
clc
lea
inc
rcrb
mov
mov
call
xlat
xor
push
pop
inc
inc
cmp
jle
add
xor
cs
sub
jnp
ljmp
cmp
sahf
sub
loopne
ds
lret
mov
lods
pop
aam
repz
dec
pop
pop
int3
xor
lods
inc
fmuls
pushf
arpl
repz
cmp
test
aam
jae
imul
or
in
stos
or
daa
mov
dec
cmp
pop
inc
cltd
dec
add
add
jae
out
daa
sub
pusha
jno
cmpb
push
test
pop
shll
dec
fisubs
inc
push
mov
in
pop
pop
loope
stc
pop
lret
dec
pop
test
cld
mov
fistl
push
mov
bound
and
and
idivb
cmp
xchg
daa
jae
cltd
mov
aad
sbb
pop
stos
xor
in
xor
pop
lret
cs
and
in
or
mov
aad
pop
fists
hlt
cmp
enter
dec
and
fs
int3
inc
lods
pusha
mov
jne
outsb
lahf
aas
or
fnsave
adc
test
ret
js
xchg
mov
mov
inc
lds
push
paddw
in
repz
dec
xchg
push
test
into
add
push
cmp
in
cmpl
out
cmc
movb
aam
shrl
xchg
jmp
outsl
jne
cli
neg
jb
xchg
movsb
xchg
rorb
jne
lret
out
pop
cwtl
dec
mov
xor
test
push
sub
mov
scas
or
push
jb
or
add
popa
aas
inc
inc
and
dec
stos
inc
push
mov
lea
fwait
movsb
arpl
pop
roll
shlb
dec
in
cmp
es
xchg
jno
push
mov
xor
ljmp
sub
stc
pop
mov
out
mov
jle
or
mov
pop
cmp
xor
xor
in
aam
and
xchg
cld
jle
sub
sub
adc
out
arpl
and
aam
mov
cmp
mov
xchg
jns
jmp
mov
test
hlt
movsl
movsb
data16
call
inc
sub
mov
psubq
rcrb
loop
test
add
fsubrl
sub
jmp
sbb
mov
and
push
dec
dec
popf
mov
and
cs
mov
es
push
or
loop
pop
into
ljmp
call
in
movsb
mov
xlat
inc
mov
cs
inc
repz
es
mov
stc
cmp
push
or
add
xchg
xchg
sub
add
xchg
or
jmp
insb
or
add
adc
mov
aad
inc
pop
mov
incl
or
ss
mov
mov
jb
adc
jecxz
das
or
sbb
outsl
xchg
out
push
int
or
js
mov
inc
cs
xor
icebp
movsb
loope
imulb
mov
lret
add
mov
cmp
out
or
mov
stos
cs
mov
add
es
xchg
pop
cld
adc
sub
into
lea
xchg
fwait
pop
bound
lcall
fcoms
jno
js
stos
adc
push
xor
push
push
push
js,pn
push
aam
xchg
or
cmp
insb
lret
in
xor
fidivrs
cmp
pushl
sbb
iret
dec
sub
adc
pop
xchg
adc
out
cmp
in
stc
jb
xchg
call
popf
cmp
jae
push
xor
mov
xchg
shlb
jno
out
xor
mov
js
ficomps
cli
std
push
rcrb
add
jb
pop
loopne
stos
xor
rorb
xchg
roll
test
out
daa
sub
adc
and
ds
int3
xchg
in
ja
ret
packsswb
sti
xchg
insl
lahf
sarl
cwtl
pop
ficoms
sarb
lods
xchg
mul
sbb
popa
data16
xlat
or
shl
iret
push
jno
add
jp
xchg
pop
test
lods
test
divb
mov
jbe
jecxz
mov
mov
imul
mov
addr16
ret
dec
mov
adc
fsubrl
sub
push
adc
xchg
jno
fsubrs
jae
test
lock
enter
shlb
push
mov
adc
xor
lock
dec
sub
lea
jbe
jne
jnp
wrmsr
mov
test
inc
add
imul
cmp
lock
push
xchg
push
out
shlb
nop
inc
rorl
xor
inc
sbb
pop
push
out
mov
fcompl
icebp
mov
dec
cmp
xor
and
roll
enter
xchg
xorl
roll
cltd
adc
loopne
imul
fsubrl
xchg
sub
lahf
sub
jg
mov
and
arpl
adc
movsl
push
fcoms
xlat
add
add
mov
fsubl
shll
pop
enter
or
movsb
jecxz
sub
repz
dec
scas
cmp
fwait
pop
adc
dec
push
dec
gs
hlt
test
aaa
outsb
or
cmpsb
jge
mov
pushl
fnstenv
mov
std
mov
jg
pop
mov
pop
ret
jae
scas
push
push
adc
jge
bound
add
xor
test
ret
frstor
inc
sub
jecxz
out
vaddss
out
js
or
dec
nop
lods
add
jl
xchg
and
cli
sbb
jmp
adc
sbb
add
icebp
mov
jl
loopne
xor
fisttps
and
or
add
xchg
fsts
jle
mov
cmc
adc
out
xor
adc
inc
xchg
ja
sarl
cmp
call
rorl
cs
das
insb
stc
sub
std
jge
mov
and
push
push
pop
add
xor
add
aad
loope
cmp
outsl
jmp
loope
loopne
pop
test
xlat
and
dec
cltd
loope
inc
jo
and
fdivs
lea
lea
sub
je
inc
stos
insb
cmp
add
call
jns
add
push
ds
push
fisttpll
js
movsb
xor
scas
sub
cmp
jo
lahf
sub
pop
lods
insl
aas
mov
and
push
mov
shrb
push
out
cmc
inc
jmp
add
mov
cltd
ljmp
xchg
daa
pusha
pop
ljmp
jp
push
cmp
cmpsl
push
lret
lds
push
xor
lock
mov
loopne
or
pop
push
sub
in
stos
pop
mov
shrb
dec
shr
clc
mov
repnz
cmp
jnp
insl
scas
popf
push
push
jae
ret
repz
arpl
push
push
dec
push
xor
stos
pop
ss
icebp
mov
sub
test
aad
cmp
mov
scas
fwait
dec
lods
and
int
pop
scas
dec
dec
adc
jae
sbb
mov
shlb
or
cld
addr16
xchg
jmp
mov
shrl
cs
mov
jmp
push
jae
dec
into
lods
clc
fmull
cld
test
mov
popf
push
mov
lret
mov
mov
je
xchg
je
ret
arpl
fstpl
cli
jl
mov
es
push
cli
lahf
dec
cmp
lahf
fstpt
dec
imul
fisubrs
dec
repz
ljmp
ror
mov
mov
jp
xchg
push
mov
in
ljmp
fs
add
cmc
in
pushf
inc
mov
push
sbb
xlat
jne
push
mov
shrl
repnz
test
or
mov
shll
adc
pop
or
pop
pop
sub
inc
pop
xor
in
cmp
pop
int3
scas
dec
insb
xor
into
adc
into
rcrb
lds
mov
sbb
sbb
std
out
sbb
in
icebp
or
dec
leave
push
cwtl
fdivp
inc
xchg
mov
push
ret
and
inc
sub
dec
flds
jl
out
shll
fcoml
in
adc
push
dec
dec
pop
insl
aam
cmpsl
jge
sahf
divb
mov
pop
and
ja
pop
jl
xchg
adc
mov
test
mov
out
enter
cld
jl
adc
cmpsl
lods
sbb
sub
xchg
xor
xor
pop
loop
inc
out
pop
xchg
xorb
push
fs
popa
repz
xchg
fwait
add
adc
aad
xlat
enter
xor
fiadds
mov
aas
ss
cmpsl
mov
fs
push
cmp
dec
sub
mov
leave
pop
push
xchg
pop
sub
mov
mov
push
lock
mov
aaa
or
cltd
bsr
pusha
push
adc
cmp
ja
lcall
dec
fwait
pop
aam
dec
je
sbb
out
mov
pop
cmp
adc
insl
mov
lock
in
mov
push
jge
insl
addb
lret
sub
mov
das
mov
xchg
ret
les
jns
fisttps
outsl
mov
fcmovnb
ljmp
inc
dec
mov
iret
and
insb
shrl
jo
and
jae
sbb
test
loopne
sub
fwait
shrl
jns
in
mov
adc
xchg
push
call
push
aaa
scas
mov
xchg
push
jbe
jg
xchg
mov
das
mov
xor
mov
cltd
mov
adc
or
inc
push
mov
loop
das
aam
mov
and
loopne
lahf
jo
xchg
packsswb
lret
lret
in
push
movsl
cwtl
outsl
cmp
enter
mov
js
insl
lea
xchg
test
in
xchg
rorb
jmp
fdecstp
lret
js
mov
ret
or
inc
cmp
xlat
lock
mov
scas
jle
mov
add
and
jge
gs
adc
call
jo
mov
mov
push
xchg
test
imul
adc
icebp
inc
mov
mov
pusha
pop
or
ds
adc
scas
mov
call
lods
mov
pop
pop
lret
sbb
sub
pop
push
mov
je
loope
jo
fisttpll
out
daa
lock
int
inc
pop
sbb
xor
xlat
call
pop
push
adc
outsb
xor
push
push
and
inc
rcl
movsb
fwait
add
cmp
movsl
jmp
sahf
xchg
mov
push
lret
jmp
addr16
push
xchg
inc
pop
in
loopne
cmp
fwait
icebp
out
add
pop
lds
sbb
test
sbb
pop
in
ss
push
enter
leave
rolb
popa
pop
int3
loop
xchg
lahf
mov
lods
test
movsb
std
shlb
push
int
aaa
mov
in
and
jnp
xchg
aas
dec
repz
out
mov
dec
push
fnop
in
icebp
aas
sub
pusha
shll
movsl
fisubrl
dec
push
xor
arpl
xchg
dec
pop
mov
call
insb
xchg
dec
dec
in
aad
dec
jecxz
movsl
subb
out
inc
lret
jne
or
cltd
mov
fistl
mov
xchg
xor
out
and
dec
incl
push
pop
pushf
cmovns
xor
push
xchg
ja
push
cmp
fcoml
mov
push
lock
loop
dec
lea
idivl
push
das
gs
cltd
lahf
xor
dec
popf
stos
aad
dec
add
notl
and
outsb
jnp
mov
pop
test
lods
xchg
les
fldl
jns
out
ds
sub
je
pop
mov
cmp
mov
scas
aaa
loopne
fidivl
adc
inc
pop
or
inc
in
xchg
and
mov
add
sub
repz
mov
scas
outsl
bound
push
stc
cmp
jecxz
lret
xchg
cmpsb
movsl
and
mov
pop
mov
and
push
imulb
stc
add
lds
sub
lock
dec
clc
xchg
sub
sbb
mov
loope
and
dec
out
push
mov
dec
and
in
jl
cmpsb
inc
add
push
int3
shr
aaa
iret
mov
aaa
dec
out
ret
cwtl
mov
sbb
dec
loope
mov
and
lcall
push
fmuls
mov
pop
or
iret
inc
pop
in
dec
aas
pop
loopne
mov
push
xor
pop
xchg
mov
mov
aaa
cld
lock
sub
sub
sbb
adc
cli
mov
push
xor
stos
xor
xor
xchg
notl
jp
sahf
rcll
cmp
test
stos
lret
movsb
inc
nop
imul
loope
lea
add
icebp
pop
fistpl
sar
sub
jae
lock
jb
jecxz
pop
push
adc
mov
iret
mov
test
adc
jae
and
mov
bound
sbb
rorw
mov
in
mov
and
cmp
add
sbb
jp
cwtl
out
adc
fs
pop
mov
push
rcrb
mov
push
ficomps
je
cmp
cltd
movsl
inc
pop
mov
inc
adc
rorb
pop
sub
mov
mov
decl
lret
mov
lods
inc
lahf
jne
dec
shll
stos
stos
pusha
mov
or
jge
imul
loop
popa
sbb
loopne
cmp
jae
push
mov
pop
test
dec
mov
test
repnz
mov
sub
movsl
jae
lret
out
jne
pop
sbbl
jae
lods
dec
jmp
imul
icebp
stc
ja
and
inc
nop
mov
xchg
imul
adc
jecxz
lret
stc
movsl
xchg
out
fadds
adc
mov
loope
les
mov
and
jg
test
cltd
lahf
xchg
dec
jno
stos
clc
test
cmp
addr16
jl
repnz
cwtl
insb
mov
int3
cli
jecxz
clc
iret
ljmp
pop
pop
fstps
sub
inc
jo
fsubrs
jne
ret
addl
xchg
mov
jbe
mov
cmpsb
xor
cmp
xor
add
out
sbb
addr16
pop
lea
and
xor
sahf
sbb
xchg
and
push
pop
popf
cmpsl
pop
mov
bswap
cmp
or
lock
and
pop
mov
push
and
xor
or
lods
sti
xchg
insl
scas
inc
push
mov
cmc
pop
out
jmp
outsb
inc
dec
jg
arpl
in
lcall
mov
scas
or
pop
mov
outsl
loop
xchg
fsubrs
jg
loop
cltd
decb
inc
test
daa
leave
adcl
inc
cmp
jl
push
je
std
arpl
loop
mov
mov
xchg
lods
sti
sbb
inc
lahf
mov
movsl
mov
call
jle
and
or
out
int3
push
xlat
ljmp
js
add
sub
jnp
jne
xlat
das
les
pop
xchg
sti
in
xor
stc
movsl
sbbb
lret
jb
in
lods
pop
test
ss
mov
pop
pop
push
lock
inc
push
inc
adcl
rolb
stos
push
push
aam
lret
ljmp
aas
popf
popf
push
shl
jno
test
iret
imul
arpl
out
inc
mov
add
inc
out
pop
push
lret
stos
or
mov
enter
xchg
insl
sbb
mov
dec
roll
jbe
jecxz
sub
mov
add
mov
jae
aaa
icebp
xor
dec
sub
movsb
dec
xchg
out
test
mov
pop
test
aad
jo
hlt
jmp
push
jb
jg
mov
sahf
repz
arpl
add
jne
jno
adc
nop
mov
insl
pop
dec
cld
out
cmp
sti
lods
and
inc
cmp
lock
mov
xchg
imul
jecxz
pusha
pop
scas
adc
out
loope
popa
lahf
adc
out
ja
dec
add
xlat
dec
xchg
dec
mov
xorb
jl
add
clc
dec
aad
xchg
sbb
push
dec
and
push
mov
fsub
jl
ss
or
js
lods
std
inc
pop
pop
in
pop
pusha
out
stos
repnz
xor
pop
cltd
les
push
xchg
mov
lods
adc
sti
arpl
rcr
and
ret
add
test
inc
es
outsl
les
push
test
fwait
xlat
push
shll
mov
stos
cmp
xor
lds
jo
add
insb
add
outsl
out
fldcw
adc
cs
data16
cwtl
aad
jo
xor
dec
or
add
add
inc
mov
rorb
mov
imul
xchg
int
pushf
jge
add
mov
loope
icebp
jle
repz
cmp
mov
xchg
js
dec
lret
fwait
jns
pop
adc
inc
xchg
mov
add
cltd
repz
lods
mov
popa
or
xor
jne
adc
js
jp
scas
mov
movsl
and
ficomps
xchg
mov
mov
pop
imull
add
iret
scas
lods
test
xchg
je
and
pop
cmpl
int
js
scas
push
fs
add
or
mov
stos
stos
pop
push
imul
cs
push
lock
testb
pop
inc
mov
clc
loop
cli
jle
out
xor
mov
push
jecxz
push
push
xlat
repz
test
outsb
mov
movsl
pop
push
in
iret
sub
lock
and
fcompl
fidivrl
mov
and
push
or
popf
arpl
xchg
pop
xchg
dec
dec
cmpsl
cli
in
cs
fwait
xchg
mov
add
push
stc
es
or
addb
out
data16
jmp
mov
in
rcrb
mov
cmp
lock
jnp
imul
scas
js
or
sbb
add
and
inc
sahf
in
or
lret
xor
stc
and
lret
int
inc
mov
fmul
xor
dec
mov
dec
jmp
popf
cmp
xor
sub
dec
je
inc
gs
xlat
lret
or
xchg
shr
frstor
sub
and
adc
divl
adc
cmp
popf
push
mov
xor
mov
xorl
and
arpl
fisttps
mov
and
jp
mov
xchg
adc
insl
jnp
cmp
lret
and
cmp
mov
and
sub
lahf
cli
imul
incb
arpl
pop
inc
int
jge
out
out
rolb
aaa
mov
sbb
mov
insl
push
mov
add
outsl
mov
dec
mov
movsb
pop
fwait
psraw
and
fwait
aaa
lret
sti
call
sub
inc
push
ret
sub
cmp
xor
fidivl
ja
jnp
fnop
mov
sub
jmp
jbe
and
dec
arpl
or
mov
loope
inc
test
outsl
cmp
enter
xchg
lods
inc
xor
and
cmpsl
mov
mov
into
inc
jle
es
sub
test
loope
inc
stos
fnstenv
xor
push
in
js
sbb
cmp
mov
xchg
dec
push
mov
cli
xor
inc
out
test
push
insb
imul
push
and
lahf
xor
and
je
push
stos
out
and
push
in
xchg
xchg
xchg
inc
leave
push
and
and
push
and
ret
jb
mov
sub
popf
xor
lcall
mov
addb
sbb
cs
out
cltd
clc
pop
mov
adc
js
gs
psubb
sbb
sbb
and
shrb
jge
jp
push
sbb
bnd
add
push
repz
cltd
dec
outsb
into
test
sub
leave
adc
sub
test
jecxz
cmp
push
repnz
jg
ret
leave
clc
sbb
adc
xor
pusha
mov
mov
ja
push
scas
lock
aam
les
jecxz
lock
in
push
roll
adc
repz
fsubl
pusha
jbe
loopne
fldenv
or
mov
test
outsb
daa
mov
xchg
out
pop
or
sbb
stc
pop
push
xor
cmp
out
movsl
cmp
dec
add
ror
sbb
xor
or
enter
dec
ss
jmp
adc
and
ret
jl
dec
cmp
and
or
dec
and
aad
mov
call
outsb
popa
xor
pop
icebp
jecxz
and
and
push
mov
bound
imul
push
pop
sub
es
loope
xchg
sub
ss
popa
push
jns
arpl
mov
and
popf
repz
je
inc
push
adc
pop
enter
push
sub
scas
outsb
push
insb
popa
xchg
arpl
call
xchg
std
das
push
int
repz
add
mov
inc
ljmp
in
xchg
cmc
iret
in
stos
and
lret
std
push
adc
add
aad
inc
mov
xchg
pop
ret
sbb
arpl
pop
mov
fisttpll
pop
jo
icebp
cli
lret
sbb
aad
and
fldenv
loop
fdivrs
or
jnp
divb
test
aaa
sbb
mov
push
sub
push
inc
pop
stc
gs
lcall
imul
mov
outsl
mov
insl
cmc
push
dec
dec
inc
es
scas
cltd
std
inc
divb
inc
jns
dec
cmp
or
icebp
inc
jb
pop
lret
in
inc
cltd
sub
in
rcrb
jp
pushf
xor
iret
mov
out
arpl
sbb
dec
mov
sti
push
cmp
aaa
leave
aaa
bound
xchg
jnp
aad
clc
and
jno
dec
push
das
xor
push
stos
adc
mov
and
xchg
fmull
loopne
mov
jecxz
cmpsl
mov
xchg
fwait
addr16
push
je
jae
mov
sahf
push
adc
sti
std
jmp
ss
mov
cmp
inc
lret
mov
xor
sub
jmp
mov
daa
sub
fildl
xor
mov
int3
lcall
push
sti
xorl
ljmp
and
in
adc
jle
aad
out
jmp
lods
int
inc
stos
jbe
hlt
cltd
dec
xchg
mov
int3
or
rcrb
inc
push
jmp
mov
aas
mov
jmp
loop
lret
lods
jo
add
repnz
dec
int3
and
inc
xchg
xor
mov
adc
jecxz
pop
mov
push
sbb
pop
xchg
sub
or
jg
test
pop
inc
or
lods
push
xchg
repnz
loopne
fnstsw
mov
mov
mov
cmc
imul
pop
push
in
push
xchg
sbb
push
jle
mov
sti
mov
jg
push
xor
sbb
mov
idivb
add
mov
jg
sbb
mov
aas
imulb
mov
cld
adc
loope
faddl
outsl
push
sti
add
cmp
stos
cmpsl
sbb
out
push
aaa
or
fistpl
cmp
jmp
popf
cwtl
test
jo
xchg
out
test
lods
lock
js
sub
pop
jne
xchg
push
xor
in
iret
mov
push
out
or
mov
cmpb
mov
es
push
dec
cmp
add
xchg
bound
push
repnz
xchg
or
das
ja
outsb
pop
adc
xor
and
xchg
jmp
mov
sub
js
out
aaa
xor
int3
sti
lcall
dec
jp
push
push
push
enter
adc
cmpl
ret
push
fucomi
or
jnp
insl
outsl
inc
add
fadd
andb
arpl
ljmp
imul
cld
push
cli
inc
mov
scas
cld
or
mov
divl
outsb
push
or
jp
mov
jmp
adc
adc
adc
icebp
loope
fldt
ja
fcoml
or
or
push
xor
push
comiss
insb
push
xchg
push
mov
add
adc
rclb
dec
arpl
jge
jp
mov
in
cli
sub
clc
jne
lahf
mov
push
dec
insl
filds
insb
jp
fs
pop
push
sti
aad
mov
inc
add
pushf
push
in
outsl
ret
push
insb
mov
mov
sub
adc
or
decl
test
or
fstenv
pop
rcrb
js
pop
jbe
inc
mov
fdivs
push
test
mov
mov
pusha
inc
mov
push
es
jns
imul
jp
xchg
sub
stc
mov
and
loope
xchg
imul
in
lds
ret
stos
les
test
adc
and
inc
push
hlt
lock
repz
dec
jae
lock
jge
inc
sbb
fcmovnu
mov
jo
mov
ds
jg
test
mov
xchg
sub
lret
push
cs
jp
or
cmp
push
cli
stc
lcall
and
mov
push
push
enter
es
fnstenv
mov
mov
fsubrp
cvtdq2ps
sbb
jge
out
sub
add
cmp
adc
pop
add
shrb
les
mov
addr16
sbb
ret
loop
in
jp
dec
jno
jecxz
push
test
stos
push
loope
or
xchg
lret
sbb
loopne
nop
mov
cs
mov
outsb
lret
repnz
push
call
xchg
push
in
sbb
push
xor
xor
adc
pop
andl
jl
push
stc
in
lods
lret
cmpl
jbe
push
das
jge
xor
add
pop
rcl
iret
mov
andb
cmc
push
sub
sbb
out
mov
leave
cltd
pop
jmp
cltd
add
pop
test
ds
jno
dec
pop
inc
mov
mov
std
dec
pop
cmp
test
sub
add
getsec
mov
lods
pop
sbb
pop
ss
xor
test
ret
or
ss
outsb
bound
fcoms
or
loopne
jl
div
mov
push
cmp
call
rcr
push
inc
rolb
in
lcall
dec
nop
sarb
gs
shr
popf
fld
xor
push
cmp
and
lock
mov
mov
in
iret
mov
mov
add
xchg
mov
out
mov
pop
inc
push
adc
clc
loop
pop
dec
mov
add
sub
fisttps
adc
inc
stc
pusha
out
out
inc
dec
repnz
adc
xor
xchg
fiadds
and
xchg
jae
popf
push
imul
repnz
jle
in
inc
stos
jge
cld
mov
rorb
xchg
negb
pop
lahf
outsl
lods
xor
adc
pop
test
in
jle
andb
ljmp
push
js
mov
aaa
andl
adc
jno
out
inc
addr16
cltd
add
es
neg
je
jecxz
pop
jge
fs
and
or
sub
cs
pusha
scas
add
stos
mov
aad
mov
dec
xchg
stos
aad
push
adcb
arpl
int
outsb
dec
jns
pop
push
arpl
jo
mov
test
or
mov
mov
fwait
and
int3
jecxz
push
xchg
or
or
cmp
popa
enter
out
adc
adc
das
andl
xor
inc
lret
bound
jne
mov
sbb
nop
xchg
sbb
push
jecxz
mov
mov
lods
mov
lahf
loope
ret
sbb
fwait
jns
insl
adc
sub
lock
lcall
test
cmp
mov
fisubrl
repz
or
sar
bound
lock
mov
mov
xchg
ljmp
dec
js
jl
mov
faddl
std
lods
cmc
push
jge
or
mov
mov
jmp
push
push
push
xchg
rorb
pop
adc
inc
lea
pop
add
mov
movsb
inc
cmp
mov
fsub
adc
sbb
mov
cmp
in
add
pop
nop
out
in
jmp
jno
pop
lret
pop
movsl
push
cmpsb
inc
popf
add
dec
das
sbb
outsl
loope
das
fdivr
sub
ret
cs
or
and
cmp
push
jl
or
and
and
push
pusha
push
mov
mov
aad
ljmp
xchg
pop
add
xlat
and
stos
ja
adc
ljmp
and
push
faddp
jb
jae
shlb
incl
xchg
jbe
adc
ret
inc
aam
adc
ret
mov
sahf
lret
xorb
mov
sbb
mov
jle
push
push
cmpb
mov
outsb
and
mov
movsl
cltd
lds
push
mov
imul
jp
cmp
pushf
ret
test
pushf
movsb
add
adc
mov
xchg
dec
mov
jecxz
adc
mov
dec
aas
push
movsb
xor
pop
and
or
pusha
lret
push
pop
lahf
fists
scas
aaa
xchg
sbb
mov
mov
mov
cwtl
pop
je
xchg
pop
jns
mov
sub
clc
in
andb
mov
cmp
dec
xchg
xchg
push
mov
jmp
jl
mov
sbb
ror
mov
daa
in
sub
pop
push
in
mov
sarl
pusha
clc
ljmp
xchg
enter
pop
rclb
jne
leave
jb
and
clc
pop
into
shr
iret
adc
insb
and
aam
fisttpll
jno
xor
mov
pop
and
stos
test
and
xchg
std
icebp
push
mov
sub
mov
mov
fldenv
mov
and
enter
pop
adc
jg
loop
out
mov
inc
adc
test
fistpll
sbb
jmp
sbbb
adc
adc
pop
or
jbe
sar
int3
and
and
add
pop
out
repnz
sbb
lcall
js
flds
push
mov
xlat
mov
or
jle
loope
sarb
dec
cli
xor
fnstsw
xlat
scas
call
mov
xor
sub
enter
scas
stos
xchg
sub
or
and
adc
fwait
mov
stc
outsl
inc
stos
lret
inc
pop
enter
jmp
dec
xrelease
scas
lods
fwait
shrl
cltd
xchg
test
jbe,pt
outsl
jmp
or
imul
mov
lock
leave
jge
loop
push
jle
xchg
dec
aas
push
lahf
cmp
pop
or
mov
jnp
mov
sbb
fidivs
push
jl
popa
and
mov
addr16
popf
enter
sub
xchg
in
aas
jbe
ljmp
mov
ljmp
xchg
negb
sbb
out
out
dec
jne
pop
popf
idiv
mov
cmc
sahf
dec
or
ss
sbb
out
sub
iret
div
push
dec
push
dec
xchg
leave
popf
cmp
push
xor
and
cmp
cmp
test
repnz
cmp
mov
xor
movsb
aad
cmp
xchg
daa
cwtl
pop
push
jecxz
or
lahf
push
ljmp
adc
loop
xchg
sahf
test
push
mov
leave
mov
mov
jge
cmpsl
xchg
clc
mov
adc
dec
cmp
ficoms
int3
fdivrs
fldcw
add
lods
or
into
mov
cmpsb
shrb
push
out
xor
ljmp
inc
mov
insl
inc
mov
aam
jl
sub
popa
clc
out
movsl
lfs
fwait
dec
xchg
out
xchg
mov
dec
out
call
pop
jbe
inc
cmp
je
rolb
mov
mov
loopne
test
std
lret
stos
xlat
sbb
jg
mov
imul
leave
mov
outsb
mov
dec
adc
inc
rcll
jl
addr16
adcl
fstpl
add
mov
popa
das
andl
and
sub
jb
ret
lahf
aas
and
mull
mov
mov
dec
xor
test
leave
int
int
xchg
push
push
nop
and
dec
xchg
cs
adc
xlat
or
lahf
aaa
imul
jp
cmpsl
pop
push
ds
mov
push
popl
adc
test
int3
addr16
jo
movl
ds
lahf
mov
mov
aam
mov
popf
jae
jl
dec
push
sbb
outsl
xchg
testl
shlb
scas
lods
fsub
mov
dec
and
jmp
mov
jle
in
mov
test
add
outsb
outsl
cld
push
mov
inc
jo
inc
add
and
in
imul
push
mov
fwait
adc
sub
outsl
push
sub
sub
jg
dec
test
add
dec
in
sbb
rcrb
ror
mov
lods
mov
or
and
add
ficoml
xchg
cmp
and
mov
jne
sub
jae
xchg
int3
in
dec
arpl
std
shl
je
incb
adc
dec
js
cmp
xor
and
das
movsb
adc
shll
leave
add
dec
push
mov
jne
daa
add
js
fldcw
pop
pushf
ljmp
or
ds
lock
movntq
push
xchg
adc
das
jne
sbb
push
pusha
mov
cmp
mov
pop
das
iret
nop
mov
jb
push
sbb
sbb
test
mov
das
aam
pop
imul
xchg
out
into
xor
loop
inc
pop
int3
dec
mov
cltd
stc
inc
icebp
mov
mov
pop
pop
pop
jl
sbb
les
lods
add
test
push
das
add
adc
jle
insb
sbb
ja
imul
add
pop
test
popf
or
jb
inc
iret
repz
gs
mov
in
cltd
or
jo
nop
mov
ds
roll
push
in
ljmp
xor
lret
fwait
inc
shrb
mov
and
push
xchg
push
test
aam
dec
and
inc
jns
push
bound
insl
cmp
sbb
rolb
fwait
pusha
push
push
ss
nop
mov
pop
mov
in
jbe
jno
add
test
data16
inc
jecxz
gs
lcall
or
gs
mov
inc
sti
cmpsl
pusha
jae
cmp
out
mov
shr
lods
and
loopne
inc
sbb
mov
push
fildll
jnp
jge
fcompl
pop
dec
lret
into
sub
aas
lea
xlat
in
fxch
adc
mov
lcall
pop
sub
div
scas
clc
xor
mov
iret
cld
std
jmp
push
andl
push
dec
ljmp
daa
jno
or
push
pop
pushl
push
inc
loopne
pop
xor
clc
stos
push
aas
int
jns
sub
pop
in
mov
mov
test
fsubp
shl
cmp
jl
rcrb
sbb
stc
cmp
shlb
jns
bound
cmc
repz
or
daa
and
stos
fsub
addr16
or
push
mov
shrb
cmpsl
aam
sbb
les
jge
mov
xchg
lds
and
icebp
xlat
sub
insl
xchg
mov
sbb
call
sbb
ja
sub
pop
sub
scas
mov
fcomip
xchg
stc
xor
repz
orl
mov
imul
enter
push
mov
in
pop
xchg
mov
mov
or
jnp
imul
adc
cmp
andb
add
dec
jns
or
aaa
dec
notb
addr16
push
xor
rol
xchg
xchg
jl
repz
cmc
clc
push
xchg
pop
es
test
sbbl
dec
push
inc
inc
jge
inc
jb
inc
stos
sub
test
push
cld
xor
sahf
out
xchg
or
pop
xor
call
pop
jmp
sbb
sbbl
icebp
aam
cmc
xor
insb
or
sub
mov
add
xchg
subb
cmp
adc
mov
lret
and
add
jg
insl
leave
sahf
andb
out
push
push
push
or
je
dec
and
jns
cmp
add
inc
fcomip
cmpsl
mov
and
lret
aad
lret
addl
push
fnstenv
arpl
ja
or
adc
push
cmpsl
shlb
test
je
xor
bound
jecxz
scas
xor
rcrb
adc
mov
mov
fisubrs
jae
add
inc
dec
sub
sub
dec
sbb
pusha
pop
lcall
push
pop
popa
sub
test
popa
inc
fwait
ljmp
push
mov
dec
mov
push
fbstp
out
jle
and
dec
jmp
cmpsl
xchg
adc
out
fsubrs
mov
test
mov
insl
fdivl
xchg
add
mov
lret
ljmp
and
pop
out
lods
cmp
out
mov
jo
add
mov
jno
out
push
cli
cmpsb
sbb
push
cmp
repz
xchg
sub
cmc
lret
jno
int3
mov
les
inc
ss
mov
ss
je
pop
mov
jmp
call
xor
add
mov
mov
mov
or
mov
cmp
test
ret
out
fisubrs
cwtl
ret
push
mov
outsb
ret
add
mov
xchg
or
dec
pop
movsl
xor
cmp
lahf
push
sbbb
jle
cld
push
mov
test
inc
das
je
jge
push
iret
lds
out
pop
ret
in
and
ja
ret
dec
xor
lock
pop
ja
rolb
adc
push
xchg
dec
lock
imul
sub
out
and
int3
xlat
mov
sub
test
mov
lcall
push
adc
mov
cs
ret
mov
adc
add
addl
mov
xchg
fwait
mov
pop
mov
jge
pop
rcl
sti
out
in
addr16
lgs
jne
and
xchg
mov
mov
sti
xor
rcll
iret
dec
inc
aad
scas
lock
xor
xor
jnp
push
mov
inc
push
test
outsl
jns
push
xor
mov
adc
cmp
or
xor
btc
jns
addr16
scas
cmp
sbb
inc
dec
loope
mov
and
fisubl
xchg
fisubs
aaa
sbb
mov
out
pop
push
jg
rclb
mov
lock
movsb
inc
cmp
nop
movb
pop
add
movsl
push
scas
mov
lock
int
sbb
pushf
mov
or
and
in
aam
addr16
stc
mov
in
xlat
mov
push
cs
std
push
fwait
pop
mov
add
mov
xchg
lret
icebp
push
jp
jle
call
pop
cmp
scas
jl
sub
and
xor
cwtl
sub
lods
dec
fsts
mov
mov
ret
daa
xchg
and
dec
mov
jo
mov
fisttpl
push
enter
sub
pop
mov
mov
int3
mov
jl
popa
enter
mov
mov
inc
leave
jno
dec
sub
mov
and
out
mov
inc
out
push
mov
shll
test
inc
pusha
scas
enter
push
mov
xchg
cmp
pop
xchg
mov
mov
xchg
in
ss
inc
xchg
jmp
test
in
adc
aam
xor
jne
es
jae
arpl
adc
adc
rcll
mov
loope
pop
sbb
outsb
pop
mov
mov
inc
sbb
push
pop
push
dec
mov
ficoml
ja
fsts
mov
pushf
fisubs
mov
mov
dec
std
mov
inc
es
sub
mov
xor
cmp
jge
add
mov
lds
ret
mov
sub
and
xor
xor
inc
clc
pop
fisttps
iret
or
jecxz
je
int
jne
jne
mov
loope
fwait
loope
test
repnz
je
rcl
cmp
sbb
pop
movsl
sahf
push
xor
imul
mov
gs
fcmovu
xchg
mov
dec
pop
es
mov
lds
mov
dec
xorb
flds
jno
pushf
cltd
mov
pop
pop
in
mov
push
and
int3
or
movl
or
add
sub
inc
sti
sbb
jbe
xor
cmp
inc
xchg
xchg
mov
test
sarb
xchg
setle
call
dec
aas
out
add
xchg
and
in
mov
jb
sub
push
pop
adc
aad
jl
je
aas
hlt
dec
int
inc
xchg
jae
pop
xor
sbb
cmp
js
aas
inc
push
je
pop
fdivs
je
inc
imul
mov
add
adc
es
vpsrad
pop
inc
xchg
push
adc
dec
lds
pusha
pop
movsl
pop
pop
xlat
jmp
jp
xor
mul
lods
clc
xchg
add
repnz
push
adc
jo
or
dec
pop
lds
jecxz
mov
cmpl
or
fsubl
sbb
sub
jae
xor
pop
ret
push
mov
insb
jmp
popa
xlat
mov
sbb
daa
sub
ret
movntq
xor
mov
dec
pop
add
popf
inc
xor
inc
push
sub
frstor
movsb
xchg
xchg
push
orb
jecxz
and
and
out
fstl
or
bound
int
mov
xor
lcall
lods
in
movsb
in
ds
jmp
pop
shrb
lds
sub
push
mov
insb
mov
cld
push
lret
xchg
mov
rcl
jbe
ljmp
pop
arpl
jo
subl
dec
jmp
mov
mov
pushf
add
ret
aam
clc
mov
lds
xor
lahf
mov
sub
fs
movsl
in
lods
or
cmc
pop
mov
dec
mov
jl
orb
in
pusha
jl
cmp
mov
jo
setb
push
mov
mov
jmp
mov
push
pop
in
inc
dec
jnp
mov
mov
lcall
adc
loop
pop
lret
adc
mov
enter
cmpsb
ret
setne
pop
jns
sub
jb
sbb
lcall
aas
mov
pop
das
ret
scas
and
pusha
jns
mov
popf
inc
outsl
movsb
add
dec
fnstsw
add
mov
dec
clc
mov
xchg
or
insl
adc
daa
inc
movsl
sbb
sub
pop
add
sub
icebp
in
push
jmp
arpl
and
mov
imul
jo
fwait
inc
ss
jl
hlt
pusha
pop
int
ds
jnp
movsb
adc
sub
cmp
pavgw
inc
hlt
pop
or
scas
xchg
aam
cmp
fwait
cld
xor
into
rcrl
add
aad
pop
movsl
jg
cwtl
sbb
adc
ss
stos
xchg
ret
bnd
pop
imul
aam
mov
enter
lods
xorb
lds
mov
jb
mov
inc
jne
ss
cmp
cmp
or
sub
lea
lret
lock
push
cltd
inc
sahf
repz
std
sub
hlt
add
jb
xor
push
sarl
adc
mov
pop
cmp
pop
daa
std
sti
sahf
push
movlps
push
jno
xchg
dec
jns
or
push
sbb
jp
in
in
sub
mov
or
sub
jle
and
add
xchg
ljmp
mov
pop
pop
add
dec
and
inc
or
jne
mov
mov
pop
int3
or
push
lret
test
mov
mov
adc
lods
mov
mov
dec
push
jle
add
enter
aad
cs
inc
push
adc
mov
xlat
inc
int3
inc
lret
out
and
lcall
dec
lock
mov
push
sub
dec
fwait
scas
sarl
stc
xchg
jmp
iret
cs
mov
out
xchg
jmp
and
aam
jae
ss
jle
mov
outsl
sahf
push
insb
cwtl
aam
mov
int3
cmp
scas
popa
jne
mov
ffreep
xor
pop
int3
mov
ljmp
stos
push
int
pop
fstpt
sahf
in
dec
sbb
push
fidivrs
repnz
stos
cmpl
lock
jb
dec
mov
jae
mov
or
popa
or
adc
jbe
dec
sbb
nop
outsl
jnp
mov
inc
dec
and
sbb
mov
xor
popf
lahf
popf
xor
into
data16
fsubr
xor
xchg
xchg
push
push
jno
cmpsl
mov
jg
inc
ret
pop
sahf
cmpsb
icebp
adc
jle
cmp
jecxz
test
mov
jo
ret
push
testb
cmp
push
adc
js
xor
das
mov
cli
in
mov
or
mov
inc
add
rorb
mov
xchg
shlb
pop
fadd
rcll
pop
jg
mov
rcl
lea
mov
sub
aas
idiv
lds
mov
loop
cmpsb
loop
loopne
adc
iret
xchg
mov
nop
lods
jbe
dec
push
dec
ror
add
pop
sub
cmpsl
in
sub
jo
jne
and
adc
movsb
inc
fsubr
cmp
fucompp
bound
mov
sub
ret
aas
int3
test
mov
xor
push
out
cmp
pop
xor
gs
jo
dec
jle
sar
or
popf
cmp
jae
push
inc
jae
pushf
xchg
data16
aam
add
push
xor
dec
xor
push
pop
inc
lock
pop
jp
push
lods
insb
dec
mov
in
push
sbb
xlat
push
orb
stc
int3
rcl
mov
jecxz
aaa
leave
sbb
out
add
or
loopne
adc
call
and
cwtl
outsb
xchg
in
mov
or
loope
or
or
sahf
sub
dec
sub
xchg
idivb
aas
sbbl
push
and
clc
add
pushf
or
sbb
or
mov
push
lcall
inc
fbstp
jge
in
inc
mov
in
jl
inc
insl
jnp
mov
aas
movsb
mov
mov
rcrb
and
js
fs
dec
ret
adc
enter
mov
xchg
cmp
or
mov
xchg
push
in
fidivl
push
outsb
cmp
leave
add
jo
in
jno
adc
inc
out
push
shll
ds
mov
mov
dec
xchg
jne
add
les
and
jno
scas
stos
daa
mov
mov
cmp
mov
and
sbb
lods
jp
sbb
jae
mov
push
shlb
sbb
adc
dec
xor
cmp
daa
push
push
sub
hlt
pop
lock
pusha
jmp
loopne
inc
mov
pop
dec
out
enter
pop
int3
sub
inc
ds
dec
push
js
pop
test
outsl
or
push
movsl
lcall
jmp
xchg
leave
pop
into
enter
or
cmp
mov
test
test
sub
xchg
and
jb
sbb
sbb
and
add
cmp
int
popa
cld
into
pop
call
repnz
xor
add
cmp
das
dec
fbstp
test
push
iret
jne
push
out
lret
imul
popa
movsb
pop
ds
mov
cwtl
and
sbb
imul
iret
lcall
add
scas
jb
add
mov
push
mov
add
or
xchg
dec
ss
cli
jp
and
ss
xchg
mov
lods
cmp
xchg
cmp
fnstcw
and
lcall
sub
add
mov
xchg
jnp
outsl
nop
aad
iret
xor
sbb
gs
xchg
fs
test
mov
inc
push
pusha
out
jne
int
sbb
dec
aas
cwtl
cli
cmp
shrl
out
push
xor
add
pop
pop
test
push
stos
in
pusha
lods
mov
addb
mov
cmp
test
inc
push
mov
iret
adc
sub
jb
cmc
push
cmp
lret
xor
add
test
rolb
jne
and
mov
push
adc
dec
inc
dec
sbb
sbb
lahf
jae
and
stos
mov
jae
ljmp
rcll
jecxz
mov
mov
ss
xor
ffreep
addr16
jg
sarb
sub
xchg
jp
ds
fsubs
xchg
inc
bound
dec
in
mov
pop
xlat
adc
outsb
xor
cld
data16
pop
mov
psubusb
jne
dec
stc
cmc
lods
out
test
in
fcomp
sub
cmp
les
jne
jnp
addl
hlt
jbe
pop
ja
pop
lea
or
inc
dec
ljmp
nop
test
or
popf
test
testb
and
pop
mov
lahf
xor
and
loop
rclb
push
cwtl
loopne
mov
and
mov
insl
push
jo
add
and
adcl
test
jge
lret
ffreep
xor
sub
ds
mov
sbb
mov
movsl
inc
shrb
dec
sub
push
lods
ret
aam
sar
in
cwtl
sub
sarl
jo
repz
jb
popf
es
jg
pop
jg
orb
xor
push
inc
fwait
scas
jecxz
and
xchg
xchg
inc
push
jnp
in
adc
popa
xor
mov
push
jbe
jp
cwtl
dec
inc
sti
imul
idivl
mov
cli
pushl
pop
fcmovne
cltd
inc
push
shrb
les
ret
movsb
popa
mov
inc
or
jecxz
adc
push
pop
or
jecxz
in
mov
lock
into
xlat
push
arpl
mov
stc
incl
shlb
cmp
inc
in
pop
or
lret
out
jmp
jns
push
jle
sbb
rcll
lock
inc
shlb
push
std
mov
movsl
scas
test
jl
aaa
pop
loopne
xor
cli
loopne
mov
cmp
or
cmp
cmpsl
push
adcb
push
push
nop
jnp
xchg
mov
lock
add
push
pop
gs
sarl
fdivrl
jp
jle
ja
fucomp
shrl
hlt
in
aam
jge
movsb
push
fstl
daa
inc
pop
push
icebp
adc
scas
test
inc
in
jbe
bound
call
mov
mov
or
enter
push
jno
fsubl
je
icebp
mov
jl
jo
or
call
out
adc
add
adc
mov
subb
pop
mov
mov
jge
aaa
int3
sarb
push
mov
repz
xor
sar
jp
call
dec
or
and
inc
push
or
clc
jno
pop
add
mov
daa
test
aaa
dec
pop
movsb
cwtl
sti
shll
repnz
jo
xchg
shlb
push
push
das
sub
or
adc
lods
push
loop
inc
xchg
and
adc
sbb
sub
and
jno
pop
cwtl
pop
or
ss
outsb
sub
xchg
jecxz
xchg
or
out
inc
fsubl
cmp
fs
cs
idiv
lds
xor
sbb
fcoml
scas
xchg
movsb
loop
lock
mov
pop
lcall
sub
cmp
ds
loope
test
stc
ja
cmpsb
jb
inc
jle
push
pop
test
lods
jns
popa
xor
fildll
and
and
mov
test
scas
cmp
fisttps
add
orl
or
lahf
dec
or
xor
dec
test
fists
fildll
push
mov
xchg
dec
mov
or
jns
pop
adc
add
ja
mov
lods
ljmp
and
push
fstps
inc
test
jmp
stc
and
adc
xchg
fisubrl
push
imul
xor
popa
cld
paddd
push
adc
xchg
dec
loope
add
push
and
push
jne
into
enter
cmp
hlt
stc
and
inc
call
adc
and
loope
shr
dec
jp
push
popf
mov
in
jb
jae
sti
jnp
mov
mov
and
cmpsb
adc
pop
or
das
lds
daa
pop
ljmp
jbe
xor
push
or
stos
ljmp
or
jo
add
arpl
xlat
out
andl
inc
nop
cmp
pop
pop
mov
push
test
pop
fidivs
pop
cwtl
rcl
lods
in
push
mov
xor
cwtl
xchg
stos
daa
int
test
push
lods
adc
sub
push
addr16
rol
clc
cmc
cwtl
jns
pop
cmpsb
dec
and
dec
xchg
insb
stos
jmp
jne
dec
xchg
jl
jge
jae
ljmp
pop
pop
clc
rclb
data16
cmc
adc
js
adc
mov
inc
cmp
mov
mov
hlt
arpl
add
mov
xor
jo
cmpsl
roll
imul
push
std
rclb
mov
mov
xchg
lea
int
repz
nop
mov
mov
fildll
push
jo
aad
fs
test
pop
mov
push
push
or
xor
and
sahf
mov
outsl
aas
div
sarl
sub
and
xor
push
add
fsubrl
sub
out
outsl
pushf
add
inc
inc
lahf
ljmp
je
popf
pop
ret
repz
sbb
pop
sarl
pop
pop
cmp
add
mov
adc
daa
pop
inc
mov
int
inc
stos
or
cmp
jne
add
jge
insl
enter
mov
mov
mov
data16
and
divl
icebp
insl
shl
ret
inc
lcall
mov
out
add
addr16
scas
movsl
cmp
loopne
mov
xor
push
pop
or
jne
repnz
fwait
or
sbb
xchg
jl
loope
in
clc
mov
out
mov
mov
push
mov
and
mov
sub
push
and
fidivl
push
mov
aad
cmp
mov
ljmp
stos
in
lret
mov
insb
insb
cltd
dec
cmpsl
mov
jo
shrl
jmp
cmc
call
xlat
pop
sub
push
mov
imul
out
test
pop
pop
gs
bound
adc
and
inc
fdivr
popa
xchg
adc
mov
mov
pop
inc
inc
and
mov
inc
test
pop
cmp
pusha
rcrb
nop
lock
pop
add
xor
lahf
fsubs
cmpsb
mov
sbb
imul
stc
sub
andl
call
jl
into
or
mov
inc
insl
ficompl
call
cmc
stc
dec
xlat
imul
scas
cmpsb
xchg
fisttpl
mull
jl
add
fs
fdivl
jo
stc
xchg
xchg
sub
xor
dec
dec
pushf
sbb
sub
loope
and
fldenv
pop
dec
add
sarb
or
imul
cmpsl
sbb
fistpl
popa
xchg
or
js
sbb
cmc
lods
dec
rcl
mov
jl
pop
xor
xchg
mov
jnp
or
push
test
dec
dec
rep
pop
pop
xchg
fdivrs
xor
aam
loopne
clc
adc
cli
and
ret
and
jle
adc
xor
fisttpll
and
sub
cmp
xor
mov
mov
dec
push
mov
push
arpl
push
mov
idivb
pusha
or
sbb
das
cmc
gs
ret
testl
mulb
push
push
mov
push
stos
and
cmc
and
sbb
fists
inc
je
call
shrl
ds
cmp
ret
negl
xchg
in
sbbl
push
sub
add
lock
mov
bound
lcall
xor
xchg
into
add
lods
test
dec
xchg
pop
test
inc
add
mov
imul
push
loop
jb
xchg
dec
push
ret
mov
fidivs
xchg
mov
jnp
xchg
or
ret
divb
and
dec
mov
lahf
jg
sub
sub
jp
loope
mov
lods
sbb
adc
mov
sub
cmp
mov
mov
push
push
andl
pop
mov
movsl
xchg
rol
cmp
push
jo
es
add
add
jne
mov
mov
lcall
push
sti
inc
mov
mov
mov
dec
push
loopne
or
daa
push
stos
fdivrl
jnp
sbb
jb
in
adc
dec
je
add
push
stos
data16
jmp
or
ljmp
adcb
push
fidivl
push
cmc
adcb
shl
mov
ja
iret
add
aas
mov
mov
in
cld
sub
mov
xchg
enter
sub
mov
dec
mov
daa
jns
inc
rorb
inc
fnstcw
mov
cmp
xchg
pop
jl
arpl
add
loop
aam
dec
jp
inc
push
and
jno
pop
cmp
mov
jae
xchg
clc
aam
mov
adc
mov
sarl
xchg
ret
cmp
outsl
mov
dec
xor
xor
sbbb
sub
inc
adc
bound
mov
jns
push
xchg
dec
outsl
cmp
imul
jno
dec
adc
sbb
jmp
pop
sbb
push
inc
xor
ficoms
add
xorl
cmp
cmpsl
mov
ja
mov
cmpsb
xchg
sti
into
xchg
mov
mov
iret
fidivrs
lret
jg
in
testl
xchg
rcll
popf
shll
stc
js
and
out
xchg
jnp
cltd
xchg
push
ds
inc
pop
mov
lods
push
mov
popf
xorb
jo
cltd
mov
movsb
out
orl
dec
faddp
jl
push
dec
push
mov
sub
sub
add
pop
movsb
cmpsl
call
rcll
mov
jg
pop
imul
dec
nop
mov
jns
adc
aas
mov
inc
movsb
pop
out
push
xchg
das
lock
in
pop
mov
fnstsw
adc
pop
mov
sbbl
xchg
addr16
andb
lret
sbb
pop
push
mov
scas
ljmp
pop
jg
ret
inc
dec
mov
jns
pop
lds
jp
int
jb
mov
test
pushl
loope
pop
pop
or
dec
pop
xchg
mov
mov
lret
push
sbb
sahf
dec
xor
addb
fcoml
inc
or
cmp
xchg
cmp
imul
mov
add
cmpsb
add
ret
ficoms
in
movaps
inc
dec
cmp
imul
push
jne
push
test
dec
cmp
aaa
jle
aad
cmp
in
pop
mov
pop
xchg
mov
ljmp
mov
pop
fdivrs
or
outsb
sub
es
cld
and
add
dec
mov
mov
icebp
xchg
ss
inc
test
ret
cmpsl
push
test
mov
pop
lret
mov
and
pop
sub
sbb
jg
out
jp
leave
mulb
pusha
lock
idiv
ret
ja
add
push
cli
or
sub
aad
push
sahf
xlat
mov
outsb
xchg
out
jle
push
mov
in
sbb
sub
jmp
inc
daa
fsub
sbb
subl
xchg
movsl
iret
xchg
orl
sahf
out
imul
cli
aad
test
lahf
mov
shl
call
inc
rorl
push
movsl
push
and
pop
jo
cmp
into
pusha
fstpl
cmp
push
fbld
jecxz
inc
cmp
mov
sahf
push
mov
mov
pop
popa
mov
gs
jle
imul
xchg
adc
imul
rorb
inc
into
lret
nop
out
push
or
adc
out
cmp
add
fs
gs
stos
xchg
push
jp
xchg
mov
dec
stos
pop
cmp
mov
rclb
adc
jecxz
outsl
dec
and
dec
jecxz
xor
fdecstp
sub
xchg
cmpsb
inc
xchg
test
insl
popa
lock
aaa
inc
pop
lcall
jns
xor
or
jns
shlb
xchg
pop
jecxz
lret
jo
jmp
loopne
lods
fistps
pop
in
or
cmp
mov
es
bsr
int3
xchg
cmp
data16
lock
jge
sub
aas
outsb
pop
and
loope
mov
mov
xor
mov
add
mov
mov
jle
mov
pop
push
push
loop
jge
or
sub
add
xchg
icebp
loop
cmpsl
imul
rcll
les
and
mov
mov
bound
and
jle
xchg
fisubrl
push
cmove
fimuls
sub
or
jae
bnd
push
jbe
cmp
notl
xlat
je
and
scas
adc
push
cmpsb
fsubr
lahf
mov
jge
mov
enter
xor
mov
dec
xor
cmpsb
lret
jmp
popa
or
mov
jmp
adc
outsb
mov
pusha
ret
dec
adc
bound
mov
test
push
adc
mov
addr16
pusha
aam
clc
rolb
test
sar
jnp
imul
cmp
jb
arpl
daa
push
sbb
pop
jle
les
es
or
outsl
xchg
jnp
push
ljmp
or
leave
mov
lahf
jl,pn
imul
sarb
mov
dec
les
movsb
xchg
mov
outsb
inc
lock
inc
pop
or
pop
mov
sti
lods
ret
and
xor
push
stc
mov
sbb
or
mov
pop
add
in
pop
inc
repnz
shrb
fcmovbe
jns
in
mov
test
outsl
add
add
lcallw
cmpsb
call
mov
int3
jg
and
and
pusha
and
lds
push
mov
iret
inc
jo
xlat
rcll
shll
lahf
jmp
cmpsl
xor
mov
jno
sbb
sub
idivb
outsl
xchg
aaa
adc
subl
andl
fsubp
js
dec
adc
leave
and
stos
ret
or
je
cmc
add
add
out
sbb
lret
push
lret
out
movsb
pop
lods
sbb
mov
out
mov
movsl
mov
adc
add
bound
mov
imul
push
add
lock
arpl
mov
or
loope
xchg
xchg
into
inc
xor
enter
xchg
mov
dec
pop
out
cmpsl
fs
repnz
mov
pop
popf
xor
or
and
sub
insb
mov
or
test
test
iret
out
loopne
shl
lret
or
xor
inc
cli
xor
xor
jns
adc
dec
push
sub
xor
imull
cmp
and
or
fidivrs
push
mov
push
adc
aas
cmpsl
imul
sbb
in
jp
pop
jmp
pop
adc
ret
sbb
repnz
scas
push
xchg
mov
stos
add
add
jmp
dec
ret
add
imul
enter
pop
outsb
lahf
test
sahf
jno
addr16
call
loopne
jae
jp
cmpsb
jne
or
shlb
imul
sti
xchg
imul
cmpsb
negl
rcrb
push
xchg
and
pop
mov
pop
pop
mov
dec
sub
lods
movsl
dec
dec
xchg
in
sahf
notl
decb
push
sub
cmpsl
fdivrs
in
test
int
mov
add
js
int3
pop
cmpsl
cmp
inc
gs
xorb
leave
cmp
lret
int3
mov
clc
test
cwtl
cmp
test
xor
jne
inc
test
adc
adc
fists
inc
test
loope
popa
mov
inc
mov
dec
mov
adc
jnp
scas
xor
mov
mov
lock
inc
xchg
out
sbb
cltd
mov
dec
ljmp
xchg
sbb
mov
clc
sub
ret
mov
daa
cli
fstps
push
bound
xor
pop
cmp
xchg
das
repz
sbb
mov
pop
xchg
mov
mov
gs
mov
adc
inc
stc
mov
jmp
lret
dec
cli
imul
lret
mov
int3
ss
es
mov
mov
out
aam
pop
mov
hlt
mov
jae
ror
or
mov
sbb
dec
sbb
je
std
sbb
ret
lahf
mov
cli
inc
pop
les
fidivl
shll
inc
dec
sbb
pop
adc
push
add
jge
add
lret
or
movsl
es
jmp
xor
scas
imul
xchg
xor
call
mov
push
cmp
into
cmp
mov
dec
lret
jns
fs
push
nop
mov
xchg
mov
bound
stos
mov
add
roll
dec
mov
add
sbb
pusha
sub
mov
fistl
cmp
sub
test
jns
leave
mov
pop
dec
mov
jecxz
repnz
fsubs
sub
ret
push
ds
add
hlt
mov
ds
and
cld
push
stc
inc
enter
pop
mov
fadd
test
movsl
movsl
cmp
insl
sbb
dec
clc
pop
div
vminss
jbe
adc
mov
sub
inc
push
xchg
sub
pop
xor
nop
sub
mov
xor
arpl
jae
jb
dec
insb
push
xorb
mov
pop
icebp
stc
or
xchg
cmp
cmp
ss
int
fisttpll
andl
mov
fldenv
cmpsb
xchg
fsubr
loopne
es
int3
sahf
xchg
add
fwait
xchg
call
dec
js
mov
loopne
mov
and
mov
sub
xchg
xor
fldenv
jmp
call
mov
aas
test
hlt
inc
repnz
notl
in
shlb
call
ss
adc
push
xor
nop
cwtl
xor
jmp
lea
mov
aas
mov
and
add
push
outsb
fistpl
push
cmp
repnz
in
adc
je
ds
mov
std
int3
and
mov
inc
sub
xchg
pop
or
adc
jbe
sub
out
xchg
xor
adc
sbb
in
sbb
adc
dec
and
xchg
repz
into
pop
jne
data16
dec
repnz
lahf
and
imul
fadd
and
adc
xor
cmp
test
lcall
and
mov
mov
or
sub
jecxz
dec
xchg
mov
cmovp
cmp
int
adc
mov
repz
lods
mov
stc
xchg
icebp
or
cmp
insb
adc
addr16
push
push
xchg
push
dec
cmp
mov
insl
leave
pop
adc
sbb
cmp
sub
inc
das
mov
dec
popf
mov
js
popa
inc
jnp
push
adc
jbe
mov
add
dec
pop
ret
mov
ret
out
push
ds
jecxz
stos
push
in
mov
dec
std
aam
mov
mov
xchg
stos
scas
push
orb
xorb
or
scas
sbb
and
sbbb
clc
jns
pop
test
adc
and
mov
fdivl
xchg
inc
xor
lcall
xchg
lahf
or
lods
shll
pushl
or
add
fsubrl
or
sbb
out
mov
lea
out
dec
sub
mov
push
std
and
pop
sbb
int
aaa
bound
mov
mov
lahf
aad
dec
adc
adc
int3
add
mov
iret
repnz
test
mov
adc
fisttpll
out
adc
jle
or
mov
adc
push
insl
stc
aad
add
xor
loopne
pushf
pop
insb
mov
out
cmpsb
lcall
ret
je
xchg
push
cltd
add
popa
inc
mov
mov
xchg
and
outsb
xlat
mov
inc
xchg
add
movsb
call
mov
repz
lock
cmp
leave
cmp
pop
fwait
outsl
xor
mov
jns
push
clc
mov
xchg
sub
sbb
jg
addr16
repnz
add
push
stos
xchg
pop
gs
mov
mov
adc
xchg
std
test
dec
or
adc
rcr
int3
mov
cmp
xor
pushf
inc
loop
jns
lret
inc
push
lahf
lahf
sbb
sahf
pop
les
jae
jae
into
cld
xor
aas
jbe
and
leave
pop
inc
mov
movb
mov
aam
dec
leave
call
push
insl
cmp
lods
int
sbb
cld
sbb
stc
xor
loop
pop
push
icebp
xchg
add
ret
ds
mov
cltd
in
fistpl
and
ret
loop
sbb
jo
test
sbb
popf
cmp
js
xor
ljmp
lock
pop
fists
rorl
sbb
xor
jns
xor
jo
mov
sub
clc
or
iret
xchg
iret
shl
add
xor
add
cmp
outsb
dec
lret
jb
add
pop
xor
sarb
adc
fcomps
or
fnstsw
mov
inc
cmpsl
rorl
dec
ds
xchg
jnp
xchg
imul
iret
dec
add
or
mov
outsb
jnp
insl
pop
mov
in
call
or
mov
push
mov
scas
mov
data16
add
out
cmp
add
dec
cmp
stos
sub
jle
sub
mov
fsts
jg
out
int3
add
ljmp
in
scas
pushf
pusha
pushl
in
mov
repnz
outsl
and
xor
pop
push
xor
xor
psubusw
pop
movsl
mov
push
pop
jno
shlb
test
es
imul
fwait
lock
sahf
jbe
pushf
std
pop
enter
repz
fs
or
or
cmp
cmc
sbb
subb
cmpsb
jbe
push
and
int3
repnz
xchg
mov
fsubrp
jge
aam
insl
add
push
enter
ret
outsl
jecxz
out
cmp
adc
mov
addr16
adc
aaa
pop
inc
in
inc
or
cmp
or
mov
jnp
cmp
adc
adc
popa
cmp
lahf
out
lahf
popl
xchg
fsubrs
xor
dec
cld
das
or
dec
add
into
insb
call
test
shll
lods
stos
push
xlat
fadds
or
fmull
js
js
aad
jg
pop
popa
movsl
sti
mov
sar
push
cmp
ret
xchg
leave
daa
daa
xor
xchg
or
filds
jne
aas
pop
nop
divb
xchg
popa
daa
cmp
sub
fadd
mov
lret
ja
lret
mov
roll
test
imul
dec
jle
call
divl
dec
lea
cmp
cmc
cmp
aam
dec
rcll
movsb
pop
cmp
outsl
sub
mov
adc
data16
scas
stos
ss
mov
push
insl
or
dec
repz
inc
mov
mov
cmp
jg,pn
pop
push
jnp
push
cmp
movsb
mov
sbb
xchg
pushf
movsb
ss
out
inc
xchg
xlat
insl
stc
shll
sbb
ret
test
cmpsb
cmp
push
inc
add
xchg
mov
sti
loope
mov
mov
mov
mov
and
mov
xchg
and
adc
xchg
sbb
cwtl
mov
cli
popa
cmc
push
jb
push
inc
mov
adc
cli
test
mov
inc
data16
cwtl
adc
test
mov
inc
mov
push
test
aas
pop
fldenv
mov
add
xchg
sahf
push
repz
mov
mov
inc
sub
and
imul
lock
cmp
adc
inc
in
cvtps2pi
outsl
lret
cmpb
fldl2e
out
je
inc
push
stc
fidivrl
mov
lds
lret
std
dec
ror
popf
jbe
xor
and
pushf
ljmp
jmp
push
sub
jl
adc
jbe
sbb
loop
jae
pop
pop
mov
mov
les
and
dec
sub
fstpl
mov
xchg
int
jns
repz
xchg
inc
lret
lods
pop
sbb
xchg
jmp
test
push
inc
negb
sub
add
pop
jmp
fidivs
sbb
sub
xor
clc
mov
xchg
aad
repz
sub
xor
push
ljmp
pop
insl
lret
xabort
fcomps
pop
or
mov
sub
std
and
sub
xlat
sbb
inc
adc
mov
leave
in
aas
inc
adc
sbb
add
xor
jecxz
stos
mov
sbb
ret
in
add
inc
jp
pop
iret
cmp
ljmp
mov
push
fmull
xchg
inc
xor
es
cmp
mov
mov
ss
adc
jae
loopne
hlt
jge
and
cwtl
bound
aad
inc
mov
shrb
xor
and
lahf
xchg
xor
xor
adc
es
ficompl
je
repnz
cmpsb
mov
mov
loop
and
fisttpl
dec
gs
mov
mov
xor
sbb
sysret
mov
jp
xchg
mov
add
scas
data16
mov
xor
mov
cld
sbb
sbb
jecxz
cmc
ficomps
adc
popa
movsl
loop
gs
scas
sbb
jns
sub
aas
into
notl
aam
push
loope
loopne
mov
cmp
and
sahf
std
mov
sub
mov
mov
and
mov
add
mov
xorl
sbb
insl
sub
setb
adc
popa
cmp
in
and
dec
movsl
mov
jle
mov
outsl
out
aam
fiadds
cmpsl
or
and
inc
jl
inc
sub
popf
mov
mov
pop
dec
comiss
imul
insl
push
jl
addb
inc
cmp
push
and
adc
xchg
mov
inc
dec
dec
jb
hlt
cli
inc
sub
frstor
addr16
imul
mov
cmpsb
sub
or
mov
jo
cmp
pop
inc
sub
clc
jmp
xchg
pop
sub
and
sub
lods
sbb
pop
pop
xor
sahf
stos
add
lcall
cmp
sbb
ficoms
imul
fwait
jae
fcomps
jno
rcrb
mov
push
es
mov
dec
int3
and
cltd
adc
data16
out
cmpsb
cmp
es
add
sub
sub
mov
imul
enter
sahf
adc
mov
jg
lock
cmpsl
push
sbb
insl
sbb
outsb
loop
dec
or
sbb
loopne
cs
lahf
mov
mov
jb
enter
testl
hlt
lock
stos
add
rcll
jae
add
cld
cwtl
mov
cli
cmp
and
or
mov
loope
out
loope
std
out
sbb
cmpl
in
add
dec
imul
cmc
dec
fstl
pop
inc
sbb
fimull
inc
pushf
jp
and
adc
mov
outsl
sarl
fs
push
scas
sti
add
rcrb
dec
cli
dec
nop
cli
mov
aad
xlat
dec
ja
leave
dec
repnz
dec
jl
testl
push
xor
push
pop
adc
lds
repnz
pop
push
xchg
mov
int3
popa
dec
sub
test
ja
inc
enter
add
mov
or
xorb
ret
mov
rcr
xor
mov
xchg
in
sbb
clc
pop
sahf
ret
inc
mov
sahf
adc
je
cs
mov
sub
and
jmp
test
xlat
and
imul
scas
daa
cmp
sti
fimull
cltd
repz
mov
and
push
sub
in
iret
ss
sbb
hlt
push
pop
aad
sbb
data16
pop
rol
imul
inc
and
jbe
clc
iret
cs
jg
sub
push
pushf
xor
add
loope
andl
dec
jmp
cmpsb
mulb
iret
movsb
and
ljmp
pop
xchg
orb
into
jg
adc
bound
xchg
into
loop
push
rcr
imul
xor
push
dec
shl
add
hlt
insl
fidivrs
outsb
pop
xor
mov
loope
jl
shrb
lods
add
sbb
mov
or
push
jb
popa
jno
dec
cmp
lock
js
mov
dec
inc
pop
jmp
pop
nop
js
enter
ret
sbb
sbb
mov
sub
jns
xor
icebp
in
ss
fs
xchg
sti
xor
mov
dec
arpl
test
push
add
mov
mov
pop
cwtl
dec
lret
in
outsb
icebp
shl
lret
daa
xor
push
mov
lcall
aaa
mov
cs
icebp
in
nop
loope
outsb
and
dec
js
bound
stos
es
imul
mov
pop
rclb
dec
bound
xchg
insl
sahf
sub
pusha
jnp
insl
fsincos
push
mov
int
jecxz
pushl
je
mov
sbb
shrl
sub
adc
fstpl
or
push
xor
adc
dec
mov
jnp
mov
pop
dec
jmp
sub
inc
jle
or
push
add
and
cmp
les
fisubrl
stc
pushf
push
filds
dec
mov
lock
sub
lcall
dec
push
push
add
and
std
decl
mov
pusha
push
cmp
or
lods
loop
jne
cmpl
xchg
imul
loop
pushw
jns
sbb
cmp
andb
fcomps
aaa
fwait
in
lret
add
or
iret
pop
movsl
rorl
mov
inc
mov
push
ss
divb
int
jnp
cmpsb
cmp
cli
call
jno
shlb
mov
loop
jmp
lods
jmp
fcoml
pop
add
pop
out
sbb
mov
loope
xor
lret
fs
cmp
mov
rorb
jg
stos
inc
arpl
sti
test
mov
jo
push
push
shll
adc
shll
shl
in
lahf
fidivrl
lcall
test
fld
aam
adc
movsl
leave
ffreep
iret
sbb
cltd
add
cmpsb
pop
mov
dec
cmpsb
call
lret
test
enter
iret
cmc
sbb
push
add
jmp
mov
movsb
cmp
or
xchg
cmp
dec
lods
adc
mov
dec
orb
mov
test
shlb
push
sbb
lahf
lods
mov
sub
mov
lcall
rcl
lret
test
pop
inc
faddl
push
sbb
adcb
lods
mov
xchg
sbb
jo
and
mov
loopne
xchg
pop
in
sarl
iret
aaa
sbb
inc
sbb
jne
dec
out
jb
xchg
jbe
dec
sarl
dec
outsb
mov
rol
mov
mov
dec
jl
adc
mov
rclb
xchg
fcomps
cwtl
out
fmull
cmpb
loope
pop
in
jb
pop
sbbb
addl
adc
stos
lcall
sub
mov
dec
gs
xor
push
dec
lods
jmp
popf
ljmp
mov
subb
pop
bound
jmp
inc
xchg
repz
prefetch
or
xchg
cs
add
imul
adc
mov
xchg
pop
test
cltd
cwtl
and
push
mov
rcrl
cmp
sbbl
push
add
mov
and
pop
or
repz
fucomip
cmp
sti
fisttpll
mov
pop
lea
outsl
sbb
dec
push
ss
call
push
test
pop
jp
push
dec
inc
sub
inc
mov
fs
mov
inc
mov
orl
stc
inc
call
popf
insb
mov
stos
push
or
pop
mov
call
mov
dec
adc
add
jmp
mov
cs
aad
jbe
xchg
imul
xchg
inc
xchg
sbb
sub
mov
mov
call
ss
rorb
adc
adc
jb
cmp
push
repz
andl
cmp
cmp
insl
lds
popf
dec
push
lret
push
dec
shr
mov
push
loope
insb
xlat
sbb
out
fwait
out
dec
mulb
cmp
shrl
cmp
push
out
jge
ja
jae
inc
push
add
cmp
jmp
sub
sub
pop
and
cmp
pop
lret
jle
xor
mov
sub
cmpsl
cmp
ljmp
in
mov
ret
jb
sub
sahf
dec
push
push
data16
out
stos
add
push
sahf
pop
sbb
scas
dec
fdivr
inc
fsubs
xchg
cmpl
ret
jnp
mov
enter
xchg
cli
mov
mov
enter
adc
xor
cltd
pop
fistpll
cmp
mov
das
mov
add
imul
add
aam
mov
xor
or
stos
imul
inc
inc
nop
ret
push
jns
push
cmp
jno
sbb
lods
jl
lods
xchg
jg
xchg
pop
fsts
or
out
inc
pusha
shll
sub
notl
sub
pop
mov
fldt
inc
int
xchg
bound
pop
pop
sahf
jl
nop
mov
pop
ffree
fwait
add
rolb
pop
jno
push
add
push
lret
push
call
lods
inc
or
lock
mov
jle
sub
jns
jae
stos
lods
in
insl
pop
pop
push
sub
es
dec
mov
cmc
test
fcomip
repz
jnp
sub
sahf
lock
adc
es
je
mov
and
pop
scas
aaa
test
shlb
push
add
fcoml
push
push
dec
into
jmp
pushf
cli
mov
xchg
xor
lods
sarb
cmpb
adc
fldcw
outsb
repnz
mov
inc
jno
push
jg
mov
lcall
out
sbb
cli
fnstsw
jne
rcll
xor
lods
sub
jno
or
out
sub
leave
inc
or
repz
jns
xchg
add
fwait
repz
push
adc
ljmp
or
lret
fimull
testb
mov
imul
pop
lds
sub
mov
xor
nop
push
lcall
mov
cmp
jnp
add
add
inc
ret
or
dec
sub
push
stc
or
popa
daa
rorl
int
cmp
in
ljmp
xor
in
movsl
clc
lret
pusha
aas
lcall
push
add
mov
ja
xor
mov
jbe
mov
mov
and
or
pusha
repnz
jle
sbb
inc
inc
ret
addl
popf
sbb
mov
mov
lds
mov
adc
sbb
sti
mov
push
ljmp
rclb
mov
push
adc
sbb
aas
les
fildl
mov
jp
repnz
push
int
pusha
ret
dec
cmpsl
dec
push
test
dec
ss
cli
dec
adc
xor
jnp
adc
fldcw
iret
or
das
push
lea
int
lret
cwtl
out
dec
add
mov
or
leave
cltd
mov
inc
mov
cmp
jp
jns
cltd
xchg
pop
dec
hlt
mov
adc
ror
jp
xchg
inc
cld
stos
dec
mov
sub
push
sti
fmull
inc
int3
adc
xor
test
jne
pop
decb
push
int3
mov
loop
ljmp
adc
pop
xor
fs
or
movhps
ja
jo
test
adc
xchg
or
dec
or
adc
xor
mov
mov
outsl
jae
xchg
movsb
js,pt
dec
fisubl
xor
sbb
scas
cmp
aaa
ss
xchg
setns
push
and
sahf
xchg
aas
mov
and
push
cmpsb
sti
scas
cmp
adc
xor
mov
repz
inc
jo
pop
push
sub
imul
in
add
mov
xchg
orl
mov
adc
push
push
dec
mov
and
xor
outsb
mov
popf
inc
sub
or
icebp
sbbl
scas
stc
pop
sbb
rcll
test
jl
das
outsl
in
jmp
lods
pushf
xchg
shr
pop
mov
cmpb
mov
xchg
cmpsb
sbb
aad
xchg
cmpsl
inc
add
mov
adc
cwtl
xchg
dec
add
movsb
sbb
lahf
shlb
or
faddl
imul
dec
jl
mov
xor
rclb
jecxz
mov
and
cmp
cltd
into
inc
cli
mov
sbb
inc
pop
and
loop
cmp
inc
std
adc
xor
rolb
incb
jae
mov
mov
jg
test
jo
or
les
mov
mov
xchg
pop
rorl
pusha
repz
mov
sub
cld
sbb
cwtl
mov
out
and
xor
pop
push
imul
push
in
pushf
std
cmpsl
sahf
push
cmp
loopne
popa
or
cmp
int3
lds
sub
pop
push
mov
push
mov
sub
pop
and
call
mov
bound
push
xor
dec
orb
add
test
ficomps
jecxz
lcall
aad
loope
push
sti
jne
xchg
cmp
clc
mov
testb
nop
ret
jo
js
push
adc
ror
pop
adc
inc
pop
out
dec
das
pop
dec
scas
sbb
outsl
or
or
jp
push
xchg
mov
and
mov
insl
stc
or
xchg
or
mov
enter
push
aad
push
clc
or
mov
and
mov
das
jp
and
push
dec
in
cmc
xor
lds
sarb
repnz
dec
mov
jl
adc
xchg
pop
shlb
pusha
icebp
inc
adc
jns
lcall
jnp
push
out
push
in
enter
test
xchg
pop
jb
adc
jb
cs
sbb
push
jno
push
dec
lret
divl
mov
adc
and
jg
ficompl
arpl
shl
test
cltd
jle
mov
int
dec
andb
pop
fstpl
sub
fwait
test
xchg
push
mov
cmpsb
or
mov
and
and
out
adc
push
mov
mov
xor
pop
int
jae
rcll
and
mov
adc
aaa
icebp
xchg
add
lods
dec
in
aad
inc
xchg
mov
cmp
adc
shll
dec
jae
cmp
push
sub
shr
mov
pop
pop
cmp
cmp
xlat
hlt
shrb
xchg
cmpsb
push
mov
shlb
mov
in
sbb
xor
add
dec
xchg
or
cmp
lcall
or
jl
push
sbb
les
adc
sti
inc
push
aaa
inc
pop
or
push
out
jo
sbbb
stc
jne
dec
int
test
gs
iret
mov
repnz
test
cmp
xchg
lret
inc
repnz
outsb
lcall
daa
out
xlat
imul
inc
jl
push
lods
fld
je
mov
je
inc
daa
add
pop
mov
push
push
data16
iret
mulb
mov
xor
mov
sub
dec
cmp
sub
push
or
push
movsl
push
or
divb
int3
jno
leave
mov
sbb
out
xor
adc
and
mov
or
inc
lods
xchg
lods
lods
insl
mov
adc
int
arpl
or
cmpl
or
sub
fbld
pop
sbb
jecxz
cmp
stos
sarl
xchg
sub
jmp
cld
lods
sub
cmp
clc
or
xchg
loopne
sub
add
gs
push
and
lock
sub
mov
filds
adc
imul
inc
ds
add
inc
pop
push
ret
mov
jecxz
lret
mov
stos
inc
test
lock
xlat
aas
jb
mov
mulb
inc
js
ja
pop
popf
lret
or
add
xor
mov
xchg
inc
gs
les
dec
loope
rcrb
repz
outsb
pop
mov
sub
sti
icebp
mov
or
cwtl
jmp
mov
adc
scas
test
xlat
push
loope
cmp
aad
jno
dec
xchg
insl
jne
sub
sbb
lods
loop
xchg
jo
loope
orb
out
dec
mov
aad
leave
and
jmp
fincstp
inc
jg
mov
add
dec
fadd
push
or
add
jbe
in
mov
mov
clc
xchg
push
pop
add
mov
aas
or
dec
xchg
push
je
or
lds
jb
inc
cld
add
je
stos
mov
cli
xorl
ret
nop
shrl
mov
imul
rep
xchg
in
mov
push
sub
insb
push
sub
xchg
cmp
scas
decb
inc
lods
test
xor
cmpsl
in
add
aaa
aaa
shlb
addb
pop
loop
mov
cmpsl
in
xchg
push
das
scas
add
inc
subb
mov
jbe
jae
xchg
mov
clc
sub
in
ss
mov
sbb
cli
push
cmpsb
arpl
xchg
sub
push
add
movsb
push
jle
movsl
aaa
push
fnsave
inc
inc
push
arpl
mov
fbstp
cltd
or
mov
mov
lock
sti
dec
push
test
cmp
xchg
js
in
aas
xor
xor
dec
pushf
fcomi
jl
sbb
and
stos
xchg
ds
enter
push
jl
mov
pop
rcll
push
loop
mov
mov
jne
subl
cmpsb
add
out
push
dec
cmpsb
iret
add
pop
scas
push
test
ja
loopne
push
mov
data16
cltd
jo
imul
dec
adc
insl
iret
dec
es
fsubl
add
fsubp
dec
in
popf
repz
xor
les
mov
adc
jle
ret
out
in
sub
jne
repnz
rcll
push
xor
das
test
repz
mov
scas
jle
movsb
cmpsl
adc
sti
xchg
sbb
sub
sub
xchg
cmp
dec
clc
sub
xor
sub
into
inc
xchg
push
mov
or
mov
add
std
sti
mov
inc
decb
pusha
sahf
push
dec
mov
sub
dec
fiaddl
add
int
fs
test
sarb
dec
xor
jb
mov
pop
iret
scas
je
sti
test
and
ss
leave
cmc
or
cmp
xchg
rolb
xchg
sbb
pop
mov
jecxz
jbe
std
or
pop
ds
adc
jnp
jg
iret
sbb
cmpsl
je
xchg
adc
stos
xorb
roll
add
repz
leave
insb
inc
ljmp
repz
pop
jg
faddl
pop
dec
cmp
cmpl
pop
jge
ja
push
loopne
xlat
paddq
lret
stc
fwait
dec
xlat
hlt
xor
stos
jb
mov
inc
cmpsl
repz
roll
dec
data16
lock
insb
scas
outsl
hlt
in
stos
inc
jo
shll
test
xorl
icebp
lret
inc
cmp
jp
popf
andb
add
pop
xchg
icebp
loop
jle
aam
addr16
sbb
and
dec
mov
in
in
xchg
xchg
out
mov
fistpll
hlt
jb
out
fcomp
and
mov
jne
addr16
and
je
std
jns
push
dec
pop
jne
fbld
mov
sbb
test
insl
and
ret
call
cwtl
dec
pusha
pop
sahf
cli
adc
jnp
pop
dec
iret
sub
ja
push
ss
adc
out
cwtl
dec
iret
and
pop
adc
add
in
ret
aas
lods
pop
add
add
sbb
dec
mov
jae
push
push
sub
push
jo
mov
jl
imul
outsb
aaa
jbe
test
mov
mov
mov
ds
push
in
sti
push
or
jmp
mov
js
xor
mov
sbb
outsl
sbb
movsb
mov
mov
fadds
dec
jbe
sub
ljmp
imul
fimull
mov
mov
ja
push
push
jg
mov
cwtl
cltd
call
mov
lea
dec
sub
cmp
xchg
notl
shl
les
repz
pop
imul
mov
rclb
fs
mov
dec
stos
jge
cs
add
enter
call
enter
leave
mov
fcomp
movsl
ret
cmp
xchg
sbb
aad
cmp
imul
push
mov
push
ljmp
push
cmp
pop
add
jne
mov
sbb
push
incl
push
mov
out
cwtl
and
xchg
aas
mov
jne
hlt
imul
outsl
add
fdivrl
sbb
inc
sahf
ret
mov
sbb
cmpsl
fs
mov
adc
xchg
mov
xchg
dec
iret
and
mov
mov
in
fcomps
mov
aas
jecxz
ljmp
pop
sbb
daa
mov
sub
inc
hlt
jbe
pop
mov
or
and
cmp
pop
sub
hlt
cld
jb
lahf
test
mov
push
movsb
mov
xor
xchg
notb
lcall
jo
and
mov
fstpl
add
push
push
cmp
cmpsb
jecxz
jo
enter
cmc
or
insl
push
aam
sub
mov
popa
and
adc
into
inc
push
push
adc
ret
movsb
loopne
xor
mov
inc
cmp
sbb
movsl
ret
jb
test
fcompl
popa
cld
cli
or
xor
movsl
dec
iret
jno
push
mov
or
mov
scas
and
in
leave
and
mov
out
pop
ret
and
js
and
call
aad
in
mov
xchg
push
lcall
sarb
cld
push
filds
imul
pop
pop
inc
mov
movsb
mul
xor
mov
push
add
int3
shrl
push
insb
dec
lds
xor
stos
jae
mov
sbb
mov
int3
push
dec
jo
pop
sarl
cmp
ds
outsl
jmp
mov
pop
push
imul
mov
insb
jae
mov
aaa
inc
sbb
xchg
scas
mov
sti
jae
das
das
mov
lods
or
jl
dec
jg
test
mov
mov
xchg
mov
sub
ret
mov
jns
in
movsb
mov
in
dec
mov
gs
xchg
adc
repz
jmp
fs
fbstp
dec
jle
mov
dec
jb
push
iret
sub
pop
imul
jmp
fstl
mov
inc
pusha
andb
arpl
cmp
xor
sub
dec
out
test
adc
lret
mov
testl
jo
jle
dec
scas
shr
xchg
repnz
mov
data16
jle
inc
mov
xchg
cmc
adcb
fisttpl
into
sub
jmp
cmpsb
sahf
dec
aad
popf
push
lea
movsb
pushf
out
cs
jae
lret
xor
mov
rorb
test
and
cltd
stos
push
loope
stos
push
and
popf
mov
std
mov
add
in
mov
pop
mov
sub
xor
adc
jo
sub
cmpsb
dec
out
jg
cld
mov
aam
nop
in
or
lea
inc
mov
adc
xor
or
cmp
mov
ljmp
ret
sub
scas
test
loope
mov
or
test
iret
jne
mov
test
lret
add
pop
shld
jg
xchg
ljmp
sbb
push
mov
mov
mov
icebp
push
adc
test
jl
fdivl
pop
jmp
xchg
xchg
insl
dec
sub
pop
mov
je
adc
push
xchg
mov
and
rcr
ja
cmpb
divb
incl
jae
fsubl
adc
cli
jo
ss
or
les
or
or
aam
icebp
mov
gs
xor
cltd
xor
add
in
push
add
insb
test
pushf
xor
out
lods
bswap
push
jnp
xchg
hlt
sahf
arpl
add
call
fidivrs
fneni(8087
mov
stc
mov
dec
cmc
jmp
inc
jbe
or
lret
push
dec
cs
cmp
icebp
jno
cli
adc
adc
mov
cld
fwait
jnp
dec
ljmp
cmp
adc
ret
sub
pop
repz
hlt
jb
xor
push
lcall
mov
sbb
adc
lahf
jp
mov
lret
xchg
sub
test
in
imul
stos
xor
mov
xor
sub
or
stc
mov
fstp
or
fisttps
lahf
out
shrb
out
jg
jl
insl
mov
sbbl
mov
in
cmpsb
xchg
sub
rcll
loope
pop
mov
shl
dec
aam
dec
loopne
add
mov
xchg
movsb
xor
pop
cmp
iret
mov
xchg
pusha
pop
inc
push
push
popf
sbb
add
adc
idiv
or
jmp
lcall
pop
je
outsl
mov
lods
lret
xchg
outsl
dec
jns
adc
mov
and
cmp
sbb
mov
jmp
mov
sbb
ljmp
xchg
jecxz
mov
aam
jp
jmp
mov
add
lock
xchg
jb
movb
push
pop
jge
je
pop
ds
sbb
mov
jne
or
jmp
sub
push
icebp
movsl
jl
cmp
xor
add
sar
cmp
stos
push
pop
push
sahf
lock
ds
pop
lret
lock
dec
add
pop
mov
aaa
out
lds
dec
sub
add
test
gs
xchg
or
push
aad
pop
push
or
and
push
fs
loope
jbe
sbb
lods
adc
js
push
sub
sbb
insl
lock
cli
imul
jmp
push
xor
and
jae
push
cmpb
sbb
aas
scas
cmpsl
test
inc
aas
iret
insl
push
sbb
js
fwait
jb
testb
inc
stos
in
jbe
bound
jne
jge
test
popf
loop
jo
mov
mov
pop
lret
cmp
mov
lock
inc
mov
mov
mov
lock
fimuls
mov
adc
ja
in
scas
inc
pop
xchg
dec
jae
xlat
ret
mov
iret
mov
mov
in
add
loop
popf
rcrl
fwait
sub
jg
jnp
mov
jge
shl
test
inc
push
jmp
jbe
loopne
mov
xor
mov
inc
mov
mov
iret
popf
inc
push
cmpsb
mov
dec
popf
icebp
adc
and
push
pop
leave
lea
lds
loop
inc
pop
cld
mov
rcrl
insb
test
cmpsb
repz
in
lods
stc
mov
sub
push
cmp
sub
jmp
mov
inc
jp
sbb
repnz
and
or
in
aaa
loope
popa
sbb
push
mov
xchg
sti
loopne
int3
cltd
jnp
mov
and
push
xchg
cli
in
dec
movsl
adc
dec
cli
push
js
xchg
push
das
out
mov
hlt
mov
jno
ret
xchg
mov
cmp
shl
push
xchg
mov
mov
mov
cmp
push
mov
rep
and
jb
or
xchg
call
sarb
mov
dec
popa
je
sar
mov
jno
aad
test
mov
xchg
xor
add
addr16
insb
push
movb
ljmp
outsl
roll
mov
leave
xor
arpl
push
add
jge
dec
out
ret
xor
jg
adc
fimuls
mov
loop
arpl
addw
mov
dec
xor
pop
into
push
or
mov
xchg
jecxz,pn
popa
or
stc
icebp
mov
cs
pusha
mov
das
jns
jne
mov
mov
jnp
adc
add
adc
or
gs
push
mov
out
adc
adc
adc
xchg
repz
sbb
xor
sahf
jbe
js
and
cmp
lret
dec
mov
cltd
repnz
cld
popa
aas
iret
repnz
dec
mov
mov
loop
arpl
or
loope
stos
out
test
sbb
adc
gs
loop
jl
nop
in
mov
inc
sbb
not
jns
repnz
mov
sti
xchg
inc
int3
pop
xor
cmp
pop
push
in
fdivrs
dec
mov
push
dec
aas
movsb
mov
mov
mov
pop
mov
and
adc
mov
clc
mov
lahf
dec
or
sbb
sub
aas
sbb
outsl
popf
ffree
pop
sbb
out
sub
aas
pop
push
subb
cld
loopne
fisubs
sub
mov
dec
mov
out
ret
jg
outsl
shrl
fmuls
mov
int3
sub
push
movsb
adc
push
frstor
xchg
lret
sbb
in
dec
scas
jnp
lahf
stos
xchg
rcll
insb
pop
add
lahf
sub
aas
dec
add
mov
stos
and
lret
sub
cltd
jne
movsl
push
mov
lret
xchg
mov
shrb
sub
jp
gs
jne
push
popf
clc
and
inc
push
lahf
jp
sub
enter
loopne
lods
hlt
mov
and
iret
xor
dec
sub
add
xor
testb
cmp
loopne
repz
into
mov
mov
push
sti
aas
pop
jb
inc
cmpsb
popa
cmovno
or
mov
xor
pushf
shlb
fs
cmpb
test
loopne
push
inc
dec
fimuls
outsb
xchg
inc
xchg
mov
add
jae
negb
imul
adc
imul
jp
mov
stos
iret
sbb
mov
ljmp
pop
loopne
fs
jl
lcall
mov
cli
dec
dec
jmp
ds
test
repz
mov
mov
jl
cltd
jmp
sub
jns
ret
jl
outsl
mov
mov
inc
fldl
mov
loopne
cmp
ret
pop
cli
mov
xor
leave
jp
mov
mov
outsb
and
sub
aas
loope
xor
push
xchg
jmp
mov
inc
inc
stos
aam
out
pop
lret
add
orl
popa
xor
sbb
jbe
test
sub
push
sbb
cmp
rol
cmp
ljmp
insb
mov
fimuls
dec
jl
cmp
mov
add
test
fildl
inc
lea
movsb
mov
xor
lock
cmovg
and
loop
add
loope
sub
lret
enter
cmp
shll
cmc
push
adc
sbb
or
fsubs
pop
pop
test
adc
leave
jb
iret
ljmp
bound
pop
outsl
clc
xchg
jae
fst
je
jae
in
fucomi
xchg
stos
sbb
enter
popf
test
push
sbb
jle
push
jg
push
scas
loopne
and
cli
cmp
es
adc
add
stc
sub
stc
add
aas
insb
sub
fimuls
ds
out
sub
add
and
lods
inc
mov
aad
push
insb
xchg
dec
cmp
jmp
rolb
cmp
add
mov
rcrb
cmpsb
mov
jno
aam
in
cmp
xchg
pop
push
sti
stos
shll
cmp
es
sarl
jge
lds
stos
push
fildl
adc
outsb
xor
loopne
mov
jl
dec
cltd
cld
xchg
outsb
sar
or
test
incl
sbb
imul
dec
rcr
and
inc
pop
es
jne
push
jmp
mov
outsl
mov
mov
mov
add
aad
push
out
iret
sbb
mov
movsb
jo
xor
insb
leave
add
loop
cltd
jmp
lret
iret
lods
je
std
out
movsl
push
cs
and
cmp
mov
adc
dec
mov
push
test
into
or
icebp
ret
movl
jecxz
in
aaa
fistpl
std
iret
ds
mov
push
jle
jne
mov
rcll
cmc
or
test
aaa
or
stos
sub
xchg
push
xchg
mov
adc
inc
stos
imul
push
inc
inc
divl
jne
aaa
mov
lret
fdivs
jp
mov
inc
jge
sub
adc
fsub
inc
fiaddl
xor
push
pop
dec
hlt
pushf
cmp
xor
adcl
mov
std
jge
sub
call
sqrtps
les
jge
popa
inc
das
cmp
and
daa
lcall
popa
iret
adc
mov
setle
sbb
sbb
inc
in
adc
mov
jmp
mov
cmp
mov
xlat
js
sub
cli
imulb
test
adc
fbstp
xor
in
push
push
cmp
out
mov
sbb
cmp
fsubrl
ret
push
dec
xchg
test
or
outsb
cmp
dec
jno
inc
lods
dec
sub
loop
mov
into
fistps
outsl
mov
enter
cmp
lahf
and
xor
or
mov
mov
push
imul
jle
in
test
cmpsb
add
fs
insl
stc
in
push
cmp
sbb
jo
outsl
adc
jbe
int
lcall
mov
aam
repnz
sub
cmpl
mov
or
ret
sub
push
adc
lods
xor
std
lahf
fs
addr16
xchg
mov
push
test
sbb
insl
and
sbb
sub
imul
stc
nop
dec
data16
mov
xor
push
sti
mov
jecxz
enter
lret
sub
inc
lods
fsubs
pop
pusha
or
mov
or
mov
dec
inc
adc
adc
or
mov
ficomps
cmp
fwait
sbb
jp
mov
into
xor
pop
subl
cmp
dec
push
sbb
pop
loope
out
out
stc
mov
push
push
mov
outsb
sub
dec
mov
jb
xchg
mov
scas
add
inc
xchg
gs
and
lods
or
stos
mov
cmp
mov
lock
loopnew
hlt
ss
add
or
add
fwait
adc
cmp
rorb
sbb
mov
sbb
shr
dec
and
and
jnp
adcl
xchg
sbb
lcall
cmp
cmp
xchg
clc
pop
sti
cmc
into
daa
mov
mov
mov
incb
imul
jnp
push
push
adc
stos
pop
ds
popa
data16
sub
cwtl
mov
adc
popf
mov
push
cli
mov
mov
dec
inc
add
or
mulb
dec
inc
aaa
inc
cmp
adc
xchg
pop
mov
pushf
xchg
dec
inc
dec
mov
xor
loop
jecxz
adc
mov
inc
or
pop
mov
pop
sbb
lods
dec
les
mov
sbb
mov
inc
inc
push
lds
ljmp
sub
mov
push
ljmp
mov
ret
pop
dec
push
adc
sub
and
fcompl
pop
pop
in
int3
add
lret
add
fidivrl
mov
outsb
lock
movsb
shrl
push
inc
cmp
push
sahf
lret
mov
testl
aad
mov
outsl
addr16
fstps
push
inc
pop
out
movsb
mov
pusha
test
xor
or
bound
filds
fstp
insl
pushf
jbe
loopne
jmp
pushl
cli
repz
mov
jnp
xchg
add
clc
sbb
mov
dec
jne
popf
mov
nop
enter
pop
cwtl
or
cmc
mov
inc
or
inc
pop
repnz
or
xor
outsb
jg
dec
xchg
inc
or
mul
add
xor
cs
adc
cwtl
push
test
push
lods
fstpt
dec
adc
push
push
out
dec
inc
xor
mov
fcomi
cs
fdivrs
adc
inc
mov
mov
fmuls
icebp
push
daa
sub
inc
popa
dec
sbb
jo
jns
push
inc
xor
pop
sbbl
in
mov
push
sub
pop
repz
or
add
push
scas
ret
fildll
xor
or
shlb
divl
xor
in
and
adc
or
cmpsb
fisubs
aad
jb
mov
and
vmovd
int3
stos
xchg
movups
cli
aaa
pop
inc
mov
push
fbstp
push
sbb
pop
or
addb
out
cmpsb
mov
push
hlt
sub
mov
fiadds
je
cli
lcall
outsb
and
add
xchg
inc
jae
sbb
mov
enter
mov
stc
icebp
fbstp
bnd
das
jno
push
loopne
pop
sbb
push
dec
rcrl
ss
xchg
cmc
xchg
sub
add
sub
push
lea
pop
or
or
daa
dec
push
outsb
pop
inc
insl
ja
sub
fucomp
mov
stc
jecxz
orl
loopne
movsl
ds
imul
out
fnsave
pop
pop
add
pusha
sbb
mov
dec
lcall
cmp
fistl
push
pop
popa
or
ja
bound
fwait
lods
inc
es
mov
push
decb
cwtl
lcall
lea
vmread
fildl
push
mov
jae
cwtl
sbbb
in
leave
shlb
xchg
lcall
adc
stc
addb
and
in
push
push
jg
shl
gs
jbe
in
mov
pop
xchg
iret
cmp
ret
fnstsw
cmpsb
sub
push
dec
mov
mov
js
inc
jge
add
das
inc
ljmp
in
lods
add
mov
dec
in
cmp
mov
es
pop
sbb
sahf
cltd
cmp
shrb
lahf
stc
jge
cld
jecxz
jmp
inc
cwtl
int3
movsb
dec
pop
in
int
sbb
cmp
loope
pop
test
test
fwait
int3
fnstenv
adc
sub
push
test
inc
xchg
test
scas
mov
out
icebp
shll
loope
mov
mov
push
and
cmp
dec
jg
popa
inc
repz
xor
or
inc
fidivs
das
mov
sub
inc
mov
mull
adc
repz
pop
test
mov
mov
lret
add
mov
dec
fistpl
scas
lahf
lea
inc
out
dec
jbe
addr16
ljmp
pop
test
imul
lods
das
xlat
xor
mov
jnp
adc
repz
cmp
mov
push
push
aam
push
dec
sub
jecxz
aas
pop
xchg
adc
fimuls
sti
repnz
in
lods
cmpsl
dec
pushf
mov
push
inc
xchg
adc
jbe
add
loope
data16
pop
stc
lret
xor
call
push
push
fld
pop
pop
cli
fwait
pop
loop
push
xchg
sub
mov
cmp
push
adc
lods
add
shlb
out
mov
pop
pop
popa
daa
adc
jl
sbb
ljmp
lcall
pop
ja
jecxz
hlt
adc
inc
push
jns
adc
mov
mov
xchg
fisttpll
sarl
inc
jb
mov
pop
sub
pushf
loop
fsts
ljmp
into
mov
leave
pop
stos
insb
lea
shlb
inc
test
or
mov
sbb
test
or
fsubs
stc
adc
lahf
shrb
rclb
repnz
mov
cli
ljmp
scas
jecxz
mov
add
fisubl
jae
xchg
cmpsb
cmovne
inc
mov
sbb
mov
dec
sub
push
xor
test
into
out
push
leave
mov
xchg
push
sbb
daa
nop
adc
in
xor
jae
cmpsl
adc
cld
jecxz
push
orl
cmc
aas
add
dec
or
xchg
inc
daa
fdivs
sbb
push
adc
stc
fcompl
fs
out
xor
jae
jo
clc
in
xchg
dec
mov
subb
out
es
in
xchg
sbb
push
xchg
pop
jbe
xor
jp
call
or
test
or
xchg
xlat
inc
sbb
cmp
mulb
ret
and
lahf
xor
test
mov
xor
ja
mov
lods
push
sub
stc
into
xlat
cld
mov
add
repnz
hlt
out
int
aaa
loop
outsb
pop
or
push
jne
mov
fiaddl
adc
add
mov
pop
das
or
shrb
movsb
sbb
mov
outsl
lahf
lahf
pop
aam
cwtl
sub
lea
repnz
push
add
cmp
adc
rolb
mov
jnp
roll
push
cmp
out
push
cmp
xor
and
jne
in
imul
mov
fmull
cmp
jl
sbb
mov
scas
xchg
mov
add
sbb
lock
out
dec
xchg
sbb
test
add
adc
rorl
inc
pop
into
mov
cmp
lds
arpl
std
cmp
outsb
shl
lret
enter
fisubrs
dec
cmpsb
shr
mov
push
lds
inc
xchg
pop
and
mov
ds
jae
jnp
mov
int
sbb
rorb
je
nop
test
sub
sub
pop
jb
mov
mov
repnz
push
pop
sbb
jb
mov
scas
in
push
fiadds
ss
add
sahf
mov
and
jne
movsb
pop
dec
in
popa
je
adc
cmpsl
jae
adc
or
enter
imul
or
imul
int3
fwait
adc
cmp
cmp
push
lea
push
daa
mov
xchg
loop
repnz
leave
mov
xor
rcrb
cmc
mov
jle
js
mov
and
mov
sbb
cmc
jns
jge
cli
jg
cli
push
fbstp
push
xchg
or
orl
dec
mov
jo
fwait
fwait
pushf
mov
inc
fisttpl
test
and
or
int
inc
lahf
xor
cmp
mov
xchg
xchg
outsl
and
jb
lcall
pop
pushf
scas
jae
xor
arpl
dec
sbb
mov
xor
sbb
pop
jo
dec
int3
jle
enter
mov
mov
mov
pop
in
sarb
loope
daa
jg
stos
mov
xlat
sub
negl
out
pop
aaa
jae
mov
pop
es
lcall
dec
jnp
repnz
in
lea
mov
into
lret
lret
movsl
adcl
loop
insl
jno
aad
inc
loop
dec
daa
jge
imul
ret
jns
jge
adc
wrmsr
xchg
mov
and
adc
add
scas
and
cmc
ds
in
hlt
mov
movsb
aaa
sti
xor
arpl
sbb
nop
hlt
sti
mov
out
jns
ds
mov
sub
fdivs
pop
adc
xchg
cmp
sahf
inc
loopne
dec
cmp
sub
cli
mov
or
inc
lock
lret
mov
aam
in
push
lods
ret
test
mov
sub
adc
insb
in
das
inc
xchg
mov
decl
jnp
cli
xchg
mov
add
jb
cmp
sbb
sbb
insb
movsb
mov
cmp
dec
mov
xor
lret
mov
add
in
out
or
jecxz
fimuls
aam
int3
in
lahf
pop
out
push
data16
jnp
icebp
popa
stc
push
or
xchg
inc
mov
int3
arpl
cmpsl
push
stc
xor
cmp
fstl
test
ds
sarl
adcl
sub
enter
xor
test
mov
mov
mov
and
cmp
or
jecxz
lds
fwait
push
adc
jl
pop
push
or
adc
mov
daa
call
mov
add
sbb
orl
jecxz
movsb
push
push
cmp
nop
jecxz
jne
loop
rcrb
and
in
xor
call
ss
shl
ficomps
add
jno
arpl
xor
stos
addb
and
pushf
inc
mov
std
adc
lods
and
shll
ds
jae
loopne
adc
xchg
mov
push
inc
sti
loop
adc
mov
scas
push
mov
fs
push
ja
imul
pop
or
lods
or
pop
jl
aam
aaa
jae
scas
jp
hlt
cmp
lret
and
or
or
mov
aas
xchg
inc
shrb
cmp
jb
data16
enter
cmpl
fidivs
adc
push
out
jnp
adc
cmp
test
add
xchg
mov
and
gs
jp
fucomp
test
cmpsl
les
gs
shrb
sahf
adc
sbb
scas
es
cmp
sahf
cmpl
jecxz
inc
xchg
jmp
in
inc
std
dec
loope
lcall
lds
xchg
or
dec
sub
push
jb
mov
mov
cmpsb
jp
xor
lret
mov
inc
stc
iret
decl
add
adc
pop
arpl
mov
stos
push
cmp
sbb
cld
es
aam
in
push
test
repnz
add
cs
push
sub
fdivrl
cmp
sub
in
mov
cmp
add
mov
je
pop
jne
mov
xor
fidivs
xor
scas
jmp
dec
pop
out
mov
mov
popa
dec
fildl
or
cvttps2pi
leave
fldt
hlt
ljmp
fsubs
pop
in
xor
insl
mov
mov
or
pop
jno
mov
cltd
jge
dec
jmp
dec
or
jecxz
insl
push
lahf
enter
add
stos
jge
jnp
cmp
mov
cwtl
pop
mov
jne
add
mov
mov
cmp
sbb
jmp
adc
test
in
push
std
push
movsb
ss
mov
clc
gs
mulb
mov
xchg
shlb
scas
mov
outsl
test
sahf
ds
mov
imul
jne
int3
das
adc
push
adc
addr16
jo
jbe
and
xchg
cltd
test
data16
fdivr
aad
outsl
jae
movsl
aas
data16
mov
lret
es
mov
cmpsb
inc
jmp
cmpsb
mov
mov
cmpsl
dec
xor
and
xor
pop
inc
pop
js
cmp
push
lock
std
mov
in
ss
xchg
xlat
ljmp
xchg
pop
cmp
push
sahf
aam
enter
mov
jg
stc
popa
das
adc
inc
mov
xor
sbb
out
push
inc
add
arpl
cltd
das
add
mov
xchg
push
out
dec
add
jecxz
xor
fsubrl
rcrl
and
loop
cwtl
cmp
inc
add
dec
daa
jl
mov
cmp
dec
lods
pusha
fildl
push
xchg
cmpsb
dec
cwtl
pop
xor
add
ljmp
xchg
cwtl
add
sbb
add
dec
cmp
in
test
insb
jae
stos
es
cld
sub
push
or
cmpsb
insl
ljmp
cmp
movsb
scas
popf
inc
xor
ja
cltd
and
adc
cmpsb
inc
jecxz
in
les
lcall
sti
pop
xor
sarb
jb
es
loope
out
jmp
jg
push
xor
data16
pusha
xor
fdivr
sahf
inc
andb
push
mov
repz
inc
cmpsl
mov
orb
mov
dec
pusha
movsb
fs
xor
cltd
scas
sbb
dec
addb
imul
ss
mov
mov
or
mov
cmpl
mov
xor
out
hlt
inc
inc
movsl
mov
iret
pop
push
inc
add
insb
ror
inc
lock
xor
dec
lea
xchg
test
mov
xchg
lret
test
movsb
add
movsb
mov
mov
arpl
fwait
out
out
and
enter
lods
dec
cmp
inc
int
loop
ret
xlat
daa
stc
lret
jae
outsb
pop
nop
push
sub
outsb
and
xor
fstpl
ret
jnp
idivb
and
aad
pushf
dec
inc
push
out
sti
mov
inc
out
outsb
jp
jge
mov
and
mov
sbb
add
sbb
nop
add
cwtl
and
lret
or
and
inc
mov
jp
push
mov
cmpsb
scas
test
sub
jmp
push
cmp
pop
push
mov
movsb
out
enter
inc
rorb
push
xor
and
fstl
jecxz
mov
push
add
leave
sbb
loope
popa
fucomp
bnd
push
ret
dec
loope
popa
and
jl
in
dec
bound
mov
int3
dec
ret
mov
push
and
pop
lods
fxtract
int
mov
push
pop
inc
mov
jl
jne
mov
sbb
fsubr
push
ret
cmp
inc
sbb
push
cld
push
in
and
fcomi
gs
data16
add
jo,pt
cmp
mov
test
dec
add
xor
push
mov
orl
test
mov
movsb
aas
icebp
in
adc
sub
int3
jp
cmc
outsb
pushf
out
mov
add
sar
je
out
xor
repnz
lods
cmc
clc
pusha
xchg
pop
inc
gs
mov
inc
lea
push
adc
out
roll
cmc
adc
cmp
sbb
mov
dec
xor
ret
gs
sub
xchg
outsl
stos
mov
xchg
push
and
adc
in
scas
push
jle
push
lods
test
jecxz
insb
inc
push
and
or
and
inc
pop
in
aaa
mov
push
sub
fwait
sarb
fistl
add
scas
outsl
or
dec
xor
push
je
and
scas
jno
sub
sub
adc
xchg
outsb
pop
iret
notl
outsl
xchg
rcll
stc
or
mov
mov
xchg
sub
paddq
adc
pop
xchg
mov
cs
scas
cwtl
adc
mov
ficomps
cs
lea
call
popa
aaa
pop
les
jno
cli
int3
xlat
andl
dec
aam
cli
or
xor
scas
inc
orb
repz
inc
add
xor
jle
adc
lret
xor
pop
mov
fisubrs
sub
inc
insl
pusha
lods
out
xor
ljmp
shll
out
xor
js
iret
and
pop
aam
xor
loop
cmpl
popl
sub
test
jecxz
fcmovu
pusha
dec
sbb
fsubrs
mov
test
stc
add
jae
xchg
mov
sub
sub
repnz
cmp
call
mov
mov
ljmp
adc
mov
inc
pop
insb
sbb
out
jg
mul
ret
adc
and
sub
push
add
clc
sbb
lcall
inc
repz
imul
nop
je
push
test
in
aam
dec
ds
add
mov
dec
inc
ds
rorl
cmp
cld
xchg
movsl
and
lret
jne
sahf
cmpsl
mov
adc
lea
call
xchg
pop
xlat
xor
scas
enter
inc
int3
cld
jge
jno
push
shrb
pop
inc
dec
scas
xchg
cwtl
roll
mov
out
orl
inc
cmp
inc
jmp
pop
jecxz
movsb
lods
arpl
push
and
test
mov
out
test
dec
mov
mov
cmc
adc
mov
lret
push
xchg
icebp
xlat
pop
das
test
xchg
mov
fsub
mov
in
dec
icebp
lds
fbld
lds
fwait
movsl
arpl
adc
sub
ljmp
sub
xor
repz
leave
pop
test
add
hlt
subb
pop
mov
or
xlat
or
jmp
imul
push
movsl
hlt
or
test
imul
jo
stc
mov
loope
fdivs
aas
test
jl
xchg
jl
ret
sub
nop
int
sbb
icebp
dec
sub
das
dec
push
fucomp
cmp
pusha
dec
repz
mov
aad
es
sub
inc
rclb
clc
cmc
sbb
or
stos
adc
or
sub
push
mov
das
and
push
shlw
bswap
enter
cwtl
loop
clc
or
pop
or
jbe
cmp
les
inc
add
sub
mov
inc
std
sub
pop
stos
xchg
ss
or
imul
out
add
lea
stos
xor
pop
std
es
ljmp
xchg
testb
or
xchg
mov
sbb
pop
xor
cwtl
push
test
jge
or
push
xchg
aaa
lds
add
jb
or
sbb
movsl
jno
jns
test
cmp
test
jl
or
sub
cmpsl
mov
adc
call
test
pop
sbb
inc
fs
push
jp
in
in
aaa
shrl
fucomip
pop
data16
imul
dec
mov
mov
fsubl
cmc
movsbl
xchg
adc
cmp
arpl
mov
cmp
mov
es
scas
inc
repnz
imul
lods
mov
sahf
mov
push
in
fldenv
add
repnz
push
jb
jno
jo
jae
nop
add
inc
pop
mov
mov
andb
jl
mov
cmpsl
mov
sti
fcomp
dec
psllw
mov
push
fcoms
cwtl
or
add
bound
inc
inc
hlt
jge
incl
cmp
pop
xchg
bound
cmp
sub
in
mov
add
lahf
dec
and
xor
sbb
add
sub
test
ret
loope
into
pop
call
mov
mov
pop
int3
nop
call
or
in
mov
jl
mov
pushf
pop
and
inc
lods
cmp
lods
jmp
arpl
cmp
mov
clc
mov
test
int
call
es
push
add
test
pop
idivb
add
outsb
sahf
rcrb
out
nop
aad
stos
xlat
xchg
jbe
lret
jns
pop
push
adc
mov
inc
pop
mov
dec
out
outsb
adc
jno
out
in
fcomp
jmp
cwtl
and
cmp
cmp
xchg
dec
mov
sub
cmp
fldenv
js
fiadds
xorb
inc
mov
mov
or
shll
es
xor
fsubrp
or
decl
sbb
mov
cwtl
loop
popf
jmp
and
inc
scas
mov
adc
cmc
fs
cmp
mov
js
mov
pop
dec
or
add
add
push
es
mov
jae
dec
sub
dec
and
pop
mov
dec
out
fcompl
jns
mov
sbb
std
jno
mov
fcmove
mov
mov
or
jl,pn
dec
addb
sub
cmpsb
test
fs
and
aad
pop
mov
inc
sbb
into
cmp
rcr
inc
insl
into
sahf
scas
pop
cmp
pop
pop
xor
lcall
jmp
mov
inc
shll
fisubs
push
in
das
sub
loop
icebp
mov
add
jns
movsb
rclb
or
int3
stos
mov
mov
divb
loope
shll
insl
mov
adc
fs
fcoms
adc
out
mov
jo
ja
cmp
and
push
push
sar
out
cmp
pusha
ljmp
fists
dec
xchg
or
mov
dec
pop
push
mov
inc
movsb
cwtl
push
int3
inc
dec
sbb
outsl
out
icebp
cs
fisttpl
aaa
mov
lock
mov
repnz
inc
iret
push
push
adc
dec
push
fstpt
push
xchg
inc
and
mov
outsl
lods
jp
jnp
lcall
shl
scas
push
mov
dec
sbb
pop
xchg
leavew
add
mov
cmp
mov
inc
lds
cmp
bound
lea
cli
sub
or
mull
hlt
add
leave
push
movsb
cmp
xchg
push
jle
insb
outsb
mov
push
jnp
dec
js
ret
jl
adc
movsb
test
lcall
mov
daa
in
mov
popa
in
cs
or
mov
dec
xchg
shrl
int3
or
sbb
mov
dec
test
popa
xor
cmpsl
gs
lret
add
pop
inc
dec
xchg
dec
cltd
ljmp
test
pop
push
xor
lcall
daa
mov
xor
in
xor
or
mov
and
inc
sbb
mov
push
insb
inc
dec
adc
dec
es
inc
sub
mov
xchg
mov
rcrb
or
adc
mov
pop
xor
enter
sub
xchg
sub
pushf
dec
in
stos
pusha
dec
push
outsl
add
mov
bound
jbe
mov
out
mov
jb
cmpsl
pop
pop
sbb
mov
add
aad
add
jbe
pop
js
in
cmc
loope
out
cmp
out
popa
xchg
pushf
nop
aam
ret
lahf
mov
push
stos
or
sbb
pop
mov
jge
xor
aam
sahf
fwait
icebp
jbe
repnz
push
dec
cmp
data16
rcrb
out
and
sub
push
aas
stc
test
ficomps
int3
xchg
push
enter
test
pushf
mov
lods
pop
jl
mov
fisubl
out
js
cli
jnp
inc
pop
push
jne
jle
leave
loopne
xor
mov
rcrl
mov
dec
aas
adc
adc
xchg
pop
add
sub
fdivp
and
scas
idivl
sahf
adc
mov
xorb
push
adc
es
add
add
xchg
sbb
gs
enter
js
aas
adc
fstpl
daa
inc
and
xor
cmp
js
push
cs
sbb
and
hlt
jnp
decl
push
mov
and
push
data16
repnz
stos
mov
jo
rcrb
sbb
mov
dec
mov
data16
xchg
ljmp
sub
and
lret
adc
lret
sti
pop
jl
or
sbb
js
push
addr16
xor
inc
sbb
aas
iret
dec
jp
or
insb
add
pop
fldlg2
idivb
mov
inc
mov
dec
ret
sub
push
mov
dec
vpmacsdd
cmp
mov
jp
push
pop
sbb
outsl
and
sbb
fs
lret
inc
dec
mov
sbb
push
ja
xchg
inc
inc
mull
jns
mov
inc
enter
jp
xlat
sub
fcmovne
pop
dec
cld
jno
mov
lret
fdivrs
les
pop
repz
mov
push
xchg
xchg
jp
ljmp
add
push
cmpsl
dec
rclb
subl
jb
addr16
dec
outsl
dec
call
or
mov
lods
or
xor
sub
mov
daa
hlt
in
pop
ret
imul
xorb
dec
jge
mov
imul
fidivs
xchg
jp
repz
adcb
jecxz
jmp
ljmp
sbb
xchg
dec
mov
out
cmpl
shrb
aaa
xchg
pop
and
bound
xor
outsl
in
sub
popa
pop
gs
adc
or
cmp
in
mov
fcmovb
pusha
xchg
fldt
push
jp
divl
push
push
jns
dec
mov
sub
inc
repnz
decb
jle
lcall
ret
and
loopne
js
rorb
negb
inc
aas
icebp
cltd
rcrb
repnz
xorb
sbb
adc
sbb
mov
xorl
mov
pop
insl
and
pushf
push
sbb
stos
nop
xchg
daa
mov
aas
clc
ud2
outsl
es
cmp
aad
test
sahf
enter
sbb
cmp
lahf
stc
or
pop
xlat
fwait
add
stos
sbb
inc
xor
push
rorl
cmpsb
leave
xchg
and
adc
sub
adc
fadd
jae
lock
sub
or
pop
loope
loopne
out
xchg
dec
xchg
mov
out
mov
lods
daa
lahf
or
enter
pop
or
rdmsr
push
fstpt
lods
push
std
jp
jae
outsb
ljmp
mov
loope
adc
int3
pop
cli
pop
test
lods
popa
adc
sbb
inc
stc
nop
sbb
insl
push
lea
sbb
addr16
rorl
nop
test
mov
lcall
jne
cmp
out
inc
inc
std
lock
inc
and
mov
aaa
nop
cmp
mov
cmp
mov
or
por
mov
imul
cmc
pop
dec
sahf
movsb
adc
mov
xor
sbb
jbe
inc
xchg
lods
xchg
test
inc
insl
or
bound
insb
ljmp
pmuludq
or
popl
jecxz
jle
iret
mov
ret
jae
das
adc
xchg
mov
rcll
in
push
dec
push
das
sbb
cld
stos
stos
mov
adc
add
cmp
mov
add
arpl
ret
sbb
shl
push
inc
fnstsw
sub
xchg
mov
gs
jge
push
lea
cmp
pop
cmp
or
or
cltd
inc
cmp
popa
mov
push
cwtl
mov
inc
pop
cld
mov
pushf
add
xor
daa
clc
mov
cmp
or
cltd
ss
lock
xlat
test
jae
dec
xchg
or
pop
sets
and
enter
jae
hlt
fbstp
cmp
xor
mov
mov
das
clc
dec
and
orl
fstps
dec
jecxz
dec
into
ljmp
xchg
and
sbb
mov
xlat
test
xor
enter
imul
repnz
dec
mov
cmpsb
fs
int3
xor
in
mov
dec
outsl
in
jnp
sbb
ds
and
rcl
xchg
sti
in
gs
pop
xchg
jg
xor
aaa
pop
ror
clc
mov
pop
fstps
sub
pop
loop
mov
mov
dec
enter
out
out
lret
push
mov
mov
js
imul
ss
lret
push
mov
xlat
imul
sbb
in
push
mov
mov
jbe
push
add
fildl
or
lret
push
notl
jp
cmp
ljmp
outsl
inc
dec
add
jg
xchg
mov
fsubp
shll
fimull
incl
fs
mov
lock
cmc
outsl
gs
adc
popa
shrb
mov
ret
xchg
push
rclb
scas
dec
addr16
dec
jle
pop
fldl
mov
sub
mov
adc
or
add
xchg
ja
inc
mov
ds
addr16
hlt
or
test
popf
ss
lock
movsb
mov
cmp
stos
cltd
mov
leave
pop
fcomps
fs
out
dec
in
mov
test
pop
xor
clc
sub
cli
xchg
decl
popa
push
pop
mov
xor
mov
out
fsubl
mov
out
pusha
cli
std
dec
int
std
js
test
jg
js
cmp
out
insb
pushf
shlb
popa
and
mov
adcl
and
sti
negb
insl
lock
in
sub
and
and
push
mov
jp
cmp
iret
std
cltd
cmc
scas
dec
adc
jmp
inc
arpl
dec
nop
cmp
push
bound
adc
scas
repnz
ret
xchg
adc
pop
dec
gs
xchg
push
mov
lret
aaa
fcomp
loope
mov
es
push
xchg
push
xchg
sahf
call
ret
and
add
mov
xchg
cmp
xor
cmp
mov
push
test
testb
lock
jae
or
adc
pusha
imul
dec
sbb
call
pop
shl
fxch
lret
jne
imul
aad
jp
or
test
mov
adc
push
test
mov
loope
aad
pop
cvtps2pd
cs
adc
popa
inc
push
add
pop
pop
sbb
std
push
xor
add
fimuls
cld
shll
and
stc
into
cmp
and
mov
pushl
mulb
xor
sarb
in
scas
pop
dec
fidivrs
xor
das
cmpsb
xchg
pop
jne
insl
cmpsl
xchg
dec
push
in
call
shll
daa
jge
sub
inc
aaa
push
mov
or
mov
and
pop
or
incl
sbb
add
add
inc
aaa
cmp
mov
xor
or
jmp
shl
jb
test
das
jmp
dec
ret
aaa
xchg
data16
adc
dec
call
push
movsb
in
rclb
cwtl
add
xlat
pop
add
cmpsb
shlb
inc
or
clc
sti
dec
pop
les
cwtl
cmp
cltd
repz
mov
pushf
mov
movsb
xor
sbb
out
in
xchg
fldl
xlat
jns
push
mov
aaa
xlat
shrl
lock
jecxz
add
iret
cmpsb
int3
aas
jbe
push
movsl
xor
pushf
mov
mov
jns
scas
das
mov
push
pop
mov
sbb
xor
lods
aaa
lahf
cwtl
xchg
add
cmp
clc
push
jmp
and
jecxz
push
ljmp
and
hlt
loop
rclb
jge
mov
inc
mov
rcr
and
jae
pop
lret
inc
sbb
pop
adc
out
mov
push
jecxz
adc
aad
dec
call
cltd
cmp
jle
dec
and
bound
mov
add
and
sbb
ljmp
loop
enter
cmpsb
pop
inc
push
aad
pop
xor
jl
jg
inc
in
xor
jge
movsb
orb
sbb
cltd
dec
mov
and
and
xchg
es
and
addr16
into
fsubs
sbb
sub
adc
fwait
dec
loopne
cmpsl
int3
addr16
cli
cmp
mov
or
or
dec
cmpsb
mov
loopne
xor
mov
jb
pop
dec
out
push
clc
lock
xlat
mov
in
jns
das
fcomps
mov
pop
adc
sbb
add
jnp
jp
push
mov
inc
pshufw
xchg
jno
xor
outsl
cli
icebp
xchg
sbb
fldl
jge
lcall
out
mov
sbb
lret
mov
pop
lret
jmp
out
adc
orl
push
outsl
dec
add
jno
icebp
into
cmp
inc
sbb
and
lods
or
rcrl
and
lock
and
int
movsl
mov
loop
bound
and
loop
mov
js
mov
test
pop
inc
cmp
sub
xchg
stc
movb
pushf
enter
outsb
mov
lahf
clc
cli
cli
imul
cli
mov
xor
inc
ljmp
jo
push
cmp
push
sbb
or
cmc
xchg
jo
aam
subl
xchg
stos
cmp
jae
sbb
je
xlat
ss
aad
mov
into
xchg
lds
pop
sbb
and
adc
or
cwtl
push
sahf
addl
jp
scas
xlat
mov
pushf
add
sub
sub
imul
push
pop
sub
shrb
leave
push
push
adc
jmp
jne
shlb
jo
cmp
xchg
popf
fdivs
pop
inc
nop
scas
xchg
inc
pop
xchg
loop
add
inc
push
test
scas
mov
xchg
cmc
adc
rcl
or
movsl
xchg
jno
cmp
jne
imul
cli
daa
loopne
icebp
mov
data16
push
push
push
cmp
icebp
jns
shlb
xchg
mov
jno
jecxz
cmpsl
lods
aaa
pop
sbb
nop
jl
inc
sub
jg
daa
and
mov
mov
dec
sub
cmp
jo
lock
push
and
jge
inc
adc
adc
das
sbb
movsl
xchg
xchg
jo
or
mov
xor
ret
mov
int3
test
xor
pop
inc
out
inc
push
popa
outsl
cmp
sbb
push
cwtl
pushf
jae
xchg
movsb
inc
cwtl
xor
pop
push
adc
adc
aam
pop
pop
fistl
lods
lret
cmp
div
bswap
push
movsb
sub
jge
add
adc
push
sub
adcb
xor
enter
pop
ret
insb
ljmp
add
sarl
faddl
push
push
popa
fdivs
mov
out
mov
mov
mov
test
outsl
daa
pop
xor
xlat
xlat
adc
ret
scas
push
idivl
jle
loopne
cmp
push
pusha
das
sub
mov
cmp
push
out
bound
imul
loop
or
adc
pushf
out
add
inc
sbb
movsb
jg
fstpt
cli
mov
cmp
mov
and
sbb
sub
pop
stc
lret
cmc
lock
lret
loop
dec
or
pusha
inc
cli
mov
mov
pop
push
pop
insb
and
ret
add
jecxz
sbb
push
add
aas
fnstcw
sarb
jo
mov
sub
or
cmp
push
aad
popf
mov
lea
orb
int
lods
sbb
bound
imul
stos
xchg
clc
fsubp
push
push
sbb
cmpsb
mov
das
stc
xchg
sub
dec
iret
roll
inc
push
fsub
pop
dec
insb
popf
lret
sub
push
cmp
and
ret
push
sbb
xchg
and
test
test
cmp
pop
mov
test
xchg
adc
fdivrs
xchg
cmpsl
mov
sbb
adc
pop
mov
test
xlat
add
add
test
icebp
xor
xor
in
gs
sbb
dec
movsl
sbbl
pop
call
push
aas
or
xlat
inc
xor
jmp
outsb
out
mov
ret
inc
call
ret
cmp
pop
test
xor
sub
icebp
fldcw
jp
push
xchg
stc
and
cmc
xchg
pop
cmpsl
mov
push
ja
pop
jmp
jns
dec
xchg
dec
decb
mov
xchg
notb
ficoms
pop
xchg
jp
adc
add
mov
sub
aaa
mov
xor
pop
xchg
sahf
frstor
shll
mov
lods
fisttpll
imull
cmpsl
test
mov
xorl
vmwrite
cmp
or
aam
adc
mov
roll
or
xor
dec
fs
pop
mov
push
fistps
xor
leave
xor
push
inc
cs
push
rorl
mov
mov
popf
cmp
rcr
scas
sub
bound
enter
jmp
fisubrs
sub
sub
adc
test
js
adc
and
je
jmp
pop
jp
out
rol
fstpt
lret
mov
dec
xor
xlat
sub
mov
xor
jae
fisubs
xlat
repnz
fidivrs
popa
mov
mov
mov
fs
les
stos
jmp
mov
int3
outsl
int
scas
es
scas
mov
cmp
push
xchg
mov
mov
stc
popa
push
je
lret
push
mov
pusha
adc
push
adc
lahf
mov
mov
scas
rcl
push
je
xchg
xor
test
lea
mov
xchg
sarb
scas
mov
cmp
sub
mov
scas
mov
add
xchg
cmc
scas
push
and
jmp
cmpsl
rorb
sub
push
fcomps
xchg
sbb
fwait
dec
in
and
pop
pushf
leave
in
out
sbb
cmpsl
inc
dec
aad
and
dec
das
je
sub
xchg
call
imul
dec
xchg
mov
or
pop
aas
and
fmuls
xchg
das
lea
leave
stos
enter
mov
xchg
push
aaa
stos
xchg
sbb
push
sub
push
lret
add
in
es
outsb
mov
dec
imul
xor
xor
push
cwtl
fisttpll
xor
and
and
in
adc
test
int3
pop
xor
fwait
xlat
xchg
xchg
push
jl
jle
addr16
sub
dec
push
sub
add
dec
ficompl
dec
lods
or
or
dec
cmpsl
jecxz
mov
test
pop
fs
xor
outsb
mov
inc
sbb
sub
push
clc
push
push
js
cmp
pop
icebp
and
daa
roll
adcb
cmp
movsb
scas
xchg
pushf
dec
xor
and
sub
push
pop
jbe
mov
jmp
inc
clc
add
inc
push
push
imul
iretw
out
jge
fcmovne
cmpsb
mov
fdiv
inc
add
mov
test
imul
subl
mov
test
jno
fdivrs
int
iret
push
arpl
inc
mov
push
test
out
cwtl
je
aam
push
pop
inc
cmc
insl
xor
jae
les
arpl
xlat
fiaddl
enter
mov
mov
push
orl
fisubrl
xor
ja
call
call
xchg
scas
push
in
fisttpl
add
sbb
lret
cwtl
ja
scas
pusha
fs
test
mov
leave
imul
outsb
shll
and
frstor
mov
xor
pop
sub
adc
cs
ret
push
lret
inc
lds
pop
outsb
iret
mov
pop
pop
or
xchg
jmp
shlb
sub
mov
inc
mov
js
imul
sub
push
xchg
iret
mov
pop
ret
stc
flds
sub
jb
test
in
int
jb
inc
cmp
addl
inc
rclb
sbb
out
daa
or
xor
stos
xor
dec
xor
aam
mov
notb
fnstcw
xor
in
shl
mov
popf
popf
sub
inc
scas
in
xchg
xorl
mov
dec
adc
push
cmp
mov
mul
js
mov
mov
push
adc
sub
fstpl
mul
mov
les
add
jecxz
in
data16
out
sar
pushf
and
xor
ficoml
and
dec
cwtl
pop
sbb
push
pop
pop
adc
stos
adc
mov
xchg
sbb
sub
pop
pop
push
cmp
ret
pop
scas
and
out
add
add
in
daa
and
jbe,pn
scas
mov
stc
rcrl
mov
das
out
dec
push
test
push
adc
adc
les
cmp
adc
imul
inc
sbb
xor
test
mov
xchg
stc
test
aas
sub
cmc
sub
aam
ds
jle
je
repz
clc
push
lea
mov
pop
mov
fisttpll
gs
loop
sar
je
mov
mov
movsb
lds
pop
add
add
roll
adc
ret
dec
mov
out
imul
jmp
insl
dec
mov
and
pushf
mov
les
dec
shr
int3
movsl
pushf
jo
xchg
addr16
fs
loope,pn
adc
sbb
dec
jp
test
stos
je
test
inc
pop
lahf
sub
fildll
pop
cmp
sub
xor
loopne
mov
mov
inc
jecxz
cld
out
fcoms
in
jne
xor
adc
dec
std
mov
adcb
mov
inc
and
mov
lds
cmp
int3
pop
add
cmp
daa
mov
sub
jp
ret
insl
cwtl
sahf
sti
inc
lahf
int
icebp
push
mov
leave
enter
xchg
sahf
lods
mov
enter
iret
jg
or
cmp
cmp
fisttps
mov
lds
push
dec
sub
push
pushf
sub
dec
into
add
aas
rclb
or
lcall
lahf
hlt
rcrb
pop
mov
cltd
add
or
pop
shll
and
inc
and
push
into
aad
xchg
ljmp
sub
xor
shrb
fiadds
and
aam
cmp
jg
jp
and
push
mov
mov
or
insl
mov
scas
repz
jg
aam
imul
movsl
sahf
xchg
rcl
mov
test
lcall
addb
push
adcb
mov
xchg
adc
call
inc
hlt
cmpb
inc
fimull
movsl
nop
inc
sti
pop
push
andl
or
and
enter
xchg
stos
ficomps
fs
test
inc
xchg
dec
and
jnp
ffree
pop
jp
fdivrl
push
cmpsl
aad
data16
subb
popa
xchg
and
out
sub
repnz
ret
sbb
fwait
mov
adc
jae
aad
test
mov
mov
ss
out
imulb
mov
add
cs
loopne
mov
out
pushf
mov
aas
mov
in
xchg
push
dec
ret
scas
test
cwtl
xlat
xchg
aas
push
mov
pop
jne
pop
jno,pn
les
ret
mov
mov
mov
adc
aaa
push
divb
int3
inc
int
dec
pop
or
in
loopne
inc
and
add
inc
outsb
mov
imul
fidivs
mov
aam
xor
divl
loopne
pushf
int
stos
push
ja
pop
xchg
les
pop
sbb
fs
push
shr
add
jns
xadd
xchg
into
fists
fsubl
mov
icebp
dec
mov
push
scas
rorl
lret
xor
test
xor
xor
mov
xlat
test
shl
cli
pushf
stos
repnz
frstor
lret
aaa
je
sub
data16
xor
ds
in
lock
clc
or
mov
test
add
lods
and
jne
lret
lahf
xchg
adc
lods
jno
js
gs
lods
push
fdivs
pop
and
xchg
jnp
adcl
jmp
fisubrs
jb
add
daa
sub
xchg
pop
cmp
jmp
test
mov
dec
aaa
clc
ffree
jae
pop
fildll
fidivrl
frstor
js
inc
fwait
pop
into
scas
popl
fbstp
xchg
and
sbb
mov
movb
pop
dec
cmp
inc
ja
adc
sub
xchg
decb
in
pop
dec
sti
adc
or
jl
push
sbb
xchg
ss
loop
xor
xchg
scas
mov
popf
imul
xor
out
aaa
xor
and
or
cld
clc
or
jecxz
scas
cmp
cltd
stc
pop
lods
mov
inc
out
push
leave
and
in
out
out
test
loop
sbb
inc
or
in
das
mov
je
or
jo
sahf
push
adc
in
jl
outsb
pop
mov
sbb
fstp
xchg
jmp
sub
inc
lcall
mov
jg
aaa
es
cmpsb
pop
xor
test
adc
pop
mov
loopne
xor
popa
jbe
or
and
je
jne
push
push
loopne
jne
shrl
fwait
inc
cmp
scas
dec
out
dec
mov
out
sub
pushf
or
aas
insl
shr
popa
mov
push
or
and
sub
into
popa
cmp
test
gs
mov
mov
mov
jmp
cmpsb
in
mov
shlb
cmp
sbb
lcall
in
movsb
sub
in
in
loop
pop
pop
push
gs
aam
sub
pop
in
aas
stc
adc
dec
sub
out
icebp
jne
insl
cmp
hlt
fbstp
inc
add
adc
pop
push
loope
xchg
addr16
xlat
or
out
inc
push
out
add
jb
mov
mulb
mov
inc
add
in
aas
addr16
inc
and
cmp
imul
stos
rorb
inc
sub
ss
cmp
rorb
inc
sbb
sbb
jg
in
call
jbe
adc
icebp
es
popa
cmc
bound
mov
sbb
lret
pop
cmpsb
orb
push
or
inc
pop
lds
scas
fcomp
and
push
push
push
jle
add
loop
adc
in
mov
add
or
sub
aad
inc
sbb
das
xlat
lea
test
mov
repnz
lock
push
adc
mov
ss
addb
pusha
or
cmpsl
lcall
aas
cwtl
sbb
jmp
stos
iret
pop
lea
clc
or
hlt
sbb
mov
cmc
xchg
xchg
iret
out
dec
or
cmp
xorb
out
pop
jns
cmpsb
cmp
sbb
add
lods
loopne
pushf
xchg
ds
mov
lds
push
mov
int3
es
cmp
es
jo
mov
xchg
pop
and
xchg
and
dec
mov
cmp
sub
add
jg
fwait
ds
add
je
cmpsb
in
test
push
stc
inc
into
dec
add
fisttpll
sbbb
dec
mov
ret
cmp
xorb
cmp
jge
jno
xchg
outsl
daa
movsl
sbb
fcoml
pop
or
lds
in
imul
pop
loopne
cs
mov
or
mov
mov
sbb
inc
xchg
lods
ljmp
mov
push
jecxz
in
movb
push
mov
sub
add
dec
jg
xor
inc
sub
lods
fnstsw
or
mov
inc
cmp
jne
xchg
inc
lret
and
flds
pop
sbb
mov
dec
dec
pop
sbb
enter
mov
add
sbb
dec
pop
cmp
movsb
data16
inc
inc
mov
je
lods
push
jns
pusha
cmp
mov
xchg
insb
add
sub
cmp
cli
movsl
insl
test
scas
adc
movsb
sbb
in
nop
adc
and
inc
sti
cmpsb
pop
mov
bound
xchg
aas
xor
pop
data16
pop
ret
hlt
les
mov
loope
insb
addr16
sub
push
adcb
and
rcll
sbb
mov
lret
inc
orb
adc
or
and
outsl
add
mov
push
add
cli
shll
add
mov
testb
out
push
jecxz
xchg
xchg
xor
inc
xchg
hlt
pop
fldl
or
stc
push
pop
cltd
inc
je
sbb
pop
sbb
rcll
sarl
add
popa
mov
sbb
cmpsl
sahf
jb
mov
sahf
mov
pop
fbld
hlt
ds
testb
fistl
and
mov
mov
xlat
mov
stos
xor
lcall
lock
leave
arpl
popf
dec
add
or
lcall
ljmp
adc
test
push
mov
addr16
mov
pushf
adc
ds
inc
fisttpl
push
cmpb
sbb
int
rol
add
shl
mov
cwtl
das
fnstenv
jmp
lock
pop
pop
scas
lock
scas
jmp
out
lds
or
mov
mov
rorl
in
fists
add
adc
jnp
dec
jns
enter
stos
jl
xor
cwtl
sahf
movsl
pusha
insb
mov
sahf
jecxz
xchg
cmc
lcall
mov
jns
xor
fbstp
mov
rclb
es
dec
mov
sbb
andb
filds
je
sahf
fbld
movsl
push
add
jle
xor
mov
adc
call
scas
fucomp
jecxz
pop
xor
sub
cmpsb
subb
mov
dec
outsb
push
movsb
and
sbbb
out
sub
cmp
mov
sub
mov
mov
pop
mov
xor
add
gs
add
cwtl
xchg
mov
ret
test
ret
sbb
shlb
iret
fldcw
aas
jmp
inc
pop
push
enter
xchg
xor
and
push
add
mov
icebp
jle
cmpsb
add
rcrb
sti
sti
sbb
xor
push
pop
and
inc
push
fsubl
test
icebp
pusha
clc
push
ret
cmp
cltd
dec
inc
idivb
hlt
xlat
mov
jb
test
fmuls
jle
loope
not
jnp
xor
pop
mov
cmp
sbb
xor
sub
enter
fs
fst
ret
das
call
sbb
xor
inc
test
ljmp
sub
push
test
int3
xor
add
sbb
shr
push
mov
lea
bound
and
sbb
cmp
addr16
fcoml
in
cmpsl
out
mov
sbb
sarb
or
inc
sub
mov
leave
cmp
sbb
jge
int3
xchg
scas
lcall
cmp
fsubr
and
or
arpl
xlat
jecxz
mov
test
push
mov
test
repz
fsubrs
inc
xor
in
jge
cmpsb
int3
dec
cmpsb
out
push
insb
mov
cli
es
inc
sub
xchg
lcall
ss
incl
dec
pop
pop
xorb
pop
and
hlt
xor
scas
decl
inc
xchg
outsl
push
mov
mov
stos
cmpsl
push
cmc
mov
mov
sbb
and
repz
mov
jbe
xchg
popa
and
aaa
mov
pop
push
ret
cmpsb
dec
mov
das
movsl
gs
and
rcl
iret
push
lahf
icebp
xchg
fildl
lret
rcl
jnp
jns
mov
es
iret
outsb
add
fld
loope
addr16
jb
mov
adcl
sub
jnp
xchg
insl
sti
stos
fnsave
mov
movsl
push
jl
mov
cld
clc
xchg
inc
or
popf
aam
test
xchg
lds
jle
enter
sbb
jb
push
movsl
into
push
or
mov
pop
mov
in
add
sub
out
repnz
pop
sub
arpl
lods
inc
pop
pusha
aam
mov
inc
pushf
cmp
mov
jmp
fistpl
nop
cltd
cwtl
fcomip
enter
adc
into
shll
pusha
pop
or
hlt
rcrb
pop
aas
or
inc
repz
aaa
and
iret
pop
loope
mov
insb
xchg
or
pop
hlt
sbb
mov
mov
in
lods
aaa
pop
push
mov
xchg
mov
add
mov
orb
sub
xor
sbb
inc
lret
in
inc
sar
or
cmp
fs
push
out
fbld
js
dec
jl
imul
xchg
in
sarb
mov
or
and
repnz
jmp
shlb
pop
cmp
sbb
mull
jmp
xchg
mov
fnstenv
in
movsl
push
jb
inc
cld
popf
loopne
ja
pushf
pop
pop
jns
mov
faddl
push
pop
ja
xchg
push
xor
mov
or
jne
pop
mov
popa
jns
mov
xor
jecxz
leave
pop
leave
push
push
aam
push
in
orb
roll
js
pop
and
clc
test
xchg
call
fldenv
iret
mov
mov
push
push
mov
stos
jmp
push
ret
je
sub
mov
or
stos
into
push
jl
dec
lea
rorl
fs
mov
rcrl
xor
cli
sub
mov
xchg
jne
test
mov
jbe
loope
and
hlt
pusha
mov
adc
cs
mov
mov
cmc
out
aad
or
pop
dec
mulb
in
ja
sbb
mov
inc
jbe
and
push
aaa
mov
int3
pop
inc
lahf
cs
stc
imul
jmp
dec
inc
test
jmp
add
inc
aaa
mov
arpl
push
lea
push
add
mov
hlt
push
push
jb
lock
mov
fisubrl
xchg
dec
in
mov
out
jecxz
jmp
mov
add
incb
js
stos
push
jo
jbe
out
add
out
pop
and
insl
mov
jmp
adc
xchg
mov
xor
outsb
dec
pop
adc
push
movsb
cpuid
fsubrl
push
mov
dec
add
cli
mov
jbe
sbb
jns
hlt
fistl
rclb
jne
pushf
mov
mov
in
fisubs
pop
xor
ds
add
repz
cmpsl
add
mov
adc
cmp
arpl
push
xchg
sti
ret
sub
inc
in
cmp
mov
sar
sti
xchg
popa
sub
sbbl
mov
jbe
push
not
insb
xchg
mov
adc
cwtl
pop
mov
mov
test
jge
call
pop
sub
or
pop
jb
ss
mov
inc
fdivp
out
or
and
cmpb
and
xor
stos
sti
mov
pop
jg
andl
les
sub
daa
fs
cwtl
jge
jno
sbbl
dec
sub
sbb
mov
jno
mov
add
lods
xchg
inc
lahf
mov
dec
dec
jo
push
add
mov
jecxz
aas
out
cmp
mov
add
mov
push
test
push
out
leave
aad
std
cmpsl
gs
sti
mov
jno
inc
add
push
adcl
sbb
test
jle
inc
adc
sbb
outsb
cmpsb
std
ret
lcall
cltd
pop
inc
ds
lcall
mov
aam
xlat
in
xlat
data16
scas
leave
call
ficompl
jecxz
jo
fstl
push
cmpsl
cmp
into
nop
cmpl
add
inc
mov
mov
mov
mov
dec
loope
xchg
push
dec
into
movsl
cmc
movsb
mov
jl
inc
add
lcall
inc
pop
mov
jb
push
lods
pop
push
mov
push
mov
push
pop
xor
fadd
sub
shrl
imul
or
imulb
cmpsl
pop
in
movsb
push
not
lock
mov
mov
subl
cs
imul
addl
out
dec
xchg
std
scas
mul
jns
add
lods
sbb
mov
in
mov
test
adc
mov
xor
cmp
test
sub
data16
js
mov
mov
jmp
xchg
mov
jno
test
loope
fdivs
in
daa
lea
pop
call
sub
ret
mov
sbb
es
test
into
cmp
das
lea
jae
rorb
aas
push
jle
cmc
mov
leave
stos
dec
adc
add
inc
aam
and
pusha
adc
repnz
sub
aaa
sub
nop
cs
in
pop
rcrb
dec
rolb
mov
ja
mov
mov
sbb
cmp
test
dec
jmp
in
lods
adc
or
dec
sti
xchg
pusha
cmp
mov
pop
les
mov
mov
fcmovnbe
sub
fnstcw
mov
cmpsb
jae
std
jns
ret
sub
loopne
mov
push
jg
cmp
lock
test
pop
inc
in
outsl
je
mov
sbb
test
pop
sbb
rorb
xchg
inc
popf
lea
xchg
xchg
push
frstor
push
mov
mov
xchg
pop
mov
lret
mov
mov
cmp
clc
sub
lcall
and
test
and
loopne
pop
inc
xor
xor
xchg
das
sub
scas
clc
xor
pop
lahf
pusha
push
movsb
jmp
push
sahf
mov
mov
or
push
xchg
add
adc
xchg
lods
mov
inc
sbbb
add
sti
fwait
push
lcall
and
imul
in
sbb
pop
cwtl
insl
push
cwtl
cmc
pop
jge
outsl
cmp
pop
stc
sbb
cmp
addb
xchg
movsl
cmp
mov
sbb
jmp
mov
out
in
pop
fnstenv
jb
cmp
popf
add
or
fucomi
iret
mov
mov
xchg
ret
add
mov
lret
adc
cmp
movzbl
es
loopne
sub
mov
pop
insl
test
add
cmp
nop
mov
mov
sbb
pshufw
cmpsl
scas
int
xchg
out
pop
cmp
shr
test
and
testb
sub
shr
imul
or
loop
jns
mov
and
push
rol
pop
and
aas
and
fsubs
sbb
mov
ljmp
movzwl
jb
dec
fnstenv
js
andb
push
push
imull
xchg
mov
lods
je
xchg
daa
push
cmp
cmp
aas
push
rcll
insl
cmp
cld
cmpsl
pop
push
push
add
push
cmpsb
imul
pop
mov
mov
or
or
and
movsb
test
das
iret
and
pop
fisubrl
aam
int
push
divb
scas
push
ret
sub
and
jp
push
push
or
jb
clc
mov
insb
mov
imul
rcr
sbb
test
addr16
loope
jae
outsb
jns
bound
stc
xchg
add
dec
divl
scas
pop
dec
js
clc
into
inc
xchg
sbb
mov
int
cmp
jnp
scas
call
mov
sbb
jge
mov
mov
sbb
sti
aas
cltd
imul
sahf
pop
and
cmc
cmp
scas
sbb
sub
or
or
enter
nop
ror
mov
pop
sbb
jae
jb
or
mov
pop
pop
nop
push
add
sub
cltd
hlt
adc
cmpsl
cmp
bound
xor
sub
rcr
jle
into
push
inc
mov
prefetcht0
cmc
push
mov
ret
add
dec
mov
xor
hlt
call
inc
mov
push
fidivrl
cmpsb
mov
add
mov
or
mov
cmp
out
loopne
cmp
popf
pop
push
imul
popa
mov
cwtl
movl
stc
fcomi
inc
cmp
std
aaa
inc
xchg
jno
adc
ret
sbb
fmull
jle
push
dec
or
mov
push
jge
in
movsl
das
cli
jp
push
mov
add
adc
in
push
into
sbb
inc
fucom
and
sbb
movsl
jae
addr16
pop
xchg
jo
into
mov
data16
inc
cmp
lock
in
jns
dec
or
adc
jp
and
xor
mov
or
mov
std
jmp
into
xor
test
jne
lds
cmp
shll
js
push
leave
sub
jmp
or
shll
jnp
je
das
push
jg
sbb
imul
push
mov
dec
dec
cmp
or
insb
arpl
rcrb
lods
adc
pop
addl
cmp
sub
sub
jp
outsb
xchg
ljmp
mov
xor
and
jne
loop
pop
aam
ja
push
rcrb
mov
loope
pushf
xchg
jo
cmp
adc
add
mov
mov
lret
xchg
subb
and
pusha
cmc
push
adc
sub
and
inc
add
or
sbb
shrb
notl
sti
lahf
pop
cmc
pop
or
push
iret
test
repz
mov
in
pop
iret
lret
inc
sub
or
or
mov
out
jge
xchg
fldl
add
lea
rorb
xchg
repz
jno
mov
imul
pop
inc
enter
repz
jbe
loopne
rcrb
lock
lods
mov
jg
push
cmp
mov
inc
cmpsb
lcall
imul
sub
hlt
stc
fcmove
lahf
cmp
aas
or
xlat
test
ss
fs
cmpl
aas
or
sahf
jg
pusha
xchg
fbld
shl
movsl
adc
fildll
std
jns
imul
pop
add
das
sub
in
add
ror
push
xchg
mov
sbb
in
mov
adc
dec
ljmp
pop
add
pop
popf
sti
add
mov
gs
or
int
pop
movsl
push
dec
pop
stos
push
push
mov
test
scas
adc
xor
aaa
push
push
dec
loop
adc
je
mov
mov
sar
add
aam
rcrb
mov
mov
popf
jno
push
jmp
push
and
mov
mov
jg
cmpl
stos
cmc
push
cs
ret
stos
sbb
jmp
sarl
divl
mov
outsl
cld
lret
nop
mov
imul
fimuls
ret
call
lods
inc
cmp
xchg
cs
sbb
cmc
insl
add
adc
incb
or
push
aad
xchg
mov
aad
xlat
jecxz
sub
add
mov
xchg
lret
pop
cmpsb
enter
out
pop
mov
nop
out
push
ret
leave
push
aas
fisubrl
pop
cmp
notb
in
mov
dec
push
inc
push
stos
add
and
sahf
ror
sbb
pop
testb
inc
shrl
push
aas
mov
shlb
out
push
in
xor
ret
inc
leave
loopne
in
jmp
xchg
ljmp
cld
cmp
inc
aaa
push
add
sbb
xchg
test
scas
cmpb
adc
inc
add
jle
push
mov
mov
lds
fisttpl
imul
mov
fiadds
pop
sub
pop
out
mov
jae
push
jl
shrb
and
js
rcl
jecxz
mov
out
xor
test
je
test
dec
dec
lods
cmp
ficomps
push
repz
adc
out
fs
call
fwait
repz
lret
and
into
sbb
outsb
push
insb
mov
adc
int3
cmp
adc
jmp
dec
leave
sub
pop
add
jb
call
insl
jg
push
icebp
test
loop
mov
mov
sbbb
pop
add
cli
inc
gs
dec
mov
roll
orb
mov
int3
add
xor
mov
ror
jo
stc
cli
push
dec
push
pop
jecxz
fbld
cmp
jb
mov
adcb
imul
inc
push
and
sbb
jne
rorl
adc
sbb
iret
sbb
jg
loop
dec
es
mov
dec
hlt
data16
std
jl
stos
cmp
sub
sub
jo
pop
loopne
and
test
push
add
enter
test
jb
adc
stos
xorl
in
ljmp
enter
pushf
push
or
lret
add
rorb
add
movsb
add
cld
jnp
dec
sub
xchg
add
shll
sub
inc
aad
imul
lods
cli
mov
mov
jae
mov
sub
cltd
push
jb
pop
mov
aam
sub
push
mov
cwtl
filds
cmovnp
punpckhwd
adc
dec
mov
push
xlat
out
and
pop
xor
sbb
push
add
lods
or
jae
mov
aam
lahf
popa
mov
and
lcall
nop
cmc
push
dec
push
lret
icebp
movsb
std
xor
sub
fsubr
test
ljmp
lods
xchg
hlt
nop
stc
es
jns
sbb
cmp
jmp
bnd
stos
dec
pop
out
test
jae
out
fisttpl
cmp
xlat
dec
lods
fldcw
adc
daa
push
inc
mov
pop
add
adc
test
pop
sbb
push
push
negl
xor
in
cmc
and
inc
cld
lods
and
in
jp
xor
ss
ds
ret
mov
in
jbe
fists
mov
test
loope
xor
or
jge
rorl
dec
movsl
inc
xchg
inc
lds
enter
cmp
lds
clc
outsl
xchg
repnz
push
pop
in
mov
ret
push
add
call
mov
jo
in
inc
loop
mov
movsl
and
xchg
aam
push
lret
and
rolb
js
aad
dec
ret
xchg
xor
pushf
loope
add
insl
pop
mov
sub
hlt
xor
jle
or
jle
inc
sarl
pop
jecxz
mov
mov
mov
stos
mov
call
fdivl
leave
xor
mov
out
cmp
pop
stc
add
sti
hlt
in
jle
cli
and
mov
push
pusha
xchg
mov
aad
and
cmpsl
xchg
cmp
jbe
cli
mov
or
inc
psrld
cmp
idiv
dec
ds
into
xchg
jbe
lret
scas
and
dec
cs
ret
sbb
cmpsb
popa
add
push
mov
dec
xor
rorb
mov
add
jl
dec
mov
aam
sahf
pop
fsubl
testb
mov
sub
mov
cmpsl
xchg
jns
mov
mov
xchg
scas
into
and
mov
mov
mov
loopne
inc
fiaddl
dec
and
adc
cmp
and
imul
sbb
insl
mov
sbb
xor
jb
testb
fsubrs
aam
aam
sub
sti
iret
push
stos
jbe
add
lock
sbb
jmp
jae
lock
mov
dec
push
pop
jno
jns
sahf
out
push
sahf
shl
orl
repnz
cs
sar
ret
and
xchg
ljmp
xor
xchg
test
xchg
sub
pop
or
fidivrs
scas
sub
cmc
push
andl
add
jae
fld1
test
fs
outsb
iret
ret
or
mov
sbb
mov
in
aam
push
scas
jae
xchg
lods
stc
and
test
insb
cs
in
mov
mov
imul
dec
loopne
fwait
cmc
xchg
enter
idivl
movb
or
inc
xlat
loope
dec
pop
sbb
out
imul
loopne
mov
shr
ss
add
in
clc
dec
mov
je
inc
aaa
push
fidivrl
hlt
imul
pop
xor
lods
pop
xor
xchg
ljmp
sub
cmc
sbb
push
inc
pop
out
pop
loope
subb
mov
loopnew
sti
or
pop
pusha
mov
mov
or
rorb
push
lods
push
int
cld
mov
adc
mov
into
xchg
enter
xor
addr16
sub
movsb
adc
scas
ljmp
mov
pop
push
mov
aaa
jmp
testb
movsb
test
jb
fcoml
cld
movsbl
sub
mov
lds
xchg
mov
popa
in
sub
das
scas
xor
leave
stos
aam
scas
dec
lds
loopne,pn
push
add
movsb
inc
or
bound
in
insb
mov
sub
stos
and
xchg
jle
loopne
arpl
gs
roll
push
pop
jmp
pop
filds
out
push
movsb
adc
mov
mov
mov
or
mov
in
mov
pop
inc
lcall
mov
jle
add
clc
loopne
dec
add
lret
fcmovnbe
jmp
in
sbb
inc
mov
aaa
lea
add
cmpsb
sarb
mov
bound
test
repnz
sub
sbb
pop
testb
push
xchg
pop
cmp
unpckhps
test
dec
cmpsb
cmc
mov
adc
mov
clc
pushw
icebp
push
adc
add
push
mov
cs
push
xchg
outsl
jne
cmp
add
sub
mov
dec
bound
into
pop
pop
scas
inc
adc
arpl
pop
push
push
fdivrs
icebp
dec
loopne
add
popf
int
dec
orl
push
add
mov
hlt
hlt
das
out
fnsave
push
xor
push
rcll
add
and
repz
pop
mov
call
push
test
lcall
iret
popf
out
imul
into
adc
inc
faddl
mov
lcall
xchg
or
push
sbb
mov
test
pop
cmp
inc
mov
or
mov
pushf
into
ja
out
dec
xchg
jne
and
mov
xor
jne
push
push
sub
std
stos
sub
int3
test
jbe
add
in
hlt
aam
dec
insl
mov
lret
or
push
inc
xchg
stos
incl
push
mov
add
out
int
or
lret
mov
daa
std
inc
or
sbb
mov
shrb
pusha
mov
outsb
push
inc
mov
add
cmp
gs
test
lcall
dec
int
xchg
adc
fucom
add
xchg
ficomps
stos
mov
fiaddl
out
mov
inc
mov
imul
add
movsl
scas
mov
iret
jae
jae
pop
ja
or
adc
jg
int
das
mov
jecxz
inc
shr
jle
or
imul
cmpsb
adc
adcb
mov
pxor
pop
dec
pop
dec
and
fnstenv
mov
leave
sub
fisubrs
les
mov
mov
mov
cmp
mov
scas
sti
paddsw
xor
jae
or
dec
xchg
out
jns
push
and
xor
fildll
test
xor
outsl
cmpsb
pop
sbb
cmp
test
js,pn
and
int
or
sub
mov
sbb
movsl
loopne
xchg
jecxz
adc
adc
mov
or
jecxz
xchg
mov
or
mov
mov
popa
fsts
jmp
loop
add
iret
nop
xor
cmpb
push
pop
cltd
pop
jns
insb
in
scas
fucomp
pop
mov
iret
sbb
mov
pop
mov
inc
dec
jno
mov
arpl
lret
iret
xchg
daa
mov
ss
aaa
icebp
pop
arpl
clc
pop
adc
cmp
cmp
inc
sti
lock
mov
clc
pushf
pop
jb
cmpsl
cmp
ror
je
dec
inc
jnp
jae
mov
test
aad
cmpsl
out
cmp
cmc
or
push
xchg
xchg
frstor
les
inc
mov
mov
adc
dec
out
outsl
and
mov
inc
jl
and
fnstsw
push
xor
lahf
loopne
lahf
pusha
mov
dec
gs
call
loop
loopne
cld
push
std
das
mov
int
mov
xchg
xor
dec
jne
sbb
mov
jo
cli
adc
sbb
icebp
dec
pop
jno
sbb
out
dec
test
scas
mov
pop
push
pop
ja
mov
or
xchg
xor
push
rolb
sbb
std
jnp
leave
cmp
adc
dec
mov
cmp
xchg
jmp
pop
adc
test
pop
imul
fisubrl
xor
mov
sub
cmp
into
jge
out
push
cmpsl
test
lods
addr16
add
ja
fbld
data16
sarl
fcomp
xor
xor
ja
pop
test
mov
xchg
push
lds
mov
lret
in
adc
mov
lods
loop
adc
jo
movsl
popa
pop
rorl
lahf
fwait
repz
dec
int
lret
pop
inc
fisubrl
stos
pop
jecxz
push
ffreep
lods
push
cmpsl
arpl
mov
sub
mov
mov
das
cmp
inc
sub
daa
insb
mov
popf
ret
xor
andl
adc
jbe
shlb
fldt
jns
dec
adc
filds
je
jno
xor
insb
lahf
xor
mov
test
adc
and
sbb
scas
pop
cmp
cs
roll
push
push
in
sub
call
js
fwait
hlt
popa
sub
dec
mov
rolb
xor
stos
das
psubw
loopne
lret
dec
lds
repnz
fsubs
jp
jno
cmp
rorb
push
cmc
add
stos
pop
popa
push
xor
fs
adc
rolb
sbb
rorl
inc
sub
movsb
cltd
sub
lds
repnz
ja
mov
push
inc
push
push
sti
dec
sub
fsub
dec
int
xchg
xchg
xchg
or
push
mov
lcall
inc
in
sbb
or
mov
sbbb
icebp
popf
aam
addl
sub
das
adc
stos
int
adc
mov
jg
out
out
and
mov
xor
sub
addr16
adc
ss
js
loop
shrb
outsb
sub
lods
pop
cld
mov
call
jbe
and
popa
cmp
mov
subb
push
xor
sub
lods
jnp
inc
sub
sub
pop
rcll
mov
mov
into
cli
sbb
add
popa
dec
outsl
roll
and
pop
mov
mov
cwtl
cwtl
adc
adc
nop
rolb
sub
clc
call
sbb
out
jecxz
call
pop
mov
jne
adc
idivb
jg
sub
xor
pop
bound
out
in
xchg
dec
push
pop
outsl
iret
ret
leave
rcll
pop
mov
leave
mov
cmpsb
data16
pusha
jne
inc
nop
in
mov
push
xchg
fadds
sti
push
inc
and
inc
xchg
repz
movsl
add
xchg
xchg
sbb
jae
xor
inc
dec
inc
mov
cmp
test
mov
mov
pop
into
adc
ds
jns
mov
je
or
lock
or
cmovae
pop
dec
cmp
xorb
pop
jno
mov
xchg
scas
cli
pop
mov
sub
add
adc
dec
mov
cmpsb
sbb
mov
inc
mov
lahf
sub
mov
push
mov
ljmp
or
sbb
das
pop
hlt
jl
es
mov
mov
sbb
pop
insl
dec
jmp
aad
popf
adc
push
mov
into
mov
hlt
out
pop
call
arpl
or
jg
sbb
pop
aaa
es
test
leave
mov
cmp
pop
pop
roll
hlt
or
andl
ffreep
pop
pop
cs
jne
inc
xor
jp
fcoms
xlat
cmpsl
in
fbld
jo
adc
xor
inc
dec
inc
xor
enter
pop
xor
push
outsl
shrl
int
push
pop
andb
or
sti
xchg
mov
adc
jbe
lahf
push
sarl
inc
clc
and
fwait
mov
out
push
sbb
mov
push
ret
cmp
repz
imul
mov
cmp
xor
dec
xor
adc
movsl
dec
out
loopne
das
lcall
mov
shrl
mov
mov
test
cmp
sub
js
inc
gs
jmp
mov
mov
xchg
dec
es
mov
in
xchg
inc
imul
nop
imul
or
pushf
jno
shrl
sbb
or
fidivs
push
jmp
sbb
repnz
imul
or
dec
push
enter
out
popf
mov
push
lods
mov
ss
or
jno
xor
int
cmpsl
cmpsb
aam
mov
pop
xchg
enter
syscall
push
cmp
xor
shlb
stos
cld
outsb
xchg
lahf
push
int
je
fisttpl
mov
pop
pushf
jno
ljmp
mov
ss
xchg
sbbl
mov
jnp
inc
or
dec
cmp
push
lea
push
out
ror
xchg
inc
mov
add
cld
loop
cmc
push
mov
mov
xchg
test
mov
inc
adc
adc
jp
popf
das
lea
dec
ja
pop
clc
leave
push
into
pop
pop
je
mov
gs
movsb
and
dec
sub
adc
lret
ja
sub
mov
call
lahf
mov
sbb
bound
ss
call
jb
push
shll
mov
mov
dec
jmp
xor
lods
push
cmp
mov
dec
dec
and
movsb
mov
sbbl
loopne
push
sbb
xor
in
sbb
sub
xchg
mov
sub
idiv
cmpl
mov
and
mov
fnclex
push
jmp
jno
inc
test
mov
loopne
stos
jnp
ds
xor
and
stos
pop
xor
adcb
nop
test
shlb
dec
and
fucomi
pop
sub
sub
enter
xor
pop
stos
inc
fidivrl
push
in
jb
or
int3
bound
movsl
bnd
insb
jl
mov
cmpl
insl
das
or
nop
add
lds
mov
or
cwtl
cmpsb
fistpl
std
add
cmp
push
std
int
popf
adc
fldt
ds
ja
jecxz
push
jmp
shr
call
icebp
sbb
cmp
inc
jecxz
data16
xchg
ja
cmp
mov
data16
mov
jle
or
mov
imul
pop
mov
imul
cmp
or
arpl
jmp
fnsave
stos
mov
pop
jns
dec
and
aas
xchg
cmp
sub
data16
jb
ret
ret
dec
and
daa
sbb
dec
cmpsl
mov
shl
mov
scas
es
jo
das
insl
ss
push
insb
push
testb
push
push
js
addr16
in
mov
mov
mov
mov
mov
sub
rclb
cmp
lret
mov
cs
repnz
jo
lods
das
in
inc
or
add
jb
je
cltd
repnz
loopne
enter
rcl
test
add
dec
cmp
in
cld
cs
enter
sub
jno
ljmp
or
xlat
xchg
jle
cmp
xchg
add
or
bound
outsb
mov
jbe
mov
or
jns
fadds
adc
mov
imul
daa
cmp
or
stc
push
sti
push
shll
ror
popaw
xor
xchg
and
addr16
fucomi
inc
dec
ret
jge
pop
lds
lret
lahf
mov
mov
neg
loop
push
addr16
imul
scas
je
add
cwtl
inc
jae
mov
and
rcll
je
arpl
lods
stos
xchg
scas
out
add
jg
nop
xor
pop
lret
cmp
sbb
sbb
xor
dec
mov
das
testb
lock
mov
jp
sbb
lfs
mov
repz
movsl
push
sahf
clc
xor
and
pop
ret
jno
js
hlt
in
xor
or
sahf
xor
jecxz
subl
hlt
aas
vshufps
out
adc
push
mov
lahf
and
lea
mov
mov
popf
push
fmuls
push
inc
jns
imul
xchg
jo
imul
xchg
in
mull
inc
inc
xor
stos
movsl
pop
sarb
fwait
rcrb
and
cmp
inc
mov
lods
cmp
lcall
jg
shlb
push
push
fstpl
jne
test
lods
ret
repnz
imul
out
ss
mov
fwait
push
imul
out
or
mov
add
push
lea
mov
add
andl
sub
out
push
inc
dec
lcall
xchg
or
mov
sbb
inc
cltd
decl
shll
in
adc
popl
xchg
outsb
pushf
lea
xor
mov
gs
lahf
stos
cmp
mov
xor
push
ljmp
lock
mov
xor
adc
leave
xchg
adc
fwait
dec
sbb
adc
dec
aam
lods
inc
push
icebp
adc
mov
adc
cmc
xor
ficomps
mov
pop
ret
push
jno,pt
cld
cmp
subl
mov
mov
mov
or
push
xorl
xchg
add
push
push
ret
jecxz
icebp
jp
loope
jnp
sbb
lcall
fs
shlb
cmp
and
js
stos
sbb
cmp
mov
mov
cmp
movsl
in
das
xor
push
sbb
adc
aaa
xchg
lea
aaa
mov
xorl
push
les
fists
outsb
sbbl
pop
mov
incl
rcl
fildll
inc
jp
ds
push
in
dec
out
jg
in
pop
inc
mov
daa
sbb
cmp
mov
aas
xchg
xor
cwtl
scas
dec
push
xchg
dec
push
jecxz
push
adc
pop
clc
pop
xchg
popa
sahf
sub
stc
ss
js
in
and
mov
fdivr
cld
jle
mov
imul
add
dec
jnp
inc
stos
adc
and
dec
std
test
fwait
adcb
fwait
negb
pop
or
xor
int
cmp
push
pop
sbb
or
mov
bound
cmp
mov
pop
iret
lods
cmpsl
cmp
lret
lcall
jge
out
add
and
sbb
notl
adc
cmp
jns
roll
xor
jmp
lods
shrl
sahf
js
stc
rcr
pop
adcb
xor
in
das
or
fsubrs
jb
popa
mov
orb
inc
jle
xor
arpl
mov
mull
nop
daa
jb
ja
jnp
in
stos
fnstcw
aad
push
jo
xchg
imul
jg
push
mov
xchg
mov
rcrb
lds
xor
insl
mov
out
push
inc
jnp
push
add
xchg
sbb
add
cwtl
jmp
imul
xchg
pop
jp
or
int3
pusha
mov
insb
outsb
adc
mov
jb
mov
xchg
sub
icebp
jae
les
orb
incb
mov
jmp
jne
cmp
daa
out
insl
inc
inc
jmp
inc
fisttpll
or
sub
mov
sub
pusha
jno
cld
pop
sahf
inc
jmp
je
adc
or
add
jbe
les
dec
rol
xchg
mov
rcrl
insl
push
jae
adc
inc
fstpt
xchg
push
sbb
in
mov
cmp
dec
xchg
loopne
addr16
push
out
sub
in
add
movsl
call
pusha
lret
inc
neg
xchg
hlt
movsb
jg
std
xchg
mov
fiadds
mov
mov
add
out
mov
inc
and
cmp
pop
into
mov
and
pop
subb
xorl
jge
stc
mov
sbb
dec
aad
xchg
flds
nop
daa
pusha
sbb
inc
jns
es
rcll
sub
popa
popa
mov
iret
into
or
popa
cld
arpl
xchg
cs
pop
lods
loop
push
inc
aaa
pop
cmp
in
addb
mov
adc
pop
adc
pop
and
loop
sub
test
or
inc
stc
xor
inc
cmp
shrl
xor
gs
push
adc
pop
movsb
pop
outsb
cmp
xchg
popf
jno,pn
inc
push
lret
cltd
mov
out
sub
test
mov
aaa
or
jmp
xor
ss
pop
stos
pop
je
cmp
add
adc
cmpsl
loop
aam
mov
xor
arpl
and
lahf
jae
es
dec
mov
orl
subl
or
sub
sbb
cmp
push
imul
loop
popl
pop
lock
nop
insb
mov
and
ja
int3
jnp
insb
stos
ja
stc
jecxz
mov
cld
mov
stc
jecxz
inc
cli
movsb
mov
lock
xor
cltd
test
add
add
std
cmc
fidivl
sbb
sti
insl
jle
mov
dec
pop
or
popf
mov
lock
push
bound
cmp
sbbb
shll
mov
mov
fwait
mov
and
sub
sbb
jp
in
add
sbb
pop
mov
jp
and
dec
add
jp
lods
jmp
fisubrl
fidivrl
jp
das
xchg
mov
movsb
mov
or
das
xor
rorl
xchg
scas
adc
outsl
push
xchg
xchg
mov
fwait
jp
mov
ljmp
cmp
lds
jg
xor
cmpl
in
imul
lods
push
pop
pmaxsw
popa
push
je
add
out
pop
sbb
pop
mov
cmc
dec
ret
sahf
jle
mov
call
push
push
push
sub
or
fwait
popl
cmp
loop
in
out
jmp
or
pop
fld1
mov
imul
mov
xchg
pop
shlb
cmpsb
cmc
add
sub
lods
scas
dec
add
pop
sahf
pop
test
sub
or
pop
mov
dec
rorb
push
mov
test
sahf
inc
fidivrs
out
lock
sub
xchg
lock
push
call
adc
adc
imul
mov
jge
sub
xchg
mov
mov
dec
loopne
ss
xor
and
pop
or
and
add
outsl
cmp
xchg
mov
int
outsb
mov
xchg
cwtl
jne
push
cmp
rclb
out
in
xchg
sti
pop
jecxz
jl
das
test
loopne
clc
add
cmp
fdivp
sti
stos
mov
dec
cmpb
into
mov
cmp
mov
sub
pop
cmpsl
jp
in
or
movaps
sbb
jb
int
sub
sub
adc
out
inc
mov
push
sub
std
or
ss
test
mov
loope
inc
push
push
push
pusha
jmp
pop
xchg
or
inc
push
mov
insb
lods
dec
xchg
gs
das
test
std
stc
sahf
popa
imul
sub
jmp
fiaddl
or
push
mov
movsl
xor
push
jge
cmc
mov
jecxz
fimull
icebp
xor
scas
mov
sub
stos
jge
mov
inc
dec
fidivrs
cmpsb
test
fs
adc
rorb
mov
and
xlat
jb
sbbb
aas
in
fwait
lds
repnz
outsl
add
pop
pop
fisubrs
inc
lcall
mov
out
sti
aaa
mov
lods
cmp
insb
mov
sarb
stc
push
jmp
and
sub
or
bound
adc
std
jmp
push
popa
in
xchg
cmp
xor
iret
sbb
jno
add
stc
pop
pop
jbe
mov
inc
xchg
mov
mov
mov
loope
ds
dec
flds
adc
mov
enter
mov
rcl
pop
push
outsb
orl
inc
pop
mov
lret
icebp
repz
pop
fisubrs
imul
mov
mov
xchg
nop
arpl
add
sub
sub
xchg
dec
cmpsb
hlt
fisubl
push
push
xor
popa
pop
push
sahf
mov
inc
dec
out
ja
mov
pop
mov
jg
pop
add
lret
fwait
test
filds
sub
test
rcll
xor
mov
mov
std
test
and
xchg
nop
jp
mov
arpl
mov
ffreep
out
lret
ja
rcl
jge
arpl
fidivrl
mov
and
hlt
jb
pop
movhps
mov
or
sub
push
mov
fistps
lea
out
ficoms
and
xchg
lods
andb
jne
cmp
stos
rcll
jb
push
xor
cmp
fld1
pop
insb
in
out
jae
mov
cmp
mov
iret
cmp
out
js
jl,pn
dec
dec
cwtl
sub
jmp
pop
jge
repz
inc
fstpt
out
aam
jns
sbb
jle
lods
or
lods
xor
stos
mov
stc
sub
test
jnp
jno
cltd
sbb
sbb
movsl
inc
dec
mov
push
push
cmp
xorb
cmpsb
xchg
clc
mov
push
in
adc
pop
jnp
aas
sahf
push
inc
fs
sbb
pop
daa
nopl
fisttpll
imul
push
sub
ffree
std
jns
imul
movsb
mov
sub
cmpsl
test
into
insb
cmp
lds
je
adc
cmp
pop
dec
push
or
or
test
leave
push
pop
dec
idiv
sbb
xchg
mov
sub
mov
mov
imul
aaa
dec
cmpsl
call
js
test
xchg
hlt
rorb
ds
cltd
push
pusha
sub
imul
xchg
and
cmp
or
stos
sbb
adc
int
xchg
popf
std
pop
js
adc
push
jo
mov
int3
adc
into
jns
push
mov
push
int3
sbb
push
arpl
movsb
ss
pop
push
fcom
pop
push
xchg
xchg
jecxz
push
xor
ret
insl
xor
ja
cs
mov
incb
jmp
dec
and
jl
jg
push
leave
xchg
test
ja
out
imul
xor
adc
jmp
stc
dec
xor
inc
aad
mov
sub
xor
mov
xchg
or
adc
xchg
les
mov
imul
pop
movsl
dec
insl
sbb
jecxz
bnd
dec
pop
pandn
pop
xchg
insl
lods
mov
fldl
inc
pop
out
insb
and
adcb
aam
push
jae
ljmp
cmp
movsb
hlt
sub
in
daa
add
ds
mov
dec
xor
inc
sub
scas
mov
mov
les
xor
inc
test
xchg
push
pop
xchg
push
fs
sub
pop
fldz
fsubrs
mov
sti
or
mov
mov
stc
dec
subb
pop
mov
mov
cmp
pop
jb
inc
lret
xchg
mov
xor
les
lds
or
ljmp
enter
pop
push
push
jae
daa
rcr
xchg
cmp
xchg
jns
xchg
icebp
push
insb
sbb
popf
out
imul
movsb
jecxz
mov
mov
stos
pop
mov
je
or
dec
xchg
fldcw
xor
mov
dec
push
movsb
insb
loope
sahf
aam
icebp
test
add
decl
dec
dec
or
xor
insl
dec
mov
imul
mov
and
pop
adc
dec
or
sti
gs
sbb
xlat
scas
lock
cli
dec
xor
sub
dec
mov
les
pop
fwait
sahf
sub
aad
add
lock
arpl
mov
das
mov
xchg
hlt
dec
rcr
div
cmp
or
jle
xchg
or
cmp
into
sbb
into
xlat
sahf
xorb
cmc
mov
roll
jnp
sub
sub
addr16
nop
pop
sarl
dec
add
cwtl
mov
pushf
popa
fwait
les
pop
sub
fdivs
lods
xchg
roll
movsl
add
movsl
pop
dec
jp
outsl
sbb
fucomp
lods
mov
jle,pt
sub
and
push
cmp
mov
cwtl
fcoml
mov
ja
jb
mov
and
mov
lea
sarl
cli
stc
fsts
std
or
sbb
jae
repnz
aam
orb
xor
fcompl
test
sbb
orl
repnz
cmp
jmp
push
lds
mov
cmpsl
shrb
fucomip
pop
adc
or
mov
or
and
push
push
lods
popf
outsl
add
dec
test
dec
cltd
mov
or
aad
inc
cli
imul
call
jmp
mov
cmc
adc
sbb
js
pop
inc
jbe
mov
mov
out
mov
push
std
push
dec
shrl
movsl
mov
test
cltd
cli
sti
adc
dec
jnp
mov
and
sbbb
sbbb
ficoms
hlt
or
jnp
xchg
dec
xchg
insl
push
arpl
js
cmp
icebp
add
aam
mov
sub
or
mov
inc
add
fisubrs
jnp
or
in
pop
leave
sahf
adc
add
push
test
xor
clc
push
push
and
inc
stc
cmp
inc
stc
lock
icebp
jg
popa
popa
mov
gs
jns
pop
and
lcall
mov
pop
push
jp
inc
mov
hlt
daa
outsb
xchg
mov
lcall
dec
les
cmp
push
insb
jg
lock
sbb
out
rcl
pop
loope
rorl
pushf
push
push
lds
xchg
sti
dec
jmp
nop
inc
dec
enter
pop
test
push
mov
lods
cmp
call
jl
dec
mov
push
push
fwait
lret
mov
lret
add
adc
xor
xor
dec
js
pop
out
ret
bnd
test
mov
repnz
dec
out
in
dec
mov
sbb
out
test
mov
lcall
fisttpll
jns
lods
popf
push
fldcw
and
mov
mov
es
sbb
mov
inc
jmp
pop
aas
icebp
call
or
or
jb
push
loop
arpl
es
jge
stc
aas
pop
movsl
dec
std
loop
push
or
not
xlat
ds
jmp
jns
xchg
sbb
mov
enter
push
cmpsl
lods
aad
test
out
lds
dec
stc
push
ja
das
adc
or
fldt
lret
and
outsb
sbbb
xor
and
loopne
xor
adc
jnp
push
cltd
arpl
stc
dec
add
fwait
insb
and
mov
shr
dec
movsb
test
ret
pop
cmp
inc
jo
xor
aaa
or
divb
clc
jb
pop
mov
jge
add
xlat
mov
add
dec
aad
int
push
jae
adc
jne
jo
cli
in
mov
scas
pop
dec
xlat
sub
test
call
xchg
or
out
push
pop
adc
ds
loop
out
adc
enter
push
int
out
pop
xor
or
scas
cli
dec
cmp
stc
mov
sbb
pop
jmp
lods
arpl
push
iret
cmp
jo
ss
dec
mov
outsb
jno
cwtl
or
push
mov
xor
push
and
aas
je
xor
sub
sti
xchg
ja
and
scas
push
xlat
or
mov
pop
xor
out
xchg
cltd
mov
xor
negb
lahf
shl
and
popa
adcl
leave
cwtl
fsubrp
fcmovne
ljmp
mov
mov
add
or
ds
dec
adc
out
dec
dec
push
bound
and
xor
pop
cwtl
into
cld
out
and
sbb
adc
fs
scas
std
jno
les
fwait
jp
movsl
rcll
pop
scas
iret
xor
sbb
dec
push
int
mov
mov
cmp
adc
push
push
mov
mov
dec
add
mov
mov
les
or
enter
sahf
loop
sbbl
and
popf
jnp
or
pushf
sub
lods
out
mov
and
clc
aad
rcrl
icebp
lahf
pop
add
xchg
mov
fdiv
pop
push
aad
sub
push
sbb
push
xor
sub
stos
xor
push
pop
mov
sarb
mov
cmpsb
or
xchg
pushf
xor
cli
fldl
js
fnsetpm(287
lds
into
ret
sarb
cs
adc
inc
scas
rorb
aaa
jns
cmpsb
dec
sub
pop
xchg
sbb
push
mov
data16
jge
loop
es
pop
mov
cmp
leave
and
mov
rcll
jge
hlt
push
loopne
adc
xchg
pusha
fnsave
mov
outsb
or
fdivr
mov
sbb
jb
negb
cmpsl
mov
mov
pop
inc
addb
and
or
imul
inc
cld
lds
push
dec
push
mov
fldl
fsub
xor
shll
shrb
cmc
mov
sbb
inc
popa
leave
sub
jb
fisubrl
push
fwait
shrl
inc
push
es
fildl
cmp
addb
adcb
jne
fldcw
xor
xlat
pushf
sub
fcmovnbe
shlb
mov
lahf
lcall
dec
pop
inc
jg
xchg
lret
cmp
xor
das
imul
ds
inc
sbb
insb
adc
sarl
orb
enter
jecxz
mov
jnp
pop
cmp
out
cld
repnz
mov
xor
movsl
pop
ds
loopne
mov
mov
push
aas
int3
push
jecxz
sbb
fxtract
movsb
lcall
xor
cs
js
test
insb
cwtl
mov
jno
xchg
sub
das
or
ja
jg
xor
shl
lods
adc
les
dec
mov
jb
jnp
and
addr16
sbb
inc
and
pop
sahf
loopne
sbb
xchg
lcall
push
jecxz
sbb
add
arpl
cmpsl
add
fnsave
subl
leave
stc
inc
push
hlt
lret
ss
and
mov
push
cmp
push
insb
or
iret
cmp
movsl
popf
jle
jge
push
push
and
lods
scas
sar
adc
and
xor
jg
mov
xor
sub
mov
inc
loop
push
scas
arpl
xchg
dec
outsb
nop
dec
inc
mov
xchg
std
pop
stos
fs
repnz
mov
xor
in
lock
adc
imul
lret
cmp
mov
dec
mov
shrb
fsts
pop
std
sbb
and
popa
mov
cld
int
mov
iret
aaa
js
iret
jmp
pop
push
stos
fsubl
mov
testl
cmp
sub
mov
hlt
pop
cs
lret
jmp
pop
push
ljmp
cmp
inc
xor
aaa
loope
lahf
push
add
mov
popf
xor
jecxz
lret
pop
or
dec
mov
jbe
popl
sbb
mov
xchg
sub
outsl
push
in
add
test
cmp
jge
stos
test
xor
out
push
mov
add
dec
testl
adcl
push
int
sub
jg
dec
adc
inc
jb
mov
adc
adcl
stos
lods
pop
inc
sbb
adc
shr
mov
adc
ds
scas
clc
mov
sbb
cmp
xchg
push
cmpsb
inc
pusha
clc
lret
shll
xchg
mov
sar
fisttpl
js
pop
orb
lea
lcall
jbe
fucomi
mov
or
and
xchg
sahf
lahf
cwtl
sub
ds
ss
shr
inc
lret
rcrb
out
push
subl
cld
mov
fnsave
int3
xchg
scas
popf
call
and
std
jae
dec
jbe
les
jp
xor
mov
and
mov
xor
xchg
ret
inc
cmpsb
cmp
xor
xor
pop
pop
std
dec
jg
sbb
inc
sub
and
leave
fistps
inc
xlat
adc
add
and
or
or
sbb
mov
mov
sbb
pop
loop
mov
sub
xor
shl
lock
pop
jle
scas
inc
adc
or
and
aad
and
cmp
dec
sub
gs
jae
pushf
pushfw
movsb
cmpb
fwait
clc
pop
xchg
push
mov
call
add
call
cld
rclb
jns
mov
int
int
pop
shll
pop
dec
inc
jno
xchg
mov
out
xchg
sbb
cltd
inc
pop
push
sub
jmp
jns
lods
movsb
pop
repz
into
xlat
sahf
in
xchg
fnstcw
push
sbb
ja
sbb
push
push
pop
push
adc
adc
push
mov
xchg
xor
xor
xchg
mov
cli
cmpsb
scas
movsb
and
sbb
call
pop
scas
rdmsr
mov
lea
jmp
xchg
cmp
mov
or
nop
out
or
stos
adc
xchg
test
mov
into
or
shlb
ret
adc
mov
sub
addr16
imul
dec
mov
movsb
mov
sahf
lret
cvtpi2ps
jle
mov
sbb
imul
stos
lcall
mov
mov
lds
fistpll
inc
ficoml
adc
mov
sti
and
insb
push
sarb
xor
mov
sub
comiss
ja
sbb
imul
jg
pop
jp
cli
stos
cmp
into
or
cmp
xlat
mov
adcb
idivl
mov
jnp
push
mov
adc
fldcw
mov
sub
clc
jmp
test
out
jnp
or
add
loopne
in
aad
and
sahf
ds
inc
cmp
dec
push
xchg
push
add
cmpsb
call
dec
jp
mov
out
nop
cmpsb
lds
xor
enter
ror
or
loope
cmp
or
jb
lds
loop
dec
sub
pop
xchg
in
mov
dec
std
mov
imul
inc
lds
mov
add
add
mov
xlat
imul
adc
aad
sti
in
call
out
xchg
xchg
push
imul
sbb
in
stos
sub
jmp
outsl
fstl
fisttpll
cli
ficomps
add
and
inc
sarb
pusha
cmc
int
test
or
mov
xchg
shlb
cmp
hlt
mov
and
xor
cli
adc
and
sti
icebp
aad
or
cltd
or
ret
xchg
push
and
rclb
leave
dec
add
aas
push
mov
idiv
xor
pushf
xchg
psubq
iret
pop
lahf
outsb
mov
in
sub
pcmpgtb
sub
and
filds
sti
pushl
pop
adc
mov
push
loopne
int3
or
mov
mov
divl
cmpsb
sbb
mov
mov
cmc
or
adcb
in
and
xchg
jl
pop
push
subb
iret
decb
adc
fs
imul
add
mov
push
aaa
cmp
cmp
in
jbe
xchg
out
mov
cmp
mov
in
dec
into
mov
jne
jnp
iret
pop
adc
jle
xlat
push
fcomp
mov
lcall
push
inc
sbb
in
imul
stos
cmp
int
xor
loopne
cmp
pop
fwait
push
sub
sbb
call
lea
fsubrs
jle
das
in
and
and
loop
xchg
hlt
aaa
add
ret
ja
icebp
insb
jp
adc
ds
or
int3
test
or
int
pushf
xor
pop
popl
sahf
and
scas
pusha
fisubl
imul
aaa
scas
lods
adc
mov
push
mov
out
mov
mov
je
arpl
loopne
mov
dec
push
arpl
rcrl
orl
sub
arpl
sbb
loope
shll
and
bound
in
adc
inc
stos
divl
sub
cld
ficomps
xchg
dec
xor
movsl
xor
dec
and
xchg
ja
imul
loop
sbb
adcl
jp
push
add
das
in
cmp
testl
xor
repnz
scas
cwtl
push
ljmp
addr16
cmpsb
in
js
xchg
int3
int
jns
pop
sbb
jge
leave
and
les
and
add
lds
rcrb
xor
lock
inc
mov
sub
and
imul
and
pop
cmc
cltd
mov
ret
daa
adc
pop
imul
jp
daa
ljmp
cmp
pop
xor
jecxz
cmp
pop
xor
xorl
cs
mov
outsb
dec
test
jl
out
imul
gs
inc
and
insb
mov
loop
mov
mov
cwtl
test
cli
subb
xchg
sbb
xchg
xchg
pop
pop
iret
jno
ljmp
insl
inc
test
and
jns
sahf
and
leave
test
sti
dec
adc
clc
out
jae
xchg
pop
outsl
loopne
add
int
mov
jle
xchg
xlat
divb
pop
aam
dec
in
lcall
jl
sub
xchg
cld
stos
pop
in
adc
fldenv
cld
stos
out
xchg
inc
aam
adc
in
cmc
das
loop
xor
daa
inc
push
xchg
enter
out
xchg
test
pop
mov
adc
push
xchg
or
mov
lock
jb
cld
pop
add
andl
int
mov
ret
stos
push
je
push
mov
shr
in
jbe
lea
push
testb
pop
ljmp
mov
pop
in
add
mov
pop
sub
imul
dec
jb
inc
fs
jmp
inc
or
fsubr
mov
xlat
sub
mov
xor
xor
mov
cmpsb
hlt
ret
stos
mov
sub
add
and
sub
sbb
xor
dec
jle
dec
ret
cmpsl
fists
jmp
mov
out
in
nop
jo
push
outsb
int
ja
outsl
shrb
or
add
adc
cmp
xchg
push
lcall
cs
inc
movsb
sbb
push
js
lahf
sbb
popa
fisubrs
pop
aaa
lret
in
mov
fimull
fstps
lock
call
loope
push
xchg
jmp
inc
aas
data16
fcmovnu
adc
mov
and
aam
notl
adc
xchg
sbb
fcomps
xchg
loopne
test
cs
outsb
ret
push
outsb
mov
mov
or
push
cmc
stos
dec
lret
push
xor
mov
call
mov
cmp
ds
lods
pop
mov
cmp
lcall
sub
sti
mov
jae
sbbb
in
mov
mov
loope
lcall
xor
loope
adc
jecxz
hlt
adc
pop
out
bound
pop
int3
std
test
jecxz
mov
xchg
xor
dec
sti
xor
out
addr16
jb
or
mov
sti
jg
fs
mov
push
xor
and
insb
xchg
mov
adc
mov
js
lahf
in
push
and
add
bound
or
outsl
aaa
push
cld
cltd
insb
sub
hlt
lea
sar
xchg
xchg
in
adcl
push
sbb
cmp
mov
pop
push
sub
dec
or
cmp
jg
sarb
ret
sbb
add
mov
lock
int3
cmpsb
sub
or
jp
cmp
fnsave
sbb
and
cmp
xor
pushf
pop
jnp
xchg
mov
inc
mov
out
insl
fstl
sbb
testb
or
fdivr
cli
leave
push
movsl
push
addr16
jae
insl
pop
out
jo
imul
pushf
push
push
mov
and
jmp
nop
daa
cmp
sarb
scas
sub
fimuls
pop
iret
bound
pop
in
inc
push
mov
push
aaa
xchg
mov
cli
movlps
adc
lods
insl
sbb
cmpsb
mov
sub
sub
fwait
and
test
leave
mov
xor
subl
inc
inc
mov
xor
fadds
xor
xor
jbe
cmpl
sti
sbb
leave
and
pop
repnz
insl
xor
jg
int
sbbb
sbb
out
mov
adc
mov
cmp
addr16
pop
fisubrs
jne
movups
inc
cmp
popa
xchg
mov
cld
or
add
xchg
pop
jb
jae
lds
test
sbb
js
loopne
out
mov
push
mov
pop
jae
adc
repnz
pushf
aad
or
or
mov
lret
xchg
dec
out
incb
repnz
xchg
sbb
mov
mov
cmp
mov
and
mov
mov
jb
and
outsb
add
push
in
sbb
arpl
sbbb
popf
sti
fidivrs
push
es
mov
pushf
stos
lahf
sbb
jg
icebp
jmp
mov
xchg
jbe
inc
gs
xchg
sub
add
fdivrs
outsl
test
movb
adc
pop
push
or
jns
mov
dec
loope
adc
lret
mov
imul
xor
add
stos
sbb
mov
iret
or
cltd
jbe
pop
mov
adc
ss
shrb
push
roll
dec
sbb
mov
out
sbb
add
push
sbb
dec
dec
sbb
in
lret
jo
mov
inc
adc
jp
roll
adc
xor
mov
push
xor
mov
adcl
rclb
jbe
inc
add
faddl
sbb
hlt
adc
in
imul
inc
cmp
mov
mov
pop
sbb
lret
inc
int3
fsub
xor
lcall
icebp
pop
mov
les
shr
xchg
je
push
in
dec
jne
push
mov
subl
in
xchg
shl
or
pop
dec
rolb
adc
loop
adc
int3
imul
xor
jecxz
pop
add
jle
dec
repz
ss
or
les
pop
loopne
inc
add
pop
pop
je
mov
arpl
xchg
imul
dec
jecxz
and
bts
jmp
xchg
mov
andb
mov
sti
cmpxchg
ffreep
inc
ja
fdivrs
inc
dec
add
inc
dec
cmp
outsl
mov
fiaddl
xchg
or
jl
xchg
mov
ror
jno
sbb
sbb
jmp
cmp
mov
notb
pop
sbb
sbb
dec
ss
and
addr16
cmpsl
sahf
stc
sbb
std
mov
ficomps
inc
add
loop
jmp
xlat
ljmp
or
mov
fisttpll
fnsave
jns
fdivrl
std
adc
or
jp
bound
test
or
cmp
stc
add
testb
pusha
fcmovb
jp
jp
cmp
mov
stos
jne
jnp
inc
dec
adc
mulb
jg
aas
mov
jmp
leave
and
or
fwait
sti
and
loope
incb
fcoml
cltd
mov
pushf
fs
dec
mov
cmp
mov
inc
xor
incl
jge
fucomp
dec
add
aas
fisubrs
xchg
jl
int3
pop
pop
jp
jne
pop
push
sub
jns
in
addr16
and
gs
cmpsb
mov
in
pop
xchg
imul
cmp
inc
fs
or
lret
xchg
dec
dec
lods
nop
inc
push
push
scas
loopne
adc
fwait
stc
ja
shl
jbe
pop
jp
bound
cmpsl
adc
jp
gs
lret
mov
jmp
mov
mov
in
loop
jle
icebp
push
pop
je
shrl
xor
or
adcb
pop
repz
push
in
xlat
dec
iret
sub
mov
push
aad
fucompp
sbb
daa
and
ja
and
xor
int
cmp
xchg
jo
sahf
stos
and
adc
test
test
push
push
inc
and
fidivrs
jae
cmp
sub
mov
add
outsl
ja
xchg
popf
leave
shl
dec
jnp
enter
pop
xchg
mov
cmc
outsb
cmp
shll
jmp
push
adc
imul
lahf
pop
dec
fildll
inc
cmp
mov
ljmp
inc
inc
push
mov
mov
mov
sbb
push
inc
or
cmp
push
data16
sbb
mov
mov
add
sub
xor
sbbb
add
fcomps
mov
test
jmp
sub
outsb
fisubrs
imul
testb
push
push
inc
cmp
jae
out
stos
test
ds
xchg
mov
cs
ss
mov
mov
imul
and
aam
test
addr16
mov
sbb
enter
cmp
rol
pop
cs
push
add
mov
jne
lret
mov
mov
adc
lret
sub
je
adc
andb
xchg
mov
push
inc
popa
je
cmpsb
pop
push
int3
aad
jl
stos
ljmp
mov
shll
xor
inc
push
ds
punpckhwd
push
loop
or
mov
add
dec
dec
lds
mov
popf
aaa
scas
push
loopne
jae
popf
jmp
add
dec
cmp
lods
dec
gs
jne
cmp
push
pop
inc
or
out
jmp
scas
mov
or
sbb
mov
mov
mov
cli
loop
xchg
jg
sub
cmp
xchg
fistpl
incb
sbb
inc
lahf
int
mov
js
xchg
sub
ljmp
lret
dec
out
aas
jp
aam
and
sub
ja
cmp
arpl
dec
xchg
iret
fcompl
mov
sbb
add
mov
xor
rcrb
out
cld
orl
jge
mov
xchg
jae
imul
dec
add
adc
mul
pop
das
dec
scas
je
dec
std
pop
or
adc
xchg
into
in
cs
lahf
aas
cwtl
cmp
addl
dec
sbb
dec
movsb
jp
popf
sbb
mov
or
xchg
pop
mov
shrb
jl
fstl
add
push
pop
arpl
rcrl
adc
cmp
popf
mov
sub
inc
daa
test
inc
loopne
sbb
gs
cmp
jb
repnz
push
push
fcoms
push
and
sbb
mov
movsb
fldcw
add
mov
shr
sub
jg
mov
jg
cmp
sub
inc
and
ficoml
sbb
mov
mov
insl
and
mov
sub
lods
pop
test
fs
inc
fstpt
out
mov
inc
loope
arpl
sub
loop
aad
nop
or
ljmp
insl
dec
outsl
jb
mov
jbe
shrb
xchg
cmp
pop
ja
jnp
and
dec
in
in
out
sar
ljmp
jbe
push
push
cli
jno
sti
add
jge
jle
shlb
pop
out
std
push
mov
cltd
aad
fnsave
leave
bnd
and
hlt
dec
mov
adc
mov
cmpsl
ljmp
jne
movsb
and
mov
jns
sub
xchg
mov
arpl
inc
leave
es
into
xchg
dec
mov
mov
add
sbb
pavgb
jmp
es
scas
roll
mov
jp
std
mov
test
mov
pop
leave
pop
test
roll
jb
mov
xchg
push
cld
pop
pop
rclb
xor
cmp
xchg
insl
call
inc
xchg
ljmp
rcll
popa
dec
xor
adc
inc
jle
into
xlat
or
push
xchg
stos
cmp
and
aas
enter
and
fcmovnb
ja
xor
sahf
push
pop
xchg
inc
inc
icebp
xor
fcom
xor
jmp
test
mov
xor
ret
inc
inc
mov
stc
data16
roll
cmpsb
mov
mov
xor
mov
lods
push
lea
les
lret
fs
fs
push
outsb
loop
mov
adc
push
push
adc
iret
sahf
sub
cmp
push
inc
mov
testb
adc
mov
movsb
xor
mov
das
scas
mov
fmuls
xchg
jl
arpl
and
or
scas
push
add
ljmp
mov
dec
in
arpl
pop
cmp
ficomps
outsb
push
push
addr16
add
adcl
fmuls
out
sti
mov
ret
mov
xchg
cmp
les
jmp
out
adc
cmpsl
mov
jno
enter
pop
dec
adc
pop
popa
fs
fimull
sub
push
arpl
sbbl
adc
shlb
inc
cmpl
adc
xorl
push
js
xor
popf
popa
jbe
push
or
or
rcrl
nop
sti
sub
adc
std
mov
sarl
mov
repz
addr16
cmp
mov
cmpsl
mov
push
mov
pop
sarl
fwait
sti
dec
mov
into
mov
sub
push
push
mov
movsb
movsl
movsl
xor
push
add
jns
and
loopne
or
mov
aad
dec
fmul
movsl
call
mov
out
mov
mov
and
xchg
jge
mov
jg
xchg
adc
imul
hlt
push
inc
rcl
adc
rol
sub
jmp
hlt
sbb
daa
xchg
dec
xchg
adc
fcomps
push
inc
sbb
pop
inc
mov
dec
out
int
jp
das
stc
adc
movsl
mov
cli
lcall
push
pop
cmc
mov
int
cs
cmp
lods
mov
mov
jp
mov
push
arpl
ret
addr16
cli
mulb
push
out
inc
stos
sbb
loopne
stos
dec
push
test
aas
pop
pop
sbb
xor
cmpsb
into
jge
add
out
leave
push
addr16
sbb
imul
cmp
add
or
xchg
xor
xor
pusha
mov
popf
mov
gs
inc
cmp
addr16
push
js
daa
jb
fmull
leave
jp
xchg
sti
sbb
mov
stos
sub
sub
mov
pop
arpl
clc
in
sbb
jb
lret
xchg
mov
and
rcr
gs
je
push
das
sbb
push
adc
nop
add
ss
and
cltd
add
rclb
mov
sub
out
rol
daa
cmp
movsl
in
jmp
or
pusha
cltd
inc
mov
adc
call
aad
push
pop
jge
push
add
pop
fwait
pop
mov
rclb
lea
jae
ja
in
add
adc
fwait
das
cmp
pop
adc
push
add
clc
jne
loope
jno
mov
lahf
das
dec
push
daa
scas
cmp
push
cmp
or
les
or
mov
pop
push
ja
mov
pop
arpl
stos
sub
insl
es
xchg
and
rcr
adc
les
scas
in
aas
jnp
or
movswl
imul
cmc
mov
in
icebp
pop
in
mov
jge
fs
incb
out
insb
aad
or
and
push
xchg
bound
mov
fisttpl
or
sub
js
popf
pop
ret
ljmp
mov
mov
outsb
sbb
xlat
xchg
mov
loope
shll
incb
mov
mov
sbb
inc
push
mov
fldln2
out
in
movsb
or
add
sahf
xchg
mov
mov
insb
mov
and
sbb
xchg
xor
add
cmpsb
lcall
jmp
fiadds
xchg
out
mov
pop
xor
pop
and
fcmovbe
dec
xchg
push
loope
jno
shrl
stos
outsl
pushf
mov
mov
imul
cs
pop
mov
mov
xor
add
xlat
fcmovb
sbb
nop
rcrl
sub
push
ret
xor
insl
in
pop
adc
sbb
jmp
xchg
fldcw
mov
es
cmp
fiaddl
fidivrl
addr16
push
int
dec
test
mov
in
dec
xchg
pop
ljmp
cmp
xor
stc
sub
dec
pop
stc
mov
push
jne
lods
xchg
pop
stos
into
adc
out
test
leave
test
jg
xchg
inc
sbb
pop
add
lcall
pop
rorb
ficompl
sahf
xchg
sahf
fwait
mov
stc
test
out
aad
dec
pop
cmp
ret
test
mov
inc
inc
lret
lahf
mov
dec
aam
fstl
ds
daa
jecxz
adc
movsb
and
sub
lcall
pop
js
ds
aas
popa
sar
or
test
mov
cmp
sar
jno
push
outsb
movsb
inc
jle
xchg
sub
imul
aam
cmp
mull
rcll
sahf
out
dec
out
in
jne
lcall
adc
dec
inc
push
push
jo
jae
lcall
xchg
xchg
pusha
mov
imul
fstpt
pop
push
int3
mov
adc
adc
mov
dec
fidivl
cmp
je
and
insb
dec
inc
inc
xor
or
adc
mov
dec
movsb
jecxz
jno
ret
lahf
mov
xor
rcrb
mov
mov
push
inc
xor
mov
and
jp
es
jp
xchg
jae
add
push
jg
and
lds
push
lods
jmp
push
adc
into
aam
test
xlat
mov
sbbl
add
sub
sbb
fsubrs
ret
add
adc
clc
scas
loopne
lods
mov
rolb
loope
mov
adc
lret
sbb
stos
mov
fdivl
mov
mov
xor
popa
lea
add
push
out
push
jg
push
pop
jbe
clc
in
dec
imul
mov
shrl
xchg
and
bound
mov
sbb
je
js
pop
gs
in
outsb
mov
dec
xchg
lock
adc
imul
add
out
fidivl
mov
dec
notb
inc
loope
jle
adc
xor
stc
cmc
inc
pop
pop
cmp
and
push
out
in
jmp
sbb
rcrb
daa
cmpb
enter
sti
test
adc
pushf
cmp
jbe
das
inc
pop
pop
mov
or
negl
pop
push
push
add
pushl
pop
jae
popa
xor
outsb
jg
mov
mov
aaa
mov
and
ss
lods
jg
lds
or
dec
scas
popf
or
and
outsl
aad
mov
mov
add
push
push
les
sub
sbb
dec
or
mov
add
rorb
lea
jb
adc
pusha
inc
int
cmpl
repnz
sub
pop
divl
pop
mov
test
ret
mov
fnstsw
xor
negb
std
sahf
pop
lods
cmp
test
cmc
xchg
nop
jmp
or
cltd
xlat
sbb
sbb
fadds
lods
pusha
add
shlb
dec
test
push
pop
adc
push
mov
mov
pextrw
jbe
call
mov
xor
add
popa
jmp
out
std
jne
dec
add
xchg
push
pop
mov
or
popf
xor
mov
mov
adc
jbe
cwtl
jl
aas
fstpt
scas
aam
cmp
add
cli
icebp
imul
ret
mov
jecxz
fildl
fsts
or
mov
mulb
pusha
sbb
sbb
rcrl
xchg
leave
lods
inc
mov
test
std
mov
mov
repz
mov
jnp
int3
rcll
scas
xchg
scas
enter
decb
and
ss
sbb
add
or
loope
daa
jle
add
and
popa
in
mov
jmp
int
popa
ljmp
pop
inc
jo
add
xor
cmpsb
sahf
rcll
fimuls
dec
in
cmp
inc
xor
jmp
push
mov
sbbb
xlat
mov
lahf
cmpsl
js
sbb
mov
xchg
jae
clc
leave
loop,pt
fmull
sbbb
hlt
nop
movsl
and
push
jge
aaa
jne
xchg
repz
mov
and
mov
fs
dec
jns
ss
dec
jle
mov
lahf
mov
cmpsb
iret
inc
mov
subl
mov
or
add
out
dec
cli
inc
nop
jbe
pop
inc
cmc
inc
mov
and
inc
test
sub
xchg
lds
mov
push
imul
ret
iret
popf
dec
fcomps
test
prefetcht2
subl
sti
xchg
inc
pop
sahf
rorb
push
jbe
mov
pop
push
dec
fcmove
xor
add
out
scas
adc
in
mov
and
je
movsl
enter
mov
into
add
xor
push
jmp
push
pop
jle
mov
loope
ret
push
push
int
fmuls
lods
insl
ss
incl
pop
dec
leave
fisttpll
adc
sbb
add
pop
and
mov
push
cwtl
inc
pop
adc
loopne
push
loop
dec
adc
stos
fcmovne
data16
into
inc
and
loopne
adc
repz
and
cmpsl
push
ret
and
push
jp
lea
jno
es
or
loope
jg
lcall
adc
lahf
jg
pop
call
sbb
pop
jb
push
xchg
sahf
push
leave
nop
in
shrb
dec
pushf
faddl
dec
add
pop
rclb
fldl
out
add
scas
dec
mov
ret
ja
push
clc
push
lea
pop
mov
adc
jmp
or
xor
insl
cs
fidivs
repz
hlt
sub
sti
inc
dec
push
pop
test
idivl
adc
xchg
mov
ret
les
xor
outsb
int
xor
nop
xlat
dec
or
sbb
rorb
pop
ficoms
add
iret
mov
daa
data16
dec
das
cld
mov
push
inc
in
pop
adc
mov
and
jecxz
test
cmp
and
test
mov
ljmp
mov
mov
pop
gs
pop
mov
imul
repz
aad
xchg
add
or
andb
mov
mov
mov
aas
add
cs
call
popf
sub
mov
pop
sbbb
es
ret
sahf
inc
jmp
cmpsl
hlt
dec
jno
ds
inc
cwtl
das
push
popa
popa
ja
jle
das
decl
sbb
and
les
jle
scas
adc
inc
cmpsl
inc
test
fdivrs
mov
sub
mov
fimull
push
add
cltd
enter
and
xchg
popf
dec
or
fildll
das
div
adc
pop
mov
push
insl
loope
xchg
xchg
ficomps
lods
imul
mov
jno
pop
xor
cld
or
push
mov
dec
mov
pop
ljmp
push
add
in
daa
mov
xor
adc
mov
sub
adc
sub
push
pusha
push
in
xchg
in
stc
aaa
mov
lods
imul
jl
dec
cmpsl
scas
push
das
adc
cmp
cli
xor
push
daa
lods
rolb
insl
pop
and
pop
jno
or
cmp
ret
repnz
or
fisubrs
out
mov
push
push
int
mov
or
dec
mov
test
xor
aam
in
mov
insl
push
test
adc
cld
aas
ja
mov
mov
push
insl
cmp
or
stos
mov
outsb
mov
xor
test
sub
cmpsb
pop
inc
pop
lods
imul
jmp
jge
mov
repnz
ljmp
mov
pop
push
cmp
loopne
push
dec
scas
adc
mov
inc
test
jbe
and
out
test
int3
and
push
pop
push
loope
jl
and
and
dec
mov
jno
in
jmp
iret
loopne
and
enter
movsb
adc
bswap
inc
stc
xor
or
inc
push
push
sti
cmp
add
shrb
ljmp
arpl
push
sub
add
loop
sub
cwtl
orb
and
jbe
pop
clc
gs
clc
jmp
hlt
imul
mov
xchg
decb
enter
fnsave
mov
xchg
ficoms
push
cmp
push
sarb
mov
std
or
inc
outsb
icebp
ret
repnz
inc
fisttpll
jbe
in
hlt
rorb
adc
pop
push
fildll
arpl
dec
lea
imul
aas
mov
bound
pop
imul
rcrb
cmp
pusha
mov
cmc
movb
into
fdivr
cmp
lods
sbb
mov
bound
in
mov
mov
rol
nop
repz
sbb
inc
push
insb
movsl
in
daa
fsub
xchg
cld
sarl
out
aam
pushfw
mov
notb
call
jnp
cmpsl
ret
shrb
cmp
sbb
sbbb
sub
cli
in
xor
iret
sub
cli
mov
jo
adc
cli
mov
pop
xchg
sub
inc
daa
flds
add
aaa
filds
cmc
loope
and
aaa
push
adc
fistpll
mov
xchg
mov
lock
stc
fdiv
push
lahf
adc
add
xor
xor
mov
xchg
xchg
outsb
pop
mov
add
scas
call
clc
idiv
inc
adc
mull
mov
outsl
jl
or
cwtl
sarb
loop
cmc
sub
mov
sahf
inc
mov
fcmovnbe
push
in
jmp
adc
xor
hlt
ss
lret
movsb
adc
pop
cmpsb
dec
out
push
in
cmp
push
mov
mov
jnp
stos
xor
hlt
dec
add
call
inc
add
lret
cwtl
ret
cmp
jbe
out
xchg
aad
sbb
ret
adc
mov
mov
loop
pushl
cmc
mull
ds
jae
repz
add
pusha
cltd
dec
jmp
add
pop
mov
stos
pop
adc
xor
into
idivb
push
fxch
inc
xchg
fucomi
inc
mov
insb
das
push
clc
xor
popa
fnstsw
sbb
push
xorb
leave
mov
repnz
loop
aaa
or
out
xor
mov
add
sbb
push
cltd
call
insb
add
xchg
mov
push
mov
callw
hlt
out
push
push
insb
cmpsl
jno
mov
ds
icebp
and
lret
add
xchg
js
mov
xor
mov
es
push
add
xor
dec
sarb
cmp
cmp
add
scas
iret
pop
loopne
lcall
punpckhbw
cmp
sarl
adc
lods
mov
cmc
add
adc
and
es
cld
ljmp
mov
push
dec
inc
stos
ret
aam
cmp
pushf
ficomps
stos
cmc
loope
cmp
mov
sub
inc
dec
xorb
inc
xor
stos
out
stos
cmp
adc
call
mov
and
bnd
jno
mov
jns
push
dec
or
sbb
fiadds
jmp
dec
cltd
push
pop
ret
dec
das
aas
push
push
clc
jns
cwtl
inc
push
and
hlt
shlb
mov
je
xchg
ud0
mov
inc
and
xlat
cmp
xchg
pop
inc
push
cmp
xchg
push
jb
loop
xor
pushf
cld
cmp
pop
mov
hlt
xchg
dec
add
ret
lods
lret
add
fnstsw
xchg
dec
inc
xor
inc
push
sbb
and
addr16
jecxz
insb
stc
out
cmp
stos
sahf
lret
xor
mov
lcall
lea
push
fs
jne
aaa
or
andb
cld
xor
loop
mov
leave
pop
cld
ds
cmpsb
jmp
lret
mov
std
stos
stc
std
pop
pop
adcb
leave
xchg
dec
or
jne
cbtw
pushl
ret
cld
scas
adc
fwait
xchg
and
out
cmp
fdivrs
lret
shr
xchg
pop
and
leave
aaa
sarb
mov
repz
stos
adc
dec
das
aas
jecxz
leave
adcb
repnz
mov
xchg
mov
push
mov
pextrw
mov
arpl
scas
js
cmp
fbstp
pop
add
dec
std
adc
xchg
std
loop
sub
stc
bound
ret
fstl
adc
ret
xor
hlt
cmova
inc
enter
xchg
js
jge
mov
add
or
mov
int
lcall
jbe
scas
rorb
cld
ret
or
not
mov
jl
arpl
cmpl
add
test
scas
lods
testl
aas
jno
pusha
insl
gs
sub
dec
fadd
loop
mov
daa
imul
les
mov
mov
gs
sbb
pop
cmc
stos
js
pusha
mov
and
dec
pop
xchg
inc
in
mov
in
outsb
fcomps
aad
cltd
clc
or
mov
or
aas
or
dec
dec
jne
dec
xlat
dec
mov
jbe
in
lret
jmp
lock
mov
test
pop
scas
lret
lcall
mov
dec
in
jmp
dec
xchg
int3
pop
hlt
xor
xchg
fisttps
adc
in
push
pop
sub
js
jmp
orb
push
daa
bound
mov
push
mov
push
fwait
fwait
sahf
dec
adc
mov
in
cmp
test
sbb
and
jp
rclb
jge
or
xchg
jnp
fwait
or
repz
jbe
fs
jp
ret
aas
sbb
js
ljmp
repz
cmpsl
daa
rcrb
je
add
out
jp
in
push
into
in
push
lods
pop
hlt
jnp
shll
popf
pushf
xor
add
ja
fsubrs
test
sub
adc
dec
aad
cmp
outsb
in
ja
rcr
aam
or
movsl
adc
add
pop
jl
pop
gs
jl
push
and
xchg
xor
int
and
sub
popf
lret
pushf
xchg
cwtl
inc
lret
sbb
lret
mov
cmp
dec
mul
jnp
aas
out
push
lds
out
out
dec
loope
push
cmovle
mov
adc
cmp
popa
mov
cwtl
pushf
mov
fimull
and
push
sub
leave
lods
inc
stc
aas
jg
adc
pop
lahf
jg
lahf
out
test
push
mov
pop
xor
sub
jmp
lock
xor
leave
fists
jge
sahf
jg
mov
jae
es
cmp
inc
xchg
dec
das
sbb
add
push
decb
fs
dec
and
jne
imul
loop
inc
insl
dec
and
mov
and
push
inc
movsb
hlt
push
das
ss
lret
cltd
sti
jnp
lahf
outsl
adc
rorb
mov
mov
movsb
xchg
cltd
inc
jmp
xor
push
jmp
jl
mov
sub
hlt
dec
jae
pop
lea
insb
mov
mov
xorl
sub
dec
or
xchg
call
cwtl
xchg
dec
adc
xor
xor
hlt
sahf
mov
iret
faddl
pop
cmp
je
jmp
in
dec
jge
push
lret
std
test
xchg
addb
cmp
insb
ss
push
dec
push
cmpb
daa
aas
or
mov
mov
call
stos
dec
cmp
aaa
gs
shlb
jno
repnz
out
xchg
out
rclb
inc
pop
repz
pop
jge
adc
push
aam
mov
cli
fstl
dec
pop
dec
and
push
mov
mov
popf
lret
jbe
mov
insl
pop
je
shl
mov
dec
rorb
mov
std
jge
call
add
popf
xor
shr
add
icebp
adc
push
cmp
lock
dec
xchg
mov
jecxz
and
jae
jno
jae
lahf
adc
cmc
ret
cld
add
dec
iret
pop
xchg
jae
testl
call
pop
mov
add
addr16
push
clc
fildl
ret
inc
xchg
add
adc
dec
push
lahf
or
popf
es
mov
jae
movsl
loopne
cmpsl
enter
in
bound
inc
add
iret
sti
addr16
xorb
cmp
xchg
int
shlb
comiss
rcl
fnstsw
call
hlt
add
scas
pop
loopne
movsb
or
cmp
pop
lock
out
push
pop
loope
sub
mov
lea
jbe
pop
cmp
outsb
xchg
into
sbb
push
fdivr
aaa
test
rol
mov
int3
sbb
dec
or
sub
and
jmp
test
or
mov
inc
pop
xlat
cwtl
dec
stc
cmp
push
sub
pop
das
pop
leave
mov
call
cmc
push
xorb
mov
cmc
and
dec
inc
push
out
and
xor
inc
test
fsubl
pop
test
daa
jo
in
sub
outsl
adc
push
cmp
ja
addl
loop
xchg
mov
in
scas
push
je
lods
loope
popf
pop
pop
sahf
or
inc
lods
sub
or
cli
xor
push
mov
adc
imul
insb
dec
inc
fstps
dec
daa
popf
dec
inc
and
inc
cmpsl
icebp
mov
push
xor
push
xor
mov
loope
out
jns
or
clc
js
and
scas
pop
sbb
xor
add
mov
mov
or
xchg
fldcw
sbb
jne
sahf
out
adc
lret
arpl
push
sbb
stos
sub
push
idiv
cmpsl
xchg
rep
in
and
push
js
xchg
xchg
cmp
outsb
cmp
test
inc
adcl
add
mov
pop
pop
pop
imul
pop
insl
cmc
cmp
mov
lds
cmc
ficomps
movsl
call
dec
lea
insb
mov
dec
sahf
jmp
ja
leave
das
daa
sub
adc
divl
lret
push
push
mov
dec
hlt
xor
jle
outsl
nop
jae
mov
call
cltd
jne
aam
test
sahf
enter
dec
or
int3
jbe
adc
cli
xchg
stc
jg
test
and
inc
pop
daa
out
cwtl
sbb
jp
push
orb
lret
fs
adc
insb
pop
sti
rorl
bound
push
subl
pop
nop
dec
mov
or
and
out
daa
mov
mov
icebp
xchg
jecxz
das
jge
pusha
sub
jnp
cmp
push
lock
or
push
sub
inc
stc
test
sbb
cmp
mov
mov
mov
sbb
mov
or
push
inc
ret
xor
shll
call
and
test
xlat
ss
je
xchg
adc
es
jecxz
push
movsl
arpl
dec
dec
adc
inc
pop
rcll
movl
dec
pop
test
loope
ljmp
xlat
sarl
inc
mov
mov
pop
incl
shlb
dec
scas
pop
dec
mov
push
pop
addr16
ret
and
lret
jecxz
mov
lret
sub
pusha
add
cmpsb
dec
push
cs
fwait
xchg
mov
mov
lds
insl
ss
sub
les
loope
inc
fldcw
loopne
add
pop
mov
cwtl
inc
js
popf
adc
adc
stos
cmp
xchg
xchg
test
inc
bound
mov
mov
aad
sbb
dec
insb
inc
or
adc
xchg
xor
xchg
movsb
jmp
sub
xor
pop
mov
cmp
in
jns
lods
mov
pop
mov
mov
xor
bound
cmpsl
arpl
ss
movsb
shlb
ljmp
xchg
add
das
inc
aad
das
js
or
xor
stos
es
hlt
neg
in
ret
cmpsl
pop
jge
lods
das
pop
jnp
xchg
mov
mov
js
mov
add
sbb
mov
testb
enter
and
xor
les
jbe
mov
dec
pop
cli
jge
cmpsl
xchg
jnp
dec
aaa
adc
sbb
mov
or
jge
push
push
shrb
cs
jno
in
scas
sbb
daa
rorl
lcall
stos
lods
adc
xchg
add
ja
sbb
popl
int3
mov
jnp
pop
scas
sub
mov
xorb
js
test
out
test
gs
adc
jne
fadds
sarb
ret
jle
fs
jbe
lds
ret
and
add
addr16
xchg
ss
cmp
add
jmp
jecxz
adc
fwait
mov
cmp
jnp
pusha
sbb
sahf
jle
cmpsb
mov
dec
stc
inc
jnp
lahf
repz
out
jb
mov
sub
xor
leave
test
xor
icebp
jae
js
inc
fisttpl
pop
jb
mov
xor
inc
jno
mov
popa
rorl
sub
xchg
xor
mov
cwtl
movsb
mov
cwtl
or
push
imul
fsubs
or
inc
mov
fsubl
fwait
cmp
fs
aas
outsb
inc
in
mov
in
mov
dec
xor
jp
or
fwait
and
scas
lods
js
mov
cli
sub
cltd
push
dec
repnz
dec
push
fnstcw
inc
fsubrp
aad
mov
xlat
xor
mov
sub
icebp
aaa
adc
push
xchg
pop
in
mov
into
rolb
sahf
inc
xchg
dec
lods
dec
jle
mulb
aas
addr16
xchg
mov
mov
mov
int
cli
orb
pop
pop
xchg
and
cmp
xor
adc
pop
push
iret
idivl
jns
xor
shrb
stc
es
mov
insb
inc
pop
jecxz
mov
mov
mov
sbb
fcoms
jno
aad
dec
and
loop
and
mov
mov
dec
fistl
sbb
test
push
and
lcall
ficoml
jb
sbb
cmp
jbe
push
jbe
lret
jmp
push
pop
loop
xchg
cmp
mov
adc
gs
mov
xor
mov
packsswb
int3
jp
test
jl
loope
jns
adc
hlt
adc
add
mov
push
rolb
sbb
push
scas
adcl
setb
notl
daa
loope
and
lock
and
scas
lcall
fwait
aam
ja
pop
mov
sar
add
adc
cmp
cmp
imul
mov
cmpsb
or
fcmove
pop
dec
hlt
mov
pop
inc
movsl
mov
adc
popa
insl
xchg
pusha
jge
push
cwtl
mov
xor
lds
sub
add
cmpsb
pop
lcall
cli
pop
mov
add
in
fcoms
pop
inc
ss
rorl
lea
rcr
test
scas
sub
inc
cmp
adc
inc
xchg
inc
fnstenv
scas
mov
jp
dec
imul
and
aad
adc
jmp
adc
xor
add
stos
mov
fildl
adc
js
xchg
sbb
sbb
ljmp
rcll
xchg
ds
sbb
pop
test
push
mov
adc
scas
lods
fildl
adc
push
mov
sub
xchg
sahf
adc
sahf
adc
jg
icebp
adc
jg
push
lret
mov
out
pop
pop
cs
mov
ret
adc
repnz
push
pop
xchg
ret
int3
cltd
adc
repnz
notl
in
push
stos
xchg
jno
xchg
fwait
mulb
andb
mov
xchg
push
mov
iret
inc
jnp
mov
mov
enter
adc
xchg
xor
insb
push
ret
xorl
pop
fwait
mov
sbb
in
pop
rolb
push
push
mov
mov
mov
sbb
xor
add
mov
adc
lcall
mov
xchg
jae
pop
cmp
jbe
and
sbb
insb
push
movsb
gs
xor
pop
xchg
sub
inc
mov
jmp
xor
ret
push
lret
divl
movsl
sub
fimuls
es
sarb
cltd
mov
mov
pop
or
int
mov
mov
pop
mov
add
push
call
inc
cmpsb
fimull
subb
cli
insl
cs
aaa
push
addr16
push
jb
mov
addr16
scas
aas
sub
jne
rdmsr
stc
iret
xor
sub
mov
adc
insl
lds
gs
cmp
jns
gs
popf
cmp
lods
rolb
xor
lods
fldcw
scas
test
mov
testb
add
stos
and
addl
mov
addr16
std
sbb
xchg
leave
icebp
rcr
popf
push
push
xor
rclb
popa
add
fsubrs
xchg
hlt
stc
mov
adc
or
inc
pop
push
inc
xor
mov
jns
out
test
test
xchg
push
imul
mov
ret
cmp
test
dec
xchg
mov
sub
inc
fmuls
jnp
and
int
idivl
dec
mov
das
push
cld
aad
xchg
pop
and
push
mov
test
in
enter
inc
test
dec
xchg
cs
daa
aad
dec
orl
xchg
xchg
aad
movsb
scas
pop
sub
mov
mov
mov
push
out
xor
dec
sub
clc
mov
repz
mov
stos
lock
or
mov
dec
push
jge
jp
fs
mov
imul
std
aas
push
add
pushf
jae
pop
rol
push
jns
pop
jae
add
notb
int3
pusha
hlt
addr16
mov
push
cmp
mov
mov
xchg
inc
mov
dec
pop
jl
dec
aas
or
loopne
xor
imul
fidivrl
popa
xor
loop
jg
xchg
mov
std
jno
int
in
xchg
dec
repnz
call
lret
adc
aam
int
shll
mov
mov
test
inc
mov
sarb
pop
addr16
icebp
jmp
jno
mov
jge
sbb
sbb
js
xchg
aaa
cli
bound
rcr
test
movsl
jns
dec
sahf
and
pop
andl
xor
and
push
js
fdivrl
clc
jbe
mov
movsb
addr16
push
arpl
inc
push
push
pushl
js
dec
bnd
sub
andb
data16
dec
mov
inc
sti
dec
jle
div
cmp
enter
scas
hlt
pushf
cmpsb
es
ss
jle
sbb
xor
scas
stc
lock
test
adc
pop
sub
jnp
mov
add
push
xchg
std
daa
mov
dec
fmull
lds
idivl
sub
out
dec
and
cmpsb
enter
stc
dec
hlt
sbbb
jne
xchg
shlb
mov
js
mov
pop
sbb
adc
in
xchg
xchg
je
sbb
add
xor
mov
punpcklwd
jnp
cmp
and
clc
fsub
fimuls
mov
inc
inc
inc
test
push
xor
pshufw
lcall
add
dec
jnp
fidivrl
xlat
test
outsl
mov
adc
cwtl
push
pop
mov
loope
loop
mov
add
xchg
inc
xlat
or
mov
mov
pop
xor
fnstsw
pop
mov
repz
adc
jg
mov
mov
and
mov
lock
das
in
insl
leave
es
inc
add
push
pop
js
jo
pusha
test
mov
lret
aaa
insl
jo
xbegin
mov
popa
pop
ret
lods
pop
push
cmp
cwtl
sub
mov
sahf
push
sub
push
add
xchg
stc
ret
jo
jmp
les
fstp
loope
cmc
fdivr
mov
mov
adc
mov
add
dec
test
jae
fnstcw
inc
xchg
push
aas
sahf
pop
add
mov
ljmp
and
dec
adc
pushf
fistl
dec
arpl
hlt
pop
jne
push
ja
mov
cmp
mov
pop
scas
imul
sub
fcmove
add
sub
je
ret
sbb
mov
mov
add
pop
inc
repnz
stos
xor
jae
stc
inc
mov
lea
mov
bnd
je
pop
cmpsl
clc
dec
pop
jnp
popf
test
adc
sarl
fldenv
popa
in
cmc
fwait
adc
jp
imul
xor
hlt
push
ret
cli
popa
outsl
fwait
xor
push
ror
scas
adc
mov
imulb
orb
and
inc
call
sbb
shrb
or
test
mov
dec
mov
xchg
int
xchg
aad
cltd
inc
pop
xor
neg
or
pushl
notb
sub
pop
scas
test
pop
pop
in
ret
out
rolb
xor
or
jl
push
inc
mov
das
cmc
lds
bound
pushf
mov
pop
div
mov
mov
push
xor
xor
bound
pop
xchg
mov
mov
inc
dec
sbb
pushl
mov
mov
aaa
insl
and
add
adc
mov
mov
test
aas
scas
push
out
loop
mov
cmp
sub
jp
xlat
ss
aam
pop
repz
sbb
adc
push
mov
sbb
sbb
mov
pop
mov
movsb
cwtl
xchg
loope
and
dec
fsubp
jl
or
jp
test
add
arpl
mov
mov
fcomp
inc
inc
loop
call
jmp
int3
push
and
popf
mov
jnp
cmp
sbb
sbb
sahf
std
sarb
sti
mov
inc
pop
nop
test
xchg
sub
cmp
mov
cld
xor
mov
cmp
xchg
pusha
lret
div
imul
push
daa
sahf
outsb
mov
pop
lock
pop
pushf
cmpsb
stos
std
xor
pusha
push
mov
mov
mov
jp
int3
loop
add
sub
xchg
sbb
repnz
into
iret
jae
bound
pusha
fcomp
aas
sti
pop
test
iret
iret
sub
pop
lret
and
xchg
sarb
adc
insl
mov
mov
xchg
pop
cld
adc
adcl
adc
push
push
mov
sahf
not
sbb
push
fiaddl
cmp
hlt
push
mov
sbbb
je
xchg
dec
loop
mov
xor
negl
cmp
lea
clc
cmpsb
fadds
or
cmp
inc
cmp
jg
dec
or
push
jno
push
sub
cwtl
int3
stos
xchg
adcl
adc
inc
sbb
inc
mov
jle
xbegin
stc
sub
jle
stos
clc
roll
mov
jle
lea
inc
push
scas
mov
pop
inc
aas
sti
mov
scas
sub
movsl
stc
mov
xchg
mov
pop
add
fs
stc
fwait
sahf
add
pop
push
inc
pop
inc
jmp
mov
data16
cmp
xchg
stos
cltd
out
xor
out
nop
push
fs
adc
fcoml
lret
loop
inc
or
or
sub
fsubrl
xor
cmp
sbbl
fcoms
jl
jmp
add
fwait
jg
sbb
adc
jns
jmp
stos
lret
inc
ret
add
adc
xchg
imul
test
lea
jl
rcrl
dec
sbb
cwtl
outsl
mov
sub
sbb
inc
lods
fcmovu
fsubr
pop
popf
sub
andb
lock
aam
ljmp
ss
rolb
in
jl
and
in
xchg
mov
dec
fildll
mov
rcrl
out
fidivrl
pushf
cmp
inc
popf
mov
pop
out
jp
cmp
sbb
mov
xor
stos
out
lret
inc
imull
mov
icebp
dec
push
dec
int
cmpsb
pop
xchg
mov
mov
and
int3
or
adc
push
adc
cli
xchg
ljmp
aas
daa
into
clc
push
push
mov
in
dec
add
test
ret
xor
push
test
in
sbb
push
mov
ss
call
test
add
push
decb
dec
sahf
mov
lods
mov
sbb
scas
insl
mov
stos
das
adcb
fdivs
ret
xor
clc
sbb
imul
scas
sbb
xchg
mov
xchg
rorb
loopne
inc
jne
mov
movsl
and
lock
out
inc
mov
divl
and
mov
mov
stos
leave
xchg
adc
add
add
adc
stc
cld
adc
xorl
mov
inc
rclb
ret
adc
roll
xlat
add
mov
int3
and
int
xor
cli
fcoms
dec
in
add
aaa
sahf
dec
shll
pop
adc
cs
xchg
sbb
xchg
lock
xorl
rcl
test
xchg
dec
scas
ret
in
rclb
ret
xor
mov
fldcw
mov
fs
mov
inc
adc
rclb
xor
sub
fwait
inc
add
push
sub
cmp
xchg
mov
popf
sar
dec
cmp
fdivrs
lea
xchg
push
or
mov
addb
fiadds
imul
dec
xchg
sub
xchg
dec
mov
cmp
push
fiaddl
in
and
cmp
pop
in
xchg
bound
imul
jb
sub
pop
aam
add
aad
out
cmp
aam
aas
cmpsl
imul
adc
sub
aam
cmp
cmp
xchg
inc
pop
dec
es
dec
js
and
xchg
mov
cmp
fcmovnbe
testl
jb
mov
shr
jbe
sub
dec
pop
repnz
test
push
cmp
nop
dec
stos
jnp
test
negl
add
adc
repnz
jp
push
push
or
mov
xchg
or
loope
mov
sub
jae
jo
movsl
hlt
and
pop
mov
inc
shlb
mov
pushf
ja
mov
sub
push
sub
push
imul
add
repz
sar
insl
or
xor
lret
sbb
movb
mov
cmp
in
out
sub
jno
adc
sub
das
out
fpatan
jb
ret
sbb
push
outsl
pushf
xchg
add
add
or
and
sub
outsb
or
fildll
jp
stc
int
nop
push
int3
jg
dec
inc
or
push
push
mov
faddl
xchg
bound
sub
cs
in
add
jns
pcmpeqd
stos
add
or
push
scas
xchg
lahf
mov
in
mov
xor
rcrb
ret
rcrl
dec
add
mov
and
cli
jo
shlb
inc
jmp
cmp
xchg
dec
jnp
or
dec
test
jns
push
bnd
testb
dec
outsl
lods
dec
daa
addr16
pop
dec
in
lret
pushf
mov
pop
popf
imul
sub
into
push
cmp
and
pop
ds
push
jae
dec
in
outsb
dec
sbb
mov
cmp
mov
xor
xchg
idivl
dec
pop
pop
mov
xchg
dec
gs
push
mov
mov
cmp
outsb
xchg
sub
std
push
cmp
and
mov
call
lcall
clc
lret
push
inc
push
shr
sbb
rcrl
inc
dec
xchg
xchg
xchg
mov
and
pop
xchg
movsb
std
and
xchg
push
les
scas
out
lods
mov
ffreep
xchg
into
dec
jp
testb
int3
or
test
leave
leavew
arpl
stos
insl
stos
out
sub
mov
leave
icebp
jnp
icebp
outsl
or
jmp
enter
mov
imul
cmp
jno
out
cmc
fistpll
fidivs
and
add
add
and
iret
rclb
pop
test
lahf
mov
lret
imul
repz
jne,pn
add
stc
mov
inc
sti
hlt
loope
test
or
mov
stos
mov
mov
out
testb
stos
les
outsl
int3
jns
mov
rcll
xchg
xorl
cld
mov
mov
xchg
and
adcb
mov
xchg
fcoml
sub
or
xchg
sub
dec
or
xor
loopne
lahf
arpl
xchg
xor
insl
lods
fidivrl
shll
mov
cmp
jmp
and
scas
xchg
fwait
daa
fldenv
dec
pop
add
fsubrp
jge
jno
cld
lods
roll
mov
push
lcall
in
adc
addr16
push
lea
cmc
xlat
fnsave
cmp
das
push
pop
cmp
mov
sbb
inc
gs
add
stos
push
xchg
in
and
inc
mov
mov
pop
push
and
fsubs
sub
xchg
jp
filds
mov
sbb
jge
rcrl
pop
fldl
cmpsb
scas
imulb
hlt
and
test
lcall
push
cmp
sbb
cmp
pop
das
out
add
cmp
dec
mov
xchg
cltd
cmc
lahf
inc
fsubrl
add
sub
je
sbb
adc
ja
mov
adc
cwtl
mov
push
add
sbb
add
push
push
lock
into
dec
decb
push
push
test
lea
mov
mov
cwtl
pop
push
cwtl
cmp
aaa
lock
sub
cwtl
test
push
repnz
lahf
pop
jbe
jo
insl
jno
mov
repnz
mov
jbe
call
jg
dec
mov
cs
repnz
sbb
ret
cwtl
insl
mov
xchg
xchg
aad
out
push
inc
sbbb
push
je
cwtl
fsts
lea
test
ret
jns
popf
out
repz
fnstenv
enter
push
aam
adc
xor
es
push
mov
jnp
lods
movsb
gs
jnp
out
push
add
cmp
scas
push
into
adc
ljmp
ja
sbb
mov
scas
bnd
lret
xchg
mov
cmp
pop
xchg
hlt
jno
sub
fs
rolb
cmpb
jns
scas
pop
inc
test
dec
pop
bound
insb
out
movsl
push
cmp
and
mov
xor
pop
sbb
cld
xchg
imul
jle
xchg
fldt
cmp
xchg
add
or
idivb
pop
jg
mov
je
add
in
jle
data16
in
push
out
sub
data16
pushf
stc
inc
mov
cmc
cmpb
pop
jnp
cli
pop
pop
add
std
pusha
push
jno
mov
lahf
mov
adc
jb
gs
jnp
stos
leave
fldcw
popa
mov
push
pop
or
hlt
bndstx
mov
xor
lret
xor
mov
sbb
or
test
xchg
jmp
push
or
mov
ds
popa
and
fnstcw
dec
xlat
xor
rcrb
pop
mov
pop
jle
xor
mov
cmp
insl
call
dec
loop
shl
bound
cmpsw
lock
jae
shl
test
add
aas
divb
mov
inc
sub
fildll
int
lods
pop
test
jg
mov
xor
lret
lods
inc
notb
mov
cmp
das
cmpsl
add
xchg
repnz
aaa
cmc
lea
add
add
pop
mov
bound
or
sahf
in
inc
hlt
xchg
ret
jmp
fidivs
imul
adc
stos
xchg
xlat
push
lds
loop
ljmp
pop
add
or
outsb
cmp
cmp
jg
mov
movl
dec
lock
sub
sbb
xchg
push
movsl
ja
ss
jo
lock
xor
inc
inc
outsb
pushf
int3
jecxz
jmp
pop
sub
xchg
notl
mov
scas
hlt
cmp
lret
mov
jne
es
xchg
lods
mov
fimull
std
mov
mov
int3
je
inc
inc
cmpsb
ret
lods
mov
popf
daa
jecxz
xchg
pop
lods
push
adc
xchg
outsl
dec
sahf
jle
jnp
out
idivl
sbb
inc
pop
inc
inc
outsl
mov
aam
shlb
mov
sti
push
imul
cmp
sbb
repz
into
sub
out
int3
cmp
subl
xor
or
jmp
dec
mov
pop
jne
mov
adc
or
and
xor
jle
lods
out
dec
in
dec
out
sar
pop
popa
aas
sarl
mov
inc
inc
add
sbb
pop
push
jmp
sbb
push
pop
icebp
adc
or
lds
mov
push
mov
daa
jo
mov
dec
std
mov
int3
push
stc
sbb
mov
push
push
dec
test
clc
imul
sbb
cmpsl
dec
add
out
mov
stos
xor
pop
inc
xor
and
and
testb
in
xchg
cmp
jo
dec
cmc
push
ja
adc
and
xchg
fstpt
mov
jb
aas
lret
nop
cmp
sbb
xchg
stos
enter
ja
dec
mov
movsb
xchg
fdivs
test
andb
shrb
idivl
stc
incb
jns
insb
add
adcb
xchg
ss
sbb
shr
xchg
movsl
rolb
lock
push
roll
pop
sbb
sub
add
je
stos
js
gs
pop
or
xchg
mov
mov
sub
mov
iret
fdiv
pusha
ss
stc
pop
cltd
cmc
das
sub
mov
add
sub
ret
test
test
pusha
lret
xlat
push
fcmovne
pop
sarb
cwtl
mov
repz
push
pop
dec
mov
push
imul
or
dec
fisttpll
jo
loopne
or
mov
test
cmp
lea
sub
jb
push
fistps
aad
inc
pushl
imul
pop
mov
out
sbb
js
call
ret
popf
mov
std
cwtl
popa
les
rcrl
cmp
daa
fwait
pop
std
cmp
add
int
push
xchg
mov
ror
adc
hlt
xor
cmp
add
stos
imul
shr
divps
mov
in
mov
sbb
push
fcompl
es
ret
iret
pop
cmpsl
pop
bound
or
inc
push
mov
jecxz
cmpsb
pop
movsl
xchg
dec
cmp
xor
outsl
mov
outsl
lret
mov
pusha
test
lret
add
push
jno
cwtl
outsl
fstpl
movsl
push
push
cmp
mov
sbb
ljmp
scas
in
mov
push
jecxz
pop
sbb
pusha
gs
xchg
push
shl
cltd
xchg
push
mov
xor
add
mov
and
int
sub
cmp
xchg
push
lods
call
sbb
imul
xor
stc
adcb
inc
xchg
pop
jnp
push
lahf
jp
loope
mov
sub
pushf
rcll
inc
lods
pushf
jne
hlt
adc
aas
xlat
jg
mov
movsl
jge
and
mov
inc
lret
xor
js
pop
stos
pusha
mov
dec
push
sub
rorb
fistpl
iret
lcall
and
xor
mov
mov
or
or
cmp
aad
xchg
mov
push
jns
daa
add
and
xchg
pushf
push
pop
in
movsb
mov
pop
jge
xor
sbb
lods
ljmp
xbegin
rcr
sahf
rcrl
lret
ds
fcoml
mov
int
cmp
cmp
mov
mov
enter
movb
enter
out
in
sub
pushf
mov
test
pop
adc
jle
mov
mov
fwait
test
push
lock
ljmp
dec
cltd
cwtd
xchg
sbb
fdivrl
push
pop
cmc
fidivl
push
xchg
dec
mov
cmpb
bnd
push
xor
sarb
and
pushf
xor
jmp
cmp
xor
ret
xor
pop
fcom
iret
out
sbbl
add
add
popf
lods
jmp
call
pop
or
std
jns
lods
scas
push
lea
inc
add
int
out
cmp
call
jb
and
pushf
push
ret
pop
inc
xor
out
add
daa
jbe
int
xchg
idivl
mov
xchg
mov
ror
andb
je
leave
adc
hlt
cli
mov
sub
sub
je
push
adc
in
jle
icebp
cmp
mov
jle
js
aaa
add
lods
int
test
lcall
xor
adc
lcall
push
inc
aaa
sbb
aas
lock
enter
stos
adc
add
arpl
dec
es
sahf
sbb
aaa
inc
int3
mov
imul
inc
xor
daa
inc
mov
sbb
lods
xor
mov
scas
mov
sar
arpl
push
sahf
adc
icebp
scas
dec
ljmp
push
mov
shrl
xchg
mov
pop
fdivrs
cmp
movsb
push
fcomi
inc
test
xchg
mov
fbstp
cltd
fildl
sahf
mov
cltd
and
cld
mov
cmpsb
adc
xor
jne
fldt
shrb
in
les
add
and
push
daa
add
ret
arpl
mov
sti
rcll
pop
xorb
in
out
enter
in
xor
clc
pop
and
dec
call
repz
lret
inc
js
pop
xchg
jp
ljmp
xchg
jg
iret
cmp
dec
push
clc
push
fwait
jmp
cmpsl
sbb
mov
jae
mov
ljmp
lods
xchg
jg
icebp
jecxz
lret
dec
stos
out
mov
sbb
mov
mov
xor
pop
sub
sbb
fdivp
je
mov
gs
push
ss
cmp
outsb
fcompl
out
sti
xor
les
hlt
jno
lcall
outsb
loopne
mov
cmpsl
jbe
daa
xchg
hlt
jp
test
jp
js
cmp
cmp
out
std
lcall
xchg
gs
enter
jge
add
mov
insl
ret
xchg
xchg
int3
rcrb
je
cmpsb
jno
push
push
push
daa
dec
fwait
das
dec
push
scas
cmp
das
adc
or
outsb
add
fisubl
shlb
incb
dec
jmp
cld
xchg
test
inc
push
add
in
sar
popf
pop
shl
sub
xchg
xorb
leave
jmp
xchg
sub
imul
dec
mov
sub
or
adc
push
popf
and
movsl
xchg
and
add
mov
adc
xchg
jnp
aaa
sub
popa
test
dec
cmpsl
cmp
adc
mov
addr16
cli
filds
in
mov
pop
jmp
inc
repnz
add
mov
or
lds
fcompl
cmp
test
add
cmp
jl
mov
mov
clc
mov
cmpsb
push
jmp
out
add
ljmp
icebp
inc
js
push
pop
sti
push
pushaw
out
test
out
inc
loope
enter
mov
cli
int3
jmp
stc
fwait
push
xor
stos
mov
add
add
ret
lds
mov
xor
inc
adc
mov
pop
mov
mov
in
push
dec
mov
cmp
fistl
jns
xchg
shl
cld
fstpt
bound
fsts
inc
repnz
jnp
and
pop
cmpsl
add
je
insb
xor
out
fdivrl
das
pop
pop
inc
pop
mov
fadds
and
pushf
aas
xchg
mov
push
cmp
stos
jge
cs
popf
pusha
ret
xchg
ror
mov
adc
aam
ret
sbb
xlat
pop
daa
test
and
mov
imul
mov
shll
xchg
mov
xlat
bound
xchg
lods
mov
xchg
jbe
mov
out
repz
das
lret
xchg
outsl
xor
dec
fldcw
cmp
pop
and
not
cmpsb
sub
mov
xchg
add
sbb
add
mov
pop
or
pop
jle
inc
add
mov
lret
fildl
jge
and
jne
in
inc
mov
mov
test
sub
popa
fimull
pop
inc
fmuls
xor
cmc
int3
push
mov
int
jg
popa
pop
jmp
jg
loopne
fnstenv
cmp
cmp
xorl
bnd
bound
lods
push
mov
gs
out
and
insl
imul
shll
loop
sub
pop
movsl
pushf
inc
aas
outsl
fadds
ret
inc
gs
dec
xchg
xchg
stos
dec
jle
and
cmp
ret
cwtl
pop
push
outsb
scas
xor
adc
jae
out
cmp
invlpg
loop
pop
fcoml
xor
jbe
rcll
rcll
jns
call
ficompl
popa
pusha
lcall
push
adcl
mov
push
mov
xor
pop
mov
mov
aam
ljmp
push
shl
mov
in
leave
xchg
repz
xlat
xchg
mov
arpl
dec
xchg
push
incl
adc
in
movsl
sub
or
sbb
shl
js
pop
test
push
jmp
pop
lahf
pop
leave
push
dec
pop
push
and
lods
xor
adc
jne
out
movsl
push
pop
add
cs
icebp
jl
fs
sahf
sbb
cmpsb
lods
aam
dec
pop
lods
cmp
les
test
jl
lods
lahf
or
jae
and
adc
jmp
or
pop
in
mov
daa
test
fstl
repnz
pop
dec
push
push
mov
mov
sbb
insl
loope
loope
sub
pop
inc
sbb
sub
repz
adc
enter
ja
mov
mov
push
pop
mov
xor
xor
stos
add
sbbb
add
push
xchg
pusha
daa
lret
repnz
jno
xchg
adc
mov
jmp
out
lret
xor
addl
or
push
jp
push
enter
sbb
xlat
ja
mov
mov
in
mov
sub
adc
jge
lret
ret
fists
mov
and
push
xchg
bt
mov
adc
mov
sub
mov
daa
and
sub
decl
jno
dec
popf
push
jmp
mov
mov
in
testl
arpl
cmp
inc
adc
pop
mov
aad
lret
mov
mov
leave
sbb
rcrb
es
loopne
outsb
dec
adc
adc
adc
add
adc
mov
jo
je
and
or
pop
add
push
jle
testl
xor
dec
cld
lcall
lret
add
sbb
adc
and
or
add
repnz
xchg
mov
lret
test
mov
jge
es
sti
jae
inc
insb
inc
out
test
clc
mov
cmpsl
xchg
or
repz
popa
sub
lock
sub
inc
cwtl
hlt
or
pop
out
inc
adc
cwtl
add
movsl
cmp
pop
das
mov
xchg
fnstcw
sbb
lods
stos
clc
out
into
rcl
mov
mov
dec
xlat
xor
into
lock
pop
pop
icebp
pop
mov
sub
sub
outsb
inc
lea
push
xchg
xor
xor
xor
xchg
into
push
jns
pop
mov
jmp
add
idiv
aas
or
and
pop
mov
call
scas
xchg
jb
inc
test
mov
popl
and
jnp
sbb
mov
jmp
stos
mov
cmp
fcom
rcrl
mov
and
fwait
jne
data16
enter
cmpsb
enter
loope
mov
add
inc
sti
or
pop
jne,pn
andl
arpl
repz
insb
dec
pop
cmp
xchg
cmp
lds
into
mov
add
movb
cmc
push
sahf
sub
pop
leave
out
sub
lds
dec
inc
in
std
dec
fisubs
out
pusha
fcomps
sub
scas
mov
hlt
mov
stos
mov
int
pop
mov
in
pushf
scas
jb
lea
mov
mov
adc
pushf
fdivrp
ds
shlb
adc
pop
fiaddl
mov
movsb
inc
in
mov
xchg
adc
cmp
pop
addr16
call
mov
or
pusha
mov
dec
repnz
outsb
inc
rorl
jecxz
rolb
and
pop
idiv
repnz
xor
daa
test
dec
insb
fiadds
jge
xchg
pop
insl
movsb
daa
jae
nop
gs
jl
cli
and
mov
mov
dec
in
mov
mov
cmc
mov
cmp
dec
gs
mov
lds
mov
pop
push
fnstcw
aas
shl
cltd
xor
xchg
add
xor
fwait
ljmp
and
cmp
inc
test
cwtl
sub
scas
adc
cmp
add
cmp
aas
jle
mov
xor
push
lcall
enter
insl
mov
mulb
cwtl
lods
push
jne
jle
xor
lods
cmp
jo
mulb
dec
mov
jns
jne
dec
lahf
inc
stos
mov
pop
sarb
call
std
cmp
adc
pusha
enter
mov
fcomps
push
sbb
outsl
sub
data16
rorb
sbb
sbbb
and
movsb
push
das
cmp
sbb
inc
xchg
cld
xchg
jno
push
test
std
ja
push
xor
mov
repnz
cli
pop
push
fistl
xchg
aad
pop
neg
push
lds
pop
gs
pop
arpl
inc
mov
sub
push
or
decb
mov
jo
pop
fiadds
add
fwait
xlat
dec
or
xlat
or
jne
shrb
mov
jbe
adc
fdivs
test
test
cmp
imul
je
and
rcr
scas
add
cltd
adc
out
xlat
adc
in
and
pop
hlt
xchg
daa
jle
or
aad
popa
nop
lods
pop
xchg
and
mov
movsb
pop
sahf
and
jo
cmpsb
jge
jo
in
xchg
or
adc
ja
push
clc
fnstenv
xbegin
dec
jmp
mov
push
push
mov
les
enter
mov
ljmp
pop
push
out
inc
sbb
aam
push
pop
loopne
pop
mov
andb
ljmp
fbstp
push
cmc
dec
and
jbe
incb
imul
test
nop
lods
int3
shrb
sarl
pop
shlb
lahf
sbb
jmp
rorl
xor
xlat
call
lahf
aaa
push
nop
jmp
jmp
push
xchg
stos
dec
pop
push
nop
jnp
or
aad
rcll
xchg
cmc
icebp
les
daa
push
or
adc
ss
push
sub
scas
mov
out
and
add
sub
add
sbbb
sub
mov
fs
test
and
push
es
pop
sub
js
or
lahf
dec
ljmp
adc
push
pop
inc
cli
sub
dec
outsb
loope
movsl
inc
mov
ja
lea
mov
jno
jmp
cmc
dec
push
aas
inc
negb
mov
lahf
cltd
outsl
pusha
fwait
test
sbb
pop
push
xchg
in
fsubr
ret
dec
mov
mov
shl
popf
loope
adc
aas
push
adc
cld
cmp
test
fimuls
xchg
xor
movsl
mov
pop
pop
scas
enter
int3
mov
pusha
mov
jbe
lahf
int3
sti
lods
mov
addr16
adc
cmpsl
xchg
fsubl
or
stos
adc
cmp
int
loope
push
loop
rorl
idiv
jb
add
mov
mov
xchg
fxch
lock
or
dec
or
ljmp
or
xchg
movsl
adc
mov
sub
pop
mov
loopne
cmp
add
mov
shrl
mov
ljmp
sub
shll
dec
adc
mov
fstl
sti
inc
sahf
sbb
loop
inc
and
cmp
mov
imul
mov
insb
test
stc
aad
stos
sbb
add
daa
cmp
nop
pop
dec
push
xor
lret
test
call
das
mov
mov
pop
enter
aaa
xchg
jnp
je
sbb
shlb
jmp
dec
lds
negl
pop
not
adc
mov
or
les
ret
pop
jle
inc
jns
and
jmp
adc
out
add
or
xchg
and
xor
lods
cltd
xchg
out
add
mov
in
add
jp
inc
pop
pop
cmpsb
test
push
shrb
push
adc
cmp
mov
imul
push
cltd
fisttpl
lock
popl
movsb
out
sahf
loop
sub
stc
outsl
cltd
std
jo
test
nop
fwait
int3
mov
push
insl
sub
sar
aad
sbbb
cwtl
in
cmpsb
pop
outsb
aaa
mov
adc
adc
and
mov
sbb
inc
jne
popa
pusha
and
enter
xor
pop
add
jb
ficompl
sub
mov
pop
sbb
push
movsb
push
mov
mov
stos
daa
push
cmp
xchg
movl
arpl
je
cmpsb
in
or
testb
jp
xchg
add
aas
test
pshufw
and
dec
mov
lea
rcrl
jmp
fiadds
dec
mov
sbb
fwait
pushf
addr16
pop
mov
xchg
mov
out
xor
in
in
and
push
ror
imul
int3
in
adc
ja
lcall
movl
inc
sbb
and
out
aad
jo
sbb
test
pop
and
sbb
sti
pop
xchg
bound
sbb
jl
shll
jne
xor
or
outsb
cmp
les
mov
or
push
xor
scas
std
imul
or
mov
int
jl
rcrb
dec
push
sahf
orb
repnz
je
insl
pushf
dec
mov
addr16
imul
pop
cld
outsl
push
pop
cmpl
daa
push
ret
dec
jbe
rclb
imul
in
test
sbb
outsl
incb
sub
mov
movsl
jl
adc
xorl
inc
inc
cmpsb
cmc
jl
lret
mov
sbb
cld
cmp
sti
mov
inc
pusha
les
out
mov
gs
loopne
or
lds
ret
xchg
pop
and
lahf
insb
test
ret
pop
loopne
inc
stos
inc
dec
xor
mov
pop
cwtl
add
in
leave
pushf
fucomp
js
lretw
jge
adc
cmc
push
sbb
pop
xchg
fsubrs
jg
popa
push
sub
mov
push
mov
mov
cmpsb
jbe
adc
lea
fwait
sub
ja
xchg
rol
add
push
loopne
loopne
jmp
mov
daa
xor
addr16
in
fnop
sbb
sbb
sub
and
lock
inc
push
sbb
loop
add
gs
pop
in
mov
or
pop
loope,pt
pop
or
mov
enter
xchg
ds
jno
ljmp
aam
shlb
rolb
ljmp
jns
ret
repnz
cmp
push
mov
add
andl
mov
jo
rorb
cs
dec
mov
sbb
adc
repnz
data16
test
sub
ss
or
mov
ss
ret
xor
aaa
adc
outsb
aas
mov
xchg
cld
and
lcall
cmpsl
mov
int3
mov
fsubrs
dec
xchg
jno
mov
mov
xchg
int
lret
lea
filds
aas
fwait
movb
int
or
gs
pop
mov
scas
and
adc
or
stos
dec
lahf
jnp
out
xchg
ret
iret
decl
enter
out
pop
fisttps
fwait
push
test
icebp
inc
out
aam
call
xchg
insb
mov
xor
push
add
xor
imul
mov
jo
or
inc
and
jg
rclb
stos
push
push
lock
repz
mov
enter
xchg
mov
repnz
out
daa
jle
and
sub
xchg
cmp
mov
sub
in
std
popf
jno
in
cmp
outsl
xor
sahf
daa
mov
mov
push
and
xor
xchg
pop
xchg
outsl
mov
ficoms
pop
and
test
nop
cs
fisubrl
inc
scas
push
pop
sub
dec
mov
rcr
out
dec
add
mov
popf
popf
xchg
fsin
jle
adc
adcl
and
mov
jmp
mov
jb
jo
xchg
stos
les
shl
mov
inc
sub
fimull
sub
xchg
and
mov
jg
sbb
pop
pop
xchg
pop
js
and
stc
inc
jbe
ret
adc
fcmovnu
rolb
xchg
ja
push
gs
xor
cmp
inc
inc
in
mov
adc
dec
mov
shlb
lcall
push
push
jbe
inc
aad
lahf
lds
xchg
mov
cld
mov
dec
ficomps
in
in
inc
rorb
into
arpl
mov
jae
xor
dec
cmp
loopne
jno
mov
inc
xchg
xchg
jp
ja
inc
xchg
test
dec
movsb
ret
and
ljmp
sahf
aaa
jmp
lea
xchg
mov
in
pop
xchg
lods
clc
xchg
in
cld
rcrb
mov
sbb
insb
popf
fiaddl
adc
and
and
cmc
pop
ficompl
jmp
loop
push
lcall
and
adc
repz
ljmp
ret
push
xchg
in
jge
in
xchg
shlb
sbb
push
jo
inc
add
sub
aaa
movsl
dec
insl
out
pop
mov
lret
pop
outsb
iret
jae
pusha
and
setl
rolb
mov
sub
lret
test
movq
fwait
loope
dec
mov
dec
lods
mov
sub
jns
or
nop
or
cs
fnsave
scas
addr16
jle
insb
popf
mov
ss
stos
or
lret
cmp
push
hlt
mov
in
jmp
push
into
in
inc
jb
in
mov
ret
in
es
loopne
repnz
insw
mov
lock
sahf
or
js
jo
cmp
jns
sbb
or
ret
in
and
movsb
mov
ds
inc
fs
mov
adc
movsl
lret
or
out
fildll
out
flds
add
mov
movl
test
test
jno
jae
push
inc
mov
push
shlb
add
movsl
out
sti
subb
jmp
jb
and
add
mov
jge
call
cmp
icebp
push
jp
mov
mov
fisubrl
bound
and
cmp
pcmpgtb
mov
xchg
or
mov
xlat
push
push
jle
loopne
mov
inc
fwait
rorl
pop
mov
pop
loop
std
xchg
scas
mov
test
add
popa
or
loop
xchg
repz
in
push
jno
cmp
out
in
dec
jle
mov
jp
leave
push
and
std
popf
xchg
adc
aas
mov
pop
cwtl
call
loope
popa
cwtl
les
ss
inc
or
iret
aas
fdivr
xchg
aaa
dec
mov
jl
sbb
sbbb
imulb
cwtl
sbb
and
sbb
mov
outsb
repnz
call
ret
scas
mov
fiaddl
push
xchg
call
xor
sbb
dec
stos
mov
cmp
xor
xor
cmp
lret
test
fimuls
testb
cmp
lret
jl
xchg
mov
mov
cwtl
jle
mov
out
or
jge
push
mov
hlt
cmp
aas
mov
xchg
push
inc
mov
dec
test
or
jge
mov
pop
fstl
fdivl
push
aad
xchg
std
xor
test
cmpsb
int
dec
dec
or
sbb
pusha
movsb
adc
shrb
cmp
pminsw
pop
mov
push
sub
fwait
inc
std
shl
pop
adc
mov
cwtl
inc
jg
dec
mov
clc
in
lea
lret
iret
pop
pop
xchg
fnstenv
ficompl
pop
test
mov
xlat
insb
sub
add
ja
in
push
fdiv
test
cmp
mov
sub
movsb
inc
divb
dec
xor
mov
in
lods
jne
repnz
inc
jp
cwtl
orl
xor
aas
sti
pop
clc
int3
cmpsb
jmp
outsb
std
cmp
push
daa
inc
dec
mov
jnp
icebp
mull
push
daa
push
pop
cld
sub
test
fistpl
xchg
inc
sub
jo
adc
and
mov
adc
and
jle
sbb
xchg
mov
lret
push
in
test
insl
dec
ror
xchg
pop
scas
add
outsb
add
mov
mov
ret
imul
mov
inc
cli
adc
movsb
test
mov
les
sbb
aam
pop
adc
push
in
aas
mov
lret
fs
mov
mov
test
mov
imul
mov
scas
in
pop
cmp
in
test
pop
pop
mov
push
insb
fnsave
testb
sub
ja
dec
cmp
mull
xlat
mov
out
lds
scas
pop
sub
mov
sub
add
pop
dec
jns
inc
jl
pop
sbb
pop
cs
mov
adc
fisubrs
int3
push
pop
xchg
call
jecxz
pop
pusha
inc
stos
mov
jne
sbb
mov
dec
mov
adc
cwtl
jecxz
mov
pop
sub
xlat
sbb
pop
daa
inc
jmp
or
in
in
cld
das
jnp
stc
xor
fadds
lds
ljmp
fistps
pushl
or
pop
cli
cmp
imul
inc
icebp
sub
lret
push
mov
bound
pop
sub
or
fisttpll
arpl
pop
jge
dec
push
daa
adc
sub
sub
outsb
mov
dec
mov
xor
mov
add
mov
movsb
int3
mov
xor
ret
xchg
lods
imul
jnp
dec
loope
fs
lcall
push
scas
test
mov
mov
pop
cmpsb
xor
push
xchg
popa
cmp
mov
mov
xchg
push
or
lods
sbbb
and
inc
xchg
sub
mov
les
cli
dec
mov
or
mov
xor
mov
fcmove
les
jmp
add
xchg
test
gs
insb
or
push
dec
and
subb
sub
pop
sub
inc
push
mov
cmpsb
lahf
mov
jl
ljmp
sbb
lods
mov
mov
aad
xchg
loop
fs
mov
cmp
outsb
jmp
or
in
pusha
add
lock
lods
lret
push
cmp
mov
and
and
cmp
jp
pop
xor
push
std
pop
or
fxch
xor
xchg
xchg
mov
xchg
xor
es
inc
cld
loopne
fimull
pop
cmp
ss
stos
cld
or
push
xlat
mov
stc
loope
cmpsb
mov
dec
nop
inc
adc
push
push
fcmovb
sbb
aaa
aaa
inc
sbb
fwait
js
enter
xchg
inc
pop
fwait
not
pop
loope
xor
scas
outsl
outsl
cld
dec
clc
sub
mov
sub
adc
aas
xchg
mov
imul
sarl
mov
xchg
sbb
push
aam
inc
les
into
mov
dec
pop
dec
push
lahf
dec
mov
mov
jg
dec
add
push
cwtl
mov
int
jae
xor
test
frstor
nop
outsl
jae
mov
ss
fwait
xor
pop
outsb
cmc
stos
mov
adc
mov
mov
fwait
cmp
push
mov
loope
mov
cmpsl
dec
and
mov
push
or
les
sti
call
ljmp
outsb
rolb
mov
imul
scas
or
insl
arpl
push
or
mov
in
lret
push
movsb
les
cmpsb
shr
push
repz
es
inc
cltd
aas
push
pushf
jmp
or
mov
mov
inc
lcall
test
push
cmp
lods
addl
mov
sbb
pop
add
push
adc
dec
test
mov
lret
xor
movsl
pushf
mov
rorb
mov
lret
insl
imul
mov
sub
push
pusha
gs
jns
pop
pop
popf
int
std
jg
lock
fs
shlb
ret
jp
and
int
mov
dec
add
push
jmp
bound
xor
into
cmp
out
or
rclb
adc
outsb
mov
dec
sub
les
ja
pop
or
movsl
cltd
es
push
imul
ljmp
jnp
pop
insl
adc
dec
xlat
aam
push
sub
es
cs
gs
lcall
hlt
cmc
add
daa
sub
mov
cmpl
lds
pop
ret
lret
jno
aas
addr16
xlat
int3
or
cltd
inc
push
pop
subl
mov
mov
push
aas
adcb
xchg
push
xchg
mov
loopne
cmp
jl
inc
xchg
mov
adc
std
and
aas
or
nop
stos
repnz
loopne
cli
scas
out
in
cmp
pop
mov
push
mov
xor
in
cmp
and
outsb
xchg
data16
in
dec
cli
movswl
sbb
pop
jge
jle
setb
out
rorl
aaa
std
mov
sarl
sbb
inc
rclb
or
jbe
daa
sbb
lock
inc
add
push
jno
bnd
sti
mov
out
insl
xor
ljmp
sbb
test
iret
adc
ret
mov
inc
add
mov
insb
sub
es
mov
dec
stos
xchg
mov
std
xchg
and
jne
int3
lea
jecxz
std
sbb
fdivp
push
outsb
mov
mov
and
cmpsb
ss
adc
in
shrb
xor
pop
cmpsl
scas
add
sti
pop
mov
add
mov
into
mov
sbb
mov
neg
ljmp
or
dec
pop
xchg
push
repnz
xchg
outsb
ret
jb
lods
call
fstps
in
mov
lods
mov
dec
or
jno
fstp
xor
cltd
loope
mov
test
daa
test
push
fisttpll
pop
jo
lcall
movsl
ljmp
jg
add
aaa
pop
loope
mov
pop
int3
pushf
leave
hlt
mov
pop
inc
adc
ljmp
xor
pop
adc
or
cmp
mov
lret
shr
mov
cltd
jae
mov
mov
cmp
push
jb
enter
xchg
mov
loop
sbb
fldt
iret
sub
daa
pop
adc
mov
lret
mov
cwtl
int3
add
jecxz
inc
test
mov
cmpsl
and
cmp
mov
insl
popf
sub
jb
shl
inc
inc
and
xchg
jmp
in
mov
mov
loopne
lds
mov
cmpb
inc
dec
hlt
adc
test
sub
enter
in
enter
xor
cmpl
out
push
jbe
xchg
das
xchg
dec
bound
mov
dec
sub
addl
sub
jp
outsl
popf
inc
sub
jecxz
std
ror
cli
fs
xchg
mov
rclb
jg
sbb
cmpsb
xchg
inc
inc
fs
sub
loope
or
inc
mov
rcll
dec
mov
lods
test
in
add
lcall
imul
fcoms
and
jo
inc
ret
xor
stos
lcall
test
cmpl
sbbb
call
mov
inc
outsb
or
add
mov
and
je
jl
sub
cltd
inc
mov
sub
hlt
xchg
bound
xchg
sbb
int3
add
pop
adc
pop
mov
or
dec
adc
insl
imul
sub
and
rcll
dec
mov
sti
inc
popf
outsl
leave
sahf
mov
dec
sub
mov
fidivrs
test
lret
fildl
push
sbb
ja
inc
xor
xchg
cmpsl
cli
in
cltd
jge
jecxz
pop
pop
int
loopne
outsl
adc
ret
jno
or
aas
arpl
das
pop
pop
xchg
rcrb
lret
add
lods
adc
cmp
inc
lock
popf
mov
movsb
add
xchg
mov
fdivl
int
xlat
mov
jl
or
addr16
insl
insb
psllw
loope
or
cld
cmp
add
sarl
jg
movsl
xchg
mov
mov
movsl
lahf
mov
mov
add
fisubrs
dec
lea
mov
push
aam
or
js
xchg
mov
cli
mov
loop
sbbb
arpl
ja
je
sbb
sbb
test
pusha
push
iret
loop
push
loope
aam
stos
sar
jns
test
inc
dec
arpl
mov
pop
or
pop
cmp
or
mov
lea
xor
lods
lret
and
jnp
bound
out
loop
outsb
iret
mov
stos
shlb
shrl
mov
add
outsb
inc
adc
sbb
testb
outsl
mov
push
sbb
stc
inc
dec
icebp
shr
add
sbb
mov
leave
out
popa
shrb
push
std
xchg
imul
int3
mov
popa
push
ss
xor
cmpsb
ret
pop
in
cmc
negl
adc
insb
jno
aas
enter
jno
orl
xor
outsb
sub
sub
scas
stos
dec
jbe
or
lahf
data16
inc
jecxz
cld
das
cmc
cmp
lods
js
jns
inc
sbb
and
sub
dec
ds
xchg
cmpsb
fstl
mov
rolb
dec
sub
push
sub
rol
pop
call
mov
in
xor
mov
nop
aad
adc
jg
inc
shll
test
js
push
scas
add
test
cmp
arpl
mov
pop
inc
push
imul
mov
push
jg
mov
add
enter
and
out
mov
lahf
pushf
int
popf
test
cmp
dec
dec
adc
leave
cmp
xchg
mov
pop
and
fwait
cmp
push
cmp
mov
cmp
push
cld
and
loop
lea
mov
xchg
test
stos
sqrtps
xor
push
cmpl
int3
mov
iret
inc
xor
and
cwtl
and
sub
push
test
add
mov
pop
jecxz
or
outsl
inc
pushl
pop
and
sbb
adc
sbb
sub
and
push
cwtl
sub
mov
or
fs
xor
inc
push
cmp
int3
jmp
adc
daa
jns
cmp
hlt
push
mov
push
sub
ror
xlat
sbb
pop
out
aad
cltd
and
push
in
adc
mov
mov
call
xor
cmp
ficompl
je
push
jp
bound
das
imul
sti
lahf
inc
jp
xlat
xchg
adc
cwtl
xchg
push
xchg
inc
subb
xchg
dec
lea
out
xchg
pushf
dec
push
cmpsb
cltd
xrelease
daa
out
rorb
dec
mov
or
ss
negb
inc
mov
dec
mov
scas
cmpsl
or
xorl
mov
adc
bound
imul
and
push
jnp
call
mov
ljmp
and
add
or
insb
shll
xor
or
aad
inc
xchg
and
jl
mov
xchg
sbb
ja
jl
or
loopne
in
xchg
jp
ds
jl
je
insb
aaa
popf
mov
aas
jecxz
or
inc
test
pop
movsl
and
pop
jne
xchg
aad
outsl
jae
loopne
and
pop
or
fcmovu
nop
subb
and
leave
add
pusha
mov
hlt
inc
out
icebp
pop
test
iret
scas
jns
in
and
lea
enter
dec
pushl
inc
push
mov
jg
or
pop
push
and
inc
push
jge
mov
out
out
sub
jmp
jns
testl
mov
and
add
push
sbb
add
pop
xchg
or
xor
pushf
ljmp
dec
mov
movsb
add
add
inc
mov
fisubl
test
push
push
ljmp
dec
movb
or
and
imull
cmpsl
orl
cld
fwait
inc
loop
int
jle
arpl
leave
xor
xlat
arpl
push
mov
in
clc
push
stc
addl
jecxz
and
out
movsb
adc
adc
stos
ds
sahf
mov
sub
jnp
add
mov
and
xchg
sub
rolb
clc
mov
pop
mov
es
push
dec
negb
dec
add
or
test
push
sbbl
adc
jne
cmp
sbb
arpl
sub
mov
and
cmp
test
cmpsl
fwait
or
jne
mov
mov
sahf
or
in
mov
mov
mov
pop
je
adc
loopne
or
rcll
mov
outsl
sbb
in
jecxz
push
pop
xchg
je
mov
dec
bound
das
push
ja
loopne
or
sbb
pop
xchg
repnz
jmp
call
inc
lods
jecxz
movsl
enter
mov
dec
gs
mov
int
insl
mov
shr
cmp
mov
aad
sub
sbb
dec
outsb
push
xchg
stos
xor
jle
js
push
in
leave
inc
lea
adc
std
pop
xor
ljmp
push
mov
lods
pop
mov
adc
lods
fwait
xchg
jle
addr16
std
je
xor
sti
xchg
pop
jbe
addr16
out
ja
mov
pop
ror
in
adc
xchg
shll
out
xor
ds
dec
sbb
mov
jg
jae
mov
sahf
xor
aaa
cmpsb
shlb
clc
inc
sub
lret
lods
es
and
push
test
push
ljmp
jmp
mov
sbb
lods
mov
pop
push
cwtl
int3
mov
or
leave
ja
jbe
jecxz
sub
out
js
fwait
stos
aas
fadds
cmp
dec
inc
mov
or
aam
cmpsb
lods
push
mov
dec
mov
repz
push
jle
push
ret
cmp
add
daa
aaa
mov
push
and
add
and
push
sub
push
aaa
movsb
mov
jb
inc
cmp
mov
pop
lea
jmp
push
cmp
adc
jnp
and
stos
or
ret
cltd
insb
in
setns
add
leave
add
mov
inc
inc
lcall
out
xlat
pushf
dec
dec
mov
sbb
pop
mov
test
mov
and
mov
jns
jp
inc
insl
leave
sub
data16
xor
fcmove
dec
dec
daa
lret
and
adc
stc
mov
cmpsb
push
in
add
std
test
xchg
stos
movsl
mov
push
imul
sbb
push
je
fnstenv
lods
into
adc
xchg
xchg
mov
lcall
dec
aaa
jne
jo
es
sub
mov
xchg
sbb
jg
push
gs
dec
pop
cmp
loopne
mov
xor
popa
or
add
enter
add
xor
shlb
popf
dec
fcoms
sbb
fmuls
scas
jmp
dec
mov
or
xchg
xor
push
ret
pop
lcall
insb
xor
dec
les
or
cmc
mov
xchg
jns
int3
jbe
les
int
mov
sbb
mov
mov
sbb
sub
out
in
xor
lahf
leave
xchg
and
pop
sub
mov
je
mov
fistpl
pop
outsb
pop
fisubrl
sub
jmp
or
daa
daa
and
js
xchg
xor
jl
sbb
ffree
icebp
xchg
jmp
inc
js
push
jns
mov
shl
mov
int
movsb
xor
data16
pusha
iret
pop
ret
into
dec
repnz
lret
xlat
mov
cli
mov
xchg
adc
inc
nop
fwait
out
mov
test
shlb
jle
testl
sbb
fadd
inc
or
fiaddl
cltd
es
lcall
jnp
push
popa
test
or
mov
jbe
push
push
rolb
push
xor
and
mov
aas
xchg
sahf
leave
or
ret
jmp
pop
das
and
cmpsl
jo
pop
popa
test
arpl
and
pop
mov
or
and
fadds
int
push
jbe
and
cmp
insb
pusha
mov
jbe
inc
cmpsl
sub
push
sub
inc
pop
push
jno
mov
push
push
xchg
xchg
cmc
cli
fsubs
mov
fs
cmpsb
dec
fistl
xchg
lea
loope
push
aam
or
inc
pop
imul
jnp
jmp
jl
xchg
sub
mov
loopne
xchg
add
sub
fists
and
push
add
xchg
arpl
xchg
lea
xchg
sti
xlat
dec
lcall
cmp
inc
fmuls
daa
xchg
sar
enter
invd
ljmp
in
adc
fmuls
inc
xchg
add
lret
fadd
in
ja
aas
sbb
mov
fadds
or
std
into
lock
adcl
lea
icebp
cmp
or
and
jl
lods
divl
lods
push
jbe
pop
jge
repz
lods
mov
test
pop
mov
insb
add
inc
inc
popl
mov
add
cmp
ss
xchg
mov
es
pop
ss
inc
or
bound
cmp
cwtl
fidivrs
jge
mov
daa
aam
or
jmp
inc
out
test
ds
xchg
jle
sub
je
inc
inc
out
movsl
sar
xchg
xchg
jmp
pop
into
sub
outsl
jno
pop
test
xor
mov
jle
push
dec
dec
nop
xchg
sub
pushf
fsubrl
xor
shrb
sub
or
adc
mov
sar
insl
outsl
pop
fwait
xor
mov
jp
notb
lods
sub
fcoms
dec
movsb
dec
mov
iret
adc
mov
adc
cltd
push
add
notl
mov
cmp
movq
notl
pop
test
pop
inc
fmul
inc
mov
push
adc
gs
ljmp
mov
sub
add
fwait
rcrl
inc
mov
fimuls
and
jbe
adc
hlt
dec
pop
adc
pop
neg
rcrb
push
popa
inc
sub
mov
pop
push
mov
pop
icebp
cltd
push
cs
cltd
or
jge
and
jge
mov
inc
and
int3
mov
sti
add
shll
fwait
lea
fbstp
or
into
sti
inc
and
cmp
cmp
dec
push
dec
hlt
fwait
push
mov
daa
lock
mov
movsb
inc
jno
in
stos
dec
stc
cld
add
rol
stc
push
xor
cli
outsb
xor
jmp
pusha
sahf
testb
dec
mov
data16
ss
lret
stos
xchg
xor
push
out
jmp
jge
pop
push
jbe
outsl
popf
enter
daa
aad
sbb
jbe
adc
adc
adc
xchg
and
rorb
cmc
jl
stos
push
push
fwait
in
cmpsb
lds
inc
fs
mov
mov
fistpl
mov
pop
adc
sub
xor
out
ficomps
xchg
ficomps
adc
push
mov
pushf
add
loop
mov
js
xlat
aas
lahf
ds
and
out
and
xchg
pop
aaa
xlat
scas
out
pop
orb
mov
fstps
mov
ss
fidivrl
or
or
ret
push
lock
jmp
ja
inc
pop
jecxz
movsl
vxorps
mov
pushfw
and
dec
dec
fidivrs
cs
fwait
loope
adc
dec
fs
jbe
lret
lret
sub
lea
addr16
pop
dec
int
pop
xor
pop
daa
add
and
lret
jbe
xor
cwtl
into
test
lcall
enter
pop
push
jp
xchg
mov
lret
test
test
xor
fiadds
mov
jg
dec
outsb
adc
sbbb
lods
dec
lods
dec
push
mov
jne
adc
jb
int3
cmp
or
jle
mov
mov
xorb
movsl
sbb
mov
pop
push
and
jb
pop
aam
jo
cmp
jne
pop
inc
pusha
test
js
cmp
xchg
test
jb
clc
js
xor
insb
fucomi
sub
jle
mov
pop
dec
mov
leave
cmp
push
sarb
jle
dec
rcrl
mov
sbb
insl
mov
xchg
or
data16
or
lea
pop
rolb
es
mov
out
xor
stos
daa
sbb
nop
xlat
cltd
lock
jg
push
scas
ror
adc
jl
popa
sub
repz
jnp
adc
xchg
sahf
xor
pop
xorl
jne
aam
pop
sub
cmpsb
pop
mov
ss
push
fs
stc
cltd
std
push
test
xor
bound
pop
or
push
mov
outsb
sbb
fdiv
push
nop
fmuls
leave
and
dec
and
jmp
inc
shlb
add
jne
cld
fsubs
bound
pusha
sbb
gs
jmp
dec
or
lds
insl
nop
cmc
loopne
pop
lods
pop
cmp
sti
inc
pusha
dec
cld
mov
push
xchg
stos
lcall
add
push
xchg
cmp
adc
fcmovnbe
sub
sub
jg
inc
daa
push
mov
das
adc
xlat
arpl
xchg
cs
fstl
les
cs
and
insl
or
ficompl
mov
xchg
aad
popf
xchg
movsb
mov
data16
in
lock
bound
lcall
jmp
sbbb
inc
test
rcll
jbe
mov
aad
fistpll
cmp
push
sbb
ja
mov
inc
pop
jo
stc
jb
adc
adc
jne
cltd
lret
fmull
mov
leave
lods
lret
cmp
xor
popf
test
dec
dec
iret
ss
inc
jno
repnz
or
int
adc
ret
inc
scas
xor
or
dec
xor
or
xor
insb
pop
insb
or
cld
or
sub
adc
cmp
mov
test
js
iret
mov
idiv
mov
adc
push
outsl
dec
icebp
fistpll
pushl
fadd
push
shll
jmp
mov
push
jae
pop
sub
movsl
add
in
dec
in
cld
push
inc
pop
loop
aas
jae
sub
push
nop
mov
push
or
xor
ja
pop
aaa
jp
jecxz
sub
mov
adc
into
in
daa
ljmp
fisttpll
xor
aam
mov
cmc
add
loope
inc
push
test
dec
fwait
or
loop
int3
and
inc
sbbb
xlat
repnz
in
test
insb
sti
cmc
push
cs
push
pop
push
pop
pop
out
icebp
shlb
cmp
mov
es
sbb
hlt
inc
add
jge
xchg
sahf
ljmp
sub
sbb
or
das
mov
push
push
test
add
jnp
push
gs
stos
inc
push
fs
incl
lods
out
sub
mov
mov
or
sub
cmp
loop
add
and
inc
sub
sub
dec
fildll
repnz
jns
daa
iret
mov
adc
outsl
mov
stos
mov
add
and
gs
stos
popf
push
arpl
orb
sub
cmpsb
xor
fistpll
and
jl
pop
cmc
mulb
stc
push
adc
mov
push
dec
dec
test
stos
push
jno
data16
xor
ret
lea
mov
push
sbb
xchg
leave
or
js
pusha
dec
dec
orb
sarl
aaa
cltd
hlt
push
push
int
jge
xchg
sbb
incl
push
mov
orb
pop
aam
adc
adc
loopne
or
lock
sub
lods
cmpsl
out
add
adc
jo
or
out
or
inc
dec
lods
insl
jmp
sbb
sub
enter
sbb
ficomps
mov
adc
inc
sbb
pop
cmpsb
out
test
cmp
mov
xchg
cmp
arpl
je
mov
push
outsl
push
inc
dec
xchg
xchg
cs
loop
sahf
std
subb
inc
pusha
add
lock
rcll
insb
pop
pop
popa
jp
test
and
insb
lea
js
movl
pop
out
outsl
jle
inc
shrb
mov
je
in
test
sbb
jle
adc
lock
and
cmp
shr
add
in
dec
jecxz
mov
pop
xchg
stos
loop
into
insl
mov
xchg
xchg
out
mov
sbbl
xor
shrb
popf
or
leave
add
push
inc
mov
push
sub
cli
or
lods
mov
insb
xor
dec
mov
into
or
fucomi
push
dec
mov
adc
add
lcall
movsl
insb
pusha
xchg
bound
repnz
insl
fs
subb
pop
lret
iret
mov
jns
mov
sbb
loopne
btcl
jne
jg
jmp
add
add
push
ja
lret
sub
xlat
pusha
push
outsb
mov
lcall
mov
insb
in
mov
outsb
in
or
mov
pushf
cltd
xor
jge
insl
dec
xor
xchg
sbb
lret
sub
outsb
shr
out
jns
repz
mov
ret
xor
fs
cs
mov
xchg
sbbl
das
mov
inc
xor
jo
pop
notb
push
fstpl
sbb
shlb
mov
pop
dec
mov
mov
fisubrs
inc
shlb
inc
cmc
sub
xor
dec
push
or
sbb
mov
iret
mov
mov
and
es
imul
jne
jnp
ret
mov
push
add
mov
cmp
into
sbb
mov
rolb
adc
loopne
push
lahf
in
mov
pop
btc
dec
cmpsl
mov
pusha
or
insb
and
pop
in
popa
jecxz
call
sarl
push
push
lods
push
xchg
jg
shrb
fstl
cmpsl
popf
sub
jnp
enter
scas
lahf
mov
imul
test
ret
es
add
sarl
stos
cs
fcmove
push
fwait
cmpsb
or
fnstcw
adc
mov
dec
add
sahf
jle
ret
dec
fadd
cmpsb
lret
mov
sub
enter
addr16
jle
add
mov
adc
hlt
sub
loope
xor
movsb
enter
aas
adc
push
jno
movsl
mov
lret
shlb
mov
call
or
and
shll
inc
push
leave
jno
cli
push
cmp
loope
or
scas
aas
xor
mov
jecxz
repz
jmp
sbb
adc
mov
arpl
scas
cmc
lcall
jb
adc
xorl
sbb
mov
enter
jb
sub
lret
sub
movsb
lret
clc
fsub
sarb
sbb
leave
adc
jne
cli
rcr
xor
stos
pop
lcall
jp
ds
pop
dec
mov
pop
gs
shr
or
pop
and
add
sub
dec
push
jl
sub
fidivl
sub
pop
icebp
adcl
lods
daa
pop
push
out
or
lret
dec
inc
lds
orl
mov
mov
leave
mov
pop
rcr
push
push
push
lea
and
push
xor
ss
push
dec
dec
jecxz
pop
add
xor
push
mov
aad
out
mov
xchg
in
sahf
jp
in
sbb
mov
incb
int
aad
pop
jae
test
dec
push
movsb
pop
lods
mov
pop
gs
jnp
jle
pop
mov
cmp
loop
inc
test
aad
mov
push
enter
insb
out
sub
cmp
xor
push
ljmp
jecxz
xor
mov
or
inc
mov
pop
adc
lret
sbb
push
imul
repnz
shlb
subb
cmp
fcoms
das
sbb
xchg
jne
jno
clc
ret
mov
stos
pop
test
ret
inc
jns
stc
pop
dec
pop
sub
cmpsl
sahf
xchg
es
lods
push
sbb
cltd
aad
mov
sub
xchg
addr16
cmp
cwtl
inc
ret
cmp
test
pop
jb
loop
sbb
testb
not
and
in
pop
ror
sub
cmp
mov
push
fiadds
outsb
js
adc
xchg
inc
and
cmp
push
push
fisubrl
and
cli
enter
je
mov
dec
and
sti
mov
push
addb
sbb
jnp
adc
inc
pop
mov
pop
add
lods
inc
add
dec
imul
adc
movzwl
mov
test
jo
push
hlt
lods
push
jge
add
sbb
push
jo
lock
sbb
push
jbe
xor
mov
js
adc
xor
fcomps
in
adc
insb
in
cli
sbb
sub
xorl
insl
iret
pop
mov
rorl
loope
mov
test
xchg
ret
mov
sub
dec
aas
hlt
add
pop
cmc
xor
mov
mov
imul
std
or
je
cli
js
mov
icebp
push
or
xchg
cmp
mov
in
jbe
dec
and
cmp
jae
insb
dec
aam
mov
movsb
nop
icebp
push
call
inc
stos
xchg
popa
mov
enter
leave
sbb
dec
dec
jge
xchg
fistpll
pop
ja
lea
mov
fcom
jae
ljmp
cmpsl
mov
js
fdiv
std
outsl
test
std
cmp
add
pop
flds
test
push
adc
push
pushf
cwtl
dec
imul
and
fisubs
lds
lea
sub
mov
adc
xchg
fwait
jg
add
mov
inc
cmpsb
pop
add
jno
add
stos
fwait
push
inc
jg
ja
fidivl
mov
cltd
dec
jae
aad
int3
cld
in
loopne
leave
pushf
jbe
icebp
mov
xchg
jbe
cmp
jge
fildl
fucomi
dec
mov
dec
repnz
inc
rcl
pop
call
or
fyl2x
rcr
and
stos
inc
dec
adc
push
sub
pop
cld
pop
cltd
in
add
pop
fidivs
mov
sbb
out
cmpsb
nopl
push
add
mov
mov
adc
dec
movsb
js
and
out
add
leave
aas
and
mov
sub
jmp
adc
xlat
mov
pushf
leave
mov
mov
les
out
addps
or
and
addb
jmp
jmp
jns
add
fisubs
sbbl
cmp
jmp
jg
jl
mov
gs
jb
sbb
out
out
rcrl
jp
and
leave
movsb
xor
je
rcrb
jns
outsb
push
cld
pop
pop
push
adc
pop
adc
or
sbb
testb
push
pop
sbbl
or
fdivrp
insb
xchg
icebp
jbe
sub
je
mov
mov
pop
sbb
inc
sahf
xchg
aas
in
xchg
arpl
push
jae
in
xlat
mov
jnp
mov
or
jle
adc
push
mov
jl
fnsave
std
jmp
jle
negb
pop
mov
loop
imul
ficompl
loope
dec
jmp
pop
test
movsb
sbb
mov
popa
cli
lods
or
out
in
roll
push
and
or
loope
repnz
xchg
push
sub
dec
leave
mov
and
xor
dec
jmp
xchg
adcb
insb
test
inc
incl
call
pop
xlat
jo
in
jg
cmc
jo
out
mov
pop
mov
cmp
jne
incl
aaa
push
xchg
push
stos
dec
subl
ja
fwait
push
xor
int
lret
popa
andb
test
and
mov
cmp
jne
jecxz
adcl
outsb
stc
ret
xor
adc
jg
xor
push
frstor
lret
mov
sbb
aas
xchg
shl
sbb
xchg
fmulp
call
leave
lahf
mov
shr
testb
inc
sub
mov
or
shrb
cmp
shr
push
cmp
sbb
fwait
js
lea
cld
mov
sub
lea
enter
cmp
or
les
sub
movsl
rorl
cmp
mov
push
or
or
xchg
sbb
jns
lods
and
add
test
scas
sbb
xchg
or
ja
stc
fdivrl
int3
sbb
sub
mov
push
jno
xchg
dec
repz
fdivl
jecxz
inc
inc
fcmove
push
push
rclb
inc
jne
push
inc
test
dec
inc
dec
rclb
in
jge
fiaddl
mov
ljmp
xchg
xchg
dec
call
mov
mov
jo
test
testl
scas
cli
imul
dec
out
test
arpl
rcll
rolb
lock
fidivrs
cmpsl
repnz
lds
dec
pop
dec
inc
xchg
sti
xchg
test
sarb
incb
fistpll
push
ret
inc
test
push
pop
jbe
cmp
lods
jp
add
cmp
adc
test
mov
sbbl
cwtl
insb
sub
enter
enter
sub
sub
sub
call
outsb
jae
pop
push
int3
enter
cmp
sbb
push
movsl
and
dec
sbb
adc
jg
push
clc
add
pop
loop
jle
fwait
xchg
adc
hlt
subl
cmp
test
and
add
shlb
sti
cmp
dec
sbb
int
and
and
test
add
mov
push
es
mov
aas
adc
pop
in
aam
jecxz
decb
pop
pop
fs
imul
andb
push
add
jmp
xchg
insl
sbb
inc
andl
clc
jmp
jae
repz
push
cmp
pushf
and
cld
shrl
dec
inc
lret
or
pop
leave
dec
lahf
xor
xchg
xlat
repnz
insb
lret
clc
dec
pop
push
push
add
mov
sbb
das
mov
add
sub
xlat
push
out
xchg
testb
sbb
stos
xor
popl
mov
test
pushf
jmp
or
pop
outsb
push
push
test
sbb
notb
sub
sub
adc
in
enter
mov
xlat
sub
dec
lds
xchg
pop
inc
mov
adc
mov
outsl
daa
mov
dec
mov
mov
daa
mov
inc
cmpb
sbb
jae
pop
sub
out
add
xchg
or
inc
adc
rcll
outsb
sub
lds
imul
pop
je
xchg
jb
enter
sarl
mov
xchg
jmp
adc
cmp
mov
ret
xchg
fdiv
or
mov
mov
bound
in
xchg
cmp
out
outsb
push
dec
fisttpl
cwtl
lret
xchg
aas
and
jle
cmp
inc
and
fwait
jmp
sub
lcall
pop
add
lds
push
data16
aaa
test
mov
rorb
sahf
rcr
cli
dec
xor
jmp
loopne
mov
loop
mov
cmpsb
mov
dec
cltd
es
inc
dec
pop
xchg
cmp
ljmp
aam
sahf
pop
inc
cld
fisubl
xor
push
sbb
mov
data16
inc
sbb
sahf
adc
cmpsl
cltd
pop
xor
jmp
jbe
adc
ss
movsl
dec
xlat
loopne
pop
sub
fcomip
ljmp
in
dec
call
mov
movsl
pop
rolb
repnz
rclb
push
iret
mov
movsl
inc
xor
out
xor
push
nop
jbe
mov
je
pop
push
cmp
nop
pop
or
jecxz
pop
ds
or
stc
mov
pop
xchg
test
add
jns
dec
dec
movsl
mov
lods
int3
cmp
mov
pop
mov
insl
adc
ror
inc
xor
inc
icebp
cld
mov
dec
jp
arpl
repnz
jb
jl
sahf
dec
pop
cwtl
pop
add
and
out
pop
adcb
bound
push
cmp
shrl
sbb
imul
dec
mov
ljmp
dec
dec
push
mov
add
scas
jmp
mov
push
pop
sbb
jge
mov
gs
icebp
cmpsl
sbb
sbbl
xor
sbb
dec
lods
insb
sti
or
cmpsb
inc
out
and
fldcw
push
je
pop
cmp
gs
sub
test
mov
fldcw
loopne
jecxz
fimull
imulb
add
rol
push
xchg
jecxz
lea
push
notb
mov
in
jecxz
push
lods
enter
loope
insb
mov
js
test
and
iret
in
mov
fcmove
xchg
and
out
negb
hlt
mov
outsl
aas
loop
out
jl
mov
loope
and
dec
pop
ror
ss
jmp
out
subb
mov
ljmp
pop
inc
mov
lret
lods
push
add
testl
mov
xchg
xor
loopne
add
dec
imul
cmpsb
call
out
in
sbbb
movsl
mov
jnp
daa
dec
xlat
int
sub
movsb
jp
dec
mov
aas
xchg
push
fisubs
lods
mov
fdivrs
adc
xor
ret
aam
mov
sbb
xchg
push
mov
pusha
stos
test
inc
pop
cmp
dec
in
push
mov
into
int3
ret
sbb
mov
inc
cmpsb
ss
push
pop
dec
cmp
xor
popf
lods
in
jae
out
adc
push
sbb
out
push
fwait
xchg
add
std
and
lret
mov
lea
ds
mov
cmc
pop
sbb
pop
cmp
push
mov
out
test
xchg
lret
push
cmpsl
adc
pop
in
inc
rcl
sbb
js
jg
call
pop
dec
scas
sbb
sbb
fcmovne
jmp
insb
jbe
cltd
cli
pop
push
jge
cs
or
jbe
popa
or
je
xor
or
adc
fistpll
jno
add
into
or
in
mov
jnp
inc
sahf
sti
mov
inc
mov
sub
addl
jmp
pop
fsubs
fsubr
add
and
pop
or
cmp
pop
fdivrs
inc
mov
sbb
or
push
adc
mov
int3
mov
mov
sub
lods
rorl
ja
lods
sbb
xchg
and
add
cmpsb
out
int
cmp
subl
cmpsl
mov
inc
mov
in
xor
xor
arpl
jns
addl
lds
les
jo
push
int
in
shrl
pop
jmp
addr16
bound
pushf
push
notb
repnz
pop
cmp
fs
mov
jae
movsl
dec
xor
mov
add
das
pop
push
bound
adc
xor
mov
inc
test
ds
ljmp
stos
push
faddl
cmp
mov
mov
push
dec
dec
xor
insl
fisubs
sti
sbb
daa
mov
sbb
bound
push
test
iret
adc
fs
loop
jo
loopne
jno
and
arpl
gs
andl
lcall
xchg
mov
pop
filds
and
int3
mov
jge
ret
jo
ja
pop
cltd
add
aad
adc
or
or
and
xlat
pop
mov
fdivrs
out
jns
xor
rep
aam
mov
fs
and
mov
xchg
out
pop
sub
and
mov
rolb
mov
shll
lcall
mov
cmc
mov
negl
iret
sbb
pushf
inc
icebp
pushf
cmp
sbb
jmp
idivb
cmpsl
adcb
mov
jae
fidivl
mov
xchg
mov
pushf
scas
testl
sub
dec
dec
pop
hlt
mov
mov
scas
sbb
aas
push
and
sbb
mov
pop
pop
fs
lods
sbb
repnz
movsb
pop
jbe
bnd
ret
and
pop
mov
sbb
fstpt
fists
and
xchg
mov
jg
mov
cltd
dec
int3
repz
sub
aam
sub
movsl
push
mov
add
mov
adc
or
pusha
cld
outsl
pop
mov
inc
je
sti
jl
mov
in
pop
jle
xchg
mov
loop
pop
mov
lods
jge
sub
xchg
loop
mov
dec
jg
iret
nop
pop
xchg
into
adc
iret
lea
aad
fldt
icebp
dec
call
add
jecxz
aam
shrb
dec
js
add
inc
movsl
inc
movsb
aaa
lds
mov
jo
or
rolb
iret
sti
outsl
aas
popf
jp
inc
repnz
push
add
scas
es
sub
xor
pop
dec
adc
dec
inc
in
push
in
dec
pop
xor
movsl
rep
mov
nop
push
scas
jl
loop
jb
insl
fnstcw
sub
xor
popf
push
sti
mov
adc
cmp
dec
xchg
ret
js
pop
adc
inc
ret
sahf
xor
sbb
lods
mov
push
enter
push
aaa
push
jnp
jl
mov
and
mov
mov
mov
add
mov
push
cmp
ljmp
inc
ja
cmp
cmc
jp
adc
mov
lret
rcr
or
pusha
fnstcw
addr16
je
in
jle
mov
inc
jo
pusha
inc
mov
filds
ss
jl
xor
mov
popf
jo
pop
adc
cld
sarb
pxor
mov
incb
incl
rcl
into
and
cmp
outsl
aam
aam
mov
dec
push
pop
jge
sub
mov
push
sar
int3
xchg
ss
xor
push
dec
int
sub
scas
int3
push
pop
andb
inc
testl
jge
pop
or
lret
ss
mul
mov
rcl
cmp
pop
sub
push
outsl
mov
jle
and
insl
push
sbb
pop
nop
and
push
and
add
loope
inc
arpl
jbe
mov
sahf
push
cmovp
in
or
jp
adc
and
aaa
out
nop
xchg
lcall
pop
inc
sub
psraw
out
fsts
insb
mov
cmp
inc
pop
pop
or
lock
ljmp
adc
insb
loope
out
push
push
mov
fsubs
xchg
mov
test
add
cmpsl
push
cltd
cmp
pop
jo
push
mov
jb
les
out
inc
sub
mov
mov
out
mov
cmp
push
pop
rorb
loope
std
mov
xchg
test
sbb
lret
mov
popa
jnp
inc
inc
dec
mov
stos
sub
cmp
clc
sahf
lock
mov
rolb
out
push
sub
test
ja
jmp
scas
mov
lcall
mov
repz
mov
sbb
adc
enter
pop
lret
sub
and
dec
bound
sbb
push
cs
repz
add
jne
out
popf
stos
dec
popa
or
inc
adc
imul
push
scas
jbe
lcall
adc
das
cwtl
mov
js
dec
std
call
sbb
fadd
cs
stos
jbe
pop
push
mov
ljmp
stos
jp
fistl
and
cmp
ss
fucomp
xchg
push
sub
mov
sti
inc
fs
cmpsl
std
dec
adc
push
xchg
push
movsl
daa
ss
clc
dec
pop
sbb
sub
xchg
xlat
repz
xor
mov
adc
mov
cmp
mov
mov
clc
fstps
in
inc
jle
mov
or
mov
bswap
mov
sbb
fstl
pop
pop
int
aas
je
stc
addr16
in
orl
push
or
clc
mov
sbb
cli
das
inc
add
add
add
or
xchg
cmp
cmpb
inc
or
ja
jne
push
aam
mov
daa
push
pop
add
cmpl
clc
mov
test
mov
push
jmp
cmc
jmp
adc
adc
push
push
hlt
loopne
call
or
xor
inc
xchg
in
lahf
notb
xchg
cmp
mov
stos
daa
enter
cmpsb
mov
mov
push
adc
shll
xor
inc
xor
rcrb
add
loope
or
ret
dec
daa
jmp
in
push
sub
daa
in
ret
mov
insb
int
mov
mov
adc
adc
aaa
inc
adc
out
cmp
add
pop
xchg
or
aas
xchg
fistpll
push
add
adc
test
lock
or
fsubs
cmpsl
jnp
cmp
dec
ljmp
pop
mov
cmp
inc
iret
push
jo
xchg
bound
sub
cmp
data16
dec
and
jp
xchg
pop
fdivr
xlat
loopne
pop
push
js
shrb
adc
sahf
cmp
test
andl
jnp
mov
push
mov
mov
testb
les
inc
jb
xorb
add
and
pop
mov
repnz
sbb
dec
sbb
jae
popa
aam
mov
pushf
pop
lds
jge
fsts
decb
xchg
out
cvtdq2ps
inc
dec
xchg
icebp
inc
repnz
faddp
stc
xor
pop
aas
stc
pop
stos
pop
cli
adc
xor
mov
ja
leave
inc
addr16
add
dec
xchg
imul
fisttpll
addr16
mov
and
roll
xchg
add
pop
adc
sbb
xor
jecxz
mov
xchg
faddl
cmp
lods
arpl
aam
in
push
mov
lahf
data16
lods
or
dec
jmp
push
lret
das
jns
addr16
sti
add
adc
std
and
fwait
stc
lcall
out
cmp
pushf
push
adc
cmpsb
adc
cmp
repz
cmc
bnd
cld
xchg
mov
push
and
mov
cmp
aaa
push
ficompl
adc
ret
sub
popf
cmpsb
inc
pop
cmp
int
jo
clc
bound
sbb
xor
add
dec
or
out
mov
in
cmp
mov
pop
dec
push
push
rclb
stc
hlt
xchg
sbb
dec
xchg
gs
popf
xor
jmp
incb
adc
sbb
add
push
add
push
sub
ljmp
int3
xor
xor
add
test
cmp
aas
test
sarb
in
mul
jnp
mov
adc
sbb
sbb
aad
out
out
inc
mov
pusha
call
jg
scas
aad
push
xor
lret
xchg
cltd
push
mov
sbb
sub
divl
aad
stc
cmpsb
sub
lret
pop
and
cmp
aaa
outsl
pop
inc
mov
movsb
out
jo
xchg
fadd
test
out
lock
push
xor
fisubs
sbb
ja
bound
in
insb
cmpb
mov
xchg
shlb
cmp
out
or
and
out
sub
add
ret
outsl
push
mov
pop
mov
outsb
jecxz
fdivl
mov
fdivrl
fsubl
out
mov
std
aam
xorl
xchg
add
add
mov
xchg
lock
sahf
rorb
mov
mov
add
sbb
subb
sub
jae
ljmp
imul
xor
xchg
xchg
pop
lods
push
inc
inc
adc
sarl
jo
push
pusha
push
xor
cmpsb
daa
sub
mov
inc
icebp
xor
hlt
repnz
test
dec
orl
sub
cmp
adc
negb
int3
test
daa
test
out
mov
mov
push
cmpsb
loop
xchg
fldenv
jb
xchg
sub
mov
ret
jg
lea
lcall
and
jmp
out
sub
xor
adc
sbb
lock
inc
out
stc
ret
lahf
and
cmp
mov
mov
pop
mov
add
daa
mov
dec
sbb
lock
lcall
xor
sahf
xor
stos
cmp
add
mov
aas
dec
in
pop
test
or
mov
and
aas
sub
mov
mov
add
sbb
xor
test
xlat
je
jp
and
in
jg
das
cmpb
dec
call
pop
xor
push
imull
out
xor
xchg
mov
dec
cmc
mov
mov
fists
addr16
test
movsb
add
fiaddl
sbb
cmp
leave
inc
cli
outsl
adc
mov
or
aad
ljmp
ficomps
test
and
fldt
dec
lods
arpl
mov
inc
add
cmovns
cmc
push
out
stos
lret
dec
dec
and
fnstenv
test
add
dec
lods
ret
ds
adc
shlb
aad
in
or
je
add
lcall
imul
adc
and
inc
xchg
push
or
les
jns
xor
or
pop
bound
pop
sub
dec
mov
cmc
inc
push
sbbl
jno
mov
xchg
push
jae
daa
in
sahf
movsb
xchg
jns
es
jns
dec
out
push
mov
and
adc
repz
stos
lret
popf
dec
lret
jo
inc
sahf
dec
push
bound
pop
xor
loope
stos
ret
inc
mov
push
gs
mov
insl
mov
jle
add
mov
inc
addr16
fwait
ja
or
insl
adc
mov
adc
loop
cmp
in
mov
xchg
add
je
mov
inc
push
faddp
pop
jno
add
fsubp
test
xchg
dec
bnd
lret
ljmp
test
stos
js
inc
imul
mov
movsb
sti
add
lcall
mov
adc
sub
xorb
sbb
sbb
cli
arpl
dec
jp
fstpt
pop
sub
jl
inc
and
jno
push
gs
mov
les
mov
add
xor
pop
cmp
mov
dec
cmc
ljmp
insb
movsb
js
loop
bswap
add
xor
adc
mov
inc
add
das
les
mov
jle
jnp
push
adc
fstpl
adcl
mov
or
or
push
xor
or
sbb
scas
mov
jle
jnp
cs
jo
sub
cwtl
repnz
adc
pop
jb
dec
dec
xchg
and
std
push
jae
mov
jno
mov
lods
out
or
test
int3
icebp
push
mov
pcmpeqw
jmp
sbb
popf
xchg
scas
mov
dec
movsb
xor
xor
or
or
and
and
and
gs
insl
and
cmp
mov
jns
sub
shl
fisubl
mov
in
movsb
or
push
test
jne
loop
sbb
mov
pop
inc
cmp
hlt
add
enter
dec
adc
and
gs
adc
loope
adc
aam
cs
cli
jp
cmp
lret
rcrb
cs
sub
add
push
mov
pusha
imul
cs
rcr
and
pop
in
cwtl
idivb
adc
xchg
pop
lea
arpl
loope
cltd
mul
das
sub
stos
mov
sbb
add
shrb
jmp
lcall
int
icebp
iret
mov
ja
lret
out
nop
aam
push
sbb
jo
std
in
cwtl
pop
xchg
inc
lret
addr16
mov
mull
mov
pop
push
and
sub
mov
xor
cmp
mov
roll
rep
adc
jmp
js
sbb
xchg
cmp
sbb
subb
lret
cltd
stos
je
repnz
hlt
add
adc
mov
mov
dec
lret
mov
loopne
or
push
lcall
push
push
outsl
mov
call
mov
out
aam
stos
jno
xor
cmp
or
adc
mov
mov
notb
xchg
jae
lods
and
adcl
xor
aaa
mov
and
cmp
fildl
sti
nop
in
xor
rcll
jno
jb
mov
dec
dec
mov
jl
adc
mov
popl
lcall
mov
outsb
test
lret
insl
subl
xchg
dec
add
lret
mov
jnp
dec
mov
xchg
cld
jns
sbb
in
adc
or
or
inc
icebp
and
fmuls
sarb
sti
dec
and
cmp
sub
ds
rclb
dec
mov
jp
pop
pop
aam
sbb
dec
shlb
repz
std
outsl
mov
jne
jg
mov
push
addr16
xor
pop
movsb
jle
pusha
sbb
nop
ja
adc
movl
push
fwait
adc
pushf
lcall
gs
dec
pop
int
lahf
push
lea
movsl
inc
sbb
and
in
cli
or
or
scas
inc
xchg
pop
sub
leave
es
add
pop
cld
mov
aam
xchg
movsl
mov
xlat
adc
add
mov
xchg
je
inc
cmpsl
fildll
adc
orb
outsl
frstor
loopne
out
or
aad
mov
mov
pop
cmc
jp
data16
push
add
xchg
add
test
mov
xchg
fdivs
mov
gs
dec
adc
cmp
clc
out
push
fsubrs
inc
fildl
rorb
test
decb
push
mov
lret
inc
imul
jecxz
mov
xor
lea
jecxz
push
fisubrs
and
ret
in
es
push
fs
ret
lahf
out
adc
xchg
out
ja
xor
fdivs
fwait
rcll
ja
adc
stos
testb
lods
mov
or
sub
std
or
aam
popf
and
mov
xchg
fwait
mov
mov
cmpsl
push
out
addr16
xchg
xlat
in
mov
fidivrl
les
jo
out
adc
pop
and
les
or
enter
mov
movsb
mov
in
jp
popf
aas
xor
nop
mov
cmp
dec
fidivrs
push
fwait
push
notl
mov
sub
inc
push
popa
cltd
fwait
rolb
sub
xor
dec
adc
testb
mov
and
sbb
mov
inc
out
xchg
fdivl
je
idivb
jae
xchg
je
jns
mov
cwtl
icebp
pop
stos
adc
jno
inc
and
mov
sbb
adc
pusha
adc
xchg
iret
dec
or
mov
outsb
pop
adc
lods
xchg
dec
loop
cwtl
pop
mov
jg
push
push
mov
mov
pop
fists
lcall
xchg
xchg
sub
and
in
cmp
imul
dec
and
imul
cmpsl
scas
lock
sub
mov
je
and
popf
add
fcmovb
adc
outsl
mov
test
inc
or
xchg
into
ret
adc
jmp
loopne
pop
loope
pop
xchg
fsts
xlat
inc
mov
iret
cmp
add
in
mov
push
push
jns
call
sub
lahf
add
cmp
or
stos
jb
adc
ljmp
cmp
adc
out
repnz
imul
mov
cmp
inc
rolb
and
mov
jo
fimuls
movsl
std
sbb
sub
addr16
sbb
adc
jp
pop
dec
pop
loop
xor
inc
mov
jmp
sub
push
dec
jg
dec
negl
cwtl
test
dec
test
daa
inc
dec
into
cmp
pop
loopne
lods
push
pop
jmp
cmc
jns
test
pop
mov
je
and
mov
and
jmp
in
icebp
loopne
mov
out
test
mov
stc
cli
jg
mov
ss
je
cltd
add
jnp
test
in
shlb
and
mov
mov
mov
lods
push
cmc
addr16
jp
lds
imull
push
jecxz
jb
inc
sbb
and
int
push
popf
xor
ljmp
add
test
and
in
mov
add
filds
mov
jmp
adc
jecxz
adc
mov
inc
sub
ja
out
rclb
xchg
add
inc
aas
mov
out
imul
xor
out
inc
repz
push
in
push
xchg
sub
daa
add
pop
or
sub
inc
xchg
jmp
sarl
jbe
pop
push
mov
insl
pop
into
iret
int3
data16
push
cld
mov
fdivrl
ficoms
inc
stos
aas
data16
mov
popf
jo
jp
push
outsl
cmpsl
sar
push
lock
mov
icebp
or
ds
loop
daa
out
dec
je
dec
push
and
inc
pop
movb
clc
es
in
cld
mov
mov
mov
xor
sub
nop
out
ss
pop
inc
add
or
adc
rcrb
dec
adc
and
or
dec
js
pusha
std
dec
fmuls
mov
pop
icebp
rcll
loope
xlat
sti
mov
mov
xchg
jb
jnp
push
std
decb
pop
mov
sub
mov
cmp
mov
rorl
xchg
xchg
fmuls
xor
push
dec
xchg
mov
push
in
popl
sub
cli
aaa
sub
inc
adcl
jb
std
mov
and
sub
jno
push
fwait
dec
mov
push
mov
mov
cltd
jnp
or
cmc
in
je
insl
xor
push
dec
lahf
inc
in
test
jne
scas
xchg
pop
int
call
add
test
dec
xchg
adc
stc
cmp
rol
or
and
mov
xchg
push
push
rol
pop
lods
mov
push
jbe
outsb
in
fcmovnu
dec
dec
jae
xorb
leave
sahf
loop
inc
loop
icebp
mov
mov
adc
rcr
pop
scas
sub
ja
adc
xor
xor
mov
repnz
mov
mov
add
insl
loopne
into
mov
daa
es
mov
rcrb
test
inc
mov
into
cmp
dec
mov
mov
jne
pop
xor
pop
fs
cmp
mov
xlat
in
pusha
adc
fs
negb
sbb
mov
sub
jbe
dec
mov
jmp
lods
daa
iret
xchg
sub
sbb
xchg
rorb
dec
cmc
xchg
add
stc
sahf
xor
sub
dec
jecxz
data16
int
or
fwait
xor
repz
jl
mov
iret
inc
or
jp
add
roll
and
cmp
lret
out
and
add
jae
repz
xlat
push
fistps
sub
xchg
sbb
jle
loop
iret
push
xor
test
adc
nop
dec
jp
sbb
sub
rcll
dec
xchg
mov
test
insb
sub
outsl
add
repnz
sub
mov
xchg
dec
cmpsl
fidivrl
fcomip
loopne
stos
jmp
cli
popa
cltd
in
jl
mov
popa
sti
cs
dec
lret
pop
xor
into
sbb
dec
iret
add
push
das
mov
lahf
xchg
or
add
mov
jb
iret
mov
test
les
sbb
mov
dec
cwtl
int
leave
xchg
mov
jmp
cmpl
mov
inc
mov
sub
inc
xchg
int
mov
pop
sahf
in
push
or
icebp
sub
arpl
push
pop
fwait
sahf
pusha
add
lea
push
mov
cmp
pop
popa
add
push
lods
fisttps
sbb
inc
xlat
fidivl
jp
push
adc
jmp
jae
ljmp
pushf
mov
pop
jb
jae
pop
push
int
or
and
cmpsb
fimuls
dec
xor
xchg
testb
orb
push
pop
jl
xorl
outsl
inc
filds
push
les
nop
push
mov
or
push
daa
add
in
and
xchg
das
push
mov
dec
add
es
cmp
mov
add
mov
mov
lds
xor
popa
cmc
leave
int3
icebp
jge
enter
imul
pslld
mov
ja
int
xorb
inc
cmp
call
pop
adc
mov
cmp
aad
pushf
adc
test
pop
dec
adc
sub
stos
lret
aam
orl
clc
pop
dec
dec
loopne
dec
popa
test
add
mov
mov
leave
inc
push
aam
pop
hlt
xor
test
pop
adc
stc
dec
scas
mov
jecxz
dec
nop
mov
xor
push
fsubrl
and
out
pop
test
imul
not
and
imul
jnp
aam
sub
dec
jl
rcr
sbb
js
and
and
pop
or
sbb
dec
cld
idiv
jae
and
in
lds
aam
xchg
lds
dec
xor
pop
mov
mov
cmp
cli
movsb
out
mov
pop
mov
imul
cmpsb
jae
dec
push
mov
push
movsb
xchg
mov
addr16
xchg
or
inc
ret
les
loopne
cmpsl
mov
jp
repnz
out
mov
lods
adc
cmp
cs
cmpsb
repz
mov
xchg
mov
sar
loope
and
cmp
in
sbb
push
sbb
inc
push
cmp
test
pop
andb
in
dec
xchg
push
int
lret
sub
add
pop
push
add
sbb
xor
sub
dec
sub
jno
fucom
or
xchg
jecxz
dec
mov
mov
add
jmp
add
cmpsl
push
lods
cmp
in
mov
fs
stos
jmp
in
int3
fs
data16
cwtl
and
mov
push
pop
push
ret
or
addl
int3
push
icebp
push
dec
fs
sbbb
std
mov
jb
ret
mov
subb
dec
in
scas
jmp
adc
cmpsb
and
jle
cs
jae
dec
jmp
into
mov
pop
jo
es
les
ficoml
cltd
inc
fcoml
nop
lds
xorl
in
shlb
shr
fidivrl
push
push
xor
or
sub
mov
jge
call
sub
sbb
aad
and
sub
adc
in
add
mov
jb
sbb
nop
add
pushf
push
addr16
into
lcall
repnz
test
inc
sbb
push
adc
cmpsl
jnp
insb
jge
mov
inc
mov
out
sbb
mov
in
stos
popa
pop
std
or
scas
fldcw
fs
ret
push
aam
fbstp
push
mov
cld
repnz
out
test
pop
dec
inc
dec
xchg
fst
stos
xchg
mov
adc
insb
mov
pop
aam
js
outsb
jle
dec
pop
cmpsb
adc
les
mov
mov
inc
cmpsl
shl
adc
push
pop
cmp
cmpsl
data16
outsb
mov
xchg
cmp
cli
jo
sbb
mov
movsb
in
ret
cltd
xor
outsb
mov
dec
es
adc
mov
movsl
xor
fdivr
mov
mov
cmp
into
add
pop
pop
mov
repz
mov
adc
repz
jmp
aaa
mov
fucom
out
mov
xor
fimull
or
add
movsl
sub
sbb
lock
xor
dec
ret
push
add
push
dec
sub
add
sub
push
or
ret
mov
bnd
arpl
mov
mov
shrb
and
mov
dec
push
dec
or
lahf
adc
aam
jp
sbb
or
repz
sahf
aas
add
and
xor
push
cmp
add
push
jns
pop
popa
or
inc
jbe
or
mov
jb
and
pop
fmull
jo
in
fisubl
out
or
jbe
jmp
iret
lret
mov
and
mov
frstor
rcr
xchg
fldenv
int3
dec
or
test
and
push
push
cs
fmul
stc
adc
cltd
xlat
pop
je
loope
jp
pop
arpl
adc
mov
pop
push
pop
out
mov
ret
icebp
ret
filds
xor
call
and
lods
imulb
xchg
ret
nop
ret
mov
inc
push
dec
or
filds
mov
ret
push
mov
je
sub
stos
not
pusha
lock
and
enter
mov
sub
sbb
jge
mov
inc
xchg
xor
push
jno
mov
inc
cmp
inc
push
pop
and
aam
stos
inc
xlat
jp
repz
push
inc
mov
cmc
test
cmpsb
int3
daa
xchg
jae
cmpsb
mov
jno
mov
clc
mov
xor
bound
push
and
and
movsl
jmp
mov
mov
sarb
dec
insl
sub
push
ret
adcb
mov
lret
lcall
daa
js
hlt
cmp
jb
sbb
cltd
mov
rol
mov
mov
push
pop
mov
inc
std
repz
jmp
push
call
push
dec
aad
sbb
push
out
xor
loope
adc
jle
stc
lea
roll
mov
call
mov
popf
pop
cmpb
loopne
mov
sub
pushf
inc
sub
sub
jnp,pn
lret
lock
jae
jno
movsl
int
xchg
fimuls
xor
adc
and
addr16
push
adc
sbb
adc
aaa
gs
repz
test
pop
xchg
or
lea
popf
adc
and
call
fnsave
pop
ja
and
pop
sub
in
clc
lret
xchg
sbb
pop
pop
mov
imul
fs
cld
mov
scas
jmp
aaa
mov
hlt
loopne
pop
or
clc
je
or
pop
add
dec
ss
gs
sbb
orb
mov
push
xchg
stc
dec
dec
push
aas
or
cmp
mov
and
mov
enter
lods
lret
sbb
stc
fs
cwtl
arpl
xchg
das
push
add
test
sbbl
scas
call
xchg
cmp
push
test
and
popf
ret
sahf
daa
and
icebp
shr
jmp
insl
clc
fwait
jp
fsubrl
pop
fistpll
cmpsb
sti
pop
mov
outsl
sarl
stos
mov
dec
cmpsl
jns
movsl
mov
inc
outsl
pusha
sub
pushf
lcall
cs
out
jae
inc
mov
cld
mov
test
mov
fistpl
jno
cmp
mov
je
roll
lret
mov
mov
repnz
rorl
mov
out
aas
popf
mov
divl
pop
add
test
mov
fists
mov
pop
sbb
daa
rorl
hlt
xor
push
cmpsl
leave
in
jmp
sbb
xchg
dec
div
mov
cmp
or
xchg
lret
and
cmp
addr16
push
ds
hlt
in
add
fincstp
push
sub
cmp
xor
jmp
int3
adc
lock
sti
mov
loope
lcall
mov
fists
mov
cmpsl
jge
xchg
push
push
inc
fstl
xchg
mov
lret
pop
jecxz
sub
aaa
and
es
test
sub
pop
out
xor
test
pusha
outsb
call
cmpl
dec
test
movsb
aaa
push
mov
xor
popa
cmpsl
mov
bound
adc
cmpb
leave
xchg
dec
sbb
mov
cs
cltd
sbb
cltd
lret
jmp
dec
pop
pop
stos
mov
fcompl
cmc
lcall
out
mov
dec
and
stos
jns
mov
push
or
inc
mov
mov
cli
jmp
push
jo
or
decl
mov
mov
shl
xchg
ds
mov
push
sbb
push
sub
cmp
jbe
mov
aam
inc
jmp
mov
lahf
or
jae
icebp
flds
aaa
mov
mov
lock
lcall
dec
lods
pop
pop
cmc
push
jecxz
dec
cmp
mov
sti
inc
or
sbb
fstpt
jmp
push
dec
fistpl
subb
and
cltd
or
pop
push
xorb
hlt
sbb
pop
jns
shlb
test
lret
gs
mov
cmp
inc
push
lds
in
dec
pop
pushf
add
call
sbb
ret
sub
and
jp
cmp
or
cmp
xchg
sbb
sbb
add
mov
pop
mov
jae
clc
das
xlat
stc
mov
jno
lds
xchg
dec
lret
xchg
mov
cli
inc
inc
jl
and
inc
xchg
and
or
inc
sbb
and
mov
leave
cmp
pushf
pop
lea
pop
das
mov
repz
inc
out
jno
mov
xchg
daa
push
movsb
cmpsl
fistpll
cmp
movsl
jbe
sbb
loope
fistl
lahf
fcomi
pop
in
aam
and
imul
rcrl
gs
fiadds
adc
pop
dec
cmpsl
or
js
mov
adc
es
js
pop
mov
mov
push
lds
lds
popf
stc
or
pop
xor
pop
scas
lret
clc
mov
dec
mov
sub
xor
ret
out
call
mov
mov
popa
in
js
icebp
je
cld
inc
aas
mov
cli
sbbl
mov
test
cltd
fld
xor
jl,pn
push
sub
mov
sarb
sbb
js
cmp
scas
dec
in
es
or
movsb
pusha
outsl
or
aas
adc
in
std
or
dec
inc
cmp
and
dec
xor
xchg
data16
stos
and
insl
and
or
inc
fbld
adc
aaa
adc
outsl
stc
clc
mov
add
xor
cmp
push
sbbl
pop
ret
pop
packuswb
xchg
je
dec
scas
push
cld
pusha
stos
lea
inc
and
fbstp
js
imul
cmpsl
mov
adc
mov
mov
add
lcall
nop
scas
cwtl
xchg
leave
aaa
test
adc
xor
xor
and
lahf
ret
and
ret
cmp
lcall
test
les
sbb
pop
and
les
or
in
pop
sbb
das
fcomps
scas
mov
sbb
imul
cmp
mov
test
add
fwait
int3
inc
fs
lahf
test
dec
cltd
test
cmc
or
stos
jmp
add
ds
adc
test
lcall
in
shl
xchg
orl
jecxz
ljmp
push
ds
rclb
lret
jp
loope
aas
push
in
xorl
pop
stc
adc
mov
dec
jge
add
fisttpll
pusha
in
mov
movsb
gs
mov
movsl
xchg
adc
inc
xchg
dec
mov
cmpsb
negb
cmp
call
lahf
test
fwait
mov
nop
xchg
ret
nop
xchg
lock
sbb
mov
sbb
add
and
fwait
mov
out
push
ja
vmread
mov
inc
ror
and
dec
sub
insl
mov
inc
or
or
pop
push
inc
xchg
test
jg
inc
aam
outsl
cmpsl
mov
je
xor
out
shll
or
sbb
ja
or
inc
insl
push
add
scas
xchg
jns
xlat
lea
cmc
mov
std
mov
fiaddl
addr16
wbinvd
sub
scas
jle
and
and
xchg
sub
inc
aad
data16
mov
fwait
cmpsb
jbe
jae
mov
scas
imul
subb
lods
pop
cmp
sub
pause
nop
shl
cmp
mov
cmpsb
push
insb
insb
sahf
xor
ja
add
bound
leave
repnz
popf
fcmovnb
stc
jnp
pushf
cmp
rolb
filds
cs
dec
sahf
mov
dec
loop
dec
and
xchg
lods
fiaddl
scas
mov
movsl
imul
mov
jnp
or
or
mov
lock
dec
mov
idivb
jp
sbb
push
xor
aam
push
mov
bound
clc
fdivrs
ret
jecxz
push
call
adc
mov
mov
cmpl
mov
pushf
pop
call
hlt
mov
movsb
lret
mov
add
mov
ljmp
mov
aas
jge
or
pusha
mov
inc
insb
sti
jb
pop
pushf
fldenv
sbb
sbb
xor
jl
daa
bnd
rclb
arpl
pop
jo
pop
hlt
mov
xchg
lahf
out
pushf
or
aaa
sbb
rcl
xlat
mov
cmpsl
mov
or
sti
loop
cmpsb
cmc
push
std
mov
movsb
xchg
pop
push
jne
out
or
mov
mov
push
shrl
dec
arpl
mov
xor
or
xchg
cmpsl
inc
pop
mov
dec
inc
mov
mov
test
inc
mov
lret
push
aam
popa
fs
or
je
push
fildll
add
mov
or
xchg
or
cli
push
push
and
out
outsl
loopne
imul
mov
mov
cmp
dec
jp
sub
and
sbb
push
in
mov
popa
pop
push
sub
sbb
sbb
or
and
int
aaa
ds
pusha
sbbb
cmp
ljmp
adcb
jmp
xlat
sub
js
mov
cmp
loopne
cmpb
rorb
xor
dec
icebp
inc
dec
loope
or
popa
mov
arpl
or
std
mov
ret
sbb
insl
push
jle
pushf
xchg
pop
sub
fwait
push
in
xor
cltd
sbb
scas
add
in
sbb
and
jl
shrl
ja
mov
mov
add
ds
call
lcall
popa
sub
iret
jmp
mov
dec
mov
add
mov
fbstp
mov
loop
xorl
icebp
jecxz
and
dec
out
lods
leave
mov
mov
push
jno
scas
mov
push
push
xchg
leave
sub
pushf
fdivl
loopne
sub
test
cld
or
pop
ret
fwait
sub
loopne
jmp
test
mov
sub
loope
in
jg
inc
lods
or
rcrb
test
inc
push
add
pop
and
sbb
shl
mov
lgdtl
test
inc
xchg
inc
jl
gs
aas
jmp
cld
testb
into
das
sarb
fcoml
outsb
and
icebp
ret
xor
lods
xor
stc
xchg
sbb
adc
cs
and
mov
cmpsb
mov
divl
incb
inc
mov
es
jnp
into
js
loopne
stos
rorl
addb
mov
sub
sbb
int
mov
mov
mov
adc
or
mov
test
dec
scas
add
cmp
lahf
push
inc
xor
sub
cltd
push
xor
sbb
and
pop
mov
inc
bound
adc
xchg
push
out
push
sub
data16
int3
push
ficompl
pop
lods
add
dec
das
dec
adc
jo
push
sti
vminss
fs
jmp
jae
jecxz
add
adc
mov
inc
sbb
sub
repz
lea
cmp
movl
push
pop
push
fists
xchg
mov
jmp
test
jae
sub
dec
jle
push
xchg
int
in
sub
jb
pop
jo
mov
pop
xchg
and
mov
and
push
dec
push
lcall
sbb
pop
ret
in
out
mov
cld
and
mov
popa
repnz
jecxz
leave
sbb
adc
inc
dec
imul
js
inc
or
faddl
loopne
dec
jne
pusha
cmc
movsb
ret
fdivrl
cmpsb
mov
loope
push
inc
iret
xchg
xor
or
adc
push
clc
sahf
test
orb
cmpsb
rcrb
mov
jmp
sub
cmp
mov
outsl
cmp
in
ficomps
pop
mov
jo
mov
pushf
jb
adc
inc
pushf
sub
pop
insl
pop
adc
movsb
push
test
sub
test
inc
movsl
push
pop
sar
repnz
jbe
push
push
xchg
pushf
clc
fwait
dec
out
fiadds
dec
sbb
lods
mov
in
repnz
mov
push
lea
int3
mov
xchg
sbb
mov
xor
hlt
ss
and
inc
int
insl
cmpsl
pop
in
sub
inc
pop
adc
nop
shll
sub
ret
mov
repnz
ret
inc
cmp
stos
sbb
push
out
stc
and
inc
and
jge
jmp
lret
jae
adc
push
lds
cmp
das
pop
sbb
int3
aaa
gs
dec
mov
insb
in
arpl
mov
mov
push
dec
lret
lret
jnp
mov
in
or
daa
or
leave
mov
enter
and
add
sub
inc
push
imul
xor
mov
ss
addr16
push
shlb
cmpsl
test
mov
sbb
insb
fbstp
jo
cli
ud1
mov
rcll
fldt
mov
fimull
jecxz
inc
inc
xor
xor
ret
lret
push
mov
sbb
int
pop
xor
inc
sbb
dec
push
aad
xor
outsl
test
inc
jnp
test
cmp
movsl
xor
out
aam
hlt
shl
ss
or
cmp
mov
imul
pop
add
sarb
pop
add
inc
pop
mov
fs
jl
lret
sti
xor
dec
stos
jg
lcall
inc
xor
mov
mov
ret
add
add
test
js
mov
mov
std
cmp
sub
es
aaa
sbb
jno
cmc
sar
les
mov
mov
pushf
pop
test
outsl
js
xor
mov
movsb
sbb
std
sub
aas
fcmovnb
cli
push
pushf
jns
sarl
fstpl
arpl
mov
xor
orb
mov
leave
mov
gs
or
mov
adc
pop
xchg
sbb
outsb
inc
hlt
sub
xorl
xchg
jne
inc
xchg
aad
dec
jbe
dec
xchg
lahf
sbb
scas
push
fwait
push
inc
imul
lret
inc
pop
inc
mov
out
dec
mov
ljmp
xor
test
dec
jge
cmp
push
ljmp
ret
pop
xchg
xchg
adc
xchg
xor
repnz
mov
push
push
dec
xor
pop
sbb
push
jl
test
iret
subb
mov
cld
loopne
lret
jb
and
pop
sahf
iret
frstor
xchg
adc
mov
fprem1
insb
popa
fsubrp
inc
push
shrl
jae
call
inc
jge
mov
hlt
dec
xor
jle
pop
pop
sbb
pop
push
popf
inc
dec
sbb
and
dec
add
pop
push
imul
lcall
pop
ja
out
ds
jo
std
cmp
dec
movsl
jecxz
in
dec
in
cmp
xor
lret
std
mov
std
faddl
pop
mov
push
loope
in
push
xchg
int
pop
call
cli
mov
add
repz
sbb
and
mov
or
mov
mov
sbbb
mov
sbb
scas
lds
mov
cltd
jp
sbb
and
cmp
aas
adc
push
inc
push
push
orl
push
es
call
pop
mov
sub
ret
pop
sbb
call
xor
es
or
shlb
out
adc
in
mov
fcom
sbb
cwtl
adc
sbb
inc
dec
aam
sub
push
movsb
stos
xchg
mov
std
jae
xchg
lret
out
movl
inc
xor
aaa
adc
cmpsl
and
mov
mov
inc
jecxz
mov
fbstp
push
push
push
adc
insl
fisttpl
jg
icebp
cmp
imul
cwtl
mov
and
jg
sbb
sub
inc
jo
adc
and
into
lea
shll
adc
insb
into
inc
mov
aaa
aad
mov
adcb
mov
scas
jge
icebp
add
cli
pop
iret
push
insl
insl
rcl
sub
jmp
inc
je
leave
call
out
mov
ljmp
pop
call
rclb
addr16
mov
ja
xchg
inc
mov
push
popa
enter
mov
bound
cli
xchg
adc
mov
cmp
test
pop
and
pop
inc
jno
dec
inc
pop
andb
stos
js
ret
popf
fidivrs
fisttpll
lock
mov
mov
push
in
push
jnp
mov
mov
adc
push
cs
into
hlt
sub
std
scas
pop
xchg
icebp
dec
sub
mov
sub
dec
or
mov
leave
fs
xor
loopne
aaa
lea
cmc
out
rorb
stc
data16
xor
pushf
lcall
cmpsb
icebp
mov
xchg
cmp
jbe
push
inc
or
mov
enter
loopne
and
pusha
inc
dec
sti
jb
and
jge
jo
hlt
lret
push
jnp
call
fdivrs
cmpsl
sti
in
cmc
mov
dec
and
cld
xchg
in
dec
mov
cmp
sub
and
lahf
cwtl
jmp
mov
cmpsl
jp
lret
mov
sahf
stos
outsb
ja
mov
mov
and
or
adc
or
xchg
sub
and
xlat
mov
dec
sub
sub
ljmp
test
scas
jmp
or
rclb
fcomps
cwtl
mov
push
jns
je
dec
imul
nop
sbbl
aad
pop
insb
mov
mov
xor
cmpsb
bound
iret
iret
out
push
cld
sbb
fbstp
lds
fdivrs
test
movb
xor
push
jp
ficoms
xchg
and
jnp
int3
cmp
mov
and
sar
in
rol
in
fnstsw
jbe
cmpsl
js
jmp
mov
push
or
mov
inc
pop
mov
andb
xchg
test
xchg
fdivs
jnp
and
xchg
dec
fisubs
sub
xlat
iret
and
push
jns
sbb
fisubrs
mov
fstl
cld
arpl
or
jne
dec
or
scas
push
add
sbb
scas
fistpl
call
es
js
hlt
mov
sbb
movsl
dec
pushf
in
jnp
out
push
fisttps
sti
xor
call
fisttpl
dec
rolb
mov
inc
popf
xchg
sbb
inc
inc
push
mov
notl
insl
lret
pushf
out
adcb
inc
push
adc
imul
out
cmp
push
pop
cli
adc
cwtl
inc
je
ljmp
and
jl
mov
sub
mov
push
jle
jl
dec
mov
arpl
cmpb
mov
outsl
sub
cmp
xchg
inc
pop
ss
std
in
and
ret
mov
adc
sahf
and
in
sub
cmp
sbb
inc
lahf
or
mov
push
fildll
loope
fcmovnb
mov
xor
mov
enter
sbb
push
jne
cmp
or
leave
scas
sbbl
iret
popa
adc
outsl
xlat
mov
mov
jmp
testl
repnz
push
xor
into
xor
add
ret
in
rcr
inc
cmp
sub
xchg
inc
movb
sahf
or
xor
mov
cmp
sahf
test
aam
inc
mov
adc
push
in
pushf
les
fsubs
and
mov
xchg
repz
rcll
call
or
cmp
cmp
xor
pop
pop
test
into
or
lcall
or
sti
inc
stc
mov
sbb
iret
xorb
fnstsw
ja
push
imul
push
xor
fisttpl
sub
insb
push
xor
pop
ss
daa
inc
mov
bound
xor
mov
sbb
pop
jae
jo
dec
jo
adc
or
add
adc
mov
out
das
cmpsb
sbb
jns
jne
lds
test
xchg
add
jge
das
sbb
imul
cmc
xchg
mov
je
cmc
in
into
jne
xorl
rorl
test
cmp
pop
js
or
cltd
sbb
loopne
mov
xor
pop
js
push
out
outsb
fmuls
les
mov
int3
xchg
push
daa
mov
push
mov
repnz
das
jb
xor
lahf
jecxz
dec
push
dec
mov
je
call
pop
scas
call
pop
pop
xchg
in
call
inc
movsb
jns
sbb
dec
insl
sti
cmpsl
pushf
mov
ljmp
insb
bound
inc
cmc
bound
or
pop
cli
mov
inc
nop
les
xor
loop
test
repnz
out
add
push
cmp
adc
adc
adc
cwtl
pavgw
push
mov
loopne
imul
sub
fistpll
imul
or
mov
adc
jge
lods
es
mov
mov
movsb
loope
sti
cwtl
sarb
cmp
cmp
in
pop
jge
push
movsl
lock
mov
lock
lods
mov
xlat
pop
ret
mov
je
xlat
pop
jb
inc
lods
mov
mov
shrb
adc
pshufw
jbe
scas
sbb
mov
ja
mov
fsubr
jnp
movsl
mov
aam
jns
out
not
shl
inc
stos
xchg
test
pop
add
push
push
sub
add
loope
fwait
mov
fidivrs
push
mov
xchg
mov
stos
cmpsb
les
xlat
cld
into
flds
insb
xchg
push
pop
lods
add
sub
push
cs
cwtl
mov
icebp
into
dec
push
imul
adc
push
adc
sbb
pushw
in
mov
scas
out
jecxz
fst
xchg
cwtl
mov
sti
sub
popf
fsub
fbstp
lods
out
inc
cli
mov
mov
cmp
adc
and
xor
outsb
dec
jle
push
enter
push
push
fstpl
sbb
subb
or
mov
dec
into
mov
lcall
movsb
sbb
sbb
scas
xchg
dec
stc
push
dec
jb
stos
in
or
ret
jmp
xor
gs
adc
cmc
test
scas
add
jecxz
cltd
aad
pop
movsb
shll
andb
or
das
lds
cld
subb
lret
push
repnz
lahf
addr16
and
sub
nop
fidivl
sub
daa
orb
mov
ret
fwait
dec
pusha
outsb
dec
cmp
ret
jge
mov
or
rclb
fs
cmp
xchg
sub
movsl
outsb
push
pop
aaa
es
or
out
jp
push
lods
push
fisubrs
add
mov
fdivr
xor
sub
push
dec
in
int3
std
or
xchg
pop
fldenv
sub
in
mov
pop
loop
and
jb
out
test
add
mov
pop
es
shr
shrl
pop
sub
shll
rclb
int
cmc
sub
push
leave
push
xor
jo
dec
adc
mov
fdivrp
sub
aaa
outsl
lock
sbb
inc
outsb
xchg
xchg
jle
addr16
mov
shlb
cwtl
pop
cmp
in
and
das
jb
jge
out
mov
jge
dec
jge
jae
and
pop
xchg
cli
lds
jbe
xchg
pop
aad
aad
xchg
jo
jno
sti
push
dec
inc
les
dec
lret
lret
xchg
orb
dec
arpl
call
xchg
xor
sti
scas
imul
xchg
sarb
fidivrl
in
sub
mov
imul
dec
pop
pop
fyl2x
sbb
sub
int
xor
cmpl
cld
pop
loopne
sbb
push
imul
and
sbb
fwait
adc
icebp
adc
push
dec
cmc
in
outsl
shlb
mov
lret
jl
shrb
not
mov
dec
lods
adc
stos
mov
fs
outsb
add
int
ljmp
adc
imul
repz
or
and
pop
dec
nop
lock
cmpsl
sti
rcrl
hlt
rorl
lcall
ret
outsb
adc
popf
fstpt
in
mov
adc
or
add
ljmp
sbb
cltd
clc
mov
and
and
xchg
cmc
adc
pushf
inc
push
ss
bound
enter
push
ljmp
add
rorl
and
push
push
xchg
push
cmpsb
push
pop
pusha
adc
sbb
mov
sub
bound
push
mov
ret
popa
and
aaa
mov
rclb
ss
in
stos
sub
pop
test
into
mov
cmp
daa
pop
sbb
popf
lock
mov
and
shlb
jns
arpl
shrl
mov
incl
sub
mov
iret
sbb
push
mov
sub
std
cmpsb
popf
imul
xlat
insl
or
in
lds
mov
push
and
bound
loop
jb
movsb
in
sti
outsl
fucom
movsb
mov
leave
ja
push
iret
fiaddl
add
xor
jmp
wrmsr
mov
and
je
std
jge
add
cmp
test
sbb
cwtl
cmp
xchg
pop
pop
add
test
in
fnstenv
add
pop
movsl
pop
icebp
pop
xchg
mov
int3
pop
mov
and
mov
mov
clc
sbb
xlat
cltd
sub
xchg
lods
scas
setb
sti
and
into
mov
and
mov
jmp
sahf
xchg
pop
dec
shr
xor
xlat
mov
sub
jae
out
mov
jp
jne
pop
jmp
mov
nop
pop
jle
sbbw
adc
pop
fnsave
in
mov
sbb
negw
pop
add
iret
loope
lea
mov
mov
arpl
out
mov
ret
xor
imul
cli
in
stos
cmpsb
fwait
outsb
std
fisttps
lock
out
sbb
mov
xchg
sahf
test
xor
sti
cmpsl
or
aaa
adc
mov
pop
sbb
mov
sbb
mov
xor
inc
or
call
adc
jge
cli
sarl
shl
loopne
xchg
xchg
pusha
mov
scas
scas
loopne
jle
pop
mov
fcmovnu
sbb
or
fists
add
iret
out
orb
xchg
jmp
in
cmpsb
cld
pop
mov
sub
pop
pop
call
rclb
jp
fisubrs
xlat
mov
push
leave
jp
adc
jbe
mov
push
cmp
imul
mov
in
pop
pop
cmp
push
sbb
cld
adc
in
test
add
push
adc
andb
icebp
mov
jmp
xchg
sti
sub
sub
lahf
mov
out
lcall
inc
jmp
and
add
mov
sub
sbb
dec
imul
mov
pop
push
clc
int3
lcall
jne
lret
and
push
push
out
sub
adc
cld
push
sub
dec
jmp
mov
adc
xchg
cmp
sub
sti
lahf
cmp
or
fcompl
pushf
test
cmp
sub
into
pop
sbb
mov
data16
pop
dec
mov
nop
xlat
sub
sbb
aad
insb
rorl
loope
sti
fucomi
stos
inc
and
add
cmp
dec
mov
push
xchg
lods
sub
cmc
cld
out
dec
movsb
imul
loop
dec
mov
sar
sbb
mov
jae
ja
cmp
movsl
mov
cmpl
sub
adc
mov
inc
inc
mov
xchg
imul
push
pop
xchg
call
and
dec
push
cs
lds
mov
push
push
push
adc
sarb
adc
setg
sub
mov
push
cmp
and
in
scas
add
ret
idivb
int3
sbb
mov
popa
lock
subb
add
fldt
or
dec
je
xchg
pop
aas
int3
mov
fcomp
daa
pop
mov
or
jg
mov
fnstsw
data16
daa
std
imul
push
dec
movsb
rcr
xor
addr16
mov
je
in
gs
mov
add
push
das
ficomps
test
pop
or
cmc
cmp
push
hlt
shl
mov
aam
mov
jbe
or
sub
lds
xchg
adc
cmc
cmpb
loop
pop
push
pop
push
mov
rorl
dec
pop
push
lock
notl
outsl
dec
movsl
xchg
aam
sbb
fldl
adc
adc
das
cwtl
push
push
cmp
pop
dec
xchg
negb
dec
imul
popa
stc
push
push
pop
pop
fdiv
push
int3
arpl
xor
adc
add
fwait
loop
mov
popf
subl
mov
cmp
and
int
shl
out
imul
push
sub
or
outsl
stos
in
jnp
lret
xor
inc
outsl
jl
jmp
pop
imul
mov
jge
jecxz
sahf
clc
sub
fcom
inc
jecxz
jmp
pop
cli
cmpl
leave
fimull
xor
add
jb
rorl
movsb
xchg
push
mulb
les
daa
adc
push
loopne
sbb
sub
jne,pn
mov
jno
es
repz
inc
jnp
pusha
mov
insb
mov
scas
xor
adcl
sub
cwtl
inc
sub
pop
sbb
ss
inc
xchg
mov
push
insb
mov
sbb
lds
cmp
stos
inc
push
aaa
frstor
sub
xor
nop
sub
mov
and
dec
cli
jo
ficoms
lret
lea
dec
out
push
pmaxub
push
iret
adc
ljmp
dec
jb
imul
add
fsubrp
dec
pop
jecxz
lahf
sbb
std
mov
jl
xor
sub
inc
push
dec
in
lods
jb
loopne
pop
push
inc
or
int3
ret
jnp
xchg
mov
push
fisttpll
out
push
xor
jmp
jnp
in
jae
pop
dec
and
lds
sbb
mov
cmp
lock
jl
inc
icebp
sbbb
mov
or
int
mov
jg
dec
jmp
std
xor
test
add
dec
rorl
shll
and
into
mov
dec
and
mov
sub
cmp
cmpsl
jns
push
fdiv
sarl
sub
int
out
jnp
sbb
lods
mov
outsb
xor
mov
in
ficoms
and
mov
push
dec
or
ret
mov
dec
es
push
shrb
in
xchg
scas
into
fnsave
insb
fwait
sti
pop
pop
push
arpl
loope
in
push
cmc
mov
mov
lcall
pop
or
push
mov
add
sbb
dec
ds
or
in
sbb
aaa
dec
sahf
cmc
int3
lea
adc
lret
out
xlat
and
outsb
add
ja
xor
sti
insl
xor
mov
adc
aad
cld
or
mov
dec
out
sub
icebp
jecxz
into
mov
mov
add
or
lret
xor
inc
enter
push
or
jle
push
or
dec
scas
jne
std
sbb
shrb
mov
lea
sub
jae
mov
jb
fidivs
lock
test
popf
push
mov
out
lds
xchg
xchg
dec
and
stc
ud2
xchg
push
push
bound
rcll
push
mov
faddl
inc
mulb
lret
add
jne
outsl
stos
jmp
adc
xchg
jecxz
jo
dec
bound
push
test
rcrb
or
push
es
fs
imul
add
dec
mov
pop
imul
ljmp
mov
js
jns
arpl
cmpsl
stc
cltd
outsl
mov
adc
dec
inc
aam
test
mulb
mov
cltd
lea
rcll
insl
neg
dec
push
inc
lahf
add
xor
mov
add
outsb
bound
and
in
out
mov
mov
xchg
mov
pop
sub
cmpsl
sub
lret
outsl
clc
call
xchg
adc
test
xchg
in
in
xchg
mull
sub
pop
test
mov
pop
repnz
mov
mov
and
sub
cld
push
stos
jno
mov
xchg
das
repz
leave
mov
lret
mov
sbb
enter
test
pop
data16
fildll
out
popf
inc
js
pop
xchg
pop
fwait
add
mov
xchg
movsl
stos
cld
ret
push
fmulp
or
mov
push
repz
into
add
test
loop
sbb
sub
lcall
out
or
jl
lret
adc
fsubrl
daa
les
loope
cmc
jbe
xor
out
jl
out
xchg
dec
cmpsl
repnz
fidivl
xor
je
cmpsl
imul
cmp
cld
hlt
or
dec
add
push
jge
dec
sbb
loop
cltd
lret
daa
sbb
ficoml
sub
stos
push
bound
out
sub
fadd
sbb
inc
out
mov
jmp
orl
jns
test
cmpsl
out
jmp
jl
addr16
add
ljmp
sbb
mov
inc
cmp
stc
test
addr16
sarb
push
sbb
push
out
fs
dec
adc
mov
loope
mov
cli
sti
xor
dec
cmpsb
cltd
mov
bound
xor
stc
shr
push
xlat
lcall
out
or
outsl
stc
add
insl
push
inc
stc
inc
sub
leave
repz
and
test
inc
inc
pop
fistl
ds
mov
sbb
jmp
jae
aam
mov
jmp
movsb
push
ja
mov
lods
pop
pop
dec
xor
and
stos
sarb
cmpsb
xchg
inc
xor
sbb
add
or
adc
insb
test
rclb
into
cmp
mov
out
lret
test
mov
xchg
shll
push
add
aam
pop
outsb
lret
xchg
sub
xchg
out
or
notb
and
jp
mov
mov
xor
xchg
in
test
mov
lahf
dec
pop
mov
pop
dec
sahf
icebp
stos
mov
rorb
loopne
xor
push
xor
cli
lds
add
jnp
mov
fstpl
and
loopne
push
outsl
fists
stos
adc
mov
cmp
rolb
lock
aam
push
jg
int3
jp
ret
xchg
inc
or
insl
mov
test
sar
jge
movsb
pop
scas
scas
hlt
push
div
dec
and
cld
or
lds
sbb
bound
xchg
cltd
sub
push
xchg
jns
mov
push
mov
fisubs
add
jns
ret
pop
rol
sbb
dec
std
arpl
lahf
and
push
jp
mov
in
cmpsb
fcoms
lds
cli
lcall
lret
arpl
das
in
sbb
shlb
xchg
cmc
test
dec
dec
test
dec
ret
sub
pop
inc
cs
and
in
insl
push
sahf
jmp
std
push
jge
and
add
dec
mov
pop
aas
stos
out
inc
test
and
pop
rorb
pusha
mov
les
std
pop
jp
movsl
fdivrl
xchg
hlt
shll
jge
pushf
orb
cld
cli
in
inc
sub
push
in
or
shll
inc
in
dec
mov
add
inc
mov
mov
aam
push
call
inc
cmp
movsb
xlat
cld
lds
stc
push
and
dec
mov
sar
into
daa
mov
adc
sahf
dec
pushf
repnz
pop
xchg
sbbl
xchg
int
ret
sahf
out
andl
js
xlat
fbstp
and
xor
xchg
fsubl
jg
mov
je
pop
stos
xchg
and
divl
and
test
cwtl
stos
and
sub
neg
push
in
aaa
push
cmp
dec
cmp
mov
mov
fwait
sub
mov
cmc
push
in
jecxz
gs
mov
loope
sub
mov
adc
jmp
xor
xchg
jae
divb
test
scas
jp
sub
testl
jno
popf
mov
or
in
insl
lds
push
out
out
cmpsb
jne
sti
int
arpl
mov
les
push
addr16
adc
pop
jle
fstps
scas
cld
inc
aaa
in
lods
stos
incl
xchg
lcall
inc
stos
mov
xor
dec
jns
fimull
dec
sub
dec
in
cmp
test
cmp
fstpt
cmpb
dec
xor
dec
das
stos
jns
mov
xchg
jnp
shl
mov
mov
aad
es
iret
fadds
fadd
jbe
xchg
push
cmpsb
es
std
orl
sub
insb
divb
xor
loop
lods
pop
inc
insb
cwtl
push
flds
imul
inc
in
xor
sbb
xchg
mov
ret
sbb
pusha
das
mov
scas
pop
loop
add
orl
xchg
sub
aas
stos
push
jb
dec
mov
aad
cmp
aad
in
mov
js
jmp
mov
outsb
mov
hlt
push
adc
sub
divl
push
inc
pusha
dec
sbb
pop
add
mov
mov
jmp
mov
jmp
call
mov
mov
cwtl
mov
bound
enter
push
cltd
adc
mov
shr
jecxz
stos
add
adc
xchg
cld
push
lret
das
push
push
outsl
mov
jecxz
rcl
out
dec
pushf
and
adc
push
sbb
test
ret
lods
xor
in
add
stos
xchg
lods
callw
movsl
mov
pop
lock
aad
mov
outsb
insb
stc
mov
push
lods
xchg
movsl
xchg
adc
ret
std
into
cmpsl
push
lods
push
push
test
fcmovnu
jl
add
inc
xchg
repnz
mov
rcr
push
cwtl
cmc
dec
sarl
je
inc
xchg
xchg
jb
subb
pop
and
cli
cmp
or
call
add
xchg
insl
jle
shrl
and
insl
xchg
cs
dec
push
cltd
mov
adcw
push
in
adc
sub
push
pop
in
adc
xchg
lods
pushf
cmpsb
sti
jo
mov
mov
out
xchg
mov
sub
xchg
sub
add
lret
repz
imul
adc
pop
cmc
inc
test
les
pop
mov
std
addr16
xchg
sub
and
adc
in
and
add
adc
cmpsl
popa
clc
xchg
dec
pop
jge
insl
sub
rcll
scas
mov
xor
sbb
sbb
cmpsl
add
pusha
fnstenv
xchg
inc
pop
jns
clc
xorb
lods
mov
scas
scas
sahf
movb
fistl
into
sub
lods
gs
jns
pushl
nop
xchg
inc
leave
mov
fadds
xor
scas
xchg
inc
outsb
lret
jmp
jp
dec
add
es
out
leave
mov
addr16
pop
and
lock
lods
pop
hlt
test
jl
cmpsl
xchg
lds
nop
add
fs
pop
jb
hlt
and
fcmovne
mov
or
imul
sbb
mov
or
das
mov
mov
ljmp
pop
mov
pop
je
add
xchg
loop
adc
mov
movsl
mov
fidivrs
cmp
test
push
mov
lret
stc
pop
add
and
popa
xor
repz
pop
idiv
out
cmp
test
and
es
pushf
je,pn
cmp
mov
pop
mov
pop
nop
leave
lahf
pop
push
and
dec
daa
aaa
lods
jae
ret
xor
stos
imul
jge
and
or
xchg
and
push
loopne
cmpsl
adc
shl
test
xchg
arpl
jno
sti
lock
add
mov
loop
loope
inc
push
xchg
loop
pop
add
mov
lea
lds
dec
or
cmp
in
movsb
pop
dec
cmp
mov
adc
fmulp
mov
out
cmpsb
scas
outsb
clc
lret
add
sbb
pop
sub
pop
jmp
pop
lods
dec
leave
nop
repnz
mov
cmpsl
push
cmp
xchg
xor
mov
push
mov
cld
cmp
adc
pop
push
dec
pop
cmpb
xchg
mov
sbb
mov
or
xor
sbb
sbb
inc
loop
int3
cmpsl
lds
stos
loope
sub
pop
pop
mov
pushf
or
movsl
mov
pop
andb
dec
int3
stos
insl
stos
aam
pop
mov
pop
pop
inc
inc
adc
testb
out
mov
cwtl
mov
subl
push
ljmp
or
sarl
cmpsl
dec
jmp
mov
ficoml
or
sub
int3
adc
repz
mov
adc
or
mov
addr16
bound
cmp
jo
sbb
std
out
inc
lret
dec
jg
les
or
or
adc
movsl
mov
xchg
push
pop
sbb
leave
sarb
or
aad
xchg
push
mov
cld
sbb
mov
adc
mov
iret
shlb
jae
aad
daa
xchg
fisubs
mov
jl
stc
enter
jno
mov
add
dec
mov
push
sub
inc
mov
test
or
push
add
sub
dec
lret
test
imul
mov
aaa
stos
test
add
cmpsb
push
out
leave
pushf
jne
lds
je
xchg
or
mov
push
orb
or
xchg
cld
pop
add
vandpd
movl
psubq
xchg
mov
lock
sbb
add
jecxz
mov
sbb
andb
ror
shl
sub
jp
out
mov
enter
and
sbb
ljmp
jmp
jl
aaa
daa
loop
inc
pop
and
add
dec
mov
sbbb
xchg
popf
sti
outsb
and
dec
mov
mov
mov
push
sub
mov
adc
mov
sbb
pop
pusha
dec
sub
data16
jp
aaa
pop
cld
outsb
gs
xlat
or
repz
push
and
push
push
mov
jle
dec
and
or
out
repnz
add
add
gs
add
arpl
stos
popa
sbb
cmp
outsb
push
mov
fistl
lock
andl
inc
aaa
xor
stos
mov
aaa
xlat
sti
cmp
popl
pop
add
std
dec
cltd
stos
xor
inc
int3
cwtl
cmc
lds
sbb
pusha
or
js
je
stos
xchg
test
add
and
pop
sbb
int3
mov
cmp
adc
mov
mov
pop
mov
out
cmp
push
dec
xchg
dec
fwait
rolb
xor
sub
insb
test
xor
mov
in
movsl
daa
mov
push
or
jp
mov
dec
lock
lret
rcrb
sbb
test
outsb
xchg
mov
jmp
je
jne
jb
es
test
jbe
out
sarb
cmp
adc
bnd
pop
nop
inc
or
mov
cwtl
add
pop
xchg
test
sub
adc
or
cltd
adc
sub
rclb
xchg
xor
fs
mov
je
and
lds
pop
sbb
dec
xor
popa
jp
jbe
mov
loope
iret
cmc
pop
mov
ret
cmp
mov
popf
push
fistpll
mov
jp
mul
lcall
in
stc
movl
mov
imul
mov
test
pusha
sub
jb
test
pop
call
fnstenv
adc
enter
mov
mov
jo
mov
test
mov
mov
int
mov
pop
sub
mov
or
xchg
xchg
mov
mov
in
sub
out
mov
shll
pop
mov
mov
add
shlb
shrb
pop
fdivrs
sub
and
push
pop
into
or
mov
stos
mov
adc
cld
cmpsl
inc
gs
sbb
mov
adc
test
mov
jmp
xchg
gs
and
jecxz
xchg
stos
xlat
and
dec
inc
subl
pop
cmp
cmp
fildl
mov
test
add
add
or
jo
sbb
inc
mov
fcoml
mov
sti
out
pop
shlb
lods
in
in
out
mov
jae
pop
dec
pop
cltd
dec
mov
push
fs
jns
lods
cmpsb
aaa
mov
outsl
pop
push
fmull
mov
pop
sti
cmc
pop
orl
xchg
sub
mov
ss
fcomip
adc
jmp
and
lock
mov
xor
jge
push
repnz
in
aaa
icebp
popf
bnd
jno
mov
sbb
pop
in
pop
mov
scas
or
jp
nop
sti
fistpl
in
int
scas
or
jp
cmp
and
pop
inc
or
add
jae
pop
ret
mov
jge
or
clc
sahf
test
jnp
fwait
addb
mov
mov
xor
scas
fadds
rcrl
fidivl
notrack
inc
popf
iret
mov
push
xor
jnp
cmp
bound
inc
in
jp
insb
int3
sbbl
or
or
mov
cmpl
dec
dec
add
jmp
mov
cmpl
add
jecxz
mov
adc
xor
clc
std
imulb
arpl
out
push
jns
clc
or
ret
aaa
pop
jae
or
add
jmp
scas
movl
xor
push
dec
jns
mov
mov
subb
fadds
add
pop
mov
sbb
or
ret
cli
fdivs
adc
lods
and
sbb
std
bound
cld
mov
xor
fdivl
mov
mov
push
xor
imul
das
adc
push
mov
ljmp
mov
sub
in
mov
sub
pop
out
pop
call
sbb
xor
sub
add
add
pop
cmpsl
cmp
jg
mov
push
mov
jae
mov
std
stc
and
pop
repnz
pop
arpl
push
stos
inc
int3
cld
xchg
sbb
pop
mov
mov
cmp
std
mov
push
in
push
push
cmpsb
es
rclb
out
pop
and
out
xor
loope
adc
push
cmp
or
shl
aad
pop
mov
mov
add
cmp
push
pusha
js
repnz
iret
fistpll
lcall
ja
lods
cld
pusha
mov
push
push
cmc
inc
pop
in
adc
xor
adc
sbb
nop
mov
lret
cmp
out
daa
lods
sub
mov
cli
sub
push
testl
jb
dec
ljmp
fbstp
mov
stc
add
mov
int3
movsb
repz
push
sbb
test
sub
andl
sahf
cltd
rol
negl
hlt
outsb
sarb
rcrb
lock
adc
add
pusha
icebp
std
imul
cwtl
push
sar
lret
addr16
sub
inc
aas
loopne
mov
clc
fs
hlt
stos
rclb
repnz
adc
test
mov
fistpll
or
or
sub
clc
cwtl
sbb
xor
aaa
sbb
mov
stos
and
adc
divl
or
lods
pop
jle
fisttpll
xor
call
out
cmp
in
dec
sar
nop
loope
orb
int3
ret
aaa
add
mov
shrb
lret
push
mov
cli
xchg
loop
loope
xor
jbe
fwait
fs
cmpsb
inc
push
lcall
xchg
xor
adc
ss
xlat
test
lods
mov
pusha
adc
push
lock
stos
pop
and
loop
mov
std
imul
inc
xor
mov
aas
les
outsl
push
movsb
call
dec
rorb
aam
adc
aad
das
pop
pop
inc
data16
xchg
test
in
fidivrs
cmp
repz
xor
std
sbb
cmpsb
jne
add
imul
ret
cld
ret
mov
and
mov
into
mov
or
mov
sahf
cmpsl
aas
testl
jae
ljmp
jecxz
outsb
test
je
jecxz
ret
shll
orl
ljmp
mov
adc
or
lds
sbb
pop
pop
pop
sbb
hlt
popa
push
or
adc
or
mov
adc
rorb
movsl
pop
xchg
xchg
dec
stos
imul
mov
mov
inc
add
sarb
adc
ret
or
mov
inc
leave
iret
addr16
inc
pop
push
in
insl
pop
pop
mov
fcmove
sar
iret
rcrb
push
lahf
mov
dec
paddb
loop
call
mov
out
je
sbb
lods
popa
pop
mov
push
and
fimuls
leave
mov
add
or
or
test
mov
arpl
lret
mov
cmovne
aaa
rcrb
insl
sbbl
and
ljmp
fildl
mov
incl
sub
and
je
in
mov
cs
iret
adc
sub
xchg
aad
and
stc
stc
mov
insl
mov
in
adc
mov
fs
in
ret
fldcw
test
mov
inc
imul
xchg
push
mov
loopne
sarb
imul
movsb
iret
xchg
xor
ljmp
cmp
fldt
popa
stc
add
jno
dec
mov
rcrb
mov
or
int
data16
test
jne
xchg
inc
jbe
repnz
xchg
fs
insb
fcmovne
inc
es
out
xchg
bswap
outsb
outsb
leave
push
mov
or
into
dec
int
imul
push
mov
mov
hlt
ljmp
loope
roll
fbld
pusha
adc
pop
sbb
jno
pop
pop
push
lea
enter
test
mov
adc
jge
scas
inc
pop
jno
iret
pop
ss
test
mov
jmp
jo
mov
push
jne
movsl
scas
out
aad
cmp
adc
std
inc
fbstp
sbb
fbld
lods
pop
int3
fsubrl
add
push
stos
enter
sbb
scas
jns
cmp
loope
out
push
arpl
add
jle
sub
clc
mov
push
sub
lahf
mov
mov
js
jb
inc
mov
in
adc
push
dec
lea
pusha
xor
mov
cli
lds
idiv
jecxz
jae
in
push
daa
inc
inc
aaa
or
mov
push
loopne
pop
inc
shlb
lods
mov
sub
jo
outsl
dec
or
push
fwait
push
ds
ficomps
mov
push
cmp
or
dec
sbb
leave
rcll
mov
sti
dec
cmp
aaa
daa
and
stos
mov
pushl
push
shrb
frstor
xchg
pushf
push
cmpsl
stos
pushf
adc
mov
aam
pop
fcmovb
bnd
lcall
push
outsb
aas
rcrb
cmp
add
dec
add
stos
mov
sub
pop
sbb
xchg
je
es
cmc
add
gs
outsb
daa
stos
js
push
es
pushf
data16
imul
std
mov
xlat
xchg
shr
mov
jb
inc
hlt
fs
fcoml
into
add
adc
pop
mov
sub
mov
mov
lods
mov
xor
fisubrl
xor
lahf
scas
push
push
imul
filds
test
push
pop
jb
sbb
pop
enter
cs
sbb
fwait
cmp
or
test
in
in
leave
mov
cli
push
popa
test
pusha
xchg
lea
add
add
and
sub
lahf
pop
push
fcompl
dec
inc
movl
push
fimuls
js
arpl
repnz
hlt
nop
or
pop
pop
rcrb
mov
mov
clc
hlt
xchg
pop
push
sbb
mov
shl
or
fidivl
fmulp
mov
lret
pop
jl
jl
cwtl
cmp
xor
or
and
jmp
ret
mov
bnd
jge
movl
cmc
movsl
pop
out
mov
repz
enter
pop
fwait
loopne
repnz
dec
into
and
inc
lret
addr16
jecxz
lods
cmp
lcall
scas
mov
mov
lea
gs
and
jecxz
xchg
out
in
jb
cmpsl
jmp
push
sbb
bound
and
sbb
mov
dec
pop
jmp
outsb
xchg
imul
insb
mov
mov
jle
fidivl
loopne
test
in
add
sub
in
test
add
push
push
ss
pop
sub
and
aad
movb
mov
adc
pop
test
in
stos
mov
mov
mov
jo
fmul
outsl
std
shrl
repz
cwtl
fisttpll
pop
mov
lock
outsl
ljmpw
mulb
push
mov
ficoms
and
cmpl
push
push
pushf
call
in
cld
xor
outsl
jns
sbb
movb
cmp
push
mov
pop
icebp
mov
mov
xchg
dec
mov
xchg
aaa
lods
data16
pop
addb
pushf
or
mov
mov
lock
mov
scas
leave
ljmp
sbb
xchg
add
mov
les
sub
jmp
xchg
xor
out
stos
sub
lock
adc
inc
or
imul
cwtl
xchg
sbb
aas
in
sbb
int
add
sub
sbb
pop
mov
xchg
lock
mov
jecxz
mov
adc
mov
cmp
fcompl
xchg
cli
cmpl
or
int
test
sub
xor
mov
lods
pop
iret
std
mov
and
enter
hlt
fwait
inc
hlt
cmp
lods
or
loope
sbb
ret
es
xor
out
dec
add
adc
mov
mov
iret
jl
sar
cld
cmpb
repnz
clc
sti
cmp
sub
in
lock
or
push
rcrl
hlt
jae
adc
fcmovnb
lret
jge
imul
adc
daa
popa
or
xchg
adc
out
pop
or
cwtl
jmp
insb
ret
enterw
das
popf
sti
pop
mov
xor
popf
mov
adc
pop
cmp
cmp
insl
je
pop
fcomps
sub
jno
fistpl
subps
lret
mov
mov
xchg
test
mov
lods
sbb
loope
mov
mov
push
push
mov
repz
test
movsb
mov
je
dec
scas
mov
imul
adc
inc
or
pop
loopne,pt
jns
or
push
fimull
inc
adc
dec
push
mov
sub
jmp
mov
dec
out
test
ss
insb
dec
sar
sub
push
fs
sbb
and
mov
xor
cmp
mov
ret
roll
mov
sbb
mov
movsb
imul
or
mov
repz
in
lds
mov
hlt
fisttps
and
push
loop
ret
nop
fisubs
push
movsb
add
outsb
push
push
cs
imul
adc
jle
testl
test
cwtl
inc
outsb
gs
pop
add
sarb
sbb
daa
pop
mov
outsb
es
adc
clc
std
ret
das
aas
fbstp
push
sbb
push
inc
xchg
push
sbb
out
inc
and
inc
mov
or
int
insb
sbb
mov
adc
addr16
out
lods
pushf
xchg
adc
sbb
rol
lds
pusha
push
mulb
xchg
mov
push
cli
subl
out
jnp
mov
lret
fnsave
cmp
pop
outsb
xchg
pop
inc
inc
dec
dec
jge
es
pop
cli
inc
dec
fcompl
movsb
fs
mov
in
rol
xchg
sub
inc
adc
insb
mov
dec
sbb
movsl
in
inc
xchg
adc
js
xchg
mov
mov
cmc
jmp
jnp
dec
pop
and
cmp
mov
cmc
notl
aad
pop
out
pop
ror
insl
xchg
out
scas
jne
and
cld
clc
daa
popf
inc
pop
aas
dec
fdivr
pusha
mov
in
stc
orl
iret
xor
add
pop
mov
jno
repz
xchg
scas
xchg
int3
or
jnp
dec
icebp
or
jae
and
hlt
add
int3
push
ret
mov
inc
fisttpll
push
loop
mov
cmpsb
ret
cltd
popa
push
gs
and
mov
lret
mov
pop
jns
int
movsl
xchg
fnstsw
jle
sahf
pop
les
dec
add
dec
rolb
int
sub
lret
mov
test
stc
stc
push
and
mov
mov
add
add
out
cmp
cli
dec
and
addr16
stos
es
cmp
lahf
loope
mov
stos
mov
jmp
test
sar
shlb
pop
adc
aaa
insb
and
or
mov
xor
lahf
test
mov
xor
sub
xchg
test
or
in
sahf
aas
aad
xlat
jecxz
call
mulb
sbb
in
fldt
es
ljmp
push
push
cmp
and
jnp
rolb
push
out
sbb
sbb
cltd
jne
pop
add
jg
xchg
mov
sti
outsl
or
and
inc
jmp
mov
inc
insl
jmp
das
enter
or
jnp
xrelease
dec
mov
sub
and
fistpll
and
lods
loopne
or
dec
cmp
cmp
pop
mov
lods
arpl
dec
or
sub
dec
lcall
imul
in
mov
xchg
aam
dec
add
add
lea
popa
mov
aaa
data16
ljmp
mov
repz
sbb
cs
negb
add
pop
cmpsb
shlb
test
pop
inc
or
ss
mov
inc
hlt
mov
cmp
push
adc
or
aaa
xor
rol
or
shl
je
cld
ficoml
inc
lods
lods
fbstp
xorl
or
dec
fwait
outsl
or
les
or
jmp
mov
movsl
lret
push
push
clc
je
dec
mov
in
or
push
mov
sbb
xchg
adc
call
jge
xchg
loope
xchg
aaa
or
imul
inc
ss
sub
xchg
mov
mov
dec
test
sbb
and
mov
ror
bnd
xchg
shll
mov
cs
pop
xor
or
lds
out
jnp
xlat
inc
enter
fs
mov
push
das
movsl
rcrl
cmc
xchg
push
inc
les
pushf
xchg
sahf
ds
lods
push
xchg
or
xchg
sub
push
in
sub
pop
xchg
dec
dec
mov
stc
jnp
je
loopne
iret
in
call
and
mov
xchg
in
nop
push
ret
in
dec
adc
dec
add
fsts
mov
cld
mov
push
add
xchg
jge
fucomp
rclb
sub
dec
mov
pop
ljmp
mov
dec
addr16
inc
cld
pop
adc
and
mov
add
mov
or
movsl
inc
les
cwtl
pop
add
stos
sti
int
jne
cmp
nop
and
pop
xor
jg
push
mov
in
ds
pop
xor
sar
xor
jno
sub
jp
cmc
in
ja
in
jmp
xor
dec
xor
inc
jb
jl
test
fwait
rcl
sub
inc
fbstp
mov
push
mov
push
pusha
adc
and
inc
ja
in
or
inc
cld
sub
xchg
mov
lods
dec
pop
js
dec
and
xchg
push
mov
jmp
jbe
shl
add
sub
dec
clc
cmpsl
sub
sub
vaddps
dec
pusha
shlb
and
adc
mov
push
cltd
test
push
cmp
inc
mov
xchg
sub
clc
xor
mov
pop
push
sbb
pop
sbb
push
push
int
pop
and
cli
pop
xchg
add
mov
mov
inc
jb
fcmove
shrb
ffree
and
inc
adc
sbbl
xchg
push
cld
cld
ja
clc
inc
sbb
pop
mov
sub
hlt
aad
mov
sarb
std
into
fmulp
test
mov
rol
or
mov
push
mov
cmp
fwait
cwtl
mov
cmp
test
stos
movsl
lods
push
push
push
pextrw
mov
test
cli
dec
cmpsb
dec
daa
cld
pop
mov
subl
adc
in
and
push
ss
mov
jecxz
out
pop
std
subl
stc
xchg
bswap
mov
sub
lods
sub
sbb
mov
hlt
push
sbb
cwtl
adc
cld
sbb
andl
sub
sub
mov
clc
sub
mov
or
jne
pop
cs
jae
into
and
push
or
divb
test
jo
aad
dec
xchg
pop
pop
mov
outsl
pushf
and
push
pusha
xlat
testb
push
jge
xor
aas
lcall
mov
pushf
test
aad
jl
shrl
dec
fmul
mov
jmp
xlat
inc
aad
scas
jmp
frstor
fistps
push
lock
in
inc
and
arpl
addr16
mov
xchg
test
xor
shlb
jp
sahf
pop
addr16
decb
lock
jno
pop
add
ljmp
shlb
pop
movswl
imul
daa
stos
imul
push
jno
movsl
mov
icebp
stos
xor
mov
in
inc
out
mov
in
aas
aad
jno
ja
xor
fisubs
jp
cmp
aas
xor
movsb
jle
cmove
adcb
mov
insl
dec
add
jb
mov
xchg
push
rcll
xlat
dec
mov
mov
push
cmc
out
in
lods
repz
icebp
mull
inc
push
cmp
xchg
mov
leave
add
add
les
inc
xor
xchg
insb
je
in
mov
jl
ja
mov
dec
les
scas
dec
nop
push
pop
lret
mov
jbe
mov
mov
xlat
xchg
cmp
incb
xchg
xchg
es
and
sbb
push
mov
loop
sbb
pop
jp
orb
xor
adc
aad
movsl
mov
ficoml
mull
pop
mov
iret
and
mov
out
leave
rolb
sarb
and
pop
sar
and
jae
mov
jmp
ss
pop
fdivr
cld
inc
dec
sbb
pop
xor
lret
and
fcomps
xor
adc
shrl
add
sarl
add
repz
mov
and
sub
lret
pop
nop
xor
mov
pop
dec
dec
mov
stc
pop
sub
adc
mov
sbb
aas
lods
or
fwait
cmc
mov
mov
test
inc
adc
add
or
mov
daa
push
pop
jbe
or
dec
sbb
mov
xchg
push
inc
rep
stos
lods
jo
mov
mov
mov
insb
sahf
xor
xchg
push
sbb
stc
fwait
cltd
mov
cmc
xorb
push
loope
push
jmp
mov
xchg
iret
outsl
inc
push
repz
negb
push
fadds
in
inc
repnz
pusha
lret
int3
sahf
lcall
cli
adc
and
lcall
ret
cmp
fmuls
mov
pop
cmp
sar
adc
xchg
cs
iret
sub
test
xchg
xor
int3
gs
fdivr
stos
adc
add
clc
push
frstor
mov
cli
rcl
mov
fimull
mov
in
cld
push
pop
fwait
push
adc
push
data16
add
add
clc
push
or
incb
mov
and
mov
out
andb
jmp
xchg
push
push
in
cltd
aad
xchg
mov
jecxz
push
stc
aam
sub
push
push
push
int
les
loopne
stc
test
pop
bound
insl
xchg
dec
mov
nop
mov
dec
cmp
fsub
mov
mov
push
jmp
sub
insb
ljmp
sbb
jge
mov
xchg
mov
push
xchg
push
sub
add
sbb
jmp
push
mov
test
pushf
mov
jp
je
push
icebp
adc
pop
es
push
cmp
xlat
jg
lds
jge
les
neg
sahf
jnp,pt
add
pop
xchg
and
and
mov
insl
add
jbe
inc
mov
inc
push
xchg
das
push
adcl
cmpsl
jno
adc
lods
fistpll
movsb
push
rcll
jbe
adc
repnz
out
das
into
xor
repz
cmp
in
scas
lods
fs
xor
mov
mov
mov
aam
sub
cmc
std
push
shlb
int
mov
hlt
stc
xchg
sbb
sbb
push
ljmp
dec
add
inc
sub
pop
jnp
js
mov
jbe
roll
xor
jmp
icebp
cld
or
and
mov
aas
and
xchg
inc
cmpsb
repnz
imul
cmp
pop
addr16
mov
xchg
sbbl
ss
jecxz
xor
outsl
xor
inc
repnz
mov
cmp
ja
das
rorl
cli
roll
inc
xchg
mov
sub
cmc
pop
push
pop
mov
jae
pusha
test
in
jecxz
rcrb
jg
cmp
or
cmp
sbb
icebp
mov
out
sub
xor
mov
add
push
ret
lcall
sahf
into
inc
inc
cwtl
ja
xor
fs
adc
ja
inc
not
xchg
xchg
or
mov
xlat
pop
inc
sbb
adc
xchg
scas
jbe
ds
mov
xchg
les
xchg
jb
enter
mov
in
ficompl
mov
jmp
pop
ja
mov
or
xchg
mov
lock
aad
mov
rolb
stos
xchg
aas
and
arpl
hlt
inc
and
ds
push
dec
ret
mov
mov
push
fnstenv
lret
jge
cmp
mov
mov
pop
lcall
pop
dec
cmpsl
jge
push
jne
cmp
out
push
pop
movsl
cmpsb
pop
jns
test
or
mov
ja
cld
leave
sysret
or
pop
out
mov
arpl
sub
out
mov
insb
push
pop
int3
add
fwait
aaa
stc
out
fldcw
add
and
fisttps
daa
dec
fdivrs
icebp
leave
rolb
pop
sub
stos
test
mov
sub
and
daa
sbb
insl
fistpll
aas
fdivl
cld
push
roll
push
xchg
dec
rclb
mov
push
jo
push
adc
movsl
pop
adc
shrb
add
mov
jne
lret
in
jmp
mov
cmp
icebp
enter
and
jbe
scas
xor
fwait
loopne
addl
push
ret
mov
push
sub
into
inc
dec
lahf
fmul
ss
shl
xchg
xchg
push
inc
popf
std
loop
jns
pushf
sub
call
xor
out
push
popl
insl
xlat
fistps
push
arpl
ror
push
push
jne
int
stos
and
cld
inc
cli
cmp
mov
int3
test
jle
ror
xchg
imul
inc
imul
push
inc
pop
in
ja
push
pushf
add
into
setl
fsubs
int3
pusha
dec
adc
xor
jns
repnz
dec
dec
push
pop
xchg
jns
mov
in
inc
xchg
pop
mov
dec
jmp
jmp
pusha
das
daa
sbb
and
and
adc
mov
das
adc
mov
mov
jno
mov
pop
jle
xor
hlt
inc
inc
repnz
test
leave
jp
jle
insb
dec
adc
into
jmp
mov
jg
inc
popa
inc
pop
pop
dec
pop
xor
xor
je
int
daa
popf
or
notl
pop
xchg
imul
pop
xchg
adc
push
les
rcpps
or
in
hlt
enter
aas
ss
cmp
mov
mov
or
in
call
test
and
les
test
cmp
jge
jmp
out
add
fcoml
mov
cmpsb
ljmp
pop
roll
and
push
jle
out
dec
mov
mov
icebp
add
cld
mov
out
incb
push
fwait
scas
rorl
out
loope
iret
icebp
adc
jne
mov
or
nop
mov
or
mov
pop
decb
sbb
incl
or
cmp
and
inc
inc
je
jmp
loope
mov
jle
xor
sub
in
repnz
push
cmp
sub
scas
jne
cltd
lock
mov
outsb
cwtl
xchg
les
cmp
cmpsl
xchg
cs
js
and
dec
scas
sub
xlat
sbb
pop
and
ret
push
or
pushf
shl
rcrl
inc
int3
mov
cwtl
test
int3
jmp
fsub
jecxz
xchg
ja
dec
popf
sti
into
lret
lcall
jnp
rcrl
push
mov
sbb
into
dec
into
sub
cmpsb
imul
cmp
jne
lret
pop
push
or
lcall
jb
xchg
notb
sub
mov
sarb
lea
rolb
pop
jne
test
cmp
pop
addr16
cmp
push
daa
lock
push
sbb
test
cltd
mov
cmp
icebp
mov
mov
mov
and
lods
xor
jnp
dec
push
sub
xchg
mov
arpl
add
lcall
dec
jae
sbb
incl
addr16
mov
mov
add
mov
and
outsb
shll
cmp
stos
cwtl
test
pop
pminub
cmp
cltd
dec
inc
sbb
movl
push
shr
cli
jae
stos
dec
inc
ret
nop
repz
mov
int3
mov
popa
flds
jp
mov
add
pop
adc
mov
out
jle
mov
dec
loopne
pop
imul
call
lcall
cmpsb
loope
lods
and
inc
in
mov
pushf
stos
pop
cmp
das
mov
inc
int3
popf
sbb
gs
aaa
mov
out
jmp
inc
sbb
cli
popa
sub
ds
aas
rcl
out
push
mov
addr16
or
cs
mov
iret
xchg
sub
ds
mov
pop
mov
cmpsb
mov
rcll
mov
stos
adc
lcall
das
cmc
lea
mov
les
xchg
js
scas
inc
into
sub
mov
in
or
adc
and
dec
adc
jbe
stos
lahf
loope
jno
loopne
inc
push
imul
es
fwait
cmpsl
push
aam
push
fnstcw
cmp
call
les
cli
les
das
cltd
mov
sbb
int3
and
test
push
push
inc
dec
sub
push
leave
les
jmp
add
int
jnp
loope
sub
cltd
or
mov
mov
andl
mov
and
cld
lea
mov
sahf
lret
jns
lea
mov
leave
sar
fsubp
addb
repnz
into
xchg
sti
movsb
sub
xchg
mov
sarl
or
mov
into
enter
movsl
jno
test
mov
add
out
jp
lds
xchg
fldl
aad
jae
inc
dec
jo
or
mov
daa
movsl
iret
popf
add
pop
mov
mov
cmp
mov
sahf
sub
movsb
daa
mov
sub
push
mov
mov
jp
das
and
push
dec
sarl
sub
cwtl
fdivs
and
popa
or
js
loope
lret
test
ja
cli
and
inc
sbb
ja
daa
outsl
in
maskmovq
imull
cli
dec
mov
mov
adc
std
mov
aam
lds
dec
xchg
mov
lds
mov
or
and
mov
mov
jb
cmp
add
movsb
lods
mov
jne
inc
int
data16
cmp
push
jo
push
inc
jb
add
ret
sub
mov
sub
les
imul
push
and
ja
out
scas
and
xor
xchg
mov
cmp
cmp
mov
xlat
ss
sbb
push
aas
inc
lock
icebp
xchg
pop
or
jb
in
xchg
pop
fnstsw
mov
jl
mov
test
lret
xor
or
cmpb
imul
call
aad
cltd
ds
push
js
xor
xchg
pop
loopne,pt
push
lods
lock
loope
jae
aad
pushf
jo
and
test
mov
std
test
cmc
ds
js
das
arpl
ljmp
inc
cld
lret
mov
aas
sub
stc
adc
push
cmp
stos
xlat
aam
sbb
pop
inc
inc
sub
jb
shll
mov
loope
sub
xor
jmp
lds
test
and
cwtl
xor
jecxz
jnp
ret
sbb
xor
ss
rcrb
inc
jge
iret
pop
sub
mov
popa
roll
stos
mov
repz
test
mov
sbb
xor
jns
ret
mov
cmpsb
scas
xchg
test
cs
fwait
push
nop
xor
push
mov
ret
aam
add
pop
xor
or
pop
and
les
jmp
push
std
add
xor
icebp
add
push
mov
popf
inc
jbe
mov
sub
jle
pop
inc
push
xor
imul
cmp
cltd
mov
movsl
sahf
mov
loopne
in
push
into
jno
lods
add
sbb
ret
mov
sbb
push
jl
sub
shrl
std
andl
cmp
sub
adc
jecxz
lods
outsb
dec
xor
shl
pop
inc
andb
popf
xchg
mov
xor
arpl
or
mov
mov
les
dec
or
ljmp
jb
and
xchg
loopne
sbb
push
inc
push
mov
sub
push
js
loop
outsl
and
jno
mov
shll
mov
sub
mov
jmp
add
daa
pop
mov
out
js
jg
jge
mov
mov
loop
cmp
ja
cmpsl
pop
push
jge
shll
out
daa
cs
adc
aaa
dec
mov
sbb
push
lea
mov
in
mov
ljmp
inc
push
fnstcw
out
mov
adc
xor
xor
cltd
fcomps
pop
mov
pushf
test
jp
in
test
and
xor
mov
outsl
push
mov
mov
sbb
xor
ret
adc
ljmp
mov
xchg
adc
xchg
in
cs
in
jo
push
or
int3
lea
leave
sub
shll
mov
aam
mov
jge
jp
aam
mov
jmp
cmpsl
cmp
inc
ret
pop
gs
push
into
cli
jge
pushf
add
or
ljmp
adc
icebp
pushf
loop
movsb
movsb
mov
push
fdivl
dec
mov
or
inc
jmp
mov
jb
inc
pop
add
pop
lahf
cmp
mov
bound
in
sbb
adc
stos
jle
fst
pop
neg
jns
and
leave
test
pop
pushf
sub
xchg
outsb
jns
xchg
jecxz
rclb
clc
fidivrl
pop
sub
hlt
arpl
insl
cli
clc
jmp
cmpsl
clc
pop
jno
outsb
pop
aad
inc
das
outsl
adc
cmp
sbbl
adc
imul
and
xchg
dec
add
sbb
lahf
mov
adc
jnp
mov
scas
pop
xor
mov
aaa
dec
mov
ficomps
xchg
mov
mov
lahf
cli
lods
cmp
fwait
jns
fnstenv
loope
xchg
movsl
jp
mov
sub
sub
cmp
aaa
repz
cmp
fisubrs
enter
xchg
sbbb
fisubrs
xor
movsb
es
dec
sbb
mov
stos
andl
scas
adc
and
dec
clc
jge
mov
cld
add
add
push
lcall
pusha
mov
cmp
pop
lret
pop
addr16
leave
mov
test
popa
shll
jecxz
sti
clc
lock
out
aad
adc
in
add
shll
hlt
mov
xchg
outsl
pop
enter
mov
cmp
and
jmp
repnz
mov
xor
fdivrp
jp
js
dec
je
push
mov
sarl
pop
mov
mov
cmp
decb
mov
fsubrs
inc
fwait
stos
sub
ret
adc
push
les
xor
adc
bound
jae
xor
jb
mov
les
xchg
xchg
stos
sub
jnp
mov
shl
inc
or
mov
add
in
std
fsubr
push
sub
inc
gs
test
aas
jno
or
jns
aad
push
clc
push
xchg
cmpsl
out
popa
mov
icebp
mov
rorb
cmp
lea
and
xorb
lcall
fwait
adc
pop
insl
sbb
daa
in
outsb
mov
out
das
mul
or
mov
add
shll
into
mov
jl
push
xor
inc
mov
mov
push
out
leave
xchg
xor
enter
popa
pusha
mov
xlat
push
pop
mov
out
bound
hlt
cmpsl
js
push
fbld
fsubrs
sub
cmp
mov
es
pusha
sbb
inc
inc
inc
jecxz
cmp
jnp
loop
sbb
cltd
push
dec
or
jp
mov
cmpsl
and
and
xor
sbb
cmp
and
xlat
int
xor
sub
sub
jae
fstl
insl
or
mov
dec
into
ret
mov
je
add
lahf
lods
xchg
les
and
pop
fldt
repnz
dec
cmpsl
or
jle
inc
sbb
jge
push
inc
cwtl
mov
cmp
fistpll
cli
xchg
pop
inc
out
cmp
sbb
int3
mov
mov
leave
jne
sbb
sub
pminub
pop
mov
cltd
xchg
sub
imul
mov
jae
cmpsb
push
mov
sub
or
push
inc
test
addr16
fildll
mov
fmull
in
mov
cmp
test
pop
push
dec
mov
test
fdivrl
loope
aad
dec
pusha
lcall
xchg
dec
jb
sub
mov
loope
push
dec
lret
scas
jg
nop
imul
sub
pop
jnp
cld
and
mov
test
aaa
jno
dec
ret
inc
xchg
and
dec
call
xchg
outsb
jmp
inc
add
dec
ror
cli
inc
push
in
pop
or
pop
scas
rol
mov
push
add
in
outsb
fidivs
out
insb
daa
xchg
es
mov
outsb
int
sbb
mov
lret
xchg
movsb
pop
cmp
jle
mov
cmp
xchg
adc
dec
fildl
pop
sarb
lods
ret
nop
mov
jno
xchg
dec
jl
rorb
lea
cmp
mov
xor
inc
xor
pop
dec
jg
dec
xor
test
nop
adc
cwtl
pop
add
inc
cmp
inc
cwtl
loopne
push
pop
jmp
ljmp
std
jne
pop
jmp
fsubrp
mov
lods
inc
sysret
push
call
dec
insl
outsb
popa
mov
cwtl
pop
leave
dec
adcb
mov
ss
inc
mov
jmp
ja
inc
lret
faddp
sbb
pop
sbb
stc
jmp
push
rorl
adc
or
test
pop
nop
les
outsb
pop
cld
add
sbb
mov
imul
sti
cmp
out
popa
pop
in
test
xlat
in
xchg
mov
mov
hlt
cmp
xlat
mov
pop
mov
movsl
mov
shll
je
push
xor
call
mov
lcall
jo
cwtl
and
push
out
cmp
xor
sti
adc
inc
pminub
cmp
or
jle
movsb
outsb
mov
mov
stos
cs
pop
cmp
inc
popf
push
sub
hlt
stos
push
cmp
mov
inc
adc
sti
gs
inc
push
jbe
jo
pop
movsl
dec
push
add
fsts
sub
shll
fchs
lret
mov
fwait
adc
or
mov
movsl
repnz
fisttpll
mov
or
es
in
and
adc
xchg
adc
pop
jae
xor
loope
shll
test
push
rolb
mov
push
roll
mov
sbb
cmp
and
gs
mov
lcall
fnstcw
cmpsl
cmp
inc
push
call
hlt
fnsave
sbb
pushf
clc
icebp
repnz
mov
adc
cmp
inc
pop
movb
scas
jae
aas
int3
call
sbb
push
dec
cmc
push
dec
iret
movsb
orl
sub
adc
jg
xor
cmpl
sti
mov
inc
dec
xor
jns
inc
and
int3
push
jl
sbb
movsb
jecxz
lcall
dec
movsl
or
and
cmc
xor
rcrb
mov
jge
ljmp
and
ret
scas
dec
scas
mov
repnz
popf
pop
mov
lret
mov
ret
adc
xor
sub
lret
mov
test
sub
inc
movsb
sbb
xor
cmp
mov
sub
imul
adc
adc
jnp
push
sbb
dec
pop
push
sub
inc
addb
cmp
das
leave
js
cwtl
sysexit
mov
movsb
div
shr
or
push
cmp
sub
stos
cmc
jne
test
fwait
push
std
and
cli
adc
insb
inc
out
sub
idivl
xchg
jb
js
inc
sub
add
push
cmpsb
cmp
aaa
je
lret
icebp
mov
inc
pop
xchg
in
push
iret
cld
cld
cmp
inc
int
jl
cmpsb
pop
jmp
scas
lock
jmp
dec
mov
iret
and
rdtsc
xor
xor
incl
jle
test
cld
jle
push
fdivr
add
insb
pop
jno
cmp
xchg
sub
adc
je
fldenv
call
push
ss
pop
cld
inc
push
insl
inc
mov
inc
pushf
sahf
add
add
push
pop
push
mov
or
shrb
jb
jge
sub
mov
pop
movups
pop
ret
pop
adc
cmp
sti
sbb
in
inc
sarb
pop
sbb
cwtl
je
sub
cwtl
mov
clc
lods
sti
loop
pop
aad
scas
nop
hlt
jnp
mov
ret
insl
enter
xor
and
stos
xchg
cmc
fs
push
lock
xchg
cwtl
lcall
inc
lret
inc
sbb
and
dec
andb
sbb
xor
stc
inc
xor
sbb
js
pop
xlat
bound
stos
and
xor
loope
ja
cmp
push
movsb
scas
xchg
popf
inc
dec
enter
daa
cmp
jno
xor
subb
pop
js
insl
shll
std
inc
rcrb
xchg
ret
in
push
iret
arpl
or
mov
dec
rcll
lock
movsb
xchg
sub
repnz
lret
push
movsl
test
mov
divb
ds
ljmp
das
stc
push
jne
lret
clc
pushf
jbe
add
sti
jp
mov
xor
pusha
xlat
outsb
inc
cs
popf
andb
mov
or
push
pushf
adc
jns
inc
dec
add
adc
push
or
daa
add
lods
inc
mov
fisttps
or
pop
dec
xor
cmp
mov
call
ds
sahf
sub
popa
jecxz
pusha
ret
dec
inc
cmp
into
lret
test
cmpl
fdivp
das
or
dec
pusha
stos
in
xor
mov
fsubrl
popa
fistpl
mov
mov
inc
repz
cmp
xor
mov
insl
mov
int3
adc
sbb
popf
jmp
mov
sub
lock
add
cmc
push
xor
sbb
loope
mov
and
push
aas
fmulp
cmp
faddp
lds
inc
xor
jbe
push
mov
jmp
shrb
adc
nop
movsb
push
testb
in
hlt
or
mov
int
daa
mov
in
or
jge
setbe
jns
jg
jmp
dec
and
inc
sbb
sbb
pop
cwtl
inc
lock
lcall
xchg
loope
pop
xchg
aaa
xor
fwait
adc
dec
ret
shrb
sbb
fists
sti
mov
xchg
mov
popf
ror
into
push
sbb
iret
int3
lock
insl
movsl
jmp
dec
sub
fistpl
xor
sbb
mov
cmp
sbb
pop
shlb
sub
and
xor
cbtw
daa
incb
pop
or
call
lock
pusha
out
dec
testb
mov
inc
push
clc
add
ds
pop
xlat
mov
mov
and
fisubrl
and
movl
dec
imul
mov
mov
jo
pop
shll
mov
mov
int3
into
fisttpl
and
add
fisttpl
push
jp
push
mov
cmp
xchg
addr16
js
xor
push
adc
adc
mov
or
jle
push
sub
push
cmp
clc
mov
into
lds
mov
jge
and
mov
repz
loopne
test
mov
negl
dec
ds
das
dec
adc
addr16
add
jae
dec
and
adc
xor
mov
xchg
push
push
jmp
test
int3
mov
mov
and
push
aas
mov
adc
out
add
and
ror
push
pop
or
inc
les
or
dec
stos
aaa
mov
jge
cmpsb
xchg
pop
xchg
mov
dec
mov
imul
push
push
mov
cmpb
dec
or
jg
decl
xchg
sbb
xor
dec
push
mov
sub
or
loope
mov
cmp
in
jb
dec
fstl
push
jecxz
jp
mov
mov
cwtl
js
sbb
jge
enter
pop
lret
insl
out
mov
dec
sbb
mov
sub
sbb
fsubr
movsb
scas
pusha
nop
sub
mov
cwtl
xor
xor
ret
repnz
ret
out
popf
push
dec
ret
outsb
jno
dec
std
xchg
data16
push
push
aad
xor
jmp
or
and
sbb
rorl
out
jnp
stos
cmpsb
lcall
pushf
dec
je
les
movsl
testl
scas
shlb
std
sbb
stos
lcall
lcall
xor
ja
nop
stos
enter
dec
call
sarl
fmuls
xorb
loop
movsb
adc
jnp
cmp
loop
rorl
mov
dec
push
mov
mov
in
sbb
jnp
pop
push
xlat
arpl
xor
xor
jo
subl
cmpsb
sbb
jns
mulb
adc
dec
sub
daa
mov
cmc
jnp
add
push
leave
aaa
mov
stos
push
push
mov
pop
xchg
in
in
xchg
jecxz
stc
or
outsl
and
outsl
andl
aas
adc
jg
jmp
pop
and
mov
inc
jo
sbb
leave
lcall
repnz
popf
mov
sbb
inc
pop
test
dec
mov
push
out
adc
cmpsl
jo
jl
add
mov
test
aas
scas
jae
int3
push
pushf
aaa
cwtl
test
imul
adcb
jg
and
loopne
mov
outsb
mov
scas
fs
lcall
sbb
pop
ds
lods
nop
call
adc
aam
and
pop
mov
stos
push
fcomp
xor
mov
push
cmpsl
pop
mov
push
xor
xchg
dec
adc
insl
nop
dec
test
sub
stos
shll
nop
mov
mov
mov
mov
cli
xor
lods
fwait
jl
cmp
insl
pop
push
mov
sub
test
or
arpl
inc
imul
arpl
add
es
mov
mov
int3
daa
out
loopew
std
and
scas
xchg
cmp
popl
enter
scas
imulb
mov
mov
sbb
xchg
pop
sahf
inc
sahf
cmp
mov
aam
fisttps
popa
and
xor
mov
int
cwtl
fdivl
les
insl
push
cli
xchg
adc
mov
stc
add
aad
fmuls
sub
shr
mov
lock
mov
push
mov
mov
fsubl
xor
adc
push
push
sbb
fs
sub
in
aam
dec
flds
or
push
hlt
iret
insl
testb
push
mov
mov
call
inc
subb
jp
adc
pop
outsl
sbb
scas
xlat
scas
out
push
inc
lea
or
into
mov
cmp
mov
nop
subl
and
in
pop
mov
pop
mov
and
mov
pop
repnz
lods
pop
test
rorb
xchg
stc
imul
cmpsb
fstpl
test
leave
orl
push
pushf
xchg
mov
mov
lcall
mov
cli
sahf
fs
cmp
test
testl
inc
jmp
xlat
shrl
sub
scas
int
lahf
aad
gs
add
stos
mov
mov
sub
xchg
fsubrs
test
mov
sbb
aad
in
out
test
lcall
fs
push
add
or
pop
ret
fcmovnb
lcall
xchg
aas
fsubrl
rol
imulb
lods
negb
cmp
xor
or
jle
sub
jbe
adc
das
mov
repnz
imul
cs
lcall
jp
pop
add
call
scas
movsb
lds
mov
jg
scas
in
sbb
mov
movsl
add
and
pop
pop
push
test
enter
cmp
pop
and
and
inc
cli
hlt
sub
mov
and
add
roll
ljmp
push
test
imul
inc
scas
mov
xchg
ror
cwtl
inc
dec
push
test
jae
ljmp
sbb
mov
push
xchg
mov
push
add
cs
lds
and
sbb
mov
sub
mul
mov
jecxz
or
cltd
pop
xchg
ret
movsb
inc
in
into
or
insl
movsb
or
mov
sub
jae
cmpsb
jle,pn
outsl
jne
lret
add
sbb
stos
lcall
inc
lds
xor
dec
sbb
adc
out
insl
pop
adc
jne
xchg
ljmp
in
push
fcomps
inc
out
or
push
jge
pop
das
adc
aam
testl
imul
lods
pop
pop
imul
std
xchg
sbbb
dec
mov
sahf
sti
sar
xchg
or
add
rorb
xchg
mov
test
jl
lea
les
or
popa
dec
xor
jo
add
jg
cwtl
jmp
jg
aaa
loop
sbb
stos
push
add
stos
mov
out
cmp
mov
mov
adc
mov
and
rclb
fldl
pop
repz
pop
xchg
les
mov
sbb
inc
inc
push
cli
fs
arpl
push
push
jbe
je
jmp
inc
adc
add
stos
cmp
into
fsubs
sbb
jno
mov
cmc
lret
lea
je
mov
jb
div
jnp
fimull
cmc
jp
adc
inc
or
mov
sbb
inc
lds
sbb
push
ret
insl
mov
jnp
sti
inc
stc
cmp
mov
pop
cmp
push
mov
and
mov
inc
mov
xchg
je
xor
and
test
sub
cltd
and
loope
push
jp
xchg
shlb
mov
pushf
add
arpl
inc
sti
addb
push
adc
ror
push
bound
jle
test
addb
pop
xchg
lret
ds
and
inc
test
ja
inc
jae
mov
test
mov
adc
rcr
mov
add
or
cwtl
arpl
repnz
cmc
and
aad
add
sbb
sub
push
in
pop
inc
orb
xchg
mov
js
dec
ret
xchg
push
lods
and
rorb
pop
jmp
sbb
out
out
jbe
sub
sahf
mov
or
sub
xchg
cmp
mov
outsl
lret
or
push
pop
fsubp
fwait
aad
aam
sbb
rorb
pop
icebp
cmc
pop
sbb
cmp
pop
push
cmp
or
arpl
jg
sbbl
andb
test
jecxz
ficompl
xor
fwait
cld
push
lods
pop
cmpsl
in
push
mov
in
pop
sub
enter
xchg
mov
cmc
sbb
cmpsb
andb
add
sub
testb
pop
dec
push
testl
and
scas
movl
xor
sub
popa
lock
cmp
mov
icebp
fwait
push
aad
sbb
arpl
pop
in
int3
push
icebp
xchg
imul
sub
insl
loop
mov
sub
inc
jl
sarb
rcll
cmp
cmp
push
icebp
ss
add
pop
sahf
dec
adc
loope
imul
mov
lret
pop
sub
dec
fmull
loope
jg
addr16
fistpll
je
lret
in
mov
push
xor
add
sub
sti
dec
cmpsl
pop
sbb
mov
inc
pop
mov
cmpsl
jo
fnstenv
jl
inc
xchg
push
jnp
and
mov
mov
cld
fldcw
ja
pop
sbbb
jb
clc
dec
std
jl
and
stos
jae
xor
or
pop
or
mov
mov
sub
xorb
jnp
and
mov
movsb
and
movsl
cmp
xchg
mov
negb
mov
push
aad
mov
das
jae
jle
and
jne
adc
std
adc
les
xchg
xlat
hlt
cmp
in
outsl
jle
movsb
cmp
dec
and
into
pop
dec
psrad
add
mov
daa
add
sub
out
push
dec
adcl
pusha
test
pop
dec
xchg
aad
or
add
cmp
push
and
fs
mov
dec
inc
sbb
push
push
jp
cmp
xor
fs
add
insl
mov
clc
flds
daa
loope
pop
sub
mov
lea
mov
jae
push
inc
sub
pusha
or
mov
dec
pop
dec
imul
xor
sbb
jmp
xchg
je
pop
daa
push
test
pushf
dec
inc
mov
sbb
pop
fucom
sarb
mov
fprem
inc
test
and
sbb
leave
out
add
cmp
fwait
stos
sbb
pop
adc
mov
mov
mov
jae
adc
test
sbb
aam
inc
jae
mov
xor
dec
movsb
sbb
repz
leave
imul
inc
dec
fnstenv
mov
xor
lock
loop
jg
dec
xchg
adc
lret
xchg
add
mov
inc
pop
arpl
push
sbb
xchg
repz
add
jb
jnp
pop
sbb
xor
xlat
stos
aad
out
ljmp
mov
mov
lods
sub
jnp
out
xlat
movb
fcomps
sar
cmc
movsb
ljmp
rcrb
test
mov
in
mov
cmp
loop
push
jae
rolb
cs
mov
pop
pushf
test
pop
add
rorb
cwtl
fmull
imul
mov
push
pop
mov
inc
lock
push
mov
inc
aaa
push
mov
out
js
adc
xchg
pop
xchg
adc
sbb
jmp
push
int
mov
adc
fisttpll
inc
sub
sbb
mov
pop
sbb
arpl
cld
aas
je
add
das
lcall
dec
test
arpl
inc
mov
int
sti
adc
int
and
push
sub
mov
pop
icebp
pop
sub
popa
movsb
mov
push
add
ja
xchg
pop
mull
sbb
cmpsb
or
xor
xor
and
lds
cmc
jge
enter
repnz
lret
inc
rcrl
andl
inc
mov
mov
and
pop
cmpsb
out
pushf
mov
nop
enter
mov
popf
xor
push
mov
popa
cmc
fs
adc
fmuls
mov
leave
pop
lock
sti
sbbb
inc
or
push
xchg
cs
and
dec
daa
sbb
xor
sub
or
push
mov
or
outsb
adc
fldlg2
sbb
xchg
repnz
and
mov
add
rorl
out
adc
dec
mov
xchg
xchg
das
adc
xchg
xor
inc
lock
xchg
pop
mov
add
mov
ret
and
fistl
rcrb
daa
push
mov
pushf
mov
repz
mov
cmpsl
xchg
stc
hlt
push
inc
push
cmpsl
add
outsb
jl
pop
jnp
insl
movsl
adc
jg
aam
fs
mov
and
ja
cmp
fstl
ljmp
inc
in
cli
push
dec
out
inc
sbb
cmpsl
lods
xchg
shlb
jl
and
clc
add
inc
out
fsubr
inc
xchg
inc
clc
int3
xchg
loop
dec
xlat
mov
jp
dec
popf
dec
insl
sbb
inc
int3
or
repnz
add
out
push
lahf
rcll
pop
cmp
mov
scas
jle
mov
xchg
fs
das
xchg
in
out
pop
push
xor
hlt
dec
push
pop
lds
mov
pop
dec
aaa
jo
pop
in
test
adc
mov
jecxz
or
push
push
mov
and
lock
cmc
push
adc
cmp
ret
adc
or
loope
jle
mov
icebp
shr
mov
lock
push
into
xchg
xchg
aaa
sub
dec
adc
mov
inc
jns
mov
es
movsl
cmp
cld
stos
sbb
sbb
mov
data16
or
pop
stos
sub
and
xchg
pop
call
test
pop
push
cmp
movl
xchg
cmp
out
dec
xor
ret
popa
or
pop
movl
popf
mov
mov
jp
ljmp
jo
sub
leave
dec
mov
xor
idivb
inc
test
mov
fbstp
cmp
daa
adc
leave
sub
inc
es
xchg
inc
push
jae
insl
lcall
aam
adc
push
enter
rcll
enter
hlt
cmp
mov
sub
jbe
lcall
nop
fldt
insb
stos
insb
jmp
sub
js
or
cmp
push
mov
jb
jnp
jecxz
cwtl
lcall
sub
leave
jle
addr16
fistpl
fisubl
lods
dec
shlb
inc
lahf
call
loopne
daa
inc
pop
lret
sbb
clc
or
mov
sahf
push
mov
xchg
push
push
adc
mov
mov
inc
outsb
sbb
push
xor
sbb
adc
jno
jnp
ja
sub
scas
jae
cmc
cmp
pop
xor
lods
or
cmpsl
xorb
mov
outsb
outsl
push
mov
ror
lds
mov
fwait
orl
push
xchg
repnz
sbb
es
cmp
pop
jmp
jb
mov
xchg
fs
clc
out
jo
jl
inc
pop
aad
cs
add
push
sbb
lcall
icebp
mov
jo
mov
mov
lcall
stos
xchg
jbe
and
xchg
sti
out
shr
add
push
mov
push
mov
ljmp
cltd
push
ja
aas
or
js
push
mov
mov
enter
fs
rorl
pop
out
out
mov
mov
xchg
and
clc
or
inc
aad
stos
pop
pop
fmull
enter
rclb
scas
mov
mov
xor
icebp
jnp
dec
add
lds
loope
pop
bound
cmp
in
cmp
int
jo
hlt
cld
data16
or
je
lea
addl
dec
xor
push
fdivrs
push
adc
out
pop
mov
idivb
jno
scas
adc
and
sahf
addr16
mov
std
sti
aas
insb
pop
rcll
into
ljmp
ds
and
sbb
or
push
rcrl
ss
xor
jge
mov
push
call
outsb
mov
jmp
stc
cli
dec
ljmp
sbb
cli
aad
add
test
cmp
data16
std
dec
lods
sbbl
ljmp
shrl
mov
jns
push
ds
fcmovne
jbe
scas
push
jnp
fld
repz
in
pop
xorb
ret
or
les
xor
cmpsl
in
adc
bound
gs
add
cltd
mov
aad
sti
hlt
cmp
ja
aas
pop
outsb
adcb
aam
sbb
cmp
je
cmpsb
jmp
mov
sti
jbe
enter
jecxz
pop
test
cmp
sub
jle
cld
shrl
gs
mov
push
inc
push
cmp
add
xchg
daa
les
add
xchg
sbb
mov
jecxz
cmp
leave
cwtl
add
arpl
fcmovu
add
leave
add
xor
pop
pop
cltd
rclb
inc
lea
xchg
in
pop
popf
bnd
aas
in
aas
jg
pop
sub
mov
and
xor
xor
xor
xor
repz
push
out
std
addr16
xchg
cmp
scas
xor
and
dec
pop
cmp
or
inc
repz
lods
clc
pop
inc
push
inc
aam
int
push
pop
aam
les
ljmp
add
mov
fsubrl
jge
cs
cli
pop
add
and
or
push
pop
fisttpl
sub
popf
lret
push
pop
and
mov
mov
sub
xchg
and
push
pop
int3
pop
fdivs
in
pop
mov
inc
xor
add
outsb
pusha
test
push
jbe
ss
fwait
jl
cs
sub
out
fistl
jnp
enter
lds
icebp
pop
or
inc
insb
lock
lock
push
aas
pop
gs
out
inc
inc
cmp
mull
jl
pop
adc
xchg
mov
mov
mov
mov
into
xchg
mov
add
jp
call
lock
cmp
int3
sbb
sti
ret
ret
push
pusha
xor
xor
jno
into
ja
adc
xor
fdivs
jmp
cwtl
test
push
stos
xor
lea
sub
mov
outsb
hlt
cmpsl
cwtl
cltd
lea
das
inc
mov
add
jl
fistl
in
cwtl
mov
mov
push
mov
push
lea
jl
dec
sbb
add
jno
cli
sbb
ja
in
lds
sbb
sub
push
jne
cld
mov
ret
dec
push
and
cmp
or
rclb
xchg
jbe
mov
sbb
mov
jmp
cmp
cltd
dec
jno
and
push
add
test
fwait
hlt
mov
pop
mov
stos
jge
mov
cwtl
stos
push
adcb
mov
push
lea
mov
mov
ret
insl
les
repz
mov
imul
negl
mov
push
push
mov
out
arpl
fs
lods
ror
mov
mov
iret
push
mov
mov
aaa
or
dec
lods
pop
mov
cli
cmp
push
notl
mov
inc
dec
daa
cmc
outsb
mov
inc
insb
ljmp
imul
mov
icebp
jae
cmp
or
inc
ja
fsubl
dec
aas
mov
add
ja
jmp
bound
mov
push
rclb
xor
jbe
gs
xchg
mov
outsl
jecxz
push
and
into
insb
mov
sbb
call
pusha
and
cmp
dec
push
mov
push
imul
cmovg
ret
pop
movsb
sbb
mov
mov
test
mov
push
dec
dec
pop
sbb
sub
pop
mov
pop
pop
inc
and
jg
and
push
inc
push
mov
adc
pop
imul
lock
xchg
roll
lret
jne
rcrb
idivb
imul
adc
mov
push
cli
xor
xchg
inc
lret
lods
inc
clc
test
sbb
inc
or
cmc
jae
and
inc
lahf
push
mov
mov
aaa
andb
outsb
das
mov
imulb
add
or
ljmp
sbb
dec
js
repz
cmp
scas
pop
int3
sbb
daa
fistps
stc
loop
inc
pop
sub
movsb
xchg
sarl
in
je
inc
pop
outsl
mull
xor
xchg
xor
mov
cld
leave
lahf
or
inc
jns
xor
into
ret
mov
into
decl
imul
xchg
rolb
lcall
ss
cli
mov
xor
lea
sbb
mov
incb
mov
xchg
pop
lock
push
push
mov
and
cmp
stc
mov
mov
aad
cltd
push
ficoml
fstpt
mov
cmpsl
push
and
jo
fisttpl
shl
push
sub
cmpsb
adc
mov
out
insl
fiadds
fstpl
inc
adc
mov
lea
cs
sbb
leave
lods
insl
jbe
out
jmp
push
push
enter
scas
pop
fldcw
pop
jnp
test
mov
out
jns
adc
cmp
int3
sub
and
mov
push
test
popf
ss
pop
jns
cmpsb
push
mov
push
dec
dec
sbb
and
pop
fildl
mov
push
popf
and
pop
decl
jecxz
and
mov
mov
popf
push
fsubl
xor
cmp
ss
xchg
fbstp
dec
push
in
subb
ljmp
and
mov
dec
inc
adc
loopne
je
xchg
shlb
pop
mov
mov
jecxz
das
ds
hlt
jns
adc
mov
outsb
lock
shlb
aad
out
mov
loopne
in
inc
pop
repnz
cld
xchg
rorl
cmp
insl
or
cltd
fwait
and
std
push
and
add
fadd
mov
xchg
in
mov
bound
xchg
mov
adc
rclb
loope
mov
mov
push
jmp
jl
add
mov
mov
test
hlt
enter
out
jp
xchg
outsb
cmpsl
dec
cmc
inc
add
repz
mov
xchg
sbb
jns
and
int
inc
xor
sbb
out
dec
sahf
test
popf
insl
add
and
pop
jecxz
js
pop
mov
or
popf
cmp
sbb
mov
data16
loop
push
mov
ja
imull
add
sbb
enter
dec
add
jb
leave
arpl
xchg
and
jo
sub
mov
lds
cs
fsubs
popf
scas
xor
imul
call
mov
cli
cmp
ja
inc
sbb
scas
add
bound
ret
xchg
xor
mov
sub
adc
imul
js
mov
xor
inc
gs
je
adc
cmp
add
cmp
pop
cmp
hlt
out
test
ds
sub
stos
lods
or
js
mov
push
ds
mov
xor
sub
inc
adc
js
cmp
mov
dec
ljmp
push
sbb
inc
aam
and
xor
pop
mov
dec
dec
fcmovnu
es
test
cmp
js
xchg
pop
iret
mov
cmpsb
xchg
push
sbb
std
lods
sbb
mov
jnp
movsb
out
push
loopne
aaa
dec
lods
movsl
gs
pop
push
jp
pop
mov
loope
rclb
cmp
xchg
add
jmp
xchg
call
mov
jae
sbb
mov
sub
dec
cmp
xchg
add
jg
iret
xchg
pop
cmp
sub
push
mov
and
mov
lock
lds
pop
inc
mov
hlt
cs
mov
push
test
push
inc
mov
das
leave
jbe
add
dec
xchg
push
cmpsb
cmp
ror
pop
gs
call
xchg
mov
push
sbb
dec
rolb
imul
sub
dec
leave
sbbb
frstor
cmp
mov
push
aad
and
cmp
sub
jp
add
dec
add
mov
aas
and
popa
push
call
inc
jg
in
xorl
ds
sub
adcl
mov
loope
mov
data16
loope
xchg
xchg
push
jecxz
adc
cmpsl
xchg
das
xchg
cmp
sub
adc
aaa
cmp
adc
cmp
xor
mov
mov
lods
xor
or
xor
jnp
cmp
dec
dec
loope
push
push
shl
ret
fcoml
push
fbld
xchg
mov
out
clc
loope
mov
cmp
xor
fdivr
clc
mov
ss
and
or
loopne
dec
fcoml
mov
test
xchg
jb
leave
jg
out
icebp
adc
and
push
jp
xor
insl
jmp
xchg
sti
push
mov
sub
xor
jmp
push
jp
xchg
push
push
popf
lret
aas
push
in
mov
or
cmpsl
int
iret
push
cld
add
mov
jno
jae
and
fdivs
inc
pop
mov
insb
je
xor
pop
jge
or
mov
shll
lods
orl
adc
leave
mov
cmp
sti
mov
fwait
sarb
out
and
xchg
test
rcr
mov
dec
shlb
testl
cmp
pop
add
mov
jnp
add
fistpll
mov
mov
movsb
cld
loope
sub
cmpb
mov
cltd
arpl
cmc
out
push
in
mov
xor
repnz
mov
inc
loope
mov
xchg
aaa
dec
xchg
lret
add
pop
sub
mov
fs
imul
or
and
or
dec
cltd
mov
mul
stos
add
gs
cmp
addl
mov
xor
inc
sti
inc
enter
ljmp
enter
mov
fcmovu
jo
push
sar
cmp
cwtl
fwait
or
cmp
cmp
icebp
dec
ret
dec
ret
sbb
xchg
incl
mov
push
mov
stos
jns
rcll
push
mov
xor
push
lea
stos
sub
test
mov
sbb
mov
mov
cs
dec
jecxz
movsb
sti
daa
fists
out
adc
rcll
mov
mov
test
xchg
mov
lret
sbb
inc
scas
scas
repnz
sbb
popf
imul
nop
loope
dec
ficoml
xchg
loopne
dec
nop
mov
adc
jl
sub
xchg
inc
push
cmp
adc
inc
rcrb
dec
nop
das
jmp
pop
xor
movl
subl
out
jbe
rdtsc
dec
push
movsb
pushf
pop
xor
cmp
lahf
add
dec
in
data16
adcl
xchg
sub
pop
mov
aam
pushl
sbb
pop
fldcw
orl
popa
pop
lock
test
dec
bound
shll
icebp
or
lret
das
repnz
mov
sub
adc
stc
push
fwait
cmp
jecxz
stc
or
adc
mov
es
test
pop
icebp
loop
add
test
inc
pop
sub
lds
cmp
test
test
rcll
lock
dec
pop
and
loope
xchg
mov
sbbb
call
ret
mov
scas
fmull
hlt
cli
ljmp
pop
out
pop
jnp
cld
and
adc
sti
dec
inc
inc
mov
mov
enter
sub
sahf
shll
inc
pop
sbb
xchg
mov
je
sti
rorl
fs
inc
sub
in
repnz
xor
popf
and
ficoml
or
jo
lret
mov
jmp
lret
subl
inc
sti
cmp
iret
aam
sbb
incl
inc
ljmp
clc
and
sbbb
ja
shrl
jg
push
adc
jl
xor
adc
mov
xor
ret
mov
and
es
adc
inc
std
repz
cld
roll
cmp
rcll
pop
and
movsb
jge
pop
cmp
dec
out
sbb
stc
jnp
or
icebp
cmpsl
sub
push
std
int3
sbb
int3
jl
call
mov
outsl
outsl
xchg
jnp
imul
push
mov
dec
adc
cmp
test
lods
cs
addb
inc
out
inc
shll
and
mov
dec
inc
push
mov
add
bound
inc
add
ret
sbb
ss
pop
xchg
arpl
call
fldln2
adc
sub
imul
xchg
fsubl
in
and
mov
sub
adc
loope
leave
mov
inc
sti
pop
shll
and
repnz
call
push
cmp
xor
outsl
mov
mov
out
push
adc
in
fnstsw
push
sub
inc
imulb
insb
pusha
repnz
iret
sub
adc
bndstx
clc
mov
cwtl
adc
test
xor
and
and
jns
lahf
test
xchg
cmp
ljmp
in
or
cmpsb
lret
in
ret
ret
dec
leave
pop
ds
mov
xlat
xchg
jnp
movsb
add
out
mov
hlt
jge
xchg
hlt
sbb
idivl
in
insl
or
add
movsb
call
frndint
fucomip
ss
out
cli
inc
cmp
and
sarb
das
sbb
call
mov
dec
lods
jl
movsb
adc
push
test
lret
xchg
pop
sub
out
shrb
and
xchg
inc
add
fiaddl
push
cmp
mov
stos
sub
js
adc
pop
pop
mov
stos
gs
xchg
ja
pop
jp
stos
inc
addr16
test
sub
lea
dec
in
mov
dec
mov
rclb
pop
push
sub
mov
sbb
scas
cmp
cmp
sbb
icebp
imul
lahf
mov
cmp
aam
enter
aad
push
sbb
iret
aaa
in
fnstenv
lock
push
rolb
int
cmp
mov
in
pop
cmp
jns
cmpsb
sub
sub
sub
jge,pt
mulb
cmpsb
inc
shl
push
push
bound
xor
or
rclb
cld
ficoml
int
push
nop
adc
enter
lcall
arpl
mov
mov
mov
fisubrl
in
cld
push
mov
popf
sbb
cmp
aaa
xchg
pushf
mov
pop
xor
cmpl
out
add
sub
xor
aad
loopne
movsb
popf
repnz
and
lock
lods
sub
out
push
cmpsl
dec
jne
pop
inc
in
rclb
cmp
mov
pop
insb
fiaddl
xchg
pop
loopne
mov
jl
insl
mov
mov
insl
rcr
push
xchg
sarl
and
adc
jno
cltd
cld
in
test
imul
mov
jo
cli
mov
mov
lock
mov
ficompl
mov
or
mov
insl
stos
aas
lahf
iret
sbb
jne
loopne
mov
jnp
je
mov
dec
fsts
sub
inc
rcrl
jmp
pop
mov
add
fnstenv
sbb
ss
pop
mov
jmp
push
es
jp
rcrl
aas
or
push
pop
jo
cmp
jp
mov
fcomps
popf
cmp
mov
jo
add
xorl
xor
into
leave
test
push
and
xor
adc
adc
out
push
mov
dec
lcall
cmp
or
mov
xor
scas
or
dec
mov
jecxz
movsb
add
hlt
inc
lahf
iret
sub
xchg
cmpb
jns
or
or
ret
insl
xchg
dec
fidivrs
push
sub
xor
adc
pusha
push
xor
jns
sub
sub
mov
fdivs
pop
cmp
arpl
jmp
movsl
dec
mov
pop
enter
cmp
adc
mov
mov
adc
pop
xchg
sbb
xchg
push
jnp
les
dec
cltd
push
popf
daa
scas
std
jmp
and
enter
in
cmp
rorl
jns
pop
sti
adc
dec
push
loopne
mov
mov
or
add
je
mov
inc
mov
dec
testb
test
push
pop
push
add
or
sub
push
sbb
xor
and
cs
out
lret
sub
jno
aam
fsubr
add
hlt
in
push
sbb
aad
das
mov
xchg
loop
push
jle
pop
into
shl
shrb
jne
out
sbb
push
and
or
inc
lcall
sub
jbe
dec
cmpb
push
jne
sub
adc
adcb
sub
sbb
add
insb
inc
ret
pop
cmp
leave
or
inc
adc
or
xchg
mov
xchg
ret
in
stos
imul
lret
jl
pop
jns
clc
sahf
sub
mov
movsl
insl
ret
xor
xlat
and
mov
and
fwait
mov
pop
and
cmp
pop
test
push
hlt
clc
retw
je
fs
jnp
mov
cmp
pop
adc
jo
pop
nop
push
ret
pop
cmp
sbb
adc
dec
lods
cmp
jbe
cmp
fnsave
mov
lret
cs
icebp
call
jnp
mov
repz
xchg
loopne
mov
rcrl
sub
scas
sbb
scas
loop
test
jb
ret
loope
and
lock
pushf
sbb
inc
lea
lods
mov
or
adc
gs
lods
aam
shlb
push
sbb
stc
mov
add
sub
lods
mov
je
or
adc
out
sahf
pop
mov
mov
pop
xorl
xchg
pop
push
mov
lds
pop
or
rcrl
dec
stos
stos
xchg
sbb
dec
test
jae
xlat
ss
sub
jmp
iret
into
xor
jb,pt
push
or
mov
jle
cmp
test
shl
mov
push
mov
sub
jl
lcall
add
xor
xor
nop
xchg
add
cmpb
sbb
mov
divl
popa
arpl
inc
inc
sbb
mov
divb
lret
pop
lret
aam
jo
push
add
cmp
rcrl
faddp
ja
pop
cmpl
dec
lret
pop
mov
aas
sub
pop
and
loop
mov
shr
in
fadds
in
xlat
xchg
sbb
or
and
aaa
lahf
shll
push
push
lds
jecxz
andl
fld
pop
xor
in
fwait
and
loop
mov
adc
fst
leave
lea
cmp
push
dec
sti
xor
mov
pop
push
inc
xor
mov
ss
fldt
hlt
or
jmp
js
dec
fdivrs
dec
xor
sub
jbe
xchg
mov
mov
sub
dec
jl
pop
addr16
sub
mov
repnz
sarb
arpl
js
cs
jnp
test
mov
ljmp
or
mov
adc
cmc
dec
cmp
push
xor
dec
jmp
gs
add
adc
pusha
sti
dec
js
stos
popa
popf
pop
push
call
pop
or
es
enter
iret
je
int3
lret
int
add
fdivrs
inc
lret
ss
xchg
cmp
sti
pop
cmc
pusha
mov
lds
xorb
jae
inc
and
cmpsl
cmc
xchg
clc
imul
ss
adc
inc
cmpsb
ret
sbb
jmp
pusha
inc
jecxz
jno
push
rorl
pop
sub
out
in
jl
dec
sbb
dec
lcall
int3
push
sub
adc
add
adc
inc
add
cmpsl
iret
mov
fisubrl
out
lret
addr16
sub
or
jns
xchg
std
push
std
mov
jp
dec
lret
out
xchg
mov
stos
lret
or
mov
bound
xchg
shll
jns
insl
test
jg
loopne
mov
test
test
movsl
adc
fwait
cmpsl
and
test
and
jns
mov
ret
xchg
pop
mov
and
push
test
ficoms
bound
xchg
and
es
sub
sub
and
ds
mov
sub
cmp
call
dec
shl
imul
rorl
into
push
cmp
push
xor
int
fbstp
cmp
fisubs
mov
xor
fnstcw
push
xor
push
mov
jne
mov
popa
sbb
jae
mov
jo
xor
cli
push
cmc
jg
cmpsl
pop
push
aad
cmp
sub
fistps
adc
push
sub
xchg
mov
out
stos
cmp
movsb
aam
cmc
sahf
push
stc
test
jle
popf
mov
and
repnz
ljmp
out
lea
fildll
dec
xor
cmp
pop
pushf
and
fmull
inc
sbb
out
lcall
pusha
sbb
sarl
mov
jg
inc
xchg
jne
seto
mov
andl
scas
xchg
jns
setae
adc
dec
mov
dec
pop
sbb
push
cltd
loopne
or
dec
in
add
fsubp
sbb
in
jp
mov
mov
sub
adc
es
sub
adc
test
loop
and
rcrb
xor
ja
sub
popf
sub
mov
test
add
cmp
mov
sbb
dec
pop
popl
lods
fldenv
cmp
mov
pop
les
pusha
call
test
scas
mov
fdivrp
mulb
jp
ret
aam
jb
out
mov
inc
push
cmp
adc
aas
testl
icebp
dec
fmuls
pop
sub
jae
sub
mov
ret
bound
fists
or
inc
adc
mov
into
scas
out
add
sub
in
inc
lahf
jns
pop
sti
pushf
sub
imul
enter
outsl
leave
mov
cld
or
mov
mov
jne
fwait
inc
jae
mov
out
push
lcall
adc
mov
out
fildll
pop
in
inc
cmp
adc
jge
and
mov
push
inc
std
jmp
test
ljmp
lcall
daa
cmp
popa
mov
lret
dec
xchg
pop
ja
outsb
repnz
nop
nop
push
push
aaa
mov
gs
inc
xor
add
arpl
lds
insl
shll
cmp
jae
cmc
mov
inc
mov
sub
push
sub
test
lods
in
ret
inc
ja
inc
add
pusha
sarl
pop
xchg
lock
lock
adc
and
or
xchg
bound
popf
or
sub
dec
push
sti
out
dec
xor
outsb
cmp
insl
test
sti
je
adcl
jbe
inc
add
jle
dec
test
pop
aam
mov
sbb
js
inc
andb
xor
jge
and
in
cltd
outsb
mul
jmp
push
and
das
or
cmp
push
into
sti
imul
ret
pop
out
lret
cmpsl
mov
iret
dec
sub
int3
mov
jp
push
mov
insl
fdiv
sub
dec
orb
out
ja
or
sbb
dec
add
add
shll
inc
dec
adc
sub
jmp
icebp
scas
out
adc
clc
cld
or
push
mov
adc
repnz
inc
push
dec
xchg
inc
inc
lock
xchg
pop
pusha
loopne
popa
andl
cltd
aaa
pop
pop
pop
insl
roll
sbb
inc
in
pop
mov
fwait
insb
xchg
call
add
shll
or
bound
notl
sbb
iret
js
jecxz
pop
subl
xor
or
cmp
mov
cmc
push
sbb
inc
lea
or
rclb
add
ja
dec
xor
daa
inc
testl
aad
sbb
cmc
fisubrs
sub
jge
stos
push
outsb
dec
idivb
adc
aaa
mov
loopne
sub
xchg
sub
xor
inc
lcall
aaa
push
pop
mov
fwait
sti
jmp
pop
inc
or
or
inc
add
and
mov
lahf
cmpsb
xchg
shll
iret
fisubs
fucomip
add
sbb
mov
mov
sahf
out
ret
cltd
push
rorb
or
cs
jp
shl
jecxz
pop
call
test
call
push
mov
and
imul
xor
scas
xor
cmpsl
cwtl
add
out
imull
leave
xchg
sbb
push
outsl
arpl
jbe
sub
pop
sub
aad
xor
inc
outsl
sub
repz
mov
enter
pop
mov
jge
arpl
mov
sub
mov
or
xchg
orb
xchg
mov
pop
mov
lods
dec
fildll
out
ja
add
mov
cltd
dec
std
mov
jno
out
sbb
pop
icebp
outsb
insl
clc
bound
cwtl
mov
aam
cmp
jmp
stos
cltd
aam
daa
adc
add
push
vucomiss
ret
xchg
pop
icebp
jp
xchg
jae
pop
in
add
xchg
adc
fwait
maxps
das
in
fwait
and
add
or
cwtl
insb
bnd
mov
mov
sahf
sbb
fwait
mov
jp
jne
mov
pop
lds
pop
and
out
sub
sub
adc
int
sbb
mov
int
int3
mov
aas
pop
movsb
pop
cwtl
sbbb
insl
movsl
in
xlat
cmp
int3
jnp
xlat
frstor
pushf
mov
push
sbb
mov
addl
insb
popf
jo
xor
dec
xlat
mov
rolb
addr16
jnp
leave
cld
roll
mov
mov
jb
add
addr16
je
aaa
and
dec
or
rcll
dec
cmp
into
and
add
xor
gs
cmp
adc
sub
lods
push
cmp
jp
daa
push
ss
ficoms
arpl
mov
xchg
and
jge
push
and
push
data16
jmp
jge
xchg
mov
cmpsl
pop
daa
lea
sub
loope
out
in
dec
fidivrl
jl
pushf
sbb
negb
jl
leave
add
cli
xchg
mov
cmc
jne
js
add
gs
add
cld
jg
pop
push
and
dec
and
jle
cwtl
cmp
pusha
loop
mov
cltd
leave
mov
mov
xrelease
xchg
xor
in
jnp
xchg
and
arpl
mov
mov
jnp
insb
adc
int
pop
ljmp
mov
les
out
xlat
adc
data16
ja
push
outsb
movsb
xor
xchg
pop
mov
mov
xchg
aam
aam
mov
pop
pop
mul
pusha
repz
jle
mov
pop
adc
xor
addr16
lahf
lret
jl
es
sub
dec
pop
sbb
jle
out
sub
mov
sahf
xchg
inc
adc
mov
ja
adc
mov
mov
adc
test
cld
fstpt
sub
mov
ljmp
dec
push
fldenv
fnstenv
xchg
sbb
and
push
add
stc
loope
rep
cs
mov
lods
adc
jge
mov
push
jle
mov
gs
daa
jg
dec
mov
subl
mov
inc
xchg
pop
xor
sbb
cmp
mov
std
mov
shr
dec
xchg
jmp
sbb
cmp
out
inc
pop
pop
bound
xchg
out
mov
out
push
je
mov
jl
leave
inc
mov
pop
pushf
inc
lcall
sub
adc
addb
xchg
push
mov
pop
pop
test
dec
cs
pop
call
stc
scas
movsb
and
push
sbb
or
repz
push
aaa
xchg
hlt
sub
clc
sbb
jl
aas
push
mov
sub
sub
xchg
jmp
sbb
cli
jg
and
clc
rcrb
pop
xorb
iret
outsb
roll
aaa
push
push
js
fmull
fdivs
shl
jg
jmp
mov
fists
pop
repz
lahf
inc
xor
scas
das
ja
xorl
cmp
mov
pop
movsl
fiaddl
xchg
loop
add
xchg
push
adc
testb
mov
inc
jnp
ljmp
sub
mov
outsl
xchg
test
pusha
jle
mov
mov
dec
insb
inc
into
add
cli
nop
icebp
jmp
push
jmp
push
push
mov
and
fsubrl
xchg
mov
and
aad
mov
mov
and
pusha
mov
divb
lea
aam
pop
test
scas
shl
lret
dec
mov
insb
in
or
lods
cli
push
xor
daa
sbb
aaa
xchg
jg
cmp
repz
or
add
repz
jle
or
shlb
mov
into
addr16
mov
stos
out
sahf
push
mov
xor
pop
out
dec
sahf
sub
sbb
pop
insb
dec
push
cmp
lret
sub
mov
popf
call
xor
dec
icebp
jmp
dec
push
in
or
xor
cli
xchg
push
inc
cmp
xchg
loope
jecxz
mov
mov
insl
ud0
ljmp
clc
or
lock
jo
or
dec
lret
stos
enter
les
cltd
stos
arpl
hlt
gs
jl
mov
mov
jne
mov
lahf
mov
dec
xlat
popa
mov
enter
fldenv
mov
lods
in
sbb
mov
or
test
jle
dec
idivl
das
mov
fidivs
jl
sub
push
out
mov
cmp
subl
aad
xor
icebp
jle
fwait
popa
ljmp
call
loope
shrb
lea
add
cli
into
in
ret
xchg
add
ljmp
shll
popf
adc
xor
adcl
std
jge
pop
cmpsb
xor
sbb
mov
lds
movsl
pop
fisubs
bnd
push
sarb
pop
xchg
loopne
mov
addr16
jne
mov
sub
xchg
pop
or
hlt
test
and
xor
lock
lods
jo
daa
ds
inc
push
jne
lea
es
ljmp
mov
mov
scas
ja
mov
pop
inc
movl
enter
mov
mov
or
push
fwait
gs
mov
sub
mov
dec
mov
mov
out
mov
popa
ret
stos
imul
pop
or
xchg
in
mov
je
lock
mov
mov
jae
push
shlb
dec
ljmp
daa
dec
sbb
adc
imul
or
cmc
sub
mov
out
out
leave
jo
push
add
lods
push
mov
shr
or
addl
mov
inc
dec
cmpsl
pop
incl
and
lcall
gs
xor
push
test
fs
jge
jo
dec
test
xchg
inc
jne
hlt
in
scas
sbb
push
stos
or
mov
je,pt
in
jl
xchg
dec
mov
push
movsb
adc
popf
mov
imul
xchg
jb
in
cmp
push
movsb
adc
or
rorl
xor
movsb
popa
shl
mov
fiadds
mov
gs
fs
push
jmp
movsl
jecxz
push
in
out
ds
dec
mov
in
xor
repnz
fs
push
movsb
ds
cli
dec
inc
pop
pop
stos
fiaddl
inc
test
and
add
inc
inc
xor
out
inc
sbb
xchg
cld
out
dec
dec
lods
dec
inc
sti
in
jge
inc
aam
pslld
ja
gs
out
movsl
or
adcl
ljmp
in
xchg
jae
nop
cmpsl
sub
data16
pop
fisttpl
mov
add
and
pop
lods
ja
push
sub
test
pcmpeqd
pop
dec
loopne
imul
hlt
lret
jb
lahf
test
push
std
ret
xchg
push
and
inc
adc
fidivrs
push
jns
and
mov
popl
cmp
sub
mov
cltd
xchg
daa
js
data16
dec
mov
jp
lcall
cmpsl
andl
adc
ds
sbb
dec
sahf
xchg
pop
adc
rcrb
pop
mov
xchg
mov
repnz
cmc
pop
add
ss
mov
jmp
out
jmp
fcompl
out
call
or
and
adc
lret
dec
xchg
pop
pop
mov
xor
lds
adc
fwait
inc
aam
shrl
push
pop
es
fidivl
fsubl
jp
xchg
xrelease
out
nop
outsb
iret
jns
lods
push
mov
or
loopne
repz
aad
addr16
clc
leave
or
sub
mov
stos
jb
vmwrite
or
inc
pop
jae
pop
pop
fnstsw
aaa
popf
mov
cmp
xchg
hlt
push
dec
sahf
dec
xchg
cmpsl
adc
daa
or
push
fwait
sub
add
int
xchg
sbb
into
orb
xor
rorb
mov
pop
inc
rorl
in
add
into
pop
mov
mov
ds
js
sbb
std
adc
pop
in
rclb
dec
jge
xor
outsb
xchg
ds
nop
movsl
dec
lods
hlt
mov
ss
adc
repnz
cmc
push
cmc
subl
jp
sbb
ret
pop
jmp
arpl
rcr
push
jl
movsl
push
pop
xor
cld
xor
mov
mov
inc
or
je
std
cmp
out
dec
lock
out
pushf
aad
xchg
add
add
push
icebp
bound
xor
xchg
mov
push
or
and
sbbb
out
adc
out
push
mov
es
out
adc
rclb
push
icebp
lods
add
pop
popf
mov
jno
lods
cs
insb
mov
inc
lea
test
out
cmp
test
mov
sbb
and
inc
and
push
pop
dec
mov
add
xor
iret
add
jns
movsl
cmpsb
push
adc
sub
cmp
fnstenv
fs
dec
sub
inc
das
repnz
mov
sub
cltd
push
pop
rcrl
sbbb
leave
insl
inc
jne
push
or
repz
jmp
jns
aad
into
sahf
and
js
dec
sub
jp
dec
jo
cmpsl
jb
xor
rcrl
cwtl
push
inc
aaa
jo
iret
imul
push
sahf
cmpsl
jl
ret
out
aam
fs
in
add
out
or
jg
aam
pop
or
pusha
cmp
shlb
jecxz
push
fnstsw
frstor
mov
and
mov
flds
jnp
lods
fistl
push
xorb
xor
movsl
adc
lock
fistpl
test
push
sub
push
int3
xchg
insb
lods
mov
cld
fcomp
mov
js
in
neg
mov
jno
mov
in
mov
and
dec
das
int
fsts
sub
cmp
adc
aaa
xchg
dec
fimull
lahf
xchg
mov
adc
jg
cmpl
sbb
arpl
push
cmp
push
xchg
xor
cmp
dec
popf
pop
mov
std
lods
xor
push
cmpsb
jp
ljmp
call
lods
mov
mov
push
es
pop
inc
hlt
mov
test
ds
xor
mov
aam
adc
outsl
or
mov
das
enter
sbb
gs
lahf
inc
dec
push
std
fldt
movsl
ret
inc
adc
es
enter
in
rolb
xchg
dec
inc
subb
cmp
out
fsubs
lcall
inc
rorl
or
sbb
jbe
dec
adc
mov
cmp
mov
adc
jle
or
pop
and
cmpl
cmpsl
xchg
ret
jnp
std
jae
xor
popa
jae
test
les
cltd
lock
imul
sub
push
sub
in
addb
cmp
in
dec
jae
jecxz
mov
jle
cmpsl
outsb
es
movsb
stos
and
leave
add
cmpsb
std
or
push
or
mov
mov
push
or
xlat
jmp
push
pop
inc
and
cli
mov
out
jbe
and
xor
and
push
cmpsl
cmp
adc
popf
xchg
ljmp
cli
popf
orl
je
ljmp
xchg
cmp
shr
adc
ss
insl
stos
loope
pop
add
jge
jo
sub
or
xor
roll
stos
push
push
jmp
mov
adcb
cli
clc
enter
or
push
xchg
rclb
call
lods
enter
sbb
loop
add
int3
out
ds
xor
xor
mov
loop
sti
je
cmp
xchg
movsl
xchg
xor
adc
cmp
shrl
or
and
test
sbb
push
in
mov
or
xchg
add
mov
push
inc
xlat
mov
pushf
xor
cmpsb
push
mov
scas
xchg
push
adc
inc
dec
cmp
les
jae
add
sar
dec
mov
cltd
push
xchg
jne
fiadds
sub
int3
ljmp
or
jnp
out
test
push
sbb
pop
push
out
lods
arpl
push
aaa
adc
movsb
ss
and
pop
ja
xor
or
inc
mov
std
dec
jns
outsl
cmp
pusha
dec
into
xchg
push
or
hlt
jno
xchg
nop
int3
cmpsb
iret
xor
outsb
pop
push
sbb
outsb
scas
int
clc
mov
leave
jecxz
mov
and
sahf
ljmp
xor
ss
pop
pop
cmp
filds
jmp
daa
adc
cltd
push
adc
gs
jbe
test
adc
rcll
ret
jg
test
hlt
mov
cmpsb
mov
sub
mov
lret
pop
fisubrl
js
adc
cmp
mov
icebp
adcb
push
sbb
xor
fnstsw
shll
mov
inc
add
scas
and
cltd
frstor
lds
fcoml
mov
mov
xchg
sti
dec
pop
dec
add
nop
cltd
xchg
jge
aad
adc
push
addr16
out
jg
add
xchg
cmp
add
imul
mov
or
push
jecxz
incl
rol
mov
push
mov
dec
push
out
pop
push
mov
inc
repz
jp
mov
out
adc
sbb
add
les
adc
daa
xchg
cmc
cld
sbb
push
cmpsl
xor
add
dec
in
int
adc
in
shlb
bound
popf
testl
sub
scas
popa
mov
push
adc
jle
pushf
push
jno
xchg
dec
lods
jo
mov
or
pop
or
cmp
lods
outsl
lret
adc
std
fistps
mov
mov
test
add
sbb
xchg
add
aaa
cld
jae
loope
jbe
xchg
cli
mov
jp
sbb
jl
mov
pop
daa
test
jns
and
mov
pop
xor
test
fsts
cli
stos
int3
fcmovne
adc
pop
outsb
xchg
aaa
ret
and
mull
pushf
jbe
hlt
sub
and
dec
xlat
sbb
icebp
adc
scas
mov
jns
out
jmp
pop
lea
ljmp
cwtl
jns
fadds
imul
dec
out
sbb
push
fs
loop
aas
xchg
loope
push
mov
cmp
enter
dec
sete
add
jbe
sti
mov
dec
mov
pop
jnp
dec
dec
ret
cmpsl
imul
rolb
pop
std
cmc
mov
and
pop
sbb
js
and
xor
fwait
cmp
js
xor
adc
movsb
jne
popa
jg
or
les
int
in
cwtl
sahf
pop
inc
xchg
jl
outsl
cltd
jo
data16
stos
sub
pop
flds
xchg
jle
repnz
sbb
or
shll
or
mov
sahf
sbb
inc
aaa
xor
xor
insb
iret
mov
nop
sub
xor
loopne
pop
aas
mov
xor
and
sbb
es
inc
mov
inc
xlat
adc
mov
xchg
and
or
clc
inc
das
int3
xchg
fisttps
mulb
cmp
fstps
dec
push
push
sbb
or
pop
repz
outsl
push
or
jnp
fistl
mov
push
outsl
dec
sbb
push
xor
aas
mov
mov
cmp
test
hlt
xchg
mov
fdiv
stos
push
or
lods
add
rorl
sarb
shll
xchg
addb
cmp
adc
mov
scas
into
aas
jl
add
das
xchg
cmp
int3
xchg
and
xchg
mov
insb
xlat
jne
jg
cmc
xchg
cwtl
push
loop
sbb
fbld
xor
cmp
fldt
lods
or
test
mov
adc
popl
ret
inc
pop
and
xchg
sub
push
cli
outsb
loope
cmpl
popa
fisubrl
cmp
push
aad
and
inc
imul
xor
xchg
lcall
hlt
cmp
mov
cwtl
xlat
jle
test
push
mov
fcoml
pop
fwait
nop
cmpsl
sub
inc
pop
pop
sbb
sbb
adc
leave
fildl
inc
adc
push
popf
test
shll
test
push
add
adc
f2xm1
lret
test
out
mov
mulb
pushf
push
sbb
imul
imul
dec
pop
pop
or
loopne
loopne
out
js,pt
and
imull
mov
inc
shl
pop
sbb
out
sub
out
and
int
pop
cmp
xor
stos
fwait
and
cmc
out
cmp
cmpsb
cmp
xlat
and
xchg
movsl
inc
out
mov
sub
jp
rcrl
jg
push
imul
and
jae
add
gs
cmc
shll
and
and
mov
rcl
js,pn
sbb
xor
insl
jo
nop
mov
out
repnz
push
rcrb
dec
xchg
sub
mov
lock
adc
xlat
fsubrl
or
mov
mov
pop
dec
fsubrl
lods
xor
lret
cs
sbb
scas
rolb
repnz
mov
xchg
repz
cmp
out
inc
xchg
popf
int
js
cmp
aam
add
or
das
pop
add
and
and
push
xchg
out
xlat
js
test
call
xor
nop
stos
dec
cmp
fidivs
sar
cmp
pop
mov
pop
test
push
jne
sub
movsb
popa
jge
add
ja
sbb
dec
cs
pushf
jecxz
rcrb
call
jg
sbb
fwait
pop
loope
jge
cmp
or
inc
jo
scas
mov
mov
pop
inc
pop
sbb
xchg
pop
or
daa
adc
xchg
or
xchg
rolb
sbb
jae
pop
xchg
push
sub
pop
push
and
push
or
or
roll
bound
cwtl
shrb
mov
cmp
nop
mov
xor
outsb
mov
imul
adc
pusha
cmp
outsb
mov
pop
adc
test
loop
clc
fstp
xchg
rcrb
int3
fnstcw
dec
imul
mov
lods
in
andb
mov
xorb
das
inc
add
hlt
icebp
call
lcall
add
cmp
sub
mov
jge
or
xchg
out
xchg
sti
dec
lret
ss
loope
pop
mov
js
jno
mov
ss
or
fdivp
cmc
lret
push
add
ret
insb
lds
jp
push
aam
inc
push
pusha
inc
mov
out
shlb
or
sbb
imul
push
aas
sbb
mov
inc
cmp
push
mov
clc
stos
xchg
aaa
jbe
jg
xor
push
fwait
aaa
xchg
scas
hlt
in
sbb
cmpsb
or
cmpsl
jmp
pop
jmp
inc
pop
push
data16
mov
or
popf
mov
dec
lret
mov
pop
pushf
fdivrp
xor
int3
push
ss
std
in
in
mov
or
paddsw
lcall
movsl
xchg
push
movsl
xor
scas
ja
pop
push
int
add
cs
ret
orl
xor
out
push
add
sbb
rorb
fimuls
xchg
mov
int
sub
xor
in
fisubl
sbb
cmpsl
jmpw
clc
pushf
pushf
popf
loope
fimuls
in
mov
sub
dec
jo
jnp
fisubs
lods
cmc
clc
adc
jo
insl
test
insb
jge
inc
add
sbb
dec
fimuls
jno
cmp
popf
xor
mov
lsl
sub
mov
stc
adc
cmpsb
and
mov
jno
sub
movsb
mov
mov
adc
out
aad
faddl
pop
dec
push
sbb
test
xchg
cmp
cmp
sub
inc
cltd
and
sbb
enter
xchg
pop
or
cmp
push
inc
insb
pop
dec
xlat
into
mov
sub
adc
out
mov
arpl
cli
pushf
jecxz
cmp
addr16
movsb
or
lret
int
jnp
jno
cmp
scas
gs
mov
sarb
pop
sbb
decb
sbb
out
pop
cmc
dec
pop
mov
fsqrt
push
jl
rcrl
sti
and
xchg
in
add
adc
outsb
push
ss
movsl
jp
mov
adc
jns
inc
outsl
push
shll
dec
jle
xchg
mov
daa
xor
cmp
popa
jecxz
pop
repnz
dec
jns
mov
jge
loope
xor
lcall
dec
mov
cmp
jge
fdivr
pop
cmc
mov
and
fidivrl
sti
push
sti
imul
mov
sub
rclb
test
adc
mov
outsb
cwtl
pop
mov
cwtl
loop
dec
push
push
mov
xor
movsl
loopne
mov
popa
aaa
jl
mov
out
xor
sarb
pop
clc
inc
xchg
stc
mov
out
xor
jns
test
inc
sbb
pop
iret
cmp
popa
inc
ds
lods
xchg
lret
xchg
xor
cmp
xor
popa
imul
dec
pop
movsb
shll
inc
cmc
add
push
mov
xchg
cltd
pop
mov
mov
jecxz
outsb
dec
adc
mov
mov
inc
jle
mov
adc
aam
nop
xchg
enter
ss
lds
cld
loopne
pushf
stc
sub
orl
rcll
lea
sbb
out
push
mov
jb
std
into
mov
int3
mov
sbb
sbb
out
jecxz
psubd
and
in
mov
add
pop
rorl
es
push
xchg
int
notb
lods
sub
mov
mov
jl
xor
out
stc
add
in
rorb
push
cli
sbb
and
mov
ror
cltd
rcll
pop
ds
test
add
sub
in
jge
hlt
pusha
outsl
inc
daa
rcll
imul
or
shlb
in
ret
cmp
mov
sub
cmp
mov
pop
cwtl
and
repz
mov
inc
pop
fcmovb
jne
inc
popf
push
shlb
mov
mov
sub
shr
outsb
insb
in
lret
mov
fldl
in
popa
pop
das
in
push
mov
jle
push
gs
outsl
xchg
lret
pop
inc
outsl
dec
pusha
jmp
sub
pop
aas
inc
xchg
add
xor
push
gs
mov
jmp
repnz
lods
mov
addr16
jns
add
jmp
xchg
vphaddudq
adc
push
dec
fldcw
or
push
sub
aas
mov
sarl
imul
out
pushf
dec
dec
out
int
out
loopne
cmp
sahf
jl
pop
popf
stc
cltd
pop
sbb
sbb
add
lcall
mov
roll
mov
push
lea
or
insl
sbb
push
or
mov
add
test
pop
mov
xchg
push
mov
sti
ds
out
cltd
mov
jle
adc
lods
adc
xchg
sahf
hlt
les
out
mov
std
mov
jecxz
mov
arpl
push
cmp
mov
ds
iret
mov
cmp
lods
add
add
jne
cmpsb
mov
flds
jg
push
sar
addb
jmp
rol
xor
mov
push
xchg
jbe
sbb
jae
clc
cli
in
dec
mov
into
test
lods
dec
mov
fistpll
cmp
out
add
loope
cld
nop
cwtl
repz
fcoml
js
mov
ljmp
adc
xchg
dec
sti
fsubrs
sbb
and
sub
sbb
sahf
les
fsub
fwait
adc
push
pop
pop
xor
dec
dec
aaa
and
push
cmp
inc
cltd
fsubs
mov
inc
popf
outsb
cmpl
jmp
add
mov
repz
pop
inc
push
das
jb
or
add
dec
jns
cmp
jmp
fldcw
push
test
ljmp
jecxz,pt
in
imul
jle
mov
sub
les
xchg
xor
mov
jp
into
xchg
xchg
pop
stos
or
stc
mov
imul
dec
popa
rcll
mov
adc
imulb
in
ret
xchg
bound
jle,pt
adc
lock
addr16
xchg
and
ljmp
cmp
add
fdivl
in
push
lds
iret
inc
jge
push
xchg
pop
cltd
repz
dec
or
shrb
out
int
ss
sbb
jmp
inc
cwtl
inc
inc
fdivrs
xor
dec
push
loope
movsb
jno
mov
xor
std
iret
or
dec
stc
and
stos
sbb
jp
ret
cs
ds
dec
inc
adc
lcall
ret
adc
and
mov
jp
sub
mov
jle,pn
addl
mov
imul
adc
mov
das
or
mov
mov
loop
rorb
push
shl
push
xchg
sub
and
icebp
mov
in
sub
xor
sbb
fdiv
jmp
cli
shrl
push
or
push
pop
add
mov
dec
or
mov
xchg
mov
rcl
sub
xchg
aas
inc
sub
popf
pop
cmp
jnp
neg
je
pop
push
fs
add
push
mov
stc
pop
sti
cmovs
xchg
test
test
icebp
cwtl
mov
mov
adc
mov
xchg
adc
ror
dec
das
jge
inc
or
push
cmp
mov
out
pop
push
sbb
repnz
movsb
fldcw
adc
and
pop
push
repnz
mov
pusha
cltd
dec
lret
cmp
in
jb
xchg
jg
and
xchg
and
mov
sbb
xchg
ja
psrad
out
addb
inc
push
push
test
outsl
js
das
xor
push
rcrb
push
repnz
cli
cmp
les
les
cmpsl
js
mov
imul
mov
xchg
mov
out
xchg
mov
aad
fimuls
frstor
ss
es
xor
imul
out
lret
push
and
dec
xchg
movsl
push
loope
mov
repz
pop
shrl
test
fisttps
mov
arpl
mov
or
int
xchg
or
mov
ret
add
dec
icebp
pop
inc
outsb
pop
lcall
dec
or
lcall
and
push
cmpsb
lahf
inc
test
lock
jl
icebp
jns
test
call
sbb
inc
fdivr
decb
mov
hlt
jmp
inc
mov
fldcw
cltd
inc
xchg
fisttpl
repz
xor
aam
and
movsl
loopne
fnstenv
sub
cmp
add
pop
hlt
xor
addl
lcall
or
fistpll
or
pop
stos
lcall
punpckhwd
adc
mov
add
add
mov
cld
mov
dec
mov
push
test
movsb
lea
int
cmpsb
mov
mov
mov
push
dec
ds
stc
mov
ja
cmp
sub
pop
sbb
dec
ret
mov
and
pop
xor
lcall
cmp
mov
mov
incb
lea
adc
test
sub
inc
mov
xor
pop
jo
test
xchg
jb
pop
and
arpl
dec
fistps
es
push
sub
inc
test
les
sub
outsb
ret
scas
inc
xchg
fistpl
in
sbbb
inc
adc
jge
inc
xor
push
int3
scas
insb
mov
pop
inc
push
mov
div
mov
xor
in
lods
cmp
test
sub
in
or
or
or
fcmovbe
cmp
fmul
dec
cld
in
pop
mov
int
pop
hlt
testb
mov
sub
lret
iret
shll
jne
sbb
dec
sarb
test
cmp
push
out
testl
xchg
push
fcmovbe
jo
sub
or
or
outsb
inc
mov
push
rcr
ficoms
aaa
xchg
cmp
xorl
mov
pushl
fbstp
in
jmp
loop
mov
xor
add
fimuls
aas
sub
sti
cmp
es
lea
sub
test
xor
pop
insb
cld
out
cmp
cmp
sub
jp
rcrb
or
jae
test
or
jecxz
jecxz
and
xor
cmc
fidivs
adc
inc
jecxz
xchg
nop
fistpl
mov
pushf
add
fsubrs
lret
or
stos
push
mov
pop
inc
arpl
rcll
lock
lahf
fldt
fs
adc
jmp
and
push
test
mov
imul
jns
loop
nop
adc
xor
fsubrs
mov
adc
jle
aaa
push
jge
or
push
mov
int
and
jecxz
insb
push
scas
adc
mov
mov
mov
stos
mov
sbb
add
mov
mov
mov
je
shlb
cli
pop
jecxz
ds
mov
cmp
incb
mov
mov
inc
repz
or
lods
cmp
lret
mov
mov
mov
mov
fmull
dec
jb
and
mov
fidivs
sub
pusha
movsl
in
arpl
jmp
mov
fsubrl
pop
into
les
xor
sub
out
iret
mov
or
sub
inc
pop
lret
daa
fstpt
outsb
iret
sbb
adc
icebp
sub
pop
push
cmp
push
pusha
add
scas
into
in
jo
insl
pop
lahf
xchg
mov
dec
lret
xor
add
or
in
inc
cmpsl
mov
out
stc
jno
inc
out
int3
or
repnz
iret
pop
sub
into
sbb
mov
mov
jb
and
sarl
fsubrl
add
sub
xchg
bound
xor
jbe
push
mov
lea
out
pop
shrb
mov
adc
pop
imul
gs
mov
add
insl
sub
bound
xor
out
add
xchg
adc
sbb
sbb
stos
xor
repnz
sub
incb
xor
fnstenv
push
mov
add
lahf
mov
push
aam
xchg
cs
pop
mov
push
or
into
inc
sub
xchg
pop
ja
in
fistps
push
out
sub
mov
es
loopne
mov
negb
cmp
pop
inc
das
jo
roll
stos
cld
push
sub
hlt
mov
jns
and
in
add
lahf
lock
pop
xchg
rcrb
mov
xchg
popa
in
pop
pop
inc
jbe
jbe
xor
stos
jg
cwtl
fsub
and
xchg
addr16
mov
aam
mov
inc
mov
out
std
cmc
push
jb
fwait
aad
jmp
pop
push
outsl
scas
out
pop
push
scas
bound
mov
dec
xchg
icebp
fnstcw
pushf
dec
xor
mov
fistl
mulb
pop
in
and
mov
andnps
es
data16
cmp
push
mov
xchg
scas
or
mov
dec
inc
adc
or
jno
lea
sub
pop
test
inc
jb
lods
repnz
out
inc
das
lds
jge
mov
fcoml
jb
out
stos
daa
jno
cmp
push
push
inc
fwait
xor
and
xchg
iret
dec
mov
pop
inc
push
scas
mov
sbb
push
divl
mov
inc
icebp
sbb
int3
mov
je
adcl
sbb
mov
xor
push
sub
sbb
outsl
push
lods
xorl
and
jo
xchg
xchg
lcall
mov
and
adc
std
jb
sahf
repz
sbb
xchg
repz
push
dec
mov
popa
lods
push
jmp
push
sahf
inc
shr
mov
push
lock
in
sar
adc
int
push
out
mov
repz
and
cli
jbe
clc
in
int
shl
dec
orl
push
adc
fdiv
cltd
inc
insl
xchg
xor
push
mov
cmp
mov
jae
pop
mov
sarb
movsb
js
sbb
ret
stos
dec
lcall
pop
hlt
out
dec
fistpl
fcoml
test
or
sbb
rorb
inc
aad
sbb
lret
pop
scas
ret
cmp
mov
jge
jge
ret
icebp
arpl
inc
jb
int3
mov
jbe
fisubrs
aas
push
cld
pop
add
pop
jle
rorl
sub
add
in
leave
add
aaa
imul
push
mov
adc
xchg
sub
cmpsb
push
or
adc
sub
inc
aad
clc
mov
xchg
aam
test
movsb
out
pop
jae
ret
bound
cmc
stc
sub
subb
push
add
aam
sbb
add
test
fs
sub
ret
mov
ret
xchg
jbe
xor
cmp
sbb
rcrl
pushf
cmp
jne
jl
clc
arpl
jne
add
out
popa
adc
mov
shlb
mov
stos
fdivrs
inc
dec
mov
int3
outsl
das
repnz
xor
mov
pop
std
cwtl
bound
push
mov
xchg
adc
test
fistps
xchg
push
nop
mov
push
add
stc
loopne
lret
loop
jnp
insb
mov
clc
lods
jae
call
pop
mov
lea
sub
insb
lret
in
test
cmp
daa
hlt
dec
push
push
loopne
adc
sub
jnp
insl
stos
jecxz
ficomps
in
xchg
mov
sub
dec
movsl
sbb
add
jecxz
dec
mov
xchg
xor
loope
movsl
cmc
mov
ret
shrb
xchg
sbb
xlat
mov
xchg
into
adc
sti
dec
pop
pop
cmpsb
lahf
xchg
bound
adc
push
push
out
aam
in
std
xor
outsb
adc
adc
aaa
out
cmc
fbld
xchg
sbb
in
add
in
lods
mov
mov
stos
jg
sub
push
imul
pop
rcr
fs
push
dec
push
loopne
in
mov
cmpsb
mov
insb
dec
sub
loope
xchg
shll
iret
and
cmc
inc
je
aad
lds
jnp
test
lahf
sub
in
outsl
addr16
add
cmpsb
jbe
and
loopne
push
jmp
mov
dec
cmpsb
jb
adc
cmpsl
test
or
fstpt
les
cld
daa
cmp
sub
jl
push
sub
in
decb
push
rcl
aad
jmp
arpl
pop
and
mov
sbb
pushf
mov
hlt
adc
sahf
sti
inc
inc
aas
jmp
sub
mov
push
test
and
or
adc
rclb
enter
push
fbld
mov
push
fcmovne
int3
lods
je
mov
ret
xchg
or
mov
mov
xor
mov
xor
pop
mov
enter
loope
fimuls
bound
mov
loopne
sbb
inc
cmp
in
insb
jmp
icebp
mov
push
fistpl
loopne
jle
xor
xor
pop
jb
sub
scas
xor
jnp
push
lret
mov
lods
sbb
xor
cmp
jo
jns
inc
loope
jecxz
scas
xor
movsl
in
add
mov
mov
shlb
in
or
add
jns
hlt
es
jbe
adcb
and
pushl
loop
xchg
gs
ss
jmp
ret
jns
xor
xchg
bnd
xchg
xchg
mov
fldl
push
dec
xor
mov
fimuls
jmp
inc
mov
pop
cmp
push
in
pop
stos
outsl
cld
movsl
stos
mov
les
push
in
mov
insl
into
insb
incl
push
inc
scas
jae
ds
xor
cltd
lahf
dec
loop
cld
jbe
faddp
push
shlb
dec
adc
push
mov
mov
lds
ss
clc
jne
push
jmp
add
inc
or
js
mov
jb
fdivl
aaa
cmpsl
adc
lcall
in
and
mov
fistpll
sub
push
ss
add
cmp
repnz
pop
js
sub
mov
shr
cld
imul
dec
jle
inc
in
mov
leave
cld
mov
add
adc
repnz
mov
or
insl
pop
push
pushf
sbb
inc
pop
mov
ds
push
sbb
popf
andl
sti
jb
insb
xor
mov
aam
out
into
outsl
ljmp
push
or
push
push
int
xchg
mov
mov
bound
aad
loopne
mov
rorl
rclb
fcoml
std
or
add
je
xchg
shlb
mov
mov
xor
cmpsl
movsl
sub
lods
inc
cltd
xor
int3
pop
arpl
incl
mov
mov
xorb
loope,pn
jne
pop
inc
ror
xchg
inc
or
pop
push
push
adcb
out
xchg
cmp
pushf
mov
std
jmp
mov
sbb
aas
movsl
add
pushl
test
daa
dec
leave
std
sarb
inc
xor
enter
xchg
jo
jmp
lods
cmp
add
lahf
mov
ss
xor
or
cli
into
cltd
mov
data16
sub
inc
jle
inc
pop
fidivrs
andl
push
add
mov
mov
leave
dec
sarb
or
xchg
pop
out
sbb
lods
cmpsl
add
mov
arpl
push
pushf
push
dec
xor
cmp
mov
xchg
stos
or
and
jb
mov
ja
lahf
idivl
daa
lret
call
test
xor
ret
xorl
out
jp
sahf
clc
jmp
rolb
data16
orl
ret
gs
out
stos
data16
fiadds
int3
push
div
xor
cltd
and
pop
lret
lds
lcall
fstl
mov
mov
sbb
xchg
mov
mov
pop
into
mov
sub
lahf
or
out
inc
mov
test
ret
pop
mov
test
les
push
dec
sub
jge
bound
and
xor
sub
mov
sub
or
jmp
xor
or
xor
jb
popf
and
mov
or
inc
ret
loope
mov
stos
mov
or
ret
sub
cmp
adc
inc
sbb
cmp
mov
mov
sub
lds
out
jmp
push
cld
push
pop
jne
call
sub
mov
fnclex
push
fists
mov
iret
addb
test
cmpsl
inc
mov
jae
jge
mov
mov
pushf
push
sbb
test
add
jecxz
cmc
lods
ljmp
mov
pop
incl
cltd
enter
ret
sub
and
stc
fcompl
stos
addb
and
leave
add
int
jl
test
xchg
bound
inc
adcb
cmp
out
sbb
dec
cmc
imul
pop
scas
lret
dec
sub
mov
in
xor
mov
repz
pusha
pushl
popf
aam
pop
or
fsts
int3
fistl
pop
leave
jp
xchg
ret
inc
out
daa
sarb
sub
add
jle
mov
and
mov
pop
xchg
out
or
jae
xor
lods
enter
jns
add
mov
fistpll
mov
int
int
popa
mov
mull
or
xchg
lods
lds
insb
inc
repz
stc
ljmp
push
cli
or
jb
inc
adc
mov
test
xchg
fsubrs
mov
daa
push
pop
call
fwait
pushf
cmpsb
je
js
mov
and
xlat
cmpsb
sahf
or
pop
dec
xchg
jle
inc
sub
popa
iret
or
hlt
add
ret
push
call
add
push
push
xlat
mov
dec
sahf
cmc
xchg
adc
sub
push
insb
cmp
outsl
pop
fcoml
xor
lret
dec
xchg
js
inc
dec
sub
xor
insl
push
jecxz
std
lea
dec
sbb
xor
iret
fcomp
data16
fistl
inc
jmp
xchg
push
sahf
cmp
shll
pusha
adc
repnz
test
and
mov
add
pop
pop
aaa
movsb
data16
or
cmp
pop
xchg
fcompl
and
dec
jne
hlt
or
ret
mov
or
jle
sub
and
push
rorl
fs
mov
jne
lahf
xchg
mov
stc
push
test
outsb
in
rorb
jo
pop
mov
mov
scas
xchg
pushf
sarb
mov
mov
addr16
fcomi
insb
loope
enter
jbe
jbe
sbb
cmp
repnz
aam
popf
sahf
outsl
push
insb
decb
push
sub
xchg
arpl
or
data16
xchg
add
jl
adc
mov
xchg
adc
xorl
cmp
sarl
push
inc
xchg
arpl
xor
add
dec
xor
stc
and
inc
bndstx
xchg
push
loope
push
fisubs
fcompl
push
sbb
out
mov
rolb
cs
xlat
pop
mov
bound
mov
fidivs
movsl
je
inc
adc
xorl
mov
inc
out
in
sub
sub
in
popa
mov
xor
scas
cmpsl
imul
fistl
inc
imull
jnp
push
pop
and
cmp
out
push
mov
xor
ss
movsl
cmp
cmc
inc
cli
out
push
call
pop
xor
sti
pop
push
xchg
push
movb
out
mov
sbb
sub
ret
sbb
test
jmp
push
jl
fiadds
jae
lret
cmpsb
push
scas
idivl
lahf
mov
jg
xor
or
addr16
and
or
jmp
jl
xsaves
xor
das
iret
sub
out
push
test
gs
lret
xor
cmp
daa
loopne
adc
in
pop
movsb
jbe
dec
jmp
test
jae
inc
daa
push
std
icebp
lret
lock
xchg
stos
pop
test
test
jge
sti
xor
imul
or
mov
in
push
fildl
pop
inc
fldl
pop
and
adc
lret
cmc
xor
add
cmp
cmp
jecxz
cmc
mov
insb
or
pushf
mov
rcll
mov
rclb
and
lcall
cmp
add
pop
sub
push
repnz
inc
ror
xchg
pop
push
sub
pop
cmp
repnz
mov
stos
mov
std
push
andb
mov
push
mov
leave
rcr
sub
sti
xor
adc
test
and
pop
call
enter
std
pop
fsts
adc
out
xchg
add
pop
and
shll
outsb
sbb
fwait
jb
xor
loope
push
push
push
cmp
mov
cmpsl
test
mov
mov
lahf
repz
push
or
into
mov
int
imul
push
xchg
scas
in
rcll
test
js
scas
mov
rorl
mov
aaa
ret
or
mov
sbb
ja
in
or
div
inc
ds
arpl
js
adc
mov
push
out
in
cmp
sub
or
adc
mov
outsb
imul
sti
lods
shlb
mov
fldl
andl
mov
pusha
jle
das
pushf
cmp
jnp
pusha
mov
and
ror
fdivs
inc
int
les
ja
movl
xchg
cmpsb
jns
movsl
outsb
arpl
xchg
xchg
dec
push
imul
in
mov
or
push
les
lods
mov
jnp
aas
stos
inc
test
pop
push
sub
push
mov
cmp
negb
mov
je
mov
dec
dec
mov
cld
push
dec
mov
fsts
xchg
test
and
sbb
xchg
sti
arpl
xchg
jmp
iret
mov
mov
xchg
inc
mov
es
xchg
inc
jo
sub
imull
hlt
xlat
mov
insl
inc
cmp
jge
js
and
cmc
or
and
jmp
mov
imul
xorb
out
jne
jmp
aaa
push
mov
stos
dec
jge
sbb
aam
test
and
and
and
cmp
rorb
and
fwait
lcall
pop
mov
push
mov
test
sub
push
jb
arpl
xchg
nop
ficompl
sbb
push
jp
cmp
mov
insl
jp
test
test
lcall
aas
jbe
jecxz
or
addr16
push
in
in
sti
rcll
call
hlt
xlat
or
int
push
imull
mov
xchg
cmc
mov
xor
gs
pop
pusha
aam
xor
inc
out
out
sub
lods
arpl
rcll
dec
imul
and
dec
mov
xor
testl
mov
dec
sbb
adc
int3
lahf
mov
imul
cwtl
iret
cmpsb
sbb
cltd
testl
cwtl
adc
jp
sti
rcll
mov
gs
sub
enter
cld
ret
test
lods
out
xor
xchg
scas
jnp
cmp
shlb
into
mov
mov
and
stos
cs
test
push
popa
jg
cmp
ror
into
stos
push
pushl
mov
repz
shr
mov
or
fistps
mov
adc
inc
pop
loope
xor
ficomps
stos
push
ja
and
dec
popf
jle
lret
aaa
adc
lahf
ja
add
lret
mov
filds
repnz
sbb
stc
gs
cmp
loopne
and
mov
xor
in
push
push
mov
out
push
sbb
inc
gs
dec
add
pop
mov
es
insl
ljmp
loope
shrl
add
repnz
imulb
dec
add
jecxz
inc
add
mov
dec
arpl
add
cmp
mov
stos
xor
aas
in
push
daa
add
lods
pop
cmp
subb
out
push
daa
lcall
xchg
jp
inc
or
inc
add
hlt
enter
push
mov
in
daa
and
cmc
jle
add
stos
out
ja
inc
inc
mov
movsl
test
cwtl
jmp
push
and
push
stos
lret
adc
outsl
aam
and
push
scas
cmp
pop
repz
jno
les
adc
mov
sahf
scas
dec
push
or
inc
fs
lea
ret
or
cmpxchg
jno
dec
cmp
and
mov
out
outsl
xor
call
fadd
aam
jae
sbbl
adc
lcall
in
dec
cmp
lret
add
fwait
jae
mov
jmp
cmpsl
jnp
dec
aam
cwtl
scas
lods
xchg
je
mov
or
rcrl
cmp
test
cmp
cmp
add
rcrb
pop
push
fisttpl
xchg
daa
push
loope
or
jmp
xchg
push
and
fcomp
mov
stos
pushf
push
cmp
addr16
cmp
mov
mov
push
inc
data16
xchg
hlt
in
dec
push
cwtl
pop
dec
dec
ljmp
mov
push
aam
mov
sub
mov
mov
xor
add
int
shl
mov
jbe
insl
pop
xlat
les
and
cmp
mov
bound
mov
gs
stos
xchg
ficoml
sbb
push
jge
and
scas
hlt
je
sbb
add
aad
in
push
xor
subb
in
inc
sahf
or
mov
lea
aad
adc
sub
pop
insb
pop
jno
pop
mov
in
or
mov
add
icebp
mov
lea
popa
scas
fs
sbb
or
outsb
add
in
and
dec
sbb
test
lods
testb
dec
push
sbb
jmp
ficompl
dec
xchg
imul
arpl
hlt
pop
dec
sbb
pop
ds
xchg
jbe
and
inc
aam
push
push
mov
ds
mov
sbb
jmp
jmp
jmp
insl
dec
sub
xchg
je
jne
mov
lock
lret
cwtl
xchg
sbb
daa
pop
icebp
add
jne
test
pcmpeqd
test
pop
repnz
adc
or
es
xchg
pop
lahf
jnp
out
cmp
call
or
cld
aad
cmpsb
dec
leave
ror
xchg
pop
out
mov
adc
push
or
js
xor
fwait
xchg
jnp
mov
jle
or
nop
lret
sub
sti
fadds
ds
and
negl
cli
test
cmc
ret
jb
pop
push
es
push
aad
enter
cli
push
rol
shlb
sub
popa
pop
loop
fists
sbb
sbb
das
jno
cltd
sub
cmp
fucom
sbb
mov
push
clc
aaa
xchg
out
fidivrl
in
hlt
ljmp
in
mov
cmpsl
les
or
sbb
stc
mov
lods
xor
iret
or
mov
sbb
push
idivb
mov
sub
loopne
inc
add
push
pop
xchg
dec
dec
jecxz
pushf
outsb
sub
imul
push
mov
pop
push
mov
mov
aad
mov
mov
adc
xorl
sub
jmp
imul
roll
test
call
jnp
xchg
xor
sub
xor
mov
sbb
fwait
into
sub
xchg
add
lds
adc
movsb
cmpsl
add
xchg
lock
cmp
mov
int3
mov
adcl
insl
test
add
and
jg
test
in
push
aas
dec
mov
xchg
out
jns
rcl
pop
leave
popa
leave
and
lea
xor
push
adcl
shl
rol
inc
jmp
scas
repnz
pop
fdivrl
movsl
sbb
mov
lahf
push
clc
cmpsb
cs
xchg
mov
cmc
cld
adcl
repnz
lahf
aaa
and
mov
lret
inc
lock
jmp
fimull
jg
add
dec
xchg
jnp
pop
lret
rorl
mov
in
bound
shlb
add
lods
js
jae
add
lret
mov
xor
xchg
mov
insl
test
mov
add
adc
pushf
out
mov
cli
test
aam
sub
jmp
or
nop
in
xor
xor
mov
jo
push
jb
mov
and
int
mov
push
in
push
cmp
mov
aaa
jg
pop
xchg
cwtl
int3
adc
decb
xchg
aam
mov
outsb
fwait
shll
jg
mov
mov
mov
lds
ret
cmpsb
nop
leave
loop
pop
cli
cld
jmp
jle
pusha
xlat
add
data16
rorb
rcrb
popf
dec
push
test
pusha
inc
mov
loopne
cli
popf
aas
mov
and
jo
mov
test
pop
sbb
push
pop
test
jge
dec
call
test
sub
dec
shlb
xchg
lahf
stos
push
into
add
orb
push
mov
xchg
inc
clc
mov
mov
cmp
pop
jae
stos
and
mov
inc
shr
xor
movsl
stos
mov
xorb
mov
fs
jg
mov
lahf
sbb
outsb
clc
xchg
pop
lahf
lret
inc
dec
push
fwait
xlat
cmpsb
bnd
pop
dec
aas
inc
pop
adc
dec
inc
icebp
js
out
mov
fucomip
adc
or
xor
cmp
cmp
pop
cmp
orb
lock
or
mov
insb
mulb
sub
push
mov
mov
cld
in
out
sbb
stos
dec
xor
in
push
xor
jge
outsl
ss
xor
sbb
xor
pop
rorl
int3
stc
mov
cli
jno
cwtl
dec
add
cmpsl
or
repz
push
int
imul
inc
inc
stos
cmp
pusha
dec
fidivs
push
jmp
aam
inc
arpl
or
sub
testl
scas
hlt
and
aas
cmp
adc
pop
out
adc
dec
stos
lods
mov
mov
dec
idivl
inc
jge
pusha
roll
shrb
xor
es
mov
adc
mov
and
adc
cmp
imul
out
jbe
call
jns
push
dec
test
push
lods
adc
addb
xchg
arpl
mov
fnsave
sti
add
sub
adc
and
aas
call
sti
sub
dec
cmpsl
mov
and
lods
stc
dec
or
notl
jb
cltd
push
xlat
pop
push
insb
add
xchg
fmull
stos
mov
pop
xor
addr16
mov
add
test
push
jne
into
inc
xchg
mov
inc
icebp
aas
xchg
mov
popf
ja
jb
mov
ret
jp
xor
mov
pop
xchg
jo
xor
inc
gs
les
lock
sub
aaa
bound
mov
mov
in
add
lods
pop
xchg
xor
loopne
jmp
dec
sub
js
stc
mov
jl
inc
out
or
or
ljmp
jp
shll
add
cmc
or
mov
push
push
mov
fisubs
shlb
and
dec
add
sar
cs
daa
negb
mov
cmp
pusha
hlt
mov
negb
ja
sub
inc
imul
jnp
mov
pop
jmp
hlt
jl
pop
mov
push
xchg
pop
xor
call
les
dec
cmp
ljmp
outsl
movsl
cli
adc
sbb
sbb
inc
mov
add
dec
mov
inc
or
jge
push
fisubl
push
fidivrl
or
lret
in
test
insl
ret
stos
stc
outsl
sbb
fmul
mov
pop
sysenter
sahf
sbb
int
adc
in
test
cmpsb
outsb
jnp
xor
ss
mov
iret
cmp
mov
sbb
mov
lret
add
xor
dec
pmaxub
int
test
hlt
out
sub
loope
jecxz
push
pop
aad
lret
dec
pop
mov
cmp
pop
fnstenv
mov
jno
sbb
pop
xchg
mov
icebp
clc
fiaddl
dec
xchg
or
test
mov
adc
jno
pop
cmp
xor
inc
add
test
mov
mov
sub
inc
add
arpl
mov
outsl
xchg
lods
insl
cltd
add
insb
rclb
lds
jno
pop
adc
adc
and
mov
pushf
mov
sbb
sub
lcall
mov
jp
in
cmp
jmp
insb
test
or
cmp
mov
lcall
test
aas
ljmp
cs
cmp
ss
pop
mov
dec
rcrl
adc
hlt
subb
cmpsl
lcall
out
mul
notl
xchg
cmp
ljmp
push
inc
pop
or
imulb
dec
out
adc
test
loopne
arpl
inc
mov
mov
sbb
jmp
mov
and
sbb
xlat
cmpsl
dec
mov
les
pop
ret
sbbl
mov
popf
movsb
push
and
jmp
pop
sti
subb
sub
xlat
lods
xlat
in
jb
fmulp
mov
xor
enter
hlt
xchg
push
xor
xchg
sub
hlt
test
sub
xor
divb
rolb
test
leave
push
lcall
orb
mulb
mov
mov
test
mov
ss
pop
pop
cmpsb
mov
cmp
push
mov
hlt
pop
addb
test
push
ret
and
lcall
sbb
pop
popa
stc
movsb
flds
push
sbb
push
sbb
pop
xchg
mov
push
push
add
xor
call
lds
movsl
jo
clc
dec
sub
pop
push
js
xchg
mov
jmp
lret
fmull
scas
out
dec
xchg
jle
mov
jl
test
jne
jmp
dec
sub
fsts
push
and
into
pop
aad
push
pop
pop
xor
xchg
out
clc
mov
lret
mov
lock
cld
cld
adc
ret
outsb
cmc
sbb
mov
and
lea
mov
bt
sti
nop
jb
stc
sbb
and
and
ja
lahf
pop
sub
out
stos
fcompl
mov
repz
xor
and
and
mov
jbe
stos
imul
movsb
push
or
dec
in
lret
js
jns
mov
aam
push
mov
movsl
das
sar
jbe
rsm
mov
mov
push
dec
hlt
inc
and
add
dec
pop
jbe
mov
fcmovnb
in
mov
mov
lea
insl
cmpsb
rcr
pop
fldenv
in
push
mov
outsb
mov
sub
jne
lds
sbbl
sarl
mov
fdivl
fdivl
cmp
outsl
ja
popf
insl
push
roll
add
sbb
xchg
sbb
jns
pop
pop
xchg
notb
repnz
test
jp
fwait
les
mov
mov
jbe
testb
outsl
mov
xchg
push
mov
mov
pop
xchg
test
imul
movsb
jo
jb
out
out
add
sub
jns
xlat
sub
pop
adc
or
aam
dec
rolb
aaa
lea
cmp
das
test
sub
push
mov
mov
xor
push
loopne
int3
orb
outsl
pop
cmp
jp
popf
imul
mov
test
push
jb
inc
dec
or
push
jmp
pop
pop
mov
out
dec
xor
shrb
pop
roll
pop
mov
sbb
pop
sbb
lods
adcl
sahf
scas
in
orl
cmpb
aas
iret
loope
scas
bound
es
xor
test
mov
fadds
or
sbb
sbb
cmpsl
inc
jns
sbb
mov
testb
arpl
ret
imul
imul
repnz
cwtl
in
xchg
repnz
inc
pusha
pop
leave
xlat
jne
pop
cmpsl
or
inc
jb
dec
push
and
fsub
mov
outsb
test
mov
fmull
jmp
sbb
rcrb
data16
fs
out
sahf
cs
dec
dec
cmpl
jl
stc
mov
pop
mov
mov
dec
push
sti
pop
sub
add
push
icebp
cld
jmp
mov
cmp
cmp
test
sahf
js
cli
add
push
inc
or
push
inc
push
adc
push
pmuludq
in
xor
pop
aad
outsb
sbb
and
cld
sar
push
pop
popa
call
addl
push
int3
mov
test
pusha
sbb
stc
sbb
ret
mov
or
divl
call
inc
arpl
push
jno
dec
pop
daa
xor
hlt
jl
clc
jno
andl
push
out
jge
cmp
inc
adc
pushf
iret
and
bound
out
loope
pop
push
inc
lock
mov
inc
je
out
mov
pop
rolb
leave
std
mov
adcb
jnp
dec
sub
fwait
repz
pop
nop
inc
and
lods
addb
mov
leave
mov
inc
jg
aas
jp
mov
es
mov
negb
adc
mov
es
out
xor
into
cwtl
push
clc
out
add
aad
fadds
mov
jl
enter
pop
xchg
cmp
lret
repnz
add
sub
scas
push
dec
xchg
xor
mov
add
fildl
mov
test
sub
enter
mov
jbe
jne
pop
mov
cmp
iret
scas
jl
in
xchg
ret
mov
inc
jp
dec
xchg
outsl
stos
dec
sahf
xchg
cmpsb
outsl
and
jo
and
cmp
cmp
mov
gs
in
loopne
pop
pop
pop
fmuls
inc
cltd
jnp
fs
jle,pn
cwtl
add
subb
fisubrl
cltd
imul
mov
push
xor
ds
les
fistps
repz
fcompl
lret
sbb
jne
push
in
dec
dec
scas
sub
scas
xchg
mov
push
ja
sbb
xacquire
mov
jnp
dec
mov
mov
stos
and
mov
jo
mov
and
xor
adc
add
dec
pop
jns
mov
rclb
or
cmp
jno
incb
nop
push
dec
adc
lods
add
shll
movl
fs
inc
incl
add
xlat
sbb
out
cli
leave
inc
mov
int
lahf
xchg
sbb
jle
mov
jmp
leave
or
cld
inc
test
cs
xor
arpl
aas
fisttpll
xlat
jb
ljmp
stos
xchg
aaa
mov
sbb
sub
push
int
fistl
pop
lret
xor
cmc
fbld
mov
repnz
pop
aam
push
add
jge
pop
daa
pop
pop
cmp
adc
push
pop
pop
clc
add
or
push
stos
cmp
inc
divb
scas
sarl
enter
ds
js
loope
popa
push
pop
or
mov
pop
loopne
mov
inc
or
jmp
and
not
cmp
xchg
add
cmp
push
jne
cwtl
adc
push
leave
loop
les
leave
inc
mov
jmp
addr16
cld
fs
adc
cmp
in
test
fs
into
ds
cltd
loop
test
push
and
in
add
push
mov
jb
pop
sub
cmp
cmp
imulb
test
sub
pop
js
dec
cs
push
pop
dec
pushf
jae
xor
jmp
lahf
fidivs
imul
frstor
adcl
fnstenv
insb
ret
inc
pop
mov
in
add
repnz
lods
adc
and
adc
clc
ds
pop
imul
jmp
mov
test
or
xor
fs
inc
mul
mov
fnstenv
repz
sub
adc
and
aaa
or
sbb
popf
jl
sub
ja
xchg
jg
cmp
stos
xchg
mov
dec
test
ret
test
xor
testl
mov
mov
dec
test
aaa
xchg
cmp
ds
adc
sbb
push
sbb
push
xchg
test
cmp
popa
jp
outsl
adc
inc
out
in
mov
enter
mov
lock
adc
cmpsl
mov
xor
cmp
pusha
pop
and
call
sbb
aam
lds
faddp
mov
push
test
dec
sarb
lcall
dec
sub
movsl
loope
jae
stos
sbb
push
mov
cmp
ljmp
or
cmpsb
mov
adc
pop
add
and
inc
sti
dec
push
insl
test
mov
cld
cmp
push
add
cmp
mov
push
pop
sti
adc
rorb
xchg
fs
dec
xor
js
mov
xlat
or
out
pop
mov
or
inc
cmp
enter
jnp
fucomip
jmp
pop
sub
mov
ja
aad
cmpsl
sti
into
jmp
aaa
imul
loopne
xchg
mov
cmp
ret
xchg
mov
mov
ds
xor
xlat
push
adc
aaa
inc
int3
nop
sbb
pop
movsb
lcall
in
inc
adc
inc
dec
das
dec
or
pop
cmpb
cs
fabs
decb
xor
add
push
mov
adc
mov
aaa
cmp
out
mov
pushf
addb
out
bound
lret
mov
jp
sub
xor
mov
leave
or
mov
push
xchg
rorb
imul
and
scas
push
dec
testl
repnz
test
testl
xchg
enter
cmp
sbb
add
and
test
sti
js
xchg
push
scas
add
lret
loopne
and
push
in
jg
ds
addr16
scas
jnp
fisubrs
xor
adc
into
mov
shrl
jae
enter
fcomp
and
cs
mov
sub
pop
xchg
cmp
ds
or
popf
sti
jp
mov
aas
cmp
test
adc
movsb
gs
dec
xchg
fcomps
cmp
xor
push
nopl
nop
adc
mov
popa
pop
addr16
mov
jmp
in
daa
stos
arpl
popa
in
jmp
pop
cltd
ret
andl
add
int
xchg
cmc
shrl
scas
lret
xchg
arpl
mov
popa
and
cli
cmp
out
inc
notl
fsubr
sti
ss
movsl
lods
cwtl
sub
jne
pop
notl
lcall
outsb
xchg
sbb
push
or
call
fcmovnbe
mov
insl
xor
fistl
mov
and
idivl
xor
fildl
int3
mov
pop
cli
insl
mov
cmp
loopne
stos
pop
iret
mov
cmp
inc
scas
and
arpl
mov
sub
mov
cmc
loop
push
pop
dec
rcll
loop
dec
mov
scas
mov
in
sub
dec
dec
rorb
ljmp
addr16
xchg
jecxz
xchg
inc
lods
and
les
jns
pop
adcb
sahf
cmp
test
loope
xchg
aad
cltd
dec
test
fstp
cs
daa
popa
or
push
or
xor
pop
movsl
cli
jnp
in
dec
jl
test
outsb
pop
sbb
ret
test
and
lods
ljmp
cltd
mov
push
out
dec
cmpsb
xchg
mov
daa
dec
jl
adc
punpcklbw
push
or
adc
push
jns
ds
in
test
aaa
xchg
rol
lcall
jbe
cmpsb
cld
cld
pushf
mov
push
lret
mov
mov
lcall
sub
enter
cmp
dec
dec
std
out
gs
cmp
rcr
adc
cmp
aad
xchg
xor
mov
pusha
movsl
ret
sub
inc
rcl
adc
or
add
aam
sub
rcrb
sbb
fstpl
cmpsl
jns
push
xor
je
jge
outsb
mov
or
fstl
xor
jmp
ds
mov
mov
popf
inc
jmp
fbld
mov
sti
in
lret
or
jne
mov
mov
scas
sub
sbb
sub
sub
dec
push
outsl
popf
mov
pop
out
pop
inc
pop
lahf
mov
imul
sub
xchg
in
sub
mov
xor
sbb
pushw
std
fs
xchg
pushf
dec
mov
ljmp
out
push
add
inc
out
jne
cmpsl
out
mov
add
out
es
fisttps
jo
mov
fdivp
test
push
push
jo
loope
cltd
sti
ret
out
xor
mov
fsubrl
cmpl
pop
aam
xor
xor
mov
cs
dec
aad
cmpsl
in
jno
cli
and
push
das
and
mov
push
sar
out
pop
je
dec
fisubs
add
pop
push
or
pop
daa
mov
or
cltd
and
std
addr16
cmp
mov
inc
mov
mov
mov
pop
sbb
shl
cli
addl
fimuls
mov
imul
jmp
cli
fwait
sub
inc
sub
jb
mov
mov
fsts
mov
sub
mov
arpl
fs
leave
fldt
nop
lcall
inc
jb
dec
fists
or
pop
aad
pop
mov
ljmp
push
repnz
jae
push
cltd
push
insl
add
decb
xor
xor
das
loop
and
cli
lahf
sbb
xor
loop
mov
inc
adc
cmp
xlat
mov
loope
jnp
loopne
mov
pusha
pusha
pop
dec
pop
push
notb
jno
adc
mov
add
ficoml
in
mov
into
lret
sbb
stos
sbb
or
leave
pop
pop
cmp
xchg
pop
jbe
pop
add
int
lods
icebp
sbbl
push
aas
movsb
mov
xchg
push
sar
cmp
out
sub
mov
lahf
insl
jb
dec
inc
test
daa
pop
stos
pusha
aaa
sub
mov
popa
jnp
push
add
jecxz
sahf
es
imul
lahf
in
ret
or
sbb
cmp
jb
lods
adc
ret
in
mov
mov
lea
adc
mov
cmpsl
push
leave
adc
mov
or
in
jb
sub
mov
mov
scas
inc
fwait
push
adc
rcl
ljmp
ds
pop
rclb
jl
loopne
call
add
sbb
jge
and
sub
div
dec
ss
in
sub
aam
jne
rep
test
push
shl
je
xor
nop
aam
xchg
stc
dec
push
cmp
clc
sbb
add
daa
xchg
out
pop
mov
sbb
add
into
or
fiadds
sub
push
mov
cmp
adc
imul
jp
xchg
jo
loopne
ss
add
push
outsb
mov
adc
out
sub
pop
inc
dec
xchg
leave
xchg
hlt
xor
lret
xchg
adc
xorl
push
xchg
pop
out
pop
sub
clc
sahf
cltd
mov
push
ja
mov
cmp
and
and
addl
cmp
out
lcall
push
movsb
fcompl
mov
ds
scas
sub
mov
cmc
dec
or
lds
enter
pop
in
popa
div
sub
push
icebp
mull
and
sbb
cmp
cltd
jne
inc
lea
out
jmp
sub
loope
out
pusha
repz
repz
or
cmp
inc
cs
leave
rorb
mov
adc
bound
mov
adc
ret
adc
xchg
mov
scas
jecxz
out
gs
cltd
add
xor
lret
xor
test
jo
mov
cwtl
stos
xchg
mov
sahf
stc
adc
insb
adc
mov
pop
cmc
aad
mov
push
add
mov
mov
lock
cld
imul
test
stc
ja
xor
mov
sbb
sbb
mov
pop
mov
mov
ds
pop
loopne
adc
fbstp
adc
add
popf
push
jbe
mov
sbb
add
or
jnp
push
dec
push
sbb
pushl
sbbl
push
add
xor
xchg
in
inc
mov
pop
addr16
jns
in
sbb
test
ss
xor
inc
pop
les
dec
cli
fs
xchg
or
mov
ss
xchg
jecxz
push
xchg
sbb
movsb
js
sbb
mov
fidivl
or
xor
cmp
sub
fstpl
in
mov
fildl
mov
xor
insb
dec
xchg
aaa
dec
outsb
sarl
lret
push
lds
lahf
or
xlat
dec
or
pop
xchg
cmp
stc
mov
dec
xchg
sbb
cmc
dec
jle
cmpsb
xor
jbe
fsubr
adc
adc
push
xchg
aad
pop
cmpsb
add
and
dec
add
push
xor
std
push
push
test
cmp
mov
sbb
mov
jmp
fbld
jle
xchg
in
inc
adc
push
xchg
sub
mov
rcl
pop
out
and
sub
sbb
out
sbb
dec
repnz
pusha
xchg
mov
daa
je
cmp
outsl
loopne
shlb
sbb
sub
jecxz
je
popa
lds
sub
pop
in
cmp
inc
add
pusha
mov
xor
mov
shl
sbb
adcl
dec
cmc
mov
mov
dec
stc
or
add
xchg
xor
je
mov
mov
in
into
test
int3
cmp
dec
les
push
pop
lods
pop
rcll
xchg
mov
pop
loop
pop
cwtl
pop
mov
daa
fnstenv
pushf
aas
das
fwait
repz
sub
gs
mov
rcrb
push
or
dec
xchg
js
mov
stos
and
cmc
xchg
dec
leave
or
jnp
loop
pop
rorl
jo
mov
cwtl
out
mov
out
mov
cmpsb
mov
daa
mov
add
dec
aaa
push
mov
repnz
add
pop
cmpsb
lcall
and
and
mov
cmpsb
cltd
lods
xchg
jns
out
mov
hlt
add
je
dec
icebp
lcall
sbb
add
cmpsb
cmp
inc
push
leave
cmpl
out
sub
sbbl
and
fisttpll
dec
xchg
iret
or
stc
cmpsl
cmc
dec
jne
rcrl
adc
scas
ljmp
xlat
shlb
cmpsl
aas
loop
push
mov
adc
mov
es
popf
mov
into
fstpt
dec
jns
adc
mov
dec
inc
lret
jnp
and
nop
mov
adc
and
pop
mov
rorb
leave
add
push
xchg
inc
xor
add
call
lock
lret
pop
xchg
xor
pusha
aas
popf
or
add
aas
mov
mov
scas
les
pushf
movsl
cmp
icebp
fisttpll
fdiv
push
add
mov
cwtl
pop
iret
arpl
jmp
cmp
and
outsb
push
xchg
mov
xlat
xor
jge
icebp
cs
aad
mov
imul
inc
sbb
jmp
lea
mov
or
fsubl
push
push
push
cmp
ljmp
jge
insl
xchg
xchg
lea
add
jnp
in
in
arpl
repz
dec
mov
fnstcw
insl
xchg
out
and
sti
subb
jnp
in
mov
or
mov
fisubrs
mov
scas
loop
inc
rorb
mov
insl
push
mov
sbb
push
ja
mov
or
inc
mov
cmc
lock
mov
ljmp
and
xchg
inc
cmp
mov
mov
movsl
jl
ret
mov
lods
aaa
sarb
nop
dec
pop
xchg
insb
insb
mov
jmp
arpl
std
icebp
add
or
add
inc
ljmp
inc
lahf
xor
ret
aaa
jl
gs
jecxz
mov
in
out
leave
movsl
or
mov
mov
add
jle
in
or
and
out
mov
gs
jge
mov
adc
inc
aam
and
pop
fidivl
mov
mov
mov
jns
pop
cmp
paddsw
jnp
es
aam
cmp
mov
mov
sbb
imul
jge
sub
push
pop
inc
pop
test
sub
sti
xor
or
faddl
bnd
push
dec
pop
or
aad
cmc
cmpsb
xlat
jns
mov
sahf
imul
and
xchg
pop
cld
loopne
sbb
sub
cld
dec
mov
stos
hlt
pushf
xchg
roll
mov
xchg
sbb
cld
mov
jae
jns
fisubrl
fbld
negl
sti
inc
test
lret
rclb
adc
xor
jl
subl
jmp
jnp
ret
arpl
xor
xor
aaa
mov
leave
push
jno
mov
cli
mov
mov
cli
mov
in
dec
aas
mov
dec
pop
clc
adc
and
or
pop
gs
out
lock
push
jecxz
sbb
xor
inc
mov
push
and
out
es
lock
lret
mov
mov
sbb
mov
jnp
or
or
xchg
mov
out
sub
in
xor
in
dec
mov
dec
loop
cmp
jnp
ficompl
sub
lods
repnz
subl
sbbl
mov
pop
jns
sbb
test
sbb
popa
jae
sbbb
and
cmp
pop
shll
std
or
insl
pop
sbb
loope
in
mov
ret
testl
push
pop
or
pop
test
ds
dec
dec
jnp
imul
dec
xor
outsl
mov
mov
push
xor
jne
in
pop
inc
dec
pop
orl
cmp
mov
lods
test
xor
pusha
popa
mov
mov
js
pop
xor
call
aam
add
push
out
and
stc
dec
lods
mov
jl
ret
and
mov
jmp
in
mov
push
pop
icebp
je
inc
sbb
call
pop
pusha
and
xor
fwait
pop
jge
add
pop
mov
out
scas
adc
xchg
mov
mov
sbb
xor
or
jl
mov
cmpsb
mov
ljmp
dec
add
pusha
mov
movsb
jle
das
mov
mov
and
dec
imul
int
test
jae
xor
out
pop
cmpsb
outsb
add
add
in
cmp
ss
mov
lret
sti
mov
push
idivl
push
cmc
pushf
mov
add
push
sbb
push
xchg
xchg
push
jnp
sbb
testl
dec
xor
cmp
cmp
in
jl
ss
test
pop
sub
jo
dec
sub
aam
and
pushf
push
mov
fdivrs
je
into
in
adc
push
xor
in
iret
jle
mov
aaa
inc
xlat
mov
fisttpll
sub
jnp
lahf
pop
add
adc
lahf
inc
sbb
cmp
scas
repz
lods
outsl
or
inc
jmp
movsl
inc
bound
pop
dec
mov
add
xchg
mov
push
jne
icebp
inc
xor
popf
xchg
lea
sub
pop
call
movsl
jmp
jnp
lods
cli
sbb
stos
add
leave
mov
and
jbe
scas
inc
into
xor
mov
xchg
inc
call
fwait
int
adc
stos
adc
rolb
dec
push
cltd
imul
or
mov
out
jo
sarb
lcall
je
pop
mov
lea
or
mov
dec
pop
mov
in
cmp
mov
popf
xor
push
dec
pop
cmp
nop
mov
das
sbb
repz
push
fdivrp
aam
out
insb
mov
mov
xor
ljmp
push
call
sbb
mov
mov
cs
pushfw
fsts
adc
int
imul
lea
add
jl
pop
jne
movsl
sub
iret
aad
dec
clc
or
imul
add
or
in
decb
adc
cmpsb
cmp
fwait
cmp
push
lock
pop
xchg
xor
jb
ret
xor
push
sbb
mov
adc
insl
aam
jmp
push
in
outsb
jno
fildl
adc
jno
mov
das
push
andl
and
or
arpl
aam
fldenv
aaa
cld
imul
dec
aaa
scas
add
lods
insl
sbb
lea
dec
xchg
and
jmp
lock
test
sub
int
les
sub
icebp
mov
mov
lret
mov
sub
clc
push
push
test
enter
dec
jne
cwtl
mov
mov
push
scas
cmp
into
inc
xorb
cmp
mov
mov
adc
jno
out
xchg
push
xchg
mov
aam
adc
adc
test
jne
sub
push
cwtl
andb
cmp
add
mov
sbb
mov
dec
repz
push
dec
mov
mov
jle
lcall
jne
jmp
mov
inc
xchg
aad
mov
test
stos
mov
nopl
pushf
mov
std
sbb
pop
dec
cmpsl
fs
iret
daa
jnp
arpl
inc
mov
mov
inc
in
repz
les
ss
mov
cltd
push
repnz
pop
lar
push
sbb
adc
fldt
fmulp
lods
cmp
mov
fs
pop
loopne
push
mov
mov
xor
sti
and
test
cmpsb
xchg
xor
testb
ret
xor
dec
outsb
aas
dec
add
lds
jno
push
mov
sbbb
add
xor
push
test
or
rorl
sub
add
xor
movsb
in
mov
pop
sbb
movsb
jp
mov
mov
repz
xor
in
xchg
aad
push
mov
or
dec
insl
iret
adc
push
mov
ret
sub
cmp
mov
fcomi
lds
jne
lea
enter
and
fisubs
jg
mov
es
or
lret
add
sbbl
addr16
sub
push
loop
scas
inc
xor
scas
xor
dec
xchg
icebp
in
mov
add
les
icebp
fsub
test
lcall
mov
mov
sbb
sub
jae
pop
adc
test
std
adc
jg
sahf
adc
inc
frndint
push
xchg
mov
dec
cmp
scas
dec
dec
test
sahf
jae
cltd
cmp
sub
imul
xchg
call
add
fwait
jle
sbb
loope
orb
push
aad
xchg
push
and
icebp
es
and
mov
loopne
lea
fs
push
or
or
sbb
fnsave
jbe
mov
pop
ss
mov
sub
lock
in
jnp
jle
mov
sbb
mov
cmp
frstor
into
hlt
das
sbb
dec
push
nop
cmp
sahf
xchg
cwtl
mov
fbstp
repz
cmc
mov
les
rcrb
cltd
dec
dec
sub
mov
in
jae
mov
nop
jge
pop
cltd
dec
mov
popf
test
fisubl
fs
loopne
push
test
movsl
mov
dec
repz
loope
aaa
sub
or
or
mov
jp
sbb
or
test
dec
and
out
adc
cmc
and
inc
push
dec
loop
jne
mov
xchg
mov
fsts
fdivl
addr16
push
sarb
adc
movsb
test
pop
ret
lahf
scas
lds
add
add
cmp
imul
sbb
mov
pop
int
faddl
pushf
mov
adc
ljmp
mov
lcall
mov
jo
ss
add
pop
loop
imul
repz
jns
pusha
mov
cmp
and
adc
push
lea
xchg
pop
or
adc
mov
jae
je
pusha
pop
mov
xor
jns
scas
lea
fcoml
mov
mov
fxtract
or
mov
jge
stos
test
not
fdiv
mov
and
outsl
sti
cmp
jmp
test
enter
loope
loopne
cmc
xchg
lods
icebp
int3
inc
out
aaa
push
mov
shrl
or
dec
pop
cmp
push
add
fistpl
xor
jg
and
dec
test
fstpt
xchg
dec
lret
jmp
inc
mov
dec
xorl
xor
es
lock
mov
push
mov
inc
outsb
imul
mov
outsb
test
add
test
add
je
mov
inc
sti
adc
aaa
push
mov
enter
loope
sbb
pop
mov
dec
sub
mulb
xchg
jbe
mov
inc
sub
stos
and
inc
pop
divl
sbbb
inc
inc
and
lcall
das
mov
add
mov
sub
scas
pop
sub
mov
cltd
ja
pop
movsl
pop
int3
push
imul
jmp
pop
int
mov
neg
sub
lock
xchg
inc
out
cmp
shrl
loope
add
ret
scas
sub
shll
jecxz
xchg
cmc
sbb
sarl
mov
es
fs
mov
pop
push
mov
mov
negb
dec
dec
inc
push
mov
inc
or
jne
push
dec
mov
mov
in
mov
dec
push
xlat
push
sub
les
cmp
mov
dec
pop
mov
repnz
test
mov
jnp
push
scas
outsb
addr16
dec
and
ljmp
xchg
shll
and
je
push
iret
stos
aam
test
and
and
jle
ss
jb
push
mov
fidivs
sub
fstps
lahf
adc
mov
loope
dec
dec
cmp
mov
push
das
es
xchg
or
jecxz
int
bound
push
xor
xor
mov
pop
ds
imul
test
jbe
pop
pop
dec
repnz
sbb
ds
jle
repz
sub
loopne
fsubl
out
cmc
pop
mov
call
outsb
pop
sub
nop
inc
mov
jno
aaa
push
and
pop
pop
sbb
jns
sub
sahf
jae
sub
push
fldl
and
cmp
push
mov
jge
mov
lahf
push
adc
jo
mov
and
mov
imul
popf
and
jp
notl
out
adc
jnp
cld
pop
fistpl
mov
fimull
nop
pop
daa
mov
es
aam
cwtl
jne
dec
scas
push
ret
jmp
xchg
fimull
lods
jp
adc
xor
jo
and
dec
mov
jno
out
push
lds
push
sti
mov
repz
fwait
addr16
pop
pop
scas
rcrl
ret
sbb
push
push
pop
xor
xchg
and
movaps
inc
sub
cmp
int
ret
cmc
xor
fs
sub
out
in
add
cltd
jnp
and
xchg
cmp
pop
add
sub
cwtl
jle
cwtl
cmp
dec
mov
pop
or
mov
testb
xchg
aad
sar
and
int3
jl
aam
clc
add
in
xor
jmp
mov
sub
inc
or
imul
sti
roll
jne
aad
lds
lret
fldcw
inc
in
out
test
into
mov
dec
xchg
lahf
xchg
loope
mov
daa
iret
xlat
and
or
xor
mov
and
sub
popf
inc
test
ljmp
gs
and
je
imul
mov
pop
in
mov
cmc
inc
popf
xor
shl
cmp
repnz
inc
pop
sbb
ss
dec
inc
cwtl
lahf
sbb
fnstcw
insl
jno
pop
xor
adc
lahf
sub
imul
xchg
in
and
loopne
and
xchg
popa
add
mov
cld
inc
mov
pushf
mov
int3
divl
adc
cmp
sbb
aam
lods
ja
je
stos
stos
sub
mov
rcl
sbbl
xchg
cmp
lds
ficoms
dec
jno
jne
jae
dec
dec
setp
test
push
pop
jecxz
sub
sahf
ss
das
sub
imul
int
push
and
daa
insl
pop
fcomps
xor
test
out
lret
push
mov
sbb
loope
or
jnp
sbb
lcall
int
or
rcll
daa
les
dec
and
cltd
jmp
add
xor
cwtl
push
mov
sub
pop
dec
ss
sbbl
xor
xor
in
mov
dec
cmp
les
inc
shlb
jle
fs
aad
out
jle
fldl2e
add
dec
mov
ds
gs
stos
sbb
sbb
push
xchg
mov
jb
jle
out
insl
mov
cld
loopne
out
iret
and
ja
stc
les
shlb
xor
aaa
mov
repnz
add
cmpsl
sub
ficompl
cwtl
fs
push
cmp
lock
mov
xchg
sbb
lcall
notb
xchg
jg
jmp
sahf
xor
mov
cmpsl
hlt
mov
movsl
mov
lret
out
sbb
inc
lea
cmpsl
ss
loop
lahf
sub
pop
mov
scas
adc
filds
cwtl
cltd
push
mull
and
add
mov
das
adc
mov
stos
bnd
lahf
mov
pop
aad
incb
mov
int
fwait
aad
push
jp
mov
into
js
sbb
loop
inc
sub
push
aad
sahf
in
jns
add
pop
iret
aam
and
xlat
mov
pop
int3
cmpsb
inc
je
mov
popa
mov
adc
mov
mov
imul
cmp
mov
scas
push
mov
push
pop
aam
mov
push
mov
shrw
jae
mov
pusha
inc
fists
jae
call
mov
dec
testl
and
fisubs
sbb
fst
jne
xchg
mov
psrad
adc
jb,pn
push
popf
cltd
xor
rcll
xor
dec
or
outsb
cs
ja
add
in
add
and
popa
arpl
and
dec
sbb
in
test
rep
pop
cmp
rcrb
daa
movsb
cmp
dec
mov
push
aam
movsb
dec
lahf
int
ror
popa
jnp
inc
roll
xor
lods
pop
adc
or
test
aaa
push
mov
test
ljmp
lock
inc
je
std
je
fcomps
cli
imul
jmp
xchg
les
mov
aam
fscale
mov
lea
add
dec
in
iret
dec
or
ds
xchg
sub
jns
add
pop
dec
cmp
loope
push
xor
ljmp
pop
fstps
xchg
xchg
popf
push
aaa
mov
div
pop
jl
lret
cmpsb
mov
mov
fisttps
movsl
push
xchg
pusha
insl
cmovne
sbb
mov
adc
sub
mov
cli
sub
add
lret
xchg
add
daa
imul
imul
push
aam
addl
cmp
aaa
gs
hlt
inc
ss
pop
and
ss
cmpsb
push
loopne
stos
in
leave
stos
jnp
stos
add
xor
jecxz
push
and
addr16
and
pusha
imul
jle
mov
push
dec
bnd
inc
sbb
mov
and
inc
shl
jle
pop
in
shll
je
sti
insb
add
lahf
push
dec
jmp
je
imul
dec
mov
pop
lcall
sahf
mov
in
sarl
pop
sub
call
pop
jp
movsb
sbb
popa
dec
in
push
mov
mov
mov
mov
shll
mov
movsl
mov
mov
jle
aam
lds
add
adc
jecxz
pushf
add
imul
push
mov
sub
cltd
into
sahf
mov
dec
adc
xor
dec
or
mov
stc
jmp
jno
dec
push
xchg
push
jb
dec
test
cmpsl
repnz
insb
loope
mov
scas
mov
ret
pop
loopnew
sub
insl
cmp
jmp
mov
push
les
pop
cmp
mov
xor
push
inc
jle
imul
imul
inc
cmp
int
mov
or
loope
in
push
ret
fdivrs
and
xchg
dec
je
fidivrl
inc
pop
jge
mov
into
jne
cmc
or
ja
sbb
xchg
incl
push
lcall
rcrb
lds
scas
cmp
push
bound
dec
pushf
sub
fnsetpm(287
sarb
xor
lea
out
leave
and
fmull
jecxz
pop
push
cmp
leave
adc
into
push
xchg
adc
repnz
xor
in
or
loope
or
sbb
rclb
in
lea
repnz
loope
bound
and
iret
fldt
fldcw
push
jnp
add
ljmp
and
or
xor
sbb
sbb
dec
out
sub
movsl
fs
sbb
movsb
fsubp
rol
xchg
adc
lds
lahf
lods
push
sbb
scas
adc
lret
aaa
decb
out
push
adc
jo
insb
xor
idivb
out
adc
fistps
popa
in
inc
mov
lret
mov
test
lahf
jmp
lret
cmp
add
push
int
clc
and
movsl
xlat
mov
jmp
mov
xchg
cmp
clc
ja
hlt
sub
cmpsl
mov
hlt
push
mov
add
adc
hlt
or
js
fdivrs
sahf
xchg
mov
xor
dec
dec
mov
fdivs
pushf
lret
pop
push
xchg
adc
insb
in
xchg
setne
scas
and
inc
stc
cli
mov
imul
sub
ljmp
repnz
testb
push
out
pop
cmp
push
jns
sbb
lods
fwait
pop
sahf
gs
push
loope
pop
bound
out
push
jne
add
fdiv
cmp
xor
arpl
pop
dec
jae
dec
inc
cmc
mov
enter
mov
enter
jae
xchg
inc
dec
addr16
jg
imul
inc
std
cld
cli
dec
push
add
lods
divb
xchg
jno
mov
shll
lods
push
out
mov
pop
dec
leave
aas
push
loopne
jmp
jmp
xchg
sbb
adc
arpl
enter
cmpsb
pusha
aad
int
cmc
jl
fs
ja
fidivrs
sbb
cmp
ja
jecxz
fdivl
mov
cmp
sbb
fucomp
push
fldenv
jmp
adc
xor
xchg
nop
jge
xor
repz
roll
repnz
dec
addl
dec
aaa
dec
and
test
testl
lods
movd
mov
stos
cmp
bound
in
inc
mov
xor
and
mov
and
lret
mov
push
repnz
sbb
add
mov
and
xchg
arpl
jg
sub
jge
iret
lret
loope
pop
iret
cmpsl
sub
movsl
hlt
int
sti
xchg
ror
ret
jp
imul
mov
sub
out
mov
int3
push
sub
imul
sbbb
mov
cmpsb
pop
push
push
sbb
lods
dec
in
repnz
jp
jmp
dec
dec
sub
mov
cmpsl
xor
rorb
and
loopne
addl
inc
std
mov
inc
and
aaa
mov
outsl
lods
pusha
inc
xchg
sahf
inc
repnz
fsts
mov
cmp
mov
xor
mov
outsl
mov
mov
addl
repnz
mov
adc
and
mov
sbb
jb
lahf
inc
in
push
jp
mov
cmc
cmp
fiadds
pushf
test
sbb
sbb
sbb
shlb
push
jb
mov
push
sub
sub
int
jbe
mov
adc
mov
das
mov
or
popa
xor
aaa
rorb
add
sub
pushl
orb
outsl
and
clc
jmp
pop
sbb
ja
lock
pop
pop
imul
cmpsl
xchg
jno
loopne
andl
mull
jle
or
sti
push
sarb
xchg
faddl
push
fidivrs
sub
and
mov
clc
mov
fisubl
dec
test
rcll
stc
into
std
jae
inc
pop
mov
imul
push
or
cmp
adc
js
lret
sub
xchg
cmp
in
faddp
and
push
cmc
inc
adc
or
shrb
or
fnstcw
rol
mov
xor
sahf
popf
adc
push
xchg
jb
rol
cmp
fldcw
jg
inc
mov
dec
test
adc
or
test
push
push
gs
pop
mov
adc
dec
mov
shl
lods
repnz
push
test
sbb
out
mov
test
fimuls
push
cmp
xor
jns
sub
or
xchg
inc
adc
mov
add
or
in
sub
jnp
scas
add
push
push
pop
dec
movsb
and
mov
subl
roll
insb
xchg
adc
push
dec
xlat
mov
push
mov
or
rolb
push
adc
mov
xchg
cltd
dec
and
ret
inc
jno
push
xchg
je
popf
out
mov
scas
inc
cmp
inc
sbb
pop
xchg
mov
cmp
aam
push
leave
jmp
xchg
imul
fildll
notl
sbb
test
rcll
stc
sbb
std
test
aam
xor
pop
sbb
iret
movsb
lods
fidivs
cmp
aam
outsb
xchg
dec
icebp
mov
outsb
push
xchg
fmul
data16
inc
xchg
call
pop
push
int3
mov
pop
std
xchg
mov
dec
sub
cmpsb
loop
inc
xchg
ret
add
addr16
lds
push
push
and
adc
jbe
loop
cmp
xor
cmp
xor
ret
stc
mov
xchg
test
sbb
jecxz
insl
mov
xchg
mov
push
icebp
out
xchg
aad
popf
imul
cmp
enter
jns
pop
add
data16
mov
add
xor
mov
pop
aam
xchg
int3
mov
ret
dec
push
mov
out
mov
fwait
add
lret
js
mov
test
adc
scas
in
daa
push
and
in
sub
shrb
push
cmpsl
pop
shl
add
in
sahf
lret
test
cmp
out
or
adc
loopne
mov
inc
mov
push
test
or
push
iret
sahf
cmp
xchg
push
mov
add
or
jle
testl
in
daa
jns
or
insl
cwtl
or
add
dec
pop
fs
andb
stos
inc
or
test
mov
les
jle
out
mov
sub
das
jno
mov
call
out
jno
sub
mov
push
imul
xorb
sarl
mov
mov
inc
or
aam
das
test
imul
mov
stos
mov
xchg
mov
and
outsl
mov
lret
dec
inc
jno
jp
sbb
jnp
push
inc
aaa
mov
dec
cmc
pop
cmp
cs
mov
stos
js
and
dec
outsl
and
mov
push
scas
mov
rolb
pusha
push
test
jns
cltd
mov
mov
lahf
jns
xchg
sbb
and
rolb
fwait
push
mov
adc
cwtl
repz
xorl
mov
fwait
movsb
and
jle
pop
jge
das
push
mov
mov
dec
cld
out
int
push
sbbl
jbe
repnz
aas
fidivrl
mov
out
sbb
outsl
fmuls
inc
sbb
hlt
fs
jle
insb
addr16
test
aad
enter
xor
loop
gs
in
icebp
andl
inc
mov
add
cltd
adc
mov
adc
pop
jne
aam
std
lret
adcb
outsl
das
scas
inc
sbb
arpl
aaa
arpl
add
out
inc
add
sub
fstl
aaa
sahf
xor
jns
psrlq
js
push
les
mov
test
mov
or
adc
add
out
xor
add
xor
fsts
inc
push
pop
scas
rclb
arpl
les
into
shll
mov
xchg
ficoml
add
pop
and
cs
lcall
jg
mov
sbbb
js
fcmovbe
xor
or
mov
xchg
inc
add
aad
lahf
push
clc
daa
mov
test
xchg
fmull
lock
imul
mov
std
push
test
aam
iret
fmuls
pop
pop
push
and
cld
and
dec
es
aaa
cld
xchg
pop
shrl
add
sub
lds
inc
in
mov
stc
mov
or
lahf
inc
stc
or
xor
das
enter
lcall
lahf
push
sahf
cmp
lcall
fidivs
outsl
mov
stos
push
cmp
mov
jl
lock
data16
mov
ss
cmp
and
gs
mov
je
push
int3
jo
xchg
push
jns
fimull
es
loopne
xlat
push
push
xchg
scas
jg
add
add
jg
out
shrb
add
out
stos
mov
daa
xor
inc
sbb
aad
dec
loop
mov
imul
test
fidivl
in
mov
fidivl
ds
scas
xor
movsl
dec
xchg
push
adc
jb
sbb
push
test
std
mov
pop
mov
sbb
lods
pop
push
pushf
loopne
jmp
lods
lcall
popa
push
lods
rdtsc
mov
enter
in
fisttpll
or
push
les
pop
push
test
xchg
push
imul
bound
inc
aas
and
push
imul
sbb
lret
insl
xchg
pop
test
sub
dec
or
int3
int3
loop
clc
and
mov
cmp
adc
push
and
add
mov
mov
push
shrb
cs
test
hlt
shr
inc
das
add
aaa
dec
mov
cmc
adc
jae
mov
jl
mov
jle
inc
inc
fdivl
fdivl
mov
repz
mov
lds
jb
sub
flds
lret
mov
add
fpatan
test
fwait
arpl
and
out
cltd
sub
inc
cmpsl
add
int
mov
leave
in
pop
add
inc
hlt
add
or
inc
dec
jp
scas
mov
fs
out
arpl
cld
mov
sub
mov
test
push
ret
out
fiaddl
mov
daa
mov
jmp
cld
lea
push
xchg
fs
in
pusha
add
inc
inc
inc
cmp
dec
mov
test
cmp
push
icebp
daa
repz
xchg
mov
xchg
inc
xor
outsb
mov
lds
push
movsb
into
cmc
lock
sub
add
addl
stos
std
in
xlat
ret
cs
sub
xchg
sub
outsb
mov
add
sbb
es
or
mov
xchg
ret
lcall
enter
in
inc
mov
fcompl
dec
jne
or
adc
icebp
add
jl
dec
inc
xchg
sbb
stc
push
enter
cmc
clc
cmp
sbb
frstor
jne
ss
pop
ror
pop
and
insb
aaa
sub
fwait
dec
mov
stos
dec
xor
push
and
lret
ljmp
repz
movsl
sbb
mov
dec
ret
push
adc
xlat
adc
sub
test
push
in
xor
sti
imul
sbb
in
mov
test
das
add
adc
mov
aam
sti
iret
fsubs
mov
clc
insb
pop
pop
fildll
xorps
ljmp
dec
sub
out
jbe
pop
lock
push
dec
mov
lcall
mov
cs
push
push
pop
pop
jns
or
lods
dec
mov
into
adc
add
stos
add
pop
icebp
lds
add
shl
insb
out
mov
int
es
icebp
in
mov
stos
push
jl
mov
mov
mov
lds
adc
lahf
lds
mov
ret
mov
mov
push
lods
ret
pop
inc
jb
aad
lahf
sub
cmpsb
dec
jp
div
outsl
insb
sbb
dec
les
cmp
add
and
mov
cmc
cwtl
ds
std
and
sub
out
jno
arpl
lcall
pop
push
into
cs
sub
add
pop
jbe
xor
jae
sahf
dec
cwtl
scas
je
gs
xchg
scas
repnz
int3
mov
xchg
mov
dec
xchg
fdivrl
repnz
and
inc
xchg
add
jl
xchg
push
clc
jae
movsl
in
mov
mov
movsl
cmp
mov
lods
out
push
adc
pop
popf
loope
movsb
pop
inc
negb
imul
fwait
xlat
jl
pop
pushf
lcall
xor
icebp
iret
shl
in
lret
stc
jb
je
mov
icebp
sub
or
pop
outsb
jl
pop
push
dec
insb
lret
and
or
add
push
cmp
shlb
ljmp
push
fcmovnb
pop
jnp
jno
sub
fmull
int
cwtl
pushf
push
push
pop
xchg
jle
mov
pop
enter
jnp
add
sbb
and
pop
or
pop
clc
xor
mov
leave
andl
popl
xchg
cmp
test
fmul
jge
fsubrl
adc
cmpsl
xor
in
jmp
inc
mov
ja
loopne
and
push
cmpsl
or
sub
scas
jp
jecxz
scas
mulb
inc
nop
cltd
or
sbb
faddl
repz
leave
int3
sub
ret
das
push
cmpsb
pop
push
sbb
cmp
xchg
aaa
in
and
push
dec
pop
pop
push
shl
lcall
sti
iret
xchg
scas
movl
cmpsl
or
sbb
jns
cmpsb
es
add
sbb
inc
cld
adc
sbb
testb
sub
push
fiadds
jmp
mov
scas
mov
cmp
divb
icebp
mov
push
adc
and
leave
push
cmpsb
adc
jp
dec
daa
shl
popf
lea
xchg
idiv
xchg
into
cld
inc
arpl
lds
cmc
and
in
ss
pop
pop
and
add
pop
fcmovu
jmp
shll
adc
cld
jp
push
arpl
jnp
subb
cld
adc
fbstp
adc
inc
lret
int3
push
jl
leave
xchg
repz
adc
or
in
inc
sbb
rorb
addl
loopne
loope
push
lcall
dec
dec
into
cmp
pop
popa
cmp
lods
call
stos
xchg
jae
xchg
imul
mov
pop
outsl
sub
movsl
lods
int
js
lahf
je
test
and
daa
lods
popf
cmpl
loop
movsb
xchg
pop
lahf
cltd
fldt
enter
in
imul
sbb
sbb
rorl
xchg
test
int3
pop
dec
loopne
inc
popf
ja
lahf
cmp
loopne
adc
lea
jno
shlb
clc
loopne
cmpl
xlat
jae
inc
jae
std
in
fstpt
shr
push
enter
inc
insl
lret
popf
mov
sub
push
push
cmp
jge
xor
push
sbbl
out
arpl
lods
push
mov
and
add
movsb
lock
xchg
fwait
adc
int3
in
stc
scas
jge
inc
adc
or
popa
xchg
sbb
mov
xor
push
xor
cmp
test
fimuls
les
inc
sub
dec
mov
lcall
scas
cmpsb
xor
sub
xchg
mov
add
ja
jmp
inc
jns
andb
xchg
cmpb
jns
jbe
into
iret
sbb
das
out
nop
lods
dec
mov
sub
pop
test
out
inc
scas
push
push
pop
in
lahf
push
or
sbb
arpl
xchg
pushf
mov
addb
xor
rcl
lcall
pop
ror
div
in
cld
cmp
cs
ret
add
pop
lret
mov
fildl
xlat
push
mov
jecxz
add
mov
dec
sbb
jbe
sbb
outsl
sbb
sti
sbb
sarb
push
pop
or
mov
adc
test
mov
mov
add
movsb
add
aam
ret
xchg
pop
push
inc
iret
int3
xor
lods
or
push
xchg
push
cmp
mov
int3
mov
shlb
cwtl
les
rcrb
cwtl
insb
or
xor
mov
scas
mov
push
inc
xchg
sbb
xlat
pop
cmpsl
dec
fucomp
test
pop
out
add
cmp
sahf
adc
sbb
xor
mov
subb
cmpsb
mov
inc
dec
pop
or
jmp
loope
cmp
xor
add
dec
xchg
sarb
addr16
mov
mov
jg
cmp
ss
xchg
fdivr
lea
orl
and
or
jo
push
push
xlat
popa
lea
adc
push
lret
sbb
jae
pusha
sbb
out
dec
inc
mov
adc
scas
shrb
cwtl
mov
pusha
inc
dec
das
add
sahf
xchg
push
mov
pop
nop
mov
inc
push
xchg
in
mov
into
ss
lods
and
xchg
jno
lahf
out
psraw
xchg
or
jg
cmpsl
and
pop
movsb
imul
xchg
jb
jo
mov
call
pop
lock
xlat
adc
nop
pop
push
mov
dec
jnp
in
daa
jne
pop
out
scas
xorb
pop
popf
jge
mov
push
scas
andb
jg
and
push
push
adc
sar
orb
add
rol
sub
dec
int
push
movsb
das
pop
sub
cmp
sti
fs
sub
and
dec
sub
les
cmp
xchg
repnz
pop
xchg
mov
sub
push
movb
push
dec
xor
scas
jb
jb
jb
fsubrl
hlt
jne
lock
mov
sub
aam
loop
pop
hlt
fiadds
fisttpl
sub
add
xor
mov
pop
leave
sub
hlt
dec
or
popf
test
push
shll
jns
aas
in
dec
and
cmp
popf
rclb
jo
fnstsw
mov
arpl
mov
out
jae
rolb
mov
jp
cmp
fnstsw
add
mov
push
xor
inc
push
test
or
push
fisubrs
jne
ja
fwait
mov
jl
sub
cmp
or
and
or
pop
adc
cmp
mov
push
push
inc
outsl
xchg
xchg
roll
sub
mov
pop
jae
subb
out
xchg
and
data16
mov
jmp
push
push
insb
and
popf
inc
xlat
call
lret
jg
sbb
pop
loopne
mov
stos
pop
popa
and
mov
inc
mov
lret
inc
add
inc
mov
xor
push
adc
scas
push
arpl
repz
mov
push
and
xor
xlat
cs
sbb
or
dec
gs
inc
dec
push
mov
ljmp
inc
and
xlat
lock
out
or
cmpsl
mov
xchg
mov
and
pop
sub
jl
aas
add
stos
jnp
mov
xlat
inc
mov
rcr
fcomip
in
or
mov
mov
sbb
xor
and
lea
or
ja
out
xchg
mov
sub
cmpsl
or
lock
pushw
loope
mov
ds
cmp
jge
mov
out
roll
fsubr
pop
jno
pushf
adc
push
loop
notl
jbe
cmpsb
add
cli
addl
fnstenv
lods
adc
bound
mov
add
loope
pop
rol
sbb
subl
iret
ret
pop
sbb
ss
adc
fcoml
push
fsubrs
nop
cmp
cli
and
inc
or
ljmp
xlat
je
fisttpll
mov
lods
push
cmp
push
test
or
mov
inc
shll
leave
aas
pop
sub
inc
pop
out
cmc
mov
fsts
xchg
in
push
pop
sbb
mov
sub
notl
lods
add
stos
dec
push
pop
dec
jmp
fs
xor
out
ret
push
pop
jne
pushf
or
gs
call
cmp
sbb
seto
je
mov
stos
push
ljmp
cmpsb
mov
jge
lea
inc
fisubrs
mov
jge
das
inc
add
rcl
xchg
xor
dec
cmpsl
popa
clc
lret
sub
sahf
jecxz
mov
inc
cmp
dec
shlb
xor
inc
or
jge
popa
mov
xor
lahf
rorl
mov
jb
xchg
stc
inc
mov
dec
icebp
xor
insl
clc
inc
inc
inc
cld
mov
cld
test
inc
call
ja
sarl
push
mov
pop
sbb
loopne
xor
push
aam
jae
dec
js
fsubr
js
jle
and
aaa
cmc
jg
cli
jle
pop
addr16
test
flds
cmp
xchg
ja
xchg
shl
out
je
data16
daa
scas
inc
test
and
mov
or
push
aad
fnstcw
jle
dec
int
push
imul
jns
cli
xchg
push
mov
aam
stos
andb
dec
pushf
push
mov
fistpl
nop
rcr
sbb
cmpsb
jle
les
aaa
mov
in
cmp
xchg
movsl
push
sbb
out
mov
sub
ss
mov
add
xor
push
mov
lds
js
fiadds
loopne
test
aam
addr16
cmp
ficomps
xor
imul
daa
rcll
mov
pop
jo
mov
cmpb
popf
out
enter
pushf
mov
out
loop
das
add
loop
inc
push
jne
mov
xchg
test
mov
jnp
mov
pop
xchg
aam
insb
xor
or
orb
cs
mov
or
cmpsl
lcall
pop
repz
push
mov
xor
add
loopne
adc
int
js
mov
stos
dec
push
fdivrl
xchg
addr16
cmp
rolb
mov
inc
outsb
push
push
mov
cmp
ficomps
fdivrl
mov
cmp
push
jae
xchg
dec
or
mov
mov
adc
push
xor
jbe
aad
or
add
pop
inc
dec
ss
ds
test
ficoml
adc
xor
lds
sub
mov
rol
push
sti
pop
sbb
add
loope
in
pop
sbb
out
inc
push
adc
xchg
dec
push
mov
adc
ficompl
mov
adc
inc
dec
sub
fisubs
xchg
mov
cmp
dec
adc
out
scas
sbb
stc
mov
inc
icebp
lret
ss
fisubrs
outsb
mov
sbb
stos
jmp
mov
sbb
cltd
out
sub
addr16
cmp
lcall
and
test
ss
lahf
les
sbb
movsb
rolb
mov
pusha
jg
xchg
pop
adc
mov
clc
lcall
dec
jl
incb
roll
loope
ret
addl
add
cmpsb
mov
andl
xor
xor
test
dec
dec
inc
mov
and
and
xor
xchg
jecxz
and
les
psubusw
imul
mov
fildll
mov
inc
out
adc
in
push
jecxz
out
mov
adc
in
outsl
mov
sub
lock
jno
repz
out
icebp
xchg
aas
clc
sbb
orb
cmc
xor
int3
push
cld
sarl
imul
mov
add
aam
sub
scas
ret
loopne
add
int
loopne
dec
xchg
insl
aad
xchg
into
inc
and
sub
push
mov
sbb
mov
inc
push
ret
pop
scas
xchg
aas
jbe
push
out
inc
lock
mov
dec
movsb
xchg
cwtl
jns
sbb
pop
out
dec
xchg
lahf
cmc
enterw
divl
and
xchg
lods
call
and
mov
clc
mov
aas
xchg
loopne
mov
enter
sahf
jmp
pop
ds
adc
add
dec
adc
ja
sti
pop
ja
xor
aas
aam
fistpl
xchg
lds
mov
ja
int
pop
xor
pop
or
repz
push
scas
stos
pop
mov
test
dec
shll
fadds
mov
adc
jg
jns
mov
repz
call
int
lds
leave
sub
out
xorb
cmp
bound
pop
es
or
insl
cwtl
push
add
shrl
pop
aam
mov
std
mov
dec
jnp
pop
test
and
pop
jmp
pusha
test
mov
push
mov
mov
inc
mov
subb
enter
add
sbb
daa
movsl
in
aam
dec
test
push
jnp
sti
movsb
xchg
lret
sub
enter
ret
sbb
push
cmp
nopl
or
lahf
mov
test
mov
sub
fldenv
lea
sahf
and
mov
loop
fstp
lcall
and
fdivrp
jne
mov
outsb
mov
xchg
push
psubb
mov
xor
push
rolb
mov
mov
fists
push
mov
or
jecxz
jae
sbb
inc
and
mov
ret
pop
je
jle
stc
stos
int
lahf
jne
mov
fisubs
insl
adc
xor
inc
in
add
in
loopne
pop
push
adc
jne
sub
out
fwait
loopne
push
fsubr
jmp
negl
xor
pushf
dec
sbb
mov
in
popa
sbbl
in
subb
insl
addl
sub
dec
daa
das
sub
pop
pop
xor
icebp
stos
psubb
or
scas
test
xlat
add
popa
cmc
and
movsl
fmul
dec
or
idivl
jge
and
and
rcll
jae
lea
clc
shrb
outsb
add
cmpsl
cmp
and
dec
pop
lcall
repnz
fldenv
push
shll
lods
xchg
je
push
add
or
in
jg
sub
xchg
popl
push
gs
cmp
adc
loopne
gs
imul
sub
push
mov
adc
adc
ret
gs
jge
aas
xchg
mov
adc
adc
jmp
lods
fsub
sbbl
les
sbb
les
movsb
into
or
aam
mov
pop
ja
cwtl
lea
dec
mov
dec
js
jg
cmc
ret
aam
push
pop
fisttpl
cmp
ret
cmp
sarb
sbb
test
aad
ret
mov
or
test
cmp
int3
dec
pop
sbb
adc
sbb
movsl
add
add
jle
scas
xchg
xchg
repz
cmpsb
jge
icebp
pop
and
je
mov
icebp
cmp
adc
lods
stos
clc
in
pop
inc
bound
xchg
xchg
jns,pn
enter
xchg
outsl
adc
mov
test
rorb
dec
cvtps2pd
adc
xchg
addr16
sbb
popl
xchg
cwtl
xchg
test
mov
sub
push
nop
push
std
rcl
xchg
rclb
mov
sbb
insl
rorb
sbb
xchg
idivb
push
pop
xlat
shrb
jp
push
or
pop
push
sbb
into
sub
or
lea
dec
shlb
mov
vpacksswb
jb
lret
idivl
fsubs
adc
push
mov
lcall
cli
imul
add
or
lods
inc
inc
cmp
lret
out
dec
jge
mov
mov
xor
out
leave
xchg
sbb
leave
mov
sub
jnp
imul
pop
jo
lock
jg
cld
add
loope
popf
and
in
nop
mov
pop
lea
aad
cs
out
imul
dec
xchg
mov
aam
jno
push
fisubl
dec
lret
notb
in
lock
and
xor
cmpsb
and
ret
sub
and
aam
sbb
mov
repnz
or
pop
stc
ds
cmpsb
ficomps
inc
lea
je
inc
xor
sbb
sbb
shll
shl
dec
ljmp
inc
ja
data16
jne
inc
imul
cs
xchg
lea
mov
sti
or
jecxz
cwtl
scas
pop
jmp
dec
mov
testb
xor
mov
and
ss
lret
aam
jnp
insb
inc
inc
mov
xchg
cmpsl
cmp
mov
mov
and
push
lods
and
xor
lock
int
mov
jo
lods
bound
addr16
leave
push
dec
insb
jp
inc
insl
scas
jl
push
loopne
iret
jecxz
aam
xchg
jl
pop
dec
push
fwait
aam
pop
push
sbb
fbld
fiaddl
adcl
cmc
adcb
arpl
pop
jl
or
out
shl
setg
testb
in
add
and
sub
add
pop
mov
and
es
jo
loopne
xchg
imul
popf
adc
fwait
in
pop
adc
and
inc
pop
mov
mov
call
pop
adc
fs
xor
sahf
or
rcrl
xchg
and
testl
mov
movb
fucomp
orl
aaa
inc
dec
fcoms
leave
roll
hlt
push
jae
popa
fstpl
lea
add
mov
fmul
push
mov
xor
sti
xorb
jae
mov
push
test
inc
jb
lods
ljmp
roll
push
aas
dec
or
xchg
sbb
dec
sti
test
sbb
clc
pop
mov
xchg
xor
lahf
fwait
lods
push
fucompp
jno
dec
or
jo
fsubr
and
ljmp
mov
sub
aaa
xchg
mov
out
add
xchg
shl
xor
push
xor
std
inc
jle
movsb
jecxz
or
rcl
das
inc
je
cmp
insl
fisubs
cmp
jo
nop
test
outsb
out
add
jp
mov
shl
repnz
mov
sbb
nop
mov
push
pushl
mov
lcall
cld
inc
xchg
rcll
fidivl
pop
mov
add
lock
pop
stos
cld
stos
adc
sbb
and
fwait
out
add
pop
into
in
pop
ljmp
dec
mov
jp
loope
call
cmp
clc
mov
sahf
sbb
mov
add
pushl
nop
xchg
repz
in
pop
mov
scas
mov
sbb
stos
pop
decb
cwtl
ror
mov
or
push
mov
xchg
cs
jno
sub
sbb
rolb
push
neg
add
pop
xor
fimuls
das
xor
sub
in
xor
pop
ret
out
mov
mov
cmpsl
push
cld
add
mov
inc
scas
loop
jmp
lods
mov
repz
add
dec
in
pop
mov
cmc
cli
jl
scas
pop
sub
or
dec
cld
imul
pop
jno
jle
push
int3
adc
test
sti
jecxz
lods
xchg
cld
or
in
and
xchg
pop
loop
loopne
sti
lret
js
imul
pop
adc
imul
arpl
jl
notl
fwait
mov
sub
xchg
lods
div
sbb
push
sub
push
ja
pushf
cmpsl
int3
or
btc
dec
cmp
mov
xchg
jmp
push
loopne
repz
lds
clc
mov
popa
sti
movsb
test
pop
ja
jg
mov
jp
mov
mov
mov
jno
mov
mov
mov
cmp
imul
int3
movsl
or
sub
dec
jo
add
push
dec
loope
test
xchg
jae
in
jp
jle
imul
xchg
mov
sub
jb
mov
sub
test
leave
outsb
adc
xor
dec
dec
xor
mov
or
ret
lods
jge
mov
mov
mov
mov
adc
mov
xor
sub
pop
dec
test
xchg
add
mov
out
jo
push
mov
imul
lds
lcall
lea
dec
jno
push
add
jns
out
pop
loope
inc
pop
jne
dec
mov
pop
jbe
fcmovnbe
into
scas
add
sti
dec
shll
loopne
outsb
adc
add
movsb
dec
pop
sahf
in
add
cmp
mov
pop
scas
in
mov
mov
inc
das
mov
bound
jge
mov
loop
mov
inc
xor
xor
repz
dec
in
push
mov
cmp
and
mov
ljmp
cwtl
adc
xchg
fadds
or
jno
add
xchg
xchg
adc
clc
jmp
or
xchg
mov
xchg
aas
xchg
mov
inc
ljmp
sbb
or
int3
pop
rcrb
mov
push
outsb
cmp
mov
push
or
sahf
inc
ffreep
cltd
iret
sbb
scas
jl
pop
aad
cmc
xor
shr
subl
sub
mov
in
mov
stc
mov
xor
xor
outsl
iret
xlat
adc
mov
loope
sub
mov
lods
mov
xchg
mov
mov
mov
shlb
js
shrl
sub
sub
repz
adcb
or
and
loope
sar
pop
loope
cmp
int
sahf
and
pop
adc
push
std
js
mov
push
mov
fwait
xor
loopne
lock
popf
cmp
in
mov
fildll
loop
mov
jo
adc
or
pop
test
xchg
in
call
xchg
or
les
lods
xor
inc
push
loopne
imull
js
das
stc
adc
jle
push
inc
ds
dec
in
add
mov
stc
js
pop
paddsw
cs
clc
cmp
sbb
scas
in
jge
and
loop
dec
out
push
and
insb
jns
repz
jmp
sahf
push
loopne
cmp
mov
in
jmp
or
sub
mov
mov
jge
shrb
cmp
out
pusha
ret
icebp
inc
pop
arpl
je
mov
sarb
dec
mov
or
and
add
out
cli
pushf
mov
ficoms
test
jecxz
dec
stos
testb
xor
pop
jae
jg
add
xchg
inc
jb
sti
push
stos
jo
mov
jno
rorl
jp
or
loope
out
mov
fidivrs
mov
pusha
mov
mov
pusha
jb
pop
fisttpl
pop
repz
sub
jns
xchg
movsl
add
jae
add
push
adc
test
rcll
push
cmpsb
jg
mov
ds
or
or
cmp
in
jnp
pushf
mov
mov
aaa
sbb
mov
inc
fidivrl
jp
push
popf
add
iret
mov
push
xchg
cmp
mov
jns
orb
out
sbb
cmp
sbb
dec
jae
push
mov
popa
inc
cli
add
nop
adc
add
sahf
mov
movsl
xchg
push
push
aaa
ret
mov
jecxz
or
add
lds
jbe
mov
aaa
test
jmp
sbb
dec
leave
in
in
inc
xchg
stos
repnz
shlb
cli
int3
stos
outsl
sub
stc
mov
mov
les
mov
ret
xor
jne
jl
mov
test
mov
dec
inc
aas
cmp
push
or
push
sub
jle
pushf
mov
add
in
orl
xlat
xchg
push
les
stc
out
arpl
mov
pop
sbb
ret
inc
fs
xor
shl
push
jnp
sub
je
xlat
dec
loope
mov
pusha
jno
cld
xchg
lcall
add
jle
ret
subl
dec
cmp
insl
jecxz
cmc
mov
mov
push
ffreep
dec
out
adc
cmp
insl
faddl
cwtl
lds
jmp
out
int
or
nop
and
mov
sbb
cli
imul
out
aas
add
sarl
adc
pop
xchg
xor
arpl
add
js
mov
xchg
mov
dec
aas
inc
outsl
xchg
imul
lret
orl
in
insb
sub
add
sbb
or
add
lods
jle
or
arpl
shlb
lods
adc
mul
or
adc
cld
mov
push
cmpsb
and
dec
ss
cmp
test
cltd
in
xchg
cmp
sub
call
lahf
nop
call
in
in
arpl
xchg
loop
xor
das
arpl
inc
popa
add
cld
sarl
rolb
pusha
sahf
mov
inc
xchg
fldt
push
je
jns
cmp
xchg
or
aad
pop
pusha
loope
sub
movsl
jle
cld
mov
data16
lcall
aas
test
mov
jbe
pusha
push
mov
jns
cmp
xor
dec
ja
movsl
movhps
push
add
xchg
jecxz
mov
shlb
mov
jne
lods
adc
push
pushf
push
dec
cmp
popf
sbb
int
popf
les
out
js
jne
inc
lret
xchg
int
fbstp
notb
xor
ret
es
imul
hlt
push
adc
sti
add
shrl
jns
mov
lods
mov
mov
out
push
pop
fisubrl
daa
sahf
in
mov
dec
ret
mov
cmpsb
scas
and
xchg
rcl
in
add
cmp
std
shl
mov
push
mov
mov
orl
and
push
or
aad
nop
sbbl
lods
je
scas
push
in
out
call
lds
sbb
pop
or
ljmp
lcall
pop
jle
lcall
jb
mov
mov
xchg
repz
jmp
mov
mov
outsb
std
movsl
aad
mov
mov
jae
sahf
icebp
mov
negb
xchg
inc
and
xor
stos
cmp
ds
in
mov
and
or
mov
xor
push
and
gs
mov
push
inc
sbb
pop
je
push
mov
movsl
add
or
arpl
jecxz
inc
test
nop
inc
popa
je
outsl
sbb
mov
mov
cmp
call
and
adc
shll
test
xchg
pop
xorl
pop
mov
xor
push
xor
mov
fstpl
lock
mov
add
push
hlt
inc
bound
in
andl
jge
sbb
lods
int3
sbb
repnz
rol
xor
sub
in
repnz
gs
pavgb
pushf
in
test
cmp
mov
jno
push
sbb
out
dec
push
inc
xlat
inc
jno
and
imul
mov
or
hlt
push
fisubs
jmp
mov
push
dec
mov
or
adc
adc
into
push
cltd
xorl
rcrl
ficoml
mov
scas
out
imul
inc
mov
sub
dec
pop
mov
rorl
mov
xor
add
pop
jns
inc
xchg
add
das
push
in
inc
sbb
mov
cltd
sub
mov
dec
mov
mov
mov
xor
cmpsl
xchg
stc
out
mov
pop
jo
jecxz
cld
lcall
xchg
popa
mov
fdivrl
mov
lahf
mov
adc
xor
jmp
push
iret
leave
icebp
add
test
mov
inc
out
das
movaps
mov
or
or
mov
inc
xchg
ljmp
push
push
fwait
aaa
sub
sbbb
add
insb
scas
pop
pop
jns
test
pop
and
test
movsb
mov
test
fmul
inc
ret
shl
unpckhps
cld
push
fs
mov
pop
mov
dec
mov
insb
movsl
jbe
push
outsb
jno
aam
mul
in
adc
xlat
or
add
ret
jecxz
test
movsb
iret
ljmp
daa
hlt
ja
fs
rorb
int3
add
bound
lods
andl
mov
es
inc
dec
repnz
pop
mov
movsl
loope
add
in
scas
call
inc
jg
xchg
out
adc
jae
outsb
fwait
cltd
mov
test
mov
dec
cmp
int3
data16
or
mov
push
xor
xor
ljmp
sbb
dec
mov
mov
cs
jnp
gs
imul
aad
mov
mov
jl
jbe
fcomps
mov
pop
imulb
push
orl
test
sti
fisttps
or
loopne
fst
jecxz
cmp
inc
xchg
std
loope
jno
mov
out
aaa
lahf
xchg
dec
incb
rorl
in
or
mov
leave
int
pusha
lock
fsub
ds
or
frstor
test
int3
and
stos
mov
pushf
lcall
dec
mov
hlt
lods
test
pop
jg
sbb
les
sbbb
adc
pop
or
and
fsub
sbb
pop
and
out
stos
pop
cmp
fs
mov
pop
fldenv
imulb
mov
or
add
cmp
push
cmp
xor
rorb
cmpsb
inc
jle
xor
cmpsl
inc
inc
mov
pop
inc
dec
incl
xor
dec
out
jecxz
dec
dec
jg
xchg
lds
mov
push
call
dec
pop
ret
mov
mov
outsl
pop
loopne
in
test
push
pop
fsubrl
cmp
dec
dec
adc
lret
ljmp
mov
mov
mov
mov
jg
mov
sbb
fnstenv
repz
leave
dec
or
add
setne
cli
mov
mov
pushf
mov
js
dec
int3
xchg
add
xchg
xlat
jbe
pop
sbb
arpl
test
xchg
lods
negb
add
cmp
ljmp
popa
pop
or
iret
and
out
and
inc
addr16
cmp
dec
lods
inc
pop
outsb
mov
insl
inc
imul
pop
mov
test
or
int
cld
mov
jnp
imulb
push
sub
jno
xchg
inc
testb
dec
xor
xor
fldt
jmp
bound
add
mov
push
sub
lods
insl
cwtl
fwait
xlat
adc
dec
jge
int3
fldl
add
cmp
in
mov
in
out
pop
xor
stc
push
test
xchg
ret
shll
xor
push
fimull
jbe
flds
std
call
aam
fimull
sub
jg
mul
sbb
sti
push
inc
aaa
inc
incl
aad
fdivrl
xchg
and
arpl
sti
cltd
push
addl
mov
pop
packsswb
xchg
xlat
mov
test
decb
subb
into
inc
das
das
in
lock
dec
pop
or
lds
add
das
js
jb
sbb
mov
xor
fsubrp
repz
cmp
mov
shll
jge
cmp
dec
push
leave
pop
lahf
insl
and
mov
movzwl
sub
and
mov
mov
push
mov
jp
fldenv
hlt
add
pop
sarl
xchg
jae
arpl
dec
jle
dec
add
and
push
lds
mov
scas
imul
loopne
adc
ja
fimull
bound
jle
test
push
std
bnd
pop
xchg
pop
xchg
in
ss
mov
clc
jmp
add
outsb
pushf
cmpsl
enter
pop
mov
fisubrs
mov
loope
repz
cmpsb
mov
filds
xchg
js
leave
repnz
movsb
mov
inc
xchg
cmp
add
xor
icebp
imull
sbb
or
ljmp
jl
test
dec
mov
int3
jne
mov
adc
add
ja
js
je
ljmp
mov
dec
mov
xorl
lret
fwait
aam
mov
cwtl
ss
cwtl
out
das
dec
lds
sbb
mov
mov
sub
inc
test
mov
aam
bound
mov
pop
lcall
adc
jae
mov
xor
push
and
mov
into
push
pop
pop
and
mov
mov
aas
adc
adc
or
inc
pop
cli
mov
stc
cmp
in
out
mov
push
jae
stos
pop
jmp
fidivrs
out
or
and
xchg
loop
int
pop
jl
movsb
xchg
pop
jp
xchg
jns
addr16
and
lret
out
test
sub
sbb
pop
leave
add
adc
bound
mov
stos
data16
out
in
popf
rcl
jno
jp
pop
add
stos
loope
xchg
rcl
xchg
jbe
mov
std
subb
rcll
out
xchg
cs
mov
mov
or
call
cmp
and
cmp
mov
cmp
jecxz
mov
rcr
int3
test
xchg
mov
pop
adc
lret
and
xchg
gs
jne
inc
and
xchg
jne
cld
mov
lods
mov
in
push
or
mov
fcmovnu
fistpll
outsl
lret
mov
xor
xor
in
mov
sbb
repz
rclb
mov
mov
jb
ljmp
adc
or
push
cmp
lods
iret
icebp
lds
adc
je
mov
scas
add
inc
outsl
push
sahf
pop
and
je
dec
xchg
mov
and
push
les
push
jns
aas
xchg
sbb
mov
mov
mov
subl
mov
in
loopne
or
jnp
mov
inc
int
jmp
aad
out
fisubrl
sub
fmuls
pop
xlat
and
and
cld
mov
clc
or
cmpsl
aaa
imul
xchg
repnz
movsl
dec
lret
fcomps
outsl
movsb
sub
ret
push
xchg
fcmovnu
jg
jno
test
cld
add
pop
sbb
push
fmuls
push
adc
enter
add
lock
fdivrs
addl
jbe
mov
imul
fcomps
adc
cmpsb
pop
and
imul
ret
push
add
sub
in
pop
sbb
out
and
roll
ds
adc
xchg
xchg
mov
test
add
mov
test
divl
xchg
push
push
adc
push
inc
out
rcl
subb
stos
and
jp
loope
aad
push
adc
cld
imul
cmpsb
and
lahf
lods
jns
or
rclb
mov
mov
push
cwtl
imul
stos
filds
pop
mov
mov
decl
cs
sbb
out
or
loop
jns
popf
or
insb
insb
xchg
jb
inc
mov
aaa
pop
sub
pop
out
scas
jns
imul
sub
mov
and
shlb
or
repnz
adc
lds
insb
xor
jo
xor
and
movsb
leave
dec
xor
cld
insl
lds
cld
mov
repnz
fcomps
ret
aam
arpl
loope
mov
mov
add
push
sub
jb
sbb
jl
add
sub
les
out
dec
pop
popf
xor
dec
js
js
cmc
sub
push
jns
adc
mov
jmp
imul
xor
addr16
ljmp
das
adc
xchg
nop
and
dec
movl
mov
mov
mov
push
pop
xchg
push
dec
repnz
aad
bnd
ss
cmp
cmp
cld
fnstenv
add
pop
shrb
lods
outsb
aas
shlb
dec
ljmp
xchg
std
xor
stc
das
enter
ljmp
adc
adc
pop
adc
int3
sub
in
lea
fistps
stos
addr16
push
add
inc
test
insb
fdivp
xor
jae
mov
and
pop
adc
jmp
int
repnz
out
mov
add
mov
cmp
sub
dec
int3
in
push
daa
cmp
jge
stc
pop
dec
insl
sbb
lods
insl
mov
adc
mov
popf
or
ret
mov
dec
pop
inc
je
mov
rcll
pop
pop
ss
jno
aam
inc
sub
test
push
clc
and
dec
mov
add
sub
dec
loopne
stc
sarl
sbbb
jno
pop
je
or
sub
out
daa
cmp
add
jp
scas
leave
fildll
cmp
add
cmp
cltd
pop
div
inc
pop
ljmp
cmp
mov
pop
xchg
dec
adcl
dec
js
mov
aas
nop
inc
push
enter
outsl
and
imul
mov
jbe
mov
mov
inc
pop
mov
mov
mov
mov
pop
cmp
jecxz
push
xor
sysret
out
sub
dec
inc
push
sbb
pushf
push
lret
mul
in
in
dec
mov
sarl
sti
xchg
add
outsb
push
popa
mov
shr
loop
jo
and
fcoms
or
inc
xchg
mov
or
add
dec
mov
lods
shll
sbb
cmpb
add
sti
push
ja
push
je
dec
sbb
dec
scas
test
push
add
mov
ljmp
inc
sub
jecxz
push
cs
repz
mov
mov
scas
mov
fs
xchg
pop
push
neg
and
or
xorl
adc
mov
and
dec
mov
push
adc
mov
push
adc
rcrl
cli
xor
leave
int
mov
xor
test
push
pop
mov
movsb
clc
lcall
xchg
icebp
notb
lods
lret
mov
lcall
aaa
bound
mov
repz
sbb
cmc
inc
mov
adc
adc
mov
ss
mov
inc
cwtl
ror
inc
xorl
mov
dec
ret
xlat
arpl
sbb
and
mov
push
idivl
mov
jno
addb
xchg
pusha
mov
inc
test
or
ss
cmp
push
shll
movsl
add
or
inc
inc
xchg
sbb
sub
jo
add
mov
push
mov
xor
ficomps
pop
decl
test
mov
mov
cmpsb
mov
xor
bswap
mov
daa
mov
loop
inc
movsl
push
xchg
popa
jl
push
mov
loopne
sbb
sub
scas
jl
lahf
push
pop
dec
sbb
leave
xchg
fistl
jmp
pop
xchg
jno
das
jmp
jmp
add
or
cmpb
sub
xor
sbb
ljmp
inc
scas
pop
cmpsb
cmp
in
mov
push
rcrl
les
addr16
mov
jl
cwtl
mov
ljmp
sub
xchg
jnp
sub
shlb
lcall
push
nop
in
push
fsts
sub
insb
repz
inc
xchg
imul
cmc
mov
and
mov
cltd
call
mov
loop
add
push
mul
and
push
jg
add
jo
shlb
ds
mulb
mov
mov
loop
stos
ret
cmpsl
inc
daa
inc
jl
sbb
dec
sub
orl
fidivrs
mov
inc
out
ja
lret
loopne
push
shll
jnp
xor
int3
nop
push
push
pop
call
mov
mov
push
xchg
stc
dec
inc
int
stos
sbb
add
add
jge
fs
add
out
gs
xor
dec
shll
jmp
mov
mov
and
loope
mov
fmuls
and
pop
sti
pushf
int3
sbb
loope
cld
test
fsubl
int3
rcrl
imul
test
xchg
cmc
fs
hlt
test
mov
inc
xor
inc
pop
pop
push
jne
xor
in
loope
scas
hlt
push
jns
xchg
movsb
jecxz
pop
fcompl
into
and
stos
mov
stos
sub
inc
or
mov
and
lds
ds
fmull
push
sub
ljmp
xor
in
movsb
sbb
inc
insb
fsubs
outsl
out
dec
adc
fucom
xor
push
adc
imul
shrl
mov
pop
dec
das
xchg
lea
int3
xchg
rorb
div
pop
jge
loope
iret
es
dec
dec
out
lods
mov
fsubrs
adc
gs
fisttps
pushf
loope
cwtl
jb
sbb
xchg
sahf
lret
mov
loopne
das
sub
scas
jecxz
cs
popf
cmpsb
bound
outsl
test
sbb
push
cmp
add
aaa
mov
lret
cmp
jmp
popa
sbb
push
sbb
stos
jle
push
inc
in
xchg
mov
test
stos
fcoml
add
out
imul
pop
outsb
mov
push
or
arpl
jnp
push
lret
adc
jne
mov
push
mov
mov
fs
jg
lret
test
sbb
fldt
adc
aas
loope
aad
mov
add
flds
fstl
jl
fildl
adc
xchg
scas
pop
xchg
js
add
arpl
insl
pop
mov
sbb
andb
out
and
add
jno
loopne
fidivl
ds
adc
inc
mov
push
add
cld
adc
shll
mov
xchg
and
cld
cmpsl
adc
nop
jecxz
cmp
ja
xchg
push
inc
mov
xor
mov
xchg
add
shl
test
cs
jno
hlt
clc
addb
xor
repz
dec
dec
std
cmp
iret
fdivrs
jns
jns
push
inc
cmc
sub
pop
push
cwtl
sub
arpl
and
dec
mov
sbb
fsub
mov
or
stos
xor
jle
dec
inc
cmp
adc
fdivr
jecxz
xchg
test
call
cmpsl
push
or
dec
sbb
fsub
popf
fildll
add
cmpsb
xor
xor
scas
fs
daa
cmp
lods
mov
mov
stos
xchg
lahf
sbb
call
sahf
lock
enter
mov
dec
mov
mov
mov
ret
test
in
das
sub
fs
mov
cltd
fldl
cmp
push
sahf
ret
jbe
or
fdiv
mov
lea
lret
jno
test
outsl
xchg
add
fcoms
pop
lahf
sbb
xlat
aam
pop
push
outsb
and
cmp
loopne
or
xor
lea
mov
cmc
jecxz
cltd
cmp
mov
inc
fs
insl
mov
jl
pusha
jp
bound
pop
cmpsb
fwait
jne
mov
push
ljmp
dec
pop
xor
adc
call
mov
cmp
gs
enter
or
cmpsl
sub
jbe
fs
and
idivb
dec
xchg
jb
pop
pop
jmp
cltd
ds
enter
std
lret
push
sub
and
lea
lods
jae
and
mov
in
push
pop
mov
or
pop
mov
mov
add
cli
movsl
leave
dec
and
fs
add
mov
lret
pop
sub
aas
aaa
mov
fstpl
mov
sti
fistpl
inc
int3
mov
out
xchg
fistpl
in
roll
fs
xchg
nop
add
adc
dec
dec
fimuls
xlat
jle
adc
xchg
dec
pushf
out
dec
cs
fsubs
cmp
imul
mov
mov
pop
in
movsl
and
fldt
cmp
sbb
push
aad
lcall
xor
xchg
jo
popa
or
ss
push
ja
dec
cli
ja
push
jge
in
sub
sub
xchg
and
push
rolb
sbb
mov
mov
das
fcom
adc
imul
mov
ficoms
aad
or
lret
add
dec
in
mov
inc
icebp
sbb
int3
sti
icebp
in
xchg
jns
pop
push
aaa
mov
and
mov
jno
pop
imul
push
xchg
in
add
pop
cwtl
mulb
push
jb
in
pop
sbb
popl
cmc
cmp
sbb
lea
jno
or
mov
jg
mov
or
int3
inc
aam
pushf
xchg
adc
and
sub
imul
and
sub
jne
sub
movsl
jae
imul
incl
sub
cmc
sahf
xchg
pop
mov
idiv
addl
mov
add
fnstenv
ds
imull
ds
scas
insl
loopne
dec
lret
and
out
fldt
push
aaa
dec
je
negl
push
pop
push
push
scas
adc
push
repnz
mov
test
sti
jae
xchg
popf
and
cs
xchg
adc
push
push
add
sub
jmp
sbb
dec
pop
sub
mov
sub
push
enter
mov
push
cmp
cmp
adc
adc
or
push
pop
mov
leave
add
mov
lods
jmp
fcomps
pop
pop
scas
sti
in
dec
jecxz
dec
es
popf
leave
out
pop
int
loop
in
outsb
jg
cwtl
mov
push
xlat
sarl
push
pop
xor
fisubrs
out
mov
clc
mov
push
ret
movsl
imul
mov
test
adc
adc
and
jbe
cmp
mov
lods
aam
push
mov
imul
xor
popa
lahf
stos
adc
sti
jge
cmpsb
adc
push
pop
dec
pop
mov
imul
dec
mov
push
ja
pop
lock
mov
imul
mov
cmp
pop
pop
in
adc
sbb
jl
iret
je
dec
mov
push
hlt
mov
add
mov
lods
negb
mov
mov
mov
or
xchg
inc
xchg
arpl
cmpsl
pushf
bnd
lods
jno
shl
and
sbb
out
ss
dec
inc
and
mov
push
adc
dec
push
movl
rcll
adc
lea
fimuls
push
cmp
inc
jge
mov
jo
sbb
fs
fdivrl
ljmp
je
xchg
xchg
or
dec
mov
dec
sbb
mov
jae
out
mov
pushf
pop
cld
add
out
loope
sub
jmp
inc
xchg
cwtl
loope
or
push
nop
ret
sbb
inc
cmpsb
add
je
in
test
cwtl
data16
sbb
dec
xchg
add
insb
lods
jmp
mov
push
popa
pop
scas
inc
pop
inc
mov
cmp
std
mov
or
pusha
ror
inc
sahf
cld
lods
sar
out
inc
or
inc
mov
popa
ret
es
fiadds
cmp
aam
shl
pop
mov
xchg
and
je
pop
mov
mov
sbb
in
jl
lret
xchg
movl
fldz
push
lods
mov
and
call
stos
scas
push
push
adc
pop
xor
jle
inc
add
push
out
fcoml
mov
pop
jne
add
add
aad
mov
icebp
push
loopne
icebp
push
jne
jecxz
mov
jge
in
into
in
adcb
stos
sbb
ret
repnz
idivl
sub
pop
push
rolb
mov
pop
rol
mov
mov
adc
rorb
cmovbe
imul
inc
cs
test
dec
std
add
test
out
jbe
lea
push
dec
cmp
outsb
enter
cmp
mov
imul
add
dec
mov
adc
ljmp
jne
mov
or
mull
aas
fmulp
cwtl
mov
in
jne,pt
pop
pusha
xchg
stc
and
lahf
mov
add
lret
scas
cld
adc
nop
lret
fdivrl
aam
lea
or
push
mov
or
mov
pop
mov
mov
out
std
push
xor
inc
adc
mov
pop
mov
jle
sbb
pop
je
push
jne
cmp
flds
fs
std
dec
out
testb
aaa
aaa
mov
mov
sub
inc
lcall
push
inc
and
lods
aad
xchg
sub
negl
dec
pop
les
xor
mov
xor
lcall
jnp
cltd
imul
sbb
adc
jl
bound
jmp
xchg
adc
cld
scas
pusha
fs
stos
pop
mov
xor
je
fisttpll
mov
jl
mov
xchg
es
out
std
mov
cmc
sub
loopne
sarb
sbb
adc
push
loope
xor
dec
push
inc
mov
push
bound
mov
lcall
mov
aaa
lods
push
or
inc
lret
mov
mov
inc
xor
loope
fidivl
gs
dec
shl
sub
jg
mov
dec
stos
arpl
call
fisubrl
repnz
clc
add
xor
stc
add
ja
adc
push
stc
and
or
sbb
test
xchg
test
imull
push
js
mov
dec
sarb
xchg
sub
inc
int3
inc
jno
pop
cmp
inc
outsb
leave
mov
mov
cmp
cmp
fisttpl
or
dec
fstl
mov
push
fs
lds
fwait
adc
movsb
xchg
mov
add
push
or
cltd
test
pushf
int
stos
lock
enter
lods
loopne
mov
ljmp
mov
jp
pop
mov
bnd
insb
mov
decl
inc
pop
cmc
stc
cmp
mov
vpsubusw
addr16
jge
jae
push
mov
mov
xchg
lds
inc
int
js
sahf
xor
gs
test
adc
xor
add
xchg
and
in
sbb
test
push
out
inc
cmc
in
mov
fldenv
test
xchg
std
cmp
stos
jge
pop
cvtpi2ps
in
lcall
cmpsl
ja
loope
scas
mov
les
or
jo
in
movb
dec
jnp
cmp
repnz
lods
cmp
sysenter
popf
xor
mov
hlt
pop
cmp
xchg
cltd
stos
xchg
daa
push
mov
hlt
fimuls
jmp
adc
jno
dec
xchg
jae
jmp
sti
xchg
dec
push
scas
mov
jmp
pop
xor
pop
daa
mov
push
mov
clc
pop
in
data16
subb
mov
adc
imul
or
xlat
dec
and
or
jo
int3
inc
push
or
enter
cmp
test
int3
loope
jle
out
push
fisubs
mov
pop
movsl
pop
shlb
lret
xchg
dec
jnp
pop
inc
iret
add
stos
mov
xlat
jnp
aad
push
dec
lock
xchg
adc
shl
push
push
push
and
pop
flds
push
xor
mov
in
mov
int
inc
in
loope
addr16
in
add
sub
rcl
imul
inc
pop
push
stc
in
sarl
ljmp
push
jnp,pn
in
imul
push
xchg
mov
sub
push
dec
stos
add
imul
adc
shrb
pop
and
shr
xchg
fstps
xchg
xor
adc
ss
sarl
shlb
cli
aas
rcll
add
je
push
ret
adc
mov
cmp
je
and
jo
cld
mov
adc
xchg
fcompl
add
int
ret
jg
push
aam
orb
xor
out
repz
ja
add
or
nop
mov
push
cmp
inc
xlat
fcoml
gs
adc
mov
jno
mov
jge
xor
push
subl
mov
mov
sub
fwait
mov
xchg
jbe
repz
lret
push
add
mov
out
das
cmpsl
loopne
xor
cmp
push
inc
inc
pop
sbb
cmpsb
adcl
fs
cmp
ljmp
cltd
adc
pop
or
mov
ljmp
and
test
dec
cmc
jnp
fidivrs
movsb
mov
shl
cmpsb
and
push
dec
jmp
cmp
adc
jge
mov
dec
xor
or
push
les
xchg
fcomi
cmp
fidivs
xchg
dec
repz
arpl
dec
aam
pop
dec
dec
mov
inc
movsb
lret
test
sub
mov
jl
lods
or
or
test
push
xor
outsl
xor
inc
push
pop
testl
mov
push
bound
rcll
inc
add
in
loopne
dec
jmp
add
mov
dec
scas
pop
fstpl
inc
test
mov
testb
addr16
and
pusha
loope
negb
push
push
jle
dec
dec
adc
test
fsubs
xchg
push
jl
fmul
mov
ret
xchg
push
sahf
add
adc
leavew
ret
ret
dec
push
test
out
and
mov
cmp
and
mov
ret
cmc
jp
xchg
push
mov
in
fildll
add
in
inc
testl
sub
lods
mov
fnstcw
sbb
dec
cltd
jnp
push
lret
mov
cmp
xchg
pop
std
aad
pusha
mov
divb
and
add
and
cmp
xor
inc
jnp
xchg
mov
pop
flds
repnz
lds
adc
fsub
addr16
ficompl
dec
das
pop
or
aas
testb
dec
test
rclb
or
push
xor
and
dec
daa
inc
mov
insl
dec
jge
stos
adc
and
insl
pop
sbb
je
shll
mov
repz
stos
dec
fs
jmp
sub
add
nop
xor
dec
fistps
pop
fadds
test
xchg
mov
ret
lret
mov
icebp
sbb
into
pop
mov
push
outsl
lea
and
ret
movsb
and
cmp
push
and
inc
aas
cmc
or
test
push
sbbb
pop
jmp
push
lahf
jg
loope
cmpl
jno
xchg
sbb
insb
test
fnstenv
je
popa
mov
add
push
lahf
enter
dec
sbb
enter
push
insb
lretw
inc
inc
adc
mov
mov
cmp
cwtl
stc
push
pop
pop
mov
jo,pt
repz
mov
ljmp
and
cwtl
repnz
jae
std
and
mov
shl
insl
mov
lea
sbb
inc
icebp
push
ret
mov
sub
imul
aam
pop
in
pushf
push
sub
jge
test
add
mov
sub
notl
mov
jl
xchg
mov
and
out
inc
jbe
xorb
leave
jo
pop
push
fwait
jne
mov
pop
fcoml
shl
lcall
lods
imul
xchg
adcb
jmp
movsl
mov
and
pushf
lea
daa
cwtl
push
outsb
or
out
cs
lret
adc
sbb
adc
sbb
sbb
xchg
or
push
bound
test
cwtl
jns
cs
xor
shlb
loope
in
js
aam
lds
in
jo
jl
dec
push
xchg
jl
push
in
pop
xchg
or
jae
mov
addr16
push
ret
cmp
jl
mov
cld
into
cmp
inc
xor
cld
sbb
sarl
or
and
pop
lods
sbb
std
jns
ret
inc
xchg
out
xchg
data16
adc
idivb
daa
je,pn
jmp
cld
push
out
hlt
dec
mov
scas
cmpb
mov
push
xlat
and
add
mov
pop
fistps
lret
push
mov
pushf
into
adc
add
pushf
push
cmp
jge
in
mov
imul
cld
inc
push
add
insb
stos
mov
jbe
pop
cmp
xor
sub
cmp
data16
icebp
lcall
push
bound
sbb
cmp
sub
mov
out
adc
mov
mov
inc
ljmp
add
cld
fisttpll
add
inc
mov
push
scas
pop
addl
pop
fcompl
mov
sub
sti
fcmovnb
jbe
push
sbb
cld
imul
dec
movsb
shll
data16
fcomi
lcall
push
push
outsb
pop
jmp
dec
dec
adc
jno
pop
rclb
movhps
cltd
and
js
test
ret
xor
add
adc
and
imul
push
adc
fcmovu
cmp
out
jb
imul
mov
pop
inc
push
mov
push
cmp
sbb
in
aas
lret
jo
mov
loopne
out
xchg
aad
push
sahf
xchg
ss
fcmovbe
mov
testb
pop
or
dec
jl
js
xorl
and
mov
sbb
or
cmp
add
cmpsb
add
mov
mov
arpl
stos
jecxz
push
mov
stos
mov
push
hlt
xchg
por
fiaddl
mov
outsl
adc
frstor
sub
push
cmpsl
push
lcall
xchg
cwtl
inc
sub
enter
fstps
inc
lcall
push
pop
data16
enter
ss
imull
xchg
push
lods
adc
andb
ljmp
dec
dec
cmp
cmp
ret
adc
cld
ds
mov
stos
clc
cltd
adc
mov
jmp
arpl
fsts
jmp
mov
push
cmp
jmp
bound
push
aas
dec
cmp
je
adc
leave
mov
push
inc
push
dec
add
call
aas
clc
popf
adc
lret
mov
dec
pop
mov
jg
adc
sub
dec
pop
sub
lods
dec
sub
or
mov
jae
into
loope
ljmp
or
cld
rcrl
lcall
lahf
lods
inc
sub
cmp
jl
xchg
mov
call
sbb
notl
loope
mov
ja
jb
sbb
nop
push
notl
jnp
xchg
ret
sub
push
add
enter
pop
ljmp
ljmp
int3
lock
pop
xor
pop
les
push
jno
lods
and
adc
insl
cs
and
xor
dec
add
cs
pop
sbb
out
dec
dec
es
loop
sbb
rclb
test
sub
sub
shrl
push
push
jns
cli
cmc
loop
mov
in
xchg
push
sarb
daa
or
imul
loopne
mov
imul
and
sti
movsb
sbb
mov
mov
in
xchg
lods
sti
add
bound
xchg
sub
cmp
pop
adc
jmp
xchg
push
pop
jp
sbb
mov
add
or
repnz
subl
je
orl
fdivl
adc
mov
push
xor
push
test
and
add
popf
add
xchg
jo
or
xor
aaa
repz
inc
outsl
and
inc
pop
mull
pop
mov
jns
cs
pop
lds
int
shl
fdivs
mov
int3
fistpl
daa
jbe
cmpsl
test
pop
lcall
add
and
jnp
out
jae
test
and
xchg
imul
movsb
and
imul
lods
lcall
aam
mov
add
cwtl
daa
jecxz
adc
cmp
and
xor
jne
test
fnsave
mov
jbe
aam
pusha
lahf
sarb
cmc
cmc
push
inc
jb
ret
outsl
and
pop
lods
je
and
ds
ja
jp
push
js
mov
xchg
shrl
lret
ljmp
xor
and
push
shll
lods
rorb
fsubrs
pop
pop
pop
sahf
or
or
inc
testb
jg
and
inc
je
sub
leave
lock
sahf
into
mov
adc
mov
aad
jg
sbbl
xchg
mov
pushf
mov
ret
test
sahf
dec
sti
pop
stc
push
sub
call
clc
mov
ja
xchg
and
jg
loopne
and
shlb
scas
aad
dec
scas
sub
les
mov
hlt
hlt
cli
xchg
sbb
xor
inc
sarl
push
lds
jle
int3
mov
sbb
inc
and
or
or
out
pop
dec
mov
adcb
and
or
mov
sti
test
inc
xor
cmp
lods
pusha
mov
stos
inc
mov
lret
lahf
sub
adc
add
inc
or
push
xchg
and
stos
sub
repz
adc
std
add
in
push
pop
mov
mov
adc
shll
jns
xor
push
push
jmp
out
xchg
outsl
push
push
xchg
jne
pop
cmp
and
xor
in
roll
imul
aaa
in
into
or
xchg
adc
arpl
int3
pop
xchg
lds
xor
std
jmp
inc
imul
ds
lods
fsub
dec
jnp
outsb
xchg
pop
push
inc
or
add
movsl
xchg
pop
dec
xchg
adc
jg
or
mov
push
xchg
sbb
jp
sub
add
dec
mov
and
xchg
cmp
aas
mov
xor
push
xchg
sub
mov
fs
fistps
mov
fnstenv
bound
sub
xor
xchg
ret
xchg
cs
mov
dec
das
xchg
mov
sbb
out
sub
stos
jo
testl
mov
cli
jl
movsl
movsb
mov
cmc
and
fdivrl
xchg
mov
loopne
add
addr16
xorb
loop
push
fsubr
jg
mov
jp
add
inc
adc
mov
mov
ret
sbb
mov
pop
xchg
pusha
and
fistpl
pushf
scas
pushf
icebp
add
nop
and
pop
pop
dec
jp
jp
testl
mov
xor
cwtl
xchg
jp
pop
sub
sub
jg
shrl
lds
cli
movb
mov
adc
pop
push
pop
mov
jno
adc
mov
loop
into
inc
mov
bound
or
push
dec
mov
lods
cmpsb
jno
xchg
aad
dec
push
out
xchg
sets
ljmp
lahf
jbe
mov
inc
mov
sub
hlt
out
inc
add
test
in
jmp
xchg
dec
push
lods
adc
adc
add
inc
fcoml
and
mov
gs
mov
popa
mov
push
mov
jo
xchg
mov
mov
add
iret
inc
sub
clc
in
int3
and
or
arpl
and
pop
fmuls
cmp
xor
nop
imul
insw
mov
push
sbb
cmp
mov
leave
ss
scas
dec
cld
aam
cltd
push
repnz
repnz
and
push
inc
fwait
xchg
mov
mov
enter
rcr
mov
or
data16
lods
push
dec
sbb
test
rolb
mov
lret
int3
mov
adc
push
clc
pop
outsb
out
mov
pop
aaa
imull
lcall
shll
mov
fldenv
dec
aad
nop
cs
outsb
sahf
lods
in
pop
dec
xchg
lock
mov
sti
cmc
pop
addr16
mov
push
lret
add
test
add
or
xor
cld
arpl
daa
pop
outsl
push
xor
shll
hlt
jne
je
pop
gs
dec
fwait
outsb
lea
loopne
aad
cmp
or
outsl
xchg
dec
cmp
cld
dec
lahf
xchg
pusha
dec
and
movsl
aaa
ret
cmp
fcom
adc
enter
mov
hlt
push
xor
sub
clc
jnp
ljmp
fwait
iret
inc
lahf
pop
stos
fbld
push
in
fisttps
mov
pop
ror
cmpsb
popa
inc
lea
push
add
sbb
cmc
mov
pop
sub
and
push
push
pushf
mov
mov
xor
cmpsb
insl
rcll
imul
add
jmp
repnz
jle
xchg
mov
cmp
mov
jo
das
fnstcw
and
cwtl
and
inc
rolb
and
imul
jae
inc
jne
sub
or
fists
andb
jg
pop
jae
test
lret
enter
lods
repz
sbb
scas
divb
jae
adc
lods
stos
pop
or
scas
aad
in
idiv
out
dec
mov
mov
enter
fimull
mov
pusha
clc
jno
je
sub
mov
dec
dec
das
add
xchg
sti
inc
daa
test
cltd
insl
xor
mov
mov
adc
ret
std
into
call
and
or
lock
dec
pop
inc
rolb
adc
testb
add
addr16
xlat
sbb
addr16
scas
mov
es
leave
push
sbb
push
cmp
insb
daa
or
cmpl
jle
je
mov
nop
jnp
out
stos
mov
dec
add
mov
pop
adc
mov
xlat
aam
add
or
mov
jmp
or
cmp
mov
and
popa
call
pop
test
xchg
dec
xor
inc
paddw
cmpsb
pop
xchg
and
leave
jae
dec
push
push
xor
cli
hlt
push
mov
arpl
popa
movsl
cld
sti
fistps
lods
jbe
push
fisttpll
leave
mov
mov
xchg
fsubrs
fwait
adc
pop
filds
fmull
aas
jmp
pop
xchg
shll
popf
sub
leave
addr16
push
and
les
mov
movsb
cmp
mov
popf
mov
into
inc
lock
pop
cmp
sub
fdivs
mov
mov
int3
jl
push
icebp
mov
repz
xlat
push
pop
aaa
pop
arpl
or
insb
cmp
fcmovne
xorl
xchg
fwait
xchg
andb
xor
sbb
mov
or
pop
addr16
stos
or
add
bound
mov
cmp
jge
ljmp
and
leave
push
xchg
pop
jge
mov
push
push
push
push
mov
mov
jae
inc
mov
xor
lods
adc
cmp
inc
add
adcb
popa
std
inc
dec
cmp
pusha
push
cmpsb
cmp
fdivr
xor
bound
mov
xchg
mov
jecxz
cli
sbb
add
mov
push
into
cmpsb
fisubl
or
jae
fs
movb
enter
cmp
push
test
lock
dec
adc
adc
xor
movsb
call
arpl
repnz
sub
fsubrp
dec
out
mov
dec
dec
mov
in
dec
gs
mov
add
repnz
jmp
push
sbbb
inc
fistpl
mov
test
out
add
es
pop
sub
rolb
jb
mov
jnp
imul
loopne
jge
dec
imul
movsb
mov
inc
adc
inc
ret
ljmp
cld
add
adc
sahf
dec
and
cmp
js
pop
pusha
bound
cmpsb
xchg
mov
cmpsl
pop
xchg
cltd
fldcw
jns
jns
pop
icebp
pusha
xchg
add
mov
mov
jmp
cmp
aaa
add
dec
popa
in
cmc
jle
pop
aam
ret
xchg
xchg
movsb
mov
push
decl
loope
cmp
out
jecxz
into
dec
test
cmc
cmp
sub
int
loopne
and
js
in
add
fbstp
outsb
fwait
lret
movsl
cmp
idivb
fidivrl
test
in
mov
xor
sub
push
sbb
pop
xchg
and
aaa
mov
sti
int
pop
es
cmpsl
shll
outsb
cmp
push
inc
lock
push
js
orb
leave
pop
lods
lret
push
sub
fists
push
shrb
xor
push
ja
imulb
das
movsl
inc
ret
push
ss
ds
sar
clc
subb
and
dec
adc
stos
and
xchg
or
xchg
loopne
xlat
popa
cmpsl
in
adc
movsb
xchg
add
mov
insb
inc
dec
out
lods
pop
xor
stc
mov
aam
cwtl
mov
add
xchg
clc
scas
cmp
and
xor
outsb
push
sub
je
xor
mov
imul
leave
fwait
dec
cmp
into
dec
cwtl
pushf
push
sub
cmp
mov
xchg
jbe
aas
subl
mov
mov
cs
xchg
sbb
loopne
mov
jmp
sub
pop
push
cmp
iret
pop
push
cmp
in
xor
fwait
inc
cmpsb
pop
jbe
test
and
and
push
lock
cmpsb
add
and
cltd
lahf
xor
jge
mov
sbbb
lahf
out
outsb
cmp
xor
cmp
push
fsub
imul
in
cmc
mov
mov
sti
cmpsb
sbb
stos
aam
shlb
adc
test
add
push
adc
sbb
jl
shlb
xor
test
rcrl
js
js
mov
cmp
xchg
add
lds
or
rcrb
jno
test
and
cwtl
les
xlat
cmc
mov
mov
scas
jns
lcall
ljmp
imulb
jo
mov
sahf
sahf
les
decb
xor
sub
ja
adc
inc
fwait
jmp
pop
inc
jecxz
sarl
repz
in
push
lcall
pop
and
enter
outsl
cmpsb
inc
adc
lds
xlat
mov
rorl
cltd
lods
sbb
xor
fidivl
sub
jle
pop
jns
push
push
or
pop
add
dec
and
xor
cs
mov
mov
loop
stos
arpl
adc
mov
pop
dec
ret
nop
lcall
sub
insl
lds
dec
out
into
push
gs
pop
xor
add
fsubr
pop
jg
jl
sub
sbb
sub
push
add
popf
dec
lock
cli
out
xchg
das
loopne
insb
test
loop
std
addr16
cmp
or
adcl
adc
loopne
push
lods
mov
in
or
pop
jnp
gs
sbb
mov
pop
sbb
fistpll
xor
lods
sub
jle
int
daa
or
push
pop
adc
das
ss
hlt
or
xor
push
sbb
into
mov
xor
pop
xor
cmp
cmc
jle
rorl
jmp
addr16
add
fsubl
add
enter
gs
popf
lock
xor
inc
into
or
fnstsw
fabs
js
inc
mov
jmp
mov
repnz
sbb
dec
push
rolb
movsb
push
mov
sub
insl
les
mov
inc
in
push
adc
insl
push
sti
in
dec
dec
adc
push
mov
cmc
aaa
add
out
das
push
sbb
popf
in
dec
sub
and
hlt
jl
inc
jns
lcall
addb
lret
pop
pop
and
sbbb
in
incb
mov
sbb
addr16
arpl
lods
and
sub
dec
cli
push
mov
mov
lods
pushf
imul
mov
add
mov
and
adc
pop
xor
adc
mov
aas
push
xor
push
push
and
sbb
outsl
jb
mov
aas
sbb
int
scas
sub
in
popf
push
push
mov
rcrl
imul
hlt
fcompl
dec
and
fdivrl
movsl
jmp
or
jb
pop
inc
test
ficompl
push
cmp
addr16
and
repnz
ficoml
push
jg
jge
mov
in
in
sbb
addr16
lods
scas
ret
test
es
test
and
into
adc
leave
loopne
aam
cmp
lcall
and
mov
mov
in
jp
seta
cld
push
mov
mov
cmpsl
int3
pop
push
add
outsl
in
or
out
das
pop
pushl
jg
fdivrl
push
cmp
and
mov
xorb
les
pop
jg
push
or
call
fcomip
mov
xchg
jnp
push
mov
xchg
inc
push
lret
test
jmp
adc
mov
pusha
nop
test
dec
test
popa
add
cmp
inc
test
leave
cmp
push
pop
daa
stos
mov
repz
xchg
out
xlat
dec
shr
outsb
cmp
adc
xchg
insl
mov
fcoml
daa
mov
jne
mov
sti
or
adc
daa
sbb
push
mov
push
jl
pop
inc
sbb
movsl
sub
dec
add
mov
data16
or
je
out
jbe
fs
aaa
xor
pop
pusha
jecxz
fsub
xchg
loope
lret
or
jmp
adc
push
clc
mov
lods
repnz
outsl
pop
xchg
add
sarb
bound
mov
out
push
push
popf
pushf
jmp
dec
push
std
lret
fs
repnz
xor
in
jno
or
das
aaa
addl
xchg
ret
lcall
jl
popa
jnp
shlb
outsl
jne
xor
or
ficoms
pushl
je
cmp
in
jb
sub
cmp
nop
scas
sbb
pop
cli
dec
or
shlb
pop
xor
push
ds
mov
mov
pop
mov
ss
mov
rcll
fbstp
sarl
jge
xor
xchg
iret
loope
sbb
lcall
push
cli
in
push
addr16
xor
pusha
cmp
addr16
sbb
cwtl
inc
mov
cmp
dec
es
add
in
cltd
dec
mov
sub
shll
aad
mov
les
and
gs
mov
push
aaa
ss
push
pop
pop
cmp
add
xchg
arpl
repz
int3
jae
xor
test
mov
or
xchg
mov
and
lahf
es
dec
lret
jle
loop
aas
fidivl
sub
rorb
push
mov
imul
loopne
lidtl
adc
cld
fdivr
dec
fst
fiadds
das
shrl
xchg
pusha
sub
or
sub
push
ljmp
mov
lods
xchg
outsl
push
repnz
mov
insb
xchg
adc
rclb
cmp
or
and
mov
popa
mov
lea
or
pop
jnp
sub
sub
xor
nop
and
and
mov
aad
repz
cs
jge
jnp
add
nop
insb
jno
xchg
sub
aaa
mov
xchg
jp
cmpsb
jecxz
xor
adc
lock
push
push
ret
mov
data16
jecxz
push
add
mov
icebp
jns
rorl
cmp
bound
mov
sbb
cli
lods
popf
push
subl
xchg
ror
shlb
popf
jp
subl
loope
dec
pop
pop
jo
jp
inc
mov
add
xor
add
hlt
aaa
rclb
dec
push
ja
loopne
faddp
dec
int
sbb
testl
dec
jnp
push
mov
popf
ret
inc
das
sets
sarb
jge
push
pop
fidivl
shl
jo
fcomi
std
mov
lret
add
or
das
and
mov
jge
sub
fs
add
fidivl
adc
xor
xlat
in
sti
mov
in
inc
xchg
into
xor
xor
lds
dec
push
jae
inc
js
lret
pop
ror
cs
icebp
fnstenv
loopne
call
data16
dec
call
push
mov
mulb
xor
adc
and
adc
mov
xor
enter
sub
mov
mov
adc
or
mov
addr16
lcall
and
sahf
mov
lea
enter
mov
add
jnp
jbe
push
cmp
or
xor
cmp
fstl
xchg
mov
lods
jmp
fs
inc
lods
push
jmp
lret
jle
dec
pusha
pushf
sbb
or
and
clc
ret
and
dec
cmp
std
insl
push
inc
xlat
sbb
or
scas
fiadds
ret
xor
pop
sbb
sub
jae
sahf
xchg
fdivs
je
int3
or
shlb
pop
push
pop
cld
movsl
pop
pop
mov
ret
and
xor
incl
test
cli
fs
mov
dec
or
lahf
sub
sub
aam
xchg
jo
sub
outsb
fwait
lret
jp
cwtl
jne
shll
fsubrs
sub
mov
dec
cld
dec
mov
xor
jne,pn
aas
outsb
adc
mov
sbb
add
xchg
cmc
testl
pop
adc
and
dec
or
push
cmpsl
sbb
out
movl
push
jle
arpl
push
mov
notl
int3
mov
daa
push
pusha
out
je
sbb
imul
sub
sub
fdivrl
lcall
mov
pop
popf
add
sahf
push
pop
mov
jp
fs
lret
ljmp
fnstsw
mov
and
jb
mov
imul
jp
xchg
lods
mov
lods
sarl
mov
in
jmp
outsb
push
das
das
inc
lods
sbb
dec
xchg
dec
loope
gs
pop
xchg
loop
in
lock
cmp
mov
inc
fcmovu
cmp
pop
aad
test
inc
cld
mov
jno
mov
and
lret
adc
push
inc
int3
lds
lret
dec
xchg
push
popf
mov
ja
out
insb
mov
cmp
shlb
bound
loope
sar
push
mov
fisubl
push
jl
push
add
loop
aas
cmp
sbb
pop
or
xchg
aas
fs
mov
cli
in
mov
sarb
incb
call
push
xor
xchg
out
sti
mov
ljmp
mov
sbb
pop
ret
inc
lock
lods
rorb
popf
out
dec
jmp
int
inc
add
clc
push
stc
ja
notl
cwtl
gs
outsl
cld
cs
loope
sarb
mov
sub
icebp
ljmp
dec
fidivl
mov
push
outsl
dec
pop
mov
aad
sarb
ljmp
loope
adcb
mov
out
loopne
mov
fwait
lods
mov
push
sti
shll
push
xchg
cmp
jl
xchg
int3
mov
jg
rcrb
adc
mov
pop
bound
ret
xchg
sahf
dec
icebp
xor
scas
push
insb
lret
cmp
push
and
scas
jg
mov
rcrl
or
inc
mov
cmpsb
or
pop
inc
clc
mov
push
in
mov
pop
xchg
rcl
ja
sbb
add
sbb
pop
xchg
int
xchg
jecxz
cmc
mov
adc
cli
push
stos
jl
idivl
jmp
shll
out
push
adc
aam
cs
push
mov
push
jne
cmp
xchg
das
jae
lea
cmp
cwtl
insb
out
faddl
pushf
clc
push
pushl
pusha
movsl
pop
jbe
aaa
lcall
les
mov
mov
mov
loope
inc
push
jle
lret
or
adc
or
lock
mov
stos
mov
xor
xchg
lcall
cmp
push
and
leave
shlb
lods
out
rcl
mov
ret
pusha
imul
add
dec
mulb
daa
mov
les
icebp
loopne
inc
xor
dec
xlat
mov
mov
inc
out
add
les
repnz
jno
icebp
out
mov
enter
or
je
mov
mov
insl
lock
xlat
mov
jne
lcall
loop
sti
xlat
fnstsw
push
in
fwait
mov
dec
jmp
xor
lahf
push
adc
loope,pn
mov
cld
inc
mov
ss
stc
or
js
mov
iret
sarb
cmp
out
popf
jg
xchg
xor
dec
mov
clc
cmp
testl
add
adc
xchg
jnp
pop
inc
aaa
cld
add
andl
sub
outsb
mov
pushf
mov
push
sbb
pop
daa
test
mov
push
in
cli
fs
push
stos
sbb
bound
or
jg
insl
sub
in
pop
jle
mov
divb
push
addr16
mov
push
lds
mov
xchg
sub
lahf
pop
ror
pushf
sub
subl
fcmove
ss
fisubs
mov
lret
out
inc
popf
mov
mov
sub
iret
dec
and
cmp
mov
push
pop
nop
pop
call
lods
mov
test
xor
not
or
bnd
xchg
cmovbe
pop
adc
xchg
mov
lock
lret
cmpsl
sbb
mov
sub
dec
sub
loop
leave
lret
es
push
aad
pop
xchg
and
sbb
in
cwtl
sub
push
pop
jo
mov
inc
loope
adc
jmp
and
cmc
jnp
or
loope
shll
mov
shl
cs
xor
dec
jl
cmpsb
jo
mov
cmp
fcoml
fs
push
arpl
mov
dec
adc
adc
enter
std
stos
adc
cmp
sub
jp
scas
enter
mov
mov
push
sbb
cli
adcb
lock
test
mov
fistps
testb
insb
sub
loopne
lods
inc
fisttpll
mov
cmp
mov
ljmp
loopne
loopne
loopne
sub
or
mov
cli
mov
sbb
pop
dec
mov
xchg
adc
ss
enter
aas
mov
fwait
inc
bound
pop
fisubrs
lods
cmp
sbb
dec
fdivrp
test
imul
jb
push
jg
xchg
imul
je
or
shl
stos
insb
test
xchg
xor
mov
test
les
push
jne
or
int3
pop
subb
nop
mov
ret
ljmp
mov
dec
cmp
xchg
sahf
bound
cmp
push
js
cmp
inc
lea
xchg
popf
push
fists
cli
fcmovne
xor
sub
adc
sbb
xchg
xchg
jae
xor
pop
fildl
and
dec
insl
pop
xchg
ja
dec
insl
cltd
inc
cwtl
lcall
xchg
ss
mov
repz
fs
mov
pop
cmp
add
or
adc
nop
scas
imul
push
mov
jle
mov
loopne
mov
cltd
cmp
push
jmp
sub
stos
or
push
pop
ja
cmp
push
sbb
mov
push
out
sbb
sbb
lret
pop
dec
fwait
outsl
dec
in
test
pusha
pushf
jno
data16
push
ret
sub
dec
jmp
rcrb
xchg
loopne
jl
sbbl
xchg
clc
daa
les
fbstp
fdivrs
rol
mov
xchg
cltd
lods
mov
sub
out
xchg
testw
clc
fdivrl
cmp
mov
clc
xor
sub
daa
mov
cld
push
fsubrp
setne
out
pop
iret
out
ret
mov
fstpt
lret
and
int
imul
sub
cmp
inc
pop
jg
repz
out
add
push
xchg
jle
mov
jecxz
adc
enter
lea
pop
sti
fdivl
div
mov
dec
inc
mov
pop
mov
push
imul
sbb
fcoms
push
and
addr16
sti
cld
in
movsb
mov
mov
fisttpl
jecxz
aad
mov
add
arpl
in
xchg
adc
xor
or
incl
addr16
insb
pop
xchg
incb
push
xor
addr16
add
dec
xchg
xor
pop
je
loop
sub
pop
mov
outsl
cmp
mov
pushf
enter
pop
or
pop
jp
fsub
repz
aam
push
lods
jmp
mov
jbe
xchg
mov
mov
adc
int
pop
idivb
enter
add
testl
fisubs
inc
int
out
repnz
sbb
and
jl
cs
addb
sti
movsb
in
jo
mov
pop
push
and
pushf
add
dec
adc
nop
inc
ljmp
sub
jl
scas
lret
xor
cwtl
fwait
add
pop
and
fadds
jp
aad
out
push
or
add
xchg
pop
mov
push
adc
mov
iret
movsb
pop
not
or
lods
and
mov
pop
add
test
cwtl
mov
cmp
cli
xchg
ret
jle
repnz
mov
addb
dec
in
repnz
mov
insl
or
jle
jmp
xor
mov
xchg
imul
enter
push
es
dec
fildl
xor
test
jg
lahf
inc
xlat
arpl
and
ljmp
fwait
mov
or
lds
dec
jg
sbb
inc
mov
sub
mov
dec
sbb
sbb
fisttps
push
sbb
push
lret
fs
pop
ftst
jl
inc
ljmp
mov
xchg
rorb
ret
gs
rcrl
cltd
es
sub
or
jb
je
mov
cmpsl
mov
inc
call
jecxz
push
mov
stos
sti
ret
popa
clc
or
inc
shll
push
popf
pop
lods
aam
adcl
cmp
mov
inc
cmpsb
mov
xor
subl
loop
mov
mov
and
mov
mov
js
dec
jns
xchg
mov
xchg
mov
pop
ja
or
sbb
xlat
sti
nop
arpl
sub
push
push
cmp
test
xchg
push
outsl
xor
sarb
ret
mov
xor
lock
xor
subw
mov
out
sub
pop
dec
dec
aaa
cld
lds
jo
lods
sbb
push
xor
nop
sub
movhps
lea
and
sbb
jne
insl
xchg
mov
jecxz
or
add
push
js
in
loopne
das
push
fisubs
lea
mov
cmp
jnp
mov
xor
dec
adc
sub
adc
adc
rcll
push
lods
mov
insb
jge
dec
pop
std
jnp
movsb
and
add
into
dec
jle
adc
inc
mov
mov
dec
xor
push
shll
pop
aam
stc
fistl
leave
pop
lds
sub
pop
into
loopne
jbe
cmp
jl
add
outsl
jne
lods
testl
sub
loop
pop
repz
cmpsl
cmp
ret
jp
mov
pop
inc
pop
in
out
xchg
or
loopne
pop
shlb
inc
cmp
mov
cwtl
lret
jl
jecxz
ss
push
and
iret
cmp
sub
dec
lret
testl
scas
cmp
shlb
mov
mov
mov
cmpsl
pop
mov
dec
inc
sub
inc
leave
push
inc
test
mov
xchg
push
inc
jns
jecxz
ljmp
add
sub
dec
stos
add
ss
cmp
jecxz
ficoml
mov
mov
xor
and
je
xchg
inc
int
ljmp
shlb
cmp
mov
das
iret
sbb
cmpsl
adc
ret
push
arpl
insl
adc
mov
and
shrl
out
adc
div
popa
xchg
xor
in
sub
lret
dec
push
mov
cmpb
stos
jg
iret
jns
xchg
iret
push
andl
movsl
scas
out
xlat
sbb
cmc
pop
test
lcall
popf
ds
cld
and
dec
inc
int
add
and
xor
push
mov
jmp
sbb
mov
scas
adc
sbb
ljmp
call
int3
cmc
mov
push
inc
add
pop
test
cwtl
cmp
sub
lds
lret
push
cltd
imul
int3
ljmp
cwtl
rcr
cli
loop
repz
int
dec
cmp
mov
push
lret
cmpsb
lds
xor
andl
jge
mov
popf
lock
cvttps2pi
xchg
adc
cld
mov
mov
shrl
mov
xor
push
movsl
add
outsl
sbb
out
jle
stc
loop
sbb
pop
xlat
inc
pop
or
mov
inc
les
outsb
lea
and
sahf
add
jg
mov
in
cli
mov
jle
roll
cmpsl
stos
xchg
mov
or
push
adc
add
out
rclb
test
add
xchg
cmp
push
and
xchg
pop
repz
roll
bound
out
loopne
xchg
or
xchg
xchg
dec
icebp
push
jb
push
jns
xor
je
push
addr16
xchg
stos
orl
sbb
push
lods
inc
fwait
clc
fnstcw
xor
mov
fisubrl
das
jmp
pop
lahf
repz
xchg
cs
sub
sub
jbe
rcr
push
int3
orb
sbb
cltd
test
mov
inc
flds
insl
test
repz
outsl
adc
jmp
or
dec
add
or
addr16
add
inc
sbb
fstps
or
mov
sbb
ret
push
push
sub
mov
pop
jbe
mov
das
movsb
shl
mov
inc
fwait
aam
inc
inc
sub
mov
out
add
sub
sahf
cs
std
dec
insl
out
dec
xchg
int
rcll
ds
les
fildll
xchg
cmp
call
adc
or
cli
call
dec
leave
test
add
inc
xchg
xchg
js
sub
mov
xor
sbb
repz
flds
push
test
jns
xor
or
add
test
cmp
int
add
push
xchg
in
mov
dec
pop
orb
stc
stos
or
lret
pop
mov
jb
stos
mov
into
inc
pop
lret
inc
mov
mov
push
mov
cli
pop
push
fs
repz
es
xchg
lods
sub
xchg
in
mov
out
out
testb
les
sub
jo
mov
sbb
push
jmp
sar
lods
sbb
into
mov
push
mov
fbstp
scas
sub
fdivrp
lcall
add
push
jge
js
add
mov
dec
cmc
arpl
aam
jno
xor
fs
cmpsb
sahf
inc
pop
jp
rorb
das
sbb
sbb
mov
shll
jg
sahf
dec
mov
cwtl
mov
sbb
lahf
std
ret
xor
inc
mov
ret
in
cmp
test
icebp
stc
xor
shll
or
mov
aad
sbb
rorb
pop
hlt
dec
cmp
je
mov
in
xor
stos
sub
xchg
add
neg
loopne
hlt
sub
rcrb
mov
imul
jns
adc
mov
rorl
addr16
dec
into
lock
imul
pushf
xchg
jno
xor
push
cltd
mov
inc
fstl
popf
mov
pop
push
jmp
adc
cmp
ja
test
jno
jg
idivb
in
xor
call
cmp
pop
or
popa
enter
cmp
stos
ficomps
ficomps
repnz
push
lcall
ss
fistpl
movhps
pop
cltd
jno
popf
mov
loope
aas
stc
fstpl
or
loopne
jnp
xor
lret
jle
icebp
out
data16
xor
mov
scas
mov
xor
jl
jmp
in
jnp
or
loop
sar
cmp
lcall
sub
stc
dec
push
jnp
xchg
jp
sub
mov
lea
or
leave
fdivr
push
and
rep
cmc
aas
iret
stos
rcl
les
cltd
dec
jmp
ret
out
shrb
dec
mov
mov
fcmovnu
cmp
cmc
ds
mov
xor
loopne
bound
rcrb
fisubrs
imul
adc
xor
in
mov
pop
cmp
mov
inc
dec
pushf
xchg
jmp
sub
js
iret
xchg
or
gs
test
mov
pop
xchg
int
mov
adc
push
cmp
push
int3
les
das
fmuls
test
xchg
push
lods
fidivrs
das
scas
jl
cwtl
dec
test
xchg
jle
adcl
jns
inc
fnstsw
scas
cmp
lds
in
clc
test
fs
sub
sub
nop
js
hlt
mov
ret
cmc
cmc
cmpl
xchg
dec
sbb
stc
out
xor
lods
cli
cwtl
push
cmp
mov
gs
sub
scas
or
xlat
notl
push
cmpb
sbb
inc
sbb
add
or
fwait
sti
pop
cmp
int
cltd
fadds
into
jle
adc
int
ss
shrl
sarb
hlt
int
in
mov
rolb
push
xchg
fistpl
cmpsb
insl
pop
arpl
fcmove
in
mov
mov
int3
ljmp
mov
in
xchg
aam
andb
out
jg
sbb
pop
mov
xchg
xchg
sbbl
push
inc
cs
jnp
dec
pop
pushf
push
jne
push
das
mov
sbb
sbb
imul
cmpsb
ja
dec
xor
jecxz
mov
insb
call
pop
aad
pop
psrlw
push
ret
aad
pop
push
jns
lahf
arpl
inc
fs
dec
xor
ja
cmpsb
fisttps
cmp
mov
sbb
scas
add
mov
orl
icebp
lock
dec
jnp
lret
xchg
inc
shlb
popf
in
gs
insl
jnp
xor
pop
ds
cs
iret
outsl
imul
out
nop
fisubrs
adc
mov
push
jl
aas
into
mov
lcall
cwtl
add
mov
repnz
stc
popa
ja
sub
mov
mov
jb
sbb
inc
psrlw
or
mov
fsubl
pushl
sbb
in
adc
mov
push
out
mov
jb
or
loope
aad
push
iret
and
pop
xchg
adc
sub
lods
inc
mov
leave
fadds
movb
cmpsb
inc
repz
jo
jnp
xchg
pop
inc
shrb
jae
xor
pop
pop
jns
lds
jle
mov
mov
pop
jns
xchg
lea
ret
test
std
fs
push
dec
iret
cltd
dec
cld
stc
pop
loope
int
jnp
xchg
push
xchg
cmpsb
outsl
fisttps
loopne
repnz
cmp
mov
inc
jg
sbb
aad
sbb
adc
pop
mov
sbb
scas
shll
sbb
lcall
mov
ja
mov
mov
xor
das
fisubrl
lods
pop
adc
xor
je
ret
jnp
scas
sub
loop
pop
inc
xor
loop
pop
movb
lahf
arpl
xchg
or
ds
jle
xchg
jbe
xor
mov
cli
jl
jbe
scas
add
movsb
add
mov
push
jbe
xchg
adc
mov
add
pusha
push
inc
fwait
notl
fwait
cltd
cmp
mov
mov
and
xor
mov
lods
outsb
xchg
xlat
inc
test
mov
mov
cli
mov
adc
test
mov
mov
push
mov
mov
push
pushf
add
sub
scas
pop
mov
pop
add
cmpsb
into
cmpsb
mov
mov
bnd
sub
pop
out
lea
mov
mov
test
out
les
lahf
mov
fwait
push
inc
repz
inc
imul
xor
dec
add
int3
push
jnp
je
add
mov
out
xor
xchg
ret
push
hlt
loope
adc
adc
jecxz
mov
mov
xor
das
mov
mov
test
icebp
push
jge
jb
xlat
or
scas
aad
pop
stos
fisubrl
fwait
mov
ficoms
jle
sub
add
sub
inc
js
pop
int
mov
adc
fmull
inc
in
adc
ds
adc
aam
mov
sbb
test
push
lea
mov
sti
push
je
cmpsb
clc
orl
and
movsl
jnp
fsubr
mov
push
or
sub
push
stos
mov
inc
xchg
sbb
repnz
and
add
jmp
cmpsl
shlb
xor
cmp
aaa
sahf
dec
jo
test
cmp
out
xchg
inc
sub
jmp
mov
pushf
cmpsb
cmpsl
test
outsb
push
cmp
scas
sbb
inc
adc
int3
cmpsb
ret
cmp
test
inc
pop
sub
cld
rcr
xchg
jl
pop
aas
push
or
and
ds
mov
call
lods
pop
popa
push
jne
cwtl
test
xchg
ret
adc
pop
out
pop
jae
sti
and
push
mov
mov
aad
xchg
dec
push
popf
push
xchg
mov
and
sti
lock
or
outsl
xchg
fbld
cli
adc
nop
insl
rcrl
aas
mov
sub
sub
cmp
in
sbb
pop
lret
cmp
ss
sbb
arpl
loope
popf
idivb
jns
les
push
sbb
push
outsl
mov
outsl
or
jbe
iret
adc
int
xor
push
stc
and
iret
add
icebp
int3
sahf
xchg
mov
cld
fnsave
lcall
test
les
lock
cld
adc
xor
xchg
mov
xor
incb
bound
mov
cld
cmp
sub
fst
fnstenv
rolb
add
add
enter
add
mov
test
pop
adc
adc
dec
mov
sbb
movsl
pop
movsl
adc
popf
outsb
in
es
push
sbb
push
int3
sub
jg
fsub
test
test
mov
xchg
test
fs
in
cmp
push
addr16
packuswb
push
lahf
mov
pop
push
loope
inc
cmp
cmc
iret
das
fldl
xor
cmp
icebp
push
mov
fnstcw
cmpl
xor
cli
adc
mull
jl
frstor
sbb
pop
pushfw
popf
outsb
xchg
lock
fs
leave
dec
add
jl
into
loop
movsl
fsts
rclb
fst
loopne
out
or
insl
inc
cmp
push
and
sbb
push
inc
add
ds
fcmovne
aaa
mov
out
dec
pop
sub
imul
xlat
pusha
jb
lods
mov
mov
xchg
mov
pop
push
push
sub
xor
jns
fimull
notb
and
ret
pop
fdivs
mov
cmp
push
inc
sub
nop
sbb
in
sbb
enter
pop
ss
adc
negb
mov
rep
mov
je
push
jnp
popa
jne
cmpsl
out
jnp
int3
das
pop
lods
sbb
fldt
push
lret
inc
mov
cld
out
mov
mov
fdivs
push
push
clc
mov
cmp
aas
mov
sub
rol
mov
mov
rcrl
loopne
outsl
adc
push
xor
int
mov
popf
mov
mov
imul
mov
jbe
cmp
fdivrs
shlb
popa
pop
popl
les
dec
push
std
enter
repz
xchg
adc
lods
pushf
lret
lea
imull
imul
jp
das
xchg
dec
iret
mov
shl
jns
jecxz
mov
lods
cmpsb
in
mov
mov
xor
imull
mov
aaa
repz
inc
in
sahf
jmp
xor
lock
inc
fisubs
ss
lcall
xchg
aaa
out
in
ja
sub
mov
add
inc
sarb
mov
fdivr
and
cmp
loop
add
imul
push
je
stos
or
mov
cmp
and
iret
mov
inc
mov
sbb
dec
outsl
in
out
xor
insl
jg
push
push
lock
enter
hlt
insl
pop
fdivs
and
rorl
xchg
daa
ds
or
pop
mov
in
push
xchg
outsl
and
sub
jne
iret
pusha
push
jmp
shrb
xor
outsl
insl
sahf
imull
xchg
pop
or
fdivl
and
aas
dec
out
inc
push
sbb
xchg
sbb
sub
jl
in
idivb
adc
repnz
jns
int3
cmp
loop
rcl
mov
std
addl
mov
jl
sub
jge
push
and
outsl
inc
jne
add
xor
dec
subps
inc
xchg
stos
pop
xor
push
adc
lret
int3
and
jg
sub
notl
push
xchg
push
adc
fldt
sbb
ret
dec
mov
jl
clc
and
and
jne
cmp
and
scas
pusha
clc
adc
cmpl
hlt
jnp
cmp
in
in
add
mov
stos
aad
ds
into
mov
fcmovbe
scas
xor
lahf
lret
mov
testb
cmpsb
and
in
push
arpl
cmp
mov
xchg
out
dec
sub
jmp
cmp
xor
xlat
bound
dec
dec
xchg
and
mov
loope
nop
negb
ret
mov
pop
out
and
mov
fistpl
dec
ja
xchg
inc
jge
xchg
inc
fldl
adc
and
push
and
imul
push
mov
mov
ret
insl
pop
mov
push
out
xchg
add
push
lea
sahf
inc
sub
mov
sbb
pop
and
and
dec
mov
mov
add
jle
outsb
dec
push
push
pop
ja
cmp
dec
sbb
loope
or
dec
lahf
mov
xchg
inc
repz
jne
xchg
out
push
and
insb
and
enter
test
mov
stos
sbb
or
out
lods
push
in
aad
push
mov
leave
add
int3
testb
pop
out
xor
sbb
fimull
sahf
repnz
fidivl
stos
jmp
mov
into
repnz
jl
in
dec
add
cld
insl
movsb
jo
push
movsl
mov
sbb
dec
jp
test
imul
repz
mov
xchg
hlt
cmp
push
rolb
pop
insl
xor
ljmp
inc
xor
sbb
test
arpl
mov
fdivr
mov
cmp
cmp
pop
mov
adc
push
js
mov
ja
adc
rolb
fnstcw
cmpl
sbb
mov
sub
mov
push
loopne
add
fldl
call
add
stos
sbb
insb
push
addl
in
mov
dec
fdivrs
xlat
jb
sub
and
cmp
pop
jp
cmp
pop
or
ret
cli
inc
xchg
popf
das
pop
aad
sti
scas
loop
mov
cwtl
js
push
imul
cmp
dec
fs
dec
sarb
ret
pop
adc
adc
adc
pop
shrl
fs
std
dec
or
lea
hlt
daa
pop
cwtl
dec
or
ja
lods
or
add
xlat
movsb
cli
aam
sub
or
loope
ret
lret
pop
ljmp
lcall
cld
jge
cltd
and
cli
cmp
pop
pushf
iret
ret
jp
inc
movsl
ror
and
fisttpll
dec
xchg
in
sub
pop
mov
rolb
fwait
notl
loope
push
es
cwtl
inc
mov
pop
mov
sti
out
fcompl
cmp
les
addr16
stc
pop
iret
insl
cwtl
mov
out
ljmp
out
and
cmp
fnsave
pusha
mov
icebp
pop
in
imul
xchg
sarb
stos
stc
insb
iret
xor
fstps
lahf
shl
popf
scas
mov
fstps
xor
push
xchg
mov
imul
adc
stos
xor
fnstcw
jb
out
sub
lods
push
lods
mov
aaa
push
cld
jmp
fidivl
mov
aad
adc
daa
push
jo
js
cmc
fildll
jecxz
mov
es
sub
xor
loop
aam
sub
out
sbb
xchg
fwait
xchg
mov
fildll
lds
push
addr16
mov
sbb
dec
sbb
stc
sbb
xchg
jnp
adc
dec
jnp
test
and
mov
rorl
mov
aam
mov
mov
pop
je
sbb
mov
cltd
or
mov
xchg
xchg
sbb
lods
pop
repz
push
jns
les
and
push
shr
sbb
repz
cli
xchg
lahf
mov
cmp
lock
push
jo
jp
into
cmc
pop
pop
push
xlat
insl
pop
and
scas
stos
lret
inc
cmp
mov
aas
mov
cwtl
repnz
push
or
push
pop
sbb
popf
lods
inc
dec
mov
pusha
add
subl
sub
jp
mov
or
jnp
jmp
xchg
stos
int3
push
shll
loop
add
movsb
imul
repnz
test
mov
aas
mov
test
xlat
or
jl
cmp
incl
in
jmp
pop
mov
fbld
xor
fisubrs
cld
lret
push
inc
mov
movsl
dec
mov
and
inc
cli
cmp
add
les
imulb
mov
inc
mov
pop
cmp
adc
xor
sub
adc
push
in
cwtl
test
decl
cmp
jae
jb
inc
and
faddp
push
ret
pop
push
add
push
into
pop
imul
xor
les
dec
inc
lods
outsb
icebp
stos
sub
adcl
test
push
lret
shrl
pushf
iret
sbb
xchg
mov
sbb
repnz
pop
xor
aas
mov
jp
dec
sbb
call
and
mov
xchg
aaa
test
sahf
adc
mov
jno
push
mov
or
scas
fnstenv
imul
add
and
push
lds
adc
jo
andb
push
lock
inc
push
out
mov
mov
cmpsb
ja
int
pop
outsl
mov
mov
sbb
shlb
xor
vmread
insb
cmc
lret
outsb
fptan
mov
sbb
rorl
mov
cwtl
xor
jne
lea
xchg
mov
dec
push
jl
nop
loope
jmp
jp
dec
cmc
rcrl
push
or
scas
and
mov
and
push
movsl
mov
mov
js
fwait
and
aam
cmpsl
or
xchg
out
and
xchg
cs
dec
xor
rcr
hlt
cmp
and
daa
xchg
xchg
mov
dec
jns
cmp
dec
out
loopne
fcmovbe
call
pop
pop
out
xchg
insl
ljmp
jns
add
andb
or
rorb
fbld
sub
add
cltd
lcall
mov
cmp
ret
stos
jp
out
adc
sub
insl
imul
adc
popa
adc
xor
xor
pop
out
movsl
jbe
icebp
sti
leave
mov
cmpsb
mov
js
dec
sahf
test
pop
cmp
sbb
pop
dec
mov
mov
cmp
pop
push
pop
sub
adc
enter
jb
incl
jb
xchg
mov
cli
hlt
cmpsb
outsb
mov
sbb
xor
push
pop
jns
addr16
je
rcr
push
mov
sub
cmc
pop
lret
je
xor
or
and
add
and
mov
inc
and
mov
push
bound
add
inc
push
mov
pop
inc
jg
xor
cmpsl
xchg
push
mov
sub
mov
out
sub
xor
sub
jmp
push
mov
insl
cmp
loope
repz
sbb
pop
add
into
add
sub
loop
mov
push
subl
addl
test
dec
and
mov
in
push
fldl
insb
xchg
mov
dec
loop
adc
sbb
into
cmp
xchg
pop
push
out
insl
ss
pusha
decb
add
out
fs
pop
nop
mov
mov
mov
mov
xchg
inc
nop
mov
jo
std
jns
sbb
les
xchg
icebp
and
pop
rcr
outsb
jbe
push
and
ret
ss
or
xchg
shrb
xor
add
mov
sbb
and
lods
in
mov
sub
xor
lahf
adc
outsl
out
rcrl
inc
mov
or
inc
nop
lods
jno
mov
adc
xchg
test
jle
push
sbb
psrld
mov
inc
ffreep
push
and
adc
daa
loopne
pusha
nop
jae
xchg
dec
or
fidivl
jno
dec
pop
sub
xchg
sub
lret
xor
mov
cmp
jae
jmp
cltd
mov
cmp
xchg
inc
insw
in
mov
push
outsb
call
ss
add
hlt
push
dec
test
mulb
cwtl
and
adc
outsl
scas
pop
test
mov
mov
xchg
mov
and
or
aas
mov
add
lock
sahf
or
cwtl
push
mov
mov
fdivrs
test
pop
pop
xchg
or
shrb
inc
mov
call
dec
push
ret
hlt
sti
push
sti
push
and
push
mov
inc
div
in
push
lea
fsts
pop
xchg
leave
xor
mov
dec
mov
jmp
movsb
lods
dec
pop
mov
sbb
mov
pop
cmp
je
jo
inc
adc
pusha
stos
repnz
mov
lods
movsb
shll
or
jno
adc
in
jecxz
inc
in
scas
or
adc
mov
sbb
test
xchg
out
cli
fidivs
jnp
dec
jp
out
pushf
and
sbb
test
sahf
outsb
add
jg
or
mov
or
arpl
adc
adc
fisubrl
inc
sub
cwtl
adc
push
add
adc
imul
mov
pop
jmp
fwait
das
lea
insl
mov
or
ret
fsin
add
mov
rclb
loopne
mov
sbb
jno
push
scas
push
dec
mov
std
stos
insb
push
mov
shrl
mov
mov
sub
xchg
adc
insl
in
mov
test
inc
cmp
lds
ja
mov
hlt
fnclex
cmp
jg
inc
imul
add
leave
in
stos
mov
mov
xor
ja
cmp
pop
adc
daa
out
sti
es
imul
std
push
inc
push
cld
shl
dec
in
std
out
sub
xchg
sbb
ljmp
jae
or
push
jmp
xor
loop
sub
repnz
add
nop
loop
cli
shll
mov
sub
cmc
cwtl
outsb
test
pop
mov
xchg
sti
mov
in
stos
xchg
into
sbb
jle
aaa
mov
dec
add
ret
mov
jb
dec
stc
push
ret
movsb
mov
jge
mov
cmpsl
push
sbb
sub
mov
mov
loop
leave
or
sub
jmp
lret
xchg
nop
subb
dec
and
aaa
jns
sbb
decl
dec
mov
jmp
insl
lret
xchg
xor
mov
fwait
mov
pop
adc
test
mov
adc
dec
dec
pop
sbb
xor
cs
cli
fstps
cmp
pushf
jb
test
clc
ja
cwtl
lds
pop
lds
mov
jmp
test
sub
cmp
int3
sub
xchg
in
shll
iret
lods
xchg
pop
mov
pusha
adc
stos
pop
cltd
xchg
inc
cmpsl
ds
jno
sbb
or
imul
mov
loop
push
push
pop
cltd
das
adc
dec
xlat
lods
das
pop
dec
in
xchg
jbe
xor
in
into
loope
push
enter
jmp
jns
decl
aas
loope
mov
jecxz
std
push
in
push
cwtl
inc
mov
xchg
test
sub
test
jnp
add
gs
arpl
in
or
movsl
pop
repnz
sub
js
in
insl
int
xchg
and
inc
push
loope
push
inc
jl
xchg
jge
sbb
push
inc
push
push
lds
xor
or
out
pop
and
cltd
jae
lods
cmc
stos
mov
jp
inc
daa
inc
mov
loope,pn
dec
decb
sub
sub
pop
stc
add
or
jp
decl
lcall
mov
scas
js
or
mov
imul
out
mov
mov
shlb
and
mov
xor
jbe
out
push
xchg
push
les
push
mov
dec
setb
mov
jl
add
int3
mov
call
loopne
mov
pop
psllw
cmp
add
push
punpckhbw
jnp
xor
jmp
push
push
andb
loopne
nop
stos
std
movsb
pop
test
subl
aas
sahf
out
inc
lea
cmc
adc
mov
cli
mov
sub
data16
or
push
imul
mov
cwtl
or
ret
mov
pop
sbb
xchg
mov
stos
inc
or
and
mulb
sbb
insb
ficoms
jle
pop
stos
cs
movsl
mov
mov
sub
inc
popa
test
cli
jle
xchg
add
bound
push
in
sbb
mov
fcomps
cld
cltd
mov
adcl
pop
icebp
filds
jno
cmpsb
xchg
fadd
mov
ss
xor
jae
or
out
sub
ret
add
daa
into
sub
lods
or
cmp
dec
mov
popf
nop
fs
loope
in
cwtl
int3
and
inc
shl
jp
addl
and
insl
cmp
mov
cmp
in
mov
pop
jns
enter
cmp
jl
nop
aad
and
dec
add
xchg
pushf
adc
pop
fdivrs
shll
stos
xchg
fadds
mov
std
and
aas
adc
or
inc
or
sbb
lret
mov
jbe
bound
mov
insl
push
fcompl
cs
xchg
mov
dec
and
dec
lret
les
into
xchg
arpl
nop
insl
lcall
jbe
pop
xor
insb
mov
cmp
and
cmc
les
dec
jne
mov
inc
cmc
icebp
mov
push
lret
movsl
xchg
popf
clc
push
and
mov
push
ss
pushf
sub
sub
imul
stos
out
daa
imul
xchg
mov
scas
ret
iret
arpl
std
ljmp
dec
cmc
mov
into
dec
push
imul
dec
mov
mov
fnstcw
popa
fs
jmp
xlat
adc
xor
dec
inc
movsl
cmp
fcmovb
pop
and
dec
push
loopne
mov
gs
push
mov
in
mov
lret
lahf
sbb
out
fidivs
mov
dec
mov
pop
push
mov
stos
sbb
stos
notb
std
jbe
dec
enter
out
movsl
adc
mov
dec
lock
dec
mov
test
inc
jge
jbe
dec
shrl
ja
mov
icebp
in
rclb
cs
pop
lahf
push
sub
shll
aas
and
movsl
push
pop
je
stos
imul
out
cmpsl
and
jb
mul
std
pop
aam
mov
rorb
xor
inc
mov
push
xor
mov
mov
lret
jge
sbb
ja
cld
popf
cld
sbb
pop
jge
js
into
aaa
xor
sbb
cli
pop
or
or
aam
dec
pop
icebp
add
sarl
loop
jp
stc
fwait
pushf
cmpsb
outsl
and
mov
sarb
sbb
mov
xchg
sbb
daa
pop
sub
xchg
lahf
and
push
test
inc
pop
and
xchg
push
and
mov
push
inc
sbbl
ss
rclb
int3
jns
les
shlb
outsb
repz
xchg
xchg
mov
jl
and
scas
sbb
mov
push
xor
cmp
xchg
adc
out
jne
push
mov
push
mov
pop
and
adc
cmp
nop
pusha
or
fnstenv
xchg
push
xor
aaa
fnstsw
leave
push
pushf
inc
push
scas
dec
retw
ficompl
mov
push
cmp
or
xchg
jns
inc
cmp
pop
dec
fnstsw
stos
cmp
sbb
iret
lock
xor
push
int3
test
insl
clc
in
test
mov
adc
pop
mov
stos
mov
or
nop
mov
repnz
repz
test
inc
jmp
jno
mov
mov
out
movsl
cmc
sub
jp
lret
imul
or
sub
jns
add
daa
lods
and
jne
sbb
fcoml
jmp
lahf
sti
push
xchg
jmp
hlt
jbe
movsl
stos
lock
xor
test
fldcw
rolb
not
fcom
mov
mov
xchg
sub
inc
es
jo
stos
dec
pop
fwait
adc
mov
sbb
test
sbb
stc
in
add
xchg
jae
push
xchg
add
sar
mov
pop
adc
add
stos
cmp
subb
xlat
inc
scas
add
and
sub
cmp
aad
mov
fs
pop
mov
mov
les
jp
cmp
xchg
imul
inc
ja
fiadds
mov
mov
xchg
mov
shl
test
lods
stc
push
mul
mov
mov
mov
sub
sub
mov
push
cmp
movsb
ss
and
fstl
mov
sbb
in
lret
lods
arpl
sbb
pop
jge
mov
inc
jl
out
dec
push
test
dec
add
stos
scas
or
dec
cmp
xchg
data16
shll
pop
mov
int3
cld
inc
hlt
inc
inc
dec
jno
out
mov
js
pop
xchg
repnz
in
cmp
push
xchg
jle
bound
rcll
insl
loope
mov
push
push
in
jmp
cmp
add
add
mov
mov
notb
scas
data16
out
jne
mov
inc
push
mov
popa
ss
ret
adc
aaa
mov
imul
fwait
repz
mov
jbe
push
mov
sahf
loop
push
ret
fsubs
mov
popa
shll
in
sub
mov
dec
mov
mov
jne
pop
ficoms
pop
std
fwait
jns
enter
push
sahf
add
dec
add
adcb
cli
add
lods
gs
gs
pop
push
adc
lss
or
out
pushf
sti
sbb
push
in
imul
shll
clc
mov
test
clc
lods
stc
lret
shl
lds
loope
jbe
cmc
inc
xchg
jo
cmp
ss
gs
pop
dec
push
sub
mov
push
data16
cmp
push
inc
lods
xchg
and
adc
jae
xchg
out
push
mov
inc
mov
inc
inc
popa
xor
mov
xor
jmp
jns
or
jne
adc
jns
cltd
fwait
cli
and
or
jge
pushf
pop
jo
sub
mov
pusha
lret
jbe
ret
cli
insb
cmp
inc
lret
out
fcmovnbe
sub
ret
sbb
mov
xchg
xchg
add
outsl
mov
test
push
jmp
pop
xchg
xchg
add
hlt
shrl
lods
xchg
jmp
out
lods
mov
push
lahf
mov
loope
in
xchg
sbb
imul
fwait
jne
adc
lret
add
lea
and
xor
sbb
jecxz
out
inc
xchg
in
aas
inc
xlat
sbb
setb
dec
int3
mov
gs
or
lods
mov
cmpl
jne
nop
enter
aam
stos
jmp
ljmp
and
iret
xor
test
add
scas
xor
bound
fstps
add
push
into
jne
mov
rol
jne
cli
rcrb
jnp
mov
inc
sub
jns
sbb
add
cmc
jne
xor
sub
ss
ds
or
andps
push
mov
or
ljmp
loopne
pop
stc
test
adcl
lcall
add
aas
mov
in
sti
sub
vorpd
pushf
roll
loopne
addr16
mov
sti
cmp
sbb
les
xor
scas
sbb
jo
test
inc
add
andl
xor
xchg
les
imul
xor
cmp
dec
fisubrl
nop
gs
out
or
insl
mov
lahf
fldenv
nop
outsl
pop
sbb
std
out
pop
jne
test
dec
jmp
ja
leave
cmp
lcall
dec
dec
mov
loopne
pop
pop
enter
out
fisttps
imul
jle
ja
insb
jb
adc
insl
das
out
add
movsb
roll
mov
jb
or
jo
pushl
and
xchg
leave
or
rorl
or
push
and
pop
adc
push
popf
jl
inc
adc
wrmsr
push
ljmp
stc
cmp
add
adc
dec
xor
add
imul
mov
test
aam
xor
insb
add
test
fmull
mov
sub
sub
aam
sbb
pop
ret
jns
dec
out
icebp
add
imul
data16
xor
divb
fcoml
sub
and
add
mov
mov
popf
stos
in
inc
or
sahf
inc
push
mov
push
sbb
andb
sbb
dec
xchg
jge
jp
pop
jl
adc
aam
fstpt
in
and
and
xchg
mov
cmp
dec
mov
repnz
clc
test
andl
mov
add
cld
cltd
pop
sbb
adc
lods
mov
xor
fsubr
movsl
or
cltd
dec
mov
fbstp
pop
xor
sti
jp
sbb
dec
jl
sub
pop
jp
into
sti
jge
scas
mov
mov
and
push
inc
sub
stos
loope
xor
cmp
push
movsb
mov
xor
cld
fmull
add
dec
pop
adc
notl
cld
mov
insl
cmp
pop
mov
mov
sarb
inc
idiv
add
mov
adc
pusha
sahf
inc
cwtl
clflush
cmp
pop
add
lock
or
fnsave
test
adc
popf
hlt
neg
pushl
xlat
ss
push
std
aam
xchg
fildll
xchg
xchg
add
mov
scas
xor
jl
in
and
loop
cltd
pop
cwtl
sub
cmp
clc
into
mov
sti
loope
out
dec
pop
push
inc
mov
lret
xor
and
testl
jnp
sub
pop
jo
sarl
jg
rcll
add
adc
jb
std
add
inc
cli
addb
data16
push
test
cs
xlat
jo
fs
daa
and
jg
rcrl
daa
fidivrs
gs
out
dec
mov
stc
push
fdivs
mov
pop
and
pop
jecxz
mov
jb
shlb
rol
loope
jge
lock
cmp
aam
and
mov
sarl
nop
or
add
xchg
pushf
and
rcrl
test
sub
pop
push
daa
sarb
pop
ljmp
pop
xor
push
lea
cs
xor
subl
sbb
sti
adc
pop
lret
mov
push
add
dec
xchg
mov
push
fistpll
cltd
pop
in
test
push
sub
jae
push
movsb
mov
jnp
mov
popa
sbb
negb
insl
insl
lret
enter
mov
lahf
dec
lock
movl
dec
cltd
push
adc
jle
ret
sti
repz
mov
mov
cwtl
adc
mov
pop
push
xchg
mov
dec
scas
push
aam
imul
clc
xchg
mov
jne
inc
mov
mov
mov
or
xor
hlt
lods
out
pop
push
mov
popa
xchg
push
jecxz
adc
repnz
xchg
in
inc
mov
push
jmp
inc
lret
mov
das
push
push
or
pop
dec
add
cmp
loope
xor
test
aaa
lea
xor
inc
xor
cwtl
sub
xchg
cmp
sbb
push
js
xchg
or
ljmp
icebp
enter
test
xor
mov
xchg
mov
inc
push
xchg
cli
xor
subb
mov
xchg
cli
insb
sub
scas
jg
xor
jb
inc
mov
jecxz
repz
xor
ds
jle
cvtps2pi
mov
mov
sbb
lods
add
mov
leave
enter
adcl
cmc
fnstenv
adc
jb
lea
push
pop
dec
lds
jno
dec
push
mov
pop
xchg
jge
movsb
mov
insl
or
out
mov
fnstenv
xchg
sbb
jbe
adc
jle
inc
lret
adc
mov
cmp
cmp
subb
sub
iret
mov
sbb
ret
adcb
cmc
xor
or
sbb
out
sbb
inc
cmp
inc
shll
imul
scas
jle
in
aaa
xor
roll
jne
lock
idivl
rcll
mov
imul
pop
test
adc
sahf
xor
stc
bound
or
pop
icebp
repz
cmp
popa
sbb
lret
or
movsl
adc
or
adc
jle
test
mulb
lods
jno
ret
push
mov
adc
jb
leave
in
add
nop
mov
sbb
ficompl
outsl
lds
subl
insb
xacquire
xor
leave
iret
popa
inc
loopne
cmp
adc
cmp
mov
dec
mov
data16
lock
mov
in
ss
jmp
bnd
out
stc
push
jne
xchg
lods
movsl
mov
xchg
mov
cmpb
add
inc
clc
adc
daa
or
dec
clc
mov
lock
stc
aad
repz
xor
and
mov
cld
and
repz
xor
xor
fmuls
inc
lock
sub
fdiv
test
inc
addl
sbb
std
popf
inc
inc
clc
mul
negl
mov
sub
fdivrp
mov
pop
pop
mov
movsl
sub
xchg
mov
movsl
aad
mov
inc
xor
pop
rorl
into
popa
test
push
pop
punpcklbw
popf
adc
push
mov
sub
pop
sub
jecxz
fdivrs
mov
movsl
imul
adc
push
pop
jp
clc
adc
push
pop
pop
jae
or
sti
mov
jo
loop
jmp
inc
leave
xor
jecxz
dec
add
in
imul
inc
sti
dec
es
mov
lret
inc
scas
xchg
mov
cmp
mov
or
pop
test
pop
mov
out
in
mov
sub
push
pop
std
cs
jecxz
xchg
in
outsb
rcll
or
push
cmp
cmp
cmp
icebp
mov
ficompl
aad
out
mov
jl
test
js
shlb
mov
mov
insb
pop
sbb
mov
cmp
push
sti
lea
scas
cmp
cmpsl
mov
push
mov
xor
call
xchg
add
gs
inc
xchg
ret
popf
push
mov
push
jne
dec
ret
ret
imul
jmp
in
imul
daa
push
stos
add
xor
movsb
pop
fistpl
jno
push
shl
cmc
lahf
add
test
loope
mov
shlb
dec
xchg
pop
outsb
cmovo
popf
add
mov
xchg
push
jmp
rolb
or
out
or
mov
aad
ss
bound
inc
movsb
shrl
push
outsb
imul
push
cld
push
cs
cmp
and
pop
mov
and
jge
dec
stc
pop
mov
pushf
pop
iret
jle
out
inc
jg
lahf
xor
aaa
in
test
call
mov
js
sbb
stc
sahf
mov
xor
mov
mov
imul
out
jge
inc
add
add
mov
imul
mov
call
xor
ret
daa
jp
pop
testb
cli
insb
hlt
mov
repz
cmp
sahf
cmp
test
repnz
cli
push
push
pop
add
cmp
cld
pop
repz
fcomip
xchg
shrb
xchg
orl
add
cmpl
inc
mov
adc
mov
or
cmp
or
aaa
aaa
xor
xor
orl
jecxz
stc
ret
call
xchg
jne
clc
push
or
jmp
sbb
insl
lret
lcall
or
mov
pop
pop
pop
pop
stc
add
pusha
mov
lcall
daa
add
xchg
xor
adcl
shrl
shr
or
mov
jno
repz
cli
dec
pop
mov
rcrl
add
rorl
imul
mov
pop
rolb
mov
mov
test
and
cli
mov
gs
fwait
push
aas
sti
shr
lods
sti
dec
xor
dec
xchg
ljmp
push
xor
inc
arpl
aam
les
mov
leave
stc
fucomi
loope
push
mov
sub
adcb
es
aam
fdivrs
scas
add
iret
into
call
cmp
out
xchg
mov
push
out
mov
in
imul
adc
add
popa
mov
loope
sbb
jge
mov
xchg
imulb
dec
jae
cltd
cmp
gs
pop
xor
sahf
adc
fwait
cli
cmp
cltd
les
and
cmp
into
rol
iret
movsb
mov
shlb
fisubs
pop
popf
sbb
sbb
ds
inc
push
mov
sub
xor
or
mov
popf
inc
cmp
test
repz
sub
add
ret
jmp
out
idiv
lahf
and
jne
push
dec
cwtl
xorl
pop
adc
xor
mov
and
mov
movsl
div
idivl
adc
mov
loopne
les
jo
pop
xchg
dec
or
sub
pop
xor
lret
dec
mov
movsbl
inc
ss
sbb
pop
cld
lahf
pop
int
xchg
popa
fmull
sti
ret
mov
pushw
xchg
filds
aas
je
ret
adcb
loop
cmpb
adc
inc
adc
sbb
or
cmp
test
hlt
pop
jge
test
repnz
mov
stos
ror
jecxz
test
pop
cwtl
pop
xchg
scas
flds
lcall
dec
shll
mov
shrl
into
dec
aad
xlat
data16
fistl
lods
inc
ret
rclb
les
pop
jl
mov
or
movsb
adc
mov
test
cmc
test
bts
test
div
xchg
dec
scas
js
rcrl
lret
mov
loop
ret
and
addr16
iret
out
sub
repz
ljmp
in
jmp
in
inc
lahf
jns
mov
jb
push
popa
xor
sub
push
dec
leave
ljmp
sbb
jl
stos
push
rcrb
outsb
fsubrl
mov
adc
ret
and
sub
mov
aam
sub
adc
pop
lret
mov
cmp
mov
mov
scas
pop
xchg
je
pusha
inc
jae
xor
movd
lcall
int3
lret
ret
xchg
scas
or
mov
scas
sbb
aas
mov
pop
std
pop
mov
arpl
mov
frstor
scas
inc
inc
fwait
push
xchg
dec
pop
fistpl
pop
mov
xor
xlat
jno
pop
cmp
mov
add
in
inc
adcl
sahf
or
push
mov
test
pusha
daa
mov
pop
push
fwait
test
mov
es
mov
in
push
in
fisubrl
mov
cmp
inc
add
lds
fsub
stos
inc
xchg
cld
push
mov
jecxz
lds
out
and
mov
cltd
decl
pop
mov
cmpsl
and
lcall
jecxz,pt
in
jnp
mov
mov
cmp
js
pop
insl
pop
pop
fildl
ret
mov
fiaddl
add
mov
outsl
loope
push
inc
mov
sub
lock
lods
mov
fcmove
inc
ja
push
jecxz
or
jecxz
and
gs
fnsave
inc
aad
insb
cmp
sti
ficoml
cmp
loope
inc
loop
sub
mov
dec
mov
and
popa
inc
jle
shrl
xchg
and
mov
bound
insl
mov
sub
push
sbb
mov
push
dec
mov
cmpsb
mov
adc
enter
enter
testb
add
lds
cs
cli
mov
xor
dec
fmull
mov
sahf
jns
stos
xor
mov
push
xor
imul
les
outsb
push
xchg
pop
aaa
popa
mov
pop
addr16
subb
popa
jae
push
jl
sbb
leave
push
in
mov
stos
in
pop
push
fsubrl
sub
repz
xor
outsl
pop
fwait
rolb
sbb
mov
leave
rorb
pop
mov
pop
neg
pop
dec
shrb
adc
mov
add
pop
icebp
jge
dec
add
inc
rcrb
arpl
cmp
pop
and
inc
and
add
or
pop
jne
jbe
jle
mov
sti
leave
aad
outsb
popf
push
fnstcw
sub
sbb
scas
push
lods
rolb
scas
pop
pop
in
cltd
aam
inc
lret
and
xor
daa
adc
mov
add
enter
imul
je
push
and
mov
dec
pop
cltd
popa
cltd
fstpt
jl
out
lods
aam
dec
daa
shll
movsb
inc
cmpsl
adc
mov
mov
and
cmpsl
adc
xchg
fimuls
cmpb
cmpsb
addr16
add
pop
jnp
fsubrl
scas
inc
add
inc
mov
mov
enter
cmp
mov
dec
adc
arpl
stos
cmp
sbb
mov
add
mov
pop
lret
pop
pop
push
ret
xorl
cltd
cmc
lahf
stos
mov
dec
sub
sub
out
and
push
sbb
add
mov
cmp
sub
shlb
jp
mov
jmp
aad
lret
hlt
push
xlat
dec
rol
jecxz
xchg
dec
xchg
cmpsb
mov
or
daa
repz
es
mov
ret
push
mov
xlat
leave
mov
aas
xchg
xor
xchg
andb
pop
adc
outsb
and
ss
xlat
lds
shrb
lret
mov
cltd
inc
out
and
fsubs
push
les
cli
jp
jo
cmpsb
push
fucomi
add
mov
out
inc
test
lahf
pop
lds
fs
adc
mov
mov
mov
shrb
aam
xchg
add
stc
cld
cwtl
jns
mov
jmp
vaddsubps
mov
shrl
fwait
arpl
out
dec
dec
xchg
and
hlt
sbb
sub
cmpsb
xor
mov
ret
inc
int
cmc
call
xchg
out
js
mulb
int3
rcrb
dec
sbb
js
pop
aam
push
sbb
pop
jmp
push
lahf
dec
jge
insl
jb
fstl
mov
or
js
cmp
sbb
fdivr
sub
sar
pop
adc
xchg
jae
lock
mov
add
xor
mov
int3
dec
pop
dec
or
sbb
aaa
popa
fsts
lahf
ds
mov
mov
xchg
xor
push
arpl
jl
arpl
bound
xor
pop
mov
xor
jo
pop
test
repz
push
xchg
fists
fcmovnu
out
jl
je
add
sbb
test
scas
clc
filds
lret
sbb
jnp
outsb
and
jbe
sbb
movb
mov
mov
test
xchg
fmuls
popa
cltd
xchg
mov
cmpsb
or
or
or
sub
xor
add
in
mov
xor
stos
mov
aad
out
addr16
dec
sub
fdivs
fs
stc
mov
sub
in
iret
adc
cld
inc
fstl
aam
movsl
adc
jbe
ret
in
in
lock
gs
dec
rcr
repz
lods
mov
dec
fdivrp
cmp
and
mov
jl
lea
pop
jae
scas
addl
jno
leave
call
call
or
insl
dec
dec
hlt
mov
inc
inc
and
mov
cmp
add
add
js
xchg
push
or
ror
push
cmp
lahf
inc
imulb
jbe
mov
adc
fadds
mov
mov
push
adc
jecxz
je
inc
fnstsw
nopl
out
sbb
sub
mov
inc
mov
and
xchg
sarb
movsl
dec
hlt
lret
or
xor
fisubl
faddl
add
es
mov
aas
xchg
inc
test
mov
adc
mov
xchg
nop
xor
jae
into
ljmp
cltd
nop
adc
dec
sub
cmp
divb
out
fistpl
add
iret
fmull
jg
mov
or
add
push
pop
mov
lcall
das
std
sub
fnstsw
sbb
push
jnp
fsubrs
adc
xchg
mov
sbb
call
sbb
mov
lcall
jmp
loope
inc
popf
mov
subb
mov
mov
pop
or
adc
cmp
or
xchg
jecxz
sbb
mov
daa
sahf
dec
push
and
jns
jecxz
cmp
iret
mov
jmp
dec
repz
or
and
mov
push
outsb
pop
mov
ret
mov
add
pusha
push
incb
adc
dec
ss
pop
push
into
dec
js
sbb
stc
and
adc
mov
add
adc
popa
add
in
movsb
aad
mov
imul
jle
pop
mov
mov
pop
lea
sub
pop
call
inc
out
mov
ljmp
xchg
pop
pop
pop
xchg
bound
out
loop
and
cmp
sbb
push
inc
sarl
adc
inc
mov
jecxz
gs
jno
adc
repz
shl
xorl
pop
daa
aas
jbe
xchg
xlat
pop
push
arpl
call
push
mov
push
push
gs
fimuls
dec
sbb
xchg
sub
mov
int3
push
mov
inc
addr16
jae
ljmp
in
mov
and
sub
cli
pop
or
dec
ds
xor
inc
lahf
pop
enter
stos
outsl
jns
sarb
mov
xlat
das
fdivr
xchg
jg
addb
push
mov
repz
and
movsl
lods
adc
insl
ret
xor
insb
test
lods
xor
xchg
push
cld
lcall
xchg
hlt
and
or
fs
dec
inc
adc
mov
jg
nop
pop
jmp
cmp
out
outsb
xchg
clc
and
bnd
fs
or
fwait
sub
mov
fwait
into
xor
or
mov
jo
aas
jge
add
pop
dec
je
or
mov
push
cmc
jns
dec
loop
and
sahf
fisttpl
or
je
js
or
repnz
lds
push
jecxz
or
dec
mov
fistpll
xor
xor
add
mov
mov
dec
movsb
and
movsb
and
push
push
dec
gs
adc
aaa
cmpsl
int3
or
push
cmp
dec
call
insb
mov
xor
lods
into
fucomi
addr16
cli
call
add
test
frstor
cld
out
xchg
jg
xor
ret
ja
test
xchg
jns
xor
movsb
outsl
fs
adc
inc
out
rol
cmp
fabs
dec
cltd
adc
andl
nop
jmp
push
gs
sbbb
int3
sbb
sub
xchg
std
rcll
xor
stos
divl
dec
and
pushf
out
xor
mov
cmp
xchg
mov
loope
jge
das
and
loop
pop
sub
or
mov
sbb
mov
xchg
rcr
xchg
pop
push
xchg
rclb
dec
imul
in
inc
push
push
lret
movsl
push
out
ss
mov
mov
sarl
dec
call
xor
lods
cmp
lea
and
mov
testb
fstl
or
cmpsl
lods
jne
adc
mov
lahf
inc
lods
push
xchg
xchg
out
fsubl
dec
mov
roll
insl
sarl
and
ss
jmp
pop
nop
jae
mov
inc
sub
xor
testb
jmp
or
xor
xor
inc
sub
inc
bound
pusha
sti
stos
xlat
or
imul
in
dec
scas
sub
int
inc
add
inc
ret
sub
int3
dec
sti
in
mov
push
jg
and
pop
push
jg
test
add
fildll
ret
std
repz
adc
bound
and
fldl
mov
bound
loop
xor
into
mov
js
mov
mov
int
aas
jp
out
js
in
daa
lods
test
out
pushf
ror
int
push
popf
in
xchg
call
add
pop
pop
sbb
mov
bound
pop
pop
das
jp
jbe
xor
sti
jle
outsl
enter
xor
jge
fs
pop
inc
jnp
xchg
lret
xchg
xor
push
push
inc
lock
dec
rorb
xchg
mov
add
in
je
mov
sub
inc
push
divb
rcrb
movsb
push
sub
ljmp
jo
mov
push
dec
jns
push
rcrl
pusha
jno
sbbl
inc
cmp
or
std
add
dec
in
pop
scas
and
xor
mov
dec
sti
fldt
jo
lahf
addr16
sub
lret
inc
insl
repz
pop
or
stos
int
xchg
mov
je
xchg
mov
add
xor
pop
cs
nop
push
inc
sti
push
lcall
jo
sbb
lods
addr16
inc
loope
mov
mov
loopne
cmp
cmp
push
inc
insb
jne
sbb
mov
or
sbb
or
push
lods
cltd
mov
popa
lret
mov
popa
and
push
stos
jno
sub
sbb
jb
idivb
popf
xorl
cmp
lods
call
jnp
adc
outsb
mov
ffree
dec
out
dec
ret
push
iret
mov
jmp
push
out
xchg
enter
scas
xor
mov
lods
push
pop
push
aad
sbb
mov
mov
or
sahf
in
push
push
mov
mov
sbb
dec
jnp
or
inc
mov
out
jno
lea
fwait
icebp
jp
sti
cmp
mov
jmp
inc
and
fdivrs
pop
push
es
repnz
pop
xchg
sub
fdivrs
mov
xchg
mov
push
xor
divb
cld
fidivl
xchg
popf
ja
sub
insl
jne
push
add
inc
scas
mov
mov
shll
push
xor
pop
icebp
pop
push
sbb
pop
pop
out
daa
cmp
mov
or
pop
aas
or
or
scas
cmp
xor
or
insb
sbb
mov
aam
lods
and
xor
pop
pop
add
sub
lret
incl
lea
cmp
int3
mov
lea
hlt
mov
lods
ds
push
cmp
dec
popa
ss
push
mov
iret
xchg
fisubl
inc
insb
gs
inc
push
inc
pop
daa
mov
pop
fiadds
test
jae
pusha
mov
es
in
jae
or
mov
and
sbb
inc
pop
cwtl
mov
cmp
jnp
jae
dec
mov
xchg
push
sbbb
mov
insb
stos
inc
cmpsb
mov
dec
or
adc
in
jle
je
stos
int3
jb
mov
sub
adc
inc
xlat
or
ror
xchg
xlat
mov
mov
in
dec
lods
pop
jecxz
push
and
iret
jle
fwait
aas
repnz
push
es
push
ljmp
nop
push
sub
outsl
shlb
in
and
adc
imul
je
fistps
mov
fisubl
mov
bound
icebp
xorb
inc
push
fistpll
fdivrl
movsl
push
icebp
cli
mov
mov
das
aam
ss
loopne
test
sub
jnp
lret
pop
arpl
insb
daa
das
and
in
and
scas
rclb
jne
dec
dec
lock
sbb
sub
iret
or
and
jae
sbbl
pushf
lret
add
clc
fcomi
sub
popf
dec
and
arpl
adc
sbb
xchg
outsl
cmp
fwait
ret
xchg
or
icebp
xor
mov
clc
mov
push
xor
and
xor
jno
cmpsb
push
js
xchg
xchg
push
mov
mov
adc
push
xchg
fists
call
test
adc
mov
lds
pop
stos
in
mov
xor
int
test
loopne
sbb
push
jmp
in
pushf
sbb
jle
stos
lcall
sbb
cwtl
cmp
jns
sub
push
add
fadds
jns
push
jecxz
pop
lcall
mov
dec
push
sub
push
aaa
xor
fisubrs
push
cmc
aad
xchg
fimull
sbb
in
adc
xor
mov
stos
add
pushf
scas
cmc
mov
xchg
pop
xor
dec
push
push
lret
or
jle
loopne
adc
movsb
jl
aam
add
stos
outsb
dec
xchg
in
mov
cmp
sub
addb
daa
es
jnp
adc
mov
ss
xor
out
push
loopne
dec
jno
mov
aas
fcmovne
inc
ss
out
sub
insl
inc
xchg
or
inc
jnp
lret
mov
ret
mov
pop
pop
fdivs
inc
mov
pop
and
lock
nop
add
test
ljmp
rcr
ds
gs
xor
jl
xchg
push
cmpsb
mov
insl
roll
xchg
sub
sub
push
mov
movsl
push
loop
jp
cltd
mov
unpcklps
push
sbb
mov
inc
mov
out
cmpsb
jecxz
pop
cwtl
negb
stos
repz
je
pusha
lock
mov
mov
pop
aam
xor
mov
shll
push
jmp
jae
sbb
xlat
sbb
jae
fucomip
outsb
roll
xchg
push
sarl
pop
icebp
xlat
jo
dec
ljmp
push
int3
sub
jmp
cwtl
xchg
push
jmp
adc
fists
fstpt
mov
adc
jp
push
jge
cmp
pop
inc
adc
push
cli
mov
xchg
xorl
mov
call
pop
and
cmpsl
or
and
or
sarb
out
jl
out
jecxz
mov
xor
or
in
clc
aam
fsubrs
xlat
daa
sub
pop
add
cmpsb
lahf
mov
cmpsl
cmp
jecxz
lret
mov
lret
sub
ds
out
push
gs
out
arpl
arpl
rclb
pop
addr16
inc
pop
sti
push
adc
stos
fsub
jg
das
inc
out
mov
in
ss
xor
sbb
flds
push
cmp
std
push
cmp
dec
scas
adc
adc
add
adc
movsl
pop
loope
xchg
fnstenv
pop
lahf
popa
les
pop
call
pop
jae
lods
ss
out
mov
pop
mov
add
inc
inc
push
rcr
push
inc
add
mov
fcomps
dec
ret
jg
mov
pop
jg
dec
cmc
ret
jg
fcompl
sbb
hlt
jno
xor
xor
call
hlt
mov
cli
or
sbb
push
xchg
cmpsl
insb
jecxz
xchg
adc
mov
nop
shl
sub
scas
das
mov
push
jecxz
lea
popf
pop
loopne
loopne
adc
sub
add
lods
pop
testl
sub
jns
hlt
mov
or
test
les
les
fists
orb
jl
test
sub
push
xchg
push
push
repz
cmc
je
xor
mov
popa
mov
xor
ror
sbb
in
jne
add
xor
inc
subb
mov
or
add
mov
add
sbb
test
addr16
xchg
inc
dec
sub
subb
mov
pop
cwtl
or
push
repnz
push
or
mov
mov
adc
cwtl
sti
mov
in
mov
enter
ret
push
leave
lods
arpl
xor
xor
mov
out
nop
jmp
test
out
mov
popa
pop
or
lea
or
pushl
sub
xchg
mov
xchg
iret
cmc
sub
jno
dec
lret
and
push
pop
scas
cmp
lock
ret
xchg
xchg
rolb
lcall
gs
mov
mov
repz
mov
negb
inc
push
scas
mov
enter
ss
dec
sub
enter
loopne
or
out
jecxz
xor
lret
ret
jecxz
push
sbb
ret
xor
faddp
hlt
jmp
add
inc
lahf
jl
dec
pop
mov
js
insl
jp
loopne
lock
push
lcall
adc
aad
mov
xor
gs
leave
push
or
ret
dec
addr16
ljmp
push
dec
clc
shrb
pop
pavgb
ja
cli
stc
rcrb
push
cmp
orb
inc
mov
dec
cmp
inc
fldl
sub
iret
dec
push
mov
adc
pushf
das
into
out
dec
ja
dec
push
stos
scas
push
mov
xor
sbbl
jg
aam
inc
sub
lea
sub
or
mov
cmp
dec
dec
inc
xchg
lods
mul
insb
pop
or
or
bound
out
sub
push
insb
outsb
jmp
add
movsb
xor
and
and
pop
sbb
test
setae
pop
movsl
xlat
aad
mov
jbe
imul
inc
lcall
lcall
jp
pusha
popa
jmp
lods
jmp
jle
mov
sahf
or
mov
jo
cltd
and
daa
pop
out
and
mov
addb
adc
out
xchg
and
dec
daa
mov
ret
sub
rclb
sbb
pop
jl
sti
shl
push
adc
mov
pop
mov
insb
subb
xlat
mulb
xchg
add
push
pop
mov
addb
daa
cmpsb
scas
pop
test
xor
jbe
push
xor
mov
mov
stos
add
mov
lcall
jb
xor
lret
xlat
adc
adc
push
movsb
jbe
xchg
or
mov
mov
jmp
test
scas
sti
xchg
push
and
jno
add
std
stc
sub
push
dec
iret
xor
dec
test
repnz
sbb
jnp
imul
dec
jno
xchg
push
adc
cmp
popa
jl
icebp
stos
push
daa
cmp
aas
rcll
add
mov
adc
jbe
mov
adc
jb
xchg
scas
lods
fadds
and
sbb
rcrl
rorb
or
imul
test
add
inc
repz
sub
xlat
mov
aad
idivb
imul
pop
pop
sbb
subl
xor
out
ja
add
sub
dec
je
push
adc
frstor
jo
push
popa
cs
or
mov
jo
pop
pushl
clc
lock
sub
adc
and
fs
lahf
pusha
add
xor
mov
xchg
inc
repz
arpl
mov
rcrb
push
stos
scas
push
xor
ja
cltd
sbb
hlt
lret
les
fwait
mov
leave
pushf
jnp
leave
hlt
ret
inc
jl
push
sub
sahf
or
aam
add
loop
shl
pop
out
adc
lea
mov
aas
jecxz
in
mov
test
sbb
lds
xchg
jno
iret
push
nop
xor
out
ret
cmp
mov
jne
repz
xchg
data16
in
test
dec
and
push
test
xchg
cmp
mov
aaa
jo
sub
fstpt
scas
mov
insl
jg
add
dec
insb
xchg
sub
push
pushf
mov
lods
xchg
test
fcomps
mov
cmp
leave
jae
push
sub
mov
fstpl
mov
cmp
mov
sbb
sub
adc
push
jg
sti
scas
cmp
cmp
or
dec
aad
mov
test
popa
xor
mov
loop
not
sbb
xchg
pop
sbb
xchg
ret
push
cmp
mov
outsl
insl
xlat
mov
inc
jne
scas
pop
out
mov
adc
xor
aas
mov
and
lahf
pop
cmp
push
rcll
xor
cmp
repz
mov
push
cmpsb
mov
jns
aam
clc
mov
cwtl
shlb
lret
rorb
sub
push
into
and
mov
test
fwait
test
sbb
push
flds
in
daa
in
mov
sbb
xor
mov
or
push
pusha
std
add
je
push
std
cmp
jmp
sub
ja
pushf
cwtl
mov
iret
aaa
call
cmpsl
xchg
mov
dec
inc
leave
cld
adc
push
sub
sub
fidivl
sbb
adc
movsb
inc
xchg
test
cmp
jl
std
repz
outsl
or
push
push
imull
fdivr
iret
mov
pop
mov
inc
sti
adc
cmp
lods
sub
popf
and
add
std
cmp
push
das
or
mov
cmpsl
dec
out
ret
push
jae
push
ret
in
dec
push
cs
dec
ljmp
imul
subl
cmp
loop
out
xor
je
sub
stc
popa
ss
push
js
and
jne
mov
mov
pop
pop
jle
pop
cmp
data16
sub
xor
pop
cmp
cmpsl
int3
pop
fcmovb
out
cld
sub
aas
or
pushf
daa
mov
pop
cmp
mov
ja
insb
in
mov
push
pushf
into
add
add
xor
or
inc
mov
cmp
lret
decb
popf
aas
in
icebp
xchg
jae
and
jbe,pn
lods
add
inc
push
and
xlat
cld
dec
push
cwtl
jo
jmp
aaa
jne
arpl
fwait
cmp
movsl
cmp
jns
sub
jne
sahf
inc
or
ss
movsl
cld
daa
pop
out
je
pop
xor
outsb
push
adc
mov
push
jle
inc
adc
mov
clc
xor
add
ss
pop
int3
mov
jno
mov
pop
frstor
es
jmp
loope
call
push
mov
mov
hlt
xor
rorb
fsubs
jp
repnz
mov
mov
lock
dec
insb
test
fistps
lret
cmp
sbb
aaa
je
ss
pop
fstpl
mov
aaa
lcall
adc
fdivl
dec
mov
push
les
push
pop
ret
push
or
int
push
inc
inc
push
xlat
int3
mov
stc
loopne
js,pn
imul
out
mov
cli
imulb
xlat
inc
jg
jae
push
outsl
xchg
int3
mov
pcmpeqb
nop
cmp
mov
icebp
fisubrl
imul
push
mov
adc
jno
rorb
int3
cmpsb
inc
cmp
push
mov
inc
leave
ud1
popf
out
lcall
jae
mov
ja
push
add
in
jnp
dec
or
imul
ljmp
and
pop
stc
in
inc
mov
xchg
pop
icebp
lret
xor
fisubrs
scas
mov
dec
add
sbb
stc
dec
push
cmpsb
jl
cmp
push
dec
mov
xchg
push
pushf
xor
jns
mov
enter
out
or
fs
sub
arpl
push
push
ret
inc
add
std
sbb
loop
cwtl
pop
in
push
mov
es
loop
add
pop
add
sbb
sub
idivl
inc
insl
fistpl
adc
imul
popf
add
data16
push
fistps
gs
mov
call
pop
push
sbb
sti
fisubs
loope
enter
jno
shufps
pushf
jne
jp
pushf
mov
stos
dec
test
fcomip
jl
pop
xchg
xchg
in
sbb
mov
inc
jp
push
add
xor
inc
and
cmp
outsl
cs
sbb
rolb
scas
pop
roll
into
push
sbb
cmpsl
jmp
mov
and
push
lcall
leave
pop
push
sub
push
lods
dec
sbb
mov
adc
pop
inc
dec
dec
shrb
push
and
sub
sbb
cmp
and
inc
dec
inc
addr16
lock
lret
fisubrs
jle
add
xchg
cwtl
or
inc
mov
fldt
xor
mov
lret
cwtl
mov
xor
adc
mov
or
push
je
dec
fisubrl
mov
int3
fnsave
mov
push
mov
inc
js
xor
push
ljmp
mov
pop
out
fbstp
adc
pop
mov
mov
lahf
xor
insb
pop
jge
add
adc
xchg
cwtl
xchg
mov
xchg
sar
cmc
arpl
mov
cmpsl
xor
dec
pop
adc
lret
push
out
clc
ljmp
ror
mov
jle
cmp
add
aam
mov
xlat
imul
lcall
pop
pop
cli
pop
inc
aad
out
add
in
mov
adc
add
bound
xor
or
mov
gs
xor
xchg
in
jmp
xlat
out
mov
inc
notb
sahf
movsb
popf
mov
mov
xorl
lret
add
cwtl
cli
pop
fstl
mov
test
fwait
shlb
and
pop
daa
test
add
push
mov
pushf
mov
jnp
rcl
iret
inc
inc
mov
push
std
popf
addb
mov
pop
pop
popa
gs
xlat
sbb
dec
adcb
add
sub
cmp
mov
fbld
push
jge
cmp
imul
mov
or
mov
out
pop
jne
loope
pop
and
and
cmpsb
in
inc
dec
lahf
cmp
pusha
adc
aas
lret
aas
sub
je
fsubl
push
mov
push
icebp
insl
mov
es
aaa
sbb
jl,pt
pop
lcall
push
subb
shr
adcl
fdivrl
fidivs
imulb
leave
push
loope
and
cmp
jle
lds
jmp
inc
out
nop
mov
add
mov
sbb
push
mov
inc
cli
push
sti
sub
jns
popf
movsb
mov
push
or
cwtl
adc
out
dec
imul
lahf
insb
stos
and
data16
or
mov
add
push
jl
rcrb
into
or
sub
and
in
pop
ss
and
mov
inc
cmp
fisubs
jnp
into
pusha
dec
lods
jl
mov
mov
mov
adc
out
inc
cwtl
scas
int3
pop
inc
adc
stos
scas
bound
cmpsb
push
and
in
mov
mov
testb
shlb
jmp
ljmp
mov
sub
enter
lcall
mov
xchg
addr16
xchg
js
dec
fldenv
cmc
je
jl
cli
fistpl
cmp
movsb
test
ja
xlat
pop
mov
cwtl
push
loope
jne
pushf
pop
pop
push
push
enter
shrb
pop
sub
data16
aad
fildll
rorb
lret
fidivrs
cltd
out
movsb
pop
xor
daa
lods
repz
adc
lds
idivb
and
or
jns
outsb
sahf
adc
xor
sahf
subl
inc
sbb
sbb
xchg
out
push
mov
add
mov
cmc
out
pop
test
test
ljmp
shlb
lea
rorl
sbb
in
lret
dec
and
ret
rcl
sub
iret
cmp
sarb
inc
mov
cmp
pop
fisttps
ds
shrb
xor
mov
push
es
mov
icebp
push
cmp
xchg
xchg
enter
jle
enter
and
xlat
dec
imul
les
pop
fimull
cmp
aam
and
adc
add
and
dec
pop
mov
addr16
les
insb
pop
sar
xchg
lods
insb
jp
xchg
lods
xor
pop
scas
mov
xlat
popf
push
int
or
xorb
add
mov
repnz
dec
mov
test
push
xchg
bound
in
imul
inc
and
movsb
sub
mov
add
dec
pop
orl
test
ret
imul
sub
cld
inc
adc
aas
mov
scas
or
fs
jge
out
add
jns
dec
add
sbb
xor
aas
mov
cmpb
aas
cld
cmpsb
aas
ret
dec
popaw
fwait
adc
cltd
mov
mov
xchg
jne
test
ret
xchg
sub
xchg
xchg
dec
cmpsb
stc
popa
out
jo
pop
imul
jg
repz
push
test
or
lahf
jns
xchg
mov
mov
loopne
daa
or
pusha
cmp
mov
out
clc
add
sub
in
lahf
rol
mov
mov
push
cmp
cmpsb
xor
sub
jl
mov
adc
adc
dec
mov
jo
cmpb
mov
lds
inc
push
cmpsb
or
lret
popl
leave
stos
push
notb
sbb
clc
lods
imul
pop
in
ret
scas
inc
xlat
fidivs
insl
adc
push
daa
das
xchg
in
stos
inc
fwait
daa
rolb
call
jno
dec
lods
imul
js
sub
sbb
mov
pop
adcb
or
sub
lea
pop
push
fcomip
push
insl
jge
push
sarb
push
and
xor
dec
dec
adc
adc
dec
xchg
cwtl
xchg
mov
imul
inc
or
rorl
mov
nop
jne
xchg
pop
add
dec
ss
jl
ljmp
mov
add
pop
push
pop
add
xchg
and
in
das
lods
sub
push
das
fistl
jb
mov
mov
sub
dec
cmp
pop
out
add
std
call
lods
or
popf
dec
and
sti
out
sub
adc
and
jp
pop
mov
clc
pop
push
lea
and
cmp
jg
sub
or
xchg
sub
sahf
mov
pop
sti
adc
lea
gs
call
push
adc
lds
or
add
push
insb
add
xchg
pop
xlat
stos
xchg
into
pop
shll
in
mov
outsl
jnp
sbb
push
or
loope
stc
inc
dec
jp
xlat
call
cmpsl
mov
cwtl
mov
mov
sbb
xchg
lods
push
push
adc
and
icebp
inc
adc
cmpsl
pop
fiadds
mov
xchg
adc
fsqrt
jno
inc
cmp
aaa
xchg
mov
pop
cltd
xor
inc
je
mov
mov
pop
paddw
add
push
and
ret
or
push
mov
in
pop
repz
add
aaa
cmp
fdivr
pop
jno
imull
push
cmc
lret
out
cmp
pop
stos
or
mov
ret
stc
mov
and
cltd
lea
jecxz
cmp
xchg
shrb
adc
dec
xor
mov
push
mov
mov
dec
in
mov
scas
sub
sub
repnz
imul
or
scas
mov
add
shll
cli
dec
xor
testl
fldt
data16
jmp
sub
mov
ficoml
nop
aad
int3
mov
jg
subl
push
jge
jbe
xchg
fisubl
popa
imul
and
movsb
out
ds
test
cmp
outsl
popf
jp
shll
nop
shr
negl
cmp
push
int
lock
ja
icebp
jnp
xor
sub
push
repnz
push
jnp
rcr
daa
cmp
dec
mov
mov
sub
xchg
sub
xchg
push
and
xchg
in
and
jecxz
sarl
jmp
shl
hlt
jge
mov
mov
pushf
push
inc
xor
lock
out
pop
dec
jle
jo
shrl
mov
or
dec
sahf
sbb
cli
inc
mov
cltd
jo
hlt
out
cmp
or
xchg
jle
xchg
lock
inc
dec
xchg
push
jns
push
lock
xlat
lret
gs
pusha
and
dec
sub
or
push
enter
not
aaa
out
ret
es
outsb
add
stos
mov
sbb
cmp
outsl
stc
lahf
ret
fcmovne
in
pushf
xor
ljmp
scas
xchg
or
xor
dec
in
dec
fsubr
sbb
dec
movsl
dec
inc
inc
imul
pop
incb
mov
lds
std
pop
adc
mov
xchg
mov
lds
pop
out
jo
xlat
cmpsl
adc
stos
sar
cli
or
scas
daa
sbb
inc
imul
pop
push
push
inc
fists
push
into
outsb
push
ret
pop
pushf
push
pop
xor
or
andb
repnz
mov
push
das
aad
into
cmc
sbb
jb
data16
xchg
mov
fildll
xlat
fs
push
cmp
sbbl
insb
add
pop
sub
pop
mov
adc
or
idiv
mov
push
cltd
sub
ret
test
mov
mov
ss
xchg
inc
xor
xor
mov
les
mov
aaa
les
gs
gs
mov
cmp
jmp
cmp
adc
push
sub
addb
test
orl
push
inc
push
mov
mov
loope
adc
xchg
pop
push
movsb
add
outsl
aad
jo
pop
adc
fsubrl
mov
out
jb
mov
dec
movsl
jmp
xor
pop
dec
shll
mov
out
rep
mov
pop
jnp
arpl
add
xchg
pusha
or
jp
negl
mov
jp
dec
mov
pop
stos
mov
inc
rolb
ds
outsb
pop
pop
fstpl
pusha
icebp
add
dec
cmp
arpl
cmpb
cmp
incl
pop
fmul
sub
sub
loopne
add
out
jno
push
frstor
lods
cmpb
adc
xor
cmp
sti
xor
bound
loop
repnz
xchg
cmp
pop
insb
and
shll
mov
clc
int3
xchg
push
pop
xor
les
xor
or
dec
ficomps
lcall
jmp
ljmp
push
ret
sarb
push
mov
mov
lahf
or
add
adc
mov
adc
test
or
pop
sub
movsb
shrl
mov
and
push
scas
mov
cwtl
jle
jp
roll
loope
pop
outsb
push
pop
dec
fnstenv
xchg
push
pop
test
movsl
adc
test
sti
and
jmp
mov
loope
xor
js
std
push
mov
faddl
or
imul
cmp
pop
div
cmc
ret
in
sub
mov
mov
xchg
test
imul
dec
jnp
xor
or
jns
mov
aaa
mov
ret
mov
mov
lcall
push
movsl
cmp
cmp
xchg
out
xchg
pop
xchg
rclb
xchg
jecxz
stos
xchg
inc
mov
gs
adc
cmp
push
mov
pop
ja
and
imul
pop
sbb
iret
cmpsb
adc
xor
es
mov
loope
cld
sbb
mov
pop
cmc
in
fistpll
int3
sub
or
push
int
push
js
push
add
ljmp
mov
sub
outsl
ret
inc
in
fidivrl
sbb
lcall
ret
jle
out
pop
loop
sbb
adc
cwtl
xchg
cmpb
mov
insl
add
or
stc
xor
inc
subb
jg
dec
adc
sub
jb
or
mov
les
in
aad
or
imul
xchg
in
adc
mov
sub
negl
mov
ss
cmp
test
jmp
push
cmp
pop
arpl
lahf
cmp
cs
and
incl
insl
mov
popf
out
mov
stc
lcall
aam
outsb
jmp
inc
jno
sahf
mov
arpl
mov
and
loopne
pop
fs
jle
pop
jge
rorl
mov
mov
inc
xchg
and
das
cmp
call
jecxz
in
test
inc
aad
push
mov
arpl
xrelease
out
je
loop
nop
mov
sub
out
test
mov
pop
leave
fs
sbb
and
fisttps
sti
cs
iret
fwait
pop
sub
xchg
jno
rclb
or
es
call
add
xchg
lea
nop
lods
push
and
inc
test
or
mov
pop
jl
add
xor
push
mov
aam
pop
push
sbb
adc
add
outsl
dec
bound
jo
in
std
loope
adc
test
cltd
std
fs
pop
sbb
and
xchg
cwtl
aaa
fcompl
push
sahf
ds
pop
xor
cmp
test
sbb
sub
mov
cmp
xlat
data16
es
inc
ss
cld
mov
pop
popf
movsl
xchg
xchg
xchg
sbb
cmpsl
dec
adc
ss
or
mov
mov
loope
xchg
adc
jne
mov
test
mov
push
lea
xor
outsl
rolb
pop
mov
mov
inc
and
sti
inc
jno
mov
out
fimuls
mov
and
mov
xor
and
pop
gs
mov
fstps
fisubrl
cltd
adc
shll
push
fmuls
cmpsb
mov
shlb
mov
push
mov
roll
xlat
in
stos
imul
or
dec
dec
incb
hlt
jg
mov
and
fldt
push
insw
add
xchg
out
jae
js
push
into
adc
inc
inc
mov
pusha
or
loope
and
mov
out
pop
xchg
xchg
daa
cmpsl
gs
test
stos
fnstenv
adc
lret
aam
mov
leave
shl
adc
int3
jns
or
aas
dec
xchg
cmp
inc
std
addb
je
lcall
les
jne
mov
das
or
xchg
lds
dec
addl
pop
xchg
inc
push
sbb
sub
lahf
int
ret
loop
push
xor
les
inc
cli
aam
lret
mov
push
jge
sbb
xchg
add
sbb
adc
inc
out
int
xchg
aam
punpckldq
mov
push
fwait
mull
xor
roll
lahf
cmp
adc
jno
ror
sub
pop
mov
and
xchg
jg
xchg
push
sbb
dec
bound
test
push
mov
js
jg
and
inc
addr16
or
inc
aad
push
bound
hlt
mov
aas
rclb
movsb
sub
pop
mov
pop
ss
adcl
arpl
cmp
xor
nop
jae
aam
dec
push
mov
popf
aas
leave
icebp
xor
dec
fmuls
cmp
fsubl
ss
xchg
jno,pt
cmp
lods
jmp
push
jp
mov
fwait
loopne
jp
push
mov
popf
jle
mov
sbb
xchg
test
push
inc
xor
or
sub
mov
daa
ja
sbb
pop
imul
sub
add
add
or
push
fldt
jl
xchg
shlb
mov
sub
or
mov
in
or
test
xchg
cmpsl
cmpsb
mov
fisttps
cmpb
loop
call
push
xor
cmpsb
nop
arpl
adc
data16
or
jl
add
cwtl
sbb
lret
pop
push
xor
jg
lcall
mov
icebp
dec
sub
jle
js
inc
mov
test
xor
ja
cmp
jp
in
push
pop
addb
aaa
mov
les
jl
dec
pop
mov
jae
cmp
sub
rcrb
push
xchg
sbb
sbb
leave
test
sub
loop
cwtl
popa
or
push
mov
xor
outsb
repz
jae
and
pop
aaa
sti
test
xor
pusha
fnstenv
sahf
fstps
mov
and
cld
mov
cltd
add
clc
sub
pop
out
mov
xchg
push
xchg
cmp
insb
adc
ja
imul
sub
lret
loop
sub
out
mov
test
test
imul
shll
fdivrl
pop
mov
pop
push
ja
or
add
mov
adc
in
pop
xchg
enter
daa
jbe
inc
mov
xchg
cmc
cmp
push
ret
adc
in
insb
in
rorl
movsb
add
pusha
cltd
cmc
test
fistl
mov
jmp
pop
fildll
xor
lret
scas
mov
cmpsb
jae
mov
xchg
flds
push
into
inc
add
fisubl
pop
orb
pop
sbb
incb
sarl
cmp
lock
push
sarl
movhlps
mov
sahf
fimull
mov
cltd
in
jge
std
scas
in
dec
add
or
ret
mov
shl
mov
pop
push
and
divl
sbb
test
dec
jbe
scas
ja
sub
adc
xchg
aaa
fildl
xchg
test
roll
add
iret
mov
sub
fsubl
xchg
mov
fnstenv
daa
cmp
dec
addr16
mov
mov
cltd
in
js
fcomps
add
pop
lcall
mov
mov
xor
mov
push
xchg
fiaddl
xor
jge
lret
fdivrl
ljmp
hlt
pop
or
pop
xor
sahf
mov
in
fisubs
mov
pop
rclb
mov
mov
xchg
sbb
in
es
divl
sub
xor
lock
cltd
fstl
xchg
data16
insb
xchg
mov
pop
outsl
ret
fincstp
fsts
popa
xchg
or
xchg
repz
nop
test
and
icebp
gs
ret
adc
shlb
test
inc
mov
or
test
lods
lret
push
and
mov
lods
daa
fdivrp
pop
jge
push
movsb
mov
loop
sub
bound
fs
pop
dec
inc
mov
outsl
add
inc
aad
lcall
mull
shrb
jne
fwait
mov
jmp
leave
enter
daa
in
fstl
mov
or
jl
ficompl
xchg
call
repnz
cwtl
inc
jno
into
ja
gs
xlat
cs
adcb
mov
xor
jg
mov
out
lret
aaa
arpl
cmp
in
ljmp
inc
or
and
pop
out
xchg
in
movsb
dec
xchg
ljmp
lahf
dec
ror
data16
outsl
and
movsl
jbe
or
dec
lcall
mov
dec
ss
inc
test
mov
shll
stc
sbb
popf
leave
lods
and
daa
xchg
xlat
xchg
lcall
lret
pushf
xchg
jno
mov
xchg
sti
minps
popa
mov
sarb
dec
in
stc
sub
ret
fmuls
or
xchg
add
test
add
mov
xor
cmpsl
xor
addb
sub
mov
cltd
ds
push
loop
or
call
jg
jne
push
cmp
cmp
fld
nop
mov
or
sbb
idiv
test
pop
adc
add
aam
jnp
pop
jecxz
imul
mov
faddl
jno
movsl
jnp
xor
dec
push
in
push
inc
dec
mov
xchg
mov
inc
imul
adc
jno
lds
cmp
pop
test
scas
mov
lock
xchg
add
movsl
lahf
mov
xchg
in
loope
movsl
repnz
filds
add
into
int3
and
xchg
sub
push
and
movsb
and
dec
call
xchg
aad
dec
scas
lods
xor
push
xorl
mov
push
xchg
push
fisttpl
imul
jnp
xor
stc
mov
push
push
cmp
jns
stc
push
lds
jno
cltd
insb
lahf
rcr
mov
adc
cmp
mov
dec
in
daa
or
out
test
orl
test
shrb
mov
das
andl
cmpsl
imul
mov
cltd
call
jno
addl
cmp
cmpsb
adc
loop
and
push
out
sub
in
add
mov
test
adc
mov
ljmp
pop
add
ds
mov
sti
bound
hlt
sbb
call
mov
xor
pop
popa
cmp
push
dec
clc
mov
mov
leave
sub
into
scas
jb
and
inc
or
js
dec
dec
add
adc
lods
out
jno
and
jne
inc
cmpsl
iret
jmp
inc
lret
cmc
data16
jb
arpl
jnp
dec
test
les
dec
in
aas
mov
xchg
fwait
aam
cld
scas
test
leave
aad
iret
jmp
adc
jmp
sbb
ja
stos
cmpsb
repz
mov
cmp
push
xorl
rclb
cmp
mov
dec
mov
mov
popf
inc
xor
mov
mov
sbb
jae
outsl
sbb
or
ds
hlt
insb
mov
jp
pop
jbe
inc
ja
push
jge
out
shll
cltd
out
cmp
mov
iret
jo
fs
or
cmpsb
fwait
loop
xor
pushf
mov
push
inc
shll
adc
cltd
sarl
xlat
les
mov
in
push
xchg
mov
ljmp
add
orb
bound
pop
je
inc
mov
scas
or
and
push
nop
in
in
ret
cltd
lcall
fdivrl
scas
insb
xchg
inc
pusha
lods
shlb
jge
mov
outsl
jno
cmc
lds
pop
sbb
xor
pop
inc
cmp
js
pop
es
fwait
jne
mov
sbb
rorb
int3
dec
stos
cmp
or
mov
or
outsl
es
mov
or
lahf
cld
dec
xchg
xchg
daa
mov
cmp
insb
outsw
fisubl
in
ja
mov
xchg
jge
je
jmp
xor
adc
mov
outsl
pop
push
jns
mov
xchg
pop
daa
shlb
mov
les
mov
and
pop
dec
pop
sbb
test
ffreep
mov
jmp
out
xor
jo
xor
in
mov
sub
xorl
mov
ljmp
imul
paddq
imul
lea
scas
cmp
inc
inc
add
push
cmpsl
sub
cltd
sti
lcall
iret
pop
sub
aam
dec
inc
mov
pop
int
xchg
test
sbb
in
sub
add
dec
dec
test
pushf
mov
aam
lock
loopne
insb
pushl
ret
sahf
xchg
mov
mov
mov
ret
sub
pop
adc
insb
arpl
scas
aaa
dec
mov
dec
sub
sub
stos
pop
add
and
lea
cmp
jl
xlat
pop
les
xchg
insb
fcoms
cmp
adc
scas
inc
mov
add
loop
add
cmp
jb
xor
movsb
pop
jmp
hlt
sub
inc
mov
and
xor
jb
push
dec
xchg
mov
pop
mov
pop
sub
mov
dec
mov
rcll
iret
movsl
adc
adc
jmp
push
into
pop
pop
insl
and
aad
outsl
call
xor
cs
ds
lods
into
in
es
sbb
pusha
inc
outsl
int3
dec
jle
repnz
xchg
xchg
jns
dec
and
fdivl
shlb
xchg
fwait
out
push
sub
mov
jl
and
aam
cltd
dec
scas
inc
jo
push
mov
or
xor
mov
adc
leave
sub
ds
rcrb
aas
mov
xor
and
jecxz
jp
push
cwtl
xchg
push
test
lret
repnz
test
jle
cmp
lods
mov
lret
sti
adc
mov
adc
loop
inc
out
dec
or
lock
pop
xor
pushl
cmp
mov
mov
aas
in
or
out
into
inc
es
add
fs
add
mov
out
dec
test
dec
and
push
cld
rclb
cmp
jnp
xlat
sub
hlt
jns
push
dec
leave
inc
out
mov
repnz
call
jae
out
bound
lea
lea
cmc
add
cs
inc
xchg
push
push
adc
subl
push
jo
pop
xchg
fwait
push
dec
push
out
jb
out
sbb
jmp
jmp
movsl
loope
jg
out
jnp
mov
hlt
notl
mov
fldl
aam
xor
shll
das
or
in
inc
inc
divb
mov
lock
push
ret
divb
mov
mov
push
sub
popa
fiaddl
push
std
sub
push
mov
movsb
xchg
inc
jae
aas
sub
inc
pop
mov
call
inc
data16
xor
jbe
adc
cmp
inc
xor
push
push
bound
lret
fsubrp
push
jo
push
dec
xor
mov
hlt
or
lahf
pop
inc
lcall
test
xor
jp
sub
adc
ror
lahf
cmp
popf
gs
sub
roll
loopne
cmp
ss
notb
sub
cmp
hlt
push
ret
inc
idiv
add
pop
daa
dec
in
jne
xor
ficompl
decb
mov
or
loope
xor
sbb
jl
nop
mov
aas
pop
repz
int3
icebp
mov
push
repz
pop
das
mov
cld
es
fwait
lods
push
jo
add
fdivp
sbb
rcll
lcall
or
ret
xchg
call
or
mov
and
dec
in
cwtl
aas
mulb
push
add
movsb
sarb
xchg
call
xchg
mov
negb
ja
add
push
fwait
cltd
mov
pop
sub
in
push
outsl
fs
fdivs
sahf
fisttps
repz
mov
fcoml
jl
mov
fists
pop
mov
inc
in
or
scas
into
scas
outsl
out
ljmp
ficoml
cmp
ret
cli
fidivrs
enter
add
xor
fs
push
leave
aas
pop
fistpl
aad
das
lret
xor
test
aaa
cmp
fdivrs
or
add
cld
xchg
loop
pop
inc
sub
mov
js
insl
jl
inc
and
xor
push
mov
loopne
add
aam
clc
fstps
cmp
jp
sbbb
clc
int
in
nop
shl
or
jne
jp
jae
push
es
dec
cmp
sbb
es
lock
xchg
mov
orb
test
push
test
mov
out
or
stos
adc
stos
add
loope
sbb
test
xor
xchg
lcall
adc
imul
dec
jae
or
stos
lea
cli
inc
call
test
pushf
stos
jecxz
mov
fmul
outsl
xor
fmull
fildl
pop
jp
sub
out
or
add
cmpsl
rcrb
ror
outsl
xor
jo
push
outsl
inc
lock
cs
aam
std
push
cmc
shl
outsl
fimull
inc
adc
mov
cmp
lea
adcb
sub
dec
add
out
push
cmp
xchg
arpl
notb
cmp
xchg
dec
adc
das
fwait
sub
and
fildll
cmpsb
xor
cmp
and
pusha
inc
je
js
fcmovnu
mov
arpl
loope
lret
lods
sarl
in
add
sub
jg
rclb
out
pop
push
pop
pop
aad
in
jg
adcb
push
rorb
dec
arpl
orb
stos
fisubl
roll
shrl
inc
mov
aam
jg
and
mov
push
dec
data16
sar
sbb
pop
xor
fwait
or
xor
loop
or
popa
ja
and
test
mov
dec
fs
adcb
lods
stc
pusha
cli
jo
xchg
push
or
mov
inc
fsubrl
jp
mov
ds
dec
cmp
or
sub
movsl
popf
or
push
call
mov
jle
dec
jns
mov
cmpl
xchg
inc
fwait
adc
call
iret
int3
int
sbb
sub
aam
cmp
test
insb
inc
loopne
push
and
das
mov
and
xor
insl
out
pop
sub
lcall
sbb
imul
rcrb
test
faddp
xor
mov
sarl
mov
cli
push
jmp
sbb
sbb
imul
mov
mov
inc
ret
sbb
daa
dec
loope
and
fisttps
cmp
outsl
pop
jbe
bound
add
dec
cmp
sarb
jge
and
xor
xor
ficoml
ljmp
call
int
sbb
fstpt
scas
jno
out
clc
lea
out
scas
jmp
sahf
adc
lods
ret
sbb
pop
out
inc
dec
mov
xor
mov
mov
test
sbb
sahf
inc
sub
fdivrl
cmp
decb
add
psubd
jge
cmpsb
cli
mov
cmp
add
cmp
ljmp
repnz
sbb
add
clc
movsb
add
adc
push
push
or
jecxz
ja
add
orl
cmp
pop
jno
xlat
fildl
cli
into
and
lods
jns
shr
fsts
and
test
mov
sahf
push
mov
pushf
popf
dec
jo
dec
ljmp
adc
adc
cltd
lods
out
cmp
aaa
pop
call
sub
pop
and
cltd
repnz
mov
jmp
push
movsb
cli
aam
xchg
int
testl
pop
js
sbb
fldenv
jmp
enter
insl
rcrb
imul
out
std
xchg
aas
pop
fstpt
inc
fs
hlt
mov
jl
mov
mov
jl
aaa
xchg
jmp
movsb
je
adc
cmp
cmp
repz
jg
cmp
nop
insb
sarl
pop
mov
out
test
mov
mov
jb
sbb
clc
xor
aam
mov
push
out
push
lods
jg
or
outsb
mov
mov
mov
xchg
ja
adc
loope
lea
int
jns
stc
sbb
mov
or
jge
xor
mov
and
cmp
or
adc
add
dec
out
add
nop
mov
mov
mov
mov
cltd
pop
test
xchg
mov
push
xchg
pop
arpl
pop
rcrl
xchg
dec
or
in
out
jmp
call
inc
add
gs
sahf
inc
mov
mov
mov
sbb
mov
jl
or
or
icebp
cli
xor
pushf
push
mov
bound
stos
lea
in
dec
cmp
mov
lahf
fldl
int
push
test
inc
repz
insb
cli
xor
fwait
adc
clc
xchg
fwait
lods
xchg
mov
jp
mov
icebp
xchg
push
or
and
add
stos
dec
mov
xchg
ret
adc
adc
push
add
pop
add
push
dec
jb
dec
sub
mov
pop
ds
sbb
mov
jnp
stos
xor
jl
pop
popa
cmp
mov
xchg
pop
add
popa
movsl
dec
inc
push
aaa
ret
jne
addr16
cmc
es
cmp
xor
sub
pusha
mov
pop
and
lret
xlat
cmp
out
dec
iret
mov
call
xor
push
mov
out
cmpsl
out
mov
mov
push
inc
fwait
hlt
cmp
ja
testl
call
dec
adc
add
cmpsl
push
mov
repz
rorl
loop
fsts
sbbb
insb
in
cli
add
pop
jmp
sbb
icebp
out
mov
outsb
mov
mov
inc
sbb
mov
imul
movsb
dec
ficoms
shrb
shrl
lods
dec
dec
subb
dec
fldcw
add
push
mov
sub
std
inc
adc
adc
sbb
mov
add
mov
jmp
sahf
mov
inc
iret
push
mov
jne
mov
pop
jle
xchg
mov
clc
notb
hlt
mov
pop
jl
inc
jl
shrl
cmp
jb
flds
add
jp
sti
scas
cmp
popf
stos
jno
cmp
sbb
push
and
jp
dec
adc
cmp
pusha
jmp
cltd
adcb
jl
out
sti
sub
xchg
ja
in
testl
inc
mov
outsl
jecxz
lret
jp
data16
adc
push
mov
lret
mov
aaa
and
pop
icebp
pop
sub
dec
inc
mov
fdivs
repnz
dec
dec
cmc
fdivrs
js
cmc
mov
or
dec
xlat
hlt
leave
addl
ja
sarl
and
adc
insl
js
xchg
dec
lods
xlat
out
jbe
shrl
mov
adc
stos
pop
in
rcrb
sub
mov
and
fbstp
and
adc
xor
loope
insl
dec
sbb
pop
mov
clc
insb
xor
out
arpl
sub
pop
leave
push
push
addr16
push
ljmp
stos
call
sarb
repnz
cld
imul
arpl
jge
lods
fsubrl
mov
mov
std
cmpsb
sbb
mov
lahf
pop
pop
and
loope
and
shr
push
je
pop
pop
enter
add
adc
lretw
or
dec
test
jecxz
mov
pop
rcll
clc
and
out
leave
sahf
gs
sbb
dec
mov
mov
into
mov
mov
mov
sub
adc
cmp
insb
scas
int
lret
mov
push
xor
push
mov
push
out
aad
pop
fsubl
daa
dec
jbe
pop
mov
mov
mov
inc
cmp
inc
sub
aaa
and
lcall
push
jg
aam
cmpsb
sbb
lods
mov
adc
in
dec
jecxz
out
adc
jno
push
fwait
mov
sub
iret
lea
and
enter
and
jle
movsl
and
outsb
cli
mov
in
jmp
mov
shrl
and
stc
fucomip
lds
fnstsw
nop
pop
and
jne
sub
add
pop
lea
lds
lods
sbb
fsts
sbb
fwait
mov
repnz
mov
push
pop
add
out
pop
fiaddl
jg
mov
add
lahf
fcmovnb
into
sahf
cld
arpl
popa
push
cs
test
mov
jl
inc
pop
js
xchg
in
aam
cmc
mov
sbb
imul
mov
outsl
insb
sub
shll
lret
movsl
insb
lcall
loop
pop
push
into
sbb
cltd
test
or
mov
jae
sub
not
cmc
aas
dec
addb
jecxz
mov
stos
movups
ret
jns
scas
push
rcrb
iret
fcoml
mov
dec
sub
call
mov
push
stc
cltd
shlb
aaa
push
xchg
push
das
out
popa
push
popf
mov
xchg
dec
xchg
in
sbb
jmp
std
sub
cmp
mov
mov
mov
jno
push
out
rorl
shrb
lds
clc
mov
pop
cmpsb
call
adc
xchg
cmp
xchg
int
adc
imul
push
mov
inc
outsb
mov
lods
data16
mov
je
ret
xchg
sub
into
push
lret
fisubrl
sbb
mov
pop
in
add
sbbl
dec
movsb
rorb
inc
nop
pushf
test
pop
xchg
inc
add
scas
data16
imul
out
sbb
pop
push
mov
pusha
or
repz
lret
lods
push
in
mov
xor
inc
mov
cmc
mov
xchg
xlat
scas
cli
sbb
ljmp
jle
and
or
in
imul
call
xchg
outsb
in
jnp
cli
push
push
aaa
and
imul
sub
pop
push
loopne
mov
int3
mov
popf
sbb
xchg
cmp
mov
ret
sarl
and
orb
jge
fidivrl
es
pop
lahf
ret
and
loop
jns
ljmp
or
mov
sbb
or
mov
fidivrs
cld
dec
sub
fbld
test
nop
sub
pop
int
subl
outsb
inc
xor
movsb
insb
jo
jmp
sbb
dec
in
into
mov
jmp
pusha
ss
sbb
xor
xlat
cmpb
jb
aas
jmp
cltd
imul
stos
lret
jle
sbb
mov
xchg
jp
rcrb
pop
insl
pop
fisubrs
dec
ja
cli
mov
test
test
pop
cmp
je
sub
orb
shl
hlt
add
mov
lret
loop
push
sbb
ret
or
fwait
sub
mov
cmp
jbe
mov
jb
cwtl
or
inc
xchg
mov
push
sbb
adc
jns
xchg
out
adc
mov
inc
ljmp
mov
sahf
cld
add
mov
xchg
dec
add
jle
loop
mov
in
imul
push
add
fcomps
add
shlb
call
clc
test
cmp
push
in
les
inc
jle
sbb
iret
clc
dec
iret
fldcw
cmp
arpl
cs
das
inc
fwait
adc
lock
fbld
ja
xlat
push
push
cld
add
xor
loopne
inc
fcomps
aad
inc
xchg
mov
inc
orb
mov
fisubs
popf
fwait
decl
inc
stos
aad
jl
aaa
xchg
push
and
xchg
sarb
jae
mov
mov
insl
imul
out
icebp
jmp
pusha
mov
incb
add
stos
pop
stos
adc
cmc
xlat
pop
mov
jecxz
mov
push
in
cmc
or
outsl
shll
imul
in
gs
lods
jns
insb
or
cmc
leave
fwait
lea
push
jns
lcall
xchg
push
aaa
xchg
fwait
pop
add
lods
and
adc
nop
filds
cmpsb
mov
loope
sbb
xchg
mov
idivl
pop
lcall
jbe
or
push
rolb
dec
jmp
sub
adc
mov
push
add
aaa
mov
stc
xchg
and
loopne
push
scas
sbb
jo
mov
orb
notb
xor
ljmp
or
jg
sbb
xor
ja
ds
les
xor
or
xchg
xor
shlb
std
mov
jecxz
and
sbb
test
push
inc
adc
into
je
mov
add
scas
rcll
imul
lods
fs
jl
pushf
pop
mov
mov
ret
sub
ja
rcll
mov
cwtl
mov
xchg
or
pop
or
cmp
sti
ret
add
push
sub
les
mov
xorb
mov
mov
shl
jb
sbb
lds
add
jecxz
es
push
pop
push
dec
inc
repnz
loop
bound
fs
jno
cwtl
xchg
sbb
add
adc
in
out
push
aas
adc
arpl
xorb
enter
xchg
adc
mov
movsl
pop
shlb
adc
pop
aas
mov
lods
xchg
iret
jb
pushf
roll
jne
pop
push
cmpsl
movb
xor
and
sub
loopne
dec
pop
mov
pop
xorb
mov
lods
inc
cmpsb
mov
popf
icebp
xchg
add
imul
lahf
jg
xchg
les
xchg
jo
dec
repz
push
scas
aam
jnp
jbe
cmp
xchg
push
mov
dec
testl
pushf
ljmp
loop
repnz
inc
scas
cmp
ljmp
sbb
outsb
repnz
mov
out
xchg
mov
rep
mov
mov
mov
inc
fildll
scas
daa
pop
pop
insb
cmp
repnz
ret
add
mov
outsb
out
inc
test
pushf
mov
cmpl
sub
call
clc
add
cmpsb
test
iret
mov
loope
sub
pop
add
test
push
jns
dec
leave
loope
lcall
cmp
outsb
lahf
fldt
in
jbe
je
out
pop
sbb
dec
jne
add
pusha
clc
fdivrl
loope
cltd
int
inc
cmp
dec
xchg
int3
mov
mov
pop
push
push
popf
sbb
cmpb
xor
ds
daa
les
fldenv
push
and
fnsave
sti
jae
pop
mov
jo
push
mov
pop
push
iret
sarl
scas
ds
int
bound
in
ror
dec
adc
daa
and
add
cwtl
mov
pop
dec
rcrb
adc
int3
mov
jmp
xor
das
dec
clc
xchg
mov
loop
popa
into
mov
out
leave
fldl
cmp
and
push
lea
popa
sbb
sbb
or
or
insl
ret
into
jo
gs
shl
loope
in
or
adc
imul
cmc
pop
cltd
mov
push
add
out
cmpb
cmovs
outsb
inc
icebp
out
xor
mov
or
inc
shl
sbb
dec
push
idivb
in
loopne
xor
or
inc
aaa
pop
mov
dec
adc
sub
enter
jg
repz
lcall
sub
cmp
clc
mov
and
dec
mov
jbe
cltd
stc
out
int
cmc
mov
popf
cmp
cmpsb
cmc
push
mov
lods
jns
sbb
aam
xor
mov
je
fwait
push
mov
jno
mov
cmp
rcrl
loope
jmp
sbb
gs
cmpsl
dec
xor
call
loopne
sbb
push
add
or
aam
imul
sahf
mov
ret
jmp
or
cs
sarl
push
xchg
cmc
je
push
pop
cltd
inc
mov
loop
out
push
in
inc
adc
jp
sub
mov
push
inc
mov
or
fwait
ss
push
xlat
pop
and
cwtl
push
add
arpl
fadds
mov
popa
insb
orb
or
mov
into
and
jp
mov
jle
cmpsl
pop
fmuls
sub
pusha
je
pop
gs
mov
or
ss
stc
pop
sub
xor
imulb
out
jmp
jo
fstpl
jle
aad
adc
repnz
ds
xor
ror
ljmp
jp
and
imul
xchg
repnz
into
fiaddl
movsl
sahf
mov
xor
pushf
fcmovb
ds
rcrl
test
or
test
imul
adc
jecxz
push
aas
mov
in
adc
dec
std
pusha
sub
mov
add
inc
xchg
mov
repnz
loopne
add
in
and
jecxz
in
insb
out
shl
mov
cltd
add
loop
sub
push
das
dec
mov
pop
shll
xchg
in
mov
push
ss
daa
pop
lds
aas
imul
ret
inc
cli
dec
add
xchg
shr
leave
jg
insl
cld
pop
and
in
mov
jge
cmp
pop
pusha
or
sti
inc
mov
das
sbb
cmc
lahf
xchg
testl
sub
cmp
inc
shrb
inc
xchg
jmp
clc
pop
aaa
mov
sbb
repz
gs
cmpsl
mov
rep
and
js
popf
or
std
add
inc
mov
fcomps
sub
mov
mov
push
xchg
jns
dec
add
cmp
sbb
ficoml
mov
repz
dec
dec
add
or
pushf
lock
mov
pop
sbb
lret
sub
xor
pusha
mov
add
arpl
pop
cmp
adc
in
popa
mov
pmaddwd
add
test
mov
mov
inc
mov
and
arpl
sahf
shrl
and
push
iret
daa
jae
aad
mov
fisttpll
arpl
mov
push
mov
cmp
rcll
in
ds
pop
mov
sub
lret
xchg
mov
in
sub
cmpsl
aas
inc
pop
fcomps
push
pushf
inc
inc
jmp
mov
testb
adc
int3
out
push
sub
cmpsb
cmp
or
shll
negl
dec
sahf
cmp
lods
shlb
repz
inc
inc
mov
icebp
and
mov
push
cmp
mov
sbb
hlt
jnp
cmpsl
sbb
pop
sub
rcrl
sbb
dec
testb
aaa
or
ja
inc
gs
jo
add
add
hlt
xchg
leave
inc
pop
jo
mov
adc
ret
shl
cmp
xchg
mov
dec
ret
arpl
arpl
sarl
notb
adc
xor
adc
pop
cmc
pop
xchg
scas
or
sbb
lret
dec
push
js
mov
or
imul
call
mov
daa
lods
and
sbb
daa
mov
mov
insb
mov
bnd
aas
stc
lret
push
popa
mov
inc
pop
jl
ffree
mov
sbb
mov
push
popa
adc
inc
out
sti
test
sub
sbb
js
test
jl
gs
adc
pop
pushf
loopne
test
mov
xor
arpl
repz
and
cmc
and
jns
sbb
sbb
xor
sub
cmp
adc
std
mov
ljmp
lret
stos
add
push
mov
adc
out
lods
fisubrs
stos
in
inc
and
push
add
mov
pop
mov
sub
cmc
pop
xchg
aad
jb
dec
inc
sub
xchg
jl
fs
xor
enter
jmp
lock
cltd
pop
bound
iret
sbb
loopne
mov
repnz
lods
or
push
mov
xor
push
int
mov
mov
mov
dec
test
cmpsb
loop
jns
cli
lahf
ret
arpl
lods
mov
test
in
shll
fisubrs
lea
inc
js
push
and
jo
sbb
cmp
mov
popf
xor
call
jo
adc
or
insl
xor
xchg
imul
inc
ljmp
jb
or
sub
pusha
mov
inc
movsb
or
fimuls
imul
add
test
pop
pop
sub
xor
cld
pop
push
and
addr16
mov
mov
pushf
in
pop
xlat
loope
adc
pop
rorb
movsb
mov
mov
mov
ficoms
loop
cmp
mov
into
fcmovb
or
xor
iret
mov
jbe
xlat
les
add
and
lods
shlb
loopne
dec
xchg
stos
mov
ja
push
cmp
notl
pop
dec
adc
mov
clc
lret
push
xor
push
outsb
out
clc
mov
lea
add
ja
xor
insb
inc
and
xchg
jmp
push
mov
mov
pushf
and
jno
ret
xor
iret
push
pop
or
jb
lea
mov
popa
data16
cs
cs
push
add
iret
in
dec
jecxz
inc
cld
pop
lahf
loope
not
inc
dec
sbb
jbe
out
dec
clc
cmpsl
mov
xchg
mov
jne
cmp
add
push
jbe
fcoml
xchg
mov
out
popf
stos
sub
xchg
daa
stos
pop
or
movsl
mov
push
out
mov
jbe
jo
ret
insl
mov
repz
hlt
mov
out
aam
adc
jb
mov
imul
sbb
xor
insb
adc
sub
cmpsb
xchg
mov
fs
mov
pop
shr
mov
movsb
in
pop
movsb
ror
stos
mov
ss
ss
out
and
clc
mov
lea
xlat
scas
pop
mov
mov
into
mov
pop
and
movsb
shlb
inc
pop
sub
pusha
jle
adc
mov
dec
in
dec
cmp
sbb
addr16
outsl
and
xchg
cmp
mov
sbb
pusha
push
jmp
cs
pop
cmp
cli
xor
ret
jbe
sbb
loopne
cmp
movsl
movsb
xchg
or
adc
cmpsb
xchg
mov
dec
aas
or
jbe
out
xchg
jae
adc
pop
push
out
out
int
push
mov
xchg
or
hlt
insl
imul
js
ret
adc
push
mov
inc
push
cmp
mov
repz
rcr
sub
or
add
sbb
or
cmp
imul
add
sbbb
and
xchg
inc
jno
call
cmp
lcall
cmpsl
bound
xor
pop
sub
mov
dec
pop
xchg
add
xor
xor
cmp
lock
in
std
add
cmc
mov
dec
pusha
cmp
ficomps
in
iret
movsl
jl
pop
fidivs
inc
mov
sub
call
movsb
adc
mov
fcomi
bnd
mov
mov
dec
addr16
inc
inc
xchg
stos
scas
rcll
aas
pop
popa
loop
inc
and
lret
push
and
dec
cmp
int3
inc
pushf
lret
add
mov
inc
cmp
or
inc
mov
jae
popf
fstpt
mov
push
mov
inc
or
movsb
dec
or
xchg
in
adc
and
xor
lcall
cmpsb
mov
out
push
ljmp
push
mov
jae
jp
movsl
icebp
inc
les
hlt
xor
push
dec
mov
adc
jne
lods
add
into
cmp
xor
test
inc
lcall
repnz
icebp
movsl
fwait
push
sub
xchg
icebp
cmp
xlat
lret
loop
test
dec
es
jge
fndisi(8087
lds
add
pop
outsl
mov
shlb
sbb
cli
dec
mov
data16
push
sbb
gs
push
push
or
lock
pop
gs
xchg
jns
lds
out
mov
pushf
pop
imul
xor
rcl
sub
xchg
cmp
mov
or
das
jecxz
push
outsl
dec
stos
mov
add
nop
xor
add
mov
ret
xlat
xor
add
in
cmc
mov
xchg
push
or
insb
shlb
pop
mov
jle
xor
aam
insl
ds
sub
jl
int
fs
push
jns
rcll
mov
pusha
popa
jle
imul
adc
in
stos
jecxz
jg
leave
jg
xor
or
fimull
mov
fwait
add
cltd
sbb
mov
push
testb
roll
jle
pop
iret
push
dec
sar
mov
mov
imul
std
fnstenv
push
out
test
push
out
aas
push
mov
xor
lret
cmp
sar
xchg
lock
out
cmpsl
mov
cmp
cwtl
stos
jo
sub
cmp
lahf
cmpsb
xor
lea
das
gs
xchg
mov
in
popa
std
icebp
mov
or
call
add
pusha
std
int
jmp
scas
test
push
mov
repz
stc
jno
ret
lea
or
cwtl
lret
inc
or
add
sub
or
pop
xchg
dec
nop
pop
rcll
xor
dec
dec
adc
jl
stos
xor
int
xchg
ss
dec
inc
es
mov
shll
ret
ss
inc
mov
ret
cmp
xlat
ja
ljmp
lea
sub
out
js
push
push
fbstp
fisubrl
mov
add
mov
dec
dec
add
je
jno
inc
lret
add
inc
push
ficompl
mov
jmp
dec
mov
sub
jo
test
loopne
push
push
sti
outsl
fldl
in
mov
movsl
mov
jae
jo
sti
xorl
leave
jae
adc
loope
add
xchg
jo
mov
fistps
mov
mov
cmp
mov
jle
adc
jno
mov
push
xor
jae
mov
pop
jmp
int3
add
mov
cmp
cmp
xor
es
adc
inc
sti
loope
push
test
mov
xchg
roll
cltd
sbbl
fsubrl
cli
xchg
xor
fmul
out
jg
mov
cmpsl
inc
mov
roll
adc
xchg
xchg
jle
stc
cs
push
loopne
mov
sbb
faddl
test
aam
lock
add
cmp
sub
data16
mov
in
jo
dec
pop
mov
mov
xor
daa
aaa
push
mov
jno
sub
dec
iret
or
shrl
clc
mov
ja
push
add
rcl
push
mov
push
cmpsl
es
jns
mov
cmp
sbb
push
push
cwtl
sub
in
inc
outsl
loopne
imul
mov
notb
outsb
push
shl
sbb
fdivrp
inc
lahf
loop
stc
push
lret
inc
add
cs
push
xchg
xchg
pusha
out
out
inc
inc
cs
std
fidivl
dec
test
jnp
cmpsb
xchg
into
pop
lret
je
hlt
xchg
icebp
mov
push
mov
mov
pop
pop
loope
sbb
push
jmp
jb
insb
fs
enter
xor
mov
adcl
pop
cmp
addr16
js
int3
addl
or
dec
mov
xor
cld
enter
mov
xchg
je
and
adc
test
xchg
pushf
inc
mov
adc
push
pop
fldt
out
fisubs
pop
jns
jns
jns
loop
and
fs
sbb
xchg
jp
cmpsb
mov
and
inc
pop
mov
mov
cmpb
adc
add
mov
adc
push
sub
xor
dec
mov
sbb
jnp
aas
ficoml
and
xor
addr16
adc
jmp
lahf
movsl
sarb
mov
ret
pop
pop
or
add
ss
pop
inc
insb
enter
out
ret
or
mov
xchg
dec
lods
inc
xchg
sbb
popa
fbld
xor
int
out
stos
movsb
ss
insl
scas
xchg
push
nop
jns
inc
fisttpll
adc
and
hlt
mov
movsb
jns
aam
xchg
sar
pop
mov
pushf
xor
push
dec
jle
adc
outsl
arpl
arpl
fistpll
or
je
std
insb
push
outsl
mov
dec
inc
fsubrs
loop
stc
jns
add
sub
mov
jecxz
int
mov
js
fnstcw
mov
dec
in
std
cmp
adc
cmp
ljmp
mov
ret
dec
call
pushf
pop
mov
bound
out
push
fmull
sti
xchg
imul
pop
mov
lret
loop
scas
and
data16
mov
popf
jb
lea
fmuls
add
idivb
mov
mov
push
sbb
int
insb
rcl
gs
adc
repnz
lock
mov
sub
movsl
sti
or
outsb
loop
push
cltd
mov
stc
dec
sbbl
js
xchg
test
movsb
repz
ss
mov
add
das
movsb
js
inc
mov
in
aas
fistpl
and
inc
fstps
dec
mov
fwait
add
xor
cmpsb
cltd
xor
xchg
call
in
or
aas
mov
jbe
push
adc
pop
loopne
insl
jnp
inc
pushf
jne
adc
mov
xchg
pop
mov
pop
mov
mov
sub
cmp
fistpll
pop
pop
xlat
sbb
outsb
push
out
in
pop
adc
popf
andb
out
repnz
or
lods
dec
mov
xor
mov
scas
or
bound
jo
fisubrl
add
aam
ds
and
jl
sbb
fcomps
adc
xlat
push
inc
addl
fwait
adc
mov
xor
fs
mov
and
ja
in
in
inc
daa
mov
rcll
pop
sub
sarb
mov
pop
inc
jns
add
add
mov
ljmp
xchg
or
mov
push
std
adc
enter
jle
xor
push
divb
imul
jle
add
add
ret
stc
push
lds
xchg
fdivs
jae
enter
jne
faddl
jg
addb
xchg
mov
call
iret
rcrl
mov
jmp
add
push
add
sub
jmp
xchg
or
xor
adcl
mov
or
pusha
ljmp
xor
push
xor
ja
stc
ds
dec
dec
in
bound
cltd
or
pop
fmuls
pop
aas
stc
pusha
xchg
jne
xchg
sbb
xor
jp
hlt
sbb
pop
jmp
lret
lock
dec
fs
push
mov
xchg
int
xor
aam
push
pushf
dec
mov
dec
in
pushf
iret
ficomps
xchg
mov
or
sub
lds
pop
mov
mov
bound
add
jecxz
xchg
repnz
or
mov
dec
lods
push
aas
jne
cwtl
push
mov
test
cli
hlt
roll
imul
inc
out
repz
or
push
rcrl
out
popf
insb
jo
mov
mov
mov
cmp
mov
and
sub
dec
scas
push
nop
mov
bound
jae
das
adc
mov
adc
jb
and
lret
push
fs
push
insl
movsb
shl
push
dec
imul
jnp
pop
xchg
arpl
adc
fisttpll
sub
mull
int3
bound
and
push
scas
lret
inc
mov
cmp
adc
jb
out
lods
into
rol
mov
mov
nop
aam
imul
mov
cmp
pusha
jl
mov
arpl
or
xor
pop
cmp
inc
xlat
add
rorl
pop
clc
push
jecxz
jb
lds
jge
fwait
sarb
in
add
dec
dec
fldl
add
icebp
in
cmp
adc
add
and
je
filds
pop
add
jns
xchg
pop
icebp
mov
inc
leave
sbb
cmp
mov
lods
adc
sub
and
push
lret
jecxz
lcall
mov
jle
push
push
movsl
cltd
cmp
mov
add
shrl
xchg
fdivrl
icebp
xchg
movsl
xchg
lret
in
rclb
mov
adc
mov
jo
lea
sub
jg
inc
mov
xchg
xchg
cmp
adc
mov
pop
aam
out
mov
in
push
stos
jae
add
loope,pt
movsl
dec
in
jbe
ror
lods
mov
in
decl
jle
fs
shrb
or
jg
dec
cmp
lret
mov
add
dec
sbb
or
inc
xchg
je
push
pop
idivl
sbb
mov
out
scas
xorb
out
jne
sub
xchg
xchg
xor
jp
sbb
xor
pusha
sub
rorb
and
sarb
jb
loop
sub
scas
lea
pop
or
not
mov
sub
sti
std
cmpsl
pop
test
cmp
mov
sbb
cmc
daa
ja
dec
mov
sub
push
mov
xor
lret
push
adc
xor
sahf
popf
cmc
jecxz
push
inc
or
leave
aaa
adc
outsb
xchg
int3
inc
fs
dec
push
and
or
sahf
imul
int3
orl
adcb
cmp
mov
clc
imul
dec
inc
cs
mov
popf
cld
scas
outsl
jnp
jmp
and
dec
js
aad
call
movb
jb
xor
lods
shll
mov
mov
and
push
hlt
fs
add
adc
xlat
or
jne
and
mov
dec
out
push
out
outsb
inc
cmp
int
fimuls
lret
incb
mov
inc
push
and
or
xchg
sti
loope
xchg
scas
imul
mov
insb
je
mov
mov
adc
jbe
cld
xor
or
sbb
cmc
pop
jne
cmp
ret
push
out
add
mov
mov
std
loope
outsl
add
mov
add
sub
subl
out
push
jb
das
xlat
xchg
adc
sbb
mov
adc
fcomps
jae
out
les
stos
push
or
enter
aad
cmp
pop
pop
sub
add
or
sub
jle
dec
mov
cmpb
sbb
pop
outsl
jne
je
cmp
mov
pop
jmp
jb
sub
inc
xor
and
sub
stos
hlt
mov
faddp
mov
mov
mov
jecxz
inc
adc
xchg
mov
or
pop
xchg
sbbl
popa
lret
lcall
xchg
sti
loop
lret
jecxz
das
add
mov
in
insl
bound
sub
adc
lods
sbb
mov
jp
int3
je
imul
movsl
aam
or
xlat
xchg
mov
mov
subl
inc
pop
jnp
jo
rorb
orl
mov
push
mov
out
inc
dec
repz
xor
jne
ret
push
lea
lahf
sbb
pop
inc
in
sbb
gs
sub
lock
inc
dec
enter
adc
dec
cmpsb
jnp
aaa
mov
mov
mov
mov
or
dec
cmp
jo
jno
imul
push
mov
pop
xor
xchg
add
mov
jnp
jns
sbbl
mov
pop
sub
aas
outsb
cmp
or
and
insl
mov
ret
xor
out
sub
or
es
cmp
push
fbld
int
sub
outsl
sbb
scas
dec
sbb
pop
xor
mov
mov
es
gs
hlt
das
adc
cmp
ret
stos
add
inc
jp
stc
xchg
pop
sbb
jbe
addr16
mov
stc
mov
sbb
in
mov
or
mov
je
fs
adc
mov
rorb
stos
outsb
jno
test
insl
pushf
add
push
or
shl
mov
push
push
movsb
int3
xchg
arpl
inc
dec
adc
lea
push
lret
dec
out
add
in
cmpsl
push
adc
xchg
adc
or
std
bound
test
adc
inc
mov
and
in
dec
lock
jp
or
xchg
add
or
test
add
jge
jne
xchg
call
std
inc
enter
or
and
mov
jo
popa
inc
cmp
fidivs
loopne
cmpsb
add
stos
dec
and
je
dec
or
sub
pop
sub
insl
aas
or
mov
mov
xor
cli
lret
inc
xchg
call
sub
sub
jns
ret
add
sbb
daa
adc
loopne
pop
mov
pop
fldcw
jo
test
test
sbb
loopne
cmp
mov
pusha
hlt
or
mov
cld
jnp
popa
int3
and
mov
jmp
test
mov
ss
ja
pop
outsb
fcmovnbe
lret
in
jb
sbb
push
data16
push
jae
int3
int3
inc
int
mov
rcll
mov
clc
add
mov
mov
cwtl
ja
jbe
cmp
andl
mov
jp
les
das
cmp
push
and
mov
fwait
push
mov
cmpsl
cmpl
jb
adc
cmc
in
shl
push
ds
ret
or
pop
iret
push
inc
sahf
sub
add
jge
scas
aad
mov
daa
pop
and
ljmp
out
bound
lahf
mov
iret
lahf
loope
cmpsb
pop
pop
int
lahf
or
or
jl
shl
cmpsl
sahf
push
mov
jge
fs
out
lods
into
pushf
mov
cltd
dec
cmc
push
push
daa
xchg
fisttps
or
sub
dec
mov
in
xchg
ret
cli
call
xchg
jmp
and
and
push
or
push
sbb
ljmp
fisttpl
jns
loop
push
std
lcall
jo
adc
idivl
xchg
sbb
mov
xchg
fsubrl
mov
add
lahf
ret
mov
push
ds
add
cwtl
lcall
and
popfw
and
jno
xor
notb
add
mov
cmc
insl
mov
fwait
mov
fmul
inc
and
xlat
sub
sub
add
cmp
and
and
dec
cld
push
xor
fcomi
cltd
in
push
aam
rclb
enter
test
out
dec
adc
dec
dec
push
mov
push
pop
xchg
mov
mov
sub
mov
adc
mov
jne
xor
sbb
call
in
sbb
je
sub
lret
out
pop
sbb
push
pop
xor
repz
push
pop
das
xchg
scas
mov
clc
fildll
xchg
ror
pop
inc
ficoms
or
into
mov
cmpsl
aam
jmp
push
inc
sar
jb
aaa
lcall
sbb
dec
xor
dec
push
sbb
scas
popf
push
mov
xchg
or
test
sbb
out
out
mov
sub
xor
mov
sub
inc
bound
pushf
negb
or
fidivs
cmp
sub
mov
push
cmc
sbb
sbb
xchg
xor
sub
add
xor
sub
in
das
xor
mov
xor
adc
bound
scas
movsl
sub
fnstcw
mov
movb
push
rcll
and
ja
stos
cmp
inc
mov
sbb
jno
lret
add
shl
clc
leave
adc
mov
jmp
into
lret
xor
outsl
je
pop
shrl
inc
adc
inc
lods
cmpsl
sbb
push
fwait
les
xchg
shr
clc
outsl
lods
add
cmpsl
adc
push
mov
cmp
je
cltd
push
or
and
mov
sub
aad
sub
mov
lahf
inc
sub
and
mov
dec
fmuls
in
sbb
mov
mov
out
cwtl
adc
pusha
push
and
dec
inc
pop
jns
enter
add
jge
sarb
mov
cmp
and
fcmovne
adc
mov
das
es
test
inc
inc
sbb
lds
mov
fimuls
inc
lods
sub
fldenv
rcrl
adc
xchg
ds
cmp
mov
nop
mov
add
sub
aam
std
insl
bound
mov
inc
iret
mov
mov
xlat
xor
sub
outsl
cmpsl
jle
jmp
mulb
pop
dec
nop
push
jne
xor
daa
insl
sahf
test
cmp
mov
dec
shrb
je
mov
imul
fs
add
je
add
push
inc
les
sub
push
clc
call
lea
and
imul
int
das
push
fs
xor
inc
xor
popf
sarl
mov
ds
inc
dec
insb
pop
daa
fists
push
adc
hlt
lods
aam
into
cli
fucomi
or
js
mov
je
fstpt
fstpt
call
pop
mov
hlt
pusha
mov
sbb
cmp
es
sti
mov
cmp
mov
and
inc
sub
enter
add
nop/reserved
mov
lods
in
je
mov
mov
jo
cmpsl
jns
sub
pushf
in
push
or
fisubs
stos
xchg
mov
adc
lods
pop
enter
iret
push
and
mov
dec
jl
leave
push
inc
hlt
je
jbe
pop
insl
adc
out
lea
pushf
inc
lods
fnstsw
stc
imul
sbb
repnz
mov
addr16
loope
lods
mov
xchg
dec
in
sub
js
push
sbb
mov
ret
loopne
and
add
pop
subl
in
ss
jle
xchg
dec
leave
pop
jp
out
mov
hlt
push
push
push
jb
sub
jo
ljmp
nop
mov
pop
mov
stos
xor
push
cwtl
inc
mov
movsb
lret
or
ds
shlb
xchg
out
test
jae
and
mov
rolb
jecxz
cmp
push
jl
nop
sbb
cs
adc
fwait
xor
int
xorb
shll
out
mov
dec
pop
pop
stc
mov
xchg
addl
jmp
outsl
mov
pusha
subb
sub
lret
ljmp
sub
icebp
cmp
lret
icebp
popf
push
add
dec
adc
xor
xor
out
xchg
pop
inc
out
and
fisubrs
dec
cmp
push
cmp
sub
mov
cli
push
aad
xorl
inc
and
in
xchg
aad
inc
jge
mov
setge
addr16
je
in
arpl
loope
jmp
mov
in
cmc
in
sbb
pushf
pusha
aam
cmp
out
mov
xchg
imul
cmp
movsl
mov
outsl
cmp
mov
insb
mov
add
int3
stos
idivl
add
jmp
stc
imul
mov
xor
push
push
mov
jmp
mov
mov
lods
add
cmpsb
sub
ds
ljmp
dec
xchg
cmc
sub
sub
push
jle
xchg
loop
pop
rcll
mov
in
pop
dec
xorb
add
xor
int3
cmp
mov
daa
pop
sub
cmp
adc
push
push
and
jmp
cmp
sub
test
fs
pop
notb
dec
or
addl
fs
jns
adc
ret
inc
mov
jo
mov
inc
fstpl
push
jb
mov
scas
add
ja
out
addr16
ja
sti
lret
mov
or
sbb
out
mov
flds
lcall
lret
aad
jle
out
int3
inc
dec
fs
mov
leave
or
outsl
mov
outsl
pop
and
mov
inc
icebp
push
xchg
lds
roll
adc
push
cmp
sti
or
aas
cmp
xlat
pop
lea
aas
das
inc
pop
adc
dec
jl
or
insl
lock
add
in
test
fistps
sti
sub
or
sbb
and
xchg
icebp
out
jg
push
adc
arpl
xchg
iret
bound
jl
loop
pop
sub
sub
pop
lret
es
cmp
dec
and
aad
aas
push
nop
jbe
jno
push
jae
sbb
mov
fcoms
fidivrl
sbb
arpl
add
cli
adc
dec
lds
xchg
or
movsb
test
int3
roll
mov
adc
mov
fists
xor
pushf
jl
mov
std
adc
xchg
jbe
loopne
lock
push
setne
inc
push
mov
add
cltd
mov
pop
nop
jnp
aad
lahf
leave
inc
lahf
xor
jecxz
cld
lds
lods
ficompl
fcomi
add
mov
ja
mov
sahf
sahf
mov
out
das
and
mov
ret
cmp
addl
adc
lock
push
pop
mov
les
das
andl
sub
xchg
cmp
icebp
mov
in
sti
bound
mov
dec
enter
jmp
mov
sbb
in
jl
xchg
lods
jo
adc
xchg
fistl
or
pop
mov
dec
cld
icebp
push
shlb
cmp
jne,pt
push
sub
fidivrl
xchg
mov
inc
fmull
addl
pop
lret
mov
into
dec
or
adc
xchg
cmp
or
movsl
cld
or
clc
sub
or
push
mov
repnz
fs
int
cmp
icebp
insl
adc
test
and
push
mov
cmp
popa
mov
icebp
mov
popf
jmp
push
push
jecxz
daa
adc
xchg
dec
xchg
add
cmp
icebp
xchg
jo
jnp
push
mov
xor
pusha
pop
aad
repz
add
rorl
add
xchg
aas
jp
xor
cmp
repz
rcl
dec
dec
ja
stos
and
xchg
ds
xor
cltd
jb
push
std
lock
cmp
nop
push
in
mov
adc
push
xchg
push
test
add
shl
test
call
inc
lret
test
out
and
ret
cmp
sbb
fs
pop
xchg
xlat
pop
adc
xchg
mov
pop
lcall
and
pusha
xlat
push
loope
in
aas
out
das
xchg
loop
rorl
inc
gs
lahf
sbb
in
adc
xlat
dec
into
mov
outsl
mov
ret
filds
in
int3
mov
out
xor
nop
aas
xchg
pop
arpl
push
inc
adc
rolb
int3
flds
fucomi
xchg
out
int3
or
stos
sub
rcl
xor
mov
ficoml
in
mov
imul
jbe
arpl
lods
xor
jp
lods
lcall
ret
add
sub
inc
cmpsl
dec
iret
cltd
cmpsb
mov
mov
fs
jmp
lds
mov
lahf
pop
xchg
flds
data16
in
pop
into
lods
jp
and
lds
es
pop
sti
ficoml
mov
cmp
xlat
adc
dec
loopne
dec
jmp
inc
mov
jne
jno
xchg
mov
lahf
pop
movsl
in
addr16
jb
and
nop
inc
cli
cli
sbb
xor
leave
inc
xchg
addl
call
mov
adc
dec
pop
movsl
sub
test
hlt
xchg
rcll
ss
inc
lods
adc
ret
loope
xchg
sub
cli
or
pop
add
sti
imul
xchg
fnstenv
es
stos
jb
add
mov
shl
xor
adc
dec
paddd
sbb
orl
pop
mov
fldl
sub
call
rcrl
mov
mov
mov
movb
mov
push
jb
inc
mov
sarb
or
mov
int
nop
repnz
jmp
ljmp
sbb
repz
rcr
push
call
sub
inc
inc
mov
fsubr
jns
ja
daa
add
or
inc
repz
and
push
idiv
or
ljmp
push
gs
clc
sub
inc
lock
jle
cmp
cmc
mov
into
pop
fsts
or
dec
mov
xlat
fxch
lods
cmpsl
jae
mov
mov
out
mov
enter
je
xor
pop
add
xor
dec
add
add
xchg
rcrb
call
push
lods
mov
out
sub
jg
rcll
mov
mov
pop
addr16
ja
mov
insl
cmc
xchg
ja
mov
cwtl
push
scas
xorb
in
dec
fistpll
pop
idivb
imul
lret
orb
cmp
push
cmc
mov
cmpb
push
andl
scas
loopne
cs
hlt
fstpt
dec
push
sub
stos
xor
xchg
sbb
imul
jo
cmp
sbb
adc
mov
xchg
outsl
leave
popf
notl
lock
mov
rcl
lea
aaa
mov
add
outsb
jg
cld
xor
leave
jl
xchg
pushf
dec
and
mov
nop
std
inc
aam
mov
cltd
stc
mov
gs
push
dec
in
jmp
mov
nop
jne
js
mov
cmpsl
cmp
icebp
test
mov
and
out
dec
jle
dec
fwait
repnz
and
xchg
fisttpl
mov
cmp
push
lcall
xor
jbe
pop
and
add
stc
dec
xchg
mov
add
lea
scas
pop
inc
inc
adcb
xor
testl
dec
adc
rcll
pop
pop
sbb
cmp
ljmp
xchg
cwtl
ds
fstpt
jg
jnp
imul
pushl
add
fisttps
jg
jecxz
adc
leave
pop
and
aam
xchg
inc
aam
pop
xor
push
lock
outsb
jg
in
frstor
loope
dec
addl
mov
add
insl
push
mov
aas
lret
cs
pop
fstpl
sbb
inc
aad
test
stc
push
lcall
in
xor
sub
ja
and
mov
mov
adc
mov
fsub
stos
push
loope
mov
adc
mov
add
test
push
or
pusha
stos
mov
cmp
sub
insl
push
mov
icebp
cltd
xor
mov
mov
pop
js
sti
jns
test
outsb
add
xor
scas
mov
daa
push
lcall
pushl
jmp
jge
fisubs
loopw
imul
aam
jbe
jle
repz
cwtl
std
cli
push
in
incb
jns
inc
jg
aaa
rorl
jle
shr
dec
push
loop
jno
cmc
push
add
stc
jns
shll
test
lds
in
insb
pop
mov
jnp
cwtl
out
inc
push
push
rolb
into
insb
clc
mov
or
std
sbb
cmpsb
fisttpll
out
outsb
cmp
push
addr16
jns
repz
pushf
dec
sub
into
insl
scas
test
loope
in
jmp
jbe
je
rcll
mov
xor
shll
inc
mov
lcall
sbb
push
mov
movsb
jp
pop
fwait
add
inc
movsl
push
fidivrl
add
or
xchg
lahf
jb
sbb
movsl
scas
and
fistpll
roll
std
pop
mov
ret
cmp
add
outsb
or
imul
ds
sub
jno
dec
cmp
daa
sbb
jle
test
sarb
pop
mov
into
lahf
out
adc
cmpsl
nop/reserved
sub
and
fisubrl
adc
ljmp
jb
pushf
push
xchg
aam
inc
mov
push
shll
stc
inc
dec
fcmove
mov
inc
cmp
leave
pop
or
popf
add
les
mov
sbb
xchg
rcrl
cwtl
sbb
push
mov
je
clc
xchg
mov
shl
stc
mov
sub
or
xlat
cmpsb
mov
std
xchg
push
call
or
hlt
popa
in
adcb
arpl
lret
mov
fcoml
clc
mov
pop
pop
fildll
mov
sbb
pop
sbb
scas
or
ss
gs
dec
add
std
pop
and
dec
jecxz
push
cli
sahf
scas
jp
stos
and
bound
pushf
xchg
ss
and
std
inc
inc
stc
lods
mov
inc
inc
popa
in
add
inc
movsl
sub
and
inc
push
scas
nop
and
repz
adc
adc
mov
sbb
pop
in
js
cld
sub
fstpl
addb
lahf
popf
fistl
pop
std
mov
xchg
jnp
out
xchg
add
push
mov
mov
insl
aas
cs
sub
js
xchg
shll
mov
mov
pop
arpl
sbb
arpl
mov
pop
dec
outsb
test
add
sbb
cmp
rcr
dec
les
les
and
pop
jo
inc
fwait
adc
cltd
mov
negl
mov
popa
mov
pop
mov
mov
fidivrl
insb
mov
or
aas
cmp
jbe
and
dec
mov
pop
daa
clc
xchg
mov
pop
pop
xchg
mov
jg
into
dec
adc
cmp
mov
outsb
pop
loope
call
inc
push
mov
shll
push
ja
xor
imul
addr16
jmp
inc
fwait
cmp
cmp
cmp
ljmp
ljmp
or
shlb
xor
incb
addr16
addr16
cmpsb
adc
lds
dec
fbstp
and
loop
rorb
sub
inc
and
mov
lock
mov
inc
loopne
jmp
imul
shrl
cli
aam
and
test
and
gs
iret
rclb
add
in
rorl
sahf
ss
pop
mov
lcall
lock
push
aam
rorb
pop
out
aaa
pop
outsb
sub
pop
dec
pop
xor
iret
test
ret
mov
not
sbb
xor
ja
hlt
push
pop
es
pop
mov
popf
ret
stos
into
jle
imul
movsb
js
push
mov
jl
dec
ret
mov
adc
add
mov
and
repnz
rolb
cmp
cmpsb
mov
ftst
sbb
sub
scas
enter
cmp
xchg
dec
or
fs
push
xchg
stos
mov
pop
pop
cs
mov
mov
pop
xor
jnp
lret
inc
cmp
lds
inc
add
pop
xlat
pop
or
popf
sti
push
mov
das
or
dec
pop
lods
loop
inc
xlat
xor
stos
bound
negl
cmp
fcomps
notb
xor
cmp
mov
imul
inc
in
inc
das
mov
mov
pop
mov
and
test
stos
test
and
dec
out
sub
push
pop
inc
gs
pop
mov
sbbl
or
movsb
xorl
sbb
mov
fidivrl
loope
imul
pop
adc
scas
xlat
aam
enter
lods
ss
out
and
icebp
pop
jnp
jge
jnp
dec
add
push
aas
addr16
sbb
loop
fildl
xchg
sahf
inc
pop
or
jg
mov
psrad
cld
stc
std
pop
sbb
fstps
mov
lea
daa
not
inc
adc
mov
pushf
movsb
sbb
jbe
sub
ss
sti
shrl
enter
pusha
imul
mov
outsl
mov
rcl
xchg
sub
ds
stc
cmpsl
inc
pop
test
mov
movsb
pop
pop
sbb
push
fs
or
popf
rorl
imull
or
xor
rcll
xchg
loop
xchg
and
aas
rorl
test
icebp
imul
arpl
pop
dec
out
mov
cmc
sub
sub
out
pushf
and
inc
test
and
push
cmp
pop
adc
ror
loopne
lock
movsl
add
mov
add
cmp
lods
mov
mov
push
lock
sbb
jnp
movsb
shll
and
int
add
push
xchg
nop
arpl
mov
and
xchg
test
jecxz
mov
push
lods
mov
je
sbb
mov
sub
cmp
lret
hlt
add
adcl
int
fs
push
test
pusha
pop
aad
cmp
and
ret
ret
shlb
xchg
jge
imul
mov
mov
fbld
mov
pop
imul
push
mov
jle
jno
lods
call
test
out
and
nop
std
cmpb
mov
add
add
mov
shrl
lret
rcr
sbb
cmp
push
rorb
mov
arpl
push
inc
in
sub
out
push
xor
lret
cld
xchg
push
pop
cmp
xchg
out
push
movsl
mov
popf
scas
out
fucomip
stos
jne
movsb
out
sarb
mov
xor
ds
sub
add
ret
pop
sti
xchg
cmp
fdivr
pop
test
dec
loopne
mov
imul
sub
scas
lods
and
ljmp
mov
imul
and
ja
cmp
mov
push
jne
leave
sarb
fucomip
cwtl
les
xlat
xchg
xor
int3
scas
shlb
nop
inc
cltd
pop
insl
jno
jmp
loope
fildl
add
sti
lods
lahf
mov
rorb
sti
inc
inc
addl
das
add
mov
mov
cmp
jo
adc
rcll
lea
jecxz
icebp
imul
cmpsb
pop
sbb
cld
pop
lcall
fisubrs
mov
out
popf
or
push
nop
testb
pop
iret
pop
mov
push
andb
mov
out
mov
mov
popf
sub
ljmp
push
out
sti
call
push
ret
xor
ret
sbb
scas
in
xchg
ja
pop
andl
arpl
ret
mov
cmpb
mov
jb
jmp
ficompl
outsb
fcoml
int3
sub
scas
rorl
inc
testb
ja
pop
repnz
mov
cmp
outsb
int
xor
inc
sbb
aam
bound
xor
lcall
mov
adc
sub
xor
jle
dec
add
jle
jbe
loope
add
das
into
mov
es
xor
and
xchg
rcrb
neg
dec
xor
testb
cmp
cwtl
xchg
ja
daa
loop
int
and
or
shr
js
fiadds
sahf
jbe
lods
and
cs
jl
inc
lods
xchg
scas
or
sbb
add
negb
sub
stos
loope
in
jb
mov
or
dec
std
ss
in
jmp
imul
fadds
hlt
pop
jmp
shlb
repnz
out
js
das
lret
sub
or
push
movsl
pusha
in
pop
push
loop
fwait
lret
pop
lea
xor
lahf
shll
pop
adc
dec
mov
mov
mov
imul
adc
pop
sub
xchg
sahf
pop
adc
addr16
xlat
add
jp
jns
push
jo
jb
test
int3
cmp
or
in
jecxz
xchg
in
lahf
push
pop
test
cs
fistpl
les
nop
jns
pushf
fs
dec
xor
outsl
sbb
mov
lret
lds
insb
xchg
push
dec
cmp
roll
cmc
jmp
dec
rcrl
xchg
xchg
jp
stos
leave
and
mov
xor
xchg
addl
pop
adc
insl
xor
mulb
adc
sahf
dec
aas
out
and
dec
ja
or
pop
jnp
xor
mov
inc
cmp
cmp
movsb
out
sahf
add
fldcw
push
xchg
ltr
inc
in
not
lcall
mov
cli
repnz
insb
cs
ret
xchg
pop
adc
pop
cmpsl
push
or
popa
pop
loop
dec
inc
sbb
jge
push
in
lahf
mov
or
inc
popa
mov
mov
xor
jo
pop
lea
rcrl
sub
and
andb
mov
scas
xlat
jmp
shll
xor
test
aad
dec
mov
scas
or
rclb
lcall
sub
add
cs
js
pusha
lods
push
cltd
jo
iret
scas
sub
xor
add
fcmovbe
adc
push
or
or
int3
cmp
jb
or
insb
sub
sbb
cltd
adc
sub
iret
ret
push
mov
aas
sti
int3
mov
xchg
cld
push
cmpsb
dec
xchg
jb
mov
cmc
aad
mov
icebp
xchg
std
jl
cmp
sti
push
adc
lods
rorl
imul
sbb
adcl
jl
je
pop
in
push
push
out
pop
mov
out
shll
iret
dec
jnp
ljmp
movsl
xor
mov
aad
dec
ret
or
stos
lret
nop
mov
mov
inc
xor
out
in
roll
rcr
push
sbb
rcl
ret
xchg
sbb
sar
cli
cs
xchg
insl
aas
std
mov
pop
pushf
shll
mov
ljmp
mov
lret
loopne
clc
lds
xor
addl
adc
mov
mov
jle
fwait
and
cld
cmpsb
test
lock
nop
out
popf
xchg
cmp
xchg
les
pop
mov
test
xorb
aaa
loop
lahf
cmpl
bound
idivl
dec
mov
pusha
push
adc
mov
shlb
mov
mov
iret
inc
repz
movsl
and
lret
dec
mov
cmp
cli
xor
cmp
mov
jecxz
fidivl
cmpl
xchg
sub
push
or
fisubs
add
adc
xor
aaa
dec
shrb
mov
loope
in
push
shll
mov
adc
sub
cmc
sub
das
ds
cmc
xor
mov
loopne
dec
fistps
sbb
lcall
mov
gs
cmpsl
inc
jb
cli
das
jae
mov
add
jge
mov
adc
add
and
push
sahf
rorb
and
sbb
hlt
test
std
seta
or
push
cmp
mov
mov
inc
or
adc
leave
xlat
push
fadds
pop
insl
xor
arpl
sbb
or
repz
test
mov
pop
mov
std
jmp
mov
jg
das
push
rorb
out
insl
mov
cmp
mov
enter
mov
inc
dec
fnstcw
dec
ds
adc
lds
cmp
push
sub
out
rcr
cwtl
imul
jp
test
vxorps
hlt
xor
or
call
sbb
js
mov
inc
add
ret
mov
aam
cmp
ret
mov
adc
mov
mov
out
or
xchg
ds
cmp
je
mov
push
roll
aaa
adc
and
adc
cmp
pop
sub
shrl
sbb
fdivl
stc
iret
jmp
cmp
ljmp
movsb
adc
mov
sahf
sahf
int3
popl
sub
mov
fdivrl
pop
popa
mov
push
gs
das
mov
cmpsb
aas
test
jp
and
nop
fstpt
jp
xor
rol
ret
jmp
fsubrs
jge
in
pusha
insb
mov
pop
das
cmpsb
xchg
leave
push
clc
gs
dec
sbb
push
lcall
mov
lock
or
sahf
or
movsl
adc
inc
sti
cmp
xchg
mov
mov
push
pop
pop
add
or
dec
and
repnz
sbb
pop
jecxz
les
enter
xor
enter
test
mov
jns
fsubp
push
mov
cmpsb
sbb
sub
mov
repz
js
arpl
fldt
mov
incl
fneni(8087
std
shr
clc
push
mov
pop
sbb
sbb
repz
lds
in
sub
mov
ret
icebp
cmp
mov
or
std
rolb
mov
mov
insl
or
mov
push
arpl
lea
sbb
mov
sbb
rcrb
push
mov
imul
pusha
dec
subb
int3
pop
aas
repnz
clc
jge
gs
cld
dec
adc
jbe
push
cmpsl
xchg
dec
xchg
fldt
fnstsw
cmp
and
mov
mov
pop
int3
fisttpl
jmp
fsts
mov
iret
mov
sub
cmp
insb
jmp
mov
sub
add
subl
jb
push
repnz
ja
xor
xchg
push
jb
jno
icebp
andb
push
push
mov
pop
inc
add
push
mov
add
mov
insb
out
inc
arpl
pop
fbld
xlat
add
mov
cmpb
inc
inc
jnp
mov
test
lret
pushf
hlt
rolb
scas
popf
adc
jbe
dec
jns
sub
dec
add
out
cmpsl
xchg
ljmp
addr16
rclb
inc
fucomi
rcrl
notb
lods
jne
js
scas
push
jecxz
sbb
dec
add
cs
lret
paddsw
jp
faddl
or
dec
jg
incl
xchg
sub
testb
es
jmp
mov
addr16
movsb
xor
sub
jle
iret
int3
jmp
and
jg
sbb
ja
aam
pop
sbb
jmp
popf
xchg
ffreep
popa
pusha
inc
shlb
dec
xor
mov
xchg
testb
ret
mov
dec
push
aaa
push
cmp
lret
mov
cmp
or
xchg
movsl
lock
je
xchg
xchg
cmc
inc
push
mov
lods
hlt
movsb
sbb
push
jg
cwtl
test
mov
adc
mov
bound
call
push
repnz
loopne
cmc
pop
imul
pop
add
clc
xor
ret
xorl
movsl
sbb
sbb
mov
bswap
jae
insb
leave
inc
sub
jp
ljmp
cmp
xlat
xor
scas
dec
cmpsl
sub
sbb
mov
xchg
sbb
mov
ret
rclb
gs
lcall
sti
pop
faddp
mov
imulb
mov
mov
mov
add
push
pop
ja
ret
ja
add
mov
sbb
push
inc
jae
cmp
and
mov
xor
out
push
iret
mov
insl
xor
and
lret
inc
mov
lret
sub
outsb
and
lret
adc
inc
sbb
repz
add
es
rcll
xchg
mov
pop
ret
push
aam
rorl
and
int
xor
dec
sbb
jl
push
mov
xchg
add
jl
xchg
fwait
jnp
cld
pop
jle
cmp
mov
out
push
fs
pop
clc
lds
rclb
cmp
std
sub
nop
in
mov
sub
repnz
mov
jecxz
adc
cmp
fnstsw
ret
mov
test
inc
popa
mov
adc
pop
cmpsl
pop
sub
sbb
mov
jge
xchg
sbb
das
push
sbb
mov
pop
addr16
mov
pop
subl
popf
test
fstps
cmp
inc
push
xchg
mov
inc
sarb
mov
repz
mov
insb
cltd
xchg
insl
ds
xor
jge
shll
gs
icebp
fidivl
dec
int3
movsb
push
iret
xchg
js
inc
ror
sub
popa
test
or
es
movsl
pop
icebp
inc
dec
movsl
lret
mov
jl
fistpl
mov
xrelease
call
lods
and
sub
shrb
lahf
adc
inc
sub
addb
mov
sub
jnp
xchg
sub
inc
or
inc
cmpsb
movsb
in
psubsw
sub
movsb
jecxz
jge
sub
outsl
pop
jno
jg
popa
pop
lret
and
mov
fisubrl
mov
cmpsb
jp
out
aaa
popa
sbb
pop
test
jbe
push
sbb
scas
fisubs
jp
sbbl
pop
mov
lahf
mov
mov
jnp
pop
jbe
add
and
aas
cmp
sub
lock
lods
jle
adc
daa
test
dec
scas
dec
or
and
jno
mov
xor
push
jbe
out
sub
push
mov
in
mov
pop
sbb
inc
sahf
jns
arpl
aaa
das
test
movsl
fstl
inc
pop
or
nopl
rorb
xor
cmp
push
insb
pusha
and
adc
push
cmp
xor
add
lds
xlat
arpl
fisubrl
xor
xchg
roll
xorb
pop
jns
fdivs
int
or
outsl
and
push
xor
xor
cwtl
mov
inc
dec
add
mov
das
je
insl
sub
aaa
cmc
scas
pop
test
mov
dec
push
gs
testb
xchg
push
pop
arpl
add
jge
xchg
or
dec
addr16
cli
cmp
iret
rol
lds
test
xor
inc
fxam
call
mov
push
faddl
cs
mov
cmp
aam
sbb
mull
jns
sub
arpl
sub
int
sub
cmp
push
add
out
and
fnstsw
xor
sar
aad
lret
rcrl
pop
jmp
inc
sub
inc
inc
inc
hlt
outsb
xchg
dec
dec
cmp
hlt
jmp
call
dec
popf
scas
and
adc
jmp
dec
and
pop
insb
ss
inc
mov
adc
psubsw
xadd
stos
lods
sub
push
mov
or
sahf
and
lret
push
fucomip
mov
lahf
and
lcall
sub
sbb
sub
les
sub
dec
push
in
dec
jns
adc
inc
rorb
adc
cltd
fdivr
push
jmp
adc
add
xchg
test
cwtl
or
jmp
xlat
int3
das
xchg
test
xchg
mov
dec
mov
add
pop
jecxz
dec
data16
in
sbb
adc
cmpsl
mov
outsb
pop
int3
cs
mov
mull
or
mov
fs
mov
daa
xchg
lahf
sti
sti
gs
and
ret
gs
enter
sub
mov
aaa
jp
adc
pop
add
inc
sbb
mov
cmpsl
pop
aas
pop
cmp
fisttpl
repnz
int3
jb
pop
out
mov
mov
in
jb
fmull
out
in
or
lcall
and
lods
lret
shlb
sub
mov
xchg
ljmp
repz
cmp
jns
mov
leave
aam
enter
sahf
int3
int3
adc
jp
adc
in
icebp
add
lcall
push
and
stos
rorb
vmwrite
push
cmp
and
jmp
cs
and
cmp
jae
hlt
int
mov
in
pop
out
mov
and
xor
or
stc
pop
mov
mov
and
sub
test
dec
pop
loope
push
push
sarb
cmp
jmp
jl
and
ljmp
cmp
ds
cwtl
push
jge
fldt
mov
clc
mov
pusha
add
adc
push
ror
leave
ja
movsl
loope
jecxz
add
stos
shrb
pop
fbstp
stos
adc
sbbl
jae
pop
flds
mov
adc
sub
out
jle
mov
js
enter
inc
pop
sub
and
jecxz
popa
sti
fadds
mov
ret
lret
mov
jne
std
adc
jo
or
test
sub
clc
jns
stos
imull
fwait
xchg
or
frstor
lods
adc
repnz
fistl
imul
mov
fwait
test
adc
mov
sbb
sub
mov
pop
in
imul
and
in
sbb
mov
rorb
adc
push
jnp
push
xor
insl
das
cmp
sarb
jae
push
out
inc
ja
sub
imul
mov
gs
repnz
cltd
mov
loopne
lret
cmp
lahf
iret
dec
cmp
and
cltd
mov
xchg
sbbb
fwait
popf
jne
clc
imul
cmpsb
ss
mov
sbb
sbb
pop
push
push
jae
inc
loop
outsl
test
mov
jle
repnz
jmp
insb
rorb
jnp
test
push
lock
jnp
cmp
mov
fbld
rcrb
push
jmp
ficoml
pop
rcrl
inc
jmp
shlb
stc
lret
sub
add
jge
fsubs
pop
mov
push
into
push
cmp
data16
jns
aaa
jo
jg
data16
push
xchg
mov
jns
mov
ds
inc
or
popf
sub
cld
adc
adc
xchg
loope
inc
mov
shlb
sub
cmp
add
mov
dec
mov
aaa
shl
in
aad
push
sahf
and
in
dec
insl
sub
ret
sub
fsubl
push
jo
mov
out
imul
nop
pop
inc
aad
mov
clc
outsl
test
std
ret
xor
mov
push
lock
inc
lock
in
lret
gs
test
mov
pop
inc
out
cltd
aam
jbe
pop
shrb
mov
ret
cmp
js
nop
xorl
loope
cwtl
pop
clc
std
scas
cmp
leave
subb
pop
add
add
movsl
fadds
dec
push
add
movsb
je
xor
mov
fcmove
cltd
cltd
jbe
test
xchg
adc
adc
or
and
pop
sub
leave
jo
sub
insl
lds
pop
shll
lods
fdivl
push
lods
repz
sub
cmpsl
pop
scas
test
add
rcll
sub
loop
lods
pushf
xchg
stos
pop
push
lret
mov
inc
pop
pushf
mov
adc
push
mov
test
xchg
shrb
idiv
daa
adc
repz
arpl
xchg
clc
mov
test
cmp
test
adc
fisubs
outsb
cltd
jae
loopne
jae
insb
mov
ss
aaa
xchg
fldenv
lods
adc
pop
sbb
xchg
or
mov
xor
lahf
stos
sub
cmpsb
mov
lret
bound
add
es
inc
mov
les
fs
arpl
pop
in
adc
sbb
jbe
outsl
cltd
sbb
lahf
jg
pop
adc
mov
add
xor
rorl
fiaddl
test
mov
adc
pop
cld
imul
cmp
leave
call
add
sub
pop
mov
push
test
push
xchg
or
and
std
imul
or
xor
outsb
jl
out
popa
and
out
mov
aaa
mov
jo
dec
sub
dec
insb
enter
jo
push
and
and
xor
cmp
inc
jb
into
repz
cmp
sbb
filds
mov
sub
mov
call
cmp
pop
push
ds
movsl
and
inc
dec
mov
imul
out
pop
dec
mov
jne
std
iret
fcmovnbe
pop
call
xor
push
iret
in
jns
sbb
cld
in
in
dec
fs
test
mov
rorl
int
outsb
mov
push
stos
test
or
and
xlat
inc
sahf
fyl2x
rolb
aas
pop
or
ret
pop
scas
gs
push
outsb
cmp
in
fnstenv
sbb
stc
cmc
jl
in
insl
popa
icebp
out
sahf
dec
xor
stc
mov
inc
or
push
fmuls
sub
cmp
lahf
add
ret
and
fcomip
dec
push
enter
mov
sbb
outsb
and
outsb
jno
and
adc
mov
xchg
add
imul
lock
push
mov
mov
loopne
mov
and
cmc
inc
mov
xchg
mov
out
ds
negb
jbe
iret
stos
int
stos
mov
cmp
add
repz
or
lods
loope
jne
mov
insl
xchg
lcall
in
aad
ror
out
sahf
dec
repnz
sbb
shlb
push
and
inc
mov
cmp
aad
divl
push
jmp
movsl
xchg
adc
pop
popa
adc
aam
jle
push
dec
lods
add
dec
test
sbb
pushf
mov
adc
stc
into
mov
pop
ja
in
loopne
sub
push
sub
jl
mov
add
or
fidivs
cmp
fcoms
adc
lret
xor
sbb
xor
add
mov
cmp
imul
push
aad
mov
dec
ds
jae
mov
cmp
cmp
popf
jae
nop
inc
cmpsb
mov
inc
addb
pushf
jbe
lret
fs
xlat
pop
xorl
xor
outsb
push
mov
hlt
loopne
sbb
adc
push
sti
inc
push
mov
in
js
test
pop
mov
lods
ds
rclb
dec
ret
ret
sub
divl
ret
xchg
mov
mov
sti
cwtl
stos
mov
pop
inc
cmp
push
int
push
repnz
fisubl
xchg
test
movsb
in
mov
int
lret
popf
aaa
sub
adc
jnp
pop
mov
inc
cs
in
stos
jae
inc
sub
xor
mov
push
loop
in
outsl
sbb
inc
loopne
adc
stos
jmp
jge
out
xchg
jo
ret
icebp
loopne
mov
mov
mov
rol
lret
dec
mov
imul
xor
in
je
push
xor
dec
mov
xor
in
stos
test
dec
aaa
in
fbld
mov
dec
or
out
adc
test
jae
xor
sbb
ficoml
stos
sbb
cmp
test
dec
or
fcomps
xchg
cli
shrl
repnz
fdivs
pop
xchg
fxtract
jo
shll
repnz
xchg
loopne
fsubrs
shll
fldl
mov
mov
cmc
mov
loope
sbb
sub
mov
adc
movsb
shrb
lods
cld
cltd
sbb
enter
pop
push
mov
jb
adc
inc
icebp
das
icebp
leave
and
pop
or
cmp
adc
insb
dec
sbb
push
sub
cmp
clc
adc
mov
add
push
sbb
mov
or
cmp
mov
aas
push
andl
testl
mov
fistpl
mov
sub
repnz
les
add
lods
pop
sub
dec
push
test
arpl
jecxz
jp
lahf
mov
mov
in
cmp
insb
inc
mov
mov
es
out
int
mov
xlat
out
push
lret
stos
add
cltd
lods
out
pusha
insl
insl
jb
int
sbb
push
push
xor
adc
sub
clc
mov
insl
push
lds
test
mov
cmp
lods
add
mov
mov
jb
fs
adc
fs
mov
and
cwtl
sub
popf
fists
dec
push
adc
push
cwtl
push
push
loopne
imul
jl
les
ret
pop
mov
repnz
shll
outsl
sbb
ret
push
fwait
cwtl
xchg
sub
dec
imul
lods
flds
out
adc
sahf
test
push
sar
jmp
jns
cltd
mov
cmp
loop
jnp
outsl
das
mov
inc
faddl
outsl
add
jae
scas
ljmp
lahf
jp
aam
fldt
ljmp
mov
dec
pop
cmpsl
out
xchg
and
hlt
sbb
cli
cmp
mov
xchg
and
push
inc
xchg
and
repz
xor
push
cmp
sbb
gs
push
sub
push
imul
cmp
jle
lods
test
scas
mov
je
imulb
add
xor
jno
in
push
add
aam
into
cltd
adcb
rclb
notb
roll
push
in
jno
shr
jo
loope
xchg
jae
or
cmc
lods
lock
mov
lock
sbb
push
push
pushf
into
enter
mov
mov
dec
dec
pop
jmp
mov
ss
in
cmpl
push
pop
lcall
mov
add
dec
xchg
adc
mov
add
push
test
lods
ja
xchg
ja
dec
mov
repz
ss
adc
stos
mov
pop
push
ss
test
mov
adc
ror
je
lret
les
and
ret
and
and
sti
notl
xor
dec
jnp
movsl
jno
insl
clc
cmp
scas
add
mov
cmp
call
jl
mov
add
jp
imul
mov
add
xchg
push
mov
sbb
xor
ja
dec
mov
jb
jne
jecxz
mov
je
pushf
pop
dec
adc
sbb
adc
sbb
data16
xor
add
jmp
push
shll
adc
sbb
push
adc
sbb
pop
mov
jp
fbstp
loop
imul
or
push
daa
dec
adc
fwait
scas
xchg
lcall
jo
push
adc
mov
outsb
add
inc
jno
dec
cmp
clts
pop
lods
sub
rcrb
mov
dec
push
push
in
addb
mov
enter
dec
adc
daa
roll
mov
mov
sti
fld
loope
or
mov
jnp
lret
adc
fdivrs
andl
cmp
inc
inc
jecxz
ret
sub
arpl
div
icebp
push
fucomp
hlt
jmp
icebp
ret
add
sti
jg
push
dec
mov
xor
in
mov
scas
inc
int3
dec
sub
cs
add
sti
fwait
jns
shl
dec
sub
pop
xorb
sub
aas
mov
jns
insl
inc
push
sbb
loope
mov
sub
sbb
aas
das
insl
popf
hlt
outsl
mov
int
adc
fs
call
mov
imul
aam
ficomps
jno
hlt
cwtl
repnz
pop
pop
cwtl
loope
adc
pop
xor
pop
xchg
pop
cmp
and
mov
mov
mov
mov
test
or
mov
push
lods
xchg
dec
cmp
jns
jne
push
insl
in
and
mov
pop
call
fdivp
fists
push
out
lret
insl
sbb
fcompl
push
clc
dec
cmp
cmp
and
push
jmp
stc
gs
push
xchg
jg
ss
xor
adc
in
push
or
out
or
adc
sbb
xor
sarb
out
pop
mov
sub
jne
repnz
dec
cld
call
or
mov
test
push
stos
clc
bound
int3
mov
les
mov
jo
das
in
and
adc
lods
adc
jbe
arpl
in
mov
addr16
pop
lds
mov
pop
lods
dec
aad
xchg
imul
imul
movsl
test
iret
repnz
dec
stos
fwait
in
dec
sbb
mov
pop
xchg
jbe
movsl
adc
inc
inc
sub
mov
ljmp
arpl
adc
push
lret
cwtl
loop
in
sub
sbb
js
cs
sbbb
mov
insb
rcrl
popl
dec
adc
jge
pop
pop
mov
or
xchg
mov
adc
ljmp
cmp
mov
adc
outsb
jbe
hlt
je
mov
xchg
mov
and
in
lods
fisttpll
mov
mulb
sub
cli
stc
std
xchg
test
lds
dec
xor
mov
out
jmp
add
dec
jp
enter
mov
push
mov
pushf
xor
xchg
push
sbb
inc
iret
mov
or
ss
mov
and
jmp
push
push
out
or
jbe
popf
mov
es
fdivrs
add
push
es
or
push
mov
fdivrl
out
add
stc
xchg
mov
mov
cmp
mov
test
sbb
jnp
cmp
popf
xchg
fsub
scas
sub
or
lds
icebp
mov
and
jo
mov
dec
mov
pop
aad
mov
inc
js
shll
push
inc
in
pop
lock
cmc
xchg
adc
fnstcw
and
scas
fsubrs
push
cmp
or
fcom
ljmp
movsb
mov
imul
clc
dec
or
push
and
pop
inc
fsubr
xor
lds
jno
int3
cmp
fldl
mov
jnp
out
and
xor
dec
pop
and
sahf
sbb
lcall
dec
bound
movsb
test
sbbb
mov
sbb
pusha
jns
xor
cmp
cmp
pop
std
mov
aad
inc
lahf
xchg
xchg
dec
add
stos
inc
sahf
xor
mov
inc
sub
pop
cli
mov
dec
dec
leave
adc
xor
stos
push
fdivrl
xchg
mov
inc
or
pushf
add
mov
mov
notl
mov
je
addl
scas
jle
cli
inc
xchg
int3
aaa
mov
jbe
loopne
popf
int
mov
stc
jge
clc
jecxz
jmp
cwtl
push
xor
mov
sub
stos
add
leave
inc
pop
mov
mull
push
jecxz
pop
adc
sahf
insb
pusha
push
in
orb
out
lret
icebp
fstpt
mov
push
xor
xchg
insb
jno
outsb
push
cmp
add
fnstenv
mov
ss
xchg
das
sub
sub
mov
xor
shll
cmpsl
cmp
incb
jbe
mov
mov
ds
popa
dec
popa
clc
sub
jno
jp
inc
roll
xor
cmp
int3
test
sub
push
inc
popa
js
loope
icebp
clc
hlt
adc
dec
adc
nop
push
push
negl
fstpl
cmp
lahf
push
sbb
jecxz
aas
cli
xchg
mov
sbb
andl
jb
call
jo
lods
fiaddl
dec
pop
add
ja
add
jge
or
lds
xor
jbe
adc
cmc
pop
cmpsl
or
fs
ret
stc
pop
repnz
xor
or
test
mov
jns
xor
mov
pop
fs
insb
sub
negl
mov
outsl
push
cmpsb
pop
subb
out
call
cmp
jl
in
pop
mov
xor
push
jmp
jns
inc
add
mov
sub
jbe
xchg
jnp
mov
dec
or
inc
aad
and
pusha
dec
addl
or
sbb
repnz
sub
ja
cmp
test
inc
je
es
mov
add
daa
cmp
cmpl
push
jg
popa
insl
stos
arpl
insb
xchg
out
sbbb
pop
lret
stos
mov
das
lcall
push
dec
dec
popa
idivb
es
lret
adc
cwtl
cmpsb
in
mov
aas
pusha
fxam
xchg
je
fs
jl
push
pushl
cmp
aad
or
inc
out
int3
and
sarl
xor
lods
push
cmp
pop
mov
xchg
pop
or
inc
mov
imul
push
cmp
lret
into
xor
add
movl
lret
ficomps
scas
cmpsb
movsb
fwait
sub
test
aaa
push
loope
movsb
mov
insl
pop
cs
daa
pushf
lods
jb
dec
enter
out
cmpsb
sub
pop
adc
out
jmp
rorb
and
aam
loopne
xchg
jmp
clc
jge
fs
sub
nop
dec
dec
test
fnstsw
pop
jns
in
stos
push
cmp
aam
aad
mov
cmp
push
out
dec
lcall
rcrl
jl
scas
in
mov
dec
push
pop
lods
scas
xor
pop
arpl
ficoms
ja
ja
scas
aas
and
shll
mov
jae
push
mov
pushf
adc
pushf
jmp
lea
sub
lock
push
repnz
mov
inc
xcrypt-cfb
cmpsl
popa
ja
add
insl
sub
repnz
jecxz
iret
jno
push
mov
movsb
jne
xor
mov
xor
cwtl
jb
xlat
repz
add
cmc
dec
lods
mov
adc
or
or
jle
xchg
adc
or
or
mov
cmpsb
and
sub
aas
xchg
or
cltd
movsb
jge
cmp
jg
jecxz
pop
pop
fcomp
iret
add
push
pushf
into
arpl
mov
xchg
pushl
sbb
adc
cmp
pushf
mov
xchg
pusha
test
add
inc
push
loop
test
pop
test
jecxz
inc
ja
stos
xchg
aas
push
rorb
mov
sbb
and
mov
sub
mov
dec
add
push
jecxz
cld
add
ja
sbb
repz
mov
aad
jbe
popa
aam
mov
add
inc
jne
sub
jne
enter
lock
cmpsb
movsl
clc
and
ret
sbb
jmp
push
push
add
les
push
mov
pop
pop
pusha
push
movsb
and
nop
sbb
add
xchg
xor
and
inc
sti
incb
fsubrl
push
xor
mov
dec
sub
mov
lret
cmc
ret
cmp
mov
mov
and
scas
mov
fs
add
add
or
ds
insl
sub
lods
inc
sub
aaa
xchg
sub
adc
nopl
mov
inc
outsl
xor
mov
mulb
imul
mov
bound
xchg
cmpsl
ss
mov
push
sbb
mov
mov
nop
stc
mov
ret
push
inc
outsl
cltd
mov
les
cmc
xor
and
dec
das
jo
adc
sub
stos
cmpxchg
sbb
inc
call
cmp
test
jne
and
cmp
add
cmpsb
push
push
in
les
stos
xor
movsl
jno
mov
subl
adc
lahf
stos
shlb
mov
cmpsb
lret
cmpsb
rol
add
mov
and
scas
cmpsl
stos
in
adc
mov
pop
or
sub
jmp
das
cmp
clc
repnz
lock
inc
push
xchg
das
cltd
imul
sub
pop
fs
cltd
mov
xor
dec
frstor
inc
push
mov
lcall
ljmp
out
push
mov
add
push
mov
xchg
ret
push
aad
jmp
inc
dec
inc
loope
out
je
dec
cmp
mov
and
pop
repnz
popa
xchg
mov
ficompl
lods
inc
add
push
mov
xor
dec
sub
push
pop
xchg
cmp
iret
or
mov
clc
adc
dec
andl
mov
push
fistpl
adc
rorl
in
pop
cs
dec
xchg
adc
orb
jno
inc
jae
push
mov
lods
sub
mov
stos
aas
or
mov
xchg
das
cmc
cmp
cmpsb
fwait
mov
inc
cmp
xchg
gs
mov
mov
cmp
inc
mov
jb
call
dec
jne
jns
lods
push
mov
pop
add
lret
push
xchg
jp
lret
popf
xor
mov
mov
mov
add
cmp
pusha
rcll
inc
test
mov
sti
icebp
test
call
cmp
xor
adc
cmp
les
fnstcw
fwait
cmp
adc
mov
out
enter
and
and
xchg
inc
add
jl
push
clc
dec
aam
lret
cli
fisttps
movl
adc
call
gs
xorl
test
imul
test
out
shlb
lahf
mov
lds
fistps
mov
movsb
lea
test
lea
mov
sbb
ret
div
push
nop
or
push
xchg
mov
mov
jge
jecxz
enter
or
leave
les
push
add
pop
fimuls
out
rol
test
xlat
dec
cs
and
jae
fbld
les
clc
push
sbb
leave
cmc
jae
rorb
xor
jbe
adc
cli
adc
enter
jl
adc
lret
dec
outsl
and
fisubl
dec
pusha
int3
sti
repnz
jl
or
scas
ljmp
inc
sub
mov
ret
jmp
lret
out
repnz
in
dec
inc
push
movsl
sti
ficoml
sub
mov
ret
cltd
outsb
mov
in
jmp
pop
hlt
mov
inc
and
call
mov
push
sub
mov
decb
mov
push
and
scas
or
jmp
mov
jo
iret
and
or
cli
popf
jae
popa
lds
jle
pop
jge
xor
ror
jns
push
dec
cmp
sbb
fwait
and
loopne,pn
jo
mov
jb
insb
ret
nop
dec
jle
or
int
into
sbb
pop
faddp
dec
adc
dec
cmp
inc
insb
movsl
and
push
loop
mov
ljmp
add
xchg
cmp
data16
mov
xor
ljmp
mov
ljmp
add
ljmp
mov
call
addr16
pop
mov
dec
dec
dec
hlt
cmp
test
inc
ss
inc
fldcw
cs
mov
iret
push
fcomi
repz
scas
cmp
and
cld
mov
leave
fdivs
rclb
sub
subl
jecxz
mov
insl
loop
sti
pop
or
xor
mov
xchg
cmp
jo
pop
jno
sbb
into
inc
popa
leave
idivb
lret
in
in
mov
fs
jg
dec
mov
jge
xlat
mulb
jl
shll
out
adc
or
les
lock
sbb
add
xchg
mov
pop
stos
shrl
and
scas
rol
iret
jne
push
cwtl
and
fldz
lods
xor
cmp
sbb
pop
arpl
mov
xor
int3
addr16
bound
xor
push
jo
xor
popw
sbb
xor
sbb
movsl
adc
xchg
push
or
jb
stos
pop
iret
das
pusha
mov
mov
mov
and
mov
mov
mov
sub
pop
mov
subb
push
cld
fcoml
ficompl
lret
xchg
dec
push
repz
sbb
mov
stos
lcall
out
cmpxchg
mov
xor
mov
lret
adc
jle
mov
pop
adc
data16
clc
fistl
jb
cmp
mov
test
xor
scas
out
mov
movsl
dec
xor
push
sbb
lret
mov
adc
mov
iret
movsb
lods
cmp
fsubs
push
inc
xorb
or
mov
push
fcomps
cmc
in
sub
sbb
dec
mov
adc
ffreep
popa
aam
popa
push
hlt
push
jb
insl
xor
scas
mov
push
mov
xor
arpl
sub
dec
cmpsl
mov
cmp
dec
mov
or
lock
je
push
je
pop
xor
inc
icebp
pop
orl
and
dec
jb
dec
sbb
xor
dec
push
cmpsl
add
jae
outsb
xchg
dec
movsb
mov
mov
jno
inc
jg
push
and
sub
mov
jle
dec
add
add
js
fs
xchg
bswap
bound
idivb
lock
cmpsl
mov
out
push
lahf
out
dec
pop
inc
mov
cmpsb
popa
int
insl
addr16
and
iret
addr16
icebp
add
aas
sbb
das
and
lret
clc
movsb
sub
addl
xor
in
mov
and
repnz
rorl
sbb
or
mov
cld
lcall
pop
js
mov
push
jbe,pn
je
repnz
mov
cmp
mov
push
sysenter
in
ds
movsl
ficoms
jno
imul
ret
cltd
lods
push
stos
sbb
lret
fldl2e
insb
cmp
call
sahf
and
mov
and
add
hlt
je
mov
or
aam
stos
jne
mov
lods
stc
or
pop
fldcw
icebp
mov
adc
sarb
xor
repnz
sti
scas
ljmp
sub
jle
sub
je
mov
push
adc
das
aaa
adc
pop
fidivrs
stos
dec
sub
pop
xor
in
push
mov
jo
in
adc
ljmp
xlat
popa
sbb
sarb
xor
imull
cmp
aad
mov
cmp
fildll
adc
push
xor
inc
icebp
push
mov
and
pushf
js
xchg
push
ret
or
mov
lahf
adc
setnp
aas
mov
sbb
int
cli
xor
mov
sbb
push
mov
fstpl
stos
pop
sub
and
jnp
inc
aam
push
inc
cmpsl
repnz
jbe
add
adc
andl
jp
jmp
int3
jne
mov
push
call
xchg
and
add
mov
rorb
std
inc
sub
jnp
pop
aas
cmp
outsb
lods
jb
push
push
sub
add
xor
xchg
pusha
cmpsl
loope
xorl
das
mov
mov
arpl
jae
add
and
mov
push
testb
inc
xchg
ficoml
mov
cs
add
add
andb
rcr
popf
popf
push
iret
jp
pop
sar
pusha
outsb
enter
xor
mov
cmp
jl
mov
inc
ljmp
jmp
jne
rolb
xor
and
in
jno
dec
sahf
loope,pn
sar
stos
scas
pop
add
ret
cmpsl
xchg
test
inc
je
in
ja
imul
test
into
dec
cmp
stc
dec
sub
out
in
cmpsl
inc
mov
pop
add
mov
jnp
stc
mov
iret
outsb
push
or
data16
icebp
xchg
imul
shl
pop
scas
fdivrs
pop
push
add
xorl
lcall
sbb
mov
add
mov
fstps
cltd
inc
push
das
xchg
and
shl
sub
inc
adc
adc
fs
loope
or
mov
push
mov
icebp
mov
sub
inc
adc
push
mov
xchg
jbe
out
xchg
adc
add
and
push
and
cmp
cmpsl
cwtl
ror
xchg
add
dec
ds
nop
rcrb
mov
int3
cs
jmp
rclb
popa
add
sub
je
loopne
pop
and
mov
das
ljmp
out
icebp
inc
les
out
out
bndldx
and
pop
xchg
add
divb
xor
or
neg
loope
ljmp
and
std
andb
fiadds
push
pop
fdivs
leave
fnsave
addr16
pop
inc
in
imul
push
stos
or
mov
mov
cld
pop
shll
adc
mov
stc
ljmp
jb
mov
cld
adc
dec
in
imul
mov
add
mov
aad
insl
xchg
stos
jns
dec
mov
test
test
or
mov
cmp
movsb
in
cmp
je
cmpsb
in
xor
clc
aad
push
jge
push
or
bnd
and
push
pop
push
mov
cmc
into
cmp
jnp
loopne
xor
jle
das
sbb
pop
adc
gs
xor
cmp
push
push
shlb
mov
mov
cs
decb
das
sbb
or
fcmovnu
outsl
push
scas
adc
mov
loope
cli
jno
cmpsl
jle
push
ja
js
pop
lds
mov
sahf
clc
push
pushf
push
aad
shrb
mov
sub
push
leave
es
out
leave
cs
pop
and
pop
sar
mov
adc
mov
cwtl
fwait
addr16
shr
sarl
cmc
mov
testb
cld
loope
jge
dec
jg
int
sbb
aaa
or
add
cmp
mov
aam
jp
fs
in
push
push
mov
sub
xor
pop
les
sti
and
inc
faddl
sbb
cwtl
aas
popl
dec
je
mov
xorb
clc
int
scas
push
aam
cld
cmp
add
adc
mov
jnp
cld
jno
inc
or
leave
jne
int3
or
lods
subl
push
or
movsl
push
jmp
xchg
push
rcl
cmp
inc
adc
outsb
or
hlt
out
xchg
jne
in
cmp
mov
aam
cmp
fs
or
sub
mov
fwait
xchg
mov
mov
inc
mov
call
pop
inc
and
push
ret
pusha
in
test
xor
cmp
inc
sahf
mov
jno
test
add
xchg
dec
rcrb
out
add
repz
or
bound
pop
or
pop
cmc
and
bound
pop
mov
shlb
pop
mov
xlat
insl
pop
cld
les
adc
mov
or
mov
cmp
loop
xchg
xchg
dec
jb
shll
jp,pn
cmp
push
js
into
sub
lret
and
mov
imul
dec
ljmp
cld
jmp
cvtdq2ps
inc
xchg
clc
xchg
adc
or
dec
mov
dec
cwtl
sub
pop
and
mov
sub
add
add
arpl
pushf
lcall
les
and
fldcw
rclb
pusha
into
jbe
pusha
ja
mov
jno
pop
sbb
rorl
mov
cmp
fnsave
mov
cmp
adc
or
cmp
mov
shll
push
xchg
sub
cltd
int3
sti
stos
mov
ret
test
sub
lea
andl
cmp
pop
push
mov
insb
pop
adc
cmp
stc
lds
xor
push
xchg
jg
sbb
mov
movsb
pop
dec
mov
pop
adc
mov
sarl
jo
ja
je
inc
ljmp
mov
adc
popa
push
popf
xchg
shll
xchg
jbe
cwtl
mov
mov
imul
sti
stc
adc
mov
and
xchg
js
mov
repnz
mov
addr16
jl
leave
imul
or
mov
ljmp
lret
lcall
aaa
add
fnstcw
fldl
insl
int
aad
aam
inc
cwtl
sti
pop
lret
icebp
lret
dec
inc
or
mov
add
fistpll
js
pop
loop
xor
stc
repnz
pushf
inc
xor
jae
outsl
scas
adc
xor
fmull
mov
clc
ds
stc
add
pop
ljmp
pop
inc
fld
scas
xchg
pop
fwait
push
les
push
lcall
stos
imul
fldl
pop
adc
sbb
jle
clc
pop
jmp
cmpsl
inc
rcl
xlat
fcomip
pop
lahf
sub
cmpsb
das
pop
cmp
adc
es
inc
dec
push
push
mov
mov
xor
inc
cmpsl
sub
inc
mov
addl
js
sbb
movsl
jne
xchg
movsb
jg
divl
out
xchg
add
mov
insl
pushf
dec
stc
fistpl
add
sbbb
lds
and
pop
xchg
test
mov
push
xchg
pop
adc
and
push
pusha
stos
jecxz
jmp
sti
jg
jb
cmpb
sbb
mov
ret
cmp
and
adc
sbb
jne
mov
add
inc
in
push
add
push
out
push
inc
jg
dec
jp
out
push
push
jmp
add
pop
imul
mov
or
ljmp
scas
sub
mov
jge
add
int3
and
mov
inc
fcoms
outsl
mov
sub
or
sbb
or
push
mov
mov
mov
or
adc
mov
inc
cltd
clc
fucomp
ret
inc
xlat
clc
jo
mov
xchg
sbb
xchg
imul
jg
fwait
add
sub
sub
lret
popa
mov
push
mov
and
les
push
cmp
call
fdivrs
mov
dec
xorb
dec
cmc
mov
mov
aaa
xchg
bound
xchg
dec
mov
iret
pop
sbb
stc
aaa
inc
dec
mov
add
andl
mov
fidivrl
and
xchg
xor
dec
loop
inc
inc
ja
inc
cmpsb
cmp
sti
lock
jb
je
in
mov
lods
mov
mov
rcrl
xchg
sbb
cmovl
fists
pminub
fistps
ret
jecxz
dec
fiadds
or
inc
or
std
push
pop
jmp
cmp
stos
cmp
test
mov
jp
add
push
pop
in
xchg
mov
sub
shlb
or
xchg
pop
jecxz
stos
incl
xchg
add
aam
ret
je
in
pop
sub
rcrb
dec
sub
jno
lods
inc
stos
pop
mov
and
jge
testb
cwtl
push
xor
pop
inc
or
fcmovnb
add
mov
jo
mov
inc
imul
loope
inc
mov
sub
adc
cmp
pop
call
mov
into
push
pop
insl
jle
loopne
xor
mov
inc
nop
cmp
imul
mov
popf
cmc
cmp
xlat
sbb
fidivl
sub
xchg
mov
pop
jp
movsb
cmp
xchg
or
jmp
jo
cld
xchg
mov
enter
lds
inc
pushf
shrb
nop
push
fldcw
mov
test
mov
fwait
addr16
repnz
push
call
aaa
mov
inc
cmc
repnz
fsubrs
int3
test
cmpsl
add
pop
mov
stc
push
pop
jmp
out
pop
js
add
mov
xor
xlat
movsb
mov
jbe
inc
jmp
jle
jnp
sub
dec
jg
adc
adc
add
popf
ss
cmp
inc
or
testl
in
jae
lret
in
out
or
andb
fcmove
jae
stos
mov
addb
or
js
mov
push
ja
lds
das
mov
push
dec
jae
jbe
ds
dec
adc
adc
mov
cmp
icebp
and
dec
repz
add
aaa
fsubrl
call
jae
cmp
sbb
cmp
xorl
inc
cmpsl
out
xchg
insb
fs
push
jbe
xchg
dec
in
ss
aam
inc
lret
sub
mov
fnstcw
mov
sbb
cs
cmp
adcb
loopne
outsb
cmp
movsb
nop
int3
push
jle
xor
cmp
stos
pop
fistpll
cld
in
test
add
jmp
sub
jg
xchg
and
mov
in
dec
xchg
jo
adc
dec
fld
cmp
imul
loop
and
cld
addr16
out
sub
cmp
in
dec
icebp
mov
clc
mov
mov
lods
add
sub
push
jmp
lods
repnz
xchg
scas
fwait
push
mov
test
or
in
es
pop
cmp
imul
ret
clc
dec
gs
ds
pop
stos
cmc
call
lahf
adc
cs
cld
xchg
les
adc
scas
sahf
inc
dec
adc
or
and
lds
dec
inc
call
adc
int3
lret
cs
jge
inc
sub
cmp
call
xor
sub
in
test
adc
pusha
mov
int3
mov
sbb
add
inc
icebp
cmp
add
popa
hlt
push
add
pop
mov
push
mull
cld
les
jecxz
nop
cwtl
jnp
mov
icebp
sub
lret
mov
shrl
outsl
mov
sahf
mov
int
dec
movsl
icebp
lret
test
inc
cmp
jmp
sbb
push
sub
add
cmp
jmp
cmp
and
or
fsubr
pop
sub
addr16
mov
pop
gs
mov
lret
aaa
in
ret
das
sbb
outsl
cmp
xchg
outsb
lcall
loopne
lods
inc
xor
push
cmpsb
insb
fwait
mov
jecxz,pn
ss
mov
ss
lret
cmp
es
in
aam
or
push
js
leave
and
das
add
jno
dec
leave
les
ja
int3
dec
lock
xchg
inc
adc
lods
in
inc
pusha
sbb
arpl
out
xchg
xchg
mov
cmpsb
movsb
popa
sbb
lcall
pop
jae
popf
into
dec
call
mov
scas
pop
push
aam
jns
cld
sub
push
filds
dec
sbb
cwtl
sbb
mov
or
jbe
fdivs
dec
pop
out
std
cmpsb
adc
adc
cmpsl
xchg
pop
sub
or
xlat
and
inc
shll
les
add
fisttpl
push
shrl
in
sbb
push
push
rcrb
cwtl
and
addr16
insl
or
xchg
pop
mov
jb
in
push
xor
arpl
cli
cwtl
xchg
repnz
and
gs
psubusw
jge
scas
ss
out
sahf
pop
cmp
push
mov
out
push
cmpsl
sbb
js
inc
leave
mov
dec
dec
call
xchg
push
in
mov
mov
fwait
hlt
jp
jge
dec
jp
xchg
shlb
pushf
popa
mov
lret
pop
or
ja
andl
sbb
and
idivb
pop
pop
xlat
call
clc
inc
or
cmp
push
xchg
inc
test
daa
shrl
rcrl
mov
ret
pop
and
mov
dec
push
std
cmpsl
push
push
insb
das
jge
push
mov
testl
push
repnz
out
jnp
mov
or
adc
mov
mov
aas
lret
mov
pop
lcall
jmp
pop
ljmp
push
cmp
fnsave
leave
push
cmp
inc
or
inc
push
cld
arpl
lret
xor
sbb
dec
dec
imul
jb
adc
fidivrl
inc
in
push
adc
push
adc
xchg
inc
idiv
dec
outsl
pop
imul
mov
rcl
int
fstpt
rclb
sbb
roll
and
dec
mov
sarl
loope
xor
cmp
imul
jnp
xor
jp
jmp
sub
xchg
push
fidivs
xchg
ret
xorl
insb
pop
xor
jecxz
jmp
pop
std
mov
push
aas
pop
adc
mov
pop
sbb
jmp
push
mov
and
daa
ja
sub
pop
ret
sub
dec
ret
shl
xchg
in
mov
aad
aas
sub
bound
xchg
inc
in
xor
and
inc
lcall
cmp
shrb
aaa
jp
mov
cmp
push
cld
xor
es
in
jp
imull
notl
arpl
aas
jle
cmpb
dec
pop
xor
mov
incl
add
shl
mov
lret
ret
mov
or
mov
aaa
push
lea
test
xchg
adc
dec
ljmp
inc
movl
xchg
in
inc
pop
xlat
ljmp
dec
add
das
into
ret
int3
mov
and
rcrl
cmp
xchg
lret
into
enter
jmp
data16
hlt
pop
and
bound
cli
mov
mov
das
mov
pop
jnp
fbld
jg
adc
popa
add
out
inc
mov
adc
bound
les
popa
rcll
jl
xor
inc
lcall
clc
outsl
in
cli
adc
mov
repz
mov
aad
push
add
mulb
xor
mov
push
ljmp
and
and
and
popa
out
rcl
sbbb
jno
mov
pop
stos
jle
mov
adc
and
fsubl
pop
lock
mov
popf
cli
pop
jb
nop
mov
in
outsl
fnstcw
sbb
sbb
mov
jae
ss
lcall
shll
jnp
jge
jle
ret
mov
test
mov
add
push
in
dec
in
lret
cmp
xchg
iret
inc
inc
stc
xchg
mov
shll
out
inc
cld
mov
lahf
mov
inc
notb
mov
pop
test
enter
add
push
add
or
push
cmp
mov
pop
adc
adcb
sahf
lcall
cmp
test
dec
sub
adc
sbb
cmp
sbb
mov
push
jb
es
sub
adc
loop
xchg
cli
dec
push
inc
flds
xor
mov
mov
in
push
aas
mov
je
mov
mov
pop
stos
ja
loopne
andb
lods
sbb
in
daa
mov
adc
repz
mov
cli
sub
bound
call
rcll
mov
cmp
cltd
nop
ret
cmp
push
insl
add
lods
shl
jno
xchg
or
xchg
stc
xor
jae
nop
je
cs
sbb
mov
mov
or
jg
addr16
imul
xchg
add
lds
int
adc
cmpsl
push
adc
inc
das
push
mov
push
mov
mov
mov
mov
push
mov
cwtl
sahf
inc
cwtl
lahf
push
movb
imul
clc
das
cmpsl
xchg
cltd
lds
fcomip
cmp
pushf
sub
test
push
dec
popf
in
or
pop
scas
jmp
pop
xchg
insb
fs
pop
scas
sti
insb
sti
adc
ss
test
popf
negb
sub
ljmp
cs
push
xchg
pop
push
outsl
mov
mov
mov
inc
pop
into
mov
test
xchg
shll
fsubl
gs
shrb
in
test
hlt
shl
mov
push
jae
inc
pop
xor
xlat
xor
push
push
or
movsl
inc
ficomps
xchg
cmpsb
fidivl
xchg
sahf
into
stos
push
es
cmpsb
dec
shlb
push
inc
js
or
mov
les
test
sub
aaa
push
fists
pop
fwait
repnz
or
ds
mov
xchg
mov
mov
call
push
lcall
out
lret
push
pop
loope
lahf
push
adc
jne
pop
or
add
cmp
add
scas
jo
ret
xor
mov
mov
iret
shll
mov
cmpsb
cltd
mov
int3
xor
int
in
dec
inc
stos
aad
jb
mov
cmp
mov
mov
fldcw
outsl
bnd
lods
pop
mov
popa
fdivl
add
mov
lods
jl
std
pop
inc
pop
icebp
push
cmc
mov
fnstenv
insb
std
mov
das
xchg
popa
lret
jns
scas
bound
cmpsb
mov
mov
es
cli
xor
fidivs
cmp
inc
pusha
inc
rcrl
inc
jb
sbb
mov
loope
jnp
mov
cwtl
js
adc
lcall
inc
pushl
xchg
add
push
or
movsl
in
adc
jecxz
pusha
jo
inc
inc
aad
sarb
les
repz
pop
outsl
loopnew
push
jns
and
in
dec
loop
jmp
jg
and
adc
fcmovne
add
jle
movsl
jmp
sub
cld
arpl
cli
xor
xchg
cmp
mov
arpl
or
cmp
mov
ret
or
flds
mov
cmc
jno
clc
in
push
cs
pop
mov
int3
mulb
cmp
out
jge
and
and
xchg
mov
add
pop
fsubl
iret
jnp
cld
inc
das
test
lcall
xchg
jnp
adc
lret
int3
cmp
xchg
loopne
sti
push
sbbb
cli
push
add
mov
mov
shr
pusha
bnd
xor
rcll
xchg
gs
lret
cmp
cmpsl
pusha
jns
mov
add
ret
mov
sbb
testb
cmp
sarl
jb
pop
pop
nop
push
cld
push
inc
mov
movb
pop
clc
popa
mov
lock
gs
out
cwtl
andb
cmp
and
push
fcmovnb
mov
pop
int
and
or
inc
out
lock
in
into
xor
lods
and
xor
iret
mov
push
push
jp
test
jb
pop
jle
jo
imul
inc
stc
int3
xor
dec
jg
jnp
repz
inc
call
mov
lcall
mov
jecxz
push
sarl
in
mov
iret
xchg
add
ja
jbe
mov
int
mov
inc
cmpsb
cmpsb
jcxz
repnz
int3
fiaddl
negb
pop
inc
push
xchg
rolb
stos
sub
xchg
push
test
inc
add
or
lret
push
iret
lods
pop
push
stos
rclb
pop
or
adc
mov
add
jo
sub
aad
shlb
bound
clc
cmp
inc
xchg
sbb
pop
dec
loope
pop
push
mov
std
decl
jnp
and
scas
sbb
stos
pop
test
sahf
iret
mov
inc
or
xchg
inc
jns
xor
ret
xchg
cmp
mov
jp
sbb
mov
and
jecxz
xchg
and
test
outsb
negb
je
dec
fidivl
icebp
mov
rcr
or
xor
movsl
add
ljmp
add
or
pop
adc
dec
xchg
lret
cs
xchg
inc
push
mov
ret
or
dec
nop
ficoms
pop
xchg
repnz
cwtl
arpl
insb
pop
adc
mov
and
aam
sbb
mov
jp
ret
jmp
fs
cmc
pop
fsubrp
inc
pushf
sbb
xor
inc
push
aas
jle
jecxz
cwtl
out
mov
mov
mov
aas
push
sub
fwait
sbb
xchg
sbb
mov
cmp
into
je
in
js
in
xor
mov
xor
push
movb
sub
std
popa
pop
aas
dec
mov
das
out
fisttps
inc
mov
adc
jb
or
cmp
pop
lods
ret
and
int
inc
into
lahf
inc
rcrl
inc
push
cli
gs
xchg
pop
rcl
imul
mov
rcr
cmp
sub
jbe
lods
pusha
jb
daa
data16
sahf
in
mov
clc
mov
mov
xlat
leave
out
push
ds
sbb
mov
lret
enter
rcl
push
pop
mov
dec
cmp
pusha
sub
push
mov
movsb
push
shlb
jmp
rclb
dec
push
push
lret
xor
scas
and
fwait
mov
stos
pop
testb
sbb
mov
es
push
push
jle
mov
lret
stc
arpl
inc
popl
stos
cwtl
xorl
adc
add
les
movsb
fwait
pop
jle
mov
stos
pop
xchg
xchg
pusha
inc
sub
nop
bound
test
loopne
lods
stos
cmpsb
out
flds
ds
out
cmp
pop
mov
aaa
lods
stos
shll
and
sub
out
call
mov
xchg
clc
adc
cmp
imul
ret
sahf
bound
mov
ljmp
jle
pop
and
cmp
or
pop
fs
xchg
sub
imul
mov
jno
push
cmpsb
ds
or
xchg
xchg
mov
scas
dec
idivb
fmuls
inc
shl
mov
jno
and
daa
arpl
in
ret
ljmp
testb
cmpsl
cmpsb
push
adc
push
push
outsb
icebp
or
mov
testl
or
subb
mov
adc
sti
call
push
cmpsb
pop
sub
xlat
add
adc
mov
movsl
xchg
adc
cwtl
xlat
lock
jae
pushf
mov
xchg
jecxz,pt
dec
xchg
mov
xor
dec
les
inc
mov
or
xchg
jb
outsb
sub
ret
cld
xchg
aas
fcoms
cwtl
push
push
lahf
lahf
inc
stos
lret
cmp
mov
mov
mov
xchg
cmp
cmp
xchg
stos
in
sbb
mov
out
aad
mul
sbb
sub
hlt
mov
popa
mov
leave
faddl
sub
mov
inc
push
adc
xchg
sub
sub
adc
fs
in
adc
and
lock
or
in
pop
adc
adc
jne
cmp
inc
adc
sub
push
imul
sub
movsl
ss
mov
push
mov
in
fdivl
or
fs
call
out
test
repnz
ds
lret
xor
pop
jnp
xor
pop
add
iret
mov
std
fs
pop
xchg
lods
inc
and
or
mov
stos
sarl
or
sub
je
xor
sbb
rorb
pop
dec
pushf
cs
test
xchg
or
push
push
popa
jb
add
mov
dec
adc
mov
ret
sub
out
inc
adc
ret
in
lahf
mov
mov
ret
and
cwtl
pop
jb
sub
arpl
adc
pushf
and
sub
inc
push
scas
jmp
xchg
pop
mov
je
xor
mov
mov
mov
mov
cli
push
push
popf
xor
inc
rcl
cmp
add
mov
ror
sub
loope
push
xor
daa
cltd
dec
sbb
inc
push
and
mov
cmpsb
out
xor
dec
cs
flds
cmp
fs
lods
in
into
in
cld
cmp
insb
mov
jnp
call
push
push
mov
pusha
sarl
in
xchg
cwtl
insb
pop
outsb
loopne
sbb
inc
addl
jnp
sbb
cltd
cmp
pushf
shll
mov
lahf
insb
inc
mov
std
mov
pop
fwait
cmp
and
push
xchg
fisubrs
cld
or
jle
xor
leave
push
push
gs
fmull
pusha
fistpl
dec
in
sbb
xchg
mov
push
or
or
daa
cwtl
cmpl
cld
mov
pop
sub
test
jns
rorb
fs
stos
jle
sahf
movsb
sbb
xlat
xchg
stos
xchg
push
out
movsl
pop
jl
mov
mov
int3
xor
xor
adc
ds
popa
xchg
mov
adc
fcmovnbe
sbb
or
sbb
jne
xchg
sahf
mov
push
aam
sahf
mov
mov
fistpll
and
mov
mov
das
mov
sub
push
jb
sbb
or
mov
jae
mov
mov
add
psubq
hlt
push
ds
into
rcrl
dec
movsl
sbb
jnp
cmp
add
xchg
loop
sbb
xchg
mov
add
pop
movsl
mov
pop
add
iret
outsb
sub
icebp
fucomi
pop
mov
push
cld
xlat
or
inc
push
push
adc
nop
xchg
mov
bound
into
cmp
mov
call
mov
ljmp
lock
insl
movsl
inc
mov
xlat
dec
cmp
mov
xabort
mov
es
mov
or
loope
arpl
add
jecxz
lods
mov
mov
mov
inc
or
cld
xorps
lods
nop
ljmp
cltd
xchg
add
mov
cmpsl
and
shll
push
addr16
inc
jge
cwtl
aad
dec
add
cmpsl
xchg
and
pushf
imul
pop
movsb
sbb
movswl
and
mov
jge
test
out
negl
inc
lods
pop
fucomi
and
mov
mov
sti
xor
arpl
push
repnz
stos
popf
mov
jno
stos
mov
sbb
cmpsb
pop
mov
or
out
mov
adc
minps
sub
cwtl
decb
repz
roll
cwtl
ds
bound
loop
mov
sbb
or
int
mov
inc
es
icebp
push
mov
pusha
stos
pop
stos
or
and
push
jne
addb
sti
dec
mov
mov
sbb
fbstp
adc
rolb
loopne
mov
adc
adc
cltd
arpl
enter
imul
jae
xchg
cmp
dec
in
cltd
mov
sti
mov
movsb
pop
xchg
iret
test
push
sti
scas
mov
push
dec
insl
mov
lea
sub
mov
push
jmp
xor
decl
scas
fistl
loope
jle
push
xor
in
jo
or
mov
and
dec
mov
orl
or
ja
push
adc
fbld
jp
mov
sar
add
decb
inc
jmp
cs
cwtl
mov
arpl
or
maskmovq
imull
dec
xchg
sti
popa
fmuls
sbb
push
inc
xchg
and
sbb
dec
and
dec
dec
jnp
test
mov
push
mov
dec
jns
fstl
in
jb
outsl
sub
lret
sti
sub
call
pop
push
xchg
jl
adc
cmpsb
insl
inc
add
xor
stos
fsubl
sbb
addl
test
lahf
dec
push
arpl
pop
dec
and
inc
cltd
gs
popf
jmp
mov
mov
push
test
leave
subb
jecxz
outsl
in
into
bound
cmp
testl
inc
inc
or
mov
fldt
insb
icebp
inc
mov
xor
pop
cmpsb
das
insb
pop
and
sub
mov
lods
cmp
pop
jecxz
js
rol
add
movsb
in
jnp
push
jbe
pop
ss
or
mov
pop
daa
sub
mov
js
jg
stos
dec
pusha
fwait
in
stos
in
mov
outsl
or
je
lahf
mov
or
popf
xor
lds
in
out
dec
daa
daa
cwtl
aam
mov
mov
stos
push
les
popf
add
push
jnp
or
push
jge
aad
mov
push
pop
ret
jge
cmp
jl
sub
jp
and
pop
stos
fdivrl
loop
in
dec
dec
stos
xchg
outsl
inc
xchg
repnz
pop
sub
mov
jecxz
adc
bound
inc
jns
test
dec
ss
pop
out
stos
cmp
adcl
daa
scas
push
or
cltd
mov
mov
cmp
loopne
jl
in
std
popf
mov
inc
sbb
in
fisttps
pop
inc
jno
testl
jns
mov
stc
or
in
ret
sbb
ss
ljmp
and
sbb
pop
stc
daa
sbb
ja
adc
mov
ficomps
push
mov
dec
push
inc
xchg
mov
inc
sbb
adcl
lret
and
push
shlb
lahf
mov
pop
dec
sbb
inc
lods
fldl
xor
lds
push
push
inc
loop
or
xor
xor
icebp
sub
pop
mov
outsb
sub
sbb
push
out
sbb
or
and
sbb
lods
shrl
and
mov
test
stc
jecxz
movb
mov
push
mov
push
add
mov
cmp
into
mov
stos
out
push
inc
scas
mov
neg
ficompl
fisttpl
in
jl
cmpsb
rep
call
dec
push
cs
cmpsb
enter
jl
outsl
push
cmc
icebp
inc
cmp
pop
ficoms
dec
clc
out
cwtl
push
xor
ja
xchg
call
or
jns
dec
iret
lock
aas
ljmp
fldpi
cmp
mov
jbe
loopne
adc
xchg
xchg
fsts
sub
mov
push
xchg
std
push
xor
cmp
addl
insb
and
inc
enter
insl
sub
addl
dec
movsl
xor
mov
iret
movsl
fimull
mov
iret
jb
sahf
in
int3
inc
ljmp
jp
aam
xchg
inc
xchg
cmp
xchg
call
mull
push
lahf
dec
push
push
mov
xor
jmp
pushf
test
shlb
sti
mov
outsl
jmp
aaa
xorl
ljmp
icebp
fwait
mov
mov
pushf
lock
insb
inc
fs
or
xor
test
test
repz
inc
addb
shlb
aam
sbb
subl
dec
data16
cmp
out
and
sub
xor
fcomip
xchg
in
fisttpl
popa
or
clc
inc
pop
xchg
add
inc
jne
jbe
jbe
cmp
outsl
adc
mov
in
pop
das
data16
rclb
push
push
shlb
jl
xorl
data16
arpl
movsl
mov
sub
movsb
nop
inc
lods
mov
xor
fidivs
pop
lret
adc
xchg
aas
xor
xchg
test
or
mov
sub
lcall
or
lret
movsl
fildl
icebp
out
pop
push
xchg
add
mov
jge
jg
sti
das
push
sbb
out
repz
mov
jnp
cmp
jbe
repz
push
add
xlat
xchg
pop
popa
rcl
fnsave
test
cmc
xchg
mov
and
sub
mov
mov
jmp
clc
push
jmp
sarl
sahf
aad
in
out
mov
push
xlat
add
fidivrs
sub
mov
outsb
in
aas
pop
xchg
xor
leave
push
inc
cmp
xchg
pop
fcompl
lods
int
xorl
sub
xchg
popf
jmp
push
test
pusha
inc
cli
shrl
xlat
xchg
dec
push
fincstp
repz
addr16
cmpsl
adc
jns
pop
fildll
shrl
xchg
fcomip
adc
mov
jbe
fisttpll
adc
or
mov
jne
sbbb
faddl
push
cmc
fcmovne
in
mov
call
out
rcr
cmp
xchg
ftst
aas
dec
loopne
jbe
bound
push
mov
sub
mov
imul
fnstenv
dec
dec
rclb
and
ficomps
jnp
jnp
cmpsl
icebp
xor
jmp
add
lock
push
xor
sub
sbb
xchg
add
sub
pop
add
cmpsl
sub
cmp
pusha
and
fs
ror
insb
push
push
sub
leave
lods
jg
das
lahf
adc
ljmp
cmp
cltd
inc
in
xchg
mov
int
fisubl
sub
inc
test
jge
adc
movsl
lahf
fistpll
rcrl
les
dec
sub
mov
sub
push
mov
sub
mov
pop
cmp
orb
ret
push
mov
sub
pop
xchg
outsb
popl
pusha
aas
and
cs
lods
cmc
jmp
addr16
lods
sub
inc
push
push
scas
cmp
jo
lcall
jb
push
repnz
scas
jo
cmp
push
jo
and
jo
roll
sarl
and
jecxz
push
jle
outsb
arpl
nop
test
ds
and
inc
xchg
mov
jl
xorb
pop
rcrl
in
ret
mov
insb
dec
mov
sub
movsb
sub
insb
push
push
scas
and
jmp
and
arpl
test
out
mov
mov
loopne
mov
or
shll
jb
jge
mov
add
ds
or
jne
add
inc
mov
inc
stos
cs
into
jbe
sbb
cvttps2pi
pop
mov
jae
mov
and
in
rclb
into
push
mov
mov
and
inc
pop
pusha
mov
push
aas
jp
movl
mov
inc
cmp
xchg
iret
ja
jns
mov
movsl
pop
adc
jmp
lods
outsl
shl
cmpsb
pushf
incb
fs
cltd
xor
and
add
ds
jmp
push
dec
call
in
mov
ljmp
mov
sbb
add
add
sbb
jne
dec
push
xor
and
inc
sub
mul
lret
aam
loope
sub
jae
xor
mov
xchg
fidivs
aam
xor
mov
push
add
daa
dec
mov
push
jns
or
pop
sub
and
mov
dec
es
imul
loopne
xchg
or
jmp
xchg
out
js
mov
hlt
ret
movsb
fdivp
fists
cltd
mov
mov
push
dec
or
lds
gs
jb
pop
pop
rcrb
es
jg
xor
add
cltd
std
sub
das
cwtl
movsl
sbb
xchg
pop
push
lock
subb
jns
outsl
xchg
inc
scas
pop
add
add
mov
jg
lds
or
and
test
mov
adc
sbb
fsubrl
roll
mov
inc
ret
lods
sub
dec
out
sub
pushf
cli
call
and
mov
xchg
mov
jg
cmp
adc
xor
jp
push
cmp
pop
jmp
cmp
pop
outsl
push
cmp
hlt
adc
fisubs
stc
int
mov
aas
mov
pop
jmp
imul
mov
stc
sub
mov
aad
rcl
cmp
mov
into
cwtl
push
cmp
mov
incl
inc
cmp
icebp
dec
shlb
aaa
jl
cmp
mov
sti
cmp
das
dec
add
stos
lahf
push
arpl
mov
adc
xchg
movl
je
sub
test
mov
lds
or
jp
mov
or
mov
mov
xchg
sbb
jo
sub
and
lret
jbe,pn
rcll
cmc
out
lds
cmp
aam
scas
fcmovu
or
dec
rorb
push
mov
fistps
inc
push
aam
call
add
sbb
sub
mov
aaa
mov
pop
add
out
loope
dec
mov
sbb
loope
lret
loopne
mov
mov
add
cli
aam
aam
pop
add
sahf
jb
fwait
push
dec
pop
fstpl
mov
xor
mov
pop
add
and
sahf
les
sub
rorb
adc
mov
jne
cltd
adc
jns
cmp
mov
loopne
and
lcall
stos
mov
fs
dec
and
cmp
aad
fcoms
jae
sub
mov
xchg
bound
sbb
and
mov
outsb
pop
cmc
inc
jp
mov
xchg
faddl
int3
pusha
scas
in
out
jmp
pop
jb
lea
imull
jge
imul
popl
rcrl
imul
iret
pop
jb
inc
push
inc
add
das
cmp
jmp
xchg
or
fisttps
test
and
xchg
fildl
repz
sahf
sub
pushf
inc
pop
jecxz
ljmp
pop
inc
sub
fdivp
subl
or
call
btr
xor
jnp
pop
stos
adc
in
mov
xchg
ja
sub
mov
in
call
cmp
inc
cmp
dec
clc
dec
push
xchg
insl
push
dec
or
xlat
push
ds
loop
mov
scas
pop
sub
movl
add
pop
jge
aas
mov
jge
loopne
lea
dec
dec
xor
push
xchg
mov
or
jb
push
mov
cmpsb
sti
mov
mov
mov
loop
cltd
mov
inc
sbb
nop
or
popf
pop
imul
mov
dec
cmp
or
popa
pop
ficomps
mov
adc
roll
sub
sub
dec
add
sbbl
sar
or
xchg
push
push
dec
and
push
enter
pop
adc
jae
push
inc
in
mov
xor
xchg
scas
xchg
call
ja
in
mov
in
ds
pop
push
sbb
int3
call
in
fwait
cmp
movsb
pop
cmp
fwait
sub
sbb
lds
pop
mov
pop
adc
push
repnz
adc
in
or
insb
xchg
push
sbb
cmp
lcall
decl
stos
inc
sarl
mov
xor
bound
andb
pop
add
aam
or
push
popf
cltd
movl
pushf
xchg
popf
in
cmp
pop
sub
sbb
jno
into
repz
adc
mov
leave
das
inc
jp
cs
movsl
mov
ss
xor
sub
xchg
push
ret
mov
imul
out
jle
mov
mov
cwtl
mov
or
test
out
mov
in
sub
cmp
jle
gs
in
call
ret
add
lahf
out
out
es
ds
or
xlat
push
push
mov
notl
sahf
cmp
sbb
fsubl
and
jge
mov
cmp
and
in
mov
add
nop
xor
sahf
mov
push
push
sbb
cmpsb
scas
sbb
xchg
leave
or
fildl
cmp
loope
pop
lods
and
jg
int3
sbb
imul
in
add
jo
rclb
or
xor
jo
les
pop
es
popf
or
sbb
sub
cmp
fwait
add
mov
in
or
mov
clc
push
outsl
xchg
adc
sub
fsubl
mov
push
mov
repnz
out
adc
pop
mov
sub
test
mov
sub
lret
sbb
mov
inc
movsb
pop
cltd
data16
fiaddl
shlb
push
nop
xchg
iret
movsb
jb
mov
dec
stc
lret
test
mul
ror
sub
xor
popf
in
cmp
dec
jnp
roll
push
mov
fcmovnb
dec
inc
sbb
pop
les
mov
cmpsb
xlat
inc
test
sbb
xchg
jmp
sbb
call
sbb
enter
testb
pop
out
push
pop
dec
dec
pop
or
loope
mov
pop
jle
insb
fdivrl
pop
xor
imul
push
mov
mov
cwtl
rcr
dec
pushf
inc
mov
lahf
sbb
add
mov
jae
fnstenv
adc
insl
outsb
lret
sub
xchg
and
pop
sub
cmp
pop
frstor
mov
ja
mov
fisttpl
add
sub
cmp
int
or
int3
mov
mov
cmp
fcoml
xor
jns
mov
test
push
popa
andl
mov
sbb
repnz
mov
dec
rcl
movsb
adcl
cmp
insb
mov
push
das
sbb
repnz
inc
sub
lods
rcrb
rcrb
iret
dec
inc
adc
adc
dec
lea
xchg
fildl
popf
pop
sub
or
push
lds
cmp
xchg
and
bound
add
push
xorb
test
push
stc
fldt
cmp
aaa
jl
je
xlat
mov
fnstsw
icebp
mov
pop
aad
pushf
gs
ds
inc
mov
aam
add
ljmp
jmp
fstp
lds
subb
pop
mov
popf
fidivrl
insb
pop
ss
add
add
popa
jge
idivb
popf
loope
cli
lahf
leave
movsb
nop
add
jno
xor
out
mov
xor
notb
xor
addr16
push
inc
mov
daa
push
mov
jbe
pop
out
jbe
sahf
bound
cmp
push
out
mul
mov
ja
sub
mov
aas
pop
adc
or
movsl
mov
pushf
aas
repz
cwtl
sub
jbe
inc
sub
movsl
cltd
lcall
bound
jnp
enter
cld
mov
pop
scas
pop
and
xor
fmull
in
cmovge
xchg
out
cmp
das
pop
jge
jmp
hlt
ficomps
cmp
xchg
mov
scas
xchg
pop
adc
negl
lcall
jns
xchg
ret
or
test
cmp
test
dec
mov
add
pop
fsubp
cmp
jl
ljmp
sahf
xor
jae
fisttpl
pop
push
enter
int3
cwtl
clc
mov
cltd
sub
sub
sbb
out
inc
dec
loope
pop
lea
in
jbe
enter
sub
cmc
sbb
idivl
dec
test
adc
cmp
push
pop
iret
idiv
and
je
pop
xor
out
mov
pushf
jecxz
arpl
fs
ret
add
das
les
or
lods
push
mov
aam
jno
or
test
jmp
mov
fwait
pop
mov
push
sub
jae
hlt
lret
mov
iret
arpl
mov
cmpsb
insb
fs
jl
dec
aaa
lock
fnstenv
repnz
test
cmp
inc
sub
xchg
xchg
sub
mov
mov
cmp
push
outsl
test
push
mov
inc
decl
or
xchg
in
push
stos
add
add
sub
mov
rorl
or
es
jge
xchg
or
in
adc
negl
jns
jne
xchg
mov
jmp
or
sbb
add
xor
sbb
shlb
cltd
inc
lods
jnp
push
pop
ds
cmp
aaa
repz
jb
sbb
dec
cmp
jle
jns
in
mov
popa
lods
inc
aaa
sub
test
cmp
addr16
fwait
jb
ss
mov
pop
xor
xor
pusha
out
punpcklwd
sub
out
push
test
das
cmp
jg
push
pop
jns
js
addr16
push
pop
cmp
cmc
jb
jmp
mov
lods
dec
sbb
rcrb
jae
lods
ss
push
cmpsb
inc
sub
jns
lea
sti
cmp
fsts
add
aam
cmp
inc
aam
jp
testl
cmc
mov
stos
jge
bound
aas
int
adc
add
jb
ljmp
dec
in
in
ljmp
push
call
bound
mov
lahf
mov
xchg
cmp
sub
jno
cmpb
mov
and
pop
subl
inc
imul
sbb
fimuls
ret
mov
int
pop
rcrb
aaa
or
ret
push
sub
sub
iret
cmp
iret
hlt
repz
rol
jp
adc
xchg
push
cmp
xchg
jecxz
dec
test
les
lods
lcall
adc
call
dec
and
dec
dec
das
cli
mov
inc
push
xor
sbb
loopne
xor
or
mov
add
fsubrl
addr16
pop
fwait
or
cmp
push
adc
fiadds
mov
mov
mov
sub
fwait
pop
pushl
das
inc
mov
movsb
xor
or
scas
mov
xlat
jmp
enter
mov
popf
adc
inc
jle
popf
repnz
xchg
mov
rorb
sahf
mov
sahf
int
xor
cli
bound
and
test
pop
pop
fwait
pop
clc
jmp
jo
mov
push
or
adc
pop
setno
imul
cmp
xchg
dec
mov
mov
stc
dec
jg
dec
push
xor
adc
mov
test
scas
es
sbb
int
into
push
pop
cli
arpl
adc
mov
xchg
sbb
fistpll
out
sbb
mov
mov
test
jno
cmp
add
mov
int
fs
mov
sbb
sbb
and
push
adcl
ss
dec
pusha
imul
out
sub
add
xlat
lret
or
inc
imul
sbb
jns
push
fwait
je
xchg
es
fistps
jb
adc
daa
add
xchg
push
or
fmuls
shll
mov
out
mov
nop
mov
js
imulb
fdivrl
dec
call
and
sbbl
sbb
daa
bound
add
jecxz
mov
mov
mov
push
cld
test
inc
aaa
add
push
fmuls
push
in
imul
add
mov
push
mov
idivl
mov
es
dec
push
mov
pop
add
imul
fldt
inc
jmp
mov
lret
or
fdivs
popf
xor
mov
sti
xor
mov
sub
pop
add
and
mov
icebp
or
into
movsl
add
jmp
ret
dec
jae
dec
xchg
add
cwtl
or
aam
ss
push
xchg
pop
push
dec
push
push
mov
add
push
cmp
cmc
xchg
or
adc
insb
inc
ret
pop
inc
sub
xchg
in
mov
xchg
sbb
mov
sti
mov
jecxz
pushf
xor
outsl
popf
stc
mov
data16
add
push
int
mov
lret
pusha
push
mov
lea
inc
pop
rcrb
movsl
inc
nop
out
push
cmp
cltd
add
sbb
pop
aas
sub
mov
xlat
xor
dec
jae
fld1
bound
inc
push
pop
mov
ret
pop
cmp
inc
sar
stos
jns
in
scas
pop
add
inc
push
inc
in
add
jno
aaa
adc
in
divb
int3
cmc
test
adc
rcrb
mov
add
mov
aaa
mov
and
enter
xchg
imulb
ljmp
out
add
sarb
fcmovnbe
mov
inc
cmc
adc
bound
jne
enter
xchg
push
imul
daa
ljmp
ja
push
loope
stc
xchg
cmpsl
in
push
cwtl
or
loop
repz
dec
pop
pop
lret
and
inc
into
int3
daa
push
sti
std
out
pop
test
sub
mov
push
sbb
jmp
dec
lret
stos
clc
std
pusha
pop
inc
mov
lahf
lret
sbb
mov
cmp
clc
ljmp
xchg
or
pushf
cs
cmpsb
add
addr16
xor
pusha
xchg
adc
and
lahf
movsb
cmpsb
mov
test
daa
pop
pushl
cs
jmp
pop
sarb
lods
cltd
daa
lods
lret
add
inc
mov
shl
mov
in
mov
fs
inc
jnp
adcb
cmpsb
in
cmp
adc
fdivp
jl
mov
pop
pop
call
pushl
fsts
scas
fstl
lret
sub
push
xor
scas
inc
cmp
cmp
mov
sub
sbb
popa
in
in
cmpsl
xlat
mov
push
popf
jmp
dec
cmpsb
jo
sbb
xchg
jmp
fcmovne
mov
or
cmc
xchg
mov
and
or
aaa
imul
insl
aam
popf
inc
cs
pop
lods
push
pop
jmp
pop
icebp
lahf
aas
dec
push
fcomps
les
sbb
out
in
push
stos
mov
push
xor
es
je
fcom
lret
inc
add
push
out
movsl
hlt
roll
dec
cmp
in
movsb
movsb
pop
call
sub
inc
xchg
addr16
addb
adc
jmp
push
les
mov
dec
xchg
int3
pop
mov
adc
js
pop
xor
pop
shll
mov
loop
sbb
nop
popa
jmp
add
pushf
rcrl
mov
jecxz
movsl
ljmp
pusha
mov
fwait
and
icebp
xlat
call
sbb
mov
aad
or
inc
push
lds
jo
lds
test
jne
test
mov
xchg
dec
mov
icebp
lods
push
push
sbb
cmp
mov
insb
push
sbb
xor
mov
lea
jge
push
mov
idivl
or
xlat
jae
fstpl
psllw
inc
ja
jae
and
sbb
pop
pushf
add
bnd
inc
lret
adc
shl
ss
je
xchg
aaa
pop
dec
mov
cmp
test
fld
jg
je
mov
leave
fs
repz
test
popa
dec
and
push
dec
jle
jno
shll
cmpsl
ds
fldl
leave
dec
in
fcompl
mull
movsb
leave
push
int3
movl
dec
xlat
add
in
xchg
pop
jmp
ret
fists
mov
jl
and
dec
sbb
test
mov
mov
gs
mov
push
push
ficoml
push
outsl
repnz
mov
nop
xchg
arpl
addb
rcl
jne
test
out
imul
pop
fcomps
cmp
sub
ljmp
mov
test
lea
and
dec
push
bound
sbb
inc
int
mov
add
cmp
sub
dec
std
in
xor
jecxz
fsubl
lcall
xor
dec
jns
add
push
nop
dec
test
aam
mov
inc
movsb
inc
pushf
jns
shlb
ja
dec
pop
mov
xchg
mov
cmp
ss
pop
je
roll
mov
int
jg
int
dec
jecxz
nop
outsl
sbb
pop
mov
push
in
jp
cmp
mov
loope
shrb
popa
outsl
outsl
sub
push
hlt
mov
pop
aad
loop
filds
lds
rcll
imul
inc
xchg
jg
je
inc
outsb
fisubrl
mov
sarb
push
lock
mov
ljmp
xchg
sahf
test
mov
push
jae
push
lret
adcl
rolb
inc
shr
js
mov
shll
clc
push
inc
jo
push
pop
mov
std
daa
inc
data16
addr16
or
test
cmp
test
movsl
xchg
and
sbb
cwtl
pop
jae
add
clc
adc
popl
in
xchg
and
xchg
imul
daa
or
scas
jp
jns
outsb
dec
js
js
pop
jmp
sbb
stc
dec
cmp
in
jg
adc
fstl
ret
jmp
mov
data16
imulb
jo
mov
test
inc
xchg
sub
jae
cmp
filds
nop
jle
sarl
push
scas
sbb
mov
cmp
sti
and
mov
sahf
and
out
push
add
sub
adc
popf
mov
subl
add
xchg
aaa
inc
add
sbb
mov
mov
dec
jae
mov
sbb
subl
cwtl
out
not
loop
rclb
lds
or
test
les
call
mov
fistpl
inc
fs
nop
push
adc
sarl
jmp
pushf
cld
adcb
inc
ret
ret
xchg
mov
imull
dec
push
lods
sahf
push
adc
fcoms
pop
das
mov
jbe
ret
in
pop
xchg
adc
mov
out
push
xchg
repz
shrb
and
push
out
loope
push
sti
jns
in
cmp
push
int
and
pop
lcall
cmp
cltd
mov
mov
push
add
shlb
sub
cli
jo
mov
cmp
cld
mov
cmp
mov
fstl
cmp
or
and
cmpsl
insb
and
test
xchg
pusha
ret
lcall
dec
dec
aaa
lcall
mov
int
loope
loopne
out
aad
pushf
loopne
mov
std
xchg
or
movsb
jbe
add
xor
ss
stos
jne
sbb
inc
lahf
lods
add
mov
mov
lods
jbe
bnd
push
sub
jne
sub
dec
das
push
push
and
testb
xor
push
xchg
cmp
out
mov
test
mov
lret
push
mov
sub
sbb
aam
mov
hlt
pop
and
dec
mov
xchg
xor
inc
and
adc
xor
or
push
lods
clc
paddusb
sub
sbb
ja
mov
fnstsw
mov
mov
mov
mov
sub
int3
sub
loope
xor
and
cmpl
cmpsl
xchg
test
fmuls
xchg
pushf
nop
mov
lcall
movsl
jge
and
or
xor
cwtl
inc
lea
lret
repz
push
popf
notl
popa
orb
adcb
in
push
popa
lea
xor
mov
ret
or
xchg
int3
xchg
mov
pushf
lea
and
jno
mov
sub
fisttpll
mov
inc
add
mov
mov
repz
inc
mov
lock
push
cmp
xchg
shrb
sbb
mov
jge
xor
lret
rcr
movsl
and
insb
mov
and
mov
inc
ret
or
call
xchg
pop
dec
fnsave
adc
mov
pusha
mov
mov
imul
mov
xchg
outsl
xchg
imul
or
test
sbb
dec
pop
outsb
jmp
sbb
ljmp
fstpt
lcall
adc
aaa
add
fdivl
mov
ljmp
sbb
lds
pop
mov
imul
popa
dec
or
sbb
std
scas
je
ret
cs
mov
push
push
ret
stos
adc
sahf
rorl
push
adc
xchg
outsb
je
cmp
adc
sub
daa
rclb
or
pop
sub
lock
rolb
add
rorb
pushf
mov
test
jmp
ret
dec
cwtl
dec
xchg
in
jmp
std
xor
nop
sarb
test
ljmp
adc
cld
out
gs
stc
push
mov
sahf
imul
les
or
imul
push
jmp
ja
xchg
filds
xor
mov
mov
imul
cmpsb
or
inc
pop
mov
push
cs
xchg
imul
jae
adc
shll
mov
int
adc
faddl
js
xlat
insl
fldcw
xchg
arpl
dec
sti
popa
int
push
xor
stos
jecxz,pn
or
sub
xor
xchg
push
rorl
cmp
adc
dec
insb
out
sahf
inc
and
scas
insl
ljmp
mov
vpmacsww
pop
into
jg
xchg
in
xor
and
cs
mov
jp
gs
in
and
lret
pushf
push
pop
mov
cmp
xor
and
fistps
fwait
arpl
adc
mov
mov
movsl
call
add
xchg
mov
outsb
insb
inc
jmp
add
or
and
aam
and
xor
stos
scas
int
push
loopne
xor
arpl
fwait
mov
leave
fbstp
loope
fsub
test
sub
pop
xchg
mov
pop
and
dec
and
shrb
loope
aas
cmpl
stc
mov
xchg
pop
or
sbb
xchg
int
repnz
inc
stos
shll
daa
bound
mov
cmp
loop
call
pop
rcrl
add
cmc
inc
mov
lcall
pop
std
loopne
in
xchg
movsb
mov
or
jle
repz
xchg
pusha
daa
dec
data16
sbb
mov
mov
and
movsl
call
or
jnp
insb
insl
orl
pop
addb
mov
inc
scas
mov
mov
dec
and
mov
add
cmpsl
cmp
mov
sub
and
xchg
stos
popa
addb
jle
loop
push
outsb
mov
xchg
imul
mov
cld
mov
push
rolb
shrl
outsl
sub
inc
mov
sub
in
pushf
push
out
push
sub
jp
jmp
lds
jmp
fprem1
jp
adc
pop
jno
inc
adc
and
push
mov
pushf
imul
jne
mov
cmp
loope
add
sub
in
jnp
out
sub
cltd
clc
xchg
xchg
dec
jl
xchg
cmp
xchg
pop
jp
sub
jmp
push
roll
sub
lods
nop
mov
jae
adc
aad
int
jg
aas
fmul
cmp
push
mov
dec
nop
popa
adc
ret
sar
sbb
jg
ret
jmp
mov
hlt
mov
ret
mov
add
jo
inc
dec
fsubrs
ds
mov
mov
jp
mov
dec
cmp
mov
pop
cmp
in
ret
adc
shll
mov
xchg
lahf
cmp
and
inc
outsb
stos
lahf
mov
add
jno
addb
sbb
daa
jge
jg
jge
jle
insb
inc
dec
rcrb
in
or
xorb
repnz
or
je
push
gs
out
jno
lods
icebp
sbb
push
andl
pop
loop
pusha
inc
or
cmp
jecxz
pop
test
rol
xchg
sbb
or
push
sub
xor
out
shl
pop
inc
xlat
shll
dec
pop
and
adc
je
iret
jecxz
int
stos
xor
mov
pop
sbb
xor
repz
in
push
in
ljmp
repnz
loope
sbb
cmp
cmp
mov
idivl
aad
cmp
ss
xor
sbb
inc
pop
jl
or
xchg
addr16
movsb
mov
or
jle
xchg
repz
inc
aaa
dec
xchg
fwait
lret
jb
stc
sbb
sbbb
out
loop
xlat
sbb
jb
rol
or
push
sahf
mov
dec
inc
xor
dec
scas
fldcw
or
sbb
bound
cmp
push
push
out
xchg
push
mov
dec
sbb
sbbl
testl
and
repnz
mov
es
or
out
ror
push
push
rcll
cmp
lods
mov
cmp
cltd
cmp
jecxz
jp
sbb
daa
push
rcr
pop
and
in
loope
stc
stos
nop
clc
xchg
test
test
mov
adc
dec
cmp
jp
ja
add
add
adc
and
push
cmp
movq
inc
push
insb
flds
cmp
sti
push
adc
inc
lret
imul
xchg
jbe
cmp
lret
sub
lret
pop
cli
xor
in
icebp
das
scas
incb
mov
xor
mov
cmp
inc
push
pop
add
pusha
loop
aad
pop
adc
adc
loopne
aaa
pop
lcall
jno
xchg
int
inc
add
xchg
iret
cmp
fildl
push
dec
arpl
xor
jno
inc
stos
lods
imul
mov
ja
xor
jns
jl
fistl
jnp
add
xor
adc
cld
sub
xor
vpmulhw
pop
pop
jo
pop
hlt
xchg
popa
iret
dec
fistl
mov
inc
js
xchg
jns
inc
or
ds
data16
fistpl
add
sbb
inc
mov
sbb
jnp
xor
not
imul
inc
add
jg
imul
call
sbb
jbe
mov
int3
push
ja
mov
sbb
jb
pop
lods
jnp
daa
ss
jno
insl
mov
bound
lret
popf
data16
mov
fstp
add
addl
rclb
hlt
std
pop
popf
test
lock
jl
ljmp
sub
icebp
aaa
in
and
add
push
inc
pushf
xchg
jmp
cld
das
imul
aam
xor
cld
jns
push
dec
cmp
add
cmpsl
cli
cmpsb
sahf
test
in
mov
mov
dec
or
sbb
and
outsb
pop
mov
in
scas
mov
pop
pusha
pop
test
call
mov
mov
loop
das
outsb
sbb
sub
and
xor
cmp
push
into
dec
scas
push
shlb
adc
psllw
xchg
lahf
pop
push
test
pop
cli
into
fstl
mov
sub
pop
sbb
mov
cmp
xchg
lods
stos
jmp
mov
out
add
inc
aam
icebp
icebp
insb
fistl
hlt
fwait
sub
pop
and
push
stc
stos
iret
pop
fisttpl
jne
xchg
decl
mov
xchg
dec
arpl
loope
out
das
cltd
jbe
jge
shl
sub
or
sub
add
cmpsb
les
shll
jg
pop
or
fwait
popa
mov
lock
mov
push
loopne
jnp
in
es
sub
hlt
movsl
mov
pop
push
mov
jae
repnz
in
fnsave
cmpsl
add
es
lcall
push
loop
jb
xchg
popf
mov
add
xchg
int
xchg
dec
mov
enter
ret
mov
jbe
mov
ja
sub
sahf
ja
sbb
mov
pop
mov
ret
jge
adcl
add
mov
test
ror
jecxz
xorl
sbbb
mov
jb
xor
push
rcr
adc
pop
push
mov
in
int
int3
scas
lea
cmp
lods
gs
loopne
ja
mov
andb
test
inc
jg
outsb
test
jp
xlat
mov
or
lret
fnsave
fcoml
mov
enter
mov
mov
pop
ret
pop
jae
test
es
xchg
fcmovne
sub
in
ds
pop
cwtl
mov
lret
sbb
lock
aaa
pop
fnsave
jg
aad
jecxz
mov
jge
icebp
cli
sbbl
and
sti
icebp
xchg
xor
xchg
test
pop
cwtl
aas
add
adc
cli
loopne
jle
out
jnp
sarl
fistl
inc
pop
xchg
inc
xor
popf
sub
dec
jns
mov
pop
or
jne
adc
dec
cltd
lock
adc
in
setp
je
in
cwtl
mov
in
mov
jl
ret
test
test
push
mov
hlt
inc
add
repnz
xchg
sub
push
js
adc
inc
addr16
pop
or
add
pop
mov
pop
fdiv
or
lods
push
or
lds
dec
int3
addr16
fcmovne
xor
push
pushf
mov
or
adc
imul
dec
mov
outsl
jo
xor
pop
outsb
xchg
adc
inc
xor
dec
xchg
les
jge
iret
out
aas
movsb
push
cmpsb
icebp
aad
mov
dec
dec
bound
dec
adc
nop
jmp
negb
movsb
jmp
mov
subb
sarb
daa
pop
outsl
mov
rep
inc
jb
pop
dec
sbb
mov
push
cwtl
out
lcall
mov
and
clc
setge
repnz
cmpsb
shlb
and
dec
xchg
aaa
push
and
data16
cmp
cli
scas
int
aas
popf
hlt
fwait
int
inc
mov
lods
test
inc
daa
xchg
icebp
cmp
mov
sub
in
adc
out
sub
jge
and
mov
stc
mov
xorl
fcmovbe
in
or
and
mov
insl
or
jbe
jno
xlat
cltd
xor
pop
push
push
mov
sti
jmp
les
mov
movaps
mov
pop
stos
cmpb
cmp
jp
orb
iret
out
cs
not
jo
int
dec
out
addb
je
and
mov
pop
mov
push
scas
ljmp
pusha
xchg
push
sub
insl
in
movsb
jbe
jae
fbstp
ss
out
cmpsb
pop
scas
cmp
int
add
outsl
adc
push
inc
repz
pop
and
repnz
push
in
adc
ljmp
cmp
xchg
inc
fwait
in
fcoml
pop
adc
lahf
addr16
push
movb
and
and
imul
push
mov
cli
out
and
imul
mov
cmp
mov
pop
bnd
pop
fisubl
insl
in
loop
cld
or
sub
dec
or
xchg
imul
jle
repz
subb
add
repz
lcall
je
adc
or
mov
mov
add
loop
cmp
idivb
les
mov
dec
push
dec
xor
int3
mov
pop
lahf
ds
es
test
icebp
movq
mov
dec
pop
popf
push
imul
push
into
mov
inc
jo
movsb
imul
in
push
sbb
incb
popa
aam
arpl
xlat
jns
aad
pop
inc
jmp
imulb
sti
lahf
hlt
push
push
aas
jle
xchg
jle
das
lods
pushf
leave
rcl
jno
cmc
dec
dec
sti
idivb
adc
hlt
andb
jmp
add
test
iret
jbe
pop
fwait
pop
aaa
add
movsb
mov
dec
jge
fisubrl
inc
fisttps
rcrb
mov
mov
insb
jecxz
push
dec
insb
sbb
roll
mov
dec
call
pop
ficoms
roll
inc
push
pop
dec
xor
cwtl
xchg
mov
xor
push
and
addr16
cmpsb
cli
push
mov
movsl
push
outsl
xor
ret
stos
jno
or
in
in
mov
mov
pop
scas
andb
sbb
faddl
push
jmp
xchg
mov
xchg
mov
pop
test
and
add
pop
inc
outsl
jnp
inc
dec
bound
icebp
aaa
dec
mov
adcb
test
out
add
jle
insl
mov
subb
scas
cmp
jl
add
fcoml
xor
xchg
and
cmp
jnp
aaa
mov
mov
jecxz
icebp
shl
fisubrl
aas
mov
adc
mov
sub
jmp
jge
cmp
sub
fdivrl
flds
push
fmuls
sub
fwait
test
mov
data16
in
inc
repz
icebp
or
inc
jle
sub
jae
push
int3
mov
int
outsl
jl
ret
and
data16
mov
enter
aas
inc
mov
mov
mov
call
rcl
sarl
mov
inc
outsb
es
push
int3
and
mov
je
call
out
and
xor
jae
outsl
add
jno
popf
or
jmp
inc
mov
sub
push
xchg
and
fadds
sub
mov
sar
popa
push
inc
dec
scas
and
nop
push
clc
or
mov
rcrl
fiaddl
dec
or
xor
lock
push
enter
lcall
sahf
xlat
cld
jl
adc
flds
lahf
push
xor
mov
bound
hlt
idivb
mov
les
lock
push
lds
jg
or
fildl
push
push
mov
mov
and
xor
xchg
pop
fwait
sub
faddp
lods
lahf
sbb
dec
fimull
adc
sbb
push
push
bound
xlat
sbb
push
dec
dec
and
outsb
push
pop
je
push
adc
cmpsl
fwait
ret
jae
jge
xchg
cmp
mov
jns
xor
movsl
adc
pusha
push
stos
push
pop
and
cmc
icebp
dec
sbb
xchg
sar
push
fwait
addr16
adc
fistpll
push
mov
testb
jnp
movsb
dec
push
andb
bound
cmp
insl
hlt
call
and
vmwrite
mov
mov
gs
lods
repz
cmp
jg
sbb
jb
inc
stos
cmp
shlb
shlb
pusha
mov
dec
mov
ret
pushf
ljmp
in
lock
sub
mov
jb
mov
loopne
cmp
inc
push
add
loop
leave
test
add
insb
xlat
scas
fsubrs
adc
adc
jnp
lods
sub
pop
cwtl
subl
stos
cmp
pop
add
adc
fs
push
jmp
inc
sub
fnstsw
pop
pop
lret
cmp
das
xor
ret
push
lret
imul
adc
cs
jl
sbb
mov
cmp
mov
insb
push
mov
push
stos
cli
add
ror
cmp
unpckhps
mov
jge
ret
fst
xchg
sbb
ret
rcrl
inc
xchg
mov
out
lock
add
jle
pop
scas
xchg
push
pop
cs
xchg
jge
jno
lret
jp
add
popf
add
fwait
and
pop
je
ss
popa
push
jp
sub
flds
lods
stos
bnd
aad
push
rorb
sub
mov
mov
inc
cwtl
jbe
bound
filds
dec
in
cmpsl
and
inc
lock
mov
mov
jnp
add
dec
movsl
lods
loop
daa
icebp
stc
scas
lret
jno
rcll
add
mov
push
jne
add
notl
scas
sbb
jge
fs
jnp
je
scas
sbb
or
shl
xorl
sub
push
lret
rcll
pop
icebp
jle
outsl
inc
iret
aad
idivb
mov
lods
outsl
and
xchg
sub
movsb
xchg
inc
in
xchg
loopne
inc
lods
adc
dec
outsl
xchg
lods
sbb
std
int3
andb
and
push
cli
movups
jle
notb
or
fbld
popf
fstpt
pop
roll
dec
mov
mov
movsb
mov
xchg
cmp
add
inc
test
loop
inc
and
inc
fcoml
jmp
outsb
jle
jo
mov
lret
mov
rcl
jmp
add
leave
adc
jns
mov
out
jnp
xchg
cli
or
sbb
or
pop
sub
or
pop
mov
insb
mov
repnz
mov
mov
int3
insl
pop
jnp
push
cltd
pusha
loop
dec
js
sub
push
sbb
xchg
pop
test
xchg
xor
mov
rorb
cmpsl
pop
xchg
insb
inc
int3
pop
out
mov
jge
stc
pop
xchg
cmp
ja
sbb
insb
jmp
cmpw
stos
mov
jecxz
movsl
mov
imull
in
out
push
sbb
negb
arpl
iret
shlb
pop
xchg
inc
cld
mov
sbbb
xorb
out
pop
bound
mov
lcall
test
sbb
mov
mov
repnz
test
add
inc
mov
cwtl
in
push
mov
ds
filds
push
mov
jb,pn
imul
jp
xchg
lret
adc
test
fisttpl
jo
push
fnstcw
shll
jmp
xchg
lods
js
mov
xchg
pop
dec
push
imul
insl
mov
push
sbb
dec
inc
test
push
cld
ficoml
mov
enter
or
in
lea
mov
mov
push
into
fnstsw
pop
lods
mov
dec
dec
int
mov
sbb
mov
iret
sahf
lods
cs
xor
fidivrs
aas
cld
aad
aam
inc
xchg
add
xor
or
bound
adc
and
mov
mov
add
mov
fildll
xorl
dec
adc
scas
ljmp
idivb
aas
xchg
repz
mov
lahf
outsb
cmp
test
stc
ds
adc
sbbl
push
mov
lock
cmpsl
sub
and
outsl
add
push
cmovae
das
repz
shrl
add
inc
pop
sbb
inc
adc
push
je
je
call
xchg
lcall
adc
cmp
ret
xchg
adc
jns
add
cs
push
push
in
ljmp
xchg
pop
inc
and
and
push
jp
adc
push
jb
or
push
cmp
int
xchg
sbb
out
push
mov
out
and
add
cmpsb
cwtl
fs
lods
mov
clc
int
mov
mov
das
mov
test
rclb
jae
xor
fstpt
iret
out
jle
mov
mov
inc
div
aas
and
inc
sahf
inc
mov
cli
cmc
sbb
mov
out
aas
lea
fs
or
incl
jge
adc
in
sub
outsl
lret
mov
jle
jb
stos
cmpsb
pop
mov
cli
xchg
mov
jbe
in
fs
jp
hlt
pop
loope
ret
enter
jle
dec
cmp
hlt
fadds
loope
jl
subb
mov
lock
mov
pop
sbb
cmpsl
mov
iret
das
jmp
rcrl
xchg
sub
movsl
inc
hlt
inc
xchg
hlt
lea
xchg
jp
push
push
mov
ja
pop
inc
je
dec
arpl
loope
mov
adc
cmpsl
pushf
or
fnsave
ret
ret
jmp
mov
lds
xchg
xor
lahf
inc
push
mov
adc
ret
loop
inc
mov
stos
test
push
xchg
mov
mov
pop
mov
in
pop
jg
inc
adc
daa
xor
mov
lret
mov
stos
xchg
mov
mov
testb
testl
mov
sbb
je
dec
inc
mov
mov
mov
jb
push
shll
daa
mov
push
jb
mov
sahf
jbe
pop
sbb
loope
add
sbb
inc
pop
pop
enter
cwtl
ret
sbb
mov
sbbb
sbb
pusha
pop
mov
fnstcw
push
sbb
arpl
test
leave
xor
sub
push
jnp
loopne
pop
aaa
lcall
fmul
xor
jnp
mov
imul
addr16
fldl
loop
int3
lea
mov
adc
in
sbb
dec
inc
dec
mov
in
or
fcomi
xchg
js
dec
enter
pop
jno
pop
ret
inc
shrl
cmpsl
lcall
outsl
jo
aaa
aas
shrl
mov
sbb
xor
adc
add
mov
pop
and
inc
test
sub
or
test
xor
mov
push
lret
movsl
or
movb
pop
adc
sub
jl
mov
mov
add
mov
inc
sbb
pop
cmp
jo
jge
nop
test
hlt
cmp
loope
jns
push
in
add
fisttpl
inc
mov
jecxz
pop
fstl
add
and
inc
roll
je
shlb
add
movsb
ret
mov
cltd
out
imul
and
sbb
sub
in
mov
or
push
pop
jecxz
pop
hlt
jne
or
fwait
dec
scas
fadd
std
in
xorl
add
inc
inc
jmp
lahf
cwtl
rcrb
enter
lea
test
sub
repnz
and
push
adc
xor
push
clc
repnz
out
es
mov
imul
pusha
scas
pushf
sbb
scas
inc
icebp
int3
int3
push
lods
cmp
add
daa
jbe
mov
adc
mov
sti
add
ja
loope
add
sbb
add
out
or
ret
stc
imul
les
push
in
dec
das
fisttpll
cmc
xor
sbb
mov
mov
les
imul
pop
repnz
mov
cwtl
sub
ret
fidivl
mov
xchg
test
sbb
mov
add
sahf
repnz
clc
mov
jnp
or
lcall
mov
cmp
mov
mov
repz
cmp
test
cmc
add
or
inc
jnp
push
shll
cmpsl
push
lock
fwait
mov
dec
or
idivl
pop
or
bound
in
aad
inc
or
jmp
mov
add
sbb
jl
sbb
test
add
enter
lret
stos
mov
or
jmp
xlat
imul
and
leave
and
cmp
pop
fdivrl
add
mov
pop
dec
sub
fwait
mov
cmpsl
xor
orl
mov
cmp
hlt
test
inc
sub
inc
pop
cli
inc
outsl
push
lret
stos
push
cmp
fs
lret
aas
aam
test
fwait
pop
inc
daa
popa
aam
arpl
mov
xchg
or
dec
and
adc
xchg
adc
mov
or
xor
bound
jb
testl
test
mov
push
sub
das
sbb
mov
push
xchg
adc
dec
push
dec
cmp
test
cmp
sbb
push
les
daa
repz
fldt
xor
pop
mov
inc
push
clc
das
dec
popa
lods
stos
dec
dec
or
imul
hlt
shrb
mov
ffree
xor
push
pop
adc
cli
push
jb
adc
iret
jg
push
imul
cmp
std
push
push
xchg
pop
mov
mov
lds
into
cmp
mov
ret
jb
dec
xchg
sti
ret
ja
aaa
gs
hlt
lcall
int
loop
dec
inc
xchg
cmc
push
pop
gs
and
rorb
mov
add
test
dec
int3
xor
rcll
mov
lods
mov
mov
mov
adcl
repnz
loope
das
mov
mov
stos
push
mov
inc
stc
incb
sub
lcall
sbbl
in
repz
fisubrs
mov
sub
fsub
aad
sbbl
aaa
popa
bound
icebp
lods
xchg
jbe
mov
xor
add
sbb
push
subb
mov
es
xchg
dec
cmp
inc
push
dec
and
insl
pop
jne
outsl
sub
xchg
insb
mov
pop
incb
ds
cmp
loope
hlt
adc
inc
add
fwait
cld
aas
dec
xor
mov
xlat
push
xor
push
fdivs
sbb
push
mov
pop
push
popa
insl
mov
cmp
inc
scas
adc
scas
xor
xchg
push
lea
cld
adc
cmp
or
cmp
test
and
shlb
imul
cmp
pop
add
mov
lahf
push
es
pop
scas
push
scas
or
je
outsl
std
outsb
mov
xor
cmp
sub
sbb
clc
and
and
popa
lods
mov
les
in
adcb
sbb
lahf
inc
xchg
lahf
xlat
ss
push
loop
loopne
sysret
lret
movsb
cmpb
mov
mov
sbb
and
addb
or
push
movsb
jp
mov
jne
sbb
in
xchg
jmp
scas
xor
cmpsl
sbb
fistpl
arpl
sbbl
jp
shl
sub
mov
inc
test
fistpll
shrb
jns
fcoml
shlb
lea
stc
fs
jg
adc
stos
jne
leave
sbb
shrb
pop
sub
inc
mov
or
scas
mov
in
mov
out
inc
dec
adc
iret
into
cli
pop
inc
mov
jmp
sahf
cmovl
jl
enter
push
cmp
fistpll
xor
jle
test
fmulp
ror
mov
mov
xchg
cld
cmpsl
or
cs
push
push
jmp
cli
inc
mov
sahf
sbb
scas
jns
andl
inc
inc
and
pop
jmp
mov
js
int
sbb
cwtl
shll
movsb
test
push
xor
mov
cmc
gs
scas
movsl
or
adc
enter
fcoml
es
nop
jmp
xor
movsb
add
jns
push
mov
xchg
fucomi
pop
loope
adcb
inc
dec
cmc
dec
inc
adc
mov
enter
sbb
mov
fs
nop
jnp
or
xor
adc
out
jne
or
mov
adc
in
into
cwtl
inc
add
dec
je
dec
push
push
cltd
and
mov
dec
sub
rcll
jp
popf
pop
adc
cmc
jbe
fs
mov
push
inc
sub
mov
data16
lret
cmp
xchg
cmp
cmp
lock
jb
sub
sbb
pop
sbb
lods
mov
in
mov
cmp
and
or
xor
addr16
pop
icebp
push
sbb
out
cli
mov
push
repnz
cmp
mov
lret
jmp
loope
arpl
mov
mov
loopne
pop
jae
lcall
mov
adc
jge
jo
lods
jo
lds
jae
mov
repnz
jno
cmpl
mov
mov
cmp
gs
lods
mov
lods
mov
ret
push
sub
xlat
xchg
mov
adc
push
shll
in
mov
les
std
rcr
mov
mov
int3
movsl
aam
leave
mov
jnp
unpckhps
jb
scas
rorb
sahf
fsubl
fldcw
pop
es
push
sub
xor
dec
mov
es
dec
add
aam
dec
push
jg
add
out
xlat
insl
mov
rorl
sbb
out
jne
sbb
inc
fsubr
mov
add
or
fisubrl
push
aas
sub
mov
mov
movsb
scas
test
lret
add
jecxz
je
pop
sbb
jg
pop
cmp
mov
clc
cwtl
int3
popf
shll
fmul
das
fidivs
lods
inc
inc
push
int3
pop
lods
sub
shll
mov
dec
inc
cmp
lcall
or
xchg
pop
pop
jg
jp
imul
ror
sbb
xor
and
leavew
mov
pop
ljmp
or
jg
testb
jbe
adc
ficoml
rcrb
xchg
loop
in
lds
xor
mov
scas
negb
in
or
add
jecxz
sti
inc
xchg
xchg
aam
jecxz
and
sbbl
push
insl
jne
notb
and
cmpsl
dec
cmp
and
stos
fidivl
stos
dec
shl
cmp
jns
jmp
jo
lds
adc
je
out
xchg
and
movsb
ja
nop
push
sahf
repnz
mov
test
push
roll
or
push
push
jge
mov
or
xchg
jns
jp
lea
gs
mov
fldt
xchg
add
mov
xchg
sub
in
mov
mov
sub
sub
pop
mov
arpl
adc
fldenv
or
dec
xchg
fcomip
pop
in
in
cli
mov
cltd
mul
jp
push
and
scas
push
jmp
mov
ljmp
jns
cmp
jns
sub
pusha
cltd
les
mov
dec
push
cmpb
decl
je
std
mov
add
mov
mov
xor
sub
mov
sti
in
stos
jbe
lret
out
xor
cli
mov
and
mov
aam
in
lods
je
dec
pop
dec
jne
lret
andl
out
mov
shrl
jp
sub
sbb
fsts
pop
xchg
sub
or
push
push
mov
stos
xor
inc
mov
xor
mov
repnz
je,pn
cmpb
mov
cmp
cwtl
xchg
pop
clc
pop
pop
test
outsb
rcrl
dec
inc
test
stc
cs
ja
xchg
mov
cmpsl
sub
clc
pop
call
jnp
jns
cmp
xchg
jmp
pop
adc
imul
insb
pop
aaa
mov
lods
test
mov
dec
addb
out
jne
movsb
sub
push
mov
jmp
loope
test
jge
loopne
mov
push
jmp
sub
mov
and
test
cmp
sarl
addr16
in
push
adc
xor
fildl
aaa
jno
push
sub
mov
add
inc
pop
jns
popa
call
out
sub
fwait
pop
and
call
and
popa
inc
lods
popa
mov
shrb
icebp
sahf
mov
or
pop
lret
aam
cmpsb
lds
or
mov
mov
xchg
popa
mov
loope
cmp
sub
xchg
and
push
mov
lods
xor
dec
adc
inc
cli
je
cmpsb
in
jl
test
sbb
std
lods
or
mov
push
cmp
pusha
mov
pusha
lret
push
or
pushf
jae
adc
mov
cs
xor
hlt
dec
and
call
mov
and
lret
dec
xor
lods
aam
sti
or
jecxz
mov
cmp
pop
outsb
aam
pushf
and
mov
dec
cmp
pop
push
ja
outsb
sub
shrb
sbbb
ret
leave
xorb
scas
js
add
iret
push
sbb
aas
test
scas
push
xchg
dec
lahf
mov
in
test
adc
or
cmpsb
inc
in
ljmp
mov
fmuls
cmc
cmpsb
lds
cmp
clc
jle
jmp
add
xor
mov
cmc
xchg
add
push
mov
popa
adc
push
mov
xor
iret
adc
out
mov
bound
jns
fldcw
xchg
test
pop
call
inc
jg
mov
mov
in
cmp
adc
jle
scas
iret
mov
dec
xor
scas
das
xor
inc
and
mov
push
mov
jno
psubsw
mov
mov
cmp
pusha
jae
sub
pop
cmp
jge
int
inc
ss
push
call
test
sub
cwtl
repz
shlb
mov
fsubl
mov
inc
add
adc
int3
push
push
dec
and
fisttps
sub
test
jmp
cmpsl
js
inc
mov
shl
movl
add
ret
sub
dec
xor
cmp
and
cmpsb
add
lret
in
in
mov
lcall
xchg
sbb
sub
orl
std
dec
aam
rol
mov
and
xchg
pushf
push
and
push
sbb
mov
mov
sbb
xchg
cmp
mov
mov
xor
push
sbb
ret
jmp
in
xchg
ret
inc
sbb
mov
fcoms
sub
or
loopne
dec
push
mov
sbb
push
pop
sub
jbe
imul
rorl
and
or
add
aad
push
pusha
es
outsb
sbbb
inc
inc
cmpl
int3
mov
dec
mov
pusha
in
jmp
cmp
stos
sahf
or
out
mov
xchg
pop
rcrl
js
add
or
pop
push
jno
sub
shll
add
adc
fwait
adc
xchg
out
jno
enter
jne
and
pop
and
mov
or
push
pop
stc
pop
addr16
test
clc
push
cmp
addr16
mov
je
fildl
lret
sub
cmp
adc
push
xor
pop
hlt
icebp
fldt
inc
and
test
adc
fistpll
push
inc
ret
pop
mov
pop
ffreep
stos
jbe
aad
cmp
jbe
std
mov
push
push
mov
xor
shr
cmpsb
daa
sub
mov
pop
fistpll
icebp
or
xor
jmp
insb
nop
pop
push
dec
xor
pop
mov
aas
mov
push
and
out
mov
lods
push
test
push
add
lea
data16
es
adc
stos
inc
push
mov
movsb
jp
mov
inc
test
fistpl
shl
dec
out
mov
xchg
or
loop
and
mov
or
mov
dec
nop
scas
loope
sbb
mov
jge
fdivl
mov
mov
push
add
push
dec
push
adc
xchg
in
dec
cltd
pop
icebp
dec
cli
mov
jg
in
sbbb
ss
sub
mov
inc
hlt
sbb
mov
push
inc
movsl
bt
adc
test
rorl
push
cmpsb
or
call
xchg
fcmovbe
call
out
into
repnz
sahf
cmp
ret
or
insb
clc
jns
mov
cmpsl
pusha
mov
dec
mov
mov
mov
fidivl
dec
daa
pop
inc
out
sbbl
sbb
push
mov
inc
pop
pop
dec
cmp
fmuls
out
push
or
cmp
hlt
es
push
push
push
mov
lock
inc
jb
cld
clc
adc
push
or
xor
mov
push
fsubl
in
outsl
push
pushf
shll
xor
sarb
cmp
push
popf
cmp
popa
das
xchg
in
mov
pop
cmp
inc
pop
enter
scas
pop
sbb
rcrb
inc
adc
pxor
cmp
mov
out
adc
sahf
pop
clc
test
loop
mov
mov
mov
jp
mov
dec
mov
es
push
scas
xor
push
sub
push
jmp
mov
and
hlt
lods
push
imul
negl
mov
loopne
pop
adc
mov
jmp
lret
and
mov
add
xor
inc
packuswb
fisubrs
mov
fisubl
and
sub
add
lret
dec
and
decl
xchg
std
out
jno
repz
ljmp
daa
test
popa
jnp
sti
sub
sbb
mov
cmp
popa
cmpl
aad
xchg
push
dec
mov
fdivrs
out
inc
rolb
dec
aaa
call
idivb
jl
jp
lds
sub
xchg
xchg
mov
pop
test
mov
call
fisttpll
stos
das
push
shr
jns
pop
push
pop
sbb
loop
fs
push
pop
push
jg
mov
xor
rcr
jo
das
inc
daa
cmp
dec
mov
clc
pusha
mov
lsl
mov
dec
cli
andl
pop
jo
and
mov
imul
test
sub
dec
push
jbe
shl
pop
push
xchg
popa
mov
adc
ss
movsl
xchg
and
add
adc
mov
enter
sbb
fcmovu
xor
jbe
arpl
decl
push
stc
push
lret
mulb
dec
movsb
cld
cli
dec
mov
mov
out
add
lds
jg
fsub
popa
mov
cmp
lahf
fildl
lods
pop
out
inc
pushf
mov
ja
sub
stc
mov
xchg
in
add
js
and
mov
dec
inc
stc
pop
or
sbb
push
xor
adc
xchg
sbb
inc
imul
or
or
lcall
ficoml
idivl
inc
vorps
add
fmulp
fnstsw
and
mov
lds
lods
cmp
add
or
sbb
push
gs
or
fildll
enter
in
mov
ljmp
aad
mov
imul
dec
ja
or
into
pop
cltd
jo
add
xor
cmp
xor
or
dec
insl
test
mov
shlb
stc
fmuls
sti
sbb
dec
es
es
mov
pusha
dec
fldl2t
enter
xchg
popa
aad
inc
pop
loopne
out
gs
pop
jmp
das
push
lret
cmp
and
mov
mov
dec
mov
movsb
xor
and
notl
rcll
or
mov
fistps
push
jecxz
jb
push
dec
cmp
in
out
pusha
rolb
mov
arpl
enter
in
nop
mov
pushf
and
in
stos
sub
pushf
xlat
adc
test
sub
cmp
mov
pushf
ljmp
adc
cwtl
pop
mov
test
ret
mov
cmp
mov
mov
mov
cmp
or
pop
fbstp
push
outsl
add
sub
les
or
outsb
push
xor
insb
repz
mov
add
pop
or
subl
or
and
mov
and
or
mov
xchg
xchg
lock
out
push
inc
lret
std
dec
mov
adc
inc
pop
push
aas
sbbb
xor
fisttpl
mov
push
and
adc
insl
add
mov
adc
out
jge
mov
mov
jb
dec
movsl
mov
xchg
push
sbb
roll
or
loope
jmp
jnp
movsl
cltd
jno
stc
dec
loopne
cmpsb
and
cmp
cmp
cmc
xchg
push
xchg
mov
sub
scas
adc
aam
cmpsl
jo
jl
cmp
mov
mov
push
repz
mov
loop
pop
xor
mov
cli
mov
pop
push
incb
xor
add
xor
pushf
repz
cmp
inc
sbb
ljmp
daa
inc
lret
test
sub
xchg
aad
test
or
sbb
push
rcll
pop
sub
push
inc
shlb
js
xchg
lods
sub
jp
ficoms
movsl
dec
loope
add
test
test
jmp
pop
mov
movl
test
xlat
inc
sbb
gs
mov
nop
filds
add
jg
adc
in
nop
jge
neg
outsb
xlat
sbb
fstps
or
mov
sub
popf
mov
bound
cwtl
shlb
ret
les
cwtl
mov
clc
xor
cmpsl
repz
fstl
sub
clc
int
outsl
or
out
mov
add
adcb
in
jbe
ss
pop
in
mov
imul
add
scas
les
pop
inc
ljmp
mov
es
into
cmp
or
add
mov
mov
fidivrs
pop
push
stos
sbb
or
mov
jae
rcr
xorb
sbb
mov
or
cmp
stos
add
cmp
mov
lahf
xchg
adc
mov
mov
and
sub
fnstcw
cmpl
mov
aas
cmp
xlat
inc
adc
xchg
jge
pop
mull
iret
xchg
divl
shll
test
and
imul
cmp
jae
and
cwtl
add
mov
xchg
add
gs
stos
xchg
xor
or
inc
insl
dec
dec
lea
mov
stos
dec
je
dec
insb
jl
or
ljmp
or
outsl
or
cs
in
pop
sub
test
idivb
add
nop
xlat
mov
adc
mov
lock
mov
sbb
imul
scas
call
mov
xchg
adc
aaa
ds
inc
in
cmp
mov
popa
sbb
stos
adc
and
adc
in
out
sbb
hlt
aaa
pop
lea
rcrb
aam
mov
aaa
pop
cmp
pop
sbb
push
push
mov
pop
imul
fldt
aam
inc
jae
mulb
loop
sub
push
in
mov
jp
push
pop
das
in
jecxz
cli
out
aad
std
inc
mov
xor
sar
or
and
mov
sbb
in
test
je
mov
jle
xchg
in
dec
inc
sub
add
push
in
enter
or
xor
aam
pop
pop
std
xorl
test
enter
aaa
xchg
mov
fisttpll
outsb
rcrl
lcall
rcl
into
jmp
pop
lcall
mov
push
dec
sub
in
test
lret
push
dec
xchg
jl
ret
shlw
or
xor
adc
and
adc
cs
mov
stos
pop
push
adc
das
out
xorb
jbe
imul
pop
aam
add
add
cmp
inc
scas
cmc
js
or
sub
test
xchg
and
mov
push
repnz
cmp
orb
sti
fnstsw
pop
xchg
int
shll
dec
lods
repnz
mov
lds
lods
mov
and
pop
pop
push
xchg
lret
push
push
adc
dec
xchg
pop
imul
test
ret
in
mov
cmp
sub
inc
cmp
out
popa
or
mov
xor
sub
pushf
sahf
xchg
cmp
scas
mov
xchg
sbb
imul
cwtl
xchg
pop
mov
cmp
dec
mov
and
mov
enter
ret
loopne
outsb
daa
mov
mov
adc
out
cld
fs
dec
mov
or
jae
test
adc
lods
add
add
insb
aaa
arpl
sub
cmp
cmp
pop
test
gs
mov
ds
jne
arpl
mov
xchg
aas
jns
es
or
cltd
jp
xchg
adc
inc
push
fsubrp
add
or
and
and
and
aaa
or
dec
cmpsb
fsubrl
add
pop
fs
or
vpmacssww
lret
and
popa
adc
push
adc
stc
imul
ss
aam
insb
and
xorl
bound
test
aad
pop
adc
pop
rorl
jns
sub
adc
jns
mov
dec
push
inc
in
les
mov
xlat
rcll
pop
inc
in
jecxz
int3
xchg
insb
out
cli
or
stos
insl
mov
rolb
test
xchg
xchg
mov
cltd
loop
hlt
daa
xor
adc
in
sar
xlat
iret
or
lds
inc
shl
hlt
loope
ret
adc
sbb
insl
mov
adc
insb
and
loop
jp
insb
jne
jbe
inc
dec
fwait
outsb
sub
dec
mov
bound
add
and
pop
js
xchg
outsb
ficompl
mov
out
jecxz
sbb
mov
das
fisttpl
aas
bound
pop
cmpsl
or
in
rcl
out
and
mov
jnp
enter
jnp
jnp
shll
mov
mov
pop
cmp
jb
lds
push
frstor
sub
jno
lods
cmc
jb
andl
insb
sbb
les
imul
lret
pop
in
out
nop
jo
int
xchg
pop
mov
sub
or
aam
adc
xchg
pop
fcmovne
sbb
jle
push
cmp
xor
scas
subl
daa
sbb
lock
outsb
mov
pop
rorb
in
jbe
pop
pop
xor
es
aam
fsubs
fdivrp
inc
aad
dec
sub
in
or
and
mov
int3
dec
mov
stos
in
mov
lcall
cmp
push
jecxz
inc
orb
and
shr
xlat
push
jno
insb
fwait
jbe
sub
push
jae
jecxz
test
jb
sbb
xchg
cltd
xchg
fisubrs
pop
lea
scas
icebp
popa
lcall
cli
push
dec
test
xchg
push
bound
xlat
or
out
jnp
int
loop
test
or
fisubrs
movsb
mov
inc
ret
aad
addl
loopne
lahf
mov
sahf
and
jb
mov
xor
call
jg
mov
mov
popf
push
jns
lahf
mov
sbb
cmpsl
push
dec
lock
int
sar
xchg
daa
cmpsl
imul
xor
and
mov
adc
lahf
add
mov
lret
data16
pop
xor
shlb
push
test
les
or
icebp
cmp
sub
stc
mov
and
cmpsb
mov
icebp
xchg
loope
test
cs
in
mov
mov
in
incl
or
xor
sub
add
mov
aad
push
sbb
addr16
and
push
lahf
jbe
pop
mov
cmp
sbb
xchg
iret
cmp
movsb
xchg
or
xchg
out
xchg
push
mov
xchg
stos
mov
and
mov
gs
nop
fxch
inc
jg
lds
rorl
in
push
mov
pusha
inc
mov
mov
ror
mov
std
jne
out
jl
ret
stos
mov
xor
add
gs
push
or
in
fisubs
loopne
scas
adc
adc
or
decl
movl
push
roll
jl
mov
xchg
mov
les
or
mov
iret
out
lods
cmp
dec
add
mov
shr
aaa
cmpsb
sub
icebp
pop
scas
jp
jnp
out
imul
into
push
xchg
mov
jg
das
loopne
sub
cmp
enter
add
lds
dec
test
inc
push
jge
loopne
pop
cld
bound
xchg
aad
ss
data16
cs
pop
jo
jne
inc
sbb
lret
xchg
adc
scas
imul
push
push
scas
mov
enter
rcl
idiv
add
sbb
mov
mov
sahf
ret
lret
lods
jge
dec
xor
sbb
clc
in
xor
addr16
ret
scas
and
repnz
cli
cmp
rclb
in
adc
out
ljmp
repz
testb
and
cli
mov
int3
dec
pop
hlt
xor
pop
ret
cli
mulb
xor
test
adc
sahf
mov
out
test
xchg
sub
pop
cmpsl
mov
rcr
test
push
aam
fmull
pop
xor
pop
inc
sbb
in
test
push
jne
std
daa
adc
repnz
orb
scas
outsl
push
jno
push
push
icebp
outsb
sub
jecxz
sub
adc
clc
mov
push
das
add
jp
or
lock
adc
dec
cltd
inc
mov
imul
push
int3
lea
push
add
loop
cmp
out
aam
jmp
clc
ja
lea
add
lret
subl
xchg
gs
jno
xchg
and
lcall
ficoms
repz
pop
mov
stc
aaa
jbe
cmp
out
testb
jns
repz
arpl
dec
fs
aam
jp
or
adc
inc
int3
xchg
cmp
mov
lea
in
mov
sub
cmpsb
cmpsl
cli
test
dec
movb
pushf
test
lea
scas
fistpll
inc
ja,pt
shll
push
sbb
adc
fbstp
subl
pushf
mov
pop
mov
sarb
push
xchg
xchg
jp
jge
fwait
rorb
arpl
movsb
pop
es
mov
loopne
stc
rclb
mov
adc
fistpl
dec
ficoml
mov
sub
mov
test
sti
movsb
mov
jb
test
loop
lock
lret
imul
jb
clc
mov
dec
pop
mov
xor
xor
sbb
adc
xchg
sub
loopne
push
and
sti
fmull
inc
inc
cmp
inc
movmskps
mov
xor
test
xchg
push
das
arpl
and
dec
nop
shrl
pop
cmp
je
or
xlat
lock
sbb
cmp
jb
xor
shll
mov
lods
andb
mov
inc
imul
xor
adc
xchg
jae
bound
rolb
insl
mov
push
mov
in
or
cmc
pop
outsb
cs
fs
push
clc
cmp
das
push
sbb
or
bound
push
jo
je
mov
mov
call
in
out
cli
in
add
sub
xor
decb
and
adc
sub
jl
ret
xchg
or
jno
xchg
mov
cmpl
pop
es
mov
frstor
inc
fs
add
mov
nop
nop
dec
aad
sub
hlt
daa
aaa
aaa
xor
fnstenv
shr
out
and
call
xchg
daa
movsl
push
adc
out
and
ja
dec
out
sahf
popf
inc
jae
xorb
shlb
stos
daa
lea
mov
mov
mov
push
cmp
mov
xor
stos
push
je
sbb
jl
ficomps
pop
inc
xor
addr16
insb
mov
push
push
sub
dec
mov
push
jl
sbb
fwait
pushf
or
cltd
sarl
xchg
outsb
scas
mov
cld
in
cmpsb
mov
fsts
add
loope
inc
nop
cmp
dec
mov
dec
divb
inc
mov
scas
call
pop
xchg
sarl
jecxz
lock
mov
or
pop
jnp
pop
mov
pop
imul
pusha
aaa
xchg
xor
in
shl
fbld
out
push
mov
sub
repz
mov
mov
in
jne,pt
cmp
shll
mov
bound
jge
push
dec
push
and
fimuls
test
and
push
jno
and
ds
jg
push
stos
insb
inc
test
mov
das
lds
or
or
sub
xchg
out
fisubrs
pop
add
jns
div
sbb
mov
loopne
cmp
or
sbb
adc
fcoms
mov
stc
cmp
jbe
add
jne
cli
xorb
pop
mulb
sub
jecxz
out
fsubp
mov
mov
gs
daa
nop
adc
xchg
fidivs
inc
stos
xor
xchg
ret
in
mov
jo
inc
ffreep
push
jmp
lret
movsb
jecxz
mov
mov
cltd
testb
push
subb
sub
cmpsb
sahf
sub
dec
movsl
mov
movsl
jno
mov
adc
pop
dec
test
subb
add
daa
das
pop
test
psubd
movsb
xor
cmpsl
lock
mov
mov
xchg
cli
daa
movsb
sbb
hlt
ret
mov
inc
adc
dec
lahf
in
xchg
aas
or
pop
mov
pop
mov
dec
push
in
daa
jno
pop
out
pop
jns
stos
push
je
adc
xor
pop
orb
lock
or
cld
jmp
shl
lcall
dec
inc
pop
mov
daa
sub
bound
add
aas
fstpt
or
ret
dec
stos
cmp
in
sbb
loopne
mov
cmp
clc
popf
scas
enter
jl
hlt
add
cmpsb
loope
es
push
and
lods
add
pop
lretw
cmp
test
shl
pop
jns
or
pop
hlt
inc
scas
mov
iret
jo
xchg
in
xor
imull
clc
addr16
jecxz
jbe
pop
sub
ret
dec
push
popa
clc
imul
pop
fsubrs
je
leave
nop
test
js
cwtl
fwait
mov
xor
dec
lds
mov
or
test
or
fs
dec
fisubl
sub
mov
call
adc
daa
shrb
stos
sbb
xchg
je
inc
jecxz
imulb
movl
int3
mov
add
push
outsb
pop
outsl
test
inc
cmp
push
cwtl
jae
lea
std
add
adc
jnp
pop
repnz
add
jbe
mov
or
ds
push
gs
add
pop
push
sub
pop
dec
sbb
mov
and
fldt
mov
mov
pop
push
aas
push
in
inc
adc
loope
popf
inc
sbb
adc
and
stos
daa
mov
dec
xor
lret
xor
popa
faddl
sbb
push
in
xchg
jmp
mov
or
jno
insb
mov
cs
xor
int3
inc
inc
push
lock
int
fwait
adc
push
scas
jmp
sub
fstp
sub
inc
push
outsb
loop
mov
mov
clc
fwait
push
lods
jae
jb
dec
clc
out
loope
lock
and
jns
movsb
cld
mul
jl
jp
inc
ljmp
xchg
fldenv
mov
fwait
sbb
outsl
lret
push
cltd
orl
ds
mov
dec
mov
iret
cltd
enter
pop
and
movsb
and
lea
jae
push
jl
dec
aaa
in
adc
out
test
inc
fst
sbb
mov
adc
mov
int
sub
push
adc
push
lods
enter
mov
loopne
loope
in
jecxz
imul
mov
pop
push
pop
cmpsb
mov
sub
sub
test
mov
xor
sbb
mov
inc
mov
xchg
mov
adc
std
repz
int3
push
xchg
pusha
and
jmp
add
mov
in
xor
hlt
sti
lds
outsb
xchg
shlb
out
stos
inc
std
repnz
shll
push
aam
sahf
call
sbb
adc
in
sbb
xor
into
pop
push
in
scas
cmpsl
test
sub
sti
dec
test
mov
iret
or
inc
cmp
call
and
hlt
push
je
xlat
jne
aad
int3
cmpsl
or
ss
imul
xchg
or
or
dec
arpl
fincstp
mov
pop
call
lods
dec
xor
mov
cmpsl
sbb
mov
add
inc
outsl
lret
sahf
jp
out
xchg
movb
inc
adc
jae
rolb
pop
xchg
xchg
adc
aad
test
sti
and
outsl
push
xchg
out
push
subl
mov
int3
ja
imul
movsl
mov
mov
sbb
aas
jo
inc
inc
dec
jbe
push
xchg
mov
cld
mull
ret
pop
mov
mov
bound
int
cwtl
or
add
fidivrs
add
and
push
fstps
sub
test
fstps
inc
or
fs
push
jne
ss
into
mov
mov
sti
je
lret
pop
adc
cld
daa
test
dec
arpl
jae
jne
es
add
test
inc
mov
mov
mov
cmp
pop
pcmpgtd
cs
and
outsb
nop
xchg
loope
sbb
aad
xchg
xchg
out
sbb
xor
or
lcall
jmp
clc
cmp
dec
rcrb
and
or
scas
das
divl
mov
mov
cmp
lret
xchg
push
popaw
adc
xor
dec
pop
iret
test
inc
mov
xchg
pusha
add
mov
mov
lods
mov
ljmp
ds
xor
hlt
roll
push
jno
mov
arpl
dec
data16
faddp
xor
add
xchg
scas
mov
and
je
mov
cmp
xchg
jae
sti
push
nop
add
lods
cmp
ficoms
data16
jns
inc
clc
pop
jg
adc
ja
iret
cld
fldenv
movsl
stos
repnz
stc
lods
imul
sub
cmpsb
push
pop
outsb
push
cmp
jg
shrl
sahf
jmp
jmp
and
loop
push
pop
mov
es
mov
push
cmpsl
sar
cld
pop
jl
shll
sub
fisubs
stc
in
out
xchg
sbb
ljmp
mov
iret
movsb
cltd
imul
add
clc
out
fcomip
jbe
in
mov
jb
rorb
mov
popa
lret
cmp
test
push
mov
insl
ret
sub
jne
out
lahf
into
pop
in
mov
retw
hlt
mov
sub
cmp
ffreep
cs
fldl
lock
cltd
out
fdivs
iret
loope
sub
js
adcl
jg
lods
loope
rcl
adcl
imul
xor
aam
je
addr16
mov
ret
insl
fwait
jp
xor
inc
int3
jge
cmp
jl
or
hlt
mov
lcall
cmp
push
add
jge
inc
aam
pop
push
es
sarb
pop
cmp
aas
cmpl
push
xor
mov
popf
les
push
das
pop
out
push
daa
std
mov
lret
xchg
fstps
outsl
and
add
mov
ret
xchg
sti
cs
jns
cmp
inc
jnp
int
lret
testl
int3
stc
js
add
or
xchg
push
cli
scas
call
sbb
push
mov
ja
cmp
xchg
add
and
sahf
shr
mov
in
data16
sti
cmpl
out
xor
hlt
roll
loopne
cltd
sub
mov
inc
adc
scas
xchg
pop
arpl
and
fsubrs
call
jecxz
decl
mov
or
sbb
arpl
or
fcomps
popa
sarb
mov
pushf
in
xlat
stos
mov
mov
or
dec
repz
mov
dec
in
aam
xor
adc
jmp
mov
jne
or
in
mov
and
xchg
sub
ficompl
and
pop
or
test
mov
stos
inc
adc
jge
les
and
fistpl
adc
sub
out
out
loopne
xor
mov
jge
dec
sbbl
and
jmp
fsubrp
insb
aad
fcomip
jg
insl
cmpsl
pop
and
daa
sarl
cli
dec
test
mov
cmp
test
mov
adc
loopne
iret
sbbb
mov
sbb
xlat
outsl
out
stos
cs
imul
sti
jno
adc
xchg
xchg
imul
repnz
lahf
pop
adc
out
pop
sbb
clc
mov
adc
scas
leave
mov
sub
ss
dec
imul
lds
push
scas
shlb
mov
cmpsb
or
sti
and
jo
dec
mov
push
cmp
in
mov
fstpl
pushf
push
mov
adc
out
stc
lcall
lods
push
cmc
repz
andl
and
cltd
clc
add
imulb
or
es
imul
aaa
fldl
scas
lods
cmp
les
repz
inc
mov
jb
inc
or
aad
cmp
mov
add
dec
add
mov
aas
aas
inc
cld
imul
sbb
insb
inc
mov
mov
dec
fwait
lahf
xor
aaa
adc
push
movsb
mov
lods
ret
ret
add
dec
jne
cmp
dec
inc
sub
dec
mov
add
mov
call
shrb
jg
sbb
jae
mov
and
mov
mov
loope
ret
clc
mov
addb
es
jg
lret
sbb
or
test
sbb
or
cs
cld
sar
mov
outsb
jl
mov
scas
xchg
cmp
mov
lds
cmp
in
cmpsb
es
cli
jp
jmp
mov
mov
mov
les
decl
std
mov
jge
out
int
popa
xlat
cmp
adc
or
bound
mov
out
mov
inc
push
add
mov
and
cmp
push
add
cld
xchg
jb
test
test
pop
cmp
fcmovnbe
jmp
dec
decl
sar
and
enter
push
lret
dec
mov
out
mov
push
add
push
push
add
out
push
scas
jne
stos
iret
lods
add
adc
fidivl
dec
pop
xor
test
pushl
out
scas
clc
iret
test
inc
dec
add
rolb
push
in
andb
lods
adc
mov
sub
sbb
push
loop
xchg
pop
cltd
push
add
mov
ds
roll
add
sbb
and
sbb
xor
inc
movsl
xchg
jo
mov
movsl
adc
loopne
mov
xchg
sbb
iret
shlb
int3
push
adc
loopne
sub
inc
cmp
mov
push
test
dec
rorl
mov
rclb
call
mov
jae
cwtl
inc
das
mov
int
scas
int
into
lock
add
std
out
test
movsw
push
lods
add
adc
pop
in
mov
push
jb
insb
gs
ret
or
jmp
cmc
xchg
xor
ja
push
or
ja
sbb
ret
mov
mov
cmp
cmpsl
or
jns
paddq
out
leave
add
frstor
adc
lahf
push
sbb
sahf
sbb
inc
add
mov
test
enter
outsl
sub
jmp
lcall
xchg
daa
nop
mov
sarl
cwtl
lock
jmp
movsl
fistl
adc
cmp
arpl
ljmpw
shlb
dec
in
movsl
sbb
and
popf
push
cmp
xor
or
mov
dec
sbb
add
shll
negb
stos
push
push
push
jge
push
test
inc
lret
cmpb
in
xor
test
testl
aaa
mov
and
and
and
test
cld
out
aad
stos
rorl
rorl
ficompl
push
adc
and
dec
cmp
test
xchg
cmpsb
leave
or
sbb
inc
incl
in
pop
xchg
push
adc
push
inc
add
mov
mov
dec
fildll
pushf
mov
movsb
push
nop
movsb
cmp
pop
mov
xchg
nop
pop
and
int3
fs
mov
into
inc
xchg
scas
jo
arpl
cmp
pop
std
jp
call
pop
data16
lods
cmpsl
ljmp
sub
xchg
adc
outsl
mov
cltd
push
push
insb
out
mov
test
loopne
push
outsb
push
adc
mov
lea
fiaddl
add
mov
mov
pop
add
adc
lret
inc
pop
aaa
outsb
hlt
lods
xor
and
cmp
push
dec
sub
adc
inc
cmp
inc
ds
lods
mov
in
xchg
stc
mov
daa
xchg
xor
mov
pushf
scas
popf
jb
ljmp
je
inc
lock
stos
pop
hlt
test
inc
lea
pop
cmp
into
call
test
test
fadd
fsub
mov
fdiv
cmp
cld
addr16
cmp
or
test
test
lret
insl
dec
rcll
lcall
sub
enter
xchg
test
inc
xchg
add
repnz
sbb
cmp
and
cmpsb
repnz
push
push
cmp
sub
addr16
icebp
jne
loope
inc
push
add
jl
aaa
mov
decl
sub
shl
or
dec
data16
mov
loopne
cmp
push
pop
adc
jg
scas
push
and
push
shr
push
scas
xchg
pushf
sub
xlat
push
icebp
xchg
lea
xchg
loope
sarl
ds
rcll
pushl
jg
cmpb
lods
push
in
adc
ds
loop
jno
sub
and
iret
rdmsr
out
ljmp
rolb
xchg
mov
ljmp
dec
pop
and
sub
sub
cli
fistpll
pop
in
pop
lret
mov
neg
ljmp
fabs
jo
or
aas
jge
test
pop
mov
add
xchg
xor
aad
inc
pop
in
cmp
out
cltd
inc
daa
jbe
loopne
in
clc
hlt
inc
aaa
fstpl
sub
xchg
mov
or
jmp
add
fs
out
rorb
and
cmpsl
or
fcompl
add
sub
jnp
dec
loopne
out
aaa
outsb
pushf
adc
inc
mov
sbb
imul
rol
je
dec
lahf
lret
push
inc
arpl
repz
fisttps
xchg
and
push
bsf
or
movsl
test
xchg
xchg
jnp
insb
pop
cmp
jl
ss
scas
fsubl
ret
loope
mov
sbb
pop
subb
or
movb
xchg
pop
jp
jge
and
out
or
cli
orl
repz
cmp
sti
lahf
movsl
je
mov
adc
clc
mov
call
stos
mov
push
xlat
jnp
pushf
add
shl
xlat
sub
cmp
les
pop
cmp
stos
das
adc
imul
sbb
or
int3
loop
punpckhbw
fsts
stos
sub
fsub
inc
xlat
jecxz
int
hlt
hlt
pop
dec
jno
jae
cmp
add
dec
and
xchg
xor
aas
jmp
cwtl
cs
mov
dec
push
pop
mov
jo
sub
or
cwtl
enter
cmp
xchg
push
les
push
xorl
add
sbb
fxtract
loopne
sub
aad
std
xor
lods
jno
jae
pop
and
in
out
lods
or
test
cmp
mov
aas
call
cmpsb
js
jnp
jno
ja
je
mov
test
xchg
mov
inc
test
in
ss
pop
adc
insl
fldt
adc
sti
out
dec
fsubrl
pop
jmp
xor
mov
push
xchg
clc
push
mov
mov
jae
js
xor
dec
pop
adc
jmp
icebp
dec
cltd
shrb
cmpsl
and
loope
hlt
lock
sbb
mov
push
cmp
sub
in
std
jns
jne
cmp
in
ret
aam
sbb
push
cmc
adcl
inc
sub
xchg
add
shlb
jge
pop
imul
icebp
push
dec
dec
dec
movsb
push
je
outsb
add
push
movsl
mov
insb
ret
pop
lock
insl
cmp
or
lcall
insl
filds
xlat
fsub
arpl
push
stc
arpl
pop
cmp
cmp
stos
and
mov
scas
dec
add
bound
lret
inc
pop
iret
jmp
ret
stos
adc
out
push
fisubrl
xchg
les
push
xchg
repz
mov
sbb
movsl
loope
cmpsb
mull
pop
outsb
scas
dec
jnp
sbb
rcrb
mov
add
loope
fs
data16
mov
scas
adc
int3
outsb
push
dec
inc
fmull
xrelease
stc
out
xor
sti
jecxz
stos
xchg
jge
shlb
add
in
and
adc
pop
dec
xor
das
xchg
adc
xchg
into
or
inc
in
mov
pop
addr16
lcall
ficompl
cmp
push
scas
out
shrb
lock
pop
and
int
insb
notl
aas
fwait
dec
and
adcl
inc
imul
scas
mov
js
mov
fdecstp
clc
sub
into
bound
sarb
gs
clc
sub
out
jg
scas
push
add
jge
jns
aad
imul
mov
rorb
fsubrs
dec
aam
popa
mov
cltd
xor
mov
je
movsl
fldenv
cmpsl
ja
pop
add
ja
mov
popa
loop
rorl
add
adc
pop
pop
sub
xor
enter
bound
mov
cs
or
adc
add
jne
jb
int
xor
fdivs
popf
mov
inc
jmp
dec
inc
push
iret
xor
xchg
fs
lods
outsl
cmp
rolb
loop
sub
test
xor
mov
sub
shl
cltd
mov
test
lret
push
sub
scas
mov
push
jae
inc
mov
mov
inc
lret
rolb
fildll
mov
dec
aas
push
sarb
push
rol
insl
dec
xchg
pusha
insb
sub
push
xlat
xchg
mov
adc
es
subb
addr16
sub
data16
int
dec
fdivl
es
add
dec
stos
pop
lock
in
lret
lret
pusha
adc
jp
xchg
adc
inc
ja
fcmovb
iret
mov
xor
xor
sti
cmp
sub
xchg
sbb
je
movsl
jbe
repnz
aaa
negb
aas
and
mov
adc
xor
clc
iret
daa
test
inc
dec
sti
stos
cwtl
pop
sub
sar
fs
fstpl
or
cltd
into
mov
jg
adc
push
sbbl
icebp
pop
push
or
mov
pop
add
mov
xor
adc
cmp
icebp
push
jno
dec
jmp
pop
mov
insb
and
fstpt
xchg
into
jle
repz
sub
stos
mov
push
sbb
repz
inc
sub
es
lret
les
hlt
adc
jbe
push
pop
sar
ret
repnz
lcall
fwait
add
jbe
push
or
cwtl
adc
inc
bound
xor
aaa
sbb
cli
cmp
sti
mov
into
mov
xor
xchg
xchg
mov
es
jmp
push
xchg
mov
imul
fsubrp
pop
dec
lods
mov
add
stos
roll
ror
lea
pusha
inc
lea
mov
adc
rcrl
in
mov
jae
iret
xor
cltd
xchg
int3
mov
scas
mov
pop
movsl
fcompl
in
or
or
xchg
push
inc
add
scas
sub
sub
sub
push
lds
push
dec
in
and
cli
out
cli
mov
mov
push
fs
cwtl
sbb
mov
cmp
pop
repnz
push
nop
das
dec
mov
and
dec
xchg
inc
push
scas
add
in
mov
cs
or
jle
push
xor
repnz
or
sub
inc
in
das
push
adc
pop
xchg
sbb
test
jg
jge
jecxz
pop
ja
add
lea
dec
cli
fisubrs
jmp
pop
and
ljmp
subb
sub
pop
sub
iret
test
insl
mov
sbb
pop
arpl
jle
cmpsl
out
aad
adc
sub
xor
jbe
out
loope
xor
and
and
lret
mov
repz
dec
das
xchg
cwtl
or
dec
repz
popa
loop
sarb
sub
test
out
cmp
dec
xor
pop
push
push
cmp
cmp
out
sub
fbstp
arpl
flds
jmp
xchg
inc
sbb
shrl
into
jbe
imul
sbb
test
repz
pop
loope
pop
inc
fwait
orl
jge
mov
imul
mov
mov
pusha
ss
ja
xor
xor
mov
cwtl
mov
fidivs
outsb
cltd
mov
push
orl
cs
xor
inc
mulb
and
rcr
add
inc
adc
mov
mov
int
pop
push
jbe
adc
adc
mov
rcrl
xor
outsl
test
pop
je
fiaddl
jbe
jno
mov
fs
xchg
sbb
jp
and
movd
sarl
les
ficoml
aad
fdivrl
cltd
jae
sbb
push
push
inc
lods
repnz
fs
ja
cwtl
lods
jo
hlt
ljmp
data16
es
inc
lds
repz
adc
enter
push
pop
clc
inc
push
dec
or
mov
inc
cmc
shrl
sbb
lds
inc
dec
adc
stc
xor
data16
jbe
xchg
mov
jl
loopne
add
lds
mov
pop
sbb
xchg
mov
inc
xor
cmp
cltd
lea
adc
xor
sahf
repz
mov
sub
orl
in
add
pop
sarb
loope
shl
sbb
jecxz
test
xor
mov
sub
push
js
jmp
add
push
cmp
cmp
stos
dec
inc
xlat
jo
aad
lds
pop
std
rcrb
xchg
ss
dec
mov
jbe
xchg
sbb
or
hlt
pop
push
cmp
and
mov
js
aas
mov
jp
mov
xchg
fcmovu
dec
fcoml
idivl
push
jb
ljmp
aad
imul
sub
ss
popf
xor
push
pushf
fmul
lret
mov
xchg
aam
ret
sub
arpl
in
nop
mov
test
mov
inc
xchg
add
gs
dec
out
sub
mov
inc
xchg
nop
mov
xlat
cmp
ret
cltd
adc
sbb
xchg
or
stc
in
cmp
cmp
insl
push
push
cmc
sub
mov
mov
push
lea
into
mov
mov
clc
xchg
outsb
pushf
and
pop
test
std
dec
int3
repz
ffree
or
daa
ljmp
push
bound
add
lret
mov
movsl
test
out
int3
mov
jl
jae
dec
fcoms
fsubp
mov
nop
mov
mov
pop
sbb
adc
andps
sar
add
mov
xlat
stc
pop
ficoml
mov
sub
pop
cmp
adc
je
and
std
addl
stos
roll
test
ja
jo
xchg
adc
push
fsts
popl
mov
dec
sbb
cltd
pop
in
xor
and
jno
addr16
shrl
inc
xchg
inc
fisttps
rcl
inc
mov
sbb
cmp
mov
push
dec
dec
xor
and
sbb
mov
pop
in
adc
mov
pop
iret
add
stc
pop
out
in
mov
or
lret
add
mov
flds
popf
rorl
arpl
faddl
sub
push
adc
dec
js
adc
jae,pn
mov
mov
cmpsb
hlt
xor
mov
ja
add
sbb
subb
push
sahf
mov
inc
cmpsb
ja
sahf
cs
fstps
int
inc
psllw
outsb
fadd
mov
testb
test
cs
xor
dec
call
xor
adc
mov
imul
hlt
sub
mov
je
adc
pop
inc
cld
push
lahf
dec
popf
arpl
scas
lahf
lods
js
sbb
shlb
fimuls
jnp
mov
addb
pop
lret
xchg
popa
sbb
test
aas
jo
mov
pushf
mov
xchg
popa
in
xchg
cmp
adc
hlt
lcall
and
pop
outsl
push
iret
pop
pop
js
or
sub
sub
mov
dec
cmp
out
insl
out
scas
sub
inc
dec
sub
or
mov
rcrb
sbb
mov
aam
pop
xor
xor
pop
sbbb
stos
jbe
or
loop
adc
addb
xor
fnstenv
outsl
clc
inc
xchg
mov
ja
xchg
mov
aaa
sub
stos
mov
mov
sbb
pop
mov
gs
cld
inc
xchg
data16
ljmp
sbb
test
iret
inc
mov
xchg
repz
hlt
and
ret
rcrl
out
push
or
dec
stos
popa
testl
ds
fisubl
dec
cmp
push
dec
in
lock
mov
adc
shr
push
or
xor
add
inc
test
idivl
and
inc
lock
mov
bound
xchg
cwtl
lahf
or
mov
xlat
pushf
inc
cltd
loopne
adc
nop
xchg
outsl
lahf
dec
ret
dec
xchg
jo
leave
sub
pop
sub
or
cmc
jbe
xlat
nop
jb
jns
sbb
xchg
sub
xchg
cmp
pop
aad
sub
test
pop
repz
lcall
cmp
jp
jg
mov
in
cwtl
inc
and
js
outsl
arpl
and
aam
push
push
mov
mov
in
rcrb
or
scas
xor
fcomp
jecxz
pop
sbb
xor
and
fnstsw
aam
sub
cld
das
stc
pusha
pop
cmp
mov
add
dec
lcall
subl
push
pop
shrb
lcall
push
aad
ret
testl
push
jecxz
sti
adc
mov
pop
bound
xor
add
add
lret
dec
loope
fdivrl
std
fdivrl
fistpll
or
fbld
test
rorb
inc
movsl
imul
inc
out
scas
idivl
clc
movsb
pop
sub
pop
data16
and
sti
loop
mov
inc
push
out
push
pop
mov
cmp
and
lahf
ficoml
mov
mov
imul
xchg
outsl
mov
push
fldt
rcrb
cmp
popf
lock
mov
jecxz
cld
or
rcl
mov
not
mov
cs
ljmp
aam
in
cmpsb
jno
xor
jae
push
loopne
cmp
loop
lea
mov
outsb
enter
xor
mov
pop
adcl
fidivl
lahf
pop
jb
daa
push
mov
pop
lahf
mov
mov
fists
das
and
jle
jl
out
aam
fdivs
sbb
pop
sub
xchg
inc
jbe
pop
and
jae
lret
scas
dec
in
pop
inc
ds
scas
movsl
and
cmpsl
cs
mov
sbb
pop
sub
in
sub
cmc
call
adc
ret
sbb
cmpl
sbb
mov
add
shlb
int
xor
push
cmp
sbb
pop
outsb
out
test
data16
dec
mov
mov
stos
xor
cmp
fwait
loopne
pop
mov
mov
push
inc
mull
cltd
push
and
adc
idiv
inc
lock
push
lock
cmp
cmc
jae
and
ds
jo
lret
les
push
rcr
lahf
nop
pop
mov
xchg
jns
in
jge
out
jg
mov
mov
and
cwtl
mov
jle
enter
fwait
sbb
ljmp
cli
gs
je
int
adc
sub
mov
sub
jg
pop
sahf
jle
sbb
push
stos
mov
cmpsl
sbb
push
lret
inc
inc
add
xorl
and
and
sub
lret
rcrl
cmp
into
pop
dec
or
insb
ffree
pop
and
jae
in
cmp
dec
fdivrs
neg
pop
icebp
xor
scas
pop
fimull
fdivrs
test
add
mov
sub
push
xchg
fdivl
adc
pop
stos
repnz
lea
mov
subl
push
jb
jb
loop
mov
sub
outsl
pop
nopl
pop
and
shl
mov
adc
xchg
fisttpl
cmp
push
xor
or
scas
pop
rorb
mov
mov
bound
jge
sbb
stos
dec
sub
push
push
std
into
mov
inc
fadds
cwtl
mov
or
mov
add
push
sbb
jge
dec
xlat
and
sub
sbb
pop
cmp
dec
daa
in
test
adc
push
jecxz
hlt
ljmp
popa
test
roll
mov
xchg
ljmp
nop
sbb
sahf
pop
addl
lcall
dec
sub
es
push
adc
mov
aam
xchg
insl
cmp
cmp
rol
push
mov
add
jno
cmp
mov
push
cmp
xor
sub
pop
ja
mov
sahf
dec
fadds
imul
icebp
sbb
push
mov
mov
mov
in
sbb
mov
jb
lods
mov
mov
fsubrs
pop
pop
mov
sub
sahf
mov
or
fwait
mov
xchg
stos
out
insl
xlat
cmp
cli
movlps
push
push
jl
pop
mov
xchg
xor
jl
cwtl
das
jo
in
leave
ja
jno
test
ret
pop
cmpsl
inc
push
jle
mov
or
xor
push
sbb
jne
hlt
rolb
xchg
xchg
jbe
ds
jp
dec
mov
pop
mov
mov
dec
icebp
divb
xchg
das
jg
mov
or
jbe
scas
pop
adc
orl
repz
movsb
mov
aas
mov
inc
jge
push
push
mov
or
pop
cld
mov
adc
sub
stos
pop
xor
jbe
mov
and
dec
cmpsb
dec
seto
or
sbb
into
pop
mov
pop
sahf
loop
sub
inc
sub
pop
mov
or
pop
daa
xor
push
repnz
mov
and
sbb
push
jo
jp
ret
cli
js
cmp
arpl
loopne
stos
jne
sub
inc
call
pusha
nop
mov
inc
sub
out
and
push
test
fisubrl
inc
jbe
sub
mov
bound
out
sub
pop
adc
pushf
ret
push
jmp
aam
xchg
xor
push
hlt
lret
cmc
test
xchg
lock
cwtl
mov
fmul
mov
pop
xchg
and
jl
add
insl
push
cltd
insb
cld
jns
outsl
arpl
gs
hlt
setge
aam
fildl
out
iret
adc
inc
lret
outsl
jecxz
lds
cmp
scas
stc
adc
mov
or
lret
mov
sbb
and
lret
push
and
lahf
into
xchg
imul
mov
jne
push
push
fdivr
and
or
pop
std
cld
fwait
xchg
repz
adc
mov
push
imul
test
in
cli
lds
fisttpll
scas
mov
add
xchg
pusha
pushf
test
push
icebp
js
cli
stos
push
iret
mov
rorb
mov
lods
xor
mov
fnstsw
xchg
cs
and
rolb
sbb
int3
dec
cmp
gs
adc
popf
ljmp
sbb
fbstp
les
lea
repnz
sub
dec
repz
sub
xchg
mov
cwtl
stc
xchg
je
addr16
cmp
fnstcw
daa
lret
fdivr
dec
insl
mov
dec
xchg
sbb
sahf
inc
lahf
adc
sbb
and
push
je
les
repnz
mov
out
stos
ret
sub
outsl
cmp
call
dec
inc
das
sbb
sbb
out
imul
sbb
into
std
cmp
cmp
movsl
sub
mov
scas
into
cmp
lahf
inc
cmpsl
mov
xchg
mov
cmpsl
and
je
add
cmp
sub
not
enter
xchg
push
mov
push
mov
arpl
sbb
std
lods
xor
add
inc
push
enter
cli
ss
inc
jp
mov
inc
rcll
or
or
jo
cmpsb
lret
pusha
add
jae
pop
popf
sbb
in
popf
adc
sub
int
push
pop
jecxz
insl
mov
mov
sub
aad
cli
jg
adc
addl
jne
cmp
fbstp
int
fstpl
aas
or
out
ret
sti
ds
imul
nop
jp
sarl
lcall
aad
inc
repz
shlb
sbb
dec
std
int
insb
xor
sub
out
outsb
and
xor
movb
pop
mov
fsts
test
sar
cmc
inc
repz
pop
cs
jb
xlat
lret
stos
inc
jecxz
aas
loopne
push
nop
cmp
clc
cli
out
hlt
cmpsl
or
pop
gs
out
cmp
in
mov
push
nop
jl
jns
dec
jmp
add
in
out
pop
ds
loope
loopne
adc
mov
paddb
xor
mov
xchg
iret
add
add
inc
and
scas
push
pop
sbb
mov
sbb
jbe
or
lsl
sahf
addr16
adc
mov
addl
sbb
xchg
subb
push
pop
fsubl
jo
mov
inc
addr16
mov
adc
pop
mull
ret
ds
xchg
iret
pop
in
int3
notb
xor
lock
imul
ret
mov
mov
xchg
and
call
test
mov
mov
and
pop
lods
stc
stos
repnz
cmpsl
stos
push
roll
popf
or
aas
out
push
popa
dec
lods
add
xorb
mov
mov
xchg
add
sti
or
cmp
xor
xlat
test
wrmsr
jmp
xchg
xor
push
add
push
mov
clc
pop
icebp
dec
push
icebp
mov
leave
inc
push
iret
dec
inc
xchg
sbb
into
sahf
pop
sub
insb
pop
and
cmp
mov
xor
icebp
inc
stos
mov
xlat
and
sbb
out
test
push
out
and
xorl
sub
xchg
cmpsl
jl
xchg
push
jns
jbe
pop
shrb
enter
bound
xchg
in
inc
adc
mov
lahf
mov
sub
mov
ds
mov
fcoml
push
push
fs
adc
aad
outsl
sbb
add
leave
mov
push
sysret
movsb
mov
inc
in
mov
dec
add
xchg
inc
stos
jae
and
imul
jns
hlt
mov
mov
nop
test
enter
push
adc
pusha
inc
add
mov
dec
pop
test
scas
jb
lahf
xchg
ror
in
xchg
leave
call
add
pop
mov
pusha
insl
cmpsl
adc
pop
and
clc
mov
lea
test
loop
cmpsb
inc
mov
out
movsb
inc
cmp
cmp
lds
insb
fstp
sub
jae
jnp
jnp
mov
push
push
rcll
stc
cmpsb
add
mov
sbb
pop
cmp
push
dec
inc
lods
rorl
mov
cld
jae
inc
mov
out
ja
mov
cmp
pop
sbb
ret
ss
repz
cmpsb
inc
lcall
hlt
icebp
sahf
inc
in
mov
std
sub
fsubp
pop
fists
or
imul
cwtl
call
xor
inc
or
or
jle
sbb
jecxz
out
sbb
bswap
dec
ret
cltd
shr
xchg
call
sub
xchg
aaa
mov
xchg
sbb
pop
fistpl
fs
or
cmp
or
insb
push
xchg
sahf
je
xor
and
imul
xchg
ret
push
adc
sub
rcll
jecxz
push
outsl
stos
and
xor
dec
mov
fldt
sub
sbb
test
push
dec
leave
incl
fisttps
jge
lods
sub
and
adc
cmpsb
fbld
roll
cmp
add
addl
push
push
cmp
leave
inc
in
fstp
repz
pop
sti
add
mov
jp
mov
dec
mov
cmp
pop
add
lea
fs
insl
mov
adc
fstp
sbb
fimull
inc
push
stos
mov
shrb
call
mov
ljmp
aad
pop
int
push
jge
mov
rcrl
mov
sahf
mov
pop
mov
outsl
cmp
jg
jl
sar
adc
rol
fs
fcompl
ja
scas
pop
out
xorb
sub
cmp
push
cmpb
rclb
out
xchg
add
mov
test
loop
jmp
inc
jae
mov
fnstenv
xchg
adcl
jl
fbstp
sbb
arpl
xor
gs
pop
lea
aam
jb
cmp
lock
clc
xchg
jmp
orb
repz
inc
push
mov
sub
pop
loope
or
mov
popa
mov
dec
push
sub
add
sahf
xchg
popa
aam
pop
ret
add
pop
out
arpl
push
addr16
sbb
insl
mov
mov
sub
test
sub
xchg
mov
or
lock
jns
cs
lea
jmp
in
sar
cmpsl
pop
mov
mov
sub
test
popf
ficoms
mov
cmp
ljmp
imul
pop
outsb
cli
mov
pop
or
adc
inc
cmpsb
fs
dec
jb
mov
xchg
movb
sub
shr
adc
or
and
xor
push
fdivrp
lret
add
xchg
rclb
enter
outsl
jle
mov
mov
js
pop
rcrb
dec
test
inc
incl
mov
mov
mov
lret
push
sub
xchg
pop
pop
mov
daa
je
xor
cmp
xor
sub
mov
push
pushf
push
add
aam
hlt
jl
subps
sti
jbe
outsb
mov
lsl
xor
cmp
pop
adc
add
in
sbb
add
jmp
out
gs
loope
ss
daa
adc
dec
cs
bound
jno
and
aaa
fstpt
cmc
pop
adc
fmuls
out
rcl
xchg
aaa
add
les
mov
pop
out
pop
dec
mov
mov
shll
leave
test
pushf
in
pop
dec
test
arpl
je
outsb
loopne
xchg
lret
addr16
jecxz
add
add
mov
add
arpl
dec
sub
into
pusha
cmp
popa
cs
aam
int
repnz
leave
pop
sahf
int3
cltd
push
sub
scas
add
xchg
dec
xor
repnz
mov
and
mov
rcrl
xorl
or
fldt
aas
jge
and
jno
xchg
loop
repz
pop
fxam
in
loope
sub
xor
imul
add
lods
nop
inc
cld
aad
sub
out
out
fwait
and
push
punpcklbw
sahf
cmp
testb
dec
push
pop
mov
pushf
xchg
insl
xor
ljmp
cmc
jp
xchg
int
clc
test
mov
or
ja
push
sub
and
mov
jbe
pop
mov
push
imul
lds
jne
cvtps2pi
jo
jbe
pop
mov
push
and
xchg
mov
mov
mov
adc
push
iret
pop
sarb
enter
cmc
stc
pop
pop
ficoml
sub
int
scas
mov
and
xor
loop
aam
outsl
stos
cli
icebp
sti
push
fistps
mov
pusha
mov
lods
push
inc
ret
add
out
sbb
sub
stc
mov
inc
subl
sbb
mov
or
mov
xchg
cltd
lahf
adc
push
mov
and
jnp
mov
push
cltd
mov
ss
mov
add
sarb
into
cmpsl
lods
ja
xchg
xchg
jl
mov
insb
jmp
sahf
xor
mov
or
add
ja
jae
int
dec
xor
scas
push
xchg
lods
add
lock
pop
and
dec
pop
dec
stos
fstpl
xchg
ret
rcll
xchg
jae
xchg
adc
insb
ret
sbb
xchg
in
rcrb
mov
lea
adc
dec
mov
mov
fwait
inc
push
mov
adc
xor
or
ja
ljmp
sahf
out
sahf
bswap
std
iret
and
adc
mov
rorb
mov
lock
add
sarl
inc
pop
xchg
mov
lea
lcall
jl
dec
push
cltd
ja
add
add
mov
loope
movd
imul
adc
fdiv
pmaxub
add
cltd
jno
mov
jnp
addr16
into
stos
test
add
jg
lahf
ljmp
popf
sbb
xorb
test
xchg
cmp
sub
stos
iret
ret
add
mov
cmp
jne
push
gs
mov
push
aad
cmp
mov
adc
jne
lea
inc
mov
inc
inc
fcompl
mov
xlat
mov
decl
mov
aaa
rolb
xor
mov
prefetcht1
fwait
pop
push
jle
pop
xchg
insb
adc
aad
test
fsubs
sbb
mov
mov
mov
mov
pop
cmp
push
and
cmp
sarl
mov
dec
mov
push
sahf
mov
cld
jbe
ficomps
inc
sub
stos
pop
inc
inc
adc
cli
jl
pop
imul
mov
pop
push
lods
outsb
ja
je
cmpsl
adc
cmp
call
in
sbb
xchg
arpl
xchg
outsb
cltd
xchg
inc
bound
mov
mov
aas
push
xor
xchg
lds
mov
addb
jae
ja
fidivs
iret
sub
ljmp
data16
jne
dec
and
test
fwait
es
mov
and
loope
pop
jb
pmaxub
lds
sub
ljmp
loope
mov
test
aas
out
xor
stos
aaa
cld
cmc
out
pop
sub
mov
cwtl
jle
push
hlt
mov
mov
dec
xlat
cmp
jge
insb
aad
inc
jns
stos
incl
repnz
xchg
daa
gs
shrb
mov
out
fsubrl
sarl
inc
xchg
push
or
leave
cmp
in
mov
addr16
adc
xor
scas
pop
cltd
inc
xor
sbb
or
or
leave
mov
and
addb
push
in
pushl
pop
xchg
shlb
int
mov
icebp
sti
xlat
pop
mov
push
ja
mov
inc
xlat
je
sub
imul
inc
mov
pusha
sbb
imul
mov
sbb
mov
xor
lret
lods
stos
or
adc
inc
sub
or
in
add
ds
ficomps
mov
add
out
lea
movsbl
pop
sub
add
jecxz
sub
fs
loope
cmpl
loop
mov
xchg
adc
sbb
rclb
fiaddl
mov
in
dec
fadds
scas
fbld
jp
imul
pop
dec
push
push
inc
or
xor
jae
subb
sbb
and
dec
movsl
mov
lods
hlt
mov
push
fs
fisubrl
rolb
inc
call
dec
mov
push
jbe
cmp
sub
lock
push
sub
aad
je
cli
adc
shlb
in
in
and
or
inc
ljmp
outsl
add
cmpsl
pusha
fildll
cmc
xorl
mov
ja
xchg
imul
out
call
addr16
popf
imul
mov
shl
jp
add
addb
adc
sub
lods
jne
lahf
and
mov
add
outsb
adc
push
xor
in
mov
int3
mov
call
cmc
loopne
jecxz
mov
nop
inc
imul
and
aad
add
inc
add
cmp
fbstp
scas
jp
or
mov
stos
aam
mov
out
test
icebp
jne
addl
sub
fs
push
jle,pt
jnp
xor
mov
lahf
cmpsl
sahf
pop
inc
nop
pop
lahf
cmpsb
cmp
pop
iret
loop
loop
test
add
xchg
sbb
js
inc
mov
cli
xor
bound
movsb
iret
jg
cmpsl
add
sbb
mov
mov
cltd
inc
cmpsl
shlb
dec
adc
lcall
sbbl
insb
loope
mov
imull
lahf
mov
icebp
data16
fwait
scas
popf
aaa
lea
shl
fisttpll
mov
dec
loope
mov
push
pop
fs
sahf
cmpl
push
cmp
inc
lcall
mov
test
je
loopne
cmpsl
cld
jmp
xor
mov
or
rorl
jge
mov
mov
ret
xchg
lods
add
adc
lods
push
sub
shll
sbb
add
jmp
cmp
loopne
adc
mov
sub
aaa
clc
or
sahf
xchg
sub
push
mov
arpl
xor
xchg
imul
xchg
fstps
xchg
inc
movsb
inc
sub
and
mov
nop
cmpsl
sbb
cmpsl
xor
out
in
test
ret
jg
mov
fisttpll
and
loop
jge
adc
imul
in
mov
xchg
mov
add
adc
mov
or
mov
inc
pop
jo
cwtl
dec
adc
sbb
dec
ret
ror
subl
cmc
testb
outsl
adc
repz
and
cli
repz
adc
jmp
mov
lock
ja
fnstenv
inc
pop
fwait
pop
enter
mov
in
leave
arpl
pop
pop
mov
adc
xchg
es
lcall
cmp
inc
pop
inc
sbb
xor
call
fdivs
jp
mov
push
clc
or
fmuls
or
xchg
fsts
xor
divl
pop
pushf
push
aaa
addl
adc
test
repnz
push
aad
sub
or
pop
and
xchg
insb
push
push
addr16
sahf
popf
mov
jbe
test
pop
int
into
mov
add
cmp
out
int3
xor
addr16
inc
xchg
xchg
jle
pop
sub
jp
les
inc
mov
sbb
sbb
call
sbb
pop
add
into
xchg
adc
mov
and
adc
mov
aad
pop
jb
cmc
adc
cmp
andl
push
push
cmp
aaa
mov
dec
cli
and
fstl
lods
lahf
enter
clc
or
stos
shll
jo
xor
push
adc
incl
push
jnp
in
shl
xchg
add
adc
mov
or
js
xchg
push
mov
sbb
add
and
fs
enter
test
shlb
pop
pop
add
adc
sahf
repz
lea
add
lods
xchg
or
mov
mov
popa
mov
int
sub
inc
montmul
cmpsb
add
jne
testl
mov
movsb
rcrl
test
sahf
test
dec
inc
push
add
ss
sub
inc
push
into
ret
inc
xor
push
push
mov
push
cltd
rcrl
stc
xchg
call
mov
aas
dec
inc
jne
cmpsl
dec
mov
jle
notb
loopne
in
mov
cmp
jmp
and
andb
push
andb
mov
test
xchg
xchg
xor
xchg
mov
sbb
jg
mov
inc
jl
ja
addb
mov
icebp
mov
lret
sub
dec
xlat
stc
mov
out
dec
pop
fstl
mov
stos
fmuls
cmp
xor
and
push
mov
aas
xchg
mov
mov
loop
popa
or
mov
cmpsb
pop
xchg
or
mov
out
roll
mov
push
lods
cs
lods
xchg
out
daa
pop
dec
fcomi
lock
ret
mov
movsl
inc
dec
push
xchg
repz
push
mov
fnstsw
mov
sub
and
js
cmpsb
lods
std
or
push
add
enter
jecxz
xchg
cwtl
hlt
sub
xchg
cs
cwtl
xchg
hlt
pop
cmp
inc
fwait
sti
cmpsb
loope
shll
and
sahf
stos
push
sbb
inc
fsubs
jns
mov
and
aas
pop
push
jns
sub
inc
and
sarl
cmpsb
ss
adc
jne
dec
daa
jge
xor
and
rorb
test
movsb
fmul
test
fisubrs
lret
jg
pop
fisubl
pop
push
inc
xchg
jg
xchg
xlat
movl
push
push
cmp
pop
and
sahf
push
xchg
and
scas
xor
adc
push
testb
xchg
push
cmp
adc
push
xor
scas
and
dec
xorl
outsb
and
in
sub
pusha
push
hlt
add
imul
pop
dec
jo
fwait
clc
adc
jecxz
jl
in
in
dec
xor
dec
imul
xchg
jecxz
cmp
subb
xchg
sub
sbb
pop
addl
jp
nop
push
mov
mov
mov
add
push
mov
mov
sbb
sbbb
out
fucomi
pop
and
jle
aad
jbe
std
sub
mov
das
mov
pop
in
pop
ret
pop
push
inc
xchg
stc
pop
scas
pop
pushf
xor
jg
mov
je
movl
push
xchg
pop
test
xor
idiv
sbb
sub
jmp
pop
pop
test
mov
movnti
repnz
inc
inc
call
les
pop
fmulp
sahf
pusha
or
in
js
lock
lds
pop
jne
movsb
adc
and
or
jns
pop
outsb
pop
in
sub
dec
mov
ret
sbb
mov
sbb
and
or
jo
cld
inc
jb
jb
jae
lcall
das
lods
cltd
cmp
jmp
dec
mov
shlb
hlt
push
dec
sub
mov
dec
jg
inc
pop
cmpb
push
dec
lock
push
adc
stos
jno
mov
insl
jae
mov
xor
int
test
testl
clc
add
cmpl
xorl
aad
and
mov
pop
addr16
mov
fdivl
jns
sbb
mov
je
mov
filds
scas
int3
test
or
cmp
das
cwtl
lahf
ljmp
jge
pop
cmp
out
xchg
add
and
sub
dec
repnz
clc
pushf
testl
scas
inc
mov
xchg
xlat
lock
push
sarb
mov
dec
add
test
mov
xor
cmp
mov
inc
mov
cld
pop
cli
push
inc
pop
xchg
inc
addr16
mov
stos
pop
inc
fldl
pop
insb
xorl
icebp
sahf
mov
sti
sahf
out
sbb
jmp
xchg
inc
enter
ja
sbb
xor
clc
mov
mov
mov
push
jge
fcoml
lods
bound
jnp
lcall
outsl
sub
imul
lcall
push
jecxz
fisttpl
les
lock
jmp
jmp
dec
xchg
cmp
adc
pop
inc
sahf
pop
fwait
cmp
xchg
xor
add
mov
mov
and
jae
test
loop
mov
push
out
push
lcall
cltd
pushf
push
pusha
scas
adc
jbe
and
fbstp
mov
mov
cli
push
jg
mov
and
andl
mov
sub
pop
dec
fisubrl
test
and
push
push
mov
or
je
cmp
cmp
in
fdivrl
gs
xor
adc
pop
cmp
les
jne
mov
dec
mov
cmp
lock
push
daa
shlb
icebp
jae
fs
enter
pop
rcll
inc
cmpsb
test
add
ja
lea
out
pop
loop
imul
dec
xchg
dec
mov
mov
scas
shr
fdiv
hlt
inc
pop
int
fwait
or
inc
inc
mov
je
ret
jmp
mov
aad
cld
mov
jno
add
jmp
push
imul
orl
cmp
xchg
call
xor
aad
pop
divb
shr
xor
cmpsb
mov
shll
insb
lods
lods
aas
mov
bsr
mov
mov
add
push
mov
lock
xchg
push
outsb
iret
push
data16
out
xorl
lea
xor
xchg
cs
xor
aad
xor
sbb
sub
shrb
pop
jecxz
sub
mov
cwtl
push
dec
lahf
mov
int3
ja
out
inc
xchg
pop
and
mov
xorb
fcoml
out
enter
int3
xlat
sbb
insl
xor
mov
jecxz
mov
add
pop
repz
mov
mov
xchg
adc
popf
sub
leave
mov
xlat
nop
cmp
pop
gs
insb
xchg
sub
pop
data16
ret
fsubrl
test
xor
xchg
jg
fnsave
xchg
cmp
xor
dec
int3
stos
dec
mov
jle
std
sub
or
cmp
mov
and
fs
rcll
out
ds
xchg
popf
mov
test
andl
mov
loopne
aad
mov
sub
xchg
push
xor
fnstcw
fwait
scas
pop
jp
and
or
lea
push
mov
loop
in
xlat
repz
cmp
cmp
cmpsl
mov
pop
fptan
xchg
push
push
mov
cmpb
call
cwtl
fcomp
mov
sbb
mov
and
outsb
icebp
push
mov
out
aaa
cmp
jg
daa
jle
lret
jmp
sbb
inc
sti
mov
div
push
push
movsb
fistpl
cmp
or
or
ret
xchg
add
or
pop
aaa
rol
aaa
incl
aas
je
cs
mov
imul
ljmp
sti
inc
and
fadds
fisttpll
cmp
shll
dec
sti
cli
mov
dec
push
or
adc
inc
aaa
dec
shl
ss
sbb
or
push
jne
inc
icebp
cmp
sub
xchg
or
ds
dec
fidivrl
cmp
jecxz
dec
push
add
fwait
fs
mov
sbb
sbb
add
xor
mov
pusha
test
xchg
dec
test
nop
and
push
mov
and
sub
mov
stos
push
leave
lods
sub
mov
xchg
test
mov
xchg
aaa
fimuls
fcmovnu
and
bound
pop
push
xchg
mov
sti
adc
xchg
ja,pt
rcrb
ljmp
ficoml
mov
mov
stos
mov
dec
pop
mov
and
pop
pop
adc
leave
scas
xchg
push
stos
lcall
jmp
sbb
adc
repz
and
sub
push
adc
clc
jle
pop
xlat
addr16
or
lret
sbb
cmp
pusha
int
dec
jns
imul
paddusw
outsl
sbb
mov
mull
cmp
scas
mov
mov
fistl
sti
add
iret
push
sbb
adc
or
gs
xlat
cs
xor
imul
or
push
vmulsd
xorl
test
das
jp
and
out
testb
push
push
rcl
movsb
fwait
mov
movsl
test
out
inc
test
clc
outsl
xchg
scas
or
sub
xchg
ret
xchg
pushf
push
xor
test
mov
std
bound
imul
jl
push
call
or
sti
add
popl
inc
pop
mov
mov
ret
xor
fwait
adc
pop
and
add
je
xor
inc
xchg
lds
sub
loope
pop
and
sbbb
push
out
push
or
and
mov
pop
dec
adc
testb
cmp
add
sbb
data16
fs
adc
test
or
cmp
out
adc
add
repz
outsl
testl
jbe
ds
idivb
nop
call
fadds
fprem1
in
loopne
cmp
outsl
inc
mov
or
aas
jne
push
mov
xor
test
dec
sarb
dec
push
std
xchg
cmpb
cli
mov
shlb
and
jb
sbb
cmp
add
pop
leave
dec
push
cwtl
cmp
jns
dec
int3
rclb
cmpb
mov
sub
pop
js
sar
ds
imul
out
xor
scas
in
xor
pop
in
xlat
adc
sub
leave
or
mov
adc
fstl
or
xchg
lods
nop
insl
xor
push
rep
add
adc
jecxz
push
sub
push
scas
imul
cmp
adc
xchg
push
mov
iret
call
cmp
subl
out
add
repnz
shl
cmp
je
lret
and
fcmovu
mov
cltd
ficomps
lds
test
or
out
ljmp
loop
subl
mov
xchg
dec
and
jp
add
mov
inc
mov
pop
mov
pop
push
sbb
pushf
shlb
dec
xchg
sbb
std
inc
pop
subl
lret
adc
ja
out
gs
or
or
repnz
int3
ja
or
sbb
shrb
jmp
or
fisttps
mov
int
sub
mov
cmp
sub
bound
adcb
out
jle
jb
gs
pop
scas
inc
popf
int3
sahf
insb
fsubrs
jbe
loope
fidivl
push
jo
inc
jns
cmp
std
push
std
into
lcall
cltd
mov
pop
and
clc
mov
loope
fadd
pop
xor
xor
dec
lds
test
sub
xor
mov
push
insl
lods
fists
imul
push
movsl
push
or
sub
add
dec
rcrl
xorb
shrb
add
mov
cmp
test
push
aas
lret
pop
inc
xchg
ret
mov
fisubl
adc
jb
data16
jae
shl
push
and
jp
inc
loop
cli
movsl
dec
xchg
adc
ret
cmp
into
insb
xchg
mov
mov
sbb
sbbb
mov
xlat
mov
popf
sti
shrb
cli
inc
pop
js
enter
sar
das
pop
xor
or
xchg
cmp
dec
xor
xchg
sbb
xchg
into
mov
pop
jg
in
push
adc
dec
pop
sub
push
xor
cltd
push
jecxz
out
imul
addr16
in
bound
or
fwait
or
push
pop
loopne
dec
xchg
ss
sbb
mov
and
jne
xchg
aas
xchg
sti
inc
push
push
aam
pop
cmc
mov
and
xor
sar
inc
inc
jbe
sub
jle
cltd
insb
xor
movsl
stos
inc
mov
loope
arpl
mov
adc
in
les
mov
sub
sbb
sbb
sti
fdivs
sub
dec
xchg
push
or
in
jne
pop
mov
mov
mov
pop
sub
dec
popa
insl
sub
out
dec
repz
push
je
cmp
or
pop
adc
xor
divl
mov
pop
mov
jecxz
sahf
jle
jb
mov
fildl
or
xchg
in
outsb
fbld
push
pop
shl
dec
ficoms
shll
movsl
or
dec
scas
jno
in
mov
dec
xor
int
movsb
test
jecxz
pop
out
or
fwait
dec
into
or
cld
out
cli
enter
cmp
and
je
jg
jnp
sbb
mov
aam
adc
jne
hlt
sbb
xlat
enter
cmpsb
orl
test
cmp
mov
lods
leave
and
mov
in
cmp
sti
fcmovnbe
sub
filds
push
sbb
add
inc
xor
out
jp
nop
or
or
xchg
lret
fstpt
negl
movsl
inc
mov
nop
jb
mov
cli
and
cmp
adc
mov
cli
mov
push
pop
jno
inc
bound
cmpsb
push
movsb
lahf
stos
push
movsl
or
cmc
les
out
fyl2x
cmp
push
mov
or
or
jbe
int3
jb
dec
fs
xor
fcos
mov
sbb
stos
je
or
xchg
out
pop
xchg
ret
add
push
cltd
mov
lods
icebp
scas
push
add
dec
jp
lock
mov
fbld
mov
frstor
pusha
xchg
jb
ds
addr16
and
sti
jno
leave
outsl
aaa
push
ljmp
adc
jns
addr16
push
cltd
out
mov
or
outsl
arpl
jne
push
repz
jle
outsb
iret
mov
xchg
mov
inc
int3
in
loop
insb
jl
push
loope
movsb
imul
push
xchg
jecxz
sti
sub
xor
and
mov
insl
fwait
mov
inc
cwtl
pop
xchg
adc
lods
call
sbb
gs
lods
push
les
popa
xchg
aam
push
popf
cmp
into
xchg
push
aad
mov
sub
negl
mov
aad
sbb
mov
adc
mov
out
push
xchg
nop
repnz
cld
call
add
aaa
clc
int
inc
and
jo
add
popa
popf
shll
rorb
das
dec
lahf
test
hlt
mov
push
add
ss
xlat
push
test
mov
jbe
in
dec
jae
test
nop
xor
call
dec
cltd
cmpsl
mov
sbb
icebp
popa
or
add
adc
pusha
data16
mov
dec
ror
mov
inc
mov
sub
stos
pushf
daa
in
ds
mov
mov
adc
jecxz
aam
add
or
leave
lds
mov
arpl
jne
xor
les
jecxz
cmp
je
ret
imul
and
xchg
pop
iret
dec
sbb
and
mov
xchg
stc
popa
popf
fimuls
fcompl
sub
lds
in
inc
and
test
mov
int3
mov
fisttpll
jb
add
jne
xchg
mov
mov
inc
sub
xchg
data16
add
jne
pop
int3
jae
negb
mov
sub
bound
stos
insl
pusha
xchg
ret
mov
adc
cmpl
xor
inc
xor
or
jne
bound
xchg
ret
adc
add
cmp
sar
adcb
pop
aad
push
xor
add
dec
mov
lahf
idiv
ja
jnp
shrl
idiv
pushl
loop
mov
fsubrs
nop
dec
fiadds
pop
lcall
fnstcw
add
jge
rcrl
add
inc
ret
test
dec
mov
movsl
lods
push
sbb
fwait
mov
pop
in
xchg
xchg
mov
call
or
aam
mov
xor
and
push
mov
arpl
lret
test
or
popf
bound
ja
mov
cs
mov
jns
mov
fsubrl
mov
pop
jns
and
and
loop
bound
call
es
pop
xchg
or
mov
push
jp
sbb
pop
sub
hlt
push
sbb
addl
out
jno
loopne
mov
sub
inc
je
mov
mov
cmp
pop
inc
pop
xorb
sbb
test
mov
mov
js
push
repnz
jno
push
mov
dec
int3
fimuls
mov
stc
subb
shlb
ret
mov
dec
cmp
dec
mov
xor
cli
pop
cwtl
nop
clc
and
mov
cmpsl
push
dec
and
xorl
cli
sbb
dec
das
in
xor
shl
icebp
xor
pop
orps
mov
cmpb
psllw
inc
sbbb
cmpsl
icebp
sbb
stos
cs
stc
and
mov
fdivs
xor
and
cli
sysenter
pop
fiadds
or
adc
push
std
mov
sub
xor
pusha
stc
or
xchg
add
mov
stos
imul
mov
cmp
in
dec
fmuls
or
inc
or
push
es
xor
loopne
pop
push
loope
and
pop
dec
xchg
scas
sar
inc
ja
push
lods
xchg
sub
fsub
xchg
cmp
leave
in
clc
dec
mov
pop
mov
movaps
sbb
repz
sbb
fmull
adc
es
sub
sbb
imul
cwtl
sbb
cmp
mov
or
push
sub
xchg
imul
insl
shrl
xchg
lahf
mov
std
imul
in
and
mov
cmc
mov
sbb
mov
dec
and
fwait
inc
insl
in
jne
popa
iret
and
adc
iret
inc
pop
imul
ret
mov
pushf
mov
dec
xor
movsb
pop
in
cmpsb
fsts
push
outsl
fistpl
ret
daa
sbb
mov
xchg
mov
addr16
sub
es
lret
lods
and
inc
fdivs
sbb
lock
sti
xor
pop
movsl
and
push
repz
lahf
push
dec
and
mov
jl
xor
insl
aaa
shlb
inc
cmc
fldenv
lock
ljmp
sbb
bound
xchg
in
cmp
jae
pop
mov
jecxz
pop
and
xchg
fidivrs
inc
add
es
out
sahf
lret
pop
mov
adc
cltd
mov
mov
or
enter
inc
loopne
mov
test
pushw
ret
lods
push
xchg
out
lods
cmp
dec
dec
mov
lret
and
mov
sti
outsb
bound
testl
ret
mov
sbb
xor
jne
mov
addr16
pop
xor
loop
pushf
push
jns
xor
mov
jecxz
sbb
inc
sbb
es
stc
push
xor
je
into
jl
push
pushf
je
jmp
inc
stc
pop
std
inc
rcrl
mov
sub
cmp
clc
mov
gs
adc
mov
test
sub
add
fistps
mov
fdivrl
sub
add
out
or
jnp
out
scas
push
outsl
lret
arpl
xor
popf
mov
lahf
lods
cs
arpl
mov
mov
ficoml
lret
mov
scas
js
mov
cmp
mov
xchg
pop
sub
outsl
pop
push
cmp
dec
pusha
push
inc
sub
sub
loop
jnp
push
or
mov
cmp
out
pop
ret
push
sarl
ret
das
mov
jle
enter
mov
sub
xchg
mov
popa
jg
icebp
sub
mov
hlt
shll
push
push
push
sti
xor
mov
daa
inc
mov
loop
fs
lret
mov
fs
fs
fdiv
lods
popa
dec
ds
aam
arpl
mov
in
inc
mov
or
lret
fisubl
mov
inc
jge
imul
scas
js
shll
scas
movzwl
mov
mov
std
cmp
dec
out
scas
sahf
or
popf
mov
test
insl
loopne
or
aas
inc
pop
movsl
xlat
fwait
int3
adc
mov
xor
aam
and
jae
mov
mov
mov
test
lds
jg
in
ljmp
and
aam
fs
aas
pushf
sbb
fwait
nop
mov
pop
nop
bound
insl
jns
sbb
loope
clc
xor
adc
in
push
jmp
sub
nop
jno,pn
mov
icebp
inc
cs
aaa
mov
push
push
ret
mov
mov
mov
mov
push
jmp
sbb
movsb
pop
adc
rorb
es
ja
sbb
mov
pop
mov
push
mov
mov
lahf
xor
ficoms
inc
xchg
fcmove
in
movsl
cmove
nop
push
dec
pop
ljmp
loop
jnp
mov
jle
shll
int
sub
jne
jno
outsb
negb
gs
dec
aas
movsl
mov
pop
cmp
mov
pop
mov
fsts
add
xorb
repz
dec
js
mov
subb
test
js
push
ds
popa
xchg
sub
jno
xor
sbb
lahf
out
mov
sbb
in
imull
push
nop
ret
cmp
aam
jbe
in
push
decb
pushf
pop
test
in
add
push
movsb
xor
fldl
int3
jno
lret
sbb
jecxz
adc
xchg
pop
int
xchg
mov
push
add
fildl
add
mov
shll
and
mov
and
jae
test
arpl
jmp
jl
aad
and
loopne
cmp
outsl
loope
aam
int
jmp
and
mov
dec
ss
mov
mov
xchg
xor
jae
sub
mov
mov
inc
mov
loope
or
divl
mov
adc
outsl
pop
jnp
inc
imul
dec
ja
xchg
inc
int
and
adc
ja,pn
inc
sbb
cli
add
int
das
pop
mov
outsb
sar
outsl
jle
dec
call
lods
scas
out
lahf
xchg
inc
jl
lcall
or
jmp
mov
inc
sahf
daa
and
out
add
insb
sbb
pop
push
dec
mov
xor
out
movsl
aaa
adc
jbe
insl
fs
fbld
dec
mov
sub
sahf
and
mov
arpl
xor
data16
rolb
addr16
stc
jbe
addr16
push
test
fs
jns
ljmp
add
jb
push
fwait
aam
loope
pop
outsb
mov
mov
add
mov
pop
das
or
adc
xchg
adcl
pop
out
imul
mov
scas
insb
fisubrs
aad
adc
fiadds
fsubp
addr16
jb
popa
xchg
iret
or
fs
and
test
cmc
xor
mov
and
cmp
mov
scas
nop
xchg
ret
fists
into
dec
hlt
xchg
cltd
sbb
icebp
or
cmpsb
orb
or
test
out
or
mov
push
sbbl
imul
mov
add
aas
out
je
sarl
setle
ficoml
roll
mov
hlt
mov
mov
cmp
mov
inc
push
js
lcall
push
aad
jns
xchg
pusha
fcomip
sbb
cmp
sub
shrb
aaa
sub
fs
cmpsb
ret
dec
lods
out
sbb
mov
jne
enter
paddw
xor
sti
fisttps
les
inc
pop
dec
cmp
mov
push
push
es
xor
les
mov
icebp
ud1
adc
jg
dec
pop
test
mov
insl
scas
push
outsb
test
lods
lcall
sbb
shrb
pop
fisubrs
outsl
mov
xchg
mov
push
fistps
mov
into
inc
ret
dec
xchg
pop
xchg
mov
popf
xchg
or
rep
mov
xchg
sub
push
addr16
mov
repz
jnp
movsl
or
out
lcall
jg
popf
push
dec
pop
adc
insl
mov
clc
enter
xchg
pop
sub
loope
cwtl
daa
cmp
mov
jae
push
sbb
sbb
add
daa
add
pop
xchg
jae
fstpt
insb
mov
mov
mul
xchg
pop
lea
sarb
aas
cmpsl
arpl
sub
mov
adc
xor
std
dec
jnp
sti
dec
fcmovbe
mov
cltd
in
outsb
testb
lret
pop
push
fprem1
pop
sbb
pop
mov
cltd
xchg
mov
fildl
clc
xor
ja
fcoms
frstor
or
push
gs
inc
push
in
lock
gs
fstpt
xchg
fcmovnb
cmc
jnp
addr16
insl
das
hlt
add
loopne
push
rcrl
mov
adc
shrl
ljmp
and
loop
repnz
push
xor
and
or
fidivs
xchg
xchg
repz
push
daa
fbstp
jl
clc
dec
inc
enter
inc
sbb
dec
mov
jbe
jno
mov
add
dec
popa
stc
and
or
or
lds
xor
add
clc
xchg
sbb
out
xorb
loopne
insb
scas
and
xor
clc
or
call
in
lcall
or
push
jp
cmpsl
add
call
js
inc
ljmp
cmpsl
mov
or
xchg
sahf
data16
orl
icebp
mov
ret
cmc
inc
in
ret
and
rclb
es
repnz
sbb
pop
mov
mov
pop
push
inc
fistpll
xor
push
push
cmp
inc
scas
jns
mov
mov
dec
mov
xchg
cwtl
ret
or
aas
xchg
pop
or
lock
sbb
or
mov
out
lods
pop
mov
sbb
icebp
mov
pushl
in
lahf
sub
stos
mov
rcl
leave
ret
data16
xchg
sar
or
shr
ret
out
movsb
pop
cmp
push
arpl
hlt
fwait
sbb
or
sbb
int3
sbb
sbb
inc
xorb
jo
sbbb
les
mov
jb
add
sbb
cwtl
add
cmp
xchg
nop
xchg
jae
xor
aaa
mov
int3
jmp
lret
sbb
hlt
inc
test
jecxz
lret
icebp
icebp
mov
idivb
ljmp
leave
mov
xor
sti
imul
sbb
sub
push
sbb
mov
xchg
xchg
mov
loope
xor
inc
xor
sub
sbb
push
pushf
mov
mov
stc
push
sbb
in
fnstenv
add
fwait
jp
cmp
xlat
movsl
xor
idivl
cmpsb
cmp
out
mov
xchg
mov
mov
lds
popa
jae
add
xchg
sbb
in
mov
pop
gs
mov
pshufw
push
jae
imulb
sbb
mov
xor
rorb
cmpsb
testb
enter
test
adc
ja
pop
negl
pxor
dec
loope
insl
icebp
cmp
cmc
loop
ja
sbb
xchg
pop
pusha
jmp
shlb
or
mov
sbb
out
adc
adc
sub
adc
in
push
fcoml
add
insb
out
mov
mov
addl
mov
addr16
mov
cmp
inc
mov
pop
std
hlt
mov
or
adc
sbb
lods
jl
inc
adc
adc
hlt
in
sbb
adc
jbe
pop
add
inc
sub
mov
pop
xchg
roll
cmp
xlat
pop
das
pop
pop
enter
pop
lea
mov
ja
int3
mov
fsubs
pop
add
lcall
mov
lock
getsec
in
dec
sub
int3
cmp
repnz
xor
stos
inc
aam
and
lahf
xlat
pop
mov
cmpsl
mov
cmpsl
lods
cmp
fsub
and
add
je
call
xor
leave
and
cli
push
pop
lds
add
lds
daa
subl
xchg
ret
xor
outsb
out
push
in
hlt
outsb
in
push
push
aaa
es
mov
mov
ret
push
jne
xorb
xchg
daa
mov
push
out
inc
cmp
sub
test
xchg
add
sub
xor
xor
mov
adc
mov
sahf
outsl
int3
mov
mov
add
imul
das
shr
adc
iret
dec
xchg
inc
shll
arpl
mov
jge
je
cmpsl
arpl
sbb
call
mov
arpl
insb
xor
iret
or
dec
frstor
mov
sub
push
inc
pushf
dec
xchg
add
ss
rclb
andb
xchg
cmp
sub
jbe
pop
adc
mov
xor
or
in
adc
addr16
push
inc
mov
lock
lret
xchg
insb
and
jmp
inc
push
loope
adc
push
test
mov
jbe
jl
repnz
das
push
test
test
loopne
cmpsl
mov
and
cltd
loop
cmpl
inc
sbb
sbb
and
js
and
inc
out
sub
pop
inc
out
or
adc
push
aad
out
test
lods
decl
and
cmp
outsb
xlat
add
mov
rcrl
dec
int
jle
jae
jns
xchg
testb
mov
xchg
and
lock
daa
mov
out
xchg
std
loope
daa
sbb
andb
call
or
mov
fiaddl
popa
push
test
test
xchg
push
xor
xor
dec
mov
sbb
mov
clc
mov
cwtl
rcl
adc
adc
fldenv
inc
sbb
inc
jecxz
gs
sub
mov
mov
call
push
bound
les
pop
mov
sahf
fldcw
push
sahf
mov
jmp
push
pop
enter
lcall
pop
xchg
cmp
pop
adc
aas
xor
sbb
test
dec
mov
dec
scas
mov
sub
fnstenv
shll
add
add
xor
enter
mov
fidivs
jns
imul
testb
sub
call
mulb
mov
aad
std
adc
sbb
fldcw
and
sbb
xlat
cmp
jne
inc
sbb
or
loopne
fs
movsb
push
mov
mov
fadd
or
call
jp
rorl
pop
mov
out
cltd
mov
mov
orb
mov
cmp
scas
inc
das
mov
push
lret
mov
xchg
xchg
cwtl
into
xchg
push
cmp
or
mov
adc
xchg
sbb
or
js
out
mov
ss
adc
sbb
scas
jnp
cmp
jp
xchg
mov
inc
adc
jl
mov
sub
push
cmpsb
sub
jmp
inc
mov
xchg
addl
ljmp
xchg
insl
sbb
push
sbb
adc
fcomp
jo
lahf
ja
test
sub
push
add
ja
xchg
xor
icebp
bound
fs
aam
mov
in
loope
movsl
jmp
mov
add
jnp
call
mov
js,pt
push
fwait
out
std
stc
imul
gs
out
fidivrl
dec
jnp
xchg
mov
and
sub
js
sub
mov
daa
repnz
adc
inc
out
cmp
gs
je
push
rclb
and
bound
xor
or
adc
jp
out
shrb
push
enter
lock
xchg
xchg
test
lds
mov
incl
dec
mov
mov
lcall
pop
repnz
out
push
pop
push
xlat
push
aaa
repz
fisubrl
push
push
cmpb
rorb
out
add
sar
movsl
inc
jmp
mov
in
push
shl
je
cli
xchg
nop
ret
inc
loope
mov
enter
arpl
loopne
out
cmp
scas
push
enter
jns
xchg
sub
sarb
sahf
insb
sbb
cmp
adc
outsl
mov
add
pushf
xchg
mov
adc
push
jno
or
roll
pop
jb
aas
test
cs
fists
std
pop
bndstx
daa
inc
mov
adc
and
sets
xchg
pop
push
add
fstps
and
inc
jb
pop
sahf
push
mov
xchg
imul
dec
xchg
clc
mov
inc
mov
aam
xor
or
xchg
in
sbb
sbb
jbe
out
loopne
pop
stos
in
shlb
cmp
jne
sub
inc
jecxz
out
mov
in
sbbl
add
addr16
pusha
hlt
inc
sahf
push
fwait
xchg
mov
loope
cmpsb
shlb
dec
mov
andb
jae
ffreep
cld
scas
dec
dec
int
popf
xchg
pop
sysret
mov
sub
nop
lcall
adc
fstpl
ss
pop
and
mov
mov
sbb
aam
cld
mov
pop
adc
shll
adc
inc
test
jbe
mov
and
rcll
pushf
aaa
and
jmp
mov
testb
stc
pop
dec
jo
and
add
cmp
nop
mov
lret
pop
in
inc
cld
lret
stos
mov
int3
imul
cmpsl
push
mov
orl
jl
lods
xor
ss
jge
clc
cmp
pop
sahf
mov
loope
jae
mov
inc
cmp
cs
jb
ds
std
les
xchg
pop
in
adc
pop
fildl
cmp
lock
idiv
mov
ss
add
repnz
inc
mov
jp
mov
pop
and
sbb
cwtl
stc
cmp
std
movsb
sbb
imul
mov
adc
and
adc
cmp
jmp
div
test
cmp
push
cmp
dec
aad
inc
incb
fbld
test
mov
adc
inc
inc
fdivrs
sub
iret
sub
cmpb
jge
insb
lahf
dec
movsl
stos
cmpsl
sbb
das
cmc
sbb
sub
nopl
xor
popf
test
mov
inc
lods
enter
mov
mov
pop
stos
popa
mov
divb
push
fs
sarl
xor
and
int3
std
rorb
cmp
in
fmull
or
cltd
jnp
imul
inc
mov
stc
out
xchg
pop
push
cmpb
sbb
hlt
insl
fdivs
push
xchg
int3
movsb
cmp
hlt
or
jp
sbb
mov
insl
sbb
sbb
popa
add
mov
sbb
adc
in
ret
sub
imul
inc
imul
sub
pop
xor
add
pop
stos
jmp
mov
icebp
clc
repnz
dec
dec
fucomp
pop
dec
mov
cmp
cmp
mov
rolb
xchg
mov
mov
loop
addr16
mov
mov
fbld
pop
mov
enter
sbb
add
lret
subb
hlt
xor
call
in
sub
cmp
mov
jne
les
sub
sti
mov
jle
mov
call
dec
int
inc
fsubs
ljmp
push
loopne
pop
mov
ret
out
xor
call
jp
jp
mov
sub
sub
push
sbb
sub
xchg
out
sub
lea
stos
fwait
loopne
ret
stos
xor
rolb
fsts
fwait
in
jp
sub
movsl
mov
or
mov
movsl
push
dec
jb
pop
xlat
jo
xchg
mov
sbb
iret
aad
mov
rcrl
inc
inc
jmp
loopne
xor
sahf
shlb
cmp
mov
and
mov
mov
mov
stos
adc
mov
ret
imul
push
push
shlb
addr16
and
gs
sbb
das
and
pop
xor
push
or
push
outsb
jmp
sub
push
mov
sarb
rcrl
add
sub
scas
imul
popa
std
inc
sbb
jle
pushf
shr
adc
fcoml
into
jo
fisttpll
daa
ss
dec
fnsave
pop
pop
out
adc
fwait
and
cltd
xchg
mov
inc
mov
ljmp
lea
inc
pop
insl
mov
out
ljmp
inc
pop
daa
loop
ds
enter
les
jae
aam
push
cmp
xorl
fadds
loopne
dec
mov
push
xchg
stos
xor
cwtl
mov
jg
iret
addb
fcmovbe
outsl
mov
ss
rolb
inc
aad
adc
pop
mov
xlat
cmp
add
jnp
mov
int3
fstl
push
push
jle
pop
lahf
mov
sbb
sub
xor
test
test
dec
dec
pop
inc
je
xchg
adc
xor
jecxz
mov
sub
std
fwait
data16
mov
outsl
aaa
push
lea
fisubs
cmc
cmc
xchg
sub
dec
lock
sbb
movsb
cltd
fdivl
jecxz
inc
sub
shl
mov
cmp
outsl
imul
cwtl
pop
lret
mov
jnp
mov
dec
mov
push
sbb
xchg
dec
xor
popf
xchg
jnp
daa
mov
pop
scas
test
adc
fnstsw
jnp
aas
inc
mov
fmull
repz
test
aas
cltd
jl
incl
and
pop
lock
push
cmpsb
and
and
pop
pop
adc
dec
hlt
cmp
in
mov
mov
in
std
xchg
push
outsl
outsb
hlt
test
bound
test
test
push
lahf
mov
cmp
ljmp
adc
fucom
ljmp
push
or
repnz
pop
loope
test
lds
sbb
sbb
es
mov
push
or
ret
sbb
mov
jg
into
cld
cmpsl
xor
rcrl
in
or
lret
in
push
rolb
cs
dec
sub
int
loope
mov
xchg
or
call
sbb
out
cltd
jnp
arpl
xchg
mov
ss
and
sbb
push
stos
mov
rorl
sbb
dec
cmc
xor
out
dec
mov
lcall
dec
push
adc
repz
dec
sbbb
imul
mul
dec
and
xchg
imul
pop
icebp
rcr
adc
insb
in
cmp
ja
pop
add
push
push
scas
push
je
and
addb
push
sub
or
scas
xchg
nop
sbb
testb
in
mov
arpl
cmc
sub
and
int3
pop
js
daa
imul
bound
jae
outsl
sub
loop
sub
mov
adc
mov
mov
aaa
call
dec
inc
mov
and
negb
in
push
mov
xchg
aaa
pop
jmp
push
lea
mov
out
stos
jle
aas
dec
adc
cmp
jle
sub
ljmp
and
shll
mov
leave
mov
mov
adc
addb
jp
pop
dec
mov
mov
and
xlat
cli
out
pushf
lds
arpl
test
ret
loop
rorb
loopne
lcall
filds
and
jl
les
pop
out
jo
aam
gs
pop
das
mov
jle
pop
iret
aaa
mov
xchg
movntq
je
push
mov
cmp
add
lret
mov
jb
lods
imulb
mov
sbb
ficoml
loope
popa
lock
in
nop
mov
gs
jno
icebp
push
push
adc
ja
ret
push
dec
cmp
xchg
mov
icebp
shll
sysexit
psubusb
shrb
mov
enter
inc
shrb
mov
test
xchg
mov
ret
adc
mov
push
loopne
jmp
out
imul
insl
jnp
scas
repz
mov
jge
xchg
inc
mov
mov
arpl
mov
int
out
sub
mov
arpl
pushl
inc
imul
adc
fstl
ss
flds
sbb
cmp
int3
out
cmp
loope
mov
outsb
sbbb
out
adc
adc
stos
pushf
and
and
out
mov
cmpsb
movsb
or
nop
mov
push
xchg
cmp
daa
sbb
dec
push
ja
fdivrl
test
dec
jns
sbb
or
pop
frstor
add
ret
mov
out
mov
int3
cld
or
dec
mov
jae
cld
ljmp
mov
inc
cwtl
mov
and
stos
dec
pop
aam
pop
fiaddl
cmp
lds
dec
push
lahf
rcrl
xor
fcoml
pop
test
mov
push
call
mov
insl
pop
pop
jg
adc
dec
jmp
jns
adc
cmp
lock
jmp
sahf
inc
adc
es
jp
lahf
in
xchg
sbb
into
push
lods
mov
push
repnz
mov
push
int
jnp
sub
cmp
addb
jecxz
pushf
sbbl
mov
xorb
inc
add
mov
sub
das
mov
cmp
push
adc
mov
push
cmpsl
dec
dec
xor
clc
push
gs
lods
and
pop
sbb
mov
shll
add
cli
mov
ret
std
aaa
mov
xor
iret
mov
xchg
inc
pusha
mov
inc
mov
pop
shl
sub
add
sahf
addl
out
lock
orb
out
sahf
loope
pop
and
nop
mov
sub
repnz
arpl
adc
pop
push
ds
jns
inc
pop
mov
mov
popf
lcall
mov
test
outsl
popa
movsb
insl
push
xchg
cli
push
lret
movsl
add
mov
pop
je
shlb
movsb
jp
mov
push
out
popf
xchg
popf
and
dec
dec
je
jle
test
cmp
jmp
sbb
mov
nop
cmp
je
pop
inc
pop
popa
inc
subb
pop
lret
mov
xchg
mov
cmpsl
aas
gs
test
mov
int3
stos
je
or
and
shrb
sahf
jmp
lcall
or
dec
jp
fisttpl
adc
js
jae
popw
aaa
scas
cmp
in
cmpl
push
fisubs
loop
fcmovbe
cmc
lcall
mov
jae
push
push
xor
ret
lea
mov
cs
cli
and
jbe
mov
lods
jg
into
and
xor
ficoml
aaa
mov
dec
lret
bound
ret
ficoms
fdivrs
std
cli
pop
cs
sti
xorl
fistpll
flds
sub
sahf
adc
dec
out
add
xor
cmc
jae
out
mov
shrl
in
movsl
bound
imul
jnp
mov
mov
mov
iret
mov
pop
mov
pop
xor
sbb
mov
push
into
into
xor
pop
orb
in
or
sub
xor
push
jno
sbb
push
ja
lahf
in
mov
jne
stos
push
xor
stos
mov
stos
mov
cli
add
call
repz
push
cmp
add
mov
nop
sub
outsl
test
es
mov
mov
out
fbld
das
inc
sbb
adc
lahf
test
pop
jmp
push
sbb
mov
jne
cli
shrb
xor
std
ja
mov
mov
xchg
mov
xchg
nop
in
fs
inc
lock
dec
xorps
leave
insl
lock
jnp
xchg
sbb
es
mov
pop
popa
inc
rorb
sub
sub
push
cwtl
jnp
push
push
jmp
repz
xor
mov
pop
xchg
stos
negb
cs
cmp
clc
ds
cmp
rcll
outsb
into
mov
out
rorl
cwtl
jge
inc
jmp
cltd
inc
sbb
in
fisubrs
dec
sbb
mov
xor
aas
sbb
inc
or
xorb
fs
cli
fiadds
mov
repnz
outsb
sub
and
xchg
movsb
xchg
mov
insl
cs
mov
sbb
insl
mov
pop
cmpsb
xchg
ret
cmp
sti
dec
cmp
adc
in
lea
ds
mov
fimuls
cmp
and
dec
cmp
adc
inc
outsb
enter
dec
mov
push
inc
test
idiv
out
jg
rclb
jmp
or
je
ss
test
aad
cmp
stos
push
cmp
cs
dec
aaa
mov
rcll
outsl
enter
sub
fstp
mov
mov
lret
test
mov
jbe
test
ds
cld
fiaddl
nop
mov
cli
mov
add
je
aam
adc
mov
xchg
push
aam
mov
int3
stos
rcl
repnz
sub
icebp
mov
fidivs
pop
xor
and
fstl
into
xchg
mov
adc
int
jp
shrb
stos
aad
daa
adc
sbb
arpl
mov
and
add
test
push
addr16
ja
aam
cmp
inc
ja
sbb
inc
and
mov
lds
stc
xchg
stos
hlt
pop
dec
subb
gs
daa
sub
rorl
push
or
mov
mov
icebp
jmp
xchg
es
mov
imul
jecxz
dec
sub
outsb
lods
outsb
int
xor
push
pop
call
ja
xor
jo
loope
lock
xchg
mov
xor
pushw
mov
je
lods
mov
leave
mov
mov
pop
mov
xor
insl
stos
mov
pop
jo
jecxz
sbb
clc
cmp
dec
nop
aas
cli
xor
frstor
cmp
dec
or
xchg
rcl
xchg
insb
jbe
scas
repz
pop
aaa
repnz
adc
leave
movsb
std
xchg
in
test
or
dec
pop
pushf
or
xor
jns
and
jmp
and
mov
lock
mov
xor
sub
fdivrl
not
es
jb
jb
fbld
xor
pop
ficompl
in
xor
xchg
push
cmp
movsb
jns
sub
sbb
or
outsl
daa
and
push
sbbb
out
fwait
sbb
mov
jg
cs
inc
inc
jb
icebp
sbb
cmpsb
jne
sbb
loop
jo
cli
lcall
sti
movsl
loopne
daa
sbb
es
es
xchg
les
gs
mov
ss
xabort
jge
jns
cmc
cld
je
sub
add
sbb
add
jecxz
ret
scas
and
push
pop
cmpsl
loopne
bound
test
cmp
stos
push
loopne
adc
xchg
jno
out
or
shlb
mov
xlat
push
cmp
mov
stos
and
lods
and
mov
cmp
mov
mov
xchg
xor
dec
or
popa
fidivrs
lret
mov
mov
pop
aas
xlat
sbb
imul
xchg
fimuls
testb
push
dec
sbb
loopne
push
pop
lcall
out
push
mov
test
fisttpll
repnz
sbb
cld
pop
es
data16
dec
arpl
ja
cli
in
sbb
out
push
cmc
int3
nop
lods
shll
popf
sbb
fwait
mov
pop
pop
movsb
mov
mov
xchg
inc
jbe
fidivrs
xchg
ret
fdivs
enter
dec
adc
inc
inc
xchg
inc
ret
sahf
pushf
push
ret
mov
push
cmp
aad
hlt
push
ret
repz
pop
dec
adc
mov
xchg
inc
jmp
pop
ja
mov
aas
push
pop
inc
jle
jl
mov
mov
out
cs
xor
mov
aaa
mov
sar
and
shr
das
pop
fdivr
cmc
inc
test
inc
rclb
xor
xlat
sub
push
loop
in
mov
sbb
test
pop
lock
add
mov
int3
into
ret
iret
daa
lret
jl
lods
xchg
or
out
pop
jno
fmulp
ljmp
pop
sub
outsb
and
pop
pop
test
dec
adc
inc
jo
ds
inc
sbb
int
and
dec
fidivs
adc
inc
int3
push
lcall
push
add
mov
hlt
lods
pop
jg
jmp
cs
faddl
ljmp
stos
mov
xchg
mov
rclb
vsubsd
mov
inc
shll
jne
and
and
call
mov
adc
fdivs
mov
fcoml
jo
int
inc
pop
xchg
lahf
pop
cmpsb
adc
push
outsl
inc
jecxz
push
sub
nop
les
jns
mov
push
int
data16
cmp
test
aam
les
xchg
inc
or
lea
dec
dec
sub
stos
test
xor
sbb
idivb
dec
setno
push
pop
mov
pop
rorb
aaa
rcll
xor
push
xchg
xor
leave
push
mov
dec
insl
cmc
or
mov
test
out
lret
aam
test
mov
stos
push
daa
and
int
adc
pushf
cli
sbb
cmpsb
or
jecxz
stos
les
hlt
jbe
push
in
jmp
sub
test
xchg
cwtl
out
lcall
inc
add
stos
xor
in
cmc
lcall
jmp
sub
xchg
movsl
sbb
int3
sbb
ljmp
lock
adc
pop
lds
divb
add
repz
push
ffreep
rcl
or
push
dec
xchg
out
das
popf
ret
jmp
xchg
xchg
sub
inc
scas
ss
jle
add
pop
mov
sub
mov
outsl
outsl
push
mov
and
enter
and
jne
in
adc
imul
jl
aam
cwtl
aaa
lea
jg
loopne
dec
into
add
roll
out
popfw
sub
mov
add
xchg
push
xor
bound
sbb
push
push
rol
scas
inc
xchg
sbb
push
adc
mov
xchg
rorb
or
jmp
adc
push
jmp
push
sub
xor
scas
icebp
jecxz
leave
dec
dec
inc
mov
inc
das
mov
popf
and
xor
call
nop
incb
fnsave
je
pop
push
ja
and
daa
rclb
jmp
xchg
hlt
jmp
push
out
dec
fnstsw
xchg
movsb
pop
int3
mov
mov
add
out
insb
mov
mov
andb
mov
pop
cmc
jg
stc
mov
je
adc
xor
popa
lret
pushf
imul
std
add
xchg
decb
out
stos
pushf
out
dec
pusha
sbb
dec
and
cmp
lcall
gs
les
jbe
xchg
cmpsb
in
insl
xor
dec
jle
mov
dec
adc
push
push
mov
jecxz
imul
in
adc
and
test
jb
loop
pop
sbb
aad
in
std
je,pn
xlat
popa
fimuls
insb
adc
fsts
dec
jl
jbe
pop
mov
mov
or
add
sti
pop
sarb
js
jg
rsm
dec
ds
and
adc
js
lcall
aaa
mov
ret
cmp
or
iret
sub
xchg
shlb
aam
jg
xchg
imul
in
pop
fwait
or
ror
xchg
jp
aaa
mov
jg
fldenv
mov
inc
add
xor
mov
pop
js
jecxz
mov
add
jbe
add
push
cmpsl
test
in
xor
mov
push
xor
cmp
dec
pop
pop
adc
in
fdivr
jns
call
insl
mov
sub
cmp
xchg
pop
cmpsb
jl
push
mov
scas
fcomp
cld
cmp
cli
mov
xchg
pop
and
cmpsb
and
or
xor
mov
dec
sbb
xchg
or
popf
pusha
andb
cmp
insb
pop
negb
cltd
adc
shrb
push
sbb
or
push
repz
loopne
mov
imulb
add
std
xlat
scas
xor
or
add
or
pusha
push
addr16
ret
lods
or
stos
mov
popf
jns
add
sub
sbb
js
in
cmpsl
push
fcoms
mov
das
push
xor
negl
sbb
push
movsb
sahf
fstps
jle
push
arpl
cld
nop
mov
bound
sahf
jbe
sub
flds
mov
imull
aam
in
das
pop
add
sbb
lcall
rorb
je
aas
xchg
sbb
mov
sbb
out
cwtl
fwait
outsl
add
mov
fsubp
std
arpl
adc
sub
pop
adc
push
movsb
jecxz
push
mov
loopne
arpl
inc
dec
mov
hlt
fs
adc
lret
sbb
or
mov
pop
mov
pop
in
div
das
jb
stc
fwait
jmp
xchg
ficoms
jns
mov
jo
mov
fstps
std
mov
divps
xor
cmp
mov
or
push
sbb
push
xchg
fstpt
xchg
jle
outsl
out
scas
jge
mov
sbb
push
loope
leave
xor
sub
jnp
cmp
push
outsb
jbe
aad
enter
sbb
add
inc
dec
js
xorl
daa
mov
mov
push
cmc
fwait
lods
addr16
and
lret
xchg
aam
jecxz
and
adc
pop
sbb
hlt
sbb
outsl
sub
ds
adc
push
dec
test
fdiv
loope
lcall
mov
pop
xor
mov
das
rolb
push
mov
sbb
test
les
shrl
lds
movsb
push
stc
add
dec
aaa
adc
mov
iret
mov
cmp
xor
fdivs
rcrl
jne
sarb
add
mov
aam
xchg
mov
sbb
popf
iret
iret
fwait
xlat
mov
int
xor
inc
xchg
pop
frstor
mov
xchg
mov
iret
jnp
neg
fsubs
cmp
cltd
jl
daa
inc
dec
mov
clc
hlt
repnz
lds
lret
and
stos
call
push
mov
jmp
cmp
test
jge
icebp
mov
aaa
sub
pop
fldenv
scas
je
enter
push
mov
push
sub
or
sbb
jne
mov
pop
ret
subl
push
fldcw
pop
leave
pop
push
push
inc
aaa
movsw
nop
jle
cmp
jle
das
lret
adc
lcall
push
mov
es
movsb
xchg
movsl
out
dec
dec
add
xor
push
hlt
aaa
mov
sub
lret
stos
setg
adc
sbb
push
andb
cmp
out
test
cs
test
je
cmpsl
ret
mov
loope
stos
cld
pushf
dec
movsb
jae
cwtl
jno
sti
std
pop
out
jbe
sarb
adc
scas
adc
push
mov
pop
mov
sub
or
fcoms
into
xor
fs
shll
fisubl
rorb
mov
and
bound
in
sbb
scas
inc
arpl
inc
jge
fmull
mov
clc
jno
lahf
leave
sti
push
sub
daa
mov
inc
daa
sub
dec
or
jno
sti
shll
jmp
adc
std
cs
mov
pop
in
cs
ja
or
xchg
out
add
add
pop
xchg
push
xchg
xchg
mov
adc
inc
negl
daa
mov
inc
jp
lds
push
or
scas
jmp
out
mov
sbb
popa
inc
add
xor
push
sub
or
sti
iret
test
push
jecxz
shl
inc
adc
adc
xor
shlb
xor
xlat
dec
mov
adc
clc
pop
push
flds
push
adc
outsb
jb
rcl
sbb
dec
hlt
movsb
insb
sti
mov
cwtl
mov
test
jnp
xor
cmpsl
xchg
or
cmc
mov
cli
incb
stos
sbb
jno
rcrl
xor
push
jge
inc
out
out
and
jle
push
hlt
lahf
pop
mov
icebp
loope
inc
mov
add
push
push
pop
mov
shrl
and
adc
xor
lock
cltd
xor
pushl
pop
sub
rolb
push
repnz
jne
cli
pop
stos
js
cmp
iret
push
fsubr
lds
push
xchg
lods
lea
test
popf
pusha
or
imul
ljmp
test
in
sub
adc
sbb
out
push
mov
mov
out
loop
or
adc
cltd
or
xchg
jbe
inc
subl
xchg
test
es
cs
xor
in
es
adc
cmpsb
sbb
aas
sub
scas
pop
lcall
int3
addr16
shlb
shrl
mov
mov
popa
xor
mov
xchg
subb
push
ja
push
cmp
insl
lret
aaa
clc
push
push
stos
iret
insb
cmp
fldcw
xchg
movsl
jae
xlat
sahf
gs
jle
xchg
adc
mov
in
inc
stos
cmp
cs
popa
jg
mov
loopne
icebp
mov
mov
jg
mov
int
lock
jne
ss
sub
clc
xor
add
sub
pop
scas
xlat
dec
imul
push
xchg
test
lods
push
cmp
aas
push
xchg
aas
cmpb
rcrl
mov
ds
ljmp
scas
xor
xchg
cltd
xchg
jne
ficoms
and
enter
sub
jl
jg
cmp
push
pop
mov
jne
add
ret
pushf
and
scas
jmp
xchg
jp
lds
fnsave
push
sarb
divl
insl
cmp
jo
rorb
jb
push
adcb
cli
mov
xchg
movsb
iret
jae
outsl
dec
mov
scas
and
inc
pusha
popf
fwait
data16
sbb
sub
sub
xor
jmp
shl
fcoms
lret
into
xor
jmp
mov
ficoml
cmpsb
movsl
add
ficoms
mov
ret
push
fnstcw
jb
out
mov
push
cmpsb
inc
or
out
mov
inc
es
cmp
jo
imul
mov
dec
fnstcw
adc
jl
loope
push
mov
pusha
mov
pushf
shlb
cli
mov
jae
into
sbb
movsb
pop
lock
add
dec
mov
jmp
loopne
sbb
lcall
and
pop
roll
cld
cmp
pusha
mov
insl
pop
pop
mov
xchg
jg
inc
lahf
jne
lahf
mov
sbbb
inc
dec
das
mov
pop
nop
bswap
lods
test
fsts
sub
movsl
pop
push
push
or
imul
jo
in
gs
nop
addr16
lret
add
outsl
dec
stos
mov
or
test
out
push
or
lret
inc
push
sub
rorb
xor
in
pushf
or
or
and
cmp
loop
std
jbe
mov
js
int3
mov
loopne
imul
aad
imul
sahf
pcmpeqw
leave
push
sub
repnz
cltd
test
pop
gs
test
rclb
push
jb
cltd
divl
out
test
nop
push
pop
mov
aas
imul
inc
ret
mov
xchg
mov
lods
enter
mov
repnz
fisttps
punpckldq
scas
fisubs
jb
aaa
imul
mov
into
inc
jl
mov
in
daa
or
pop
push
pop
outsl
sbb
sti
movsl
cmpsl
dec
and
add
mov
aam
jl
cmpsl
jle
sbb
dec
in
ds
aad
into
sbb
add
sbb
scas
xor
dec
in
je
cmp
daa
fdivrl
daa
arpl
les
mov
or
mov
mov
mov
dec
dec
or
in
add
into
jmp
cwtl
fdivr
and
inc
cmp
bound
mov
jp
xchg
mov
sbb
jbe
sbbl
or
lods
cmc
in
int
punpcklbw
inc
out
loope
sub
or
scas
repz
jmp
mov
cwtl
push
ret
xor
pop
popa
add
dec
cmpsl
daa
mov
insl
addb
es
xor
pop
out
push
inc
jbe
call
js
test
lret
sbb
into
arpl
loope
xor
repnz
and
ljmp
mov
inc
cmp
pop
sbbl
ljmp
push
pusha
dec
fdivrs
testb
imul
scas
sbb
adc
dec
mov
lods
mov
jmp
dec
scas
ds
insl
in
pop
mov
adc
sahf
test
into
std
jg
into
int
fwait
inc
mov
mov
jge
jl
test
xor
es
cwtl
inc
mov
pop
loop
in
add
xor
call
les
xchg
xor
sbb
ret
ja
sbb
lods
mov
mov
mov
es
cmp
and
inc
mov
pushf
fadds
and
cmpsl
das
pop
mov
call
notl
jne
in
pop
outsl
arpl
fucomi
mov
xchg
mov
dec
xlat
pop
pop
xor
movsb
fildl
lock
lds
sbb
fs
mov
sub
xor
cmp
xor
mov
fdiv
ja
adcb
out
and
inc
movsb
pop
and
sti
mov
cmp
pop
mov
pop
lods
aad
push
inc
hlt
std
pop
inc
sub
mov
inc
inc
nop
das
mov
inc
js
lahf
mov
mov
loop
mov
scas
out
imul
outsl
mov
sub
cld
fistpll
mov
cmpsb
sub
sub
xor
lcall
lcall
and
lods
adc
inc
xor
test
shlb
aad
add
jo
gs
adc
and
aaa
inc
fisttps
dec
mov
xor
xlat
lods
int
add
mov
xor
sbb
adc
mov
or
inc
inc
fstpl
inc
lcall
int
inc
cmpsl
ss
call
xlat
inc
iret
xchg
fisttps
mov
enter
mov
test
sub
mov
insb
pop
sbb
notb
stc
and
mov
and
inc
mov
add
xor
stos
mov
inc
cs
popa
sub
js
mov
pop
push
mov
jl
xor
sub
das
insl
mov
or
ds
jo
xchg
or
xor
mov
mov
sbb
adc
stos
cmpsb
and
pop
or
jle
push
addr16
incb
ja
cmp
and
lcall
in
pop
push
pop
mov
popf
inc
lods
flds
add
sub
mov
xchg
dec
hlt
mov
out
scas
mov
sub
sahf
stc
out
mov
fwait
push
mov
bswap
out
add
ljmp
jae
dec
and
lcall
add
sub
rclb
push
gs
mul
mov
mov
cmpl
xchg
and
inc
aaa
jl
mov
in
xchg
fnsave
fdivrs
icebp
mov
or
in
jo
dec
les
call
ds
sub
enter
xchg
divb
adc
dec
mov
push
addl
rcl
inc
add
into
mov
adc
push
push
mov
push
bound
push
cmp
lods
fdivrs
sub
dec
jmp
gs
push
inc
sahf
aad
adc
mov
cltd
clc
addr16
jp
gs
movb
cmp
mov
mov
pop
add
push
pop
fwait
sahf
testl
xor
push
out
and
pop
sahf
sub
daa
stos
adc
mov
inc
mov
cmp
call
es
push
popf
mov
or
neg
dec
outsl
aaa
xorl
fisttpll
sub
fs
in
cmc
cmpsb
shl
cmp
or
pop
negb
mov
sbb
xor
inc
rol
mov
dec
xchg
cmc
ja
les
cmp
aaa
or
jae
dec
sbb
sti
int
addr16
jmp
xchg
mov
out
dec
dec
flds
jp
insl
iret
sbb
inc
lret
iret
xchg
lahf
out
rclb
pushf
sbb
lret
negb
inc
xchg
test
imulb
pop
mov
dec
inc
jo
xor
dec
es
fidivrs
cmc
mov
lods
stos
jge
jecxz
dec
adc
inc
dec
pop
xchg
in
pop
lea
add
into
add
mov
cltd
jmp
loope
xchg
pop
pop
lods
dec
test
loop
mov
jbe
mov
sub
xchg
test
inc
sbb
movsb
sbb
stc
xchg
roll
pop
add
jl
fidivs
sbb
xchg
xchg
and
xchg
sbb
cli
ljmp
mov
hlt
or
int
dec
frstor
xor
dec
insb
loopne
pmaxub
jmp
mov
sbb
aas
insl
cmp
sbb
into
dec
rclb
insb
scas
and
xor
dec
mov
notb
xchg
out
pushf
fidivrs
xor
je
xchg
and
jl
or
pop
inc
push
cmp
lahf
or
popa
loope
mov
dec
clc
fcoml
dec
pop
fistps
add
xlat
adc
add
fmull
pop
dec
dec
addr16
test
add
dec
push
push
jo
hlt
sub
lock
xor
pop
mov
ror
test
inc
decl
pop
dec
mov
addr16
push
cmpsb
adc
adc
jns
push
add
jge
cli
pop
adc
inc
mov
mov
or
mov
dec
stos
shl
leave
daa
out
sti
fwait
aaa
xchg
in
stos
leave
lods
xchg
push
stos
fstpt
sti
xor
in
jle
cltd
xor
jecxz
inc
repz
pop
dec
xchg
mov
lods
aas
andb
fcmovne
push
jmp
inc
jl
fsubrs
ss
pop
aam
xor
hlt
insb
cwtl
movsl
fldt
inc
dec
lret
push
sub
sbb
cmp
sbb
pop
cmp
iret
push
xchg
out
xchg
xchg
inc
pop
mov
adc
mov
xor
in
out
js
loopne
push
popf
adc
or
push
xchg
mov
jno
xor
addr16
pusha
sti
adc
sub
or
and
gs
repnz
inc
mov
dec
xchg
call
daa
cmp
outsb
mov
femms
xlat
sbb
jne
jbe
dec
inc
scas
les
cmp
test
call
lret
int3
out
pop
leave
sbb
cmp
push
inc
push
les
xorb
loop
leave
fiadds
adc
sub
pop
adc
mov
pop
mov
pop
mov
hlt
pop
sbb
aaa
adc
sub
push
add
movsl
sbb
out
mov
icebp
pusha
test
nop
in
iret
aaa
addb
shl
cli
xor
mov
ss
int3
mov
adc
data16
xchg
jg
inc
mov
imul
mov
mov
adc
lods
insl
adc
negb
fnstcw
adc
pop
sti
adc
push
inc
out
clc
jnp
into
mov
jbe
test
or
sbb
and
jno,pt
lea
daa
or
push
dec
push
and
pop
pop
mov
xor
shll
mov
fs
mov
pop
pop
push
push
loopne
mov
inc
movsl
inc
mov
stos
or
cmp
dec
push
mov
inc
ret
sbbb
xchg
ljmp
inc
repz
xchg
adc
inc
and
jnp
cmp
fidivrs
in
addr16
dec
sub
cmp
fisttps
movsb
out
movsl
jno
cwtl
xor
mov
xor
xchg
jae
shrb
repz
mov
outsb
rcll
cmpsl
add
jecxz
idivb
push
add
adc
mov
mov
sbb
imul
ret
adc
cmpsl
cmp
adc
mov
mov
movsl
dec
xchg
lea
jle
sub
mov
jmp
pop
mov
bound
rcll
stos
pop
mov
lock
repnz
mov
stos
mov
repnz
movsl
push
jmp
and
mov
stos
push
xor
mov
pushf
loope
jae
push
jno
fdivl
cmp
stos
int
pop
add
jecxz
mov
rcll
add
xchg
popf
adc
cmp
fadd
or
mov
mov
cld
test
and
add
scas
jno
sub
or
mov
jmp
jecxz
popa
sbb
mov
and
cli
std
cmpsb
pop
fwait
cmpsb
xchg
cmp
jp
jns
pusha
jbe
les
hlt
sbb
in
cmp
xchg
mov
sti
aam
rorb
xor
lods
arpl
mov
out
cmp
push
add
jb
xor
imul
jno
imul
push
cltd
push
roll
or
lods
jne
rolb
out
push
ljmp
mov
pusha
xor
or
add
push
cmp
mov
jmp
sbb
in
sbb
xchg
ss
pop
sbb
loopne
out
popf
aad
jb
int3
pusha
lock
cld
jb
xchg
dec
iret
mov
sub
mov
std
mov
shlb
push
mov
sahf
pop
popa
push
xor
mov
dec
jnp
js
shll
ja
lock
test
cmpsb
jbe
into
inc
pushf
push
mov
loop
push
pusha
xlat
xchg
fcoms
xchg
and
fwait
ja
inc
pop
push
sarb
pop
add
mov
cmp
ja
jl
cmpsl
cli
xor
faddl
mov
mov
test
repz
in
cmpsl
jb
stos
jne
push
insb
insw
je
icebp
pop
xor
mov
xchg
push
and
cmp
jp
jnp
mov
das
mov
fwait
pop
jb
loopne
lret
push
ret
cmp
xor
in
xor
out
mov
stos
popa
inc
movsl
aad
cmova
mov
negl
mov
shrl
imul
jp
push
mov
sub
mov
movsl
xchg
mov
push
mov
leave
jmp
dec
rcll
fimuls
mov
adc
clc
cmc
leave
sub
inc
xchg
mov
inc
jb
cmpsl
xlat
cltd
dec
inc
adcl
out
cld
ret
insl
cmp
sti
xchg
lret
std
scas
lea
lock
mov
es
jl
jae
push
out
mov
sub
sub
je
xlat
push
ljmp
adc
mov
test
movb
in
fistl
adc
daa
mov
out
sub
mov
push
adc
xchg
shlb
lea
fsubl
add
fs
sub
inc
push
xchg
repz
sub
sub
cmp
std
inc
push
popf
push
iret
clc
lret
mov
je
out
outsb
mov
pop
xor
xor
lods
inc
psllw
mov
sbb
popf
dec
outsl
addb
stc
mov
lcall
push
icebp
and
push
push
cmp
jbe
dec
int
fsubl
bound
pop
insb
mov
xchg
pusha
sbb
ds
loop
clc
or
fs
mov
mov
and
ret
mov
add
pop
call
pop
hlt
jbe
mov
mov
daa
mov
and
fidivrs
push
loopne
mov
adc
mov
fnsave
jmp
neg
mov
inc
mov
rorl
xchg
std
into
popf
xchg
jb
dec
cwtl
ret
add
or
push
icebp
stos
aam
mov
test
out
adc
addr16
jno
adc
das
sub
push
cld
pusha
out
scas
inc
dec
aaa
stc
mov
shr
in
add
fidivrl
mov
bswap
or
cltd
lahf
cmp
les
nop
std
mov
inc
call
xchg
push
mov
add
icebp
jbe
xchg
icebp
ss
inc
stc
mov
mov
inc
lret
inc
and
xchg
insl
sub
mov
inc
fimull
cmp
pop
jecxz
hlt
pop
adc
stc
mov
loop
std
les
dec
int
lock
push
mov
mov
adc
add
fadds
lods
ret
fs
lahf
push
or
mov
fisubl
sbb
and
cmpsb
adc
and
fstpt
cld
cmp
push
out
dec
ficompl
dec
fcomi
sbb
and
sbb
xor
cmpl
ja
xchg
sub
mov
mov
add
inc
push
cld
jecxz
add
jl
adc
dec
out
mov
out
push
cmp
cmp
repz
fisttpll
out
push
pop
mov
pop
loop
push
in
clts
dec
adcb
push
add
adc
xchg
mov
into
sbb
and
mov
out
fldl
call
mov
es
rorb
aam
push
cmp
je
mov
dec
sbb
sbb
inc
bound
loopne
sbb
sbb
lret
mov
push
push
and
and
int3
fs
xchg
jl
jno
jae
insl
int3
scas
inc
rcl
pop
in
rorb
xor
add
push
aam
test
aaa
inc
mov
push
lods
pop
mov
lea
ror
pop
out
mov
mov
cmp
mov
push
xor
add
sbb
les
push
std
filds
lods
ds
jno
mov
push
xchg
roll
fwait
and
cmovno
loop
add
adc
cli
jo
jg
jae
pop
insb
sbb
push
sub
out
daa
repz
mov
shrb
sub
and
xchg
xchg
cmp
dec
scas
mov
pop
dec
test
fmull
push
dec
mov
stc
mov
push
ficomps
sarl
cs
cmp
addr16
or
lods
add
scas
push
pop
adc
mov
sbb
arpl
shlb
push
imul
adc
cld
aaa
fwait
outsl
xor
int
fsubrs
xor
xchg
jecxz
sbb
xchg
sub
xchg
insl
aad
adc
mov
icebp
mov
ds
shll
add
pop
loop
mov
push
sub
push
aad
loopne
sti
inc
movsb
mov
popf
cmp
adc
rcr
lcall
push
cmp
lret
idiv
mov
inc
push
fstl
das
adc
pop
movsl
stc
popa
inc
lods
cli
sbb
mov
in
jns
mov
in
add
sti
pop
test
sbb
enter
pop
daa
jecxz
push
adc
loope
jge
nop
and
lcall
pop
xchg
js
inc
lods
push
cmpsb
sbb
mov
mov
fdivr
imul
mov
lea
sub
mov
cmp
inc
dec
lock
aas
das
cli
sbb
mov
into
stc
push
mov
xor
jecxz
lods
and
sub
mov
and
mov
sub
dec
mov
sub
pop
sahf
ret
dec
cwtl
movsl
xchg
fistpll
push
mov
js
lret
mov
xchg
inc
cld
xorl
push
std
cmpsl
addb
incl
stc
cmpb
popf
push
loop
or
fldt
rcl
repnz
xor
test
pop
mov
xchg
pop
rol
push
sub
lods
rcrb
sbb
fistps
inc
add
fldcw
iret
mov
sbb
push
xor
in
jecxz
movl
mov
pop
cltd
or
sbb
jnp
lods
mov
arpl
cmp
cli
xor
adc
sub
repnz
or
aam
inc
icebp
add
push
mov
pop
addr16
push
pop
xlat
jb
fildll
jb
sbb
sarl
imul
jns
jae
mov
inc
test
shll
test
xor
push
stos
xchg
xor
sahf
cwtl
lret
adc
out
push
jo
inc
andl
imul
leave
and
sub
sub
or
inc
lret
xor
or
cmp
ss
or
or
jo
jno
add
scas
lods
sub
cmc
repnz
mull
mov
fbstp
aam
ret
dec
cmc
into
rep
sbb
mov
mov
mov
loopne
xor
jg
push
mov
xor
ficoms
pop
mov
and
sub
je
mov
cwtl
lods
push
adc
imul
int3
dec
clc
pop
cmp
les
stos
inc
inc
lret
sub
cli
cmpsl
mov
stos
jbe
movsb
popa
dec
mov
mov
pop
adc
lock
clc
bndldx
inc
sub
inc
cmp
call
lods
jge
iret
and
adc
in
push
aam
mov
xlat
mov
je
and
mov
and
in
ss
hlt
dec
ds
pop
push
xlat
and
dec
out
in
jge
jb
sbb
leave
add
pop
xchg
push
add
das
sub
pop
lea
outsl
cmp
cmp
das
sub
dec
pminsw
pushf
ja
insl
out
push
push
pop
inc
fs
xchg
sbb
adc
rclb
aad
loope
mov
push
mov
inc
and
xchg
xchg
arpl
sub
cs
mov
pop
cmp
dec
add
ss
bound
lret
stc
fsincos
push
aaa
divl
sub
out
sub
cmp
pop
out
xchg
and
xchg
cmp
lahf
mov
lret
or
fdivl
jb
mov
sti
or
mov
repz
xor
push
lahf
sbb
inc
test
mov
shlb
add
mov
push
sub
sbb
mov
icebp
adc
sbb
fidivl
incb
add
pop
rorb
loopne
mov
fdivs
aaa
xchg
and
jno
sub
mov
add
or
aad
xlat
test
mov
and
jno
and
or
in
cltd
adc
out
test
out
jnp
fildll
xor
jne
push
insl
je
sbb
cmpsl
incb
clc
pop
jmp
clc
lahf
mov
xchg
mov
mov
push
jmp
pushf
sbb
adc
dec
imul
sbb
imul
xchg
jl
pop
pop
ljmp
iret
repz
adc
push
mov
icebp
pop
leave
cmp
dec
jae
push
scas
sbb
jmp
add
subl
popa
cmc
jmp
fadd
xchg
xchg
sub
into
movl
imull
mov
insb
sub
insl
call
jecxz
mov
shlb
rorl
xlat
ss
jecxz
mov
mov
mov
dec
loope
jne
in
mov
and
loop
div
inc
pop
lods
lea
xor
mov
not
enter
pop
in
loop
dec
jg
and
lret
cld
mov
sahf
mov
adcb
insl
push
sub
out
or
test
jg
lea
sub
sbb
xchg
inc
shlb
aaa
orl
movsl
inc
sbb
out
pop
fstl
inc
cmp
cmp
mov
sbb
insb
xor
aaa
mov
roll
clc
jmp
pop
and
mov
dec
push
mov
xor
jns
pop
inc
out
paddusw
test
inc
push
mov
loop
sub
jns
pop
subb
jo
mov
out
shrl
adc
scas
dec
mov
cmp
ja
mov
sahf
inc
or
and
mov
mov
xchg
sbb
iret
nop
pop
inc
jns
addl
mov
leave
in
and
rorl
pushf
pop
sarl
insb
sti
mov
and
sbb
add
sbb
negb
cld
repz
mov
addl
roll
insb
jmp
mov
cmp
sub
inc
adc
sbb
jne
push
rcrb
fstl
gs
sub
mov
pop
mov
dec
iret
pop
adc
push
xor
call
lock
adc
into
or
pop
out
and
addr16
mov
adc
pop
mov
add
fistpll
cmp
addr16
jge
mov
ss
and
adc
mov
mov
cwtl
add
in
or
out
ja
fcoms
mov
push
addl
xchg
addr16
jp
int
pop
es
test
adc
push
jmp
push
inc
lahf
mov
cmp
lods
or
loope
mov
and
mov
adc
shlb
sub
mov
jno
cmp
mov
in
and
or
xchg
mov
loopne
jge
sub
inc
fdiv
mov
hlt
lods
mov
add
mov
movsl
mov
into
inc
or
push
fsub
enter
pop
ss
jns
bound
jp
jae
aaa
lods
aaa
pop
pop
jle
test
mov
scas
jge
outsl
jmp
fdivrl
pop
add
adc
clc
repnz
cmp
lea
scas
outsb
add
outsl
push
leave
das
push
shlb
xchg
and
mov
xchg
and
xor
xor
std
pop
mov
in
mov
rorl
les
sbb
lods
mov
out
inc
cwtl
push
fwait
arpl
test
sbb
stc
lds
fstps
outsb
daa
orl
cld
or
testl
ret
push
jo
add
mov
jge
stos
adc
decb
sbb
pop
push
scas
mov
enter
mov
loopne
outsb
jo
rorb
and
mov
dec
mov
shrl
arpl
mov
jmp
popa
fs
sarl
mov
adc
daa
push
sub
mov
pusha
jns
mov
out
jge
mov
call
nop
pusha
mov
movsb
inc
in
cwtl
hlt
mov
imul
incb
cmp
pop
pop
loop
mov
mov
xchg
into
and
rorb
ret
mov
xchg
push
add
add
fst
inc
xchg
repnz
mov
in
adc
nop
cmp
stc
bound
fcomp
int
pushf
xor
add
inc
push
xor
movsl
popf
adc
pop
stc
shll
call
fimull
push
sub
jecxz
push
xor
or
mov
mov
push
cmc
idivl
mov
je
push
loopne
mov
cmp
mov
mov
shlb
stos
or
jl
push
imul
addr16
sbb
insb
loopne
popf
adc
sbb
cmp
pop
mov
test
repz
sub
fadds
cmp
sub
rsm
filds
movsl
cmp
push
hlt
mov
and
cltd
xor
add
push
cmpsl
add
xor
into
shlb
pop
jp
mov
add
shll
add
leave
daa
jl
cmc
pop
repz
fistpl
insl
outsb
fdivr
lahf
xor
jo
mov
daa
sti
push
cs
imul
cmpsl
mov
lods
cli
fs
push
fxch
adc
xchg
pop
pop
jb
repnz
xchg
sub
mov
or
inc
vmovaps
je
sub
aam
imul
push
es
ja
fcoms
mov
xor
push
cmp
and
jne
mov
mov
mov
mov
cmp
adc
xor
inc
adc
jmp
lods
add
lds
gs
addl
pop
or
idivl
std
test
aaa
into
aas
sub
sbb
nop
xchg
adc
stos
aas
mov
xchg
adc
push
int3
pop
pop
nop
push
call
jmp
push
adc
nop
lcall
jle
data16
push
xor
pushf
repnz
xchg
mov
ficoms
mov
mov
lahf
test
push
mov
sub
mov
sbb
add
jmp
cwtl
sbb
popf
stos
cmp
cmc
mov
inc
mull
int
jae
push
and
dec
out
cmc
mov
pop
xor
andl
out
and
test
add
and
dec
sbb
pop
enter
xchg
jl
mul
sub
sub
push
jne
sbb
pop
mov
imul
xor
int3
je
out
dec
aaa
mov
xor
or
pop
add
popf
out
push
aaa
cs
add
incb
pop
seto
or
fsubp
xor
cmp
ret
dec
rcrl
subb
iret
jg
out
idivb
and
movsb
push
je
cmp
mov
sub
out
popa
add
sbb
in
insl
ss
xor
pop
inc
add
pop
push
mov
aad
mov
in
mov
jb
in
scas
dec
mov
xor
and
sbb
and
xchg
fldl
or
sbb
cmpsl
out
or
fdivl
sub
adc
add
ja
pop
add
jle
dec
arpl
add
aam
shrb
and
repz
jge
es
insl
nop
adc
mov
or
mov
pop
push
sbb
lahf
fwait
aas
ret
lret
cmp
cli
xchg
pop
sbb
pop
or
jmp
aaa
fstl
insl
inc
pop
sbb
mov
mov
stc
mov
mov
dec
mov
inc
je
stc
jb
dec
sub
sbb
fdivrs
ret
aam
mov
mov
push
cmc
repz
add
xchg
and
sbb
cwtl
inc
add
int
inc
pop
jnp
push
adc
leave
imul
mov
mov
in
cwtl
fdivrl
mov
out
mov
push
pop
push
sti
jp
lds
dec
in
inc
sbb
loopne
stc
sbb
cmpl
inc
lret
enter
sarb
mov
lahf
lret
scas
lret
pop
and
or
push
sbbb
jmp
or
and
orb
in
test
insb
push
and
shrb
decb
mov
repnz
popl
fwait
push
and
pop
push
mov
mov
inc
int3
or
dec
sub
jns
lret
js
add
or
cmp
scas
cmc
les
sbb
dec
push
jp
sbbl
loop
jle
nop
mov
xor
push
pop
pop
or
aas
jg
pop
cmpl
xchg
mov
test
pop
stos
sbb
fwait
lods
pop
mov
les
lahf
in
pop
cmp
pop
pop
movsl
mov
cmp
xor
add
mov
lret
and
les
lret
stos
rclb
sbb
xorb
mov
daa
gs
inc
jno
xchg
sti
call
inc
inc
mov
shr
mov
mov
repz
js
cli
mov
pop
dec
fidivrs
push
jecxz
add
dec
mov
mov
lock
cmpsl
dec
mov
test
mov
pushf
push
inc
rcl
and
lea
lahf
dec
out
sbb
or
daa
push
mov
mull
dec
subl
mov
push
dec
ret
and
fnstcw
jg
xchg
dec
lds
adc
aas
addl
iret
xor
imul
mov
jne
les
cmc
icebp
and
push
mov
jmp
pop
imul
jae
adc
addr16
and
dec
or
pop
enter
mov
sbb
mov
out
pusha
xor
and
mov
xlat
pop
js
ja
push
sahf
xor
push
in
std
std
add
sbb
dec
pop
ds
jecxz
stc
push
fcoms
int3
inc
sbbl
iret
sbb
cmp
and
inc
gs
out
mov
imul
mov
sub
pop
adc
cmpsb
sbb
mov
ljmp
add
mov
out
adc
dec
fisttpll
std
fs
js
mov
gs
pop
inc
xchg
mov
hlt
loop
sub
outsl
add
ja
mov
notl
imul
test
iret
dec
pusha
lock
and
cmp
inc
and
mov
dec
push
ficoml
push
movsl
test
push
pop
stc
mov
sbb
or
cmp
xchg
adc
xchg
repnz
mov
and
xchg
jl
leave
jl
adc
outsl
fisttpl
jne
fcmove
and
imul
mov
repz
out
les
scas
inc
lods
fwait
sub
add
rclb
imul
inc
push
pop
and
inc
dec
je
adc
repnz
ja
test
push
mov
jp
or
sbb
mov
xchg
inc
mull
fidivrl
aam
pop
push
push
loopne
mov
sbb
lret
add
sbb
mov
int3
pusha
pop
pop
lea
adc
jo
dec
repz
sub
jmp
sub
scas
jmp
mov
cmc
out
stc
adc
sbb
or
sbb
test
pop
dec
cmpsb
mov
les
push
cli
jmp
add
push
sti
test
jmp
lods
xchg
dec
sub
xor
fwait
lret
add
sbb
enter
std
pop
inc
sub
into
jmp
xor
cmp
test
mulb
or
in
xchg
push
repnz
enter
jne
aad
xchg
push
mov
lods
cmp
data16
es
inc
cmp
sahf
pop
in
cwtl
adc
and
mov
push
or
adc
insl
loop
ret
push
sbb
mov
jnp
jo
sub
inc
je
cmpsl
or
ja
adc
orl
pusha
inc
xor
adc
les
in
adc
mov
pusha
movsl
clc
fucomp
in
fidivl
lahf
testb
xor
mov
sub
repnz
inc
stc
notl
and
xchg
fidivl
mov
mov
aad
inc
xor
or
and
fwait
stos
mov
sub
shl
jecxz
into
pusha
nop
adc
in
negb
xor
icebp
es
mov
pop
test
sub
imul
dec
jno
adc
dec
out
pop
push
aad
mov
loop
pop
ficompl
xor
in
cmp
rcrl
test
jbe
dec
jae
pop
mov
in
into
inc
fldcw
add
mov
pop
cmp
mov
jae
add
jg
cs
inc
pusha
mov
popf
mov
ljmp
mov
mov
mov
xor
ja
lcall
sbb
dec
hlt
sub
pop
adc
push
jne
mov
sbb
dec
in
push
adc
in
or
mov
push
gs
lods
add
fstps
fsubrl
jmp
stos
test
inc
mov
push
cmp
inc
in
aad
sahf
and
mov
add
add
push
xchg
and
pushl
lods
popa
mov
jecxz
into
push
dec
mov
insb
dec
popf
dec
add
pop
pop
imul
sub
pop
mov
arpl
stos
and
sti
inc
mov
lret
lds
loopne
jno
and
imul
out
inc
leave
add
mov
inc
xchg
or
les
ret
mov
or
stos
call
dec
sub
lods
ficomps
cmp
lods
lods
dec
pop
std
lret
adc
adc
ret
adc
icebp
loop
icebp
out
jae
mov
insb
xchg
pop
subl
inc
and
mov
fcompl
addr16
insb
in
shrb
vmwrite
mov
mov
or
cmp
rcrb
add
nop
cmc
fisubl
xor
data16
and
jne
xor
jg
ljmp
and
into
adc
xchg
sbbl
hlt
ljmp
xor
mov
fisttpll
iret
out
jl
jecxz
inc
push
imul
mov
mov
ret
loope
mov
notl
bound
lret
cltd
lds
cwtl
push
repz
xchg
add
sbb
sbb
gs
and
shll
ds
inc
lods
sbb
insl
cmp
xchg
push
xchg
mov
pop
lea
das
call
cmpl
mov
shll
add
out
in
mov
rorl
lret
dec
cmpl
js
or
in
inc
pop
add
jl
fsubrs
repz
mov
enter
out
mov
dec
mov
mov
lea
mov
pop
fsubr
stc
sti
aad
aas
inc
test
jo
roll
jne
lcall
movsl
lahf
mov
fisubl
sub
push
xlat
sbb
pusha
sub
imul
push
xor
dec
inc
fucomip
mov
sbb
pushf
push
xchg
cltd
ret
xchg
pop
dec
adc
loopne
in
xchg
in
lcall
cmp
std
sbb
lret
mov
mov
pop
mov
daa
cmp
xchg
shlb
es
adc
test
jmp
add
jp
inc
pop
mov
jle
xor
push
mov
and
sub
lcall
cltd
or
xchg
sbbl
ss
xor
xchg
sbb
fistpll
push
gs
mov
and
mov
sahf
jbe
or
addr16
dec
inc
inc
mov
test
inc
add
scas
cmpsl
jnp
adc
negb
pop
add
mov
insb
aam
inc
dec
mov
pop
and
mov
ds
stos
cmp
fwait
xor
pushl
ja
pushf
popa
mov
inc
xchg
push
cld
dec
imul
cli
cltd
xorl
inc
xchg
jmp
sbb
or
push
and
bound
adc
sbb
mov
repz
mov
aad
fsubl
pop
sub
sbb
fnsave
lahf
mov
jno
ljmp
cmp
push
mov
call
push
push
fwait
pop
sahf
adc
fwait
fs
mov
xor
and
mov
loopne
or
lea
ffree
imul
movl
pop
roll
mov
call
jbe
cli
xor
pop
out
into
jmp
cli
fmuls
cmp
or
cmp
push
jl
pop
xor
fs
arpl
dec
mov
lcall
jo
nop
dec
mov
in
xchg
pop
push
or
into
cld
es
jnp
and
sub
pop
test
add
cmp
jl
xlat
cmp
loop
daa
ret
inc
out
or
mov
add
mov
sbbl
mov
push
push
inc
jmp
movsl
mov
into
lahf
push
ljmp
shlb
testb
scas
sub
cmp
movb
mov
imul
lcall
xor
adc
sub
mov
pop
loop
arpl
adc
into
bound
cld
movsb
sbb
cmp
int3
loope
fidivrs
push
insl
movsl
test
pop
arpl
sub
ret
cmc
jmp
sbb
in
jge
cmp
dec
fwait
sbb
jns
aas
aam
jnp
add
ret
arpl
test
call
je
cmc
sub
cmc
inc
stos
sub
push
flds
aas
fimuls
clc
push
push
pushf
cmp
fdivs
add
xchg
xchg
arpl
pop
stos
ljmp
in
lea
add
rcll
repz
jnp
inc
lret
repz
out
mov
in
hlt
push
rclb
or
push
sbb
insl
xor
dec
bnd
testl
adc
sbb
scas
out
xchg
and
les
cmpsl
iret
stc
or
loop
sbb
mov
int
rorb
mov
ss
stc
pushf
popf
enter
inc
lock
in
cmpsb
push
ja
jmp
push
sub
jmp
movsb
int
rcl
das
xchg
cmpsl
add
fsubrl
inc
rorl
sbb
jo
cmp
and
aaa
loop
mov
loop
enter
out
push
and
push
cmp
je
jno
add
xchg
pop
lods
dec
jge
data16
xorb
mov
mov
jmp
push
xor
pop
or
stos
mov
fisttps
jnp
iret
pushf
shll
stos
sbb
fildl
mov
xor
imul
clc
xchg
lods
call
and
lea
inc
push
mov
in
sbb
adc
xor
mov
mov
dec
sahf
out
call
push
movsl
sub
sar
mov
add
pop
les
dec
roll
rorb
dec
in
dec
dec
inc
and
mov
mov
xchg
sbb
inc
popf
ja
mov
daa
gs
mov
stos
adc
pop
dec
jb
lahf
cmp
hlt
push
cltd
ja
cltd
popf
orb
js
movsb
shll
jp
add
jp
or
fcmove
stos
into
and
pop
pop
mov
xor
test
mov
dec
lds
push
jge
mov
arpl
test
push
mov
inc
sub
push
into
jo
aam
fldt
addr16
push
push
mov
jno
roll
dec
loop
sub
shrb
stc
sbb
test
divl
rorl
sbb
xlat
test
loop
outsb
int3
jbe
push
jl
cld
rcl
jmp
out
and
in
cmp
sub
jae
aaa
dec
daa
lret
repz
fsubr
iret
fwait
pop
xor
gs
popf
aad
daa
es
fldl2t
lahf
bound
repz
or
das
mov
clc
popa
mov
mov
xchg
adc
adc
sti
pop
jmp
mov
decb
flds
cmp
fldcw
pop
call
clc
fdivrl
mov
movsb
push
lock
in
adc
mov
sub
jecxz
cmc
inc
dec
cmp
push
ss
rcl
mov
loop
pop
xchg
add
out
and
fbstp
jne
stos
sarl
mov
jge
arpl
shl
jnp
data16
jge
out
jp
dec
sub
cmp
rcrb
or
inc
mov
out
add
pop
lret
or
xor
jns
ss
repz
sub
outsl
sbb
in
aam
addr16
imul
fwait
add
jns
jle
jbe
jbe
cli
clc
xchg
and
inc
int3
arpl
hlt
insb
sar
ret
jne
mov
leave
push
or
ljmp
cmp
stos
ss
bound
mov
pop
shr
sub
inc
fsubrl
push
xor
je
or
stos
out
sub
aad
cmpsl
inc
add
out
in
jle
inc
rorl
aaa
insl
pop
sahf
dec
push
mov
ljmp
push
gs
and
dec
scas
dec
xor
iret
pop
pop
pusha
sbb
adc
add
inc
cli
divb
scas
pop
push
roll
xor
insl
xchg
xchg
cmp
pusha
xchg
pop
loop
in
sub
je
test
xor
push
xor
or
sbbb
sub
movsl
mov
test
jge
andl
out
roll
xchg
jae
mov
mov
pop
cmpsl
sbb
add
mov
popf
or
jne
pop
adc
popa
in
lds
sub
sbb
mov
test
movsb
push
push
dec
loop
test
jbe
cmp
andb
jnp
mov
out
hlt
lods
dec
hlt
xchg
ret
sbb
and
fs
cmp
mov
das
or
xor
pop
addr16
inc
and
in
xchg
popl
mov
mov
cmp
mov
jae
imul
ljmp
adc
and
int3
dec
adc
lcall
scas
push
xchg
mov
cmp
inc
rclb
js
sbbb
fiadds
mov
cmpsb
mov
and
out
mov
push
inc
jle
adc
pop
mov
sarb
mov
in
and
rcrb
in
sbb
dec
js
push
adc
jl
sarb
push
dec
cmp
test
xor
bound
push
dec
jo
int3
xorb
dec
icebp
div
jbe
push
xor
pop
and
mov
movsb
repnz
jge
or
mov
xor
mov
sbb
sub
sub
in
repnz
jnp
xor
lret
mov
shll
cltd
mov
push
out
inc
mov
loopne
nop
js
and
ljmp
xor
xor
cmp
push
xlat
pop
fistl
xlat
mov
pop
mov
or
dec
jl
jns
mov
pop
sub
add
stos
popf
icebp
je
shrl
pop
notl
cld
lods
cmpsl
push
and
notl
push
add
icebp
adc
sub
xor
cmp
xchg
popa
sarl
andl
sbb
call
cmp
popa
leave
cltd
adc
mov
and
mov
insb
inc
lahf
test
into
push
ds
in
loop
es
in
xchg
loope
in
fwait
cmc
add
test
xchg
aam
xchg
shl
aas
fadds
lcall
xor
mov
mov
movsb
loopne
mov
out
and
dec
bound
ret
xor
outsb
push
mov
sub
cmpsb
jnp
inc
xor
hlt
add
mov
fs
testl
add
cmp
lcall
cmpsl
mov
cltd
fiadds
xor
nop
jge
das
outsl
mov
outsl
dec
push
pop
xchg
sub
inc
inc
inc
pushf
xor
lret
lods
lcall
dec
f2xm1
fiaddl
pusha
cmpsb
push
adc
cmp
lcall
cli
mov
pop
hlt
pop
test
pop
pop
leave
in
cltd
lds
popa
push
cli
mov
shrl
inc
and
dec
mov
inc
mov
daa
cld
dec
mulb
mov
decl
mov
mov
int3
jl
pop
rol
imul
inc
push
inc
std
push
mov
lret
xor
ret
inc
scas
bound
inc
cs
repz
inc
mov
ljmp
daa
ret
out
push
lahf
fs
je
fmul
mov
aaa
inc
cs
shlb
and
sbb
sbb
lret
sub
lcall
int
sarl
cs
mov
jecxz
lretw
cmp
dec
jmp
lahf
les
mov
or
nop
jbe
sarl
mov
aam
out
enter
sub
lcall
mov
test
jl
out
pusha
mov
adc
mov
ret
icebp
push
lods
arpl
sbbl
jnp
in
mov
mov
cmp
mov
test
adc
pop
fistl
pusha
mov
and
in
xor
idivb
mov
lods
cwtl
pop
stos
mov
aas
outsb
xor
push
cltd
andb
inc
mov
rorl
popf
icebp
adc
arpl
dec
test
push
sub
hlt
cmc
push
test
jb
adc
push
lahf
subl
xchg
and
and
pop
pop
lahf
inc
leave
push
push
sbb
sbb
jo
jns
sub
shll
ret
scas
andl
jl
nop
jge
jmp
leave
in
dec
inc
cwtl
adc
in
pop
pop
pop
ret
push
jb
lcall
cmp
push
icebp
mov
aad
dec
fstl
cmc
jns
arpl
adc
pushf
mul
aad
sub
bsf
in
jmp
jno
ret
loopne
adc
and
ljmp
push
sahf
jmp
jmp
mov
divl
cmp
jge
fnstenv
mov
lods
clc
sti
push
cmp
iret
and
or
push
jb
ds
pop
adc
and
dec
bound
cmp
jl
enter
pop
push
sbb
inc
add
loope
push
add
jne
jmp
pop
adc
mov
mov
popf
xchg
adc
fnstenv
mov
ss
fcmovu
mov
inc
fisttpl
leave
call
shlb
inc
pop
sub
cmp
mov
and
add
push
test
repz
mov
cs
imul
mov
push
lea
daa
mov
inc
inc
add
mov
jmp
cld
cmp
repz
in
dec
shr
outsb
cmp
pop
inc
insb
push
mov
jb
iret
sbb
or
jmp
cmpsb
not
and
incb
sbb
ja
inc
mov
cmpsb
ret
fldenv
out
xor
idiv
lock
call
mov
pop
push
mov
testb
xchg
dec
inc
stos
or
fidivrl
shrl
sbb
ret
pop
pop
enter
sub
cmp
push
scas
imul
sbb
movsl
inc
nop
stos
scas
mov
and
push
and
mov
dec
xor
and
icebp
mov
mov
jg
imul
fadd
test
xlat
jbe
repz
inc
xlat
jmp
or
ja
xchg
jge
xor
mov
gs
out
repnz
pop
push
fiadds
mov
es
insb
outsl
push
int3
xchg
enter
push
iret
mov
xchg
fwait
mov
jmp
fstpl
in
loopne
das
xchg
jo
and
sub
dec
mov
sub
arpl
pushf
and
mov
xor
inc
popa
sahf
push
in
jnp
cmp
jle
leave
xchg
cmc
sub
sbb
loop
pop
and
test
scas
popl
xchg
inc
add
inc
imul
fldenv
inc
jbe
arpl
mov
ljmp
das
pop
outsl
mov
fnsave
adc
loope
xor
jl
dec
dec
bound
outsl
repnz
add
cmpsl
popf
dec
inc
xchg
int
outsl
stos
push
xor
xchg
or
aaa
mov
xchg
xchg
xchg
leave
pop
mov
lock
inc
dec
jae
fldcw
fucomip
inc
sub
scas
xor
fidivs
lret
mov
rorb
push
push
dec
dec
add
pushf
mov
sbb
or
cltd
inc
repz
push
xchg
xchg
mov
push
ja
test
enter
pushf
in
or
xchg
test
mov
into
add
rcr
lret
mulb
addr16
fbstp
cmpl
icebp
adc
mov
push
pop
fcompl
loope
mov
cmp
mov
lock
xchg
imul
hlt
iret
mov
xchg
add
push
cmpsb
in
jge
dec
dec
pop
push
js
adc
bound
push
int
out
or
les
inc
push
rorb
jp
cmc
mov
add
jb
inc
call
mov
push
dec
cmp
sbb
dec
sub
pop
sbb
mov
pop
xchg
xchg
xchg
dec
ror
fnsave
push
pop
mov
jge
sbb
mov
sbb
std
inc
scas
aas
pop
fwait
xchg
pusha
sti
outsb
pop
mov
stos
cmp
and
dec
out
shll
les
scas
mov
loope
ucomiss
sub
in
int3
pop
pusha
mov
cmp
mov
andb
out
adc
fisttps
add
push
mov
repnz
sub
inc
xchg
cmp
sti
add
cmp
add
mov
dec
divb
sub
push
shrb
jp
push
mov
xchg
stos
ljmp
fldenv
imul
mov
jnp
add
dec
mov
shll
aam
incl
pop
push
scas
mov
cli
fs
orl
pop
inc
call
dec
rorl
jnp
push
lods
add
popf
fiaddl
sub
fcomps
jge
loope
add
stos
adc
mov
inc
ljmp
sbb
and
ss
mov
xchg
in
cltd
sbb
cmp
inc
movsb
jle
mov
pop
cmp
pop
popa
or
fstl
test
cld
jmp
sub
push
and
mov
rcll
push
stc
or
test
and
xchg
pop
adc
repz
cmp
fs
sti
lret
ljmp
pop
call
scas
jne
ss
xchg
mov
xchg
stos
negl
push
jle
es
mov
jns
shrb
fmulp
and
movsb
ss
pusha
test
pop
lahf
std
ds
pop
push
mov
pushf
aad
nop
les
call
insl
andl
jnp
xor
lcall
jo
mov
adc
loope
sub
inc
loopne
lock
add
ss
sbb
xchg
lret
shrb
adc
ds
sbb
sbb
arpl
mov
sub
sub
in
shlb
jnp
data16
mov
lods
loop
cmpsb
mov
psubw
ret
and
cltd
inc
mov
sub
xor
xor
sbb
xlat
sbb
iret
dec
flds
mov
shr
ret
push
out
out
enter
mov
add
pop
xchg
push
xor
add
push
xchg
add
sub
das
jnp
and
add
jns
lret
shll
in
rcrb
fidivrs
xor
or
sarl
xor
xchg
cmpsl
mov
data16
rcrl
mov
lret
js
mov
xor
cmp
xchg
adc
dec
jmp
jo
adc
cld
cmp
ret
cltd
or
fisubl
lods
and
popa
xchg
cmpb
push
mov
cmp
push
ficoml
cmp
sahf
mov
adc
pop
or
popf
xor
jno
jne
push
test
and
xchg
fstpl
outsb
outsl
pusha
ret
test
adc
push
mov
jo
pusha
sub
in
sbb
and
stos
jns
test
insl
mov
adc
jge
jns
out
jb
subb
sarl
add
mov
ficomps
insb
jmp
or
gs
ljmp
and
imul
sbb
and
lds
lahf
int
mov
repz
insb
ljmp
xor
xchg
mov
xchg
js
push
mov
mov
and
jl
pop
cltd
cmp
call
ja
out
cmp
andl
or
cld
adc
ljmp
test
or
push
pop
jge
sti
push
add
xor
shll
and
pop
xchg
notb
aad
push
xchg
sbb
xor
cmp
sub
xchg
cli
pop
add
js
rcll
cmp
leave
ds
fistps
cmpsb
insl
das
add
adcb
add
loopne
rorb
sbbb
pop
pop
and
sbb
dec
andl
fidivl
mov
push
out
in
sub
std
lcall
push
push
or
dec
fucomp
mov
aas
jecxz
gs
mov
cmp
cmc
pop
inc
stos
inc
cmovns
enter
scas
fsubr
mov
movntq
out
ret
inc
cmp
popa
push
idivb
inc
sub
ret
or
mov
sub
sbb
mov
aam
mov
xchg
sub
dec
push
shlb
loop
dec
push
test
aad
dec
fistps
jno
mov
out
lahf
mov
cwtl
and
jno
cmp
ficompl
or
add
call
push
ss
xor
js
sbb
and
shlb
mov
mov
adc
lahf
jo
add
dec
in
outsb
mov
mov
inc
les
js
inc
test
sbb
add
pop
iret
cli
cs
pop
loop
mov
add
pusha
in
inc
jg
inc
out
xchg
push
mov
lcall
cltd
cmp
shr
mov
les
and
inc
mov
dec
cmc
xor
mov
int
xor
into
repz
mov
sbb
mov
cmp
cmp
jne
cmp
adc
jno
add
iret
cli
ja
jp
push
out
pop
lods
je
pop
xor
fldt
push
scas
lods
cmp
ja
pop
cli
sub
xorb
xchg
iret
jle
test
xlat
inc
aas
int
xchg
jge
fcomps
sub
jmp
mov
mov
mov
xor
dec
data16
sub
mov
aad
rcrb
cs
push
mov
fdivs
pop
notb
movsl
pop
add
sub
icebp
scas
imul
xor
jp
xchg
es
inc
push
jb
test
or
orl
shlb
roll
sahf
fildll
xchg
lcall
enter
pop
repz
jecxz
in
fs
in
gs
cmc
xor
aad
pop
movsl
cmp
dec
xchg
imul
dec
mov
nop
call
insb
mov
in
mov
das
xchg
inc
fildll
jns
inc
xlat
loope
cs
lds
inc
xchg
jbe
add
lret
dec
sbb
pop
out
leave
ja
cld
int3
fs
adc
clc
xlat
jbe
test
lahf
test
or
jbe
sbb
dec
mov
je
adc
scas
jns
mov
sti
cmp
ficoml
add
add
cmpsl
pop
push
mov
scas
cmp
ret
stos
movsl
cmpsb
dec
mov
imul
pusha
movsl
mov
pop
das
xor
inc
jg
and
ret
arpl
insb
sub
jns
sbb
xor
xchg
mov
push
loopne
ljmp
testb
push
and
out
add
lret
or
mov
cmpsl
push
sbb
rcl
push
mov
imul
out
ret
adc
jbe
push
mov
inc
mov
xchg
xchg
adc
pop
push
icebp
es
mov
out
ror
cltd
jge
cmp
and
leave
mov
push
pop
insl
jmp
fwait
xchg
cmp
in
mov
mov
pop
aas
jecxz
cwtl
mov
fldt
cmp
cmpsb
adcb
mov
mov
add
les
xor
push
rcr
cltd
repz
inc
sbb
aaa
sub
push
ret
ds
setp
outsl
push
dec
dec
inc
mov
pop
xchg
nop
pusha
xchg
mov
push
sub
mov
pushf
cmp
fistps
mov
lcall
cmp
out
arpl
sub
pushf
fincstp
repz
pop
adc
xchg
sub
clc
daa
ret
mov
push
rcl
sub
mov
or
cmp
xlat
lods
fsubrs
lret
ljmp
sub
push
ret
inc
loope
mov
mov
jno
cmpsw
sbb
scas
lret
and
sarb
pop
or
popf
outsb
xchg
or
in
xchg
push
pop
lds
leave
push
dec
add
ret
mov
mov
aad
cmp
ret
pop
fcomps
pushf
pop
inc
push
lock
cmp
fwait
mov
test
and
sbb
loop
bound
cld
jnp
add
imul
push
sub
adc
xor
nop
mov
xchg
in
sti
jb
inc
pop
stos
ret
movl
fwait
dec
jle
das
ret
adc
scas
push
or
stos
dec
push
mov
popa
push
rcrb
jae
push
xlat
addl
sub
cmp
scas
xchg
add
jecxz
icebp
in
std
cwtl
dec
cmp
mov
leave
xor
xlat
cmpb
push
inc
loope
inc
je
sbb
or
cld
inc
outsb
outsl
mov
psubq
pop
insb
xor
subl
imul
stos
loopne
inc
lds
test
or
roll
xor
hlt
dec
add
cs
cmp
inc
dec
jle
scas
repz
les
sbb
cs
push
sbbb
xchg
pop
sub
je
xchg
cmpsb
mov
jb
push
xor
dec
test
cmp
insl
in
test
push
scas
call
xor
pslld
cli
aaa
xor
sbb
pop
mov
jge
into
jge
lock
jne
test
xchg
jge
das
pop
and
scas
xor
jg
dec
xlat
aas
xchg
xchg
mov
cs
std
test
adc
cmp
clc
pop
mov
pop
ljmp
mov
sub
adc
pop
fwait
mov
stc
jno
nop
pusha
jp
mov
mov
sub
pop
adc
inc
test
inc
mov
inc
add
sti
mov
mov
dec
out
sti
hlt
or
sub
lds
loopne
mov
xor
fstpl
and
cli
frstor
mov
jl
out
and
lcall
in
cmp
sti
adc
jecxz
mov
mov
xor
pop
dec
push
fucom
es
mov
or
or
xchg
xchg
dec
jecxz
sub
aaa
mov
leave
add
inc
adc
and
mov
xchg
mov
lods
add
inc
push
lods
and
fldcw
cli
jge
mov
xchg
cmc
aad
int3
push
leave
repnz
mov
adc
stos
lahf
pop
push
insb
aaa
mov
mov
dec
mov
into
in
int
adc
push
pop
test
mov
push
popw
or
mov
addr16
decb
mov
loopne
cmp
pushf
lods
inc
cmp
push
or
cmp
lods
fisubl
or
inc
or
jo
jo
lret
loop
inc
mov
jle
cmpsb
sbb
xor
pop
push
push
mov
pushf
rclb
idivb
pop
xor
cld
aam
pop
or
mov
push
pop
mov
dec
imul
in
in
mov
pop
fwait
mov
mov
pop
cmpsb
dec
xor
xor
add
scas
mov
and
imul
roll
jae
lock
dec
in
and
outsb
data16
dec
cmc
arpl
pusha
daa
mov
cli
je
or
lock
push
sar
pop
add
mov
stos
jnp
scas
scas
inc
sbb
in
and
sbb
push
orl
jp
iret
pop
dec
pop
mov
ss
dec
adc
mov
std
addr16
sub
push
fnstcw
fcomp
xchg
pushf
sbb
sub
and
push
inc
in
and
int3
adc
inc
push
mov
adc
sbb
rcll
lahf
pop
adcb
jae
adc
inc
dec
outsb
add
mov
adc
and
or
inc
repz
fcom
lret
push
push
pop
out
arpl
cmp
cld
xchg
cmp
rcrb
pop
sub
clc
inc
xor
insl
dec
shll
adc
xor
in
add
dec
jge
mov
nop
cwtl
mov
adc
imul
loopne
inc
cwtl
xchg
adc
mov
notb
mov
out
xlat
adc
rcl
cmp
js
rcrl
test
bound
pushl
or
dec
lock
pusha
test
mov
js
adc
subb
ret
out
fstl
dec
in
dec
rcrl
jge
jae
scas
int3
mov
insb
fcmove
mov
jg
cmp
lret
out
shlb
sahf
cmp
das
jnp
jbe
xchg
addr16
inc
jmp
pop
add
jl
testb
in
push
cmp
je
sub
jnp
pop
xor
fwait
outsb
push
je
push
cmp
xchg
addb
jno
or
jae
mov
adc
and
cmp
push
sbb
sub
mov
mov
hlt
sbb
test
repnz
adc
popa
cmp
nop
or
in
xchg
cs
mov
sti
aas
cmp
das
pop
xchg
dec
jecxz
sbb
jge
push
cmp
sub
sbb
sbbb
cmpsl
jge
xor
push
push
dec
test
or
aas
cwtl
adc
rcr
std
push
inc
xlat
mov
xor
xlat
cmp
inc
adc
repz
rcl
enter
shl
xchg
popa
repnz
sub
sbb
cld
aaa
lret
push
adc
add
lock
mov
or
ss
mov
imul
push
sti
clc
popf
lds
popa
and
jecxz
pop
xor
loope
jb
xor
inc
mov
mov
repnz
jg
cmpsl
cmp
ret
inc
jne
vandnps
mov
in
push
lods
lods
out
movsl
hlt
cmp
sub
fnstsw
adc
mov
mov
adc
mov
xor
pop
lea
xor
cmp
aas
xchg
pushf
das
push
mov
mov
std
into
xchg
sarb
repz
jge
fwait
pop
daa
dec
les
push
mov
mov
inc
inc
sbb
js
lock
sub
push
cmp
loop
sbb
fmull
jbe
mov
ss
inc
xchg
mov
fwait
cli
int
in
sahf
push
movsb
push
cmp
mov
push
inc
add
dec
pop
test
scas
int
loope
sbb
insl
out
sarl
lods
lcall
leave
jp
mov
jge
mov
cmp
push
xor
cmp
xchg
cmpsb
and
jl
pop
movsb
rolb
aam
or
sub
out
push
dec
shll
in
jbe
rclb
pop
xchg
cs
sbb
out
movsb
cmp
xchg
out
xchg
xchg
mov
in
outsb
or
rcll
das
inc
mov
dec
xchg
movb
xor
daa
jo
icebp
mov
xchg
adc
jecxz
std
adc
cmp
mov
inc
rcrl
dec
daa
es
mov
xchg
jae
push
push
pop
addr16
gs
add
add
push
xchg
and
repnz
sub
mov
push
xor
sbb
lock
aam
jo
cmp
cmp
inc
imul
sub
adc
sub
cld
gs
ret
in
sbb
stc
aad
test
cmp
and
add
mov
addl
xchg
loop
push
in
les
sbb
mov
pop
call
mov
xlat
out
inc
je
or
push
mov
cmpsl
mov
push
xchg
add
pop
clc
pop
inc
xchg
mov
leave
ja
out
jle
cmpsl
cs
xor
jl
ret
pop
clc
push
jnp
mov
enter
sub
mov
mov
jmp
xchg
sbb
push
lods
aad
repz
insb
shr
mov
sbbl
mov
inc
fisttpl
xor
sbb
inc
mov
inc
lods
cmp
out
cs
sbb
daa
and
adc
daa
cmp
and
sub
cmpsb
sub
add
in
sub
mov
movsb
sbb
mov
and
mov
inc
fisubs
cld
mov
jecxz
fdivrs
mov
cwtl
sub
imul
repnz
movsl
mov
cld
aam
hlt
loopne
mov
inc
cmp
inc
ja
repnz
shll
mov
pushf
andl
lcall
jns
push
xor
mov
dec
or
or
stos
inc
push
mov
inc
sub
sbb
dec
sbb
repz
jnp
push
jb
cmp
les
pop
cmp
or
mov
mov
clc
iret
cmp
orl
in
pop
push
mov
lds
push
cli
paddusb
pushf
mov
ss
cmp
xchg
scas
xor
daa
in
in
mov
jo
and
pushf
sti
cmc
push
jle
xor
and
je
mov
popf
push
ljmp
mov
pop
dec
xor
ds
mov
sbb
imul
pop
mov
fisttps
and
movsb
sub
mov
cmpsl
jle
stos
xor
cmc
mov
mov
inc
push
movsb
cltd
xor
pavgw
lret
lea
mov
adc
xor
dec
cmp
sahf
int
or
adc
pop
out
outsb
or
fs
cmp
call
or
xor
xlat
pop
out
mov
mov
es
rcll
cmp
mov
inc
xchg
inc
sbb
add
xor
push
add
push
outsb
and
mov
insl
xor
dec
stc
ja
cmp
call
pmaxsw
inc
mov
mov
sbb
inc
dec
lds
and
pop
or
sub
push
out
adc
pop
rorl
mov
dec
sti
call
xchg
repnz
insl
or
cmp
aad
mov
fcmovnu
in
inc
mov
push
jbe
pop
and
rcrl
mov
add
push
add
rcrw
out
inc
inc
and
xor
pop
cmp
sub
add
stos
fsubs
and
pop
sub
jo
sbb
lea
daa
notl
sbb
adc
fidivs
inc
fldl
and
pop
out
push
sbb
cmp
out
cmc
cwtl
outsl
inc
rcrl
mov
shlb
xor
leave
sub
loope
dec
add
dec
outsb
pop
insl
pop
clc
fcmovu
adc
pushf
push
xlat
jne
lea
subl
inc
jo
icebp
mov
sbb
push
sbb
push
pop
gs
clc
add
daa
pop
icebp
fstl
cltd
pop
dec
iret
or
inc
stc
push
cmpsb
push
adc
sub
and
jl
mov
aad
dec
int3
cmp
mov
pop
inc
mov
stos
sbb
cmp
div
adc
mov
push
or
jno
cli
loope
xchg
in
insb
push
cmp
mov
pop
jbe
test
in
dec
lcall
cmpsl
je
cmp
arpl
scas
mov
imul
fildl
cmp
mov
cmpsb
cmp
and
pop
mov
push
pop
jmp
shr
jmp
adc
mov
scas
xchg
out
scas
jecxz
xchg
mov
fsubr
inc
xchg
mov
cmp
xchg
cli
xlat
jecxz
xor
insl
enter
aas
lret
daa
jns
add
pop
push
data16
loopne
jmp
or
pushf
in
sub
pop
addl
pop
arpl
fimull
insb
jns
ja
inc
sbb
leave
jae
inc
add
mov
push
jle
pop
pop
js
dec
in
gs
xor
ljmp
call
push
adc
sbb
cmp
fwait
je
mov
aas
inc
push
cld
std
mov
xchg
shlb
insl
jno
or
dec
mov
pusha
jecxz
jnp
xor
dec
inc
into
lds
mov
testb
arpl
inc
subps
jns
rcll
pushf
jno
insl
inc
adc
ds
cmp
ret
sbb
out
in
mov
int3
or
sub
icebp
lods
repnz
xchg
sub
pop
outsl
mov
cmp
mov
cmp
sub
dec
xchg
add
pop
popa
fs
jnp
jbe
pushf
cmp
je
pop
xchg
pop
mov
ror
mov
divb
loopne
fisubrs
sub
imul
mov
arpl
add
and
mov
dec
add
repz
pop
dec
jnp
cmp
xor
imul
fidivrs
outsb
mov
test
outsb
mov
push
xchg
ret
popa
cmpsb
sbb
xchg
jae
out
iret
repnz
test
xchg
pop
mov
cltd
xor
push
out
sarb
lods
adc
dec
xchg
cmp
fnsave
jno
push
stos
xor
mov
add
and
xchg
ss
arpl
jp
cmp
movsl
repz
jo
aaa
mov
mov
nop/reserved
sub
dec
mov
das
and
jmp
mov
mov
repnz
and
out
into
movsl
push
inc
jecxz
lock
add
sbb
shll
sub
and
in
sbb
and
pushf
ret
adc
pusha
cmp
in
add
adc
inc
adc
js
or
stc
and
push
cli
in
mov
jno
ret
jmp
mov
push
or
xchg
fsts
or
in
push
cmpl
pop
je
loope
stos
sub
xchg
or
or
lods
push
pop
fiaddl
cmp
aas
sub
mov
mov
js
addr16
and
push
jbe
mov
mov
mov
in
inc
jg
insb
add
rolb
mov
sub
mov
jne
sub
imul
setbe
idivl
jmp
cmp
out
add
and
mov
adc
mov
jne
lds
cmc
je
xor
dec
push
enter
add
xchg
lret
adc
inc
mov
inc
bswap
adc
xor
mov
outsl
arpl
les
int
xchg
ret
testl
push
xchg
cmp
loop
cmp
leave
mov
lcall
addr16
in
stc
mov
jns
out
ja
adc
inc
jl
loop
xor
adc
mov
test
push
les
pop
lock
cmp
sbb
or
push
repnz
pop
ds
insb
arpl
fnsave
mov
sub
push
insb
shlb
sahf
cmp
mov
cmc
dec
pop
and
movsl
aam
mov
xchg
movsb
sbb
adc
adc
push
push
test
sbb
push
sbb
sub
dec
dec
movsl
sub
sbb
test
mov
cmp
push
into
scas
xchg
inc
mov
hlt
into
push
add
repz
inc
mov
in
in
xchg
jo
mov
arpl
mov
es
movsb
orl
pop
jmp
bnd
pop
xchg
es
arpl
test
sub
push
push
dec
out
jne
mov
clc
xchg
cmp
ficompl
jne
or
ja
das
pop
jbe
jns
add
push
insb
inc
outsl
sub
xor
rclb
sbb
xchg
cltd
movsb
dec
cld
adc
xchg
out
xor
fucomi
arpl
add
mov
data16
daa
inc
push
xchg
xor
mov
subl
and
fmull
or
stos
and
dec
xor
jns
dec
je
push
push
jg
mov
mov
cmp
mov
in
notl
pop
fsubrp
imul
sbb
lods
inc
fnstenv
sbb
orb
fcmovnu
dec
push
in
test
fimull
dec
mov
push
sbb
pop
mov
xor
or
or
bound
push
mov
pop
mov
fsubl
mov
test
cltd
out
mov
dec
ss
jmp
into
push
lea
out
repnz
cmp
jae
mov
out
into
jmp
mov
add
mov
aaa
pop
push
add
shll
shr
jle
or
pop
and
mov
push
mov
xchg
lret
add
adc
stos
test
popa
les
jge
sub
mov
dec
push
cwtl
or
out
call
lds
scas
scas
cld
mov
mov
hlt
or
sbb
sahf
aad
pop
add
insl
aaa
ljmp
xchg
mul
ficompl
pop
rcrl
xchg
shrb
fildl
in
sub
push
fwait
push
fildl
mov
xor
shll
dec
fwait
jns
mov
add
jg
fidivl
hlt
mov
fstpt
jno
mov
xchg
mov
jmp
aaa
lods
bound
cwtl
push
pop
sti
inc
into
push
leave
in
lret
es
pop
fisttpll
mov
pop
rcrl
lock
in
ja
mov
sbb
lahf
mov
out
std
shrb
test
xchg
adc
incl
mov
add
mov
aad
mov
shr
leave
mov
inc
cld
adc
iret
mov
mull
xchg
aam
mov
mov
dec
adc
fcomps
xor
inc
jecxz
in
ss
stos
xchg
sub
jae
lds
insb
adc
dec
mov
es
jl
mov
aas
add
into
xor
nop
and
cli
inc
pop
xchg
ss
add
nop
vpor
cs
xor
push
push
imul
cmp
sbb
xchg
add
js
push
add
and
into
xchg
imull
cmp
sbbl
inc
aaa
cmp
subb
out
xor
or
dec
push
jo
sarb
int
outsb
cmp
push
xor
icebp
dec
add
inc
add
popl
outsl
ljmp
insb
aam
dec
xchg
jle
stos
mov
mov
rcr
xlat
inc
xchg
daa
bound
jo
cmc
sub
jp
jge
fildll
xchg
nop
aam
push
mov
cmpsb
test
cmp
les
out
inc
jnp
cmpsb
pop
repz
xchg
xchg
inc
xchg
or
inc
add
jnp
cmc
push
mov
out
outsl
sub
int
fisttps
jge
addr16
jno
mov
popf
je
shlb
mov
je
xor
outsl
test
mov
jp
mov
and
pop
scas
dec
cmp
aad
jns
push
in
push
imul
add
dec
mov
cmp
into
icebp
dec
mov
or
push
pop
xor
jb
insb
les
int
jl
call
cltd
outsl
push
mov
jae
and
inc
dec
dec
in
or
sub
dec
dec
rcrl
pop
aam
and
cli
mov
shrl
pusha
arpl
dec
xchg
xor
addr16
fwait
mov
mov
pushf
idivl
sbb
test
jo
es
in
push
das
mov
loopne
xlat
jno
es
ds
int3
das
push
out
sub
sub
test
dec
xchg
lds
iret
jne
sbb
test
popa
int3
or
inc
out
sbb
les
pushf
pop
ljmp
lahf
test
cltd
lahf
mov
out
nop
add
or
pop
in
add
divb
inc
and
ja
popf
sub
and
loop
pop
add
movsl
pop
sub
out
dec
dec
add
das
js
rcrb
icebp
pop
mov
sarb
inc
push
push
or
sub
and
adc
test
mov
std
inc
ret
mov
mov
add
jno
setno
adc
aas
xchg
add
pusha
adc
enter
push
inc
add
mov
fcompl
xchg
xlat
mov
xchg
ret
jg
mov
cmovl
enter
adc
gs
test
jbe
lahf
sub
or
rolb
gs
sbb
insl
sbb
mov
repz
adc
xchg
mov
adc
loopne
jmp
or
psllq
nop
mov
mov
pop
icebp
loop
jmp
lea
push
push
stc
aaa
rorl
mov
xor
sub
ret
jno
sub
jns
mov
xchg
jno
pop
pop
aas
rsqrtps
push
push
dec
cmp
das
mov
cmpb
sub
test
loop
ret
lcall
lcall
or
leave
mov
pop
sti
adc
lods
jl
pop
fildll
dec
aaa
jecxz
dec
mov
inc
sbb
jl
lods
push
lds
lahf
insl
inc
pop
pop
mov
mov
out
psubusb
cmp
jnp
mov
jge
cli
push
sub
leave
cltd
sbb
xor
vsqrtps
repnz
pushf
xchg
push
jecxz
mov
sahf
test
aas
and
mov
xchg
ret
xor
mov
rol
push
icebp
lds
leave
inc
aam
and
xor
fmuls
add
and
xchg
jno
cmp
stc
inc
lea
das
pop
cmpsb
adc
jbe
aam
and
pop
inc
jns
clc
pop
inc
add
repnz
scas
sub
mov
dec
jl
clc
xor
jb
mov
arpl
popf
js
inc
adc
jg
aaa
imul
sti
mov
stos
subb
loope
sub
pop
or
sub
cld
imul
stc
xchg
jo
sti
imulb
shrb
lods
pusha
ljmp
inc
push
outsb
ljmp
jne
pop
inc
inc
arpl
mov
in
jne
inc
xchg
adc
jp
jae
fstpl
jecxz
mov
shll
cmp
cld
push
mov
xor
das
popf
xor
xor
lcall
rorl
jbe
rol
inc
pushf
jne
sub
outsb
adc
push
addr16
icebp
int3
and
lds
cmpsl
inc
mov
out
lock
xor
push
ljmp
cmc
sbb
or
inc
push
fistpl
lahf
dec
stos
xchg
repnz
mov
lds
mov
out
cmp
mov
add
or
dec
rcrl
lds
push
loope
xor
jp
ret
jecxz
jmp
pushf
shl
mov
pop
push
dec
jo
cmp
add
xor
pop
xchg
subl
test
add
lret
sub
pop
pop
mov
mov
sub
pop
repz
test
daa
dec
jae
imul
subl
movsl
loop
dec
push
cld
lods
xor
test
add
lea
jae
jmp
addl
xchg
mov
insl
xchg
or
add
in
mov
lds
xchg
mov
jg
xchg
adc
adc
out
mov
mov
dec
push
mov
pop
dec
scas
mov
es
cmp
test
xchg
cltd
inc
or
mov
sub
cmc
or
jno
sub
adc
dec
loopne
aad
mov
inc
ss
and
push
mov
push
inc
inc
push
out
lret
nop
int
or
insb
mov
cmp
push
andl
xchg
dec
lds
xchg
nop
dec
sahf
ret
jno
rolb
pop
inc
cmp
xchg
lret
xor
xchg
rclb
push
jp
fistpll
scas
jp
sbb
lods
mov
fs
push
clc
ds
push
addr16
fdivp
stos
xor
pushf
ljmp
stos
cmp
addr16
out
dec
inc
lods
xor
dec
insl
icebp
cld
mov
repnz
xor
js
xchg
push
sti
inc
lods
out
movsb
sti
dec
mov
aaa
xchg
pop
stc
jnp
fisttpll
cmp
stos
iret
out
mov
sbb
dec
sahf
pop
iret
je
in
cli
jmp
and
out
cmp
mov
push
jbe
repnz
movsb
mov
mov
adc
test
add
push
sbb
xorb
pop
ds
push
mov
xchg
invd
loope
sub
inc
mov
pop
dec
sarl
lcall
lock
lahf
inc
repz
jecxz
aas
pop
add
xchg
xchg
mov
movsb
dec
sbb
test
ljmp
jp
xor
push
rcr
aad
xor
push
inc
mov
or
cli
push
xor
mov
fistpll
cld
mov
movsb
cld
jmp
aad
stos
repnz
sbb
jo
std
xchg
gs
sub
test
fistl
sub
jae
jmp
mov
in
lret
insl
adc
adc
rolb
xchg
add
jmp
adc
popa
inc
mov
mov
mov
adc
mov
push
dec
insl
cmp
jo
addb
jns
fsubs
add
or
xchg
outsl
outsl
fmull
ret
jo
mov
mov
pop
cmp
je
inc
es
movsl
jl
or
bound
ficomps
inc
xchg
xor
or
out
flds
aas
cmpsl
xlat
out
test
adc
jmp
in
push
in
cwtl
inc
daa
popa
mull
lds
mov
in
or
data16
sbb
lea
jmp
test
lahf
sub
or
ffreep
mov
movsb
in
lock
sbb
xchg
xor
daa
add
mov
cltd
and
xchg
pop
and
fldcw
lahf
sbbb
pop
add
mov
cmp
sub
jnp
imul
add
xlat
pop
xchg
inc
cld
cs
inc
jecxz
xor
addl
sbb
loop
inc
dec
push
idivb
mov
cmp
in
lret
push
cmp
ja
iret
gs
insb
movsl
stos
add
inc
push
fsubrl
fcomip
jb
push
jbe
sahf
js
jmp
in
xchg
cmpsl
int3
push
push
aas
cmc
sbb
fdiv
pop
jp
lret
mov
jno
push
push
or
sbb
push
sbb
dec
jo
jno
mov
aas
mov
or
and
mov
stos
xor
mov
or
dec
outsb
icebp
stc
add
jecxz
aam
jo
and
and
movsl
xchg
mov
xor
adc
mov
adc
push
nop
stos
jnp
out
dec
gs
jg
in
jp
adc
xor
rorb
std
mov
psrlw
xchg
ds
push
sbb
xchg
mov
daa
rol
ja
add
lret
or
outsb
icebp
pop
cmp
in
les
out
andl
js
test
popf
xor
dec
xor
xchg
hlt
out
sti
cwtl
shrb
and
and
pop
xchg
subb
cmc
inc
sub
dec
lock
insb
clc
cmp
shrb
mov
dec
fstps
inc
arpl
cmpl
lcall
mov
jae
cs
xor
jecxz
mov
lods
loop
repz
loop
pop
decl
je
sbb
jbe
stc
sbb
xor
sub
or
sub
dec
add
daa
sti
in
lea
std
dec
andl
fstps
mov
ljmp
dec
xor
adc
adc
jnp
and
cmp
and
sub
dec
sub
inc
mov
push
mov
insl
out
lret
adc
dec
add
push
sbb
ljmp
mov
pusha
dec
addr16
addr16
xor
cmp
out
insb
jb
loope
loopne
push
clc
cmp
mov
aas
mov
pop
add
imul
xchg
aam
and
addr16
lcall
pop
push
xor
pop
add
cmpsb
mov
arpl
push
orb
xchg
and
popa
xchg
jo
lcall
jnp
xchg
adc
ss
insb
jbe
mov
bound
icebp
out
or
inc
dec
les
lahf
stos
mov
mov
mov
rcrb
pop
es
push
sub
out
popa
cmpsb
arpl
adc
stc
xor
sbb
and
cmp
divl
adc
clc
mov
and
mov
push
mov
push
inc
loopne
loope
mov
push
inc
jnp
out
scas
sbb
and
xor
mov
out
bound
imul
pop
xchg
jl
adc
mov
and
data16
mov
push
scas
out
subl
lcall
dec
hlt
lret
mov
cmp
mov
cmp
mov
xchg
std
fbld
push
gs
mov
jmp
jbe
xchg
stc
mov
int
push
jo
dec
push
cs
xchg
mov
cld
jmp
and
sub
push
xchg
vrsqrtps
mov
add
iret
sub
mov
xor
mov
xchg
aas
adc
std
aas
mov
sbb
fs
adc
mov
mov
jge
out
push
pop
popa
adc
add
std
aas
sbb
sbb
outsb
lds
or
lds
aas
mov
sbb
fmuls
mov
fwait
add
movsl
daa
dec
cmp
test
fdivrp
sbb
cmpsb
loopne
ja
xor
mov
pop
fdivrl
outsl
mov
mov
fwait
lret
inc
js
aas
inc
mov
jo
sub
xor
inc
cwtl
cmp
rclb
or
lea
or
fucom
dec
pop
jb
aam
mov
add
pop
aad
push
outsl
inc
add
or
mov
mov
sbb
iret
dec
aaa
add
jae
popf
xor
push
and
test
mov
lcall
test
sub
jnp
sti
fs
fstpt
and
or
fcomip
test
loopne
inc
nop
fldlg2
ss
xor
dec
mov
or
addb
pop
int
push
push
or
jl
adc
or
mov
mov
ja
repnz
ret
jne
cmpsl
mov
pushf
imul
test
push
mov
jge
mov
mov
adc
jg
push
dec
out
pushf
ljmp
mov
lahf
push
mov
adc
xchg
cltd
adc
stos
xchg
je
inc
aad
dec
ret
push
icebp
cmp
fwait
pop
sbb
inc
lods
inc
popa
lahf
mov
jp
sub
cmpsl
or
mov
mov
in
push
xchg
pop
inc
or
enter
and
add
leave
sbb
jnp
in
add
inc
aas
shrl
cld
push
in
pop
in
dec
push
js
or
lods
sarl
cmpb
clc
push
mov
into
ja
jmp
sub
pop
jg
cmpsb
xor
hlt
in
pop
js
xchg
sub
divl
sub
add
dec
jbe
das
out
xchg
xchg
loopne
jbe
popa
adc
and
lods
shl
xor
xchg
outsb
clc
repz
dec
cmp
xchg
lods
jmp
xlat
loope
mov
stos
loopne
inc
loop
cmp
das
xor
jb
ljmp
insb
scas
pop
xorb
sub
inc
loopne
sub
std
out
shr
out
loopne
shlb
jo
inc
mov
rolb
mov
cmp
cmp
add
insl
cmc
ficompl
jmp
mov
loop
jo
and
inc
scas
je
adc
adc
push
insl
and
pop
pop
push
or
adc
push
cmp
lds
cs
ds
pop
inc
cmp
and
xchg
add
notl
push
fldl
fcoms
hlt
mov
and
and
push
inc
sub
dec
and
movsb
cmp
ret
push
clc
pop
cvtps2pd
inc
pop
mov
hlt
mov
outsb
inc
loop
pop
lcall
sub
clc
pop
mov
sub
loope
dec
popa
xchg
arpl
shll
mov
ret
ljmp
cwtl
outsb
inc
mov
inc
dec
sbb
outsb
outsl
mull
push
push
jg
ucomiss
rcl
idivl
sahf
cmp
xor
jno
push
loopne
jmp
mov
lods
cwtl
cmpsb
in
adc
or
daa
jns
sub
mov
out
loopne
mulb
or
sbb
mov
fstpl
dec
test
dec
cmc
addr16
adc
pushf
repnz
pop
daa
mov
inc
or
pop
addr16
jns
or
dec
pop
cmp
sbb
arpl
push
add
js
repnz
scas
arpl
lea
roll
inc
cmp
pop
scas
in
or
mov
aas
mov
nop
xor
xor
out
cld
out
mov
inc
int
mov
loope
daa
or
xor
lcall
das
jns
sub
xchg
and
xor
insb
test
cmp
daa
push
lahf
xchg
xchg
xchg
insb
sahf
add
sub
leave
sbb
mov
jo
ret
adc
pop
imul
js
push
push
inc
push
inc
push
pop
sbb
lds
xchg
mov
mov
popa
push
jb
sbb
and
movsb
into
lahf
iret
jge
jo
jnp
mov
xchg
sarl
lret
pop
adc
push
mov
bound
mov
push
enter
adc
and
gs
pop
sbb
add
or
pop
sahf
popa
je
fwait
rep
cmp
bound
cmc
in
jl
nop
jmp
stos
rcr
mov
or
mov
pop
js
mov
and
out
pop
test
pushl
pop
mov
mov
lods
das
adc
adcl
fmul
and
aam
andb
mov
mov
sbb
mov
rcr
shll
ljmp
mov
adc
test
sbb
mov
shll
mov
enter
rolb
inc
fsubs
mov
lea
lret
adcb
inc
mov
jl
loopne
xchg
scas
dec
adc
popf
xchg
add
lds
xchg
inc
push
mov
mov
jbe
or
shr
dec
pop
ljmp
mov
addr16
imull
into
adc
loopne
leave
lcall
repz
stos
mov
cwtl
xor
rorb
push
push
mov
loopne
fwait
ret
orl
aaa
loope
inc
mov
pop
mov
insl
ss
dec
in
cmp
or
insl
test
xor
cmpsl
lods
repnz
jo
xchg
jmp
jno
sub
xlat
add
xchg
loop
enter
cmp
mov
data16
xor
vmovapd
or
xor
aad
add
and
adc
dec
cmp
add
movsb
lea
leave
cmp
push
inc
xlat
dec
mov
es
stc
unpcklps
cmp
jb
mov
mov
fcom
pop
loopne
ret
xchg
imul
data16
movsb
mov
sub
into
addr16
pop
lock
inc
stc
push
jo
inc
ljmp
or
cmp
mov
les
dec
xchg
adc
fcoml
int
fdivrl
add
cs
dec
fsts
sub
cmpsb
cs
idivb
push
inc
sub
xor
gs
mov
fistpll
dec
lret
sahf
mov
test
and
lock
xor
data16
mov
mov
and
xchg
fdivl
push
outsl
cs
in
addl
xor
push
sub
mov
push
cmp
inc
mov
jp
popa
scas
mov
push
movsb
cmp
fisttps
xchg
xor
test
mov
xchg
fistps
cmp
clc
pop
dec
jle
mov
les
push
insl
pop
decb
mov
xor
sub
movsl
insb
testb
add
fcmove
mov
lea
lock
aaa
dec
push
pop
sti
inc
jl
mov
aam
outsb
test
movsb
dec
mov
test
sbb
inc
les
dec
mov
in
es
pop
stc
mov
gs
push
jmp
mov
sub
inc
jmp
adc
enter
inc
xor
cmp
jg
pop
push
mov
repnz
sti
pop
add
sub
in
jne
add
xchg
mov
lcall
into
pushf
push
int3
push
popa
and
xor
subb
and
popf
push
push
lcall
jmp
cli
mov
fnstsw
push
sub
jle
xor
ljmp
lcall
sbb
popa
jecxz
add
call
in
inc
and
cli
mov
pop
scas
xchg
xchg
pop
sbb
mov
xchg
xor
insb
mov
mov
and
inc
test
xchg
xchg
push
mov
clc
sti
imul
in
test
pop
jbe
iret
push
add
gs
movsl
xchg
gs
cmp
popa
ss
rcll
sahf
fucom
in
push
dec
aad
jge
xor
xchg
outsl
jl
nop
fs
fisubl
push
mov
mov
jo
sub
mov
or
inc
mov
mov
and
ret
lock
mov
int
xchg
mov
pop
push
mov
daa
lods
and
lcall
or
repz
mov
out
fbstp
subl
xchg
jg
insb
je
iret
lock
fwait
add
mov
in
sbb
mov
pop
mov
es
push
ds
sub
je
aas
clc
pop
add
hlt
aas
push
push
jns
ret
sub
lret
pop
rcll
sbb
imul
lcall
fcoml
xchg
add
cli
ror
xchg
pusha
je
mov
je
pop
pop
push
in
adc
out
mov
lock
lcall
hlt
lea
inc
pushf
iret
inc
mov
xchg
ljmp
mov
js
cwtl
ss
add
xor
and
out
lods
or
ss
xor
test
shl
loopne
gs
into
insl
xor
add
arpl
mov
xchg
xor
shlb
xor
rcll
jecxz
xchg
test
push
faddp
in
jo
pop
sub
mov
enter
push
push
push
xchg
add
cli
insb
cmp
test
nop
inc
sbb
fwait
jne
lret
imull
insb
inc
mov
inc
push
je
dec
leave
out
js
pop
sbb
aaa
xchg
jne
xchg
cmpsb
loopne
xor
stos
cmp
inc
js
xabort
push
push
mov
lea
or
mov
sub
lcall
cltd
adc
sub
xchg
xchg
xor
cmp
inc
sbb
cmp
dec
dec
jmp
jnp
xor
aaa
imul
loopne
pop
mov
dec
mov
lahf
mov
ljmp
aaa
push
and
dec
xlat
out
in
ficompl
push
cwtl
push
fiaddl
test
jo
inc
mov
minps
jmp
test
pusha
adc
sbbb
mov
dec
mov
stos
xor
inc
xchg
sub
fbld
mov
ljmp
mov
rorb
mov
and
insb
add
or
mov
mov
add
in
stos
dec
cmp
sbb
dec
das
inc
out
in
dec
jnp
pop
rclb
mov
cmpsl
jle
xchg
adc
pop
mov
stc
push
push
jg
jne
or
sbb
cwtl
push
sub
lahf
push
xor
mov
jns
fchs
adc
inc
jle
pushf
jecxz
lods
iret
lds
add
fstps
fwait
xchg
aas
mov
daa
and
mov
daa
cmpsl
mov
or
mov
cs
inc
sbb
push
loop
jno
out
mov
xor
pandn
sub
pop
inc
jg
pop
aaa
bound
fdivrs
cmpsb
sbb
xor
mov
ret
arpl
cmp
mov
leave
pop
je
es
nop
mov
pushf
push
push
stos
push
mov
add
in
xchg
orl
dec
std
stos
pextrw
es
test
sub
shl
sbb
outsb
and
dec
inc
daa
mov
push
sub
test
mov
push
or
les
inc
dec
mov
sbb
jb
mov
jb
arpl
lea
sbb
mov
fs
xor
outsb
push
mov
add
out
in
test
cmp
loopne
add
jl
cmp
mov
cwtl
fdivs
sub
cmp
in
add
sbb
dec
xor
icebp
add
dec
in
js
mov
loopne
push
clc
sar
dec
mov
in
cmp
stos
imul
lods
sahf
jb
in
mov
or
inc
ljmp
popa
dec
pop
sub
or
xlat
push
call
inc
nop
sub
ror
sub
repnz
mov
sti
idivb
jns
sbb
cwtl
outsl
sub
cwtl
add
jp
push
mov
out
dec
out
shlb
test
push
cld
dec
or
mov
mov
mov
shl
fisubl
icebp
mov
inc
in
lret
and
loopne
jne
or
stos
or
adc
fucom
xchg
add
push
mov
add
aam
adcb
sub
mov
sub
cli
jle
mov
stc
and
stc
sub
inc
scas
std
test
enter
popf
xchg
repz
arpl
mov
dec
outsl
push
xlat
js
stc
push
arpl
sub
rcrb
daa
push
adc
mov
ja
mov
test
push
and
aad
jae
ds
mov
fwait
pop
cmc
jae
dec
xorb
leave
sbb
loope
sbbl
sub
rorl
lea
mov
rol
daa
push
imul
int3
mov
and
mov
push
int
test
leave
ds
jge
scas
pop
cmp
lds
and
pop
or
sub
lret
mov
sti
lcall
inc
jno
xchg
or
jae
dec
movsl
add
lcall
mov
pop
push
or
mov
mov
mov
or
imul
or
dec
or
xchg
mov
xchg
int
stos
adc
shlb
pop
mov
jbe
inc
fwait
jmp
mov
dec
roll
pop
insb
sbb
adc
mov
jb
fimull
imul
xchg
shlb
cmp
pop
sbb
movsb
shll
add
lock
mov
xlat
inc
cld
pop
lcall
scas
aas
cltd
cmp
cld
fwait
cld
inc
cmpsb
cs
jb
aas
stos
fwait
cmp
sub
cmp
aaa
and
cs
pushaw
xor
push
int
jbe
or
push
cltd
lods
cld
pop
clc
push
sbb
ficoml
icebp
add
adc
sbb
shl
imul
jo
pop
enter
sbb
in
popa
mov
jns
cmpsl
gs
pusha
mov
aam
push
icebp
xchg
lahf
ds
jnp
inc
dec
mov
jb
lcall
das
xlat
dec
es
cmp
jl
inc
push
lds
jo
cwtl
mov
out
inc
fdivrs
in
and
cmp
shr
xchg
xor
mov
aas
cld
push
and
jns,pt
pop
inc
mov
nop
inc
or
das
dec
push
movsl
jno
cs
sbb
aad
and
inc
mov
sub
mov
testl
outsl
adcl
mov
mov
es
push
sbb
sbb
daa
push
out
mov
pop
iret
lods
pushf
fistpll
out
shlb
adc
mov
ds
push
jmp
faddl
loope
in
loopne
mov
fcomps
dec
sbb
lea
or
mov
add
imul
lds
js
mov
movsl
test
adc
mov
xor
pushf
addr16
mov
dec
in
les
adc
add
jecxz
mov
pusha
ja
sub
cmpsl
push
aam
mov
push
movl
or
ret
mov
inc
sbb
popf
pop
mov
mov
cvtps2pd
pop
inc
pop
leave
mov
or
or
out
inc
lock
cmp
int
dec
pop
lods
outsl
xor
jp
repz
pop
test
jns
movsl
push
or
xchg
xchg
adc
out
inc
jnp
nop
inc
sti
or
pop
xchg
jo
test
mov
movsl
pop
pop
subb
adc
call
push
mov
test
ljmp
fcoms
aam
shr
xchg
xor
repnz
incl
lret
mov
mov
iret
jno
push
mov
movsb
aas
and
mov
push
lds
add
lock
xor
pop
cwtl
test
xorb
pusha
fdivr
pushf
jmp
inc
js
or
shll
mov
pop
mov
fcmovu
mov
aas
popa
out
mov
pop
inc
sub
bound
add
cmp
fistps
mov
imul
loopne
xchg
neg
add
dec
sbb
jae
sarl
mov
pop
ror
imul
pop
ljmp
in
bound
inc
nop
out
pop
and
cmp
push
xor
xor
std
sub
out
pushl
scas
or
adc
std
inc
xchg
cmp
pushf
add
mov
push
mov
mov
xchg
pop
cmc
sbb
mov
ret
push
ja
dec
mov
out
jb
inc
push
enter
addb
push
sub
and
push
mov
jnp
icebp
cli
pop
sahf
adc
sbb
sub
inc
jge
push
stc
push
lods
jne
insl
mov
cmp
jle
out
xor
jae
mov
inc
aas
xor
stos
movq
sahf
cmp
flds
or
lock
or
stos
inc
fmuls
mov
add
sti
data16
pop
movsl
mulb
enter
insl
inc
imul
or
and
out
pop
popa
xchg
cltd
mov
xchg
and
mov
dec
jmp
bound
cld
adc
xlat
jo
hlt
mov
inc
aas
mov
mov
icebp
adc
out
jl
mov
cli
push
scas
cmp
lods
mov
inc
jecxz
test
rcrb
xor
test
shl
cs
jle
jb
dec
and
adc
dec
jo
cmc
push
gs
in
getsec
fisttps
fistps
xor
mov
mov
mov
lret
rclb
outsl
popf
dec
jge
mov
push
jno
scas
fistl
movsl
adc
ja
push
sbb
stc
lahf
daa
or
cmp
mov
shl
or
clc
jge
jo
xchg
mov
lds
shlb
sbb
fdiv
adc
mov
push
xor
loop
mov
and
xchg
jmp
xor
ficoml
inc
mov
cs
push
xchg
mov
xor
xchg
sahf
inc
xchg
xchg
xchg
test
insb
popa
fcoms
lods
seta
or
mov
mov
rcll
icebp
mov
cli
cld
lcall
jge
lahf
mov
daa
aad
loop
subl
mov
mov
pop
cmp
aaa
sahf
xchg
mov
test
fildll
loope
pop
test
mov
pop
fists
fisubs
mov
aaa
cmpl
cmpl
xchg
and
nop
fisubrl
adc
andl
das
mov
scas
test
xorl
stos
das
xor
sub
mov
pop
js
xor
xchg
fs
or
movsl
dec
std
jge
loop
aad
clc
outsl
xor
shll
mov
addb
jb
leave
mov
lret
adc
xor
cmpsb
outsl
xchg
push
xor
mov
xor
mov
pop
or
sub
sub
xlat
dec
arpl
loope
adc
arpl
std
jno
mov
or
sbb
pop
xchg
xchg
jecxz
shl
add
loopne
fwait
mov
push
jb
lods
inc
adc
mov
dec
xchg
adc
das
adc
cwtl
andl
jo
sbb
xchg
pop
ljmp
fldcw
adc
in
cmp
cwtl
sub
clc
cs
or
movsl
in
bt
test
adc
mov
lods
andl
and
adc
jmp
adc
jb
lods
cmpsb
mov
mov
add
arpl
jecxz
lods
icebp
jo
push
inc
and
lcall
psubb
sub
adc
cmpsb
push
dec
ljmp
outsl
popf
das
je
push
jne
push
pop
fucomip
push
cmp
cmp
fldt
jp
fists
nop
pop
out
mov
cmc
orl
cli
into
mov
iretw
outsl
loopne
cmp
arpl
inc
gs
rclb
jl
sub
outsb
divl
mov
cmpb
fs
inc
in
out
sbb
sbb
addr16
xchg
dec
rcrl
je
inc
and
add
or
lods
mov
jge
or
mov
iret
pop
gs
cmp
adc
push
xchg
cmpsl
mov
in
and
adc
mov
jns
mov
nop
add
scas
cmp
pushf
and
mov
scas
sub
mov
test
xchg
test
loope
push
or
dec
mov
jg
je
clc
mov
rol
fldcw
lahf
ret
or
mov
call
push
cmpsb
dec
or
or
sbb
bound
lea
cmpsl
addr16
mov
cmp
pop
loope
jo
popa
sysenter
mov
add
lods
mov
cmp
push
xchg
jnp
les
std
out
or
mov
jns
dec
rcr
ret
pop
out
xchg
inc
arpl
cmp
mov
adc
jecxz
jne
push
imul
test
xchg
rorb
adc
pop
xchg
ljmp
adc
stc
cld
xchg
cmpsl
popa
ljmp
negb
xchg
jmp
fldenv
sub
inc
lret
mov
in
and
jo
les
mov
add
insl
jne
xlat
fwait
lods
jne
aas
push
mov
inc
sbb
fcmovnbe
iretw
mov
enter
std
lret
scas
push
pop
inc
xchg
mov
dec
iret
mov
imul
sub
les
sti
or
adcl
aad
lahf
popf
push
inc
loope
push
aaa
xor
ret
repz
xchg
insb
jbe
push
mov
or
add
repnz
inc
ja
sub
bound
push
xchg
lahf
and
data16
inc
jno
clc
inc
in
jb
call
lds
xor
iret
loope
jb
xor
pop
popf
insb
ljmp
inc
stos
mov
mov
imul
or
repnz
push
popf
mov
insb
pop
mov
mov
jge
xor
dec
enter
and
mov
cmp
dec
imul
and
ret
xchg
das
stos
dec
push
dec
rcrl
insl
sbb
push
jb
mov
inc
lds
jge
or
pop
dec
out
and
outsl
fistl
orl
or
jl
fnstenv
leave
add
shrb
cld
in
dec
cmp
or
adc
push
dec
mov
aam
lods
sbb
push
mov
cli
rcll
insl
and
stos
ja
test
call
xor
jp
ror
and
push
jo
inc
sbb
sbb
mov
stos
stos
mov
cwtl
mov
addl
sub
sarl
lock
mov
aam
add
mov
xor
lock
xchg
test
out
in
mov
mov
dec
xlat
mov
lcall
and
iret
sbb
push
test
pop
push
imul
xchg
movsl
cmp
dec
imul
push
and
repz
pop
aaa
fadd
shll
lcall
adc
shll
and
sub
aas
js
test
sbb
jg
imul
inc
xchg
mov
inc
sub
mov
adc
in
aam
insb
scas
cwtl
decb
pop
mov
pop
and
or
sbb
and
loope
add
xchg
movsb
mov
scas
mov
lcall
int3
lret
andb
shll
push
test
xor
lods
pushf
jmp
out
sbb
jecxz
lret
pop
sbb
or
scas
xchg
imul
mov
pop
fnsave
sbb
test
inc
push
mov
je
loope
repnz
lods
insl
not
stc
xchg
sbb
dec
cmp
dec
mov
shlb
loop
xchg
sub
mov
int
imulb
and
adc
nop
mov
cltd
dec
jae
ficompl
push
push
sub
mov
pop
ret
push
xchg
jmp
gs
jbe
imul
rcrb
xchg
out
js
jge
mov
cli
dec
push
sbb
lock
jg
adc
cmp
mov
sbb
lret
cmp
dec
sub
insl
jl
jl
inc
add
cmpl
das
in
cwtl
pop
mov
dec
push
adcb
push
push
inc
pop
or
js
mov
fyl2xp1
lock
sub
xor
test
inc
add
ljmp
inc
mov
sub
inc
insl
popa
fstpl
mov
out
mov
lods
in
scas
sub
xchg
and
call
mov
inc
mov
sbb
dec
rcrb
enter
and
pop
pop
aaa
data16
push
push
pop
jb
pop
iret
or
xor
inc
xchg
pushf
pop
in
test
dec
sbb
imull
and
imul
movsl
or
xor
jno
ret
or
outsb
inc
sub
imul
std
lret
mov
stc
xor
scas
and
divl
imul
sub
push
pop
cmpsl
and
mov
push
jbe
sub
jns
mov
outsb
cmp
fildll
sub
adc
sbbl
mov
cmp
hlt
cmp
sub
das
iret
pop
pop
testb
test
cwtl
sbb
push
scas
mov
lods
ljmp
jbe
dec
jmp
push
loop
les
popa
stos
jmp
shlb
xchg
test
xchg
fcmovnb
int3
add
sbb
cmp
xchg
ficompl
test
xchg
xchg
clc
fisubl
cmp
push
push
in
enter
jns
sbb
push
xor
cs
jnp
mov
in
and
pop
push
sub
xor
push
mov
xor
adc
xchg
leave
shrl
jo
push
lahf
lret
divl
pop
dec
lahf
push
push
roll
xchg
xchg
pop
jg
dec
or
xorb
xlat
enter
leave
pop
sub
adc
cmp
sub
xlat
push
fsubrl
in
sbb
in
sahf
xor
adc
loop
dec
push
push
subb
rclb
sub
xorl
mov
mov
idiv
adc
ja
sbb
xor
mov
stos
sbbl
mov
shrb
xor
rorb
mov
sbb
fnstcw
sbb
data16
sbb
mov
lock
lods
jp
les
jne
iret
loope
pop
push
mov
lods
outsb
cltd
cmp
fisttpll
cmp
shll
adc
data16
pop
push
and
add
test
outsl
jno
mov
outsl
mov
sar
cld
je
clc
in
aad
shll
mov
pop
and
dec
pushf
push
cmp
pushf
pop
xorb
xchg
add
jno
pop
enter
clc
pop
roll
dec
enter
pushf
push
xor
fmul
popf
inc
test
sbb
je
shlb
loope
aam
or
mov
push
mov
test
jle
sbb
jo
sbb
push
sbb
movsl
jo
insl
rcr
jmp
mov
jmp
xchg
ffreep
add
data16
dec
sub
pop
mov
push
xchg
xchg
fimull
movsb
add
pop
push
cld
into
xchg
mov
cli
xor
lret
std
jno
mov
mov
cmpsb
pop
decl
inc
movsb
dec
sbb
mov
sbb
sti
js
pop
xchg
sub
call
popa
movswl
movsb
lret
pop
adc
popf
nop
inc
lret
stc
adcb
mov
test
jae
cmp
es
in
ret
out
stos
adc
push
rcrl
add
xchg
xchg
fnstcw
loop
out
in
and
fimuls
mov
cmp
insl
jae
shrb
scas
inc
fs
mov
mov
ds
lret
cld
pushf
sbb
cmc
xor
push
push
pusha
adc
and
xchg
pop
imul
sbb
mov
clc
mov
xchg
ret
push
mov
dec
sbb
pop
test
data16
xchg
aad
scas
inc
xchg
ja
jo
sub
xchg
xor
inc
add
sbb
adc
addl
inc
mov
push
addl
xchg
repz
mov
mov
lahf
sub
lret
mov
mov
sub
cs
push
jecxz
repz
cwtl
xlat
ss
or
shl
sti
xchg
test
loop
andl
sahf
add
nop
xchg
mov
fidivs
xchg
xchg
mov
add
pop
mov
push
inc
lret
xor
jns
js
das
ficoms
mov
push
jmp
dec
add
shr
ljmp
inc
and
insb
cltd
jno
mov
inc
xlat
mull
mov
scas
call
sbb
imul
xor
leave
xchg
call
push
jl
imul
ja
cmp
pop
push
xor
ljmp
mov
cmp
pop
xchg
orl
and
repnz
mov
test
in
icebp
fs
stos
mov
fldl
dec
pusha
add
xchg
add
cmp
ss
bound
jne
orl
addr16
xorb
mov
inc
arpl
push
test
pusha
js
mov
in
xchg
and
sub
sbb
sub
mov
inc
push
cmc
inc
out
sub
cli
push
lods
sbb
sub
push
jo
push
test
sbb
sbb
test
mov
fnsave
lret
jl
stos
dec
in
imul
dec
add
es
or
mov
pop
test
pop
cmp
lea
cmp
lea
insb
xchg
aas
inc
lahf
jo
add
aad
xor
cmpsb
add
aad
pop
push
lret
test
pop
inc
leave
or
aaa
fists
mov
movsb
rorl
daa
xchg
clc
adc
insl
fstps
pop
inc
cmpsb
std
cltd
mov
popf
xchg
in
push
outsl
pusha
jle
lods
and
repz
sbb
mov
pop
shll
mov
outsl
or
repnz
clc
cmp
cmc
inc
jg
mov
inc
mov
xor
sbb
ja
push
push
pusha
into
mov
hlt
aas
xchg
pmulhuw
cmp
je
xchg
sbbl
push
cmp
or
mov
push
cmc
inc
add
xor
in
and
sahf
inc
arpl
sarl
mov
repz
clc
lret
sahf
cli
pop
pop
push
pushf
xchg
inc
push
pop
dec
ret
cli
aam
sbb
xchg
mov
cmp
jp
and
xlat
out
imul
mov
adc
leave
movsl
cmpsl
fistl
imul
adc
adc
aaa
xchg
mov
add
rolb
or
or
jne
popa
cltd
mov
add
cmp
cwtl
jno
pop
dec
movsl
sbb
push
add
repz
stos
push
pop
pop
std
sbb
push
push
mov
loopne
sbb
outsl
out
xchg
addr16
shr
dec
outsl
lds
repnz
sbb
adc
sbb
sbb
ss
cmpl
dec
xchg
sub
fiaddl
cmp
dec
test
dec
loopne
pop
pushf
es
std
or
testb
ss
lock
int
sub
xor
dec
xor
mov
pushf
int
cmp
sbb
jb
in
leave
add
pop
popa
rclb
sti
cmp
add
pop
daa
sub
adc
arpl
inc
das
jle
cmpsl
mov
pop
adc
cmpsl
xor
shl
rcrb
cmpb
fstl
test
imul
lods
mov
popl
sub
jp
in
test
xchg
or
insl
push
jnp
addr16
xchg
je
in
sbb
push
stos
bound
sbb
sbbl
cmp
cmp
in
adc
mov
fs
fdivl
cmp
filds
lods
adc
clc
inc
cmp
and
sbb
bound
adcb
movsl
cmp
dec
outsl
lock
push
mov
mov
add
lahf
bound
adcb
outsl
sti
cltd
insb
in
jb
int3
push
out
stos
cmp
xor
in
or
dec
adc
jae
dec
out
or
xor
test
int
loopne
jmp
idivb
scas
aaa
mov
mov
jp
sub
jb
mov
repz
mov
mov
mov
daa
fisttpll
mov
mov
mov
iret
and
arpl
adc
insb
pop
dec
jl
add
push
sub
push
mov
sub
popf
inc
mov
cmc
sarb
mov
fsubl
data16
fstps
loop
mov
dec
sbb
adc
mov
imul
fmull
rorl
loopne
loop
push
test
jle
popa
and
mov
mov
add
loop
addl
in
stos
daa
dec
loope
icebp
imul
repnz
loopne
mov
and
cmp
gs
or
cmc
mov
dec
and
pop
sub
les
cmpl
gs
mov
dec
je
cli
das
push
popa
and
int3
pushf
jg
and
repnz
sub
add
loope
mull
or
rol
pop
pop
jmp
fwait
xor
mov
andl
or
jp
aad
xchg
sbbb
fs
mov
inc
or
jle
mov
addr16
cmp
xchg
fcom
lret
inc
dec
add
shlb
xor
pusha
dec
inc
and
fisubs
dec
mov
push
lock
aas
dec
adc
cmp
lea
cmp
ret
les
add
xchg
fcomi
cmp
cmc
xor
push
lret
in
imul
push
jae
repz
lcall
inc
cmp
clc
test
add
xor
sbb
jp
mov
loopne
mov
ljmp
mov
xchg
cmpsl
cmpsb
sub
out
movsb
int
lods
out
pushf
stc
dec
addr16
lret
pop
add
stc
xchg
xchg
mov
push
cmpsl
push
xor
xchg
test
incb
repnz
jnp
or
dec
fstps
loop
lcall
mov
xchg
mov
sbb
scas
and
pop
hlt
daa
repz
sub
add
filds
arpl
insb
test
aas
inc
repnz
fbstp
call
dec
xchg
sbb
pop
fstpt
xor
xor
and
adc
or
in
xchg
inc
and
mov
mov
sti
sub
arpl
idivb
xorb
fidivrl
sub
inc
xor
std
sar
mov
scas
or
clc
fcmovne
jmp
loope
push
inc
mov
std
xor
lret
gs
sbbl
je
mov
neg
pop
or
adc
or
cld
dec
data16
cltd
add
popa
xchg
sub
shrb
cmp
add
data16
repz
sbb
repz
jbe
lods
mov
popa
fprem1
sub
cmp
aam
mov
lahf
loopne
dec
mov
subb
mov
jmp
sub
arpl
mov
xlat
cmc
xchg
cmp
xor
iret
cmp
outsb
sti
mov
or
xor
inc
add
pop
call
movsl
jp
stc
cmp
into
add
sbb
nop
pop
lock
aaa
push
xor
jg
push
popf
xchg
xor
xchg
xchg
jns
pusha
and
clc
rolb
adc
orb
loop
add
pop
dec
es
fcmovnb
sbb
hlt
cmp
jl
ja
inc
out
mov
push
jnp
mov
or
rcrl
fs
xchg
inc
rorl
pop
sbb
rcrb
cmp
into
pop
cmp
pop
test
daa
xchg
movsl
outsl
fsubs
cltd
jge
push
push
adc
xchg
mov
ret
dec
mov
mov
addr16
call
inc
fs
xor
add
pop
cmp
fdiv
cmpsb
inc
jp
adc
or
mov
and
mov
je
jns
leave
add
inc
sahf
add
adc
mov
ret
xchg
ror
xchg
pop
mov
orb
jg
movsl
mov
adc
stc
xchg
fwait
outsl
dec
stc
xchg
fnstsw
lods
dec
cmpsl
hlt
incl
aam
mov
jns
xchg
jbe
fidivl
xor
int
adc
dec
or
out
add
ret
jo
mov
inc
mov
fildll
push
or
mov
adc
std
filds
xlat
outsl
mov
stc
and
push
push
fdivs
dec
test
ret
stos
cmc
pop
mov
dec
push
bound
ret
mov
test
cmp
clc
mov
mov
std
in
sbb
cmc
pop
in
stos
mov
out
iret
dec
enter
flds
pop
xchg
fmuls
mov
cli
test
std
xor
pop
adc
out
xchg
mov
inc
mov
xchg
ret
sahf
inc
dec
xchg
stos
rclb
lret
jnp
xor
mov
pop
add
adc
mov
xchg
int3
mov
inc
ret
cs
xor
iret
pop
or
insb
adc
cmp
push
lock
movsb
test
ds
imul
hlt
sysexit
or
sbb
or
aad
adc
cmp
bound
movl
popf
fldt
jmp
and
add
fwait
outsl
scas
cmp
lock
hlt
mov
imul
xor
loope
lret
mov
test
mov
mov
add
or
into
icebp
jns
cltd
call
iret
in
dec
jnp
test
push
ja
addl
repz
jle
out
inc
mulb
pop
pop
and
loopne
push
repz
fs
ja
or
adc
mov
dec
cmp
roll
sbb
aaa
jp
popf
hlt
adc
or
adc
xor
or
add
test
scas
stos
das
mov
jg
add
lcall
push
scas
jns
cltd
cwtl
lds
cmp
outsl
ss
outsl
pusha
popf
sub
aas
push
jmp
mov
rcll
fstps
das
mov
adc
cmc
sub
dec
cltd
sub
test
or
push
sub
hlt
movsl
dec
adc
outsb
cmp
mov
push
or
pop
loopne
or
mov
mov
roll
fildll
dec
imul
add
fs
and
and
and
jns
inc
popf
push
popf
adc
repnz
inc
insb
inc
jmp
pop
out
dec
cmp
rorb
push
in
xorl
mov
sub
mov
out
daa
jo
lret
xor
popa
test
mov
dec
cli
rol
push
mov
jg
out
jbe
ljmp
cmpb
daa
xor
xor
add
mull
mov
mov
mov
fldl
cmpsb
ret
push
dec
imul
xor
dec
xchg
and
push
popf
and
xor
jbe
incb
mov
adc
jb
add
inc
cmpsb
or
pop
int3
inc
xor
repnz
mov
xchg
dec
enter
inc
je
cwtl
in
sbb
inc
cli
aaa
xchg
dec
in
ret
std
and
outsb
jae
lods
push
outsb
xchg
hlt
mov
rorl
xor
out
jo
out
cmp
into
push
xchg
repz
jb,pn
or
out
int3
in
pop
mov
pop
cmp
aas
xchg
xor
mov
cmp
and
outsb
faddl
mov
jne
xchg
cld
cli
xor
push
into
pop
cltd
jb
xchg
mov
std
clc
arpl
pop
cld
mov
pusha
pop
dec
aad
jmp
gs
push
rcrl
imul
push
xchg
mov
sarl
cmpl
add
insb
gs
sub
mov
mov
sbb
fwait
loopne
int3
pop
cmp
jbe
adc
mov
jmp
cmc
mov
mov
fwait
pop
ja
and
addr16
mov
sbb
pushf
inc
fildl
sub
aad
ud0
sub
insl
arpl
icebp
out
inc
xor
jmp
jae,pn
loop
ja
jns
fisttpl
test
dec
sbb
cmpsl
lahf
jnp
sub
fs
scas
jo
mov
data16
jns
sbb
fsubrl
fcom
popa
shrb
outsl
jg
cmp
pop
cmpsl
movsl
test
dec
pop
icebp
movsb
outsl
sub
mov
nop
addb
dec
popa
iret
xchg
or
std
shrb
lret
lahf
insb
pop
out
cmc
cmc
daa
test
orl
repnz
push
pop
cmp
jae
fildll
jecxz
add
pop
fidivl
pop
mov
sub
push
sbb
shlb
repnz
add
push
xor
lock
cmp
sub
stc
fwait
mov
cmp
xor
push
daa
fcomps
jbe
ljmp
lcall
or
repz
call
int3
jle
pop
cmpsb
cmp
imul
jmp
jae
test
lret
adc
fldl2t
or
ds
push
add
cltd
mov
mov
dec
imul
pop
xor
in
mov
shrb
adc
jns
test
dec
push
push
and
sub
xchg
out
ret
out
push
lret
mov
adc
pop
data16
addl
jb
ror
imul
push
sub
lret
movsb
dec
xchg
push
jmp
les
pushl
pop
cwtl
jo
xor
jg
push
push
sbb
cmp
jmp
mov
jmp
adc
dec
pushf
xchg
ficoml
xor
movsb
lds
push
cmp
lock
int3
lcall
mov
mov
sbb
repz
outsl
imul
and
lret
lret
fmuls
pop
or
mov
xor
dec
jmp
jnp
enter
das
mov
pop
pop
rcll
ss
test
or
arpl
pmaddwd
imul
cmp
dec
xchg
imul
jne
scas
dec
mov
xchg
bound
mov
adc
push
pop
test
adc
aaa
repz
movsl
test
cmpsb
outsb
fnsave
sub
int
out
adc
das
adc
in
mov
fstps
pop
push
call
ds
and
std
sub
lds
xchg
jae
inc
sub
in
mov
inc
cmp
mov
les
cwtl
or
pop
into
xchg
clc
xchg
loopne
push
cmp
ja
aam
dec
mov
cmp
mov
call
sbb
or
mov
loop
cmovo
scas
ds
fwait
jne
pop
jne
fnstsw
addr16
out
pop
pop
xor
cmp
pop
lds
bnd
xchg
fsubl
out
xor
pop
dec
mov
loop
aad
mov
lods
mov
xchg
inc
xchg
cltd
or
cmp
imul
jge
sub
adc
xchg
jmp
adc
or
lds
pop
mov
sbb
push
addb
into
push
imul
mov
inc
mov
add
adc
pop
ja
jno
cmc
mov
mov
fwait
sbb
scas
and
and
repnz
mov
dec
mov
inc
or
stc
xlat
cmp
lock
enter
cmp
sub
leave
mov
fwait
addr16
mov
jge
sarb
call
fidivs
sbb
pusha
sarl
jecxz
addr16
fisttpll
in
cmpsl
dec
fidivs
orb
mull
sub
adc
aas
ds
ljmp
inc
cmp
sub
xchg
jecxz
dec
pop
repnz
jnp
or
aas
subl
lahf
sub
xor
popa
xchg
jl
xchg
push
jp
cmp
and
popa
loopne
out
insb
jno
dec
pop
jle
and
cmp
scas
movsl
std
cmp
loope
and
out
adc
xchg
mov
leave
adc
movlps
mov
and
jne
jb
je
jl
sti
test
rcrl
pusha
or
ljmp
add
bndstx
faddl
imull
mov
lret
mov
cmp
es
or
mov
adc
sbb
jle
jecxz
push
pop
jae
pop
jns
sbb
cmp
cmp
shll
icebp
loop
cmpsb
sbb
ss
mov
xchg
cmp
xlat
hlt
xchg
lods
jae
aas
cld
add
and
bswap
insb
push
xor
cmp
cmp
cmp
rcr
lods
nop
inc
jg
cmp
jns
jecxz
stc
sbb
aas
push
pushf
pop
sbb
pushw
scas
add
dec
jecxz
xor
sub
cmp
jecxz,pn
arpl
in
cmp
sarb
push
lods
jne
inc
dec
test
push
cmp
ret
cmp
sar
dec
mov
jns
push
fcompl
pop
addr16
daa
pop
sub
movsl
icebp
call
iret
mov
call
cwtl
leave
cmpsb
bound
mov
mov
notb
xchg
xchg
sub
rcrb
scas
sub
xor
jne
jp
repz
push
mov
out
push
jns
popf
push
pusha
popf
xlat
inc
dec
in
add
mov
stc
filds
loop
mov
pop
xchg
push
jne
pop
ljmp
xchg
mov
rcll
push
lods
mov
and
dec
and
bts
fdivrl
mov
rcrb
mov
lahf
dec
nop
ljmp
inc
idivl
mov
jp
cwtl
add
aad
incb
sti
aas
mov
dec
cld
mov
xor
sub
dec
clc
je
mov
clc
mov
mov
ss
xchg
push
mov
dec
adc
and
test
mov
push
fs
jmp
jbe
js
pop
jno
lea
xchg
loop
movsb
out
mov
scas
shrb
inc
sub
mov
pop
mov
dec
jge
mov
jg
adc
pop
stc
cs
lods
icebp
xchg
pusha
outsl
push
std
mull
adc
pop
pop
popa
dec
pop
lret
imul
sbb
xlat
ja
fldl2e
jno
mov
mov
mov
aaa
push
rolb
iret
lock
adc
loope
outsl
mov
cmp
cmp
stos
ds
outsl
jl
mov
fs
lods
cmp
mov
jp
jo
push
js
pop
out
adc
lods
jp
sbb
add
ss
inc
push
negb
dec
loopne
mov
push
push
ljmp
cmpl
adc
push
insl
dec
pop
insl
lods
bound
fisubs
pop
mov
stos
fdivl
lret
jae
cmp
shr
sub
and
mov
outsl
movsb
xchg
sarl
cwtl
add
pop
pushf
add
cmp
jb
mov
adc
out
dec
call
push
push
sub
js
add
rorl
adc
lahf
daa
push
cmc
push
cwtl
adc
dec
adc
adc
pop
stos
icebp
dec
pop
dec
cmp
lods
push
stos
fucomi
jle
repnz
sbb
aaa
gs
sub
pop
inc
fadd
into
mov
cmp
sub
mov
mov
scas
cmp
clc
mov
adc
and
jnp
mov
mov
aam
fwait
jmp
dec
out
pop
add
jg
cli
add
sbb
pop
mov
mov
fs
shrl
out
inc
in
cld
pop
sub
push
mov
les
lock
test
pushf
jo
and
loop
cmp
dec
fs
jns
imul
inc
pop
mov
dec
leave
dec
fldenv
sti
insb
outsl
xchg
icebp
add
ja
mov
sub
cmpsb
jb
push
sbbl
dec
lods
psrlq
jle
movsl
or
cmp
movsl
mov
mov
pop
aad
sti
pop
xor
lret
and
rcrb
xchg
movsb
adc
out
sbb
test
pop
sub
sbbl
sbbl
imul
adc
inc
add
dec
fsubrl
les
repnz
jne
sahf
stc
mov
push
cmpsl
add
sti
xchg
jmp
mov
mov
xor
pop
cmp
mov
xchg
jg
stos
jnp
or
sbb
ret
imul
sbb
jne
jg
push
jno
push
inc
dec
mov
fiaddl
mov
jmp
mov
dec
addr16
mov
in
out
push
popf
xchg
jns
in
lret
cmp
rcrl
cmp
mov
adc
pop
mov
adc
test
cmpsl
subb
loope
rclb
sub
test
xlat
addb
xchg
sbb
in
addr16
adc
add
int3
push
xchg
push
sbb
hlt
push
mov
add
cs
or
inc
js
add
inc
cwtl
mov
pop
in
ret
push
mov
xor
pop
and
lock
les
js
test
outsb
lcall
enter
test
mov
xchg
jmp
xorl
loop
addb
xchg
cmp
push
pop
lahf
jbe
sarb
mov
shll
xor
jge,pt
fidivl
lods
push
mov
dec
icebp
sbb
insl
and
push
push
rorb
xlat
xlat
or
cmp
pop
adc
stos
jnp
xchg
out
jl
xchg
push
inc
inc
and
clc
movsl
mov
cli
jo
mov
jno
push
ret
inc
hlt
xchg
pop
popf
test
addl
clc
out
xchg
xlat
test
fisubl
sub
jne
push
dec
mov
nop
lods
pop
and
gs
lret
lods
mov
inc
and
roll
aad
pop
adc
sub
pop
mov
jbe
aas
aaa
add
sbbb
inc
inc
jmp
mov
test
das
cwtl
and
push
mov
rol
in
mov
cmp
mov
xchg
mov
mov
repnz
lods
sub
dec
les
sub
stc
inc
push
enter
push
sahf
sbb
and
leave
subb
and
xchg
out
and
fmul
imul
cld
inc
xlat
jbe
mov
mov
sarb
fmul
outsl
out
cli
xchg
inc
push
gs
fistl
aas
imul
add
mov
imul
mov
enter
lret
mov
dec
scas
test
pop
inc
icebp
testl
sbb
pop
ficoml
mov
mov
imul
inc
pushf
inc
in
xor
mov
mov
int3
adc
shl
loopne
das
push
clc
push
add
mov
dec
mov
xchg
mov
jne
and
xlat
or
stos
push
add
pop
ja
dec
mov
pop
sbb
dec
and
sbb
mov
enter
pop
pop
shlb
cltd
push
cmp
mov
and
icebp
lock
icebp
fstl
pop
out
aaa
pop
mov
pop
push
inc
or
and
inc
roll
enter
jle
aam
jle
test
pop
jno,pn
mov
jae
mov
stos
int3
and
pop
ss
lahf
sar
cmpsb
aam
jecxz
mov
in
push
loop
pop
mov
shl
adc
mov
jmp
in
ss
pop
sub
mov
mov
pop
push
scas
loope
cli
and
fs
fsubrl
ds
dec
add
sti
push
inc
mov
mov
push
ret
dec
mov
jo
jae
adc
pop
push
pop
jae
xchg
jo
mov
xchg
fistpll
incl
orb
xor
sub
sbb
jecxz
jecxz
xchg
inc
test
fisubl
push
std
sarl
pop
testl
repnz
adc
mov
dec
dec
xchg
inc
sbb
int
ss
push
movsl
imul
das
ljmp
inc
jb
out
cwtl
add
jp
sti
fsubl
adc
mov
mov
pop
push
fbstp
push
mov
xchg
mov
mov
addr16
sub
jo
cmc
ds
in
cld
mov
icebp
roll
or
das
xor
mov
pop
and
mov
and
loopne
adc
add
mov
mov
xchg
outsl
call
xor
jno
daa
clc
cmp
mov
jecxz
je
out
inc
jbe
sub
outsb
cmp
bound
pop
cwtl
leave
push
sub
add
jae
jnp
mov
mov
fidivs
add
into
dec
shlb
mov
addb
pushf
fisttps
or
mov
scas
repnz
in
mov
mov
dec
in
jmp
icebp
cltd
mov
mov
cmp
imul
push
jne
mov
xor
sbb
add
xchg
push
bound
sbb
xor
test
aam
hlt
fwait
rcl
inc
cwtl
jle
add
aas
sub
rolb
jns
push
dec
mov
xchg
adc
cs
fwait
or
repnz
int
rcr
into
repz
cmp
loope
mov
mov
mov
add
gs
aaa
xor
push
inc
push
xor
pop
pop
int3
std
pop
mov
sti
addl
jge
ja
jnp
stc
push
pop
push
popa
push
xchg
or
out
aad
cltd
mov
cmp
lea
frstpm(287
bound
dec
push
inc
xor
fisubrl
push
test
fwait
pusha
ja
int3
ds
sub
cmc
imul
lcall
fdivrs
sahf
pop
push
cmp
jp
jle
loope
loopne
lods
mov
or
dec
cmp
dec
mov
jp
pop
xchg
btc
push
test
inc
out
cmp
sbb
mov
fldenv
arpl
loopne
adc
movsb
mov
shl
push
jmp
pop
cli
rorb
jnp
in
iret
adc
lods
aas
or
inc
mov
cmpb
pop
mov
jbe
dec
lods
mov
xchg
mov
int
mov
rcl
leave
cwtl
xorl
and
push
mov
mov
sarl
mov
jmp
pop
mov
pop
sbb
fdivp
or
cld
ficomps
stos
mov
shrb
or
xor
imul
xor
mov
lahf
add
out
sub
in
lcall
inc
or
arpl
jle
xor
fisubrs
add
push
pop
push
push
and
or
pop
sub
mov
sub
mov
xchg
inc
dec
push
mov
imul
popl
ja
pop
lods
fimuls
int3
mov
mov
in
mov
or
insb
mov
pop
pop
add
das
dec
popa
lret
insb
ljmp
or
out
pop
popa
sti
popf
jmp
cmc
fsts
inc
test
lods
out
aas
add
mov
push
int3
fdivrs
andb
fdivl
mov
xor
add
jbe
out
mov
sarb
enter
fdivrl
jge
sub
xchg
mov
inc
cmp
mov
or
pop
mov
mov
mov
cwtl
in
test
add
or
rcll
mov
outsl
sub
add
ds
mov
lret
sbb
sahf
mov
or
sbb
std
push
repz
jl
fcomps
xchg
and
inc
lcall
aam
jae
cmp
mov
jbe
jo
xchg
xchg
sti
mov
hlt
popf
push
aas
or
cli
cmp
xchg
add
xor
aas
xchg
int3
imul
pop
pop
ja
lahf
seta
mov
jl
inc
xchg
cmp
inc
insl
or
xor
ds
adc
push
in
popa
int
cwtl
hlt
sub
mov
fsubl
mov
scas
dec
jecxz
shl
mov
pop
add
pop
fiaddl
lods
sub
pop
das
push
jnp
loop
sbb
fsubrl
sub
xchg
mov
jmp
jp
mov
push
scas
mov
cwtl
cwtl
jg
or
push
into
mov
mov
push
cmpsl
out
lret
aaa
xchg
or
pop
movsb
xchg
loop
cmpb
lds
lock
inc
outsb
pop
lea
pop
in
lock
add
rclb
xor
dec
inc
aam
or
pop
mov
pop
inc
mov
cmp
dec
push
insb
jns
cmp
dec
loope
cltd
icebp
xchg
push
pusha
pop
cmp
mov
xchg
inc
imul
mov
sub
jno
mov
scas
mov
cltd
bnd
repnz
sbb
test
dec
xor
add
lea
pop
add
and
les
sub
cmp
aaa
xchg
pop
lds
dec
rolb
cmp
pop
add
fsubr
repz
or
mov
les
loope
jle
xor
inc
dec
push
ret
insl
fisubs
in
neg
mov
jg
popa
repnz
inc
or
int
repz
ljmp
popl
or
inc
or
mov
or
sub
sbb
fiadds
add
shll
popa
hlt
dec
jne
dec
jae
push
imul
movl
push
fmuls
and
and
aas
js
pushf
gs
sub
pop
and
test
push
add
out
cmp
rclb
push
jle
push
cli
xor
popf
and
lret
xchg
int3
rorl
mov
dec
aam
sub
lods
sbb
jg
lea
pop
mov
insb
ret
cmp
or
mov
divl
movsl
cltd
mov
or
xor
xchg
xchg
mov
adc
lods
add
jl
insl
push
loop,pt
pop
call
movsb
shlb
hlt
or
popa
iret
jmp
sbb
test
and
rolb
or
jecxz
mov
push
xor
dec
repnz
lret
scas
mov
jnp
jle
and
mov
ss
xchg
ja
cmp
pushf
loop
ds
addb
iret
fcoms
lock
insb
sti
or
jno
pop
movsl
loope
pop
cwtl
lods
sub
inc
adc
cmp
les
call
mov
imul
jecxz
push
adc
add
cmc
into
cli
bound
add
ss
xchg
xlat
xchg
out
stos
pop
or
test
ds
pushw
or
cmp
adc
or
lods
movsb
mov
int3
adc
das
sub
lods
cltd
cmpsb
cld
cmp
cmpsl
pop
ds
loop
movsb
out
pushf
mov
mov
fldcw
sub
ret
fsubrs
in
js
or
xor
jle
ror
sbb
dec
sub
push
mov
adc
in
mov
fwait
xchg
or
pop
aaa
nop
and
dec
je
ss
adc
mov
ds
and
and
mov
or
pop
jge
sub
jnp
push
lock
lock
sub
jno
sub
mov
shll
addr16
push
ficompl
inc
bsr
mov
jl
dec
or
inc
fsubrs
and
and
jnp
testb
mov
lods
jle
cmpsl
imul
rcll
aad
ss
hlt
mov
jo
mov
pop
popf
inc
int3
ljmp
out
insl
out
add
pop
mov
inc
sahf
fsubrs
xor
mov
dec
add
rorb
rcrb
sub
ja
sahf
addr16
jecxz
ja
cld
int3
add
xchg
aam
pushf
xchg
sub
lret
popf
pushf
lret
das
bound
movsl
dec
sbb
xchg
in
pop
adc
stos
out
push
out
div
andb
dec
test
adc
int
filds
rolb
sbb
pop
stc
outsb
sub
ror
sbb
dec
jnp
sbb
xchg
mov
ret
dec
pusha
cld
jno
lods
add
mov
sub
sub
mov
stos
xor
jmp
cmp
inc
dec
mov
sahf
scas
or
insb
es
pop
jb
inc
dec
jo
ljmp
mov
das
repz
inc
xor
add
out
popf
scas
dec
js
leave
repnz
jl
int3
dec
sbb
movsb
cltd
sbb
inc
in
push
sub
jne
imul
subl
sahf
push
add
pushf
sbb
rorb
adc
in
loop
sub
cmpsb
sub
jmp
adc
dec
adc
inc
aam
orb
mov
cmc
mov
iret
dec
mov
fistps
ds
cmp
aam
push
lods
jl
mov
push
xchg
mov
fistpll
pop
mov
pop
lea
fisttpl
mov
pop
rcr
or
insl
dec
dec
fnsave
popl
sbb
inc
adc
push
stos
loope
pop
dec
loop
outsb
scas
pop
and
mov
xor
sub
pop
cmp
cltd
or
and
lock
jecxz
pop
hlt
fwait
or
or
sbb
leave
out
mov
and
push
jle
mov
jp
movsb
jle
mov
lock
dec
cmp
fisubrl
addr16
or
mov
mov
sbb
pop
jg
cmp
pop
out
pop
inc
mov
and
lcall
loope
arpl
mov
je
cmp
xchg
div
adc
repz
outsb
dec
mov
xchg
xchg
and
es
nop
inc
int3
pusha
inc
lds
pop
outsb
rclb
test
push
sahf
mov
xchg
repz
pushf
lret
mull
dec
call
xor
jmp
movsb
mov
in
cmp
xlat
hlt
daa
mov
sub
inc
das
jb
icebp
nop
pushf
stos
jne
jb
add
push
jl
push
mov
mov
jg
or
arpl
out
adc
push
stos
dec
stc
or
adc
sub
sbb
aaa
addr16
xorb
loop
aas
jge
lods
add
xchg
sub
out
sub
push
repnz
repnz
jg
push
lret
cmpsl
hlt
aaa
inc
test
test
inc
sbb
push
or
test
xchg
mov
adc
ljmp
call
sbb
pop
out
pop
sbb
aas
in
push
adc
or
pop
mov
push
and
mov
push
outsb
mov
push
xlat
movsl
mov
pop
inc
pop
and
bound
xor
test
jmp
add
das
cmp
adc
inc
int
fmull
push
dec
icebp
jge
xchg
sbb
iret
push
mov
adc
push
and
out
je
aaa
test
cmp
dec
fucomp
adc
ret
xchg
pop
inc
mov
leave
loopne
lods
fsub
jp
dec
push
loop
lahf
mov
hlt
lcall
jp
xchg
loope
data16
ret
daa
cli
lret
jae
mov
test
lds
mov
loop
popa
cmpsb
aam
dec
into
jo
xchg
mov
lahf
or
push
leave
mov
out
iret
adc
mov
jecxz
xor
call
movsb
outsb
adc
mov
pop
xchg
aad
es
jmp
je
adc
sub
jnp
lds
out
fwait
xchg
add
mov
aam
pop
lret
sub
xchg
inc
cmp
jecxz
mov
mov
in
cli
lahf
popf
insl
loope
imul
add
cwtl
mov
and
lds
test
sbb
fstpl
adc
fdivs
clc
xor
add
pop
mov
cmp
mov
mov
idivb
roll
ret
daa
loope
scas
stos
ret
pop
cmpsl
mov
js
sbb
into
fiadds
shrl
nop
leave
push
mov
cmp
cmp
gs
aaa
mov
je
and
push
push
outsl
push
cmp
out
inc
and
push
push
dec
mov
aad
sbb
adc
cli
xor
arpl
aad
loope
into
or
loope
fldcw
lds
xchg
gs
push
sbb
xchg
sub
or
jnp
inc
pop
jle
sbb
pop
and
int3
or
out
pop
cmc
and
mov
scas
ja
fldenv
out
push
pop
jns
mov
in
mov
stos
dec
or
mov
dec
fwait
dec
ret
push
repz
push
xchg
mov
pop
jmp
mov
sbb
pop
js
scas
pop
push
pop
int3
in
cmp
or
xor
inc
mov
cltd
fidivrs
leave
pop
push
adc
push
icebp
fildl
and
test
or
xor
loop
cmp
call
push
xchg
ss
sbb
rolb
sub
ds
std
test
sti
loope
adc
das
inc
rorb
mov
in
pop
mov
add
cld
fs
xor
or
mov
mov
lods
jbe
loop
sbb
add
dec
add
sbb
xor
xor
mov
mov
jmp
jmp
and
xchg
cs
xor
and
sbb
and
dec
mov
push
xchg
ljmp
mov
int
outsl
popa
rorl
push
jmp
inc
cmpsb
sbb
and
push
mov
adc
inc
outsb
test
pop
xchg
in
and
dec
mov
mov
out
scas
xchg
xor
lea
cmpsb
mov
pushf
and
add
out
lret
loop
cmc
mov
ret
adc
sub
mov
xchg
push
add
cmp
pop
sahf
lret
adcl
pop
xchg
jo
xchg
jge
cmp
imul
fidivl
xor
movsb
arpl
test
repz
icebp
popa
test
clc
in
xlat
leave
flds
lds
pop
gs
into
lret
jmp
ja
sub
in
lock
sbb
pop
xchg
jg
mov
jno
jecxz
sub
cld
and
faddp
imul
dec
sbb
sub
add
nop
jnp
or
testb
adc
mov
mov
pop
insb
test
mov
cmpsl
mulb
jo
fscale
data16
xchg
or
and
pop
out
dec
fildll
lods
adc
or
or
cwtl
xor
insb
mov
push
xor
jo
xchg
jbe
ret
lahf
cwtl
and
test
int
call
popl
dec
add
lods
xchg
lds
out
cmp
jge
dec
data16
inc
aad
adc
adc
pop
call
popa
inc
and
mov
ljmp
rorl
and
out
mov
mov
pop
push
sbb
xor
xlat
mov
mov
xchg
jmp
sti
jno
push
mov
mov
nop
sub
lret
jbe
add
cmp
xor
jp
ds
or
cmp
mov
sub
or
dec
mov
ja
insl
dec
inc
sbb
aad
xchg
push
xor
outsl
popf
push
lret
sahf
pop
xor
sbbl
std
pusha
insb
adc
dec
mov
adc
addb
sbb
sbb
movsl
lock
xchg
and
jecxz
push
insb
adc
es
es
mov
pop
inc
push
inc
mov
jae
popf
add
lret
xchg
imul
stos
stc
int
insb
rcl
into
or
test
ret
mov
push
adc
add
in
and
pause
int3
jno
stos
mov
pop
js
xchg
out
decl
fwait
dec
inc
mov
popa
mov
fmull
rcr
sahf
mov
arpl
lcall
cwtl
cmp
sbb
loop
push
jo
or
dec
and
inc
jne
arpl
fwait
mov
cmpsl
mov
in
mov
int3
inc
inc
sti
xchg
insl
mov
das
mov
subb
or
stc
bound
pop
ficoml
push
ss
stos
mov
jae
push
cltd
out
dec
ficompl
push
inc
ds
arpl
push
xor
mov
arpl
jge
xchg
in
test
in
rcl
sub
sbb
mov
outsb
sub
in
clc
sbb
jbe
adc
pop
cmp
add
mov
add
xor
sub
enter
ljmp
push
or
mov
in
cmpsb
cmc
push
jmp
lock
pop
jecxz
push
pop
mov
out
rcrl
test
cld
mov
iret
inc
xor
cmp
and
je
test
div
dec
pushf
pop
xor
and
xchg
loop
int3
add
enter
inc
mov
movsl
stc
lock
and
sbbb
adcb
or
cmp
sti
out
out
in
imul
ret
adc
je
insb
loopne
pop
aas
mov
sarb
stos
test
xor
iret
jmp
bound
add
cmp
cmc
ja
mov
sub
add
pop
cmp
lods
mov
xchg
ja
std
inc
add
repnz
aad
jle
cmpl
or
mov
lds
add
inc
les
sbb
ss
or
cmp
jnp
lds
jp
andb
dec
aaa
adc
sub
outsb
mov
push
sub
imul
mov
mov
fcoml
ret
mov
neg
push
fwait
and
in
fwait
into
inc
cmp
cmp
jo
dec
sbb
adc
or
loopne
dec
addr16
adc
nop
jne
xor
sub
pop
push
int
pop
jl
arpl
loop
pop
aas
sub
sahf
cmp
or
dec
and
push
int
ds
cmp
rcll
pusha
mov
mov
stos
adc
pop
xor
cmpsl
insl
ucomiss
stos
inc
test
sbb
sahf
add
shl
call
add
mov
in
jl
js
jge
js
daa
sub
dec
jns
fidivs
and
and
divl
jae
lcall
and
mov
js
xchg
or
ljmp
sbb
fisubs
rolb
xchg
mov
pusha
or
and
jne
or
popl
xchg
pandn
loopne
repz
and
pop
adc
or
pop
jnp
sub
dec
jg
hlt
xchg
pushf
fstps
inc
pop
push
cli
leave
cmp
xchg
ds
mov
cmpsb
jp
mov
sahf
movsb
int
popa
add
fnstsw
pop
cwtl
add
movsb
in
lods
into
cmc
insl
movsl
cld
cltd
icebp
add
sbb
negb
clc
sbb
xor
pop
jecxz
bound
imul
repnz
jge
mov
leave
adc
add
enter
out
outsl
inc
dec
mov
xchg
jns
adcl
sbbb
fs
add
fidivrs
jl
mov
jge
jg
outsl
mov
add
pop
in
popf
pop
lret
mov
sub
pop
inc
ficoms
mov
inc
repnz
pop
or
addb
mov
mov
or
cmp
cmp
loopne
dec
mov
or
les
es
popa
bound
pop
mov
adc
dec
fwait
inc
mov
dec
cmpsl
pop
sub
call
and
nop
mov
shrb
mov
mov
in
rorb
js
das
aad
and
mov
jbe
or
fidivrs
mov
sbb
mov
mov
in
loope
sbb
jg
dec
xor
or
mov
cmpsb
shrb
rorb
adc
cli
shll
mov
and
repnz
mov
push
pop
cwtl
lods
inc
push
xchg
inc
or
mov
mov
or
scas
xchg
mov
clc
icebp
cltd
xor
insl
mov
jno
js
mov
ja
je
jle
mov
add
adc
js
call
das
mov
cld
imul
cltd
bnd
push
sbb
cltd
push
add
pushw
push
jle
push
rcl
jecxz
pop
dec
insl
nop
rcl
inc
adc
fimull
mov
jbe
mov
cmp
pop
mov
adc
push
rcrb
cs
aaa
ret
movsb
rorb
ret
pusha
mov
pop
mov
aas
loope
sbb
xchg
fisubl
aam
push
insl
push
fcmovbe
inc
mov
aas
inc
les
jmp
popa
pusha
dec
dec
mov
icebp
push
sbb
fidivs
inc
xor
jp
xor
add
mov
mov
jl
xchg
movsb
mov
xchg
movsb
cmpsb
pop
bnd
cli
xor
test
adcl
adc
movsb
mov
sub
loop
mov
lcall
mov
rcrb
mov
or
and
cs
nop
cmp
fs
mov
cmpb
and
dec
sub
out
add
lds
mov
mov
sub
adc
push
sub
test
cwtl
movsl
add
mov
jg
mov
notb
je
cld
daa
add
icebp
push
mov
jnp
add
jnp
mov
push
cwtl
push
ret
mov
pop
adc
jnp
dec
cmc
xor
orl
pop
jne
jo
pop
fidivl
mov
loope
cmp
or
cwtl
or
inc
shl
mov
in
xchg
sub
repnz
lods
xchg
es
enter
inc
ret
aam
loop
cwtl
xlat
shlb
sbb
mov
or
orb
mov
repnz
cld
push
jp
or
sbb
ret
dec
lock
dec
inc
ss
hlt
scas
out
pop
xchg
daa
jl
or
add
inc
imul
jle
outsl
or
divb
scas
mov
out
xlat
push
cmpsb
push
jno
sub
lods
repnz
jp
rep
movsl
test
hlt
icebp
xor
xor
jb
add
andb
cmp
xor
sbb
in
add
add
aam
test
es
call
xchg
add
or
jns
mov
jo
lahf
dec
cli
jecxz
adc
pusha
push
jmp
adcb
bound
xchg
jg
mov
mov
jb
add
pop
lods
push
mov
int3
mov
mov
push
pop
lret
mov
add
lret
fstpt
cmp
push
aam
pushf
push
pop
aam
repnz
mov
mov
fs
daa
andb
popa
dec
sub
add
inc
inc
aaa
jo
repnz
scas
xchg
loop
xchg
lret
push
inc
jbe
xor
dec
adc
test
scas
sbb
cmp
aaa
dec
and
and
push
xorb
divl
dec
and
sub
lret
ret
and
out
xor
aam
and
addr16
cmp
jae
mov
pop
sub
gs
sub
add
js
dec
jecxz
movsb
pop
ja
iretw
cli
shll
inc
add
imul
jecxz
ds
stc
cs
out
dec
inc
mov
mov
in
push
sub
xchg
xchg
pop
inc
js
lods
dec
xchg
ret
dec
adc
outsl
fimuls
lahf
lret
dec
stc
iret
jg
out
pop
inc
jne
mov
push
push
ret
mov
mov
test
inc
dec
mov
and
jno
pop
aam
mov
insl
lcall
mov
mov
sbb
or
add
enter
pop
cmpsl
repz
neg
cli
shrl
enter
clc
sub
adc
cmp
mov
lods
sub
push
fcomi
leave
shll
jno
xchg
or
xlat
cmp
fsub
push
jmp
adcb
mov
and
ja
push
mov
and
test
push
mov
pop
popf
out
push
dec
incl
shll
fldenv
sbb
cmp
fistl
adc
cmp
stc
and
cmpl
icebp
cmp
pop
pop
test
int3
jl
cs
dec
mov
inc
icebp
mov
mov
push
mov
ds
cmp
push
or
xchg
mov
loop
xchg
xlat
arpl
ljmp
add
add
adc
imul
lret
imul
jbe
loop
mov
lods
out
add
xchg
stos
das
mov
add
sbb
mov
push
add
sub
ret
push
stos
mov
pop
cs
loopne
ljmp
jecxz
cmp
out
ss
and
push
mov
das
xchg
dec
sbb
pop
movsb
test
jns
or
pop
test
pop
jbe
gs
push
out
mov
fcompl
xlat
sbb
shrb
lret
mov
outsl
movsl
xor
fldl
inc
sbb
scas
xchg
shlb
jne
fs
sub
push
stc
shrb
lods
pop
sti
adc
leave
mov
sti
std
xchg
mov
cwtl
out
jmp
out
cmp
mov
adc
in
jno
imul
xchg
fmuls
sbb
sub
push
cwtl
into
out
or
fildl
xchg
test
lods
sarl
xchg
lds
test
and
call
gs
cld
xor
or
lods
mov
xchg
movsb
xchg
test
inc
mov
cltd
scas
ror
scas
les
adc
fsubrs
out
add
dec
loope
inc
jnp
jae
inc
mov
sub
les
cld
test
rcr
ja
loopne
in
or
pushf
cli
std
nop/reserved
ja
stos
mov
lods
and
cmp
shlb
xchg
mov
cmp
popf
jecxz
jae
ror
cld
sbb
push
std
mov
push
daa
adc
sub
sbb
cmp
sub
xor
aas
inc
in
push
jae
or
sarb
mov
pop
mov
xor
sbb
dec
push
cmp
ljmp
push
mov
jl
movsl
xchg
jbe
andl
sbb
test
mov
cmp
aaa
push
xchg
es
cmp
xchg
jmp
cmpl
lods
ja
push
dec
push
mov
lea
sbb
dec
out
mov
test
push
add
fwait
add
movsl
pop
lahf
push
push
je
ds
push
add
mov
push
lea
pop
inc
xlat
es
mov
dec
int
cwtl
les
inc
push
pop
aad
out
ds
xor
xchg
sbb
pushf
vpaddusb
lret
ret
cmp
mov
gs
mov
mov
sub
inc
mov
jmp
insl
sub
push
mov
scas
add
xchg
cmp
inc
insb
pop
mov
sub
ljmp
sub
sarl
push
leave
sahf
add
xchg
rep
std
mov
scas
sbb
adc
add
cmpsl
sbb
testb
pop
mov
push
out
jmp
push
out
iret
mov
push
in
sbb
pop
pop
inc
sbb
pop
scas
fwait
mov
jo
cltd
jbe
cli
mov
bound
out
pop
jo
cmp
xchg
js
inc
pop
jg
gs
sbb
dec
pop
hlt
sbb
scas
andb
mov
fisubs
or
les
cmp
push
int3
or
mov
nop
xchg
cwtl
addr16
lock
push
mov
enter
inc
mov
or
mov
push
addl
and
lods
test
sbb
sarl
jl
mov
xlat
and
sbb
scas
push
idivl
push
adc
inc
inc
out
sub
lcall
push
push
mov
cmp
cmp
stos
cwtl
add
pop
out
xchg
je
adcb
enter
lds
lock
xor
or
dec
xchg
sub
pop
subb
sbb
inc
push
pop
cltd
pusha
mov
out
xlat
notb
mov
out
test
rcrb
xchg
mov
push
inc
pop
cli
shll
sbb
in
cld
dec
push
fwait
xor
sahf
adc
pop
pop
push
jecxz
sbb
pop
jb
shlb
pusha
out
ret
push
loop
adc
fldl
pop
mov
sbb
cmp
movsl
jae
lea
xchg
or
push
test
cs
or
in
push
into
add
cli
sub
pop
mov
dec
icebp
push
push
xor
shrb
push
mov
inc
or
jbe
jle
xchg
sti
or
push
icebp
xor
int
and
cmp
jo
and
cmp
outsb
aad
or
adc
add
mov
sbbb
jmp
arpl
mov
fs
and
scas
mov
ja
and
or
cmpsl
jo
out
xchg
sub
std
mov
jne
fs
pop
mov
cmp
shl
imul
xor
call
adc
out
mov
div
and
xor
lods
sti
mov
ja
das
dec
in
and
xchg
imul
arpl
out
xchg
jmp
out
dec
cld
outsb
or
jnp
lods
lock
inc
arpl
aas
fstpt
sbb
jmp
lcall
ret
ja
int
dec
pop
nop
repnz
mov
pop
lcall
aam
jg
cmp
sbb
and
adc
inc
and
adc
iret
xlat
int
popf
cbtw
inc
fisttps
push
outsb
ficomps
mov
test
jb
insl
jmp
and
fbld
jns
jbe
daa
push
dec
sbb
cmp
pop
call
dec
push
out
xor
xor
pop
push
loopne
lods
or
pop
addr16
push
cmp
dec
cmp
dec
or
and
in
and
sbb
add
mov
xchg
adc
sarb
popf
arpl
and
or
dec
fnstcw
jmp
mov
sbb
xor
and
popa
es
fdivs
shr
dec
subl
mov
daa
ljmp
and
push
inc
dec
in
adc
loopne
stos
xchg
sarl
cltd
lea
adc
pop
mov
sbb
test
sbb
ja
int3
sbb
cmp
lods
xlat
adc
loope
rcll
xor
inc
jl
das
mov
imul
inc
sub
adc
test
adc
dec
cmp
out
daa
jne
cld
inc
hlt
das
imul
mov
in
testl
iret
jns
pop
aad
and
aam
rcrb
dec
movsl
sbb
scas
stos
mov
mov
or
daa
push
push
icebp
jne
scas
mov
in
je
sbb
and
clc
mov
xor
cld
ret
sbb
icebp
sahf
ret
scas
sub
or
and
add
pop
test
js
std
sub
cmp
js
mov
mov
adc
hlt
or
leave
add
mov
fistps
push
insl
pop
mov
adc
mov
mov
xchg
xor
rclb
rcrb
xchg
cmp
lcall
shrb
cli
push
adc
xchg
outsb
mov
pop
xchg
test
cltd
push
test
nop
roll
std
jns
je
pop
inc
lock
add
xchg
mov
scas
push
xor
xchg
pop
cmp
fs
pop
lret
and
jmp
xor
xor
daa
fsts
repz
repz
push
xlat
dec
xor
xor
dec
int3
mov
stos
inc
inc
cmpsb
lahf
mov
mov
mov
or
imul
sub
sti
repnz
sub
xor
push
stos
loopne
add
cwtl
pop
sbb
test
mov
mov
orb
in
movsb
xchg
jns
sbb
xor
subb
push
add
out
cmp
aad
cmc
sub
push
shll
adc
mov
jnp
addl
movsb
push
jb
or
mov
ret
pop
xorb
inc
sub
mov
xor
lret
cmp
aas
sahf
pushf
jo
xor
lea
bound
sahf
dec
dec
shld
mov
mov
push
aas
int
or
stos
popf
xlat
sbb
xchg
pop
out
fidivl
das
mov
lret
push
enter
mov
and
icebp
hlt
adc
adc
repnz
lock
outsl
adc
sbbl
jo
negl
sub
jne
cli
mov
rclb
adc
inc
insb
cmpsl
scas
xor
dec
test
cltd
into
repz
jne
vmread
ss
sub
mov
mov
scas
icebp
testl
push
psubw
mov
pop
adc
aaa
fs
push
fadds
mov
test
or
or
cmp
mov
imul
in
mov
shll
mulb
popf
ret
ja
les
lock
and
add
mov
rorb
pusha
cmpsl
cmp
xchg
sahf
pushl
out
pop
xor
pop
popf
lcall
ja
pop
xor
cld
bound
sti
add
in
mov
xchg
push
dec
shrb
sbb
test
mov
xlat
out
dec
sbb
cmp
xor
imul
scas
cs
push
mov
jb
es
pop
jnp
push
adc
fisubs
pop
xor
call
sbb
test
jge
add
pop
fistpl
xchg
pop
sbb
mov
xor
popf
sbb
mov
pop
inc
mov
mov
fcom
sub
jo
icebp
mov
dec
sub
sti
inc
leave
fldt
cwtl
pusha
sbb
fyl2x
cwtl
sub
adc
pop
and
inc
movsl
sahf
test
mov
mov
xchg
xchg
cmp
mov
xchg
mov
adc
pop
dec
lret
iret
cmp
xlat
sub
sbb
xor
and
jns
sbb
mov
stos
imul
movsb
adc
fcoms
push
cmp
mov
push
push
aaa
test
sbb
dec
jb
mov
xchg
rolb
jb
fmull
pop
mov
inc
and
xchg
pop
mov
add
aad
sub
jge
jp
adc
push
inc
pop
mov
fistpl
xchg
rcrb
push
sbb
pop
orl
dec
pop
push
xchg
xchg
or
jecxz
movl
cmp
xchg
and
das
popa
jge
movsb
insl
add
push
xchg
lcall
insl
loope
sahf
pusha
pop
fsubl
xlat
ljmp
insb
and
mov
and
or
lods
and
pushf
popf
sti
sbb
leave
and
mov
jb
cmp
bound
lock
push
or
stos
add
aas
movb
gs
adc
cwtl
clc
sbb
lods
or
jbe
jbe
adc
mov
aad
xchg
dec
fwait
dec
fidivrs
sub
pop
push
mov
aas
movsb
jp
mov
pushf
xchg
test
lods
jle
push
xchg
sub
adc
jo
and
push
jp
pop
imul
or
adc
jecxz
test
xor
sub
out
fcoml
xchg
cmpsl
fsubrl
addb
js
push
ds
es
jbe
jle
dec
stc
and
jno
mov
frstor
and
inc
and
test
inc
cld
repnz
mov
stc
addr16
mov
jae
xchg
in
cmp
inc
outsb
mov
int
inc
and
ds
jecxz
test
pop
adc
shlb
hlt
das
adc
jns
subl
in
push
jge
ret
stc
dec
ja
out
insb
jo
in
xorb
inc
enter
adc
call
pop
jge
mov
or
loopne
mov
addr16
imul
stc
imul
sbb
lret
and
aaa
jb
testl
pop
mov
stos
mov
notb
add
dec
addb
cmpsb
stc
adc
repnz
das
inc
jecxz
mov
stos
sti
jae
pusha
lods
movsl
out
dec
fwait
je
int
push
cmp
mov
dec
fldcw
pushf
cwtl
and
cs
popf
mov
mov
inc
stos
insl
int3
inc
add
sub
jmp
aaa
and
in
int3
cmp
ret
out
sub
sti
push
push
fisttpll
mov
test
in
fcmovbe
pop
dec
stc
fnstcw
lcall
in
dec
aam
outsb
test
repnz
movsl
pop
popa
dec
cli
push
mov
jp
ljmp
insl
cmp
ljmp
rcr
pop
movsl
inc
or
dec
lcall
int3
cwtl
daa
ljmp
aad
mov
out
pop
filds
in
cmpsb
pmaddwd
jnp
or
push
adc
xor
push
fiadds
movsl
iret
cmp
aad
shlb
mov
mov
fisttpl
sbb
cli
dec
xchg
call
call
movsb
pusha
stos
sbb
mull
imul
psubsw
jmp
stos
aad
negl
adc
add
cmpl
jne
mov
push
mov
out
pop
dec
addr16
xchg
scas
test
data16
fcom
daa
imul
outsb
sarb
adc
ja
outsb
and
loop
ljmp
push
ljmp
in
push
sub
add
dec
inc
mov
out
inc
push
dec
jnp
imul
and
or
cli
test
sub
lea
ds
test
push
fsubr
jnp
sub
mov
mov
mov
fcmovnu
jl
aad
push
int
mov
jnp
sbb
mov
js
dec
ljmp
sahf
sbb
inc
mov
rcrl
inc
dec
daa
into
lea
mov
cs
roll
dec
imul
inc
cmp
adc
pop
cwtl
std
das
das
push
sbb
addl
adc
mov
jmp
xor
cmp
jae
sub
add
sbb
inc
cmp
es
loope
and
pop
gs
addb
int
cmove
lcall
mov
cli
test
mov
lcall
out
ljmp
stc
sar
jb
aam
repz
xchg
adc
stos
insb
jae
push
call
and
ss
sbb
pop
sub
js
jg
add
inc
adc
mov
cld
out
and
add
fld
mov
or
jp
mov
pop
adc
aad
xor
sbb
outsb
hlt
add
inc
adc
fstpl
adc
sub
push
mov
ret
mov
fcompl
push
sahf
lods
ja
sub
out
mov
dec
adc
std
jnp
loop
dec
data16
mov
pusha
dec
jle
mov
push
je
add
sti
popa
ljmp
subl
sub
cmp
test
push
sub
stos
cld
lea
and
mov
aaa
mov
xor
xchg
cli
dec
inc
jbe
adc
stos
mov
movsl
adc
xchg
sarl
in
xor
loopne
jnp
subl
hlt
jae
adc
jae
aaa
cmp
daa
les
push
ja
jmp
shll
test
add
lods
inc
pop
cmpsl
psllq
fcompl
mov
jl
add
inc
cmp
push
lcall
repnz
loopne
std
mov
sub
movsl
aas
rcrb
xor
cmpsl
testb
inc
iret
cltd
push
pslld
into
imul
enter
dec
xchg
movsb
pop
or
rcrb
es
dec
movsb
push
jne
shr
inc
lds
add
xchg
adcl
cs
inc
imull
cmpl
push
adc
scas
ficompl
xchg
jns
xchg
pushf
mov
imul
fisttpl
xabort
jo
push
cmp
jae
add
mov
sub
inc
mov
out
pop
pop
cmp
mov
add
lret
sub
mov
add
xchg
pop
les
ficoml
sbb
mov
mov
xchg
xchg
add
jb
sbb
out
outsl
push
inc
aam
inc
mov
xchg
mov
add
or
pop
incb
sbb
rorl
js
jae
repnz
push
fsubl
cmp
adc
xor
js
cmp
push
popf
fnstcw
pop
inc
mov
xchg
mov
add
imul
fimuls
js
dec
pop
pop
xor
mov
and
fs
js
xor
clc
push
fsts
sbb
pop
aad
in
repnz
fdivrp
inc
pop
cwtl
cs
aam
mov
pop
adc
mov
add
push
push
mov
add
sbbl
lds
mov
add
outsl
ficompl
dec
lods
cmp
xorl
jb
pusha
sub
div
xor
fisttps
mov
pop
outsl
dec
and
pusha
push
mov
dec
jb
fs
cmpsb
lret
push
test
testb
mov
sub
popa
xchg
gs
iret
sub
xchg
cli
lcall
mov
inc
push
jecxz
rorb
jns
negl
mov
adcb
lcall
mov
pop
sbb
mov
cmpsb
sahf
int3
cwtl
loope
out
je
mov
add
lahf
in
fs
mov
or
rorl
dec
xchg
cmc
inc
repz
aaa
push
push
les
jb
loope
enter
pop
add
fisttps
movb
cmp
jne
or
pop
inc
or
aas
inc
adc
neg
aas
js
lret
pop
sbb
es
cmp
inc
cmpsl
call
mov
xchg
jecxz
pop
inc
sub
push
xchg
push
push
les
xor
jge
sbb
mov
sub
icebp
shld
fsts
ret
xchg
mov
and
pop
sti
xchg
push
and
cltd
add
std
cmpsl
rorl
mov
mov
mov
nop
xchg
mov
pop
push
pop
rorl
lret
or
or
scas
mov
push
lea
push
or
inc
ja
xor
jle
push
add
pop
mov
and
and
ss
mov
mov
jb
fs
into
cmpsb
loopne
sbb
mov
dec
aaa
int
pop
cld
fimuls
or
jle
scas
rolb
and
sbb
mov
out
dec
daa
stc
push
add
mov
mov
push
in
inc
cltd
out
push
fnstenv
sarl
outsb
popf
sbb
imul
outsl
mov
adc
into
push
ja
cltd
insl
dec
fucomip
mov
mov
fwait
mov
add
sub
push
aaa
jns
xor
loope
push
xor
lahf
push
inc
mov
loope
inc
pop
lcall
cmp
mov
push
leave
jl
jnp
sbb
scas
cltd
mov
sub
sarl
adc
sbb
insb
std
cli
cmc
xchg
sub
mov
lds
mov
inc
shl
mov
xchg
inc
out
ja
jbe
cmp
sbb
data16
sbb
cmp
or
fadds
inc
aad
jge
in
ret
arpl
loopne
inc
int3
sub
pop
cwtl
iret
clc
icebp
loopne
iret
cmp
pop
push
mov
adc
and
cmc
fisttpll
outsb
cwtl
mov
inc
leave
andb
roll
je
adc
cmp
std
lret
pop
push
xchg
add
and
mov
or
pop
repnz
xchg
in
fisubl
popa
adc
cs
or
xor
fbstp
jae
insb
jne
xor
mov
ret
stos
insl
dec
jne
jmp
adc
imul
pop
rcr
ss
jae
jnp
and
lret
daa
imul
push
fbstp
jbe
in
loope
pusha
inc
mov
test
scas
stos
adc
sbb
pop
mov
mov
sub
scas
jg
xchg
and
push
pop
mov
dec
stos
push
subl
cmp
fimull
repz
mov
orb
xor
jle
pop
movsl
repz
mov
stos
push
ja
notb
popa
xorl
mov
jecxz
adcb
fimuls
ljmp
jno
jbe
icebp
mov
icebp
adc
pop
pusha
or
adcl
push
mov
testl
cmp
mov
inc
dec
subl
adc
icebp
cmpsl
add
arpl
out
in
and
xchg
sub
shrb
and
daa
pop
pop
cmp
lods
jno
adc
in
sbbb
int3
lret
or
lret
dec
lret
and
movq
mov
fidivrs
jg
inc
mov
adc
inc
fimull
das
lret
and
push
jae
mov
inc
sub
mov
add
jl
xchg
and
fnstcw
mov
popf
fbld
mov
push
shll
out
arpl
inc
mov
jp
mov
movsb
icebp
jle
cli
cmp
pop
jb
mov
xchg
leave
jmp
addl
cs
inc
sbb
mov
mov
lret
adc
mov
dec
testl
incb
test
push
add
aad
jo
mov
xor
add
in
sti
xor
sahf
inc
pop
gs
cld
lret
hlt
das
xchg
jnp
fcoms
lock
daa
sbb
mov
mov
mov
ret
fwait
or
lock
xlat
dec
divb
and
test
popf
dec
mov
shrl
sbb
fcmovnb
das
xor
popf
and
out
ret
pop
jmp
adc
adcb
insl
mov
pop
clc
cmc
push
in
and
repz
out
sbb
mov
movsb
adc
inc
faddp
push
fcoms
test
iret
inc
adc
in
rcrb
add
aas
push
lret
test
mov
mov
int3
or
loop
pop
add
adc
or
pop
lret
mov
mov
popa
adc
mov
rolb
dec
mov
iret
ret
lahf
out
lahf
sbb
hlt
cli
std
loopne
push
pop
push
push
add
jg
lds
mov
mov
mov
ret
push
inc
mov
imul
sbb
scas
cmp
jb
mov
jne
pop
insl
call
lods
es
shlb
jl
repnz
popa
jmp
lods
sbb
fsub
je
mov
loope
cmp
sar
add
adc
push
inc
lds
sub
das
sahf
adc
lret
push
jl
mov
push
pop
in
movsl
mov
pop
inc
cs
int
xchg
fcomps
sti
mov
cmp
sub
into
xor
arpl
pusha
jle
repz
outsb
test
pop
cmp
fists
aad
rcrl
mov
stc
dec
scas
mov
xchg
sbb
dec
stos
loopne
xchg
mov
cmc
es
xchg
mov
or
aad
jmp
push
dec
and
jne
js
sub
mov
jmp
leave
dec
sub
sbb
sbb
push
mov
je
inc
imul
fsubp
shl
les
fisubrl
outsl
cmp
nop
jle
adc
incb
inc
lock
shrl
add
daa
inc
stos
hlt
xor
cmp
mov
addr16
enter
cli
roll
xlat
call
repnz
out
adc
fdivs
inc
add
cmp
pushw
in
daa
sub
adc
addr16
mov
dec
jb
lods
and
mov
shl
mov
ss
shrb
xor
cld
mov
stos
mov
xchg
sbb
mov
or
xchg
cli
adc
in
inc
mov
cmp
fistpll
xchg
add
cli
xor
mov
rcr
push
in
mov
mov
lret
test
imul
xchg
in
enter
ss
push
pop
movsl
pop
cwtl
pusha
inc
aad
inc
cmpsl
xor
stos
orps
push
lret
mov
jle
pop
sub
inc
in
xor
in
out
dec
dec
lcall
jo
dec
mov
ret
fucom
imul
stc
int
mov
nop
add
out
or
sti
enter
je
mov
sub
std
push
movsb
outsb
sbb
inc
add
add
loope
mov
call
inc
mov
mov
stos
frstor
jg
mov
mov
mov
stos
into
jns
popa
adc
jne
jl
mov
dec
push
pop
xchg
mov
dec
jecxz
mov
repz
ss
or
es
aas
jl
cmpsb
jns
xor
je
and
or
dec
adc
jnp
js
scas
or
or
mov
push
mov
mov
xor
mov
inc
loop
jmp
dec
sub
mov
mov
mov
test
idiv
leave
popf
pop
insl
leave
adc
js
ja
cltd
bnd
and
jnp
arpl
lret
dec
out
push
cmp
shlb
loopne
fnstsw
adc
jp
mov
test
fcmovne
rcrb
pop
lahf
sti
fimull
cmp
test
sbb
xchg
dec
push
sbb
int
mov
xor
stos
push
in
push
push
lods
cld
int
in
dec
adc
cmp
xlat
rclb
shlb
mov
and
std
push
cmc
add
notb
sbb
scas
fdivrs
test
outsl
cmp
lcall
jns
stc
aad
dec
cmpb
push
ret
out
fmulp
loope
xchg
lcall
dec
in
mov
out
xchg
adc
inc
push
dec
insl
pop
cmp
add
mov
xchg
inc
push
dec
int3
add
cmpl
pop
mov
in
test
add
rcll
dec
movsl
leave
sbb
stos
mov
cltd
or
push
loopne
xchg
daa
sbb
jle
and
scas
fdivp
nop
cmc
mov
mov
aaa
dec
or
cmp
push
ja
dec
test
call
notb
adc
shrl
lock
adc
sbb
imul
lds
ljmp
xchg
outsl
push
jmp
cli
cwtl
mov
add
sbb
aam
jae
fldl2t
jle
test
add
or
mov
sub
das
out
pop
jbe
mov
adc
and
xchg
xor
pop
addr16
stos
rol
stos
ja
jecxz
mov
mov
repz
xchg
push
out
ljmp
jp
jae
push
cmp
out
dec
xor
fldcw
push
in
js
push
ret
and
push
rcl
and
xor
ja
test
mov
sbb
sti
mov
fcoms
lahf
xor
fbstp
mov
jge
sub
or
mov
mov
in
sub
stc
pusha
add
xchg
pop
test
inc
pop
fstps
jecxz
popf
cltd
mov
lahf
push
sar
test
gs
xchg
mov
test
sarb
stc
cli
movsb
cmp
movsl
mov
test
cmp
xchg
enter
sub
mov
mov
loop
dec
std
fildl
lods
insb
popa
xor
inc
jnp
push
repz
xlat
mov
cmp
enter
dec
imul
jmp
jae
cmp
sub
push
pop
xor
sbb
adc
mov
jb
mov
in
cmpsb
and
mov
lds
stc
std
lds
cmp
jo
inc
imul
inc
push
xchg
pop
dec
out
test
in
jno
dec
shl
push
ja
xchg
sti
jne
jbe
stc
dec
cmpb
jb
xlat
xor
adc
jmp
mov
fsubr
inc
mov
outsl
loopnew
push
add
jno
pop
lahf
pushf
jge
xlat
das
inc
sub
jae
into
je
cld
mov
sub
pusha
xor
jbe
std
push
or
mov
popa
enter
and
pop
cmpb
int
jg
mov
ret
inc
cmp
dec
in
inc
jns
lret
inc
xchg
mull
ret
xor
or
adc
push
fsubrs
pop
ljmp
mov
jo
sti
mov
scas
rclb
insb
icebp
xor
inc
add
daa
sbb
cvtps2pd
jno
push
push
add
in
sbb
stc
and
mov
adc
lock
jmp
pop
xchg
int
push
iret
scas
xchg
cwtl
pop
xchg
out
cmp
inc
movsl
xchg
push
and
stos
dec
ds
pop
cmp
in
xchg
or
jg
xor
nop
pop
pusha
cmc
mov
push
xchg
mov
jmp
cmp
jle
adc
and
and
fisubl
inc
scas
rcll
repz
pusha
ss
hlt
sub
xchg
and
and
xlat
les
jo
sub
pop
adc
mov
push
orps
adc
subl
popf
shlb
xchg
mov
ficoml
jg
dec
lock
jb
mov
push
rcrl
jmp
sahf
test
and
adc
stc
inc
loop
pop
mov
sbb
add
inc
faddl
scas
shlb
shr
jnp
sbb
daa
pop
push
andl
xchg
test
add
in
test
sar
data16
imul
add
push
sahf
xor
rcrb
mov
mov
pop
aam
aaa
xchg
xchg
mov
rcrl
mov
fstpl
cmpsl
push
xor
jp
xchg
imul
adc
xchg
push
mov
lds
and
or
jp
movsl
inc
cmpb
out
test
in
mov
mov
daa
sub
jne
push
fisttpll
ds
addr16
sbb
lods
rorb
dec
adc
jnp
mov
dec
jg
mov
leave
mov
ror
sub
cli
cli
xchg
adc
xor
or
adc
cmpsb
jo
add
pop
jl
xor
xor
js
mov
icebp
xchg
outsl
fs
jae
popl
inc
mov
pop
inc
xchg
xor
ljmp
cmp
jp
xchg
lahf
js
dec
jb
xor
aaa
stc
xor
repz
xor
pop
arpl
jl
dec
fadd
cmp
and
dec
cmpsb
dec
or
cmp
cmp
popa
and
sahf
cld
sbb
cld
mov
arpl
ficoml
loope
cmc
push
stos
xadd
push
jo
rorl
clc
push
je
test
push
push
rcll
orb
lahf
sub
loop
inc
dec
subl
and
jns
push
or
adc
xor
mov
cwtl
adc
adc
leave
cltd
in
dec
test
call
bound
cli
into
jo
add
stos
fiaddl
fldl
adc
xchg
add
mov
mov
outsb
xchg
inc
pop
addr16
sbb
outsb
shlb
stos
test
or
add
push
lret
lcall
cwtl
mov
lret
jae
add
shll
xchg
cld
mov
sub
cltd
popf
popf
and
mov
js
je
or
in
and
js
mov
negb
and
fnstsw
aam
adc
sub
sub
dec
lock
and
test
repz
mov
out
aad
xchg
mov
and
scas
and
and
pop
sbb
inc
ror
adc
add
xchg
mov
icebp
push
aas
out
inc
mov
jae
xchg
das
sbbb
stos
cmp
pop
jle
sbb
add
fcmovnu
pop
or
enter
cmpb
dec
inc
shll
fistps
add
xchg
sub
outsb
pusha
push
xchg
sar
rcll
sbb
loope
push
in
mov
sub
jge
mov
imul
in
iret
int3
and
pop
loopne
xor
incb
dec
inc
ljmp
lds
aaa
cmp
inc
jo
ret
dec
push
out
sub
mov
icebp
push
jg
pushf
mov
hlt
out
sub
lret
mov
push
mov
add
out
nop
test
xchg
xchg
inc
setle
cltd
pop
jnp
cmpsb
push
ud2
leave
push
icebp
jle
xchg
stos
and
test
jmp
inc
lods
adc
in
or
enter
cmp
xlat
sub
mov
mov
inc
dec
cmp
ja
mov
and
popf
leave
mov
test
rcll
aaa
lods
outsl
adc
dec
sub
bound
xor
sti
mov
xlat
addr16
add
and
xchg
int3
stos
mov
add
mov
test
repnz
test
jo
jne
fisttpll
sbb
or
mov
adc
idivl
loop
mov
push
push
enter
dec
int3
shr
push
stc
repnz
pushl
push
mov
into
mov
push
jp
jecxz
pop
inc
push
fisttpl
dec
jno
pop
das
sub
jg
push
cmpsb
mov
std
sarl
fsts
repz
inc
or
push
fstpt
mov
xor
add
cmp
adc
shrl
gs
popf
sbb
sti
sbb
lret
outsb
mov
lods
cmp
mov
loop
pop
inc
lahf
iret
xor
sarl
loope
pop
xor
cmpsb
mov
enter
mov
dec
push
push
ret
nop
or
in
inc
mov
inc
outsl
inc
mov
dec
in
mov
adc
adc
in
dec
adc
das
mov
gs
jnp
cmc
or
imul
cmp
mov
outsl
inc
cmpsb
cltd
je
lds
daa
and
ljmp
popa
xor
hlt
or
pop
sub
clc
and
push
jo
sub
repnz
dec
dec
addl
push
xchg
and
in
lcall
movsl
or
mov
std
test
inc
push
or
pop
popf
cmpsb
cmp
popa
fs
les
stos
xchg
sub
lcall
popf
xchg
push
sub
ret
imul
test
pop
adc
in
lea
sbb
mov
js
xchg
lret
sub
ret
enter
mov
cmp
sarl
int
mov
in
push
dec
sub
and
pop
sub
shlb
jg
iret
add
in
pop
and
or
pop
scas
aaa
xlat
fwait
sbb
xor
or
fnsave
xor
and
and
cmpsb
idiv
push
xor
ret
pop
call
dec
scas
outsb
fisttps
mov
repz
jne,pt
fmuls
jb
jg
jno
call
sub
data16
fnstcw
sub
xor
sub
stos
pop
cmp
add
lret
inc
adc
outsb
inc
hlt
test
adc
test
jmp
fimuls
ret
inc
sarb
lods
xor
ljmp
push
and
movaps
jecxz
loope
jle
enter
scas
adc
dec
je
stos
cmpl
pop
ret
and
xchg
scas
sbb
test
aam
scas
sbb
mov
sbb
mov
mov
rcrl
leave
cs
movsl
mov
fildl
movsb
loopne
cld
sub
fwait
lcall
icebp
in
hlt
mov
lds
add
push
in
xchg
sub
jb
icebp
addr16
fnstcw
and
fisttpll
repz
mov
fdiv
ljmp
cmp
pop
gs
jle
fisubrl
cwtl
pop
sbb
xor
and
fadds
aam
mov
aam
jo
mov
les
fsubl
dec
adc
cmp
rorb
sti
pop
jnp
cmp
iret
fisttpll
or
push
jge
mov
js
int3
or
xchg
into
fisubl
push
std
cmp
aas
mov
inc
and
sahf
fmuls
inc
hlt
pop
idivl
lock
mov
daa
cmp
lret
mov
jecxz
mov
or
adc
dec
cmp
sbb
xlat
xor
xor
pop
iret
mov
mov
out
fwait
hlt
nop
or
sahf
testl
je
das
push
cwtl
adc
sti
inc
or
lret
testb
jl
add
icebp
leave
stc
dec
lahf
xor
fwait
loop
dec
aas
add
ret
push
lea
add
pop
repz
call
jnp
and
outsl
jb
add
sbb
nop
sub
mov
lods
test
insb
fdivrl
push
fsubl
and
sub
push
dec
inc
aad
xlat
cmpsl
push
dec
push
and
stos
imul
xor
push
and
push
pusha
pop
repnz
fidivrl
mov
cmp
call
jb
out
dec
hlt
adc
inc
pop
aaa
jns
and
mov
hlt
cmp
fsts
scas
mov
repz
out
into
in
or
loop
jmp
sbb
sahf
cmp
xchg
jle
mov
inc
scas
lcall
dec
mov
outsb
lods
jmp
fwait
in
lea
or
lret
inc
jae
imul
cmc
insl
xor
mov
jl
cli
shrl
adc
scas
mov
in
push
dec
jns
xor
gs
push
rcll
mov
mov
jae
sbb
or
pop
push
dec
or
es
ficomps
mov
nop
push
clc
fwait
xlat
pop
in
push
outsb
lods
scas
or
sub
push
pushf
mov
jno
scas
pop
insb
cmpsb
rcr
ds
mov
outsb
inc
aam
cmpl
movsl
pop
push
ret
mov
xor
clc
cmp
and
xchg
ret
cmp
xor
cmp
mov
push
in
jg
jbe
push
push
add
inc
sbb
inc
pop
jle
roll
gs
or
lods
psubq
pop
cmc
movsl
enter
mov
outsb
jp
pop
mov
mov
xor
aad
dec
xchg
jae
out
loop
xchg
push
orl
or
and
orb
sbb
jb
sub
js
xor
repz
xchg
sub
mov
mov
push
mov
xchg
adc
pop
aaa
jg
daa
pop
lahf
mov
addr16
jmp
inc
test
je
outsl
lret
fcoms
push
xor
xabort
dec
mov
mov
and
in
nop
aas
outsl
xchg
or
push
rorl
adc
and
hlt
icebp
and
insb
add
hlt
adc
add
push
cltd
fstl
sbbl
mov
sbb
add
les
dec
pop
fisubl
jmp
adc
mov
jnp
je
scas
ss
sahf
cmp
lds
xlat
jno
jo
xchg
es
rcrb
dec
es
mov
sbb
jnp
bound
dec
js
std
push
inc
jp
adc
ds
sbb
inc
cmp
arpl
sub
jns
jmp
push
inc
loopne
inc
ficompl
lods
sbb
inc
mov
flds
lret
fs
push
or
pop
dec
cmp
daa
pushf
loope
addr16
imul
pushf
mov
push
into
fistpl
pushf
sbb
test
adc
sub
mov
pop
adc
push
adc
outsb
aam
xor
xor
cmp
jl
movb
jae
sub
fisubs
aaa
xchg
nop
adc
xor
inc
repnz
cli
mov
stc
jb
and
inc
dec
aas
in
xchg
rolb
sti
xor
jmp
data16
xor
orb
ss
xchg
stos
loope
fmuls
xchg
insl
cmp
xchg
add
add
stos
shld
push
js
pop
cmp
push
loope
mov
outsb
dec
stc
jo
push
jle
pop
hlt
outsb
ror
lods
shlb
iret
xchg
and
or
push
repz
mov
fsubl
push
xchg
dec
adc
and
push
cmc
pop
dec
and
arpl
xor
leave
into
popa
pusha
rcrl
je
pop
dec
push
inc
lret
sti
fmuls
mov
jg
and
rorb
insb
gs
jp
dec
xor
aas
push
and
call
out
shlb
scas
mov
cmpsb
xchg
repz
xchg
push
dec
mov
les
fnstenv
sahf
xchg
cli
je
push
xor
mov
push
insl
repz
cmpsl
inc
fldl
xchg
ljmp
pushf
outsl
ja
inc
stc
jns
mov
fwait
xchg
popa
stos
pop
cltd
test
or
in
ja
xlat
and
push
cwtl
outsb
orb
cmp
fidivrl
xor
mov
add
pusha
xor
mov
mov
xlat
adc
bound
xor
lods
push
or
and
loop
jnp
or
add
pop
out
sub
pop
and
call
aaa
out
test
or
push
in
cli
xlat
inc
or
jle
mov
dec
jmp
gs
jno
je
pop
push
adc
push
mov
pop
mov
adc
pop
cmp
pusha
adc
sbb
outsb
mov
jnp
daa
inc
sub
hlt
divb
cmp
in
rcrl
xchg
imul
movsl
mov
dec
fistpl
pop
or
sbb
fsubrs
and
dec
add
or
jno
adc
enter
ret
cmp
mov
add
lods
ss
call
jl
insb
sbb
add
jle
fisttpll
cmp
test
iret
sarl
in
ret
hlt
fsubl
jge
rcrb
fsubrl
les
xchg
ljmp
dec
aaa
ret
rclb
mov
pop
sub
nop
dec
pusha
lock
rorl
iret
mov
xchg
sub
xchg
xor
sub
push
aam
stos
popf
cld
stos
idivl
adc
xchg
pop
xchg
cld
cmp
xchg
sub
or
test
aam
dec
pop
push
ljmp
inc
loopne
sti
arpl
jmp
mov
push
test
mov
push
pop
mov
jne
lods
xor
aam
outsl
add
pop
mov
inc
mov
jmp
adc
pop
cmp
dec
testl
and
and
mov
sahf
lret
pop
sub
xchg
popl
stos
push
movsl
dec
outsb
or
jp
hlt
js
adc
outsl
and
cmp
and
and
mov
cmpsb
rcrb
cmp
xchg
std
fstp
inc
xor
pusha
mov
lahf
jns
idivl
pextrw
cltd
inc
adc
fcmovnu
xchg
jge
mov
fs
daa
or
sub
out
cmpsb
scas
lds
loopne
out
icebp
imul
js
popa
jmp
sub
mov
push
adc
push
test
bound
imull
push
jmp
lret
and
adc
adc
cmp
dec
pop
adc
xchg
cmpsl
fs
xor
test
loopne
movsl
cli
jno
aad
in
gs
cwtl
mov
and
pushf
dec
fstpt
into
jae
cmp
outsb
aas
push
cld
jmp
shll
mov
orb
mov
shr
fs
xor
jge
cwtl
mov
add
jp
imul
fdivl
sti
xchg
std
sbb
xchg
aas
inc
cmpsb
and
push
jmp
sub
sbb
jecxz
daa
subb
fstps
mov
and
std
pop
imul
repz
push
outsb
negb
jge
sub
pushf
adc
addr16
addr16
jp
leave
enter
xor
sub
gs
adc
jbe
ja
fidivl
repz
mov
or
dec
xchg
imul
std
mov
mov
xchg
loope
add
movsl
xchg
cmp
ljmp
mov
ds
jno
stos
testb
sti
mov
fwait
jmp
cwtl
jmp
xlat
bound
jl
out
rorb
mov
sbb
lret
sarb
pop
mov
jbe
test
mov
add
popf
cmp
and
mov
sbb
or
fucomip
mov
push
mov
mov
or
inc
addr16
in
jbe
ljmp
outsb
xor
xchg
subb
cmp
cmpb
push
cmp
or
test
cmp
loope
ss
jo
lock
shl
leave
movsb
cmp
mov
dec
xchg
in
ljmp
cltd
into
or
dec
test
sub
jne
inc
sbb
pusha
jnp
std
sbb
inc
outsl
mov
sbb
enter
rcrb
les
scas
aad
out
stos
xlat
pop
out
dec
or
jp,pn
push
and
imul
mov
and
fldcw
repnz
pop
loop
cld
cwtl
mov
les
sbb
popa
adc
fcmovnbe
es
je
stos
daa
push
push
adc
adc
or
mov
popa
pop
daa
push
ds
jecxz
test
jecxz
xor
inc
in
xchg
mov
dec
je
jmp
in
cmpsl
xchg
sub
imulb
mov
sub
movsb
xchg
jmp
dec
mov
inc
and
mov
fcompl
xchg
dec
jmp
outsb
xchg
adc
stos
and
cld
ficoml
jno
sub
pop
test
and
sar
xor
popa
pop
fstl
ret
pop
ss
mov
jp
in
call
stos
cmp
mov
test
fs
mov
scas
mov
mov
jl
pop
inc
xor
fisubrs
mov
adc
call
mov
stos
add
mov
xor
xchg
pop
push
sbb
or
xchg
repz
push
bound
sub
into
mov
cmpl
es
cli
scas
and
lods
jecxz
out
cmp
push
push
inc
mov
stc
mov
push
outsb
andb
cmpsb
mov
mov
push
rolb
negb
jbe
sbb
jmp
shr
rcrl
push
scas
clc
pusha
outsl
push
scas
insl
fidivrs
push
pushf
push
sbbb
mov
sbb
cld
add
jl
rorl
pusha
data16
sti
in
xlat
es
test
xor
xor
mov
xchg
nop
xchg
addb
cmp
cmp
xor
mov
sbb
js
addr16
jmp
insb
fdivs
rcr
sti
test
pusha
shll
and
pusha
jge
scas
ja
in
in
scas
clc
insl
push
cld
or
cmp
loope
pop
sbb
out
mov
mov
stos
mov
cli
pop
dec
mov
mov
xchg
scas
sbb
jno
cmpsl
mov
add
cmp
sub
stos
out
mov
or
cmp
push
add
mov
bnd
daa
xor
repz
lret
fidivl
ret
jp
les
fists
xor
xor
daa
jb
adc
sti
daa
sub
stc
out
int3
push
cmp
repz
rcrl
sub
xchg
pop
push
mov
and
inc
sbb
idivl
imull
pop
mov
add
pushl
repz
pop
loopne
mov
in
in
xchg
out
jecxz
sbb
cld
push
or
inc
cmpsl
negl
and
mov
sarl
xchg
push
sub
inc
sub
or
repz
pop
mov
mov
mov
scas
loope
mov
pop
ret
hlt
ja
in
popf
push
xor
adc
push
adc
mov
xchg
xchg
inc
mov
in
aaa
loop
mov
fwait
rcrl
xor
out
xchg
mov
mov
add
jg
mov
sarb
xchg
jae
test
push
pop
aam
fiadds
xchg
mov
mov
rclb
push
mov
mov
lea
lret
hlt
xchg
insb
jb
cmp
andl
mov
nop
mov
xchg
imul
lods
hlt
leave
testb
mov
mov
jo
add
cs
dec
fs
inc
cli
arpl
stos
cld
scas
and
loopne
jno,pt
shrb
ss
xor
or
add
std
loop
popa
outsb
and
jns
jle
fcomip
sahf
aas
mov
mov
rol
outsb
outsb
std
sub
ret
inc
lcall
neg
lock
sarb
sbb
jbe
sub
shlb
mov
in
in
in
add
in
cmp
gs
in
xchg
ds
jns
ss
in
xor
mov
lret
ja
dec
sti
fdivr
cmpsl
mov
xor
xor
cmp
mov
or
shrl
push
sub
sub
sub
dec
mov
xor
cmc
and
add
mov
mov
inc
mov
adc
dec
xchg
popa
xchg
dec
fwait
loopne
daa
fcomps
mov
ss
add
mov
xlat
cltd
xchg
repnz
gs
int3
daa
iret
nop
or
cmp
sbb
rcll
jb
mov
pop
repz
dec
fstpl
pop
leave
aam
push
cld
cmpsl
test
xchg
bound
fs
out
int3
pop
pop
in
lock
mov
sbb
push
mov
lds
test
add
push
mov
cli
in
scas
or
in
aad
fldt
das
sti
dec
test
fidivs
push
mov
dec
mov
add
fs
mov
icebp
mov
cld
xchg
cmp
mov
fcmovnb
faddl
cmpb
jnp
jnp
push
xchg
aam
jge
popa
into
sbb
inc
pop
movsb
mov
xlat
iret
inc
std
pmulhuw
fbld
out
ss
fucomp
filds
mov
movsb
pushf
mov
jne
jecxz
cmp
sbb
xlat
nop
sbb
add
jmp
in
aas
add
in
and
sbb
je
fadds
cmc
roll
fiadds
fisubl
std
mov
mov
xor
push
xor
iret
and
mov
inc
mov
repnz
loope
lret
loopne
jo
fwait
sub
adc
cmp
pop
cmp
xchg
push
aam
or
push
pushf
xorl
xchg
lahf
push
xor
insb
pop
ffree
jne
ljmp
mov
cs
clc
mov
sbb
sarb
pop
fcoms
ja
mov
test
iret
inc
daa
or
iret
pushf
pop
mov
sbb
push
push
scas
shl
in
jle
push
sbb
test
leave
aam
repz
cmp
push
jne
test
push
sbb
sbb
push
popw
rolb
fs
mov
adc
jb
jns
call
dec
fcoml
lahf
imul
dec
imul
sub
xor
stos
dec
js
pusha
aam
xor
test
jne
jns
loopne
lock
xchg
inc
dec
stos
dec
shll
adc
mov
cwtl
shll
fcomip
adc
dec
cmc
sbb
imul
lret
push
xchg
mov
out
outsl
mov
icebp
icebp
dec
stc
add
out
jo
pusha
imul
pop
or
mov
arpl
xchg
cmp
sbb
sbb
and
push
mov
lret
fdivs
jp
mov
cmp
cmp
xor
adc
fisubs
adc
in
push
xchg
jo
arpl
sarb
mov
imul
or
and
rcll
dec
push
pop
je
sbb
js
add
repnz
jp
adc
nop
jnp
fdivl
leave
or
bound
js
ljmp
inc
or
test
xor
mov
inc
jo
xor
cmp
std
int
js
bnd
mov
adc
or
pushf
int
push
lret
xor
nop
cwtl
icebp
pop
stos
jecxz
xchg
lret
jl
nop
sbb
das
dec
lret
fsubrs
mov
lods
cmc
out
sub
push
sti
out
adc
inc
lds
push
ret
pop
push
push
xorl
fiadds
add
fnsave
cwtl
pop
xchg
adc
insl
sub
and
stos
dec
negb
outsb
int3
fs
sti
jnp
cmp
xlat
insb
mov
lret
push
inc
mov
pop
fidivrs
or
dec
jne
and
pop
sub
mov
sub
cwtl
push
lcall
pop
es
out
xor
cmp
fcoms
int3
lret
cmp
inc
xor
subb
dec
hlt
idivl
add
or
jle
pop
insl
dec
lods
adc
in
lcall
adc
mov
xor
imul
pop
jno
cmp
lahf
roll
nop
int3
pop
cmc
pop
call
cmp
lds
icebp
sar
je
and
lret
in
sbb
sbb
lret
insb
repnz
mov
jb
and
stos
and
pushf
shl
daa
ja
push
out
inc
mov
jne
movsb
push
push
push
push
lahf
jecxz
pop
push
out
mov
cwtl
dec
mov
sbb
jnp
ss
sbbl
andb
aas
push
fnsave
push
push
jecxz
and
push
jb
scas
orb
add
add
inc
loope
cmp
aam
dec
xlat
jecxz
and
aaa
mov
cmp
sbb
sbb
push
xor
sti
popa
mov
cmp
adc
adc
jmp
jmp
pusha
mov
xchg
inc
es
pop
in
pop
mov
xor
cmp
dec
pushf
cs
int
shrb
push
cld
loop
pop
xor
fadd
lock
sub
loope
xchg
cld
loopne
sbb
fistps
or
jmp
xchg
stos
in
xchg
jb
pop
insl
shrb
cmpsb
std
das
add
subl
mov
lret
icebp
orl
mov
sbb
in
mov
and
mov
popf
mov
mulb
pop
lcall
adc
fiadds
repnz
cmpb
add
out
push
pop
loop
arpl
ret
outsb
jae
out
sub
stos
fidivrs
adc
dec
out
xorb
mov
rcl
mov
xchg
popf
and
sarb
pop
jecxz
xlat
pusha
hlt
orl
addr16
push
jle
out
movsl
addr16
clc
out
aam
push
outsb
and
jns
and
fwait
mov
and
push
and
outsl
scas
sbb
cmpsl
cmp
mov
in
or
repz
into
lock
cs
icebp
sarb
push
add
lock
ss
pushf
insb
mov
loope
pop
add
scas
js
pop
or
jo
pusha
pop
test
negb
push
sbb
icebp
adc
ljmp
in
sub
outsb
mov
std
dec
adc
push
ja
or
push
cli
ss
mov
aam
mov
pop
and
loope
mov
push
dec
mov
lret
xor
sbb
jg
leave
cmp
out
movsl
push
mov
xchg
ffreep
mov
mov
xlat
xchg
popa
xchg
ret
add
xchg
fimuls
sub
push
add
incb
stc
xchg
add
ret
cmp
push
shlb
dec
jl
hlt
mov
jmp
cmpsl
pop
push
das
mov
les
sub
fnstenvs
dec
gs
imul
push
aaa
aas
and
test
or
mov
fcoml
stos
mov
out
mov
pop
dec
add
out
or
cmp
xchg
pop
push
shl
xor
ret
sti
xlat
fadds
sub
xchg
aas
cli
pop
adc
push
dec
ret
add
mov
cmp
mov
cmp
ret
sub
add
push
clc
cli
adc
and
pop
loope
dec
roll
xchg
add
popa
addr16
out
test
lea
mov
push
mov
hlt
xchg
cmp
gs
xor
call
cwtl
lods
jns
lret
ja
movsb
jnp
mov
test
lahf
js
mov
inc
cld
hlt
xchg
xor
push
jecxz
mov
xor
out
std
sbb
test
dec
and
mov
add
outsl
fldcw
push
cmp
fadds
mov
sbb
mov
jp
and
addr16
fldcw
movsl
xor
in
andl
xor
xlat
arpl
dec
pop
outsl
sub
jno
xchg
movsb
dec
push
pop
mov
xchg
lret
lcall
outsb
sarl
push
rcrl
pop
pop
inc
std
adc
in
or
and
lahf
xchg
push
lea
mov
xchg
xor
add
cli
jnp
cltd
jmp
stc
pop
stos
xchg
jb
mov
lds
xchg
leave
pop
cmp
lock
aaa
add
or
dec
dec
popa
imul
loope
cli
mov
clc
push
inc
or
mov
xchg
ret
shll
push
outsl
push
xchg
mov
and
sub
popf
and
xchg
and
call
cld
incb
fdivl
fistpll
mov
inc
scas
lahf
sub
jecxz
hlt
xchg
cmp
popa
jmp
mov
mov
outsl
pop
into
ret
add
aam
mov
ficompl
fnstsw
inc
xchg
rorb
add
rcll
mov
mov
rcpps
adc
cmp
sbb
outsb
cmp
into
fs
insb
ljmp
mov
mov
shrl
dec
xor
mov
jmp
pop
jbe
mov
arpl
imul
int
xor
gs
or
mov
sub
and
call
jp
jl
inc
divl
jg
les
inc
push
mov
mov
loopne
rolb
sub
insl
sbb
lods
jp
jo
int
daa
scas
hlt
adc
mov
adc
push
fidivrs
loopne
adcb
push
mov
cmp
pop
les
sbb
cld
push
and
gs
lods
jno
mov
jae
jecxz
fidivrs
test
push
aas
mov
fcmovne
fbstp
int3
scas
rcll
rcrl
jp
inc
gs
xchg
js
mov
mov
ss
dec
fwait
sub
add
sub
fisttpll
and
pop
arpl
mov
jo
push
and
ss
dec
test
gs
insb
mov
fcoms
addr16
repz
fimull
jbe
xor
cltd
jge
xchg
js
mov
shl
mov
pop
inc
leave
dec
xchg
push
call
sub
add
mov
dec
sbb
or
mov
xor
sub
inc
inc
je
xor
jmp
mov
dec
lds
cmc
lods
test
cmpsb
xchg
mov
ror
lret
imul
dec
dec
xchg
stc
sarl
dec
xor
adcl
packssdw
in
pop
mov
adc
cmp
lahf
es
cmp
cld
pushw
xchg
repnz
sbb
rcrl
jbe
into
push
push
loope
mov
fsubrs
loop
ret
adc
mov
cli
xor
mov
jp
pop
imul
outsb
or
push
add
xchg
mul
adc
popa
pop
cmp
loop
jmp
xor
push
dec
sub
xchg
jmp
lods
notb
scas
cmpsb
aam
mov
push
jnp
jae
imul
pop
xchg
jg
push
xor
jge
pusha
xchg
adc
fcomps
fs
cmpsl
in
sbb
add
in
aaa
sbb
inc
dec
cmp
arpl
xchg
dec
xor
dec
sbbb
dec
cmp
cmp
nop
aam
pop
mov
mov
cmp
dec
and
pop
cmp
sub
pop
xchg
sbbb
sub
lods
cmp
int
mov
psubb
loopne
rol
dec
addr16
lahf
adc
mov
jecxz
mov
mov
fnstcw
test
fiadds
mov
fs
adc
popl
sbb
lea
mov
imul
push
mov
jmp
repnz
lods
imul
mov
sarb
aaa
or
add
outsl
mov
fidivrl
sub
push
xchg
mov
cwtl
mov
stc
fsubrl
outsl
mov
push
sub
adc
xchg
in
movsb
inc
les
rclb
lods
rorb
sbb
add
jl
fdivrs
loopne
mov
cld
mov
mov
into
lods
fidivrl
add
sbb
lahf
ja
sbb
and
push
xchg
fs
cmc
popa
divl
mov
and
icebp
dec
fsubs
push
jge
ret
hlt
inc
xor
push
sahf
sub
sbb
ss
daa
fsubs
pop
xchg
push
sti
jge
arpl
push
sbb
jne
push
icebp
enter
xor
dec
add
sarb
inc
xlat
xchg
repz
fistps
jne
fs
icebp
pushf
pop
loope
mov
adc
pop
fs
insl
sub
fwait
in
fs
ror
mov
psrlw
xchg
or
xchg
lahf
not
sub
add
fisttpl
lret
aaa
aaa
cmpsb
jle
lret
cmp
add
decb
and
call
stos
pop
ds
inc
add
mov
sbb
or
into
or
add
xor
mov
push
mov
pop
negb
sbb
rolb
inc
push
sbb
callw
sub
cmp
jg
pop
sub
add
call
jne
or
or
mov
jbe
dec
pushf
jge
lea
rol
pop
jecxz
fisubs
or
lock
xchg
inc
adc
insb
cmp
push
inc
sbb
mov
or
push
mov
dec
ja
xchg
inc
test
jge
ljmp
inc
imul
inc
pop
ret
and
mov
push
scas
dec
in
outsl
fmull
push
dec
xor
movsb
shrl
and
out
mov
aas
add
xor
leave
ljmp
inc
in
fsubrs
xchg
pushf
push
push
add
int
and
mov
xor
mov
inc
cmpsl
bound
and
mov
jae
cwtl
jns
adc
subb
push
pop
push
mov
push
icebp
sub
imul
add
jecxz
iret
push
xorl
sub
xor
iret
xchg
movsl
stc
add
inc
xchg
add
fstpt
add
out
pop
dec
faddl
inc
je
fs
data16
xor
push
cwtl
rolb
mov
clc
in
and
repz
shlb
add
and
or
mov
imul
lahf
idiv
cs
test
jge
push
xchg
lods
sbb
xor
xchg
pop
jne
mov
xchg
jne
push
add
pop
arpl
inc
stc
pushf
das
pop
jge
jns
mull
outsl
nop
fsubrl
loope
push
movsb
add
push
outsb
mov
xor
pushf
in
imul
mov
lret
sbb
mov
ficoms
xchg
ja
push
jns
pop
addr16
push
or
pop
jp
rorb
mov
bound
jbe
cltd
and
ljmp
cmp
incl
cmp
les
adc
jnp
js
mov
inc
in
pop
or
outsl
in
sbb
clc
pop
dec
mov
mov
jg
push
shrb
and
in
cld
adc
divb
nop
out
or
mov
push
jge
fwait
pop
arpl
xchg
out
adc
dec
push
aam
push
lds
mov
sbb
les
sahf
int3
push
add
mov
fbstp
dec
sub
pop
jne
pop
int
sub
mov
jl
aas
lret
repz
xor
pop
test
adc
lahf
and
jp
adc
mov
insl
stos
xchg
and
iret
gs
inc
int
mov
dec
imul
fcomps
loop
sbb
popf
ja
ret
das
inc
aad
iret
xor
pop
aad
xlat
xchg
xor
pop
jb
mov
std
lock
sub
movsl
jecxz
aaa
test
and
dec
les
sub
sub
ds
mov
and
pop
scas
cmpsb
pop
pop
xchg
adc
cmc
and
jo
adc
in
xor
cmpsb
cmp
mov
shll
and
aam
xor
out
jmp
ret
pop
dec
add
sbb
pop
jecxz
mov
jle
lods
mov
jno
xchg
adc
int
lahf
mov
jl
ja
orb
clc
push
mov
and
adcl
dec
addr16
xchg
adc
lea
inc
jns
and
in
adc
jecxz
mov
mov
aam
xchg
xchg
cmpl
pushf
adc
lcall
adc
mov
bound
mov
push
mov
dec
aaa
lock
dec
pop
or
stos
lret
push
xor
test
jns
adc
and
outsl
scas
and
jge
add
inc
test
xor
sbb
lods
pop
add
scas
loope
mov
pop
inc
lods
mov
mov
or
sub
jae
mov
in
mov
repnz
pop
inc
jmp
outsb
jp
jmp
pop
aaa
mov
imul
outsl
dec
addr16
pusha
mov
xchg
loop
lret
jmp
mov
shll
and
push
out
lods
loope
aas
aad
dec
leave
pop
cmpsb
lock
mov
mov
xor
scas
sarl
out
aas
jns
jae
loope
xlat
stos
xlat
popf
lds
cmp
sbb
sub
adc
push
add
and
cmp
fwait
pop
sti
dec
das
jg
and
aam
cs
std
push
xor
in
lahf
iret
dec
adc
loop
mov
inc
test
cs
repz
stc
loopne
jbe
subb
popf
inc
shrb
dec
xchg
jnp
in
ds
mov
test
mov
inc
sub
lods
sbb
or
leave
cld
test
sub
out
in
xchg
rcrl
xor
call
stc
push
ja
dec
into
xor
xchg
popa
stos
mov
jg
push
jmp
dec
pushf
cld
in
jo
jbe
bound
jg
mov
mov
cli
push
in
enter
stos
testl
xchg
int
outsb
aam
out
jle
lret
mov
stc
mov
fs
xchg
movsb
xorb
inc
fs
sysexit
repnz
bound
mov
jbe
ds
cmpsb
scas
ficompl
js
xor
es
sub
mov
inc
and
fnstsw
jl
sub
sbb
cmpsb
cmp
das
mov
pop
mov
or
jo
in
jbe
in
ds
xlat
popf
jnp
mov
cs
inc
shll
sub
cmpsl
add
push
push
add
mov
cmc
in
mov
es
xor
sti
ljmp
arpl
mov
pop
jle
mov
cmp
rclb
sbb
test
call
or
rol
xor
fisubl
pop
inc
jle
dec
adc
fs
mov
sub
xor
push
incl
popf
mov
into
in
pop
mov
adc
out
xor
pop
pop
jecxz
cmp
cltd
gs
mov
in
arpl
or
bound
popf
xchg
adc
in
pop
mov
add
outsl
dec
outsb
cmp
jecxz
cmp
sbb
sbb
mov
mov
cld
jo
push
mov
dec
pop
lods
sbb
sbb
push
test
and
fcomip
jno
sbb
pusha
pop
xchg
pop
insb
jge
pop
sub
pop
jo
add
pop
subb
lret
jecxz
cmp
cmp
jmp
cmp
jae
adc
mov
mov
or
out
mov
movsl
pop
xor
sbb
les
shll
ljmp
in
sbb
fsubrs
negb
cmp
push
out
in
xor
aas
pop
addr16
lds
out
pusha
jne
lar
fildll
test
fwait
cmc
push
dec
mov
aas
push
scas
xchg
out
dec
mov
sbb
inc
mov
sub
sbb
out
dec
xchg
loop
out
ficompl
int
cld
shr
dec
ret
popf
mov
jecxz
mov
imul
ss
ja
xrelease
arpl
jbe
add
and
fwait
mov
xchg
add
leave
push
push
arpl
cwtl
pop
mov
xlat
cmovge
and
pop
jp
rcrl
ss
je
fmuls
xor
mov
mov
fidivs
sub
out
call
sub
mov
jmp
jge
lea
movb
adc
dec
cld
mov
loop
push
in
inc
out
xchg
fdivs
loopw
or
sub
pop
rorb
pop
xchg
mov
xor
push
inc
xchg
inc
pushf
repnz
push
add
adc
pop
into
aas
out
in
icebp
out
sub
mov
fisubrs
sub
mov
or
jle
mov
lods
add
dec
pop
test
pop
repnz
mov
adc
rclb
ret
cli
aaa
mov
jl
jl
addr16
sub
cmp
jge
xlat
icebp
adc
jecxz
shrl
rcrb
jmp
clc
push
in
cs
icebp
loope
popf
popa
inc
push
cwtl
mov
scas
arpl
mov
inc
lock
add
cmpsl
pop
jg
add
pop
cld
scas
sub
into
sbbl
mov
jae
enter
and
cs
mov
push
pop
mov
xor
push
lock
push
icebp
push
rcrl
loopne
test
ret
repz
jl
movsb
or
out
les
ljmp
outsb
xchg
notl
xor
sub
ret
cmp
sub
incb
push
pop
and
mov
and
jbe
jmp
imul
adc
fadds
cmp
repz
cmp
mov
or
jmp
xor
movsl
and
dec
add
popf
push
aad
add
aad
pop
repz
std
xchg
movsl
mov
das
das
or
scas
mov
pop
insl
cmc
lea
js
mov
jmp
stc
movsb
adc
and
push
sbb
and
mov
push
xorb
cs
cmp
jns
loope
pop
loop
mov
lret
add
push
sub
push
xchg
dec
call
add
mov
mov
xlat
and
adc
xor
lret
sub
mov
mov
dec
cs
push
mov
fsubrl
gs
cmp
sub
in
pop
sti
mov
and
fnstenv
into
repz
adc
xchg
inc
fisubs
mov
inc
xchg
je
mov
in
xchg
cli
in
cmc
sub
fwait
push
and
in
andb
add
je
pusha
mov
addr16
xor
push
cmp
cmp
push
ljmp
or
or
ret
and
in
sub
jp
ret
adc
nop
jp
fdivrs
push
cmpsb
fmull
shll
popf
shrb
test
in
cli
rcl
fwait
les
cltd
push
adc
lea
scas
out
jns
add
cwtl
inc
inc
shlb
sbb
aam
scas
push
jmp
insl
clc
jnp
add
lea
stos
popf
xchg
inc
dec
mov
cmp
fbld
orl
pop
mov
or
push
test
addr16
popa
roll
dec
adc
loope
cmp
shlb
push
lock
push
or
cltd
inc
push
dec
stos
rclb
es
pop
fstps
icebp
lea
cmp
pop
mov
inc
adc
outsl
dec
lock
dec
push
inc
into
daa
pop
adc
push
or
mov
loope
lret
mov
xchg
leave
mov
mov
faddl
fnstsw
push
scas
insl
add
ljmp
sbbb
fwait
cmpb
rol
adc
pop
sbb
js
cmpsb
push
pop
push
jo
in
mov
lods
dec
cmp
add
add
push
jg
or
mov
cmp
adc
and
out
hlt
add
lcall
adc
mov
add
rep
adcl
stc
cwtl
dec
aaa
lock
das
shlb
sub
call
pushf
aam
adc
loope
repnz
sbb
adcl
scas
sbb
xor
je
mov
dec
push
lret
cmp
cltd
add
sbb
or
aam
shl
sahf
sub
std
into
sbb
mov
repnz
sub
dec
xor
push
jo
sub
lea
mov
lea
xor
out
insb
add
jns
mov
cld
mov
mov
stc
push
clc
punpckhwd
shll
inc
mov
imul
add
xchg
sar
sub
stos
add
jmp
jb
cwtl
loop
jnp
fistl
lods
shr
sub
push
add
loopne
out
out
xchg
push
jae
push
dec
cmpsb
testb
es
test
movsb
jbe
fildl
mov
int3
mov
arpl
fstps
dec
mov
pop
arpl
adc
or
enter
fdivrp
xchg
aam
pop
int3
fistps
cmp
ja
sbb
and
sub
bound
fnstcw
jns
and
push
fwait
pop
test
adc
mov
jge
int3
xchg
or
outsl
aam
inc
push
ret
fnstcw
add
and
inc
imul
ss
mov
cmp
ja
addr16
fisubl
cmpsb
outsb
push
pop
idiv
cmp
movsb
lret
sti
xor
les
mov
adc
pop
xor
stos
out
dec
xorl
jle
cmp
dec
xchg
dec
test
insb
insl
clc
cmp
mov
dec
mov
int3
jg
dec
pop
push
lret
jae
mov
cmpsl
cltd
cmp
nop
dec
scas
push
fildll
add
cmp
sbb
push
xor
fucomi
xor
xor
test
sbb
imul
ds
popf
clc
xchg
push
inc
fdivrs
fs
into
add
jl
jp
gs
popa
dec
mov
flds
int3
fstpt
pushf
test
stos
jb
push
stc
scas
enter
addr16
or
out
nop
adc
push
loop
sbbl
push
inc
sbb
jmp
incb
push
stos
fistpl
xor
das
rep
sar
mov
pusha
jbe
jb
xacquire
pop
pop
inc
out
into
pop
jp
ds
popa
pop
cmp
add
sub
out
xchg
push
nop
es
adc
shlb
addr16
or
sub
mov
xor
into
or
lods
test
adc
dec
mov
icebp
shl
int
inc
hlt
js
cltd
push
loope
rcrb
mov
mov
aad
push
push
aas
ror
in
fisubl
lcall
loop
push
nop
cmp
mov
xor
mov
testb
mov
xchg
lods
shlb
sbb
lods
cltd
push
cwtl
cwtl
loopne
shl
scas
jno
inc
pushf
and
icebp
sbb
add
aam
data16
sub
ret
pop
jae
les
sub
cmc
mov
loope
dec
jb
add
xor
mov
mov
and
int
cmp
xchg
dec
adc
inc
jg
shl
jle
dec
les
jbe
aam
int3
sbb
adc
cmpsb
inc
jns
adc
shll
jle
xchg
iret
sub
fisttps
xchg
clc
ret
xor
cmpsl
imul
enter
dec
mov
xlat
setb
push
jg
pop
in
pop
int
pop
inc
into
das
ror
pop
call
mov
out
mov
or
outsl
add
cmpsl
out
sub
xchg
sbb
lret
lret
stos
cli
add
ret
jp
mov
aad
add
push
int3
sbb
push
jecxz
jnp
bound
push
repnz
cmp
dec
icebp
fucomip
shlb
sbb
dec
dec
xchg
rcl
xor
fs
aad
std
xchg
imul
push
mov
gs
xchg
jns
pop
or
cmp
out
into
sarl
ja
mov
cld
into
aaa
dec
and
jae
ror
into
pop
add
inc
xor
into
add
ljmp
lret
jno
fimull
lret
inc
jle
hlt
std
jecxz
adc
push
push
pushw
jmp
mov
adc
adc
xlat
mov
loop
adcb
sub
xchg
mov
push
pop
fdivs
hlt
in
fwait
lret
push
inc
fcmovne
adc
pop
mov
lods
jne
movsb
xchg
sbb
pop
pushf
pop
lock
fwait
jl
icebp
inc
rcll
aas
inc
or
std
int
jmp
rorl
cs
xchg
mov
add
jnp
add
ret
jmp
rclb
sti
cwtl
out
or
cmp
adc
mov
xchg
sub
dec
mov
xchg
sub
inc
push
data16
mov
shr
pushf
out
mov
aam
pop
enter
mov
mov
or
lret
arpl
out
pop
push
pop
adc
mov
aaa
add
xchg
hlt
out
les
inc
push
or
out
sahf
mov
push
lock
push
sub
repz
test
cmpsb
mov
xchg
and
push
mov
mov
in
sti
add
jno
neg
xchg
aas
or
enter
loopne
scas
jno
xor
in
lods
ret
mov
push
test
pop
xchg
fucomip
cmpsl
dec
stos
adc
inc
sti
cs
sti
and
pushf
pcmpgtb
aaa
dec
enter
sub
mov
cwtl
adc
mov
sbb
das
imul
add
outsl
mov
add
push
insb
push
push
push
push
cmpsb
fwait
pop
cmp
pop
imul
ds
testl
cmp
lcall
js
adc
mov
dec
sbb
push
mov
gs
xchg
fwait
adc
fstp
pop
dec
pop
mov
push
dec
mov
push
add
fildll
cmpsb
lret
sbb
scas
mov
cmc
es
movsl
xchg
repnz
mov
jge
push
dec
cmc
jg
leave
cmp
jmp
gs
cmpsl
sub
mov
mov
pop
aam
push
std
mov
push
mov
inc
jl
lods
std
or
add
inc
aam
ljmp
mov
xchg
push
mov
aad
and
inc
add
icebp
xor
icebp
cwtl
xchg
ja
nop
ds
mov
cmpsl
jne
dec
mov
jns
jg
xor
in
ss
dec
ret
popa
fsubl
das
sbb
inc
mov
mov
decl
iret
mov
mov
xor
mov
or
jne
ror
fdiv
jecxz
or
dec
ficoms
cmp
cmc
scas
mov
roll
pop
ss
test
adc
dec
sub
dec
in
cmp
mov
mov
cmp
sbb
test
ret
mov
popa
int
repnz
enter
and
dec
push
pop
adc
and
mov
insb
sbb
daa
inc
sbb
outsb
pop
out
xor
push
lock
push
in
pop
xchg
mov
aad
js
adc
scas
shll
popf
mov
out
fldlg2
cmp
sahf
dec
ja
in
push
popl
fstpt
loop
fwait
mov
bound
jae
jmp
add
jp
cmp
inc
lods
sub
loop
xor
mov
cmp
lcall
test
in
and
mov
ret
push
ret
loopne
pop
jl
add
and
and
pop
dec
sub
andl
xchg
ss
xchg
ficompl
and
add
pop
mov
xchg
stos
popa
test
jo
push
aam
xchg
mov
xchg
fidivs
sbb
int3
sub
stc
mov
pushl
lahf
push
jne
push
sub
xchg
ljmp
pop
cmpsl
fs
pop
jnp
push
out
jne
test
jge
inc
sub
lret
lds
adc
mov
pop
outsl
gs
mov
std
ljmp
cmp
cmpsl
lcall
push
scas
and
imul
rol
mov
mov
mov
pop
jne
addr16
insb
mov
roll
bnd
popf
mov
and
push
mov
sub
pop
cs
jae
loop
out
adc
fst
sbb
cmc
out
mov
loop
inc
jle
lock
add
and
ja
or
mov
xor
int
and
mov
je
ret
pushf
xor
lods
cmp
sub
loope
dec
mov
push
int3
add
sbb
or
cmpsb
enter
xor
jl
adc
jle
pop
daa
or
mov
hlt
jg
je
in
xor
rcl
shr
push
and
out
shl
idivb
pop
jno
daa
mov
xor
push
icebp
mov
in
aas
pop
pop
popa
jle
cmpsl
scas
fsubr
dec
mov
and
fimuls
push
test
mov
sbb
mov
mov
mov
mov
sub
cmp
mov
jb
pop
leave
popl
push
adcb
sub
adc
sbb
dec
mov
mov
lods
lods
pop
inc
in
pop
push
or
adc
mov
shll
mov
push
aad
xchg
sub
cmp
and
push
mov
add
mov
mov
lock
popa
clc
mov
and
fcompl
pop
outsl
loop
es
push
xchg
adc
push
in
shll
std
scas
fbstp
or
add
jg
ds
and
add
inc
filds
in
add
fcomps
fwait
sbb
rcll
hlt
xchg
call
mov
cltd
scas
inc
popf
mov
sub
mov
pop
xchg
lock
jb
in
sub
mov
inc
sbb
inc
xlat
fnstsw
or
pop
xchg
cmp
add
movsl
ljmp
sbb
jge
cmpsl
jo
mov
jmp
adc
iret
push
mov
aas
mov
cmp
push
insl
mov
mov
mov
jp
mov
insb
fwait
mov
pop
push
test
push
mov
movsl
mov
and
cmp
int
jge
lods
test
add
fdivl
mov
dec
cwtl
repz
and
or
fdivs
mov
add
xchg
insb
pop
or
jae
std
mov
rcll
push
aaa
jmp
les
and
scas
out
arpl
push
jmp
mov
sbb
lds
push
popf
mov
loope
mov
mov
pushf
ffree
cmp
pop
mov
cmp
jae
movsb
adc
jae
pushf
pop
fildl
push
ret
imul
int3
ret
pop
jmp
rolb
dec
push
push
mov
jg
arpl
push
sbb
fwait
mov
gs
and
pusha
and
out
push
sub
rol
aam
fists
repz
sub
pop
mov
sub
stc
pop
leave
jno
sub
pop
cmp
lods
dec
jmp
outsb
fiadds
fisubrs
xchg
lret
add
or
inc
mov
push
jecxz
bound
mov
lahf
pop
pop
movsl
insb
out
gs
iret
test
pop
dec
mov
push
hlt
mov
mov
xchg
sti
xor
cwtl
pop
pushf
outsb
add
dec
insl
aaa
mov
cltd
sbb
dec
mov
inc
push
xchg
add
mov
inc
cltd
or
adc
pop
into
pop
push
scas
jbe
addr16
jbe
jbe
inc
pushf
clc
arpl
mov
sbb
push
mov
lcall
push
mov
adc
adc
mov
pop
lret
adc
add
mov
pusha
test
subl
sub
pop
jl
jnp
fnstenv
mov
mov
cwtl
out
ret
mov
inc
add
or
mov
sub
sbb
cmp
sbb
xchg
mov
xchg
pusha
iret
in
or
lds
mov
push
loop
dec
les
jg
lret
cmpsl
push
std
ss
or
sbb
pop
sub
arpl
test
jecxz
xchg
cmc
lcall
lock
icebp
and
jge
ja
aad
mov
outsl
jmp
inc
fdivs
testl
jae
test
cmc
xor
stc
movaps
fdivp
dec
clc
out
mov
push
mov
fisttpl
jns
xchg
pop
cltd
stos
push
lods
and
loop
pushf
loopne
lcall
adcl
and
adc
mov
es
div
xor
insb
inc
push
or
mov
inc
cmpsb
stos
scas
out
aad
scas
sub
and
out
cmp
ds
mov
jnp
push
dec
mov
sbb
cmp
mov
aam
dec
dec
jle
test
mov
push
mov
xor
enter
push
or
sub
xlat
adc
adc
loopne
test
ret
repz
xchg
out
loope
jmp
lahf
xchg
movb
hlt
imul
inc
nop
pop
pushf
addb
sub
outsl
icebp
test
pop
dec
fmul
es
sbb
adc
shlb
sahf
and
mov
cwtl
mov
adc
cmp
lret
in
mov
cmp
add
mov
fldcw
aas
or
out
xchg
loop
mov
fcmovb
sar
xor
mov
or
mov
loopne
arpl
fstpl
jp
pop
jnp
std
push
xor
push
mov
xor
roll
popa
popf
xchg
mov
dec
adc
lds
sub
repnz
and
push
shl
in
testb
pusha
mov
insl
sbb
xchg
ror
clc
ret
sbb
aam
out
cmpsl
adc
std
jne
inc
xchg
mov
mov
and
xor
mov
mov
mov
pop
es
or
lods
leave
jmp
pop
xor
xchg
aaa
push
fldl
adc
push
stos
insb
popw
pop
pop
pop
hlt
negl
in
sbb
jmp
jno
jge
push
ret
push
mov
cmpsl
lcall
sub
les
int3
clc
int
mov
pop
popa
mov
data16
outsl
xchg
mov
loopne
daa
or
out
loope
ret
cmp
sbb
and
fstp
mov
andl
test
add
bound
cld
and
idiv
add
jb
test
ret
lods
xchg
jecxz
pop
xchg
loop
jbe
test
pop
aaa
pop
cli
dec
stc
xchg
xchg
xor
roll
iret
daa
push
xor
jno
and
call
fs
fcoml
imul
repnz
cmp
movsl
inc
mov
sub
fisubrs
es
add
and
adc
xlat
jg
xor
daa
out
aam
into
ljmp
and
in
inc
adc
jb
daa
andb
inc
jmp
fdivl
push
push
hlt
xchg
pop
fldt
jno
jle
imul
scas
sub
jns
in
inc
dec
push
out
adc
ds
mov
mov
or
cmp
popa
adcl
dec
and
lods
addb
ljmp
push
jo
sbb
xchg
mov
popf
aas
out
add
sub
xor
enter
hlt
fwait
mov
jge
cmc
dec
dec
add
pop
jp
add
pop
sbb
aam
sbb
test
leave
lea
xlat
jg
dec
add
pop
ljmp
xor
push
js
inc
mov
add
lret
xchg
pop
push
lcall
jb
add
pop
jg
push
scas
divb
adc
sbb
sahf
cmp
add
cmp
add
jge
out
cli
jge
pop
aad
inc
sub
or
pop
jo
dec
jp
add
add
pop
mov
ss
push
fbstp
inc
jmp
pop
nop
out
mov
or
inc
and
in
mov
jp
mov
push
adc
fsubrs
scas
mov
shrb
sbb
icebp
cli
pop
pop
xchg
nop
fdivs
hlt
or
jns
mov
pop
loope
dec
xlat
xchg
movl
sbb
lods
loop
pop
outsl
fs
xchg
mov
stos
fsubrl
cwtl
jge
lods
mov
sti
scas
inc
clc
in
xchg
xor
in
scas
push
pop
hlt
pusha
xchg
shll
fsubl
fmul
outsb
aas
icebp
mov
stos
or
jp
cmpsl
ret
dec
cli
or
iret
xor
in
fadds
add
cli
and
nop
int
roll
lret
loope
rolb
xchg
mov
add
xchg
sbb
lea
in
loope
sub
lret
testl
sbb
mov
sbbl
and
aas
mov
insl
pop
lcall
cmp
xchg
sbb
inc
cli
xor
loop
jmp
dec
in
pop
cs
push
mov
pop
sub
stos
inc
fsqrt
stc
push
das
jae
mov
jmp
iret
sbb
sbb
or
push
and
stc
pop
or
inc
nop
iret
scas
loopne
xchg
pop
adc
ss
pop
jecxz
aas
xor
push
push
jns
jp
pop
sbb
dec
repnz
mov
lods
cwtl
push
add
repz
in
scas
cmp
aam
sbb
in
das
stos
arpl
or
ret
inc
mov
insb
pop
mov
inc
jle
stc
decl
call
cmp
cmpsl
into
insb
sbb
xor
lret
sub
lcall
rol
add
or
jb
ds
sub
pop
rcrb
push
sub
dec
pop
adc
les
pop
or
mov
xor
cmp
ret
data16
inc
xchg
dec
mov
ret
xor
rcll
cmp
jmp
leave
sbb
orl
mov
lds
mov
popa
push
popa
and
jo
dec
sub
push
cmp
xlat
stos
sbb
sub
imul
xchg
in
roll
cmp
mov
sub
imul
testb
cwtl
jno
je
xor
adc
sbbb
aas
std
xchg
pop
arpl
pushf
or
mov
push
js
or
addl
in
adc
mov
or
cmpsl
lock
jge
or
out
ja
int3
jb
shlb
insb
push
adc
lock
mov
cmp
mov
loopne
mov
fstp
shl
out
push
outsb
jno
arpl
into
jl
xchg
and
mov
imul
test
xchg
inc
lock
add
loopne
ja
stc
lea
lss
loop
pop
nop
ljmp
add
arpl
adc
mov
cs
das
inc
scas
out
cmpsb
mov
push
in
push
in
scas
lahf
sub
lcall
dec
mov
push
imul
fadd
rcrb
dec
jno
mov
dec
ds
movsl
loop
cld
sbb
in
lret
mov
outsb
pop
outsl
xlat
mov
xchg
call
movsb
out
pop
jb
addl
je
lret
mov
test
mov
inc
aam
mov
jnp
cli
sahf
stos
std
pop
mov
inc
loopne
mov
or
mov
xchg
jmp
jmp
sbb
or
xchg
pop
adc
mov
push
mov
stos
add
in
rcl
xchg
jmp
sub
test
and
or
aaa
sub
fcmovb
popa
push
ret
es
data16
mov
push
in
add
dec
add
add
in
and
jb
rclb
or
rorl
mov
mov
xchg
sub
mov
pop
mov
jnp
outsb
fwait
push
jb
stos
add
mov
jno
dec
dec
cmp
stos
roll
test
lcall
movl
ficomps
lahf
pop
pop
fidivl
std
sahf
stos
jae
xor
or
add
xchg
xchg
lea
sbb
divb
ret
mov
subl
mov
inc
sbb
xchg
test
dec
lcall
loop
dec
aam
rorl
add
iret
and
push
into
and
pusha
pop
ds
xchg
ds
mov
ja
pop
addr16
ds
nop
sub
cwtl
pop
mov
mov
adc
gs
xor
mov
bound
xlat
cmc
mov
or
mov
sbb
repz
popf
jmp
rclb
pusha
fdivl
inc
ret
scas
out
sarb
adc
mov
inc
pop
xchg
pop
xor
int3
cmpsl
mov
dec
lods
fidivrs
gs
in
je
or
add
sbbb
add
add
xchg
add
sbb
incl
and
adc
mov
iret
stc
in
push
sub
jl
mov
jns
divl
pop
notl
addr16
test
iret
loop
sbbb
mov
jmp
lods
pop
aad
cmp
dec
mov
outsl
fmulp
cmpsb
bswap
loop
mov
je
in
mov
mov
stos
je
xor
arpl
test
adc
mov
jb
in
xchg
fstpt
push
dec
call
push
mov
sub
fnstsw
add
and
and
or
jg
leave
in
rcr
mov
cmp
cmp
inc
push
fisubs
outsb
mov
inc
inc
jne
fistpl
cmp
jbe
es
mov
test
jbe
inc
pop
lahf
in
insb
add
popf
mov
and
mov
jo
sub
lds
add
ds
mov
addr16
inc
mov
mov
push
das
lahf
int
and
dec
adc
jb
pop
loop
sbb
js
pop
xchg
jnp
lock
sub
push
xchg
inc
mov
jns
xchg
cmc
idivb
and
xchg
jo
xor
pop
xrelease
bound
sti
mov
bound
ret
in
aam
rclb
xchg
arpl
out
jno
cltd
push
mov
lcall
xchg
dec
adc
add
push
dec
inc
loop
sbb
jmp
loope
mov
sbb
lock
shll
mov
xchg
outsl
mov
cs
xchg
rcll
push
nop
dec
pop
xor
mov
in
fistpl
jb
arpl
lods
cmc
repnz
and
les
out
adc
sti
mov
cwtl
or
jl
inc
xchg
fildl
dec
ficoml
inc
pop
or
mov
mov
lcall
out
or
adc
jae
loop,pt
cmp
mov
lret
fdivl
andl
jae
cmp
jb
push
adc
mov
repnz
mov
addr16
dec
sarb
dec
stos
cs
into
cmpsb
scas
pushf
cmp
mov
mov
insl
push
ret
fstp
push
xor
lea
adc
adcb
leave
push
cmp
outsl
mov
stc
es
mov
lcall
add
push
pop
fwait
push
ret
mov
inc
loopne
xor
test
mov
popa
cwtl
pop
pop
fdivrs
fstl
sbb
dec
mov
fucom
test
rorb
sti
or
rcrl
sbb
mov
pop
mov
mov
jbe
bound
arpl
js
sarl
mov
or
dec
add
es
dec
add
mov
cmp
cs
sub
dec
out
imul
mov
cmp
push
test
mov
lcall
and
dec
je
pop
add
in
insl
pop
cmp
adc
addr16
fnstcw
push
imull
mov
mov
sbb
test
and
pop
add
into
and
push
sbb
dec
sbb
xor
jne
cmpsl
pop
ret
mov
data16
rolb
push
mov
mov
in
rcr
push
inc
xor
cmp
stos
cmp
lahf
test
xchg
bnd
adc
fwait
push
in
or
fwait
adc
and
jge
mov
lock
fildl
push
testb
insl
popa
push
pop
xor
insl
lods
in
dec
xor
test
imul
xchg
fs
cld
rorb
dec
ret
les
aas
fsubl
stc
sahf
lret
xchg
notb
dec
cli
push
cmp
call
mov
mov
xchg
push
and
rcr
outsb
daa
mov
add
mov
sbb
pushf
sub
inc
test
inc
faddp
or
out
aas
js
inc
add
sub
xor
div
inc
lret
cmp
pop
clc
arpl
xor
pop
mov
clc
dec
aad
dec
out
jmp
xor
mov
sub
xorb
mov
adc
and
mov
in
jnp
loope
outsb
pop
jae
sbb
or
mov
ljmp
or
aad
das
dec
les
movsl
xor
cmp
stos
fimull
imull
jp
push
xchg
inc
and
mov
adc
xchg
add
leave
mov
pop
xor
shrl
imul
mov
hlt
movsl
jmp
xchg
pop
push
dec
cmp
lret
out
outsb
fwait
in
jle
movsb
test
sbb
jae
shlb
xor
jns
stos
adc
fchs
cmpsl
adc
pushf
sbb
jo
add
stc
jmp
push
add
xor
clc
testl
ja
cmp
sbb
data16
xor
in
xchg
popa
pop
pop
pop
movsb
mov
jno
sbb
flds
xchg
and
xor
cmp
mov
or
data16
test
stc
push
cmp
inc
stos
lods
push
add
dec
push
out
scas
out
test
stc
or
push
push
and
jp
iret
xchg
popf
push
je
xchg
jmp
shr
in
clc
daa
sbb
data16
mov
mov
xchg
and
pop
out
lcall
ror
push
cmpsb
iret
mov
aam
adc
cs
scas
push
dec
pop
aam
push
icebp
fistpll
leave
pop
sub
dec
cwtl
fiadds
negl
mov
mov
hlt
insb
lcall
into
jecxz
movsb
xchg
fsts
dec
add
les
cmp
and
mov
push
jp
pop
insl
push
scas
adc
outsl
pop
inc
das
in
xchg
mov
pop
fwait
mov
andl
aad
mov
add
or
sub
mov
xchg
ret
mov
xchg
in
daa
add
sub
stos
cmpsl
fcoml
jle
xchg
adc
mov
jle
shl
popf
jae
and
adc
in
rcrb
shlb
push
dec
addr16
pop
inc
mov
loope
jae
pop
mov
mov
adcb
adc
add
xor
out
jmp
loope
fisubl
mov
and
cmpsl
repnz
enter
fcoml
cmp
jae
test
add
sub
mov
call
clc
lcall
or
pop
push
mov
fildll
stc
imul
fstpt
in
ret
test
sbb
outsb
imul
jmp
insb
cli
mov
cmp
pop
into
mov
adc
cmp
andl
cmp
pop
in
mov
outsl
call
iret
mov
jp
pop
push
xor
push
rcr
cmp
into
sub
add
fistpll
ljmp
and
xchg
or
sahf
or
fs
inc
stos
push
sbb
js
push
icebp
ret
arpl
test
adc
lods
add
pop
cwtl
dec
inc
mov
in
subb
inc
pop
mov
push
fwait
mov
test
xchg
fs
sub
adc
shl
aad
dec
out
cs
mov
pushf
stos
ss
xchg
fdiv
jne
xchg
jp
stc
sar
inc
dec
insl
daa
jb
or
xor
jno
jle
or
mov
push
test
gs
adc
fadds
add
xlat
es
sarb
aam
lock
xchg
cmp
icebp
mov
and
push
jmp
push
mov
inc
dec
mov
or
add
xchg
cmp
sbb
inc
insl
jne
inc
rorl
push
int3
sbb
mov
mov
pop
mov
in
insl
cmp
push
lods
push
ljmp
mov
mov
sub
pop
lock
leave
fidivs
mov
sub
mov
shrb
bound
adc
cmpb
in
cmp
ljmp
movsl
ret
adc
jno
xlat
addr16
jp
jns
inc
and
out
mov
jg
or
dec
nop
jle
sub
pop
stc
mov
clc
lret
enter
movsb
cmp
xor
inc
mov
ljmp
cmpsb
jae
repz
mov
pop
stos
incb
cs
inc
lds
scas
sub
mov
or
filds
daa
xor
cwtl
mov
shr
or
movups
mov
cmpb
fs
in
jb
pop
sub
adc
dec
add
movsl
int3
xchg
imul
xchg
scas
test
adc
jecxz
lret
add
pushf
xchg
scas
fists
icebp
rcr
insl
out
inc
jnp
xchg
pop
pusha
fsts
int3
jmp
cwtl
inc
pop
push
rcr
add
inc
pusha
jge
mov
add
imul
add
fdiv
imul
pop
leave
jns
xchg
xchg
hlt
jl
outsb
and
fwait
lret
inc
jmp
dec
lret
dec
add
clc
xchg
add
aad
mov
adc
outsl
cmp
outsl
cmc
pop
and
sub
in
xor
ret
xchg
shll
test
fldl
inc
jl
pop
addr16
mov
adc
xchg
in
fisttpl
repnz
lods
ss
bound
mov
mov
or
stos
out
faddl
pop
cmp
pushf
insb
jge
or
sbb
jmp
jl
mov
and
ret
stos
je
mov
lret
cmp
negb
lock
dec
xor
int3
popf
jb
mov
repnz
mov
or
push
adc
pushf
fnstcw
ret
add
andnps
add
in
jne
mov
push
cld
xchg
je
mov
loop
sbb
jp
adc
mov
push
shll
adc
sbb
mov
in
adc
scas
ja
cmp
in
fcmovnb
inc
fiaddl
stc
pop
scas
add
adc
jb
or
inc
add
pop
and
cmp
arpl
fs
cmp
sub
dec
add
xchg
push
push
add
aad
ficoml
push
nop
add
adc
inc
mov
xchg
mov
dec
or
add
cltd
decl
dec
mov
mov
test
dec
fsubrl
push
repnz
pop
xlat
scas
outsb
pop
xor
mov
sub
rcrl
mov
or
or
jecxz
lret
movsb
mov
clc
in
rcrl
test
rcrl
xor
repz
imul
testl
or
fldcw
loopne
xor
add
or
jb
mov
out
sbb
jmp
adc
xor
sahf
mov
mov
imul
and
xor
mov
test
insb
cmpb
mov
sub
inc
cltd
pop
jo
sti
cmp
and
push
es
dec
xchg
sub
stos
and
in
push
fwait
xor
push
lret
lea
addr16
iret
js
pop
and
push
mov
scas
sbb
mov
int3
mov
mov
xchg
push
shlb
je
lret
sbb
sbbb
fidivrs
fptan
insl
ljmp
nop
sti
dec
cmpsb
iret
pusha
out
mov
push
cld
cmpsb
xor
aad
insl
jg
mov
inc
add
lods
push
adcl
xor
mov
jo
push
imul
js
adc
nop
aad
loope
or
loopne
inc
cli
ja
das
sub
push
sbb
test
adc
stos
or
or
loop
xlat
mov
dec
test
or
lock
cmp
mov
push
adc
adc
fs
cmc
int3
pop
mov
pop
push
popf
sbb
or
mov
xchg
fcoml
push
jns
rorb
push
cli
hlt
push
pop
xchg
into
in
sbb
xlat
cli
add
leave
into
mov
data16
repz
or
int
js
scas
dec
jge
dec
icebp
adc
repnz
mov
jno
cmp
cmp
add
cmp
jne
mov
add
dec
adc
fwait
imul
adc
or
cmp
insl
xchg
push
mov
mov
shll
es
inc
push
lock
lock
shrl
sahf
mov
je
test
hlt
out
out
sbb
adc
pop
int
arpl
scas
push
jp
fists
or
or
insb
sub
add
or
push
fs
xor
pushf
add
int
imul
add
lret
mov
daa
adc
out
inc
cmpsb
test
adc
pop
or
xchg
les
inc
cmp
xchg
scas
mov
mov
push
jp
insl
inc
sbb
gs
pop
mov
push
gs
push
xlat
stc
std
stc
push
data16
out
mov
push
mov
shll
out
xlat
cmp
mov
out
xchg
iret
sti
lods
cmpl
push
or
jae
mov
adc
dec
jmp
aaa
push
sahf
or
mov
dec
aad
push
push
or
aam
mov
pusha
in
push
and
fdivl
sub
or
das
jnp
popf
mov
or
mov
jb
jno
mov
lret
cs
add
lock
inc
outsb
mov
and
pop
test
xor
mov
jl
cmc
and
out
jo
popa
aad
outsb
xlat
addb
cli
iret
fwait
mov
icebp
sbb
lock
pop
jle
hlt
cmpsb
mov
mov
adc
sub
dec
sbb
add
mov
sbb
dec
adc
sahf
lods
push
outsb
lods
mov
test
loope
push
test
ss
or
in
mull
sub
sti
fstpt
rcll
ss
ss
outsb
std
lahf
dec
insl
add
xchg
popa
fwait
pop
or
mov
cmpsl
adc
add
and
xchg
mov
xchg
and
jo
xor
sahf
adcb
repz
in
adc
xchg
lcall
mov
aad
movsb
int
in
repz
pop
dec
pushf
cmp
mov
sbb
sahf
or
sbb
xor
inc
or
mov
nop
and
aaa
push
fstps
xchg
mov
ss
pusha
mov
pop
fwait
movsb
cwtl
pop
lea
xor
pusha
or
adc
mov
aad
inc
push
and
pop
inc
fwait
pop
and
jge
xchg
andl
pop
add
xor
imulb
jo
adc
ljmp
mov
rcl
mov
push
popf
movsb
sbb
jns
shl
sbb
or
jecxz
aam
sub
int
lea
fcoms
mov
jae
ret
sbb
jmp
ss
lahf
mov
rcl
pop
jmp
and
xchg
nop
pusha
push
nop
pop
incl
jl
xor
int3
les
xor
or
pop
dec
ja
ret
pop
cli
jecxz
lds
or
inc
sbb
aaa
xor
cmpsl
imull
mov
sahf
mov
neg
sbb
mov
popl
pop
scas
aad
loop
sub
mov
push
dec
cli
push
inc
in
jo
leave
mov
movsb
movsl
loopne
or
sub
enter
or
jge
rcll
adc
inc
jne
shlb
pop
dec
add
lret
xchg
push
mov
dec
test
in
fnsave
sbb
sbb
and
pop
or
mov
xchg
stos
std
clc
insl
push
movsl
pop
xor
cmpsb
call
test
xchg
mov
enter
popa
xor
pusha
add
cmp
pop
mov
jge
jle
fs
mov
mov
mov
test
xchg
aad
bound
pop
cmp
mov
or
dec
jl
lock
adc
xchg
sarl
loope
fidivrl
int3
sbb
cli
push
inc
mov
jecxz
lahf
stos
mov
outsl
cs
xor
pop
repnz
push
dec
fimull
sub
add
pop
jae
outsb
daa
cld
sarl
inc
jns
ljmp
into
xchg
pop
and
fstps
jp
push
add
push
cld
jbe
push
push
imul
enter
jmp
sub
pop
test
repz
pop
dec
andl
shll
adc
out
dec
cmp
xor
pop
cmpsl
es
dec
add
jl
mov
pop
hlt
cmp
push
adc
js
push
ljmp
mov
adc
lret
lods
ss
or
add
push
imul
popf
loop
sbb
or
pop
out
out
inc
inc
cmp
push
sarb
cmp
push
cmp
and
mov
and
aas
inc
into
mov
popa
shlb
or
dec
lock
xchg
mov
in
mov
jnp
test
mov
insb
sbb
mov
xchg
sbb
and
imul
adc
adc
adc
push
test
ja
mov
popa
xchg
xor
daa
mov
xchg
dec
inc
mov
lods
addr16
shlb
pushl
push
add
mov
mov
mov
add
dec
hlt
shr
daa
mov
or
imul
int
push
sub
mov
aaa
faddl
sub
sbb
mov
push
xor
mov
lods
cmc
xchg
fsubs
sbb
xchg
jne
loop
inc
in
push
sub
lds
jne
xlat
cmp
es
loopne
jge
fisubrl
ss
jno
ret
xchg
lahf
jmp
ret
sub
repnz
aad
sarb
pop
mov
ret
gs
pop
mov
stos
leave
jmp
ljmp
out
lahf
push
push
mov
mov
mov
insb
or
test
cmpsl
mov
cmp
ficoms
pop
shl
add
and
scas
insb
cs
pop
xlat
mov
jb
out
sbb
sbb
xchg
fsubrs
ljmp
or
jns
imul
xchg
jle
xor
idivb
hlt
mov
testl
lock
aad
sbb
dec
gs
add
cmpsb
xor
jmp
test
fstps
pop
or
push
mov
jmp
subl
mov
sbb
xor
pop
aad
int3
add
call
loopne
sub
daa
cmp
xchg
mov
push
xchg
inc
cmp
sbb
sub
idiv
repz
aas
cmc
cmp
enter
cmpsb
stos
lods
sti
mov
cs
xor
in
add
shlb
mov
sub
and
pop
lods
mov
out
add
jge
adc
adc
mov
xchg
pop
stos
movsb
imul
inc
push
stos
and
inc
xor
mov
jecxz
fld
inc
or
xor
mov
jno
scas
daa
mov
bound
incl
adc
fists
out
xorb
mov
aad
xor
mov
xchg
mov
mov
jbe
lret
loop
push
aas
loopne
inc
xchg
testl
mov
xlat
std
cli
test
pushf
test
sub
inc
je
aam
xor
push
adc
push
rcl
inc
mov
mov
mov
gs
pop
push
xor
mov
and
mov
fcmovne
imul
add
stos
pop
shr
lahf
dec
xchg
lods
mov
adc
les
imul
gs
xor
xchg
mov
lret
inc
cmp
jl
fisubs
adc
in
sbb
lock
and
pop
imul
mov
shlb
int3
add
jno
mov
push
stc
imul
enter
dec
sub
xor
jns
insb
stos
mov
shrb
sbb
mov
mov
mov
sub
inc
movzwl
push
cmpsl
xchg
inc
test
faddl
jo
dec
jnp
jae
xlat
lahf
cmpsb
jmp
cltd
and
call
dec
cs
inc
push
or
sub
xlat
mov
popa
and
and
sbb
aaa
adc
ret
xorb
xchg
test
sbb
inc
mov
pop
lret
xor
adc
iret
ret
out
inc
mov
outsb
cmp
enter
jo
sbbb
repnz
adc
cltd
loope
subb
adc
add
pusha
cld
out
cmpsb
imul
ljmp
pushf
dec
sub
push
push
or
pop
out
lods
in
or
mov
adc
cmpsl
pop
test
jno
cltd
call
lret
jge
ja
pop
adcb
fistpll
dec
out
stos
jno
inc
test
adc
scas
jbe
mov
jbe
pushf
sbb
push
mov
add
insb
and
mov
sub
mov
pop
aas
xchg
lret
dec
ljmp
jns
xchg
out
ror
rorb
aad
outsb
sub
add
mov
mov
xchg
jl
fldl
sub
movsb
iret
mov
inc
mov
mov
dec
lock
adc
loop
testb
or
mov
iret
push
and
dec
push
cld
mov
xor
inc
rolb
sub
int
xor
cld
sbb
aad
jbe
cmp
pop
lea
ss
mov
inc
sbb
xchg
hlt
mov
dec
int
jns
aad
adc
adc
loop
lahf
mov
int3
fnstenv
dec
js
aam
and
pop
rcrb
nop
mov
and
dec
or
lahf
jmp
push
icebp
sbb
xchg
mov
mov
orl
push
cmpsb
push
add
pop
jne
pop
lea
or
jmp
in
imul
int3
add
xor
mov
scas
cmpsl
push
mov
sahf
sbb
imull
adc
cld
das
dec
xor
lock
mov
jmp
push
mov
jae
mov
popa
inc
js
out
push
mov
andl
dec
dec
inc
aas
sbb
xorl
lcall
out
mov
aad
cmp
xor
lods
mov
xlat
mov
aam
cli
xor
jns
adc
mov
add
mov
sbbl
xchg
or
and
fs
dec
clc
mov
insb
inc
insb
mov
sbbl
add
or
sbb
sub
daa
dec
pop
xchg
add
xor
jg
inc
out
fs
sbb
inc
push
rcll
bound
mov
mov
sbb
leave
cmp
outsl
mov
aas
dec
and
repnz
push
pop
cltd
mov
pop
and
jbe
xchg
sub
sbb
popa
mov
push
xor
mov
push
fimull
jnp
imul
nop
or
mov
sbb
jecxz
cld
arpl
jb
sbb
and
fcoml
lahf
and
cwtl
jmp
out
idivl
fisttpl
js
cli
xor
lret
aaa
cltd
mov
rcl
dec
jns
idiv
sub
push
rolb
sub
dec
cmp
cwtl
and
stos
sarb
shll
or
push
js
stc
jbe
dec
mov
cmp
clc
movsb
out
jae
or
add
mov
cmc
stos
cltd
js
mov
mov
lds
and
sub
adc
outsl
push
aam
add
scas
inc
outsb
cmc
jo
stc
push
bound
das
xor
fdivs
inc
js
call
sub
mov
pusha
sarl
icebp
movsl
pop
aaa
mov
mov
pushf
inc
fimull
rcrb
fwait
add
cmp
pop
enter
sbb
jp
rorb
repnz
push
push
push
insb
add
lods
scas
mov
pop
dec
fidivs
inc
xchg
add
sbb
push
cmp
imul
movsl
lahf
aad
push
push
cld
or
out
movsb
xchg
roll
adc
mov
cmp
mov
mov
lods
mov
imulb
add
xor
and
adc
or
xchg
pop
adc
adc
lock
in
pop
inc
popf
xchg
mov
fwait
cmpsb
xor
fst
push
pop
mov
pop
push
sbb
dec
xor
dec
aad
cmc
mov
dec
fwait
push
mov
or
loope
pop
sub
ljmp
aad
dec
jecxz
enter
stos
sbb
mull
inc
mov
xor
pop
pop
jg
fwait
jmp
add
cmp
push
inc
jmp
push
mov
adc
cmp
sbb
lea
dec
je
xor
dec
inc
pop
mov
jo
in
push
or
dec
dec
cmp
stc
data16
or
adc
enter
xchg
fidivrl
leave
pop
mov
imul
loope
sbb
sbb
jl
mov
mov
mov
stos
sbb
fimull
or
push
inc
xor
sub
clc
mov
add
fnstenv
gs
and
xor
jmp
insb
cmp
es
xchg
inc
icebp
lret
sub
mov
add
push
pop
cmp
sub
push
mov
xchg
xor
js
ret
out
out
mov
mov
xchg
and
sbb
test
movsb
lcall
jle
add
mov
sub
xchg
lock
clc
sub
rcll
mov
push
mov
test
popl
xor
sbb
out
pop
mov
fcomip
ja
xchg
push
xchg
or
leave
mov
popl
enter
mov
xlat
in
push
sarl
add
outsl
adc
xchg
sub
les
adc
jne
dec
enter
pop
xor
pop
test
inc
iret
xor
push
push
add
mov
idiv
xor
fs
sbb
pop
dec
jge
je
xchg
and
outsb
xor
xchg
jge
inc
mov
and
mov
add
jnp
fbld
cmpsl
cltd
movsl
movsb
pusha
popa
ficoms
adc
pop
xor
lcall
cmp
push
xchg
test
bound
xchg
pop
andl
cwtl
cmpsb
jns
mov
jl
stos
cmp
outsl
jmpw
xchg
stos
mov
popf
dec
daa
aas
sub
ja
jb
stc
push
inc
and
imul
mov
in
xor
in
mov
sub
dec
xor
jmp
cmp
enter
ret
and
gs
adc
ja
aas
xorb
pop
push
inc
cmp
jg
pop
push
call
push
in
insl
lret
roll
into
add
cmp
fstpt
sbb
int3
pop
rcll
cmpsl
jge
add
notl
int3
cmp
xchg
outsl
or
dec
mov
mov
xor
jmp
test
xor
mov
in
pushf
fcmovb
rcr
cmp
pusha
xor
and
jecxz
dec
and
and
scas
fidivs
test
jo
data16
push
adc
hlt
jnp
test
pusha
mov
icebp
fs
iret
adc
cmp
scas
out
outsl
outsl
xchg
inc
adc
repnz
adc
dec
in
aas
push
ficomps
adc
push
movsb
jnp
sub
lods
dec
outsl
add
loopne
xchg
je
mov
mov
push
push
jg
push
cmp
insb
inc
pop
push
pop
sub
repz
mov
pop
gs
push
jmp
jb
mov
call
ret
out
or
leave
imul
xor
pop
popa
mov
aad
imull
pusha
scas
mov
int3
add
and
outsl
mov
push
jg
lret
add
dec
add
adc
movl
lret
add
mov
xor
fidivrl
push
xchg
lods
dec
lahf
mov
int
sbb
mov
and
stc
lods
jae
mov
dec
xchg
mov
int
jb
jo
ljmp
scas
pop
cli
adc
sbbl
xlat
mov
xchg
adcl
sub
lret
mov
ret
ret
mov
mov
maxps
mov
mov
popf
lods
mov
push
movsb
sub
dec
outsb
adc
jmp
ja
test
cmpsl
mov
mov
xor
cs
and
inc
adc
mov
push
or
int
dec
push
pop
mov
jl
pop
or
into
out
inc
add
pop
fwait
add
cmp
cmp
xor
bound
lea
xchg
into
fildll
enter
or
inc
sbb
stos
je
sub
push
push
pop
pop
mov
dec
add
inc
sub
sbb
xchg
pop
ds
adc
stos
ja
push
and
jb
mov
inc
addr16
push
lret
sbb
stc
movsl
mov
sbb
cmp
ja
rcrb
jnp
cwtl
jge
xchg
dec
xchg
inc
je
lret
flds
pushw
lahf
mov
dec
scas
pop
pop
js
mov
xor
shrb
xor
les
or
cmp
and
or
mov
sahf
sti
xor
aaa
pop
sbb
adc
push
scas
scas
pop
or
inc
or
or
mov
cmp
mov
lret
lret
adc
push
mov
test
add
aas
adc
xor
push
sub
cmp
push
movsl
scas
xchg
adc
jb
xor
jg
loop
or
mov
inc
xchg
loop
iret
nop
out
dec
adc
push
push
sub
jnp
insl
xchg
stc
xor
inc
and
adc
cmp
hlt
lods
push
ret
insb
shlb
jne
adc
sti
loopne
addr16
sbb
mov
jno
cltd
inc
stos
mov
ss
mov
pop
xor
imulb
cmp
vmovupd
and
xchg
or
or
lea
repz
cmpsb
mov
lods
rcll
clc
addr16
jae
in
bound
faddp
insl
push
mov
xor
mov
add
imul
inc
dec
pop
dec
fdivl
mov
jmp
mov
xor
aam
lcall
lahf
inc
add
push
pop
mov
mov
lock
dec
jne
fsubl
stos
mov
ljmp
and
xchg
jno
cmp
testb
jp
jne
sub
sbb
orl
lret
xor
ljmp
pop
pop
divl
mov
popa
sbb
roll
mov
dec
je
sub
ds
aaa
mov
xor
pop
ret
jo
aaa
bnd
addr16
fldt
out
adc
dec
sub
loope
les
lods
mov
and
push
sub
xchg
sbb
mov
adcb
shrb
and
jno
ret
jecxz
mov
dec
sub
test
fistpll
fsubl
mov
insl
and
mov
add
inc
pusha
mov
les
hlt
xchg
dec
imul
inc
mov
jg
movsb
mov
outsb
pop
dec
lahf
cmc
mov
in
inc
cld
xor
push
lcall
imul
push
rolb
fwait
sbb
loopne
rcrl
pop
les
add
pop
inc
test
jns
mov
push
or
sub
mov
fs
mov
sbb
jmp
mov
push
fisubs
mov
out
or
pop
jmp
xor
insl
into
inc
push
push
enter
sarl
or
stc
lcall
test
cs
out
in
xchg
cmp
mov
lahf
daa
xor
negb
test
cmp
fiadds
and
jg
cmpsl
pop
test
enter
pop
mov
fadd
xchg
sti
jno
mov
mov
push
push
add
fcmovb
add
cs
or
mov
cltd
jge
mov
jnp
jecxz
movb
push
movsl
lahf
mov
xchg
lret
jl
fisubrs
sbb
das
into
fmuls
mov
in
addr16
sbb
cmp
xlat
adc
fsubrp
xchg
xchg
xchg
adc
and
fs
jmp
mov
jo
mov
scas
mov
and
clc
inc
retw
or
sarl
push
je
in
in
xchg
xor
jbe
sbb
shl
ret
test
shr
jae
pop
iret
adc
stos
mov
lcall
lahf
adc
jp
sbb
inc
jo
mov
leave
insb
fstpl
and
push
cmp
xchg
mov
mov
cmp
sbb
push
mov
add
push
fcoms
cmpsl
lcall
std
jecxz
repz
or
sti
fcompl
inc
repz
xchg
je
stos
jecxz
ret
lret
cwtl
dec
sub
xlat
loop
setl
pushl
gs
dec
clc
sub
add
xchg
shll
fimull
clc
xor
sub
enter
ljmp
test
ss
push
mov
scas
cmp
pop
pop
cmp
dec
rcrl
aaa
dec
inc
xor
or
sbb
xchg
sub
je
mov
orb
pop
mov
shll
arpl
add
adc
daa
fs
aas
sbb
mov
pusha
xor
loopne
or
arpl
cwtl
enter
cmova
mov
xchg
sub
mov
cmp
fisttpll
mov
mov
popf
dec
jno
push
and
jae
jo
cwtl
pusha
cmp
cs
insl
fidivrl
pop
dec
jno
popa
jl
sbb
xchg
inc
or
jns
hlt
jae
mov
pop
lcall
insl
enter
in
sub
sub
mov
dec
lret
jbe
mov
dec
xor
cmp
das
fbld
int
xchg
add
push
ret
sbb
push
push
jle
push
filds
jmp
inc
xchg
das
pop
stc
xor
xchg
test
jecxz
adc
inc
gs
dec
jle
pop
xchg
adc
pop
fbld
cmp
sub
idivb
xchg
cmp
sbb
sbb
lock
pop
das
ffreep
pop
ds
push
adc
xchg
aam
xchg
push
inc
mov
pop
pop
pop
xor
lahf
or
mov
dec
mull
sbb
movl
mov
rclb
push
into
repz
lea
pop
lock
mov
push
add
pop
xchg
xchg
inc
femms
ror
inc
cmp
adc
jnp
jge
cmpb
lea
push
sbbb
stos
lods
ss
mov
and
or
mov
xchg
pop
punpckhdq
lods
imul
fdivp
call
or
in
sbb
out
fidivs
mov
ljmp
push
adc
leave
xchg
mov
out
ret
scas
mov
repnz
mov
lret
test
loop
inc
insl
je
jp
inc
rcll
inc
cmp
xor
pop
fldenv
sub
addps
xchg
push
popa
fcmovnbe
or
cltd
out
push
mov
movsb
ja
xor
call
es
or
mov
xchg
ret
push
rclb
mov
aaa
hlt
sahf
cmpb
addps
pop
dec
out
push
jb
cwtl
test
cmp
shl
dec
aaa
and
leave
cltd
enter
testl
mulb
dec
xor
dec
jl
or
jmp
hlt
jmp
jno
mov
subl
push
dec
aaa
lds
nop
dec
loop
imul
bound
pop
adc
sub
jl
sub
sbb
xor
shll
dec
or
insl
xchg
test
push
jl
pushf
into
in
insl
jmp
out
call
pop
jle
jnp
cmpsl
push
sbb
fdivrp
das
mov
and
push
aam
add
std
jno
ljmp
mov
sbb
ds
inc
and
inc
lods
outsl
and
lcall
lret
out
aaa
push
or
dec
addl
pop
mov
xchg
dec
leave
icebp
add
push
dec
add
adc
jl
hlt
dec
movsb
adc
mov
lock
adc
add
sbb
xchg
or
dec
insb
arpl
bnd
xchg
push
scas
inc
ss
movsl
ljmp
ss
or
ficomps
movsl
out
inc
mov
ds
dec
xchg
lcall
cmp
adc
out
mov
inc
pop
or
push
push
loopne
hlt
ljmp
scas
pushf
stos
add
cs
aam
mov
mov
stc
xchg
insl
adc
jno
sti
cmp
mov
mov
xchg
leave
notl
dec
lods
inc
leave
aaa
gs
fwait
push
adc
pop
jae
sahf
int3
sub
sub
mov
out
mov
outsl
sbb
scas
cmp
xorl
lods
xchg
ret
jmp
or
sbb
and
hlt
xor
enter
jmp
lahf
sarl
cmp
jg
jo
inc
mov
out
cltd
pusha
cmp
xchg
push
in
gs
mov
lret
dec
or
xor
pop
shll
test
subl
stc
data16
scas
pop
adc
jne
adc
lds
or
mov
aas
adc
mov
testl
daa
xor
add
negb
mov
mov
insl
xchg
cmp
std
daa
xchg
das
mov
pop
push
cmp
cwtl
push
div
pop
jnp
cld
out
stos
sbb
test
fidivrs
add
insl
lods
lcall
inc
or
data16
xor
sub
sub
scas
mov
and
cmp
mov
insl
mov
dec
leave
mov
fisttps
mov
mov
bound
jns
cwtl
cmp
cmp
add
push
into
jle
mov
sub
test
lock
pop
sbb
nop
aad
shr
imul
lods
test
mov
int
inc
lds
pop
and
sbb
out
pop
cmp
nop
aaa
gs
lret
mov
pop
roll
ret
and
daa
popa
mov
mov
jne
cmpsb
pop
outsl
outsb
xchg
movb
in
lea
aaa
scas
fisubl
pusha
popf
popw
lahf
xchg
out
pop
jg
push
in
add
hlt
rorb
mov
fmuls
ret
js
lahf
fwait
inc
inc
sti
mov
or
fstpl
adc
mov
ja
xor
add
inc
stos
push
fcomp
mov
mov
mov
in
insl
sarb
cwtl
mov
cltd
add
jl
sahf
mov
packsswb
in
push
xor
sbb
sti
pop
sub
mov
andb
call
in
mov
ljmp
movsl
test
mov
test
leave
dec
or
es
or
push
jbe
mov
jbe
or
sub
xor
xor
ds
inc
push
das
mov
repz
cltd
cmp
pop
ss
stc
icebp
sub
xorl
std
das
cmp
mov
pushf
xchg
xor
cltd
cli
mov
cs
pop
mov
xchg
jl
cmpsb
xorb
popa
test
inc
mov
pop
mov
pop
sbb
jmp
add
fiadds
ret
mov
add
mov
mov
xchg
cmp
ret
int3
out
cmc
out
fsts
in
or
jle
mov
hlt
fwait
xchg
pop
icebp
imul
ret
into
sub
nop
shlb
mov
jae
pop
or
and
test
jge
mov
sahf
aad
and
int3
pop
popa
sub
jg
std
xchg
sti
ja
fistl
pop
rep
fisttpl
mov
push
xor
arpl
mov
push
js
mov
dec
xor
cmpsl
cmp
xchg
mov
mov
mov
sahf
les
les
popa
sub
out
jne
inc
loop
jno
movsb
pop
inc
push
and
mov
or
pop
je
and
aaa
in
fcoms
cmp
iret
sub
popa
nop
out
addb
cmc
int
sub
movsb
pop
push
jle
mov
sub
roll
inc
push
cmp
xchg
imul
flds
pop
fmull
add
arpl
xchg
push
add
and
inc
xchg
dec
mov
push
lods
and
mov
aad
add
mov
jl
jb
mov
call
adc
mov
loope
mov
or
jb
xlat
sbb
pop
sbb
cmp
push
les
mov
mov
push
aad
rol
test
mov
jnp
gs
out
cmp
lea
pop
cmc
cmpsb
lds
add
mov
jns
pop
aam
repz
xor
out
cmp
adc
idivb
and
mov
sahf
test
dec
loopne
lods
imul
sbb
and
mov
aaa
ds
iret
adc
inc
loope
xchg
inc
outsb
lcall
ljmp
pop
inc
push
imul
shlb
add
inc
cmp
cld
jno
lahf
out
and
mov
mov
mov
mov
sbb
rorb
jno
adc
js
or
je
icebp
or
lods
scas
sbbb
sub
imulb
cmp
dec
add
scas
cmp
xor
push
imul
in
jle
loop
pop
adc
cmpsb
shl
adc
enter
push
push
pop
xchg
pop
aaa
push
mov
dec
aas
push
fadds
shl
cld
cmc
sbb
je
xlat
mov
movsb
inc
push
imulb
pushfw
icebp
in
add
loop
sub
mov
push
popf
add
call
cmpsl
ljmp
int
add
sub
nop
push
or
jno
rol
mov
ds
and
int3
mov
pop
scas
test
rorl
ljmp
xor
mov
push
jbe
pushf
push
xchg
fs
xchg
data16
prefetch
or
mov
dec
mov
push
cli
push
xchg
in
pop
xchg
call
or
mov
mov
arpl
ja
mov
cmp
and
js
pop
in
pop
nop
imul
mov
scas
sti
in
movb
push
rcr
mov
mov
sub
xchg
jle
std
mov
push
shll
lds
push
leave
pop
cmp
cs
sbb
jp
loopne
inc
popf
out
pop
sub
push
test
or
and
mov
add
pop
cltd
adc
jle
pop
mov
arpl
sbb
out
inc
pop
cmpsb
addb
lods
fisttpl
sub
jo
xchg
aad
cmp
mov
ja
lret
sub
rcr
daa
scas
adcl
jle
inc
mov
inc
xor
push
pop
out
les
push
jno
sbb
lock
and
pop
mov
lock
sbb
out
icebp
push
push
hlt
fwait
rorl
sbb
push
pop
repnz
out
or
pop
notb
xchg
adc
mul
les
xor
inc
mov
stos
insb
shr
lea
je
and
nop
inc
stos
and
adc
pusha
stos
push
xor
aam
cmpsl
arpl
movsl
nop
lahf
dec
sbb
mov
jb
scas
outsb
sahf
test
or
xchg
repnz
out
or
pop
push
shlb
mov
adc
sub
ja
xor
sub
lock
mov
cmp
sarb
or
xchg
mov
xchg
push
jns
mov
push
pop
daa
xor
jmp
ja
push
sbb
cmpsl
mov
fnsave
and
xchg
hlt
sub
lods
bnd
aam
sbb
dec
ret
in
xor
add
shrb
out
jg
fbstp
jle
repz
lret
xor
mov
or
sub
and
lret
mov
and
repnz
int
fwait
cmp
int
or
sbb
mov
pop
mov
movsb
test
mov
and
cmc
stos
std
mov
subl
jp
sbb
sahf
fistl
xchg
mov
add
nop
and
xchg
xlat
aas
xchg
push
jge
or
arpl
nop
dec
xchg
in
and
sub
je
out
lret
shlb
stc
lea
or
mov
push
mov
pop
mov
inc
and
lahf
je
mov
out
inc
cmp
lcall
mov
lea
rclb
dec
inc
inc
jae
xor
int
sub
fcoms
ret
jmp
fxch
lret
adcb
inc
adc
sub
mov
daa
mov
cmpsb
fcomps
addl
int
mov
pop
jno
imull
push
adc
sarl
inc
stos
repnz
lahf
xorb
pop
xchg
testb
xor
ljmp
jno
cld
and
mov
xor
test
adc
jp
out
xor
pop
es
adcb
int3
call
and
and
lock
push
jne
pop
xchg
add
mov
xorl
or
lods
push
loop
addr16
pop
sbb
mov
data16
lahf
scas
xlat
inc
add
dec
adc
cli
lods
push
dec
mov
mov
cmc
lret
cwtl
test
stos
pusha
popf
dec
dec
dec
pop
in
mov
cmp
insl
push
jmp
cmc
jge
dec
jo
fdivrl
addr16
lret
cli
clc
movsb
roll
cli
lods
pop
lods
push
adc
movsb
xchg
mov
aas
shlb
lcall
pop
inc
xor
loope
notl
lret
push
cltd
inc
stc
dec
inc
pop
pop
out
cli
scas
movsl
or
inc
roll
add
xlat
sti
inc
stos
loop
movsb
fisubl
xor
jns
mov
in
xchg
inc
fmuls
push
andl
leave
nop
pop
xor
rcll
loop
mov
xchg
leave
xor
jp
xor
pusha
xor
insl
addr16
pop
rorb
pop
repnz
sbb
sub
and
fcoms
rolb
inc
sbb
jecxz
pop
repnz
xor
pop
xor
push
cmp
pop
movsl
cmp
iret
add
sub
mov
loopne
insl
nop
xchg
scas
dec
dec
push
rcl
sub
mov
mov
stc
iret
push
mov
popf
mov
cmp
fnstsw
pop
inc
sbb
fs
xor
ljmp
jo
and
arpl
aam
push
and
ret
mov
repnz
cmpsb
dec
xor
repz
daa
iret
push
call
sbb
lods
dec
push
and
cmp
and
inc
test
add
sbb
inc
sbbl
mov
add
rcll
les
int
pop
hlt
jnp
mov
je
inc
mov
inc
mov
jne
mov
adc
bound
imul
pop
adc
jg
int3
add
inc
mov
pop
mov
jbe
repz
adc
ret
push
mov
jge
push
push
sbb
mov
cltd
jmp
push
jg
fs
out
xor
subl
inc
shll
xchg
and
dec
mov
and
or
es
pushf
xlat
pop
adc
std
jne
lea
ja
cmpsb
imul
mov
es
in
out
ret
int3
or
out
out
xchg
pop
pop
or
adc
push
mov
hlt
insb
add
jecxz
sub
sbb
xor
mov
loope
lcall
or
das
add
jns
cmp
cmc
orl
mov
mull
in
ficoms
jg
adc
cltd
lahf
jnp
mov
cmp
in
inc
adc
nop
nop
adc
pop
loopne
mov
iret
scas
lret
mov
sub
je
mov
add
mov
and
or
and
xor
enter
imul
nop
sub
pop
cld
adc
add
sbb
addr16
mov
mov
andb
jg
and
dec
adc
mov
ficoms
out
cli
cwtl
icebp
dec
inc
sub
je
inc
fldenv
jno
mov
das
or
lock
int
jnp
and
mov
ss
andb
sbb
movsl
in
mov
push
push
mov
repnz
jno
ja
clc
int3
iret
rcll
mov
fistps
mov
dec
scas
pop
ret
adc
out
enter
lret
fldenv
les
xchg
mov
mov
test
push
inc
mov
xchg
in
sub
aaa
dec
pop
jo
push
push
push
iret
cmp
xchg
pop
pop
cwtl
fidivl
mov
jb
pcmpeqw
fldcw
xchg
dec
sub
xor
adc
or
test
ss
and
ret
inc
pop
ss
ljmp
or
lret
test
lods
cli
rol
sub
std
dec
stos
stc
jbe
call
pop
mull
cmc
or
cltd
adc
fistl
jge
or
pop
mov
push
clc
and
mov
push
cmp
mov
cli
mov
in
je
ret
cmp
stos
into
push
sbb
outsl
mov
cmp
cld
repnz
incb
fldt
and
ret
xchg
xchg
in
sub
xlat
lret
xchg
int3
xchg
insb
ja
mov
stos
push
pop
fcompl
ljmp
testb
sar
dec
xchg
das
or
test
sbb
mov
lods
data16
fs
sub
xchg
push
js
jp
rorb
cmpb
movsb
pushf
mov
cmp
mov
loopne
xlat
push
adc
je
mov
test
div
sub
xor
sub
adcl
cmp
sbb
movsl
insl
add
mov
mov
push
push
out
inc
outsl
xchg
lret
pop
jl
sbbb
int3
lahf
xchg
mov
aas
insb
cmpsb
sub
popa
and
mov
daa
adc
adc
xor
sbb
and
ljmp
xorb
jmp
jg
cmp
shld
lods
mov
mov
or
fisubrl
sub
xchg
popa
push
fwait
xorb
pop
dec
inc
mov
daa
and
fnstsw
and
mov
test
push
push
aad
jns
inc
outsl
imul
daa
cld
push
dec
int
int
testb
aas
addr16
push
cmp
dec
ret
pop
jne
jne
lock
jns
mov
add
out
push
imul
mov
popf
lahf
xor
sbb
mov
adc
leave
outsb
sbb
test
daa
int3
mov
inc
or
inc
sbb
jg
insb
jne
add
ret
stos
shl
adcl
fwait
xor
das
out
mov
fistl
repz
and
ja
dec
xor
xlat
cmp
call
test
sbbb
cmp
loope
sbb
xchg
xchg
lret
ret
test
jmp
sbb
sbb
pop
mov
mov
js
jo
push
hlt
test
fadds
lret
jmp
inc
rorb
pop
sbb
xor
js
inc
sbb
pusha
ss
lds
js
sarl
into
jnp
sbbl
lret
pop
int3
in
push
into
add
loope
or
pop
pop
add
aas
push
add
loop
pop
inc
pushf
outsl
mov
xchg
rclb
mov
ss
cmpsl
ja
pushf
add
mov
cli
and
push
cmp
aad
adc
add
loope
outsb
mov
pop
fidivl
int3
out
mov
mov
xor
popa
cwtl
mov
or
mov
movsl
pop
testl
lret
push
cmp
lret
in
sahf
sahf
cld
jmp
jbe
hlt
and
pop
mov
aaa
mov
mov
in
mov
push
bound
pop
pushf
scas
xor
in
orb
push
and
push
pop
frstpm(287
jp
pop
ret
pop
and
stos
mov
shrb
and
mov
xor
stos
push
dec
jecxz
xchg
jbe
outsb
sbb
jo
scas
inc
mov
lds
addr16
push
mov
push
negb
inc
xchg
test
test
int
les
mov
mov
lods
shr
jo
push
inc
add
add
daa
lret
jo
mov
jne
sahf
lret
addb
adc
pop
aas
inc
jo
xor
adc
pop
ds
jecxz
adc
cmp
pop
fiaddl
cmp
sbb
rol
adc
and
mulb
jmp
inc
cmp
push
popa
push
aam
pop
es
xchg
xchg
cmc
mov
xchg
fwait
jge
pushf
push
push
nop
lret
aaa
xchg
jo
jo
push
mov
aas
out
add
cmpb
imul
test
jl
sub
mov
sub
and
push
stos
jecxz
jae
lods
je,pt
lahf
scas
hlt
pop
mov
lods
icebp
and
mov
call
xchg
sbb
sub
mov
mov
das
test
inc
mov
xchg
xor
and
xor
xchg
sbb
push
outsl
mov
cmpsl
rorl
rcr
add
jno
jge
dec
mov
sti
ja
jbe
and
mov
adc
mov
add
pop
push
lahf
insb
dec
xchg
push
sahf
pop
pop
xlat
sub
and
fwait
cli
sbb
in
outsl
jmp
jecxz
cmp
mov
sbb
repnz
js
sub
sub
cld
outsb
rolb
decb
cli
cmp
daa
xor
cs
ss
sbb
push
push
mov
mov
mov
sub
stc
cmp
fnop
push
dec
adc
add
mov
add
in
gs
ljmp
aas
and
mov
cmpsl
mov
cmp
sti
fs
fbld
aad
jno
data16
mov
mov
inc
ds
xor
cmp
cld
ficoml
xor
loop
or
or
pop
push
out
nop
popa
xchg
shrl
mov
in
cmpl
or
add
dec
jae
nop
test
repnz
xchg
mov
lret
fs
pushf
mov
sbb
out
shll
insb
outsl
xor
sub
mov
mov
cmp
dec
inc
mov
out
aam
adc
add
fdivrs
xchg
lcall
mov
lods
add
fbstp
sub
mov
xor
movsb
mov
add
mov
jns
cld
aad
ja
add
mov
popl
movsb
pop
push
lret
sbb
xor
sub
or
fs
sub
loope
or
inc
cwtl
xchg
sub
loop
imul
mov
lcall
shrb
clc
xchg
sub
mov
hlt
mov
push
xor
lcall
les
imul
push
mov
xchg
call
cmp
int3
mov
clc
fs
clc
das
in
mov
out
testl
out
test
arpl
lcall
mov
adc
out
adc
inc
ljmp
pop
xor
xor
fucomi
fsubrs
sbb
andb
jbe
addl
rcll
hlt
jmp
or
sbb
popf
or
push
xchg
negl
in
movsl
xor
jl
mov
jae
mov
sbb
push
pusha
dec
jg
cmp
xchg
sub
in
xchg
lods
push
jo
daa
sbbb
outsb
mov
loopne
add
sub
or
lds
mov
add
adc
jae
mov
xchg
repz
stos
test
loopne
bound
mov
pop
fadds
outsb
addr16
fcmovne
pop
sti
or
pop
or
mov
cmp
ret
sub
popf
out
mov
adc
stc
cmp
xor
mov
mov
jae
movsl
jmp
fsubr
mov
fstp
jl
fadd
std
inc
sbb
cmp
cmpsl
je
xlat
cltd
int3
adc
xor
sbb
pop
aaa
adc
push
addr16
adc
xchg
out
jl
adc
into
push
addr16
leave
pop
jae
and
repnz
or
mov
mov
dec
jle
int
repnz
dec
stc
in
dec
and
xor
bound
or
cmc
repnz
push
rep
xor
xchg
inc
aad
adc
xor
cmp
mov
pop
lcall
inc
xor
mov
dec
pop
and
fmuls
mov
stos
mov
mov
andl
xor
and
pop
mov
or
mov
je
push
test
mov
push
inc
xchg
cmp
add
enter
in
imul
fs
inc
cmp
insb
lods
inc
and
mov
imul
movsl
popf
cltd
test
fldl
loopew
rcll
iret
popl
sub
imul
cld
lcall
jg
xchg
es
sub
lds
repz
cmp
cli
adc
mov
mov
test
xchg
dec
test
xor
xchg
sbbb
cmpsl
data16
test
cs
ret
test
adc
mov
pop
inc
mov
loope
in
xchg
and
imul
push
shrb
cmc
dec
mov
lea
pop
mov
mov
cmc
aam
fdivs
jmp
add
test
lods
arpl
jo
add
dec
imul
out
and
jae
loop
and
sub
iret
lcall
or
daa
jns
call
push
xchg
xor
int
pop
push
adc
or
sti
adc
mov
or
add
pop
cmp
call
pop
aas
sbb
xchg
rorl
cwtl
adcb
out
popf
movb
mov
insl
loopne
or
aas
cwtl
cmp
rolb
push
push
and
mov
sbb
pop
push
adc
sbb
adc
outsl
add
mov
mov
mov
push
out
nop
push
push
add
or
add
in
push
addr16
pop
and
leave
xchg
push
aad
jmp
mov
push
mov
jecxz
insl
shrb
cli
cmc
fsubrl
fsubrl
add
pop
outsl
push
loop
mov
xchg
add
mov
xchg
sahf
stc
inc
lret
xor
mov
adc
xor
lea
dec
aas
cmp
cmpsb
inc
mov
or
inc
fndisi(8087
nop
xorl
xor
in
pop
into
int3
mov
call
xorb
and
dec
mov
mov
sbb
jle
insb
shr
shld
stc
fbstp
sub
lea
lret
adc
imul
xchg
mov
pop
popa
addr16
xor
sbb
sahf
add
mov
mov
and
add
cmpsl
cmp
mulb
popf
adc
and
es
add
fsubrl
scas
pop
jg
incl
lcall
push
xor
mov
popw
and
icebp
js
lcall
adc
dec
test
loope
sbb
dec
sbb
popa
js
scas
xchg
pop
ds
dec
mov
fldl
aas
insb
test
xchg
mov
fiaddl
jae
scas
add
xlat
mov
imul
and
leave
adc
scas
mov
fiadds
mov
out
jb
nop
mov
xchg
sbb
jne
push
arpl
push
in
jecxz
xor
push
and
mov
ret
pop
rol
xchg
cmp
enter
mov
in
push
inc
ret
shlb
cmpsb
pusha
sub
iret
in
cmp
push
flds
mov
fwait
cmpsl
js
xor
adc
aam
aam
sub
std
lock
mov
jle
andnps
mov
push
cmpsb
lea
daa
insb
mov
sub
out
add
test
xchg
popf
xchg
sub
test
inc
roll
inc
push
aam
mov
push
cli
mov
addr16
cltd
lods
sbb
mov
loope
mov
fs
mov
xchg
jo
mov
jg
ret
pusha
xchg
or
jne
lods
add
jno
mov
lret
push
push
and
mov
lods
pop
lds
insl
mov
or
imul
jae
jnp
mov
sub
js
jp
jle
clc
pop
push
push
in
lock
xchg
add
mov
sbb
pop
dec
jne
and
inc
outsb
imul
xor
adc
and
mov
mov
aad
pop
mov
loope
dec
add
xor
mov
and
fsts
mov
stc
shll
mov
pop
je
dec
mov
jl
int
push
mov
pop
fcmovbe
xor
pop
cmp
fwait
jecxz
lods
loope
aaa
fucomip
jmp
lea
lahf
decl
mov
xchg
mov
inc
sbb
ja
ds
hlt
xor
jge
or
mov
es
add
mov
fstps
lds
adc
jae
xorl
or
and
sti
or
int3
add
or
mov
push
loope
out
dec
mov
inc
fs
mov
jne
dec
loopne
add
lahf
sbbl
leave
inc
bnd
mov
push
inc
sahf
mov
fnstenv
jb
mov
mov
xchg
sbb
fistl
daa
dec
xor
add
ret
mov
outsl
add
inc
mov
sbb
add
inc
stc
pop
repz
popf
movsb
dec
movsl
mov
aam
movsb
adc
xchg
pop
xchg
fldl
fs
lret
fdivl
stc
dec
pop
mov
ljmp
mov
cmpsl
jb
es
push
test
sahf
fisubs
and
push
or
inc
out
sub
cltd
inc
insb
mov
xor
std
std
ja
inc
and
repnz
fs
jbe
xor
lret
in
lcall
pop
inc
jle
push
sub
push
jb
jno
dec
mov
popf
pop
cmpsb
ret
mov
setp
in
push
add
gs
jle
add
pushf
xchg
cmp
in
nop
jb
inc
or
cmp
aam
pop
sbb
dec
scas
out
int
jnp
adc
and
adc
imul
mov
jge
div
mov
lds
in
out
dec
lea
sub
mov
out
sub
jle
add
inc
test
add
jecxz
fimull
call
add
xor
mov
stos
imul
mov
sbb
xor
call
mov
lds
or
and
test
sbbb
push
or
mov
jmp
inc
cltd
pop
lret
inc
sub
cmp
js
pop
mov
mov
stc
movsb
iret
sub
mov
gs
popa
inc
xchg
xlat
cwtl
xlat
push
or
xchg
mov
enter
pop
add
adc
pop
sarl
cs
jb
add
cmp
xor
inc
mov
fldl
icebp
push
mov
clc
mov
std
in
xchg
leave
pop
and
xor
sub
or
dec
lods
in
sub
or
lea
mov
mov
xor
dec
xor
aas
cltd
in
cmp
movsl
sub
imul
or
enter
adc
mov
mov
out
scas
ror
mov
jecxz
testl
lea
dec
and
pop
js
into
shrl
cmc
inc
mov
xchg
fbstp
lahf
dec
addb
adc
fldt
dec
xchg
pop
adc
btsl
in
aad
sub
adc
outsb
jl
push
ljmp
push
fdivs
cmp
push
and
daa
scas
push
and
test
shl
sub
xlat
dec
lods
jbe
cmp
int3
cmpsb
or
outsl
lods
insb
mov
imull
add
lods
outsl
arpl
adc
fcom
icebp
pop
cmp
scas
in
shrb
jnp
dec
push
fildl
iret
cmp
jne
xor
cld
inc
bound
ja
jno
and
push
std
pop
jno
push
mov
cs
aaa
stos
in
test
repz
inc
mov
shll
loopne
imull
lods
lret
stos
ss
mov
push
cwtl
cmp
popf
rcrl
xchg
inc
mov
nop
push
or
bound
arpl
out
lret
gs
lods
mov
and
adc
call
push
or
mov
in
movsl
popa
popf
aam
sub
cmp
pop
imul
clc
dec
call
add
in
sub
and
inc
das
repz
cmpl
fimuls
inc
in
mov
pop
xor
pop
mov
and
pop
inc
xchg
cmpsb
pusha
les
sahf
and
cmpsl
add
dec
sti
mov
ljmp
ljmp
push
dec
sub
adc
pop
lods
xor
sbb
or
std
xor
sbb
int
add
sbb
mov
fildl
xor
pop
sbb
test
cmp
loop
dec
mov
sub
ljmp
repz
adc
and
in
in
sub
jnp
xor
xchg
pop
xor
cwtl
sub
add
iret
movsl
aam
in
loop
clc
sahf
and
mov
sbb
enter
mov
dec
jnp
pop
xor
xor
cmp
mov
cwtl
lret
cmc
pop
adc
movsb
mov
repz
adc
ljmp
and
and
adc
push
pop
dec
mov
in
iret
ja
sbb
xor
xchg
lds
inc
jecxz
pushf
add
fisttpll
sbb
insl
push
in
add
mov
lret
mov
xor
xor
jnp
sahf
mov
cld
rolb
sub
dec
dec
fisubs
dec
sub
mov
pop
mov
dec
mov
outsl
out
push
jecxz
dec
and
cmc
push
pop
add
pop
sbb
or
pop
push
and
adc
or
lds
jae
adc
jae
jmp
pmullw
pop
sti
les
rcll
sahf
and
movsl
ret
mov
push
add
cmp
enter
xchg
push
lea
mov
mov
addl
dec
jns
ja
jo
loop
rcrl
in
ss
inc
push
mov
mov
pusha
cmp
lret
jecxz
inc
idivb
icebp
decl
ljmp
push
int3
stos
lds
shrl
cmc
or
sbb
cmp
and
stos
xorl
adc
mov
push
int3
idivb
push
jecxz
xlat
test
jns
iret
adc
jnp
jb
fiaddl
cli
jge
inc
inc
cmp
loopne
lods
mov
jge
sub
jge
mov
mov
outsl
enter
pop
lcall
dec
cmp
dec
push
mov
ficompl
pop
jbe
stos
ret
xchg
mov
cmpsl
in
push
repnz
fiaddl
mov
adc
adc
hlt
mov
sbb
add
mov
dec
jae
popf
roll
xor
out
insb
dec
cmp
add
mov
loopne
mov
jbe
push
jne
lahf
pop
dec
shlb
or
lret
sub
xor
rorl
mov
push
push
dec
mov
inc
push
push
adc
clc
dec
xor
sti
aas
xchg
fimuls
cmc
in
mov
pop
dec
mov
inc
je
outsb
sub
cwtl
jp
subl
pop
into
jns
iret
xor
pop
xchg
dec
aad
popa
loop
sbb
push
inc
sub
imull
dec
mov
imul
jo
nop
enter
pop
cmp
lods
adc
jb
mov
ret
and
mov
fimuls
sbb
xchg
test
xchg
add
shll
rol
subl
je
insb
inc
cltd
cmp
popa
dec
jne
mov
int
out
jmp
push
insl
ret
and
mov
call
pop
pop
fwait
addr16
stos
dec
add
add
js
movd
out
data16
out
mov
test
mov
rclb
xor
push
mov
add
jns
ds
aas
pop
xor
rcrl
or
dec
push
mov
add
stos
std
rolb
iret
inc
sub
mov
icebp
or
insl
call
xchg
idiv
push
adc
xor
pop
sub
pushf
or
fxam
jmp
xchg
out
into
push
sub
mov
inc
sub
lea
outsl
pop
cmove
stc
scas
out
aaa
pop
popf
clc
shll
adc
xchg
jbe
cmpsb
rcrl
mov
les
divl
sahf
add
std
xor
pop
or
out
lods
insl
cmp
out
sub
lret
add
or
scas
jno
push
mov
jp
cmpsb
clc
cltd
cli
mov
inc
push
frstor
xchg
jge
cmp
cmc
lds
mov
push
test
ret
popa
cmp
leave
fstpt
inc
xor
dec
adc
xchg
lcall
dec
roll
lea
mov
ret
fisubrs
sbb
fimuls
fistpll
test
sub
xor
cmpsb
js
inc
cmpsl
mov
aam
cmp
push
jecxz
out
pop
aaa
jne
stc
fwait
push
jae
sbb
gs
xchg
ror
ret
aas
push
cld
gs
xchg
adc
outsb
and
xor
add
pushl
or
sub
stos
rcl
ret
neg
imul
loopne
flds
test
push
iret
mov
sbb
imul
jecxz
imul
ss
mov
test
and
test
in
push
add
sub
fsubs
iret
divb
cld
mov
outsl
push
xor
add
lahf
fistps
mov
and
int3
fwait
test
push
add
mov
or
dec
sbb
xchg
mov
xchg
movsl
scas
xlat
lods
cmpsb
f2xm1
ljmp
lahf
mov
mov
mov
push
dec
icebp
inc
mov
and
imul
or
repnz
outsl
dec
sbb
mov
jl
arpl
inc
sti
xlat
sbb
inc
mov
mov
out
inc
xchg
aas
test
jl
fdivrs
mov
push
xor
adc
cli
cmp
pop
xchg
lds
add
std
fstl
cld
stos
fldt
jp
dec
stc
arpl
lea
fwait
mov
pop
fs
ret
inc
sbb
mov
jl
mov
das
mov
dec
out
mov
fdivs
loope
inc
pop
and
jl
or
rorl
ljmp
jecxz
imul
xchg
clc
mov
or
mov
insl
ljmp
and
or
inc
sub
mov
test
add
xor
add
and
xor
add
ret
cmp
mov
mov
rcr
jae
outsl
cmpsb
mov
inc
sub
sub
mov
mov
mov
ret
icebp
inc
loope
dec
sub
das
in
lcall
cmp
sub
xchg
notl
ljmp
imul
pop
xchg
lods
xchg
inc
pop
or
pop
out
data16
add
pop
shrl
adc
in
adc
adc
mov
pop
fldcw
mov
push
push
sub
push
sbb
or
inc
outsl
or
loopne
and
les
es
mov
push
pop
push
xchg
dec
fists
dec
movsl
aas
mov
aas
mov
mov
ret
arpl
mov
les
pusha
sbb
cld
hlt
icebp
cli
cmp
add
add
sbb
int3
in
mov
mov
shrb
mov
fldcw
icebp
in
in
lcall
push
adc
adc
stos
jnp
xor
fmulp
cltd
mov
imul
jno
add
push
mov
jo
aaa
cmpsb
mov
popf
imul
dec
dec
outsl
scas
sub
mov
movsl
xchg
ret
int3
mov
ja
aam
shl
adcb
jg
fldl
std
mov
arpl
popa
aam
pandn
xor
stos
aam
shl
lods
and
std
inc
pop
adc
dec
popf
aad
mov
mov
leave
push
cmp
test
outsb
into
jbe
sarb
xor
jns
jne
sub
cmp
js
push
adc
lods
jl
or
sbb
and
pop
daa
es
cmovne
pop
enter
bound
inc
and
int
pop
inc
in
push
movsb
jae
adc
jno
xlat
sub
adc
cltd
shll
outsb
ror
add
pop
ret
data16
push
hlt
leave
fcomps
mov
pop
lcall
push
push
push
xor
dec
dec
shll
dec
pop
xchg
fstpl
adc
pop
test
jmp
lcall
repz
in
mov
stos
push
mov
xor
insl
shrb
ret
mov
inc
test
les
or
aad
lods
xlat
jo
adc
push
mov
pop
outsb
cmpsl
lret
inc
test
cmp
push
jmp
out
mov
jle
xor
pop
sbb
add
adc
lcall
rolb
and
xor
imul
xor
adc
mov
adc
xchg
icebp
xchg
ret
fisttpl
lcall
push
pop
jle
mov
dec
xor
aaa
dec
jle
mov
pop
xchg
xchg
movsl
rcr
prefetch
or
inc
adc
mov
cmpb
sbb
out
mov
mov
mov
sub
adc
pop
in
lock
test
push
notl
addr16
or
adc
into
push
subb
idiv
adc
mov
cmp
movsb
frstpm(287
dec
xchg
jl
mov
pop
adc
imul
push
movsb
rorl
aam
cmp
lret
std
mov
mov
and
mov
bound
xchg
out
push
mov
mov
mov
scas
pop
js
cld
pushf
xchg
sbb
mov
push
mov
sub
mov
jo
mov
fcompl
pop
rolb
mov
dec
pop
test
and
jecxz
outsl
jl
pushf
inc
cmp
xor
ret
sahf
cmp
xchg
push
popf
xchg
mov
push
cs
dec
cmpsl
pop
in
jl
insl
idiv
add
xchg
insb
outsl
push
cmpsl
pop
xchg
and
cld
and
mov
lods
test
js
aas
sbbb
pop
sbb
push
test
add
mov
sub
repnz
xlat
xchg
jg
cld
loopne
les
clc
mov
mov
scas
mov
data16
out
dec
mov
insl
add
sti
ljmp
lods
and
sti
in
sub
dec
add
rorb
mov
and
mov
dec
ds
stc
cltd
rcll
and
cmp
sub
and
adc
clc
xchg
or
aam
pusha
add
ja
pushf
dec
xchg
mov
mov
sbb
jne
or
mov
xor
add
inc
inc
cmpsb
aam
cmpsl
mov
arpl
jns
xorl
fiaddl
popa
imul
xor
mov
insb
adc
sub
jbe
test
cli
or
lods
xchg
lret
jno
addl
sub
insl
push
sub
sub
mov
pusha
inc
dec
xlat
jmp
pushf
leave
pop
cs
lahf
inc
and
test
pusha
pop
ss
divl
mov
sub
inc
xchg
roll
mov
scas
repnz
inc
mov
adc
movsb
adc
jns
xlat
data16
scas
xor
ror
cwtl
in
gs
mov
xor
aas
outsb
inc
dec
jo
ljmp
push
mov
lods
sarb
jo
mov
aas
adc
adc
xchg
xchg
or
std
sbb
add
stc
mov
dec
int3
dec
xchg
lock
imul
or
xchg
sbb
popa
sti
push
jo
dec
faddl
xor
sub
push
test
mov
pop
push
in
push
push
push
cmpsb
xor
jb
nopl
test
fmul
outsl
jg
mov
je
jae
ret
mov
jno
mov
loop
cs
fs
sub
ds
pop
js
cmpsb
divb
out
loope
and
je
xchg
pushf
cmp
movsb
mov
push
and
fisttps
repnz
push
addr16
push
out
add
xchg
ja
out
aaa
lea
lahf
enter
popfw
push
pop
xorl
aam
outsl
xchg
xor
jns
sub
mov
push
jmp
cmpb
icebp
add
push
loop
shl
ljmp
in
dec
lcall
mov
sub
and
cmp
inc
rcrl
fs
ljmp
xchg
xor
icebp
pop
mov
pop
test
out
cmp
mov
gs
scas
mov
pop
pop
mov
cmp
xor
or
test
push
dec
dec
push
cs
pop
pop
into
cmp
cmp
aas
clc
shl
mov
cwtl
in
inc
dec
ss
sub
shrl
ret
clc
cmp
xor
inc
jns
mov
aam
xor
into
dec
daa
mov
lret
dec
ja
in
fcmovnb
cmp
sbb
add
enter
and
sbb
cwtl
mov
shlb
jo
xor
mov
fistl
mov
add
in
inc
xchg
movsl
or
add
cmp
lret
and
add
mov
cwtl
add
outsl
or
rorl
arpl
stos
mov
ljmp
into
jo
imul
mov
push
aam
mov
jmp
cmp
dec
xchg
cli
push
and
in
ret
dec
sbb
movsl
in
xor
stos
add
ret
sbb
mov
clc
xchg
xchg
jae
fs
mov
pop
gs
push
cmp
mov
mov
mov
pop
sar
xlat
dec
cmp
or
fsubl
dec
stc
je
mov
add
pop
pusha
sar
xchg
fwait
push
out
cs
mov
push
adc
dec
js
inc
mov
push
stos
mov
aaa
push
lea
rolb
jge
sub
xor
push
iret
sub
xchg
pusha
or
out
mov
sub
mov
icebp
jno
pop
jnp
lea
xor
cmpsb
insb
mov
sbb
lds
add
sub
aam
sub
and
push
push
pop
lahf
mov
int
and
push
into
aad
mov
cld
cmpsb
mov
fstpl
imul
sbb
xor
call
fsts
lods
sti
pop
or
push
iret
daa
add
mov
sti
addl
jo
mov
ja
jmp
jbe
mov
stc
cmp
add
int3
mov
popa
dec
xchg
pushf
popf
aaa
mov
subl
mov
push
repnz
adc
cmpsl
sub
dec
sub
mov
mov
or
add
mov
inc
sub
pop
popa
sub
pop
cmp
out
test
sbb
nop
add
inc
inc
mov
sub
mov
insb
jb
jmp
sub
push
sbb
lds
and
xchg
and
testb
push
and
push
sub
popf
sbb
imul
insb
ja
pop
in
enter
push
icebp
je
cmp
adc
ds
pushf
xchg
cmpsl
push
fiadds
sub
aad
cmp
mov
stc
xchg
call
xchg
out
add
lds
lret
out
sub
cmc
imul
inc
aam
inc
dec
int3
aad
mov
movsl
adc
and
mov
test
mov
jl
stos
loop
movsl
cmp
xchg
ficompl
pop
int
adc
sub
pusha
add
jno
aaa
gs
dec
lret
adc
mov
push
sahf
and
out
inc
xchg
test
hlt
pop
divl
repz
shll
or
or
popf
into
lods
inc
sub
jae
pop
mov
or
sbb
or
ret
sbb
xor
jle
pusha
sub
lods
inc
iret
in
mov
in
std
adc
fstl
or
xchg
sbb
dec
pop
dec
or
aas
mov
push
ds
pop
sub
pop
add
cmpsl
insl
test
xor
inc
lret
icebp
sbb
shrb
push
decl
subb
ret
jg
mov
xchg
xchg
sbb
pop
icebp
sarl
adc
stc
sub
stos
fwait
adc
mov
enter
adc
mov
xor
or
mov
lods
push
xchg
sbb
mov
int
xor
jle
push
jecxz
lret
loop
mov
and
xor
cmc
test
lcall
in
std
imul
fidivl
call
add
sub
mov
lock
cmp
lds
pop
add
inc
mov
test
xchg
cli
inc
and
shll
mulb
add
cwtl
dec
repnz
shlb
ja
push
mov
lahf
adc
xorb
inc
add
sub
push
xchg
add
dec
lret
dec
or
mov
mov
les
fistl
push
add
inc
jl
rcrb
and
mov
adc
cmp
mov
mov
sbb
aas
mov
loopne
jg
sbb
rorl
roll
scas
mov
imul
inc
xlat
mov
test
dec
add
xchg
inc
sbb
cmpsb
rol
mov
jno
pushf
mov
into
lret
rorb
loop
cmp
jo
in
lods
inc
jnp
ror
push
cmp
inc
mov
scas
sbb
dec
add
sahf
loopne
loope
out
jmp
pushf
mov
or
outsl
test
cltd
in
jo
push
lahf
es
psubb
xchg
div
adc
mov
scas
mul
sub
or
aas
jle
jl
mov
adc
xor
mov
cltd
js
arpl
adc
test
bound
jno
mov
adc
jns
cltd
in
lret
aaa
int
bound
adc
inc
addl
sub
stc
pop
lret
mov
rolb
mov
dec
xlat
mov
lods
jo
adc
or
or
je
lods
leave
mov
fs
mov
out
je
or
mov
pop
cmp
jp
in
push
adc
cmp
pop
jecxz
arpl
pop
jp
sub
cmp
sub
sbb
incl
repnz
adcl
mov
fdivr
cmc
mov
xor
popf
packuswb
pop
pop
int3
sub
inc
cmp
mov
pop
dec
testl
jmp
repnz
sbb
cmp
cmp
pop
popf
push
iret
mov
sub
leave
addr16
arpl
jp
sub
dec
clc
sbb
xor
aaa
push
rorb
mov
loope
add
cmc
lret
and
popf
clc
mov
pop
repnz
push
out
mov
inc
or
lret
repz
inc
filds
ja
cmpsb
ret
adc
xchg
inc
xor
ds
addr16
in
ja
xchg
xchg
dec
push
mov
popf
add
push
jnp
sbb
mov
mov
outsl
or
sbb
pop
jl
mov
mov
jbe
fs
aad
js
push
xchg
flds
ja
xor
rcll
cmpsb
lcall
push
orl
in
icebp
sahf
faddl
scas
mov
push
add
lods
add
sahf
mov
enter
inc
xchg
cmp
or
inc
sbb
push
ja
jle
in
inc
aam
aam
push
addr16
xchg
out
pop
iret
lret
inc
sbb
outsb
pop
flds
jnp
jns
push
sarb
mov
adc
dec
add
pop
dec
push
fnstcw
loopne
movsl
movsl
and
cld
pop
ret
dec
jle
into
mulb
aas
lcall
xchg
add
cmp
and
push
and
aas
cmp
cmpsb
cmp
fadd
sub
clc
pop
std
repnz
inc
or
insb
shl
or
fiaddl
pop
inc
or
int3
xchg
sub
sub
into
and
out
pushl
scas
or
adc
ljmp
mov
je
inc
and
pushl
inc
rorl
aaa
pushf
push
sub
clc
sbb
or
push
xor
push
movsb
fiaddl
es
shll
lret
mov
out
sbb
mov
mov
jge
adc
pop
sub
jmp
xor
mov
pushf
call
sbb
jg
sbb
fdivrl
inc
xor
inc
dec
xor
aad
or
inc
arpl
stos
adc
movb
sub
dec
int3
data16
pop
xlat
push
sbb
jmp
xor
inc
mov
int3
lds
inc
cmp
jae
inc
insb
xchg
fwait
or
cmp
scas
or
fdivrp
ret
std
add
mov
jecxz
mov
fstpl
repnz
sbb
sbb
jne
sbb
test
int
cmc
ljmp
xchg
push
dec
push
pop
xor
inc
aad
push
dec
push
movb
jmp
add
pop
mov
lcall
popa
fsubl
daa
pop
lea
xor
mov
pop
pop
insb
test
rcl
sub
mov
pop
scas
fs
nop
enter
dec
pop
imul
cmp
scas
ljmp
mov
and
jge
aad
and
mov
hlt
movsb
int
add
imul
subl
mov
es
inc
cmp
jecxz
test
sarb
testl
cmp
mov
std
fwait
jp
mov
add
push
inc
aad
push
loopne
mov
cld
xlat
orb
aas
cwtl
mov
mov
xchg
pop
jbe
and
out
idivb
scas
out
lods
iret
pop
test
dec
lcall
add
out
jae
mov
fisttpll
in
cmpsl
and
sbb
pop
lds
adc
ror
dec
fmul
jnp
ja
ja
les
mov
clc
pop
movsl
adc
bswap
pusha
iret
jle
imul
jne
and
stc
aaa
jae
ficoml
pop
arpl
xor
push
push
paddd
mov
pop
pushf
pop
rorb
sarl
fiaddl
mov
cmp
dec
test
int
popf
pop
test
int3
cmpsl
cs
adc
pop
sub
loope
adc
xchg
test
push
insl
insb
cs
and
mov
ja
adc
xchg
call
mov
xor
and
testl
cmpsl
ljmp
stos
fwait
inc
movsb
inc
add
xchg
sbb
inc
add
jne
push
push
int3
loop
fnsave
sub
ret
movsb
adc
lret
push
outsl
and
jl
ljmp
in
add
mov
inc
cmp
or
cmp
int3
fistpll
cmp
push
xor
cmp
xchg
cmp
dec
aam
mov
clc
add
shrl
push
jmp
loop
mov
and
lret
push
lods
fidivrl
sub
call
and
int
inc
jl
and
jecxz
leave
sub
cltd
jno
das
xchg
in
ss
ljmp
into
popa
lods
lds
lret
xlat
outsb
dec
jmp
and
sbb
jge
icebp
push
ljmp
lcall
sbb
dec
push
and
sub
push
pop
adc
adc
xor
jmp
jne
lahf
mov
push
mov
jmp
jl
jno
out
pushf
sub
sbb
orl
sbb
adc
jo
jb
inc
sbb
sub
cmp
mov
xor
js
push
jg
or
popf
rcr
sub
add
mov
adc
push
mov
sub
fadds
imul
jp
adc
push
adc
mov
or
sbb
aad
repnz
cmp
jl
add
test
ret
into
sbbl
or
dec
jecxz
fsubs
mov
mov
in
fucomip
push
mov
inc
adc
nop
insb
xchg
mov
mov
adc
mov
aad
je
into
xor
fdivs
sub
test
aad
pusha
xlat
sub
cmpsb
add
inc
jle
xchg
sub
jbe
mov
and
mov
scas
lods
lcall
jg
pop
sbb
cmp
push
inc
sahf
roll
cmpsb
out
dec
mov
adc
jae
orb
sub
daa
repnz
jbe
cs
dec
mov
lock
cwtl
push
xchg
dec
testb
cmp
popl
daa
push
xor
dec
push
ds
dec
outsl
inc
sbb
and
ret
leave
int
xchg
enter
scas
xchg
or
xor
stc
jnp
mov
les
test
test
xchg
and
pusha
shrb
pop
rclb
xchg
insl
push
popa
mov
fsubl
into
push
jne
fdivrs
cmp
fldenv
sub
add
mov
and
mov
push
roll
pusha
mov
and
popf
push
xchg
arpl
inc
xor
jl
mov
movsl
icebp
jbe
cli
mov
sarb
jns
sub
fisubs
mov
iret
and
xchg
movsb
loope,pt
ret
mov
in
jbe
mov
and
call
orl
arpl
mov
fwait
jle
dec
outsb
data16
cmp
test
sub
ljmp
mul
ror
leave
sub
mov
pop
addr16
testl
movsl
bound
pop
mov
lds
sub
cmpl
icebp
imul
mov
inc
jecxz
lahf
sub
sarl
and
scas
divb
sbb
push
filds
pop
adc
xchg
sbb
mov
int3
test
pop
and
xchg
imul
lret
xlat
ljmp
inc
sub
loope
adc
or
sub
inc
and
add
ja
cmp
aaa
sub
fcomps
cltd
mov
push
int
add
insl
jecxz
adc
or
dec
mov
int3
pusha
dec
adc
jb
pop
dec
adc
push
leave
jb
cmp
fisttpl
pop
lods
cmp
jg
insl
mov
fisttpl
pop
dec
push
hlt
popa
xchg
rol
push
and
lcall
pushf
mov
enter
mov
rorl
ret
ret
mov
pushf
outsb
cwtl
jecxz
sbb
or
dec
mov
mov
scas
movsb
adc
mov
push
andl
fadds
loopne
dec
or
xor
out
add
sahf
imull
icebp
jo
imul
and
ret
out
cld
jle
loop
jecxz
out
or
cmp
js
xor
jp
xchg
push
subb
pop
je
and
int
sar
in
hlt
pop
lcall
pop
sbb
je
outsb
push
sub
adc
xchg
pushf
sub
incl
mov
jne
xor
jb
ds
and
je
cmp
jmp
ja
in
jae
push
popf
sub
sbb
lcall
xchg
lds
loopne
int3
andb
jae
pop
inc
stos
or
mov
lods
adc
add
pop
clc
shll
and
dec
jae
and
sbbb
xchg
notl
push
sbb
js
imull
js
out
add
pinsrw
lcall
insb
movsb
hlt
dec
rcrl
jmp
jo
cmpsl
cmp
in
ss
push
and
inc
or
pop
mov
orb
movl
and
lods
xchg
insl
push
dec
mov
mov
imul
hlt
dec
sub
shl
mov
push
loopne
insl
pop
and
sbb
dec
inc
rcr
pop
jnp
stos
shlb
in
xor
aad
out
sbb
js
sub
pop
dec
decl
inc
sub
lret
lock
jmp
cld
inc
icebp
test
in
clc
add
gs
ss
shlb
pop
adc
mov
movsl
sbb
add
push
lcall
and
fmull
jmp
cmp
popa
stos
dec
in
dec
popf
insb
or
pop
jge
inc
shrb
fidivrs
lock
inc
mov
push
fdivrp
les
jge
popa
rorb
dec
mov
mov
inc
cmp
or
cmp
in
pusha
movsb
mov
es
sti
fsubrs
jnp
scas
mov
sbb
push
test
scas
jo
std
mov
mov
je
rcrl
mov
sub
stos
jp
popa
repnz
xchg
xor
lret
outsb
test
call
push
cmp
data16
cmp
xchg
and
insl
inc
push
int3
into
add
sbb
and
mov
cmc
bound
lods
out
mov
inc
jmp
cwtl
xor
cs
into
adc
add
dec
iret
out
sub
loopne
enter
pop
mov
pushl
jmp
pop
enter
cmp
out
xchg
vhaddps
cmp
push
mov
cmpsl
lret
xor
shlb
insl
lret
jbe
insl
jo
sbb
sub
pop
out
jb
dec
mov
negb
lock
popf
lcall
jmp
push
pop
scas
xchg
enter
insl
add
sbb
dec
push
icebp
imul
mov
mov
push
add
push
jo
jg
pop
jmp
mov
push
mov
mov
dec
adc
sbb
jecxz
inc
shl
inc
sbb
fistps
push
sub
pushf
iret
mov
mov
outsl
jl
jns
mov
movsl
cmp
cmpb
out
repz
add
fsubr
push
push
xor
cmp
mov
outsb
mov
add
jl
gs
das
adc
xchg
sub
rol
cli
cmc
in
adc
xchg
in
pop
jo
test
xlat
daa
jno
icebp
push
insl
orl
and
orb
inc
outsl
jo
cmp
jp
push
jnp
jae
or
push
jmp
sarl
pop
cmp
movsl
hlt
loop
cmp
push
lret
push
punpckhbw
icebp
add
pop
lret
stos
out
pop
cwtl
repz
stc
inc
push
push
push
xchg
sahf
adc
out
in
sbb
sub
inc
test
mov
cli
imul
cmp
pop
call
xchg
adc
mov
lods
cmp
mov
mull
cmp
int3
jg
mov
jp
and
jnp,pt
cmp
fldenv
ds
jecxz
xchg
mov
pusha
ret
std
mov
sbb
and
cmp
pop
fsubl
idivb
or
testb
sub
jnp
into
or
hlt
je
cmp
jne
xchg
jb
cmc
fldt
mov
dec
cmp
incl
inc
push
mov
rcrb
lret
push
stos
lahf
push
cmp
xchg
dec
sub
mov
mov
insb
lret
popa
push
cmpsl
dec
fstpl
insb
or
sub
test
mov
rolb
jg
push
enter
mov
mov
aad
arpl
dec
rclb
imul
xor
push
pop
push
pop
outsb
mov
pop
pop
adc
adc
jo
repz
or
ficoms
mov
jno
mov
arpl
pop
out
mov
adc
iret
and
adc
sbbb
ja
and
mov
dec
fsubrl
rcrb
shr
aas
arpl
aad
and
shrb
ja
aam
test
jnp
popf
in
pop
cmp
adc
lea
leave
pop
fistpl
dec
icebp
push
jge
lds
inc
pusha
xchg
mov
ds
enter
mov
aaa
imul
add
loop
ljmp
add
jne
push
enter
cmp
insb
mov
inc
xchg
popa
lea
jo
out
fidivs
jnp
cmp
push
mov
pop
mov
add
push
pop
sub
std
and
pushf
cmp
push
mov
sub
or
ljmp
mull
sbb
jge
bound
inc
rep
push
sbb
dec
andb
ret
jg
adc
ss
sahf
imul
fcomps
jne
push
pushl
jle
dec
lods
outsl
inc
jecxz
cmp
or
mov
sbb
xor
pop
subb
hlt
lcall
xor
lds
fwait
stc
les
scas
movsb
ja
inc
in
xchg
int3
sbbl
rorb
pop
adc
out
rcrb
push
mov
xchg
adcb
jo
or
or
bnd
dec
push
pop
push
adc
xlat
outsl
cmp
fwait
push
out
outsb
or
hlt
lods
sbb
les
lods
dec
inc
inc
mov
push
arpl
inc
dec
push
sbb
mov
add
mov
xchg
test
push
cmp
sub
cmc
inc
lret
call
add
sub
hlt
xchg
ss
leave
cmp
in
inc
mov
inc
xchg
dec
pop
or
loopne
mov
test
adc
cmpl
dec
out
add
mov
in
cmp
adc
dec
jo
jle
aas
scas
and
jnp,pt
jmp
mov
aas
fistl
sahf
fst
repnz
pop
insb
xchg
sbb
cld
push
lea
movsb
enter
xor
mov
mov
outsl
repnz
pop
arpl
clc
jg
mov
xor
pushf
inc
scas
fwait
inc
xchg
iret
andb
jno
js
inc
scas
push
mov
jo
inc
nop
or
xor
lods
xchg
sahf
inc
jns
jg
inc
js
call
jle
loopne
add
je
test
jmp
pop
jbe
call
jb
push
cmc
out
push
or
push
sbb
adc
pop
sti
cmpsl
adc
jae
ss
pushw
jle
imul
shlb
out
cmp
mov
sbb
lret
in
inc
mov
sahf
add
push
mov
jns
mov
fsubrs
aad
jae
imulb
pushf
sbb
leave
or
lds
scas
xor
push
movups
jne
pop
pop
into
and
add
mov
inc
pop
jmp
test
xchg
jle
inc
sub
lret
cmpsb
mov
sahf
or
daa
push
aam
mov
push
test
add
dec
jo
or
xor
xorl
mov
fdivr
pop
pop
xchg
mov
daa
out
lds
loopne
push
or
pop
pop
nop
loope
loop
jp
pusha
jnp
rorl
and
rcr
cwtl
or
inc
adc
inc
adc
sbb
sub
in
ret
and
popa
mov
sbb
cltd
or
or
xor
nop
repnz
movsl
jne
or
sbb
outsb
out
scas
cltd
in
fnsave
push
dec
adc
stos
inc
sti
dec
lahf
push
xchg
scas
hlt
addr16
dec
adc
adc
sbb
aam
scas
ljmp
xchg
mov
popf
es
out
imul
cltd
cld
mov
push
jbe
sti
loop
cmp
cmp
rcrl
in
imul
dec
sub
lret
xor
je
in
lcall
cmc
idivb
stc
aaa
push
mov
in
lahf
sbb
adc
fcompl
adc
push
jle
sub
jns
cmp
dec
and
add
cmp
jp
cwtl
sbb
inc
inc
mov
add
cmp
test
mov
sub
mov
mov
nop
cmp
sti
xchg
sbb
out
add
lret
add
add
jae
lds
scas
mov
outsb
sub
sarb
sbb
outsb
stos
add
setp
call
cmp
cmp
mov
cmp
imul
xor
bound
movsl
sbb
inc
or
adc
rcr
or
in
sbb
sub
pushf
cs
stc
sbb
addl
xchg
push
rclb
pop
add
jae
and
mov
mov
aad
jl
mov
sub
in
push
lods
rol
call
mov
js
vpmulhw
aam
aam
repnz
loop
divl
sub
mov
sub
xchg
push
ljmp
xor
xchg
jnp
cmpsl
mov
jno
lret
lahf
hlt
fstps
jnp
out
sub
xorl
push
sub
vshufpd
stos
mov
dec
add
mov
faddl
dec
mov
dec
imul
mov
mov
loope
fwait
popa
pop
scas
jp
in
pop
xchg
fwait
inc
fldenv
mov
sbbb
push
mov
push
pop
xor
inc
sbb
jg
test
pop
aad
mov
dec
ficompl
lods
adc
mov
push
test
cmp
test
mov
adc
xor
adc
jb
push
push
repnz
sub
add
out
push
imul
dec
fcmovnbe
andb
fistpll
cmc
push
xor
jne
gs
xor
cmc
mov
pusha
scas
dec
imul
ror
jp
sub
pop
xor
into
fwait
aam
add
subl
jecxz
inc
mov
cmp
adc
iret
cld
fcmove
aad
lock
jmp
pop
adc
aaa
mov
iret
adcl
vunpcklpd
bound
mov
add
push
pop
pop
outsb
push
jmp
xchg
cli
or
pop
inc
test
leave
add
sbb
insl
cld
xor
rorb
ja
lcall
in
push
daa
and
aaa
cmpsl
or
fistps
pop
je
jg
popa
dec
cmc
and
mov
pop
daa
pop
mov
loop
pop
and
or
sub
in
jp
add
mov
in
and
call
mov
insl
testb
movsb
sbb
and
and
ficompl
sub
pop
jl
test
in
incb
sub
mov
or
insl
gs
outsl
and
scas
iret
xor
lret
dec
out
xchg
jae
cmp
outsb
int3
add
ret
sarl
jl
add
mov
mov
jcxz
outsb
xor
push
and
inc
mov
mov
dec
inc
jle
fcoml
sub
push
inc
outsl
repz
out
push
inc
jo
mov
dec
jno
jmp
test
bound
and
dec
pushl
bound
xor
pop
jbe
out
pop
out
jle
cmp
inc
mov
cmp
aas
lds
repz
dec
pop
or
dec
inc
cld
push
popf
out
mov
add
inc
lock
pop
icebp
sbb
test
cmp
xor
mov
jns
pop
inc
push
iret
ret
lcall
xchg
pop
mov
push
push
jae
fcompl
std
xor
inc
push
inc
fldl
adc
lds
iret
push
inc
jb
mov
dec
pop
cli
cltd
cltd
insb
insl
sahf
push
sbb
mov
add
sub
in
add
jns
movsb
push
mov
xor
mov
sbb
push
shrb
icebp
and
or
xchg
lret
lock
loope
stos
shrb
add
adc
loopne
mov
lret
call
pop
adc
orl
jnp
xor
or
dec
aam
and
out
xor
imul
sbb
cli
jno
sbbb
roll
popa
cmp
insl
in
push
lret
and
pusha
or
dec
adcl
or
dec
mov
in
lock
xor
call
sbb
mov
test
dec
xchg
cmp
rcrl
cmp
push
bound
repz
in
shll
xor
mov
lds
sbb
aad
jmp
cmp
nop
in
daa
or
cld
stc
pop
aad
or
jl
xlat
or
aad
cs
and
mov
rcrl
dec
fwait
dec
lcall
cmp
int
jo
adc
inc
and
or
scas
cmp
cmc
or
jp
adc
mov
daa
pop
je
jecxz
add
cli
pusha
je
cwtl
pop
in
xchg
insl
adc
xor
cmp
dec
dec
mov
div
adc
jne
rclb
lods
mov
and
orb
cmpsl
dec
jmp
lret
subb
add
dec
std
lds
daa
jmp
lods
xor
ja
je
iret
adc
aam
push
gs
lock
dec
xor
xchg
mov
adc
inc
in
mov
fldl
int3
js
fisubrl
imul
jne
and
jl
fbstp
movsb
adc
rcl
push
sbb
cwtl
hlt
sbb
fcoml
and
ror
adcl
hlt
and
xchg
mov
dec
outsb
dec
dec
repz
xor
icebp
or
cmpsl
push
dec
rorl
fistpl
leave
push
adc
imul
mov
push
les
rcrb
cmp
mov
push
xchg
mov
mov
popf
repnz
xchg
push
add
loope
jae
mov
clc
sub
pop
addb
dec
pop
pop
ds
cltd
aaa
mov
lods
inc
out
jp
xchg
rorb
insl
xor
jb
sub
pop
pop
stc
aas
lcall
cmp
mov
xchg
push
adc
fwait
dec
inc
mov
xchg
scas
push
repnz
ja
xorl
pop
movsb
std
or
pop
mov
sbb
push
and
inc
xchg
adc
xchg
sub
fcompl
fwait
lods
mov
xor
sub
stc
stos
mov
xor
jg
jo
idivl
outsb
in
outsl
test
xchg
lock
pop
dec
out
out
sub
mov
xchg
scas
pop
lods
dec
cmp
jbe
daa
gs
mov
std
scas
movsl
pop
jecxz
xchg
dec
aas
iret
test
pusha
rcrb
sahf
mov
pop
inc
sbb
popf
pop
or
cmpsb
movsl
sbb
aas
fwait
push
aam
jp
icebp
push
mov
sbb
xor
mov
cmp
xlat
mov
std
pop
lret
shl
mov
mov
lahf
dec
xor
and
xchg
jg
sahf
xor
sbb
xor
mov
mov
xchg
jne
xchg
push
shll
push
enter
shll
addl
jmp
and
push
inc
push
pop
test
cld
push
lret
or
lds
mov
xchg
add
sub
sbb
fwait
or
fistpl
xchg
icebp
mov
sbb
cs
and
push
repnz
jmp
pop
jge
ds
or
cld
push
fistps
cwtl
aad
ja
stos
jbe
dec
inc
fldenv
test
pop
dec
ficomps
adc
xchg
adc
inc
sub
jp
adc
ss
sbb
push
arpl
jno
jo
rcll
lds
adc
ljmp
gs
adc
lock
mov
pushl
fdiv
popf
call
sbb
jns
aad
push
dec
push
pop
enter
ss
mov
xchg
pushf
bound
mov
cmp
jl
and
repnz
mov
dec
rep
mov
scas
xchg
in
xchg
adc
mov
stc
cmc
pop
sub
fucom
iret
in
inc
decb
fstl
push
adc
mov
nop
add
in
iret
pop
loope
ljmp
mov
decb
das
es
or
in
fdivr
xor
lds
add
popl
mov
inc
in
lcall
inc
fadds
movsl
or
mov
daa
dec
lahf
icebp
push
repz
sub
jno
sahf
sub
fwait
lock
scas
sbb
sub
jb
popa
add
cmpsb
add
and
pop
mov
bound
jno
std
stos
or
rclb
out
in
and
sbb
shlb
pop
push
xor
pushl
and
mov
and
leave
jp
cmpsb
cwtl
out
jmp
jg
gs
push
and
xchg
add
push
out
jecxz
cli
adc
push
sarl
dec
imul
sahf
inc
scas
mov
mov
rorb
call
les
inc
bound
or
imul
aad
stc
ljmp
leave
dec
sbbl
cltd
rolb
lcall
xchg
ljmp
rcrl
and
cmp
dec
daa
push
xchg
jecxz
dec
js
out
pop
jmp
movsb
scas
sub
lock
and
mov
xor
sbb
aad
add
sub
pop
ljmp
stos
sbb
ret
ret
mov
mov
xchg
cs
and
sub
xchg
rorl
scas
repnz
fwait
fs
fdivrs
mov
mov
sbb
push
in
repnz
ja
inc
adc
mov
and
pop
mov
jle
jmp
ss
fnsave
sbb
adc
std
js
stc
pop
push
jnp
xchg
sarb
jno
lock
mov
jae
mov
pop
or
test
mov
test
iret
sub
cmc
sub
icebp
xor
jno
push
jmp
cs
loope
andb
push
and
lcall
dec
nop
mov
push
jle
xor
sbb
aaa
sub
mov
cli
pusha
divl
mov
aam
mov
hlt
mov
imul
adc
push
roll
mov
cmp
cltd
add
add
jl
fwait
out
or
add
xlat
in
or
fdivs
pop
les
dec
std
fwait
dec
andl
inc
jo
add
scas
es
ret
push
add
xor
cmp
dec
mov
or
popf
sbb
pushf
mov
mov
addb
mov
sub
cmp
mov
push
flds
loopne
addl
xor
sub
cmpsl
addr16
jmp
in
es
pop
adc
xor
mov
out
movsl
lock
cs
xchg
pop
xor
shll
iret
loope
ret
arpl
cmp
ds
lret
pop
ljmp
adc
mov
nop
test
xchg
and
and
add
dec
and
fs
push
lods
ficompl
mov
aaa
fcoms
xor
shll
fsub
insb
mov
and
orb
mov
das
mov
aas
inc
or
aam
inc
mov
add
out
sub
mov
push
mov
push
pop
dec
and
shl
adc
stos
lret
cmp
or
jno
and
test
mov
movsb
cmc
jmp
xlat
mov
movsb
outsb
mov
nop
cmp
sbb
sbb
mov
ret
loope
cs
bound
jmp
in
mov
jle
mov
cmp
mov
mov
idivl
inc
cmp
push
or
dec
pop
jle
xor
dec
jg
scas
lret
sbb
div
fcomi
fxch
dec
sbb
push
test
and
sbb
cltd
pop
stos
push
out
clc
or
sar
jp
sub
repnz
imul
out
xchg
xor
mov
inc
push
pop
mov
fwait
shlb
test
mov
adc
shrl
cmp
mov
sub
cltd
cld
daa
out
aaa
out
or
imul
testl
jmp
or
fwait
sarb
mov
adc
push
dec
fistpll
xchg
xchg
sbb
scas
jne
hlt
loop
jge
mov
movsb
xchg
sbb
push
sbb
push
dec
push
push
sub
sub
lcall
faddl
mov
inc
add
mov
outsb
fcom
jecxz
hlt
jg
jae
add
lcall
mov
rolb
bt
push
repz
psrad
pop
adc
ret
push
push
sbb
leavew
lcall
into
adc
movsb
inc
add
sti
call
dec
rcrb
push
cmp
movsb
dec
ret
sbb
fcoml
pushf
mov
inc
imul
add
in
push
xor
adc
pushf
sub
outsb
shll
sub
loope
rcrb
aam
cld
fistps
in
lock
sbb
movsl
inc
push
lods
xchg
adc
movsb
dec
fisttpll
dec
pop
mov
ficompl
mov
std
lea
mov
mov
loope
mov
adc
sub
mov
movsb
int
pop
lods
add
push
daa
es
mov
mov
mov
jg
push
loopne
std
out
xchg
std
dec
rolb
adc
push
and
sbb
dec
pop
das
cmc
jg
int
fstpl
leave
xchg
sbb
adc
cltd
test
sahf
xchg
fistpll
and
outsl
daa
mov
je,pn
nop
hlt
add
cld
je
xor
mov
sub
aad
lcall
je
cmp
and
mov
jne
jp
movsb
add
dec
jle
cli
sbbb
out
push
and
mov
data16
dec
int3
shll
jne
test
mov
adc
add
je
cmc
xchg
xchg
jle
fnstcw
mov
movsl
std
das
arpl
push
lcall
pop
lahf
jmp
mov
or
lods
std
xchg
sub
xchg
into
scas
dec
addr16
xlat
inc
jecxz
cmp
push
mov
dec
jae
bound
ret
ret
push
loopne
gs
test
lods
cld
inc
adc
andl
ds
cmc
mov
mov
sub
out
sub
out
shl
sub
cmp
nop
adc
mov
repnz
fs
sarb
and
mov
in
imul
sbb
mov
fs
insb
in
xor
in
xchg
mov
les
ficoml
xlat
mov
pop
aas
repz
cwtl
mov
mov
dec
out
adc
inc
pop
fnstenv
sub
subl
test
aad
lea
inc
xchg
jle
out
cwtl
cmp
insl
dec
test
xor
rorl
lcall
mov
cmpsb
adc
in
inc
and
loope
adc
into
test
lret
pop
mov
xchg
jge
pusha
mov
xchg
fwait
mov
fistpll
xchg
mov
adc
pop
fdivs
sub
sbb
mov
cmpsb
xchg
push
dec
mov
adc
lcall
outsl
mov
mov
popa
in
sub
mov
mov
mov
and
pop
jecxz
nop
mov
lea
fsubp
jl
push
stc
out
inc
and
outsl
orl
xchg
adc
fidivrl
hlt
clc
jle
or
dec
ds
cmpsl
mov
mov
pop
gs
dec
sbb
push
imull
popf
mov
inc
fmul
lods
inc
pop
xor
push
or
popf
rorl
xor
repz
mov
adc
cmpb
loope
pop
push
add
arpl
mov
repz
or
or
adc
dec
dec
scas
cmp
lcall
movsb
mov
jno
je
loopne
xchg
out
cli
add
out
xchg
add
mov
andl
dec
mov
mov
das
pop
jmp
cmp
xor
cmp
testl
mov
movsb
or
mov
push
jno
add
rcll
or
je
mov
cld
mov
stos
pop
leave
loope
test
aam
push
mov
jnp
in
xor
ja
add
mov
sub
jno
add
add
insb
test
dec
mov
pop
pop
jbe
sub
jg
mov
in
mov
bound
les
and
aad
xchg
fdivs
xchg
mov
popa
push
or
cmpsb
adc
hlt
sub
push
mov
fildl
pop
mov
aas
push
aad
jae
cmp
sbb
or
adcb
outsl
adc
adc
push
xchg
cmpsl
fnstenv
fmuls
sub
cltd
fs
xchg
jecxz
bswap
jecxz
dec
stc
cwtl
adc
subb
mov
cwtl
and
and
lret
sub
sbb
mov
addr16
repnz
in
mov
pop
out
shr
jge
test
cmpsb
jg
mov
xchg
outsl
pop
inc
fnstsw
lods
ljmp
hlt
orw
mov
xchg
sahf
sahf
adc
cmp
aam
or
daa
ficomps
jge
test
ljmp
add
or
lahf
inc
mov
outsb
and
lods
xor
pop
xchg
in
movsb
sbb
test
cld
pop
outsb
iret
les
xchg
shrb
js
ljmp
mov
xchg
dec
jecxz
pushf
pop
sbb
neg
in
mov
cmpsb
fdivrl
cli
loop
enter
fs
repnz
cmp
lds
ja
popa
lods
divb
inc
push
divl
aad
sti
roll
pusha
sub
aad
pop
pushf
push
popf
cltd
or
hlt
pop
inc
in
loope
dec
repnz
mov
dec
call
add
in
test
jge
pop
repnz
mov
mov
cmpl
push
cmc
inc
in
loope
mov
dec
sbb
jecxz
sbb
mov
mov
jb
dec
js
enter
xchg
std
popf
shlb
sub
lret
out
test
inc
jle
hlt
and
or
sbb
decb
push
mov
ja
xchg
fnstsw
arpl
dec
xor
or
sub
das
ja
lcall
aam
xlat
loop
push
ds
roll
pop
push
and
mov
push
inc
jmp
sbb
sarl
ds
jb
lock
dec
loop
xchg
sbb
leave
std
test
leave
cmp
dec
inc
jns
sub
jne
lret
imul
or
je
lea
out
push
xchg
into
inc
sbb
push
xchg
dec
jp
bound
push
mov
push
lds
pusha
out
into
test
pop
cld
or
lea
call
dec
sub
repnz
int
ret
lret
or
test
pop
pushf
je
js
mov
movb
mov
push
sbb
test
cmp
sbb
and
dec
push
cmc
outsl
in
repz
stos
xchg
loope
mov
mov
dec
mull
out
cmp
out
push
pop
jmp
iret
cmp
adc
mov
jae
add
cmp
out
mov
mov
orb
push
sahf
and
inc
pop
ja
adc
rorb
pushf
mov
cld
xchg
jmp
imul
das
lret
inc
loope
mov
mov
pop
sbb
int
and
xor
fwait
sbb
xor
jl
mov
mov
xchg
int3
jle
mov
jmp
sbb
pop
ret
sarl
dec
adc
pop
sbb
cmp
push
add
sbb
lcall
imul
out
jo
mov
mov
test
insb
cmp
inc
ret
fwait
jg
and
addr16
rcll
push
and
add
das
mov
mov
add
jae
pop
in
inc
stc
outsb
xor
jmp
push
xor
pop
dec
adc
push
and
inc
lret
jge
sti
rorb
lcall
pop
pop
hlt
nop
sbb
pusha
sbb
cmpb
push
leave
xor
imul
adc
mov
push
lahf
sbb
out
adc
dec
fsts
mov
jns
in
mov
push
pusha
adc
out
jnp
dec
popf
andb
or
and
mov
or
mov
jbe
mov
test
div
and
out
ss
push
addr16
lock
nop
rolb
imull
jnp
mov
mov
mov
dec
dec
ds
divb
push
mov
inc
loope
push
aam
jg
jnp
and
add
and
icebp
out
in
mov
push
xchg
stos
pop
fcomi
push
ret
cmp
or
cltd
mov
out
dec
mov
jno
mov
cmp
rcrl
pusha
pop
cmp
gs
mov
xchg
out
iret
lea
sti
cmp
and
sub
lods
sbb
popf
mov
jno
jge
ret
mov
xorl
cltd
inc
lods
pushf
imulb
cmp
test
sahf
push
popa
in
cmp
and
mov
adc
push
xor
cmp
or
addl
cltd
stc
imul
mov
xlat
sbbb
sbb
and
mov
shr
add
or
cmp
mov
sub
jne
jns
cmp
jb
mov
jae
popf
insl
cmc
bound
inc
jl
mov
shrl
mov
icebp
sbb
sub
inc
push
aad
mov
out
inc
mov
ss
and
ret
jmp
cmpb
adc
mov
sbb
rcrl
sub
adc
add
mov
add
cltd
out
enter
cmpsb
enter
addl
add
sahf
nop
mov
jnp
loope
xlat
inc
clc
daa
test
inc
in
vpsrld
xor
pusha
movsl
or
test
xchg
test
insl
sub
imul
fwait
and
in
loop
dec
daa
std
pop
xchg
ds
mov
mov
or
jmp
add
sub
stos
or
aam
stc
cmp
lods
xchg
cld
rclb
cmp
jg
sti
lods
cmpb
int3
outsl
mov
mov
fwait
xorb
daa
mov
lret
cmp
mov
sub
inc
pop
imul
out
mov
dec
rorl
cmpsb
sbb
das
fs
mov
mov
add
mov
fldl2t
or
or
icebp
out
in
fucom
cli
fnstcw
lcall
pop
sbb
pop
mov
ja
ret
movsl
cmp
pop
jp
inc
jmp
xchg
cmp
mov
push
aas
inc
addr16
fwait
outsl
aam
ja
xlat
cmpsl
or
stos
fldcw
push
dec
icebp
jnp
mov
mov
clc
ja
xchg
gs
mov
and
or
pusha
mov
jne
and
dec
stos
mov
fcom
xchg
and
xchg
push
imul
xor
out
xchg
add
imul
stos
mov
add
jge
dec
jecxz
xor
lahf
xor
cmpb
jmp
das
hlt
xchg
nop
adc
dec
and
push
ret
lea
mulb
jno
mov
push
lret
iret
push
nop
dec
mov
sub
stos
testb
pop
fld
inc
mov
xchg
mov
movsl
rorl
pop
mov
mov
ljmp
mov
hlt
out
enter
push
sahf
mov
gs
pushf
es
fists
xchg
in
scas
jle
mov
inc
dec
cmpl
or
jb
mov
or
inc
mov
daa
dec
es
fistpll
xchg
jae
out
inc
jle
pop
mov
cmp
jmp
fwait
dec
sahf
sbb
pop
push
cld
mov
mov
clc
fstp
fisttpl
in
in
mov
dec
mov
mov
push
out
xchg
pop
jns
mov
xchg
test
ds
cli
dec
xor
pop
das
pusha
dec
dec
cli
jl
xor
fcmovnb
cs
push
cmp
rcll
adc
pop
insl
mov
inc
mov
mov
cmc
mov
ret
mov
enter
jp
int3
lds
aaa
xor
in
inc
and
mov
jl
ror
xor
insb
fcmovb
lock
call
gs
and
push
test
dec
mov
mov
mov
pop
outsl
fisttpl
orb
rolb
in
pop
shll
jle
pmulhuw
pop
icebp
pop
push
repnz
iret
adc
xchg
cltd
cmp
mov
jg
leave
mov
xchg
fmul
mov
adc
pop
daa
push
inc
sbb
inc
shrb
sub
pop
lea
push
add
xchg
mov
push
stos
mov
adc
sbb
mul
cmp
jle
ret
jo
fcoms
mov
inc
nop
out
call
repnz
in
inc
cli
jns
ja
pusha
push
mov
xor
push
xchg
dec
push
add
cmp
cltd
sub
clc
pop
jns
mov
shll
xchg
ljmp
mov
daa
jnp
fidivs
xchg
ret
mov
adc
mov
stos
dec
dec
or
mov
xchg
mov
daa
outsl
xor
out
and
test
lcall
aam
divl
sub
sbb
shlb
mov
xchg
xor
mov
inc
mov
pop
xchg
and
xor
cli
ds
stos
aad
int
iret
mov
mov
push
notl
pop
pop
jno
push
pop
movsb
es
ss
mov
lcall
loope
aam
mov
pop
pop
mov
pop
and
xor
cmp
push
sbb
lods
js
pop
jbe
add
cmp
cmp
mov
rcll
jns
imul
test
mov
mov
mov
outsb
sbb
iret
inc
aas
lcall
push
push
sub
dec
sbb
adc
roll
gs
test
jmp
das
cmp
or
lret
test
pop
mov
aam
mov
cmp
adc
aas
dec
jp
fwait
inc
mov
wbinvd
pushf
xor
and
scas
scas
sahf
push
sbb
mov
sbb
rcl
pop
decl
lock
ja
in
adc
test
mov
hlt
movsb
mov
jmp
inc
jmp
xor
jle
jb
loope
xchg
lock
jbe
arpl
xlat
mov
dec
mov
or
sbb
cld
lea
dec
inc
iret
aad
stos
lret
fcomi
sbb
dec
andb
lahf
and
daa
addb
inc
jmp
aas
insb
jge
sub
inc
xor
loope
fmull
mov
ror
and
add
outsl
and
jg
std
mov
push
xchg
ss
dec
sub
mov
or
mov
in
pop
or
scas
mov
xchg
dec
xchg
dec
dec
mov
dec
movsb
and
mov
dec
cld
ss
xchg
popf
xor
in
sub
pop
mov
fdivrl
sbb
mov
adc
sbb
stc
popa
aad
jge
fs
sub
das
mov
ss
repz
into
not
int
add
sub
mov
jo
xchg
adc
mov
loop
jne
xor
aam
xchg
data16
xor
and
mov
sbb
sbb
push
and
sub
and
rolb
stos
fimull
fidivrl
add
mov
insb
mov
push
outsl
push
js
pop
add
lret
sbb
cli
sbb
pop
ds
xchg
jg
jns
imul
mov
jns
cmp
add
cltd
push
push
inc
pop
pop
sarl
popa
ret
test
into
loop
aas
imul
ss
int
inc
or
call
push
sbb
shll
dec
pop
xorb
or
jns
ficoms
adc
pop
or
and
push
cwtl
push
popa
xchg
in
sahf
mov
ja
cmpsl
pop
push
xchg
add
cwtl
in
and
dec
fldl
jg
in
sub
jmp
iret
inc
inc
add
add
mov
mov
ds
stos
cmpsb
clc
cmp
xchg
inc
xor
es
mov
bound
ror
dec
movsb
inc
mov
js
rorb
into
shlb
sbb
jae
aam
inc
movsl
cmp
adc
ficoms
ljmp
pop
jb
into
and
test
sub
add
sub
add
push
mov
or
cmpsb
inc
sub
ret
push
jns
outsl
dec
lcall
int3
mov
xor
or
pop
test
into
xor
rol
jecxz
mov
fildl
and
mov
lcall
jno
xchg
fildll
cld
sub
dec
add
test
test
ret
adc
insl
inc
mov
pop
fisubrl
sub
in
mov
inc
sub
and
mov
fs
or
jb
lds
sbb
cmc
adc
mov
pushf
xchg
stc
mov
mov
cmc
sub
sbb
push
push
xor
in
jbe
jbe
and
push
cmp
mov
and
cli
xchg
cmp
insl
call
xor
dec
pop
test
push
dec
mov
test
stos
add
adc
mov
imul
repz
int
push
cmp
add
add
add
pop
insb
rclb
cltd
mov
push
cmp
mov
add
fldt
in
lahf
out
mov
int
in
lahf
and
cmpsl
imul
into
sti
sbbb
add
hlt
or
out
sub
dec
dec
out
insb
add
inc
sahf
jle
std
in
xchg
mov
jne
jmp
ret
pop
mov
sti
dec
les
jae
pop
frstor
mov
jecxz
jp
roll
jecxz
or
js
lret
aas
sbbb
jl
mov
mov
hlt
and
sbb
std
adc
inc
cltd
or
dec
mov
lcall
lret
inc
mov
sbb
sub
cld
add
or
in
inc
mov
cmc
in
mov
lret
xchg
subb
xchg
push
xchg
int
and
xchg
stos
icebp
into
stos
repnz
lds
iret
add
jge
div
jl
inc
mov
pop
fsub
dec
cmp
inc
xchg
or
and
inc
pop
jecxz
loopne
and
int
sbbl
and
out
dec
mov
push
fcoms
xchg
lret
or
sub
int
lods
in
mov
call
push
and
mov
inc
ljmp
outsb
jecxz
pop
les
mov
dec
xor
inc
push
test
mov
cmp
test
popf
sub
repz
mov
pop
pop
sub
sbb
pop
hlt
bound
jne
ja
call
lods
cld
jb
mov
incb
repnz
or
pop
das
imul
mov
inc
mov
out
jae
xchg
push
inc
sbb
das
dec
enter
xor
aas
insb
lock
dec
fwait
and
mov
shlb
xchg
jle
xchg
sbb
decl
stc
test
push
xlat
ret
pop
push
lcall
sti
fildl
stos
frstor
pop
ret
pop
inc
ljmp
loop
adc
and
icebp
or
incl
psadbw
cmp
cli
or
ret
idivl
xor
jmp
sub
mov
mov
lock
jbe
imul
cmpsl
lahf
push
popa
popf
fs
jmp
outsl
subl
pop
adc
adc
sbb
ss
push
lret
outsl
fwait
in
mov
push
lds
int
lret
movsl
movsb
mov
or
aad
in
je
hlt
hlt
mov
jge
lods
mov
mov
cmp
mov
mov
in
pusha
popf
pop
repz
dec
outsl
pop
mov
xchg
adc
jle
xchg
in
sub
xor
imul
das
push
cmp
outsl
loopne
ljmp
and
jl
pop
mov
or
lret
out
push
data16
mov
dec
cmpsl
xor
adc
add
in
fs
sbb
pop
in
outsb
stos
and
sub
test
cmp
ljmp
or
sti
cs
ds
aas
decl
xor
in
icebp
adcb
je
outsl
push
inc
rclb
ds
mov
fs
mov
or
or
adc
icebp
repnz
stc
adc
adc
sub
arpl
mov
add
pop
daa
cmpl
testb
fidivl
xchg
push
dec
in
sub
mov
sbb
inc
jns
and
xchg
shl
xchg
sbb
push
rclb
ljmp
mov
add
pop
clc
cwtl
xor
and
pop
mov
int3
imul
mov
jg
push
rcll
inc
jnp
mov
inc
jb
jne
mov
stos
mov
flds
fidivl
and
es
movsb
aam
jnp
imull
lods
iret
loop
sub
pop
xchg
insl
xor
add
add
push
addr16
outsb
lods
mov
dec
rol
xor
xchg
hlt
jne
fldcw
lea
push
int3
stos
ja
maskmovq
divl
jg
and
jle
and
xorl
mov
lcall
loopne
xchg
dec
inc
out
pop
gs
int3
dec
xor
adc
aas
mov
cwtl
mov
or
loop
lret
inc
insl
push
jns
sub
add
lret
cmpb
mov
mov
lret
rep
xor
pop
call
push
out
int3
ja
mov
inc
cli
mov
adcl
mov
les
mov
inc
lds
sahf
jecxz
xor
adc
adc
clc
push
jae
push
int
out
loope
call
cmp
inc
push
push
add
notl
insl
pushf
xchg
mov
jg
jp
js
rolb
outsl
scas
and
rorl
pop
pop
fnop
or
icebp
cmc
and
and
pop
cmp
pop
push
cltd
loop
pusha
add
sarb
fnstsw
or
inc
jp
mov
cmp
push
push
xor
jb
data16
mov
xor
mov
mov
lcall
push
pop
sti
adc
xchg
outsb
jo
mov
addr16
cld
push
sbb
rcll
stos
adc
mov
sub
and
jl
hlt
test
and
xor
inc
lods
mov
dec
push
push
imull
pop
lds
mov
mov
mov
adc
gs
clc
mov
loop
std
push
shrb
mov
jae
add
dec
xor
ja
or
mov
jmp
mov
sti
cmp
andb
cmove
xor
sbbl
inc
leave
mov
lahf
push
repz
xor
stos
movsb
cmp
jmp
sbb
jecxz
add
mov
jmp
or
rcr
lcall
or
cs
push
insb
js
push
mov
add
in
push
adc
je
or
jb
jmp
dec
repnz
adc
or
ret
ja
ficomps
xchg
sub
sub
lods
sarb
iret
push
adc
test
lahf
inc
lret
out
sahf
jb
dec
cmc
sbb
aad
cmpsl
movsb
mov
mov
lock
repnz
mov
mov
cmpsl
out
sbb
dec
sbb
ret
cmp
push
sahf
and
popl
sbb
mov
pop
push
push
push
call
xchg
int
subb
pushf
lock
mov
stos
mov
add
mov
fldcw
inc
push
in
adc
es
xchg
cmc
repz
movsl
pop
fcmovne
gs
adc
int
pushf
stos
adc
and
in
lods
sub
std
xchg
inc
movsl
cmp
sbb
ret
clc
mov
and
andb
movsl
sbbb
adc
mov
sub
xor
cmp
jp
jb
and
xor
or
repz
mov
jne
aaa
push
sub
pusha
lods
pop
bound
cmp
pop
loopne
xchg
out
inc
mov
jmp
loop
cld
sahf
jmp
and
jne
cmp
ud2
outsb
pop
pop
pop
push
insb
fisttpll
jo
movsl
and
dec
push
jmp
sub
mov
xor
mov
outsl
addr16
negb
or
lds
fwait
es
loopne
stc
pop
pop
rcll
dec
dec
or
inc
stc
jecxz
adc
js
add
sbb
push
mov
insb
loop
andl
jg,pt
mov
adcl
push
cmp
mov
mov
mov
cltd
xchg
fimuls
inc
int3
jle
repnz
loope
jmp
cli
into
jbe
push
jae
cli
sbb
outsb
ljmp
or
and
mov
shl
push
pop
add
lods
and
cmpsb
fsts
pop
mov
test
nop
add
sub
jle
outsb
push
scas
xor
or
aaa
mov
mov
jge
adc
inc
xchg
sub
and
inc
out
lods
pusha
lahf
sbbl
pop
mov
sar
mov
sbb
jecxz
jg
cli
ljmp
inc
sub
ret
mov
in
pop
or
mov
mov
dec
push
cmp
daa
test
ds
mov
out
dec
mov
cwtl
dec
pop
fildl
mov
cwtl
js
ljmp
xchg
xor
notl
sub
mov
mov
mov
stc
sub
ror
xor
sub
sbb
aam
mov
push
mov
ss
xchg
fwait
test
dec
xchg
incb
lods
out
subl
ret
in
test
aam
push
jno
mov
repnz
inc
cmp
push
ja
and
push
jecxz
clc
xchg
pop
outsl
rcl
sti
sub
int
call
sahf
jno
mov
adc
sub
cltd
dec
push
xor
cmp
leave
xchg
mov
lcall
push
or
cmp
repnz
inc
mov
jno
test
cmpsb
sub
dec
cmp
mov
mov
xchg
push
lods
sub
pop
dec
test
in
add
mov
push
loope
and
outsl
popf
push
fldl
adc
lcall
sub
pop
call
stos
sub
mov
pop
sarb
pop
dec
inc
mov
js
add
push
imul
pop
or
push
jge
iret
pusha
jno
enter
xchg
arpl
xchg
cmc
add
mov
xchg
int
mov
inc
ljmp
xchg
adc
pushf
pop
or
sub
sar
add
xor
cmp
dec
mov
sbbb
xorl
adc
pop
add
in
je
into
lods
fidivs
xchg
dec
cmp
mov
dec
mov
imul
and
mov
pop
push
stc
addr16
adc
repz
pop
sarl
imul
fs
ret
pusha
lret
mov
xlat
xor
stos
push
add
xor
pop
movsb
imul
xchg
cmpsl
xor
mov
or
dec
int3
sub
dec
push
sub
outsl
mov
sub
cmp
add
push
neg
dec
sbb
rorl
mov
or
roll
sbb
jae
adc
subb
or
stos
leave
mov
xchg
jne
jl
hlt
ljmp
hlt
fwait
sbb
hlt
mov
jnp
pop
pop
in
jnp
pushf
leave
and
pop
icebp
jae
and
jae
shrl
movsb
mov
xlat
sti
icebp
sbb
dec
add
inc
xor
push
gs
lahf
ss
or
jne
mov
xchg
and
jl
dec
inc
mov
dec
clc
sub
in
cmp
pop
clc
add
jl
pop
xchg
jne
sub
xor
mov
sti
push
add
pop
mov
je
andb
es
loopne
inc
add
adc
pop
push
ja
pop
jne
mov
jbe
push
ret
xchg
push
pop
cwtl
ja
cmp
cmp
in
roll
pop
jl
dec
cmp
cmpsb
sbb
or
xchg
mov
mov
in
jne
pop
mov
loope
or
pop
xor
pop
dec
sbb
aaa
add
std
xorb
mov
mov
aad
mov
mov
test
jecxz
inc
hlt
std
imul
jecxz
std
shrl
loopne
inc
and
test
add
jb
sub
pop
ds
repz
sbb
xchg
test
adc
jge
lret
and
addr16
jmp
jle
mov
incb
add
mov
dec
jmp
cli
pop
fmull
cmp
in
inc
push
sahf
inc
or
cld
mov
jbe
fldl
popf
jmp
aaa
cltd
xor
adc
shlb
incb
mov
xlat
cmp
adc
fistpl
mov
adc
push
popa
aas
cltd
and
adc
pop
roll
orb
adc
jp
pop
adc
ds
arpl
pop
icebp
cmc
cmp
arpl
stos
sub
push
push
sbb
pop
aad
lds
xor
sub
dec
adc
or
or
sub
loope
jbe
xor
cmpsb
repz
dec
dec
test
xor
jmp
rclb
sub
jns
cmpsl
imul
xchg
in
xchg
add
mov
xlat
xchg
pop
insb
xchg
push
jg
inc
xor
das
add
cmc
lods
dec
inc
dec
idivl
dec
popf
lds
ds
pop
cli
and
into
pop
js
cmp
xor
sarl
loope
in
mov
jecxz
xor
popf
mov
out
mov
pop
ja
aad
repz
jge
sbb
mov
out
jmp
mov
mov
xchg
jb
fcom
es
sub
adc
aad
lahf
xor
and
adc
mov
adc
mov
push
loop
lods
xchg
add
icebp
inc
lea
test
lahf
cmc
out
jno
jo
push
aas
pushf
xor
out
xor
lea
imul
nop
cmpsb
fistl
in
dec
out
mov
xor
pop
pop
push
jp
orb
dec
js
jmp
xchg
and
dec
das
orb
je
daa
add
add
push
cmp
add
sbb
ret
xchg
enter
jge
cmpsb
inc
mov
fstpl
shrb
les
arpl
hlt
add
dec
and
inc
enter
ret
sbb
fildl
xchg
mov
push
or
push
inc
js
mov
jmp
lds
ret
mov
mov
push
outsb
pop
cli
jmp
and
jmp
cmp
scas
arpl
dec
cmp
out
mov
dec
retw
xor
sbb
xchg
clc
or
mov
sub
push
inc
fs
push
pop
je
mov
sub
lret
sbb
stos
xchg
mov
push
sbbl
jnp
jmp
sub
jns
shll
cld
dec
imul
jge
in
test
sahf
pop
fdivs
mov
and
in
or
push
inc
pop
xchg
sub
mov
sti
loope
jo
cld
shrl
dec
les
dec
or
jp
adcl
in
mov
add
xor
aad
iret
xchg
or
sub
stos
movl
fbstp
mov
in
adc
or
loop
roll
std
stos
dec
gs
test
jle
add
cmp
adc
jmp
cli
adc
jne
mov
lods
jle
je
movsl
push
es
sbb
cmp
mov
clc
cmpsl
sub
sbb
out
xchg
add
cld
js
addr16
sub
repnz
sbb
lea
sub
ljmp
add
repz
sub
sub
cmpsl
inc
xor
aaa
shll
mov
pop
jp
add
notl
jnp
xchg
repz
jne
dec
decb
ljmp
mov
movsl
leave
popa
scas
sbb
lds
sub
mov
inc
stos
sbb
jl
sbb
mov
sub
ret
pop
pushf
enter
xchg
push
testl
and
pop
nop
in
xlat
and
push
push
pop
mov
outsb
add
out
sub
adc
sub
cmp
lods
fistpll
pop
rorl
or
nop
lods
je
push
push
sbbb
icebp
call
push
cli
xorl
xchg
movsb
pop
jne
sbb
sub
clc
xor
push
dec
lods
or
nop
or
xlat
jno
push
xor
fmuls
inc
ds
fstpt
insb
out
imul
fsubl
adc
adc
sub
pop
xchg
negl
xor
enter
sahf
cmpsl
pop
in
cmp
ds
lret
jl
enter
jno
inc
add
jl
xchg
jbe
jle
ret
sub
pop
jno
dec
lods
lcall
xchg
add
cltd
cmp
jb
cltd
fisubs
cmpsb
jo
iret
out
mov
lahf
lea
or
add
clc
mov
dec
das
bound
xchg
test
fistps
sub
inc
and
test
bound
xor
cmc
arpl
sub
push
sbb
pop
cmp
adc
add
dec
mov
dec
mov
scas
mov
cld
cmp
fcmovb
notl
insb
mov
pop
mov
or
xchg
inc
jae
xlat
xchg
sahf
cwtl
sub
insl
lods
test
sahf
push
out
pop
lock
int
subb
jmp
in
xchg
mov
repz
push
adc
aas
mov
out
inc
dec
xchg
rcr
test
xor
ret
jl
jae
fsubl
pop
cmp
mov
cld
shll
xor
sub
inc
cmp
in
mov
push
inc
int3
loop
fistpl
cli
cmp
dec
rcrb
das
xor
shll
xlat
stos
or
jmp
add
mov
out
test
movsl
jbe
imul
pop
movsl
dec
pop
in
fidivrs
pop
and
sahf
aad
dec
loope
shl
xchg
stos
mov
add
add
insb
dec
test
int
outsb
jb
movl
int
out
fsubrs
mov
jne
xor
jl
xchg
popf
les
dec
pop
movsb
inc
sbb
dec
out
push
lahf
imul
mov
pop
sub
rcll
xor
mov
lret
popa
pop
sub
ja
data16
or
adcb
push
pop
and
mov
inc
cltd
xlat
fmul
stc
adcl
inc
push
das
pop
aaa
addr16
lahf
mov
add
movsl
leave
rcll
outsb
lods
ss
xchg
cmp
loope
lds
pusha
sbb
and
jns
jbe
jge
imul
pop
gs
sti
int
add
pop
scas
push
scas
pop
dec
scas
xchg
movsl
outsl
xchg
push
jge
in
ds
imul
gs
pop
sub
incb
jp
out
test
xchg
cmc
jno
push
push
js
inc
js
xchg
popa
das
outsl
js
movsb
jo
jg
data16
and
out
or
nop
lahf
and
cmpsb
pop
mov
mov
push
stos
sbb
fld
dec
xor
pop
popf
lods
pop
aas
imul
sbb
jnp
sub
jp
out
shll
adc
add
xchg
mov
test
fisttps
mov
jae
scas
sbb
mov
imul
sbb
sahf
loopne
or
cmpsl
lds
in
sbb
ret
pop
or
outsl
mov
test
xorl
jae
or
xchg
sub
jge
sub
xor
stos
idiv
pop
jb
sbb
fwait
adc
popa
mov
icebp
xchg
and
outsb
jno
and
push
outsb
or
jns
xor
movsb
push
ret
sahf
into
xor
jmp
and
data16
int
in
mov
in
inc
xchg
jne
lds
jb
mov
cs
hlt
jge
jl
cmc
cs
imul
fisubs
fsubr
pusha
rcrl
aas
mov
arpl
xor
push
fdivrs
outsb
push
mov
jle
dec
sub
pop
cmp
lds
loop
adc
and
int
pop
and
inc
fnsave
aad
stos
clc
mov
insb
xor
stc
fcompl
mov
mov
vpaddsw
inc
and
popf
mov
rol
pushf
jnp
or
ljmp
xor
sub
lods
inc
adc
adc
sub
es
lods
rcl
xchg
push
ret
pop
xor
mov
mov
lods
clc
xchg
xchg
sbb
push
sbb
test
xor
cmpsl
sti
sahf
les
push
aam
iret
sub
xchg
push
mov
dec
ja
sahf
dec
sub
inc
pop
out
inc
mov
and
loopne
mov
xchg
mov
lds
xchg
or
loopne
dec
test
pop
repz
ret
push
mov
dec
cmp
xor
fs
inc
xor
mov
test
cld
xor
outsl
mov
sub
aaa
or
mov
xor
jg
sysexit
ds
les
xor
lahf
xchg
push
kortestw
repnz
push
cmpsb
mov
loope
push
in
cmp
adc
mov
arpl
inc
jnp
in
in
push
mov
popf
addr16
or
and
sti
sbb
jge
mov
xchg
or
jb
inc
inc
dec
stos
aas
or
in
ja
or
inc
cmp
mov
push
mov
inc
cmp
push
pmulhuw
lret
imul
cli
mov
icebp
push
sbb
adc
leave
loope
inc
insb
mov
lcall
push
cli
adc
xlat
jp
inc
movsb
dec
inc
fisubs
scas
inc
xchg
jns
lcall
clc
pop
fcomip
jle
fs
pop
adc
fidivrs
mulb
xor
or
jmp
cmp
cmp
insl
pop
xor
stc
dec
pop
movsl
push
imul
xchg
aaa
sbb
lds
rolb
dec
push
and
lods
xor
adc
mov
lret
in
adc
dec
inc
cmp
xchg
add
cmp
clc
fucomp
addb
xchg
clc
adc
lahf
cmpb
and
add
mov
mov
mov
addr16
sbb
insb
ss
mov
cmpsl
jno
rcr
cmpb
mov
cld
xchg
std
shrl
jnp
les
cmp
insl
mov
or
stos
or
testb
mov
xorl
or
jle
mov
add
inc
mov
xor
inc
and
out
loopne
or
jbe
in
jg
jae
insb
push
add
mov
sub
pop
mov
xor
or
jb
or
jge
xor
pop
mov
xor
add
std
jg
pushf
mov
pop
fistps
mov
ss
mov
cmp
mov
clc
pop
stc
push
or
xchg
pop
mov
cmp
sub
ja
and
scas
clc
mov
cli
xchg
cmp
enter
repz
pop
aas
ficoml
jns
or
idivl
shrb
push
divb
int3
loop
xor
and
lods
fcompl
pop
repnz
scas
mov
adc
or
out
clc
dec
addr16
fmul
xchg
imul
lret
adc
sub
shlb
fs
je
jmp
mov
in
add
dec
inc
ret
sub
dec
add
xchg
rcll
cmp
int
imul
cmp
or
jbe
repz
or
and
xor
mov
xchg
push
into
int
call
sbb
decb
adc
cmp
mull
mull
cmp
push
sbb
jno
mov
jo
test
mov
aam
iret
and
and
adc
clc
sahf
sub
add
cmp
mov
arpl
in
stos
pop
iret
idiv
jbe
dec
mov
stos
jg
push
wrmsr
lahf
push
data16
aas
jmp
les
out
sbb
or
push
push
mov
mov
pop
mov
jmp
xor
inc
inc
out
add
mov
pushf
popf
clc
push
jecxz
xor
mov
rcrb
pop
int3
fstl
jecxz
xchg
bound
sbb
cwtl
sahf
movsb
add
adc
or
mov
enter
mov
mov
aaa
je
mov
movsb
push
sub
test
mov
push
call
int3
test
inc
clc
sbb
jge
cmp
and
mov
lock
icebp
dec
shll
movsb
xor
enter
mov
dec
xor
hlt
arpl
mov
stos
out
xorb
test
sbb
cld
movsl
adc
dec
dec
sub
sbb
fistl
lock
cs
push
pushf
je
or
push
pop
cwtl
lret
dec
inc
mov
push
jne
xchg
gs
jae
and
fwait
adc
sub
push
mov
jne
outsb
jmp
pop
rol
dec
loopne
in
orb
mov
sub
pop
xchg
sti
add
iret
sbbl
push
sbb
idivb
aam
add
sub
int
das
or
mov
lcall
xchg
pop
popf
lods
jle
xlat
mov
jnp
mov
rclb
inc
jg
cltd
aam
imul
sarl
jb
mov
adc
xchg
adcl
jb
and
dec
dec
sarb
xor
mov
lahf
ficoms
jbe
add
mov
lcall
xor
fadds
call
xchg
mov
fldt
cmp
popa
or
mov
cmp
popl
lds
sbb
or
inc
and
out
pop
scas
stos
cmp
xchg
ja
cwtl
add
into
pop
push
lods
cmp
shlb
fsubrl
in
inc
loop
jne
push
fisubl
mov
lret
mov
cmp
jmp
paddd
cli
ja
pop
test
lods
xchg
lcall
daa
cvtps2pd
mov
fwait
push
aas
and
add
push
dec
bnd
dec
jne
and
insb
mov
out
xor
gs
sub
jp
loopne
mov
lahf
cwtl
lahf
mov
jmp
jecxz
stos
mov
jno
ja
fistl
idiv
or
cli
fwait
sub
stos
sub
pop
ds
cmp
iret
aad
sahf
mov
push
outsb
add
push
xchg
fdivl
jp
push
jp
rcll
lods
xchg
cmp
ret
leave
lods
jecxz
push
dec
xchg
popl
imul
add
dec
xchg
aaa
outsb
out
stc
xchg
mov
xchg
ljmp
jbe
cwtl
pop
lock
adcb
mov
sti
inc
sarb
insb
pop
iret
and
push
push
adc
test
pop
add
xchg
pop
pusha
add
pusha
xlat
and
push
cmpsb
cmp
insb
mov
lods
push
xchg
loope
sbb
cltd
sarb
mov
cmp
fs
aaa
and
xchg
loop
int3
push
dec
xchg
sbb
data16
setne
popa
dec
xchg
dec
push
adc
or
pop
in
mov
sahf
imul
sbb
lods
fcmovnbe
pop
mov
aas
adc
lea
sub
xchg
cmp
fstps
xor
sub
inc
sbb
fnstcw
out
leave
dec
mov
shll
fcompl
dec
mov
fisttpll
imul
insb
cmpsb
add
sub
push
lahf
pop
ljmp
push
insb
cs
mov
scas
data16
xchg
insl
add
imul
test
int3
sarb
fistl
sbb
add
rcll
test
ffree
in
enter
lret
or
adc
sub
andb
pop
inc
sub
pusha
inc
fisttpl
lret
and
push
cmpsl
pop
dec
cmp
mov
lret
jle
aam
mov
pop
or
lret
cs
mov
sub
loope
sub
lret
jg
rcrb
mov
test
call
push
notl
pop
out
mull
imul
sbb
pushf
call
outsb
iret
pop
enter
aas
imull
enter
pop
call
scas
lea
mov
mov
fcomip
mov
std
adc
insb
out
jbe
out
iret
pusha
cmp
sub
mov
shr
jnp
pop
push
pop
cmp
adc
xchg
add
push
xchg
dec
in
xchg
lds
sub
pop
lods
in
push
xchg
xchg
jbe
out
sub
imul
cmp
test
int
jo
sub
lea
push
sub
mov
mov
adc
push
addb
xor
push
jmp
aad
pop
shlb
xlat
cli
inc
xor
and
and
cld
arpl
inc
mov
push
mov
mov
adc
jle
mov
pop
cmp
adc
and
push
cmp
sub
mov
fucomp
push
jecxz
cmp
mov
mov
and
inc
mov
addb
ljmp
lret
call
mov
mov
mov
adc
xor
push
push
insb
sub
push
movsb
pop
lcall
test
push
cmp
insl
out
pop
mov
jecxz
xchg
notl
mov
movsb
sbb
dec
insb
inc
pop
adc
or
xlat
pop
push
cmp
inc
negl
repz
mov
loop
sub
lds
repz
lahf
sub
inc
rorb
std
fsubp
es
mov
mov
lods
fdivr
xchg
fildl
dec
xorb
call
insl
push
popa
mov
pop
cld
pop
mov
inc
and
scas
gs
sbb
dec
xor
mov
xor
cli
sahf
add
fcom
push
enter
out
in
ds
shll
jp
inc
inc
or
adc
sbb
mov
adc
cmpsl
addr16
push
fwait
test
test
jbe
in
add
test
mov
jns
xor
push
into
stos
and
cli
andl
pop
mov
jae
icebp
adc
add
xchg
mov
or
sbb
xchg
sbb
mov
outsl
or
das
cmp
je
shrb
cmpl
pop
mov
mov
rcrb
sahf
mov
in
pushf
pusha
test
mov
lret
xchg
shlb
mov
and
cmpsb
dec
inc
or
and
add
aas
mov
sar
ja
jl
popf
cli
lret
daa
adc
add
pop
xlat
stc
sbb
pop
mov
mov
xlat
pop
push
outsl
lock
cmpsl
xor
das
fwait
dec
mov
int
inc
or
pop
bound
mov
jns
xor
into
test
test
pop
xchg
lcall
xor
rorl
gs
shll
fbstp
jns
dec
push
sti
or
fsubs
nop
inc
mov
fcmove
vpbroadcastq
pop
dec
sarb
movaps
sub
fwait
and
xor
test
in
mov
xchg
push
xlat
mov
jno
push
sar
in
into
pusha
aad
push
in
je
daa
subb
jge
xchg
enter
jecxz
xor
fs
add
rcll
in
mov
clc
in
subl
pop
xchg
mov
mov
popa
loopne
xchg
add
jl
pop
icebp
inc
out
xchg
sbb
repz
mov
cmp
add
push
sub
lods
push
clc
cs
push
in
js
mov
insb
adc
jno
insl
in
sbb
xchg
jnp
inc
mov
out
lea
je
cmp
cmp
jo
bound
mov
outsb
std
adc
dec
mov
aas
mov
push
insl
dec
fimull
add
xchg
je
adc
std
fisttpll
ljmp
popf
or
pop
sahf
lret
add
sub
lret
aam
sbb
push
pop
jmp
mov
add
ja
xchg
jmp
aaa
js
jl
mov
jge
pop
pop
xchg
addr16
and
jl
add
out
mov
sub
das
mov
call
scas
cmp
jo
mov
rcr
inc
loope
out
stos
aad
pop
andl
test
repnz
or
insb
aaa
xchg
fdivrs
testl
orl
jno
xchg
ja
cli
inc
test
or
aas
and
pushf
mov
or
stc
mov
orl
mov
int3
push
movb
stos
imul
mov
fcom
lahf
loop
sub
jl
lods
pusha
or
mov
xor
in
or
xor
sbb
es
adc
popl
in
push
jno
ds
in
mov
dec
xchg
push
xchg
movsb
sub
and
mov
add
mov
out
cmp
lahf
cmp
fdiv
shlb
lea
mov
movsl
jle
adc
aad
cmp
jl
push
xor
xor
lock
mov
xor
pop
sub
das
or
mov
aad
jg
arpl
pop
cmp
icebp
or
push
ficompl
imul
ror
in
adc
xor
jecxz
push
cmpsb
adc
cmp
std
add
sub
jecxz
pop
xlat
mov
es
out
in
cmp
sbb
movsl
push
jmp
insb
add
mov
dec
lea
cmpb
jge
inc
or
mov
fs
fists
mov
mov
into
sahf
cli
movsb
and
aaa
into
aas
scas
imul
push
cmpl
insb
pop
mov
sub
shlb
loopne
insl
sbb
jg
inc
fidivrl
pop
fcomps
mov
push
dec
sbb
aas
sarl
xlat
dec
pop
movsb
cmp
pop
lahf
xor
pop
push
mov
fistpll
and
shll
lock
les
or
push
shlb
jp
lret
xlat
sbb
lret
adc
push
scas
mov
and
mov
insb
adc
cmp
push
shrl
je
xchg
imul
movsb
dec
mov
arpl
mov
js
les
xor
inc
sub
arpl
cmpsb
xor
stc
mov
lahf
shlb
mov
xor
mov
inc
aas
shl
nop
pop
out
aaa
aas
add
sub
or
jo
fcoms
push
mov
jb
pop
and
pop
or
repnz
push
fldcw
aad
fistps
rorb
int
sub
mov
hlt
pop
xchg
adc
xor
das
xlat
add
daa
xor
push
xor
cmp
repz
lahf
xchg
or
dec
mov
ds
pop
push
aas
shl
or
js
mov
mov
aas
mov
fs
mov
aaa
fnstcw
push
jb
arpl
pop
jne
std
fcompl
repz
icebp
addb
out
pop
into
inc
ds
out
mov
inc
sbb
js
and
sbb
fs
or
fldl
cmpsb
push
inc
int3
cmpl
mov
xchg
mov
push
bound
and
cmp
sbb
pop
pop
xchg
sub
icebp
adc
out
hlt
dec
cmp
int
push
mov
js
insl
loopne
mov
dec
je
lods
enter
xchg
lea
push
sub
jg
imul
sbb
dec
push
sub
mov
stos
sub
inc
mov
dec
arpl
das
nopl
leave
out
sbb
sub
fbld
jmp
stos
and
std
xchg
ret
sbb
fucomp
push
fnsave
icebp
idivl
ret
loop
sbb
push
aaa
jb
mov
and
lahf
or
dec
adc
lahf
aaa
xchg
mov
sbb
sub
push
jbe
neg
fsubrs
adc
into
sub
ret
fwait
imul
jle
insb
addr16
push
pop
bound
out
adc
cwtl
xor
test
mov
pop
jno
sbb
inc
sbb
xor
mov
out
push
out
addb
mov
ret
jecxz
in
jno
mov
shlb
sbb
mov
jecxz
lods
xor
cmp
inc
xchg
or
push
pop
loop
adc
and
mov
pop
cmp
or
cltd
mov
sbb
adc
xor
jmp
jne
mov
sub
data16
sti
jp
mov
data16
into
ficoml
or
xlat
stos
dec
pop
mov
test
fsubr
stos
insl
shr
imul
push
add
or
call
xor
test
fisubs
daa
jo
cmc
cmp
sbb
jecxz
dec
psubusw
adcb
jnp
test
fnstcw
mov
dec
repz
mov
lock
icebp
mov
test
dec
or
sarb
popa
add
xchg
rcr
or
outsb
sub
nop
sbb
pusha
jo
fisttpll
sbb
mov
jge
nop
jnp
jae
sub
fildll
ss
sarl
inc
jae
sti
mov
je
push
fwait
or
div
dec
xchg
clc
jo
icebp
adcb
sub
xchg
loop
push
add
jno
cmp
sahf
fwait
push
push
push
xorb
mov
filds
cmpsl
rorb
mov
imul
xchg
xchg
cltd
push
mov
sbb
dec
aaa
jmp
inc
jmp
xor
xor
dec
popa
lods
fisubrs
push
jg
scas
push
stc
and
mov
shll
mov
xor
push
jmp
stos
push
jg
into
push
pop
movq
jge
xlat
ljmp
je
pushf
dec
cmpsb
jne
in
aaa
fcomps
arpl
fistl
xor
add
jb
and
add
or
pusha
incb
das
cmp
jne
fnsave
adc
fwait
insl
lea
lods
or
arpl
mov
pop
pushf
in
mov
push
pushw
sub
pop
mov
mov
test
jbe
inc
adc
andb
jnp
callw
inc
sbb
dec
ljmp
dec
cmpsb
inc
std
scas
mov
push
mov
adc
adcl
jg
cs
int
je
jnp
push
stc
and
xor
cmp
jge
mov
fldenv
subl
fcomps
pop
jecxz
dec
loop
sub
jns
mov
dec
cmc
jb
cld
int3
roll
cmp
js
dec
daa
movsl
mov
push
jge
dec
adc
mov
jbe
mov
or
cmp
sbb
pop
mov
mov
js
xchg
repnz
jmp
and
out
xor
stos
jge
ljmp
adc
movsb
loope
ret
sub
popf
es
jno
cmpsb
outsb
arpl
aaa
adc
xchg
fdivr
int
mov
sti
mov
or
xor
xchg
xchg
jp
aam
push
push
jo,pn
xchg
lahf
pop
int3
adc
mov
mov
jns
sahf
jno
push
mov
pop
movsl
mov
out
xchg
sbb
lahf
and
movsl
adc
lods
pop
dec
dec
push
pusha
push
test
in
add
add
stc
pop
sbb
pop
push
mov
or
iret
mov
sbb
jns
lods
in
mov
sub
lahf
sub
neg
ret
es
mov
leave
push
mov
add
mull
xchg
sbb
xchg
aas
ja
add
jl
rep
addb
std
cmp
cld
arpl
mov
lods
aad
into
mov
jb
clc
jae
push
push
mov
es
mov
jecxz
sbb
jp
fsubp
mov
rolb
add
mov
pushf
cwtl
mov
push
imul
aam
int3
movsb
add
aas
pushf
add
lret
jno
xor
xchg
fists
pop
mov
mov
xchg
sub
jno
aaa
sub
push
pop
ds
mov
js
jp
adc
fcmove
pop
ret
adc
mov
or
fisttpll
inc
aam
mov
loop
dec
clc
lahf
loopne
push
mov
sub
dec
inc
or
jecxz
xor
rorl
push
lds
cmpsl
scas
int3
jnp
adc
cmc
xchg
mov
daa
push
jo
aam
dec
call
add
or
push
rol
mov
gs
mov
aam
pushf
jecxz
mov
cltd
fsubrl
lods
test
and
lods
test
push
lcall
je
addb
test
push
push
adc
in
ret
push
ror
ret
push
loopne
push
cmpl
lods
xchg
or
cmp
adc
imul
add
aas
adc
xorb
fisubrl
ds
jne
jbe
out
dec
test
std
jnp
and
adc
insb
and
mov
sbb
sbb
cmp
adc
jmp
adc
cmp
cli
xor
jno
leave
enter
sbb
aaa
xchg
stos
sub
cs
add
lcall
or
or
inc
fucom
pop
xrelease
lock
sub
fscale
outsb
test
sub
pushf
xchg
in
call
add
mov
addr16
mov
jno
pop
cmpsb
xor
jmp
cltd
cmp
fdivrl
pop
push
fiadds
add
lods
push
xor
jmp
sbb
and
cmp
loope
lret
sbb
sub
cmp
push
push
call
lds
xchg
test
pop
outsl
stc
pop
inc
mov
xchg
inc
imul
jo
pop
xchg
mov
jle
inc
stos
or
cmp
xor
dec
ret
xor
add
jp
push
cmpsl
mov
testl
rol
ds
scas
add
jb
pop
lret
dec
imul
push
mov
inc
adcb
sub
inc
push
lret
cmp
jbe
mov
aaa
xlat
jae
icebp
adc
insl
fnsave
mov
or
xor
adc
mov
pop
arpl
jno
mov
mov
pop
das
mov
and
clc
mov
shr
lods
cltd
popa
xor
fistps
xchg
cmc
push
xorb
push
sub
ja
cmp
loope
xor
aaa
lret
xor
mov
ss
add
xchg
inc
cmp
rep
push
jbe
dec
loop
test
test
xchg
adc
mov
scas
inc
hlt
stos
int
sub
cmp
icebp
adc
xchg
or
hlt
fcoms
sti
imul
inc
sbb
and
push
mov
inc
mov
push
xor
repz
ret
pop
sahf
ret
lcall
sub
shlb
rcr
js
es
pop
int
inc
inc
cli
xor
xchg
inc
int
xchg
gs
mov
push
in
nopl
push
sub
xor
jmp
fcomp
addr16
rolb
dec
pop
pop
pop
or
in
mov
pop
push
cmpsl
sub
cmpsl
xchg
in
sub
jae
iret
or
add
push
or
add
jecxz
push
or
mov
sahf
ljmp
pop
cmpsl
mov
or
rclb
mov
or
clc
test
rclb
push
and
ljmp
push
out
dec
cmp
or
test
icebp
add
mov
cmp
sub
jp
imul
mov
je
push
dec
or
mov
mov
rcrl
push
pop
jl
lock
andb
outsl
subb
fs
xchg
inc
loope
cmp
lds
imul
xorl
xchg
push
cmp
xor
xor
adc
loope
dec
sub
outsl
fwait
cmp
int3
dec
flds
xor
push
loop
or
loope
xchg
xor
lea
loop
repnz
jmp
mov
and
stos
decl
inc
mov
out
enter
jmp
dec
jle,pn
insl
push
lret
cmp
mov
push
xor
pusha
jl
or
xor
iret
add
adc
divl
lods
mov
test
jo
cli
push
fwait
pop
cmpsl
in
inc
popf
sub
ja
pop
ret
outsb
ret
inc
stos
add
cs
fbstp
rcll
movsb
xlat
lods
testb
cmpsb
cmpsb
jmp
cmp
fs
pop
xor
div
xor
pop
mov
ss
shrb
adc
inc
push
pusha
jae
pusha
test
adc
mov
loope
and
notb
jns
lahf
enter
subb
movd
xlat
sbb
xor
inc
inc
xchg
int
cmp
cmp
in
cmpsb
std
or
inc
into
aam
jmp
movsl
movsb
data16
lock
subl
mov
adc
repnz
mov
aam
in
push
in
adc
pmaxsw
push
jo
shl
ljmp
movsb
jae
mov
jecxz
mov
sbb
xor
and
push
or
mov
mov
xchg
out
push
mov
in
scas
mov
mov
movl
stc
xchg
cmp
lods
push
sub
imul
pop
jns
or
popa
sbb
inc
or
int
jbe
xor
psrld
cltd
dec
cmp
imul
sub
xchg
cltd
lret
sahf
sti
cmpsl
and
sbb
xchg
inc
cmpsb
out
mov
punpcklbw
xchg
jb
daa
inc
pop
ret
daa
sahf
dec
add
sbb
xchg
dec
movsb
dec
add
cld
ret
rcll
sti
push
xchg
sbb
movsb
test
mull
cvtpi2ps
in
jl
std
mov
push
sbb
std
xchg
jle
ljmp
enter
xchg
dec
insb
mov
and
cltd
dec
aam
mov
fchs
sub
sbb
negb
pop
inc
xchg
mov
andb
mov
xlat
inc
push
fidivs
mov
ficomps
loop
aad
add
and
loop
sahf
jb
hlt
mov
rcrb
inc
jae
mov
xor
test
loop
jne
stos
inc
mov
test
ret
push
in
arpl
and
jb
push
nop
push
aam
fs
ret
sbb
jmp
xorl
inc
fcomp
xchg
mov
mov
and
inc
fs
add
jb
pop
mov
int3
add
xchg
repnz
or
nop
fwait
pop
pusha
xchg
pop
into
lods
xchg
dec
loopne
flds
cmp
mov
xchg
aam
inc
mov
subl
inc
xchg
ret
jl
outsl
lods
lods
mov
mov
orl
inc
xor
push
in
pop
cwtl
adc
inc
lret
adc
ret
sub
mov
inc
xchg
inc
mov
xchg
and
clc
xchg
push
dec
test
nop
add
lds
aad
sgdtl
sarb
out
enter
rorb
jge
mov
xchg
fdiv
lahf
fwait
sub
gs
mov
pop
and
add
add
xorl
lds
and
jb
imul
xor
fadd
push
pop
fcmovbe
xchg
xchg
and
pop
imul
in
fnstsw
cld
test
ficoml
mov
sub
in
mull
inc
jne
inc
xor
mov
dec
ret
xchg
xchg
add
dec
outsb
lods
insw
stos
pop
fwait
xchg
jl
out
loopne,pt
xchg
add
arpl
cmpsl
mov
add
or
lret
scas
es
int
repnz
and
or
scas
lods
push
shrl
mov
adc
aad
mov
jle
aaa
fiadds
cmp
dec
movsl
push
jae
les
int3
mov
dec
lahf
pop
fisttpl
roll
ret
jns
and
inc
sub
mov
enter
cltd
fwait
addl
test
pop
push
pusha
pop
loope
gs
push
xchg
mov
or
adc
outsb
out
lea
lea
mov
jne
dec
sti
in
outsb
jl
xchg
movsl
scas
pusha
outsb
jmp
enter
lcall
mov
stc
jle
or
lods
push
xor
das
imul
imul
cld
inc
xlat
jge
mov
pop
imul
mov
in
ljmp
xor
es
pop
jnp
aaa
in
push
fisubrs
orb
aad
int3
mov
sbb
cmpsb
icebp
test
dec
jo
or
cmp
adc
rcll
push
out
sub
imul
jecxz
inc
ljmp
sub
scas
dec
mov
and
int
rcl
shrl
outsl
fldcw
push
mov
ljmp
lcall
jge
push
add
mov
cmpl
loop
arpl
int3
aas
cs
hlt
repz
hlt
sar
sub
xchg
sub
movsw
jl
notb
sbbb
test
sub
xchg
je
mov
push
aas
test
sub
in
cli
xchg
nop
icebp
add
xchg
fsubl
outsb
ret
mov
xlat
loop
pop
cmp
xor
xor
inc
push
or
fcomps
mov
jb
and
xor
push
fadds
arpl
popf
mov
cmp
inc
mov
or
pop
lods
xchg
inc
bnd
dec
adc
shlb
jge
or
jecxz
cmp
aas
insb
test
sbb
adc
jbe
js
arpl
punpcklwd
daa
and
xchg
rol
sahf
rol
add
hlt
test
fcoms
lret
mov
ds
jne
pop
fisubl
outsb
mov
or
dec
xchg
ret
aam
sarl
outsl
lods
clc
push
cwtl
fs
roll
mov
push
add
dec
and
test
inc
jbe
arpl
js
in
add
clc
repz
mov
lret
outsb
jl
jg
aam
jp
fs
xchg
imul
imul
mov
jge
out
pop
cli
or
rcll
lods
pop
pusha
mov
push
jb
out
dec
mov
mov
stos
and
das
aam
adc
xorl
and
sub
ret
icebp
cmc
bound
in
dec
imul
test
ja
adc
cmp
cmp
pop
jnp
or
clc
ja
jbe
ds
or
xchg
mov
xor
aas
ds
add
xchg
negb
fstpt
bound
and
dec
mov
and
jg
jl
insl
repnz
mov
mov
push
pop
pop
ret
jp
mulb
push
divb
add
mov
aam
loope
mov
pop
and
orb
loope
push
sub
imul
ret
test
jmp
aam
andb
jns
push
or
mov
out
push
mov
cmp
add
mov
mov
xchg
lea
in
or
and
dec
mov
fwait
cli
dec
fistpl
add
mov
jnp
and
rcrl
xchg
push
mov
cmp
fcoml
ss
pop
hlt
jp
shll
les
jne
inc
xchg
push
or
movsb
pop
test
jo
add
loopne
rcll
dec
mov
sti
pop
pop
lret
inc
jno
cld
hlt
and
jne
inc
push
les
push
adc
test
cld
imul
movsb
sbb
cmp
add
insl
cwtl
icebp
xor
mov
out
jecxz
loopew
mov
loop
lea
pop
mov
aas
int
xchg
and
xchg
sbb
fs
std
xor
in
cmp
sub
push
pushf
push
xchg
mov
cmpsb
mov
xchg
xchg
xchg
sub
ret
mov
scas
lods
jmp
mov
mov
sbb
mov
sbb
jns
jge
sbb
add
mov
jne
xchg
xor
idivl
or
mov
cmpsw
mov
repz
in
sti
insl
add
sbb
and
push
or
repz
mov
aad
pusha
ret
jmp
stos
scas
inc
and
pop
test
or
out
xchg
arpl
jb
mov
lret
imul
icebp
std
addr16
or
lret
psubb
sub
sbb
jnp
in
push
xor
sbb
fdivrp
shll
je
xchg
xor
sub
pop
dec
arpl
lock
dec
jae
scas
mov
out
jge
fsts
lcall
and
inc
fistps
pop
std
mov
aas
ja
out
push
mov
xor
ljmp
insl
inc
xor
push
jl
test
mov
push
push
je
adc
fcomps
nop
es
rcll
pusha
or
outsb
and
add
arpl
jae
test
add
lock
out
or
push
push
leave
mov
enter
loop
xor
adc
add
sahf
loopne
pop
mov
imul
aad
dec
mov
dec
xor
in
mov
rcr
cwtl
mov
popl
push
inc
scas
aas
add
fidivrs
push
mov
or
into
xor
mov
aam
cmp
push
dec
inc
xchg
scas
dec
fmull
movswl
outsb
ss
imulb
jne
mov
ret
pop
inc
out
mov
mov
test
insb
pop
call
cmpsl
cmp
aaa
jae
dec
stos
lock
xchg
cld
jmp
fidivl
cmpsb
mov
sub
pusha
push
jae
mov
in
fsts
mov
loope
mov
mov
or
inc
daa
pop
out
les
enter
add
mov
push
add
pop
mov
cltd
fwait
ljmp
or
cld
in
jl
mov
insl
test
inc
xorb
call
fldenv
add
loope
jae
jg
xlat
mov
pop
cmpsl
pop
lcall
sub
pop
js
cmp
adc
push
enter
mov
xchg
xchg
jle
cltd
adc
cs
repz
sub
ljmp
sbb
popa
jmp
jecxz
adc
sbb
inc
lods
lret
movsb
jmp
mov
cwtl
clc
sub
pop
repnz
js
add
inc
mov
push
jbe
push
pop
sbb
icebp
cmpsb
add
lea
in
js
pop
xor
xchg
mov
mov
outsl
sub
add
xor
lret
leave
pop
lcall
divl
cwtl
jle
jne
movsl
jae
stos
cwtl
mov
sbb
mov
test
rclb
xlat
sbb
adc
ror
filds
arpl
aaa
rol
je
out
pop
negl
fisubs
inc
pop
loop
cli
fisubrl
push
sub
fdivs
sahf
or
mov
push
cli
icebp
pop
pop
dec
mov
dec
rorl
lret
mul
shll
add
data16
cmpsb
fldenv
adc
test
lret
test
pop
push
cmp
fdiv
cmp
sub
mov
es
into
and
sbb
ret
loope
sub
aad
jp
lods
adc
push
stos
lock
xor
and
icebp
dec
mov
scas
cmp
cvtpi2ps
nop
mov
mov
mov
ss
dec
mov
loopne
mov
arpl
rcrb
out
imul
and
ja
aad
dec
mov
push
inc
push
or
imull
sub
popa
cmp
out
jp
loopne
mov
test
pushf
xor
pop
or
scas
inc
jle
bound
sbb
xchg
xchg
mov
dec
mov
cmp
iret
mov
dec
in
fdiv
add
adc
sahf
dec
cmpsl
jns
adc
jns
sub
outsl
mov
gs
mov
mov
push
aam
imul
repnz
push
inc
aad
push
push
addr16
pop
int
imul
pop
test
mov
test
mov
sbb
mov
mov
imul
and
in
shll
stc
pop
xchg
and
inc
jbe
in
enter
add
pop
push
mov
inc
in
pop
jl,pt
das
xchg
push
mov
mov
or
pop
mov
sbb
sub
jo
push
mov
imul
mov
dec
adc
inc
cmp
cmpsl
push
cli
push
pushf
arpl
cmp
push
or
sub
ja
imul
movsl
push
xor
pop
add
sti
pop
into
imul
movsb
inc
call
pop
cmp
cmpsl
jmp
xor
mov
int
jb
push
xor
lea
movsl
pop
push
dec
sub
data16
rcrl
cli
scas
loope
adc
cld
sbb
lahf
das
adc
fwait
test
mov
sub
mov
xchg
je
ret
aas
sub
in
jnp
mov
data16
inc
scas
pushf
cs
mov
mov
aas
adc
push
js
mov
lea
imulb
or
push
js
ljmp
mov
dec
insl
jb
push
in
push
xchg
and
xchg
mov
mov
popf
mov
dec
push
xlat
push
lcall
push
js
imul
orl
fiadds
into
jecxz
es
xor
out
les
add
mov
fsts
or
jmp
inc
push
stc
divl
pop
fsubrs
sbb
push
incb
std
pop
sub
or
cmp
xchg
testb
push
mov
mov
movsb
jne
adcl
dec
pop
hlt
inc
int3
push
lret
imul
and
dec
jecxz
jmp
push
push
inc
sbb
jge
je
add
incl
cli
jl
ret
aam
xor
xchg
in
and
jne
jae
push
xor
sbb
arpl
in
pop
lods
push
sub
xchg
imul
leave
push
iret
sub
xchg
icebp
jg
jbe
inc
pop
out
pop
add
adc
mov
lahf
lock
dec
dec
xchg
mov
mov
jp
out
lahf
ss
sbb
xchg
mov
call
mov
and
dec
push
iret
jbe
sbb
and
jbe
sahf
jb
imul
in
out
hlt
rcrl
push
sbb
xor
in
push
cmp
mov
dec
inc
nop
xchg
dec
xchg
push
mov
shr
stc
out
dec
loop
test
add
lds
aaa
int3
sub
sbb
lock
jge
mov
xchg
dec
cmp
jbe
cwtl
dec
push
stos
in
inc
add
mov
dec
mov
subb
test
jecxz
aam
pushf
out
mov
jne
in
lahf
jle
jae
fstps
sub
movsb
push
divl
imul
or
sbbb
cld
jnp
out
shll
out
aas
push
push
dec
aas
adc
jg
dec
push
jbe
mov
popf
test
shr
xchg
xchg
ja
xchg
add
mov
jae
push
cmp
out
mov
je
out
test
jl
in
pop
jg
into
sub
jecxz
sbb
scas
mov
or
out
cmp
push
fwait
jns
mov
out
imul
xchg
gs
mov
daa
xor
imul
jle
js
pop
das
xchg
jno
testb
dec
jge
adc
jmp
jl
cmpl
sbb
popf
pusha
enter
xchg
mov
cwtl
in
fcomps
mov
add
add
dec
adc
cmp
mov
inc
pop
hlt
and
fildll
jno
dec
push
scas
out
inc
jle
mov
subb
jae
cmp
mov
inc
scas
fwait
loop,pn
aas
or
dec
xchg
sub
cmp
jae
pop
fmull
aaa
stc
enter
cltd
jbe
xchg
pop
rcll
jl
mov
mov
push
sbb
sbb
mov
push
addr16
pop
or
xor
orb
inc
fstps
pop
mov
push
inc
mov
inc
jae
shrl
dec
repnz
jbe
lods
rolb
retw
inc
adc
mov
inc
mov
inc
and
lods
repnz
arpl
add
sar
test
push
loopne
and
or
dec
fpatan
into
xchg
mov
mov
in
jns
mov
in
sub
push
mov
fs
ja
xchg
fimuls
mov
pop
test
push
mov
mov
in
sub
call
inc
pop
sahf
mov
or
cmc
cltd
out
leave
push
add
add
dec
ja
xchg
push
cmpsl
je
out
xchg
mov
cmp
lods
icebp
mov
xchg
mov
push
cmp
in
push
push
pop
adc
xchg
lds
das
dec
cli
std
das
jo
shll
stos
jmp
push
or
xchg
stos
lea
js
and
or
les
aaa
cmc
pop
subb
sub
aad
xor
mull
mov
sete
out
and
cs
xlat
mov
adc
ret
in
leave
ret
add
cmp
outsb
and
adc
or
mov
enter
adc
xchg
add
xchg
sub
mov
sub
fs
lret
cmpsl
xchg
dec
fs
push
rol
lds
sar
push
mov
fldenv
jecxz
sub
int
rcll
lea
pop
add
push
mov
js
cld
cmp
testb
out
push
movnti
dec
in
sub
and
fwait
cmp
mov
mov
mov
mov
mov
sbbl
in
outsl
inc
adc
lret
adc
pop
das
and
std
cmp
jnp
fwait
loopne
jns
inc
dec
inc
inc
ret
stos
data16
jle
inc
rcll
loope
inc
aad
aad
test
popa
lret
push
adc
push
xorl
lcall
fistps
fidivs
scas
mov
rorb
subb
ret
shll
mov
xchg
mov
bndldx
fidivrl
mov
cld
xor
jns
sbb
test
fistpl
std
mov
adc
push
mov
and
rcll
inc
bound
sbb
shrb
xor
scas
add
fisttps
and
adc
pop
enter
iret
pop
xor
sub
sbb
pusha
and
xchg
into
push
int
movsl
rcll
xor
or
pop
inc
jno
stos
dec
mov
mov
movl
mov
or
sub
pop
test
popa
mov
jle
ds
and
adc
mov
adc
fistpl
imul
insb
movsl
insl
jb
pop
je
push
push
dec
out
or
xchg
pop
sub
pop
clc
ret
xchg
shlb
lock
push
enter
fmull
cld
lock
stc
xchg
insl
stos
adc
xchg
ret
inc
jmp
dec
mov
sbb
cmp
es
movsl
mov
fisubs
fadds
sbbb
pop
hlt
xlat
mov
fnstsw
in
andb
push
aam
std
mov
scas
fwait
iret
cmpsl
sbb
dec
lds
push
ljmp
adc
mov
insl
sub
rcrl
push
xlat
xor
pop
inc
xchg
push
push
push
inc
jl
popa
repz
cli
test
test
pop
dec
mov
roll
push
sbb
mov
mov
jne
clc
dec
mov
fisubrs
add
mov
adc
mov
lcall
mov
and
adc
es
or
mov
sbb
jmp
call
cmp
dec
xor
movsb
adc
enter
add
push
test
xor
add
out
sarb
push
mov
mov
dec
outsb
sarb
mov
inc
push
insb
jb
jns
mov
mov
sbb
loope
nop
mov
mov
popf
dec
test
sbb
jno
inc
js
sub
popa
inc
cmp
pop
sbb
cmpsb
xchg
int3
jle
push
mov
xchg
inc
dec
incl
in
push
call
or
loop
and
or
push
test
aas
stc
pop
enter
mov
loopne
mov
arpl
sub
rcrb
and
leave
lods
ret
inc
stc
test
mov
and
cli
xor
loopne
lock
mov
inc
ret
mov
mov
popa
outsb
sti
cltd
cld
add
push
dec
test
xchg
into
lret
jmp
mov
fstl
inc
sbb
cmpsb
sbb
mov
int3
inc
shrl
cmp
mov
sbb
cld
cmpsb
sahf
push
ljmp
sbb
sub
mov
jb
mov
imul
jle
mov
adc
dec
adc
mov
sub
sub
jg
or
adc
decb
xchg
ljmp
lahf
or
data16
adc
in
sbb
std
pop
jno
push
sub
shrl
xchg
jo
mov
js
arpl
mov
pop
loopne
mov
mov
shr
ljmp
jp
dec
cmpl
ret
cwtl
adc
jae
jo
icebp
xchg
mov
sbb
and
fdivrl
xor
inc
or
and
cltd
les
outsb
mov
push
push
jae
lahf
sbb
iret
push
pop
jmp
lahf
cmp
mov
sarl
mov
inc
rorb
jb
sti
mov
jg
adc
cmp
cli
sti
dec
pop
sahf
lret
dec
fdivrs
pop
mov
jae
pop
ret
ds
test
add
dec
call
add
sbb
xor
aas
cmp
lcall
ljmp
scas
jns
mov
lret
movsl
ja
ja
xlat
or
test
mov
das
and
inc
and
sub
dec
xchg
fistpll
lock
out
lods
ja
jne
lahf
faddl
out
mov
and
inc
inc
mov
cld
jmp
jmp
jle
iret
jne
push
sbb
mov
pushf
mov
add
mov
adc
bound
add
jl
lea
icebp
cmpsl
sbbl
ret
das
mov
ret
icebp
jg
xchg
add
add
push
aam
shlb
or
lods
js
aaa
int
lcall
pop
filds
xchg
mov
or
and
pop
adc
xor
fidivl
xchg
or
and
jle
aad
gs
pushf
test
cmc
and
mov
ret
add
sub
mov
ja
inc
pushf
loope
enter
mov
adc
push
sahf
fs
inc
sub
xor
jmp
lods
ss
add
sub
in
lahf
lahf
and
clc
and
dec
xchg
fwait
inc
imul
mull
aad
cmc
addr16
lods
int3
ljmp
bound
and
jmp
les
mov
ljmp
mov
mov
jbe
xor
push
std
and
and
stos
xchg
mov
push
std
push
jge
call
jnp
dec
cltd
jae
aas
jo
pop
test
je
js
subl
test
pop
and
pushf
rcrb
xchg
pop
push
sahf
out
sub
popa
push
xchg
sarl
daa
in
jae
sub
roll
dec
flds
and
neg
push
pop
mov
lds
adc
shlb
pop
sub
dec
cmp
dec
mov
adc
fmuls
or
mov
repz
jo
mov
sbb
inc
mov
outsl
or
sbb
dec
lods
pop
jge
push
cld
pop
fmuls
xchg
mov
bound
mov
icebp
ljmp
hlt
lcall
inc
lcall
xor
in
add
into
pop
pop
inc
mov
pushf
adc
cmp
scas
xchg
test
ljmp
das
addl
ficomps
lret
imul
into
mov
cmpsb
add
sub
adc
xor
jne
test
in
lock
push
dec
adc
roll
xchg
push
inc
jmp
mov
pop
xchg
sbbl
movl
les
addb
enter
pop
fstps
and
pushf
push
jecxz
je
cltd
mov
sub
dec
pop
hlt
jb
xor
or
inc
int3
mov
movsl
in
mov
inc
rcl
lds
int3
adc
mov
popa
and
icebp
lahf
xchg
dec
outsb
insb
sbb
imulb
sub
outsl
es
fucomp
cmc
arpl
inc
ja
cltd
or
xchg
mov
outsb
pop
dec
fs
repz
nop
pusha
push
mov
imul
stc
test
rol
loopne
out
les
mov
lret
cmp
sub
pusha
mov
test
das
mov
and
inc
outsl
outsl
ret
xchg
out
add
mov
pushl
dec
push
cltd
stc
cmc
pop
push
stos
jnp
dec
fnstsw
add
xchg
xor
add
movsb
lahf
adc
movsb
sub
add
push
in
jge
out
dec
mov
cmc
mov
adc
xchg
fldt
inc
inc
xor
xor
inc
dec
mov
push
cld
push
insl
push
cs
cli
xor
stc
addr16
sub
std
dec
es
iret
mov
mov
or
jge
fistl
pop
icebp
jb
inc
sti
xchg
inc
fistl
jo
shrb
mov
add
pop
jp
int
mov
or
nop
subps
inc
mov
push
sub
mov
mov
das
sub
cmp
dec
pop
orl
fwait
je
mov
sbb
mov
cld
mov
fldl
xor
mov
dec
stos
mov
adc
test
and
push
lods
cmpsb
sbb
in
mov
ss
pop
sub
dec
data16
orb
or
loopne
insb
insb
pop
jecxz
pop
lock
fs
fistps
jp
in
push
scas
push
mov
mov
sahf
mov
and
aaa
lret
mov
inc
mov
add
in
popf
xor
nop
add
mov
pop
out
sub
xor
insl
adc
leave
in
std
sbb
sub
push
pop
cmp
mov
sbb
std
test
sub
xchg
push
insl
lock
orl
jmp
mov
aad
lock
cmc
pop
fwait
ss
sub
cmp
push
sub
mov
fs
jb
push
push
and
cltd
add
lods
loope
es
inc
mov
aad
ret
push
test
push
sti
mov
push
arpl
jle
cmp
out
pop
ljmp
out
xlat
sqrtps
jno
xlat
push
out
pop
ljmp
adc
pop
scas
lret
mov
adc
fcmovnu
dec
cli
xor
mov
stc
pushf
sub
jp
mov
pop
in
mov
push
cmp
jmp
pusha
xchg
mov
xchg
dec
sbb
shrl
dec
gs
dec
adc
xchg
jb
pushf
dec
mov
xorb
inc
inc
dec
scas
pop
js
mov
pop
cmp
jp,pt
cld
or
mov
pop
inc
or
es
pop
daa
pop
jno
xor
repnz
lods
mov
add
xor
or
ret
jmp
fstps
std
push
int
rcl
push
stos
ljmp
lods
outsb
inc
ss
sbb
jae
mov
ret
pop
and
xchg
jle
or
ss
and
push
lock
mov
pop
xchg
and
pop
mov
test
insl
mov
cmc
outsl
and
dec
adcl
push
mov
addl
adc
scas
jno
test
cmp
ljmp
roll
mov
arpl
cmpsb
jecxz
jmp
sbb
push
imulb
jge
sbb
into
dec
hlt
sub
mov
popa
repz
push
xchg
pop
lcall
sbb
int3
xchg
mov
xor
outsb
mov
xchg
inc
push
jl
test
pop
mov
decb
sti
push
xchg
test
mov
insb
in
jb
stos
sbb
clc
pop
add
and
push
inc
dec
sbb
pushf
sub
dec
insb
cmc
mov
ja
gs
shll
popa
mov
jae
jg
pop
sub
sub
mov
pop
hlt
incl
adc
and
mov
loope
and
dec
xchg
loopne
mov
mov
jmp
movsl
mov
sbb
adc
inc
mov
mov
shll
add
pushf
dec
xlat
or
and
insb
out
sbb
mov
lahf
iret
sub
sub
aaa
mov
push
xchg
lods
mov
jecxz
iret
bound
das
aas
jp
sub
cwtl
cmpsb
negl
dec
mov
repz
ret
cmp
sbb
int
dec
jge
cmp
and
loopne
cmp
lcall
test
mov
cmovbe
cmpb
xchg
idivl
adc
pop
xorl
addl
out
fdivl
jbe
test
out
push
daa
aas
xchg
pop
xchg
or
lret
lret
out
mov
inc
cmp
sbb
inc
outsl
fstps
push
adc
jl
cmp
mov
cmp
mov
shrb
fidivs
orl
push
pop
pop
dec
icebp
scas
sub
mov
icebp
adc
test
loop
aas
das
fsubl
rcrb
fistps
xor
inc
lea
inc
mov
aas
mov
inc
aad
popa
jns
fs
xchg
cmp
div
repz
jns
psubusw
nop
ss
je
pop
ret
scas
pop
cltd
mov
fsubrl
test
loop
lods
mov
lret
pop
and
mov
mov
sbb
or
pop
out
jo
or
out
rclb
hlt
mov
mov
in
lret
sbb
cmp
jne
xchg
cmp
sbbl
das
xor
sub
fbld
lods
fs
lds
xor
fs
leave
add
push
mov
or
add
test
or
fistpll
leave
movsl
repnz
dec
mov
or
mov
sahf
in
jg
mov
insl
jo
adc
sub
or
shl
aas
popf
inc
inc
lods
cli
mov
jg
xchg
das
cmp
sub
pop
mov
mov
es
mov
cmp
xchg
loop
arpl
clc
push
pop
popa
outsb
mov
dec
psrlw
notl
bound
pop
iret
cltd
lds
mov
pop
pushf
adc
in
psubsb
jae
mulb
xchg
xor
push
ret
adc
imul
lods
sbb
scas
cmp
sbb
lock
jecxz
inc
dec
cld
cmpsl
or
outsl
jmp
jle
mov
jle
pop
xchg
add
cmp
divb
push
outsb
in
out
mov
adc
add
xchg
sub
stos
adc
std
popa
push
push
mov
les
pop
push
lock
add
mov
nop
inc
stos
mov
jp
jns
in
xorl
in
test
je
pop
inc
push
and
cs
stc
xchg
push
ret
mov
xchg
test
xor
cmpsb
mov
clc
cmp
or
cmp
in
cmp
pop
mov
adc
xor
adcb
or
sbb
mov
xor
fcom
xorl
and
push
push
lods
mov
into
push
js
add
or
fsubrs
ljmp
dec
jmp
adc
fyl2x
popf
or
sarl
sarl
pop
shlb
bound
sub
xor
loop
mov
jae
test
arpl
add
popf
push
repnz
outsl
cmc
cli
in
push
lahf
add
mov
jecxz
push
insb
cmp
leave
loope
hlt
in
cmp
add
addr16
aaa
cmp
data16
mov
jno
leave
jmp
jne
leave
pusha
push
rcll
pushf
push
or
sub
aad
aad
repz
and
outsl
mov
test
aam
out
sarb
mov
pop
and
xchg
cmpsb
lret
js
jbe
push
push
repnz
sbb
jge
je
sbb
int3
push
mov
push
cmp
mov
in
aam
pop
aad
pop
add
stos
and
idiv
test
imul
push
es
pop
jmp
jns
cmc
push
imul
sbb
sbb
pop
rcl
fnstsw
sbb
js
fcmovnb
xor
jecxz
xchg
adc
jae
shl
sahf
or
dec
mov
or
pop
popf
mov
repz
push
sbb
test
mov
in
sahf
outsb
add
push
add
push
jp
hlt
mov
xchg
jge
fs
add
sbb
push
xor
addr16
mov
or
jbe
stc
ljmp
cwtl
aaa
inc
movsb
xchg
xor
loop
pop
adc
loopne
ret
push
push
jmp
adc
aad
push
lcall
lds
adc
test
dec
mov
dec
dec
faddl
pop
sbbl
in
loop
repz
inc
lock
ss
cmc
xchg
xchg
inc
test
and
mov
ret
or
mov
xchg
stc
leave
fists
mov
adc
rep
call
int3
and
jb
popf
fdivr
outsb
sti
mov
mov
and
dec
mov
push
push
iret
pop
xchg
cmp
daa
call
push
mov
jecxz
jo
test
pop
pop
outsl
lcall
cmp
aam
dec
rclb
sbbb
insb
stos
push
subl
in
sub
cli
mov
sbb
sub
aad
cmc
test
insb
dec
orb
mov
rorb
addr16
push
lcall
test
cwtl
jmp
movsb
or
aad
push
in
jmp
sub
out
push
dec
aad
cld
out
ss
and
xchg
outsb
fdivs
lret
jmp
push
gs
je
jo
mov
std
stos
jb
cltd
push
jo
push
cmp
mov
dec
sbb
lods
inc
push
fsubrl
jb
jmp
add
inc
fistpll
add
out
cmc
outsb
mov
nop
test
cmp
out
mov
xor
mov
mov
cld
pop
movsl
loop
xchg
mov
mov
mov
in
mov
jno
dec
or
shlb
adc
loope
sub
xchg
out
or
add
in
cs
push
ficompl
adc
ror
jle
lods
add
cmp
test
jbe,pt
adc
lahf
mov
mov
xor
int3
test
dec
or
mov
movsl
sub
dec
xchg
testl
cwtl
inc
out
stos
arpl
mov
xor
mov
xchg
push
mov
cmp
rorb
in
lods
or
pop
cmpsb
and
icebp
xchg
pop
ja
xchg
out
ss
add
adc
inc
ss
add
ret
lods
push
into
stos
and
sbb
mov
rclb
jmp
imul
mov
ret
in
mov
daa
sub
push
fstp
call
sbb
shrl
dec
ficomps
idivl
cli
roll
add
jle
aad
add
cld
sbb
push
rcrl
or
dec
jns
pop
mov
vpunpckhbw
push
jne
icebp
jecxz
movsl
outsb
ljmp
dec
add
and
in
repnz
pop
mov
in
into
fisttps
or
jge
jae
add
stos
mov
and
or
jp
mov
je
aaa
sarl
mov
imul
and
lods
aam
jbe
outsb
nop
mov
aad
mull
and
mov
stos
xchg
and
outsl
cli
lret
imul
out
loop
ja
or
jg
sbb
xchg
xor
test
insb
sti
clc
dec
add
test
or
aam
inc
or
movb
xchg
movsb
imul
invd
outsl
jno
xor
cmp
orl
mov
push
or
jbe
outsl
pop
popf
outsl
loope
fildll
ljmp
frstor
fldl
add
cmc
test
mov
ss
inc
mov
cwtl
push
or
in
mov
jle,pn
dec
push
or
pop
fadd
jle
dec
pop
push
jg
mov
fimuls
mov
push
mov
inc
cmp
pop
xchg
dec
lds
cmp
repz
mov
cwtl
repnz
stos
gs
xchg
push
jae
pop
mov
into
mov
loopne
lret
icebp
stos
adcl
dec
fidivrl
cltd
clc
jne
out
imul
pushf
rclb
leave
or
aad
push
popa
mov
add
fnstcw
stos
test
insl
fsubp
jecxz
jle
ljmp
push
dec
add
testl
repz
call
adc
shrb
push
ljmp
and
jo
jns
mov
xlat
popa
movsl
cmp
push
and
jmp
jnp
iret
stos
sbb
cmp
pop
inc
push
enter
xor
test
mov
cmp
clc
lret
jp
icebp
mov
or
xchg
into
xchg
jl
lds
xor
xor
push
mov
mov
inc
test
negl
xor
mov
je
cmp
sti
cmp
mov
mov
xchg
ljmp
outsb
sub
call
das
mov
imul
sub
sbb
je
mov
stos
cmp
xchg
jmp
mov
imul
insb
and
sub
ljmp
mov
pop
pop
lods
aam
icebp
mov
outsl
mov
sbbl
cmp
arpl
outsl
movsl
repnz
test
out
dec
inc
test
call
jnp
jmp
dec
repnz
dec
and
fwait
iret
sbb
inc
mov
push
out
fistps
daa
pop
push
add
jg
mov
pop
sbb
stos
aam
js
jnp
adc
ror
mov
cmp
jbe
in
mov
cli
aas
in
loopne
enter
mov
mov
lock
lret
and
jg
out
cmp
insl
or
jae
gs
sbb
mov
movsb
cmp
inc
push
jle
dec
push
cmp
addr16
cmp
push
std
pop
fwait
push
xchg
jb
dec
add
adc
inc
repnz
add
stc
and
insb
in
fs
jg
in
das
pop
xchg
bound
xchg
out
and
jns
mov
jno
je
jo
fistpll
imul
pop
or
add
gs
insl
pop
xchg
insb
repnz
adc
or
push
cmpsb
add
pop
sub
and
vcvtdq2ps
sarb
fisubs
push
jbe
xchg
sub
rcll
call
shlb
lods
xlat
mov
movsb
movsl
dec
adc
mov
stos
lea
or
dec
jbe
sbb
xchg
pop
mov
add
ds
mov
daa
and
mov
adc
loop
fldcw
pop
mov
push
shlb
sahf
stc
outsb
lods
insb
fwait
int
ljmp
stos
mov
stc
pop
outsl
repz
lret
sub
decb
mov
mov
push
sbb
mov
fldenv
ljmp
icebp
ljmp
inc
push
sbb
mov
ret
mov
add
jg
mov
pop
fnstsw
dec
in
mov
out
mov
lcall
addb
jo
push
pop
mov
adc
xchg
mov
dec
testb
xchg
jns
jo
jecxz
hlt
push
cmc
push
lea
cmp
sub
cltd
cmpsl
out
or
dec
push
mov
xchg
lcall
call
cmp
and
pop
sub
mov
inc
push
rcll
scas
rcrl
out
std
push
sahf
sub
push
xor
mov
orl
lea
add
cmpb
push
pop
repnz
sbb
cmpsl
ja
stc
inc
mov
mov
mov
popf
popl
popf
fdivl
repz
sub
cmp
xchg
jns
jo
addr16
out
cmp
sarb
loopne
push
mov
ret
iret
push
ret
cmp
xchg
push
iret
gs
pusha
cmp
fiaddl
daa
insb
jp
out
sbb
mov
inc
xor
mov
pop
dec
add
jo
xor
stos
push
mov
or
leave
aad
mov
hlt
rol
mov
fildl
mov
rolb
aas
xchg
add
rep
sahf
and
push
repz
pop
jmp
pop
xchg
data16
outsl
fwait
sbb
push
mov
mov
and
cltd
icebp
aas
push
stos
add
pop
std
and
test
lea
jb
arpl
pop
xchg
mov
xchg
pop
push
adc
adc
lret
cmp
mov
sub
jle
in
lock
fsubs
jns
mov
pop
pop
mov
jb
aas
fwait
mov
das
sbb
add
enter
cmp
jnp
push
sub
and
pusha
xlat
jno
mov
mov
pushf
xchg
pushf
mov
sub
pushf
sahf
std
ret
in
sbb
sub
ss
pop
cwtl
je
clc
mov
loope
lock
and
mov
jmp
out
out
sbbl
jns
movsl
aam
push
fnsave
pushf
sahf
shlb
jne
hlt
leave
adc
sub
mov
rcl
jbe
loopne
cmp
les
movsb
mov
sbb
or
push
fidivl
fdivs
sub
mov
ljmp
cmp
cwtl
inc
fidivl
fcomip
lret
not
dec
push
lods
push
movl
pop
cmpl
dec
fisttpl
add
movsb
or
add
push
xor
jg
pop
push
mov
lahf
lret
mov
pusha
add
in
lock
mov
push
mov
int3
sahf
jge
icebp
jg
jge
mov
aas
sbb
out
sbb
sub
adc
into
xor
pop
notb
push
sbb
sbb
xor
mov
jp
mov
std
mov
fisubs
fwait
decl
adc
inc
mov
pop
inc
xchg
jae
rol
sbb
jecxz
or
mov
mov
cwtl
push
clc
inc
test
in
add
inc
mov
add
dec
adc
out
inc
jg
cmp
or
pop
les
mov
xchg
cmp
push
sarb
mov
mov
cwtl
cltd
xchg
push
inc
icebp
dec
arpl
add
push
arpl
test
cmp
inc
jns
cmp
dec
mov
enter
sbb
dec
dec
lock
push
or
cmp
inc
jmp
pusha
mov
inc
jno
pop
jg
mov
inc
and
daa
imul
das
mov
xchg
movsl
mov
push
sbb
fstpt
es
jl
push
ret
test
divl
pusha
stos
negl
cld
mov
int3
in
lret
rcrb
mov
sbb
mov
mov
mov
pushf
sub
mov
cli
sahf
daa
repz
xchg
xorl
stos
mov
pop
and
cltd
pop
adc
sti
das
mov
loope
clc
fnstenv
xor
sahf
sbb
xchg
outsl
aas
cltd
add
cmpsl
sbb
jnp
shlb
push
inc
cltd
notb
test
cltd
iret
adc
scas
jmp
push
les
nop
mov
or
cmp
mov
insl
out
mov
enter
imul
int3
jno
inc
sbb
jb
mov
xchg
xchg
jae
mov
mov
jp
push
mov
adc
jbe
and
cmc
add
or
jno
or
add
push
xchg
in
cmpsl
lea
fcmovu
push
imul
sub
scas
test
popa
imul
sahf
jbe
cld
sub
inc
test
lock
inc
dec
es
lret
xlat
sti
mov
mov
nop
outsb
xchg
roll
bound
das
push
rcrb
sub
sub
xor
outsl
sub
out
push
jnp
sarb
fwait
cltd
std
vmovhps
fsubp
xor
jno
mov
xchg
call
nop
sbb
inc
pop
xchg
lret
std
push
into
arpl
movsb
sub
add
cmpsl
mov
into
dec
and
jne
aaa
adc
jae
sbb
in
nop
mov
stos
std
push
dec
adc
xor
mov
adc
rcrb
mov
cli
xchg
or
pop
cmpsl
dec
fsubl
sarb
inc
fisubl
adcl
andb
jb
popa
cmp
jae
add
inc
sbb
pop
pop
jmp
insb
rcrb
push
fiadds
daa
repz
insb
xlat
pop
imul
fwait
sbb
mov
fwait
jbe
push
fdivs
jne
mov
scas
outsb
popf
xor
mov
adcl
jb
cmp
jmp
sbb
je
push
mov
shll
repz
xchg
test
inc
or
clc
rcrb
mov
lea
vorps
push
add
push
xor
outsl
imul
cwtl
cmp
add
jbe
popa
xchg
and
jle
into
sub
xchg
push
loope
leave
mov
fs
push
pop
mov
xchg
xchg
js
push
lcall
pop
cli
shrl
sub
sub
adc
ja
cs
sbb
xor
push
jmp
sbb
jg
mov
addr16
push
mov
lret
loope
aad
fisubrl
or
xchg
inc
inc
fildll
in
dec
mov
adcl
lods
dec
movsb
adc
pop
jg
test
push
ret
jno
data16
es
jae
loopne
fwait
into
inc
sbb
sar
push
les
call
mov
daa
push
test
iret
sub
jae
jne
fidivrl
ret
push
cs
jae
mov
insl
movsl
orb
xchg
sub
dec
xorl
leave
sub
mov
repz
js
mov
or
insl
mov
sbb
movsl
pop
lret
dec
cmp
lea
addr16
cmpsl
sbb
pop
or
test
sbbl
ficompl
xchg
or
dec
adc
pushf
inc
clc
js
faddl
xchg
popa
popf
dec
cmp
mov
mov
mov
xorl
jg
mov
dec
mov
mov
mov
std
jnp
add
sub
inc
cld
shrb
cmp
sbb
and
fsubrl
in
and
adc
xchg
int3
jbe
or
jl
out
je
fidivl
jl
jnp
jl
lcall
jno
call
insb
lahf
repz
sub
xchg
stos
shlb
lret
push
cmp
adcl
fcmovne
dec
jecxz
sbb
and
mov
outsl
out
pop
xchg
aas
mov
incb
push
mov
pop
pushl
es
sub
xchg
and
cmp
lret
sbb
adc
pop
rcrl
and
mov
jns
adc
lea
xchg
sub
out
fld
sbb
add
clc
adc
pop
or
jnp
and
scas
fwait
call
mov
sbb
daa
stos
sub
cmp
xchg
phaddd
dec
lcall
sub
and
sub
and
test
jmp
inc
out
pop
push
lock
hlt
lret
cmp
and
stc
jge
mov
arpl
jmp
js
add
ret
clc
xchg
imul
dec
into
cmp
or
inc
or
pop
fistpl
sarb
lret
icebp
push
test
sahf
mov
pop
aaa
mov
fistpll
dec
jbe
mov
inc
fmul
enter
inc
push
jns
add
add
shll
lret
negb
and
cmp
subl
outsl
mov
pop
cld
or
push
mov
das
jne
xor
call
mov
xchg
mov
push
int3
jecxz
xchg
les
mov
or
inc
insb
mov
into
fst
sub
addb
jns
bound
aam
pop
mov
mov
mov
jp
jl
repnz
test
sahf
outsl
das
popa
fimuls
pop
out
sar
add
iret
movsl
iret
mov
sbb
adc
imul
cmp
mov
das
sbb
enter
xchg
xchg
lds
notb
dec
into
jns
add
ja
add
fst
lahf
inc
pop
lahf
adc
popa
add
mov
jecxz
add
dec
cmpsb
ljmp
mov
pop
ficomps
jns
add
inc
out
xchg
add
sbb
cmp
push
inc
pop
cmc
mov
push
push
pop
dec
sbb
ja
mov
sbb
sarl
sub
fs
js
jb
lock
push
imul
xchg
jmp
xchg
in
add
adc
cmp
scas
sti
dec
sti
movl
adc
lahf
inc
popf
mov
mov
push
jno
mov
jb
push
or
or
stos
lds
pop
jnp
scas
lods
cwtl
mov
xlat
sbbb
test
adcb
sub
mov
inc
xchg
call
mov
mov
ret
or
lods
xchg
sbb
ficoml
push
pop
mov
mov
add
pushf
add
mov
and
bound
lods
loopne
cmp
cmpsl
lods
arpl
sub
pop
pop
rolb
je
xor
xor
in
xchg
scas
mov
mov
shrl
outsl
ss
aaa
pop
fistl
add
mov
rcrb
jne
sub
xchg
rclb
mov
mov
je
dec
pop
loopne
cmc
lret
sbb
addr16
xlat
xchg
dec
pop
rcrb
mov
aaa
jge
mov
and
stos
push
aaa
cltd
xchg
lds
inc
adcb
mov
jmp
dec
and
int
xor
test
inc
loope
xchg
xchg
push
jmp
pushf
lret
cli
cld
lret
fiaddl
in
ljmp
jno
mov
inc
dec
add
cmpsb
push
loope
ret
xor
js
mul
push
lds
or
mov
mov
sbb
mov
outsb
xchg
add
inc
repz
sbb
movsl
movsb
clc
stc
dec
push
repnz
jle
mov
rcrl
mov
xlat
cmp
inc
aam
shll
repz
ss
inc
aam
mov
insb
subl
cmpsl
std
mov
ljmp
sbb
pop
loopne
iret
addr16
sub
inc
repnz
mov
mov
pushf
mov
test
mov
xchg
mov
icebp
insl
push
cmp
aam
repnz
sub
test
sbb
sbbl
fisubs
iret
jo
mov
insb
gs
sbbl
jecxz
sti
and
out
mov
mov
adc
jmp
mov
out
jp
sbb
gs
test
xchg
xor
imulb
cmp
repz
xor
mov
lret
dec
xor
mov
pop
add
inc
pusha
xor
lods
in
in
icebp
jb
sbb
jns
add
jnp
sarb
js
fmul
lret
jnp
mov
mov
and
fimuls
cmpl
lea
int
jns
sbb
dec
fistl
or
ja
sti
dec
adc
jmp
mov
or
pop
loopne
push
xchg
push
sub
jnp
jle
pop
fwait
jo
or
leave
dec
mov
scas
mov
xchg
stos
addr16
jnp
pop
xchg
mov
outsl
cli
data16
cmp
adc
repnz
scas
dec
or
dec
je
pop
in
pop
xchg
mov
or
and
dec
int3
jne
fwait
adc
cmc
xchg
sbb
inc
hlt
add
xchg
lock
sub
pop
test
inc
in
mov
push
das
dec
xchg
in
pusha
pop
fmuls
icebp
leave
xor
push
mov
fdivrp
xchg
pushf
dec
clts
adc
std
test
repnz
divl
lds
fstps
ljmp
sub
pop
clc
sbb
xchg
pop
jae
jns
aas
aas
cmp
jae
lock
cs
push
in
gs
push
ret
insl
dec
push
push
ret
or
cmp
pop
sbb
and
arpl
push
mov
mov
jb
xchg
dec
ret
push
sti
ficoml
in
in
push
mov
cmp
icebp
jmp
xchg
or
push
jo
sbb
dec
js
xlat
dec
mov
loope
rep
idivb
ja
xor
roll
lcall
lret
setge
mov
imul
xchg
or
cmp
push
xchg
cld
dec
xor
add
sbb
pop
rorl
loopne
ret
mov
out
xchg
dec
inc
or
or
pop
sbb
adc
push
cmpsl
loope
mov
mov
cmc
xchg
mov
icebp
int
mov
push
dec
mov
jp
sbb
lcall
sbb
jb
mov
nop
or
and
mov
test
out
mov
mov
xchg
lds
mov
out
imull
mov
mov
adc
mov
fisttpll
or
push
inc
lea
and
repnz
repz
inc
movsb
pusha
shll
out
jg
jmp
aad
insb
dec
or
fsubrp
shlb
xlat
inc
test
adc
fwait
lahf
adc
pop
xchg
repz
sar
jnp
push
mov
or
shlb
mov
sub
or
outsl
scas
xchg
adc
loope
js
push
loope
xchg
out
mov
lods
cmp
push
dec
xchg
push
std
les
push
ret
leave
jnp
shlb
adc
jne
and
or
mov
testl
aam
fstpt
adc
fdivrs
adc
xor
xchg
pusha
or
je
cltd
fldcw
gs
outsb
pop
push
mov
outsb
gs
push
lods
xchg
daa
clc
mov
mov
loop
aam
out
test
test
pop
popa
jg
push
mov
lock
or
jo
xchg
loop
sub
mov
not
mov
mov
mov
jbe,pt
ficoml
popa
insl
fcoml
cmp
xchg
sbb
xadd
sub
sbb
out
mov
sub
dec
scas
sbb
and
cmp
aad
notl
xchg
sub
stos
js
adc
insl
lods
xchg
call
imul
icebp
insl
push
call
dec
inc
xchg
pop
mov
scas
add
aad
ljmp
xor
jmp
lret
pop
fiadds
in
jo
hlt
push
xchg
jne
js
add
arpl
and
dec
scas
xchg
push
cmp
stos
lcall
push
sub
call
add
bound
cmp
enter
mov
sbb
xchg
lods
pop
int3
cli
xorl
out
sbbl
mov
lahf
daa
bound
inc
inc
adc
ss
repnz
pop
cmpl
jnp
je
or
fnsave
cmp
cli
and
std
cmp
pop
mov
cmp
mov
stc
aad
sbb
push
inc
lahf
push
fisttps
dec
dec
test
mov
mov
mov
ljmp
jle
repnz
mov
sub
pop
sti
popl
lods
lcall
sub
ja
mov
lret
push
das
push
stos
es
inc
std
sbb
aas
cwtl
add
pop
mov
pop
pop
jecxz
inc
dec
fnstenv
jecxz
lea
repz
jl
jae
dec
sbb
test
sbb
stc
mov
fstpl
inc
incl
sub
ret
vunpckhps
shll
ret
outsb
pop
inc
add
push
in
inc
lea
sbb
std
mov
and
cwtl
and
mov
enter
call
cwtl
shr
rcrb
orb
inc
mov
or
std
jo
inc
ret
in
dec
jle
stos
fldenv
pop
pop
mov
mov
dec
inc
xorl
nop
cmp
mov
lea
and
fcompl
mov
jecxz
lea
loop
andb
cmp
mov
xchg
pop
inc
dec
ret
mov
stos
in
stos
and
fwait
sub
loop
stc
pushf
or
inc
aas
cmpsl
pop
mov
popa
push
movsl
xchg
and
in
jl
in
inc
enter
xor
jecxz
cmp
rcr
sub
inc
sbb
add
inc
sub
sub
xlat
sbb
dec
cmp
mov
test
stos
fs
pop
or
mov
mov
xchg
and
movsl
xor
dec
mov
mov
shl
xor
or
push
dec
cmp
inc
jp
mov
sbb
mov
hlt
out
and
mov
jecxz
add
mov
pop
enter
leave
push
xor
add
xchg
push
mov
decl
and
mov
adc
or
xchg
dec
ret
mov
and
leave
dec
mov
std
pop
cmp
pop
jo
pop
pop
cltd
jecxz
outsb
jne
scas
cwtl
mov
das
in
inc
push
and
push
sub
pop
add
dec
and
push
xchg
icebp
or
std
dec
sar
push
mov
push
inc
shrl
xchg
outsl
lret
fiadds
movsl
out
xchg
mov
mov
fdivp
dec
add
in
cltd
addr16
jae
movl
cmpsb
lret
and
sti
jl
xchg
repz
push
bound
lea
sub
nop
sbb
push
add
or
push
xchg
adc
cli
paddusw
movsl
and
pop
jbe
out
cmp
xchg
inc
test
cltd
fucom
push
ljmp
push
adc
and
push
xor
dec
mov
add
je
fmuls
ljmp
lods
pop
push
sbb
rorl
push
lods
pop
inc
push
repz
mov
shlb
stc
and
call
test
mov
inc
call
sub
cltd
rorl
pop
fldenv
xchg
imul
cmpsl
mov
or
mov
mov
and
lahf
pop
pop
in
sub
jl
in
dec
cmc
rcrb
mov
push
jle
inc
and
outsb
add
insb
xor
or
xchg
jne
mov
xchg
orl
lret
cmp
inc
stos
fstl
jge
das
mov
sub
and
lcall
mov
jbe,pt
pop
inc
mov
sbb
pop
push
mov
or
or
xchg
loope
xchg
sub
call
cmp
mov
sbb
in
stos
add
aad
mov
sbb
insl
xchg
test
jmp
and
sub
jns
dec
outsb
inc
mov
pushf
and
ret
mov
inc
sbb
mov
lret
jmp
mov
mov
loopne
aad
aas
imul
popf
roll
add
push
xchg
xchg
cli
jmp
gs
cltd
insl
jmp
adc
pop
cmp
neg
ret
fdivl
xor
jge
pop
xchg
mov
dec
ret
xchg
mov
in
xchg
movsl
cld
icebp
repz
in
stos
in
enter
out
jmp
push
test
jb
lahf
dec
outsb
sub
mov
testb
and
popf
insl
movsl
fistl
sub
stos
movsb
and
add
pop
adc
pop
mov
int
xchg
int3
out
popa
gs
aad
cmp
pop
mov
out
mov
cmpsl
mov
dec
xor
pop
fwait
loope
sbb
dec
cmpsb
pusha
shrl
inc
adc
negb
dec
int
mov
arpl
in
inc
subb
out
and
sub
lea
data16
out
mov
test
je
fs
sub
adc
aam
sbb
aas
fwait
popf
int3
push
pop
arpl
push
inc
test
adc
scas
jns
insb
ljmp
lcall
inc
mov
testb
xor
and
iret
or
daa
sbb
sahf
dec
loope
gs
mov
pop
and
inc
inc
mov
ror
adc
imul
movl
lcall
das
xchg
inc
ds
xchg
fneni(8087
into
loopne,pt
fldcw
fldt
pop
ficoml
and
inc
or
aad
push
mov
xchg
cmpsb
ds
push
mov
xchg
aad
mov
mov
xchg
pop
push
xlat
xor
sbb
fcoml
mov
adc
mov
out
addr16
mov
xchg
ret
cltd
loop
dec
add
and
sbb
je
sub
call
pop
movsb
fwait
sub
xchg
jns
mov
loop
jbe
shll
pushf
subb
mov
mov
movb
out
or
xor
add
rcl
popa
or
ret
rorb
xor
dec
pop
jge
jns
jae
mov
add
sbb
rclb
xlat
in
jmp
out
mov
fwait
jnp
mov
xchg
dec
cmpsl
rclb
and
fadds
xchg
mov
mov
mov
in
cmp
inc
push
int3
push
mov
mov
jp
push
cmpsl
or
mov
push
es
pushf
push
inc
out
fisubl
aas
jmp
mulb
push
inc
push
sub
ds
arpl
cmc
repz
scas
ds
add
or
in
mov
ret
and
cmp
in
shll
push
jg
and
add
cld
and
and
insb
jnp
mov
and
div
inc
scas
iret
cmc
dec
mov
push
mov
xchg
icebp
xor
adc
jp
xchg
xchg
popf
int
and
xchg
inc
call
xchg
ljmp
popa
or
and
aaa
repnz
add
cmpsl
pop
pavgw
mulps
nop
es
fdivrp
cmp
dec
shr
add
fcoms
test
mov
push
ds
dec
mov
jnp
inc
add
loop
mov
aam
or
jno
test
aam
ret
packsswb
xchg
loop
fistps
lahf
sub
ds
inc
xchg
cwtl
js
decl
int3
loop
shrl
ficomps
es
xor
dec
imul
mov
aad
xlat
sub
pop
xor
lret
lea
adc
scas
loope
sbb
scas
cmp
pop
and
fldt
in
ret
je
cmp
pop
xor
cld
add
into
lcall
pop
xor
das
jo
test
cli
in
repz
or
jmp
dec
out
jle
je
dec
and
sbb
clc
jle
outsl
hlt
jae
and
hlt
push
dec
es
dec
clc
fisubrl
lcall
pusha
add
enter
out
xchg
jne
xor
call
dec
fcmovne
ret
dec
das
dec
fistl
sahf
dec
mov
es
push
mov
inc
sbb
jecxz
adc
and
gs
mov
mov
sub
xchg
add
inc
in
mov
test
insb
sbb
cmp
nop
jp
outsb
mov
in
daa
loope
out
das
pop
je,pn
std
jbe
repnz
andl
scas
push
clc
cmp
leave
shl
pop
cmpb
mov
adc
mov
in
les
dec
cmp
rcrl
std
flds
jle
fcomp
mov
hlt
pop
nop
pop
mov
outsl
lods
xor
add
and
and
cmpsl
xor
in
roll
cltd
nop
lret
push
push
cmpsb
jecxz
jae
test
aam
mov
enter
mov
leave
xchg
dec
sub
out
lods
jl
xlat
jle
ret
cmpsb
orl
inc
mov
ds
and
das
push
adc
jp
dec
cld
hlt
leave
mov
jp
mov
jne
icebp
mov
xchg
fs
add
dec
loope
and
sbb
mov
popa
inc
add
in
stos
stos
push
ss
push
sbb
jge
or
ljmp
lret
into
jp
imul
mov
mov
push
rcl
inc
xchg
jae
fisttps
ret
lods
cmp
cmp
imul
jae
or
xorb
imul
jnp
fxch
loopne
das
dec
xor
push
mov
jp
aaa
or
test
paddsb
mov
lea
add
nop
fcmovb
lcall
xchg
popa
dec
inc
arpl
sbb
push
pop
or
sbb
xchg
repz
jne
mov
pusha
inc
call
mov
stos
adc
push
xchg
outsl
push
bndldx
in
dec
adcb
pop
in
sub
mov
test
and
jg
test
cmpl
inc
inc
mov
and
lcall
rcrb
lcall
cltd
mov
lods
fucomip
mov
lea
in
arpl
sub
mov
pusha
gs
cmp
sbb
addr16
fidivs
mov
stos
sub
jp
mov
das
xorl
push
lock
stos
pop
push
scas
jae
mov
loope
xlat
out
mov
and
pop
sahf
cli
push
lcall
adc
mov
inc
cmp
jmp
lea
into
xchg
pushf
dec
mov
aas
hlt
fsub
xor
cmpsb
fiadds
push
insl
add
sbb
loopne
sub
jnp
sub
ds
jne
addr16
adc
sub
cmp
mov
rcrb
fisubrl
dec
imul
sbb
outsl
pop
xchg
fcom
cltd
testl
adc
cmpsl
lock
int3
frstor
cmpsb
push
rcrb
lcall
or
xchg
popf
repnz
mov
sub
pop
fldt
or
add
adc
jns
ret
xorb
ret
nop
or
add
aaa
jb
mov
inc
fs
iret
ja
pop
xor
sbbb
mov
divl
and
adc
xor
incb
outsb
je
or
xor
dec
pop
add
popa
add
jl
pushw
sbb
push
and
lcall
adc
imull
mov
lock
mov
sub
xor
jns
roll
popf
jne
bound
call
mov
pop
ja
xchg
movsl
leave
les
xlat
cld
insb
jae
push
cmc
les
in
pop
sbb
pop
add
push
aaa
pop
sbb
ljmp
cmp
pop
xchg
push
aaa
fs
push
out
pop
push
in
pop
loopne
inc
cmpsl
jno
jae
sahf
sub
sub
repz
adc
arpl
fwait
pop
js
lcall
dec
outsb
outsb
aaa
negb
imul
fistpl
repz
add
push
jl
sbb
inc
sub
xchg
negb
dec
or
fldt
jle
icebp
jg
mov
add
or
xor
pop
cmpsl
or
mov
mov
imul
pop
jne
cmp
push
das
out
mov
xchg
cmp
bound
add
insb
lret
mov
ds
jbe
stc
jge
fld
push
in
mov
sbb
mov
mov
notl
aaa
daa
mov
cmp
call
mov
pop
inc
inc
dec
ss
test
add
fnsave
pop
pop
xchg
adc
test
xor
pop
mov
inc
add
icebp
sarb
dec
push
imul
xchg
rolb
cmp
cmpsb
push
pop
and
jo
sub
outsb
adc
and
and
addr16
es
push
lods
push
lea
sbb
pop
les
and
inc
add
lods
push
fcomip
fldcw
cmp
enter
lret
mov
mov
xlat
rcr
icebp
test
repz
sbb
mov
add
int3
lahf
xchg
call
fdivs
lcall
cmp
and
out
push
push
and
push
mov
mov
jecxz
cmp
repz
aas
daa
hlt
push
inc
jle
test
mov
mov
inc
dec
mov
int3
scas
adc
addl
neg
xor
inc
ret
sbb
movsl
mov
adcl
push
jb
pushf
dec
shll
dec
and
jno
pop
dec
test
mov
repz
push
mov
in
push
sub
lods
test
or
jg
push
push
add
and
in
mov
mov
fs
xchg
stos
jno
mov
sbb
push
ret
push
sti
jmp
xorb
inc
sub
ds
xor
cmpsb
mov
push
in
divb
jp
das
adc
xor
imul
pop
inc
into
adc
xchg
xchg
ja
or
pop
out
inc
popl
scas
adc
push
mov
test
fistpl
cmc
sub
hlt
lcall
pop
pop
cmp
and
fsts
sti
pop
xchg
sub
call
xor
insb
and
cmp
lahf
cwtl
xor
cltd
pop
es
in
negb
xchg
in
mov
cmp
leave
outsl
push
imul
jle
lcall
push
mov
xor
cmp
jno
popf
xor
xor
repz
and
inc
dec
dec
mov
insb
cltd
das
nop
out
mov
negl
fs
pop
lcall
sub
push
cmpl
iret
mov
cli
adc
pop
or
lds
lret
mov
enter
xor
xchg
pop
outsl
lret
xchg
incb
pop
xchg
sbb
mov
cmp
loop
sbb
jle
sbb
enter
cltd
xchg
lahf
mov
cmp
add
into
fldt
xchg
xchg
fidivrl
loopne
in
adc
imul
sti
dec
mov
fdivs
and
shrl
cmpsb
xor
push
adc
push
sbb
sti
mov
add
rol
add
lahf
and
jl
clc
out
insb
or
push
fdivr
adc
or
add
xor
icebp
mov
pop
sahf
adc
std
or
mov
repnz
mov
mov
jb
pop
pop
or
adc
dec
push
in
push
jo
decl
leave
sub
pop
lret
lods
cli
aaa
adc
or
bnd
lahf
push
out
test
dec
add
inc
pop
xor
icebp
jmp
jbe
lret
xchg
insb
mov
xlat
and
stos
sbb
outsb
mov
sbb
aam
clc
push
xchg
incb
fwait
ljmp
mov
sub
lods
mov
mov
popa
mov
inc
mov
mov
addr16
jae
scas
sbb
clc
jmp
clc
or
repnz
dec
sub
out
mov
adc
xchg
adc
repz
sbb
inc
stos
adc
push
mov
cmpsb
fdivl
loopne
into
xor
sbb
daa
fbld
sub
lea
add
pusha
imul
aas
in
mov
or
or
daa
fsubrp
arpl
jmp
mov
js
loope
jo
lret
lret
test
pop
mov
testb
fcmovnu
push
lods
and
mov
push
mov
movsb
imul
add
out
mov
or
clc
clc
fidivs
add
and
add
push
mov
idivl
pop
adc
mov
push
test
pop
movsb
mov
stc
pop
xlat
lret
inc
push
push
ror
or
ret
scas
mov
clc
bound
xchg
xlat
push
jmp
into
subb
frstor
ret
mov
jo
mov
outsl
test
xchg
or
pop
cmc
jge
push
adc
leave
and
sub
das
ret
and
or
nopl
lea
jl
loop
lods
dec
jl
loope
xor
fdivrs
jne
sub
or
push
repz
sarl
mov
leave
nop
cmpsb
ds
mov
popf
fisttpl
ficompl
push
hlt
inc
cld
add
sbb
xchg
jmp
js
mov
in
pop
jp
loop
jl
adc
imull
iret
lods
dec
xor
mov
mov
ret
rclb
lcall
ret
sbb
adc
xor
cmc
push
sahf
pop
mov
or
xchg
and
cmpsl
push
int
pop
inc
jnp
add
adc
inc
adc
xor
ljmp
subl
push
shr
jno
push
into
push
aaa
mov
add
cwtl
inc
push
hlt
xchg
pushf
dec
jge
repz
or
call
pushf
push
ss
stos
push
adc
mov
mov
das
add
push
xorl
fiadds
cmc
subb
push
sbb
xchg
pop
mov
js
hlt
mov
hlt
gs
in
jne
mov
nop
loope
sub
cmp
mov
je
loope
inc
inc
aaa
mov
jle
das
dec
and
scas
sub
lds
xor
cmc
shrl
mov
dec
mov
jb
stc
ja
xchg
or
push
mov
lcall
jno
dec
xor
aad
pop
lret
xor
xor
adc
divb
hlt
xchg
and
shrb
fwait
rol
push
fs
movsb
pop
jle
mov
cld
stc
fnstenv
repz
jge
sbb
xor
and
push
stos
pushf
shrl
push
add
jge
mov
ljmp
jl
pop
dec
push
dec
add
push
out
sub
dec
push
pop
test
cs
and
mov
jecxz,pn
icebp
leave
cltd
dec
add
adc
lock
mov
and
fdivl
mov
addr16
test
push
mov
xchg
dec
or
or
cmpsl
loope
roll
icebp
inc
sbb
imul
fistps
outsl
push
scas
sub
rclb
sub
mov
mov
push
pushf
lds
jmp
ljmp
push
sub
xor
push
inc
jle
dec
js
ret
loope
jg
ret
push
jp
sub
mov
xor
xchg
lcall
jns
or
mov
sbb
mov
mov
sbb
pop
les
push
out
std
add
xor
jb
cmp
xorl
push
mov
push
sbbb
leave
mov
jae
cmp
ficompl
insl
loopne
adcl
add
dec
sub
addl
mov
add
scas
sbb
frstpm(287
xchg
aad
xor
sbb
add
adc
int3
pop
out
xchg
jl
fbstp
xchg
pusha
js
xchg
jno
inc
add
sti
cmp
mov
pop
cmp
jecxz
push
cltd
hlt
cwtl
push
jge
jo
mov
jle
adc
dec
and
cwtl
js
adc
icebp
or
mov
dec
push
mov
data16
inc
dec
sbb
pop
mov
fnstcw
push
jne
mov
xor
test
daa
cmp
mov
aad
xchg
addb
repnz
mov
test
mov
inc
jle
inc
jns
mov
loope
fwait
daa
dec
sbb
out
xor
test
dec
mov
xor
loope
add
das
mov
mov
adcb
push
jmp
das
and
popa
cmp
jecxz
adc
into
xchg
into
loop
subb
test
jecxz
sbb
cmc
ljmp
ja
lds
xor
sbb
pop
mov
hlt
and
mov
adcb
add
outsl
xchg
fldcw
add
sub
mov
jnp
loop
and
ljmp
adc
or
arpl
test
scas
and
mov
adc
mov
fs
push
cmp
pop
test
lock
xchg
push
dec
inc
xor
push
or
jp
clc
rclb
dec
enter
mov
lcall
push
jge,pt
push
cmp
or
or
pop
push
lahf
xchg
push
sub
ret
fwait
lds
sarb
leave
test
cmpl
add
ljmp
repz
aas
jns
mov
pop
inc
pop
cmpb
addr16
jle
lea
sub
dec
add
xor
sbb
sbb
xchg
add
pop
adc
sub
push
aaa
leave
push
jge
into
popa
cmp
mov
ljmp
pop
gs
arpl
mov
pop
pop
add
add
and
inc
mov
lock
inc
adc
jge
sbb
outsb
pop
out
inc
cli
fs
test
cmp
sbb
mov
adcl
lea
mov
pushf
cli
inc
fwait
jno
sbb
push
std
insb
push
xchg
test
adc
fildll
aam
notl
sub
sbb
dec
add
std
jp
repz
dec
cmp
js
enter
in
sub
inc
in
scas
pop
adc
cmp
int3
stc
adcl
sub
and
sub
int
sbb
imul
insb
dec
decb
shrb
pop
insl
pop
and
aad
sub
in
dec
shrb
das
jae
pop
in
movsb
mov
fistl
jmp
push
mov
cmp
dec
call
dec
add
cmpsb
xchg
sahf
jb
and
and
rcrl
mov
fucom
jecxz
pushf
mov
js
add
inc
arpl
ret
mov
enter
ror
add
pop
adc
inc
lea
shll
ret
add
fisubrs
dec
mov
inc
pop
mov
aaa
sbb
adc
jmp
pop
sub
fldl
das
jp
cli
fwait
cwtl
adc
mov
mov
cli
cmpsb
std
xor
sub
xchg
iret
mov
insb
arpl
std
mov
fistpl
stc
mov
dec
xchg
in
imul
or
cmc
mov
in
jecxz
les
mov
xchg
in
fistpl
loope
test
xchg
decl
test
cmp
stos
shl
fstl
bswap
jae
lods
inc
mov
je
add
dec
jno
add
aam
jae
mov
jno
ret
jno
sbb
std
jo
or
cmp
add
mov
or
jmp
jmp
cltd
inc
lods
sbb
jle
or
push
dec
aam
pop
jle
dec
or
pop
xor
inc
das
lcall
data16
pop
sub
cmpsl
push
inc
xor
and
mov
popa
stc
sub
js
jge
jl
sub
inc
movsb
shll
jp
jmp
loop
roll
and
divl
add
cwtl
outsb
xchg
pop
xchg
fadds
cmpsl
jp
jnp
cmp
xchg
push
push
mov
out
les
mov
mov
pop
fdivl
adc
sub
cmp
adc
shl
cld
movsl
in
scas
ret
test
xchg
popf
sub
popa
in
outsl
mov
adcb
add
bsr
sbb
std
cmp
xor
and
pop
pop
lret
int3
popf
pop
out
mov
test
add
mov
aam
adc
cmpsb
sbb
xchg
dec
add
adc
popf
lock
add
js
mov
and
bnd
jp
add
push
repnz
ljmp
mov
rorl
pop
push
add
aas
pop
testl
fisubl
test
and
rolb
adc
add
data16
insb
mov
hlt
int
dec
push
inc
std
inc
jnp
jo
test
fidivrl
int3
ret
add
ret
enter
pusha
lret
push
mov
scas
or
or
push
push
sub
cmp
out
cmpsl
adc
decl
stc
fwait
iret
or
pop
mov
adc
jge
mov
mulb
xchg
aaa
inc
fstpt
lret
call
jb
outsl
sub
mov
fists
lcall
arpl
movsb
lret
sub
pop
cmp
push
loope
or
out
push
push
sub
pop
or
jnp
inc
cld
sbb
sub
fldenv
cmp
popa
mov
dec
sub
stos
push
scas
ss
mov
jl
and
addr16
or
sub
lea
push
cwtl
jbe
pop
daa
fwait
jno
cmc
repz
ds
mov
jbe
sub
or
decl
jnp
cwtl
cmc
js
pop
enter
or
dec
xor
mov
mov
inc
push
fs
pop
xchg
loope
loop
push
push
neg
lret
adc
dec
test
or
fcoml
idivb
dec
pop
add
test
test
ds
imul
xchg
ja
pop
xchg
ret
mov
push
cltd
push
mov
sbb
int3
dec
adc
pop
pop
mov
jno
movsl
cmpsb
jae
cmc
xchg
movsb
mov
pushf
or
out
inc
in
jo
jg
xchg
fs
subb
lock
scas
fadds
hlt
psubusw
adc
pop
push
xor
mov
and
imul
xchg
fadds
jp,pt
mov
mov
mov
scas
rclb
into
outsb
stc
aaa
mov
test
cmp
sbb
dec
addl
push
insb
imul
add
push
mov
sbb
or
push
push
out
inc
mov
cmp
rol
lahf
repz
in
adc
mov
lea
movsl
mov
sbb
fstl
icebp
outsb
or
pop
jmp
add
fstps
jnp
es
nop
pop
add
push
xor
dec
xor
mov
repz
jns
xor
cs
dec
movsl
test
testb
addr16
xchg
rcl
push
inc
cmpsl
adc
bound
stos
cmpsl
and
mov
add
jae
ds
scas
sbb
inc
rcrb
mov
push
pop
xlat
add
push
aam
add
cmp
pop
insl
or
push
add
insl
xor
into
mov
aaa
ret
cmp
insb
aad
int3
add
ljmp
fcmovbe
jle
add
cwtl
fucomi
adc
lds
call
std
lret
and
add
inc
inc
shl
inc
cmp
xchg
es
and
mov
pop
sbb
inc
fmuls
cmc
adc
cmp
es
imul
xchg
sarl
dec
cmp
sahf
xor
and
push
and
push
cmp
popf
stc
mov
cs
fisubrl
call
push
mov
aaa
fwait
sti
lret
je
sbb
xchg
adc
cld
inc
fbld
loop
push
jecxz
adc
inc
jo
and
imul
insb
imul
lret
xchg
inc
xor
scas
xor
mov
pop
out
dec
xor
out
pop
mov
sar
out
push
xlat
pop
lods
ret
mov
mov
mov
dec
dec
in
scas
bound
fs
fcompl
in
push
adc
jns
adc
fstps
call
ss
push
mov
or
daa
call
jne
xchg
lcall
dec
adc
fcmovu
mov
jl
sahf
inc
jae
cmp
jno
dec
inc
xlat
leave
mov
or
cmp
jno
fs
jp
pop
or
fsub
stc
mov
out
ds
mov
add
pop
leave
push
lock
xchg
sti
loopne
mov
mov
nop
jae
xchg
mov
sbb
shlb
aam
lret
xor
adc
in
fnsave
int
mov
jge
push
cli
and
lea
sbb
push
dec
sub
js
cmp
sahf
rolb
arpl
lock
jns
pop
cmc
push
push
pop
push
sbb
mov
xor
ret
xchg
cmp
or
jo
mov
les
or
stos
das
mov
div
pusha
push
sub
mov
notb
jo
add
in
sbb
sub
cli
push
mov
das
push
mov
mov
push
sbb
leave
dec
mov
cs
out
xorb
mov
dec
xchg
sbb
roll
mov
cmp
push
mov
sub
xchg
push
jmp
sub
xor
push
pop
inc
repz
fwait
sbb
popf
fidivrl
enter
push
jae
sub
jbe
add
xor
jb
ret
out
lcall
inc
sbb
scas
fnstcw
stos
sbbl
pushf
xchg
roll
lea
add
incb
and
pop
sbb
out
inc
les
test
inc
push
stc
pop
fimuls
or
cs
inc
pop
fiadds
inc
pop
imul
sub
mov
jae
jae
push
popa
mov
inc
aam
sbb
movsb
cmp
pop
sub
mov
cmp
rol
shll
cs
pop
lds
xchg
lock
sub
insl
in
scas
mov
test
jo
push
pop
jno
insl
pop
sbb
rcr
es
push
decb
gs
mov
or
in
xchg
outsl
mov
adc
and
inc
and
bound
iret
push
adc
jle
shll
fsubs
mov
stc
fwait
das
sarl
or
pop
sub
lret
incl
xchg
in
fnstenv
cmp
jg
ret
mov
jae
mov
jmp
xor
testw
out
aas
loop
loope
gs
lods
cltd
xor
and
pusha
cmpsb
loop
sti
xchg
lret
repnz
jb
xchg
pop
out
and
fldenv
bound
or
xchg
outsb
call
js
xor
std
adc
addr16
imul
fnsave
dec
fistl
fsubs
outsb
notl
leave
sbb
sahf
sbb
jae
shlb
insb
or
xchg
aad
xor
lahf
mov
std
lahf
mov
or
or
sbb
jg
in
jmp
dec
mov
or
push
sub
xchg
jle
mov
mov
shrl
and
movsl
andb
fmull
mov
jg
jmp
xor
je
jne
xchg
jp
pushf
repz
stc
mov
mov
dec
jno
cmp
dec
push
cmp
or
sub
mov
jb
loop
movsb
enter
push
shl
jp
popf
ret
sbb
gs
mov
popf
sub
sub
jnp
add
add
lcall
adc
mov
fnstcw
pusha
pop
bound
fwait
pop
xchg
addr16
jmp
jnp
adc
mov
push
enter
xor
incb
push
push
cmp
xor
adc
cmp
xchg
ror
lcall
xchg
movsl
rcr
je
mov
aaa
mov
hlt
push
movsb
sbb
lcall
fnstsw
sbb
jno
shlb
and
test
inc
repnz
pop
mov
xchg
test
dec
aaa
inc
shl
mov
jmp
loop
fabs
lcall
xor
arpl
cwtl
mov
xor
inc
sub
loopne
call
js
add
cmp
add
mov
cltd
aaa
outsb
insb
jp
sub
pop
dec
and
mov
paddd
xchg
popa
in
jae
dec
mov
mov
jge
jg
add
mov
mov
stc
sbb
in
test
inc
mov
orl
mov
rclb
fwait
mov
push
clc
das
insb
fdivrl
js,pn
test
mov
sub
xchg
jmp
popf
outsb
icebp
lret
adc
repz
cmpsl
and
jne
fiaddl
orl
test
and
das
inc
fbld
and
mov
call
jbe
mov
jl
jmp
adc
incl
fdivrp
add
xchg
jle
push
xor
in
sarb
pop
outsl
jp
dec
std
fsubs
xor
scas
iret
push
inc
mov
jle
pop
in
movsl
fsts
dec
ljmp
inc
jns
or
xor
inc
mov
call
push
xor
lahf
cmpsb
sbb
leave
jmp
scas
daa
jle
cmp
ret
push
icebp
lock
or
dec
and
mulb
pop
sti
shrl
out
in
or
jnp
pop
inc
xor
and
xchg
or
idivb
adc
jo
adc
dec
test
repnz
sbb
inc
adc
sarl
or
push
xor
or
loop
fisttpll
push
adc
fmull
out
add
mov
ret
sub
add
ljmp
fstpl
inc
cld
jg
pop
out
cmp
push
add
stc
add
cmp
jbe
rolb
jmp
jne
arpl
sub
jae
aaa
repnz
cltd
nop
ja
movsl
lea
mov
ljmp
movsb
cmp
dec
dec
push
jp
mov
out
dec
xor
and
mov
rcll
mov
aad
fsts
nop
xlat
mov
imulb
test
mov
mov
aad
jne
push
push
aaa
dec
xor
shl
mov
mov
jne
xchg
mov
out
data16
sbb
and
pop
add
inc
and
push
jnp
adc
push
aad
pop
mov
imul
sub
push
push
dec
movsb
mov
cli
adc
mov
aaa
cmp
insl
ret
push
mov
lea
push
mov
lcall
inc
cmc
es
pop
adc
adc
xchg
push
jg
fists
imul
in
nop
lea
inc
jl
inc
mov
enter
loope
inc
xchg
leave
jg
xor
in
and
mov
add
bnd
imul
lret
cmp
out
adc
sub
jmp
ret
cmp
mov
jl
mov
cwtl
xor
xchg
pusha
jns
sub
out
jl
pop
xchg
data16
ljmp
sbb
and
jo
lret
aad
pop
sbb
sbb
outsb
mov
mov
add
xor
jne,pt
mov
mov
push
test
add
leave
mov
mov
sbb
arpl
lret
stos
inc
das
mov
imul
and
ret
mov
cmp
bound
outsb
push
daa
push
push
stos
lahf
imul
idivl
adc
test
sub
dec
scas
cs
ficoms
into
push
jge
cmp
ret
mov
xor
out
mov
mov
add
add
leave
cmp
mov
push
fisttpll
test
xchg
mov
hlt
cmp
push
aaa
out
lods
sbb
loope
inc
add
scas
push
push
aad
fists
xor
push
jo
add
testl
test
or
out
cmp
stc
pop
dec
mov
in
xchg
dec
inc
out
int
ss
mov
iret
mov
inc
inc
fs
sub
movsl
in
mov
sbb
or
and
xor
add
imul
mov
jnp
xchg
inc
mov
adc
jne
fisttps
ds
sti
les
fwait
out
loope
xor
lret
push
decb
jae
push
add
insl
sar
gs
mov
stos
imull
mov
push
push
leave
loopne
flds
repnz
xor
shll
jecxz
ret
mov
push
inc
push
mov
psrlq
in
mov
cmp
push
cmc
and
out
das
xchg
fwait
js
add
xchg
insb
out
dec
fdivl
jecxz
adc
jnp
and
jg
xchg
xlat
pop
add
xchg
scas
sbb
xor
jnp
add
nop
xor
in
icebp
inc
and
insl
pop
iret
inc
js
je
mov
adc
rolb
mov
lods
enter
mov
jge
xchg
iret
xor
lret
rcrb
xor
cld
int
bound
ret
sub
leave
dec
daa
xlat
bound
test
ret
les
imul
rcr
arpl
nop
push
cmp
pop
mov
xchg
movsl
stos
xchg
push
in
dec
subl
outsb
xlat
cli
test
ficomps
jle
mov
cli
neg
and
add
je
dec
bound
push
fstps
cli
mov
insl
or
mov
out
clc
mov
into
fsubl
or
rolb
out
jb
idiv
pop
sbb
mov
dec
xchg
push
push
xor
sbb
ss
lea
aaa
mov
in
sub
movsl
lret
add
xor
jno
and
cmp
jge
add
xchg
les
fwait
repnz
rcll
jecxz
sub
in
adc
pop
push
add
inc
sbb
jg
adc
in
adc
lods
nop
sbb
sub
sub
fldl
lods
xchg
lret
lods
adc
fwait
pop
and
lret
ror
xor
in
cmpsl
push
lret
mov
jge
ret
mov
mov
test
adc
mov
adc
rcrl
outsb
or
pop
add
cmpsl
mov
mov
mov
loopne
fs
pop
bound
test
jecxz
aas
clc
xorl
jge
add
dec
clc
test
insb
xor
stos
sub
in
push
push
sub
push
imul
stos
cmp
cwtd
out
sub
mov
ja
enter
popf
mov
pushf
push
jge
lock
sbb
xor
ja
popl
xorb
popf
and
add
pop
mov
mov
in
sbb
xor
stos
divb
cwtl
lahf
add
pop
push
mov
fists
int3
jnp
add
inc
repz
imul
mov
and
xlat
add
in
dec
psubsw
cli
xchg
fisubrs
mov
shlb
jo
js
lods
sarl
and
aaa
sub
aad
cmp
and
mov
add
mov
xchg
outsb
pop
push
sarl
sbb
fnstenv
inc
fimull
mov
cli
cmp
and
stos
fadds
and
mov
stc
mov
sahf
jp
jne
shr
movsl
xchg
pop
repnz
repnz
jmp
andb
leave
lcall
imul
push
fs
mov
and
test
subb
dec
imul
sarl
mov
inc
xor
mov
pop
mov
call
sahf
xchg
or
int3
cmp
xchg
fst
mov
mov
cltd
cli
or
pop
push
mov
stos
xchg
mov
jmp
ret
leave
mov
xchg
xchg
dec
loopne
jns
out
in
stos
jecxz
divb
push
popa
scas
sbb
sub
lock
bound
jmp
add
adc
sub
mov
insb
das
adc
sbb
pop
mov
fldenv
incl
pop
sub
or
adc
push
icebp
mov
or
jg
ret
ret
jp
test
dec
jl
imul
cmp
mov
mov
repnz
xlat
addr16
inc
push
push
sub
inc
roll
xchg
hlt
call
xchg
xlat
pop
scas
jno
mov
mov
outsb
or
rclb
enter
lock
dec
fimuls
mov
jb
mov
mov
les
cmpb
inc
lods
stos
sub
roll
push
xchg
cmpsb
sbb
int
mov
adc
fisubs
fisubl
add
es
cwtl
das
sbb
and
push
adc
push
lcall
repnz
sub
jo
dec
cwtl
jmp
fsubl
fcomi
fsubrs
mov
cmc
fcomps
add
pop
mov
mov
cmp
xchg
mov
fdivrs
xor
sahf
lds
xor
mov
or
daa
dec
lcall
daa
insl
xchg
inc
mov
mov
lea
mov
xchg
inc
inc
lret
add
lock
sahf
fcoml
loop
adc
dec
cltd
jbe
cmpsl
inc
mov
xor
jmp
inc
push
test
insb
insb
cmp
loope
jns
adc
mov
pop
adc
into
outsl
in
pop
push
add
xor
rcll
jne
sub
push
adc
inc
call
and
outsb
pusha
outsb
mov
or
and
lahf
mov
sub
jl
pop
xchg
outsl
dec
xchg
sbb
ficoml
push
sub
insb
scas
sub
loop
loop
jns
shl
xlat
lods
shll
icebp
pop
insl
lea
push
mov
ss
adcb
dec
mov
ss
sub
cwtl
repz
daa
jno
int3
mov
and
sub
es
xchg
cwtl
or
aam
jbe
inc
pop
insl
or
fdivs
add
dec
cmp
jno
hlt
xor
dec
add
jl
adc
les
in
xchg
mov
xchg
repz
sub
sarb
or
add
push
testl
divl
xchg
repnz
mov
mov
fdivr
scas
shlb
popf
jmp
inc
ds
rolb
push
out
test
xchg
fisubl
cwtl
scas
cs
mov
jle
mov
xchg
push
sbbl
pop
scas
filds
jnp
inc
adc
pop
mov
loope
mov
xchg
mov
imul
mov
inc
pop
dec
push
rol
lahf
mov
std
adc
ljmp
mov
clc
int3
xlat
xchg
lods
mov
test
jne
cmp
loope
and
ror
call
aaa
jg
pop
clc
sub
mov
lcall
mov
aad
xchg
in
cmpsb
add
inc
push
add
popa
aam
dec
js
das
fiadds
and
shl
out
into
push
movsb
xor
xlat
push
loopne
pop
pop
pop
lret
jne
and
cwtl
and
pop
das
xchg
adc
iret
sbb
aaa
jp
fcompl
push
cmp
out
dec
push
out
push
add
cmp
mov
sahf
imul
add
lds
dec
lds
outsl
or
sbb
mov
popa
sub
push
pop
lcall
roll
neg
scas
stos
pop
daa
jle
xchg
sbb
fimuls
jb
nop
fidivrl
scas
lahf
ljmp
adc
and
adc
sub
push
clc
cs
dec
sbb
or
xor
dec
jp
test
sbb
fsubrs
bound
dec
stos
fildll
inc
shr
mov
cld
jo
add
test
mov
jne
pop
je
jbe
xchg
push
mov
or
add
push
push
xchg
dec
rolb
add
adc
or
or
push
cmp
add
push
mov
ja
cld
sbb
out
adc
rol
clc
ja
mov
aam
mov
jmp
adc
js
mov
xchg
int3
stos
fistl
mov
iret
in
sbb
call
cld
popa
push
sub
xchg
pushf
mov
mov
mov
inc
sbb
xor
mov
inc
int
fdivs
adc
mov
dec
rcrl
inc
add
inc
aaa
push
add
push
xlat
imul
push
fsts
xchg
shll
outsb
daa
sub
push
popf
jge
popf
cmp
out
jnp
jge
add
sub
repnz
sub
loope
sub
mov
and
icebp
dec
fidivrl
add
cmp
fstpt
fs
sbb
pop
insb
fs
and
test
xchg
es
sti
nop
sarb
aam
stos
inc
push
aad
outsl
ficompl
mov
mov
sbb
mov
push
lcall
xor
dec
imul
cmp
and
fcomps
lock
ljmp
xchg
mov
outsl
bound
cli
adc
rolb
jnp
adcl
pop
xor
daa
dec
aad
or
sbb
mov
or
mov
in
lcall
and
xor
inc
in
push
mov
out
ret
ja
and
repz
les
mov
xor
mov
daa
clc
imul
xor
push
inc
stc
int3
movsb
xor
jo
pop
sub
inc
xor
xor
sti
cmpsl
jg
outsl
in
xchg
sub
cmp
mov
out
pop
jnp
sbb
cmp
cmpsb
xchg
pop
imul
ja
cs
mov
stc
stc
push
cmp
xor
mov
pop
loope
jge
sbb
add
stc
mov
cmp
jb,pn
push
push
mov
daa
sbb
dec
mov
push
mov
das
fdiv
and
inc
push
adc
gs
leave
insl
popf
int3
cmpsb
inc
mov
call
mov
in
fistl
dec
call
mov
sbb
mul
mov
or
push
jb
xor
sbb
mov
push
xchg
adc
cli
or
les
adc
push
imull
xlat
outsb
jo
rol
pop
push
add
mov
fiaddl
sub
mov
push
pop
rolb
icebp
push
fsubl
jmp
or
pop
movsl
lcall
mov
adc
jns
adc
cs
jmp
mulb
sub
scas
pop
xchg
pushf
mov
pop
cmc
push
imul
mov
or
pop
cmp
aaa
sub
movsl
and
add
xchg
outsb
leave
jl
pusha
inc
lea
aam
insl
ja
mov
adc
cmp
xchg
xchg
dec
aas
bound
lret
stos
inc
int
loop
inc
call
pop
xchg
dec
and
add
xorl
cmp
stc
or
mov
and
js
mov
cmc
mov
subb
pusha
je
movsl
mov
iret
push
xlat
fwait
into
icebp
aaa
int3
push
jp
iret
outsb
jl
insl
leave
mov
push
fnstcw
xor
add
jge
addb
dec
js
pop
scas
jne
stos
out
call
fistl
adc
mov
jbe
pop
pop
daa
jne
sub
movsl
and
call
xchg
out
dec
je
ss
popa
cmpsb
pop
cltd
adc
mov
fsub
lds
jno
std
push
push
loopne
inc
loope
outsl
or
fucomi
xchg
jne
cmp
pop
popa
xor
int3
push
inc
decb
mov
xchg
jl
jle
push
fldcw
lret
mov
mov
aad
lahf
or
and
xor
rol
sahf
add
cltd
shlb
out
imul
sahf
adc
pop
stc
imul
iret
jnp
jle
inc
and
mov
mov
pushf
dec
lock
mov
fs
and
cli
or
pop
inc
add
add
push
or
or
lret
cmpsl
push
hlt
lock
xchg
arpl
jbe
xor
push
call
mov
cmc
xchg
inc
mov
lcall
cwtl
mov
repnz
out
fs
mov
lods
mov
mov
js
les
dec
out
push
mov
in
lods
or
xor
xchg
mov
cltd
fsts
xor
call
mov
out
dec
movsl
add
push
dec
call
jp
lret
inc
adc
test
pop
aas
mov
inc
out
jecxz
lret
pop
fnstcw
pop
mov
push
mov
jbe
or
cmp
subl
dec
adc
inc
les
dec
jecxz
sbb
push
and
dec
out
in
lock
jo
pop
scas
jge
into
ret
popa
daa
loope
pop
xchg
sbb
inc
shl
int
sbb
std
jg
dec
leave
adc
repz
js
stos
das
push
push
mov
js
dec
and
dec
mov
cmp
aad
sub
xchg
jg
data16
jg
mov
andb
fldcw
fildl
mov
dec
dec
imul
mov
subps
lea
imul
sbb
pusha
add
out
inc
xchg
inc
out
sub
push
jge
push
cmp
sub
aam
and
in
pop
mov
jo
cld
cmp
testl
xor
jmp
or
stc
imul
rcrl
ss
into
pop
lret
lods
aad
dec
enter
xlat
outsl
aas
xchg
xlat
cmp
inc
fadds
sbb
in
sbb
and
push
cli
cwtl
adc
fwait
out
pop
mov
imul
fs
xchg
cmpsb
dec
xlat
lea
lret
jo
lahf
sbb
rorl
and
stos
dec
sbb
cltd
movsl
jno
cmp
sbb
fcmovnb
shrb
push
in
mov
sbbl
sbb
mov
rol
and
stos
xchg
aaa
lret
inc
inc
scas
dec
dec
adc
mov
and
or
or
aas
sti
mov
popa
sub
push
mov
mov
inc
mov
cli
test
lea
jnp
or
test
in
lds
and
ljmp
imul
aam
inc
mov
adc
cmpsl
cmpsl
divb
popa
pop
ret
aam
ljmp
xchg
jmp
int
mov
out
gs
fs
xor
lret
mov
jo
repnz
push
push
in
inc
testb
into
iret
out
pop
xchg
xchg
xchg
xchg
xor
ret
jp
js
jae
aas
inc
mov
inc
xor
rcrl
jns
insl
pop
sbb
lods
testl
shrl
popf
xor
and
mov
or
mov
mov
das
xchg
rcl
xor
jecxz
mov
mov
xor
aam
sbb
add
jmp
xorb
sub
insl
in
insb
sub
lret
xor
out
xchg
mov
inc
cmc
jge
addr16
push
loop
jecxz
jnp,pt
lds
cmp
cld
aas
leave
and
js
mov
lock
mov
ljmp
out
rorb
sahf
mov
lea
mov
push
lcall
inc
popf
jl
mov
add
ret
cwtl
cmpb
cld
xlat
dec
push
push
insl
ret
mov
je
decl
push
mov
shl
sti
dec
lcall
adc
inc
mov
xchg
adc
sub
test
jno
lods
mov
into
jns
adc
cmp
jge
mov
inc
bound
sbb
repnz
idivb
adc
int
adc
push
rorl
sbb
dec
icebp
outsb
cmpsl
mov
dec
mov
mov
pop
roll
and
ret
loopw
and
rcrl
inc
shrl
hlt
scas
movsl
cmp
dec
out
dec
lahf
outsb
testl
cmp
ret
sbb
add
mov
ljmp
mov
and
int
jbe
mov
pop
daa
and
lahf
mov
xor
shr
add
imul
bound
lret
icebp
mov
xor
mov
and
aad
mov
aas
cmpsb
out
int
push
mov
mov
insl
aad
mov
cmp
repnz
fs
lret
ret
scas
push
mov
push
mov
dec
daa
repz
sub
xchg
fldln2
sbb
rorb
jae
rcll
mov
dec
cli
and
imul
jp
pusha
je
rol
adc
or
mov
pop
dec
clc
mov
inc
push
push
pop
jmp
mov
leave
sub
sahf
shll
xchg
xlat
les
sbb
mov
inc
mov
pop
call
inc
jle
mov
daa
inc
sbb
mov
popf
lahf
or
loop
fistpl
aad
repnz
jns
notrack
int3
push
aas
xor
pop
inc
push
xchg
stc
movsb
jno
into
jecxz
int3
insb
xchg
gs
arpl
loop
adc
js
inc
pop
ret
sbb
arpl
mov
jne
lret
inc
test
mov
pop
or
jp
jbe
xor
xor
je
dec
adc
sti
jp
sarb
push
sub
fists
cmp
lea
dec
aad
mov
ficoms
and
ja
sbb
ss
pop
jg
leave
in
mull
sti
mov
imul
sub
mov
adc
fsubrs
adc
mov
mov
mov
fmuls
add
sub
push
das
inc
and
dec
hlt
cmpsl
pop
xor
sbb
inc
sbb
ja
jp
in
mov
ja
sub
arpl
test
cli
bound
mov
push
popf
pusha
jbe
sub
mov
int
push
push
lret
lea
stc
xorb
lahf
lods
and
add
sbb
dec
int3
and
mov
rcrl
stc
outsl
pop
aad
rcr
mov
aad
js
lods
push
or
sbb
incb
push
out
adc
outsl
fisttpll
imul
and
leave
push
push
jbe
popf
repz
lahf
mov
in
sbb
aas
jb
and
mov
adc
iret
pop
jne
insb
xchg
icebp
jecxz
pop
sti
fidivl
push
jnp
xchg
push
xlat
jbe
mov
into
lods
inc
dec
mov
addl
data16
pop
pop
inc
jb
lods
gs
push
dec
lcall
jbe
mov
push
sarl
sbb
popf
mov
mov
xlat
push
sti
mov
mulb
and
sti
in
mov
push
pusha
in
mov
jp
popaw
int3
or
mov
fdivl
fcmovnu
push
aad
clc
imul
xchg
inc
xchg
dec
xlat
adc
leave
adc
or
lret
test
adc
cli
notb
rsqrtps
push
mov
movsl
dec
test
mov
push
fcompl
mov
mov
test
pop
xor
aam
mov
adc
and
lock
dec
mov
mov
dec
gs
xchg
add
dec
arpl
lahf
mov
adc
lock
pop
ljmp
and
dec
add
ror
or
push
cmpsl
pop
xchg
or
mov
and
push
mov
push
adc
cmp
pop
sub
sbb
mov
int3
test
in
ja
mov
cmp
push
notl
xchg
or
mov
lods
ret
outsl
test
shr
leave
and
jp
and
lcall
inc
pop
loop
hlt
nop
in
sbb
mov
push
xor
mov
push
les
outsb
inc
adc
or
jns
insb
loop
test
lock
push
cmpsb
jne
into
sub
xor
lea
push
iret
pop
daa
fwait
shll
sub
call
xchg
mov
xchg
push
call
cmp
cmp
negl
push
cmpsl
pushf
loopne
adc
push
ficompl
dec
popa
jb
rcrl
loopne
inc
sarb
rcll
jmp
mov
jecxz
inc
mov
mov
cmp
mov
mov
cmp
int3
fcmovbe
pop
xchg
lahf
sub
out
mov
or
movsb
xchg
mov
dec
xor
xor
incb
pushf
aam
out
and
inc
sbb
lea
loop
dec
push
out
sub
push
data16
data16
call
jae
pushf
adc
test
xchg
cmp
fucomp
shl
test
mov
pusha
pop
inc
in
sub
movsb
lock
cmp
popa
pop
xor
sarl
bound
test
inc
and
ja
pop
adc
push
std
inc
or
inc
std
jle
outsb
in
loopne
mov
xor
jl
dec
mov
push
jnp
mov
fmul
pop
xchg
mov
cli
cs
push
cli
out
sbb
xor
and
inc
loopne
sbb
ret
rcrb
inc
xchg
inc
insb
cmp
sti
inc
push
cli
pop
xor
adc
mov
mov
mov
jo
subb
sti
cmp
stc
jae
sub
dec
nop
add
sub
pop
and
inc
dec
xchg
jne
jno
push
rcrb
pushf
mov
leave
jne
outsb
inc
rcll
ja
lahf
mov
ja
inc
fdiv
dec
ds
xchg
jno
jl
jbe
and
push
outsl
iret
mov
add
sub
inc
lds
add
sahf
xchg
imul
pop
enter
xchg
int
jno
bound
inc
pop
xchg
jb
jl
add
aas
js
std
and
pop
sbb
xchg
xchg
out
mov
das
in
mov
rorb
add
jne
movb
inc
dec
fsubr
stos
std
pusha
lock
mov
xchg
inc
xchg
clc
cmp
mov
xchg
adc
stos
pop
mov
add
ss
mov
call
mov
inc
push
out
stos
pusha
jns
and
sub
mov
xlat
sub
int3
in
add
push
push
pop
dec
xor
shll
cmp
inc
fisubs
inc
dec
or
adc
mov
add
mov
dec
and
sahf
xchg
and
icebp
push
cmc
into
mov
or
adc
clc
movsb
loopne
push
or
out
push
in
cwtl
loope
lret
mov
fstpt
fadd
ljmp
or
sar
cltd
sub
mov
adc
xchg
mov
sbbb
pop
stos
mov
push
or
xor
insb
ds
push
inc
stos
fnstenv
int
lods
xor
aad
nop
loopne
addr16
push
push
xor
or
pushf
arpl
repz
adcl
or
outsl
dec
jmp
iret
das
push
sbb
adc
imul
addr16
dec
cmpsl
les
mov
or
shrb
cmp
cmp
xchg
fstps
fisubrs
into
lods
dec
lods
xchg
in
sbb
insb
movsb
push
sub
fidivrl
jmp
push
decb
dec
inc
dec
jle
es
add
sarb
mov
lods
fmul
sti
cmc
mov
jnp
add
xor
inc
dec
insl
sub
mov
mulb
stc
add
mov
js
or
testl
nop
divl
repnz
xchg
sub
add
or
pop
sbb
and
cmp
and
maskmovq
divl
pop
scas
loopne
mov
pop
lahf
push
into
jae
cld
sbb
sbb
popf
push
push
push
xchg
fs
rorl
cmpsl
ret
cltd
loop
gs
dec
insb
push
mov
and
imul
pop
bound
adc
jle
cmc
add
dec
dec
jg
mov
lea
dec
adc
pop
dec
add
mov
jmp
mov
testb
inc
jle
daa
dec
pop
ljmp
push
insl
test
mov
xlat
cmp
adc
jb
and
in
mov
pop
jg
cmp
add
jne
inc
mov
dec
or
cmp
pop
push
movsb
insb
fs
dec
mov
or
int
cmpsl
or
dec
xchg
pop
inc
push
xchg
mov
sbb
dec
fistl
and
mov
dec
ret
cmpsb
pop
mov
data16
sbb
inc
inc
mov
rcll
inc
les
enter
and
mov
test
push
mov
scas
cmp
mov
fwait
inc
and
dec
pop
mov
jl
push
loop
loopne
addr16
cmp
fdivrs
jb
movsl
lret
push
fstpl
ret
jp
roll
jae
fildll
icebp
popa
jl
push
shl
sbb
push
pusha
mov
loope
into
mov
add
mov
mov
sbb
inc
mov
test
int
mov
js
jmp
lods
add
push
test
jnp
push
leave
sub
nop
add
in
call
pop
cmp
pop
ffreep
movsl
pop
xchg
cmp
and
repz
inc
push
fisubl
enter
sub
jne
test
add
leave
je
pop
ljmp
repnz
shr
daa
arpl
sbb
test
adc
pushf
lcall
xor
dec
nop
push
mov
cmp
dec
push
push
and
jnp
and
js
lods
pop
pop
pop
in
mov
xlat
or
js
xor
hlt
mov
push
mov
mov
xor
jbe
rcll
cmpsb
cli
loop
or
mov
pop
inc
les
out
mov
mov
or
hlt
mov
lods
mov
lock
and
inc
in
lahf
adc
insb
push
sbb
sti
cmp
cs
xor
popa
imul
sbbb
cmovns
pop
lahf
mov
jmp
cmpsl
push
push
stc
add
and
ret
mov
sbb
push
scas
ret
out
add
popa
jno
out
test
dec
mov
xor
lock
arpl
gs
mov
out
sahf
in
sub
cmpsb
std
mov
push
inc
ja
loop
fisttpll
xor
push
add
mov
inc
jb
or
cltd
addr16
or
push
mov
lret
out
les
insb
imul
jnp
or
xor
rorb
mov
inc
data16
sbb
test
int
xchg
xor
cmp
jno
inc
lret
xor
addr16
cmpsb
jmp
adc
cli
lock
add
lret
mov
int3
lret
outsl
ss
shrl
out
icebp
xor
lock
jo
and
mov
xor
pushf
mov
pop
sub
jno
mov
push
mov
inc
loopne
inc
jmp
adc
repz
pop
jne
pushl
cmp
xchg
push
loope
clc
cmp
data16
sbb
cltd
imul
jl
ja
lods
fldenv
setbe
cmp
push
in
in
in
inc
or
pop
rcrl
jle
cmp
inc
mov
sbb
addr16
mov
xor
js
cmp
and
lds
fsubs
pop
jmp
xchg
dec
push
in
mov
mov
fsubr
fisubrs
arpl
pop
lods
push
cltd
mov
mov
mov
push
push
nop
and
pop
or
mov
adc
insb
mov
push
lret
adc
jl
or
jno
sti
pop
lock
fists
mov
rclb
mov
ret
mov
aaa
lds
cli
push
icebp
lods
cs
xor
rolb
xchg
mov
outsl
cld
pop
aas
pop
sbb
xchg
jge
adc
leave
popf
int3
ret
mov
ja
dec
mov
push
int3
adc
mov
test
push
mov
cmpsb
mov
mov
inc
stc
loop
popf
scas
cmp
jns
inc
adc
mov
leave
movsl
lret
adc
inc
loope
cld
dec
cmp
roll
push
mov
ror
aam
pop
cmp
add
sti
cmp
data16
mov
xchg
in
flds
xchg
pop
xchg
popf
adc
int3
jmp
inc
je
fmul
hlt
in
dec
movsb
sbb
lret
push
inc
inc
lret
inc
nop
lret
lods
jl
scas
and
pop
les
push
mov
push
xchg
mov
xlat
cltd
xchg
pop
pusha
je
icebp
push
rcr
pop
or
inc
lahf
and
rep
xor
in
js
pop
fwait
fs
dec
pop
xchg
ljmp
cs
sub
cmpsl
loope
mov
aas
xlat
clc
add
inc
adc
or
in
xor
ds
fimuls
lcall
lods
cwtl
outsb
fcmovbe
sti
cmp
movb
cmp
repnz
into
adc
insl
rcr
fimuls
xchg
aaa
and
mov
gs
cmp
iret
jo
leave
cld
movsb
mov
sub
mov
add
loop
rolb
repnz
mov
inc
inc
cmp
out
js
jns
xor
jg
inc
push
aas
enter
clc
insl
sub
ljmp
cmp
test
inc
scas
addb
xchg
pop
xchg
pop
push
jns
dec
int3
cmp
dec
cs
or
lds
repnz
or
cltd
out
and
and
negb
call
pusha
bound
into
imul
out
and
mov
sahf
enter
fs
pop
iret
outsb
xchg
std
pushf
cmp
inc
scas
mov
call
mov
dec
jnp
push
stos
dec
sub
mov
mov
nop
mov
and
add
jnp
imul
push
sub
dec
pop
clc
mov
sub
iret
or
sub
sub
jecxz
push
add
sbb
repz
jecxz
fnstsw
lcall
cmp
mov
notl
mov
insl
xchg
lock
pop
adc
enter
adc
pop
push
mov
popf
movsb
je
movsl
imul
inc
jle
pop
or
pop
mov
fmuls
add
arpl
dec
push
xchg
pop
pop
dec
push
movsb
clc
lret
sub
ret
scas
fldcw
jns
sub
mov
xchg
stc
jl
xor
dec
pop
addl
push
or
jno
fnsave
cmc
mov
xchg
addr16
mov
and
mov
mov
sbb
mov
mov
std
into
cmpsb
lods
push
out
test
xchg
mov
jbe
pop
dec
pop
xchg
xor
pusha
adc
mov
test
pop
xchg
mov
sbb
push
cmpsl
adc
sub
inc
cmp
shlb
stos
rol
sbb
pop
outsl
in
cmp
adc
stos
inc
sub
pop
mov
lcall
mov
imul
cmpsl
or
push
jecxz
lock
jle
add
mov
mov
lahf
cmpsb
xor
mov
hlt
lret
add
scas
cmp
push
xchg
inc
dec
dec
lods
pop
pop
std
stc
push
mov
xor
pop
jo
outsb
notb
icebp
leave
rcl
fldt
xor
mov
lret
mov
je
cltd
dec
dec
jno
pushf
ss
imul
push
dec
in
jbe
negl
adc
pop
cmp
jbe
or
lret
stc
into
lcall
je
je
int3
add
and
inc
cmp
mov
aam
scas
adc
and
push
cmp
fists
fsubl
sti
jecxz
sahf
jno
adc
xor
inc
jns
mov
jl
out
mov
mov
test
jae
push
dec
xchg
jb
out
mov
mov
es
cmpsb
popf
sub
xchg
paddusw
adc
test
mov
cmp
cld
stos
in
sub
mov
pop
fstl
push
scas
jbe
sub
or
mov
mov
arpl
cld
mov
call
jmp
outsb
dec
outsl
adc
fdivr
test
cmc
in
jmp
movsl
adc
xor
mov
mov
mov
insb
js
sub
fistl
ds
ja
sub
popa
daa
out
in
mov
inc
add
inc
mov
dec
popa
insb
stc
mov
leave
jb
outsl
pop
jno
inc
or
loopne
dec
xor
add
ljmp
adcl
int
mov
cmpsl
dec
sarb
orl
fisttpll
cltd
push
mov
sub
into
push
sbb
push
stos
pop
dec
xchg
mov
inc
repnz
pop
cli
push
js
mov
mov
in
jmp
int3
inc
lahf
lret
pushf
inc
xchg
dec
or
sub
out
push
jae
pop
jle
or
mull
adc
gs
sbb
sub
repnz
mov
fisttpll
xchg
popa
mov
lods
sbbl
xor
and
push
loop
push
ja
fwait
cmpb
jp
sti
test
and
push
xchg
inc
jns
aam
imul
jle
dec
add
jmp
call
pop
les
shll
test
or
lods
xor
or
push
jo
add
and
adc
or
nop
mov
pop
mov
dec
shll
das
cltd
addr16
jmp
mov
push
sbb
call
rep
sub
pushf
in
pop
mov
or
adc
repz
int
ja
jb
mov
mov
pop
inc
int3
lea
dec
aad
cld
xchg
negb
cld
dec
mov
adc
add
or
sbb
in
xlat
js
in
movsl
subl
js
stc
outsl
in
push
inc
mov
movsb
or
add
xchg
mov
scas
push
and
pop
add
pop
icebp
xchg
mov
mov
push
inc
or
cmp
pop
adc
movsb
loopne
mov
jecxz
and
mov
inc
sub
fldenv
push
mov
cltd
xor
inc
and
repz
adc
ljmp
inc
sbb
das
test
xchg
push
and
iret
leave
pushf
lret
aam
xor
push
inc
xchg
jle
and
xchg
popf
and
dec
add
fisubrl
push
out
dec
jg
sbb
sub
shrl
cli
int
xor
leave
dec
dec
xchg
fistpl
mov
inc
test
pushl
es
jle
fidivrs
sbb
sti
movsl
fistpl
daa
in
rolb
mov
xchg
cli
fadds
sbb
aam
mov
sbb
dec
mov
sub
std
cmp
adc
mov
jnp
add
leave
push
fdivs
sub
icebp
cld
notl
sbb
jb
mov
jl
sahf
roll
inc
cmp
shlb
sub
or
aas
pop
push
push
call
outsb
pop
scas
scas
adc
xor
xchg
cmc
adc
imul
cmpsl
mov
sub
and
mov
cmp
cmp
jns
push
or
test
xchg
mov
fcoml
push
int3
mov
inc
fldl
or
jb
ret
push
pop
lods
mov
push
stos
bnd
adc
adc
cs
enter
and
jne
sbb
xchg
sub
fistpll
fcomps
stos
fwait
push
sub
es
add
mov
pushw
mov
js
sub
push
rcrl
add
mov
mov
fidivrl
jnp
negb
mov
aam
mov
push
or
xchg
pop
pop
add
sub
in
adc
loopne
adc
ret
mov
jmp
pop
mov
iret
cmpsl
jbe
push
sarb
stos
sbb
iret
sarl
loopne
iret
mov
sub
loopne
out
lret
js
pop
xchg
adc
mov
xor
adc
scas
push
je
daa
into
inc
fcomps
dec
shrl
and
ss
stc
pop
pop
mov
pop
shl
mov
push
add
movl
sbb
bound
xor
nop
lds
sbb
fs
call
fcoms
jl
push
test
jle
ror
xor
inc
dec
fsubs
push
jmp
dec
xor
pop
adc
stos
stos
cmp
mov
and
mov
mov
ffree
push
push
hlt
dec
pop
pop
pop
popa
std
jns
lods
push
stos
mov
xchg
push
scas
addb
or
fimuls
pop
lret
mov
addr16
pusha
sbb
lods
subb
cwtl
cmp
insl
sbb
mov
in
ljmp
idiv
push
js
xchg
dec
nop
in
sbb
inc
testl
xor
sbb
xor
mull
das
mov
dec
loope
mov
addr16
mov
mov
or
out
push
dec
fdecstp
sbb
mov
inc
push
scas
and
push
pusha
test
mov
push
aas
sarb
mov
inc
ss
jmp
jne
jnp
dec
addr16
adc
mov
xor
mov
jae
inc
add
mov
fadds
add
xchg
fisubrl
aad
mov
xchg
add
lods
push
dec
lock
jno
jge
cmp
inc
lock
pop
jle
xchg
adc
push
push
lahf
clc
neg
cld
mov
inc
gs
rolb
xor
xchg
lret
stc
pop
cli
and
xchg
sbb
ficoms
add
jns
sbb
inc
shlb
test
les
push
xor
sub
mov
fcoms
sub
inc
inc
mov
mov
mov
sbb
pop
scas
shl
rcrb
push
out
rcrl
mov
in
push
ja
ficoml
push
jb
cmc
xchg
jne
aaa
fcoms
lcall
rorl
imulb
cmp
aad
cmp
push
add
inc
pop
lods
mov
lea
clc
dec
jecxz
hlt
imul
and
out
fistl
pop
inc
les
sbb
xchg
pop
adcb
les
jmp
mov
jns
xchg
sub
lods
and
dec
and
dec
pop
inc
pop
inc
inc
cmp
add
into
sbb
cmpsl
add
arpl
sti
jne
dec
sub
pop
stc
lcall
and
fs
mov
loop
aas
mov
jnp
push
mov
aad
and
mov
popf
xchg
push
jecxz
xchg
aam
jns
arpl
mov
imul
cltd
and
inc
dec
fadds
cli
js
fnstcw
sbb
andl
addl
shll
add
push
adc
inc
mov
fs
pop
sub
lods
xchg
and
repz
mov
jecxz
popf
and
xor
sbb
mov
sarb
fldt
iret
mov
mov
push
aam
jl
and
fisttpl
mov
sub
hlt
jne
scas
jle
icebp
sub
mov
sub
fs
jmp
in
insl
xchg
dec
jne
adc
imul
jae
and
jbe
outsl
xchg
out
iret
notl
push
std
jmp
pop
addl
ds
mov
and
adc
mov
pop
imul
popa
xchg
inc
xchg
lea
adc
or
jmp
jbe
xor
dec
js
std
paddsw
add
jmp
inc
dec
push
pop
adc
or
pusha
adc
inc
add
repnz
xor
push
dec
push
xor
cwtl
std
mov
sbb
fstpt
or
loope
popl
mov
shll
cs
sti
ja
lea
jmp
cltd
cmp
data16
cwtl
gs
outsl
ds
mov
lds
inc
loop
and
or
hlt
xor
dec
sbb
aad
rolb
cmp
leave
inc
cmp
aad
stos
aad
stos
js
cmc
mov
daa
negl
push
fildll
and
loope
mov
pop
das
push
fwait
test
push
xor
or
xor
jp
sbb
jg
je
push
fwait
icebp
dec
jp
mov
movsl
jae
je
pop
addr16
xor
cmpsl
aad
in
fwait
dec
dec
jno
jmp
mov
xlat
call
insl
ljmp
std
inc
sub
mov
or
pop
insb
adc
mov
test
and
out
adc
pop
cli
icebp
orb
rcll
outsl
cmp
or
pop
or
outsb
inc
sarl
call
clc
enter
dec
inc
sarl
faddp
stos
lods
hlt
pushf
ret
inc
dec
movsb
xchg
add
mov
sub
dec
mov
or
jb
add
jns
dec
lcall
jg
dec
dec
inc
daa
mul
out
fadd
out
dec
mov
mov
sar
lcall
insl
inc
sbb
push
and
pop
lods
daa
add
arpl
adc
xchg
adc
hlt
fdivp
stos
jmp
in
call
inc
scas
fwait
scas
add
je
outsl
adc
int3
mov
sbb
push
loope
ret
into
js
add
or
ljmp
or
jo
stc
dec
pop
adc
mov
ret
mov
test
mov
jno
std
xchg
daa
pushf
xor
jmp
cmpl
cltd
loopne
stos
ss
ljmp
mov
popf
cld
ret
xchg
cmp
sub
cmp
mov
sbb
iret
push
insb
xchg
stos
fistl
popa
push
sub
out
jl
es
hlt
jg
arpl
jg
mov
pop
jae
int
xchg
jne
movsl
mov
rorl
les
xlat
into
les
sahf
xchg
sub
and
pop
leave
icebp
aad
mov
inc
rorb
in
imul
iret
cltd
insb
push
lahf
mov
push
jl
cmp
add
adc
cmp
data16
push
test
adc
enter
insl
mov
mov
sub
jb
into
add
adc
or
mov
mov
mov
sbb
mov
dec
lcall
xchg
jle
fsub
popa
push
add
flds
sbb
or
stos
ds
in
imul
xlat
xchg
mov
mov
mov
sti
push
cmc
push
jl
jnp
dec
jnp
sbb
push
mov
mov
dec
add
fwait
jnp
stos
dec
sbb
lret
out
push
lock
fnstcw
pop
repnz
aam
sbb
xchg
dec
mov
mov
push
lock
xchg
lea
mov
mov
push
fs
push
inc
aaa
jo
sarb
push
sbb
mov
sbb
or
push
imulb
jmp
or
inc
cmp
mov
mov
dec
mov
aad
mov
push
mov
mov
dec
aam
pop
push
push
stos
sub
inc
insb
inc
jle
dec
popf
push
das
mov
aam
fcoms
push
or
cmp
aas
xchg
mov
push
mov
in
in
lcall
dec
lahf
xchg
sub
in
fsubs
les
sti
mov
push
fnstcw
aaa
sub
inc
xlat
jle
pushf
scas
pop
jbe
xchg
imul
sub
sub
mov
xor
repz
add
push
fstpl
xchg
icebp
cs
mov
ja
or
xchg
cld
mov
and
jge
dec
inc
jecxz
xor
cmp
nop
into
fiaddl
cli
mov
jl
in
xchg
lret
xor
xor
fcoml
out
or
xor
jae
bound
out
jle
mov
pop
xor
pop
mul
gs
lods
arpl
sbb
xor
add
dec
hlt
bound
push
and
loope
je
fiaddl
sbb
pop
sub
mov
aam
fsubrl
out
push
push
cmp
dec
mov
roll
jnp
pop
cmpsb
dec
addr16
loopne
add
rcll
sub
lret
test
xor
test
inc
sub
mov
xor
and
dec
pop
inc
test
repz
inc
xchg
fildl
jns
loope
push
stos
pop
inc
fdivrp
popf
outsb
ds
cli
pop
fwait
push
loope
inc
xchg
mov
test
jp
in
test
sub
mov
fistps
inc
aaa
push
or
sub
lds
pop
mov
lahf
icebp
notb
dec
push
add
cmp
fldz
cld
outsl
lods
xchg
cmpsl
int3
jns
push
int3
test
inc
sbbb
je
sub
xor
sbb
mov
xchg
adc
test
jno
sarb
mov
pop
xchg
cmp
inc
mov
mov
rcr
pop
mov
sbbl
lcall
mov
xchg
xchg
ret
dec
ss
adc
mov
fildll
sub
je
jl
js
sbb
push
xchg
in
mov
jno
add
inc
call
jmp
adc
inc
sbb
test
nop
arpl
ja
lahf
push
inc
repz
scas
ja
adc
inc
sbb
aas
pop
push
in
xor
hlt
sub
movsb
cmp
js
popa
imul
hlt
cmp
aad
sbb
lock
imul
xlat
jg
into
es
test
lcall
sahf
mov
adc
fldenv
lods
stos
test
sbb
sbb
mov
add
pop
sbb
fsts
icebp
mov
js
pop
inc
sbb
lock
out
sub
inc
pinsrw
out
stos
cli
pop
outsl
dec
fistpl
jno
dec
in
sbb
and
lea
dec
in
mov
lahf
fadd
jno
mov
out
jno
cld
sahf
adc
in
js
sub
sbb
ret
in
cmp
mov
dec
mov
popl
mov
in
or
in
xchg
adc
cmp
test
sub
jmp
cwtl
rorb
loope
lds
out
xchg
in
mov
mov
or
das
cmp
into
add
and
inc
ss
sub
test
lods
and
xchg
cmp
xor
mov
sub
pop
jecxz
pushf
adc
gs
movsb
pop
push
rcrl
dec
stos
out
mov
sahf
mov
lods
push
sub
pop
scas
dec
call
cmc
xchg
sbb
jmp
cs
fildl
mov
push
sbb
sub
fyl2xp1
rcrl
cmpsb
lea
xlat
and
mov
addr16
sub
mov
ss
hlt
or
mov
dec
loopne
icebp
inc
xor
push
jo
into
in
push
les
xchg
push
out
sbb
incb
lds
cmc
push
or
and
sub
jg
lret
gs
xor
imul
ret
leave
and
dec
mov
xchg
repz
aad
jge
or
mul
fsubl
add
jae
mov
sahf
push
jno
sub
mov
rcrb
int3
daa
nop
sbb
pusha
mov
dec
sub
cmp
adc
dec
popa
imul
mov
jns
jnp
xchg
pusha
pop
and
vcvtsi2sdl
xlat
std
int3
cmp
shrl
lahf
pop
mov
rorb
mov
cld
dec
inc
jg
dec
adc
lds
ffree
lea
stos
out
mov
scas
nop
je
rol
sub
add
xor
push
lds
aad
mov
pushf
int
mov
xlat
jb
fsubl
and
xchg
adc
popf
call
fsubrl
or
xchg
je
das
cmpb
xchg
mov
jne
lea
cld
insb
repnz
into
ret
and
and
jns
ds
cmpsl
and
imul
in
scas
loop
pop
push
xlat
cmp
std
jnp
pushf
repz
aad
in
add
mov
pop
test
mov
js
daa
sti
mov
arpl
out
inc
mov
daa
lahf
data16
sub
mov
xchg
sahf
mov
inc
mov
mov
lods
xchg
lock
lds
mov
std
lret
adc
jmp
mov
gs
sub
pop
mov
hlt
nop
insb
lds
ljmp
cmp
xchg
loope
and
leave
push
and
mov
xchg
jbe
mov
sbb
mov
divb
jb
cwtl
aaa
jb
outsb
ret
inc
ret
pusha
sbb
push
jle
adc
ficomps
or
cs
arpl
clc
mov
hlt
inc
mov
xchg
mov
test
dec
fdivl
adc
or
mov
hlt
mov
or
nop
push
add
std
out
arpl
das
dec
jg
mov
dec
cwtl
popa
sub
shl
pop
pop
outsb
push
fdivrl
sub
mov
fnsave
xor
addr16
aam
pop
pop
repz
adc
pop
fisubl
mov
lahf
das
adc
xor
push
lods
jo
mov
xchg
aad
jmp
sbb
mov
dec
cmp
faddl
xchg
cli
dec
mov
xor
dec
iret
andb
lahf
lret
xor
jge
sub
adc
loope
mov
jp
lahf
cmc
add
sub
in
push
mov
lret
pop
mov
xor
lahf
mov
pop
mov
idivl
inc
loop
or
mov
pop
pop
fistl
lahf
fisttps
mov
in
inc
sbb
push
outsl
pusha
fwait
dec
push
add
jbe
out
add
stc
add
leave
mov
mov
xchg
and
push
push
je
and
push
ljmp
hlt
sbb
dec
lods
push
fildl
pusha
jle
lahf
xor
sbb
les
lds
jne
jns
or
jne
or
and
fwait
push
or
lods
pop
xor
enter
aaa
sbb
pushf
push
cmpsb
inc
testb
fsub
sbb
push
ja
cmpsl
mov
sub
adc
imul
sub
push
in
or
xor
clc
das
adc
jno
xchg
pushf
pop
sub
adc
test
jmp
and
out
dec
or
jmp
xchg
pop
jns
fldenv
and
pop
cmp
fisttps
sarb
lock
cmp
dec
test
es
outsl
add
mov
loopne
fstpl
pop
shrb
loop
enterw
je
add
jp
jne
pop
or
pusha
gs
mov
rorl
and
scas
test
shlb
mov
or
pop
sub
leave
xor
sub
js
jge
shr
push
dec
cltd
cmp
fidivrs
push
mov
push
push
stos
dec
adc
cs
cmp
fmuls
mov
movsl
shrb
sarl
sahf
sahf
nop
ret
or
in
stc
mov
jne
jne
gs
test
xchg
jbe
jae
loop
xchg
addr16
out
sbb
jnp
fsts
cmpsl
das
je
faddl
push
jbe
sub
push
dec
mov
stos
and
sub
and
push
movsb
xor
xlat
or
pop
ljmp
into
sbb
adc
pop
and
in
xor
push
cmp
jbe
fwait
adc
xchg
push
mov
ljmp
mov
pop
fdivrs
push
pop
mov
pop
ja
inc
push
mov
enter
mov
pop
xor
clc
std
pop
xchg
jp
idivl
inc
rcrb
cld
js
and
stos
test
imul
cmpb
fsubr
into
lahf
lods
fwait
repz
mov
pop
stos
pusha
add
std
add
std
inc
dec
jbe
jnp
lock
sbb
sbb
outsb
add
fcomip
mov
int
fldt
pop
sub
cmc
test
dec
xchg
out
xchg
das
add
push
into
insl
fwait
fwait
jmp
loope
inc
jno
enter
testb
xlat
push
scas
test
data16
stc
das
cs
je
arpl
xchg
aad
mov
in
in
scas
mov
jb
jge
imul
loop
aam
push
and
xor
lea
stos
pushf
pop
pop
in
fists
or
sbb
cmp
rcll
adc
mov
sbb
js
jb
mov
outsb
xchg
jnp
inc
cli
pop
lock
lret
mov
or
add
mov
pop
jmp
push
sbb
test
addb
roll
out
xor
pop
fstl
pop
or
pop
dec
iret
test
mov
xchg
inc
dec
lods
adc
pop
xchg
mov
sbb
pop
cltd
dec
loope
xchg
mov
push
pop
push
cmpl
cmp
movsl
push
ss
arpl
cs
jp
mov
cmp
mov
test
sbb
lds
add
inc
mov
popa
cmpsl
pop
and
or
cltd
movsl
daa
mov
test
in
mov
fnsave
sahf
mulb
mov
aas
pop
jmp
ds
test
lret
mov
jmp
jle
dec
or
mov
xchg
pop
lahf
adcl
sbb
mov
mov
dec
sub
in
push
dec
jb
lret
sub
inc
enter
std
jb
xchg
rclb
movsb
mov
ljmp
sbb
insl
movsl
cmpsb
mull
pushf
out
pusha
sbb
lods
arpl
push
add
mov
clc
sub
mov
movb
push
shlb
inc
leave
dec
cmpsb
movsl
or
enter
pusha
inc
sub
jns
scas
push
lret
les
orb
pop
out
sub
dec
repnz
mov
sarl
xor
mov
push
jae
cltd
dec
fs
mov
imul
cmp
mov
pop
packuswb
xor
insb
sub
cltd
adc
sbb
pop
sbb
push
xchg
mov
mov
cmc
not
aaa
imul
push
inc
mov
repz
fistps
adc
js
pop
enter
lcall
cmp
xor
subl
lea
mov
or
dec
sbb
sbb
js
jmp
mov
mov
pop
out
mov
fwait
push
int
imul
or
pop
add
ret
int
imul
jno
adc
add
push
xchg
icebp
shlb
movsl
cmp
jg
mov
jb
sub
out
cltd
jno
jp
int
cmp
in
jmp
push
aaa
les
add
imul
repz
mov
das
in
inc
dec
popf
adc
xorl
cwtl
sbb
push
push
jb,pn
or
sbb
mov
and
inc
sbb
cmp
adc
stc
and
jae
test
mov
and
xchg
je
xlat
push
push
mov
fldt
rorl
or
mov
sub
lea
mov
push
or
ror
or
xchg
mov
jg
out
rclb
sbb
mov
test
push
sub
jo
lcall
push
nop
mov
push
sub
lret
repnz
stos
inc
mov
cwtl
push
ret
addb
dec
pushf
mov
incl
dec
push
dec
insb
mov
arpl
inc
out
push
test
test
add
xor
cmp
pmulhw
scas
add
push
mov
fcmove
cmp
and
imul
mov
cmp
dec
inc
shll
or
adc
sub
adc
push
sub
and
scas
aam
xor
mull
in
or
jecxz
jae
push
sarb
xorb
int
inc
iret
mov
inc
mov
dec
mov
cli
xor
dec
xchg
scas
shlb
or
add
inc
jno
add
xchg
add
mov
xor
iret
test
cli
shrb
scas
ficompl
adc
jnp
mov
xchg
leave
es
fst
and
mov
iret
imul
je
inc
fisttpl
sub
mov
repnz
adc
adc
jmp
adc
fs
scas
sbb
ds
insl
in
hlt
or
popa
xchg
imul
adc
cwtl
out
xchg
add
insl
gs
cmp
sbb
test
mov
cwtl
or
push
xchg
sbb
sahf
nop
push
dec
loopne
pop
gs
jb
push
mov
rcl
inc
aas
dec
in
lret
push
lret
pop
test
mov
mov
cmc
shr
mov
aad
add
inc
push
adc
push
xor
jnp
fs
fldt
rcrl
iret
xchg
dec
or
xchg
cltd
mov
xor
insl
pop
xchg
int3
imul
lds
pop
jns
je
icebp
into
push
daa
pop
cmp
mov
ss
and
or
in
in
sub
jmp
pop
or
cmp
pop
xor
repnz
cwtl
cmpsb
fs
rolb
mov
pop
shlb
pop
int
jne,pn
adc
add
iretw
decl
cmp
xchg
jmp
lock
add
mov
daa
sub
sbb
mov
leave
stos
jle
add
mov
fwait
test
int3
popa
shl
out
adc
xlat
xchg
sub
pop
mov
dec
xor
ficoms
lods
add
xor
cmp
jp
jl
and
inc
inc
lea
enter
sub
aam
je
rcrl
testb
add
out
mov
repnz
pop
dec
dec
js
pop
or
xlat
add
push
cmp
scas
movsl
andb
xchg
fnsave
pop
repz
pop
fmull
lret
or
mov
outsb
adc
aas
pusha
pop
push
and
fadds
and
lret
adc
mov
jl
ret
inc
clc
inc
sbb
push
loopne
or
dec
dec
ret
cltd
sti
push
push
pop
jne
xchg
fidivs
insb
jno
divb
cltd
push
inc
fucomp
inc
nop
mov
in
inc
xlat
stos
into
mov
cmpsl
cs
ret
push
push
std
in
jmp
xor
movsb
cmp
pop
aam
and
xlat
mov
add
sbb
int
sub
or
cmp
sarb
test
cmp
cmpsl
push
mov
push
fistps
popf
addr16
outsl
divl
cmc
rcrl
cmp
and
push
xchg
divl
clc
jg
ficoml
mov
inc
cmc
push
jo
push
mov
imul
xchg
cld
enter
clc
push
xchg
pop
push
pop
adc
stos
mov
xor
js
push
sub
inc
jae
call
lret
fs
or
mov
das
mov
pop
in
jmp
push
aam
shll
jb
xorl
popf
or
daa
std
pop
cmp
pop
into
or
test
mul
adc
mov
dec
xlat
sar
sbb
dec
xchg
inc
mov
or
insl
sbb
mov
push
sub
int3
mov
outsb
pop
xlat
sub
gs
loopne
repnz
inc
dec
add
add
dec
std
ss
xchg
out
lock
mov
fnstsw
add
data16
cmc
jl
inc
xlat
dec
test
shrl
aas
cs
sbb
sbb
sahf
ret
inc
inc
rcll
fcoml
into
das
dec
sbb
test
addr16
fs
jae
push
hlt
lods
scas
insl
arpl
adc
fildll
arpl
outsl
std
fwait
jnp
sub
add
mov
test
sahf
loop
stos
ror
inc
mov
mov
xchg
stos
mov
pop
lock
or
dec
inc
adc
cmp
jne
cmp
insl
ret
sbb
push
push
movsb
adc
in
das
lds
xor
dec
and
xchg
jg
mov
je
mov
daa
cmp
jl
mov
jns
mov
inc
mov
jns
jns
jl
adc
call
push
jmp
pop
jno
imulb
ficomps
mov
in
push
mov
jp
mov
xor
xor
dec
push
and
xchg
adc
lds
test
add
cs
mov
mov
sub
cmp
fnstsw
addl
mov
xchg
pop
mov
push
fcoms
pop
mov
or
loopne
lret
mov
mov
ror
mov
stos
xchg
add
sbb
out
add
mov
ss
xchg
dec
repnz
jge
mul
fnsave
mov
cwtl
or
cmpsb
popf
mov
mov
push
ss
jmp
add
push
inc
push
negb
fldenv
jmp
pop
out
ss
sbb
mov
or
mov
cmp
sbb
imul
jge
pop
pop
pop
xchg
idivl
pop
mov
pop
pop
out
mov
test
mov
jns
scas
aad
sbb
movsb
lcall
cli
jle
jne
sub
adc
fbld
mov
jae
or
jno
xchg
push
test
movl
addb
fldl
sub
push
xlat
push
push
aas
sbb
mov
popf
xchg
pop
adc
call
push
lds
adc
push
in
mov
test
cmp
cmp
push
stos
int
stos
xchg
xor
or
loop
iret
cmp
mov
test
lods
ljmp
pop
in
ds
dec
movsb
out
xchg
enter
loope
rcrb
cli
push
clc
mov
push
mov
es
cld
cwtl
test
out
inc
xlat
fwait
push
repnz
fwait
rcrl
and
push
push
pop
sbb
push
mov
into
dec
push
sub
push
stos
jp
shlb
shll
push
sahf
xchg
repnz
ds
xor
nop
cld
mov
sbb
xchg
xchg
push
xchg
neg
shrb
push
cmpsl
arpl
repz
iret
movsl
mov
cmp
notl
xor
sub
and
or
push
jle
xor
lahf
pop
in
imul
adc
dec
cwtl
aam
scas
je
das
jp
data16
push
arpl
mov
jne
mov
cmp
nop
sbb
mov
rcrb
push
xor
sub
negl
mov
push
aaa
enter
xlat
cmpsl
xchg
andl
jecxz
das
or
shlb
pop
jbe
push
gs
rol
jl
out
pop
lret
sub
cmc
or
xchg
cld
jmp
inc
and
jnp
pop
dec
out
mov
xor
popf
and
inc
cltd
insb
push
mov
into
mov
les
pop
loop
fcoml
ja
add
push
fs
fwait
mov
jb
or
hlt
mov
xor
test
add
lcall
ret
andl
sti
jle
pop
test
sbb
inc
mov
mull
in
imul
outsl
outsb
subl
xorl
stos
add
xor
sub
push
repz
cmp
mov
push
out
push
cmp
inc
xor
or
push
das
aad
mov
pop
xor
xchg
int
jb
movsl
popl
mov
mov
xor
inc
mov
add
in
mov
mov
test
imul
cltd
pop
aam
add
in
jg
bound
ja
sub
popa
fistpl
dec
popf
in
loope
cmovns
les
in
cltd
aaa
pop
dec
ja
out
inc
adc
daa
mov
xor
adc
add
std
fmuls
test
xchg
jp
stos
jecxz
mov
shlb
push
inc
fcom
cmpb
xlat
sbb
in
dec
mov
incb
sti
fldt
mov
inc
ret
pop
mov
add
mov
out
mov
lret
insl
dec
mov
jnp
pop
sub
repnz
push
inc
clc
or
mov
fs
fsubs
or
or
sti
fadds
ds
out
pop
sub
jb
repnz
mov
jecxz
jns
push
sub
sub
in
inc
dec
inc
ficoms
jne
jae
ret
and
pop
sbb
out
repnz
jb
cmp
popf
or
jns
jge
pushf
xchg
jae
add
outsb
icebp
xchg
cld
sti
stos
xor
mov
mov
jp
dec
leave
loopne
rolb
adc
jecxz
sti
add
cmpsb
scas
mov
sbbb
xchg
mov
dec
push
repz
lret
stos
dec
mov
dec
xchg
push
aaa
mov
mov
push
xchg
pop
popa
jns
out
mov
push
out
mov
mov
daa
aas
out
lods
mov
xchg
or
andl
pop
pop
and
jns
or
mov
inc
enter
out
and
movsl
dec
or
imul
movsb
lods
push
add
scas
mov
mov
into
adc
movsb
xor
fs
loopne
inc
inc
push
iret
int3
rol
mov
cld
inc
gs
and
ss
xchg
daa
mov
movsb
pusha
xor
mov
sbb
sub
inc
je
push
push
fs
popf
aaa
inc
inc
stos
sub
cli
pop
adc
xchg
xchg
loope
es
les
jne
push
xor
sub
mov
xor
je
mov
fisttpl
mov
or
cmc
or
jp
xor
push
and
jns
ljmp
mov
sbb
outsb
andb
mov
mov
hlt
ss
ss
inc
jbe
lahf
xor
or
pop
pusha
lea
in
push
xlat
pop
lret
cmp
rcpps
cmc
loopne
test
or
xchg
pop
sahf
and
sub
cmp
push
push
jae
mov
sbb
je
xor
pushf
jmp
mov
ss
and
jg
je
pop
clc
in
lar
add
cmpsb
shld
push
pop
in
ja
sbb
clc
outsl
mov
xor
lock
loopne
test
adc
aas
push
jnp
or
out
test
mov
adc
aas
mov
add
mov
es
sti
xchg
xchg
jns
sub
mov
inc
add
out
mov
xchg
jb
into
mov
mov
orb
lds
jmp
lret
les
into
rol
sbb
test
stos
ss
mov
cmp
ss
cltd
in
xorps
inc
xchg
cmp
mov
flds
mov
or
inc
mov
cmp
jmp
scas
add
in
pushf
push
xor
lcall
mov
sub
xor
sub
sub
pop
or
aam
mov
sub
mov
in
inc
sbb
cmp
push
fidivrl
je
pop
push
loop
dec
mov
xchg
fs
std
in
mov
or
lods
out
mov
imul
imul
push
stos
loope
test
xchg
add
dec
dec
fcoml
cmpsl
ja
stos
lret
orb
call
xor
jge
push
call
mov
xor
daa
daa
lods
repnz
js
aad
jg
pop
or
js
rcll
fmuls
xchg
sub
cli
mov
movsl
aas
sub
mov
cmp
cs
push
xor
sub
outsl
lds
aad
cwtl
jmp
push
sahf
jae
fdivs
repnz
cmp
ja
enter
push
jae
mov
loope
sub
rcl
leave
dec
pop
add
sub
lods
movsb
mov
iret
mov
adc
outsb
les
ljmp
data16
xchg
push
gs
rol
enter
sub
nop
pop
int3
dec
pop
add
movsl
jno
testb
lds
cmp
pop
and
ret
xor
iret
stos
rcrb
int3
sbb
push
into
jae
aam
dec
xchg
es
or
inc
mov
call
jge
test
or
cmp
divb
movsb
in
inc
bound
enter
or
out
lret
cmc
les
push
jo
aas
sub
jmp
dec
aaa
pushf
in
push
mov
ss
ja
mov
fidivs
test
or
sub
out
out
incl
push
aam
dec
mov
into
inc
dec
xchg
in
add
adc
mov
adc
jae
lock
ficompl
cmp
cmp
scas
in
cmp
ret
push
inc
aaa
std
mov
cmpsb
jb,pt
sbb
icebp
ds
xchg
mov
xchg
cld
dec
fwait
mov
mov
pushf
jo
sbb
sub
subl
cmp
ljmp
jns
ljmp
adc
jge
dec
jno
cli
lret
popa
and
stc
jne
pop
jmp
in
cs
lea
cmp
imul
or
sbb
jae
cmp
mov
arpl
movsl
or
mulb
xchg
daa
pop
sbb
dec
push
inc
rcll
or
fcmovnbe
flds
addr16
ficompl
jno
inc
lahf
rcll
fbld
jp
jbe
xor
in
xchg
pop
mov
lcall
mov
rclb
adc
pop
cs
fwait
mov
inc
mov
cmp
pop
jg
mov
and
in
inc
jbe
addr16
sub
daa
mov
jne
mov
sub
mov
dec
shl
call
xchg
sub
inc
cmp
and
out
aas
je
fs
cmp
jne,pn
add
sub
subl
dec
xor
xor
sbb
ds
mov
inc
inc
into
imul
bound
in
jmp
mov
pop
aaa
pop
pop
stos
roll
mov
jb
cmp
pop
rcrb
loop
xchg
cmp
out
add
and
insl
xchg
jne
add
xor
sahf
int3
adcl
lcall
pop
adc
dec
jae
lea
into
iret
stos
mov
jno
nop
stos
in
adc
or
and
push
jecxz
je
mov
faddp
push
jmp
out
dec
jmp
mov
pop
pusha
scas
mov
adc
js
sbb
jg
cld
call
jne
or
ret
in
fs
js
adc
enter
push
shll
out
jp
or
jg
inc
cmp
dec
dec
sbb
mov
jecxz
xor
pop
dec
pop
jae
sub
cmc
jmp
push
and
dec
aam
mulb
or
push
call
lcall
je
dec
push
dec
dec
xchg
in
mov
xchg
pop
lods
loop
cld
outsl
or
mov
or
movsl
inc
rolb
add
pop
dec
decb
sti
xor
out
lcall
push
add
inc
test
push
imul
test
aam
stc
mov
fimuls
pushf
add
mov
gs
mov
pusha
push
mov
or
and
mov
iret
clc
gs
lret
or
add
jno
roll
mov
out
shr
aas
mov
sub
mov
sti
lods
icebp
jnp
ret
icebp
inc
xorl
add
dec
mov
bound
mov
rcll
test
stos
jo
cld
pop
int
mov
outsb
leave
adc
or
ret
or
lods
push
test
pop
ljmp
test
lods
xchg
xchg
sbb
std
popf
scas
jae
loop
xor
xlat
and
xchg
dec
mov
cs
pop
pop
add
adc
aad
xorl
loopne
aad
shlb
pop
fsubrs
pop
or
call
jns
shl
and
xchg
aam
mov
dec
out
jecxz
fisubl
ret
xor
xchg
loope
cmp
mov
test
jl
test
xor
lds
int3
mov
loop
faddl
frstor
pop
and
mov
shrl
lods
cmp
pushl
xor
fdivrs
clc
incb
or
sbb
mov
jmp
push
cmp
cmp
xchg
jo
xorb
or
xchg
mov
jle
test
orb
mov
movsb
xchg
jb
lods
loope
lea
daa
insb
popf
mov
push
pop
roll
popf
xchg
out
pusha
or
push
adc
cmp
stc
out
dec
std
or
paddsw
aad
mov
cmp
mov
add
add
mov
or
aad
daa
loop
and
or
or
inc
mov
lods
cltd
movsb
xor
mov
and
enter
sbb
xchg
rol
outsl
scas
push
js
mov
jl
pop
orb
lret
insb
pop
bound
jne
mov
lcall
dec
push
scas
filds
decl
push
mov
je
outsb
and
push
out
lods
dec
dec
jle
iret
and
xlat
push
push
jle
mov
in
mov
imul
mov
imul
loop
daa
mov
lea
mov
ljmp
adcb
in
outsl
inc
imul
mov
adc
loop
xor
lahf
jecxz
lret
jecxz
ljmp
icebp
mov
rol
push
or
jg
jecxz
mov
arpl
mov
xchg
and
xor
add
repz
adc
fcompl
sbbl
out
xchg
inc
sbb
xchg
lea
scas
scas
pop
insb
sub
sti
jp
jecxz
mov
inc
dec
push
mov
push
xor
push
push
mov
mov
sub
imulb
movsbl
sub
cli
pop
pop
mov
sbb
mov
pushf
out
xchg
mov
lea
and
push
int3
sti
xchg
daa
jg
push
mov
sbb
call
push
xchg
push
icebp
in
jb
dec
pop
cmpsl
dec
and
cmp
mov
ret
mov
jge
lds
mov
lds
ficoms
jae
insb
jae
push
fimuls
gs
jge
iret
out
mov
inc
adc
mov
push
imul
jg
mov
mov
jnp
add
adcb
loop
sbb
rorb
push
sbb
push
lods
popf
mov
in
sahf
sbb
test
inc
pop
and
jle
inc
sub
addb
aaa
mov
test
add
lds
ljmp
pop
mov
pop
jb
ret
stos
roll
addr16
test
push
push
cmp
sahf
sbb
mov
sbb
add
iret
mov
rolb
sub
lock
out
mov
iret
or
lock
push
scas
adc
scas
fmuls
mov
sbb
cltd
outsl
xor
les
mov
insb
bnd
sahf
ss
es
xlat
out
or
xor
sahf
inc
jecxz
mov
in
daa
cwtl
leave
jbe
es
xchg
repnz
mov
mov
add
or
push
sbb
idivl
jne
repz
loope
mov
jae
ljmp
lcall
ja,pn
jp
push
ret
jle
popl
mov
mov
sarb
cmp
add
in
push
mov
imul
movsb
aam
out
insl
jo
xchg
pop
or
cmp
jne
stos
loope
mov
dec
pmullw
lods
fxch
andl
push
fistpl
divl
bound
cmp
lea
inc
lds
aad
fldz
fcomps
mov
mov
pusha
xor
cmc
jg
xchg
cmpsb
or
jno
dec
sarl
pop
loop
bound
daa
push
xchg
mov
mov
xchg
cmc
int3
xor
dec
loop
fmull
js
jl
sti
inc
pusha
dec
into
jno
inc
lods
fistl
cmp
mov
dec
test
and
sub
les
xchg
fcomps
outsl
xchg
fsubrl
testb
mov
cwtl
jae
cli
or
subl
push
inc
adc
and
sbb
mov
repnz
jbe
sbb
dec
xchg
sbb
or
incl
mov
rcl
xchg
nop
movsb
dec
mov
pop
sub
xor
stos
jb
lods
xor
aad
mov
test
adc
xchg
xor
xchg
ret
mov
aam
subb
out
mov
daa
and
fst
adc
shr
cmp
inc
mov
push
mov
addb
sahf
push
sbb
orl
cmpsl
mov
mov
mov
push
and
adc
and
push
fdivs
outsb
hlt
cmp
jne
cmp
and
sbb
jne
cwtl
mov
xchg
push
sarb
mov
das
push
mov
sahf
daa
inc
sbb
pop
jns
fcompl
lods
repz
imul
clc
nop
pop
jl
rolb
ja
inc
and
mov
stc
dec
cwtl
stos
mov
stos
push
sub
pop
fs
xchg
adc
inc
xorl
mov
push
ret
outsl
mov
sbb
lahf
std
pop
out
add
sbb
inc
test
mov
popa
in
or
or
stos
fildll
hlt
and
cs
fwait
push
nopl
mov
ja
push
stc
cmpsb
sti
dec
mov
ss
add
mov
les
dec
or
outsb
cmp
inc
add
lods
cli
daa
push
mov
xor
jb
in
in
lods
xchg
mov
fldl
inc
mov
loop
hlt
test
or
mov
pop
xchg
jle
popf
jno
cmp
paddw
sahf
bound
rcl
scas
inc
and
int3
xor
mov
and
mov
movsb
ljmp
int3
ret
add
int
pop
jmp
popa
out
adc
fs
in
and
fdivl
jg
into
cmp
cmp
fimull
mov
mov
out
jle
repnz
xor
dec
dec
xlat
stc
mov
or
lahf
pop
dec
mov
test
outsb
xor
outsl
adc
mov
dec
add
cmpsb
dec
inc
fistps
sti
fisttpll
or
adc
push
jle
test
xlat
lret
fcoms
mov
adc
cmp
out
dec
sub
dec
dec
scas
shlb
test
push
or
xchg
cmp
xchg
arpl
dec
push
sub
adc
mov
pop
mov
dec
and
adc
movb
jne
clc
stos
into
or
fisttpll
loope
clc
jge
hlt
xchg
jl
jns
out
aaa
test
les
push
pushf
test
jb
orb
pop
push
aaa
cltd
out
enter
es
jmp
lret
adc
rclb
add
push
xor
and
or
sub
cmp
in
cmp
int
int3
pop
sbb
sub
add
cmp
jo
out
jnp
push
push
push
addb
les
xchg
adc
xor
mov
add
movsl
pop
leave
sub
insl
cmpsb
pop
popa
and
jne
jo
fbstp
jns
jmp
sbb
and
dec
cld
imul
mov
mov
outsb
mov
add
push
add
lahf
fcmovu
jp
imul
cli
cltd
inc
les
repz
push
mov
shlb
dec
sub
leave
xchg
add
jae
adc
sbb
mov
dec
add
into
pop
sub
enter
pop
js
imul
fs
icebp
into
popa
pop
pop
push
pop
fwait
je
test
icebp
es
cmpsl
xchg
flds
imul
cmp
mov
pusha
cld
add
mov
pop
rcll
sub
lds
or
cmp
addr16
push
leave
xor
push
loop
ljmp
gs
mov
popa
push
fwait
rolb
mov
dec
test
adc
mov
in
cmpsb
mov
cli
imul
iret
pop
push
cmp
lock
jno
aaa
rclb
mov
subl
pop
cmp
pop
rcrl
pop
sub
std
fs
mul
dec
inc
adc
sub
xorb
sahf
xchg
inc
pop
mov
pop
test
sbb
jne
in
sub
mov
or
lea
push
ja
data16
mov
imul
cmp
xchg
mov
loopne
aaa
push
ret
fst
push
xlat
hlt
lods
xchg
or
movsl
jo
test
std
sbb
cmpsb
sbb
clc
test
mov
jbe
and
mov
xor
int3
cmp
je
mov
jmp
cmpsl
cld
jecxz
mov
shl
jo
inc
adc
lret
sbb
iret
out
xor
gs
xchg
or
xchg
xchg
and
jb
adc
xchg
cmp
shl
hlt
mov
mov
clc
adc
fmull
imul
or
dec
mov
jge
shrl
push
pop
data16
jnp
addr16
dec
dec
loopne
cmp
sbb
mov
cmp
mov
aam
mov
or
and
loop
xor
jo
jne
push
adc
inc
test
ss
mov
pop
pop
test
insb
cwtl
sub
ja
add
mov
jns
fcmovb
je
push
mov
mov
jo
lock
fs
xchg
scas
cli
inc
daa
mov
lods
data16
cmp
and
ret
adc
pop
add
xchg
dec
adc
xchg
scas
push
aas
test
lds
pop
fildl
imul
stc
dec
push
jle
xchg
pop
imul
sub
push
fwait
pop
sub
popa
sub
cmc
mov
xchg
jne
jae
clc
xor
pushf
dec
je
push
roll
add
jg
scas
pop
scas
pop
push
xchg
inc
add
repz
cmpsb
iret
gs
dec
mov
flds
mov
ss
ret
mov
js
ljmp
mov
ja
mov
dec
daa
nop
nop
fdivrl
or
jae
dec
jl
or
and
mov
push
mov
mov
dec
test
ss
outsb
leave
insl
inc
popf
mov
out
pop
dec
fdivs
jns
test
mov
sbb
and
push
pop
cmp
loope
add
push
cs
mov
add
push
mov
enter
pushf
scas
loopne
or
fisubs
loop
rorb
mov
fdivrp
push
dec
sub
int
shl
mov
mov
inc
xorl
mov
std
stos
loop
jmp
cmpsl
ret
imul
add
cmp
loopne
scas
cwtl
add
sub
add
sbb
dec
lret
add
mov
mov
sub
sub
inc
cs
ret
daa
test
aam
test
mov
je
sub
mov
and
lods
dec
adc
jno
movsb
xchg
aad
adc
xchg
cmpsl
dec
sub
jno
lahf
or
aaa
add
xchg
fldl
dec
enter
xor
xor
mov
scas
outsb
ds
or
push
inc
sub
outsl
or
and
or
and
stc
adc
or
push
cltd
arpl
mov
mov
repnz
jbe
cmc
cmp
aaa
add
mov
jno
adc
icebp
and
mov
clc
mov
pop
inc
pop
lods
jp
fistpl
loopne
cmc
gs
pop
pushf
push
out
mov
in
push
jmp
adcl
adcl
mov
jns
imul
es
lds
pop
xor
fsubrs
imul
jge
ret
and
inc
xchg
cmp
jbe
sbb
sub
add
add
jae
dec
aas
xor
sbb
stos
xchg
imul
jle
rol
adc
and
into
push
and
and
mov
mov
inc
sti
imul
stos
out
dec
test
movsl
inc
in
outsb
insl
shll
cmp
inc
cmc
scas
scas
arpl
scas
pop
int3
scas
and
mov
int3
and
movsb
clc
mov
scas
mov
cltd
xchg
sahf
pop
adc
pop
cmpsb
inc
scas
lret
cmp
test
sub
imul
jns
push
and
pop
mov
shrb
push
sub
popa
dec
into
cmp
cwtl
lcall
into
test
daa
jo
push
icebp
sti
jge
xchg
push
scas
aam
pop
pop
jb
mov
mov
adc
jle
imul
inc
hlt
ja
mov
pop
jl
dec
sub
sub
and
pop
xor
cmp
dec
pop
inc
xor
push
sbb
inc
and
ss
adc
push
push
cmp
cmpsb
push
mov
push
repnz
cmp
dec
lahf
sbb
fcomi
stc
pop
fs
popf
push
sbb
jnp
mov
bound
and
daa
push
out
sbbb
push
mov
cli
lret
sub
and
mov
ja
mov
jg
fs
mov
jle
push
ljmp
insb
int
lods
jge
mov
and
and
cmp
jno
xorl
cmpl
scas
sbb
es
xlat
and
insl
das
and
sbb
std
movsl
lret
ror
pop
mov
pop
stc
push
mov
in
pushf
fnstenv
int3
add
sbb
outsb
es
pop
or
pusha
or
and
ljmp
xchg
xor
aam
pop
lret
cwtl
jmp
aas
daa
cmpsl
add
xor
jecxz
push
rcr
add
xor
xor
mov
cmp
jns
cmp
aad
lds
fdivs
add
xor
lea
and
clc
pushf
out
rcr
mov
add
subl
test
lea
je
out
push
cmpsb
mov
adc
fcompl
subl
xor
ret
and
test
cmc
je
das
or
push
test
add
pop
adc
test
daa
and
jmp
push
int3
xor
mov
push
insb
mov
jecxz
push
push
fwait
jmp
xchg
inc
cmp
pop
or
test
pop
mov
mov
lahf
aas
std
xchg
movsl
push
fisttpll
iret
mov
and
add
xchg
cmp
or
cmp
repnz
std
arpl
int
cmp
mov
pop
xor
popf
pushf
xor
cmp
sub
sbb
loop
shrb
pusha
jmp
sub
rolb
adc
mov
sub
pushf
es
sub
pusha
jmp
aam
aad
mov
pop
std
movsl
jecxz
icebp
inc
in
int3
cmc
movsl
lods
sbb
clc
or
push
push
push
dec
add
cmpsb
cmp
mov
dec
cs
xchg
mov
mov
xor
cmp
add
mov
pop
or
mov
mov
and
arpl
or
adcl
imul
pushf
pop
inc
dec
int3
ss
push
and
andl
fdivl
inc
push
mov
pop
pop
sar
jg
mov
jne
push
cmp
outsb
out
imulb
mov
adc
inc
rorl
pop
repnz
xchg
mov
inc
ret
lods
lret
mov
jg
mov
ficoms
lods
shrb
sti
cmp
insl
nop
aaa
sarl
lahf
mov
adc
push
fbld
cmp
jns
les
ja
xchg
negl
shlb
adc
aad
mov
inc
icebp
dec
adc
in
sub
jb
or
loope
clc
lahf
fnstenv
adc
sarb
aad
jg
divl
jns
xchg
pusha
ss
xor
add
xchg
stos
fstl
and
push
imul
shll
sbb
ds
stc
adc
mov
popa
daa
pop
stos
adcb
pusha
das
cwtl
inc
and
mov
aad
sbb
mov
sbb
jmp
out
adc
dec
add
or
cwtl
mov
xchg
adc
iret
push
mov
cwtl
push
pop
add
push
movsb
push
test
pop
lods
adc
xchg
mov
pop
int
addr16
mov
cmpsb
fstpl
dec
adc
outsl
inc
jle
nop
shrb
lret
sbbl
xor
fidivrs
mov
imul
mov
gs
sti
hlt
xor
mulb
rcrb
mov
mov
xor
or
cli
scas
push
mov
jbe
movsl
xor
out
mov
test
mov
push
loop
int3
push
lods
lods
repz
xorl
mov
mov
dec
mov
scas
push
push
std
addr16
leave
sarb
xchg
jno
aas
clc
addr16
pop
or
bound
jb
aad
sub
sub
into
pop
xchg
into
or
jns
lock
jo
addr16
pop
push
das
ds
jae
add
testl
xchg
push
xchg
jecxz
mov
jno
pop
sbb
jne
pop
outsb
stc
or
out
inc
dec
subb
mov
movsb
cld
dec
mov
pop
sahf
or
clc
or
cmp
outsb
xchg
jmp
mov
sub
in
pop
pushf
cmc
popf
into
mov
sub
test
inc
mov
push
mull
pop
adc
insb
sub
jo
jecxz
outsb
add
cmp
sub
ret
pop
rcll
pushf
pop
or
mov
sarl
and
enter
mov
sub
dec
push
lock
negl
mov
addr16
outsl
pop
into
inc
testl
mov
in
outsl
adc
shlb
insl
jnp
lret
dec
add
sbb
hlt
mov
lcall
aas
enter
gs
addr16
sahf
pop
push
lods
xchg
inc
xchg
add
test
dec
sub
pop
mov
mov
jle
jmp
hlt
pop
add
xchg
notl
mov
out
mov
clc
aas
inc
mov
roll
nop
mov
pop
nop
xchg
popa
dec
lea
mov
sub
xorb
and
mov
imul
jns
ret
cld
shl
psubusw
jb
inc
and
enter
jns
cmp
repz
sub
outsl
adc
inc
xchg
adc
and
lock
idivl
fwait
dec
in
push
fcoml
cmp
mov
subb
xchg
xchg
test
test
sbb
cmp
and
cmp
lds
mov
and
fmul
loopne
mov
add
scas
sbbl
xchg
jbe
fiadds
ss
fistps
sub
hlt
push
adc
lret
aad
adc
xor
mov
jne
cmp
xchg
pushf
mov
inc
dec
push
clc
aas
cmp
push
jbe
testb
cs
lock
ljmp
ror
inc
mov
sbb
inc
sti
aad
imul
sub
adc
mov
xchg
push
pop
nop
inc
rorl
std
popa
xor
and
pop
cmp
xchg
push
push
cmpb
cmpsb
dec
js
or
aad
pop
mov
pop
loopne
jg
fnsetpm(287
add
push
sbb
dec
mov
push
adc
rcrl
and
push
outsl
and
shr
cli
xchg
lods
xor
jle
lea
shll
mov
test
or
xor
lods
subl
mov
jl
mov
mulb
sti
out
add
neg
xchg
add
rolb
fxch
mov
movsb
ss
mov
jmp
rol
sbb
dec
daa
stc
nop
xchg
cwtl
push
jmp
fists
out
stos
cmp
sub
jp
or
mov
push
sub
mov
js
cli
push
dec
mov
add
ja,pt
xchg
sub
cmp
sbb
in
jge
inc
loope
lods
stos
loopne
xor
iret
lods
push
dec
lds
xchg
sub
lds
jl
cwtl
out
fsubl
push
outsl
fcomps
xchg
pop
sbb
cmp
mov
sub
test
add
add
xchg
pop
lret
xchg
frstor
lcall
mov
dec
dec
std
jnp
insl
mov
pop
sbb
jl
push
jmp
rcr
xor
dec
pop
cli
adc
cmp
xchg
cmc
push
fimuls
divb
cld
in
fiadds
mov
mov
int3
sub
mov
push
push
popa
push
inc
aas
jae
test
fstps
mov
pop
sub
data16
pop
fimuls
sub
or
xchg
shlb
cwtl
in
outsb
lods
xorl
inc
mov
pop
xchg
lahf
sti
sbb
rcrl
arpl
fistpll
mov
mov
mov
sti
lea
and
or
aad
test
andnps
stos
rcl
imul
xchg
fstps
scas
xchg
xor
nop
lcall
cmpsl
sub
xchg
mov
pop
xchg
mov
lahf
mov
fdivr
inc
mov
in
or
inc
iret
xchg
jae
shll
shrl
lds
dec
pop
add
lcall
popa
aas
mov
inc
dec
andb
sub
mov
sub
adc
inc
mov
outsb
push
or
mov
pushf
movsb
or
cld
mov
mov
pop
xor
mov
mov
adc
mov
adc
adc
ret
cmp
and
stos
outsb
inc
test
jecxz
mov
cmp
mov
shll
pop
mov
or
mov
push
cwtl
cmp
pop
xor
sbb
adc
mov
pop
mov
fildll
inc
aam
imul
push
shrl
pop
mov
sbb
bound
mov
into
int3
mov
loope
outsl
lds
jge
cmp
sub
enter
push
and
jns
mov
mul
outsl
lea
mov
pop
sti
dec
rolb
insb
mov
insl
ja
int
ss
push
mov
push
sti
or
cmp
xchg
mov
xchg
adc
pusha
sub
into
cmc
subl
addb
ss
icebp
xchg
mov
leave
lods
sbb
cmp
out
arpl
pop
pop
in
outsl
xor
pusha
jle
push
mov
daa
cld
aas
cwtl
xchg
inc
jmp
pop
xor
dec
fs
inc
pop
int3
out
mov
int3
mov
fimull
loopne
adc
out
insl
aas
cltd
inc
loope
add
lock
fstpl
daa
test
je
jl
pushf
push
lock
int3
testl
jecxz
test
push
mov
inc
test
gs
mov
mov
out
or
dec
xlat
mov
test
jae
pusha
out
mov
add
jp
pop
mov
inc
pusha
sarl
aas
push
sbbl
sbb
mov
xchg
ds
mov
pushw
imul
je
dec
bound
xchg
mov
mov
test
push
dec
push
in
stos
pop
aam
je
push
pop
fwait
sbb
ljmp
mov
mov
shlb
mov
arpl
test
lods
popa
loope
pop
cmp
mov
insb
ja
pop
add
imulb
sub
jns
arpl
dec
testb
rcrb
and
sbb
aaa
sbb
push
aad
out
push
push
mov
sbb
add
push
mov
lds
or
loopne
sbb
sbb
sbb
sbb
mov
mov
xchg
dec
rorl
xchg
pop
in
mov
cmpsb
movsb
loopne
jmp
mov
push
insl
les
push
push
push
popf
out
pop
or
dec
jae
push
mov
fwait
jne
aad
add
cmp
mov
into
jl
test
dec
xchg
popf
lods
jmp
pop
mov
test
sbb
push
scas
mulb
incb
inc
add
test
sbb
cmp
mov
cltd
cmp
xchg
add
dec
lret
or
inc
addr16
sbbb
iret
inc
xlat
fcmovne
mov
and
sarl
les
pop
pop
xor
sti
pop
fists
loope
sbb
sbb
sbb
loop
dec
sbb
fidivrl
hlt
int
mov
rorb
imul
sahf
shll
shrb
add
in
in
fnstenv
insb
or
sbb
rcl
xchg
mov
mov
jle
and
dec
imul
es
jg
psrlw
mov
cs
test
ja
cld
test
mov
mov
aaa
jo
xchg
sar
lahf
aaa
popa
inc
and
dec
cmpsb
dec
stos
jb
cli
pop
inc
cmc
sub
cli
mov
cmc
scas
mov
inc
mov
jne
xchg
mov
loop
sub
fsubrs
mov
push
add
inc
pop
int3
cmp
ljmp
mov
cmpsl
in
pop
shr
loopne
push
mov
or
sub
mov
scas
push
xor
dec
pop
or
mov
or
sbb
pop
iret
or
push
sbb
cmpsb
cmp
test
sub
loope
sbbb
and
popa
sahf
repz
in
mov
ljmp
pop
jo
insb
lds
jns
jne
movsl
arpl
lret
inc
jae
stc
mov
mov
stc
stos
xor
pop
arpl
cmp
sub
jecxz
xor
sub
mov
xor
add
cmp
pop
cld
adc
movsb
mov
std
xor
mov
inc
and
lcall
cmp
dec
ret
mov
inc
or
into
int3
hlt
mov
push
decl
arpl
xchg
sbb
cmpsb
xchg
push
into
scas
ja
inc
dec
sub
lret
inc
push
insl
mov
mov
push
sub
ljmp
ja
iret
dec
andl
stos
lahf
and
pushf
jecxz
fisttpl
mov
movsb
ds
es
pop
inc
fisubs
push
adc
roll
cmp
cmp
mov
inc
aad
jnp
insl
mov
mov
and
fimuls
xchg
sub
cmp
loop
insb
push
movsb
xchg
adc
hlt
adc
cmp
mov
xorb
ret
ss
aam
pop
mov
push
or
and
icebp
ret
xor
xchg
cmp
test
mov
xor
sbb
mov
dec
push
push
fdivs
mov
stos
shl
std
mov
int
add
jp
sbb
push
sbb
add
and
shlb
adc
fidivs
dec
mov
nop
cmpb
arpl
lock
test
jae
inc
pop
mov
pusha
sub
in
int
add
das
stos
lea
mov
and
lods
orl
shrb
cwtl
cmp
fcomps
out
clc
cmp
xor
push
dec
dec
pop
std
mov
loope
xlat
adc
into
inc
xchg
dec
icebp
pop
pop
adc
fdivrs
dec
mov
and
cmpsl
or
rorl
push
cmp
jb
sub
and
adc
mov
mov
lret
jecxz
test
and
xchg
mov
adc
std
inc
shll
in
xchg
and
imul
lret
xor
push
jb
fistpl
incl
lea
mov
mov
push
fidivrs
sahf
out
lods
lds
cmp
mov
lods
cwtl
or
jne
test
jo
or
cmp
sub
das
jbe
pop
add
adc
jg
mov
pop
stos
sarl
xchg
lcall
sahf
outsb
out
js
sub
mov
mov
and
movsb
sub
xchg
addr16
push
inc
push
dec
cmp
mov
pop
scas
adc
lods
fstpt
test
rcrb
popa
enter
aad
push
ret
mov
pop
dec
sbb
mov
jne
or
mov
mov
dec
pop
dec
out
js
testb
addb
mov
xchg
mov
mov
jmp
push
dec
aas
or
rorb
cmc
stos
cmp
jae
cli
cltd
es
push
out
je
subl
pop
out
add
or
lods
mov
mov
xchg
cmp
data16
mov
test
xor
sub
flds
dec
inc
out
dec
jno
inc
mov
pop
xor
cli
cs
cmp
xchg
jl
bound
stos
out
jecxz
mov
sti
push
dec
adc
inc
fsubrs
nop
dec
adc
push
fcomps
jns
add
xor
ss
aaa
rclb
cltd
cld
dec
aaa
lcall
push
add
daa
fnstcw
insb
xor
je
stos
mov
pop
push
out
leave
sbb
stos
in
mov
outsl
pop
in
mov
outsb
pusha
pop
shlb
sahf
inc
lds
push
fiadds
and
add
sub
test
xor
outsb
xor
jp
pop
mov
enter
xor
dec
and
sbb
popf
xchg
outsb
int
inc
jbe
dec
mov
lea
in
mov
cld
sbb
sbb
in
sbb
mov
xor
incb
jmp
js
ja
shrb
and
push
pop
iret
and
mov
popf
fcompl
xchg
ljmp
jnp
push
and
xlat
popf
in
push
push
mov
imul
repz
test
cs
movsb
push
jmp
cs
push
jae
pop
call
mov
lods
decb
add
les
xor
test
nop
sub
popf
daa
mov
lahf
cwtl
lret
pop
iret
pop
xor
hlt
aad
addr16
add
adc
pushf
das
cmpsb
out
cmp
testl
aam
popf
sarl
inc
and
add
test
gs
inc
mov
adc
cli
clc
mov
or
ss
cmpsb
jge
mov
sub
cwtl
jbe
std
addr16
xor
push
in
fldt
enter
push
imul
jge
and
call
dec
sbb
lods
mov
fld
xor
lods
push
jl
xchg
mov
cmpsb
pop
in
int3
fs
hlt
flds
cld
mov
clc
jge
rorb
sarb
pop
push
int
jb
int3
mov
gs
push
pop
cmp
lcall
adc
popf
jmp
mov
or
lock
mov
push
dec
push
out
test
xchg
mov
loope
push
pop
pusha
mov
jns
out
fstpl
stos
clc
movsl
imul
jmp
stos
cltd
and
ss
fldt
dec
and
lea
cmpsl
mov
in
sub
popf
out
das
mov
nop
icebp
jl
out
mov
push
push
bound
js
adc
jno
xchg
pop
jle
and
popl
adc
xor
jmp
mov
push
push
fists
push
in
mov
jo
push
xchg
pop
pop
jnp
into
pop
sub
or
int3
xchg
pop
movsb
aaa
cmpsb
test
popf
inc
dec
cli
push
jp
sahf
mov
push
mov
test
fdiv
in
sub
stos
mov
iret
jmp
aam
adc
orl
orl
or
and
lcall
insb
pop
cli
mov
mov
stos
and
add
icebp
cmp
enter
cmp
into
jne
fiaddl
sub
test
pop
inc
mov
inc
je
jecxz
push
mov
inc
mov
sub
lahf
cld
rorl
outsb
jg
or
lods
and
inc
jle
lahf
sahf
mov
push
mov
imul
mov
mov
das
sub
xor
xchg
or
cli
sbb
faddl
and
cmp
mov
js
and
ret
or
jo
gs
mov
stos
inc
nop
ja
push
popl
and
lahf
inc
push
push
mov
insb
jmp
inc
leave
ljmp
push
sti
lret
insl
mov
adc
iret
popf
bound
call
hlt
into
xor
mov
mov
mov
jecxz
cmp
sbb
xchg
rcll
repz
sbb
sub
mov
mov
outsb
ljmp
sub
icebp
jno
sti
stc
sub
push
and
pusha
ret
push
sbb
leave
or
decb
mov
aas
testb
mov
xor
mov
test
ret
mov
js
cmc
cltd
cld
push
or
inc
mov
adc
adc
leave
jmp
sbb
sbb
push
call
in
fs
inc
jbe
push
jo
cmp
push
pop
mov
pushf
fwait
out
xlat
adc
jge
dec
popa
cltd
dec
test
cmp
fisttps
xchg
mull
imul
fnstsw
popl
xorb
andl
ja
in
add
sub
mov
lcall
jno
mov
and
out
push
mov
adc
popf
popf
cmp
dec
lret
xchg
loope
jp
clc
lock
sahf
xor
inc
add
fldt
sub
inc
jb
lret
dec
xchg
enter
aaa
call
mov
lahf
mov
pop
cli
clc
lods
ss
stos
sub
bswap
pop
fwait
call
and
in
aas
xor
cmc
mull
js
loop
sbb
inc
arpl
sub
lret
push
lea
xor
das
jb
je
das
cmp
testb
sbb
outsl
not
cmove
jo
or
ret
rcll
outsb
pushf
mov
filds
and
aaa
add
dec
mov
push
lock
cmc
sub
pop
mov
dec
out
add
popa
sbb
adc
dec
sub
jp
stc
rorb
cmp
and
fwait
mov
fs
mov
imul
jle
push
add
fdivs
push
imul
mov
and
jnp
lcall
push
in
repnz
cli
int
xchg
xchg
scas
nop
xor
dec
adc
adc
sbb
mov
or
and
test
sbb
rclb
imul
loop
jne
xlat
xchg
out
int3
inc
js
es
movb
adcl
sub
push
fcoml
popa
std
cmp
cmp
cwtl
dec
cmp
cmpsb
in
in
repz
mov
xchg
int
pop
fsubs
subb
push
sub
push
cld
movsb
and
jmp
xor
dec
xchg
ret
lds
fwait
addl
lret
ret
shl
es
and
mov
lahf
sbb
sahf
rcl
xchg
mov
xor
ds
hlt
sub
mov
movsl
iret
cli
add
sub
mov
repnz
push
pop
icebp
je
ds
lea
out
jb
mov
and
jo
cmc
ds
stos
inc
mov
mov
pop
mov
shrl
mov
inc
add
cmp
xor
mov
or
xchg
and
shrb
cmpsl
imul
and
cmp
jns
and
cmp
test
aaa
cli
sub
xchg
dec
outsl
and
nop
xchg
and
movntq
dec
and
aam
push
cwtl
mov
adc
aas
iret
in
inc
insb
pop
fs
mov
daa
jle
js
je
in
out
xchg
adc
push
sub
jbe
mov
push
fnstsw
cmp
xor
sub
dec
xchg
sbbb
sbb
rorl
imulb
mul
xlat
fstpl
and
jae
out
faddl
lds
out
leave
dec
frstor
lock
into
add
arpl
out
push
clc
jge
xor
mov
loope
pusha
in
fdivr
or
shrb
xorl
mov
fwait
mov
aam
cmp
pushf
mov
sub
mov
pop
add
hlt
pop
cli
repnz
mov
mov
loop
mov
ret
pop
sub
mov
xorl
je
mov
popl
inc
pop
sub
and
dec
push
or
cmp
testb
sbbl
push
xchg
push
ljmp
ficoms
push
adc
ret
fwait
outsb
dec
mov
rclb
mov
fildl
xor
jo
fstpt
outsb
cwtl
xlat
lret
xchg
scas
jae
loopne
fmull
add
testl
imul
add
and
fists
sbb
xor
push
push
sub
mov
data16
daa
es
loopne
stos
xchg
mov
mov
les
repz
push
out
out
pop
je
enter
fimuls
cmpxchg
clc
clc
inc
ret
xchg
addr16
fwait
loop
jmp
fbstp
outsl
lods
push
mov
rolb
loopne
xor
adc
fnstsw
pop
popa
test
test
shrl
out
jp
dec
inc
scas
mov
jmp
lret
mov
push
ffreep
sbb
mov
xchg
dec
lcall
dec
es
es
dec
inc
dec
gs
push
inc
dec
lods
shlb
lahf
xorb
ret
fsubl
xor
mov
bound
js
mov
inc
jnp
into
mov
mov
sub
jecxz
pusha
cmp
or
ret
sahf
inc
or
inc
jmp
std
es
std
les
mov
dec
shll
cmpb
jge
out
cmp
sbb
pop
hlt
je
rol
addr16
inc
and
loopne
adc
jle
xchg
jae
jl
push
dec
lret
mov
lods
scas
outsl
fwait
jmp
jae
xchg
cmp
dec
push
jecxz
inc
fsubr
mov
jae
js
movsl
pop
in
subl
or
cmp
and
xchg
sub
and
mov
lock
lahf
xor
jne
push
xchg
pop
fmul
push
sub
sub
dec
das
lods
inc
sbb
sub
addr16
cmp
je
push
push
stos
out
or
fwait
pusha
int
cwtl
mov
xchg
cmp
fidivrs
mov
cmp
enter
add
lahf
pop
dec
or
pop
push
rcll
or
xor
cmpsb
jno
pop
add
inc
mov
fldcw
xor
mov
inc
imul
loop
aad
xchg
dec
adc
cmp
mov
sub
imul
sbb
sbb
daa
sbbl
adc
push
call
mov
arpl
sbb
inc
addb
fsubrl
dec
bound
outsb
jge
scas
mov
call
movsl
test
dec
sbb
shl
mov
xlat
mov
inc
push
cli
lods
call
sbb
mov
subl
sbb
and
jno
and
jo
popf
scas
sbb
mov
add
in
test
add
dec
shrb
dec
sbb
repnz
push
fldcw
xchg
leave
pop
dec
icebp
dec
cwtl
inc
fucomip
test
frstor
adc
fldl
cmc
cmc
insb
xchg
sarb
dec
test
out
or
popf
mov
ret
xchg
jecxz
test
movsl
inc
testl
dec
mov
push
inc
js
ja
jecxz
cmp
adc
ds
mov
daa
loop
push
incb
inc
push
stc
mov
mov
mov
xor
jno
cmc
sarb
add
rclb
fadds
iret
mov
fiaddl
fildl
pop
adc
fildl
dec
test
or
mov
jbe
push
add
lret
mov
faddl
fwait
inc
mov
add
filds
jns
lock
xlat
mov
mov
push
push
mov
pop
js
jbe
pop
sbb
pop
jp
mov
or
fcmovne
jmp
subl
mov
ss
mov
fsubs
jle
mov
fldenv
jg
and
cli
dec
pushl
add
gs
sbb
movsl
inc
dec
cmpsb
out
sbb
imul
sbb
xor
mov
adc
xchg
imul
mov
ljmp
ret
pop
iret
das
mov
fs
enter
fimuls
je
add
lock
mov
ret
pusha
mov
jbe
shlb
nop
jne
fs
mov
inc
jnp
push
adcl
imul
mov
jmp
lret
loope
loopne
aad
stos
adc
enter
mov
xor
lret
xchg
cs
mov
lea
mov
es
call
shrb
and
test
mov
push
enter
push
mov
pushf
in
enter
pop
lret
movsl
sub
int
jne
mov
stos
fisubl
fbstp
ret
pop
adc
mov
jns
pop
into
insb
iret
rcrl
fwait
loopne
push
inc
setne
loop
jae
add
adc
sbb
pop
sub
dec
inc
clc
into
jle
sbb
mov
sbb
fimuls
je
push
mov
ret
dec
cltd
loopne
add
out
rcrl
add
and
rcll
sbb
sarl
dec
mov
dec
xchg
sub
insb
scas
shl
push
jp
sbb
pop
test
sub
addr16
jno
push
cmp
push
add
int3
not
out
xchg
add
sbb
push
xor
lret
pop
lcall
ja
pop
push
cmp
push
ficoms
push
pop
inc
out
and
dec
aaa
sub
shr
lahf
daa
cmpsl
mov
push
clc
jle
pop
jno
push
shrb
xor
cmp
mov
fldl
jle
pop
jbe
xchg
jecxz
pop
mov
sti
cwtl
int3
pushf
cmc
xor
xchg
in
push
xchg
jg
inc
inc
nop
push
stc
mov
add
lret
mov
mov
aad
pop
jb
repz
cld
call
repz
jns
cwtl
lret
negl
mov
inc
push
adc
jmp
insl
aaa
push
imul
mov
xchg
adc
mov
xor
mov
or
in
mov
xchg
mov
pop
test
jae
pop
sub
les
add
mov
sub
ljmp
mov
notb
in
mov
js
stos
int
stos
es
ss
fiaddl
mov
push
pop
mov
jbe
fs
push
mov
loopne
out
xlat
pop
sahf
clc
aas
push
out
ds
mov
aam
xor
xchg
or
mov
insb
imul
or
sahf
sbb
test
jecxz
sub
mov
popa
imul
jnp
sub
xor
lds
mov
dec
je
pop
repz
clc
iret
xchg
sbb
cld
xor
mov
es
xchg
push
jp
ret
and
pop
clc
mov
xor
xlat
pop
pop
in
dec
out
xchg
out
iret
xchg
rclb
jns
jns
inc
fcomip
addr16
lcall
daa
out
sub
jb
adc
je
push
cwtl
ds
push
and
imul
shll
ror
inc
fstl
and
inc
pop
loope
push
outsb
and
insl
fsubr
cmp
jle
jno
sub
dec
fadds
add
das
les
test
test
ret
add
in
mov
sub
in
sbb
mov
and
dec
subb
jno
push
mov
jge
push
addl
test
aas
sbb
lds
cltd
sub
and
orl
mov
xchg
push
fildll
jp
xchg
mov
mov
fisubrl
jae
dec
pop
pop
mov
cmp
popa
jno
sub
mov
sub
push
adcb
test
ret
inc
out
pop
cwtl
jp
dec
mov
mov
or
ljmp
ficoms
lods
sbb
or
or
push
dec
mov
push
shlb
test
pop
gs
test
lret
push
jp
repnz
in
lods
jmp
xchg
iret
xchg
and
jbe
cli
movsb
adcl
or
int
dec
xor
cmp
inc
mov
jnp
adc
jne
sbb
cmp
in
xchg
fsubs
out
jnp
outsl
xchg
lcall
add
or
pushf
mov
cmp
outsb
mov
shr
xchg
pop
mov
pop
cmp
out
sbb
xchg
sbb
sub
dec
inc
addl
jnp
jo
and
shlb
push
dec
mov
cltd
push
movsl
outsl
cmp
int3
test
outsl
or
cli
pop
insl
ja,pn
insl
mov
aas
push
shl
jno
imul
cmpsb
pop
or
std
outsb
aaa
js
iret
in
jbe
mov
jbe
adc
pop
sbb
adc
call
sbb
cs
ja
ret
ficompl
orb
stos
in
movsl
push
adc
dec
mov
push
mov
pushl
xchg
mov
andl
dec
jno
jbe
lods
fidivrl
mov
pop
add
cwtl
clc
cmc
push
aam
jb
mov
fldl
ret
das
push
test
pop
push
je
sub
jg
add
xchg
xlat
lds
dec
out
pop
sbb
das
cwtl
fldcw
inc
repnz
and
fldenv
movsb
shr
btc
or
pop
insb
mov
push
xchg
bound
ficomps
xor
push
mov
push
mov
iret
cmp
mov
fmull
sbb
fnstenv
pop
mov
dec
add
adc
packsswb
call
or
std
ds
dec
or
mov
lea
and
xlat
gs
jge
sahf
aaa
mov
test
mov
and
xor
outsl
repnz
mov
loop
sbb
mov
sbb
imul
loope
xor
jae
mov
out
sub
aas
mov
test
xor
dec
or
aad
test
insl
add
push
inc
xor
ljmp
pop
and
and
adc
sbb
sub
test
into
push
inc
popf
adc
aad
jg
movsl
push
insl
lea
les
imul
and
popa
sahf
mov
gs
jle
push
andb
pop
jb
nop
cmpsl
mov
and
xchg
jmp
icebp
jecxz
in
bnd
mov
test
or
mov
stc
cmp
adc
lret
jns
sub
loopne
aad
xlat
jae
nop
mov
addr16
add
in
pop
mov
icebp
mov
call
mov
mov
cmp
dec
mov
ss
jnp
adc
test
adc
cs
test
aad
jns
lret
inc
outsb
cmc
push
testb
sbb
cmp
sub
mov
push
push
in
lock
ficompl
fchs
popa
xor
js
mov
test
jns
pop
fs
jge
jl
sbb
mov
jne
push
push
push
outsl
mov
cld
xchg
inc
mov
xor
add
cli
sub
in
out
das
or
mov
sbb
lcall
or
fsub
ja
add
in
addr16
add
xorb
inc
lret
cmpl
inc
movsb
jbe
fs
movl
cmp
pop
push
ret
push
cmpsb
pop
and
mov
mov
daa
repz
adc
pusha
adc
aas
testl
sbb
dec
lcall
inc
std
inc
pop
cmp
scas
shr
hlt
or
inc
push
into
je
pop
rcll
ficoml
popf
jl
test
dec
loope
rcl
add
mov
pop
out
lret
into
pop
shll
cld
sbb
add
sub
xor
xchg
sub
mov
aad
and
or
shlb
jmp
jp
add
cwtl
aaa
adc
or
cmp
movsl
lock
mov
andb
iret
mov
push
sub
mov
push
mov
icebp
sbb
jl
lret
mov
sub
cmpsb
rcrb
out
cltd
mov
idivb
lods
push
jl
lods
xchg
sub
dec
jno
fwait
rcrl
xchg
lea
push
outsb
addb
xor
das
aas
rcrb
inc
sub
cmc
out
lahf
mov
into
adc
in
jmp
cmpb
leave
push
fldenv
jl
sub
and
test
repz
cld
hlt
xor
loope
outsb
mov
jb
js
jle
push
inc
in
jl
daa
mov
dec
xchg
pop
ss
popa
dec
sbb
pop
inc
pop
out
subb
cmpsb
into
daa
test
push
test
insl
fs
cs
shlb
adc
add
xchg
jp
out
and
mov
mov
stos
dec
xchg
and
out
fstl
movsbl
cmp
test
movl
mov
adc
aam
dec
pop
adc
cwtl
mov
inc
imul
mov
bnd
lea
xchg
push
call
jb
add
ret
pushl
jnp
das
jp
pop
adc
cmpsl
adc
iret
inc
mov
jae
add
jae
pop
fmuls
ret
xor
xchg
ret
bound
pushf
outsl
mov
xor
dec
out
sub
stos
jp
int3
out
repz
sub
aaa
ret
or
out
ds
sub
aaa
xor
or
shll
fcomip
adc
push
inc
out
inc
scas
xor
popa
push
sub
insl
or
lret
jne
outsl
fsubrp
pusha
push
inc
push
fistps
sub
sbb
add
sti
cmpl
popf
push
insb
stos
cmp
add
xchg
mov
cmpl
hlt
xor
jg
mov
or
sub
push
lret
mov
xchg
jmp
mov
pop
mov
sbb
lds
pop
call
ficoms
jge
mov
mov
add
adc
push
sbb
jmp
addr16
ja
cmc
pusha
mov
in
faddl
xchg
pop
rclb
and
pushf
sbb
and
inc
in
dec
sbb
cltd
or
pop
sub
and
cld
stos
jecxz
adc
aas
mov
push
daa
lcall
sub
and
and
sahf
aaa
adc
pop
push
push
jecxz
cmp
pop
sbb
aam
or
sbbl
ret
or
mov
pop
inc
jo
mov
imul
push
loope
mov
add
xchg
mov
je
xchg
pop
imul
and
addr16
fs
int3
jnp
and
push
sub
lahf
push
pop
xor
cmp
mov
movsb
rolb
inc
lock
leave
push
mov
sbb
test
xor
insb
sahf
jle
jb
xchg
cmc
ljmp
iret
in
sbb
movsb
sub
ficoml
cmp
lret
sete
or
mov
mov
je
pop
fisubl
cmp
fwait
shrb
loop
outsl
xchg
aam
cmp
mov
shrb
fisttps
int3
mov
hlt
sub
roll
jns
jle
sub
push
jo
mov
dec
cmc
xor
fnstcw
cmp
lret
jg
push
fwait
push
icebp
adc
cli
je
xchg
push
xchg
push
and
mov
pop
dec
out
mov
xchg
movsl
mov
mov
das
dec
repz
cmp
or
xchg
dec
dec
in
mov
cmc
movsb
leave
or
je
movsl
xchg
bound
xchg
scas
inc
lods
pop
stos
or
aad
dec
mov
outsb
cwtl
jecxz
pop
fisubrl
or
addr16
fisttps
sahf
mov
out
xor
dec
lret
nop
pop
jecxz
sub
sbb
add
mov
add
mov
pop
cltd
cmp
xor
outsl
pop
xor
mov
leave
hlt
cmpsb
mov
xchg
loop
imul
inc
scas
xor
push
mov
jecxz
mulps
and
stos
fstpt
mov
orb
es
xchg
adc
mov
add
lcall
jns
xchg
inc
test
cmpsb
arpl
fxch
mov
inc
pop
or
inc
bound
jae
int3
fcmove
cmp
int3
les
sarb
pusha
lds
sub
cmp
push
in
jl
pop
je
mov
ljmp
dec
mov
lods
xchg
jg
pop
adc
pop
mov
insl
add
or
stc
adc
mov
int
pushf
pop
xlat
mov
iret
loopne
cli
sbb
fcomi
out
xor
sub
pop
jne
mov
shlb
bound
jg
imul
mov
cmp
cs
push
push
daa
lock
lods
pop
cmp
fdivr
mov
movsl
sbb
pop
xchg
aam
lock
adc
cmpsb
icebp
movsb
stos
mov
push
jns
aad
pop
frstor
or
out
popf
mov
dec
push
push
iret
xor
clc
out
xor
dec
ds
shll
jecxz
les
dec
jnp
push
add
inc
xchg
jp
add
and
sbb
pop
faddl
push
mov
dec
and
jnp
ss
cld
loop
clc
mov
jle
cmc
pop
mov
int
ljmp
mov
or
add
push
pop
repz
inc
nop
mov
xor
or
jle
mulb
mov
lcall
xchg
enter
xlat
rclb
pusha
cmp
sbb
test
pop
or
out
and
cld
outsl
inc
dec
dec
sbb
repz
push
loopne
in
shr
fisttpll
sub
or
sar
xor
adc
outsl
pop
mov
shrl
loopne
xor
repz
sbb
es
inc
pop
inc
mov
xchg
cld
mov
stos
inc
test
jp
movsb
das
mov
outsl
dec
push
or
lock
push
jo
fld
shll
mov
inc
inc
shrb
inc
dec
loop
mov
mov
out
in
out
or
scas
mov
push
adc
int
pop
aad
push
cmpsl
pop
loop
lahf
int
sub
push
add
mov
jo
cmpsl
inc
hlt
loop
mov
xchg
lret
in
mov
in
jp
call
push
insb
fistps
xor
mov
xchg
mov
mov
sbb
jae
mov
mov
nop
jmp
push
jg
pop
xor
leave
sbb
sahf
pop
xor
pop
push
addr16
adc
cmp
sbb
stos
adc
pop
add
repz
insl
mov
pusha
lret
mov
inc
out
mov
adc
dec
popa
mulb
aaa
pushf
or
insw
adc
and
ljmp
inc
mov
std
adc
or
aad
repz
sti
scas
inc
xlat
and
test
js
imul
fucom
xor
adc
mov
jo
lret
xchg
test
int
outsl
enter
jbe
cld
mov
loopne
fcoms
outsl
jae
sahf
test
lods
imul
adc
push
jmp
leave
lahf
call
icebp
rcrb
jge
out
in
in
xor
les
sti
es
pop
sub
dec
jmp
leave
push
push
pop
or
mov
and
inc
sbb
dec
sbb
mov
xchg
jg
mov
pop
pop
jmp
mov
jmp
shrl
mov
push
inc
xor
mov
mov
jo
je
lds
movsl
pop
iret
sub
fnsave
adc
push
rcr
scas
shl
cmc
cli
sbb
dec
popf
lds
into
lea
jecxz
and
rcrb
in
xchg
sbb
movsl
daa
lock
fisttpl
push
and
dec
or
shll
roll
inc
add
pushf
lea
xor
sub
ret
mov
ja
repnz
inc
paddsb
add
stos
dec
shll
mov
and
rorl
mov
arpl
pop
xor
dec
lret
sbb
gs
lock
add
rcrl
cmc
cmp
xchg
mov
cld
adc
sub
mov
or
mov
popa
push
lahf
imul
fwait
jns
movsl
mov
sub
sbb
mov
jmp
xchg
jbe
movsb
jne
orb
movsl
pop
out
xor
add
rclb
mov
push
sbb
shrl
adcb
es
aad
sbb
popa
fwait
sbb
int3
pop
sti
lcall
lock
dec
jb
in
cs
sub
xchg
xchg
fs
in
jno
psubq
enter
popa
mov
and
rclb
mov
popw
pushf
sbb
mov
inc
or
sbb
adcl
jae
xchg
or
cmp
and
cmp
call
ss
scas
adc
mov
sbb
mov
pop
loope,pn
dec
adc
push
mov
push
sahf
rcll
sarb
clc
sub
and
adc
jne
push
pop
sub
jne
cmp
xlat
cmp
jl
push
push
pop
or
xchg
inc
insb
inc
add
jo
in
push
cmpl
lock
arpl
loopne
sub
mov
sbb
lcall
and
or
fs
xor
outsb
lret
in
xor
push
mov
sti
das
mov
jns
and
add
xchg
or
leave
iret
or
insb
rcll
sub
bound
xchg
mov
sbb
push
dec
imul
out
mov
out
dec
cmp
xchg
xchg
xchg
or
jle,pt
sbb
mov
dec
push
insb
add
push
or
scas
in
dec
push
dec
adc
or
jno
inc
pop
call
add
repnz
cmc
mov
pop
mov
lods
add
in
and
int
jb
cld
jl
mov
popf
sub
repz
cmp
fwait
mov
mov
push
mov
sub
lods
or
xor
ret
jnp
int3
jno
das
adc
mov
ljmp
mov
push
stc
cmp
outsb
inc
xor
xchg
pusha
lock
gs
and
bound
clc
leave
xchg
xchg
inc
mov
rcll
repz
sub
pusha
and
mov
xor
movsl
add
push
xchg
sbb
aad
rolb
sbb
or
dec
bound
and
push
mov
jecxz
sbb
mov
inc
mov
pop
mov
pop
add
shrb
inc
push
inc
jl
lahf
dec
push
mov
dec
inc
mov
shlb
mov
sub
dec
cltd
in
pop
adc
mov
dec
das
dec
scas
std
test
mov
cmc
int3
ds
inc
mov
popf
xchg
rcll
orl
xchg
xor
xorl
push
mov
ret
arpl
movsb
cwtl
adc
gs
sbb
adcb
je
or
lds
cld
push
inc
stos
mov
movsl
push
or
popa
mov
aaa
test
mov
rcll
test
jge
xchg
icebp
loop
popf
clc
or
out
add
mov
aam
pop
out
loope
shlb
sbb
fdivl
mov
jmp
pop
sub
mov
pop
mov
adc
mov
sub
inc
and
or
inc
mov
insb
je
pop
fs
je
push
inc
add
in
sub
rclb
add
jle
cli
divb
sub
cmc
xor
fdivrp
sbb
mov
pop
jmp
add
and
pop
inc
cmc
mov
test
xchg
push
cld
jo
pop
pop
push
pop
rcl
out
outsb
outsb
xor
lcall
sub
xchg
cld
cmpsb
xchg
mov
inc
mov
sahf
rcll
mov
int
push
mov
aas
and
push
mov
shll
mov
repnz
mov
pop
outsb
pop
insl
mov
rcll
or
sbb
inc
lcall
or
jbe
pop
fwait
test
jmp
hlt
aam
xor
mov
xlat
push
jno
movsl
push
mov
add
or
lret
jb
movsb
dec
movsl
and
sub
jbe
cmp
es
push
cltd
xor
lea
xchg
mov
repnz
dec
fsubrp
xchg
sti
ss
push
ja
fcoml
inc
jmp
add
test
fcom
xchg
inc
mov
and
xor
push
add
adc
les
xchg
sub
outsl
repz
stos
cmc
add
fs
jno
clc
nop
and
ret
sbb
insl
clc
maxps
push
adc
jne
cmp
aaa
ljmp
aas
lahf
mov
je
cmp
pop
mull
jge
das
jo
or
aad
or
stos
insb
jno
dec
pop
loopne
mov
adc
insl
fsubrs
push
ficomps
jg
jge
int3
jl
and
orb
fisttpll
mov
lods
jl
lea
mov
into
pop
daa
rcrb
icebp
aam
lods
pushl
ljmp
cmp
mov
xor
xor
adc
xchg
push
loopne
xlat
mov
stc
inc
imul
jmp
xchg
dec
sub
sti
mov
jp
leave
or
aad
mov
roll
std
xor
pop
addl
out
test
dec
sub
sti
dec
mov
ret
fmuls
xchg
scas
gs
addl
jb
push
mov
scas
ss
lea
imul
jo
movsb
xchg
divb
and
push
sub
mov
das
adc
xchg
in
dec
test
and
fwait
xor
pcmpgtb
lea
int3
xchg
xchg
push
mov
mov
leave
adc
or
mov
mov
aas
add
push
cli
mov
xor
fcmovbe
iret
in
leave
push
shll
imul
es
xchg
jl
les
push
xchg
cmpsl
jbe
jmp
adc
mov
es
pop
mov
imul
cwtl
js
mov
sub
dec
aaa
push
and
dec
cmpsl
or
add
sbb
loopne
loop
xchg
adc
jns
pop
and
fidivl
cltd
fs
mov
aad
sahf
push
dec
popa
aaa
outsb
pop
fstl
addb
enter
pop
push
and
adc
dec
pop
jecxz
repnz
cli
cmc
rorl
pop
gs
adc
loopne
frstpm(287
in
imul
jae
fnstsw
cmp
lcall
decl
dec
or
cwtl
out
lret
lret
mov
inc
and
dec
push
cmp
sbb
data16
dec
inc
cli
dec
subps
xor
push
cmpsb
jbe
inc
push
mov
jl
or
and
fucom
cltd
cmpsb
xor
dec
fistl
ss
loopne
dec
pcmpgtb
outsl
xchg
xchg
lret
in
sub
cmp
xor
in
add
scas
sbb
pop
push
mov
out
fsts
sarl
sbbl
loope
loopne
mov
pop
jg
push
and
add
shr
imul
xor
xor
mov
sbb
lret
cmc
loopne
xchg
mulb
pusha
xor
add
cmpsl
pop
xchg
in
jne
pop
shll
dec
jmp
hlt
cwtl
xchg
out
cmp
inc
clc
mov
or
mov
sti
sbb
push
dec
xchg
shrb
popf
jb
adc
xchg
mulb
and
push
jne
inc
and
cmp
xorb
pop
lds
jge
imul
mov
lock
cmc
push
repz
xlat
push
out
mov
xor
movsb
adc
sbb
fucomi
sti
mov
adc
out
divl
or
ret
cli
mov
xlat
in
push
add
xchg
xchg
sub
sub
enter
xchg
lret
inc
enter
ret
xor
push
out
shr
in
mov
pop
insl
jne
int
add
xchg
jo
in
xor
push
push
mov
bnd
les
dec
cmp
cld
jmp
call
xchg
cmp
mov
testb
es
or
add
call
repz
aam
inc
pushf
mov
int3
imull
loopne
jecxz
insl
cltd
mov
stos
and
popa
insl
or
cmp
jb
dec
lret
mov
outsl
jno
aas
jnp
adc
ret
repnz
pop
add
pop
xor
inc
pop
push
test
loop
cmp
and
ret
dec
test
mov
insl
ja
xor
lds
loopne
fsts
push
xchg
in
inc
pop
jp
jno
jnp
push
scas
aad
push
push
aas
dec
and
repnz
inc
cld
movsb
cwtl
setae
and
incl
aam
fmull
or
cltd
movsl
cmp
push
fprem1
push
aas
hlt
adc
and
stc
jo
mov
hlt
add
add
arpl
icebp
jg
stos
mov
pusha
mov
jo
jecxz
mov
cld
dec
lahf
add
jbe
lahf
lods
jmp
adc
out
shlb
mov
push
pop
ja
inc
aam
jge
xor
out
arpl
xor
xor
and
outsb
jmp
jnp
and
add
sub
mov
add
adc
gs
scas
iret
sti
rcrl
adc
lods
mov
jne
rorl
loopne
into
jle
movsb
and
cmp
mov
rcrb
mov
and
jge
cli
fsubl
and
mov
or
push
mov
jl
push
dec
lds
lretw
jnp
jl
je
adc
push
fdivs
mov
pop
data16
xchg
popa
push
mov
shrb
es
sub
outsb
lret
xchg
insl
mov
imul
inc
nop
insb
iret
fcompl
roll
cli
leave
adc
repnz
repnz
test
lgs
push
movsb
out
lea
aam
xchg
shll
mov
mov
or
jb
push
shlb
outsl
jae
loopne
jl
stos
in
inc
lahf
mov
call
jp
inc
outsb
lea
push
enter
jno
ds
sbb
sbb
xchg
hlt
sbbb
shlb
xchg
fs
rcll
repnz
scas
loop
sub
dec
push
lcall
int3
adc
imul
gs
ljmp
xor
ljmp
push
push
roll
mov
push
and
sbb
mov
int3
xor
cmp
sub
cltd
mov
push
pop
or
inc
loopne
dec
aad
cmpsb
sub
stos
adc
xor
jmp
sub
jl
movsl
lds
rcll
mov
fwait
mov
cli
gs
sub
cmpsl
mov
or
pop
mov
and
sub
enter
xchg
jl
push
jne
lret
sti
cltd
or
sbb
movsb
push
or
xchg
or
popa
test
jno
mov
pop
ds
popa
dec
sbb
xor
in
lret
xor
enter
or
jmp
mov
inc
addb
out
fwait
sti
push
dec
sub
shlb
in
stos
shrl
mov
imul
pop
loop
sbb
xor
jbe
je
cltd
sub
loopne
sub
and
xor
ds
repz
insb
pop
cmpsl
jo
js
jp
std
fwait
xlat
ja
les
add
je
leave
xchg
stc
xlat
mov
nop
xchg
pop
repnz
and
in
fwait
fs
pop
mov
fdivr
mov
imul
inc
vphsubw
ficoms
in
xorl
push
dec
scas
aas
fistpl
sahf
add
repz
pop
and
flds
adc
icebp
mov
mov
out
cmc
or
cmp
mov
xor
out
adc
jbe
leave
ljmp
mov
out
int
adc
and
adc
cmp
cmp
sbbb
and
dec
xchg
aam
cmp
or
out
aam
pop
jp
mov
xchg
adc
adcl
faddl
fisubl
fildll
mov
ret
test
xlat
test
jae
cli
lcall
adc
push
pop
cmp
jmp
push
pop
add
adc
stos
aas
sbb
xlat
daa
aad
or
add
inc
sarb
xor
xchg
push
nop
mov
js
outsb
push
pop
or
pop
ljmp
push
pop
bound
add
sbb
stos
adc
dec
scas
inc
dec
xchg
fildl
loope
and
jmp
stos
xchg
cltd
ret
push
cmpsb
rcrb
jl
pop
rcll
xchg
mov
sub
jle
daa
dec
jg
lds
and
cltd
sbb
enter
icebp
outsl
mov
insb
dec
aas
test
pop
lret
xchg
lret
and
push
nop
mov
lea
popa
mov
stos
mov
sub
xchg
inc
stos
push
out
inc
push
sub
out
xchg
cltd
xchg
fcompl
cmpsb
cmp
imul
out
push
mov
jno
xlat
push
push
lods
sub
out
jae
lods
mov
inc
lea
cmp
mov
xchg
sti
mov
out
or
fistpll
mov
sub
jns
stos
mov
xchg
clc
dec
das
test
pop
movsb
push
adcl
imul
inc
mov
icebp
shrb
insb
mov
push
fs
cmc
test
cld
push
xor
xchg
les
mov
xor
lock
or
and
test
cmp
std
mov
jmp
in
add
or
xor
ret
cwtl
rcrb
scas
insl
movsl
cld
jbe
xchg
scas
pop
jnp
pop
fs
addb
sbb
mov
into
add
bound
fimuls
ljmp
insl
jbe
pop
xchg
or
fdivs
sahf
lret
adc
push
leave
in
je
cld
lds
mov
fsubr
ficoml
jb
lods
sbb
hlt
data16
lods
push
pushf
cmp
cltd
fistpll
cmpsl
mov
popa
adc
lea
sub
dec
mov
repnz
sub
jl
in
jmp
xor
push
xchg
sub
cwtl
pop
mov
push
jl
push
hlt
ffree
sarb
sbb
pop
cltd
push
ss
dec
pop
scas
push
hlt
sti
hlt
das
scas
push
repz
jb
inc
cli
or
pop
pop
dec
mov
call
inc
or
jb
and
addb
fs
lods
in
and
je
inc
out
test
hlt
mov
dec
jbe
roll
outsb
mov
pop
lahf
and
inc
sbb
rep
sbb
mov
scas
outsl
inc
inc
sbb
dec
enter
arpl
and
mov
jns
ja
cvttps2pi
ret
mov
fidivrl
repnz
xchg
jl
cmc
mov
pop
jbe
mov
adc
xchg
xor
xchg
repz
cs
out
jmp
enter
roll
aaa
lock
cmp
jb
cmp
mov
and
lahf
imul
mov
cld
outsb
mov
dec
lds
fisubs
andl
inc
xchg
mov
push
mov
xor
jl
shlb
pusha
out
xchg
or
out
push
into
imul
inc
notb
jno
fcomps
in
mov
mov
jp
das
push
out
sub
jno
jno
push
inc
inc
lock
nop
lahf
pushf
push
inc
add
bound
xchg
mov
sbb
sti
cld
lahf
add
jmp
pop
jns
out
lcall
mov
insl
orb
mov
sbbl
scas
inc
pop
push
out
mov
test
sub
and
dec
mov
pop
sbb
es
cli
lahf
js
xor
mov
cwtl
inc
mov
xchg
mov
push
inc
sbb
jae
fidivl
mov
pop
xor
push
xor
lds
xchg
and
jo
stos
sbb
adc
cwtl
call
fnstsw
and
in
test
movsb
lea
mov
test
loopne
or
and
sub
mov
aad
sub
xchg
stos
sub
or
jle
mov
xchg
add
mov
inc
pop
lret
pop
arpl
incb
aam
pop
repnz
xor
cmp
push
cmpsl
test
jno
sbb
nop
push
out
cli
push
lea
out
cli
js
cmpsl
clc
cwtl
mov
loopne
inc
xchg
xor
fnstsw
pop
push
dec
pusha
lea
jg
and
mov
pusha
inc
xor
xor
sub
xor
repz
mov
fists
jnp
or
push
test
inc
sbb
dec
gs
adc
les
cmp
xchg
cmp
mov
dec
stos
jo
cmc
cmp
ficompl
movsl
xor
ret
test
dec
fisttpl
and
fwait
fs
testb
cmp
jp
mov
dec
xor
inc
xchg
loope
mov
cmp
aad
adc
inc
das
adc
jp
dec
mov
or
cwtl
jmp
mov
pop
add
pop
dec
cmp
xor
jo
flds
dec
arpl
outsb
inc
daa
rorb
fucomi
ja
cli
fsubrs
pop
push
das
aas
sbb
fisubrs
cmpsb
outsb
test
fistl
adc
jle
xorl
cmp
xor
enter
loope
and
aam
pop
aas
in
cmp
nop
inc
cltd
scas
cwtl
push
repz
lods
fmul
loopne
push
xor
cwtl
jg
mov
mov
mov
lahf
add
out
fs
xchg
faddl
dec
mov
scas
xchg
xchg
inc
xchg
and
mov
mov
push
imul
lds
push
adc
mov
mov
lods
dec
pop
cmpl
push
sub
out
mov
int3
mov
icebp
pop
jmp
in
cwtl
inc
lret
mov
daa
mov
into
sbb
daa
lret
sahf
mov
in
aad
out
xchg
mov
in
in
fnstsw
push
or
repnz
outsl
sbb
xchg
jo
popf
ds
pop
stc
jp
and
fucomip
adc
ljmp
nop
pop
imul
inc
xchg
mov
popa
adc
icebp
inc
andl
mov
jne
mov
and
cmc
fdivr
mov
in
fwait
call
outsl
shlb
cmpsb
adcb
pop
xlat
jecxz
push
push
sub
cmpsl
fldenv
xchg
fdiv
scas
add
inc
sub
test
mov
and
mov
mov
lret
mov
mov
dec
aad
dec
daa
cwtl
mov
mov
push
add
xchg
mov
fidivs
aam
sub
scas
add
popa
lods
shld
add
loope
pop
sbb
scas
mov
adc
js
jl
pop
inc
test
cs
loop
shrb
pusha
adcl
repz
xor
mov
icebp
add
lea
cmp
sub
jns
outsl
cmp
mov
jns
lods
jg
fisttpll
cltd
js
faddp
ds
pop
xor
mov
repnz
jno
call
xchg
mov
les
push
pop
ljmp
fwait
dec
leave
bound
jmp
es
int3
subl
pusha
cmpl
icebp
movsb
sub
and
jle
sbb
pop
call
sar
sbb
mov
popa
popl
pop
cmp
mov
sbb
mov
cmp
dec
fbld
inc
clc
clc
xchg
mov
mov
es
push
pop
addr16
fdivr
jg
add
pop
test
mov
mov
pop
es
fs
iret
sub
sbb
cwtl
add
xor
mov
sbb
adc
jnp
add
ret
xor
or
mov
sbb
jae
xor
dec
and
add
jg
xchg
test
pop
addb
jle
test
test
jge
and
outsb
xchg
sub
push
jnp
and
mov
imul
scas
hlt
daa
into
push
rclb
cmpb
add
pushf
sbb
pop
rol
cmp
jp
or
dec
mov
ja
lahf
test
fistpll
lcall
inc
adc
mov
ficompl
mov
flds
fstl
and
inc
sbb
and
fistps
mov
sarb
scas
enter
jbe
cmp
lods
adc
ficoml
sbb
mov
jmp
mov
mov
xlat
jle
imul
fcomp
mov
dec
std
dec
dec
stos
call
sub
aas
sub
call
cmp
ficompl
pop
cli
adc
mov
mov
jp
in
fprem1
movsb
lock
aad
inc
jno
mov
xor
xchg
in
and
push
jnp
sub
ja
outsb
jl
add
inc
pop
iret
xor
lock
outsb
push
adc
movsb
sti
pop
dec
ljmp
aad
xor
pop
stc
add
or
sub
inc
fs
jb
fisubs
orl
dec
test
repz
int3
or
sub
mov
jmp
es
shll
pop
xor
inc
push
fstpl
shl
mov
inc
or
push
push
add
js
fistl
lret
das
aam
loope
jnp
lods
cmpsb
and
dec
repnz
test
pop
scas
test
aas
lret
mov
and
and
scas
mov
xchg
push
in
push
xlat
sub
lea
jle
iret
popf
cld
lcall
sub
lret
popl
lock
mov
stos
loope
lret
add
ljmp
push
mul
push
cmp
shll
arpl
std
repnz
imul
jns
ja
data16
sbb
pop
jb
dec
stos
aam
mov
dec
add
idiv
or
daa
sub
dec
in
sub
sbb
cmpsl
adc
xlat
mov
scas
adc
mov
jmp
push
adc
lret
cmp
arpl
mov
cli
xor
pushl
popf
mov
lds
jns
sbb
pop
add
icebp
pushf
loopne
add
int3
out
xchg
inc
int
repz
mov
rol
mov
xor
pop
rcl
xor
loopne
std
dec
jnp
xchg
cmp
imul
mov
push
pusha
push
clc
adc
cmc
rorb
aaa
jae
and
pop
fsubr
adc
mov
scas
lahf
dec
sti
cmp
xchg
mov
fcoms
dec
lcall
jl
mov
sarl
dec
test
in
pop
cmp
and
scas
lock
divb
inc
jl
xor
mov
enter
addl
addb
jg
cmc
fiaddl
aas
in
popa
inc
adc
add
push
dec
lcall
cwtl
std
push
ja
sub
inc
mov
icebp
daa
adc
and
out
imul
pop
roll
sub
ljmp
popl
xlat
fsin
and
movups
jnp
mov
clc
into
mov
insb
inc
xchg
cs
jle
add
dec
out
jbe
into
hlt
stos
add
jg
pop
pop
out
and
aam
sbb
insl
lcall
adc
push
push
lahf
les
jno
xchg
mov
imul
sub
sbb
ljmp
shll
cwtl
jno
push
sub
dec
andb
lds
les
aad
sbb
fwait
mov
inc
lret
rorl
mov
rorl
xor
mov
cmp
cld
daa
test
mov
jge
dec
lods
lcall
ds
rcl
or
std
and
loopne
and
in
iret
lret
pop
cld
test
mov
push
add
mov
cmp
add
scas
mov
mov
mov
scas
mov
dec
sub
push
sbb
xchg
push
push
stos
mov
cli
movsb
or
jno
in
outsb
icebp
int
sbb
adc
mov
out
mov
popa
sbb
xchg
loop
or
push
jno
adc
inc
cmpsl
push
gs
fstpl
jae
jg
cmp
nop
stos
cmpsb
adc
rclb
cmc
ficomps
mov
cmp
push
iret
pop
xor
pop
pop
jbe
std
add
inc
fdivl
jmp
xchg
inc
mov
pushf
ret
xchg
addr16
or
jg
cmp
lret
leave
stos
jle
mov
ss
jl
jno
popf
push
push
out
jl
or
inc
push
cmpsl
lds
pop
adc
ja
pop
lret
and
les
inc
pop
dec
push
out
adcl
mov
push
adcb
lods
and
fsubl
out
mov
mov
fdivp
imul
mov
jp
cltd
cmc
int3
sbb
iret
sarl
shlw
repnz
testl
vandnpd
jnp
xchg
cmpsb
inc
push
pusha
call
flds
sub
int
cmp
imul
lret
cmp
sub
negl
adc
pop
insb
hlt
sbb
push
pop
push
xchg
mov
xlat
sbb
or
dec
cmpsb
jl
test
add
push
push
mov
inc
jmp
in
test
in
xchg
inc
out
and
sub
div
movsb
mov
dec
out
pushf
jns
pop
lret
jp
pmaddwd
lret
lahf
and
inc
jns
or
or
xchg
bound
pop
std
ja
mov
stos
and
mov
lods
push
addr16
cltd
imulb
inc
or
jle
pushf
sub
movsb
into
out
inc
sbb
leave
test
arpl
out
and
cmpsl
stos
add
adc
dec
fcoms
aad
push
movsb
cld
imul
inc
out
lahf
ss
jmp
xor
stc
repz
xor
add
xor
pop
and
bound
fstpl
push
enter
inc
adc
xchg
or
push
mov
les
pop
mov
pop
test
lods
add
sub
jno
xlat
cmp
inc
push
hlt
js
in
das
out
add
aaa
or
and
or
stc
test
or
add
fsubrl
aad
and
sub
xchg
outsl
mov
ret
pop
mov
pop
pause
inc
xor
jecxz
clc
mov
les
or
inc
dec
cltd
lea
lea
and
dec
adc
lret
std
mov
ret
je
sahf
add
mov
jbe,pn
cltd
dec
clc
sbb
pop
add
mov
in
and
xor
and
pop
in
and
push
jmp
pop
std
push
fnstsw
jbe
cwtl
push
cmp
stos
add
mov
xchg
testl
rorb
mov
idivb
sbb
icebp
jnp
cmpl
push
icebp
or
jnp
add
or
outsb
fcmovbe
ds
pop
or
sub
mov
dec
adc
inc
shr
into
inc
out
mov
stos
int3
cmp
sbb
xlat
bound
dec
mov
mov
cli
sub
mov
or
inc
mov
jbe
inc
pop
ds
xor
or
push
dec
lcall
cmp
loop
inc
dec
add
iret
iret
cmova
das
mov
mov
bound
imul
ret
call
and
loop
call
mov
bnd
pop
pop
jno
sub
jb,pt
enter
push
cmp
mov
sbb
js
push
aad
inc
xlat
xchg
fwait
mov
adc
sbb
or
mov
add
pop
das
shlb
xchg
push
push
xor
popa
popf
daa
sti
dec
insl
jns
test
lahf
mov
inc
and
aam
mov
loopne
or
jb
dec
add
push
cld
ret
popf
cs
movsb
scas
or
xchg
mov
mov
addr16
mov
mov
fmull
jecxz
dec
lret
inc
mov
add
mov
xor
adc
xor
jmp
fdivr
inc
stos
push
insl
pop
shrb
mov
pop
xor
icebp
leave
je
mov
inc
rorl
xchg
pusha
jmp
clc
sbb
mov
int3
fildll
fistl
insb
cmp
in
rclb
fldt
stc
and
aas
and
insb
cmp
cs
cltd
xor
loop
and
or
jb
cmpsl
inc
addr16
cmp
mov
add
mov
mov
mov
jmp
add
test
in
xor
mov
push
pusha
jp
cmpsl
scas
adc
ss
mov
hlt
bound
shll
les
outsb
std
adc
in
cld
adc
mov
inc
std
loopne
shlb
jb
cmp
mov
push
aas
mov
mov
data16
and
stos
rol
sbb
bound
or
mov
shr
add
pop
mov
repz
push
and
sbb
addr16
fnsave
clc
sub
cmp
fnstcw
out
jle
in
es
mov
decl
mov
fdivr
pop
lret
sbb
mov
or
out
dec
jl
cld
push
adc
jbe
add
pop
movsb
push
and
sub
fstps
mov
popa
mov
xor
stos
pop
mov
test
adc
add
cmp
shl
fcoml
in
pop
adc
adc
sbb
insb
test
add
pop
es
mov
enter
sub
es
sbb
mov
push
add
lahf
cs
push
mov
outsl
add
jge
setge
fwait
and
inc
dec
adc
sub
mov
lds
dec
mov
dec
sbb
cmp
loop
sbb
call
adc
jl
mov
lods
push
or
xchg
jl
cmpsb
xor
xchg
inc
test
fucomip
jl
sub
movsb
xchg
xchg
mov
adcb
fsubr
outsb
cmp
add
sbb
push
sbb
fildl
or
testb
mov
mov
data16
leave
scas
iret
int
mov
movl
pusha
inc
lods
cmp
aaa
inc
imul
in
mov
mov
pop
jae
in
pop
aam
push
cli
mov
mov
push
sahf
add
fistl
sbb
xchg
xchg
jne
stc
cmpl
xlat
xor
daa
adc
xchg
mov
clc
ret
enter
gs
loope
cs
cmpsl
xlat
shll
xchg
cmpsl
push
hlt
inc
std
int3
add
int3
push
adc
xor
mov
inc
gs
and
ja
lods
sti
leave
test
addr16
mov
mov
jle
loopne
mov
sub
fdivs
inc
sbb
mov
inc
dec
push
iret
popf
pop
lock
test
test
int3
inc
and
push
in
jmp
mov
aas
push
and
in
dec
cs
pop
xchg
push
jge
incl
popf
sbb
ljmp
push
movsb
ss
push
aad
mov
dec
pop
ret
push
fstps
jne
test
or
outsl
repz
inc
jnp
and
ss
dec
and
ljmp
inc
aas
orb
dec
scas
xchg
fdivrl
push
xchg
and
or
push
fwait
add
add
xor
sbb
pop
jae
mov
xchg
push
loopne
push
data16
cmc
es
pop
jp
sbb
dec
shll
mov
jbe
aad
jmp
cmp
sbb
cld
inc
lods
jbe
lret
mov
call
jp
mov
cmp
mov
push
andl
mov
dec
movsl
pop
xchg
rorl
and
in
or
push
addb
lds
js
imul
xor
jmp
push
es
cs
xlat
sub
sbb
push
lcall
fadds
jno
bound
xchg
cltd
popf
scas
das
je
jo
push
push
or
dec
sbb
fs
inc
out
popa
outsb
inc
push
in
pop
adc
xchg
in
clc
outsb
mov
scas
adc
jne
sub
and
sbb
lret
jae
mov
loopne
pop
mov
enter
nop
add
sahf
mov
push
push
dec
sbb
add
ret
mov
sbb
addr16
es
and
and
stos
out
icebp
pop
cmp
mov
jne
sub
cs
aaa
jle
sbb
lock
xor
shlb
cltd
push
xchg
addr16
mov
xor
jno
fmuls
cmpps
lret
hlt
xchg
insb
mov
loopne
jge
or
scas
add
es
scas
add
out
xchg
xor
insl
cmp
sub
push
add
inc
pusha
int
std
add
cmp
rcrl
rol
cmp
xor
rcr
das
xchg
mov
mov
mov
fldenv
shll
inc
popa
mov
inc
adc
aas
loop
insb
cmp
popl
and
sbb
xchg
pop
out
push
or
movsl
jle
dec
hlt
add
repz
pushf
jle
das
adc
addb
sbb
cmpsl
pop
stc
inc
adc
loope
xor
fcoml
sub
mov
and
add
mov
movsl
sbb
mov
jnp
pop
adc
call
mov
gs
sbb
pop
bound
in
sub
or
add
lret
mov
xchg
sbb
loope
nop
mov
push
ljmp
imul
dec
xchg
ret
leave
sbb
std
xor
dec
outsl
pop
pop
call
ss
outsl
mov
test
stos
outsl
aas
mov
mov
inc
movsl
insl
push
lret
xchg
cmc
int3
popf
fs
int3
daa
pop
leave
int
in
xchg
inc
fldenv
xchg
cmp
cmpsb
mov
test
lahf
cmp
cwtl
pop
dec
cmp
outsl
jae
enter
jb
xchg
gs
lahf
movl
in
cmpsl
mov
jbe
ss
push
testb
mov
mov
les
roll
sbb
scas
or
sbbb
cmp
ss
jg
cmp
cmc
aas
sub
test
mov
xchg
andl
add
ret
push
ds
shr
add
aam
xor
fxch
sarl
hlt
sbb
stos
xchg
addb
mov
cmp
movsb
mov
sub
mov
movsb
loopne
jmp
std
aaa
or
adc
pop
adc
addr16
rcrl
pop
xor
or
outsl
lahf
scas
cmp
pop
inc
jmp
hlt
fmuls
mov
mov
movsl
push
xor
dec
loope
into
jmp
aam
push
ljmp
add
push
pop
pop
scas
and
aas
lcall
mov
int3
lcall
int
gs
cmp
stos
ja
cmpsb
xchg
lret
stos
add
scas
les
test
in
fiadds
aas
xchg
inc
enter
mov
xlat
lret
hlt
daa
repz
fnstenv
push
add
cwtl
sbb
adc
adc
sbb
test
ret
push
sbb
gs
jmp
jge
jge
or
add
fchs
stc
xchg
add
add
test
pop
inc
push
push
mov
push
or
dec
dec
scas
out
iret
sub
sbb
xchg
add
adc
stos
ds
push
xlat
test
lahf
mov
popf
jl
ret
sub
loope
scas
addr16
and
xor
mov
sub
xor
loopne
ss
sbb
js
sti
lret
mul
mov
jnp
ja
negb
pop
lods
cmp
subl
nop
shl
std
adc
adc
jae
les
add
sbb
mov
scas
addr16
sub
ret
pop
loop
pop
fidivrl
mov
scas
dec
fld
or
inc
dec
test
or
cmp
pop
hlt
cmp
into
push
ret
addr16
adc
insl
dec
insl
push
fcmovu
sub
test
push
xchg
loope
mov
movsb
sahf
cltd
push
cmc
test
clc
inc
pop
pop
ficoms
fsts
test
fdivs
push
ds
pusha
add
lods
jbe
stos
jle
xor
out
mov
es
or
cli
jbe
js
daa
int3
pop
insb
cli
xchg
out
lcall
jge
incl
pop
test
cltd
pop
inc
mov
das
mov
dec
aad
fildll
daa
fistpl
pop
daa
dec
add
lea
pop
shll
sub
push
jp
std
jmp
sub
pop
cmc
sarl
mov
push
jge
cmp
push
imul
ds
rolb
sbb
cmp
adc
cmp
xchg
mov
lahf
mov
cmpsb
xor
dec
call
push
mov
dec
in
arpl
xchg
jp
add
test
cmp
lea
jmp
jae
push
inc
mov
add
mov
out
jl
cwtl
pop
mov
negb
test
sarl
negl
sub
mov
cmpl
adc
subb
stos
push
sbb
movsl
adcb
arpl
xchg
and
pop
push
lea
inc
jle
and
rorl
jb
cmp
stos
or
sti
ds
push
inc
mov
and
xchg
mov
and
int
aas
ret
inc
fildll
out
pop
xlat
pop
sub
jb
addl
bound
or
loopne
mov
int
movsb
std
es
test
imul
out
ror
lret
inc
fdivr
pushf
pop
cld
inc
cmpb
inc
lods
repnz
push
out
lahf
mov
pop
jle
addb
mov
loope
ljmp
xchg
adc
insb
cs
sbbb
fldl
shlb
adc
ljmp
pop
mov
sub
pop
repnz
out
xchg
dec
xchg
xor
jle
mov
sbb
imul
or
push
mov
aad
inc
out
cmp
imul
and
and
cmp
jg
ret
jmp
stc
ficoms
push
jb
mov
jle
jae
jg
sbb
movsl
lcall
sbb
out
push
clc
xchg
data16
idivb
xor
mov
les
mov
push
mov
leave
fwait
into
mov
push
cmpsb
jp
lods
jmp
sbb
dec
mov
dec
jns
sbb
pop
xor
mov
aad
mov
stos
ficoml
es
pop
ja
cmp
mov
stc
mov
in
fidivl
dec
jge
mov
xchg
jp
scas
or
cltd
mov
or
in
mov
inc
rorb
sbb
hlt
sub
and
xchg
iret
insb
xchg
mov
dec
sub
push
aas
xor
cs
cmp
je
out
add
clc
pop
rclb
mov
mov
mov
outsl
test
inc
mov
and
xor
ss
loope
rorb
mov
xchg
pop
fdivl
mov
xlat
mov
test
ljmp
rep
int3
out
push
mov
xor
cmp
xchg
dec
insb
dec
ss
repnz
das
sbb
inc
add
xor
jge
leave
jne
pop
fdivrl
in
adc
xor
scas
and
or
mov
mov
xchg
mov
out
out
mov
out
mulb
push
xlat
popa
adc
mov
and
shlb
test
test
ds
hlt
xchg
xchg
or
in
fwait
ja
xchg
int3
xor
hlt
ja
dec
sbb
aas
popa
sbbl
fcoms
xchg
adc
es
mov
sti
pop
int
jle
mov
out
fs
xchg
sub
pop
xor
repz
mov
lods
inc
fwait
pushf
and
cmpsl
mov
fnstenv
pop
cmpsb
fs
add
adc
fbld
jnp
sbb
cld
jecxz
push
jns
imul
inc
push
test
mov
lea
mov
cmc
mov
aam
fldl
inc
rol
imul
out
dec
xchg
outsl
out
frstor
xor
adc
push
mov
or
lea
inc
adc
sub
int3
in
iret
mov
mov
mov
aam
ret
lret
frstor
repz
pop
in
mov
movb
outsl
dec
sub
jecxz
mov
inc
mov
add
rcr
fnstsw
mov
cltd
das
xor
sub
dec
add
mov
xor
xchg
dec
cmp
push
lahf
or
push
lods
popf
sahf
lahf
push
inc
mov
fdivrl
or
das
ficoml
jbe
jo
and
jg
js
test
xchg
outsl
xchg
pop
adc
pop
adc
ljmp
hlt
adc
mov
mov
add
es
int
in
rorl
lcall
fstps
cld
inc
dec
add
pushf
shrb
pop
out
jne
sub
pop
bound
pop
enter
neg
sbb
jmp
push
lahf
stos
cmp
and
mov
mov
rcrl
mov
xchg
cvtps2pi
mov
and
add
pop
inc
sub
inc
mov
inc
inc
or
push
stos
pop
cmp
call
xor
cmp
xchg
xchg
dec
cmp
sbb
aas
rolb
andl
lds
aad
pop
mov
out
clc
mov
aas
cmp
dec
je
mov
iret
stos
andl
cwtl
sbb
mov
inc
fsubl
je
mov
adc
xor
mov
cmp
and
xchg
xor
sbb
cmp
int
push
xor
ljmp
imul
aam
sbb
int
dec
or
xor
jecxz
shlb
popa
js
sub
movsb
pushf
mov
xlat
mov
outsb
repnz
imul
push
mov
aam
jp
sbb
pop
imul
stos
push
xchg
or
sahf
cwtl
js
mov
mov
jecxz,pn
fsubrl
sub
in
jmp
into
jg
lret
mov
mov
xor
inc
js
add
pusha
cmp
mov
insl
sbb
xchg
clc
loop
cmp
xor
rcll
js
repnz
mov
clc
mov
test
lret
lds
idivb
repnz
sub
mov
ja
cmp
mov
testb
and
shll
mull
lods
add
xchg
jge
nop
jmp
imul
add
push
xchg
leave
fisttpl
and
mov
cmpsb
test
lods
mov
mov
ss
rcrl
adc
clc
stos
out
stos
aam
jbe
mov
das
adc
push
mov
repz
mov
int3
jg
mov
sti
jp
push
xchg
sbb
scas
mov
arpl
cmc
cmc
push
ret
mov
aad
aad
sbb
push
or
jp
movaps
subb
cmc
fmull
movsl
and
out
sbb
adc
pushf
imul
negl
fcomi
xchg
pop
push
leave
pop
cmp
fcmovbe
pop
fsubrs
cld
push
test
lds
adc
add
sub
out
inc
push
sbb
adc
sub
inc
xlat
mov
mov
dec
and
fld
int
jp
in
je
sti
push
repz
add
inc
mov
xlat
and
push
pop
aad
aam
sub
movsl
rclb
xchg
fisubrl
jle
xlat
xchg
std
pop
inc
rcrb
cmpsl
pop
and
das
xchg
push
test
push
daa
and
stos
add
inc
mov
aaa
mov
int3
lret
fs
outsl
jl
mov
pop
dec
popf
int
sbb
sub
cmpsb
mov
call
inc
jo
add
mov
xchg
mov
lds
jnp
mov
and
jne
jmp
sahf
jmp
repnz
dec
loopne
jge
adc
push
mov
fiaddl
fucom
sbb
or
popa
cmpl
lock
pop
push
mov
add
out
push
popf
lcall
out
pop
xchg
iret
xor
ss
xchg
inc
cmp
and
push
or
lock
cltd
aam
sub
pop
test
push
and
lret
hlt
mov
mov
mov
cli
xor
test
subl
add
fimuls
inc
jb
mov
mov
icebp
pop
mov
fs
cltd
mov
pushf
sub
dec
xchg
jle
jg
int3
pusha
dec
or
mov
xor
leave
lock
push
sub
insb
aam
bound
test
inc
push
rcrl
outsl
ret
xchg
and
mov
push
mov
jl
daa
and
add
sti
xchg
dec
dec
xchg
jmp
mov
sub
data16
or
fidivrl
push
dec
mov
sub
stos
cli
idivl
lahf
repnz
dec
lock
or
cld
cltd
xor
cmp
enter
std
jnp
add
sub
pop
clc
stc
aaa
daa
roll
jecxz
outsl
aad
repnz
cmc
and
cli
ret
mov
lea
inc
xchg
or
push
add
cmc
pop
dec
lret
xlat
jle
mov
xchg
sub
pop
fwait
and
dec
out
inc
cltd
pop
lahf
jl
mov
inc
push
stos
mov
aad
push
stc
jl
fcmovne
mov
out
cltd
jl
shlb
pop
hlt
mov
fistps
pop
cmc
sub
fdivrs
shr
add
call
int
ret
imul
sbb
js
and
jbe
stc
mov
scas
orl
decb
lcall
xor
aad
arpl
xchg
inc
mov
sbb
in
cltd
inc
jg
iret
pop
sub
push
lds
mov
jp
incl
int3
scas
sub
ss
sub
scas
out
xchg
xchg
mov
mov
jmp
std
negl
movsl
test
dec
and
push
outsl
stos
nop
imull
jl
and
and
mov
cmp
lock
sahf
fists
push
cmp
mov
popa
divb
push
enter
sbb
movsl
jae
xor
imul
js
sub
mov
insb
jne
inc
imul
shr
js
sub
out
adc
cmc
fdivr
xor
ret
adc
sahf
in
cmp
push
add
sub
xor
mov
mov
clc
rcrb
mov
and
test
sub
mov
mov
cltd
xchg
sbb
mov
dec
pop
push
inc
mov
inc
rorl
shlb
fildll
lods
xor
cmpsl
js
push
orl
dec
aas
inc
dec
int3
xor
ret
adc
stc
sbb
imull
daa
xor
add
subl
imul
or
mov
sub
adc
sbb
test
addr16
lret
pop
lods
mov
add
or
das
dec
inc
push
cwtl
call
sbb
xchg
jbe
push
adc
lcall
adc
jno
or
orb
ss
je
in
dec
fcomps
mov
or
pop
dec
jno
xchg
fmuls
pop
sbb
repnz
cli
xlat
push
jl
ja
jmp
or
lock
mov
aad
dec
cwtl
lock
xchg
xor
rol
sti
mov
ret
xchg
pop
std
jmp
ss
pusha
dec
inc
movsb
scas
test
inc
enter
es
inc
xor
mov
jmp
dec
js
cmp
sbb
mov
sti
dec
sarb
fdecstp
cld
imul
adc
sti
inc
roll
push
loopne
imul
sbb
imul
cmpsb
icebp
sub
test
xor
in
cmpsl
or
jae
pop
adc
insb
mov
xor
jnp
stc
cmp
mov
adc
sub
div
adc
add
lcall
int
xchg
or
out
lds
pusha
mov
rolb
jl
adc
or
stos
aad
mov
lock
addr16
cli
mov
ljmp
push
jno
and
lds
add
popf
pop
fdiv
pop
into
jae
lret
inc
inc
fimull
sub
xchg
and
int3
or
pop
pop
imul
fadd
mov
mov
dec
jg
push
aam
xor
faddl
xchg
imulb
insl
call
in
xchg
repnz
xchg
push
into
mov
push
shlb
imul
les
push
or
add
xor
dec
fsubrl
mov
dec
mov
imul
fmuls
lcall
fs
sub
js
movsl
popa
pop
pop
and
mov
imul
dec
add
mov
ret
test
xor
push
jb
pushf
repnz
test
xchg
shl
jecxz
gs
pusha
rolb
dec
imul
je
sub
stos
mov
jne
add
cmp
vmovaps
dec
sub
pop
mov
scas
mov
adc
mov
mov
andb
adc
and
adc
in
rolb
inc
jo
mov
das
lret
adcl
mov
and
cmp
mov
popf
daa
inc
mov
sub
ret
es
idivl
add
cmpb
mov
cli
dec
xchg
inc
outsb
popa
sub
das
icebp
pop
lock
insb
aam
and
shrb
add
sub
leave
xor
push
les
scas
bound
ja
fwait
cmpsb
xlat
push
in
cmpsb
lds
mov
push
xorl
js
sbb
fsts
xor
add
xor
or
xor
push
mov
jecxz
fistps
std
push
popf
fs
leave
jno
pop
inc
pop
mov
pop
mov
mov
mov
jmp
pop
jns
pop
mov
ljmp
call
xchg
or
mov
dec
cmp
jns
lcall
mov
mov
pushf
aam
or
sbb
sub
and
popf
xchg
xor
xchg
mov
repnz
mov
nop
out
outsb
dec
sub
jbe
push
idivl
xchg
insl
lods
pushf
xor
std
test
lods
jle,pn
and
pop
fadds
test
xor
into
adc
lahf
adc
pop
pushf
dec
jno
ja
or
sub
or
call
xchg
mov
lock
les
xchg
adc
lods
rcl
out
sub
cmc
push
xchg
mov
test
xchg
xchg
sub
dec
lock
sbb
inc
btc
mov
aas
push
ds
lods
icebp
adc
insb
push
adc
jb
jl
sbb
or
push
pop
jge
sahf
icebp
int3
hlt
sahf
rol
and
pop
scas
push
insl
iret
sbb
mov
mul
sub
fcomps
loopne
jnp
dec
aas
loopne
insb
xchg
das
xchg
idivl
cmp
idivb
mov
aas
pop
into
mov
mov
stos
adc
pop
pop
ret
lods
cwtl
or
fsubrs
mov
out
push
lods
inc
xor
in
fs
and
and
stos
xor
icebp
sub
or
lret
popa
inc
cmp
xchg
js
outsl
sub
out
adc
cmp
orl
cmpsb
bnd
sbb
dec
sub
jae
xor
gs
inc
jl
mov
nop
add
mov
daa
xor
and
pop
stc
test
out
aaa
push
pop
xor
aaa
mov
push
push
aad
test
bound
and
mov
and
insl
sub
inc
pop
imul
das
push
dec
cmp
pop
push
ljmp
lods
loop
das
adc
xchg
jmp
adc
loop
scas
push
adc
mov
xchg
push
jnp
xor
cmp
xchg
mov
push
mov
push
adc
pusha
aam
orl
rcrl
sub
or
cwtl
mov
or
out
imul
pop
mov
int
outsl
inc
in
fisttpl
sub
pop
int3
jecxz
mov
es
xchg
shrb
and
sarl
add
fistpll
out
mov
pop
jns
out
lods
jg
pop
add
enter
mov
fsubl
cmp
pop
and
sbb
dec
xchg
xchg
pop
cmp
es
mov
arpl
cmp
lods
daa
push
pusha
adc
mov
mov
test
imul
loope
nop
lret
fcomps
test
stos
popa
data16
stos
in
inc
pop
sbb
pop
xor
aaa
dec
xchg
jle
push
scas
adc
out
aas
adc
and
clc
rcll
xchg
lret
push
lock
cmp
jae
std
add
outsl
mov
jo
push
push
inc
into
movhps
mov
mov
dec
cmp
out
jmp
ficoms
incb
jb
faddp
das
cs
ret
scas
insb
pop
and
in
stos
loope
or
fwait
cmp
aas
scas
mov
push
ret
mov
pop
xor
aas
test
push
int
aad
aaa
and
mov
push
fbstp
cmpsb
dec
loope
and
mov
inc
cwtl
sahf
aam
loop
mov
rcl
test
cmp
bound
gs
sbb
sub
jl
cs
in
mov
jns
mov
data16
pusha
aam
ret
sub
mov
test
push
and
scas
mov
cmpsb
lret
lret
aad
push
lods
mov
inc
jecxz
test
inc
outsb
mov
out
push
rcl
and
cmp
test
mov
inc
imul
push
icebp
jno
in
mov
les
mov
sbb
aad
jp
pop
aad
popf
cltd
mov
mov
cli
xchg
fcmove
dec
mov
sbb
push
stos
xor
rcrl
icebp
clc
and
xchg
cs
iret
cwtl
pop
out
cmp
gs
cmp
lret
paddw
mov
fimuls
mov
sbb
icebp
aaa
dec
in
jmp
ret
and
cmpsl
xchg
rol
cmpsb
xchg
mov
sub
aad
jge
mov
out
or
ret
insl
pop
xor
loopne
in
add
filds
test
scas
sahf
jg
clc
les
leave
adc
pop
movsb
or
mov
repz
dec
imul
mov
cmp
push
movsb
inc
push
mov
cmp
cmp
pop
adc
pusha
and
and
test
dec
loop
movsb
jae
pop
sub
dec
mov
addr16
push
mov
mov
mov
pusha
outsl
adc
jae
cmp
sbb
ljmp
ja
nop
pop
push
popa
mov
cld
inc
push
in
sti
mov
stc
aam
xchg
inc
inc
cmp
jg
leave
add
or
sub
xchg
pop
fsubrs
cmc
adc
pushf
jae
xor
or
fdiv
out
shrl
out
orb
daa
jge
jge
and
movsl
xor
lret
pusha
xchg
jecxz
insb
push
cmp
mul
bound
cs
sub
push
repnz
movb
cs
std
mov
scas
xchg
sbb
push
sarl
not
cmpb
add
in
fs
mov
add
and
iret
sahf
outsl
pop
and
jae
shlb
mov
pop
cli
mov
nop
push
popa
out
ret
adc
ret
adc
adc
xchg
mov
loope
jmp
dec
aas
inc
inc
data16
fldt
lods
push
mov
fwait
sub
mov
add
xor
mov
inc
sbb
loop
scas
xchg
lock
sbb
std
cmp
imul
or
outsl
addr16
pop
or
adc
add
mov
xor
rcr
adc
pop
sbb
nop
inc
or
xchg
mov
xchg
cmp
dec
aam
fdivs
xor
notb
pop
mov
dec
jg
popa
dec
cmp
and
sbb
or
fdivl
xchg
test
jmp
xor
std
das
xor
test
lock
dec
cmp
xchg
sbbb
inc
jl
adc
cmp
xor
inc
inc
adc
add
pop
push
sub
fisubs
aad
jmp
shlb
aas
push
dec
loop
pop
rolb
lea
arpl
mov
in
enter
jo
outsb
sbb
mov
push
fstpl
out
xchg
pop
aas
imull
adc
cmp
mov
mov
jle
jmp
aaa
jg
sbb
bound
and
inc
lods
setnp
sub
adc
sbb
fld
bound
pop
cmpsb
mov
sub
std
jp
xor
enter
fisttpl
push
call
cmp
rorb
sbb
dec
add
xor
pop
jp
mov
mov
xchg
pop
mov
cli
jae
loop
insl
mov
sbb
lds
cmp
add
pop
out
mov
or
pop
mov
or
fisubs
cmpsb
iret
add
in
lods
or
es
push
rorb
ja
and
mov
cmpsl
arpl
cmc
out
icebp
jno
and
jo
mov
xor
pop
nop
jbe
jle
push
xchg
arpl
rclb
sub
test
daa
and
mov
mov
lods
sbb
jne
pusha
lods
stos
xor
push
inc
mov
nop
or
lods
cs
xlat
lea
xchg
xor
daa
fimull
aas
mov
jne
cs
dec
xchg
lods
mov
inc
jmp
pop
bound
int
imul
jb
outsl
push
shl
inc
cmpsl
cltd
cmpsb
jnp
xchg
mov
in
clc
inc
aaa
push
push
es
jge
mov
fs
lret
jl
out
jg
cmc
mov
fsts
mov
scas
movsb
loop
out
push
repnz
scas
jle
dec
fdivs
add
daa
mov
jp
aas
sub
daa
and
and
and
loope
jp
xor
addr16
les
add
adc
ds
data16
lret
dec
fsub
or
push
push
dec
add
int3
or
mov
outsl
adc
imul
addl
cmpsl
xor
sti
outsb
cmc
ds
xor
fsts
adc
decb
fisubrs
repz
ds
add
push
xchg
hlt
and
xor
test
mov
in
shrl
clc
xlat
mov
or
adc
or
fs
mov
sbb
ljmp
sti
sbb
cltd
inc
pop
or
add
loopne
sub
jne
push
jnp
jb
or
jo
inc
cld
stos
jl
and
or
out
sub
icebp
cmc
cli
mov
iret
hlt
in
es
insl
add
push
pop
dec
ljmp
xchg
clc
cmpsl
int
xor
sbb
ja
popa
cli
add
jecxz
mov
dec
mov
ja
adc
cmpsl
xchg
xor
mov
jne
lods
xor
inc
mov
sub
ljmp
and
cmp
xor
sbb
gs
xor
leave
adc
push
sub
enter
mov
outsb
pop
push
negb
mov
fdivr
pop
out
addl
sub
in
jne
mulb
mov
add
cmp
or
daa
push
data16
outsb
pop
adc
icebp
add
stos
sub
mov
sbb
outsl
mov
popa
lods
add
popf
and
pop
dec
hlt
popf
jb
test
int
cmp
cli
pop
lea
push
or
dec
div
xor
arpl
sarl
cmpsb
push
xchg
push
jge
negb
call
mov
cmp
pop
into
cmp
rcll
mov
adc
cmpb
fists
sbb
out
sbbl
fmuls
fimuls
mov
ficompl
stos
insl
cwtl
push
out
adc
imulb
cld
xchg
xlat
cltd
xchg
mov
ret
push
mov
mov
rolb
dec
cmp
cmp
fdivl
sub
lret
jge
rcrl
fwait
mov
popf
and
fs
je
call
cwtl
aad
pop
jns
adc
xor
fnsave
cmp
xor
inc
iret
mov
jle
mov
fwait
lahf
mov
sbb
dec
adc
lods
rorl
push
in
sub
cmp
adcl
xchg
scas
pop
mov
and
and
mov
pop
xchg
jae
lds
or
scas
andl
mov
ljmp
sti
in
hlt
mov
and
lcall
or
decl
out
insb
jnp
push
pusha
cmp
xchg
cs
dec
mov
pop
js
movsb
cmp
inc
or
adc
sub
mov
inc
push
les
out
xchg
divb
mov
popa
popa
leave
shll
sbb
cmpsb
push
or
scas
add
jb
jo
clc
dec
adc
pop
jb
and
incl
imul
idiv
add
adc
and
add
loope
fstl
jb
sub
adc
movsl
or
xor
xchg
push
iret
mov
int3
xor
pop
imul
loop
push
int3
push
sub
and
int3
fsub
dec
jbe
in
lods
std
dec
test
sub
jns
call
les
mov
add
push
in
cwtl
fsubrs
and
mov
out
push
inc
popa
fldt
mov
dec
pop
mov
div
rcrb
fldcw
xchg
pop
xchg
mov
jmp
out
pop
jne
das
add
icebp
sbb
xchg
push
and
xchg
std
ret
dec
sbb
aaa
addr16
mov
mov
jl
es
aas
jmp
dec
or
arpl
mov
das
jnp
jp
push
push
outsb
jb
pop
or
nop
in
je
cs
adc
cmp
lock
insb
lds
pushf
aaa
push
sub
mov
mov
jecxz
lock
loope
mov
push
test
mov
mov
jne
pop
shl
or
jmp
enter
scas
sahf
push
test
xor
xor
repz
pop
fnstenv
adc
push
mov
movsl
sub
je
cmc
mov
dec
mov
push
mov
xor
test
in
jo
js
ds
leave
push
cmp
pop
fsub
loope
xor
imul
pushf
lea
fistpll
and
imul
test
scas
call
imul
push
or
mov
loop
cmp
or
imul
das
mov
loope
or
jns
aas
aaa
inc
push
ds
shlb
and
sbb
rol
int
das
into
insl
or
add
and
dec
in
push
cld
les
imul
sub
inc
and
adc
les
jno
jns
cmp
mov
mov
jp
inc
popa
iret
adc
jmp
rcrb
or
movsb
ja
adc
xchg
fs
ret
popf
pusha
add
jle
insb
inc
aam
sbb
aas
cmpsb
mov
call
mov
fstpt
popf
push
repnz
test
dec
shlb
aas
dec
stos
and
adc
pop
test
or
mov
movsb
add
pop
mov
clc
movsl
jo
dec
iret
fstl
mov
int
test
push
insl
mov
xchg
fldcw
daa
xchg
lea
xor
insl
cld
mov
aas
cli
pop
mov
sub
push
xlat
jae
mov
push
lods
aaa
mov
dec
fadd
sub
add
sti
sub
cs
lret
dec
xor
addr16
test
cmp
push
and
clc
inc
fwait
in
push
iret
leave
call
add
push
xchg
out
or
js
pop
inc
jl
push
idivl
xchg
jno
inc
fmul
sahf
pusha
xor
sti
cmc
rcr
sub
lret
in
movsb
dec
rdtsc
test
xor
call
mov
mov
lods
in
loope
rcll
dec
adc
xlat
notb
lret
and
insl
adc
in
add
push
loop
adc
in
sub
lret
adc
dec
mov
push
pop
movl
outsl
pop
or
lock
mov
leave
xor
jg
pop
or
cmp
scas
xor
lahf
es
js
push
incl
cmp
xchg
mov
js
push
subl
pop
aaa
fcmovnbe
nop
sbb
imul
add
mov
dec
pop
xchg
dec
and
cmp
outsl
rorl
fsubrl
cmp
ja
xchg
inc
push
icebp
push
push
add
adc
or
aaa
mov
test
adc
mov
cltd
mov
into
pop
inc
das
xchg
mov
aam
and
inc
pop
sub
mov
mov
roll
lahf
enter
push
push
aad
mov
out
dec
jecxz
push
outsl
jns
fdiv
mov
sbb
cltd
jl
hlt
cmp
xchg
sbbb
lret
jo
subl
test
repz
sub
cs
hlt
cmpsl
pushf
adc
dec
adc
lea
or
out
in
jmp
lcall
in
orb
inc
pop
scas
jno
pop
fpatan
pusha
icebp
lret
sub
mov
and
aam
pop
sbb
cli
jge
shl
insb
sub
test
adc
andb
imul
lock
dec
push
pop
cwtl
out
xchg
sub
sarb
negb
push
lods
mov
stos
jns
sti
dec
lahf
int3
pop
adc
in
mov
xchg
adc
fiadds
push
lods
mov
lea
clc
loop
xor
pop
fcom
adcb
xchg
pop
lahf
rcrl
push
cmp
push
cmc
cld
movsb
ret
in
lret
cld
fstpl
int
sub
cli
std
or
test
push
sub
dec
out
test
sahf
shll
adc
insl
insb
ja
mov
jne
mov
inc
adc
movsb
mov
and
bnd
inc
bound
cmc
mov
mov
andb
mov
cmpsb
cwtl
push
xchg
outsb
cmp
movsb
rcrl
lcall
mov
jg
rcr
es
lock
test
jo
push
or
add
dec
xor
icebp
pop
sbb
cmc
sub
cmp
loop
fwait
out
out
arpl
lods
jnp
fistpll
adc
xchg
clc
jbe
jbe
stc
fsubl
iret
rclb
loop
popa
fcoml
aas
aad
repz
or
fldt
lods
ljmp
in
ret
adc
repnz
mov
dec
push
push
pop
mov
mov
mov
aad
cs
sub
xchg
filds
lock
pop
or
push
nop
push
xchg
cmp
icebp
int
xchg
xchg
inc
dec
mov
cmp
sar
mov
cmpsb
push
divl
adc
dec
cmp
test
dec
inc
mov
xchg
xchg
shrb
fadd
jbe
mov
mov
popf
mov
sub
shrb
push
inc
stos
jae
mov
or
push
rcrl
ret
stc
int
mov
bound
test
inc
and
jg
movsb
lods
mov
rorl
rcr
xchg
xor
xchg
mov
sbb
and
mov
dec
pop
xchg
mov
repz
test
cmc
pusha
enter
xchg
pop
or
in
or
fld
ret
es
mov
enter
lahf
pushf
cli
xchg
jb
cmp
dec
cltd
mov
rclb
cmp
mov
sub
mov
xor
and
outsb
inc
push
mov
shr
aad
paddd
or
add
stos
repz
stc
push
lahf
jle
stos
test
xchg
and
call
test
pop
rorl
add
lods
or
out
jmp
ret
sub
push
jmp
add
scas
jle
push
mov
loope
pxor
hlt
adc
pushl
stos
loop
mov
or
hlt
jne
sti
shrl
inc
test
shrl
sahf
outsl
ja
jo
aaa
inc
fisubrs
pop
push
inc
lock
jae
insl
xchg
lret
andl
pop
ret
mov
outsl
orb
je
call
stc
decl
pop
pop
mov
cwtl
pop
fdiv
loope
cmpsb
push
xor
mov
rcrb
and
mov
push
negb
push
xchg
popf
mov
push
shlb
rcl
push
push
xchg
xchg
pop
xor
js
bound
scas
adc
flds
mov
out
out
or
ja
dec
mov
mov
stos
shl
inc
test
mov
cmpsl
push
dec
jbe
out
mov
push
jno
test
jns
hlt
add
dec
cmpsl
xchg
sub
sub
adc
dec
xor
in
jp
sub
adcb
pusha
sbb
cmp
popa
mov
dec
fimull
xchg
mov
lret
negl
stos
lahf
push
aaa
loope
adcl
rcr
xchg
cltd
or
ds
fcmovbe
out
mov
push
sub
imul
popf
and
mov
enter
and
loopne
repnz
loop
pop
mov
jbe
jo
mov
jbe
ret
ror
rcr
push
or
mov
das
adc
data16
xchg
fldl
imul
aas
andl
mov
and
xchg
jmp
lcall
sub
shlb
stos
dec
jp
mov
mov
roll
in
in
test
out
out
repz
adcl
imul
jecxz
dec
ficompl
inc
xchg
pop
jmp
movsb
je
pop
leave
fcomps
inc
mov
sub
sbb
lahf
xchg
lret
cld
popa
jne
nop
inc
daa
inc
inc
mov
jmp
or
xchg
cli
and
cwtl
arpl
cmp
gs
ret
in
fildll
hlt
xchg
add
mov
add
cmc
mov
lcall
add
sub
mov
push
lock
and
cmp
outsl
xor
mov
emms
jns
leave
adc
pushf
out
out
rcll
adc
clc
stos
cmp
lret
jg
cs
lods
daa
fstpl
aas
sbb
mov
test
and
adc
mov
repz
gs
inc
inc
mov
cmp
xchg
mov
fwait
mov
lcall
xor
gs
fstps
mov
push
outsl
out
xchg
subb
mov
sub
adc
or
inc
push
int
cli
imull
mov
outsl
push
sub
test
call
fsubs
push
das
sahf
fcomps
xchg
mov
add
popa
xchg
aaa
outsb
xor
leavew
scas
movl
loope,pn
or
sub
cld
mov
cmp
pop
je
xor
leave
data16
test
jecxz
dec
data16
xchg
jle
pop
sub
push
rcrb
shlb
lcall
fs
xor
or
arpl
out
pop
sub
dec
pop
cmp
and
jl
repz
inc
lods
test
sub
lcall
fidivl
jb
mov
aam
pop
lods
pop
out
pop
or
ss
stc
movsb
cmp
out
fistl
pop
adcl
std
nop
dec
jbe
mov
cwtl
les
dec
lods
aaa
insb
pop
adc
lcall
jne,pt
push
xchg
test
cmp
and
jp
call
mov
mov
test
inc
mov
stc
mov
sub
vmovaps
gs
in
hlt
arpl
and
std
inc
jbe
cmp
pop
add
loope
inc
or
sarl
add
push
hlt
les
repz
xlat
stos
icebp
cmp
pushf
mov
lea
cmp
mov
fdivr
mov
push
or
out
addr16
inc
das
daa
mov
sarl
lahf
or
xchg
mov
push
fwait
or
repz
cmp
push
cmc
aad
mov
out
pop
dec
loope
xlat
cmp
and
sbb
sub
icebp
push
jge
adc
ret
popf
pop
dec
xchg
addr16
loopne
inc
mov
incl
shr
sub
je
lds
jg
push
fisubs
or
mov
pop
addl
std
mov
add
fucomp
mov
rcrl
xorl
push
mov
addb
fldenv
dec
clc
je
and
aad
mov
cmc
xchg
pop
pop
or
and
pop
adc
int3
outsb
imul
or
sbb
or
push
sbbl
sti
mov
clc
into
sbb
mov
xorb
add
cmc
rorb
testl
cmpsb
dec
js
or
mov
ljmp
lret
sti
ficoml
dec
je
lods
fsts
lret
push
roll
sub
push
test
mov
lret
mov
icebp
push
sbb
shrl
sub
xor
pop
jg
mov
fiaddl
or
cmp
fnstsw
mov
xchg
scas
adc
loopne
repnz
pop
pop
movsl
insb
xchg
sbb
popl
and
push
outsb
xchg
cmpsb
pop
mov
ja
rcr
jle
inc
outsb
xchg
cmpsl
ja
xorb
out
push
and
enter
lret
mov
add
inc
shlb
adc
mov
shrl
arpl
daa
ret
gs
jns
lcall
dec
pop
mov
addl
aaa
fmuls
testb
xor
dec
dec
shl
xchg
lret
push
fisubrl
adcl
data16
and
inc
stos
mov
mov
stos
or
ds
pop
stos
and
outsl
jbe
pop
and
inc
mov
pop
pop
xor
push
push
push
arpl
stos
and
push
shl
xchg
hlt
push
fldlg2
cltd
test
sbb
sbb
inc
scas
mov
jle
jle
sub
mov
mov
mov
bound
mov
inc
ret
movsb
mov
xor
add
xchg
cwtl
pop
add
mov
out
jne
pop
dec
test
and
test
cmp
or
bound
lret
rorb
stos
xchg
mov
sbb
daa
mov
fsubrl
pop
mov
mov
pop
cmpsl
iret
daa
fstl
mov
je
pushl
pop
sbb
rcl
je
fscale
xor
or
xor
fiadds
scas
pop
fldenv
aaa
add
xchg
aad
mov
divb
cld
rclb
mov
sub
popa
roll
int
or
pop
outsb
outsl
push
dec
pushf
mov
push
xor
jp
cmp
loopne
inc
fs
adc
mov
pop
lods
aaa
stos
cld
out
pop
mov
xorl
dec
pop
cmp
push
pop
jns
aas
adc
push
inc
add
repnz
gs
push
cmpsl
dec
jae
sbb
cwtl
test
adc
les
inc
daa
or
nop
mov
push
fisttpll
daa
icebp
icebp
xchg
imul
vmptrld
out
xor
out
loope
decb
push
test
fcoml
roll
xor
fbstp
pop
aad
jno
adc
mov
and
jmp
inc
ja
add
dec
and
cmpsb
int3
xor
push
in
nop
bound
rcl
lods
inc
in
jbe
movsb
fmuls
cld
mov
js
enter
aam
add
push
sub
sbb
test
and
in
push
cmp
ffreep
ret
int3
push
rol
sub
push
fcomip
xor
or
inc
add
mov
jle
adc
iret
xlat
jbe
mov
daa
mov
jmp
js
lret
sub
sub
lods
in
push
and
mov
dec
divl
mov
jns
pop
mov
mov
enter
sub
sub
sbb
les
and
mov
xchg
fisubl
mov
sub
mov
dec
sub
adcb
mov
sub
vprotw
cmp
aaa
pop
xchg
cld
inc
enter
out
xchg
jno
mov
pushf
scas
gs
fadds
jne
mov
fsubrp
add
hlt
out
xor
mov
xchg
stos
pop
sbb
clc
nop
dec
jle
aaa
mov
out
sbb
pop
movsb
cmp
int3
jbe
inc
and
or
mov
cmc
sub
cmp
jge
mov
ret
jge
sub
leave
sbb
xchg
inc
pop
je
lret
xchg
cmp
xor
lret
mov
add
mov
jge
dec
es
insl
push
mov
and
adc
popf
mov
xor
roll
aam
lds
inc
jae
pop
movsl
fildll
cmpsb
stos
loope
jp
aad
push
scas
xchg
sub
and
inc
gs
int
xchg
imul
push
xor
int
rdmsr
jg
mov
pop
push
or
xchg
sbb
jb
and
xchg
jg
push
jo
and
pop
cwtl
stos
int3
adc
andl
adc
push
mov
add
mov
scas
jl
cmp
dec
cmp
mov
mov
jl
rclb
and
adc
rcl
jb
lea
lret
mov
mov
ljmp
cmp
dec
xchg
popf
fmull
and
pop
adc
adc
cmpsl
outsl
loope
popa
mov
pop
cmpsl
or
out
fs
mov
pusha
test
and
cmp
bound
adc
cld
stc
sbb
xchg
das
fidivs
xor
cmp
jle
mov
pushf
mov
jmp
subb
lcall
xchg
in
cltd
mov
sub
pop
push
jae
sub
out
mov
jmp
inc
stos
add
out
fdivrl
mov
sub
and
cmc
data16
pushf
fmul
subl
or
leave
push
xor
outsb
mov
or
clc
xor
dec
mov
mov
xor
incl
jp
je
jp
adc
mov
xorb
and
sti
or
adc
movsb
jnp
sub
negb
repnz
clc
mov
pop
mov
mov
inc
xor
pop
ret
inc
stc
test
cmp
cmp
mov
cmpsb
notb
in
mov
mov
add
and
mov
outsb
xor
add
shll
mov
loope
pop
sub
jmp
sub
inc
push
inc
nop
xor
pusha
xchg
mov
iret
push
or
arpl
lcall
out
aaa
cmp
pop
dec
aas
jmp
adc
dec
in
filds
in
inc
and
out
push
xorl
cmc
mull
sti
and
sahf
mov
xchg
xchg
mov
xchg
popa
data16
or
rolb
shlb
arpl
mov
dec
leave
cwtl
jmp
sub
xchg
inc
jl
cli
mov
lock
dec
sub
idivb
dec
mov
adc
dec
fbstp
subb
ljmp
or
add
adc
mov
outsb
push
icebp
dec
jno
add
sub
sub
xchg
and
dec
jbe
fildl
in
mov
lret
and
xchg
aaa
jl
inc
jo,pn
mov
dec
outsl
xchg
push
jle
ret
out
stos
sahf
jecxz
inc
add
aam
jecxz
jae
fsubp
push
fisubl
cmp
jne
movb
in
out
inc
cmpsb
and
and
flds
aaa
jae
clc
adc
or
xor
or
and
in
mov
fsub
jno
xlat
push
loop
push
mov
int3
mov
clc
pushf
jmp
sbb
jae
mov
add
mov
mov
mov
adc
pop
xchg
test
push
jns
adc
int
ss
cmp
js
test
incl
dec
negl
mov
xchg
mov
xchg
subl
mov
and
mov
and
out
test
dec
jg
je
addl
jmp
push
jl
bound
add
or
or
sbb
inc
inc
cmc
popf
jbe
add
adc
repnz
cmp
xor
scas
inc
arpl
addl
xchg
aad
cmp
pop
frstor
push
cmpsl
mov
out
sbb
lcall
test
into
sbb
fmuls
cltd
rcll
push
mov
push
adc
mov
std
mov
popf
xlat
mov
je
in
mov
aaa
mov
test
jno
jle
fsub
push
add
sub
dec
add
push
xor
push
jbe
mov
test
je
lock
mov
pop
test
xor
pop
lahf
mov
cmp
inc
push
sub
jns
cmpsb
jle
fwait
icebp
xchg
stos
arpl
sbbb
int
lock
iret
mov
lods
adc
cs
mov
mov
jle
inc
jbe
shll
insl
ficomps
jle
sub
mov
dec
int
adc
jae
adc
mov
xchg
pop
push
imul
stos
insl
cmp
stc
push
ja
xchg
xchg
push
fisttps
push
scas
push
mov
inc
test
and
jne
aaa
jg
enter
lea
loopne
lods
aam
faddl
xchg
push
sti
stc
adc
iret
mov
or
clc
movsb
cli
mov
add
jl
lds
add
scas
dec
gs
adc
hlt
adc
inc
mov
cmpl
data16
leave
sub
adc
fs
mov
test
push
inc
imul
mov
cli
push
sbb
or
jbe
jle
and
pop
test
ret
mov
fdivrl
iret
hlt
pop
jg
push
xchg
lahf
push
sub
scas
push
dec
mov
mov
mul
adc
add
or
push
inc
xchg
mov
xacquire
roll
cwtl
jno
test
mov
test
cmp
sbb
mov
fimuls
loope
cwtl
arpl
inc
data16
outsl
sub
jge
push
shr
sarl
test
sti
cltd
push
push
xor
je
xorb
jle
inc
sub
pop
fs
cmpsl
popa
outsb
aaa
mov
mulb
pop
fsub
negl
pop
and
fisubrl
ret
jb
xchg
lods
adc
fs
out
sahf
mov
pop
mov
iret
xor
addr16
push
clc
or
fists
or
pusha
cs
iret
mov
pop
push
push
ja
cltd
mov
cltd
mov
pop
cmp
mov
adc
cmp
inc
mov
in
push
test
mov
loopne
xchg
test
mov
aam
xchg
adc
cmp
ficoml
pop
popf
mov
loop
xchg
xchg
push
mov
jle
repz
mull
mov
push
mov
dec
aaa
aad
int3
push
rcrb
fimuls
addr16
fidivs
into
out
jge
jno
insl
xor
adc
sbb
pop
cwtl
sbb
ja
pushf
jo
test
popf
int3
jl
jo
icebp
push
and
insb
fidivrl
or
into
ficoms
cli
xor
jnp
rclb
mov
int3
cmp
mov
push
adc
sti
outsb
or
dec
push
sbb
mov
jne
sbb
movsb
lcall
mov
ss
ret
lea
cmc
je
les
xchg
xchg
loopne
pop
stos
inc
ret
jle
test
std
fistps
xchg
xor
ret
cltd
xchg
fcoml
xor
imul
outsb
decl
ret
add
in
jns
inc
push
cmc
push
add
movl
jno
cmp
sbb
std
leave
mov
lds
pop
jnp
out
loop
rolb
dec
pop
iret
and
int3
movsl
adc
repz
sbb
gs
notb
lea
ficoml
cmp
cli
shlb
adc
push
outsl
popl
fisttpl
insl
int
out
sbb
add
daa
test
cmp
add
mov
sahf
adc
push
cltd
mov
push
fadds
push
stos
adc
iret
ja
push
sti
xor
dec
dec
adc
addb
cwtl
sbb
cmc
mov
ret
test
xchg
adc
mov
out
pop
jmp
sarl
sub
push
inc
mov
clc
aam
mov
jecxz
sub
dec
xlat
inc
push
pop
sub
fcompp
incb
call
data16
jge,pn
stc
inc
and
or
xchg
jl
dec
cs
mov
in
jae
in
add
aaa
push
cmpsl
jle
test
mov
mov
inc
aaa
out
ret
pop
daa
rcrl
call
xor
dec
call
add
hlt
push
lea
lahf
enter
and
sti
mov
aas
stos
xchg
fwait
pop
addr16
xor
fcmovne
loop
imul
push
pop
mov
cmp
aas
push
or
imul
fists
lahf
ss
test
jle
or
outsb
mov
cmp
addps
mov
pop
jno
push
movsl
out
ret
aaa
mov
cmp
cwtl
mov
cmpsl
icebp
adc
movsb
jmp
pop
fnstsw
punpckhbw
push
adc
sahf
mov
dec
sbb
test
iret
mov
movsl
cmp
cs
mov
fstl
imul
or
sub
jmp
push
and
bound
loop
aas
pop
clc
lods
movsl
shl
jne
xchg
jge
mov
mov
or
or
stos
adc
fsubs
jge
sub
pop
jle
cwtl
push
test
pop
pop
test
inc
cmp
inc
ljmp
pop
je
mov
adc
or
data16
jns
pop
mov
fldl
loop
mov
scas
adc
lods
xor
icebp
loop
idivb
orl
push
jne
push
sub
int
cmp
jmp
adc
or
sub
aam
xchg
sarl
in
cmpsl
fwait
ror
sub
jnp
xchg
xchg
fwait
push
pop
mov
popl
movsb
outsl
cmpsb
cmpsl
pop
inc
fwait
pusha
mov
incb
xchg
pusha
mov
sub
jg
cltd
sahf
sbb
push
fcompl
jecxz
pop
scas
aad
mov
inc
push
sbb
pusha
and
fs
xchg
mov
jecxz
lods
pop
push
xor
and
ret
add
lods
fldcw
dec
cmc
push
xor
out
xchg
push
and
out
or
test
xor
inc
mov
lods
mov
fadds
jne
aaa
add
lcall
pop
fstpl
sti
fisttpll
addr16
in
mov
mov
jo
jp
mov
mov
push
and
cmpsb
lcall
xorb
jae
fwait
nop
sbb
push
jl
mov
pop
inc
sbb
adc
cmp
ret
jbe
pop
mov
inc
pop
fcoms
mov
into
out
and
push
test
add
lahf
mov
cmp
fisttpll
or
divl
dec
push
push
stos
iret
and
sub
add
xchg
push
mov
mov
inc
adc
mov
data16
cmc
pop
sub
xlat
aad
sar
lock
adc
mov
inc
mov
or
fprem
jno
sub
rorl
jge
jl
xchg
repz
cmp
jl
jo
jl
incb
cmp
lds
in
push
jmp
ret
int
aas
xchg
mov
or
ja
push
adcl
adc
mov
fwait
or
leave
sub
enter
test
pop
cmp
and
loope
and
adc
fwait
push
aaa
arpl
jg
hlt
imul
cmpsl
xchg
pop
push
insb
lahf
xor
push
dec
push
icebp
adc
xchg
mov
add
lret
mov
push
roll
dec
lahf
mov
lods
loop
pushf
lods
add
loopne
jo
push
dec
mov
in
xor
xchg
call
lahf
inc
jle
dec
fisubs
mov
popa
ret
cmp
cld
sub
lret
jecxz
add
ja
pop
dec
enter
dec
lods
jecxz
fcoms
into
movsl
push
xor
outsl
cmp
xor
repz
sbb
popf
popa
pop
mov
mov
mov
cmp
mov
sbb
sub
outsl
mov
xchg
mov
in
sti
cvtps2pi
add
sub
adc
outsb
pop
add
ret
pop
lods
inc
mov
addr16
pop
test
lcall
lods
lds
into
xchg
sub
mov
loopne
fs
cmpsl
adc
iret
sub
ds
xor
cltd
fsubrp
stc
sbb
cmc
in
inc
mov
dec
xor
mov
add
push
push
pop
aam
stos
out
jl
fistpll
mov
add
cmp
xchg
loope
mulps
outsl
arpl
rcrb
jg
or
sbbl
orb
jno
stc
bound
addr16
mov
pop
jg
add
jecxz
pushf
xor
pop
repnz
clc
adc
data16
ja
sbb
test
and
add
and
add
dec
rclb
pusha
inc
fsubrs
mov
push
adc
cli
mov
fwait
jg
mov
adc
sbb
xchg
dec
inc
test
sbb
mov
imull
lods
fcomp
cwtl
arpl
out
mov
pop
adc
inc
dec
and
leave
pop
inc
jmp
call
add
fwait
push
mov
cmp
cmp
pushf
leave
push
pop
movsl
idivl
test
xchg
inc
es
or
and
cwtl
xorl
sbb
aaa
fstp
xor
cmp
push
adcl
addr16
in
push
jbe
xchg
dec
sbb
mov
jne
sbb
arpl
lea
inc
push
sbb
push
jb
cmpsb
ja
mov
push
dec
pop
test
cmp
mov
fisubrl
adc
stos
and
push
aam
mov
pop
pop
subb
stos
cltd
repz
mov
fwait
push
sub
xchg
pop
popf
xor
stc
aas
sbb
and
jno
mov
mov
sub
es
mov
xor
aam
pushf
lods
inc
lahf
inc
dec
dec
rorb
inc
lock
into
lcall
sub
ja
sub
sahf
add
sub
inc
pusha
inc
out
out
pop
sbb
push
lret
jp
test
jmp
adc
mov
push
cpuid
aaa
bound
mov
repnz
outsl
add
ret
es
test
sub
sbb
pop
jbe
cmp
sub
call
cmp
scas
xor
jne
lcall
mov
lea
xchg
mov
fistl
pusha
and
mov
cmp
pop
xchg
adc
shrl
mov
xchg
in
lods
push
jb
sahf
pop
aas
jnp
dec
lds
fwait
sub
icebp
dec
or
sub
push
shll
inc
nop
out
jnp,pn
fsts
dec
or
js,pt
xchg
or
dec
loopne
fisttpl
mov
or
stos
add
adc
mov
in
dec
scas
addr16
or
mov
inc
mov
cmp
sub
pop
mov
mull
mov
inc
inc
jne
mov
sub
divl
aam
mov
inc
lds
inc
mov
stc
adc
pop
addr16
cmpsb
imul
xor
pop
mov
scas
adc
data16
and
scas
or
and
rol
xchg
lods
pop
mov
popf
inc
mov
rcrl
add
cwtl
add
cmpsb
lahf
dec
mov
out
mov
inc
or
fidivrl
movsl
imul
lods
les
jmp
rclb
mov
dec
stos
push
sub
in
imul
or
ret
dec
sbb
roll
test
xor
xor
adc
or
pop
push
loopne
mov
or
or
xchg
insb
sti
xchg
es
lods
jne
pushf
lods
aad
xchg
test
pop
fwait
sub
jo
in
adc
dec
xchg
push
in
cld
sbb
imul
lods
sub
fwait
mov
push
or
js
ret
stos
out
cmp
mov
jae
xchg
sub
add
fsubrs
push
movsl
jns
stos
enter
push
mov
insl
adc
in
xchg
adcb
popa
mov
ss
push
dec
and
pop
fnsave
pop
xor
jns
aad
push
cmp
push
jge
and
cmp
addr16
hlt
mov
daa
outsb
ja
cmp
mov
add
fdivl
mov
nop
out
rorb
adc
jmp
dec
sbb
jb
sub
icebp
jae
dec
cmpsl
out
xchg
push
sbb
je
cld
and
mov
frstor
xchg
inc
fsubr
rclb
mov
ds
dec
loop
or
cmp
test
js
mov
insb
imul
lahf
and
andb
popf
test
fsubr
dec
pop
push
jne
inc
and
xchg
push
mov
sbb
push
dec
mov
adc
mov
xor
ret
sub
aad
out
and
cltd
sahf
lret
fdivp
ja
lahf
fisubl
dec
cmpsb
sub
or
movsb
test
aaa
sub
fdivl
mov
and
xchg
aam
leave
push
aam
dec
jns
filds
insb
inc
and
fwait
and
ss
mov
mov
mov
pop
ljmp
adc
or
repz
mov
push
sub
mov
mov
cmp
mov
cmp
pop
lcall
pop
dec
add
ss
adc
in
jle
std
rorb
jb
rcr
and
les
repz
call
push
and
repz
fcoml
je
int
pushf
shl
pop
in
sub
aam
out
xor
out
jmp
xlat
pop
cmpl
jl
dec
jg
add
mov
jge
mov
lahf
xchg
push
psubd
sub
jo
push
xor
xchg
jg
mov
and
inc
pushf
insl
xor
in
fidivl
cmpsb
ret
scas
aaa
xor
or
jg
insl
xchg
xchg
adc
jmp
sbb
jl
inc
cmp
sbbl
inc
inc
mov
cmp
cmp
stos
hlt
loop
xchg
jmp
dec
mov
rol
cli
add
iretw
sbbl
jge
push
test
cmp
pop
cli
idivw
sbb
pop
pop
fnstsw
scas
into
adc
and
fwait
in
call
xor
pop
xor
ret
movl
jne
sti
xor
jl
adc
lahf
in
push
sbb
or
adc
popa
sub
scas
mov
icebp
jb
incl
repz
mov
in
ja
add
xor
in
scas
and
stc
mov
movsb
xcrypt-ecb
cmpsl
dec
pop
lahf
add
lea
mov
iret
test
out
hlt
cli
test
and
pop
mov
imull
aaa
lods
inc
rclb
idivb
jnp
sub
mov
or
push
popa
sbb
int3
imul
jns
pop
push
ret
push
sbb
dec
clc
jns
cmc
sti
popa
sbb
scas
cmp
in
pop
lods
das
roll
shl
xchg
push
or
xor
or
data16
add
mov
cmp
sub
cltd
dec
pop
add
or
and
add
xchg
fdivs
mov
cs
scas
and
push
xor
cmp
sbb
push
jb
and
add
and
add
lret
mov
pop
jbe
in
aad
or
movsb
cmp
pop
nop
in
xchg
sahf
fwait
jp
pop
insb
sub
int3
lods
out
sub
xor
jo
and
and
pop
adc
bound
aad
inc
dec
add
jl,pn
out
sub
icebp
dec
out
jnp
aad
mov
fdiv
push
sub
adc
pusha
loop
shrb
cmp
daa
std
int
out
sbb
mov
xor
xor
jmp
dec
int3
in
lods
clc
js
jbe
adc
pushf
xchg
inc
jmp
lea
push
inc
lods
or
xor
int3
and
pusha
int3
xchg
sbbl
sub
adc
cmp
pushl
push
loopne
xor
lcall
mov
push
mov
pop
insl
sub
cmp
mov
test
cs
push
popl
jl
and
mov
jecxz
daa
sbb
xchg
pop
jp
xor
loop
int3
cs
lods
test
or
mov
add
dec
push
cltd
movsl
imull
sbb
nop
mov
sub
adc
enter
test
cli
repnz
sbb
jmp
cmc
fcmovbe
lret
cmp
addr16
push
and
in
arpl
lods
in
xor
dec
push
cmp
inc
imul
pop
int
mov
mov
sub
mov
sbb
test
shr
lea
add
aas
outsb
sbb
cmp
xchg
add
dec
xlat
mov
loopne
mov
jge
pop
das
lods
scas
lds
inc
notb
arpl
into
lds
idivb
inc
and
push
mov
test
sbb
je
mov
mov
push
sbb
pushf
imull
adc
pop
or
lret
call
mov
push
mov
lods
mov
test
in
cmp
je
push
das
lcall
adc
adc
popf
cmp
adc
scas
or
jae
cmp
push
aam
and
jecxz
add
jno
in
adc
jg
clc
xchg
out
aad
shll
fistpl
add
stc
gs
fcomip
pop
stc
negb
push
sahf
mov
mov
dec
insl
ljmp
aas
sbb
lret
or
push
fcmove
dec
call
adc
jb
push
fnstenv
scas
mov
fsubl
sti
dec
imul
mov
int3
push
scas
jb
push
mov
cmp
dec
and
test
ret
out
mov
xchg
aad
lea
orl
hlt
inc
sbb
inc
xorb
inc
rcrl
cmpsl
jecxz
pop
lds
js
scas
sti
lret
sub
mov
xchg
push
adc
mov
fwait
cmc
addr16
rorb
fnstsw
daa
fs
push
cmpsb
xlat
lds
and
repz
lds
push
shll
hlt
fwait
in
cltd
stc
movsb
jmp
test
inc
mov
mov
not
gs
cmp
adc
or
mov
insb
sub
push
pop
ds
or
rcrl
mov
push
xor
xchg
in
pop
mov
mov
das
shll
jmp
mov
nop
mov
loop
outsl
jmp
out
mov
fnstcw
ja
or
or
je
cmp
sub
ret
das
into
ret
loop
sbb
mov
mov
sbb
call
push
or
sbb
jmp
bound
and
fsubrl
push
popf
aaa
ficomps
ret
or
mov
sarl
cmpsl
scas
mov
cld
inc
mov
cltd
pusha
lsl
outsb
ret
idivl
cmp
ret
xchg
jle
inc
aam
loopne
insl
sub
addr16
int
or
mov
loop
out
jge
ret
mov
iret
mov
xchg
add
frstor
adc
add
inc
cmc
ss
pop
inc
jg
jnp
jp
and
fistps
out
fisubrs
mov
xor
mov
mov
pop
lds
ret
jecxz
loopne
fsubrl
fidivrl
and
or
seta
pop
enter
dec
imul
add
adc
cmp
inc
xchg
sti
mov
hlt
push
mov
setg
dec
xchg
adc
aam
fildll
cmp
negb
sbb
jne
not
out
cmp
sbb
dec
sub
lea
lock
lret
pop
push
xor
test
into
adc
jmp
xchg
dec
loope
pushf
cmp
mov
sub
inc
cmp
mov
inc
dec
mov
int3
add
adc
lahf
jb
cmc
inc
pusha
mov
lock
mov
fsubp
xor
xchg
aas
jle
test
test
lock
cmp
mov
sbb
das
repnz
jb
pop
js
push
mov
cmpsl
scas
inc
dec
inc
leave
inc
xchg
cli
flds
jp
js
dec
xchg
or
add
lods
insb
push
loope
fsubrs
imul
into
loop
insb
data16
lock
xlat
and
mov
dec
or
jge
mov
hlt
cltd
insl
cli
test
pop
pop
mov
xchg
inc
cli
push
ljmp
and
loopne
test
insb
out
leave
mov
mov
and
sahf
jb
xchg
dec
adc
out
out
mov
loopne
shrb
pop
sbb
lock
je
jb
ret
add
or
cwtl
je
stos
stc
aaa
ret
andl
mov
jbe
lahf
pushf
jno
cs
and
xor
or
cmp
jmp
xchg
leave
lahf
movsb
les
jo
cmp
repnz
scas
cwtl
mov
lret
or
mov
iret
mov
xchg
iret
inc
sarl
add
push
mov
jmp
lret
imul
imul
popf
xchg
and
inc
pop
pop
in
mov
stc
dec
inc
lret
dec
sbb
out
out
jne
cld
stos
and
jmp
sbb
pop
int3
add
inc
cmp
adc
clc
mov
dec
jl
mov
negb
push
aaa
or
movsl
enter
mov
xchg
add
iret
sbb
push
lods
xchg
movsb
aad
pop
or
dec
cmp
addl
and
aam
cltd
test
imul
notb
bound
push
hlt
mov
and
decl
into
mov
sbb
popf
pop
add
ss
aam
xor
xchg
push
xor
mov
mov
or
inc
sub
pop
xor
and
mov
mov
cmc
femms
inc
push
mov
or
mov
aas
ret
stos
test
push
icebp
rcrb
dec
or
xor
fprem
leave
jb
and
push
push
mov
jle
popa
mov
fcmovne
pop
cmp
inc
int
cmpsl
shrb
shr
es
jp
xchg
mov
test
insb
mov
lahf
shrb
xchg
mov
mov
std
scas
adc
cld
stos
cld
fcoml
inc
mov
fs
lds
dec
jmp
pushf
aam
call
jno
scas
mov
outsl
dec
cmp
mov
sbb
shll
shr
push
shr
iret
fwait
jge
mov
jns
cmp
scas
push
nop
add
mov
cmc
fwait
imul
sub
hlt
cmp
arpl
adc
cmc
ret
inc
push
pusha
push
leave
sahf
or
adc
cltd
or
es
or
stos
sbb
rorb
pop
insl
xchg
sahf
fucomi
lock
fiaddl
fucom
in
xor
dec
push
pusha
and
mov
ret
iret
push
rorb
out
push
jno
imul
sbb
test
adc
insb
lods
xor
into
jns
cmp
jecxz
shlb
jo
ljmp
inc
rcrl
fsts
stos
fmulp
and
movsb
clc
cld
dec
jne
loop
xchg
mov
arpl
inc
adc
inc
int3
sbb
fsubl
cmp
or
and
sbb
fdivp
dec
cmp
sub
push
jbe
dec
or
outsl
ja
mov
xchg
in
sbb
out
mov
jg
lret
and
xlat
xchg
mov
les
shlb
in
cmp
bound
cmp
xchg
sbb
adc
mov
out
push
lock
push
sbb
cmp
lods
mov
sub
sub
int3
lods
add
ss
cmp
pop
loopne
mov
cmp
dec
cwtl
fldcw
dec
subb
andb
xor
inc
and
sarl
pop
jmp
aaa
in
pop
lods
or
xorb
xor
andl
push
jge
dec
sahf
es
or
inc
rcrl
push
scas
sbb
jnp
xor
std
imul
adc
mov
iret
xor
xor
loope
xor
mov
push
mov
lods
rcll
popa
jo
mov
lret
call
cmp
push
cwtl
imul
popf
and
push
jmp
scas
test
xchg
xchg
dec
push
loopne
pand
inc
mov
mov
dec
sub
loope
or
jmp
mov
mov
pop
test
xchg
aas
cmpsb
mov
jl
mov
mov
shll
sub
jae
xchg
pop
sbb
cli
push
cltd
cmp
mov
push
add
mov
notb
aad
out
jecxz
mov
fisubs
call
int3
jns
mov
cmp
xor
xor
jb
add
sar
inc
aaa
dec
pop
cmp
fcoms
repz
adc
and
jae
pop
push
icebp
out
and
adc
sti
jmp
jmp
subb
jge
mov
dec
loope
jge
rol
je
xor
in
and
repnz
jl
test
xlat
lcall
sbb
pop
mov
mov
sti
test
cmp
dec
jp
in
lds
pushf
fsub
inc
pop
addr16
mov
enter
call
xchg
dec
nop
loope
insl
pop
fldt
mov
mov
mov
mov
pop
sub
sub
pop
dec
roll
nop
mov
inc
cmpsb
jne
cmpsb
mov
iret
into
add
push
sbb
mov
sbb
lods
and
pop
imul
sub
mov
fdivl
fwait
xchg
and
add
cmpsl
sahf
mov
jb
in
sarb
dec
movsl
fadds
adc
push
loop
mov
jno
movd
cmpsb
insb
xchg
repz
orb
jp
mov
ret
lret
jl
shlb
mov
stc
xchg
sbb
cmp
xchg
dec
in
popa
icebp
dec
jle
ficoms
into
out
jle
mov
jp
jne
cmp
cmp
xchg
ret
lcall
repz
mov
jae
loope
dec
mov
sub
loopne
sbb
stc
hlt
mov
mov
or
leave
sub
aam
cld
inc
jg
pop
xchg
sbb
sub
lret
cmp
in
daa
aaa
subb
clc
sbb
std
flds
stos
loope
xor
repnz
pop
jae
outsl
lret
repnz
scas
push
or
test
shl
gs
mov
shrl
inc
iret
aad
faddp
outsl
daa
xor
test
lock
adc
das
xchg
sub
mov
pop
nop
lret
adc
mov
dec
loope
dec
mov
hlt
repz
or
push
daa
or
aam
or
cmpsb
outsl
pop
rclb
adc
jge
xlat
repnz
dec
push
sti
shll
push
cmp
cld
imul
dec
in
cltd
aas
push
pop
cwtl
popf
jg
inc
mov
cmp
repz
icebp
mov
xchg
gs
loop
test
divl
repnz
mov
test
dec
mov
dec
dec
mov
loopne
push
cmc
hlt
lret
popa
and
sub
mov
shrl
jns
test
mov
xor
and
lret
bound
push
test
mov
fildll
xor
mov
pop
fildl
jle
mov
lret
push
and
clc
xchg
add
fbld
jp
inc
push
loope
mov
adc
repnz
mov
and
jg
and
nop
repz
mov
mov
inc
aaa
jle
mov
call
arpl
pop
sbb
dec
pop
fildll
push
mov
ss
loop
push
stc
aad
out
imul
xor
lret
xor
jl
dec
lock
pop
rorb
xchg
sbb
xchg
fdivl
lock
pop
cmp
dec
aad
aas
jge
inc
hlt
fcomp
jmp
inc
pop
sub
xor
mov
stc
adc
cmc
mov
xor
jne
add
mov
pop
mov
test
add
cltd
mov
test
icebp
ss
jl
xchg
cmc
outsl
aad
jmp
sahf
lret
jns
sti
out
es
jecxz
add
xor
jmp
add
inc
sub
or
pop
cmp
out
popf
shr
ljmp
mov
jno
push
mov
pop
into
in
mov
inc
sub
into
sub
fsubl
sbb
and
xor
jno
scas
inc
mov
out
add
popa
dec
inc
mov
dec
xor
jae
jmp
add
mov
add
mov
xlat
arpl
shl
out
xchg
xchg
push
aad
lea
cmp
andl
sbb
cmp
and
ds
inc
jge
pushf
aam
sub
sbb
push
mov
and
dec
not
mov
stos
into
fsub
std
pop
out
icebp
cltd
push
pop
and
adc
ljmp
hlt
shll
loop
lahf
ds
pop
inc
pop
xor
mov
les
aaa
lock
cmp
jecxz
js
cmp
dec
sbb
fimull
mov
inc
stos
xchg
cmp
shrl
dec
mov
stos
idivb
jg
pop
imul
xchg
fsubs
sarl
lcall
and
add
rol
out
out
sub
and
dec
cmp
mov
ja
shlb
pop
addr16
fsubl
lahf
mov
out
ja
jmp
cmp
or
clc
daa
cmpsl
leave
mov
push
lcall
mov
and
mov
jo
int
mov
orl
ss
fcmovb
and
or
ret
push
push
std
les
or
jo
cli
push
imul
imul
subl
or
push
xor
xchg
lea
testl
mov
sub
pushf
push
fcompl
arpl
fbstp
shll
in
shl
or
jmp
arpl
or
dec
ja
sub
movsl
int
ljmp
test
out
pop
inc
jmp
or
sbb
and
cmpb
in
fldenv
addl
fcmovnb
sub
hlt
cmpsb
xor
xor
les
inc
es
fmulp
or
jg
and
and
push
add
jne
loopne
sbb
push
insb
das
cs
sub
push
and
icebp
push
stos
xor
pop
mov
xor
bound
std
ljmp
ret
inc
nop
and
cmp
lods
sub
push
lods
jbe
pop
adc
xor
pop
xchg
pop
scas
mov
jp
push
mov
sub
mov
xor
xor
call
out
jl
mov
pusha
ljmp
lods
pusha
out
mov
shlb
jmp
inc
mov
out
loopne
ret
push
push
push
jl
das
cmp
mov
and
mov
mov
sbb
push
add
stc
imul
ret
push
lock
jnp
add
jne
xchg
push
mov
in
sarb
xchg
mov
dec
xchg
aas
adc
rorb
lds
mov
iret
stos
outsb
fidivrs
jg
cli
mov
push
scas
ret
pushf
sbb
rcll
jp
jg
in
inc
hlt
punpckhbw
idiv
scas
push
hlt
push
cmp
pusha
push
jo
jle
jl
jp
sub
rcrb
mov
dec
mov
inc
dec
loopne
dec
push
scas
adc
mov
mov
or
test
repnz
testl
cmpsl
clc
hlt
or
call
jp
inc
jp
in
and
push
call
imul
insl
xor
stos
imul
outsb
jae
fmulp
ss
mov
mov
pop
jnp
mov
adc
fisubl
pop
inc
fnstenv
nop
les
cli
and
mov
mov
hlt
xor
std
outsl
pop
adc
and
sbb
inc
imul
out
in
inc
arpl
stos
mov
in
inc
mov
jo
into
pop
ror
or
sti
push
adc
cmp
cmp
cmp
mov
push
pop
lods
mov
push
movsl
das
push
loop
inc
dec
adc
movsb
ljmp
cltd
mov
mov
sbb
sub
leave
jge
push
test
push
inc
push
inc
xchg
xchg
jecxz
hlt
inc
xor
jg
test
jl
fsubs
dec
insb
jecxz
push
adc
rorb
mov
test
sti
add
push
data16
mov
out
call
push
rorb
outsb
mov
xchg
push
mov
cmp
jb
ficoml
sub
sub
mov
dec
lea
cwtl
in
pop
add
fldl
daa
push
xor
imul
fcoms
cmp
ljmp
inc
mov
lcall
gs
ds
lahf
sbb
push
adc
xchg
add
mov
and
xor
cwtl
pop
cmp
jp
cmp
das
dec
imul
cmp
mov
push
push
lret
push
pop
mov
repz
jne
push
jp
fwait
mov
imul
cwtl
in
and
sbb
fsubl
outsb
cmp
out
adc
lods
lret
lods
test
popa
mov
mov
adc
sub
cmpl
fsubl
rclb
out
inc
enter
push
jmp
leave
mov
ljmp
in
loope
imul
int
ficomps
movsl
sbb
mov
aad
jns
sti
mov
push
push
mov
push
leave
movsb
scas
mov
add
and
rcr
sbbb
jmp
aam
icebp
test
xchg
stc
sub
dec
and
mov
jnp
movsb
sub
sbb
mov
jno
loop
adcl
push
mov
sbb
xchg
arpl
cmp
adc
sbb
stos
jg
stos
imul
pop
jp
jbe
insl
inc
xchg
xchg
xchg
sbb
xor
jb
pop
pusha
push
jle
mov
shrl
jns
push
jnp
dec
inc
cmp
inc
cltd
jne
test
xchg
loope
mov
add
push
popf
pushf
js
mov
mov
jp
pop
add
cs
inc
call
into
adc
and
imul
out
xchg
mov
repnz
mov
jnp
pop
mov
xor
bnd
dec
jb
fdivrl
pop
jg
pop
adc
jae
hlt
cli
in
pusha
sti
ja
adc
sub
outsb
nop
in
je
dec
sbb
mov
adc
xor
aam
cvtps2pd
push
mov
sarl
adc
outsl
jno
mov
out
fbstp
jp
addl
push
mov
stos
loopne
nop
nop
jg
cmpsl
jbe
inc
xor
jecxz
icebp
xchg
lcall
mov
push
roll
ret
push
in
int3
cli
js
xchg
push
lret
cmc
icebp
les
inc
orl
mov
push
and
or
psrlq
cmp
test
roll
mov
hlt
popw
jne
pop
into
bound
add
dec
popf
outsb
mov
jmp
and
xchg
inc
jg
fisubrl
and
push
ljmp
and
scas
out
and
insb
das
mov
daa
pmaddwd
data16
inc
pop
mov
rorb
dec
or
sahf
mov
insl
sub
sbb
adc
jns
mov
sahf
test
sbb
inc
push
xor
pop
dec
mov
xlat
or
jb
int3
je
and
push
mov
inc
pop
mov
and
movsl
push
add
cld
pop
int3
fldl
int
movsl
frstor
adc
fistps
mov
sbb
fcoms
jne
or
adc
sub
xlat
or
jp
out
adc
jo
dec
xchg
mov
lock
sbb
push
cmp
fiaddl
xor
inc
ds
jecxz
lea
cli
dec
pop
in
add
dec
adc
adc
les
clc
jge
jnp
ljmp
xlat
xchg
or
and
mov
push
or
jbe
outsb
ja
or
jg
addr16
mov
add
pop
mov
in
push
sbb
je
mov
adc
stos
add
lret
mov
jo
dec
outsl
pushf
add
mov
arpl
int3
pop
es
add
stos
inc
sbb
aas
jbe
cmpsl
add
jae
sbb
addr16
mov
fmuls
test
mov
mov
mov
cmpsb
push
shll
fs
cmp
hlt
jle
arpl
ja
adc
ss
push
inc
insl
js
mov
popf
and
out
adcb
out
or
inc
test
pop
dec
dec
scas
jecxz
mov
push
out
repnz
jnp
xchg
testb
out
push
mov
into
fwait
push
clc
mov
mov
mov
stos
xchg
push
mov
cmp
xchg
xchg
add
adc
and
fcoml
xchg
es
cld
push
fisttpll
lds
icebp
add
push
adc
pop
mov
mov
or
inc
adc
pop
and
cmpsb
in
push
ret
in
arpl
sbb
lods
sub
pop
fsubs
outsl
mov
dec
or
outsb
popf
jbe
mov
jmp
sub
cwtl
mov
and
mov
or
or
xchg
lock
andl
sarb
sbb
inc
ds
adc
pop
adc
add
and
mov
test
lret
pop
jnp
inc
movsb
add
les
aam
std
push
stos
shrb
inc
or
loope
fldt
movsl
inc
cmp
cmp
mov
shrl
xor
inc
stc
movsb
cmp
pop
or
pop
xor
cltd
push
popa
repnz
cltd
pop
push
fbld
inc
jno
out
in
xor
shlb
xor
ds
sbb
enter
outsb
and
jmp
sbbl
popf
into
cmp
pop
mov
jb
push
test
pop
adc
rcrb
popa
cwtl
jo
jbe
out
add
inc
enter
pop
in
loopne
test
mov
add
push
pop
rcll
lock
add
lahf
push
mov
and
in
cmpsb
cmp
mov
shll
push
add
add
xor
cmpsl
in
add
icebp
pop
mov
iret
mov
sub
mov
add
mov
mov
rcr
and
xor
fidivl
push
xchg
icebp
mov
fidivrs
movsb
dec
addr16
imul
adc
in
inc
mov
jno
movsl
test
je
lea
jo
and
cwtl
scas
push
cs
inc
out
inc
dec
jge
ja
xchg
adc
jecxz
insl
xor
scas
sbb
inc
or
push
lods
mov
insb
aam
es
out
insl
or
lods
data16
add
pop
fmuls
or
pusha
dec
adc
mov
stos
xchg
outsb
sbb
mov
popf
and
jno
pop
mov
int3
js
inc
push
or
out
pop
xor
sub
mov
xor
mov
push
sub
adc
imul
mov
xor
xor
ficoml
data16
das
lahf
push
sbb
sub
aam
scas
pop
and
aaa
rclb
lahf
inc
iret
adc
pushf
xor
xlat
fsubrl
mov
jmp
jbe
jnp
and
cmpsb
or
mov
jo
lret
jg
lahf
mov
dec
add
fstl
clc
fcoms
add
mov
mov
sub
ljmp
dec
mov
jns
add
hlt
xor
sysenter
test
pop
mov
hlt
or
xor
sbb
add
push
xchg
push
ljmp
popf
shlb
les
int3
out
ret
add
data16
idivl
ds
lcall
or
dec
cwtl
jg
dec
pop
lea
int
cltd
xor
sub
fstpt
call
sub
outsb
movsl
shrl
mov
cmc
mov
cwtl
pop
mov
sbb
cmpsb
jmp
mov
andl
scas
jnp
movsb
xchg
sbb
mov
in
xor
test
jl
fwait
jno
push
loopne
mov
in
loop
adc
stos
cmp
inc
sub
xchg
stos
or
in
movsb
sahf
fiaddl
sub
push
cmp
pusha
loopne
mov
sbb
jb
or
jge
xchg
inc
stos
loope
add
insl
push
xor
jge
loope
int3
aaa
jp
cmp
mov
push
add
addr16
mov
jl
jle
dec
or
test
dec
xorl
leave
pop
fildll
rolb
jg
imul
jbe
sbb
sbb
data16
and
sub
push
jae
loope
scas
sbb
inc
enter
adc
fiadds
inc
add
xchg
cli
int3
dec
push
pop
mov
inc
out
pop
sbb
or
mov
pop
aad
xchg
sahf
out
cmpsl
dec
addl
daa
jae
mov
or
xchg
mov
movl
movb
push
insb
lods
push
sti
pop
or
insb
repnz
jmp
sub
xor
inc
outsl
xor
aam
out
aam
ja
and
mov
cli
int
mov
rcrb
dec
fmull
xor
repz
stos
push
pop
call
in
out
in
pusha
push
lahf
popa
insb
push
icebp
cmp
mov
xchg
aad
loopne
mov
or
sbb
lret
push
in
sbb
scas
ficomps
jl
push
fisubs
add
push
push
lock
dec
pop
popa
lret
jmp
inc
shlb
scas
les
xchg
subb
mov
mov
aas
lea
mov
jne
insb
jo
in
imul
nop
int
cli
fldcw
pop
sbb
adc
sbb
cmpsl
jnp
or
mov
mov
ljmp
dec
xchg
add
xchg
xchg
call
pop
pop
or
iret
pop
ret
stos
movsl
adc
xchg
mov
gs
in
or
and
std
repnz
cs
rcrb
and
pop
cmp
aaa
jae
fnstenv
sti
push
leave
mov
adc
das
ret
ljmp
add
mov
clc
stos
and
cs
ljmp
cld
or
or
dec
pop
mov
mov
mov
push
in
inc
in
dec
mov
insb
push
jg
lock
cli
add
mov
xor
jecxz
mov
mov
jnp
outsb
add
fsubrs
jne
cmp
jae
arpl
pop
pushf
movsl
dec
mov
repz
hlt
mov
mov
inc
pop
mov
xlat
lods
movsl
dec
cmp
xor
jns
inc
scas
lds
cmpsl
mov
testb
xchg
xchg
dec
out
test
out
adc
call
shll
inc
push
push
lock
jecxz
ss
nop
iret
adc
xchg
sti
les
jg
lahf
cmp
nop
pop
popa
xchg
cmp
fs
popf
jl
lods
cmp
popf
sub
stc
std
clc
or
fsts
pop
test
stos
insl
in
dec
aas
mov
adc
shll
jbe
mov
jp
adc
aas
daa
adc
addr16
jl
mov
je
js
test
cwtl
jge
jp
xchg
inc
inc
adc
stos
xchg
in
call
ljmp
xor
xor
sbb
mov
negl
lret
sbb
xor
ss
outsl
xchg
into
push
push
out
cli
adc
xchg
iret
xor
out
enter
andb
and
fildl
xor
jle
daa
stc
out
sarl
add
cli
cltd
iret
mov
scas
xchg
sub
inc
mov
add
divb
jle
add
pop
or
movl
ljmp
enter
push
icebp
add
lahf
test
adc
rcrl
sti
aaa
repnz
enter
mov
lods
ror
pop
mov
imul
ljmp
xor
nop
sub
push
jae
repnz
mov
xchg
or
data16
mov
adc
push
mov
push
or
pop
nop
es
lahf
and
jnp
and
jge
insl
mov
popa
arpl
jg
in
adc
jbe
sub
mov
mov
scas
jp
xor
sub
sbb
sarb
jp
xor
mov
jns
ss
jg
xchg
and
idivl
data16
sbb
test
fdiv
push
mov
xchg
cmp
mov
mov
loopne
shll
scas
xor
sub
out
sub
jecxz
mov
dec
mov
and
jns
pop
cltd
mov
xor
out
cli
and
insl
movsl
repz
int
cmpsb
push
sbb
and
inc
mov
scas
pop
xchg
leave
mov
jnp
mov
sbb
mov
jo
xchg
mov
nop
mov
dec
push
dec
lock
jo
dec
movsl
ret
lea
popa
jns
mov
xchg
dec
cwtl
inc
fistl
xchg
inc
mov
lock
pop
or
mov
in
mov
sbb
outsb
dec
sub
xor
mov
jmp
adc
daa
jmp
daa
mov
push
and
xchg
repnz
cltd
adc
mov
xchg
call
out
and
sbb
and
cs
inc
loop
mov
loope
sub
in
add
inc
xchg
call
or
xor
dec
mov
jae
mov
inc
fwait
shrb
push
push
push
mov
mov
mov
dec
mov
test
out
xlat
pop
rorb
pop
or
jecxz
sbbb
xor
add
mov
cmp
fldz
shlb
es
int3
jo
leave
cmpsl
mov
sbb
scas
hlt
lahf
lea
mov
lcall
adc
mov
daa
sub
test
lret
dec
jo
cmp
lods
out
insb
cmp
rcrl
test
mov
mov
dec
cli
popl
leave
xor
xchg
aas
add
int
mov
adc
add
testl
pop
jle
or
adc
daa
lea
movsb
mov
inc
dec
lret
rcrb
arpl
test
add
bound
aad
pop
lds
push
and
or
dec
mov
clc
call
clc
int
movsb
mov
incb
xlat
push
lcall
cld
add
mov
loope
push
int
ja
daa
loopne
sbb
and
push
jl
xor
adc
test
test
jp
shll
mov
andb
pop
add
popf
jl
cmpsl
jns
push
jge
test
jb
adc
mov
jecxz
cmp
cmp
jno
adc
mov
mov
sbb
cmpsl
push
add
arpl
in
or
out
dec
jmp
add
cmovle
cli
sbb
xor
mov
ss
iret
jp
inc
jp
psrlw
lea
sub
mov
ljmp
rolb
pop
cld
cli
test
stos
mov
call
es
popf
inc
xor
lds
leave
inc
dec
rorl
test
inc
sarl
movsb
and
pop
outsb
outsl
clc
loope
es
and
dec
in
sbb
in
fimuls
rcl
or
xchg
lds
mov
movsb
xchg
je
xlat
lret
jle
bound
ficoms
or
shll
cmp
sub
in
cmp
dec
ficoms
add
sarl
pop
popf
and
mov
push
imul
push
das
sbb
bound
int
jge
pop
aas
enter
dec
addr16
xchg
xor
mov
add
xchg
gs
sbb
and
mov
jnp
sbb
cs
in
mov
data16
adc
ljmp
xchg
xchg
fidivrs
add
mov
xor
stos
popf
aaa
cmp
insb
jmp
sti
push
jbe
pop
push
dec
xchg
jne
jp
adc
bound
cmp
dec
jne
push
std
xchg
and
add
mov
and
pop
test
jg
repz
sub
pop
mov
insb
mov
xchg
inc
or
jl
loopne
stos
insl
arpl
sarl
sbb
jp
in
add
imul
filds
leave
nop
and
mov
cmp
ss
ds
adc
mov
std
cwtl
push
inc
push
cmp
in
loop
mov
pop
xlat
and
iret
and
cmp
cmp
gs
ja
adc
push
mov
clc
pop
pop
lahf
shr
loop
push
call
cmp
xchg
andb
mov
sbbl
addl
mov
loope
or
push
mov
jecxz
lods
push
insb
aad
pop
lahf
jg
push
xchg
repz
mov
cmpsl
mov
adc
lods
repnz
sbb
add
imul
mov
xchg
in
cpuid
idivl
or
pop
xchg
inc
es
mov
mov
sbb
testl
or
int3
scas
cs
inc
mov
cmc
addr16
test
pop
cmpsb
test
inc
mov
fs
cmp
lock
out
lods
aas
cli
pushl
hlt
sub
repz
mov
lcall
fldt
push
inc
mov
sub
xchg
addr16
push
mov
xor
loope
rcrl
in
adc
push
ret
mov
sbb
sbb
push
jno
lods
in
push
cli
mov
jns
cmp
push
hlt
mov
add
xor
jmp
pop
xor
leave
fld
xorb
add
sub
inc
rcrl
fistl
push
imul
jecxz
sub
addr16
outsb
mov
pop
inc
ja
fucomip
jne
hlt
sub
and
xor
mov
popf
fcoml
push
outsb
lret
daa
into
aad
mov
adc
mov
and
xchg
test
cs
cld
in
adc
sbb
sub
ss
stos
mov
xchg
ja
out
mov
mov
inc
jbe
dec
sar
dec
jnp
fiadds
cmpsl
movsb
mov
fs
cmp
pop
jae
cmp
xor
inc
jb
dec
subb
pop
data16
mov
mov
aaa
jmp
shlb
icebp
jns
ja
xor
rcll
adcl
sbb
mov
cmc
and
push
imul
mov
loopne
in
stc
push
adcb
add
loop
rcl
mov
inc
add
cmp
jno
mov
xor
or
daa
pop
cmp
incl
mov
push
cwtl
flds
divb
jbe
aaa
shlb
lds
pop
out
pop
cmp
lret
popl
dec
sub
cmp
cmp
mov
call
push
lret
mov
insl
aaa
adc
adc
sub
es
xor
bound
nop
mov
inc
aad
push
pop
adc
dec
orb
mov
jnp
sbb
add
jmp
sub
pop
ja
jno
cmpsl
mov
js
addr16
pop
and
dec
cmp
xchg
and
inc
jecxz
out
movsl
je
inc
push
and
xchg
inc
mov
sbb
jecxz
xchg
pop
push
test
popa
mov
push
lock
mov
push
repnz
cwtl
pop
imul
lods
sahf
mov
xchg
xchg
push
rcrl
push
lret
dec
inc
aam
int3
test
jecxz
jno
jle
pusha
push
fildl
pcmpeqb
insb
sub
jl
subb
xchg
inc
inc
push
pop
ljmp
and
sti
pop
and
test
jmp
movsb
orb
xor
stos
in
and
sbb
cmp
jmp
loop
pushf
mov
dec
repnz
adc
stc
mov
jge
call
jecxz
aas
mov
fbld
xchg
imull
ds
adc
sahf
clc
dec
call
movsb
movsb
ficoms
dec
das
adc
jmp
les
mov
movsl
int
icebp
out
mul
mov
inc
lcall
imul
lods
cmp
adc
mov
cmc
inc
out
ds
or
pop
push
jb
aam
pop
insb
dec
push
pop
xor
add
jg
or
sub
pop
push
push
loope
loope
test
fisubs
stos
loopne
faddl
xchg
stos
hlt
dec
push
xorb
dec
jg
in
loop
adc
and
and
outsb
fisubl
jns
xor
fmuls
cltd
repz
fisubrs
cmp
popf
fisubs
mov
xchg
rcr
cmc
xchg
add
sbb
jecxz
imul
mov
mov
xchg
inc
stos
or
pop
mov
out
mov
pop
add
rorl
xor
mov
daa
je
out
outsl
dec
push
pop
es
imul
fisubs
fadds
and
scas
je
mov
dec
cmp
jmp
and
aas
arpl
mov
data16
cmpsl
test
repz
imull
jne
pop
mov
shll
mov
or
jl
add
jo
mov
call
pushf
jl
daa
xchg
imul
jae
hlt
insl
mov
scas
jno
xchg
sbb
pop
rcrl
mov
cli
fimull
shlb
jnp
jae
push
add
mov
xchg
ss
xor
jg
push
sysret
mov
cmpb
ret
in
imul
cwtl
jno
cmpsl
adc
enter
dec
jp
adc
xor
sbb
inc
lret
out
fildll
jle
or
jae
cmp
in
aam
jo
imul
pop
lcall
mov
mov
lods
inc
pop
jne
inc
repnz
ljmp
clc
sub
cmpsb
jb
cld
aas
push
popa
lcall
decl
or
lea
push
leave
add
inc
enter
aaa
xchg
dec
mov
ds
inc
mov
adc
sti
es
negb
mov
jl
jp
clc
test
aam
or
stc
rorb
push
and
lea
sub
test
bound
std
mov
sbb
and
dec
rorb
nop
sub
inc
or
hlt
leave
xchg
dec
orb
add
movsl
cmp
jmp
dec
add
or
gs
pop
arpl
fs
ret
lret
mov
pusha
jge
orb
push
push
mov
inc
loop
sbb
iret
out
rclb
xor
xchg
inc
add
mov
add
imul
or
push
xchg
sahf
mov
mov
in
fucompp
in
fstps
pop
mov
mov
sub
cmova
filds
movsl
cmc
or
pop
dec
pop
jmp
inc
sbb
and
in
adcb
or
enter
pop
xor
jmp
xor
std
repnz
mov
sub
push
movsl
push
add
and
rcrb
sar
push
movsl
push
jl
cmp
sub
add
add
xchg
xor
loope
outsb
add
outsl
ljmp
adc
fidivl
mov
pop
jne
mov
js
push
jecxz
adc
jle
mov
mov
push
xchg
cmp
mov
cmpsl
scas
pop
sub
jb
cs
dec
pop
cmp
insl
lods
pop
dec
sbb
cs
jmp
mov
fs
or
xchg
dec
fs
sbb
push
lcall
inc
test
fldt
or
adc
dec
jg
cmp
ss
gs
xchg
test
insl
aas
pusha
lret
pop
jbe
test
xor
dec
sbb
clc
daa
pop
addr16
outsl
add
adc
outsl
mov
in
fwait
shlb
in
test
into
daa
loop
push
loope
or
push
cmpsl
jo
push
dec
mov
sub
orb
cltd
inc
repz
lea
les
lods
out
std
sbb
dec
jns
insl
cvtps2pi
mov
cmpsb
mov
loopne
pop
scas
inc
xchg
dec
dec
sbb
xchg
imul
and
jnp
jnp
sub
cmp
push
in
fcomip
mov
orb
ret
loope
fldenv
cmp
scas
in
push
negl
mov
shll
cmp
mov
jg
decb
or
sbb
or
push
test
xchg
scas
inc
or
push
inc
mov
mov
xor
fisubs
push
sub
imull
repnz
outsl
or
mov
sti
outsb
sbb
shlb
shrl
leave
xor
mov
mov
jne
imul
cmpl
gs
repnz
mov
xor
mov
cmp
jb
jae
mov
dec
mov
mov
mov
xorl
fildl
sbb
dec
mov
faddl
adc
andb
lret
rclb
rcrl
imul
inc
and
jne
test
or
mov
xlat
adc
mov
iret
cli
xchg
pop
add
ljmp
pop
push
xchg
dec
stc
mov
or
bswap
shl
in
add
das
or
lock
andb
icebp
fdivrl
addb
loopne
pop
and
mov
mov
outsl
sub
shlb
fwait
inc
ja
adc
dec
inc
lret
xor
push
rcrb
inc
test
shl
cmp
aaa
andl
sbb
arpl
xchg
inc
pop
ljmp
xchg
rorb
jge
arpl
insl
in
mov
cmc
jg
cmp
nop
pushf
inc
test
out
iret
daa
dec
int3
sub
cltd
pop
test
push
pop
sub
arpl
xor
xor
sahf
mov
xrelease
loope
inc
repz
jno
cmpsb
add
mov
es
mov
test
and
mov
add
xor
or
mov
jmp
push
sahf
push
xchg
mov
cmc
fdivrs
pop
and
push
aad
sti
popa
sub
xchg
hlt
out
push
int3
xchg
ffreep
inc
sub
lods
inc
rolb
frstor
jne
test
sub
adcl
movsb
cld
stos
adc
xchg
jbe
scas
add
cltd
enter
mov
sahf
xchg
sub
ds
cwtl
sbb
addb
imul
adc
pop
bound
enter
lock
and
ss
push
or
inc
and
pusha
out
fnstenv
pusha
mov
cmp
pop
and
in
mov
mov
cmp
xorl
adc
out
mov
xor
push
out
jnp
push
jbe
inc
insl
or
incl
push
dec
std
stos
das
icebp
test
jge
lds
cld
lret
xor
xor
sub
es
sbb
in
popf
hlt
sbb
jns
scas
jp
lods
mov
jp
push
in
pop
and
mov
push
hlt
push
mov
inc
mov
push
addr16
or
mov
stos
cmp
das
mov
imulb
mov
cmc
jmp
js
imul
aad
clc
push
in
cmpb
jnp
cli
and
mov
sbb
sub
cmp
or
jb
xchg
scas
adc
dec
pop
je
mov
popf
xchg
fimull
push
sarl
enter
sbb
inc
adc
inc
jne
dec
lea
add
pop
daa
pop
adc
test
popf
aam
out
cmpsl
andb
outsl
cmp
mov
fadds
fistpl
lret
imull
fistpl
jb
nop
loopne
pop
inc
or
ret
xchg
and
mov
cltd
loop
loope
roll
add
movsb
push
mov
add
lock
push
add
sbb
mov
jl
mov
cmp
out
mov
clc
ja
inc
inc
mov
cmp
jno
sub
test
jle
testl
sbb
and
mov
fsubl
or
iret
js
push
lret
scas
and
cmpl
std
nop
dec
ds
into
notb
pop
fadds
sbb
lret
stos
add
stc
loopne
lods
adc
push
insb
ror
popa
fimull
call
pop
sub
lods
push
jge
cli
imull
add
aaa
aaa
scas
jbe
test
in
std
adc
jnp
cmpl
sbb
idivb
mov
jns
subb
imul
mov
dec
xchg
das
sbb
ret
adcl
je
lea
pop
cmpsb
dec
or
flds
dec
mov
cwtl
ja
xchg
push
rclb
and
movsb
orl
sbb
je
jmp
mov
push
imul
mov
push
popa
jge
test
xor
lods
push
mov
add
sahf
cmp
mov
popa
aas
lds
ds
cmp
inc
push
dec
push
cmp
imul
ret
sbb
jbe
cs
xchg
test
test
sub
mov
scas
xor
xchg
ret
inc
pop
add
xchg
adc
cmpsl
mov
pop
sub
fs
xchg
mov
pop
mov
cmp
mov
cltd
inc
arpl
xorl
cld
push
sbb
movsl
iret
jns
lcall
pop
push
pop
fdiv
adc
addb
lret
cli
and
sub
out
sub
dec
daa
inc
fwait
loop
push
insl
loope
fsubrl
push
shll
subb
dec
adc
iret
mov
dec
add
aas
lock
and
jnp
adc
push
fcos
cwtl
xlat
xchg
mov
pop
xor
rorb
lds
lods
xchg
mov
fldl
xchg
xchg
lret
out
xchg
or
xchg
into
cli
jle
int3
push
push
push
pshufw
push
movsl
add
mov
jmp
lods
or
jge
lcall
ja
mov
lcall
add
shlb
lret
arpl
xchg
test
inc
xchg
cs
or
pop
xchg
mov
incb
push
add
add
gs
shlb
adc
cmpsl
mov
or
push
call
das
mov
in
loope
xor
lahf
repz
mov
push
popf
push
jmp
dec
and
repz
sub
or
xchg
sbb
aaa
xorb
cmp
lea
push
sbb
imul
bound
jge
popf
jp
xchg
das
sub
xchg
xor
out
movsb
inc
xchg
and
cs
dec
test
add
or
mov
push
mov
xlat
arpl
cmp
xlat
cmp
pop
mov
movsl
or
cld
test
and
test
daa
leave
icebp
stos
mov
adc
enterw
and
int
mov
loopne
sbb
mov
fdivp
push
flds
popa
mov
jns
fldcw
add
inc
sbb
xchg
adc
xlat
fstpl
pop
lret
roll
dec
xor
imul
stos
sahf
mov
jnp
xchg
out
gs
and
cmp
movsl
fwait
mov
std
fwait
pop
test
das
adc
and
lea
scas
and
or
mov
or
sti
imul
xor
in
mov
mov
sbb
inc
mov
jmp
pop
xchg
inc
pop
mov
cmpsb
xchg
push
dec
ds
adc
pop
fdivl
mov
out
pop
cmp
filds
cld
ljmp
sub
mov
jb
jmp
lds
lcall
repnz
daa
mov
push
sbb
or
sub
aad
jnp
sbb
arpl
xlat
lret
pop
pop
rolb
dec
fwait
stc
daa
add
fcompl
mov
cmp
ficoml
jecxz
push
cmp
push
mov
xchg
jp
cmp
ljmp
sub
fbld
push
push
jp
addr16
dec
insb
lock
movsl
ret
cld
xchg
sbb
mov
or
add
test
pop
lahf
es
and
cmp
das
xchg
stos
dec
sub
add
outsl
insl
mov
frstor
popa
pushf
add
cmp
and
mov
adc
pop
jmp
sbb
xchg
mov
addr16
jnp
test
mov
sub
aas
xchg
adc
sbb
subl
int3
dec
fistl
adc
jne
push
movsbl
icebp
fdiv
loop
fsin
imul
cmp
lea
sbb
call
sbb
inc
js
enter
js
jne
cmp
sub
clc
out
pop
mov
jo
add
jo
decb
xchg
xchg
das
add
jno
mov
xchg
xor
inc
ret
sub
je
jle
sub
arpl
idivl
push
stos
xchg
jne
flds
mov
test
jecxz
xor
mov
xor
les
aas
popf
inc
mov
sahf
mov
jns
or
fstl
xchg
push
das
out
call
aaa
jne
int
mov
dec
cmp
mov
jae
xor
rcl
fisubrs
cmp
arpl
cmpsb
fsubs
jp
jp
push
sqrtps
xchg
js
cltd
fstpt
sbb
add
popf
dec
testb
sub
leave
insl
push
mov
and
and
dec
gs
inc
out
jge
push
add
jmp
sti
pushf
jbe
sbbb
sub
push
jecxz,pn
xchg
int3
xchg
or
pop
jl
dec
dec
scas
fadds
testb
setne
jb
sub
cltd
xchg
in
push
ds
repz
jle
pop
loopne
mov
cmp
mov
jne
stc
push
jg
rorl
push
insb
scas
adc
sti
int3
jno
test
mov
je
lods
mov
in
popf
adc
rcll
mov
flds
pop
xchg
cld
push
clc
jl
lret
adc
divl
shl
mov
fs
push
mov
jbe
add
xor
stos
mov
into
xor
fiadds
iret
imul
or
pop
jb
test
adc
pop
dec
push
xlat
cmp
ficomps
jge
jns
cmp
pop
inc
mov
pop
loop
outsb
fs
xchg
scas
push
mov
in
lret
xchg
mov
not
shrl
int3
sub
and
ds
or
sub
pop
pushf
push
push
ret
dec
lcall
lret
fdivrs
fnsave
cld
mov
mov
jg
sbb
sub
sub
neg
es
movsb
inc
lods
jmp
scas
mov
leave
mov
xchg
and
inc
pop
xor
ja
cmc
mov
jmp
xchg
ret
xor
mov
imul
mov
insb
sbb
test
loopne
add
dec
out
jns
js
adc
mov
dec
sbb
sub
aam
inc
and
jbe
lods
sahf
imul
enter
stos
sahf
inc
mov
jno
cmc
stos
mov
jne
push
push
mov
int
xor
xor
mov
ds
mov
sbb
ja
flds
imul
fcoml
dec
divb
loopne
jecxz
loopne
add
mov
mov
data16
push
pop
sbb
gs
dec
test
in
dec
jp
xorl
jl
dec
in
push
mov
enter
mov
pusha
icebp
sub
push
dec
mov
je
ds
sub
popa
repnz
sub
outsl
mov
cmp
in
cs
std
icebp
jl
cmp
addr16
test
repz
mov
xchg
mov
sahf
out
scas
and
push
jmp
push
cld
loopne
outsl
out
imul
data16
cmpsb
lret
mov
or
addb
aaa
insb
lret
daa
arpl
gs
cli
insb
enter
sub
and
mov
and
cmp
inc
cmp
int3
pop
clc
mov
or
mov
jb
lret
insl
movsl
push
out
and
jle
aad
cld
das
insb
xchg
xlat
test
loop
mov
hlt
sbb
xlat
xor
loope
xor
or
inc
int3
gs
xchg
mov
fidivl
pushl
test
cmp
dec
in
jle
loope
hlt
cmpsl
pop
add
xchg
xchg
call
std
cli
jp
loopne
inc
xchg
insl
mov
cwtl
cld
inc
sub
xchg
pusha
jle
jge
mov
xchg
jnp
rcrb
fstpt
push
jbe
xchg
mov
jp
out
or
insb
xchg
out
mov
in
test
jp
pop
int3
stc
rorl
xchg
pop
or
lret
psubsw
sbb
movsb
push
jne
aas
lods
sahf
jno
xor
cmp
mov
lcall
xchg
and
and
mov
cmp
dec
pop
cmp
xchg
jecxz
mov
sahf
daa
outsl
inc
mov
lock
mov
sbb
ret
aas
mov
andb
das
popa
adc
cmp
js
shrb
sbb
mov
fsubrl
mov
mov
pusha
pop
add
call
sub
adc
andl
bound
adc
cs
push
and
les
push
dec
popa
or
xchg
jae
pop
outsb
inc
in
icebp
sbb
inc
jmp
xchg
jecxz
add
repnz
rcrb
pusha
push
sbb
shll
or
and
or
push
mov
repz
cwtl
fwait
inc
daa
in
mov
lcall
jge
fs
push
roll
lret
mov
mov
fs
clc
jge
pop
cmp
push
mov
test
add
mov
das
sub
cmp
cmp
cmp
sbbl
insl
jle
mov
int3
jge
sbb
int
sub
and
mov
les
inc
push
lock
and
sti
icebp
sub
addr16
sbb
lods
cld
sub
popa
push
ret
jg
push
mov
loopne
xlat
cs
xor
test
int3
jnp
stos
push
push
inc
enter
insl
fistpl
aas
sbb
xor
pop
xchg
hlt
mov
icebp
addr16
mul
cwtl
fdivrs
jb
and
inc
pushf
mov
std
inc
sbb
cmpsb
addl
movsl
das
into
lea
shrb
insl
lahf
inc
push
icebp
bswap
nop
sub
std
ljmp
test
mov
scas
lret
movsl
add
xchg
movsb
in
in
cs
in
inc
mov
mov
push
adc
out
mulb
enter
out
lock
mov
pop
adc
and
loopne
mov
xor
mov
mov
test
orl
testl
fucomip
mov
jo
repnz
cs
adc
push
mov
enter
xchg
cmp
xchg
adc
adc
jo
out
mov
shlw
push
push
push
dec
test
rcl
dec
in
cltd
mov
xchg
pop
in
jp
insl
jne
pop
xchg
and
aaa
mov
inc
cmpsb
or
dec
divb
lahf
cltd
daa
fiaddl
jne
scas
loop
push
dec
jle
pop
inc
out
push
cs
cmp
xchg
cmp
sub
lock
adc
fiadds
inc
jno
sub
xchg
rorb
test
and
out
xorb
mov
test
xlat
test
xor
repz
pop
cmp
adc
aad
or
mov
add
mov
and
popa
mov
push
out
lods
ss
je
call
stos
xor
jae,pt
inc
call
sub
fadds
pop
daa
out
inc
lock
cmp
sti
fisubrs
ss
dec
mov
jne
dec
in
mov
test
lret
xchg
jbe
pop
fisttpl
das
jae
jl
aam
sub
pop
lcall
imul
pop
sbb
inc
and
cltd
or
xchg
xor
and
cmpb
and
les
push
xor
jmp
daa
add
jl
outsl
xor
jmp
pop
sahf
ficoml
cli
cmp
andb
ja
cmpsl
and
xchg
mov
xchg
fnstcw
sahf
pop
leave
mov
fbstp
popf
es
fdivs
das
and
cmp
icebp
repnz
leave
push
test
ror
sbbb
fwait
movsb
roll
pop
pushf
insl
sti
pop
pop
cmp
xlat
aam
xchg
xor
add
or
out
into
xchg
ret
stos
or
into
jb
mov
mov
lds
into
lret
dec
sti
cmp
out
out
call
dec
mov
xorl
hlt
adc
fiaddl
pop
jae
cmpsb
mov
aas
fisubrs
sbb
ret
enter
cmp
inc
mov
xchg
push
inc
cld
mov
mov
push
dec
addr16
in
push
ja
in
and
jmp
xor
xchg
cmp
cmp
imul
sbb
repnz
push
in
out
sbb
mov
inc
dec
cmp
inc
push
xchg
mov
push
push
inc
leave
push
xor
jne
push
ret
sbb
adc
mov
shl
mov
data16
hlt
xor
dec
jle
mov
repnz
out
aad
scas
mov
adc
pop
ja
pushf
incb
imul
aas
sbb
inc
cmp
cmp
call
std
addr16
mov
xchg
ret
das
ljmp
sbb
aas
pushf
cmp
xor
sub
movsl
jb
js
inc
xorl
sbb
push
sbb
in
leave
or
inc
push
dec
test
imul
mov
jnp
xor
sysenter
loop
xchg
scas
imul
shlb
mov
mov
mov
rcr
dec
xchg
test
inc
rcrb
movsb
sbb
and
fcmovne
test
xchg
lret
mov
cmp
arpl
jl
nop
cmp
push
jb
add
or
cld
lods
fiaddl
pop
mov
push
sbb
das
popf
loop
jp
cmp
xor
mov
push
mov
mov
jb
call
sub
icebp
inc
jo
inc
sub
sbb
std
lret
mov
cmp
mov
push
fidivrs
arpl
outsl
out
xchg
cmc
insb
add
outsl
jae
scas
sti
xor
adc
fisubrl
icebp
or
jae
jge
stos
xchg
imulb
fcoml
loop
cltd
sbb
ret
xchg
call
out
push
sbb
ds
adc
pop
into
cmp
or
or
push
mov
push
gs
cmpl
in
jge
dec
mov
push
sub
pop
and
fstpt
pop
fdivrl
mov
dec
mov
jle
cmc
je
pop
ficompl
dec
leave
xchg
jnp
sarl
mov
and
popf
das
xchg
negl
pop
movsl
xor
dec
pop
test
jno
and
dec
shrl
mov
and
inc
mov
push
outsl
popf
std
nop
add
jnp
roll
push
push
shl
push
aam
or
divl
leave
gs
or
lods
cmpsl
rep
xchg
push
or
mov
pop
lahf
jmp
int
fsubrp
bound
inc
jmp
add
mov
loopne
or
jne
mov
and
sub
popf
jnp
jmp
enter
mov
push
call
in
rep
xchg
cmp
mov
mov
xchg
mov
mov
adc
sti
pop
jns
dec
push
jecxz
fs
daa
pop
pop
ret
negb
nop
push
push
nop
insl
ss
sti
mov
sbb
add
dec
jnp
cmp
lahf
xor
repz
mov
sub
add
vxorps
push
cld
cmp
add
out
in
test
adc
or
testl
add
or
loope
mov
jecxz
xor
sbb
cmp
add
shll
mov
in
repz
mov
fs
mov
fiadds
sub
jae
dec
ret
daa
iret
xor
sub
mov
shrb
movsb
movsl
mov
or
dec
test
adc
adc
fsubrs
cs
dec
addr16
repz
mov
mov
cmpsl
outsb
shrb
dec
rcrb
mov
xchg
stos
sub
rcll
or
rcr
mov
sbbl
mov
push
add
mov
pop
mov
or
lahf
mov
es
push
sbb
lret
push
xchg
pop
pop
fildl
nop
sbb
jp
dec
sbb
in
sbb
pop
std
mov
call
push
cli
mov
push
jbe
xchg
outsb
dec
mov
mov
jmp
push
xor
negb
lea
mov
push
daa
xchg
xchg
mov
sbb
pushl
mov
pop
adc
into
mov
lret
lods
cld
sbb
and
sbb
sub
fwait
loop
add
repz
outsl
and
outsb
or
xchg
dec
push
aaa
arpl
shl
sti
je
jb
mov
jno
js
cltd
jmp
xchg
xchg
fst
popa
mov
pushf
lahf
adc
jae
mov
mov
pusha
jbe
lret
arpl
rolb
push
push
out
xchg
add
push
xorl
mov
aam
shlb
xor
orl
cmp
rcrl
mov
pop
mov
insb
repz
jl
loopne
cmp
lea
daa
in
xor
stc
adc
popf
xchg
cmp
and
pop
out
pop
push
fidivrl
fnstcw
loopne
push
ss
stc
mov
jb
cltd
xchg
or
fidivl
movsl
stc
xchg
test
es
dec
ss
clc
pop
or
jecxz
pop
mov
or
fst
inc
adc
mov
push
in
adc
push
xchg
lods
mov
clc
xchg
sub
pop
pop
mov
frstor
loopne
jp
cmp
pop
cmp
or
outsl
add
fcmovnbe
js
add
fisttpll
jg
mov
mov
test
mov
shl
jns
mov
rorl
lds
out
or
or
sbb
cmp
outsl
lea
test
fmul
sub
scas
sub
stos
stos
fwait
jg
xchg
pop
jbe
mov
jo
in
cmp
aad
outsb
stos
sub
sbb
ja
xchg
shl
jbe
mov
or
jl
ds
test
mov
stc
xor
clc
rcrb
cli
xchg
jno
cmp
nop
push
or
add
inc
loope
push
push
lock
push
popa
insb
movl
add
add
fiaddl
loope
loop
inc
lock
lret
xor
icebp
cld
pop
lahf
shl
pop
or
sti
sub
mov
inc
mov
js
jne
xchg
std
inc
mov
popa
jge
or
imul
xchg
out
pusha
sbb
or
clc
and
scas
stc
scas
mov
cld
repz
ret
push
popf
add
pushf
repnz
fs
in
sti
fimull
fstp
notb
jge
vcmpss
scas
imul
xchg
and
mov
jge
movl
inc
cmpsl
jmp
lret
xchg
cltd
push
lcall
xchg
or
xor
adc
sbbb
adc
cmp
in
or
jl
and
mov
mov
mov
outsl
mov
fs
int
lret
jecxz
repz
in
aaa
and
jnp
ljmp
jns
stos
jg
gs
stc
sbb
push
cwtl
xchg
notl
jns
add
in
adc
cmc
jno
fildl
push
scas
xchg
fmull
xchg
xchg
mov
push
call
pop
and
xchg
dec
inc
fnstsw
sub
sbb
rorl
add
cmc
loope
test
push
push
sbbb
sbb
push
filds
lret
jbe
sub
xchg
adc
mov
mov
movsl
mov
stos
scas
and
or
pop
cmp
push
mov
ja
mov
jge
cvttps2pi
and
mov
mov
mov
jbe
leave
inc
sbb
xlat
mov
mov
int3
popa
cmp
stos
dec
xor
cwtl
ljmp
dec
pop
pop
mov
or
or
pop
mov
xor
aam
pop
sub
jo
sahf
xchg
fldt
mov
sub
les
or
stc
aam
mov
push
ja
fcompp
inc
inc
add
sbb
pop
mov
fisttps
mov
repnz
cwtl
arpl
in
popf
dec
into
xchg
lock
rclb
mov
mov
insl
mov
cmpsl
mov
and
faddl
xchg
lcall
or
jmp
lret
imul
adc
sbb
je
fstpt
wrmsr
sbb
sub
mov
mov
scas
fstps
movsb
adc
in
loop
iret
hlt
xlat
mov
sbbl
push
xchg
jns
lds
int
sub
push
lock
xchg
stos
fs
push
jmp
and
fcmove
sub
inc
mov
fisttpl
pop
push
cmc
scas
adc
mov
lds
jne
std
cli
and
es
and
mov
mov
ja
dec
push
push
fidivrs
inc
jnp
xchg
dec
push
and
addr16
fsubrs
pop
jg
repz
adc
iret
out
xlat
and
lret
push
dec
pusha
movsb
lret
add
insb
loopne
mov
adc
outsl
mov
inc
mov
test
cmp
mov
jno
sti
xor
dec
clc
push
inc
les
pop
pop
pop
adc
imul
pusha
int3
dec
or
pop
sar
add
insl
cmp
sub
pop
rcll
bound
out
push
sub
shr
shlb
pop
daa
pop
daa
and
imul
mov
outsb
cs
in
push
fwait
sahf
cwtl
popf
add
adc
lea
inc
fdivr
roll
mov
jl
in
hlt
xor
daa
cld
lahf
fs
jmp
pop
xchg
das
pop
mov
and
mov
xor
xchg
cmp
dec
les
inc
and
cmc
or
xchg
jle
add
inc
ss
sub
or
pusha
frstor
insl
js
lcall
dec
dec
adc
and
in
xchg
ljmp
and
ljmp
sub
lret
pop
das
iret
orb
pop
int3
and
rolb
jmp
xchg
sbb
inc
rolb
dec
ds
sar
adc
dec
sbb
shr
xchg
lahf
xor
add
mov
addl
dec
add
ds
sti
jl
test
jbe
push
xchg
jbe
testb
mov
or
and
std
sub
int
fadds
inc
lds
scas
pusha
loopne,pn
pop
lock
dec
xor
sub
in
scas
lods
jle
inc
or
dec
cmpsl
fstps
cltd
pushf
xor
lahf
xchg
mov
cli
loopne
stos
ret
loope
leave
movsl
push
decb
repnz
xchg
push
aas
insl
mov
fldt
outsb
shlb
push
dec
fs
movsb
leave
cmp
loopne
or
pop
xor
daa
sbb
fstps
mov
mov
cmp
jmp
push
sbb
pusha
in
inc
repz
je
fmuls
fisttps
or
rolb
fndisi(8087
push
or
ds
mov
dec
pcmpeqb
xchg
cs
jne
inc
cmp
pop
out
and
sti
rcrb
das
jbe
pop
and
push
mov
outsl
push
pop
dec
sbb
mov
adc
es
mov
sub
xchg
idivb
sti
sub
lcall
sbb
mov
push
fsts
xor
into
push
loop
fs
fmull
adc
outsl
mov
mov
push
outsb
jecxz
leave
jle
loop
xchg
mov
shrl
cmp
lea
fistpll
lret
cmc
inc
pop
js
bound
outsl
or
mov
sarl
lcall
add
lret
add
loope
insl
roll
daa
iret
mov
mov
or
push
push
out
mov
mov
das
lcall
mov
cld
xlat
repnz
int3
stc
dec
pusha
xchg
call
mov
adc
stos
stos
out
in
clc
stc
mov
popf
push
or
dec
sub
into
hlt
mov
and
dec
xchg
pop
loope
cmc
dec
push
adc
lea
rcll
pop
adc
aad
clc
push
inc
iret
push
or
fwait
cmp
dec
jne
or
out
mov
stc
ljmp
jp
push
test
mov
rcr
jnp
lret
and
xor
movsb
xor
xchg
dec
cmpl
outsl
fimull
loop
adc
fwait
jmp
sti
dec
sarb
sub
imul
and
aam
inc
outsb
jno
or
xor
push
or
test
jp
cmpsb
xor
mov
cmp
cmovne
pushw
pop
inc
lock
lods
xchg
in
inc
xchg
aam
push
dec
adcb
pop
aam
mov
dec
insb
xchg
push
fs
adc
inc
data16
sar
fmull
and
jl
lds
inc
sbb
shlb
aas
mov
and
or
mov
cmp
sahf
xchg
je
adc
lret
pop
leave
push
xor
dec
inc
inc
jnp
outsl
add
pop
sub
iret
stc
push
xor
jnp
fcomi
push
pop
push
xchg
xor
je
popa
imul
xchg
ficomps
sub
mov
ret
arpl
out
jmp
sbbb
ss
xor
jno
cmp
xchg
imul
sti
sub
mov
mov
xor
sti
loop
sbb
cs
stc
imul
add
mov
jnp
enter
inc
mov
or
jg
dec
dec
cld
fdiv
or
xchg
mov
ds
test
insb
jmp
pop
lahf
inc
mov
iret
xor
cmc
test
jbe
out
jnp
sbb
into
lret
repnz
fldt
popl
adc
push
mov
cmp
fwait
popa
fsubl
dec
rcrl
cmpsl
cmp
adc
lret
adc
cmp
pop
push
lahf
call
adc
lret
xchg
out
and
pop
lret
push
adc
pop
dec
jp
js
cmp
daa
jno
je
lret
mov
pop
wrmsr
inc
sbb
bound
add
fwait
lret
sbb
add
sub
in
or
aas
movsb
fsub
loop
je
nop
mov
dec
stos
xor
jecxz
out
insb
mov
cmp
imul
int
outsl
fsubrl
out
jg
or
push
jne
mov
cmc
inc
lahf
fmull
lods
ss
or
xorb
iret
mov
pop
fnstsw
jne
lods
cli
test
aam
movsb
js
inc
cmp
lock
or
pop
pusha
cmp
xor
inc
in
outsl
inc
lea
mov
outsl
mov
pop
mov
push
fnstcw
pop
and
pop
rorl
pop
subb
into
in
pop
adc
push
cli
add
or
jo
pop
add
mov
push
aaa
movsl
push
int3
jge
loopne
sbb
out
mov
push
mov
es
adcl
mov
test
inc
into
dec
iret
ljmp
mov
imul
cli
cmpsb
jno
outsb
or
or
sbb
mov
push
jmp
cld
jbe
lods
imul
xchg
lods
iret
sbb
ret
inc
stos
popa
inc
push
jl
jbe
lret
rorl
pusha
inc
jmp
in
test
mov
pop
fildl
into
or
cmp
inc
in
pcmpeqb
aas
je
add
repz
lret
pop
int
push
sbb
dec
mov
mov
inc
movsl
jno
mov
sahf
add
sub
sub
add
dec
mov
cwtl
xlat
sub
lahf
adc
fiadds
pop
cli
mov
pop
or
push
cmpsl
adc
test
xchg
fldl
xchg
pop
gs
jle
cmc
push
push
js
ljmp
mov
mov
movsb
out
dec
cmp
mov
push
mov
mov
cmpl
and
dec
push
lods
addr16
cmp
in
pop
xor
dec
dec
cli
cmp
data16
icebp
es
cmp
movsl
push
pop
or
mov
mov
lret
test
mov
sbb
jmp
repz
xchg
mov
cli
ja
lds
push
lahf
insl
push
mov
inc
adc
push
lret
add
movsl
stc
adc
and
sahf
add
mov
push
addr16
andl
push
jbe
dec
scas
sub
dec
lret
hlt
pop
clc
testb
cmc
sti
adc
ret
mov
ds
push
push
mov
jge
lret
xor
lret
jl
jl
aaa
enter
and
push
or
push
push
rcl
mov
pop
ds
adc
movsl
push
xor
imull
lods
cmp
xor
es
xor
notl
or
shll
pop
mov
rolb
mov
pusha
jp
sbb
jl
push
sahf
lcall
cmc
adcb
dec
sub
jmp
push
and
jne
shr
fcoml
lods
and
insb
push
mov
pushf
ljmp
fldl
ljmp
xchg
lahf
cmc
jmp
aaa
cltd
adc
or
fildll
and
test
movsb
push
js
idivl
and
add
xor
sub
pop
dec
add
test
fwait
push
popf
repnz
test
mov
jge
cmp
sub
xor
pop
loopne
scas
inc
cld
add
jle
cwtl
daa
sahf
cmp
push
ret
sarl
arpl
push
push
mov
sub
mov
or
sti
xor
xchg
sub
test
lods
xor
out
aam
adc
mov
mov
cld
ss
test
mov
rcr
les
cmpsb
mov
fwait
enter
scas
sub
aad
dec
sub
gs
leave
dec
mov
jg
cli
mov
jmp
out
and
cmpsb
mov
js
jno
lcall
ret
sahf
cmp
jg
pop
xchg
mov
fstp
adc
mov
mov
imul
xchg
xchg
fsubrl
rcrb
push
xchg
push
mov
push
shlb
adc
arpl
mov
xor
mov
ss
inc
jecxz
cmpsb
mov
xchg
call
popa
push
rcrb
sub
stos
xchg
das
mov
popa
fcomi
sti
sbb
jmp
jns
mov
fxch
popf
adc
cmpsb
dec
dec
xchg
test
out
cmp
div
mov
xchg
fldt
push
ja
mov
pop
mov
aad
sub
jbe
mov
nop
cmp
pop
and
sub
dec
and
mov
sbb
je
rclb
sub
pop
nop
aas
sbb
leave
ljmp
jnp
je
lahf
inc
movsl
sahf
pop
xor
or
and
inc
ljmp
ret
cmc
clc
aam
jl
je
test
jno
sbb
insl
mov
xchg
scas
iret
cmp
mull
out
adc
dec
push
xchg
lds
mov
jecxz
insb
loop
into
in
or
dec
jne
lock
xchg
push
int3
imul
call
mov
mov
sti
push
mov
inc
out
push
cmp
xchg
inc
cmpsb
andl
data16
loopne
inc
test
fistl
movsb
mov
lds
inc
lea
fldln2
rcl
addb
pop
xor
inc
lock
cmp
mov
stos
mov
stos
fwait
out
push
xor
daa
or
sbb
mov
movsl
es
repnz
push
les
pushf
mov
xchg
mov
scas
cmpsb
jmp
popa
cmpsb
inc
sti
popl
inc
xorb
fwait
out
mov
lret
adcl
into
add
adc
lcall
mov
call
pop
sub
sub
test
sub
cmp
out
mov
shl
lret
imul
sub
add
inc
lods
insb
faddl
sar
or
dec
sub
lcall
pop
outsl
adc
fildl
sbb
pop
mov
pushf
aam
lds
pusha
loopne
insl
xor
xlat
daa
pop
imul
fstl
test
jg
add
rcrb
pop
jge
sarb
and
clc
cmpsb
movsl
lahf
dec
dec
shlb
mov
xlat
jb
mov
in
pop
sbb
aad
rcrb
or
fucomip
inc
adc
adc
pop
ret
movsl
cmp
add
ret
dec
stos
pop
cmp
mov
mov
cmc
shlb
sub
push
fcomi
bound
push
ja
out
repz
test
sbb
pop
imul
incb
sbb
pop
push
pop
fwait
divl
test
mov
dec
out
lret
lock
adc
aad
mov
std
jbe
pop
sbb
rclb
cmpsb
sub
rolb
push
push
pop
xor
movsl
dec
je
jge
fadds
pop
lret
mull
xor
sub
sar
mov
fmuls
imul
outsb
xor
xchg
pop
dec
xor
lods
xchg
neg
push
push
lods
jns
lds
inc
cmp
or
mov
in
inc
mov
cld
sub
stc
push
repz
cmp
fiadds
mov
cmp
test
and
movsb
jns
bound
jl
jecxz
xor
es
jb
and
ljmp
sub
xchg
stc
xchg
xchg
mov
xor
and
dec
pop
pop
loope
mov
jle
cmpsb
mov
and
test
sbb
ret
pushf
addr16
int
pushf
sahf
test
aad
stos
iret
out
xor
pop
or
out
filds
je
loope
test
shrl
sub
jmp
cwtl
imul
test
sub
mov
sbb
mov
stos
pop
pop
push
daa
xchg
jnp
push
and
stos
lcall
mov
lods
out
test
pop
sbb
jo
or
ja
pop
pop
or
dec
push
aad
sarb
subb
xor
jns
negb
or
mov
rorb
dec
in
lret
pop
int
pop
xlat
push
cmpsl
cmp
or
and
adc
mov
cli
lahf
push
movsl
inc
add
xor
mull
mov
icebp
jl
psubw
mov
add
push
mov
mov
movsb
sarb
push
mov
jae
mov
or
push
adc
adc
test
lcall
and
les
xor
enter
jge
fisubrs
andl
cli
jmp
jmp
js
jno
adc
insl
xor
divl
xor
sub
xchg
outsl
in
lods
test
lret
xlat
mov
mov
pusha
xlat
mov
dec
in
xor
cltd
test
pop
mov
repz
iret
stos
testb
stos
pusha
hlt
jnp
cmp
sub
outsb
push
fists
fistps
mov
push
xor
xor
push
xor
insb
test
fildl
mov
test
scas
mov
and
stos
adc
aaa
sub
mov
mov
xor
inc
pop
in
leave
fldt
and
mov
add
icebp
arpl
inc
mov
inc
lods
jo
sub
push
xor
push
jp
add
iret
and
mov
cmpsb
xchg
in
push
lock
push
not
mov
fs
aas
iret
movsl
xorb
mov
aad
insb
mov
pop
ss
sahf
sub
lods
jle
mov
jbe
mov
adc
or
xchg
mov
ret
out
xchg
xchg
jne
in
or
mov
jle
int
idivb
fsubl
pop
pop
int
push
cmp
jbe
repz
pusha
and
pop
adcl
dec
sub
cmp
push
aam
aaa
loop
push
fs
mov
push
popf
xchg
shlb
or
int3
sbb
leave
lahf
in
push
aam
bound
jae
pop
mov
lods
push
addl
in
adc
sub
dec
out
nop
mov
test
mov
xchg
mov
pop
xchg
dec
addr16
ss
adc
jge
xor
cld
push
aad
push
data16
cmc
inc
adc
mov
clc
icebp
lret
out
loopne
lcall
mov
cld
dec
int3
stc
push
mov
jle
mov
inc
mov
jne
cmp
stc
pop
mov
xor
iret
mov
push
outsl
and
pop
push
movb
xor
push
push
scas
cmp
test
lods
inc
cmp
xor
mov
cwtl
divb
inc
inc
lods
push
inc
ret
inc
int3
daa
stos
movsb
pop
push
iret
lods
dec
daa
adc
push
lea
outsb
cld
mov
int3
fmull
add
lds
adc
push
jbe
shll
scas
fwait
push
cmpsl
movsl
push
addr16
movsb
push
jmp
repnz
inc
and
jmp
inc
mov
mov
lds
dec
pop
mov
flds
mov
mov
and
cmp
lds
mov
xchg
test
mov
jne
fwait
in
lods
inc
inc
dec
jl
outsl
lods
std
dec
cmp
icebp
mov
and
imul
xchg
sbb
shll
lods
lods
push
cmp
pop
sub
shll
inc
add
and
pop
mov
jl
repz
or
mov
push
pop
push
xor
jl
jbe
mov
shll
sub
push
lods
into
je
test
lods
lcall
xor
aad
aad
and
jg
pop
xchg
insl
dec
xchg
mov
imul
incl
pusha
dec
or
mov
cmpsl
mov
mov
call
mov
lcall
leave
jp
or
bound
pop
bound
js
mov
das
push
rcrb
orl
out
movsb
cwtl
cmp
xor
jbe
nop
mov
inc
mov
aad
mov
push
arpl
pop
add
mov
sbb
pushf
stc
mov
dec
jnp
ret
clc
lret
fscale
in
xchg
movsb
push
adc
jge
out
movsb
sbb
mov
test
rcrl
lods
and
cmp
in
movsb
inc
cmp
mov
arpl
daa
fucomi
inc
sbb
orl
loope
pop
cmpb
shrb
arpl
insb
sti
test
fnstenv
jle
mov
nop
inc
movsl
and
int3
cmp
mov
or
xchg
dec
das
mov
and
sbb
jge
dec
vcvtps2dq
and
jne
jg
inc
sti
fst
rcll
mov
xchg
inc
push
adc
dec
jle
out
fs
int
mov
adc
jmp
or
or
outsb
out
jecxz
sahf
call
pushf
mov
and
aaa
into
sbb
dec
idivl
test
es
inc
or
and
sbb
xchg
lret
enter
xorl
sbb
arpl
gs
dec
je
mov
lods
int
adc
lea
cmp
add
adc
adc
mov
sbb
idivb
fdiv
es
cmp
std
push
movsl
push
pushf
mov
stc
or
xchg
mov
xchg
cld
xchg
pop
mov
ljmp
xchg
test
aaa
fcmovne
jge
and
cmpsb
push
or
or
out
call
lock
cmpl
mov
popf
pop
in
mov
rorb
sbb
push
jo
test
fwait
sete
add
insl
add
movsl
fdivrp
adcl
inc
xchg
daa
mov
shlb
adc
out
or
sahf
ficoml
or
cmp
inc
loop
mov
fdivrs
call
lods
insb
dec
dec
dec
adcl
pushf
xorl
mov
lea
xchg
jp
dec
push
push
push
repnz
aad
mov
popa
lret
pop
mov
shrl
jge
or
fiaddl
add
mov
out
ljmp
fwait
inc
push
xchg
ljmp
mov
adc
add
lret
cs
xor
or
xor
sub
push
xor
js
push
test
push
js
jge
movsl
dec
das
pop
add
mov
cwtl
and
fbld
inc
fs
sarl
lods
fstpt
adc
jo
xor
cltd
mov
push
mov
xor
out
cmp
lret
xchg
pop
jb
in
adc
scas
fs
sbb
fiaddl
mov
mov
fxch
xchg
movsl
ss
cmp
add
adc
lods
enter
pushf
movsl
cmpsb
push
stc
jecxz
fisubs
jno
jno
pop
add
dec
lahf
aad
sub
lods
data16
mov
sub
mov
sub
or
lea
es
les
inc
xchg
or
sbbl
lock
roll
inc
movl
and
xchg
and
inc
xchg
cs
in
dec
pop
cmpsb
pop
outsb
mov
cmp
mov
in
sbb
fidivl
addb
mov
scas
pop
mov
pop
aad
std
push
insl
repnz
inc
fisttpll
sbb
mov
out
push
mov
or
fcmovbe
mov
jmp
fists
sub
ljmp
pop
push
xchg
cmpl
mov
cmpsb
adc
sbb
jmp
dec
cltd
mov
jnp
scas
sar
jmp
sub
push
stos
stos
push
shlb
aam
and
cmc
mov
xchg
lock
or
cld
xor
pop
lcall
mov
aad
mov
inc
movsl
or
push
ljmp
imul
dec
repnz
sahf
push
pop
sub
dec
in
mov
test
add
fadd
outsl
loop
push
stos
fdivs
mov
push
cmp
imul
jae
push
jo
insl
rclb
js
pushf
inc
aas
or
cwtl
sub
push
mov
sub
cmp
popf
or
add
fcoms
jne
jnp
mov
mov
icebp
mov
mov
test
outsb
enter
mov
or
add
paddusw
leave
lock
push
sub
push
inc
pop
mov
inc
sti
lods
cli
subl
lods
shll
add
or
mov
inc
mov
rol
shll
push
mov
xchg
fstl
adc
sub
push
pop
into
or
testl
addr16
stos
dec
out
cmp
hlt
roll
sbb
pmaxsw
adc
cmp
jg
ret
into
push
aam
and
inc
lds
out
notb
out
std
fsubl
iret
pop
ret
jp
mov
mov
push
mov
outsl
add
jp
mov
pop
jae
fimuls
dec
or
adc
pop
push
dec
adc
cld
outsb
mov
push
dec
sub
mov
push
sub
mov
fldl
pusha
fldenv
and
jb
jl
test
call
mov
fidivl
cmp
movsl
mov
cld
inc
mov
cld
idivl
les
sub
or
nop
jp
jnp
jle
jge
jg
popf
movsb
roll
aas
cmp
pop
cs
xchg
loop
pop
mov
jo
bound
ds
mov
inc
mov
testb
lahf
add
lock
rcrb
sub
popf
int
adc
xchg
sub
inc
test
sbb
push
sub
in
mov
cld
sbb
cmp
fiaddl
push
sahf
ds
mov
jne
dec
cmp
lods
movsl
dec
add
lock
mov
sub
adc
aad
outsb
ss
sub
arpl
dec
fdivrs
add
es
lds
mov
jbe
inc
test
adc
or
push
mov
pop
cmp
mov
pop
adc
mov
lock
in
lret
pop
jb
xchg
stc
jecxz
fld1
gs
jb
scas
or
mull
jp
std
jbe
les
lods
js
movsl
xor
lahf
ret
int
sub
pop
inc
xchg
lret
xchg
mov
hlt
stc
lahf
cmp
pop
push
xchg
cmp
in
lea
test
cmpsl
sub
inc
nop
loope
insl
push
xchg
jmp
fwait
scas
insl
aad
aas
fs
mov
xchg
xor
cs
xorb
inc
mov
imull
sbb
sbb
mov
roll
in
imul
das
jge
mov
mov
lahf
sbb
push
mulb
ljmp
xor
mov
push
sbb
clc
test
pop
iret
adc
inc
pop
mov
bound
adc
xchg
int3
sub
std
sub
cmp
cmp
jl
call
les
fistl
js
push
adcb
loop
sbb
cmp
aad
pop
adc
adc
mov
outsb
push
mov
push
add
imul
add
sarl
cld
dec
mov
add
jmp
dec
adc
bound
push
mov
iret
stc
adc
jns
jae
xchg
adc
or
dec
notl
enter
xchg
xor
aaa
lcall
jno
jne
test
out
hlt
test
pop
wbinvd
inc
sbb
lods
shr
sar
je
js
dec
sbb
and
mov
pushf
fimull
nop
sbb
and
out
leave
out
pop
test
mov
mov
mov
nop
inc
insb
in
jmp
out
mov
push
xchg
pop
or
pop
imul
shlb
je
cmp
lahf
add
jle
and
stos
insl
mov
int3
xor
push
clc
xchg
jg
cld
gs
cmp
push
jle
cltd
mov
fidivs
sub
mov
push
mov
jg
inc
daa
in
dec
jo
out
or
aam
sahf
pop
mov
mov
xchg
inc
fildl
loop
xchg
cmp
adc
or
loope
cmpb
fdivs
scas
out
sub
ja,pt
mov
push
mov
mov
inc
mov
or
inc
enter
push
add
rol
hlt
icebp
test
fsubs
adc
icebp
push
xchg
call
dec
shrl
or
mov
lahf
xchg
cmp
pop
lods
ja
and
ficompl
xor
lods
mov
mov
mov
stc
inc
add
jne
sub
jg
sub
jae
dec
loopne
pushf
xchg
jb
fcmovbe
ja
lahf
push
fwait
cwtl
adc
mov
xor
adc
xchg
dec
mov
mov
jge
std
sub
fwait
sti
jg
movb
xchg
imulb
insl
pop
pop
jno
cwtl
and
sbb
mov
and
dec
sbb
es
jmp
add
in
jp
repz
sbb
pop
hlt
es
dec
sbb
sbb
fwait
jmp
test
rorb
mov
bswap
mov
mov
mov
incl
push
jbe
in
lahf
jp
or
mov
pop
add
lret
stos
mov
test
mov
inc
in
mov
lea
sub
sbb
xor
cmp
pop
stos
ficompl
clc
inc
popa
cmp
rolb
outsb
or
cmp
adc
fldcw
imul
lods
sbb
loopne
test
fistps
add
and
cmpsl
lret
bound
sbbb
mov
xchg
std
arpl
sti
test
mov
aad
cmpsl
inc
mov
push
fwait
mov
mov
movsb
jae
and
adc
aam
es
sub
xor
out
mov
mov
fsubl
jne
adc
inc
cld
or
xlat
idivl
push
pop
add
stos
test
movsb
push
adc
fmuls
lea
in
mov
popa
jb
aad
sbb
fdivrs
pop
sub
shlb
mov
pusha
out
mov
mov
rcrb
insb
jecxz
leave
jbe
lcall
xor
lods
in
pop
subl
adc
jp
jae
addr16
sbb
jo
ja
cs
jmp
mov
rorb
icebp
sub
mov
dec
or
clc
and
xchg
dec
xchg
and
ja
rorb
in
popa
out
in
addr16
or
push
clc
rcl
sub
clc
push
icebp
mov
mov
jp
das
jo
mov
cltd
jle
test
jg
adc
fdiv
cmp
adc
test
push
push
pop
std
sub
mov
int3
xor
mov
or
pop
cmpsb
xchg
sbbl
rcll
cmc
sbb
cmp
pop
mov
inc
pop
lahf
add
mov
and
cmp
outsl
mov
mov
dec
mov
ret
cmpsb
and
push
cwtl
mov
xor
shlb
int
push
sub
in
pop
xchg
pop
fnstsw
aad
sbbl
jmp
and
insb
ficompl
push
shl
cmp
stos
mov
add
stos
loopne
vcvtsd2ss
xlat
mov
pusha
push
adc
popa
pop
outsl
jnp
out
or
push
inc
xor
jb
insb
movsl
mov
fcmovne
leave
mov
pop
mov
adc
xchg
pop
sub
xchg
movsl
aaa
add
push
dec
ret
pop
mov
sub
icebp
xchg
sbb
gs
loope
fcmovb
mov
ret
dec
int
adc
jbe
outsl
int3
jno
repnz
inc
or
pop
or
or
inc
pop
sti
sub
hlt
rcrl
mov
cli
movsl
insb
movsb
pop
scas
or
movsb
jl
add
pop
push
push
xchg
in
mov
xor
and
scas
inc
adc
aam
jb
les
dec
push
ljmp
mov
sbbb
cmp
push
adc
and
lret
mov
cmp
and
fwait
in
or
push
push
inc
mov
out
out
ret
out
cld
int
test
addl
mov
add
daa
mov
gs
jecxz
jecxz
gs
ja
aam
ss
and
je
jge
xchg
and
mov
xor
pop
pop
push
arpl
jecxz
test
xlat
out
shll
inc
loop
add
sbb
dec
mov
mov
push
mov
outsb
xor
sbb
add
scas
lods
xchg
pusha
and
inc
imul
cmp
aas
lock
push
fsubrs
adc
mov
pop
xchg
mov
cmp
push
push
cli
and
xlat
add
test
mov
cmpsl
fsts
and
imul
ret
popw
dec
nop
sub
add
or
xchg
add
std
scas
insl
repz
pop
adc
ds
sti
jno
test
andb
pushf
test
mov
push
int
xchg
repnz
add
pop
pop
shll
and
mov
ret
pop
mov
jns
stos
mov
frstor
mov
mov
pusha
sbb
ds
out
sub
sbb
lret
or
and
ds
js
xchg
xchg
lahf
xor
outsb
or
pop
das
in
repnz
orl
and
sub
iret
icebp
and
add
call
dec
out
dec
jae
sub
and
xor
jnp
nop
jno
imul
cmp
adcb
xor
sbb
lock
insb
iret
insb
lods
jno
mov
xchg
xchg
je
and
adc
nop
xchg
and
enter
cmp
inc
lahf
and
cld
pushf
std
mov
cmp
sti
and
test
test
lods
xor
out
insl
add
movsl
jne
pop
insb
xor
aas
dec
sbb
lea
add
xor
cmp
cs
xor
jnp
faddl
cli
aaa
push
sahf
inc
stos
rcrl
xchg
sahf
test
or
xchg
push
pop
les
je
inc
movsl
divl
inc
push
sbb
inc
insb
aam
xlat
icebp
dec
mov
out
pop
cmp
jmp
fmull
sbb
pop
stos
mov
sub
aas
mov
enter
push
cmp
sub
cmp
sbb
inc
dec
leave
pop
pop
xor
push
scas
ficompl
test
mov
add
mov
push
jecxz
shlb
adc
xor
pop
mov
cmp
stos
mov
mov
cmpsl
sbb
cmp
mov
jo
cmp
imul
mov
and
jecxz
cmp
xchg
mov
int
or
inc
jns
or
mov
push
mov
mov
add
aad
ficompl
loopne
test
pop
stc
mov
push
xorb
or
aad
and
mov
pop
jb
leave
sub
xorb
push
loop
xor
rcrl
push
loop
or
adc
and
inc
xor
add
xor
adc
ds
push
pop
xchg
fimull
fstl
imul
add
push
jp
adc
lods
pop
fs
mov
xchg
xrelease
clc
mov
pop
sbb
test
mov
xchg
test
les
sbb
mov
inc
cmp
mov
pop
mov
or
adc
outsb
add
es
xchg
ds
enter
xor
sub
inc
adc
lret
adc
mov
jp
les
sbb
sbb
sbb
inc
fistps
in
fsubr
push
dec
mov
rcrb
xchg
pushf
jl
fmuls
negb
repz
sub
insb
ss
nop
xchg
add
dec
mov
sub
mov
outsb
in
cmp
mov
dec
popa
push
mov
xchg
dec
add
mov
adc
aas
push
in
mov
inc
sbb
cltd
daa
xchg
push
fcmovnb
xor
pop
daa
loopne
push
pusha
fidivl
pop
lods
aas
dec
jecxz
popa
jno
in
inc
movsb
sbb
mov
pop
loope
and
pop
cmp
jmp
xchg
sbb
orb
sbb
inc
sbb
pop
repz
mov
pop
mov
aad
stos
leave
repnz
cltd
in
push
int
inc
push
into
movsb
dec
mov
in
stos
mov
xchg
jmp
cmove
inc
jmp
enter
cmp
xchg
enter
aad
call
aam
jmp
push
fldcw
xchg
or
dec
or
dec
imul
dec
inc
xor
ret
repz
sub
mov
movsb
pop
out
bound
cmp
sbb
and
dec
jae
out
and
fdivrs
cmp
xchg
fstpl
sub
xchg
add
push
push
outsl
or
out
out
mov
adcb
sbb
xor
ds
inc
int
jge
jmp
pop
nop
repnz
loop
outsl
mov
iret
jge
ss
ficompl
pop
sbb
add
mov
sti
es
iret
mov
cmp
pop
aaa
or
outsl
fucom
lret
push
mov
lock
loope
enter
inc
push
dec
push
mov
call
lods
inc
adc
out
cmp
mov
pushf
adc
pushf
xchg
insl
jo
sub
mov
mov
aaa
mov
jmp
push
add
fiaddl
sbb
pop
imul
jmp
fsubrl
insb
and
lea
xlat
xchg
aas
cli
push
jo
rolb
push
or
and
jns
xchg
enter
xor
sahf
inc
cmp
rcll
push
sahf
mov
xor
cltd
testb
pop
shrb
pop
adc
xchg
sbb
scas
in
dec
je
push
pop
push
jo
xchg
mov
jne
rolb
and
lcall
jle
jb
movsl
jecxz
les
xchg
push
mov
ja
fidivrs
out
push
sub
sub
sahf
sbb
ja
imul
mov
fnstsw
jo
inc
std
aad
cmc
pusha
jno
mov
es
cli
xchg
inc
addr16
mov
imul
les
dec
xor
stc
aad
in
push
aam
sahf
mov
add
pop
out
rcrb
add
xchg
and
jb
sub
push
out
insb
clc
mov
and
and
and
leave
jl
mov
xor
notb
hlt
or
mov
jae
cmp
in
lret
push
and
or
int3
mov
test
xor
iret
cmp
mov
xchg
and
ret
jne
fwait
add
add
jne
lahf
aas
in
cmp
cmp
lret
push
cmp
push
sbb
add
add
add
jmp
in
mov
pop
sbb
mov
and
pop
cmp
mov
jns
push
add
pop
stc
rcrb
add
mov
sbb
cmpsl
mov
outsl
repnz
pop
cwtl
pop
mov
out
test
das
lods
cmp
lret
das
fists
add
pusha
xchg
out
jmp
roll
pop
std
ljmp
sub
popa
mov
mov
adc
jno
shlb
cmp
cmpsb
fwait
loopne
test
std
cld
sbb
inc
pop
push
sti
adc
push
pop
loope
sub
fisubrs
inc
push
xlat
inc
jle
loop
sti
lods
movsl
or
jb
idivb
xor
pusha
mov
sbb
xchg
mov
inc
mov
pop
fxch
loopne
rcrl
add
mov
neg
cld
jbe
jg
xchg
ljmp
push
shlb
out
and
mov
jmp
addr16
daa
jg
in
adc
cmpsl
je
movsl
popf
xlat
mov
inc
xchg
sti
push
or
pop
je
gs
ret
ss
xor
and
push
pop
cli
arpl
sbbb
pop
in
push
fidivl
fs
insb
mov
cmpsb
sub
ret
cmp
shll
mov
int
cmp
inc
or
shlb
mov
movsl
test
lcall
inc
in
adc
fcoml
jo
xchg
cmp
pop
inc
xchg
andl
xchg
stos
ljmp
loopne
adc
jp
inc
pop
xor
xor
in
mov
dec
pop
dec
nop
inc
mov
xor
in
cmc
and
shlb
je
shr
cmp
adc
xor
in
inc
xor
cli
push
icebp
pop
dec
jge
lea
ljmp
push
push
stos
dec
inc
repz
jmp
or
in
add
stos
adc
sahf
mov
mov
mov
loope
mov
mov
js
ss
push
pop
jge
jg
adc
inc
cmpsb
jo
es
dec
ljmp
fwait
outsl
repz
dec
cmpsl
xor
mov
xor
mov
out
pop
xchg
dec
ret
jg
test
pop
add
add
cmp
ret
stos
cmp
outsb
or
aam
call
sbbl
ljmp
jmp
fld
mov
clc
and
cmp
jno
cld
adc
ja
test
adc
out
out
xchg
mov
fnsave
imul
std
scas
mov
in
fidivl
sub
gs
fbld
dec
in
stos
push
test
inc
repz
rorb
pop
aaa
loopne
pop
add
insb
int
in
fidivl
mov
int
cmc
pop
and
sbb
in
imul
ja
je
mov
adc
std
jge
mov
add
lahf
fs
xor
dec
jge
sbb
xor
testl
jbe
mov
xchg
xchg
dec
mov
pop
dec
sub
addb
or
ret
or
inc
clc
aas
sbb
mov
gs
mov
aad
in
pushl
pop
shrl
std
adcb
je
scas
jge
pop
out
sbb
clc
xchg
ret
sub
jnp
sub
sar
sbb
movsb
hlt
enter
xchg
fists
es
or
fmull
cmp
xchg
out
mov
push
push
jecxz
sbb
sbb
xor
jl
push
push
movsb
pop
in
cmpsl
jo
rcll
imul
push
int
ss
inc
call
sub
adc
pop
cmp
cwtl
mov
shrb
and
loope
inc
sbb
jmp
mov
xchg
sub
or
les
mov
mov
out
push
aam
add
mov
sbb
inc
inc
mov
insb
in
ljmp
sub
orl
pop
add
xlat
mov
test
ljmp
jno
jns
inc
fistps
into
dec
and
lods
dec
lret
jge
xor
fstps
mov
jnp
fsubr
adc
or
pusha
pop
clc
dec
push
cmp
pop
data16
dec
or
jmp
mov
sbb
xchg
leave
jnp
mov
scas
out
sub
mov
rcrl
enter
and
imul
inc
inc
mov
pop
test
movsl
and
aad
int3
insl
stos
cwtl
shlb
insb
xchg
pop
ds
inc
push
bound
mov
jmp
or
adc
jo
push
cmp
rcr
es
jge
ss
or
pop
sbb
push
test
xchg
imul
mov
xchg
out
shlb
out
sbb
into
mov
add
out
push
int3
je
test
sub
or
mov
jge
pop
ret
push
cld
inc
xchg
dec
cs
outsl
aad
jmp
lea
aam
mov
test
mov
loop
mov
js
xchg
scas
mov
ret
jbe
decb
mov
push
lret
sbb
aam
sbbb
add
ret
push
sub
negb
fwait
and
loopne
xor
push
mov
mov
xlat
push
insl
imul
or
pop
insb
jge
lcall
jmp
aas
mov
stos
fdivrs
repz
out
pop
inc
lret
loope
dec
sub
inc
leave
cli
fstps
icebp
mov
push
push
hlt
add
gs
cmp
sti
in
sbb
mov
testb
lds
adc
inc
fs
repnz
iret
pusha
arpl
dec
jmp
adc
jno
lods
testl
subl
fwait
mov
push
push
call
xchg
mov
addb
sbb
sub
jp
xchg
call
xchg
inc
orb
push
or
cltd
fcoms
loopne
nop
xchg
in
mov
lods
dec
icebp
fidivs
sub
jecxz
repz
jmp
inc
rol
mov
sbb
cwtl
inc
push
lret
lea
ret
pop
xor
fsubr
pop
add
jno
mov
push
loopne
loopne
mov
push
push
cmpsb
cltd
dec
bound
aad
cmp
jae
test
orl
cltd
mov
scas
ret
jno
cmp
insl
outsb
inc
xlat
outsl
and
movsb
dec
jo
aad
or
dec
jb
fdiv
push
test
fidivl
inc
push
out
xor
outsl
cmp
mov
test
push
mov
dec
adc
sbb
pop
mov
mov
jp
xor
jae
outsb
mov
or
gs
cmpsl
adc
mov
pushf
adc
push
mov
sub
fcomps
pop
mov
mov
xchg
jl
inc
imul
jnp
test
sbbb
xor
mov
jns
jbe
into
ret
adc
std
add
jb
cmpsb
outsl
adcb
mov
sub
push
int3
mov
xchg
mov
jle
push
arpl
sti
mov
and
xor
mov
jmp
xchg
sbb
cmpsb
dec
adc
and
pop
adc
in
pop
add
addr16
xorb
dec
or
xchg
add
add
frstor
lods
enter
pop
cmp
jb
jnp
stc
dec
mov
out
pop
or
stc
out
push
mov
xlat
push
adcl
popa
pop
imul
in
inc
out
sub
sbb
push
sahf
cmpl
pop
cmc
mov
xor
mov
daa
jno
inc
mov
mov
movsl
push
insl
lock
add
dec
loop
dec
rolb
shr
jbe
popf
adc
push
enter
sub
inc
xor
xchg
mov
mov
xchg
jmp
jns
rcrb
xchg
and
mov
inc
out
lds
pusha
mov
pop
nop
or
xor
inc
and
daa
fmuls
cld
mov
cmp
xor
lods
push
or
and
xor
dec
sbb
cmpsl
shrb
ror
add
inc
sub
mov
jae
fs
and
sub
movsb
mov
repz
jge
pusha
push
inc
xor
add
inc
cmp
fnstcw
repnz
jno
fimuls
sub
cwtl
xlat
cltd
loop
push
les
dec
sub
push
aad
jle
roll
divl
jo
call
dec
or
pop
shlb
and
negb
add
movsl
push
mov
mov
jecxz
mov
mov
jne
sbb
jecxz
outsb
mov
mov
sub
push
pop
adc
push
jecxz
push
xor
xchg
fsubrs
das
bnd
dec
sarb
mov
into
ret
out
jge
nop
push
scas
jl,pt
bound
sub
rorb
jmp
cmp
xor
mov
aas
daa
ret
inc
mov
sahf
inc
ja
mov
movb
and
rcll
int3
inc
nop
aad
sti
cmpb
mov
loopne
lods
push
xlat
out
push
dec
clc
imul
xor
lock
add
xchg
mov
cmp
inc
popa
push
data16
movb
mov
movsb
repnz
push
inc
push
ljmp
pop
inc
xchg
in
clc
pop
fucomi
fidivl
xlat
adc
imul
fdivrl
bound
add
cmp
jecxz
mov
sub
es
neg
inc
into
leave
insl
mov
stos
dec
stos
test
sub
push
sub
loop
test
pusha
sub
andb
adcl
lods
insl
mov
jge
adc
fcomp
lcall
cmp
xchg
call
cmp
movsb
cmp
clc
jbe
lret
xchg
mov
mov
lret
sti
xorb
inc
jo
lahf
pop
leave
inc
fucomi
pop
pop
ja
pusha
subb
lods
pop
std
mov
fistpll
rcll
test
rcrb
ret
jge
push
and
lods
mov
cwtl
jge
sub
add
cs
push
imulb
jae
ja
pop
cmpsb
imul
mov
aas
pop
cld
mov
es
cmp
fildll
ds
mov
mov
dec
xchg
dec
sti
popf
xor
in
ds
in
lahf
sbb
leave
mov
adc
call
jle
dec
pop
ss
mov
int
cmc
outsb
setns
cld
cmp
js
pop
inc
mov
dec
cmpsb
pusha
dec
push
ljmp
in
fildll
imul
jns
in
xor
add
sub
jno
fmul
xor
das
xchg
sbbb
mov
aaa
mov
adc
imul
cwtl
jle
push
divl
jnp
inc
insl
popa
pop
pop
mov
imul
cmpw
lea
dec
sub
movsl
cmc
lock
lret
test
int3
std
int3
inc
addr16
mov
fadd
mov
lret
and
xor
pop
cmp
mov
outsl
ret
test
mov
or
mov
in
cmp
adc
ds
mov
pop
push
dec
sti
sub
addl
pop
xor
cld
mov
js
or
cmp
xor
clc
aad
cmp
xlat
push
movsl
addb
dec
outsb
inc
sub
pushf
mov
inc
dec
add
xor
inc
ss
jle
js
and
pop
jl
push
test
sahf
rcrl
fiaddl
std
cmpsb
and
sbb
cltd
lds
xor
inc
sti
push
cmpsl
ret
stc
push
sub
fcomp
stc
or
jne
jae
pop
addb
aas
js
loope
mov
push
out
pop
xchg
cmc
lahf
and
or
je
jmp
aaa
test
pusha
jbe
or
add
loop
push
ja
imul
mov
sub
cmp
adc
daa
mov
lods
clc
aad
or
and
into
ss
cs
scas
pop
or
icebp
jg
out
cmp
imul
sub
sbb
jg
add
int3
or
xchg
dec
incb
icebp
mov
fiaddl
jae
lock
push
aas
add
fwait
mov
add
push
stos
sub
aam
push
test
add
in
clc
test
aad
ret
call
outsl
mov
xrelease
out
popa
mov
or
mov
aam
push
inc
push
fwait
or
push
jg
lret
mov
fisubrl
jno
sbbb
cltd
out
push
or
cmp
push
movb
mov
jnp
mov
js
adc
push
or
jo
loope
add
add
popa
test
mov
fucom
lahf
add
mov
xchg
insl
jp
aam
lods
adc
xchg
loop
xchg
mov
or
sti
xchg
cli
pop
movsb
scas
test
lret
add
jae
lahf
cmp
addr16
movsl
jae
bound
in
inc
fcompl
sbb
push
pop
pop
cmp
xchg
lcall
xchg
sar
in
inc
sti
mov
jae
bound
cmc
xor
pop
cmp
xchg
jb
push
push
and
xchg
pop
mov
inc
or
push
test
fs
cmp
aaa
ja
outsb
rcll
mov
mov
ret
sbb
ljmp
idivl
dec
lcall
sbb
stos
hlt
int
sbb
and
outsb
push
mov
je
and
mov
and
test
jmp
mov
push
mov
loopne
ljmp
jg
cld
ljmp
dec
and
push
jmp
inc
gs
mov
add
nop
mov
lret
xor
mov
cltd
cmp
les
pop
ja
test
clc
xchg
cmp
in
cmpb
jp
into
xchg
nop
pop
mov
inc
scas
xor
inc
stc
inc
xchg
js
mov
aad
nop
inc
push
imul
xor
js
inc
scas
sub
sahf
pop
cmp
mov
or
jns
mov
iret
bound
cmc
dec
jbe
stc
in
push
test
inc
into
sub
add
push
cmpsb
rcl
daa
int3
cmp
lods
and
xchg
imul
mul
push
cmp
test
mov
repz
das
lea
sub
imul
mov
pop
iret
mov
or
jmp
repnz
xchg
movl
fisubrl
mov
cmpsl
jg
insb
sti
sti
push
push
hlt
das
cmp
les
push
lock
mov
sub
aad
xchg
sti
or
pop
or
sahf
and
test
cmpsb
cli
cld
movsl
pop
jecxz
mov
inc
cmc
int
cld
sbb
xlat
add
andl
inc
repnz
mov
icebp
jns
arpl
add
loope
xchg
imul
push
push
jmp
shlb
idiv
popf
js
aad
loope
mov
xchg
fs
leave
lret
les
mov
push
push
ficompl
scas
mov
mov
xchg
cmp
xchg
add
and
jle
push
xchg
pop
out
mov
adc
push
outsl
std
mov
push
jb
sbb
outsl
mov
int3
cmpsl
daa
push
jbe
cmp
jb
sti
mov
es
iret
and
or
mov
leave
sbb
push
out
cmp
push
loopne
lods
or
adc
insl
cltd
pop
xchg
jo
test
push
dec
cmp
adc
mov
jo
inc
movsl
or
ja
mov
rcr
popa
pop
data16
dec
out
pop
popf
popf
add
push
dec
mov
lock
rcl
out
imul
jmp
pop
push
jno
mov
or
stos
add
pop
fnsave
adc
jg
cmp
ret
lcall
nop
sub
mov
sub
mov
xchg
subb
adc
lods
scas
jg
rcll
xchg
cltd
outsl
pop
shlb
pmovmskb
adc
mov
mov
add
push
mov
lock
add
out
lods
pop
cmp
daa
loope
jg
cmp
arpl
mov
adc
and
jge
dec
xchg
es
jae
js
bound
mov
insl
adc
add
dec
ret
mov
pop
fsubrl
cwtl
lahf
push
push
aad
xchg
in
cwtl
sbb
fwait
push
inc
xchg
js
ret
iret
and
push
in
cwtl
inc
loopne
std
mov
outsb
xor
fists
push
sbb
and
repz
and
out
lret
adc
xlat
test
dec
cmp
dec
lds
xchg
insl
lret
fimull
mov
inc
loop
mov
cmc
xchg
shlb
scas
xchg
add
jg
jle
inc
and
cmp
gs
push
das
jg
cmpsl
icebp
mov
or
inc
jge
adc
inc
and
lret
icebp
mov
jb
mov
icebp
inc
cmp
or
int3
xor
stos
sub
dec
inc
lds
or
fs
xchg
fs
pop
leave
xchg
or
dec
push
dec
push
inc
and
or
mov
hlt
subb
js
pop
ds
mov
addr16
mov
hlt
xchg
into
xor
or
fsubr
jl
in
adc
into
pop
xor
or
push
push
out
dec
push
cmp
lods
and
sarb
ret
cmp
mov
dec
in
shlb
jnp
push
cld
mov
lock
cli
ret
or
loopne
out
pop
jmp
push
add
insl
cwtl
xchg
mov
test
iret
rcll
je
mov
loopne
push
addr16
enter
lods
jg
adc
lock
out
fmul
lahf
mov
bound
je
push
mov
mov
scas
xor
movsb
stos
mov
nop
pop
cmp
mov
jns
xchg
pusha
mov
or
mov
sub
jnp
js
into
xchg
jns
jne
mov
cmp
pop
pop
fidivrs
repnz
cmp
jg
popa
les
movsl
call
scas
mov
cmp
mov
mov
mov
mov
dec
push
push
cmpl
gs
ja
loopnew
pop
dec
rcrl
xor
jnp
fs
fwait
aaa
mull
push
dec
sarb
cli
lret
jmp
mov
fs
push
mov
dec
data16
sbb
fldlg2
imul
fdivrs
or
pop
cwtl
lods
inc
adc
pop
cltd
jbe
call
push
sahf
mov
adc
and
repz
jg
jge
out
cmp
xlat
add
push
push
cmpps
and
dec
cmp
mov
into
mov
roll
push
mov
iret
push
ds
jge
cmp
push
loop
cli
or
outsb
jl
push
roll
sbb
pop
mov
lcall
scas
adc
xor
or
pop
sub
rcr
mov
mov
and
lea
mov
enter
xchg
sarb
icebp
lret
fsubr
jbe
aas
test
ljmp
call
xchg
aam
jmp
jae
hlt
sbbl
sbb
jl
xchg
popw
mov
pop
or
mov
fadds
mov
or
dec
popa
imul
sub
repz
jb
lret
decb
xor
pop
mov
mov
sbb
sahf
or
xchg
std
jae
and
xor
cli
dec
jl
icebp
jbe
movl
jmp
sub
out
mov
jae
lret
loope
aad
push
fisttpl
in
sbb
sarb
and
icebp
cltd
sub
push
xlat
fildll
ss
lods
adc
loope
xor
scas
iret
outsb
mov
mov
sub
popa
in
cmp
inc
push
or
arpl
pusha
mov
js
lret
pop
daa
insb
push
mov
jl
test
xor
mov
push
xor
jne
cmp
cmp
js
ljmp
pusha
movsb
test
cmp
stos
pop
sbb
mov
fstpl
negb
add
xor
data16
jae
data16
test
adc
cld
jae
push
int
push
mov
or
push
mov
xchg
subb
sbb
loope
or
dec
arpl
int3
pop
xchg
out
shrl
lret
push
sub
pop
cmpsb
aad
std
push
and
lret
cmc
pop
cmp
lods
movsb
lret
sbb
sub
fidivl
mov
scas
mov
dec
add
mov
jmp
iret
insb
hlt
cli
add
sti
cmpl
adc
mov
aad
ja
cwtl
out
push
push
call
fwait
popa
mov
mov
pop
stos
test
dec
loope
jle
js
andb
adc
rorb
lods
movsl
adcb
cltd
mov
add
sbb
aas
hlt
or
lret
mov
out
push
inc
je
push
test
dec
cmp
sbb
inc
fnstcw
jmp
test
out
mov
les
xchg
cmp
cmp
cmp
mov
js
inc
test
pop
sbb
test
in
sbb
into
sbb
in
or
fidivl
add
mov
mov
xor
add
nop
addr16
mov
mov
lcall
loopne
icebp
test
std
or
sub
add
jle
rolb
dec
or
cmp
xlat
pop
in
cmp
fsts
fs
out
jp
and
mov
addr16
pusha
out
daa
inc
and
pop
mov
rcpps
adc
popf
mov
jge
scas
outsl
mov
dec
add
adc
mov
lods
or
repnz
inc
andb
inc
pop
xchg
outsb
sub
insl
rcll
popa
pop
sub
scas
jmp
sbb
adc
test
shll
insl
imulb
pop
je
aam
push
xchg
xchg
cmp
mov
test
xor
jo
dec
add
imul
xlat
lret
xor
mov
sahf
xor
pop
aad
andl
cmp
push
repnz
jbe
push
and
dec
sub
stos
fldl
clc
add
lods
mov
pop
shr
dec
cli
pusha
cld
lock
push
mov
pushf
push
add
jg
adc
and
mov
in
pop
xor
or
add
arpl
fwait
mov
push
cmp
and
lods
mov
in
push
jge
dec
ja
dec
cmp
jo
dec
pop
sbbl
cwtl
loope
fisubrl
ret
xor
gs
fldl
inc
mov
repz
sub
adc
cmpsl
daa
popa
outsb
int
test
ljmp
mov
fwait
lret
lret
lahf
lss
hlt
add
aam
loope
dec
pop
cmp
adc
sub
ror
incb
jo
xor
lcall
add
push
pop
test
push
jae
mov
jecxz
sti
xor
xchg
hlt
ss
mov
ljmp
rcrb
mov
push
sarb
and
sbb
adc
int3
lret
mov
jecxz
addr16
add
cmc
imul
ja
add
pushl
adc
sub
mov
or
xchg
push
test
jo
inc
mov
inc
test
jae
pop
sti
cmp
mov
insl
mov
decb
push
lock
cmp
add
jp
out
imul
sbb
loope
cmp
orb
add
pop
and
mov
test
mov
push
dec
push
lods
shl
cmp
scas
adc
in
mull
cmp
mov
xchg
in
stc
out
ds
gs
gs
popf
shrl
bound
jne
jp
fs
aad
test
pop
stos
pop
push
jge
push
jae
out
sub
dec
ficompl
and
pop
mov
cld
popf
dec
push
cld
inc
push
pushf
or
xor
cmpsl
xchg
cmp
xchg
dec
cmpsl
test
push
mov
adc
dec
insb
mov
outsl
jp
outsl
xchg
or
xor
outsb
sti
mov
sbb
ret
rcll
cmc
in
push
cmpsb
mov
xchg
push
movsl
mov
inc
add
mov
in
fwait
lret
in
ss
inc
jge
mov
in
add
lods
or
ffree
sub
adc
or
inc
or
outsb
inc
jnp
mov
xchg
cmp
push
out
shrb
icebp
mov
aaa
lret
sub
fmuls
in
imul
mov
shrl
popa
xor
iret
iret
pop
jns
pop
push
xor
push
or
jne
lea
iret
sti
mov
jnp
and
lds
cmp
ds
testl
push
xchg
pusha
cmpsb
fstpt
pop
arpl
jl
loope
jge
addl
lds
jns
mov
xchg
mov
xor
mov
jbe
push
arpl
out
fldt
out
popa
mov
lds
jge
sbb
pushf
dec
call
sbb
xchg
scas
rcrl
cs
in
ss
sti
add
sub
or
loope
iret
arpl
mov
fdivp
mov
in
mov
lcall
mov
pop
sbb
adc
mov
sbb
je
ret
or
rcl
or
fidivrl
or
or
enter
push
or
fildll
jg
daa
mov
repnz
test
mov
in
jl
setbe
jnp
push
jno
test
out
mov
inc
dec
inc
xlat
jge
sti
arpl
cmp
es
fucompp
add
add
cmp
adc
sbb
mov
clc
outsb
cmp
cmp
xor
pop
loop
mov
mov
pop
sub
add
cmp
inc
jae
cmpsl
pop
pop
ja
sub
pop
mov
dec
xchg
xchg
popl
lea
pop
je
mov
aad
es
addr16
dec
mov
in
mov
and
add
or
loope
jne
jmp
cmp
mov
push
outsl
out
roll
sbb
xchg
test
and
adc
enter
rorb
rcll
lea
lcall
pusha
jmp
add
in
dec
movsl
rorl
jge
push
in
dec
xchg
movsb
in
inc
aas
mov
mov
cmp
repz
test
cmp
mov
pusha
cld
pop
scas
or
inc
add
push
iret
or
pop
inc
sub
mov
cmp
lcall
cmp
sbb
cmp
xor
loope
jo
not
and
enter
leave
xor
ficoml
mov
jne
jnp
and
jecxz
mov
mov
dec
jae
jg
mov
xor
mov
sahf
mov
xchg
xchg
insb
pop
mov
add
add
cmp
repz
mov
inc
loopne
xlat
rorb
mov
adc
test
and
inc
insb
stc
lods
cld
adc
sub
test
add
sbb
pop
mov
mov
imul
mov
fidivrl
leave
and
fimull
test
mov
or
jge
lods
and
xor
mov
sti
fwait
push
lods
aam
into
sarb
and
jmp
leave
enter
jmp
push
cltd
sahf
sbb
and
jecxz
loop
push
lret
xor
pop
push
in
rcll
jnp
rcll
imul
adc
ljmp
leave
sub
sbb
hlt
ds
ds
repz
mov
jge
add
dec
pushf
in
fists
and
cmp
push
xchg
add
sbb
dec
push
push
stos
loopne
and
loopne
xor
mov
dec
loop
test
cmp
sub
pop
bound
jp
xchg
cwtl
clc
xchg
and
sbb
and
adc
cmp
cmp
add
mov
sbb
out
fistpll
repz
sub
and
adc
clc
bound
push
mov
lret
xchg
cmpsb
inc
fimuls
cmc
xor
cmp
dec
and
sbb
xchg
pop
lret
and
call
push
stc
jmp
dec
dec
dec
aad
cmp
or
push
popf
dec
mov
mov
jecxz
sub
jp
pop
dec
lock
ret
add
mov
out
lret
mov
sub
leave
aam
jae
test
add
or
pop
xor
cmc
and
pop
mov
out
scas
inc
lods
inc
xlat
ljmp
xor
push
in
faddl
shrl
dec
sahf
jmp
inc
xchg
les
push
lods
insb
ss
adc
lock
fwait
cmovb
pop
leave
insb
in
inc
inc
mov
pusha
push
push
add
push
aam
adc
iret
push
jle
mov
out
push
rcrb
push
cmc
and
cwtl
repnz
stos
lcall
lahf
mov
dec
sbb
fmuls
xchg
inc
adc
mov
ror
ja
pop
lret
mov
add
mov
popa
in
cld
sub
subb
mov
add
dec
sbb
leave
sti
dec
aad
cmp
mov
dec
into
pop
popa
lret
adc
mov
mov
in
mov
inc
push
sub
or
pop
fnstenv
mov
pop
xor
push
push
gs
gs
mov
clc
jbe
dec
aam
xchg
bound
inc
dec
scas
sub
or
pop
mov
ljmp
dec
jns
inc
lcall
je
gs
xor
push
test
mov
fdivs
pusha
sbb
push
or
sub
xorb
popa
sti
repz
rolb
mov
test
inc
cmp
rcr
inc
adc
pop
dec
jo
and
mov
stos
pusha
push
mov
push
push
cmp
andb
mov
cmp
push
aaa
lret
test
mov
repz
dec
jne
mov
lahf
inc
insl
gs
adc
in
mov
out
inc
and
mov
pop
aam
mul
stc
scas
sub
cmc
movsb
in
lret
or
mov
notb
xlat
mull
lret
js
inc
or
cmp
xor
and
pusha
cmpsl
aaa
mov
cmp
xchg
imul
es
sbb
call
stos
sbb
xor
mov
aas
or
in
hlt
mov
int
mov
inc
mov
or
pop
push
ja
mov
je
enter
xor
cltd
out
ficompl
xchg
xchg
mov
flds
or
bound
subb
lods
pop
adc
mov
scas
hlt
cmp
jbe
ss
mov
adc
jae
shll
add
scas
sub
pop
daa
xor
sub
fcom
cmpsl
xor
pushf
mov
xchg
jns
in
push
jle
in
xchg
rclb
imul
sub
xor
movsl
sbb
push
sbb
mov
or
jg
mov
fsubr
pop
outsl
pusha
rclb
cli
mov
xor
push
in
jg
into
movsl
cli
sbb
sarl
loopne
pop
lret
leave
pop
imul
pop
xchg
or
das
add
jp
cmp
cli
shrb
ret
adc
add
je
mov
adc
test
xchg
fptan
rorb
jbe
cmp
shlb
jns
adc
aaa
xchg
cmpsb
gs
xchg
cmp
fidivrl
enter
xchg
mov
sub
jle
pop
loope
push
imul
sub
cltd
jg
out
adc
jge
pop
in
sbb
cmp
xchg
jbe
add
fdivs
sbb
pop
xchg
insb
inc
or
cwtl
or
dec
mov
cmp
mov
sub
pusha
insb
loop
and
test
iret
fnstsw
out
inc
dec
mov
movsb
pop
stos
addl
fcoms
add
pusha
leave
daa
cltd
inc
lock
push
push
jecxz
pushf
mov
icebp
mov
popa
mov
xchg
fistps
jb
add
push
nop
mov
imul
dec
mov
cmp
cwtl
mov
cmpsl
int3
jg
mov
xchg
pop
xchg
cmp
inc
pop
mov
jno
pop
inc
mov
xor
cmp
mov
js
stos
or
mov
or
ljmp
enter
adc
popl
iret
in
cs
pushf
or
aaa
popf
sub
rol
lcall
jge
ljmp
xor
mov
and
test
roll
inc
rclb
mov
xchg
js
and
push
adc
test
pusha
int
mov
ret
ret
fstl
pop
sub
jno
ljmp
push
fs
mov
push
cld
sbb
dec
stc
rclb
sti
cmc
pusha
ja
pop
sub
xlat
or
mov
stc
jb
add
sub
pop
xchg
pop
push
dec
loopne
sti
fiaddl
iret
cmp
fisubrl
mov
js
gs
jbe
jae
xor
cmp
xor
leave
pop
sub
sarb
call
ds
jmp
xchg
frstor
sbb
imul
ficompl
xchg
adc
dec
jno
daa
movsl
mov
outsb
out
adc
mov
xchg
xor
sbb
jl
dec
cmp
scas
dec
mov
adc
test
int
jecxz
call
imul
or
xor
xor
mov
lcall
ds
mov
mov
cmpb
mov
gs
hlt
mov
fimull
jbe
icebp
push
test
int
add
pop
pushf
jl
aas
inc
ud0
xlat
xchg
pop
push
sub
stc
jnp
push
popl
push
jl
testb
stc
fs
jmp
in
in
sbb
shr
cmp
mov
adc
fcmovbe
in
test
inc
push
push
adc
sub
cmp
jmp
fstpt
je
enter
andl
cmpl
stos
test
mov
mov
loopne
loopne
data16
xchg
bound
sbb
outsl
sub
mov
fdivrl
and
ljmp
sar
xor
mov
push
pop
push
ljmp
mov
cld
sub
mov
addr16
int
xchg
std
push
cwtl
loopne
mov
dec
jle
and
sub
dec
imul
lret
xchg
and
jl
sub
jcxz
insl
and
xchg
jo
xchg
add
ss
inc
cmp
mov
sub
pop
std
ljmp
repz
nop
or
xchg
lcall
lods
sahf
inc
mov
mov
push
shlb
call
mov
iret
lds
pusha
pop
jnp
mov
rep
jge
cld
adc
sub
lret
jecxz
lds
lods
push
pushf
shll
int
add
mov
adc
inc
adc
mov
addb
push
fwait
pushf
jp
inc
pop
in
xchg
xchg
mov
push
insb
mov
lahf
add
mov
xchg
aas
push
jbe
ss
clc
adc
lcall
add
adc
xchg
xor
xchg
add
fldl
push
ja
int3
loope
cli
mov
sbbb
adc
pop
mov
mov
jae
lret
push
push
or
mov
in
jnp
cmp
adc
adc
lret
pop
inc
pop
dec
mov
test
xchg
dec
pop
sbb
imul
iret
sub
cmpsl
add
imul
pop
mov
push
insl
leave
lods
data16
lock
jne
mov
push
subb
jmp
fnstsw
mov
lcall
arpl
dec
imul
mov
mov
or
in
outsl
ficoms
jge
adc
lahf
pop
hlt
fldcw
push
js
push
jo
scas
imul
repnz
lds
pop
shrl
mov
xchg
nop
dec
mov
inc
test
movsl
shrl
sbb
xor
inc
jecxz
lods
movsl
insb
dec
in
addb
cmpl
out
cmpsl
sbb
inc
cld
mov
lods
daa
mov
in
data16
cmp
scas
xor
push
xchg
clc
xor
outsb
jns
cmp
mov
ss
and
fisubrs
mov
das
dec
sbb
mov
or
pop
ds
fs
fdivp
mov
in
test
repnz
outsb
scas
pop
rolb
add
dec
xor
insb
dec
and
test
push
lcall
adc
xor
pop
mov
mov
pop
insl
int
or
adc
test
pop
fmul
or
jmp
jno
sbb
repnz
adc
scas
jbe
sub
xchg
cwtl
in
pop
andl
ret
and
je
fs
sbb
stos
adc
sti
add
cmp
jns
mov
in
js
cmp
stc
imul
mov
dec
orb
mov
sbb
scas
push
xchg
je
adc
mov
and
mov
jns
mov
jp
xor
pop
xchg
push
shlb
ss
cld
inc
lret
pop
pop
jle
sbb
xor
dec
mov
jle
outsl
shrl
push
loope
arpl
lods
pop
cmpsb
adc
pop
dec
popa
subb
push
or
jmp
dec
xor
insl
and
jmp
into
inc
lea
adc
mov
lods
push
inc
push
dec
inc
pushf
adc
adc
stc
cmp
mov
imul
mov
jno
inc
psubsb
pop
add
dec
cmp
data16
or
mov
popa
add
jae
imul
dec
add
insb
movl
in
mov
insl
mov
fnstcw
int
sbb
pop
fwait
outsl
sti
lods
jg
xchg
out
movsl
icebp
mov
shll
movsb
icebp
xchg
xchg
jbe
jecxz
punpckhwd
xchg
mov
lock
xor
inc
inc
and
add
hlt
inc
xor
mov
popa
jnp
sub
lahf
es
stos
dec
in
jg
xchg
mov
leave
stos
jo
jo
push
jno
or
xchg
lcall
cwtl
aaa
sbb
mov
jo
adc
mov
dec
cmp
in
jg
dec
inc
movsl
inc
inc
jnp
loop
jne
lods
xor
dec
popf
push
or
std
mov
inc
ret
sub
lods
lcall
xchg
cltd
cmp
data16
enter
cli
mov
call
fdivs
psllq
ror
sar
and
nop
repnz
leave
cmp
divb
popa
xchg
out
pop
mov
push
jb
add
mov
das
mov
cmp
mov
add
in
jb
daa
mov
jl
lret
daa
fists
or
add
pop
lock
push
nop
mov
add
jns
int
mov
shl
pop
xchg
add
stc
movsb
pop
add
aam
inc
test
pop
mov
andb
hlt
dec
mov
jns
shr
push
sub
and
push
es
inc
test
mov
push
or
pop
packsswb
fstpt
enter
arpl
out
xor
push
push
into
loope
push
sbb
imul
insb
push
out
ss
dec
and
and
jno
ret
dec
or
xor
pop
mov
add
mov
iret
pop
cli
xchg
mov
pop
push
decl
inc
in
xlat
cmpsl
cmp
ret
ss
inc
jbe
mov
sbb
cmpsl
mov
mov
mov
ret
cmp
and
adc
inc
inc
fs
into
push
xchg
or
mov
pop
pop
jnp
out
pop
lods
lret
test
cmp
in
roll
mov
fs
push
mov
mov
push
dec
jle
test
xchg
add
inc
jne
cmp
inc
mov
sbb
movb
push
pop
mov
outsl
je
hlt
and
insb
push
lds
dec
push
and
enter
mov
xchg
xor
repz
cmpsb
btr
dec
inc
aam
cli
add
fcmovbe
out
sub
sub
outsb
cmp
pop
mov
outsl
int
sarb
shrb
shl
mov
adc
pusha
cmpsb
aaa
add
cmpsb
push
or
add
mov
leave
mov
xor
mov
inc
dec
push
mov
iret
fs
repnz
in
paddw
lea
jnp
jbe
sub
mov
mov
inc
xor
aad
cmp
push
inc
ja
mov
sub
addb
and
pop
inc
mov
mov
lcall
fnstsw
push
cltd
add
pop
negl
ljmp
xchg
in
rcrb
mov
cmpsl
sarb
xchg
mov
jmp
cwtl
scas
jecxz
leave
sub
mov
mov
or
fistpl
jne
jle
cmp
out
ret
cltd
incl
popf
or
sub
jbe
xchg
movsl
lcall
sahf
mov
cmp
mov
push
outsl
add
adc
rclb
jle
test
bound
xor
mov
inc
sti
push
dec
loop
and
push
and
rolb
leave
mov
sub
aas
push
inc
pop
in
test
dec
or
lds
pushf
adc
add
jecxz
fisubs
fisubrl
sub
insl
or
or
leave
xchg
inc
mov
popa
xchg
ret
into
add
jp
and
lods
pavgb
and
xchg
adc
push
inc
mov
orl
leave
mov
jle
addb
es
call
add
adc
cmp
jno
repz
xor
cltd
rorl
fisttps
sbb
rcr
pop
outsb
sub
gs
mov
cmp
sti
mov
pop
sub
pop
pop
mov
push
sti
mov
outsl
mov
xor
push
xchg
dec
adc
push
cmp
ficompl
aas
ljmp
xchg
lret
nop
pusha
int
inc
mov
xchg
ret
aam
lahf
cmc
xchg
cli
dec
mov
je
insb
clc
gs
addr16
call
xchg
sbbl
jmp
outsl
es
and
and
add
stos
push
fildl
sarl
inc
pop
mov
inc
jl
les
and
ljmp
inc
and
dec
pop
in
xchg
adc
or
rorb
aaa
comiss
je
pusha
stos
and
pop
cmp
sbb
daa
xchg
lds
adc
fisttpll
pushf
dec
lods
mov
push
jb
fdivrs
add
jge
cwtl
ror
jno
insb
cmp
adc
arpl
adc
or
jg
divb
sti
add
push
dec
sub
js
mov
outsb
cmc
cmp
pop
xchg
xchg
inc
mov
lcall
mov
mov
ret
lret
adc
cmp
in
adc
imul
nop
ret
add
mov
sbb
lahf
ljmp
cmp
push
imul
in
scas
pop
lcall
in
sbb
std
addl
xor
daa
ja
ja
pop
dec
popa
fnstcw
inc
sub
pop
pop
push
jle
rclb
popa
sbb
addr16
popf
xchg
inc
inc
jae
jge
addr16
std
sub
sti
lcall
inc
out
lea
je
lret
add
sahf
aaa
mov
cmp
hlt
mov
cwtl
mov
sub
daa
xchg
into
sbb
or
jp
loope
push
stos
fldcw
jl
adc
and
pop
out
push
lret
jp
imul
outsl
mov
in
pop
pop
popa
fwait
add
pop
xchg
stos
or
xor
jno
ret
adc
and
mov
cmp
push
inc
fnstsw
pop
fldt
push
rolb
sub
data16
cmp
cli
jno
cmc
aas
mov
clc
jae
dec
shlb
jmp
push
icebp
mov
ficompl
sub
jno
jo
dec
imul
adc
mov
dec
insl
xor
das
dec
inc
insl
ret
das
push
xlat
jnp
mov
sub
nop
sbb
movsb
sti
cltd
hlt
scas
and
mov
add
in
stos
xlat
fnstsw
cmpsl
adc
sub
pop
es
outsl
push
loope
out
push
push
add
jge
and
cmp
sahf
or
daa
mov
stos
dec
dec
and
stc
sbb
push
dec
outsb
stos
sub
pop
xchg
testl
add
mov
jp
pop
xor
cli
sti
imul
js
aam
bound
pop
mov
xchg
fstps
out
push
rcrb
ror
sbb
iret
mov
lods
in
out
mov
loopne
das
xchg
sahf
inc
jns
js
pop
rcll
and
adc
fmulp
add
jl
jp
jo
xchg
mov
nop
rclb
out
cld
repnz
arpl
scas
rcpps
cmp
dec
rorb
inc
jmp
xor
push
push
in
loop
fnstenv
cmp
cltd
movsb
mov
cmp
or
sbb
pusha
add
mov
mov
add
pop
or
out
jle
nop
mov
sbb
push
icebp
push
mov
push
and
into
pop
inc
aas
add
pop
push
push
jbe
cmp
in
cld
mov
cmpsl
add
outsl
es
gs
xchg
push
add
xchg
std
push
lods
jp
xor
xor
call
push
inc
cmpsl
popa
pop
jmp
call
sub
pop
xlat
xchg
ret
int
fisttpl
adc
inc
sti
jne
mov
pushf
aaa
and
mov
pop
dec
js
lds
movsb
push
out
les
push
push
xor
popf
ret
sti
pop
mov
dec
loopne
pop
push
ret
dec
push
mov
fimull
fwait
test
jmp
insb
xor
inc
or
push
dec
adc
jle
in
push
aaa
sub
lods
jb
js
outsl
frstor
xor
std
scas
add
jle
ret
xchg
jae
pop
dec
push
pop
cmpsb
jmp
jb
mov
dec
ljmp
jbe
pushf
fucompp
jmp
cmp
jo
sbb
pop
addl
and
xchg
mov
pop
sbb
les
inc
popa
pop
hlt
xchg
or
rcrb
cmc
cld
xlat
mov
out
xlat
cmp
iret
mov
mov
dec
leave
out
push
mov
fwait
lock
lods
xor
fnstenv
cmp
lds
xchg
or
cmp
cmc
mov
js
imul
rcr
enter
enter
mov
testb
hlt
dec
adc
pop
lcall
pop
mov
sub
negl
hlt
jae
xor
inc
out
adc
fmulp
fwait
pop
mov
insl
cmp
lock
pop
cwtl
lods
test
adc
xor
jae
loopne
push
adc
loope
cmc
pop
push
ret
inc
out
test
push
scas
adc
xor
sub
mov
sahf
add
push
in
cmp
inc
or
fisttpl
ds
cmc
mov
mov
pop
in
lods
pop
mov
pusha
inc
dec
sarb
jb
aaa
aas
lods
sbbl
sbb
adc
aam
pusha
mov
jp
jbe
sbb
mov
dec
out
or
or
bound
mov
out
pop
mov
fs
add
mov
adc
mov
inc
mov
fnstcw
adc
int
outsb
dec
pop
mov
mov
pop
sbb
test
sbb
in
ljmp
das
and
and
xchg
das
and
cmp
int3
call
fidivs
fmull
jecxz
fdivs
xchg
xor
cwtl
imul
sarb
pop
mov
mov
dec
lahf
movzwl
stc
and
nop
add
sbb
sbbl
push
fiaddl
les
fcomps
mov
in
in
cwtl
loopne
push
mov
pop
mov
or
jmp
aas
inc
aaa
pushf
imul
pushf
jae
cli
sub
push
xor
in
test
push
cmp
cmp
fisubrl
dec
xchg
mov
stos
int
lock
inc
shll
inc
jecxz
sub
sub
fwait
insl
imul
fstpt
sub
roll
mov
cmp
add
inc
lret
pop
cmp
call
loop
mov
and
jns
lret
mov
lea
inc
lods
lcall
jp
das
in
addb
out
int
push
pop
mov
mov
rolb
adc
xlat
scas
movsb
ljmp
arpl
int3
bnd
mov
sbb
addr16
push
sahf
jl
stos
cmc
mov
std
loope
sbb
imul
jb
hlt
je
stos
push
daa
lods
adc
xor
aaa
push
es
pop
loope
mov
mov
addl
pop
nop
xchg
xchg
scas
movb
xchg
push
fwait
testl
cmp
addr16
inc
dec
in
mov
adc
arpl
xchg
cltd
add
xor
bound
lret
push
mov
xor
test
lods
xchg
in
dec
or
shll
push
fstps
ss
fstl
xor
aas
lods
jbe
dec
dec
daa
out
subl
add
or
push
je
push
out
aad
fcoml
pop
inc
repnz
adc
insb
fdivr
sti
mov
pop
xchg
sbb
loope
jne
icebp
jne
mov
jo
aam
je
popf
addr16
jle
movsb
mov
lret
cli
jl
xor
fisubl
add
hlt
insl
pop
clc
mov
mov
push
cmc
mov
mov
and
push
adc
gs
lahf
iret
jne
or
shl
cmp
jno
dec
or
and
out
dec
sbb
imul
test
cltd
xchg
xchg
adc
in
sub
sbb
inc
cmp
popa
clc
out
int
loop
adc
xor
data16
xor
out
shrl
xchg
aad
mov
add
int3
pop
xor
dec
imul
mov
or
xor
fldl
lretw
hlt
mov
cltd
sbb
push
testb
mov
mov
inc
jb
cmc
inc
xchg
pop
lcall
sbb
lods
cmp
jno
icebp
and
ljmp
repz
cmp
cmpsl
in
loopne
pop
lret
mov
ret
ds
fbstp
cmpsl
insl
push
mov
and
or
sbb
mov
mov
std
mov
push
mov
outsl
mov
and
push
movsl
divl
push
push
xchg
insb
dec
es
xor
pop
movsl
jmp
js
ret
ljmp
bound
call
jo
mov
or
jno
bound
push
inc
adc
sub
mov
inc
xchg
scas
dec
add
lock
lret
dec
bsr
mov
dec
addr16
xchg
xchg
push
in
mov
popa
cmp
aam
mov
out
add
std
mov
dec
test
mov
mov
sbb
add
ds
pop
repz
inc
mov
scas
jmp
test
je
test
shll
clc
xorb
pop
loop
mov
cmpsb
leave
push
scas
adc
dec
in
sub
int3
pop
shl
jns,pt
fsts
das
jno
add
dec
fists
lea
adc
lods
mov
imulb
mov
mov
push
fnstenv
leave
int3
sbb
xlat
data16
xor
pusha
out
sub
pushl
push
test
int
cmp
aaa
dec
dec
xchg
cmc
popf
mov
insb
pusha
dec
inc
inc
mov
test
gs
ret
lock
pop
adc
lret
push
dec
stos
stc
xor
and
and
mov
cltd
lret
enter
and
iret
std
push
loop
jl
jp
mov
push
sub
int
test
lret
add
in
mov
jo
sbb
xorl
push
mov
add
sbb
test
sbb
fsubr
imul
ret
add
lds
nop
fistps
jae
fnstenv
pushf
stos
pop
sahf
sbb
pop
dec
stc
test
jmp
push
sub
xchg
mov
push
loopne
xchg
mov
notb
mov
push
movsb
sti
daa
mov
xor
lods
mov
sub
subl
sti
push
adc
out
sti
xor
out
test
lret
pushf
push
mov
in
mov
cli
mov
mov
mov
and
mov
xchg
lds
rcrl
bound
or
push
mov
popa
clc
pop
jge
mov
pusha
ja
push
push
pop
leave
sub
sub
or
movsb
sbb
mov
or
cwtl
push
inc
mov
scas
push
jo
xchg
pop
test
xchg
mov
testb
daa
xchg
aam
scas
mov
out
jecxz
jne
inc
imul
xchg
pop
pop
rcr
inc
jae
jmp
mov
shll
loopne
jnp
lret
cmpsl
mov
shll
jne
inc
mov
inc
dec
cltd
out
leave
jnp
inc
xor
stc
jbe
rcll
sub
in
mov
add
insb
loope
lret
add
ja
in
sub
test
fists
mov
out
xchg
popa
lcall
jecxz
je
fs
jnp
dec
add
popa
mov
sub
rcll
and
arpl
rcl
fidivrl
sub
cmpsl
adc
push
out
ror
scas
dec
ja
ds
mov
and
bound
ror
mov
push
scas
push
add
push
jno
xchg
jno
and
inc
mov
scas
xchg
and
int
test
int
jecxz
dec
push
ret
je
mov
rcll
mov
adc
pop
pop
fwait
nop
cli
push
in
adc
pusha
sbb
subb
stos
in
jecxz
ljmp
out
out
sbb
test
cs
gs
mov
jmp
jbe
stos
xor
int3
xchg
imul
scas
lds
push
adc
jp
hlt
xchg
push
and
ja
ds
inc
inc
cwtl
mov
stos
or
aad
aam
test
xchg
into
lds
dec
pop
scas
ja
stos
loope
cli
rcrb
arpl
mov
jne
je
mov
mov
pusha
push
push
insl
xchg
movsl
out
rcrb
cmp
andl
cmpsb
jp
outsl
es
cmpsl
xchg
int3
jns
push
push
pop
sub
aas
js
out
pop
ss
ljmp
lahf
and
in
decl
inc
out
sbb
enter
jl
xlat
jle
mov
adc
adc
cmp
aad
stos
fnstcw
xchg
lahf
arpl
cmp
pusha
inc
jnp
mov
cli
cmc
aad
xorl
test
daa
push
sub
stos
fcomi
ja
xor
lret
add
sub
fs
xor
sub
and
push
cmp
add
adc
fcmovbe
ja
and
add
xchg
push
xor
aam
loope
int3
xchg
loope
cmp
inc
sbb
scas
pop
inc
cmp
sbb
mov
xlat
test
sub
pop
addr16
xchg
adc
sub
adc
ds
cld
pop
imul
dec
mov
out
fs
mov
or
jl
adc
in
vcvtpd2dqy
add
test
repnz
sub
adc
sbb
push
mov
adc
pop
xchg
hlt
dec
xlat
test
cwtl
add
pop
nop
push
sbb
test
outsb
cmp
mov
in
xchg
jns
sarb
push
movsb
out
add
inc
mov
mov
xchg
and
mov
enter
sahf
fwait
or
jle
fwait
mov
xchg
push
pop
int
shrl
xor
outsb
nop
in
xor
psubsb
xor
bound
data16
js
dec
jle
push
jle
adc
out
dec
push
pop
leave
adcb
data16
push
lret
fsubl
popf
out
aaa
jae
test
mov
adc
jp
in
jle
pop
loope
fistpll
pop
and
decl
mov
cmp
and
mov
or
and
fcomp
pop
lret
or
cwtl
shrb
inc
test
cmp
mov
xchg
scas
jecxz
pushf
fwait
jl
push
pop
push
or
stos
mov
xlat
mov
loopne
iret
xor
shll
fnsave
pop
cmp
add
jne
mov
and
data16
idivb
sbb
ljmp
stos
ret
dec
pop
arpl
mov
inc
mov
loope
ret
stos
js
jno
jl
adc
into
int
and
xor
mov
divb
cmp
mov
mov
sbb
roll
dec
adc
push
cli
ficoms
rcll
xchg
pusha
adc
iret
repnz
into
outsl
mov
add
leave
jne
inc
jl
sub
dec
push
cs
add
jecxz
mov
and
pop
jno
test
mov
addl
aaa
mov
ljmp
sahf
imul
sbb
xchg
xlat
sarl
cmc
mov
test
sbb
inc
sarl
xchg
js
addr16
and
ret
xor
adc
loopne
pop
bnd
xor
jecxz
test
inc
fadd
lret
xor
push
fistpll
out
push
rcr
adc
rolb
pop
icebp
popa
mov
hlt
mov
push
pop
movsl
arpl
idiv
shl
in
cltd
push
sub
test
mov
push
aas
pop
pop
xchg
add
push
lret
loop
rcl
std
sub
cmp
and
add
pusha
inc
pusha
jp
test
cltd
add
in
int
sub
xchg
jns
test
push
cld
les
clc
sub
lret
jbe
push
ja
ds
and
lret
dec
inc
xor
pop
push
xchg
loopne
sbb
int
adc
mov
loope
inc
fstps
mov
lea
repnz
push
dec
enter
xor
movsl
mov
and
mov
mov
pop
arpl
neg
and
mul
mov
push
cmp
mov
jg
push
fnsave
sbb
ljmp
or
sbb
push
mov
pop
cmp
lds
pop
cwtl
lods
xor
iret
lds
xchg
inc
sub
in
push
cld
add
fisttpl
outsl
inc
mov
fwait
or
enter
add
scas
mov
icebp
cld
add
dec
xchg
pop
xchg
daa
out
outsb
sub
je
in
andb
jno
lret
push
lds
inc
enter
iret
enter
cld
mov
xor
ds
push
lret
xchg
dec
testb
dec
negb
jns
call
lahf
mov
xchg
mov
int3
in
adc
rorl
popf
pop
lcall
mov
pop
push
add
and
cs
pop
cmp
xchg
push
push
pop
bound
adc
adc
out
lcall
lahf
rcrl
addr16
in
in
jne
pop
arpl
xchg
addr16
imul
stos
pop
loopne
cmp
and
jae
mov
jge
inc
test
call
xor
mov
ja
or
pop
js
mov
bound
cwtl
and
movsl
leave
dec
addl
pop
fmul
mov
mov
cld
leave
push
xor
dec
rcll
dec
test
xor
inc
out
pop
cld
pusha
add
jno
shrb
stc
mov
mov
sti
and
pop
and
jge
jl
xor
nop
stos
call
mov
das
push
mov
je
cmp
into
add
and
jp
popf
es
enter
xchg
pop
sub
jne
cmp
ds
int
sti
repz
push
inc
xchg
xor
loope
mov
imul
xchg
pop
and
in
dec
pop
inc
jg
lahf
repnz
fcoms
mov
sbb
rcrb
pop
scas
ret
mov
pop
subl
and
xchg
cld
inc
xchg
mov
push
lret
lret
cmp
cmpsl
ja
mov
sbb
sub
inc
jo
push
xor
stos
jo
pop
sti
xor
sahf
cwtl
push
mov
inc
outsl
sub
hlt
loope
xor
dec
ds
imulb
imull
pop
push
mov
pop
sahf
dec
xchg
xor
dec
je
push
mov
sbb
xchg
push
gs
mov
mov
mov
repz
mov
es
ret
int3
jl
mov
aam
xor
in
cmp
cmp
sbb
in
sbb
lret
stos
mov
es
cmpsl
xchg
xchg
mov
pop
push
push
fisubs
out
xchg
ret
aad
cmc
fucomip
jp
push
shrb
scas
adc
jno
jecxz
stos
ret
std
arpl
fldl
sub
popa
call
jbe
fldl
mov
pusha
and
push
dec
imul
and
lods
push
lcall
adc
xlat
cmp
data16
popa
test
jae
mul
into
add
mov
adcl
lret
push
push
adc
mov
or
int
sub
sub
test
out
fiaddl
jecxz
push
sub
pop
xchg
inc
cs
sar
or
cld
and
pop
sahf
sti
xchg
out
stc
pusha
add
aam
popf
inc
test
xchg
jb
jo
loope
js
int
mov
push
sub
fwait
sti
cmp
movsl
cmpsb
fs
ljmp
or
daa
xchg
pop
push
sarb
out
fs
jne
mov
test
or
imul
js
pop
mov
movsb
fwait
lret
rorl
xchg
lea
pop
scas
pop
and
out
xlat
cmp
dec
pop
push
loope
mov
cmc
addb
jb
call
cld
sbb
sbb
das
lret
les
jl
fstpl
lods
dec
inc
loope
test
xchg
rorl
push
cld
ss
popf
addl
or
jnp
push
sbb
cmpsl
mov
das
int3
ss
jmp
nop
jl
xchg
out
mov
inc
pop
es
inc
sbb
mov
mov
or
add
or
rorl
out
test
into
pusha
fwait
mov
in
pop
xacquire
xor
sbb
mov
test
and
cwtl
js
jae
rcrb
cs
inc
stos
loopne
sbb
xchg
out
xor
je
lret
mov
arpl
and
cmp
or
shl
lods
incb
ss
scas
nop
jmp
mov
jmp
cmpsl
lret
pop
insl
test
sarl
sub
aam
xchg
adc
leave
mov
js
data16
sbb
test
adc
in
clc
test
sub
mov
and
bound
test
mov
notb
push
xchg
jnp
push
sub
cs
jmp
push
mov
fiadds
pop
aaa
sbb
in
lods
ret
insl
mov
cmp
cld
sub
xchg
jns
clc
fisttps
andl
out
add
aad
mov
pop
out
divl
pop
mov
insl
push
sbb
insb
call
lea
push
dec
inc
fildl
xor
adc
push
sub
or
or
xchg
sub
call
cmpsl
sbb
xchg
cmp
lahf
aas
sahf
xchg
out
cmpsb
imul
sbb
push
ret
cmp
shrb
stos
dec
xor
adc
movsb
ja
lret
les
mov
pop
in
mov
int
gs
movsb
add
test
mov
movl
cbtw
rcr
jecxz
xchg
pop
int
leave
movsb
xchg
js
inc
dec
fst
mov
and
adc
jle
ret
jg
inc
pop
or
push
xchg
mov
xchg
pop
outsb
adc
sti
gs
sbbb
sarb
roll
lods
rcrb
sub
daa
scas
icebp
sub
mov
mov
jl
adc
lods
jmp
mov
inc
dec
sub
ja
pop
in
lods
xor
test
pop
sub
add
xchg
in
ds
into
insb
sub
outsl
dec
loop
push
jnp
lea
imul
add
or
xchg
test
outsl
imul
movsb
call
cmp
ret
std
or
mov
pop
sbb
in
ja
dec
sbb
loopne
in
aam
sub
cmpsl
push
mov
out
mov
xchg
out
loope
fiaddl
mov
push
stc
aad
jae
pusha
pop
mov
xacquire
aaa
pop
push
mov
mov
xlat
daa
mov
popf
dec
aas
imul
push
ret
fdivrs
mov
push
push
adc
mov
or
lcall
notl
adc
inc
xlat
loope
mov
idivl
scas
xor
dec
addr16
jne
call
or
dec
sub
lock
inc
shr
lcall
push
push
lods
loopne
adc
aad
out
dec
cmp
xlat
sar
jp
cmp
jg
ret
sbb
or
push
cli
outsb
and
sub
sahf
push
scas
xchg
gs
cmp
in
cld
leave
pop
mov
js
sbb
cmp
mov
jb
and
lods
orb
pop
iret
jnp
pop
aam
testb
clc
testl
add
aad
pop
push
mov
notl
in
xchg
lea
insl
mov
pop
arpl
stos
mov
out
mov
dec
out
rcrl
cmc
repz
push
or
xor
into
dec
xchg
pop
pop
lret
push
out
mov
mov
jge
lock
iret
mov
dec
pushf
or
cli
pop
inc
das
pop
repz
xchg
into
xor
lods
mov
int
negb
call
int3
lahf
mov
adc
push
adc
push
dec
fmul
pusha
pop
stos
or
pop
mov
push
roll
push
or
rolb
out
dec
stc
sbbl
xchg
push
imul
sbb
mov
push
pop
int3
stos
push
cmp
cld
sbb
mov
mov
sub
push
jg
add
add
jmp
fcompl
pop
jmp
pop
aas
add
testb
mov
xchg
sbb
ja
dec
lock
inc
fcmovbe
lret
inc
jne
icebp
sub
or
jle
mov
jmp
out
adc
pusha
jo
insb
add
dec
gs
loop
push
push
test
js
jae
xchg
scas
js
nop
scas
ret
or
mov
sbb
mov
shll
addr16
or
stos
jle
int
mov
mov
aad
cltd
xor
loopne
fcoml
in
xchg
subl
or
fsub
xlat
decl
mov
and
xchg
push
sub
ss
in
scas
jmp
add
fnstcw
pop
jno
insl
shlb
mov
lods
xchg
je
mov
pop
call
jno
dec
fcmovbe
fldt
add
lods
push
das
pop
adc
cld
cmp
stos
xchg
jo
pop
inc
mov
scas
jp
sub
xchg
pop
repz
mov
nop
arpl
test
nop
inc
jge,pt
inc
mov
pop
shll
popf
add
sub
cld
enter
push
pop
xor
fidivrs
lock
sub
je
jo
mov
mov
xor
repz
add
push
movsb
jno
cltd
or
test
jl
adc
loopne
sub
jmp
inc
repnz
fs
dec
push
pop
sbb
jns
ljmp
cltd
fdivl
or
sbb
jecxz
and
lods
pop
lret
or
into
sub
dec
and
stos
mov
cmpsb
jno
mov
psadbw
cmp
cmp
les
xchg
out
lcall
aaa
mov
in
clc
je
leave
or
lcall
mov
scas
push
out
sahf
mov
hlt
jbe
cmp
mov
test
in
pop
js
mov
push
inc
cmpsb
call
adcb
push
jno
sub
mov
sbb
push
lahf
mov
mov
pushf
jbe
enter
sub
dec
adc
sub
cmp
nop
xlat
test
sub
mov
movsb
cmp
aad
es
mov
cmc
push
inc
jecxz
ret
mov
mov
jmp
jp
and
leave
dec
and
push
int
push
xchg
lret
cmp
mov
stc
into
xor
sarl
imul
leave
mov
dec
sbb
loope
mov
std
add
sbb
mov
jnp
ja
test
mov
out
insl
jmp
in
cmp
insb
pop
jle
sahf
hlt
cs
lret
fldl2t
sub
out
mov
je
imul
xor
popf
jmp
in
mov
stos
pop
lret
xchg
cmpsl
push
jb
and
icebp
mov
mov
and
addl
xchg
imul
push
jmp
psubb
jo
iret
int
xchg
cmp
xchg
fcoml
sarb
jo
sbb
lahf
fbld
jns
outsl
ljmp
cmc
add
mov
and
xor
mov
insl
xchg
cmp
push
arpl
ljmp
dec
and
jb
push
sbb
jmp
push
lcall
inc
cmp
popf
cs
mov
insb
xor
stos
sti
add
and
fiaddl
daa
cs
or
repz
xlat
rclb
pop
sbb
repnz
mov
inc
scas
adc
sbb
clc
dec
lahf
insl
repz
ja
push
mov
fucom
es
cmp
sahf
sahf
xor
out
sub
push
lret
hlt
xchg
jecxz
addr16
sbb
addr16
jmp
into
mov
aas
pop
pusha
mov
outsb
push
adc
scas
repnz
pop
sbb
add
sbb
lods
adc
cmp
iret
push
insl
pop
sub
or
adc
ljmp
pusha
shl
call
mov
mov
fcoml
arpl
push
clc
push
ror
ds
adc
push
sub
jp
sub
push
jmp
fs
sub
nop
dec
mov
nop
int
push
enter
pop
cmp
xor
fadds
jbe
jno
scas
sbb
add
insl
xor
in
rcll
xchg
pushf
and
or
xchg
imul
jne
imul
mov
xlat
aam
xor
outsl
mov
int
jnp
pop
into
imul
jnp
out
aas
addr16
call
sahf
rclb
cltd
rclb
or
loop
fisttps
les
cmp
ljmp
ror
pop
pop
das
or
repz
sub
jge
pop
fdivrl
xchg
popf
jecxz
mov
test
sub
inc
lret
je
aad
jp
push
mov
mov
ret
out
xchg
mov
dec
adc
cmp
imul
imul
jg
test
iret
xchg
pushl
enter
test
jae
push
and
int
ret
jbe
sbb
xchg
ja
das
popl
push
rcl
fildl
xor
inc
and
fnstcw
mov
cmp
xchg
and
push
ds
iret
subl
sbb
mov
fidivs
adc
pop
jp
cld
lret
cmpsl
inc
test
out
cmp
mov
jbe
mov
mov
cmpb
push
stos
int3
es
sub
leave
sub
mov
and
cmpsb
jmp
in
jmp
movsb
inc
mov
add
outsl
sarl
sbb
lahf
iret
or
adc
xchg
sub
fcmovnbe
push
inc
popf
mov
cld
iret
pop
sub
xchg
repnz
fisubs
push
les
fsts
jo
stos
inc
shr
dec
lea
outsb
xlat
sbb
xchg
xlat
jmp
insl
mov
movsb
fstpl
and
jl
cwtl
lret
sbbl
sub
adc
sbb
pop
pop
mov
fistpl
pop
mov
mov
cmp
inc
push
or
cmpsb
shlb
jo
lahf
xchg
mov
sbb
subl
cmc
pop
and
mov
in
cmp
movsl
push
and
adc
leave
mov
sar
mov
out
nop
push
sahf
jle
mov
mov
mov
pop
or
sbb
dec
test
mov
aam
mov
jb
cwtl
sbb
cmc
sub
es
fnstsw
add
sbb
lret
leave
add
sub
lret
aas
mov
out
popa
nop
sub
subl
cmp
mov
std
xor
ret
aas
bound
repnz
pusha
mov
lcall
fwait
push
in
insb
push
ret
mov
enter
stc
mov
fxch
mov
add
xor
sbb
lds
pop
mov
stos
and
ljmp
leave
cwtl
dec
pop
data16
nop
in
sbb
mov
mov
cs
adc
data16
cmc
mov
fldt
or
js
jns
cltd
jle
mov
fidivl
push
in
add
cmpsb
sub
push
or
aad
add
pop
insl
rcrb
or
test
ret
mov
mov
sti
push
xchg
xor
or
insl
and
es
cmpsl
or
jle
pop
dec
ret
inc
test
inc
sub
mov
mov
mov
in
rol
jecxz
mov
ret
outsl
mov
xchg
sub
dec
stos
aas
addr16
push
xchg
inc
dec
sbb
imul
sti
shll
inc
mov
pushf
movsl
dec
jne
xchg
fildll
lds
mov
repz
mov
decl
jne
mov
jp
loop
mov
mov
lcall
fisubrl
pop
xlat
insb
loop
inc
jbe
in
loop
jmp
mov
mov
add
shll
mov
movsb
leave
xchg
inc
imul
jbe
adc
test
push
fistpll
push
lods
add
sti
push
dec
and
bound
fwait
push
jb
xor
and
daa
and
jne
rcl
repnz
xchg
addb
sub
dec
testb
lret
sbb
sar
ja
jl
mov
jno
out
push
or
add
leave
leave
xchg
test
ret
imul
movl
ret
pop
sub
mov
inc
mov
lret
mov
ljmp
mov
pop
fdivrl
shll
in
jp
pushf
push
in
cmp
test
lret
jg
xchg
call
pusha
mov
jge
xorb
jo
jnp
pusha
test
loop
out
lret
and
sub
mov
mov
mov
enter
push
push
add
hlt
scas
mov
daa
push
insb
push
mov
lahf
add
cwtl
lret
mov
js
xchg
ds
addb
xchg
test
daa
ss
push
dec
cmp
xchg
les
cld
and
rclb
cld
hlt
scas
push
outsb
out
gs
jmp
fnstcw
xor
jle
cwtl
add
incl
jne
cld
fs
pop
push
mov
fs
adc
sahf
inc
test
cmp
lods
xorl
or
aad
or
adc
out
push
mov
pop
sbb
mov
bound
pop
sub
push
imul
movsb
xchg
adc
arpl
test
inc
divb
and
scas
and
dec
nopl
or
lahf
js
aad
fsub
inc
sbb
cmpl
fcmovne
mov
push
fcom
into
mov
sbb
cli
mov
mov
insb
sub
push
xor
lret
fwait
aaa
xor
jns
outsl
or
int
adc
push
es
pushf
add
mov
mull
push
std
sub
out
pop
popa
mov
dec
adcl
cmpsb
orb
lods
xlat
pop
ljmp
gs
sbb
jle
test
jnp
xchg
sub
add
push
insl
mov
cltd
mov
into
push
xor
inc
push
arpl
inc
movq
mov
pop
push
mov
pop
jge
and
test
sbb
jmp
cmp
push
daa
xchg
jne
ljmp
jmp
lods
adc
and
cmpl
mov
stos
pop
test
loope
jp
inc
adc
loop
sbb
nop
jge
inc
mov
loop
push
aad
stos
ret
in
push
test
pop
push
sbb
fcoms
cltd
daa
loop
test
push
mov
sbb
mov
inc
xor
rsqrtps
push
gs
iret
xor
movb
jmp
arpl
adc
or
cld
mov
imul
icebp
xor
inc
stos
ja
aam
mov
scas
test
inc
add
js
fwait
add
add
mov
dec
sub
out
push
out
inc
inc
xchg
cmp
push
dec
rcrl
icebp
das
fcompl
pop
frstor
jns
cld
loopne
inc
pop
test
xor
ret
or
aas
xchg
mov
cwtl
xor
icebp
pop
iret
mov
xchg
mov
xchg
cli
or
xchg
fists
add
inc
jbe
mov
jo
shll
je
dec
sub
cmp
fiadds
push
aas
cmpsb
jae
mov
jns
mov
je
push
dec
jp
pusha
fsubs
leave
or
scas
out
pushf
push
xchg
and
mov
mov
hlt
mov
push
test
pusha
mov
xchg
out
mov
shrl
rcll
mov
and
out
jns
icebp
loopne
movsl
push
mov
add
pop
dec
iret
add
dec
rcrb
mov
xor
jl
inc
repz
aaa
xchg
push
pop
or
lock
mov
push
test
les
mov
xor
ja
inc
inc
enter
sbb
jne
imul
cmp
insl
inc
cmc
inc
mov
add
jb
lock
pop
dec
inc
icebp
dec
inc
inc
pop
clc
testb
lret
lock
fwait
jl
adc
loopne
notb
push
shll
call
pop
push
sbb
xchg
sbb
push
jge
clc
ja
mov
aaa
frstor
pop
ja
decl
ficoms
fs
dec
cld
ljmp
in
sub
push
jg
test
jmp
ja
arpl
in
push
psadbw
and
icebp
xor
arpl
xorl
js
orl
mov
jae
popa
push
push
popf
jb
adc
fistl
mov
jp
push
jg
or
inc
mov
cmp
adc
fndisi(8087
jae
mov
inc
cld
xor
in
mov
mov
ds
sbb
mov
mov
movsb
mov
mov
sti
aam
mov
fwait
clc
into
fwait
outsb
xchg
sti
popf
pop
pop
xchg
xor
call
loope
aam
pop
dec
xchg
dec
test
subb
out
jge
loope
cmpsl
pop
dec
mov
jmp
jp
mov
inc
test
mov
test
cld
arpl
loopne
lret
sbb
jge
rorl
xchg
vpshufd
pop
shrl
loop
test
cmpb
add
lret
adc
stos
xchg
sbb
jne
xor
nop
repnz
loop
mov
push
sub
add
popf
pop
jg
lahf
mov
mov
add
jmp
xchg
xchg
cwtl
fdivl
sub
mov
out
jo
dec
or
loope
jmp
insl
jns
sub
test
mov
cwtl
dec
jg
xor
lret
sub
sbb
in
mov
stos
jle
xchg
call
and
inc
aaa
gs
insl
inc
sub
pop
mov
outsb
or
jl
mov
cld
push
sbb
xchg
add
xor
test
out
xchg
lea
aas
xlat
adc
inc
data16
mov
je
inc
xchg
or
push
mov
mov
aas
push
cmp
out
cwtl
cmp
mov
inc
add
mov
dec
fs
cli
cs
push
ret
movsb
mov
pop
cs
stos
add
andl
add
ret
call
mov
mov
mov
lahf
mov
inc
mov
or
jle
mov
mov
mov
xchg
adc
or
pop
fisubrs
lcall
mov
mov
sub
in
gs
stc
xchg
jbe
inc
adc
imul
add
cs
push
cs
pushf
dec
or
in
jbe
incb
pusha
popa
sbb
maskmovq
testl
push
es
sbb
dec
add
dec
icebp
pop
push
cli
push
in
mov
lods
jmp
or
stos
push
sbb
sti
jg
inc
pop
mov
out
sarl
sbb
mov
fisubs
and
xchg
in
adc
cld
mov
pushl
push
ss
jbe
imul
int
in
lret
mov
sub
xchg
fstps
xchg
inc
mov
mov
lds
mov
cltd
movsl
cmp
insb
fwait
jle
notb
mov
arpl
ja
movsb
addb
insb
rcl
int
rolb
mov
fldl
ja
mov
test
mov
rcrl
mov
lret
ss
sub
xchg
call
mov
fcmovb
loopne
and
add
mov
xlat
enter
sbb
sbb
test
jnp
sub
dec
xor
jo
cmp
daa
sbb
loop
add
or
jns
testl
sahf
sub
stc
inc
loope
dec
and
cmp
xlat
inc
lret
xchg
xchg
xchg
popa
jnp
nop
add
enter
movsl
das
in
movsb
loopne
leave
pop
out
in
sub
rcrb
xor
int
add
xchg
push
ficompl
cmp
loopne
jecxz
or
jmp
lods
aas
pusha
mov
xchg
adc
data16
xchg
push
mov
pop
lock
pop
test
xor
ss
test
popa
xlat
sub
fwait
fildll
ficoms
out
cmp
fs
cs
leave
cs
and
sti
cli
or
jmp
mov
mov
lock
lods
out
out
sub
lret
iret
sbb
pop
pusha
mov
push
mov
sub
dec
mov
enter
ret
cmp
xchg
jge
mov
xlat
jg
imul
adc
push
cmp
add
add
and
mov
xchg
and
fwait
aas
ljmp
jbe
cltd
mov
les
dec
loope
mov
inc
or
int3
add
test
mov
fcomps
faddl
pop
mov
sub
mov
xorb
movsl
orb
push
ljmp
pop
loopne
andb
int
or
insb
test
mov
shl
sbb
xchg
aaa
jne
sbb
mov
cmp
pop
sub
jns
lea
iret
push
mov
pusha
mov
dec
or
push
repnz
adc
nop
pop
dec
dec
scas
fucom
push
movsb
mov
repz
sti
and
push
mov
addr16
stos
pop
int
xchg
cmpsl
pop
out
adcb
dec
stos
pop
jns
jo
mov
inc
cli
inc
cltd
bound
sbb
loope
push
mov
test
xor
mulb
adc
sahf
or
jno
push
adc
xor
rorl
mov
xchg
push
sub
mov
repz
ret
pop
imul
daa
mov
xor
out
cmp
push
shr
movsb
aaa
sti
out
sahf
scas
test
inc
iret
push
xchg
pop
jecxz,pn
roll
aas
dec
popa
shlb
inc
inc
push
or
fwait
mov
arpl
imul
add
or
fdivl
pop
mov
pop
scas
xchg
cmpsb
test
sbb
gs
cmp
pop
inc
xchg
mov
iret
mov
cmp
aad
rcll
test
mov
and
dec
shll
jmp
test
xorb
enter
pop
pop
dec
push
xchg
jne
mov
ret
pop
cltd
lahf
scas
daa
ret
jp
jne
out
and
incl
dec
pop
inc
popa
jns
jl
pop
mov
in
pop
push
push
into
sbb
jno
sbb
out
cmp
fistpl
mov
push
mov
pop
roll
pop
mov
cmp
and
lret
sub
gs
xor
and
mov
pop
scas
mov
mov
outsb
mov
orl
pop
ret
pop
fbstp
fmuls
mov
out
adc
add
mov
aam
mov
sahf
filds
mov
sub
push
sbb
arpl
add
push
scas
push
pop
into
mov
bound
test
push
push
dec
ror
mov
arpl
pusha
inc
jnp
int3
adc
shrl
lea
lock
dec
cli
test
lahf
cmc
movsl
repnz
xchg
pop
adc
fs
faddl
ljmp
xchg
sbb
scas
pop
cli
inc
sbb
dec
sub
dec
ja
and
popf
cmp
push
mov
loope
mov
shl
mov
cwtl
mov
mov
fwait
imul
call
mov
dec
jp
inc
push
nop
cwtl
jns
mov
es
daa
andl
icebp
mov
decl
scas
aam
ljmp
rorl
shr
imul
push
push
xchg
pop
pop
icebp
cltd
dec
es
sti
lock
test
test
gs
xchg
or
adc
mov
mov
pop
or
dec
add
mov
mov
popf
scas
movsb
popa
lods
je
cwtl
add
jp
in
sub
inc
add
dec
mov
cmp
mov
sub
daa
aam
sbb
negl
test
mov
clc
jmp
inc
aaa
sti
imul
icebp
rclb
fbstp
fistpl
sub
cltd
imul
jne
out
mov
data16
mov
fs
mov
mov
and
sub
imul
adcl
xor
lret
pop
int3
adc
fnsave
lret
xor
pusha
inc
push
and
into
inc
loopne
movsb
inc
mov
dec
sbbl
dec
cltd
xor
inc
les
mov
pop
stc
cmpsb
lcall
stos
ret
leave
js
cs
jecxz
nop
jecxz
lea
adc
adc
outsb
or
iret
stos
push
popa
movsl
out
sarb
push
out
mov
addr16
xor
and
and
add
xchg
jne
int
lahf
jge
mov
cli
sub
push
decb
fwait
cmpsl
loope
mov
add
stc
sub
mov
ffreep
rol
mov
lea
adc
aad
in
cmp
cmp
cli
or
mov
sti
mov
adc
iret
adc
dec
or
pop
fisttps
stos
mov
divl
or
lahf
xlat
lcall
mov
sti
mov
fdivp
xchg
or
sub
das
outsb
inc
xor
into
rclb
ds
out
stos
cmpsl
int3
adc
loopne
aaa
dec
arpl
inc
jns
into
shll
rcll
or
leave
mov
jl
dec
cltd
push
mov
pop
addl
out
fidivrl
nop
ss
jo
pop
js
fmuls
incb
lret
outsb
aam
adc
out
jge
test
aaa
mov
dec
cltd
add
divb
pusha
icebp
sub
adc
insb
in
lahf
enter
pop
mov
jbe
xchg
aaa
mov
int
xchg
clc
js
fs
cwtl
cmpsb
es
or
jecxz
mov
enter
aad
mov
int3
popa
pop
pop
addl
mov
xor
aaa
pusha
pop
in
xor
and
pop
cmp
sbb
loop
addr16
hlt
inc
js
mov
mov
loop
or
cmp
push
xchg
mov
dec
ds
popl
mov
xorb
incl
sbb
push
movsb
fldt
sub
lock
or
out
clc
adc
nop
push
clc
psrld
push
push
cmpsl
dec
mov
xor
and
and
xchg
push
cmp
vandps
outsb
ja
xchg
insb
mov
insb
rorl
loope
xchg
pop
xchg
xchg
jnp
jb
mov
lea
inc
ja
insb
sahf
insl
in
cli
xor
dec
hlt
xchg
dec
pop
int
xchg
xor
adc
xchg
cmp
pop
push
push
jp
int
cmp
xchg
out
into
aad
addr16
inc
pop
aaa
nop
jmp
cmp
out
xchg
iret
movsl
push
icebp
loopne
xor
dec
xor
jecxz
xor
and
dec
adc
mov
int
push
xchg
lcall
xor
mov
fsubrs
xchg
xchg
out
mov
add
adc
dec
mov
pusha
pop
adc
aas
imul
lahf
lods
test
inc
shl
jecxz
or
push
in
nop
into
xchg
jnp
mov
inc
scas
cld
stos
xlat
inc
xor
dec
inc
pop
push
out
cmp
cmp
push
sbb
add
inc
cmp
std
bswap
xor
and
inc
fisubrs
pop
xor
mov
adc
test
push
loopne
lcall
popf
sbb
jmp
xor
xor
xchg
and
pop
cld
and
aas
mov
jmp
insl
aam
fnstcw
cmp
roll
xchg
cmp
mov
add
push
bound
mov
decl
test
jne
sbb
pop
jge
pop
jnp
lea
cmpsb
in
cld
jle
xchg
roll
dec
push
pop
xchg
jb
in
sbb
xchg
fmulp
out
out
sub
mov
mov
cltd
jmp
ljmp
jnp
mov
sub
jecxz
data16
inc
and
add
scas
data16
cmc
sbb
xchg
cmp
pop
push
sub
xchg
ljmp
data16
icebp
and
idivl
int
push
push
mov
loope
imul
popa
jp
mov
movsb
rcrl
pxor
imul
shrl
add
cmpsl
pop
sub
mov
mov
shll
and
test
mov
fnstcw
xor
stos
mov
sbb
push
mov
mov
push
lret
in
cltd
loop
dec
mov
or
dec
lods
ja
adc
xchg
fs
ret
repnz
sub
sbb
rcll
sub
sbb
inc
outsb
or
or
repnz
mov
dec
pop
cltd
lahf
aam
mov
xchg
pop
pop
out
jg
aaa
popf
test
test
xor
pop
mov
lock
mov
cmpsl
cmp
pop
jl
fs
dec
xorb
and
xor
add
or
bound
in
inc
sub
pusha
push
mov
inc
push
jp
rcr
mov
outsl
adc
or
sbb
jbe
pop
in
push
leave
xor
shl
jp
sti
ror
sub
mov
push
pop
pop
add
mov
fmuls
fs
pushf
add
or
xor
aas
sbb
ficoms
mov
mov
and
add
add
inc
std
enter
mov
mov
and
int
inc
fs
sbb
pop
dec
and
pop
dec
shlb
sbb
push
fnsave
scas
xchg
mov
push
ss
sbbb
jecxz
js
mov
pop
psrad
sbb
dec
cmp
lds
inc
jns
mov
push
std
outsb
sbb
into
fsubrs
insl
mov
mov
add
cmpsb
aam
sahf
test
mov
add
cld
loop
xor
xor
xchg
sub
loope
gs
arpl
pop
sti
mov
dec
fwait
push
or
in
imul
mov
xchg
sub
xchg
sub
mov
add
movsl
add
test
sti
cmpsl
push
mov
inc
fs
sub
xor
sbb
movl
std
jmp
xchg
jecxz
dec
test
test
sbb
or
mov
insb
push
mov
enter
or
sbb
vpshaw
in
cs
call
push
orb
lcall
cmpsl
xchg
test
in
mov
lcall
xchg
leave
xchg
aaa
ret
inc
out
jecxz
xchg
mov
sub
shr
data16
xchg
scas
dec
and
cmp
inc
clc
or
clc
gs
jae
mov
jg
and
xlat
xchg
adcb
ja
sub
mov
sbb
xchg
mov
dec
push
rcrl
xchg
aam
aaa
or
pop
jle
fldl
stos
pop
inc
and
xchg
scas
pusha
insl
add
dec
inc
xchg
mov
cmpsl
xor
push
adc
add
fisttpl
dec
test
test
cld
inc
dec
push
adc
jns
and
fs
lahf
mov
aas
ss
divl
and
pushf
pop
or
and
fnstcw
push
xchg
stos
cwtl
jmp
leave
push
ljmp
mov
fs
jmp
jle
xchg
mov
shll
push
jnp
jb
adc
mov
popf
repz
xchg
movsl
sub
aam
stc
ret
push
lea
fst
popf
fsts
dec
and
loopne
test
stos
cli
push
xor
ret
inc
std
outsb
in
aas
mov
inc
xor
inc
sbb
xchg
mov
mov
in
movsl
mov
sub
inc
out
movsb
rcl
inc
outsb
shrb
lods
inc
rolb
mov
push
push
or
out
inc
cwtl
rorl
cs
xchg
ljmp
imul
add
push
mov
push
push
push
and
imul
gs
jne
dec
lock
popf
mov
mov
stos
inc
scas
cli
and
out
or
jb
ds
aas
inc
lret
inc
dec
adc
fstps
test
lret
pop
jno
jmp
cli
lcall
in
in
mov
mov
subb
fdivrs
cmp
aaa
jns
test
out
jae
cmp
scas
pop
xor
mov
dec
fidivrl
or
outsl
push
icebp
sub
loope
fsubrs
push
cmp
in
or
stc
adc
aam
adc
pop
stos
xchg
inc
repz
adc
sub
or
aam
outsl
out
add
fdivr
xchg
testl
inc
fs
leave
cli
mov
cmp
or
sti
or
add
and
ljmp
dec
mov
movsb
lds
unpcklps
mov
mov
cmp
mov
sti
jbe
repnz
mov
addr16
testb
bound
mov
mov
push
xchg
sub
dec
imul
xlat
lret
mov
sarb
mov
out
push
call
mov
xor
mov
and
sarb
pop
dec
push
push
insb
mov
push
push
or
jno
dec
pop
pop
mov
lods
mov
pop
int3
scas
cmpsl
subb
push
inc
test
ret
push
je
int3
mov
lods
adc
adc
jno
cmp
mov
adc
cli
or
aam
and
cwtl
int3
imul
fcomip
lds
jmp
dec
add
fsubrp
jl
fisubs
jg
pop
mov
stc
movsb
test
jg
shlb
clc
jmp
push
pop
into
mov
jne
hlt
roll
movsl
es
orl
imul
cmpsb
adc
cmc
xor
imul
mov
andb
or
adc
add
inc
sub
jmp
testb
jns
mov
inc
sub
dec
jbe
push
or
adc
les
push
das
dec
sbb
mov
push
js
xchg
dec
cwtl
add
jmp
aaa
bound
mov
mov
inc
stc
mov
push
rep
aaa
adcl
pushf
ds
outsl
scas
fisttpl
or
jnp
mov
inc
xor
aas
lea
pop
lods
push
insb
nop
jp
rsqrtps
push
in
mov
dec
test
mov
pop
inc
fnstsw
cmp
jbe
lds
sahf
rcrl
test
fsubrs
sub
divb
sub
or
xor
pusha
aad
imul
js
jp
lea
push
inc
sarb
jecxz
shlb
aaa
and
and
push
push
adc
sbb
mov
es
test
dec
cmc
sahf
inc
and
lods
sbb
inc
push
int
sbb
or
inc
push
push
push
sbb
or
jnp
test
jno
mov
push
add
push
xchg
scas
jne
xlat
cmpsl
xlat
icebp
mov
lret
dec
jb
js
popf
test
dec
push
adc
sbb
leave
jmp
mov
rclb
hlt
loopne
into
loopne
scas
mov
insb
inc
popl
sub
pop
push
xchg
out
lret
ret
push
xchg
outsl
or
mov
mov
ja
sub
mov
ret
pop
xor
iret
test
stos
cmp
mov
mov
loop
and
in
fnstsw
xchg
and
shrl
pop
xchg
push
mov
pop
test
pop
out
jae
shr
sub
movsl
scas
repz
mov
mov
inc
push
aam
lds
mov
mulb
nop
lcall
or
pop
mov
jmp
mull
adc
cs
shrl
sbb
arpl
popa
ret
loop
adc
gs
js
iret
sub
repnz
jns
mov
ds
inc
mov
mov
lahf
push
mov
loope
testb
xor
mov
pop
lock
loope
es
in
insl
cwtl
mov
or
ficompl
mov
aaa
xchg
stos
mov
repnz
dec
out
push
jne
cmp
adc
xchg
cmpsl
mov
lahf
adc
pop
xor
inc
dec
aad
lcall
push
mov
cmpsb
sbb
shr
mov
jl
test
adc
sub
jle
inc
xchg
inc
mov
and
push
sahf
fsubs
and
sti
lock
std
dec
lret
mov
adc
adc
loop
lcall
push
pushf
imul
int
push
lahf
orl
ret
mov
iret
cltd
mov
xor
mov
pop
aad
pushw
in
fmull
cmpsl
inc
mulb
sahf
mov
or
jl
aas
xor
scas
sub
or
jp
xor
sbb
and
daa
les
pop
ja
popf
dec
lahf
cmpsb
std
push
bound
lcall
test
mov
adc
dec
or
cmpsb
jmp
repz
adc
lds
mov
xchg
add
arpl
imul
dec
jns
mov
sub
imul
xor
jae
bound
push
insl
pop
mov
mov
cmp
mov
push
pop
mov
mov
and
inc
int
mov
inc
mov
dec
lret
shl
sbb
popa
and
scas
das
mov
mov
insl
xchg
std
rcll
int
push
mov
incl
addb
adc
inc
mov
in
push
sub
add
ret
dec
mov
xor
jl
add
mov
push
out
gs
xor
dec
pop
test
mov
and
imul
dec
sbb
into
add
inc
cmp
or
and
inc
jle
fldenv
pop
mov
dec
je
sti
mov
dec
gs
and
inc
inc
aas
mov
movsl
imul
and
and
imul
adc
loope
mov
mov
es
mov
int3
lea
push
cmp
dec
dec
scas
and
pop
cmp
inc
jecxz
mov
mov
xor
dec
test
cmp
mov
into
and
cltd
mov
pop
add
inc
xchg
lcall
push
mov
mov
pop
lahf
add
orl
sahf
roll
push
bsr
sbb
rcrb
adc
shr
xchg
xorb
ds
sbb
cmp
pusha
add
add
lahf
xor
aad
enter
fsubrl
ja
push
pop
dec
into
test
movsw
lahf
sbb
roll
enter
mov
outsl
popa
cmp
sbb
jle
scas
loopne
xchg
add
inc
inc
in
cs
in
test
repz
aam
xchg
and
push
jmp
les
push
xorb
stos
inc
ss
jno
pop
cmp
fcmovnb
sbb
insl
andb
in
xchg
aaa
mov
add
call
cmp
jecxz
pop
dec
es
mov
pop
and
mov
loop
lods
cmp
inc
popa
stos
lock
testl
imul
jae
and
sub
lret
jbe,pn
dec
add
mov
scas
mov
dec
cli
iret
lds
inc
lds
xchg
xchg
sub
sub
outsb
add
fwait
arpl
cmpsb
sub
lds
cwtl
mov
or
dec
pop
mov
or
roll
mov
inc
rcrb
push
cltd
sbb
mov
sbb
inc
jnp
mov
loopne
pop
xchg
vucomisd
adc
ljmp
jno
jg
add
xchg
xchg
jo
test
mov
insl
faddl
icebp
test
cmc
out
push
test
aaa
test
in
inc
or
sti
push
cwtl
push
fs
sbb
inc
movsl
insl
mov
aam
mov
xchg
cmp
dec
mov
daa
jle
inc
arpl
dec
test
lods
cld
insl
test
in
aaa
test
xchg
std
jle
mov
mov
ret
push
add
xchg
pop
jne
gs
stos
cmp
jge
fdivs
popf
sbb
mov
jnp
cmovbe
xor
test
mov
js
cmp
inc
je
sbb
mov
and
repnz
cld
sub
jbe
mov
sahf
xor
add
shrb
add
and
mov
icebp
aaa
roll
push
cmp
xchg
sub
inc
scas
fwait
mov
xchg
mov
sbb
stos
mov
mov
fistl
xor
int
xchg
pop
inc
jg
push
rolb
ret
and
mov
cs
dec
popf
push
mov
movsb
xor
mov
cmpsb
sub
ljmp
mov
daa
lahf
inc
push
test
sub
in
fs
fs
and
call
call
adc
lret
mov
mov
imul
xor
mov
mov
xlat
or
outsb
inc
xor
sub
pusha
dec
cmpsb
lds
add
shlb
jmp
pop
sahf
insb
adc
call
fcoml
into
adc
ljmp
out
cmp
test
inc
xchg
cmp
dec
xchg
and
sbb
sub
push
xchg
les
push
xchg
in
imul
sub
jb
mov
mov
insb
mov
sbb
jne
jbe
mov
repz
dec
xchg
jnp
xchg
roll
xor
das
stc
rcrl
sub
jns
cmp
mov
adc
push
jne
or
lea
add
mov
push
jle
xor
mov
outsl
push
inc
push
xchg
and
push
cltd
inc
mov
dec
mov
loopne
call
or
and
xchg
pusha
stos
mov
mov
lret
cmpsb
cmp
inc
out
nop
sub
mov
outsb
sub
mov
dec
stos
jmp
lahf
sub
decl
mov
bound
lcall
push
mov
out
pop
mov
lcall
add
xchg
inc
pop
repnz
adcl
xor
in
movsb
jo
hlt
mov
cmpsb
ljmp
movntq
out
push
pop
cli
inc
jbe
jb
and
inc
mov
adc
dec
mov
jb
lock
fcoms
addr16
dec
insb
and
fiaddl
pop
sti
loope
push
xor
repz
mov
fmul
xchg
movsl
and
and
xchg
ret
mov
dec
xchg
and
sub
aad
arpl
xchg
dec
repnz
scas
add
je
out
or
mov
out
imul
lcall
movsl
fists
lds
add
jecxz
jmp
cmp
lods
pop
xchg
sbb
imul
imul
nop
divl
std
push
mov
sahf
or
add
sub
dec
clc
enter
lock
hlt
push
repnz
aas
and
rcr
clc
arpl
addr16
jnp
outsb
pushf
inc
xchg
cmp
mov
inc
ja
adc
stos
or
cmp
test
add
std
incb
sub
outsl
ss
outsb
add
sub
jg
mov
movsb
jbe
das
iret
jo
test
lds
es
fisttpll
ss
add
mov
scas
adc
sub
xchg
mov
sbb
lret
lret
pusha
mov
or
mov
xor
sar
add
pop
imul
mov
mov
and
jns
adc
cmp
add
ret
jae
pop
je
repnz
ja
outsb
lock
jnp
pusha
jns
nop
mov
inc
inc
inc
sub
cmp
int3
inc
into
jnp
jle
cmp
sarl
or
xchg
repnz
jae
loop
mov
sbb
mov
cmp
js
movsl
cld
rcr
clc
dec
adc
and
xchg
jo
aad
lods
add
adcl
sub
add
push
subb
lcall
xorb
adc
adc
popa
js
or
popa
flds
aad
dec
cld
fs
andl
xor
fnsave
cmpl
test
mov
movl
fimuls
daa
mov
mov
es
fisubs
lods
push
scas
int
movsb
leave
cmpsl
les
mov
xor
ja
fisubrs
cmpsl
fiaddl
aad
fwait
or
mov
pop
mov
das
pop
iret
and
pop
mov
pushf
xchg
push
sbb
dec
dec
dec
jl
inc
cmp
xor
call
imul
nop
add
fwait
in
inc
gs
push
dec
push
sahf
jge
mov
cld
lods
ret
dec
loope
xchg
mov
and
andl
fcomps
push
jb
lods
cwtl
jmp
and
out
fs
jmp
dec
xor
mov
sarl
addr16
mov
sahf
test
in
fs
loope
imul
adc
fbld
ret
movsl
push
loope
inc
xchg
imul
inc
fsubrl
sbb
adcl
pop
repz
imul
sarl
adc
mov
aad
imull
pop
lock
outsb
inc
xchg
fcmovbe
into
mov
xchg
xchg
fadd
xlat
mov
jno
ljmp
je
faddl
adc
push
cs
jns
stc
test
sub
lret
testl
cwtl
lock
dec
iret
cmp
push
out
orl
pop
in
cmp
in
popf
mov
mov
repz
push
pop
das
jmp
andl
lods
mov
shlb
mov
pop
int3
add
jge
ja
adc
fcmovnu
xchg
xchg
xlat
pop
addr16
insb
sbb
mov
dec
addl
bnd
mov
notl
fcomps
into
ss
lret
mov
jle
out
out
adc
add
xchg
or
or
dec
xchg
mov
cmp
sbb
mov
in
inc
outsl
popf
push
and
aam
xchg
outsb
or
push
mov
add
fs
addr16
inc
mov
mov
mov
xchg
jg
stos
je
xchg
jae
add
clc
outsb
popf
out
fmuls
and
add
add
popa
aam
add
mov
mov
mov
and
ss
js
mov
inc
fidivrl
outsl
jp
ror
cmpsl
lock
aam
inc
mov
mov
bound
aad
lods
or
jg
popf
push
mov
testb
xor
push
jo
paddb
pop
pop
lods
test
js
repz
rcrl
arpl
sbb
out
sti
jae
negb
imul
cli
popf
mov
add
add
ds
movsb
aad
ret
mov
imul
movsl
lahf
mov
pop
push
repnz
imul
adc
jp
in
add
lock
cmp
or
push
cld
lds
push
lahf
data16
or
mov
mov
mov
cld
cmp
ret
lret
adc
test
xchg
add
mov
mov
push
movsb
inc
and
push
adc
into
pop
jle
and
jmp
subl
ffree
sub
adc
pop
ret
add
sub
stos
xchg
adc
popf
mov
push
int
jp
pusha
or
xchg
lods
ret
or
bnd
sub
mov
xchg
pop
stos
pop
outsl
sar
les
mov
jo
ret
mov
jbe
push
jo
sub
jle
push
mov
pushf
nop
mov
lcall
xor
movsb
cld
mov
ficoms
out
push
sahf
mov
clc
mov
scas
test
scas
shll
pop
test
or
push
aam
cmp
into
test
mov
xor
negb
push
test
hlt
pop
scas
push
sub
mov
ljmp
call
or
popa
xchg
cli
sub
cmpsb
in
push
adc
fildll
mov
daa
adc
shlb
or
add
cmp
repnz
mov
in
adc
inc
loopne
and
movsb
data16
stc
adc
dec
aam
push
lea
push
jbe
lcall
mov
inc
lods
popf
sti
xchg
xor
xchg
stos
cltd
ljmp
icebp
mov
adc
imul
jle
adc
mov
dec
or
mov
cwtl
das
and
dec
repz
cmp
dec
push
adc
push
xchg
pop
gs
out
xchg
in
lock
xchg
pop
push
lods
aaa
notb
pop
aad
out
stc
cmp
ret
mov
cli
mov
add
aad
fdivrp
fnstcw
adc
int3
js
ss
je
cmp
push
inc
scas
stos
or
mov
js
jnp,pn
inc
mov
out
mov
adc
into
test
popf
rcrl
scas
insl
sbb
fwait
test
pop
js
mov
out
mov
test
loope
std
pop
xor
lret
hlt
or
dec
lret
aaa
or
or
cs
dec
in
mov
pop
jo
jmp
shl
push
mov
pop
andl
fcoml
pop
push
mov
addl
jne
clc
sub
pop
test
in
dec
pusha
add
out
and
out
pop
fistps
mov
xor
ds
enter
mov
push
iret
sbb
fdivrl
insb
lds
out
jnp
leave
insl
daa
add
repnz
ret
adc
sbb
loope
mov
aas
enter
jp
cmp
mov
sti
aam
arpl
fnstcw
je
out
das
in
inc
bound
aam
jecxz
pop
fs
sub
stos
xchg
or
lds
out
aad
movsl
push
stc
pop
xlat
lahf
push
subb
pop
sub
les
pop
popa
out
test
aaa
imul
cmp
or
jnp
test
subb
daa
push
movsb
pop
call
pop
add
jp
push
jo
pop
pop
jle
bound
sbb
cld
xor
inc
stos
add
sub
aaa
iret
lret
xlat
out
jnp
adc
cld
pop
inc
fldl
jns,pn
rorl
inc
xchg
das
jno
or
or
push
jle
test
std
fwait
sub
mov
negb
sbb
cwtl
dec
std
adc
cmc
xor
sub
ja
mov
push
xorb
lock
bsf
xchg
mov
mov
fs
jmp
xor
stos
test
in
addr16
cmp
scas
into
xor
push
cmp
pop
pop
push
inc
adc
int3
dec
adc
js
shrl
into
call
sub
call
enter
das
sub
inc
in
sub
adcb
xchg
imul
mov
inc
addl
xor
fcmovnu
sbb
aas
inc
dec
aam
ljmp
add
mov
or
lahf
push
mov
daa
push
jae
push
mov
mov
xorb
faddl
jmp
ret
rcll
dec
lea
nop
sbbb
add
dec
inc
enter
out
cmp
stos
pop
divb
mov
push
outsb
jns
sbb
insb
mov
add
inc
fstpt
aaa
adc
add
scas
xor
mov
sub
fildl
shld
dec
push
sub
mov
test
out
shll
call
add
stos
xchg
inc
xor
outsl
ret
dec
es
enter
mov
cwtl
mov
or
mov
push
testl
out
push
xchg
imul
lret
adc
jmp
fwait
add
arpl
insb
sti
sti
push
sub
pop
jge
xchg
fsubl
loop
xchg
cmp
sub
add
adc
add
add
mov
mov
cmc
mov
cmpsl
mov
and
cmc
dec
mul
or
into
push
sahf
daa
cmp
mov
and
mov
insb
sbb
jp
scas
insb
test
popf
xorl
lea
divb
sbb
jno
mov
cmpb
add
xor
mov
pop
ja
cltd
mov
xor
cld
mov
mov
out
das
xchg
add
cli
jecxz
xor
inc
or
dec
in
je
mov
push
mov
in
and
mov
dec
leave
or
fldcw
sbb
iret
outsl
iret
and
nop
fwait
inc
inc
xor
xchg
mov
and
jmp
mov
push
cmpsb
aam
std
add
ret
jb
icebp
imul
adc
in
push
sbb
scas
cmp
cwtl
inc
cmp
scas
add
mov
popf
bound
mov
jmp
jae
je
adc
jo
stos
or
and
sbb
push
jle
mov
dec
jbe
pushf
scas
or
sub
xchg
cld
movsl
push
lods
lret
xlat
data16
push
shll
sahf
and
or
push
insl
sbb
and
push
in
add
pusha
dec
mov
cmpsb
fcomps
jnp
negb
je
ja
pop
xor
pop
sbb
xor
and
sarl
add
dec
mov
xchg
xchg
sbb
lds
rolb
mov
jp
xchg
dec
pop
inc
inc
sbb
jecxz
pop
push
or
lret
push
xor
fistpll
into
cmpsb
push
mov
outsl
in
shll
icebp
lods
mov
test
mov
push
daa
fwait
scas
mov
sub
pop
mov
lods
into
jb
insb
xor
imul
add
jae
mov
cli
in
int3
call
cli
sbb
adc
or
xchg
out
std
int3
pop
dec
rclb
sbb
in
mov
push
pop
aam
dec
orb
sub
add
xchg
mov
and
mov
xor
pop
and
rcrb
pushf
xor
xor
dec
mov
push
xor
pop
adc
xor
adc
enter
shll
cs
cmp
adc
loopne
les
mov
jge
jmp
sbb
mov
pop
adc
in
add
inc
hlt
lods
leave
cwtl
aaa
sahf
dec
imul
add
outsb
xchg
outsl
in
aad
add
pop
outsl
jecxz
faddl
outsl
cli
jb
test
hlt
adc
push
jg
mov
xor
adc
and
xchg
pop
adc
dec
ret
stc
pop
and
push
aad
jno
ret
xchg
cmpsb
jmp
add
inc
cwtl
push
pop
jmp
pop
jge
xchg
ret
xchg
dec
es
dec
xchg
pop
je
pushf
rcll
lock
outsl
pop
dec
jne
pop
imul
outsb
cmp
insb
mov
dec
jae
in
and
shrl
adc
pop
fs
push
icebp
add
adc
ja
jbe
call
xchg
enter
dec
jg
shrl
jnp
or
std
push
hlt
mov
pop
pop
loopne
arpl
pop
push
dec
nop
push
jmp
pop
jbe
imul
cli
dec
mov
lods
in
pop
adc
jae
xchg
fnstcw
add
fs
mov
std
add
dec
rolb
jbe
add
pop
dec
mov
fadd
das
test
pop
xlat
dec
leave
ret
add
sub
leave
icebp
mov
fildl
loope
xchg
pop
cmpsb
xchg
int3
mov
jl
add
push
lret
add
dec
push
repz
js,pn
xchg
mov
in
or
mov
push
mov
push
xor
ret
dec
and
std
cwtl
ret
lods
sbb
sbb
stos
insl
sahf
xorb
jp
cmp
fwait
leave
call
fidivs
lret
xor
xor
pop
cmp
aad
pop
xor
insl
jnp
mov
mov
ja
xor
ss
aad
inc
pop
pop
push
cwtl
pop
mov
xchg
gs
xchg
out
mov
pop
repnz
ret
mov
call
jmp
gs
loop
xchg
rcll
xor
lds
loopne
jno
movsb
dec
add
add
inc
data16
cld
aam
jp
xchg
hlt
adc
push
push
mov
push
add
mov
in
fstpt
cli
cmp
in
or
adc
adc
xchg
and
outsl
cs
sbb
add
int
mov
push
lahf
adc
adc
cwtl
mov
push
jge
mov
dec
inc
jge
jo
jg
repnz
and
pop
xchg
xor
in
pop
xlat
dec
in
mov
inc
fistpl
mov
sbb
or
cmpsb
mov
pop
cmp
ret
mov
jge
mov
clc
and
in
repnz
cmp
sbb
jmp
into
xchg
stos
iret
pop
adc
aad
je
scas
add
add
sbb
icebp
add
js
sbb
mov
cmpsl
mov
mov
js
add
xchg
or
or
sbb
dec
stos
inc
adc
xor
push
sahf
pop
loope
lods
out
jb
push
add
movsl
fdivr
lods
mov
scas
je
mov
jmp
dec
insl
mov
repnz
xchg
lcall
popa
stos
cmp
ficomps
pop
add
pop
fwait
lods
adc
jmp
jmp
cmp
movsb
vmovupd
sbb
xchg
mov
pop
pop
inc
mov
sbb
inc
mov
pop
rcr
rclb
adc
push
inc
pop
imulb
jmp
push
dec
rclb
sub
mov
fwait
xor
xchg
push
jbe
cmc
and
mov
push
add
aaa
lahf
in
loopne
jnp
loopne
sub
dec
cmpsb
mov
xchg
push
fcoms
pushf
das
jecxz
sbb
mov
push
dec
ljmp
cmp
jno
fdivs
adc
inc
sahf
push
lret
out
xchg
xchg
sub
pop
les
out
and
movsl
jno
jecxz
fsub
imul
popl
or
insb
daa
push
popf
test
lds
pop
sub
imul
pop
pop
sub
inc
mov
cmp
xlat
cmp
and
cmp
stc
or
dec
pop
mov
xchg
ror
jbe
lahf
test
add
push
cltd
push
adc
xchg
cmp
loop
xchg
cmpsl
add
push
mov
jg
clc
cmp
leave
jecxz
jp
ret
dec
mov
jbe
xchg
in
out
popa
stc
int
pop
jo
adc
test
or
popf
cmp
dec
push
stc
pop
je
or
xchg
inc
rcrb
not
xorb
dec
pop
imul
push
and
and
mov
cltd
loop
repz
cmpsb
hlt
addl
fsubl
testb
adc
in
popa
loop
inc
iret
pop
cs
push
mov
es
daa
jecxz
dec
shll
lock
push
xor
subl
xor
pop
or
cmp
shrl
int
and
or
into
fcoms
push
push
in
xor
sbb
cmpsl
jnp
cmp
push
adc
cli
pusha
scas
jb
daa
jmp
mov
inc
scas
add
imul
mov
sbb
mov
arpl
into
pushf
xchg
xor
sarl
mov
loop
jmp
lcall
push
lock
pop
mov
mov
pop
sahf
sarb
sbb
icebp
jb
mov
repnz
pusha
xor
cmp
cld
sub
movsl
dec
movsl
push
jo
lods
sbbl
lds
daa
outsb
pop
jp
pop
push
lret
inc
push
pushf
push
cltd
lock
popf
shll
inc
out
sti
mov
mov
fdivl
xchg
xor
inc
mov
xchg
pusha
int
pop
sbb
lret
emms
fidivs
mov
addr16
int3
mov
aad
enter
add
xchg
xchg
jnp
out
adc
add
insb
fisttps
pop
test
call
addr16
push
mov
jmp
xor
or
gs
rolb
jecxz
mov
ret
pop
lods
pushf
fldenv
pop
test
jbe
cmp
gs
sbb
lea
or
outsl
stos
mov
cltd
sbbb
adc
test
hlt
mov
call
aas
or
outsl
daa
mov
jg
add
xor
adc
adcl
notl
mov
cmp
repz
popf
mov
shll
dec
outsb
jge
mov
add
ret
repz
pop
in
cmc
aaa
mov
and
call
xchg
test
test
imul
jecxz
sahf
push
popl
mov
les
sbb
jns
es
stos
jp
out
mov
ret
xor
xor
xchg
cmpb
push
ss
mov
iret
fcomi
test
fdivr
and
imul
test
fistps
test
and
cs
cmp
and
sti
pop
icebp
sbb
stos
subb
jl
pushf
or
fists
stc
xor
or
leave
sahf
cmp
insb
decb
pop
jbe
loopne
hlt
imul
cmp
cld
cmpsl
pushf
mov
imul
rcrl
jmp
test
in
scas
mov
mov
out
enter
fstl
leave
movsb
jne
inc
cmp
cld
mov
in
iret
xor
subb
in
jbe
mov
mov
repz
inc
jo
xchg
add
push
scas
jmp
sub
mov
insb
cs
out
es
xor
jbe
mov
fcmovnbe
in
test
lods
sbb
out
or
mov
in
xchg
cld
sbb
aas
mov
mov
mov
or
xor
mov
sarl
jmp
mov
sub
xor
cmp
and
pop
mov
cmp
in
cmc
aaa
fisubl
test
imul
arpl
xor
push
adc
cmp
aaa
sbb
lcall
mulb
dec
lds
mov
add
jecxz
stos
dec
push
sbb
sub
mov
sti
ljmp
mov
dec
out
pop
xlat
daa
movsb
test
pop
dec
sub
pusha
adc
shrb
or
mov
sub
pop
add
arpl
cltd
lds
jmp
sarl
ss
cmpsl
data16
inc
mov
and
bound
cs
addb
xor
shll
dec
sbb
jae
pop
add
imul
mov
and
cmc
lea
xor
cmpb
sbb
das
or
cmp
xor
and
mov
jge
add
pop
mov
enter
clc
xor
push
sti
pop
ret
and
int
out
pushf
and
leave
push
jne,pt
out
fstp
es
push
lods
test
mov
or
enter
mov
sbb
pushf
outsl
mov
push
sbb
push
xor
xchg
push
xchg
add
push
xchg
je
incl
adc
imul
sbb
add
mov
xor
idivb
inc
ja
sub
jmp
mov
and
adc
mov
arpl
jb
into
inc
or
add
imull
mov
inc
push
or
hlt
mov
out
xchg
jle
addb
inc
ss
mov
jo
jae
lret
aaa
push
mulb
push
insb
adcl
adc
mov
scas
and
push
jbe
call
dec
ret
mov
icebp
sbb
in
mov
ret
or
pop
lods
ljmp
faddp
and
sub
add
aad
test
pop
stc
and
mov
cmp
mov
mov
inc
cwtl
out
mov
mov
test
push
and
dec
pop
hlt
or
mov
xchg
mov
push
cmp
aaa
fldt
jno
aad
adc
imul
aas
jle
jno
sahf
fwait
mov
sbb
dec
or
ret
cmp
pop
sti
bound
or
lcall
shlb
mov
movsb
pop
pushf
xor
insb
ret
hlt
in
mov
test
addb
bound
sti
mov
fistpll
stos
add
sub
addr16
shlb
shrb
cli
inc
inc
call
jbe
addr16
stos
xchg
jge
add
adc
pop
cmpsb
fdivs
sbb
sbb
pop
test
xchg
pop
dec
xor
add
mov
enter
dec
movsl
test
pop
nop
les
xchg
fs
jns
mov
sbb
cwtl
repnz
mov
inc
les
data16
mov
scas
fstpl
hlt
or
iret
je
lea
sub
dec
decb
je
push
cmc
pop
lds
rcll
mov
mov
push
hlt
sub
aaa
or
popa
mov
adc
cmp
sub
cs
sbb
inc
lods
je
lods
stos
mov
adc
repz
loope
cld
pop
push
addr16
fidivl
cmpl
negl
out
mov
dec
addr16
popa
cli
adc
dec
cmp
shll
out
mov
mov
inc
aam
insb
mov
jmp
lahf
lods
adc
fists
push
add
and
stc
sub
mov
pop
dec
cmp
cmc
ret
mov
mov
dec
repnz
sbb
mov
adc
sbb
add
lds
in
push
or
aam
xor
pop
mov
xchg
mov
setg
in
ficoms
in
jns
dec
inc
aam
mov
sarl
lea
mov
test
dec
pop
arpl
imul
loope
xor
shll
mov
enter
adcb
jb
out
cvtdq2ps
mov
aaa
mov
sub
mov
jnp
arpl
cmp
je
divl
and
imul
fs
stc
loope
ret
lcall
or
jnp
mov
les
adc
mov
inc
insb
dec
dec
sbb
or
push
decl
imul
inc
aam
sbb
dec
cli
das
mov
out
inc
sub
jp
jae
xor
xor
mov
adc
repnz
jns
imul
in
in
popa
das
push
lret
jno
fcmovnu
popf
xor
insl
pop
insl
into
xor
roll
outsb
sahf
xor
pop
pop
dec
mov
xor
inc
scas
movd
mov
xchg
jb,pt
sbb
fdiv
xchg
inc
mov
dec
mov
pop
jno
push
sbbl
jb
popa
xchg
in
ret
or
gs
lret
fnstcw
aas
inc
aaa
pop
jg
int
dec
in
jno
outsb
stc
or
fldl
mov
pop
loop
stc
mov
hlt
xchg
das
pop
push
add
or
adc
pop
sbb
loope
jp
or
push
ss
test
clc
sub
xchg
dec
fs
sub
add
pop
pop
adcb
push
bound
jp
add
sub
dec
xchg
addr16
mov
mull
push
aaa
test
cwtl
pop
mov
inc
mov
fimull
adc
inc
xor
ss
push
pop
mov
cltd
ret
sub
mov
stc
jmp
mov
xorb
sbb
in
movsb
and
fidivl
enter
push
daa
pop
mov
loop
in
daa
into
jo
popa
scas
sbb
xchg
add
push
rol
push
mov
fiaddl
mov
push
pop
outsb
xchg
mov
mov
fiaddl
cmpsb
pushf
movsb
xchg
push
pop
pop
add
dec
xor
xchg
popf
pop
clc
mov
fdivs
mov
push
lahf
jo
mov
jae
mov
ja
notl
lock
div
out
sub
mov
jge
lahf
enter
pop
loop
mov
std
inc
test
mov
inc
sarl
out
add
cmp
repnz
or
mov
aas
stos
inc
jle
addr16
out
insb
xor
ljmp
fldt
xchg
lahf
lahf
jl
or
jo
push
adc
test
in
fidivl
popf
dec
stc
gs
fld
adc
or
mov
mov
addb
fadd
in
push
in
mov
cmp
pushf
es
dec
cmp
xchg
push
mov
jmp
xor
cld
xor
push
add
lock
sbb
mov
adc
cmp
test
xor
sbbl
push
movsb
out
inc
fdiv
dec
mov
push
add
cmc
in
cvtdq2ps
push
push
loop
iret
pop
pop
mov
inc
sbb
push
test
sbb
inc
les
mov
popf
movsl
dec
push
xchg
gs
cmp
sub
xchg
jne
out
push
xacquire
loope
orl
pusha
xchg
mov
rolb
loope
sub
movsl
pop
jns
adc
int
iret
adc
ljmp
imul
and
lret
mov
jge
repnz
outsl
mov
scas
sbb
xchg
les
jmp
mov
loope
outsb
enter
and
or
add
test
push
adc
shrl
shll
mov
fsubrl
test
mov
lods
or
cmp
push
add
sub
xor
pop
cmp
and
fldenv
aam
push
push
mov
jns
lcall
leave
das
ret
push
adc
sbb
movsb
jge
mov
inc
dec
inc
jl
fiadds
xor
push
loop
xor
pop
cld
adc
xor
gs
dec
rcrb
adc
into
lahf
out
ret
pop
cmc
ja
add
repz
jns
add
inc
clc
xchg
fs
addl
and
cmpsl
outsb
inc
jns
adc
stos
sub
push
jge
mov
sarl
pop
jae
dec
sub
xlat
add
pop
mov
mov
sti
imul
pop
adc
lock
bound
and
sahf
pop
dec
sub
and
fwait
incl
or
pop
mov
enter
insb
movsb
out
and
divb
aam
in
jo
sub
in
inc
mov
fisttps
sub
xchg
shlb
sti
imul
adc
lds
pop
xchg
sub
rclb
sbb
fmull
push
jno
xchg
mov
push
mov
cmpsb
pop
pop
movsb
xor
lods
push
mov
cmp
call
outsb
data16
adc
cmpsb
cmp
imul
aad
push
adc
inc
pusha
in
andl
lock
jno
xchg
mov
clc
jmp
add
sbb
mov
push
jo
mov
push
stc
jl
or
addr16
adc
jg
loop
js
or
add
jmp
push
stc
mov
shll
pop
and
movhlps
imul
sarb
outsl
push
mov
sbb
int
mov
cmpsl
test
popf
and
sbb
out
into
outsl
adcb
adc
inc
lock
and
xor
ss
sub
lcall
add
cltd
pop
pop
nop
dec
sub
mov
cmc
xchg
jo
out
loope
push
lret
or
addb
cmp
inc
pop
hlt
xchg
mov
xor
fstpl
inc
xchg
sbb
dec
je
in
and
xchg
inc
pop
xor
push
loop
inc
test
insb
add
sbb
push
imul
movsb
das
inc
jnp
sub
jno
dec
jae
movsb
xor
xor
out
jnp
mov
adc
js
hlt
int3
out
xchg
jle
inc
mov
and
outsl
push
clc
and
and
outsb
mov
repz
push
pop
add
mov
or
and
fistpl
push
jns
sahf
gs
and
ss
arpl
ja
push
cli
into
test
out
dec
jmp
xchg
pusha
sti
pop
mov
jle
xchg
mov
mov
sub
xchg
lods
xor
xchg
adc
out
mov
inc
push
fldcw
loop
jae
aaa
sbb
aas
cmp
sbb
mov
and
sahf
fdivr
js
add
testb
inc
or
inc
fstl
in
dec
pop
inc
lods
pop
push
jecxz
sub
jmp
mov
and
pop
add
pushf
dec
aaa
outsb
in
xchg
jbe
loope
in
lods
push
in
rcr
out
scas
mov
adcb
mov
fisttps
add
sbb
push
mov
outsb
jg
clc
ret
pop
leave
fadds
sub
jge
mov
push
jp
dec
push
outsl
lock
and
in
hlt
out
incl
mov
push
add
mov
shl
mov
pop
test
in
data16
adc
les
sti
sbb
arpl
movsl
push
and
int3
push
std
sbb
push
or
sub
xchg
mov
out
or
cmpsb
xchg
das
bound
imul
out
sahf
stc
mov
xor
sub
addr16
sbb
xor
jp
popf
inc
arpl
fnsave
test
lret
lods
testb
push
imul
test
inc
clc
into
insb
arpl
movups
lock
mov
and
sub
mov
push
aas
or
push
jle
sub
leave
popa
mov
ja
loope
out
in
shll
xchg
cmpsl
xchg
jno
and
and
std
mov
cmpl
sub
xorl
sub
pop
aas
pop
adc
jge
outsb
or
scas
or
inc
and
mov
xchg
out
push
shll
or
sbbl
dec
add
faddl
push
mov
repz
xor
iret
or
and
rorl
mov
mov
aam
xor
inc
mov
push
jmp
addb
jl
incb
mov
sub
xor
dec
je
cmp
xchg
pop
fidivs
xchg
fst
sub
jb
bound
enter
mov
mov
dec
jg,pt
push
aas
bound
mov
cmpsl
mov
mov
jno
int3
or
les
jl
mov
adc
shll
jne
stc
out
clc
jmp
imul
jl
cli
jmp
adc
add
loope
ret
xchg
roll
cmpsl
xchg
or
or
xchg
dec
inc
xchg
or
add
add
mov
mov
jmp
and
lea
fdivr
push
add
and
or
in
push
cmp
sbb
cmp
sub
lds
lahf
es
adc
xchg
clc
jecxz
xor
and
mov
je
mov
inc
jb
push
mov
adc
pop
test
cld
mov
lea
pop
sub
cmc
mov
inc
xor
jnp
jp
leave
iret
pop
jge
cli
pusha
ja
push
out
cwtl
sbb
jge
insl
mov
mov
jb
add
je
or
jns
or
xchg
lock
sbb
or
mov
dec
hlt
cli
rcr
and
xchg
cld
push
inc
or
icebp
pop
mov
fimuls
repnz
adc
out
pop
xor
xchg
lret
push
add
mov
mov
arpl
lret
cmp
pop
xor
xor
inc
mov
shrb
mov
dec
push
cli
xchg
pop
inc
push
enter
lods
mov
cmp
movsb
ret
and
fisttps
data16
repz
fidivs
imul
mov
imul
and
or
mov
add
pop
and
or
or
inc
xor
out
mov
data16
lahf
insb
dec
sbb
and
sbb
dec
push
cli
stos
cmpsb
mov
cwtl
call
adc
in
jmp
inc
jne
mov
sub
push
shrb
push
pop
mov
dec
in
push
jecxz
xchg
mov
cmp
pop
pop
test
jo
pop
sub
es
bound
xchg
sub
inc
pop
adc
mov
or
addl
fists
xor
adc
sti
xorl
sbb
insl
pop
repnz
jno
sbb
lcall
les
iret
cmp
test
cmp
sbb
xor
or
cmp
adc
out
xor
mov
fbstp
xchg
pop
mov
xchg
int
dec
jo
lahf
jecxz
jnp
mov
mov
adc
stc
test
xorb
aam
lcall
rclb
clc
adc
or
xor
jle
cmc
sbb
pop
pop
fmul
repz
pcmpgtd
dec
pusha
xchg
inc
dec
idiv
xchg
push
test
xchg
test
xor
xchg
idivb
adc
cmp
and
pop
mov
daa
jno
mov
mov
lret
jecxz
ljmp
pop
xor
dec
lret
ret
mov
or
arpl
mov
dec
andb
cli
push
shl
adc
adc
inc
stc
icebp
mov
push
sub
loope
push
leave
sbb
mov
testl
mov
xor
imul
or
mov
xchg
lea
in
push
enter
adc
in
pop
pushf
adc
and
stos
mov
inc
xchg
dec
adc
rcl
scas
xorl
jb
mov
mov
in
cwtl
lock
jne
xchg
bound
mov
lods
in
mov
or
ja
cmp
push
std
push
movsb
int
out
rclb
cmp
popa
icebp
add
in
xor
pop
jae
inc
dec
pop
repnz
mov
jg
sbb
add
movsl
cmpsb
ret
mov
ja
mov
icebp
jne
xlat
imul
mov
movsb
xchg
pushf
push
jmp
dec
ds
xchg
inc
es
loope
push
stos
aas
push
mov
lods
adc
cmp
add
and
mov
scas
add
icebp
or
xchg
daa
add
cmp
push
dec
or
sahf
insb
fists
pushf
leave
fstps
mov
insb
push
and
pop
or
sbb
jl
nop
stos
sub
sbb
sub
jae
jno
jb
mov
add
into
sub
adcl
iret
dec
dec
addl
jecxz
jns
pop
in
cs
pop
adc
rorl
sbb
dec
adc
cltd
jl
adc
sbb
mov
xor
out
dec
mov
push
sbb
fadds
xlat
fld
clc
mov
pop
pop
jns
sub
adcl
cld
mov
cmc
pop
push
jae
add
jl
ficompl
inc
dec
les
icebp
fimull
push
xlat
scas
aaa
dec
dec
sub
pop
push
jge
addb
cmpsl
sub
lods
mov
ljmp
sub
ja
pop
mov
arpl
inc
sbb
dec
shll
cmp
pop
and
adc
adc
fcmovne
xor
push
ss
pop
psubq
mov
pushf
push
dec
enter
adc
sahf
adc
test
mov
outsl
and
maskmovq
idivl
fbstp
roll
movsb
loope
inc
cmp
dec
leave
repz
lcall
adc
mov
nop
clc
aam
jmp
lret
xchg
shl
sbb
pop
xchg
lret
mov
xor
in
dec
push
out
push
xor
jno
sahf
xchg
mov
stos
cmp
jno
cwtl
or
mov
cmp
pop
adcl
les
ljmp
lret
xor
cld
fistps
mov
mov
inc
and
jecxz
jecxz
cwtl
leave
pop
pusha
jle
xor
sub
inc
rorl
stos
imul
push
jns
outsl
push
pop
cmp
or
pop
push
out
lds
enter
xor
popf
fidivrs
or
test
inc
das
leave
ret
xor
loop
mov
loop
jecxz
ss
aas
nop
in
cmp
inc
rcr
push
mov
mov
imul
iret
loope
pop
jl
inc
push
nop
dec
bound
stos
and
scas
fbld
mov
aas
les
and
out
sub
add
mov
pop
xor
jmp
mov
lea
out
scas
icebp
xor
sub
or
cmp
icebp
and
jge
push
xor
out
mov
daa
jg
push
adc
jnp
in
pop
ret
push
add
dec
jno
dec
stc
dec
sub
xor
adc
push
shlb
sub
aas
sub
sub
dec
sub
addr16
jge
pusha
cld
or
daa
adc
movsb
icebp
xchg
add
jge
mov
xchg
es
jg
inc
jb
movsl
sub
jecxz
sub
pop
imul
push
outsl
les
or
cld
test
in
push
clc
or
adc
je
lea
cmp
and
lahf
add
mov
cmp
sbb
inc
cmp
jle
dec
inc
scas
cmp
xor
pop
pop
add
mov
call
bound
movsl
mov
call
and
dec
jl
popa
rorb
lret
mov
fcomi
stos
fdivp
jns
mov
mov
int
and
inc
cmpsl
sub
lock
out
jb
fldenv
dec
pop
lcall
xchg
aaa
int
subb
push
or
nop
pop
sbb
jmp
out
jmp
sbb
and
sarl
leave
repnz
leave
mov
adc
lods
data16
push
push
push
cld
pusha
test
pop
dec
ret
int
xchg
cmp
jnp
xchg
js
push
adc
pop
inc
aas
mov
int3
bnd
rclb
and
pop
shl
dec
cmp
loop
notl
mov
pop
xor
insb
das
lcall
jnp
shll
cld
pusha
pop
jp
jecxz
cld
fs
rcr
pop
jl
pop
testb
pop
or
pop
loope
leave
sub
or
mov
mov
inc
and
insl
push
pop
adc
test
xchg
push
jmp
cmp
mov
ss
aaa
mov
nop
or
mov
clc
outsb
cmp
stos
mov
inc
sbb
jnp
outsb
xor
inc
or
sub
test
addr16
push
push
pop
es
dec
and
push
dec
rcrb
fnstenv
mov
jnp
into
xor
in
enter
mov
xor
and
push
sub
aaa
fwait
popf
cmpsl
adc
js
mov
and
jle
xor
aas
push
mov
inc
and
mov
pop
fwait
lds
mov
divl
mov
dec
xchg
int
leave
arpl
and
out
push
mov
push
lahf
cs
loope
cwtl
aas
fidivrl
bound
add
in
fnstcw
test
adc
stos
inc
clc
mov
shrb
inc
xor
negl
or
mov
shlb
popf
pop
mov
loopne
pushf
pop
push
mov
pusha
inc
loop
lods
jns
lcall
lods
jmp
and
or
xor
js
int
jb
cli
inc
fs
rorb
aaa
outsl
lods
popf
sbb
jo
sbb
orl
mov
sub
das
fistpl
and
lock
iret
inc
push
enter
int
or
mov
mov
insb
ja
icebp
mov
add
jecxz
pop
jecxz
sub
sbb
sahf
and
outsl
xor
out
cld
cltd
scas
lahf
enter
push
or
add
mov
mov
pop
out
mov
inc
or
clc
ljmp
popf
sub
das
xchg
add
sub
mov
jp
sahf
aaa
adc
mov
test
sub
jnp
and
notb
icebp
add
sub
xchg
cmc
ljmp
imul
or
xchg
add
add
pop
push
xchg
add
sarb
in
lods
loop
inc
jns
out
frstor
leave
mov
mov
js
mov
out
aam
inc
dec
jecxz
arpl
decl
ret
pushf
test
les
imul
movsb
inc
jb
fmul
ficoms
mov
xchg
mov
fwait
jae
in
js
fcoml
mov
mov
inc
and
pusha
je
jg
and
daa
imulb
jnp
jo
xbegin
lret
adc
aas
inc
mov
xchg
sbb
xchg
and
pop
sbb
in
xchg
pop
shlb
xor
mov
je
fbstp
es
xor
stos
xchg
xor
loope
xchg
dec
xor
mov
mov
sarl
arpl
mov
fstpt
jns
xchg
add
sub
pop
xor
repnz
inc
mov
mov
adc
ljmp
and
push
push
dec
icebp
or
lods
daa
leave
cmp
gs
xchg
mov
je
pop
dec
pusha
mov
pop
sub
inc
fs
xchg
mov
loope
mov
int
pop
sbb
inc
lock
inc
enter
movsl
stos
in
mov
jnp
sub
mov
jb
and
shr
movsb
mov
addr16
call
ret
and
jl
fwait
out
jg
notl
or
scas
xor
push
or
adc
inc
sub
inc
sar
jbe
fistl
and
add
or
xor
adc
into
add
adc
out
arpl
mov
sarl
sbb
push
jmp
inc
pop
or
jge
sarb
xchg
or
test
iret
sub
xchg
aad
and
frstor
adcl
inc
aaa
notl
push
fwait
xor
ss
jg
inc
je
cwtl
iret
push
int
or
pop
fucomip
daa
popa
mov
ss
mov
inc
xor
cmp
or
sbb
les
add
lret
cs
mov
sahf
stos
mov
jle
sbb
inc
iret
xor
pop
or
and
cwtl
iret
les
das
adc
mov
fs
cmp
and
std
xchg
add
lea
andb
mov
cwtl
sbb
shll
faddl
mov
add
pop
cwtl
gs
or
xor
inc
cmp
cwtl
xchg
jle
add
pop
xor
jle
inc
popa
cmp
nop
filds
and
jp
or
inc
jb
adc
stos
cmp
cmp
mov
clc
xchg
dec
xchg
add
push
xchg
out
sub
push
xor
lods
jnp
ret
rcll
pop
adc
push
jno,pn
inc
insb
xor
std
lcall
sub
mov
xchg
adc
mov
movsb
jmp
ss
jns
jb
ficompl
popf
xchg
xchg
fwait
out
xor
pop
mov
insl
std
adc
jne
mov
add
fcmovne
inc
xor
cmp
pop
sbb
lods
or
cmpsb
loop
cs
ret
ss
inc
add
out
cmpsl
push
movsl
ret
nop
pop
orb
repnz
cmc
subl
sbb
cmpsb
sti
dec
movsl
ss
test
outsl
loop
fs
call
in
add
push
fmull
in
xchg
test
xor
in
scas
stos
mov
sub
and
push
enter
loop
jo
sub
ret
repnz
not
sub
xor
aas
or
mov
iret
sbb
mov
imul
stos
test
mov
xor
in
paddusw
dec
fistpl
imul
rep
sub
mov
jb
scas
mov
pop
jo
movsl
in
das
mov
loop
out
add
jecxz
out
mul
jnp
ds
cmc
mov
test
je,pt
clc
mov
push
cmp
inc
js
pop
ss
aad
mov
loop
addr16
push
add
sbb
sub
xlat
and
dec
xlat
mov
imul
push
addb
dec
cmp
jl
pusha
sub
and
push
xchg
movb
cwtl
mov
and
jne
aas
jecxz
jno
cmpsl
idivb
xor
push
call
out
dec
stos
mov
stos
pushf
adc
hlt
fnstcw
jge
cmp
push
cmovb
fisttpll
subb
lods
sbb
cld
mov
repz
xchg
jbe
pop
cs
test
xchg
jp
das
int
mov
pushl
dec
cmp
cmpsl
and
bound
push
jmp
in
add
in
xor
rclb
pusha
xor
stos
mov
push
inc
cmp
and
shr
incl
mov
mov
cmp
daa
inc
pop
push
insl
ss
leave
inc
jns
dec
jmp
or
mov
mov
jo
repz
mov
int
mov
mov
xchg
iret
add
push
jl
loope
push
fstl
and
and
cmpsl
mov
or
fwait
test
pop
xchg
push
mov
stos
xchg
mov
nop
xor
jl
popa
rcrb
push
jne
jo
jmp
pop
imul
xchg
adc
sti
popa
mov
push
insb
pop
lret
cmpsb
shll
loopne
push
xchg
fadds
std
in
cmp
adc
jge
pop
mov
or
inc
add
inc
stc
inc
dec
cmp
scas
fcmovne
repz
pop
js
jmp
rclb
cmp
fmull
test
fists
outsb
pop
shrl
cltd
addl
inc
sbb
popa
add
jmp
loop
mov
das
mov
call
std
in
push
sbb
fiaddl
dec
mov
shll
xor
xchg
aam
ljmp
inc
in
loope
fisubs
stc
jo
add
lret
sbb
mov
ret
mov
mov
mov
fistps
enter
jns
cmp
mov
in
daa
mov
pushf
dec
sbb
or
mov
add
in
iret
xor
sbb
mov
cmp
ja
ficomps
cmpb
jge
sbb
push
push
pop
jle
fsubrl
xchg
mov
mov
push
addr16
pop
jo
negl
fsubl
out
orl
call
push
mov
popf
rclb
imul
pop
in
nop
dec
xor
sar
scas
jno
jns
add
dec
and
scas
cltd
ficoml
pop
push
push
testb
sub
das
sbb
cwtl
xchg
fisubrs
cmp
or
mov
sub
jle
nop
dec
fiaddl
loopne
hlt
add
imul
jae
pop
push
imul
cmpsb
xchg
mov
sti
data16
sub
push
push
add
or
scas
enter
jge
push
xchg
xchg
push
daa
cs
add
cs
rclb
push
lods
or
in
imul
sti
insl
sub
pop
adc
ret
repnz
clc
leave
pop
loop
mov
sub
cmp
arpl
ljmp
aad
add
aam
jns
movsl
push
addr16
out
or
dec
sub
cld
cmp
jecxz
mov
aas
fnstsw
fisubs
fnsave
jno
std
pop
pop
and
add
inc
outsl
cmp
popa
jecxz
std
pop
mov
mov
jne
out
movsb
cmp
dec
mov
aas
push
fldenv
sbb
inc
dec
idivl
adc
cmpsl
jo
mov
add
jbe
out
testl
insb
enter
and
popf
sbb
push
leave
cld
xor
sub
dec
xor
adc
andl
and
mov
xor
fwait
push
jle
xchg
mov
daa
rcll
loopne
mov
mov
das
mov
cmp
out
and
push
int3
hlt
mov
pop
loope
push
arpl
inc
shll
push
sub
mov
ss
pop
inc
and
fwait
push
repnz
sbb
addl
mov
and
push
cmp
cmp
ror
mov
xor
or
icebp
addr16
and
movsb
pop
sub
xor
pop
pop
int3
sbb
pop
aad
and
aaa
pop
cmpsl
loope
jl
add
fstpt
dec
dec
and
mov
dec
lods
pop
adcb
lahf
xchg
mov
loopne
ret
push
pop
in
test
aad
cli
mov
xchg
stc
test
and
mov
xor
test
ljmp
push
loopne
dec
test
insl
data16
mov
mov
mov
sbb
test
mov
mov
inc
out
inc
sarb
enter
mov
xor
ret
mov
into
test
jle
mov
cwtl
test
sub
push
xlat
lcall
orb
xchg
loop
sahf
cmp
or
pop
jns
push
std
push
sub
jmp
lods
gs
xor
shrl
add
ds
enter
push
push
fs
jmp
rorl
inc
mov
mov
stos
push
add
fldcw
cmp
scas
jecxz
mov
stos
movsb
dec
xchg
rorb
leave
cmp
lock
xchg
cmpb
push
out
mov
cmp
ret
or
jno
xchg
ret
xchg
sar
or
negl
inc
scas
ficoml
pushl
out
negb
push
fcmove
ret
mov
enter
push
cmp
jecxz
bound
mov
sub
sbb
xchg
mov
dec
pop
cmpsb
call
xadd
addr16
jo
add
in
in
js
repz
scas
rorb
sahf
and
shlb
jae
jmp
test
int3
aad
mov
cmpsb
push
outsb
lods
in
lock
dec
jns
mov
add
xchg
inc
cs
xchg
rcr
sub
outsl
outsl
mov
repz
fistpll
clc
and
popa
sbb
jmp
push
dec
fadd
jl
out
bound
cmpsb
test
lods
mov
sbbl
and
inc
aaa
mov
mov
cmc
mfence
sbb
loope
fmulp
add
fstpt
xchg
cli
push
push
pop
nop
jno
notb
xor
dec
xchg
mov
xlat
cmpsl
test
hlt
pop
sub
dec
andl
es
xchg
out
sbb
inc
cs
cmp
or
movsb
jmp
es
mov
aas
jo
rcrb
test
gs
out
test
filds
stos
xchg
and
js
sub
rcrl
popf
dec
jg
adc
mov
sahf
or
clc
cmpsl
jnp
bound
js
leave
fisttps
dec
and
aad
addr16
jmp
pop
and
sub
jno
adc
sub
out
fdivrs
sub
mov
frstor
bound
xor
jmp
inc
leave
xor
insl
cmp
pop
mov
jecxz
mov
sub
rclb
or
dec
fwait
fs
out
adc
lock
scas
adc
sbb
mov
insl
jne
daa
xor
mov
pusha
loope
push
daa
jnp
aaa
daa
decb
shrl
dec
js
cli
outsl
push
rcrl
cmp
or
loopne
aad
pop
inc
mov
cli
push
loopne
popf
adc
clc
jb
and
pop
sar
pop
xorw
popa
fs
adc
pop
cmc
mov
add
rcrb
pushf
jns
sbb
sahf
stc
and
movsl
roll
cmpsb
incl
xor
loop
jmp
int3
jg
pop
xor
mov
mov
lods
js
cmp
sub
jmp
xchg
das
imul
dec
sbb
lret
shll
sahf
push
sub
in
das
scas
cmp
loop
xchg
scas
mov
test
xchg
sbb
ficomps
mov
or
mov
mov
push
and
jo
push
push
mov
push
lret
daa
sbb
sub
enter
lret
sub
sti
repnz
ljmp
sub
daa
jne
cmp
xchg
sub
cs
aaa
test
fldl
xor
cmpsl
cmpxchg
or
jb
test
push
mov
stos
pop
mov
and
adc
sbb
icebp
inc
lea
dec
inc
xor
and
push
push
sbb
bound
adc
test
mov
addb
cmpsl
cmpsb
subb
arpl
scas
mov
sub
mov
pop
mov
lret
loopne
mov
pop
ja
xchg
outsl
dec
push
push
push
ret
js
mov
fsubrs
ret
cmp
sbb
in
add
mov
mov
mov
movsb
js
out
out
cli
mov
xchg
cmp
mov
push
adc
dec
popf
cli
mov
mov
cmp
sarb
aas
adc
mov
hlt
xchg
adc
subb
or
pop
out
pusha
insl
xchg
and
pusha
add
mov
insl
es
push
cmp
clc
mov
enter
call
aaa
or
lea
shlb
add
sub
cltd
cmp
hlt
xor
mov
pop
jne
cmp
jo
mov
movsb
push
push
pop
xchg
popa
in
jg
sub
mov
int
or
addl
jge
mov
cmc
sub
clc
stos
mov
rcl
sub
mov
cmp
inc
cmc
test
sti
imul
test
sub
les
push
or
loopne
in
jne
ds
rorl
and
xchg
xchg
data16
mov
jl
add
push
mov
xchg
push
std
icebp
jge
and
dec
ds
pop
jo
add
xchg
loop
int
cltd
jno
cmpsb
pop
dec
cmp
ret
mov
cwtl
imul
pop
pop
and
xchg
lret
jno
or
or
xorl
jge
stc
loop
popl
cmpsb
dec
and
lahf
xor
js
outsl
push
ja
add
ss
add
inc
mov
ret
or
repnz
scas
xchg
mov
pop
stos
int
xor
mov
imul
mov
fcomip
sub
fistl
lods
dec
pop
push
mov
push
cltd
dec
hlt
ret
roll
ret
lea
clc
stos
andb
mov
hlt
decl
hlt
push
enter
xor
xor
aas
sub
cmp
sub
xchg
inc
xor
mov
ret
loopne
lret
imul
add
adc
xchg
mov
or
test
adc
xor
ljmp
popa
add
mulb
and
jbe
or
pop
jns
daa
jb
cmp
stos
adc
mov
adc
xor
pusha
fisubrs
sub
mov
inc
pop
and
inc
sub
out
out
cli
out
pop
mov
cmp
jp
pop
ja
in
les
movsl
pop
inc
inc
xlat
bound
cmp
cmpb
cs
push
aaa
test
pop
mov
push
sub
jg
xor
mov
stos
scas
ss
and
cli
dec
cmp
mov
lods
icebp
lds
fs
fnstsw
cmp
rorl
loopne
xchg
add
xchg
mov
je
loopne
cltd
jae
repz
idivb
push
xor
sbb
outsl
jno
jmp
add
and
shll
push
es
push
inc
je
or
inc
and
pusha
push
pushf
rep
jae
imul
inc
inc
push
jl
dec
jno
add
jns
jg
cmp
mov
gs
popf
test
mov
cmp
pop
cmpsl
adc
stos
mov
fwait
movsb
xlat
adc
aad
fcoms
dec
roll
push
and
js
xchg
cmp
cs
inc
cmp
xchg
mov
cmc
loop
sahf
into
int
in
data16
int
push
pushf
iret
repnz
fs
sti
pusha
bound
sub
test
mull
aam
iret
test
mov
add
sbb
push
ret
push
mov
lods
je
je
popa
aad
lret
jb
in
mov
xchg
loop
dec
lcall
cmp
cmp
push
test
or
orl
out
out
xchg
inc
out
mov
push
test
adc
repnz
jb
push
pop
pop
mov
or
nop
inc
sahf
cmpsl
push
pop
jno
or
push
cmc
mov
or
rorl
adc
ja
addr16
cwtl
pop
push
and
das
test
xor
ret
js
dec
xor
xchg
shr
sbb
fcmovnu
fimuls
push
dec
xchg
cmpsb
idivl
push
push
imul
inc
and
ja
das
add
or
lcall
pushf
aam
inc
jnp
fistpll
and
sub
imul
jmp
fwait
sub
repnz
lock
mov
push
xchg
cmp
fisttpl
add
add
out
or
mov
fwait
lret
lahf
testb
jg
sub
xor
sar
enter
mov
jg
inc
shlb
movsb
fimull
out
repnz
insb
outsb
addb
cmp
push
xchg
clc
pop
cltd
jbe
int3
in
mov
push
mov
out
out
out
rorb
push
sub
mov
test
xor
pop
imul
adc
and
pusha
lods
fucom
cwtl
xchg
add
movsb
out
js
lret
mov
cmp
in
clc
stos
jae
or
cmp
xchg
test
test
cmp
pop
aaa
xor
int
mov
xor
fs
mov
mov
push
pop
loop
mov
pushf
iret
sub
jmp
push
int3
loopne
xor
dec
repnz
mov
cld
adc
movl
rolb
stc
das
jmp
mov
mov
cltd
jecxz
xor
pop
test
mov
cld
mov
movsb
subl
mov
leave
lods
aaa
xor
mov
das
cmp
pushf
daa
mov
pusha
jle
pop
adc
ja
mov
adc
xor
leave
mov
dec
dec
xchg
or
stc
les
jmp
mov
sbb
repnz
pop
or
push
inc
jne
mov
fwait
std
adc
sbb
das
mov
in
fcmove
adc
inc
enter
xchg
push
enter
adc
ja
ss
mov
test
js
movsl
lret
leave
push
lahf
cwtl
sbb
addb
jp
addr16
sahf
mov
dec
jnp
mov
movsb
loopne
out
stos
mov
mov
fsubr
mov
jb
xchg
mov
cld
jae
std
sub
xchg
shr
mov
dec
jg
fisubs
lock
and
and
dec
sbb
cmp
rolb
adc
lods
popa
lcall
clc
lods
xchg
jp
fnstenv
mov
mov
or
xchg
push
or
xchg
gs
clc
sbb
add
lock
mov
and
sub
add
cmp
cmc
jg
inc
pushf
sub
out
mov
mov
scas
fdivrp
pop
push
sub
dec
pusha
loope
hlt
das
add
pop
push
js
jle
adc
jl
rol
flds
scas
xor
ja
cmp
cmp
jbe
in
mov
arpl
adc
cltd
jbe
nop
adc
rolb
insl
push
scas
jge
sbb
fldenv
xlat
outsb
push
push
mov
out
les
mov
mov
test
nop
cmp
cld
addb
ret
sub
mov
mov
and
or
sub
lcall
xor
cmpsl
xchg
dec
repz
cld
adc
jl
and
xor
ja
pop
fiadds
push
dec
movsl
jo
ds
pop
mov
dec
fst
sub
mov
test
movsl
ficoml
xor
sbb
sub
lahf
sub
sbb
std
sbb
out
clc
shlb
mov
mov
movsb
adc
int3
aas
bswap
dec
test
jl
test
xor
les
mov
js
iret
into
adc
sub
push
add
imul
jle
add
imul
add
dec
sub
aad
xchg
mov
ss
xlat
inc
sbb
fucomi
push
add
xor
loop
negl
fcoml
pop
and
xor
mov
mov
call
orps
subl
fs
fnstenv
pop
add
xorl
aad
xor
call
dec
xchg
stos
repz
xchg
mov
lods
out
sub
repz
and
std
mov
addr16
mov
sub
adc
xchg
fidivrs
test
js
dec
jae
je
orl
shlb
addr16
lret
int3
sbb
cmp
in
sbb
in
dec
repnz
jmp
or
mov
sahf
xor
scas
mov
mov
enter
shrb
jbe
lret
int3
dec
push
push
addb
test
xchg
sub
push
inc
mov
fidivs
xor
cmpsb
mov
or
push
fistps
pop
cmp
push
mov
in
call
adc
push
loopne
pop
sbbl
mov
jg
popa
test
mov
dec
sub
dec
cmp
stc
outsl
add
xchg
cltd
icebp
mov
shrl
xchg
or
sbb
hlt
into
hlt
loope
test
inc
mov
in
pop
lds
dec
mov
aas
loope
mov
mov
sbb
mov
loopne
jecxz
cli
xlat
pop
ljmp
ret
loop
es
or
adc
lods
lds
mov
mov
sub
inc
cmp
fisubrs
jecxz
int
movsl
mov
inc
pop
rol
rcl
cmpsl
jg
movsb
mov
mov
jp
cltd
adc
loope
jmp
ret
fdivs
push
xor
push
pusha
rolb
pushf
push
aad
ret
push
sbb
adcb
push
fdivp
push
icebp
xchg
pusha
mov
outsb
xor
and
jns
adc
xchg
pusha
ret
cld
cltd
mov
or
enter
mov
push
push
lds
xorl
pop
jb
jne
dec
xchg
add
mull
and
jns
lea
xchg
in
xchg
cs
jbe
loopne
jl
push
pop
xorb
sub
dec
xor
lods
leave
mov
adc
lds
xor
int3
inc
adc
pop
xorb
or
mov
push
xchg
cmc
sbb
push
or
hlt
sub
add
sub
mov
test
push
pop
pop
mov
xchg
cmpsl
andb
jecxz
fistpl
push
jnp
into
popa
mov
inc
scas
icebp
mov
ss
fnstsw
sub
nop
mov
loope
sub
jae
inc
jnp
into
inc
leave
into
testb
or
ljmp
jmp
jnp
ret
jmp
ss
repz
mov
arpl
or
out
dec
and
xchg
push
cwtl
addr16
cli
sbb
lods
inc
adc
fidivl
push
ret
pop
xchg
xchg
inc
in
data16
test
adc
push
push
cmpsl
cmp
lds
data16
out
lds
sbb
mov
das
in
jg
jg
sahf
xchg
pop
clc
lret
ds
xchg
and
fcomi
lods
pop
aam
mov
shll
xchg
or
ljmp
adc
mov
mov
out
dec
jb
sbb
push
mov
cmp
test
daa
and
jae
jl
leave
cmp
xor
xlat
enter
fbstp
dec
mov
add
mov
andb
js
into
shll
push
sbb
imul
int
loope
orb
lea
mov
popa
pavgw
sbb
movsb
fdivs
cmc
out
into
into
xchg
sbbb
mov
and
idiv
test
cmp
xor
dec
out
scas
cmp
sub
mov
movsb
sbb
xor
sub
int3
inc
adc
sbb
sarl
fidivs
lahf
in
dec
jno
stc
push
mov
sub
into
cmp
pop
add
stos
enter
sbbl
mov
andl
fisttpll
setnp
fs
jo
imul
repz
std
mov
ss
popa
pop
mov
push
inc
push
dec
out
mov
outsb
outsb
test
das
mov
rcrb
dec
lds
pop
mov
xor
out
cmp
fisubrl
js
jmp
bound
inc
sub
mov
mov
xchg
cmp
push
mov
push
pop
push
mov
jecxz
out
mov
loopne
mov
mov
mov
mov
xchg
cmp
stos
cmpb
lret
loopne
outsb
out
mov
cmpsl
adc
shll
inc
add
decb
test
in
das
test
or
mov
sub
stos
rep
je
sub
xlat
mov
icebp
stos
daa
xor
lds
pop
jno
and
xor
fs
pop
test
push
inc
xchg
mov
jg
xor
add
add
push
add
xor
push
insl
push
pop
loopne
mulb
lock
add
cmp
lock
inc
dec
fildll
jge
and
xchg
daa
mov
mov
lock
xor
das
movsb
cwtl
sti
add
es
xor
xor
add
cmp
stc
mov
mov
int
lods
push
sub
cli
or
cli
pop
data16
addr16
data16
jg
or
lock
add
sbb
mov
insb
lcall
dec
popa
aas
repz
aas
pop
fidivs
or
in
out
inc
dec
cli
fists
jle
sub
imul
cltd
inc
push
cmp
aam
sbb
inc
push
icebp
jge
xchg
sbb
mov
jae
popf
or
sbb
imul
sub
jno
iret
mov
fcompl
xor
or
jbe
fcmovu
dec
adc
call
lods
sti
and
cmpsl
lea
in
mov
fwait
gs
neg
pop
add
out
int3
lock
xchg
imul
movsl
pop
xor
jle
lock
or
out
movsb
xchg
mov
or
lds
fidivrs
add
and
out
sub
add
lret
repnz
fimuls
and
aaa
sahf
mov
push
rclb
mov
cmp
iret
sub
daa
int3
aam
pop
add
stos
fsts
dec
sub
inc
and
push
mov
shl
push
clc
in
outsl
cmp
test
jp
cltd
adc
aam
in
fnsave
mov
pop
dec
rcrl
push
or
in
repnz
push
mov
or
add
dec
and
into
lods
fists
push
repz
aam
or
push
mov
and
lds
fcmovu
xor
push
fmull
insl
inc
gs
jb
inc
leave
pop
out
xor
push
xor
xchg
pop
push
mov
popf
xchg
push
mov
pusha
pop
mov
insb
ret
push
loope
fidivrs
xchg
outsl
je
cmp
cltd
add
jmp
xchg
test
mov
iret
cld
add
jle
aam
lcall
inc
insb
test
dec
out
rolb
adc
sbb
mov
pop
mov
push
xor
out
push
roll
aad
pushf
movsl
mov
xor
out
adc
pop
pop
or
and
cmc
iret
aam
jle
jl
mov
pop
hlt
popa
ficomps
push
scas
fsubs
sub
out
xor
xchg
adc
inc
push
add
fsubl
mov
cli
xor
jbe
test
cmc
stc
cmp
and
add
cmp
and
data16
enter
cmpsb
xchg
outsb
sbb
mov
andl
data16
xlat
dec
mov
mov
jno
push
inc
loop
popl
mov
cmp
dec
imul
test
inc
pop
stos
aad
xchg
push
data16
into
hlt
aaa
shll
jmp
outsb
and
xor
pop
jg
pop
lea
mov
cmp
mov
es
cmp
lods
jle
push
call
xor
js
in
daa
jns
jl
mov
movsl
jb
lea
pop
mov
xchg
loopne
into
in
stos
xor
enter
mov
sbb
add
shlb
icebp
fnstsw
pop
mov
rcll
add
enter
xchg
and
pop
ret
into
inc
es
sbb
lcall
dec
cltd
in
xchg
into
scas
popa
mov
xor
aam
cmp
sub
or
insb
inc
sub
dec
test
push
adc
adc
jl
lcall
xchg
es
iret
lock
in
jmp
insl
mov
fisubrs
adc
inc
mov
lret
jns
or
repz
sti
lret
pop
cmp
push
cli
sub
pop
enter
add
call
dec
xor
in
call
addr16
xchg
add
push
cwtl
je
out
fbstp
mov
lock
sbb
lods
popa
int3
add
imul
repz
add
mov
xchg
jae
shrb
cld
cmpsl
or
insl
jmp
lods
sub
hlt
sbb
stos
int
cmc
into
add
movsb
pop
sbb
ljmp
stos
inc
push
mov
mov
push
cs
xchg
mov
inc
sub
stos
push
les
mov
mov
sbb
ja
xorl
and
incl
shrl
sbb
rorl
js
in
stos
cmp
das
mov
add
das
adc
out
mov
push
mov
sti
nop
cmp
lock
or
movsb
int
cmp
orb
popf
mov
xor
push
cmp
dec
pop
clc
lods
call
sub
push
cmp
sbbb
jge
test
rcll
mov
ficoms
jge
ror
pop
outsl
pop
xor
adc
ljmp
dec
pop
mov
cmp
pop
xchg
aas
push
add
sub
pop
mov
push
cmp
je
jnp
stos
add
pop
sbb
add
inc
pop
mov
out
int
jge
leave
xchg
loopne
sarb
jae
pop
or
adc
jns
sbbl
scas
jl
cmc
in
mov
int3
mov
fwait
dec
xchg
mov
add
or
fs
outsl
arpl
or
aad
and
int3
add
dec
adc
mov
xor
xor
cmp
pushf
mov
mov
push
mov
jns
jns
gs
in
dec
ja
xor
std
sub
adc
dec
into
stos
scas
insb
lret
add
sub
fs
andb
xor
dec
push
mov
mov
jnp
fstl
jne
lock
mov
jae
daa
shrb
xchg
inc
dec
movsb
xchg
aad
cli
out
out
dec
push
xor
xchg
ds
insl
xor
add
stos
pop
push
jle
xchg
mov
or
cli
ret
aaa
stc
jge
sub
ljmp
adc
mov
sub
pushl
in
shlb
inc
xor
jno
xorl
mov
add
insl
cli
sub
jne
mov
sti
adc
add
ds
and
adc
and
loopne
into
hlt
xchg
cmpb
ss
push
hlt
ret
sub
inc
scas
fcmove
cmpsb
loope
and
jo
popf
into
xchg
lret
add
mov
lret
rorb
push
lret
or
adc
xor
clc
imull
push
test
xor
cmp
xchg
vunpckhps
es
xor
cli
test
sbb
mov
xor
out
xchg
cmpl
mov
ds
into
popf
xor
add
mov
test
pop
cmp
xchg
inc
insl
pop
jae
xor
sub
inc
daa
mov
rorl
cmpsb
push
mov
push
mov
sub
int3
jmp
xchg
je
imulb
sub
mov
test
push
test
jb
mov
push
push
fs
sbb
jae
sbb
stc
int
popa
outsl
lret
xlat
mov
lock
jecxz
insl
popf
mov
orb
sub
aad
shr
aam
out
mov
pop
sbb
iret
gs
imul
insl
cmp
xlat
not
leave
movsl
add
insb
in
and
stos
mov
cmp
mov
mov
jo
aam
mov
rcr
jg
inc
divb
and
sti
mov
and
cmp
xor
pop
xor
inc
shrl
insb
push
adc
inc
test
icebp
gs
mov
push
cli
shlb
mov
xchg
testb
repz
xchg
or
lret
outsb
or
jne
lea
ja
sbb
push
fcmovne
push
outsl
mov
in
inc
les
inc
xor
dec
cwtl
ljmp
ja
int
add
mov
out
jnp
daa
sub
stos
mov
inc
dec
and
xchg
push
stc
sbb
mov
dec
push
mov
jp
cmp
fwait
imul
and
xorl
into
je
mov
jl
jmp
rorl
jmp
mov
test
out
inc
jns
frstor
in
pusha
into
icebp
jb
popf
xchg
or
sbb
sbb
mov
mov
add
fistps
and
sub
cmp
pop
cmpsb
aas
sub
fisttpll
mov
cmc
xchg
lcall
outsl
adc
mov
repnz
gs
rorb
pop
sahf
fsubs
test
fcmovnu
mov
push
dec
jae
aas
pop
jno
xor
loopne
dec
xor
jge
shr
aam
dec
sub
dec
dec
outsb
xor
stos
pop
outsl
mov
test
xor
ror
inc
test
or
jle
push
adc
int3
xchg
push
lretw
cmp
sbb
mov
mov
loop
rorl
and
xchg
std
scas
clc
rcrb
inc
sti
push
xor
daa
mov
cmpsb
in
sub
cli
push
and
inc
xchg
jge
imul
push
sub
sti
iret
call
dec
adc
adc
dec
std
inc
std
xor
nop
subb
loope
lods
inc
jle
inc
je
adc
outsb
inc
push
lret
lock
test
testb
cmp
push
adc
sbb
push
and
jge
xor
mov
pop
adc
add
jne
ljmp
push
test
test
pop
mov
xchg
jp
ret
xorl
fs
adc
pop
test
pop
sbb
leave
jg
mov
jle
sub
xor
rorl
in
push
pop
xor
cmp
repz
jae
mov
fs
lret
lods
scas
push
pop
dec
clc
pop
cmc
ret
or
seta
pop
sbb
xlat
inc
and
scas
sbb
mov
stos
ds
cmpsl
andb
lods
cmp
int3
sub
push
jmp
test
sbb
outsl
mov
sub
clc
jg
jbe
out
sub
pop
push
sti
xchg
inc
hlt
sub
jmp
ja
icebp
push
push
or
lahf
pop
pop
lock
test
cwtl
ret
mov
stc
dec
xor
data16
in
cld
sbb
xorb
mov
mov
cmp
aas
icebp
shlb
sbb
addl
mov
arpl
pop
add
mov
jle
xchg
bound
push
out
lock
jecxz
fdivrs
aaa
mov
cmpsl
push
jb
outsl
and
mov
fcoms
sahf
out
push
and
aaa
or
sti
das
rcr
add
cmpsb
dec
jmp
cmp
bound
mov
cmpb
cmp
jo
lcall
bound
out
cmp
js
cli
inc
pop
adc
and
push
pusha
sbb
or
aam
out
inc
mov
push
lods
aaa
das
mov
cmp
cmp
pop
adc
add
mov
dec
sbb
fs
and
add
fcomps
sbb
insl
movaps
in
pusha
mov
xor
pop
mov
jmp
pop
or
imul
sbbl
jle
sti
pop
sbb
xor
cwtl
iret
dec
pop
movsl
hlt
push
clc
add
jns
xchg
and
mov
gs
arpl
mov
adc
sub
and
adc
add
das
call
xchg
mov
mov
ret
push
mov
out
jbe
xor
push
sbb
add
cmpsb
inc
dec
je
sbb
int
cmc
aas
outsb
or
jae
cmp
arpl
mov
mov
adc
ljmp
popf
daa
mov
push
cmp
inc
lret
mov
inc
jle
sbb
mov
mov
push
out
fldl
fldt
je
insb
in
gs
pop
jno
inc
adc
lahf
cld
xor
lcall
dec
xorl
pop
pop
rep
pop
cli
cmpl
pop
fwait
inc
ljmp
sub
loope
test
adc
jne
int3
aas
rcrl
sub
inc
dec
push
and
or
xchg
mov
jecxz
cwtl
xor
mov
sbb
je
mov
sbb
loop
adc
lods
pop
popf
xchg
negb
xor
mov
nop
test
adc
mov
cli
push
jo
xorl
sahf
xchg
loopne
popa
out
cmpsl
jge
into
iret
add
push
push
cld
ds
and
mov
adc
popf
xchg
mov
int3
cld
andb
xchg
rcll
and
add
sbb
lahf
jecxz
mov
mov
push
jne
pop
aam
lods
jge
xorl
sub
stc
sahf
mov
mov
js
outsb
pop
testb
adc
notb
cmpsl
shrb
and
pop
lds
jnp
shll
sbb
or
leave
fistl
cmp
das
out
out
lahf
adc
and
xor
cmp
push
stos
je
in
mov
jb
and
add
arpl
sahf
pop
xor
out
jno
movsb
mov
add
add
sbb
jne
push
xor
mov
hlt
adc
pop
aas
sbb
dec
mov
ffreep
aas
cmpb
jnp
dec
add
sub
daa
mov
or
repz
and
jmp
or
clc
xchg
or
jae
mov
cmpsb
xchg
inc
xlat
mov
xlat
lods
or
imul
outsl
hlt
inc
popa
push
sti
inc
jno
sti
push
pushf
in
xor
cmp
adc
fsts
loopne
push
xor
cmp
mov
fldl
jo
cs
mov
scas
adc
jnp
sbb
pop
sub
in
ss
jo
inc
xchg
push
out
push
xor
repz
jnp
mov
mov
inc
sti
pop
outsl
out
stc
mov
and
fistpll
inc
inc
xchg
xchg
fimull
std
or
pop
ffree
rcl
mov
arpl
ffree
jnp
repnz
inc
jo
push
xchg
neg
sbb
adc
push
sub
rcrl
sbb
jle
lret
mov
lcall
adc
mov
cmpsb
push
repnz
adc
mov
es
mov
out
mov
lods
xchg
push
dec
scas
jg
xchg
loopne
inc
fwait
cltd
js
repz
jae
dec
dec
aaa
stos
ffree
mov
clc
icebp
fstp
inc
add
dec
dec
pushf
mov
out
popf
sbb
dec
cmp
aad
sub
push
out
add
cmpb
rcrb
dec
mov
iret
je
mov
rorb
and
addr16
lods
adc
xchg
lods
jecxz
test
dec
fistpl
pop
or
sub
push
bnd
decl
sub
ja
sub
cmp
inc
pushf
jno
mov
pop
jne
scas
lret
out
lret
xor
loopne
lods
mov
and
inc
push
test
int3
clc
sar
jae
push
rcrl
cmp
mov
movsb
test
loop
fs
pop
sub
pop
add
outsl
sub
stos
out
and
dec
lahf
add
lods
add
jg
jnp
out
inc
mov
inc
sub
mov
sub
clc
add
inc
push
outsl
nop
iret
push
mov
and
or
cmpsl
push
addb
fs
sub
sbb
aaa
sub
imul
pop
addr16
push
cli
or
and
lea
mov
pushf
fs
push
shr
sbb
mov
or
fucom
aad
lahf
jb
shrl
cltd
xchg
inc
inc
pop
out
inc
jbe
jecxz
fbstp
xchg
cmovp
enter
sbb
fs
enter
cmc
loop
mov
hlt
stos
clc
les
call
loop
or
push
xor
mov
adc
pop
xchg
pop
cmc
inc
std
jl
inc
fsubl
add
es
daa
pop
and
cmc
test
and
xor
popa
dec
repnz
push
push
cmc
sbb
ljmp
pusha
jne
mov
lret
sub
idivl
scas
and
xor
pop
vmwrite
outsb
dec
je
mov
adc
push
pop
je
insb
mov
pushf
fiaddl
imul
jb
je
leave
or
andb
jl
add
aam
inc
mov
in
mov
stos
decl
test
sub
cwtl
mov
mov
and
ds
in
dec
mov
mov
mov
pop
or
xor
lahf
and
das
jb
cmp
mov
push
cli
rcrl
push
mull
ss
jmp
and
pop
mov
repnz
loop
jo
loop
das
inc
jns
lds
addr16
lock
push
out
sub
dec
cwtl
movsb
xor
inc
adc
jnp
int
fbld
aad
push
imul
cmp
dec
xchg
cli
inc
jo
gs
jne
xor
push
cli
cli
push
pop
popf
imul
mov
test
adc
test
lods
push
jae
xchg
adc
imul
test
cmp
xchg
insb
push
lcall
lods
test
out
mov
in
dec
sbb
mov
sbbl
jbe
jle
push
adc
cmp
adc
sub
sbb
test
xchg
pop
imul
mov
mov
hlt
mov
push
xor
dec
packssdw
pop
cmp
fdiv
sbb
pop
pop
dec
int3
inc
adc
imul
mov
xchg
inc
add
idivb
cmp
cli
mov
fs
pop
xlat
cmpsb
sbb
mov
adc
test
xchg
rcrl
adc
adc
xor
xor
das
dec
aas
bswap
push
bound
test
cmpsl
fildl
xor
stos
sbbl
sub
fsubs
push
push
out
sub
push
ret
test
sub
inc
xor
sahf
mov
fidivs
loope
pop
inc
pop
out
dec
jns
test
push
bound
std
stos
dec
cltd
dec
into
imul
lret
std
mov
std
lahf
push
fs
pop
jae
jns
xchg
mov
mov
cltd
mov
push
test
out
orl
and
bnd
pop
lret
xchg
adc
cwtl
shlb
nop
xor
wbinvd
cmc
push
cs
dec
les
dec
xchg
xlat
icebp
inc
xor
fidivl
cs
aad
add
lods
out
seto
inc
mov
jp
or
jge
out
cmp
mov
or
roll
mov
and
js
lret
sbb
mov
dec
je
fcoms
adc
in
jp
and
push
adc
jge
and
lret
insl
adc
mov
mov
add
push
nop
idivb
cltd
adc
in
scas
fstps
loopne
jb
inc
in
cmp
push
or
add
les
gs
inc
mov
add
jae
xchg
cmp
dec
xchg
out
in
sbb
aam
out
dec
mov
ljmp
pop
imul
hlt
mov
cmp
jns
xor
rolb
insl
push
test
jmp
lods
jnp
mov
mov
lahf
and
xor
mov
mov
xlat
fbld
jp
fs
aad
int
mov
xchg
mov
inc
push
out
inc
add
dec
add
jge
sbb
push
jmp
mov
fsubrl
jmp
xchg
adc
lret
and
loop
sbb
ljmp
mov
inc
cmp
shll
cmp
loope
pop
ret
rcrl
mov
cli
jecxz
mov
xlat
xchg
lds
mov
popa
push
mov
inc
push
mov
fcomps
cmpb
test
ss
test
test
lods
mov
add
jne
lret
xchg
inc
jl
fisubrs
into
cmpxchg
adc
push
mov
lods
mov
adc
das
pop
cmpb
pop
adc
sbbb
lahf
pop
aad
inc
mov
les
ror
shrb
cmp
xor
dec
inc
pushf
leave
sub
jnp
xchg
dec
aam
cmp
sbb
jl
movq
xchg
sbb
and
add
pusha
fcoml
negb
pop
sti
mov
pop
rorb
cmp
call
push
int
mov
add
dec
and
pop
xor
or
mov
inc
out
insb
cli
ja
mov
js
fs
inc
or
out
push
xchg
sbb
ja
je
mov
pusha
lret
std
mov
and
mov
dec
cmp
gs
mov
stc
pop
cwtl
es
or
xchg
decl
and
popa
push
jae
ljmp
pusha
cwtl
pushf
lds
inc
jbe
add
lods
ds
sti
adc
pop
das
add
xor
mov
aad
dec
adc
fdiv
sti
ljmp
mov
je
incb
jmp
xchg
das
lods
dec
js
sbb
inc
inc
pop
aad
aam
push
fcompl
mov
loope
inc
inc
mov
sub
lahf
pop
cmpsb
and
dec
in
xor
ret
inc
pop
mov
and
sbb
mov
dec
rcl
jb
mov
movb
jnp
push
sbb
push
out
xor
inc
xor
sub
and
mov
push
subb
lods
addr16
pop
inc
push
xchg
xor
cmpsb
enter
cmp
icebp
xchg
insb
adc
push
lcall
mov
aam
repz
sbb
mov
dec
jecxz
mov
pop
mov
add
addr16
mov
mov
fs
inc
shlb
jmp
pusha
add
jp
push
mov
loop
push
pop
lods
fldt
ss
mov
jmp
adc
ret
nop
xchg
outsb
mov
mov
in
out
mov
test
fildl
ds
mov
aad
xchg
mov
mov
or
xchg
gs
add
add
rorl
mov
cli
popa
sbb
push
inc
pop
out
xchg
in
or
push
cmpsl
pop
mov
test
jb
lea
repz
daa
dec
adc
pop
inc
lahf
xchg
inc
cld
add
loope
add
mov
out
test
add
mov
or
insl
mov
cld
xchg
lcall
shl
xor
hlt
mov
fwait
jmp
aas
iret
js
cltd
pop
xor
rol
sahf
loop
or
or
aaa
movsb
fs
loope
stos
push
add
pusha
mov
int
cmp
divl
mov
cmpsb
shll
lea
sbb
cli
inc
mov
lcall
daa
xchg
out
add
adc
push
sahf
sti
movsb
les
enter
insl
aas
sahf
push
mov
and
mov
popf
arpl
xlat
test
xlat
xchg
dec
sub
mov
in
arpl
stc
sub
sti
aad
pop
jp
cltd
stos
inc
popa
inc
test
pop
mov
xor
inc
fbld
dec
ss
sbb
mov
mov
ret
data16
cmpsl
mov
sti
cmp
push
addb
xchg
adc
out
popa
mull
xlat
enter
xchg
mov
mov
lret
in
sbb
outsl
xchg
push
mov
dec
xchg
dec
and
gs
push
sbb
fsubrp
daa
div
add
cmp
add
inc
sub
out
adc
dec
jo
cmp
xlat
loop
test
or
je
fidivs
push
inc
or
xor
jl
pusha
inc
mov
sub
push
xor
in
add
jmp
fwait
lock
xor
push
mov
aaa
jo
test
ja
test
inc
mov
sbb
jmp
pop
push
push
and
cli
dec
or
popf
xchg
fisttps
inc
push
sub
cmp
cld
inc
xor
dec
mov
pop
push
sub
dec
sub
adc
push
cmp
sbb
dec
jle
cld
xor
inc
or
lret
lcall
cmpsb
bound
stos
adc
je
pusha
nop
addl
push
out
dec
sbb
cmc
movsl
add
xor
fldenv
mov
xor
ds
mov
sahf
popa
jle
xchg
mov
dec
pop
cwtl
jns
outsl
dec
jo
jg
popa
mov
sub
push
mov
in
out
pop
or
mov
aad
mov
clc
mov
xchg
pop
push
daa
mov
clc
xchg
fbld
fimull
push
pop
xchg
fimull
subl
lock
cmp
adc
lods
les
leave
inc
pop
insl
daa
add
inc
adcb
mov
cmp
xchg
sub
jmp
stc
imul
push
outsb
mov
push
daa
push
or
cmp
es
sbb
push
dec
iret
adc
jle
cs
stos
shl
push
cld
stos
adc
jne
mov
or
jmp
call
ret
pop
xor
imul
ja
test
jbe
popf
mov
and
fldz
in
fdivr
mov
mov
dec
in
int3
sub
lahf
fstps
test
sbb
mov
push
fsubrl
pcmpgtb
inc
cmp
and
sbb
cmp
sbb
and
insl
xor
rcrb
adc
inc
xchg
xchg
add
aad
sub
jecxz
ljmp
rolb
cmpb
ret
cs
out
repnz
rorb
mov
daa
xchg
fs
aaa
movsl
adc
fimuls
cmp
sbb
cmpl
shlb
daa
mov
push
and
inc
lock
xchg
fdivl
jbe
shlb
pop
sbb
xlat
dec
movsb
inc
dec
and
das
es
pop
sbb
sahf
cmp
and
mov
cwtl
pop
mov
in
addr16
inc
stos
ljmp
xlat
mov
cmp
jg
sbb
test
sbb
jmp
ret
cli
dec
xor
out
sub
scas
in
sub
cmp
mov
ret
jecxz
popa
mov
call
sbbl
fimull
bound
mov
enter
xchg
xchg
std
jp
xorb
lock
shr
ljmp
jmp
outsb
ss
dec
push
jecxz
ss
add
jae
cmp
in
and
xchg
pop
pop
push
xor
imul
sub
cmp
cli
addr16
mov
cmp
jmp
divb
push
jno
add
decl
inc
lock
int
je
pop
mov
bound
mov
mov
stos
pop
ret
pop
adc
dec
and
lock
cmpsl
ljmp
and
push
inc
or
inc
xchg
lods
call
or
jb
xchg
push
iret
push
ds
retw
mov
sub
out
out
jae
stc
mov
xchg
sbb
xlat
mov
pushf
stos
inc
add
loope
incb
adc
mov
xor
icebp
and
fists
in
movsb
in
add
jle
lahf
add
jl,pn
aas
xchg
fld
sbbl
js
mov
inc
and
out
test
jecxz
xor
add
pop
andb
pop
les
add
add
sbb
jmp
mov
sbb
lea
mov
cmp
xor
pop
inc
xchg
jmp
ficoms
stc
mov
cmpsb
hlt
mov
inc
lret
and
dec
in
inc
int3
rorl
adc
mov
pop
push
repz
inc
xchg
adc
push
insb
bound
push
lods
add
mov
jp
insl
mov
mov
xchg
cmp
lahf
push
dec
xchg
sub
jb
inc
das
sbb
je
bound
push
add
add
setne
sub
adc
sahf
icebp
stos
inc
or
mov
mov
sub
sub
rorl
and
fdivrs
jno
adc
dec
je
cs
sub
jb
mov
and
js
or
inc
mov
pop
jno
pop
sub
sbb
jne
push
dec
pop
push
pop
adc
xor
in
mov
jle
cmpsl
pop
cmpsl
push
and
pop
inc
mov
xor
push
mov
mov
xchg
mov
call
jmp
js
out
scas
subb
push
imul
and
out
sbb
cmp
out
ja
jbe
in
mov
push
add
sbb
in
ja
stos
mov
into
addl
inc
push
mov
mov
cmp
and
xor
mov
rcll
push
test
push
pop
outsl
mov
push
out
in
loop
enter
mov
subb
xor
scas
testl
mov
sbb
cmpsb
push
lea
in
mov
pusha
repnz
pop
fcomi
daa
cwtl
mov
aas
mov
cwtl
add
repnz
push
and
inc
mov
imul
scas
mov
pushf
sbb
xor
ss
mov
sub
and
pop
sub
pop
and
out
aad
sbb
sub
push
pop
mov
leave
add
push
in
stc
fdivrl
sub
lcall
cmp
adc
xchg
push
sub
sbb
jge
sub
bound
push
push
aam
sbb
pusha
cmp
cmpsb
ss
mov
enter
push
or
and
jno
adc
inc
enter
sbb
aas
xor
mov
jp
push
sbb
inc
xlat
add
stc
adc
inc
ja
cmp
jle
fiaddl
dec
popf
hlt
xchg
adc
mov
sahf
adc
push
pop
mov
ja
leave
mov
add
outsb
cwtl
pop
rolb
fiaddl
outsb
xchg
test
or
stos
mov
add
psubsw
mov
cmpsb
out
shlb
sahf
jno
push
push
movsb
push
mov
dec
sbb
aad
mov
stos
pop
push
mov
cmpsl
addr16
sbb
xchg
dec
push
cmp
jns
data16
faddl
push
adc
inc
xchg
jp
jae
arpl
adcl
mov
push
mov
jmp
aas
iret
mov
test
out
repnz
sbb
mov
jmp
mov
and
xchg
and
mov
push
push
stos
cmpsl
fidivl
jno
mov
cmpl
adc
daa
inc
fdiv
xor
mov
outsl
aas
jno
inc
cmp
aaa
popa
ljmp
or
sbb
sbb
mov
out
fildll
add
data16
mov
dec
insb
out
push
inc
data16
sti
inc
and
xor
mov
out
pop
das
xchg
test
pop
pop
sbb
mov
push
jns
call
jae
subb
out
mov
rcrb
inc
mov
or
pxor
lods
jp
pop
sbb
or
int3
cmpsl
xchg
cld
scas
push
rcll
mov
test
lds
or
mov
mov
lds
stos
pop
sarl
xorb
or
jo
mov
cltd
leave
int3
outsb
int
in
jae
jl
fidivrl
stc
mov
dec
insb
mov
insb
mov
push
xchg
mov
add
xor
or
mov
sub
and
xor
stc
add
pop
mov
dec
sbb
adc
xchg
dec
sub
rclb
sbb
lret
jle
flds
fcomip
fdivl
sbb
cld
xchg
inc
es
sbb
push
pop
add
into
xchg
mov
es
add
xchg
add
fidivrs
mov
xorl
xchg
sbb
xchg
ret
push
xchg
mov
imull
and
lret
mov
push
movsl
sub
adc
cmc
popa
lea
add
outsl
in
sub
jno
pop
out
cmp
daa
mov
out
add
in
jae
and
outsb
jge
mov
mov
adc
mov
fwait
loope
sbb
add
push
pop
stos
push
fs
pop
lcall
inc
jbe
paddd
imull
mov
fsubs
inc
sub
stc
adc
mov
mov
add
mov
jmp
cmp
xchg
sub
cmc
cltd
pop
dec
mov
mov
cmp
adc
fcomps
mov
cmp
test
xchg
js
pop
lcall
mov
inc
jnp
adc
push
sub
sbb
dec
xchg
push
push
rcr
pop
push
or
lea
in
pop
rcr
lea
js
leave
lods
lret
adc
je
lsl
add
or
mov
in
xchg
scas
mov
sub
add
lock
xor
aad
int
loope
dec
sub
addr16
inc
push
sub
xor
adc
jg
fsubrl
fldt
jb
int3
pop
or
push
cwtl
int
ljmp
or
ds
std
jle
das
ret
clc
pushf
popl
shr
mov
into
aad
test
pop
stos
mov
push
or
fwait
xor
push
jb
pop
mov
into
mov
pop
cmp
push
movsl
fsubs
lods
mov
and
jne
sbb
jo
fwait
stos
mov
pop
repz
mov
fs
and
xor
lret
mov
ret
insb
scas
sahf
inc
in
dec
cmpsl
push
and
loope,pt
outsb
fsubrl
call
outsl
xor
rclb
inc
pop
test
addr16
or
jb
cltd
pop
xor
pop
pop
mov
popa
and
adc
scas
hlt
std
adc
int
or
test
mov
shll
push
sub
push
rcrl
out
cltd
or
aas
inc
sti
adc
int
mov
je
out
xlat
mov
stos
sti
es
cltd
and
sub
push
xor
inc
aam
cli
and
fldenv
sbb
pop
popa
xor
xor
dec
mov
popa
movsb
mov
fldl
cmp
jle
and
js
xor
dec
fsubrl
cmp
aas
pop
subl
sbb
stos
dec
mov
sub
sbb
push
dec
xchg
jne
push
xor
adc
jp
ret
pop
add
mov
movsl
mov
lods
fcmovbe
cmp
xchg
imul
xorl
popf
mov
xor
push
or
mov
sbb
xchg
adc
test
or
lods
icebp
xlat
mov
nop
mov
sti
sbb
aas
hlt
pop
pop
xor
aaa
mov
sbb
aaa
xlat
dec
sub
sahf
fdivs
sub
inc
inc
and
outsw
aas
mov
or
push
sub
out
cld
pop
xlat
insb
and
sub
cmp
ss
shrl
rcll
mov
mov
push
or
cmp
shll
mov
out
mov
inc
or
mov
popa
rolb
cmpsl
mov
dec
bound
lret
adcb
dec
out
push
mov
inc
test
js
jne
scas
ret
xor
outsl
int
popf
neg
setne
push
mov
das
dec
cmp
in
push
push
sarl
and
and
popa
frstor
sbb
rcrb
jg
xchg
sub
cmp
hlt
xlat
loope
jmp
stos
pop
sbb
cmpsb
sysexit
outsb
xor
lds
and
jle
sbb
dec
pop
stos
mov
cs
popa
mov
repnz
mov
fcmovb
dec
data16
dec
inc
mov
mov
lods
imul
mov
adc
inc
mov
icebp
mov
adc
aas
outsl
sbb
loope
insl
outsb
cli
cwtl
mov
mov
lods
cld
mov
test
nop
data16
xchg
inc
or
lret
push
bound
and
adc
inc
outsb
and
pop
gs
and
adc
lods
daa
and
rorl
push
cli
push
xchg
mov
mov
xor
xor
sub
rcll
imull
fiadds
in
cmp
pop
jmp
dec
add
pop
xchg
fldl
push
pop
mov
mov
lods
dec
stc
test
mov
or
les
fisubl
fcomi
add
cmp
sbb
es
movsw
or
shlb
sbb
pop
mov
add
xor
jno
jecxz
dec
sbb
dec
xor
mov
into
test
enter
sahf
mov
push
mov
add
and
and
mov
sub
xchg
cli
mov
pop
cwtl
lcall
push
cmpb
inc
xor
out
push
daa
xchg
int3
fiadds
ret
jp
das
mov
rcrb
pop
add
mov
es
fistl
decl
fists
mov
bound
out
cli
mov
das
add
add
xor
jmp
es
push
inc
xchg
and
out
rcll
pop
or
sahf
push
lcall
cmpsl
test
js
pop
testl
cs
jno
aad
in
dec
xor
sub
lea
fs
add
mov
xchg
push
in
xchg
jne
cmp
jmp
adc
leave
cmpsl
movsb
movsb
aaa
fsubrs
insb
xchg
xchg
jo
jmp
adc
cltd
dec
out
out
les
stc
popf
orl
xchg
dec
xchg
addr16
je
sbb
push
sbb
js
orb
das
and
cld
adcl
sbb
aam
out
cmc
push
arpl
fisubs
fwait
jns
or
lods
jbe
xor
aam
pop
push
and
add
fwait
pushf
aad
sbb
in
add
inc
pcmpeqd
pop
out
popl
mov
je
mov
inc
inc
xchg
push
or
xchg
sti
neg
push
jns
fxch
cs
jecxz
daa
aaa
pop
mov
jo
jmp
jp
je
jo
and
jl
inc
jmp
add
add
iret
sar
pop
push
jmp
leave
jp
insl
mov
imul
popa
cli
fs
jecxz
sarb
icebp
js
or
loope
les
or
ljmp
mov
cmp
int
inc
sub
dec
inc
int3
cs
je
xchg
std
lods
sbb
shr
aam
ret
scas
stos
mov
push
fnsave
insl
dec
jns
add
sbb
mov
nop
pop
mov
filds
mov
mov
sub
mov
movsl
std
xchg
in
clc
movups
add
pop
or
cltd
int3
pop
and
je
inc
sahf
pop
adc
pop
jne
and
shr
add
adc
jbe
popf
das
push
out
jge
sarl
fldenv
xor
nop
inc
add
xor
jecxz
adc
cwtl
dec
enter
mov
sti
test
mov
dec
lret
ret
or
cmp
inc
int3
cmp
cmp
push
out
jne
mov
mov
shlb
sahf
movsb
mov
mov
scas
cld
cld
sub
push
xor
pop
inc
or
shll
add
test
lret
mov
fldl
pop
cmp
pop
pop
cltd
add
cmp
movhps
shrb
xchg
pop
enter
lods
mov
ss
ds
sub
je,pn
xor
jl
mov
popf
lahf
and
inc
daa
push
dec
ss
notl
div
out
sub
pusha
inc
or
jl
testb
fsubrl
cwtl
rorb
cmpsb
sbb
xor
sahf
cmp
bound
orb
jne
jae
mov
mov
xor
adc
xlat
xchg
mov
jecxz
pop
decb
push
loop
cmc
mov
js
movsl
arpl
repnz
mov
or
add
mov
push
push
push
mov
mov
mov
sbb
mov
xor
ret
mov
pop
xor
popf
frstor
out
inc
add
call
shrb
xor
arpl
mov
pop
fldenv
lea
lods
jle
sbb
sub
lcall
lcall
int3
fdivrl
pop
popa
or
adcl
leave
aaa
adc
repz
or
ljmp
cmp
pushw
adc
outsb
cltd
movsb
test
push
gs
out
pop
es
test
dec
imul
add
loop
int
cld
or
add
or
or
rolb
push
jecxz
leave
aaa
push
mov
lret
fdivrs
jo
xchg
and
sub
out
sbb
sub
mov
mov
xor
imul
icebp
bound
arpl
xchg
iret
add
xchg
xchg
mov
dec
js
xchg
aam
sub
fsubl
sub
pop
in
pop
sub
xchg
fnsave
in
adc
in
rcr
scas
out
addr16
push
leave
sbb
xor
inc
dec
or
push
mov
fcomip
lret
testl
push
jno
mov
mov
scas
popf
inc
adc
sbb
or
pop
xchg
lcall
mov
shlb
cmpsb
mov
insb
sbb
xlat
xor
arpl
xchg
add
lock
inc
repnz
loopne
cld
movsb
pop
mov
frstor
pop
mov
mov
pop
scas
loopne
test
sub
sbb
sub
idivb
data16
sahf
in
cwtl
in
jmp
pop
in
and
das
jl
push
mov
jne
sbb
ljmp
push
lret
cmp
cmpsb
cld
sub
xchg
pop
dec
test
not
dec
arpl
outsl
xor
sub
movsw
xchg
inc
test
mov
push
lock
jbe
outsb
les
mov
mov
xchg
cmp
or
mov
jae
mov
jmp
ss
test
mov
pop
je
pop
roll
movsb
fidivrl
dec
sbbb
pop
shlb
push
pusha
popa
arpl
push
and
mov
je
cwtl
fstpt
and
iret
push
mov
mov
js
int
in
lods
ret
sbb
movsb
push
dec
jmp
cmpb
push
outsl
out
je
dec
arpl
jnp,pn
mov
xchg
ljmp
adcb
adc
cs
loopne
or
fucom
adc
and
in
cmp
sub
cli
cmp
mov
fadds
dec
and
in
push
jmp
mov
imul
inc
add
pop
sbb
add
sub
jno
fs
push
mov
shlb
pop
orl
or
into
jbe
xchg
pop
push
push
xchg
fsubrs
inc
sbb
popa
subl
in
dec
xor
push
scas
ss
mov
adc
mov
loope
jno
and
cmpsl
pop
roll
loop
jbe
pop
inc
mov
sub
push
mov
or
mov
mov
mov
popa
mov
xchg
lods
cwtl
mov
sub
leave
es
xor
inc
and
or
pop
fucomi
jmp
loop
mov
cmp
cmpsl
jg
lods
hlt
mov
mov
sbb
cltd
mov
push
jmp
aaa
push
add
insb
sbb
dec
push
jno
jae
jne
add
es
lock
xor
mov
das
jne
pop
sbb
mov
sub
fidivrs
dec
add
arpl
mov
mov
rcll
inc
sbb
call
xchg
stos
mov
add
lahf
cwtl
repnz
lods
movsl
mov
fmul
rcr
repz
cmp
add
lcall
jge
mov
push
and
mov
push
aaa
sub
addr16
push
int3
dec
int
clc
fmulp
scas
jne
mov
test
fsts
stos
push
scas
repnz
cli
nop
lods
movsb
lods
in
outsb
inc
cli
loop
dec
add
dec
lea
mov
arpl
mov
or
sub
jp
gs
push
imul
mov
fidivrl
aam
fcomps
lds
ljmp
mov
js
shr
stos
aas
lea
or
cs
jnp
sarb
and
xor
or
jp
dec
or
in
mov
sbb
or
push
xchg
fstpl
sub
ja
pop
cs
mov
push
dec
imulb
xchg
push
aam
mov
icebp
fld
das
pusha
mov
test
pop
iret
insl
lcall
and
and
push
push
or
push
das
shl
mov
cli
daa
mov
mov
jae
push
push
repnz
insl
xor
gs
mov
jnp
insl
push
sbb
sbb
jo
lret
stc
push
imul
out
xchg
mov
inc
or
push
fdiv
inc
or
mov
cmpsl
ljmp
adc
inc
inc
xchg
pop
mov
or
lahf
aas
push
stc
outsl
ret
pop
jae
mov
xchg
mov
dec
sbb
jge
jne
xchg
add
cmc
jl
fcoms
js
inc
arpl
and
xor
sbb
push
ret
cltd
mov
xchg
lds
ret
or
inc
pinsrw
pop
ficomps
cltd
mov
inc
mov
scas
mov
arpl
dec
ret
ja
inc
sbb
cmpl
mov
mov
add
sbb
or
mov
sbb
add
popa
jae
test
outsl
sbb
jl
dec
call
nop
mov
sahf
cmp
push
adc
mov
aas
mov
fildl
xor
aad
xor
clc
clc
pop
leave
adc
and
sbb
mov
sbb
ret
cmpsl
sbb
adc
push
inc
stos
fbstp
mov
stos
rclb
lcall
testl
fs
rcl
or
dec
xor
shlb
idiv
inc
ds
xor
jmp
adc
sub
dec
adc
jnp
add
add
or
hlt
mov
cmp
das
int
scas
adc
jb
mov
test
ss
leave
and
clc
pop
mov
repnz
push
add
sub
sarb
fldl
xor
sbb
jge
inc
arpl
adc
jb
inc
jb
push
nop
dec
rcrb
cld
jge
repnz
lds
xorl
ret
inc
mov
outsb
fimuls
insb
bound
push
fs
loope
push
filds
xchg
cld
adc
push
adc
jp
xor
popa
dec
outsb
aam
or
lods
call
pop
sar
sub
iret
call
lahf
lods
icebp
adc
mov
mov
cmpsl
sub
and
add
mov
lahf
int
aad
jbe
push
adc
insb
repnz
cmp
lock
rolb
or
sub
jge,pt
pusha
cmp
push
mov
push
mov
and
dec
sarb
or
jecxz
test
mov
jecxz
mov
ret
fsts
inc
mov
pop
mov
cmp
daa
push
sbb
andb
ficoms
dec
in
and
mov
inc
jno
mov
pop
mov
fwait
inc
enter
dec
pushf
ss
pop
hlt
and
idivb
jg
popa
mov
pop
mov
rcll
adc
cwtl
or
mov
insl
jo
mov
je
stos
int3
dec
xchg
inc
mov
xchg
pop
jno
push
xchg
fs
movsb
aas
addr16
movsl
xchg
mov
rorb
push
fstl
lret
mov
sub
or
rcrb
pop
ret
imull
enter
dec
mov
stos
popa
ret
mov
xchg
insb
stos
scas
cld
shll
fistps
outsb
mov
outsl
shlb
xchg
xchg
mov
gs
mov
xchg
push
fucomi
fxch
inc
and
lods
addl
push
lret
xchg
jns
pusha
in
es
shlb
scas
and
rcl
mov
dec
sub
jnp
loope
idivb
lea
out
mov
mov
mov
and
mov
push
std
and
push
or
or
cmpsb
sarl
push
rcl
arpl
sub
clc
add
jne
inc
add
mov
xchg
sbb
fidivrl
lds
insb
mov
sbbl
les
mov
xchg
bound
call
in
push
mov
mov
jne
pop
mov
les
dec
sbb
mov
cmp
push
movsl
or
mov
and
repz
mov
inc
lret
out
cmp
sahf
xor
inc
ret
les
xor
pop
gs
shlb
add
je
dec
mov
push
or
add
test
mov
pop
lret
inc
cmp
movsl
fidivrl
and
inc
inc
and
or
rcrb
jp
shl
mov
mov
cs
stos
fcomps
push
sar
orl
leave
or
das
push
stc
mov
mov
iret
addl
and
insb
xchg
std
add
jb
pop
and
push
xor
jne
ljmp
mov
cli
cmc
mov
shl
xlat
pop
pushf
mov
scas
lods
in
or
sti
fistpll
inc
pushf
xchg
movsb
push
add
xor
loop
mov
push
lods
imul
cmpsl
mov
lret
cmp
test
pop
popa
orl
cmp
mov
xchg
fincstp
adc
loop
xchg
add
mov
push
mov
adc
mov
lea
js
and
sbb
or
std
mov
or
cld
push
int3
pop
sahf
popa
sbb
xor
mov
cmpsb
insl
iret
adc
push
enter
dec
mov
pop
xchg
or
xor
cmp
adc
dec
out
mov
leave
mov
test
pop
xchg
ret
ret
outsb
icebp
fcompp
hlt
test
test
mov
cmp
adc
jl
js
or
iret
add
fiadds
push
in
repnz
adc
push
cwtl
dec
lods
xor
cmpsb
xor
into
ret
xorb
mov
push
mov
lock
scas
fcmovne
lds
cli
lahf
gs
add
xchg
jb
es
stos
sarl
cmc
mov
mov
int
lret
lock
ljmp
std
insb
push
les
fildl
gs
cli
imul
enter
push
inc
jge
dec
iret
cmp
adc
aaa
lcall
sahf
inc
and
xor
aaa
jg
data16
ret
jle
in
lret
cmp
clc
js
aas
mov
jbe
or
out
movsl
repnz
and
dec
pusha
arpl
fadds
stos
dec
les
mov
out
loopne
nop
out
push
cmpsb
xchg
sbb
pop
aam
mov
xchg
inc
xor
cmp
jge
jmp
adc
jnp
inc
mov
sti
loop
int
mov
dec
shlb
xor
out
push
mov
jne
or
test
or
ss
loopne
cmpb
in
add
in
mov
mov
cltd
sub
pop
jb
mov
mov
inc
jnp
dec
repz
movsb
das
shll
inc
cmp
sbb
jmp
addb
pushf
scas
lret
cmp
push
and
lods
not
cltd
sbb
mull
ret
cwtl
fildll
test
pop
push
mov
mov
cltd
xchg
jns
and
cmp
nop
out
mov
clc
icebp
les
pusha
cs
jno
mov
pop
push
cmp
xchg
insl
or
xchg
aad
xor
fidivl
les
in
pushf
fists
movsl
ljmp
enter
fldt
lds
outsb
imulb
bound
or
in
mov
scas
sbb
pop
scas
lret
inc
int3
aam
pop
ret
out
pop
inc
mov
jecxz
ret
or
lret
pop
outsb
movsb
rcrl
fistpll
ficoms
xorl
push
mov
arpl
push
add
rolb
lea
xor
addb
push
xor
inc
xor
xorl
pop
cmp
mov
loop
jne
lock
cmp
ljmp
test
xchg
push
pminub
out
in
xchg
loope
sahf
enter
loop
add
movsb
outsb
or
es
imul
rolb
mov
xchg
pop
in
stc
push
push
pop
adcl
xor
insl
lret
push
lods
shlb
icebp
push
cmp
and
rclb
enter
mov
push
sub
or
push
pushf
and
jb,pn
jae
or
jb
fnsave
push
loope
dec
push
mov
mov
rcl
arpl
lea
lahf
scas
mov
push
pop
jg
nop
cmp
push
or
xor
cmpl
cld
push
lods
mov
xor
jbe
lret
adc
xchg
cmp
jb
cwtl
gs
aam
cs
test
adc
mov
repz
mov
repz
rcl
test
clc
dec
cltd
inc
outsb
mov
push
je
add
lock
movsl
aam
lcall
lret
enter
shl
xchg
nop
outsl
mov
test
aad
xchg
push
lock
popl
sub
outsl
fsubrp
adc
add
lds
bound
outsb
xchg
in
sub
inc
lret
cmp
jo
fldt
int3
dec
cmp
arpl
fldcw
push
push
cmp
pop
dec
imul
mov
pop
xchg
dec
pop
cmp
int3
xor
out
daa
scas
cmp
inc
and
pushf
aaa
adc
cmp
bound
icebp
sahf
nop
lds
rorb
xlat
lods
fists
xor
lcall
mov
push
popf
jb
aad
fmuls
dec
sub
stc
in
push
jno
jae
jge
and
loop
jmp
pusha
and
pusha
mov
sub
int
cmpsb
cmpsb
mov
xchg
jle
xor
mov
fwait
push
lahf
mov
lret
stc
js
ja
sbb
mov
mov
sbb
roll
stos
inc
in
push
inc
mov
inc
in
pop
clc
xchg
outsb
test
xchg
ret
lcall
push
js
add
lods
hlt
shlb
mov
lret
xchg
inc
call
pop
sbbb
test
pop
aaa
cmpsl
mov
in
add
ds
shll
inc
pop
pop
pop
data16
push
lret
inc
cmpsb
cmp
fnstcw
gs
das
fidivrs
or
out
mov
and
in
pop
notb
and
xchg
mov
and
shrb
int
lret
push
adc
clc
ljmp
pop
imul
or
pop
mov
jle
jo
xchg
das
cmpb
dec
ja
add
lcall
test
mov
scas
call
push
xor
jl
sub
gs
sbb
dec
push
fimull
addb
in
insl
push
rcr
fistps
cld
movsl
adc
adc
addr16
xor
xchg
xchg
pushf
add
push
push
hlt
jecxz
pushf
jb
out
or
lret
int3
sub
mov
je
or
test
or
sub
roll
lret
loop
jge
out
mov
loope
pop
cmp
dec
and
out
js
das
test
mov
pop
test
dec
dec
or
xchg
dec
jecxz
stos
stc
add
lret
leave
cld
push
insb
popa
fistps
sub
xor
fcmovnb
js
hlt
cld
int
lahf
push
popa
lret
pop
enter
fwait
jne
shlb
push
pop
sar
stos
fdivl
mov
fiadds
dec
jns
shlb
insb
cmc
iret
xchg
mov
inc
push
xchg
inc
lahf
scas
dec
cmp
jecxz
into
iret
and
repnz
xchg
xchg
lret
cmpsb
sbb
sahf
push
xchg
xor
cmp
es
xchg
push
add
push
inc
ljmp
sbb
into
dec
xchg
mov
mov
dec
mov
mov
cmp
xor
imul
push
je
insb
jb
sub
pop
aas
jp
stc
sbb
sub
aaa
mov
push
xchg
orl
jne
movsl
cmp
cmc
cmp
ja
mov
xchg
push
mov
mov
sbb
xor
out
add
and
out
mov
adc
push
cmc
fmulp
and
cmp
inc
and
adc
lods
cwtl
test
cmp
push
repz
cmp
rorb
ds
fdivs
jmp
adc
mov
xor
mulb
imul
movsb
cld
or
xchg
inc
sarl
fmulp
jmp
in
push
pop
pop
pushf
arpl
imul
inc
push
stos
mov
shll
lds
cmp
dec
ljmp
sbb
mov
pslld
pushf
jg
fbstp
into
or
scas
jae
push
mov
cwtl
cmova
xor
or
iret
in
cmc
outsb
cmp
movsl
pop
xchg
inc
xor
jge
leave
inc
adc
xor
out
fnstcw
inc
popf
push
xor
xor
lcall
ret
pop
mov
pop
add
jge
push
popa
hlt
repz
mov
dec
out
iret
xchg
int3
add
xlat
jne
shl
adc
jo
xchg
repz
outsl
repz
insb
sti
mov
test
repnz
mov
mov
scas
inc
shrb
rorl
fdiv
mov
sub
lock
pop
xchg
pop
mov
pusha
insb
jns
dec
cmp
repnz
shl
jmp
pop
lahf
pop
xor
call
cld
sub
xchg
mov
sub
je
pop
add
or
or
arpl
inc
loop
andl
mov
jns
leave
inc
addr16
movsb
and
aaa
lea
and
dec
or
repz
test
lea
xchg
xor
sahf
in
dec
pop
sar
adc
pop
fdivl
or
std
nop
lods
push
lcall
inc
les
pop
sbb
stos
mov
push
pop
or
int3
aaa
jle
lea
add
lea
mov
mov
data16
inc
add
imul
or
mov
sub
ret
cli
mov
imul
mov
rorb
mov
insl
rorb
push
sub
cmp
cmppd
enter
inc
sub
lods
push
sbb
inc
popf
out
or
cmpsl
inc
mov
push
push
mov
pop
test
movsl
stos
xchg
pushf
fmull
add
rcr
cmp
and
out
fwait
pop
loop
fcmovu
es
adc
lret
and
mov
and
jne
aad
push
cmpsl
das
xor
inc
cli
mov
mov
cmp
mov
push
loope
inc
ljmp
or
fimuls
jb
adc
pop
cs
outsl
xlat
xchg
imul
inc
arpl
inc
fsubrs
cmc
stc
push
adc
les
cmp
mov
repz
je
jp
rol
hlt
cmp
fs
popa
sub
pop
pop
xor
xchg
pushf
mov
sbb
jmp
or
loop
arpl
pop
mov
lds
sbb
andb
push
jae
adc
inc
cmp
imul
mov
jecxz
fwait
xor
aad
pusha
push
fdivs
xchg
xchg
mov
jnp
sub
push
xchg
sbb
data16
mov
pop
cmp
nop
xor
xchg
js
mov
inc
dec
mov
push
inc
dec
cwtl
shlb
repz
mov
fwait
pop
rcrl
xor
push
out
cmp
clc
arpl
or
mov
out
push
cs
into
clc
mov
push
adc
pop
aad
xchg
mov
mov
jle
popf
fmul
sti
pop
lcall
sarl
test
shl
xor
outsl
imul
sub
sub
inc
mov
repz
add
cmpb
and
fisttpll
or
mov
idiv
inc
mov
mov
testl
pop
mov
mov
in
pop
gs
jge
sahf
pop
and
lods
in
into
xor
out
outsl
xchg
outsb
fstps
mov
arpl
mov
data16
mov
sbb
mov
sub
ljmp
cmpsb
push
fstps
or
mov
pop
mov
cmp
or
hlt
cli
and
sub
imul
ja
stos
test
pop
cltd
push
xor
lcall
stos
into
ret
or
mov
ds
cmp
nop
mov
in
push
or
pop
adc
das
adc
lret
lcall
dec
iret
xchg
mov
pop
stc
cwtl
mov
addr16
dec
ud1
jo
sarl
inc
xchg
shll
adc
inc
inc
mov
cmp
in
cmovge
sti
xchg
aad
lret
cmp
pop
fistpll
pusha
mov
dec
cmp
xchg
es
cmp
sub
cmp
sub
adc
loope
sub
mov
fisttpll
test
ljmp
ret
pop
mov
sbb
addr16
mov
xchg
mov
fmuls
cmp
inc
scas
movsl
xor
add
or
loop
add
rep
sbb
lsl
les
mov
sub
pop
cs
mov
or
mov
rcll
pop
mov
lea
sbb
xor
inc
jge
sbb
pop
cwtl
xor
mov
jo
push
js
andb
mov
call
arpl
sub
sti
or
cltd
stos
xor
nopl
popf
xlat
in
shll
adc
cmp
cmpsl
push
cs
popf
jle
mov
test
out
ss
bound
adc
arpl
stos
rorl
mov
jns
mov
sub
push
paddq
mov
xchg
pop
lcall
jg
sti
ss
rcrl
xor
sub
int
dec
jle
pop
add
movsb
test
stc
add
clc
lahf
mov
mov
pop
add
jo
fwait
adc
and
jmp
aas
xor
ljmp
arpl
call
and
mov
jl
pop
scas
xor
add
lea
jne
sub
stc
xchg
aad
outsb
test
clc
fsubl
mov
test
sub
push
add
and
adc
mov
shl
adc
frstor
xor
cmpsb
lods
in
rcr
cld
sbb
popf
rolb
mov
xlat
push
sub
jo
notb
add
push
mov
and
in
inc
jg
dec
ror
jl
adc
push
ret
cmpsb
subb
sub
pop
add
lret
cmp
adc
loopne
jbe
incl
sahf
push
pusha
pop
jbe
aam
mov
mov
scas
add
mov
lahf
mov
call
std
inc
in
inc
adc
into
cmp
movsl
cmpl
lret
cli
hlt
out
aam
mov
jmp
adc
aaa
repnz
lock
scas
les
mov
cwtl
clc
xor
sarl
and
push
jno
jnp
pop
xchg
out
out
sub
cli
jne
in
out
lods
hlt
mov
daa
loop
add
pop
sahf
ret
gs
out
or
adc
mov
hlt
inc
mov
pop
and
insb
sub
add
pop
fildl
cmp
mov
insl
xchg
loope
loope
aam
es
or
jp
fs
sbb
stos
xchg
iret
imul
add
shrl
xchg
or
ljmp
aam
ljmp
frndint
movsl
push
pop
push
outsl
jl
push
movsb
rcrb
clc
cmpsl
ljmp
inc
and
dec
mov
shlb
mov
push
inc
lcall
adc
inc
fwait
lret
xor
imul
ss
push
adc
sbb
xchg
mov
push
enter
call
inc
jbe
pop
mov
pop
xchg
out
and
and
lock
mov
je
sub
insl
adc
mov
pop
sbb
jnp
out
cltd
insb
stos
pop
out
outsl
xor
pop
fucomi
lret
jnp
popf
adc
add
loope
push
cmc
or
xor
sbb
movsb
out
loop
mov
cmp
jo
cwtl
mull
push
inc
lods
mov
add
cmp
dec
ficompl
out
mov
xlat
mov
sarb
add
push
pusha
loope
fnsave
out
iret
leave
push
test
sbb
mov
jbe
add
lock
and
inc
sub
dec
cwtl
cmp
sub
pop
mov
stos
dec
xchg
push
fdivrs
stos
cli
sub
pop
ret
adc
xchg
adc
sub
ret
stos
lea
pushf
xchg
xchg
fiaddl
mov
enter
jno
shrb
sbb
sub
push
xchg
inc
aam
fsubs
push
cmc
xchg
add
in
inc
pusha
sbb
lds
je
mov
fmuls
out
jecxz
shrl
mov
stos
mov
jae
mov
mov
outsb
cwtl
mov
mov
or
inc
or
add
push
mov
mov
mulb
mov
adc
out
pop
scas
jnp
popf
iret
xchg
inc
inc
mov
push
add
mov
lret
pop
shrl
sub
mov
sub
and
cmp
rorl
adc
outsl
fwait
add
out
lods
add
push
loopne
jnp
push
pop
mov
dec
shlb
jns
push
das
cmp
iret
and
lock
add
int
ljmp
and
cltd
xor
ljmp
or
pop
fsubrs
adc
xlat
das
xchg
inc
call
adc
push
xchg
push
loop
xchg
add
xchg
adc
lods
push
pop
mov
aas
in
add
mov
jb
in
or
mov
je
fs
mulb
push
jnp
and
adc
xchg
in
sbb
into
hlt
or
fidivrl
xor
jmp
lods
adc
enter
out
add
sbb
iret
mov
jo
cmp
cmpsb
inc
aas
add
xchg
sahf
shrb
mov
sbb
stc
fldenv
clc
out
sbb
nop
les
insl
ficoms
test
popl
adc
rcll
xchg
xchg
dec
mov
fwait
stos
out
and
mov
inc
cmc
stos
icebp
aad
mov
pushl
mov
mov
ja
pop
outsb
and
call
rcrl
ss
mov
icebp
add
inc
pop
mov
enter
xchg
pop
loopne
insb
divl
repz
jg
add
sbb
mov
ja
leave
fistpl
mov
scas
mov
pop
push
mov
jp
test
cmp
imul
clc
or
icebp
movsl
push
ret
xor
jmp
cmp
nop
rclb
lcall
xor
xchg
daa
ljmp
ret
mov
dec
or
and
lret
push
jbe
mov
dec
sub
fwait
add
jp
icebp
jmp
add
test
mov
fstpl
mov
lea
inc
cmpsl
cli
lock
cmp
rclb
add
mov
ljmp
mov
dec
mov
sub
pushf
push
ljmp
daa
push
popf
shl
sub
hlt
sbb
push
xchg
sbb
subb
sbb
cmp
xchg
cmp
mov
add
lea
imul
insl
inc
fisubrs
inc
adc
inc
movsb
ror
stos
les
dec
sbb
int3
mov
and
and
fidivs
cmp
mov
fstpt
out
aam
decl
dec
sbb
in
jge
das
scas
loopne
enter
xchg
pop
add
ficoml
stc
sbb
fbstp
hlt
and
repnz
pop
outsl
add
mov
jo
hlt
cltd
sbb
test
pop
mov
das
test
push
sub
jno,pt
xorb
xchg
xchg
push
aaa
test
adcl
shrl
sahf
loope
inc
in
jne
xchg
mov
jo
insb
and
int
sbb
loopne
insl
loopne
or
std
or
cli
stc
pop
subl
push
inc
xchg
mov
adc
xor
xchg
jb
out
mov
fwait
push
xor
sti
cmp
jmp
sub
popf
mov
repz
jnp
mov
lock
push
adc
aaa
jbe
ret
daa
xchg
xchg
lods
xchg
ljmp
arpl
neg
shll
mov
push
aam
shr
cli
insl
jne
mov
loope
mov
mov
sbb
dec
loop
and
mov
jl
scas
mov
adc
xor
sbb
and
and
outsl
xchg
mov
adc
sbbl
mov
and
out
cmp
cmp
into
and
sbb
out
mov
test
xor
cli
add
roll
jo
xchg
loope
mov
sbb
mov
cmc
subb
popa
jb
repz
push
mov
loope
dec
fwait
ja
or
cmp
shlb
inc
imulb
mov
jp
pop
add
fdivr
sub
sbb
jne
push
push
and
sub
mov
sar
mov
xchg
daa
pushf
js
adc
cli
sbb
jne
fmuls
pop
pop
js
add
mov
repnz
adc
jb
adc
inc
fcoml
scas
push
and
xor
rol
jbe
stos
jns
sbb
outsb
xchg
xor
fldcw
fiadds
aaa
dec
dec
popf
mov
inc
fadds
jp
bound
jae
clc
movsl
movsb
dec
and
xor
mov
shrb
pop
addr16
mov
push
loop
jl
or
push
test
xchg
mov
outsb
insb
pusha
hlt
xchg
xchg
daa
mov
leave
mov
out
fcmovne
inc
mov
adc
repz
loop
push
xor
sub
ret
imul
xor
imul
rcr
jnp
in
dec
mov
pop
jecxz
gs
push
cmp
dec
out
ljmp
or
mov
inc
in
lret
adc
lock
xchg
xor
cmp
dec
stc
outsb
dec
insl
or
xchg
adc
pop
and
enter
cltd
and
jmp
rcrl
adc
xchg
and
std
cmpsl
mov
mov
mov
loopne
jne
and
jp
jnp
mov
push
mov
adc
je
jle
lds
inc
cmc
add
imul
das
int
out
dec
sub
clc
dec
sub
rolb
jmp
push
aaa
out
push
push
add
pop
and
addr16
rol
and
jo
imul
fmull
sbb
pushf
mov
lock
mov
enter
aad
xchg
sub
js
rorl
test
filds
inc
popa
xchg
mov
xor
test
xchg
cmpsl
arpl
xlat
push
sbb
xor
dec
jecxz
and
jae
pop
xchg
arpl
xorb
ljmp
icebp
and
jl
aad
sarb
out
xor
scas
xor
outsb
jmp
mov
mov
shlb
lret
in
ds
cmpl
sub
xor
cmc
insb
cmp
sarl
jecxz
xchg
repnz
ljmp
imul
repnz
lea
rcr
xchg
fsubrl
cli
popf
hlt
mov
jl
jg
outsb
insl
inc
xchg
mov
mov
pop
int3
ja
mov
lods
mov
les
mov
insl
lret
cmpsb
and
orl
shrb
scas
lods
push
incl
cmpsb
ficoml
pop
fiaddl
jne
jecxz
sbb
push
psrad
and
push
mov
sbb
sub
mov
aad
mov
sbb
and
jns
les
gs
xchg
cmp
and
cmp
jmp
or
or
ret
push
pop
cmp
icebp
std
or
subl
add
jbe
jnp
xor
fsubs
popa
cld
and
or
leave
jl
xor
mov
sbb
or
sbb
cltd
xor
fcmove
sub
and
insb
lds
and
pop
fs
inc
jp
push
mov
cld
push
mov
icebp
dec
and
pop
push
pop
add
aam
pop
xchg
sbb
cli
jp
iret
test
sbb
mov
gs
push
mov
fimull
mov
in
lods
outsb
dec
lods
xor
cltd
and
inc
jge
dec
bts
inc
push
jle
push
div
pop
out
fldenv
clc
pop
out
mov
ljmp
cmp
sbb
sbb
sbbb
add
insl
loope
into
xchg
xor
cs
imul
adc
daa
pop
inc
mov
popf
out
pop
push
push
loop
jnp
mov
insb
jle
xchg
repz
mov
in
fs
adcb
rol
cmp
pop
sub
cld
mov
lcall
add
mov
xor
lods
jo
mov
fldt
jbe
xchg
int
leave
andl
adc
push
filds
loop
push
xorl
mov
mov
inc
fs
xchg
mov
jo
icebp
andl
ret
cmp
stos
adc
cmpl
inc
jae
push
cmp
aad
out
push
pushf
cltd
clc
sti
mov
mov
in
sbb
scas
push
pop
xchg
xor
xchg
jp
sub
enter
out
inc
mov
mov
cmpsl
lret
out
jmp
repz
add
outsb
lcall
rclb
xchg
sub
addb
jmp
mov
fsub
push
sub
dec
xor
jnp
sub
pop
xor
adc
pop
scas
pop
mov
cmpl
fidivs
and
push
pusha
sar
mov
lahf
out
jno
call
or
sbb
sub
sub
pop
inc
pop
mov
dec
sti
in
jae
loope
sti
aad
pop
xchg
mov
and
xor
das
jp
fs
aas
xchg
cs
xor
jno
xor
ret
inc
dec
mov
sub
xlat
inc
pusha
sub
inc
jle
imul
mov
sar
out
jae
dec
cmp
fisttps
mov
cmpsl
mov
mov
icebp
cmp
sahf
movsl
inc
cs
push
xor
jno
pop
shll
dec
cmp
mov
sub
loopne
cmc
jl
rcrb
or
mov
fdiv
pusha
inc
or
cmp
push
push
cs
xchg
ret
sub
mov
in
push
stos
pusha
jno
fisttpl
inc
in
repnz
out
popa
xor
data16
mov
and
mov
cmp
pop
jnp
pop
icebp
add
or
ja
sub
push
out
loopne
frstor
push
or
sbb
clc
jne
ret
cmc
jmp
test
inc
div
int
cmp
test
lock
pop
hlt
addr16
hlt
sahf
inc
mov
nop
jmp
test
push
pusha
sahf
mov
push
loopne,pn
imull
push
icebp
add
mov
ljmp
dec
mov
fsubrl
insl
mov
rcrl
mov
enter
in
jle
imulb
cmc
inc
sbb
leave
inc
push
test
xor
lret
fmull
pop
frstor
sbb
mov
out
push
and
jbe
push
cmp
in
or
jle
pop
stc
ret
call
cmp
jbe
js
jle
pop
jge
lods
test
pushf
mov
xor
out
ret
and
in
cli
fs
test
addr16
pop
popf
outsl
sbb
enter
add
in
mov
repnz
xchg
and
sbb
sahf
scas
jle
jecxz
ljmp
xor
xor
ja
mov
lods
loopne
and
sbbb
popa
xor
mov
pop
jge
bnd
dec
movsl
das
insb
push
scas
push
scas
adc
shl
mov
push
xchg
sub
inc
or
ljmp
xor
jmp
outsb
inc
mov
sarl
xlat
ret
dec
jnp
pop
mov
rolb
xor
fiaddl
and
stc
ret
pop
add
mov
repnz
inc
sub
andl
xor
push
pop
mov
pop
call
sbb
out
pop
sti
sbb
out
pop
sub
imul
loop
and
push
and
movsb
mov
mov
push
fdivrl
sbb
mov
lret
loop
notl
imul
add
cli
jo
in
xchg
pop
stos
fs
arpl
fsubr
xchg
test
mov
lcall
loope
enter
cmp
sub
icebp
cmp
cmpsl
lea
popa
sub
call
sub
scas
loop
aad
add
adc
pop
stos
sbb
pop
sub
fidivrs
test
xrelease
arpl
pop
xor
jmp
mov
dec
ret
mov
cltd
gs
inc
mov
xchg
in
sti
repnz
adc
mov
loopne
jno
or
xchg
cmpl
push
negb
enter
and
inc
leave
sti
xor
sbb
mov
std
mov
clc
mov
xchg
inc
fisubs
cli
mov
xor
hlt
cmc
int3
mov
nop
test
inc
cmp
mov
sub
push
js
adc
mov
mov
sub
and
dec
sbb
test
addr16
xchg
movsl
roll
mov
fstpt
fcomi
mov
and
cmp
jmp
push
pop
clc
inc
push
dec
in
and
dec
imul
pop
cmpsb
lret
inc
push
gs
mov
call
sbb
dec
jmp
and
scas
fs
push
sub
rol
mov
or
jp
mov
sbb
inc
xor
fistpll
sub
cs
pop
sub
loop
test
adc
xchg
dec
dec
mov
pop
pop
mov
or
pop
sub
lahf
xlat
into
cmc
das
and
scas
mov
in
cmp
cltd
cmp
push
fsubrs
adc
adc
xchg
cmp
ss
push
out
xorb
test
pushf
or
mov
fwait
nop
in
mov
xor
idivl
test
cmp
pop
les
jmp
push
xchg
outsb
popf
xlat
int3
fsubs
adc
push
aad
xchg
mov
sub
pop
andb
hlt
jle
mov
dec
nop
sti
pop
and
or
jmp
jmp
ja
aaa
xchg
adc
insb
adc
adc
xor
loope
mov
push
and
push
daa
aad
cwtl
mov
cmpsl
adc
adc
lret
fimuls
or
pop
rcrl
sub
js
stc
dec
push
adc
inc
popa
cli
nop
and
sbb
jnp
test
push
and
inc
xor
sbb
inc
shlb
xchg
add
je
or
dec
add
addr16
mov
popa
pop
daa
sbb
addb
dec
push
sbb
ret
jne
cmp
push
mov
and
loope
lret
push
fidivl
cld
imul
ljmp
outsb
push
je
aam
inc
xorl
push
shlb
jmp
adc
pop
xor
in
jp
inc
mov
adc
les
pop
pop
push
pop
mov
jbe
and
cmpsb
insl
cmpsb
jg
movl
sub
gs
adc
scas
push
inc
mov
push
dec
mov
sbb
cmp
cmp
mov
adc
cli
sub
int3
outsl
loop
pop
loop
push
adc
xchg
out
sub
jae
cmp
adc
mov
xchg
lock
in
loope
sub
arpl
mov
adc
xchg
inc
in
pop
fdivrl
daa
movsb
jnp
and
sbb
popa
js
insl
mov
fsubrl
mov
mov
outsb
xor
inc
jge
ja
inc
adc
xchg
in
aaa
and
f2xm1
or
ret
mov
icebp
push
mov
js
leave
cmp
mov
cld
xchg
lret
or
mov
lret
xor
push
xchg
andl
push
jge
xor
stos
cltd
or
cld
add
push
int3
jae
xchg
mov
sahf
insl
or
aad
loopne
inc
mov
gs
dec
and
xlat
dec
mov
gs
outsl
lds
mov
das
imul
loope
in
sbb
mov
repnz
adc
pop
cmp
add
pop
movsl
out
push
dec
push
es
mov
lcall
inc
shlb
or
aad
rolb
or
rorb
xchg
aaa
je
int3
in
and
mov
movsb
aam
jmp
lret
cmpsl
cltd
fimuls
lods
add
repnz
pop
push
std
lods
mov
addl
sbb
xchg
pusha
hlt
jle
icebp
xor
nop
add
ror
repz
test
or
dec
scas
stos
arpl
jb
out
lahf
cmc
daa
aaa
jecxz
jbe
add
cld
adc
in
sti
fstps
add
das
fstl
jno
jmp
sub
jle
add
sbb
daa
add
jge
hlt
repz
stos
je
call
dec
cli
jne
nop
and
faddp
mov
cmp
movsl
cmpsb
rorl
movsb
stos
mov
test
bound
inc
cmp
sub
inc
mov
inc
push
mov
adc
lret
add
cmc
cmp
adc
or
bound
out
imul
pop
push
push
scas
mov
mov
xor
repnz
loop
inc
inc
fwait
call
scas
out
xor
cltd
xor
lea
adc
dec
call
cmpsl
lahf
imul
cmp
push
ds
xor
lcall
out
jge
addb
inc
push
ds
push
add
pop
jl
out
int
mull
outsb
frstor
dec
mov
push
dec
sarl
inc
shrl
xchg
ss
add
cltd
cmp
adcl
jo
push
sbb
push
or
sbb
dec
icebp
xor
fdiv
pop
push
mov
stc
fistl
xchg
dec
insl
cmpsb
cmp
dec
popa
addr16
mov
or
popf
sub
lret
pop
pop
xor
cmp
rorb
scas
push
pop
inc
lds
dec
lea
adc
dec
movsl
inc
and
iret
or
xor
in
xor
int3
sbbl
mov
stc
fnstenv
lock
daa
jl
xchg
dec
roll
scas
daa
add
in
ret
push
mov
jns
lret
mov
dec
and
xchg
fcoml
jl
das
rcll
insb
pop
dec
mov
add
add
pushf
lahf
xchg
mov
movsb
outsb
cmpsb
hlt
es
lcall
in
jo
loopne
test
push
push
jns
mov
in
or
test
jp
dec
push
add
push
pop
test
ret
add
repz
andl
inc
es
cld
sbb
loope
or
addr16
adc
int3
and
cmpsb
movsl
jl
xchg
lcall
data16
xor
adcl
jb
xor
ljmp
and
es
rcr
or
mov
add
inc
aad
mov
scas
xchg
and
mov
inc
loope
mov
xor
adc
std
sarb
mov
inc
adc
xchg
in
sub
xchg
xorb
lds
outsb
sbb
push
rorb
and
add
inc
pushf
inc
jbe
jmp
dec
mov
cmp
pop
mov
push
lock
pop
push
test
enter
push
mov
sub
jl
push
jge
pop
fimuls
mov
adc
fisubs
jmp
dec
sbb
sti
sahf
roll
insb
add
or
hlt
pop
pop
scas
xadd
lods
push
fwait
dec
mov
xchg
ret
mov
rorb
jmp
mov
cmpsl
xchg
les
je
pusha
js
jno
inc
cmp
xchg
in
ljmp
sub
outsw
or
xchg
clc
adc
shrb
mov
adc
sub
cwtl
out
mov
xlat
pop
shll
fcoml
loope
push
add
mov
sub
notl
out
jge
outsl
mov
mov
and
push
mov
jl
dec
cmc
scas
les
dec
je
jp
lods
call
dec
scas
fcompl
pop
sub
loop
cmpsl
jmp
inc
and
dec
sahf
ss
push
icebp
ret
repz
pop
pop
xor
ficoml
shll
arpl
stc
or
mov
dec
dec
or
and
inc
imul
or
in
lret
ret
nop
test
adc
and
shr
nop
pop
sbbb
mov
push
push
cld
rorl
ret
insb
or
mov
lds
dec
mov
mov
aad
clc
faddp
push
jp
je
popa
or
cmp
push
repnz
dec
push
addr16
jl
clc
es
stos
mov
mov
sub
leave
mov
scas
mov
xor
in
repnz
dec
xor
cmpb
cmp
daa
outsb
test
fmulp
ds
jg
pop
out
push
cs
sahf
imul
stc
mov
jo
xor
loop
mov
fstl
in
dec
mov
pusha
outsl
ss
jge
sub
clc
cs
fldcw
mov
movsl
jne
adc
jne
fwait
js
orb
scas
imul
cmp
sub
inc
sahf
out
dec
add
daa
mov
jle
lahf
add
sbb
inc
sbb
data16
or
leave
pop
rcll
mov
adc
add
xchg
shll
and
rcr
dec
pop
rol
xor
andb
inc
add
ljmp
movsb
inc
in
sub
xor
sbb
icebp
sbb
push
stc
mov
mov
pop
dec
sub
inc
xor
sarl
dec
lods
cs
loope
test
lahf
dec
and
push
xorl
pop
mov
std
push
insb
nop
mov
add
push
add
pop
pop
sbb
pop
or
xchg
cmc
adc
xchg
sub
insb
dec
push
sahf
push
stc
ss
fisttps
repnz
jp
and
cmp
and
stos
jle
pop
mov
sar
and
pop
mov
dec
inc
fxch
insb
lods
mov
push
mov
rorb
bound
xchg
cld
or
mov
pop
inc
add
jle
jge
inc
add
mov
sahf
cld
xor
cwtl
jo
sbb
xor
adc
rcll
adc
inc
aaa
andb
insb
aam
add
movsb
add
inc
sbb
lahf
adc
nop
xchg
mov
mov
push
pop
out
dec
pop
and
movsl
push
lods
sbb
mov
sbb
inc
fimull
aam
aas
call
imul
inc
push
xchg
daa
push
divl
pop
scas
mov
cmpsb
mov
mov
filds
test
or
out
in
xchg
cmp
cmp
lods
rcl
push
push
pop
cmp
adc
inc
jo
lea
lds
push
fs
cmp
inc
inc
js
je
jg
pop
iretw
jge
mov
imul
mov
and
stos
lea
icebp
scas
fwait
cli
testb
sarb
loopne
push
inc
xchg
cmpsl
es
les
das
cli
adc
jne
mov
xchg
xchg
adc
ret
mov
outsl
xor
loope
add
aaa
fidivrl
in
mov
outsb
out
sub
pop
jge
mov
mov
mov
sub
bnd
sbb
cmp
jbe
popf
jecxz
xchg
dec
movsb
movsb
cmc
sub
inc
out
leave
out
or
pop
adc
jb
rolb
sub
jno
andb
pusha
pop
jbe
and
fsubs
sbb
push
mov
pop
jno
jno
xor
or
mov
cmc
mov
pop
fmuls
pushf
popa
ss
mov
or
mov
das
mov
xchg
data16
leave
sbb
pop
sti
push
cmpsb
movsl
rorb
mov
mov
nop
inc
sub
sbb
data16
bound
xchg
sti
cmpsl
jecxz
movsb
sti
push
cmp
in
out
lock
inc
sbb
pop
jmp
mov
mov
mov
arpl
jecxz
xchg
sti
sbb
dec
in
insb
inc
cmp
jb
push
mov
into
sub
dec
jne
cli
int3
or
xchg
mov
sub
flds
int
xor
imul
ss
pop
paddd
push
push
sub
rcl
popa
fnstsw
fisttpll
mov
shll
ja
je
sbb
std
xchg
mov
sbb
idiv
je
xlat
mov
pop
jg
pop
mov
xchg
les
idivb
mov
popa
jns
mov
pop
xlat
push
mov
cmp
popa
cmc
add
fwait
mull
sub
or
and
sbbl
pop
out
xchg
ret
aam
nop
ret
into
or
mov
xchg
xor
cltd
cld
cmpsb
iret
testl
outsb
inc
xlat
stos
pop
int3
incb
and
outsb
jnp
lret
xor
movsb
push
ffreep
cld
sub
mov
outsl
pop
add
call
aam
inc
ss
int3
divl
jb
xchg
jmp
cltd
push
push
pusha
out
test
xor
push
test
sub
inc
in
jmp
or
pop
notb
push
out
cmpsl
stos
shl
enter
mov
inc
mov
ss
call
aas
stos
decl
mov
dec
adc
dec
cmpsb
les
cmpl
test
jne
sbb
int3
and
mov
ret
clc
int
push
push
dec
push
xchg
mov
jmp
sbb
sbb
cmp
xor
mull
xchg
xor
inc
sub
inc
adc
or
xchg
sub
push
mov
xor
push
mov
fistps
xchg
adc
inc
gs
xor
pop
push
dec
imul
and
cli
inc
repnz
leave
aas
xchg
sub
xor
mov
push
les
decl
xchg
push
cmp
je
pop
pop
ja
rolb
inc
adc
stos
jnp
jo
push
mov
or
addr16
lds
movsl
cmp
push
mov
lcall
xor
in
pusha
shrb
mov
dec
fs
fsts
mov
mov
scas
scas
rorl
fnstcw
iret
or
pop
movsl
jae
cmp
cli
out
and
rcr
das
lahf
in
sbb
pop
lods
scas
test
mov
add
aaa
out
ds
sub
outsb
mov
or
push
and
out
push
sub
cmc
test
mov
lock
pop
daa
lods
imul
or
pop
dec
pmaxsw
mov
pop
mov
or
sbb
repnz
push
rolb
lahf
sbb
inc
aam
push
test
cmp
jg
mov
push
orl
in
and
jns
cmp
fst
xor
sbb
add
xor
sub
mov
hlt
adc
addb
imul
adc
pusha
loope
shll
jl
popa
lret
jbe
loope
jae
stc
pop
xchg
imul
cmp
pusha
sbb
dec
xor
imul
jo
cmp
jge
dec
fdivs
ficoml
adc
fcoms
lcall
mov
popa
es
jo
pop
insl
loope
dec
int
outsb
addr16
aam
push
xchg
es
std
push
into
dec
fwait
jge
jnp
test
add
jne
adc
or
and
cltd
or
xor
or
lock
stc
stc
fwait
imul
mov
test
es
adc
mov
ds
jmp
cs
mov
leave
fcoml
mov
insb
push
mov
pop
iret
xchg
scas
jae
daa
aas
cmc
mov
push
pusha
sub
mov
mov
pushf
je
jg
ja
mov
enter
lcall
add
xchg
shll
xorl
test
fwait
add
lret
dec
mov
sahf
cmp
and
xchg
or
jne
insb
cmpsl
add
mov
mov
jle
jge
xchg
mov
lret
into
mov
dec
add
ljmp
mov
je
rcrl
inc
insl
and
mov
les
scas
stc
mov
gs
sarl
pop
xor
add
pop
or
das
pop
ljmp
out
jecxz
les
fnstcw
repz
dec
adc
rolb
mov
mov
inc
add
out
movsb
out
inc
cwtl
push
jb
jle
mov
mov
pop
ds
adc
fstpl
sbb
pop
or
out
movsl
rol
sub
sbb
fisubs
adc
push
mov
xchg
into
xchg
cmp
je
push
push
fsubr
js
scas
test
movsb
int
test
jb
ja
rcl
nop
es
jno
add
std
cmp
mov
cmp
dec
xchg
popa
incb
sub
xlat
xor
in
test
sub
out
pop
adc
das
and
mov
imull
mov
std
mov
push
shlb
aas
jge
mov
inc
outsb
pop
rcr
dec
in
jns
and
lret
xchg
gs
pop
dec
xchg
jb
call
cmp
jae
push
lods
sbb
int
dec
imul
and
cmp
mov
out
lahf
pop
xchg
mov
jmp
push
or
jp
cmovs
data16
adc
mov
inc
xchg
push
imul
add
fwait
sub
test
arpl
jp
fisttps
pop
test
xor
es
das
fists
shrb
mov
arpl
add
jmp
cs
mov
jno
pop
loop
std
cmc
je
xor
cmpsl
xchg
stos
mov
and
rcll
jecxz
pop
and
in
fwait
xor
mov
pop
xor
loopne
jbe
mov
out
pop
out
cmp
in
call
jp
test
lds
popa
mov
xchg
loop
mov
pop
mov
and
dec
fldl2e
dec
push
fimuls
push
je
cmpsb
sub
pop
lods
pushf
push
loopne
imul
adc
aas
and
shrl
dec
pop
and
insl
push
add
jmp
pop
cmp
int
pop
cmpsl
data16
testb
mov
mov
mov
xchg
es
dec
and
sti
inc
es
repnz
dec
add
ficomps
pop
mov
jns
pop
insb
pop
adc
inc
adc
clc
mov
sub
lcall
and
add
ds
dec
dec
mov
aas
scas
aad
sbb
test
out
sti
mov
mov
daa
xor
and
sbb
pop
and
or
ret
cld
inc
lea
mov
and
lock
in
mov
mov
lret
mov
sub
mov
mov
stos
lock
or
in
loop
ret
int3
push
or
xor
add
pop
sub
cmp
xchg
mov
mov
mov
dec
fstps
shlb
aad
pushf
or
pop
xchg
in
mov
push
iret
lods
mov
xlat
sbb
xor
test
add
dec
xchg
sbb
lret
sbb
push
jb
outsb
xchg
jns
in
das
sub
in
adc
rcll
adc
rclb
xor
iret
mov
das
pop
jg
jge
loope
mov
arpl
pushf
in
jnp
lcall
lock
aad
cmp
cli
dec
dec
rorl
and
inc
dec
mov
mov
mov
loope
or
ja
cmp
push
clc
cmpl
or
loopne
dec
cmp
rorb
jnp,pt
sub
in
dec
daa
leave
pop
jbe
imul
stos
xor
jbe
fdivl
xor
cmp
and
xlat
fcompp
loope
subl
and
addl
in
jg
and
mov
icebp
push
sub
orl
mov
loope
jb
mov
movsl
movsb
notl
cmc
je
push
or
push
adc
fnstcw
and
outsl
sarl
shrl
stc
adc
adc
dec
mov
out
xor
jg
scas
push
bound
std
cmp
xlat
fstps
fmull
pop
sbb
cs
sub
negl
iret
nop
push
push
push
dec
lret
lret
adcl
push
cs
jp
aaa
adc
testb
sbb
into
mov
jge
js
and
aam
cmp
jecxz
pop
mov
adc
sbb
cmp
std
add
push
mov
test
daa
ljmp
sbbb
adc
mov
lcall
mov
sub
jl
or
shrb
call
loope
push
sarl
js
loop
ud2
lcall
inc
mov
push
xchg
xor
adc
xlat
std
addr16
repnz
mov
xchg
sbb
cwtl
xchg
fistpll
les
mov
xchg
and
jne
int
cmpsb
movsb
les
lea
fidivl
sbb
mov
ljmp
sub
adc
adc
xor
or
xor
or
addr16
mov
cltd
pushf
pop
jp
mov
dec
dec
lea
inc
imul
das
ss
cmp
dec
cli
arpl
adc
outsl
jno
sarl
push
mov
cltd
push
repnz
popf
adc
stos
sbb
sbb
mov
inc
icebp
fwait
lea
enter
jnp
rorb
xchg
sbb
and
cmpb
rcl
loopne
xlat
leave
mov
shl
jle
fdivrl
add
push
mov
scas
lret
pop
clc
sub
cmp
pop
imul
dec
data16
mov
ret
pop
adc
insl
imul
mov
movsl
jmp
into
repnz
xor
mov
and
sbb
xchg
xor
aaa
dec
cmpsl
add
out
adc
dec
lds
mov
icebp
adc
stos
xor
mov
xchg
lods
cmp
int
push
sub
inc
call
sub
jecxz
and
subl
nop
xor
call
aad
and
aaa
ja
or
jnp
in
into
scas
xor
fwait
jae
xchg
cli
cmpsl
cwtl
mull
stos
fwait
nop
daa
pop
xor
mov
push
mov
mov
pop
sbb
cmp
out
testl
adc
inc
daa
rcll
pop
cwtl
fs
jbe
and
mov
adcl
jnp
sar
jmp
loope
mov
pop
ret
repz
mov
inc
sub
jl
sbb
pop
andl
xchg
xchg
out
arpl
aam
movsb
in
mov
js
mov
xchg
add
sbb
mov
inc
cmp
mov
popa
mov
cmp
jmp
stc
sub
imul
outsl
pop
mov
data16
sub
sahf
mul
cmp
in
into
in
adc
out
mov
jne
js
imul
mov
hlt
inc
inc
mov
cld
mov
hlt
arpl
sbb
sbb
ret
mov
cmp
inc
insl
repz
xor
jbe
ficompl
xlat
cmpsb
or
faddl
pushf
fmulp
mov
lods
cli
mov
dec
test
divb
add
ljmp
xlat
mov
into
sub
pop
sub
push
jp
adc
jne
jns
cmpsb
std
mov
sbb
in
cmp
inc
mov
repz
pop
ds
ret
pushf
cmpb
adc
inc
mov
outsb
test
mov
and
xchg
xor
lea
adc
cltd
stos
add
sub
ds
imul
fs
lahf
push
in
loopne
iret
movsb
mov
jo
mov
out
mov
and
jp
ret
pop
mul
mov
sbb
jbe
movl
cli
jle
sbb
mov
mov
sbb
popf
adc
lret
xor
fwait
jg
fmull
pop
into
and
popf
jmp
sbb
in
or
fs
dec
test
shrl
pop
dec
xchg
add
das
gs
or
adc
push
pop
jns
das
addr16
adcl
cld
sbb
mov
addr16
mov
subb
aaa
ljmp
and
mov
jbe
mov
fcompl
mov
or
das
enter
inc
pop
xlat
jns
std
out
imul
and
add
cmpsb
fwait
mov
lahf
push
roll
and
faddl
push
mov
out
add
or
xchg
icebp
lahf
in
cmp
shlb
pop
or
or
dec
mov
or
rolb
sub
sbb
dec
ss
inc
push
dec
add
sub
cmp
hlt
inc
in
xchg
test
mov
stc
adc
dec
lret
pop
das
xor
scas
push
in
es
test
mov
nop
movsb
jl
fisubl
pusha
push
cs
cmpb
shl
insb
insb
sbb
mov
js
rcrb
lret
sub
loope
lret
push
cmpsb
cmpsb
imul
fwait
mov
test
xor
sbb
adc
cltd
insb
cld
jno
imul
fdivrs
xchg
sub
scas
xchg
popa
xor
lock
xchg
lock
popa
jns
cmpsl
data16
clc
pop
sub
and
lock
jne
mov
aaa
push
pusha
decl
rolb
or
jo
xchg
das
andl
aad
pop
xchg
fmull
cmpb
sbb
inc
pop
hlt
rcll
adc
aaa
add
jmp
enter
shll
xor
adc
add
movsl
dec
cli
test
mov
push
call
popa
gs
pop
lods
std
cmpl
push
sub
aaa
jl
inc
jbe
dec
outsl
or
inc
ljmp
and
add
loope
push
add
or
and
jg
adc
dec
inc
pop
pop
push
add
mov
add
rol
cmp
aad
sub
pusha
pop
movsl
test
in
sti
fwait
mov
fsubrs
or
movsl
xor
pusha
sbb
in
in
jb
in
jle
pusha
jmp
jno
adc
cmpsl
fdivl
repnz
sbb
test
add
dec
add
jmp
mov
mov
jg
pop
or
cmp
hlt
mov
xchg
sti
mov
and
rcrb
fistpl
imul
xchg
roll
cli
rcrb
fisubl
loop
mov
outsl
mov
in
sbb
jns
outsl
imul
push
sub
mov
idivb
std
sub
push
jne
sub
pushf
sbb
aaa
push
stos
jns
rcl
lahf
sub
jmp
push
sarl
push
outsb
mov
cmp
cs
sub
loope
cmp
jns
mov
nop
fsubrs
imul
lods
pmulhuw
arpl
xor
dec
adc
insl
int
mov
cmp
test
fmuls
scas
push
xor
push
lret
fiadds
inc
lret
xchg
outsl
xor
out
adc
mov
test
aas
stos
cmp
sub
inc
pop
mov
cmp
xlat
clc
adc
arpl
cli
cmc
xor
xor
mov
in
adc
pop
loopne
sub
push
pop
bound
rcr
leave
leave
movsl
daa
adc
mov
dec
xor
jae
test
mov
xor
lret
sub
stos
mov
aas
lret
out
lds
movsl
gs
cmc
pop
xchg
test
mov
rcrl
jecxz
pop
testl
mov
cmp
push
leave
lods
jae
push
popl
jns
cmp
jp
movsl
addr16
mov
and
adcb
lock
inc
push
jne
sbb
shr
and
mov
int
or
test
xor
jg
mov
fisubrl
mov
loop
mov
loopne
movsl
jo
mov
pop
sbb
sub
out
xorps
iret
sub
inc
incb
stos
movsb
dec
inc
push
mov
fimull
jle
push
xchg
cmp
cmp
mov
or
sarl
jnp
adc
adc
mov
dec
xchg
mov
sub
jns
clc
loopne
cmp
fnstenv
push
push
cmp
mov
andl
add
xchg
lcall
cltd
xchg
nopl
fsub
pop
stos
add
mov
out
in
xchg
xchg
jae
sarl
nop
pop
sub
push
lea
outsl
jb
push
and
pushf
les
lret
fildl
sbb
jmp
and
mov
mov
xchg
cli
cmpsb
dec
xchg
adc
aam
or
rorb
mov
add
pop
or
xchg
mov
test
xor
xor
filds
xorl
movsl
add
cwtl
jo
dec
mov
shrb
stos
mov
mov
dec
add
sub
gs
jecxz
push
std
js
outsb
rcrl
lret
nop
iret
add
pop
add
cmp
jge
mov
adc
push
xlat
jp
and
fwait
mov
mov
sub
jecxz
xor
pop
std
adc
imul
test
call
jns
jo
daa
outsl
jecxz
int
cltd
nop
aaa
and
scas
mov
out
dec
sub
inc
mov
xor
adc
aam
jo
out
aad
ds
adcl
add
and
sbb
xor
lods
mov
or
test
mulb
mov
shl
sub
aaa
adc
imul
bound
or
repnz
lcall
add
js
xchg
jae
out
scas
xchg
mov
in
test
movsb
dec
js
movsl
dec
stc
popa
sbb
jns
insl
dec
mov
inc
lret
xor
mov
or
mov
sbb
push
dec
adc
dec
fldenv
gs
sbb
imul
lret
gs
cmp
rcrl
sbb
gs
ret
pusha
cmc
dec
sbb
add
loope
ror
sub
pop
mov
add
loopne,pn
sbb
xchg
loope
push
pop
rcrb
pop
out
jo
sarb
hlt
in
fcoml
xchg
insb
ja
or
push
adc
inc
adc
push
jno
popf
inc
xor
das
xchg
mov
jle
out
pop
inc
sbb
push
movsb
pop
inc
xchg
pop
sbb
divb
movsb
ja
fcom
fnstsw
in
adc
loopne
jns
sbb
xor
and
loopne
inc
lret
into
mov
test
mov
shll
shl
aam
popa
mov
or
lock
mov
and
mov
xor
das
loop
xchg
addb
inc
cmp
sub
lock
push
mov
add
sbb
stos
xchg
jg
enter
xchg
pushf
pop
xchg
ficoml
movsb
mov
push
shrl
add
add
sbbl
std
shll
insl
push
sub
scas
pop
mov
in
lods
cmpl
jns
filds
add
inc
xchg
or
cmp
sbb
jle
stc
lahf
clc
lcall
rcll
aam
adc
into
fdivrl
das
outsb
repz
xchg
pop
jle
mov
movsb
push
push
aam
imul
sub
dec
mov
xor
push
inc
jge
xor
mov
call
lods
fsts
lcall
lahf
jns
or
sbb
popf
or
xchg
and
sbb
adcb
adc
shr
pop
adcl
ja
mov
xor
pop
or
dec
push
mov
stc
and
data16
fdivrs
into
mov
cli
pop
mov
push
shll
stc
pop
and
mov
out
les
test
mov
xchg
inc
daa
mov
es
fistpl
xchg
and
cld
dec
adcb
loop
inc
fistps
loop
or
fwait
sbb
add
mov
test
dec
in
inc
js
das
xchg
bt
stos
xor
in
movsb
es
or
xchg
add
xor
lods
jge
lret
xchg
iret
enter
cmp
pop
shrb
call
repnz
pop
fbld
ret
stos
jle
cmp
mov
mov
imul
pop
sbbb
mov
in
mov
sub
ss
inc
inc
jae
ret
jecxz
cmp
mov
repnz
fsubl
sbb
rolb
mov
stos
fcom
mov
lret
test
mov
test
mov
loope
mov
lcall
mov
add
and
mov
ficompl
repz
outsl
sbb
punpckhbw
xchg
sub
dec
fistl
or
dec
jne
ja
xchg
inc
xchg
mov
push
stos
push
jo
nop
sbb
in
push
sub
dec
mov
pop
adc
and
mov
dec
mov
leave
popa
shrb
enter
dec
dec
fwait
and
pushf
in
daa
or
aam
dec
push
and
xor
sbb
push
nop
jge
out
imul
jle
or
cmc
js
mov
ss
pop
mov
pushf
popf
mov
or
mov
add
and
pop
adc
shr
lds
jo
fimull
es
lea
jmp
mov
add
pop
push
sbb
sub
adc
scas
xchg
cli
add
push
xor
xor
inc
xor
adc
aaa
sub
rcrb
add
mov
and
lock
notb
push
mov
out
out
inc
ror
sbb
aad
pcmpgtd
jle
add
sub
mov
arpl
pop
jo
loope
loope
data16
mov
iret
pusha
mov
sbb
add
iret
clc
popa
faddl
hlt
arpl
dec
ret
cwtl
sub
pop
cmp
inc
inc
xor
fs
jecxz
shl
xchg
adc
test
pusha
pop
fildl
lahf
ds
sbb
pop
ret
dec
pop
push
test
xchg
rcll
sub
xor
sbb
leave
and
inc
push
sar
fbstp
loop
xchg
mov
int
xlat
and
out
aas
push
xchg
int3
shll
inc
pop
sub
testb
scas
in
or
enter
mov
mov
mov
cmp
das
mov
enter
xor
gs
aaa
add
sbb
lock
mov
scas
addb
mov
lahf
mov
cmp
mov
dec
jg
or
ret
out
adc
and
call
shll
test
addr16
mov
sti
jecxz
mov
pusha
mov
push
rcll
push
fildll
dec
inc
aas
dec
call
push
fcomi
dec
push
addb
shl
in
gs
cmp
cld
mov
ds
xor
loope
add
std
nop
sahf
out
mov
add
sbb
mov
push
adc
pinsrw
cmp
adc
inc
in
mov
or
sbbb
adc
dec
jge
push
dec
mov
hlt
mov
xor
jne
out
xor
les
cmp
pop
dec
cmp
jbe
nop
test
popl
loop
out
mov
fs
and
inc
jmp
test
icebp
sti
test
pop
sub
pop
dec
cmpsb
pop
aaa
push
arpl
pop
pop
icebp
push
rolb
int3
cli
jmp
jmp
fisttpl
mov
mov
enter
into
mov
lds
cmpsb
aad
inc
mov
push
cmp
shll
add
cmpsb
mov
cld
jle
mov
mov
dec
xorb
insb
inc
inc
cmp
xor
sbb
arpl
insb
lods
jge
test
int3
daa
push
push
xchg
jge
jp
adc
cmp
dec
inc
cwtl
out
fisubrl
and
cmp
movsl
mov
push
movsb
sub
shr
mov
adc
lods
imul
fldenv
push
cmpsb
outsb
mov
and
mov
sub
es
test
pop
and
push
mov
cmpsl
pop
jno
mov
xchg
xchg
add
dec
xchg
mov
lods
daa
cli
pop
in
sub
cmc
inc
hlt
or
insb
mov
fmull
mov
lcall
sbb
mov
movsl
aam
hlt
int
lods
xchg
xor
in
stos
int3
mov
jns
cltd
icebp
inc
add
add
cs
clc
xor
mov
rorb
ja
sarb
clc
push
pop
sbbl
dec
rolb
lock
xchg
mov
cmp
jge
and
push
sbb
aam
shrb
rcrl
sub
out
sub
lock
das
lcall
sbb
push
clc
out
add
mov
jl
inc
push
int
ljmp
cltd
add
mov
mov
jmp
push
cmpsb
jp
fwait
pop
outsb
rorb
pushl
out
xlat
sub
clc
xchg
and
and
dec
lea
jecxz
imul
xor
test
bound
pushf
pusha
and
repz
jbe
clc
and
push
push
jle
sahf
movsb
leave
repnz
inc
popa
push
cmp
add
dec
fdivrl
js
mull
jl
xchg
add
mov
and
mov
pusha
inc
in
jl
popf
int3
dec
or
pushf
rorl
cwtl
lods
rorl
sahf
pop
add
mov
lods
add
inc
pop
mov
dec
push
dec
fcoml
xor
fwait
inc
cmc
inc
inc
fimuls
pop
sti
loopne
jle
xchg
sub
or
dec
test
xor
test
icebp
sub
mov
push
aam
xchg
jle
push
shl
inc
mov
sbb
mov
clc
sub
jbe
jmp
shl
jecxz
fwait
inc
sbb
lods
cld
push
cltd
jg
mov
mov
enter
push
jle
ret
aaa
jno
mov
stos
cmpsb
sbb
xchg
sub
push
jecxz
aad
inc
pop
lret
cmp
xchg
es
jbe
inc
loop
lea
mov
imul
mov
inc
jno
incb
jp
je
jae
subb
or
flds
mov
push
push
mov
inc
adc
lock
and
xor
inc
jne
xor
ds
sti
mov
or
pushf
and
sub
and
lret
lea
mov
test
jg
mov
incb
push
aas
jno
testl
sub
sbb
jbe
divl
mov
jo
lahf
rolb
test
jl
sbb
rolb
or
fcom
nop
inc
adc
in
out
pushf
jecxz
loopne
pop
aad
inc
xor
adc
in
cmp
sarl
bound
jnp
mov
leave
inc
cmp
test
rcrb
mov
ljmp
push
xor
push
sbb
cwtl
scas
pop
inc
fidivl
sbb
push
lods
mov
pusha
lds
dec
xor
xchg
sarb
dec
push
and
bound
sub
mov
ds
fs
sbb
mov
clc
sub
scas
outsl
lret
arpl
mov
mov
fcmovu
jl
and
push
shlb
in
jb
adc
xor
add
or
imul
shl
popa
xchg
xchg
push
fcompl
cmp
jmp
mov
dec
or
lds
dec
inc
aam
repnz
arpl
test
and
test
inc
inc
push
cmp
stos
and
iret
in
out
int3
adc
fxch
into
sub
push
int3
xchg
mov
loope
lret
scas
or
pop
sarl
cmp
xchg
xor
push
test
xchg
sub
sbb
xchg
pop
popf
dec
movsl
push
push
add
fs
pushf
or
mov
fdivp
jbe
push
dec
rclb
or
pop
mov
fbstp
add
cmpsb
cmpsb
decl
ret
add
les
insb
sub
scas
dec
dec
mov
jnp
and
jecxz
dec
xor
lods
xlat
add
mov
loopne
imul
xor
test
loopne
fwait
leave
insl
push
test
iret
jb
dec
mov
push
jl
dec
jmp
xor
test
push
pop
xor
mov
mov
cld
nop
shl
das
jb
popf
nop
inc
xcrypt-cfb
cmpsl
gs
ret
addr16
out
cmp
dec
add
adc
xchg
fwait
add
dec
adc
and
ret
inc
dec
jg
mov
out
pop
mov
aam
dec
push
jo
sub
jmp
push
push
add
dec
mov
das
mov
icebp
mov
clc
leave
pop
sub
daa
loope
xor
lcall
int
out
adc
mov
leave
js
addr16
rorl
add
cld
scas
mov
xor
in
mov
mov
adc
testb
mov
dec
mov
jmp
shll
das
mulb
jb
push
cmpsb
or
in
es
mov
mulb
mov
int
insb
ror
bound
loop
push
xlat
sbb
insb
cmpsb
popf
and
movsl
ljmp
int3
pop
les
mov
jecxz
pop
adc
mov
ds
jecxz
inc
jl
repnz
shlb
cmp
jmp
inc
pop
xchg
pushf
inc
add
cmp
xor
and
lods
push
les
jge
fistpll
jb
loope
loop
or
shr
jns
jb
stos
cmp
in
mov
inc
sahf
inc
imul
xchg
add
out
sub
rcl
sbb
mov
or
xchg
push
shlb
in
mov
rclb
mov
and
pop
mov
js
test
fstl
in
cmc
mov
inc
cli
into
sar
jnp
pop
stos
shl
cli
sbb
out
inc
dec
insl
mov
pushl
sub
and
inc
loopne
out
imul
repz
daa
mov
cmc
xchg
leave
das
in
popf
shl
pop
or
mov
pop
in
xor
aas
inc
stc
arpl
push
rcll
mov
js
setge
xor
sub
outsb
andl
lahf
ficompl
movntq
cltd
fdivl
xchg
leave
pop
orl
inc
test
ret
stos
hlt
lcall
negl
or
sub
out
inc
mov
fs
aad
push
in
outsl
jg
mov
cmovnp
les
push
mov
aam
ljmp
pushf
push
lods
pop
call
pop
sbb
out
pop
jno
pop
push
dec
shll
mov
stos
sti
mov
outsb
jp
mov
test
jne
pop
sub
sub
and
xor
sbb
mov
mov
pushf
mov
jno
jbe
cmpsb
pop
aad
cs
in
adc
jmp
cltd
and
cmp
xchg
nop
adc
pop
jne
xchg
aam
add
push
mov
fdiv
pop
mov
aad
lods
lods
popf
jns,pn
icebp
mov
loopne
pop
mov
push
sarb
sub
sbb
xchg
dec
in
add
inc
mov
lock
add
push
push
fstp
sub
and
push
adc
sbb
int3
aad
pop
das
movsl
xchg
adc
push
fisttps
loopne
clc
cmpsb
or
in
xor
fxch
add
or
test
add
imul
fsubrs
push
xor
mov
sub
jecxz
shlb
xor
pop
hlt
sub
das
test
popf
sub
cmp
lahf
rorl
pop
cld
jg
leave
loopne
mov
xchg
push
inc
mov
xor
sti
push
std
sub
pop
add
out
pushl
add
jl
rorb
or
fs
xor
adc
leave
test
dec
in
ljmp
test
jnp
push
in
push
mov
jno
sub
adc
inc
sbb
push
fdivs
sub
add
shl
je
adc
jb
sbb
shll
lock
cmp
or
pop
js
dec
ss
pop
jle
fbstp
push
shlb
in
cmpsl
jge
sub
int3
in
cmp
hlt
pushf
shll
daa
push
addr16
sti
pop
stos
pushf
jp
lahf
adc
xchg
lock
pop
xchg
push
sbb
lcall
test
cmp
jle
les
mov
jl
repz
sahf
clc
shll
lret
int3
xchg
pushf
sti
test
notl
and
cli
cmp
imul
jno
sbb
test
das
xor
sbb
mov
xchg
outsl
fmul
xchg
test
rorl
add
cmp
adc
pop
inc
mov
popa
test
les
call
xor
gs
xor
dec
test
stos
fcmovne
dec
es
clc
jnp
jl
and
mov
mov
and
lcall
cmp
inc
fucomp
mov
repz
into
mov
lcall
lock
sbb
and
add
bound
add
in
cmpsl
cwtl
and
jmp
gs
xchg
xor
test
sub
add
xchg
cmp
mov
mov
pop
jo
test
iret
mov
loopne
int
repnz
jle
jle
test
aas
cmp
add
inc
out
shll
xchg
pop
mov
push
call
addb
dec
sub
stc
xchg
repz
loopne
daa
hlt
add
addr16
test
push
cmp
and
or
xor
ret
mov
arpl
fwait
stos
mov
jo
jmp
inc
sti
add
sti
es
push
jp
imul
negb
dec
inc
mov
xor
sub
pavgb
or
test
les
js,pt
sbb
sub
inc
lods
mov
xor
adc
jb
lahf
sub
mov
mov
leave
adc
pop
pop
xor
adc
test
cmp
and
aas
push
or
or
lea
and
test
scas
inc
xor
push
sub
pop
pop
movsb
out
adc
ljmp
or
jg
imul
xchg
jp
ja
jle
xlat
testl
and
jp
pop
cmp
xor
fsubrs
inc
inc
test
stos
mov
add
lcall
pop
arpl
xor
ljmp
mov
adc
and
call
jnp
mov
pop
add
aaa
jae
test
dec
or
fmull
icebp
fwait
sbb
xchg
inc
cmpsl
add
movsb
mov
std
and
sbb
sbb
pop
lret
jl
cmc
push
insb
mov
xor
icebp
outsl
sbb
mov
or
icebp
aad
xchg
arpl
call
adc
lds
xlat
or
mov
test
push
jo
add
call
stc
nop
or
add
cmc
ret
add
push
fiaddl
or
jae
mov
out
jg
xchg
popa
fdivrs
fdivrs
pop
sbb
push
pop
popw
sti
in
mov
dec
add
push
cltd
adc
cmp
inc
jg
ljmp
xlat
arpl
or
dec
mov
mov
push
sbb
enter
xchg
addr16
mov
sbb
arpl
fiadds
stos
cltd
mov
jp
mov
test
lods
jp
cmp
insl
sti
fnsave
jb
mov
pop
push
ret
in
pop
daa
push
or
mov
mov
dec
and
adc
add
mov
aas
jb
push
jns
adc
mov
jo
fidivl
add
jle
ret
in
jle
mov
rclb
mov
add
or
enter
xlat
sub
stc
pop
push
cmpsl
insl
xor
cld
and
pop
cmpsl
mull
ret
cs
gs
imul
lcall
and
mov
or
les
mov
lret
xchg
stos
cmpl
add
add
test
sub
mov
cmpl
loop,pt
mov
add
ret
cmc
push
lret
pop
pop
cld
add
jns
int3
lahf
test
xchg
xchg
adc
fisubl
cs
sbb
ja
or
into
push
gs
negl
mov
fsub
mov
xchg
pop
data16
push
and
xchg
xchg
and
jbe
push
popa
cmp
sti
outsl
cmp
outsl
ds
sub
iret
jnp
push
jl
shrl
dec
out
push
inc
xor
sub
scas
into
jnp
lret
xor
mov
add
leave
jge
shl
jge
flds
cs
mov
push
lds
mov
pop
movsl
mov
popa
mov
cwtl
pop
insb
mov
or
sti
adc
gs
jl
xchg
stos
dec
inc
xchg
mov
add
mov
sbb
pop
nop
xchg
sub
out
sbb
lock
gs
mov
xor
movsb
fimull
jns
mov
cmpsb
push
data16
rolb
out
movsb
jbe
and
jno
mov
repz
cmp
test
fwait
cmpsb
sbb
pop
stc
hlt
hlt
test
push
cs
or
jmp
test
push
or
loop
jle
repz
pop
scas
dec
push
sbb
call
xchg
lods
mov
icebp
inc
xor
mov
fcmovbe
xor
cltd
add
mov
push
sbb
or
mov
push
std
mov
adc
fidivs
inc
out
js
shll
cmpsl
outsb
sbb
stc
add
stos
scas
imul
push
pop
scas
pop
sbb
sbb
lea
jle
mov
cld
jmp
ljmp
dec
shl
inc
mov
ljmp
mov
sbb
inc
popf
daa
dec
and
adc
loope
das
dec
mov
int
dec
mov
bound
repz
mov
jns
pusha
mov
mov
in
dec
loop
out
in
outsb
xlat
fisubl
jg
xlat
test
xchg
or
mov
inc
lds
pushf
pop
insl
and
aam
lret
lock
idivb
idivb
mov
sub
pop
and
adcl
fistps
push
ficoml
mov
fsubs
fs
orl
mov
xchg
mov
mov
push
mov
ja
lods
movsl
push
mov
push
roll
movsl
ljmp
jg
pop
cmpb
idivb
dec
lea
cmc
adcl
pop
ret
xchg
lcall
and
rcll
das
imul
jnp
xchg
stc
fimull
inc
or
add
cmpsl
pop
clc
adc
scas
test
mov
cmpsl
sub
xchg
ss
cli
adc
jecxz
add
xor
xchg
adc
push
daa
jecxz
es
shr
and
pop
push
je
fldt
cs
xchg
shrl
lahf
mov
or
lcall
push
jge
xor
lret
aam
push
into
cmpsb
xchg
rclb
shl
sub
lea
call
xchg
aam
mov
dec
push
pop
fstl
je
stos
mov
mov
push
dec
fildl
mov
inc
pushf
push
mov
inc
mov
setbe
fwait
nop
mov
iret
or
dec
test
ret
inc
idiv
hlt
ret
pop
clc
cld
cli
rolb
or
push
in
push
xor
fs
sbb
stos
ljmp
xchg
ficoml
fiadds
adc
push
fisubl
jno
mov
fsubs
outsl
or
jl
mov
pop
scas
add
nop
xor
push
add
lahf
jmp
mov
setnp
cmp
adcb
dec
or
sarb
mov
es
push
lea
mov
aas
std
fst
mov
and
and
or
xchg
inc
ret
fwait
rol
sbb
call
xlat
leave
adc
movsb
imul
and
add
dec
sub
ss
inc
xchg
int
addr16
push
xchg
dec
fldenv
mov
and
sbb
inc
fcoms
decl
jp
test
loop
pop
xchg
lcall
lahf
fldt
into
xchg
lock
jno,pt
loope
add
cld
fwait
lea
jno
insl
inc
test
pop
xor
rorl
rcl
mov
fildll
adc
and
jle
xchg
lret
loop
or
loop
popa
rolb
sarb
subb
sub
mov
and
movsl
popl
lock
pop
and
inc
arpl
in
mov
sub
in
adc
and
adc
nop
out
popa
in
shlb
inc
push
int
scas
ds
rorl
push
dec
icebp
pop
cmp
mov
popf
loop
xchg
out
or
lods
jns
push
ss
out
push
or
pop
aam
sbbl
xor
ljmp
adc
jo
out
and
mov
mov
out
stc
adc
mov
and
inc
sbb
mov
rcrl
push
nop
dec
insl
mov
lret
cmp
mov
repnz
hlt
fnstenv
push
scas
xchg
push
push
dec
imul
loope
pop
cmp
dec
mov
ss
hlt
int
ja
mov
sub
sub
mov
icebp
xchg
adc
inc
dec
outsb
xor
xchg
pop
adc
loopne
xchg
and
mov
movsb
popf
loop
xchg
cmpsl
sbb
and
pop
test
dec
loopne
cmp
xor
push
cmpsl
inc
rclw
addr16
das
frstor
cmpsl
sbb
rorb
repz
jb
popa
faddl
mov
inc
lret
fimull
sbb
xchg
pop
and
jb
pop
dec
loope
xchg
push
sub
or
aas
mov
into
mov
popa
dec
in
icebp
push
xlat
iret
and
and
fldl
jnp
and
add
mov
or
insb
hlt
fs
in
movsl
mov
push
pop
pop
jno
jbe
imulb
out
bound
daa
push
push
pop
xorb
ret
xchg
lret
mov
fiaddl
adc
imul
ljmp
and
and
cld
out
dec
xor
sub
push
lock
and
lods
xor
pop
sub
imul
jbe
jnp
lods
push
pop
cmpl
lret
cmp
push
jmp
mov
aam
jecxz
cmp
sbb
or
jnp
stos
and
mov
or
ret
xor
mov
sti
test
mov
enter
mov
stc
mov
mov
bound
notb
jne
into
stc
xor
sbb
adc
mov
rorl
xchg
ja
sbb
mov
and
test
imul
xor
out
mov
loope
inc
repnz
outsb
lahf
push
mov
and
out
mov
pop
negb
push
filds
lcall
insb
adc
sbb
mov
or
xlat
lea
dec
push
xchg
adc
out
es
in
pop
call
imul
clc
sub
adc
cmpsl
cmpsl
xor
sbb
push
ja
loop
adc
adc
cmp
subl
scas
adc
cwtl
sbb
pushf
imul
out
add
cli
fistpll
xor
jl
imul
in
arpl
sub
and
adc
or
clc
or
dec
imull
sarb
sbb
addr16
pop
out
cmp
jne
ret
popa
xor
bound
sbb
imul
dec
int3
leave
mov
or
repnz
xchg
lea
push
inc
popf
data16
push
jno
xchg
pushf
jnp
fimuls
mov
pop
jae
ja
pop
scas
jo
push
lock
sbb
jle
pop
cmp
movsl
imul
cmp
js
pop
mov
in
js
into
or
cmc
inc
arpl
aaa
mov
loop
enter
mov
inc
push
pop
pop
lods
sub
out
cmc
jo
xchg
test
test
test
push
inc
pop
fs
sbb
je
adc
or
cmpsl
ljmp
adc
inc
test
and
scas
push
popf
test
insl
cmp
in
ja
jecxz
jae
daa
insb
cmp
mov
jmp
cmpsb
cltd
sbb
sbb
adc
inc
pop
xchg
cmp
mov
jne
cmovns
icebp
lret
jg
sbb
pusha
nop
int3
out
rol
shrb
mov
out
sbb
lret
std
jmp
mov
cmp
cs
lcall
lcall
cmp
push
in
inc
inc
cmp
dec
test
shlb
hlt
aas
jmp
push
iret
sahf
pop
mov
push
into
xchg
stos
cltd
mov
sbb
sbbb
add
jnp
add
fadds
shlb
inc
outsl
sbb
jae
jecxz
lods
rcrb
sti
push
rcrb
aad
hlt
loopne
mov
std
pop
cmpsl
addb
push
shll
repz
add
scas
add
out
sub
and
cmp
inc
stos
repnz
loope
push
sbb
js
ret
push
adc
sbb
ret
mov
in
sub
jae
dec
ds
mov
inc
lret
mov
daa
jp
xchg
add
jecxz
sbb
push
mov
in
aaa
cmpsb
jecxz
test
mov
xor
inc
mov
mov
inc
cld
in
inc
push
xor
ficomps
test
or
fistl
das
enter
repnz
sahf
jle
lcall
mov
add
shrl
push
or
push
repnz
in
loope
jo
or
loope
add
and
test
adc
xchg
xchg
lods
cltd
loope
enter
pop
xor
ljmp
lret
sbb
iret
outsl
dec
dec
mov
lds
sub
inc
sbb
xor
in
xor
mov
mov
cmc
je
aam
enter
mov
loop
adc
ret
rorb
scas
and
sub
adc
sbb
or
insb
punpckhbw
sub
fcompl
out
rol
cli
sbbb
push
jmp
xlat
hlt
cmp
xchg
mov
int
jp
int3
adc
int
xchg
fdivl
cs
jbe
adc
and
cmpsb
gs
movsl
lahf
gs
jne
inc
arpl
xchg
fstpt
xor
shl
arpl
jg
mov
mov
lock
xlat
orb
mov
cmpsl
loope
insl
mov
sub
or
inc
mov
xchg
sub
js
jge
in
pushf
jb
je
sti
xchg
dec
lods
adc
mov
rorb
iret
stos
add
std
sub
cmc
jmp
adc
mov
cmpsl
jbe
jns
sbb
sbbb
mov
or
addl
call
shl
adc
in
push
or
sbb
enter
stos
pop
cmp
lds
mov
inc
insl
and
or
xchg
lods
mov
icebp
inc
xchg
inc
fwait
sub
jp
outsl
popa
mov
push
add
push
xchg
stc
sub
jbe
aad
icebp
xchg
push
xor
inc
popf
lret
in
ss
push
ret
push
mov
rcl
loop
ficompl
mov
mov
js
shlb
jl
clc
insb
stos
sahf
lds
jne
pop
add
adc
fimuls
push
or
ds
out
stos
or
sub
cmpsl
sbb
inc
addr16
lods
push
push
test
mov
or
mov
xchg
outsb
dec
and
movsl
stos
sbb
imul
popf
or
test
adc
xor
das
mov
fstpl
imul
sub
into
sbb
ficoml
jo
xlat
xchg
int3
aaa
loop
repz
xor
orl
xor
and
pop
ljmp
adc
out
ficoml
mov
push
lds
inc
mov
dec
lock
aas
fdivr
dec
ret
xor
loopne
dec
mov
inc
imul
push
pop
loope
xchg
adc
cmpsb
pop
push
and
pusha
push
sub
xor
clc
inc
out
push
shll
aaa
addr16
lods
ret
stos
xor
std
sbbb
mov
cwtl
pop
fsubrl
sbb
pop
jno
orb
mov
sub
out
mov
push
xchg
jnp
or
xor
das
psadbw
lock
test
out
loopne
int3
imul
or
fisttps
mov
and
ret
xor
cmp
stos
xchg
sti
addr16
mov
lret
cmc
jmp
inc
inc
stc
idivl
xchg
xchg
push
lea
jl
iret
loopne
jmp
push
test
pushf
xor
pop
loop
and
imul
add
dec
sbbb
and
shrb
cmc
pushf
push
pop
xchg
xor
subb
lahf
jno
add
inc
imul
cmp
cmp
cmc
shrb
ja
inc
mov
or
xchg
hlt
js
loopne
lret
je
and
std
mov
push
ljmp
cmp
adc
imul
sahf
mov
arpl
adc
inc
outsb
mov
mov
xchg
mov
repnz
das
sub
hlt
cmpsl
jae
int
add
cs
mov
pop
sub
lret
dec
insb
decb
inc
cltd
push
push
mov
lds
and
aaa
cmp
les
loop
stos
cmp
gs
push
sbb
out
sbb
cli
popa
push
mov
lods
scas
jg
lods
fdivrl
pop
jo
push
sub
push
sub
adc
pop
ljmp
subl
flds
das
imul
out
mov
cli
cmp
pushf
mov
push
enter
pop
cltd
test
ss
jbe
testl
enter
xchg
pop
pop
mov
aam
ds
cmp
les
add
aam
pop
inc
scas
scas
sbb
sub
fnstsw
mov
cmp
aam
mov
orl
js
sub
dec
in
roll
mov
and
dec
cwtl
jmp
popa
cmp
and
dec
mov
je
hlt
repnz
adc
lret
ljmp
xchg
ds
mov
jge
in
aas
fisttps
jle
cli
sbb
das
adc
iret
ror
enter
cmp
lds
test
push
push
xor
aas
mov
cmpsl
es
mov
je
lret
or
cli
jge
ficoms
jne
add
pop
and
mov
iret
pop
mov
push
mov
stos
popa
or
enter
imul
mov
dec
mov
jle
mov
enter
cmp
mov
xchg
dec
outsb
or
push
xor
inc
outsl
add
out
mov
lret
in
push
mov
dec
mov
and
lcall
pushf
adc
clc
push
lret
cmp
popa
xor
stc
dec
gs
fstp
pop
inc
hlt
cltd
jne
pop
adc
insl
loop
cmpsl
leave
xlat
push
loope,pn
or
popa
adc
vshufps
xor
test
inc
adc
cmpsb
dec
mov
loope
cmp
jne
ja
xor
movsl
pusha
outsl
sbb
adc
push
add
lock
sbb
mov
jg
out
xor
scas
shr
nop
push
cmp
fwait
inc
popf
test
ljmp
pop
cmpsb
out
fdivs
mov
jecxz
dec
add
xchg
imul
add
and
sub
cmp
sbb
movsb
sub
lods
cs
lea
cs
dec
test
sub
lods
mov
loopne
leave
cmpsb
fiaddl
xchg
xchg
pop
xor
pop
lods
or
andb
loope
imul
jle
xchg
cmp
and
shr
inc
mov
jae
ljmp
rclb
push
add
or
jge
mov
mov
jo
mov
test
lret
lods
push
sub
sahf
add
in
cmpl
imul
enter
inc
mov
sti
and
popf
imull
sub
push
adc
xchg
aad
shr
pop
lahf
fcoms
adc
js
jbe
cmp
mov
sub
and
js
pop
and
or
cmpsb
popl
out
push
sbb
mov
adc
mov
cli
mov
js
inc
in
aam
or
mov
divl
test
add
sahf
stos
or
jnp
pop
or
mov
imul
popa
mov
jl
daa
aam
movsl
iret
ljmp
push
scas
push
sbb
sbb
ds
mov
mov
pop
insl
mov
sbb
shlb
xchg
xor
and
pop
clc
mov
call
je
outsb
jns
lcall
mov
stos
js
pusha
xor
in
or
insb
xchg
jecxz
inc
push
adcl
arpl
push
inc
clc
jp
jnp
imul
xchg
shr
sbbl
jno
mov
das
arpl
dec
aaa
mov
bound
loopne
cld
jp
jbe
mov
add
mov
test
mov
mov
inc
pop
mov
xchg
int
ds
mov
dec
and
jo
les
pop
jne
rcrl
push
out
lret
loop
cmp
xlat
subl
fldl
cs
dec
push
jecxz
mov
mov
lds
ds
leave
mov
mov
mov
mov
mov
stc
sti
int3
int
cmp
inc
mov
and
shl
fwait
hlt
cmp
mov
test
jns
inc
push
rolb
stos
dec
xor
test
dec
xor
xor
fsubrs
add
test
out
outsl
push
push
adc
xchg
mov
cmp
xor
cli
inc
mov
cmp
xchg
jge
les
popf
or
in
aaa
push
fdivr
and
imul
add
test
leave
aaa
test
std
arpl
arpl
and
ds
outsb
push
adc
xchg
and
sub
aaa
mov
xor
pop
fidivs
iret
insl
push
sbb
cmpsl
adc
cmp
mov
repz
mov
or
inc
jmp
daa
or
jbe
sbb
cld
ss
mov
inc
popa
mov
inc
add
inc
add
repnz
and
inc
fwait
push
stos
dec
movb
jmp
inc
add
push
loope
xor
into
lea
or
cmp
bound
cmpsl
jecxz
jmp
mov
test
rorb
or
rcl
xor
add
popa
cwtl
mov
or
push
sbb
sarb
pushf
cmp
xchg
dec
push
pop
shl
xor
xchg
mov
adc
mov
popa
xchg
pop
andb
dec
xchg
pushf
ficompl
mov
mov
aad
mov
loope
push
pop
scas
cld
sub
pop
cltd
push
inc
cmpb
ror
imul
sbb
push
sahf
xchg
dec
ficoml
movsb
cmp
pusha
stos
pop
sahf
mov
xor
pushf
mov
mov
in
clc
mov
xchg
shll
adc
pop
lret
clc
jb
ficomps
fidivrs
cwtl
and
xor
mov
sbb
mov
shll
std
test
repnz
imul
fdivr
cmp
push
or
pop
dec
pop
arpl
adc
sbb
lret
push
lcall
in
push
jp
lret
scas
mov
testl
push
imul
inc
imul
cs
mov
inc
sbb
push
add
jnp
hlt
sbb
sub
push
adc
and
push
sahf
inc
inc
cmp
gs
cmp
sbb
test
imul
jge
inc
sbb
jp
pushf
push
imul
cmp
scas
pop
push
ffreep
sub
push
inc
stos
scas
adc
in
adc
sbb
movsl
loop
sub
cmpsl
jmp
and
addl
gs
mov
pop
repz
pushf
pop
push
popf
mov
sbb
jp
cwtl
or
out
dec
cmpsl
xchg
scas
jne
xchg
es
pop
jne
jp
cmp
imul
imul
stos
pusha
test
adc
xchg
mov
gs
fdiv
jge
ss
xlat
out
mov
shll
addr16
inc
sub
push
mov
fs
mov
ss
or
mov
push
cmc
test
pusha
pushf
fstps
lds
jbe
or
dec
fnstsw
cmpsl
fcomp
cmc
fwait
bound
mov
push
addr16
cmp
mov
xor
mov
push
cmp
iret
aaa
sti
fnstenv
xor
movsb
sub
mov
je
or
mov
gs
iret
sbb
pop
add
xchg
fs
shr
jp
sbb
repnz
or
das
in
or
gs
mov
rol
ss
cmp
xchg
inc
aas
add
push
sub
lock
push
xchg
fimuls
loop
and
in
mov
mov
out
lock
dec
and
jne
scas
fdivp
fsubl
int
faddl
ss
jge
test
dec
notl
fld1
adc
xchg
shrl
push
mov
dec
test
jge
push
adc
xchg
and
adc
mov
sti
hlt
sub
insl
push
inc
cmp
shrb
mov
add
xor
adc
das
xor
or
pushf
mulps
cmp
inc
testl
jnp
dec
add
jne
pop
dec
cld
lds
lods
xchg
xor
fstpt
adc
xchg
daa
lret
call
xor
jp
js
xor
dec
stos
out
cmp
ljmp
ja
mov
dec
in
push
outsb
testb
scas
aad
pushf
cmpsl
fwait
mov
mov
out
mov
pop
addr16
hlt
insl
xchg
lods
add
xor
call
lods
inc
das
inc
jno
pop
faddl
rolb
sbb
lea
daa
mov
data16
push
insl
sti
jb
popf
xchg
cmp
inc
mov
out
and
pop
pop
and
add
xor
dec
scas
mov
mov
loop
ds
stos
out
mov
arpl
js
repz
dec
or
mov
stos
insb
jg
aad
add
add
hlt
cmp
nop
pop
outsb
movsl
push
xor
adc
ret
and
insb
gs
pop
cltd
and
jb
jb
lahf
sub
add
shlb
cmpl
shl
push
push
add
fs
push
and
pop
dec
testb
nop
inc
sbb
adc
sbb
scas
adc
xchg
mov
dec
dec
mov
mov
xor
sub
adc
xor
out
in
dec
xchg
fsub
testl
jg,pn
movsl
inc
xor
ret
lds
popa
lret
jae
adc
fmull
sbb
icebp
loopne
icebp
pop
xor
fwait
test
pop
in
int
sbb
in
dec
add
add
sbb
enter
pop
repnz
scas
stc
and
cmp
ds
ds
inc
lret
dec
cmp
lods
cmp
jmp
and
out
or
sahf
push
stc
pusha
mov
jp
pop
cmp
shll
jg
cli
add
shlb
pop
filds
popa
imul
inc
sbb
stos
sahf
enter
push
test
mulb
rclb
xor
sub
jmp
je
rclb
addr16
xchg
testl
popf
push
ss
sbb
jge
mov
mov
clc
jge
mov
jmp
ljmp
dec
xchg
pushf
dec
mov
jns
dec
hlt
mov
push
test
into
jno
adc
jp
addr16
cmpsl
test
fdivr
push
jbe
jne
inc
add
dec
and
sahf
sahf
fwait
ja
pushf
xlat
pop
in
xlat
in
and
ljmp
adc
xchg
xor
xchg
sbb
fwait
xor
or
iret
call
pop
rcrl
push
cmp
stos
insl
ret
inc
cmpb
dec
aaa
cmpsb
inc
mov
sbbl
int3
inc
jns
mov
xchg
loopne
xchg
test
cld
dec
sbb
test
cs
in
out
inc
leave
out
inc
shl
in
popf
int
stc
shlb
sub
cmc
inc
xchg
mov
push
out
jg
and
mov
jmp
sbb
lods
repz
mov
xchg
xchg
cmp
in
jbe
aam
pop
or
into
out
mov
push
es
jne
jo
push
push
sbb
inc
dec
or
pop
dec
outsb
mov
cmc
orl
out
lret
mov
jle
cmp
push
aam
cmp
inc
rcr
scas
sub
add
lods
inc
cli
aaa
popa
adc
xlat
int3
add
push
cwtl
jno
mov
jns
add
imul
cli
je
xor
cltd
int
outsb
pop
push
out
pop
pop
xor
imul
cmp
xchg
xor
sti
aad
icebp
ss
push
rcrb
pop
fisubrs
pop
pop
fcomi
lock
lods
adcb
sbb
add
xor
je
or
mov
xlat
sub
mov
mov
fiadds
jo
sbb
es
jb
dec
icebp
xchg
jb
dec
jl
nop
scas
push
dec
sti
ror
movsl
enter
mov
repnz
mov
dec
mov
leave
movsl
stos
idivb
mov
in
pop
movsb
or
xchg
fidivs
clc
gs
rcr
push
pop
or
cmc
mov
jo
push
adc
lret
call
ret
repnz
xchg
push
mov
xchg
mov
ret
pop
shrb
mov
stos
popl
mov
mov
mov
rcrl
test
mov
adc
out
jbe
xor
jb
jp
pop
inc
bound
inc
jg
shlb
inc
push
cs
enter
dec
out
pop
mov
nop
cwtl
rclb
mov
pop
xor
or
push
stos
jmp
loope
roll
push
jnp
js
jnp
sub
jnp
pop
iret
lret
mov
sub
jnp
push
jg
pop
dec
aaa
aad
push
or
sbb
jae
nop
mov
inc
xchg
scas
pop
jge
jl
jb
scas
push
int3
scas
movsb
and
jnp
sbb
fmull
loope
pushl
mov
jg
and
inc
pop
cmp
pop
add
das
cwtl
hlt
pusha
repnz
and
into
mov
cltd
rcll
adc
sbb
mov
mov
loope
mov
icebp
mov
daa
mov
into
mov
ret
xor
outsl
test
xchg
inc
pusha
jbe
push
xchg
in
jl
inc
fwait
insl
stos
pop
xchg
imul
mov
mov
andb
popa
clc
dec
add
lods
xor
movsb
dec
out
inc
jo
test
or
pop
cmp
dec
xor
jae
mov
mov
mov
add
cmp
stos
push
fs
dec
dec
jb
leave
cmp
cmp
insl
insb
sbb
cmp
stc
mov
cmp
lcall
cmp
movsl
mov
adc
in
cmpsl
pop
pop
js
fwait
std
cmp
sbb
imul
inc
xorb
mov
cwtl
rcrb
outsl
nop
jge
lret
and
stos
xor
flds
and
in
sub
push
or
mov
mov
outsl
pop
ret
or
push
push
cmp
pop
pop
aas
cmp
arpl
push
insb
and
cmc
daa
fdivs
pop
stc
xor
sbb
fidivrl
push
fadds
mov
cmp
ds
pusha
or
jg
add
adc
loopne
push
cltd
add
inc
arpl
sub
push
nop
sub
sub
dec
or
pop
aas
inc
fs
nop
lahf
loopne
adc
mov
fs
xor
inc
cld
or
fistps
lahf
xor
mov
pushl
mov
mov
out
xchg
cmp
je
int
add
jmp
push
iret
out
test
mov
std
roll
sub
pop
incl
jno
aad
xor
cmp
adc
pop
cmp
icebp
ret
cmpsb
in
xchg
cld
scas
push
add
lcall
pusha
push
xor
or
inc
add
pop
ljmp
jbe
cmpsb
movsb
js
push
call
loop
push
mov
sbb
clc
mov
cld
mov
dec
and
pushf
sbb
call
insl
cmp
mov
mov
adc
cmp
out
cmp
push
arpl
mov
bound
addr16
pop
inc
aam
pop
mov
xor
ljmp
push
pop
test
fdivs
stos
push
or
pop
pop
push
das
add
gs
jmp
mov
sbb
shll
gs
push
in
xchg
xor
push
push
lret
fidivrs
mov
sbb
divb
adc
mov
mov
imul
mov
xor
div
arpl
arpl
fisubs
push
push
ret
int
popa
test
inc
fmulp
stos
push
ljmp
sub
add
popa
jnp
in
in
xor
add
ja
jbe
les
mov
adc
cwtl
mov
adc
pop
push
jp
scas
out
scas
pop
test
adc
out
xchg
or
dec
cld
sub
xchg
loopne
pop
inc
pop
sub
dec
push
add
dec
xor
outsb
daa
aam
jno
add
push
push
aaa
sub
mov
push
or
leave
movsb
jecxz
sbb
data16
or
or
mov
push
mov
pop
fidivl
push
xor
add
nop
push
xor
scas
out
sub
imul
mov
adc
fs
push
xor
push
sub
scas
shrl
xor
bsr
fsubl
ljmp
in
jns
rorl
ljmp
adc
and
roll
test
and
cli
outsl
inc
shrb
in
mov
repz
jp
inc
movzbl
movsl
ffreep
ret
shrl
test
inc
jecxz
aaa
dec
push
setg
sub
in
jp
lock
sti
jle
mov
loopne
push
outsl
mov
adc
psllq
push
dec
mov
and
js
jl
rolb
mulb
and
icebp
jne
nop
fstps
sarb
pop
push
daa
std
test
jno
inc
mov
stos
push
call
add
cmpsl
aam
jo
add
xor
aam
pop
out
push
popf
jp
incb
hlt
push
add
mov
xchg
enter
in
sub
movsb
xlat
cmp
cmc
adc
imul
cli
add
dec
ror
xchg
cld
cmp
addr16
xor
inc
jbe
push
ljmp
dec
sar
mov
push
sbb
lock
ss
inc
push
jl
ja
arpl
pop
mov
xchg
stos
lods
jns
hlt
mov
adc
xor
xchg
ret
push
push
pushf
mov
test
pop
int
test
outsb
negl
cltd
sarb
xchg
push
movsb
xchg
scas
ljmp
xor
loope
out
sbb
fldt
xchg
scas
inc
mov
roll
push
xchg
rcrb
das
ljmp
and
or
jg
sub
or
scas
fstpt
loope
dec
mov
dec
and
mov
pop
dec
test
xchg
pusha
mov
in
inc
shrb
xchg
cmpsl
ficompl
add
mov
sbb
jbe
popa
add
mov
fcmovnu
push
rcr
das
loop
leave
rcrb
popf
je
cmp
fmuls
in
adc
dec
cwtl
or
flds
lods
lea
loope
in
fcomip
mov
pop
sub
fadds
addb
push
ja
out
xchg
cli
or
adc
cwtl
pop
jl
inc
adc
and
push
nop
mov
dec
adcb
add
add
dec
or
incb
call
mov
xchg
jno
jo
repz
push
notb
divl
pop
ret
mov
sub
popa
les
aas
cmp
sti
shlb
stos
dec
adc
popa
xchg
mov
insb
push
adc
cld
pop
imul
jbe,pn
test
lods
push
push
fs
rcr
outsl
xor
cmp
aam
sub
jmp
cmp
fisubrl
loop
cmp
dec
movsl
aas
mov
mov
cld
push
rcrl
push
loope
cmpsl
addr16
cmp
pop
or
jp
ds
add
int3
pop
push
sar
push
sub
sar
adc
fadds
test
sbb
or
pushf
lcall
rcl
mov
push
add
mov
mov
mov
ds
ljmp
mov
test
jns
sub
sbb
ret
je
lret
push
aas
jl
pop
fildl
mov
sbb
aad
mov
addr16
decl
sbb
xchg
sbb
push
mov
inc
sub
pop
inc
push
decb
push
mov
xor
mov
dec
mov
test
pushf
pop
adc
enter
adc
test
gs
pop
adc
in
shll
sbb
push
cmpsb
in
mov
add
xlat
or
pushf
and
inc
pusha
push
lahf
push
lds
outsl
pop
ret
xchg
adc
mov
xor
dec
ret
add
dec
lahf
push
rorl
pop
inc
fsub
mov
int
push
int
or
loope
xchg
paddsw
clc
xchg
jg
push
out
imul
scas
or
xchg
out
xchg
jae
pop
sub
or
mov
pop
stos
mov
rol
cltd
push
and
pop
hlt
addr16
adc
inc
div
push
mov
xor
mov
xchg
int3
inc
loopne
gs
inc
xchg
sbb
push
bnd
sub
mov
hlt
stos
les
cltd
movsl
jecxz
jle
mov
stos
lods
push
fistl
and
ret
je
push
mov
pushf
sub
lret
pop
and
sbb
popf
sti
fidivrl
aas
ret
aaa
int
mov
test
xor
dec
shll
and
sbb
fstps
jmp
ds
pop
decl
icebp
pop
iret
xchg
sbb
jo
fidivl
adc
cmpsb
mov
sahf
fwait
cld
adc
in
push
jb
enter
mov
fisttpll
bound
jb
push
adc
lret
shll
add
aad
leave
cmp
add
into
cltd
lods
dec
sub
notl
xor
fidivl
push
jns
ficoms
inc
push
cmp
xor
lea
jmp
jbe,pn
lods
push
addr16
lcall
dec
inc
mov
fsubr
pop
mov
sbb
fldenv
daa
dec
frstor
pusha
lods
aaa
adc
add
addps
fists
xchg
or
sbbb
inc
or
ds
sbb
daa
jmp
xchg
fldenv
test
mov
int
dec
daa
call
mov
fsubr
mov
or
and
hlt
aad
cwtl
push
and
and
mov
decl
fwait
stos
mov
push
loope
cmp
rolb
xchg
and
cmp
add
xchg
lret
xchg
sbb
dec
push
call
mov
mov
sub
push
popa
loopne
das
xchg
loop
cmp
leave
xor
lock
sub
xor
mov
rcrb
cmpsl
add
inc
fcmove
and
leave
pop
ss
or
and
outsl
bound
arpl
rol
mov
aam
fisubs
inc
and
push
add
inc
adc
dec
xor
mov
jnp
lods
retw
add
sub
mov
and
ss
rcrl
fdivs
repz
and
test
jno
lahf
or
xchg
mov
in
push
sbb
adc
mov
movsb
pop
pop
xor
mov
sub
sub
push
sbb
test
pop
xlat
xchg
adcb
fisubrl
out
insb
test
lret
inc
adc
push
test
adc
mov
jnp
or
repz
data16
mov
pushf
sub
xchg
rorb
or
mov
lock
mov
and
inc
cmp
pusha
iret
mov
inc
inc
outsb
mov
js
aaa
xchg
xchg
addr16
jae
xchg
stc
testb
and
scas
sub
int
or
and
out
inc
test
mov
pop
xor
sub
push
hlt
ret
fidivs
mov
rcll
add
adc
adc
mov
mov
adc
jo
or
lret
das
test
cmpsl
xchg
lcall
adc
fwait
in
adc
and
adc
mov
cmp
imul
lret
push
mov
das
cli
xchg
jecxz
and
jno
sti
sahf
mov
cwtl
inc
jns
ljmp
ret
lods
mov
jp
mov
mov
clc
jo
or
loope
xchg
fldt
dec
mov
sub
popa
mov
cld
test
inc
rcll
dec
pushf
movsl
xchg
gs
stos
fmuls
stc
dec
out
cltd
jno
into
pop
xor
je
ja
pop
loop
lods
ja
addb
push
mov
out
call
mov
cmc
jns
insb
pop
mov
outsb
lahf
ret
mov
push
call
jns
je
test
cltd
nop
push
lahf
mov
mov
insb
insb
cmp
inc
das
aam
or
mov
aas
in
jl
fsubrs
daa
fsubr
inc
sub
push
pop
orl
outsl
hlt
sbb
fnstcw
clc
sahf
fimuls
mov
dec
inc
push
dec
sub
inc
imul
jmp
xchg
cmp
out
xorb
aam
cwtl
pop
or
shll
jb
or
add
shll
pop
jecxz
addr16
ret
mov
js
sub
lret
push
dec
adc
in
inc
cwtl
fs
dec
insl
pop
addr16
cmpl
pop
mov
pop
leave
push
mov
xchg
add
lds
xlat
mov
mov
lcall
push
stc
jmp
and
test
outsb
sub
cli
mov
dec
stos
adc
cmc
out
push
cltd
or
adc
jmp
jo
fsubl
ja
sbbb
enter
pop
jp
mov
or
mov
outsl
enter
pop
or
fwait
push
add
fidivrl
mov
stos
mov
sub
pop
call
ljmp
setb
scas
or
pop
test
leave
enter
scas
jl
fs
or
sub
xchg
xor
push
dec
clc
sbb
mov
shld
mov
xlat
xor
movsl
loop
and
adc
jge
mov
lods
xor
and
arpl
xor
and
pop
out
fcomp
push
mov
scas
mov
adc
jnp
jne
push
gs
sbb
shrb
stos
mov
adc
and
push
andl
shll
ss
shl
mov
inc
xchg
push
adc
arpl
add
xor
mov
out
push
inc
dec
xchg
arpl
sarb
add
push
cli
and
jo
pop
js
mov
jl
addr16
ss
push
push
xchg
add
inc
and
or
test
shll
ret
pushf
dec
idivl
adc
sbb
int3
sbb
lret
mov
in
cltd
lods
scas
push
mov
dec
lret
inc
pop
pop
enter
and
aaa
scas
adcb
lock
fstl
jbe
pushf
cltd
xchg
movlhps
mov
sub
lock
je
inc
mov
and
mov
dec
adc
scas
aas
incb
add
scas
xchg
stc
mov
jo
push
mov
mov
pop
cmp
js
mov
icebp
popa
cltd
popa
addr16
ret
adc
aas
ret
mov
loope
je
dec
popa
cmp
ja
inc
inc
mov
jle
xchg
loopne
les
mov
or
xchg
clc
adc
jne
adc
push
fsubrl
lret
lock
push
push
out
test
dec
jbe
ret
xchg
in
test
addb
call
xor
push
std
in
pop
sub
jg
test
mov
mov
and
push
sbb
dec
mov
lods
dec
and
xlat
fs
sbb
adc
and
sub
inc
push
lcall
ja
jo
sbb
jmp
mov
lods
xor
insl
lods
sbb
xlat
test
mulb
repnz
hlt
scas
xchg
in
sub
subb
je
pop
and
jg
and
xchg
popf
adc
loopne
popf
mov
sbb
rolb
jge
push
insb
xchg
sbb
inc
shll
out
imul
lahf
pop
jg
jge
jle
das
push
bound
mov
cmpsl
fdivs
xchg
push
push
sbbl
inc
mov
mov
in
add
lea
dec
fimull
add
aad
pop
aas
mov
insb
or
das
xor
push
push
cmp
cwtl
sub
jmp
cld
and
rolb
mov
bound
push
insb
dec
xor
lahf
mov
hlt
cmp
add
cmp
loop
orb
sbb
cmp
loop
imul
xchg
cmc
sub
push
mov
or
pop
sub
loop
or
jg
lret
inc
lret
adc
push
icebp
dec
ja
cmp
fdivrs
or
incb
adc
popf
push
xor
mov
gs
inc
push
aas
test
or
rclb
stos
dec
fimull
cmp
add
sub
fistl
pop
pop
cld
mov
frstor
dec
and
mov
or
bound
in
mov
pop
or
lds
scas
push
addr16
jb
xchg
pushf
repz
stos
daa
xor
inc
sbb
jae
xchg
iret
fdivs
jne
xor
iret
insl
cwtl
in
test
xchg
mov
push
push
insl
lret
fnsave
fsubs
ljmp
dec
jne
sub
aam
xchg
lea
lea
adc
mov
jae
fcomps
dec
fisttpl
cmp
dec
push
in
bnd
mov
ret
sbb
test
cmp
not
std
ds
sub
pop
push
and
stos
in
cmp
lcall
sbb
pop
add
push
jno
test
clc
push
push
xor
mov
pop
adc
dec
or
adc
sbb
lods
sbb
mov
int
sub
push
lds
cltd
mov
adc
je
fimuls
nop
jne
daa
iret
ret
dec
scas
jge
cli
mov
je
pop
les
xchg
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
jg
xchg
stc
js
cwtl
test
dec
jg
out
cmpl
sub
dec
movsb
pop
repz
pusha
xchg
fidivrl
inc
loope
lds
jno
push
lods
das
fisttpll
mov
inc
adc
test
decb
cli
add
dec
push
cwtl
addr16
cs
subb
sahf
and
pop
insb
mov
test
mov
popf
movsb
imul
jnp
mov
xchg
dec
sbb
lods
lea
int
mov
mov
les
inc
add
xor
sbb
jne
mov
das
js
cmp
mov
mov
dec
add
inc
fnstenv
gs
pop
adc
sub
add
and
inc
aaa
mov
sbb
ljmp
je
mov
jo
loope
aaa
cmp
jb
shlb
jl
cmpsb
mov
daa
dec
data16
add
and
jae
sub
push
dec
push
sbb
jae
je
mov
mov
les
loope
sahf
je
cli
iret
adc
in
rolb
add
push
fisttpll
or
mov
sbb
cmp
imull
dec
movsl
dec
sub
cld
jp
int
in
pop
inc
push
or
clc
in
int
fcompl
shr
cli
call
sub
das
mul
pop
and
and
pop
mov
xlat
push
jae
push
enter
and
js
shrb
jnp
pop
mov
leave
mov
fdivs
fadds
xchg
in
sahf
cmp
loopne
sub
sti
xchg
lods
jbe
fiadds
mov
and
mov
push
xchg
sub
push
adc
push
cmp
inc
cmpsl
add
mov
lock
mov
pop
test
xor
lcall
inc
std
test
pop
pop
fwait
xchg
and
jno
icebp
nop
adc
cli
push
call
test
rcrl
dec
ljmp
ja
icebp
arpl
adc
aad
dec
or
xor
addr16
push
jne
mov
pop
sbb
negl
sbbl
lods
fnstenv
mov
outsb
cmp
aad
cwtl
loop
decl
inc
aas
or
shll
jp
mov
dec
arpl
push
or
loop
enter
push
jb
dec
xchg
out
dec
int
pop
pop
andl
pop
js
cmc
inc
movsl
fisubl
or
pop
test
mov
add
push
push
lods
lret
push
addr16
insb
call
mov
leave
jecxz
andl
lods
pop
or
mov
xchg
cmc
fwait
mov
xor
rol
fcoml
mov
push
loop
movups
outsl
sbb
enter
test
sbb
pop
xchg
or
add
mov
aam
in
out
jne
ja
jns
inc
xlat
push
mov
in
lahf
sbb
scas
sbb
xchg
xor
sub
pop
addb
pushf
in
jge
lods
mov
sbb
dec
sahf
std
in
and
movsl
jmp
inc
push
in
push
ss
jne
or
cld
cmp
add
inc
or
inc
inc
pop
ss
outsl
movsl
push
out
into
mov
fwait
int3
fistpl
js
data16
in
or
fidivl
aad
leave
out
mov
sar
sbb
std
inc
sahf
push
add
mov
lret
std
gs
movsl
arpl
data16
inc
push
out
push
dec
push
xchg
clc
bound
add
daa
dec
cmp
jno
mov
loop
stc
or
loop
gs
jmp
push
cld
adc
sub
lret
mov
icebp
aam
sahf
aaa
div
stos
xchg
mov
inc
adc
in
pop
loop
adc
rol
negb
push
xor
mov
fstpt
lea
test
scas
cltd
out
mov
daa
cltd
nop
les
inc
popa
push
mov
fistl
into
pop
jg
mov
dec
in
xor
cmp
fbstp
pop
jbe
loop
lcall
lods
div
insb
or
add
jnp
movsb
insb
inc
icebp
test
xor
lahf
clc
lods
adc
stc
jp
jno
int3
movsl
xor
inc
cmc
cmp
aaa
jp
gs
hlt
cmp
xchg
xorl
xrelease
test
movsb
movsl
loope
rorl
ret
jmp
sbb
jbe
stos
push
mov
shl
dec
mov
into
and
xor
cld
into
push
test
es
int
outsl
mov
lahf
adc
cwtl
les
or
push
jo
mov
dec
subl
lcall
int3
jns
adc
xchg
mov
test
lcall
pop
sbb
jbe
pushf
inc
scas
add
test
jb
mov
and
inc
scas
push
cmpsb
rorb
jp
sbb
sahf
xor
outsb
cmpsb
mov
aam
frstor
popf
xor
insb
or
jns
jmp
pop
dec
loop
xchg
inc
jmp
jp
jmp
test
jbe
pop
inc
pushf
push
jmp
jae
lds
test
mov
mov
orl
lcall
js
xchg
aad
stc
das
shl
dec
test
testb
adc
xorl
xor
imul
mov
mov
or
xor
int
stos
in
jmp
repz
push
addl
push
lods
ficomps
pop
mov
clc
mov
mov
mov
lret
jg
mov
mov
icebp
mov
cmovo
xchg
cmp
xor
sub
faddp
clc
add
rcrb
and
inc
jbe
xor
mov
cmp
mov
rolb
out
rcrl
incl
jbe
pop
mov
outsl
lock
sbbl
test
xor
sub
icebp
loopne
push
jmp
jb
aaa
push
enter
dec
loope
rcl
lahf
push
mov
scas
push
xchg
outsl
dec
and
add
dec
aad
popa
movsb
inc
inc
test
mov
lea
adc
push
insl
imul
popa
fnstsw
enter
jecxz
aam
inc
js
pop
call
mov
test
sahf
cmpsb
jb
test
aam
dec
leave
cmp
stc
ror
addr16
add
out
imul
pop
jmp
sbb
and
ret
fs
mov
xor
repnz
mov
inc
and
xchg
ds
cmp
out
or
mov
movsl
enter
leave
push
es
int3
jge
jno
pop
prefetch
js
cwtl
cmp
iret
add
jno
out
and
data16
mov
std
inc
es
xor
jae
add
jle
icebp
jb
xchg
cmp
into
shld
cs
mov
or
fisttpl
push
or
sbb
sub
decb
ljmp
cmp
xchg
out
fs
fisttpl
sbb
inc
or
jecxz
ret
or
mov
adc
mov
enter
test
xchg
popf
mov
jecxz
imul
outsb
cltd
ret
xchg
negb
adc
lock
dec
xchg
popa
mov
movd
dec
loop
scas
mov
outsb
ljmp
xchg
orb
cmc
add
test
push
daa
cmp
mov
xchg
xchg
dec
push
mov
pop
lret
or
cmp
or
inc
or
mov
dec
push
pop
fisubs
loope
loopne
mov
or
test
iret
daa
out
sbb
dec
iret
cmc
andl
ds
xor
incl
mov
stos
aad
push
pop
push
stos
inc
scas
jns
push
cmc
pop
test
cmp
mov
aad
jg
aam
sbb
adc
in
adc
jg
rorl
mov
cs
mov
in
fisttps
lods
fistps
iret
mov
aad
repnz
cmpb
mov
lds
aam
cmp
testl
movsb
inc
in
push
stc
jae
sbb
dec
aas
jae
add
aad
addr16
or
imul
das
sbb
sbb
rcrb
xchg
sbb
out
cld
andb
leave
dec
xor
fs
call
mov
je
pop
inc
sbb
push
test
fldl
sbb
cmp
sub
xor
into
push
popw
shll
xchg
push
ljmp
fisubrs
and
push
lock
pcmpeqd
nop
inc
cltd
adc
pop
mov
lahf
hlt
xchg
mov
sub
dec
stos
iret
jnp
test
cmpsb
xchg
insb
ret
sbb
repz
dec
stos
add
dec
dec
add
popf
cmp
arpl
push
sbb
out
les
push
xchg
jnp
lret
sub
popa
add
movsl
out
dec
andl
sbb
mov
pop
xchg
repz
adc
mov
pop
call
enter
pop
adc
xor
mov
jbe
arpl
cld
ret
dec
ret
mov
pop
sbb
je
testl
test
jp
add
gs
in
test
incb
ss
in
push
mov
scas
in
mov
aaa
lea
and
push
cmp
icebp
les
jmp
jecxz
bound
xor
mov
fwait
pop
repnz
popa
push
je
shl
xor
popa
fiadds
adc
pop
mov
hlt
cmc
pop
and
scas
xchg
into
mov
jbe
mov
jb
pop
pop
out
stc
and
into
in
jo
cmp
add
ret
inc
mov
or
hlt
xchg
inc
push
pusha
jae
or
repnz
push
and
insb
pop
gs
adc
adc
add
mov
and
push
adc
xchg
or
rcll
cltd
daa
icebp
lock
mov
fcmovnbe
lods
add
sarb
cmp
lahf
pop
mov
popf
aam
dec
sub
or
add
cs
add
sbb
pop
mov
pop
cmp
dec
ret
rcrb
pand
cmp
std
xor
add
bnd
movl
dec
dec
int3
pop
test
fbstp
cmp
leave
out
lret
push
rcl
inc
cmp
inc
adc
lods
push
push
sbbl
jb
dec
jnp
in
fistps
xchg
in
data16
fldenv
daa
pminsw
lods
xor
cmp
sbb
aas
mov
mov
cmp
xor
adc
xchg
icebp
adc
cld
add
add
inc
test
inc
insl
mov
mov
ret
fadds
push
addl
stos
cmp
inc
xchg
mov
scas
fwait
test
add
inc
push
mov
ds
or
int
sti
mov
fsubs
addr16
mov
mov
jb
inc
or
sub
mov
mov
push
and
or
jae
sbb
sbb
xor
and
addr16
cli
fistl
mov
mov
int3
lret
in
test
add
lret
mov
xor
sbb
mov
stc
xchg
lock
insl
stc
push
sub
jo
fstps
lret
mov
es
xchg
push
lock
cmp
outsl
push
pop
stos
jg
cld
scas
add
outsl
mov
lahf
push
test
and
js
jo
jo
rorb
dec
jle
stos
cli
push
gs
lock
je
stos
je
jae
addb
sbb
cwtl
mov
jp
cmp
mov
aad
cmp
xchg
push
adc
xchg
cmp
jne
lea
mov
push
insl
fucomi
les
lods
divl
xor
push
inc
popf
pop
cmp
sub
mov
lea
add
packssdw
push
or
xor
test
lret
cmpl
add
ret
sub
add
push
shll
enter
inc
push
mov
jno
inc
or
lea
mov
jo
push
pop
inc
inc
popf
cmc
mov
std
mov
lret
out
fiadds
popa
inc
sub
jbe
cmp
mov
imul
mov
dec
mov
xchg
push
sarb
mov
mov
popa
cmp
xchg
popf
add
js
inc
stos
shll
cmpsb
dec
aad
jle
or
popf
push
adc
xorb
in
xor
mov
pop
lret
mov
mov
cmp
enter
pop
jbe
shll
pop
mov
hlt
jno
and
mov
test
in
inc
lret
cmpsb
data16
jo
loopne
push
dec
xlat
add
insl
cmc
sbb
and
scas
sub
je
aaa
add
fwait
add
loopne
jbe
test
fs
addr16
dec
adc
shr
mov
flds
in
cld
call
dec
sub
repz
insl
popa
inc
in
lds
jmp
aaa
imul
fidivl
popa
jle
ss
mov
jb
xchg
shl
in
jo
mov
aam
repnz
insl
ret
ljmp
clc
sub
cmp
imul
pop
inc
sbb
leave
inc
xchg
xor
sahf
xchg
movsl
jg
inc
xchg
pop
ds
pushf
cmp
jb
in
xor
mov
mov
sbb
dec
mov
lahf
jns
jnp
cmp
repz
sub
adc
jmp
mov
inc
aad
jp
pop
fs
fnstcw
data16
mov
mov
jg
movsl
adc
jg
mull
pop
jge
inc
add
adcb
jg
fimull
sbb
gs
icebp
dec
or
jecxz
pop
sbbl
dec
dec
mov
mov
mov
push
lea
sbb
ficompl
jb
cmp
fadds
and
pop
mov
xchg
test
pop
fisttps
ret
iret
lods
and
inc
lahf
arpl
mov
mov
in
pop
xchg
int
and
dec
movsb
hlt
cmp
call
ds
outsl
enter
cmpsl
mov
adc
mov
mov
movsb
mov
jb
add
push
ja
shrb
insl
fmull
jecxz
ret
into
add
add
mov
notl
in
out
xlat
mov
movsl
jmp
clc
cmpsl
xor
stos
lcall
pop
fcmovb
cmpsb
test
sub
sub
sti
loope
lretw
stc
std
scas
jp
iret
sub
js
jno
mov
dec
lahf
inc
sub
scas
lret
cmp
mov
cwtl
ljmp
sbb
and
mov
das
sub
das
rolb
movsb
xlat
loop
dec
gs
aam
push
jmp
imul
mov
xchg
fwait
js
into
sbb
mov
push
jge
and
dec
rorl
sub
pop
ret
movsl
mov
cwtl
cmp
xor
sahf
xor
popa
pop
mov
dec
xorb
shlb
or
movsb
push
push
data16
cld
les
inc
jecxz
dec
cmpsb
pop
mov
fists
fimuls
rcrb
jns
clc
fwait
cli
xchg
sti
loop
mov
fisttps
das
push
orb
pop
dec
sti
push
test
cli
xchg
std
mov
jb
sub
pop
inc
roll
or
imul
push
and
dec
js
xlat
dec
cltd
and
sbb
xor
add
mov
js
icebp
mov
repnz
aaa
jnp
sarb
sbb
aas
or
dec
hlt
jae
into
sub
dec
jecxz
scas
repz
adc
adcb
aam
mov
daa
clc
fiaddl
divb
jge
mov
enter
ss
shll
fsts
cs
xchg
iret
mov
js
aaa
push
fistpll
inc
jl
inc
cs
cmp
jmp
out
and
inc
jns
push
mov
das
loope
mov
adc
push
cmc
xor
test
sbb
insl
xchg
mov
je
addr16
mov
jmp
sbb
xor
jbe
sub
test
dec
addr16
mov
adc
xlat
popa
ljmp
cmp
inc
insb
test
push
in
loope
popl
inc
sub
mov
cli
pop
loopne
ret
xor
push
std
stc
stos
mov
ljmp
add
pushf
xor
and
inc
xor
xor
cld
sbb
cmp
sbbb
lods
icebp
pop
cmpsl
cmp
mov
mov
fwait
pop
cmp
dec
jmp
mov
call
mov
inc
dec
xchg
xchg
dec
std
ljmp
jecxz
pop
pop
cltd
lock
ret
dec
jg
mov
cwtl
loope
mov
mov
lods
jp
out
int3
testb
dec
push
daa
or
and
xchg
pushf
push
ss
call
mov
test
sbbb
inc
sub
mov
pop
bound
mov
dec
and
cmpsl
fs
out
rcr
int
out
aaa
jne
mov
jecxz
std
cmp
adc
out
stos
dec
adc
out
push
dec
dec
add
loope
pop
pushw
enter
repnz
out
loop
cmpsb
pop
insl
lret
repnz
pop
aaa
filds
push
cmp
pop
iret
xor
js
aaa
inc
inc
xchg
out
testb
not
mov
xchg
shrl
mov
sub
or
sbb
adc
fldt
rcl
gs
dec
pop
and
clc
push
lock
je
sbb
sbb
imul
pop
pop
add
adc
xchg
xorb
add
les
pop
jge
mov
std
or
jne
jmp
mov
int3
mov
sbb
jbe
es
dec
mov
lahf
cmp
jle
mov
sarl
xor
popf
rcr
add
mov
sar
daa
lcall
push
scas
pop
jb
cmpsl
cmp
cmp
mov
pop
pusha
hlt
adc
inc
push
fstpt
scas
mov
rorb
sub
rorb
inc
test
icebp
sub
mov
loopne
mov
lea
mov
push
cmpsb
adc
repz
sbb
xchg
sbb
dec
pop
sbb
int3
xor
dec
fildl
shrl
mov
test
outsl
bound
ljmp
test
xchg
push
les
cld
test
imul
clc
mov
dec
enter
push
inc
int3
jge
sub
and
push
dec
mov
in
jns
pusha
xlat
cli
jmp
mov
test
dec
dec
sbb
sbb
mov
out
mov
cmc
dec
push
js
sbb
jno
popa
inc
dec
xchg
test
shrb
pop
sub
xchg
mov
stc
cs
push
add
push
pop
loopne
mov
mov
or
sub
lcall
repz
xchg
aas
lea
pop
cmc
mov
inc
cmpsl
fwait
add
lods
outsb
aad
movhps
add
inc
jp
rcrb
or
sub
jmp
adc
xor
add
xchg
ret
in
add
jl
sbb
mov
jae
sti
rorl
call
xchg
mov
sbbl
push
stc
cmp
push
adc
mulb
test
cmp
clc
mov
pop
adc
cmp
xor
pop
inc
popa
mov
stos
inc
jge
roll
xlat
dec
adc
aaa
mov
leave
adc
mov
dec
adc
nop
jae
mov
xchg
mov
adc
mov
mov
scas
push
cmpsl
out
inc
lret
lret
cli
lea
lea
dec
mov
push
out
test
addl
fstl
dec
outsl
sbb
insb
mov
mov
mov
push
sub
sub
add
mov
pushf
cmp
fcompl
data16
dec
fcmovu
pop
jae
push
or
lds
mov
pop
pop
cld
jecxz
mov
push
and
sub
add
xor
pop
inc
mov
mov
cld
jnp
gs
push
fcmovu
mov
ljmp
sub
sbb
and
and
add
loope
imul
mov
bound
jnp
sub
or
xor
bound
pushf
jne
loopne
fmull
sub
shll
mov
lock
daa
ret
jno
mov
test
aam
rolb
mov
rcl
mov
std
insb
xor
sbb
clc
or
fcoml
pop
stos
nop
into
frstor
aam
test
xchg
std
punpckhdq
idiv
ljmp
seto
out
mov
call
pushf
dec
sti
pop
test
mov
add
or
lea
sarl
mov
pop
sahf
aas
mov
stos
push
movb
daa
aam
mov
ds
sub
dec
in
repnz
movsl
push
pop
sti
or
lea
push
or
adc
addr16
mov
subb
fstps
popf
inc
jmp
loop
mov
repz
xlat
add
sbb
popf
add
or
inc
fldcw
cmp
inc
add
xchg
push
outsb
dec
xor
push
xor
cld
mov
es
and
adc
sbb
jnp
sub
push
and
out
add
dec
fidivrs
aad
lahf
shrl
shrb
popl
cmp
fdivrp
sbb
adc
dec
aam
in
push
xchg
idivl
jnp
or
sub
push
xor
sahf
outsb
repz
into
cmpsb
ffreep
stc
adc
cmp
jnp
adc
inc
jp
cmp
adc
imulb
add
in
and
es
inc
filds
iret
movb
dec
in
mov
cmpsb
inc
sub
fisubrs
adc
in
out
pushf
test
fs
aas
outsl
pop
gs
call
fs
ljmp
pop
xlat
inc
lcall
push
and
cmpsb
mov
jae
and
out
ss
pop
push
hlt
cmpsb
lea
or
mov
into
rcll
dec
dec
inc
jl
xchg
push
rcrl
xchg
clc
push
sahf
cmc
pusha
dec
cmp
xchg
lahf
adc
fwait
addr16
repnz
clc
std
and
mov
and
mov
addr16
das
lahf
out
fdivrs
cmpb
js
aaa
and
sti
pusha
sbb
mov
mov
xor
das
adc
or
sarb
fmul
pop
xchg
call
out
dec
dec
push
cmp
add
mov
scas
xchg
jae
inc
pop
push
lcall
cmpsl
clc
inc
mov
arpl
mov
pop
stos
loopne
sub
aam
jge
jne
xchg
add
cli
or
int3
adc
fcom
cwtl
out
ficoml
repnz
dec
insl
xor
sti
cmc
testl
jo
and
cmpsl
mov
sbb
jmp
pushl
jg
sub
fisttpll
jns,pn
shlb
icebp
and
pop
in
mov
shll
mov
int3
and
negb
mov
divb
inc
flds
xchg
arpl
pop
mov
cs
xchg
pop
ljmp
pop
adc
ror
lods
xlat
jbe
or
aas
xchg
in
test
xor
lret
ds
dec
push
push
mov
std
ds
test
jmp
aam
stos
and
adc
pop
aaa
push
in
gs
push
cmp
lds
dec
pusha
xor
xchg
cld
cmp
cld
icebp
cld
mov
jno
push
mov
cmc
scas
mov
out
inc
or
pop
rcll
flds
js
clc
dec
cltd
dec
sbb
or
mov
aad
das
sub
push
add
aam
in
push
pop
push
adc
cmp
idivb
out
xchg
mov
movsw
sub
xchg
push
ret
rcrb
sahf
jge
push
dec
cwtl
adc
daa
fsubrl
jmp
out
mov
insl
flds
mov
clc
xor
shrb
jbe
int
or
ret
pushf
sbb
inc
or
dec
lock
pushf
shrb
jl
adc
add
xor
pop
pusha
cmp
pop
add
and
or
insb
inc
adc
jl
xor
xchg
shl
rcrb
pop
adc
pop
insl
cmp
andl
fists
pop
cltd
pushf
lahf
hlt
repnz
xchg
or
insl
stos
dec
out
pop
cld
inc
mov
xchg
bound
sub
push
inc
sbb
outsb
pop
inc
mov
push
out
test
adc
and
push
pop
sub
fxch
mov
aad
test
xlat
sub
fucomi
sub
mov
dec
int3
sahf
fcomps
mov
add
add
mov
add
mov
adc
adc
cs
or
xchg
mov
test
push
into
ss
jge
and
fcmovne
jmp
and
mov
cmp
cmpsl
and
mov
push
dec
sub
fidivrs
or
pusha
cmp
push
push
shrl
pushf
mov
dec
into
push
sarl
push
nop
dec
and
and
bnd
scas
sbb
jbe
loop,pn
xchg
xor
stos
pop
add
cmp
and
fmuls
sub
rcrb
cmc
scas
lock
loope
and
cmp
sbb
add
loopne
and
rcrb
mov
push
xchg
test
loopne
mov
and
mov
lea
fdivr
dec
sub
ljmp
cs
orl
ret
push
mov
in
sbb
es
in
sti
xlat
insb
cmp
icebp
cmp
clc
in
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
cmp
