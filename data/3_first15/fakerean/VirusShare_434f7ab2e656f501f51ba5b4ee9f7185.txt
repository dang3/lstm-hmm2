push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
jno
inc
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
sbb
add
insb
and
sub
mov
xor
mov
pop
hlt
inc
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
xor
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
add
push
xor
testb
or
add
add
rorb
int
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
pop
inc
add
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
push
hlt
inc
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
add
js
push
lea
mov
test
je
cmp
or
xor
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
aas
pop
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
lds
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
mov
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
punpckhdq
out
inc
add
push
add
add
add
push
push
js
mov
popf
add
shl
lret
add
jno
add
sti
add
xchg
lods
cltd
add
out
xchg
fidivs
hlt
jle
mov
push
add
clc
add
ljmp
mov
add
push
push
push
push
lea
push
push
push
lea
push
push
call
add
in
out
jmp
scas
add
mov
add
add
add
in
xorl
xchg
add
add
mov
pop
roll
xchg
jns
add
jnp
lods
add
add
mov
add
into
add
mov
lea
pop
popl
push
push
push
push
push
push
call
add
lret
add
flds
add
mov
add
add
rcl
cli
add
enter
jecxz
add
add
mov
add
outsl
leave
pop
add
fucomi
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
outsl
add
cld
flds
cmpsb
push
fistps
scas
add
bound
mov
add
add
pop
add
xchg
ljmp
into
out
lds
insb
repnz
push
imul
add
movl
arpl
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
sar
lods
push
pop
lahf
add
add
cmpsl
pusha
popa
add
add
mov
pop
loop
into
test
add
pop
mov
add
testb
test
add
push
add
add
iret
add
pop
call
push
push
push
lea
push
push
push
call
pusha
add
ficomps
add
fadds
mov
pop
push
lcall
jns
ljmp
add
push
pop
add
aad
aam
add
icebp
add
faddl
add
add
sti
add
out
mov
add
mov
jl
data16
add
pop
push
add
add
push
mov
lea
pop
call
push
push
push
push
push
call
mov
push
movsl
add
imul
push
jmp
add
out
test
fstpt
add
mov
pop
add
xchg
arpl
add
add
push
jmp
push
add
lods
xchg
lea
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
pop
fistpll
add
not
add
add
loopne
add
aam
cli
jo
aad
fbstp
add
hlt
movl
add
fldt
add
pop
add
jbe
add
add
lds
add
outsl
add
lods
aam
add
add
add
push
add
pushf
fwait
add
mov
lea
pop
jmp
push
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
in
add
mov
pop
add
lds
xchg
repnz
add
leave
pop
pop
add
cmpw
rcrb
repnz
add
mov
add
push
mov
push
add
lods
in
fwait
add
test
pusha
jle
iret
mov
add
add
mov
clc
stc
lods
add
add
mov
lea
pop
ret
push
push
push
push
lea
push
push
lea
push
push
call
data16
add
add
add
pop
pop
nop
add
jmp
loop
in
add
loopne
add
shll
ja
xchg
add
jmp
xorb
icebp
fs
mov
lea
pop
mov
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jle
lods
movsb
add
jge
cld
add
add
add
leave
add
add
popl
loope
add
pusha
push
into
add
rolb
add
add
mov
pop
add
add
fmull
pop
in
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
hlt
cltd
lods
popl
add
add
test
loope
add
mov
testb
add
cmpsb
add
int3
add
pop
xchg
flds
push
add
fimuls
add
add
loope
out
cwtl
fadd
add
add
addr16
lea
pop
add
add
push
push
push
push
push
push
lea
push
push
push
call
pop
mov
add
add
fiadds
mov
mov
jne
leave
add
add
lods
imul
call
stc
fwait
add
add
mov
loopne
add
ret
int
add
int3
add
mov
cmpl
mov
push
push
lea
push
call
add
aad
sahf
data16
add
jo
add
add
xchg
pusha
add
mov
add
add
outsl
test
add
fs
xchg
add
stc
add
add
stos
add
pop
add
add
js
xchg
add
xchg
pop
add
iret
cmc
add
xchg
add
mov
ja
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
add
mov
add
add
xchg
xchg
aad
test
stos
mov
push
xchg
filds
jge
scas
add
add
add
jbe
add
cld
lret
fs
pop
add
test
add
fnstsw
add
fildll
ja
add
fmull
les
out
fwait
lods
push
add
push
sub
add
ror
inc
sub
dec
add
pop
pop
push
lea
push
call
ljmp
add
xchg
add
xlat
add
aam
mov
out
enter
test
add
xchg
add
jno
in
cltd
data16
add
pop
addb
pop
in
jp
cld
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
call
add
mov
add
stos
leave
out
xlat
add
add
add
js
fwait
push
int
add
jl
movb
addr16
mov
ret
in
push
add
sar
add
jmp
les
mov
lea
push
lea
push
push
push
push
push
push
call
add
add
movsb
mov
add
mov
add
xchg
insb
cmc
jge
add
addb
rolb
aam
aam
ret
mov
add
add
add
add
add
add
iret
roll
add
ja
add
add
lret
xchg
add
add
add
mov
add
add
cld
lea
pop
mov
push
push
push
call
mov
ljmp
add
add
add
jnp
add
lock
push
movl
add
xchg
mov
ja
lods
jecxz
add
lods
add
jecxz
add
add
shll
mov
pop
add
pop
movl
lea
push
push
push
call
add
roll
add
push
add
jo
add
out
add
pop
lods
add
adcb
fistps
mov
out
lea
add
rcr
fabs
add
clc
mov
mov
lea
pop
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
bound
jmp
add
ret
call
mov
test
jmp
mov
add
cltd
add
int
add
jb
fadds
xchg
add
popa
and
pushl
push
push
push
call
mov
add
out
pop
add
mov
movsl
mov
add
mov
lods
add
jp
jne
add
add
add
test
add
shl
mov
jno
aam
bound
pushl
push
push
lea
push
push
push
push
push
call
add
add
add
add
fisubrl
arpl
pop
out
js
add
add
push
jle
mov
out
add
add
add
add
test
roll
add
add
lret
lea
addr16
mov
xlat
xchg
popf
cmpsb
push
scas
pop
mov
add
add
add
sbb
call
push
push
push
lea
push
call
stos
add
add
add
sarl
add
add
xchg
add
mov
add
data16
pop
jb
add
add
ja
mull
insb
mov
add
icebp
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
push
push
out
mov
add
mov
mov
add
lock
add
popf
add
push
ljmp
xlat
loope
jno
add
add
roll
add
leave
loopne
add
jmp
add
add
fdiv
add
pop
popf
mov
add
push
popa
add
add
rorl
xchg
int
lea
arpl
pushl
call
push
push
add
push
or
not
add
shr
dec
ror
add
sub
rol
xor
inc
pop
pop
push
lea
push
push
lea
push
push
lea
push
call
mov
leave
pop
add
jle
je
push
je
popf
add
loope
pop
bnd
pop
jnp
add
pop
jl
jmp
add
add
add
jnp
fbstp
jae
mov
outsl
add
mov
mov
jae
xchg
jno
popf
jae
fldl
add
add
add
fadds
pop
loopne
add
mov
add
add
adcl
sbb
jne
push
push
push
push
push
push
call
add
add
push
xchg
add
lcall
add
lahf
rol
add
add
mov
cwtl
mov
add
add
xchg
out
mov
add
add
lock
jge
add
add
add
add
fwait
add
add
add
add
add
mov
lea
pop
call
push
push
push
lea
push
push
push
lea
push
call
filds
jmp
cmpsb
int
addb
les
sbb
ret
ljmp
filds
out
in
lcall
imul
lods
jmp
pop
add
mov
mov
int3
leave
add
pushf
andl
int3
add
fwait
add
add
pop
cmpsl
mov
rolb
add
pop
mov
mov
clc
mov
lea
pop
push
push
push
shr
dec
dec
not
push
push
pop
add
add
rol
inc
sub
lea
lea
ror
pop
lea
pop
push
push
push
call
cwtl
add
add
xchg
add
ficoml
push
filds
add
shl
out
stos
add
nop
add
call
call
jo
add
add
lret
fmull
push
lea
push
push
push
push
call
jo
add
push
mov
xchg
lcall
add
hlt
xlat
add
add
add
mov
stos
addr16
add
push
add
data16
loopne
popf
add
imul
mov
mov
lea
pop
push
call
push
push
push
push
push
push
push
push
call
add
add
mov
add
add
arpl
outsl
add
add
lea
add
jle
add
add
imul
add
add
mov
add
add
lcall
jecxz
cwtl
add
in
mov
add
add
add
pop
mov
push
push
push
call
scas
mov
jne
aam
push
add
add
lcall
mov
add
andb
add
fld
add
add
add
ret
mov
rolb
add
jp
mov
in
add
add
add
loopne
movsl
push
pop
xorb
in
mov
filds
mov
lea
pop
push
push
push
push
lea
push
push
call
fildl
movsl
add
add
mov
add
fs
scas
ljmp
scas
add
push
pop
roll
sahf
mov
clc
pop
scas
popa
sahf
ret
add
add
add
pop
mov
push
push
push
push
push
lea
push
call
leave
add
jl
add
add
fidivs
add
add
sti
scas
ffreep
jns
fwait
jo
aam
add
add
jl
out
sahf
enter
jp
add
push
add
add
andb
add
mov
lea
pop
add
add
push
push
push
push
push
push
lea
push
push
push
call
mov
js
add
add
je
lret
pop
scas
add
mov
add
shll
add
bound
outsl
add
add
add
cld
mov
fisttpll
testb
js
ret
lock
lds
rolb
imul
out
add
mov
lea
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
lods
add
xchg
add
mov
add
movsl
mov
movl
add
add
cli
pop
mov
mov
pop
xchg
jo
iret
scas
add
xchg
xchg
cmpsl
cmc
popa
xchg
xchg
in
add
add
add
add
mov
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
jo
pushf
add
adcl
aam
test
add
sahf
shrb
add
mov
add
js
mov
aam
mov
fistl
fwait
test
xlat
loopne
cld
lea
pop
add
push
push
lea
push
push
call
fs
add
add
mov
jno
add
out
rcrl
bound
fldl
add
mov
addl
icebp
xchg
mov
add
testl
mov
mov
out
xchg
pop
mov
add
lea
pop
push
mov
push
push
push
push
push
push
push
push
call
add
xlat
hlt
mov
mov
add
add
lahf
add
iret
cli
mov
add
ficompl
popa
add
add
mov
xchg
add
add
loopne
pop
iret
add
pop
nop
mov
addr16
leave
addb
in
mov
pop
add
ljmp
lea
pop
xor
push
push
lea
push
push
push
call
push
scas
in
add
data16
add
imul
test
stc
push
add
add
mov
add
lods
add
add
jae
add
add
add
add
stos
mov
lahf
add
adc
add
push
push
lea
push
push
push
lea
push
push
call
add
out
in
add
add
addb
lahf
add
xchg
fwait
xchg
lcall
add
xchg
out
les
add
cwtl
jmp
ret
pop
jp
cltd
loope
andb
add
roll
add
imul
add
add
mov
aam
jae
add
int
add
arpl
add
add
pop
add
pop
push
push
lea
push
call
push
add
jo
add
add
loope
xchg
lds
push
add
cmc
jp
add
jne
out
mov
add
call
add
lock
out
ja
add
pop
add
add
pusha
in
bound
popl
add
push
out
insb
add
add
add
ja
addl
add
add
lea
pop
mov
xor
push
push
call
loop
fistpll
iret
add
ret
add
add
ror
jp
add
repnz
lods
add
pusha
pop
jp
mov
fwait
add
add
int3
pop
cltd
push
mov
add
add
roll
jl
cld
sti
ror
pop
mov
push
fiadds
xchg
push
xchg
scas
test
pop
push
push
push
push
push
push
push
call
lahf
add
add
add
std
pop
add
fiaddl
add
xchg
add
stos
xchg
repnz
add
add
mov
add
rolb
mov
add
add
add
cwtl
mov
andl
mov
cmpsb
cli
add
mov
scas
push
add
fildl
fs
add
add
add
pop
mov
xor
push
lea
push
push
push
call
xchg
cmc
sti
xchg
cmpsb
test
stos
mov
std
lret
popa
add
imul
icebp
push
add
imul
add
add
out
add
divb
mov
xchg
add
aam
test
mov
add
pop
sub
pop
push
push
push
lea
push
push
push
call
roll
add
mov
add
add
lcall
mov
out
cltd
pusha
scas
xchg
add
nop
xchg
mov
add
mov
add
add
add
je
faddl
add
add
jno
les
cwtl
stos
jno
int3
lea
pop
rep
pop
push
push
push
push
lea
push
call
cwtl
add
add
add
add
xchg
add
add
xchg
xlat
xchg
stos
add
add
push
mov
mov
add
add
add
add
test
rolb
in
add
int3
mov
lea
pop
mov
push
push
push
call
add
fidivs
add
nop
test
add
cmpl
int3
add
add
pop
arpl
fiaddl
cli
lods
out
fs
imul
scas
cld
mov
lret
je
call
fisttps
add
push
jns
cld
lea
pop
add
add
push
push
push
push
push
push
lea
push
push
call
add
in
add
lea
popl
pop
add
fiaddl
push
add
mov
add
fistps
sahf
pop
mov
mov
add
js
jae
scas
pop
add
jmp
fs
in
hlt
pop
les
jmp
les
and
ret
sti
dec
add
push
push
lea
push
push
push
call
add
jb
push
lret
call
mov
mull
fs
add
add
hlt
add
fimuls
mov
mov
jmp
mov
add
mov
mov
scas
add
add
roll
mov
add
add
add
add
in
cmc
mov
lea
pop
mov
xor
push
add
pop
mov
xor
push
push
lea
push
push
lea
push
push
call
jbe
xchg
add
add
add
icebp
out
int
cmpsb
add
lahf
add
stos
cld
scas
in
add
arpl
add
hlt
jnp
mov
lret
scas
add
cli
add
mov
xchg
test
add
cld
add
ficompl
cltd
jl
add
not
mov
rorb
jae
leave
cmpsw
mov
int
int3
lea
pop
mov
push
push
push
push
push
push
push
call
push
jae
add
add
add
add
lea
stos
jae
add
pop
xlat
mov
ror
pushf
add
jne
test
shll
stos
add
add
addl
call
mov
addb
movsl
pop
jecxz
flds
out
push
add
sbb
or
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
jbe
add
mov
into
add
add
rclb
add
lods
push
je
mov
add
stos
jno
test
add
cwtl
add
ja
push
popf
add
shl
test
ljmp
add
fninit
jne
add
xchg
add
mov
lea
pop
add
push
shl
lea
pop
add
add
push
push
push
push
push
push
call
jns
sarl
data16
movsl
sti
add
xchg
add
adcb
add
out
int
add
jo
add
outsl
les
fdivl
int3
mov
lea
pop
mov
push
push
dec
push
or
inc
add
xor
shr
sub
xor
inc
pop
shl
sub
pop
push
lea
push
call
xchg
int
in
add
roll
add
add
in
push
lret
jb
add
jo
xchg
push
add
fcoms
lret
add
add
mov
insb
shll
pop
cmpb
jbe
jp
jno
add
jbe
enter
test
add
add
add
fld
add
aam
xchg
xchg
hlt
lea
pop
pushl
push
push
call
ret
rolb
popf
add
lods
add
test
add
in
pop
add
add
in
scas
int3
shll
add
add
add
add
mov
lea
pop
call
push
push
push
push
push
call
add
imul
js
add
push
mov
lcall
mov
add
rclb
nop
add
leave
in
add
add
lods
sti
xchg
std
push
popa
add
mov
idivb
add
add
lea
pop
push
push
push
shr
push
and
add
sub
dec
pop
add
ror
dec
rol
pop
push
add
shr
shl
pop
push
push
lea
push
push
push
push
push
push
call
imul
popf
js
push
mov
add
add
add
movb
xchg
je
cmc
pop
fisttpl
scas
add
fistps
rolb
mov
lea
pop
push
push
add
shr
pop
call
push
sub
shl
pop
mov
push
push
add
sub
ror
pop
push
push
inc
lea
inc
pop
mov
add
push
push
lea
push
push
push
lea
push
push
push
call
xchg
in
test
add
test
jl
int
add
leave
add
fcom
add
movsl
add
andl
mov
add
push
add
mov
add
pop
add
in
add
xchg
pop
test
add
mov
lea
add
movsl
shl
mov
add
mov
lea
pop
add
push
inc
add
pop
add
push
rol
dec
shr
shl
pop
mov
xor
push
sub
pop
add
push
push
call
push
imul
hlt
add
cmpsb
fidivs
mov
push
add
push
add
add
add
add
fisubs
add
insb
imul
add
lret
aam
add
jp
push
add
js
add
add
aad
push
rclb
mov
call
ja
add
stc
add
add
or
push
shl
add
sub
add
pop
mov
xor
push
inc
rol
sub
pop
add
push
push
push
push
call
test
add
jmp
add
add
pop
mov
lahf
push
cld
test
roll
add
add
mov
add
add
add
sarb
add
add
jl
add
jns
mov
les
push
push
push
push
push
call
push
add
mov
popaw
addl
out
stc
fwait
push
add
cmpsl
jno
add
xorb
lahf
call
clc
add
push
add
mov
add
out
add
out
add
mov
add
clc
sbbl
jns
add
add
add
fsub
add
pop
mov
xor
push
shl
pop
rep
push
push
push
push
push
push
call
add
loopne
iret
add
leave
push
add
jmp
hlt
rolb
add
add
add
add
cmpsl
add
out
add
hlt
mov
add
jle
add
fmull
dec
and
icebp
cli
push
lret
lea
push
push
push
push
push
push
call
add
movsl
jnp
add
loop
add
add
add
push
lahf
mov
je
iret
add
add
mov
cwtl
add
mov
mov
jmp
sarl
test
out
jecxz
aam
bound
pop
or
je
push
push
push
push
call
add
cmpsl
add
xchg
add
add
add
icebp
mov
fucomip
iret
xchg
add
xchg
add
add
xchg
into
shll
movb
add
mov
add
push
fcmovne
jle
mov
xchg
bound
pop
mov
push
push
push
push
call
popa
add
add
add
push
lcall
add
aam
mov
testl
ret
int
stos
movsb
in
add
aam
fcmovb
cld
imul
add
add
add
jge
jb
adc
int3
lea
pop
xor
push
push
call
loop
xbegin
mov
jne
add
mov
testl
loopne
enter
stos
add
fbstp
flds
mov
nop
push
add
mov
lea
pop
add
push
lea
pop
mov
xor
push
not
rol
dec
xor
pop
add
push
inc
lea
xor
add
pop
add
push
push
push
push
push
push
call
xchg
add
xchg
icebp
add
sahf
mov
iret
shll
mov
out
add
add
lret
rolb
cli
jl
mov
outsl
add
push
movsb
lea
test
ficompl
xlat
add
fs
popa
add
pop
data16
int3
pop
sti
add
pop
lds
add
clc
add
jbe
add
rolb
cld
lea
pop
mov
push
push
push
call
add
loop
add
shlb
pop
pop
add
pusha
cltd
fldenv
out
add
mov
cwtl
stos
mov
add
add
incb
fildl
jge
jbe
lcall
mov
movsb
std
jl
add
lods
rolb
jne
add
push
add
add
add
add
push
add
add
bound
pop
xor
push
push
push
push
lea
push
push
push
lea
push
push
push
call
fiadds
pop
add
pop
add
jmp
fldenv
lds
add
lea
test
out
stos
call
xchg
add
add
add
out
test
jo
push
add
xchg
hlt
add
mov
iret
int3
xchg
cli
add
mov
lea
pop
add
push
shr
pop
add
push
xor
ror
add
lea
pop
pop
rep
push
lea
push
push
push
push
push
call
clc
test
aam
add
add
imul
clc
mov
cmpsl
leave
add
add
add
xchg
call
add
add
lcall
jge
add
add
aam
mov
into
add
jns
int3
add
fildl
add
ret
add
add
mov
lea
pop
mov
push
push
push
call
cli
loope
add
add
add
add
add
add
jns
pop
add
jb
addb
xchg
push
mov
outsl
add
pushf
imul
add
push
add
add
bound
js
xchg
loop
add
cwtl
call
cli
xchg
ret
push
push
add
scas
add
jmp
into
jb
scas
add
enter
lea
pop
xor
push
lea
push
lea
push
call
add
mov
add
in
add
jb
add
add
jno
xchg
add
jge
pop
popf
jmp
cwtl
push
add
hlt
add
mov
add
lret
fisttpll
add
add
add
movsl
add
pop
xchg
jne
in
aam
bound
add
push
rol
sub
inc
add
pop
or
je
mov
push
lea
sub
pop
add
add
push
push
push
push
call
xchg
rcr
outsl
out
mov
loopne
movsb
add
pushf
add
loope
mov
mov
add
add
gs
add
lret
add
add
mov
mov
add
loopne
sti
leave
push
add
add
add
add
mov
mov
lea
pop
rep
pop
push
push
xor
push
or
not
add
lea
sub
shr
ror
pop
shl
xor
add
lea
pop
push
push
push
push
push
push
lea
push
call
add
lret
add
pop
add
push
add
mov
cld
cmpsb
fucomi
mov
push
mov
add
jecxz
mov
mov
jmp
add
add
cmpsb
jmp
scas
add
add
add
add
insb
add
mov
cld
add
push
pushf
jmp
loope
ljmp
add
sahf
into
add
lret
mov
lea
pop
pop
mov
push
rol
dec
pop
mov
push
lea
push
lea
push
push
push
push
call
xchg
push
in
stc
cwtl
add
mov
lds
imul
add
jb
mov
stos
sahf
iret
int
pop
add
add
add
rorb
pop
mov
jmp
push
push
push
push
lea
push
lea
push
push
push
call
add
movl
iret
mov
incb
add
cmpsb
aad
add
fwait
add
testb
lahf
lahf
scas
push
add
enter
add
popa
jle
mov
ficoml
jo
les
mov
push
lea
push
push
push
lea
push
push
push
push
call
repnz
jl
add
add
jbe
loopne
add
fstpl
stc
iret
add
mov
add
jae
add
stc
idiv
je
add
add
mov
add
test
mov
add
jb
add
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
movsb
push
lcall
out
stos
shll
pushf
jecxz
add
mov
mov
sarl
pushf
add
add
add
sti
add
repnz
scas
jmp
add
call
cltd
add
lret
sti
add
add
shr
add
mov
lea
pop
push
push
push
sub
add
shr
pop
push
push
push
push
push
call
add
xchg
mov
add
add
in
add
add
lcall
mov
add
repnz
clc
xchg
test
into
loop
add
shr
push
mov
add
mov
add
mov
add
jp
mov
jp
add
mov
lea
pop
push
mov
push
inc
sub
pop
pop
pop
push
push
push
push
call
lds
fisubrs
add
ljmp
js
std
movsb
pop
rolb
xchg
ja
ret
add
outsl
lret
add
jo
out
add
test
add
ror
add
add
add
jbe
add
into
add
mov
icebp
add
enter
mov
fadds
pop
faddl
add
shl
add
cld
lea
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
jno
jmp
in
popf
mov
pop
mov
add
mov
add
add
mov
add
jnp
cli
mov
data16
rolb
fstpl
nop
incb
cltd
add
add
movsl
push
pop
gs
std
add
add
flds
roll
sarb
jl
jecxz
lahf
into
add
arpl
cmpsl
roll
loopne
les
push
lea
push
push
push
lea
push
lea
push
lea
push
call
cli
mull
add
mov
mov
add
add
add
or
pop
add
repnz
push
shrl
add
cltd
in
add
add
pushf
add
scas
ja
lds
loop
mov
cmpsb
xchg
roll
in
les
or
push
push
sub
dec
pop
mov
add
push
push
push
lea
push
lea
push
call
add
jp
pusha
add
testl
add
add
add
int
incb
jb
addr16
mov
add
movsb
sarl
mov
int3
xlat
mov
add
add
push
out
xchg
int3
add
xchg
aam
jno
add
add
shrb
jge
add
pop
jns
aam
add
sti
mov
mov
lea
pop
push
push
push
push
push
push
call
xchg
add
sahf
test
add
mov
test
add
nop
mov
pop
add
add
loopne
add
push
add
mov
stos
add
lods
add
mov
lock
loopne
scas
lret
mov
roll
push
popf
adcb
fwait
repnz
lds
pop
add
add
jle
add
addb
add
xchg
js
add
add
mov
lea
pop
push
push
push
lea
push
call
lea
loopne
fmull
jb
pushf
int3
loope
push
push
mov
leave
mov
mov
mov
add
add
xchg
jmp
xchg
pusha
roll
cmpsb
pushf
fcoms
mov
add
add
lock
add
in
xchg
lods
jmp
into
xchg
mov
mov
je
addr16
jnp
imul
add
pop
push
push
lea
push
push
call
fbld
add
add
fldl
add
cli
add
jecxz
fcompl
add
gs
gs
push
xchg
xchg
add
into
push
mov
add
popf
add
cltd
add
add
nop
faddl
fs
stc
icebp
imul
test
add
jl
add
xlat
pop
rcr
mov
lea
pop
push
push
push
push
push
push
call
add
scas
jb
popa
add
nop
aam
add
cwtl
xchg
test
test
insb
fs
out
add
add
mov
mov
int3
pop
add
loope
subb
std
imul
je
or
add
add
mov
lea
pop
movl
addl
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
shlb
add
jb
add
push
data16
push
jns
imul
add
add
add
add
add
imul
in
test
lods
add
out
xchg
ja
add
iret
push
push
add
ficoms
mov
add
jne
mov
lea
pop
test
je
mov
push
shl
inc
shl
pop
pop
push
rol
dec
pop
pop
push
push
push
push
push
push
push
call
add
mov
mov
add
out
mov
fildl
add
mov
pushf
add
add
xchg
add
add
mov
add
add
add
add
addr16
pop
push
lea
add
inc
inc
pop
pop
leave
push
push
push
push
push
push
push
push
push
call
arpl
nop
add
xchg
jne
add
cld
outsl
add
add
mov
add
pop
add
add
cld
movsl
stos
xchg
cmc
mov
cld
test
add
mov
add
add
enter
add
pushf
add
add
mov
lea
pop
ret
push
shl
shl
add
pop
push
push
shr
sub
not
pop
mov
push
dec
add
pop
add
push
lea
push
lea
push
call
add
out
add
in
jne
add
add
xchg
add
cld
roll
add
xchg
cld
add
jecxz
add
mov
add
fadds
jecxz
xlat
add
jecxz
add
pop
add
add
mov
cltd
in
ret
add
add
out
scas
push
test
add
push
add
add
rorl
pop
push
push
add
pop
push
push
dec
pop
push
push
lea
push
push
push
lea
push
call
bound
add
mov
lods
push
add
add
imul
aam
mov
add
add
imul
add
xchg
add
clc
add
add
add
cmpb
scas
stos
shrl
add
addr16
push
push
push
push
call
push
into
cwtl
sahf
add
add
add
add
loop
int
add
add
lret
mov
xchg
xlat
add
add
push
add
scas
add
xchg
cmpb
aad
data16
rcll
xchg
popl
mov
fs
add
aam
xchg
adcl
push
fldl
cli
pop
mov
push
les
pop
testl
push
push
push
push
push
push
push
call
rcll
aad
add
mov
mov
add
add
in
mov
in
jmp
add
mov
jne
lahf
cmc
ror
loopne
jbe
outsl
add
loope
les
mov
cld
lea
pop
addl
push
push
dec
inc
shr
pop
call
push
shr
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
call
mov
xchg
mov
lret
mov
add
bound
icebp
jl
jb
loop
push
cwtl
add
add
lret
add
jge
leave
mov
hlt
ljmp
add
xchg
addb
add
jp
lret
lret
sahf
push
add
xchg
mov
lea
pop
pushl
push
add
pop
push
push
push
lea
push
lea
push
push
push
push
call
loop
xchg
enter
add
add
xlat
add
jp
add
add
add
jne
addl
add
push
push
stc
add
jo
xchg
xorb
gs
add
cmpsb
add
add
add
jmp
add
loope
add
add
push
mov
add
pop
jne
in
enter
jmp
mov
add
mov
cld
lea
pop
push
push
rol
pop
call
cmpl
jne
push
push
push
call
cld
int3
add
mov
xchg
fs
add
add
lahf
cmpsl
out
lods
add
add
negb
fadds
add
fiaddl
add
add
add
add
stc
add
xchg
xchg
add
in
add
add
addr16
mov
in
mov
add
add
mov
add
nop
push
int3
jmp
push
add
pop
pop
pop
push
shr
add
pop
pop
push
sub
sub
ror
dec
pop
pop
push
inc
pop
leave
push
ror
add
pop
ret
push
push
lea
push
push
lea
push
call
imul
rcl
add
ja
popf
push
xchg
jmp
add
mov
shl
outsl
add
mov
pop
aad
loopne
loope
jo
add
mov
mov
flds
cmpsl
add
lock
xchg
add
jle
push
jbe
imul
pushf
cltd
test
lea
pop
push
push
push
push
push
push
call
add
add
add
mov
add
push
nop
pop
int3
add
pop
add
stc
fisttps
les
fdivl
popa
lret
jle
lods
add
out
sahf
sti
add
mov
add
mov
leave
add
add
push
std
add
rol
mov
lea
pop
mov
push
sub
pop
add
push
lea
sub
add
pop
push
push
push
push
call
rorb
lock
xchg
stos
mov
lods
std
add
add
pop
out
xchg
ljmp
add
add
in
add
insb
rclb
mov
add
add
loope
repnz
mov
mov
xchg
loop
mov
mov
lea
pop
push
push
push
push
push
push
push
lea
push
call
jmp
add
add
movl
add
cld
aam
je
add
jecxz
addl
cli
jle
add
icebp
push
push
add
flds
mov
jbe
testl
pop
mov
cmpsb
add
add
push
mov
loopne
cmpsl
mov
add
add
enter
stos
loope
mov
add
popa
loope
mov
lea
pop
push
push
sub
ror
sub
pop
push
push
sub
pop
movl
push
push
xor
xor
pop
call
push
ror
add
pop
push
push
sub
ror
not
xor
pop
call
push
push
push
push
lea
push
lea
push
push
call
xchg
push
addl
add
iret
add
mov
lods
in
add
add
jge
into
add
jnp
add
add
add
add
add
add
jge
outsl
jl
xlat
fidivrl
int
leave
xchg
ja
add
cmpsb
cwtl
jbe
jbe
add
test
add
out
add
lds
pop
subl
push
ror
xor
shr
pop
cmpl
jne
pop
push
xor
pop
pop
push
lea
push
push
lea
push
call
add
add
int
add
incb
mov
add
add
enter
jl
movsb
add
add
add
test
add
add
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
jmp
in
add
cmc
add
lcall
iret
add
leave
add
add
lret
lret
cmc
fidivs
out
mov
add
add
add
je
add
add
add
roll
add
sarb
mov
add
aam
xchg
add
pusha
add
add
add
add
imul
add
add
pop
pop
leave
push
add
pop
ret
push
xor
xor
pop
push
push
add
pop
mov
push
push
push
push
lea
push
push
lea
push
call
xchg
fst
sahf
pop
add
add
add
out
add
jnp
jae
mov
add
test
fstpt
xchg
fnsave
mov
add
ljmp
add
push
mov
mov
nop
add
std
sbbb
addl
add
add
mov
add
push
cltd
add
pop
add
push
push
push
lea
push
push
push
push
push
call
scas
add
mov
lods
in
add
add
add
mov
loope
neg
fiadds
popa
add
add
add
fwait
cwtl
xchg
jnp
add
out
fwait
ljmp
icebp
mov
aam
bound
pop
push
push
push
shl
add
add
shr
pop
push
push
shl
pop
push
mov
push
lea
push
call
retw
mov
add
adcb
loopne
fcmovu
cmpsb
mov
xlat
into
add
popf
add
int
fadds
jp
jmp
lds
add
popf
pop
mov
push
add
pusha
push
add
jle
add
loop
mov
lea
pop
lea
push
push
lea
push
call
add
out
add
jno
jne
push
add
in
in
pop
leave
add
pop
mov
notb
adc
lcall
xchg
push
test
add
into
mov
mov
add
add
call
add
pop
imul
sbbb
mov
lea
pop
sub
push
lea
dec
add
shr
pop
mov
shr
push
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
addl
mov
push
mov
mov
cwtl
shll
add
lahf
add
add
jno
jno
pop
add
out
push
cltd
sahf
pop
loop
add
mov
jle
hlt
pop
xchg
add
xchg
popf
mov
lods
add
add
add
arpl
xchg
add
lds
add
mov
lds
mov
add
add
imul
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
arpl
add
in
js
xchg
movsl
bnd
add
add
add
insb
add
mov
push
xchg
add
pop
movsl
add
jns
mov
popf
movl
jae
hlt
lea
pop
mov
push
add
pop
add
add
push
push
push
push
push
lea
push
push
call
add
imul
mov
xchg
out
fwait
add
push
jnp
push
nop
ja
ja
add
movsl
stos
mov
jns
jno
test
add
add
xchg
ficomps
enter
pop
add
fsubrs
add
lods
add
add
mov
add
cwtl
fildll
mov
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
call
icebp
lret
add
add
fwait
fs
jl
ljmp
test
add
std
shlb
out
xlat
add
add
cmc
xchg
fistps
int
pop
pushf
addb
mov
add
out
roll
mov
add
outsl
bound
cmpsl
mov
jmp
into
pop
add
imul
mov
lea
pop
mov
push
shl
ror
pop
cmp
jne
cmp
jne
push
push
push
push
push
push
push
push
lea
push
push
call
jecxz
jbe
add
cld
mov
add
enter
stc
fstp
add
repnz
jecxz
add
nop
fcom
add
add
add
lods
xchg
add
add
add
roll
fiaddl
add
mov
sarl
add
add
mov
jmp
add
fidivs
test
pop
mov
pop
mov
push
dec
ror
add
ror
pop
movl
push
lea
sub
pop
jmp
push
lea
pop
mov
push
lea
shl
pop
mov
push
dec
rol
inc
pop
sub
jne
push
shl
shl
add
dec
pop
mov
movl
push
rol
pop
jmp
mov
push
add
add
add
pop
mov
push
not
sub
ror
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
popa
add
jae
loopne
jp
add
stc
lea
xchg
insb
jb
mov
fidivs
mov
add
jne
mov
mov
add
add
fsub
std
fidivrl
lcall
in
add
add
test
add
xchg
mov
fildl
out
fmull
inc
adc
dec
add
pop
movl
push
add
inc
sub
pop
jmp
push
pop
mov
push
lea
push
lea
push
push
push
push
push
lea
push
call
xchg
add
sti
mov
sti
add
repnz
jmp
mov
call
cwtl
add
xchg
add
rcr
add
add
add
rol
addr16
add
add
sti
std
add
xchg
cwtl
fisubrl
mov
lea
pop
cmpw
jne
mov
push
push
push
push
push
push
call
push
add
lret
add
add
les
add
xchg
mov
mov
add
in
int3
repnz
add
movl
pusha
sarb
mov
insb
add
insb
mov
mov
push
add
popf
add
lahf
mov
ret
cli
push
in
pop
roll
shr
js
hlt
jae
ret
int3
lea
pop
movl
jmp
push
rol
xor
xor
not
pop
pushl
pop
push
lea
push
push
call
add
add
mov
ljmp
add
add
jbe
testl
lcall
add
fidivrl
mov
movsl
pop
add
pusha
pop
rcr
sti
int3
add
incb
cli
mov
add
fmuls
call
cltd
mov
add
mov
mov
add
into
mov
nop
jne
scas
add
add
data16
jge
fmull
inc
or
inc
sbb
push
lea
push
lea
push
call
add
add
je
xchg
test
mov
je
add
push
jno
add
nop
roll
add
add
jbe
jns
lea
add
fcoml
rcl
add
add
mov
add
mov
pop
add
add
out
xchg
loopne
add
pop
sbbb
add
data16
shll
add
add
mov
lea
pop
mov
push
push
sub
add
sub
push
or
not
add
sub
not
sub
shr
pop
add
shl
xor
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
imul
ljmp
roll
add
stos
hlt
add
pop
enter
add
fcoms
mov
fs
in
rolb
sbbl
shr
fwait
nop
add
mov
mov
movl
loop
add
shlb
add
add
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
fs
xchg
lds
mov
mov
add
add
add
push
lock
jmp
hlt
mov
add
popa
fcomps
int3
lea
pop
call
cmpl
je
push
push
add
push
sub
add
shl
dec
not
sub
ror
rol
pop
dec
sub
inc
rol
pop
push
ror
pop
push
call
push
ror
lea
pop
cmpl
je
push
push
sub
not
push
sub
add
sub
add
pop
shl
pop
push
sub
dec
lea
inc
pop
push
call
push
push
call
add
jo
add
repnz
add
xchg
jnp
add
mov
add
add
add
add
cltd
jns
add
pop
add
rcrl
add
push
xchg
ret
add
rolb
add
push
out
out
add
xlat
add
add
mov
in
add
fiaddl
mov
add
mov
bound
pop
cmpl
je
push
push
add
add
push
or
not
add
sub
sub
add
sub
sub
pop
shr
pop
push
ror
add
rol
dec
pop
push
push
push
push
push
call
add
add
add
pop
lret
add
add
mov
mov
add
add
push
add
add
rolb
test
lret
add
lock
add
jge
outsl
js
imul
push
jle
mov
lea
pop
call
push
push
push
call
add
add
add
pop
add
xchg
push
add
fldl
roll
jbe
add
add
in
add
sahf
aad
js
clc
add
add
jno
xchg
mov
in
pop
push
add
subb
mov
mov
les
add
fcmovbe
mov
jnp
add
fs
push
mov
andb
add
int3
lea
pop
cmpl
je
push
push
lea
push
xor
add
lea
not
inc
sub
lea
rol
pop
shr
ror
lea
pop
push
push
push
push
call
aad
cmc
jne
xchg
cmp
mov
jmp
mov
jns
add
jnp
mov
jno
push
out
mov
push
add
test
out
stos
ret
add
add
add
xchg
add
add
pop
push
std
test
add
jne
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
movsl
mov
mov
testl
mov
add
scas
add
les
roll
imul
out
movsb
mov
mov
add
js
out
add
jmp
add
mov
aad
addr16
push
push
lods
insb
add
mov
add
stos
xchg
mov
fdivl
add
cmpsb
mov
in
lea
pop
call
push
push
lea
push
push
lea
push
push
lea
push
push
call
addr16
aam
push
add
lds
add
add
add
add
mov
add
jl
add
loopne
test
ret
jp
add
add
jne
jecxz
scas
int
add
add
mov
pop
mov
add
popf
add
call
lret
sti
in
jge
pop
mov
add
mov
lea
pop
cmpl
je
push
push
lea
add
push
xor
add
sub
shl
sub
sub
add
shr
pop
inc
ror
rol
pop
push
push
call
add
add
add
imul
add
jae
fstpl
filds
imul
add
pusha
lcall
ror
add
mov
xchg
in
lret
pusha
mov
lea
pop
push
call
push
lea
push
push
push
lea
push
call
add
fs
add
xchg
mov
xlat
insb
imul
lods
add
pop
add
mov
add
mov
fldl
xchg
lods
add
mov
add
mov
add
add
xchg
add
add
mov
movsl
mov
add
add
mov
xlat
add
add
add
add
push
add
fadd
shlb
lds
lcall
cmpl
je
push
push
shl
shl
lea
push
xor
add
xor
add
sub
sub
not
ror
sub
pop
add
add
pop
push
lea
push
push
push
push
push
call
jo
push
imul
add
add
jns
add
add
cld
add
lods
add
xchg
add
scas
add
pop
imul
outsl
add
je
arpl
add
add
js
add
fiaddl
stos
add
movsl
add
ljmp
add
add
add
mov
jge
mov
add
jne
arpl
rorl
push
push
push
lea
push
call
cmpsb
add
mov
add
sahf
fbstp
jge
push
in
mov
lods
in
fiaddl
add
hlt
fsts
add
push
stos
pop
add
add
xlat
test
popf
add
cmpsb
add
add
add
mov
add
jno
add
pop
call
cmpl
je
push
push
sub
rol
ror
sub
push
and
add
add
shr
xor
xor
sub
not
xor
rol
rol
pop
add
pop
push
push
push
call
jl
arpl
add
std
xlat
sti
xchg
pop
add
jge
notl
add
jne
int3
cli
pop
add
xchg
add
add
add
cld
add
incb
iret
mov
mov
js
add
add
repnz
rcll
add
add
nop
mov
fucomip
push
add
add
mov
lea
pop
push
push
lea
push
push
push
lea
push
call
pop
lahf
call
pop
add
sar
aad
popf
imul
add
xchg
leave
add
xchg
fs
add
pop
xchg
push
add
std
pop
mov
add
add
add
shrl
gs
lods
push
add
xchg
pop
add
mov
push
add
add
loope
lds
add
adc
call
cmpl
je
push
push
add
xor
sub
push
or
inc
add
add
xor
sub
lea
pop
ror
pop
push
push
push
call
cmpsb
push
mov
cmpsb
add
jb
jb
nop
stos
pushf
mov
add
add
add
jp
iret
mov
rcrb
jo
jae
add
cli
call
xchg
push
add
in
add
jne
lahf
sti
shr
shlb
add
xchg
push
int3
add
mov
add
aad
fs
push
add
mov
mov
lea
pop
push
call
push
add
sub
rol
pop
cmpl
je
push
push
shl
push
sub
add
sub
sub
not
pop
add
pop
push
push
push
push
push
push
push
call
add
loopne
data16
add
add
xchg
add
mov
in
add
fld
ja
add
xchg
add
add
add
cltd
push
mov
add
xchg
les
add
ficomps
loopne
movsb
add
cld
lea
pop
push
push
not
shl
pop
call
push
shr
not
sub
xor
pop
cmpl
je
push
push
shr
add
lea
push
or
not
add
inc
sub
shr
sub
pop
shl
pop
push
push
lea
push
lea
push
push
call
cwtl
mov
jmp
scas
add
sahf
rcl
rcl
add
add
out
add
add
mov
push
cmc
repnz
lods
cmpsl
add
sbbb
stos
push
add
out
add
enter
pop
add
add
roll
aam
lods
jmp
pushf
je
pop
add
mov
mov
enter
int3
push
mov
std
add
hlt
lea
pop
push
call
push
push
push
call
add
push
leave
xchg
add
enter
enter
xchg
loope
add
imul
push
add
add
add
int
in
add
add
add
repnz
popl
add
negl
fimuls
pop
cmpl
je
push
push
shl
add
push
xor
add
shl
sub
rol
add
pop
lea
dec
ror
pop
push
lea
push
lea
push
lea
push
call
arpl
add
push
lea
imul
mov
add
mov
jns
add
nop
in
ret
mov
out
out
add
add
rolb
adc
in
mov
mov
add
add
fucomp
cwtl
add
ljmp
call
jns
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
jns
aad
add
pusha
ficompl
test
mov
loopne
in
cwtl
jecxz
test
xchg
add
movsb
mov
and
jbe
add
mov
lcall
add
mov
roll
add
add
mov
add
sti
addr16
add
ficompl
lea
pop
call
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
fwait
add
mov
call
add
mov
jl
pusha
mov
add
stc
filds
add
add
mov
out
add
jne
add
leave
push
xlat
arpl
ret
add
xchg
add
mov
fdiv
stc
imul
sub
js
jmp
les
je
push
push
push
or
not
add
not
sub
shr
add
dec
pop
shr
ror
add
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
lret
add
aam
mov
cli
push
add
shr
rcll
mov
add
mov
xlat
push
add
fiadds
out
pop
lods
add
imul
lea
xchg
mov
add
add
icebp
add
jne
add
outsl
xchg
jae
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
jo
insb
add
mov
add
mov
scas
fsubp
lock
outsl
add
test
lret
add
into
negl
mov
push
xchg
add
add
add
mov
add
fsubs
add
push
int3
rcll
add
add
outsl
mov
aam
mov
add
scas
add
add
andb
je
les
hlt
xor
add
pop
ret
sgdtl
add
ffree
jecxz
sub
shr
pop
mov
push
push
push
push
call
add
add
pusha
clc
add
xchg
fcmovu
add
jno
add
add
add
add
mov
jle
add
mov
stos
add
add
add
add
fildl
xchg
fistps
in
add
lcall
mov
mov
xchg
add
add
stc
add
push
add
mov
fmull
add
add
add
jns
add
push
push
push
push
lea
push
push
lea
push
push
call
test
mov
jns
add
sarb
jp
mov
jle
add
data16
cmpsb
ffreep
fldcw
add
mov
jmp
add
out
xchg
ja
enter
mov
add
push
lds
add
push
les
rclb
and
outsl
pop
pop
push
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
call
adcl
rorb
jmp
push
add
nop
pop
sahf
jl
add
testb
push
addb
lods
popa
loop
jns
mov
pop
jnp
movsl
flds
jnp
add
pop
pop
push
push
call
add
rcrb
jno
mov
fiaddl
mov
add
mov
mov
add
shrb
pop
add
add
flds
test
orl
mov
fildl
add
ljmp
in
mov
mov
stos
addl
jnp
cld
lea
pop
pop
push
push
lea
push
lea
push
push
call
add
add
movsb
mov
cltd
add
into
lcall
test
add
fdivp
add
ret
add
add
add
add
mov
add
rolb
add
add
aam
call
int3
lea
pop
leave
push
inc
pop
ret
push
ror
pop
push
mov
push
dec
add
not
inc
pop
add
push
push
lea
push
call
add
fiadds
add
add
add
movl
add
mov
add
add
out
add
mov
push
mov
xlat
fwait
js
scas
jns
add
test
mov
push
cwtl
xchg
add
add
mov
lea
pop
cmpl
jne
push
push
ror
add
add
push
xor
add
shr
add
sub
sub
pop
inc
pop
push
push
call
add
add
add
add
add
add
add
sahf
scas
add
add
lret
cmpsl
jle
ljmp
add
ret
add
mov
popa
roll
lcall
add
add
add
jle
fs
add
lret
lods
jo
mov
add
pop
pushl
push
push
call
add
add
lea
jno
pop
mov
sahf
outsl
add
add
push
in
loop
add
icebp
xchg
lahf
addl
mov
fldt
movl
push
add
mov
sti
add
rolb
mov
lea
pop
call
push
push
add
xor
add
pop
call
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
push
rorb
jmp
pop
add
add
pop
add
jle
jle
add
cmpsl
mov
ja
sti
add
add
xchg
fldl
add
add
bound
lock
pop
imul
xchg
ja
js
add
out
add
jp
int3
into
mov
int3
add
ror
mov
lea
pop
jmp
push
push
push
push
lea
push
push
push
call
push
mov
in
rolb
repnz
add
add
jecxz
add
pop
pop
imul
cld
add
lcall
roll
mov
aad
add
movsl
add
test
add
add
imul
add
scas
mov
scas
add
mov
jmp
add
arpl
mov
ja
cwtl
add
mov
lea
pop
cmpl
je
push
add
shl
pop
cmpl
jne
leave
push
push
push
push
push
push
push
push
push
call
add
add
movsb
cmc
jle
rclb
aam
cli
subb
cli
pushf
fmuls
push
add
enter
xchg
cltd
nop
cli
out
push
imul
fs
add
loopne
add
add
add
addr16
add
mov
lea
pop
add
push
lea
xor
add
pop
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
lahf
out
mov
sti
scas
clc
jp
aad
add
lock
add
in
add
jge
arpl
bnd
call
call
add
lcall
pop
add
pusha
mov
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
pop
pop
add
add
clc
out
add
rolb
mov
imul
lret
mov
neg
cmpl
add
add
ror
add
loope
rcrb
add
add
add
ret
lea
pop
pop
push
push
push
push
push
push
call
outsl
push
sahf
mov
bound
add
add
mov
add
push
add
push
into
add
fstpt
test
insb
rcr
adcl
cltd
mov
pop
xchg
ret
push
jl
hlt
lea
pop
pop
leave
push
shl
pop
add
push
lea
push
push
push
push
push
call
je
aam
add
add
add
mov
into
shr
outsl
add
mov
pop
add
add
test
add
add
addl
mov
add
add
add
add
popa
add
jge
loop
add
mul
mov
lea
pop
ret
push
lea
push
lea
push
lea
push
call
mov
add
add
int
pop
add
add
push
add
int
add
add
push
lock
mov
add
xchg
add
add
nop
outsl
add
adc
push
pop
add
cmpl
jne
push
push
not
push
or
inc
add
add
inc
dec
sub
shr
sub
rol
pop
add
pop
push
dec
pop
pushl
call
push
push
call
leave
test
add
movsb
jmp
add
mov
add
add
add
roll
in
jp
add
aam
cmpsl
mov
add
add
add
xchg
test
add
lea
pop
push
call
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
mov
add
add
xchg
mov
mov
mov
cld
add
fcompl
flds
shrl
add
stc
add
add
pop
testb
add
out
push
test
jge
cli
mov
lds
lea
jmp
add
pop
jmp
cmpl
jne
push
inc
sub
pop
mov
push
inc
inc
pop
mov
push
push
push
sub
shr
sub
add
push
push
pop
add
add
sub
ror
add
shr
pop
inc
lea
pop
push
push
lea
push
push
push
call
jns
lcall
out
popa
cli
scas
add
add
jb
notl
add
scas
outsl
cmc
mov
fnstsw
cwtl
in
add
leave
add
arpl
stos
flds
add
imul
test
add
roll
mov
int3
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
aad
add
sti
push
jbe
pop
loope
jae
add
rolb
pushf
test
pusha
out
lahf
add
add
test
mov
repnz
mov
mov
pop
add
insb
pop
pop
add
push
mov
add
cld
lea
pop
call
push
push
lea
push
push
push
push
push
push
call
mov
sti
movsb
add
loope
orl
pusha
out
popa
out
add
xchg
in
jle
mov
ja
test
int3
lods
add
insb
add
add
lret
add
cld
add
push
cld
call
lcall
mov
lea
pop
call
push
push
ror
push
or
inc
add
xor
sub
dec
dec
add
dec
pop
lea
pop
push
lea
push
push
push
push
push
push
call
add
sahf
add
sti
mov
test
imul
add
mov
pop
imul
cmc
out
add
xchg
jmp
out
xchg
add
scas
stos
cmc
testb
add
push
fsubs
fisttpll
aad
add
adcl
add
add
push
xchg
shr
rcll
add
iret
mov
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
bound
faddl
add
ja
xchg
jb
cmc
add
add
mov
add
add
add
pusha
add
add
add
sti
jl
outsl
mov
in
out
pop
add
mov
fimull
sti
add
add
lods
ja
mov
add
ret
ljmp
cld
lea
pop
call
call
push
push
lea
add
push
push
pop
add
dec
dec
lea
sub
xor
sub
shr
pop
inc
sub
pop
push
sub
shr
lea
add
pop
pushl
push
shl
pop
call
push
pop
call
push
shr
sub
pop
lea
push
push
sub
xor
push
xor
add
add
dec
sub
add
ror
pop
add
sub
add
dec
pop
push
sub
pop
pushl
call
push
lea
lea
inc
pop
push
push
shl
ror
not
ror
pop
call
push
push
shl
push
and
add
sub
sub
sub
inc
lea
pop
rol
shl
pop
push
push
push
push
push
push
push
lea
push
call
xchg
add
push
lcall
test
mov
add
add
xchg
mov
add
cld
fwait
jbe
into
outsl
add
add
lret
out
roll
mov
hlt
sahf
mov
add
add
int3
add
add
push
mov
lea
pop
pushl
call
push
sub
dec
pop
call
mov
push
push
push
xor
add
inc
add
sub
not
add
pop
lea
pop
push
lea
not
add
pop
pushl
call
push
push
push
push
call
add
add
insb
mov
std
add
lock
add
cmc
add
jae
add
cltd
add
in
add
cmpsl
mov
xchg
jmp
pop
pop
jo
repnz
add
mov
mov
cld
lea
pop
push
push
push
push
call
jge
nop
roll
cld
js
lods
xchg
add
add
fucom
add
push
mov
add
rcr
xchg
pop
nop
add
add
mov
icebp
lret
js
add
rolb
add
add
mov
mov
add
pop
call
push
push
xor
push
xor
add
rol
not
add
sub
add
pop
sub
pop
push
push
push
push
push
push
call
adc
add
insb
push
enter
addb
jl
fiaddl
add
jo
add
add
scas
cld
add
add
add
rol
add
int3
cwtl
add
jo
add
flds
in
mov
xor
fsubp
lret
add
push
rcl
push
add
mov
lea
pop
pushl
push
push
call
out
mov
push
xlat
std
add
mov
mov
xchg
jecxz
add
cli
xchg
add
add
add
in
popf
repnz
add
mov
ljmp
xchg
mov
pusha
or
in
add
push
push
xor
lea
rol
inc
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
add
mov
add
push
jecxz
jns
push
mov
call
add
mov
add
mov
shrl
add
repnz
add
int
add
add
add
jbe
mov
lea
pop
call
push
push
shl
xor
push
xor
add
not
ror
shl
inc
sub
xor
pop
dec
pop
push
shl
add
pop
pushl
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
xchg
nop
test
addb
ljmp
add
je
add
mov
pop
xchg
xchg
out
in
add
loopne
add
xchg
fisttpll
cmc
jp
ljmp
int
xlat
mov
add
mov
aad
add
cltd
je
pop
add
add
fwait
dec
mov
lea
pop
call
push
push
push
sub
add
not
xor
sub
sub
lea
pop
shr
ror
ror
pop
push
push
sub
add
push
xor
add
add
ror
rol
sub
rol
pop
sub
pop
push
push
call
xchg
pop
add
test
popf
jnp
fldl
push
xchg
stos
mov
lods
pop
add
mov
leave
add
ficompl
add
add
popf
addl
int
add
add
lock
jmp
rorb
pop
call
pop
push
shl
pop
dec
jne
push
push
push
call
add
faddl
test
add
add
mov
rclb
add
xchg
mov
mov
cmpsl
add
add
add
add
pop
call
jmp
push
lea
push
push
lea
push
push
push
call
outsl
mov
int
jns
mov
add
xchg
add
mov
lahf
lcall
mov
add
push
test
stc
fsts
lcall
andl
pop
add
add
repnz
mov
int
add
add
pop
mov
add
sti
sbbl
popa
les
shll
jp
pushf
aad
pop
add
into
add
addl
push
addl
pushf
mov
lea
pop
call
push
push
sub
shl
not
xor
push
and
add
ror
add
add
xor
sub
pop
rol
add
pop
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
call
mov
cwtl
mov
adcb
add
add
add
flds
add
add
add
push
repnz
add
add
add
jne
hlt
lea
pop
pushl
push
shr
pop
call
push
sub
shr
sub
pop
push
push
push
push
push
push
push
push
call
fldenv
lds
loope
stos
add
mov
add
jecxz
subb
pop
xchg
stos
add
add
add
add
add
jne
add
int
xchg
add
add
add
add
add
xchg
cltd
add
jne
mov
test
add
add
int
enter
pusha
sbb
call
push
add
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
mov
call
add
pop
cltd
add
pop
add
mov
insb
add
add
add
lret
addr16
add
xlat
add
mov
cli
add
add
xchg
jnp
in
jo
addl
jmp
and
lea
push
push
shl
xor
push
xor
add
xor
rol
sub
sub
sub
add
xor
pop
xor
shr
add
pop
push
inc
lea
lea
dec
pop
pushl
call
push
dec
sub
xor
pop
push
push
lea
push
push
call
je
xchg
aad
mov
fxam
addl
std
add
bound
push
fwait
mov
add
add
jns
cmpsl
add
sar
add
xchg
add
xchg
mov
add
ret
mov
add
rolb
hlt
xchg
pop
frstor
hlt
lea
pop
call
push
push
not
ror
not
push
or
inc
add
not
not
sub
add
ror
pop
add
pop
push
lea
shr
add
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
push
call
jne
add
std
nop
mov
add
add
sbbb
pushf
stc
add
mov
add
add
aad
pushf
add
rclb
add
nop
add
add
repnz
add
sahf
push
push
roll
ljmp
pop
add
popa
nop
mov
ret
loope
std
jge
jne
mov
lea
pop
call
push
lea
pop
call
mov
push
add
sub
pop
lea
push
push
sub
shr
push
and
add
add
add
sub
ror
pop
sub
pop
push
lea
push
lea
push
call
imul
enter
js
lahf
add
test
add
movsl
mov
lahf
mov
mov
nop
sti
movsb
add
add
mov
add
int3
fnstenv
xchg
neg
je
add
add
loopne
mov
add
add
pop
pushl
push
lea
push
push
call
add
add
loop
add
cmpsl
add
mov
add
call
mov
jae
xchg
pop
add
lret
mov
add
arpl
loopne
lock
add
add
subl
jecxz
test
add
test
aam
bound
call
push
dec
sub
pop
lea
push
push
ror
xor
pop
push
push
push
push
push
push
push
push
call
push
cli
test
mov
add
add
add
lock
mov
lods
nop
mov
cmpsb
loop
jp
movsl
xchg
add
roll
icebp
mov
addb
add
filds
mov
popl
mov
lea
pop
push
pushl
push
push
dec
inc
push
or
not
add
shl
sub
add
pop
sub
shl
pop
push
not
not
pop
push
push
push
push
push
push
push
push
push
call
lret
add
add
push
ret
scas
xlat
add
push
add
ret
pusha
hlt
test
lods
rolb
add
rorb
movsb
mov
cltd
pop
add
add
pop
call
push
push
inc
shr
not
push
or
inc
add
not
sub
sub
ror
shl
pop
sub
pop
push
lea
ror
pop
pushl
push
push
push
push
push
push
push
push
call
jmp
pop
push
fisubl
mov
add
add
lahf
mov
imul
rol
pop
in
add
mov
add
add
mov
scas
add
arpl
lods
hlt
add
repnz
mov
mov
data16
mov
add
mov
mov
in
push
mov
clc
cltd
scas
pop
pop
add
test
pop
call
push
dec
pop
push
push
push
call
std
mov
add
add
add
add
mov
mov
add
pop
add
jne
fsts
xchg
add
push
add
jns
add
jle
outsl
popf
fldcw
loop
add
adcl
mov
push
lods
jp
add
pop
call
push
push
inc
shl
add
push
and
add
lea
shl
sub
add
pop
inc
pop
push
shr
pop
pushl
push
xor
pop
call
push
lea
pop
call
push
push
push
push
push
call
mov
aam
add
mov
add
aad
add
pop
add
pop
mov
add
arpl
fnsave
movsb
lea
mov
xchg
mov
push
mov
add
in
cmpb
add
add
fwait
mov
jns
mov
add
scas
cmpsl
outsl
mov
arpl
test
ret
add
cmpsb
add
add
int3
lea
pop
jmp
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
adc
imul
cwtl
pop
leave
pop
add
shll
push
add
push
add
fs
add
mov
jecxz
add
aam
mov
out
add
mov
add
add
cltd
add
jb
jb
testl
add
xlat
mov
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
call
mov
aam
jecxz
mov
stos
xchg
add
add
call
fadds
add
add
mov
sahf
add
jb
in
add
icebp
in
add
mov
mov
roll
les
xchg
add
mov
sbb
xchg
clc
pushf
cld
add
out
cli
add
loop
add
scas
add
add
add
int
cmc
add
pop
mov
push
xor
not
lea
pop
jmp
push
push
inc
xor
push
and
add
inc
sub
xor
sub
add
pop
sub
shl
lea
pop
push
dec
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
push
push
push
call
in
divl
add
jge
add
add
sti
xchg
add
bound
data16
add
gs
icebp
xchg
add
stos
add
icebp
jo
sub
rcll
bound
push
add
orb
add
add
add
add
jle
mov
incb
add
add
addb
lret
add
add
add
sub
add
shrb
jo
xlat
push
sub
shl
shr
push
push
pop
add
add
sub
sub
pop
add
add
pop
push
lea
push
call
lds
add
test
out
push
add
xchg
push
add
push
mov
add
stos
fiadds
add
xchg
add
add
xchg
lcall
iret
add
add
mov
popf
rcll
mov
jnp
add
add
cmc
add
add
jo
add
add
pop
pushl
push
lea
push
push
push
push
push
push
push
call
popl
in
add
add
add
lds
add
add
push
add
stc
cmpsb
xchg
push
jmp
cltd
cltd
stos
mov
cltd
mov
out
negb
bound
xlat
add
push
add
notl
fucomi
add
lcall
nop
mov
lea
pop
call
push
add
dec
pop
push
push
add
not
pop
call
push
push
lea
push
lea
push
push
push
call
add
pop
add
add
rcll
lahf
add
mov
scas
add
sahf
subl
add
add
test
int
in
xchg
xchg
out
push
mov
fists
add
add
add
add
add
fmull
push
push
push
push
push
push
push
push
push
push
call
add
js
mov
addl
add
add
add
add
add
mov
mov
add
int
pop
add
stc
cwtl
add
cwtl
out
add
mov
push
int
jecxz
je
add
mov
add
add
into
add
les
les
sub
rol
pop
pop
push
lea
push
push
call
add
loopne
xchg
add
hlt
stos
add
add
mov
pushf
andb
out
int
mov
popf
add
add
add
add
jnp
add
movsb
add
add
pop
pop
push
add
shl
pop
pop
push
lea
push
push
lea
push
lea
push
call
add
push
add
nop
xchg
add
add
add
ret
out
popl
hlt
pop
add
fadds
add
mov
add
test
add
mov
add
lret
add
jo
notb
mov
lods
cld
lock
int3
pop
lea
int3
lea
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
addb
xchg
insb
repnz
mov
mov
ficomps
add
mov
sarl
insb
add
scas
add
add
add
lods
cli
add
add
add
mov
add
mov
add
add
lds
mov
add
add
jno
mull
add
add
lret
roll
push
fiadds
popa
sub
push
inc
xor
pop
add
ret
push
not
rol
lea
pop
leave
push
ror
inc
add
pop
ret
push
push
shr
xor
ror
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
xchg
hlt
les
add
hlt
mov
roll
cmc
pusha
add
add
mov
flds
sarb
add
lods
add
lock
int
mov
jle
add
repnz
add
mov
add
fldenv
cld
lea
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
call
jno
add
xchg
add
cmpsb
jl
stc
add
loop
add
add
add
je
add
add
test
push
xchg
lods
add
add
fmull
inc
and
push
pop
jmp
push
push
push
push
push
push
push
call
push
add
add
xchg
add
lock
out
add
ret
fidivrs
add
outsl
add
add
add
add
add
nop
add
jge
add
in
incb
leave
int
add
int3
add
ja
xchg
cmpsb
jge
xchg
add
leave
add
pop
mov
and
push
ror
lea
pop
xor
push
dec
shr
shl
pop
xor
add
push
push
lea
push
lea
push
push
push
call
mov
roll
data16
scas
pop
add
adcl
pop
imul
icebp
xchg
cwtl
add
decb
test
add
jo
xchg
mov
add
sahf
movl
push
mov
xchg
mov
add
add
mov
movsl
add
repnz
add
push
mov
lea
pop
xor
push
lea
push
push
push
call
jle
les
pop
mov
addl
fiaddl
scas
add
add
add
movsb
repnz
lods
mov
mov
push
cmc
std
mov
jno
add
xchg
cli
push
pop
nop
add
movl
repnz
out
mov
lea
pop
dec
push
push
push
lea
push
push
push
push
push
call
fstpt
add
jno
jns
add
mov
add
pop
rolb
add
int3
xchg
lock
mov
xlat
mov
mov
add
fnstenv
mov
xchg
pop
rolb
pushf
add
add
mov
lea
pop
sub
push
sub
not
dec
xor
pop
jmp
push
push
push
call
loope
add
mov
mov
in
fldpi
add
cli
jl
iret
std
add
pop
jge
add
add
pop
add
mov
hlt
xchg
add
add
push
bound
add
mov
lock
jl
pop
add
add
scas
mov
lea
pop
sub
push
inc
lea
pop
pushl
push
push
push
push
lea
push
push
call
add
add
scas
add
cld
ret
loop
jns
repnz
mov
aad
lcall
add
push
lret
add
add
lret
add
rorb
add
mov
lea
pop
pop
sub
push
ror
not
pop
cmp
jne
push
add
ror
shr
xor
pop
mov
lea
push
xor
sub
pop
sub
push
sub
shl
ror
rol
pop
mov
push
pop
shr
push
lea
push
lea
push
push
push
push
push
push
push
call
add
cld
add
add
add
add
movb
add
jnp
add
in
add
add
mov
stos
loope
mov
mov
mov
add
hlt
sti
add
popa
push
push
test
add
imul
hlt
lea
pop
add
sub
push
push
push
push
lea
push
call
lret
lcall
jl
rolb
xlat
add
add
add
add
lock
add
sbb
add
mov
in
scas
mov
shrl
add
leave
loopne
nop
add
add
mov
add
lock
add
cltd
xorl
add
add
add
add
add
add
add
je
roll
fmull
pop
pushl
push
dec
sub
not
sub
pop
pop
shr
push
push
push
push
push
lea
push
push
call
add
add
add
add
xchg
push
add
pop
outsl
mov
add
mov
add
addl
mov
test
loopne
mov
push
pop
add
jo
icebp
add
mov
add
xchg
loope
insb
add
nop
add
mov
jnp
incb
add
les
lods
xchg
add
pop
and
push
push
push
push
lea
push
push
lea
push
call
add
push
mov
pop
movl
xchg
jnp
cmc
mov
add
shl
add
ljmp
enter
add
add
mov
data16
add
add
pushf
cltd
add
insb
add
mov
sub
add
test
push
cltd
add
add
lods
jnp
outsl
add
out
test
mov
push
cltd
add
mov
sbb
sub
cmp
jne
push
xor
sub
pop
leave
push
not
pop
ret
push
push
xor
pop
mov
push
push
push
call
add
mov
add
rolb
mov
add
les
add
jnp
mov
fdivs
imul
add
push
push
imul
add
add
add
add
aad
add
add
add
add
xchg
add
add
outsl
jmp
add
aam
push
add
add
nop
add
aam
bound
add
push
push
push
push
lea
push
call
les
orb
add
add
pop
imul
add
fsts
les
add
add
mov
out
pop
fldl
scas
outsl
in
test
add
in
add
out
fdivp
mov
jecxz
add
movsb
pop
pop
repnz
pop
push
push
push
push
lea
push
push
push
call
fiaddl
mov
lahf
test
add
faddl
add
push
xchg
lahf
fistl
lret
add
xchg
sahf
add
cmpsl
add
mov
jno
add
outsl
jge
leave
fistpl
push
add
mull
testl
out
add
add
push
sti
mov
add
pop
push
push
sub
sub
pop
push
push
push
add
pop
mov
push
xor
inc
not
pop
lea
sub
push
rol
sub
add
pop
mov
push
push
push
call
int3
add
shll
mov
add
test
jmp
cmp
lret
jb
xchg
add
insb
add
loope
add
add
rcrl
add
roll
loopne
xchg
mov
mov
fmulp
add
add
pusha
repnz
rolb
add
mov
mov
xchg
negl
lea
pop
shr
add
push
sub
lea
inc
shr
pop
mov
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
jbe
push
pop
pop
call
imul
add
cli
add
insb
movsb
add
mov
add
cmc
add
add
lds
pop
add
push
xlat
lock
stc
imul
mov
lahf
add
add
sarb
xchg
xchg
imul
lret
add
jo
pop
test
mov
mov
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
fcom
test
mov
add
add
add
push
add
add
add
outsl
add
jbe
int
movsb
gs
clc
add
arpl
popl
add
add
lret
shlb
mov
add
hlt
incb
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
cmc
add
cmc
add
add
add
jbe
add
in
into
imul
fucomi
xchg
stc
jb
jp
add
fwait
xchg
add
lea
pop
xor
mov
push
not
shr
pop
and
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
orl
add
fs
clc
add
pop
pop
js
add
mov
movl
scas
push
shll
mov
add
ljmp
addl
add
pushf
scas
test
enter
bound
pop
addb
add
test
call
data16
pop
rol
rol
push
push
push
push
push
call
icebp
pop
xchg
add
jae
les
out
add
arpl
add
fwait
pop
add
jl
pop
mov
jbe
lds
add
add
add
pop
leave
add
idivl
cwtl
add
push
xchg
mov
stos
cmpsl
add
add
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
mov
loope
fucompp
add
loope
add
mov
xchg
out
mov
jb
add
andl
cltd
add
pop
mov
add
bound
jmp
mov
mov
add
shl
add
add
aam
jle
mov
lea
pop
inc
push
shr
shl
dec
pop
cmpb
jne
push
lea
push
call
ror
out
mov
mov
mov
test
xchg
add
int
mov
pop
jmp
add
add
add
add
mov
pushf
ficompl
jp
add
add
je
jbe
fmull
inc
pop
ss
push
push
lea
push
push
call
cld
add
add
xchg
in
roll
add
flds
movsl
mov
xchg
add
add
add
movl
hlt
jp
in
gs
shl
add
add
add
add
push
aam
in
add
add
add
mov
add
add
std
push
shl
in
lods
outsl
icebp
ficomps
aam
bound
pop
cmp
je
add
push
push
push
push
push
push
push
push
push
push
call
lcall
add
fadds
xchg
subb
mov
mov
rcrb
xchg
xchg
add
jb
cli
push
add
xor
mov
add
add
aad
jne
pop
ljmp
push
add
add
mov
fsubs
call
in
in
add
push
call
mov
lea
pop
cmpl
jne
push
sub
ror
shr
shl
pop
xor
push
lea
push
push
push
push
push
push
call
in
add
enter
mov
out
add
xchg
js
xchg
std
lret
rcl
push
xchg
arpl
add
add
jnp
nop
add
jl
aad
mov
enter
xchg
sahf
push
lea
rorb
pop
pop
push
xor
shr
ror
pop
pop
push
lea
shl
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
rolb
test
add
cli
push
stc
xchg
fbld
cwtl
add
stc
pop
add
into
xchg
ja
xchg
add
add
push
add
sahf
add
add
add
out
mov
add
subb
xchg
hlt
mov
iret
add
xlat
add
fwait
add
enter
add
add
push
add
outsl
data16
pop
pop
push
sub
pop
pop
push
shr
ror
inc
pop
leave
ret
push
add
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
call
add
add
push
push
mov
stos
pop
lcall
add
mov
cli
mov
xchg
push
jmp
data16
add
add
add
ja
rcrl
icebp
in
add
cmpsb
add
add
outsl
lea
fmull
push
push
push
lea
push
call
xchg
add
add
push
test
add
mov
mov
push
lods
jne
test
add
add
cmpsb
xchg
add
add
lods
add
loope
mov
lret
add
add
add
pusha
adc
push
push
lea
push
lea
push
push
call
add
rcr
add
push
push
add
mov
mov
add
add
mov
add
push
add
jmp
add
add
xchg
add
int3
add
loopne
call
push
pop
add
xchg
mov
in
mov
mov
test
jnp
push
xchg
out
add
add
add
mov
lea
pop
add
push
sub
dec
shl
pop
xor
push
ror
pop
add
testw
push
lea
push
push
lea
push
call
add
push
int3
add
addr16
add
pop
add
add
jl
mov
mov
stos
shll
add
add
imul
lds
je
fistl
add
cmpsl
add
cmc
add
jle
cltd
add
scas
ficompl
in
repnz
aad
jno
cmc
lahf
xchg
push
mov
jmp
add
mov
mov
lea
pop
pop
push
sub
shl
pop
pop
push
add
pop
mov
push
push
lea
push
call
in
movsl
roll
add
mov
cld
add
add
mov
jo
lret
pop
add
adc
popf
add
add
push
jno
pop
add
ljmp
lahf
add
jno
arpl
add
add
addb
jae
mov
mov
xchg
jnp
pop
mov
rol
int3
add
add
mov
cmc
sti
add
mov
lea
pop
call
xor
push
rol
dec
ror
pop
pop
push
sub
lea
xor
not
pop
pop
push
inc
lea
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
push
movsb
cmpsb
add
flds
add
add
jle
jmp
add
mov
fs
push
test
add
add
jo
add
gs
cld
test
repnz
mov
scas
shrl
pop
pop
push
push
push
push
push
call
fwait
add
test
add
fs
cld
add
cmc
add
movsb
add
add
mov
mov
gs
aam
mov
fcomp
add
jnp
mov
lea
pop
leave
push
add
ror
pop
ret
push
push
sub
shr
not
pop
mov
push
push
push
push
push
push
push
push
call
in
push
pop
add
jns
std
add
cltd
add
popl
mov
lahf
imul
jle
add
sahf
push
jl
addb
fildl
add
add
push
add
add
arpl
mov
cld
lea
pop
add
push
push
push
call
lods
int
add
add
fldl
cmc
add
add
add
add
xchg
mov
loopne
leave
mov
mov
add
popa
aam
mov
add
test
fadds
ret
sti
fisubs
icebp
mov
add
push
sarl
or
push
shr
shl
pop
push
push
push
push
lea
push
call
lahf
add
add
scas
add
cwtl
add
mov
arpl
lret
add
movsb
add
stos
in
add
ja
lcall
negb
add
rolb
adc
pusha
stos
out
add
popf
in
out
add
out
jb
rol
pop
mov
add
je
pop
add
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
int
mov
arpl
ljmp
clc
add
add
add
add
in
add
jmp
xchg
clc
mov
add
add
xchg
lret
add
clc
add
add
addl
add
add
pop
add
add
jmp
in
add
ja
add
add
sbb
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
mov
jle
sahf
add
lds
lcall
add
loopne
mov
ret
add
in
movsb
addb
add
les
add
mov
add
movsb
in
add
add
push
jae
lret
mov
imul
push
lret
add
hlt
lea
pop
pop
push
lea
sub
pop
lea
push
push
push
push
lea
push
push
call
mov
orl
scas
add
testb
add
add
add
sti
xchg
add
add
add
add
data16
mov
add
bound
popf
add
iret
add
mov
lahf
int
aam
bound
pop
sub
push
add
pop
mov
shr
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
ja
popf
scas
shll
add
popa
add
xchg
push
ror
add
ljmp
popf
scas
mov
add
test
add
add
push
add
lret
add
add
ljmp
cli
add
add
add
scas
jle
shlb
mov
add
add
aam
jno
fmull
fimull
ret
inc
pop
add
push
sub
pop
pushl
push
add
pop
popl
mov
push
add
shr
lea
ror
pop
add
xor
push
not
pop
lea
push
push
push
push
push
push
push
push
call
push
add
lock
fsubl
repnz
iret
jnp
add
add
testb
mov
bound
popf
xchg
in
lds
add
add
lock
fdivrs
add
jle
jbe
sahf
loope
add
add
sarb
add
hlt
add
mov
lea
pop
mov
push
ror
pop
add
xor
push
ror
lea
pop
rol
push
push
call
movl
filds
add
add
mov
add
lds
mov
add
iret
sahf
add
jmp
add
fxam
add
in
add
mov
imul
add
divb
add
gs
aam
mov
lea
pop
nop
push
push
lea
push
lea
push
push
push
push
push
push
call
jp
add
icebp
add
add
push
scas
jne
in
add
xchg
pusha
loope
add
add
add
loopne
sar
jnp
loope
popf
enter
add
xchg
add
std
mov
lea
pop
nop
push
push
lea
push
push
push
lea
push
push
call
add
jmp
sti
mov
hlt
mov
mov
add
push
xchg
cld
push
outsl
add
ljmp
push
into
jo
add
sarl
add
add
lea
pop
xor
nop
push
xor
inc
pop
nop
push
push
push
push
push
push
push
lea
push
push
call
fadds
add
je
xchg
sbbl
pop
xchg
bound
add
cmpsl
mov
xchg
movl
lods
add
add
out
or
fnstcw
add
lea
pop
inc
push
push
call
add
jbe
lret
add
addb
pop
add
aad
mov
faddp
push
testb
jge
xchg
xlat
add
push
test
add
jno
in
jne
mov
mov
lea
pop
nop
push
not
shr
xor
rol
pop
nop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
imul
mov
xchg
xchg
mov
je
mov
add
xchg
into
bound
lret
add
push
push
gs
insb
scas
add
mov
into
add
add
lcall
scas
add
add
add
cmpl
fimull
stos
add
lcall
out
aam
bound
cmpb
jne
push
add
shl
pop
add
push
inc
dec
pop
nop
push
pop
nop
cmp
je
push
push
lea
push
call
add
sahf
fidivs
add
int3
push
push
flds
call
add
in
add
scas
add
add
lds
add
add
pop
add
add
ret
imul
mov
add
add
cwtl
mov
xlat
mov
lea
pop
nop
push
shr
pop
nop
push
not
sub
dec
sub
pop
inc
push
add
shr
pop
nop
push
lea
push
push
push
lea
push
push
push
push
call
into
add
add
push
scas
lahf
je
add
xchg
push
add
lea
xchg
mov
add
jle
rclb
out
sub
rcr
add
mov
lea
pop
nop
push
push
push
call
add
mov
int
lcall
jle
add
push
push
add
add
push
movsl
gs
add
roll
pop
push
add
lret
add
mov
pusha
clc
add
popa
mov
mov
fs
leave
pop
fwait
push
repnz
int3
ret
add
mov
lea
pop
cmp
jb
push
sub
shl
rol
xor
pop
xor
push
ror
add
pop
jmp
push
lea
push
lea
push
call
testb
xchg
xchg
add
xchg
jle
pop
fidivl
call
mov
jno
mov
add
xchg
mov
scas
xchg
add
mov
hlt
call
imul
add
add
hlt
lea
pop
mov
push
lea
pop
add
push
lea
push
lea
push
lea
push
call
jno
mov
push
add
jge
lock
add
mov
add
stc
icebp
add
jbe
mov
add
mov
popa
mov
add
push
lret
cli
add
push
popa
add
add
jge
add
add
repnz
leave
icebp
add
loopne
lods
add
clc
add
xchg
hlt
lea
pop
movzwl
push
not
pop
mov
push
add
lea
shl
pop
add
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
pop
jno
add
add
imul
mov
roll
add
ljmp
jp
jno
les
add
mov
mov
mov
add
mov
pop
xchg
add
add
repnz
add
fsubl
mov
into
cwtl
xchg
pop
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
mov
sahf
add
mov
jl
icebp
stos
add
add
mov
test
jns
shlb
inc
stc
add
imul
add
pop
xor
xor
push
push
push
lea
push
push
call
jl
jne
in
xchg
add
add
mov
xchg
mov
enter
pop
add
add
add
test
xchg
stos
iret
mov
nop
add
add
in
jmp
jno
fldl
add
add
add
bound
mov
out
mov
lea
pop
shl
push
xor
add
add
pop
xor
push
push
push
call
mov
cmpsb
imul
add
icebp
jae
lods
add
pop
add
push
cmpsl
add
loope
in
imul
add
add
scas
mov
insb
add
addl
mov
sahf
add
out
add
mov
push
add
mov
lea
pop
shl
xor
push
dec
lea
ror
pop
shl
push
push
push
push
push
push
push
call
add
lods
lret
imul
cli
mov
rcr
jno
add
add
mov
add
pop
push
add
data16
mov
add
mov
rol
add
push
mov
xor
scas
add
add
add
add
faddl
mov
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
scas
jmp
add
fists
out
in
shr
insb
in
jmp
cmp
push
mov
cwtl
push
add
add
add
shl
add
jno
add
add
sahf
enter
xlat
jnp
mov
add
mov
mov
mov
fwait
mov
lea
pop
mov
add
push
lea
push
push
call
jl
loop
test
ret
arpl
add
int
xlat
subb
add
mov
mov
add
arpl
fdivl
mov
push
add
xchg
add
in
add
add
add
je
outsl
frstor
push
bound
mov
add
jbe
mov
jmp
lea
pop
pop
push
shr
inc
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
jle
add
cmc
std
stos
in
add
add
add
add
adcl
notb
mov
jns
add
roll
jns
jbe
push
js
add
fs
push
outsl
out
add
add
shll
mov
pop
shrl
add
ljmp
add
fucomi
lea
add
int3
push
add
jne
mov
lea
pop
pop
push
push
lea
push
push
push
call
shll
add
add
jno
pop
push
mov
andl
add
lea
push
in
les
xchg
add
loopne
mov
aam
bound
pop
leave
push
push
push
lea
push
push
push
push
call
mov
popf
cmpl
pop
add
add
mov
add
jge
add
scas
add
add
xchg
pop
stos
fwait
add
push
add
add
fsubs
out
mov
mov
popa
icebp
add
mov
lea
pop
ret
push
shr
ror
not
pop
push
mov
push
push
push
push
push
push
push
lea
push
push
call
add
outsl
xchg
jl
movl
pop
add
add
gs
add
add
ja
mov
lock
lret
ret
add
add
jb
push
nop
jne
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
call
add
add
scas
mov
add
push
addl
addl
fdivs
pusha
nop
testl
add
add
push
push
into
pop
loope
lcall
mov
mov
fadds
add
shl
int3
orl
push
push
push
add
pop
mov
push
lea
push
push
push
push
push
push
call
jae
push
add
mov
xor
icebp
movsl
jne
rolb
in
test
push
filds
iret
mov
roll
xchg
mov
mov
add
pop
xchg
movb
add
adc
add
mov
lea
pop
mov
push
shl
add
lea
pop
mov
push
inc
pop
test
je
push
lea
push
push
call
add
jb
mul
mov
lret
add
add
jno
popf
cmc
add
in
lcall
add
jmp
mov
add
stos
push
jmp
aam
fnstenv
fwait
mov
jo
add
movsb
sahf
cmc
cmpsl
out
mov
xchg
incb
nop
mov
fneni(8087
add
pop
mov
test
je
push
add
pop
mov
push
push
push
push
lea
push
call
addb
pop
add
fmuls
hlt
scas
scas
mov
les
mov
test
add
add
add
je
push
mov
add
mov
js
add
movsl
clc
mov
add
imul
add
add
ficoml
xchg
icebp
add
jae
add
add
stos
mov
shrb
add
lcall
add
mov
lea
pop
mov
mov
push
shr
shl
pop
inc
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
mov
xchg
lea
mov
add
xchg
jns
add
push
loope
mov
pop
add
sahf
in
fistpl
push
add
repnz
lea
pop
cmp
je
push
push
push
lea
push
call
jle
lds
jo
loope
test
add
xchg
fwait
add
add
xchg
mov
test
xchg
clc
mov
rorb
add
add
add
js
imul
add
jnp
xchg
loop
add
xchg
add
add
add
addb
add
pop
test
je
push
push
push
push
push
push
push
call
add
add
into
lcall
add
rcrb
jne
gs
stos
jge
add
mov
add
add
add
cmpsb
outsl
add
add
add
faddl
popf
add
push
add
add
leave
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
nop
lcall
mov
add
mov
loopne
add
mov
ljmp
mov
mov
jne
jne
mov
add
push
mov
add
scas
mov
lea
pop
inc
push
lea
dec
pop
cmp
je
push
push
push
lea
push
push
push
call
jnp
pushf
add
hlt
add
frstor
in
pop
add
add
jbe
xchg
clc
add
push
add
add
subl
lods
jne
push
add
fldcw
add
ljmp
lods
add
add
mov
bound
push
stc
push
in
mov
add
mov
add
mov
lea
pop
test
jne
push
push
push
call
mov
mov
jns
add
insb
sti
add
xor
add
xchg
loop
aad
pushf
add
out
loop
push
mov
xchg
add
add
add
in
mov
lea
pop
xor
push
push
push
push
call
add
rolb
add
cld
add
add
add
add
add
mov
add
add
add
add
add
test
fwait
add
add
fmull
push
xor
pop
pop
push
push
push
push
call
movsl
leave
mov
jp
fwait
add
add
jecxz
fcomps
fadds
movl
push
add
lea
cmc
cld
add
mov
add
mov
jne
shlb
add
jl
leave
add
push
add
test
add
pop
pop
push
inc
sub
pop
pop
push
push
push
push
push
call
add
ja
pop
mov
add
xchg
add
add
add
stc
jmp
add
bnd
add
mov
add
mov
mov
stos
mov
jne
add
pop
xchg
cmpl
add
add
add
add
pop
iret
arpl
out
mov
cmpsb
repnz
hlt
pop
imul
lea
pop
leave
push
push
push
push
call
loopne
add
scas
lcall
mov
popf
out
cwtl
add
repnz
xchg
scas
cltd
movsl
add
rcl
popa
jge
mov
out
pop
rcll
add
mov
adc
or
push
push
call
xchg
cmpsl
insb
xlat
in
rorb
cli
add
add
frstor
sarl
add
add
mov
jmp
xchg
add
lret
add
xorb
push
mov
add
add
mov
lea
pop
mov
inc
push
sub
pop
cmp
jne
push
push
push
push
call
add
addr16
idivb
nop
stc
add
add
outsl
leave
add
mov
add
add
add
mov
xor
xchg
nop
mov
movsb
cmc
add
pop
add
add
js
add
add
int3
pusha
add
add
push
mov
add
aad
jl
fstps
fmull
jle
mov
push
push
push
push
push
lea
push
push
call
sbb
data16
popa
add
add
push
stos
xchg
mov
jne
cmpsb
pop
add
mov
mov
ret
xchg
add
rcll
cmc
scas
add
gs
mov
add
enter
mov
xchg
add
add
add
stc
or
repnz
xlat
mov
stos
testl
repnz
in
pushf
clc
mov
addl
cld
pop
mov
popa
sbb
test
je
mov
push
lea
push
push
push
push
push
push
call
lret
add
add
push
jp
add
data16
lret
shrb
add
jmp
movsb
fldl
mov
add
pusha
add
loop
cwtl
push
push
add
lcall
lea
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
fwait
add
push
add
loop
iret
mov
jae
add
add
cli
add
add
mov
rolb
ljmp
add
add
aam
bound
cmp
jne
push
push
push
call
add
in
fldl
push
mov
out
aam
add
repnz
add
push
jnp
push
add
imul
add
add
out
std
enter
out
outsl
jae
test
mov
jp
add
pushf
scas
xchg
add
mov
je
add
add
filds
add
xchg
add
jb
hlt
lea
pop
mov
test
je
push
push
lea
push
push
call
icebp
les
jmp
mov
mov
mov
add
out
jge
rolb
add
mov
sarl
add
movsb
fadds
add
add
pop
mov
add
push
add
pop
cmp
je
push
push
push
lea
push
call
push
add
xchg
into
rclb
xchg
xchg
cli
add
add
add
add
add
add
xchg
fld
mov
cmpsl
clc
add
jns
test
int3
xchg
mov
cld
lea
pop
jmp
push
push
push
push
push
push
push
call
jne
loop
xchg
ja
add
add
push
xchg
add
add
jmp
add
mov
add
add
ljmp
add
add
xchg
stos
imul
mov
incb
outsl
lret
addl
add
bound
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
add
add
add
movsb
lret
bound
mov
add
call
add
add
in
push
lods
mov
stos
in
mov
add
mov
add
test
lahf
add
xchg
add
stos
add
add
add
in
add
mov
lea
pop
pop
push
add
xor
shr
pop
pop
push
push
call
add
add
ret
add
outsl
hlt
lahf
jecxz
fadds
rcr
jbe
add
add
arpl
xchg
ja
add
add
lods
add
fcoms
add
push
add
out
add
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
mov
in
mov
add
add
add
loop
add
add
mov
jbe
add
push
add
lock
add
std
add
jo
add
lret
push
add
test
mov
cwtl
scas
stc
add
in
jecxz
imul
imul
cmp
mov
addr16
add
mov
mov
ljmp
imul
lea
pop
leave
push
push
push
push
push
push
push
push
push
push
call
add
add
xlat
add
add
add
data16
data16
test
ficoml
add
jmp
clc
arpl
add
push
orb
ret
push
add
lea
pop
lea
pop
push
rol
pop
pop
push
sub
pop
pop
push
push
push
push
lea
push
call
negl
push
les
movsl
add
mov
pop
fiadds
popf
xchg
add
mov
add
add
add
popl
add
scas
add
out
lods
in
add
cltd
lock
add
rclb
insb
jbe
arpl
fiaddl
add
add
cmc
out
add
push
data16
pop
leave
push
lea
pop
ret
push
push
push
push
lea
push
push
push
call
add
jno
add
test
cltd
lret
in
xchg
add
mov
push
add
mov
leave
add
iret
mov
rolb
in
add
xchg
add
mov
jle
mov
lea
pop
mov
pop
push
push
push
push
call
add
add
loopne
test
add
cld
cwtl
add
lahf
add
enter
add
pop
rolb
loope
add
sar
jnp
mov
pop
add
add
idivl
adc
push
pushf
les
outsl
faddl
add
add
cmpsl
mov
lea
pop
pop
push
xor
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
xchg
fchs
fs
add
cmpsl
mov
jbe
mulb
mov
push
push
add
ret
add
xchg
jle
insb
lods
mov
pusha
xchg
mov
mov
push
addr16
pop
push
lea
push
push
push
call
jns
pop
pop
add
add
xlat
jne
mov
add
aad
scas
add
mov
add
push
add
add
jb
add
mov
add
notb
test
xchg
out
ja
mov
jecxz
out
jecxz
imul
scas
cmpsb
add
aam
bound
pop
leave
push
dec
pop
ret
cli
cwtl
pop
jb
test
jb
pop
pop
jb
fcomps
pop
pop
jb
pop
pop
jb
jmp
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
loope
cli
std
adc
pop
orb
daa
pop
nop
out
xchg
addb
mov
fwait
xchg
jl
dec
jbe
mov
stos
leave
imul
pop
xchg
and
pop
pushf
stos
data16
adc
or
mov
inc
add
pop
and
lods
frstor
mov
cwtl
jl
imul
in
aaa
test
xchg
dec
sbbl
adc
add
add
es
and
adc
insb
cmpsl
push
mov
sbb
out
bound
pop
mov
jns
mov
es
pop
ret
mov
and
xchg
push
mov
xor
push
sub
insb
cmp
mov
loop
icebp
in
add
fiaddl
sub
mov
ret
sahf
cmpsl
dec
ds
out
inc
xchg
movsb
jo
aaa
mov
adc
imul
add
fmul
mov
out
cwtl
mov
outsl
call
sub
hlt
jmp
lret
in
test
adc
adc
mov
add
adc
cmpsb
popf
aad
xchg
rolb
pop
push
cmc
out
movb
xchg
or
int3
jl
xor
push
jg
ficoms
lcall
push
jecxz
or
lahf
je
dec
loopne
icebp
incl
ja
cmp
jge
jge
sub
fcomi
prefetch
or
inc
dec
push
out
jp
cwtl
push
test
adc
xor
push
stos
cmpsl
dec
fcmovnb
mov
xor
sub
call
fwait
pushf
into
sahf
mov
outsb
jae
sbb
stos
addr16
pop
xchg
sub
movb
icebp
iret
rol
imul
mov
mov
arpl
pop
xchg
shrl
jo
xchg
and
ja
ret
in
jnp
ljmp
adc
dec
mov
and
popf
pop
decl
flds
gs
xor
push
xor
stc
mov
lea
iret
xchg
rorl
mov
in
xchg
daa
popa
mov
jne
test
iret
gs
das
mov
out
ds
mov
insb
leave
ds
push
pop
gs
sbb
sbbb
fnsave
repnz
std
insl
inc
imul
push
fdivs
pop
pop
xchg
and
cmp
push
ljmp
aam
xor
jae
repnz
sub
or
cmpps
mov
adc
pop
mov
sub
popa
adc
xor
jmp
or
mov
cmpl
mov
xchg
test
jns
icebp
shlb
hlt
int3
jp
cmc
mov
fbld
or
test
jle
andb
scas
mov
mov
in
inc
test
incb
mov
jo
fidivrl
les
js
mov
mov
pop
rcl
outsb
dec
outsb
out
sbb
popf
xor
xor
test
jns
dec
push
je
push
sub
ljmp
test
jb
clc
xlat
lret
mov
mov
popa
fldl
adc
sbb
inc
add
loop
inc
mov
outsl
xor
or
push
repnz
in
cmpsb
icebp
imul
divb
loop
mov
add
fs
and
idivl
add
dec
cmpsb
andb
aam
icebp
fwait
das
divb
add
test
loop
shlb
cmpsb
pop
imul
in
call
jmp
and
add
nop
cmp
adc
cmc
sub
rcl
xchg
mov
mov
pop
lahf
pushf
pop
mov
cmpsl
shll
clc
stos
xor
dec
rorb
mov
xor
jae
mov
ljmp
sub
scas
setge
inc
popa
mov
sbb
inc
push
lahf
inc
mov
cltd
imul
cmp
and
out
push
cmp
xchg
mov
mov
in
xor
rorb
mov
cmp
sbb
and
gs
test
in
add
xor
sbb
cmp
subl
and
and
mov
mov
dec
outsb
lods
adc
sub
std
les
lea
xor
nop
or
jo
pop
add
fwait
inc
in
add
inc
mov
in
jns
dec
xlat
add
sarl
sahf
add
js
and
sub
lcall
cmp
loopne
lea
ja
dec
jb
fs
push
ljmp
mov
cmp
shll
dec
aam
fwait
pop
decl
lods
jb
mov
cmp
mov
mov
shlb
leave
repz
jae
mov
call
call
cs
dec
inc
lods
mov
fdivrl
test
cmp
add
pop
push
add
jo
jo
or
mov
movsb
xor
test
mov
js
loop
movsb
fsubrs
clc
push
pop
jb
dec
sbbb
cmc
aas
sbb
dec
xchg
push
ret
cmp
adc
mov
mov
adc
popf
int3
cmp
mov
lcall
cmp
jno
cli
sahf
outsb
mov
sub
les
pop
stos
mov
sahf
xchg
sub
mov
mov
shr
scas
test
mov
cmp
outsb
jae
insl
movsb
push
pop
push
stc
pop
mov
xchg
stos
mov
mov
xchg
push
cmp
push
sub
imul
jae
mov
out
push
stos
push
jle
dec
ja
mov
std
imul
movsl
jae
mov
hlt
rorl
cmp
repnz
pop
cmp
inc
cmp
push
roll
cltd
or
iret
into
lcall
mov
bound
jle
mov
pusha
stos
inc
xor
call
ret
dec
cmp
in
mov
outsl
sbb
add
into
test
mov
aaa
out
repnz
stc
ret
sub
je
sub
out
pushf
stos
out
lret
mov
lret
lods
dec
mov
and
add
fwait
dec
push
outsl
cmp
pop
idivl
dec
add
pop
pop
std
leave
jmp
inc
int3
lret
inc
xchg
cli
xchg
gs
inc
pop
in
inc
scas
adc
xor
je
and
subl
xchg
xchg
or
hlt
xor
lret
jge
dec
dec
mov
jae
test
jno
movsbl
push
mov
in
xchg
popf
clc
xor
ljmp
out
cli
pop
sbb
in
enter
rclb
pop
bound
xchg
mov
push
adc
cmp
das
xchg
jb
mov
es
imul
das
fs
xlat
je
add
loop
and
mov
stos
idivb
sub
inc
dec
loop
in
clc
mov
out
mov
dec
mov
cmp
mov
pop
lahf
jmp
mov
movsb
lret
cmpsb
les
cmp
sti
pop
adc
lds
or
lahf
xchg
idivb
pop
xchg
add
hlt
mov
aaa
mov
test
inc
add
lcall
dec
out
mov
push
or
inc
mov
test
and
filds
and
dec
ret
cltd
jnp
push
sub
int3
mov
sbbl
fimuls
insl
xchg
popa
aad
pop
push
xchg
push
fs
not
hlt
lcall
cmp
mov
adcb
out
xor
cmp
iret
repz
test
lret
idivb
icebp
fistl
push
mov
cwtl
fdivrl
jo
std
movsl
lret
mov
jb
fimuls
int
outsb
loop
in
inc
gs
loope
mov
insl
es
mov
add
enter
ret
lret
lret
mov
test
sbb
ljmp
cwtl
pop
push
and
sbb
pop
mov
or
lock
xchg
xchg
adc
aaa
cmpsb
jae
dec
pop
mov
fsub
xchg
mov
lcall
fcomi
scas
repnz
cltd
repz
shll
or
or
mov
mov
mov
out
jbe
movlhps
mov
xorb
push
scas
lods
insb
inc
inc
imulb
imul
mov
insb
or
sub
js
std
and
cltd
cmpsl
fisttpl
lea
push
stos
inc
aam
lret
jmp
icebp
and
pop
lahf
push
enter
std
pop
jae
outsb
out
jo
mov
cmpb
and
xor
lcall
mov
lahf
data16
mov
movsb
shll
lret
arpl
mov
leave
push
aad
clc
jg
sti
sbb
shl
push
adc
jns
adc
add
pop
sti
mov
stos
xchg
xor
fsubrl
test
dec
add
lahf
jae
mov
scas
jg
jno
mov
sbb
dec
jge
daa
push
das
sub
mov
jns
cmc
nopl
fwait
push
js
sarb
xor
arpl
inc
std
mov
enter
mov
aas
inc
fisubrs
fimuls
xchg
js
ret
xor
add
in
cmp
mov
add
sub
nop
loop
fwait
xor
rcll
test
shrl
fs
pusha
xor
mov
sub
je
repz
jne
jbe
and
or
mov
xor
shlb
xchg
xor
jb
inc
into
pop
add
stos
xor
fistl
inc
jns
xor
mov
lods
movb
pop
and
insl
cmp
stos
jns
xchg
pushf
inc
add
or
popa
xor
aas
jge
jmp
mov
out
test
or
sub
jecxz
pop
scas
adc
pop
jbe
gs
lock
movsb
jns
add
mov
cmc
push
fdiv
mov
pop
jne
jge
fisubrs
or
ds
dec
in
push
divl
or
pop
dec
add
ret
int3
mov
inc
enter
mov
fists
data16
nop
fnstsw
xchg
pop
rcrb
pusha
xchg
jns
and
dec
jge
cmp
repz
in
mov
xor
stos
jae
and
xchg
hlt
popf
mov
gs
or
dec
jbe
aas
add
imul
mov
mov
cmp
add
add
push
jg
out
mov
cmpl
stc
pop
cli
xor
stc
dec
ret
mov
sub
xchg
xchg
hlt
lds
andnps
and
cwtl
fs
push
rorb
inc
adc
inc
or
aad
adc
cltd
mov
lret
ficoms
scas
jae
f2xm1
push
mov
or
sub
in
and
mov
bound
cwtl
imull
pop
add
mov
sahf
lock
std
inc
out
sti
adc
ret
scas
outsl
mov
loope
sub
pushf
popf
jne
and
rcl
mov
bound
mov
and
cmp
clc
mov
pop
inc
je
es
xor
cwtl
leave
jo
cmp
push
jge
pop
adc
lahf
cwtl
mov
movsl
push
ds
jno
sarl
scas
sbb
mov
icebp
mov
inc
xor
cmp
imul
adc
fwait
aas
adc
inc
mov
pop
or
jns
mov
ss
cmpsl
push
push
lret
mov
out
add
cmpsl
outsb
sbb
repnz
mov
cmp
leave
mov
dec
push
nop
push
mov
mov
cmp
les
sub
filds
repz
xor
fadd
xor
pop
adc
out
xor
xor
ljmp
push
mov
aaa
fldt
add
fildll
push
pop
imul
pushl
adc
loopne
adc
pop
loop
pop
sub
aam
jg
in
jnp
rcll
int
sub
stos
jne
sbb
shrl
ror
mov
push
pop
test
cmp
test
xchg
aad
jp
fidivrs
scas
sbb
out
sahf
xchg
insb
dec
xlat
add
mov
jge
lret
jge
scas
lods
scas
iret
dec
lret
xchg
rcll
aad
xchg
add
cld
jle
in
imul
push
call
mov
lea
das
cmpsb
fdivrs
out
dec
nop
in
and
outsl
or
gs
sbb
jp
push
mov
and
cmp
pushf
mov
mov
movsb
es
adc
clc
adc
lods
sub
dec
or
lret
jecxz
or
leave
cltd
fdivrs
out
mov
xchg
popa
cmpsl
bound
dec
xor
mov
xchg
test
das
scas
dec
cwtl
je
orb
aas
loop
cmp
sbb
add
imul
jae
mov
arpl
xlat
enter
mov
in
jnp
pop
loop
push
popf
mov
loope
cmp
push
sbb
xor
stos
adc
pop
cli
bound
xorb
xor
adc
pop
call
mov
dec
add
mov
into
out
out
inc
sub
les
ja
mov
or
add
bound
vpmuludq
mov
aad
mov
lods
subl
std
jae
jo
pop
arpl
mov
inc
fildl
fndisi(8087
cld
or
test
das
lea
mov
jge
call
push
std
cmp
mov
shl
xchg
inc
push
push
jle
and
or
mov
jb
sbb
push
lods
inc
cli
test
jmp
push
outsl
or
or
fistps
mov
mov
leave
bound
nop
lds
xchg
add
loopne
add
int3
pop
aaa
mov
push
ja
hlt
xchg
lock
rcll
test
sub
daa
xchg
testl
imul
std
xor
jmp
aad
sbb
pop
lcall
mov
into
gs
cmpsb
lods
xor
jle
inc
sub
and
popf
jo
dec
pushf
jle
in
xchg
pusha
stos
fdivrl
jg
js
std
jecxz
loopne
push
jne
cmpsb
clc
imul
iret
mov
adc
ds
mov
daa
pusha
dec
mov
sbbb
in
pushf
push
sarl
test
insb
lcall
outsb
ljmp
push
stos
cmp
push
add
jne
push
aad
and
mov
lret
pop
jmp
int3
push
lcall
into
mov
pusha
adc
imul
orb
jne
mov
sbb
fsubr
jne
call
inc
push
sbb
sub
jae
test
test
dec
mov
int3
in
arpl
cmp
andb
repz
cmp
xor
push
sti
pop
loop
cmc
xchg
sub
sub
pop
sub
and
insb
nop
pop
sub
mov
dec
sub
lret
mov
pop
movsl
adc
jnp
je
repnz
sbb
adc
push
cmpsl
or
aaa
gs
mov
inc
aad
pop
add
add
xor
mov
sub
dec
insl
fwait
scas
insl
push
out
movsb
pushf
cmpb
pop
push
xor
dec
or
cwtl
mov
mov
mov
cmp
or
gs
mov
lea
rclb
adc
adc
dec
std
imul
fcoms
pop
cld
xchg
lahf
cmp
imulb
push
leave
icebp
push
jo
negb
fidivs
jg
or
push
mov
mov
dec
mov
jb
add
push
test
jbe
test
stos
sbb
jg
cmp
jl
sbb
xor
xorl
test
into
loope
dec
idivl
push
int3
ret
and
idivb
cmp
lea
adc
jecxz
loop
jb
fildll
or
scas
xchg
std
mov
push
sar
mov
in
subb
xchg
aas
push
and
shrb
in
mov
aaa
jge
sub
xor
mov
jns
sbbl
xchg
stos
cmpsl
negb
adc
in
push
testl
xchg
repz
ret
mov
repnz
jle
fcoml
adc
mov
mov
adc
ffree
dec
jns
or
sub
xchg
call
dec
mov
sbb
adc
adc
aas
mov
xchg
stos
mov
adc
add
pop
cmpsb
inc
pop
adc
pop
repnz
xor
icebp
iret
push
lcall
push
aam
jbe
lods
cli
or
push
ficomps
mov
out
or
xor
movsl
mov
sub
adc
sti
fisubrs
filds
bound
jns
ds
mov
sub
pop
pop
push
imul
subl
cs
dec
into
outsl
and
testl
dec
test
xor
int
mov
test
cmc
insw
fdivl
cmp
xchg
fidivrl
push
in
jae
test
sub
mov
dec
inc
mov
sub
sub
xor
push
cltd
testl
xor
inc
push
push
mov
cmp
jg
pop
iret
stc
or
rol
adc
sahf
cmp
inc
push
dec
cmc
outsl
push
loop
lea
out
push
cli
cmp
mov
mov
stos
cmp
sti
inc
ss
insb
repnz
cmp
cmp
int3
xchg
inc
aaa
les
stos
sbb
mov
sub
shll
shr
repz
movsb
rclb
pop
add
js
mov
adc
cmpsl
std
das
push
rcr
repnz
sahf
lock
jns
or
jl
es
xor
iret
jb
mov
xor
push
dec
pushf
cmp
clc
ljmp
insb
faddl
sbb
xchg
dec
sahf
repnz
mov
movl
out
add
mov
loopne
push
jl
pop
mov
cmp
push
divl
out
pop
mov
mov
shr
xchg
push
adc
mov
arpl
insl
ret
lea
cltd
lcall
push
mov
pop
inc
test
adc
inc
mov
sti
jns
adc
movsl
rcrl
xor
pop
mov
lock
loope
mov
push
adc
mov
pop
pop
fidivl
add
imulb
call
mov
push
xchg
lret
mov
scas
cmpsb
lods
adc
mov
jle
push
sub
add
mov
push
aam
mov
or
scas
repnz
mov
mov
cmp
cmp
lods
aad
cli
adc
vmread
enter
js
pop
dec
mov
rclb
mov
ret
mov
sarb
ret
add
popf
lahf
lret
add
call
lds
sbb
aam
mov
xchg
xchg
push
mov
xchg
cmpsb
inc
test
cmp
cmp
or
mov
or
inc
pop
xchg
xchg
in
or
pop
sahf
ficoms
jg
negb
ljmp
lods
ds
xchg
add
movsl
fwait
scas
out
pop
xor
or
mov
mov
sbbl
mov
sub
pusha
xor
imul
fcomip
xchg
sbb
or
xlat
xchg
fidivl
or
mov
daa
xchg
std
lret
adc
sub
add
test
pusha
pop
xchg
dec
mov
fadd
daa
jnp
lds
ljmp
fs
pop
mull
mov
int
rcrl
sbb
xor
adc
call
daa
add
cld
shll
lods
popa
cmpsb
jmp
inc
pop
js
into
adcb
sub
mov
loope
flds
cmp
mov
iret
out
jno
das
pop
jp
jg
gs
les
fwait
xor
xchg
jmp
xchg
ss
xor
mov
pop
or
mov
sbb
or
mov
ss
mov
subb
xchg
cmpsb
push
cmp
jbe
push
test
xor
mov
xchg
mov
sub
ffree
add
xor
ror
sbb
or
xor
int
mov
jmp
fs
shrl
stos
mov
stos
scas
pop
std
mov
or
mov
lods
mov
pushf
sbb
dec
sub
sbb
adc
xchg
lea
les
fsubl
cli
subb
jae
mov
mov
push
inc
scas
lods
ret
jne
push
lods
insb
add
stos
callw
jp
cmpsb
adc
scas
jbe
mov
ja
mov
dec
add
int
push
aam
pop
mov
or
popa
popf
mov
or
inc
pop
sub
inc
xor
fucom
cmp
mov
inc
jnp
push
lret
mov
scas
pop
imul
xchg
jl
xor
cmp
push
stos
mov
push
aam
aad
mov
fucomi
js
push
mov
xor
out
cmpsb
in
fnstcw
mov
dec
mov
inc
sbb
mov
jbe
pop
or
out
jl
mov
inc
mov
or
ss
mov
xor
pushf
out
push
mov
aam
dec
xor
push
add
push
inc
sbb
cmpsb
into
push
add
adc
add
lret
flds
mov
mov
bnd
mov
push
fnsave
cmpsb
test
dec
cmc
cltd
push
pop
fdivs
pop
inc
mov
fdiv
bound
jae
dec
pop
jle
dec
shll
aas
insl
dec
iret
fcomi
sbb
orl
mov
cmp
addr16
imul
push
dec
inc
lods
push
orb
jecxz
pop
mov
xchg
fcmovnbe
mov
push
jno
and
call
or
sahf
shll
scas
sub
jle
mov
sbb
test
sub
mov
hlt
pop
loop
pushf
jb
mov
imul
loope
psubusb
lock
orb
adc
loope
inc
movsb
lahf
sbb
imul
jecxz
cwtl
push
inc
mov
cmpsb
std
or
shrl
into
iret
fs
or
pop
hlt
aad
dec
jns
push
cmp
and
idivl
icebp
scas
movsb
jle
lea
add
loopne
popa
sub
adc
shrl
sbb
rol
es
out
in
lcall
aaa
dec
mov
lock
push
adc
fidivrl
xor
mov
out
imul
dec
rcr
movsl
sub
jecxz
enter
dec
sahf
enter
pop
xchg
mov
jbe
sbb
jne
xchg
sahf
adc
xor
shrb
jp
add
mov
in
xchg
push
in
inc
xor
jmp
mov
push
insl
lods
stc
repz
cmp
pop
or
stos
push
xchg
mov
cld
jg
cmp
pop
inc
cmp
sbb
xchg
mov
gs
inc
aam
rol
scas
sbb
jo
and
jnp
je
jecxz
push
adc
out
repnz
addl
pop
pushf
mov
cmp
pusha
jmp
dec
xchg
pop
fcomip
test
sar
or
xlat
xchg
push
push
pop
andl
or
in
adc
rcrl
imul
jb
jle
int
mov
inc
cltd
push
adc
lods
cs
xchg
shl
and
xor
in
mov
nop
in
sbb
and
or
mov
inc
push
inc
loop
jmp
fs
decb
push
sahf
mov
lock
mov
outsl
cmp
add
adc
testl
scas
mov
mov
cwtl
adc
aas
mov
adc
adc
push
loopne
xlat
cmpsb
scas
imul
lods
sub
rcl
mov
mov
xchg
sbb
mov
call
inc
lock
mov
rcrb
push
adc
inc
or
jne
mov
stos
mov
mov
push
cmp
into
cli
call
adc
mov
jmp
sub
stos
mov
or
sub
fsubp
jb
inc
sub
les
movsb
xchg
xor
mov
dec
cmpsb
fidivrl
xor
jbe
das
mov
pushf
loopne
fisttpll
jns
shr
test
cmc
daa
loop
push
mov
xchg
loop
dec
insb
mov
jp
shlb
and
rcrb
in
pop
fidivrl
inc
jns
pop
pushf
shrl
pop
sub
push
add
mov
pop
imul
pinsrw
es
fsubs
mov
cli
cmp
inc
sbb
mov
jmp
movsb
fnsave
pop
lcall
call
test
xchg
outsl
outsb
clc
dec
pcmpeqw
cmp
idivb
xchg
push
mov
scas
xlat
add
mov
cmpsb
pop
push
cmc
add
icebp
mov
psubq
fscale
mov
cmpsb
es
out
pop
mov
into
cmc
mov
xor
cmpsb
and
inc
test
enter
cli
in
sbb
fwait
cld
xchg
jnp
xchg
rorb
ficoms
mov
in
movsl
push
movsl
mov
in
in
xlat
notl
inc
lahf
sbb
mov
popa
inc
sub
sbb
add
jns
xchg
dec
xchg
daa
adc
adc
mov
sahf
leave
mov
fcomps
imul
imul
adc
jbe
test
mov
xor
mov
sub
or
jmp
adc
jmp
cld
cld
das
mov
jns
je
arpl
fsubr
and
dec
cli
dec
fs
add
sbbl
test
push
fildl
sets
dec
adcl
cld
sbb
mov
jns
and
adc
mov
lcall
sub
pop
arpl
inc
mov
loope
sub
lret
sbb
pop
iret
fmull
fstps
push
mov
daa
pop
mov
xor
je
scas
dec
sti
sbb
push
push
sti
xchg
mov
imul
dec
pop
shrb
jp
pop
mov
leave
and
sub
push
dec
pop
pop
test
sub
jge
xchg
hlt
jb
ljmp
xorl
pop
xor
inc
push
sub
xor
inc
pusha
dec
push
stc
cmp
stos
std
mov
mov
inc
into
lods
sbb
jns
inc
into
rol
sbb
dec
inc
xchg
add
arpl
push
and
out
and
jp
add
in
in
jg
outsl
cs
arpl
cmpsl
enter
lds
jecxz
push
inc
mov
bound
and
loop
push
sub
xor
ror
nop
mov
testl
mov
clc
jns
cmp
pusha
mov
add
jmp
xlat
dec
mov
sub
mov
mov
or
jecxz
and
sarb
dec
jno
sbbl
push
mov
inc
push
jne
sbb
or
icebp
bound
int
xor
iret
push
push
pop
jecxz
jecxz
push
push
adc
jge
cmp
dec
fldcw
imul
push
lds
xchg
std
icebp
sar
cld
lcall
setl
push
and
out
iret
jmp
aad
test
sub
cmp
ffreep
jo
adc
test
cmpsl
xchg
xlat
xor
xchg
adc
mov
cli
adc
pop
int3
lods
int
pop
xor
mov
xlat
jb
in
fucom
out
jo
js
lods
inc
xor
test
push
movsl
cmp
outsb
push
xchg
xlat
cld
and
push
dec
scas
mov
mov
icebp
mov
jecxz
adc
dec
filds
insl
out
cmp
clc
mov
push
gs
mov
mov
subb
pop
inc
lret
mov
cmp
inc
add
divl
add
hlt
movsl
adcl
loope
pop
icebp
xchg
scas
pushw
int3
nop
cmpsl
jp
icebp
daa
sbb
es
outsb
xlat
mov
out
adc
lock
les
or
push
mov
adc
push
pop
test
cmpsb
lcall
je
roll
mov
push
gs
lret
or
mov
scas
mov
push
inc
movsb
lret
mov
int
mov
xchg
cmp
add
and
ret
test
out
mov
popa
outsl
or
ffreep
mov
xor
lret
scas
mov
orb
xor
add
jl
add
lahf
fs
jns
cmp
testl
sbb
adc
cmp
xlat
test
xor
enter
out
add
loopne
or
sbb
dec
cmp
inc
orl
test
add
cmp
xchg
stc
dec
xor
add
sub
mov
icebp
arpl
mov
mov
mov
sahf
filds
xchg
jne
aas
idiv
pop
and
leave
outsb
sub
in
cltd
aas
and
lods
push
mov
lods
push
xchg
icebp
bound
inc
imul
jo
xchg
enter
movsl
shrl
fs
xor
push
mov
pop
sbb
push
mov
mov
cmp
cmp
cmp
pop
sub
jmp
and
inc
jecxz
loope
loope
das
adc
in
cld
shrb
sub
shlb
lret
mov
adc
xorl
and
jns
jne
adc
aam
stos
daa
push
push
pop
loopne
xchg
pushf
into
js
mov
fs
cld
sub
mov
or
xor
cmp
jge
jns
roll
inc
xor
cmc
fnstenv
inc
jg
es
add
stc
xlat
mov
mov
push
adc
inc
jle
sub
inc
jo
cmp
popf
lahf
je
cwtl
xor
push
xchg
loopne
stos
and
lods
or
je
ja
dec
mov
stos
fstps
fcompl
push
or
jnp
js
jle
jmp
ds
mov
dec
dec
xlat
inc
xor
es
into
push
xlat
hlt
push
push
sbb
sub
fisubl
jl
jl
imul
sbb
dec
and
mov
sti
lock
ss
mov
inc
pop
sub
inc
xor
cmpsl
cmp
clc
xlat
push
popf
es
std
sarb
mov
das
sbb
inc
jne
cld
mov
pop
dec
insl
leave
pop
and
sahf
jo
pop
dec
aaa
aas
push
add
cmpsb
testb
aaa
cmp
mov
jl
rcll
stos
push
mov
inc
pop
ja
pop
std
cmp
mov
pop
mov
rclb
test
repnz
adc
push
pop
sub
rorl
repz
mov
repz
fists
loope
shll
dec
mov
lds
sbb
and
enter
and
inc
insl
sbb
leave
fwait
std
ret
jns
fs
push
and
xchg
and
xchg
xchg
jns
add
ficompl
jno
je
mov
sbb
sub
hlt
sbb
roll
roll
out
inc
cwtl
push
aad
jbe
addr16
sub
ss
inc
pop
aaa
pop
add
jle
int3
outsb
data16
add
mov
or
rolb
pop
inc
xchg
into
sub
cli
outsb
mov
sti
and
lds
fildl
or
and
sub
jb
in
mov
cmpsl
cmp
negl
xor
add
cmc
mov
imul
test
leave
imul
in
pop
mov
fcomps
or
or
movsb
cmp
ret
addr16
jp
add
xor
push
xor
jecxz
add
ss
addr16
xchg
cmc
mov
xor
imul
mov
cmpsb
setp
iret
sahf
dec
cmc
out
cmpb
sbb
call
nop
sbbl
das
and
xchg
ljmp
ss
dec
repz
or
push
mov
movsb
cmc
mov
add
sub
pop
or
xchg
ficompl
pop
fs
mov
mov
pop
in
push
in
sub
add
loopne
jnp
jle
dec
push
mov
mov
push
and
stc
pop
cmp
or
cmp
xor
btc
dec
mov
xchg
sbb
iret
mov
fiaddl
sub
push
cli
stos
push
orl
dec
pop
loop
mov
mov
es
pop
insl
sbb
dec
jge
xchg
and
dec
cmp
pop
add
test
out
outsb
jg
rcrl
ss
push
in
int
mov
in
xlat
adcb
gs
test
popf
sub
add
sbb
push
cmpsb
in
add
in
cmpsb
aam
adc
jno
mov
je
insl
and
pop
gs
js
jae
in
pushf
mov
pand
mov
das
pcmpeqd
inc
fwait
ret
cltd
hlt
test
xchg
out
mov
cltd
jp
pop
push
cmp
add
and
popa
sbb
pusha
pop
and
mov
cld
xchg
xchg
test
dec
les
aad
lahf
dec
dec
mov
sub
stc
daa
subb
mov
movl
jmp
mov
or
fucomp
ja
rcrb
int3
inc
and
adcb
ret
pushf
pop
stc
pushf
je
adc
cmp
cltd
insl
push
std
insb
lods
fcomps
popf
cwtl
div
nop
xchg
jae
sbb
jae
sahf
jo
or
push
daa
ss
pop
and
cmp
stos
loop
or
outsb
outsb
repnz
loope
arpl
mov
inc
out
push
mov
inc
sub
fnstcw
fldt
xor
mov
jb
adc
out
aad
pop
add
call
or
mov
test
and
lahf
rorl
pop
lods
loop
add
xchg
push
push
xchg
mov
mov
mov
jl
mov
jbe
lea
pusha
rcrl
arpl
sub
popf
xchg
fidivrs
idivb
aad
push
fsubp
mov
xchg
add
movsb
repz
out
lods
jns
movsb
cmpb
movsb
cmp
inc
xchg
xor
enter
push
testb
adc
xor
sbb
nop
shrb
mov
les
jmp
jl
dec
or
xor
xchg
sbb
and
fstpl
fdivrp
pop
xchg
inc
mov
icebp
sahf
rcll
in
cmp
je
icebp
pushf
subb
jo
jge
scas
pop
arpl
outsl
mov
hlt
dec
pop
out
in
mov
repnz
inc
adc
or
xor
push
adc
cmp
enter
fistps
clc
and
bound
jo
or
inc
inc
xchg
nop
push
xor
or
dec
dec
orb
sbb
mulb
mov
mov
stc
shrl
add
jl
push
mov
lret
sbb
add
pop
out
pop
sub
jmp
sti
dec
jb
testb
mov
ja
lods
fs
das
cwtl
enter
inc
xor
xor
push
xchg
and
inc
bound
das
popf
fwait
sub
and
mov
sub
dec
or
jl
stos
gs
lods
in
pop
push
jle
mov
cmp
fisubs
add
mov
in
jns
mov
sbb
outsl
and
movsb
xlat
out
in
enter
sbb
out
aam
jb
mov
sbb
adc
pop
adc
je
jae
xchg
cltd
popf
push
rclb
push
mov
iret
pop
stos
sub
repz
pusha
sbb
iret
scas
fistpl
test
push
test
or
inc
push
out
jge
or
scas
pop
mov
addr16
adc
fdivs
mov
xchg
int3
pop
sbb
cmp
push
ffree
pop
into
addr16
sub
cmp
movb
lea
sti
outsb
rolb
roll
sbb
push
cwtl
loope
mov
push
xchg
in
lea
cmp
mov
gs
jo
xor
sub
pop
sub
dec
pop
mov
in
scas
jecxz
outsb
das
lcall
inc
imul
push
dec
mov
pop
sbb
xor
lock
push
out
pop
repz
scas
xchg
mov
ja
fistl
sahf
mov
push
scas
push
movsb
cltd
push
xchg
sbb
daa
int3
adc
adc
pop
and
cmp
sbb
sub
out
jl
stos
or
test
push
sub
fucomp
out
pop
movsl
push
mov
stos
mov
leave
jo
mov
adcb
test
enter
enter
pop
push
cmpsb
mov
sub
lods
inc
fnsave
dec
mov
pop
sarb
cmpsb
mov
mov
pmaxsw
dec
inc
roll
movsb
pop
repz
push
cmp
loope,pn
shl
xchg
jb,pn
cld
inc
adc
js
jmp
adc
pusha
scas
adc
and
cltd
cli
fldt
adc
sbb
mov
divl
sub
mov
adc
jmp
es
fildl
cmpsb
gs
dec
not
stos
mov
xchg
xchg
xchg
jle
fidivl
mov
pushf
clc
xor
andl
inc
out
dec
jne
add
sub
xor
cmc
mov
popa
mov
cmp
xor
mov
fisubrs
addl
push
out
push
xstore-rng
cmpsl
lds
aaa
lret
pushf
lret
outsb
and
mov
mov
push
ja
jae
lcall
fstp
adc
ja
repz
adc
push
mov
call
cmp
xchg
ret
lcall
sbb
fdivs
sbb
pop
and
lea
and
mov
jl
bound
into
sbb
sub
clc
xlat
jae
outsb
sub
mov
leave
and
add
cmp
and
jae
mulb
dec
jne
nop
inc
movsl
testb
subl
xchg
rcrb
mov
dec
cmp
push
mov
cwtl
push
and
xchg
xor
adc
mov
cmp
std
adc
cltd
dec
divb
dec
flds
push
cld
mov
insb
test
xchg
div
out
pop
adc
add
clc
int3
xchg
push
lods
fldl
sub
pop
sub
xchg
inc
test
push
es
add
gs
jns
pop
add
cs
call
jo
adc
mov
sbb
leave
fisubrl
fs
xlat
dec
jmp
sub
jp
sbb
leave
adc
stc
mov
xchg
jo
sbb
sti
das
inc
imul
push
pusha
or
repnz
enter
or
mov
inc
nop
mov
or
lea
push
pusha
scas
test
dec
bound
das
pusha
rorb
hlt
enter
int3
pop
shlb
jecxz
dec
fdivrs
mov
sti
ljmp
or
leave
in
sti
ss
jb
xchg
out
push
sub
xor
dec
adc
xchg
enter
scas
mov
jecxz
in
out
dec
out
push
dec
sub
lods
mov
iret
and
jle
aad
je
arpl
sahf
arpl
loope
jge
or
inc
lods
inc
test
in
and
loope,pt
out
movsl
xchg
cltd
clc
movsb
out
mov
ret
int
and
daa
cmpsl
mov
and
bound
sub
movsb
xchg
or
fnstsw
popf
cmp
repnz
dec
fcompl
or
fidivl
mov
in
sbb
mov
lahf
ret
call
cmp
lea
mov
sbb
andb
movsb
popf
leave
movsb
cld
pop
inc
daa
dec
call
or
bound
bnd
nop
xchg
int3
xor
mov
repz
and
xchg
in
sbb
divl
push
repz
mov
inc
imul
cmp
pop
inc
ret
fidivs
pushf
out
outsb
mov
leave
data16
mov
xor
or
mov
roll
xchg
xchg
xor
movaps
xor
pusha
jecxz
fwait
push
cmpb
xor
lock
jmp
lret
std
push
repnz
or
add
cmpsl
dec
fcoms
mov
popa
jp
rcr
xor
xor
cmp
xchg
sahf
and
and
mov
aas
inc
jl
xchg
out
jns
lret
add
outsb
call
push
clc
or
mov
stos
xadd
jbe
movsb
jl
pop
iret
test
mov
xlat
arpl
inc
sub
mov
mov
push
push
out
insl
scas
pop
xor
mov
xorb
ds
jp
push
les
pushf
enter
push
ljmp
hlt
insl
nop
std
std
adc
mov
dec
lods
cmpsb
jb
or
fdivl
fwait
outsb
jl
dec
mov
dec
out
ja
push
mov
mov
lret
movsb
push
sbb
cmp
dec
or
and
sub
es
pop
mov
cmpsb
cmp
loope
je
lock
pushaw
mov
out
out
aam
xor
mov
insl
jg
pop
mov
or
xor
arpl
mov
push
xchg
ja
xor
pop
jb
adc
add
sbb
cmc
and
xlat
sub
jns
int
loope
sbbl
std
testl
outsb
imulb
sti
ja
mov
or
sub
mov
lcall
into
je
cwtl
and
andl
icebp
or
mov
push
inc
addr16
jnp
push
pop
outsl
xor
add
shl
jl
stc
jmp
push
out
or
and
jno
or
int3
inc
pop
push
adc
mov
arpl
lret
hlt
lods
push
push
int3
decl
mov
lcall
mov
mov
xchg
das
push
add
pushf
mov
sbb
pop
mov
daa
mov
ret
mov
aam
xor
loop
push
xor
push
add
adc
push
testl
mov
fdivrs
repz
xchg
mov
out
push
sub
loop
into
xchg
mov
inc
cs
xchg
and
dec
je
dec
leave
addr16
fistps
lds
adc
sbb
dec
sahf
aad
inc
dec
call
xchg
push
mov
dec
aad
inc
and
or
sub
dec
push
in
call
cmp
adcb
inc
ds
sbb
fs
inc
xchg
cmp
stc
adc
or
jp
dec
push
jbe
adc
push
adc
add
int
fstps
aam
call
jne
cmc
or
out
xor
jmp
aam
nop
lods
dec
pop
jb
std
xchg
push
inc
daa
sub
cmp
daa
insl
xchg
sahf
sbb
mov
shlb
mov
cmp
xchg
leave
push
or
cmc
daa
aad
sbb
pop
mov
std
xlat
and
icebp
mov
push
inc
xorb
bound
mov
out
xor
push
lds
and
stos
xchg
arpl
jmp
xchg
mov
les
lret
pop
mov
pop
sbb
and
jbe
adc
adc
ret
push
xchg
pop
sub
imul
subl
or
fs
in
idivl
arpl
dec
sbb
or
sub
aam
lock
cmpsb
cmp
sahf
adc
jae
mov
in
mov
xchg
loop
fidivs
fcmove
ret
jns
ret
insl
test
cmovo
test
jno
dec
dec
clc
subb
insl
rol
push
jl
jmp
flds
inc
adc
mov
mov
clc
jle
jl
mov
push
push
dec
jecxz
pop
mov
sarl
test
xor
ljmp
jne
ds
mov
or
inc
loop
cmp
imul
pop
mov
cli
aas
inc
rorb
lds
into
mov
dec
stos
push
fnstsw
mov
sarl
cmp
cmp
xor
jmp
and
jecxz
repz
fcomps
or
cmp
xchg
pop
cmpb
pop
movsb
mov
and
cmp
sbb
out
das
jmp
sbb
ja
arpl
test
jg
lods
xlat
cltd
fdivrp
fwait
adc
ret
lret
cmp
inc
or
vdivss
push
xchg
cli
mov
pop
jmp
mov
insl
jae
in
xchg
ret
std
gs
out
and
jno
hlt
test
dec
add
push
fldl
or
dec
fisttpll
push
lahf
sbb
fucomp
xchg
and
add
lods
repz
sub
sbb
stos
mov
push
das
aam
cmp
xchg
mov
and
or
aad
mov
fisubl
movsl
sbb
mov
movsl
popf
out
cmp
sbbl
enter
push
sarl
push
mov
pusha
jp
das
js
cwtl
xor
sbb
jnp
mov
push
fs
iret
jbe
mov
cmpl
mov
pop
and
daa
fwait
xchg
in
pop
dec
lret
imul
popf
out
dec
mov
xchg
jno
andb
lahf
mov
jnp
je
sbb
in
add
xor
loope
mov
sbb
shrl
push
cmp
not
movsl
addb
jle
cmp
cmp
fisttpll
repnz
jg
xor
aaa
push
lock
xor
add
in
pushf
cmp
repz
sarl
pusha
shl
jb
adc
dec
lds
dec
jge,pt
aam
cmp
rol
jg
xchg
or
cmp
mov
push
adc
dec
xor
fs
insb
xchg
cmp
mov
cmp
add
push
stc
sub
inc
dec
les
add
ljmp
mov
fldl
inc
mov
pop
jne
pop
lds
push
sahf
pop
jo
add
jb
lret
imulb
mov
pop
xlat
outsb
sbb
gs
cmpsl
push
adc
aad
cmp
mov
and
stos
in
sbb
and
pcmpeqw
leave
sub
adc
inc
or
add
rorb
mov
insb
dec
mov
xchg
int
jno
sti
mov
and
jecxz
shlb
imul
data16
jnp
jb
nop
popa
or
push
mov
lcall
ret
rcr
bound
dec
and
push
shrl
sub
enter
scas
ret
xchg
inc
enter
adc
inc
add
popf
pop
mov
and
dec
push
addr16
imul
jo
inc
ss
and
adc
mov
mov
stos
shll
or
in
les
fldl
das
cmp
xor
add
aaa
sub
nop
xor
hlt
mov
insl
addb
inc
enter
mov
jo
test
mov
mov
push
adc
fwait
ja
dec
icebp
jne
mov
xchg
cmp
pop
notl
inc
xchg
mov
inc
aad
jo
rcll
dec
mov
mov
cmp
loope
shufps
or
mov
int
mov
aad
push
lret
and
cmp
sub
pop
and
roll
arpl
jae
test
js
vmread
push
push
xchg
mov
push
je
mov
lcall
mov
jno,pn
xchg
fcmove
repnz
inc
mov
sbb
xchg
lret
icebp
test
xchg
shrb
out
bound
xchg
popf
inc
or
mov
je
enter
adc
pop
mov
in
sub
dec
sbb
icebp
and
decb
xor
cmpb
inc
inc
push
mov
jp
les
out
icebp
imul
dec
xchg
ljmp
or
and
sub
das
lahf
sub
inc
sbbb
pop
xchg
int
dec
xchg
mov
dec
out
xor
ret
sti
xchg
lret
test
or
pop
push
cmp
jecxz
ret
cmp
jb
andb
movsl
movsb
leave
xor
dec
xchg
loopne
scas
pop
push
dec
pop
add
pop
cmp
xchg
jp
cmp
inc
cmp
imul
mov
mov
lahf
adc
bound
pop
pushf
data16
cld
dec
movsb
xor
std
mov
jp
ret
ja
rolb
or
xchg
movsb
cmc
xor
in
movl
cmp
mov
mov
inc
les
lds
jae
fisubs
lret
xchg
adc
gs
mov
fwait
sub
cwtl
sti
fs
push
push
lock
pop
out
lret
cmp
or
jbe
mov
push
add
out
loopne
dec
andl
and
cmp
loope
xor
push
jo
or
mov
test
out
dec
adc
and
jnp
ja
jnp
test
mov
sbb
sub
std
mov
test
or
mov
sbb
pop
jmp
fwait
mov
lahf
mov
pop
out
gs
mov
mov
jns
push
imul
outsl
xbegin
jp
lahf
rorb
lret
mov
sbb
shrb
ffree
inc
mov
icebp
pop
or
and
cmpsb
dec
push
mov
out
mov
xchg
imul
sub
ja
mov
stos
js
out
push
mov
xchg
sti
mov
sarl
ret
and
mov
push
sub
jne
and
out
jp
lahf
mov
fistpll
jmp
mov
jp
ljmp
dec
jg
mov
pop
mov
insb
filds
in
sub
stos
and
into
push
pop
xchg
cld
repnz
stos
das
sub
adc
mov
jg
sbb
pop
adcb
aam
or
jecxz
inc
subb
aad
or
pop
gs
stc
adc
repnz
loopne
mov
call
stos
inc
mov
xchg
push
lock
aaa
imul
aas
in
lret
insl
pop
pop
dec
lock
inc
es
pop
and
ficompl
dec
outsl
mov
cltd
jo
jl
and
fwait
jecxz
pop
dec
loopne
and
xchg
mov
mov
jae
xor
add
dec
and
sbb
cmovl
aaa
jle
and
stos
addr16
dec
sar
jge
dec
xor
cmp
ficoml
mov
pop
push
push
clc
mov
les
jge
scas
fdivrl
stos
sub
loope
pop
mov
das
xchg
lret
out
mov
xchg
adc
fistpl
in
stc
xor
sub
cmpsb
mov
push
lahf
cmp
mov
xchg
and
mov
lret
xchg
mov
jno
ret
dec
fcmovnbe
mov
dec
pop
das
in
jmp
inc
inc
repz
adc
arpl
out
push
fldenv
in
xchg
inc
loope
sub
jg
jmp
or
lret
xor
add
imul
lea
das
cli
push
int
pop
pop
jge
push
sub
mov
enter
bound
mov
pusha
inc
rolb
fs
xchg
mov
sbb
daa
shr
jnp
pop
in
sub
arpl
adc
je
pushf
push
xchg
setae
push
push
outsb
stc
aas
stos
pop
loopne
es
insl
test
jo
pusha
and
std
test
out
aas
adc
out
sarl
mov
or
mov
dec
out
movsl
shlb
inc
outsb
pop
sub
xchg
fldcw
fadds
sub
lcall
mov
xchg
mov
jb
mov
mov
inc
sub
in
jecxz
lods
lods
mov
in
or
pop
cmp
cli
imul
lret
mov
mov
dec
daa
bound
pop
ret
adc
or
imul
jns
repz
jno
mov
into
loope
dec
pop
out
into
cmc
push
nop
imul
ficomps
fs
out
cs
jbe
addl
sbb
mov
mov
xor
jb
xor
cmp
fcompl
sub
ffree
mov
pop
fisubs
mov
jns
call
add
cs
pop
and
mov
jecxz
jp
inc
push
jmp
mov
jne
dec
mov
mov
sub
mov
mov
sub
mov
add
mov
sar
xchg
aam
aas
or
aad
mov
cli
aam
xor
pop
imul
cwtl
push
in
aas
inc
or
cmc
sub
push
push
inc
push
hlt
in
mov
jecxz
aas
sbb
pop
out
pop
inc
enter
cwtl
adc
or
fstp
fists
cs
pushf
mov
add
cmp
cmp
iret
dec
test
fs
sbb
pushf
outsl
xor
dec
pop
xor
nop
adc
addr16
jno
inc
popf
test
sub
loope,pt
fistpl
pop
inc
pop
ds
fcoms
lcall
scas
lahf
into
cmp
ja
inc
push
lcall
xor
jecxz
mov
cmp
push
js
fstl
sbb
ljmp
cli
pop
dec
rorb
dec
push
inc
cmp
mov
mov
sub
inc
aam
das
shl
cltd
xlat
push
cmp
pop
pop
xchg
xchg
stc
lods
leave
pop
dec
adc
popa
lret
push
mov
xor
cltd
jle
cmc
aad
dec
mov
insl
es
out
outsb
cmp
mov
and
mov
outsl
scas
nop
lcall
jnp
mov
mov
jle
and
or
sub
dec
pop
jecxz
xor
fsubs
jl
push
std
inc
jge
jne
and
jecxz
ds
das
xor
and
ret
xchg
movsb
ja
cmp
fisttpll
popa
cmp
lods
or
pop
adc
xor
repz
or
out
pop
in
or
pop
pop
mov
lahf
data16
adc
les
or
push
jge
lahf
add
dec
clc
popa
and
ss
scas
or
fs
push
sub
rclb
aam
test
pop
mov
cs
and
add
mov
cmp
call
call
or
xor
pop
mov
dec
lock
nop
mov
mov
adcb
aad
jnp
mov
rclb
dec
call
insb
inc
push
dec
push
aad
rolb
xchg
int
pshufw
loop
mov
cld
mov
data16
mov
pop
adc
inc
push
pop
imul
add
bound
out
jmp
lods
push
sbb
roll
mov
in
in
xchg
rcrb
jecxz
adcb
mov
mov
lret
loop
and
daa
stos
adc
sbbb
cmpsl
out
sub
cmp
xorb
cmp
lock
pushf
mov
nop
divb
rclb
pop
cmp
mov
xor
sub
xlat
pmaxsw
rol
adc
mov
ds
insl
lret
fstpt
cs
lock
push
inc
sbb
push
add
add
arpl
repz
popf
push
repnz
movsb
cmp
push
xor
int3
push
lret
xchg
ret
pop
mov
adc
mov
sbbb
fcmovbe
sbb
aaa
push
pushf
arpl
sub
into
flds
pushl
jl
cmp
mov
sti
stos
mov
inc
sbb
inc
mov
maskmovq
idivl
jns
inc
ljmp
pop
js
popa
in
jb
jno
push
lods
cwtl
test
push
es
mov
jp
je
pop
xorb
cld
and
adc
pop
jl
push
shlb
pop
lahf
mov
cltd
lods
frstor
push
in
jmp
das
cs
clc
loopne
cld
movsl
shll
mov
out
stc
loop
stos
mov
insb
sbb
sarl
xchg
mov
fcmovu
cmpsl
cld
dec
sub
mov
fnstenv
jbe
mov
sarb
jno
js
arpl
shll
outsb
stos
lock
xor
jg
xchg
rcrl
adc
fbld
loop
xor
cli
loop
mov
push
mov
lock
decl
push
lahf
or
test
cmp
jle
inc
pusha
jb
add
jmp
jo
jecxz
fs
pop
jg
sub
add
je
insl
jp
js
notl
dec
fstl
les
insl
imul
popf
mov
mov
outsb
push
cmp
mov
clc
hlt
sti
cltd
les
out
mov
testl
lret
outsb
cmpsb
xchg
pop
pop
pusha
jnp
dec
push
and
xor
pop
adc
mov
inc
sub
mov
xchg
add
addl
into
lea
scas
add
and
cli
push
xchg
xor
inc
or
jae
enter
cwtl
cwtl
fnstcw
jne
fldt
call
xor
sub
sbb
dec
inc
call
sbb
imul
imul
movsb
mov
and
testl
fisubl
hlt
pop
repnz
inc
cmpsl
push
inc
repz
xor
negl
xorb
add
jae
rorb
jnp
test
shll
popl
pop
xor
push
cmp
repnz
xchg
push
popf
shll
jbe
mov
sub
lods
movsb
rolb
pop
cmc
add
sbb
insb
mov
inc
push
jl
pop
aaa
dec
sbb
cmp
idivl
inc
je
xchg
stos
xor
clc
movl
push
dec
cmp
xchg
cmp
push
sub
fs
dec
das
sub
mov
mov
mov
jns
add
or
sub
cmp
jne
inc
repnz
sub
into
clc
insl
outsb
mov
sub
adc
add
fs
cwtl
lret
insl
mov
stc
dec
fiaddl
xchg
mov
push
xchg
hlt
lret
push
or
test
mov
mov
xchg
sbb
xchg
out
test
dec
fistps
jne
adc
fildll
push
mov
fiaddl
and
ret
and
and
jmp
adc
mov
lcall
clc
imul
iret
hlt
pop
cmpb
sbb
add
out
mov
xor
insb
mov
adc
addb
mov
jmp
rcrl
das
rolb
std
rolb
mov
adc
mov
int
sbb
sarl
stc
mov
in
repnz
sub
dec
cmp
loopne
je
stos
subl
inc
sub
mov
ljmp
movsb
dec
or
sbb
sub
xchg
ret
stc
jae
in
scas
leave
or
sub
loope
ja
lret
bound
fcmovbe
sbb
dec
lahf
inc
xchg
cmc
jno
mov
adc
jbe
enter
pop
adc
shlb
mov
negb
imul
and
xchg
pop
mov
and
roll
jmp
jp
ja
push
jmp
fdivrl
mov
xchg
xchg
jmp
xchg
aaa
sbb
out
xchg
jbe
and
aaa
jle
andb
scas
ja
add
jge
scas
loope
push
mov
into
adc
jo
mov
xchg
cltd
ss
int
shrl
test
and
cmpsl
inc
dec
imul
sbb
mov
insb
callw
stos
mov
mov
lea
imul
int
jne
pop
div
fcmove
cwtl
mov
dec
push
loope
dec
cmp
adc
xchg
sub
inc
jae
inc
jl
incb
cmpsb
out
mov
xchg
push
xor
pop
out
dec
pop
dec
mov
jne
jns
stos
fistpl
shrb
ret
hlt
xchg
leave
cltd
fucomi
jl
adc
in
cltd
sub
inc
js
imull
enter
sbbb
push
imul
pop
scas
mov
xstore-rng
cmpsl
xchg
sarl
mov
add
mov
test
out
fidivl
stos
add
je
addr16
cmp
sahf
pop
ljmp
xor
dec
enter
fnstcw
out
cs
pop
mov
and
jnp
mov
in
pop
fistps
xchg
jl
inc
sub
pusha
add
or
xor
int3
cmp
mov
shll
sbb
testb
clc
pop
xor
and
push
fcmovb
dec
jge
lahf
int3
aaa
inc
sub
dec
sub
mov
fcomip
insl
js
push
xadd
push
push
daa
mov
jae
xchg
xor
test
mov
xor
pop
jp
sahf
subl
stos
call
mov
roll
mov
and
movq
or
inc
xchg
test
jge
cmp
mov
mov
ja
mov
in
push
es
push
push
les
movsl
mov
sub
add
push
inc
mov
xchg
cltd
mov
pusha
pusha
loope
xchg
pop
daa
mov
mov
lahf
int3
mov
dec
push
xor
push
xor
divb
scas
cmp
ret
into
add
mov
jno
add
mov
aas
cmp
fwait
dec
jae
fisttpll
jae
out
dec
icebp
adc
adc
or
or
repnz
lret
jg
and
sub
lret
pop
cmp
nop
stos
mov
mov
fsubrs
lahf
out
shll
stos
cld
lds
xor
clc
jno
dec
stos
shrl
sbb
scas
and
repnz
rcrl
cld
in
adc
sbb
aad
push
arpl
push
addb
sub
mov
fcoms
shl
outsb
pop
sub
inc
sbb
mov
sub
andl
arpl
dec
jno
ret
sbb
popf
mov
sbb
pop
push
jl
icebp
cli
mov
lods
adc
pop
cmp
mov
addr16
sbb
jnp
push
movsb
fdivs
cld
push
sub
lods
cmp
mov
ret
test
xchg
adc
jae
jg
sub
dec
xchg
mov
xchg
xchg
std
lret
push
adc
add
cmp
insb
repnz
out
and
add
ja
out
push
jo
loopne
or
adc
jne
shrb
mov
xlat
lret
cli
sub
cltd
mov
cmp
mov
inc
or
mov
in
mov
fstpt
sbb
lods
xchg
mov
pop
pop
sahf
pop
into
jne
push
xlat
xchg
cmp
cmpsl
cwtl
ja
adc
cmpsb
mov
mov
lea
or
out
loop
pop
xor
loop
adc
dec
pop
lds
in
out
outsl
jnp
pop
or
test
or
loope
lahf
mov
aaa
xor
xchg
dec
inc
jmp
and
rol
fadd
push
or
xchg
stos
loopne
mov
xorl
pusha
sbb
dec
lods
jge
movsl
lcall
jns
mov
into
das
and
dec
add
sbb
or
mov
rol
dec
lcall
cmp
lcall
hlt
movsb
lock
inc
pop
pop
aas
cmp
repnz
pushf
sets
push
adc
into
xchg
sti
inc
vshufps
clc
push
xchg
scas
scas
pop
iret
mov
lcall
or
out
or
lcall
js
cwtl
bound
int3
dec
aad
js
cmp
cmc
std
pop
into
or
adc
out
cmp
xchg
or
lcall
sbb
pop
and
fmuls
xchg
push
xor
ss
aaa
jg
lds
repz
mov
aam
mov
pusha
jb
pop
dec
xchg
in
inc
xchg
xor
popf
dec
enter
mov
jmp
sbb
adc
mov
sbb
push
fistpll
or
cltd
ljmp
popf
pop
cmc
push
mov
je
add
inc
sbb
ljmp
fmull
enter
push
xchg
pop
sbb
popl
cmp
pushf
je
pop
jl
imul
jp
mov
lock
pop
outsl
sbb
leave
test
jmp
movsb
aaa
add
aas
sarl
mov
adc
rolb
in
cmc
pop
leave
jg
adc
pop
or
arpl
pop
lock
lret
mov
push
in
loop
loopne
cmp
inc
push
mov
cmp
rol
aaa
aas
or
lea
les
cmp
lock
call
and
pop
adc
cltd
cmpsb
xchg
jno
add
xor
mov
jbe
and
lret
push
xor
loopne
adc
sbb
fstpt
and
jle
and
dec
lret
jg
or
mov
rcrl
inc
xchg
sbb
mov
push
push
lods
or
mov
imul
addb
jno
stos
iret
dec
pop
jb
js
mov
int
loop
fbld
mov
adc
mov
xchg
adcl
fcmovnb
shrl
das
push
hlt
xrelease
mov
add
xor
xchg
std
aam
xorl
push
ret
adc
ljmp
fnstcw
lods
or
les
cmp
push
mov
xchg
push
cltd
int
cmp
pop
jns
fdivl
js
push
or
popf
xchg
xchg
inc
inc
jp
pop
cmp
in
adc
jl
and
in
adc
sbb
mov
sbb
imul
imul
aad
mov
jo
shl
mov
jg
fstpl
into
imul
jo
mov
dec
movsl
push
cs
push
or
les
mov
xor
dec
clc
sbb
inc
ja
enter
mov
jl
or
cld
pop
xchg
push
xchg
cli
xor
mov
enter
sub
iret
and
or
jmp
inc
and
rolb
mov
xchg
aam
and
mov
test
push
push
dec
subl
clc
std
sbb
std
addr16
fcmovnbe
out
hlt
in
jle
lret
idivl
jnp
jnp
cli
sti
rcll
int3
mov
daa
ret
push
jno
fisubrl
das
jp
fdivp
mov
jo
les
cmp
popfw
or
mov
cltd
call
into
dec
cmp
cltd
xor
les
inc
shl
sahf
inc
popa
mov
jns
pcmpgtb
or
lods
adc
in
loop
xchg
inc
jae
pop
add
sbb
mov
sarb
stos
insb
in
add
xchg
xchg
out
adc
push
ficoms
mov
inc
inc
add
aas
push
inc
pop
xorl
nop
loop
jl
insl
mov
xchg
cmp
sub
sub
xchg
stc
int3
std
jnp
mov
pushf
pushf
popl
outsl
cwtl
mov
xor
fnstsw
xchg
popa
mov
adcb
and
jmp
inc
lcall
int
popa
xor
or
lahf
fmull
dec
push
push
rolb
loop
test
sub
xchg
and
idivb
mov
xor
mov
lds
cmpsb
out
scas
daa
rolb
cwtl
lahf
xchg
cwtl
not
fsts
fdiv
or
es
pop
mov
je
or
ja
aaa
sarb
daa
iret
cmpsl
push
es
sbb
insb
mov
pop
push
subl
fcmovnu
cmp
pop
dec
ja
cmp
sahf
sbbb
out
clc
sbb
push
test
jnp
movaps
es
clc
add
shlb
xor
inc
repnz
jo
outsb
xor
mov
dec
push
dec
or
jle
std
mov
or
test
jo
out
lds
jb
ret
nop
movsb
stos
inc
or
out
aaa
fsubrl
jecxz
dec
fcompl
pusha
repnz
int
sbb
inc
pop
movsl
adc
jmp
push
data16
ss
mov
sbb
jne
dec
xor
out
add
icebp
pop
cmpsb
pop
xor
lods
loope
xlat
mov
imul
fwait
cmp
add
sub
sub
leave
scas
push
jl
xor
xor
or
movsb
test
mov
je
loope
imul
stos
ficompl
and
insl
dec
add
outsb
fstps
adc
adc
mov
test
mov
sub
int3
fwait
lahf
xchg
inc
sbb
xchg
mov
adc
xchg
cmpb
push
or
pushf
push
mov
jo
cmp
out
jg
mov
hlt
xchg
fistps
outsl
out
add
in
jno
sbb
scas
stos
rcrl
fldenv
aas
cmp
cltd
or
in
or
ss
std
mov
mov
adc
cs
movsb
fstl
in
pop
dec
add
xor
xor
jno
rcl
jle
jp
add
cmp
adc
testb
js
ret
xchg
dec
push
cs
jle
sub
and
xor
fs
pop
push
cmc
test
jae,pn
sub
sbb
dec
jmp
or
or
ja
adc
add
inc
pushf
repnz
ds
pushf
pop
and
push
ljmp
jl
cltd
ljmp
pop
and
rclb
gs
pop
or
mov
mov
mov
cmp
test
pushw
jb
sbb
in
sbb
aam
movsl
push
mov
sub
jmp
nop
data16
imul
jb
fwait
pop
mov
or
fnsave
movsb
out
push
jbe
push
adc
xchg
push
sbb
divb
cmp
out
jo
int3
add
hlt
or
mov
leave
lods
inc
push
rolb
dec
nop
xor
neg
popa
out
mov
loope
pushf
clc
pop
std
cmp
loope
fwait
repz
iret
test
js
in
xor
pop
jmp
mov
sahf
pusha
inc
imul
popf
add
inc
xchg
jo
jmp
pop
sbb
dec
lea
adc
mov
and
leave
mov
mov
push
clc
int
gs
shrb
push
push
add
mov
mov
cmp
jb
mov
inc
rorl
mov
cmp
cwtl
jbe
test
cld
sub
scas
xor
ror
add
dec
test
pop
add
popf
mov
mov
std
xchg
push
scas
sarb
dec
add
sbb
push
push
repz
sbb
test
jns
adc
shlb
aam
dec
imul
pusha
sbb
shr
mov
xor
bound
adc
jne
mov
mov
add
rolb
scas
mov
mov
hlt
ljmp
cli
fadd
push
push
mov
cli
sbb
xchg
ret
xchg
and
pop
in
outsl
xor
mov
adc
fsubs
daa
and
sub
insl
and
cmc
sbb
pop
out
dec
xor
pop
jb
imul
aaa
cld
mov
push
sub
repnz
ret
dec
movsl
sbb
mov
pop
push
es
insl
inc
xchg
mov
pop
fcmovnbe
pop
out
inc
adc
mov
jl
ret
orb
icebp
xor
add
cltd
pop
popf
mov
scas
pop
and
cmp
push
cmp
sahf
xlat
inc
cld
das
enter
push
stos
gs
jnp
mov
jnp
pusha
test
xchg
push
adc
mov
cli
ret
js
ja,pn
ffreep
ror
rorb
xchg
mov
lcall
push
xchg
jl
icebp
jge
pop
and
mov
inc
and
mov
ror
cmp
push
and
sbb
fstpt
pop
iret
push
outsb
ficoml
push
insb
test
sub
jge
dec
mov
int3
jae
xor
imul
fcmovb
and
mov
mov
mov
adc
imul
xor
gs
sbb
add
jne
sbb
or
or
pushf
aaa
insl
jbe
cmp
lret
lds
jle
bound
adc
pop
in
sub
and
popf
pop
std
mov
imul
sbb
xchg
outsl
inc
sbb
jb
pop
out
or
and
jne
imul
insb
mov
push
int3
pushf
sahf
inc
pop
jge
repz
adc
cmp
push
push
imul
dec
mov
scas
cmc
js
lds
or
jmp
pop
lret
cmp
aaa
sub
rorl
sbb
popl
cmp
cltd
jo
enter
pushf
je
xor
mov
adc
pusha
dec
movsb
testb
jle
jns
loope
test
xor
pop
repz
or
ljmp
xchg
xchg
push
cmp
push
push
add
dec
in
jmp
pop
rcl
fisubl
popf
or
in
adc
ljmp
popa
cmp
cmc
rcl
movsb
jp
mov
pop
mov
ret
jl
xor
mov
fildll
lods
pop
push
mov
mov
gs
daa
mov
push
jge
cmc
mov
sbb
outsl
xchg
repz
test
and
pop
adcb
mov
outsb
add
dec
je
ljmp
pop
xchg
leave
mov
sbb
sub
mov
xchg
addr16
push
or
rorb
cmp
push
push
adcb
add
and
loope
pop
add
lcall
mov
or
cld
in
out
mov
mov
push
ss
push
dec
popa
loope
inc
add
cld
dec
jge
sub
and
xor
stos
rorl
shll
add
dec
mov
fsubs
sbb
shlb
dec
insl
std
cmpsl
xchg
out
mov
sub
push
inc
dec
rcrb
mov
sbb
add
cmpsl
fidivrs
bnd
sti
sub
push
ret
sub
popa
pop
outsl
push
lret
out
test
mov
add
es
in
das
pop
out
sti
sub
sub
mov
lahf
jns
rorb
shr
lret
in
dec
pop
cmp
push
fwait
shrl
scas
mov
jne
sub
xor
out
sbb
cltd
jns
jns
adc
xchg
xchg
inc
imul
fs
sub
xor
dec
push
enter
shrb
jae
fwait
or
mov
push
insl
and
stos
cmp
cmpsb
pop
push
xlat
popa
insb
inc
mov
jmp
imul
jne
jbe
popf
sbb
fsubrp
mov
mov
mov
fdivs
pop
scas
inc
pop
dec
outsb
je
sbb
push
rorb
inc
fimuls
rcll
jg
xchg
adc
push
nop
adcl
lret
rcll
pop
aad
jmp
sahf
add
movsb
and
imull
push
pop
sub
popa
or
and
sub
pop
adc
push
xor
jmp
dec
jge
add
cmp
repz
fs
repz
jmp
jnp
or
adc
push
sbb
out
pusha
dec
mov
sub
mov
or
es
pop
sarl
dec
adcl
xlat
pop
out
sarb
ficompl
jp
aas
cmp
xor
jae
or
nop
jae
std
sbb
out
mov
and
jmp
out
scas
adc
fsubr
adc
ss
fisubrs
imul
add
cmp
xor
sbb
arpl
inc
out
sbb
cmp
out
dec
adc
add
pop
dec
push
push
aas
cmp
in
inc
fnstsw
fcomip
insl
pop
imul
mov
jle
dec
inc
jno
or
leave
inc
xor
imulb
adc
nop
sar
mov
xlat
and
dec
mov
xor
mov
sbb
pop
daa
popa
jge
or
dec
xor
lahf
jo
in
jo
mov
push
es
push
rorb
cwtl
test
cmp
xchg
fistpl
push
sub
adc
roll
bound
xlat
inc
jno
test
mov
addr16
sub
jg
inc
add
pop
jmp
and
adcl
out
inc
cld
dec
jle
fdivl
fistpll
andl
sbb
adc
inc
sub
add
fcoms
xchg
jne
cld
adc
jl
cmp
cwtl
adc
stc
sbb
test
mov
pop
movl
mov
fiaddl
cmp
out
push
jbe
mov
mov
call
sbb
insb
cli
les
cmpsb
pop
rolb
cmp
or
daa
in
adc
and
push
test
in
cmp
movb
rcr
push
mov
outsl
sti
les
ficoml
test
jl
das
lret
inc
pop
inc
mov
mov
fimull
popa
xchg
loop
ljmp
rcl
inc
push
or
adc
xchg
shl
out
inc
bound
cmp
imul
cmp
cli
mov
lea
jo
out
aas
out
aam
pop
imul
mov
loopne
leave
insb
xor
mov
xchg
inc
ficoml
mov
mov
dec
ds
xchg
testb
lods
sbb
pop
dec
sahf
cmpl
and
jbe
mov
ljmp
push
dec
sbb
mov
mov
sbb
outsl
mov
call
enter
roll
mov
push
mov
ljmp
fldenv
and
in
mov
jecxz
test
mov
cmpsl
mov
adc
dec
orb
xchg
mov
rol
fmul
sub
jno
push
mov
jl
pop
cmp
pop
mov
jbe
push
stos
adc
jp
es
push
jns
test
insb
cmp
lods
xor
pop
insb
es
stc
mov
cli
cmp
jns
pop
adc
cmpl
pop
fwait
mov
sub
fwait
shrl
pop
xor
movsb
dec
mov
out
pop
out
push
mov
sub
popa
pop
cs
push
pop
rorl
insl
mov
jbe
jb
enter
mov
loopne
loop
mov
pusha
add
mov
jns
cli
aam
ds
or
jnp
int3
adc
cld
test
repnz
push
mov
aas
sub
cs
outsl
loop
pop
int3
popf
add
imul
shlb
inc
lods
cmp
inc
loop
jno
es
stc
jecxz
ret
ds
cmp
aaa
xor
lcall
xchg
cmc
fisttps
jg
fdivs
roll
out
sbb
dec
sub
div
lods
adc
mov
das
dec
bound
mov
pop
jbe
mov
lock
mov
mull
xor
test
cs
push
cmp
incb
in
mov
inc
out
xor
dec
pop
sti
shl
xchg
imul
into
mov
loopne
jb
in
inc
and
sbb
rolb
out
roll
xchg
dec
jno
andl
xor
pop
iret
test
es
cs
xchg
insb
int3
or
cmp
std
fs
imul
xchg
mov
popa
stos
jo
mov
cmp
lods
iret
idivl
out
test
pop
jg
lods
push
sub
xchg
ret
dec
movsl
xorl
hlt
jl
push
push
jo
xchg
imul
outsl
push
cmpsb
int3
rorl
cld
scas
jp
xorb
dec
fldcw
ret
popa
aas
in
and
jecxz
stos
push
and
or
adc
andl
cmp
fbld
pop
sarl
inc
xchg
mov
cmp
cmp
cmpsb
dec
xchg
jmp
outsl
push
nop
out
jns
out
sbb
xor
or
mov
cmp
fidivs
or
dec
sbb
shl
fimull
aad
xchg
inc
pop
enter
mov
arpl
test
mov
int
sbb
imul
fstl
cmpsb
in
lahf
out
loope
jo
call
xor
loopne
addr16
jecxz
fsubrl
rcrb
xchg
push
mov
mov
cmp
loop
fs
lea
sub
dec
scas
lret
fs
add
out
pop
lock
mov
xchg
xchg
out
adc
gs
pushf
mov
add
arpl
mov
jl
cmpsb
sub
daa
sbb
enter
mov
add
aas
int
mov
shrl
lods
sbb
sub
loop
std
test
sbb
jne
imul
mov
scas
dec
mov
adc
or
mov
add
xchg
mov
xchg
jnp
jl
ret
in
lds
sarb
sbb
bound
mov
popa
pop
xchg
sahf
pop
cmpsb
enter
xor
cwtl
std
loopne
push
sub
out
data16
rcll
loop
add
xlat
sti
jle
aas
mov
cltd
roll
pop
iret
ret
mov
in
sub
dec
jl
rorl
rcr
cmc
shrb
push
iret
mov
xchg
icebp
mov
sbb
in
insl
push
xchg
jecxz
jge
mov
pop
cmp
mov
pop
push
scas
mov
fbld
jp
xor
dec
dec
push
push
ja
add
loopne
jo
popa
cmpsl
fs
cli
push
mov
fimuls
xchg
inc
mov
lret
jmp
or
call
cli
ret
dec
mov
xor
adc
bound
idivb
leave
pushf
adc
mov
xchg
fistpll
test
push
xor
xor
sti
sti
ljmp
sti
out
jge
cwtl
lahf
data16
pop
sub
adc
pop
sub
bound
push
shll
gs
or
into
xchg
mov
mov
push
adc
into
stos
cmc
mov
lret
jo
or
push
inc
pop
aas
pop
pop
pop
ficompl
iret
or
shlb
pop
sub
sahf
mov
stos
fs
sbb
frstor
addr16
mov
das
or
adc
mov
movsl
stos
pop
and
pop
or
mov
enter
movsb
push
in
call
mov
mov
fxch
jno
jns
insl
jg
jmp
cmp
jnp
in
fwait
mov
xor
pop
jne
push
jne
pop
fidivrl
test
dec
test
mov
je
sti
lret
fdivr
arpl
fs
out
mov
xchg
cltd
data16
ja
xor
mov
mov
add
in
insl
xchg
or
pop
lret
inc
out
loope
inc
adcl
push
jmp
or
mov
push
push
inc
push
lock
inc
cmp
sub
ret
mov
add
das
or
repnz
or
and
repz
repz
jge
dec
arpl
pop
jle
pushf
pushf
mov
and
mov
and
or
aas
nop
adc
pop
and
add
push
test
inc
fmuls
push
xchg
orb
in
out
loope
shr
mov
jae
pop
sub
fistl
pop
out
shrb
popa
cmp
nop
mov
jmp
std
sbb
leave
jnp
cmp
and
adc
sti
xchg
subb
in
in
inc
and
lds
test
jo
mov
dec
mov
movsb
mov
dec
flds
sahf
cmpsb
repz
push
out
mov
cmpsb
outsb
push
xchg
in
jp
fimuls
pop
jge
imul
add
mov
mov
cld
test
dec
sbb
jo
jg
mov
das
shlb
icebp
mov
enter
je
jl
je
loope
stos
push
and
push
pop
fisttpll
mov
or
sti
std
das
push
ss
js
sub
xor
xor
fdivrp
into
push
cmc
mov
je
xchg
repz
xor
pop
stos
push
cld
mov
and
fcom
les
imul
ja
mov
adc
jg
jno
jmp
push
or
ret
mov
test
xor
popa
sahf
pop
ret
cmp
pushf
arpl
shlb
sub
adc
xchg
fbld
ljmp
inc
adc
aam
xor
inc
lret
enter
into
ja
jb
sbb
iret
mov
xchg
movsb
gs
mov
mov
fisttpll
pusha
inc
mov
std
add
add
sub
aas
or
xor
xchg
push
dec
inc
and
jp
and
xlat
insl
lcall
in
cld
lcall
mov
lods
add
and
xor
sbb
mov
pop
xchg
rcrb
pop
lods
mov
sub
lds
xor
repnz
mov
dec
mov
push
and
push
adc
jae
imul
scas
sbb
pushf
mov
mov
add
mov
inc
test
jmp
scas
dec
inc
test
jl
mov
push
lret
sbb
xchg
mov
pop
es
cli
filds
subb
or
push
mov
sbb
jae
loope
push
pop
or
xchg
in
sbb
jl
inc
sbb
fsubrs
pushf
andl
jmp
mov
in
sub
rolb
stos
jge
or
or
add
imul
mov
jl
mov
rcrb
sti
pop
dec
push
stos
inc
add
xor
and
shl
inc
movl
dec
pop
sub
iret
mov
test
incl
ds
xchg
out
test
xchg
shll
in
mov
jb
ss
test
mov
sub
ret
jle
sub
pop
sub
cmpsl
dec
popa
pop
clc
dec
add
pop
vandpd
rcrl
push
ficomps
shll
out
add
cmp
mov
lods
jp
jp
or
cmp
imul
inc
xor
xor
pop
add
rclb
out
sbb
sub
dec
out
sub
or
mov
ret
js
or
push
int3
cmp
rorb
jg
out
orb
add
push
popf
clc
jg
repz
dec
jno
test
aad
aas
negb
or
mov
movsl
imull
inc
or
insl
rolb
cwtl
lds
mov
shlb
int3
inc
push
mov
push
cmp
push
push
stos
lret
shlb
push
adc
in
xchg
call
jb
jg
xchg
pop
sbb
push
leave
ljmp
pop
mul
push
icebp
mov
sub
inc
lods
cmc
adc
cmp
xchg
inc
fs
into
mov
push
or
xchg
addr16
addr16
inc
test
pop
add
clc
jno
outsb
or
aas
pushf
repz
out
inc
pop
ja,pn
in
pop
xchg
cld
add
fidivrl
sub
pop
fldl
mov
cs
mov
jnp
push
adc
js
push
inc
addl
test
jl
add
pop
mov
mov
dec
mov
insl
mov
fstl
sbb
or
pop
push
pushf
mov
lds
nop
push
jecxz
mov
or
push
fists
aad
out
ds
mov
enter
mov
lahf
dec
sub
fildll
mov
xchg
sti
pop
out
aaa
jg
out
dec
adc
adc
push
add
into
dec
jge
mov
rcrl
fnstcw
cmp
cld
xchg
push
jecxz
ret
xor
lods
jge
cs
pop
sti
sub
inc
pop
inc
xchg
jbe
data16
rorl
in
xor
scas
xor
ljmp
stos
jb
std
js
je
mov
add
out
sbb
loope
and
ficompl
loopne
mov
outsl
mov
nop
int
cmp
mov
xchg
jo
iret
incb
pop
pushf
push
add
gs
rorl
push
sub
ja
inc
cld
fcoms
add
add
mov
mov
push
stc
fwait
push
fidivl
mov
mov
mov
fwait
std
insl
test
push
pop
fcmove
and
into
fimull
loope
into
loope
dec
ror
fucomp
sbb
scas
add
dec
push
cmp
cmpsl
rclb
push
imul
in
ret
cmp
jae
xchg
je
mov
icebp
or
push
sub
mov
adc
iret
jecxz
cmpsb
push
xor
ljmp
jb
or
pop
or
mov
mov
sub
icebp
mul
add
jl
mov
pop
addl
pop
scas
mov
adc
es
jle
inc
jecxz
mov
sbb
roll
punpcklbw
sub
bound
dec
loop
inc
dec
loop
cmp
mov
or
enter
jge
shll
stos
cwtl
pop
scas
je
inc
leave
andb
arpl
jg
jg
inc
dec
sbb
pop
out
mov
loope
mov
pusha
jo
lods
int
jne
dec
pop
loopne
mov
dec
mov
js
out
mov
imul
cli
cmpsb
pop
adc
dec
cmc
insb
fdiv
jp
dec
out
cs
fcmovu
dec
jne
add
ljmp
int
adc
lods
les
dec
hlt
xchg
xor
jecxz
shll
testb
cmpsb
mov
fwait
call
hlt
outsl
and
pop
push
cmp
shll
mov
es
jae
pop
sub
cld
adc
adc
jle
rorl
push
enter
ss
lock
xor
xor
sbb
out
xchg
rol
rol
sub
pop
sub
xor
repz
cmp
hlt
pop
lods
cmp
and
cmpb
in
mov
lret
xor
xchg
jne
loope
sbb
shlb
push
inc
mov
xchg
or
cmc
adcl
jbe
jbe
cmpsb
ret
dec
mov
push
pusha
test
xchg
mov
mov
mov
pop
xchg
cmpsl
sti
mov
mov
jle
cld
push
leave
lods
mov
fcomp
or
jmp
push
cs
into
cmp
jg
stos
test
inc
xorb
inc
push
xchg
cmp
adc
adc
das
add
dec
dec
into
sub
inc
inc
leave
sub
cmp
adc
out
pushf
dec
mov
hlt
iret
pop
push
test
out
inc
fcompl
ss
test
std
fstpt
jmp
sbb
fisubl
pop
jle
pushf
subl
aas
cs
jl
aad
jb
mov
fs
jbe
push
push
add
sub
mov
lcall
lea
pop
sbb
gs
cld
movsb
sub
cmpsl
fs
jmp
xchg
sub
and
popa
mov
les
frstor
clc
out
je
push
inc
in
add
popf
sbb
pop
sti
mov
push
inc
lods
lods
mov
shll
loope
loopne
scas
sub
and
xchg
cmpsb
mov
aaa
sbb
mov
xchg
push
adc
push
mov
mov
call
mov
insl
cltd
push
inc
sbbl
mov
lea
mov
mov
pusha
filds
inc
fmul
ljmp
adc
insb
test
add
mov
cmp
popw
insb
hlt
xchg
add
sub
cmp
xor
jbe
pop
ljmp
inc
lahf
cmp
shr
jmp
fidivrs
xor
dec
xchg
movsl
sub
loop
shrb
faddp
in
push
repnz
leave
dec
cmp
push
mov
test
in
mov
sahf
sub
and
stos
std
push
jl
cmp
cmpl
mov
cmp
pop
inc
sbb
mov
pop
lock
mul
sbb
pushf
or
out
pop
call
aas
pop
jmp
or
sbb
lods
ss
sti
lods
sbb
nop
pop
inc
jp
int3
mov
fidivs
stos
or
mov
fwait
push
push
test
in
jo
imull
jmpw
lea
push
inc
rcrb
lea
adc
lds
fsubrl
ljmp
and
sbb
inc
jmp
int
cmp
divl
sub
ret
xor
sbb
dec
cltd
dec
dec
mov
lret
or
pop
and
jo
sahf
xchg
xchg
dec
xchg
push
sbb
or
enter
pop
sbb
mov
jl
js
out
popf
xchg
pop
fists
fbstp
lahf
add
imul
in
push
ret
inc
cld
dec
or
push
aas
mov
sub
inc
or
ja
popa
out
out
sub
mov
push
adc
push
mov
fdivr
in
push
xor
or
push
test
add
hlt
xchg
sub
inc
add
inc
push
push
enter
push
xorl
inc
inc
or
lods
fnstcw
jo
out
mov
add
jae
cmp
jg
push
mov
mov
imul
adc
lahf
popa
mov
shll
sbb
xchg
sub
push
mov
int
sub
mov
insb
test
xor
add
jmp
subb
mov
xor
imul
mov
fcom
lcall
xchg
sti
or
sahf
jle
mov
or
push
ljmp
jmp
in
inc
add
imul
pop
dec
jl
ja
lea
std
loop
xor
jge
add
xor
cmp
mov
jae
in
mov
insb
jmp
ror
adc
xchg
arpl
insb
dec
lcall
mov
and
jo
out
mov
mov
orb
dec
lods
and
add
add
pop
or
push
movsl
inc
shlb
out
movsl
in
sub
mov
add
scas
ljmp
pop
mov
repz
imul
aaa
pop
in
sbb
sbb
cmc
mov
ss
pop
cwtl
movsl
or
pop
outsb
sub
cmp
push
push
push
mov
sub
and
and
in
sbb
inc
and
sub
scas
lods
xlat
push
inc
fs
push
hlt
roll
push
call
int
in
lahf
or
ret
out
sbb
dec
mov
jg
pop
orb
nop
jl
pop
movsl
mov
dec
or
jl
push
inc
and
testl
push
loop
xor
jmp
push
in
faddl
test
iret
jo
pop
outsb
xchg
pop
mov
jno
ss
sbb
adc
pop
sub
test
popf
movsl
dec
pop
popa
push
out
rorb
loopne
xchg
aas
pop
or
data16
cmp
xchg
into
sub
inc
hlt
cmp
jne
mov
xchg
xlat
inc
lret
pop
pop
sbb
mov
into
imull
pop
sahf
das
add
loop
inc
push
xchg
int
xorl
push
cltd
cmp
clc
add
popa
test
jbe
movsl
dec
push
imul
inc
dec
out
fldcw
mov
cld
inc
mov
inc
jg
sub
nop
mov
fldcw
and
dec
in
push
jne
sbb
jno
cs
jmp
aam
neg
mov
and
mov
jbe
shlb
out
adc
xchg
push
sub
loop
and
sub
adc
add
sahf
xorl
lret
or
outsb
push
arpl
cld
or
pop
cltd
inc
mov
mov
mov
mov
fs
sbb
adc
cld
dec
inc
daa
int
mov
adc
movsl
add
push
pop
rcrb
cmp
rcrb
pop
push
mov
sub
repnz
sub
rorl
mov
out
mov
ss
xchg
lret
jle
loopne
in
pop
dec
aad
xlat
pushf
call
jbe
aas
sbb
ret
loope
jno
push
dec
mov
lods
data16
nop
cli
loope
push
sub
rolb
push
add
pop
pop
adc
fadds
and
fisttpl
dec
movsb
mov
dec
aas
es
imul
jp
test
push
xchg
int
out
add
test
mov
lea
pusha
mov
add
test
in
stos
ret
adc
popf
fldcw
data16
sbb
xor
inc
adc
dec
and
aas
inc
repz
sahf
add
sbb
sti
enter
icebp
into
scas
addb
sahf
sub
outsl
lock
subb
jo
sub
push
lahf
in
or
push
and
mov
into
mov
inc
pop
xchg
add
shlb
or
scas
pop
js
out
xchg
stos
jp
inc
movsl
push
pop
mov
cld
dec
daa
cld
mov
repnz
shl
push
pop
test
sbb
movsl
pushw
dec
adcl
pop
xchg
fisubrs
call
inc
aam
pop
sub
popa
add
cmp
mov
lahf
add
adc
or
je
lods
xor
mov
mov
dec
adc
std
xor
inc
inc
in
adc
rclb
aas
or
hlt
lret
jge
add
ss
addr16
push
pusha
dec
addr16
sbb
hlt
xchg
out
jp
cmpb
adc
mov
leave
stos
es
jnp
pop
out
mov
mov
in
dec
mov
push
daa
cmp
pavgb
mov
pop
or
inc
inc
leave
xchg
push
jne
mov
stos
insb
xchg
and
jno
outsl
dec
and
xchg
aas
int
inc
xlat
mov
jno
int3
xchg
push
sub
mov
sub
or
or
enter
jo
daa
add
pop
cmp
push
fdivp
push
les
mov
sbb
out
insb
cmp
sbb
xchg
std
push
or
mov
ror
sti
pop
jle
stos
mov
loope
loope
aad
lods
iret
adc
adc
jne
add
push
mov
les
cltd
andl
xchg
adcb
dec
add
mov
cwtl
cltd
mov
cs
lock
std
or
fidivl
push
xchg
dec
lods
loop
call
je
adc
push
insb
mov
pop
jp
sbb
add
out
lods
mov
dec
jmp
sbb
dec
movsl
or
dec
outsb
lea
in
push
jl
mov
add
add
loope
sbb
and
lret
push
mov
outsl
push
mov
pop
jecxz
hlt
sub
shll
dec
jle
shll
in
mov
lds
rolb
and
jge
lods
iret
dec
inc
leave
mov
push
in
mov
xchg
adc
enter
mov
dec
sti
test
or
in
imul
out
mov
or
dec
stos
sub
inc
push
iret
mov
scas
fwait
sbb
push
adc
cmpsb
jg
adc
inc
xchg
xor
sbb
hlt
jbe
mov
adc
inc
xchg
xchg
mov
outsl
jecxz
add
sbb
lret
pop
andl
imul
cmpl
and
scas
pop
fstl
sti
mov
cltd
xor
sbb
inc
ja
sbb
js
push
negl
test
int
rorb
test
das
mov
adc
mov
cmpsl
xor
imul
ret
mov
das
cmpsb
imul
std
gs
fldl
imul
fldenv
xchg
sbb
cmpsl
ret
sbb
cmc
mov
add
mov
pusha
or
jo
bound
lret
adc
adc
xor
inc
and
add
jg
fs
sub
push
jge
mov
pop
cmp
ficoms
adc
sbb
cmp
push
xchg
int3
int3
punpckhbw
mov
cmp
pushf
push
pop
inc
in
push
push
cmp
fwait
push
hlt
push
invd
pop
jae
cwtl
jmp
popf
lods
addb
or
cli
jg
sbb
cmpsb
jnp
mov
std
movsb
pushf
pop
dec
push
and
cwtl
jne
dec
pusha
aaa
inc
jbe
xor
pusha
aaa
cli
jl
mov
imul
mov
xor
repnz
fwait
test
jnp
out
outsb
jbe
or
cld
pop
adc
jp
add
sbb
lcall
in
repnz
addr16
pop
cmp
cmp
xchg
pop
loopne
push
hlt
add
nop
push
das
call
add
mov
pop
dec
sub
imul
insl
addr16
std
mov
lods
mov
inc
lea
sbb
pop
pop
sub
adc
in
cmp
add
imull
inc
dec
mov
xor
idivl
inc
sbb
cmpsb
popf
iret
adc
gs
repnz
add
aad
adc
cmp
jne
test
mov
imul
pop
xor
sahf
inc
aam
aaa
in
pusha
mov
sub
mov
jnp
cmp
cwtl
les
lret
jo
das
xchg
inc
mov
pop
mov
jb
sbb
sub
int
jo
test
in
push
inc
jno
cmp
enter
mov
mov
xchg
int
push
mov
mov
pop
inc
ss
mov
pop
lods
jns
ficompl
outsl
jb
cmpsl
xchg
mov
mov
ljmp
mov
test
push
push
hlt
xchg
popf
lods
push
scas
sbb
scas
mov
popl
sbb
repz
cltd
in
pop
nop
dec
arpl
sbb
lahf
cmc
sub
push
adc
xchg
mov
fadd
xor
mov
dec
adc
push
xchg
bound
xchg
ret
adc
js
lods
xor
dec
stc
xchg
jo
stc
xchg
pop
xchg
cld
jae
xor
xor
pop
negb
and
xor
adc
jg
and
rol
add
mov
fwait
in
mull
mov
idivl
xor
push
ret
shlb
xchg
aas
xchg
jns
movsl
fdivl
daa
xchg
push
sub
insl
subb
mov
ret
cmp
jno
adc
jns
mov
jg
push
out
push
sbb
mov
pop
and
sub
and
jns
and
test
mov
pop
imul
ret
arpl
rcl
ror
mov
ret
xchg
fdivs
dec
imul
imul
pop
in
cmc
add
mov
gs
aas
xchg
push
ret
stos
scas
mov
icebp
and
mov
enter
iret
mov
stos
dec
pop
cmp
ss
or
pop
cwtl
dec
lea
jl
icebp
ljmp
pop
pop
jae
jmp
push
xor
rorb
xor
jnp
mov
xchg
mov
xchg
jl
xlat
mov
mov
mov
mov
xor
in
add
pop
xchg
and
sbbb
xchg
fsub
mov
into
add
movsl
xchg
mulb
pop
adc
fidivrs
std
ret
pusha
clc
setg
das
and
test
xor
dec
out
mov
loopne
cmpsl
lods
movsl
dec
lret
adc
cmpsb
test
dec
and
scas
cmc
inc
jns
mov
out
insl
into
lret
cmp
dec
addl
idiv
mov
imul
inc
pop
aad
xor
ret
cmp
adc
inc
pop
icebp
sub
out
mov
dec
mov
add
jo
outsb
sub
sbb
cmp
xchg
inc
out
lea
sub
and
dec
test
aam
stc
scas
dec
pop
cmc
adcb
add
in
push
push
daa
cmc
sub
xchg
into
loopne
shr
nop
fcomps
inc
out
fidivs
lds
sbb
fbstp
arpl
or
mov
inc
in
fdivrs
or
lock
nop
addr16
or
lock
ds
inc
loope
jns
ds
lahf
push
add
or
sub
fisubl
sbb
cwtl
push
and
int3
rol
cmc
mov
xlat
mov
fistpll
das
out
pop
inc
xor
push
xor
pop
cmp
jnp
sbb
dec
jno
dec
cmpb
dec
jnp
push
neg
sbb
shl
ss
mov
mov
cmp
sti
scas
movsb
inc
xor
nop
pop
or
mov
ss
inc
shl
jne
cmp
fisttpll
dec
or
push
dec
inc
add
mov
or
dec
sub
je
fsubrs
aaa
mov
mov
ljmp
scas
xchg
test
mov
inc
jns
lret
or
test
cmp
lods
pop
sbb
out
fwait
jns
imul
les
icebp
inc
xbegin
jp
push
pop
push
pushf
xor
pushf
fwait
push
push
pop
or
mov
push
cmp
push
push
sbb
mov
mov
mov
xor
sub
mov
jmp
pop
in
out
repnz
loop
inc
xchg
add
jo
push
scas
jge
aad
pop
aas
pop
push
or
cmpsl
lock
add
pop
les
ljmp
mov
sahf
dec
inc
outsl
xchg
mov
jmp
inc
iret
orb
movsl
rorl
int
data16
push
repz
sbbl
nop
je
add
push
aas
insb
lea
push
mov
xchg
pop
sbb
ljmp
jo
mov
mov
dec
imul
pop
sbb
pop
repz
movsb
nop
shll
movsl
dec
cmp
add
xchg
inc
stos
pop
dec
and
divb
xchg
repnz
ja
pop
or
xor
jbe
scas
movsb
mov
ret
scas
mov
add
cmp
sarl
jb
scas
pop
pushf
aam
pop
ljmp
jmp
lock
push
cmp
mov
push
xchg
mov
fs
cmp
addr16
push
or
sbb
test
stc
aas
push
xchg
jmp
xchg
mov
jecxz
les
les
aas
jge
fidivrs
andb
movsb
push
inc
inc
xchg
addr16
mov
sbb
out
mov
mov
fistps
add
inc
lret
pop
inc
sbb
mov
lahf
daa
cmp
jp
xor
jge
nop
cmp
mov
xorb
je
push
mov
shll
dec
inc
xor
dec
add
adc
push
test
xlat
lcall
in
dec
mov
sbb
jns
je
mov
jae
mov
shrb
push
ret
fidivrl
loope
cmp
pushf
sahf
icebp
pop
movl
pusha
enter
xlat
test
rorb
mov
adc
and
rcrb
xor
push
xor
pusha
cmp
add
inc
out
sahf
cmpsb
mov
cmc
xor
popf
mov
cmp
lea
and
dec
xchg
cmp
lret
dec
push
cmc
sub
gs
in
mov
add
sti
mov
repz
sub
cmc
push
loope
addr16
loopne
shrb
mov
or
jg
xor
add
xchg
aam
pushl
xchg
lods
push
iret
scas
shl
xor
icebp
in
jne
sti
or
jp
xchg
sub
jae
push
lock
push
cltd
cmp
ret
nop
pushf
sbb
adc
and
push
and
push
xchg
cld
xor
popa
push
fdivr
gs
jge
shrl
jmp
aaa
movsb
sub
xchg
faddl
push
loopne
ret
adc
int3
and
inc
jl
push
pop
and
shl
xchg
jo
add
sub
ds
mov
mov
sbb
add
rcrl
cwtl
aad
jno
dec
mov
test
sti
dec
outsl
mov
rorb
jge
and
xor
push
js
mov
xchg
and
sarl
std
movsl
aad
inc
lret
ret
pop
ja
cltd
sti
xor
xor
dec
cs
stos
mov
add
xchg
mov
inc
mov
sbb
xor
push
and
clc
jle
jp
and
dec
lret
xor
mov
or
add
mov
ljmp
insl
outsb
dec
cs
fildll
cli
rcll
jbe
imul
sarl
or
jp
cwtl
pop
jb
mov
add
pop
pop
bound
fwait
lea
aaa
mov
add
jbe
jo
sahf
sub
cmp
ret
dec
xchg
icebp
aad
inc
push
xchg
fsubl
xor
imulb
or
movsb
mov
cmp
xor
rclb
int3
pushf
nop
outsb
sub
leave
in
in
clc
xchg
inc
jmp
dec
in
mov
mov
ret
fidivrl
pop
dec
aad
inc
sub
or
add
aam
loopne
popf
shll
scas
xor
in
add
mov
cmc
cmp
sbb
fcomp
xchg
mov
fistpl
add
adc
mov
xor
push
push
les
fdivrs
adc
popf
xchg
mov
jg
dec
test
addr16
das
in
in
cmpsl
push
cmp
stc
push
and
rcl
jb
iret
pusha
andb
lea
and
stos
pop
pmuludq
xchg
xor
repz
ss
fnsave
movsl
lods
pop
adc
push
test
fsubrp
rolb
cld
into
idiv
push
sub
cmp
test
dec
imul
adcl
insb
je
in
fisttpl
sbb
jne
mov
iret
cmp
adc
cmp
xlat
movsl
std
pop
pusha
loope
xchg
mov
test
rol
adc
pusha
aad
cmpsl
sub
outsb
push
sbb
aam
push
cld
cltd
movsb
out
pop
cltd
cltd
mov
iret
lods
jg
xchg
es
xor
sub
orb
nop
jo
mov
cmp
mov
in
sbb
inc
rcr
push
fld
dec
jne
scas
psrld
out
and
pop
jnp
lahf
push
iret
loop
mov
add
mov
scas
addr16
test
adc
jae
orl
mov
ljmp
bnd
test
negl
pop
lahf
inc
stc
sahf
xor
sti
sbb
cmp
ret
pop
lret
xchg
sbb
pop
testb
jnp
xor
xchg
dec
aam
xchg
pop
cli
test
lcall
mov
aad
or
lods
mov
sbb
push
push
orb
sbb
mov
out
fidivrs
mov
lret
cltd
pop
outsb
dec
lahf
cmp
mov
mov
sub
ror
es
into
lahf
movsl
xor
int3
jg
lods
test
xor
and
mov
icebp
mulb
mov
shlb
xlat
and
push
jb
in
loopne
mov
inc
adc
dec
sub
lods
std
lcall
imul
xor
scas
jmp
outsb
std
dec
lods
add
push
cwtl
loop
scas
xchg
mov
pop
pop
push
push
mov
dec
std
fisttpl
jae
jno
mov
xchg
push
call
test
sub
out
or
ja
sub
lcall
es
cli
arpl
and
test
fcomps
clc
in
mov
test
sarb
lcall
inc
xchg
loope
arpl
and
sbb
sbb
pop
push
in
nop
outsl
add
imul
xor
subb
pop
test
push
test
adc
jmp
sbb
sub
jmp
jecxz
push
jecxz
inc
cli
loop
enter
insl
add
popf
xchg
push
sub
iret
fdivrl
mov
or
jbe
lea
dec
cli
outsl
nop
imul
stc
or
adc
and
mov
lods
jmp
gs
loop
roll
mov
xor
stos
sbb
push
fisubrs
mov
out
imul
xchg
mov
out
cmp
fadd
dec
dec
mov
and
in
adc
imul
mull
and
add
xchg
dec
xorl
cwtl
xchg
pusha
pushf
adc
stos
std
jo
jg
sub
sbb
adc
adc
xchg
data16
pop
xchg
mov
jnp
mov
mov
cmp
rol
inc
repz
iret
cmpsb
and
das
fcoml
out
incl
push
jnp
dec
insb
test
in
insb
push
or
incb
jge
jmp
pop
pushf
adc
mov
adc
in
dec
xchg
mov
add
es
push
and
pushf
jns
in
hlt
mov
inc
test
shl
inc
lods
adc
in
mov
lock
inc
push
xchg
mov
adc
aad
add
sub
loopne
mov
jns
adc
jg
cwtl
xchg
mov
mov
in
nop
loope
add
or
mov
icebp
inc
add
mov
std
cmp
or
shrl
in
jne
rcrb
mov
icebp
jno
sbb
stc
fmulp
enter
inc
xchg
jmp
std
leave
stos
icebp
ljmp
in
jp
push
fsin
push
outsb
insb
push
pop
push
mov
sbb
aam
dec
addr16
fistl
pushf
xchg
jno
xchg
pusha
mov
pop
je
xor
sbb
cld
fs
frstor
xchg
lock
inc
mov
fldt
les
addr16
cmpsl
loop
inc
sahf
jb
int
mov
aam
xchg
dec
loopne
xor
push
ret
mov
xor
aas
js
dec
pop
std
arpl
arpl
jmp
repz
push
sbb
outsl
call
mov
fdivp
or
test
inc
and
pop
sbb
jo
sub
or
cmp
pop
lret
inc
jno
lods
xchg
loope
popf
popa
xchg
jge
push
cld
mov
mov
fdivrs
icebp
xchg
push
sbb
mov
fcoms
stos
jecxz
adc
loope
dec
pop
dec
pop
jbe
sbb
test
div
jb
clc
fnstsw
push
in
aaa
push
test
mov
mov
lds
jno
popf
push
aas
jbe
xchg
xor
sbb
lods
sahf
lea
imul
pop
lret
cmp
jge
jmp
jmp
push
stc
mov
subl
lret
jle
jg
add
pusha
sbb
and
popf
rol
adc
outsb
std
and
cltd
insb
sub
dec
out
popa
cmp
dec
push
lds
jo
out
ds
mov
inc
pop
popa
in
mov
add
xorb
inc
jge
add
mov
int
test
mov
stos
pushl
push
cwtl
jns
in
dec
add
out
cld
mov
dec
xor
repz
xchg
xor
push
or
or
dec
bound
cmp
mov
mov
or
add
pop
xlat
fwait
movsl
imul
jecxz
cmp
xor
mov
imul
or
push
lods
mov
mov
sub
cwtl
mov
cli
push
push
mov
daa
inc
into
mov
mov
xchg
push
lods
sti
dec
or
call
xchg
loope
fs
sarb
xchg
pop
xchg
sub
fadds
cltd
lods
ds
add
adc
std
inc
mov
daa
pop
inc
loopne
dec
dec
jns
cmp
sub
ja
je
push
mov
scas
pop
gs
add
xchg
mov
add
mov
aad
pop
je
lret
xchg
inc
test
mov
or
sbb
push
xchg
mov
xchg
sub
into
pusha
xor
mov
pop
xchg
push
add
adc
xor
mov
sbbb
push
js,pn
and
lret
mov
paddd
cli
xchg
add
push
frstor
sbb
test
ljmp
adc
cmpsl
hlt
lods
out
ja
xorl
js
movsb
leave
fcoml
lret
dec
iret
enter
lods
incb
shrb
sbbl
daa
mov
adc
xor
aam
shl
mov
mov
out
sarl
xor
inc
sbb
mov
popf
or
es
nop
mov
jno
and
dec
mov
stos
gs
scas
pusha
ja
cmc
mov
cs
jo
fistpl
cmp
pop
xchg
fidivs
sti
xor
sub
and
mov
xor
jno
jno
sbb
enter
fisttpl
std
ljmp
cmp
pop
xlat
cld
icebp
in
cwtl
fadds
and
mov
cmp
into
dec
push
out
inc
add
sub
cwtl
inc
sub
lcall
pop
lret
int3
mov
mov
loope
or
int3
lret
in
sbb
mov
pop
xchg
test
test
lods
subb
sub
ret
cmp
lret
hlt
test
rclb
dec
int3
jnp
icebp
or
daa
loop
mov
jns
movb
adc
std
add
addr16
xor
in
xchg
mov
bound
pop
enter
sub
ret
jmp
into
cmp
push
sti
decl
jb
aaa
fs
fnstcw
jg
jmp
jno
enter
sbb
jne
push
shl
fsts
mov
xor
mov
push
lea
out
sbb
xchg
cmp
xlat
pop
mov
xor
and
clc
mov
xchg
jns
push
jcxz
outsl
fimull
ljmp
rolb
bound
jp
lcall
dec
or
dec
test
shll
out
pop
int3
loopne
xchg
and
mov
sbb
sbb
sti
lock
in
pop
mov
pushf
mov
adc
inc
mov
and
push
sbb
cs
or
lret
cmc
js
shl
xchg
adc
cmp
add
call
jnp
mov
data16
jo
adc
inc
daa
mov
jo
icebp
outsl
testl
test
repz
jae
adc
repz
stos
cmpsl
pop
rolb
inc
divl
adc
sub
jno
cld
cmp
jns,pt
xor
sub
ret
dec
ja
xchg
sbb
push
xchg
pop
mov
xor
pop
push
ds
push
xchg
xor
mov
shll
mov
lods
add
cli
mov
mov
les
mov
pushf
je
test
sbb
jne
jne
fbstp
lret
ret
lret
mov
jmp
add
mov
sub
sbb
sbb
hlt
enter
gs
int
les
xchg
pop
flds
test
or
stos
movsl
stc
inc
jp
imul
jno
loop
cmp
mov
test
fdivl
imul
icebp
adc
push
mov
add
jnp
adc
cmp
xchg
mov
out
inc
das
adc
mov
jo
add
mulb
xor
sub
mov
push
pop
pusha
lods
popa
in
or
mov
and
adc
cmp
cmpsb
outsl
sub
shlb
lock
es
lea
pop
mov
pop
rorb
gs
jnp
fwait
push
les
jne
jbe
xchg
lock
mov
jb
hlt
or
fwait
insb
fwait
cmp
jp
shll
adc
cmp
clc
sbb
xor
stc
or
mov
iret
mov
push
pop
ss
pop
pusha
nop
mov
sbb
inc
pop
repz
mov
out
push
out
pop
add
movsb
inc
lods
in
mov
xchg
cmp
mov
xchg
sub
add
inc
sbb
dec
or
bound
scas
adc
mov
adc
shl
loope
stos
lcall
loope
push
call
fsubrs
ja
xor
sbb
lea
xor
sahf
mov
cmpsb
pop
fisttps
imul
cltd
push
push
xor
arpl
in
idivb
pop
pop
push
mov
xchg
popf
test
mov
add
jle
mov
sub
sub
fldenv
adc
cli
adc
and
mov
bound
jne
stos
fldt
mov
enter
dec
mov
cmp
mov
test
xchg
add
adc
movsl
arpl
outsl
inc
push
xchg
stc
cmp
cld
add
sub
inc
adc
movsl
push
aaa
or
jg
jl
mov
cltd
insb
jl
dec
je
imul
push
int
popf
sub
push
pop
out
ret
loop
mov
cmp
cmp
mov
rol
adc
idivb
pop
movsb
add
push
sbb
cmp
jns
and
lea
push
xchg
inc
loopne,pn
add
pop
mov
cmpsb
call
shr
cmp
push
stos
mov
sahf
dec
mov
add
pushf
push
shlb
ret
pop
add
sbb
dec
loop
jno
mov
mov
popf
sub
xchg
xchg
dec
inc
jne
insb
hlt
test
cld
lahf
nop
outsb
mov
or
into
mov
fs
add
in
cmp
jle
in
rcll
xor
mov
out
jo
leave
movsb
mov
lods
sbb
gs
arpl
mov
jg
mov
pop
cltd
mov
mov
jae
and
xlat
or
aas
jbe
mov
sub
fimull
iret
sbb
sbb
mov
mov
or
pop
sbbb
mov
aaa
lock
call
out
out
stos
mov
mov
int
lods
pusha
pop
dec
movups
pop
or
sub
jo
jle
lea
mov
int
cmp
popf
aaa
enter
add
mov
movsb
lahf
mov
jle
jb
cmpsl
cmp
sub
mov
push
daa
and
repnz
sub
adc
or
jp
fisttpll
jns
mov
pop
outsb
movsl
xor
in
mov
mov
out
mov
jmp
fld
mov
lock
push
and
scas
test
sub
faddl
mov
aam
xchg
ljmp
lret
sti
test
es
and
stos
mov
mov
adc
les
and
mov
js
cmp
xchg
dec
test
xor
pop
ds
ss
cmp
fld
scas
gs
jge
sbb
out
mov
mov
add
or
mov
fwait
shl
sbb
sbb
fdivrl
shll
cmp
aas
out
and
daa
pop
xor
mov
adc
loop
sub
ficompl
mov
dec
out
cmpsl
jns
lds
mov
dec
xor
repnz
add
pop
pusha
xor
pop
cmp
jg
inc
ja
call
imul
mov
xor
lret
jle
enter
adc
adc
popf
pop
push
cmp
adc
cli
cmpsb
push
sub
pop
sub
arpl
xchg
pop
ret
mov
loope
mov
cwtl
push
clc
loope
stc
mov
test
push
add
lds
xor
mov
and
pop
xchg
comiss
pop
out
pop
scas
mov
mov
cmp
das
dec
bound
pop
sub
stos
add
sub
pop
mov
lcall
jmp
lods
mov
pushf
repnz
outsl
pop
inc
push
int3
mov
shlb
cmp
dec
sbbl
ret
inc
xor
sub
inc
shrl
je
clc
pop
lds
add
jbe
ret
or
or
xor
rolb
dec
dec
insb
inc
sub
je
push
xchg
in
pop
xchg
int3
sub
inc
and
add
movsl
cmp
mov
jecxz
rclb
es
push
int3
sti
cmpl
daa
lods
subb
sub
push
cmp
or
arpl
pop
mov
lds
xchg
popa
ljmp
fiaddl
stos
push
cmp
dec
shl
mov
out
adc
cmp
inc
lret
jbe
das
stc
sbb
jle
or
lret
test
cmpsl
cwtl
cmp
cld
sbb
pop
mov
dec
ret
xor
je
cmp
sbb
loopne
mul
jle
dec
movhps
mov
mov
jo
scas
xorb
cmp
inc
pushf
xchg
fisttps
icebp
jno
loopne
jae
lods
xchg
mov
aad
or
pop
adc
push
cmp
pop
jne
mov
pop
dec
pop
push
dec
inc
xlat
pop
push
fwait
jbe
jo
pop
inc
and
aam
sub
out
add
js
sub
xor
pop
gs
adc
sbb
rclb
sbb
mov
icebp
movsb
nop
push
mov
int3
xchg
sbb
pop
sub
gs
daa
ret
xchg
fwait
iret
add
cli
pop
xchg
xor
clc
ud2
je
fsubl
loop
add
cs
push
xchg
fnstsw
dec
ljmp
pop
mov
outsl
inc
add
bound
cmpsl
fsubl
xchg
dec
xor
sub
dec
inc
data16
ja
imul
fiaddl
cmp
jge
add
sarl
repnz
mov
stc
inc
pop
jae
fnstcw
and
ret
push
std
sub
xor
movsb
arpl
arpl
lock
sahf
sbbb
xor
inc
push
int3
loop
pusha
movb
fsubr
clc
or
and
adc
test
int
les
jle
xor
cmpsb
je
pop
push
movsb
pop
cmp
nop
shll
jmp
adcl
inc
jecxz
jmp
jae
add
fcomps
pslld
pop
leave
jp
jno
arpl
ljmp
rcll
dec
push
xchg
xchg
stos
movsl
pop
lret
scas
js
iret
clc
loope
or
rcrl
mov
out
push
ss
das
cltd
dec
push
cwtl
into
daa
or
nop
addl
jns
dec
icebp
movsl
sahf
out
stos
int
sti
mov
or
repnz
adc
shlb
lahf
push
pusha
loop
fdivl
jbe
sbb
ret
mov
xchg
cmp
pop
or
xchg
xchg
hlt
xor
rcll
in
in
xchg
into
mov
inc
pushf
mov
sbb
sbb
add
xlat
mov
mov
sahf
lods
mov
jmp
scas
jne
sti
inc
cltd
mov
sbb
mov
dec
cs
fsts
sbb
scas
stos
jb
mov
aaa
andl
pop
fldt
mov
data16
inc
aam
imul
pop
lcall
mov
outsl
lods
inc
test
iret
movsl
sbbb
inc
mov
testb
sbb
dec
jl
xor
and
sbb
aad
push
push
mov
sub
nop
aaa
pusha
and
arpl
or
movsb
ljmp
aad
xchg
nop
mov
jle
inc
shll
mov
cmp
cmp
xchg
xchg
test
out
outsl
sahf
out
outsl
or
xor
xchg
pop
sarb
aad
shr
add
subb
in
sbb
mov
std
sub
push
pop
xor
push
sbb
sub
mov
adc
fsubl
cld
xchg
aaa
or
enter
sbb
pop
xchg
dec
out
sbb
into
push
rolb
ljmp
dec
adc
int
je
test
out
mov
iret
repnz
jmp
jmp
idivb
dec
arpl
mov
iret
adc
std
jne
mov
mov
push
std
ja
fstpt
fcomi
xlat
ja
cs
addl
xor
push
dec
pop
out
gs
jg
cmp
push
and
push
mov
sbb
add
cmp
in
int3
rcll
jne
fidivrs
push
cltd
push
cmp
bound
insl
cmp
aas
xlat
mov
pop
inc
dec
add
ret
fwait
repnz
sti
int
or
xor
adc
and
sub
test
lret
and
jmp
nop
and
divl
cltd
shll
sub
and
jb
mov
add
push
call
pop
mov
ljmp
scas
mov
jb
add
call
hlt
insb
inc
frstor
push
sub
jl
xchg
mov
mov
pushf
rcrl
mov
cmp
and
ja
or
inc
jmp
sbb
add
sub
mov
dec
push
xor
mov
popa
dec
pushf
and
cmp
out
aad
cli
test
adcb
jecxz
repz
jne
leave
movsb
and
hlt
fistpl
mov
add
std
xchg
xor
lods
insl
inc
pushf
mov
imul
std
fdivr
mov
sub
ljmp
cmp
or
ffree
lahf
ret
and
loopne
jae
out
or
subb
adc
pop
lcall
jecxz
mov
jnp
nop
daa
insl
mov
in
test
not
or
sti
inc
adc
ret
movsb
lds
dec
js
sbb
test
add
adc
fdivr
rcll
pop
cmp
dec
es
flds
jb
mov
pop
cmp
aas
scas
pop
inc
insb
and
dec
jge
jo
sbb
stos
cld
mov
jbe
cmp
das
jl
adc
cwtl
cmp
lret
ret
iret
jmp
add
pop
and
xchg
rcl
loope
jbe
inc
xchg
push
inc
adc
nop
call
jne
imul
aaa
and
pop
pop
cmc
stos
xchg
outsl
push
mov
ret
and
aaa
mov
dec
int
mov
mov
xchg
fiaddl
addr16
mov
sbb
and
fistps
sahf
daa
fcomi
ror
dec
cmp
loope
and
popf
sti
ljmp
dec
pop
and
sarl
sub
mov
scas
and
jl
inc
sub
or
and
and
pop
push
push
shll
scas
push
xorb
cmp
test
mov
jae
mov
add
mov
in
mov
scas
test
mov
aad
out
jge
pop
sti
sbb
in
sub
sbb
xor
shll
cmp
lcall
js
jne
insb
nop
ss
dec
ret
adc
ljmp
in
xlat
push
push
and
test
out
sub
daa
xor
bswap
xchg
jg
push
scas
aad
dec
adc
movsb
inc
add
ds
in
xor
push
xchg
xchg
mov
or
push
lea
in
lea
mov
adc
inc
jg
inc
addr16
jmp
clc
mov
push
lcall
xchg
mov
lea
aaa
mov
pop
add
lcall
das
pushf
sbb
add
jae
int
push
in
push
ljmp
push
xor
stc
mov
push
push
insb
add
add
mov
lods
dec
inc
stos
mov
fdivrl
das
arpl
int3
xchg
inc
ja
outsl
movsl
sbb
div
test
jmp
xor
sbb
bound
fsubs
or
jmp
cwtl
or
pusha
call
xor
dec
push
stos
cmp
aad
dec
call
push
sti
mov
aaa
outsl
popf
bound
cmp
aad
outsb
push
push
lea
dec
xor
mov
xor
ja
nop
add
lock
sbb
scas
das
shl
xor
pop
add
popa
lret
sub
es
into
mov
sub
adc
sub
out
popa
aad
xchg
pop
push
jno
pusha
in
and
and
sub
or
sarb
test
outsl
xchg
dec
ret
aad
add
mov
pop
pop
mov
xchg
jne
int3
lock
ret
aam
xchg
sub
sbb
mov
ret
lret
idivb
dec
fnstenv
cmc
push
loopne
adc
data16
fsubp
push
sub
call
mov
jo
jo
or
leave
subl
lock
stc
dec
add
syscall
and
or
mov
jmp
in
lret
mov
mov
lret
cwtl
cmp
icebp
sbb
or
sub
cld
dec
adc
or
and
mov
pop
cmpsl
jbe
add
aaa
pop
fildl
mov
or
mov
adc
stos
cmp
ss
stos
push
aad
push
mov
aad
and
popa
add
and
in
inc
adc
repnz
popf
arpl
lahf
adc
push
and
lahf
xor
mov
xor
or
loop
clc
out
dec
xchg
pop
out
arpl
outsl
adcl
cltd
dec
adc
lock
push
adc
iret
sti
jbe
and
xchg
inc
or
sub
imul
nop
cld
mov
aaa
std
adc
add
jbe
aas
mov
fcoml
mov
mov
push
gs
fistpl
jmp
mov
repnz
push
movd
push
and
sub
sar
xor
test
add
inc
data16
mov
cmp
pop
add
scas
dec
or
jmp
push
push
sbb
es
or
lods
fsubrl
jg
jo
imul
ja
addr16
push
repnz
cmp
div
add
mov
fwait
dec
cmp
xchg
xor
arpl
mov
scas
lods
sarb
pop
int
negl
scas
xchg
popa
xor
sahf
pop
hlt
cmp
push
dec
jb
adc
sbb
or
cmc
jbe
sub
stos
pop
stos
pop
push
mov
mov
push
aam
es
and
push
test
mov
pop
mov
sub
dec
gs
sbb
adc
mov
test
fwait
pop
sub
and
push
inc
lds
jno
sahf
daa
push
test
push
push
sahf
inc
shrb
clc
scas
sbb
jns
dec
add
js
movsb
ljmp
inc
lret
mov
fwait
dec
push
xchg
aam
imul
imul
test
test
push
rol
jecxz
pop
mov
push
mov
hlt
pmuludq
les
adc
sbb
gs
mov
xorb
mov
imul
test
addb
mov
cmpsl
leave
pop
jg
das
mov
repz
push
das
cmp
add
mov
jb
sahf
pop
or
lea
iret
lcall
xor
lods
lods
in
xchg
cmp
mov
sub
sbb
jnp
adc
dec
push
xchg
sub
mov
adc
js
jle
fistps
sbb
int
adc
xchg
pop
js
out
shrl
xor
cmpsb
fs
cmp
jb
mov
idivl
jne
imull
test
mov
jns
inc
jmp
xor
int
mov
aam
inc
cwtl
out
jno
mov
pusha
fdivs
cmpb
in
aaa
mov
es
icebp
lcall
or
push
testl
fcmovb
repnz
xor
cltd
aas
push
sub
aad
pop
fadd
dec
lea
xor
push
les
out
cmp
cmp
add
or
fadds
inc
sub
pop
pusha
js
xlat
or
into
jo
xor
rcrb
cld
pop
cmp
mov
push
test
repz
dec
stos
mov
call
xchg
sub
lock
movsb
xchg
or
mov
fwait
push
repz
xor
sub
inc
out
pop
xchg
dec
inc
data16
mov
mov
lds
jnp
pop
popa
ja
mov
in
jo
mov
mov
inc
in
fmull
cmp
idivb
pop
lret
dec
xor
jno
mov
pop
dec
lea
rcll
xchg
das
daa
sub
decl
shr
mov
inc
cmp
pop
popa
ja
or
and
lret
pusha
pop
push
inc
outsb
aas
clc
cmp
jo
adc
mov
mov
ror
mov
faddl
xor
push
dec
roll
sub
push
sarb
outsl
out
add
imul
es
or
push
pusha
jge
mov
es
mov
bound
pop
test
jmp
pop
ret
sub
bound
add
jp
and
jne
and
loope
cmp
adc
fildl
daa
or
outsb
cmp
into
pop
ret
mov
stos
cmp
mov
rorb
or
pop
data16
loope
pop
dec
adc
imul
stos
ja
mov
jo
fldt
xchg
jns
pop
mov
repnz
imul
addl
xchg
pop
add
nop
arpl
mov
xchg
dec
daa
xchg
insb
dec
mov
jno
inc
and
and
aad
ficomps
mov
call
lds
dec
mov
cmc
bound
stos
cli
sub
xor
fstpl
arpl
sbb
or
dec
xor
notb
mov
dec
iret
sub
mov
sub
adc
shlb
fwait
and
jns
out
leave
loop
aaa
cltd
mov
adc
xlat
cwtl
mov
xor
dec
icebp
or
adcl
or
lcall
movsl
sahf
mov
push
dec
scas
ret
cmpsl
and
jb
xchg
pop
loope
xchg
in
jmp
and
adc
scas
lods
pop
pop
shlb
pop
dec
fwait
push
repnz
aad
lret
mov
fwait
out
pushf
imulb
test
xor
pop
xor
jmp
pop
or
lods
push
inc
insb
sbb
scas
test
mov
mov
inc
sbb
jbe
sbb
sbb
adc
add
subb
es
mov
movsl
repnz
ret
xchg
test
clc
inc
les
lods
mov
sub
cvtps2pd
inc
and
out
mov
fdivs
cli
xor
pushf
in
add
jae
mov
mov
push
pop
pusha
movsl
pop
xchg
push
or
adc
and
push
dec
push
orb
mov
dec
pop
popaw
out
push
adc
popf
sbb
pop
outsb
fbstp
jmp
pop
pop
push
push
or
sti
xchg
dec
out
fs
xchg
lret
ret
sbb
imul
out
movsb
call
sbb
or
pop
loope
xorl
mov
fmulp
push
js
pmulhuw
jl
daa
adc
xchg
xchg
add
ficoml
xor
xorb
mov
ljmp
push
lock
jb
and
pop
pop
loopne
cli
stos
shrb
sarl
mov
jb
pop
sbb
out
sbbb
test
xchg
jecxz
pop
fisubrs
in
icebp
xchg
sbb
in
out
les
in
jecxz,pn
out
mov
clc
hlt
mov
mov
mov
xor
xchg
in
push
insb
mov
ret
sarl
daa
rclb
pop
enter
enter
inc
repnz
cltd
les
shr
mov
fwait
mov
push
mov
xor
dec
sahf
test
pop
push
add
sub
jp
pusha
js
rolb
orb
outsb
dec
imul
or
pop
hlt
pop
daa
ljmp
pop
into
pop
jg
lds
js
jbe
and
sarl
pop
dec
push
push
mov
shl
jg
popa
cmp
insb
dec
mov
dec
cmpsb
jne
imul
mov
xchg
xor
push
xlat
push
fmull
fwait
xor
mov
mov
mov
or
js
into
and
sbb
xchg
jl
mul
fcmovbe
pop
xor
adc
cmp
inc
int
ljmp
popa
xchg
pop
outsl
add
sbb
adc
xchg
pop
fs
jne
sbb
jbe
mov
mov
inc
jo
mov
mov
nop
pop
leave
jmp
mov
js
jmp
jnp
outsl
cld
lock
fs
out
xrelease
push
inc
push
xor
and
mov
push
jg
mov
sub
pop
testb
repnz
aas
nop
dec
adc
mov
inc
add
mov
fstpt
sub
ret
jmp
aad
jno
into
in
loopne
mov
nop
loope
mov
sub
and
jno
fsubs
jg
sbb
dec
scas
stos
in
cmp
mov
outsl
je
cmc
lods
dec
inc
adc
jge
les
ljmp
cmp
ret
call
test
pushl
stc
dec
fstpt
pop
or
jae
lcall
fs
mov
adc
rorb
push
out
fwait
mov
adc
cmpsb
adc
into
hlt
dec
push
xor
mov
sbb
cwtl
jecxz
movsl
repnz
loopne
adc
push
mov
sbb
cmpsb
push
mov
push
mov
addr16
jmp
mov
push
imul
mov
add
add
orb
aas
jp
push
sbbl
sbb
mov
bndldx
or
xchg
sbb
xchg
mov
mov
std
pop
sbb
movaps
sub
sub
push
and
aad
je
das
sahf
lods
je
push
jl
and
xchg
repz
aam
repz
and
fs
clc
negb
jae
cmp
cmp
sub
hlt
das
pushf
cmp
repz
lahf
and
mov
movsb
loope
adc
sbb
lahf
ss
mov
pusha
push
pop
xorb
mov
shrb
int3
addr16
mov
inc
push
dec
adc
add
or
jmp
xor
or
test
cmp
or
cld
lret
sbb
and
lods
inc
das
leave
sahf
and
popf
idivl
or
mov
out
xor
mov
add
inc
cmpsl
adc
out
repnz
shll
scas
jo
jns
ja
cmpsb
gs
sbb
push
sti
insl
and
fisubs
pop
ja
jmp
cmp
mov
hlt
sahf
sti
jg
jne
mov
flds
dec
enter
pop
cmpsl
mov
cmp
dec
and
in
sahf
addr16
mov
mov
jb
pop
cltd
inc
mov
mov
jo
xchg
dec
loope
leave
push
das
aas
push
lds
lock
repz
pusha
push
popa
lcall
pop
roll
iret
movsl
shl
inc
push
lcall
xlat
call
mov
sarb
xor
dec
call
sti
fists
nop
push
pop
es
pushf
popf
mov
lret
or
aas
in
lock
cltd
pop
push
and
dec
cltd
cltd
inc
cmp
pop
pop
push
rorl
sbb
adc
push
fwait
add
pop
xchg
test
add
add
popa
lret
mov
xchg
xor
outsl
cld
dec
shl
ss
test
xrelease
jae
jecxz
xor
mov
shrb
push
ja
sbb
jmp
popa
test
push
js
add
dec
inc
shlb
test
lret
mov
out
ja
popf
jmp
bound
outsl
std
adc
cmp
cs
push
sbb
test
or
jne
or
mov
sbb
je
lcall
aad
stc
mov
in
adc
aaa
decl
inc
gs
mov
and
push
sbb
mov
jne
dec
bndldx
nop
add
hlt
dec
out
push
out
insl
mov
cmp
pop
data16
dec
add
or
jle
add
pop
dec
push
xchg
aaa
roll
sbb
or
pop
in
fsts
xor
sarl
stos
mov
pop
fucom
mov
mov
out
rolb
xchg
outsb
jg
mov
ljmp
int3
cmp
jle
or
pop
xorl
add
js
push
xchg
cmp
ret
mov
add
adc
pop
add
jl
lret
fs
icebp
fbld
gs
pop
sti
les
inc
mov
xchg
xor
inc
ret
test
xor
gs
xor
pop
pop
outsl
ret
popf
sarl
mov
scas
and
aad
shlb
out
sbb
sub
icebp
jmp
popf
subb
lods
lods
mov
pop
insb
daa
hlt
add
gs
and
stc
in
gs
dec
fistps
out
jns
les
out
or
mov
scas
mov
dec
push
loopne
pop
sub
jo
out
mov
sub
add
sbb
sub
adc
aad
dec
inc
xlat
movsl
push
ficoml
adc
xor
add
dec
cmp
dec
jno
dec
std
sbb
xchg
mov
inc
sub
sbb
lcall
xor
call
jle
cmp
push
jle
aas
or
ret
lahf
jl
scas
pop
call
sub
dec
mov
pop
aam
test
xlat
mov
sbb
inc
ljmp
mov
sbb
add
movl
dec
std
gs
mov
dec
inc
jbe
lods
push
xchg
loope
in
repz
mov
mov
aam
push
adc
jbe
push
mov
loop
int
dec
xor
dec
stc
cmpsl
jo
mov
or
sbb
cwtl
sbb
jne
addl
mov
int3
sub
mov
jp
or
sbb
adc
add
nop
jno
mov
or
and
xchg
or
popa
cmpsl
push
cltd
and
sbb
sub
jecxz
push
frstor
aas
sbb
or
or
push
lahf
hlt
adc
gs
sbb
push
or
mov
jge
sbb
lret
rcl
adc
cs
scas
mov
push
sbb
lods
leave
or
sbb
cld
out
repnz
mov
sbb
sub
dec
cmpw
sbb
test
leave
mov
test
push
loopne
out
push
pushf
inc
insb
dec
out
sub
jnp
add
fwait
popa
in
fdivl
shlb
mov
bound
cmp
cld
addr16
jp
fisubs
sub
hlt
out
or
mov
push
pusha
fldcw
mov
call
das
inc
into
decl
scas
nop
aad
test
lds
mov
shrl
cwtl
mov
adc
js
std
jnp
fstpt
clc
cmp
out
mov
inc
xlat
fs
aad
shr
pushf
mov
les
fstps
sub
rclb
mov
and
push
rcrb
cmpsb
shl
mov
js
sbb
test
mov
pop
and
aaa
cs
push
stc
in
cmp
dec
filds
ds
pop
and
mov
xchg
mov
mov
cmp
jnp
or
jl
lea
add
je
pop
adc
pop
jns
xchg
pop
or
pop
test
xchg
push
dec
nop
mov
stos
cmpsb
xor
lods
sub
sti
fcmovbe
mov
iret
xor
popf
imul
nop
cmp
movsb
adc
hlt
cmp
adc
dec
movzbl
bound
mov
add
and
push
cmc
cs
repz
mov
mov
xchg
into
in
stc
push
in
cmp
fldl
pop
dec
movsb
or
aam
and
leave
push
fwait
push
cmp
stos
int3
dec
test
mov
xor
cld
in
lock
mulb
js
mov
jl
rorb
movsl
sub
lock
xor
adc
xchg
mov
pushf
xchg
or
push
cmp
and
xor
aas
out
sub
dec
lret
mov
or
stc
ret
fs
icebp
out
and
jb
xchg
stos
sub
sbb
sub
push
je
inc
xor
int
dec
mov
aad
rcrl
mov
xor
insl
push
sahf
cmpb
int
jo
pusha
rorb
stc
pop
mov
ja
mov
sub
filds
push
faddp
dec
xchg
outsl
out
pop
and
lods
pop
push
test
cmp
imul
jg
jbe
mov
cmp
aad
jnp
andl
mov
pop
cld
mov
fs
or
and
xchg
mov
ror
cli
sub
inc
lods
sub
imul
mov
rolb
adc
insb
mov
mov
scas
mov
sub
sarl
inc
jne
cwtl
mov
or
std
push
ljmp
out
dec
in
and
xor
loope,pt
push
stos
pop
ret
pop
xor
xchg
pop
jns
push
cmc
ret
jle
lods
sub
bound
mov
adc
jns
cmc
mov
add
adc
pop
inc
ds
outsb
je
inc
xchg
jo
dec
cmpsb
pop
out
or
loope
inc
pop
dec
ja
add
sub
pop
test
out
pop
lods
arpl
je
rorl
xchg
sbbl
pushf
sub
fwait
mov
and
push
in
mov
outsl
xchg
mov
bound
dec
out
adc
daa
mov
and
lcall
jle
lods
dec
or
xor
mov
leave
js
mov
repz
lahf
xor
dec
jns
jle
vmovss
adc
push
xor
sub
mov
adc
and
loop
mov
xor
push
and
test
pop
into
lds
adc
ds
push
or
jnp
xchg
cld
hlt
nop
dec
xchg
push
inc
imul
mov
ljmp
adc
mov
icebp
mov
mov
add
shl
insb
lods
jno
sbb
insl
mov
enter
icebp
cmp
mov
xor
mov
push
sub
dec
sub
jmp
and
mov
imul
xor
inc
ficompl
rcrb
mov
add
dec
in
int
fldenv
stos
test
stos
inc
sbb
clc
fcompl
or
out
sub
ds
mov
pop
out
pop
fildll
or
mov
idiv
in
and
cmpsb
sar
lds
mov
cmc
cld
neg
jno
addr16
xor
insb
mov
ljmp
addb
out
test
xchg
push
inc
cmpsl
dec
data16
or
inc
lods
dec
popf
insb
lods
xor
mov
fwait
jmp
push
mov
cmp
sti
data16
mov
mov
sbb
pop
stos
fnstsw
and
cmp
test
stc
sbb
mov
roll
fdivp
push
add
sub
pop
lret
lods
imul
loopne
add
daa
mov
cmpsb
loop
xchg
mov
xor
push
ror
mov
loope
pop
fsts
test
mov
pop
fmuls
stos
sub
cli
mov
fidivrl
jl
xchg
push
pop
jne
xchg
cmpsb
xor
dec
jmp
dec
push
mov
lds
push
adc
and
push
xorl
into
inc
out
xchg
test
pop
push
xchg
push
pusha
js
cmp
fidivl
cmpsl
mov
cltd
test
adc
push
xlat
push
or
fs
mov
xchg
push
adc
jmp
movsl
jecxz
jl
into
add
shl
sti
mov
mov
mov
jp
dec
sarb
je
jnp
dec
xlat
add
adc
and
ret
mov
shll
xchg
mov
jl
cmp
out
jle
out
jmp
mov
pop
idivb
orl
sub
and
cwtl
mov
mov
xchg
das
xor
insl
sub
repnz
mov
sahf
mov
mov
and
mov
dec
dec
mov
xchg
xor
and
in
push
mov
int
shlb
sub
mov
ret
sbb
aaa
cmp
mov
push
push
bound
and
lcall
mov
jae
in
outsl
sbb
pushf
aas
xchg
test
jp
mov
repz
sbb
jge
push
popa
scas
mov
sbb
jmp
jge
jg
lds
cmpsl
imul
cmpsl
shrl
aaa
dec
add
scas
push
cmp
dec
subl
fwait
pop
sbbb
fisttps
xorps
sbb
outsl
int
inc
bound
jne
mov
sub
pop
jbe
jmp
pop
xchg
push
popa
add
push
xor
xchg
ret
testb
inc
test
decl
dec
jns
pop
paddw
test
pop
jns
sbb
cmp
pop
mov
sbb
add
sub
jae
fbstp
xadd
test
stc
cld
out
mov
inc
add
jle
pushf
cmp
addl
cmpsb
mov
pop
pop
nop
push
nop
jg
or
in
scas
or
nop
mov
mov
mov
dec
test
sbb
sbb
lret
pop
jb
stos
out
ret
and
add
bound
dec
adc
and
cmp
pop
iret
aam
in
jne
push
sub
je
and
jge
ret
cmpsl
fucomp
inc
jp
dec
jne
in
cmp
add
sbb
cmc
cltd
lods
fs
xor
xor
rcrl
cmpsb
fldenv
mov
mov
xor
test
mov
and
stos
and
xchg
or
imul
in
sbb
cmpl
push
dec
mov
xchg
or
out
lds
outsl
nop
fidivl
lock
or
add
adc
pop
push
push
pop
mov
and
shlb
pop
adc
mov
adc
leave
push
lds
dec
jl
push
push
repnz
xor
sbb
mov
and
aam
jo
lods
in
insl
lods
cmpsb
rol
dec
mov
jp
jns
cs
movsl
bound
sarl
push
leave
in
scas
jbe
insb
ss
stos
test
cmp
aas
mov
pushf
add
insl
dec
popa
xchg
mov
mov
ficoml
inc
xlat
stos
gs
mov
lds
mov
ret
out
xchg
das
test
cltd
push
fiaddl
sbb
lret
sbb
mov
rol
inc
xor
adc
adc
outsl
push
int3
inc
les
or
sbb
push
jns
push
pop
or
test
ret
and
sahf
imul
sbb
outsl
mov
popf
xchg
mov
shll
ljmp
mov
or
es
jnp
pop
out
cwtl
jl
pop
jo
mov
push
dec
outsb
out
sti
fprem1
mov
xchg
inc
jmp
popa
xchg
mov
xchg
xlat
mov
test
mov
xor
cld
imul
pusha
aam
outsb
jnp
xchg
inc
mov
xor
iret
dec
fadd
int3
movsl
arpl
out
sbbl
jge
cld
cmp
jp
xlat
fs
pop
stos
mov
dec
into
test
daa
add
inc
jp
sbb
add
bound
outsb
and
pusha
ret
daa
ret
insl
cwtl
das
in
cwtl
dec
and
jl
cmc
jecxz
fs
or
adc
lret
addb
fidivs
imull
pop
xor
mov
aas
lcall
adc
jb
movsb
mov
js
dec
loop
dec
and
push
iret
adc
add
cmp
lahf
mov
sbb
ss
xor
fisubrs
or
ds
fld
repnz
push
sbb
xchg
cmpsl
ds
ret
mov
rcrl
jno
jl
out
pop
push
xor
std
popa
cmpsl
lret
pop
out
aas
mov
cmp
sub
cmp
aas
movl
jbe
mov
insb
push
jl
in
dec
inc
jg
js,pn
sbb
jb
push
jno
mov
js
push
dec
aaa
xchg
shrl
mov
push
dec
pop
or
fildll
jae
mov
push
add
popf
and
aam
in
sub
aaa
jge
in
bound
lods
or
add
sbb
pop
pop
inc
int
mov
adc
pop
inc
mov
mov
arpl
sahf
sub
xchg
adc
sbb
call
sti
inc
jb
jmp
jge
add
mov
cs
out
out
ja
data16
int
mov
neg
and
dec
mov
std
es
ljmp
mov
sarl
sbb
int
cmp
dec
outsl
pop
std
inc
pop
sbb
imul
add
add
xorl
push
idivl
xchg
lahf
dec
cmc
push
out
int3
rclb
push
mov
lds
dec
ss
nop
je
xorl
pushw
or
jno
mov
arpl
pop
scas
fisubl
mov
lods
add
clc
scas
orl
cmp
add
test
fdivp
and
adc
xchg
mov
lahf
sbbl
enter
fildl
xchg
and
sahf
mov
xchg
loopne
ljmp
out
je
jno
mov
iret
pop
mov
pusha
add
dec
or
lods
insb
jno
push
cmp
jb
scas
xchg
loopne
adc
dec
in
push
xor
and
scas
rcrb
cmc
out
mov
imul
sub
mov
cmpb
fcomps
push
sbb
or
iret
cmp
hlt
stos
push
adc
stos
push
aad
movsl
push
sti
loope
cld
out
inc
ja
lcall
xchg
mov
into
add
lcall
out
faddp
jl
fcmovu
inc
lahf
jns
xor
xor
mov
mov
mov
loope
in
out
or
lods
mov
cmp
pop
and
ljmp
cmp
aas
enter
xchg
andl
lret
adc
or
sub
nop
adc
cld
bound
aam
inc
outsb
xchg
add
fbld
dec
call
push
les
mov
pop
in
xchg
sbb
push
sub
and
inc
imul
out
pop
repnz
xchg
sahf
out
popa
cltd
fdivrl
iret
pop
mov
leave
mov
mov
cmpsl
adc
scas
dec
cli
sbb
mov
and
inc
or
insb
stos
adc
aam
stc
rolb
cmc
aad
incb
jns
push
sbb
repnz
lods
adc
test
stos
mov
test
ret
mov
jle
mov
dec
dec
call
sti
int
lret
imul
dec
jno
aaa
mov
jne
pop
outsb
outsb
push
repnz
fdivl
mov
sbb
fidivrs
push
js
data16
fisubrs
shlb
insb
jge
pop
mov
cmc
sbb
ja
lret
sub
inc
pusha
dec
bound
lahf
xchg
pop
jnp
fwait
lds
jne
adc
ret
xchg
mov
cli
cmp
mov
nop
addr16
scas
addl
sahf
test
jbe
push
sahf
int3
mov
jbe
push
stc
mov
das
push
add
adc
iret
sub
and
movsb
mov
mov
pop
std
outsl
xlat
mov
outsl
push
jae
je
pushf
outsb
mov
mov
lret
adc
ror
pop
stos
aam
ja
inc
dec
xchg
adcb
jl
add
fwait
cmp
or
orl
sbb
mov
sbb
loope
pop
scas
cli
push
jmp
cmpsb
pop
xor
xlat
mov
leave
xor
xchg
jg
dec
sarl
pusha
jp
inc
aad
movl
les
jbe
dec
or
pop
and
test
adc
sbb
or
movsl
jmp
xchg
jno
sub
ss
ja
cmpsl
cmp
call
jnp
aas
mov
add
jne
jp
test
pop
aaa
jge
cmp
scas
fisttpl
stos
pushf
mov
jo
xlat
outsb
loopne
lods
lret
clc
add
push
inc
sbb
insb
in
lcall
addr16
loope
fdiv
pop
or
or
add
fists
or
lcall
jnp
jns
test
roll
xlat
ja
cmp
cmpsl
mov
mov
xchg
inc
pop
fdivs
cmp
andb
cmp
adc
inc
repnz
outsb
xor
fldcw
dec
je
jecxz
add
dec
les
pop
leave
not
popf
test
scas
sub
lret
aas
nop
rcrl
sbb
xor
stc
sub
sub
push
inc
mulb
dec
roll
aaa
adcl
lret
dec
dec
cmc
sbb
sub
jae
push
movsl
sub
jbe
dec
push
mov
mov
jle
fdivl
fcomip
sub
nop
mov
sub
mov
push
scas
into
dec
hlt
cmp
xchg
and
or
fsubp
mov
orl
test
sub
pop
xor
inc
mov
xchg
sbb
ret
xchg
xchg
fldt
dec
imul
fdivr
les
loopne
imull
jmp
data16
lea
je
mov
sbb
pop
pop
stc
pop
sbb
loop
icebp
les
mov
add
pop
lds
add
sbb
mov
test
pushaw
and
pop
fwait
jno
jle
sub
jp
in
fcmovu
repnz
mov
aaa
ja
xchg
xlat
dec
dec
add
add
jae
xchg
fcmovnu
fstl
sbb
scas
into
add
xchg
fcoml
in
or
cmc
data16
xchg
fisubrs
dec
fs
inc
inc
cmc
push
inc
xlat
dec
dec
xchg
ljmp
dec
insb
shl
lcall
rcl
pop
mov
cli
icebp
xchg
testb
adc
lret
push
mov
push
hlt
scas
shlb
filds
addr16
jbe
scas
cwtl
push
cltd
aad
movsb
xchg
xchg
adc
aas
in
mov
in
lret
out
stos
loop
sbb
movsl
xchg
sub
and
push
sub
repnz
scas
in
mov
jge
push
cwtl
mov
bound
out
adc
test
fnstsw
lods
fisttps
xchg
add
xchg
pop
cmp
stos
mov
aad
addb
mov
mov
dec
test
adc
sub
fwait
scas
ss
sbb
inc
sub
xchg
pop
leave
mov
loope
int3
pop
icebp
jne
xor
in
jecxz
mov
lods
xor
mov
stc
dec
or
repz
popf
adc
sub
in
jnp
adc
pop
adc
popf
movsb
fs
jmp
xchg
fsubs
pop
jl
add
xor
inc
in
mov
ss
and
sub
faddl
add
cmp
pop
cmp
push
pop
out
adc
test
inc
add
xchg
lock
jle
shrb
and
xor
stc
and
add
stc
inc
mov
es
insl
int3
cs
inc
negb
shrb
aad
cmpsl
lret
inc
add
pop
cmpsl
dec
shl
xchg
ss
inc
clc
xor
sub
sub
cmp
adc
in
mov
pop
mulb
rorl
call
ret
enter
rcr
pop
andl
loope
dec
int
mov
int
lcall
daa
test
clc
adc
push
dec
arpl
sub
iret
std
inc
outsb
inc
call
adc
roll
les
cmp
xor
dec
lds
lds
aad
xchg
scas
test
cmpsb
stos
test
or
and
insl
add
xor
into
out
imul
icebp
jp
outsl
push
push
lods
push
cmp
mov
xchg
sahf
test
jae
das
xor
mov
pop
or
add
es
lods
pop
rcl
insb
std
outsb
or
scas
mov
adc
lock
imul
inc
ss
call
popf
insb
cmpsl
mov
jno
xchg
jg
pandn
fisttps
ja
cmpsb
nop
sahf
sbb
push
mov
inc
lret
push
loop
pop
adc
aad
xchg
jae,pt
ljmp
and
push
js
lahf
mov
cmp
mov
lcall
es
mov
lods
ja,pt
ret
imul
inc
sbb
pop
or
in
mov
adc
add
sbb
inc
scas
mov
fs
xchg
mov
xchg
rcrb
out
mov
inc
sbb
adc
sbb
push
hlt
adc
jl
test
hlt
call
cmp
in
fsts
mov
aaa
clc
stos
aad
mov
clc
adc
negl
push
adc
sbb
scas
xchg
xchg
sbb
jo
cmp
stc
ss
imul
sbb
mov
inc
or
daa
push
bts
iret
jne
sbb
xchg
adc
je
push
cmp
push
pop
mov
dec
ret
scas
popa
int
push
add
movsl
cld
or
push
in
adc
xchg
mov
ror
mov
or
mov
movsb
test
fwait
stos
jno
or
jnp
insb
out
pop
sbb
sub
shlb
test
mov
add
daa
mov
fiaddl
push
lret
adc
jecxz
push
adc
sub
push
dec
scas
xchg
jp
fdivr
pop
lds
repz
xchg
sub
push
in
icebp
xor
jle
cli
lods
and
std
push
push
or
lds
ja
inc
hlt
outsl
mov
insl
add
mov
mov
je
ja
push
pop
ret
repz
xchg
adc
je
insl
cmp
dec
pop
arpl
insl
cmp
ret
xor
adc
xor
jp
mov
sub
mov
dec
orl
mov
cs
xor
dec
xor
imul
out
cli
push
inc
jp
push
mov
push
repnz
dec
jge
stos
or
mov
out
lret
mov
dec
insl
iret
inc
adc
out
xchg
adc
jmp
loopne
enter
cmpsl
jb
or
pop
std
add
iret
mov
aaa
loopne
lret
pop
jge
dec
je
mov
mov
add
nop
fmul
lods
lds
mov
and
mov
pop
cmc
mov
in
in
mov
mov
outsb
mov
or
inc
enter
jae
pushf
xchg
imul
incl
rcll
and
dec
scas
rorb
ljmp
fmul
sub
sti
sahf
xlat
addl
xor
jecxz
jecxz
ror
dec
add
fwait
lods
sbb
cmp
imulb
pusha
pop
movsl
out
ja
jle
fs
xchg
or
fmulp
pop
or
push
cmpsb
roll
xchg
inc
cmc
sti
push
xor
stos
cs
mov
ds
cmp
add
daa
lods
jp
fisubrs
mov
test
fisttpl
mov
dec
sti
jle
aam
sub
rcll
dec
pop
cld
add
cmp
daa
les
in
xchg
mov
adc
dec
mov
jmp
or
sbb
fisubrl
cld
stos
jb
pop
or
xchg
shrl
loop
add
or
addr16
mov
insl
es
dec
lods
stc
dec
lock
in
ljmp
xor
sub
mov
fucomp
xor
div
fidivs
cmc
into
inc
gs
fsts
jo
repnz
scas
fdivrl
fdivp
jae
push
jnp
push
enter
jo
fdivs
lret
xchg
push
mov
or
sbb
pop
test
cmp
sbb
mov
and
mov
dec
test
decb
test
outsb
mov
and
inc
fstpl
cmpsl
adc
pop
cmp
testl
pop
dec
pop
mov
add
aas
lds
pushf
inc
andb
mov
add
stc
rcll
ja
or
leave
mov
mov
xor
dec
data16
sarb
xor
or
inc
mov
sub
mov
int3
sahf
or
lret
int
test
incl
stos
inc
sbb
dec
xchg
sbb
cmp
insb
jo
mov
and
mov
sbb
test
pop
repz
pop
sub
fimull
jl
test
addb
pop
pop
mov
jp
test
clc
mov
nop
std
aad
ljmp
pusha
add
fildll
test
ror
cmp
jns
and
stos
mov
cld
cmc
mov
jl
ljmp
pop
mov
repnz
xchg
or
insl
fwait
and
mov
cmp
jge
jo
cmp
cmp
int
mov
inc
push
xchg
push
call
shl
pop
or
sbb
pop
or
aaa
sub
int
add
out
addl
inc
and
dec
jg
jno
es
icebp
loopne
add
xor
fmull
adc
pop
dec
loop
xchg
cs
scas
iret
sbb
in
insl
mov
lret
add
sbb
insb
cld
pop
in
nop
inc
test
push
pop
inc
sbb
movsl
fstpt
dec
aad
xchg
adcb
jl
and
das
jl
xchg
test
mov
cwtl
add
daa
imul
insl
adc
and
jae
add
add
mov
mov
fwait
not
push
jmp
movsb
cmc
test
lock
lock
push
jne
ret
cmc
roll
out
fcoms
mov
lcall
shlb
stc
ds
add
cmpsl
out
lods
pushf
mov
push
sbb
sbb
adc
stc
fistps
jbe
xchg
push
aad
xor
jo
mov
xchg
ja
ds
push
cmpl
or
test
cmp
movsl
sahf
fsubl
cli
mov
into
ja
pop
jmp
fnsave
int
inc
test
hlt
and
cmpxchg
mov
cmp
xlat
leave
movsb
inc
jmp
out
fidivs
fisubrs
cmc
jge
sahf
and
movsl
inc
ret
adc
jne
sub
fistps
repz
movsl
sub
in
rcr
loopne
xchg
mov
ja
add
leave
dec
xchg
mov
sub
inc
push
in
adc
enter
inc
cmp
jecxz
mov
out
arpl
lods
mov
xchg
sti
xchg
js
pop
fs
andl
insl
cmp
test
nop
mov
fmull
clc
les
inc
sbb
lds
pop
pop
into
push
lds
lea
or
jp
jae
mov
adc
sub
ljmp
pop
shl
mov
jecxz
scas
dec
lods
rcrl
add
or
mov
jbe
rcr
lret
push
fldcw
in
test
cmpl
ja
cli
mov
fildll
setno
xor
fstl
add
mov
xor
adc
sub
jno
xor
lds
call
or
shll
je
adc
mov
jl
xor
insb
cmp
pop
jbe
movsb
or
add
xor
xchg
push
xchg
pushf
andb
mov
in
mov
cmp
adc
sbb
rclb
dec
sarb
insb
sar
test
das
movsb
adc
jp
aad
pop
mov
inc
test
cmp
mov
adc
mov
pmulhuw
nop
cltd
addr16
out
sub
imul
out
pop
jne
push
cs
pop
lods
ss
dec
adc
sub
iret
mov
out
sub
push
xchg
lret
xlat
adc
push
outsb
aam
js
inc
cmp
cwtl
iret
pop
fadd
pop
or
mov
inc
mov
fwait
jbe
rcr
or
aad
fs
addr16
and
imul
cwtl
sbb
pop
pop
adc
add
shl
cld
ss
cmp
xor
cmp
test
sbb
dec
xchg
pop
adc
test
push
xor
dec
sub
push
lock
pop
inc
lea
insl
lods
inc
out
cli
lds
out
pushf
xor
shl
out
sbb
daa
test
push
inc
es
add
into
subb
xlat
rcrb
mov
outsb
and
lods
mov
pop
imul
sub
mov
and
and
aaa
pop
fcomps
notb
testl
loop
cwtl
push
loopne
mov
xchg
inc
shll
and
idivb
fmuls
cwtl
mov
test
cmp
out
xchg
shl
cmp
cmp
mov
shlb
cmp
repnz
add
pop
andl
rol
test
fwait
push
roll
test
pushf
adc
loop
xor
push
outsb
bound
and
pop
jmp
sti
inc
aam
insb
into
imul
dec
jae
push
iret
mulb
data16
jmp
mov
sbb
mov
cmc
jae
adc
mov
stos
loop
in
dec
xorl
jb
push
dec
xchg
dec
in
shl
daa
xor
xchg
push
mov
xchg
filds
test
jb
push
les
shlb
push
cmp
mov
jae
mov
pop
in
xor
ds
orl
xchg
mov
cmp
cwtl
das
cli
push
xlat
pop
add
stos
test
fistl
and
cld
jae
je
push
jnp
int
les
ret
xchg
test
add
daa
mov
je
pop
sbb
mov
dec
or
stc
ficomps
ret
push
mov
jb
mov
pop
test
xchg
pusha
pusha
xchg
aad
add
pop
xchg
lcall
pop
lret
leave
adc
insb
pop
jb
sub
daa
sbb
insb
dec
je
aaa
ret
and
mov
rcr
mov
jmp
jns
mov
inc
cmp
xor
sarb
or
test
imul
mov
test
leave
jp
sub
add
pop
xchg
inc
stos
shlb
xchg
insb
lods
ss
cltd
std
cmpsb
jnp
lods
inc
push
je
shrl
push
mov
subb
fisubl
insl
mov
xor
or
das
cmp
sub
sbbl
popa
cmp
mov
cmpsb
pop
cmp
sarw
jl
or
test
arpl
fwait
mov
xchg
outsb
and
pop
mov
cmpsb
xor
mov
pop
jae
mov
mov
int3
call
fwait
sub
lcall
sbb
repnz
and
mov
jl
fsub
testb
inc
movsb
ret
out
push
cmp
arpl
add
notb
pop
iret
push
pop
push
iret
nop
fstpl
add
dec
pop
pop
mov
sub
mov
outsb
outsb
in
xor
cld
ja
ret
movsb
cmpsl
fs
dec
xor
das
mov
mov
adc
in
dec
in
or
adc
cmpsb
andb
pop
movsl
popa
rolb
jle
lahf
mov
inc
push
add
fisubrl
pop
xor
or
sbb
inc
fimull
add
lods
adc
clc
xchg
xchg
and
adc
add
shll
cmp
dec
les
ja
cmpsl
scas
jo
lret
inc
push
cmpb
cmc
test
fwait
movsb
xchg
movl
dec
mov
scas
inc
mov
enter
out
push
add
loope
and
aas
adc
aas
push
push
out
seto
cmp
jmp
sbb
jg
int
stos
fiadds
dec
mov
inc
mov
ss
repz
push
push
mov
xchg
mov
push
and
pop
int
je
xchg
int
ret
outsb
adc
xchg
pop
fidivrl
lret
push
je
insb
or
cwtl
sub
mov
inc
mov
stos
jb,pn
add
movsl
xchg
add
insl
jle
mov
cltd
cwtl
sbb
int3
xor
test
sti
cld
aad
add
jb
mov
and
push
inc
add
lds
negl
mov
movsb
repz
inc
push
or
inc
int3
or
jp
lods
push
in
ja
xor
shr
fstl
aaa
add
mov
adcb
fidivl
stc
out
and
stc
bound
sub
push
rcrb
jmp
jecxz
shlb
push
mov
aaa
lahf
jp
cwtl
cltd
inc
jbe
shll
data16
mov
add
cmp
pop
sub
adc
mov
jns
and
vaddss
ret
call
loope
pop
mov
dec
jno
adc
aam
mov
pop
xchg
mov
push
lret
add
cmpsb
inc
es
dec
sub
mov
pushf
ljmp
ja
testl
jecxz
pop
outsl
sahf
cli
adc
mov
aam
fldcw
push
daa
jle
xorb
add
inc
fwait
arpl
add
cli
int3
or
fs
sbb
and
in
fldenv
fcoml
add
in
jns
pusha
aas
push
test
xchg
or
mov
or
sahf
dec
cli
add
cmp
sbb
mov
fldt
cmp
push
add
adc
add
les
xchg
mov
or
dec
imul
fwait
scas
pop
nop
rclb
inc
ss
add
sub
in
jb
cli
sbb
clc
push
jmp
inc
hlt
mov
or
enter
jne
cwtl
lret
dec
lret
jae
nop
cmp
ficoms
cli
dec
inc
in
jns
push
lret
cmp
cmp
fsubl
sarl
int3
xor
mov
hlt
orl
mov
inc
idivb
je,pn
in
call
or
cmp
cmp
xchg
into
fs
pop
movsb
jo
stos
pop
mov
mov
rorl
jne
in
cmp
push
jne
mov
cmpsb
xchg
hlt
mov
sub
mov
jmp
mov
daa
adc
aaa
orl
int3
test
pop
ret
subb
pop
mov
dec
enter
jns
jbe
push
out
mov
pop
mov
xchg
or
inc
jmp
cmc
mov
fsubp
mov
dec
mov
into
push
adc
add
sahf
std
dec
mov
stos
sbb
push
and
mov
mov
xchg
add
inc
int3
and
addl
es
push
or
and
test
xchg
xchg
insl
mov
pop
call
jns
js
push
std
adc
pop
out
std
stos
adc
xor
jns
inc
test
repz
push
jnp
mov
xchg
pushf
xchg
ror
cmpsb
xchg
repz
orb
test
movsb
in
xor
enter
xchg
out
or
mov
push
sarb
mov
je
sub
xor
adc
push
push
scas
mov
sub
push
js
mov
add
in
das
inc
cmp
out
sarb
inc
fisttps
xchg
add
insb
shrl
mov
sbb
rorl
mov
ficomps
pop
mov
iret
add
leave
dec
mov
outsb
pusha
xchg
and
dec
pushl
xchg
cmpsl
xchg
data16
inc
jp
mov
rcrb
cmp
bound
inc
stos
aaa
in
imul
mov
fsubrl
fidivrl
clc
and
push
inc
imul
mov
xchg
mov
dec
push
dec
nop
xchg
cmp
rcrl
fwait
sbb
xchg
lods
sbb
sub
mov
sti
lahf
or
in
and
ja
out
lea
pop
test
aas
dec
adc
sub
push
mov
cltd
push
xor
push
psrad
jle
jno
iret
movsb
xor
scas
cs
jbe
in
inc
add
repz
adc
icebp
sbb
rorl
jo
iret
mov
cmpsl
outsb
jg
out
pop
sbb
test
push
inc
fcomi
cld
push
mov
packssdw
mov
add
jecxz
xchg
sub
ret
dec
mov
cmc
and
fistpll
mov
enter
push
mov
adc
mov
push
aas
lret
fsubs
push
lcall
mov
cmpsb
xchg
sbb
loope
inc
or
pop
fldenv
cmp
xor
cmp
je
xor
test
mov
in
clc
and
icebp
int
iret
adc
dec
lar
js
dec
mov
lds
bound
pop
mov
imul
dec
cmp
imul
jns
pop
sub
ret
pop
loope
xchg
hlt
and
jle
test
inc
repz
pop
stc
lahf
mov
loope
ja
push
jo
call
cmc
sub
sbb
jb
and
sub
test
les
xchg
adc
clc
testb
popa
mov
or
and
mov
xchg
int3
push
das
aam
inc
xorl
sbb
fcoms
xchg
xor
mov
sub
sahf
xchg
jle
pop
inc
fimull
cwtl
fdiv
jle
cmp
push
and
pop
xor
enter
lock
jns
push
aaa
mov
and
and
daa
orl
lret
add
addb
mov
lock
repz
mov
jg
nop
cwtl
pcmpgtd
mov
xchg
xor
sahf
ret
js
xchg
mov
mov
scas
daa
leave
and
punpckldq
xor
mov
xchg
xor
push
fimuls
daa
lea
cmc
add
pop
sbb
push
sbb
stos
test
cmp
insl
ja
pusha
shll
and
mov
xor
mov
in
or
mov
mov
push
xchg
sub
mov
rorb
mov
pusha
inc
decl
mov
sub
daa
insb
inc
inc
jmp
adc
std
lds
or
out
mov
sbb
jle
and
cmpb
cmp
push
add
test
xchg
into
notb
jl
jp
mov
lods
popf
push
cli
xor
into
inc
rcrb
add
sub
sbb
mov
mov
cmp
popa
rcl
in
pop
push
or
or
dec
mov
inc
int
pop
ljmp
adc
mov
jle
inc
mov
dec
insl
adc
add
xchg
or
push
sub
in
mov
jmp
and
mov
aam
inc
sub
or
bound
lods
enter
push
sub
mov
mov
cld
dec
pop
mov
addl
inc
and
lock
mov
push
bound
push
pop
lahf
std
outsb
das
shll
sub
pop
xor
in
cmp
mov
add
lahf
jecxz
mov
mov
xor
push
les
fdivr
cmp
lods
fcomp
adc
mov
inc
inc
jbe
out
call
cmp
test
ret
mov
cmp
rol
and
push
inc
loop
pop
mov
jae
ds
shll
adc
and
xchg
iret
mov
add
dec
aaa
push
dec
cltd
das
lods
notb
jecxz
ja
pusha
sub
sub
adc
add
xor
mov
or
stos
push
shrl
std
inc
lods
dec
sbb
dec
mov
es
addr16
mov
lret
or
sub
or
popa
and
das
xchg
xchg
jns
dec
jmp
xchg
jecxz
leave
imul
push
add
leave
mov
cmpsl
push
dec
pusha
loope
pop
lcall
ret
scas
sbb
add
in
jecxz
xor
fistpl
loopne
push
test
push
xor
and
fsubs
sub
fdivrs
dec
aas
sbb
cltd
popf
push
xchg
cld
repz
jle
mov
bound
mov
jg
pop
push
mov
dec
mov
jnp
jae
mov
add
movsb
or
test
addr16
scas
mov
movsl
loopne
sub
sarb
jbe
lock
xchg
mov
mov
add
shrb
mov
or
shl
gs
lret
jecxz
or
lods
dec
xchg
inc
ret
adc
maxps
sti
dec
add
mov
xchg
aam
mov
mov
imul
paddusw
int3
xor
xor
and
movsb
add
jne
mov
in
sub
orb
jl
dec
sub
jecxz
in
nopl
xchg
std
mov
sub
push
addr16
mov
cltd
aam
sahf
aaa
insb
and
and
call
or
imul
jne
ret
dec
sbb
iret
jecxz
idivl
icebp
pop
push
in
pop
jae
add
jb
hlt
push
mov
adc
sub
pop
fisubs
addr16
xor
stc
cmp
in
repnz
jg
push
lds
int
pop
pushf
in
mov
xor
scas
mov
aad
push
scas
sbb
aas
sbb
dec
frstor
popa
xchg
push
jnp
testb
js
xor
stc
jp
cmpsl
hlt
dec
mov
pminsw
popa
in
fdivrs
lret
push
xchg
adc
mov
lds
jno
push
out
hlt
loopne
or
scas
jmp
push
add
imul
push
and
xor
ret
lods
and
jae
pop
dec
or
inc
jb
lret
sbb
icebp
xchg
inc
in
mov
xchg
jge
xchg
dec
addr16
mov
jp
int3
divl
push
fnstcw
jne
ds
adcb
sub
aas
icebp
lret
notb
scas
push
std
mov
mulb
out
loope
mov
push
cwtl
cwtl
xor
push
std
aam
xorl
and
mull
push
add
jecxz
xor
vpavgw
clc
arpl
int
cmc
mov
lea
push
insl
js
xchg
mov
cltd
je
stos
cmpsb
inc
pop
and
les
cmp
fsubs
jns
fimull
add
mov
mov
jns
mov
pop
sub
xorl
jno
iret
push
data16
fidivl
jbe
inc
pop
inc
div
lret
lcall
xchg
rclb
inc
add
push
out
push
inc
into
fwait
popa
shl
and
xor
stos
loop
negl
ljmp
aad
rorb
xor
dec
repnz
ljmp
xor
pop
adc
dec
imul
das
leave
sbb
dec
iret
and
mov
adcb
test
adc
mov
ljmp
cmpsl
jno
fs
hlt
dec
cmp
leave
and
hlt
loope
ss
jbe
pop
fidivl
int3
pop
sub
out
shll
dec
movsl
ds
xchg
test
out
call
gs
ret
sub
jbe
ret
aad
mov
fwait
mov
add
in
mov
sbbb
add
pop
hlt
mov
mov
xchg
add
dec
mov
test
mov
jnp
and
mov
iret
outsb
das
add
iret
inc
jb
in
cmp
mov
pop
loopne
fwait
mov
inc
arpl
nop
std
cmpsl
jl
sahf
xchg
out
and
popf
das
xchg
adc
in
add
adc
mov
sbb
cmpsb
push
dec
xchg
or
sbb
lahf
inc
out
ficomps
xchg
scas
xor
repz
test
and
xchg
out
out
adc
sub
test
adcl
sub
cmp
inc
mov
cli
pushf
call
in
adc
mov
add
adc
sti
dec
stos
xor
lea
push
repnz
xchg
xchg
dec
and
xor
jns
mov
icebp
dec
mov
xor
mov
or
xchg
hlt
pop
xlat
xor
sbbb
in
ret
das
add
stos
insl
push
jne
in
or
sub
sub
incl
add
jl
mov
jecxz
push
lods
add
orb
mov
in
add
sub
push
pop
hlt
or
addl
adc
pop
mov
push
jp
or
mul
insl
cmp
testl
negl
and
outsb
out
std
add
or
jp
mov
lret
or
xchg
aas
stos
inc
cmp
and
lahf
dec
pop
cmpl
add
xor
call
xor
inc
les
dec
cmp
imul
bound
push
repnz
in
dec
and
add
push
inc
je
xlat
into
adc
loopne
dec
push
push
push
ret
dec
pop
adc
loop
out
dec
mov
fidivs
mov
and
sahf
outsb
outsl
sbb
mov
jp
adc
adc
lods
decl
pop
fwait
xor
xchg
or
leave
fimull
cmpsl
das
sbb
negb
ljmp
jp
scas
fcoms
push
out
insl
rcl
fnstenv
cmp
pop
test
pop
pop
loop
sbb
mov
popa
in
stos
lea
or
shlb
movsl
adc
dec
sbb
sub
ds
pop
es
dec
imul
mov
jg
mov
ffree
cmp
sub
outsb
xor
lods
push
pop
rcrb
jne
cmpsl
dec
notl
addl
cld
into
shrb
xorb
or
mov
or
xor
fildll
push
div
into
sti
scas
pop
ds
fidivrl
pop
and
test
push
adc
mov
xchg
or
mov
imul
cltd
scas
out
ja
lock
xorl
data16
imul
mov
addr16
shl
nop
adc
mov
add
outsl
sbb
daa
sbb
lds
xadd
mov
cmp
jns
xor
aas
xor
pop
mov
inc
pop
dec
aaa
pop
jb
lret
push
jne
pop
es
in
in
adc
adc
dec
xchg
mov
xor
mov
mov
dec
pop
dec
cld
adc
mov
fcmovnbe
and
jne
mov
inc
adc
icebp
js
dec
pop
mov
xlat
lock
rcll
lcall
lock
sti
ja
pop
pushf
loop
add
dec
xor
xor
pop
sbb
xor
pop
es
jno
xorl
mov
add
movsl
and
lahf
sub
mov
shll
mov
lahf
lahf
adc
pop
scas
aas
push
fwait
jne
in
icebp
jge
pop
leave
jb
in
inc
sub
imul
push
mov
repnz
fistps
mov
or
xchg
cmp
ljmp
sub
test
mov
lock
jo
enter
mov
orl
inc
xlat
mov
mov
jmp
jg
into
iret
out
mov
roll
sbb
shlb
repz
insl
mov
repz
std
rcll
mov
nop
scas
or
fucomi
xchg
pop
jnp
shll
mov
sarl
ds
mov
pop
int3
test
movsb
cmp
mov
lahf
add
pop
xchg
sub
aas
inc
adc
adc
adcl
adc
inc
mov
pop
int3
in
mov
jecxz
or
inc
lret
add
jle
push
jmp
inc
lahf
xchg
mov
dec
xchg
lret
cmp
push
cmp
xchg
scas
mov
add
in
iret
pushf
pusha
stc
mov
addl
xchg
push
nop
inc
punpckldq
sbb
out
enter
mov
into
jle
or
js
inc
hlt
or
dec
jl
iret
insl
and
cmp
or
ljmp
out
enter
dec
les
es
daa
jnp
xor
mov
testb
pop
mov
jo
fstps
addr16
mov
ds
pop
imul
and
jnp
cmpsl
incl
pop
js
or
sub
ds
repnz
inc
pop
imul
add
fcomi
dec
in
sbb
lea
and
in
jmp
xlat
push
sub
call
xchg
addr16
jno
clc
push
bound
or
push
fisubrl
hlt
lahf
js
std
adc
sub
outsl
pop
xchg
push
add
popa
mov
cwtl
jg
xor
jg
sub
leave
adc
mov
sub
pop
in
insl
and
pop
mov
lret
xlat
mov
mov
pop
orl
push
jbe
mov
inc
mov
or
hlt
popf
cwtl
or
pop
add
jbe
shll
adc
shlb
jg
or
fsts
pmulhw
jnp
sub
test
fwait
dec
pop
fstpt
xor
mov
pop
xor
mov
inc
repz
stos
jae
push
pop
mov
cs
loope
arpl
dec
imul
push
mov
mov
and
jno
or
push
les
cmp
push
fcmovbe
pop
and
cmp
pop
cmp
and
jmp
xchg
sti
adc
out
scas
clts
cmp
xchg
shr
aad
popa
popl
and
push
in
jnp
inc
pop
js
pop
jne
stos
sbb
sbb
in
dec
jnp
sbb
pop
inc
adc
fwait
cltd
mov
imul
sub
mov
pusha
dec
mov
popa
or
lea
lods
ja
inc
dec
aaa
push
mov
sub
mov
orb
and
jg
bts
int3
imul
xchg
mov
addr16
outsl
inc
mov
sub
sbbb
imul
in
scas
pop
aaa
das
add
sbb
pop
dec
jp
pop
aad
xlat
mov
pop
in
inc
imul
je
jle
cmpsb
sbb
and
test
mov
movsl
mov
and
fidivrs
and
fdivs
lahf
sub
mov
pop
clc
ja
fdivrl
jmp
xchg
inc
dec
enter
xorb
repz
stos
or
shlb
negb
pushf
pop
popf
and
or
cmc
mov
ljmp
jp
stos
mov
imulb
mov
adc
and
fdivrs
and
jle
push
call
dec
movsl
in
out
repnz
push
mov
repnz
shrl
xor
loop
mov
insl
cmp
xchg
mov
xchg
lock
divl
sbb
lock
rorb
add
push
call
fs
into
and
inc
xorl
xor
inc
jae
pop
mov
jne
shll
iret
lods
andb
subb
aaa
adc
lock
adc
mov
cmp
pop
pop
inc
push
scas
rcrl
or
xchg
sub
adc
pop
je
fisubrs
out
mov
movsl
adc
xchg
or
outsb
flds
outsl
jecxz
int
out
int
imul
lret
adc
call
gs
xchg
lret
in
inc
loope
adc
mov
andb
add
cmp
mov
into
xchg
jae
cmp
dec
loop
sbbl
sub
in
popf
sub
into
call
mov
mov
xorl
mov
mov
enter
ljmp
popa
mov
ss
repz
adc
cs
or
push
cmovne
les
leave
dec
mov
cmp
dec
cmp
add
xor
pusha
imul
xor
mov
xchg
stc
adc
les
insl
push
add
push
icebp
push
inc
lds
lret
icebp
aaa
lock
mov
mov
sarb
scas
cmp
push
rcr
push
das
cmp
aas
inc
arpl
xchg
mov
xchg
cmovbe
mov
cs
loope
shll
push
pop
add
out
aaa
loope
and
iret
push
sbb
add
ficompl
xchg
inc
cld
outsb
dec
push
setge
sbbb
ja
cwtl
test
enter
cmc
jbe
inc
dec
mov
add
shrl
push
inc
mov
sbb
enter
add
in
xchg
jle
push
and
repnz
push
mov
xorb
andl
jecxz
adc
mov
add
scas
scas
adc
cmp
adc
jae
in
std
popa
sub
test
lcall
std
jne
ret
aad
insl
into
xchg
pop
je
xor
ja
xchg
cmp
test
dec
dec
sbb
jbe
jecxz
pop
dec
in
cmpsl
ror
xchg
dec
lret
mov
sbb
push
movsl
push
dec
pop
push
add
or
leave
lods
sub
push
int
dec
cmp
cli
loope,pn
call
cmp
mov
and
or
dec
aaa
push
scas
or
or
and
divb
sbb
push
lods
cli
es
gs
add
lahf
or
add
mov
mov
cmpsb
scas
sub
hlt
iret
sub
loopne
in
mov
loopne,pn
jl
sbb
loopne
orl
insl
pop
push
das
pop
mov
sub
jb
or
sarb
and
and
fstps
jbe
xchg
sub
pop
adc
repz
add
roll
mov
lods
jp
aam
scas
xchg
mov
sub
jmp
pop
in
adc
and
dec
fyl2x
das
fxch
xchg
sarl
pop
shr
xchg
sbbl
mov
addb
popf
dec
cwtl
pop
push
or
in
pop
inc
mov
sbb
in
jo
lcall
jecxz
call
cmpsl
xor
leave
inc
mov
dec
sub
jp
in
jns
dec
dec
add
bound
sbb
xor
pmulhuw
hlt
mov
mov
dec
cmc
test
aas
adcl
cmc
pop
pushl
xor
jae
push
dec
or
mov
lret
imulb
shlb
js
sarb
mov
popa
daa
fnstsw
push
mov
stc
xchg
rcr
in
inc
pop
dec
out
mov
xchg
stos
outsl
stc
push
int
rcrb
jno
iret
fwait
mov
roll
mov
mov
aad
push
sbb
sbb
fbld
fbld
sbb
int3
sbb
lret
xor
and
sbb
mov
and
and
lock
or
inc
inc
inc
and
or
stos
mov
pop
xchg
mov
movsl
es
ficoml
pusha
jg
gs
sub
jge
sbb
push
push
in
pop
icebp
pop
push
movsb
outsb
lret
lahf
sub
add
dec
push
mov
pop
cmp
jno
hlt
mov
pop
imul
inc
add
repnz
mov
mov
shlb
fs
and
xchg
xchg
int3
mov
mov
jns
xchg
sbb
stos
fdivp
mov
push
notb
das
imul
and
ds
testb
movsb
jo
pushl
stc
js
xor
fistpll
js
or
fcomps
pushl
adc
sub
add
mov
jbe
cs
dec
pop
imul
or
lret
sbb
scas
clc
in
adc
xchg
cmp
stos
daa
in
mov
sbb
pop
cs
xor
xchg
int
mov
jl
push
pop
jnp
lret
les
fnstsw
xchg
push
idivl
push
fwait
mov
rclb
repnz
fbstp
arpl
or
mov
pop
sub
jge
nop
mov
pushl
or
mov
push
pushl
cwtl
nop
sub
pop
add
out
stos
shl
std
fists
cmp
inc
sahf
dec
sahf
xchg
out
out
clc
and
ds
insl
jo
dec
sbb
lcall
aaa
in
dec
cld
loope
out
inc
xchg
mov
arpl
cmp
adc
cmp
dec
pop
pop
xchg
mov
fcoms
mov
iret
pop
stos
jbe
inc
jns
jne
pop
sbb
and
fildl
push
jne
jmp
inc
jmp
inc
hlt
cmpsl
mov
cwtl
or
inc
sahf
lcall
adc
jecxz
dec
sub
movsb
aam
cs
inc
mov
xchg
inc
xchg
ss
das
insb
sbb
xchg
scas
fprem1
sub
jp
mov
test
lret
shll
out
out
iret
or
and
in
push
rcrl
je
mov
in
or
inc
test
adc
or
or
fistl
or
push
push
jmp
arpl
fldt
or
outsl
pop
pop
or
inc
mov
int
test
outsb
loope
jb
clc
mov
pop
dec
sbb
rorb
test
fwait
scas
adc
sarb
sahf
fucomip
push
mov
adc
jmp
pop
jbe
mov
jg
mov
ja
pop
enter
ljmp
push
outsl
dec
leave
xor
push
adc
scas
cmp
es
iret
or
pushf
fisubs
pop
jecxz
mov
mov
and
jl
fadds
mov
rol
dec
sub
or
mov
out
popa
xor
imul
ljmp
shr
mov
mov
jg
in
mov
and
xchg
cwtl
enter
cmp
lahf
or
push
rol
rclb
xchg
fcompl
adcb
je
lcall
adc
mov
inc
jp
out
cltd
sub
sub
jb
insb
das
xor
pop
adc
inc
fstpt
inc
adc
jmp
jno
jle
push
and
rolb
enter
dec
mov
jl
push
incb
push
fs
out
sub
lds
mov
pop
lods
popa
sub
mov
fucomp
fsts
add
inc
ds
mov
ss
rcrl
inc
mov
sarb
fcompl
mov
outsl
xchg
mov
in
sub
and
andb
mov
loopne
inc
pop
pop
into
mov
jno
lods
mov
jb
aad
sbb
rolb
into
pop
xchg
xchg
pop
add
mull
repz
adc
sbb
xchg
pop
rorb
mov
shrb
adc
shrb
pushf
sub
pusha
lret
push
mov
xor
or
ljmp
lahf
pop
jnp
cmpsb
mov
pop
rorb
jbe
jne
sub
xchg
out
push
aam
stc
int3
subl
mov
movsb
dec
sub
test
dec
pop
adc
cmp
mov
mov
add
jmp
out
test
mov
sarb
cmp
out
aaa
inc
pop
xor
xchg
fisubrs
rolb
hlt
jg
sub
or
out
push
jmp
xchg
daa
nop
mov
push
out
shrl
fiadds
jmp
stc
xchg
push
movsl
in
jp
push
in
mov
int
insb
lret
iret
fiadds
mov
movsl
std
cltd
jge
sub
shlb
das
or
lock
xchg
adc
clc
lahf
sarb
ds
xlat
mov
addr16
inc
push
push
pop
push
ljmp
shll
sbbl
mov
arpl
mov
push
sub
inc
mov
cld
sub
adc
xchg
mov
add
mov
out
mov
lods
cwtl
cwtl
repnz
cmp
push
inc
or
mov
jle
xchg
inc
sub
unpckhps
mov
leave
mov
sbb
xorb
mov
mov
je
sub
nop
scas
adc
rol
ljmp
inc
outsl
loopne
sub
imul
mov
testl
test
jno
pusha
mov
je
xchg
lahf
push
and
vmovdqa
jge
cmp
insb
jnp
and
add
sub
push
sbb
das
ds
cmpsb
js
fwait
shlb
push
imul
xor
jge
sbb
fsubs
sti
and
outsl
sti
adc
cmp
insb
cmp
js
insb
outsb
fisubl
mov
or
dec
fdivl
clc
push
mov
cmp
fs
add
push
test
xchg
mov
inc
cmp
pop
fiaddl
push
mov
pop
je
mov
or
push
lea
shl
arpl
and
out
cld
outsl
xor
mov
adc
adc
push
imul
fcmovu
cmpl
inc
lods
jecxz
movl
add
push
mov
sub
inc
add
dec
data16
adc
fwait
pushf
int3
sbb
and
sub
push
daa
fstps
iret
movsb
sbb
mull
stos
imul
sub
es
mov
imul
cmp
add
push
mov
mov
pop
adc
stos
jge
sub
test
and
jne
iret
push
rclb
sbb
leave
jne
fnstcw
dec
cld
mov
cltd
pop
jg
aas
dec
sbb
out
cwtl
inc
push
les
mov
push
pop
pop
or
cmpsb
int
inc
add
shrl
push
xchg
mov
sub
mov
mov
jle
inc
sbb
dec
xchg
pop
push
test
push
mov
inc
jne
sbb
xlat
cwtl
ja
adc
test
fsub
or
jnp
dec
stc
mov
int3
sahf
mov
dec
fisttps
pop
scas
clc
or
dec
int3
dec
cmp
cwtl
addb
dec
add
imul
jns
in
lods
mov
xchg
or
fbld
mov
cwtl
mov
ret
pop
mov
inc
sbbb
ja
sahf
dec
nop
pop
add
xchg
dec
pushf
fstpt
xor
adc
frstor
or
xchg
or
ret
mov
sub
dec
cmpsb
adc
cmpsl
xchg
push
movsb
lods
inc
lds
test
sub
aam
out
mov
test
mov
push
je,pn
pop
add
rcll
in
cmp
add
mov
sbb
mov
int
inc
xchg
xchg
jle
sub
mov
outsl
jp
add
dec
jb
ljmp
cmpsb
xor
adc
iret
push
sbb
or
mov
xchg
aam
mov
imul
insb
fbld
push
jb
pop
pop
out
je
lea
and
popf
pop
lahf
dec
mov
xchg
dec
fnstsw
add
popa
movsb
out
push
mov
add
shlb
pop
lret
sub
mov
fbstp
cmp
xor
leave
fcoml
ja
popa
mov
xchg
lock
xchg
in
adcb
add
mov
cmp
mov
cmp
shll
bound
dec
mov
movsb
add
cmp
mov
cmp
xchg
movsl
mov
mov
pop
test
mov
gs
daa
inc
push
jle
jmp
aaa
gs
ja
inc
scas
pop
inc
adc
es
enter
lcall
daa
divb
cmovle
adc
stos
cmc
filds
cmp
xorb
int
mov
subb
fisttpll
daa
push
mov
sbb
daa
dec
sbb
jb
cmpb
pusha
sub
mov
rorb
and
cmp
adc
mov
mov
out
xor
divl
das
xchg
popa
mov
mov
pushl
les
adc
push
xorl
insl
rcrl
dec
cmpsb
les
add
push
mov
mov
pusha
std
jl
push
xlat
xchg
xchg
xchg
stc
dec
xchg
dec
mov
sub
les
sub
fwait
adc
xor
jmp
jg
mov
adc
lret
jg
rclb
adc
jae
sbb
loope
mov
or
data16
dec
inc
xchg
fadds
xchg
pop
push
xor
mov
mov
jno
mov
cld
fnstcw
sbb
shlb
adcl
and
hlt
fildll
xor
shlb
mov
push
cli
fs
lock
push
das
mov
xchg
movsb
push
jno
lret
pop
rorb
xchg
pop
jae
xchg
cli
push
cs
ds
jmp
push
outsl
loop
jnp
lods
ljmp
leave
lods
cmp
xchg
pop
jmp
out
and
add
push
fucom
popw
cmpsl
add
test
push
lock
fwait
mov
icebp
rcll
pop
and
rol
xor
fwait
cs
mov
ret
in
stos
push
mov
jl
xchg
stos
sbb
push
xchg
sbb
and
outsb
jnp
push
xchg
mov
mov
or
jg
xchg
add
push
daa
out
mov
ljmp
pop
bound
add
es
mov
fs
sub
out
insb
loope
push
pop
mulb
cmp
xor
int
cmp
inc
mov
icebp
pop
add
jns
push
daa
popf
mov
mov
cmpsb
or
inc
jmp
cmp
addr16
roll
les
push
mov
mov
fsub
add
adc
repz
repnz
out
ja
pop
jle
outsb
scas
sbb
lea
fmull
add
or
mov
push
sar
dec
adc
aad
jle
test
jo
pop
push
xchg
sub
shrl
leave
pop
movsb
loop
sbb
js
mov
mov
popf
int3
cmp
pop
jg
in
aam
lods
sahf
sub
fmulp
dec
pop
and
jp
je
pop
and
fiadds
scas
call
xor
iret
daa
pop
xor
setle
sahf
and
ret
mov
xchg
jb
push
xor
xor
cs
bswap
pop
and
lret
push
lret
aam
cmpsb
dec
mov
cmpsb
add
push
daa
jecxz
jnp
mov
dec
shrb
out
les
std
jp
imull
dec
jecxz
jge
lahf
fidivrs
jp
pop
rcrl
mov
stos
cmp
inc
or
int3
jl
xchg
aas
mov
add
dec
cmc
call
and
into
dec
dec
hlt
js
pop
aas
add
pop
cltd
jl
xchg
jle
popa
adc
shlb
push
les
mov
icebp
rolb
lea
test
bound
or
daa
sub
pop
scas
pop
popf
lret
lea
or
xor
dec
or
inc
popf
mov
fcmovnb
fsubrl
leave
movups
pop
pushl
push
sub
dec
dec
aas
mov
add
or
fs
outsl
testl
pop
xchg
cmc
into
mov
xor
nop
popa
gs
imul
mov
adc
int
and
fs
sti
outsb
dec
mov
jge
jnp
xor
rcll
movsl
or
cld
adc
xor
inc
mov
in
mov
daa
addr16
fdivl
clc
out
mov
inc
xchg
stos
add
push
bound
daa
xlat
sub
mov
lods
lods
subl
outsl
ss
addb
add
es
add
or
or
xor
stc
adc
mov
mov
xlat
jle
mov
pop
icebp
add
andl
rclb
stos
rorl
rcl
test
mov
cmp
lds
push
sbb
outsb
or
mov
cmp
dec
imulb
push
shl
inc
add
lds
mov
add
icebp
cmp
mov
setge
pop
mov
cmpsb
sti
jg
jnp
dec
nop
fimuls
mov
stos
imul
fwait
sbb
sub
int
imul
cmp
xchg
mov
clc
repz
mov
inc
cmpsl
adc
mov
cmp
push
inc
fdivrs
aaa
addr16
and
xlat
jb
dec
daa
lock
inc
adc
shlb
add
mov
lock
aaa
imul
fstpl
insb
sbb
negl
push
ret
aam
loop
push
mov
aaa
cmpsl
pop
imul
ret
sbb
arpl
call
clc
movsb
addr16
insb
push
int
push
aas
cmp
dec
dec
push
popa
inc
bound
cwtl
jle
cwtl
sub
arpl
imul
int
fnstcw
lret
mov
mov
out
arpl
data16
sbbl
dec
rorb
inc
mov
mov
xor
or
cmp
push
mov
pop
inc
and
inc
ret
push
pop
out
fildll
push
dec
shll
loop
and
xchg
jae
mov
push
ds
jo
rclb
cmp
dec
mov
scas
adcl
xchg
leave
dec
push
sub
ret
aam
or
decl
mov
clc
jns
movsl
es
adc
inc
rcrl
pop
mov
jae
adc
lock
jl
movb
scas
sub
inc
jmp
insb
push
dec
pop
pop
lahf
dec
jle
xchg
mov
sub
fnstsw
outsl
fstl
pop
pop
dec
sbbb
cld
sbb
mov
or
and
xor
xor
fmull
xor
arpl
hlt
pusha
lds
cmp
pop
inc
out
xlat
mov
daa
sub
sahf
push
jno
and
test
lret
mov
mov
jno
imul
mov
mov
jae
ja
inc
fstps
cmp
jmp
sti
pop
outsb
lods
in
add
scas
dec
and
mov
mov
pop
jl
xorl
dec
out
lret
in
hlt
or
jb
cmpsl
fwait
enter
mov
je
dec
fwait
add
lcall
or
lods
cmp
jp
inc
xor
jo
data16
or
push
mov
sti
dec
xor
jo
in
lock
mov
int
pop
inc
int
jecxz
sbb
jbe
lcall
dec
push
loop
pop
je
mov
jmp
scas
in
jl
push
push
aam
mov
std
les
sub
inc
imul
cmp
xchg
cmpsb
adc
pushf
addr16
sub
adc
repz
outsl
bound
faddl
pushf
das
cmp
cmp
fidivrl
hlt
int
and
push
hlt
daa
ljmp
xor
jno
adcb
xor
in
test
pushf
push
scas
dec
and
inc
outsl
repnz
enter
sub
sbb
push
cmp
add
adc
das
test
adcl
pusha
arpl
inc
push
imul
dec
pop
adc
shrl
push
and
sub
push
rorb
mov
xor
lock
orb
outsb
fnsave
scas
movl
stc
dec
fildl
sub
fisubrl
mov
push
sbb
xchg
sbb
jo
pop
flds
sub
ror
mov
or
loopne
mov
sbb
cmp
sub
jbe
lret
lcall
mov
test
xchg
sub
stos
pop
cltd
outsl
lret
sub
out
push
call
ljmp
aad
lahf
add
cmp
push
fwait
rclb
mov
addl
dec
xor
gs
lods
mov
push
adc
push
sbb
test
andb
subb
add
jne
mov
int3
inc
pop
int
xchg
xchg
push
pop
xchg
dec
jmp
mov
cmc
insl
aaa
cmp
mov
in
rcrl
rorl
jg
pop
xor
dec
rolb
leave
inc
mov
jae
shrl
dec
cmc
jle
sbb
popa
int3
icebp
scas
pop
adc
push
mov
xor
nop
lret
fidivs
mov
js
add
xchg
pop
cltd
pushf
xchg
mov
jge
imul
or
push
fwait
fwait
inc
jg
inc
xchg
imul
jle
push
sub
xchg
sub
mov
shrl
sbbb
ljmp
or
test
sub
mov
mov
sbb
sti
stos
xchg
inc
fcoms
call
dec
sbbb
pop
xchg
sbb
pop
sbb
mov
cmpsb
or
lret
arpl
sub
mov
lods
nop
sub
dec
push
aas
aaa
or
scas
sahf
xor
mov
mov
jmp
push
push
ret
push
cld
cwtl
stos
sub
subb
push
cwtl
and
jmp
pop
xchg
inc
out
ret
les
pop
into
push
inc
mov
scas
divb
pop
scas
pop
xchg
lret
pushf
cmp
js
cs
mov
xchg
xor
ja
adc
sub
xor
stos
lds
stc
fldt
jecxz
mov
inc
xlat
xchg
out
ret
rol
inc
mov
insl
imul
popf
arpl
jne
sub
push
cwtl
cmc
loopne
es
loope
or
jge
aam
dec
xor
cli
jecxz
in
push
mov
mov
out
ds
inc
pop
or
mov
rcll
and
jne
pop
mov
cwtl
jnp
cmp
sbb
pop
cmpsl
xor
sti
ds
popw
pop
mov
or
shl
adc
ss
cmp
xor
push
sub
jl
daa
scas
loope
into
in
jp
jmp
jbe
ja
call
sub
and
scas
dec
mov
imul
call
adc
pop
sti
jo
adc
lret
cmp
push
sbb
lret
inc
cwtl
mov
mov
icebp
push
sbb
in
call
or
jp
jnp
iret
adc
add
fwait
dec
gs
cmp
sub
mov
stos
and
in
pop
dec
decl
xor
sub
fcmovb
adc
test
mov
xchg
ffreep
filds
pop
push
pusha
aad
mov
or
xor
sub
mov
cmpsb
jb
fbld
mov
adc
and
inc
insl
inc
mov
jns
xor
sbb
pop
jle
mov
jnp
push
out
sbb
in
inc
add
ret
mov
inc
jo
jnp
pop
addr16
or
mov
int3
fs
pop
adc
aam
adc
xchg
rcrb
push
push
inc
cs
dec
jnp
jae
push
iret
xor
subb
notl
push
mov
xchg
nop
mov
aam
enter
fstl
ret
arpl
nop
add
adc
mov
repz
inc
cmovb
push
shrl
mov
adc
mov
repnz
dec
xor
repz
test
adc
push
push
jg
shlb
inc
pinsrw
dec
sbb
dec
inc
call
xchg
cs
inc
xchg
lret
fdivrp
aas
idivl
sbb
mov
jecxz
sub
cmp
mov
ja
add
push
sbb
mov
and
out
in
into
sbb
or
fbstp
inc
pop
add
inc
fisttps
dec
jg
mov
or
or
loopne
hlt
shlb
psadbw
mov
jo
xor
sub
daa
adc
adc
cmp
stos
mov
push
aas
arpl
jecxz
pop
in
incl
mov
cmp
pop
dec
push
aad
mov
add
idivb
jg
in
cmp
mov
je
mov
mov
xlat
test
mov
je
jge
shrl
mov
adc
sbb
dec
and
into
push
clc
div
clc
in
insl
aad
push
cs
sbb
call
std
loopne
hlt
add
and
ret
pop
mov
xchg
sar
inc
hlt
in
jl
mov
push
push
dec
mov
outsl
das
daa
std
insb
jle
cmp
inc
mov
xchg
sbb
cmpsb
sub
into
xchg
add
adc
loope
jnp
inc
lret
xor
ficompl
insl
mov
cmp
mov
lret
lahf
push
mov
das
xlat
fldl
xchg
xor
push
pop
and
fsubrs
dec
repz
and
and
stos
fwait
adc
sbb
mov
push
mov
ud2
xor
mov
inc
repz
cmp
add
jne
xor
cmp
mov
and
mov
and
rcll
cmp
ja
testb
scas
pop
xchg
movsb
adc
xlat
adc
popf
or
test
out
mov
adc
jmp
sub
repnz
jo
flds
add
cmc
cmp
pop
rclb
mov
push
pushf
test
fnsave
imul
inc
inc
cmp
mov
insb
mov
sub
xchg
in
lret
jge
inc
and
sub
mov
jmp
push
mov
inc
jmp
and
sbb
arpl
repnz
and
inc
lea
stos
hlt
fcomip
aas
call
repnz
push
add
pop
movsl
mov
ficoml
jl
insb
pop
scas
lods
inc
andl
addb
notl
push
mov
inc
inc
in
ja
jns
mov
ds
inc
mov
lea
cmc
jae
jl
mov
rorl
cmp
hlt
in
and
std
jl
das
test
scas
sbb
data16
imul
sub
mov
sbbl
jne
cmp
cmp
mov
outsb
push
mov
dec
aam
decb
or
push
sub
dec
push
ret
fldcw
or
dec
inc
xor
lods
fbstp
jg
popf
out
dec
movsb
jmp
sub
jg
fistl
rol
es
dec
push
test
out
mov
jecxz
lahf
cmc
dec
cmp
sub
aas
imul
pop
mov
pushf
cmp
or
stc
cmpsb
add
pushf
addb
repz
cld
xchg
dec
cmc
shrb
xor
ja
mov
mov
in
sub
adc
lds
aam
mov
in
sub
inc
lret
or
push
push
sbb
cmpsb
sbb
les
call
push
bound
xor
test
jo
mov
fdivs
mov
subb
adc
jne
ja
fwait
in
cmp
cmp
and
mov
sbb
lods
repnz
xchg
sti
dec
add
jecxz
lret
lcall
push
cld
stos
jno
mov
push
insl
xchg
inc
pushf
xor
or
xchg
shrl
sub
cli
gs
loopne
add
daa
and
loope
jnp
add
stos
lea
lods
ret
sub
push
sub
push
cwtl
xlat
lods
add
jae
fsubl
mov
repz
push
and
mov
adc
pop
sbb
cmpsb
sub
lea
adc
fdivp
rcll
loope
push
jle
popf
je
jmp
add
mov
movsb
insb
cmp
rcrb
add
push
cmpsl
fs
inc
fistpl
out
xor
hlt
adc
jge
cmp
xor
insb
adc
add
gs
and
adc
push
mov
lods
repz
jmp
add
adc
mov
jp
repnz
or
or
cmp
repnz
cmp
mov
mov
iret
inc
push
dec
aad
cmp
les
fcmovne
scas
or
xchg
inc
pop
inc
frstor
scas
inc
loopne
fildll
stos
mov
or
mov
sub
push
jecxz
sbb
xor
adc
cld
dec
xchg
dec
mov
sti
test
lret
pop
xchg
pop
hlt
mov
imul
or
scas
out
pop
push
shll
icebp
jnp
jb
je
inc
sbb
int3
icebp
push
pop
std
outsl
fstpt
jge
push
xlat
sub
mov
push
adc
inc
icebp
in
aad
mov
inc
push
andb
sub
out
in
loope
aad
mov
jmp
das
lock
jecxz
roll
dec
shrb
cmp
add
mov
add
shr
dec
jo
gs
add
mov
sbb
dec
fistpll
sub
cs
add
in
xchg
cmp
dec
scas
sbb
fistpll
and
xchg
or
mov
add
pop
fisubl
mov
lods
aad
pop
fwait
outsb
xchg
sub
inc
sbb
repz
inc
adc
lods
in
aad
xchg
hlt
mov
xchg
lret
push
mov
sti
fidivs
mov
popf
test
stos
mov
sbb
bound
dec
or
mov
pop
outsb
es
pushf
add
scas
lds
mov
xor
in
daa
and
or
shrb
sub
adc
xchg
xor
loope
add
inc
mov
dec
push
fisubs
jns
andb
pop
push
cltd
and
rcrl
lret
lret
and
xor
loop
adc
out
or
or
pushf
fadds
jb
test
cmpl
xor
sub
sbb
xor
in
mov
lock
stos
dec
mov
jmp
outsl
mov
shr
push
int3
jnp
sahf
fisttpll
add
or
fs
out
cmp
clc
mov
sbb
ficompl
dec
popa
mulb
push
mov
test
std
sub
sub
adcb
inc
enter
mov
stos
lret
dec
lods
pop
sub
adc
jl
add
xor
addl
or
in
xchg
pop
dec
mov
adc
adc
or
rcrl
rcr
cltd
outsb
loopne
jne
repz
rdmsr
sbb
je
shlb
jmp
xor
xchg
sbb
test
push
mov
mov
loope
movlps
dec
cmp
in
test
neg
xchg
cmpsb
cs
push
xchg
jecxz
out
xchg
mov
sbb
cmovo
stc
pop
push
or
test
push
lcall
push
ds
daa
adc
loop
int3
pop
mov
clc
std
jae
shl
aas
mov
hlt
mov
sub
push
adc
loope
mov
fsubrl
jl
pop
sub
xchg
sub
into
push
fsubrl
aas
or
dec
inc
jmp
and
and
outsb
std
sahf
mov
mov
mov
pop
and
in
or
xchg
int3
lock
pop
dec
outsb
and
shlb
inc
push
sbb
adc
xor
out
jne
mov
test
jne
loop
je
ret
add
pop
imul
mov
xor
sbb
sub
out
push
add
movsb
cmp
xchg
mov
xor
insl
fwait
jnp
pop
jmp
aaa
ljmp
and
xor
jp
popf
dec
jnp
iret
negl
adc
sbb
stc
test
lds
sub
jae
dec
test
mov
shrl
and
int
js
orb
jmp
adc
push
push
mov
or
ss
insb
push
xchg
push
shl
scas
push
fimull
sub
add
icebp
fwait
and
leave
mov
push
inc
test
lret
ret
imul
mov
mov
pop
sub
orb
xchg
stos
scas
adc
and
mov
add
cmp
adc
into
aas
jnp
and
push
mov
mov
jbe
cmp
repz
sub
jno
xchg
or
in
mov
enter
xor
int
sub
sbb
jge
adc
in
je
jmp
or
out
dec
lods
jmp
ret
lea
ljmp
dec
mov
ss
pop
data16
push
push
int
jg
or
imul
jg
cmp
ljmp
xchg
and
mov
mov
pop
dec
js
icebp
and
cmp
push
int3
push
jno
and
dec
xor
adc
cmp
xchg
xchg
inc
add
icebp
push
add
add
sbb
cmp
push
inc
or
push
mov
push
lahf
loopne
gs
jae
pop
test
dec
pop
mov
jmp
inc
jmp
push
out
cli
xchg
cwtl
mov
jle
cmp
add
and
lods
js
aad
and
cmp
push
ficompl
xor
cmpsl
jmp
add
dec
ror
or
xor
mov
cmp
ror
sub
popa
cltd
sbb
xchg
data16
push
insl
lret
mov
and
outsl
mov
cmp
sbb
int3
in
insb
in
adc
mov
jl
xor
adc
and
popf
cli
sub
bound
movsl
stos
lahf
or
in
push
or
repnz
sti
daa
add
mov
inc
and
inc
cmp
cwtl
lret
addl
stc
fisubrl
add
loopne
xor
cld
sbb
lcall
aad
addr16
sbb
rcrb
inc
call
ds
xchg
test
inc
rorl
scas
daa
clc
or
or
mov
jne
mov
int3
pop
je
int
pop
xchg
jle
mov
and
popf
jg
inc
mov
negb
cmp
xchg
xor
gs
test
arpl
mov
aaa
push
sbb
test
aas
pop
insb
sub
fidivrl
sbb
xlat
es
lret
push
fdivp
subl
jb
push
dec
mov
movsl
add
call
jmp
outsb
rolb
sbb
add
cmp
add
leave
aad
and
inc
hlt
scas
pop
sbb
leave
push
lret
test
test
push
and
push
fs
imul
into
pop
iret
sub
mov
dec
movsl
addr16
ljmp
and
mov
push
dec
sbb
sbb
popf
mov
jge
clc
sbb
xor
addl
cmp
jecxz
adc
insl
cmp
sbb
cmp
jne
sub
pop
cwtl
mov
fldcw
stos
xor
sbbb
adc
ss
xchg
adcl
out
in
andl
mov
jns
xchg
add
and
mov
sbb
gs
xorb
cmpsl
pop
sbb
push
and
and
icebp
ret
xor
aaa
jae
stos
or
mov
xor
sahf
mov
mov
lea
pop
adc
and
rcll
iret
mov
daa
adc
push
push
divl
fsubrl
sub
das
push
pop
or
sub
or
aas
xor
xor
insl
sbb
jg
inc
cmp
fs
adc
fyl2xp1
pop
dec
push
loope
pop
pop
cmpsb
clc
fadds
mov
cld
mov
arpl
pop
pop
movb
into
gs
jne
jno
xchg
jae
fs
mov
test
adc
mov
cmc
inc
push
mov
pmaxsw
call
flds
mov
inc
out
sbb
aam
and
mov
pusha
xchg
cwtl
lock
shrb
sub
sbb
and
adc
loop
dec
cmp
test
popf
xor
loope
in
je
stos
dec
sbb
scas
cli
lcall
repnz
cwtl
push
aas
dec
out
imul
add
es
dec
loope
clc
xchg
xchg
pop
push
xchg
mov
dec
xchg
cmp
cli
in
loopne
or
xor
pop
sbb
pusha
push
and
outsl
pusha
outsb
xor
push
sti
not
jo
loop
inc
push
rcrb
add
sbb
xlat
mov
sbb
sub
xor
push
repz
into
in
cmp
mov
mov
jge
sahf
mov
leave
mov
sub
stos
cmp
sub
clc
imul
cli
je
or
or
insb
xchg
and
dec
push
imul
loop
out
push
mov
in
and
mov
cld
test
cmpsb
loop
xchg
inc
adc
or
jnp
add
int
push
mov
das
enter
xor
sub
lret
cmpsb
ljmp
pop
dec
test
inc
xchg
cmp
lcall
mov
call
adcl
pop
div
inc
xlat
pop
xchg
fdivp
xchg
cmp
add
fwait
xorb
les
push
je
into
bound
mov
xchg
lds
mov
or
pop
roll
mov
mov
insl
lods
push
test
add
addb
outsl
pop
mov
gs
shlb
pop
iret
in
fs
push
sub
shlb
or
addb
cmp
fistpl
les
je
je
dec
test
lock
test
fdivrs
push
pop
xchg
imul
jo
clc
adc
add
xchg
ss
xlat
or
xchg
cmc
out
lock
lcall
pop
out
adc
sbb
cmp
insb
dec
dec
data16
out
adc
iret
scas
pushf
pop
pusha
sbb
and
or
push
addb
cmpsl
mov
jne
inc
mov
aas
mov
mov
popa
pushf
loopne
aad
out
nop
test
repz
or
adc
cmp
jmp
movsb
ret
jg
adc
sub
icebp
push
sub
dec
jne
lret
cld
xchg
mov
mov
dec
pusha
mov
jno
jae
dec
scas
arpl
push
add
mov
std
cmp
mov
std
push
fucomi
push
sbb
lods
cmpsb
mov
in
cvttps2pi
add
push
adc
jecxz
mov
sub
fbstp
push
insl
nop
inc
lret
stos
clc
nop
cmp
mov
in
pushf
mov
dec
in
mov
pop
or
and
iret
lea
mov
add
jl
push
fstpl
add
mov
fildll
add
cwtl
adc
pop
mov
popl
dec
loopne
gs
pop
sub
in
pop
or
inc
jmp
mov
mov
lock
hlt
sbb
rcr
sbbl
xchg
dec
jecxz
sub
cmp
in
in
mov
dec
fdivrs
and
ret
mov
out
addr16
sbb
and
imul
sub
push
lods
cmp
jmp
fsts
and
das
sti
mov
adc
outsl
sub
mov
or
xchg
loop
xchg
push
mov
insl
es
arpl
jb
icebp
or
pop
nop
mov
cmp
popa
and
jmp
push
sub
xor
add
pop
sbb
inc
mov
mov
sub
gs
jp
ficoms
fidivrs
outsl
cmp
js
push
jle
cmpsb
inc
mov
adc
fld
cmpsl
das
mov
out
push
xor
inc
ret
fabs
aam
fwait
popa
pop
out
test
stc
push
clc
sub
dec
rcl
outsl
sbb
aas
aam
adcb
shlb
xor
push
jno
stos
outsl
inc
loope
mov
in
mov
jg
mov
clc
out
mov
jle
arpl
mov
mov
add
les
cltd
movsl
jp
inc
movsb
iret
xor
cwtl
or
fsubrl
push
pop
inc
jl
in
push
insb
mov
mov
loope
jp
mov
and
clc
lret
mov
adc
and
pop
ror
clc
dec
add
int
clc
pop
jmp
test
int3
jmp
pop
ret
adc
das
jle
and
movsl
jnp
xchg
xor
popf
mov
and
jp
ds
test
in
ss
pop
adc
scas
roll
scas
mov
xlat
pop
mov
arpl
jb
jo
test
lock
jae
ljmp
cwtl
in
je
add
mov
fbld
pop
pusha
or
loop
rcrb
call
inc
outsl
ds
push
mov
and
dec
dec
lock
push
icebp
pop
xor
sub
movsb
mov
mov
shlb
decb
adc
jmp
fistps
fbstp
adc
fstl
pusha
loope
xchg
xacquire
dec
in
adc
xor
leave
ret
frstor
xchg
adc
sbb
sbb
adc
mov
sub
mov
mov
or
push
testl
jge
int
sbb
pop
dec
insl
out
and
cmc
arpl
fistpl
pusha
sbbb
or
jbe
sti
add
je
inc
xorb
pop
mov
cmc
data16
lret
jnp
mov
mov
popf
add
pop
insl
negl
pop
lods
mov
add
add
shrl
aas
std
push
in
cmp
adc
xor
xchg
mov
lcall
mov
mov
stc
fwait
xor
in
mulb
scas
fisubl
jle
push
rcr
adc
repnz
sbb
jb
mov
jns
or
sti
mov
pop
mov
inc
aad
clc
inc
xor
orl
cmp
fdivs
pop
pop
out
scas
jo
mov
pop
fwait
xor
sub
in
or
jecxz
dec
sub
hlt
setbe
std
xchg
xchg
cmc
mov
mov
hlt
cmp
int3
push
mov
mov
sbb
inc
das
int3
mov
inc
mov
std
out
adc
clc
test
push
sbb
xchg
in
cwtl
sub
popf
dec
andb
test
add
mov
bound
inc
adcl
or
push
lret
pop
test
outsl
mov
dec
and
js
cmpsl
jnp
sbb
imul
xor
mov
jle
sbbl
insl
lret
daa
lods
xor
jle
nop
cmp
cmp
imul
cmc
test
mov
rcll
adc
xchg
shl
scas
mov
push
les
mov
pop
pop
fs
mov
adc
pop
lahf
subl
pushf
div
into
icebp
mov
das
fwait
jp
push
cmp
mov
movsl
repnz
aam
sbb
imul
mov
xchg
sti
dec
cld
es
cmp
hlt
jno
enter
stc
ljmp
jne
bound
lock
test
cmp
insb
cmp
fadd
jp
in
rcrl
xchg
stos
sub
push
lret
cwtl
inc
xchg
mov
mov
sub
mov
pop
aaa
repz
sbb
fisubrs
cmp
mov
and
inc
add
jle
sub
cwtl
mov
lret
mov
jmp
adc
and
js
je
push
loopne
adc
data16
sbb
ljmp
in
scas
pop
jb
mov
stos
dec
notl
mov
pusha
fdivs
popf
dec
dec
xchg
push
fdivrl
jmp
loopne
jg
leave
xchg
pop
mov
xchg
loopne
push
sbb
shrl
sbb
cmp
push
adc
test
mov
or
dec
xchg
mov
mov
sbb
mov
loop
test
imul
cmp
shr
in
xor
mov
and
lods
repnz
push
add
std
dec
jmp
jnp
adc
stos
sub
and
es
pop
xchg
insb
lock
cmp
movsb
or
outsl
sub
cmpsl
pushl
test
xchg
out
js
cld
iret
cmp
jnp
dec
adc
out
pop
gs
lret
mov
mov
push
jnp
cmp
and
and
dec
xchg
lcall
cmpsb
cmpb
cmpsb
push
int
jne
or
pop
negl
sbb
inc
jl
mov
arpl
rclb
fadd
xchg
or
push
idiv
jecxz
lds
lods
push
push
loop
mov
ret
cli
stc
mov
fs
push
or
pop
sbb
lret
mov
mov
cmp
adc
add
xchg
sub
dec
aad
dec
adc
punpckhwd
add
mov
dec
jns
outsb
stc
mov
xchg
scas
xchg
int3
push
movsl
jl
rorl
fsubrl
rolb
ja
or
adc
mov
mov
adc
inc
mov
scas
rcll
outsl
xorb
adc
stos
add
daa
loope
testl
gs
dec
scas
std
mov
addr16
ljmp
dec
xlat
aad
add
pop
mov
rep
fxch
push
sub
iret
jne
dec
enter
out
dec
pop
cs
sbb
dec
push
mov
subl
jl
mov
sub
stos
ljmp
shr
mov
pusha
push
fcmovu
adc
pop
sub
push
repz
scas
inc
xlat
and
lret
aam
pop
sbb
pop
jo
pusha
inc
insl
shlb
jg
sarb
mov
popf
jns
push
enter
xor
cmp
repnz
sarb
fwait
sub
mov
cmc
es
loop
mov
clc
or
push
sub
loop
cld
dec
xchg
cmp
cwtl
or
stos
clc
out
mov
pop
add
mov
cmp
push
sub
sub
lcall
fsts
iret
mov
insl
repnz
xchg
mov
sbb
push
arpl
lods
ss
lret
fstps
clc
jmp
dec
int3
mov
aaa
out
and
roll
mov
faddl
mov
das
push
xor
imul
out
popl
cld
jne
or
cmc
ljmp
push
xor
adc
repnz
test
sbb
les
stos
movsl
dec
repz
shll
outsb
jecxz
aam
in
dec
pop
push
test
pop
scas
adc
cmp
push
and
mov
fsubr
imul
adc
xlat
lods
out
loop
sbb
pop
icebp
or
and
jae
sbb
jecxz
adc
dec
repz
ljmp
in
inc
pop
jp
push
inc
push
push
insl
xchg
lock
fisttpl
lds
int3
shlb
shlb
lcall
xchg
loopne
push
jns
out
push
jns
lods
xchg
negl
xor
xlat
lods
jmp
inc
icebp
or
mov
sbb
cmp
ja
frstor
aam
mov
movsl
lcall
cmp
adc
call
out
or
pop
push
mov
inc
aaa
out
daa
lcall
fnstcw
push
push
fcmovb
mov
push
movsb
xor
xchg
jg
out
adc
pop
cmc
cmp
scas
imul
insb
adc
cmp
imul
dec
push
cs
sarl
js
fwait
enter
xor
mov
ret
outsb
and
insb
ret
aad
jg
mov
aam
cli
addr16
xchg
cmpsl
nop
mov
daa
jno
jl
or
cli
push
adc
lret
dec
sbb
dec
mov
and
xor
arpl
xchg
cmpsl
outsb
in
or
push
fadds
icebp
jbe
ret
jecxz
push
nop
cmp
rcrb
out
inc
push
pop
fisttpll
mov
ljmp
pop
stos
clc
jbe
lcall
sbb
xor
repnz
ficoml
mov
mov
mov
ficomps
repz
outsb
cmc
pop
sub
xchg
jp
mov
push
lfs
or
sub
into
mov
lret
or
mov
into
add
subb
jae
pusha
test
out
outsb
pop
testb
ffreep
scas
push
xchg
adc
jb
enter
scas
pop
hlt
sbb
xor
dec
shlb
lock
outsl
inc
jno
int3
test
jnp
jge
sbb
pop
pop
cs
cld
orb
add
dec
push
sub
adc
movsl
push
pop
das
cmp
push
loopne
or
pop
rcll
mov
cltd
dec
arpl
imul
xor
mov
jo
insl
out
or
loopne
je
or
mov
push
mov
mov
mov
pop
cmpsb
jo
mov
xor
xor
int3
mov
mov
pop
jge
outsb
sbbb
jmp
ret
push
popf
dec
pusha
adc
out
mov
je
jo
add
push
inc
scas
popf
sub
daa
div
outsb
mov
ds
lods
call
mov
stos
mov
cmp
mov
push
jnp
cld
and
mov
fcompl
lds
and
jno
imul
je
nop
in
sahf
mov
pusha
rep
lea
sbb
stos
cwtl
into
in
push
inc
daa
orl
int
jns
adc
inc
out
or
add
outsb
lock
cmpsb
push
dec
idivb
gs
test
and
cmp
mov
dec
call
daa
push
cmpsb
xorb
mov
and
add
jg
xor
loopne
jb
ret
or
movsb
xor
in
mov
xor
aaa
inc
xchg
cli
pop
int3
cmp
rclb
cmpsb
imul
and
shl
sbb
cmc
out
mov
pop
dec
push
sub
ret
inc
push
movl
int
cmp
mov
cwtl
stos
adc
jnp
mov
loope
or
or
out
lds
ljmp
loop
xor
rolb
stos
test
or
jae
shll
scas
das
mov
add
push
adc
das
test
add
sbb
ret
jg
jae
iret
divl
ss
ja
mov
loope
int
xchg
lods
pusha
xchg
add
fmull
adc
pop
repnz
push
shlb
adcb
mov
add
pop
xor
out
fisubl
in
je
mov
lret
lahf
call
scas
push
sub
out
pushf
lret
jecxz
xchg
push
inc
shrl
shr
or
fwait
mov
xor
pop
shlb
rclb
or
sub
cmp
insb
mul
push
stos
iret
mov
clc
cmpsb
cmp
push
roll
inc
jmp
xchg
xor
icebp
push
hlt
aam
out
xchg
pop
jbe
fiaddl
pusha
mov
lock
scas
push
mov
iret
pop
aam
lods
popa
or
sub
push
or
pop
mov
dec
sti
pop
arpl
test
loop
dec
dec
xlat
xlat
mov
jbe
jne
adc
sub
push
pop
sbb
and
pop
idivb
into
xor
cmp
out
jbe
call
btr
mov
push
mov
jl
adc
dec
mov
mov
insb
push
sbb
inc
les
xchg
mov
pusha
xchg
call
stc
repz
icebp
jle
nop
push
aaa
mov
pop
sar
adcb
pop
test
lahf
add
lock
sti
mov
jae
cmp
mov
out
pop
nop
jge
test
in
xor
push
dec
lea
mov
push
popa
mov
sbb
daa
push
push
ljmp
mov
add
mov
std
cmc
push
test
cmc
adc
jle
add
pop
pop
pop
xor
jb
sub
jbe
pop
addr16
mov
repnz
cmp
and
test
stc
int3
pusha
xchg
inc
inc
fnstcw
fdivrl
ja
imul
xchg
xchg
pop
aad
mov
inc
int
cwtl
lret
cwtl
popa
sbb
add
add
pop
adc
lods
test
leave
cmp
test
add
out
fbld
sbb
inc
dec
xor
cmp
movsb
rclb
mov
in
jb
inc
add
jmp
movsl
fwait
insl
add
popa
dec
stos
jno
mov
outsb
cmpb
stos
add
cltd
daa
mov
nop
sub
mov
in
popa
ja
mov
mov
aam
mov
fidivl
out
adc
aad
or
data16
jae
adc
dec
mov
mov
sub
xor
std
pop
dec
inc
rolb
negb
push
std
loop
or
cwtl
clc
dec
jnp
sbb
adc
pop
mov
dec
or
cs
mov
mov
xchg
jnp
jp
lds
ljmp
jno
arpl
movzwl
xchg
sti
in
ljmp
push
mov
pop
add
sbb
aaa
cmpsb
scas
movsb
scas
aad
jno
sahf
cmpsb
cmp
lahf
inc
sbb
pop
test
xchg
and
ljmp
sbb
gs
lcall
cmp
int3
mov
in
inc
repnz
orl
or
in
into
fst
add
push
pop
and
xchg
mov
lret
mov
xchg
mov
cld
int3
jecxz
xor
add
jns
je
add
rcll
enter
imul
mov
xchg
push
push
test
pop
pop
movsl
mov
pusha
add
cmp
jmp
fs
movsl
lret
mov
jmp
sti
push
or
lcall
add
rclb
lret
stc
mov
shll
inc
jo
les
adc
lods
pushf
cmpl
push
xchg
fs
push
jl
mov
leave
popf
cmpsl
pop
push
daa
dec
or
sub
pop
insb
push
sub
les
aad
mov
jp
xlat
imul
sbb
push
loope
adc
in
aad
jmp
mov
pop
jl
adc
test
dec
push
pop
sbb
push
js
xchg
pop
inc
mov
sub
nop
jp
push
pushf
or
pop
pop
rol
xchg
jnp
scas
pop
je
fisubrl
and
std
in
inc
into
and
test
inc
imull
mov
icebp
loope
cltd
cmpsb
stos
pop
or
adc
nop
push
jae
sub
push
mov
ret
xchg
orb
adc
jns
int
fstpt
loope
jl
pop
dec
cmpsl
cmpsb
mov
and
pop
lcall
fs
jmp
or
aad
lcall
sti
popf
xchg
rcl
add
sub
sub
jae
test
je
imul
mov
sbb
xchg
in
dec
lea
fistps
fidivl
lahf
imull
dec
push
jbe
cmp
cmpsb
jb
sbb
add
dec
in
inc
jne
loope
adc
xor
adc
xchg
or
sbb
dec
mov
dec
daa
adc
ret
push
mov
cmp
xor
imul
jae
iret
adc
and
ficomps
inc
out
gs
jmp
mov
and
add
add
sub
jp
arpl
test
daa
call
imul
ret
jp
push
and
sub
xchg
adc
xor
adc
or
jge
sub
fdivs
fsubrs
mov
dec
mov
ja
dec
cmp
mov
fcoml
sub
jnp
or
stos
lret
mov
mov
push
cmpsb
stc
hlt
insl
cmc
das
subl
sbb
cmp
les
adc
pop
aam
sbb
or
jne
aaa
out
cmc
fcompl
bound
or
arpl
addr16
daa
xchg
push
clc
cmp
dec
inc
bnd
scas
scas
leave
jae
inc
push
pop
out
jp
fbld
xchg
lods
mov
pop
push
or
xor
test
xchg
in
push
and
jge
in
jge
push
mov
push
cmp
nop
cmp
inc
in
out
jmp
lock
push
insl
icebp
ds
xor
mov
fcom
xlat
cli
aas
test
nop
xchg
adcl
dec
sahf
add
push
cld
mov
icebp
out
fcomp
roll
jmp
outsl
pop
sub
testb
jg
pop
jbe
out
test
push
addr16
imul
sbb
mov
lea
lock
add
bound
jmp
aad
out
dec
stos
dec
pop
and
outsl
jecxz
or
mov
sub
mov
mov
bound
cmc
or
lcall
and
mov
mov
cmp
in
mov
mov
adc
xchg
cmpsb
fs
sbb
pop
in
jb
and
pop
mov
mov
in
loop
iret
inc
scas
push
jbe
inc
cmp
push
sub
mov
mov
int3
pop
xor
pop
pop
movsl
dec
out
and
ret
cmp
movsb
sarb
mov
jns
jl
sub
cmp
sub
fsubrp
aad
cmp
cmpsb
aaa
jne
lods
mov
jge
jecxz
cs
dec
repnz
mov
sti
jb
repnz
xor
ljmp
mov
cld
in
jp
movsb
insl
lret
dec
lea
outsb
push
sub
pushf
xor
adc
jge
rclb
shll
inc
mov
rorb
out
xor
divb
adc
lahf
sub
or
mull
scas
je
fidivrs
insl
dec
or
mov
iret
pop
jbe
loope
push
popa
outsb
or
mov
sub
in
in
mov
pop
out
add
rcl
loop
mov
jns
nop
or
add
adc
cmp
shll
mov
and
enter
sub
addr16
jmp
sub
fsubl
mov
test
sub
mov
out
sub
xchg
xlat
fldcw
aaa
push
mov
sbb
cld
jnp
inc
lds
dec
mov
mov
rcl
lahf
out
pop
jl
dec
add
popf
adc
rorb
cmc
mov
xlat
std
cmpsb
and
das
pop
loope
es
stos
pop
into
mov
icebp
adc
test
lea
pop
add
adc
xor
lcall
adc
pop
mov
fistl
inc
scas
and
movsl
jge
ss
je
dec
shll
pop
loop
add
xchg
negb
ljmp
rorb
xchg
imul
iret
out
and
pop
aad
mov
mov
and
les
cs
cmp
bound
and
xabort
fcoms
ret
push
pop
outsb
mov
outsb
ja
inc
inc
jns
push
adc
int
stos
jns
shl
inc
test
mov
xchg
shr
fwait
mov
fs
aas
cmp
dec
popa
xchg
mov
push
jae
xorb
fsubl
ret
pop
dec
pop
insl
scas
jnp
mov
jge
scas
cmpsb
mov
xchg
sbb
push
sub
mov
std
pop
sbbb
leave
push
push
pop
int
sahf
add
jns
daa
jmp
mov
jg
sti
mov
cmp
cs
add
and
adc
call
lret
sbb
push
inc
mul
outsl
jg
push
stc
adc
jl
pop
pop
add
repz
sub
aam
cmpsb
cmc
in
andl
call
push
mov
pop
negb
lret
icebp
es
stc
push
sbb
iret
aad
inc
addr16
in
jo
fnsave
stos
ja
loop
dec
xchg
dec
push
sub
dec
dec
or
fcoml
pusha
cs
mov
mov
cmp
gs
mov
xchg
mov
and
mov
mov
add
or
in
jg
cmp
or
int
jne
imulb
fadds
add
jmp
shr
jb
lahf
into
pop
sub
cmpsl
jp
fnstenv
out
je
andl
dec
mov
fmuls
xor
xchg
push
add
push
dec
andb
bound
incl
jnp
ljmp
pop
mov
cltd
pop
fiadds
mov
inc
mov
xor
shrl
sbb
inc
jg
rcrl
or
shr
clc
adc
hlt
add
movsl
push
fbstp
aam
sub
ds
enter
jmp
out
outsl
fldl
cmpb
pop
shll
fsubl
leave
sub
daa
mov
cmp
stos
lcall
pop
popf
lock
rorl
fwait
pop
mov
adc
scas
xor
jno
lock
pop
dec
mov
sub
dec
pop
and
clc
inc
pop
outsl
jge
mov
cmp
pop
bound
in
mov
mov
mov
push
adc
dec
pushf
pop
out
nop
movsb
xchg
pop
pop
or
out
lret
xchg
sbbl
dec
sbb
in
les
jo
xchg
add
cmp
mov
jecxz
add
and
into
cwtl
mov
scas
js
jne
addl
call
aas
cltd
scas
movsl
enter
stos
mov
test
aaa
push
add
xchg
out
lods
cmc
stos
cwtl
mov
xchg
jbe
adc
popa
sahf
push
sbb
add
xlat
les
and
clc
shr
ret
scas
fbld
addr16
dec
or
sub
roll
clc
fwait
sbb
icebp
insl
scas
leave
fsts
jo
fidivrl
sub
jg
hlt
dec
pushf
push
xchg
pop
xchg
push
adc
or
xor
dec
inc
in
testb
das
xor
xchg
cmp
push
or
ljmp
or
inc
pop
inc
bnd
outsl
das
loopw
loope
sbb
adc
les
mov
push
sbb
dec
ret
pusha
jns
loope
cmp
or
pusha
das
fdivr
fdivrs
cs
ds
testl
loope
jg
pusha
stos
outsl
xor
or
call
mov
push
jo
fidivl
or
enter
fxch
jae
mov
inc
in
popf
in
xchg
aas
stc
sub
fs
out
xchg
push
hlt
enter
ss
adc
dec
mov
jb
pop
mov
mov
nop
jne
stos
stc
jp
xlat
mov
imul
jmp
mov
add
arpl
pop
ja
lock
xor
jbe
popa
pusha
fwait
and
ds
push
rcrl
cmp
test
sbb
fdivr
in
cmp
pop
daa
loopne
inc
add
lahf
jb
enter
jno
mov
insl
ss
xchg
pushf
into
es
test
add
pop
adc
in
inc
stos
push
push
subb
ljmp
jb
add
hlt
and
adc
mov
dec
flds
sbbb
rcr
mov
out
in
add
ficomps
sub
jmp
sahf
and
push
pminub
icebp
push
inc
dec
aaa
je
mov
jb
jo
in
pusha
add
mov
xor
xor
aas
mov
mov
dec
or
add
push
call
mov
lret
sti
addl
xchg
inc
ud1
or
sti
cmp
arpl
mov
cltd
jno
loop
ret
pop
adc
fisttpll
shr
pop
daa
mov
mov
clc
pop
mov
repnz
daa
lods
cmp
repz
es
push
roll
test
adc
sub
xor
addr16
out
dec
or
and
add
xlat
pop
in
jne
mov
loope
inc
adc
cld
xlat
adcb
rcrb
mov
test
das
lods
mov
inc
xor
xorl
mov
push
jnp
or
mov
popa
push
fs
cmp
mov
xchg
add
pushf
dec
scas
jne
mov
repnz
ss
add
fmull
inc
add
and
fnsave
pop
push
xchg
inc
dec
and
mov
xchg
jo
loope
xor
adc
subl
cmp
sbb
sbb
inc
out
inc
pcmpeqw
in
dec
pop
cmp
push
ret
data16
push
int
pop
mov
xchg
ret
adc
fwait
lds
jmp
or
mov
or
rolb
popf
cli
subb
pop
scas
and
sarl
push
xor
sub
scas
gs
lods
or
aas
add
sub
stc
jg
xchg
sbb
aas
sub
push
out
push
in
mov
test
adc
lahf
ljmp
cmpsl
test
lds
mov
in
mov
push
sbb
sti
shll
loope
xor
mov
sbb
subb
push
lret
cmp
decb
outsl
lds
outsb
sbb
dec
push
mov
jmp
inc
adc
call
cmp
aaa
and
mov
sub
jp
xor
lret
ret
test
stos
ret
cmp
popa
test
xchg
xlat
incl
cli
iret
out
mov
sti
stos
jbe
xchg
mov
fwait
jge
int3
stos
mov
pushf
test
cltd
and
aas
movsb
cmc
int
or
push
sub
dec
xor
into
aas
xchg
imul
rorl
ljmp
xor
sbb
fdivrs
scas
fscale
inc
push
data16
push
mov
test
lahf
xchg
enter
hlt
jmp
je
shl
pop
ret
xchg
jbe
out
aad
sub
cmp
data16
out
jnp
adc
in
in
pusha
jne
fildll
movl
je
fimull
jg
inc
push
or
in
outsb
and
jns
xor
mov
push
xchg
dec
fs
stc
pop
cli
xchg
add
sbb
push
mov
and
mov
stos
pop
movb
subb
sub
dec
cmp
sub
mov
push
sbb
shlb
popa
push
inc
xor
and
cs
add
popa
cmpsl
jno
dec
sbb
ss
incl
jnp
int3
sub
iret
insb
and
cmp
cmp
insb
mov
sbb
jnp
lret
jnp
pop
ficoms
sub
rolb
sbb
cltd
mov
inc
xorl
rorl
xor
push
lea
imul
xchg
clc
pop
push
in
fistpll
scas
jae
loop
or
arpl
jge
movsb
mov
data16
jb
aaa
cmp
fldl
xor
test
fbld
cmp
pop
lret
cmpl
cmp
jg
pop
iret
mov
adc
out
fiadds
fs
jle
cli
mov
aam
fisubrs
inc
pop
inc
mov
mov
mov
xchg
call
jo
pop
rorl
cmp
lods
jge
out
in
jnp
mov
or
cli
test
and
aaa
mov
fmulp
mov
mov
popf
mov
jg
cmp
repz
jecxz
mov
jnp
pushf
mov
xchg
mov
cmpb
out
jmp
pop
outsl
mov
jge
fcmovnbe
sti
mov
pusha
cli
out
ret
std
push
push
mov
fwait
int
vshufps
fs
addr16
sbb
and
incl
insl
xchg
mov
xchg
jl
xchg
clc
iret
jne
mov
aad
xor
mov
inc
or
repnz
mov
mov
loop
cmp
mov
xor
add
xchg
in
xchg
cli
mov
mov
loope
dec
add
sub
jae
sub
sahf
sub
jb
lods
jae
jp
adc
cmp
xchg
insb
dec
and
mov
lock
scas
xchg
xchg
sarb
cmp
sbb
dec
sub
sub
inc
imul
cmp
std
subb
testb
cltd
or
adcl
xor
sbb
test
lods
jg
cmp
cmp
ret
movsl
ds
add
pop
bound
adcb
loopne
xchg
and
and
mov
sti
nop
leave
sub
jp
xor
mov
and
jp
fldl
push
clc
js
push
pop
cmp
loope
sub
xchg
push
jbe
gs
nop
in
mov
mov
sbb
int
in
cwtl
or
push
inc
addl
xchg
iret
cmpsl
mov
xchg
push
jg
mov
in
xchg
stc
push
inc
ljmp
lds
xchg
repz
int3
shlb
mov
sbb
pop
cli
and
mov
cmp
cmp
sub
daa
and
and
inc
add
and
cltd
sbb
fldl
mov
out
sub
test
or
mov
or
dec
sbb
inc
in
std
outsl
es
test
jb
aad
cwtl
mov
ja
ror
loop
cltd
cmp
lds
xor
add
icebp
out
mov
sarl
addl
xor
mov
jmp
ss
mov
leave
lret
bound
cmc
pop
and
and
loop
dec
sbb
jo
mov
pop
stos
add
subb
xor
push
out
add
add
outsl
or
pop
mov
adc
sbb
ret
stos
dec
pushf
jb
cmp
daa
dec
xchg
xchg
push
jbe
xor
inc
cld
inc
mov
cs
jmp
rcl
xchg
add
xor
add
jl
out
std
push
pop
push
call
iret
pop
fs
and
outsl
in
roll
xor
jecxz
out
inc
gs
xor
adc
leave
pop
jecxz
lcall
pop
xor
test
clc
mov
and
mov
mov
aaa
es
mov
ja
int
testb
sti
mov
sahf
cmp
push
outsb
movl
xchg
jp
ja
lods
xlat
lods
add
std
out
push
dec
ja
aad
adc
subl
lods
mov
jns
movsb
mov
aad
incb
cmpsb
xor
or
out
out
mov
es
insl
jl
cmp
mov
negb
xor
mov
push
pop
push
test
mov
stos
pop
rcll
inc
scas
xor
addl
push
xor
dec
js
hlt
jb
pop
movsl
pop
pop
add
and
inc
insb
in
xchg
inc
sahf
out
jl
sbb
loope
sysenter
iret
mov
cmp
loopne
test
arpl
aaa
and
jnp
imul
and
stos
or
push
add
jmp
dec
fdivrl
repz
enter
xor
mov
fistpl
or
es
inc
repz
sahf
js
xchg
addr16
clc
or
out
pop
outsl
divl
stc
mov
mov
and
pop
add
pop
pop
lods
jae
dec
loopne
data16
dec
mov
test
inc
mov
push
and
cmp
adc
cs
mov
das
push
shlb
pop
test
cwtl
lds
out
dec
dec
into
daa
scas
aas
mov
in
xchg
and
cltd
adc
cmp
adc
xor
rorl
ss
mov
js
stos
pushf
js
push
or
pop
mov
mov
pop
out
cmp
mov
and
fs
and
pop
jg
lcall
ljmp
jne
dec
ror
sarb
add
adcl
mov
clc
mov
rolb
movsl
outsb
sub
cmp
icebp
dec
pop
inc
repnz
cmp
loope
xchg
enter
sbb
xchg
push
xor
or
ljmp
sub
jns
dec
or
mov
stos
add
xchg
jecxz
mov
sub
aaa
fsubs
mov
mov
stos
add
adc
sbb
jns
xchg
cmp
xor
mov
mov
xor
fisubs
mov
ret
cmc
push
xchg
rclb
loop
rcrl
push
sti
sbb
lret
sbb
sub
or
loop
fsubs
inc
ss
mov
aad
xchg
pop
aad
jnp
lock
push
xchg
dec
call
fimuls
mov
lret
or
stos
push
loopne
or
xor
movsl
aaa
jmp
rep
adc
push
jle
ss
mov
pop
lahf
in
clc
and
pusha
daa
incb
outsb
stos
pop
sub
ljmp
and
cmc
loopne
add
inc
rclb
push
xrelease
fimull
fstpt
xchg
mov
lret
mov
arpl
mov
dec
icebp
pusha
mov
sbb
out
push
arpl
xchg
fwait
lods
int3
pop
dec
enter
inc
jg
stc
cmp
fdivs
outsl
mov
xlat
lods
push
inc
outsb
aam
decb
sub
jle
clc
fcoml
aas
cld
jle
fdivrp
push
cmc
rol
or
out
xor
es
popa
xchg
ds
shlb
lahf
je
sub
or
outsb
daa
loope
in
jo
pop
push
inc
data16
or
push
xchg
cmp
into
dec
push
xchg
das
outsl
mov
add
repz
push
std
inc
ret
inc
xor
pop
jae
test
mov
pop
mov
sahf
mov
add
push
xor
ss
inc
mov
mov
push
out
in
dec
add
cmpb
or
ds
sbb
idivl
in
std
pusha
nop
push
movb
popf
dec
pop
cmpsb
cli
mov
push
push
push
roll
or
test
js
push
or
lds
mov
mov
xchg
lret
sub
pop
dec
mov
fwait
dec
add
sbb
push
aad
push
jae
mov
aaa
test
mov
shl
aas
arpl
fs
mov
mov
imul
or
jmp
int3
or
jl
je
movsb
inc
dec
dec
nop
ja
out
pop
xlat
daa
xorl
pop
mov
in
out
mov
loopne
jb
loope
add
mov
stos
cmp
pushl
sbb
arpl
or
cmpsb
testl
lahf
loop
out
stc
cmp
leave
sbb
js
or
test
roll
dec
adc
lcall
jne
ret
shrb
pop
dec
mov
jne
out
test
push
call
punpcklwd
lahf
jnp
cmp
push
jo
rorb
mov
stos
or
mov
ja
sbb
loope
ret
mov
dec
cmpsb
sub
push
test
xrelease
adc
and
jne
aaa
mov
stc
jns
int3
adc
daa
ror
jno
add
pop
pop
fmul
xlat
dec
std
addr16
iret
dec
dec
js
aaa
adc
xchg
xchg
enter
insb
xchg
dec
in
inc
je
pop
sub
mov
or
ds
push
rclb
and
cs
cld
adc
mov
ret
xor
enter
and
cwtl
sbb
xchg
jg
cmc
stos
or
scas
das
xchg
test
bound
imul
dec
loope
xor
mov
mov
push
ljmp
aam
and
jecxz
push
adc
dec
addl
add
jle
ret
test
ret
loope
jge
sti
lods
or
test
out
inc
dec
mov
mov
lcall
daa
mov
adc
sti
mov
notl
daa
dec
jns
repz
jge
mov
dec
push
or
pop
js
movsb
push
or
mov
repz
js
push
adc
notb
cmp
inc
insb
mov
into
scas
xor
iret
fucom
jno
xor
int
pop
push
dec
stos
inc
lods
bound
xchg
push
leave
pop
fsubrp
repnz
add
ret
jge
push
lds
inc
clc
cmovnp
push
jb
mov
cmp
xchg
xor
xorb
push
cs
jmp
ljmp
push
or
jle
push
aaa
xchg
testb
jnp
pop
mov
push
sbb
aaa
inc
pushf
shufps
adc
fistps
add
mov
notl
pop
inc
push
xchg
push
mov
inc
inc
jb
cmpsb
ja
adc
mov
ss
sbb
mov
pop
aaa
cmpl
test
sbb
test
test
scas
xchg
subb
xor
xchg
jns
sub
pop
mov
rclb
loop
or
pop
cmc
test
sarb
notb
xchg
add
mov
outsl
movsb
mov
xor
popa
add
stos
xor
icebp
sbb
rorl
mov
repz
popa
rclb
shl
mov
lock
cwtl
stos
inc
ss
sub
fidivrl
enter
cwtl
je
sbb
mov
or
jg
adc
inc
pop
adc
push
aad
mov
cmp
into
sub
or
mov
mov
movl
mov
mov
xchg
pop
jg
add
cmc
shlb
xchg
dec
xlat
cmp
sbb
es
and
mov
insb
push
fcoml
jecxz
push
add
cmc
mov
xchg
lock
jle
mov
sar
outsb
xchg
outsb
add
dec
loope
shrl
pop
shll
jns
xchg
jmp
fidivl
and
pop
sub
ret
mov
les
pop
stos
sub
or
scas
and
dec
jge
sub
arpl
pop
inc
mov
jae
data16
cwtl
mov
addr16
sbb
inc
addr16
inc
rcl
pop
sub
and
popf
loop
test
sub
mov
mov
test
add
mov
push
mov
adcl
addr16
test
add
or
push
dec
add
es
repz
dec
push
push
push
dec
out
movsb
dec
sub
sub
add
mov
int3
mov
xchg
sbb
xor
inc
mov
xchg
xor
push
stos
loop
jnp
lock
mov
dec
inc
sti
mov
adc
or
jecxz
push
outsb
jge
popa
into
sbb
ljmp
shr
bound
out
sahf
lcall
push
stos
pop
pusha
pop
add
pop
and
jge
je
fisubrs
jo
cmp
add
xchg
and
out
mov
bound
xchg
cmp
pop
dec
push
mov
fldl
pop
jne
pop
pop
sahf
pop
popa
mov
mov
cmp
pop
adc
pop
adc
shll
add
scas
inc
xor
jge
adc
mov
xor
dec
out
lret
add
inc
cmpsb
or
data16
push
adc
jmp
push
popf
mov
jnp
test
mov
adc
xor
pop
jl
sbb
mov
push
adc
out
cmpsb
loop
loopne
jg
xchg
int
jne
push
ret
mov
movsl
cmp
daa
hlt
das
mov
fildll
dec
divl
enter
fsub
pop
xor
outsb
or
mov
cli
rorb
push
ljmp
jnp
jge
or
out
fnstsw
cmp
imul
push
gs
cmp
sti
les
inc
cli
cmp
out
shlb
inc
scas
inc
xor
lds
jno
sarl
addr16
popf
jmp
mov
fistl
xor
jae
addr16
fnstcw
jmp
adc
mov
in
and
scas
inc
sbb
loope
or
mov
sbb
mov
sbb
pusha
mov
clc
fsubs
insl
pop
sub
incb
jle
pusha
mov
inc
fcoml
das
xchg
test
ss
cmpsb
inc
sub
push
icebp
and
inc
arpl
out
stos
addl
aaa
jbe
hlt
sub
dec
sub
hlt
adc
lcall
mov
popa
in
xchg
add
sti
lea
fiaddl
loop
add
call
mov
scas
push
int3
popf
sub
int3
into
mov
into
mov
xchg
addr16
dec
inc
pop
dec
test
out
cltd
popa
popf
jg
add
cli
imul
add
sbb
test
aam
cmpsl
aaa
xlat
add
cmc
ret
shrl
sahf
lret
dec
stc
mov
push
push
add
shl
shr
adc
add
xor
and
inc
and
repnz
jg
inc
andb
mov
or
fiaddl
mov
jb
or
xor
rep
push
iret
xchg
sti
shlb
push
mov
sub
cmpsl
jbe
addb
lret
cmp
bound
pop
add
repz
xchg
mov
pop
dec
cmp
mov
mov
push
dec
hlt
mov
lahf
mov
iret
ret
stos
scas
cs
mov
rolb
dec
loop
fildll
push
jno
enter
cmpb
ja
cmp
inc
push
jg
pop
jge
call
lcall
addr16
dec
mov
sub
loope
mov
loop
cmp
test
mov
xchg
sahf
rolb
jge
lahf
jb
mov
push
push
dec
pop
stos
jle
cmc
cld
insb
push
mov
mov
mov
and
lods
cmp
repnz
push
add
and
mov
loop
shll
xchg
negl
xchg
test
cli
lods
fs
add
icebp
iret
imul
adc
pop
mov
adc
mov
loope
mov
shll
loop
push
inc
movsb
out
mov
mov
and
daa
mov
sbb
or
ret
sar
mov
sub
mov
lahf
cmp
les
cwtl
rcrl
popa
movsl
test
add
sti
sub
loopne
inc
inc
fists
out
lock
xor
jns
cmp
clc
push
push
arpl
repnz
insl
dec
push
mov
adcb
pop
sti
stos
inc
filds
in
ljmp
out
mov
lods
jae
nop
adc
pop
inc
fwait
lcall
std
xor
adc
sub
or
mov
jg
dec
popa
inc
popf
aad
imul
xchg
aas
in
push
sbb
adc
popf
loope
push
inc
testl
int3
aaa
dec
addr16
jb
jp
xlat
inc
std
add
pop
aas
sbb
or
outsb
dec
push
sbb
cmp
cmp
push
scas
or
pusha
xorb
mov
cmp
lods
inc
mov
inc
inc
push
dec
inc
ret
test
sbb
push
dec
jae
cmp
lcall
std
sub
cmp
ret
jecxz
or
movups
jns
pusha
stos
divl
cld
stos
sbb
idivb
ljmp
push
aas
sub
shlb
movsl
stos
jmp
and
insl
inc
jbe
xchg
cmp
in
pushf
xchg
test
or
and
leave
scas
lahf
mov
pop
adc
aam
xor
dec
cmp
popf
mov
pop
testl
mov
push
test
or
cmp
and
loopne
adc
pusha
std
adc
jns
xchg
pop
test
fmuls
xlat
cmpsl
and
mov
and
popf
push
fs
dec
sub
xchg
sbbb
xorl
in
pop
lods
or
adc
jge
sub
pop
cmpsl
movsl
ds
pop
pop
cmp
mov
je
jp
subl
xchg
mov
and
outsb
sub
xor
mov
mov
adc
push
xor
cmc
mov
pop
sbb
rcr
jae
out
jns
ljmp
fxch
push
mov
aam
and
mov
push
pop
dec
dec
jg
divb
imul
sub
insl
int
fdivs
or
push
add
or
fcomps
inc
xchg
mov
inc
pop
pop
imul
les
clc
loop
pop
adc
pop
jne
cmc
ss
pop
fidivs
lahf
mov
mov
or
add
rcrb
fs
push
inc
adc
cltd
push
xchg
ret
fidivrl
int3
xor
shrl
sti
xlat
jo
sub
xor
sbb
cmp
cmp
dec
sbb
pop
add
mov
lds
jg
or
in
mov
mov
int3
jo
jg
pop
sti
fisttps
loop
les
adc
popf
les
divb
test
jl
sbb
pmulhuw
aad
in
jg
lock
and
sub
fcompl
add
shrl
cmpsb
mov
shll
call
sub
int3
iret
out
arpl
stos
daa
cs
popa
inc
shlb
mov
fwait
popf
movq
or
cli
cmpl
lds
mov
adcl
cmpsb
lahf
xor
pop
mov
je
repz
inc
in
or
sbb
xchg
repnz
push
fmuls
insb
cmp
cltd
cwtl
aam
into
mov
cld
push
mov
clc
mov
lcall
sahf
lret
or
into
ret
cmpsl
pop
xchg
pop
aam
fs
mov
notl
xchg
lock
xchg
test
xchg
into
adc
lea
fs
cwtl
test
add
or
std
pop
dec
add
add
es
inc
and
lcall
pop
in
mov
sbb
lcall
lea
cmp
push
push
ret
data16
lea
leave
adc
sbb
xabort
js
jnp
gs
into
sub
clc
in
arpl
sahf
and
or
jmp
repnz
cmpsb
pop
ds
add
cli
bound
xor
ret
inc
lea
aas
xchg
gs
outsb
out
loopne
push
repz
or
jg
cmp
pushf
add
imul
pop
aas
int
dec
clc
outsb
test
les
ja
jb
clc
mov
or
out
pop
mov
cltd
dec
les
daa
sub
lcall
jp
sub
and
dec
add
push
pop
jl
mov
pop
std
in
inc
lahf
arpl
addr16
push
fwait
out
repz
add
movsl
adc
cmp
mov
mov
mov
mov
pop
xlat
and
cmp
icebp
mov
enter
xchg
test
inc
jb
repnz
fsubrl
xor
add
call
push
loopne
div
nop
mov
or
ret
rcll
lock
or
sbb
pusha
cli
fsubp
sub
jo
test
loope
fldcw
add
clc
daa
jg
inc
shrb
push
cmp
xchg
push
movsl
out
add
stc
and
bound
dec
dec
out
test
into
pop
inc
push
sbb
sub
aam
stos
cld
inc
mov
cmp
pop
cmpsb
pop
leave
dec
dec
add
sub
and
movsb
scas
test
pushf
lret
mov
enter
aad
fisubs
adc
arpl
xchg
xor
add
adc
lods
jb
xor
sbbl
subl
shrl
data16
aad
ja
inc
mov
sub
jae
into
pushf
inc
je
mov
sbb
push
daa
sub
or
les
mov
mov
mov
shll
pop
jl
imul
sbb
addr16
or
mov
pop
pop
into
inc
add
das
shlb
jb
aaa
ss
push
jno
mov
pop
xor
mov
sti
mov
cld
ficoms
xor
cmp
add
scas
fdivrp
inc
xchg
adc
mov
mov
sti
in
inc
decl
movsb
test
daa
dec
std
jl
or
jbe
push
in
aaa
adc
xor
or
sub
mov
xor
jb
pusha
sub
or
add
xchg
out
dec
ljmp
add
ljmp
and
js
mov
cltd
inc
neg
xchg
std
pop
jge
jl
sbb
dec
jle
mov
jge
or
out
rcrl
xchg
sub
add
pop
test
jmp
jmp
sub
push
sub
push
fistpll
jp
les
fcmovbe
mov
aaa
mov
or
mov
jmp
adcb
mov
fmulp
shl
loop
sbb
cmpb
mov
stos
cmp
jle
jg
loopne
jl
inc
lret
daa
pop
cltd
mov
pop
cmp
fcoml
push
jo
adc
scas
or
push
shl
sbb
fists
push
ret
xor
dec
nop
rcrl
mov
mov
or
or
inc
lods
mov
xchg
mov
jbe
insb
mov
xchg
daa
dec
stos
xor
jne
pop
sub
int
rorl
pcmpgtw
xchg
or
pop
inc
sbb
mov
cs
xchg
sub
xor
sbb
mov
jns
mov
push
lds
lret
sti
adc
out
ss
push
ljmp
imul
pop
pushf
xor
add
cmp
out
or
cli
dec
lods
pop
sbb
loope
ljmp
aaa
mov
cs
mov
in
adc
lods
or
aas
cmpsl
sub
test
test
fisubs
cmc
negl
inc
push
pushf
das
pop
jmp
dec
cmp
jg
adc
mov
mov
pop
mov
push
cmc
add
mov
mov
and
lods
lcall
mov
icebp
rol
std
pop
mov
cwtl
cmp
fstps
call
or
dec
testb
nop
decb
rcrb
inc
xor
ret
rcr
lahf
cmp
iret
jnp
push
mov
enter
xchg
push
bound
cmc
rclb
ficompl
and
sbb
cs
dec
inc
or
movb
popf
lods
xchg
pop
adc
clc
cmp
popa
xchg
cld
fs
ficoms
daa
pop
xchg
sahf
add
mov
jnp
and
stc
rcll
sub
adc
adcb
call
nop
lds
pop
lods
ljmp
sbb
imul
mov
lahf
les
iret
scas
dec
adc
xchg
mov
ret
sub
aaa
jne
imul
pop
rcrl
pop
pushf
dec
xor
cmpl
sti
cmpsb
out
inc
add
push
emms
jp
inc
sarb
sar
jg
sbb
add
repnz
pushl
adc
dec
sub
xchg
pop
mov
push
out
pop
inc
inc
pop
mov
in
mov
sbb
js
push
sub
xchg
pop
inc
sar
inc
cmp
into
out
jae
dec
add
inc
mov
test
fstps
fsts
ja
sub
fdivrs
cmpsb
addb
pop
pop
loope
and
ds
mov
call
and
pop
jp
add
push
push
dec
add
inc
icebp
cmpsb
or
inc
inc
sahf
pop
inc
sbb
jns
mov
add
jle
xor
xlat
cmp
lock
aam
xor
outsb
pop
icebp
jbe
push
pop
dec
negb
add
jg
dec
outsl
dec
bound
mov
in
stos
mov
cmp
in
lods
jg
movsl
addps
cmp
in
in
test
fimuls
bound
push
jnp
jae
in
jae
jne
lcall
push
pusha
sub
lock
mov
frstor
dec
loope
lods
in
ljmp
push
call
or
cld
push
adc
stc
inc
test
jne
out
mov
mov
xor
mov
pop
mov
lret
sub
lret
scas
xor
test
jnp
mov
ja
dec
insb
ficomps
pop
out
pop
xor
out
xor
mov
sbb
clc
jecxz
mov
push
dec
fisubrs
mov
push
sub
dec
xor
imulb
mov
pop
adcb
cmp
ss
or
cmp
xor
shrl
sbb
mov
test
mov
pop
repnz
mov
aas
dec
cmp
xor
stos
mov
clc
lret
pushf
fsubs
cmc
stos
mov
xor
xor
pop
faddl
add
mov
push
aad
call
in
cmpsl
and
cmp
add
std
push
add
movsb
sbb
mov
jle
jae
push
cwtl
jp
pop
das
aas
jb
push
inc
xor
inc
ss
aam
popl
idiv
cmpb
xorl
out
jae
pop
sti
popa
xchg
push
xchg
popf
repz
and
mov
dec
add
pusha
popf
int
or
stos
fwait
add
pop
ds
mov
pop
subb
pushf
repz
cmp
jge
and
stc
repz
sub
mov
sbb
and
ret
cmpsl
and
clc
sbb
pusha
std
mov
xor
fstl
movl
pop
imul
push
add
push
sbb
insb
int
sbb
cld
cmpsb
xchg
daa
imul
inc
xlat
mov
insb
icebp
xchg
mov
push
lret
push
les
loopne
push
outsb
and
and
imul
cmc
imulb
imul
addr16
cmp
outsl
push
xchg
incl
outsl
jle
addr16
aas
push
decl
mov
inc
xchg
shll
lds
fcomip
pop
sbb
in
xor
shlb
in
les
dec
movsl
and
cli
stos
shll
jnp
pop
pop
mov
sbb
repz
ss
mov
nop
xlat
jmp
in
mov
sbb
enter
xchg
adc
insb
ljmp
loope
int3
cltd
push
push
movsl
inc
mov
int3
in
or
es
sbb
rorb
or
push
push
push
push
inc
xor
adc
fiaddl
lahf
cmp
filds
mov
lcall
sub
out
mov
hlt
inc
fimuls
push
pop
mov
rclb
fsts
imul
data16
cmpl
or
sub
cmp
cltd
pop
dec
jnp
mov
pop
or
push
fsubrl
adc
pmullw
outsl
shll
inc
pop
int3
clc
cli
arpl
ja
xor
pop
decl
jg
push
cmc
add
sbb
mov
in
cs
cwtl
mov
mov
loop
arpl
insl
mov
int3
cmp
or
mov
ret
mov
pusha
lcall
js
bound
sar
pop
dec
push
arpl
mov
lods
mov
out
addr16
adc
hlt
data16
inc
add
fnstenv
js
daa
add
mov
mov
and
lcall
mov
enter
loop
push
test
jb
fs
cmp
add
insl
fcomps
aaa
sub
adc
inc
popa
ror
sbb
jmp
sahf
or
test
or
arpl
mov
cmp
inc
enter
pop
xor
jbe
aam
xchg
add
add
push
hlt
lret
sbb
jle
dec
cmpsl
lds
std
mov
jle
leave
xchg
rcl
ret
das
bound
lds
jp
repnz
pop
xchg
test
aaa
xor
js
adc
sub
dec
sub
lds
cltd
repnz
mov
pop
flds
in
pop
dec
mov
or
add
clc
test
dec
pop
js
imul
cmp
call
add
push
mov
sbb
in
jnp
jl
movsb
xchg
sbb
sub
rcr
add
push
clc
mov
mov
icebp
sub
outsl
inc
aaa
mov
js
push
xchg
enter
lds
fsubrs
push
int3
adc
xor
sbb
xor
mov
sbb
mov
sbb
loop
and
out
loop
mov
add
and
xor
decb
cs
cmpsl
mov
dec
bound
mov
scas
sbb
mov
mov
or
out
sbb
lahf
xchg
push
mov
lock
pop
scas
xor
aam
pop
mov
cmpsb
out
mov
fildl
adc
adc
or
add
dec
mov
adcb
dec
sbb
mul
decb
add
push
push
pop
gs
mov
pop
out
cmp
call
mov
pusha
mov
out
inc
cmp
vmovaps
mov
xchg
and
mov
pop
lds
sub
pop
xchg
cmpsl
ljmp
push
pop
cli
jnp
xchg
mov
lock
jp
aam
dec
nop
push
xchg
pop
mov
rorl
jmp
in
xchg
pop
daa
cmp
mov
mov
pop
push
aam
test
push
push
push
mov
enter
ret
pop
imull
inc
pop
mov
cmpsl
xchg
subl
xchg
das
aas
sbb
pop
xchg
jb
pushf
mov
inc
pop
fcmovnb
js
ret
sarb
mov
lods
cmc
fists
insl
addr16
or
insb
fdivrs
dec
orl
leave
lock
sub
and
aas
jmp
pop
cmpl
mov
aam
fsubrl
sti
add
cwtl
jecxz
mov
out
xor
scas
in
aaa
rcrl
mov
mov
mov
inc
adc
dec
int
out
jp
out
in
adc
fdivr
mov
ja
out
lea
and
das
lods
mov
fdivs
mov
mov
sbbb
xor
stc
mov
adc
sbb
rcrb
pop
insb
mov
testl
jb
sbb
sub
mov
mov
and
dec
lods
sti
fiaddl
push
pop
stos
pop
jle
dec
sub
cmp
mov
cmp
imul
loop
lea
aas
popf
adc
stc
xor
push
adc
lods
int3
imull
cmc
out
jle
or
jo
fisubrl
inc
xchg
mov
mov
sbb
jecxz
adc
shlb
arpl
jp
add
loope
and
int3
sub
mov
and
xor
std
pop
sbb
xchg
cmp
or
scas
scas
inc
and
in
insl
sub
cmp
xchg
stc
lods
lgs
icebp
inc
ja
pop
sbb
sahf
testl
mov
jl
jns
mov
sbb
cmp
lahf
xor
loopne
sbb
testl
push
mov
cltd
faddp
xchg
mov
mov
inc
jge
hlt
mov
out
and
lds
cmp
add
iret
xchg
xchg
push
or
xchg
daa
fsubs
icebp
cwtl
jno
mov
aaa
rdpmc
xor
inc
mov
fistpl
test
xor
xor
mov
add
sub
fstpl
push
repz
lods
ds
cmp
mov
mov
lret
mov
enter
pop
jnp
sarb
mov
pop
push
testl
idivb
inc
stc
cltd
in
aad
cmp
jmp
jnp
jne
sbb
pop
shlb
mov
and
arpl
adc
repnz
imul
pop
xchg
call
adc
inc
outsl
out
test
test
shll
cmp
adc
add
std
push
push
aaa
bswap
fisubrl
shll
or
push
jmp
cmp
cmpsl
add
push
push
mov
sub
mov
ja
faddl
and
shlw
dec
xor
xor
pop
inc
movl
cwtl
sbb
pusha
mov
mov
adc
popf
push
xor
movsl
fsubs
mov
mov
es
push
pushw
add
dec
cli
xchg
mov
xor
or
push
popf
mov
movsl
xor
mov
cli
mov
adc
inc
ljmp
jbe
repz
adc
test
cmp
addr16
int
mov
shll
js
mov
pop
mov
jae
dec
test
fsubrs
dec
jmp
inc
iret
sahf
in
imul
in
sub
and
les
cmp
aad
inc
sbb
hlt
xor
iret
mov
test
pop
mov
repz
inc
ljmp
xchg
inc
mov
call
mov
cli
pop
mov
fmull
in
dec
push
pop
pop
rclb
ljmp
mov
inc
lods
bound
sbb
es
xchg
inc
xchg
jl
xchg
lds
shll
pop
sbb
popa
repz
add
rcrb
data16
mov
loop
mov
xor
push
in
lock
or
inc
mov
jnp
dec
aad
lret
and
sub
lds
sbbb
sbb
mov
lret
sbb
aad
pusha
pop
hlt
or
push
adc
mov
ljmp
xchg
mov
lea
sub
popa
xor
addb
pushf
cmc
aad
pop
out
int3
add
mov
adc
pop
push
add
push
ficoml
add
add
xchg
xor
mov
pop
pop
cmpsl
into
sahf
adc
lahf
cwtl
xchg
inc
out
lret
out
lahf
mov
cltd
test
imul
scas
loopne
lea
cmpsb
or
imul
mov
push
dec
inc
clc
mov
and
cmc
sbb
subl
and
xor
es
push
adc
sbb
mov
je
fwait
sbb
xor
cmp
fdiv
mov
mov
cli
xor
je
mov
imul
xor
cli
lock
cltd
add
xchg
fstps
mov
leave
jb
mov
cmp
fcomip
cmp
add
and
adc
xchg
cmc
out
loop
gs
mov
mov
mov
xor
mov
sub
icebp
xchg
pop
cmp
jae
iret
push
mov
push
mov
je
xchg
push
push
js
inc
jg
fwait
testb
add
jnp
or
jns
popf
ficoms
jae
insl
addr16
mov
cmp
int
faddl
aas
mov
mov
orb
push
jns
leave
or
pop
mov
pop
add
pop
insl
frstpm(287
mov
out
inc
xor
ljmp
and
mov
in
or
out
std
roll
lods
or
cmpsb
xor
adcl
mov
jb
aaa
jnp
mov
je
jl
das
adc
ret
and
mov
add
adcb
push
mov
push
sub
and
jns
loopne
jno
cwtl
jge
emms
adc
xchg
in
outsb
sub
into
and
shll
jmp
mov
cmp
dec
dec
mov
cs
pop
and
add
loope
mov
popa
outsb
aas
sbb
mov
cmp
sub
mov
jmp
or
out
das
outsb
std
mov
sbb
jno
add
scas
pop
lea
dec
inc
sti
xchg
shlb
jae
nop
cmp
jns
jge
sar
mov
add
adc
out
sub
mov
sub
or
mov
hlt
add
stc
adc
loopne
xor
cmpsb
add
cmp
shlb
inc
shll
inc
sahf
mov
push
push
mov
leave
xchg
sub
sbb
fwait
aad
dec
xlat
mov
push
pop
sahf
mov
sub
mov
dec
pop
fmul
inc
sub
js
lea
popf
jb
dec
sbb
call
sub
adc
iret
fiadds
sbb
into
movsb
xchg
test
mov
in
cmp
lods
in
in
sarb
out
test
addr16
inc
sti
cmp
outsb
push
subb
je
pop
pop
jnp
loop
subb
outsl
sarb
inc
es
orb
pop
pop
inc
out
inc
pushf
js
popa
xor
or
sub
aaa
fcoms
test
das
pushf
clc
rolb
jp
iret
pop
shlb
rclb
cmc
sarl
clc
sub
sbb
dec
pop
or
mov
mov
inc
mov
call
scas
sbb
sti
in
pop
push
das
sbb
lret
std
roll
xchg
orl
push
imul
fcomi
sbb
mov
scas
mov
push
sbbl
std
pusha
sub
mov
lcall
idivl
push
and
testb
cld
xchg
inc
and
jp
cmp
xchg
icebp
adc
fnstsw
sub
or
jo
jecxz
jmp
out
movsb
mov
mov
mov
sahf
mov
cltd
mov
ret
jbe
mov
mov
push
scas
dec
in
int
icebp
adc
stos
and
cmp
incb
fadds
cmp
inc
int3
push
test
loop
lock
or
mov
fxam
sbb
jb
cmp
dec
pop
sub
movsl
sarb
adc
ss
fdivrs
mov
pop
xchg
cmp
je
scas
insl
aam
jne
out
xchg
cwtl
mov
cmpsl
sub
js
cmp
xchg
ret
pop
icebp
mov
mov
jb
add
cmp
stos
shld
pop
out
mov
mov
xchg
pop
out
sbb
fs
pop
out
fcomip
hlt
sbb
leave
lds
out
testb
xchg
xor
pop
stc
mov
fildl
sbbl
xchg
sub
xchg
loopne
insl
sbb
xor
sbb
inc
in
dec
mov
inc
testb
loopew
in
pusha
pop
scas
in
cmovb
mov
aam
cltd
addr16
cmpsl
jnp
xor
test
xor
shlb
scas
gs
sbb
cmp
mov
or
mov
leave
fiaddl
pop
ds
sarb
sbb
mov
xchg
scas
rcrb
mov
fwait
sub
mov
jecxz
push
imul
or
or
cwtl
lret
xchg
push
push
rorl
addl
mov
andl
inc
ljmp
mov
lret
ficomps
in
lret
xchg
leave
movsl
test
inc
insb
or
cld
mov
pop
mov
int
sbbb
fdivrl
push
mov
pop
sbb
cmp
scas
pusha
sub
xor
into
lods
sub
fsubr
cmp
or
dec
sbb
jl
shlb
xor
inc
test
dec
es
negb
mov
sub
mov
ret
push
pop
cmp
mov
jae
cwtl
mov
push
cmp
cmp
repnz
inc
ss
iret
jge
call
mov
cld
add
stos
mov
xor
add
cmpsb
lock
aas
mov
in
sbb
mov
sbb
mov
and
jnp
jecxz
mov
push
dec
pop
jp
xor
cmp
xor
or
push
mov
cli
aaa
push
lods
movsb
mov
int
pop
lahf
mov
mov
push
out
inc
outsl
insb
repnz
jb
push
jp
xchg
fwait
in
es
pusha
pop
shll
mov
fstp
inc
pop
movsl
add
dec
ljmp
arpl
adc
mov
mov
cmp
jne
mov
popf
xchg
cmp
or
mov
gs
xchg
enter
cmp
mov
jge
sbb
jno
xor
jge
div
out
imul
aaa
ud2
js
testl
cmpb
add
mov
outsb
iret
sub
jbe
popa
in
je
and
push
leave
xchg
test
rorl
jbe
mov
into
imul
xchg
clc
push
sbb
mov
add
push
lret
mov
xchg
cmc
pop
xchg
xor
ss
inc
push
fildl
inc
aaa
push
pop
or
pop
rorb
gs
adc
loopne
mov
add
jne
mov
xor
ds
xor
hlt
xchg
iret
mov
pop
pop
mov
jno
sub
push
gs
test
and
fsub
sbb
mov
pusha
int3
ljmp
jns
negl
inc
push
push
pop
add
and
cmp
sub
stos
bound
ja
push
test
ffreep
imul
jno
into
jmp
sahf
mov
clc
dec
repz
push
mov
lea
adc
inc
mov
cli
cmp
dec
jae
lock
dec
orb
mov
insb
sbb
mov
loopne
sub
insl
sub
sub
stos
loop
mov
fcmovne
dec
js
lahf
add
in
inc
xchg
mov
pop
ds
xchg
mov
push
ljmp
push
pusha
shll
mov
sbb
fwait
movsl
nop
inc
leave
into
sbb
movsb
xlat
fldpi
fisubl
and
push
jge
stos
fs
out
sub
cmp
iret
sub
insl
add
out
add
dec
fadds
push
movsb
add
inc
push
js
insb
pop
and
mov
das
pop
cmp
push
add
repz
outsl
das
mov
adc
lcall
iret
repnz
in
jle
in
and
sbb
pop
outsb
jl
mov
pop
sahf
push
addr16
jl
adcb
aam
jbe
icebp
clc
dec
adc
out
fwait
adc
ret
add
jg
xor
jge
lahf
mov
or
adc
sbb
movsb
faddl
sub
stos
jb
test
push
nop
jbe
or
inc
cmpsb
mov
popf
cmpsb
mov
jb
inc
mov
inc
pop
je
pop
mov
stc
push
loop
jecxz
inc
sbb
icebp
out
dec
sub
mov
addr16
iret
sbb
shl
ret
test
push
subl
push
sub
std
popa
mov
dec
je
lea
dec
push
push
sbb
xchg
test
sub
pusha
add
push
dec
outsl
add
sahf
adc
pop
fbld
data16
addr16
push
test
scas
xchg
ds
int
les
xor
inc
mov
cld
dec
pop
fimull
dec
stos
shrb
and
sbb
imul
ss
cmp
icebp
pop
dec
add
pop
push
mov
jne
inc
leave
jle
lcall
out
ret
frstor
add
bound
jg
mov
aad
push
adc
out
pop
out
jg
add
xchg
dec
ljmp
sbb
insl
jno
sbb
push
hlt
and
xchg
push
jnp
and
fnstsw
roll
jno
mov
enter
out
jle
stc
xorl
stos
test
jne
inc
pop
mov
loope
mov
imul
xchg
lods
repnz
repnz
orb
push
int3
pop
cltd
mov
test
addr16
xor
cmpsb
ss
dec
test
rcr
sbb
nop
jns
es
jne
stc
mov
lods
aam
cmp
pop
int3
inc
cmp
mov
andb
cs
and
sar
sahf
or
or
sbb
mull
sbb
mov
pusha
mov
into
addr16
mov
or
mov
mov
std
mov
daa
adc
jmp
push
inc
dec
shlb
mov
pop
dec
insb
mov
mov
mov
insb
mov
in
je
dec
cmp
mov
addb
lods
lahf
nop
dec
pop
xor
ror
mov
stos
or
shrb
dec
mov
push
pushf
ds
push
bound
popf
iret
and
roll
sbb
inc
loop
inc
jecxz
loope
inc
xchg
loope
stc
xor
shlb
imul
sbb
dec
cwtl
jno
xchg
jae
pop
sub
jns
sbb
mov
adc
aas
xchg
pop
add
fbstp
test
subl
aas
pop
outsb
pop
stc
adc
dec
data16
gs
int
repz
andb
jmp
test
popf
xchg
frstor
pop
or
lods
mov
es
std
mov
mov
fnsave
aad
daa
push
popf
and
mov
jp
pushf
aaa
xchg
shlb
les
adc
sbb
xchg
sub
lret
mov
mov
mov
out
into
pop
jp
je
jmp
movsl
jg
mov
mov
subb
mov
lods
fnstenv
rorb
ret
lcall
sti
popf
inc
in
out
xor
testl
jne
push
xchg
jno
adc
rorb
dec
push
clc
or
xchg
mov
and
sbb
xor
xor
aaa
mov
push
inc
pop
shll
mov
frstor
je
lods
mov
lret
push
loop
popa
enter
mov
add
rorb
xchg
adc
fisttpl
mov
lahf
cmp
inc
jge
lods
inc
sub
adc
add
add
sub
rep
cmp
pop
jp
mov
inc
mov
sub
int
sub
cmp
fwait
pop
lods
pop
sbb
stos
push
mov
testl
inc
xchg
dec
and
adcb
push
lock
inc
in
push
addr16
dec
lods
jbe
dec
lcall
out
adc
inc
jge
xchg
mov
push
jnp
xchg
sub
jp
mov
jb
repnz
push
sbb
adc
pop
iret
adc
adc
mov
stc
push
push
add
or
mov
cwtl
dec
ja
jmp
out
mov
jl
jae
enter
cmp
loope
jmp
pusha
jb
add
jecxz
cmp
int3
lods
movsl
lds
sbb
push
adc
test
aaa
lcall
sub
jno
notb
stos
sahf
cwtl
jns
ss
adc
xor
out
call
sub
mov
test
adc
pop
insl
and
insb
or
nop
cltd
cwtl
push
mov
loopne
inc
fmuls
push
movd
xor
push
push
push
fbstp
daa
out
dec
mov
xor
lret
or
push
cmp
add
arpl
arpl
outsl
dec
pop
jb
repnz
mov
inc
je
decl
cs
pushf
inc
push
adc
or
fucomp
out
jp
jecxz
inc
cmp
xchg
cmp
in
xor
sbb
fcomps
mov
stos
add
add
mov
push
push
xchg
pop
jecxz
rcll
and
ret
mov
shl
pop
mov
cmp
dec
mov
mov
jbe
mov
jbe
xor
cmc
mov
in
xchg
js
sub
sbb
dec
int
inc
fiadds
ss
stc
and
xchg
fstp
mov
in
nop
jge
inc
mov
adc
mov
gs
hlt
cmp
loope
mov
mov
flds
adcl
xor
leave
shrb
xor
and
xor
aaa
push
adc
ljmp
or
sub
add
scas
cmp
jle
nop
sub
std
cmp
sub
stos
lds
lock
js
xchg
lock
push
xor
pop
arpl
mov
mov
orb
mov
out
sub
in
pop
scas
push
or
roll
jae
mov
jbe
pop
mov
aaa
push
xchg
xlat
lret
mov
jns
sub
push
fimuls
fdivrp
sarb
adc
sbb
or
jno
xchg
dec
sub
mov
push
into
or
fyl2xp1
icebp
cmp
mov
pop
jno
cmp
mov
imul
ja
push
jo
jbe
xchg
cmp
adc
int
lods
test
lods
pop
jmp
xchg
cs
mov
ret
and
push
lret
xor
mov
push
test
cmp
mov
lds
add
into
push
jecxz
inc
and
out
lcall
sbb
and
pop
ja
shrl
xorl
outsb
ss
in
xchg
inc
rcrl
int3
and
adc
inc
adc
xchg
xchg
mov
add
inc
out
xchg
pushf
cmpsb
inc
xchg
xchg
jo
xchg
lcall
jg
dec
nop
decb
mov
jo
mov
repz
cmpsb
ret
sahf
sbb
xchg
mov
out
mov
arpl
sbb
scas
fildl
rorb
lods
add
mov
pop
xor
enter
es
or
sub
sbb
push
push
stos
inc
sbb
scas
stc
mov
adc
or
adc
adc
scas
jle
mov
pop
jp
out
mov
mov
lea
popf
mov
stos
and
mov
and
pusha
pop
popf
inc
sub
jno
inc
mov
dec
test
pop
aas
addr16
popf
rcll
imul
cs
mov
daa
jg
pushf
pusha
call
data16
mov
insb
inc
push
add
mov
xorps
in
sahf
pushf
adc
add
mov
cmc
pop
imul
push
xchg
aas
or
ret
dec
sahf
cmc
dec
mov
into
pop
pop
div
clc
shll
sub
incb
aaa
sbb
xchg
loop
ror
sahf
hlt
ds
daa
mov
pushf
cmpsb
nop
mov
push
add
or
mov
fsts
add
lret
inc
jmp
inc
test
popf
or
mov
lods
enter
and
mov
shlb
insl
lahf
test
add
pusha
arpl
sbb
dec
mov
add
sub
lret
xlat
jno
les
push
pop
mov
push
data16
fldl
andl
mov
lret
xchg
movsb
cli
mov
inc
js
and
xor
push
adc
lds
sbbl
inc
cmp
sti
sub
add
add
mov
lcall
cmp
mov
cmc
cmpsb
js
test
dec
ss
insb
test
dec
sub
popf
inc
cmpsb
xor
sbb
jns
cmp
mov
in
scas
cmp
fld
call
inc
pop
std
dec
scas
ja
and
mov
adc
pop
fsubs
push
insb
mov
dec
pushf
popf
dec
mov
out
mov
out
cmpsl
pop
and
pop
rcrb
add
rcrl
scas
das
filds
or
orb
cld
ficomps
jns
mov
jl
dec
push
adc
xchg
cmp
out
add
mov
sbb
push
mov
mov
lods
loope
clc
mov
je
mov
das
repz
data16
inc
test
sub
pop
pop
jno
gs
push
xchg
and
xchg
ret
push
xchg
bound
push
popa
lahf
popa
inc
insl
cmp
and
inc
pusha
cmp
mov
filds
adc
adc
sub
jmp
loop
sbbb
and
and
jns
pop
cmp
fcomps
aam
inc
movsb
or
imul
aaa
or
cltd
jmp
nop
gs
xchg
jge
dec
imul
pushf
inc
cmp
mov
mov
sub
and
push
clc
aaa
scas
adc
fimull
stos
ret
mov
mov
enter
adc
jae
push
lds
movsb
enter
enter
jl
cmp
test
mov
jle
clc
mov
xchg
add
inc
lea
mov
cli
mov
ja
push
mov
push
shr
outsb
lods
inc
fcmove
adc
sahf
adc
xor
xchg
loop
xor
scas
loop
inc
push
cmp
sahf
jmp
orl
push
leave
push
push
mov
sbb
mov
iret
push
lahf
xor
loopne
jmp
pop
fwait
push
push
adc
sbb
push
push
aam
aam
mov
loope
mov
jmp
pop
xchg
xchg
xor
in
lret
sahf
nop
push
mov
in
addb
jmp
push
movsb
and
pop
mov
jo
addb
sarl
ja
mov
sub
sub
lret
and
mov
xchg
adcl
mov
and
divl
leave
jns
stos
pop
aas
lock
cld
xchg
sub
pop
xor
mov
sbb
out
push
xchg
sub
adc
fisubrl
scas
mov
js
lock
jnp
cmp
jl
sub
scas
popf
and
mov
into
mov
xor
cld
rcrb
cmp
or
aam
loopne
dec
push
lcall
xor
ret
cmp
int
es
jmp
push
dec
sbb
neg
xchg
inc
cmpsb
loope
xor
inc
mov
jb
imul
sub
push
pop
jecxz
cmp
shrl
les
dec
repnz
daa
lds
cmp
filds
lea
adc
cmpsl
data16
xchg
mov
adc
insb
jae
int
cs
mov
mov
mov
and
ret
cld
pop
mov
xor
addr16
push
rorl
stos
inc
hlt
fdivrs
dec
aad
mov
arpl
iret
lret
xchg
ljmp
movsl
jg
orl
adc
xchg
aam
add
aam
jle
testb
aas
pushl
fs
mov
inc
outsl
mov
dec
lds
idivl
and
daa
iret
jbe
jb
notb
sbb
daa
scas
dec
push
test
or
loop
xor
push
mov
fwait
in
out
mov
adc
or
jp
fdivrl
dec
sbb
adc
inc
movsl
orb
daa
adc
sbb
fsts
dec
cli
xor
mov
movsb
addr16
pop
pusha
pop
mov
jmp
out
cmp
outsl
push
loopne
xchg
in
loopne
cli
ja
fwait
orb
xchg
jno
mov
outsl
mov
in
lcall
loop
xorb
aad
js
mov
stos
mov
test
push
dec
outsl
addl
mov
sub
or
loope
cmp
mov
into
mov
ret
or
jne
xchg
xchg
in
or
push
rcrb
cltd
adc
std
movsb
jmp
scas
and
faddp
and
clts
pop
sub
lds
mov
jecxz
cli
or
mov
or
fnstsw
insl
push
data16
lods
jge
push
xchg
lds
aam
mov
dec
sti
add
jp
sub
call
xor
ja
fwait
cmc
fdivrs
clc
in
test
ret
push
in
cmp
inc
sbb
leave
push
mul
adc
jno
popf
xor
inc
les
ljmp
cwtl
je
sbb
or
aam
jb
jl
out
mov
jg
add
cmp
ja
loope
and
xchg
inc
daa
cmpb
loop
mov
mov
xor
xchg
inc
pusha
lea
mov
mov
inc
addr16
and
ja
aad
repz
or
fsub
and
out
sub
lahf
inc
dec
dec
in
enter
adc
push
orl
outsb
or
cwtl
push
adc
push
or
movsl
push
sbb
fs
cmp
loop
movsb
dec
mov
xor
in
or
arpl
stc
lods
int3
insb
xchg
lds
js
cmovnp
push
mov
sbb
stc
pop
cwtl
mov
in
jecxz
xchg
insb
sub
bound
mov
les
xchg
and
push
lea
pusha
mov
cwtl
add
mov
frstor
push
ds
pop
jae,pn
pop
fmuls
mov
ds
add
adc
push
push
test
movsb
dec
lods
or
add
movsl
mov
andl
xor
push
push
dec
les
in
dec
push
inc
jg
jl
insl
scas
dec
lock
aam
out
sbbb
jmp
in
ret
ljmp
mov
test
imulb
mov
movsl
sub
out
fimuls
jle
xor
shrl
jmp
aad
dec
imul
aaa
push
pop
es
sbb
shlb
nop
imulb
adc
lods
xchg
lret
jnp
cld
out
cld
lret
xchg
push
repnz
push
bound
push
inc
test
fstpt
in
mov
adc
jae
sub
stos
dec
xchg
mov
pop
aaa
lret
push
insb
jmp
faddl
ss
jg
stc
jns
push
lods
mov
or
mov
fistps
stos
orb
cmp
push
jo
push
nop
scas
or
sub
ja
insb
jge
in
cmp
push
mov
or
add
mov
dec
xchg
dec
and
je
pop
lds
and
dec
fcmovnbe
aam
or
cmp
dec
test
push
mov
push
push
pop
fcompl
cmp
lret
shrb
jl
cmpsb
sbb
sbb
sbb
sub
mov
xchg
xlat
xchg
add
roll
mov
faddl
out
iret
out
and
mov
pop
add
add
cmp
std
push
stc
jbe
test
adcl
xchg
lahf
cmp
adc
xor
in
cmpsl
mov
sub
mov
and
mov
add
out
xchg
imulb
mov
into
inc
adc
dec
popf
mov
fimuls
cmp
dec
push
loop
fisubs
add
rorl
movsl
stos
roll
pop
jo
push
inc
jae
int
mov
bound
mov
ss
mov
cmp
adc
pop
aad
push
adc
or
cltd
cmc
adc
in
sub
aam
push
and
cmp
daa
dec
fwait
xor
repnz
mov
push
dec
cmp
lds
xor
movsb
fildll
cmc
out
adc
cli
pop
jp
jmp
test
xchg
lea
sbb
jb
roll
repz
decl
clc
sub
jl
or
xchg
push
add
outsb
jge
mov
repz
mov
pop
dec
adc
dec
clc
dec
push
add
out
jmp
mov
ds
sahf
jne
iret
ja
lahf
xchg
push
shlb
popf
xchg
xor
gs
rcrl
add
jnp
jns
mov
aas
and
xchg
ss
dec
cmp
cmp
inc
xor
xor
loope
ss
out
mov
xchg
cld
std
in
fldt
jmp
imul
cwtl
arpl
jp
dec
inc
lds
adc
sbb
push
pop
dec
out
je
test
sub
add
add
scas
sbb
jmp
test
sbb
mov
push
push
fisttpl
lahf
jg
iret
push
dec
mov
jo
and
push
mov
divps
adc
out
in
in
or
jo
fldenv
test
jnp
sub
add
in
dec
leave
imull
mov
icebp
aad
pusha
in
sbb
lods
lret
xlat
test
sub
mov
add
inc
inc
sbb
aas
inc
and
dec
jp
sarl
pop
lods
jmp
lret
enter
scas
xorb
and
fiadds
shll
jbe
cmp
bsr
xchg
dec
or
push
lahf
test
inc
loop,pn
das
sub
mov
adc
mov
mov
dec
pop
inc
pop
or
shlb
jmp
mov
xor
aaa
out
xchg
mov
fbld
push
jl
cli
mov
outsb
arpl
xor
js
clc
repz
sbb
xchg
rcl
xlat
dec
mov
and
dec
data16
das
pop
inc
leave
push
sbb
leave
inc
dec
push
push
je
shlb
inc
lret
cmpsl
lea
in
in
sub
or
dec
idivb
jns
jo
or
xor
bound
rcrl
stos
test
arpl
add
add
mov
lods
mov
jge
push
push
sbb
sbb
and
inc
pop
cmp
dec
push
out
pop
hlt
inc
test
cli
push
jno
shlb
mov
push
inc
sbbl
adc
mov
inc
decl
mov
sbb
je
jp
int3
enter
cmp
das
sub
je
incb
jecxz
in
in
cltd
jns
push
inc
aam
and
dec
adc
enter
js
movsb
adc
sti
jecxz
sbb
pop
out
mov
sbb
sbb
aas
pop
jns
mov
push
xor
or
jne
popw
push
cwtl
adc
or
jno
mov
fdivs
xchg
add
lret
es
xchg
repz
fadd
mov
adc
aas
sub
xchg
push
or
pop
ret
sahf
cmp
mov
fsubr
mov
pop
cmp
shll
aas
repz
loopne
push
jb
push
sub
mov
pushf
addl
es
add
cld
popf
movsl
idivb
push
inc
jo
ss
mov
push
inc
imul
sahf
xorl
subl
outsl
ret
xchg
adc
mov
xchg
add
mov
sarb
lahf
jge
mov
aad
loopne
daa
in
enter
jbe
and
arpl
dec
rep
jb
jmp
aas
cmp
mov
enterw
test
out
add
xor
inc
pop
stos
cmpsl
or
jp
push
mov
cmc
add
and
out
xchg
repnz
mov
inc
shll
mov
jl
mov
insl
mov
mov
sbb
sub
bound
ds
and
push
jl
orl
lret
hlt
push
fldenv
fcoml
notb
dec
aas
mov
rcll
pop
cwtl
daa
bound
cmp
xor
xchg
ss
lcall
in
insl
sbb
mov
jb
fadd
shlb
sub
lret
les
fmuls
scas
mov
sub
fistps
and
jae
and
dec
cmp
rol
ficoml
pop
xorl
out
stc
repz
sti
movsl
dec
and
ljmp
mov
in
xchg
in
insb
fldl
cmp
repz
hlt
xor
push
mov
jle
and
xchg
arpl
ljmp
jg
sub
ss
dec
adc
pop
dec
sub
cmc
dec
test
pop
popf
sarb
aas
add
sarb
ds
enter
xor
sub
or
stc
les
dec
loope
es
in
sbb
push
bound
mov
sarl
mov
ret
repnz
imul
cmp
dec
lahf
adc
subl
fwait
mov
and
andb
mov
pop
or
jns
push
in
cmpsl
sub
ret
pop
cmpsb
cmp
jl
dec
aas
imul
fs
inc
fwait
cmp
cmp
jecxz
int3
scas
adc
rclb
mov
adc
push
lock
mov
adc
dec
push
mov
in
clc
pop
lea
imul
jl
daa
push
xor
ss
xor
pop
add
movsl
aad
push
adc
fucomp
pop
mov
es
cmc
movsl
inc
push
xchg
scas
mov
mov
aad
add
bound
std
dec
sbb
jmp
popa
aad
stos
inc
pop
xor
pop
pop
pop
xchg
mov
fadds
in
pushf
mov
lods
and
pop
sbb
iret
shl
push
pop
out
fiaddl
jno
jns
repnz
lahf
dec
outsl
mov
movb
and
orb
test
adc
push
sbb
add
cmpsb
xor
xor
pop
and
pop
adc
inc
aad
cld
jl
or
ljmp
jne
push
adc
inc
nop
insl
dec
scas
adc
jae
xchg
and
movsl
jae
or
pop
xchg
xchg
mov
mov
enter
and
rcll
popf
xor
push
cld
mov
ret
adc
gs
sbb
in
xor
ja
stc
pop
sarb
aas
jmp
jo
jmp
jb
lods
fsubp
shr
adc
outsb
inc
sti
std
fisttpll
cmp
cmp
lret
jg
lret
js
xor
fcmovnbe
cmp
mov
xor
leave
lcall
mov
mov
sbb
jle
shufps
or
mov
mov
dec
pop
or
adc
adc
pop
lds
jns
sub
mov
aad
test
stos
mov
sbb
mov
stc
xchg
mov
std
jbe
mov
les
fs
mov
pop
rcr
add
sub
outsb
adc
daa
in
jg
mov
adc
roll
mov
lds
ret
dec
fidivs
adc
pop
sbb
cltd
test
pavgw
cmp
mov
pop
cli
cmp
ret
das
pop
sahf
adc
xchg
mov
sbb
mov
ss
repnz
jnp
mov
adc
sti
xchg
es
sub
pop
push
sub
imul
jae
dec
popa
mov
or
push
jp
les
ret
scas
adc
clc
xchg
divb
or
out
bts
sbb
shll
pop
ds
mov
lea
lcall
sbb
lahf
cwtl
int3
popf
enter
outsl
push
cmp
pop
mov
in
mov
jmp
and
xchg
sub
mov
jae
lea
cmp
into
mov
sahf
pop
outsb
outsb
pop
lcall
imul
adc
sbb
sar
inc
or
stos
lds
stos
mov
mov
adc
mov
mov
pop
lods
pusha
jnp
sbb
cmp
enter
add
mov
cmc
aad
iret
jne
push
fsubrs
out
sub
or
or
xchg
lea
out
mov
test
lea
mov
in
or
out
and
jae
adc
in
jl
pop
and
stos
inc
cmp
repz
push
pop
adc
out
add
ljmp
and
imul
inc
lahf
push
mov
and
mov
imul
les
lods
ljmp
xchg
jmp
mov
dec
fwait
mov
sti
xchg
dec
lea
mov
dec
xor
dec
pop
sub
lcall
aad
mov
cld
incb
jae
and
stos
std
adc
dec
fisubrl
mov
ret
mov
sub
int
push
out
jge
add
ffree
mull
or
int3
sti
aas
mov
das
fs
mov
pop
nop
jb
push
sub
test
mov
jmp
xchg
movsb
leave
sub
fwait
insl
lret
aad
mov
sti
mov
clc
sti
xchg
lcall
fistps
push
sbb
popf
mov
fldl
jmp
xchg
adc
mov
xchg
les
jae
mov
push
inc
es
or
dec
mov
mov
rcrl
loope
inc
ret
rorl
or
pop
rcl
cmpsb
rcll
imul
outsl
mov
fmull
test
mov
jb
mov
scas
xchg
cmc
cmp
mov
movsl
cmc
jle
push
stos
sbb
fs
xchg
pop
sbb
out
pop
jne
shr
aas
xchg
cmpsb
dec
push
sbb
cmp
test
popa
and
js
jb
xchg
decb
adc
mov
xor
les
mov
fnstenv
sub
jb
pop
pop
sarl
in
jno
push
imul
dec
and
pop
xor
out
pcmpgtd
je
add
inc
inc
sub
xlat
leave
push
mov
lods
fsts
xor
cmc
sub
movl
mov
lret
push
cmp
loop
pop
insb
push
pop
int
or
imul
mov
dec
mov
xor
jns
sarb
sub
xchg
movups
imul
xchg
dec
dec
sbb
scas
push
pop
ljmpw
sbb
sbb
mov
sbb
xchg
push
mov
cwtl
pop
push
push
jg
pop
daa
lods
scas
out
jno
std
pushf
sbb
jbe
adc
add
sub
clc
add
xchg
cmc
mov
pop
and
mov
dec
stc
lret
idivl
pop
mov
popa
xchg
leave
mov
sarl
mov
js
jo
jg,pt
adc
inc
mov
movb
scas
dec
mov
lods
in
mov
jns
loope
xor
pop
pop
inc
out
aaa
or
lea
fisubrl
mov
pop
pusha
adc
xor
fnstenv
movsb
xor
push
sbb
xchg
jl
push
xor
ficoml
mov
or
or
jge
jb
xchg
jl
and
jns
hlt
cs
insl
rol
dec
test
pop
adc
mov
pop
sbb
push
inc
cmc
xchg
loope
insl
iret
lods
je
jle
loop
lods
cmp
clc
mov
xchg
mov
fnstenv
ror
sub
test
inc
or
adc
xor
or
pop
mov
bound
popa
push
out
decl
lar
mov
mov
inc
mov
lods
stos
shll
jns
ret
jl
hlt
pusha
test
clc
dec
adc
mov
pushl
pusha
test
repnz
adc
pop
jae
mov
or
jl
mov
in
or
mov
push
lret
adc
mov
inc
dec
pop
int3
inc
into
mov
out
fs
sub
outsl
dec
daa
das
mov
and
cmpsl
jp
addr16
scas
dec
xor
sub
pop
adc
mov
insl
jg
lret
clc
out
adc
scas
cld
sbb
repnz
pop
mov
jg
test
jp
adc
pop
nop
test
hlt
xor
ss
call
adc
rcrl
pop
push
cmp
sbb
xchg
das
stc
dec
mov
add
lods
pop
jecxz
ds
pop
push
les
add
pop
pop
or
je
cs
inc
add
cli
int
adc
adc
and
es
sbb
jp
imul
and
or
pop
add
xchg
add
mov
push
inc
jb
inc
push
xor
adc
ja
pop
insl
jge
pop
mov
stos
jno
push
push
dec
jmp
outsb
xchg
add
jl
and
mov
cmovns
cmpsl
icebp
ljmp
lret
nop
mov
and
jnp,pn
sar
or
sub
imul
mov
divl
aam
cs
mov
dec
clc
and
sti
imul
stos
aad
outsl
xchg
xchg
test
adc
lret
sbb
in
aam
dec
mov
jg
out
mov
pop
inc
scas
mov
cld
fs
sbb
test
jnp
adc
sub
bound
cmp
xor
jecxz
add
nop
pop
dec
sub
push
pop
mov
out
inc
mov
mov
mov
lcall
rorb
mov
sbb
dec
and
stos
inc
out
dec
stc
outsb
leave
xor
inc
cmp
xchg
lock
or
xchg
int3
lea
outsb
add
add
and
mov
imul
es
mov
cmp
or
push
into
cmp
dec
xchg
and
popf
std
jl
mov
push
call
push
test
dec
in
sbbl
pop
jne
mov
movb
repz
aad
aaa
xor
call
rorl
aam
fs
int
xchg
jecxz
es
lea
inc
jmp
sahf
mov
xchg
and
js
pop
push
xor
scas
outsb
in
xchg
dec
dec
shlb
test
addl
jle
cld
xchg
out
jecxz,pt
bound
cmp
add
jno
cmp
mov
push
pop
xlat
mov
mov
scas
in
js
mov
push
and
enter
push
sbb
jmp
xchg
mov
xchg
movsl
sbb
gs
je
lea
leave
xchg
dec
and
adc
sbb
lcall
mov
mov
sete
out
cs
cmp
dec
mov
lea
sahf
adc
inc
ss
xchg
and
call
xchg
xor
pushf
xchg
sbb
adc
adc
jno
push
divl
pop
sub
and
es
mov
cli
fsubrl
or
jle
push
imul
aam
push
into
jle
inc
lock
sub
jmp
pop
int3
pushl
mov
ds
and
fcomip
data16
or
adc
xchg
mov
jns
sub
adcb
inc
cmp
int3
mov
jo
push
fdivrs
fs
and
orb
ret
out
pop
rcll
xor
sbb
aaa
dec
fidivl
ss
popa
mov
out
push
fs
or
sahf
lahf
repz
loope
jae
dec
out
fcoms
xor
mov
hlt
push
js
dec
and
lock
cmp
push
sbb
cmp
jbe
icebp
je
inc
call
add
push
jg
mov
je
imul
lcall
jmp
icebp
add
repnz
xor
loope
js
inc
dec
popl
out
fisubrs
sub
nop
sbb
xor
jl
xchg
fidivrl
fidivl
cld
stos
inc
jns
add
sub
xchg
cltd
pop
popa
mov
jl
mov
push
push
in
sbb
in
vmulpd
out
jp
popf
xor
jne
movsl
xlat
fcoml
mov
mov
inc
imul
and
stc
or
dec
mov
aad
mov
movsb
cmpsl
mov
fwait
ret
sbb
jno
notl
outsl
xor
popa
inc
cmc
sbb
mov
add
sub
and
rorl
icebp
gs
xchg
mov
xchg
nop
testb
orl
sbb
cmp
sahf
adc
pop
xchg
sub
inc
mov
roll
out
sub
movsl
arpl
sub
mov
jo
pop
push
dec
stc
mov
cmc
fucomip
imul
xor
movsl
push
in
dec
data16
stos
inc
sub
or
xlat
jmp
adc
pop
mov
and
rcr
mov
inc
add
sub
or
es
ss
inc
cli
pop
mov
mulb
xor
clc
imul
mov
fadds
push
movsl
inc
sbb
es
jge
leave
test
jnp
fldl
xor
cmp
sbbl
cwtl
icebp
pop
cmpsb
pop
sub
jg
dec
sti
adc
adc
cmp
xor
lea
mov
or
cmp
pop
jne
fwait
add
mov
loopne
mov
daa
sub
movl
push
scas
sub
mov
in
sub
ds
xchg
dec
pop
dec
fwait
jne
dec
ds
mov
stc
sub
or
pop
out
sbb
jns
arpl
pop
and
popf
std
loop
pop
testb
lock
push
mov
add
mov
push
lods
dec
imul
sbb
mov
inc
inc
xchg
insb
mov
in
xchg
daa
jbe
in
outsl
movsl
add
aaa
jns
mov
shlb
xchg
fmull
pop
addr16
loop
xor
ficoml
xorb
popf
jecxz
and
ljmp
push
inc
xor
inc
cltd
push
dec
and
repnz
xchg
lods
daa
cmp
dec
cmp
cmp
jp
add
cmpl
into
int3
ret
jmp
cmp
insl
push
adc
iret
outsl
mov
and
mov
fstps
dec
add
push
pop
xor
fldcw
inc
jbe
mov
jl
aam
jbe
and
clc
mov
xchg
pop
lret
ljmp
out
or
sub
mov
xchg
pop
repz
es
pop
dec
mov
cmp
shl
mov
icebp
fisubl
jmp
cmp
fcoms
fdivl
test
cmpsl
fwait
pop
adc
jb
in
pop
sarl
jns
jo
and
negl
sub
jo
push
jae
push
fcmovnb
out
mov
test
jbe
sbb
je
push
aam
dec
ja
and
cld
xchg
imul
mov
xor
xchg
rorb
mov
lods
mov
sbb
adc
mov
enter
push
fstpl
cmpsl
push
filds
into
push
or
dec
inc
std
cmpsl
sub
jl
mov
mov
xor
cli
in
mov
sub
add
aaa
mov
movsl
stos
push
adc
push
in
js
xchg
out
dec
sbb
lock
pop
pop
mov
fimull
rorl
iret
pop
fnsave
orb
mov
push
jle
shrb
mov
mov
lcall
cs
int3
cmp
mov
or
int
push
bound
pop
cli
aad
cmp
clc
je
scas
stos
push
cld
pop
in
rolb
aad
aaa
sbb
mov
aad
push
ja
lea
add
jae
loop
pop
lock
fwait
in
loopne
push
and
push
aad
mov
jle
sbb
xchg
in
jge
xlat
add
scas
cld
xlat
int
xor
int
xor
in
call
in
xchg
or
inc
lea
add
mov
mov
imul
aaa
pop
mov
subl
je
insb
sub
ret
repz
cmp
rcrb
or
push
icebp
mov
jmp
mov
cmp
jb
cmp
sbb
sub
cmpsl
and
xlat
stc
enter
mov
negb
gs
push
add
popa
add
loop
fsub
and
add
mov
clc
inc
jecxz
dec
lods
repz
ret
sti
pop
sub
push
push
mov
cli
int
repz
mov
movsl
sbb
push
add
fcomp
dec
add
inc
das
movsl
incl
clc
aam
jo
push
xchg
addr16
jns
pusha
insl
xchg
jle
xchg
or
mov
dec
add
std
cmp
mov
adc
push
cmpb
jb
mov
xor
adc
xchg
xchg
cmpsb
lcall
or
out
and
stos
cmpsb
fs
movl
out
arpl
gs
imul
mov
mov
sti
popf
sbb
iret
icebp
xor
fisubl
addr16
sbbb
pop
inc
lret
mov
or
movsb
sahf
ret
inc
shrl
add
inc
sbb
mov
pop
pop
jl
jne
mov
add
hlt
ljmp
pop
aas
and
loopne
pop
out
imul
lea
dec
xor
sbb
loop
sub
imul
inc
mov
xchg
cli
lods
push
cli
aas
mov
stos
mov
cmp
nop
lods
jae
push
mov
ds
xchg
and
jmp
adc
inc
pop
ljmp
lods
pop
cwtl
sbb
outsl
cld
jno
add
repz
push
xchg
xchg
cmpsl
sub
pusha
imul
ljmp
inc
sub
sbb
outsl
lcall
xor
dec
jmp
clc
ds
es
or
cmp
pop
push
xchg
inc
insb
cs
lahf
shrb
mov
cmpb
shrl
fimuls
mov
fbld
fisttps
lea
leave
sbb
in
inc
fidivs
or
cmpsb
das
enter
xchg
sub
adc
scas
jns
pop
test
int
or
clc
sbb
clc
mov
and
movsb
int
dec
pop
sub
ficoml
push
imulb
pop
pop
nop
jg
rorl
out
fdivs
add
xchg
mov
jecxz
in
cmp
mov
clc
dec
mov
dec
mov
mov
fcoml
int3
push
imulb
test
sub
add
sub
jae
or
test
xchg
pmaxsw
xor
ror
movsb
fisttpl
and
xorb
subl
pop
or
mov
outsl
jle
mov
sahf
inc
hlt
vshufps
rcrl
roll
xlat
mov
movsb
clc
cwtl
hlt
xchg
daa
sub
push
push
adc
xorl
loope
or
and
int
out
repz
idiv
fsubrs
mov
jmp
pop
sub
ljmp
inc
sahf
icebp
add
fsubs
sub
push
lretw
mov
xchg
mov
daa
fcompl
and
mov
jmp
fsubs
add
jmp
movsb
clc
adc
mov
decl
rep
adc
cwtl
dec
jns
aaa
ret
ficomps
jns,pn
pushf
mov
push
push
clc
cmc
xor
pop
ja
enter
dec
arpl
out
push
icebp
mov
dec
out
aam
aam
repnz
jmp
in
add
insl
sarb
test
pop
es
add
jbe
pop
adc
loop
cmp
loop
incb
movsl
xor
mov
adc
add
inc
fcompl
push
mov
xchg
repz
pop
mov
push
sbb
xlat
jle
int
data16
lock
imul
xor
sahf
imull
or
repz
loopne
unpcklps
push
pop
mov
enter
or
xchg
xor
jmp
aaa
std
cmp
jno
aas
jns
mov
stc
addl
xchg
mov
adc
iret
sbb
imul
jge
outsl
adc
dec
fadd
mov
mov
inc
repz
ljmp
push
xchg
ret
mov
lret
lahf
shrb
movsl
sbb
int3
sbb
inc
xor
lods
cld
xor
lret
scas
mov
dec
enterw
in
cmovg
jge
adc
fnstcw
jg
dec
pop
jg
test
popf
test
inc
push
push
adc
xchg
shll
iret
pop
mov
insl
mov
pusha
or
sub
sbb
idivb
dec
inc
lahf
lods
sbb
jmp
push
push
call
dec
push
sbb
pop
pop
ja
bound
push
add
scas
stos
popf
not
mov
mov
sub
scas
jb
xor
out
and
in
or
stos
scas
in
push
dec
roll
and
jp
sbb
mov
lods
sbb
add
push
in
das
jbe
test
dec
mov
xor
add
mov
bound
jnp
mov
pop
aas
sub
cmp
aad
into
scas
sahf
inc
mov
sub
cwtl
push
mov
addl
xchg
xlat
mov
loope
stos
mov
pop
fmull
mov
outsl
adc
and
or
jg
div
fs
jnp
leave
mov
inc
xchg
dec
cwtl
fs
sub
mov
xchg
and
loopne
hlt
xchg
sti
imul
jmp
cmp
cmp
mov
mull
mov
loope
mov
push
lcall
in
pusha
dec
in
mov
cltd
sub
std
aas
lahf
and
sub
jmp
lret
test
pop
in
jmp
mov
inc
clc
insb
push
cltd
repz
sub
movsb
stos
outsl
jno
cwtl
popa
pushf
test
sbb
mov
movq
lds
mov
stc
mov
stc
pushf
cmpsb
pop
sub
cwtl
cwtl
sub
lret
jp
pop
cmc
push
cli
aas
cmp
xor
xor
adc
jo
cmovb
adc
xor
or
push
xchg
push
xchg
loopne
out
into
mov
cmp
mov
mov
ljmp
addr16
hlt
jne
mov
iret
enter
sub
mov
push
mov
fistpll
loop
inc
pop
push
mov
paddsw
cmpsl
js
dec
mov
xor
lock
sub
cli
shlb
cmp
jg
jae
fwait
xchg
faddl
mov
jmp
xor
jg
dec
insl
insb
pop
fwait
in
xor
xchg
fucomp
or
nop
mov
loope
dec
in
testl
dec
pop
jl
lods
mov
mov
cmp
movsl
das
lock
lds
popa
jmp
in
fmul
andb
push
cld
inc
cli
mov
sahf
jle
std
cmp
sbb
cmp
lea
stos
test
cwtl
sub
orl
cltd
test
xchg
test
fmuls
ja
int
jne
pop
cld
mov
and
cmp
loop
rcrb
xlat
insb
insl
mov
test
rorl
out
jo
jl
mov
test
pop
in
and
shlb
xchg
sbb
inc
inc
shl
adc
aas
xchg
ret
pop
or
pop
jns
pop
loope
repnz
sti
or
xchg
adc
mov
lods
cmpsl
mov
bound
inc
in
pop
cmp
xor
mov
jl
dec
mov
lds
wbinvd
cmp
cld
sbb
mov
push
jge
scas
loopne
repz
mov
lock
mov
adc
lods
nop
sahf
stos
xchg
push
or
fcoml
daa
insl
insl
inc
push
pushf
nop
fistpl
xchg
xchg
fsubrs
dec
add
stos
repnz
mov
shlb
ficomps
call
fnsave
cs
sbb
ja
ret
mov
sahf
std
test
daa
push
movb
movsl
mov
mov
push
in
mov
lcall
jb
and
data16
xor
adc
cmpsl
dec
icebp
pop
subl
clc
mov
push
movsl
xor
push
or
mov
lock
out
mov
mov
imul
and
and
imul
out
ds
and
dec
roll
push
xchg
cmp
roll
addr16
inc
and
call
push
decl
popa
add
inc
cwtl
into
das
mov
cmp
lods
icebp
jb,pt
cmp
mov
sub
into
das
sbb
mov
lcall
outsb
mov
ret
cmp
mov
jnp
adc
aad
das
das
test
mov
xor
cmp
or
fcomps
cmpsl
ss
popf
inc
inc
lock
cmp
lea
cltd
out
xor
xor
shlb
addr16
rcll
and
icebp
out
aas
ret
xchg
loopne
mov
mov
daa
add
jecxz
pop
xor
fists
pop
data16
imull
inc
aaa
bnd
rcrl
push
mov
cmp
jg
sti
ds
xor
push
mov
sub
aad
rclb
popf
jg
pushf
stc
mov
or
idiv
xchg
xchg
movsl
dec
fs
ljmp
jmp
fdivrl
std
out
lret
push
adc
sbb
push
ss
das
fildll
add
jle
in
rolb
mov
insb
xchg
push
jns
sub
test
ficoms
push
xor
shr
push
sub
arpl
dec
jne
mov
pop
fstpt
aaa
add
jmp
dec
mov
das
mov
sbb
mov
cs
nop
xchg
popa
push
cmp
xchg
sub
mov
adc
lock
adc
push
push
sbb
push
rcrb
adc
mov
inc
mov
mov
and
and
loope
push
sti
scas
out
popa
in
mov
jge
pop
lods
loope
push
add
out
jmp
pop
sbb
rcll
insb
xchg
cmpsl
mov
js
mov
imul
aam
jne
or
and
lret
push
xor
es
or
jge
sar
repnz
mov
arpl
das
les
pop
push
mov
and
sti
mov
and
stos
in
mov
sub
jge
cli
xor
fistpl
push
inc
xor
add
movsb
lds
insl
shll
xchg
xor
pop
push
imul
mov
int
adc
dec
adc
das
mov
call
jl
scas
xor
lods
jmp
leave
add
je
stc
cmp
stos
dec
or
popa
adc
mov
adc
dec
enter
push
je
push
cltd
add
insb
dec
dec
push
jle
inc
pusha
js
insl
lahf
mov
pushf
cmp
push
jbe
fs
pop
out
mov
xlat
mov
lods
dec
test
cld
pop
add
adc
btc
out
aas
inc
mov
mov
lret
insb
sub
cmc
daa
sbb
sti
in
mov
cmp
es
or
orb
insl
add
jne
hlt
pop
dec
fnstenv
sub
mov
add
cmp
inc
call
std
mov
push
add
pushf
repnz
decb
loopne
stos
push
dec
iret
inc
js
mov
lcall
je
test
mov
jl
jle
out
stos
fs
sub
and
fidivrs
xchg
push
sub
dec
cmpsl
and
pop
in
mov
rcl
xchg
pop
inc
das
stos
cmp
mov
into
xchg
jbe
popf
stos
mov
test
cmp
enter
and
dec
fisubs
inc
hlt
cmp
rcrb
fldt
cld
sub
cli
sti
sbb
cmp
extrq
jns
fs
sbb
cli
inc
or
arpl
or
or
jmp
cld
add
and
jge
sti
rol
mov
cmp
iret
lcall
mov
cs
pushf
lret
xor
cmp
mov
dec
lret
or
jne
and
sahf
ret
in
icebp
mov
and
imul
cwtl
cmp
mov
mov
cs
sbb
arpl
sbb
lcall
mov
sub
inc
imul
mov
pop
fcoml
loop
jg
clc
hlt
movsl
decb
stc
cs
jo
jmp
dec
or
sub
and
jns
lods
inc
scas
movsb
cmpsb
cmc
push
cmpsl
aam
dec
xchg
mov
aad
cmpsl
lahf
out
jg
outsb
pop
fldl
cmp
fwait
xchg
jle
jle
in
sub
into
cmpsb
arpl
mov
outsl
inc
imull
mov
inc
test
adc
lock
pop
mov
sbb
cmp
aas
pop
sbbb
fistpll
and
nop
pop
leave
and
adc
mov
fcoms
sub
xor
clc
std
daa
insb
inc
int3
xor
and
jns
sbb
mov
fidivrs
jae
rcr
aam
fisttpll
inc
pushf
push
into
xor
aam
fadds
mov
imul
call
jb
inc
jno
dec
inc
sub
sbb
mov
test
test
pop
flds
cli
sar
fidivs
push
pushf
and
mov
cs
inc
inc
es
lcall
insb
call
popf
inc
mov
in
int3
adc
dec
jmp
cmp
lahf
ret
scas
dec
mov
or
call
mov
dec
push
mov
cmpsl
mov
xchg
fadd
cmp
in
xchg
outsl
pushf
rorb
xor
pop
arpl
mov
push
push
arpl
mov
push
push
cmp
ror
xchg
jmp
popa
inc
cmpl
testb
mull
loope
xor
xchg
jae
mov
adc
or
fs
inc
test
push
test
loop
in
in
setne
xchg
test
insb
popf
and
imul
arpl
jp
sub
imul
sub
hlt
add
mov
aad
xor
cmpsb
cmp
mov
cs
cltd
enter
lock
xor
pop
add
dec
out
neg
pop
xor
out
rcrl
xchg
adc
mov
pop
jo
scas
sbb
jecxz
outsl
test
mov
inc
jae
test
push
bound
adc
addl
jo
cmp
xchg
push
js
mov
sbb
push
jae,pn
xlat
ret
dec
xchg
mov
test
test
jmp
push
mov
test
mov
icebp
xor
add
inc
outsl
out
icebp
in
xor
adc
push
cmp
jb
pop
mov
arpl
or
and
adc
cmpsl
leave
stos
dec
cmpb
shrl
mov
dec
aaa
movsl
jns
add
or
jg
jmp
sbb
imul
xchg
pop
mov
pop
mov
aas
or
push
pop
cmp
xchg
ljmp
add
pop
aad
js
mov
sub
or
sahf
jb
xor
mov
or
sti
aas
pop
adc
mov
scas
adc
ja
xor
xor
adc
push
add
stc
sbb
shll
mov
jo
sub
dec
and
xchg
inc
popf
xchg
lcall
add
and
add
xchg
fmulp
cmpsl
movsb
add
call
push
repnz
add
out
xor
pop
sbb
sbbb
lock
cwtl
inc
push
arpl
cmc
outsl
outsb
mov
pop
mov
fsubrl
jle
push
in
dec
pop
loop
and
jg
push
testb
cmpsl
xlat
add
ret
and
mov
mulb
movb
out
jne
sub
or
or
jle
mov
xchg
dec
push
adc
cmp
cmpsl
push
das
cs
push
jae
push
ss
rolb
push
jne
jne
mov
loope
scas
and
jb
std
outsl
and
add
inc
xor
jno
enter
mov
cli
xor
cmp
xchg
shlb
add
stos
addr16
sbb
pushf
pop
fsubrl
pop
mov
mov
enterw
xor
movsb
mov
xor
push
cmp
idiv
imul
lcall
xchg
push
aam
pop
dec
sbb
xchg
or
xchg
daa
pop
pushf
push
push
xchg
inc
cmp
stos
xlat
pop
popf
test
aas
or
pop
cmpsl
jl
adc
fisttpl
call
or
in
fld
or
mov
fucom
stos
cmp
sarb
xchg
sahf
sti
ss
adc
pop
dec
adc
repnz
jle
sbb
xor
jge
jae
cmpsl
stos
outsb
adc
sbb
mov
or
adc
inc
enter
cwtl
add
out
mov
sub
pop
jo
dec
test
aad
dec
adc
shr
dec
pop
iret
jmp
mov
mov
jl
arpl
cltd
loope
in
cmp
out
das
mov
lahf
push
sbb
test
pop
xlat
push
mov
pop
sbb
scas
adc
sub
inc
mull
ljmp
mov
dec
test
xor
add
popf
pop
or
iret
jecxz
pop
lods
sub
insb
inc
mov
pop
jo
jb
lcall
je
xchg
out
mov
repz
or
mov
adc
sbb
sub
dec
jp
xor
mov
pop
lea
mov
push
lahf
das
fwait
sub
sub
std
out
pop
xchg
pop
dec
lahf
xor
jmp
mov
jbe
mov
leave
fisttps
xor
scas
xor
ret
mov
cld
dec
cli
stc
popf
dec
out
lret
jecxz
pop
pop
fisttpll
or
jecxz
clc
test
jae
xchg
iret
decb
pop
into
sbb
dec
sahf
xchg
push
add
movsl
add
and
pop
jmp
sub
mov
push
add
int3
and
push
pushf
mov
push
pop
jae
ds
shlb
lock
stc
out
jb
out
pop
scas
aad
lret
mov
shll
xchg
jp
ds
push
or
cmpb
imul
repnz
jno
daa
outsb
data16
lahf
inc
stc
loop
and
pusha
jmp
sbb
scas
and
pop
fs
arpl
mov
shlb
ret
inc
mov
cli
sub
push
ret
clc
mov
loope
jb
mov
fiaddl
lea
cwtl
push
test
popa
and
dec
and
mov
es
cmp
or
lock
inc
mov
lret
outsl
jbe
stos
jnp
push
jnp
mov
inc
fiaddl
mov
sub
test
stc
add
fwait
cmpl
fld
outsb
dec
arpl
jp
mov
pop
cld
sub
out
mov
and
xor
nop
cmp
sub
or
bnd
jno
jp
push
je
dec
les
adc
jae
jo
fadds
jl
loope
fstl
xchg
or
mov
or
lock
rorl
push
cli
shll
test
mov
call
stos
icebp
js
lods
andl
es
mov
add
fs
shlb
cwtl
inc
dec
outsb
loop
movsb
mov
sub
scas
leave
xor
setl
lods
pop
sbb
out
sbb
sti
xorb
cmpsl
inc
pop
xchg
mov
sub
int3
out
mov
mov
sbb
cmp
cmp
cltd
js
mov
inc
imul
popf
lahf
inc
and
jp
pop
movsb
xchg
outsl
loope
jnp
sbb
push
xchg
mov
push
idiv
cltd
adc
sub
xchg
clc
subl
sbb
xchg
and
xchg
mov
mov
sbb
cmp
jmp
mov
fdivrs
imul
in
inc
jne
out
fnstenv
dec
subl
ja
pop
jl
negb
cmp
in
jmp
mov
insb
push
pop
das
mov
dec
rcr
popa
xor
jle
xor
push
add
or
out
push
sarl
inc
jno
stc
movsb
jg
in
pop
lods
or
jnp
lds
lea
lds
jl
sbb
xchg
push
fisubrs
cmp
test
xor
pop
mov
mov
insl
in
jmp
lret
movl
cmp
pop
sub
in
lret
or
sahf
pushf
jmp
sub
adc
jnp
mov
ds
push
les
xchg
lret
rorb
fbld
mov
mov
mov
adc
mov
pop
fsts
pop
out
xchg
mov
je
cmpsb
popf
cltd
aad
add
stos
cmp
popa
fnsave
and
inc
das
inc
cwtl
sti
or
xlat
testb
pop
add
mov
in
lcall
jmp
push
popf
cs
ja
pop
jb
into
jecxz
outsl
cmp
mov
aaa
pop
push
cmp
pop
pop
lcall
test
scas
mov
rolb
add
cmp
bound
int
into
add
addl
test
inc
loop
xor
mov
xor
or
sahf
ljmp
into
leave
pushf
and
add
or
jns
lea
push
push
repnz
xchg
pop
fiaddl
test
add
inc
sbb
pop
out
and
cmpsl
jbe
aad
arpl
xor
loope
std
imul
xchg
dec
inc
cltd
negl
sbb
iret
cltd
and
clc
sahf
and
int
mov
cmp
inc
push
adc
sub
and
or
aaa
and
pop
in
aaa
jecxz
cmc
jae
sbb
lods
sub
sbb
cmp
xchg
nop
roll
popf
daa
int
int3
cmc
xor
es
push
jno
xor
loop
ljmp
in
scas
roll
loop
lds
xchg
or
mov
imul
sub
test
bound
js
push
push
mov
push
sti
jae
jmp
pop
fxtract
test
xor
fsin
cmp
enter
mov
scas
addb
adc
lea
mov
in
mov
addr16
fwait
out
bound
sarl
cli
mov
sub
push
sbbb
mov
cmp
mov
xchg
and
lret
inc
adc
or
ret
lea
insl
cmp
imulb
les
sbbl
gs
sti
mov
in
or
lods
mov
or
aad
sub
push
addr16
push
adc
lea
dec
dec
pushf
loop
hlt
mov
mov
dec
mov
fmul
negl
mov
shlb
lret
mov
jp
sahf
fnstcw
cwtl
sti
out
dec
jecxz
sub
or
clc
cwtl
dec
test
inc
sub
shrl
sbb
jno
jnp
push
adc
jb
xchg
jmp
clc
les
add
mov
stos
movsl
rorb
xor
pop
inc
mov
mov
inc
cld
daa
lds
jmp
dec
pusha
in
mov
mov
xchg
dec
sbb
ret
daa
xchg
mov
and
pop
mov
int3
dec
cmpsb
cmpsb
cmpb
jae
cmp
xor
push
mov
jno
sub
inc
imul
stc
clc
aaa
out
add
jmp
fldenv
aam
cmp
mov
ret
sbb
sti
xor
mov
jle
daa
ficoml
pusha
mov
nop
pop
push
adc
imul
nop
aad
jbe
fdiv
cmp
mov
pushfw
cmp
inc
pop
cmp
jecxz
xchg
mov
push
sbb
call
mov
add
enter
add
loop
xor
addl
push
jb
sahf
shlb
cmpsl
inc
jle
mov
jns
arpl
jne
scas
xchg
xchg
xchg
mov
and
andl
mov
inc
rclb
aas
cmp
pop
test
mov
cmp
xchg
data16
pop
add
inc
lret
cmp
leave
push
rcll
cmc
shll
mov
xchg
bnd
jbe
sbb
lret
lods
jns
stc
or
add
in
daa
rorb
dec
cmp
cmp
add
adc
test
int
popf
mov
push
bound
mov
insb
decb
arpl
adc
mov
icebp
fmul
pop
cmp
ret
push
mov
push
xlat
es
call
test
xor
ja
push
ret
add
push
fwait
mov
add
fcmovbe
negb
dec
xor
sbb
ret
add
cmp
sub
cmpsl
gs
adc
out
or
fsubr
into
loope
or
scas
sbb
push
sbbb
mov
cmp
jl
cltd
xchg
dec
test
xor
frstor
or
push
sbb
mov
in
add
lcall
pop
and
bound
dec
push
aad
movsb
push
divb
nop
cwtl
into
fwait
sti
or
or
sub
shlb
clc
mov
stos
imull
lret
test
imul
mov
lret
adc
mov
lret
pop
insl
sub
mov
xor
decl
dec
cmp
fwait
add
into
push
jp
out
fsub
pusha
and
mov
xor
jge
xchg
push
push
dec
cli
ds
std
jge
xchg
push
mov
push
inc
sub
ror
mov
jne
popa
lcall
jne
sarb
push
jle
mov
arpl
xor
das
aaa
or
sahf
xor
shrb
cwtl
cmp
fwait
mov
fisubl
inc
mov
sbb
mov
mov
int3
test
subl
fildll
jge
and
sbb
push
pop
daa
ret
mov
pushf
aad
add
cmp
push
test
jae
fildll
sub
or
pop
xor
test
scas
cmp
shll
les
iret
inc
inc
pusha
repz
mov
inc
dec
out
sbb
xorl
or
sub
icebp
lret
jle
push
int
inc
fmuls
xchg
xlat
mov
cmpsb
and
ficompl
clc
test
hlt
or
dec
enter
ficomps
cmp
sbb
mov
fadd
je
shrb
in
mov
mov
sbb
xchg
in
mov
jae
and
shlb
cld
ds
dec
sti
rcll
cmpsl
or
scas
pop
push
xchg
pop
mov
jo
xlat
sub
pop
mov
xchg
ror
jnp
push
stc
insb
test
push
mov
insb
lock
cmp
add
xor
sbb
cmc
add
aaa
push
mov
les
mov
fnstcw
cs
lret
frstor
dec
rcrl
cmp
jmp
jae
push
mov
mov
and
jb
adc
aaa
imul
push
mov
or
and
add
mov
test
scas
in
aaa
in
sbb
inc
data16
lea
pop
aaa
add
ja
int3
or
data16
cmpb
or
xor
cmp
out
mov
adc
mov
add
fistpl
sahf
inc
push
sub
mov
dec
sahf
cmp
inc
arpl
cmc
and
jmp
repnz
into
xor
test
mov
sti
xor
stc
adc
ljmp
and
sbb
hlt
inc
ljmp
inc
gs
sbb
inc
sub
cmp
xchg
pop
inc
scas
lcall
test
aaa
dec
mov
mov
cmp
into
jno
lahf
sub
out
shlb
scas
pushf
repz
jb
shr
into
push
ja
cmp
dec
pop
out
adc
loop
jb
into
or
mov
aaa
xor
inc
in
xlat
add
xchg
ljmp
sbb
inc
sub
sbb
mov
inc
cmp
inc
pop
popf
scas
ja
push
and
repnz
cmp
xor
jns
rol
lea
push
movb
dec
pop
inc
pop
mov
sahf
fs
sbbb
sarl
fisttpl
push
cmp
inc
sub
push
jg
std
mov
pop
loope
scas
leave
xor
add
jle
inc
inc
mov
enter
aad
inc
push
mov
fs
mov
imull
popf
cmp
mov
fwait
in
adc
sbb
adc
jbe
fwait
out
xchg
xchg
xor
fstps
cs
stos
mov
aas
or
cmc
fidivrs
dec
xor
fdivr
fdivs
hlt
inc
mov
adc
out
jbe
and
repnz
adc
inc
bound
or
inc
scas
outsb
xchg
mov
and
mov
repz
sti
cltd
fs
push
push
scas
pop
inc
add
lds
in
xor
pushf
addb
cmp
sbb
int
fsubrp
sbb
or
mov
out
add
in
mov
lock
xor
jbe
sarb
xor
or
aad
fdivrl
flds
inc
enter
nop
hlt
shlb
movsl
jne
ja
or
inc
dec
or
push
sub
ja
sahf
jno
add
sbb
or
mov
movsb
jl
jo
and
int3
push
add
pmuludq
das
xchg
stc
leave
out
mov
add
jbe
aad
inc
push
jo
push
cmp
es
sub
ret
mov
pop
imul
in
sbb
imul
cmp
and
inc
inc
test
mov
pop
imul
jle
not
jne
daa
out
push
hlt
mov
jle
sbb
sub
dec
shlb
cmp
testl
aaa
mov
jae
mov
outsb
insl
rolb
mov
jae
xchg
lock
jmp
nop
popf
pop
insb
and
popf
ret
fbld
fwait
loopne
shrl
sbb
into
sub
inc
fdivs
sbb
add
js
shlb
movsl
and
jae
or
imul
aas
repnz
subl
or
adcb
mov
and
push
mov
lcall
stc
loopne
arpl
lcall
rcrb
and
int
je
addb
xor
arpl
sbb
mov
xchg
or
cmp
adc
ja
ljmp
jae
out
rcll
jo
mov
fisubrs
push
fisttpl
sbb
sti
cmp
adc
pop
adc
sub
ficomps
mov
in
cwtl
arpl
icebp
inc
and
dec
xor
out
dec
add
subb
inc
push
data16
cs
int
data16
xchg
sub
inc
test
es
fistps
adc
shl
sbb
jge
jnp
icebp
mov
and
into
inc
cs
and
dec
das
mov
push
fs
jb
lgs
push
fldt
xchg
les
mov
mov
push
jne
pop
mov
cmp
in
in
mov
xchg
divl
mov
test
xor
jmp
mov
ja
inc
adc
repnz
or
sub
sti
pushf
mov
push
or
fmul
push
scas
js
cmp
xlat
test
insb
adc
rclb
mov
cmpsl
mov
into
or
mov
mov
cmpl
xor
test
xchg
mov
in
mov
popl
popf
in
stos
ret
jae
cmp
cmp
cltd
inc
lds
ret
lret
out
repz
cmp
jge
or
cmp
popf
imul
cmp
ror
popa
and
ljmp
lcall
movsb
xlat
subb
and
jns
aaa
aad
fnstcw
mov
mov
xor
mov
push
jbe
xchg
xor
mov
xor
pop
fidivrs
das
pop
or
inc
insl
sbb
cmpsb
and
shrb
jecxz
les
sarl
mov
sbb
ret
pop
cs
outsb
dec
cli
insl
popf
or
outsl
adc
mov
push
adc
sbb
pop
add
ds
in
push
mov
sahf
inc
xlat
aaa
adc
ret
call
xor
mov
mov
fcoms
push
mov
xlat
mov
das
inc
ffreep
insl
inc
push
mov
jbe
cmp
or
inc
add
lock
js
lahf
xchg
push
adc
push
mov
popw
fcmove
pop
lock
mov
or
enter
push
dec
cmp
out
iret
cld
adc
subb
jle
idivl
pop
add
adc
sub
xor
sbb
cmp
mov
lds
inc
sub
mov
int
pop
aam
mov
test
push
fs
movsl
mov
test
in
add
add
in
mov
cmp
loopne
cmp
repz
mov
loopne
insb
push
sti
ds
aas
push
es
in
xchg
mov
in
testl
scas
test
rcrb
ret
lods
sti
inc
mov
jbe
cwtl
fildl
fsubrs
and
xchg
and
sbb
dec
aas
pop
fisubs
ret
cmc
stos
cmc
arpl
std
mov
js
outsb
jecxz
ficoml
fsubp
sahf
pop
cs
push
or
mov
lds
notb
out
jle
jnp
mov
pop
xor
cwtl
movsl
mov
inc
inc
pop
push
push
and
test
cmp
pop
dec
cli
xor
adc
sarl
fadd
sbb
scas
popf
push
jae
jle,pn
pusha
xor
cmp
out
jl
hlt
movsb
stos
xor
add
ret
rcrb
in
push
xor
pop
cltd
xchg
inc
mov
jle
je
test
jl
aaa
sbb
push
inc
xor
push
jno
push
or
lret
adc
clc
pop
push
pop
in
mov
or
adc
cltd
out
mov
sub
mov
movsb
mov
lahf
xchg
cmp
cmp
lock
push
cmpsl
sbb
andl
scas
ret
bound
test
mov
jns
add
push
push
xchg
mov
mov
xor
fldt
add
pop
subb
loope
xor
hlt
jle
fcmovnu
inc
mov
scas
aas
sub
push
mov
xorb
sbb
adcb
in
fsubrs
mov
mov
cmpsb
fmull
push
mov
sarb
xor
filds
fdivs
push
rcr
lea
xor
mov
mov
orl
orl
in
clc
lcall
out
push
sahf
test
dec
pop
int
sub
dec
cmp
push
imul
cmpsl
cmpsb
mov
push
roll
ja
repz
xor
les
enter
mov
cmp
pop
add
xchg
mov
arpl
and
int
sti
loopne
cmpsl
sub
mov
xchg
iret
and
andl
xor
pop
into
loop
fsubr
cmpl
mov
pop
mov
les
adc
jne
jecxz
loop
jg
out
subl
mov
jp
out
mov
enter
jae
inc
sbb
fnstcw
out
pop
inc
dec
mov
push
flds
dec
je
mov
and
shrb
and
xor
mov
iret
or
cmp
pop
sbb
mov
adc
inc
lods
cmp
lret
jae
in
pop
adc
xchg
mov
and
stos
int
mov
js
push
jae
adc
fadd
mov
push
sub
nop
aaa
mov
mov
sbb
cmp
mov
lods
xor
loopne
inc
fwait
pop
bound
daa
mov
mov
movsl
stos
xor
sbb
inc
mov
jmp
or
xor
adc
add
cmp
push
sarl
push
sub
mov
xor
add
out
iret
xor
cmpsb
loop
sbb
imul
mov
or
dec
push
das
test
neg
pop
mov
daa
or
xchg
lcall
mov
fsqrt
jmp
movsb
leave
pop
push
jno
sahf
xchg
cmp
cld
add
mov
mov
loopne
mov
cwtl
imul
dec
fwait
aas
mov
icebp
mov
jmp
adc
pushf
cmp
in
dec
jmp
mov
icebp
enter
incb
mov
ss
outsl
xor
int
cmp
loope
dec
jno
hlt
push
in
popa
inc
mov
lea
je
lahf
leave
xchg
fdiv
sbb
add
xor
paddd
sub
or
or
xchg
jno
int3
sbb
out
into
add
and
cld
jg
mov
push
test
jnp
insb
aaa
in
jne
push
arpl
cld
pop
xchg
movl
mov
mov
or
pop
jl
inc
cmpsl
jnp
mov
mov
sahf
mov
jmp
jb
movsb
adc
xchg
icebp
xor
inc
pop
xorb
repnz
add
mov
mov
cmp
jnp
and
mov
adc
pop
inc
outsb
ss
ss
popf
out
cwtl
int3
sub
je
leave
mov
shlb
push
popf
push
in
inc
inc
or
and
xchg
or
lret
inc
cmc
ljmp
outsl
dec
sub
pop
dec
push
call
jo
arpl
push
mov
or
dec
shlb
adc
sbb
dec
push
cmp
xchg
scas
inc
lock
mov
icebp
and
lea
rclb
adc
ss
inc
and
aad
dec
bound
mov
das
es
dec
mov
pop
int
andl
dec
repz
xchg
popf
mov
jl
cmpsb
bound
cmpsl
mov
xchg
adc
jae
xor
fwait
subl
mov
leave
jg
dec
mov
fisttps
mov
mov
scas
pop
into
imull
sub
popf
push
adc
repz
mov
les
mov
or
adc
inc
pop
cmp
push
sub
push
adc
ret
mov
sbb
adc
add
pop
bound
add
test
inc
mov
inc
lock
std
xor
sub
and
jge
push
push
pop
cmp
jne
mov
into
sbb
cmp
hlt
sbb
xchg
fstl
inc
push
jmp
xchg
idiv
pop
int3
in
push
mov
push
pop
pop
lods
ss
push
mov
ds
sub
sub
scas
jmp
xchg
imul
lds
pop
lods
dec
sbb
pop
outsb
daa
pusha
mov
fsubrl
jbe
les
dec
les
pop
mov
xor
mov
hlt
mov
or
loope
mov
xlat
push
fdivs
das
push
jg
fs
and
outsl
mov
xor
stc
pop
out
jae
ret
or
xor
jns
dec
movsb
cmc
das
sub
cmp
or
jne
ljmp
cmpsl
fnstsw
enter
mov
cwtl
push
push
sbb
and
cmp
sub
sub
cmpsl
sbb
mov
call
dec
xchg
jmp
adc
sub
popf
adc
add
or
lods
xor
shll
icebp
push
dec
xchg
mov
les
sarl
xchg
dec
imul
mov
in
addr16
cltd
mov
cmpsb
pop
fwait
push
lods
inc
lcall
clc
jo
mov
inc
and
add
cmc
test
movsb
fimull
push
and
mov
nop
lret
jp
mov
out
mov
pop
int3
outsl
lods
sbb
mov
ljmp
inc
xor
fstpl
sbb
mov
add
adc
inc
mov
pushf
cld
push
nop
adc
pop
fistpl
adc
push
mov
shrl
out
cltd
mov
scas
mov
mov
sbb
jae
pop
cmp
cmc
xor
mov
cmp
pop
lret
bound
sub
mov
das
jbe
pop
mov
insl
or
mov
lods
andb
xchg
pop
add
mov
roll
inc
imul
sub
xor
and
les
lods
jo
inc
cmpsl
xor
js
popf
inc
or
add
out
cli
fcmove
xchg
call
mov
adc
outsl
xchg
mull
dec
xchg
mov
xor
fisttpl
loopne
popf
dec
xor
pop
imul
fidivs
dec
dec
mov
inc
xor
jg
in
cmp
bound
pop
jno
adc
mov
dec
pop
loopne
dec
mov
sub
stos
push
push
repnz
ficoms
add
sbb
push
mov
gs
jmp
out
std
xor
fstpt
xchg
mov
arpl
rcr
inc
push
adc
sub
or
jmp
ret
imul
jno
dec
mov
and
dec
outsb
out
xchg
adcl
inc
sbb
fcmovnb
mov
mov
shlb
cmpsl
adc
lea
pop
rcrb
inc
sbb
mov
add
enter
ds
call
sahf
mov
js
andb
rcr
jecxz
add
sub
and
lock
out
mov
jg
ds
or
in
pop
mov
inc
pushf
fsubl
sub
cmp
aas
sbb
pop
hlt
sbb
sbb
add
push
mov
sbb
sbb
jge
cmpb
ljmp
add
cmp
mov
leave
lods
jmp
outsb
push
sub
inc
cld
cli
mov
cmp
mov
cwtl
add
push
aas
std
or
scas
js
dec
xchg
dec
xchg
inc
out
jecxz
test
je
pop
xor
dec
jno
dec
popa
xchg
mov
mov
jle
mov
push
movsb
repz
iret
aaa
rolb
iret
mov
xchg
jmp
scas
mov
add
pop
xor
pop
and
sbb
xchg
data16
dec
push
aad
push
jge
popa
gs
sbb
mov
into
mov
arpl
and
cmc
mov
shll
fcmovb
ror
mov
sbb
adc
rcrl
pop
xor
and
pop
add
sub
cmp
mov
xor
inc
dec
iret
or
inc
sti
push
xor
or
shlb
dec
sub
push
lods
nop
mov
jae
or
sbb
int
ja
dec
pop
data16
mov
pop
lods
fimuls
les
sbb
or
jns
loope
xlat
mov
dec
sbb
jle
imul
sub
ffree
ror
cltd
pop
test
fcomip
bound
ljmp
popa
cmpsl
cmp
iret
pop
mov
dec
mov
sub
daa
pop
fstpl
enter
sbb
hlt
mov
ss
jg
pop
ds
pusha
shl
mov
lods
lret
add
inc
dec
bound
imul
xchg
aad
fidivl
insl
and
test
test
lahf
mov
push
mov
out
adc
stos
fcoml
jl
clc
mov
inc
outsl
je
pusha
sti
mov
mov
mov
dec
test
mov
aas
stc
cli
cmp
mov
push
push
mov
push
cli
or
jb
loope
and
lcall
dec
and
xchg
mov
pushf
int
xchg
popa
pop
ret
scas
push
mov
or
movsb
ljmp
icebp
push
sbb
inc
lahf
xor
xchg
adc
pop
outsb
out
aaa
clc
jl
pop
dec
xor
gs
mov
rcrb
pop
push
inc
mulb
push
adc
or
mov
lock
popf
and
xchg
test
call
xor
in
adc
push
push
inc
mov
push
sub
xlat
dec
jb,pt
dec
jae
cmp
sahf
out
cmp
mov
pop
sub
add
mov
sbb
aad
push
mov
xchg
js
and
dec
insb
lahf
sbb
arpl
mov
add
and
sbb
imul
xchg
push
iret
mov
fs
cmp
mov
shrl
pop
test
leave
int
cltd
leave
xchg
rcll
jo
test
add
jmp
xchg
adcb
push
in
stc
pop
lock
notl
shl
stos
push
scas
test
sti
mov
mov
outsl
mov
out
das
stos
push
enter
sbb
push
pmulhuw
outsb
sub
bound
jo
inc
pop
mov
inc
je
aam
aas
inc
ljmp
fldt
repnz
out
test
lea
xor
cwtl
lods
xor
push
mov
test
in
sub
fsubs
test
loop
mov
inc
push
mov
fdivrl
mov
jg
push
mov
cwtl
xchg
jno
data16
xchg
or
or
cmpsl
mov
test
push
das
cmc
ljmp
mov
ret
sbb
arpl
pop
and
in
adc
adc
clc
mov
adc
test
sbb
pop
push
fwait
dec
ja
mov
in
out
movsb
mov
or
pop
push
push
jb
scas
dec
push
icebp
incb
gs
les
jno
push
or
xchg
and
sub
add
jmp
mov
daa
adc
or
pusha
int
popa
in
mov
ficompl
adc
test
pop
add
push
scas
call
cld
mov
mov
lods
inc
ret
out
movsl
daa
sub
xor
jns
mov
push
test
xchg
xchg
push
mov
cmp
outsl
jbe
mov
push
mov
mov
repz
rcl
addb
or
mov
adc
sbb
stos
inc
mov
add
push
scas
xchg
push
jmp
subl
push
leave
xchg
hlt
int
and
cld
sub
es
int3
lret
int3
std
addr16
ror
mov
and
loop
pop
sti
lret
fwait
xchg
push
mov
cmpsl
pop
ffree
mov
rorb
sbb
in
fnstcw
jne
sub
repnz
sahf
cmpsb
xor
ret
pop
das
mov
dec
insb
lcall
fisubrl
adc
enter
std
xchg
ds
inc
push
or
imul
mov
pop
mov
push
dec
add
mov
stos
in
add
popf
mov
fbld
dec
into
test
xchg
add
xchg
add
inc
dec
popf
imull
out
adc
add
gs
inc
jecxz
fldt
fwait
aam
mov
xchg
and
nop
pop
dec
mov
add
and
pop
outsl
in
mov
mov
outsl
divl
subb
jb
inc
adcl
stc
push
leave
es
add
xchg
hlt
xchg
xor
addr16
inc
loope
sub
cld
popa
enter
jnp
rcll
xchg
mov
jno
xchg
jnp
pushf
sub
cli
jno
andl
inc
enter
movsb
rcr
mov
dec
ljmp
jecxz
sbb
pusha
clc
mov
mov
mov
test
ljmp
xchg
sub
xor
mov
inc
sbb
push
xor
adc
fwait
sbb
out
pop
pop
int
fisubrs
xorb
cmp
xchg
sub
rorl
enter
xor
ret
pop
jnp
sub
data16
cli
arpl
pop
popf
add
pop
cwtl
pop
pop
sbb
and
add
es
int
stos
mov
cmp
out
aaa
cli
pop
insb
movsl
inc
add
jo
push
dec
pop
cmc
mov
push
push
xor
jp
arpl
movsb
cmc
cwtl
and
out
js
loopne,pt
pushf
lcall
mov
sbb
nop
out
decb
add
inc
pop
pop
push
jo
inc
add
and
sub
adc
lcall
xor
aam
push
inc
sub
mov
fldcw
shrb
add
inc
je
jnp
mul
cltd
mov
ljmp
adcl
cmp
stc
mov
jg
mov
mov
xchg
xor
add
jmp
or
cmp
popf
adc
imul
jmp
js
mov
adc
neg
shlb
cmc
adc
inc
ret
iret
mov
push
sarl
outsl
sub
dec
repnz
bound
lods
out
mov
and
jmp
sub
sti
xchg
ljmp
inc
dec
xor
int
pop
loop
adc
pushf
sahf
test
push
mov
enter
mov
sub
jg
xchg
sar
mov
divl
shrb
mov
repnz
dec
add
mov
pop
movaps
addl
sub
gs
popf
sub
push
pop
mov
inc
push
xchg
mov
andb
nop
popa
push
popa
std
addr16
jecxz
mulb
add
cmp
sahf
stos
xor
aaa
mov
adc
jle
push
add
shr
shll
jne
incb
mov
mov
jb
cmpsb
pop
inc
icebp
xchg
int3
lods
pop
jle
push
push
inc
fsts
add
and
cmovae
popa
mov
daa
sub
lret
ror
test
pop
inc
cmpb
out
bound
aaa
test
xchg
xchg
mov
ficompl
testb
loop
test
popa
shll
xor
adc
fdivl
jns
cmp
or
cmpsl
pop
out
push
in
push
add
cld
outsb
inc
es
call
and
pop
dec
addr16
push
push
repz
aad
bound
adc
fucomi
loop
push
mov
arpl
cltd
mov
xchg
stos
movb
mov
cltd
jmp
xlat
leave
and
jne
xchg
adc
jle
pop
lret
out
push
mov
dec
inc
aaa
aaa
movsl
in
mov
xlat
rcrl
aaa
sbb
jmp
add
fcoml
into
lcall
fildl
cmp
sub
mov
dec
movsb
xchg
mov
iret
ror
fimuls
aad
fcmove
pusha
mov
aas
mov
push
mov
push
mov
outsl
push
orb
sti
sub
pusha
rorb
and
dec
xor
aad
inc
je
cli
push
and
push
aad
loop
orl
lea
ja
pop
adc
cli
sub
scas
sarl
mov
mov
jno
or
test
pmullw
fld
sub
sbb
cmp
dec
mov
sarl
pusha
adc
daa
push
and
xor
lods
push
sub
jecxz
sbb
xchg
cwtl
mov
adc
sub
pop
jb
das
fcomps
aas
aam
push
pop
sbb
cmp
adc
arpl
stos
lods
rcr
or
jae
push
notb
mov
orb
xor
add
jge
int3
daa
outsb
mov
sahf
cmpsl
fisubs
rorl
mov
mov
pop
mov
cmp
test
push
insb
jns
inc
movsb
adcb
cmpsb
fsubs
aaa
mov
stc
add
pop
shrl
jle
sti
jbe
or
lahf
hlt
fwait
sbb
and
cmp
mov
rcrb
and
mov
dec
or
sarl
sarb
adc
out
or
cmc
sub
adc
xchg
lret
or
add
mull
dec
pop
mov
negb
mov
pushf
xor
push
sub
sti
sbb
push
xor
and
pop
aas
mov
movsb
sbb
test
popf
add
push
rol
sti
or
lahf
loop
push
dec
mov
clc
cmpb
push
pop
orl
int
sbb
mov
nop
pop
mov
mov
inc
sub
mov
sbb
sub
push
mov
dec
aad
sub
and
push
xchg
mov
scas
xor
rcrl
xchg
nop
leave
outsl
or
xchg
mov
call
xchg
out
lcall
fidivrl
jo
mov
pop
push
or
or
xchg
xchg
dec
add
lods
xor
jl
cmp
test
sub
sbb
pop
jo
xor
mov
mov
dec
es
adc
scas
in
sti
sub
push
add
sub
or
mov
push
mov
add
mov
ss
mov
add
sbb
xchg
add
out
add
movsb
jle
pusha
jae
pushf
pop
negb
jo
clc
mov
es
stos
rcrb
cmp
pop
lret
or
sub
mov
test
in
pop
xchg
add
scas
cmc
inc
cmp
loop
add
xchg
push
mov
jl
cltd
push
movsb
mov
jecxz
cmpb
popa
xchg
jo
cmp
lret
flds
pop
xor
sbb
in
fwait
aam
jl
add
xchg
lahf
mov
push
dec
in
mov
test
add
push
in
mov
cmpsb
jo
enter
push
mov
lahf
xchg
adc
js
test
nop
cmp
cmp
push
cs
or
jecxz
mov
call
xorl
leave
adc
loop
js
sub
inc
mov
sub
out
inc
add
lds
js
loope
dec
movsb
dec
jge
push
aam
in
sbb
cs
add
lods
dec
mov
pop
aaa
push
repz
lret
jb
or
lock
xchg
xor
popl
dec
xorl
xchg
ljmp
movsb
fiadds
insl
enter
push
lea
scas
imul
insb
mov
dec
add
mov
test
pop
mov
jp
cwtl
inc
repz
xchg
int
popf
lods
xor
ljmp
adc
mov
push
popf
fsubrl
sub
shr
and
pop
bound
bound
add
pop
jbe
push
lds
xchg
pop
jno
mov
shll
add
xchg
cmp
adc
orb
mov
testl
int3
and
imul
stos
and
pop
rorb
in
insl
inc
sahf
jb
xorl
lahf
jg
outsb
xchg
icebp
iret
negl
test
out
adc
mov
dec
gs
loopne
icebp
sahf
xchg
inc
cmc
push
or
gs
test
cmp
mov
cmpsb
jmp
or
xchg
mov
pop
sub
je
sti
or
cwtl
adc
repz
test
test
out
andl
bound
mov
es
call
notb
out
filds
mov
testl
lcall
rcr
sbb
dec
into
mov
xor
jne
sub
mov
loopne
mov
iret
enter
pushf
mov
push
jecxz
mov
popa
repnz
lea
lods
cmpsl
enter
xchg
or
cmpsl
sub
push
add
movsl
pushf
dec
sub
cmp
iret
sti
and
xchg
cmp
imul
test
into
fldcw
cmp
stos
pop
pusha
and
cltd
xchg
lahf
inc
dec
cltd
in
repnz
ret
dec
cmpsl
pop
and
imul
sub
ss
movsl
dec
mov
and
outsl
pop
mov
out
or
and
adc
push
push
mov
loope
repz
xor
and
xor
or
loope
cltd
subl
pop
xor
inc
fiaddl
arpl
ficompl
loopne
loopne
test
aaa
fsubrp
xchg
js
addb
dec
aaa
rol
imul
mov
sbb
add
mov
sub
ret
ja
icebp
push
mov
push
test
js
push
cmp
push
into
mov
aas
int
shrl
xorps
aas
mov
ret
or
mov
lahf
imul
dec
pop
rcrl
bound
cmp
lock
in
mov
mov
and
cmc
adc
and
push
subb
push
test
inc
pop
lret
xorl
cmp
adc
lea
sti
cmp
dec
ds
inc
xchg
or
pop
cltd
mov
mov
xlat
data16
xor
mov
nop
push
xlat
xchg
mov
in
mov
hlt
into
jnp
jg
clc
fdivrs
int
mov
clc
ds
xor
cmp
dec
dec
sbb
add
pop
dec
cld
imul
fwait
rorl
repnz
lret
add
inc
jb
xchg
jae
pop
add
aas
cmp
loopne
test
pop
cmc
mov
xchg
inc
les
jecxz
scas
push
adc
cs
lods
aad
or
enter
pushf
es
shrl
jne
push
or
push
daa
dec
stos
xlat
sub
enter
rcr
imul
jge
push
cmp
fists
lods
push
cmc
pusha
mov
neg
mov
adc
mov
or
pop
scas
xchg
in
add
out
inc
dec
rcll
pop
jnp
iret
incl
cmp
repnz
out
or
xchg
into
daa
xchg
xchg
push
int
sbb
dec
add
es
lods
or
inc
stos
jbe
dec
dec
lods
gs
push
adc
or
lods
adc
xchg
pushf
pop
in
pop
xor
iret
or
and
cltd
ror
int3
fildl
es
ficompl
fs
mov
call
in
mov
mov
adc
inc
cmpsb
adcl
adc
xchg
call
mov
fs
add
bound
das
adc
xlat
cwtl
mov
pop
mov
adcl
cwtl
mov
push
fistpll
popf
mov
and
sbb
cld
popa
pusha
sbb
sub
pop
add
mov
popf
xchg
fcomps
pop
jmp
adc
icebp
xor
icebp
decb
add
sub
mov
push
cmp
jg
mov
cld
dec
xchg
add
or
cmp
dec
jg
out
inc
jecxz
mov
jg
repz
mov
in
push
sbb
scas
test
les
dec
pop
cld
ret
mov
and
in
pusha
mov
add
xchg
add
and
jg
sarb
andb
in
cmpsb
popa
pop
mov
addr16
xchg
fstpt
sti
addr16
fwait
ret
out
push
mov
mov
inc
xchg
sbb
pmulhuw
out
ss
mov
lahf
and
hlt
mov
cmp
lods
lcall
dec
xchg
mov
les
bound
fdivrs
leave
dec
out
outsl
and
push
mov
int
frstor
aam
xchg
pop
add
test
mov
xor
mov
fcompl
jmp
xor
xor
sti
push
inc
negl
or
arpl
decl
cmp
add
adc
cmp
arpl
aas
add
jne
dec
ret
nop
ja
mov
inc
xchg
cld
jbe
jbe
and
mov
in
aas
outsl
mov
ljmp
cmp
mov
cs
adc
xor
leave
or
mov
push
add
jne
lret
stos
cli
mov
nop
push
stc
movsl
lcall
jle
push
add
icebp
xchg
jae
add
cmp
xorb
shrl
pop
xor
mov
lret
dec
jmp
sar
or
rorl
setg
dec
xchg
cwtl
leave
jecxz
imul
in
push
out
loop
outsl
ret
xor
pop
rcl
pushf
repnz
dec
cmp
repnz
loopne
inc
jae
xor
int
fsubl
test
insl
and
lret
sub
add
mov
add
das
xor
fcoms
push
xor
pop
pop
fcmove
pop
push
pop
mull
outsb
enter
ja
clc
mov
mov
ja
sub
std
daa
mov
es
push
jbe
mov
add
push
call
xchg
nop
andb
enter
xchg
mov
sarb
sbb
xorl
ror
push
or
movsl
mov
inc
mov
mov
adc
and
sbb
lret
jle
lock
imul
lods
cwtl
adc
call
lcall
jae
or
mov
mov
in
dec
jns
imul
mov
pop
push
add
push
stos
mov
and
dec
cwtl
sarb
xchg
push
xchg
push
loope
or
xchg
fs
xchg
nop
jge
inc
add
pop
jp
cmp
pushl
sbb
addb
dec
das
cli
mov
orl
inc
inc
daa
cltd
loopne
daa
mov
adc
sti
lock
stos
adc
add
pusha
clc
aaa
xchg
add
xor
xor
mov
cmp
jge
mov
movsb
cli
or
adc
outsl
mov
add
sbb
adc
mov
or
pop
xchg
pushf
pop
push
insl
lods
xor
jmp
push
add
add
scas
movsb
jle
icebp
dec
incb
mov
cld
out
mov
ds
xorl
inc
xor
xlat
fildll
aas
mov
inc
addr16
or
jne
and
adc
sbb
dec
pop
repz
iret
inc
cmc
xor
adc
xchg
je
mov
jp
cmp
loop
push
or
imul
adc
rol
and
repnz
push
pop
ja
push
pop
jno
mov
sbb
jo
push
lahf
cmp
lret
push
jle
gs
test
sub
outsb
bound
xchg
mov
mov
mov
pop
inc
or
popaw
push
repz
es
out
dec
sub
in
push
lock
out
divl
jg
aad
sub
mov
movsb
stos
stos
or
or
adc
leave
pop
cmpsb
dec
pop
cmp
mov
adc
xchg
push
mov
sub
ds
xchg
push
clc
inc
or
mov
inc
mov
pusha
dec
je
sbb
mov
push
lret
add
cs
jecxz
push
int3
lret
scas
inc
jb
shlb
ljmp
ds
dec
xchg
pop
repnz
out
sti
xchg
sub
sti
aas
jecxz
out
testb
cltd
dec
xor
or
sbb
dec
leave
mov
pusha
pop
push
gs
dec
jbe
push
mov
jbe
cmp
test
ds
fldl
push
push
lea
clc
inc
ret
cld
mov
scas
jns
lock
test
adc
mov
divb
mov
int3
outsl
and
je
cmp
sahf
mov
mov
dec
ds
insl
data16
ret
in
cltd
jb
cmp
sti
sbb
xchg
add
cli
lods
or
jmp
jg
pushf
roll
lds
push
roll
lods
ja
mov
and
and
dec
adc
out
int3
fwait
int3
push
rcr
push
cld
out
ss
negl
jp
lcall
and
xchg
in
imul
popl
in
fwait
inc
push
sub
movsb
jae
cmp
hlt
mov
lret
xor
add
pop
xchg
add
dec
ja
repz
fxch
orl
inc
pop
aam
movsl
les
lcall
loope
mov
xor
adc
ljmp
lahf
or
sbb
mov
fwait
sahf
scas
mov
loopne
xchg
sbb
imul
loop
push
push
jg
arpl
out
into
cmp
or
orb
enter
sub
dec
xor
mov
in
repz
mov
cmp
pop
xchg
inc
aaa
ret
mov
rcrl
jns
cmp
push
and
hlt
negl
test
int3
xor
mov
push
in
inc
sub
loopne
stos
out
sub
or
fldl
and
cs
dec
popl
lret
hlt
pushf
inc
xlat
pop
insb
pop
inc
andb
imul
aam
xor
es
sbb
cmp
xchg
ficoms
xchg
insl
push
jno
dec
int
mov
jbe
imul
or
and
das
movsb
xlat
pusha
push
cmp
jle
xor
mov
sbb
and
popf
and
pop
and
sbb
cltd
inc
push
fildl
push
pop
stos
and
notl
sti
and
out
lea
cltd
sahf
pushf
push
jge
dec
and
cld
iret
repnz
outsb
adc
inc
cmpsb
add
jnp
and
rorb
dec
jns
sti
mov
inc
xlat
mov
jae
sub
lock
push
mov
xchg
or
cmp
jno
popf
and
mov
lret
insb
sbb
mov
popl
out
push
jbe
cmp
outsl
mov
mov
cmp
xchg
cmpsl
cli
sarb
mov
xchg
jnp
aas
sub
insl
call
xchg
stos
push
int
mov
push
dec
mov
stos
jl
roll
aaa
outsl
lret
mov
jb
xor
popa
mov
mov
stc
in
pop
ja
scas
data16
adcb
mov
sti
inc
cmpsl
adc
loope
insb
aaa
sub
pop
mov
fsts
jp
xor
sti
add
mov
dec
pop
inc
or
xchg
xor
pop
mov
sub
out
mov
mov
xchg
pop
inc
cs
and
mov
addl
scas
jecxz
pop
out
pop
jnp
mov
fwait
decl
add
imul
inc
inc
mov
lret
hlt
lcall
and
jp
roll
enter
xor
insl
fucomip
mov
xchg
in
jo
clc
xchg
lock
scas
inc
cmp
das
das
in
inc
dec
fs
jo
mov
pop
and
arpl
pop
nop
xor
je
push
or
scas
xchg
cmp
add
test
clc
psrlw
imul
mov
mov
mov
sbb
fdivrp
in
imul
mov
or
test
ja
mov
ret
jle
pushf
jns
mov
std
ret
push
adc
in
cmpsl
mov
pop
lret
aam
sbb
lods
xor
xor
jb
adcl
movq
mov
fbstp
scas
push
jmp
xor
and
mov
es
cmp
and
call
jmp
fimuls
mov
dec
cmpsl
cmpsb
lcall
add
add
cltd
inc
in
jle
lds
aam
dec
mov
inc
push
mov
mov
pop
imul
mov
fwait
mov
or
xor
push
fwait
sbb
xchg
mov
mov
pusha
xchg
sbb
insl
push
mov
mov
mov
aas
inc
adc
in
out
comiss
sbb
in
loope
in
add
dec
inc
insb
sub
loopne
push
repnz
rcrl
dec
ljmp
mov
or
jmp
sarb
and
mov
sbb
imul
sub
test
pushf
and
daa
fisubs
mov
or
ficoms
into
pop
adc
dec
arpl
push
fdivs
or
cmpsl
cmc
adc
add
cmp
or
aad
jbe
push
mov
jb
and
jo
out
aam
inc
dec
stc
dec
jle
into
sub
adc
sarb
imul
lahf
js
popf
rolb
lods
aas
pop
mov
sbb
popa
mov
jb
in
ss
mov
dec
xchg
push
mov
arpl
pop
ss
addr16
pop
inc
xor
frndint
jo
stc
sti
outsl
mov
scas
lret
xchg
negl
xchg
out
pop
sub
popa
jno
xchg
aas
loope
push
cmpsl
or
xchg
jmp
inc
add
jp
sub
data16
cmp
scas
push
cld
xor
mov
or
adc
xor
cli
sar
les
daa
inc
imul
aam
pop
xchg
clc
jg
xchg
xchg
jae
dec
push
and
fimuls
iret
loopne
pop
add
mov
into
inc
gs
or
mov
subb
insl
out
outsb
inc
pop
mov
push
out
pop
les
pusha
push
adcl
push
sbb
roll
mov
cmpsl
jl
lret
jmp
out
adc
aas
jge
andb
neg
adc
mov
cmpsl
mov
subb
push
jns
mov
xchg
lods
ret
add
pop
mov
aam
mov
cmp
mov
mov
adc
aad
lea
mov
xchg
ljmp
and
jge
pop
dec
adc
outsb
sub
xor
out
ds
testl
or
inc
sub
mov
fisttpll
aam
and
int
jle
jmp
in
add
push
sbb
sbb
aad
faddl
mov
sub
push
cmp
in
mov
leave
mov
daa
xor
dec
lret
sbb
pop
sbb
dec
fcomp
loope
les
mov
mov
mov
sub
cmp
push
leave
adcl
cmp
mov
aas
jae
repz
mov
mov
das
add
xchg
and
add
cmp
jnp
sub
mov
mov
push
xchg
push
fisttpl
push
sub
or
in
mov
mov
jg
mov
sub
cld
xchg
xor
xor
clc
les
int3
ja,pn
jae
arpl
jle
inc
sbb
cmp
pcmpgtw
test
dec
stos
movsb
and
mov
mov
dec
inc
xchg
pop
pop
mov
jne
mov
inc
cli
fistl
fldln2
mov
mov
inc
cmpsl
mov
movsl
insl
jecxz
mov
inc
jmp
ficoml
xor
xchg
sbb
pop
xchg
into
in
sub
gs
or
inc
and
push
inc
test
in
cmp
dec
adc
lret
fisttps
ja
rclb
test
add
mov
lret
or
movsb
repnz
fldt
das
popf
mov
sub
jg
dec
cli
push
rcrl
jl
clc
test
jp
rcll
jbe
repz
push
ret
ja
cld
push
das
jecxz
data16
fstl
and
push
xor
adc
daa
mov
add
xor
inc
pop
insl
xchg
aaa
xchg
fstpt
xchg
in
dec
sub
test
mov
adc
push
pushf
cs
stos
andb
aam
xor
add
sub
mov
jl
inc
test
jno
into
stc
sub
stos
test
push
iret
into
pusha
movsl
shll
push
push
leave
sti
sbb
jg
arpl
fcmovnbe
insb
xchg
repnz
push
xor
sbb
stc
lret
insb
aaa
cli
sarb
or
insb
sub
adc
subb
pop
out
mov
cmpsl
ret
iret
pop
aaa
rcrl
push
jmp
pop
insl
sbb
repz
idivl
repz
pop
mov
das
out
rcll
push
call
add
push
out
push
imull
idiv
lret
sbb
int
xchg
out
lret
decl
fldl
test
cmp
jne
in
xchg
adc
and
mov
aas
imul
jecxz
jo
loopne
xchg
sbb
xchg
dec
or
loopne
pop
sahf
cltd
test
mov
mov
pusha
sbbl
cwtl
cli
sbb
cli
leave
pushf
ficomps
into
lock
ss
add
mov
mov
call
insb
pop
adc
fmull
js
mov
sbbb
dec
mov
xchg
jl
sbb
push
das
push
mov
inc
cwtl
xchg
js
nop
mov
imul
fs
sub
les
fdivs
cmp
pop
jae
mov
ds
xchg
mov
pop
bound
mov
pop
fsubrs
mov
lods
sbb
dec
imul
repnz
outsl
jmp
mov
sbb
cmp
lods
sbb
test
cs
popf
das
popl
xchg
roll
in
sub
xchg
scas
inc
push
dec
lods
jbe
int3
push
cmpsl
xchg
adc
xchg
mov
std
adc
inc
sbb
dec
lret
pop
and
push
mov
xchg
stos
dec
rcrb
inc
add
add
add
push
sub
cmp
aas
jmp
shl
mov
loopne
adc
push
popf
jnp
bound
out
ja
sarl
outsb
enter
dec
jno
push
aad
mov
push
int
test
sti
les
arpl
inc
add
rcll
add
mov
xacquire
push
outsl
dec
int
sti
insb
mov
cltd
in
xor
outsb
jb
mov
sti
fs
dec
mov
xchg
mov
loop
mov
jecxz
push
jmp
mov
ss
in
pop
xor
mov
enter
insb
inc
inc
addr16
or
or
test
in
inc
mov
sarb
sbb
pop
inc
or
test
mov
ret
mov
xchg
push
adcl
cwtl
insl
lea
sbb
in
push
cmpsl
mov
push
jmp
es
jae
lods
loopne
bound
sub
enter
arpl
pop
divl
in
pop
inc
jno
cmovo
pusha
adc
cmp
loopne
sahf
into
dec
stc
in
jno
stos
dec
sub
mov
popf
fbstp
mov
add
sbb
pop
gs
out
loopne
in
in
insl
xor
rorb
icebp
jnp
lds
add
pop
sbb
pop
jp
repz
scas
xchg
cs
subl
xchg
fcmove
or
pushf
mov
xor
stos
es
xchg
test
sar
loop
mov
lcall
jl
cmpl
or
iret
cli
add
std
jp
push
fldcw
shrl
aam
testb
gs
jnp
sbb
xor
adc
inc
push
ret
test
imul
dec
adc
dec
divl
dec
mov
shlb
gs
lcall
gs
dec
mov
mull
fsubp
out
sub
shlb
mov
cmpsb
mul
xor
add
in
push
daa
xchg
mov
sahf
jp
mul
jnp
xchg
mov
fildl
push
or
push
test
jnp
repz
pop
cmp
jecxz
popa
adc
cmp
cmp
mov
icebp
lods
test
int3
fwait
jbe
inc
xlat
cmpsb
add
out
aam
dec
pop
adc
jbe
ljmp
dec
jns
int
inc
iret
repnz
cmp
inc
fbstp
xchg
inc
push
jbe
pop
jo
pop
push
jno
scas
pushl
sub
and
in
ss
sbbl
sub
loopne
iret
pop
mov
imul
and
pusha
mov
ja
popf
xchg
pop
mov
add
and
mov
xchg
or
push
sub
jmp
je
cmp
xchg
push
dec
sbb
mov
pop
pop
orb
cmp
bnd
xor
sbb
jno
pusha
push
sbb
mov
call
ja
ret
jmp
out
jns
push
pop
xchg
scas
sub
int3
pop
and
cwtl
cmp
or
mov
inc
jmp
ljmp
ret
cmp
mov
and
and
movb
addr16
lcall
jp
mov
push
mov
push
mov
xchg
dec
mov
repz
inc
jmp
stos
cmpsb
inc
jbe
xlat
vzeroall
mov
daa
add
mov
push
jmp
fsubs
jnp
shlb
xchg
mov
sbb
pushf
loop
jo
shlb
jb
int
pop
cmc
loope
sbb
dec
cmp
mov
mov
mov
lret
mov
mov
add
sahf
jo
sub
data16
pop
je
cmp
push
mov
inc
jno
pop
arpl
push
shlb
sbb
jno,pt
fwait
es
or
stos
pop
cmc
test
push
mov
pop
cltd
clc
lock
lods
dec
fs
or
xor
fmulp
call
xchg
bound
push
add
lock
sbb
into
pushf
fisubs
push
mov
dec
sub
adc
and
cmp
inc
mov
out
pushf
sub
lret
fdivrs
nop
mov
nop
lret
shlb
in
lds
jmp
pop
aas
add
in
inc
test
pop
inc
repz
add
mov
test
cmp
fistl
pop
mov
neg
xchg
pop
or
rorl
pop
mov
jp
inc
jbe
int3
or
cmpsb
imul
loop
movsb
idiv
stos
sub
add
aad
sub
adc
mov
xor
and
hlt
repnz
lret
mov
in
pop
mov
xchg
sbb
and
clc
xchg
notl
pop
aas
cwtl
cmp
lahf
cwtl
mov
and
cld
fldcw
inc
aad
sbb
shrl
add
adc
loope
cmp
push
push
insl
sbb
push
sbb
imul
mov
sub
pop
mov
push
fldt
mov
je
mov
dec
cs
filds
or
ljmp
xchg
sub
mov
stos
sub
mov
mov
mov
mov
imul
cmpsl
insb
outsb
testl
and
xor
es
add
test
aaa
cs
cmp
dec
imul
test
fwait
scas
xor
xor
add
mov
test
aas
push
mov
icebp
xor
pop
and
inc
cmp
loop
fs
js
push
jge
bound
xor
cmp
inc
loope
insb
loop
std
jne
stos
jns
push
ret
cs
xchg
jae
cmp
mov
push
sub
sub
std
incl
clc
dec
leave
movsb
xchg
dec
jns
insl
repnz
stos
popf
dec
jge
cltd
popa
jp
push
jg
jb
jmp
cmc
dec
push
ja
lds
sbb
cmpsl
sysexit
into
xlat
xchg
dec
push
add
pop
repz
push
or
sub
frstor
or
daa
adc
fldenv
dec
into
mov
loopne
insb
pop
shlb
dec
scas
jg
inc
or
ja
jno
cmp
cmp
stos
dec
mov
in
je
push
hlt
lret
sub
push
notl
test
mov
movsb
or
pop
cld
jmp
inc
test
mov
bound
rcrb
andb
xor
dec
sbb
dec
cmpsb
jae
jno
or
add
mov
clc
rcll
popa
mov
xor
xchg
ret
jb
sub
aas
inc
cmp
fidivl
xchg
repnz
push
fsubs
pop
adcb
nop
mov
add
jge
incb
movsb
inc
pop
popf
cmpsb
data16
lahf
jl
mov
popf
cli
add
std
pop
xor
hlt
mov
mov
mov
push
rorl
icebp
push
sbb
lret
xchg
mov
pushf
ds
out
pop
andb
add
repnz
xorl
pop
stos
lods
imul
in
jbe
dec
add
jmp
aad
adc
pusha
arpl
arpl
cmp
jmp
addr16
rorb
adc
in
add
cs
arpl
xchg
push
mov
mov
daa
repnz
rorl
push
out
mov
inc
add
jecxz
ss
addl
adc
test
aaa
in
xor
cmp
ret
xchg
xor
pop
push
push
pushf
dec
fisubrs
xchg
push
jle
inc
push
xchg
gs
out
adc
std
mov
call
loope
sub
mov
ret
xchg
xchg
mov
test
insb
outsb
rorl
out
les
xchg
fdivs
call
xchg
cmp
or
in
lahf
sub
loop
iret
mov
adcl
pop
stos
jno
pop
gs
stos
jmp
scas
inc
loopne
cmp
mov
rcrb
jle
mov
cli
movsb
stos
sub
push
dec
sub
jge
int
dec
lret
lea
adc
mov
dec
push
out
adc
add
jae
pop
xlat
xchg
shrl
dec
pop
gs
jle
leave
inc
ja
cld
out
inc
js
fsubrs
push
xor
imull
call
lret
sbb
mov
cmpsb
push
jae
into
xchg
aam
mov
in
or
loopne
cltd
dec
sbb
mov
loopne
in
je
hlt
fnstsw
jg
sahf
pop
xchg
and
pop
adc
sbb
or
ds
out
mov
xor
scas
into
les
ja
jne
pop
sub
into
xchg
push
ja
push
mov
push
xchg
mov
sbb
sub
adcb
push
sti
sti
lock
cmp
mov
mov
push
jns
aad
xchg
bound
push
aaa
insl
mov
repz
jl
adc
and
xor
jmp
aam
cmp
mov
mov
enter
mov
cltd
add
shr
add
hlt
pop
stos
addb
cli
outsb
or
mov
mov
lea
mov
mov
mov
push
or
aaa
and
jle
or
mov
lahf
out
outsl
push
mov
sbb
aad
and
add
lret
jle
cltd
xor
call
add
mov
jo
loop
jno
sbb
je
cmpsl
sub
pop
std
inc
mov
pop
dec
xchg
fistps
out
ret
aas
pop
mov
loop
shll
push
mov
jp
loope
jg
lods
pop
shlb
mov
bound
negb
inc
or
aas
xlat
fisttps
stos
inc
mov
xchg
mov
push
sub
push
fstl
bound
mov
xchg
fs
mov
push
in
addb
sub
cmp
push
adc
and
sub
mov
adcb
push
pop
mov
inc
cmp
mov
mov
aad
add
inc
push
inc
outsb
and
or
xor
jno
jbe
int3
inc
cwtl
loop
sti
gs
out
out
mov
xlat
inc
fwait
or
ret
adc
dec
mov
adc
inc
stos
push
pop
hlt
mov
xchg
dec
cmp
inc
mov
pusha
push
ds
dec
mov
std
and
mov
jno
and
or
or
xchg
call
xorb
adcl
mov
data16
xsha256
cmpsb
shrl
push
jb
scas
mov
push
xchg
and
in
xchg
shrb
lahf
rorb
xor
xchg
jo
and
xchg
sahf
mov
fnsave
jns
sub
out
orb
lret
push
mov
in
push
cmpsl
daa
addr16
fstl
fmuls
lret
or
pushf
mov
or
js
cmp
nop
dec
fmull
negb
mov
mov
and
dec
inc
ds
cwtl
sar
je
test
mov
xchg
repnz
shr
and
out
cmp
fldl
mov
ret
mov
jo
fwait
popa
add
pushl
add
sbb
xchg
pop
fsincos
mov
mov
mov
sub
cmp
mov
jbe
and
xchg
aas
pop
ds
push
sti
mov
adc
dec
cli
mov
repnz
int
jge
mov
adc
subl
movl
xchg
cs
xor
mov
cmc
and
cmp
add
dec
rcll
xchg
adc
mov
sbb
cmp
xchg
xchg
out
mov
dec
test
and
add
sbb
push
jp
xor
mov
mov
and
sub
call
imul
sti
fldl
lock
push
scas
or
mov
xor
pusha
xor
movsl
jbe
dec
push
sahf
gs
daa
fucomi
fmulp
mov
inc
push
adc
in
cli
add
xchg
xchg
aas
xchg
clc
fsubs
incl
add
add
jl
or
andb
sub
fdivrl
xlat
mov
dec
test
push
lea
mov
push
mov
aad
leave
cmp
fwait
pop
push
push
call
jl
add
pop
dec
push
inc
push
enter
dec
adc
push
cltd
loop
ficoml
minps
mov
push
imul
repz
out
push
dec
cmpsb
scas
sub
jl
cmp
push
sub
mov
pop
shl
lcall
jns
imul
out
ret
jne
dec
loope,pt
jno
push
aaa
sub
cmpsl
add
outsb
fsts
cld
in
and
addr16
inc
jecxz
inc
dec
in
cmp
adc
pcmpgtw
and
lret
cmc
xor
pop
cltd
push
imul
movsl
or
xorl
mov
push
lretw
jae
inc
xor
add
mov
jo
cli
mov
xorl
out
jge
cltd
pop
add
gs
out
jp
xor
leave
ja
popa
shll
mov
push
mov
ja
cmp
mov
cmp
stos
pop
push
inc
adc
push
aas
jnp
popf
cmp
mov
loop
gs
lods
test
push
sub
mov
lods
push
outsl
movsb
sbb
imull
in
xchg
jno
mov
jns
xor
cld
aas
aas
push
ja
pop
ja
leave
adcl
cmp
pop
shlb
sub
test
inc
divb
repnz
pop
add
mov
pushf
lds
adc
pop
inc
sub
pop
fisttpll
dec
add
pop
sub
fstpt
adc
fstpt
or
or
imull
dec
ds
fsubl
dec
call
mov
nop
mov
mov
cmpsl
sub
jne
ret
add
mov
jge
ss
xor
add
xor
sbb
mov
rcr
aas
and
jb
test
mov
jno
cld
les
pushf
and
xchg
ja
sbb
xchg
aas
test
imul
rcrl
outsl
jno
xchg
cmp
add
add
dec
ret
jo
mov
push
repz
test
repnz
push
or
xchg
push
das
loope
xor
sbb
push
das
inc
scas
outsb
leave
mov
pop
pop
xchg
mov
push
adc
xor
stc
sub
out
sub
inc
loope
xor
pop
adc
push
in
test
fwait
dec
sbb
jae
in
in
shrb
jb
push
pop
lods
sarl
inc
push
mov
sub
or
out
ficoml
scas
