xchg
mov
lea
xor
mov
mov
lea
mov
add
mov
jmp
add
rcr
lea
push
lea
push
lea
push
lea
push
pushl
call
jmp
not
shl
mov
mov
adc
mov
not
adc
jmp
and
xor
neg
xor
mov
xor
mov
lea
neg
or
ror
neg
and
jmp
mov
adc
mov
add
and
popl
mov
xchg
rcr
mov
mov
add
jmp
mov
movl
and
xor
xor
xor
lea
movl
mov
neg
mov
jmp
not
add
mov
lea
ror
mov
shl
add
call
xor
jmp
adc
not
mov
xor
push
xor
mov
xor
lea
neg
jmp
mov
rcl
rol
lea
rcr
jmp
xor
xchg
xor
xor
inc
jne
and
rcl
not
lea
jmp
mov
mov
not
neg
mov
not
not
add
mov
lea
mov
lea
push
push
push
push
push
push
push
call
jmp
neg
mov
mov
not
adc
xor
xor
mov
xchg
rcl
mov
neg
jmp
mov
xor
and
ror
xor
jmp
xchg
neg
mov
lea
neg
not
xor
mov
mov
lea
pushl
call
pop
jmp
xor
mov
shl
lea
push
push
push
push
push
push
push
call
jmp
mov
mov
call
shr
adc
and
mov
xor
mov
shr
mov
jmp
lea
xor
mov
xor
xchg
xor
mov
not
adc
shr
neg
not
mov
xor
neg
jmp
mov
pushl
call
rol
xor
jmp
add
and
xor
neg
mov
lea
xor
rcr
xchg
adc
xor
lea
lea
push
push
push
push
pushl
call
jmp
mov
shr
xor
ror
adc
neg
xor
lea
xchg
rcl
adc
not
rcl
jmp
ret
mov
xchg
not
xor
mov
mov
mov
mov
neg
xor
adc
neg
xor
popa
jmp
ror
adc
mov
shr
mov
mov
rcr
jmp
movl
mov
ror
mov
neg
dec
mov
lea
jmp
mov
xor
call
shr
lea
xor
lea
call
mov
mov
adc
xor
adc
xor
and
jmp
ror
xor
xor
neg
mov
add
mov
mov
rol
xchg
xor
mov
lea
jmp
movl
lea
and
adc
movl
jmp
push
mov
add
pusha
not
mov
lea
jmp
xor
mov
add
xchg
mov
mov
xor
shr
lea
xor
jmp
lea
xor
dec
lea
xor
xor
not
ret
mov
xor
shrl
and
adc
lea
rcr
rol
mov
xor
xor
mov
mov
lea
xor
jmp
xor
lea
call
adc
not
jmp
mov
mov
mov
and
xor
movl
and
mov
xor
jmp
and
add
ror
mov
inc
je
not
xor
mov
jmp
neg
mov
ret
not
mov
lea
adc
and
xor
mov
mov
xor
mov
jmp
leave
call
call
and
mov
neg
mov
xor
movl
xor
not
add
lea
jmp
mov
xor
lea
xor
ror
rcl
rcr
mov
mov
neg
mov
mov
add
lea
jmp
adc
rcr
mov
ret
push
lea
push
push
pushl
pushl
call
not
lea
jmp
not
mov
mov
xor
adc
xchg
lea
not
decl
jne
xor
not
jmp
mov
lea
movl
neg
not
not
movl
lea
xor
mov
movb
shr
xor
xor
lea
push
push
push
push
call
jmp
xchg
shr
not
mov
rol
shr
mov
jmp
sub
das
sbb
cmp
xor
pop
sarl
loopne
into
mov
test
mov
mov
aam
inc
mov
hlt
adc
dec
jbe
out
fdiv
ljmp
dec
lcall
push
dec
sub
les
or
sbb
out
mov
cmp
std
movsl
dec
fs
add
loop
xor
mov
inc
orl
xor
lcall
rcrb
xor
xchg
iret
pop
in
inc
inc
inc
outsb
push
sbbl
hlt
push
test
pop
in
lcall
cs
or
sub
push
inc
popf
bound
cmp
sub
inc
sub
sub
xchg
lret
jle
xlat
jbe
in
jmp
cmpl
pop
fistl
sub
loopne
ss
cvtpi2ps
les
mov
jo
repz
std
inc
jmp
popa
or
xlat
inc
mov
push
lret
jle
loope
test
scas
jo
jmp
popa
or
stos
lock
mov
les
dec
mov
mov
ret
lds
stos
and
sub
or
mov
insb
addr16
out
sub
or
sub
out
xlat
inc
jns
sub
out
imul
enter
mov
andl
and
movsl
adc
int
js
aaa
insb
jg
shr
into
jae
mov
sub
out
jns
xchg
sub
dec
jno
arpl
sahf
scas
sub
jbe
push
enter
sub
out
mov
xor
dec
mov
xor
xchg
aam
int3
pop
jmp
fwait
arpl
jno
in
stos
jg
scas
sub
jle
or
lds
push
shrl
add
test
jae
stos
pop
filds
sub
mov
stc
stc
mov
pop
cmpsb
push
rcr
fldenv
data16
arpl
jecxz
jl
sub
pop
clc
lcall
les
sub
sti
call
sbb
jb
push
vpunpckhbw
dec
push
daa
lret
sbb
fisubs
jle
int3
movsb
cmovnp
inc
adc
mov
jmp
lret
mov
stos
into
call
cmp
dec
imulb
lret
subb
inc
pop
imul
leave
mov
inc
fldenv
cmovae
dec
push
shrb
pop
add
push
push
sub
nop
push
imul
mov
push
xchg
jae
mov
cmp
stc
fldenv
xchg
lea
xor
fucomp
sbb
dec
jmp
cmp
daa
push
rcrl
jno
sub
ss
dec
mov
daa
xor
pop
movsb
ss
lea
loopne
test
scas
ss
ljmp
shlb
repnz
add
inc
jb
ficomps
lahf
pop
rcll
fisubrs
add
fisubrs
jb
std
lcall
fisubrs
jb
push
pop
test
loope
cltd
js
fs
fiadds
mov
lods
fisubrs
cltd
test
lcall
mov
fiadds
jb
jecxz
shrd
js
and
stos
pop
rorl
cmp
shrl
fcmovbe
repnz
sub
mov
in
loopne
inc
xor
lea
loopne
dec
and
fisubrs
pop
sar
add
sar
xor
jb
push
vpunpckhbw
dec
stc
jmp
and
adc
out
sub
frstor
pop
push
insb
jp
fisubrs
jb
pop
add
jb
xorb
sub
faddp
imul
mov
inc
lods
fidivrs
lods
mov
jg
xlat
roll
and
daa
mov
sub
and
imul
insl
and
rcr
imul
and
icebp
fcmovb
imul
rcl
imul
bound
or
lea
shrl
stc
push
mov
or
lea
fisubs
mull
mov
cld
push
and
dec
das
mov
lods
mov
mov
sti
in
cli
sub
nop
frstor
lret
fs
fs
xchg
fnsave
loop
jb
mov
fisttpll
push
sbb
push
and
sub
mov
mov
stc
in
fcmovbe
daa
andl
mul
es
es
movsb
push
mov
jg
daa
mov
mov
dec
in
loope
jl
loope
inc
fcompl
mov
jne
cmp
push
push
jle
test
jno
sub
shld
pop
dec
adc
pop
pop
mov
insb
mov
stc
daa
pop
sub
cmp
sub
fnsave
lods
and
jno
jg
fdivrl
aam
push
aad
pop
cmpsl
mov
adc
push
lcall
mov
jns
stos
sub
pop
fstpl
mov
pop
outsb
mov
fldt
aaa
movsb
sahf
imul
mov
loopne
divb
lods
das
sbb
jl
daa
andl
mul
add
cwtl
stos
jns
mov
lods
popa
icebp
pop
jp
jb
ficomps
daa
stos
and
jle
jb
push
pop
jno
mov
jp
aaa
lret
jae
ja
inc
fcom
or
mov
out
pushf
daa
fwait
and
jle
jb
dec
pop
lods
jecxz
daa
sbb
jb
cmp
sub
fstpl
nop
sub
jbe
mov
sbb
xor
lea
addr16
shlb
push
pslld
jb
push
jg
imul
jb
fisubs
jb
fisubrs
pop
movsb
push
pop
jle
sub
add
jmp
jp
mov
sbb
push
dec
cltd
inc
mov
sub
in
shlb
push
mov
dec
cld
pop
jne
ficoms
cmp
sub
movsb
push
jno
and
sbb
jb
fiadds
cmp
or
ret
and
loope
jae
xchg
fmull
test
es
ret
dec
xchg
sub
dec
enter
xor
jl
push
mov
loopne
mov
add
mov
push
pop
imul
jge
inc
das
push
dec
sbb
and
mov
imull
and
movsb
xchg
sub
ja
xchg
repz
fildll
imul
push
xchg
stos
xor
cld
cmp
insb
rorb
std
ss
jns
adc
movsb
aam
mov
cmpsb
iret
sbb
sahf
scas
xor
lcall
pop
movsb
jmp
jecxz
cmc
sub
jl
lcall
frstor
in
mov
push
divb
mov
push
or
insb
lock
sbb
mov
or
call
lods
shrb
data16
enter
jmp
js
adc
mov
mov
cmp
ss
xchg
push
test
movsl
cmp
xor
add
test
ja
fdivrs
ficomps
adc
sbb
mov
sub
insb
sbb
in
movsl
stos
cltd
int
movsl
ss
out
lahf
lcall
jecxz
inc
pop
iret
stos
cmpsl
sbb
and
int
stos
or
push
sbb
enter
jmp
cld
jmp
or
cmp
dec
pop
loop
push
xor
push
push
dec
push
mov
fsub
inc
outsb
les
push
mov
int
fimuls
cmpsl
xor
js
stc
xchg
pusha
lods
imul
add
dec
cmp
jmp
leave
sbb
scas
jb
sub
sbb
ja
rcrl
mov
and
out
repnz
jp
push
outsb
pop
cli
mov
push
lea
popf
ss
pusha
das
loopne
pop
xchg
movl
pop
jbe
test
sub
insb
and
iret
cmp
lods
dec
and
movsb
in
sti
stc
outsb
mov
lcall
dec
fsubrs
xor
and
pop
inc
cmp
sub
cmpsl
es
fcmovu
sub
test
imul
sub
mov
daa
enter
gs
shlb
adc
lret
stos
fstpl
shlb
daa
addr16
fldl2e
repz
jl
daa
das
aad
mov
pushf
icebp
jg
jbe
push
inc
das
jnp
mov
jp
adc
mov
lds
repnz
cltd
mov
pop
push
mov
leave
push
xchg
xor
and
testb
jae
repz
insb
add
test
cld
pop
nop
sar
sahf
inc
adc
lods
pop
xor
frstor
fnstenv
dec
sbb
adc
cli
pop
imul
rorl
or
in
scas
stos
popa
push
imul
cltd
or
pop
rcrl
loopne
pop
pusha
aam
sti
pop
cltd
xchg
test
out
or
xor
push
mov
and
sub
jle
sar
jge
lds
mov
xor
loop
push
pop
test
cs
cmp
push
jne
jge
or
dec
dec
iret
push
mov
filds
dec
mov
push
and
pushf
fsubs
lds
in
inc
push
enter
sub
imul
jne
ror
cli
mov
or
inc
sbb
or
mov
xlat
cmp
insl
adc
test
testl
addb
and
mov
cmp
ss
mov
clc
sub
insb
scas
sbb
pop
mov
xor
or
inc
loop
xor
sbb
insl
xlat
test
pop
sbb
lret
roll
inc
and
fidivrl
inc
and
hlt
cmpsb
out
ja
push
ret
stos
or
test
or
pop
aad
inc
dec
jbe
into
stos
sbb
scas
jmp
shrl
pushf
push
mov
ret
cmp
test
cmp
lret
stc
xor
int3
icebp
pop
jmp
jmp
mov
es
sti
mov
xor
lar
loopne
adc
or
fst
inc
cmp
add
mov
mov
xchg
mov
comiss
popl
lret
mov
pop
and
push
orb
pop
jl
lock
mov
jno
mov
in
sbb
lahf
mov
outsb
mov
lods
sub
sub
ss
in
loope
cmp
jl
pusha
mov
push
movsb
and
loop
outsl
jmp
pop
cmp
push
loope
dec
dec
in
jmp
inc
xchg
fcmovnbe
or
fs
enter
add
ljmp
sahf
push
sti
sbb
cmpsb
add
mov
test
aad
mov
mov
jle
pop
adc
push
out
shrb
lcall
data16
in
mov
dec
aas
test
jo
stos
pop
ja
mov
pop
pop
fstpt
psrlw
cld
cmp
pusha
pushl
sbbb
mov
test
sub
shlb
es
fisubrl
pop
cld
outsl
aas
stc
aas
xor
pop
in
shlb
ss
cmpsb
xlat
es
add
idivl
xor
xor
cmp
ret
cmp
rcl
dec
add
mull
sahf
sbb
sarb
sbb
repnz
std
mov
pushl
xor
jno
sub
shlb
test
mov
daa
inc
clc
stos
pusha
push
xchg
pusha
jecxz
sub
pop
subb
cmp
mov
or
outsb
call
pop
sbb
jecxz
xor
cmpsl
pusha
and
test
jmp
js
fcmovb
sbb
enter
xor
cmpsb
pusha
idivb
dec
push
fsubrs
mov
orb
cmp
test
insl
or
sti
sarl
adc
nop
scas
jge
sbbw
pop
push
lret
xchg
pop
mov
push
sub
pop
sahf
adc
fsubrs
push
cld
pusha
into
mov
ljmp
fisttps
mov
push
scas
ljmp
ss
inc
cmp
mov
add
call
or
mov
in
push
dec
rol
out
sarl
sti
stc
xchg
push
or
mov
push
pop
push
or
dec
cmp
std
rorl
or
gs
in
add
sbb
pop
scas
ds
inc
xchg
repz
int
test
jg
int
mov
repnz
jp
in
xor
int
mov
aad
jp
daa
mov
clc
lods
leave
lods
mov
insl
cmp
and
push
fstpl
jbe
inc
pop
mov
push
stos
inc
add
and
in
mov
mov
les
pop
shlb
fs
int3
test
or
pop
lcall
cmpsl
das
push
fisubl
mov
fldcw
lcall
sub
repz
pop
and
ja
pop
mov
jbe
cmp
sbb
jae
mov
and
loop
jle
stos
daa
pop
data16
int3
hlt
pop
push
xor
arpl
fisubrl
mov
xlat
ret
movsb
shll
lahf
aas
mov
out
sbb
je
cmc
xchg
in
cmp
mov
aam
call
add
lcall
jb
jl
enter
lahf
fldcw
js
sti
jae
adc
cltd
stos
mov
pop
fcmove
je
enter
pop
cwtl
and
mov
sbb
mov
fnsave
aas
cmp
icebp
ret
mov
cs
shll
mov
jo
mov
push
mov
sbb
xchg
lret
icebp
fildll
mov
cmp
loop
mov
push
add
repnz
mov
aas
ja
jns
push
push
cmp
out
cltd
cli
and
push
fcomip
orl
outsl
push
in
jle
xchg
daa
stc
pop
mov
lods
and
sbb
imul
mov
aas
outsb
int
pop
enter
pop
ljmp
das
jl
adc
xchg
and
icebp
fcomp
test
pop
mov
dec
and
xor
pusha
mov
ret
sbb
jp
push
outsb
jmp
cmpl
adc
aaa
push
testl
loope
jge
or
push
cmp
out
mov
iret
sbb
or
cmp
lret
insb
pop
out
call
and
sar
xor
pushf
idivb
popf
jle
mov
jne
push
or
xchg
add
mov
and
out
out
mov
leave
inc
in
iret
or
cmp
xor
push
cs
cltd
jae
xchg
cmp
or
dec
js
fcomps
vpackuswb
push
popf
ret
mov
add
pushl
mov
sar
sbb
mov
adc
inc
mov
mov
mov
cmp
faddl
add
xor
mov
inc
and
stos
iret
mov
shr
mov
shll
andl
or
aad
movsl
popf
mov
imul
rcrl
int
adc
enter
pop
jmp
mov
test
in
fld
adc
in
dec
pop
cmpsb
pop
push
cmp
cmpsb
adc
push
lcall
das
jnp
mov
movl
scas
pop
leave
push
imul
mov
or
loop
or
shll
pop
ret
sub
fsts
push
xchg
ftst
mov
je
inc
dec
jl
bound
pop
and
fcomps
into
jo
mov
aad
icebp
mov
or
lcall
push
mov
cs
lret
mov
addr16
cmp
mov
pop
les
mov
push
ljmp
push
pop
push
int3
mov
jne
pop
fstpl
adc
adc
push
js,pn
xchg
scas
stos
push
mov
or
mov
xor
inc
cmp
xchg
xchg
xor
mov
mov
insb
in
jg
ret
mov
stc
inc
in
popa
rcrb
and
pop
out
lcall
xlat
leave
movsb
stc
cli
mov
out
sti
js
lock
rcll
inc
mov
aas
mov
xchg
sbb
fldenv
fwait
int
mov
mov
cmc
jno
cltd
fsts
aaa
test
sub
mov
aaa
fdivrl
xchg
and
and
js
mov
pop
test
leave
pop
aaa
daa
stc
fsubs
cld
jae
inc
sub
dec
out
aam
les
add
fs
mov
ljmp
adc
in
cmp
stos
add
outsb
mov
int
or
ss
jae
pop
mov
sub
mov
push
mov
or
mov
sub
mulb
push
je
enter
cmpsl
cmp
outsb
fisubl
popa
outsb
lcall
xchg
lcall
or
or
cmp
les
push
rcrl
push
sbb
repnz
inc
add
mov
enter
sbb
mov
add
cmp
adc
cli
mov
xlat
aas
jle
imull
inc
mov
icebp
test
add
in
xchg
sarb
push
hlt
jno
or
icebp
mov
mov
mov
mov
add
push
cmpb
push
and
xor
mov
movb
imul
and
fistps
cmpsb
test
and
push
jl
pop
inc
loopne
js
dec
test
xchg
or
outsb
jg
bt
push
cmp
clc
leave
xchg
cmpsb
xor
mov
sbb
sbb
jle
lret
ffree
dec
dec
ljmp
and
mov
je
cmpb
sbb
bound
adc
cltd
mov
mov
cmp
bnd
int
cltd
pop
xlat
iret
and
push
pop
mov
sbb
and
mov
sti
or
imul
outsl
mov
inc
je
cs
jo
dec
lods
push
mov
dec
rcll
jp
and
mov
fdivr
jno
inc
pop
or
inc
sub
xor
dec
cld
xchg
add
es
jl
cli
push
aas
scas
in
rcl
sbb
loope
fmuls
lods
mov
pop
jbe
pop
loopne
sahf
jle
push
mov
sub
fucomip
es
scas
repz
cmp
pop
inc
or
pop
mov
in
into
decw
add
fsubr
push
pop
cmp
pop
mov
in
ljmp
xchg
or
iret
fiadds
outsb
mov
outsl
jmp
stos
shr
cmp
rolb
mov
push
xchg
into
pop
lret
jecxz
loope
notl
sub
imul
and
or
ljmp
shrb
std
loopne
outsl
dec
mov
or
and
lea
icebp
mov
push
sbb
aaa
adcb
jnp
std
ss
add
sub
push
sbb
in
movsl
cwtl
inc
xchg
push
push
fwait
cmc
ret
inc
stc
cmp
insb
cmp
push
push
imul
and
add
mov
xor
push
imul
pusha
test
xor
mov
jecxz
mov
dec
mov
rorb
rcrl
cmp
mov
jbe
mov
adc
sbbl
or
pop
enter
mov
mov
mov
cmp
stos
sbb
xor
lock
cmp
ret
or
fwait
inc
outsl
mov
jbe
pop
pushf
sub
or
xchg
xor
adc
fsubrl
cltd
dec
in
stc
push
outsl
push
xor
rcl
jl
lret
jl
cli
jno
jo
mov
addr16
adc
dec
ja
mov
fldt
shrl
jns
lods
sbb
sbb
mov
lahf
cmp
add
sub
and
push
inc
out
cwtl
aas
add
sub
push
jl
jo
imulb
imul
xor
test
rolb
mov
jns
or
and
out
gs
and
add
out
mov
push
jae
loop
inc
fwait
push
movsb
push
int3
loop
dec
sub
fcmovnu
add
sahf
adc
lds
dec
mov
std
mov
push
lret
aaa
cmp
dec
pop
mov
jle
push
loopne
cld
lods
je
movsb
lret
or
xor
xchg
js
cmp
push
mov
je
add
jp
push
xchg
lods
dec
popf
adc
and
push
mov
jne
stos
sub
clc
jecxz
mov
mov
push
and
in
es
dec
add
lret
ret
pop
ljmp
lods
add
mov
inc
mov
fmull
pop
sbb
xchg
mov
test
pop
fwait
lret
filds
mov
imul
pop
inc
stc
xor
or
jp
test
inc
ret
mov
lcall
sbb
js
mov
and
push
outsl
mov
ss
cmp
mov
nop
push
sti
stos
mov
lcall
loopne
cmp
mov
cmp
lcall
scas
into
dec
dec
and
andb
loop
jbe
popf
popf
xlat
xchg
lods
test
or
sbb
push
pop
sbb
cli
daa
xchg
fmull
push
inc
cmp
repnz
pop
cltd
xchg
push
js
sbb
notl
mov
add
inc
jmp
jl
and
mov
pop
mov
int3
ljmp
cwtl
ds
ja
mov
mov
inc
xor
lahf
jecxz
cmc
sbb
mov
add
pop
out
fsubrl
cmpsb
in
loopne
daa
fwait
shll
stos
pusha
stos
xlat
inc
data16
cmp
mov
inc
je
je
ss
jnp
or
cmp
mov
sub
int3
fisubrs
xor
out
xor
or
popa
js
mov
jge
es
subb
cli
push
aas
lds
inc
ja
ds
mov
in
dec
fcomp
lcall
lret
jnp
jns
push
mov
adc
pop
fs
and
bnd
xor
jecxz
ret
and
nop
mov
pop
pop
mov
sbb
andl
jg
cltd
mov
lret
adc
popa
mov
mov
cltd
icebp
bound
mov
pop
or
ficoml
dec
cli
fucom
fwait
xchg
sbb
test
cmp
addb
bound
sahf
lea
inc
push
add
jle
jge
fnstcw
mov
les
xor
cli
sub
and
loopne,pt
or
jo
ss
mov
lea
mov
xor
rcll
int3
push
sbb
mov
mov
and
int3
ret
cli
imul
mov
mov
inc
outsb
and
pop
shll
pop
mov
clc
cmc
mov
add
aam
mov
xchg
add
adc
loop
pop
adc
jmp
insb
das
cmp
add
sub
ds
stos
popf
scas
stos
jno
sbb
outsb
jns
mov
jp
sub
shll
testb
je
push
sub
xor
sub
sub
pop
adc
xlat
cmpsl
xor
jmp
test
ds
test
add
stos
cwtl
or
fisttpl
test
sahf
lock
repz
cmp
sub
cli
shr
lcall
ljmp
negl
jnp
mov
rcrb
ja
in
scas
shlb
jg
stos
rol
bound
add
into
inc
and
orl
sub
out
lcall
popf
lods
mov
inc
jbe
roll
jo
or
push
push
rorl
test
sub
cwtl
stos
iret
mov
and
sbb
dec
je
push
push
cmp
add
xor
cmp
mov
roll
inc
fadds
lods
adc
lahf
lret
xchg
fs
aad
arpl
sbb
and
test
in
cmpsl
mov
sub
cmc
out
cmp
into
jg
mov
notb
fwait
scas
xchg
sbb
pusha
rclb
adc
mov
dec
xor
outsb
dec
insl
pop
and
xor
push
cmp
jge
shlb
jp
out
call
stos
mov
push
sahf
pop
ret
push
pusha
pminsw
bound
sbb
outsb
dec
daa
ret
mov
inc
push
lret
movhps
add
outsb
dec
movsb
jle
xor
sub
and
leave
cmp
sbb
outsl
pusha
test
mov
into
adc
outsb
enter
mov
xchg
push
sub
cmp
js
cmovb
pop
sub
pop
dec
movl
sahf
sub
cld
cwtl
fsubrp
pop
adc
daa
ss
dec
in
lods
call
std
out
clc
xchg
decb
imul
sahf
push
jnp
imul
sahf
cmpsb
scas
cmc
in
popf
and
les
jb
xor
mov
loop
mov
mov
pop
jnp
fs
imul
sbb
mov
shl
hlt
pop
lods
jnp
es
dec
mov
test
sub
and
lcall
bnd
dec
jbe
pop
pop
adc
es
pop
insb
xchg
shlb
pushf
jae
cmc
sbb
jns
das
mov
sbb
mov
inc
in
fs
insl
dec
lods
lahf
leave
incb
loopne
push
jecxz
fisubrl
mov
cmp
mov
dec
and
fiadds
dec
mov
leave
idivl
mov
dec
cli
cmpsl
xlat
lods
inc
rcrb
out
push
push
sbb
aad
xchg
or
jno
cmp
lods
repz
lcall
mov
iret
lods
leave
orl
sbb
jno
inc
cltd
fwait
stos
jle
or
insb
cmpsb
pop
sub
xchg
out
adc
arpl
dec
shr
fprem1
stos
xchg
data16
sbb
imul
pop
repz
mov
or
dec
cltd
data16
inc
int3
das
xchg
sbb
stos
daa
inc
mov
rorl
push
adc
lods
sub
ja
shll
stc
xchg
shlb
bnd
in
push
sub
int3
sbb
insb
mov
or
mov
inc
ja
in
push
fldt
mov
sti
ss
push
lcall
aas
ficoml
shrl
sub
push
mov
iret
mov
inc
mov
xchg
sbb
cmpsb
imul
out
fs
in
mov
xor
dec
scas
pushf
pop
mov
lret
dec
sahf
cld
rcrl
enter
das
cmpsl
adc
pop
enter
aaa
stos
ja
xor
pop
sahf
mov
rcrl
cmpsl
sbb
shrl
lret
mov
and
cwtl
pop
es
fidivrs
lock
inc
add
rorb
shrb
dec
scas
inc
sbb
ds
cwtl
sub
stc
xchg
dec
add
mov
push
fstps
stos
adcl
fwait
cltd
mov
mov
fmull
sbb
pop
jp
and
mov
cmpsl
pop
adc
popf
pushaw
ret
scas
out
dec
inc
movsl
xchg
ret
insb
imulb
es
jge
jp
nop
sti
icebp
or
pop
adc
sahf
push
jp
sti
js
mov
jne
cmp
and
sub
push
sub
loopne
adc
dec
lods
cmp
jo
shlb
nop
out
dec
mov
xor
sbb
jmp
and
hlt
mov
pusha
pop
xchg
ss
xor
xchg
jae
pop
or
or
lcall
dec
pop
inc
fwait
and
jge
rcrb
ja
cmp
movsb
and
stos
sarl
push
mov
and
scas
push
sub
xorl
mov
test
mov
mov
adc
push
mov
sbb
rcll
std
adc
jmp
mov
cmp
push
arpl
xor
xor
pop
pop
and
jl
mov
mov
jne
fs
sbb
xchg
push
mov
push
out
leave
ret
xor
loop
inc
jmp
mov
je
je
in
pop
or
enter
and
pop
or
cmpsl
out
cld
or
push
mov
stc
inc
aas
std
mov
pop
xchg
add
sub
pop
mov
or
dec
lods
sbb
pop
out
jo
sub
frstor
sub
jae
mul
xchg
fcomps
cmc
das
mov
sahf
lcall
mov
pop
adc
fidivrl
and
sbb
movsl
fldl2e
gs
xchg
cmp
imul
test
mov
adc
cs
and
lea
dec
rclb
sbb
mov
sahf
inc
jp
lahf
sub
mov
cmpsb
pop
cmp
out
lcall
movsl
cmpsb
aam
subb
je
shrb
ss
sbb
or
stc
mov
push
jnp
cmp
mov
jecxz
out
je
xchg
aad
repnz
cli
or
test
sbb
mov
jae
les
cmp
pop
jle
ds
les
xchg
add
mov
movsl
adc
push
fisubl
hlt
fld
and
dec
cmp
dec
fbstp
stc
in
fildll
cld
cmpsb
xor
jmp
fsubrl
out
sbb
mov
dec
aad
sub
lods
pusha
cld
or
mov
cmp
pop
pushf
lret
nop
loope
fwait
sub
push
insb
lods
jge
int
cmp
push
jns
clc
xchg
cmp
lcall
dec
jno
shrl
jle
lret
daa
lock
lahf
inc
dec
sub
xchg
adc
popf
mov
add
and
push
add
and
test
jge
mov
fdivs
call
movsl
lods
mov
cmpsl
cli
adc
rclb
mov
xlat
xchg
dec
and
pop
add
jbe
push
mov
and
or
testb
mov
dec
in
jle
addr16
movb
sarb
lods
sti
or
das
stc
ret
push
mov
pop
jp
xchg
xchg
inc
std
adc
and
sub
dec
mov
shlb
and
addr16
fwait
and
cmp
pushf
shrl
popa
enter
es
js
xchg
dec
mov
enter
testb
xor
fsts
sarl
sbb
or
fdivrl
and
scas
js
push
mov
adc
gs
movsb
mov
cltd
xchg
cmp
imul
mov
and
push
test
fcomps
cltd
inc
jp
jnp
scas
gs
sbb
bound
xchg
scas
adc
mov
stc
iret
lcall
mov
dec
fadds
cmp
sti
repz
mov
scas
lds
xchg
rol
adc
pop
shll
into
inc
dec
mov
out
hlt
cmp
repz
popa
mov
xor
jge
icebp
jns
push
clc
rcrl
stos
loope
xchg
fcoms
adc
insb
xor
xor
sarl
cmp
enter
aam
stos
dec
fmul
mov
sbb
stc
shrb
das
outsb
fisubs
push
or
out
xchg
sti
orb
or
imul
jp
pop
addr16
xor
in
aas
lock
inc
popf
xor
loopne
rclb
je
aam
inc
dec
ss
inc
aad
mov
adc
sarl
and
dec
stos
iret
popf
push
insb
xchg
lret
inc
xchg
fwait
lcall
jo
or
jg
sub
xor
mov
or
scas
xlat
stos
mov
rorl
dec
xchg
xchg
sub
adc
push
sub
mov
sub
dec
mov
int3
bound
lahf
lcall
jl
push
cmp
dec
cltd
mov
cmc
push
lcall
push
cmpsl
or
xor
lret
mov
and
mov
aam
out
pop
sub
sub
ss
call
pop
int3
jnp
mov
pop
imul
dec
mov
mov
mov
call
sub
imul
sub
mov
mov
inc
xchg
cli
shll
leave
in
int
ljmp
loop
fsubr
sub
fs
mov
jp
xlat
pop
cltd
repnz
dec
mov
jle
xor
and
sti
cmp
and
add
mov
and
das
pop
pop
push
push
mov
dec
cwtl
outsb
or
pusha
test
test
cld
ljmp
pushf
sbb
pop
aam
ja
stos
mov
imul
sub
cmp
push
mov
push
lret
les
loopne
int3
sbb
loopne
stc
inc
cld
mov
lods
jnp
arpl
data16
inc
add
test
lret
xor
and
pop
imul
test
inc
mov
mov
jecxz
arpl
shrb
subb
idivb
loopne
mov
sub
pop
mulb
sbb
push
xchg
mov
popa
popa
shll
push
pop
sub
mov
sbb
repnz
and
mov
stos
jbe
fidivrl
cwtl
ss
xor
iret
mov
call
popf
test
xor
jp
cmc
sub
cwtl
xor
pop
lock
into
addr16
jp
push
pushf
rorl
daa
pop
js
imull
lds
mov
inc
mov
xlat
lods
pop
mov
fidivrl
mov
push
and
mov
pop
test
cli
rclb
dec
add
clc
dec
aad
es
xor
add
push
sub
or
push
cmp
call
es
push
mov
addr16
and
mov
jl
jle
push
cmp
mov
out
jno
rcrb
jp
idiv
and
jl
xorl
and
in
mov
pop
add
dec
fidivl
imul
xlat
call
jns
ror
xchg
mov
pop
jg
xchg
ficoms
xor
enter
push
fsubrs
pop
xchg
jae
imul
jp
push
jns
adc
bound
cmp
test
repnz
mov
out
into
cli
lret
rcr
lcall
int
repnz
xchg
jecxz
and
jp
mov
push
and
xlat
xchg
data16
pop
jl
push
pop
pop
mov
jmp
fidivrs
fsubrs
inc
fildll
ljmp
insl
loope
xor
sbb
cmpb
sbb
mov
inc
repnz
lret
add
cld
shll
jge
pushf
mov
or
bound
call
push
test
sahf
fucom
popf
xchg
loopne
stos
jnp
cmpsb
mov
xor
fisttps
xchg
aam
shlb
fstl
jo
pop
popf
aaa
in
mov
jnp
xchg
mov
cmp
fsubrs
out
fsubrl
jecxz
mov
pop
push
loop
clc
cmpsb
pushf
aam
in
sarb
cmp
cmp
mov
sub
mov
cmp
mov
sbb
mov
and
inc
xchg
sub
mov
sbb
stc
aad
jnp
int
rorl
lahf
mov
ret
addr16
mov
cmp
jns
dec
sbb
xchg
jl
insl
adc
into
fsubrs
jge
insl
into
pop
inc
loop
mov
xor
ss
outsb
jg
out
jmp
ljmp
cmp
ret
mov
adc
xchg
push
sub
pop
jecxz
pusha
jns
dec
pop
sti
data16
rcl
in
cmp
push
adc
dec
addl
aad
push
mov
movsb
fnstenv
push
xchg
jb
sub
scas
push
xchg
adc
push
ret
sahf
popa
jnp
lcall
cwtl
sbb
fisttpll
cmp
aam
sbb
mov
daa
lcall
cmp
push
push
cld
push
bound
inc
jge
add
mov
cmp
stos
mov
movsb
mov
inc
cld
repnz
cld
xchg
mov
jo
rcll
xchg
dec
xlat
add
hlt
and
lods
clc
arpl
mov
repz
add
jne
add
lods
jb
mov
mov
dec
push
lock
popa
lcall
rcll
push
xor
and
mov
jmp
fsubrs
movsl
mov
cmp
addr16
push
jbe
mov
xor
lods
int
sub
loopne
mov
dec
repz
movsl
inc
push
cmp
dec
fisttpll
stos
pop
outsl
mov
and
dec
int3
movsb
nop
jmp
sub
addl
insb
clc
call
and
gs
clc
fmuls
sub
and
mov
scas
pop
dec
mov
popf
stc
mov
adc
ljmp
xor
jp
dec
or
lock
ja
jb
jecxz
jle
cmp
lret
stos
movsb
test
sbb
outsl
movsl
and
nop
nop
clc
test
pop
scas
mov
cmp
mov
arpl
inc
cmp
fnsave
push
daa
cld
mov
dec
or
fwait
into
es
mov
test
inc
and
sti
lods
dec
aaa
mov
push
lods
insl
mov
stos
xchg
xchg
jge
mov
in
sub
pusha
push
fucom
das
leave
shlb
jp
jne
xchg
adc
jle
inc
xchg
adc
jle
or
loope
and
add
dec
sti
cmpsl
dec
daa
push
inc
add
rclb
aaa
into
mov
lcall
cwtl
ror
xchg
xor
gs
in
dec
add
and
call
xchg
gs
inc
bound
mov
fmuls
cld
out
sbb
cmpsl
pop
mov
mov
adc
adc
mov
pushl
xchg
adc
jns
rclb
xchg
in
pop
jl
xchg
pop
jge
es
ds
cltd
jo
aaa
popf
xchg
ss
fimuls
roll
fwait
cmp
jp
sarb
cltd
sahf
mov
cmpsl
daa
mov
cmpsb
adc
nop
or
jg
pusha
loope
xchg
dec
and
xor
mov
cs
call
mov
mov
aad
imul
pop
jne
lret
mov
outsb
jne
aam
mov
das
daa
xchg
std
leave
out
add
dec
mov
jecxz
cld
jne
fisubl
mov
cmp
ss
aaa
jns
daa
dec
jae
mov
mov
jge
push
dec
data16
and
mov
pop
inc
aaa
shll
sbb
mov
adcl
add
and
outsb
inc
cmc
push
test
mov
fsubrs
mov
adc
jnp
xor
stos
flds
hlt
xor
aaa
and
jg
data16
cmpsl
cmpsl
pop
test
jae
clc
test
sub
rcl
test
ret
and
and
sub
xor
adc
mov
pop
shlb
and
and
pusha
js
sub
in
pop
js
mov
outsl
mov
cmp
and
mov
lods
push
insl
rcl
or
into
lock
ret
iret
mov
cmpsb
into
inc
jmp
fcoms
int
neg
int3
rcrb
movsl
cli
gs
push
xlat
or
aam
sub
or
popf
fdivrl
or
xor
movsl
sbb
test
call
mov
fadd
xchg
stos
mov
xchg
es
xor
lock
ret
je
or
sbb
fbstp
shll
lea
insl
setle
xor
pop
mov
inc
sti
cwtl
xchg
xchg
pop
pushf
cwtl
aaa
cmpsl
aaa
call
xor
and
fistps
adc
xchg
mov
outsl
or
and
iret
insl
adc
in
push
xor
inc
jl
pop
rcrb
jmp
sub
out
imul
xor
in
bound
dec
test
enter
xchg
inc
jno
dec
gs
pop
int3
and
dec
gs
test
sbb
push
or
xchg
inc
outsl
xorl
lret
xor
loop
xchg
inc
xchg
js
cmp
push
xor
sub
dec
and
sbb
adc
pop
fdivl
mov
js
lods
inc
imul
sbb
out
test
sbb
stos
xor
loopne
sti
insl
bound
std
enter
add
in
mov
jl
scas
adc
arpl
andb
cmc
popa
sahf
iret
and
jns
push
add
xor
sub
push
pop
push
pop
adc
jg
fwait
pop
cltd
test
insl
adcl
pop
pop
test
shll
adc
pushfw
mov
mov
gs
mov
pop
inc
popf
lahf
fimull
cmpsb
lods
cmp
daa
push
je
leave
iret
mul
ret
daa
es
adc
es
inc
out
subl
push
adc
aam
pop
sti
das
cli
call
ficomps
inc
xrelease
idivb
xor
out
jmp
decb
scas
lret
or
lock
scas
xchg
mov
inc
cmpsl
pop
xor
mov
in
repnz
lret
shr
xor
jmp
pusha
and
mov
mov
sahf
dec
cwtl
pop
add
into
jno
out
xchg
cmp
mov
insb
cmp
subl
andl
in
adc
cmp
fldenv
out
mov
mov
sub
push
es
xor
adc
call
cmp
stos
js
movsb
cwtl
ret
push
inc
xor
test
push
cmp
movsl
lcall
add
arpl
lds
out
jmp
sbbl
pop
inc
aaa
push
jne
push
stos
lds
inc
out
lea
cltd
ret
xchg
stos
enter
add
scas
fwait
out
mov
xchg
cs
lds
das
pop
daa
fnsave
stos
mov
fbld
cmpsl
insl
jns
arpl
movsl
cmp
sub
push
pop
in
inc
lcall
xchg
dec
xor
mov
jns
movsb
in
jae
jmp
das
dec
addr16
andb
jnp
fstl
mov
and
addr16
cmc
out
mov
ss
jmp
mov
dec
cltd
repnz
lods
add
lock
dec
loope
clc
fwait
adc
cli
xchg
mov
cli
ss
loop
loopne
mov
mov
popa
adc
and
aas
mov
or
add
rorb
sub
inc
sti
xchg
push
and
cmpsb
cmc
jl
cld
jle
stos
mov
ja
lods
lods
pop
push
mov
push
jbe
xchg
popa
cmp
jmp
gs
mov
mov
mov
rcr
outsl
push
nop
test
dec
push
loop
mov
xchg
jnp
into
mov
das
dec
cld
sarl
xor
ret
stc
repnz
and
fyl2xp1
mov
adc
es
clc
iret
cmp
jmp
leave
sub
xchg
movsb
jbe
sahf
push
in
push
ds
dec
cmp
sarb
and
out
rcl
test
xchg
cmc
loopne
xchg
inc
push
push
cmp
add
xchg
mov
shll
jmp
jecxz
stos
xchg
and
call
rorb
hlt
or
ror
cmp
cld
sub
imul
stc
and
cmp
xchg
pusha
das
sub
aam
or
das
clc
mov
pop
shrl
fnstenv
push
pop
push
dec
cltd
and
adc
data16
inc
fs
add
xor
inc
mov
std
mov
roll
cwtl
inc
fisttpl
push
mov
lret
movsl
lcall
xor
ret
push
movsb
rclb
pop
cmp
ja
ss
lea
lahf
ficoms
pop
in
lcall
xchg
cltd
fld
jg
scas
push
negl
shll
xchg
push
jle
mov
outsb
sub
xor
push
dec
in
xchg
sahf
jns
in
or
mov
push
mov
mov
mov
inc
fwait
push
dec
popf
shl
or
orb
cmp
mov
push
jge
sbb
arpl
into
pusha
std
lcall
sahf
xchg
push
popa
mov
or
insb
cld
mov
pop
ljmp
rcrb
inc
cmpb
mov
mov
jns
bound
push
xchg
push
xchg
popf
fldenv
dec
lret
.byte
test
imull
