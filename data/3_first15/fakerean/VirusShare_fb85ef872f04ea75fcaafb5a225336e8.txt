sbb
add
mov
cmp
movl
fs
sub
mov
mov
insl
or
aas
jne
jnp
cltd
out
jmp
dec
push
mov
cmp
shl
movsl
imul
add
loopne
push
lods
push
jmp
div
movsb
hlt
pop
test
test
jmp
repz
add
lret
fistl
test
xchg
xor
popf
insb
adcb
loope
jl
pop
mov
pop
mov
call
test
insl
jmp
popf
insb
cmp
nop
int
lods
adc
cltd
cld
xchg
and
movsb
push
push
sbb
subl
rorl
sbb
clc
cmc
ret
dec
dec
mov
pop
cwtl
xchg
mov
cmp
cmp
inc
pop
push
cmp
hlt
and
aas
jp
out
test
pop
pop
stos
add
pop
daa
jecxz
xchg
push
add
push
rolb
test
mov
xchg
clc
push
inc
cmp
loop
mov
jae
jnp
fisttps
and
sahf
push
les
push
ret
push
lret
sbb
jecxz
xor
loope
popa
adc
test
aaa
test
lods
mov
jae
pop
and
push
std
cld
xchg
pop
in
ficomps
jb
jae
orb
sbb
clc
mov
fwait
pop
mov
mov
lock
cltd
and
jb
pop
aaa
xchg
add
lret
adc
imul
mov
test
inc
cld
jmp
shlb
outsb
inc
push
xchg
pop
pop
xchg
xchg
out
roll
push
pop
loopne
push
bndldx
inc
push
xchg
das
xchg
loop
sbb
add
jecxz
cmp
mov
dec
test
imul
or
pcmpgtb
inc
sbb
test
cld
popa
imul
insl
mov
stc
iret
loope
or
cmpsb
cwtl
fs
adc
mov
sub
adc
call
imul
fidivrs
mov
fdivs
lahf
mov
xor
arpl
movsl
mov
fdivs
loopne
shrl
push
xchg
fimuls
mov
xor
pop
in
sbb
incb
inc
xchg
rorb
xchg
mov
test
ja
test
and
cltd
aas
xor
jns
arpl
ficoms
mov
sbb
mov
lock
es
in
insb
mov
mov
mov
ljmp
mov
push
scas
mov
cwtl
jmp
pop
adc
scas
cli
pop
shll
leave
in
lret
pusha
xchg
inc
sbb
xchg
jmp
inc
add
sbb
sub
xor
mov
mov
xchg
lods
sbb
nop
push
cmc
jae
mov
xor
idivb
sub
pop
leave
or
dec
js
and
add
loopne
dec
ja
adcb
mov
inc
xlat
jp
inc
push
fcmovnbe
cmc
movl
lea
push
push
nop
pop
bound
add
add
mov
mov
jmp
push
lret
out
orl
loope
xchg
inc
fidivl
pop
dec
inc
lods
movsb
sub
loopne
mov
pop
or
mov
jne
jge
hlt
icebp
hlt
add
stc
and
xor
incl
lea
imul
lock
lret
jg
or
int3
ret
fdivrs
sahf
xchg
jl
aaa
inc
or
aad
sbb
and
arpl
mov
dec
sar
add
jl
rcrb
sti
lahf
cwtl
insb
pop
xor
mov
movl
out
and
ja
cwtl
faddl
loope
clc
ds
push
inc
int3
cmp
dec
outsl
fsts
and
sarl
dec
mov
gs
pop
lea
loopne
lods
sbb
mov
add
jecxz
add
inc
sbb
cmp
iret
jle
and
xchg
fsubl
aaa
cld
movsl
nop
and
jecxz
fwait
mov
sbb
xchg
dec
and
dec
pop
mov
xchg
or
inc
outsb
xchg
pop
lahf
insl
push
inc
cmp
lret
movb
stc
and
dec
stc
scas
lcall
fsub
lahf
pop
int3
mov
loop
lret
shrl
rol
sub
lretw
nop
jp
and
mov
out
inc
pop
mov
xor
mov
and
and
sub
pusha
or
jp
mov
loop
xor
arpl
mov
push
mov
dec
pop
mov
mov
dec
push
jl
sahf
out
dec
aad
insl
bound
pop
dec
inc
adc
jp
lret
xchg
test
mov
cmpl
imul
xor
push
rorl
ss
mov
call
mov
push
gs
add
sub
orl
mov
mov
cmp
xor
push
mov
mov
sub
adcb
bound
push
and
add
add
dec
add
insl
pop
lock
pop
icebp
jg
cltd
jns
or
insb
int
jl
pop
sbb
fs
ja
mov
pusha
insb
mov
mov
jo
std
jo
out
loope
xchg
sub
mov
adc
push
popf
push
mov
xlat
cwtl
xchg
popf
ds
mov
psrad
out
pop
sub
lret
cmp
xchg
orb
je
jmp
js
inc
in
lahf
or
addr16
imul
cltd
fs
pushf
sbb
jbe
mov
dec
mov
jp
ljmp
cmp
dec
arpl
sub
js
out
mov
jbe
in
cmpsl
jns
out
xchg
test
add
bound
add
lds
pop
inc
iret
nop
sub
outsl
ret
in
mov
test
aam
mov
dec
sub
mov
imul
mov
imulb
aad
lea
xor
stos
xor
mov
std
testb
xor
mov
popf
xor
mov
lcall
dec
xor
mov
pusha
incb
xor
jle
bound
jge
jl
loopne
outsb
cld
sub
ret
mov
subb
xor
mov
pop
mov
sbbl
xchg
xchg
push
pop
aam
pop
ret
clc
and
inc
mov
cmp
cmp
dec
ljmp
push
push
mov
jns
push
inc
rorl
lret
mov
fnstenv
ja
loopnew
rolb
into
inc
sbb
pushf
mov
outsl
lods
in
test
lret
pop
pop
inc
xchg
sbb
daa
dec
sub
test
xorl
icebp
inc
or
icebp
je
hlt
and
push
popa
jmp
cmp
and
lahf
mov
mov
sub
pop
data16
stos
mov
cld
push
testl
jae
loope
jg
rcr
movsl
ljmp
and
std
inc
dec
aas
mov
ljmp
int3
ficompl
dec
mov
mov
mov
jne
sub
or
in
out
dec
mov
stos
mov
pop
sbb
das
jmpw
push
int3
mov
pop
popa
mov
in
push
pop
cmp
jns
jge
mov
pop
repz
bound
adc
lods
cmpsl
pop
or
std
je
dec
cld
in
xchg
loop
and
lods
xchg
shl
ss
sahf
add
adc
outsl
icebp
pusha
sti
es
cmc
push
pop
cmpsb
cmp
push
jo
out
fwait
mov
sub
cmp
jl
scas
mov
cmpsb
xor
mov
mov
push
mov
mov
cmp
fbstp
mov
dec
enter
cli
cmp
das
aaa
push
rclb
xchg
sub
mov
push
jne
aas
mov
or
adc
arpl
pop
xor
cmp
or
outsl
jns
mov
dec
add
add
daa
aad
xor
adc
lds
std
jecxz
pusha
pop
xor
inc
out
pop
jge
add
je
jge
lods
fnsave
bound
addr16
lahf
dec
ljmp
incl
scas
cmpsb
xor
adc
fiadds
jnp
jg
pop
fcoml
leave
arpl
testl
fdivrl
rorb
sub
outsl
lods
call
push
loope
or
mov
ja
test
fisttps
test
pop
add
or
xor
xor
fstp
sti
jb
in
icebp
mov
sub
mov
popa
inc
or
mov
pop
cwtl
inc
adc
pop
icebp
add
outsb
xchg
gs
and
xchg
mov
xchg
stos
les
inc
lods
idivb
mov
jg
in
xor
das
and
lcall
test
push
ljmp
dec
mov
xor
in
andb
shlb
daa
scas
push
xlat
mov
sub
test
pop
push
lods
and
sbb
gs
into
dec
movsl
js
adc
lea
scas
sub
cmpsl
jnp,pt
or
shll
dec
cmp
outsl
mov
fcomp
shlb
mov
jecxz
stos
xchg
insl
push
inc
mov
addl
lea
xor
in
sbb
mov
les
adc
movsb
popa
inc
scas
shlb
mull
sub
xchg
dec
mov
sbb
lock
mov
xchg
or
jb
out
push
and
dec
cli
push
int3
dec
cmp
xchg
push
es
pop
stc
dec
icebp
and
or
nop
outsb
arpl
push
mov
inc
jecxz
cmp
in
push
ja
jge
js
sub
std
inc
cmpl
es
adc
stos
shl
loopne
ds
je
ljmp
and
xchg
inc
filds
adc
cmp
jge
out
inc
loope
cmp
inc
push
xchg
popf
je
movsb
jecxz
mov
lds
movzwl
aad
jge
les
mov
jns
ror
mov
ja
dec
and
iret
lods
cmpsb
addl
mov
mov
add
adc
popa
cwtl
cli
stc
jecxz
adc
in
cmp
sti
or
mov
das
cmp
push
gs
adc
push
ret
fmull
movsb
int3
test
add
into
cli
test
xor
mov
orb
push
outsl
insb
cld
int
jne
cmp
push
js
dec
jge
les
inc
jae
pop
mov
jecxz
mov
scas
push
mov
inc
cmp
mov
adc
aam
cltd
adc
sub
mov
movsl
loopne
xor
loop
xchg
xchg
call
sub
sahf
sbb
mov
sbb
cmp
incb
jo
faddl
ds
cmp
fistpl
call
sbb
and
dec
fildll
idivl
or
adc
adc
sub
mov
js
sub
mov
dec
xor
jmp
jbe
mov
outsl
repz
sbb
imul
imul
cmp
sub
scas
mov
jge
jg
pusha
pop
outsb
daa
inc
mov
sti
out
pop
xor
out
mov
dec
das
sahf
cmp
push
sub
std
push
jmp
ja
add
xchg
xchg
daa
mov
sbb
xlat
loopne
mov
arpl
push
fbstp
mov
or
mov
ficomps
mov
aam
mov
rcrb
xor
sub
mov
das
jns
sarb
test
pop
dec
pop
pop
xchg
fbld
xchg
js
int
inc
push
push
faddl
jo
dec
fcmovne
pop
lahf
dec
cwtl
stc
push
inc
mov
mov
mov
ret
inc
fcomps
das
dec
jbe
jnp
test
mov
xchg
or
repnz
jle
das
repnz
push
push
pop
iret
xorl
enter
data16
out
es
andb
cmp
xlat
and
lock
lret
and
fs
std
sbb
dec
push
mov
adc
and
pop
xchg
out
push
popa
mov
jecxz
push
inc
and
pop
cmp
mov
mov
clc
cmp
add
pop
jbe
pop
sub
lock
mov
mov
push
inc
jae
aas
mov
inc
fnsave
dec
dec
pop
sbb
cmp
pusha
int
add
push
cs
pushf
arpl
dec
shlb
test
fsubrs
in
fisubl
je
ja
sbb
xchg
fcmovu
dec
and
ss
dec
mov
sar
cld
push
ss
jl
xchg
pop
cmp
mov
inc
push
ds
xchg
or
movsl
shlb
and
lcall
cmp
add
repnz
jnp
mov
and
jne
dec
lea
dec
sbb
xchg
sub
sbb
mov
cmpsb
inc
fnstenv
add
lahf
aaa
pushf
xchg
fdivr
rorl
add
xor
push
sub
cs
out
mov
insl
inc
out
push
inc
jne
mov
das
pop
and
inc
test
icebp
cmp
aaa
and
sub
jecxz
mov
sub
sbb
clc
lods
mov
stc
or
or
imul
jno
cmp
ret
jno
jmp
test
push
xlat
outsl
ror
jno
mov
addr16
mov
ret
rep
ss
push
ss
mov
and
sub
cmp
fwait
roll
mov
sub
pop
adc
les
imul
movb
jne
jge
xchg
push
cmp
nop
and
push
mov
and
je
cmp
subl
and
cmpsb
pop
pop
and
add
jno
nop
out
and
cmp
adc
or
jl
in
pusha
cltd
test
jle
mov
push
rorb
out
xor
arpl
cltd
out
xlat
rorb
sti
cmp
cmp
pop
push
ljmp
cmp
out
iret
lods
xchg
fistps
xchg
js
push
xchg
or
into
mov
mov
enter
mov
cmpsb
xchg
add
movsl
arpl
lahf
mov
inc
aam
adc
notb
xor
pop
sbb
rorb
lcall
mov
cmp
je
daa
cmpb
gs
mov
mov
inc
and
lock
gs
call
test
cwtl
fistpl
push
in
pop
repnz
xchg
mov
cmp
jg
fdivrl
in
jae
cmc
mov
and
pop
fisubrs
pcmpgtb
pop
fs
push
jl
cltd
lret
jmp
xchg
pushf
mov
xor
and
pop
dec
mov
test
add
imul
inc
jg
stos
push
dec
sbb
inc
inc
in
sub
lcall
insl
pop
push
mov
cmp
push
call
push
ret
mov
jecxz
cwtl
dec
scas
or
ds
jb
xchg
dec
sub
mov
and
and
pushf
sub
subl
in
sub
mov
push
jg
std
xchg
pop
or
mov
ds
push
jb
pop
stos
ja
push
dec
pop
adc
outsl
incb
mov
cmpsb
dec
cmp
fs
dec
sub
movsl
pop
sub
test
xor
push
xor
pusha
inc
add
jmp
xchg
je
rclb
das
ljmp
cs
daa
jg
mov
jb
pop
add
or
push
add
int3
inc
stc
cmpl
fstpt
adc
fists
sti
std
test
ret
and
adc
mov
pop
inc
push
mov
xor
shrl
fdivrs
stc
xchg
test
test
in
sub
or
xchg
jmp
push
cli
lods
add
cmpsb
dec
decb
and
int3
sub
push
clc
cmpsl
add
lock
add
repz
imul
jp
fadd
ss
add
cld
notb
dec
mov
enter
cmp
sub
fisubl
mov
jmp
xor
xor
mov
jo
adc
add
jno
hlt
push
mov
movsb
xchg
add
sub
lock
in
cmpl
sbb
rclb
lahf
pop
push
adc
push
sbb
bound
cmp
inc
adc
rorl
adc
fnstcw
mov
pop
aas
adc
add
push
js
cmp
sti
xchg
xchg
jmp
jp
insl
movsl
and
ds
inc
sbb
nop
scas
inc
adc
or
adc
xlat
push
mov
xor
or
lds
push
lretw
mov
cmp
movsl
push
bound
enter
pop
shrl
sub
xchg
jp
gs
xchg
pop
push
mov
pop
pop
mul
pop
jb
or
pushf
or
push
mov
jecxz
sub
scas
mov
xchg
dec
jmp
flds
mov
push
jle
xchg
and
xchg
mov
insb
dec
mov
loope
rcll
dec
sbb
fcmovnb
lahf
js
pop
inc
xlat
inc
xor
or
adc
jne
xor
add
cmp
mov
aas
lret
push
and
pop
and
mov
push
mov
scas
pop
jl
sbb
bound
pop
cmp
ret
ret
adc
pop
aad
lret
adc
jbe
pop
lods
jno
push
lock
fxch
ss
push
ret
fsubrs
popf
jnp
not
pop
dec
cltd
mov
jo
mov
test
mov
mov
pop
push
aas
jp
or
out
popa
sbb
mov
shll
sti
sub
or
dec
inc
adc
cmp
cld
inc
cmpsb
and
push
mov
stc
les
in
out
mov
icebp
pop
sbb
movsb
mov
jge
mov
loop
mov
dec
arpl
xchg
xchg
jb
jb
fwait
sub
sbb
dec
mov
push
insb
mov
je
dec
xor
pop
push
pop
push
imul
cmp
es
add
and
movsl
mov
xchg
sbb
cmp
out
repz
jecxz
fs
sub
movsb
add
lret
cmp
mov
push
jns
push
jl
into
push
xor
lahf
and
fildll
sbb
dec
dec
add
fcomps
jle
es
sti
rclb
imul
je
sbb
ret
stc
push
imull
fsubs
call
out
mov
sbb
add
pusha
or
mov
inc
sub
sub
adc
adc
sub
inc
push
cmp
dec
test
sarl
fidivrs
rorb
and
mov
jo
hlt
jae
lahf
mov
push
mov
cmc
aad
shrb
dec
inc
mov
cmp
movsb
insl
or
cmpsl
daa
leave
mov
add
pop
mov
mov
jno
mov
mov
fistpl
push
jb
int
adc
movsb
lds
jns
sub
inc
jl
imul
adc
lea
dec
stos
sub
jmp
fxch
inc
loopne
cmp
add
pop
mov
mov
enter
push
jmp
mov
in
sub
and
sbb
push
decl
mov
mov
mov
jl
push
jbe
pop
popa
xorb
fisubrs
or
adc
dec
mov
orl
or
outsb
sub
cld
jae
lret
les
inc
mov
xor
xchg
dec
xchg
arpl
mov
pop
inc
xchg
std
sub
jmp
shlb
mov
sub
js
dec
add
and
pop
sbb
lahf
mov
orl
mov
cld
mov
xor
pop
or
out
pop
ja
rclb
mov
cwtl
addb
inc
xor
sbb
mov
movsl
aad
add
xchg
dec
mov
lock
xorb
push
nop
int
and
sbb
jg
xor
lods
inc
popf
xchg
popa
stos
loop
cli
std
push
sub
mov
pop
mov
or
mov
hlt
mov
jbe
mov
lret
and
mov
xchg
add
fsubs
sub
jle
and
shll
inc
repnz
jnp
clc
cmp
push
bound
xor
mov
out
or
dec
cwtl
es
mov
cli
or
ja
push
negb
adc
mov
pusha
shrb
pop
mov
mov
add
mov
lret
xchg
sbb
movsl
sub
pop
adc
repnz
jmp
pop
out
cmp
popa
mov
lahf
arpl
xchg
pop
outsb
mov
outsb
out
or
out
add
push
into
iret
popa
in
cmp
and
pop
bound
sub
jnp
fidivrl
jns
stos
lgs
jne
js
jl
inc
lret
stos
xchg
popf
cmp
dec
ret
add
or
lock
xchg
adc
mov
stc
jl
ss
stos
test
mov
daa
ja
push
jns
hlt
and
lea
mov
and
clc
push
ds
sarl
es
pop
in
cli
jmp
adc
scas
mov
jecxz
cvtdq2ps
jp
idiv
loopne
push
pusha
ret
mov
pop
cmpsl
xchg
das
xchg
mov
and
adcl
mov
loopne
mov
sub
xchg
dec
repz
loop
enter
aam
cmp
dec
rcr
xchg
inc
cmpsb
iret
repnz
xlat
fdiv
dec
sbb
lea
orb
xchg
sbb
mov
sub
sbb
push
lret
xchg
out
pop
push
aaa
cmovge
clc
aaa
pop
dec
outsb
mov
push
cmp
popa
addr16
lcall
jp
stc
cmp
sub
sbb
push
rcll
int3
push
xchg
imul
jbe
jno
outsb
and
in
frstor
sub
add
stc
adc
mov
sbb
sub
rolb
push
jle
addb
xorl
sbbl
sub
roll
mov
insb
cmp
mov
fstps
dec
push
sbb
push
cmp
jle
cmpb
mov
scas
imul
lahf
xchg
mov
adc
ret
cld
pop
out
stos
ret
dec
pushf
mov
inc
inc
movsb
addl
or
cmp
insb
xchg
arpl
inc
pop
repz
outsl
ret
mov
lea
push
seta
nop
add
loope
pusha
inc
addb
push
push
jnp
mov
stos
popa
lcall
cmp
push
mov
gs
mov
fisttps
loop
imul
and
mov
cmp
lods
pop
dec
cmp
pslld
shrl
les
jnp
adc
lods
and
xlat
loopne
and
int3
loope
mov
lahf
inc
xchg
outsb
sub
xchg
mov
mov
lods
int3
shlb
data16
add
sub
adcl
stc
shr
jge
sarb
cli
pushf
or
outsl
xchg
mov
push
jg
cmp
and
xchg
pushf
fnsave
inc
in
xchg
cmpsb
jbe
and
add
cmp
cmpsl
xchg
in
sub
in
in
mov
fisttpll
and
test
dec
lcall
outsb
sub
pop
cmpsb
cmp
imul
sarl
lahf
add
rorl
push
push
cwtl
dec
pop
lods
iret
aaa
mov
dec
mov
pop
xlat
repnz
inc
imul
sarl
out
jecxz
mov
cmp
mov
cltd
jmp
adc
mov
xchg
divl
mov
sub
fistps
pop
loop
idivb
in
jl
push
stos
dec
mov
decb
in
add
pop
push
movsl
mov
ret
mov
mov
pop
pop
add
push
dec
scas
cmp
ss
loope
loopne
jmp
mov
jno
lahf
adc
jo
mov
cmp
shlb
xchg
cltd
outsl
mov
xor
ljmp
out
dec
outsl
stos
push
cmp
dec
pushf
sub
dec
push
and
stc
pop
push
test
ds
pop
xchg
fistl
in
sub
les
mov
sahf
lret
push
mov
popf
addl
sub
and
xchg
xchg
bound
insl
paddsw
pop
push
sbb
push
cmp
pop
ret
sub
pop
fsubrs
jl
fcoml
push
cmp
notb
dec
mov
test
mov
jmp
pop
add
pop
arpl
mov
lcall
shlb
sub
dec
je
sbb
mov
dec
dec
xor
xchg
or
fistps
xchg
pop
pop
push
inc
ret
stos
sub
ljmp
outsb
adc
test
adc
mov
mov
inc
mov
mov
inc
ss
and
insl
test
insl
cmp
ja
sub
push
lods
mov
jmp
push
and
outsl
mov
add
or
lret
jae
mov
mov
lds
fs
mov
sub
sbb
outsl
mov
fsubl
add
sbb
mov
ljmp
mov
sbb
dec
xor
xor
outsl
mov
xlat
jno
or
push
addr16
shrb
leave
mov
scas
pop
xlat
lahf
test
popf
dec
inc
out
jle
in
push
and
fcompl
push
pushf
push
pop
jecxz
add
or
nop
lcall
mov
cltd
addb
sbb
mov
das
or
mov
pop
clc
mov
lds
xlat
inc
scas
mov
out
lcall
mov
stos
adc
xor
adc
cs
mov
mov
xor
fs
jno
in
fimuls
jo,pt
shll
clc
sub
negl
xchg
sbb
cmp
mov
dec
ret
shlb
pushf
pop
rclb
and
stc
loop
outsl
testl
pop
sbb
stos
or
xlat
xor
aad
mov
je
das
pop
and
mov
subb
mov
nop
sbb
mov
mov
bound
out
aam
stos
ja
jl
fwait
sub
lods
fdivrs
mov
push
cmpsb
adc
cmpsb
clc
lret
xor
mov
inc
xor
mov
js
add
xchg
scas
sbb
jecxz
xor
mov
mov
jns
mov
outsb
dec
pop
aad
add
dec
pushf
stos
and
ljmp
rorl
mov
adc
adc
sub
push
sbb
mov
adc
es
xor
pop
sbb
dec
sub
mov
jp
dec
inc
ljmp
mov
in
mov
pop
into
in
fisttpll
adc
mov
fistpl
lods
mov
push
ja
push
sub
movsb
mov
xor
xor
mov
fistl
xor
mov
inc
dec
stos
pop
int3
sub
sub
or
cwtl
or
pop
cwtl
js
scas
in
push
inc
arpl
mov
jo
sarb
xchg
pop
inc
movsl
stc
xorl
insl
stc
sub
dec
and
pop
cli
clc
aad
push
jo
push
into
ja
in
push
push
jbe
jge
bnd
out
dec
mov
push
mov
mov
js
jno
inc
jb
shr
or
xchg
ret
jl
stos
mov
jae
iret
adc
sbb
test
fsubs
sbb
out
cmp
lret
sbb
push
out
mov
lods
lea
lods
mov
js
mov
jle
cld
mov
cmc
and
mov
mov
jl
pop
roll
das
xor
dec
cmp
jmp
daa
jno
inc
push
or
pop
jle
cmp
shll
mov
cmp
insb
in
push
jg
popa
sbb
and
xchg
stos
and
lods
in
aas
mov
clc
outsb
or
test
les
jbe
or
push
outsb
mov
je
rcrl
fiadds
lahf
setbe
rol
fdivs
outsb
js
hlt
pushfw
xchg
cmp
mov
mov
jo
jo
fisubrs
add
xchg
decb
shlb
jns
cli
inc
sub
je
clc
fwait
aad
adc
cmp
fildll
sbb
rorl
dec
lea
cld
xchg
out
sbbl
jl
adc
pop
sbb
mov
xor
xchg
pop
in
or
pushf
mov
mov
pop
adc
xor
cmpsb
push
xor
fildl
popf
fwait
cmp
mov
test
ret
push
leave
cltd
ret
xor
push
xchg
js
jbe
test
add
daa
mov
pop
leave
cmp
xchg
fs
push
mov
mov
outsl
orb
das
outsl
cmp
insl
adc
insb
xor
pop
mov
pop
mov
sti
sti
jmp
inc
sub
insb
and
in
lea
xchg
out
gs
lahf
sbb
int
rcrl
in
dec
popf
mov
popa
add
cs
inc
add
sbb
sarb
mov
sbb
xlat
xor
mov
pop
mov
push
dec
mov
fiaddl
out
jbe
outsl
in
mov
nop
test
push
scas
pop
dec
cmp
push
xchg
incb
dec
xchg
xchg
adc
and
stos
jbe
jge
call
out
or
jnp
add
mov
das
sub
lcall
pop
xchg
sarb
lcall
xchg
xchg
cmpsb
dec
adc
iret
loope
sbb
inc
loop
or
jno
pushf
xlat
ds
jle
lea
ret
rol
out
addr16
icebp
push
add
insl
es
pop
arpl
cld
push
jecxz
aaa
cmp
gs
inc
cmp
nop
popa
out
daa
rclb
or
cmpl
rcrl
mov
dec
fadd
shll
lea
dec
out
sbb
lahf
sbb
inc
inc
icebp
jg
je
mov
int3
into
jmp
jg
cmp
movsb
xchg
int3
mov
and
mov
pop
mov
dec
jo
lldt
sahf
sbb
cltd
scas
inc
mov
cli
insl
stos
jb
cmp
movsb
mov
popl
cmp
dec
sub
cmp
into
mov
mov
xor
cmp
mov
xchg
cli
jmp
dec
jnp
push
repnz
psubusb
push
or
dec
pop
icebp
sub
enter
cmpsb
dec
jp
std
fisubrs
loop
insb
cmc
daa
fists
mov
and
mov
pop
xchg
subl
popa
icebp
mov
shll
inc
lods
dec
or
das
stos
fimuls
and
lds
pop
xchg
xor
mov
push
daa
cli
dec
jae
js
leave
stos
std
xchg
and
mov
sub
and
outsl
cmc
jnp
lahf
dec
sbb
test
jae
icebp
mov
loop
notb
fs
jo
add
test
repnz
leave
sarb
out
out
icebp
mov
test
cmp
lods
adc
dec
leave
popa
ja
test
mov
sub
cmovbe
fnsetpm(287
mov
inc
sbb
cmp
pop
je
cmp
dec
mov
xor
sub
mov
out
dec
or
and
gs
rclb
adc
adc
dec
xor
int3
pop
fistl
lods
nop
in
out
mov
les
test
loop
je
out
jp
addl
jmp
sub
jg
push
subb
pop
pop
scas
loope
test
sbb
loop
loop
repz
cmp
mov
sbb
jge
xchg
add
inc
mov
fcompl
and
ret
jmp
adc
sahf
bnd
xchg
jg
stos
jp
rcll
mov
sub
stc
or
add
add
push
fs
and
dec
jns
xchg
push
fadd
nop
dec
and
mov
in
aaa
into
es
push
mov
inc
std
push
cmp
ficoml
shr
push
movsl
jnp
enter
js
xlat
pop
xchg
add
dec
out
jae
fimuls
mov
pop
mov
fcoml
jg
pop
cli
add
xchg
push
in
xor
mov
jo
out
and
push
cmp
and
aas
cmc
cmpsb
xchg
add
ret
pop
mov
stos
ds
xlat
xor
jp
push
push
xchg
shl
cltd
js
mov
lcall
lds
fsubrl
lds
push
imul
mov
fists
add
loopne
test
nop
xor
arpl
sbb
cmp
sbb
ds
push
add
and
mov
or
icebp
hlt
inc
inc
ret
push
lods
pop
jns
push
sbb
sub
je
adc
cmp
mov
pop
call
int3
scas
sub
mov
cmpsl
add
sahf
fdivl
mov
dec
fcomi
pop
cmp
icebp
mov
jge
cmp
jg
sti
shll
and
mov
popf
mov
jecxz
adc
icebp
adc
or
or
xchg
xor
push
inc
fidivs
mov
push
pop
mov
push
std
das
add
popa
mov
and
sbb
fistl
call
xor
fs
inc
iret
stos
rcll
and
jecxz
cmc
mov
lods
or
sub
dec
inc
enter
mov
pop
mov
jns
pop
sbb
jo
mov
mov
and
mov
push
cmp
push
push
pop
mov
ret
mov
rol
adc
js
std
mov
fcmovnu
shrl
mov
sbb
or
push
arpl
data16
mov
sbb
adc
jmp
ret
xchg
test
loopne
aad
std
adcl
pop
mov
ret
pusha
nop
push
lcall
sub
push
int
xchg
push
xchg
ds
add
jp
jle
aaa
jno
loopne
and
lods
or
lods
or
je
xchg
lock
mov
push
mov
mov
ja
xchg
adc
ret
sbb
mov
subl
push
pop
jge
and
das
cmp
fdivrs
sarl
jl
scas
pop
int
or
lds
or
je
fwait
inc
jl
sub
notb
das
push
mov
mov
fldpi
push
xchg
xor
fcmovu
push
pop
gs
pop
fwait
pop
cmp
ficoml
sub
add
lcall
pop
and
push
sub
shrd
dec
cmp
inc
mov
push
xor
dec
push
pusha
push
lret
xchg
popa
popa
js
jg
movsb
daa
push
fisubl
mov
xchg
adc
cltd
push
in
jg
lea
loop
xor
push
and
insb
mov
leavew
test
shl
sbb
cwtl
mov
xlat
fbld
out
cmpsb
pop
jecxz
inc
popf
in
jge
adc
cmpb
shll
pop
in
inc
and
xor
out
shl
mov
pop
test
movsl
adc
insl
sahf
adc
push
jb
jbe
inc
out
lock
cltd
and
dec
mov
inc
scas
movsb
fnstsw
push
daa
int
xchg
adc
imul
call
in
outsb
dec
jmp
adc
push
xchg
add
push
lods
into
rorl
into
popf
sbb
jb
mov
cli
lcall
imul
fwait
outsl
push
iret
mov
lods
or
lds
or
insb
lods
lock
dec
gs
dec
inc
and
frstor
push
pop
mov
dec
adc
push
mov
jbe
pop
mov
sub
mov
adc
out
aad
xchg
cld
lahf
cmp
mov
scas
lret
in
xchg
xor
rol
enter
sub
adc
mov
mov
inc
in
shll
pop
mov
imul
aaa
mov
jge
in
je
bound
aam
gs
es
xchg
jb
cmp
cmpsb
nop
ds
sub
out
in
arpl
daa
iret
daa
movsb
and
movsl
xchg
ror
ja
testl
cmp
imul
dec
adc
subl
popa
mov
ret
pusha
xchg
mov
pop
inc
repnz
mull
mov
pop
iret
jl
std
inc
and
and
and
mov
jb
add
inc
pop
pop
push
js
mov
xchg
lock
insl
push
out
jo
inc
dec
loopne
sub
aam
mov
mov
mov
cs
dec
sub
ds
bound
mov
test
push
js
or
xor
js
ret
out
ret
test
ret
das
pop
mov
bound
movsb
sbb
fucomi
jo
out
mov
or
lds
mov
movd
aaa
push
push
mov
lock
mov
lds
push
push
mov
push
loopne
mov
mov
xchg
inc
or
mov
decb
lods
inc
leave
in
mov
xorb
mov
enter
aaa
inc
sbb
push
inc
scas
inc
xchg
cs
dec
shl
jp
dec
nop
pushf
xor
pushf
popf
add
pop
cmp
jne
pusha
gs
jb
mov
ja
icebp
adc
add
adc
push
idivb
loopne
cmp
mov
push
push
adc
out
imul
add
jb
xchg
pop
push
movsb
rolb
xchg
sub
and
int
insl
add
jmp
pop
inc
push
inc
add
mov
popa
out
push
inc
cli
sahf
insb
mov
and
mov
cmp
addr16
addr16
in
add
inc
in
cmpsb
mov
push
sub
jmp
movsl
mov
lods
mov
cmp
push
jle
fwait
sbb
mov
lret
jmp
mov
dec
dec
cs
cmp
int
aaa
shl
xchg
jo
sbb
xchg
popf
out
push
fstl
or
cmpsl
adc
shll
xor
cmpsl
ds
inc
fisubrl
sbbl
adc
push
cmp
mov
addl
pop
push
hlt
popa
and
fnstsw
push
jno
ja
call
ret
xlat
lods
out
or
insb
lock
leave
not
adc
and
push
aas
jp
lods
ja
aam
imul
xor
push
aam
mov
das
test
sub
movsl
cmpsl
push
icebp
sub
jns
pop
fsubrl
ss
xchg
mov
test
lret
mov
mov
test
daa
or
out
pop
mov
mov
int3
push
xchg
cmpsb
add
push
hlt
dec
dec
inc
idiv
aaa
int3
adcl
popa
and
cmp
pop
cli
aaa
lock
jmp
sbb
push
xchg
gs
mov
push
jp
jbe
mov
and
rcrl
pop
mov
adc
adc
push
jl
sahf
inc
mov
adc
stc
mov
or
jg
lea
add
push
std
mov
mov
xchg
test
rorl
fiadds
pop
sbb
and
pop
jns
mov
lea
mov
jbe
les
push
ret
mov
lahf
fisttpll
jne
xor
adc
push
pop
mov
jo
cmp
pop
xor
int3
mov
mov
out
inc
mov
shl
out
les
arpl
inc
rcll
push
les
adc
addr16
bound
dec
aas
shrb
cmpsl
popa
fcmovnu
jns
cltd
mov
cwtl
mov
cmp
push
and
popa
and
inc
cld
jmp
test
aaa
adc
sbb
nop
or
adcb
mov
fcoms
jg
cltd
add
arpl
inc
ss
ljmp
jmp
xor
cwtl
jmp
cmp
jecxz
xchg
divb
pop
jnp
lock
cmpsl
popf
inc
lret
pop
jle
pop
lods
ds
mov
jge
or
shl
pop
and
push
sti
aad
jbe
insl
xor
mov
jo
adc
hlt
xor
jo
jg
sbb
mov
sub
dec
roll
in
pushf
cld
je
sahf
mov
or
jle
mov
daa
sarl
pop
loopne
test
mov
inc
inc
and
xchg
pop
in
dec
call
push
or
sarl
jl
and
fnstcw
mov
inc
sbb
lock
in
jae
inc
cli
xor
mov
mov
out
lods
mov
dec
cltd
sbb
ss
test
push
mov
out
aam
lods
pusha
loop
mov
sbb
push
mov
mov
fs
stos
popf
xchg
mov
push
repz
or
inc
pop
or
lret
add
lcall
out
and
and
jg
and
xchg
pusha
mov
es
loop
stc
xchg
xchg
jno
dec
xor
sub
addr16
mov
dec
xor
test
test
ljmp
sub
clc
push
je
mov
adc
mov
xor
lock
lcall
out
insb
sbb
ret
insl
mov
adc
cwtl
push
lock
and
and
les
ds
cs
jne
fdivrs
pop
or
loope
sub
pop
cmp
lock
mov
ret
or
adc
jmp
cmp
and
imul
lods
cmp
cltd
ret
out
sub
jmp
sub
cmpsl
push
sbb
cld
push
dec
clc
inc
ret
mov
add
and
jns
jns
cwtl
jbe
sahf
jecxz
dec
mov
test
fistpl
dec
loope
mov
mov
sbb
xor
and
mov
inc
mov
das
cli
inc
push
mov
addl
pop
inc
icebp
rol
in
arpl
push
add
lret
daa
cli
jg
sarb
out
jo
mov
adc
cmp
es
push
idivl
repz
adc
dec
mov
mov
ljmp
inc
mov
mov
jecxz
repz
xchg
jae
imul
jnp
fiaddl
xchg
movsb
xchg
push
fimuls
sbb
and
stos
and
sbb
jns
jns
lcall
push
clc
dec
cmp
jne
xor
std
je
jae
mov
pop
or
and
loopne
shrb
iret
es
cltd
and
add
sub
push
xchg
out
mov
add
xor
xor
iret
xchg
popf
and
out
xchg
adc
scas
push
rcl
and
cmp
lret
dec
or
lock
ljmp
ret
iret
mov
xchg
outsb
dec
dec
sub
xor
jb
and
push
cmp
cltd
in
fnstsw
dec
jmp
push
lock
addb
aad
mov
out
adc
jl
cmp
int
xor
or
inc
test
adc
xor
movsb
jb
fwait
jmp
pop
shrb
push
es
mov
xchg
add
call
add
cwtl
xor
icebp
pusha
sub
outsl
sbb
shrl
stos
push
add
in
mov
jne
xchg
and
paddusw
and
popf
lahf
dec
inc
ljmp
das
out
pop
mov
xchg
mov
jne
addb
and
adc
shrl
mov
inc
roll
mov
repnz
dec
mov
cmpb
push
hlt
pop
jno
cmp
aaa
xorb
std
pop
fstl
mov
loope
ret
test
jae
mov
xor
xor
ss
mov
jge
jecxz
mov
xor
sub
loop
fidivrl
out
add
js
scas
popa
dec
stos
pop
xchg
andb
in
stc
sub
jbe
jno
roll
sbb
adc
clc
fs
ret
inc
mov
lret
pop
inc
movsl
jecxz
clc
fcoms
sub
sti
push
clc
push
dec
das
sbb
test
ja
les
fisubrl
push
lret
pop
popf
data16
js
rolb
mov
adc
jecxz
das
in
pushf
jl
lds
dec
jne
sahf
inc
push
sub
repz
into
mov
sbb
cmpsl
hlt
pusha
es
pusha
lahf
push
and
dec
imul
and
ljmp
out
stos
pop
fldenv
lds
push
lret
mov
test
mov
mov
in
add
out
les
and
or
lret
jne
outsl
push
mov
xchg
aaa
cmp
xchg
pop
cmpsl
mov
dec
and
jl
cmp
int
inc
sbb
cli
jmp
popf
sbb
cltd
out
add
cmp
and
xor
daa
shrl
xchg
cli
cltd
pop
imul
jle
mov
cltd
iret
rcrl
out
and
jle
cmp
mov
js
cwtl
mov
popf
sahf
jno
aas
sbb
and
sbbl
aaa
pop
outsb
fcomps
in
jge
mov
lock
lea
push
sar
xor
out
mov
testl
pop
inc
fisttpl
push
push
pushf
nop
add
mov
jmp
pop
sub
push
cltd
xor
push
pop
mov
dec
xchg
mov
push
sub
sub
test
mov
lock
xchg
push
icebp
mov
pop
jo
pop
das
cmp
dec
push
add
mov
test
arpl
stos
xchg
adc
xchg
jecxz
and
or
stos
movsb
fidivs
imul
cs
int3
dec
dec
fidivrl
out
push
cmp
dec
dec
cmpsb
xor
addr16
xor
mov
adc
jae
ss
cmp
pop
fisubrs
push
mov
mov
jl
fldcw
shlb
mov
ret
mov
lea
sbb
add
popa
inc
sub
pushf
jbe
pop
fcoml
cmc
sarl
fiadds
mov
ja
push
scas
fs
shll
and
lret
loopne
xchg
testb
inc
ss
pop
pop
jne
fldenv
rol
and
ss
mov
stos
pop
lret
ret
in
mov
pop
cmpsb
orl
pushf
push
cmpsl
add
nop
lea
std
xor
movsl
mov
xor
push
push
adc
push
stos
cltd
mov
mov
sbb
adc
dec
sahf
dec
ja
clc
jg
mov
call
push
out
rcrb
hlt
mov
dec
inc
push
jno
in
mov
jno
and
jne
ja
pushl
cmp
cmp
pusha
and
lret
pop
or
mov
jae
aad
out
inc
sahf
pop
dec
je
and
pop
and
xor
mov
adc
jecxz
call
hlt
add
dec
mov
aas
mov
mov
add
pusha
adcb
inc
add
sbb
arpl
jg
dec
cmc
xor
sbb
mov
mov
sub
mov
or
push
lds
inc
imul
imul
stos
or
xor
gs
dec
cmp
sti
sub
push
mov
pusha
ds
mov
fwait
insb
adc
packsswb
push
xchg
arpl
rcrb
xchg
adc
jns
adc
add
pop
les
add
jnp
sbb
add
sbbl
adc
mov
mov
add
cmpsb
mov
sub
out
jae
fistpl
call
fld
insl
pop
imul
outsl
jle
test
adc
xorb
mov
call
adc
stos
jno
bnd
insl
pop
pop
shl
roll
int
xchg
insl
dec
gs
push
pop
ret
ja
inc
xor
jecxz
loop
test
xor
mov
sub
sti
adc
jg
cmp
adc
cmc
lret
add
cmp
add
loop
sti
push
dec
pop
push
inc
shlb
xor
stos
pop
xor
jbe
test
inc
mov
sbb
test
lods
lret
subl
inc
or
outsb
in
cmp
fisttpll
out
test
outsl
repz
mov
inc
std
xchg
das
cmp
fnstsw
cs
add
leave
xchg
cmpsl
cli
adc
cwtl
lock
loopne
clc
js
mov
xchg
adc
scas
imul
jle
pop
pop
sub
mov
sub
lret
sbb
pop
jmp
push
lods
and
in
in
sbb
push
push
gs
subb
addr16
cmp
add
cltd
lock
fwait
scas
stc
ret
dec
dec
adc
xorl
daa
fisubl
lock
dec
mov
inc
mov
jmp
lret
out
mov
xor
and
adc
cmp
dec
sub
lods
or
into
cwtl
pop
mov
jmp
push
push
sarb
fs
ret
cmp
mov
dec
xchg
xorl
sbb
mov
jbe
fisttpll
addr16
dec
addb
js
jbe
mov
inc
ja
out
xor
sbb
cmp
jmp
pop
loopne
xor
lods
lods
fisubs
jp
scas
mov
xor
mov
iret
lods
pop
ljmp
aad
outsl
push
out
jo
xchg
push
dec
call
cltd
add
sar
push
aad
cmp
mov
xchg
aas
push
xchg
lds
mov
push
pop
mov
pop
mov
hlt
push
dec
ret
xchg
and
add
ss
aas
jge
rol
mov
sub
test
mov
es
call
mov
stos
mov
repnz
inc
cmp
jb
pop
sbb
sub
mov
dec
into
inc
lahf
out
adc
xor
jge
add
mov
mov
cmp
scas
les
lcall
sbb
add
ret
or
push
xor
cmp
adc
xchg
dec
adc
push
test
loop
jns
bound
or
xchg
xor
mov
cmpsb
mov
mov
mov
shll
xor
jbe
add
pop
mov
sub
adc
xchg
inc
cmp
mov
leave
add
icebp
lahf
add
shll
and
xchg
xchg
stos
insl
sbb
rorl
stos
pop
add
pop
test
cmp
cmpsl
xchg
orl
xor
sub
movsb
aad
jl
nop
sbb
inc
xor
or
sbb
bound
sub
movsb
add
int3
sbb
sahf
mov
aas
cmp
popf
mov
pusha
cwtl
push
outsb
ret
push
adc
pop
imul
push
sbb
or
lea
cmp
sub
xchg
shlb
iret
pop
sahf
xor
sub
adcb
xchg
dec
fildll
push
in
movsl
in
fisubs
aam
lcall
inc
flds
add
std
add
out
cmp
in
mov
mov
lea
popf
mov
fisubl
push
cltd
popl
pop
icebp
push
add
imul
add
xor
mov
iret
pop
or
dec
mov
shl
xor
ss
dec
sub
adc
xchg
stc
inc
push
xor
in
and
inc
and
enter
pushf
xor
or
inc
xchg
and
popa
inc
stos
stos
dec
mov
jmp
test
dec
aas
pop
push
cs
add
mov
mov
mov
inc
xor
add
ret
push
and
pushf
xchg
jmp
cmpsb
pop
in
sti
lret
jmp
je
lock
mov
das
popf
and
cmp
bound
sub
cmp
cmp
stos
movsb
mov
lods
int3
xlat
or
mov
xlat
adc
or
lret
sbb
addr16
movsl
or
shl
mov
sbb
bound
insl
sbb
add
xor
test
daa
shlb
cmpsl
sbb
ret
rcr
jle
sti
jmp
mov
fadds
in
or
push
jno
push
add
add
pushf
les
bound
xchg
adc
dec
cmp
push
repnz
jb
mov
test
push
push
shll
mov
clc
mov
add
cmp
outsl
popa
gs
push
adc
push
es
push
pop
sbb
and
cmp
xor
in
xchg
mov
stc
xchg
sbb
pop
add
nop
shlb
in
pop
pop
cmp
call
or
pop
add
mov
xchg
outsl
cmc
and
jg
mov
xchg
adc
repz
hlt
mov
adc
add
xchg
cmp
js
pop
lret
out
and
bound
dec
inc
xchg
jbe
bound
mov
fisubl
adc
inc
je
jb
cmpl
sbb
inc
aam
andl
ret
cmp
sbb
mov
arpl
jnp
mov
mov
lods
pop
fwait
adc
inc
outsb
xchg
jg
mulb
in
cmp
std
rol
xor
mov
data16
push
jns
pop
push
shlb
and
adcb
ret
fcoml
sub
fcmovne
or
inc
push
mov
sarl
jmp
push
or
xchg
popa
ret
aas
loop,pn
je
push
sbb
dec
mov
jo
sub
das
fsts
push
fisttps
push
imul
sbb
andl
jne
xor
mov
mov
test
dec
mul
loope
dec
jle
clc
sub
dec
sbb
cmp
jae
andb
jnp
stos
fwait
sub
std
out
jne
jae
pop
mov
loop
cmpsl
sbb
dec
sbb
add
out
pop
jno
leave
jecxz
and
pop
popf
inc
test
sub
mov
jl
enter
movsl
test
cli
jae
fiaddl
cmp
mov
insl
xor
mov
push
sbb
aaa
adc
lret
dec
sti
add
cmc
loopne
pop
icebp
mov
mov
daa
ds
mov
mov
mov
out
pop
xchg
lds
pop
pop
jmp
into
cmp
daa
iret
aam
repz
cmpsl
xor
xor
add
dec
out
pop
test
sub
fcmovu
cmp
jne
or
xchg
loope
int
sbb
xchg
in
sbb
cwtl
and
imul
xchg
mov
pop
dec
jae
pop
dec
xchg
push
pushf
mov
sbb
stos
pop
pop
add
xor
jmp
cmpsl
test
add
mov
in
jns
enter
or
out
outsl
cmp
sti
cmpsb
and
mov
popa
scas
xchg
fwait
sub
fcmovb
inc
jl
mov
adc
jmp
andl
test
jp
or
mov
add
xchg
stos
ja
pop
test
pop
cmp
push
rclb
xchg
lcall
inc
and
cli
lea
imul
fwait
ja
and
mov
daa
add
dec
shll
js
aaa
xchg
cmpsl
jecxz
shll
push
int
mov
push
daa
push
js
pusha
aaa
jbe
mov
enter
aas
pop
mov
lods
imul
sbb
or
adc
pop
int
xchg
je
or
pop
jle
pop
pushf
push
in
jo
add
cmpsb
xchg
mov
scas
jg
mov
clc
jb
hlt
je
and
push
mov
testb
out
push
test
jmp
jnp
popf
mov
cmp
add
jo
data16
stos
cmovnp
leave
push
test
xchg
out
pop
fidivrs
sbb
dec
into
addr16
jg
fucomp
adc
pop
mov
idiv
ret
aam
dec
out
adc
and
neg
outsl
es
je
lea
maskmovq
notl
iret
push
or
dec
or
cmp
test
mov
and
and
push
pop
mov
in
dec
lcall
fbld
inc
popf
in
sub
push
push
icebp
pop
jne
jmp
js
out
call
popa
xor
pushf
negb
std
cld
dec
stc
sbb
pusha
stc
mov
pop
enter
js
pushf
xor
xchg
cmpl
inc
psubb
dec
in
lock
adc
sbb
mov
orl
dec
imulb
or
xor
scas
xchg
and
lock
bound
xor
jmp
mov
mov
fwait
xor
cmp
mov
pusha
push
push
cmp
dec
out
dec
aad
fadd
hlt
rol
push
pop
sub
xchg
jo
fucom
mov
mov
jo
lahf
and
or
je
popl
and
leave
outsb
add
movsb
in
ret
mov
xchg
adc
xchg
dec
jge
mov
sbb
add
fcoms
std
pop
xchg
mov
aaa
mov
sbb
push
jge
jmp
xor
ret
sub
adc
scas
loop
stc
mov
sbbl
and
xchg
sub
dec
xor
fwait
jae
out
outsl
push
mov
stos
rcl
aam
push
xchg
out
mov
xlat
inc
mov
push
fdivl
testb
mov
imul
jg
push
cmp
push
cld
sub
sub
mov
sbb
aam
not
mov
mov
pop
mov
addr16
nop
add
push
sbb
shrl
cmp
mov
pop
mov
xchg
ret
popa
cmp
pop
gs
mov
mov
xchg
push
lock
cwtl
repz
jecxz
xor
adc
aaa
decb
sub
sub
dec
scas
adc
out
in
inc
mov
mov
iret
push
aad
imul
nop
pusha
cmc
dec
xchg
mov
or
call
cmp
cwtl
rol
jae
xor
cs
xor
sbb
push
sbb
lock
xorb
fcoml
or
dec
xor
imul
lods
push
add
loopne
fisubl
stos
cli
and
int3
imul
loop
pop
test
mov
cmp
xor
xchg
cmp
push
dec
and
popl
xchg
add
lret
incb
push
jmp
loop
inc
or
scas
fildl
cmp
rcrb
sbb
test
jg
ja
xchg
lds
dec
pop
pop
mov
ss
jmp
adc
in
movsb
sub
out
mov
mov
int3
leave
pop
test
mov
dec
mov
adc
push
jae
pusha
and
push
inc
cmc
inc
fs
rcr
scas
inc
popa
sub
scas
test
inc
test
jno
inc
xor
insb
mov
jae
scas
xor
xor
cmp
pop
es
mov
gs
xchg
inc
xchg
clc
jo
pushf
xchg
jmp
jbe
cmp
xor
mov
mov
mov
cs
out
jmp
xor
data16
jecxz
outsl
push
xorb
popf
clc
xchg
jle
daa
push
lock
add
dec
shll
dec
fiadds
adc
fwait
dec
adc
shll
outsl
iret
loop
cmp
inc
jmp
push
das
sub
outsl
fcompl
jge
mov
das
push
lahf
jle
inc
xchg
add
testl
pushf
daa
pop
xor
movsl
scas
negl
mov
mov
adc
add
imul
xor
and
jno
or
push
xchg
cmpsl
add
mov
outsb
outsl
push
addr16
data16
jnp
fs
push
cltd
sub
add
cmc
mov
or
stos
cltd
pop
dec
and
push
push
inc
mov
sub
add
hlt
cmp
into
or
cmp
cmpsl
jo
lahf
mov
dec
dec
addr16
ret
cmp
mov
inc
outsb
imul
cmp
enter
aas
stos
sti
insl
pop
arpl
and
aas
icebp
and
adc
xchg
stos
in
popa
loopne
js
mov
mov
mov
fidivrl
jge
clc
inc
std
dec
xor
fs
and
and
xchg
push
ficomps
test
pushf
mov
outsb
push
daa
lahf
cmp
add
and
sub
rorl
inc
dec
std
dec
dec
xor
adc
sbb
inc
stc
mov
mov
les
roll
or
xchg
jecxz
lea
testl
sbb
jg
inc
xchg
mov
push
mov
adc
mov
inc
shrb
push
push
dec
xorl
test
movsl
inc
inc
pop
xchg
ret
push
lcall
gs
movsl
lret
dec
scas
pop
push
sbb
cmc
ljmp
aad
mov
pop
addr16
mov
pop
pushf
lret
es
fs
sbb
in
test
lock
push
xchg
hlt
icebp
pop
adc
push
or
daa
sbb
stos
stos
sbb
inc
cmp
sbb
shll
jl
movsl
lds
cli
movsb
test
sar
loopne
xor
test
xchg
jp
pop
js
lock
sub
mov
lret
lret
test
fldt
mov
adc
xsha256
cmpsb
aam
cli
mov
leave
repz
sub
in
cmpsl
test
cmp
mov
mov
inc
lods
mov
mov
mov
and
orl
neg
sbbl
push
jmp
mov
cmp
rclb
gs
in
mov
scas
jns
adc
and
push
sub
pop
cmpsl
test
mov
inc
mov
out
icebp
cmp
sbb
int3
sub
xchg
xchg
movsb
push
xchg
jae
mov
dec
aas
into
popa
push
jnp
mov
adc
xchg
jnp
adc
or
dec
stc
stc
call
add
sbb
mov
inc
idiv
jp
test
test
ljmp
dec
outsb
push
cmp
in
jno
pop
adc
sub
add
dec
push
mov
fwait
aaa
imul
sub
push
xchg
or
lahf
xchg
sar
push
mov
jo
or
push
sahf
mov
hlt
in
or
mov
sbb
fidivl
xchg
ret
inc
mov
cmp
sub
cwtl
outsb
mov
loopne
fwait
aad
mov
cmc
and
sbb
xchg
fs
and
das
cmp
fmull
decl
into
inc
insl
jbe
push
adcl
adcl
cmp
adc
cmp
hlt
mov
sarl
jl
jl
push
jmp
adc
repz
enter
dec
ds
add
add
push
adc
bound
or
inc
push
cmc
ds
or
inc
dec
mov
je
mov
outsb
push
outsb
sbb
inc
jmp
pusha
arpl
jnp
inc
adc
js
jb
clc
xor
loope
mov
fdiv
jae
adc
push
stc
or
ja
mov
clc
push
jns
xchg
in
cld
inc
push
or
jne
jmp
sub
mov
aas
mov
fimuls
pop
pop
gs
int3
loop
pop
or
and
dec
jp
pusha
fbld
cli
mov
xlat
fstl
mov
mov
test
aaa
xor
or
daa
inc
dec
xor
scas
and
nop
fstpl
cmpsl
movsb
sub
mov
push
in
lods
into
push
stos
jo
outsb
cmc
dec
dec
pop
xchg
imul
and
mov
push
mov
lds
icebp
iret
jmp
int3
pop
inc
xchg
ds
std
mov
ret
cmpsb
mov
pop
and
mov
fildl
adc
imul
pop
dec
into
cmp
adc
test
inc
jbe
daa
inc
enter
add
or
mov
movsl
repnz
xchg
enter
stc
mov
ja
pop
cli
or
pop
inc
xor
xorb
xor
hlt
shrb
loop
fstpl
ffree
mov
fcompl
or
shrb
popa
cmp
mov
mov
cmp
xor
mov
call
in
mov
or
push
xchg
xchg
lahf
jmp
xchg
inc
mov
push
test
out
cmpsl
push
jp
mov
dec
cmpsb
adc
inc
dec
xchg
test
mov
jecxz
ficoml
daa
fdivs
mov
ss
stos
dec
or
adc
adc
js
jp
inc
xchg
imul
jae
jp
cmp
ds
mov
pop
fiaddl
xchg
pusha
ret
aaa
rcll
stc
ss
or
xor
push
xchg
xchg
bound
adc
pop
enter
sbb
jmpw
push
jo
sub
or
mov
sub
mov
jnp
mov
add
xor
adc
fadd
xor
jmp
inc
mov
and
jmp
mov
lcall
xor
ja
xchg
push
sub
call
mov
out
ret
mov
push
sbb
jns
mov
shlb
stos
push
in
mov
xchg
and
jmp
ja
push
adc
push
cmp
cmpsb
jecxz
sarb
sbb
fwait
loopne
adc
in
xchg
jno
leave
inc
daa
sarl
std
mov
fwait
cmp
lods
sti
mov
sbbl
mov
mov
push
out
inc
jge
and
jecxz
pop
jne
mov
cld
int
xlat
sub
and
jp
cmp
push
inc
xchg
and
xchg
test
fldt
or
pop
dec
xchg
cmp
in
add
mov
sbb
call
ds
or
mov
test
outsb
setb
popa
add
and
repnz
loop
loop
xlat
or
mov
sarl
adc
adc
imul
fisttpll
jbe
inc
lock
dec
push
mov
in
aad
test
cli
icebp
pop
xchg
out
add
pop
ss
es
sbb
and
into
ret
popa
push
cmp
add
sub
lds
cmp
imul
xchg
inc
inc
and
lret
lea
iret
rcrb
mov
jmp
std
dec
aad
add
imulb
mov
jl
call
mov
in
or
mov
mov
jp
es
int3
enter
jae
cmpb
cmp
inc
into
jns
inc
push
add
fstpl
jae
test
xor
aad
ficomps
mov
imul
lock
jnp
stos
es
sub
sti
push
mov
or
cmp
mov
mov
cmp
mov
shlb
adcl
mov
xorl
add
sbb
loopne
push
lret
rolb
mov
outsl
imul
mov
push
push
or
sahf
xchg
mov
xor
jnp
jno
jns
inc
dec
xlat
mov
dec
iret
aas
aaa
inc
mov
cmp
int
test
mov
out
or
jp
cmp
fnstcw
sbb
add
jnp
pushf
sahf
cmp
dec
sub
push
out
xor
movsb
inc
adcb
mov
shrl
iret
sbb
clc
mov
sub
pop
xchg
mov
or
ss
pop
gs
in
call
lods
sub
aad
cmpsb
insb
add
mov
dec
jecxz
pusha
imul
fildll
mov
cmp
shl
or
adc
imul
and
in
out
sbb
adc
repnz
inc
clc
test
mov
jle
jp
jnp
int3
cmpsl
push
adc
dec
push
push
repnz
cmp
popf
mov
in
inc
jbe
insl
into
scas
xchg
sbb
fidivs
leave
add
mov
sub
dec
incl
ss
xor
cmp
xlat
out
jno
mov
popf
add
mov
shrb
mov
out
mov
mov
push
xor
push
xchg
mov
js
loope
je
rolb
pop
outsb
leave
push
shr
in
addl
or
mov
mov
and
call
add
je
dec
lods
jae
bsf
enter
mov
push
or
sub
syscall
push
jle
orb
jo
xor
call
push
mov
shlb
sub
mov
sahf
jecxz
shll
dec
add
outsl
aad
inc
mov
push
dec
sub
in
sub
or
or
push
and
push
mov
ficomps
xor
std
dec
das
dec
cmp
sub
mov
and
dec
repz
sub
shlb
lcall
and
dec
dec
adc
loop
dec
popa
aam
mov
xchg
push
jae
jo
lcall
rcrb
adc
dec
js
xchg
ret
mov
mov
pop
std
lds
fadds
icebp
ds
arpl
jns
jo
push
orb
fs
lock
xchg
sbb
cmp
cld
arpl
xchg
jns
rcrl
xchg
pop
xchg
xchg
pop
and
xchg
mov
add
les
addb
dec
jp
mov
fwait
jp
inc
dec
aas
mov
cmc
or
sub
jmp
jnp
repnz
test
sub
imul
movsl
ret
lahf
adc
jp
pop
nop
imul
mov
int
adc
and
lret
dec
lods
cmpl
cmc
sbb
sbb
push
mov
scas
sti
jb
sbb
les
inc
int
push
scas
mov
insb
sbb
rcrl
lods
mov
test
test
jl
loop
push
dec
add
stc
adc
enter
es
pushf
jns
fsub
dec
xor
adc
idivl
pushf
sub
bound
lods
repz
bound
popa
loop
and
movsb
lcall
push
add
sub
push
push
stos
dec
and
push
xchg
and
cli
in
aad
int3
inc
call
jo
or
cmpb
xchg
cli
sub
fistpll
mov
xchg
outsb
pusha
mov
scas
lods
andb
xchg
mov
mov
and
out
cmp
mov
stos
pop
subl
cmp
rol
jle
dec
pop
push
xchg
cmp
stc
adcl
lret
pushf
mov
out
mov
fwait
xor
repnz
jnp
ja
inc
aaa
fadd
mov
jp
mov
outsb
shll
inc
pop
js
fidivrl
pop
fstl
jl
imul
xorps
mov
dec
sub
pop
adc
jecxz
xor
pop
cmp
sbb
rclb
lret
fidivs
mov
insl
arpl
inc
jb
sbb
rorb
sbb
and
iret
dec
cltd
loopne
cmp
or
repz
jbe
xor
ror
cmp
inc
stos
adc
ret
inc
test
xor
adc
inc
push
loope
jmp
addr16
in
pop
pusha
imul
fstps
ds
sbb
inc
sbb
pop
fadd
fimull
mov
dec
inc
ljmp
mov
jl
dec
lds
push
cmovle
lea
pop
cmp
nop
pop
adc
dec
stc
les
pop
push
sahf
mov
loope
lret
mov
inc
mov
ret
cwtl
dec
movsb
pusha
clc
dec
and
add
insl
xchg
les
xlat
sub
addb
dec
or
dec
or
icebp
neg
jg
dec
push
out
mov
lods
push
mov
push
popf
sub
movsb
dec
movsl
xchg
and
xchg
fisubrs
mov
pop
mov
test
and
jae
and
mov
mov
ljmp
leave
jmp
xor
mov
rorl
jl
lcall
xchg
test
push
mov
or
inc
enter
jg
mov
pop
scas
ja
pop
sub
ficomps
sbb
fsub
leave
aam
cmpl
lods
sti
pop
adc
push
mov
fsubrs
shlb
mov
stos
inc
dec
fwait
rorb
lret
cld
mov
cli
xchg
sub
data16
fdivrs
or
cs
cmpsl
shrl
mov
inc
fbld
lea
arpl
outsl
inc
incb
jne
enter
mov
flds
cmpsb
subb
inc
adc
ss
out
iret
jg
push
lret
pusha
sbb
in
inc
decb
imul
movsb
repz
sbb
add
xchg
insl
pop
xchg
cmc
stos
fiadds
jge
out
das
adc
callw
pop
xchg
sbb
adc
int3
int3
adc
push
pop
pop
cmp
jae
ljmp
imul
sti
lret
aaa
scas
dec
adc
xor
jg
xchg
cwtl
and
out
ret
aad
and
aas
repnz
jno
test
mov
loope
inc
pop
xor
jns
stc
pop
andb
gs
and
xor
mov
fisubrs
hlt
add
and
aas
xor
sbb
pusha
pop
sbb
adc
push
and
pop
mov
xor
out
cltd
sbbl
mov
fmuls
addr16
sub
out
clc
iret
mov
sbb
add
jbe
sbb
lret
enter
mov
jb
sub
lcall
add
push
mov
sahf
repnz
pop
dec
aam
movsb
push
xor
out
xchg
mov
cs
cmpsb
repz
or
lcall
sub
aas
fsubrp
pop
pop
jge
leave
loop
or
pop
xor
mov
inc
scas
cmpsb
out
cmpsb
test
mov
lods
sbb
cmp
jge
lods
add
xrelease
push
sub
adc
addb
inc
mov
aam
xchg
incl
and
xor
cmp
pop
jle
mov
cmp
inc
push
sbb
aam
aas
pop
cld
js
inc
and
addb
ljmp
lcall
daa
in
inc
adc
cmp
jecxz
sbb
lret
cs
xor
lret
scas
lahf
test
add
or
jle
xchg
dec
inc
mov
fimuls
mov
mov
add
and
xor
pop
mov
fdivs
mov
xor
idivb
clc
sub
and
and
cmpsb
popa
es
mov
cmpsl
outsl
pop
or
dec
inc
or
cmp
roll
lret
fs
out
pop
shlb
cmp
mov
jmp
loop
mov
repz
pop
push
jmp
incl
push
dec
insl
int
and
mov
jae
and
add
dec
jnp
std
mov
divb
daa
cmpsb
out
mov
add
adc
scas
inc
mov
pop
push
xor
push
fldcw
add
xchg
jbe
mov
cltd
dec
mov
data16
jmp
lret
pusha
pop
mov
lods
mov
movsl
push
rolb
aas
pop
lea
in
mov
mov
mov
mov
mov
push
sub
sub
dec
sti
rolb
sbb
sub
mov
push
xchg
popa
std
add
and
mov
mov
call
cmp
and
insb
jle
aam
fwait
lcall
mov
popa
pop
scas
xchg
sub
mov
mov
xchg
ret
iret
divps
ljmp
loope
sahf
loope
xchg
ret
or
daa
pop
movsb
les
pop
loop
jl
mov
adc
lods
push
into
jge
cmp
dec
add
jp
xor
pop
repnz
pop
xor
lahf
mov
scas
or
stos
test
aad
cwtl
mov
enter
int
jae,pn
or
jae
and
mov
mov
add
sahf
insb
lret
pushf
test
cmc
loop
cs
imull
pop
stc
in
add
mov
adc
popf
mov
in
sarl
inc
xlat
cli
daa
sti
sub
push
add
cmp
jne
xlat
mov
xlat
or
pop
cmp
fdivs
mov
test
sar
mov
mov
push
movsb
xor
addr16
jo
mov
adc
fimuls
loop
adc
int
out
push
fistps
xchg
sub
xor
mov
rorl
loopne
fucom
jg
mov
es
mov
adc
scas
aad
call
pushf
cmp
mov
inc
dec
pusha
inc
scas
jno
insl
pop
push
mov
cmp
mov
ds
inc
mov
add
into
mov
mov
leave
pop
jecxz
inc
outsl
mov
xchg
mov
ds
push
xor
xchg
shll
cs
pop
aam
in
insl
adcl
inc
out
jnp
sarl
mov
inc
adc
xchg
outsb
shll
pop
sbb
es
loope
dec
jno
mov
imulb
xor
jno
cli
in
mov
inc
clc
dec
gs
push
outsl
rcr
mov
push
cmpsl
sub
mov
test
push
xchg
pusha
cmp
or
mov
cld
mov
fimull
mov
mov
mov
or
clc
lret
js
into
dec
inc
xchg
in
jle
ja
pop
pop
fcmove
jnp
aaa
cld
cmp
mov
cmp
rorl
mov
sub
loopne
mov
ds
sbb
jl
fstpl
mov
daa
out
std
cmp
sbbb
inc
xchg
add
xor
out
imul
in
adc
popa
adc
push
call
xchg
cmp
xor
lods
int3
add
sub
shlb
adc
mov
mov
jp
cmp
mov
xchg
jmp
push
cwtl
mov
dec
push
mov
mov
cmp
or
inc
mov
loop
sahf
cltd
fadds
in
or
pop
in
sbb
dec
cltd
xchg
xor
pop
in
inc
arpl
and
mov
and
mov
adc
mov
cmp
mov
xor
cmp
push
ret
inc
dec
push
mov
xor
push
stc
testl
popf
push
movsb
fs
jmp
push
les
rcrl
jmp
sub
lods
int
fistl
add
insb
imul
cld
sbb
dec
maskmovq
negl
subl
inc
push
mov
mov
fcmovnbe
shlb
xor
in
jb
xchg
repnz
mov
shl
addl
outsl
fistps
outsb
xchg
jecxz
pop
fdivl
lods
mov
lret
in
sub
jecxz
mov
roll
in
xor
xlat
jne
jmp
test
adc
mov
xor
sub
sub
sub
lcall
xchg
lret
mov
push
dec
push
call
add
leave
inc
cmpsb
jmp
data16
adc
dec
xor
jmp
push
or
lret
or
push
mov
hlt
std
sti
mov
inc
lcall
mov
lods
test
jge
rcrl
jp
outsb
pop
pop
testl
jnp
mov
out
dec
jb
leave
add
cmc
and
or
xchg
mov
sbb
orb
adc
sbb
aas
ret
push
inc
jnp
sub
cld
or
sbb
xchg
sbb
cltd
mov
fildl
xor
and
loop
stos
mov
cmpsb
cltd
lcall
mov
ss
inc
out
inc
popf
or
cmpsl
les
cmp
jnp
jns
pop
cwtl
cmc
or
pop
iret
icebp
cld
test
adc
ljmp
dec
or
popa
test
shlb
filds
adc
mov
dec
adc
icebp
push
fidivs
pop
xlat
shll
aaa
stos
cmpsl
dec
pop
hlt
subps
mov
pop
xchg
lcall
pop
push
mov
cld
sbb
hlt
test
mov
and
mov
ja
inc
lds
sub
daa
lret
cmpl
push
jns
lret
fcomps
ja
mov
jp,pt
push
inc
inc
inc
popa
xchg
mov
mov
sbb
mov
cs
ljmp
aam
orl
cmp
or
or
into
xchg
sub
shrl
int
fistps
shll
push
mov
sarl
std
xor
and
fisubs
in
das
insb
mov
stc
mov
cmp
xor
push
cmc
dec
jns
aad
movl
fldlg2
jne
inc
jecxz
mov
cmpsb
arpl
mov
jo
dec
fwait
repnz
pop
cmpsl
mov
mov
lahf
cmp
push
xchg
dec
jb
fwait
sub
stos
mov
nop
xchg
dec
jns
mov
fistpl
and
je
in
jp
das
pop
sti
mov
jns
les
jg
inc
mov
add
pusha
pop
push
or
rorl
jmp
mov
pop
add
rclb
lahf
cwtl
arpl
mov
std
xor
inc
pop
sbb
repz
call
jb
mov
sahf
aas
adc
insb
push
or
jl
addr16
fs
add
shl
mov
sub
inc
push
loopne
adc
dec
mov
push
mov
cmp
sbb
fmull
sbb
clc
lahf
lods
adc
or
mov
out
insl
pushf
dec
mov
ret
dec
ret
fldcw
jmp
inc
add
gs
call
or
aad
jo
xchg
cs
xchg
xchg
xor
gs
sub
xchg
stc
push
jne
push
leave
stos
out
mov
jns
imul
or
ret
aad
mov
xor
out
idivb
insl
in
inc
mov
lock
inc
fnsave
or
mov
lcall
pop
scas
push
sarb
jne
or
xor
fisttpl
mov
push
dec
jge
mov
dec
fcmovbe
inc
xor
pop
push
sub
push
sbb
scas
andb
mov
pop
pop
jmp
mov
mov
repnz
loope
and
inc
sbb
dec
mov
sbb
pop
fimull
mov
imul
adc
addr16
xlat
adc
sub
dec
icebp
pop
or
dec
and
cmpsb
sub
mov
xchg
dec
xchg
jecxz
rolb
or
adc
fsubp
mov
loop
adc
cmp
aaa
icebp
push
xor
jl
subl
ret
ror
les
xlat
icebp
rolb
add
clc
push
cmpsl
sub
jnp
xchg
xchg
lahf
xchg
repnz
mov
mov
cmp
ret
rorl
loopne
xchg
and
insl
add
xchg
scas
lcall
call
mov
test
call
xor
xchg
test
jo
pop
push
jmp
mov
add
out
nop
xchg
gs
stc
loope
add
jmp
ljmp
or
cmp
and
or
in
loopne
push
inc
pop
int3
je
adc
mov
pop
bswap
cmp
test
cmp
imul
xchg
push
cmc
iret
ljmp
and
lcall
ss
gs
in
inc
pusha
frstor
adc
xchg
mulw
loopne
xchg
pop
adcb
fs
mov
inc
xor
mov
sub
push
cld
mov
inc
or
or
jg
in
dec
pop
mov
sbb
inc
mov
pop
pop
dec
inc
and
xor
loopne
pop
stos
scas
scas
aam
push
xlat
in
lcall
xor
push
dec
ret
addl
mov
call
or
mov
mov
dec
mov
jmp
fs
xchg
fnstcw
sub
ds
test
xchg
aad
andb
adc
jg
mov
pop
push
mov
sbb
test
nop
ficomps
adc
sbb
aam
mov
gs
mov
aaa
and
jp
adc
sbb
mov
inc
std
pop
loopne
andb
push
test
mov
mov
outsl
adc
gs
repz
and
mov
out
mov
out
es
mov
xchg
mov
movsb
stc
and
inc
and
pusha
das
scas
xor
pushf
xorb
sbb
mov
cmpsb
in
sbb
movsb
aaa
sub
jp
movd
jb
jnp
inc
cmpsb
es
shl
mov
out
dec
jnp
add
push
add
inc
sub
push
jbe
rcrl
dec
scas
leave
cli
cmc
inc
jae
mov
lahf
mov
add
xchg
leave
daa
ja
inc
gs
test
sbb
leave
pop
or
lock
leave
js
mov
icebp
out
dec
daa
out
inc
icebp
jnp,pn
stos
dec
add
push
aaa
pandn
arpl
pop
xor
loopne
push
test
push
je
imul
and
data16
mov
xchg
pop
imul
add
ret
shr
push
add
mov
cmp
nop
cwtl
leave
cmpsl
ret
add
ficoml
stc
sbb
xor
pop
inc
dec
sub
aas
xor
lahf
rcrl
add
dec
dec
test
icebp
sbb
out
push
adc
lds
xchg
jp
mov
enter
ja
outsb
adc
mov
push
stos
mov
pop
or
cmp
and
outsb
jmp
jbe
xchg
jns
movsb
in
jg
lock
and
mov
or
lahf
add
shll
mov
fdivrs
push
push
xor
push
pop
lahf
dec
inc
mov
shl
sahf
push
inc
pop
pop
xchg
adc
aas
jnp
adc
jbe
ss
push
das
pop
jb
movsl
mov
pop
fcompl
pop
loopne
dec
adc
js
stos
sbb
fwait
andl
push
mov
adc
push
cmc
push
push
imul
ficoml
fwait
clc
mov
dec
testb
dec
loop
or
inc
add
ljmp
mov
or
icebp
hlt
cmpl
lcallw
or
aaa
mov
das
aaa
sub
sbb
imul
pop
cmpsl
lea
mov
insb
enter
add
loope
cmp
outsb
sahf
ds
xchg
popa
jg
xor
xchg
stos
clc
pop
sbbb
push
xchg
jl
mov
sbb
ror
xor
xor
outsl
rcll
jae
xchg
sar
out
mov
lcall
je
mov
in
mov
stos
add
in
mov
xor
lods
popf
mov
cwtl
ret
lock
cmp
mov
pop
ret
loope
in
fnsave
pusha
add
mov
int3
dec
xchg
jno
jge
and
je
jl
stc
ljmp
jo
add
addr16
in
pop
mov
dec
test
mov
test
shlb
clc
sbb
cmp
out
fnstcw
lret
outsb
mov
std
lret
aam
aas
xchg
jne
in
push
mov
je
and
and
out
sbb
inc
lahf
enter
cmc
decb
dec
mov
sub
sahf
xchg
jnp
fs
cmc
in
push
xor
lcall
push
mov
ljmp
std
loopne
cwtl
pop
pushf
mov
push
mov
insl
mov
dec
lret
pop
xchg
scas
cmpb
add
sub
test
push
dec
jl
pushf
out
in
imul
pop
jmp
dec
jmp
int3
imul
mov
pop
das
push
je
xchg
addr16
ret
or
xor
jnp
testl
stos
jg
mov
pop
dec
cmp
lock
into
mov
rclb
dec
sub
cmc
outsb
jmp
add
add
loopne
pop
xlat
ss
mov
rcll
xor
inc
inc
cli
or
push
out
sbb
repz
mov
inc
cs
daa
adcl
mov
sbb
cmp
sub
ljmp
xchg
xorb
les
inc
fldl
mov
inc
mov
pop
movsb
inc
add
sub
dec
pop
dec
rclb
loope
pop
fsubr
cmpl
mov
orl
mov
int
repz
dec
sbb
add
lahf
and
iret
insl
jecxz
and
insl
dec
mov
dec
xor
shrl
hlt
arpl
sbb
fisubrl
adc
cld
and
xchg
testb
stos
out
inc
cli
ljmp
pop
fs
repnz
cltd
fidivrs
sub
push
xor
call
sti
mov
mov
mov
cmp
das
arpl
sbb
ror
aam
sbb
test
cli
sahf
rcrl
gs
popf
or
pop
xchg
aad
cmp
or
mov
shlb
ja
sbb
mov
fistpll
icebp
in
mov
mov
pop
adc
outsl
and
popf
out
rcll
das
pop
and
mov
xchg
add
inc
xchg
mov
mov
pushf
sbb
pop
loop
dec
dec
pop
icebp
mov
and
sbb
mov
or
xchg
fs
in
stc
sbb
loopne
pop
mov
mov
mov
shrl
jecxz
jmp
jp
repz
je
loope
js
and
cmp
push
loope
cli
out
sarb
lea
in
adc
into
sbb
call
and
pop
cmp
iret
xchg
jb
adc
mov
lock
mov
insl
jle
push
xchg
shrl
and
icebp
aaa
mov
out
pop
pop
pop
js
push
daa
decb
xchg
push
das
fimuls
mov
mov
pop
clc
lea
adc
mov
jbe
mov
test
jo
xchg
xchg
loop
adc
sub
mov
dec
lock
movsl
push
sub
and
lret
cmpsb
loop
pop
call
into
bound
push
xlat
bound
push
insb
add
shrb
xchg
jl
xchg
pop
cmp
sti
insl
fnstsw
mov
insb
mov
fdivrp
popl
push
jbe
fbld
outsl
push
jb
pop
int3
or
jno
push
push
addb
insl
xchg
les
and
subb
mov
sub
int3
imull
inc
mov
inc
popa
add
mov
xchg
sub
jo
lods
xlat
jae
or
xor
out
xor
push
lds
dec
fwait
sbb
sub
loope
pop
sti
gs
fnstsw
aam
cmc
mov
push
std
ljmp
mov
into
xor
lds
jecxz
jp
minps
int
push
jae
push
mov
fidivrl
es
js
mov
jae
pop
stos
mov
sbb
sbb
add
jb
xchg
inc
ja
insl
dec
adc
insl
cli
mov
les
aam
movsb
jg
jb
movsl
mov
xor
or
cmp
popf
fsubs
push
or
into
bound
iret
imull
mov
mov
mov
arpl
xchg
mov
cmp
or
and
lret
ret
les
ljmp
mov
out
adc
aam
lret
loope
ret
mov
aaa
mov
and
outsl
dec
inc
push
cltd
fstl
stc
fsubs
ss
or
jp
sbb
pop
xorl
jo
fbstp
in
insl
adc
pop
in
in
pop
inc
pushf
xchg
or
insb
sarl
test
dec
test
jmp
push
jmp
mov
ja
dec
push
pop
xchg
adc
pop
lock
and
mov
mov
adc
les
fidivrs
and
sub
fdivs
or
pop
scas
adc
arpl
xlat
test
insl
test
incb
cmp
jge
shl
sub
shll
clc
fstpt
lret
out
xchg
and
inc
int
movsl
pusha
mov
cmp
aaa
jl
sahf
faddl
ss
mov
mov
movsl
mov
cli
xchg
jle
popa
or
sub
imull
lock
in
pop
mov
cli
leave
mov
testl
inc
xor
ja
inc
in
test
mov
outsl
mul
das
add
lret
shll
jnp
push
jg
stos
test
decl
shll
lods
cmc
loopne
jne
cmc
int
lods
bound
aas
and
push
fiaddl
lods
jl
andl
aas
sbb
ds
cmpsb
bound
cmp
fucomp
fwait
or
pop
inc
add
aas
sub
sahf
xchg
fcomps
xchg
mov
inc
mov
jl
push
hlt
jnp
ljmp
gs
pop
xor
pop
or
lahf
insb
mov
loopne
fldcw
xchg
int
in
fstpt
cwtl
pop
jg
sub
push
es
ds
xchg
pop
aas
dec
mov
and
imul
xchg
sub
cmpb
sub
mov
jnp
xor
inc
or
fcmovnbe
clc
imul
cmpsl
cs
or
pop
adc
lret
dec
movsb
test
and
rcrb
gs
mov
jns
or
and
imul
sbb
test
dec
cmp
movsl
dec
push
cmp
movsb
pop
adc
or
cmp
cwtl
pop
insl
leave
sub
jae
out
in
mov
push
lret
fcomps
in
xchg
rcl
imul
push
xchg
aad
pop
in
jb
mov
fsubr
imul
in
cmp
movsb
pusha
int
and
iret
bound
or
rcrb
inc
pop
testl
int3
es
mul
mov
xchg
mov
sub
mov
mov
pusha
pushf
add
bound
push
dec
das
xor
das
mov
pop
out
in
lret
stos
mov
mov
mov
adc
push
sbb
dec
jae
test
add
mov
add
dec
scas
shl
jb
push
ror
jo
jmp
sbb
jnp
or
pusha
es
pop
lock
inc
clc
popl
jle
andl
adc
lahf
xchg
loope
call
push
sbb
cltd
stos
add
push
scas
movsl
jb
push
xchg
or
out
push
mov
pop
aas
int
imul
inc
jg
adc
inc
inc
jge
fldl
xor
loopne
xchg
pushf
jl
mull
mov
bound
ficoml
and
sbb
jg
sbb
icebp
inc
dec
aaa
rcl
sti
push
mov
pop
mov
and
pop
add
cmp
mov
cmp
jmp
inc
out
mov
test
lahf
mov
dec
rcrl
in
mov
or
pop
mov
mov
movsb
jno
mov
mov
fildll
out
nop
sub
push
insl
sbb
or
xchg
dec
push
push
std
pop
push
sub
in
push
cmp
mov
fdivs
stos
movsb
dec
push
push
outsl
js
enter
sub
je
test
and
leave
test
rcrl
add
lcall
sbb
fwait
mov
xchg
jne
and
inc
lret
inc
icebp
rorb
xchg
fisttpl
push
fs
ret
cltd
sbb
jge
idivb
lock
push
lea
adc
inc
cmc
cmc
push
push
jg
andnps
cmp
xchg
rcll
xchg
push
ljmp
pop
es
pop
insl
lretw
imul
out
push
cmpsb
xor
ret
push
mov
out
push
inc
push
jl
pop
cmpsl
ss
inc
mov
xor
es
shrl
ljmp
jmp
aaa
test
mov
test
je
jne
and
gs
jge
pop
jecxz
cwtl
adc
int3
pop
movsb
int3
xchg
es
add
mov
lods
aad
dec
xlat
jg
jecxz
popf
push
repz
dec
out
cmp
dec
lds
cmp
mov
cmp
lret
clc
cld
je
into
les
sti
inc
clc
jae
sub
ss
hlt
aaa
jae
mov
push
or
add
decl
add
cld
jecxz
adc
xor
mov
push
shr
mov
ret
outsl
inc
or
das
pop
icebp
and
nop
push
in
lock
aas
out
int3
adc
sahf
jns
shll
cs
push
or
lret
bound
cld
dec
ud0
aas
xlat
test
ret
jge
nop
pop
sbb
pop
lods
dec
push
inc
pop
sbb
nop
int
cmp
xor
jb
stos
dec
jmp
xlat
add
ret
add
dec
mov
data16
adc
mov
outsb
sbb
pop
and
test
push
mov
sbb
sahf
gs
add
mov
mov
cld
sbb
sbb
xchg
mov
scas
push
jo
sub
add
xchg
adc
insb
cli
stc
insl
and
and
addr16
arpl
xchg
lock
aam
dec
out
inc
and
inc
ss
mov
mov
insl
movsl
mov
je
frstor
xchg
lcall
mov
shrb
arpl
loope
call
jmp
or
pop
sub
sub
mov
lock
and
jecxz
sbb
mov
xchg
jg
mov
test
push
mov
cmpsb
and
mov
mov
fadds
mov
sub
lret
inc
mov
push
pop
add
or
mov
sub
pushf
cmp
add
test
and
js
xchg
neg
out
cld
test
arpl
pop
fistps
pop
fisubrl
rclb
lahf
nop
xor
lds
repz
or
jno
jl
inc
inc
cmp
mov
or
rcr
push
pop
or
mov
test
or
clc
xor
jmp
popa
iret
dec
cmpps
cmp
out
in
test
xchg
cmp
xchg
pop
xchg
push
sub
sbb
loope
pop
loope
inc
mov
adc
into
imul
cmc
loop
ja
mov
les
sar
sbb
mov
lods
and
scas
movsb
rcrb
mov
xchg
add
gs
jns
scas
shlb
xor
sarb
lds
std
xchg
fdivs
insl
push
push
loop
and
stos
or
imul
or
mov
lea
ljmp
push
sub
adc
das
lds
lock
pop
popf
sahf
stos
and
xlat
xchg
inc
xlat
sbb
js
mov
xlat
fstp
mov
add
sub
add
cltd
movsl
mov
adcl
out
cwtl
add
push
jecxz
mov
repnz
cmp
cmp
test
sti
test
fdivrl
xor
nop
mov
cld
popa
fstpl
mov
inc
dec
xchg
dec
adc
out
loop
pop
or
fdiv
mov
movsb
push
jno
lret
cwtl
add
xor
int3
and
insb
mov
push
ds
ds
fs
mov
pop
fcomip
iret
mov
pop
insl
push
ds
in
repnz
pop
repnz
icebp
das
mov
lahf
push
or
cmp
fnstenv
xor
adc
out
push
mov
jo
stos
push
push
cmp
inc
leave
push
mov
xor
and
mov
push
push
ret
subb
mov
cmp
and
movsb
ja
enter
xchg
push
inc
mov
call
cmp
fwait
xchg
xor
cmp
mov
fimull
inc
cmp
xchg
in
xchg
dec
daa
add
call
sbb
in
jmp
mov
jmp
jle
mov
ja
repz
push
cmp
cmp
push
lahf
sbb
outsb
mov
roll
mov
movsl
cmpsb
ret
jbe
cmc
xchg
dec
mov
test
lock
mov
mov
or
nop
rorb
inc
mov
pop
sbb
or
jne
sub
adcl
sub
or
push
cmp
mov
push
les
gs
dec
mov
in
shll
mov
add
loopne,pn
ss
nop
sub
push
xchg
andl
xor
xlat
cmpsb
out
jmp
sbb
aaa
or
dec
les
shlb
inc
xchg
xor
lea
in
andl
xor
mov
stc
mov
pop
pop
mov
mov
mov
mov
lcall
mov
lahf
lods
push
push
lds
push
inc
cwtl
imul
test
push
xchg
shlb
pop
imul
pop
scas
xlat
sbb
cli
xchg
and
js
cld
mov
and
popa
ss
and
mov
stos
ret
pop
jnp
loopne
sub
jmp
mov
popa
sub
jb
push
jne
xor
clc
inc
adc
sti
popa
xchg
cmc
pop
into
jns
jge
adcl
push
push
movb
xchg
cs
add
jle
das
cmpsb
mov
iret
cmp
and
in
sub
mov
sbb
ss
int3
stc
push
daa
out
xor
inc
mov
enter
int
orb
pop
mov
inc
mov
imul
lds
leave
leave
xor
sti
add
mov
mov
sub
push
cmpsl
mov
filds
outsb
lea
xor
sbb
dec
xchg
in
aad
pop
pop
cmp
ret
stos
xchg
test
inc
add
orl
push
fimull
aam
xorb
xchg
decl
jae
push
sbb
cmpb
inc
add
jo
es
stos
iret
adc
pop
outsb
leave
xlat
out
mov
or
jle
jp
mov
add
mov
sbb
mov
xchg
pop
stc
cld
loop
pop
mov
bound
adc
jl
add
jne
ret
pop
dec
push
push
jp
mov
mov
rorb
sub
push
fists
mov
cwtl
jp
and
out
inc
in
mov
movsb
je
dec
xchg
cmp
lret
ficoms
fdivs
cmp
adc
lods
mov
lret
inc
dec
xlat
xchg
pop
xchg
sub
push
shrl
inc
push
subb
sub
add
xchg
mov
and
dec
movsl
and
sahf
rolb
jg
data16
stos
rcl
mov
jne
in
or
mov
js
add
aam
jb
mov
clc
les
jnp
lahf
lret
hlt
lea
cmpsl
ret
pop
sbb
jg
mov
in
dec
mov
shrl
mov
mov
fdiv
in
sbb
aas
ljmp
scas
loop
dec
adc
pop
sbb
pop
lock
int
sub
push
or
imul
addr16
push
jbe
nop
mov
add
inc
test
mov
mov
pop
gs
pop
and
add
stc
inc
notl
neg
push
or
ret
outsb
push
cld
loope
in
pop
and
xor
xchg
pusha
jle
scas
int3
mov
stos
cli
xor
lret
pop
lea
std
iret
push
nop
test
mov
lods
pop
inc
idiv
mov
lds
jecxz
out
js
dec
icebp
les
mov
dec
pop
xor
mov
pop
push
lock
adc
fldcw
and
rcr
in
scas
movsb
cwtl
clc
fsubs
jp
mov
adc
and
mov
pmuludq
pop
mov
push
fisttps
lcall
push
mov
ljmp
mov
add
aas
dec
insb
movsl
xchg
mov
mov
dec
cmp
cmp
and
mov
repnz
out
dec
jbe
scas
lock
scas
sbb
add
iret
pushf
add
push
out
push
sbb
push
test
cmp
xor
xor
fcoms
outsb
out
pop
mov
mov
mov
cmp
push
fcomps
rcr
push
mov
adc
lds
jb
inc
sbb
rorb
in
xor
repnz
adc
and
inc
jno
pop
fidivl
loope
mov
add
lret
mov
je
pop
pop
sub
dec
and
push
sub
enter
into
cmp
addr16
add
or
jp
xor
sbb
mov
sbbl
push
aaa
and
cmp
xlat
jl
xchg
hlt
jmp
xchg
mov
dec
lcall
xor
add
ljmp
popf
scas
loopne
subb
pop
loope
inc
inc
and
int3
and
out
dec
aaa
adc
sub
or
push
jae
lock
repz
pushl
push
dec
stos
add
adc
dec
push
pusha
sarl
jge
mov
and
add
movsb
icebp
xchg
push
sub
mov
ret
dec
mov
frstor
test
cld
test
ja
jl
pop
sti
cld
rorl
ret
push
add
ds
inc
push
inc
lea
insl
fists
inc
scas
jb
sbb
inc
mov
outsb
ret
je
mov
mov
fs
mov
shrb
cmpsl
push
add
jmp
shlb
or
sbb
sbb
imul
dec
scas
cwtl
fiadds
out
pop
in
addr16
and
mov
push
mov
and
stos
mov
or
pop
mov
fimull
aad
mov
lret
inc
push
jp
cmc
pop
movsl
mov
mov
and
fwait
mov
add
cs
in
out
jbe
vpacksswb
or
hlt
xor
mov
loop
loopne
jmp
add
cmp
nop
adcl
push
mul
leave
sbb
dec
movsb
movl
add
mov
daa
fdiv
add
cli
es
mov
in
pop
popa
xchg
mov
loopne
lock
int3
loop
loopne
das
adc
rep
sub
jae
pusha
loope
ret
rep
iret
jb
fisttpll
dec
mov
inc
jecxz
mov
pop
push
mov
das
cmpsb
movsl
and
add
stos
add
mov
in
adc
imul
cld
scas
sbb
fwait
bound
mov
lcall
fs
insb
or
call
xor
jmp
stc
cmpsl
cmp
push
leave
lea
sahf
or
nop
and
pop
xlat
dec
mov
xor
das
ja
push
shrl
adc
cmovb
mov
ljmp
cld
fnclex
xchg
pop
adc
ljmp
add
scas
in
in
jo
mov
arpl
push
jmp
push
cmp
nop
lds
das
clc
mull
enter
pop
mov
push
mov
mov
and
pop
xor
push
in
xchg
sub
js
orb
scas
lods
shll
popf
aad
push
test
cmc
fsubs
int3
push
lock
mov
mov
mov
xchg
loopne
lds
lahf
xor
test
mov
mov
lea
mov
sbb
shl
cld
xchg
pop
mov
xor
inc
and
inc
and
mov
repz
sub
inc
loope
aad
dec
dec
call
scas
in
xor
gs
xor
pop
inc
xor
or
loop
mov
roll
call
fldl
shrl
or
psubusw
pop
and
ffree
inc
pop
lret
mov
cwtl
aas
mov
push
or
insb
aam
mov
mov
decl
addl
mov
cltd
icebp
out
or
cmpsl
sbb
pop
rep
lods
test
leave
daa
xlat
call
faddl
scas
in
imull
xchg
push
int3
scas
or
jmp
jb
imul
or
or
push
int
xchg
jae
jmp
test
inc
clc
push
inc
jae
pop
leave
addr16
jmp
mov
and
cwtl
xchg
mov
fimuls
iret
xchg
dec
lcall
mov
add
mov
scas
jge
add
nop
repnz
jl
or
into
orl
ficompl
xchg
scas
dec
ljmp
xor
test
xor
movsb
mov
popa
xlat
dec
sub
ret
add
xchg
loopne
out
aam
push
fdivs
lods
and
mov
adc
lahf
stos
scas
std
pop
inc
push
mov
testl
inc
and
out
stos
mov
out
jle
push
add
pop
inc
inc
cmp
out
inc
clc
ja
sbb
pop
and
xchg
push
sahf
xor
aad
ret
or
xchg
test
lcall
jle
js
xor
and
repnz
jecxz
mov
jg
push
shll
lods
pop
xor
arpl
stc
dec
imul
clc
sbbb
and
mov
imul
and
test
out
cmp
jle
sbb
mov
icebp
mov
stc
adc
sarl
mov
jge
insb
push
mov
aaa
stos
cld
adc
and
scas
sub
iret
outsl
inc
fidivrs
aad
mov
xor
xlat
icebp
jbe
repnz
jmp
or
test
jbe
xchg
std
sbb
inc
adc
mov
arpl
in
sti
xor
test
xor
mov
xor
xor
xchg
mov
fidivrs
lds
pop
inc
adc
pusha
fisubs
addr16
push
mov
and
out
add
sub
push
xchg
loope
out
stos
jp
xor
pusha
xchg
pop
add
mov
shlb
inc
int3
inc
std
jo
push
das
lret
imul
jp
mov
jb
pop
push
fistpl
push
xchg
dec
inc
xor
jp
xor
mov
sub
rcrl
or
mov
xchg
mov
shlb
pop
lods
insl
cmpsl
loope
xchg
test
push
jae
adc
popf
fcoms
dec
xchg
popa
push
in
shl
sub
sub
or
xchg
push
push
mov
cmp
stos
adc
fistps
bound
sub
inc
sbb
xor
in
sarb
and
test
pop
daa
icebp
xchg
xchg
std
sar
cmp
fwait
sub
ficoml
test
sub
sahf
jge
popl
and
data16
xchg
add
nop
out
sbb
jns
push
pop
js
cli
ljmp
add
adc
fiadds
mov
jo
mov
pop
gs
add
popa
add
pop
ficompl
clc
push
cwtl
xchg
fcmovu
mov
mov
fs
mov
in
mov
lcall
push
cmp
mov
xchg
mov
loope
and
repz
call
cltd
decb
add
aad
mov
sub
mov
sbb
cmp
aas
or
xchg
inc
mov
test
imul
rcrl
shrl
loopne
mov
in
adc
mov
dec
cmc
jae
addr16
out
into
lods
xor
dec
add
ss
jecxz
xchg
sbbb
xchg
sar
int3
xchg
mov
stos
jbe
pusha
scas
sub
add
scas
lods
sahf
mov
imul
jbe
mulps
pop
xor
mov
inc
out
dec
xchg
movsl
pop
sbb
cmp
int
stc
or
xchg
add
std
add
inc
int3
testb
xchg
setle
es
and
pop
mov
xlat
inc
xchg
and
sub
dec
add
pop
loopne
mov
lods
adc
mov
popa
lcall
ds
ljmp
cmp
movsl
in
push
mov
push
icebp
mov
sahf
mov
push
out
sti
sub
cld
cmpsb
jnp
loopne
and
jae
xchg
xchg
fwait
inc
adc
adc
pop
cmp
fstpt
pushf
nop
jp
ret
cli
add
jo
fmul
out
aam
sahf
pop
sbbb
mov
mov
cli
call
pop
push
data16
inc
mov
pop
mov
jnp
dec
mov
pop
daa
pop
xchg
jnp
test
xor
cmp
cld
out
mov
fsubs
je
mov
pop
pop
rcr
and
std
dec
mov
pushf
sahf
lds
out
fistps
mov
insl
dec
jns
fwait
ja
rolb
mov
add
jnp
in
xor
and
lahf
push
mov
aaa
loopne,pn
inc
sbbl
cld
cli
shlb
inc
mov
lods
into
cmp
cltd
insl
jne
xor
jne
xchg
mov
jmp
adc
sub
insb
mov
mov
dec
xchg
fs
orl
cmp
lods
sbb
cmp
sar
jns
xchg
or
cmpsl
mov
insl
inc
mov
xchg
inc
aas
adcb
and
sub
iret
jb
or
and
lock
mov
stos
inc
sbb
adc
rcrl
and
dec
fwait
pushf
seta
adc
movb
jmp
pop
es
idivl
pop
xor
mov
fistps
inc
sahf
push
mov
xor
jmp
mov
shr
sub
cs
mov
push
lds
in
sbb
push
sub
xor
sbb
unpckhps
push
mov
xchg
test
sub
sub
jbe
stc
pop
int
inc
mov
jbe
lods
mov
push
std
pop
inc
add
sbb
pushf
pop
jmp
adc
stc
pop
out
dec
push
testb
xor
jns
mov
or
loopne
js
ja
lock
mov
and
lahf
lcall
or
sti
pop
orl
repnz
pop
lret
fbstp
and
imul
mov
scas
cmp
xor
int3
mov
leave
dec
jmp
inc
cld
popa
das
in
pushf
stc
sub
or
mov
movsl
jge
mov
fldl
inc
mov
xlat
dec
or
pop
push
enter
mov
ss
into
std
sbb
dec
inc
sbb
adc
dec
cmpsl
jb
add
push
test
mov
jbe
push
pop
outsl
jl
add
in
cli
out
or
push
pushf
mov
lcall
je
cmp
jbe
adc
rclb
pushf
cwtl
mov
cmp
outsb
sar
add
adc
sbb
xor
lds
ret
pop
inc
dec
or
push
nopl
or
jne
stos
jmp
inc
or
mov
fwait
sub
aam
daa
xor
int3
fidivrs
sbb
sbb
fiaddl
xlat
fisttpl
and
mov
pop
mov
cmpsl
lahf
push
popf
adc
adcl
cs
jnp
stc
and
stc
test
fstps
mov
or
in
mov
mov
jo
int3
mov
bound
mov
cld
popf
sahf
mov
xchg
mulb
out
mov
idivl
pusha
dec
ljmp
or
jmp
and
adc
iret
adc
pop
and
ja
imul
cwtl
lods
sub
test
adc
jae
add
mov
pop
xchg
and
xor
jmp
push
cs
imul
mov
cmp
mov
add
int
lret
sub
mov
inc
arpl
xor
insl
xor
inc
ficoml
mov
and
push
or
leave
dec
mov
outsl
push
test
pop
setl
push
mov
dec
pop
and
cmp
jle
and
push
xorb
jl
inc
xchg
mov
fbstp
call
mov
add
fcompl
pop
cld
jge
inc
xor
divl
mulb
mov
xchg
sub
nop
add
lock
pop
pushf
sub
stc
inc
sbb
cli
pop
repnz
push
jmp
dec
aaa
jecxz
test
inc
cltd
dec
rcrl
cmp
stc
push
into
popf
aad
stos
or
fwait
dec
xor
ljmp
mov
mov
push
cmp
add
fsub
inc
ret
jne
cmp
out
push
inc
add
fstpt
sub
daa
cmc
sub
or
adc
jnp
mov
or
sbb
sarl
mov
inc
sbb
xor
jmp
cmp
or
xor
cwtl
decl
ja
outsb
push
lods
adc
mov
push
jne
xor
dec
cmpsb
mov
out
jmp
dec
lcall
push
ret
enter
inc
pop
adc
pop
and
testl
lock
jge
xchg
ds
sub
inc
data16
sbb
loope
scas
mov
xlat
inc
mov
add
pop
in
stos
dec
inc
push
mov
std
repnz
mov
cmp
in
xor
add
pop
cmp
jnp
out
jbe
mov
lret
mov
fiaddl
in
jns
or
pop
mov
lods
lock
or
mov
test
std
shrb
xor
pop
sbb
sbbb
pushf
push
mov
cmc
call
vpmacssdd
cmp
push
cs
cmp
sub
mov
fisttpll
sbb
adc
fstpl
xor
pop
rclb
sub
mov
mov
xlat
or
and
repnz
fimuls
outsb
shrl
ss
mov
rcll
out
test
fdivrl
push
mov
lock
sub
arpl
out
xchg
pop
jno
mov
mov
test
sti
dec
shl
push
dec
out
int3
jle
movsb
filds
jmp
sahf
push
sub
pop
lahf
xor
je
and
stc
lcall
push
fwait
pop
scas
adc
movsl
sbb
in
into
mov
cld
cmp
mov
push
adc
mov
or
sbb
movsb
movsb
and
sar
sub
cmp
mov
stc
cmpsb
lock
xchg
push
sub
rcrb
outsl
popa
scas
inc
cs
sbb
shr
subl
lret
mulb
inc
lret
adc
cmp
das
mov
into
sti
mov
ret
inc
ret
or
addr16
sbb
push
imul
dec
push
sub
inc
sbb
int
lds
mov
pop
ret
cmpsb
insl
es
repz
xchg
fwait
roll
xlat
inc
jecxz
test
and
mov
aam
jb
clc
fwait
adc
dec
inc
sub
pop
lahf
jnp,pt
pop
push
je
xlat
inc
inc
jl
shlb
std
aaa
and
xor
test
popa
js
ss
push
mov
pop
xchg
and
sbb
mov
mov
pop
or
pop
popf
and
lds
inc
lea
sub
gs
pop
in
into
or
das
push
add
aam
mov
mov
test
call
jb
push
test
cmpsl
inc
add
xor
stos
inc
xor
and
or
cltd
pop
fisttpl
inc
sbb
cmp
movsb
jb
cmpsl
xlat
sub
cli
cld
mov
lret
and
mov
push
ja
jo
mov
lahf
enter
mov
out
sbb
shlb
jge
movsb
inc
xchg
sub
xor
aaa
adc
add
push
pop
mov
xor
inc
push
adc
lahf
xchg
sti
les
inc
sub
idivl
xor
lahf
fisubrl
xchg
pop
jge
ja
in
fiaddl
xchg
sahf
outsb
inc
daa
iret
adc
mov
mov
xor
addl
mov
xchg
xchg
dec
iret
xchg
xchg
push
pop
fnstenv
lret
pop
xor
ds
mov
out
shl
int
hlt
xor
jmp
xchg
call
sbb
jg
push
mov
pop
loope
andl
int3
jae
xchg
adc
push
sbbb
jne
or
mov
mov
inc
pop
mov
in
test
shl
cmp
sti
outsb
inc
repnz
addr16
in
repnz
mov
into
jmp
ret
mov
inc
push
sbb
jb
xor
adc
adc
mov
enter
mov
cld
sub
jnp
sti
sub
and
cltd
mov
jge
pop
add
dec
roll
push
stos
sub
les
jge
mov
aas
pushf
imull
roll
insl
sub
xchg
xor
push
testl
popf
cmpsb
sbb
or
jp
pop
lods
lods
inc
stos
imul
sub
push
sbb
dec
cs
mov
cwtl
sti
insl
ss
xchg
sub
xor
jbe
roll
imul
lcall
mov
clc
mov
lahf
fwait
mov
std
aam
mov
std
insb
jge
mov
out
sti
or
enter
aas
sbb
int3
xor
das
lret
aaa
push
rorl
mov
repnz
cmp
adcb
icebp
test
testb
push
dec
sbb
jmp
mov
sbb
push
cmc
sbb
or
les
insb
jmp
out
ret
ja
and
popa
out
mov
adc
sbb
cli
rol
sub
adcb
mov
sub
fnstsw
mov
in
cld
lret
insl
sub
xchg
mov
das
shll
test
cmc
jbe
insl
jb
jb
lret
push
cmpsl
fs
ja
xchg
mov
push
test
lcall
out
aas
loopne
xor
aaa
or
pop
cmpsb
jo
xor
adc
jo
mov
push
cmp
shll
test
and
mov
xchg
push
mov
mov
mov
arpl
mov
xor
xor
lret
gs
inc
mov
jl
sti
aam
aam
lret
pop
xor
mov
mov
movq
testl
pop
insl
mov
nop
or
mov
jmp
push
xchg
pop
stc
mov
cld
nop
push
sarb
out
xchg
sbb
roll
push
push
add
adc
into
ret
lcall
sub
sub
jg
and
out
push
fisubs
in
xor
pop
add
movsb
in
pop
out
jnp
inc
dec
jb
sub
pop
adc
mov
pop
sub
bts
add
jmp
pop
mov
loopne
andb
test
fcoml
arpl
push
jmp
cld
scas
dec
jmp
mov
insl
sti
cmp
ljmp
dec
bound
test
fcomi
nop
lea
and
testb
and
daa
lahf
inc
fstpl
or
jne
daa
sbb
mov
mov
push
mov
push
insb
jbe
pop
imul
ljmp
loope
sahf
pop
sti
jb
enter
push
test
push
fisubl
and
ret
lods
scas
int3
push
pop
xchg
fidivrs
adc
repz
cmp
jae
fs
sub
cmp
and
idivb
add
lret
aad
je
aas
mov
hlt
jae
xchg
fdivrs
je
sahf
cmpb
ret
aam
ffree
mov
shlb
jae
and
lret
pop
cwtl
outsl
mov
test
push
std
pusha
mov
imul
xor
rol
ficoml
or
and
xchg
inc
push
mov
jge
pop
jmp
cmpsl
ret
jle
inc
jns
dec
jns
xor
push
jmp
fcmovu
hlt
mov
pop
adc
das
loope
or
xchg
jns
sub
ret
out
sbb
sbb
inc
ljmp
sarl
xor
xchg
popl
jge
out
jns
ljmp
leave
loope,pt
pop
mov
mov
push
sbb
and
lret
movsl
negb
sbb
xchg
cmp
adc
pop
push
nop
dec
jl
mov
and
pop
mov
scas
fcompl
jne
hlt
xchg
cs
imul
sbb
cmc
xor
sub
xchg
add
divb
iret
dec
test
jnp
sti
pushf
ficoms
or
shll
adc
pop
fidivrs
push
jmp
xor
mov
xchg
clc
fsubrl
test
aam
arpl
mov
sbb
or
stc
stc
fdivl
mov
in
mov
push
jp
mov
push
mov
jo
sarl
push
add
mov
mov
xor
dec
cvtdq2ps
mov
test
pusha
jno
in
push
cmp
inc
mov
and
ret
jb
adc
push
into
jae
rclb
mov
add
xor
push
cwtl
cld
pusha
sti
sub
divl
call
inc
mov
lcall
cwtl
push
xlat
ror
ds
push
cmc
stos
or
std
test
ljmp
mov
and
pop
aam
mov
rcr
je
out
adc
or
mov
loopne
dec
and
mov
adc
in
add
sub
fsubp
push
std
nop
or
jge
mov
push
mov
xlat
sub
sahf
scas
fwait
push
addb
mov
jp
scas
and
or
mov
cli
cmc
rcrb
inc
pop
mov
cs
sahf
mov
test
jle
aam
incb
pop
dec
mov
stc
mov
imul
ficoml
pop
pop
mov
pop
aad
push
sbb
fsubl
inc
int3
iret
mov
cmpsb
arpl
jecxz
lods
xchg
aad
or
fcmovnb
jle
mov
sbb
sbb
loopne
insb
les
pusha
sbb
mov
jno
add
xchg
xor
add
psubb
dec
lock
xlat
inc
add
xchg
pushf
jmp
lea
adc
push
add
xchg
mov
pop
hlt
dec
xor
pushf
inc
add
mov
xchg
ficoml
fsubr
pop
push
mov
sbb
push
rolb
jmp
sbb
imul
mov
outsb
in
ss
xorl
xchg
test
jle
mov
movl
pushw
add
pop
std
xchg
je
cli
fdivrp
mov
cmpsb
popf
aaa
mov
dec
sbb
out
add
push
scas
mov
lahf
push
rorl
mov
fstl
mov
les
push
aas
out
sub
dec
xor
adc
fstpt
xor
mov
jb
push
adc
xor
test
fimuls
popa
js
lcall
or
gs
mov
cmp
pop
inc
inc
movsb
sub
aaa
jmp
mov
and
push
inc
adc
jmp
mov
lret
jo
cmp
dec
rcrb
sahf
pop
xchg
xchg
sbb
cld
xchg
into
gs
stos
xorb
and
js
mov
xchg
fidivs
in
lahf
imul
mov
je
popf
adc
out
adc
cmpsl
mov
leave
in
ds
lods
xchg
mov
sbb
sbb
clc
xchg
or
add
aaa
and
out
sbb
mov
mov
mov
in
add
imul
movsl
push
testl
data16
xor
das
cmpsb
jle
imul
mov
jle
pop
inc
fidivrl
and
lods
sub
mov
je
add
sub
in
and
mov
or
lret
mov
stos
xchg
outsl
jle
jp
pop
stos
pop
fs
or
pusha
jl
jp
pop
in
adcb
push
mov
cmp
inc
mov
lea
in
mov
mov
pop
sbb
sahf
mov
ljmp
shll
mov
out
enter
push
aas
mov
jmp
cmp
dec
enter
xor
jno
mov
adc
cmpb
fs
cltd
add
sbb
je
push
pop
es
ret
dec
adc
jge
ja
js
fadds
aas
lods
inc
lea
aaa
add
mov
add
inc
clc
dec
inc
outsb
and
sbbb
test
adc
cmp
test
fwait
std
mov
xchg
repz
mov
gs
dec
ret
push
int3
lret
sti
shlb
daa
pop
addl
clc
fwait
data16
fs
addb
lock
movl
xor
jo
add
repz
pushf
int3
js
mov
mov
cli
lret
jne
xchg
xchg
and
movsb
push
jle
sub
scas
jne
in
lret
out
inc
jae
pop
fwait
scas
adc
icebp
sub
pushf
pop
and
leave
add
jge
inc
clc
sbb
lahf
add
xchg
dec
ljmp
and
faddl
fcoms
mov
and
or
lods
sub
movsl
jns
push
add
ret
sub
andl
orb
leave
pop
cltd
mov
adc
push
or
cmpsb
sub
nop
fnstenv
outsl
fdivl
arpl
xchg
mov
cs
les
enter
jl
fsubl
jnp
insb
ljmp
pop
xchg
cmc
scas
xor
mov
cmp
pop
mov
inc
push
in
and
jmp
adc
stos
inc
cmc
mov
inc
stos
mov
mov
das
ret
les
imulb
stos
xor
stos
icebp
add
cmc
dec
inc
mov
jcxz
loop
mov
inc
fnsave
cmp
divl
popa
pop
lea
cmp
push
jno
in
enter
xor
dec
test
mov
loopne
cmpsb
incl
mov
push
scas
stos
dec
push
xchg
arpl
xor
dec
lock
prefetch
or
lahf
movsl
sbb
push
push
outsb
add
mov
push
fnstcw
lea
or
sub
sbb
loop
add
call
sahf
out
pop
scas
icebp
inc
push
pushf
cmp
push
mov
mov
mov
rcl
popf
lods
ds
outsb
mov
ljmp
aad
and
stos
stos
dec
repz
out
sbb
ror
jns
inc
mov
xor
push
mov
pop
adc
dec
mov
iret
dec
stos
mov
xchg
xchg
and
js
pop
leave
mov
repz
imul
das
stc
mov
adc
cmc
sub
aad
jmp
sbb
push
sbb
loope
jecxz
xlat
jo
mov
repnz
int
stc
inc
cmpsl
leave
inc
outsl
push
andb
sub
mov
mov
mov
pop
nop
test
cmp
movl
bound
icebp
js
out
vmread
popa
shll
je
shr
sbb
out
push
scas
pop
jp
in
dec
push
push
movsl
aaa
dec
xchg
divb
inc
sbb
bound
not
pop
and
and
negb
xor
int
dec
lret
inc
xor
rcrl
lcall
mov
xchg
sarb
adc
or
adc
popl
jno
mov
outsb
push
lahf
lods
test
cmp
inc
sti
cmpsl
roll
into
lods
int
popa
mov
lcall
test
mov
call
push
jge
fisubrs
test
scas
shlb
es
jg
lods
xor
jle
cmp
mov
lock
cld
js
cmp
mov
push
push
lds
ja
idiv
sbb
jbe
push
cld
lret
jl
test
push
loope
xor
jnp
sub
lds
ret
in
inc
sbb
dec
lret
xchg
aam
cmpb
xor
mov
xchg
daa
rcrl
sbb
mov
clc
mov
scas
jb
scas
outsb
inc
mov
xor
jmp
sahf
leave
outsl
mov
loop
negb
outsl
pop
sti
loopne
and
pop
mov
and
xor
setp
cmp
xlat
push
sub
and
jns
mov
push
mov
jge
sub
jns
fcom
cmp
dec
lret
xchg
xchg
push
lret
into
rorb
mov
cli
dec
and
pusha
cli
inc
or
adc
jns
xchg
and
jl
inc
pop
lock
iret
push
test
pop
jo
jns
gs
roll
push
and
fimull
pop
mov
stos
leave
inc
popa
xor
in
mov
cmp
xchg
jmp
jecxz
pop
push
sti
call
sub
fisttpll
cmpsb
mov
lods
mov
xchg
ljmp
lcall
leave
es
ss
sbb
jp
mov
hlt
cmc
scas
fisttpll
ret
out
add
cmp
int
xor
loopne
das
int3
out
iret
fwait
cld
outsl
ss
jecxz
insb
dec
sub
pop
loope
bound
adc
sbb
cmp
dec
lahf
push
popf
int
test
xchg
daa
lahf
mov
rcl
adc
push
push
fstp
jb
xchg
pop
repnz
sti
pushf
sub
xchg
rorb
shll
push
cmp
adcb
popa
sub
mov
and
iret
dec
push
pop
les
and
and
icebp
xchg
xor
mov
cwtl
pop
push
dec
push
cmp
mov
fisubl
pop
imul
clc
adc
mov
jp
inc
pop
adc
mov
mov
mov
aas
push
ljmp
push
mov
jecxz
inc
pop
sbbl
shrb
inc
adc
and
push
das
lcall
mov
arpl
xor
xchg
andl
pop
mov
inc
stos
test
push
push
repnz
lret
sbb
loope
jmp
rorl
idivl
jp
mov
sahf
fiadds
dec
mov
mov
in
jns
add
popf
jmp
pushf
and
sbb
lcall
push
inc
xor
jg
jns
xchg
cmc
xor
dec
notb
inc
adc
or
or
cmp
or
push
jbe
pusha
mov
rolb
popl
lret
aad
mov
pop
cmpsb
lret
ja
push
pop
push
mov
movsl
rorl
dec
inc
std
ret
sbb
jg
sub
jge
test
aas
jns
push
rcl
push
push
nop
dec
or
push
xor
ljmp
sar
lea
mov
ljmp
jno
mov
jne
mov
or
add
into
push
mov
mov
mov
nop
dec
xchg
xlat
push
pushf
shrl
push
sarb
sti
movsl
adc
inc
mov
test
test
add
xor
jno
sbb
mov
pop
es
loope
clc
jp
xchg
xorl
ret
push
add
loopne
sbb
hlt
push
into
push
inc
mov
xor
fildl
mov
mov
aad
push
jmp
int
sub
mov
dec
nop
push
push
lret
testl
ja
jbe
sbb
loopne
mov
aam
cmpl
pushf
icebp
cmpsb
mov
loope
pop
inc
rorb
inc
mov
rclb
call
ja
outsb
shlb
pushf
cltd
dec
incb
cmp
push
add
sub
mov
jo
cmp
or
xchg
loopne
mov
adc
rcrl
push
jle
pop
jge
dec
mov
test
inc
mov
add
mov
mov
mov
fstps
loop
cli
xchg
pushf
mov
mov
popa
mov
data16
test
je
mov
sub
out
mov
and
loope
arpl
imul
out
pop
outsl
inc
xor
in
adc
out
adc
adc
je
test
mov
stos
aam
mov
push
mov
stc
and
jbe
addl
and
cmp
stos
cmp
int
divb
xor
inc
loopne
out
and
jle
addr16
xlat
inc
cmp
mov
fmull
inc
inc
adc
sahf
xchg
in
ret
and
stos
xor
leave
and
inc
mov
sub
mov
mov
cli
add
mov
call
pop
mov
out
mov
adc
push
dec
mov
push
test
mov
push
scas
jbe
pop
dec
popf
into
jg
mov
ds
sbb
ja
mov
add
fsubr
or
mov
mov
in
mov
pop
inc
pop
sub
push
ja
or
mov
sub
int
mov
mov
or
xchg
push
lds
and
pusha
pop
addr16
jmp
cmp
movsb
or
xor
test
fstpl
mov
cmp
push
mov
addr16
out
aad
in
loop
cmpsl
and
adc
mov
adc
mov
push
icebp
rorl
mov
jo
add
clc
sub
insb
pop
and
add
mov
pop
jne
mov
pop
xor
clc
lods
mov
sub
pop
repnz
xchg
xchg
pop
mov
div
lcall
mov
jg
mov
arpl
in
push
xlat
pop
xchg
add
add
arpl
cmpsb
jmp
shrl
es
std
jb
pushf
cmpsb
pop
push
sbb
insl
rolb
mov
mov
movsl
cmc
jne
cmp
movl
lahf
enter
and
mov
sbb
leave
jg
imul
cld
xchg
sbb
push
add
xor
add
or
insb
rorl
fdivrp
imul
fistl
jp
insl
pop
shl
fstpl
push
xchg
shrb
mov
inc
mov
xchg
mov
dec
jecxz
add
mov
xchg
filds
stos
pusha
lcall
mov
subl
xchg
daa
and
mov
mov
sub
jbe
pop
xchg
and
mov
xor
test
iret
into
fmul
xor
adc
push
jae
imul
jmp
inc
lcall
jecxz
mov
pop
mov
jns
adc
or
push
jg
cmp
rcl
or
mov
and
jg
xlat
pop
popl
push
or
dec
ljmp
mov
enter
dec
xchg
imul
adc
pop
rcll
lock
cwtl
popa
adc
andl
xor
pop
xor
cmp
push
mov
movsb
fs
inc
js
pushf
frstor
push
jmp
int
data16
out
adc
mov
hlt
cld
div
popf
repnz
add
imul
arpl
adc
nop
dec
mov
xchg
cli
out
sti
mov
cld
in
repz
or
mov
shrb
sub
cli
icebp
sbb
popf
into
inc
jecxz
jecxz
mov
test
jp
jnp
orb
xor
stos
aaa
in
ds
mov
jecxz
mov
adc
dec
push
lods
xchg
dec
or
and
jbe
std
imul
imul
andnps
cmp
mov
push
lahf
xchg
arpl
sbb
pop
cltd
sbb
xchg
in
lea
inc
dec
mov
push
mov
mov
add
addb
stos
mov
xor
ret
and
push
imul
fsubl
dec
dec
push
gs
push
ss
fstl
and
out
adc
test
push
jge
sbb
lcall
in
aam
sbb
mov
and
pop
mov
lret
mov
pop
xchg
mov
add
lahf
lock
int3
cwtl
cmp
es
adc
push
dec
stc
adc
push
iret
mov
mov
les
fisttpl
fisubrs
mov
adc
pop
repnz
dec
cmp
test
inc
xlat
or
jecxz
and
imul
mov
das
aas
mov
test
imul
js
ret
dec
and
lret
sbb
shll
cmpsl
pusha
pop
lcall
or
xor
sbb
add
ret
xor
das
sub
jl
mov
inc
inc
xchg
jle
xor
add
lea
jg
outsb
les
sub
sub
pop
xchg
outsb
icebp
jmp
sti
xchg
inc
adc
jb
xor
inc
xor
push
mov
cmp
pop
pop
mov
inc
dec
adc
enter
lret
sbb
adc
push
sub
fcmovbe
and
enter
mov
or
cmpsl
scas
bound
or
push
imul
xchg
outsb
repnz
xchg
fcomi
ret
or
daa
mov
dec
mov
jnp
push
add
sub
sahf
xor
inc
mov
xchg
xor
dec
pusha
subl
sti
pusha
xchg
pop
popa
js
fbld
mov
mov
jb
es
mov
mov
mov
popf
fdiv
outsl
arpl
xor
jno
mov
fisubrl
aaa
cli
jno
cmp
cmp
pop
xor
lods
cmp
aas
lods
cmpsb
inc
dec
addr16
adc
js
stos
inc
sub
imul
leave
and
add
mov
ret
addl
sbb
xor
sti
or
out
pop
adc
popf
inc
cmp
push
sub
dec
jne
ds
bound
jne
cmpsb
idivb
rcll
cs
jecxz
and
xor
jmp
out
frstor
adc
pop
push
push
int3
fs
xchg
stc
jmp
inc
jo
nop
jp
adc
shrl
sarb
test
xchg
pop
shl
push
dec
rorl
push
pusha
push
pusha
test
mov
push
ret
xchg
popa
mov
jl
mov
ja
push
cmp
ficomps
adc
and
mov
sahf
xor
test
cmp
iret
or
ss
fsts
jl
in
sub
pop
adc
es
nopl
ss
mov
push
arpl
dec
mov
sti
cmp
aam
jb
dec
xchg
repz
mov
sub
inc
lcall
cmp
cli
mov
insb
imul
test
cmc
and
push
loope
dec
imul
mov
adc
sbb
and
jp
js
push
int
or
mov
jnp
repz
enter
and
repnz
mov
adc
testb
dec
mov
jnp
arpl
xchg
ffree
push
sbb
jae
test
dec
or
jle
jae
mov
arpl
xchg
fbstp
dec
gs
pop
fstl
mov
and
xor
jae
pushf
call
sahf
cwtl
jp
je
ret
adc
aas
cltd
mov
xor
add
and
in
sub
mov
cld
in
adc
push
gs
rolb
pop
and
nop
jge
out
push
jl
dec
test
mov
mov
push
mull
push
xlat
in
mov
add
fwait
pop
cltd
ljmp
inc
stos
mov
cmp
roll
push
inc
sub
mov
popf
popa
rcrb
jo
popf
test
fildl
xor
insb
arpl
jg
sub
pop
or
mov
adc
mov
xchg
dec
data16
sub
sbb
addr16
dec
fcmovnu
push
loopne
add
xor
std
jmp
pop
jno
dec
or
inc
les
test
testb
lods
out
mov
test
and
xor
jae
cmp
test
or
and
iret
inc
pop
je
or
jg
sub
or
xor
push
lods
stos
mov
sbb
sar
push
pop
push
inc
addr16
jg
pop
sti
mov
rcrl
ret
pop
insb
fs
xchg
out
sbb
int
insl
xlat
mov
mov
inc
inc
dec
in
aas
mulb
mov
adc
leave
sub
mov
mov
jmp
jb
clc
jo
cmp
outsb
lods
sbb
cmp
mov
inc
daa
test
sub
push
mov
aaa
das
ret
imul
inc
es
and
dec
mov
push
xchg
pop
addr16
mov
inc
inc
in
xchg
into
fwait
lcall
data16
xchg
cmc
jne
nop
adc
inc
and
test
movsl
lock
push
cmp
mov
dec
insl
setns
aad
fcomps
jo
pop
js
mov
lds
push
adc
icebp
cmp
jnp
cltd
lret
mov
add
pop
pop
fisttps
pop
push
inc
dec
loop
push
mov
pop
cmc
push
push
aad
push
cmovb
leave
pop
sub
mov
rcrl
jb
xor
jno
mov
and
psadbw
cltd
sahf
adc
scas
mov
rcr
cmp
loop
push
loope
pop
movsb
ret
incl
data16
jae
mov
mov
rol
xor
pop
leave
sbb
sbb
mov
call
push
push
stc
cs
sbbl
jp
rcll
push
repnz
adc
call
repz
sub
lock
outsl
push
xlat
push
fwait
jl
push
test
repz
negb
sbb
dec
stos
push
movsl
sbb
into
data16
es
jge
movsl
push
inc
mov
pushf
inc
push
loope
adc
inc
test
gs
fisubrs
xchg
fwait
xor
fimuls
sti
cmpsb
mov
stos
mov
and
cmp
ljmp
fstpt
je
jp
les
stos
ficoml
cmpb
mov
pop
cmp
add
mov
sbb
jno
pop
jne
mov
mov
lock
rcrl
mov
and
xchg
and
mulps
mov
mov
mov
pop
mov
in
dec
aad
lahf
mov
dec
xchg
dec
sbb
dec
test
push
iret
repz
mulb
xchg
sti
repnz
lret
cs
jge
adc
inc
or
pop
or
mov
pusha
jp
lret
jae
clc
cmp
sub
adc
inc
jno
sbb
adc
pop
pop
movsb
neg
rcl
mov
xchg
jb
fcmovnu
icebp
xchg
roll
xchg
lahf
call
mov
and
test
dec
lret
clc
or
inc
adc
cmp
sub
push
dec
mov
xlat
xlat
mov
in
mov
inc
mov
cmp
rcll
push
push
ds
jl
sti
jno
pop
adc
inc
jno
pusha
aaa
mov
xor
inc
jge
scas
inc
fwait
push
lret
mov
adc
add
cmpsl
sub
sbb
mov
inc
mov
inc
xchg
gs
pop
xchg
adc
xchg
repnz
out
aad
jnp
add
int
jmp
cwtl
lds
lds
inc
cmp
or
sbb
xor
mov
jbe
sti
push
stos
leavew
push
fs
jo
inc
push
adc
and
lahf
stc
mov
and
xor
out
mov
inc
sbb
out
pop
xor
mov
js
ja
and
int3
fwait
jo
dec
sbb
push
mov
js
and
or
dec
incb
insl
sub
insb
xor
pop
cli
pop
je
daa
fidivs
sbb
out
inc
mov
ret
pop
jbe
sbbl
mov
insb
sub
stc
xor
je
adc
jl
cmpsl
aam
push
mov
enter
int3
and
sbb
xor
xor
pop
aas
flds
dec
cmp
fildll
jl
mov
lods
adc
hlt
jge
xchg
jl
pop
cld
out
push
inc
out
std
in
cmp
pusha
cmp
sbbl
xor
sti
or
mov
in
das
mov
jo
jecxz
aam
push
pop
xchg
das
add
push
clc
push
sbb
cmp
push
and
icebp
ljmp
jno
push
sbb
push
fnsave
mov
jg
sbb
xchg
push
cmpsl
imul
sbb
dec
ss
and
adc
test
mov
iret
imul
lea
test
jae
out
iret
test
or
xchg
cmp
movsb
xchg
inc
cmp
inc
sbb
jbe
mov
out
orb
into
add
mov
xor
pop
incl
fwait
out
test
fcomi
pop
popa
xchg
sub
mov
inc
sub
lret
cmp
xchg
xchg
adc
inc
in
cld
test
cmp
jg
fwait
testl
dec
or
scas
push
fisttpll
inc
mov
xchg
sub
imul
addl
push
push
loop
mov
jge
mov
sub
xrelease
pop
cs
es
push
push
pop
repz
cmpsl
mov
ljmp
and
inc
sbb
pop
jle
ja
sub
and
xor
cmpsb
lods
sub
push
xor
pop
dec
mov
mov
fwait
dec
sbb
loopne
cld
add
dec
test
add
mov
jge
fiaddl
xchg
mov
les
sub
cld
scas
push
sub
idivb
loopne
xchg
cld
inc
repz
push
pushw
outsl
jg
outsb
cld
xchg
outsl
fwait
mov
adc
rolb
sub
outsl
xchg
out
inc
dec
cmpsb
adc
shrl
enter
xchg
jae
es
mov
cwtl
or
mov
pop
int
cmpsl
repz
and
test
lret
pop
xchg
loopne
mov
mov
into
hlt
shrl
mov
mov
ss
pop
xchg
movb
xor
push
in
loopne
bound
int3
rclb
data16
xor
movsl
and
mov
test
int3
pushf
and
dec
or
mov
jle
add
data16
sarb
or
imul
mov
fisttpll
jno
lds
rclb
pop
enter
out
ss
jle
cwtl
mov
xor
movsb
fists
insb
dec
jns
imul
test
movsb
add
push
or
out
adc
stos
and
mov
jmp
xor
rcll
dec
leave
mov
add
pop
and
mov
dec
dec
cmp
lock
push
xchg
add
int
xlat
scas
bnd
scas
inc
dec
in
pop
jb
loop
fwait
scas
test
adc
mov
push
test
pop
cmpsb
movsl
push
das
test
addr16
cmpsl
inc
nop
lods
lods
push
push
jno
cmpsb
leave
mov
adc
add
xchg
dec
xchg
mov
add
mov
lock
jg
fsubl
lret
sbb
loop
jb
pop
inc
imulb
cmp
cmc
loop
mov
aam
push
addr16
fbld
sbb
push
push
fcoml
push
lret
cmc
pop
outsl
sub
ret
push
cs
mov
ret
jg
std
sub
insl
and
out
or
cmp
pushf
adc
lea
out
inc
idivb
adc
shl
stos
or
pop
int
repnz
sub
xor
and
sbbl
inc
mov
sti
mov
mov
fwait
arpl
dec
adcl
subl
lea
cmc
xor
aad
and
adc
push
sub
popa
mov
sbb
cwtl
mov
movsl
subl
sbb
adc
cmpb
cld
clc
enter
adc
jne
jg
iret
adc
sbb
pop
loop
push
stc
mov
cmc
jl
mov
or
pop
inc
xchg
xchg
sti
inc
out
xchg
jno
jle
aad
mov
xchg
cmp
ljmp
out
mov
in
add
ja
jae
shr
mov
or
outsl
pop
stos
repnz
insb
test
ret
cli
insl
mov
cmc
hlt
jg
int3
pop
clc
pop
cltd
int3
xlat
int3
inc
or
pop
insl
xor
outsb
cld
cmp
in
cmp
sbb
rclb
push
sbb
test
sbb
adc
test
or
stc
fwait
push
shll
repnz
xor
push
jmp
adc
cmp
push
test
je
mov
xchg
cmp
mov
icebp
pop
mov
cld
or
mov
stos
repz
sub
cmpsb
add
lahf
rcll
and
inc
jns
cs
js
dec
hlt
mov
xchg
sub
xorb
adc
testb
push
sub
and
push
roll
test
or
push
push
sub
sahf
sbb
jmp
sbb
into
mov
add
ret
or
sub
push
dec
mov
push
push
pop
int
cmpsl
xchg
pop
gs
call
lret
jns
adc
pop
and
gs
xchg
adc
pop
loop
in
rep
je
pop
mov
mov
or
cmp
int3
aam
mov
mov
push
mov
push
shlb
mov
test
or
xchg
jbe
sbb
popa
call
movsb
add
add
inc
xor
cmp
xor
lds
leave
mov
adc
xchg
mov
mov
push
movsl
fincstp
mov
and
sub
out
adc
in
loop
aaa
add
sub
pop
shlb
dec
dec
add
pop
dec
leave
mov
xchg
fnstcw
pop
mov
push
mov
lock
das
and
jmp
push
int3
fs
lret
dec
mov
and
mov
ret
es
xchg
gs
sbb
daa
movsl
loope
mov
jmp
push
nop
add
fs
repnz
loopne
in
inc
jnp
and
cmpsb
adc
xchg
jmp
pop
and
insb
jnp
fs
xchg
inc
inc
stc
cmp
cmp
movsl
sahf
push
push
popa
lea
insl
or
mov
js
mov
adc
std
icebp
pop
add
clc
dec
lds
fs
jmp
fstpl
daa
pop
cmpsl
pop
dec
leave
lahf
mov
jecxz
ds
cmp
dec
mov
xlat
int
sub
jo
mov
mov
jns
std
dec
and
mov
mov
xchg
push
outsl
ss
shl
rclb
jge
and
mov
adc
idivl
fsubl
or
xlat
bound
cmpsb
aaa
repnz
xor
jmp
jnp
mov
mov
sub
cld
push
mov
mov
and
jg
pop
test
outsb
mov
pop
add
test
mov
jo
mov
lods
sub
and
xor
dec
je
imul
popa
mov
mov
mov
loopne
and
sbb
iret
or
in
test
xor
gs
push
mov
cwtl
fidivl
pop
sub
jg
push
and
cmc
mov
jmp
ror
imul
mov
dec
mov
pop
add
cmp
jecxz
loopne
icebp
mov
lret
inc
mov
sbb
mov
sbbb
push
stc
in
repnz
adcl
cltd
les
aad
orb
jmp
fs
inc
mov
xchg
or
loopne
shlb
mov
fisubrs
dec
cmp
insl
pop
les
cmp
and
js
insl
mov
add
std
adc
pushf
cmp
cmpb
jg
adc
push
mov
bound
loope
aas
xchg
shll
pop
fsubrs
test
ret
cmpsb
hlt
sbb
add
out
xlat
enter
inc
mov
push
mov
mov
test
push
or
inc
inc
andb
inc
cmpsb
fildl
imul
mov
stos
insb
aad
loopne
xor
decb
pop
pop
lret
iret
lods
push
dec
out
adcl
jl
sahf
in
insb
pusha
mov
xor
aam
in
adc
sub
xchg
clc
ljmp
hlt
pop
jb
jb
pop
jg
addr16
daa
dec
mov
das
xor
ja
jo
pslld
test
jae
mov
roll
fistl
add
hlt
or
pusha
int3
sarl
mov
adc
bound
test
sbb
or
and
mov
add
neg
push
test
push
pop
std
out
mov
xor
jle
inc
and
ret
jg
xor
mov
sub
mov
test
je
and
mov
dec
orb
sbb
rcl
push
push
and
mov
cld
daa
push
mov
stc
mov
inc
add
hlt
mov
push
movsl
xchg
mov
xchg
leave
push
sub
pushf
push
mov
mov
insl
mov
test
and
leave
mov
aam
cmpsl
mov
add
adc
dec
loope
pop
xchg
xor
push
add
int
fdivrl
mov
adc
jg
filds
fwait
insl
fs
xor
mov
js
cmp
stc
fisubrs
orb
adc
test
rcrb
dec
lcall
jg
sub
xchg
mov
push
out
sarb
fiadds
gs
pop
pop
and
negl
out
mov
sub
xor
fcmovb
lahf
out
das
test
mov
pop
add
sub
sub
dec
stc
filds
movsl
xor
xor
mov
icebp
sahf
jno
js
or
adc
mov
lods
test
push
mov
xchg
inc
mov
fwait
shl
dec
jp
rcrb
stos
jmp
ret
in
jbe
pusha
or
stos
fisubrs
xor
dec
mov
jbe
inc
scas
ja
add
push
inc
sub
lea
inc
addr16
scas
jmp
mov
leave
test
mov
mov
inc
push
and
arpl
aaa
adc
or
pop
mov
pop
mov
xchg
adc
test
pop
rcrb
push
mov
push
test
xchg
and
jg
mov
outsl
cmp
out
jo
inc
pop
inc
mov
cmp
pop
in
pop
mov
push
aam
lds
jae
mov
inc
adc
outsb
lea
cmp
mov
push
outsl
add
push
fisttps
mov
pop
fwait
jo
inc
cmp
pop
mov
push
xor
lods
mov
outsb
mov
dec
call
dec
push
mov
out
mov
xor
mov
xchg
loop
in
hlt
sbb
scas
jp
shrb
insb
out
lcall
xor
xchg
add
or
shlb
or
jno
sub
rolb
mov
adc
ja
lods
subl
jno
cmp
rcl
cld
push
jmp
sub
xchg
in
bnd
daa
movsb
sar
sub
mov
mov
mov
loop
and
mov
cmp
lock
sbb
xor
imulb
aas
xchg
xor
adc
sar
rcrl
xor
call
mov
out
sub
stos
and
jns
adc
xchg
les
cmpsb
mov
loopne
cld
xor
cmpsl
cmp
in
out
lds
scas
dec
cmp
inc
flds
mov
ds
sub
add
xchg
jmp
jnp
mov
dec
cmp
ret
push
xor
adc
push
mov
dec
sbb
cmp
lret
mov
mov
push
or
test
mov
jp
movsl
aam
jmp
cmp
cwtl
lret
jp
imul
adc
imul
cltd
cmp
mov
xchg
addr16
xchg
xor
stc
pusha
xchg
add
std
sub
or
push
mov
push
mov
and
daa
xchg
push
adc
jle
loopne
aam
fs
popf
adcb
add
dec
pushf
mov
lds
arpl
imul
mov
mov
fimull
push
ja
jo
add
into
inc
jl
jnp
nop
push
lahf
mov
test
je
popf
inc
loope
mov
push
arpl
aad
jg
sbb
xor
mov
in
cli
xlat
ss
pop
aas
sbb
cltd
push
xor
jle
push
ja
fstpl
pop
leave
rcrl
xchg
push
shll
test
push
mov
loop
daa
cmp
pop
push
lret
add
int3
in
mov
frstor
xchg
sub
xchg
sbb
mov
mov
adc
or
mov
sub
ss
je
fs
mov
outsl
ficoms
gs
imull
les
insl
shl
fldt
test
pop
xchg
mov
push
lea
das
push
push
stc
imul
mov
xlat
aaa
mov
stos
stc
into
mov
pop
push
stos
lds
push
loop
cld
in
sbb
mov
dec
sub
push
mov
pop
push
or
repnz
sti
out
ljmp
cmp
jmp
clc
push
add
mov
ss
sbb
sahf
ret
sub
ja
xlat
ret
jae
jp
pop
scas
pop
jno
pop
insb
sti
das
cli
popf
sti
or
sbb
sbb
lods
jp
fcmovb
cld
jecxz
or
mov
or
xchg
stos
dec
movsl
cmp
xchg
xchg
cmp
push
mov
sub
imul
out
mov
xor
divb
jae
setle
jns
mov
or
jnp
lods
mov
jecxz
mov
sbb
hlt
adc
sub
scas
jmp
mov
jbe
pop
ret
sbb
addr16
arpl
lea
pop
hlt
in
cwtl
ds
jno
mov
xor
jne
sub
movsb
sub
and
repz
sub
mov
sub
sub
loope
xchg
loop
dec
rclb
push
push
dec
enter
inc
add
jp
xor
pop
xor
lret
jnp
pop
jecxz
xchg
stos
pushf
lahf
ja
jb
adc
xchg
add
cmpsb
icebp
fcmovnu
test
sti
sarl
sbb
cli
roll
pop
imul
pop
mov
int
add
cmp
lret
push
xor
add
dec
idivb
xchg
jg
or
test
xchg
inc
fcmove
sub
xor
in
or
adc
jl
mov
iret
xchg
aaa
mov
pop
call
rolb
cld
cs
lea
and
mov
add
shll
sbb
aas
mov
cld
sti
xchg
xchg
ficoms
push
sub
fs
ja
push
int3
xchg
repz
jl,pn
inc
daa
mov
push
fs
in
jl
xchg
lods
sub
pop
mov
gs
jg
cltd
xchg
test
adc
or
dec
mov
mov
sahf
push
clc
pop
or
push
cmp
stc
adcb
out
jecxz
fcmovbe
testl
or
orb
dec
cli
shl
push
ficomps
and
iret
cmp
pmulhuw
sub
in
aaa
ja
dec
jne
jo
ret
jns
aam
adc
bound
push
jns
mov
adc
int3
jl
insb
inc
clc
pop
stc
mov
push
or
add
jo
subl
imul
fldt
add
cmp
sub
jmp
adc
cwtl
inc
xchg
push
js
pop
das
and
adcb
lret
push
lret
push
imul
nop
dec
mov
icebp
imul
adc
jg
fistpll
test
bound
mov
and
scas
mov
mov
inc
and
add
xlat
cmp
dec
push
xorl
jnp
data16
call
insb
jbe
inc
scas
dec
jmp
pop
mov
test
idiv
int
inc
lea
mov
dec
adc
pop
or
add
loopne
aas
cli
fisubs
push
jecxz
andl
movsl
cmpsb
mov
dec
std
jmp
ret
subb
push
add
testb
mov
loop
sbb
push
cli
xchg
scas
mov
inc
inc
out
imul
mov
or
aas
xchg
fs
ficomps
or
push
lods
xchg
test
das
xor
mov
and
pop
mov
inc
movsb
fldl
jge
enter
xlat
bound
sub
mov
inc
lock
sahf
pop
push
jmp
fmul
adc
out
mov
mov
out
jo
mov
mov
pop
mov
in
sbb
mov
adc
fidivl
out
test
push
mov
push
cmp
sahf
cmp
mov
popf
js
sub
dec
js
fcomi
loope
clc
sub
subl
popf
inc
adc
out
sbb
adc
mov
outsl
cs
call
lcall
mov
mov
push
adc
dec
dec
movb
faddl
lods
cli
or
scas
jae
sbb
sbb
push
bound
aas
cmpsb
mov
fmul
ds
filds
add
or
fcomps
pop
flds
fisubrs
into
mov
stos
adc
mov
jae
push
aam
lods
enter
inc
push
loope
gs
and
sbb
lea
cmp
cs
mov
adc
test
sub
into
shlb
push
mov
loope
lea
and
mov
push
inc
shrl
push
mov
push
add
inc
mov
mov
mov
cmp
jmp
push
jno
sub
repnz
or
repnz
inc
ret
shll
jecxz
cli
adc
imul
dec
mov
xor
fldl
test
xor
fsts
into
iret
andl
das
nop
cltd
fisttps
dec
test
mov
cmp
add
leave
mov
repz
mov
add
push
mov
daa
mov
sbb
dec
lret
cmp
addl
int
xor
pop
add
dec
add
movsb
mov
push
xor
gs
xchg
and
lcall
dec
dec
test
or
lahf
lahf
jns
jmp
sbb
inc
cmpb
into
pop
in
jge
test
call
jo
clc
je
cld
int
arpl
push
mov
xchg
xor
adc
and
or
lcall
filds
ljmp
xor
dec
sbbl
dec
popa
push
sbb
xchg
fldenv
and
add
mov
std
push
jg
lods
mov
inc
shlb
and
stc
pop
dec
xchg
sbb
push
inc
out
ljmp
adc
out
sbb
fxch
jbe
clc
and
arpl
dec
stos
daa
test
rorb
sub
cmpsl
nop
or
mov
jb
jmp
pop
lods
sbb
addr16
adc
adcb
pop
push
push
jb
xchg
jp
xchg
scas
jge
adc
test
addb
cmp
aad
pop
dec
ds
shr
movsl
repnz
data16
repnz
add
pop
out
mov
sti
mov
add
sub
test
adc
das
ja
stc
jg
lret
pop
fs
push
sub
pop
lret
push
cwtl
xor
push
cltd
push
pop
adc
mov
and
xorl
push
cwtl
rolb
roll
aas
mov
mov
decl
dec
fiadds
or
inc
lahf
mov
add
imul
adc
movsl
mov
or
std
mov
lock
jno
add
test
lea
lods
out
fs
push
or
test
lcall
mov
mov
out
jle
aad
cli
add
adc
sti
jnp
mov
mov
adc
jecxz
fs
or
mov
and
scas
popf
cmp
fs
mov
out
xchg
cmp
push
xor
pop
and
mov
out
fcom
js
mov
std
push
and
int
mov
push
mov
sbb
aas
xchg
fimuls
shrb
or
jb
imul
scas
stc
in
dec
adc
fcomps
test
addr16
mov
mov
je
jp
insb
mov
notb
push
divb
or
add
mov
repz
popa
cmpsb
fwait
and
and
pop
mov
mov
mov
or
iret
inc
jl
jo
mov
popa
pop
shrl
adc
dec
mov
jnp
cmp
lock
pop
addb
enter
int
outsl
cmc
fs
aad
pusha
test
adc
mov
in
inc
mov
adcl
gs
out
mov
push
add
cld
bound
jge
pop
sti
imul
add
push
xor
mov
imul
jmp
cmp
imul
xor
pop
out
mov
jbe
jge
lret
dec
cmp
sbb
add
fistl
cmpsl
cmp
es
fimuls
mov
cli
pop
inc
mov
jo
int
or
dec
ficomps
bound
or
pusha
out
ret
out
jae
outsl
fsubr
mov
and
push
sbb
loopne
imul
ja
adc
jecxz
jl
andnps
adc
jo
bts
js
mov
inc
jns
mov
cmp
jl
sub
jb
add
add
cmp
xchg
aad
xor
in
sub
lret
cmp
shl
xchg
or
aaa
repnz
bound
inc
lods
out
xor
xlat
cld
cltd
fcmovu
mov
cmpsl
ljmp
cs
add
mov
pop
cmp
shrl
pop
out
jg
out
fstps
push
add
sub
fnstcw
sbbb
in
cmp
jne
das
nop
sub
scas
push
stc
into
mov
gs
pop
push
adcl
cmp
cwtl
jnp
mov
jmp
xchg
push
sbb
je
idivb
or
fnstcw
fidivl
push
decl
ret
dec
movsb
lret
mull
pop
xchg
adc
jg
mov
mov
lods
das
cmp
adc
xchg
and
fildll
shr
les
push
pop
shll
shll
int
cmp
mov
test
repnz
or
sti
stos
call
cmc
dec
mov
sbb
push
push
add
adc
jecxz
xor
xor
xchg
mov
loope
xchg
and
daa
aas
in
cmp
push
enter
mov
jb
lods
sbb
xchg
fs
sbb
dec
mov
subb
mov
call
cmp
xor
or
add
shl
pop
dec
cltd
add
mov
inc
xchg
clc
sbb
adc
cmp
and
mov
jl
and
fstl
in
pop
in
into
in
push
xchg
out
jae
dec
push
frstpm(287
test
xor
fstpl
pop
mov
std
push
cmp
dec
xchg
and
mov
xchg
sbb
xchg
mov
ret
mov
imul
cltd
es
inc
leave
add
in
dec
shr
inc
jecxz
hlt
xchg
sti
dec
mov
jp
ficoml
insb
fsts
add
fwait
and
ljmp
bnd
push
mov
sbb
addl
mov
sbb
and
je
pop
ret
cmp
push
jb
es
pop
xchg
clc
lcall
incb
add
pop
bound
xor
sbb
call
insb
or
mov
lds
movsl
adc
notb
adc
enter
xchg
push
pop
dec
inc
mov
aad
fnstsw
test
pop
shrl
pop
mov
mov
sbbl
into
outsb
pop
enter
or
in
jns
fsubl
dec
iret
mov
xor
or
in
jno
sub
or
loope
jo
dec
pop
test
jns
clc
outsl
xlat
inc
sarl
dec
cli
add
test
in
adc
sub
int
fldenv
jle
sbb
test
pusha
adc
mov
xchg
pop
dec
add
shlb
xlat
inc
aam
fs
and
inc
daa
addr16
mov
out
in
sub
jge
adc
lahf
int
sbb
test
stc
es
lahf
xor
mov
mov
adc
mov
je,pt
adc
cmp
imul
add
leave
aam
aam
mov
faddp
mov
decb
cmp
testl
fbld
push
jne
ret
adc
loop
mov
ret
lods
mov
adc
or
pop
jp
adc
sub
call
hlt
lds
jb
repnz
inc
xchg
or
add
js
push
js
outsl
and
jne
repz
or
and
xchg
nop
mov
cld
cmp
sub
or
and
in
loop
push
loop
stc
push
xor
sub
mov
xlat
push
adc
cmc
sbb
hlt
cmp
int3
xchg
test
mov
sub
cmp
int
mul
sub
add
cltd
sub
mov
jmp
or
cmpsb
mov
jb
sub
cmp
sti
xchg
jb
rcr
lea
gs
scas
enter
jecxz
mov
sub
mov
std
jge
subb
leave
xor
push
inc
repnz
inc
andl
sub
jp
scas
ljmp
and
loopne
inc
push
fisttpll
aad
mov
pop
ljmp
pop
push
int
testl
cmp
ficomps
loop
stos
or
ja
outsb
add
repz
dec
adc
in
sbb
call
adc
add
hlt
xchg
pop
bound
xor
push
adc
enter
rcrl
mov
fmull
inc
hlt
fildll
push
stos
lcall
jmp
adc
push
push
ds
mov
push
js
adc
imul
jmp
dec
imul
inc
in
imul
enter
nop
pop
mov
rcrl
xchg
inc
cmp
pop
bound
dec
pusha
mov
add
mov
mov
shlb
xchg
or
lods
pop
in
xchg
mov
push
shrl
cmpsl
sub
addb
ja
push
cli
jnp
lds
test
or
scas
sbb
int
sub
test
add
push
aam
push
and
mov
repz
pop
bound
call
mov
imul
push
andb
lret
insl
mov
sbb
push
sub
fs
loope
add
mov
inc
inc
stos
and
andl
lds
inc
dec
lods
inc
pop
dec
or
xchg
cld
pop
jnp
cmpsl
imull
sub
jae
pop
lcall
push
inc
cmpsl
iret
fdivrl
int3
jg
pop
cmpsb
xchg
cmpsb
dec
fidivrl
jae
ret
inc
sti
sbb
mov
lcall
lea
push
inc
push
dec
jmp
out
sbb
mov
cmpsl
or
or
pop
les
mov
sub
push
pusha
mov
iret
mov
testl
out
and
xchg
cmp
lds
aas
sahf
sub
or
add
jae
mov
sub
mov
dec
mov
push
xor
mov
in
mov
aad
or
and
and
aas
push
scas
aam
push
mov
pop
clc
dec
jle
push
imul
femms
inc
lds
adc
test
test
jnp
les
xchg
cmpl
push
mov
aas
test
adc
stos
pop
pop
imul
mov
outsb
lock
lock
lods
aas
stc
rcrl
cmc
inc
aaa
cmpsb
jg
xlat
dec
outsl
xor
fisubrs
add
ret
pop
push
cmp
jg
pusha
ja
and
push
adcb
imul
xchg
es
add
xor
bound
cmp
xchg
mov
mov
arpl
leave
cmp
xchg
call
incb
call
sbb
jo
les
ss
repnz
lea
sub
loope
mov
dec
nop
fucomip
popf
fwait
dec
adc
or
repz
add
rclb
mov
adc
imul
mov
cmpsl
jge
stc
addr16
in
jne
and
cmp
aas
push
push
sbb
xchg
push
cli
pop
xor
flds
lret
loop
aad
daa
xchg
fwait
mov
or
outsl
mov
inc
lods
pop
mov
cmp
icebp
shlb
dec
xchg
inc
pop
push
icebp
hlt
pop
js
sub
mov
xor
sub
aas
cmpsl
cmc
jge
ljmp
mov
jnp
jmp
pushf
jae
jbe
cmpsl
xchg
or
test
lods
stc
push
sbb
xchg
fcmovne
lds
fbld
sbb
push
add
rcl
outsl
lods
mov
nop
fucomi
mov
div
or
dec
pop
jle
and
fsubs
scas
movsl
add
scas
fisttpl
push
mov
gs
inc
add
cmpsb
mov
js
lods
and
mov
repz
or
add
push
push
aas
clc
adc
dec
shlb
pop
mov
addr16
pop
stc
lds
cld
dec
adc
mov
arpl
push
clc
push
and
mov
fucomip
cmp
gs
out
sbb
insb
in
mov
sbb
bound
stos
inc
or
sti
jb
push
addl
lods
pop
rolb
fwait
clc
sbb
jbe
mov
mov
xchg
es
mov
jg
pusha
push
xor
pop
xlat
xchg
pop
mov
pop
dec
fnstenv
add
push
fwait
cmpsb
xor
insl
sub
das
cmpsl
jp
gs
rcr
add
movsl
cli
fdivs
rcr
scas
jb
pop
imul
je
push
imul
push
adc
insb
add
aaa
leave
pop
popf
mov
xor
js
or
xchg
jle
loope
aam
xor
pusha
inc
bound
out
adc
jae
cwtl
les
xchg
mov
loopne
push
popa
pop
cmp
pop
add
push
or
and
out
imul
jmp
sub
std
shrb
add
sbb
xchg
mov
xchg
test
add
ljmp
adc
mov
push
xor
inc
mov
sbb
mov
in
aas
sbbb
mov
movsl
lcall
adc
call
pop
cltd
push
lret
out
inc
cmc
int3
xor
inc
pop
fwait
int
pop
and
dec
insl
jno
jmp
enter
cmpsl
sti
arpl
call
cmp
in
cli
ret
bound
mov
sub
adc
dec
cmc
mov
mov
and
mov
inc
es
mov
bnd
cmpsl
mov
or
int3
imul
xor
aas
frstor
dec
push
pop
adc
push
ss
dec
push
push
movsl
rcrb
push
mov
add
or
mov
add
mov
sbb
addr16
cmp
rolb
inc
dec
fstpt
leave
mov
pusha
and
les
pop
bound
mov
mov
insl
int
jecxz
scas
cli
push
out
and
mov
inc
xchg
pushf
cs
push
and
cmp
push
lret
adc
sti
aam
lret
fbld
pop
cld
loope
dec
les
jge
xor
lret
popf
cmpsb
dec
xor
test
scas
mov
and
mull
add
xchg
sbb
add
test
lods
mov
pop
insb
jmp
into
or
scas
ficoms
mov
or
mov
imul
popl
jo
inc
jecxz
std
fdiv
jns
and
xchg
iret
xchg
mov
and
cmp
jg
sub
int
fs
lret
pusha
cmpsb
sbb
pop
dec
jp
mov
mov
jge
sub
sub
mov
pop
sbb
lods
xchg
nop
int
xchg
pop
dec
adc
outsl
adc
cmpsb
ds
or
pop
adc
dec
xor
ja
xchg
jno
cwtl
loopne
lret
xchg
test
push
lret
fldenv
int3
pop
jo
aaa
je
rcl
pop
xchg
xchg
add
xchg
clc
or
pop
add
shrl
and
lahf
aam
add
fisubrs
sub
pop
icebp
push
jbe
dec
lods
ret
mov
mov
lcall
imul
rorl
fldt
jne
and
out
loope
dec
mov
mov
jnp
xor
pop
jle
mov
push
xchg
xchg
jmp
xor
je
in
mov
das
sub
add
std
dec
and
in
dec
sbb
into
push
les
fisubl
sbb
mov
mov
out
arpl
push
jo
ss
cltd
mov
aas
cmp
mov
xchg
add
push
int
fcom
jo
dec
inc
fnsaves
sahf
out
jmp
mov
lock
ss
pop
lock
cmc
andl
stos
lret
cld
and
pushf
or
enter
imul
mov
fsubs
mov
int3
nop
pop
cmp
mov
mov
mov
mov
in
addr16
cmp
cmp
jne
sbb
or
icebp
ja
push
iret
inc
je
lods
jp
mov
fnsave
test
mov
mov
call
mov
pop
movsb
and
lds
or
fwait
inc
inc
filds
into
pop
add
push
not
mov
inc
inc
pop
popa
mov
add
out
call
pop
sti
adc
mov
lods
outsb
xchg
fdivs
push
cmp
dec
fwait
jge
mov
movl
lret
mov
xor
xchg
repnz
xor
andl
adc
or
jae
fidivrl
repnz
add
pushf
jne
jnp
test
pushf
push
gs
mov
push
mov
mov
arpl
push
pop
or
mov
je
fwait
insl
mov
je
int3
and
cmc
push
iret
std
inc
jno
mov
aam
or
and
sub
sti
dec
loop
shll
sub
push
pop
dec
fdivl
mov
scas
leave
ret
push
xor
enter
lret
and
mov
push
data16
dec
es
inc
mov
mov
nopl
adc
outsb
jno
xchg
cmc
iret
mov
lret
nop
add
adc
and
test
nop
fsubs
outsb
popf
inc
pop
insb
push
cltd
or
jno
pop
mov
xlat
sbb
push
cmp
gs
arpl
aaa
lret
das
and
lahf
mov
jne
push
jnp
pop
bound
mov
cmp
rcll
dec
or
jmp
adc
insl
xor
adc
xor
imul
loop
xor
cmp
lods
mov
into
mov
repnz
inc
jns
sbb
xchg
ja
lds
push
icebp
outsl
fwait
inc
ss
das
xchg
test
loopne
xor
jl
fiadds
mov
cld
jns
jmp
sub
inc
aas
push
jb
cmpsl
pop
daa
adc
inc
dec
mov
pop
jbe
aad
mov
pusha
mov
add
cmp
sti
or
dec
pop
jp
or
sub
jp
ficompl
cmp
and
jns
call
dec
xor
mov
mov
jo
scas
adc
mov
fsubrs
fsts
ja
fistl
inc
aam
xor
or
xchg
test
dec
call
push
ret
push
loop
cmpsl
or
adc
adc
clc
fldenv
gs
push
mov
xor
pop
dec
adc
in
fs
jns
test
lods
xchg
movsl
inc
loope
test
idiv
les
cmp
scas
orb
jl
sbb
xchg
mov
mov
sub
sbb
lcall
inc
sub
add
loop
lds
test
into
inc
dec
jl
ret
jo
test
jle
xchg
icebp
popf
lea
push
cmc
adc
cmp
rcrb
shll
sarb
cmc
xor
ds
mov
and
xchg
ficompl
mov
ret
pop
sti
shlb
lock
mov
imul
mov
xor
bound
jecxz
fnstcw
push
add
cmp
push
es
pop
sub
cwtl
cltd
add
in
xor
dec
push
inc
rolb
xlat
outsb
xchg
mov
inc
dec
pop
xlat
pop
inc
pop
out
in
xor
arpl
add
pusha
jle
out
sbb
dec
mov
sbb
dec
sarb
mov
or
clc
pop
jno
jl
adc
xchg
cwtl
imul
lea
cmp
insl
ljmp
add
mov
out
mov
or
ss
cwtl
stos
outsb
shrb
dec
pop
jl
mov
repz
stos
cmpsb
aad
mov
push
inc
jl
leave
fdivr
lock
pushf
fdivrs
filds
imul
repz
scas
push
dec
xor
pop
mov
psubw
mov
movsl
inc
push
daa
fstl
hlt
and
ror
jno
and
push
lods
and
jae,pn
test
adc
fcmove
repz
mov
lret
pop
mov
xor
leave
das
pop
sahf
je
outsl
inc
pop
call
dec
jmp
push
and
frstpm(287
sub
cmp
add
movsb
mov
inc
pop
outsb
pop
notrack
loope
add
outsb
and
sbb
xchg
sub
or
inc
push
ret
stc
pop
negb
pop
out
lret
imul
cmp
or
lret
cmpb
clc
push
rclb
adc
and
test
in
imul
ret
adc
ret
stc
xchg
divb
xchg
fwait
pop
jmp
loop
mov
ja
out
imul
cmp
xchg
arpl
cmpsl
xor
std
das
xchg
push
fdivp
fmuls
daa
clc
add
data16
rolb
xor
sbb
xorb
and
pop
dec
mov
enter
bnd
outsl
aad
pop
out
xchg
sbb
fsubrs
mov
rcrl
mov
cmpsb
jbe
scas
pusha
call
xchg
adc
mov
sti
sbb
dec
test
xor
inc
lods
sbb
lret
bound
cmp
stc
jmp
pusha
push
push
add
cmp
and
jbe
into
divb
cmpsl
pop
mov
aam
aaa
clc
lock
in
mov
mov
daa
in
in
stos
push
sbb
fcmovb
mov
mov
insb
sbb
mov
out
fmuls
mov
fcmovbe
push
sub
mov
jo
inc
pop
clc
jg
repz
out
fwait
in
xchg
jle
cmpsb
lcall
cmp
inc
cmpsl
pop
dec
fcmovu
repz
add
xor
jge
idivb
outsl
mov
cmp
mov
bound
movsb
push
rolb
xor
call
inc
sbb
jnp
dec
fs
sbbb
in
stos
lock
movsb
sahf
jg
adc
das
pop
push
mov
les
xor
in
cmp
add
insb
push
or
insb
adc
rolb
jnp
dec
shrl
jb
andl
insb
jmp
test
mov
mov
push
mov
mov
nop
out
adcl
les
cmpl
fs
ret
sub
loopnew
repz
cmp
adc
jecxz
inc
xchg
mov
pushf
mov
mov
mov
std
enter
sbb
pop
xchg
push
ja
cmpsb
fstps
pop
ss
icebp
xor
loop
in
or
sub
pop
xchg
mov
insl
fistpll
sbb
xchg
jb
pop
push
jecxz
push
pop
inc
and
pushf
js
xchg
mov
inc
fbstp
mull
xchg
adc
push
sarl
ret
pop
jle
pushf
pusha
add
into
push
imul
xchg
popa
aaa
sahf
lret
jl
sahf
stc
add
loopne
test
lret
mov
jmp
lea
pop
insl
xor
xchg
jg
jmp
sbbl
fwait
jnp
jae
lea
xchg
arpl
mov
lahf
test
aam
mov
cld
aam
lds
or
push
xchg
loopne
xor
adc
inc
ljmp
cmp
adc
pop
popa
loope
sub
js
clc
adc
pop
icebp
movsb
add
or
and
cmp
cltd
pop
std
cmpsb
mov
jecxz
movb
sbb
je
xchg
fdivrl
mov
mov
mov
mov
stos
pop
dec
shlb
fsubrl
lods
xor
orl
dec
xchg
imull
push
or
push
ja
cmpsl
mov
fs
mov
adc
into
xchg
pushf
mov
pop
cmp
int3
dec
and
lea
loope
test
cmp
mov
jmp
cld
pop
cli
add
push
mov
mov
in
dec
and
test
jl,pn
adc
xor
mov
sub
icebp
push
std
int3
mov
push
mov
mov
push
jecxz
jno
int3
test
inc
mov
add
xchg
out
cmp
add
xchg
popf
aad
das
push
in
ret
and
add
mov
xchg
sbb
les
mov
es
test
fsubrs
bound
jecxz
xchg
decl
fdiv
popa
sbb
xchg
int
mov
cmp
pop
dec
lds
in
jge
xor
and
jno
ret
popa
icebp
add
hlt
into
pushf
mov
arpl
add
xbegin
push
mov
sub
jo
je
in
cmp
mov
in
push
add
das
mov
insb
xor
xchg
leave
cltd
jg
add
fs
mov
mov
or
sub
lods
cltd
pop
btc
push
fimull
xchg
ret
push
pop
mov
outsl
push
cmp
lods
sub
movsb
xor
adc
in
imul
inc
cmpb
lret
cmc
pop
sarl
je
jbe
sub
dec
ficompl
test
daa
sbbl
sub
adc
xchg
aas
xchg
dec
test
divl
cmp
pushl
dec
inc
adc
sub
test
arpl
jnp
mov
sti
cmpsl
and
gs
push
mov
in
je
adc
xor
push
ja
addr16
test
dec
rclb
pop
and
outsl
in
ja
clc
shrb
mov
std
xlat
je
add
shll
ja
xchg
or
inc
inc
cmp
push
inc
cli
scas
push
fwait
outsl
inc
inc
pop
push
cmp
push
out
inc
xchg
test
jne
inc
and
sbb
jmp
xor
xlat
out
cmpsl
lahf
scas
scas
inc
xor
mov
xchg
in
inc
add
push
push
test
add
adcl
xchg
dec
in
push
push
lods
es
leave
enter
jbe
popa
sub
lret
into
repnz
mov
or
lods
jmp
xchg
jae
push
sbb
sub
sti
add
in
push
mov
rcrl
cs
orb
stc
xor
jae
nop
mov
jae
popa
sub
clc
punpcklbw
xor
aas
stos
jns
jl
aas
mov
cmpl
or
lret
outsl
mov
imul
cmp
scas
and
stos
jecxz
adc
mov
jae
xchg
je
sahf
into
mov
fiadds
sahf
sahf
scas
daa
mov
cltd
xchg
push
out
mov
data16
xchg
inc
sbb
cmp
icebp
xchg
dec
mov
pusha
cs
xchg
push
loop
sub
xor
xchg
dec
mov
lds
inc
dec
xchg
repnz
and
shll
test
addr16
sbb
pusha
mov
shlb
adc
scas
cmp
inc
dec
aas
dec
push
imul
push
ret
jp
mov
addr16
mov
jg
in
pop
xor
mov
mov
dec
xor
jno
fisttpl
push
cmp
inc
pop
dec
in
iret
insb
adcl
xchg
dec
and
ffreep
fists
add
xchg
movsb
jnp
mov
dec
lahf
lods
mov
jbe
and
jne
sub
push
sub
adc
loop
jg
inc
mov
cmp
jb
int
sbb
xor
push
push
fisubrs
dec
inc
loopne
sbb
ds
andl
mov
repnz
fwait
insl
adc
cs
ret
lahf
imulb
cmp
sahf
fisubs
sub
in
mov
xor
inc
js
mov
pop
mov
popa
jo
cld
out
xcrypt-ofb
cmpsl
outsb
mov
fiadds
insb
clc
mov
enter
cmp
imul
mov
sbb
dec
shrl
mov
pop
pusha
mov
fsubp
hlt
outsl
lds
mov
jp
cltd
test
mov
cmc
or
pusha
pop
cmp
mov
sub
lds
aam
inc
cmpsb
mov
mov
ret
jne
lcall
mov
fs
mov
ret
pop
mov
shlb
mov
push
out
int3
lret
lds
imul
imul
push
call
add
out
aaa
and
enter
cltd
mov
dec
movsb
sub
inc
mov
pop
push
stc
sbb
vpsllq
lods
adc
jmp
cmp
pop
cltd
pop
mov
sub
push
push
and
test
pop
pop
clc
pop
ret
shl
movsb
pop
jge
and
rcrl
and
jns
outsb
push
lret
in
lret
mov
es
inc
dec
mov
pushf
fwait
push
jl
cmp
sub
lahf
test
jae
test
subl
fs
je
les
pop
in
jae
xchg
loop
push
pop
cmc
add
pushf
lret
stos
popa
xor
popa
push
inc
xchg
push
in
test
fsub
sub
scas
mov
jns
dec
insb
adc
or
xor
test
and
inc
in
shlb
xor
movsl
int
lock
fisttps
leave
mov
push
pop
push
in
pop
fidivrs
insb
cmp
out
cld
mov
sub
cld
enter
pop
adc
mov
das
inc
adc
scas
stos
and
pop
inc
rolb
jle
sub
push
mov
dec
and
mov
roll
xor
push
dec
add
cmpsl
cmpsb
mov
sbb
bound
mov
test
mov
imul
dec
aam
cmovge
loop
sarl
push
push
lcall
enter
jnp
mov
inc
push
in
out
sbb
mov
sub
dec
jecxz
pushf
aas
aaa
push
pop
jge
inc
test
sbbl
xor
sbb
scas
int
sbb
imul
in
lret
sti
mov
and
nop
or
mov
sub
mov
push
add
mov
pushf
andl
adc
mov
inc
mov
test
stos
pop
pushf
loope
int
bound
adc
mov
sub
popf
mov
movsl
es
popf
push
push
adc
lods
or
pop
or
xor
xor
push
pop
sub
lods
cld
dec
jmp
mov
test
mov
xor
cmp
push
fildl
pop
mov
fsubl
jae
inc
mov
push
sbb
pop
add
iret
sbb
loop
stos
xor
push
sbbb
cmp
insb
testb
push
movsb
scas
subb
sub
movsl
movsb
dec
test
fs
adc
stos
cmp
push
aas
push
mov
and
pop
jae
adc
in
push
and
fcoms
jne
je
and
jne
mov
pop
xchg
push
and
repz
and
arpl
or
dec
mov
loopw
ret
je
jecxz
push
inc
dec
scas
mov
call
and
pusha
sub
pop
xorb
outsb
das
loopne
xor
pusha
movsl
ss
hlt
jecxz
xor
sub
popf
and
insl
mov
push
andl
jmp
xchg
push
or
xor
xchg
shrl
aaa
lret
int
roll
inc
imul
pushf
jle
inc
mov
ret
sbb
lds
push
pop
pop
sbb
sub
adc
jns
sub
xchg
aad
sbb
sbb
push
push
sahf
shrl
pop
adc
loop
int
mov
or
lock
insb
shrl
push
repz
mov
popl
lds
or
std
jg
clc
in
pop
sbb
mov
pop
mov
mov
or
pop
pop
mov
xor
scas
test
push
inc
mov
outsl
loopne
xchg
sub
stos
mov
push
jo
dec
adc
pop
adc
pop
aam
inc
or
jp
pop
jae
es
mov
push
das
jno
mov
pop
fldln2
rol
jecxz
push
lods
xchg
add
ljmp
aad
cltd
cli
por
cmp
xor
jg
fiaddl
ds
js
enter
inc
cmc
mov
push
stc
out
jo
out
test
imul
sub
pop
clc
inc
mov
jmp
je
inc
xchg
in
loope
inc
lret
movsb
pop
js
daa
arpl
das
addl
addr16
notb
push
in
jae
out
mov
hlt
clc
out
cwtl
mov
mov
decl
inc
stos
inc
das
jg
fadd
mov
and
loopne
sub
jp
out
inc
jg
sbb
scas
jge
xchg
std
lret
push
test
test
lds
in
adc
ja
ds
movsl
jg
dec
lods
xchg
xchg
sub
jg
insl
fcompl
jnp
mov
insl
sub
xchg
cli
out
fldl
xor
or
pushf
test
rdtsc
mov
lret
out
cmp
sub
enter
dec
rol
lds
orl
sbb
je
ds
push
or
inc
imul
fcmovnb
push
ret
pop
fs
out
imul
cmp
mov
jbe
xor
mov
std
add
leave
pop
fiadds
xchg
mov
push
into
inc
pusha
jp
mov
mov
test
popf
adcl
ja
and
add
lret
xchg
test
mov
jp
iret
test
sub
add
iret
inc
movsb
fsubs
fmuls
jo
dec
push
jnp
xchg
and
mov
inc
xchg
sub
fisttpll
and
xchg
dec
sbb
lret
shlb
jl
push
clc
mov
ret
mov
sti
dec
mov
enter
lahf
sbb
sub
subb
pop
mulb
mov
mov
insl
gs
aam
jp
cmp
mov
loop
jmp
inc
push
xor
push
sbb
cmp
push
fimull
add
in
cmp
add
push
mov
sbb
sbb
ja
mov
push
adc
aam
shl
mov
lret
mov
mov
test
lods
xor
mov
outsl
push
ljmp
scas
pusha
adc
push
das
lods
fldcw
mov
insl
stos
add
or
icebp
out
nop
jo
scas
xchg
jnp
xor
jb
rorl
fstpl
and
adc
shrb
mov
and
stc
push
sahf
or
scas
nop
rcr
sbb
test
dec
scas
and
repz
add
inc
fnsave
movsb
aaa
mov
sbb
dec
into
pop
add
jle
and
jbe
xor
lea
push
hlt
das
xchg
xor
lahf
ja
cmc
push
popa
fdivs
jns
movb
in
sar
test
dec
lahf
sub
jns
or
repz
addb
sbb
lods
out
lret
sbb
inc
xchg
xor
xchg
hlt
cli
xor
out
cli
ja
or
popa
sarl
and
pop
pop
lahf
and
dec
shlb
test
movsl
sahf
add
sbb
fwait
push
iret
mov
daa
pop
enter
push
adc
fnsave
test
xor
das
lahf
xor
pop
lret
jg
std
iret
jno
push
xchg
and
leave
inc
into
mov
aaa
imul
dec
mov
in
in
pop
mov
cltd
dec
call
add
ret
test
rcl
mov
sti
mov
test
dec
pop
or
push
stos
insb
push
push
in
push
gs
aam
lea
test
sbb
mov
repnz
or
call
dec
adcb
fmul
hlt
imul
add
add
pusha
xchg
mov
js
dec
pop
mov
in
cmp
cmpsb
jne
add
insl
push
adc
cmp
inc
cmp
inc
xchg
sahf
jp
aas
sti
addr16
aad
cmp
dec
rol
mov
pop
out
push
add
xchg
outsl
inc
movsb
jle
jo
mov
mov
iret
cmpsb
add
pusha
pop
ret
cmpsl
add
cmp
sub
faddl
insb
mov
cmp
mov
sub
jge
lret
imul
fildl
rorl
stc
sbb
pop
mov
ljmp
mov
lea
adc
sahf
cwtl
rol
insl
lcall
data16
and
fdiv
mov
movsl
int3
pop
insb
aad
in
xchg
call
cld
push
push
icebp
xor
fists
cmpb
or
imul
mulb
clc
aad
cltd
sub
lret
insb
or
scas
pop
cmc
dec
gs
or
cs
dec
leave
add
xor
dec
jo
mov
test
xchg
clc
cmp
sub
sbb
push
add
fmuls
jnp
dec
gs
gs
pushf
xchg
cmpsl
lock
clc
ss
mov
dec
adc
add
jge
mov
mov
in
or
scas
xchg
push
xchg
je
test
sbb
movsb
fcmovnbe
sbb
mov
fisubs
js
mov
outsb
mov
pop
fisubrl
pop
jns
xor
aas
xchg
mov
adc
fcompl
mov
imull
dec
int3
push
xchg
out
pop
decb
mov
jle
adc
push
sub
mov
out
scas
mov
jmp
lahf
adc
mov
xchg
and
cltd
mov
lahf
xlat
cld
xor
mov
test
ss
xchg
push
and
dec
inc
jno
cwtl
das
pop
outsb
xchg
movsl
ljmp
es
aaa
push
push
rcl
push
cmc
mov
mov
mov
fdivrs
adc
rorb
sbb
adc
push
popf
les
nop
lcall
int
push
pop
fwait
lock
scas
and
mov
push
mov
pop
test
aas
xor
movsb
cmp
pushf
mov
or
or
pop
sbb
das
ret
xor
sahf
fwait
cmp
xor
int
sti
ret
jnp
adc
mov
jae
push
mov
mov
sub
dec
loopne
sbb
xor
aas
jmp
addr16
out
lea
addr16
sub
por
cmp
xor
dec
iret
dec
adc
jo
getsec
inc
adc
filds
xor
lods
lcall
negl
mov
mov
test
or
imul
lock
clc
add
repz
lret
inc
push
mov
mov
insb
std
mov
subl
fiadds
scas
notb
add
fbld
push
pop
lea
pop
xor
and
inc
test
push
into
imul
sbb
jmp
xchg
pop
add
insb
inc
cmp
inc
cmp
and
xor
pop
stc
sti
daa
inc
sub
imul
sub
clc
push
sub
loopne
or
movsb
and
mov
int
inc
sbb
fnstsw
rcl
fmuls
add
test
or
ss
fists
cltd
mov
je
lods
mov
adc
add
sbb
inc
sti
das
cmp
into
jb
int3
sub
out
xor
add
cmp
adc
mov
or
push
loope
xchg
xor
movsl
pop
sub
pop
mov
jp
aad
and
andl
adc
mov
ds
lock
ljmp
jbe
inc
sub
outsl
xchg
mov
cli
add
and
cmc
sti
test
xor
cmp
neg
pop
jns
icebp
outsl
xchg
dec
fbstp
and
fdivrl
bound
pop
push
mov
mov
ja
xchg
repz
scas
icebp
add
notl
jb
bound
push
and
shlb
lock
stos
mov
jb
add
adc
dec
stos
lahf
cmp
leave
leave
fwait
pop
jbe
and
sti
dec
test
mov
push
sub
xor
sbb
lretw
mov
mov
jns
in
sti
sub
ret
inc
jge
sbb
pop
dec
popa
and
sarl
pushf
inc
add
nop
jbe
cmp
jge
dec
lahf
test
xchg
mov
mov
push
cmp
mov
xchg
and
pop
jbe
sbb
mov
icebp
push
jns
cmp
loopne
xor
jle
adc
js
pop
out
fwait
and
xchg
dec
popa
add
sbb
cmpl
mov
pop
insb
sti
add
pusha
xchg
xchg
pop
popf
imul
shrl
call
mov
mov
mov
mov
cmp
pop
mov
dec
adc
mov
movswl
cmpsl
jg
out
out
mov
push
mov
scas
or
in
sbbb
jp
test
adc
fnstsw
add
or
mov
scas
mov
inc
push
mov
xor
jb
imul
lret
jno
andl
test
ljmp
movsl
inc
stos
out
mov
lret
cmp
mov
out
pop
loopne
cmp
and
push
sbb
mov
loop
fwait
push
in
mov
sbb
add
dec
and
das
ss
lods
push
les
mov
xchg
scas
fbstp
cli
pop
xchg
movsl
or
inc
lret
imul
push
cmpb
enter
loop
jecxz
aas
fidivl
out
dec
jns
add
insl
test
jb
cwtl
aad
and
gs
push
xchg
pop
jg
insl
jge
fcoms
mov
js
roll
ret
dec
adc
sti
test
dec
ja
arpl
por
lods
add
pop
leave
faddl
xor
lret
into
ds
repnz
or
sub
aaa
xorl
mov
push
loop
stos
push
stos
mov
or
inc
fs
xchg
push
mov
loopne
cld
ja
sbb
negl
stos
jae
inc
sbb
rorl
mov
ret
pop
or
mov
inc
daa
jne
inc
outsb
int3
cmp
ret
call
inc
nop
mov
dec
mov
push
daa
subb
xchg
in
mov
dec
mov
sahf
jns
mov
sbb
mov
sub
iret
daa
cwtl
adc
pop
in
inc
mov
scas
dec
push
pop
lods
loop
gs
shrb
enter
dec
cmpb
aaa
cs
xchg
lret
xchg
popa
call
gs
pushf
sub
push
scas
sahf
dec
jnp
push
js
mov
xchg
add
xchg
push
pop
sub
push
lahf
icebp
in
arpl
and
mov
xchg
adc
jnp
std
lcall
inc
jmp
rcr
push
jns
adc
into
daa
or
xor
xchg
mov
clc
and
pop
adc
and
sbb
aas
out
jecxz
adc
or
dec
jl
pop
jmp
mov
dec
popf
xor
stos
pusha
call
xchg
nop
fwait
out
mov
xchg
adc
or
xlat
mov
aam
aad
mov
cs
fidivrs
pop
lods
jb
sbb
sub
pop
aam
push
fstl
outsb
aas
test
jmp
dec
pushf
ja
xor
mov
leave
mov
dec
stos
adc
sbb
mov
mov
icebp
les
addr16
mov
add
xchg
inc
mov
sbb
dec
in
pminub
sbb
fdivs
jne
pop
xchg
xor
stos
dec
sbb
rcl
fstl
xlat
jl
test
scas
arpl
imul
fldl
mov
push
movsb
lods
mov
mov
cmp
in
mov
or
mov
dec
iret
cmp
test
rcrl
cmpsl
cmpsl
add
aam
xchg
imul
outsl
mov
icebp
xchg
enter
adc
cmp
sarl
stos
popa
aam
inc
negl
inc
shlb
mov
iret
loop
and
mov
adc
inc
sbb
sub
cmpb
scas
sbb
jge
jl
cmpsb
or
fcoml
les
push
inc
iret
xchg
ret
js
lock
pop
jno
jge
xor
icebp
loopne
dec
and
adc
cmp
aad
jae
mov
xor
enter
ds
xchg
leave
push
mov
jns
xor
sbb
xlat
and
jp
lret
push
repnz
xchg
sub
mov
shrl
je
jecxz
movsb
or
rcll
add
icebp
dec
aas
sub
inc
sti
xchg
push
sbb
pop
xchg
out
in
cmpsl
cld
jo
xchg
test
lods
hlt
arpl
dec
outsb
sbb
xchg
mov
addr16
loope
sbbl
test
dec
les
mov
xlat
repnz
pop
mov
pop
xor
inc
ljmp
jp
dec
cwtl
das
adc
cwtl
enter
or
sbb
ret
or
pop
pushf
scas
mov
mov
add
jae
into
inc
popa
addb
push
mov
popa
andb
outsl
jnp
fs
mov
insb
hlt
iret
fsubrl
cmp
mov
xchg
popf
lret
or
cmp
sbb
arpl
out
ret
arpl
lock
std
push
jno
addr16
adc
lret
dec
push
sub
jmp
jno
jns
in
bound
fidivrl
scas
aam
dec
in
and
sbb
inc
push
jle
sub
mov
lods
pop
mov
and
inc
iret
les
jno
mov
mov
je
mov
lret
testb
cmp
dec
leave
std
xlat
jp
mov
in
xchg
addl
fistps
and
loope
jp
sub
dec
and
and
enter
xchg
jle
jmp
mov
sbb
sub
jnp
test
xor
das
int3
ret
clc
sbb
aad
jo
loop
and
cmp
push
inc
or
jo
push
scas
pushf
or
int3
mov
inc
adc
outsl
testb
jbe
dec
push
sub
leave
and
xor
adc
mov
andb
out
lods
cmp
push
push
scas
call
xlat
loopne
jl
jae
enter
sbb
flds
stos
test
sub
push
das
or
cwtl
nop
fnstsw
xchg
enter
cmp
sbb
in
push
sbb
shll
orl
cwtl
sarl
call
push
and
test
dec
mov
cltd
jns
les
inc
mov
repz
add
inc
fdivr
mov
das
hlt
xchg
pop
mov
rclb
mov
mov
js
xor
and
mov
pop
pop
lahf
fisubrl
xor
push
push
mov
dec
stos
mov
out
cwtl
ds
lds
xchg
repz
sbb
push
call
aas
mov
mov
jecxz
mov
pop
pushf
arpl
push
idiv
or
movsb
mov
dec
in
arpl
mov
mov
mov
and
xor
cmp
das
mov
test
lret
sub
out
stc
adc
aam
sub
subb
mov
push
cltd
stc
mov
sti
mov
inc
stos
ljmp
inc
pop
mov
or
sbb
cmpsb
push
cmpb
xor
lahf
out
sub
and
daa
or
push
adc
stos
sub
add
xor
ret
mov
sbb
ss
xchg
and
js
loope
loop
aad
and
mov
mov
inc
lods
mov
movsl
add
icebp
out
mov
mov
ljmp
or
cmp
mov
sbb
lcall
cmp
dec
lods
mov
in
xlat
mov
popf
pusha
mov
inc
hlt
pop
xchg
les
bound
std
loopne
sbb
ds
xorl
mov
pop
jmp
test
aas
sbb
cmp
outsl
cmp
xchg
mov
loope
inc
cmp
fcoms
xchg
out
cmp
sub
adc
sbb
outsl
sti
adc
out
negb
fldt
fimull
push
test
fstp
push
lahf
xor
mov
mov
insl
sbb
cld
and
pop
mov
adc
ret
sahf
repz
int3
lds
xorl
mov
in
fbstp
dec
push
add
stos
and
sti
or
out
sbb
mov
cmp
adc
subb
mov
imul
mov
xchg
pop
icebp
testl
ja
iret
lods
pop
repz
mov
push
mov
test
daa
lcall
cld
mov
out
dec
jecxz
lret
sub
pusha
in
mov
movl
pop
jne
daa
or
stc
movsb
jp
mov
dec
dec
push
push
cmp
test
stc
xlat
movsb
sbb
pop
scas
stos
movsb
mov
hlt
fidivrl
push
stos
jge
cmpsl
sahf
je
xchg
sbb
jge
int3
push
into
mov
fsubrp
xchg
adc
icebp
sbb
sbb
mov
xor
add
push
and
sub
fstpl
shl
lcall
sbb
arpl
cmp
call
data16
ret
lods
push
iret
js
jbe
sbb
xor
repnz
in
insb
push
mov
repz
pop
xor
cltd
mov
push
cltd
lock
xchg
or
adc
out
or
mov
fs
dec
imul
popf
ret
int3
push
mov
jl
sub
adc
js
xor
cmp
push
add
or
mov
outsb
jno
int3
push
pop
mov
es
mov
push
or
push
movl
repz
add
sub
sub
sbb
test
mov
mov
andl
pop
enterw
rorb
sbb
inc
add
cmp
jno
mov
data16
aad
push
xor
sarb
mov
inc
inc
xor
mov
js
sarl
xlat
inc
rcl
push
lret
mov
insl
push
push
cltd
sbb
fcoml
adc
popa
stos
xor
or
popf
or
outsl
roll
sub
aas
cmp
pop
push
jg
aas
iret
adc
jle
fnstenv
sbb
dec
mov
sbb
arpl
sub
and
outsb
ret
lods
jns
xor
mov
dec
pop
sub
jl
dec
mov
push
adc
sarl
mov
int
setno
xor
adc
jnp
mov
call
and
lret
mov
jbe
ss
in
jecxz
rcl
xor
imul
dec
icebp
out
pop
add
test
inc
mov
jnp
pop
dec
outsl
imul
sbb
push
push
addr16
dec
mov
dec
pop
add
movsl
int
push
repz
inc
ja
sub
sbb
add
dec
mov
mov
jl
inc
mov
shl
call
vfmsubps
adc
xchg
or
test
mov
out
lret
mov
lock
enter
pushf
mov
jo
dec
out
mov
jg
ret
cld
incl
push
cld
clc
or
shrl
pop
daa
jecxz
aad
repz
fdivrl
cmpsl
jp
mov
xchg
scas
cmpsb
jg
sub
stos
adc
imul
cmp
cmp
mov
scas
fsubl
xchg
and
sub
jnp
mov
sahf
cmp
cld
sahf
jl
shlb
in
pop
mov
insb
mov
push
lds
jbe
and
shlb
jno
push
or
sub
movsb
pushf
lahf
in
negl
pop
pop
shll
and
push
cmpsl
sub
sbb
out
sahf
sub
push
std
push
mov
idivl
cmp
rorb
fisubl
sub
or
push
mov
push
fsubl
outsb
cmp
cltd
mov
or
mov
cmp
inc
inc
cli
mov
sbb
xchg
data16
push
mov
sbb
repnz
out
jmp
cmp
or
outsl
in
les
jbe
cmp
sub
push
jge
sbb
xor
out
insb
adc
pop
jle
xor
pop
sbb
aad
out
and
dec
addr16
test
push
dec
lret
mov
hlt
inc
sti
push
mov
loopne
cmp
cmp
nopl
out
mov
mov
adc
inc
adc
pop
in
xchg
xchg
mov
stc
ja
mov
mov
xor
movsb
int3
es
sbb
jmp
mov
rol
addr16
mov
mov
leave
mov
mov
cld
cmp
mov
sub
fdivs
lret
sub
xchg
mov
sti
cmpsb
inc
cmpsb
dec
xchg
call
mov
daa
lret
adc
arpl
lea
aaa
pop
xchg
notb
jecxz
cmp
scas
nop
or
sbb
xor
mov
fistl
arpl
mov
lock
dec
daa
push
mov
and
push
jne
mov
sbbl
inc
sti
outsl
adc
mov
push
jl
scas
out
pop
mov
xchg
lret
and
push
mov
cmpsb
inc
push
xlat
cmp
popf
adc
sbb
pop
in
test
out
ja
flds
add
push
popa
add
sub
stc
sbb
jno
sub
push
adcl
lahf
dec
in
inc
lds
jnp
mov
test
pop
jge
incb
hlt
sub
shlb
fcomps
imul
xchg
xchg
rclb
push
jne
lahf
into
fists
test
lods
movsb
mov
add
movsb
sbb
cwtl
and
xor
aaa
cltd
mov
pop
leave
cmp
and
adc
rcrb
and
jae
stc
mov
and
lods
dec
inc
jle
lret
xor
pop
movsl
les
xor
outsl
and
lea
jle
add
push
cmp
cmpsl
loope
lods
lea
pop
jecxz
and
mov
pop
dec
sbb
pushf
adcb
sub
out
int
div
jle
popa
mov
adc
sahf
xor
sub
icebp
out
push
sti
xchg
leave
xchg
jmp
sub
movsb
xor
sbb
add
ret
movsb
mov
sbbl
dec
arpl
cmp
sub
out
movhlps
xchg
cmp
movsl
fisttpl
popf
mov
out
pop
add
fs
addr16
xor
das
test
cmpsl
stos
stos
ljmp
cmp
jae
shrb
pop
or
pop
mov
mov
pop
adc
adcl
dec
leave
gs
inc
xchg
dec
lea
fs
or
jg
cmovns
fsubrl
out
fistps
mov
xchg
std
mov
xor
or
mov
stc
notb
rorb
sbb
dec
adc
loopne
movsl
or
xrelease
xorb
push
add
pop
imul
lahf
ret
cwtl
lret
outsb
and
fcoml
and
inc
add
push
mov
pop
sub
or
int3
call
sub
lcall
xlat
sub
jmp
fcompl
cmp
imul
or
mov
notb
leave
jns
mov
les
sbb
pop
ja
pop
imul
xlat
xor
out
sarl
sub
dec
xchg
push
mov
cli
dec
movsl
pop
or
test
xor
and
in
mov
dec
lea
dec
adc
ja
lods
xor
cld
cmpsl
cmpsl
das
push
cmp
fldl2t
mov
nop
in
stos
mov
loopne
stos
jbe
outsl
loope
cmpsb
rol
jecxz
mov
mov
in
rcll
lahf
imul
ljmp
lret
movsb
and
and
mov
clc
push
out
or
cmp
pop
jmp
mov
push
test
dec
xchg
xchg
and
fsubrl
mov
fdivs
repnz
dec
pushf
lret
push
jne
data16
mov
aam
cmp
aam
aaa
stos
inc
cmp
aaa
iret
or
cmp
nop
pop
jbe
pop
cmp
xchg
cmp
cmp
test
ss
aad
dec
xor
lcall
jo
xchg
pop
jno
adc
mov
fcmovu
faddp
hlt
add
icebp
xchg
jo
mov
rorb
mov
jae
push
pop
sbb
dec
add
gs
mov
lahf
and
ss
jge
addr16
sbb
in
sbb
inc
lds
pushf
xor
xchg
nop
jns
cmc
inc
das
aaa
repz
mov
and
pop
int3
inc
mov
pop
cmc
jl
xchg
dec
push
dec
sub
lret
insl
aas
out
mov
or
mov
jns
cbtw
add
popf
push
or
or
or
stos
cmp
rcl
pop
fstpl
aad
push
jbe
ja
test
jg
mov
or
add
sbb
adc
std
jb
icebp
out
inc
aad
icebp
cmp
les
mov
and
jne
rcrb
and
roll
outsl
pop
xor
jg
mov
mov
repnz
mov
sub
jo
fistpll
cmp
std
mov
data16
cmp
mov
out
mov
lock
dec
push
scas
insb
jbe
and
jb
mov
sbb
adc
loope
dec
mov
cmpb
mov
mov
dec
lock
stos
fldl
cmpl
mov
push
cli
xchg
cltd
bound
pop
push
jg
add
scas
mov
loopne
sbb
mov
xchg
xchg
mov
enter
mov
jno
jecxz
dec
pop
sti
jnp
add
sub
or
aas
mov
xlat
cs
psrad
jge
mov
insb
or
adc
xor
lahf
lret
jnp
push
orl
push
mov
adc
sub
mov
jg
xchg
cmc
mov
jbe
ud2
mov
mov
shlb
bnd
adc
nop
lods
mov
xchg
hlt
rol
imul
je
jmp
test
pop
cmpsb
jge
pop
xor
pop
sbb
sarl
sbb
je
std
shl
jo
adc
repz
test
pop
xor
mov
or
out
sahf
mov
js
mov
idivb
xchg
or
data16
rol
sahf
into
push
minpd
test
fnstsw
scas
pop
outsb
xlat
imul
movsl
mov
sub
adc
test
repnz
shll
ss
dec
jb
jo
pop
push
sbb
push
sahf
int3
pop
lret
and
aam
call
ffree
aas
and
push
in
ja
arpl
ret
lea
sbb
std
fisubrl
sahf
nop
push
out
push
or
adc
jno
call
mov
jns
movsl
fucomp
jbe
jmp
and
call
jns
add
jne
sub
jge
outsb
scas
xchg
scas
nop
xor
push
jl
inc
repz
add
test
cld
adcl
imulb
and
mov
mov
repz
pop
pop
or
xorb
push
push
hlt
divb
xchg
xchg
shrl
jg
inc
pop
rcr
test
sbb
xchg
jae
jle
movl
testb
xchg
inc
jmp
mov
daa
xor
lcall
push
jno
ja
lahf
sbb
popf
roll
push
adc
mov
fs
jge
add
sub
dec
aam
js
push
dec
mov
push
jg
pop
or
mov
push
push
mov
mov
mov
mov
fists
adc
sbb
fstl
and
or
loop
adc
sahf
push
jecxz
sub
cs
out
mov
pushf
out
add
mov
xchg
fsubl
push
dec
mov
mov
adc
pop
xor
mov
inc
scas
enter
xchg
adc
filds
addr16
mov
mov
jns
jle
or
insl
or
cltd
pop
and
jl
ss
ret
xchg
cmp
push
xchg
push
movsb
out
cld
mov
popf
test
fdivl
pop
or
sbb
cmp
push
lock
pop
adc
shlb
inc
fs
push
movsb
imul
iret
mov
stos
sub
clc
fcomps
js
icebp
add
cmp
pop
push
movsl
sbb
adc
mov
jne
jb
xchg
add
in
movsb
scas
mov
ret
outsb
rcr
mov
ja
dec
cli
lret
add
shrb
pop
mov
es
ret
dec
fisttpl
cli
cmp
lcall
movsl
nop
xchg
fnstcw
inc
add
lds
mov
in
dec
inc
das
or
int3
jns
mov
jmp
negl
mov
movsl
icebp
xor
jns
pop
dec
inc
iret
xor
mov
aad
int3
or
adc
sub
inc
cmp
sub
stos
in
lods
xor
sbb
mov
icebp
adcl
mov
popa
xor
dec
sub
jnp
push
or
xlat
lods
shl
inc
cmp
inc
sbb
ja
jae
cld
or
xchg
mov
jp
lds
mov
fdivrs
or
jmp
mov
jmp
outsb
adc
cmp
insb
and
adc
xor
cltd
movsl
mov
stos
adc
sub
mov
fsts
push
jmp
aaa
int3
push
and
add
outsl
add
push
mov
jae
mov
xchg
test
rcll
fistpl
sub
out
stc
mov
mov
bound
mov
push
add
push
lcall
dec
test
aaa
sub
push
push
leave
mov
and
mov
adc
repz
cmc
mov
cli
sbb
test
mov
push
in
mov
addr16
xchg
pop
scas
lahf
lret
mov
stc
fistpl
sahf
xchg
push
adc
popf
push
arpl
sub
sbb
ljmp
out
int3
mov
mov
mov
int3
adc
test
lret
stc
sub
inc
decl
dec
in
adc
adc
jb
cli
std
push
lock
test
pop
cld
shrb
xor
add
out
lock
add
push
into
pop
cs
enter
jge
dec
andb
mov
pop
call
or
roll
cmc
adc
adc
std
addr16
lods
sarl
scas
inc
sbb
arpl
es
repz
hlt
mov
fsubr
mov
fldl
js
xchg
mov
mov
iret
adc
add
in
cltd
inc
push
push
ret
test
sbb
es
js
stos
jno
jle
mov
jge
cli
iret
or
push
push
cmpsb
dec
or
mov
push
cmp
mov
in
dec
mov
or
dec
xchg
shll
or
cld
and
int3
xchg
sbb
out
test
mov
fsubp
add
shrb
lret
or
aaa
fwait
add
mov
push
sbb
adc
xor
inc
sbb
push
push
mov
adc
push
aad
inc
inc
into
shrl
xchg
fnstsw
jae
mov
xor
mov
jno
mov
out
mov
or
push
push
cmp
add
xchg
mov
lds
and
sbb
jno
xchg
lock
xlat
loop
push
scas
call
mov
sub
push
int
fidivs
cmp
test
test
js
mov
repz
adc
das
int3
pusha
not
aam
shlb
jo
add
movsl
xchg
add
mov
ss
repnz
push
xchg
testl
and
dec
add
mov
movl
sub
leave
out
mov
leave
push
sbb
or
sub
pop
dec
fcomps
mov
cltd
xchg
push
outsb
mov
lret
ret
adc
inc
in
and
cmp
repz
pop
loop
in
push
shlb
insl
cmp
pushf
gs
lret
mov
out
loopne
pop
xchg
adc
movl
clc
aad
dec
push
mov
cmp
insl
imul
pop
lods
sarl
fldcw
jle
decl
mov
push
and
lods
stos
lock
iret
outsl
push
andb
xchg
mov
pop
sbb
pop
pop
jns
adc
and
xor
mov
sub
ror
cmp
xor
sbb
rcll
inc
jmp
repz
mov
cltd
sbb
repz
cwtl
or
fs
ljmp
and
sub
xchg
jl
pop
or
stos
int3
out
sbb
int
push
stos
cli
aad
pop
icebp
or
and
mull
xlat
mull
sub
xor
jmp
inc
adc
add
insl
dec
jmp
mov
jg
xor
sbb
test
xor
sub
xchg
rcrb
cmp
mov
clc
inc
jecxz
xor
cmpsl
xor
repz
dec
jae
popf
cwtl
scas
mov
shl
xchg
and
sbb
in
stos
xor
sub
cmp
sbb
call
pushf
gs
dec
xor
jmp
out
sbbb
loop
push
outsb
test
ret
daa
shlb
or
call
mov
je
int3
sbb
sbb
rol
mov
shl
loop
in
test
enter
adc
xchg
aaa
fcoml
push
xchg
fwait
pop
push
ljmp
testl
mov
shl
jns
sti
mov
lret
mov
push
test
sbb
jg
pop
pop
int3
repz
jecxz
and
sbb
enter
mov
mov
std
jnp
sbb
arpl
or
test
mov
leave
mov
mov
dec
adc
cmc
sbb
lahf
repnz
fsubl
add
int3
aam
aad
mov
shrb
cld
ret
ja
xchg
sbb
loope
lods
in
xor
stc
mov
xchg
testb
or
or
push
lcall
cltd
into
jecxz
jmp
inc
lcall
pop
test
lea
xchg
xlat
rclb
in
dec
shlb
jle
mov
xor
inc
dec
pusha
jg
and
aas
test
test
cli
xchg
push
push
imul
lahf
repz
mov
dec
push
icebp
loopne
in
xchg
jo
dec
testl
and
fnstsw
lods
mov
jmp
cmp
cmpsb
pop
cmp
cmp
adc
add
and
movsl
dec
aaa
test
lret
pusha
dec
inc
sbbl
das
jp
and
ss
push
add
in
pop
rcrl
jecxz
aaa
mov
adc
in
std
pop
inc
xor
out
push
scas
dec
or
inc
pop
mov
xor
stc
cld
push
movsb
xchg
mov
outsl
cmp
xchg
pop
bound
and
adc
pushl
xchg
hlt
push
jle
icebp
push
cmp
xchg
push
sub
or
jecxz
cmpsl
pushf
add
stos
into
pop
add
add
dec
xchg
stos
mov
xchg
adc
xchg
arpl
movsl
xchg
jle
push
out
in
and
aaa
sub
loope
ss
inc
inc
jo
push
xor
in
aam
sub
pop
add
mov
inc
in
into
cmp
icebp
xor
xchg
in
mov
pop
sti
and
sbb
test
ljmp
mov
sub
push
push
in
test
sub
mov
aam
jge
jl
iret
in
negl
in
jno
ljmp
scas
pop
mov
into
ja
aas
mov
fisttps
xor
cmp
fists
jmp
cmp
scas
push
fsubs
xor
pop
jg,pn
les
rcrb
add
and
mov
addr16
sbbb
cmpl
outsl
sbb
aas
insb
or
std
leave
inc
bound
lahf
and
leave
sbb
jno
shll
xchg
push
movsb
roll
xchg
xor
jbe
push
iret
mov
jmp
xor
pop
cmp
loope
jae
lods
inc
icebp
and
test
ja
daa
xchg
sbb
adc
adc
xorb
adc
insb
in
sbb
clc
jne
cli
or
repz
sti
sbb
sub
mov
xor
outsb
lods
outsb
mov
icebp
jle
std
testl
adc
dec
sub
je
xchg
outsb
xchg
std
or
cmp
into
sbb
sbb
adc
xor
push
lcall
fidivs
xchg
pop
pop
mov
xor
xchg
int3
loopne
lret
aam
sub
mov
fninit
scas
mov
in
dec
mov
mov
and
dec
add
push
jg
lahf
cmp
test
adc
das
lds
cs
stos
inc
rcrb
xor
cwtl
xorb
outsl
xchg
iret
jp
lock
push
adc
mov
data16
push
xchg
and
popf
out
shrb
push
push
xchg
lcall
sbb
ja
xchg
jge
xchg
shlb
insl
sbb
mov
repz
andb
push
adc
inc
mov
adcb
inc
cmp
insl
icebp
fldl
sbb
bound
jp
ret
lcall
in
mov
movsl
inc
rclb
pop
clc
jae
repnz
sarb
aaa
mov
xor
lods
lcall
and
imul
mov
jbe
or
pop
int3
mov
and
inc
hlt
fstl
add
add
popa
sub
sub
sti
sbb
sub
mov
push
rcr
mov
div
ds
je
nop
mov
mov
xor
daa
mov
pop
add
cltd
cmp
sbb
shll
cltd
adc
mov
bnd
sub
das
pop
cmp
scas
jge
add
inc
add
cltd
inc
clc
cmp
cli
loop
in
cltd
stos
dec
aaa
out
mov
inc
adc
inc
or
sub
out
mov
data16
jae
or
lahf
clc
daa
push
fists
and
mov
adc
jecxz
and
test
cmpsb
cmpl
ljmp
imul
mov
push
cmp
in
jge
fmull
fistpll
xchg
cmp
or
int
dec
imul
out
pop
or
imul
jl
daa
pop
js
jge
test
in
pop
imul
add
jb
mov
aad
iret
pusha
pop
pop
xchg
mov
ja
xlat
mov
xor
ljmp
daa
jo
fwait
stos
shrl
jmp
push
sub
ss
adc
rorb
mov
vunpcklps
mov
mov
mov
sahf
fdivp
mov
jae
push
shll
ljmp
stos
div
aam
mov
and
ret
in
xor
into
jbe
into
cmpsl
jno
sbb
dec
adc
lea
cmp
inc
lret
and
add
fsts
push
xchg
mov
out
mov
bound
jl
fdivr
mov
cmpsb
jle
inc
js
dec
movb
push
push
inc
push
mov
jp
test
test
sub
loopne
inc
repz
adc
mov
pop
xor
stc
xchg
fsubl
cld
dec
add
inc
xor
lock
fnstsw
in
fildll
pop
push
enter
pop
stos
sbb
outsl
mov
fucomp
rclb
dec
aad
jmp
xor
cmp
jae
loop
pop
mov
jecxz
repnz
subl
shrb
popf
lahf
fildll
inc
les
mov
loop
popf
jmp
mov
and
xchg
adc
adc
cmp
subl
push
inc
mov
cmp
or
mov
insl
adc
pop
mov
dec
inc
push
push
push
repnz
aaa
sbb
sub
inc
adc
xchg
inc
es
xor
int
pop
mov
jecxz
push
andb
cmpsl
pop
xchg
les
add
and
fldl2e
imul
jb
dec
jle
stos
sbb
adc
bound
loope
xlat
cmp
mov
cli
add
adc
repz
shrl
pop
outsl
rclb
int3
inc
pop
add
imul
cmp
mov
xchg
cmp
cs
mov
or
push
mov
pop
or
or
dec
mov
iret
push
imul
aaa
cmpsl
rcrl
mov
inc
mov
add
dec
mov
orb
dec
push
js
push
push
dec
clc
sub
xchg
cmpsl
cmpsb
pop
les
pop
ret
int3
repnz
cli
int3
xor
xchg
mov
sub
arpl
mov
repnz
mov
popf
push
outsb
loop
or
push
push
jne
out
pop
sub
cmp
das
movsb
data16
ljmp
push
call
subb
addb
imul
dec
pop
pop
sub
cs
mov
mov
pop
xor
jns
js
jnp
out
xchg
add
xor
mov
xor
sub
insl
add
dec
sarb
iret
sub
scas
or
imul
out
addl
cmp
jbe
loopne
aam
lods
movsl
in
sahf
and
push
popa
and
mov
add
pusha
mov
cmpsb
jg
sbb
loopne
and
iret
imul
psadbw
or
mov
out
dec
fsts
stos
dec
mov
icebp
cld
outsb
cli
sbb
orb
pmulhw
push
cld
mov
sbb
test
nop
mov
iret
mov
lcall
xchg
add
inc
push
cmp
push
lods
fdivs
rcll
add
test
jmp
cmp
jno
add
xor
pop
sub
shll
loope
sub
cmp
add
divb
and
mov
fldenv
ret
xlat
cmp
jmp
test
cld
xchg
lds
add
imull
stos
inc
pop
iret
out
sub
daa
test
add
or
or
jl
jge
movsb
sti
out
or
mov
ljmp
xor
dec
in
or
es
addr16
ss
jae
pop
or
cmp
testb
into
xor
and
into
dec
enter
xchg
push
push
loop
xor
out
sub
out
jmp
inc
call
das
inc
or
jae
lcall
lea
fsubs
adc
fdivrs
cmp
lcall
xchg
es
xor
pop
add
pop
jg
lds
or
dec
dec
ds
aaa
jmp
loope
addr16
adc
in
mov
in
rolb
jne
les
cs
rcrb
rol
testb
popa
cld
out
mov
push
add
mov
arpl
data16
leave
mov
call
mov
lret
xchg
adc
loop
or
and
push
scas
ds
mov
xor
lret
pop
dec
mov
inc
sub
xchg
or
inc
lods
adc
int3
mov
xlat
dec
dec
cmpsl
xchg
pop
sahf
sbb
ljmp
sub
inc
nop
mov
lret
and
xchg
and
mov
sti
out
mov
cmpsb
ds
sarl
push
dec
push
mov
or
imul
rclb
repnz
repnz
and
jbe
inc
aaa
dec
dec
mov
lahf
cmp
add
lcall
je
push
mov
mov
push
test
mov
mov
in
adc
sbb
das
inc
fimull
lea
pop
out
repz
fnstenv
nop
and
mov
cld
out
dec
out
pop
sub
repnz
mov
lea
sub
out
out
lahf
mov
pop
in
aaa
lods
push
jbe
in
and
leave
and
cmp
jns
ja
mov
jns
addr16
push
sbb
mov
or
loopne
test
je
sbb
jge
fldenv
sbb
pop
pop
xchg
popf
dec
jg
mov
stos
dec
mov
mov
pop
and
pusha
or
fdivrl
xor
xchg
jecxz
sub
mov
sbb
push
pop
push
lock
jecxz
xor
inc
loop
inc
repnz
fwait
pop
cmp
cmp
xchg
mov
movsb
pop
mov
jne
sti
imul
pop
inc
adc
ljmp
repz
sub
mov
xchg
xor
cmp
in
outsl
and
ja
lret
xchg
cltd
adc
push
inc
sub
rolb
ret
xchg
xor
push
fildll
cmp
add
jno
das
mov
cmp
and
mov
cmc
test
or
pop
leave
adc
push
out
sbb
or
rcrl
xor
fmulp
jns
or
cmp
mov
hlt
dec
xchg
outsb
fs
cmpsb
movsl
fisttpll
pop
test
add
shll
outsl
shlb
push
add
mov
bound
or
ret
ffreep
sub
iret
std
jg
lods
or
sbb
loop
jge
mov
mov
dec
cwtl
add
pop
fwait
adc
xlat
sbb
frstor
sbb
mov
test
and
cmpsl
and
adc
xor
cmp
xchg
fs
mov
push
push
push
push
test
enter
fsubrs
push
insl
push
and
mov
cmc
jo
dec
sbb
hlt
mov
enter
mov
out
adc
dec
ret
rcrl
jmp
cmp
dec
movsb
adc
scas
cmpsb
push
dec
sbbl
das
cmpsl
push
xchg
jns
and
aam
adc
and
mov
dec
movhpd
stos
jb
add
dec
mov
pop
push
xchg
xor
or
scas
jp
xchg
dec
cmp
pop
jmp
sbb
pop
and
mov
popa
fwait
mov
xchg
lock
or
stc
jbe
pushf
nop
stc
jge
pop
sub
push
js
cli
push
insl
jmpw
stos
fdivrl
jg
mov
cwtl
sti
nop
push
pop
icebp
mov
adc
inc
aaa
test
mov
xor
jle
pop
test
push
in
and
xor
adc
sbb
jae
outsl
fildll
cmp
hlt
popf
scas
sahf
and
rcrl
je
or
cmp
mov
sbb
aam
call
push
mov
scas
sahf
hlt
loop
mov
repz
mov
push
stos
push
rcrl
repz
aam
lret
add
lods
test
pop
push
ja
lods
jo
and
loopne
cltd
mov
jo
mov
lahf
inc
loop
lahf
lret
aas
mov
cmp
jl
xchg
jnp
out
std
push
mov
mov
test
dec
inc
jg
push
pop
lods
arpl
inc
int3
jg
arpl
dec
or
cld
stc
mov
cld
cmpb
shll
cmpb
aaa
aaa
std
pop
mov
jg
dec
jecxz
xchg
sbb
popf
cmovge
lahf
out
cs
push
pop
or
xchg
inc
int3
cmp
dec
jge
sahf
mov
and
or
les
push
cld
dec
loopne
rcr
or
mov
adc
js
lods
out
push
inc
push
push
push
adc
es
pop
adc
ss
cmpsl
mov
in
pop
out
or
cs
push
cmc
fidivs
cld
and
pop
push
stc
jg
mov
mov
xlat
sbb
rclb
dec
lcall
les
call
sbb
push
jbe
push
jns
xchg
test
mov
push
and
fs
push
mov
pop
mov
arpl
xorb
ss
jmp
jbe
pop
inc
rorl
or
daa
ficompl
dec
mov
add
stos
test
aad
in
jge
mov
lods
cli
dec
fstl
loopne
aaa
jle
or
scas
dec
add
or
bound
mov
jmp
add
sub
in
mov
xlat
idivb
pop
into
div
jb
inc
rcr
fs
jbe
ljmp
adc
call
call
out
or
push
incb
insb
pop
int
push
mov
dec
je
mov
rorl
lea
inc
mov
sarl
mov
mov
mov
fs
push
xlat
and
cld
imull
jecxz
add
xor
xchg
jno
fdiv
ret
jecxz
fadds
lds
sub
jb
loope
psllq
lahf
int
push
je
and
adc
out
stc
or
jp
and
scas
mov
mov
push
test
int
jmp
or
sbb
adc
and
int3
das
repnz
in
xlat
cmp
jge
cmp
sub
ror
int
test
pop
aas
push
push
stos
daa
add
in
sub
sahf
sub
iret
sbb
xor
and
cmp
das
and
mov
aaa
mov
push
out
sub
cmpsl
sbbb
lahf
lods
repz
aam
in
jg
fsubrs
mov
dec
jo
sub
jg
pushf
jns
add
mov
mov
add
add
mov
xlat
ljmp
fs
in
xor
lds
add
mov
sbb
pop
ljmp
shll
mov
pop
dec
orb
fs
xor
dec
cmp
cmp
out
addb
pop
jne
mov
xlat
adc
dec
cmp
movhps
inc
nop
sbb
rol
cmp
out
mov
xchg
cmp
daa
dec
cwtl
cmp
push
mov
add
insl
aas
ss
sbb
ljmp
xor
dec
mov
cmp
out
es
orb
lods
dec
fs
jecxz
mov
pop
add
call
stos
mov
push
dec
xchg
mov
pop
inc
or
push
testl
push
lret
leave
cs
inc
scas
and
jne
adc
mov
mov
mov
cs
insl
jb
cmp
jne
jge
push
sbb
mov
pop
xor
add
jle
sub
sub
test
lcall
sub
bnd
push
inc
lods
add
gs
out
mov
xchg
outsl
dec
testb
shlb
mov
jbe
jg
mov
out
adc
jo
fidivl
loop
pop
ja
cmpsb
out
in
dec
imul
dec
out
mov
out
shll
push
cmp
sbb
ret
lret
mov
sub
ret
enter
fldcw
stos
jmp
int3
leave
mov
cmc
into
cmpsb
sub
inc
cmpsb
pop
popa
cld
jns
test
dec
repnz
add
aaa
lahf
aad
pushf
ljmp
popf
daa
xor
test
add
movsb
sbbl
ror
in
lock
and
add
add
xchg
sahf
mov
loopne
mov
sub
push
mov
rolb
enter
cmp
mov
sbb
stos
jne
xlat
lea
inc
adc
jp
ljmp
xchg
pusha
mov
test
and
ds
leave
sbb
mov
push
cmp
dec
or
cmc
hlt
add
ja
add
stos
out
jge
add
jmp
lock
xchg
pop
xchg
bound
cs
add
push
jo
pop
mov
mov
sbb
or
mov
insb
xchg
jmp
cmc
and
ljmp
or
xchg
sbb
sahf
hlt
xorl
mov
sbbl
loop
mov
in
pop
xor
movsl
xor
pop
aad
jle
dec
xor
and
mov
outsl
insl
dec
cmpsb
push
and
mov
outsl
std
push
jnp
pop
push
add
jno
inc
div
jmp
add
adc
imul
insl
xor
pop
or
sti
out
repnz
dec
dec
jg
cld
or
push
mov
sbb
mov
mov
mov
test
inc
cmc
push
jp
push
lods
divb
mov
sub
xlat
in
sbb
subl
mov
out
add
push
mov
shl
xor
and
jae
and
or
js
scas
out
in
scas
jp
mov
pushf
call
xchg
pop
push
test
mov
out
imul
iret
and
pop
out
xchg
and
in
stos
sub
sub
leave
cmp
flds
or
add
stc
hlt
cltd
cmp
dec
dec
mov
and
lods
pop
lahf
mov
lods
push
decl
inc
push
xlat
ficompl
ds
shrl
inc
dec
mov
sbb
arpl
lret
ret
fisubl
dec
imul
mov
fsubs
out
or
fists
pop
inc
inc
adc
js
sub
xor
sub
repnz
idivl
adc
or
out
inc
int3
das
repz
hlt
dec
adc
xor
pop
push
in
cmp
cmc
xchg
xorl
pusha
jb
movsb
inc
test
xor
in
gs
sub
adcb
jbe
push
pop
dec
xchg
push
testl
lret
adc
in
hlt
fnsave
ja
rcrl
sub
jge
sub
insl
dec
or
shll
push
aad
pop
cs
mov
or
pushf
add
aam
pop
daa
mov
jns
xor
xchg
xlat
adc
jge
and
mov
sub
jmp
filds
jl
push
cmc
mov
xlat
xchg
cltd
and
pop
pushf
push
xor
out
ret
inc
outsb
es
jo
orl
insl
ret
popa
mov
inc
adc
xchg
ljmp
mov
sbb
mov
mov
and
loop
push
int
movsb
sbb
jp
add
out
cld
insb
nop
pusha
inc
cmp
popa
xor
imul
pop
mov
aam
insl
sub
int3
fs
sub
outsb
hlt
lahf
insl
int3
dec
sub
insl
jecxz
scas
outsb
push
cmp
sub
xlat
lcall
in
popl
inc
xchg
pop
add
mov
stc
dec
test
ret
aad
fsubrl
lds
aas
mov
rorl
jl
orb
adcl
ret
jbe
mov
out
inc
sbb
sbb
mov
inc
adc
in
enter
push
rcl
rorb
cltd
jb
insb
jne
clc
xor
adc
and
push
sbb
insb
test
xchg
lret
leave
mov
mov
insl
pop
movsb
sbb
adc
pop
sub
jno
imulb
call
test
sub
shll
push
ret
push
jle
call
ss
int
xor
stc
imul
rcrb
adc
insl
iret
das
mov
mov
cmp
adc
pop
testl
inc
ja
mov
das
cwtl
sbb
pusha
decl
adc
mov
iret
pop
fwait
out
jne
lock
in
std
mov
addb
sub
sahf
fsubr
cmc
fsubrs
sbb
or
mov
mov
test
inc
jne
sub
push
and
leave
addb
std
xchg
iret
sti
aas
or
movsl
mov
xor
pop
fs
xchg
stc
jp
push
push
cli
xor
mov
adc
loope
mov
shlb
pop
testl
xchg
push
jbe
mov
adc
mov
jbe
packsswb
mov
outsl
sahf
jg
pop
or
jns
in
jl
cmp
or
jno
loopne
dec
adc
xchg
cmp
ja
jp
adc
mov
pushl
or
and
repz
imul
popf
inc
ret
loope
loope
pop
mov
testl
mov
mov
dec
ret
dec
push
daa
sbb
enter
jle
cld
call
addr16
or
mov
sub
int3
lret
add
stos
sbb
aas
sbb
popf
sbb
fidivrs
aad
cwtl
mov
xor
aas
stos
push
mov
jg
nop
sub
cmc
mov
cmp
jo
leave
dec
jle
inc
call
cli
push
popa
divb
jp
pop
jl
push
inc
mov
ja
mov
lcall
enter
ds
and
mov
dec
mov
fwait
ret
ret
fdivs
rolb
imul
addr16
stc
fnstcw
fldt
xor
jno
jle
pusha
fiadds
and
or
mov
adc
ret
mov
clc
pop
bound
mov
sbb
push
lock
inc
mov
fldcw
in
jmp
call
xor
xor
and
sub
lret
popf
loope
test
scas
inc
ret
and
out
mov
repz
jnp
jle
fstpl
addb
gs
add
fcmovu
jo
mov
ljmp
xor
cmp
sub
jmp
push
aam
popf
push
lahf
inc
js
sbb
cli
or
mov
movsb
fnstenv
sbb
cmp
sbb
popl
jmp
xchg
cmp
in
aaa
imul
push
dec
push
add
mov
call
add
addb
int
movsl
rcrl
js
call
mov
cwtl
dec
jecxz
aaa
mov
cltd
jmp
aam
jnp
outsb
xor
shrl
outsl
push
push
add
mov
dec
scas
xlat
xchg
out
int
adc
and
sub
inc
xchg
pop
das
repnz
inc
xchg
ror
shlb
jne
movsb
mov
pop
inc
outsl
sbb
sbb
adc
in
mov
aad
test
sti
sub
pop
add
pop
out
xchg
mov
cmp
insl
test
dec
xor
push
cmp
lret
inc
ret
jecxz
subb
xchg
xlat
jle
pusha
sub
les
sub
cmp
add
aad
sub
roll
aaa
dec
loopne
mov
and
sub
lret
fwait
push
inc
js
push
negl
mov
stos
cmpsb
push
push
mov
ret
loope
jbe
testb
and
in
and
adc
bound
xor
cmp
jecxz
mov
popa
push
jb
xchg
notl
inc
test
sbb
xchg
or
fisttps
pop
scas
mov
sbb
xor
pop
jmp
ljmp
pop
insl
or
or
int
mov
leave
and
notb
sub
jnp
stos
inc
orl
inc
and
push
cmp
sti
fwait
jge
mov
sbb
dec
push
cmpsl
or
fwait
push
push
push
leave
int
xchg
movsb
inc
jnp
in
sub
jecxz
mov
jmp
cmpl
scas
rcl
adc
imulb
les
fstpl
std
xor
lahf
sbb
bound
mov
push
ja
aaa
pop
push
cs
fstpl
or
pop
lret
mov
and
loop
and
jae
and
jge
add
aam
sub
and
push
outsb
hlt
mov
jns
mov
mov
xchg
jno
rcrl
out
inc
inc
or
es
fsubr
cmp
mov
or
iret
scas
mov
sahf
sbb
jno
pop
cld
addr16
add
mov
divb
test
fadds
rep
jns
pop
int3
adc
mov
jmp
jo
jle
add
ss
pop
pop
sub
mov
cmp
pop
cld
or
mov
enter
test
mov
mov
mov
andl
outsl
pushf
jb
imul
aad
fdivs
xlat
or
outsb
cmp
ffree
aas
pop
lcall
ror
xor
arpl
mov
sti
dec
popf
add
push
xor
idiv
xchg
imul
js
xor
xchg
and
inc
sbb
mov
mov
mov
jbe
fistpl
roll
loopne
stc
fisubrs
mov
pop
mov
sbb
lods
std
inc
and
xor
into
lea
shlb
je
jae
jns
inc
push
pop
xchg
cs
pop
mov
popf
data16
fcompl
clc
jne
neg
testl
mov
add
mov
push
or
sub
je
push
xchg
scas
mov
clc
mov
dec
mov
jno
xchg
push
push
bound
aad
jno
inc
loope
jle
jns
jg
sub
sub
sub
mov
shll
jecxz
and
jnp
test
data16
push
dec
lock
hlt
pextrw
nop
push
fbld
fdivrp
mov
stc
mov
movsb
mov
cli
insb
outsl
mov
cmp
mov
nop
stos
js
jl
in
sbb
mov
decb
mov
mov
out
loope
sbb
pushf
mov
out
jne
out
in
jmp
cwtl
ficoml
pusha
dec
imul
jp
das
jp
aas
or
add
adc
mov
add
and
mov
jae
xchg
mov
sbb
pop
mov
ret
or
data16
lea
aam
dec
fcomps
lahf
mov
xchg
mov
mov
dec
lods
xor
and
mov
daa
sbb
mov
mov
js
mov
cmpsb
and
mov
xchg
adc
mov
les
and
or
aam
fwait
mov
jbe
mov
or
inc
xchg
repnz
cmp
notb
mov
cld
mov
pop
mov
push
push
mov
adc
dec
and
jle
jbe
push
int
or
ficomps
fstp
or
loop
and
cmp
in
pop
add
repz
les
packssdw
fnsetpm(287
inc
and
xchg
popf
adc
add
repnz
pop
push
decl
cmc
sbb
add
bnd
fs
das
cltd
sbb
movsl
repz
call
mov
mulb
cli
xchg
pop
shll
xor
jge
into
adc
inc
inc
in
push
mov
push
clc
mov
loopne
push
insl
mov
xchg
dec
rorb
pop
xchg
adc
test
fsubl
pusha
pop
jae
ret
mov
jecxz
and
cltd
push
dec
xchg
filds
cmpsb
jle
jno
inc
imul
mov
xor
xor
sti
mov
lahf
pop
lcall
push
lods
scas
inc
push
lods
out
cmp
out
xchg
es
sahf
jecxz
sub
popa
mov
pushl
inc
sbb
js
sub
inc
or
clc
imul
pop
or
fs
mov
nop
fs
mov
jge
dec
adc
add
cwtl
cmpsb
insb
xchg
stos
sub
and
in
xchg
xchg
mov
ss
cmp
das
jno
add
gs
cltd
sti
sbb
into
addb
mov
mov
xor
xor
cmpsl
xchg
mov
dec
push
push
jp
je
sahf
test
fsts
pushf
negb
dec
test
ljmp
and
push
dec
mov
pop
lret
fcomps
outsb
ljmp
arpl
sbb
and
lds
add
dec
jno
mov
scas
imul
es
or
mov
das
jge
jp
dec
cld
xchg
adc
ret
inc
iret
sti
popa
js
adc
push
pop
sti
mov
stos
jg
and
or
jns,pt
stc
sub
push
ljmp
cmpsb
ja
push
mov
mov
test
or
pop
cmp
mov
push
add
push
jb
and
xor
cmc
push
shlb
push
sub
push
xor
out
clc
xchg
xor
xchg
out
dec
cmpsb
mov
jmp
jbe
push
and
sbb
js
int
jno
inc
pop
sub
aas
mov
adc
lods
lahf
push
mov
pushf
test
sbb
jecxz
and
push
jecxz
movsl
insb
sub
in
test
cli
xor
jae
pop
or
jns
mov
add
push
mov
sub
shl
adc
decb
inc
sbb
ds
sub
stos
pop
fnstsw
dec
mov
in
jbe
push
stos
push
ss
test
daa
xchg
or
pop
sub
popa
cld
xchg
dec
dec
cltd
add
sbb
movb
xlat
mov
add
xchg
push
adc
mov
inc
and
leave
cmpsb
mov
andb
in
adc
xchg
jge
out
jl
xchg
fbstp
jns
mov
mov
cmc
jge
js
xor
mov
lea
mov
cmp
aaa
push
sub
pusha
jg
jle
js
pop
push
shl
and
add
xor
addb
outsb
or
jle
fs
push
adc
in
xchg
push
jmp
pop
sub
test
jnp
jl
cltd
les
sbb
insl
sbb
push
insl
out
or
stos
push
xor
push
scas
ret
rorl
push
push
sahf
test
into
xchg
les
int3
icebp
mov
push
mov
pmaxsw
and
push
jns
mov
cli
dec
and
adc
mov
ss
sbb
sub
nop
mov
popf
lock
clc
fwait
dec
mov
clc
push
mov
repz
scas
cmp
jb
jp
sbb
shl
jl
pop
popa
cmp
rcl
xor
xlat
je
in
outsl
imul
xor
xchg
cmp
cmp
dec
add
fisttps
movsl
nop
jmp
stos
jno
pusha
pop
faddl
jecxz
sub
test
jmp
xlat
mov
into
inc
cmp
lea
xchg
adc
in
scas
je
adc
mov
mov
and
or
orl
dec
je
mov
fisubrs
sub
popf
add
adc
push
js
push
andb
mov
gs
lahf
mov
test
mov
pop
pop
mov
mov
jne
mov
lahf
inc
fcmovu
mov
cltd
push
sbb
lds
imul
xchg
fisttpl
in
push
mov
mov
sub
icebp
pop
scas
push
push
out
push
inc
sbb
pop
cwtl
into
xchg
push
xchg
ja
test
aam
cmpsb
mov
xor
rorl
sahf
sub
clc
adc
cli
loope
stos
ds
arpl
into
jae
cmpsl
repz
and
adc
leave
cltd
int
mov
sub
sbb
and
shrb
test
imul
outsb
fidivrs
xor
dec
pop
sti
push
popa
mov
mov
loope
push
call
add
mov
movsb
fstl
lea
pminsw
fldt
dec
pop
jecxz
mov
jo
dec
gs
je
jo
sbb
negb
dec
loope
pop
xchg
fidivl
lcall
jnp
mov
popa
lcall
push
ja
or
dec
dec
fwait
insl
cmpsb
jno
dec
enter
or
push
ret
scas
push
lods
shl
or
shrl
jae
and
pop
adc
out
movsb
cmpsb
aas
stc
je
ds
aad
pop
enter
nop
or
pop
addr16
stos
and
mov
sbb
jecxz
cmp
adc
pop
gs
mov
loopne
js
mov
add
fdivl
pop
sbb
nop
sub
add
add
sbb
rorb
sbb
sub
push
dec
cmp
hlt
mov
inc
cmovb
sub
sahf
mov
xchg
sbb
test
pop
sub
call
sar
inc
hlt
push
aas
movsl
mov
lods
inc
push
jno
pop
ss
dec
dec
sarl
jbe
cmp
les
js
inc
test
ds
sbb
or
popa
inc
xchg
lcall
dec
pop
sub
addr16
jge
popf
push
leave
insb
jo,pn
pusha
arpl
sub
test
aaa
dec
fidivl
aad
ja
xchg
jnp
push
pop
add
add
push
xor
in
fimuls
lock
push
sbb
loop
movsb
xchg
add
adc
data16
mov
sub
xchg
pop
lea
jne
push
insb
hlt
and
sbb
hlt
mov
push
add
jns
inc
push
aas
pop
rorb
bt
adc
push
lods
repnz
lock
mov
push
jmp
repz
dec
rcrl
adcb
mov
jle,pn
adc
push
lea
repz
lret
repz
enter
sub
scas
push
add
cmp
fs
sbbb
add
ret
lret
push
out
or
and
out
arpl
in
ficompl
push
adc
inc
inc
jbe
mov
push
enterw
xchg
stos
mov
push
push
add
pop
jb
inc
call
push
dec
inc
mov
imul
div
jb
inc
es
sarl
cli
sbb
dec
or
or
xchg
mov
mov
jne
mov
clc
int
ja
ljmp
fimull
mov
insb
data16
std
xchg
add
xchg
mov
hlt
adc
lret
les
in
xlat
test
add
stc
pop
add
pop
push
outsb
ja
push
and
or
and
jmp
dec
xchg
clc
and
fnstcw
or
jne
iret
jp
push
add
dec
aas
out
dec
hlt
scas
ror
xchg
je
pusha
adc
and
sbb
mov
cli
lcall
sub
icebp
dec
lret
cld
cltd
dec
push
daa
movsb
dec
data16
imul
lea
lock
jl
icebp
mov
movsb
and
into
dec
cmpsb
push
pop
jb
mov
mov
jo
xchg
in
lret
ss
loopne
insb
cmp
jl
lods
aaa
mov
adc
xchg
cpuid
sbb
sarl
jbe
cmp
pop
add
jp
xchg
xorb
pop
adc
shl
xor
or
arpl
das
and
dec
lret
cmp
dec
xchg
popa
mov
add
cmp
mov
scas
rcr
mov
ds
call
pop
lcall
lcall
in
pop
jno
data16
sub
dec
pop
repz
test
jno
dec
outsl
sub
add
loopne
test
out
push
adc
xlat
pop
popf
adc
cmpsl
ds
out
hlt
xor
in
sub
add
push
mov
push
and
outsl
dec
outsl
sbb
aaa
aas
call
les
stos
xchg
push
in
xchg
jge
fwait
mov
pop
cld
jecxz
lret
cltd
cmp
mov
adc
enter
sbb
ja
and
in
xor
cmp
jge
insl
xlat
mov
cmp
fstps
xchg
mov
repnz
das
data16
mov
mov
mov
std
ljmp
negb
jo
lds
js
stos
int3
mov
imul
and
cmc
js
fwait
xor
repnz
or
jbe
dec
lds
outsb
mov
in
dec
xchg
xchg
or
cmp
mov
subl
pop
lahf
mov
or
insb
push
mov
scas
loope
xchg
or
sbb
loop
scas
dec
xchg
sbbl
fisttps
bnd
fildll
enter
xor
mov
mov
mov
xchg
aad
pop
dec
add
jmp
jp
imul
cld
xchg
mov
adcl
xchg
cmp
jecxz
jno
push
or
loopne
and
cmp
daa
xchg
enter
sub
shrl
xchg
cmpl
loop
add
in
addr16
xchg
jno
sti
mov
sub
pop
sbb
mov
shl
lahf
dec
xchg
fstps
inc
mov
push
aad
add
fiaddl
movsb
and
ror
loopne
sahf
push
mov
sub
cmp
xchg
sbb
xchg
mov
sub
adc
dec
je
icebp
fadds
in
call
mov
add
loop
mov
or
xlat
in
rclb
addps
in
push
insl
insb
stos
hlt
pop
decb
fbld
in
inc
fmull
int3
lods
jne
cmp
repnz
sbb
fnstsw
mov
cmp
bound
mov
arpl
faddl
leave
and
jo
jg
mov
mov
and
dec
sbb
sti
jl
add
cwtl
dec
adc
loope
xchg
mov
sbb
inc
pop
mull
lock
and
or
outsb
sarl
sub
mov
out
xorb
and
in
hlt
push
out
mov
pop
push
mov
filds
mov
lea
ret
xor
mov
sbb
mov
sub
dec
jp
ficoml
movsl
cmp
dec
mov
or
xchg
nop
andb
inc
pop
jge
add
pop
xor
scas
popf
jle
sbb
and
cmp
mov
shld
lahf
lea
stc
sbb
ret
xor
ror
int3
dec
ljmp
dec
jg
addr16
fbld
xchg
xor
dec
jbe
add
out
add
sub
push
mov
int3
stc
rcll
inc
xor
inc
add
mov
cmp
jns
lods
and
out
jp
das
dec
jb
je
out
cmp
sub
xchg
cmp
push
dec
xchg
dec
cwtl
repz
movsb
fldt
jbe
mov
pop
adc
dec
lcall
or
fldcw
out
lahf
dec
out
mov
pop
out
into
cwtl
imul
cs
xchg
and
pop
loop
dec
xlat
js
mov
shl
lea
xchg
ret
sbb
adc
pop
push
loopne
inc
dec
push
mov
xlat
std
inc
lds
adcl
sbb
vmovntps
je
out
insl
ret
adc
fadds
scas
fs
inc
icebp
or
insb
mov
loop
aaa
xor
std
stos
sub
mov
adc
cmpsl
mov
cmp
and
clc
inc
lret
mov
mov
mov
stos
rcl
push
pop
mov
xchg
rorl
fsub
push
cs
fs
adc
jo
aad
enter
out
pop
andl
push
dec
ret
ror
xor
out
sub
mov
sub
pusha
lret
jbe
pushf
inc
sarl
mov
pop
jbe
aas
xchg
les
lret
ds
inc
mov
cmpsb
jmp
pusha
sbb
in
cld
push
dec
sbb
xor
cltd
xchg
sarb
push
shr
inc
lds
push
push
dec
mov
adcb
inc
es
cltd
xor
mov
xor
call
and
xor
imul
mov
sbb
shl
dec
add
imul
insl
pop
cli
popf
and
cmp
cmpl
bound
sbb
dec
push
xor
addb
cltd
mov
out
push
dec
cld
jnp
mov
outsl
hlt
nop
mov
out
inc
int
xchg
sbbb
add
dec
mov
testl
mov
insl
adc
sbb
negb
es
fsts
shl
and
scas
dec
jp
push
jnp
push
repnz
cmp
leave
test
enter
imul
pop
mov
gs
incl
aas
lret
orb
sbb
pop
mov
hlt
mov
add
bound
xchg
cmp
insl
add
sti
and
testb
fs
test
out
push
ljmp
dec
movsb
movsl
and
sti
in
cld
es
add
mov
int
std
mov
cltd
leave
fiaddl
xchg
jo
imul
lods
xchg
adc
clc
fistps
aaa
into
and
fmuls
std
das
mov
push
ss
rclb
xchg
nop
sahf
movsl
push
aas
movsb
xchg
cmp
cwtl
sbb
xchg
rol
or
jmp
addr16
outsb
cmp
adcb
jne
dec
test
push
in
or
lahf
mov
out
jo
push
rcrl
jp
and
jne
fildl
add
loopne
mov
bound
sarb
rol
xchg
and
inc
mov
cli
sbb
push
clc
and
or
mov
push
sahf
push
mov
xchg
mov
mov
pop
pop
add
lock
cwtl
out
fcmovnb
mov
inc
es
or
jmp
nop
mov
inc
daa
mov
lods
out
jl
or
test
ret
loop
jle
pop
adc
pop
data16
pusha
fists
or
pusha
mov
mov
xchg
pusha
pop
addl
fists
jp
addr16
stc
inc
pushf
xchg
jae
mov
test
into
aas
loopne
xor
cli
in
inc
lods
daa
les
shrl
je
lcall
mov
push
insb
cmpsb
cmp
xchg
lcall
icebp
push
repz
xor
add
ljmp
adc
jge
xchg
xlat
nop
loope
and
dec
xchg
mov
std
mov
xor
xchg
add
shlb
cld
mov
or
cmc
inc
cli
repz
sbb
jne
and
push
mov
mov
lods
std
fs
inc
and
test
clc
and
fsub
pop
and
shll
fs
sub
pop
pop
ja
xor
push
js
test
inc
scas
popa
dec
in
mov
ljmpw
push
lret
into
xor
xor
sahf
aam
pop
xor
push
movb
jne
jns
in
lds
cltd
sbb
adc
sub
sbb
cmpb
addr16
ljmp
add
addl
mov
aam
adc
enter
scas
adc
push
xchg
or
push
lret
lock
mov
xorl
repz
in
mov
lock
add
xchg
jmp
push
mov
mov
icebp
stc
lock
popa
xchg
pop
fwait
iret
dec
nop
pushf
les
cltd
pushf
mov
inc
push
jbe
or
dec
mov
nop
or
fcompl
adc
inc
out
jl
cmp
sti
and
mov
fs
shlb
jl
rorl
int3
jg
daa
mov
jae
push
std
out
daa
inc
popa
call
sub
xchg
test
test
cmp
jmp
mov
xor
and
adc
js
shlb
std
cmp
add
jge
lods
enter
mov
rclb
and
out
stos
ljmp
add
add
push
ror
testl
cmc
push
enter
or
ja
lahf
mov
rcrl
stc
pop
and
mov
fucomip
gs
dec
sub
test
roll
es
call
dec
inc
shlb
jmp
push
ficoms
pop
pop
jbe
xor
outsb
popf
int
aas
mov
push
mov
xchg
dec
shll
repnz
sahf
sarb
xor
test
das
stos
daa
xor
mov
fcomps
enter
push
rol
mov
mov
mov
ss
mov
ret
leave
out
jl
in
or
repnz
jg
sbb
or
punpckhbw
cmp
addl
repnz
mov
in
fiadds
push
int3
popa
xchg
push
adc
jmp
xchg
cli
dec
je
push
xchg
ret
int3
pop
shl
out
sbb
lahf
lahf
xchg
cmp
cmovp
adc
and
not
sahf
xor
inc
pop
pop
pop
jg
out
sub
repz
xchg
fcoml
or
int3
push
dec
add
or
sbb
adc
out
xchg
cmp
in
loope
shll
pop
cs
insl
push
out
adc
xchg
rolb
pushl
loopne
icebp
mov
xor
pop
or
fdivp
loope
les
test
xchg
rorb
jnp
decl
sti
clc
shr
das
mov
mov
pusha
dec
pushw
pop
and
dec
cld
addr16
jb
jo
jecxz
cmpsb
push
fcoml
fidivl
lds
nop
mov
mov
inc
out
daa
stos
int
fsub
or
clc
cs
jo
mov
add
pop
inc
fldl2e
sbb
pop
and
or
je
roll
dec
das
movsb
gs
mov
jb
inc
push
sub
push
lock
or
sbb
ret
jp
int
cld
out
jno
pop
jns
push
xchg
dec
dec
xchg
mov
cltd
inc
js
arpl
push
mov
ss
repnz
mov
jns
push
aas
sbb
pop
mov
mov
add
lock
cmp
lock
jae
aas
and
stos
negb
cli
push
push
fnstsw
adcb
mov
sub
mov
jns
mov
andb
clc
jno
daa
rol
push
adc
mov
push
icebp
xlat
or
fucomi
popa
fiaddl
jo
popf
cld
push
adc
mov
jle
mov
push
push
stc
dec
je
imul
nop
clc
clc
repnz
scas
ret
cltd
mov
or
mov
adc
das
stos
sub
movsl
xchg
jae
lret
sub
sbb
fistps
fidivs
jb
shll
popa
mov
pusha
cltd
adc
jo
or
fmull
leave
cmp
cs
pop
jl
jno
daa
pop
mov
in
in
fbld
fimull
pop
adcl
cmp
add
gs
pop
cmpsb
inc
les
inc
fldt
cmp
pop
cmp
stc
pop
sbb
daa
push
mov
arpl
outsb
ds
adc
fsubrl
jl
or
or
push
shl
mov
sub
mov
insl
mov
int3
adc
push
frstor
iret
cmpsl
shlb
dec
faddp
mov
push
jbe,pt
cltd
clc
aam
outsb
or
int3
cs
dec
xor
aaa
into
popf
mov
jp
pop
ds
sub
xchg
inc
push
push
bound
leave
clc
sub
in
push
mulb
cwtl
mov
pop
ret
addr16
cmp
rcll
cmp
aad
loopne
iret
push
and
cltd
pop
test
std
imul
movsl
fcompl
mov
sbb
hlt
cmp
pop
data16
jnp
das
sub
inc
negb
or
fld
sbb
push
jl
jge
in
inc
ret
test
jno
push
sub
inc
xchg
jecxz
sbb
and
bound
mov
or
jp
outsl
stos
jne
mov
dec
repnz
in
and
lcall
sbb
push
out
loop
mov
in
fwait
adc
dec
inc
popa
in
out
outsb
fisubrs
cwtl
test
loope
jbe
fstpt
fsubrs
xchg
sarl
div
sub
in
daa
fmul
leave
cli
out
cmp
aas
pop
mov
insb
xchg
fwait
sbb
inc
and
push
movsl
cmp
je
sub
jg
xor
lods
lret
cmpsb
insb
mov
adc
mov
add
fldcw
sub
mov
fstpt
movsl
repz
pop
loopne
mov
pop
bnd
fisubrl
roll
xor
add
push
dec
jl
adc
lds
sbb
std
movsb
sub
pop
sub
add
add
ja
jnp
cmp
mov
mov
adc
arpl
pop
pop
push
movsl
inc
stos
cld
rcrl
or
out
lock
out
in
subb
movsl
adc
and
cltd
ja
inc
sub
ljmp
scas
loopne
stc
rcl
dec
pop
movsb
sub
adc
in
push
add
faddl
sarl
pop
mov
vsqrtsd
imul
add
into
pop
pop
cmp
pop
xchg
dec
xor
pop
dec
pusha
das
pop
pop
and
push
lea
mov
into
out
in
push
ljmp
fstps
or
xchg
add
and
pop
mov
add
cmpsb
sub
adc
dec
and
or
push
fisubl
dec
and
sbb
lahf
sbb
cmpsb
jae
inc
jne
fstpl
and
cmpsl
mov
gs
testb
lods
or
mov
js
andl
adc
xchg
xchg
sub
jns
mov
sub
sub
push
outsl
cmpb
adc
push
jae
aas
repz
push
sbb
dec
insb
pop
jg
es
call
lock
out
addr16
or
sti
adc
mov
xlat
pop
js
pusha
pushf
xor
daa
mov
mov
jbe
mov
lods
test
cmp
incl
jne
loop
mov
lret
divb
jg
sti
inc
jbe
jns
or
or
lds
mov
pop
inc
gs
mov
inc
cli
sahf
test
imul
pop
enter
mov
xchg
inc
inc
and
ja
loopne
and
sahf
inc
scas
xor
data16
sbb
pop
xor
movsl
inc
aaa
mov
imul
dec
mov
push
add
mov
pop
sbb
xchg
jno
and
cltd
xchg
cmpsb
aam
jnp
jo
pop
popa
and
jg
aam
jp
repnz
pop
gs
scas
out
xor
mov
adc
jno
mov
jp
sbb
add
fstps
cmp
ret
pop
cli
jo
jne
xorb
pop
mov
clc
mov
in
test
pop
imul
sub
xchg
jmp
jbe
fisubrl
in
ss
sbb
mov
pop
cmpsl
xchg
mov
aaa
sub
push
mov
pop
inc
jecxz
pushf
in
sbb
dec
rcl
js
js
mov
addr16
pushf
jne
jge
lock
movzbl
inc
scas
adc
imul
push
push
nop
jmp
pop
andb
sbb
das
das
inc
cmp
into
inc
xor
dec
lods
testl
cld
pop
popa
lret
push
pop
jle
xchg
push
cmp
sub
inc
test
pop
dec
icebp
pop
push
sbb
je
je
xchg
xor
cwtl
lcall
adcb
cmc
mov
fwait
inc
jae
aad
and
push
ss
lds
add
int
xlat
outsb
imul
insl
shll
arpl
fisubs
push
les
insl
xchg
lods
add
mov
rcr
int3
xor
jl
fsubr
je
pop
or
and
fbstp
outsl
sbb
icebp
in
sub
hlt
call
sti
in
pop
and
lcall
pusha
popf
incb
and
adcb
xchg
cmp
mov
add
xchg
or
add
jg
mov
sub
push
add
fbld
push
nop
leave
into
aad
xchg
mov
pop
mov
mov
out
add
push
add
loop
mov
dec
add
push
in
jb
adc
sub
loopne
or
adc
js
push
ficoml
cmpsb
push
mov
mov
in
or
jnp
adc
fcomps
mov
add
add
push
jno
pop
or
dec
sbb
ret
mov
loope
ret
popa
xchg
std
xchg
jae
ficompl
pop
ret
mov
adc
stos
fistpll
mov
cli
pop
or
cmp
lock
xchg
inc
add
jns
popf
add
enter
mov
shl
fnsave
push
xchg
push
loop
xlat
mov
or
mov
negl
out
mov
shufps
xchg
lods
gs
dec
enter
hlt
xchg
and
cwtl
pop
hlt
in
fisubrs
imul
mov
fs
xchg
imul
loopne
call
repz
loop
inc
sub
jmp
push
sbb
lcall
scas
jge
add
daa
js
ficoms
stos
imul
push
jecxz
pop
or
inc
push
imul
sbb
jmp
rorl
sub
testl
cmp
dec
inc
jmp
hlt
jge
scas
xor
pop
jo
fisttpl
push
adc
cmp
and
decl
roll
psubsb
adc
divb
arpl
pop
and
imul
ret
cmp
in
add
out
and
sbb
cltd
lahf
imul
stos
or
in
lods
repz
cmp
xchg
aad
adc
aas
daa
int3
jne
out
xchg
imul
faddl
add
and
sub
popa
js
sarb
lods
pop
xor
jmp
sbb
sbb
mov
nop
jle
out
inc
pushf
aad
sbb
or
test
loop
cmp
fisttps
int3
mov
mov
sub
add
in
cli
inc
jmp
cmpsb
sub
pop
stos
inc
xchg
repz
xchg
pop
cwtl
pop
mov
dec
xor
enter
outsb
push
xorb
iret
dec
and
xor
mov
fidivl
dec
clc
hlt
jg
jge
mov
inc
mov
xchg
adc
add
lcall
shll
pusha
lahf
lret
in
imul
mov
sbb
xor
jne
gs
imul
std
call
push
inc
xchg
cmp
xor
movsl
xchg
pop
pop
popa
pop
pop
and
and
ljmp
jo
and
dec
jno
pop
cmpsb
mov
fwait
int
out
adc
fnstcw
scas
stos
ljmp
inc
aam
cs
mov
out
out
jmp
mov
scas
dec
int3
pop
add
sbb
and
inc
leave
and
lea
stc
add
cltd
aaa
sbb
aad
jo
ret
jo
mov
jp
push
pop
fimull
js
sbb
push
lock
add
lea
out
es
scas
pop
or
outsl
test
negb
aam
outsb
int
aas
or
mov
sub
sub
call
fnstcw
pop
rcll
sarl
mov
lods
sub
xor
xchg
cmpsb
or
loopew
fwait
push
mov
ficompl
pop
mov
in
adc
xchg
mov
sub
mov
push
mov
sbbb
mov
cmpsb
fmull
roll
mov
cld
loope
icebp
lret
mov
inc
or
and
sahf
fwait
mov
fsts
aad
aaa
push
xchg
pushf
insb
mov
imul
negl
mov
clc
stc
and
mov
fmul
dec
dec
inc
and
aam
xchg
loop
imul
sbb
in
scas
xor
push
mov
push
push
aas
xchg
aaa
cld
mov
mov
lods
sbb
je
mov
insl
fimuls
stos
aas
or
jecxz
xchg
daa
mov
inc
inc
push
xor
and
fisubrs
call
cmp
or
aaa
hlt
add
pop
mov
pushf
lods
mov
and
jp
lods
jo
or
outsb
jne
push
fisttpll
in
aam
mov
or
inc
xchg
mov
outsb
xchg
and
push
adc
call
loope
mov
pop
jge
dec
push
or
cltd
xchg
aam
dec
push
rorl
push
cmp
jle
std
xchg
test
cltd
and
cld
mov
mov
out
ds
cltd
mov
lock
cs
or
test
push
sbb
jns
adc
jl,pn
sub
add
push
cmp
popf
jo
pop
dec
popa
cmp
mov
out
adc
sbb
sbb
cmc
cmp
rclb
sub
lock
or
leave
pop
fists
movsl
mov
das
push
mov
repz
cmc
hlt
cmpsl
subl
jge
icebp
repz
lods
nop
in
add
push
mov
shll
cs
fistps
insb
push
lret
test
adc
mov
test
sub
stos
roll
or
cld
add
out
mov
mov
shl
call
and
test
je
and
jnp
test
addr16
jge
cmc
cmp
xor
stc
cmp
xor
and
cmp
into
sub
imul
cmp
adc
mov
mov
cld
jns
cmpsl
push
jecxz
push
lret
or
or
aad
repz
mov
mov
scas
adc
xor
pop
sub
stc
jg
sub
jns
mov
cmp
or
out
icebp
adc
daa
pop
imul
int3
insl
pop
fs
cli
pop
adc
adc
push
cld
psubusb
fwait
pop
hlt
clc
adc
push
xchg
maxss
lds
movb
sbb
cli
inc
loope
and
dec
dec
xor
push
sbb
xor
vandnps
dec
xor
mov
pop
leave
push
and
ljmp
ds
and
add
jbe
jno
xor
lock
stos
mov
fadds
mov
pop
cli
addr16
sub
xchg
cmp
es
loopne
xor
adc
loop
push
cmp
loopne
fnstenv
arpl
jbe
push
sbb
lcall
mov
std
mov
mov
es
xor
repz
out
mov
popf
popa
ljmp
loop
nop
mov
mov
ret
into
mov
adc
inc
dec
ret
in
mov
fcoml
popf
or
loopne
adc
xchg
loopne
pop
test
cli
add
mov
adc
xlat
mov
test
idivb
adc
movsl
sub
in
jmp
xchg
cli
filds
push
xlat
and
xor
out
pop
mov
mov
pop
mov
in
xor
xor
lahf
adc
orb
shl
push
xchg
xchg
add
clc
jecxz
lds
sub
movsb
push
mov
add
push
jnp
scas
cmp
addr16
or
daa
imul
nop
iret
add
mov
mov
add
and
adcl
dec
sbb
hlt
cld
scas
fs
es
lret
int3
or
arpl
mov
adc
sub
mov
or
fstl
sbb
push
jnp
mov
cltd
nop
aaa
and
jno
or
push
lods
int3
das
mov
frstor
push
cld
data16
mov
add
in
sahf
add
dec
popa
fsts
insb
fwait
out
mov
lret
mov
repnz
pop
jno
fisubrl
jge
inc
push
cmpb
cmpsl
mov
xchg
mov
int
xchg
jecxz
clc
adc
filds
decb
das
push
shl
xchg
shlb
mov
and
sub
sti
inc
imul
xor
mov
or
cmp
xchg
cwtl
gs
aaa
xor
add
lods
jle
shrb
andb
mov
jbe
fisttpll
xchg
ja
data16
addr16
jl
cmp
push
mov
jp,pn
bound
incl
out
mov
adc
inc
cmpsb
adc
fcomp
inc
cmpsb
jno
lea
fwait
jno
jns
ss
loop
pop
jle
pushf
xchg
or
and
rcrb
pop
mov
out
xor
sarb
sub
mov
sub
push
cmpsl
outsl
xlat
xor
nop
adc
bnd
sahf
stos
and
mov
pushf
call
xchg
push
xchg
lods
pop
jno
pop
pop
dec
push
jp
mov
rorb
test
sti
iret
and
fsubrs
aam
push
mov
push
add
mov
lds
cmpsb
clc
sbb
test
imul
push
sub
ds
mov
cli
mov
lock
dec
add
push
push
xacquire
mov
aam
sarb
xor
mov
push
xchg
inc
jo
andl
sub
scas
shll
dec
dec
xchg
pop
call
imul
xor
cmp
adc
stc
cmp
adc
sbb
mov
jmp
mov
arpl
lcall
out
pop
push
shlb
cli
xchg
dec
and
push
lret
mov
subl
cmp
out
lret
mov
jo
lahf
mov
mov
sub
cmpb
ja
sub
inc
jne
mov
cld
mov
dec
mov
pop
lea
movsb
mov
sahf
cld
adc
out
sub
sub
cmp
and
scas
and
in
mov
or
and
dec
cmpsb
test
daa
fs
cmpsl
cli
iret
pop
dec
pop
mov
shl
dec
mov
push
or
add
lret
or
adc
test
repnz
movsl
push
in
addr16
int
pop
cltd
shrb
mov
rcll
inc
aad
les
jmp
mov
pop
xor
or
pop
xchg
jg
rorb
cmp
mov
push
clc
push
mov
rol
jbe
rcrl
adc
xlat
sub
test
push
pop
sahf
or
xchg
jecxz
jg
and
aas
imul
lret
inc
jo
push
inc
popa
lahf
cmp
push
jo
cmp
push
or
aaa
cmpsl
adc
xchg
stos
das
enter
xor
imul
jne
jno
lods
and
das
and
jo
add
cmpsl
cmpl
jge
fs
mov
jns
neg
sub
popf
shr
in
xlat
popf
or
pop
mov
rclb
out
fucompp
push
sub
jp
jb
lcall
inc
jne
jns
push
out
dec
pop
nop
out
popf
shl
and
pop
mov
int
int
mov
mov
mov
xchg
add
mov
out
xor
jno
aad
scas
fstps
pop
or
jae
adc
rolb
ss
jecxz
int3
popa
mov
out
movsb
sahf
pop
arpl
mov
lahf
mov
xor
mov
dec
pop
push
test
js
mov
sub
pop
or
daa
push
adc
data16
sub
push
leave
cld
cmp
test
lea
jecxz
jmp
xchg
sbb
sbb
lods
push
pop
sub
mov
insl
cwtl
xor
push
iret
aad
cmpsb
popa
push
and
rclb
xchg
sub
rorl
mov
out
dec
mov
mov
movsb
mov
sbb
daa
adc
or
or
xchg
or
jp
xor
dec
leave
inc
in
push
shll
sbb
bound
inc
nop
and
add
mov
sbb
std
xor
dec
pop
mov
testl
fimull
and
inc
fwait
sub
mov
cmpsb
dec
xchg
pop
xchg
adc
xchg
add
loopne
les
lret
outsl
sub
inc
pop
insb
jb
dec
test
and
pop
ljmp
bound
iret
stos
scas
push
fsubl
cmp
ja
sub
lock
in
aad
cltd
das
popf
xchg
cli
icebp
call
sbb
or
sub
mov
pop
jecxz
pusha
fs
int3
sub
jnp
ljmp
jb
xchg
and
jns
fcompl
sbb
insl
xchg
mov
sarb
jns
add
test
xor
sbb
sub
jge
shrl
or
sahf
xchg
rcll
enter
add
or
imul
cmpsb
shl
inc
enter
xchg
stos
jle
inc
lods
das
insb
outsb
inc
arpl
xchg
push
lock
add
pop
cmpsl
mov
divb
jnp
lret
jo
sbb
xor
xor
pop
rcr
or
jb
roll
inc
dec
stos
aad
inc
cmp
mov
push
cwtl
imul
loopne
popf
dec
push
movsb
jle
popf
and
or
dec
pop
inc
cltd
pop
js
add
mov
add
stc
adc
mov
mov
movsb
mov
gs
sldt
jne
aaa
les
sub
ret
fwait
sbb
lahf
out
lahf
add
pop
mov
movsb
add
inc
fs
jno
cmpl
lods
pop
lret
jns
cmp
xchg
sbb
out
movsl
push
xor
inc
adc
int3
dec
in
dec
push
push
mov
dec
fistps
jns
and
aaa
lret
aas
dec
cmp
mov
cmp
pusha
xchg
loopne
dec
cmp
lret
inc
leave
enter
push
pop
test
js
pop
out
fdivrs
es
sbb
lds
xchg
rolb
sbb
pop
js
imul
fisubs
pop
shr
repz
mov
testb
aam
popf
sub
ljmp
stos
jb
in
add
sub
mov
or
dec
mov
inc
jb
push
jbe
push
subb
insb
sbb
pusha
xchg
pop
pusha
mov
adc
lock
pop
lret
mov
inc
mov
lods
aam
mov
xchg
and
sahf
sub
inc
cltd
imul
dec
test
stc
mov
sti
ja
out
lret
sub
out
dec
jp
adc
jg
mov
cmc
or
push
and
subl
jl
movsb
repnz
lea
loop
aad
or
sbb
in
adc
mov
outsl
push
or
nop
jmp
lods
scas
add
pop
xchg
xor
lock
xchg
pop
ficomps
ss
pop
inc
loop
jbe
wrmsr
lea
cmp
xchg
jae
scas
mov
es
push
inc
aaa
jl
mov
xor
nop
xchg
stc
jge
mov
jl
push
loopne
xchg
icebp
mov
mov
repz
cld
adc
jo
mov
push
add
imul
mov
xchg
cli
jbe
gs
std
sahf
mov
dec
stc
cmpsb
in
decl
pop
adc
mov
sub
push
adc
cli
lods
aad
dec
out
xchg
xchg
lock
xorl
fnstsw
pop
mov
movsb
ret
out
push
stos
mov
fnstenv
xchg
gs
aam
or
dec
jmp
clc
mov
call
push
shl
xchg
adc
sub
mov
rclb
jmp
dec
push
in
mov
jp
rclb
dec
jb
push
push
cmc
mov
push
pusha
negl
out
leave
in
pushf
dec
out
out
pop
cld
into
push
in
or
in
gs
mov
sub
jl
jle
adc
stos
stc
dec
fadd
mov
jmp
sub
sbb
add
loop
and
dec
mov
jae
jmp
or
xor
xchg
aam
leave
mov
and
push
les
mov
orl
xchg
sbb
xchg
insl
adc
or
in
pop
mov
sub
das
mov
xchg
pop
pop
cmp
lods
outsb
int
mov
aam
xchg
pop
fwait
xor
imul
mov
ja
cmp
cs
push
lods
push
dec
arpl
int3
fldt
aas
jno
pop
xchg
and
lret
test
sti
jp
scas
or
std
push
arpl
jg
push
dec
push
test
xor
cmp
xchg
push
add
sub
out
dec
jl
xor
outsb
jmp
xchg
jb
jge
test
adc
fbstp
stc
inc
fdivrs
dec
mov
mov
pop
push
xchg
adc
stos
psrad
movsl
inc
test
stos
cmp
mov
repnz
lea
repnz
cmp
shll
pushf
cmpsl
dec
test
mov
cmpsb
dec
or
mov
test
cli
inc
daa
jno
and
sub
or
adc
adc
sbbb
popa
mov
jnp
imul
mov
repz
pushf
stc
jnp
jmp
mov
nop
shl
mov
inc
pusha
push
outsb
xor
movsb
in
jecxz
popa
and
mov
mov
dec
xor
fsubrl
repnz
shr
jno
inc
out
dec
jg
adc
inc
jp
xor
mov
test
adc
and
mov
push
les
xor
dec
add
mov
cmp
test
inc
pop
lock
jp
pushf
aaa
pushf
movsl
movsb
inc
fldenv
nop
xchg
xor
mov
lea
out
sbb
add
jnp
repnz
icebp
ret
jbe
out
mov
gs
scas
fsubr
or
arpl
mov
fnstenv
pop
das
mov
pop
jmp
das
sub
mov
ret
and
scas
pop
push
xchg
xchg
add
jle
push
jnp
sbb
aas
push
fmuls
dec
sti
pop
dec
xlat
imul
sbb
cmp
sbb
lcall
in
sbb
or
jne
cmpsl
test
xchg
fwait
daa
insb
aad
loope
cmpsl
push
sub
push
add
mov
repz
mov
mov
mov
adc
jmp
lahf
ror
or
out
mov
mov
cmp
sbbl
clc
das
in
sbb
or
icebp
mov
ja
sbb
jge
dec
cmp
pop
mov
ljmp
mov
sbb
and
and
jnp
lods
in
stos
jmp
scas
cltd
lock
and
hlt
push
popa
add
jge
xchg
jl
leave
inc
mov
xorl
jae
xchg
jmp
and
pop
mov
mov
bound
aam
shl
mov
push
sbb
mov
inc
mov
mov
or
adc
mov
enter
cmpsb
je
push
xor
adc
std
dec
xor
push
push
mov
aam
imul
addr16
sub
sti
add
insl
lock
sbb
lods
sub
cmp
add
jnp
mov
xchg
or
loop
push
adc
jo
xor
dec
and
push
inc
adc
fucomip
idivb
adc
push
out
jge
mov
xchg
xchg
pop
cmp
lods
std
or
fldcw
enter
cmpb
imul
pusha
pop
popl
pop
dec
inc
or
sbb
cmp
and
inc
mov
sub
push
imul
rcll
mov
es
lds
xlat
push
mov
pop
dec
cmp
mov
aaa
or
or
pop
mov
ds
in
push
mov
mov
fisttps
jge
push
aad
sbb
xchg
xlat
mov
ljmp
sub
push
ss
pop
mov
movsl
sub
imul
bound
gs
push
clc
jecxz
mov
inc
xchg
test
push
test
stc
outsb
fwait
iret
xchg
sbb
pop
and
leave
jns
fisubrl
xchg
shrb
adc
fbld
mov
dec
add
insl
fs
fst
cmc
and
out
add
sub
push
imul
add
retw
xchg
lods
pop
lock
and
cmp
scas
add
lods
mov
sbb
cs
int3
cld
repz
enter
out
sbb
sbb
xchg
mov
or
cmpsl
sbb
repnz
xor
adc
push
inc
mov
xchg
scas
or
xor
and
shl
xor
jle
loop
jb
pusha
pop
mov
pop
mov
and
push
dec
inc
rclb
cltd
cmp
nop
gs
arpl
dec
scas
cli
lahf
mov
lock
mov
jecxz
sbb
icebp
je
push
cmp
enter
jp
daa
mov
dec
mov
cld
divl
and
push
pop
das
sti
mov
loop
add
mov
cmc
sbb
in
icebp
pop
or
jmp
clc
jb
nop
mov
jno
xor
into
push
mov
dec
and
mov
push
lock
cld
lret
mov
mov
inc
out
and
adcb
and
subb
js
push
cld
mov
stc
or
insb
cmp
or
ds
leave
mov
adc
cmc
pop
bound
pop
pop
pop
in
pop
and
out
xor
push
cmp
imul
lret
test
fistpll
push
pop
jge
nop
jg
sbb
mov
and
pop
fistpll
add
mov
sub
testl
pop
repnz
mov
mov
int3
addr16
xor
out
and
mov
mov
cltd
xor
jmp
mov
mov
cmp
cmc
xchg
inc
push
aas
sbbb
dec
cmp
inc
jnp
lahf
mov
leave
adc
mov
sub
jns
sbb
push
cmpsl
push
or
idivb
cmp
mov
xor
pop
pop
dec
cmp
lea
mov
lds
or
mov
push
pop
aaa
aad
sub
int
inc
sub
mov
aad
shl
shlb
movsl
mov
xlat
pop
mov
jns
jne
idivb
arpl
push
dec
lahf
movsb
mov
out
fs
push
loop
or
and
popa
adc
push
pop
frstor
js
andb
aaa
push
in
cwtl
imul
push
pop
push
cltd
xchg
sub
cmp
fs
pop
sar
xchg
add
dec
pop
jne
mov
lcall
inc
jbe
push
mov
jno
xchg
loopne
loop
fs
inc
int3
pop
leave
jo
jge
out
pusha
cwtl
mov
mov
pop
clc
mov
mov
jle
cmp
xlat
mov
jecxz
sub
adc
dec
sbb
and
inc
mov
pop
push
in
mov
aas
mov
insl
pusha
inc
ret
jno
lea
sbb
orl
in
cli
lcall
mov
test
rcrl
jg
cwtl
lahf
mov
and
push
xor
xchg
push
mov
cs
jo
xor
aam
lret
inc
shrb
jnp
jb
fildll
jno
push
xchg
fadds
mov
mov
int3
test
jne
or
xchg
fs
jbe
sub
mov
sahf
add
in
scas
stos
jge
movsb
sub
fdivs
inc
insb
gs
subl
mov
ret
data16
and
cltd
negb
stos
adc
inc
shr
mov
mov
ret
pop
sbb
mov
push
inc
clc
pop
les
mov
fs
lods
mov
adc
inc
xor
test
stos
psrlw
popf
dec
es
cmp
fisttps
insb
jmp
inc
outsl
sub
mov
or
arpl
sbb
pop
ret
test
push
inc
sahf
inc
sahf
xchg
dec
sub
cmp
flds
cmp
test
sbb
enter
sti
mov
sub
push
es
popf
sub
jnp
roll
es
push
inc
adc
sbb
mov
mov
ror
and
and
repnz
mov
push
push
jae
and
decl
scas
test
xor
mov
mov
mov
inc
push
in
cwtl
insl
sbb
xchg
pop
aad
mov
xchg
rcl
sub
mull
in
pop
mov
in
rcrb
mov
subl
and
test
dec
jb
out
es
jae
or
sbb
xchg
xor
adc
movsl
mov
and
or
xchg
push
ljmp
push
push
repnz
jnp
pop
fs
scas
cli
nop
test
repnz
lahf
sbb
jbe
and
arpl
jnp
or
mov
push
jae
xchg
push
adc
jne
repnz
pop
mov
movsl
pop
arpl
mov
dec
jae
sub
add
mov
mov
jge
xor
fwait
outsb
xchg
sbb
mov
dec
rcrl
aam
es
push
jbe
and
ds
push
les
pusha
lea
loop
out
xchg
sbb
movsl
pop
mov
mov
adc
xor
lods
fsub
outsb
orl
pop
shrb
ljmp
cmp
add
ljmp
inc
fsubr
movsl
stc
add
pop
cmpb
push
shlb
loopne
test
sub
out
pop
inc
jg
push
aas
pop
shrl
ja
and
mov
mov
push
sbb
ss
fisubrl
push
lret
sbb
outsl
adc
dec
gs
and
adc
movb
adc
inc
fmuls
stos
push
and
loop
clc
sbb
xor
push
popa
out
pop
push
cwtl
jb
mov
cmp
into
aad
adc
pop
or
ret
dec
xor
xor
inc
inc
mov
jo
push
sbb
loope
pop
xor
aad
andl
stos
out
ret
in
pop
cmp
ficoms
aaa
addr16
xor
popa
inc
mov
mov
xchg
fstpl
jmp
std
lahf
sbb
notl
fimull
iret
mov
mov
out
cmp
popf
test
jb
sbb
call
xchg
add
mov
inc
xlat
cmp
xchg
sbb
adc
insl
mov
xchg
test
sub
sub
imul
testl
jge
lret
sbb
cmpb
dec
imul
pop
mov
add
js
pusha
shll
cld
dec
xchg
jbe
jno
lds
dec
jle
sub
sbb
pop
xchg
out
repz
cmp
fs
shr
push
shl
inc
jne
xlat
lock
pop
jg
in
mov
add
lahf
idivb
xor
lds
pop
mov
mov
mov
insb
xor
mov
lret
push
cmpsl
lods
and
cmp
cmpsb
push
lock
add
xchg
sbb
sub
fidivl
jmp
mov
pop
imul
add
adc
cmc
push
xchg
or
push
scas
jp
dec
popf
xchg
mov
inc
out
adc
int3
push
out
in
repz
repz
lock
movsl
xor
test
fdecstp
adc
push
push
imul
xor
push
mov
stos
out
jg
out
push
mov
xor
inc
stos
scas
sbb
jge
dec
imul
cmp
jge
sub
int
jle
out
arpl
pop
jo
out
mov
lahf
das
mov
pop
adc
cmp
aad
ja
cmp
setbe
mov
insb
andl
or
cmpsb
push
fcomps
jmp
enter
pushf
movsl
in
dec
mov
or
or
sub
pop
ljmp
adc
loopne
inc
mov
xor
xchg
insl
sar
xchg
int
add
orl
scas
push
fs
dec
pop
lods
loop
sbb
inc
pop
dec
in
ja
lods
fsubr
mov
jmp
mov
jg
pop
mov
mov
xchg
mov
test
xor
stos
mov
ds
xor
xchg
pop
incb
movsb
mov
outsb
popf
jl
mov
pop
jno
mov
iret
adc
pop
loop
arpl
and
fs
das
das
jnp
or
sbb
xor
hlt
mov
mov
sti
sub
aas
add
jne
rolb
and
jnp
mov
ss
lret
mov
xchg
test
xor
and
jl
inc
lds
das
jns
and
int3
cltd
and
fidivl
dec
ror
les
xchg
pop
cwtl
add
out
insl
xlat
pop
jp
and
in
test
mov
xchg
aad
fdivs
inc
jl
adc
into
fcomps
cs
dec
aam
call
inc
inc
jecxz
and
call
jae
xchg
cmp
push
mov
movsb
pop
cli
or
mov
jl
sbbb
pusha
push
mov
repz
iret
fdivl
xchg
sub
sbb
cwtl
mov
inc
test
inc
sbbl
sarl
sub
std
lret
pop
sbb
push
arpl
jae
jne
aaa
nop
out
mov
aad
cwtl
jae
mov
dec
outsl
inc
pop
add
fisubrl
mov
shrb
sbb
lahf
hlt
aaa
es
int
icebp
inc
int
xchg
cld
mov
sub
std
cmpl
ljmp
data16
int3
imul
rol
das
lods
or
repnz
xchg
or
jle
pop
clc
jnp
cld
and
jae
sub
testl
cmpsl
pop
and
inc
pop
movsb
fs
inc
lea
push
push
mov
adc
js
bound
stos
xchg
out
xorb
mov
les
mov
inc
ja
add
xchg
decb
lret
mov
sub
and
adc
clc
fdivrp
cltd
stos
jp
in
cltd
and
stc
push
add
adc
movsb
in
ret
mov
scas
push
xchg
lods
mov
int3
xchg
push
mov
jl
and
adc
in
out
fs
stos
add
in
xor
sbb
lcall
mov
jb
xor
mov
imull
push
xor
inc
mov
icebp
test
mov
adc
gs
insb
addr16
movsl
mov
dec
int
sbb
xor
stos
lahf
or
xor
das
pop
or
push
lahf
mov
in
bound
lret
inc
or
jae
mov
pop
add
mov
jecxz
test
mov
mov
cltd
into
cli
inc
jge
cli
stos
enter
popf
mov
sub
lea
pop
test
mov
cltd
stc
xchg
adc
out
rcrl
or
jb
subl
jns
test
jp
sub
xchg
mov
add
sub
xchg
inc
lods
add
out
loope
shll
or
xchg
xor
jne
cmc
std
push
and
ret
iret
cmp
repnz
xchg
xchg
pop
roll
add
inc
mov
arpl
jno
xor
xlat
mov
cmp
dec
imul
ja
pop
mov
fistps
jmp
imul
mov
movsl
dec
xchg
sbb
jae
xor
jne
sbb
push
js
jmp
dec
insl
mov
rdmsr
xchg
xchg
fists
mov
stos
dec
jmp
inc
mov
xchg
testb
sub
push
int
push
mov
addr16
or
dec
mov
in
mov
mov
push
in
pop
aaa
pop
movsb
jp
adc
xchg
pop
subl
mov
mov
and
test
xor
and
loop
pop
cld
dec
xchg
dec
rorl
xchg
adc
lahf
popl
push
movlhps
adc
inc
loopne
insb
dec
dec
shlb
enter
dec
cmpb
inc
bound
inc
ficoms
in
lock
xchg
insb
jb
cltd
cmpsl
xor
jnp
idivb
pop
or
add
dec
cmp
ret
into
call
jge
xchg
test
add
bound
fnstsw
add
frstor
sub
mov
pop
xor
testb
mov
mov
pop
inc
in
jg
sti
sub
push
mov
xlat
push
les
sahf
lea
and
lods
dec
cmp
jge
add
pop
pop
or
push
sbb
mov
push
movsb
popf
jo
dec
nop
shll
add
test
bound
cmc
dec
jle
scas
and
in
sbb
pushf
int3
xor
in
out
call
xchg
jb
es
cmp
repnz
xchg
loopne
push
adc
push
enter
loope
push
mov
add
paddw
outsb
add
add
fs
rolb
fisubl
inc
fwait
adcl
jnp
dec
in
fptan
decl
mov
mov
or
stos
sbb
fldenv
or
cli
adc
sub
xchg
xchg
sahf
ret
aam
xchg
cmpsb
push
xor
xchg
lahf
xchg
gs
cmp
xchg
nop
lods
lods
mov
cmp
pop
cmp
into
into
out
int
mov
xchg
mov
cld
movsl
mov
popf
and
imul
cmp
addb
call
or
dec
cmpsl
scas
cmpsb
mov
cli
and
push
mov
or
jbe
inc
aam
stc
mov
pop
or
pop
frstor
push
lock
in
sbb
adc
cmp
inc
loopne
and
js
in
mov
jmp
cmp
orb
jg
pop
jg
hlt
pop
jb
mov
lcall
repnz
dec
pop
pusha
push
fisubl
push
out
scas
les
je
pop
xor
aad
or
mov
mov
out
mov
push
into
cltd
ss
fistpl
scas
xor
push
push
mov
stos
cmpsb
jb
inc
adc
imul
push
adc
pop
pusha
test
add
cmpsb
dec
sbb
adc
lcall
jmp
push
jne
sti
xor
nop
mov
cmp
in
cmpl
jle
jb
xlat
sbb
mov
sbb
test
pop
mov
shll
pusha
test
dec
mov
xchg
test
push
pop
int3
cmp
out
in
jae
out
xchg
test
mov
in
sub
icebp
gs
pop
gs
dec
mov
std
movsb
lret
pusha
adc
sbb
and
adc
scas
cld
xchg
das
nop
dec
or
inc
jo
std
lcall
inc
xchg
sbb
cmc
lods
gs
addr16
pushf
std
mov
frstor
push
cltd
sub
or
xor
inc
test
mov
sub
lock
jb
ror
cmp
add
dec
fstl
cmp
xchg
fxch
and
add
iret
push
inc
add
mov
xchg
mull
pop
adc
and
dec
jne
loopne
fwait
and
sbb
mov
sub
or
idivl
push
leave
aam
popf
add
loop
cld
sbb
das
or
mov
divl
pusha
push
out
or
dec
je
out
or
inc
xor
cmp
int
xor
fnstcw
xchg
add
pop
mov
jo
fcoms
lods
or
scas
sbb
sub
mov
and
stos
lods
fstps
gs
daa
lock
fcmovb
xor
jp
les
lods
pop
imul
popa
imul
gs
insl
push
cltd
push
sub
inc
pop
cwtl
push
dec
imul
iret
add
add
add
adc
push
xor
mov
pop
inc
mov
pop
movsb
jle
xchg
jge
loop
mov
leave
in
jae
mov
mov
lret
ftst
pop
test
cmp
loope
dec
orb
jge
mov
lcall
mov
sti
push
jae
push
lock
mov
jecxz
jle
aad
xor
cmp
call
xchg
and
mov
cmpl
int3
xchg
push
js
test
imul
push
negb
lahf
daa
paddusb
xchg
icebp
filds
in
out
mov
subl
in
repnz
jmp
shll
clc
mov
bound
push
sbb
add
rcrb
cwtl
mov
add
push
mov
imul
cs
aam
push
and
push
and
cmp
xor
out
aam
add
das
outsl
or
loop
nop
aad
testb
pusha
push
ja
cltd
out
out
jecxz
mov
sub
rol
mov
fwait
daa
andb
fcompl
lret
xlat
mov
lods
inc
or
sbb
xchg
outsl
inc
mov
les
loopne
inc
or
or
cmpsl
flds
xchg
das
idiv
sub
mov
lods
jp
icebp
lds
and
ljmp
stos
xchg
hlt
into
add
xor
xchg
sahf
sub
rcrb
adc
adc
dec
cmpsl
dec
fsubrs
lea
btr
cmp
pop
jnp,pt
jl
push
pop
push
dec
and
mov
inc
fnsave
aad
and
cmpsb
add
inc
sub
jo
jge
xchg
xor
popa
pop
int3
scas
shlb
aad
jl
scas
and
scas
in
ss
inc
dec
add
jecxz
pop
movsb
into
lret
xchg
sbb
testl
shlb
adc
fwait
cld
or
and
pop
ljmp
dec
add
xchg
jb
mov
jno
repz
nop
stos
dec
cmp
push
sub
adc
mov
cmp
mov
mov
adc
mov
push
xchg
aaa
cmp
sub
aaa
add
jb
mov
and
stos
fcoml
sub
xchg
cmpsl
push
push
fdecstp
and
pop
and
dec
add
jb
mov
adc
or
adc
movsl
mov
mov
lret
sub
push
ljmp
jns
mov
das
add
cwtl
aam
sbb
xor
data16
rcl
mov
or
lcall
mov
mov
cmp
fucom
add
test
jmp
jo
popf
xor
lcall
ret
jae
in
inc
jl
mov
mov
std
xor
mov
xlat
adc
and
lret
mov
cmpsl
push
repz
cmp
jp
xor
xor
repz
imul
jb
push
std
out
sbb
sbb
inc
mov
adc
sub
test
scas
fmuls
jg
inc
adc
xchg
stc
rolb
rcll
les
fbld
sti
xlat
and
andl
sbb
ds
lods
jb
lea
jo
fiaddl
outsb
call
outsb
ss
popf
mov
cmc
cltd
add
lods
cmp
push
out
mov
and
mov
cli
and
add
jmp
cltd
push
xor
mov
inc
or
in
jge
add
pop
mov
dec
imul
hlt
lret
xor
push
faddl
adc
pop
sub
loop
shlb
mov
lds
mov
lea
xchg
jge
push
sub
pop
in
out
mov
push
dec
adc
add
mov
push
aad
into
mov
and
mov
sahf
in
cmp
lcall
daa
xchg
jecxz
push
xchg
outsb
push
fisttpl
sub
cwtl
icebp
outsl
jns
jle
sbb
adc
stos
mov
mov
and
lret
std
push
test
loopne
xlat
push
aas
jbe
dec
aam
jmp
scas
ja
push
aaa
jmp
out
xchg
adc
movsl
mov
fwait
inc
mov
mov
pop
mov
xchg
cli
hlt
jne
sbb
dec
jmp
dec
stc
decl
cmpsb
xchg
adc
inc
and
icebp
movsl
and
dec
push
rcl
inc
test
shl
jmp
lcall
shrb
mov
mov
arpl
rcl
pop
jns
inc
testl
xchg
pop
subb
pop
mov
inc
sti
jb
mov
push
add
mov
in
mov
and
mov
fstpl
or
add
sub
jge
repz
push
push
inc
dec
testb
shrl
in
pop
sub
dec
movl
lea
cmp
xchg
ds
xchg
mov
mov
scas
imul
sti
bnd
mov
push
das
mov
stos
outsl
ret
icebp
jle
push
enter
out
pop
loop
and
add
in
inc
push
add
inc
test
add
xchg
sbb
xor
xor
and
adc
out
adc
mov
mov
test
and
std
jmp
and
iret
popf
jb
xchg
dec
repnz
jg
lds
push
pop
dec
jnp
jns
push
lahf
xor
movsl
lods
pop
pop
pop
push
sahf
cmp
push
cli
mov
movsb
fs
mov
repz
xor
adc
test
subb
xor
arpl
sub
aad
test
fsqrt
mov
lds
insl
cmpsb
sbb
icebp
cs
imul
mov
push
sub
data16
arpl
xor
xor
add
testb
mov
mov
pop
inc
mov
jnp
in
add
push
pop
cmp
xchg
push
sub
sub
negb
jecxz
mov
shrb
fbld
mov
pop
dec
add
popf
repz
imulb
sub
imul
dec
xlat
pop
je
fisubl
dec
mov
push
pop
loop
push
and
inc
std
push
lret
mov
cmc
mov
mov
divl
jne
mov
push
les
loope
les
mov
ja
pop
rorb
jmp
sbb
push
cmpsb
adc
and
sbb
cli
pop
mov
stc
mov
mov
jge
push
lds
out
fldt
addr16
xchg
mov
add
pop
out
adc
mov
rorl
stos
shlb
fstpt
mov
popa
aad
ret
jae
jo
inc
into
jne
push
pop
jno
int
jg
sbb
cld
imul
jecxz
sahf
filds
adc
imul
stos
add
push
jbe
add
or
jg
mov
push
push
dec
outsl
xor
push
out
or
or
ljmp
xchg
xchg
dec
xor
add
test
push
push
xlat
int
mov
mov
in
sbb
mov
sub
and
int3
mov
mov
push
data16
icebp
sub
lret
xchg
mov
xlat
rcll
xor
dec
shrl
mov
push
xchg
dec
pusha
leave
movsl
xchg
dec
ljmp
mov
xor
ret
cmp
cld
cwtl
and
pusha
pop
pop
adc
sub
mov
pop
and
inc
dec
mov
push
and
enter
out
loop
add
pusha
pop
fld
jbe
jno
dec
dec
imul
sbb
shll
pop
sbb
xor
das
pop
test
jg
mov
mov
sub
sbb
xchg
or
sbb
sbb
adc
imul
les
pop
ret
repnz
outsb
sbb
loop
ljmp
add
jle
inc
jge
push
test
jbe
hlt
mov
jg
loope
repnz
inc
stc
pop
or
test
inc
ss
loope
cmc
cmp
add
filds
adc
adc
dec
lods
push
in
and
jl
fists
cmp
push
mov
imull
aas
test
popf
adc
data16
cmpsl
std
jp
out
fsubl
xchg
pop
lock
gs
fldcw
and
xchg
cmc
in
and
fcompl
inc
xchg
cmc
testl
dec
push
fnstsw
out
push
test
adc
loopne
sbb
mov
data16
out
int
stos
pop
pop
xor
adc
ret
adc
fldl
cmpsb
lcall
pop
ljmp
push
mov
stos
pop
cli
mov
stos
pop
dec
loope
jmp
fisubrl
lret
or
add
ret
popa
push
xchg
roll
shr
imul
cld
jns
push
pushf
cmp
pushf
push
loope
lahf
ljmp
ret
adc
dec
xor
mov
add
cld
inc
sbb
mov
lret
leave
jmp
fmuls
xor
xchg
or
xor
sub
lods
cmp
cmp
stos
push
cwtl
call
jo
cmc
test
and
xchg
xchg
out
jecxz
push
jmp
xchg
iret
pop
movsl
mov
add
aad
sarb
stos
insb
sub
cmp
pop
es
mov
dec
push
sub
shrl
das
adc
mov
inc
xor
lds
rol
and
out
roll
sbb
fildl
sarl
fdivs
roll
sbb
add
and
cmp
cld
daa
push
dec
loope
fucomip
jecxz
cmp
mov
add
rorl
ret
ret
jg
cmc
xor
push
xchg
xor
adc
push
mov
popl
data16
adc
inc
push
inc
fadds
mov
jno
add
xor
add
and
cmp
dec
sbb
or
cld
dec
dec
inc
jnp
loopne
shll
lahf
or
dec
and
mov
inc
push
out
int
or
mov
mov
outsb
fisubrl
ja
xchg
xchg
fidivs
mov
loope
push
fwait
negb
mov
and
and
push
sub
lock
cmpsb
or
mov
les
out
sub
and
fisubrs
cmp
cmp
mov
sbb
pop
into
push
ss
cltd
inc
jo
daa
cmpsl
int3
sti
pop
movsl
mov
orb
in
in
xchg
xor
jmp
inc
shlb
std
sub
lret
sbb
jmp
nop
cmp
pop
outsb
xchg
push
sub
rol
mov
test
mov
cmp
sbb
add
mov
shl
or
pop
out
mov
leave
imul
test
sub
aad
push
inc
ljmp
out
fbstp
aas
dec
mov
fsubrs
lcall
add
jg
pop
xor
cld
scas
xor
xlat
sub
xchg
inc
loopne
jo
leave
test
xor
ja
xlat
push
mov
stos
push
add
ljmp
insb
ficomps
add
sbb
sahf
adc
shlb
inc
insl
jns
fnop
je
add
sub
mov
repnz
ljmp
mov
pop
sub
mov
lahf
mov
pop
scas
mov
xor
adc
cmpsb
and
into
sbb
shrb
jb
adc
ret
xlat
lahf
pop
and
ja
sub
out
adc
xchg
je
movsl
rorl
repnz
divb
pop
scas
cwtl
xchg
xchg
push
orl
je
pop
daa
les
lock
fcmovnu
xlat
cli
cmp
into
cmp
pop
push
mov
jo
sub
cmpsl
and
mov
sti
mov
add
lret
cmpsl
loop
jmp
aaa
jnp
or
test
lods
adc
das
data16
push
loop
jns
mov
cmc
adc
das
jge
and
enter
addr16
push
jno
stos
arpl
out
add
mov
fwait
sub
xor
xlat
mov
aam
pop
repnz
in
jge
sbb
lds
out
nop
fcmovbe
mov
int
mov
das
mov
adc
jmp
inc
gs
and
push
mov
push
test
mov
push
loop
in
push
paddusw
dec
dec
cmp
jl
daa
je
adc
jb
push
cmp
mov
cmp
das
icebp
cmpsl
out
notb
jge
pusha
mov
inc
es
mov
repnz
mov
mov
test
loope
mov
cld
xor
loope
mov
and
inc
dec
push
jae
push
push
shlb
cmp
addr16
add
pop
inc
sub
adc
imul
dec
rorb
cmp
jb
add
aad
jo
stc
xchg
daa
or
insb
pop
xchg
pop
mov
dec
inc
mov
xchg
and
pop
dec
addb
popf
mov
arpl
aad
adcl
js
js
mov
pop
test
aaa
pushf
mov
cmp
cmp
hlt
addr16
inc
inc
inc
popa
bnd
or
jl
sarb
mov
or
loop
fmul
das
pop
hlt
xor
jg
dec
ss
dec
fcompl
pop
jge
pop
mov
dec
fstpt
out
jl
and
inc
inc
cld
aad
sub
insl
nop
int
lds
jp
repz
xchg
fwait
out
es
fstps
mov
add
xor
dec
jb
or
adc
lret
gs
fistpll
mov
mov
or
addr16
mov
jmp
push
ret
iret
mov
sub
lret
arpl
pop
and
push
jge
pushf
aad
pop
std
in
lea
push
cmp
add
jbe
das
cltd
ja
sub
xor
subb
ret
aaa
pop
mov
out
les
in
add
jno
xchg
xor
stos
mov
inc
mov
lret
outsl
mov
push
cli
xlat
mov
sub
std
sbb
push
and
clc
cmp
fldcw
cmc
cmpsb
adc
jmp
mov
pop
pop
fstps
dec
add
sub
push
sahf
pop
hlt
jp
or
xor
mov
sti
xchg
dec
andl
adc
or
dec
cltd
push
rclb
repz
add
jl
loop
push
lds
mov
add
fisttpl
xchg
hlt
testb
xor
push
inc
push
ja
outsl
add
repz
and
leave
adc
repnz
test
xchg
jo
adc
test
testl
nop
popf
dec
adc
dec
sbb
sti
shrl
icebp
shrl
mov
adc
xor
adc
imul
fistl
loop
or
push
insb
repnz
mov
std
fwait
adc
mov
les
mov
inc
loop
xlat
movsl
inc
mov
push
or
js
or
cmp
fstpt
jp
push
dec
xor
mov
mov
jecxz
in
sbbb
js
pop
and
rolb
sbb
lock
jbe
pop
out
int
sbb
mov
mov
pop
jmp
jne
into
inc
sub
out
push
cmp
dec
pop
aad
scas
xchg
lods
xor
mov
lock
pop
adc
cmp
fldl
dec
into
inc
pop
and
mov
adc
loopne
mov
jge
pop
mov
jge
add
repnz
daa
mov
lcall
negb
in
sbb
push
xchg
bound
icebp
jae
dec
bswap
test
mov
scas
repnz
push
sub
xor
stos
mov
lahf
inc
in
pushf
add
leave
inc
pop
mov
pop
cmc
and
mov
mov
xchg
leave
mov
leave
in
popf
sbb
add
mov
cmpsl
sbb
pop
aaa
and
aaa
xchg
push
popa
imul
mov
push
mov
in
jg
inc
mov
jno
mov
adc
lea
jnp
inc
scas
daa
jb
outsl
cmp
xor
repnz
adcl
jne
inc
scas
and
das
fldt
pop
pop
mov
xchg
popf
xlat
mov
jno
lods
je
sbb
jmp
jns
adc
mov
lcall
inc
mov
lahf
aad
mov
imul
mov
pop
ficoml
sti
fcoml
and
xchg
in
inc
dec
sub
dec
lcall
orb
mov
jno
fcmovnbe
imul
pop
out
xchg
and
out
mov
pop
xorb
xchg
bound
and
cwtl
stc
ss
call
jne
pop
shrl
sbbl
cmp
sub
push
xchg
subl
cmp
adc
aam
dec
sbb
adc
xchg
daa
lock
test
pop
stos
xchg
stc
inc
test
xchg
mov
icebp
adc
fcmovb
enter
mov
sbb
jnp
std
popa
dec
pop
mov
push
pop
out
pop
mov
mov
xor
sub
mov
or
mov
bnd
xchg
lods
stos
in
push
inc
or
mov
pop
xchg
test
and
es
lds
and
je
cwtl
cld
push
jecxz
imull
adc
or
aam
enter
icebp
mov
outsl
mov
add
imul
rcl
ja
mov
xlat
sbb
test
shr
loop
into
cmp
in
or
pop
mov
add
pop
sbb
lea
es
or
fstpl
push
out
jnp
mov
out
std
inc
rorb
arpl
sub
std
test
mov
jns
insl
repnz
push
in
pop
inc
add
jb
mov
add
push
sti
lods
loop
bound
pop
push
arpl
out
inc
fadds
daa
dec
pop
movsb
sbb
adc
mov
sahf
xchg
call
fcomps
pop
lock
sbb
fmull
mov
xchg
mov
dec
outsl
cmpsl
in
dec
fucomi
inc
cs
push
out
std
in
sub
ffreep
lahf
jle
mov
sbb
add
fildll
icebp
inc
cmp
push
rol
inc
or
test
subb
xlat
add
lock
xchg
xchg
sbb
cmc
dec
mov
add
aaa
repz
pop
mov
jno
jl
xor
dec
mov
adc
mov
arpl
sub
les
cld
add
jge
leave
mov
pop
div
mov
sub
xchg
xor
adc
imul
movsl
adcl
lahf
jmp
mov
xchg
jno
and
dec
xor
or
nop
pusha
cld
outsl
lcall
cmp
dec
cmp
or
pop
gs
xchg
outsl
repz
aas
add
mov
adc
mov
fdivrs
das
orb
das
inc
jbe
pop
lods
inc
out
ret
xor
pop
call
cmp
push
leave
into
sarb
fnstenv
jecxz
imulb
pop
push
xor
cmp
lods
sub
mov
push
pop
lds
add
xchg
or
sti
ror
std
imul
jecxz
push
test
gs
and
stc
sbb
mov
roll
arpl
jae
mov
mov
rep
mov
imul
add
rolb
test
sbb
adc
or
movsb
adc
lcall
into
or
jno
sbb
mov
push
mov
out
fsts
mov
out
pop
sbb
mov
in
mov
mov
dec
icebp
add
lret
das
sbb
insl
pop
pop
icebp
push
js
int
mov
mov
and
pop
pop
bound
ffreep
lret
std
xchg
jno
lret
xchg
mov
mov
add
je
sbb
cmp
push
sub
mov
aad
pop
or
add
and
xchg
test
cmp
push
int
test
test
and
rcr
fsubrl
add
setns
mov
ljmp
xor
mov
pop
mov
in
ds
mov
dec
jge
and
aad
pop
popa
pop
or
push
push
mov
dec
mov
insb
inc
nop
mov
in
clc
ret
mov
mov
push
ficoml
pop
mov
test
fcoml
mov
pop
or
pop
or
or
mov
inc
xor
fucomip
imul
rcll
iret
mov
ficoms
pop
mov
mov
gs
out
inc
xchg
mov
sbb
add
out
xor
dec
pop
faddl
sbb
jp
xchg
scas
gs
ds
cmpsl
or
and
jb
adc
add
loop
push
ret
call
jbe
mov
mov
es
mov
and
lds
xchg
xor
lods
lret
sbb
aam
push
fs
orb
ss
std
sbb
xchg
lods
dec
lcall
lahf
imul
inc
and
push
lahf
sbb
sub
xchg
cmp
fldl2t
insb
xchg
mov
xchg
inc
cli
jmp
fidivrl
xorl
mov
push
dec
dec
pop
xor
sbb
outsl
inc
das
aad
into
xorb
xor
mov
ss
fldenv
mov
out
sbb
jecxz
xchg
aaa
shlb
aaa
je
xchg
repz
dec
inc
inc
insl
sub
xor
push
fstp
xchg
in
stc
xor
inc
hlt
jecxz
fisttpl
mov
push
test
lods
jno
loopne
inc
inc
and
pop
std
idiv
in
or
jo
xchg
jg
icebp
icebp
bnd
scas
push
ja
faddl
sarb
jecxz
sub
cmp
jmp
mov
mov
pop
loop
or
out
test
dec
inc
sahf
dec
sub
xchg
push
sarl
cmc
lret
add
dec
pcmpgtw
stos
movsl
push
lock
sbb
xchg
cmpsb
popf
roll
xchg
jb
and
out
pop
jne
mov
aad
dec
add
xlat
nop
push
sbb
lock
jecxz
cmp
aad
popf
push
out
ss
cmc
das
mov
test
push
cmp
movsb
jecxz
push
or
sub
insb
les
fisttps
jno
push
cld
stc
jae
lods
and
or
imul
es
shll
divl
xor
fsubrs
jg
outsb
std
mov
test
stos
stos
lea
es
fyl2x
ds
and
push
pop
jo
adc
ffreep
inc
jo
dec
sub
push
cmp
lret
xlat
xor
push
and
or
inc
cmp
sub
call
insb
pop
aam
scas
pop
jae
dec
test
add
xchg
out
push
dec
ljmp
lahf
gs
insb
adc
mov
sub
out
out
cmp
inc
movsb
outsb
mov
int3
push
adc
mov
fnstcw
cmp
cmp
cld
stos
stos
mov
cmc
inc
mov
inc
scas
ja
sbb
sub
scas
icebp
outsl
stos
je
test
test
xor
aas
push
dec
push
jb
mov
lods
aam
sub
test
cld
mov
add
imul
aad
in
lds
loopne
xlat
loope
fwait
mov
cmp
jmp
sahf
push
push
leave
into
inc
fdivrs
setae
mulb
mov
pop
pop
pop
shll
sbb
push
scas
mov
daa
mov
les
arpl
int3
mov
enter
sbb
test
std
lret
icebp
repnz
xor
jae
arpl
pop
pop
pop
cmc
xchg
sub
xchg
stos
shlb
add
adc
mov
sub
mov
lcall
sub
push
stc
jecxz
and
ret
push
mov
sbb
adcb
mov
add
cwtl
ljmp
sahf
inc
jmp
imul
xchg
sbb
aas
inc
add
pop
and
dec
ret
sub
add
cmpsb
sti
fwait
loope
dec
and
fwait
mov
rolb
mov
jg
dec
test
xor
scas
or
adc
push
jne
or
stc
cmc
ds
mov
mov
add
inc
iret
and
cmp
pop
xchg
sub
jbe
jmp
jns
dec
out
shll
xchg
mov
cmp
loopne
sub
inc
inc
jge
adc
jecxz
loop
lahf
inc
dec
call
fdivs
ja
insl
cld
fwait
xchg
add
fidivrs
scas
dec
pop
scas
adc
pop
decb
jbe
sbb
jp
ret
sub
lock
mov
das
shl
pushf
sbb
std
mov
push
dec
test
outsl
pushf
rorb
sbb
and
mov
int
lret
shlb
or
xor
aad
ds
adc
insb
mov
xchg
incl
popf
outsl
mov
loope
xchg
mov
repnz
dec
inc
sbb
jmp
sub
or
cltd
movl
es
mov
xor
push
testl
in
add
sub
sub
or
mov
cmp
or
adc
mov
inc
or
and
imul
add
pusha
inc
jne
pop
inc
mov
popa
xchg
shlb
popf
push
pop
cld
jmp
mov
pop
in
lock
or
mov
js
int
pop
cs
aas
dec
movsl
inc
or
xor
call
mov
les
scas
nop
cmp
repz
sbb
add
push
jae
nop
cs
jecxz
ja
les
adc
jae
xchg
add
pop
jae
hlt
mov
xlat
mov
and
and
mov
xor
sub
imul
sbb
subl
xchg
xor
mov
in
mov
clc
cs
les
mov
push
inc
mov
cmp
sbb
enter
xor
inc
add
xor
cmp
and
out
sbb
xchg
je
jo
aas
push
xor
cmp
jp
neg
nop
mov
lds
insl
lret
sub
or
out
std
jle,pn
mov
mov
test
daa
sahf
sti
imul
mov
fbstp
adc
inc
or
lahf
adc
adc
xchg
xchg
aam
repz
mov
jmp
inc
pop
pop
pop
int3
jno
js
gs
test
das
aad
outsb
lock
mov
stc
mov
inc
flds
inc
daa
pop
push
jecxz
xor
jnp
lea
imull
inc
gs
popa
mov
xor
loopne
jl
stos
test
jae
nop
mov
pop
cmpsb
scas
mov
loopne
cld
popf
mov
add
cmp
addb
mov
mov
dec
test
fwait
cmp
or
pop
mov
sub
aam
inc
addr16
push
lret
sbb
nop
and
inc
dec
xor
adc
sahf
mov
imul
or
pop
movsb
fdivr
lret
hlt
mov
addr16
xor
insb
dec
rcrb
sub
push
lea
dec
mov
subb
mov
add
cli
jl
mov
stc
scas
mov
insb
jno
xor
mov
sub
inc
lods
ficomps
orb
cli
repnz
fcomps
insb
ds
fcmovbe
stos
iret
mov
xchg
mov
xchg
cmp
outsb
mov
mov
mov
pop
dec
xor
scas
popa
xchg
push
pop
push
xchg
jnp
mov
pop
mov
ret
in
dec
jmp
lret
xor
fnstsw
push
cmp
repnz
adc
add
jecxz
mov
or
mov
jae
push
mov
and
mov
ret
mov
scas
dec
xor
int3
or
arpl
mov
fstl
inc
outsb
dec
xchg
xchg
pop
loopne
sbb
nop
xlat
pop
xchg
mov
insl
aas
rcll
xlat
jp
ja
stos
and
jmp
xor
stc
outsb
icebp
sarb
push
js
dec
mov
pop
test
push
mov
xor
fadds
and
push
mov
and
xchg
or
adc
dec
sub
xchg
dec
add
stos
and
or
xchg
addps
pop
mov
lret
push
xorl
scas
les
ljmp
jae
cmp
push
pop
and
or
jne
sbb
fldenv
or
mov
push
mov
adc
std
inc
aas
xor
mov
push
adc
clc
hlt
jp
fs
ljmp
mov
int
push
push
repz
mov
ds
mov
and
push
clc
hlt
je
sar
out
mov
lret
push
insl
xchg
lea
mov
pop
xor
loopne
idivb
test
jno
aas
pop
push
aas
jno
cmp
jae
and
mov
jecxz
push
insl
insb
and
imul
dec
xchg
sub
xor
adc
or
add
dec
or
xorl
cmp
xor
mov
pop
aaa
or
in
add
int
pop
nop
hlt
xchg
insl
jg
sti
cltd
mov
clc
test
incl
fldl
jge
sbb
or
ljmp
xor
cmp
xchg
mov
mov
test
in
mov
lods
dec
ficoms
adc
int
mov
iret
lret
jle
mov
out
call
loope
and
sarb
jnp
dec
cmp
insl
ljmp
jae
xlat
hlt
in
cmp
mov
fildll
pop
and
repnz
scas
push
xor
std
int3
bound
loop
push
test
sbb
movsl
test
add
leave
sahf
fisubl
push
mov
lock
and
adc
sub
fwait
imul
leave
and
or
xchg
sar
std
xor
mov
or
xchg
xorb
xchg
jl
outsb
shrb
or
xor
xchg
out
xor
mov
fimull
and
xchg
xor
imul
fmulp
sbb
mov
cmpsl
popa
xor
sbb
push
pop
sbb
dec
inc
scas
nop
pop
mov
pop
xor
or
inc
cltd
pop
fcmove
lods
clc
mov
dec
addr16
lock
xchg
add
or
mov
add
jmp
arpl
lea
rcrb
arpl
add
leave
xor
push
loope
rclb
mov
fidivrl
pop
arpl
shrl
lods
and
pusha
dec
popl
into
sarb
sbb
ret
mov
cmpsb
cmp
xor
and
pop
cli
and
test
xor
push
add
mov
mov
adc
jne
adc
in
hlt
flds
pavgb
xor
mov
inc
jge
test
dec
jmp
fiadds
mov
adc
js
add
or
xor
lahf
sub
push
data16
mov
bnd
sbbl
pop
xchg
pop
sbb
inc
xor
orl
pop
rorb
dec
jae
dec
sbb
ljmp
mov
iret
inc
sub
cwtl
pop
cmpl
popa
push
lds
jecxz
rcll
je
xchg
inc
jg
or
in
inc
arpl
jecxz
and
insb
scas
ret
in
jnp
pop
call
jecxz
mov
aad
and
cld
call
outsl
mov
es
hlt
push
jbe
popf
ljmp
adc
adc
or
cmp
daa
xlat
mov
loope
jp
jecxz
jle
sub
ds
xchg
test
dec
sbb
daa
pop
sbb
out
add
pop
pushf
mov
xor
testb
and
bound
xor
lret
dec
sub
jmp
or
daa
sub
mov
xchg
es
push
sti
mov
repz
enter
pop
call
pop
pop
sbb
cs
xchg
mov
push
cmpsl
pop
mov
decb
pop
sti
pop
cltd
ja
push
pop
mov
into
mov
xchg
sahf
aad
imul
pop
pop
aam
andl
pop
mov
jp
sti
jns
movsl
or
cli
pop
mov
dec
sbb
add
ljmp
scas
je
repz
pop
test
dec
inc
icebp
push
loopne
mov
cmp
loop
pop
xchg
mov
push
fwait
sub
dec
cmp
mov
int
pop
xchg
outsl
subl
adc
je
int
cmp
add
sti
mov
or
sub
cmpsl
adc
lret
outsb
mov
sbb
pop
mov
repz
pop
cmp
pop
in
popa
lods
sub
jecxz
cmpsl
pop
stos
into
fidivrs
fldenv
xor
aaa
dec
sub
fisttpll
lcall
push
sbb
daa
xchg
mov
jo
jl
jnp
out
ss
pop
adc
addr16
movsb
mov
dec
test
adc
lock
dec
aam
incl
inc
fisubl
popa
jnp
lahf
cltd
sahf
jmp
shll
loope
jg
jmp
mov
icebp
and
sbb
jae
lea
lret
sbb
fisttpll
sbb
bound
call
pop
sbb
test
jle
jl
jnp
dec
out
adc
jb
mov
negb
imul
pop
mov
mov
push
sahf
sbb
je
lret
mov
dec
aad
mov
sub
push
jp
xchg
mov
add
jl
xchg
or
mull
xchg
fwait
sub
incl
sarl
sub
mov
xor
cli
ret
clc
adc
hlt
xchg
pop
xlat
in
xchg
xchg
das
movsl
int
enter
pop
int3
jnp
xchg
inc
rcl
cmp
mov
sarb
int3
xchg
loope
sarb
adc
mov
out
push
sti
arpl
popf
ret
mov
out
ja
outsb
jle
cmc
pop
test
cmp
pop
xchg
js
into
add
repnz
js
jecxz
jge
push
push
sbb
loope
shrb
lock
call
insl
inc
cmp
addr16
mov
popl
mov
sti
xchg
ljmp
pop
aaa
das
pop
xor
jl
subb
push
or
or
sub
shlb
sbb
imul
ret
mov
hlt
pop
inc
adc
daa
push
or
sbb
mov
sbb
clc
sar
mov
adc
mov
imul
add
add
rcr
imul
push
jecxz
insb
and
sarb
xor
popf
cmp
or
loop
adcb
and
jp
adc
add
aad
dec
fmull
xlat
outsl
in
sub
pop
jp
mov
popa
aaa
clc
push
or
sbb
dec
mov
add
inc
lds
and
dec
cs
imul
daa
push
jns
push
inc
mov
pop
xor
enter
and
push
adc
sub
xchg
mov
popf
sbb
sbb
fldenv
push
push
xchg
mov
xchg
and
mov
mov
sbb
dec
xor
lock
and
daa
mov
in
push
popa
pop
mov
mov
jge
dec
psubd
stos
inc
repz
lods
inc
movsl
dec
mov
mov
cvtps2pd
add
ds
scas
pop
cmp
xor
pop
push
cmp
insb
and
out
xchg
xor
dec
sbb
jno
adc
stos
popf
enter
mov
int
push
adc
dec
jl
push
or
adc
mov
mov
addr16
sbb
shr
jecxz
sub
sub
pop
xorl
sbb
lcall
jl
into
sbb
xor
cwtl
inc
pop
fs
lret
test
popa
xor
and
loope
pop
adc
enter
or
clc
pop
jno
jg
or
rclb
fwait
xchg
nop
movsl
out
inc
fadd
movsb
and
cmp
shrb
adc
jo
jl
xchg
mov
fcmovb
ret
cld
ss
sub
and
push
das
sbb
xor
dec
cld
xchg
incl
xor
push
stos
mov
enter
cmp
xchg
stos
jle
sub
pop
cmp
jbe
cld
inc
pop
mov
xchg
sub
dec
add
out
mov
xor
cltd
add
cld
iret
out
cmp
cmp
in
std
inc
inc
sub
xchg
add
mov
ja
incb
cwtl
mov
scas
fstpl
imull
insl
inc
and
jo
inc
push
sub
test
mov
test
icebp
loopne
push
testl
test
xor
pop
lods
les
and
or
pop
mov
jnp
out
pusha
inc
lcall
hlt
mov
adc
mov
popf
icebp
xchg
lds
jne
lods
mov
lret
sbbb
xor
jno
aaa
fneni(8087
fistl
sbb
pop
cmp
pop
subb
das
push
fstpt
ja
sub
mov
push
push
add
ret
sbb
mov
pop
xchg
mov
nop
popf
repz
pop
sub
cld
in
pop
mov
rolb
jp
lcall
dec
pop
jmp
insb
sbb
negb
dec
mov
adc
jl
adc
jl
call
mov
inc
xor
sbb
push
add
imul
addb
xchg
add
jns
jp
mov
fsubrs
cltd
mov
sub
or
adc
nop
pop
stos
adc
out
xchg
inc
push
jae
mov
pushl
popa
add
sbb
pop
push
sub
dec
jecxz
in
pop
pop
inc
fnstsw
push
addr16
cmp
cld
loopne
mov
jl
jae
inc
shrl
sahf
rorl
mov
lock
popf
sub
je
faddl
loop
pop
sub
movsb
inc
daa
int
sub
push
aaa
xorl
test
aaa
sub
js
les
jb
ret
pop
je
sub
adc
jno
mov
fcomps
out
pop
loope
push
and
or
jae
pop
pop
arpl
xchg
push
jge
dec
mulb
mov
inc
adc
push
sbb
mov
loop
shlb
dec
fwait
sbb
sub
add
into
aaa
jo
jb
sbb
inc
jbe
fdivrl
sub
daa
data16
and
fdivl
push
cmpsl
jne
rcr
mov
mov
arpl
orb
lea
or
incb
ret
inc
out
mov
loop
inc
loopne
and
and
push
jle
shll
addr16
mov
jmp
mov
sbb
int
adc
repz
pop
lret
out
test
jl
cwtl
loopne
push
cmp
or
out
out
mov
test
sbb
lock
cmp
or
sarl
cmp
enter
rclb
in
inc
jae
adc
pop
stos
pop
xlat
cmp
fmull
ds
mov
mov
jb
cmp
fbstp
jbe
or
mov
sbb
cli
xor
sti
push
cmpsb
cmp
sbb
lods
les
mov
sub
iret
inc
or
rclb
outsb
mov
call
ss
shl
pop
add
call
out
xchg
fcoml
cmpsb
idiv
push
hlt
and
ljmp
cmp
ss
cwtl
fadds
shrl
test
subb
inc
mov
es
xchg
enter
mov
xchg
mov
cmp
bound
push
mov
mov
adc
cmpsb
dec
and
test
lea
inc
outsl
ret
out
push
out
scas
mov
mov
sbb
filds
int
mov
jno
in
sub
mov
sub
cmc
cld
push
add
aad
into
in
cmpl
ficoms
and
outsl
stos
dec
pop
stos
mov
cli
jecxz
dec
sarl
test
jg
add
push
faddl
nop
add
add
fimuls
adc
push
xor
aad
pop
sub
icebp
jbe
sub
or
js
dec
or
rorl
push
out
addr16
ret
and
movsb
sbb
mov
out
and
jge
rorb
sub
cld
ss
out
sub
or
data16
les
mov
test
sub
push
xchg
gs
inc
xchg
jo
fwait
and
cmp
call
ds
xchg
div
push
pop
adc
shrb
cmp
js
push
movsl
mov
push
lea
inc
jg
inc
inc
lret
xchg
pop
rcll
push
sub
pop
mov
mov
insl
sub
cmp
xor
daa
sarb
in
xchg
mov
ja
push
adc
cli
sbb
pop
sbb
fs
xchg
dec
push
mov
fmull
lahf
mov
dec
subl
sub
xchg
xlat
insl
shr
cld
call
xor
out
loop
push
lcall
rcl
and
lods
mov
cmpsl
cmp
inc
fdivrp
cmp
xor
jp
cmp
movsl
mov
dec
aad
shll
xchg
sahf
out
sti
dec
imul
xor
sbb
loope
pop
push
mov
ljmp
into
es
mov
jl
sub
out
push
mov
xor
outsb
das
jl
leave
ja
jmp
push
cmpsl
cmpsb
sarb
idivb
lret
sbb
lahf
mov
cmp
jo
push
xchg
push
in
jl
push
push
lock
add
add
hlt
xor
sub
jmp
jmp
hlt
outsb
add
push
pop
xor
mov
jo
mov
xor
jb
repnz
or
fsts
rcrb
cld
xor
pop
sbb
xor
and
xchg
inc
and
jno
aaa
or
lret
or
test
pop
jle
jp
mov
lea
mov
in
cmpsb
xchg
adc
mov
dec
mov
pop
fwait
sbb
dec
movsl
jge
dec
hlt
push
adc
rcrb
shlb
aas
lcall
je
in
imul
mov
sub
pop
test
lret
outsl
mov
cmp
icebp
dec
mov
shll
aam
jo
mov
sahf
out
loop
or
push
adc
mov
mov
jle
pop
mov
mov
addl
jg
jecxz
sbb
and
pop
aam
and
inc
push
movsl
and
test
adc
push
and
cmpb
dec
mov
mov
pop
lods
pop
mov
xchg
enter
nop
fadds
cli
adc
or
push
push
outsl
mov
inc
push
gs
in
push
push
sarb
test
aam
sub
je
mov
or
or
cltd
mov
cmc
in
loope
mov
mov
mov
lahf
or
sbb
sub
add
jg
sbbb
imul
mov
test
adc
jno
sti
sub
xchg
xchg
mov
cltd
lock
dec
enter
push
pusha
jge
add
jae
test
adc
int
xorb
ljmp
sbb
adc
or
mov
sarb
jp
dec
pop
inc
into
jmp
popf
xchg
ja
into
jb
push
cwtl
dec
pop
sbb
mov
and
add
jns
aas
adc
sbb
mov
xchg
push
adc
xor
xor
sbb
add
adc
push
sub
pushf
jae
aam
je
pushf
popf
or
mov
pop
xchg
insb
les
mov
mull
sbb
adc
sub
wbinvd
sti
add
push
cmpsb
add
or
sub
leave
lcall
popf
and
adc
add
add
push
mov
clc
data16
movsl
pop
xor
hlt
jbe
mov
jns
dec
pushf
adc
pop
mov
js
mov
or
sub
fisubs
sbb
mov
popa
jae
cmp
fwait
cmp
out
sub
xchg
jb
and
dec
add
pop
sub
addw
push
adc
je
and
inc
iret
aaa
xor
xchg
add
inc
push
call
and
jl
xor
addl
clc
dec
ljmp
call
loope
and
jge
repz
loope
inc
out
shlb
add
push
mov
rorb
dec
sbb
or
loope
jp
shlb
sub
rcll
insb
mov
icebp
fnstenv
insb
mov
cli
insb
rcrl
dec
int
adc
jno
push
bound
xchg
push
jp
cwtl
and
jmp
in
shll
inc
nop
loopne
xor
xchg
leave
sbb
imul
xor
mov
push
cmp
xor
cmp
out
mov
push
add
mov
outsl
xor
lret
adc
imul
pop
xor
adc
sbb
xchg
mov
jno
mov
imul
xchg
dec
hlt
cmp
fnsave
xor
adc
clc
sbbl
inc
or
icebp
sub
sub
sbb
jmp
sub
mov
pop
outsl
push
fdivrs
sub
dec
pop
cltd
arpl
fsubs
jae
lock
sbb
jecxz
xchg
es
xchg
pop
cmpsl
xor
inc
imul
add
adc
xor
jg
pop
imul
scas
jge
fidivl
fldl
or
mov
loope
in
scas
stc
jae
and
clc
daa
pushf
mov
mov
and
iret
in
sub
jecxz
loopne
mov
and
pop
out
rcll
popa
or
punpckhbw
mov
xchg
int3
fisttps
insl
icebp
nop
lea
lods
test
popa
jb
pop
inc
dec
aaa
loop,pn
popa
adc
dec
mov
and
insb
je
pop
dec
fildl
bound
add
adc
nop
jge
dec
inc
dec
lea
jl
adc
test
addr16
xor
add
loop
push
adc
ds
sub
repnz
cs
push
lret
lahf
and
and
out
aaa
mov
jo
fistpll
adc
pop
frstor
sti
mov
lods
jmp
or
dec
sbb
pop
iret
fmuls
xchg
mov
stos
fisubl
clc
fiaddl
lock
out
gs
push
xor
jnp
push
fnstenv
mov
clc
push
push
fsubl
pop
cs
mov
leave
int
add
cmpsl
sub
cmp
test
sbb
mov
dec
inc
lea
and
mov
dec
in
jne
adc
push
inc
cmpsb
dec
test
aaa
in
cmpsb
pop
in
inc
insl
gs
mov
mov
and
cmpsl
popf
aas
call
dec
inc
jbe
arpl
xor
out
jp
pop
ss
jmp
push
sahf
lret
ret
mov
sub
jae
lret
incl
push
push
jae
pop
pushl
jle
dec
xchg
sbb
mov
lds
scas
add
les
add
popa
adc
xor
mov
mov
mov
push
adc
into
pop
clc
mov
pusha
add
push
jp
nop
ljmp
adc
push
xor
daa
jp
inc
shlb
push
mov
pop
faddp
cli
xchg
cmp
xchg
int
cmpsl
xchg
mov
jecxz
xor
pop
insl
mov
lock
sar
inc
flds
and
mov
adc
xchg
cltd
sti
out
jne
shlb
push
jne
shr
xchg
in
rcrb
add
pop
lcall
adc
inc
inc
test
dec
mov
adc
cmp
and
dec
in
cli
repnz
mov
les
cmc
movsl
leave
cmp
push
mov
pop
xor
inc
imul
jns
ljmp
add
push
js
imul
lcall
je
in
mov
xor
push
lods
push
pop
or
jo
movsl
pusha
xor
icebp
lods
fdivs
popf
sub
add
adc
fwait
ret
jae
fwait
push
xlat
lds
xchg
cs
aaa
inc
pop
jge
es
in
ret
mov
jbe
jno
push
rclb
mov
xchg
mov
cmp
imul
nop
repnz
push
adc
aas
loopne
xchg
shlb
aas
fwait
mov
xchg
mov
jle
stc
cmpl
sti
sub
dec
mov
add
jne
pusha
lret
sub
xchg
jg
leave
pop
mov
cmp
lods
mov
sbb
mov
bound
in
insl
outsb
imul
test
or
inc
jg
cmp
or
aas
lock
fmull
ret
sbb
xchg
jb
mov
xchg
add
stos
adc
dec
test
cmp
scas
push
inc
push
faddp
mov
cwtl
inc
xor
push
sub
xor
xor
stc
out
cltd
daa
xor
jae
and
inc
cmpb
pop
hlt
movsb
push
mov
popf
add
inc
dec
mov
xor
inc
pushf
xchg
and
push
idiv
repnz
jmp
inc
and
mov
jo
js
aad
popa
ficoml
popf
movsb
mov
inc
data16
sahf
mov
dec
mov
gs
loopne
scas
push
cld
ret
icebp
lahf
push
sahf
push
popa
mov
xchg
roll
stc
es
sub
sbb
cltd
nop
sbb
clc
aaa
push
stos
pop
addr16
fbld
xor
push
inc
repnz
cmp
lcall
loope
or
in
pop
aas
jle
xchg
aam
jmp
push
cmp
dec
xchg
rolb
mull
gs
je
add
in
negl
adc
cli
inc
psrld
andb
cmp
ror
push
lcall
ror
shrl
mov
mov
jecxz
inc
push
std
imul
insl
lea
push
mov
test
sbb
shl
or
cs
aam
popf
xor
lret
adc
pop
dec
scas
dec
dec
rcr
add
lcall
pop
fst
mov
xor
fcoml
mov
test
cmp
jae
mov
mov
add
lods
rol
fwait
cmp
or
leave
iret
call
mov
cmp
dec
aad
cmovg
aam
push
and
inc
add
sub
popf
jecxz
cmp
addr16
cmp
add
mov
out
icebp
notl
mov
push
mov
inc
ja
mov
fcompl
cld
mov
aam
rolb
imul
cmpsb
push
imul
mov
xchg
sbb
call
lahf
inc
out
pop
mov
rorl
fwait
dec
xchg
add
mov
jno
cmp
mov
sysexit
fildl
mov
xlat
fwait
lahf
fmuls
push
mov
inc
dec
movsl
aad
js
inc
fucomp
nop
test
mov
inc
pop
mov
jmp
jmp
xchg
pop
cmp
les
and
iret
repz
das
push
scas
in
or
sub
mov
inc
cltd
pop
lahf
aas
hlt
fstpl
cmp
sub
lret
ret
rclb
stc
inc
add
jb,pn
mov
cltd
out
fwait
pop
outsb
pop
insl
push
or
sti
mul
fisubs
push
xor
je
mov
adc
cli
rorl
andl
lods
lea
mov
and
xlat
leave
mov
fbstp
lods
mov
roll
ret
mov
mov
sbb
lods
insl
cli
in
jno
jne
xlat
cmp
testb
sbb
popf
ljmp
bound
out
jmp
adc
xchg
push
loope
mov
loope,pt
xor
push
sub
mov
sti
addr16
stos
xchg
jae
sti
pop
or
std
stos
loope
dec
jp
nop
mov
stos
es
mov
xchg
jns
int
sub
xchg
push
mul
mov
jae
mov
test
pushf
inc
cwtl
xchg
pushf
popf
out
push
test
adc
in
imul
pop
loope
mov
sub
negl
imul
sub
inc
push
push
pop
andb
ljmp
pop
sbb
test
mov
pop
lods
add
pop
jmp
lret
push
xor
inc
sub
cmp
mov
sub
and
inc
cmpb
clc
leave
sub
sub
cmpsl
aaa
push
mov
rcll
add
sub
or
cmp
dec
cltd
fbld
or
sbb
sahf
stos
xchg
dec
adc
in
push
lahf
cmc
inc
adc
mov
or
sub
jns
int3
inc
jmp
cmp
inc
adc
xor
cld
fucomip
sub
enter
push
fistpll
mov
std
scas
pop
and
push
sbb
test
push
icebp
xchg
mov
movsb
mov
cmp
out
jb
push
imul
sti
push
pop
mov
xchg
pop
cmpsl
adc
mov
lods
jbe
movsb
js
cmp
cwtl
jns
ljmp
bound
adc
sub
das
aaa
call
ja
or
iret
pop
movsl
daa
xor
cld
faddl
cmp
push
test
xor
js
inc
and
mov
sbb
cmp
xor
aas
sub
or
leave
mov
mov
sub
push
adcb
leave
stos
loopne
xchg
sub
lods
add
lahf
fs
push
aam
popf
aaa
lods
cmpsl
cld
inc
cmp
fwait
dec
shrb
cmp
jnp
cmp
sub
repnz
sub
mov
cmp
aas
push
scas
add
out
lcall
test
adc
cmp
pop
pop
fcmovnbe
lret
ficoms
xor
and
xchg
into
add
xchg
idiv
push
mov
outsl
sbb
xadd
jl
fwait
pop
add
ljmp
cli
pop
ds
out
cmpsl
jp
sub
pop
jmp
and
xchg
cmp
stc
pop
dec
out
repnz
cmp
clc
out
xchg
enter
push
pop
sbb
jne
push
or
hlt
js
inc
mov
lcall
lret
bnd
mov
sbbb
mov
jge
mov
jbe
or
mov
xor
add
inc
and
adcb
js
mov
adc
dec
cld
inc
dec
movsb
fdivrl
dec
outsb
out
inc
push
mov
dec
jl
les
clc
es
clc
test
cmpb
mov
popa
and
sub
cmp
fidivl
xor
fdivrs
jns
bound
sbb
loop
js
or
push
xchg
jbe
pop
push
mov
les
dec
int3
scas
adc
enter
stos
xchg
adc
call
xor
pop
mov
in
cmp
aaa
les
jnp
iret
nop
loope
push
popf
int3
add
shrb
nop
shl
ret
mov
xor
xchg
sti
mov
lock
mov
jb
xor
js
aam
cmp
fwait
pop
popf
int3
jmp
jnp
popf
pop
lea
jmp
scas
imul
jp
pusha
fimull
lret
dec
repnz
lcall
pushf
push
popa
mov
fidivl
fwait
sub
sub
push
push
jg
icebp
xchg
xchg
cmpsl
movsl
mov
pop
push
and
nop
int3
push
jecxz
push
cmp
mov
mov
movsl
adcl
out
fldl
inc
inc
xchg
jo
push
jb
xor
add
xchg
xchg
into
lahf
movsl
test
jge
or
sub
test
sub
pop
xchg
rol
outsl
cmpsb
cmpsb
mov
shrb
mov
jns
sub
lds
or
je
dec
inc
push
adc
sahf
popf
sbb
in
cmp
and
and
xor
or
lods
pinsrw
into
nop
adc
cmc
adc
jecxz
fdivs
gs
inc
popf
jb
adc
inc
inc
xor
js
sub
cmp
and
aad
int
test
in
sbb
cmp
xchg
in
mov
jg
lods
ret
test
sub
push
jns
mov
and
popf
aas
imul
jge
cld
mov
and
push
or
xor
lea
sahf
or
or
test
jp
pop
xorb
fwait
mov
inc
mov
into
jo
fwait
sub
mov
sbb
or
push
xchg
dec
test
jns
sub
or
mov
mov
lea
jecxz
push
loope
paddsb
fbld
or
or
cmp
inc
sbb
mov
fldcw
clc
loopne
imul
cltd
stos
or
in
cs
adc
loope
inc
xor
sbb
push
push
jae
pop
sbb
or
sti
push
sti
dec
jo
mov
cs
dec
jbe
xchg
ret
inc
gs
mov
mov
push
fbld
loope
jle
lahf
pop
or
dec
test
inc
ljmp
fildll
xchg
cmp
mov
push
fcompl
cltd
inc
dec
push
sahf
sub
testl
xchg
mov
push
mov
cltd
das
jbe
and
ds
xchg
mov
pop
xchg
insb
dec
out
shlb
incb
test
fistl
dec
mov
jp
and
sti
sub
mov
fistps
xor
mov
push
ja
jnp
sahf
push
cmp
sbb
push
lods
adc
fwait
stos
lods
push
fnstcw
stos
test
cmpsl
jl
pop
mov
orl
out
jbe
insl
bound
adc
push
xor
add
push
or
js
inc
mov
rcrb
jg
xor
sub
dec
int3
push
test
pop
jge
mov
xor
popa
test
mov
lret
pop
jne
imul
jmp
pop
loopne
jb
and
jnp
adc
outsb
sbb
cmpl
mov
repz
mov
subps
cmp
test
stos
or
add
enter
add
pop
add
movb
lea
incb
loop
add
xor
or
jmp
mov
insb
xor
iret
icebp
pop
push
lods
outsb
icebp
mov
lret
sub
mov
test
imul
ljmp
test
push
sub
sbb
arpl
mov
xor
jle
and
xchg
mov
out
popf
aas
popl
jns
push
bndstx
loop
and
stos
outsb
cmp
adc
xorb
sti
in
popa
cmp
xchg
imul
mov
dec
pop
mov
mov
jge
lods
jo
mov
cmpb
jl
xchg
xor
hlt
ret
push
pop
push
test
pushf
pop
adc
ret
adc
mulb
stos
sub
pop
cltd
pop
mov
add
mov
mov
xlat
dec
inc
mov
cmc
imul
push
mov
dec
pop
xor
jo
cli
push
mov
xchg
adc
add
and
inc
push
mov
mov
stos
cmpsb
je
pop
adc
mov
stc
das
shl
ja
jmp
inc
inc
cmp
sbb
cmp
and
shrb
out
jne
out
sbbl
mov
xchg
mov
shr
and
je
push
push
cmp
leave
add
roll
shld
fsubp
pushf
add
xor
rorb
test
jg
xchg
cmpb
fdivs
clc
push
pop
pop
and
push
mov
inc
mov
sub
xor
dec
xchg
test
jg
scas
inc
add
dec
cmp
movsl
jmp
pusha
and
mov
dec
sti
mov
cwtl
cmpsl
or
stc
xchg
out
mov
in
jne
cwtl
jle
push
rolb
fisttpl
gs
inc
push
sub
jno
sbb
in
out
fwait
aaa
pop
inc
lcall
pop
push
fstpt
mov
into
ljmp
lret
fnstsw
lret
icebp
addb
ds
sbb
sub
stos
push
jb
loop
in
mov
loope
and
data16
loopne
shl
and
mov
in
xor
pusha
xchg
je
movsl
scas
dec
sub
fwait
dec
das
cmp
adc
lods
cmp
bound
lods
stc
into
cs
adc
or
lods
arpl
pop
out
movsl
add
push
gs
inc
jg
xchg
frstor
mov
or
pop
nop
daa
push
movsb
cli
sub
div
xor
xchg
fbld
xchg
cmp
gs
stos
jp
in
cmpsl
xchg
mov
lret
fs
fistpll
pop
jp
insl
mov
pop
mov
lds
add
or
scas
movsb
push
jp
jmp
movsb
mov
je
call
push
andb
std
cli
out
fstpl
test
add
stos
sbb
ret
lods
ja
inc
mov
sub
js
iret
stos
pop
xchg
mov
push
sbb
mov
xor
or
fdivrs
shlb
test
icebp
mov
and
lahf
imul
adc
mov
add
mov
inc
call
inc
repz
movsl
mov
les
add
fistl
sub
popa
cmp
lahf
lds
add
xchg
and
jne
insl
loope
push
in
daa
sbb
test
mov
addb
adc
sub
jmp
scas
dec
stos
mov
pop
ljmp
sub
mov
cs
and
leave
je
in
mov
jno
fildll
rolb
movsl
clc
adc
loopne
pop
or
inc
mov
cs
dec
inc
test
inc
loope
xchg
jmp
lahf
pop
aaa
call
push
xor
popf
xchg
mov
arpl
data16
testl
lcall
in
inc
lcall
cmpsb
lock
das
aaa
add
mov
sub
out
outsl
fisttps
test
cmovae
pop
rcrb
rcrb
cmp
or
loopne
xor
xlat
leave
push
and
xchg
xchg
mov
pop
push
xchg
mov
adc
cmp
lret
addr16
sbb
jge
jmp
out
mov
sub
in
xchg
ds
push
in
inc
cmp
and
and
pusha
cltd
dec
inc
lods
pop
scas
movsb
int3
or
lods
test
icebp
je
test
sbb
jb
fsubs
cs
xchg
pop
dec
dec
sub
sub
and
es
jbe
aam
add
xchg
ss
add
cli
inc
add
xchg
mov
pop
pop
test
ret
fisubrl
add
cmp
pop
push
mov
mov
sar
and
divb
mov
mov
and
lea
cmpsb
adc
jb
das
std
xchg
adc
das
mov
jo
cmpsl
inc
and
enter
push
jmp
sbb
insl
and
lock
lcall
insb
ss
enter
sub
mov
xor
push
mov
dec
mov
repz
test
stos
data16
pop
stos
sub
cmp
mov
enter
shlb
adcl
sbb
rolb
into
fsubrl
jmp
push
inc
jns
push
push
daa
xor
or
mov
leave
daa
movsl
out
dec
push
xlat
ljmp
cmp
xchg
imul
inc
sbb
bound
popl
adc
ljmp
in
cltd
or
sub
add
push
jp
mov
std
jb
jl
add
mov
repz
fwait
out
cwtl
repnz
fcompl
push
aaa
pop
test
pop
jecxz
test
xchg
idivb
xchg
cmp
stos
pop
mov
repz
mov
push
int
fwait
mov
or
arpl
out
pop
sub
jge
dec
xchg
add
cli
loop
fisubs
jae
add
in
mov
mov
mov
adc
adc
pushf
fstp
push
jno
cmp
int
inc
adc
sahf
add
xor
push
jb
loop
push
xor
xlat
add
cltd
popf
mov
push
popa
aad
add
or
sbb
outsl
mov
mov
dec
repnz
jno
mov
mov
and
adc
or
fcmovnbe
popa
bnd
clc
out
call
xorb
pop
push
cwtl
jecxz
jnp
pop
lods
xor
pop
mov
pop
bound
jo
cltd
dec
pop
or
scas
pop
in
jo
adc
into
cmpsl
nop
jle
fwait
outsl
jae
push
add
or
and
mov
or
sbb
xchg
push
test
data16
jle
jmp
lcall
xchg
mov
xlat
stos
test
mov
pop
xor
dec
lods
mov
pusha
inc
cmpsb
imul
jae
lret
testl
lret
adc
inc
gs
nop
and
mov
out
adc
xchg
xor
xchg
cmpl
push
int
lcall
xchg
shrl
cmp
bound
sbb
push
mov
sub
push
push
mov
in
add
dec
rclb
mov
mov
push
lods
cmp
into
adcb
push
pop
add
mov
sub
xor
int3
adc
imul
das
outsl
jmp
push
fldl
loop
nop
pop
lods
enter
mov
inc
dec
pop
ret
nop
sbb
outsb
cmp
mov
xchg
mov
push
jg
mov
jno
movsb
lahf
jmp
jp
jg
mov
adc
add
cmp
fadd
mov
xor
fwait
out
enter
adc
sbb
mov
xchg
lret
add
lods
sahf
dec
mov
sub
push
cmp
jne
mov
js
sub
out
cmp
xorl
push
std
cld
out
xor
inc
adc
mov
imul
mov
mov
outsb
add
loop
ret
and
jb
fstpl
inc
loop
adc
push
pop
sbb
cmp
dec
test
or
jb
mov
mov
rcll
lcall
mov
xchg
xchg
cs
ret
jb
sbb
or
jb
insb
dec
cmp
inc
mov
pop
mov
inc
ret
or
cmpsb
roll
jnp
addr16
push
fmuls
mov
adc
adc
mov
leave
dec
sub
jns
aas
fwait
sub
sub
or
push
fmuls
lret
xor
mov
dec
push
or
push
pushf
mov
inc
scas
xchg
ljmp
or
imul
mov
stos
jge
mov
mov
adc
into
mov
push
test
popf
mov
repnz
push
das
mov
pop
mov
lret
xchg
adc
add
mov
mov
addb
cmp
push
xchg
dec
outsl
mov
aad
mov
xchg
xchg
xchg
mov
pop
xor
jo
xorb
pop
aam
pop
jb
mov
cmpsb
les
sub
leave
negl
pop
sub
pop
outsl
pop
scas
mov
cli
aad
mov
cmpsb
iret
test
or
les
orb
scas
add
sub
sub
int3
inc
cmc
dec
push
xlat
push
push
int
lock
mov
mov
shrb
arpl
icebp
mov
push
sbb
popf
adc
lahf
cmp
es
pop
push
xchg
add
adc
imul
cmp
mov
push
inc
and
xor
xchg
xchg
lret
popf
xor
inc
sbb
leave
add
cmp
push
nop
shl
mull
lods
in
sbb
push
inc
ljmp
lahf
cmp
sub
ret
lods
and
cmpsl
popf
jbe
jp
fldl
mov
pushf
sbb
clc
test
enter
jecxz
cmp
pop
push
push
sub
adc
sahf
add
cmp
or
mov
sbb
insb
sub
insb
push
xchg
int
or
js
divl
fimuls
fs
push
push
inc
jne
out
test
cmc
mov
jecxz
pop
cmp
ret
mov
movsb
pop
mov
cli
pushf
mov
repnz
jge
mov
jg
mov
icebp
or
fcoms
push
add
push
aam
jmp
cmpl
adc
mov
sti
into
push
jg
ret
bound
stc
es
ret
mov
sbb
bound
loope
mov
mov
in
mov
pop
negb
sub
mov
fcmovnb
mov
loop
ljmp
and
push
enter
rcrb
repnz
or
cs
lret
rcll
ret
mov
xor
loope
test
cltd
mov
arpl
push
mov
and
mov
jo,pt
cmp
rorb
jnp
jno
ljmp
adc
test
adc
inc
pinsrw
sbb
jne
xchg
xor
in
out
pop
xchg
call
xor
mov
and
add
movsl
and
pushf
mov
and
nop/reserved
cltd
jnp
sahf
cmc
xlat
dec
xchg
pop
xchg
xor
adc
pop
push
in
adc
data16
mov
aad
xor
jle
mov
add
xchg
jae
pop
gs
les
dec
jle
out
dec
lods
adc
pop
das
and
shll
xchg
fsubs
pusha
xchg
mov
pushf
add
sbb
push
and
mov
inc
mov
push
sub
pop
jl
dec
xor
dec
std
in
les
jge
xchg
aam
aad
fsubp
fstp
pop
push
insb
insl
and
sahf
jle,pt
sub
movsl
icebp
fiadds
gs
adc
lods
cltd
mov
stos
sub
inc
cmc
loopne
int3
test
decl
jnp
add
push
into
movb
cmp
or
sbb
sahf
pop
rol
xor
mov
push
mov
jmp
mov
lahf
sub
testl
add
loopne
mov
std
mov
sbb
jae
movsl
mov
divb
aaa
jmp
cwtl
xchg
xor
xchg
jp
popf
adc
and
adc
data16
push
stos
dec
test
loopne
sub
lods
js
dec
lcall
pop
mov
push
fstps
enter
sti
stc
in
or
fcoms
out
xor
sbb
test
js
inc
xor
rorl
add
jb
shlb
cmpsb
cmpsl
pop
mov
rolb
xchg
dec
bound
sbb
rorl
rep
jo
xor
imul
mov
cltd
xchg
popf
lds
scas
jae
sub
jmp
sub
movsl
xchg
and
push
jne
cli
and
dec
adcl
xchg
mov
fisubrl
pop
out
push
insl
mov
adcl
jecxz
mov
xchg
or
mov
fsubrs
sbb
nop
cmp
sahf
test
lahf
inc
outsl
cs
aas
loope
mov
adc
dec
add
xor
push
dec
bswap
xor
dec
xchg
daa
xor
cmc
add
fucomi
cmp
add
decl
adc
fcompl
mov
xchg
dec
inc
dec
sbbb
push
push
mov
xchg
lret
mov
add
pop
cmp
jl
jns
and
pushf
mov
mov
pop
mov
movsb
pop
cwtl
negb
orl
pop
movsl
jo
mov
mov
fcomps
inc
or
cld
xchg
mov
jns
insl
fwait
cmpsb
adc
xchg
add
fs
pop
jecxz
lds
mov
cmp
in
adc
stos
movsl
sub
dec
push
xchg
lahf
mov
dec
push
add
xchg
xchg
xchg
inc
adc
test
inc
pop
jnp
cmpsb
xor
imulb
inc
jns
xchg
imul
fucomp
sbb
push
sub
shl
xor
jle
mov
mov
fcmovne
mov
xlat
aaa
or
sub
xchg
sub
jmp
jb
insl
and
pushf
popf
xlat
fstpt
test
cmp
pushf
aam
js
xchg
cltd
jle
pop
jae
sub
xchg
push
nop
iret
insb
push
sbb
jb
push
pop
pop
sbb
xor
imull
loope
scas
xor
gs
pop
stos
xchg
outsl
jg
call
mov
push
push
jecxz
mov
sub
fs
sarl
mov
jl
scas
mov
pop
xchg
in
pop
push
xchg
xor
adc
call
jns
repz
inc
add
mov
jb
testl
fldenv
jbe
pop
movsl
movsb
xlat
push
xchg
jb
clc
fldl
fnstsw
xor
xchg
mov
imul
pushf
sbb
mov
inc
pushf
push
shl
aas
dec
in
dec
std
add
pop
jge
and
push
push
push
inc
xchg
sbbl
stc
rcr
pop
into
push
xor
cld
cmpsb
in
cmp
xchg
pop
sbb
lcall
xor
cmp
movsb
mov
mov
push
add
movsb
int3
sub
leave
movsb
sbb
mov
shl
repz
loop
and
jno
cmc
mov
notl
add
jbe
loop
xchg
cmp
out
sarb
addl
fiaddl
push
jge
and
sub
fwait
fs
sub
jle
outsb
pop
shlb
lea
pop
fidivrs
dec
call
jmp
notb
stos
inc
rcrl
popl
insl
push
pop
push
jns
cltd
das
ret
adc
inc
pop
out
cmpsl
flds
ljmp
ljmp
and
and
sub
rorb
adc
cmp
inc
shll
dec
sbb
and
mov
js
addr16
mov
sarl
xor
rcl
mov
mov
lods
in
or
dec
and
and
stos
cmp
popa
sti
lock
cwtl
in
dec
push
xchg
xchg
jge
xor
in
data16
lods
sbb
pop
pop
xchg
shr
pop
mov
mov
pop
xor
std
icebp
sub
pop
push
push
lds
enter
and
cmp
mov
mov
jge
pushf
mov
add
pop
pop
mov
out
mov
fcoms
out
or
arpl
sbb
push
mov
dec
pusha
testb
adc
mov
pop
mov
or
in
sbb
cmpsb
mov
fisubs
or
shrb
imul
sbb
sti
sub
xor
nop
es
bound
push
cmpsl
pop
pop
and
jo
fadds
cmp
outsl
ss
icebp
xor
lret
pop
push
pushf
andl
icebp
sub
dec
pusha
jnp
ret
scas
push
or
pushl
mov
imul
xchg
xor
test
mov
cmpsb
mov
cli
sub
dec
shll
stos
ja
lods
dec
xchg
push
rorb
adc
xchg
jg
stc
int
clc
cli
jbe
iret
pop
mov
add
sbb
fstpt
pop
inc
rorl
xchg
xor
inc
or
fimuls
int3
fdivl
jne
push
dec
pop
push
dec
ss
jno
push
int3
inc
mov
scas
pop
xchg
cli
leave
fstps
cs
xchg
fucomi
dec
out
inc
push
out
push
mov
rorl
sarb
aaa
jmp
mov
xchg
outsl
dec
jns
sub
mov
sub
sarl
mov
cltd
push
or
push
mov
cltd
xor
push
aad
push
jl
das
subb
sbb
sub
xchg
sbb
icebp
pop
lcall
add
or
cmp
or
movsb
add
nop
and
jecxz
mov
popa
imul
push
dec
adc
sub
jb
push
in
test
in
lock
scas
adc
dec
xlat
dec
sbb
fiadds
pusha
cli
fbld
addr16
adc
dec
jnp
outsl
fmuls
aam
add
mov
cmp
lcall
mov
sahf
xchg
xor
mov
pop
xchg
xchg
mov
call
es
cmp
jle
sarb
push
vphaddbq
mov
enter
test
fdivs
stos
pusha
cli
leave
mov
sub
sbb
push
mov
test
push
mov
std
outsl
and
and
jl
fnstsw
mov
sub
pop
insl
jecxz
movsl
push
push
push
push
fiadds
fninit
les
out
adc
enter
jg
adc
test
xchg
call
lcall
iret
das
mov
psubq
sbb
outsl
xlat
jne
ficompl
aas
jmp
stos
insb
push
into
std
je
xchg
hlt
xor
lea
leave
push
cltd
xor
dec
mov
loopne
lret
mov
test
lahf
nop
or
add
adc
cmp
dec
dec
rolb
rol
pop
add
adc
jmp
lds
loop
pop
xor
outsb
int3
scas
xorb
pusha
jmp
jbe
dec
clc
fldenv
xchg
push
cltd
lahf
xchg
inc
notl
jmp
sbb
int3
imulb
enter
shlb
insl
jge
and
xchg
xor
repnz
les
xor
int
sbb
mov
mov
xchg
pop
mov
call
aam
das
and
and
fiadds
xchg
ljmp
xchg
adc
adcb
data16
stos
lret
nop
jmp
sub
repz
xchg
cmp
in
sarl
cmc
mov
fistl
clc
fidivl
insb
ljmp
dec
cld
sbb
shlb
sub
add
jge
xor
inc
rcrl
xor
daa
add
inc
arpl
push
sub
in
popf
cmc
daa
sbb
mov
inc
cmc
sbb
adc
mov
imul
cld
enter
sbb
call
push
cmp
bound
inc
add
push
ja
mov
mov
and
mov
and
xor
daa
jp
in
ficomps
mov
sar
xchg
mov
xchg
add
dec
and
cltd
inc
inc
push
repnz
jmp
stos
mov
test
xor
jg
scas
adc
push
cmp
adc
daa
out
jnp
stc
in
iret
clc
insb
inc
fcom
mov
xor
lret
mov
jg
dec
test
push
fbstp
pop
xchg
push
sar
sub
pop
dec
stos
mov
sub
or
add
xchg
rol
mov
inc
pop
xchg
mov
mov
rol
push
cmp
dec
push
outsb
inc
sbb
sub
int3
mov
ficomps
aas
jb
jecxz
lahf
sub
cmp
dec
sub
ficomps
fs
in
test
lds
mov
jnp
pop
movsb
ss
fistps
push
push
xlat
pushf
xchg
xchg
push
lahf
jmp
inc
arpl
dec
in
jl
ds
sbb
or
les
movsl
and
into
out
leave
pop
icebp
sub
enter
int
pop
into
pop
sarl
es
or
sub
addl
sbb
mov
in
mov
sarb
fisubrs
scas
fisubrs
pop
cs
ljmp
xchg
data16
inc
into
or
mov
cmp
dec
mov
sub
fs
push
or
adc
jmp
lock
pop
add
sbbb
and
sahf
dec
cmp
outsl
orb
jb
scas
jp
loop
and
sti
cmpsl
int
jmp
andl
lods
mul
pop
lret
xor
inc
fimull
test
aad
mov
or
in
repnz
stos
divl
fbstp
stos
ficomps
into
dec
pop
xor
and
sbb
add
and
arpl
push
dec
dec
jmp
pushf
adc
pushf
rolb
mov
stos
imul
imul
pusha
and
and
stos
push
pushf
xchg
xorl
out
lret
mov
push
jecxz
fldl
ret
cmp
fsincos
fnsave
fbstp
sbb
frstor
movsb
or
sub
dec
ds
popl
dec
push
sbb
xchg
cmp
ja
enter
es
dec
jl
stc
add
ret
pop
jb
jg
push
jo
push
sbb
cmp
and
stos
jae
enter
cmpsl
pop
cmpsl
sahf
or
lahf
mov
fstpt
fwait
dec
ds
inc
lret
icebp
lock
jmp
add
data16
sub
pop
jne
sub
imul
jp
loopne
or
mov
xchg
xchg
sub
add
or
pop
adc
push
das
dec
imul
out
repz
adc
sub
out
pop
cmp
repnz
stos
in
dec
les
jmp
xor
lock
daa
add
imulb
popa
mov
mov
incl
lahf
and
cwtl
or
rclb
aam
pusha
js
sub
jecxz
mov
dec
aad
or
push
add
test
in
inc
packuswb
gs
jno
scas
aad
xchg
std
mov
sahf
inc
scas
shll
orl
fs
pop
mov
adc
or
or
aad
xchg
pop
adc
sub
and
sub
add
leave
test
scas
inc
inc
jge
stos
leave
idivb
xchg
lcall
push
mov
dec
outsb
ret
scas
push
mov
push
inc
subl
jge
fisubrs
hlt
cmp
cld
sbb
lahf
jg
ds
int3
addr16
jno
push
push
rcl
gs
scas
aad
movsl
lods
push
out
stos
aaa
aaa
aas
lret
sahf
shrl
in
jnp
jb
mov
mov
push
dec
sbb
out
and
ficoms
movsb
pop
or
repz
pop
insb
mov
arpl
enter
xor
outsb
pop
dec
fistps
cmpl
inc
mov
bound
xor
adc
cmc
addl
shlb
in
jae
adc
fs
je
loopne
mov
flds
insb
sbb
xor
jp
insb
nop
jnp
ror
inc
adcl
mov
imul
in
jbe
push
pop
or
lods
outsl
shr
dec
and
xor
push
sub
adc
mov
or
ret
lds
or
inc
movsb
pop
sbbb
jno
and
xchg
pop
pop
push
or
push
cmp
lret
out
dec
sub
aad
inc
sub
xor
pop
jp
test
xchg
fwait
popf
scas
adc
and
push
loop
and
jnp
sarb
mov
add
inc
adc
push
mov
and
push
test
mov
inc
in
icebp
cltd
leave
xchg
fldenv
stos
ret
test
dec
les
and
xor
add
cmp
ds
popa
or
mov
or
push
call
pop
mov
xor
jb
in
out
cmp
fwait
mov
and
int
mov
sub
mov
jnp
mov
add
jp
push
fnstcw
clc
call
jl
xor
loop
pop
pop
mov
outsl
lock
lock
jne
cmc
xchg
stc
cmc
pop
sbb
push
mov
cmpsb
pop
scas
or
adc
push
ret
jbe
fwait
scas
ljmp
popf
gs
mov
xor
sbbl
add
outsb
das
jne
xchg
lahf
sub
or
ficoml
mov
imul
outsb
mov
jno
fcmovb
xchg
mov
cld
jle
ja
mov
mov
pop
ja
or
or
scas
xchg
push
mov
push
int3
repz
jl
cmpsl
cmp
mov
sbb
pop
pop
lret
sbbb
dec
xchg
popf
cmc
mov
popf
add
fs
inc
gs
mov
lds
or
adc
cwtl
cli
aad
push
loope
jo
add
out
in
in
addr16
fcmovnb
inc
js
adcb
inc
adc
mov
add
pop
xchg
push
xor
or
push
pop
stos
repnz
adc
sarb
pop
dec
stos
in
arpl
mov
sarb
call
enter
mov
push
out
jae
je
push
nop
mov
pop
popa
mov
and
mov
lahf
cmp
or
mov
std
and
shlb
addb
ljmp
mov
out
and
ja
jno
mov
lds
pop
scas
push
sub
pushf
push
fisttpll
adc
xchg
xchg
test
and
fcmovne
jbe
fwait
jp
adc
imul
notb
xchg
lret
cld
sub
cwtl
mov
notb
dec
add
mov
rcrl
adc
inc
mov
mov
insl
iret
rcll
xchg
xchg
unpcklps
cmp
push
push
mov
int
sti
fsubrs
sbb
fnstsw
in
and
in
in
insb
jge
jo
sbb
inc
cmp
adc
xor
xor
mov
loopne
jp
or
fsubs
rcl
insb
aam
jb
adc
int3
sbb
dec
and
jg
xor
rcr
lahf
fistpll
imul
inc
push
gs
sub
ljmp
jne
ret
or
jl
out
and
imul
push
leave
push
mov
fwait
hlt
mov
and
or
lret
imulb
inc
pop
mov
arpl
imul
push
jno
test
and
mulb
in
inc
inc
fld
jle
in
xchg
sahf
jle
dec
dec
xor
idivb
aam
and
test
dec
popf
dec
xor
cmpsb
cli
or
adc
xor
xor
das
popf
lcall
or
sub
aam
rorb
xchg
xorl
sbb
call
cmp
lods
lock
xchg
js
adc
negb
fidivrs
jnp
lock
xchg
cmp
daa
push
in
adc
add
fidivs
add
and
add
data16
or
imul
aas
cmp
cmp
mov
xor
loope
pop
fwait
rorl
call
aaa
mov
inc
add
fsubs
push
out
cmp
dec
test
loope
in
inc
jns
sahf
push
lods
sub
jae
negb
jne
mov
mov
outsl
cmp
cmpsl
cwtl
push
pop
lods
inc
fcoml
shlb
cmp
cld
arpl
int3
loopne
inc
push
in
adcb
or
cmp
mov
gs
cld
mov
or
popa
cld
scas
cli
mov
pop
aaa
cmp
lret
addr16
lock
int3
sbb
xchg
icebp
addr16
jecxz
jo
int3
jae
cmp
jp
mov
push
imul
int
or
cmp
cmp
cli
dec
and
arpl
cs
out
cmc
jmp
pop
aam
out
shlb
int
icebp
push
and
movsl
in
mov
test
lret
outsw
cs
pop
sbb
mov
mov
cmc
or
inc
cwtl
aaa
stc
je
mov
push
fadd
jl
cmp
leave
push
gs
or
or
and
into
aaa
inc
int3
js
hlt
dec
dec
cltd
xchg
or
push
pop
sub
mov
andl
dec
scas
ja
fistps
or
sti
dec
rorb
add
cmc
popa
jns
and
fwait
cs
cmpsl
movsb
test
push
loopne
sbb
out
fmuls
xchg
cmp
fs
inc
push
mov
mov
adcl
ret
cltd
push
pop
data16
pop
cmp
dec
addr16
cmpb
or
les
fstpl
pop
mov
imul
mov
sbb
in
push
cltd
jns
fstpl
mov
mov
sbb
mov
add
dec
aad
andb
cwtl
loopne
mov
repnz
cmpl
ja
sub
push
xor
cwtl
xchg
sbb
inc
sbb
push
xor
insb
lret
jp
mov
imul
jecxz
and
inc
icebp
jl
scas
fcompl
xchg
push
das
daa
popl
test
in
pop
mov
xor
jp
in
xlat
in
push
mov
nop
cltd
cmc
int3
push
mov
sbb
lret
jg
incl
add
arpl
sub
ret
aam
in
shll
mov
pusha
das
js
jnp
lds
jle
jmp
call
jne
pop
les
pop
imul
dec
push
push
std
xchg
jp
mov
sbb
add
sahf
push
insl
stos
pop
cwtl
pop
cmc
lock
cmp
loope
lea
jecxz
add
pop
jecxz
jnp
filds
push
iret
mov
dec
pop
cmp
call
fadds
add
hlt
fwait
repz
mov
jg
mov
out
cld
jo
jg
lock
andl
sbb
aas
add
sbb
jecxz
and
lds
ds
mov
fmull
mov
mov
xorb
lahf
cmp
cmp
pop
out
push
mov
out
cld
and
insl
add
add
mov
test
adc
inc
xor
in
das
push
hlt
xchg
int
fs
cld
or
push
div
sbb
jbe
in
addr16
repnz
push
sub
fnstcw
ret
dec
dec
cmpsl
lock
out
shl
xchg
popf
andb
loop
xor
addb
mov
xchg
push
xor
and
stc
xor
jecxz
fxch
xchg
insb
add
ljmp
cli
pop
fmull
stc
mov
pushf
inc
and
push
jno
or
sbb
adc
icebp
jno
push
inc
out
cmp
cmp
cmp
and
mov
lea
push
mov
sub
push
rclb
repz
add
outsb
sbb
and
lods
pop
inc
movsl
in
push
mov
fimuls
ss
mov
mov
jnp
pushf
fldln2
es
push
cmp
cld
icebp
out
data16
adc
nop
test
cmp
adc
add
mov
push
cmp
inc
popa
push
adc
xchg
jg
faddl
inc
pop
dec
cmp
flds
imul
lea
cmc
push
xor
sub
sub
icebp
push
outsb
jl
pop
push
jl
int3
in
add
cmp
cld
xchg
jp
push
jns
fwait
push
jb
sahf
or
in
jg
popf
pop
pop
push
push
sbb
or
sub
mov
mov
icebp
add
sbb
pmullw
push
test
sub
aad
jb
test
inc
lds
sub
aas
xor
dec
cli
jo
rorb
inc
aad
mov
and
xchg
pop
out
lock
lret
xchg
add
stos
adc
cmpsl
cmc
pop
jno
enter
es
add
test
dec
pusha
cmp
sbb
cmp
nop
cmp
push
jp
xor
cmpsb
xchg
daa
in
imul
sbb
fbld
adc
aad
sub
shlb
fcoms
sarl
aas
hlt
movsb
push
nop
inc
or
jnp
aad
outsb
inc
cmpsl
mov
cmpsl
mov
stos
or
pop
mov
fimuls
cwtl
pop
push
out
inc
mov
sti
or
pop
pop
xchg
sub
push
mov
stos
mov
xor
ret
adc
cmc
cmp
imul
insl
shll
stos
icebp
gs
ret
fmuls
or
sbb
lret
mov
push
jne
out
cs
repnz
cmp
push
jnp
es
inc
call
insl
bnd
call
jmp
pop
movsb
sub
dec
fsubl
inc
loopne
jl
push
mov
jbe
sbb
rcl
push
je
xor
lret
shrb
std
loop
dec
mov
pop
sub
add
pop
inc
rolb
insb
fs
cmp
cmpb
cmp
or
cltd
pop
xchg
fdivrl
insb
aaa
es
push
mov
ds
jp
aas
fldl
sub
dec
jle
pop
int3
mov
push
push
outsl
push
xor
into
push
popf
adc
js
out
inc
stos
add
rcll
xchg
pushl
pop
neg
loopne
mov
scas
shll
inc
insl
jns
and
fcoml
lock
sarl
imul
pop
dec
or
rcrl
or
add
sar
outsb
adc
xor
or
nop
mov
movsl
jb
add
push
out
pop
test
mov
xchg
fmull
idivl
imul
sbb
push
pop
aad
or
mov
pop
ds
mov
mov
xchg
inc
in
int3
jns
lret
mov
outsb
rcrb
cmpsb
das
jne
scas
and
in
mov
je
adc
inc
roll
ja
mov
out
lcall
int
repz
add
sub
or
mov
lea
dec
jg
jo
icebp
jge
xchg
cmp
enter
adcl
push
mov
dec
leave
xchg
dec
daa
fwait
repnz
jecxz
iret
lods
rcll
push
xchg
or
shrl
cli
dec
sub
inc
in
dec
mov
aam
cmp
or
aas
sbb
pop
loop
push
dec
cmp
mov
repz
and
ret
inc
lcall
mov
push
stc
inc
pop
dec
repz
hlt
mov
adc
inc
jg
jmp
mov
push
jecxz
dec
mov
pop
sub
jb
dec
call
aad
xor
les
push
imul
push
mulb
ss
movsl
cltd
jo
mov
sbb
std
mov
mov
mov
pop
xor
popa
dec
xchg
mov
iret
cltd
iret
daa
fwait
sub
ffreep
mov
arpl
push
pop
je
sbb
jp
sbb
xor
sahf
jge
lahf
cmp
pop
scas
ret
sub
mov
outsl
or
mov
subps
xorl
call
insb
shrb
push
mov
adc
jp
mov
icebp
enter
jmp
mov
jnp
sbb
jle
jmp
mov
mov
scas
mov
and
lcall
int
xor
mov
cltd
jo
addr16
sub
inc
jecxz
cmc
pop
xor
and
pop
stc
sbb
stc
mov
leave
adc
sub
cli
shrb
addl
jl
pushf
ja
aam
mov
pop
xor
adc
cmp
ret
mov
or
popf
in
loope
cmpl
or
sub
je,pn
daa
data16
adc
aas
js
xchg
push
jae
adc
and
in
jae
scas
lods
lock
repnz
fldcw
enter
out
mov
addl
jl
push
lret
dec
test
mov
hlt
add
dec
pop
insb
mov
aaa
imul
dec
sub
add
xor
and
mov
sar
add
vmovdqu
sub
xchg
mov
insb
xor
or
jp
lock
dec
push
and
jb
pop
push
sbb
mov
mov
rorb
int
ret
cmpsl
fs
push
lcall
xchg
mov
lea
leave
sahf
ljmp
xchg
arpl
ret
mov
aaa
cmp
jle
sub
sub
dec
mov
push
jnp
xchg
push
sub
cli
xor
mov
and
cmp
sbb
addr16
outsb
cwtl
out
push
f2xm1
filds
imul
cmc
dec
lahf
jg
add
ret
mov
mov
sub
jne
cmpsl
test
cld
cmp
addr16
lods
sbb
jl
in
dec
in
inc
test
movl
and
rol
dec
ss
jecxz
and
mov
xor
pop
mov
fnstsw
sti
pusha
into
dec
scas
jnp
cmp
gs
sbb
dec
or
filds
xor
mov
jo
cwtl
push
in
cwtl
aam
pop
xchg
jbe
mov
dec
shrb
mov
or
cwtl
xor
subb
jbe
sbb
jmp
fcmovnbe
push
ret
inc
jp
test
push
or
inc
xor
lods
mov
ror
cmp
in
rolb
imul
dec
cmp
mov
pop
rolb
addr16
adc
mov
add
jmp
in
cltd
ljmp
es
es
pushf
mov
test
shl
inc
and
and
test
mov
lcall
add
popa
lds
mov
jns
and
jno
pushf
mov
mov
lret
inc
sbb
xorb
lock
imul
jns
ret
adcb
pop
push
adc
and
xchg
adc
mov
sub
jno
gs
mov
push
rorb
push
dec
mov
xchg
jmp
fxam
or
jno
add
rclb
pop
scas
les
mov
and
aam
push
push
push
mov
lods
sub
dec
bound
data16
sbb
sti
push
sub
pop
test
jb
add
std
sbb
stos
cs
dec
je
sub
xlat
adc
shlb
push
out
lcall
pusha
xor
mov
aaa
pop
movsl
adc
loope
fdivl
stos
inc
ljmp
andb
std
loopne
inc
mov
jo
movsb
and
push
xchg
notb
xor
adcb
repnz
cmc
cmp
scas
dec
add
mov
dec
push
adc
pop
aas
mull
scas
je
nop
test
lret
int3
xchg
outsl
mov
push
push
cmpsb
test
sbb
add
into
pusha
dec
adc
or
je
pop
push
or
cmpsb
mov
aad
cmp
mov
jge
mov
xor
mov
sbb
fmul
xor
nop
xorl
dec
sub
mov
adc
xor
ds
pcmpgtw
lds
gs
xor
shlb
push
scas
int
stos
mov
sub
xor
adc
adc
add
pop
or
and
add
insl
imul
popa
mov
aaa
or
xchg
mov
je
subb
cmp
jo
nop
test
lret
lea
movsl
add
push
adc
add
fbld
pop
xchg
adc
pop
mov
jl
mov
insl
mov
cmpsb
push
icebp
notl
sahf
enter
insl
sbb
outsl
jae
mov
das
stc
add
iret
adc
xchg
loop
dec
mov
push
push
imul
sub
sbb
sti
repnz
mov
nop
test
enter
clc
scas
jae
or
cmp
jae
popf
xchg
mov
mov
lahf
pop
lods
xor
andl
push
repnz
pop
push
movnti
xlat
test
adc
icebp
lcall
hlt
or
test
das
cmpsb
push
cmp
loop
fsubs
lahf
mov
cli
mov
movsb
mov
dec
jo
pop
stos
sbb
dec
and
sbb
int
fldenv
push
xchg
hlt
jg
test
push
pop
in
gs
mov
loopne
lret
mov
sub
sub
test
ds
xor
push
mov
pop
sbb
inc
int3
insb
and
cmp
dec
enter
dec
test
mov
std
and
and
pop
push
push
and
lea
imul
in
pop
xchg
sti
cmpsb
inc
jns
jnp
jmp
cmpsb
dec
stc
rolb
ljmp
mov
add
sbb
dec
ss
in
inc
popa
or
test
inc
add
sbb
dec
xchg
loopne
push
adc
pop
pop
xor
push
sub
scas
mov
cwtl
mov
fwait
sub
inc
and
xor
fists
loope
hlt
test
mov
adcl
fstps
orl
dec
mov
mov
or
jl
jo
sub
sbb
in
dec
sub
loop
fnstenv
sub
mov
cmc
jg
rol
add
int3
and
jbe
ja
addb
push
insb
mov
aaa
pop
push
loop
fldl
repz
xor
test
sahf
int
cmpl
cs
aas
mov
cmp
imul
fdivrp
jbe
sbb
cltd
fcmovnu
lock
pusha
jbe
adc
into
lods
bound
pop
out
adc
leave
dec
cmp
xor
sub
sub
push
sub
jmp
add
jg
scas
mov
hlt
sbb
pop
aas
ss
jl
add
adc
dec
mov
jb
inc
int3
stos
push
xchg
outsl
push
repnz
imulb
ret
clc
cld
jbe
pusha
int
je
push
pop
push
enter
dec
or
pop
and
add
xchg
shr
pusha
mov
ljmp
out
loopne
movsl
push
jb
push
jp
es
add
jnp
lods
dec
mul
aam
bound
or
mov
fdivrp
out
cli
addb
data16
dec
mov
or
pop
mov
daa
jno
scas
xor
xor
xchg
dec
icebp
mov
mov
inc
jno
ds
inc
xor
fnstenv
int
imul
jb,pn
push
out
or
adc
es
idivl
or
outsl
pop
into
push
or
jg
stc
sbb
push
aaa
jl
push
sbb
and
xchg
fs
push
idivl
mov
push
scas
jmp
movsb
mov
out
push
arpl
lcall
cmp
popf
push
fsubp
lds
cmpsb
outsl
rcrl
and
jmp
in
icebp
test
jno
adc
dec
cmp
out
cwtl
xchg
andl
sub
sahf
int3
pop
popf
mov
test
jmp
pusha
mov
leave
sbb
test
or
in
rclb
jo
in
fwait
mov
and
jecxz
jmp
push
mov
out
mov
fbld
push
adc
fldenv
ret
inc
push
out
sbb
push
jb
jp
pop
in
fsubrs
inc
out
push
mov
ret
pop
fbld
dec
or
ds
xor
sub
iret
xor
je
ljmp
sarl
movsl
pop
xchg
jns
xorb
adc
cmc
cmp
pusha
cmp
imul
cmp
hlt
mov
jne
add
in
out
jb
gs
add
sbb
add
jns
mov
subb
in
mov
ret
inc
out
dec
dec
push
out
jne
pop
add
lahf
iret
or
mov
js
rorb
push
outsb
adc
mov
cwtl
jmp
and
mov
pop
aam
out
or
cs
adc
sahf
jge
jns
xor
in
ja
loop
scas
loopne
clc
outsb
cmp
jge
outsb
sub
inc
jmp
or
scas
pop
push
pop
push
out
ljmp
daa
mov
fwait
cmp
mov
pcmpeqb
sub
jo
mov
and
lea
mov
and
shlb
hlt
rcr
xor
cmp
cmpsb
fwait
test
andl
jge
jbe
sbb
sbbl
lcall
pop
xchg
mov
xor
in
imul
arpl
mov
cmp
xchg
test
pop
mov
pop
sti
les
add
adc
sbb
fdivrl
fs
cmp
add
stc
dec
pop
mov
add
test
xchg
into
pop
mov
dec
pop
mov
xchg
mov
xor
mov
or
cs
dec
push
aaa
cmp
movsb
jnp
sbb
aam
fwait
cld
push
insl
add
xchg
sbb
sub
sti
dec
or
cmp
mov
xchg
inc
xor
cmp
insb
aaa
xchg
xchg
test
cltd
and
mov
jg
nop
lcall
mov
xchg
daa
push
pop
ret
dec
add
pop
xchg
sub
inc
jmp
cwtl
xchg
clc
mov
mov
imul
incb
adc
xchg
cmp
xchg
and
jl
fcomi
out
jo
test
xor
cmpsb
rcll
and
test
inc
sbb
mov
jmp
cmp
push
ss
or
xchg
sbb
jge
in
and
inc
in
and
repnz
loope
push
sub
aaa
add
stos
dec
fcomp
jbe
mov
xchg
sbb
mov
mov
sbb
cli
imull
lcall
jne
jne
sub
int
cmp
xor
fiaddl
cmp
in
icebp
dec
ja
idivl
cmp
xchg
rcll
cwtl
ficoml
or
lret
test
mov
iret
mov
push
std
mov
popa
or
faddl
imul
mull
jecxz
and
ja
sti
test
or
in
sbb
lock
xchg
rolb
jb
mov
iret
push
sbb
jno
hlt
xchg
jecxz
sub
xchg
xchg
cmpsl
jg
xchg
xor
imul
in
das
sub
ds
int
pop
aas
inc
push
mov
pop
popf
int3
inc
add
inc
inc
cmp
fs
cmc
xor
mov
test
mov
jbe
pop
es
mov
add
inc
cmp
negl
sub
add
push
stos
jo
fdivrl
jp
fxtract
ret
push
sbb
ret
fcomps
lcall
sbb
leave
dec
xchg
cmp
inc
ja
adc
dec
jecxz
inc
aad
jmp
cmc
cmpsl
sub
in
pop
cmp
mov
add
test
pop
insb
je
and
out
and
outsl
sub
and
adc
inc
pop
hlt
subl
mov
pop
bound
cli
mov
bnd
xchg
mov
or
pop
subl
out
xchg
pop
xor
leave
add
insb
test
cmpsl
jge
cmpsb
push
xchg
jp
imul
in
sbb
cmpsb
movsb
xchg
sbb
inc
movsl
loopne
loop
mov
mov
pop
aaa
mov
out
cmp
jl
xchg
xorl
and
xchg
sbb
nop
jge
lcall
add
mov
ja
loop
and
inc
xchg
cs
ja
xchg
aaa
cmc
rcl
mov
mov
dec
cmp
aaa
xor
loop
adc
cli
pop
adc
subl
jno
fsub
enter
in
add
mov
outsl
inc
push
test
imul
sub
adc
ficomps
jbe
lcall
inc
inc
aad
pusha
fisubs
fcomps
sub
xchg
sub
jmp
push
daa
clc
dec
cmp
stos
jno
sub
jecxz
fcmovnu
mov
mov
sbb
stc
push
mov
add
push
sar
clc
repz
cwtl
jns
jge
or
pop
stos
imul
fimuls
push
lahf
adc
fsubrs
stos
aas
in
stc
add
cs
stos
or
lock
ja
push
popa
push
or
jge
sahf
pop
movsb
mov
fwait
and
jecxz
sbb
fcoms
push
pop
xchg
xchg
call
or
cmpl
push
cmpsb
push
xchg
orl
jecxz
push
cmp
shlb
cs
divb
lahf
nop
lea
mov
sbb
jo
loop
lahf
xor
rcrl
int
loop
mov
sbb
xor
xchg
in
mov
cmpsl
mov
leave
push
int
cli
outsb
repz
jns
dec
je
data16
iret
cmp
add
imul
mov
repz
sub
int3
outsl
rorl
repnz
ret
sbb
test
xchg
repz
rorl
aad
fs
cltd
stc
out
dec
mov
pop
and
int3
pop
lock
mov
es
mov
push
xor
sti
scas
or
ljmp
mov
jmp
stos
add
push
insl
rorl
inc
fs
xlat
cmp
or
lds
out
cmpl
pop
push
sbb
enter
pushf
add
mov
adc
icebp
sarl
push
cltd
push
or
outsl
mov
jp
fs
mov
cmp
leave
aad
xor
aas
idiv
push
push
out
inc
pop
fsubl
mov
std
dec
mov
mov
mov
sahf
xor
gs
xor
aam
cmp
push
int3
scas
and
dec
outsl
notl
outsb
es
push
mov
repz
bound
pop
scas
mov
data16
xor
call
test
jl
cmp
sub
jb
mov
pop
mov
mov
dec
fxch
add
cmp
loopne
addb
push
or
inc
add
jae
xchg
mov
push
xor
and
xchg
shrl
inc
loop
xchg
mov
mov
jl
dec
mov
out
lcall
jl
adc
dec
popf
dec
mov
pusha
sub
and
jo
mov
fnstcw
icebp
sbb
pop
pusha
inc
cmp
cmpb
data16
sbb
andl
cli
mov
and
mov
insl
sbb
mov
push
loopne
lcall
enter
lods
push
xlat
fimuls
cwtl
stos
in
cmp
push
jge
xor
push
sbb
pop
mov
enter
mov
inc
imul
stos
cmp
in
adc
lea
shlb
outsl
push
mov
cwtl
rol
cmpl
and
push
rclb
inc
xor
sub
jle
out
icebp
mov
or
mov
push
es
ljmp
mov
mov
mov
es
add
les
outsb
pusha
pop
out
cmp
mov
xor
sub
xchg
jmp
cmp
movb
loop
lret
pop
cmp
or
sbb
out
repz
sub
shlb
and
scas
add
push
rol
and
add
sbb
jp
into
pusha
sbb
int
sub
sub
jl
shll
lods
outsl
aad
ret
add
or
push
push
loope
pop
mov
test
test
cmpsl
sbbl
ret
faddl
push
mov
xchg
sub
push
pop
bound
inc
leave
addr16
and
mov
sbb
repnz
jle
frstor
add
inc
sub
mov
call
dec
xchg
pop
decb
hlt
je
rorl
mov
sbb
xor
leave
sub
and
pop
aad
push
push
sub
mov
pop
cmp
shll
inc
and
mov
repz
insb
mov
in
xor
lea
ret
mov
je
cltd
scas
adc
dec
pop
jg
inc
aam
rcl
adc
fcom
in
imul
xchg
xchg
jge
hlt
lfs
mov
jmp
lds
push
gs
bound
fldt
outsl
test
daa
or
pop
sbb
mov
fdiv
and
mov
leave
popa
adc
lods
push
lea
dec
mov
push
jne
adc
loop
push
adc
shufps
sbb
mov
jmp
insb
or
xor
lret
sarb
pop
sahf
jge
xorb
adcb
arpl
pop
sub
inc
push
sub
xchg
xor
int
sbb
les
insb
scas
cmpsl
xchg
sbb
mov
cltd
jns
imul
rcrl
js
movsl
add
xlat
jl
jnp
test
aad
add
sub
add
fstps
mov
hlt
dec
js
loope
jmp
inc
mov
sub
stos
push
sti
call
add
adc
xlat
sub
and
decb
addr16
and
stos
jg
sahf
enter
test
inc
fucomi
dec
data16
sbb
fdiv
negl
mov
mov
lods
and
fisttpl
rcll
aaa
mov
mov
addr16
xor
push
jge
aad
xchg
jp
popa
and
cmc
push
xlat
pop
imul
out
mov
cmpsl
paddusb
push
int3
aas
xor
push
and
xchg
mov
std
fsubrl
jl
cmc
xlat
imul
es
outsb
sti
or
les
push
dec
aad
sarb
les
push
xchg
sbbl
insl
and
adc
sub
adc
mov
pushf
or
add
jno,pt
fwait
movsl
loop
mov
dec
mov
lods
aam
rcl
es
rclb
inc
shlb
in
push
pop
jae
jle
mov
cmpsl
cmp
pop
ljmp
jns
iret
jecxz
test
stc
inc
lcall
mov
imul
fsubrp
xchg
mov
test
loope
mov
mov
mov
mov
push
push
repnz
mov
dec
xor
pop
lds
dec
mov
call
bound
fsubrl
cmp
aas
addr16
add
daa
mov
shl
adc
repnz
mov
pop
test
fisubrl
cld
mov
push
xchg
sbb
mov
nop
jg
sarb
pop
loop
inc
leave
out
xchg
jns
cmpl
push
push
aas
or
cmp
es
xchg
popa
cmpsb
mov
jle
push
sub
insb
outsl
mov
clc
les
and
scas
mov
in
gs
icebp
and
addr16
int
in
mov
sbb
push
loopw
jb
pop
in
mov
out
hlt
into
ds
pop
sub
ljmp
push
pop
bound
je
jmp
es
shll
sub
sbbl
add
sti
sub
mov
cmp
mov
jle
test
xchg
pop
in
out
pop
xchg
scas
xor
jmp
push
and
dec
add
mov
fildl
ja
lahf
pop
ljmp
cmp
aad
push
out
jl
mov
es
pop
psrld
xchg
lock
and
dec
incb
pop
int3
dec
aad
dec
leave
scas
sbb
xchg
lock
loop
jno
dec
dec
ja
fstl
lods
ljmp
pop
cmpsl
mov
es
stc
mov
cmp
lea
roll
ret
ds
cmpsl
movl
loop
lock
loope
dec
cmp
cmc
sbb
mov
test
mov
fistps
shlb
sti
xchg
sbb
sub
jns
push
mov
inc
jl
and
movl
loope
xchg
sbb
push
fs
inc
sbb
mov
xchg
sub
jmp
mov
ret
jge
cmp
js
lret
or
sbb
and
add
jo
xchg
out
push
jle
xchg
jp
jae
mov
filds
jne
sbb
xchg
push
aad
fldl
and
inc
aam
mov
repnz
aam
out
lds
imul
jl
or
mov
stc
roll
adc
movsb
jno
pop
or
aas
or
fistl
sbb
add
pop
test
cmc
add
pop
aas
ja
sub
lods
jns
lahf
mov
test
xchg
xchg
outsl
jb
addl
testl
mov
cltd
and
dec
mov
xchg
shll
lahf
jecxz
movsl
push
push
jno
inc
jle
call
stos
dec
out
rep
mov
mov
cli
push
pop
and
fcomi
test
loope
not
popa
test
ret
fiaddl
xor
adc
ret
lret
rcll
sbb
mov
xor
or
push
aad
pop
fmull
mov
xchg
test
mov
cmc
inc
popf
popf
test
fistps
std
negb
cli
inc
int3
ficoms
adc
ds
cli
and
xchg
icebp
cmpsb
jae
add
jg
jnp
repz
scas
sbb
pop
lret
out
and
test
add
push
test
sub
leave
call
xchg
xor
int3
and
ds
sub
xor
stos
xchg
dec
push
cs
xor
or
push
add
lahf
xchg
xchg
dec
cs
jno
sarl
int
inc
fisubs
fisubl
jne
cmp
sbb
mov
aas
pop
and
lcall
cmpsl
or
daa
adc
outsb
ljmp
popa
jmp
es
xchg
retw
push
outsb
mov
pusha
cltd
clc
sti
jmp
in
stc
push
mov
adc
gs
cmc
adc
mov
ds
mov
jg
js
inc
scas
pop
in
pop
pop
sub
xlat
sbb
addr16
sbbl
cmp
sahf
imulb
insl
das
pop
flds
pop
scas
shlb
mov
fimuls
jle
push
push
js
sahf
into
and
xchg
jne
ret
test
inc
adc
xchg
push
adc
add
add
cwtl
xor
insb
sub
and
movsl
cmp
pop
aaa
pop
push
lret
gs
and
xor
aam
mov
mov
sbb
mov
cmc
nop
jno
xor
fcoms
std
frstor
inc
clc
lahf
lahf
push
xchg
sub
jmp
movsb
leave
pop
jns
std
inc
push
mov
mov
jno
insl
push
cwtl
inc
je
fwait
fwait
xchg
add
cs
pusha
inc
in
ss
fstps
jmp
dec
jp
mov
daa
lds
hlt
loope
push
mov
push
sub
mov
mov
sbb
insb
sbb
inc
dec
sbb
xchg
in
dec
jmp
and
ljmp
and
dec
les
xchg
repz
adc
sahf
cli
pop
mov
sbb
loop
jnp
test
inc
cmp
enter
sub
add
sbb
and
jmp
push
fstpl
into
adc
filds
pop
xor
scas
mov
movsl
into
sbb
pop
rorb
sbb
mov
outsl
dec
lret
sub
aam
popa
mov
imul
mov
test
dec
insb
adc
push
addl
add
outsl
or
or
movsl
xchg
add
mov
mov
mov
xchg
das
sbb
sbb
sbb
imul
outsb
or
push
inc
hlt
add
jg
in
bound
pushf
faddl
outsl
loop
mov
gs
ret
dec
mov
loopnew
movsl
push
pop
jbe
sbb
daa
pop
sbbl
jp
jno
mov
mov
pop
shlb
pop
aad
jle
jno
aaa
mov
fadds
loop
sti
xor
insl
test
inc
and
gs
ret
daa
pop
sti
and
sub
inc
leave
int
daa
in
out
push
out
les
popa
jae
mov
idivb
subb
mov
hlt
mov
aas
jo
jle
imul
cmpl
mov
add
lds
xlat
xchg
sbb
sbb
xlat
mov
or
push
adc
subl
lcall
mov
pop
adc
les
pop
pop
ret
sbb
add
stos
push
mov
mov
mov
enter
loopne
add
out
mov
mov
shlb
pop
fwait
xchg
mov
add
mov
into
repz
lcall
in
cmp
hlt
movsl
fisttpl
fbld
push
ret
pop
jecxz
cs
mov
lret
dec
in
sbb
cmpsl
pop
xlat
sub
mov
sahf
ds
mov
pusha
cmp
xchg
jno
inc
insl
rorl
inc
insl
adc
shl
sub
jo
push
dec
xor
sub
lods
shll
sub
into
jbe
adc
out
push
shrb
mov
jno
clc
outsl
lea
ss
sbb
jnp
ret
xchg
add
jmp
ret
jmp
pop
adc
clc
push
sub
lds
arpl
decl
das
mov
mov
and
pop
insb
cmpb
leave
cli
mov
cltd
push
inc
mov
pop
or
mov
sub
pop
or
pop
sbb
movzwl
adc
aam
sar
cmpsl
push
lahf
mov
imul
rclb
add
mov
xchg
arpl
fs
xchg
test
fistpl
ds
xchg
sub
movsl
xchg
inc
mov
push
sti
push
and
push
stc
push
mov
inc
mov
fdivl
mov
pushf
mov
daa
arpl
icebp
int
adc
inc
jecxz
xor
out
push
hlt
add
or
and
dec
je
cmp
adc
and
js
lods
xchg
push
xlat
sbb
and
pop
push
add
lahf
jmp
xchg
fistl
xchg
loop
outsb
pop
pop
cmc
inc
test
dec
or
xchg
outsb
test
int3
pusha
call
push
dec
mov
jb
cld
insb
imul
or
cwtl
push
push
rol
add
mov
repz
scas
xor
in
mov
mov
dec
or
mov
jl
jg
push
ja
and
repnz
cwtl
out
fwait
lods
movsb
or
inc
mov
push
and
adc
mov
subb
stos
jb
push
dec
das
or
mov
push
movsl
mov
dec
cltd
in
repnz
mov
pop
hlt
mov
dec
cwtl
out
adc
and
lds
movsb
add
mov
lret
addl
fmuls
jle
dec
sbb
xchg
cmp
repz
jecxz
push
lock
cmp
xor
loopne
sarl
mov
bound
jecxz
push
insl
or
fidivs
in
inc
cmpsl
sub
scas
mov
shrl
adc
cwtl
insb
bnd
cli
xchg
shlb
jbe
inc
jmp
leave
bound
xor
pop
sub
fstpl
std
push
jae
shl
das
sbb
mov
sub
in
pop
bnd
stos
sub
and
pop
add
loopne
mov
push
stos
pop
pop
es
out
mov
pushf
rorb
push
pop
add
fcmovnu
sti
sub
fucomip
sub
fcmovnu
repz
sbb
movsl
ret
loope
mov
je
movsl
imul
in
dec
sti
scas
outsl
ja
mov
lcall
movsl
clc
adc
xor
xlat
cmpsb
sub
sbb
test
and
jg
das
add
ja
pop
cli
push
cmp
lret
stc
push
sbb
loopne
push
repz
ljmp
xorb
mov
jge
mov
stc
adc
add
leave
cld
je
scas
jmp
mov
popa
cmp
fists
sbb
mov
sbb
std
adc
mov
ja
push
push
push
adc
mov
push
jb
mov
xchg
mov
mov
push
cs
add
jg
lcall
int
lret
pusha
xchg
push
cmpb
arpl
mov
lret
jg
mov
aas
mov
stc
cmp
imul
mov
pop
pop
jecxz
push
gs
sbb
lods
lret
pushf
xchg
mov
mov
dec
cmpsl
push
loopne
aam
jne
mov
in
nop
add
in
fnstsw
inc
or
push
mov
ret
fld1
push
xchg
and
out
sub
lods
xchg
jp
imulb
pop
insb
jo
xchg
mov
jg
je
adc
lret
sub
rcr
cmpsb
call
adc
in
ret
cmp
xor
ja
jne
dec
lods
enter
pop
sbb
sub
mov
xchg
incb
int
mov
xchg
xchg
rclb
icebp
mov
sahf
mov
gs
fbstp
push
jb
int3
scas
icebp
inc
push
pop
dec
enter
or
lds
adc
into
xchg
or
push
sti
add
pop
div
push
in
mov
addr16
loope,pt
loope
sbb
iret
xor
add
stc
loopne
repz
push
jb
cmp
mov
jecxz
imul
push
xlat
fildll
jb
lods
int
jge
je
sbb
test
sbb
sbb
gs
into
mov
je
cs
sbb
loop
xchg
out
fsubrl
cmp
mov
nop
test
ret
dec
popf
shlb
enter
inc
in
pop
test
mov
setl
adc
adc
adc
jg
sbb
mov
inc
xor
clc
and
xchg
and
popa
stc
cmp
mov
loopne
add
fcompl
xchg
test
cmp
mov
cmpsb
mov
jb
mov
push
xchg
add
xlat
pop
cmc
mov
push
push
jge
add
arpl
jo
test
pop
jns
sub
jae
cwtl
pop
sti
out
xor
xchg
dec
enter
sbb
xchg
into
hlt
dec
sub
sbb
popa
cwtl
xchg
bound
xchg
sub
sahf
mov
jnp
mov
push
fs
xchg
rolb
cmpsb
mov
pusha
jmp
inc
lods
nop
cmp
pop
dec
inc
ljmp
insb
adc
cld
mov
xor
dec
imul
jbe
adc
stos
int3
mov
or
cmp
testl
mov
cmp
inc
xor
cmp
mov
lcall
xchg
scas
dec
adc
test
orl
add
out
cltd
mov
sbb
adc
sahf
clc
inc
iret
mov
mov
jecxz
inc
or
cmp
xlat
xchg
outsb
or
imul
ljmp
dec
mov
mov
fwait
in
or
outsb
sbb
fisubrl
sar
orl
push
sub
clc
inc
dec
jne
sub
sbb
and
sbb
pop
int3
or
sub
enter
jne
pushf
pop
fdivl
stos
pop
mov
jmp
repz
or
jne
xor
cmp
pop
mov
jmp
testl
inc
xchg
cmp
dec
inc
lahf
pop
sahf
mov
push
rol
mov
je
pop
fildll
sahf
mov
mov
mov
or
movsb
push
sbb
cmpb
sbb
xchg
xlat
cmpsb
in
sti
psrld
ljmp
int
repz
pop
mov
sbb
xchg
adc
lret
popf
lcall
adc
in
dec
les
jg
call
stc
dec
dec
push
insl
out
and
mov
mov
pop
inc
cmp
scas
jg
sub
adcb
jo
cmpsb
jnp
cmp
outsl
orl
push
and
mov
hlt
add
add
and
mov
sahf
cs
stos
lret
sbb
xchg
into
jecxz
mov
lret
adc
push
es
push
inc
daa
int3
push
dec
fsubrs
aam
fwait
outsb
xor
mov
mov
cwtl
ljmp
aas
push
loop
stos
stc
cwtl
mov
imul
xchg
lret
adcl
push
int3
add
push
lods
iret
arpl
inc
decb
movsb
inc
pushf
addr16
xor
push
and
xorb
ja
out
sbb
mov
loope
mov
mov
adcl
call
or
popf
mov
xor
rcrb
test
push
scas
sbb
lea
pop
cmpsl
gs
lods
rcl
subl
gs
adc
jecxz
shrl
xchg
mov
dec
add
jp
sub
mov
mov
psubsw
loope
out
out
push
lret
cmp
loope
sbb
imul
aam
mov
inc
dec
mov
mov
scas
inc
sbb
shll
ja
add
clc
pop
push
in
push
fucomp
pop
sbb
ds
int3
in
loopne
mov
mov
sbb
mov
stc
push
xchg
xchg
or
sbb
cs
loopne
mov
dec
dec
add
cli
pop
repnz
sarb
std
stos
sbb
js
sahf
push
out
leave
cmp
stc
fnstenv
or
mov
jbe
es
outsl
outsl
lods
pop
or
fistl
push
xchg
loop
cmp
mov
popf
push
sub
mov
pushl
clc
pop
les
mov
lods
sub
jb
cli
or
std
dec
lahf
lods
ds
into
or
mov
repnz
mov
je
pop
ljmp
ds
jge
cmp
in
repz
mov
int
imul
ja,pt
test
dec
test
pop
or
sub
daa
mov
iret
pop
inc
ficoml
push
aaa
lret
dec
dec
rolb
and
push
rcr
nop
push
mov
push
push
loop
and
adc
mov
push
aaa
mov
adc
and
lods
pop
out
arpl
lcall
mov
mov
popa
jb
lret
in
dec
sub
mov
outsl
cmp
xchg
xchg
mov
cmp
pop
addr16
fisttpll
mov
repnz
push
fistl
ret
adc
mov
pop
xor
pop
xor
adcl
outsl
nop
pop
stos
aam
rolb
subb
inc
es
mov
xchg
inc
mov
jb
and
add
mov
adc
repz
in
lock
dec
enter
cmp
cmp
pop
mov
inc
aad
in
push
loope
dec
jnp
or
leave
xor
ficomps
lea
fs
xorl
sub
imul
cs
mov
popa
ret
mov
aas
repz
ljmp
shl
loop
icebp
mov
cmp
lcall
pushf
xchg
test
fs
andb
and
orb
dec
ljmp
not
sub
mov
cmpsb
mov
and
push
int3
ljmp
mov
imull
ret
or
dec
fldenv
rcrb
dec
push
andb
stos
das
sub
or
or
data16
rol
stos
cld
push
sub
and
push
dec
dec
cmpsb
rolb
sti
hlt
stos
or
dec
hlt
out
cwtl
add
push
jge
mov
pop
rolb
xchg
inc
xor
outsl
push
xor
scas
movq
pushf
les
sub
fcmovnbe
sbb
jae
jns
mov
inc
test
or
jb
dec
rclb
cmp
dec
cmc
js
ficoml
pop
inc
clc
sbb
rcr
dec
loope
jp
lods
addr16
enter
jmp
and
sti
outsb
sub
cmp
push
es
sub
xchg
scas
xor
movsb
std
in
xchg
icebp
jp,pn
pusha
daa
cmpsl
pop
test
xchg
inc
fcompl
icebp
shll
xor
jecxz
xor
call
sub
loop
sarb
or
add
add
pop
adc
fdivs
shlb
cli
jl
push
and
push
rolb
mov
pushf
add
arpl
pop
xchg
lock
sub
stc
movl
popa
clc
mov
sbb
test
xchg
adc
or
mov
or
and
push
pop
jb
cmc
add
stos
mov
and
pop
xor
and
aas
jge
push
inc
mov
aam
repnz
jne
ret
sbb
xor
movsb
adc
sahf
das
or
stos
lret
xor
orb
icebp
and
and
mov
mov
mov
dec
pop
sbb
out
xchg
aam
jp
popw
push
mov
or
sub
lea
int
push
es
js
pop
cmpsb
fstpl
addl
jne
inc
jnp
mov
jb
lods
cmc
cltd
xor
jnp
mov
imul
outsb
mov
rolb
pushf
add
inc
cmpsl
adc
leave
jg
fwait
xchg
cmp
inc
fbstp
dec
dec
aad
out
push
mov
test
fdivrl
cmp
sbb
mov
mov
mov
hlt
fwait
popl
roll
imul
xchg
lods
ud1
or
sbb
testb
fstpt
add
pop
loop
int
loop
jp
nop
aad
jmp
mov
sarl
jne
enter
lds
mov
ljmp
mov
movsl
mov
sbb
mov
xchg
jb
jno
sub
and
in
push
push
sahf
inc
push
imul
fs
popa
push
andl
xor
mov
jno
and
dec
dec
add
or
sbb
in
data16
pushl
icebp
lock
add
cld
lret
push
xor
daa
js
push
lret
out
push
mov
arpl
ljmp
ljmp
sarl
sub
aaa
fadds
fldl
adc
jmp
les
cmpsl
jae
inc
or
dec
push
push
mov
sbb
push
lods
cmpb
fildl
pop
js
aas
push
movsl
cwtl
add
insl
scas
test
fs
repz
imul
mov
sub
ret
sahf
rcll
mov
in
xchg
cld
adcl
loope
jle
xor
inc
lahf
icebp
inc
lds
add
in
mov
lcall
lock
aam
add
and
xor
mov
into
pop
das
mov
test
clc
js
pop
pop
into
arpl
jp
mov
or
xor
add
pop
into
std
scas
mov
push
xor
daa
rcrl
sahf
xor
shll
lods
das
pop
xor
sahf
xchg
jge
fisttps
push
mov
pop
loope
mov
inc
sbb
in
aas
xorb
xor
outsb
mov
inc
sub
cmp
pushf
daa
cmpsb
leave
add
fistpll
in
inc
sub
outsl
es
dec
mov
dec
cmp
vmwrite
shrb
insl
push
or
mov
sbb
and
jb
les
or
push
pop
xor
es
sti
push
jne
jle
sbbl
cltd
in
fisubl
jecxz
cmpsb
addl
mov
in
adc
outsb
adc
aam
fsubs
fstp
movsb
leave
pop
nop
stos
icebp
fsub
push
pop
movsl
mov
jae
push
pop
pop
push
sub
jno
das
imul
cmpsl
push
mov
imul
rorl
jecxz
lret
mov
lds
int
hlt
sub
loope
xchg
sbb
mov
xchg
xor
stos
imul
mov
jmp
sarl
jg
cltd
test
pop
cmpsl
and
sub
xor
bound
pop
mov
fisttps
cmp
mov
adc
pop
rorl
add
xchg
pop
jge
push
adc
or
push
sub
mov
pop
pop
outsl
dec
loope
mov
add
aad
fldenv
xor
sub
jb
jno
cwtl
les
adc
push
jecxz
push
xor
add
sbb
aam
or
out
push
xchg
lock
fdivs
xchg
or
lds
cld
std
jl
xlat
ret
push
stos
jno
pushf
shr
sub
mov
je
xchg
push
in
fwait
mov
mov
push
push
cmc
jp
pop
pop
insl
adc
fisttps
xor
push
adc
insb
pop
xor
setnp
aam
leave
movsl
inc
xlat
lcall
nop
es
add
xor
dec
dec
int
std
pslld
push
test
push
sbb
pop
push
mov
aas
mov
mov
and
xor
or
pop
jg
or
test
leave
xchg
xorb
scas
sub
jle
adc
add
clc
mov
inc
sbb
dec
data16
popa
dec
sbb
movsl
jae
and
idiv
dec
xchg
mov
pop
jnp
loope
jp
or
js
out
lret
mov
adc
aam
ljmp
xchg
iret
rcr
in
cmp
and
ss
nop
sub
pushw
adc
enter
inc
mov
insb
xchg
popa
and
add
or
clc
sub
inc
sbb
mov
jl
mov
cmpsb
outsl
and
je
dec
mov
inc
loopne
or
and
dec
out
mov
hlt
push
jbe
leave
es
sub
and
xorb
lock
mov
jecxz
std
shl
loop
les
popf
xor
subl
xrelease
jg
push
mov
mov
sbb
add
push
dec
mov
imul
mov
mov
and
adc
jle
dec
out
movsb
jbe
xchg
adc
push
or
mov
push
xor
lds
testl
enter
push
outsl
mov
xor
int3
push
jl
adc
sbb
xor
cmc
in
out
shrl
jl
leave
add
adc
lods
cmp
cmp
mov
mov
or
xor
fnstsw
add
aaa
lea
inc
xchg
dec
dec
mov
add
adc
std
mov
nop
mov
mov
xchg
cmp
add
mov
scas
inc
addr16
or
lock
je
out
loopne
inc
lahf
repz
inc
mov
fwait
js
arpl
dec
pop
icebp
sbb
shl
push
nop
jb
rclb
nop
sarb
and
mov
push
lcall
daa
daa
cmp
vshufps
mov
ds
imul
mov
jae
aas
push
aam
add
sbb
sbb
andl
ret
ret
loope
mov
pop
xchg
cltd
xor
cmp
pop
xchg
loope
js
inc
fsubp
sbb
mov
cmpsl
push
rcr
jge
gs
sub
cli
xor
inc
rorl
cmp
mov
stos
add
add
jmp
mov
dec
scas
ljmp
out
cmp
mov
scas
fidivrl
pop
and
sbb
incl
fstps
pop
sahf
shrb
aad
js
lock
sub
mov
push
pusha
sub
fdivs
jne
fisubrs
and
jle
cmp
repnz
in
fwait
shlb
call
xor
cmc
cli
outsl
xlat
jno
dec
adc
and
xchg
aad
out
cld
call
iret
xchg
xchg
pop
fstl
aaa
sarb
xor
mov
loope
inc
cmp
push
mov
test
daa
aam
push
into
push
rorb
aad
out
dec
mov
fiaddl
fmull
test
and
mov
fnsave
scas
stc
jbe
imul
jb
icebp
ss
push
xchg
dec
cmp
mov
jl
jae
fucomi
sub
scas
out
mov
cmp
out
jg
sub
jle
push
xchg
daa
push
mov
mov
outsb
and
lret
mov
fst
push
adc
lret
pop
cmp
call
mov
mov
sbb
add
sbb
xchg
xchg
inc
and
jae
pop
mov
repz
jb
mov
inc
ljmp
push
out
cmp
mov
lds
in
add
ds
xchg
xor
fstpl
das
dec
mov
fwait
pop
add
xor
sbbl
imul
movsl
inc
lods
les
lret
push
leave
js
stc
into
mov
addr16
jmp
shl
ljmp
loopne
cmc
xor
xchg
jmp
subl
xor
mov
mov
stc
xor
lods
out
cmp
xor
add
jl
cltd
aas
mov
aad
mov
xlat
inc
xchg
arpl
subl
mov
mov
addb
test
pop
and
inc
push
mov
clc
mov
mov
fsubl
mov
mov
out
cmpsb
adc
jl
insl
mov
mulb
or
xchg
fmull
in
cmc
std
in
cmp
sub
shlb
aad
lret
lahf
scas
sbb
mov
cltd
pop
push
test
jb
lods
jge
sub
xor
mov
decl
mov
rcr
imul
iret
cli
cmp
or
hlt
sub
jl
call
xor
adcb
pop
daa
movsb
mov
push
fcompl
jmp
add
sub
into
xchg
sarb
mov
jg
ss
jmp
das
xchg
jnp
xchg
sbb
in
call
mov
loopne
add
ret
xchg
lods
movsb
mov
mov
push
xor
xchg
jnp
inc
negb
call
cwtl
movsl
shrb
in
leave
push
xchg
repnz
js
hlt
dec
push
ds
mov
in
loopne,pn
cmp
cvtps2pi
imul
mov
xor
add
jl
jno
out
jne
sub
sub
insl
dec
inc
xchg
cmpsb
pop
in
ror
inc
push
xchg
mov
or
push
xchg
adc
push
aaa
nop
or
pop
idivl
out
xor
ret
nop
jnp
int3
pop
xor
cmp
jo
cmpsb
fnstcw
fwait
jo
xchg
jb
fldl
sbb
scas
dec
js
sub
jmp
addr16
icebp
cmovne
mov
mov
mov
aad
cltd
jle
cs
xor
jmp
dec
fwait
jns,pn
inc
adc
push
inc
mov
add
out
jne
insl
nop
cld
test
pop
ss
jmp
orb
adc
jb
mov
cltd
adc
push
mov
lret
sub
pmuludq
mov
int3
shll
add
mov
cmp
rorl
lods
xlat
sbb
xchg
les
mov
lahf
nop
cli
inc
cmp
mov
mov
fsts
fisttps
mov
push
test
call
dec
movsl
xchg
mov
mov
pop
ljmp
test
outsb
and
pop
push
xchg
daa
pop
mov
int3
std
pop
jecxz
add
lcall
mov
in
xor
jp
aas
sbb
xchg
ficompl
lods
int3
sahf
mov
pop
jp
fdivl
cli
fimuls
ficompl
and
cmp
les
div
mov
jno
xor
pop
in
cwtl
sbb
push
adc
hlt
fadd
mov
cwtl
jg
lcall
adc
les
adc
stc
sbb
into
out
sub
add
lea
imul
push
lahf
inc
jbe
cltd
jge
inc
test
loopne
fldenv
lcall
dec
and
loopne
hlt
and
mov
js
pop
mov
fwait
add
pop
loope
mov
cltd
enter
sbb
lret
aad
testb
ljmp
jbe
xchg
and
rclb
jno
jns
out
stos
xor
add
rclb
aad
xchg
pop
lock
jb
inc
repz
imul
or
push
loope
adc
arpl
or
sarl
inc
outsl
fwait
jns
addr16
int
decb
sarl
mov
xchg
daa
pop
cmp
adc
rorl
sub
xchg
cmc
in
sub
test
pop
pop
cs
clc
or
push
mov
fldl
mov
pop
adc
pop
loopne
ds
xchg
addl
stos
jge
xchg
and
or
das
xor
fwait
cmp
std
mov
sbb
rcl
push
into
inc
cltd
cmc
xor
dec
aad
jle
repnz
mov
cmp
mov
out
ret
and
mov
lret
pop
jns
add
sub
ficoml
push
pop
inc
mov
cmpsl
clc
or
adc
push
lcall
ret
popf
int
mov
mov
test
stc
xchg
pop
adc
xor
fistpll
mov
es
xchg
lock
jnp
sub
imul
mov
dec
jmp
jno
mov
and
rorl
decb
xor
aas
sub
mov
jp
stos
adcl
outsb
fsubrl
inc
mov
push
mov
xchg
dec
enter
dec
jb
add
adc
insb
mov
pop
mov
xor
xchg
subl
out
mov
test
mov
cltd
stos
repz
pushf
mov
ret
pop
mov
sahf
sbb
pop
in
cmp
sub
mov
movsb
das
lods
push
leave
in
mov
sbb
push
push
dec
dec
sbb
sub
loopne
jmp
add
sarb
xchg
test
pop
repnz
push
fcmovnbe
jns
add
frstor
popf
jb
push
enter
sub
mov
push
pop
adc
mov
inc
lret
push
mov
mov
jae
sub
add
notb
xchg
push
inc
pop
inc
push
dec
dec
mov
cmp
xor
in
lods
js
dec
push
mov
add
lahf
repz
add
jmp
leave
out
scas
adc
xlat
push
push
xchg
jb
mov
inc
leave
arpl
pop
inc
roll
dec
dec
inc
and
icebp
jbe
sbb
aas
xchg
out
dec
cmp
dec
in
cld
mov
int3
mov
adc
push
jmp
dec
lea
stos
or
dec
loope
dec
push
push
dec
fmul
and
sbb
repz
fdivs
ljmp
push
or
lods
jnp
in
mov
in
push
jno
adc
clc
lods
dec
cltd
test
hlt
sbbb
fdivr
or
push
add
sub
lea
movsl
filds
mov
in
lock
cmp
xor
jl
pop
inc
outsl
imul
and
xchg
xchg
aad
lcall
and
inc
dec
mov
outsb
insb
dec
xor
lods
fdivrp
pushf
mov
mov
iret
addr16
jae
sub
arpl
in
and
push
aam
stos
fsubs
das
cmp
imul
sti
fwait
xchg
cmp
push
das
xchg
in
lock
mov
mull
cwtl
ds
out
pusha
jmp
xorb
xchg
lock
dec
inc
inc
scas
and
add
cmpl
paddsb
jb
fcomp
push
mov
lret
cmp
mov
cmc
add
sub
jnp
imul
mov
sbb
fucomip
jecxz
sti
sbbl
into
sbb
dec
gs
and
or
adc
repnz
je
push
repnz
jo
sub
enter
inc
pop
mov
repz
je
hlt
fdivl
sbb
push
in
cltd
rcrl
cmp
cmp
xor
or
pop
and
icebp
or
inc
rcll
mov
data16
push
stos
inc
aam
jecxz
push
mov
xchg
and
mov
cmc
mov
or
jmp
sub
outsb
dec
adc
lock
int
ret
xor
mov
fidivrl
or
scas
pushf
outsb
xchg
jg
sub
pusha
ljmp
adc
outsl
lock
xchg
movsb
outsb
in
mov
mov
xchg
int3
cmp
pop
shlb
in
lods
lahf
sub
outsb
sub
push
mov
dec
sbb
push
out
pop
data16
cwtl
cltd
inc
inc
imul
iret
pushf
lea
or
lods
outsl
mov
pushf
lods
adc
pop
sbb
sbb
xchg
mov
pusha
fwait
jb
rclb
cwtl
add
dec
sahf
cmp
sub
std
xor
enter
ret
std
adc
mov
pushf
jmp
push
sub
stos
pop
lret
fistl
jmp
adc
aam
mov
xchg
icebp
or
cmp
sub
repz
jl
vxorps
pop
cli
loopne
rcrb
pop
shll
jge
addr16
in
push
sarb
pop
xor
push
test
cltd
lcall
cmp
sub
aaa
xor
movsb
mov
mov
cltd
iret
int3
push
movsb
cmp
stos
cld
cmp
out
movsl
enter
mov
sub
inc
scas
mov
mov
sub
lods
jne
outsl
or
pop
xlat
pushf
or
icebp
int3
setp
jmp
or
lret
xor
sbb
push
jge
popa
ret
lods
aam
in
mov
jge
mov
mov
cli
insb
pop
in
fsubrp
ljmp
pop
add
inc
xchg
dec
fs
push
inc
pop
das
loopnew
push
inc
xor
mov
inc
lods
in
sbb
push
insl
push
or
pop
push
mov
or
pop
jbe
or
insb
xchg
iret
lock
testb
inc
adc
pushl
shlb
inc
inc
mov
xchg
std
xchg
repnz
add
ljmp
cmpl
xchg
sub
lcall
repnz
xor
push
inc
ja
sub
inc
pop
test
jle
loopne
daa
mov
clc
jmp
sbb
leave
loopne
in
or
mov
mov
xor
clc
js
ret
jmp
push
push
es
lret
add
and
cmp
nop
fs
gs
xchg
repnz
out
ret
out
mov
loopne
or
push
out
call
mov
into
adc
popa
push
sbb
pop
mov
ljmp
outsb
test
lods
pop
or
mov
outsb
mov
hlt
popf
je
cmp
cmpsl
xchg
mov
ret
inc
adc
jb
add
imul
das
xchg
jno
cmpsl
outsb
out
jecxz
jno
out
test
test
orl
int3
pop
jg
sbb
cs
adc
sub
add
adc
push
xchg
xor
lock
mov
jne
xchg
std
rclb
ret
enter
call
push
outsb
movsb
push
sbb
fldt
ficompl
jns
rorl
push
inc
cmp
je
mov
push
fcmovbe
mov
mov
hlt
add
mov
sbb
es
into
or
negb
jg
pop
aam
and
pusha
dec
cmp
push
sub
movsb
sbb
js
sub
hlt
jnp
mov
jno
push
sub
jb
and
gs
sub
out
xor
dec
repz
or
mov
jbe
aaa
test
fsts
mov
mov
cmpsb
dec
fwait
in
xor
dec
rol
aaa
cmp
pop
push
jge
insl
jp
mov
out
push
adc
jmp
or
sbb
pmuludq
sarb
cld
jg
lret
and
or
scas
aas
mov
scas
xchg
pop
sub
sub
stc
inc
jbe
xchg
inc
mov
aas
call
insb
sbb
sbbb
stc
jo
sub
cmp
cltd
xor
push
mov
push
cmpsb
sbb
fwait
arpl
adc
out
xchg
int
xchg
adc
push
lahf
sti
xchg
es
adc
cmp
orl
and
lods
jae
dec
sahf
jns
ds
scas
pusha
mov
rcrl
add
addr16
xchg
mov
ds
cmp
arpl
push
pop
xlat
dec
popf
pop
sub
jae
leave
pop
mov
push
jecxz
add
lea
xlat
loop
pop
flds
pop
cmc
aad
dec
mov
xchg
sub
adc
adc
jne
pop
out
xor
inc
movl
mov
out
loopne
lds
mov
jne
pcmpgtb
xchg
mov
rcll
lahf
xor
sahf
nop
inc
xor
xor
stos
jo
ljmp
jmp
movsb
sbb
out
xchg
and
or
sti
lcall
in
sbb
call
cltd
cmp
mov
lods
or
push
rcrb
std
pushf
in
idivl
mov
adc
repnz
dec
scas
and
rolb
cmpsb
popa
sbb
mov
pop
stos
sub
aaa
pop
mov
repz
fisttpll
test
mov
and
push
out
adc
fldt
stos
add
xchg
mov
jns
loope
xor
scas
push
pop
inc
xchg
xor
push
mov
rorb
sti
mov
bound
cs
pop
ja
fists
push
mov
ret
jae
ret
das
pushf
lock
xor
push
pop
or
xor
fistpl
scas
outsl
shll
mov
dec
ss
lods
lods
push
sahf
xchg
jae
mov
pop
popa
inc
idiv
scas
testb
sub
mov
in
mov
mov
sub
nop
push
push
adc
testb
dec
enter
cmp
aas
lock
mov
into
jb
rclb
push
or
imul
jne
enter
orb
stos
sbb
std
and
nop
pop
cmp
cs
into
test
xchg
testb
data16
or
popa
xchg
cmc
lock
inc
ja
xchg
rorb
mov
mov
cmpsb
aaa
xlat
scas
xchg
out
mov
jae
pop
outsl
dec
repnz
les
dec
mov
aas
push
mov
bound
adc
cmp
nop
ja
sub
xor
bnd
lcall
jecxz
divl
out
movb
scas
bnd
xchg
sub
cmp
daa
cs
rorl
lods
call
ds
push
shrb
mov
xchg
cmp
inc
cmpsb
jnp
popf
ret
adc
and
dec
inc
out
scas
fcomps
loop
xchg
lods
dec
pop
push
xchg
or
cltd
rcrl
call
jb
ret
xchg
add
jae
inc
gs
cli
call
add
addr16
dec
jge
bound
ret
cld
jns
fdivr
loop
and
insl
jb
insl
leave
mov
xor
imul
adc
jns
pushl
lcall
dec
inc
push
jnp
xor
xor
and
loop
jl
in
enter
shl
sbbb
outsl
lds
mov
sbb
enter
iretw
fldl
add
loope
in
in
lret
jne
test
je
inc
shll
pop
ss
mov
pop
in
xchg
sarb
fsubr
jbe
test
mov
pop
stos
sar
sbb
loop
jge
loop
nop
movsl
xor
mov
lds
or
pushf
data16
pop
in
jmp
loope,pn
sub
pop
sbb
stos
adc
fcmovbe
mov
fidivs
mov
aad
lea
pop
je
jle
pop
out
lret
mov
out
fs
hlt
loop
pop
cmpsl
mov
inc
je
xchg
dec
jo
add
cmpsl
lret
adc
sub
inc
mov
jl
lds
mov
xchg
lret
push
fwait
jl
test
cmc
push
int3
pop
jle
or
xor
pop
popf
jp
and
imul
inc
sub
adc
notb
cmp
pop
pop
jp
pop
movb
add
add
stc
lea
int3
xchg
lret
ret
int3
loop
sbb
xchg
mov
jbe
sbb
je
shl
and
std
lock
ja
mov
and
or
mov
lods
imul
inc
lds
fwait
add
lsl
je
shll
test
pushf
out
dec
sub
xlat
xor
pop
mov
ret
testl
shll
sbb
add
scas
pop
lock
sti
mull
cmp
mov
arpl
sub
nop
ds
or
ja
mov
or
lret
lret
imul
add
pushf
lock
jae
imul
shlb
and
roll
lods
cmpsb
and
pusha
bound
sahf
cmpb
or
rorb
hlt
push
xor
jne
outsl
pushf
xlat
inc
and
push
xchg
test
sbb
jecxz
cmp
cmp
cmp
xchg
test
mov
je
jge
pop
xchg
sub
stc
dec
ret
outsb
xor
aas
push
inc
mul
mov
adc
jno
gs
lret
mov
cld
mov
test
mov
mov
jo
xor
cmpsl
cmp
jbe
in
mov
sbb
stos
adc
sti
cmp
lods
sub
sbb
nop
or
pusha
inc
aaa
addb
cmp
repz
cmc
mov
enter
mov
rcr
lahf
enter
fisubrl
jbe
in
sti
dec
xor
mov
jecxz
jbe
mov
add
or
and
insb
xchg
push
mov
sti
inc
movsl
imul
adc
in
mov
jbe
mov
push
cwtl
or
and
shlb
fisttpll
cmp
orl
mov
add
fmul
lods
xchg
repz
mov
mov
pop
cmp
int
xor
icebp
movsl
cmp
leave
mov
add
mov
sti
xchg
mov
jge
xchg
lods
test
iret
mov
dec
stos
mov
cs
xchg
je
and
dec
les
push
xor
out
lahf
es
lahf
ljmp
dec
pop
jecxz
mov
cmpsl
leave
inc
popa
les
mov
push
jno
xor
arpl
lret
add
sar
add
into
push
in
inc
xor
iret
xchg
icebp
dec
sbb
test
sub
clc
mov
sbb
bound
jae
sti
into
iret
inc
sub
push
fidivrl
mov
and
xor
cmpsl
jle
xchg
xorl
loop
ds
adc
mov
out
inc
lcall
inc
sbb
sub
into
ds
and
ljmp
lret
lret
js
mul
mov
and
cwtl
cli
ja
aaa
pop
xor
and
es
and
fsin
bnd
inc
stos
orb
sub
add
outsl
sub
cwtl
std
in
adc
adc
xchg
aad
mov
aam
jbe
adc
or
mov
dec
adc
cltd
les
jae
mov
das
aam
jne
xchg
iret
cltd
mov
mov
dec
jno
ret
aam
push
pushf
sbb
in
aas
test
jbe
add
lods
xchg
loop
adcl
jecxz
xchg
cwtl
mov
sub
mov
ljmp
mov
movsl
decl
inc
into
jge
aad
stos
sti
shlb
cmp
push
mov
ja
push
stos
or
icebp
popa
and
jecxz
xor
pop
fisubl
mov
jo
pop
jmp
pop
cmp
lods
stc
outsl
push
stc
ret
xor
inc
push
testb
and
inc
syscall
push
insb
icebp
lret
mov
enter
inc
cmp
jmp
fsubp
in
pop
out
mov
js
mov
mov
icebp
fbstp
ret
rcl
icebp
rolb
jle
imul
mov
out
out
mov
shll
enter
adc
out
insl
data16
gs
jg
aas
mov
cwtl
popa
jb
jns
add
lret
pop
or
mov
mov
nop
mov
ss
outsl
dec
mov
movsb
insb
xchg
add
xchg
pusha
int3
fildll
sub
clc
std
gs
in
xlat
stos
sub
xchg
sub
mov
ss
adc
outsb
ret
jb
outsb
out
push
push
pop
in
mov
or
adc
mov
adc
out
mov
std
push
sbb
lds
and
jecxz
insb
mov
xor
xchg
xor
push
inc
adc
mov
jge
aas
loop
in
stc
cmp
sub
jecxz
inc
cs
mov
mov
stos
aas
mov
mov
adcb
lock
cwtl
inc
push
xchg
cmpsl
loope
push
xchg
mov
cs
sub
sbb
push
shll
cmpsl
sub
push
mov
push
xchg
push
pop
aad
lret
push
ja
mov
fisttps
fwait
mov
pusha
adc
es
sahf
cwtl
cld
hlt
pop
movsb
pop
and
push
insl
mov
int
lret
call
adc
mov
std
mov
or
in
and
and
cld
xchg
sub
lret
std
jp
mov
inc
xlat
cmp
push
test
into
jle
or
scas
xlat
or
les
cmp
aad
lods
fs
cmp
in
xor
add
mov
dec
inc
dec
leave
imul
mov
adc
push
mov
dec
sbb
aad
mov
insb
jecxz
daa
fdivl
jp
mov
mov
inc
addr16
cmp
adc
or
jb
xchg
and
mov
in
mov
jne
cmp
xor
mov
add
cmc
push
lea
mov
into
push
sahf
repnz
mov
dec
cli
add
jb
and
and
sub
sbb
hlt
dec
das
push
arpl
inc
stos
pop
lods
mov
dec
dec
lret
add
adcl
push
in
insb
shrl
push
jno
call
cmc
jmp
push
or
ljmp
nop
mov
rcrb
stos
fincstp
jnp
lea
mov
cmp
fs
bound
push
repz
mov
jbe
sub
loope
loopne
ret
fidivl
cmpsb
add
cs
cmp
clc
sub
out
aad
add
inc
imul
add
dec
call
lahf
sahf
push
xor
xor
fs
inc
mov
push
vmread
xor
sbb
scas
dec
dec
dec
cli
idivl
je
and
rcrb
mov
mov
inc
mov
add
xchg
cmp
inc
jae
test
aas
mov
mov
ret
cmp
inc
call
dec
outsl
es
push
fnstsw
mov
xchg
imul
mov
mov
aad
int3
cmp
mov
out
jge
movb
mov
fstpt
xor
jo
jne
lds
pop
test
movsl
out
sbb
imulb
inc
jecxz
dec
pop
scas
scas
fdiv
adc
ja
fstpl
add
or
fdivl
inc
mov
mov
popa
mov
ror
bound
cmpsb
rclb
pop
fwait
pop
lock
loop
xchg
mov
stos
cltd
mov
sub
dec
mov
and
push
sbb
mov
mov
clc
and
lock
sti
jns
pop
js
inc
adc
dec
sub
inc
leave
daa
mov
cwtl
test
fwait
adc
ss
add
adc
outsl
and
mov
dec
xchg
pop
fiadds
mov
mov
mov
fiaddl
sub
leave
sti
push
cmc
sbb
mov
push
subl
imul
mov
pop
stos
lahf
enter
cmp
add
imul
sub
out
in
jmp
imul
inc
iret
inc
push
mov
ret
push
jnp
mov
add
xchg
stc
test
nop
mov
pop
pop
fnstcw
stos
push
les
jle
lret
mov
cli
adc
mov
je
pop
adc
dec
and
inc
pop
jle
mov
lahf
ss
push
ja
xor
pop
add
dec
pop
nop
mov
popl
dec
and
aas
and
shrb
mov
out
xor
and
sbb
add
aad
fcmovbe
jecxz
xchg
pop
jnp
pop
push
jbe
jo
stc
ss
pop
mov
mov
pop
popf
pop
orb
mov
dec
lret
cmp
mov
rcrl
inc
mov
mov
lock
in
lock
outsb
sub
into
shl
imul
sbb
sti
les
inc
inc
aaa
mov
stos
ret
mov
pop
push
ja
mov
fsts
popa
repz
fstl
clc
jg
adc
jmp
cmp
xlat
test
gs
clc
cltd
dec
shll
pop
fs
mov
std
push
pop
sbb
sahf
cwtl
rcll
arpl
frstor
cmp
jmp
imulb
lcall
arpl
daa
pop
xchg
or
cmpsl
out
pop
pop
in
rcrb
addr16
mov
xrelease
jle
mov
cltd
xchg
dec
add
adc
adc
repnz
push
aas
jbe
sub
out
mov
fiadds
dec
push
test
iret
xor
or
push
adc
push
cwtl
add
dec
dec
mov
mov
in
ret
cmp
mov
mov
sbb
pusha
in
sbb
mov
rcll
orl
pop
lods
and
stos
loopne
sbb
leave
outsb
je
std
cmp
das
movsl
mov
stos
aad
sti
fists
in
or
int
add
rcrl
add
adc
pop
insl
jnp
mov
dec
divl
xor
sbb
sub
int
stc
addr16
int
stos
jno
jle
cmp
push
scas
cmp
cmpsb
sbb
movsb
dec
dec
xchg
mov
cmpsl
inc
and
push
and
pop
dec
pop
mov
insb
cmp
dec
lcall
cld
in
cmp
cmp
faddl
das
xchg
pop
pushf
mov
ljmp
shlb
icebp
mov
mov
adc
negb
cld
adcl
add
add
pop
xlat
aam
push
and
xchg
pop
test
mov
xchg
mov
sbb
pop
dec
das
mov
testb
test
loope
paddw
xchg
movups
sarl
pop
pushf
subb
clc
into
push
outsl
inc
pop
and
xor
push
inc
xlat
out
inc
add
ss
test
popa
xor
fld
add
and
popa
inc
lock
adc
enter
mov
dec
xchg
mov
sbb
or
popa
dec
stc
mov
fldt
in
shr
lcall
stc
repnz
cmp
ficoms
sahf
rorb
int3
xchg
stos
sbb
fsubl
xchg
push
sbb
pop
fdivp
sahf
sahf
push
mov
jmp
cmp
adc
xor
pop
test
lahf
mov
insl
cmpsb
adc
jl
jne
lock
cmp
outsl
xor
adc
insb
xor
cs
mov
rcl
and
in
push
xlat
jecxz
bound
hlt
push
dec
cmp
outsl
cmp
sub
jne
gs
mov
xchg
daa
fs
xchg
cmp
incb
or
outsl
ret
jl
push
xchg
lret
addr16
pop
fsubrs
push
nop
sbb
mov
rorb
cmpsb
pop
nop
and
orl
mov
hlt
je
in
leave
iret
push
in
add
inc
movsb
jecxz
xchg
xchg
adc
imul
mov
mov
in
xchg
jb
fldenv
in
lock
push
adcl
mov
jmp
sbb
mov
dec
rolb
lock
js
scas
loope
jp
lret
icebp
ljmp
inc
data16
xorl
xchg
add
adc
std
xor
leave
jnp
addl
xor
mov
sbb
mov
adc
jecxz
jnp
xor
fs
cwtl
xchg
cmc
mov
in
fs
or
xor
aaa
dec
rcl
cmpsb
insb
adc
rorb
icebp
mov
jnp
in
insb
add
mov
ljmp
xchg
inc
bound
daa
cmpsb
ret
mov
bound
in
xchg
pop
mov
lea
jl
cmp
mov
add
sbb
stos
out
rcrb
sub
ret
lock
mov
xor
lods
adc
add
clc
jge
push
adc
mov
xor
imull
xchg
cmp
push
dec
inc
inc
outsb
cs
into
aam
sarb
cmp
push
mov
lods
ja
lock
adc
lods
push
or
lret
mov
push
pop
idivb
iret
jge
repnz
push
stos
jecxz
ja
add
adc
add
pop
mov
mov
ss
subl
jmp
mov
cmpsl
cmp
nop
mov
sub
jmp
in
mov
sbb
xchg
das
jp
push
sub
dec
adc
xchg
xchg
in
insl
in
xchg
pop
mov
mov
mov
les
jecxz
dec
mov
adc
cltd
pop
cmp
push
roll
sti
dec
fstps
leave
lock
fisttps
adc
cmp
push
jl
fnstenv
dec
or
and
push
dec
test
into
in
je
into
inc
inc
insb
jmp
mov
xchg
mov
xor
mov
ds
mov
dec
pop
and
lods
pusha
mov
push
test
repnz
lret
repz
add
push
es
xor
push
xchg
jae
call
jmp
add
fs
xor
and
mov
stc
out
inc
ficoml
mov
insb
cmp
inc
nop
jbe
mov
rol
push
inc
adc
jbe
cmpb
mov
cld
pop
push
bound
cli
cwtl
jmp
push
mov
push
inc
and
sbb
dec
mov
adc
pop
daa
push
push
xor
pushf
lcall
mov
test
mov
sbb
data16
outsb
cmp
sub
dec
adc
sti
in
mov
je
xchg
xor
or
daa
scas
jmp
sbb
jo
std
pushf
cmp
sbb
pushf
adc
lods
mov
jb
jae
pop
sbb
aaa
test
push
adc
adc
ret
mov
clc
lods
insb
int
xchg
dec
imul
xor
movsb
jno
testb
lock
sub
xchg
dec
sub
jmp
jmp
outsl
je
cmp
push
arpl
dec
pop
jbe
or
arpl
pop
out
or
insl
lahf
enter
xchg
iret
aaa
and
rclb
scas
cmp
hlt
or
mov
jnp
lret
inc
loopne
rolb
cld
shl
inc
and
mov
inc
insl
mov
aad
fdivrs
jmp
mov
loopne
cmp
inc
xchg
test
jmp
sbb
pusha
je
push
inc
or
lahf
lock
push
repz
add
push
push
and
xchg
xor
jns
xchg
in
sbb
ja
and
mov
mov
add
pop
cmp
mov
and
pop
cltd
mov
adc
test
mov
dec
add
xchg
xchg
cmc
add
pop
jl
mov
int3
dec
cli
pop
jb
pop
cli
psadbw
lcall
adc
movsl
and
orb
jl
mov
lock
mov
xchg
call
fldcw
adc
jne
std
push
mov
pop
xchg
repz
shrl
lret
jno
and
in
lock
shrl
imul
add
xchg
or
cli
leave
stos
xor
and
mov
pushf
clc
jmp
mov
add
out
iret
shr
mov
adcl
das
adc
outsb
inc
popf
mov
out
orl
mov
sbb
mov
pop
js
xor
rol
insl
inc
stos
fstpl
daa
mov
pop
cmpsb
loope
jge
subl
push
or
sbb
add
cmpsl
verr
test
pop
inc
sub
shlb
jecxz
inc
aaa
add
dec
jl
clc
insl
fs
inc
cs
imul
pop
fnstcw
push
outsl
mov
jbe
cmp
push
dec
and
leave
mov
xchg
test
lcall
insb
xor
repnz
inc
jns
cmpsb
stos
repnz
mov
push
xchg
pop
dec
push
movsl
fwait
jecxz
push
cmp
inc
mov
and
fs
pop
sbb
xor
cli
lods
imul
test
mov
aad
out
dec
cmp
pop
scas
subb
pop
mov
jae
fwait
js
add
cmc
in
adc
incl
or
mov
inc
sub
jge
mov
adc
ds
mov
std
mov
inc
push
insb
lods
and
and
stc
push
test
or
jge
hlt
jmp
jl
in
xchg
push
mov
jnp
leave
xchg
xorb
add
ds
jmp
sub
mov
test
repnz
pop
xchg
arpl
loope
xor
jns
cmp
push
incb
repnz
sbb
fs
dec
addr16
cld
cwtl
lahf
notl
pop
gs
mov
mov
repz
push
dec
daa
int
xchg
inc
outsb
or
xchg
lcall
mov
iret
add
jbe
lahf
adc
clc
inc
je
xchg
sahf
mov
test
pusha
sub
rolb
int
lods
int
test
push
scas
or
inc
cmc
dec
inc
jno
repz
aam
clc
push
sub
inc
mov
jg
outsl
test
xchg
pop
sub
rorl
add
add
cs
push
add
jg
adc
xchg
subl
out
adc
aaa
xor
mov
inc
push
movl
jg
mov
xchg
lret
mov
pop
mov
sysexit
inc
pop
xchg
mov
or
sub
lods
jecxz
jb
test
popf
push
push
inc
xchg
sub
call
rclb
iret
sbb
movsb
leave
sbb
adc
sub
xchg
inc
sti
jb
lret
scas
gs
inc
jmp
pop
andl
outsb
dec
sbb
cmp
mov
in
fimuls
xchg
sub
ret
shlb
inc
dec
adc
test
rcrl
push
rolb
jae
test
dec
lock
mov
inc
xlat
push
ss
outsb
cmpsl
dec
ret
lds
test
mov
leave
les
xchg
clc
stos
jae
aad
jp
shlb
and
push
jns
aam
xchg
cltd
inc
mov
stc
add
lods
les
hlt
lods
imul
jo
mov
push
btr
xchg
lock
jecxz
stos
mov
int3
loope
mov
mov
jb
cmp
or
jo
idivb
addr16
enter
clc
mov
cmp
mov
add
pop
in
std
mov
xlat
jno
sub
mov
ret
scas
fmulp
xchg
jl
cld
pop
lods
add
ja
std
aam
mov
xlat
pusha
aas
cmc
icebp
push
out
mov
out
in
insl
imul
jnp
adc
adc
ret
cmp
mov
push
pop
lods
loop
ss
push
repnz
cmpb
xlat
daa
mov
jb
fbld
imull
out
pop
cmc
imul
mov
sbb
push
popf
and
test
xchg
popa
stc
movsb
adc
cmp
inc
pusha
pusha
hlt
mov
xor
adc
jg
cwtl
jmp
iret
test
outsb
and
pop
sub
lret
pusha
cmpsb
dec
mov
mov
hlt
lret
mov
je
sub
xor
popa
pop
aam
stos
or
sbb
jg
push
out
push
sbb
mov
dec
xor
mov
cmp
xorb
cmp
es
add
mov
test
sub
mov
dec
inc
jns
enter
jmp
xor
dec
pop
mov
scas
pop
loopne
nop
inc
popl
cmp
push
inc
jae
jne
rep
iret
dec
mov
xor
or
mov
popa
movsl
aad
dec
mov
push
jl
inc
or
lds
add
mov
jl
dec
adc
xchg
pop
mov
sub
inc
sub
inc
ret
jbe
mov
and
jns
mov
cwtl
sbbl
sub
gs
jle
or
shrb
insl
push
mov
xlat
push
and
insb
sarl
jns
adcb
shrl
dec
adcl
fucomi
or
lahf
jp
out
pop
add
lea
cli
int3
mov
mov
mov
enter
or
xchg
sysexit
xchg
into
lret
xor
inc
xchg
rol
sti
repnz
adc
and
ficomps
cwtl
mov
and
adcl
cmp
push
ja
xchg
fbstp
add
cmp
loopne
cwtl
lret
adc
add
cmp
jae
shlb
sub
stos
imul
xor
sub
js
lock
outsb
out
fstps
daa
int
jo
in
into
push
mov
mov
repz
mov
push
jp
inc
jne
mov
mov
lret
xchg
fldcw
fstpt
rorb
jo
fbstp
lret
cmp
rcl
daa
cmp
jb
or
mov
mov
and
in
mov
jbe
xchg
mov
cmpsl
bound
rol
das
jmp
jecxz
adc
cmc
jle
enter
les
mov
out
movsb
aas
push
mov
repnz
mov
or
adc
loope
pushf
xlat
test
repnz
cmp
cli
dec
lcall
push
cmp
jge
hlt
cmp
cmpsl
sbb
jle
cltd
outsl
mov
or
daa
hlt
xchg
mov
lret
inc
cmpsl
aas
pop
out
dec
jno
mov
ret
call
mov
lods
lock
cld
sti
into
test
dec
das
les
repz
adc
imul
fisttpll
fwait
sbb
mov
pop
sbb
vmovd
xchg
rcl
out
scas
jecxz
imul
cld
add
ljmp
mov
js
cmp
adc
enter
fucompp
cmpsl
xor
pop
mov
lea
jno
ja
xlat
sub
cmc
js
pop
add
and
or
aas
ja
add
cmp
xor
mov
jno
xor
or
lds
jb
mov
mov
dec
xchg
push
dec
fdivl
inc
dec
jne
adc
push
dec
pop
cli
lahf
add
iret
mov
in
xor
sti
movaps
inc
jl
sub
and
xor
enter
mov
in
ja
test
xchg
cmp
and
mov
repnz
or
in
dec
ret
repnz
jbe
mov
mov
in
movsl
or
dec
aam
insl
repnz
push
leave
out
lahf
cmp
cmpsb
push
push
add
mov
cmp
pop
cmp
popa
mov
xchg
aas
lods
pop
add
cli
pushf
addl
gs
rcrb
jae
mov
and
nop
test
mov
pop
jb
jo
psubd
outsl
lods
adc
push
out
xor
xlat
jg
sbb
negb
xchg
test
and
xchg
dec
push
mov
mov
cmp
and
cmp
jne
add
cltd
adc
jb
cmp
popa
hlt
cmp
and
leave
fistpll
mov
je
mov
cmp
imul
or
dec
inc
xor
and
push
lds
push
ret
xchg
sub
imul
in
movsl
mov
pop
jecxz
or
mov
js
adc
aaa
les
scas
aad
addr16
mov
int3
test
lock
xchg
mov
subl
out
ret
lret
aad
ror
adc
mov
push
lods
test
or
pop
push
push
vlddqu
mov
sbb
inc
ret
movsb
out
jns
adc
add
pop
jecxz
inc
xchg
rcrl
xchg
mov
in
enter
xchg
sub
push
dec
loop
sahf
out
scas
dec
xchg
mov
ljmp
nop
cmpsl
mov
mov
cwtl
into
dec
sbb
mov
fld
sub
sub
lcall
xchg
mov
xchg
mov
cmp
faddl
mov
mov
dec
out
mov
ss
iret
dec
push
mov
mov
dec
add
scas
hlt
and
dec
fsubr
int3
iret
repz
lret
fisttpl
and
cmp
jp
fnstenv
pushf
mov
mov
faddp
cmp
ficoms
mov
sbb
mov
gs
dec
aad
mov
aam
xchg
popf
mov
mov
ja
sub
push
lock
xchg
mov
sbb
cmpsl
jp
in
jg
add
cltd
add
push
inc
sarl
rclb
lods
jmp
cmp
jmp
test
jmp
dec
bound
mov
divb
xchg
jnp
add
rorb
mov
lds
push
repz
jmp
cmp
fdivl
fcoms
xor
std
fs
mov
dec
pusha
les
mov
fistpll
jo
fsubs
mov
scas
mov
shlb
cld
xor
and
call
xor
lcall
jae
mov
sbb
jge
cli
shl
mov
push
mov
cli
pop
pop
pop
insb
or
pop
adc
mov
mov
sub
push
xchg
adc
jle
mov
lods
pop
xchg
stos
gs
push
fiadds
mov
out
cmp
push
jle
pop
ret
dec
cmp
lcall
xchg
sub
mov
mov
fiadds
pop
adc
cmp
jl
in
xor
stc
mov
out
jle
pop
movsl
fs
pusha
sub
add
in
mov
addl
aaa
adcb
shlb
lods
pop
xchg
mov
sub
jle
sbb
pushf
lods
lds
pcmpgtw
stos
mov
adc
repz
pop
push
mov
adc
inc
inc
adc
sbb
push
pop
stos
mov
int
mov
lods
or
aas
jle
cmp
out
rol
add
jg
scas
and
xchg
adc
loope
pop
stc
sti
mov
cmpsl
xchg
clc
or
fwait
push
cli
xlat
push
sahf
lcall
scas
lea
xchg
fmull
xor
iret
mov
sbb
lods
cwtl
sbb
lcall
and
or
iret
pop
mov
sbb
or
dec
je
lods
fs
mov
mov
mov
mov
mov
pop
movsl
xor
xor
shll
jae
imul
and
sub
js
loope
mov
repz
out
out
pop
mov
cmpsl
add
and
mov
xlat
sahf
sahf
popa
mov
push
nop
repnz
or
lods
div
test
jbe
or
dec
es
fs
and
lcall
repnz
ret
xor
addr16
xor
pop
cmovne
mov
in
fdivl
inc
sbb
xchg
imul
sub
and
cmp
fcoml
jo
push
div
mov
cwtl
pop
icebp
jle
adc
loopne
mov
xor
xchg
stos
call
xor
js
cli
sub
mov
test
enter
test
xchg
scas
jecxz
imul
fdiv
push
cmpsl
push
xchg
push
pop
mov
xor
mov
test
jb
push
sub
mov
cli
mov
insl
loop
mull
test
loop
push
jo
stos
pop
pop
push
pop
cmp
aad
insl
ja
repz
lods
fadd
xchg
std
mov
sub
iret
mov
es
pop
pop
push
es
jecxz
stos
movsl
inc
mov
int3
add
push
imulb
pop
push
data16
mov
sbb
stos
mov
repnz
mov
and
test
repz
xor
add
cmp
xor
jl
push
xchg
les
js
repz
orl
cltd
cmp
loopne
adc
cmp
cmp
mov
xor
mov
cmpb
pop
cs
pop
rorb
lahf
adc
cmc
mov
inc
and
cmp
in
jns
push
lds
shl
movsb
insb
es
or
cwtl
lea
or
test
jno
lds
and
push
pop
jno
outsl
mov
idiv
loop
fiadds
arpl
mov
add
out
jg
insl
inc
mov
cmp
or
pop
out
mov
xor
pop
sub
in
and
and
dec
rclb
mov
pop
imul
cld
adc
inc
orl
push
push
mov
or
push
enter
hlt
sbb
xchg
cmp
or
mov
stos
dec
cmp
ret
jno
push
and
sar
xor
xor
insl
mov
iret
jl
push
add
outsb
xor
inc
out
jmp
test
ret
adc
imul
adc
cmp
adc
xchg
sub
lods
outsl
mov
or
test
andps
insl
lock
divl
adcb
xchg
jle
icebp
mov
pusha
xor
adc
sub
lcall
pop
cwtl
sub
jp
movsb
jb
sub
sti
push
push
jno
jmp
pop
fdivr
test
and
out
nop
sbb
mov
add
mov
lahf
test
add
jo
rcll
shl
dec
pop
sbb
popa
iret
sbbl
push
sbb
pop
mov
sbb
jo
out
pusha
pop
jo
dec
mov
pop
cwtl
loopne
jge
cmp
cs
repz
clc
jne
sti
movsb
jge
jmp
divl
int3
jne
clc
fucomp
rorb
out
or
adc
out
xchg
cli
lock
in
pop
cmc
cmp
mov
mov
cmp
add
inc
push
rolb
push
enter
add
xchg
add
mov
loope
cmpsb
mov
push
fstps
push
loope
push
sub
mov
repz
movb
outsb
adc
push
mov
in
push
faddp
negl
sub
sub
ud0
lods
ffree
sub
dec
push
inc
les
pop
mov
ret
sti
icebp
movsl
cmc
cmp
lods
push
pushf
push
cmp
dec
dec
andb
sub
mov
test
ror
arpl
dec
loop
loope
cmpb
push
dec
push
sahf
ds
ss
xchg
mov
jae
xchg
mov
jmp
inc
enter
dec
test
rorl
adc
cmp
rclb
push
jnp
repz
incl
push
iret
jb
sub
mov
and
test
sbb
ret
gs
leave
ss
aam
mov
xchg
test
bound
out
rorb
push
fidivrl
and
push
push
mov
mov
xor
les
mov
rcr
int3
cmp
mov
jmp
test
bound
mov
push
dec
je
or
lahf
and
adc
ret
pop
sub
add
pop
les
xchg
mov
mov
shlb
and
sbb
add
fbstp
pop
push
pop
lea
adc
push
cs
fucomi
lods
lock
dec
and
loop
lcall
jge
ljmp
push
in
push
sarb
rorl
cmc
aad
icebp
add
pop
or
fucom
dec
rcll
xchg
sbb
mov
cmc
dec
mov
cwtl
jo
icebp
add
mov
insb
pop
bound
mov
das
xchg
out
addb
xchg
lea
or
stos
jecxz
sahf
jge
leave
in
cmp
inc
cwtl
xchg
cmp
cmp
test
out
jo
adc
or
pushf
cltd
in
pushf
test
clc
cmp
inc
push
lea
int3
push
jg
or
ja
clc
xchg
sub
sub
dec
mov
rorl
mov
sbb
int
aaa
pop
sbb
test
mov
push
fimuls
sbb
jb
mov
outsl
push
mov
sahf
int3
xor
xchg
leave
jb
mov
mov
fisttpll
movsb
cmp
or
jle
and
cmp
rolb
lods
mov
jnp
sar
iret
arpl
cmc
mov
jae,pn
push
add
push
rcll
dec
cmp
push
fs
in
jecxz
in
mov
inc
fwait
aas
in
push
push
test
jg
inc
pop
mov
jge
sahf
pop
or
add
cmpsb
mov
adc
sbb
pop
repz
dec
adc
outsw
sbb
loopne
lahf
pop
pop
cs
mov
pop
arpl
cmp
je
mov
push
out
cltd
jl
or
js
xor
shlb
push
iret
xor
out
fsubr
data16
cltd
scas
out
sbb
pop
ss
movsb
lret
pusha
das
add
pop
mov
mov
mov
or
fstp
outsb
nop
xchg
fidivl
or
bound
daa
fldl2t
mov
shl
adc
sbb
mov
lcall
mov
xchg
sbb
sbb
mov
into
add
movsb
test
shll
jl
pop
jp
movsb
pop
stc
outsl
imul
jg
jns
in
or
insl
rclb
and
mov
push
cltd
xchg
cli
jg
clc
inc
lret
divl
fsts
jg
icebp
das
lahf
or
pop
repnz
mov
dec
es
mov
dec
add
lods
les
sbb
cltd
sub
insb
call
lods
xor
sbb
jp
push
add
add
cmp
jecxz
hlt
pop
fildl
inc
subl
je
sbb
xchg
cmp
pop
mov
xor
fildl
fidivrl
cmpsl
mulb
adc
lret
aas
push
lcall
out
cwtl
fdivr
pop
aas
push
addr16
xor
push
mov
inc
and
jns
or
adc
push
jmp
jns
push
push
mull
xchg
fidivrl
mov
mov
mov
push
push
cmp
fwait
mov
xor
sub
push
adc
mov
out
push
push
inc
sbb
and
dec
leave
add
ja
pop
leave
std
cltd
pop
daa
dec
je
xchg
inc
mov
les
dec
dec
mov
dec
xchg
sbb
sub
das
bound
sahf
call
cmp
pusha
sbb
xchg
aad
sahf
rcrb
inc
sub
or
ss
add
and
xor
mov
das
add
clc
aas
cmp
dec
and
inc
mov
pushl
lret
fcomp
out
es
shlb
fstpt
insb
sub
fiaddl
jae
pop
rcl
fmull
add
mov
add
inc
lcall
cmp
xrelease
and
mov
xor
ljmp
arpl
sbb
xor
lds
das
mov
xchg
mov
aad
xor
mov
gs
in
jnp
jb
and
int3
mov
clc
test
ficoml
scas
lahf
adc
cmp
sub
rcrb
push
sahf
pop
inc
pop
int3
xchg
xchg
cmp
pop
insb
gs
push
mov
xchg
shll
xchg
jmp
dec
fsubl
insl
popf
push
js
addl
dec
outsl
clc
cli
or
js
pop
adc
dec
mov
adc
lds
aad
repz
mov
push
sbb
sub
push
add
sub
lods
movsb
outsb
sbb
sarl
xor
cmp
push
xor
cwtl
mov
lea
sbb
push
xor
xchg
negb
cmp
loopne
inc
mov
adc
adcb
movsl
jne
push
cld
lahf
sub
inc
add
enter
adc
out
xchg
mov
and
xorb
insb
out
imul
popf
mov
sbb
jle
lea
cmc
mov
popa
fs
mov
push
mov
add
pop
ja
orl
outsb
ss
xchg
xor
cwtl
xchg
mov
mov
repz
inc
pop
or
movsb
jo
outsl
cmp
push
sbb
cli
shrl
ror
mov
sbb
dec
jmp
cmc
xor
jmp
push
mov
insl
inc
and
subl
arpl
ret
inc
and
ds
jecxz
mov
sbb
loope
aad
xchg
aad
cwtl
fs
mov
cmc
sbb
int3
push
fistpl
fwait
pop
gs
inc
or
xchg
xor
lcall
mov
ret
sub
dec
in
mov
jb
inc
aaa
push
xchg
pop
insl
mov
loopne
popf
stc
xchg
jne
lods
fildl
or
cmc
jge
lods
xor
inc
dec
fidivl
fidivrl
rep
cli
fmuls
push
mov
mov
jg
adc
lods
sbb
dec
daa
je
push
inc
cmp
pop
lods
stc
and
scas
bound
inc
push
jo
test
popf
ja
jns
and
push
ret
pusha
and
jle
xlat
ret
decb
jb
fsubrl
out
pop
jp
inc
fiaddl
xchg
popa
ljmp
adc
cmp
out
mov
cwtl
jbe
inc
jo
xor
jge
add
pop
mov
dec
in
jns
lock
lcall
jo
mov
jge
xor
js
mov
push
int
mov
dec
pop
push
mov
in
movsl
adc
in
mov
dec
cs
add
ljmp
aaa
shlb
sbb
test
inc
loop
repz
adc
aam
mov
jno
inc
int
lock
popa
out
fwait
dec
inc
mov
jno
adc
popf
loopne
dec
push
mov
push
cmp
jb
data16
in
jmp
adc
clc
jns
mov
es
icebp
subb
mov
in
sub
imul
nop
fdiv
push
or
fcomps
pop
fiadds
ficoml
rcrl
fildll
xchg
pop
or
jl
cmp
int
dec
push
xor
jns
shlb
mov
int3
lret
jo
xor
xor
cmp
insl
arpl
test
mov
and
idivl
les
push
cmpsb
movsb
pop
fcoms
or
mov
push
jno
jns
sarb
and
in
sbb
shll
ficomps
sahf
jecxz
ja
shlb
jg
mov
lret
or
xor
fcom
cli
xor
jb
and
fildl
jo
movsb
push
xchg
pushf
pop
das
sarl
mov
jmp
leave
push
lds
ja
cmpsl
or
inc
push
ret
mov
or
sahf
leave
cmp
push
dec
inc
call
fs
sub
test
lock
iret
inc
insl
out
hlt
aaa
mov
jp
xchg
mov
dec
inc
jno
cmp
test
sti
je
clc
and
repz
pop
enter
jno
je
sbb
sub
add
pop
lea
sbb
sbb
mov
fcoml
or
mov
mov
std
xchg
enter
xor
cmp
dec
inc
pusha
inc
xchg
mov
mov
mov
leave
lods
fcomip
inc
repnz
jl
popa
sbb
push
xlat
shll
or
inc
loopne
fildl
push
addr16
aas
pusha
dec
jae
int3
movsb
cli
mov
lds
movsl
lea
jp
jecxz
dec
pop
add
js
sbb
pop
or
mov
sub
test
jle
repnz
cmp
sbb
mov
cld
sar
sub
mov
push
cmp
outsl
aad
icebp
fwait
push
xchg
ss
and
pop
popf
out
fldt
movsb
mov
add
fldl
sbb
sbb
int
addr16
gs
sbb
sahf
adc
rcr
loopne
enter
ds
bound
add
xor
push
stos
in
pop
add
mov
mov
movsl
je
xor
xor
xor
xor
inc
xlat
lcall
lds
movsl
mov
sub
jge
in
lret
pop
fistl
push
mov
add
pop
sahf
sahf
fisubs
mov
sbb
fisubs
leave
jmp
push
sub
ja
pop
mov
ret
sub
incl
movsl
enter
aam
scas
xor
lret
sbb
sti
xor
cli
cwtl
adc
aaa
fisubl
sbb
int3
xor
cmp
sub
into
icebp
stos
jne
pop
add
add
xchg
jmp
sub
push
dec
mov
and
int3
mov
push
sub
popa
mov
in
jl
pop
shr
jle
cmp
leave
int
mov
mov
push
lret
pop
rorb
popf
push
jnp
dec
ja
mov
lds
inc
mov
fwait
mov
hlt
xchg
ljmp
outsl
jbe
icebp
push
aad
mov
adc
pop
insb
gs
or
jle
jecxz
int3
loope
imul
cmovnp
sub
sub
mov
xor
enter
mov
icebp
pop
xor
lds
dec
in
push
xor
add
xlat
leave
xor
sarb
popfw
mov
dec
pop
mov
jbe
lcall
incl
icebp
dec
xor
xchg
stc
push
out
sbb
jne
mov
addl
repnz
cmp
mov
lahf
mov
les
xlat
pop
adc
rcll
mov
scas
adc
dec
pop
mov
scas
add
std
sub
int3
sbb
dec
test
mov
xor
dec
fldcw
adc
scas
repz
xor
ror
sub
and
sub
push
dec
cmp
push
addl
inc
int
cmp
pop
mov
cmp
jo
mov
addr16
cltd
daa
out
fnstsw
stos
jp
cmp
cs
fs
ljmp
cmp
push
cmpsl
add
cwtl
les
outsb
mov
inc
cmpsb
cmpb
dec
wbinvd
sti
adcb
push
cltd
mov
sub
es
gs
jmp
and
pushf
fwait
xor
out
dec
aas
push
push
mov
cmp
lds
jae
lods
xchg
les
xor
or
js
xchg
fld
fildll
icebp
xor
ret
adcl
ljmp
adc
and
mov
mov
pop
pop
and
ss
jb
and
sbb
les
or
call
add
imul
inc
mov
dec
aaa
cmp
push
jg
sub
cmp
out
shll
push
add
pop
mov
and
pop
incl
ljmp
mov
jmp
mov
cmp
fldcw
sbb
jmp
enter
push
push
popa
cld
loopne
jae
les
add
sub
shrl
xorl
mov
pushf
insl
fstl
jmp
cmp
adc
in
popf
dec
cmp
push
lret
adc
in
push
add
mov
push
outsb
inc
idiv
std
divl
ror
jmp
push
je
push
fdivrs
fistl
stos
test
add
add
pushf
rcll
or
icebp
mov
jl
repz
mov
jge
and
add
shl
xchg
fstpt
jbe
xchg
leave
movsl
les
mov
emms
mov
cltd
sbb
shrl
xorl
lods
mov
nop
std
adc
lds
lret
fiaddl
mov
cmp
aas
push
out
mov
divb
fistl
mov
inc
or
mov
push
gs
push
inc
jo
movsb
cmp
inc
call
pop
sbb
stc
cltd
rcrl
mov
std
cmp
das
cmp
stc
pusha
pop
in
stos
sub
cmpsb
inc
fdivrl
pop
sbb
push
xor
add
fwait
testl
dec
loope
inc
add
scas
xchg
lret
mov
leave
mov
push
pop
mov
pop
mov
jno
bound
call
sbb
sbb
xchg
push
jp
pop
out
arpl
aaa
pop
data16
imul
out
sbb
or
ds
stos
repz
fs
xchg
lret
hlt
push
out
iret
dec
in
xor
cmp
lahf
lods
mov
mov
lock
xchg
pop
repnz
inc
jo
roll
mov
sub
jno
jae
mov
ror
inc
lcall
sti
push
aas
out
inc
out
pop
adc
pusha
sub
cmp
popa
and
push
cmp
xor
mov
add
or
dec
sar
insl
das
xchg
or
add
scas
jecxz
fistpll
and
aas
cmp
shll
jns
pop
sar
mov
clc
mov
repz
ss
repz
test
pcmpeqw
sbb
xchg
xor
jne
pop
and
jp
and
mov
pop
call
mov
mov
cmp
fwait
mov
mov
or
mov
iret
sahf
fcoms
mov
lahf
mov
xor
or
xchg
push
cmp
adc
sbb
out
sbb
and
and
push
adc
jle
ljmp
jp
sti
xchg
enter
lods
in
roll
movl
movsl
sbb
imul
pop
pop
ret
out
insl
data16
dec
sub
dec
sub
cli
adcb
xchg
jae
xchg
pusha
lret
ficoms
loop
push
xchg
sub
jl
shlb
mov
mov
mov
push
in
nop
pushf
sub
cwtl
cmc
pop
pop
mov
mov
stos
push
sub
arpl
pop
mov
adc
mov
insb
mov
repz
leave
mov
movhps
jl
sub
pop
pop
ficoml
sbb
xlat
ret
pop
xor
pushf
dec
xchg
push
call
repz
xorl
hlt
inc
int
repz
inc
repnz
popf
cmpsb
mov
dec
jo
fprem
daa
xor
push
fdivl
int3
inc
inc
jae
pop
outsb
fdiv
outsb
pop
or
push
pop
jp
stc
inc
std
sbb
push
cmp
lahf
popa
outsb
push
adc
bound
sub
or
mov
lret
cmp
xchg
das
imul
inc
out
je
roll
sbb
xor
cmp
mov
jmp
es
mov
loop
cmp
je
sub
or
outsb
movsb
loopne
push
sbb
ds
fnstcw
push
jbe
lret
push
flds
jno
or
xor
lock
ficomps
mov
sbb
mov
xchg
adc
orl
cmpsb
cltd
stos
icebp
stc
cmpl
pushf
clc
mov
dec
add
jmp
jp
mov
data16
movsb
call
fnsave
cli
out
xchg
cmpb
jbe
and
add
fcoml
mov
outsb
pop
cmpsl
cmp
mov
mov
popf
out
icebp
add
sub
leave
popa
xlat
and
xchg
stc
dec
test
mov
dec
and
push
and
enter
xor
sub
subl
mov
gs
push
shr
lret
stc
outsb
lret
sbb
insl
nop
mov
cmp
cld
leave
jnp
test
mov
mov
push
scas
or
subb
pushf
loope
mov
fldt
sbb
fsubrs
into
int
adc
f2xm1
sbb
ss
lret
test
mov
loope
test
fnsetpm(287
mov
pop
lea
insl
mov
lea
inc
cmp
push
mov
jmp
lods
lret
sub
xchg
mov
and
mov
xchg
gs
xchg
mov
or
das
ret
pop
push
dec
pusha
xlat
pop
int
in
cmp
mov
or
dec
arpl
stos
jecxz
in
test
rcr
or
cmp
bound
push
out
insb
pop
outsb
cld
mov
add
ret
call
pop
dec
mov
iret
dec
add
sahf
ficoms
scas
pop
cmpsl
dec
test
fdivs
ret
sbb
call
aam
aad
gs
and
shll
scas
push
int
stc
cmp
ss
sbb
int3
ljmp
dec
cmp
and
icebp
jl
mov
movsl
adc
scas
jne
movsb
leave
cmc
jb
add
xchg
push
lcall
push
fmull
test
scas
jno
jmp
out
repnz
xor
dec
adcl
jbe
call
leave
outsb
pop
jne
hlt
insb
js
inc
outsb
ss
xchg
ja
ret
pop
xchg
out
lds
jmp
nop
fnstsw
fs
inc
push
xchg
lret
push
inc
xor
hlt
fisubrl
outsb
nop
shlb
pop
adcl
repnz
sbb
xlat
mov
test
jmp
xlat
repnz
sub
in
cli
dec
ret
loop
imul
xor
lods
sbb
or
shlb
lea
cmp
sbb
movsb
iret
cmp
mov
pushf
ret
xchg
mov
pop
loop
and
jb
lahf
inc
shlb
and
push
adc
add
bound
ficoms
jge
out
sub
stos
push
insw
aaa
mov
adcl
xchg
je
aas
mov
outsb
lea
aad
lods
insb
xor
call
mov
xlat
mov
xor
dec
daa
test
repz
loop
jmp
jb
xchg
gs
testb
mov
arpl
or
jbe
mov
xorl
adcb
mov
mov
imul
mov
insl
aam
int3
aad
repz
adc
stos
mov
loop
and
out
lcall
std
in
pop
adc
std
call
mov
add
mov
or
ret
sub
jmp
dec
jge
test
xchg
ja
into
ja
or
sub
pop
sub
jno
je
dec
arpl
outsl
fcomps
xor
faddl
mov
lret
pop
cmc
xlat
push
xchg
mov
inc
sbb
xorb
or
dec
xorl
mov
test
mov
adc
pop
fs
out
add
rorb
cwtl
leave
vaddps
dec
xchg
add
iret
div
dec
nop
xchg
lock
std
mov
push
stos
mov
repz
fwait
movsb
sub
mov
push
mov
stc
ja
subl
lods
push
inc
cltd
lods
inc
mov
push
inc
arpl
cmp
adc
aam
push
jg
sub
in
icebp
dec
mov
mov
add
insl
out
xor
mov
stc
pop
dec
in
mov
jecxz
in
xor
aas
push
loope
dec
inc
es
sub
in
pop
dec
rorb
inc
pop
cmpsb
cmc
outsl
lahf
xchg
or
fnsave
cmp
push
lahf
int
fsubr
fcomps
jns
cld
imul
cmp
fildll
jne
lds
in
pushl
jno
cmp
orb
adc
fisubrs
jbe
movntps
sbb
inc
dec
je
in
xor
out
and
mov
iret
dec
xchg
dec
div
cmpsb
mov
push
sbb
mov
cmpsl
popf
dec
fsin
imul
popa
pop
ror
gs
inc
ja
sarb
xchg
test
cmp
pop
frstor
lea
lock
std
mov
lea
daa
push
sbbl
push
icebp
fisubrs
push
and
movsl
or
pop
or
pop
shll
js
sbb
mov
lahf
pushf
ret
cmpl
sbb
mov
inc
icebp
mov
scas
cs
pop
add
sub
adc
repnz
mov
xchg
lret
adc
std
pop
push
jae
pop
pop
movsl
nop
jl
dec
adc
add
jb
lods
jbe
mov
xchg
int3
jo
lods
call
inc
xchg
ret
mov
lret
loopne
mov
inc
mov
mov
mov
test
sti
int
add
cld
fisttpl
cmp
out
cmp
sub
xor
aad
mov
mov
inc
adc
or
popf
adc
add
lds
inc
ja
adcb
sbbb
dec
sub
test
and
add
jl
jnp
mov
sbb
xchg
sub
pop
call
cmpl
jp
test
xor
cmp
inc
mov
inc
mov
xchg
stos
add
hlt
mov
cmpsl
int3
into
xchg
cmp
sub
das
mov
std
arpl
gs
xchg
dec
shl
adc
adc
mov
inc
lahf
das
pop
ss
xchg
out
xchg
push
orb
xor
ljmp
mov
cmp
ja
mov
cs
jmp
es
add
mov
jge
stc
sub
xor
stc
faddp
jmp
jnp
xor
jbe
inc
insb
adc
int3
add
sar
fidivl
mov
mov
leave
call
dec
jne
pop
inc
xor
cmpsl
gs
subb
inc
fiaddl
xchg
js
mov
ret
pop
xlat
xchg
push
pop
sbb
pop
add
jb
fisubrl
or
dec
jmp
and
pop
cmc
insb
xchg
xchg
mov
les
fidivrl
pop
ljmp
pop
push
and
push
call
xchg
push
xor
sti
popa
mov
pushf
inc
sbb
stos
jo
pop
cld
add
jmp
xchg
nop
inc
insl
xor
push
lcall
add
mov
cmp
inc
xchg
sti
add
mov
sbb
and
mov
push
jns
sbb
jp
cmp
out
mov
scas
dec
jbe
pusha
dec
add
jp
lret
mov
out
xor
add
pushf
mov
fidivs
test
rcrl
ss
adc
cmp
push
or
std
cs
mov
cmp
popf
pop
adc
int3
iret
les
jns
aas
push
xchg
xlat
stc
xchg
std
cmpsb
clc
adc
repnz
xor
mov
rcll
iret
stc
pop
lcall
xchg
xchg
sahf
push
inc
mov
out
fistpl
negb
xor
lret
mov
fdivs
xor
mov
push
shll
cmp
mov
rclb
jmp
sub
addl
loope
idiv
ror
mov
xor
push
mov
cld
adc
lret
mov
push
fiadds
sarb
cmc
sub
ss
hlt
inc
sahf
ret
adc
lea
sbb
testl
aam
jp
rcll
ret
mov
dec
add
out
cmp
fisttps
imul
fnstenv
sub
push
fidivrs
data16
push
sbb
add
or
ljmp
callw
testb
adc
out
sub
insb
ja
mov
xor
dec
sahf
add
and
out
lahf
mov
icebp
push
sbb
inc
loope
cmc
cwtl
push
jmp
add
jb
scas
push
add
sub
push
or
cmpsb
dec
fldt
jmp
test
jb
lret
jl
sub
add
xchg
sbb
fdivr
data16
into
mov
or
imul
push
das
jg
mov
dec
int
dec
add
push
lret
add
or
pop
aaa
push
repz
clc
sub
in
jl
cmp
jge
imull
insl
sub
pop
fisttpll
xor
outsb
xchg
inc
scas
int
test
pop
xchg
sub
jns
mov
cmpsl
insl
push
sub
push
popf
je
and
cwtl
add
fmul
imul
inc
add
mov
sub
jg
in
test
aam
rol
inc
pushf
mov
jne
and
pushf
cld
sub
movsb
fisttps
pop
and
cmp
mov
fcomps
mov
pop
enter
mov
in
mov
loop
mov
jp
insb
push
adc
dec
mov
stos
pushf
fs
int3
mov
mov
adc
inc
sbb
aas
push
push
pop
xchg
dec
mov
je
pop
cwtl
pop
and
adc
mov
jbe
mov
pop
int3
sub
and
push
xchg
xor
adc
push
lea
xchg
add
lods
pop
sbb
mov
xlat
jne
pushf
in
ja
mov
das
lods
and
xchg
loope
pop
cli
aas
lea
xchg
sbb
xor
pop
aad
adc
jg
push
dec
mov
jecxz
xor
fs
sub
or
pop
xchg
je
and
data16
cmp
stos
popa
xchg
ja
xchg
int
fcmovnu
fwait
stos
gs
pop
mov
lcall
stos
imul
nop
dec
je
out
mov
and
pop
xchg
fiaddl
push
neg
or
and
data16
or
insl
clc
push
mov
jp
xchg
push
add
push
xchg
fiadds
sub
pushf
pop
jge
add
ss
lods
sbb
add
shlb
pop
scas
jae
addr16
cmp
pusha
xchg
sbb
xchg
mov
mov
inc
std
std
push
gs
mov
lods
fimull
sub
aam
pop
scas
dec
ds
push
test
adc
push
test
mov
mov
xor
test
stc
push
insb
dec
mov
fwait
or
jnp
mov
mov
rol
stos
pusha
ljmp
push
sbb
mov
lds
adc
pop
stos
dec
loopne
pop
ret
shrb
jl
gs
clc
and
sub
stc
jne
inc
idivl
repnz
outsb
pop
xchg
dec
imul
and
loop
out
mov
xlat
pop
ds
adc
mov
and
ss
fistpl
jge
jl
test
adc
mov
rep
gs
inc
jo
cs
lods
je
or
jbe
add
sub
aaa
outsb
sbb
and
xor
mov
cmpsl
stc
dec
push
mov
lret
xor
push
inc
xlat
mov
xchg
cmp
nop
mov
pop
inc
pushl
push
jecxz
dec
aaa
jnp
cmp
mov
jae
pop
jno
push
and
clc
jbe
not
lods
sti
test
and
fwait
mov
movsl
dec
or
dec
push
mov
es
cld
int3
mov
cmp
mov
mov
cmp
movsb
test
cmp
push
loopne
lcall
mov
cld
ljmp
xchg
pop
xor
sub
stc
and
dec
xor
fucomi
int
inc
pop
out
mov
rorl
mov
mov
fidivs
icebp
push
xchg
mov
out
jle
sub
in
call
mov
je
aas
dec
jmp
mov
push
inc
popa
stos
and
jae
loop
stc
sbb
cwtl
popa
or
push
sbb
xor
insl
dec
sub
inc
js
iret
pop
inc
pop
pop
sbb
ljmp
cld
std
pop
and
pop
dec
cli
add
pop
repnz
adc
dec
out
mov
loop
mov
mov
mov
ja
inc
add
ss
pop
mov
mov
inc
push
mov
aad
ret
adc
addb
nop
and
mov
inc
mov
loop
nop
sbb
les
inc
push
mov
add
add
jne
xor
int
adc
sub
das
mov
cmp
icebp
push
sbb
adc
mov
ljmp
push
mov
mov
or
mov
lea
pop
iret
adc
fucomip
push
fdivs
mov
loope
inc
ret
adc
push
repnz
gs
int3
adc
fbstp
mov
push
ret
pop
and
test
push
andl
dec
jecxz
mov
mov
mov
cmp
test
and
jo
jne
out
mov
hlt
cmp
push
pushf
mov
pop
clc
divl
cmc
in
mov
add
mov
mov
mov
shll
push
out
test
cltd
dec
xchg
ss
aad
jmp
out
mov
and
out
adc
shrb
cli
inc
out
jo
pushf
mov
les
ja
cltd
and
mov
adc
mov
lock
jecxz
mov
shll
pop
mov
cmpsl
and
sarb
repnz
mov
mov
cmp
cmp
inc
aas
fcoms
pop
push
fwait
cmp
adc
sbb
push
mov
adc
fisubrs
arpl
inc
push
adc
cld
fadds
and
int
sub
jle
xchg
pop
sbb
es
ja
add
shlb
call
fs
ja
inc
adc
mov
xor
mov
addb
xor
xor
lahf
imul
and
dec
mov
cmp
push
stos
pop
sub
cmp
stos
iret
loop
stos
jge
shrb
scas
fsubrl
jb
dec
mov
movl
pop
shll
cmp
mov
mov
mov
pushf
sub
mov
jne
dec
jo
fdivrs
cmp
mov
into
add
fprem1
xlat
iret
in
mov
int
push
inc
xchg
dec
jge
cmp
inc
xor
daa
loopne
dec
or
js
shlb
call
cmp
into
fcomi
cmp
add
pop
inc
inc
add
push
arpl
notl
push
or
sub
roll
jmp
mov
roll
xchg
xchg
inc
xchg
les
xchg
sub
xchg
in
push
pop
dec
loope
xchg
or
negl
push
sbb
or
in
sub
pop
dec
int
jp
shrl
cltd
out
nop
cmp
jmp
daa
jl
cli
jno
movsb
push
xor
fsubrl
jmp
fsubl
mov
cmp
xor
jae
inc
jne
mov
nop
ret
push
jo
add
mov
add
jecxz
int3
xchg
loopne
mov
xchg
pop
jb
dec
xchg
push
negl
dec
nop
sti
pop
insl
sub
xchg
sbb
jp
nop
test
imul
dec
sbbl
jmp
sbb
lods
call
inc
and
into
addb
jns
in
xchg
cmp
xchg
shll
bound
fwait
jae
and
xchg
jnp
and
out
addr16
sub
jb
imul
jge
sub
mov
scas
lods
push
push
push
pop
shll
xchg
fwait
pushf
ret
sub
jnp
dec
repz
xchg
std
hlt
adc
cmpsl
out
push
and
les
in
cmpsl
push
xchg
hlt
shll
xor
js
adc
ljmp
sub
outsb
repz
xor
mov
mov
test
aaa
rorb
pop
mov
mov
dec
or
inc
popa
add
wrmsr
jmp
or
push
push
fidivrl
and
adc
dec
stos
insb
adc
pop
repz
push
mov
ret
int
jp
mov
xlat
clc
mov
pop
sbbl
not
or
vmwrite
dec
sub
scas
adc
sbb
movsb
lahf
mov
fidivrs
xchg
jecxz
in
mov
dec
pop
xchg
dec
fildl
inc
dec
add
push
iret
sub
lods
mov
xchg
push
ss
mov
loopne
repnz
in
test
jb
fnstsw
mov
sbb
mov
sub
or
loop
mov
add
repnz
dec
mov
xlat
bswap
fstp
testb
xchg
lcall
in
push
and
enter
pop
add
rcrb
pop
xchg
cmpsb
enter
mov
dec
ljmp
jnp
inc
sub
push
and
and
push
dec
cmp
add
dec
jae
push
cmc
outsl
adc
filds
inc
jo
icebp
dec
sahf
cmp
pop
xor
es
std
imul
movsb
mov
call
in
frstor
mov
sar
in
das
xchg
fisttps
inc
das
out
psraw
arpl
sbb
mov
into
not
mov
cwtl
jne
outsl
cld
xlat
lods
orl
int
lods
cmp
clc
lock
lods
push
lods
orb
inc
sbb
mov
push
cltd
mov
loopne
ficompl
push
jp
mov
cld
cmp
xor
or
arpl
dec
sbb
daa
sbb
sub
jg
bnd
filds
xchg
adc
es
decb
popa
add
adc
or
pop
cmp
xchg
shll
lret
cld
das
push
fdivl
lcall
jnp
fs
push
in
call
ds
mov
enter
mov
push
sti
repnz
mov
in
mov
adc
mov
jo
push
imul
orl
cld
es
inc
loopne
push
ja
dec
cld
jge
repz
mov
mov
incl
lea
neg
cmc
negb
jp
mov
sbb
add
in
add
ss
popl
pop
jmp
pmaxub
sbbb
stc
loop
xchg
and
jne
jno
adc
movsb
fbstp
movsl
and
fs
insb
inc
inc
outsl
xlat
jae
inc
clc
dec
outsl
mov
int3
lods
inc
or
lock
mov
out
cmpsl
jle
pop
or
mov
fcoml
int
dec
cld
mov
push
mov
stos
aaa
lds
push
mov
sbb
mov
imul
adc
out
jmp
fisubrl
mov
fldt
pop
loopne
inc
mov
cltd
fst
loope
xchg
xchg
repz
jne
outsb
mov
stos
mov
push
pop
adc
loope
cmc
lods
cmpsb
js
and
pushf
inc
inc
hlt
xchg
fsubrp
adc
imul
adc
push
mov
sub
mov
mov
int3
enter
fidivrs
fidivl
cltd
and
incb
iret
cltd
xor
in
adc
add
pop
sub
mov
cli
std
adc
pinsrw
sti
into
in
mov
pop
outsl
mov
push
push
jp
loop
fwait
in
xchg
mov
dec
sub
pop
fstpt
push
fdivrs
push
sbb
jne
inc
or
sbb
ja
dec
out
jge
sub
adc
mov
sahf
sub
imul
js
dec
in
clc
out
movsb
lock
out
mov
sti
mov
mov
adc
mov
mov
cmp
roll
mov
dec
sarb
push
fildl
push
or
outsb
sarl
jle
ret
xchg
and
dec
cmpsb
jmp
xor
cmp
aaa
ds
dec
cs
fs
xchg
xor
xor
jo
xchg
stos
leave
jbe
sub
icebp
pop
addr16
xor
pop
lahf
out
jl
mov
add
adc
mov
jnp
stc
out
rcll
mov
fmull
test
inc
aam
cmp
aaa
clc
push
fists
cmp
xor
lret
icebp
fdivr
inc
jge
xchg
cltd
mov
cbtw
test
cmp
cs
or
sbb
bound
jns
arpl
or
dec
lods
xchg
dec
in
or
inc
xchg
out
daa
stos
sub
ja
mov
lahf
ffreep
jns
repnz
bound
xlat
call
dec
or
je
fdivl
mov
dec
ret
mov
push
adc
mov
jle
outsb
lock
shlb
mov
adc
aam
dec
dec
sub
push
aas
dec
lds
pop
insl
dec
cmp
cld
je
movsl
mov
scas
sbbl
or
shlb
mov
mov
ror
loop
cmp
clc
cmpsl
mov
mov
sbb
push
repz
filds
xlat
shl
shlb
rdmsr
rol
mov
popa
push
mov
jle
xor
loope
test
pusha
ja
xchg
test
test
pop
adc
pop
or
dec
or
int
and
dec
jl
lret
xor
jmp
out
shlb
add
inc
sbb
insl
mov
push
xchg
popa
pop
loopne
and
int3
js
jne
push
sub
jno
push
mov
adc
sub
sbb
fisubrs
mov
idiv
jns
xor
mov
cmpsl
xorb
push
ret
dec
in
dec
aad
jle
mov
inc
outsb
in
movsl
jge
xor
test
gs
jl
test
pop
jnp
push
dec
fwait
dec
out
mov
aas
mov
inc
scas
inc
pop
fcompl
sub
out
out
jecxz
int
jno
inc
push
push
mov
out
imul
jge
lock
jmp
data16
xchg
sub
mov
inc
xchg
repnz
cmp
dec
lock
pop
movsl
and
mov
ljmp
mov
push
adc
aas
inc
jg
inc
push
aam
mov
andl
lods
lahf
sbb
test
pop
xchg
add
cli
mov
cmp
cmp
out
stc
mov
push
mov
pop
lods
mov
cli
xchg
ja
inc
jl
pop
mov
cmp
ss
icebp
mov
pop
dec
outsl
push
mov
adcl
xor
insl
pusha
add
loopne
lahf
push
jb
es
xor
and
aas
xor
jbe
ss
pop
stos
jbe
lret
fimuls
popa
cmp
test
out
enter
inc
movsl
movsl
mov
mov
test
lods
ds
bound
jp
aad
enter
imul
fiadds
mov
xchg
rorb
and
call
es
lods
sbb
or
mov
push
fwait
gs
fsubr
xor
sub
imul
mov
iret
mov
dec
aad
rcl
test
aad
add
add
nop
jns
pop
icebp
shlb
dec
fcomps
es
xchg
das
rorb
popf
inc
fidivrs
pop
cmpb
sub
or
ljmp
or
cld
mov
ret
and
fisttpll
mov
dec
lods
imul
pop
mov
and
arpl
in
inc
cmp
or
aas
es
jbe
and
xorl
shrb
xor
std
add
xchg
pop
decl
roll
rorl
outsb
add
aad
mov
jmp
test
stos
jbe
and
pop
jns
iret
jmp
loope,pn
push
mov
add
inc
mov
mov
mov
xchg
dec
jmp
cltd
mov
shll
decb
dec
rorl
push
pushf
pop
popf
rolb
dec
shrl
xor
shlb
adc
ret
jle
daa
scas
cs
mov
pushf
fcomps
jle
inc
imul
stos
xchg
lcall
cs
test
pop
jl
cmp
lock
add
lret
push
in
lea
xor
mov
repz
adc
inc
imul
xchg
adc
addr16
lret
test
jg
xchg
test
popf
mov
addr16
aam
and
cmc
fst
iret
xor
mov
dec
repz
in
and
test
mov
pop
jmp
xor
movsb
push
jbe
add
popf
or
arpl
test
frstor
sbb
adc
mov
scas
inc
jae
pop
popf
outsl
add
or
xor
dec
stc
push
mov
jmp
sub
fwait
jno
cmp
sahf
cmp
lahf
outsb
adc
jmp
mov
daa
mov
xor
adc
lret
cli
test
adc
xchg
fcompl
jb
imull
xchg
cmpb
xor
inc
sub
sub
sbb
jbe
inc
push
pop
dec
ret
jnp
jmp
mov
mov
xchg
ljmp
mov
pop
mov
mov
rcrl
jne
mov
in
and
sbb
mov
mov
xlat
stc
mov
mov
sub
cmp
shlb
adc
mov
adc
pop
push
push
pop
xchg
mov
jg
sbb
scas
aaa
dec
leave
sahf
lock
jecxz
xchg
mov
mov
or
xchg
add
sbb
xchg
pop
mov
mov
in
dec
push
mov
hlt
adc
jmp
xchg
out
mov
mov
mov
inc
notb
ljmp
cs
xchg
repnz
mov
rorb
mov
cmc
ds
rcll
cmp
xor
bound
jnp
ja
imul
aaa
cwtl
xchg
mov
inc
popf
lea
movsl
push
pop
xchg
lods
push
lea
loopew
xchg
push
mulb
mov
daa
adc
adc
hlt
cwtl
pop
xchg
inc
dec
shll
mov
mov
pop
ret
lahf
clc
outsl
cmpsl
shl
xchg
jg
or
les
into
push
cmpsl
daa
lret
loope
lahf
mov
and
mov
cmp
fistpll
pop
mov
push
fidivrl
mov
cmp
pop
pop
insl
cld
inc
adc
and
lahf
call
jb
popf
pop
jmp
jae
lret
pop
aas
cmp
sbb
cs
stos
mov
scas
movsb
out
adc
adc
mov
sbb
inc
push
or
lds
test
push
lret
shlb
push
add
dec
das
inc
or
adc
lret
mov
in
fistl
iret
subb
ret
mov
testb
adc
in
mov
out
fmull
rcll
sub
std
int3
jnp
mov
and
bound
sub
mov
pusha
sbb
or
pop
adc
mov
xchg
int
and
jg
shl
ret
popa
mov
mov
jae
lahf
and
or
inc
fdivp
jle
sbb
into
adc
mov
insl
imul
push
sub
mov
or
flds
testl
popf
imul
xchg
out
pop
fwait
add
jb
inc
and
data16
pushf
mov
lods
jb
pop
daa
jnp
daa
outsl
push
outsl
popf
or
push
out
imul
xor
mov
js
push
jne
or
cmpsl
cmp
xchg
lods
sti
popl
push
nop
dec
lods
or
roll
jmp
fsubrl
pop
cmp
das
sub
lds
jae
and
in
add
aad
cwtl
push
jbe
arpl
xlat
jae
ret
cmc
jmp
xor
or
lock
dec
xlat
mov
push
mov
adc
or
jl
push
mov
int3
or
dec
cmp
fisttpll
inc
gs
out
leave
jp
cmp
inc
shrb
and
jae
mov
popw
push
xchg
sbb
scas
popf
cmp
mov
mov
roll
push
jo
mov
adcb
dec
xlat
jle
adc
xchg
test
std
xor
and
pop
push
fbld
jns
mov
mov
test
mov
jb
das
and
nop
ljmp
mov
push
inc
cmpsl
les
pop
mov
add
ret
pop
movsb
ss
pop
mov
xchg
xor
mov
dec
xor
movsl
add
xor
sti
subb
test
xor
add
hlt
pop
jne
pusha
xchg
lcall
daa
push
cmpsb
aas
xchg
repz
adc
loopne
dec
pop
enter
xchg
rclb
cmpsl
pusha
loop
adcb
rol
out
push
lds
iret
in
jmp
xor
movsl
jnp
pop
rol
add
or
scas
movsl
pop
pop
lock
xchg
outsl
insb
lret
xor
js
sub
xor
inc
loop
xchg
popa
mov
mov
lods
dec
out
out
jno
test
out
jnp
hlt
imul
lea
sarb
notb
xchg
sbb
loopne
inc
lods
add
sbb
mov
cmp
std
pusha
pop
in
sub
inc
stc
xor
push
mov
mov
mov
adc
movsl
adc
outsl
fmul
inc
jmp
sahf
xchg
xor
and
dec
push
imul
cmpxchg
int3
dec
leave
in
enter
dec
push
xor
xor
in
jmp
loopne
loop
js
cmc
fcompl
addr16
pop
push
mulb
xor
xor
je
fistpll
sbb
adc
fdivs
std
cld
sbb
xchg
lods
in
sbbb
mov
stos
mov
and
dec
repnz
aaa
sbb
int
fcoml
decb
jmp
push
stc
mov
int
mov
inc
adc
pop
jo
stos
or
cmp
filds
xor
scas
into
push
ret
in
lret
xor
outsb
add
sahf
faddl
sbb
xchg
mov
mov
mov
xchg
dec
push
jne
mov
jl
mov
fstps
push
mov
and
jl
xchg
mov
int
xor
pop
adc
add
sbb
arpl
or
fcmovu
scas
fidivl
mov
mov
leave
gs
jns
xor
add
leave
xor
xchg
jbe
imul
test
inc
or
jl
idivl
sbb
shrl
mov
pop
fistpll
fsts
add
fistpl
lahf
adc
mov
and
jns
add
daa
adc
xor
addr16
sbbb
mov
or
out
pusha
mov
addr16
in
and
jb
sbb
pop
aad
dec
lds
add
dec
mov
mov
xchg
fmuls
fwait
inc
push
cmp
or
pop
out
mov
and
call
xor
hlt
mov
rolb
mov
add
or
fs
enter
stc
repz
or
movsb
jb
xchg
push
or
lahf
popf
mov
mov
lret
mov
adc
push
mov
push
in
mov
ljmp
push
sbb
cmc
loopne
sbb
pop
xor
inc
mov
je
scas
push
dec
jle
adc
outsb
pusha
xor
jge
movsb
es
mov
and
cmp
roll
cmp
scas
sbb
xchg
fidivl
sbb
leave
andb
xlat
imul
mov
and
cld
in
jnp
cmpsb
jo
cmp
adc
push
enter
adc
hlt
sbb
pop
ljmp
xor
out
call
hlt
xlat
jo
iret
jle
xchg
in
paddusw
jbe
adc
push
in
mov
mov
adcb
cmp
movsl
mov
and
cmp
pop
sub
xchg
repnz
pop
push
push
mov
xor
mov
or
push
jns
pop
int3
pop
mov
std
adc
int3
faddl
insb
mov
jmp
sbb
lret
lahf
jle
inc
test
xchg
loope
jp
pusha
mov
je
push
mov
push
add
sub
mov
jle
inc
outsb
sti
pop
cmp
out
mov
bound
jg
and
aad
add
call
sar
cmp
dec
or
sbb
cmp
cmp
push
in
aaa
sub
cs
jg
test
test
scas
cwtl
mov
or
out
sbb
dec
cmp
push
hlt
jb
out
outsl
xchg
aad
fisttpll
inc
in
stos
out
scas
dec
cmpsb
movsl
push
loope
cmpsb
jb
jle
xor
loope
cmp
dec
jl
pusha
or
dec
mov
jl
test
outsb
sub
mov
fstpt
xor
fadd
pop
in
xor
mov
xchg
shl
loopne
and
jnp
mov
mov
cmpl
push
sti
pop
pop
push
xor
iret
lds
adc
jg
jge
or
inc
stos
testl
mov
or
push
sbb
xor
jnp
xchg
cld
xchg
cltd
and
mov
adc
rclb
mov
jecxz
mov
sub
int
pop
pop
adc
cmp
cwtl
and
and
test
imul
jg
and
xchg
fs
cmc
mov
test
lock
jmp
aaa
aad
jo
aas
xor
hlt
mov
dec
popf
int
jl
mov
dec
mov
mov
mov
inc
imul
fdiv
lea
stc
addr16
push
cltd
popa
mov
pusha
sahf
jg
mov
addr16
mov
xor
xchg
lret
pop
sub
out
sub
dec
scas
daa
andps
jge
jnp
push
jmp
mov
in
ljmp
mov
pop
add
aad
into
and
sbb
xchg
dec
scas
inc
sbb
xor
jo
xchg
fs
fidivrl
jmp
jge
ror
push
pop
push
fdivrl
mov
shrl
test
sub
lea
xchg
add
adc
push
mov
call
stos
or
xlat
loop
push
out
loop
push
rorl
push
xchg
xchg
fstl
jae
std
lret
int3
mov
ds
cmc
mov
movsb
mov
test
inc
xchg
push
mov
dec
stc
mov
mov
add
test
jle
aas
inc
out
ss
inc
pop
dec
pop
jns
jl
daa
mov
mov
out
cmpsb
test
lods
mov
into
cmpsl
push
testl
dec
lock
ja
movsb
push
sbb
loope
aam
inc
stos
fcmove
jae
xchg
int
outsb
mov
jmp
insl
mov
mov
sub
leave
or
pop
push
js
shlb
dec
sbbb
pushf
jb
cmp
pop
cmp
imul
sub
insb
sarl
clc
add
scas
push
cmp
aas
lret
xchg
iret
mov
adc
rep
jo,pn
aad
out
lahf
jno
ja
outsb
icebp
adc
or
ret
into
push
or
aad
hlt
cltd
jmp
repz
push
mov
mov
arpl
stos
cmc
add
fcoml
push
jno
or
inc
leave
jbe
mov
loopne
ljmp
ljmp
pop
js
cmpl
repnz
cmp
rcl
movsl
stos
lock
mov
in
repz
in
ror
push
xor
xor
and
jbe
add
mov
jmp
or
push
xor
cmp
mov
add
dec
sarl
stos
or
pop
popa
add
mov
loop
mov
shlb
dec
pop
jge
xor
adc
pusha
aam
lods
lds
cli
lret
pop
dec
cmp
fimull
xchg
and
imul
mov
dec
and
into
jg
or
xchg
mov
cmc
cmp
add
inc
mov
adc
repz
ror
lahf
sbb
nop
pop
push
ja
enter
out
inc
inc
jo
cmpl
add
es
enter
xchg
in
ja
ljmp
jnp
shlb
insl
jmp
stos
mov
clc
loopnew
jnp
and
cwtl
add
mov
sub
add
fwait
sarl
xor
xor
mov
scas
jns
mov
mov
push
addr16
mov
sbbb
dec
dec
cmp
xlat
std
popa
jmp
jb
sti
push
ljmp
and
in
popf
leave
jg,pt
add
pop
xchg
or
js
add
push
mov
scas
add
sub
adc
mov
pop
inc
mov
lret
mov
call
loop
push
loope
pop
int3
call
setno
cld
mov
lock
test
loop
jecxz
outsb
add
loop
pop
bound
test
inc
out
adc
pop
xlat
lcall
add
fistl
xor
repz
into
cmp
jle
sbb
sub
or
jl
sbb
int
insb
je
xor
sar
dec
dec
jae
loop
fisubrl
xor
cbtw
sub
sub
mov
testl
inc
or
jne
and
cmp
xchg
mov
iret
stos
and
mov
flds
fiaddl
and
add
subb
int
xor
dec
jg
jecxz
mov
sub
mov
add
inc
jmp
jge
push
push
loop
mov
loopne
pop
mov
dec
sub
inc
mov
testb
inc
fdivl
roll
mov
sahf
jbe
mov
mov
aas
pushf
push
cmp
enter
cmpsl
pushw
das
mov
stc
xchg
sti
mull
dec
push
ss
aas
loope
sub
divb
add
add
inc
imul
xlat
in
xor
lret
mov
cmp
push
lcall
movsl
or
or
imul
mov
enter
ljmp
mov
imul
mov
pop
lea
fimull
push
add
or
dec
cmpsl
pop
in
pop
jmp
jge
mov
test
mov
and
cmp
out
pusha
dec
cs
pop
sti
sti
pop
ret
add
bound
jg
pusha
or
adc
ds
cmp
aas
sahf
push
call
mov
push
fsubs
shrb
inc
pusha
pop
push
pop
jae
and
sarb
cmpsb
bound
xchg
stc
cmpsl
in
xchg
shlb
test
stos
fistpl
outsl
sarl
adc
sub
pop
sahf
aam
pop
sub
mov
sub
int3
jp
lret
test
sub
loope
pop
inc
pop
jae
sub
push
popf
clc
xor
notb
fsubrl
and
shlb
xchg
add
inc
ret
and
xor
pop
lret
jecxz
xor
jns
inc
pop
lds
sub
dec
cli
inc
int
adcl
jns
adc
insb
pop
sahf
je
mov
dec
jmp
sub
js
mov
jmp
fimull
sub
or
xchg
std
clc
push
or
pop
push
push
sbb
sbb
call
aas
pop
dec
testl
push
daa
add
sub
loope
insb
imul
adc
loope
adc
in
fs
lahf
movsb
jae
jg
lods
int3
or
push
jno
mov
clc
sbb
xor
jbe
push
ja
inc
dec
dec
sti
ja
adc
jne
fldl2t
icebp
add
ds
push
add
cltd
daa
push
adc
lea
cmpsl
test
mov
xchg
xchg
rolb
sarb
add
dec
xchg
ja
push
cld
add
scas
pop
ljmp
outsb
jb
into
pop
repz
cmp
ss
xchg
xchg
sub
lahf
pop
les
xchg
or
lock
and
ljmp
je
test
arpl
call
mov
mov
add
addr16
loop
loope
popf
hlt
mov
call
inc
inc
mov
mov
out
dec
push
popf
xchg
test
scas
mov
les
aaa
xor
lods
adc
aam
adc
mov
xor
or
loope
jne
pop
cmp
notb
mov
add
xchg
push
int3
jnp
js
cwtl
jecxz
mov
je
push
cwtl
scas
scas
hlt
pop
sahf
dec
ja
out
mov
out
push
repz
adc
shlb
mov
push
xchg
jo
clc
jnp
fistpl
adc
dec
addr16
insl
push
pop
dec
cmp
stc
mov
adc
jge
mov
rorl
outsl
icebp
cmpb
cld
shlb
mov
push
subl
or
aas
dec
lods
cmc
mov
repz
std
cmp
cmc
inc
pop
or
fcomps
in
and
mov
faddl
out
jl
add
cwtl
xchg
mov
jno
and
add
and
ja
movsb
leave
mov
inc
cmp
fistps
mov
repnz
out
out
jmp
pop
pop
rorl
xchg
xlat
fadd
pop
cmp
clc
inc
xchg
cmpsb
fs
pusha
je
movzwl
sbb
sub
push
fsubrl
inc
push
mov
loopne
xchg
cmc
jne
movsb
fisubs
mov
fwait
jecxz
lcall
lahf
insl
shll
push
cltd
in
fxch
inc
push
jmp
mov
cmp
add
cmpsl
sbbb
xchg
inc
xchg
inc
or
xchg
push
test
subb
adcl
pop
cwtl
jp
xor
cmpsl
cli
push
mov
movsl
or
dec
cmpsb
orl
stos
jge
negb
inc
in
push
ret
int3
sub
or
scas
mov
loopne
xchg
push
lahf
stc
mov
andl
xor
daa
jno
cmp
adc
movsl
inc
mov
stos
aaa
mov
pop
insl
ror
adc
mov
push
sbb
jl
mull
xor
sar
push
cmp
popf
cmp
mov
fldcw
or
mov
jge
jecxz
fiadds
mov
mov
int3
mov
pop
jmp
or
sub
lods
push
das
stc
jo
sub
das
mov
jns
xchg
popa
ljmp
fldt
xor
xchg
ss
cmp
jne
fwait
pushf
in
sbb
push
hlt
fidivrl
mov
arpl
mov
insb
stos
sub
imul
mov
fldt
lds
iret
adc
lods
clc
call
inc
fcomps
pop
dec
mov
scas
mov
mov
std
jbe
outsb
fs
jbe
xor
ficoml
out
movsl
test
arpl
out
cmpl
dec
xchg
mov
std
popa
and
mov
les
mov
es
sub
xchg
out
call
call
filds
mov
sub
xchg
ret
mov
xorb
repnz
fninit
xor
movsl
add
daa
cs
sbb
mov
es
sbb
addl
xchg
subl
stc
test
dec
cmpsl
ss
repz
mov
mov
mov
cmp
xchg
addr16
int
adc
fcoms
mull
xchg
dec
in
push
jg
fxch
pusha
jne
sub
arpl
and
ljmp
sub
mov
inc
pop
rcrl
jo
cmp
sub
push
je
fs
add
push
mov
adcb
mov
mov
int
add
aaa
sub
decl
and
out
xchg
outsb
xchg
scas
xchg
cmp
insl
cltd
or
cmp
gs
mov
inc
insb
jae
sbb
rcll
int3
mov
test
test
inc
pop
fldl
push
jmp
push
push
ret
hlt
push
lahf
jg
sarb
push
mov
mov
dec
or
mov
mov
mov
pop
mov
gs
imul
out
push
or
cwtl
pop
test
jle
movsl
into
jp
int
divb
ja
sti
mov
xchg
xchg
pop
jle
jmp
mov
cmp
into
mov
lcall
in
cmpsl
mov
dec
mov
cmpsl
insb
xchg
dec
repz
dec
loope
adc
cmp
xchg
loop
adc
push
repz
adc
test
pop
dec
lret
cs
jns
jns
and
jns
mov
xchg
cmp
in
xor
arpl
xlat
jle
idiv
mov
xchg
lea
scas
adc
pop
xlat
loope
fildl
aad
lret
jnp
push
push
xor
push
cli
lcall
push
add
jbe
movl
pop
dec
repz
ja
mov
push
and
out
jp
mov
shrl
in
mov
shrl
loopne
adc
aaa
fs
test
mov
xor
cmpsb
test
shll
into
xor
ret
mov
jecxz
mov
jae
cli
sub
data16
pop
pusha
adc
mov
xchg
pop
bound
mov
push
in
lock
fsts
xchg
cmp
shlb
aam
xchg
xchg
mov
and
subl
mov
mov
fstp
pop
nop
adc
xchg
cmpsl
xchg
rorl
pop
sub
jp
scas
mov
test
inc
stc
xor
pop
mov
dec
jns
xchg
test
mov
sar
push
inc
ja
stos
add
or
imul
ss
arpl
fcmovnb
push
sbb
fisubrl
mov
std
pop
and
mov
add
pushf
mov
lods
fiaddl
xor
dec
inc
xchg
jno
rolb
mov
or
pop
call
and
xor
cli
sub
and
jecxz
mov
jge
dec
scas
iret
repnz
cmp
add
je
mov
cs
jne
lods
cmp
pop
jne
lods
popf
jle
xchg
es
insl
push
cmp
ljmp
xchg
ss
sub
fnstcw
in
int3
jecxz
fsubr
lret
sti
push
cmpb
mov
xlat
and
sbb
movsl
mov
xchg
out
add
outsb
xor
jmp
int
ds
cmp
mov
dec
mov
test
mov
loopne
pop
push
xchg
add
pop
jmp
lock
insb
mov
dec
and
popf
jno
int
xchg
into
into
sbb
push
loop
cmc
inc
sti
movsb
int3
jg
loopne
imul
xor
ss
mov
jp
in
xchg
cmpsl
rcrb
jb
push
inc
cmc
iret
mov
mov
add
ficompl
sbb
out
push
test
clc
xchg
imul
lahf
scas
test
jo
inc
add
mov
pop
sub
mov
loop
xchg
popf
loopne
into
push
faddp
pushf
sub
enter
mov
mov
imull
iret
inc
inc
call
sub
mov
ds
ret
sbb
lret
jns
xchg
in
sub
test
rcrb
lods
dec
pop
into
cmp
push
lret
adc
sbb
fmull
jb
lret
inc
adc
and
repnz
adc
into
in
mov
jle
xchg
ret
mov
sbb
test
adc
inc
sbb
dec
sbb
xor
stos
fbld
and
lahf
mov
sti
iret
leave
mov
pop
out
insl
subl
shll
enter
mov
insl
dec
add
jno
mov
mov
fstps
or
int3
cmp
xor
sbbb
and
dec
and
mov
int3
iret
aad
fdivs
mov
incl
mov
lret
testl
dec
sbb
repnz
or
add
sarb
cs
adc
xchg
sti
decl
pusha
rcll
cmc
testl
es
fdivp
dec
push
cmp
nop
stos
frstor
daa
shl
add
mov
mov
loop
dec
push
addr16
mov
xor
sub
or
loope
mov
adc
mov
outsb
les
aad
jge
imulb
lods
push
jl
hlt
xchg
test
xor
shrb
movsb
int
in
data16
jmp
push
lods
and
jbe
inc
cld
dec
mov
imul
jp
outsl
cmp
shll
rcrb
ds
pop
test
xchg
sbb
jbe
jbe
xchg
or
jnp
pusha
dec
popa
inc
add
xor
arpl
xchg
mov
fcmovnbe
sahf
sbb
add
cmp
in
mov
sbb
sbb
adc
es
mov
rcrb
sti
pusha
subb
loop
bswap
daa
mov
lret
xor
aaa
and
jmp
and
mov
adc
adc
leave
cmp
inc
loopne
inc
xor
lcall
and
sbb
mov
xchg
jnp
ds
sbb
add
mov
mov
pop
cmc
cmp
scas
and
pop
adc
sti
xchg
daa
add
test
vdivsd
xor
dec
in
roll
and
push
daa
adcl
sti
int
jmp
cld
jg
add
stc
pop
xchg
stos
pop
pop
loop
sahf
pop
or
mov
jmp
das
push
pop
faddp
fs
cmp
repnz
mov
mov
pop
mov
fisubs
lock
jne
xor
testb
mov
outsb
imul
shrb
jmp
xchg
lea
or
stos
push
fmulp
insb
and
iret
pop
pushf
sbb
stos
cmp
xchg
inc
mov
xchg
dec
mov
mull
repnz
test
scas
nop
les
and
push
pop
push
jo
out
dec
and
movl
insb
insl
push
adc
inc
inc
xchg
es
ljmp
cmp
pop
or
jmp
int3
add
lock
fidivl
jo
push
ds
cwtl
xor
jno
das
lds
das
les
ja
negb
ss
inc
sbb
aas
jle
iret
mov
adc
lds
mov
shlb
clc
pushf
xlat
std
aas
jmp
xor
jno
adc
mulb
mov
ret
cmpsb
dec
sarl
cmp
cmp
ret
inc
out
jo
into
push
jmp
sub
addr16
sub
sub
dec
or
cs
xchg
test
jo
sbb
jns
sbb
mov
loop
or
mov
mov
and
mov
imulb
pop
dec
cmpsb
jecxz
or
pop
cmpsl
jle
sbb
movsb
dec
mov
jg
inc
ret
inc
scas
jnp
scas
testb
inc
add
stos
inc
dec
fdivs
sarb
jl
jg
mov
mov
pop
in
inc
mov
inc
lret
ljmp
leave
das
xchg
fs
fisubl
out
jns
inc
inc
aad
pop
in
inc
aas
icebp
hlt
and
mov
add
call
aas
and
xchg
xlat
pop
push
mov
push
sub
mov
movsl
out
pop
ret
inc
mov
es
arpl
fwait
adc
jo
mov
mov
outsb
out
rorl
jg
stc
shlb
inc
imul
fsts
in
es
jp
aas
inc
scas
fcoms
test
daa
mov
fldl
mov
sbb
loop
ja
inc
cmp
jmp
and
aas
xchg
divl
jns,pt
movsl
clc
daa
call
int3
ret
jns
mov
sub
push
adc
xchg
add
pop
aad
mov
fstps
lret
push
lds
lds
fistl
rcll
push
push
and
adc
dec
add
xlat
dec
scas
sub
outsb
jns
popa
inc
inc
roll
adc
stos
repz
hlt
mov
adc
inc
xor
mov
cmp
add
push
push
mov
sub
es
mov
ret
sub
out
inc
jg
ret
jmp
add
loopne
sub
pop
int3
or
push
mov
pop
fsqrt
dec
mov
push
pop
dec
push
xor
or
adc
imul
test
sub
inc
push
jbe
arpl
scas
add
repnz
sti
cmc
jecxz
pop
ss
stos
xor
loop
dec
pop
mov
add
jmp
sbb
sub
ficoms
out
mov
push
dec
pop
and
pop
idivb
inc
adc
icebp
xacquire
inc
mov
dec
sbb
mov
sahf
pop
bound
aas
in
lock
mov
xchg
push
dec
push
scas
mov
lahf
cmovl
xchg
fstpl
mov
and
fwait
in
call
loope
lahf
push
das
dec
hlt
addl
out
sbb
xor
inc
imul
adc
add
in
iret
dec
popa
fiadds
pushf
cmc
sub
xchg
inc
scas
mov
adc
jge
jnp
mov
and
xor
mov
inc
das
in
sar
xchg
pop
in
fs
hlt
dec
mov
sbb
push
push
mov
outsb
cmpsl
pop
xchg
mov
add
lcall
pop
adc
push
popa
test
cmp
pop
repnz
cmp
pushf
filds
fiaddl
ror
and
jne
insl
sbb
aaa
sub
push
adc
fwait
inc
adc
adc
dec
out
shll
cmp
stos
mov
rcrb
add
insl
adc
pushf
mov
hlt
and
cmp
iret
add
lret
int3
dec
sti
inc
popa
or
sti
dec
lock
push
and
push
inc
imul
arpl
xchg
pop
out
inc
movsb
sti
add
test
or
je
jp
insb
fcmove
test
sub
xlat
daa
mov
inc
cs
and
adc
xchg
dec
mov
mov
insb
lcall
sub
or
sub
lret
xchg
push
jle
hlt
je
shlb
xchg
or
lcall
popfw
das
fistpl
jl
lods
test
jmp
mov
sub
stos
pushf
xor
mov
into
pop
mov
stos
mov
in
out
sub
mov
fwait
pop
test
faddl
cmpsb
clc
daa
jmp
mov
test
cwtl
inc
imul
xor
cmpsb
mov
adc
cld
shlb
cmp
aad
fisttpll
rcrb
adc
insl
push
jl
paddsb
outsl
sbb
xchg
xor
ret
je
scas
lea
pop
insb
scas
sub
imul
movsb
cmp
shrb
push
cmc
hlt
or
popf
inc
js
mov
mov
inc
cmpsl
lret
or
in
jbe
dec
sti
fcmovne
out
mov
jmp
lret
push
pop
mov
jg
hlt
push
or
jae
push
sbb
mov
dec
or
dec
push
sti
test
ljmp
pop
adc
sub
push
cli
cmp
loope
pop
sub
jo
shrl
rcr
fidivs
xorl
sub
inc
sub
movsl
cmc
sbbb
cmp
sbb
jecxz
mov
lods
test
aam
push
ja,pn
jb
mov
jne
jns
insb
xor
fstp
inc
les
imul
or
xchg
and
cmp
sub
cmp
inc
stos
and
sub
adc
jl
int
fst
xchg
mov
adc
xchg
xchg
ret
cmpl
jecxz
jmp
into
fwait
push
jbe
mov
push
mov
aaa
jb
sbb
pop
xchg
mov
adc
jbe
mov
xchg
insl
sahf
xlat
push
into
xor
sub
pop
adc
mov
scas
pop
cmpsb
scas
mov
cmc
mov
out
loopne
mov
inc
pop
test
sarl
stc
jae
bound
loopne
in
inc
test
dec
push
push
add
sbb
mov
inc
dec
orl
mov
les
jnp
push
cltd
dec
push
call
sub
hlt
push
inc
leave
inc
leave
adc
mov
mov
cld
imul
pop
inc
je
mov
inc
jb
adc
sbb
sub
stos
adc
dec
hlt
xor
cmpsl
xor
sbbl
icebp
jbe
cmp
jno
loopne
dec
icebp
sbb
jle
lahf
lods
fcomp
mov
std
test
imul
pop
scas
jae
xor
or
xchg
test
xor
or
and
mov
fucom
dec
subb
push
jne
sbb
xor
mov
pop
cwtl
xchg
push
mov
xchg
sub
pop
sqrtps
mov
cs
cld
jl
or
adc
inc
pushf
or
sbb
xor
repnz
ljmp
push
adc
test
xchg
cmp
dec
lea
cmp
adc
sub
ds
adc
sbb
cmp
in
fistl
cmp
mov
popa
jns
into
xchg
mov
xchg
sarb
sub
hlt
cmc
fsubrl
movsb
push
dec
cmp
or
jmp
gs
xchg
into
cmpb
dec
sbb
int
ret
mov
add
xlat
sbb
xchg
dec
or
out
mov
jg
loope
es
push
xorb
popa
mov
in
inc
das
pop
or
adc
stos
andb
and
mov
dec
ficomps
pop
mov
shl
pop
incw
std
inc
out
int
mov
aaa
mov
xor
loope
inc
adc
xchg
mov
jae
mov
int
fcoml
out
test
xor
adc
mov
out
rcr
sub
or
insl
shrl
push
inc
lea
pop
or
stc
addr16
popa
ret
add
push
rorb
repz
leave
inc
mov
mov
lea
fidivrs
xchg
inc
mov
xor
xor
inc
xor
jge
inc
adc
lahf
ss
dec
ds
repz
push
orb
add
and
pop
call
add
lret
xor
das
jle
iret
daa
add
mov
and
test
mov
leave
dec
and
sahf
cmp
inc
adc
or
sub
inc
mov
idiv
stos
pop
mov
fdiv
in
daa
xor
out
jnp
add
loope
xchg
xor
repnz
inc
inc
and
shrb
xor
and
pusha
or
add
flds
aad
cmp
gs
jmp
rcrl
sbb
mov
loope
scas
insl
jb
leave
clc
ja
leave
cmpsb
rorb
push
fnstenv
pushl
jle
in
stos
sub
jle
iret
mov
pop
mov
push
push
push
and
jo
stc
int3
out
std
popf
addb
icebp
cld
pushf
mov
popf
mov
mov
adc
lods
leave
jbe
mov
scas
pop
shrb
mov
loope
movb
and
pop
push
imul
fs
sarb
xlat
jge
subb
mov
mov
lret
xchg
fistps
test
bound
fs
lcall
jns
shr
mov
ss
sub
mov
cmp
mov
insb
insb
nop
scas
pusha
fstl
test
xchg
je
imul
fsts
int
dec
push
adc
sbb
lock
add
out
fldenv
test
popl
sti
and
ds
notl
jmp
push
out
dec
loopne
rcrl
mov
inc
in
popa
js
cmp
lret
lret
frstor
je
sub
repnz
inc
mov
cli
mov
push
mov
lock
mov
push
mov
jno
push
test
jmp
add
outsl
scas
xchg
lods
shll
sbb
mov
push
js
add
imulb
arpl
test
cmp
jb
clc
xlat
jle
jl
aam
fdivrs
mov
stos
popf
aas
sub
es
push
dec
pop
or
loopne
or
jnp,pn
fs
jne
xor
cmpsl
hlt
test
cmp
jbe
add
int3
cli
or
or
cwtl
cld
dec
sahf
das
insb
jmp
outsb
fcmovbe
pop
inc
mov
ljmp
dec
lods
decb
out
push
cmp
das
sub
dec
xchg
mov
and
xchg
lret
pop
mov
pusha
clc
pop
lock
and
xchg
aad
push
out
fidivrl
mov
sbb
insl
addb
jle
add
dec
aas
ljmp
stos
and
mov
pop
ja
and
aam
cltd
out
mov
in
and
dec
xor
add
call
sbb
lods
imul
pop
shrb
add
pop
mov
dec
lcall
popl
stc
mov
loop
repz
inc
inc
in
sbb
pop
add
push
mov
int3
sub
mov
out
mov
stos
out
popa
mov
sbb
les
out
addr16
aas
shlb
mov
ljmp
sub
xor
movsl
inc
fs
push
ja
mov
pop
mov
cld
aam
adc
sbb
mov
lcall
pop
insl
clc
loopne
cmc
daa
adc
add
cmp
gs
cltd
cmp
imul
adc
fwait
cmp
xchg
sahf
cmp
push
sbb
dec
mov
sbb
mov
sub
dec
in
stc
pushf
or
pop
and
movsb
psrad
leave
adc
ret
mov
inc
lcall
inc
jle
jg
pop
notl
mov
in
fcmove
sub
push
movsb
and
and
ret
xchg
adc
loope
dec
push
push
dec
push
xchg
mov
mov
icebp
ja
js
out
mov
in
loope
jmp
lock
xchg
mov
xchg
lds
hlt
arpl
movb
pushf
and
push
jns
adc
popa
xchg
dec
dec
sbb
dec
mov
lcall
movsb
fildll
push
mov
mov
cmpsl
inc
gs
mov
push
jae
lods
adc
push
xchg
push
leave
mov
mov
mov
daa
mov
xchg
xchg
in
outsb
inc
les
inc
xor
push
popa
cwtl
pop
and
fldl
inc
sbb
out
fsubrs
and
test
shll
sub
nop
cltd
in
pop
cmp
pushf
jnp
fistpl
movsb
add
pop
leave
push
pop
fs
xor
xchg
das
repz
sahf
out
pop
repz
je
sti
add
arpl
inc
pop
add
jae
dec
mov
cmp
push
sbb
or
nop
loopne
add
orb
xor
mov
int
mov
cltd
add
mov
inc
jns
daa
cmp
add
jae
xor
sub
pop
cmc
sbb
test
movsl
cwtl
xor
push
and
add
push
xor
add
ljmp
shll
or
ja
repnz
lcall
out
and
dec
data16
popa
ffreep
lcall
xor
fstpl
xorb
mov
cmc
inc
subl
nop
aad
ss
fnstenv
xchg
inc
test
popa
dec
push
push
mov
mov
pop
xchg
inc
sbb
add
arpl
mov
popf
and
push
gs
and
mov
or
or
fadds
fcom
and
cli
leave
into
jmp
lods
mov
mov
fs
cmp
jo
or
mov
mov
and
je
cmp
sbb
and
push
mov
cmpsb
mov
mov
and
loopne
out
lret
js
bound
mov
pop
aaa
popa
sbb
leave
jbe
push
or
loop
outsl
fimuls
xchg
cmp
das
and
daa
sub
xchg
pop
xchg
test
mov
cmp
or
test
mov
into
sar
sarl
jecxz
mov
cmpb
pop
mov
adc
cmc
add
jge
mov
scas
jl
pop
stc
push
push
out
dec
pop
xchg
pop
mov
mov
sub
mov
fbstp
mov
rcl
iret
or
cwtl
mov
xor
jnp
jp
cmpsb
sbb
sbb
jl
andl
dec
iret
lret
jbe
cld
or
fprem1
push
cs
or
sti
rclb
adc
jle
iret
mov
inc
test
pop
ret
lock
cmp
rolb
push
cmp
rolb
xlat
adc
jg
jbe
mov
loopne
fldt
xchg
and
mov
js
push
jecxz
jp
cs
dec
insb
push
pop
inc
and
sub
cmp
mov
notb
aas
inc
shll
push
fadds
rclb
es
mov
jns
sub
adc
das
jno
ficoms
pop
loop
jae
test
cmpsl
mov
pop
psraw
adc
mov
in
mov
ljmp
sbb
cmpsl
add
iret
sub
movsb
xor
in
jecxz
xor
xchg
pushf
bound
mov
scas
jge
xchg
pop
push
sbb
loopne
ret
pop
push
dec
or
out
mov
in
and
mov
hlt
xchg
inc
or
sub
push
rclb
lret
bound
adc
imul
pop
jns
std
cmp
ljmp
cmp
or
stos
bnd
in
gs
ja
mov
aad
push
mov
daa
cmp
jp
movsb
lret
sub
xchg
jns
ljmp
dec
shrl
sub
xchg
add
lods
stc
mov
jmp
add
or
mov
arpl
sar
popf
loopne
jb
je
sbb
imul
sti
notb
popa
adc
sbb
inc
imul
add
and
sbb
xchg
jae
jns
and
add
fisubl
sub
jg
in
mov
push
mov
fidivrl
pop
bound
push
xor
push
popf
out
int
repz
mov
dec
jno
xchg
je
push
push
pushf
and
outsb
shr
loop
xchg
loope
lea
ss
push
insl
dec
pop
aaa
jg
jae,pn
in
push
in
xlat
jne
fs
rcl
in
or
out
dec
test
popa
mov
fidivl
lret
dec
icebp
add
mov
int3
sbbl
dec
jae
mov
pmaxsw
or
dec
adc
inc
jle
hlt
mov
cmc
hlt
fidivl
xor
movsl
loope
xchg
mov
scas
les
sub
adc
or
push
outsl
sbb
cmpsb
orb
ljmp
sbb
lods
in
and
roll
sbb
mov
ficompl
stc
dec
pop
outsb
in
jno
insb
repz
xchg
pop
jl
sbb
decl
out
xchg
jge
enter
or
stc
rclb
call
pop
ds
stos
nop
fldcw
inc
mov
add
inc
aaa
lods
insb
jg
out
cmpsb
pop
push
out
fsubs
ror
dec
adc
sbb
push
adc
dec
fs
decb
mov
add
sbb
mov
push
cmpsb
inc
insl
into
ss
in
cmp
sbb
aam
aam
sbb
inc
add
mov
rcrl
in
push
hlt
or
cmp
test
test
pop
arpl
stos
scas
adc
shlb
pop
lock
shll
and
pop
sbb
dec
insl
adc
sub
mov
xchg
push
ficomps
dec
dec
clc
je
add
pop
shrl
dec
sbb
dec
fsubrp
shl
insl
loopne
mov
sarb
mov
inc
shrl
cli
and
mov
jnp
inc
cmp
push
out
cmp
ret
fs
pop
in
inc
or
xchg
cld
hlt
inc
incl
aad
push
push
rolb
sbb
mov
push
add
jbe
daa
xor
xchg
xchg
aam
xchg
inc
ljmp
shll
xor
ss
mov
xchg
dec
dec
or
add
mov
pop
push
fcmovnu
xor
push
repnz
das
fs
aam
jne
cld
jge
mov
mov
xchg
in
cltd
add
call
mov
shll
movsl
test
lea
push
inc
jp
pop
add
add
push
lds
xor
rcrb
pushf
outsl
int
xlat
xchg
jo
xchg
insl
pause
mov
xchg
outsl
loope
pop
jo
in
pop
sub
in
pop
jo
mov
aaa
cmpsb
pop
sub
adc
push
out
in
lret
sub
sbb
mull
mov
lds
mov
and
dec
sub
cmpsb
or
lods
mov
incb
pusha
lret
stos
jne
dec
push
loope
cltd
dec
es
addr16
mov
cmpsl
or
cs
and
stos
pop
inc
cli
fisubrl
aad
xchg
es
push
cmp
sahf
jo
xchg
xchg
adc
ds
lds
scas
clc
push
outsb
nop
dec
or
jecxz
aad
mov
lods
mov
cwtl
jg
imul
aam
jmp
stos
movsb
jo
aad
cld
pop
test
dec
pop
cmpb
movsb
jmp
decl
dec
loope
out
cmp
data16
fnstcw
push
ret
lret
mov
and
lock
xchg
add
fmull
jne
test
out
xor
mov
pop
dec
lcall
insl
in
sub
jl
testl
int
sbb
jecxz
pop
and
pop
sbb
rcrb
shll
adc
sub
mov
cmp
cmp
xor
sub
xchg
xorl
cmp
clc
jo
add
ss
mov
lahf
adc
and
inc
cmp
add
in
sbb
adc
jo
inc
int
jg
adc
neg
popa
out
adc
and
or
mov
xor
mov
repnz
xor
adc
or
jecxz
enter
push
icebp
and
push
test
cmp
cwtl
cmp
pushf
jno
mov
fstpt
out
ja
dec
test
movsl
inc
push
and
cmpsb
mov
adc
call
addr16
enter
add
sub
call
outsb
scas
xor
pop
insl
loope
pop
sahf
lea
pop
out
sub
or
push
cld
or
cmp
fbstp
test
fwait
popl
pop
dec
pushf
stc
xor
stos
sti
ljmp
and
xchg
cmovae
mov
les
xor
fstl
cwtl
fistpl
outsb
mov
jge
mov
imul
outsb
cmpsl
fdiv
lret
nop
cmp
dec
xchg
scas
push
rorb
mov
adc
in
pop
arpl
into
and
test
pop
fldcw
xchg
mov
dec
fstl
xor
sbb
sub
jb
testl
daa
push
push
pop
xor
inc
mov
je
adcb
in
imul
int3
xchg
pop
pop
call
jg
enter
bound
xchg
or
popf
out
jnp
adc
sbb
lahf
mov
imul
mov
sarl
jno
call
add
dec
aam
scas
loope
push
adc
mov
lret
ss
xor
mov
shlb
lods
cld
push
scas
xor
outsb
ffree
cli
and
ljmp
out
inc
inc
mov
loop
dec
arpl
lods
out
cmp
sub
sub
fcoms
test
out
push
jp
cmp
push
loopne
imul
adc
xchg
mov
out
inc
cvtps2pd
shlb
dec
lock
fwait
pop
jl
int3
adc
sub
mov
xor
lods
mov
mov
je
adc
push
hlt
lock
and
xor
adc
cli
int3
xor
rol
pop
add
inc
arpl
ret
pop
ss
lret
mov
pop
test
icebp
jg
into
and
and
pushl
adc
repz
sub
sub
fimuls
push
xchg
push
out
test
imul
sbb
push
inc
cld
jle
ljmp
les
movsb
jg
dec
and
xor
enter
and
jle
mov
pop
sahf
pushf
jo
inc
mov
cld
out
add
ds
es
mov
xchg
jge
lea
cmp
and
cwtl
icebp
jnp
mov
pop
pop
outsb
call
push
mov
sbb
jb
nop
and
sub
popa
mov
fucomi
shlb
mov
das
in
adcl
jne
outsl
rorb
shll
movsl
add
shr
paddd
add
icebp
xchg
inc
rorb
mov
sbb
aaa
js
mov
adcl
repnz
movsl
adc
arpl
mov
int
mov
out
sub
push
xchg
cli
xchg
std
stc
std
mov
mov
je
lret
pop
mov
jo
in
mov
cmp
push
sbb
cmp
jle
movsl
jecxz
xor
inc
mov
sub
insb
fisttpll
ja
cmpl
mov
fsubrp
push
faddl
scas
rolb
ljmp
pop
js
add
push
xchg
inc
movb
dec
inc
cltd
das
ds
mov
push
lds
adc
roll
sbb
in
adc
fisubrl
jmp
lea
push
mov
neg
xchg
xor
in
into
sub
addr16
cmp
mov
mov
sub
sahf
stos
movsb
cmc
mov
popa
or
mov
pop
mov
dec
mov
inc
imull
xchg
sub
sbb
adc
jle
iret
pop
mov
mov
add
pop
mov
add
imul
sbb
popf
or
adc
or
adc
into
sahf
inc
mov
push
shrb
fbstp
sub
hlt
mov
xor
rorb
imul
into
lods
cmpsl
or
test
dec
pop
shrl
test
xchg
and
push
outsl
xchg
mov
sub
jnp
lret
pop
scas
lods
daa
adc
fistpll
xchg
dec
cmp
mov
lcall
imul
xchg
mov
xchg
lods
jmp
daa
xor
pop
shll
sbb
dec
dec
dec
ljmp
push
jecxz
inc
mov
popf
ljmp
lret
lahf
mov
and
and
fs
sub
cli
icebp
fcmovbe
loop
inc
lods
notb
lret
mov
pop
inc
shll
inc
sub
andl
push
cmp
xor
pop
xchg
mov
lea
jle
add
call
add
push
xor
aas
call
jecxz
jge
push
fistpll
insl
fsts
ljmp
sbb
mov
or
mov
or
sbb
lods
mov
test
std
pop
push
adc
stc
stos
adc
in
adc
jl
outsl
imul
mov
mulb
pop
cltd
dec
subl
pop
mov
inc
sbb
mov
ret
push
cmp
lret
mov
insb
add
leave
insl
mov
sub
push
mov
push
sarl
push
mov
je
hlt
imul
faddl
cmp
stos
movsl
inc
mov
out
mov
xchg
rorb
pushf
outsl
mov
int
xor
xchg
or
jp
dec
cmp
out
dec
js
lret
adc
and
and
mov
push
inc
inc
fcos
dec
ret
fldl
xor
inc
xor
movsb
xchg
gs
adc
cmp
cmpsb
ss
cld
leave
xor
and
mov
jle
push
repz
dec
aaa
in
add
dec
xchg
fisubrl
rolb
or
adc
xor
iret
sbb
test
gs
push
in
mov
sbb
xor
jns
stos
push
rclb
out
xor
inc
mov
ret
cmp
rep
fadd
sbb
or
sbb
sbb
mov
adc
movsb
loopne
sbb
test
dec
mov
jo
enter
push
pop
test
mov
lods
sbb
lock
int3
inc
add
stos
sti
aad
pop
sti
xlat
inc
aam
pop
fwait
out
jns
in
aaa
xor
pop
test
push
xor
inc
lock
out
add
std
pop
mov
pushf
rcrb
movsb
lods
scas
cli
jmp
leave
ljmp
test
or
sbb
int
stos
int
jl
push
fwait
mov
lret
pop
dec
sub
fs
mov
pop
jmp
xlat
jbe
or
mov
test
jmp
test
in
fstps
xor
mov
xor
stc
cltd
and
ret
xlat
repnz
adc
ret
xlat
pop
out
mov
das
or
ret
dec
outsl
ret
inc
adc
rolb
and
jmp
mov
jo
dec
div
or
aas
push
lret
ret
sub
fs
pop
jg
sub
or
or
int3
fs
ficomps
inc
adc
mov
es
mov
ja
push
stc
or
mov
pop
into
pushf
pop
push
and
out
inc
movsl
fcmovnbe
cmp
stos
enter
ret
xlat
lea
jnp
sbb
lret
stos
in
repz
sarl
call
pop
cmpsl
push
add
mov
or
or
aad
mov
jno
pop
pop
jecxz
rol
out
sahf
mov
dec
ficomps
rcrb
or
fmulp
push
fs
fsubrs
lea
lock
mov
movhps
or
lock
jmp
adc
xlat
je
popa
jecxz
fcomps
or
inc
cwtl
rorl
inc
add
mov
pop
mov
fidivs
out
push
jge
dec
push
xchg
es
mov
mov
shrb
push
call
inc
arpl
in
sbb
pop
je
pop
add
sbb
xchg
rcl
inc
mov
rolb
sahf
js
cmp
sbb
pushf
fidivrs
pop
sbb
loope
or
mov
stos
int3
mov
inc
cmp
mov
mov
dec
sahf
js
imul
push
popa
movlps
ret
test
jno
or
mov
lods
cmpsl
fidivl
lds
aas
int3
int
nop
sbb
pushw
ret
and
iret
aam
in
icebp
cmp
dec
and
arpl
or
mov
and
repz
xchg
es
add
lods
ja
daa
fcom
rcrl
pop
test
mov
iret
pop
pop
fsubr
sub
mov
push
cmp
sbb
inc
out
push
sbb
lods
or
imul
push
inc
cmp
xchg
cmpsb
neg
loope
call
dec
stos
das
idivb
outsl
insb
mov
mov
mov
dec
inc
mov
lret
jb
or
cs
mov
mov
pop
fwait
cmpsl
inc
rep
push
lret
pop
les
adc
add
testb
fdivp
loop
loop
into
cmpsl
adc
and
out
jecxz
sub
loopne
and
je
dec
aad
mov
rol
pop
popl
daa
jmp
dec
and
fsts
dec
xchg
arpl
imul
cmpsb
rcrl
push
in
popf
xor
pop
loope
adc
in
fsubr
bound
jno
adc
jno
jmp
cwtl
cs
mov
jb
push
adc
jmp
xor
bound
lea
xchg
jg
fs
fisubs
popf
imull
pushf
sti
inc
inc
out
lods
mov
icebp
xacquire
xchg
rcll
mov
add
or
inc
int3
insl
dec
pop
movl
jo
pop
xchg
mov
sub
push
cmc
and
imul
mov
js
xchg
movsl
fucomip
mov
fdivrl
clc
mov
sub
or
add
insl
mov
sahf
aaa
leave
mov
clc
xchg
pop
xor
xor
je
mov
mov
jbe
rolb
stos
sub
ficompl
out
jmp
insb
jecxz
in
jb
arpl
lret
and
idivl
xchg
sbb
jmp
imul
in
pop
pop
loop
cmp
rorb
stos
sbbb
inc
xchg
or
xor
or
inc
icebp
loope
mov
aas
jb
push
testl
addr16
shlb
insl
scas
incb
mov
jb
mov
sub
and
and
xor
in
shll
jmp
ljmp
and
aam
push
and
push
fucomp
sbb
loope
xchg
out
es
subl
stos
adc
out
push
inc
mov
clc
xor
inc
loopne
shrb
add
adc
cwtl
lds
mov
test
pop
fsubl
nop
shlb
push
cli
int
push
sbb
fsts
inc
je
ljmp
xlat
orl
cs
aas
xlat
popa
aam
inc
lods
xchg
dec
jle
movsb
ror
stc
pop
push
and
adc
cwtl
aaa
push
rcl
add
mov
pop
jmp
hlt
pop
mov
cmp
inc
push
loop
jo
cmpb
out
mulb
push
repz
push
gs
in
inc
push
stos
fstl
mov
leave
xor
xadd
mov
mov
rcrl
adc
or
mov
bound
pop
test
cli
xchg
lds
and
adc
stc
fisttps
test
addr16
lahf
jae
lds
pop
outsl
and
int3
inc
shll
mov
mov
push
xchg
add
int3
bound
and
inc
and
pop
repnz
mov
aad
cmp
jbe
xchg
int3
notl
pushf
cld
inc
pop
mov
test
pop
push
cld
inc
aad
add
mov
cmpsl
mov
mov
xlat
js
lret
sub
ret
add
xchg
daa
fwait
mov
push
and
sbb
jl
xor
pop
push
or
in
stc
and
push
ds
cs
or
bound
lods
push
stos
push
add
cld
mov
rcrb
mov
lods
sub
das
mov
add
jae
movl
fldl
lods
fidivrs
or
adc
rorl
push
push
sahf
enter
pop
imul
test
aas
sub
and
movb
lods
jo
xchg
or
loopne
movsb
and
inc
mov
mov
add
pop
add
repnz
adc
lock
xchg
xchg
pop
inc
loop
push
gs
mov
inc
push
inc
push
pop
int3
pop
cmp
sub
add
popf
push
mov
mov
xchg
call
insb
xor
xor
cmp
adc
mov
sahf
pop
mov
orb
bound
cli
inc
es
jne
add
add
sbb
je
pushf
loop
ret
daa
xchg
shll
sbb
sub
cwtl
jg
pop
mov
sbb
lahf
in
sub
dec
adc
hlt
divb
pop
or
loop
lods
movl
cmpsb
fs
imul
cmpb
pushf
jae
add
and
cmp
cmp
adc
jge
aas
scas
or
mov
mov
jnp
mov
xor
inc
je
push
imul
test
lea
dec
insb
ret
outsl
mov
push
push
jae
mov
mov
mov
test
mov
cmp
out
add
adc
pop
dec
mov
jg
jle
aaa
pop
pop
pop
sub
scas
jge
ds
mov
push
sub
pop
out
ffree
adc
adc
aam
movsb
xor
push
shr
and
stos
jo
int3
jns
sahf
je
dec
xor
and
lods
cmp
bound
jg
pop
jae
sub
enter
ret
mov
cmp
sub
jo
fstpt
sbb
mov
icebp
shrl
ja
jge
pop
gs
add
cwtl
cmp
pop
aam
dec
fcmovbe
push
fmuls
jo
popa
adc
mov
cmp
hlt
mov
sbb
pop
int3
adc
stos
adc
test
jp
and
and
divb
and
xor
jle
dec
mov
mov
sub
jmp
sbb
push
and
mov
rorl
cmp
repz
shrl
ss
jl
mov
push
mov
aad
add
sti
lds
aaa
les
push
sbb
data16
mov
sbb
mov
jecxz
fdivs
sub
pop
in
mov
mov
inc
adc
push
pop
hlt
data16
test
push
sbb
in
rcrl
cltd
pop
movsl
sbb
test
cli
adc
test
xchg
movsb
add
cmp
insb
call
xchg
neg
dec
pop
fsubr
out
cmp
lret
pop
push
in
ja
cld
mov
and
cmp
mov
xchg
lods
ss
neg
mov
bound
into
dec
push
xchg
dec
push
pop
stc
clc
sbb
repnz
fs
mov
in
mov
cmpsb
sti
jmp
ja
xor
and
and
jle
seto
dec
rorl
aaa
data16
shll
cmp
mov
bound
repz
inc
pushf
outsl
out
imul
mov
arpl
ror
addr16
hlt
ds
ret
imul
xchg
aas
push
shlb
push
rorb
mov
rolb
sub
sbb
out
sti
dec
jp
xor
nop
bound
and
fs
ret
addl
xchg
out
xchg
icebp
lret
cmp
push
les
push
lret
pop
sbb
movsb
add
push
push
dec
idivl
xor
mov
mov
xchg
or
push
jge
aas
movsl
pop
sbb
cwtl
inc
jecxz
xchg
testb
cmc
bound
cmc
loop
mov
add
add
pop
and
cmpl
enter
or
add
mov
int
add
xor
ja
addl
mov
cmp
xchg
int
dec
adc
andb
or
mov
into
das
push
arpl
in
repz
ja
aam
push
mov
daa
cld
mov
pop
or
cltd
fs
push
loopne
xorl
aas
mov
test
insl
cmp
mov
mov
insl
aad
mov
scas
mov
fpatan
in
xor
pushf
xlat
std
pop
enter
fnsave
inc
dec
clc
or
aam
out
xor
out
out
jns
jno
adc
mov
mov
push
in
adc
cmpb
jns
xchg
inc
sbb
sbb
xchg
out
imul
sub
out
fistps
dec
mov
aam
or
mov
rorl
test
or
enter
xchg
lret
or
ror
jp
stc
hlt
adc
mov
cmp
inc
movsb
jnp
and
jmp
mov
stc
movsb
jne
test
daa
leave
xor
xchg
inc
or
lock
jmp
or
fcmovu
ljmp
sub
xor
mov
xchg
jmp
js
outsl
inc
nop
stos
adc
aas
or
fsubl
bound
mov
sub
push
stc
imul
xor
lock
or
xchg
int
adc
fwait
push
and
and
lret
mov
imul
jg
xchg
fwait
push
addr16
dec
jno
push
adc
out
and
mov
aaa
repnz
lds
mov
and
loop
loope
dec
add
add
cmp
jmp
jmp
fidivl
addr16
stos
popa
arpl
add
shrb
add
mov
lret
repnz
dec
pop
into
int
xor
jne
mov
sbb
dec
sbb
jp
test
sbb
bound
sbb
es
dec
std
arpl
pop
cs
mov
xor
mov
and
addr16
pop
shlb
xchg
sbb
lds
and
loope
outsb
push
cmp
jne
lock
imul
arpl
in
xor
nop
in
lret
addr16
dec
jge
mov
and
push
cs
sbb
lcall
pop
pop
mov
xchg
xchg
sbb
and
adc
or
push
cmp
xchg
jmp
or
movb
sti
out
xchg
add
insl
lods
movsl
ljmp
divb
mov
dec
jmp
and
out
int3
aad
sub
pop
sub
jge
repz
in
scas
loopne
push
repz
out
jne
and
xchg
adc
pushf
mov
test
sbb
inc
mov
mov
mov
xor
hlt
mov
sbb
cmpsl
fwait
dec
push
mov
orb
sahf
int3
aam
mov
das
mov
loope
scas
test
outsl
mov
fxch
and
inc
bound
stos
pop
rcl
arpl
jne
ret
pop
shlb
and
cmp
outsl
dec
xchg
movsb
sub
pop
cmp
imul
test
inc
test
nop
sub
fsin
jle
das
mov
filds
inc
fistpll
mov
xor
rol
out
repnz
test
sub
sahf
mov
clc
add
movsb
data16
shll
inc
mov
ljmp
push
cmc
inc
xorb
enter
mov
and
add
and
call
js
fdivs
int
mov
inc
sub
xor
repnz
and
add
ja
sbb
hlt
gs
pop
leave
test
js
ja
lds
hlt
jl
dec
push
cld
push
adc
add
pop
repnz
mov
push
mov
imul
popa
bound
dec
adc
inc
add
adc
into
xchg
imul
bnd
cwtl
mov
push
add
mov
and
sub
icebp
les
loop
test
aaa
cltd
push
sub
sub
test
dec
push
outsl
ss
add
loopne
std
push
das
sbb
xor
int3
pop
pop
mov
jp
ficoms
test
out
inc
iret
fbld
fistpll
dec
sub
loope
push
mov
add
xchg
jnp
out
aam
dec
inc
in
dec
sub
adc
lahf
add
or
ficoml
pop
xchg
pop
push
imul
xchg
add
inc
lcall
test
out
enter
ficomps
out
adc
mov
mov
arpl
js
push
psrad
dec
jp
mov
xor
imul
sub
loope
int3
xor
add
lret
xor
and
jne
scas
jg
insb
or
insl
in
jno
sbb
bnd
xchg
shr
jle
cld
das
out
lock
or
cmp
add
jge
add
cmp
lods
or
loopne
pop
pop
popa
inc
insb
fimuls
clc
and
mov
lahf
push
mov
lahf
cmp
out
rorl
or
xor
and
lods
cmpsl
insl
cmp
fwait
cmpsb
call
pop
pop
xchg
sti
out
adc
insb
adc
aam
pop
stos
ljmp
mov
sub
cmp
lds
mov
pop
xchg
or
cmpb
xchg
lods
ds
push
dec
test
cs
stc
fidivrs
xchg
roll
push
push
cs
out
ds
jo
addr16
push
and
dec
cmpsb
cmp
cmp
dec
int3
shrl
imul
jne
andl
push
cmp
inc
fidivrs
sahf
leave
add
nop
inc
in
cmpsl
orl
dec
xor
imul
pushf
in
test
dec
xchg
aas
lods
jp
les
xor
sub
pop
or
sbb
cmp
negl
lods
sbb
ljmp
dec
pop
ret
add
in
sub
or
int3
or
pushf
xor
or
out
cmpl
jge
dec
jl
scas
sbb
inc
and
outsl
aaa
xchg
add
and
jnp
jmp
adc
aad
jno
mov
rcr
xchg
or
pushf
sub
sub
sbb
inc
xor
andb
mov
ret
hlt
adc
ljmp
and
xor
adc
and
adc
or
cwtl
sbb
loopne
ja
loope
jno
jmp
dec
js
insl
adc
adc
sbb
nop
shl
cwtl
fdiv
stos
addr16
daa
lock
icebp
cmp
in
sub
mov
das
and
pop
mov
icebp
sub
xchg
hlt
jbe
orb
sub
scas
lahf
xchg
out
mov
ljmp
imul
sub
mov
in
dec
mov
clc
sbb
pop
mov
adc
mov
sbb
cmp
or
push
dec
dec
pop
xchg
mov
aas
dec
or
out
loope
push
jle
jg
lcall
inc
test
mov
sbb
scas
outsl
lds
add
in
push
adc
pop
loop
adc
icebp
in
pop
insb
sbb
or
iret
test
loope
out
pusha
jle
fs
aad
jecxz
push
int3
pop
xchg
ljmp
jle
stos
and
fidivl
lds
aad
push
mov
in
sbb
cltd
mov
mull
adc
lds
add
sub
sub
xor
xchg
mov
in
push
fmul
lret
mov
lods
sarl
lea
out
push
sub
lret
inc
insb
stc
push
les
imul
leave
jae
jno
xlat
pop
push
test
repnz
push
outsb
jbe
sbb
ljmp
enter
js
repz
test
roll
out
lock
cld
mov
mov
mov
imul
js
imul
shrl
mov
into
pushf
push
push
mov
or
xchg
test
call
or
xchg
cmp
gs
aas
js
and
dec
fistps
flds
hlt
movsl
scas
pop
cmp
loope
rcll
mov
add
jmp
pushf
stos
psrld
popf
out
cltd
dec
inc
adc
mov
movsb
aam
ret
out
and
cmpsl
bound
inc
shr
test
mov
inc
push
cmp
in
or
or
lret
mov
rcrl
mov
xor
adc
cmp
or
mov
fcomps
pusha
loop
mov
mov
add
jnp
test
in
mov
shl
xchg
jp
repnz
pop
jo
jne
sub
jbe
out
loopne
sbb
shll
cmp
mov
rclb
jg
mov
mov
fidivrs
dec
rcl
or
mov
push
int
dec
dec
scas
pop
and
ljmpw
jbe
adc
push
inc
mov
nop
shl
sub
and
push
jp
and
in
sub
xchg
xor
lret
jg
scas
or
scas
sbbl
int3
mov
jns
add
mov
add
xor
push
insl
leave
adc
mov
jmp
cltd
icebp
andb
and
mov
jmp
mov
mov
lods
imul
jo
push
jmp
ja
iret
jno
insb
inc
rclb
call
mov
shr
movsb
adc
cmp
orl
int3
push
or
movsb
mov
pop
es
das
inc
rolb
xor
bound
enter
mov
loopne
movsl
test
or
cmp
aam
and
mov
testb
arpl
xchg
mov
xchg
adc
push
loop
in
data16
adc
lret
daa
push
in
cmpsb
dec
xchg
jecxz
dec
adc
and
cmp
sbb
sub
fisubl
rcll
mov
std
lahf
adc
adc
call
testl
pop
js
sbb
cmp
xor
fcompl
sbb
xchg
lahf
push
cmp
mov
cli
lods
jle
and
jbe
loope
test
mov
push
loop
add
adc
repnz
dec
rcrl
out
ja
mov
je
mov
ja
in
cwtl
out
push
add
shl
sub
sbb
inc
fwait
ja
or
or
push
mov
mov
jle
shll
fsubrs
ret
xchg
jns
xchg
and
lcall
inc
jae
icebp
lcall
jo
jge
fnstsw
push
xor
and
dec
in
push
mov
mov
cmp
and
stos
inc
push
pop
js
imul
fldl
inc
and
stc
sbb
sub
push
lods
mov
ja
jp
mov
fcompl
sub
sbb
shl
aad
inc
sarb
imul
call
cmp
into
sbb
les
adc
push
stos
mov
fadds
pop
lods
xchg
cmpl
cmp
sahf
xorb
pushf
or
test
lcall
pop
pop
xchg
mov
or
outsl
pop
rclb
pop
test
sbb
mov
mov
dec
dec
xor
into
push
push
loope
add
test
inc
inc
add
xchg
push
xchg
dec
inc
cmpsb
pop
lds
loopne
inc
ret
jb
lds
push
sub
imul
adc
add
out
test
mov
and
daa
add
adc
jo
stos
jp
jns
dec
pop
inc
fsts
cld
push
mov
es
lcall
xorb
dec
sahf
insb
mov
add
pop
push
cwtl
stos
stos
orl
adc
jns
aaa
std
add
lret
call
mov
shr
sbb
les
ret
push
xor
mov
pop
scas
pushf
insb
dec
mov
mov
mov
dec
lods
sub
jle
inc
iret
repz
and
pop
idiv
mov
mov
pop
shl
ret
add
addl
inc
outsb
xorl
jp
xor
sbb
push
and
jmp
aas
lock
dec
and
adc
popa
pusha
pop
lcall
fwait
clc
std
adc
inc
jne
push
push
das
xor
out
or
dec
call
cltd
mov
dec
sbb
outsl
jae
lds
pop
cltd
sub
bound
fcomps
adc
addb
in
bound
xchg
push
test
sub
insl
xchg
mov
hlt
xor
test
lods
pop
xlat
cwtl
xchg
fistl
test
mov
mov
lahf
jp
sbb
inc
fistpl
cmp
xchg
jnp
das
pushf
hlt
mov
test
pusha
jge
pop
lods
xlat
ds
sbb
mov
mov
sub
cmp
pop
insl
push
data16
movsl
fcoml
pushf
in
xchg
adc
dec
push
in
repnz
push
cmc
mov
popa
scas
xchg
arpl
js
pop
or
add
bound
out
fidivs
mov
jns
cli
repnz
adc
cwtl
adc
push
lds
lahf
xor
mov
out
cwtl
jp
imul
add
add
fsubs
clc
cmp
imul
les
fstpl
xchg
jns
mov
dec
push
jecxz
push
test
ljmp
imul
fnstsw
push
jb
divl
cli
cmp
xchg
arpl
xchg
mov
dec
xchg
push
pop
fsubrl
dec
pop
pop
jp
cmp
push
jb
pop
mov
addr16
sbb
andl
call
inc
push
fisttpl
mov
out
nop
hlt
int
lret
fstl
cs
xor
in
shll
jb
shrb
std
push
sti
cmp
orl
movl
mov
and
and
inc
outsl
loop
or
lret
sbb
and
bound
dec
imul
mov
inc
je
mov
and
adc
scas
push
jb
push
mov
in
neg
or
mov
xor
outsl
adc
pusha
pandn
add
js
xchg
and
fs
pop
out
mov
mov
pop
repz
out
jae
aad
cltd
push
sub
sbb
bound
sub
push
cwtl
rcl
xlat
pop
jecxz
dec
test
repnz
inc
fwait
or
jmp
mov
stos
pop
mov
arpl
fpatan
aas
mov
dec
inc
rcrb
jns
hlt
leave
into
out
xchg
jae
out
xchg
push
jge
mov
lret
addr16
sub
out
mov
xor
out
pusha
or
rcrl
test
iret
pop
mov
pop
insb
dec
outsb
es
je
outsb
cmp
xchg
test
aaa
sbb
data16
idivl
mov
das
ja
and
push
mov
push
insb
rcrl
movsl
movsb
mov
fwait
clc
scas
in
dec
mov
pushl
pop
rcrl
sti
jge
and
and
ret
negl
inc
clc
xchg
xlat
jg
mov
int3
xor
nop
sbb
sub
cmp
mov
int3
repnz
rorl
pushf
jno
popf
dec
ficoml
sti
pushf
sbb
out
sub
popf
aad
ret
pop
jne
clc
lahf
pop
inc
sbb
add
pop
dec
pop
and
mov
mov
and
and
inc
popf
loopne
int3
inc
stos
insb
cs
lret
movsl
pop
sbb
dec
dec
cmp
je
xchg
mov
xchg
jnp
pop
and
push
sub
arpl
add
fld
in
mov
or
push
jae
stc
addl
out
or
adc
mov
or
push
das
jno
lock
mov
sub
test
push
pop
stos
int3
push
xchg
and
jmp
repnz
fsubs
jmp
idivl
leave
push
es
mov
les
dec
arpl
inc
dec
sub
inc
pop
mov
loopne
out
push
pushl
arpl
gs
pop
lods
and
gs
and
cmp
cmpl
push
sub
out
xchg
sti
movl
cmp
js
or
rorl
mov
lret
push
mov
stos
out
sarl
mov
dec
mov
push
dec
sbb
jb
adc
pop
insl
sub
push
inc
xchg
dec
insl
pop
repz
mov
mov
loopne
mov
adcb
out
aad
mov
mov
es
fucomip
xor
and
lret
add
fistpl
pop
daa
jbe
shrl
inc
inc
xor
mov
test
pushl
cmc
dec
or
pushf
notb
sbb
adc
and
imul
mov
inc
adc
dec
cmp
popa
mov
outsl
enter
xchg
loop
jmp
jp
and
mov
push
xchg
ja
xchg
sbb
iret
adc
movsb
push
adc
dec
ret
xchg
pushf
popf
or
sbb
nop
sahf
idivl
sbb
sub
test
push
int3
fcmovu
mov
sub
adc
mov
fs
xchg
aad
call
inc
or
icebp
xor
or
shr
scas
inc
pop
addr16
aad
daa
mov
and
ret
iret
jns
nop
ljmp
add
aas
js
add
add
xor
dec
call
in
stc
mov
enter
or
dec
dec
xchg
lret
jnp
addb
ret
mov
xchg
decb
mov
lcall
xor
cmp
sti
fldt
mov
jl
jb
or
mov
out
rcrl
mov
shll
subl
arpl
xchg
or
loope
add
push
in
lret
loopne
fucomip
mov
or
in
mov
stc
or
push
ret
mov
mov
adc
mov
decl
jnp
jbe
rcrl
jns
dec
push
ja
add
sbb
insl
dec
out
insb
adc
out
test
xor
lods
test
shrb
jnp
pop
das
ds
xlat
rorb
xchg
sbb
lcall
fstpl
dec
xor
jmp
jne
ja
gs
fsubs
cmp
mov
cmpsl
ja
out
inc
stos
fs
sub
lret
insb
fs
mov
sbb
icebp
leave
jae
xchg
fcmovb
call
add
mov
lds
xchg
fcmovnu
lods
and
leave
dec
ss
cltd
push
inc
xchg
cwtl
add
popa
or
push
jb
sbb
imul
sub
test
incb
lock
orl
pop
addb
and
mov
push
xor
adc
rcrl
in
dec
jbe
pop
push
sbb
xchg
cmp
ljmp
inc
xchg
sti
lds
pop
mov
addr16
pop
pop
jbe
out
insb
fptan
fsubrs
ja
xor
and
aas
lahf
and
jbe
arpl
jbe
outsl
jb
or
mov
mov
adc
sbb
sub
jl
dec
ret
inc
inc
adc
inc
push
enter
ficompl
sbb
ljmp
jnp
xor
cltd
int
push
cmp
ss
and
push
push
insb
adc
jmp
sub
cmp
dec
sbb
sarl
push
call
mov
repnz
inc
mov
pop
xchg
mov
outsb
sub
jp
sti
fmull
jmp
mov
inc
mov
fistpl
test
pushf
in
je
cwtl
shlb
les
adc
sbb
mov
mov
rorl
jae
or
sbb
das
test
test
jnp
scas
sub
aad
ds
sti
mov
dec
push
mov
inc
xchg
daa
in
into
enter
inc
imul
xchg
push
xor
adc
icebp
inc
test
stc
jb
adc
cwtl
xchg
notl
and
dec
push
pop
jnp
in
test
sbb
lock
mov
scas
adc
jge
add
xchg
add
orl
xor
ret
jne
sbb
push
jns
xor
mov
sti
sbb
clc
mov
push
daa
inc
outsl
mov
imul
into
lret
push
test
std
out
rcll
fcmovnbe
in
js
mov
out
push
outsb
xor
outsb
pop
adc
jno
push
rolb
stos
mov
xor
subl
lcall
js
fchs
mov
test
jnp
imul
nop
movsl
jmp
jp
add
inc
orb
cmp
movsl
or
pop
loop
xor
adc
adc
pop
outsl
mov
sbb
jp
repz
ret
fstpl
add
testb
xor
pushf
mov
jle
sarl
arpl
cmpsb
jae
jns
mov
dec
lock
mov
clc
pusha
es
pop
cwtl
dec
aad
rolb
cmp
addb
roll
lret
sbb
pop
adc
jne
cmp
mov
adc
jmp
sbb
mov
bound
dec
or
or
dec
outsb
fs
jle
mov
mov
movsl
imul
lret
add
sahf
mov
mov
faddl
pushf
jle
push
mov
in
jno
jnp
cltd
sub
pop
shlb
xchg
xchg
and
pop
sbb
scas
sbb
sbb
loope
pop
cmp
loope
jmp
out
cli
xchg
inc
or
ja
mov
cwtl
adc
push
test
and
xchg
adc
mov
les
int3
mov
mov
aaa
sti
lods
lcall
jmp
out
stc
stc
stc
test
cs
mov
aaa
push
lods
test
and
les
mov
cs
dec
popf
jmp
mov
pop
fsub
sub
sti
movsb
jo
ljmp
jnp
jmp
dec
inc
js
add
cmpl
pop
cmp
pop
rcll
mov
pop
dec
mov
movsb
rcl
mov
xorb
jne
es
push
lcall
xor
in
pop
shr
call
adc
aas
pop
stos
cld
outsb
pop
dec
scas
cmpsb
in
frstor
mov
insl
inc
dec
mov
fsubrs
test
mov
pop
push
imul
popl
testb
mov
xor
sbb
or
fs
dec
sbb
mov
inc
scas
mov
pop
or
mov
fs
inc
mov
dec
aaa
lods
repnz
sub
and
xor
jbe
add
clc
push
inc
mov
add
adc
or
lcall
xor
xchg
sbb
ficompl
lods
ret
push
arpl
and
add
pop
dec
mov
dec
incl
inc
push
bound
test
cmpsb
and
adc
mov
call
lcall
test
mov
ja
popf
addl
dec
fucom
add
cmp
sbb
and
testb
and
inc
cmp
nop
hlt
leave
int3
xchg
sub
xchg
add
inc
inc
and
sub
je
sysret
or
push
dec
push
loop
sbb
inc
sbb
adc
loope
mov
mov
popa
mov
fldenv
sbb
test
jge
xor
fmuls
mov
cmpsb
ja
sub
sti
les
mov
mov
mov
addr16
jl
cmpsb
or
push
popa
inc
mov
xor
mov
test
js
jge
jge
xchg
jne
xor
mov
sbb
cmp
xchg
nop
es
inc
fcoml
repnz
test
dec
sbb
clc
add
mov
incb
or
xor
jbe
in
jg
xlat
ret
mov
lret
sbb
cmp
sub
cmpsb
xor
mov
dec
jae
addl
loop
loopne
scas
daa
push
rcrb
aad
inc
adc
xchg
sbb
shll
xchg
cmp
aas
jo
outsb
fdiv
aad
mov
lcall
add
repz
xchg
inc
pop
pop
repnz
adc
movsl
inc
sahf
popa
add
mov
outsl
push
call
dec
popa
adc
jge
dec
and
mov
and
jb
mov
jp,pn
gs
or
push
add
xor
mov
jo
call
pop
adc
jbe
xor
pop
xchg
loopne
leave
push
sbb
addr16
rclb
lods
mov
adc
in
insl
call
pusha
mov
inc
js
inc
jbe
cltd
les
aad
fistpl
xchg
mov
inc
jg
add
sub
in
adc
xorb
enter
mov
push
jg
lcall
cmpb
xlat
jl
xchg
adc
inc
push
out
inc
mov
out
js
into
popf
xchg
mov
mov
push
lcall
daa
mov
dec
push
lahf
cmc
stos
inc
or
xor
sub
outsb
xchg
or
xor
jne
nop
std
dec
cmp
dec
dec
xor
inc
inc
lds
jae
cli
cmp
aaa
cmp
cwtl
jae
or
loop
mov
add
add
lahf
xchg
adc
out
out
outsb
mov
cmp
cld
add
xor
rcrl
or
loope
aaa
loop
xchg
xchg
inc
jne
aaa
dec
jne
stos
loopne
add
outsl
pop
and
in
ja
pop
cmp
sahf
mov
in
xchg
fbld
andl
push
mov
pop
mov
dec
jnp
and
ffreep
sbb
dec
xchg
cmp
pop
mov
clc
xor
cmp
mov
test
cmpsb
mov
scas
addr16
xchg
insb
out
imul
cltd
daa
jge
ljmp
icebp
add
fstl
mov
sub
hlt
pop
mov
push
loopne
popa
ret
xchg
add
add
push
aaa
rolb
or
inc
das
outsb
push
dec
xchg
add
mov
test
and
in
dec
add
push
cmp
inc
jb
xchg
dec
jno
dec
pop
stos
push
jbe
push
pop
imul
mov
adc
mov
xchg
push
fisubrs
jge
stos
mov
mov
mov
xor
xchg
outsl
and
scas
mov
dec
pushf
pop
xchg
xor
loope
outsl
jge
les
inc
icebp
movsl
into
movsl
icebp
pop
into
mov
ret
sub
sbb
rolb
out
inc
mov
push
mov
movsb
out
cmp
imul
stc
imul
xor
jb
and
xlat
push
xchg
ja
add
mov
ljmp
push
mov
lahf
fdivs
iret
das
fwait
cmpsl
inc
lahf
fcoml
std
andl
dec
gs
loopew
push
loop
movsl
cmp
pop
xchg
cmpsl
icebp
pop
xor
cld
xchg
cmp
insl
into
inc
std
push
orb
rol
pop
sub
mov
fstpl
or
lds
jnp,pn
push
stc
aam
fs
or
cmpsb
inc
inc
mov
mov
jmp
int3
lret
jmp
cwtl
add
clc
jno
js
xchg
xor
push
out
mov
mov
hlt
xor
movups
jl
cmc
sub
or
sub
xlat
sub
cmp
dec
cltd
mov
jno
shr
andl
imul
fsts
fdivrl
fcmovnbe
xor
cmp
js
jmp
mov
inc
jb
mov
inc
hlt
pop
xchg
xlat
inc
pop
sub
subb
mov
imul
cmp
sub
add
cld
mov
xchg
push
adc
les
mov
pop
adc
movsb
shl
jne
jp
push
cwtl
push
shrb
pushf
mov
mov
aad
xchg
xchg
call
sti
jmp
add
fsubrl
popf
pop
pusha
movb
icebp
lea
test
xchg
push
das
cmpb
mov
mov
stc
ljmp
pop
mov
in
xor
push
mov
movsb
and
mov
inc
sub
and
xor
add
testl
xor
lock
xchg
adc
scas
mov
adc
test
and
jbe
add
arpl
sbb
xor
jge
adc
cmp
cmpsl
mov
dec
pop
test
jns
push
cltd
pop
shll
sti
cmc
mov
fistpl
mov
andb
jo
outsl
flds
hlt
out
add
or
scas
dec
add
shrd
mov
test
sub
mov
mov
dec
mov
cli
lock
adc
adc
xlat
aad
push
out
mov
or
jl
rol
or
repnz
test
lahf
jne
push
or
arpl
inc
and
not
out
push
repz
sbb
mov
icebp
and
popa
call
inc
dec
mov
in
mov
lret
stos
sti
mov
je
in
inc
or
xchg
pop
xchg
sub
fistps
mov
xchg
or
mov
insl
inc
dec
inc
ret
out
lcall
or
out
lahf
aad
pop
stos
inc
inc
mov
inc
adcb
daa
call
add
movsb
add
in
aad
mov
icebp
int3
lds
loop
sbb
adc
fldlg2
call
xchg
sub
scas
cmp
sar
adc
cwtl
mov
add
jno
movsl
mov
cmp
mov
ret
in
call
dec
jmp
push
add
pop
fmulp
adc
test
fistl
aad
push
shrl
insl
inc
mov
push
in
jp
inc
or
enter
mov
lcall
in
divl
inc
insb
pop
rclb
sub
in
cld
scas
push
inc
ffree
lcall
fmuls
notb
aas
testl
sbb
pop
push
xlat
push
pop
add
sub
mov
pop
push
xsaves
and
insl
dec
dec
cltd
insl
iret
arpl
xchg
pop
imul
je
mov
ds
mov
or
push
sbb
add
cmp
inc
xor
fs
cld
leave
lret
adc
sbb
push
jl
jne
lods
out
mov
jle
push
mov
adc
cs
and
adc
cmpsb
and
push
loopne
fildl
in
icebp
stos
cmp
adc
sub
sub
inc
pop
sarl
popa
mov
inc
aas
mov
xor
add
popf
pop
sahf
lret
adc
jbe
mov
push
mov
scas
fidivrs
les
in
xor
arpl
out
dec
and
and
fs
push
cmp
vhaddpd
pushf
jo
mov
je
lret
sub
pop
cld
inc
xchg
mov
cmp
cmpb
fsubp
sub
mov
pop
jbe
sbbb
test
int3
pop
jl
inc
push
inc
les
xchg
neg
add
ljmp
sbb
rcll
xor
cmp
xchg
imul
lds
pushw
and
adcl
push
pop
adc
mov
push
imull
sarb
roll
jb
push
push
and
xor
imul
xor
xor
xchg
or
xchg
dec
pushf
sub
outsb
adc
mov
cli
dec
add
inc
mov
test
gs
in
xchg
sbb
cmp
and
mov
insl
negl
or
leave
pop
pop
fmul
in
int
loopne
addr16
std
movsb
stos
scas
xchg
and
adc
xor
lret
arpl
mov
sbb
fsub
sbb
cmp
dec
fadds
clc
pop
xor
or
roll
xchg
lcall
xlat
mov
mov
mov
clc
mov
fcomip
mov
or
loop
sarl
pop
dec
mov
aaa
xchg
ficompl
sbb
out
ds
sti
iret
insb
mov
daa
sub
outsb
or
mov
push
jl
test
pushf
inc
repnz
mov
dec
mov
dec
aas
sub
sub
mov
jae
xchg
notl
dec
sub
iret
call
xchg
add
fmuls
xor
mov
pusha
stos
stc
fcomp
mov
mov
call
nop
xor
mov
ds
imul
insl
add
icebp
mov
mov
stos
push
jecxz
fistps
lret
and
sbb
sbb
aad
lahf
into
adcb
loope
push
xchg
sub
pop
dec
sub
dec
iret
jle
inc
push
orb
movsb
cltd
ja
insl
andl
and
mov
aam
sarb
repz
sbb
inc
movsl
xchg
fcoms
dec
mov
ljmp
and
or
fwait
bound
insl
movl
clc
xor
mov
arpl
adc
sbb
dec
movl
cld
lea
cwtl
add
jo
fnsave
in
out
push
enter
xchg
test
repnz
jge
std
cltd
pop
sbb
lds
ret
int
iret
and
clc
bound
je
sbb
sbb
mov
pop
dec
jg
fucomp
in
imul
sbb
xor
push
and
sub
or
xor
cwtl
pop
lods
lock
ret
and
mov
xor
jno
pop
xor
xorb
maxps
cmp
cs
aam
adc
add
push
ja
and
add
sbb
sub
jbe
adc
mov
xor
mov
popl
rclb
ss
iret
cli
fadd
in
inc
xchg
pop
or
imul
aam
xchg
dec
xchg
mov
stos
xchg
insl
inc
and
adc
movsb
xchg
clc
test
mov
aam
loopne
mov
hlt
xchg
data16
shll
xorb
lret
ljmp
nop
ja
or
sbb
popf
ja
fnstenv
xor
imul
push
push
sbb
xchg
xlat
pop
test
je
mov
jo
mov
sub
xchg
addb
cmp
sub
je
icebp
movsb
and
out
sbb
inc
xor
outsl
lret
loop
sub
shlb
cs
out
lds
and
cli
icebp
jmp
fldt
notl
ljmp
orb
ds
idivl
lods
mov
cmpb
xchg
add
mov
es
bound
bound
js
or
cs
push
popf
loop
mov
mov
arpl
inc
mov
push
loop
push
lods
cwtl
xor
mov
enter
or
loope
dec
and
xchg
inc
cld
or
repz
add
dec
sbb
and
xchg
outsl
mov
fdivrs
iret
sub
outsb
in
mov
sub
les
jg
inc
add
ret
xlat
sbb
dec
call
int3
arpl
scas
xchg
mov
lock
out
sub
and
jle
xor
add
fcompl
lahf
push
fwait
jmp
add
addr16
lods
filds
push
pop
push
arpl
jae
push
pushf
push
imul
sbbl
leave
pop
ret
inc
pusha
dec
mov
scas
insl
xchg
push
mov
and
hlt
mov
je
jle
pop
shll
mov
jae
push
sbb
andb
mov
jns
int3
or
aam
and
and
arpl
jne
shrb
xor
roll
push
dec
pop
xchg
sub
fsts
cltd
arpl
gs
shl
jl
mov
sub
test
and
hlt
inc
shr
xor
mov
cmpsl
fimull
pusha
add
sahf
or
outsl
shll
mov
pop
adc
xchg
rcrb
mov
push
shlb
xchg
cmp
into
or
push
fistpl
mov
push
add
lahf
jbe
pop
mov
test
sub
popf
test
push
jns
dec
or
rcl
pusha
out
mov
and
ja
je
xchg
dec
loopne
movsb
push
insb
and
sub
in
ljmp
pop
push
js
pushf
sub
jbe
cmp
fstpl
dec
push
stc
fldcw
notb
outsb
add
data16
xlat
cmp
or
and
or
ficomps
repz
stc
push
out
sbb
sbb
dec
xchg
adc
and
ja
mov
sub
mov
xchg
dec
pop
imul
gs
les
mov
test
add
icebp
jge
and
nop
push
sbb
xor
movsl
mov
inc
sahf
push
and
aad
mov
daa
sbb
lods
xchg
stc
mov
mov
das
js
pusha
push
incl
cltd
pop
sahf
cmp
rclb
loop
outsb
aad
pop
and
lock
cmpsl
dec
gs
sti
adc
test
test
cli
faddl
testb
and
push
xchg
inc
aam
xchg
nop
mov
aad
mov
inc
and
out
mov
inc
aad
lahf
outsl
jmp
xor
xchg
push
push
push
dec
push
movsb
sub
mov
pop
das
insl
push
icebp
jnp
or
cmp
and
sub
loope
mov
push
jnp
scas
push
cltd
add
and
xchg
movsl
inc
gs
push
cwtl
insl
and
pop
data16
in
jecxz
fdivrp
jecxz
jecxz
push
mov
cwtl
in
sub
adc
or
fisubl
fistl
jmp
xchg
popf
add
idivl
mov
enter
jb
mov
push
lret
jmp
repz
cmp
mov
orl
xchg
push
jmp
enter
pop
jge
mov
mov
push
xchg
std
inc
mov
sbb
cld
lsl
cmp
cmc
aam
xchg
inc
mov
xor
dec
cmp
leave
sub
xchg
int
out
cmpsb
jmp
mov
pop
push
mov
inc
xchg
mov
xor
xchg
xor
popa
outsb
jmp
imul
adc
xor
dec
cwtl
cmp
jo
push
hlt
mov
push
and
cs
mov
leave
mov
in
add
add
aaa
bound
mov
ficompl
jne
add
icebp
stc
mov
add
inc
mov
int3
add
insb
invd
test
gs
ret
dec
pop
pusha
sbb
lahf
ljmp
call
sbb
or
cmpsb
mov
vpsrad
mov
jbe
and
xor
xchg
fnstcw
xchg
cwtl
out
lods
push
pop
pusha
sarb
loope
mov
pop
fsubl
loope
jno
sarl
test
adc
test
cli
xor
pop
jb
push
stc
jl
orb
xor
popf
dec
adc
jne
lret
in
cmp
enter
jb
outsl
sub
popa
or
jecxz
loop
sti
dec
in
out
mov
imul
ss
lods
push
sbbl
out
mov
sub
and
iret
sbb
movq
je
dec
add
push
jp
clc
fdivs
mov
or
fisttps
adc
lods
adc
fcmove
xor
rcrl
mov
icebp
push
jbe
adc
add
outsb
jge
jp
jmp
imul
fildl
xor
aas
xor
or
enter
add
or
push
add
adc
xor
xchg
test
popa
xchg
sbb
cmp
out
scas
mov
fldl
sub
jo
fistpl
lahf
int
jb
xlat
mov
mov
fcmovu
and
imul
cmp
aam
aad
cmc
icebp
mov
daa
inc
mov
repz
mov
jne
pop
andb
mov
sub
cli
call
scas
mov
pop
imul
and
in
jno
dec
and
or
outsb
inc
lret
lcall
jmp
xor
add
fldcw
pushf
push
imul
movsb
mov
dec
pop
jne
jl
adc
push
xchg
pop
ret
xor
das
dec
mov
mov
xchg
jns
das
bound
add
test
pop
pop
mov
sub
and
loope
hlt
mov
mulps
dec
push
push
fwait
rcrl
ljmp
imull
fcmovnu
cmp
push
and
adc
push
fimull
popf
jmp
movsl
out
std
xchg
cmp
out
push
fs
stos
scas
inc
dec
in
ds
cmp
pop
push
clts
leave
cs
rcll
int3
and
mov
xchg
push
jns
outsl
cmp
ret
insb
push
idiv
aas
or
andb
divl
mov
hlt
and
push
test
nop
push
enter
xchg
push
dec
mov
push
ss
les
ret
shll
das
ljmp
imulb
sbb
lcall
sub
cmpsb
inc
pop
adc
pushf
mov
pop
pop
arpl
mov
clc
out
xchg
or
mov
mov
jb
shr
pop
xor
mov
sarl
cmp
popf
leave
push
test
jae
xchg
xor
and
push
xchg
dec
out
mov
push
dec
leave
sbb
in
sahf
xchg
mov
push
sub
and
sub
xor
es
lea
fmuls
mov
and
imul
lock
inc
jg
leave
sahf
pop
sbb
push
xlat
fucomip
push
mov
dec
cmp
mov
xchg
and
push
in
test
push
js
inc
ds
add
loopne
jne
pop
stos
or
pushf
sbb
xor
fbstp
bound
push
flds
adc
mov
push
aad
mov
and
sbb
adc
cmp
cmp
xor
xchg
jb
mov
mov
enter
shll
or
bound
bound
pop
dec
je
inc
into
pop
hlt
les
xor
add
fwait
add
mov
pop
cmpb
cli
cmp
push
int3
adc
iret
or
rcl
aam
fsubrl
lds
mov
bound
inc
pop
pop
sbb
adc
lret
int
inc
into
add
mov
mov
push
xchg
inc
lret
mov
lea
sti
lock
das
test
add
cmpl
incl
lret
mov
out
in
jg
int
mov
scas
mov
sarl
pop
inc
or
jmp
clc
repnz
or
sub
mov
xchg
or
hlt
inc
or
add
pop
mov
mov
mov
mov
cmp
xchg
cld
dec
pop
push
rep
ret
push
in
mov
jae
faddl
mov
lahf
int
xor
pop
jbe
jb
pop
mov
xchg
cmp
rcrb
insb
ljmp
jb
enter
bound
mov
test
mov
js
std
cld
mov
jge
sbb
scas
movsb
and
pop
clc
xor
jge
stos
adc
or
fstl
adc
lret
sub
mov
enter
out
mov
mov
jno
insb
sub
sbb
push
pop
mov
xchg
sub
inc
adcl
addr16
pop
mov
testb
ss
ljmp
jo
lahf
fs
add
fwait
jle
flds
xchg
mov
inc
add
out
mov
ljmp
jge
mov
cs
enter
push
icebp
inc
mov
loopne
cmp
mov
les
or
dec
sub
xchg
xchg
push
pop
adc
dec
mov
adc
jecxz
xchg
mov
mov
jnp
mov
lret
lea
hlt
mov
cmp
ret
xor
loop
fidivl
xchg
inc
mov
and
lret
stos
pushf
cmp
push
loop
or
inc
add
pop
pop
mov
cld
pop
outsl
pop
inc
rcrb
lcall
dec
test
xchg
in
or
inc
std
cmp
movsl
int
mov
movhps
popa
inc
or
or
dec
inc
pop
or
xchg
xchg
test
popf
out
sbb
ljmp
imul
icebp
push
ljmp
add
mov
adc
setno
mov
je
inc
psubusb
mov
pusha
adc
popa
jecxz
pop
mov
mov
xor
xchg
js
arpl
mov
mov
add
cmp
pop
mov
adc
das
and
adc
ret
jl
cmp
adc
lods
or
pushf
dec
in
inc
call
lcall
or
rcr
adc
cmp
mov
cmpsl
clc
cli
cltd
inc
imul
push
xchg
fwait
cltd
inc
sub
xor
dec
pop
fildll
jecxz
cmp
jge
and
push
push
ja
loopne
mov
mov
stos
add
or
push
or
lret
push
xchg
cmp
and
icebp
mov
jae
push
inc
enter
rcrb
fldcw
cmc
sub
pop
sub
ret
mov
xchg
jne
fldl
js
jmp
and
add
inc
test
pop
and
loop
test
data16
adc
aas
mov
xchg
aad
cmp
outsl
adc
xchg
movsl
test
ret
test
add
scas
xchg
int
fsubrs
pop
or
inc
xor
and
nop
call
inc
sub
and
jge
fildll
mov
jno
out
int3
cmpsb
or
into
dec
std
xor
and
dec
or
in
sub
jmp
mov
dec
xchg
aas
or
jbe
push
jnp
stos
mov
es
mov
add
ljmp
push
out
lea
inc
xor
imull
mov
xchg
lcall
xor
add
fnstsw
sti
push
sub
sar
xor
rclb
sahf
dec
arpl
mov
adc
dec
in
dec
mov
into
pop
or
in
pop
cmp
push
cld
push
xchg
adc
rcrb
mov
lret
aas
std
cmp
test
aam
adc
outsb
sub
ret
es
mov
push
pop
jnp
pop
sti
in
sbb
cmc
pop
jg
xor
movsb
aam
scas
xchg
out
scas
cmc
outsb
jg
loop
add
jbe
loope
sbb
mov
fstps
shl
sub
mulb
fcompl
int
fcomp
xor
loop
sbb
leave
or
loope
mov
xchg
push
inc
mov
mov
mov
add
aas
lock
repnz
std
mov
sti
mov
shl
pop
cmpsb
shrb
out
dec
rcrl
mov
fdivrl
cmc
mov
and
inc
inc
cmpl
enter
fistpll
push
stos
inc
iret
push
ret
repnz
filds
xchg
sub
adc
push
mov
ret
and
xchg
add
fs
rolb
into
mov
cwtl
sbb
add
mov
sbb
xor
inc
aad
xchg
mov
xchg
in
mov
push
jmp
rol
fadd
or
mov
lods
out
mov
call
xchg
dec
cmp
hlt
mov
dec
dec
mov
xchg
cmpsb
test
mov
incl
pop
push
and
int3
dec
xchg
xor
add
fnstsw
pop
sbb
mov
mov
scas
stc
lock
xchg
scas
mov
lahf
push
pop
jp
pop
push
ja
push
icebp
insb
xchg
push
adc
negb
push
rcrb
lods
xchg
les
xchg
imul
mov
add
and
and
fimuls
or
std
adc
mov
std
aam
xor
sub
xchg
cmp
daa
push
cmpsl
xchg
add
cmp
xchg
mov
in
out
jo
push
cmpsb
xchg
xor
and
pop
dec
or
push
xchg
js
pop
inc
and
lret
fadd
push
inc
popf
fsubrl
loop
mov
xchg
mov
sub
mov
inc
jae
dec
pop
inc
xchg
setp
cmp
lds
and
mov
jo
pop
loopne
or
adc
fimull
outsb
xchg
jg
mov
push
jecxz
mov
cmp
mov
cmpsb
pop
repz
stos
mov
xorl
jmp
shl
push
add
pop
pusha
loopne
xchg
loope
push
add
xor
jo
icebp
xor
or
push
in
js
or
sub
inc
adc
cmp
sahf
cs
je
cmp
stos
cli
mov
fyl2xp1
inc
cmovne
mov
dec
jmp
dec
xlat
ret
jle
push
or
negl
pushf
sbb
insl
lret
pop
mov
lahf
sub
sub
sbb
xchg
aas
sbb
jbe
mov
fistpll
nop
leave
pop
xor
daa
adc
xchg
in
mov
sbbb
xchg
cltd
mov
mov
push
fstpl
jle
xchg
ljmp
mov
jge
cmp
test
sarb
std
cmp
repz
lret
sahf
mov
jmp
xor
dec
enter
js
cmp
xor
ja
cmp
gs
add
cmc
divb
mov
pop
gs
xchg
test
mov
cwtl
mov
sub
cmc
nop
sub
mov
sub
sbb
cwtl
lods
addl
xchg
subb
push
stos
and
push
dec
repz
iret
aad
cli
xor
jmp
fmull
pop
cltd
outsb
stc
insb
xlat
and
cli
cld
daa
shrb
pop
mov
mov
xchg
adc
jmp
testb
mov
ss
subl
cs
or
mov
idivl
jne
into
pop
and
fistps
mov
aas
cmpsl
dec
push
pushf
lret
or
xlat
stc
add
cmpsl
inc
pop
ret
pop
mov
push
pop
mov
into
enter
mov
jb
and
mov
out
rorb
or
sahf
cmp
jl
out
out
icebp
loop
sub
mov
cmp
push
cmp
and
arpl
inc
lret
or
pop
shl
loope
lods
fisubl
jmp
xchg
mov
and
imul
sbb
pop
cmp
aas
aaa
fadds
mov
enter
fs
loopne
fsubrs
xor
cmp
das
pusha
and
dec
cmp
sbb
test
fdivrs
push
into
inc
xchg
addb
xchg
mov
mov
call
or
push
cmp
sbb
popf
and
fstl
mov
pop
pop
sbbb
jmp
pushw
pop
loopne
mov
and
mov
push
sbb
or
xor
dec
jbe
lds
pusha
jne
add
jmp
je
xor
les
in
adc
pop
jl
test
adc
roll
ss
decb
xor
lock
mov
pop
popl
lret
inc
rcr
push
lea
xor
daa
and
clc
push
jbe
sbb
push
mov
stos
ja
or
imul
push
js
cmp
pop
lcall
sbb
clc
fisubrl
jp
into
fcmovne
sbb
cmpb
dec
mov
sub
or
shrb
aam
mov
dec
fldenv
lret
pop
sub
add
stos
sbb
stos
inc
ret
push
lds
orl
jb
jmp
dec
scas
or
fwait
testl
lcall
je
mov
nop
loop
jb
cmc
adc
pop
dec
loope
repz
sbb
push
add
fucom
mov
incl
dec
jmp
mov
lret
or
call
push
rcl
jmp
cltd
icebp
sbb
mov
jne
fimull
das
mov
dec
mov
addb
dec
mov
dec
divl
jmp
or
sahf
mov
mov
xlat
pop
sti
jns
xor
imul
mov
mov
hlt
add
repz
add
cmp
cmpsb
fwait
xchg
jp
icebp
lods
and
fmul
push
ret
in
in
cli
adc
and
data16
sbb
push
mov
in
mov
jp
das
jge
in
shll
jno
test
std
xor
lret
sub
mov
inc
and
push
imul
mov
outsb
add
aas
cmp
push
mov
das
cmc
shll
push
inc
cs
dec
lods
push
clc
pushf
pushf
lret
in
sbb
add
clc
fistps
daa
js
in
out
pop
pop
mov
test
bound
fildll
mov
xchg
inc
push
and
jecxz
popf
lret
lcall
push
inc
xchg
pop
outsl
add
xchg
and
dec
pop
push
outsl
jle
mov
jne
pop
jl
pop
decb
add
out
push
jg
pop
out
shrl
rclb
idivb
add
cmpsb
pop
push
imul
fidivrs
ss
jmp
mov
mov
fstpl
jle,pn
adc
mov
inc
mov
xchg
fistpl
in
int
mov
sub
jns
add
xchg
pop
push
nop
int3
negb
lret
jecxz
pop
inc
fdivs
add
sti
sub
xor
ror
js
out
pop
inc
mov
xchg
push
pop
add
mov
inc
fisttpl
adc
inc
inc
add
xor
xor
adc
jp
jo
pusha
or
inc
cli
subl
xor
mov
negb
xchg
scas
xchg
std
cmovp
adc
dec
enter
in
in
cmp
sti
lods
cmp
ficompl
loopne
dec
and
add
xor
fdivr
jg
jecxz
push
movsb
pop
mov
test
dec
jge
testb
pusha
ret
loope
push
add
fsubrp
cmc
ficoms
aas
nop
jnp
aaa
xchg
xadd
loope
into
xchg
mov
lea
add
mov
lods
je
adc
cltd
mov
push
lock
rcll
xchg
addr16
lods
push
stc
pop
xchg
cld
mov
mov
lret
mov
out
or
push
pop
and
or
jo
ja
loop
mov
es
push
cmp
jg
jle
cwtl
mov
xchg
jb
and
xor
lods
repz
cltd
pop
sub
pop
cmp
pop
push
jno
mov
int3
push
mov
dec
std
xlat
or
xchg
dec
loop
sub
jns
mov
push
dec
mov
divl
sub
jbe
pop
or
cmp
in
jno,pt
scas
stc
jns
pop
mov
aaa
mov
sbb
rcrb
loopne
pop
cld
dec
inc
rcr
pop
xchg
out
push
and
pop
push
and
int3
and
mov
push
mov
inc
sub
je
xchg
sbb
incl
xchg
movsl
aas
xchg
int
ja
add
mov
jg
push
insl
sarl
push
mov
stc
and
adc
ja
add
sti
ja
fld1
jns
in
cmpsb
mov
pop
or
or
mov
pusha
fwait
mov
mov
adc
jns
mov
clc
icebp
dec
and
addb
insb
outsb
ficomps
push
jl
out
cmp
sti
test
adc
pusha
sahf
pop
inc
and
lret
fcoms
and
pop
insl
jl
mov
mov
fnstsw
xchg
enter
movsl
rcll
cmc
inc
sbb
push
pop
ja
xchg
shl
ja
daa
fists
and
push
push
imul
loope
adc
pop
mov
jns
and
push
in
xchg
aam
pop
sbb
ucomiss
add
cltd
mov
jo
aas
lock
cs
insb
dec
xchg
inc
ja
shrb
mov
call
and
pusha
popa
les
ja
arpl
adc
cmp
xchg
cs
ret
leave
mov
jb
imul
repnz
adc
mov
dec
sbb
mov
insl
add
jmp
jmp
jns
sub
xchg
mov
pop
sbb
in
adc
mov
rcrl
add
mov
out
ja
dec
xor
sub
inc
cltd
xchg
mov
cmpl
push
and
mov
movsl
repnz
sti
mov
loop
daa
and
loop
add
mov
std
sbb
add
pop
imul
out
jno
xlat
mov
pop
cltd
shl
mov
out
ffree
imul
loopne
icebp
ljmp
repz
sub
repz
cld
push
aaa
mov
dec
pushf
rcrb
pop
fbstp
or
fldl2e
aaa
test
jo
adcb
test
test
xor
fsubrs
out
adc
imul
add
adc
push
aaa
adc
mull
mov
stc
ss
sbb
cmpl
fdivs
dec
fisubs
aam
sbb
jno
cmp
cwtl
mov
cmp
or
aaa
jns
lcall
push
add
cmp
aaa
xor
mov
out
jmp
roll
pop
xor
pusha
mov
mov
shl
test
cmp
shl
push
jo
mov
call
push
es
imul
loope
lahf
add
mov
loope
fdivrl
xor
test
dec
xor
cmp
stos
jbe
test
mov
mov
stc
inc
xchg
inc
lock
xchg
jp
jmp
stos
push
lds
lods
inc
xor
jno
jmp
mov
cld
mov
shrl
mov
mov
cli
mov
sbb
insb
sbb
mov
push
shr
cli
xchg
mov
dec
test
push
int
fisubs
sub
add
ss
frstor
out
rolb
imull
dec
or
pop
mov
adc
mov
ficompl
incb
xor
test
lods
sbb
jne
iret
sahf
sbb
out
repnz
leave
stos
into
clc
cmpl
inc
cmp
push
pusha
ss
shl
sub
mov
mov
cli
stc
sbb
pop
or
jb
pop
shrl
mov
xchg
xor
int3
scas
sbb
xor
push
inc
sbb
sbb
xor
les
pop
in
jbe
in
ret
dec
pop
hlt
push
adc
mov
lock
insl
mov
mov
jmp
sub
sarl
mov
and
ss
pop
mov
pavgw
mov
daa
andb
mov
dec
xor
frstor
lock
jo
mov
sti
mov
fstps
ja
pop
or
adc
lahf
dec
mov
pop
jmp
add
xor
js
fs
sti
push
repnz
pushf
fcomp
aad
sarb
and
in
or
insl
push
cmc
xchg
in
xor
pop
sub
js
clc
adc
arpl
adc
dec
push
mov
inc
movsl
cmp
cmpsb
test
insb
pop
dec
cmp
or
addr16
popf
or
mov
xchg
xor
mov
and
out
adc
lods
fisttps
test
pop
jno
cli
jmp
and
push
cmp
xor
push
and
and
cmpsb
sbb
data16
fisubrl
and
movsb
mov
rol
xor
cmpsl
roll
int
les
cli
adc
loope
xchg
mov
addl
push
cmp
push
ljmp
test
es
mov
mov
pop
push
push
popf
repz
mov
mov
js
jle
and
shr
inc
lods
or
and
or
pop
inc
fimuls
ret
and
cmp
outsl
push
mov
pop
lret
idivl
lods
jae
call
aas
and
pop
test
mov
push
leave
and
cld
mov
lret
mov
out
pop
mov
in
jle
xchg
mov
mov
xchg
mov
jl
inc
mov
fnsave
sbbl
fnstsw
inc
inc
aad
movsb
fisubl
inc
mov
adc
and
aas
and
jp
cmp
or
jno
sub
ja
inc
inc
cli
outsb
aaa
and
leave
pushf
rcll
les
xor
rcrl
mov
in
lret
jg
inc
xchg
sub
popf
mov
test
push
ret
ret
das
dec
movsl
cmpsl
sub
addr16
xchg
lret
push
dec
adc
pop
data16
dec
push
and
aam
inc
mov
fcoml
cmc
jne
pop
xchg
jns
rorb
clc
and
lods
push
loopne
loop
repz
jl
pop
fistps
mov
lret
xchg
xlat
shll
sub
jl
lods
dec
cmp
sub
pop
mov
xchg
add
sbb
dec
add
fstpl
es
mov
daa
aad
jecxz
jnp
popfw
add
mov
xchg
stos
jae
or
xor
sub
push
jb
dec
sub
mov
movb
int
mov
mov
lcall
dec
jecxz
cmp
xchg
cwtl
and
outsb
dec
pop
add
movsl
repnz
pushf
popf
cwtl
inc
int3
push
mov
insl
ret
mov
arpl
xor
in
fidivl
jg
lret
sbb
sub
pop
leave
loope
subl
lret
mov
ja
push
loopne
out
inc
or
jb
enter
lods
xchg
bound
push
push
and
pop
adc
jo
lea
mov
pop
mov
fwait
sbb
imul
pop
popf
adc
cmpsl
mov
imul
loopne
daa
jle
ret
mov
adc
push
xor
cwtl
mov
cli
sarl
jmp
out
iret
pop
mov
mov
aaa
stc
pop
add
data16
mov
lret
mov
cmpsb
mov
cwtl
movsb
xorl
push
xor
pop
movsl
inc
pop
in
shlb
xor
jns
xor
cmpsl
sarb
dec
bnd
dec
push
push
lahf
fwait
jbe
and
mov
ret
icebp
mov
jb
sbb
fmul
cwtl
add
or
loope
pop
add
stos
icebp
mov
xchg
filds
add
sahf
insb
xchg
rcrl
orb
jo
add
notb
ret
mov
stos
sti
stos
mov
jae
popf
add
test
arpl
and
mov
sub
sub
pop
mov
arpl
int
cltd
inc
repnz
lahf
faddl
mov
insb
or
sbb
ja
mov
popf
xchg
in
sub
aaa
out
insb
fs
imul
shrl
mov
adc
mov
and
and
and
mull
jbe
xchg
mov
lods
jg
add
xchg
add
mov
push
arpl
outsl
mov
enter
mov
push
sbb
xchg
int3
mov
push
call
jno
mov
mov
in
cmp
das
dec
aad
sub
mov
into
mov
and
xchg
or
or
in
inc
mov
popa
pop
cmp
push
into
dec
cli
mov
outsl
lods
cmp
push
lea
loope
jmp
mov
lods
add
int
test
mov
xchg
jg
icebp
lret
pop
mov
imul
add
sbb
or
jae
mov
in
das
jb
jb,pt
mov
js
or
leave
dec
xchg
mov
jge
dec
cs
push
or
add
mov
popa
aaa
andb
leave
add
sahf
sub
xor
inc
add
pop
and
add
xchg
movsl
idivb
sub
fwait
xchg
outsl
push
dec
mov
cwtl
cmp
cltd
mov
mov
mov
and
pop
lret
push
xor
cmpb
cs
iret
repnz
pop
fs
leave
out
mov
dec
adc
daa
mov
push
jge
js
es
arpl
pop
movsb
nop
lahf
add
jne
push
xlat
lods
jo
sahf
or
insb
adc
pop
test
cmp
iret
cmp
and
sar
xor
in
cwtl
mov
push
stc
or
jmp
jno
mov
in
addr16
js
pop
sub
sahf
adc
iret
push
sbb
pop
test
pop
mov
rcrb
add
add
mov
xlat
stos
or
add
loopne
jp
and
jp
fld
pop
jle
dec
add
in
xchg
xlat
int3
int3
pop
jns
mov
and
xchg
cmpsb
out
xor
add
leave
push
push
bound
xchg
jbe
negb
dec
popa
xchg
pop
mov
in
out
and
dec
jnp
adc
cmp
cmp
incb
lret
shlb
popa
xchg
jae
hlt
cli
and
fwait
xor
add
divb
cmp
mov
jb
fbstp
mov
rcrb
fdivrs
xchg
pop
cmp
adc
fimuls
in
movsl
hlt
lret
cmpsb
repz
call
cmc
dec
add
sub
call
xlat
lds
pop
clc
add
cmp
push
pop
test
xchg
push
mov
xchg
xor
imul
and
xchg
xlat
pop
sbb
mov
xchg
mov
cmp
lcall
mov
adc
push
mov
mov
mov
sbb
dec
pop
jo
pop
aas
add
lcall
enter
loop
aas
out
pop
mov
cmp
mov
mov
bound
lahf
sub
scas
add
mov
push
sub
lahf
sub
notb
into
pusha
cmp
ljmp
xlat
sub
jns
xor
pop
cmp
hlt
outsl
iret
ja
fists
mov
out
cmpb
jo
ljmp
or
cmp
inc
push
ss
movsl
movsb
test
mov
cmp
in
push
sbb
jmp
xchg
inc
std
fbld
pop
or
mov
or
movsb
sub
scas
jns
lods
or
decb
or
or
movsb
pop
dec
fcomip
inc
dec
enter
mov
popa
ljmp
shll
mov
pop
sub
js
push
xchg
xor
xor
pushf
fidivs
pop
lcall
fcoms
xor
dec
popa
adc
pop
das
dec
cltd
cmp
pop
mov
inc
data16
push
sbbb
movsb
jp
adc
push
sub
adc
sbb
in
jp
inc
mov
lret
push
mov
fwait
jmp
cmpsl
sub
mov
addr16
stc
cli
jo
lock
in
sub
sub
lods
aam
js
aam
add
mov
jb
test
fildl
jl
lahf
je
sarb
fsubrs
out
out
dec
clc
push
xor
mov
lock
push
or
cltd
cmc
xor
loope
adc
int
js
cld
test
adc
out
subl
dec
lret
xchg
sub
fwait
cmp
cmc
mov
inc
mov
lcall
out
jecxz
xor
icebp
and
ds
add
or
cmp
mov
cmp
mov
iret
mov
fisubrs
mov
inc
arpl
push
or
mov
add
lock
xlat
sbb
stc
inc
mov
add
jb
sub
push
add
es
lods
repnz
jbe
xlat
pop
sbb
sbb
loop
inc
arpl
sahf
out
add
cmpsl
mov
jmp
mov
ljmp
add
lcall
xor
call
mov
add
nop
stos
lret
and
aad
nop
mov
lds
dec
mov
pop
and
jge
call
mov
sti
roll
sbb
and
push
push
orl
sbb
jae
les
inc
add
test
add
call
push
mov
push
ret
mov
push
loope
scas
xchg
ljmp
js
loop
dec
rcll
ds
cmp
mov
add
jg
inc
mov
cmp
loopne
mov
arpl
ljmp
or
and
test
mov
inc
repz
add
sub
cs
nop
cmpb
mov
push
cli
pop
push
adc
enterw
inc
jo
push
ja
adc
mov
inc
enter
jae
fwait
in
mov
insl
nop
in
push
dec
fimull
cmp
movsb
mov
jmp
sbb
dec
mov
or
cmpsl
mov
mov
call
leave
jae
insl
clc
and
inc
lods
xchg
fxch
call
out
sbbl
ret
pop
fwait
mov
fistpl
shrl
mov
loop
jmp
cs
push
mov
xlat
push
mov
adc
pop
mov
scas
fnstcw
shrb
mov
int3
js
mov
sub
or
aam
cmp
or
movsb
adc
push
jns
leave
leave
inc
push
iret
add
shl
out
inc
xchg
test
fwait
push
cmp
inc
or
mov
pusha
arpl
outsl
jmp
clc
mov
filds
inc
push
std
call
jg
gs
int
xchg
int
mov
addr16
loopne
fdivp
push
pushf
inc
in
out
and
or
xchg
in
fdivrl
into
inc
incl
dec
jbe
scas
dec
pop
enter
aam
dec
in
mov
sub
or
icebp
aad
sub
lret
insl
movsb
int
dec
push
push
push
xchg
cmp
inc
adc
shl
shld
ja
fmulp
dec
cs
popa
rcrl
lods
lcall
adc
pop
mov
fbld
push
cmp
fwait
inc
adcl
jb
nop
jo
sub
mov
inc
sbb
mov
leave
mov
rcrb
xor
cmp
jge
repnz
fnstsw
push
icebp
repnz
add
ret
mov
push
arpl
sub
push
jnp
inc
fistpl
add
jp
push
mov
pushf
sahf
leave
lods
dec
dec
test
xchg
imul
push
xchg
xchg
xchg
cmp
lods
cmp
adcb
and
pop
jmp
ja
clc
insl
adc
mov
mov
loope
xchg
xchg
cmp
xchg
mov
push
push
inc
mov
push
adc
stos
pop
push
stos
fcoms
iret
iret
mov
and
iret
scas
cmp
mov
add
push
cs
lahf
mov
in
mov
cmp
call
lahf
std
sbb
or
xchg
push
xchg
cmp
lods
and
xor
dec
mov
das
add
mov
xchg
mov
mov
and
jns
jne
adc
insb
fwait
lret
sbb
fisttpll
jnp
shrb
dec
mov
mov
scas
hlt
inc
movsb
movsl
idivb
sti
cs
jecxz
inc
fs
iret
or
leave
aam
mov
aas
xor
dec
cwtl
lods
lods
or
inc
out
pusha
mov
jbe
test
fsubl
scas
enter
mov
pop
adc
fbstp
clc
aas
push
leave
fstpl
or
sub
jbe
dec
psrld
sub
sub
test
cmpsb
leave
inc
cld
ss
and
lahf
adc
fucomi
or
cmpsl
icebp
test
je
lock
jno
jp
jb
bound
mov
adc
xchg
cmp
mov
shrb
lock
mov
ss
cmp
jl
sub
fdivl
loop
je
mov
dec
push
or
pop
clc
or
mov
xchg
je
iret
add
aaa
repz
or
ja
sub
fstps
movsb
adc
jecxz
and
mov
mov
fldl2e
bound
mov
jmp
mov
and
jg
mov
stos
cmp
scas
iret
and
into
or
decb
shrd
vandnps
mov
not
mov
out
jle
js
lret
sbb
lcall
cmp
sbb
cs
sub
loopne
adc
mov
in
jbe
cwtl
cmp
sti
in
push
repnz
xchg
xlat
das
jb
mov
inc
jl
jno
or
push
adc
std
icebp
pop
mov
out
pop
add
pushf
jb
push
adc
sbb
inc
mov
xchg
xchg
xchg
int
pushf
sub
dec
mov
mov
out
in
xlat
xchg
outsb
pop
and
mov
xlat
sbb
jl
cmpsl
arpl
sbb
adcb
adc
mov
rclb
push
jne
lock
mov
ret
push
out
mov
mov
in
les
add
rorb
adc
dec
aam
xchg
insb
push
cmc
adc
and
push
fildl
scas
pop
jno
or
mov
pop
jecxz
fmulp
add
out
xchg
scas
inc
adc
popa
sub
sbb
das
cmpsb
movsl
mov
mov
mov
rcl
push
test
push
fidivs
adc
mov
push
sbb
repz
cs
mov
pop
pop
jp
subb
adc
adc
lcall
push
movntps
insb
cltd
mov
jg
mov
cmpsb
sub
movsb
ror
popa
in
mulb
xchg
mov
into
test
or
shl
mov
pushf
or
stc
test
mov
pop
xchg
lds
dec
shll
cli
jle
pushf
fld
adc
fcoms
lea
inc
jmp
adc
xchg
and
js
xchg
int
test
or
and
mov
cwtl
pop
icebp
mov
jb
pop
push
decb
mov
lcall
dec
dec
push
adc
jle
xchg
inc
jae
mov
or
out
mov
sbb
or
pushw
dec
aas
pop
adc
cld
sbb
mov
mov
adc
outsb
out
mov
mov
cmpsl
rclb
rcr
out
pop
scas
push
aad
loopne
push
rclb
adc
outsl
repnz
in
dec
je
jp
enter
int
cmpsl
stc
popa
or
lret
push
jno
inc
jno
sub
mov
mov
and
cmc
dec
ds
ja
addl
bound
push
xor
push
std
mov
pop
mov
imul
loope
in
xchg
fldcw
or
fisttps
cmp
lret
out
repz
mov
fwait
adc
lods
mov
dec
pushf
testl
mov
jecxz
mov
push
xor
sub
mov
xchg
jbe
xchg
mov
div
cmc
cmp
pop
mov
xor
add
cmp
sub
adc
or
cwtl
dec
or
jg
decb
push
outsl
jg
xchg
es
insb
in
lods
add
cltd
xor
adc
add
xor
mov
aas
loopne
push
xchg
pop
push
sbb
repz
fcomps
in
jmp
shlb
push
push
cltd
add
arpl
jmp
je
pop
xchg
jno
mov
mov
cpuid
inc
and
inc
fcoml
cld
xchg
cwtl
dec
or
repz
outsl
fstps
dec
hlt
cmpsl
daa
ret
aam
pop
push
inc
cmp
jne
sbb
inc
mov
mov
sbb
xlat
add
xchg
cmp
shlb
pop
and
xchg
mov
arpl
mov
jp
in
stos
call
cmp
mov
clc
pop
test
lock
sub
in
xchg
xor
and
movsb
mov
in
push
pusha
sti
lods
mov
enter
push
pop
frstor
sub
and
clc
sbb
addb
pushf
xor
xchg
and
movsl
push
mov
outsb
aas
mov
cmpsl
fsubl
fcoms
loop
cmp
clc
cld
push
xchg
mov
dec
roll
pop
cmc
popf
ret
flds
sbb
mov
fcompl
inc
jmp
lret
cmc
jnp
shrl
pop
pop
lahf
addr16
mov
pop
dec
xchg
pop
sbb
add
in
cmp
or
int3
and
js
dec
pop
sbbl
test
lods
test
push
sub
jae
les
cwtl
cmp
jg
into
lahf
lcall
fadd
lret
out
add
ljmp
inc
mov
aaa
lods
jmp
push
xorl
les
push
adc
mov
push
stos
xchg
pop
rcr
pusha
pop
in
clc
and
sub
jno
dec
movsl
and
lret
xor
jmp
and
and
aam
mov
dec
lods
push
int3
mov
xor
mov
mov
pop
jg
in
xor
pop
fisubl
out
in
in
sbb
ss
aad
add
clc
out
sbb
push
or
push
scas
pop
movsl
aaa
sub
repz
xchg
loop
mov
and
cmp
sar
test
adc
shll
faddl
lret
cmp
testl
scas
in
pop
aaa
adc
es
fiadds
jg
in
fistl
mov
int
adc
mov
push
add
out
cld
aaa
dec
push
and
repz
leave
add
loopne
icebp
rcrl
adc
sti
pop
int
pop
mov
mov
fwait
mov
add
imul
sub
sub
std
jg
xlat
stos
mov
mov
aam
inc
jno
dec
and
stos
fcmovnb
fucomp
push
mov
or
into
stos
lret
push
test
mov
mov
mov
test
sub
cmpsl
fistl
pop
loop
outsb
std
push
ret
test
pop
test
es
jbe
push
sahf
es
jecxz
lcall
dec
mov
xor
jg
push
push
frstor
out
xchg
js
cli
fsubr
je
inc
add
pop
jge
jne
mov
add
and
xor
xchg
js
ror
push
jae
mov
enter
mov
sbb
fstps
sar
adc
xor
or
js
cmp
stc
xchg
fs
ljmp
rorb
out
shlb
jbe
daa
push
stos
ret
cmp
das
push
scas
inc
aam
mov
out
test
or
iret
bnd
xor
repz
inc
dec
mov
xchg
in
aad
dec
rcrb
nop
mov
adc
gs
stos
sbb
and
ficoms
std
outsl
neg
inc
cmpsb
jmp
ja
add
mov
adc
dec
fbstp
dec
cmp
push
sbb
jb
sub
outsl
pop
sub
ss
ret
lock
add
cltd
inc
xor
sub
mov
mov
jge
fidivl
xlat
out
xchg
mov
push
jnp
jo
sbb
js
mov
xorb
sub
iret
adc
jne
sub
xor
movsb
imul
or
mov
outsl
mov
shrb
mov
out
xor
xor
or
xor
icebp
mov
pusha
inc
cwtl
add
bound
jmp
pop
cltd
fiaddl
cmpsl
xchg
jno
stos
sbb
sub
mov
outsl
cmp
jecxz
jl
and
stos
pushf
and
dec
mov
lock
dec
imul
jp
mov
add
subb
and
dec
push
insl
ret
xchg
ret
fnsetpm(287
fs
fwait
sbb
inc
sti
mov
fcomip
inc
repz
les
xor
fnstenv
adc
xor
stc
test
add
xor
ljmp
pop
push
loopne
shr
inc
push
out
lret
fdivl
pop
fs
sarl
adc
or
and
mov
int3
xor
jl
in
push
cmpsl
test
sahf
sub
movsl
aad
mov
pop
dec
loope
push
add
push
push
les
jnp
push
jp
push
insl
outsl
aas
icebp
jmp
and
xchg
aam
rcrl
adc
inc
mov
bound
pop
sbb
pop
push
mov
out
fcomps
xor
adc
stos
sahf
daa
shlb
add
push
xchg
sbb
scas
jl
mov
loop
and
and
xchg
inc
in
sub
fbstp
sub
jl
mov
fimull
xor
inc
inc
insl
stc
xchg
loopne
repnz
jp
sahf
mov
mov
xor
dec
fs
subb
mov
mov
xor
int3
cs
jns
sbb
adc
mov
cs
ljmp
loopne
std
or
hlt
popa
or
aad
xor
inc
icebp
icebp
lock
roll
mov
cmp
std
rol
gs
and
cmc
arpl
cmp
fistps
std
inc
mov
insl
cmpsb
cmp
cs
mov
mov
xchg
adc
push
adc
sub
mov
fisubs
push
daa
dec
jno
movsl
cmp
sub
int3
in
idivl
xchg
pop
and
rolb
adc
lret
in
in
ret
cmpl
aam
fst
gs
mov
and
mov
cmp
fwait
int
sub
or
cmc
sbb
into
nop
stos
iret
outsb
add
mov
or
xchg
jmp
xchg
and
out
xor
xchg
je
addr16
or
sub
cmp
popa
or
stc
rcrb
gs
lock
mov
push
cld
das
cmc
xlat
insl
jle
cltd
cmp
xor
sub
xchg
pop
mov
dec
call
mov
dec
jbe
scas
mov
test
xor
mov
push
mov
xor
cmp
xor
mov
dec
lea
mov
movsl
shl
cmp
repnz
shlb
xchg
korw
sub
dec
push
jns
mov
dec
leave
test
push
insb
jl
push
sub
sub
fs
xor
inc
data16
cmp
sbb
xchg
dec
push
cs
movq
insb
push
cwtl
fimuls
sbb
and
mov
cmp
xchg
aas
mov
pop
pop
test
xor
movl
or
pop
gs
pop
xchg
xchg
lock
popa
shll
cwtl
mov
add
lds
imul
push
jne
dec
mov
sbb
repz
push
ljmp
inc
orb
add
sbb
xchg
aam
dec
jo
push
mov
push
cmp
movsb
in
inc
aas
dec
xchg
test
mov
xchg
or
fst
cmpb
pusha
xorb
add
and
call
sbb
fnsave
add
insl
jge
mov
dec
stos
mov
push
inc
pusha
sti
int3
add
push
mov
mov
mov
pop
lret
inc
and
fsubs
add
xchg
mov
cmp
pusha
faddl
cmp
cltd
outsl
jle
movsl
mov
gs
test
gs
pop
cld
or
adc
xchg
sbb
cmp
cmp
fs
mov
pop
pop
pop
sub
dec
xchg
inc
movsl
mov
ret
clc
hlt
movsl
or
test
mov
fsubl
cmc
mov
inc
addr16
push
push
lods
adc
inc
ret
loope
bts
out
lret
pusha
push
sbb
dec
fs
cwtl
aas
sub
cli
stc
lret
shrb
cmpsb
adcl
jmp
fiadds
mov
xor
push
push
sub
incb
inc
ljmp
test
jg
repz
push
loope
inc
ret
push
mov
mov
sub
pop
std
enter
and
std
pop
and
arpl
inc
imul
pusha
shl
adc
lds
out
fisubrs
push
pop
addr16
leavew
mov
outsl
int
cli
and
dec
sub
test
cmp
rolb
xor
lock
ljmp
inc
cmp
and
stc
push
pop
cmp
add
adc
add
and
cli
lods
popa
pushf
sbb
in
js
cmpsl
outsl
push
xor
cmp
mov
enter
movsl
jmp
iret
add
imulb
hlt
scas
sub
add
lahf
or
into
jns
iret
dec
jg
sbb
sbb
fistpl
inc
lret
mov
add
pop
in
pop
imulb
cwtl
xchg
ret
out
cltd
outsl
adc
fiaddl
mov
scas
mov
xchg
dec
push
mov
or
and
das
fldcw
shll
push
mull
mov
pushf
xchg
insb
mov
dec
pushf
adc
loope
andl
sti
cwtl
sbb
push
shr
xlat
das
dec
inc
cmp
sub
dec
mov
shlb
test
xor
xor
lret
cld
pop
cmpsb
scas
dec
mov
loope
jl
and
enter
mov
mov
in
addr16
js
xor
adc
push
repz
mov
push
mov
out
addl
pop
dec
xor
push
mov
loop
jp
sub
pop
add
sbb
sbb
shr
and
jl
push
dec
addr16
jae
scas
inc
std
leave
and
mov
jbe
ja
js
jnp
xor
dec
lea
sbb
or
add
lcall
lcall
jo
out
das
adc
popa
in
hlt
insb
shr
fs
jno
xorl
xchg
cmpsl
fildl
add
jl
mov
add
pop
sbb
mov
jno
jmp
mov
test
push
cld
movsb
push
sbb
negl
mov
cmp
adcb
roll
mov
jo
fnstenv
lods
aaa
push
ss
cmpxchg8b
std
push
dec
nop
fmul
leave
out
mov
shl
inc
scas
into
std
mov
in
insl
das
and
loop
out
mov
add
rcrl
sub
mov
arpl
mov
mov
mov
or
std
ret
into
jle
cmp
mov
mov
or
sub
push
and
add
ret
add
dec
lea
pushf
xor
jbe
jb
pop
dec
notb
pop
xchg
adc
xchg
testl
jle
xchg
push
fsubl
hlt
mov
and
repnz
xchg
dec
notb
mov
js
ja
xchg
out
repz
mov
lds
push
pop
mov
mov
pop
rcll
stc
and
rolb
mov
mov
aaa
dec
mov
lret
add
fisubl
pop
push
push
sub
in
sub
lds
inc
and
or
int3
adc
std
add
fwait
mov
cmp
pop
test
arpl
cmpsl
cld
push
lods
andl
mov
gs
les
fbld
out
les
jnp,pn
std
mov
inc
or
dec
adc
mov
mov
sbb
popa
xor
pop
test
hlt
mull
jns
bound
cwtl
jnp
mov
cmp
jnp
inc
xchg
data16
repz
lahf
fbld
aas
lock
stos
movsb
xor
aad
enter
jnp
mov
pop
mov
and
fs
mov
xor
testl
hlt
pop
jge
cmp
cmpb
sub
test
add
xchg
mov
aaa
xor
or
adc
pop
pushf
aam
or
daa
insb
shrb
or
jl
dec
cmpb
mov
cwtl
sbbl
call
xchg
mov
lcall
sbb
orl
int3
pop
sbb
push
ss
enter
sbb
mov
sbb
xchg
mov
inc
lods
mov
push
sub
or
push
outsb
aaa
push
dec
out
lock
roll
icebp
ds
imulb
inc
stos
add
adc
adc
addb
sbb
xor
dec
pop
sub
ret
shll
mov
sub
pop
mov
cltd
in
xlat
pop
xchg
into
lcall
into
xor
or
sti
cli
enter
xor
mov
aaa
cli
mov
sahf
outsl
test
inc
cmc
lret
inc
xor
pop
or
out
cmc
fbld
add
xchg
or
xchg
scas
ret
je
xor
movsl
cmpsl
mov
jl
fmull
clc
push
and
mov
add
mov
or
lods
xchg
jecxz
cli
mov
lock
xchg
nop
pop
mov
cld
lahf
rcr
fistl
mov
mov
gs
lods
xor
sbb
in
sahf
xchg
call
test
inc
inc
xor
and
jl
jl
cmpsb
and
movsl
ficoms
ds
test
and
mov
jg
loop
dec
adc
inc
add
out
xor
sub
popf
xlat
xlat
jmp
fwait
and
inc
push
fsubl
jmp
testl
mov
xchg
xor
sbb
sub
cwtl
ret
popa
ja
lahf
in
jl
add
aas
cmp
pop
jae
pop
test
and
in
addr16
push
sub
adc
in
pop
imul
icebp
mov
mov
and
aas
enter
push
addr16
pushf
dec
push
popa
inc
xchg
movsb
testl
mov
insb
add
repnz
xor
cmp
mov
out
dec
push
loope
enter
flds
cli
or
imul
stc
repz
dec
sbb
xchg
out
nop
jl
or
jge
adc
mov
adc
pusha
cmp
sub
mov
xchg
push
or
mov
mov
add
filds
int
xor
fnstcw
sti
inc
nop
clc
rorl
mov
repnz
stc
scas
and
cmc
cmpsb
xchg
mov
cld
xorl
xor
ds
push
roll
test
add
test
xchg
jge
popa
mov
aam
cmpsb
ret
rcrb
add
push
outsl
inc
rcrb
pop
iret
or
addr16
cwtl
and
aaa
or
sbb
jno
and
mov
pop
jmp
push
push
adc
or
fs
and
std
dec
push
jmp
imul
and
inc
mov
outsb
or
lcall
inc
rorb
nop
mov
inc
add
inc
mov
jo
lret
mov
inc
xchg
mov
fs
addr16
scas
lret
mov
mov
fcompl
push
inc
push
mov
rorb
mov
movsb
enter
mov
mov
mov
lods
lock
mov
fbld
xor
adc
jp
inc
int3
daa
iret
pop
mov
sub
sub
push
add
xchg
sbb
sub
gs
gs
or
pop
outsl
mov
test
enter
call
ja
test
nop
or
fdivrs
xchg
iret
cmp
dec
aaa
insl
into
in
data16
movsl
xor
fldl
mov
aaa
sarl
adc
and
mov
or
stos
pop
test
dec
and
and
mov
and
xchg
xchg
ret
jmp
mov
test
lcall
bnd
out
sahf
cltd
inc
adc
jge
sub
push
jb
gs
pop
stc
rorb
cmp
xor
mov
idiv
jp
shll
mov
sbb
mov
in
bound
dec
mov
xor
leave
hlt
iret
sub
mov
sar
addb
je
sbb
and
aad
mov
in
cmp
fists
dec
nop
and
cmc
jmp
int3
push
bound
dec
movsb
sbb
cmpsb
rolb
lahf
arpl
lods
cmp
jne
mov
fisttps
out
or
ficoml
jo
dec
cmp
inc
push
out
xor
fidivrl
push
mov
dec
gs
adc
cld
inc
adc
push
xchg
cmc
repnz
jb
xlat
int
cmp
mov
loop
mov
imul
cmpsb
xor
adc
mov
or
cmp
leave
mov
and
add
lret
mov
push
outsb
sti
addr16
push
mov
gs
sbb
imul
cld
sub
popf
mov
lahf
loopne
scas
push
lods
cmp
push
mov
dec
jno
mov
mov
mov
mov
jnp
les
loope
and
push
mov
jge
xor
in
sub
cwtl
xor
jl
bnd
jnp
xor
xor
push
xchg
inc
add
xchg
dec
call
test
mov
ss
insl
lods
pusha
dec
popa
mov
lahf
adc
add
xchg
mov
call
lds
int
jne
push
or
dec
push
ror
testl
nop
arpl
sub
mov
dec
cmpsb
ss
mov
enter
mov
inc
inc
cmp
xchg
push
inc
out
mov
dec
cmp
mov
inc
sahf
push
dec
ljmp
ljmp
sub
and
dec
adc
push
or
insb
push
mov
mov
push
lods
push
loope
inc
add
loope
cld
push
push
dec
cmp
in
mov
cmp
int3
les
cmc
add
fwait
or
xchg
add
aad
std
sbb
imul
ret
dec
int3
xchg
call
lcall
cmpsl
sub
aas
lcall
shll
test
adc
sbb
aad
mov
incl
and
xchg
and
mov
pop
mov
popf
outsw
push
leave
aam
xor
out
es
cmpsb
cltd
pop
mov
push
ds
mov
add
add
ds
out
xorl
sbb
jns
adc
dec
or
add
shll
pop
xor
mov
dec
xor
es
and
sti
push
fcompl
lcall
stos
mov
cmpsl
mov
popf
out
dec
fildll
sub
rcrl
cmp
in
sbb
inc
mov
stos
inc
dec
mov
movups
adc
jne
mov
xlat
stc
arpl
cmp
int3
orb
lea
pop
adc
shrb
xor
loop
cwtl
fcompl
sub
push
pop
jnp
pusha
lods
and
lret
sbb
imul
mov
popa
es
sub
jp
xchg
inc
fistpll
xor
jle
xchg
pop
fidivs
js
or
xchg
mov
mov
push
mov
mov
aas
and
leave
or
insb
popa
mov
ficomps
push
rcrl
add
jl
add
ficompl
cmp
imul
mov
adc
dec
int
insl
jg
lahf
test
pusha
aad
pop
movzwl
popf
subl
fbstp
sbb
js
idivb
dec
fistpl
lock
cmpsb
imul
add
mov
mov
mov
adc
mov
adc
add
inc
dec
outsb
inc
jp
inc
lcall
push
xchg
adc
push
sub
dec
push
and
inc
jnp
xchg
sub
and
and
mov
bnd
fsubr
jg
mov
or
inc
adc
adc
sahf
xor
dec
and
out
test
in
stos
das
clc
sub
addr16
faddl
or
clc
bound
cmp
in
js
test
dec
icebp
jae
dec
imul
addb
add
lea
lcall
or
ja
adc
xchg
in
add
hlt
loop
push
mov
mov
pop
adc
addr16
cmpl
adc
lods
xchg
add
sbb
or
or
imul
adc
mov
rcrl
push
cmpb
pop
js
pop
xor
jle
rcrb
mov
decl
sbb
jbe
negl
push
cmp
push
lock
pop
fidivrl
or
xchg
sbb
adcl
mov
add
cmpsl
loopne
repnz
inc
scas
xchg
xchg
jb
in
xchg
mov
out
sub
pop
aam
adc
sub
cmpsb
jne
jl
mov
and
dec
mov
or
jbe
push
xchg
cmp
insl
xchg
call
arpl
pop
inc
mov
dec
cltd
ret
mov
iret
testl
and
mov
jecxz
xchg
sub
sahf
mov
dec
insl
testl
inc
or
ds
das
imul
lock
push
sub
inc
movsl
movsb
data16
cwtl
mov
arpl
in
mov
mov
cmp
inc
sbb
mov
je
sub
ss
and
dec
dec
pop
pop
loopne
dec
lahf
jge
ja
loope
cld
orl
sbb
ds
sub
in
mov
lods
int3
or
fimull
inc
ds
sti
and
mov
orl
andb
std
mov
loopne
add
pop
cli
sub
pop
cmp
pusha
cmpsb
icebp
xchg
dec
icebp
mov
popa
insb
xlat
stos
sub
leave
lods
cmp
mov
inc
test
jnp
pop
jb
mov
jo
sbbl
inc
lds
daa
push
test
mov
add
fsubrs
inc
xlat
mov
pop
js
inc
xlat
dec
add
testl
inc
cmp
cmp
addr16
or
imul
out
inc
cld
enter
pusha
cmp
popf
rcrb
mov
adc
js
cmp
test
out
addr16
xchg
clc
xor
dec
mov
lds
sbb
fcompl
fisubl
dec
test
shl
mov
cmp
pop
push
mov
lret
sub
mov
mov
dec
or
xor
xchg
pop
pop
stos
push
xor
jnp
adcb
push
and
out
and
or
pop
and
cmpsl
lahf
bound
cwtl
nop
test
in
mov
xor
std
push
inc
xchg
in
mov
xor
sbb
lret
ret
cmp
mov
cmp
jg
push
push
shll
cmp
loopne
fsubrl
leave
and
mov
icebp
dec
int
cmp
dec
jbe
call
adc
fmul
push
js
gs
mov
jo
inc
hlt
lret
movsb
fimull
dec
sub
mov
imul
out
out
and
push
or
jne
sahf
push
lahf
adc
ja
and
or
movsb
and
push
std
loopne
fsub
fwait
xchg
mov
insb
notb
stos
dec
xchg
ljmp
inc
test
jnp
into
jae
loop
aaa
fsubs
in
xchg
xchg
out
inc
int3
mov
push
push
sti
iret
lcall
in
xor
jl
mov
mov
fstpt
push
xor
sti
lock
push
or
add
pop
subl
push
lret
sbb
les
mov
jle
sub
rolb
xchg
js
or
cltd
push
pop
fldt
mov
scas
cmpsl
add
ficompl
pop
push
cmpsl
xchg
scas
mov
mov
mov
adc
lock
jne
out
and
fcomps
xchg
mov
scas
ret
punpckhbw
add
push
or
idivl
xor
dec
jl
mov
in
leave
hlt
fimuls
xor
lahf
imul
int3
sub
out
clc
mov
xchg
mov
in
inc
imul
jle
inc
and
fucomip
int
xchg
out
imul
mov
rolb
sarb
daa
add
pop
jecxz
cli
add
ss
jecxz
pop
mov
xor
sbb
push
cs
xlat
pushw
mov
pop
in
ljmp
notb
adc
push
daa
daa
and
aad
icebp
fcmovb
mov
arpl
or
cmp
inc
in
pop
lods
jg
idivl
movsb
cmovne
shl
add
xchg
ljmp
cmpb
je
or
mov
in
jns
ljmp
jo
repz
push
jecxz
push
lods
push
out
into
mov
inc
and
jmp
mov
stc
cmp
aaa
sbb
ret
jo
rorb
adc
sarl
out
dec
out
pop
jp
mov
xchg
clc
stc
or
mov
icebp
dec
xchg
imul
and
xchg
mov
sub
loop
mov
test
mov
hlt
sbb
arpl
stos
fstl
inc
fadds
push
xor
mov
dec
gs
xchg
insb
data16
jae
mov
lret
and
test
cmp
mov
cmp
mov
cwtl
cmpsl
rclb
int
sub
cltd
fsubrl
adc
push
adc
int
loopne
fwait
sbb
cld
inc
test
jl
lcall
sub
mov
push
add
out
loope
sahf
ja
sub
ret
sbb
dec
aam
out
pusha
cld
lods
das
and
aas
fdecstp
sarb
cmp
loop
gs
xchg
out
arpl
imul
jecxz
xlat
jae
js
popf
mov
xchg
mov
lock
push
xchg
testb
push
outsw
outsl
pop
push
sbb
xor
sub
js
stos
fisubrl
fs
fadds
scas
push
mov
dec
xor
pop
popf
inc
fdivr
mov
fcompl
out
pop
shrb
jmp
or
jmp
aam
rorl
lret
sub
add
dec
cmp
out
addr16
ja
loopne
inc
daa
cwtl
mov
out
cld
inc
jmp
sbb
ret
sbb
mov
fistpl
rolb
test
das
imul
adc
ret
sub
jmp
sub
dec
cmpsb
or
mov
mov
mov
out
fucomi
in
or
push
and
and
stos
cmp
sub
xlat
cli
jne
lea
mov
pop
cmp
xor
std
ud0
pop
xchg
pusha
fdivrs
arpl
jl
arpl
in
fsts
sbb
xor
fnstsw
sbb
aad
cli
aam
pop
es
std
jge
cld
sub
lret
jne
rclb
push
inc
cli
xchg
stos
xchg
push
les
cwtl
fwait
insl
leave
addr16
and
add
xor
xchg
mov
leave
clc
mov
icebp
jne
rclb
gs
out
mov
or
jns
lret
hlt
adc
dec
arpl
pop
cmpsb
pause
sbb
pop
into
pop
and
daa
sahf
pop
cmp
imul
shl
outsb
lcall
jmp
sub
xchg
in
loope
lds
mov
scas
push
mov
std
or
mov
arpl
test
cmpb
or
pop
push
jb
or
fucomp
xchg
enter
popf
xchg
dec
iret
xor
movsb
push
or
fcomps
add
mov
push
xor
add
loopne
mov
mov
sbb
fdivs
push
adc
dec
mov
fistpll
in
fldcw
jp
test
out
loop
in
lea
jp
adc
mov
outsl
lods
push
jo
loopne
call
jnp
mov
adc
pusha
adc
mov
mov
mov
pop
pop
fldt
stos
or
aad
sbb
in
add
andl
cwtl
jb
dec
inc
je
xchg
xor
scas
stos
test
adc
data16
in
adc
xchg
leave
popa
test
fcmovu
pop
insb
or
sahf
movsb
xor
add
or
orb
pop
xchg
std
addr16
movsb
test
mov
adc
mov
or
cmp
jp
adc
enter
add
add
ret
icebp
imul
mov
or
inc
loop
push
vmovdqa32
rcll
outsl
mov
jne
nop
mov
out
push
add
cmp
ss
mov
cmp
sbb
je
sbb
fstl
xlat
xor
mov
lcall
and
inc
jg
cwtl
mov
push
jmp
out
insb
cld
inc
test
inc
jmp
xor
and
or
cltd
adc
jmp
loope
testl
inc
push
stos
adc
shl
dec
adc
jae
divl
xchg
in
sub
add
or
push
rorl
sti
adc
inc
inc
adcb
pop
mov
sarl
rcl
sub
sbb
addr16
shlb
cmp
push
pop
xorl
mov
insb
mov
xlat
lods
movsb
popf
outsb
pushf
and
pop
add
inc
loope
xor
sti
dec
xor
pop
lods
lods
xor
addr16
dec
pop
negl
rolb
sub
push
inc
mov
ja
lret
mov
sti
sbb
je
push
inc
lds
push
test
dec
pop
jns
ret
ljmp
dec
out
int3
arpl
dec
por
in
aaa
push
sbb
mov
dec
inc
pushf
cmpsb
jmp
int
cmp
fwait
inc
mov
cmpsl
push
dec
add
pop
in
data16
mov
pop
pop
cmp
ret
xor
insb
mov
jp
dec
push
ja
xchg
sti
daa
and
pop
int
test
mov
int
sub
lret
or
pusha
push
mov
mov
mov
cwtl
roll
stc
rcrl
push
adcl
les
inc
loope
pop
incb
hlt
mov
les
dec
in
inc
shl
cmpsl
mov
or
or
push
or
imul
sbb
ja
add
out
das
mov
into
clc
adc
mov
leave
insl
enter
inc
cs
xchg
push
add
dec
mov
push
adc
push
cs
test
pop
int
fdiv
and
add
xchg
std
lods
pop
or
out
data16
les
popf
aaa
mov
lcall
lcall
sarl
adc
fisubs
push
cli
nop
inc
mov
cld
outsb
pushf
cwtl
mov
call
out
fsts
push
mov
loopne
jno
adc
pop
bound
xor
lds
push
dec
shll
nop
cmp
lret
push
ret
add
push
mov
adc
xor
orb
push
aaa
mov
ror
mov
pop
dec
dec
xchg
dec
adc
mov
jne
sahf
mov
push
movsl
pop
jp
fsubrp
push
sub
push
cwtl
fcomps
mov
lods
sub
cwtl
sbbl
mov
addr16
xchg
movl
mov
push
movsb
dec
jle
dec
pop
ja
sahf
and
fbld
sbb
insb
sub
xchg
ss
push
dec
push
and
adc
adc
mov
jns
xchg
in
jp
insb
iret
sar
aam
adc
cmpsb
mov
jg
mov
mov
insl
fcoml
cmp
xor
add
dec
idivl
gs
jp
sbb
lea
adc
out
in
jo
mov
inc
std
push
jno
or
jae
jns
pop
cmp
int
xor
fisubrs
lcall
adc
data16
sahf
scas
pop
rcl
fs
and
lods
xchg
mov
ror
xor
sbb
mov
rolb
jecxz
insb
mov
or
leave
sub
data16
push
imul
sbb
xlat
outsb
jo
gs
clc
xchg
dec
cmp
out
stc
ficompl
arpl
arpl
ja
daa
mov
fwait
cmp
in
mov
push
clc
dec
pushf
in
push
inc
insb
xor
ja
fstpl
aad
test
out
dec
ljmp
mov
sbb
jbe
inc
mov
arpl
daa
repnz
call
xorb
test
mov
mov
cld
inc
subl
js
add
aaa
insb
fldt
push
sbb
mov
xchg
xchg
repz
fwait
pop
dec
pushf
out
jb
pop
cltd
faddp
jb
gs
mov
inc
gs
mov
xchg
dec
mov
jmp
mov
lcall
movsl
jno
rcr
add
adc
fld
hlt
imul
pushf
mov
jg
loop
addr16
push
ret
std
mov
rolb
int
mov
add
orb
push
fsts
jle
int3
jg
and
ja
std
add
inc
dec
jno
push
inc
gs
or
std
cmp
xchg
lods
xchg
push
sbb
push
js
sti
cmp
xor
xor
call
jb
dec
jmp
mov
lock
push
pop
jne
cmp
adc
jecxz
pop
cmpsl
movsl
imul
dec
sbb
jnp
jp
cmpsb
sub
repnz
jmp
and
push
int
fiadds
sub
cmp
aaa
mov
ret
jns
inc
mov
pop
cmpsb
stos
lcall
cltd
icebp
xchg
loopne
or
dec
jb
lods
pop
dec
push
pushf
and
loop
rol
ja
aam
xor
jae
jns
movsb
sub
mov
dec
sub
or
fwait
rcl
adc
mov
jb
ss
enter
das
push
inc
mov
mov
jno
push
jle
add
dec
out
lock
stos
pusha
jl
aad
push
icebp
pop
dec
aam
pop
inc
pop
mov
sub
adcl
cmp
cmp
hlt
mov
push
push
cmp
hlt
pop
stos
push
in
mov
or
data16
or
xor
pop
xor
leave
push
sbb
aam
mov
mov
inc
fcmovnb
dec
lret
mov
pushf
push
inc
or
adc
das
lods
push
das
push
inc
dec
lods
popf
movsl
or
aaa
pushw
jge
push
sbb
fnstenv
push
sub
jge
pop
add
push
mov
fstpl
repnz
mov
stos
inc
mov
ljmp
mov
nopl
rolb
movsb
jmp
stos
push
call
sbb
out
push
loope
int3
xchg
inc
push
pop
js
mov
lods
dec
inc
stos
imul
data16
mov
push
pop
jle
in
dec
ret
cltd
jns
sbb
repz
mov
out
popa
arpl
dec
daa
xor
sub
add
pop
jg
lods
inc
or
stos
cwtl
xor
ja
push
fwait
sbb
hlt
and
test
aad
dec
mov
fs
stc
jmp
shll
movsl
filds
out
push
push
push
scas
dec
sub
js
cld
sub
adc
faddl
mov
jl
stc
xor
out
mov
xchg
shlb
jne
sub
xchg
dec
arpl
stos
jne
leave
jns
mov
sub
sbb
pop
inc
stos
cmp
loop
sub
in
mov
aad
ret
jno
sarl
push
dec
leave
icebp
out
aad
inc
sbb
mov
test
pop
or
mov
into
lea
push
in
call
jmp
xor
xchg
push
enter
scas
or
xor
in
imul
loopne
enter
sbb
or
outsb
mov
inc
data16
aas
insl
inc
push
imul
subl
dec
xor
add
mov
roll
and
push
out
fs
push
and
mov
into
test
mov
or
xor
jns
jns
les
gs
jmp
dec
movsb
jne
repz
popf
aaa
mov
rorb
mov
push
ss
pop
mov
fdivrs
lods
pop
jmp
imul
mov
je
clc
and
addr16
fst
ret
cmp
mov
push
out
dec
xchg
lds
cltd
or
hlt
mov
test
shl
cmc
sbb
lahf
insb
jns
cmpsl
pop
sbb
sub
push
add
mov
jo
push
aad
hlt
or
jno
fsts
sbb
jl
push
lods
arpl
je
xchg
adc
xor
fwait
repz
jmp
movsl
lods
pop
xchg
adc
add
je
mov
add
inc
mov
aad
mov
inc
dec
imul
shlb
xor
sub
cmp
add
mov
aaa
out
pop
hlt
inc
dec
stos
lock
loopne
test
adc
imul
aaa
sbb
rol
lcall
out
shlb
shll
imul
xor
popa
inc
gs
out
sbb
xor
mov
or
jb
setl
stos
xor
cmpsl
stos
or
int3
sbb
add
mov
push
cmp
mov
movhps
push
mov
adc
jecxz
in
arpl
jle
mov
mov
pusha
mov
pop
xor
mov
leave
cmp
aad
and
dec
into
stc
sub
sbb
in
xchg
pop
and
pop
scas
cmp
push
scas
int
mov
xor
or
imul
repnz
jg
out
jp
test
imul
lret
fs
shl
std
adc
hlt
lea
xchg
fmul
push
inc
push
scas
mov
mov
xchg
rolb
aaa
xchg
imul
and
mov
lds
insb
cmp
test
and
or
jecxz
fists
push
test
and
adc
loop
cltd
add
sbb
ds
adc
mov
cmp
shld
pop
jle
mov
cmp
pop
adc
mov
push
pop
sbb
je
add
cmpsb
push
push
push
stos
out
test
in
js
bound
andnps
enter
xchg
ja
mulb
ficoms
lds
out
scas
adc
cltd
clc
cltd
push
cmpl
inc
mov
rcll
dec
iret
test
stos
lea
in
and
sub
cwtl
xchg
mov
rcl
mov
push
xchg
and
mov
mov
sbb
ljmp
sbb
mov
mov
mov
push
mov
jmp
jecxz
das
ret
and
loope
xchg
add
sub
scas
ds
sbb
lret
sbb
stc
pop
cs
mov
mov
into
shlb
insb
mov
sbb
shll
jmp
loop
aad
les
mov
daa
out
and
cmp
outsl
or
lds
jns
insl
es
aam
and
addr16
xchg
pushf
xor
andl
mov
mov
adc
out
jae
shl
stc
or
stc
jg
test
mov
xorb
in
je
add
shrb
rcrb
inc
hlt
pop
imul
and
sbb
jae
test
call
out
xor
aam
xor
daa
mov
jne
aaa
sub
or
ss
stc
adc
movsl
cmp
aas
dec
adc
push
xlat
and
aaa
cmovb
daa
popf
inc
sbb
mov
mov
in
aam
neg
or
stc
xlat
push
lods
loope
mov
add
out
xor
lcall
dec
lock
xlat
or
xchg
shlb
stos
lahf
pop
xchg
repnz
mov
or
daa
pop
testl
cmp
int
ds
testb
fs
mov
mov
arpl
mov
mov
loopne
xor
push
aas
mov
cmp
push
sub
xchg
shl
das
aas
movsl
jae
add
cmp
lret
out
addr16
inc
cmp
pusha
jg
adc
int
aad
mov
xor
inc
into
outsb
jecxz
test
cmp
movsb
mov
push
cs
or
dec
jns
sarb
test
out
jne
mov
shlb
push
push
and
cmp
repz
xor
xchg
xchg
ss
pop
sti
or
fs
mov
movsb
aam
jae
push
movsl
ljmp
stos
scas
add
dec
stos
shll
lds
xchg
lcall
dec
int
add
out
or
sbb
fdivp
mov
out
pop
shrb
clc
pop
or
cmc
repz
cmp
mov
sub
mov
out
mov
in
nop
add
or
lods
js
jl
scas
inc
push
xor
adc
stc
jle
jno
cmp
fwait
jmp
es
or
dec
scas
and
jne
aas
int3
movsl
mov
ss
xor
pusha
js
test
inc
mov
jns
test
pop
pusha
repz
xlat
addl
stos
jb
dec
mov
test
mov
repz
push
xchg
and
aas
int
rcr
cmp
push
ljmp
and
lcall
imul
cli
jbe
outsb
loopne
dec
pop
aam
movsb
mov
xor
mov
fmuls
adc
cwtl
test
lret
lods
jp
aam
pushf
out
lods
out
push
idiv
shlb
push
xchg
stc
pop
xchg
dec
ljmp
out
nop
enter
xor
movsb
test
sub
jns
aas
and
outsb
xor
into
roll
cmc
mov
andb
mov
fmuls
cmpsb
push
jns
sbb
mov
das
ljmp
sbb
aas
mov
add
jae
hlt
leave
push
sbb
cwtl
repz
dec
xor
dec
xor
rol
leave
pop
in
push
test
xchg
xor
mov
jle
xlat
sbb
fbld
pop
cli
ficomps
xchg
faddl
lods
adc
sarl
jae
pop
insl
push
andb
movb
hlt
and
mov
dec
js
add
mov
icebp
jmp
ds
pop
push
xchg
jnp
jb
add
loop
test
push
xchg
icebp
xor
or
mov
out
scas
xchg
in
mov
pop
popf
test
mov
fidivs
xchg
or
fisubl
mov
shrl
clc
dec
cltd
shl
adc
rclb
ret
pop
pushf
rcrb
lea
out
jb
test
push
pusha
int3
sub
add
dec
adc
sbb
sarl
mov
fidivs
in
and
push
std
jl
lahf
adc
popa
ss
push
pop
push
cmp
loope
and
push
aam
mov
push
dec
push
add
xchg
sbb
add
add
jg
std
cmpsl
sbb
imul
xlat
outsl
dec
lock
in
mov
fildl
cltd
sbb
gs
mov
scas
daa
shrl
scas
cs
inc
or
dec
adc
push
scas
repz
cmp
sub
mov
mov
add
xor
ss
mov
jp
testl
adc
push
sbb
push
mov
data16
fcoms
imul
sub
and
push
daa
sub
inc
adc
xchg
insl
sbb
pop
pusha
lea
mov
out
inc
nop
cld
mov
fidivrl
aaa
xor
hlt
push
mov
sub
mov
jns
dec
and
sahf
inc
lods
sub
sub
int3
sbb
stos
mov
popf
push
ret
cmp
xor
icebp
int
popa
lock
lret
pop
or
out
stos
and
dec
imul
shrl
cmp
and
sbb
push
insl
cld
push
sbb
enter
popf
cltd
cltd
push
andl
sbb
fsubl
cmpsl
push
ret
dec
sub
nop
lret
ja
repz
jle
in
push
imul
gs
test
fisttpl
pop
icebp
jg
fcomip
pop
sub
aas
adc
mov
mov
or
pop
rcrb
nop
dec
fisubs
arpl
mov
pop
mov
add
sbb
adc
loop
adc
dec
cmpsb
int
xlat
mov
shlb
lock
xchg
add
dec
xorl
fsubrs
aaa
and
pop
aam
pop
sub
mov
in
inc
pop
cld
ljmp
sub
ss
in
add
mov
push
addb
dec
push
cmp
push
cmc
fistpll
and
jp
in
data16
add
jnp
loopne
mov
add
jo
xchg
adc
mov
adc
xlat
adc
nop
jo
mov
stc
jnp
mov
jb
jno
cmp
nop
test
lret
lahf
pop
setb
lea
mov
inc
filds
dec
dec
push
pop
push
cmp
inc
inc
bound
fisubrs
mov
fcoms
rolb
xchg
jmp
mov
xor
push
imul
cmp
cmp
dec
fs
mov
or
fcoml
fadds
jno
xor
sarb
inc
dec
add
mov
pop
lcall
in
mov
xor
lret
xor
cmp
inc
sub
push
push
inc
jo
or
fdiv
aad
repnz
scas
pop
dec
flds
cmp
push
enter
cs
xchg
jle
cwtl
jle
add
out
adc
fidivrs
hlt
icebp
sbb
dec
enter
call
push
hlt
xchg
xchg
ljmp
cmp
adcl
mov
icebp
enter
mov
incb
mov
cli
repz
sbb
rcl
mov
leave
lock
cmpsb
ret
les
pusha
aas
lods
pop
mov
jns,pn
outsb
ficompl
mov
or
mov
mov
movsb
push
xor
in
fisubl
iret
and
adc
fldcw
xor
jmp
scas
jnp
pushf
xchg
lret
push
mov
lret
sbb
mov
into
loop
add
mov
andps
adc
push
cmp
sub
mov
scas
insw
dec
adc
outsb
push
jne
add
cmc
push
sbb
pop
sbb
pop
adc
xchg
dec
adc
sti
mov
adc
jnp
int3
jne
pop
inc
xor
repnz
push
or
mov
jbe
lahf
mov
and
jp
imul
int
mov
loopne
test
jbe
jmp
iret
push
leave
in
inc
and
ds
mov
jle
pop
cmpsb
mov
mov
lahf
into
push
cmp
pop
inc
adc
repz
and
dec
fdivl
fldcw
lahf
mov
cld
inc
push
mov
clc
xchg
jo
mov
inc
inc
pop
sbb
or
popf
fwait
lret
adc
dec
sub
adc
aas
or
cwtl
adc
imul
leave
mov
lcall
shrl
dec
cmpsb
jl
les
dec
sbb
arpl
cmp
fstpt
add
inc
cltd
enter
jmp
push
cmc
xor
add
inc
ja
inc
adc
loope
cmp
cmp
ret
jne
fwait
inc
dec
pop
ds
or
push
push
add
test
incl
inc
adcl
push
sbb
fidivrl
rcrb
lds
mov
pusha
loope
repnz
dec
andb
push
mov
das
xor
movsl
jmp
lea
xchg
mov
unpcklps
inc
fprem
fsubr
insl
popa
gs
adcb
mov
add
mov
mov
repnz
add
inc
js
cmpsb
cltd
pop
xor
gs
mov
shlb
sti
dec
mov
push
jp
popa
push
aad
addb
xor
fistpl
mov
push
or
jg
ficomps
iret
imul
mov
sti
out
popa
mov
fld1
aad
xchg
cmpsl
ljmp
stc
jl
lock
adc
cld
test
push
es
cmc
jb
imul
inc
in
add
daa
loop
movsl
call
ret
push
adc
jl
inc
dec
xchg
or
sbb
pusha
outsb
push
lret
fwait
test
rorb
shlb
insl
mov
push
sbb
std
pop
push
sbb
pop
mov
inc
fistpl
in
mov
mov
sbb
decl
ja
imul
cmp
sub
aad
push
nop
leave
push
push
and
and
xchg
inc
push
push
adc
lea
dec
fsubs
cli
push
push
cmp
in
pusha
je
xlat
adc
out
icebp
sbb
dec
mov
daa
xchg
enter
cmpsl
lds
push
hlt
fldt
cmp
xor
stos
sbbb
mov
mov
test
inc
ds
add
jbe
std
dec
xchg
fldt
sbb
jmp
and
dec
fs
shlb
xor
mov
outsb
int3
cld
rol
jae
lds
test
lods
ficompl
call
adc
clc
sub
push
dec
sahf
std
sbb
shrl
popf
cmp
les
lods
mov
out
mov
and
or
jl
jne
jl
test
shll
into
je
adc
lea
shlb
push
rorl
and
es
jb
test
aad
sub
fidivrs
jge
lods
out
and
jecxz
shll
push
loop
jnp
sbb
shr
jns
xor
insb
insl
hlt
btc
ror
mov
or
or
cmp
push
mov
cmp
xor
loope
mov
das
jno
and
daa
iret
pusha
out
add
mov
adc
mov
inc
sub
hlt
or
push
dec
leave
mov
ds
jmp
cmpb
push
pop
movsl
cltd
add
test
cmp
int
loope
nop
dec
pop
push
out
xor
out
lock
inc
mov
sub
loopne
jecxz
sub
fists
xchg
mov
lret
or
shlb
xchg
xchg
aaa
jnp
mov
mov
in
sarb
push
and
adc
mov
lds
pop
das
stos
or
clc
lahf
pop
fsubrp
in
rcll
pop
lret
dec
pop
testl
xchg
dec
push
and
pusha
or
cmpsb
subl
popa
js
dec
jo
sub
cmp
fildll
aas
outsl
sbb
or
lods
pop
jo
mov
roll
adc
push
popa
testb
jmp
xchg
sub
ret
stos
outsb
mov
ljmp
sarl
pop
jg
out
les
push
rcrl
dec
sub
stos
inc
or
insl
rclb
out
aad
mov
test
imul
shlb
sub
xor
pop
stos
mov
insb
xor
jle
inc
jmp
addr16
jns
std
scas
cs
jmp
jl
mov
jbe
pusha
test
dec
sbb
ret
addr16
fiaddl
push
sti
push
adc
mov
xchg
mov
pop
dec
fisubl
cmpsl
xor
dec
add
movsb
and
nop
fstpl
sbb
iret
popa
hlt
andl
shrb
xchg
popf
jb
sarb
jp
dec
mov
das
push
or
dec
or
pop
xchg
fidivrl
mov
cli
mov
lahf
pop
jmp
fwait
xchg
rclb
add
bndldx
adc
fldt
hlt
push
cmpsl
jno
ds
cmpb
insl
lea
sbb
jmp
inc
mov
out
jp
dec
aas
movsb
outsl
ret
push
and
cmp
add
xchg
push
or
xor
adc
adc
out
test
sub
bswap
lds
cmp
daa
pusha
inc
xor
rorb
repnz
adc
jmp
jp
mov
cld
rcrb
in
jecxz
xchg
mov
lret
mov
pop
xlat
lret
add
movsl
ret
dec
cmp
and
jbe
stos
iret
loope
pop
iret
stos
pop
dec
sub
or
out
jae
or
insb
xchg
movsb
stos
pusha
loopne
ficoms
movl
add
jnp
outsl
xor
cwtl
jge
stc
and
pop
call
in
stc
ret
loop
lock
scas
test
dec
fucomip
in
jg
ds
cltd
movsl
xchg
lock
push
fcomip
add
scas
xchg
cmp
ss
fbld
cmp
cmp
repnz
cltd
lea
sarl
sub
jmp
clc
dec
nop
fdivrl
mov
test
into
cmp
cmp
popf
jne
xor
lret
mov
jnp
pop
movsb
sbb
mov
push
sub
ljmpw
jb,pt
subb
push
fsub
sahf
mov
roll
lret
fimull
sub
xchg
rorl
mov
mov
rorb
xchg
and
sub
in
lods
sti
pop
lds
outsb
loope
inc
out
xchg
stos
fimull
and
hlt
mov
mov
mov
aam
mov
mov
test
mov
pop
fidivl
daa
popa
movsb
and
mov
les
shrb
push
or
shl
and
pop
andb
adc
push
pusha
or
mov
decl
sbb
pusha
insl
call
fs
das
mov
and
je
adc
fsubrs
mov
mov
hlt
sbb
or
xchg
and
pusha
adc
das
add
and
jmp
inc
fidivl
shr
lds
add
mov
les
loop
dec
push
push
js
jno
sub
outsl
dec
jno
mov
mov
enter
into
xchg
loop
int3
jb
pop
popf
dec
jnp,pt
sbb
call
jmp
dec
out
sbb
xlat
cmpsl
dec
mov
cld
mov
xchg
out
leave
inc
jmp
ret
cmpsb
xor
mov
jle
cmp
imul
and
stc
mov
cli
enter
xchg
adc
testb
lahf
repnz
cli
mov
test
stos
sbb
jne
xor
jae
inc
in
les
sahf
or
dec
icebp
ud1
pushf
sar
push
std
jbe
mov
ret
test
lret
stos
cmpsb
pop
jl
cli
dec
stc
jp
sub
pop
and
sub
and
leave
push
sbb
adc
pop
mov
push
xor
inc
popf
mov
std
cltd
int3
mov
push
popa
pop
fisubs
xor
test
dec
jl
mov
or
pop
mov
push
jecxz
clc
dec
xor
fsubrp
dec
inc
fsubr
call
lea
inc
int3
or
xchg
sub
push
scas
jns
and
xor
test
ja
fwait
xchg
cmp
or
sub
or
in
out
rol
in
aad
stc
push
and
cmpb
dec
fiadds
inc
rcl
cld
add
cltd
pusha
loope
push
add
out
out
scas
dec
jno
call
lods
inc
mov
mov
pop
or
adc
lds
movsb
and
push
inc
loop
mov
adc
dec
cmc
int3
pop
cmp
out
add
mov
enter
dec
push
sub
mov
outsl
pop
cmc
in
push
loope
mov
xchg
mov
mov
divb
pusha
jne
rcrb
push
jmp
aam
lea
pop
inc
jecxz
stos
repnz
jnp
xor
cltd
movsb
jle
out
inc
mov
cmp
aaa
fdiv
popf
and
movsb
mov
test
shr
in
in
push
mov
mov
mov
adc
xchg
mov
mov
lea
inc
loope
imul
dec
aam
pop
shll
inc
jmp
and
lea
mov
loop
aad
sub
arpl
repz
lock
stos
frstor
fstpl
inc
rorl
jne
subps
into
xor
shrb
test
sub
jmp
pop
cmpsl
rorb
adc
std
outsl
adcb
or
adc
push
stos
cltd
gs
push
sub
es
shl
fwait
in
cli
addr16
aad
test
ss
dec
fstpt
jecxz
xor
or
fs
mov
aad
push
push
mov
int
pop
mull
rcll
mov
jbe
rolb
fstl
pop
adc
push
mov
and
fs
add
adc
out
mov
scas
cmpb
cmpsl
push
fsubs
bound
dec
mov
or
push
stos
jle
cmp
cli
pop
mov
rcll
sbb
jns
push
push
pop
inc
mov
rclb
mov
movsb
add
out
dec
mov
sbb
push
xchg
cmpsb
mov
aam
sbb
inc
ljmp
mov
push
mov
insb
lock
call
stos
sbb
add
test
loopne
xor
fiaddl
push
mov
fxtract
fiadds
sbb
sub
mov
mov
icebp
push
xchg
mov
xchg
inc
pop
imul
dec
xor
fcomp
pusha
roll
je
repnz
and
jo
daa
xchg
lds
jp
pushf
dec
std
cmpsl
jle
je
outsb
mov
cmpsl
xchg
jecxz
repz
sbbb
xchg
bound
mov
cld
lcall
cmp
hlt
mov
fwait
jbe
mov
rcrl
xchg
cmp
cld
out
add
or
pmullw
addl
scas
cmp
xchg
inc
pop
fdivp
add
cmp
xchg
pop
or
cmp
and
push
or
sbb
cmp
mov
push
pop
add
mov
push
cmp
push
sub
adc
imul
sbb
test
test
adc
in
jo
cmp
js
sub
popa
sub
pop
lahf
je
pop
mov
cs
add
add
mov
test
movsl
lcall
jns
pop
lods
arpl
enter
scas
pop
adc
and
xor
lock
ljmp
sahf
jmp
mov
fistps
fsts
sub
and
xchg
jg
adc
jmp
adc
adc
int
rcl
es
xchg
mov
std
lret
movups
pop
jmp
sbb
mov
mov
xchg
js
jmp
dec
inc
cmp
add
pop
jo
jp
imul
fldenv
and
cli
push
jmp
cmp
cmpsb
mov
mov
pop
int
icebp
out
sahf
sub
or
pop
cld
cmp
mov
icebp
or
mov
cmp
js
pop
cmpsl
add
in
pop
mov
sti
jns,pt
push
call
xor
scas
out
movsb
dec
nop
add
loopne
push
mov
jmp
test
xchg
inc
dec
in
cmp
inc
test
lcall
dec
pop
push
aas
xor
lods
shll
loope
outsl
into
les
push
mov
push
scas
les
mov
inc
daa
or
jmp
add
add
xor
push
and
sbb
jae
ja
xor
or
in
push
dec
fists
inc
je
daa
mov
xor
ror
int3
add
sahf
pop
fucomp
and
lods
dec
ss
repz
xor
jbe
add
pusha
loope
mov
shll
les
je
jge
movsl
sbb
mov
mov
js
lret
and
inc
fstl
pop
xchg
ret
ds
pushf
fcomi
push
adc
mov
and
mov
and
xchg
xor
insl
mov
push
loopne
hlt
mov
shrl
mov
cmpsl
sbb
test
nop
mov
xor
rcrl
stos
arpl
ret
sbb
insb
mov
pop
cld
sub
sub
pop
lcall
mov
push
dec
adcb
jecxz
test
daa
outsl
hlt
mov
mov
movsb
jecxz
xchg
out
pushf
mov
dec
xchg
xchg
mov
add
arpl
adc
add
jns
mov
movsl
push
xchg
addr16
push
jge
gs
adc
into
dec
dec
mov
and
mov
std
dec
cmpsl
jae
movsl
test
testl
insb
lret
jmp
push
ds
dec
pop
cld
ret
repnz
in
xchg
pusha
movsl
int
mov
mov
mov
inc
mov
mov
mov
and
and
in
jb
fcoml
sbb
adc
fcom
mov
dec
sbb
icebp
xor
test
inc
jl
into
fcomp
pop
push
mov
fists
xchg
pusha
mov
mov
add
and
pop
push
jo
adc
pop
cwtl
mov
fldcw
inc
loope
xchg
test
dec
lret
mov
bound
and
jb
sub
mov
xchg
rorb
icebp
and
gs
jmp
inc
shl
sub
cli
rcrb
aam
lret
lods
adc
sbb
shlb
out
xchg
outsl
test
pop
stc
dec
push
add
imul
loopne
jl
aad
and
push
call
hlt
in
popa
xchg
test
hlt
push
arpl
jl
shrb
push
aad
xchg
jecxz
ds
dec
test
adc
xchg
cmpsb
jno
push
push
or
xchg
shrl
mov
push
pushf
testb
js
int3
arpl
in
push
push
xor
mov
cmp
sub
in
jne
mov
in
mov
mov
lret
inc
pushf
addb
sbb
add
cmp
xlat
test
stc
pop
pop
xchg
pushf
ret
fwait
or
xorb
push
fisubrs
pop
xor
movsl
pop
xchg
xor
xchg
scas
mov
dec
jge
cmp
fidivs
pop
repnz
ficomps
cltd
mov
mov
sbb
pop
mov
dec
inc
subb
mov
outsl
push
xchg
test
dec
mov
mov
push
test
fs
jnp
push
mov
pop
in
cmp
stos
mov
mov
out
insb
xchg
adc
push
or
pop
push
out
xlat
shrl
push
ljmp
inc
insb
cmp
push
xor
lret
mov
jp
inc
movb
or
test
jmp
sub
add
daa
ret
aaa
jle
mov
test
mov
push
into
stos
fldl
inc
jmp
jae
lock
in
sti
xor
mov
out
ljmp
andb
mov
sub
gs
pop
and
outsb
lcall
jle
inc
movsb
stc
push
repz
sub
in
cltd
fisubrl
mov
add
add
ret
jle
out
inc
cltd
or
fcompl
xchg
mov
fldenv
and
cmp
adc
xor
fidivl
cwtl
outsb
lcall
inc
cmpl
inc
xlat
xorl
and
xchg
icebp
push
jb
push
mov
std
fildll
lods
cmp
sub
xor
fnstsw
xchg
mov
cwtl
mov
xor
lock
and
mov
ficompl
and
test
cmp
fidivs
and
js
loope
or
idiv
jle
lcall
lds
push
mov
mov
adc
xor
paddd
clc
xchg
adc
es
cmpsl
cmp
push
gs
dec
fcompl
repnz
fs
stos
lods
lods
cmp
test
pop
inc
sbb
imul
imul
sbb
lea
stc
scas
in
sbb
sbb
pop
outsb
mov
insb
adc
pop
sbb
cld
or
add
cmpsb
mov
mov
jnp
mov
inc
mov
dec
mov
adc
cmp
inc
out
lret
subb
sbb
or
icebp
push
daa
xchg
iret
test
shrl
pop
add
out
mov
in
xor
dec
sub
lret
push
xchg
movsb
mov
mov
or
mov
sti
cmpsb
jb
aad
and
test
push
out
lods
dec
mov
pop
mov
sbb
aam
je
push
fiadds
cmp
leave
movsb
rcll
cmp
sbb
push
iret
call
out
pop
dec
xor
or
xor
es
sbb
pop
push
lea
mov
lcall
dec
sbbl
loop
in
andb
or
test
xchg
and
pushf
testb
fwait
das
mov
testb
arpl
sahf
rcrb
lcall
cmpsb
cmp
add
lret
dec
jge
icebp
and
or
pop
mov
fstpl
xorb
decb
aas
push
cltd
dec
enter
out
and
imul
inc
cld
add
mov
add
lret
push
subb
mov
pop
lea
jno
dec
lret
sub
fwait
pop
fs
lock
and
cli
loopne
add
in
shlb
test
mov
leave
pop
arpl
je
or
or
out
sbb
fadd
fcom
lods
xor
sbb
pusha
dec
cmpsl
pop
imul
movsb
cmp
sbb
jg
sub
lds
mov
fs
push
repz
mov
mov
mov
loop
xor
inc
lret
nop
adc
sahf
les
xor
add
rolb
repz
sub
xor
stc
ja
adc
adc
loope
sbb
loope
jmp
jg
imul
jnp
pop
mov
ds
push
cld
shlb
ljmp
addr16
int3
ret
fstpt
cmp
xchg
scas
sbb
and
int
test
push
in
hlt
mov
in
shl
mov
push
add
xchg
addl
rcrb
mov
push
popa
mov
sbb
adc
adc
roll
fisubs
or
push
lret
sbb
mov
test
push
scas
xor
xchg
pop
sub
fnstenv
dec
mov
imul
out
push
and
mov
rcll
ljmp
and
and
xchg
scas
loop
aaa
shll
insl
xchg
xchg
in
adc
xor
repnz
mov
adc
test
push
adc
aam
cmp
cmpsb
fwait
sti
mov
rol
cmp
movsl
pop
dec
mov
push
stos
aaa
mov
mov
dec
pop
aas
into
and
inc
mov
jge
dec
jo
loope
pop
jle
insb
jo
jl
cmpb
std
dec
mov
xor
out
cmp
xor
push
leave
pop
movsb
scas
add
cvttps2pi
mov
adc
jg
popa
dec
xchg
lcall
ss
xchg
fucomip
lock
xor
sbb
aaa
sub
and
insl
cmp
push
popf
and
rol
sbb
inc
aaa
push
and
es
push
cltd
mov
notb
test
test
and
xchg
push
je
sub
dec
mov
repnz
or
sahf
jno
lcall
cmp
popa
fsubrs
inc
fcmovu
outsl
xlat
inc
pop
cmp
insl
pop
addr16
adc
xor
jmp
jg
push
jno
test
cltd
inc
mov
in
out
sbb
xor
and
pop
inc
xchg
pushf
xchg
into
into
sbbl
inc
push
in
pop
sub
bound
pop
icebp
jno
fdivl
les
pop
mov
jge
jl
add
jg
dec
jecxz
stos
in
add
lret
cmp
xlat
or
daa
in
push
les
imul
fidivrs
subb
ja
lcall
cmpsb
test
inc
pop
sbb
aas
xor
and
out
aas
push
scas
test
dec
in
cmp
mov
shrb
and
inc
add
push
xchg
aas
pop
sarl
dec
bts
out
outsl
or
cmp
fisubrl
or
mov
sbb
aaa
push
pushf
stc
rolb
push
inc
push
loope
jp
leave
jle
movaps
adc
ja
sub
cmp
and
pop
mov
mov
js
roll
imul
pop
push
cld
push
push
and
inc
js
int3
test
add
adc
push
sbb
movsl
mov
adc
test
push
mov
lea
or
cld
or
add
xor
das
xorl
frstor
dec
mov
in
out
in
dec
cmp
cltd
xchg
pop
push
sti
icebp
and
sub
pop
pop
push
mov
mov
mov
pop
pop
pusha
jg
pusha
lock
mov
aad
inc
clc
fldenv
pusha
xchg
push
xlat
iret
adc
fucomi
or
sbb
loopne
xchg
aaa
or
ret
sub
ss
std
and
or
jge
mov
mov
fwait
cmp
js
xchg
cmp
mov
outsl
or
cmpsl
pushf
repnz
push
ret
aad
inc
jl
push
cmp
mov
jo
stos
sbb
add
adc
and
pop
push
jb
mov
push
std
push
mov
adc
cmp
cwtl
mov
aam
and
and
das
fisttps
adc
mov
xor
and
mov
sbb
jle
sub
jbe
mov
cmp
aaa
sub
shrb
cltd
sub
loop
into
fadd
sahf
stos
aas
jns
xchg
pop
cmp
fs
add
loop
inc
mov
mov
sbb
cmp
mov
inc
mov
pop
scas
mov
mov
xor
mov
sub
inc
cmp
ret
inc
push
push
jl
dec
push
out
jb
pop
pushf
mov
mov
mov
fnstcw
daa
stc
xor
int
sar
iret
fs
ds
popa
dec
out
in
leave
daa
fdivp
mov
sbb
lods
ja
out
jmp
jl
sub
lahf
jnp
mov
push
daa
adc
outsl
jae
loope
pop
mov
in
mov
pop
fisubrl
dec
sbb
scas
pop
ds
inc
push
lea
push
fldt
jecxz
insb
loope
mov
jbe
test
movsl
jns
popf
filds
es
cmc
push
and
add
or
mov
mov
mov
adc
inc
lock
push
jno
daa
shlb
pop
ret
loope
mov
es
xchg
jbe
lcall
xchg
xor
rcl
pop
mov
cmp
daa
pop
push
fimuls
mov
mov
xchg
or
mov
mov
inc
pusha
fidivl
lahf
stc
div
loope
mov
fstl
xor
cwtl
xor
push
dec
push
mov
inc
add
adc
adc
nop
in
xor
js
mov
leave
out
cld
subb
xchg
push
mov
inc
shlb
shl
outsl
imull
cwtl
ret
filds
insb
xchg
mov
inc
jg
imul
dec
pop
mov
hlt
divl
jge
movsb
or
test
neg
orl
dec
cld
js
out
xchg
std
shlb
mov
std
rclb
add
xor
aam
arpl
fstps
loope
je
mov
out
test
mov
addr16
mov
cmpsb
idivb
cs
jns
push
dec
dec
and
mov
std
pop
cmp
popf
aas
jbe
push
cmc
mov
cmp
mov
clc
scas
push
add
cmp
mov
mov
lods
in
bound
mov
jno
add
shll
sahf
sahf
or
add
jae
aam
loop
push
pop
mov
add
and
jmp
fcoml
cmpsb
cmc
pop
in
or
cmpb
cwtl
enter
jno
push
push
mov
pop
mov
jg
or
fnstsw
arpl
repnz
and
sub
xor
sub
loopne
ss
cs
or
loope
test
aam
lret
sub
push
and
fisttpll
fildll
push
jl
les
jbe
dec
in
in
aaa
mov
fstl
mov
stos
mov
sahf
pop
pushf
and
rolb
cltd
bound
sub
ficomps
xchg
jae
and
loope
ret
mov
cmpsb
jnp
stos
pop
inc
pop
xor
push
mov
enter
js
dec
mov
ljmp
mov
mov
jl
jne
in
mov
das
aam
lods
mov
lock
or
loopne
pop
aas
xchg
add
push
and
shll
enter
clc
pop
adc
aaa
leave
cs
adc
xor
mov
push
shl
pop
cmc
push
mov
out
push
sbb
mov
cmp
mov
push
sbb
arpl
dec
decl
notrack
sbb
std
jne
xor
push
inc
sbb
push
cs
jbe
rclb
push
dec
cwtl
xchg
pop
push
nop
and
add
outsb
xchg
sub
inc
add
pop
das
ret
xor
xor
mov
cmp
adc
mov
lods
popa
inc
scas
mov
xor
push
insl
xor
jg
add
fsubrp
pop
sbb
cld
cld
push
es
xchg
pop
pop
mov
pushf
pop
into
les
jecxz
add
cmpsl
in
sub
inc
xor
cmpsb
push
mov
mov
pusha
bound
cltd
add
ror
xlat
sbb
mov
in
js
sub
pop
push
push
ds
add
or
bnd
je
sub
imul
jmp
icebp
inc
sub
outsb
cmp
jecxz
out
je
lds
dec
stc
scas
insl
lret
xchg
push
sub
je
cltd
iret
mov
adc
andb
xchg
cs
inc
pop
dec
shl
cmp
mov
insl
test
cli
mov
stos
sub
stos
fisubl
jmp
sub
dec
cmc
aad
arpl
sti
pusha
mov
ror
data16
pop
std
adc
pop
jmp
add
je
pop
mov
nop
sbb
js
push
sbb
mov
rorb
lcall
sub
cli
push
sub
test
and
add
lock
xchg
shll
rcll
xchg
iret
or
cmp
or
mov
fisubrs
movsl
dec
xchg
sbb
and
es
int3
xlat
fidivrl
inc
fs
mov
push
shrb
and
sub
cltd
xchg
nop
sbb
push
cmpsb
shlb
jle
or
out
scas
sub
repz
push
pop
movsl
mov
insb
rcll
jae
mov
sub
sbb
push
int
inc
pop
fucomi
sbbb
test
repz
and
fisubrl
jmp
lret
ror
ficoml
les
shrb
sub
out
sub
jo
lret
outsb
lods
out
sub
or
loop
lea
jg
mov
adc
jb
sub
js
jbe
jns
mov
jecxz
cmpsl
cmp
pop
cmc
or
dec
mov
fistpl
lret
mov
out
iret
xchg
lcall
jno
sbb
imul
add
xchg
icebp
rolb
push
cmp
icebp
xor
jp
mov
adcl
inc
xlat
icebp
das
jo
rorl
dec
cmp
mov
xor
js
add
mov
mov
fldt
fsubr
imul
enter
cmp
sub
test
lods
nop
jne
inc
aad
mov
cld
push
lds
xor
mov
pop
pop
xor
rcrl
lock
mov
lock
stc
std
push
or
sbb
repz
mulb
dec
out
and
mov
cmc
mov
fsubrs
test
xchg
jp
ds
movsb
mov
enter
in
xchg
js
mov
sbb
jb
movsb
hlt
lods
adc
rcll
addr16
jns
jmp
lahf
pop
xchg
sub
cmp
fisubrs
pop
into
sbb
mov
jg
enter
das
or
sub
sti
mov
out
adc
loopne
testb
or
inc
sbb
int3
dec
adc
push
inc
repnz
jne
std
dec
lea
mov
mov
mov
fstps
js
cld
mov
mov
leave
pop
idivb
out
aad
jle
push
repz
xchg
int3
mov
adc
push
shll
add
icebp
mov
aam
cli
or
adc
push
or
sbb
jp
stos
enter
jne
mov
inc
sub
aaa
scas
fs
sub
pushf
sub
dec
inc
pop
cmpl
in
cmc
loope
mov
das
nop
mov
ljmp
dec
aaa
mul
aaa
mov
clc
rorl
cmp
dec
clc
dec
mov
loopne
pushf
rol
lret
add
ds
push
inc
je
pusha
jbe
xchg
sbb
mov
lods
mov
outsb
pop
popa
sub
imul
lahf
add
jmp
aad
mov
pop
sbb
jmp
pop
movsl
xlat
in
rorl
out
cmp
push
cli
mov
jno
fwait
cs
sbb
mov
cld
jne
imul
arpl
and
inc
idivl
pop
mov
dec
mov
cmp
xchg
outsb
clc
or
and
push
insb
inc
shrb
push
stos
cmp
scas
mov
lret
aaa
scas
mov
add
into
cmpsb
fstpt
sbb
or
sub
jnp
adc
add
lret
cmp
je
cltd
sub
jae
scas
mov
ret
aad
cmp
not
mov
dec
cltd
punpckldq
push
je
into
rcrb
and
xor
aam
push
pop
lret
jl
pop
out
stos
mov
mov
push
mov
cmpsb
je
push
and
xor
mov
mov
or
stc
stos
je
inc
adc
mov
outsl
add
jg
cmp
shrb
mov
jno
je
sub
push
mov
add
jbe
adc
xchg
mov
pop
flds
sbb
cmp
sti
je
xchg
push
sti
aas
dec
jge
mov
cmp
scas
pop
mov
or
jo
xor
mov
mov
or
mov
je
jno
pop
push
xchg
lea
packuswb
fadd
mov
add
inc
add
xor
or
and
jne
fldt
scas
pop
and
add
mov
sbb
inc
mov
into
jnp
test
inc
adc
leave
fstpt
push
adc
idivb
dec
lfs
psraw
fldcw
ret
fnstsw
out
ja
cmp
clc
mov
stos
jo
xor
mov
ror
ret
pinsrw
imul
int
sub
and
cmpsb
cld
xor
adc
loopne
shll
fidivl
negl
fs
arpl
test
test
adc
fucomi
enter
xchg
leave
ret
inc
push
in
hlt
ret
jmp
cld
pop
orl
dec
mov
je
imul
loope
cmp
jo
loope
mov
test
xchg
inc
ds
insb
mov
inc
dec
xor
rcrb
dec
xchg
push
je
mov
push
mov
jnp
dec
pop
mov
push
dec
sub
out
xor
dec
dec
das
test
sub
jne
jo
data16
sbb
and
jge
out
pop
jecxz
mull
fsts
divl
dec
loope
inc
jp
push
add
add
cmp
rorl
pop
dec
mov
adc
out
sub
jbe
enter
repnz
cmp
pop
std
push
sbb
xchg
in
test
sub
iret
aas
mov
adc
fistpll
roll
js
daa
jns
andb
mov
pop
lods
addr16
outsb
mov
lods
ljmp
xchg
dec
sub
cmc
es
pushf
cwtl
out
xor
inc
mov
inc
adc
std
mov
mov
hlt
aas
es
dec
sbbl
shrl
mov
hlt
dec
and
sbb
and
mov
stc
inc
and
pop
aad
dec
dec
cmp
mov
daa
jmp
mov
das
push
jmp
sahf
lret
sahf
pop
adc
sbb
sbb
mov
mov
fwait
inc
inc
enter
sub
push
cld
lret
shll
mov
fwait
xor
xor
rcrb
in
mov
les
mov
or
stc
cmp
loope
mov
sti
jno
aad
xchg
push
xlat
dec
into
and
jb
xor
icebp
mov
xchg
enter
inc
jns
les
aas
mov
cmpsb
sub
aam
daa
lcall
xor
sub
sbb
in
enter
pusha
outsb
ja
and
xchg
inc
push
xor
add
repnz
roll
std
cmpsb
in
repnz
add
push
xor
ds
daa
lahf
pushf
mov
and
lret
mov
addr16
out
out
loopne
sbb
jae
aaa
xchg
inc
movsl
int3
fildll
lea
jle
scas
pop
icebp
pop
popf
jl
mov
out
pusha
dec
xor
adc
jb
fisubs
jl
xor
cmp
stos
popf
stos
fst
or
adc
push
movsb
aad
xchg
pop
mov
lods
std
shrb
out
pop
push
andl
sub
aad
sub
in
call
and
repnz
push
cmp
mov
idiv
lea
jmp
mov
jo
les
push
sarb
insb
iret
int3
inc
arpl
inc
iret
pop
inc
fldl
jbe
movsl
movsl
pop
push
pop
stos
xchg
rcr
dec
dec
int3
push
std
mov
or
ljmp
push
nop
scas
mov
xor
add
sarl
in
cmp
enter
mov
sbb
xchg
and
int
out
pop
sub
add
loopne
cmp
in
loope
out
xor
sub
adc
mov
mov
cmc
popf
les
lods
das
mov
shl
shlb
fdivrs
cltd
cmp
inc
push
inc
xor
jno
dec
add
mov
sub
je
push
call
jg
mov
stos
mov
inc
sub
insb
mov
pop
divb
mov
cmc
aas
or
popa
push
mov
sahf
pop
lahf
push
push
xor
lahf
in
adc
je
dec
xor
push
sti
and
jnp
out
add
aaa
test
sub
jne
xor
shlb
cs
push
imul
fstl
or
push
iret
sub
ja,pn
cmp
adc
jo
int
test
out
shll
jmp
test
out
ljmp
shrb
icebp
gs
push
jp
mov
add
outsb
jl
cmpsb
out
jp
pop
in
mov
leave
insb
in
inc
mov
call
jb
jnp
popa
icebp
add
mov
inc
mov
clc
pop
pushf
test
add
push
xchg
lea
mov
mov
bound
scas
jbe
clc
inc
ljmp
dec
outsl
jbe
adc
sub
jmp
cmpsb
mov
ds
out
in
rcl
xchg
ficoms
sbb
cmp
cs
leave
insl
xor
ret
ret
push
test
sahf
mov
in
cmpsb
jne
mov
mov
mov
push
xchg
gs
jmp
xlat
fwait
gs
push
mov
lea
lea
mov
in
add
or
push
dec
dec
sbb
mov
pusha
mov
shl
jnp
add
jns
test
pop
push
das
or
mov
push
sub
aas
cwtl
cld
aas
inc
loop
sbb
fs
inc
jns
adc
cmp
mov
stos
push
xor
mov
pop
sub
adc
dec
mov
inc
in
btc
sub
int3
cmpb
mov
negl
and
fs
in
and
mov
mov
das
cmpl
fwait
repnz
nop
lods
in
inc
in
push
imul
cmp
ja
sub
xor
xchg
mov
fdivr
in
jmp
or
add
cmp
jnp
mov
mov
xor
sbb
jg
cmc
lcall
cwtl
pop
cwtl
filds
cmc
xor
aam
pop
mov
pop
xor
testb
and
imul
mov
xchg
sub
push
push
sbb
xor
pop
aas
cmpsl
mov
pop
or
mov
sub
dec
int3
in
mov
imul
setae
lods
pushf
pushf
pop
shlb
popa
lret
push
je
sbb
pop
cmp
xor
dec
mov
aam
aas
mov
jmp
sbbb
fstpl
mov
test
test
aad
dec
mov
lret
ret
test
xchg
xchg
pop
and
mov
xchg
mov
inc
arpl
nopl
icebp
cmp
lds
mov
mov
mov
cli
mov
lock
adc
pushl
daa
adc
test
gs
dec
or
stos
pusha
jmp
xchg
mov
loop
pop
lret
and
adc
mov
ljmp
xor
sub
mov
push
mov
inc
outsb
repnz
mov
aaa
push
int3
mov
mov
mov
push
stos
jmp
add
clc
outsl
in
pop
fnstsw
xchg
std
jnp
sarb
insl
mov
ret
pop
or
xchg
callw
sbb
negl
push
enter
mov
pop
icebp
or
addr16
stos
mov
inc
lcall
and
sbb
popa
cmpsl
jl
rolb
sub
addr16
xchg
imul
jb
je
divl
mov
mov
insb
cld
adc
fstpl
fsubrl
xchg
cmp
mov
lcall
push
and
xor
inc
ret
cmp
pop
insb
test
leave
push
push
mov
or
push
xor
enter
sbbl
push
xchg
out
lret
popa
imul
aaa
addr16
or
mov
xor
mov
call
aas
jnp
mov
mov
jnp
je
push
sbb
sar
xor
rcrl
mov
or
arpl
jbe
inc
fdivrs
jmp
xor
ret
movl
adc
std
enter
xchg
into
pop
cmpsl
loope
fnstcw
jl
movsl
inc
adc
aad
sahf
aad
jmp
mov
popa
push
sbb
cmp
lret
jns
xchg
icebp
clc
stos
aas
dec
push
mov
stos
into
mov
cli
rol
xchg
out
jbe
pop
je
cld
scas
nop
outsl
jl
xchg
sahf
call
nop
arpl
adc
and
out
mov
fwait
and
cmpsl
imul
adc
dec
jb
jns
pushf
lods
mov
aas
pop
sub
test
jg
cmpsb
test
in
pushf
je
lcall
fnsetpm(287
and
sbb
pop
or
mov
aam
pop
outsl
in
sti
out
cs
sub
mov
push
pop
cmp
jle
cld
ljmp
imul
add
jge
inc
loopne
repz
enter
push
dec
ss
jmp
jg
mov
daa
and
sbb
push
adc
jnp
icebp
out
push
dec
lret
dec
dec
jbe
lahf
js
add
xchg
xchg
xor
lods
je
or
jp
xorb
aad
or
cli
nop
mov
pop
push
mov
sahf
shl
out
inc
imul
mov
inc
loopne
xchg
jnp
mov
test
mov
xchg
add
push
push
fs
inc
movb
jb
add
lret
daa
push
in
push
enter
fwait
jmp
push
xchg
cmpsl
insl
iret
fildll
pop
into
insl
cmovbe
fadds
dec
jge
scas
aaa
or
call
jo
das
lahf
add
jmp
push
adc
sub
lcall
scas
jbe
ret
mov
xor
xor
or
jmp
mov
sub
popf
int
dec
xchg
loop
sahf
push
pop
sbbb
sbb
pop
scas
sub
stos
xor
in
xor
pop
sub
fmuls
pop
lcall
cmp
fisttpl
pop
fists
mov
dec
mov
out
cmc
add
movsl
cmpsb
sbb
add
inc
pushf
lret
pop
not
xchg
lods
mov
mov
test
push
scas
ds
mov
outsl
enter
mov
out
pop
adc
aas
cmp
aaa
stc
movsl
mov
cld
xchg
and
mov
scas
mov
imul
into
movsb
fldl
fnstcw
lock
xlat
sbb
test
xor
lahf
movsb
sbb
jno
push
push
shlb
mov
cmpsl
fwait
mov
fdivrl
fs
cmc
insb
sbb
or
aas
dec
clc
push
pop
push
pop
leave
aad
sub
movsl
pop
jbe
mov
ret
in
add
mov
in
push
xchg
js
inc
or
cli
jle
pop
jecxz
mov
call
jecxz
push
xor
push
lcall
insb
push
pop
sbb
ret
cmp
shlb
cmp
in
mov
xor
mov
lods
push
fisubrs
push
mov
or
out
popf
ja
push
mov
mov
incl
in
mov
out
test
rorb
cmp
or
out
mov
ljmp
dec
add
xor
rolw
shl
repz
repnz
cwtl
insl
sub
ret
jns
adc
fdivrp
notl
icebp
js
jmp
pop
roll
pop
mov
shrb
and
aam
xlat
int3
addr16
test
xchg
mov
mov
icebp
push
cltd
test
and
clc
gs
and
jne
mov
mov
mov
push
lea
mov
scas
cmpsb
lods
xor
nop
pop
inc
lahf
fidivrl
divb
push
inc
sahf
cmp
lods
pop
mov
sbb
lcall
inc
jns
movsb
add
aaa
pop
mov
mov
ficompl
fwait
ds
mov
dec
mov
pop
sub
pop
lcall
add
nop
ret
je
dec
jmp
into
mov
pop
adc
jb
cmp
mov
les
and
adc
mov
inc
aas
dec
lock
or
subl
push
cltd
push
out
mov
xchg
mov
inc
add
jnp
fisttpll
fs
shll
mov
stc
lock
lahf
mov
fs
bound
pusha
daa
inc
jp
jb
dec
outsl
mov
push
push
daa
jge
fisttpl
stos
in
lods
pop
sub
xchg
and
es
in
jbe
adcl
sub
lcall
int
loopne
mov
cmp
notb
pop
lcall
aam
imul
lahf
stos
dec
inc
aad
or
ljmp
loop
ja
mov
call
cmpsb
sub
mov
xchg
movsb
cltd
sub
xchg
lock
pushf
push
sbb
lock
sbb
shrb
inc
lret
push
adc
dec
cmp
aas
lods
xchg
addl
jnp
xor
xchg
cmp
pop
lret
sbb
mov
xor
push
push
addr16
pop
aas
xorl
add
push
push
sbb
dec
bound
dec
or
cmp
lea
or
nop
ss
outsl
mov
lods
mov
sub
or
mov
and
shr
lods
lret
and
cli
lret
or
mov
lret
ss
popf
scas
mov
lcall
fdivs
dec
jle
xchg
add
fnstenv
lret
lret
aas
aaa
shlb
mov
scas
xchg
adc
jne
aas
xor
popa
decb
and
inc
fs
andb
and
subb
or
in
repnz
in
inc
cmp
ds
or
xchg
negl
sarl
mov
push
ds
sbb
sub
mov
and
jb
scas
scas
lods
xor
push
aam
cld
test
jle
repnz
push
stc
add
jp
adc
imul
adc
sub
push
insb
and
mov
sbb
mov
ficomps
xor
lcall
icebp
imul
push
ret
clc
push
mov
add
pop
adc
push
clc
cmp
movsl
mov
dec
push
mov
xor
add
dec
je
pop
mov
cmp
sbb
mov
and
lock
aas
add
stc
push
cmp
cmp
xchg
lcall
xchg
loop
stos
ds
mov
out
or
lretw
loopne
int3
cwtl
inc
add
int
xchg
mov
or
dec
mov
sbb
into
xchg
movsb
addr16
or
or
push
jl
arpl
xchg
mov
sub
adc
sub
jg
jne
sbb
jnp
mov
loopne
cmp
bound
fwait
pop
lahf
inc
shr
xor
jl
dec
and
inc
scas
adc
and
inc
push
iret
pop
popa
pop
mov
jge
dec
cmp
sbb
jae
adc
pop
fiaddl
add
mov
sub
jb
pop
dec
inc
xor
ret
push
push
in
sub
mov
xchg
ss
scas
and
xor
mov
inc
ret
push
inc
mov
add
dec
lret
outsl
and
sub
fisttps
aad
push
jno
sub
push
sub
es
mov
push
mov
jg
pop
xchg
fcom
test
sti
out
sub
ffree
jmp
xor
ficompl
inc
xorl
xchg
adc
cmovp
or
xor
cld
add
mov
sub
leave
shl
jecxz
jl
test
xchg
lret
aaa
pop
testl
rorl
mov
shlb
fucomp
cmp
gs
cli
cmp
sub
and
aaa
mov
in
aad
rcll
lahf
mov
test
nop
mov
imul
mov
xchg
js
mov
ljmp
or
xor
loop
bound
cmp
insl
pop
or
cmp
dec
xor
mov
dec
fimull
stc
mov
mov
test
pop
sub
jge
lcall
out
inc
xchg
dec
pop
jp
inc
repnz
repnz
pushf
mov
jmp
sub
or
into
pop
scas
in
push
cmp
lds
mov
or
ss
out
out
sub
jbe
cmpsb
mov
fmul
lret
mov
imul
enter
cs
mov
rcrl
mov
clc
inc
xor
inc
mov
out
mov
in
iret
pop
mov
mov
add
loopne
xchg
push
dec
jns
pop
movsb
addl
pusha
sbb
sbb
mov
scas
cmp
pop
jg
mov
imul
popf
pop
outsb
mov
sahf
sub
sti
movsl
or
adc
push
int
add
stos
or
idivb
outsb
inc
insl
inc
adc
sub
mov
mov
add
arpl
sub
insb
inc
js
mov
or
pop
clc
fnstcw
cs
ljmp
popf
or
cmp
mov
sbb
and
pop
push
mov
mov
xchg
mov
mov
sub
fldl
mov
movsl
xchg
xchg
js
ficomps
or
adc
jge
and
mov
cmc
scas
sti
xchg
xchg
sbb
nop
outsl
pop
inc
test
sub
mov
aam
xor
or
sbb
shrl
adc
rcrl
std
jnp,pt
loope
movsb
fnsave
or
add
dec
pushf
je
icebp
xor
inc
mov
mov
adc
fstpl
test
dec
test
dec
out
adc
xchg
mov
push
stos
jecxz
xchg
dec
push
in
enter
cmp
das
int3
pop
nop
int
pop
cli
sarb
sub
adc
add
lcall
mov
int3
into
mov
add
push
add
inc
iret
xchg
xchg
mov
cmc
or
mov
imul
mov
outsb
xlat
inc
outsb
fldcw
adc
or
mov
add
push
push
jg
std
mov
mov
ja
data16
ret
sbb
dec
out
or
jmp
adc
and
std
dec
xor
adc
jb
lret
imul
loopne
sbb
push
ret
out
cmp
into
test
cmc
sub
addl
scas
or
jg
insl
mov
sub
insb
cmc
jnp
adcb
inc
in
jnp
out
jo
sub
aaa
inc
xchg
jnp
dec
push
cmp
fcomps
sub
or
adc
push
daa
std
into
pusha
popa
aaa
and
push
in
xor
cs
jo
cmp
lcall
xor
leave
mov
sub
shlb
cwtl
lcall
dec
imul
imul
mov
sbb
cmp
push
daa
xchg
in
int
jmp
cmp
sub
andb
mov
mov
sti
and
sub
add
cmpsb
xor
iret
dec
inc
stc
sub
out
push
mov
fwait
push
repnz
sub
xchg
pop
sub
shr
in
jnp
mov
out
mov
js
xor
es
cmp
rclb
setnp
loop
enter
xorl
lods
decl
inc
iret
pop
push
or
scas
add
pop
clc
add
mov
xorb
cmpsl
insl
pop
call
and
sub
inc
pop
scas
mov
add
mov
ret
push
push
aas
popf
out
xchg
sbbl
and
sti
aaa
inc
imul
cmp
mov
dec
repnz
add
sbb
push
loope
xor
int
pusha
incl
mov
push
popf
les
jecxz
cmc
stc
or
ficompl
jecxz
jbe
lods
add
adc
mov
dec
mov
sbb
xchg
and
imul
adc
das
push
rcl
cld
cmp
iret
mov
fildl
push
adc
fcomps
repnz
cld
arpl
and
data16
stc
popa
imul
cmpsl
xor
push
lcall
es
out
dec
aas
cmc
cmp
movsl
loopne
mov
lods
or
or
pushf
xchg
jae
dec
mov
jp
or
js
push
inc
and
adc
dec
popa
mov
mov
sbb
jns
and
subl
cmp
or
js
jns
xchg
lret
fldcw
fwait
je
cmp
push
jb
testb
arpl
rorb
scas
pop
adc
stc
mov
addr16
xor
lcall
imul
insb
sub
mov
pop
jne
fucomi
push
outsl
add
mov
sub
stos
dec
pop
sub
push
and
xchg
addr16
icebp
sub
mov
shll
sub
mov
aas
pushf
mov
xor
and
jno
clc
push
dec
inc
sbb
sub
cmp
insl
push
sbb
xchg
popa
push
adcb
add
jbe
mov
in
ljmp
mov
rcrl
xchg
dec
shr
adc
fcmovu
dec
lcall
mov
in
cmpsb
fiadds
mov
push
lea
or
stos
dec
hlt
in
xor
imul
stos
mov
divl
or
and
pop
xchg
mov
sub
stos
jnp
pop
rcrb
es
popa
test
in
insb
adc
cwtl
and
adc
ficompl
fsubs
mov
jae
outsl
inc
pop
into
inc
into
daa
cmpsb
lds
js
xor
jl
push
jecxz
mov
or
hlt
frstor
jg
in
push
les
sahf
push
push
dec
jb
mov
sahf
in
push
lcall
sub
sub
imul
in
in
dec
dec
int3
adc
mov
sbb
repnz
jmp
frstor
ss
idivl
xchg
insl
mov
push
sub
add
mov
fs
lcall
cltd
sub
push
mul
push
mov
pop
mov
daa
cli
je
daa
add
xor
sub
mov
xor
adc
push
dec
mov
loop
pop
clc
aam
je
stos
sahf
pop
stc
enter
mov
test
mov
mov
test
cmpb
repz
sti
stos
xchg
scas
rorl
or
mov
ret
into
xchg
sbbl
mov
nop
pushl
mov
jl
sub
sahf
xorl
into
cmp
enter
jb
ret
lock
nop
repz
or
jbe
mov
jne
mov
pop
xchg
cmp
addl
mov
mov
mov
decb
mov
adc
rorb
xchg
fisttpl
mov
add
sbb
push
push
push
cmpsl
sbb
inc
jbe
pop
push
fwait
movsb
dec
xorb
adc
clc
sbb
cmp
push
test
jb
sub
daa
fidivrs
push
fs
cld
jp
imul
imul
push
adc
push
sub
rcrb
popl
mov
or
repnz
test
dec
fwait
jae
or
jnp
fdivrl
xchg
movsl
mov
push
inc
sub
and
sub
push
rorb
sbbl
cli
idivb
lds
jbe
mov
loop
inc
mov
jne
add
stos
mov
adc
add
aas
mov
and
inc
mov
fnstcw
outsb
movsb
shr
mov
pop
jg
movsb
enter
xorb
xchg
in
ret
sbb
mulb
cli
cmp
enter
sar
shrl
push
test
int3
adc
mov
mov
cltd
int3
in
mov
shll
rcrl
mov
dec
int
lods
arpl
or
test
int
scas
sbb
and
fbstp
fnstsw
jge
jp
out
subb
add
or
movsb
cmpsl
dec
push
jns
stos
dec
or
sti
mov
mov
lods
frstor
adc
int
js
dec
pop
scas
cld
push
das
sub
and
faddl
or
js
insb
mov
inc
sbb
aaa
or
imul
cmpsb
es
push
sub
int
out
adc
adc
inc
arpl
out
movsb
jp
in
jl
lods
add
adcb
insl
mov
std
js
xchg
sub
gs
sbb
adc
gs
pushf
gs
xchg
or
lds
jge
cld
arpl
push
lods
mov
mulb
push
jb
jo
cmc
dec
jg
inc
fadds
mov
push
or
pop
js
jg
mov
gs
out
inc
rcr
out
inc
xor
adc
fwait
sbb
cs
lret
cli
mov
add
xchg
and
and
fwait
xrelease
fcmovb
adc
imul
mov
xor
sbb
js
sbb
arpl
jo
lock
dec
jl
stc
xor
sub
out
dec
ljmp
lods
out
stc
insl
int
cmp
lcall
scas
sub
pop
jmp
xchg
aam
xchg
and
fildll
xchg
or
xor
jnp
jbe
std
xchg
xchg
ja
cmc
mov
adc
inc
adc
in
dec
dec
ret
xchg
push
test
push
mov
mov
or
gs
imul
mov
hlt
pop
push
add
jno
call
aam
pop
arpl
xor
jmp
add
dec
repz
jns
sbb
mov
sub
dec
ret
jbe
fdivrp
ret
xchg
nop
loopne
xchg
inc
icebp
mov
fistps
test
add
mov
xchg
popf
arpl
scas
sbb
add
cmp
cmc
xchg
ljmp
fdivrl
mov
mov
xchg
mov
push
in
adc
cmp
inc
adc
aad
roll
aad
push
xlat
jmp
out
mov
jle
inc
bnd
adc
repnz
lret
mov
mov
enter
bound
fnstenv
loope
push
dec
mov
cmp
dec
daa
mov
xlat
lahf
mov
lea
mov
xlat
leave
ret
scas
dec
dec
pop
in
inc
xor
pop
inc
mov
jg
push
pop
ljmp
stc
adc
fcoml
dec
cs
adc
inc
lock
leave
into
inc
dec
std
and
ljmp
je
add
enter
xchg
cmp
mov
mov
xlat
test
pop
outsl
jp
adc
out
mov
ficompl
sub
dec
mov
pusha
jo
pop
fidivrs
mov
pop
rolb
xor
sahf
mov
scas
xchg
pop
push
icebp
rolb
push
arpl
lahf
bound
dec
das
inc
adc
sub
out
pop
iret
cmp
dec
test
test
adc
sub
dec
xor
movsl
mov
in
xor
rolb
leave
or
cltd
xor
sbb
aad
roll
mov
aaa
in
faddl
jmp
jmpw
jp
cmc
add
push
fdivr
inc
test
mov
mov
xchg
mov
pushf
mov
xor
arpl
mov
insb
add
pushf
add
push
ss
into
mov
sarb
test
adc
cmpsb
adc
out
cs
xchg
test
and
jnp
lea
jmp
xchg
outsl
mov
loop
mov
xchg
add
xchg
and
stc
popf
ret
pop
scas
loopne
cmpsl
cmp
mov
pop
pop
mov
jns
lret
jmp
jnp
inc
stos
lret
fsubl
xchg
cmp
or
push
mov
mov
add
ja
lret
clc
sub
out
inc
in
inc
cmp
pushf
pusha
popf
dec
sarb
mov
or
mov
fisubs
rcr
push
in
in
add
cmp
loope
push
stos
sub
mov
and
push
dec
dec
adc
mov
jg
arpl
shrl
jecxz
dec
jp
popa
aas
sub
cs
fistpll
jno
xchg
outsl
leave
jge
lods
sbb
push
ljmp
mov
insl
dec
out
jle
sub
adc
xchg
pop
xchg
or
xchg
in
pop
stos
ss
fcom
scas
cmp
lock
mov
ja
dec
xor
jmp
cmovp
movsl
rorb
dec
dec
mov
xlat
jnp
lcall
cmpsb
push
xchg
bsf
jle
popf
in
jbe
lret
mov
sub
pop
pop
inc
xchg
or
mov
pusha
inc
xor
sbb
mov
or
mov
sbb
orb
or
icebp
jecxz
lret
mov
dec
repnz
jmp
subb
inc
aas
jb
test
iret
pop
lret
ret
lcall
and
fbld
inc
fadd
ds
jle
lcall
scas
push
add
xor
hlt
add
xchg
pop
xchg
jmp
dec
stos
test
or
dec
lods
pop
or
add
pushf
enter
mov
leave
push
int3
xchg
insl
pusha
addr16
add
addb
mov
fildll
dec
mov
push
lock
add
mov
std
cmc
repz
fdivr
iret
andb
pop
push
setl
lret
repnz
incl
sahf
mov
mov
dec
je
mov
adc
bound
xor
mov
cmp
cmp
add
popa
test
jle
inc
cmpsl
je
inc
sbb
rcr
rcrb
rcl
lcall
fwait
sbb
sub
rclb
mov
outsb
aam
lds
or
add
mov
cmpsb
mov
test
inc
jmp
pop
andl
mov
xor
jae
lret
incb
xchg
dec
jo
inc
xchg
xor
inc
in
icebp
xor
lret
sbb
icebp
notl
dec
mov
mov
loop
in
lods
add
mov
xchg
jne
adcb
jns
ficompl
or
xor
xchg
sub
lahf
pop
stc
mov
inc
sbb
outsl
and
aaa
bound
js
int
dec
aaa
enter
and
mov
cli
pop
sub
add
inc
inc
jp
mov
aaa
adc
sub
mov
jge
rcll
in
jnp
cmpb
xor
leave
mov
notb
or
sbb
lods
movsl
pushf
mov
clc
xchg
cmp
push
mov
and
into
pop
cmp
adc
arpl
sbb
inc
pop
and
lcall
xor
hlt
mov
jae
es
aam
out
fistpl
jl
psubw
pop
pop
add
ds
and
adc
pop
mov
adc
cmc
mov
dec
push
fdivrs
outsb
inc
cmc
jb
repz
cmp
dec
dec
push
cmp
ja
mov
fwait
out
mov
dec
dec
clts
js
fldcw
or
add
sbbl
nop
addr16
xchg
cwtl
fcoms
rcll
and
pop
subb
add
data16
cli
repz
dec
repz
es
popa
sub
stos
testl
aas
xchg
push
loope
ljmp
icebp
sub
call
icebp
pop
xchg
shl
mov
jp
aas
outsb
andb
push
and
adc
add
and
pop
and
inc
dec
adc
pop
adc
adc
cmp
int3
push
dec
orl
lods
cmp
add
dec
cmp
cld
out
shrl
cmp
mov
pop
test
decl
dec
cmp
sbb
mov
and
jp
xlat
insb
bound
mov
nop
repnz
push
rcll
in
mov
add
push
out
xchg
jp
leave
dec
imul
or
jne
lret
cli
loop
pop
jae
and
inc
cmp
cld
dec
pushf
loop
mov
ljmp
push
or
cmp
xchg
inc
inc
shrl
rorb
cmpsb
xchg
call
xchg
test
cmpsb
lds
lea
lods
dec
adc
mov
sbb
rcrb
sbb
hlt
aas
adc
lret
inc
mov
sahf
lret
lret
or
mov
and
insl
cmp
repnz
mulb
nop
or
sbb
xchg
sub
mul
jnp
cmpb
aaa
and
out
out
add
add
ret
insb
cs
mov
cld
dec
addl
sub
data16
in
mov
js
xchg
inc
cmp
std
cmp
inc
lds
mov
out
push
push
jo
pop
repnz
movsl
mov
inc
xor
insl
mov
adc
xor
xchg
ret
dec
pop
shll
pushf
xchg
test
inc
add
lret
popa
fidivs
ret
dec
add
pusha
cs
pusha
mov
mov
adc
push
or
dec
out
cli
jae
sbb
rcrl
aad
and
cmp
pop
int
fstpt
xor
std
dec
out
sub
out
gs
loopne
xchg
mov
cmp
in
mov
push
nop
leave
leave
lea
xor
push
jns
pop
add
mov
jnp
jnp
cmc
mov
dec
mov
xor
cwtl
in
lcall
xchg
mov
or
cltd
scas
imul
test
xlat
fistpll
pop
jmp
cwtl
scas
fisttps
fimull
movsb
xor
fwait
add
sub
mov
nop
mov
push
cli
push
pop
add
out
mov
dec
and
mov
mov
int
dec
add
xchg
fs
mov
cmp
shl
in
je
iret
jecxz
jbe
adc
mov
in
inc
cld
stc
xor
pop
and
fcmove
xor
push
mov
push
cmp
push
sub
fcoms
mov
test
repz
stos
sub
sub
fdivrl
jle
loop
pop
ret
movsb
in
mov
int3
xor
sar
scas
lret
aaa
add
pushf
pop
insl
push
and
xor
ret
outsb
mov
lea
and
and
jae
or
call
sbb
mov
leave
in
cmpsb
jne
jmp
dec
call
dec
inc
inc
lcall
movsb
sti
mov
fwait
sbb
xchg
mov
adc
sbb
and
mov
sub
mov
out
andb
mov
cmc
xchg
pop
icebp
cmpsl
sbb
lods
in
adc
adc
pop
dec
movsb
adc
inc
ja
mov
gs
das
ficompl
jae
pop
mov
imul
jmp
shrl
fbstp
mov
sti
xor
fadds
daa
or
inc
xor
movsb
hlt
or
mov
lods
cmc
in
in
jbe
aaa
inc
adcl
cmp
push
pop
call
lret
aas
aas
ja
negb
in
jbe
mov
lods
mov
cwtl
lds
sarb
rolb
icebp
adc
xchg
cmp
or
test
push
pop
mov
mov
cmp
mov
jnp
es
jmp
xchg
cmp
push
cmc
inc
addl
cwtl
push
aad
xchg
sbb
pop
pusha
hlt
ret
out
xchg
xchg
leave
xor
dec
nop
fistpll
push
push
dec
jb
sbb
cli
pop
adcb
dec
jbe
lods
insb
sarb
sbb
xorb
mov
push
pop
xchg
jb
mov
fldl2e
or
xor
jno
add
mov
xchg
pop
inc
inc
rcl
roll
mov
decb
pop
fisubs
mov
idivl
add
xchg
into
icebp
aaa
add
mov
movsl
inc
iret
jno
cli
scas
pop
push
or
mov
mov
jne
ret
shlb
or
xchg
out
vmovaps
inc
xor
sub
cmc
cmpb
into
fidivs
inc
cltd
mov
mov
decl
ret
andl
dec
pushf
in
imul
icebp
xchg
adc
xchg
inc
sbb
adc
dec
mov
and
fnsave
or
inc
cmp
roll
and
sbb
jp
mov
xchg
pushf
sub
fisubs
adc
adc
xor
push
incb
xchg
cmpsb
and
add
jecxz
out
xor
inc
and
sub
into
sahf
ds
hlt
dec
mov
leave
dec
pop
and
out
dec
jne
inc
nop
lret
add
aas
nop
push
stc
mov
fldcw
in
repnz
aam
notb
leave
in
enter
jae
call
stos
pop
ds
push
and
add
mov
jno
pop
fwait
or
pop
cmp
xchg
hlt
mov
push
xchg
aas
mov
lcall
and
mov
jp
into
out
mov
dec
addr16
pop
or
push
js
outsb
xchg
out
add
push
and
push
dec
iret
shll
and
push
sbb
outsb
push
xchg
mov
loopne
div
sbb
push
sub
in
cmp
outsb
adc
push
jecxz
push
test
sub
into
inc
icebp
sbb
hlt
cmp
xlat
mov
cmc
les
sbb
fnop
in
lcall
ss
pop
dec
adc
and
jecxz
mov
add
loop
call
ss
jg
loop
ss
mov
push
and
sbb
inc
jb
clc
pop
jns
jo
ficompl
dec
xorl
mov
mov
mov
adc
ss
sub
icebp
ljmp
cld
test
icebp
fnstcw
in
xlat
and
imul
dec
jne
push
fsubl
daa
outsb
insl
sub
rorb
push
imul
cltd
outsl
jae
mov
dec
pop
or
jle
xchg
cmp
cmp
xchg
leave
adc
cmpsb
push
pop
and
jge
or
mov
incb
xchg
push
or
scas
mov
and
in
pop
mov
loop
into
leave
mov
jno
pop
push
xchg
add
repnz
sbb
cmp
lcall
fs
fstl
jmp
dec
pop
adc
outsl
add
scas
lods
test
pop
out
sub
ficomps
cli
xchg
inc
loop
mov
mov
in
dec
je
mov
aas
stc
inc
sbb
and
loop
dec
inc
jns
xchg
out
xchg
fdiv
aaa
and
loopne
dec
xor
hlt
fs
sub
jne
lds
dec
sahf
rcl
xor
outsl
call
pop
mov
movsl
scas
dec
nop
das
xor
shr
mov
lods
pushf
test
dec
fstpt
mov
xor
ja
mov
xchg
shl
out
or
inc
push
out
test
pop
mov
mov
jns
mov
out
decl
cmp
pusha
sbb
imul
inc
xchg
jg
cmp
sub
mov
mov
inc
sub
push
shr
mov
inc
jno
outsl
or
jns
mov
notl
out
scas
mov
movsl
int3
or
push
test
push
aas
jnp
sbb
ret
sub
sbb
xchg
or
sub
jne
repz
andl
enter
or
bound
adc
lock
inc
fiaddl
cmp
jl
mov
jb
add
cmp
pop
sub
lds
jb
shrb
sub
cmpsb
cmp
neg
aas
ret
imul
inc
stc
mov
out
mov
iret
mov
cmpsb
adc
mov
or
popa
pop
or
inc
pop
cmp
push
xor
sub
inc
push
lret
add
retw
adc
pop
push
or
xchg
shll
sbb
pop
dec
popf
mov
bound
das
sti
push
cld
lcall
add
sub
push
push
cmp
das
dec
adc
fistl
mov
cwtl
jnp
scas
outsb
shlb
shll
cmp
mov
mov
xchg
xor
mov
addr16
cwtl
sbbl
jmp
sub
jmp
fdivr
pop
add
dec
ljmp
imul
and
or
xlat
jmp
xchg
data16
xor
fisubl
ja
int
insb
mov
jae
addps
imul
xchg
and
jp
mov
out
add
cmp
mov
adc
lret
fidivrs
add
pop
adc
pushf
or
dec
inc
mov
lods
cltd
inc
or
and
arpl
mov
incl
inc
popf
xchg
sub
or
lock
sub
out
fimull
popa
push
inc
test
or
pusha
push
pusha
xchg
add
stos
fnstenv
cmc
inc
mov
movsl
arpl
mov
cld
jbe
sbb
ds
add
lods
int3
sbbl
inc
pop
test
or
cli
mov
insl
shlb
xlat
data16
test
shlb
out
out
xchg
sbb
pop
cmp
jno
outsl
rcr
clc
shll
xchg
std
mov
inc
mulb
cmp
xchg
into
fisubrs
stos
movsw
test
sbb
stos
test
stc
cli
jnp
xchg
or
push
das
popf
dec
addb
test
pop
adc
imul
inc
or
repnz
cwtl
dec
test
add
lret
mov
or
mov
imul
xor
pop
jmp
xor
test
or
lods
nop
inc
inc
or
sub
or
sub
fistpl
push
xor
adc
and
mov
pop
ss
dec
inc
daa
aam
hlt
rol
pushf
pop
leave
jb
or
subb
adc
or
push
and
cmpsl
pop
ror
iret
mov
jo
add
jno
sbb
cmp
adc
or
push
mov
jns
dec
and
inc
decb
dec
aad
shll
out
repz
lods
sbb
mov
jo
mov
aam
shrl
mov
fdivs
jp
push
cmp
test
test
push
outsl
xchg
cs
adc
popf
sahf
sbb
mov
ret
mov
jo
iret
pop
out
jae
in
cwtl
js
push
xor
out
xor
out
sub
jmp
jmp
dec
ja
out
hlt
mov
lods
jnp
lcall
ret
fwait
arpl
lea
push
pop
xor
xchg
push
in
adc
xchg
xlat
mov
sbb
mov
addl
popa
loop
pop
scas
fldenv
pop
pop
mov
sbb
jns
pop
xchg
filds
ficompl
je
clc
mov
sbb
or
jns
pop
popa
sub
into
popf
and
xor
bound
test
or
call
cli
and
mov
mov
mov
xchg
mov
and
xchg
adc
push
cmpsb
jge
inc
ds
jg
rorb
jne
arpl
test
test
jo
cmp
int3
xchg
in
cmp
sbb
xchg
mov
pop
jns
movsl
pop
push
push
movsb
xchg
mov
adc
cmp
push
hlt
xchg
xor
mov
shrl
mov
shl
sub
jne
jg
lods
cmp
cmp
sbb
fistps
jno
fs
sbb
mov
inc
sbb
enter
add
gs
call
jge
jnp
adcl
pop
aaa
shlb
mov
das
js
pop
mov
mov
mov
pop
hlt
icebp
mov
xor
xchg
mov
or
xor
xor
arpl
dec
mov
xchg
aaa
data16
cmp
pop
aaa
insl
push
sti
jns
aam
les
ss
in
pop
mov
cmp
jo
lret
push
mov
roll
mov
test
ret
idiv
fdivrp
in
movl
sbb
inc
jmp
testl
jmp
adc
xchg
push
in
or
jo
xchg
std
ja
sub
ds
mov
xchg
ss
cmp
mov
je
jbe
xchg
jmp
sbb
sbb
fiaddl
popf
pop
mov
xlat
call
rcrb
aad
repz
sbb
shr
inc
lock
jne
mov
sub
or
aas
cld
sbb
sbb
xchg
cltd
xor
js
mov
mov
fidivrs
mov
push
push
push
sub
cmp
clc
mov
loopne
mov
sub
push
mov
lret
test
adcb
jbe
jno
dec
sbb
icebp
int3
cmp
jbe
inc
addr16
add
fs
stos
pusha
sub
mov
sbb
loop
outsl
xchg
mov
jecxz
adc
pusha
mov
stos
mov
lret
in
xchg
faddl
mov
xlat
jne
cmp
push
adc
outsb
popf
and
mov
and
xchg
adc
faddl
sub
imul
insb
mov
push
sarl
sub
mov
and
cwtl
in
leave
shrl
jl
aam
cmp
mov
add
and
jp
outsb
int
sti
or
inc
cmp
xor
jo
aam
jmp
cmp
dec
mov
in
sub
iret
in
je
add
cmpsb
outsb
xor
sub
jns
pop
pop
data16
jle
or
stos
cmp
adc
int3
mov
mov
or
out
test
bound
lods
leave
mov
pop
add
or
testl
mov
or
iret
push
xor
pop
stos
fsubs
rclb
xchg
dec
xchg
cltd
adc
jmp
or
lods
xor
jmp
sbb
jb
adc
ffree
sbb
test
xchg
jecxz
ficoms
mov
ja
scas
shr
adc
cltd
and
add
cmp
or
testb
cmp
imul
sahf
mov
fs
add
jl
sub
add
pushf
jg
mov
push
in
mov
fidivl
add
xor
iret
sbb
rolb
movsl
cld
jb
sbb
jno
int3
sbb
mov
sub
adc
jecxz
insl
or
aas
arpl
pop
repz
push
lods
adc
pop
loopne
ficoml
out
jb
and
mov
stos
and
sub
push
mov
xchg
xchg
fistpll
clc
in
add
cmpsl
add
scas
xchg
pop
mov
pop
movsl
lock
xor
dec
sub
sti
mov
mov
mov
enter
sub
ss
jg
xchg
add
lods
ds
sub
pusha
xchg
xor
rclb
lahf
leave
lcall
and
test
and
cld
sbb
dec
and
mov
and
fwait
push
inc
shl
scas
xchg
and
push
ret
jge,pn
stc
dec
sbbb
sub
sub
xlat
mov
into
sahf
out
dec
inc
mov
notl
sbb
leave
mov
xchg
push
push
adcl
inc
inc
cmc
fcmovnb
cmp
aad
sub
scas
push
fbstp
lods
out
push
das
inc
inc
push
jecxz
jmp
dec
sarb
inc
xor
dec
xchg
out
and
push
mov
mov
mov
jns
leave
add
jmp
loope
ficomps
add
adc
add
aaa
cmp
cmpsb
cmp
test
outsb
pop
mov
in
addr16
cwtl
notb
popl
scas
xchg
mov
call
push
or
testl
sub
cmp
stos
fsubrl
stos
addb
stos
pop
mov
mov
gs
aas
inc
sub
adc
dec
icebp
fwait
stos
mov
push
jp
inc
insb
mov
xor
push
in
data16
sbb
aaa
xchg
cwtl
push
xchg
cmp
jl
lret
mov
loope
mov
sub
insb
out
cltd
xchg
outsl
in
cmp
icebp
or
stc
repz
imull
retw
inc
push
jmp
pop
rcrl
jnp
and
out
xlat
dec
sub
ret
outsb
inc
fwait
das
sub
pop
cld
xor
push
mov
pop
push
pop
pop
inc
cmp
es
inc
inc
js
pop
adc
jae
add
inc
mulb
dec
pop
cmp
out
lret
push
arpl
aaa
push
pop
movsl
pop
cmp
xchg
je
push
pop
cmp
int3
adc
push
scas
push
mov
lahf
lahf
roll
add
cmpsl
sbbb
jp
test
sub
add
je
hlt
sarl
hlt
loopne
into
insb
aas
rol
dec
repnz
xor
lahf
jl
sbb
mov
js
decl
paddb
nop
cli
mov
call
enter
repz
xor
sarb
nop
incb
mov
int
cltd
jecxz
jno
adc
add
aad
js
pusha
nop
mov
xor
lock
or
or
icebp
popw
mov
pushf
jle
in
in
mov
ficoml
jns
mov
jg
rcl
daa
pop
pop
out
sti
clc
fwait
xchg
dec
cmp
shr
xor
dec
sub
pop
jne
cmpsl
inc
out
pop
shl
mov
jg
leave
jbe
or
jnp
mov
add
pop
dec
adc
or
fwait
mov
vcvtsd2si
dec
nop
jo
sub
es
out
daa
add
jno
push
inc
and
loope
mov
adc
adc
notl
sbb
aad
lds
pop
fadd
aas
int3
test
shll
rclb
cmpsb
xor
hlt
outsl
adc
cmpl
hlt
das
lahf
push
push
xchg
inc
in
call
out
popf
xor
dec
ret
xor
and
fsubp
dec
int
mov
push
test
data16
inc
aam
and
cmp
stos
push
mov
mov
push
dec
push
stos
cmp
cmpl
xchg
pop
sbb
jmp
mov
ljmp
cmpb
xchg
mov
shll
add
pop
pop
scas
jge
cld
jae
dec
xchg
stos
sbb
scas
dec
into
and
cltd
scas
cltd
add
xchg
inc
jmp
mov
inc
lock
xlat
icebp
out
cmp
imul
fwait
cmpsl
cmpsl
cwtl
in
out
fucomip
mov
dec
and
mov
sub
xchg
decl
mov
rcll
add
mov
mov
sbb
fcmovb
adc
pop
add
addr16
pop
fcomps
mov
insb
dec
into
cmc
icebp
cld
fdivl
repnz
mov
fildll
mov
clc
enter
cli
mov
addr16
ds
lea
pushf
and
and
push
cmpsl
or
enter
mov
push
loopne
cmpsl
ss
outsl
lea
mov
outsl
imul
dec
mov
or
xor
sbb
aaa
popf
jp
jl
jnp
leave
daa
lds
mov
push
popf
fdivrl
add
repnz
push
lds
pop
or
pop
sub
sbb
or
fstpl
clc
inc
dec
mov
or
push
ds
in
xchg
push
mov
outsb
fsubs
xchg
sub
sbb
cli
jae
mov
movb
mov
jle
jo
imul
scas
jmp
mov
jnp
and
movsb
mov
cmpsb
mov
ret
sub
jge
aad
inc
pop
in
loopne
cwtl
scas
push
push
or
enter
out
cmp
or
dec
aaa
mov
sub
jb
rcr
jo
ror
mov
dec
push
xor
mov
loope
xor
or
loop
adc
xor
out
cmc
testb
cmp
out
and
fcoms
sbb
inc
xchg
mov
insl
arpl
jp
notl
mov
mov
subb
mov
vmovshdup
sahf
aas
das
pop
jo
pop
in
and
aaa
and
std
mov
int3
xchg
cwtl
stos
jmp
mov
cmp
lret
jmp
sahf
mov
jle
sti
add
scas
mov
in
sub
add
push
mov
mov
out
fwait
rclb
mov
jg
loopne
outsl
or
jo
sbb
jbe
pusha
aas
out
push
inc
xlat
fld
cli
addr16
enter
dec
in
loope
mov
shrl
mov
test
insl
xchg
in
inc
in
jno
movsl
sbb
sub
inc
jb
and
pop
push
xchg
arpl
scas
mov
push
and
pop
mov
pop
lock
sub
and
call
stos
push
push
or
and
js
mov
xor
daa
mov
fwait
rol
outsb
in
add
push
jns
mov
stc
fdivrl
adc
daa
jns
sub
scas
xchg
clc
shlb
add
std
jl
ja
mov
test
in
mov
push
xchg
add
dec
pop
ret
xchg
mov
pushf
outsl
pop
cmc
shll
outsb
mull
dec
test
sahf
dec
dec
es
aam
sub
cmp
dec
rcll
mov
ja
jno
sub
inc
mov
mov
fldl
lahf
jb
cs
or
aaa
dec
sbb
loop
mov
arpl
mov
inc
push
insb
jae
xor
sub
fidivl
stos
xchg
ficoml
bound
sbb
jg
add
or
mov
scas
xchg
cmp
sub
lahf
inc
movsb
push
mov
leave
outsw
cmp
hlt
test
jb
pop
mov
sub
or
fcomps
or
push
loop
enter
or
push
loop
outsb
shlb
in
in
pop
int3
pop
into
push
rclb
cmp
adcb
out
outsb
sahf
test
sbb
xorb
jmp
scas
sub
pop
dec
mov
xchg
mov
mov
xor
testl
jecxz
das
in
inc
xchg
adc
add
jge
int
sub
popa
adc
nop
int
mov
add
aaa
xor
xlat
jg
fdivl
mov
dec
pushf
out
and
inc
sbb
mov
adc
mov
pusha
fistl
sub
scas
mov
mov
ds
push
nop
gs
inc
xchg
nop
pop
rcrb
inc
sub
scas
push
mov
sarl
xlat
inc
jbe
movsl
lea
rorb
fs
xchg
xor
subb
mov
loope
push
jle
ror
xchg
test
idivl
or
rorl
cmp
dec
cltd
mull
sbb
adc
mov
lods
dec
xlat
in
push
cmc
mov
cmp
and
sub
into
rcrb
lret
cmp
scas
shlb
ja
out
inc
cmp
or
inc
pop
and
and
adc
loopne
or
mov
loop
fcoml
xchg
in
mov
add
sbb
jmp
jns
sbb
aad
xchg
shrb
or
and
dec
push
scas
pop
mov
fbstp
mov
sub
push
cltd
add
pop
gs
jmp
adc
cmpb
xorb
push
push
out
pop
divl
cmp
pop
loop
pop
test
pop
jecxz
in
dec
ljmp
inc
push
cli
mov
inc
arpl
lods
orb
xor
int3
out
and
fs
into
inc
and
daa
scas
aaa
mov
pop
lret
lods
inc
loop
int3
scas
add
call
mov
lods
pop
mov
xchg
and
xchg
rorl
cmp
or
scas
ja
mov
ja
popa
aam
cmp
push
xchg
or
mov
stos
mov
lahf
xchg
int
bound
sub
inc
aam
push
or
pusha
pop
add
popf
cwtl
sarb
inc
mov
mov
std
iret
pop
jmp
neg
lods
cltd
iret
ja
push
cmp
out
xor
mov
xlat
mov
sub
inc
pop
push
aad
sub
ljmp
stc
sub
xor
pop
push
xchg
mov
dec
aas
mov
pop
push
les
mov
pop
mov
aaa
scas
not
pop
jbe
push
aas
xlat
or
inc
jmp
jns
sub
aad
sbb
mov
iret
lea
das
sbb
add
and
cmp
inc
and
lods
pop
pop
xor
in
cld
cmp
jecxz
xchg
repnz
call
add
pop
stos
and
pop
xor
sub
jae
scas
loop
sbb
mov
sub
cmp
andb
push
dec
and
cmp
xchg
pushl
jo
and
stos
mov
hlt
dec
xchg
jmp
ja
xor
clc
mov
or
pushf
xchg
mov
pop
adc
psrlq
in
sbbl
sub
pop
sbb
mov
rorl
dec
testl
pop
mov
hlt
xor
lahf
jmp
mulb
icebp
xor
fsts
cli
cmp
mov
pop
dec
aas
loopne
cmp
arpl
mov
popa
roll
sahf
mov
pop
push
fsubp
fucomi
loopne
pop
add
bound
add
jne
rcr
sbb
je
aas
mov
cmpb
dec
int3
cmpl
sbb
dec
mov
cmp
push
es
test
mov
add
outsb
inc
sbb
cltd
stos
jnp
imul
lahf
xor
bound
mov
cmp
cmp
clc
cli
pushf
xor
jb
lahf
rcr
add
inc
mov
jno
adc
xchg
sub
es
push
adc
mov
dec
jl
mov
in
inc
lods
fs
xchg
cmc
out
fidivl
idivb
mov
test
dec
mov
mov
imul
mov
sbb
rolb
insl
fmulp
mov
popf
push
lods
out
sbb
loop
int3
leave
xorb
addr16
lahf
mov
sub
xchg
xor
xor
lods
call
aas
inc
lret
loopne
movsb
push
add
sbb
sar
mov
pop
push
fsubrs
and
xor
xchg
std
inc
inc
and
daa
xchg
into
cmp
ret
jno
or
aas
cmpsb
xchg
cmp
pusha
loope
xchg
int3
xor
cmpsb
mov
leave
aas
jl
add
test
sbb
push
add
icebp
or
jecxz
jae
imul
scas
mov
aas
and
dec
cmc
popf
test
into
inc
add
stos
add
es
mov
push
shlb
mov
add
loop
test
test
lcall
int3
loopne
das
add
sub
shrb
cmpsl
and
or
cmpsb
and
pop
ds
popa
or
cmpsb
and
mov
stc
into
sub
mov
dec
push
sub
gs
into
sbb
push
jne
or
repnz
push
xor
pop
fs
idivb
pop
into
mov
fisttps
lret
sub
jbe
xor
push
stc
mov
jge
imul
inc
xlat
aad
adc
mov
loop
cmpsl
mov
int3
mov
mov
mov
sbb
sbb
pop
js
sbb
pushf
xchg
push
jecxz
fists
pop
bound
shll
addl
sbbb
hlt
xchg
lock
test
sbb
movb
addl
fmull
xchg
js
arpl
hlt
push
jae
lock
scas
arpl
dec
je
je
jbe
inc
test
mov
divb
stc
testb
hlt
and
sbb
adc
mov
sbb
inc
and
xchg
sub
dec
sbb
jno
or
out
mov
adc
int
push
push
and
rcr
xor
in
in
fists
sub
mov
xor
pop
cmpb
into
bound
fisttps
testb
jbe
pop
and
jge
and
mov
pop
adc
inc
repnz
insl
into
mov
out
mov
inc
arpl
sbb
pusha
pop
mov
mov
sub
repnz
cmp
and
addr16
jno
push
ds
lret
cmc
mov
dec
out
pop
mov
mov
inc
aaa
add
adc
sbb
mov
test
fiaddl
push
gs
fcom
push
rcr
mov
testb
lock
test
popf
cmp
dec
sub
aaa
push
imul
sbb
mov
gs
sub
lea
xor
sub
cltd
and
ds
sbb
sbb
mov
jle
aam
in
xchg
xchg
hlt
stc
pop
enter
push
and
mov
and
imul
pop
js
movb
icebp
shll
fcom
cmp
add
mov
xlat
mov
xchg
addr16
push
inc
out
pop
stos
pop
fwait
lret
ffreep
sbb
fdiv
dec
sarb
out
mov
jmp
ss
mov
es
cld
mov
xchg
push
xchg
sarl
out
jns
cmp
push
rcr
mov
xor
or
mov
cmpsl
aaa
and
in
adc
mov
push
std
mov
push
enterw
mov
push
cmp
xor
test
nop
out
and
mov
cmp
pop
and
xchg
jmp
ds
lds
xlat
ja
jne
push
popa
inc
mov
roll
push
mov
fsubrs
xchg
mov
stos
lret
mov
cmp
fs
pop
dec
xor
add
cmpsl
pushw
rorb
jo
cmpsl
mov
cmp
xchg
sbb
data16
into
test
cmp
leave
dec
loop
inc
in
jge
loopne
or
push
adc
cld
imulb
xchg
notb
xor
les
or
mov
and
dec
sti
mov
je
cli
mov
cmp
add
mov
xlat
dec
push
xchg
loopne
sbb
inc
xorb
and
push
cmp
insl
repnz
xor
out
mov
mov
mov
push
out
fs
je
pushf
pop
filds
repz
outsl
mov
jp
out
fucomip
add
loope
out
cmp
jne
nop
mov
fadd
cmp
ds
fisubs
jne
shl
adcb
or
dec
pop
in
stc
not
pop
cmp
shlb
bound
fs
mov
jl
sub
movsl
ja
ror
xchg
test
arpl
dec
imul
or
jb
inc
call
ret
jnp
test
or
and
push
cmp
call
xchg
mov
jmp
jo
lret
sub
in
test
mov
or
sub
dec
stos
or
adc
div
cmp
rolb
sbb
xor
and
push
lods
das
in
arpl
adc
mov
jbe
and
xchg
inc
lret
mov
xor
lret
pop
ss
dec
jmp
shll
hlt
mov
idivl
jg
push
mov
cld
sbbl
cmp
inc
scas
nop
inc
shll
aad
xchg
inc
jp
dec
xor
mov
mov
mov
xchg
popf
push
inc
mov
call
xchg
cs
aad
or
dec
push
decl
sub
add
fs
sbb
cmp
xor
add
adc
shll
xchg
lret
loope
add
push
outsl
loopne
mov
xor
inc
sub
xchg
sbb
xchg
push
std
push
pop
repnz
mov
inc
sarb
stc
inc
xchg
cmc
mov
repnz
xchg
bound
mov
test
mov
jl
loop
inc
pop
or
icebp
loope
push
imul
lods
lcall
lcall
sbb
mov
and
inc
jns
and
aam
mov
jns
in
filds
xchg
sbb
jmp
jb
inc
dec
xchg
int3
xchg
push
stc
inc
mov
xchg
stos
jge
xchg
out
xor
mov
xchg
or
sbbb
mov
pop
dec
jno
lret
pop
pop
inc
out
fistl
jno
push
mov
adc
jl
repz
hlt
clc
pop
rcl
mov
sbb
xchg
data16
pop
dec
jbe
dec
mov
int
dec
stos
or
xor
inc
cwtl
ds
dec
adc
ljmp
adc
sub
dec
add
dec
ret
in
add
push
ja
sbb
xor
mov
cmp
mov
lret
in
xchg
inc
into
adc
ja
xor
ja
adc
loop
fdivs
daa
decb
enter
cwtl
mov
pop
mov
rcrl
lds
add
les
lcall
dec
cwtl
xchg
je
jbe
stos
dec
adc
addr16
stos
add
lods
mov
mov
inc
jae
insl
addr16
mov
shr
subl
jmp
repz
inc
mov
sbb
insl
dec
jb
in
jmp
aad
fwait
adcb
xor
xchg
mov
sub
repnz
sub
shll
jae
dec
sti
outsb
xchg
lea
lods
fistps
je
hlt
and
test
lcall
cmpsb
daa
jmp
pop
mov
or
rcl
movsb
mov
mov
xchg
push
imul
ljmp
sbb
daa
sbb
mov
jbe
pop
shrl
sbb
pop
mov
sbb
rcrb
fnstenv
sbb
fiaddl
pop
or
cs
cmpsb
mov
jmp
sub
fnstenv
jmp
mov
loope
daa
mov
test
or
push
push
inc
mov
push
shrl
add
lahf
lea
mov
filds
jg
into
stos
mov
and
addl
and
sub
sbb
add
mov
xor
xchg
shrb
outsb
scas
mov
cwtl
sahf
sti
mov
out
mov
and
cs
pop
xchg
dec
cmpsb
jo
imul
adc
aaa
aaa
and
mov
leave
loop
xlat
cmp
fnstenv
or
xor
cli
xor
sub
pop
sub
fimull
hlt
shr
xchg
fiaddl
and
pop
adc
shl
pusha
mov
mov
pop
add
addb
push
clc
sbb
dec
dec
add
add
sbb
arpl
fbld
mov
mov
mov
cs
jno
js
mov
mov
mov
mulb
cmp
stos
jo
lcall
cmp
std
imul
dec
adc
lcall
pop
sub
ds
push
std
nop
divl
push
push
cmpsl
aaa
lods
ja
push
addl
push
xor
cld
mov
sbb
sbb
inc
daa
out
lods
stos
xchg
test
fnstenv
push
pop
out
out
mov
push
cmp
pop
push
in
ss
mov
inc
push
repz
mov
adc
je
sub
mov
sbb
push
test
cmpsb
int3
sub
mov
mov
or
fnstsw
rcll
js
lret
xchg
push
or
mov
in
sahf
xchg
stc
lock
pop
fsubs
mov
add
mov
gs
and
sti
roll
or
sbb
addr16
xchg
mov
adc
jbe
cmpl
stos
sub
lcall
mov
int3
cmp
xor
xchg
in
cmc
mov
adc
std
cmp
imul
mov
jmp
gs
pop
inc
imull
movb
cmp
out
pushf
pop
lahf
mov
xchg
imul
xor
push
sub
lret
mov
and
je
stos
repz
fstps
inc
sbb
xor
cmp
pop
addl
movsl
sbb
add
xlat
cs
xor
adc
mov
inc
push
inc
push
dec
data16
mov
ficompl
fcomi
rcl
fdivrs
insl
push
fsubs
mov
cs
dec
mov
and
push
jae
mov
rcr
add
gs
inc
or
xor
cmp
jae
movsb
inc
pop
pop
and
dec
pop
jle
mov
enter
pop
mov
and
mov
dec
movsl
mov
push
lds
lock
pop
insb
push
add
jo
imul
into
lcall
mov
sub
push
scas
mov
cmpsb
sahf
or
mov
mov
mov
cmc
jecxz
pop
adc
inc
in
in
lcall
rclb
idivl
xchg
add
or
jo
je
lods
push
lret
push
mov
cmp
adc
cmp
cmc
dec
sbb
jmp
jg
in
out
sub
push
inc
mov
mov
adc
test
cmp
pop
xor
pop
adc
inc
or
fcom
push
cs
mov
mov
inc
sbb
mov
jmp
sbb
aad
cmp
xor
or
jecxz
fsubs
mov
addb
fmul
filds
inc
or
lods
insb
loop
pop
gs
jnp
pop
in
push
pusha
or
xchg
mov
cwtl
mov
jg
or
xchg
shlb
push
fildll
sbb
negb
insl
or
sbb
fdivrp
popa
push
mov
pop
push
lcall
sub
out
xorl
mov
lock
jns
jmp
mov
xor
jno
or
push
and
push
jb
add
fbld
pop
inc
je
mov
lcall
add
ljmp
test
push
pop
jne
aad
jmp
or
mov
into
out
xor
dec
out
xchg
push
jp
ret
shll
arpl
lds
incb
mov
scas
loopne
dec
xor
xlat
dec
mov
pop
sahf
fsubp
add
out
loope
mov
mov
cmp
pushf
clc
fidivrs
xchg
pop
mov
or
xor
jl
lcall
notl
pop
mov
arpl
mov
push
out
lods
fistpl
notl
pop
jg
out
pop
negl
or
das
mov
sub
mov
stos
push
loope
xchg
sub
das
adc
mov
gs
fs
es
sbb
addb
div
mov
in
cmp
cli
mov
loope
int
addl
test
pop
cmp
dec
xchg
lock
mov
add
xlat
xchg
pop
sub
lcall
push
add
mov
insl
jecxz
sbb
cmp
shl
mov
movsl
inc
adc
mov
mov
pop
pop
rcrl
adc
mov
mov
test
pop
jecxz
adcb
loop
adc
scas
sarb
icebp
les
push
int3
inc
and
mov
lret
and
xchg
xchg
cwtl
adc
or
cmpsb
push
out
out
push
cli
adc
in
adc
sbb
xor
out
das
ret
sub
stc
or
ja
shrl
mov
sbb
scas
jmp
bts
mov
sti
shr
je
xchg
loop
mov
nop
adc
sub
pop
lret
xorb
inc
mov
cmpsb
pop
fdivl
in
sbb
inc
fisubs
push
cmpsl
stos
ss
jmp
pop
cmp
xor
std
jnp
movsl
in
out
sbbb
cmp
int3
sub
add
xchg
dec
adc
or
je
out
mov
test
pop
cmpsl
das
mov
and
lods
push
sbb
movsb
mov
decb
jno
bound
aaa
pop
inc
lods
jo
clc
mov
mov
je
mov
pop
scas
or
arpl
or
aas
mulb
cmp
push
sbb
pop
cwtl
lret
in
or
int
fisttpl
stos
lcall
sub
hlt
cmp
push
mov
sahf
xlat
aas
cmc
adc
out
ret
mov
pop
mov
mov
roll
cltd
pop
xor
int3
xlat
jne
shll
loope
sbb
add
mov
mov
aad
jnp
mov
pop
cmp
insl
push
add
icebp
adc
sbb
pop
clc
loopne
and
xor
shlb
and
or
xor
jmp
ret
inc
xor
mov
vpsllq
push
iret
divb
cwtl
pop
xchg
mov
push
pop
clc
xor
fwait
inc
sbb
sbb
mov
shlb
push
sahf
repnz
add
sub
jns
je
dec
adc
mov
movsl
leave
dec
in
push
fistpl
mov
xchg
sub
cmp
mov
dec
test
in
mov
test
jb
cli
cwtl
pusha
xchg
mov
dec
push
aas
arpl
adc
inc
push
mov
mov
xchg
in
mov
loopne
jecxz
xor
lret
push
insl
mov
add
mov
imul
cltd
fcmovnb
jl
test
xchg
push
mov
and
push
scas
jg
test
inc
xor
jns
fcomip
pop
and
xor
jle
rcrl
jle
out
adc
cmpsl
xchg
xor
mov
cmp
fwait
ret
sahf
add
ret
gs
xor
dec
hlt
in
push
fsubp
loopne
dec
mov
shrl
push
cltd
leave
loope
jle
pushf
jmp
mov
and
add
mov
add
clc
or
mov
jmp
hlt
mov
repz
dec
insl
add
jle
sub
addb
mov
inc
or
aam
sub
xor
loop
push
sahf
and
jp
aaa
insb
mov
fldt
inc
std
push
lret
adc
subb
mov
lock
bound
mov
shl
lahf
add
jnp
mov
repz
fdivrs
sbb
xor
repnz
int
sub
out
repz
sbb
mov
cwtl
pop
out
jecxz
mov
repz
mov
inc
rclb
mov
jmp
mov
adc
repnz
pop
xlat
mov
or
and
jns
inc
out
jbe
add
add
fsubs
nop
sbb
notb
call
popl
pop
shlb
jae
dec
sbb
jge
into
dec
outsb
add
adc
or
cmp
shrb
arpl
popf
mov
mov
and
into
mov
leave
ja
xlat
pop
dec
inc
movsl
les
mov
dec
cltd
stos
andl
sub
mov
les
inc
dec
imul
dec
jle
cmpsb
dec
lods
add
mov
mov
jge
add
out
jle
lea
js
add
rorb
jb
jp
aad
dec
out
add
xor
jmp
dec
repz
sub
pop
jno
jno
ss
cmpl
cli
mov
xlat
and
add
test
push
dec
push
pop
test
add
sbb
or
test
les
push
xchg
out
cmp
insb
repz
pop
loopne
xor
rep
jae
pop
lods
xchg
xchg
push
out
sub
cli
out
std
jb
jno
aad
jno
dec
jno
sbb
pushf
into
ss
bound
cmp
jno
xchg
mov
fnstsw
popa
adc
lcall
rclb
xchg
pop
sub
mov
pop
xchg
mov
push
imulb
xchg
movsl
pusha
std
inc
push
stc
int
sbb
scas
movsl
and
lret
pop
and
jbe
push
test
arpl
push
je
pop
daa
cmp
in
fwait
fwait
cmp
daa
std
pop
sbb
and
in
mov
or
mov
addr16
fsubr
adc
cmp
insl
movsb
xchg
pop
inc
icebp
xor
in
cmp
xchg
sti
lret
push
or
clc
rcrb
fdivrl
push
cmc
push
fsubr
push
pop
push
inc
call
add
test
inc
bound
rolb
dec
dec
insl
mov
xor
loop
lods
and
sbb
ja
mov
stos
push
in
sbb
add
mov
sub
mov
daa
lret
cltd
ret
jnp
addr16
out
sub
sub
test
les
mov
xor
and
call
xchg
pop
fnstsw
cld
idivb
mov
pop
sub
aaa
cmp
xchg
xchg
sbb
dec
adc
jno
pop
ljmp
loope
adc
mov
imul
and
loope,pt
jae
mov
into
sbb
inc
jp
cwtl
cmp
and
and
fbstp
mov
cltd
sbb
add
or
testl
jo
xchg
je
fimull
adc
xchg
lret
scas
mov
pop
sahf
mov
mov
lods
sbbb
adc
out
fwait
repz
jne
aad
fiaddl
loop
inc
out
jmp
xchg
mov
add
dec
cli
push
popa
scas
sbb
dec
or
xor
data16
sub
inc
adc
cmp
outsl
int
xchg
jmp
shll
and
jl
and
test
inc
movsl
mov
test
mov
or
pcmpeqb
jae
test
pop
inc
jecxz
and
xlat
ss
in
adc
add
push
sub
popa
cld
pop
push
lret
fistl
push
jl
jns
imul
in
and
jp
nop
push
add
jo
mov
push
mov
sahf
jl
clc
pop
repz
dec
call
nop
adc
outsb
cmp
jle
arpl
xchg
ljmp
xor
mov
cmp
pop
add
andb
imul
ret
or
push
out
adc
jle
cmp
lcall
and
jbe
lahf
int3
out
jb
sbbb
inc
imul
and
adc
inc
lcall
popa
les
shrl
push
or
adc
stos
scas
lret
roll
in
lcall
les
jmp
lahf
xchg
leave
and
push
in
inc
xchg
insb
out
loop
jb
stos
push
out
fnstenv
or
movsb
out
ss
pop
sbb
pushf
les
push
mov
cmp
sub
ret
or
add
lds
subl
and
fs
cmp
jmp
pop
popf
xor
cwtl
stos
jmp
pop
scas
cmp
daa
stos
test
and
pushf
data16
xor
in
and
imul
push
sbb
in
cmp
es
jp
add
insl
inc
bound
shrb
inc
mov
stos
fistps
in
cmpsl
cmp
pusha
dec
xor
jbe
std
sub
adc
xchg
sahf
rorb
loopne
cmp
sarl
mov
pop
sbb
xor
jmp
and
imul
insl
add
rcr
imul
xor
testb
mov
pop
or
stc
imul
ficomps
fs
jae
xchg
movsl
mov
cmp
in
inc
test
lcall
addr16
imul
push
sub
inc
mov
lods
call
xchg
inc
inc
in
pop
xchg
mov
push
cmp
mov
mov
mov
int
lcall
rolb
adc
xor
pop
mov
or
ret
negl
mov
lds
add
in
or
imul
movsl
data16
xchg
mov
jl
push
mov
xchg
cwtl
sbb
scas
enter
cld
pop
sbb
lock
addr16
adc
jle
sub
es
mov
xchg
movsb
add
or
mov
imul
aaa
jge
and
lahf
xchg
lahf
pop
adc
sbb
je
mov
pop
stos
rolb
xorl
cmp
es
addr16
or
rorl
enter
cmp
mov
push
into
ficoms
out
adc
repz
repnz
push
in
into
movsl
fwait
push
and
mov
jbe
fdivrs
push
roll
lds
insl
mov
jecxz
bound
pop
ja
add
mov
inc
pop
js
jg
ficomps
inc
sub
dec
cmp
stc
das
cmc
movsb
adc
insl
mov
mov
cmp
dec
popa
inc
xor
pop
loopne
or
xor
call
jne
pushf
mov
mov
rclb
cli
cmp
dec
bnd
loope
cmp
in
fildll
loopne
aas
lret
sbb
adc
imul
or
gs
pushf
xor
xchg
xchg
xor
or
jbe
stos
cwtl
jl
sbb
adc
push
and
pop
or
adc
jae
adc
or
and
gs
repnz
pop
adc
adc
mov
push
and
gs
xlat
fidivl
leave
repz
add
add
mov
sub
and
pop
addr16
mov
dec
es
pop
inc
jg
out
insb
xchg
xchg
mov
lds
sarb
call
dec
es
call
and
pop
and
clc
and
repnz
mov
push
clc
push
out
pop
lret
scas
int3
mov
push
sbb
aaa
rcrb
or
mov
jno
xchg
clc
push
leave
dec
setae
pop
adc
test
push
insl
push
or
dec
aaa
iret
sub
xor
jae
pop
mov
iret
push
inc
idivb
sti
jae
lods
sbb
int3
cmp
stos
fisubrl
movsb
subb
push
push
push
pop
call
add
addr16
jecxz
hlt
movsb
lods
mov
sbb
sbbl
jp
imul
popf
jecxz
into
push
js
push
pop
jnp
imul
scas
jb
mov
mov
jl
mov
mov
test
fildll
insl
notl
mov
imul
mov
and
lds
cmp
inc
js
test
ret
idiv
loopne
hlt
xor
jp
or
js
push
sub
mov
loop,pt
add
sub
out
xor
mov
stos
mov
mov
xor
dec
loop
push
fisubl
insl
jecxz
je
adc
push
pushf
sti
dec
pop
lret
dec
add
or
push
adc
fcmovu
cmp
push
add
mov
int
mov
jp
cli
sub
dec
pop
aam
pop
ret
xor
into
nop
pop
jbe
out
aaa
mov
call
je
cwtl
lret
ja
jns
pop
push
out
in
xchg
mov
and
mov
insl
sbb
push
cli
into
jecxz
mov
gs
daa
filds
adc
or
stos
cmpsl
test
ret
leave
and
movsb
imul
xchg
lods
adc
lret
ret
mov
xor
lcall
rol
enter
addl
daa
pop
or
cmp
mov
insl
add
mov
imul
xor
mov
pop
sahf
or
in
bound
dec
rcl
int3
icebp
insl
sti
xor
cmp
mov
or
jmp
jle
mov
jne
mov
jne
ljmp
fstps
enter
hlt
xchg
xchg
jp
push
mov
outsl
int3
mov
jb
scas
push
call
dec
dec
add
repnz
mov
xlat
push
inc
dec
push
mov
jo
scas
push
sbb
scas
mov
and
jge
mov
out
nop
add
imul
movsl
out
xchg
sbb
in
pop
pop
aad
push
pop
mov
add
adc
je
jne
dec
lcall
cmc
or
popf
dec
int3
mov
pop
pop
sti
cmpsb
and
sbb
jbe
xor
jge
push
jp
jnp
push
cwtl
mov
scas
mov
jp
cli
mov
popa
sub
in
lcall
in
xchg
mov
mov
jmp
iret
in
sbb
xor
adc
es
xlat
mov
addr16
mov
and
push
sbb
cli
lcall
in
push
lea
insb
data16
stc
adc
dec
js
dec
dec
push
xor
aad
notl
inc
xchg
pop
popa
les
jmp
adc
jb
jle
push
loopne
inc
add
aaa
roll
es
and
std
add
push
in
add
fisttpll
pusha
addb
xchg
sbb
sbb
xchg
dec
or
push
xor
sbb
xchg
sbb
add
jno
lods
cmp
inc
xchg
loope
mov
pop
push
xchg
jecxz
push
mov
insl
cmpsb
test
mov
add
mov
pop
das
loope
sti
divb
ret
sub
lret
cld
jp
push
jecxz
mov
inc
jbe
pop
mov
adc
rcll
stos
imul
sbb
inc
pop
leave
in
lods
shll
scas
mov
add
pop
sub
adc
xchg
jo
cwtl
inc
xor
stos
ja,pt
fwait
pop
jnp
sti
dec
lea
test
mov
inc
outsl
xchg
test
dec
sahf
cmp
rcrb
and
roll
xchg
jo
incb
dec
adc
mov
loop
dec
insl
insb
mov
lods
es
xor
lds
ret
rolb
outsl
fsubrl
je
add
dec
or
xchg
inc
inc
sbb
jae
jno
clc
pop
push
xchg
int3
repnz
mov
js
jle
fistl
sub
imul
roll
jns
call
jae
out
les
fistl
mov
loopne
jge
mov
imul
dec
push
lods
cli
and
movsb
loopne
or
cmpsb
movsl
pop
mov
in
push
dec
lret
jle
pop
and
inc
cltd
cmp
and
dec
inc
aad
loope
cmp
pop
aaa
dec
cmc
inc
lahf
or
test
ljmp
mov
mov
sbb
sarl
pop
sub
out
test
pop
lock
dec
mov
cmc
ret
inc
les
push
mov
in
aad
or
rcl
fsubl
enter
jecxz
scas
arpl
mov
cli
pop
mov
imul
hlt
rcll
mov
filds
push
sub
fistps
in
push
filds
lock
xor
pushf
sbbb
movsb
insb
fcompl
test
xchg
lea
mov
movl
loopne
inc
lods
repz
adc
and
mov
in
jbe
jb
nop
mov
in
add
xchg
std
insl
mov
movsl
dec
test
adc
xchg
mov
test
call
loop
xor
leave
insb
push
ja
popf
pop
mov
jle
mov
push
jp
xor
push
int
ds
push
aas
inc
daa
xchg
add
mov
dec
int
fistps
cwtl
cmp
and
or
fisubrl
pop
push
sub
scas
js
and
cmp
add
cmpsl
shrb
arpl
lret
or
adc
imul
imul
data16
or
arpl
jae
sti
cmpsb
push
xchg
jns
mov
jbe
mov
push
sbb
notb
arpl
aas
mov
inc
push
sbb
imul
push
dec
jnp
mov
inc
mov
stos
testl
jle
aaa
pop
xchg
adc
fcoms
lds
mov
test
fiadds
dec
cld
xor
xlat
stc
sbb
lock
daa
aas
fisubrs
push
xchg
mov
push
dec
sbb
dec
xor
lods
add
cwtl
jno
outsb
inc
mov
xchg
pop
je
orb
mov
jae
imul
or
sbb
xchg
clc
aaa
xchg
loop
aam
sets
xchg
jnp
mov
mov
inc
out
mov
repz
out
push
ret
or
scas
jl
adc
loopne
jp
test
pop
sub
add
inc
push
lock
adc
dec
pushf
push
cmp
dec
cmp
mov
jae
popa
dec
call
sbb
mov
shrl
es
cmp
jae
aaa
sbb
jge
push
push
add
push
clc
fldt
cmc
add
mov
mov
pop
testl
adc
xor
sbb
jmp
mov
mov
xor
mov
filds
adc
sbb
dec
push
into
sub
sub
mov
push
inc
enter
push
test
std
and
pop
call
xor
dec
mov
das
inc
into
in
cld
icebp
inc
in
and
xchg
scas
sbbb
icebp
test
int3
push
mov
or
repz
xchg
dec
mov
pop
sahf
mov
jo
and
mov
cmpsl
sub
cld
mov
cmp
cmp
and
and
dec
sub
jae
test
push
push
jle
push
ret
or
cmpsb
lods
arpl
aad
mov
add
pop
inc
sbb
jno
add
out
dec
testb
out
inc
je
test
mov
inc
mov
inc
jge
das
jle
mov
stos
scas
sub
cmp
fnstsw
rorl
mov
sbb
dec
and
fst
repnz
sub
cltd
mov
adc
pusha
stos
and
xor
popa
hlt
pushf
mov
out
xor
adcl
aam
cli
inc
lret
pop
shrb
outsb
adc
gs
xchg
jle
sbb
and
sub
fs
fiaddl
stos
push
adc
daa
fistpll
popl
ret
out
adc
or
je
dec
fistps
dec
cmpsb
mov
into
loop
jle
popf
and
scas
inc
out
sysexit
lahf
shl
push
sub
lahf
fisubrl
or
xchg
mov
jb
loope
nop
or
mov
xchg
imul
add
cmp
push
inc
adc
and
mov
sahf
mov
and
test
xor
jae
aam
aad
inc
jo
scas
ret
lahf
push
adc
rolb
lahf
dec
fisttps
sahf
loope
xchg
or
jnp
dec
lcall
js
aas
rorb
sub
jbe
es
adc
mov
add
das
xchg
fs
xor
repz
movsl
xor
sub
mov
icebp
aam
imul
orb
or
pop
imul
pop
fwait
gs
lahf
in
daa
or
les
pop
xor
iret
out
mov
test
loope
or
cwtl
sbb
dec
icebp
mov
pop
xchg
inc
pop
pusha
ja
dec
cmpsb
fiaddl
pop
ja
sub
shrb
arpl
inc
pop
cwtl
cmc
fs
inc
jbe
pop
mov
outsl
jb
and
cmc
mov
loop
mov
std
sahf
int3
mov
stos
mov
sub
xor
mov
cs
cwtl
xchg
push
test
xchg
lds
inc
xor
cwtl
lret
lds
ret
loope
dec
fistpll
xor
add
mov
dec
shlb
int3
cmpb
jg
adcl
push
cwtl
sbb
xchg
dec
adc
dec
std
into
jno
dec
jb
es
roll
or
mov
inc
stos
test
dec
dec
inc
and
fwait
sub
jb
es
cli
loope
sbb
push
shlb
insl
aas
bound
ror
repnz
aam
mov
aaa
mov
repnz
leave
rolb
cwtl
xchg
je
shrb
and
cmpsb
ljmp
push
loope
mov
mov
adc
dec
inc
daa
or
fdivrl
inc
mov
lahf
mov
popf
jmp
cli
je
filds
jmp
xchg
fsubl
das
les
dec
pop
mov
sub
and
or
jb
and
and
ds
pop
fs
push
les
mov
adc
xor
sub
sbb
daa
xchg
inc
out
pop
mov
imul
xor
arpl
jb
mov
cld
push
xor
dec
cmp
test
ljmp
sbb
pop
mov
call
mov
or
fsub
fldcw
insb
out
adc
mov
jb
adc
and
outsb
mov
sub
or
inc
xchg
xor
inc
movsl
negb
rorb
xor
outsb
jnp
out
mov
lock
js
add
insl
jp
inc
cmc
mov
lret
shlb
frstor
filds
mov
clc
pop
inc
gs
les
jecxz
push
xchg
bound
xorl
daa
push
adc
jbe
ljmp
orl
cmp
inc
and
je
adc
shlb
adc
std
aas
mov
pop
mov
xchg
cli
fbstp
pop
in
inc
cltd
call
insb
xlat
lods
push
daa
pop
roll
fldcw
leave
cmp
xor
je
jl
inc
jnp
mov
dec
scas
inc
lret
lds
mov
out
insb
push
push
mov
jns
data16
sbb
sub
insb
sbb
pop
fstpl
loopne
jbe
rcrb
or
stos
mov
pop
out
cmp
xor
xchg
dec
sahf
in
adc
jle
mov
xchg
sub
jl
hlt
jmp
and
or
sbb
lret
jne
jae
pop
nop
fwait
or
jecxz
jmp
adc
loop
or
testl
sub
jne
ja
lret
xor
cmp
movsb
and
call
cmp
mov
ljmp
pop
mov
add
push
sub
aam
in
mov
loope
add
jecxz
fucomp
vmwrite
xor
out
pop
lret
fistpl
call
push
ffreep
sti
xchg
test
movsb
xor
inc
lahf
out
jmp
sub
es
addr16
les
mov
fwait
repz
data16
xor
xor
pushf
ror
add
cmp
fisubl
inc
cld
cmp
pop
ss
dec
or
out
mov
jge
cmpsl
cltd
push
sub
cmp
cmp
mov
cmp
ret
in
scas
movsb
ljmp
fistpl
es
jns
cmp
lret
pop
clc
mov
jge
pop
subb
push
rcll
icebp
xor
fsub
or
mov
mov
movsl
arpl
ss
mov
int
ds
out
and
xlat
cltd
jecxz
mov
lods
fidivl
jns
sbb
xchg
leave
sarb
mov
fdiv
rcrl
dec
xor
dec
in
mov
repz
sbb
cmc
popf
inc
xchg
and
inc
data16
sbb
ss
aas
outsb
in
jns
fs
fs
cmp
aad
fldl
imul
adc
adc
out
aam
pushf
dec
cmp
test
xchg
inc
add
out
xchg
cld
lret
cld
hlt
inc
pop
pop
sbb
mov
ja
vpunpckldq
or
jecxz
cmp
lea
xchg
add
mov
jp
ficompl
pop
sub
cmp
in
and
aam
and
pop
mul
xchg
mov
and
adc
dec
mov
enter
mov
and
shl
sbb
pop
sub
rcrl
push
sbb
stc
pop
add
rorb
mov
push
cmp
and
mov
aas
xchg
sub
sbb
loop
test
inc
cmp
outsl
inc
mov
loope
jmp
imul
sub
lock
xor
out
int3
movsl
enter
mov
mov
mov
cli
stc
pop
addr16
or
popf
push
into
ret
inc
cmpsb
and
clc
mov
arpl
cmp
fcoml
adc
aaa
push
jnp
xchg
sub
nop
arpl
sub
repnz
jge
add
movsl
or
mov
pushf
cmpsb
push
push
mov
xor
add
add
stos
icebp
sub
mov
stos
fnsave
add
mov
jns
testl
xor
hlt
jne
pop
xchg
cmp
cmp
js
shl
addr16
adc
jl
sub
cmpsl
sbb
xlat
sub
xor
arpl
icebp
mov
outsl
adc
mov
mov
call
shll
push
je
push
ljmp
aam
into
and
andl
loope
mov
push
js
pusha
test
lods
xchg
pop
add
xchg
loope
push
push
js
out
push
repz
pop
outsb
adc
lcall
jg
and
fimuls
rol
in
aas
jle,pn
adc
cli
dec
inc
mov
and
and
cmp
mov
int
push
std
mov
or
cltd
fidivrs
loopne
lods
fisubl
pop
arpl
cltd
jp
test
xor
jns
xor
faddp
fdivrs
jg
jne
iret
adc
gs
sbb
or
loope
mov
repz
movsb
add
lods
adc
mov
int
cmp
and
fs
push
int3
mov
add
in
scas
test
sub
jno
imul
call
mov
es
aam
adc
add
scas
out
mov
imul
mov
out
xchg
clc
or
jae,pn
adc
test
and
cmpb
pusha
test
enter
cmp
sub
mov
push
push
cmpsb
cmp
ficompl
nop
cmpl
inc
cmpsl
inc
mov
jno
loope
orl
sbb
js
leave
add
iret
lods
sub
mov
pop
pop
test
stos
jnp
imul
jmp
fcoms
outsl
test
in
xor
jmp
notl
sbb
jle
fsubrl
mov
push
sbb
lahf
mov
cli
fwait
xlat
push
mov
int3
pop
jle
movsl
loopne
jnp
dec
add
cli
xor
int
ds
and
jg
pop
std
adc
dec
mov
into
lret
sub
xor
lock
mov
test
aad
jne
outsb
jae
movsb
mov
dec
pop
or
stos
negl
adc
and
xchg
not
fbld
mov
imul
push
insl
test
and
les
mov
jecxz
test
jp
mov
fs
sbb
mov
imul
push
pusha
inc
dec
jecxz
cmp
aam
xchg
inc
mov
daa
xor
lahf
inc
out
sbb
ror
xor
inc
mov
inc
xchg
aas
jge
or
cmc
cmpsl
inc
or
dec
inc
mov
xor
adc
mov
xlat
and
or
out
lds
pop
in
dec
xor
adc
jbe
movsb
mov
mov
outsl
cld
mov
mov
cmp
push
push
add
bound
mov
push
mov
push
and
push
daa
cmpsb
jmp
ds
and
cmp
jecxz
sahf
adc
sbb
loopne
pop
out
jl
ror
test
xor
mov
shl
cmp
test
xchg
dec
rcrb
inc
mov
pop
xor
push
push
int
pop
in
mov
and
aaa
inc
test
mov
and
mov
xlat
stc
sbb
xor
sbb
jne
int
mov
out
loope
mov
xor
or
loop
and
movsl
insb
lcall
jb
mov
inc
repnz
ds
and
sbbl
mov
xchg
fldenv
aas
lea
repz
rolb
xchg
sbb
mov
ret
mov
dec
aam
cld
in
daa
dec
cld
and
icebp
and
mov
shrb
pop
xor
sarl
cs
xor
jno
mov
xor
sbb
mov
insb
sbb
std
sbb
ror
out
xor
dec
inc
mov
adc
in
ficomps
or
popa
mov
cmp
mov
sarl
xchg
or
ror
daa
lcall
adc
cmc
inc
fisubs
scas
sub
aaa
or
push
and
lret
pop
jg
lret
jnp
gs
fwait
in
dec
jle
andl
dec
sub
lea
sti
out
stos
and
mov
lods
divb
shrb
hlt
ja
add
mov
outsl
inc
push
mov
jnp
decl
lea
stos
jecxz
xor
lds
jo
inc
sub
jp
movl
scas
cmpsb
icebp
shlb
out
leave
lock
jmp
or
mov
test
das
test
inc
and
aad
lods
dec
pop
push
stos
std
repnz
sub
cmp
mov
pop
iret
stos
cmc
pop
push
enter
cmc
cli
or
cwtl
sub
outsb
push
dec
dec
and
addr16
mov
test
ja
inc
jecxz
add
push
sbb
arpl
dec
pxor
inc
mov
test
and
mov
push
test
enter
testl
out
insw
xorl
xchg
sbb
adc
jb
sbb
dec
sub
je
les
inc
cmp
push
lahf
lock
cmp
and
div
push
jbe
test
jae
add
push
cmpsb
mov
insl
dec
movsb
aam
mov
sbb
sbb
insl
stos
int3
jnp
fs
push
pushf
and
cmp
inc
or
jnp
enter
lret
ficompl
jecxz
int3
mov
or
cmpsb
outsb
xorl
mov
ds
push
in
jne
stc
je
pop
jmp
es
les
mov
xor
xlat
add
sbb
dec
cli
ret
sub
dec
jle
hlt
push
xor
je
xor
or
xor
mov
adc
jns
stos
fld
repz
in
scas
test
cld
rcl
faddl
and
inc
adc
bound
dec
icebp
pop
cmpsb
cmpsb
imul
push
mov
jno
push
xchg
add
mov
dec
xchg
hlt
xlat
pop
outsl
ds
dec
sub
or
sub
icebp
movsl
ja
rcrl
mov
add
insb
xchg
xchg
ljmp
roll
or
pop
insb
push
xchg
or
jmp
rorb
dec
cmp
insb
popf
push
sub
mov
std
or
daa
sbb
leave
ret
and
rcrl
nop
mov
faddl
xlat
mov
jne
test
insl
imul
or
lds
pop
and
lods
repz
add
sti
xor
icebp
push
mov
xchg
fimull
push
mov
mov
decb
in
jns
iret
in
pop
ret
test
lea
sbb
fisttps
jmp
repnz
fdecstp
push
add
pop
sub
mov
push
xchg
and
sarl
sbb
mov
enter
stc
into
iret
outsb
call
mov
insl
push
std
mov
and
mov
mov
loopne
pmaxsw
mov
shll
xor
out
fisttpll
cmp
pusha
imul
cmp
cmp
mov
inc
outsl
add
sbb
popa
mov
mov
test
dec
sbb
push
shrb
push
int
and
cmovo
lea
jmp
pushf
jmp
jge
enter
lock
aad
lcall
shlb
je
hlt
pop
insl
int3
cmp
cmp
jp
pop
dec
push
popf
adc
call
jle
dec
mov
jns
xchg
shll
popa
adc
stc
and
ljmp
pop
sbb
dec
mov
outsb
add
jecxz
rorb
out
cmp
mov
cmp
shlb
rcrb
icebp
leave
sbb
pop
ja
addb
mov
mov
cmp
cld
lea
rcr
icebp
shl
stos
mov
out
loop
movsb
in
sub
fbstp
inc
dec
jno
xchg
movb
out
clc
mov
cmp
fwait
cmp
inc
jne
sbb
push
lds
addr16
ds
nop
stc
popf
adc
mov
shrl
ss
fnstsw
pop
push
adc
popf
mov
mov
sbb
cs
push
mov
icebp
xor
pop
decb
jp
aam
popf
daa
ret
cmp
inc
push
mov
cmpsl
into
fisubs
mov
mov
cmc
insl
dec
or
nop
lret
xchg
test
pop
aaa
imul
add
stos
xor
lods
inc
push
sub
mov
mov
mov
xchg
gs
pop
dec
lock
aam
fs
or
cli
outsl
loope
jne
sbb
dec
int
push
mov
inc
iret
jb
std
mov
and
sbb
nop
push
pop
icebp
pop
inc
cld
mov
gs
aas
inc
mov
sub
cmpsl
imul
aaa
dec
sub
hlt
iret
cmp
mov
lock
sub
test
jp
inc
or
popf
fcomps
pop
loop
mov
sahf
mov
sub
jo
in
mov
in
lds
cmp
adc
insb
inc
adc
sub
dec
mov
sarl
lea
cs
inc
dec
fdivl
shrl
pop
addb
popa
mov
push
sub
push
sub
hlt
pop
repnz
sub
pop
adc
lret
in
jl
shl
mov
enter
add
shlb
arpl
and
push
test
clc
mov
xor
cmpsb
jp
cmp
mov
aaa
sbb
repz
aaa
jmp
rol
xchg
jp
cmp
cli
pusha
es
xlat
gs
push
sti
pop
in
rcl
inc
mov
xchg
je
unpcklps
mov
cmpsb
aaa
adc
rorl
out
lods
enter
sbb
orb
xchg
mov
sbb
int
jecxz
fildll
test
ficoml
dec
movb
mov
shrl
pop
out
mov
stc
mov
fadds
mov
lret
mov
cs
sbb
outsb
xchg
insb
pusha
test
cmc
aaa
ret
sub
pinsrw
add
fcompl
dec
mov
fsubrl
add
jnp
push
int
mov
dec
scas
pop
leave
repz
cmp
shrb
mov
sbb
pop
push
shll
mov
pop
aaa
jmp
js
adc
out
xchg
add
incl
mov
inc
inc
adc
xchg
add
addr16
into
sbb
push
mov
push
mov
jl
adc
je
push
cwtl
pop
pushf
xor
fdivr
mov
add
xor
mov
jne
in
xchg
int3
push
mov
mov
iret
dec
ja
xchg
ljmp
push
push
lret
sub
jmp
adc
lods
fsubrl
jmp
in
dec
arpl
ficoms
pusha
lahf
mov
mov
xor
mov
sbb
adc
mov
ja
push
mov
cli
call
mulb
repz
aad
test
pop
outsl
adc
cltd
cwtl
xchg
mov
loope
mov
sti
sbb
xchg
ss
add
pop
inc
jne
icebp
xor
scas
test
lcall
push
xor
je
mov
adc
inc
leave
pop
inc
ret
pop
dec
xchg
cmp
or
pop
lcall
mov
mov
mov
iret
inc
jmp
pop
std
and
fwait
xchg
or
xchg
and
inc
pushf
dec
mov
mov
lcall
and
imul
xor
inc
xor
add
inc
shrb
popf
cs
xor
out
nop
pop
mov
push
push
stos
pop
jmp
mov
jmp
pop
push
push
popf
repnz
jecxz
cmp
lds
rcll
out
ljmp
fcoml
loop
add
xchg
insl
mov
cmpsb
mov
bound
or
mov
xchg
pop
cmp
inc
sub
stos
fnsave
inc
adc
cmp
test
lea
and
push
inc
das
or
fnsave
mov
test
dec
fidivs
orw
xchg
add
mov
movsl
mov
fnstcw
mov
and
adc
in
push
seto
pushf
dec
sub
bound
mov
in
mov
sbb
stos
and
xchg
jg
mov
mov
rorb
jae
sbb
lcall
out
outsb
call
sbb
outsl
repz
rcrl
sub
lret
rcrb
ljmp
ljmp
push
pop
ljmp
xchg
mov
add
dec
sub
jno
pop
pushf
mov
xor
jno
xor
or
cmp
add
sbb
outsb
jo
clc
dec
add
arpl
ret
cmp
fdiv
xchg
fistpll
jl
mov
lret
into
das
insb
out
arpl
push
ljmp
shrb
pop
inc
sbb
adc
lcall
ja
inc
mov
ja
test
iret
push
movsb
sub
push
lea
and
pop
xor
mov
or
sbb
sbb
scas
or
dec
sbb
ficompl
bnd
enter
aaa
arpl
dec
jge
out
mov
sbb
in
cmp
push
or
dec
ss
push
fs
adc
mov
jns
pop
mov
iret
aam
mov
out
mov
pop
cltd
jae
stos
pop
mov
sarb
movsb
and
push
mov
or
adc
mov
insb
sub
repz
out
idiv
in
in
hlt
int
xchg
xor
xor
aad
hlt
rclb
aad
sti
mov
xchg
xchg
les
int3
xchg
push
lahf
lock
mov
cld
jb
inc
adc
xor
xchg
ss
js
pop
cmp
repnz
adc
inc
movsl
mov
adc
pop
dec
aaa
mov
cmpsl
test
ret
ja
in
inc
sub
fidivl
xchg
cmp
jl
xchg
cmpsl
das
push
loope
inc
jecxz
jnp
in
jb
fdivrl
push
into
mov
les
pop
lods
movsb
out
out
mov
jbe
ret
or
call
fwait
dec
xor
lret
insb
shll
jae
cmpsb
lcall
cs
and
loopne
testb
sbb
sti
adc
dec
dec
ret
xor
or
cltd
fwait
xor
xchg
mov
jl
hlt
cmp
shl
or
jle
or
test
bound
out
sbb
cmpsb
addl
mov
add
dec
cwtl
pop
movsb
fsubrs
cmp
mov
movsl
xchg
push
scas
cmp
out
dec
shrb
fcmovnu
sub
sub
cmp
or
scas
jae
fdivrs
icebp
mov
das
in
fsub
rol
shl
or
mov
in
cltd
sbb
mov
mov
idivb
cs
movsl
cmpsb
mov
jae
add
jae
xchg
loop
fsubrs
ss
mov
jg
repz
jno
pop
mov
lret
jle
outsl
out
out
jecxz
cli
lock
cmp
dec
jp
sub
adc
mov
je
rcl
sub
rcrl
or
test
aam
jb
jo
sbb
jns
ret
jmp
sbb
jmp
jg
and
fidivl
stos
inc
push
arpl
jne
fimuls
sbb
ror
mov
repz
lock
test
test
and
sub
lods
repz
into
push
sarl
lahf
xor
in
jne
test
ss
stos
adc
in
into
dec
in
jle
mov
add
jbe
and
sub
mov
aaa
mov
jg
fiaddl
outsb
and
int
xor
roll
mov
inc
lods
std
andb
push
adc
and
pop
inc
arpl
sub
adcl
out
jno
fisubrs
sub
cmp
lea
sbb
xchg
out
sahf
push
mov
jo
xchg
pop
insb
mov
leave
leave
pushf
or
xor
nop
scas
inc
shr
rorb
sbb
pop
mov
sbb
mov
jmp
sbb
imul
xor
xor
pushf
fwait
dec
icebp
out
es
sub
rcll
push
xchg
cmp
loop
cmpsl
outsb
jae
cmove
xor
pusha
mov
jp
daa
or
out
sbb
lock
pop
jbe
mov
xchg
or
daa
in
jl
dec
pop
push
lret
movsl
mov
orb
jmp
mov
sahf
cmp
mov
sbb
pop
bound
mov
cltd
out
adc
adc
jo
or
icebp
xor
jbe
jl
test
cmp
out
shlb
jp
and
push
add
mov
andl
fwait
insl
xor
jae
and
andb
push
addr16
mov
push
xchg
xchg
push
xor
fdiv
add
in
enter
insl
repz
imul
and
mov
out
pushaw
lds
pop
clc
cmp
cli
pop
aad
cltd
int3
cmp
into
add
out
inc
insb
add
jo
pop
aad
inc
mov
xor
mov
sub
pop
test
lahf
out
and
cmpsb
mov
popa
or
mov
push
mov
jae
mov
jbe
jno
adc
repnz
test
in
cwtl
mov
cmpsb
test
push
cwtl
call
out
adc
jns
fisubs
xchg
sub
orb
and
mov
xchg
fwait
mov
fistpll
inc
jo
xchg
add
in
cltd
jl
inc
fdivrs
in
aam
jno
jno
mov
cmp
fsubp
push
lcall
mov
adc
mov
insl
jo
or
pop
sub
pop
dec
inc
pop
jle
call
ljmp
jb
cmpsl
pop
movsb
lea
outsl
dec
jecxz
inc
add
sbb
cwtl
add
adc
lret
adc
fsts
lock
test
test
ret
and
sub
cli
jbe
inc
or
jns
lcall
stc
push
or
gs
mov
pop
push
rcl
or
mov
dec
icebp
cld
push
psubd
dec
xor
iret
mov
adc
nop
ljmp
or
pop
ret
sbb
iret
jae
leave
je
les
or
lret
jo
ljmp
push
pop
xchg
sbb
jno
jbe
jp
shlb
cwtl
popf
mov
sub
addb
xlat
jno
mov
cli
inc
in
push
or
test
mov
inc
mov
inc
xor
dec
nop
push
mov
jecxz
outsl
inc
mov
jmp
cmpsl
sub
xorb
daa
popa
xchg
sub
add
cmpsb
or
cmp
cmp
adc
incl
roll
mov
dec
sub
or
jmp
stos
repnz
pop
hlt
hlt
fdivr
inc
inc
sub
sbb
sarb
lcall
cmp
out
addr16
or
xor
cmp
movsl
movsb
ss
cmc
inc
mov
aas
push
nop
outsl
lret
andb
dec
xchg
scas
mov
mov
adc
roll
push
sbb
mov
adc
xor
pusha
adc
rcrl
pop
addr16
insl
orl
aas
in
mov
rolb
lret
cld
iret
pop
pop
sbb
sbb
sbb
out
adc
icebp
int
add
int3
orl
adc
insl
pushf
jl
adc
sahf
pop
rcrb
scas
fucomi
pop
mov
and
imul
stos
mov
cli
pop
negl
scas
add
xlat
popf
inc
arpl
adc
mov
xor
into
scas
sub
sbb
adc
push
sbb
pusha
test
or
mov
int
test
and
push
pushf
dec
andb
insb
in
pop
arpl
xchg
subb
cmp
outsb
fnstsw
cmp
fs
lea
jle
inc
xor
xchg
icebp
mov
iret
clc
das
fisubs
shrl
xchg
hlt
add
dec
imul
dec
inc
adc
cmp
out
shlb
fwait
mov
fcmovbe
xor
dec
ret
mov
dec
or
mov
out
and
ds
pop
gs
fbld
rorb
mov
movb
clc
cli
inc
cmp
lret
mul
push
arpl
cld
push
adc
cmp
stos
xchg
rorl
sub
mov
lret
and
cltd
dec
push
push
repz
or
mov
test
mov
iret
cmpsl
xlat
adcl
shrl
add
add
and
cltd
test
and
lock
sbb
das
inc
or
or
insl
xchg
jbe
loope
pminsw
mov
lock
stos
add
cld
out
push
adc
cwtl
cs
cmp
cmp
rorl
cmp
je
mov
mov
fwait
pop
mov
nop
pop
sbb
xor
lret
lods
push
cmp
scas
mov
enter
jge
test
scas
into
fwait
in
roll
imul
mov
rclb
adc
mov
in
sbb
lret
xor
mov
lret
or
in
push
nop
fdivrp
ss
clc
add
and
into
shlb
test
jle
shll
sti
int3
out
adc
dec
mov
dec
insl
mov
and
jg
popf
inc
mov
add
pop
fstpt
and
jo
fbld
flds
cmp
call
add
xchg
pop
jmp
xchg
lds
leave
les
mov
pop
popa
dec
pushf
in
cmp
cwtl
je
std
jb
jle
popa
inc
es
aas
cmp
xor
rcrl
icebp
ret
adc
das
push
jmp
std
mov
mov
mov
cmovb
pop
in
add
jno
mov
enter
ret
js
push
xchg
insl
mov
mov
fcomps
addb
stc
or
stos
push
popa
mov
or
cvtdq2ps
clc
dec
lret
jecxz
push
ss
les
hlt
outsb
in
sub
dec
add
jb
loopne
pop
cwtl
mov
push
rcrl
or
add
insb
jo
hlt
xchg
imul
or
shll
scas
cld
test
mov
or
mov
pop
inc
xor
loope
push
xchg
cmp
mov
test
les
fsubr
jge
sub
jl
pop
or
lock
mov
movl
push
mov
dec
icebp
ljmp
shlb
mov
and
sahf
ja
ja
fstl
cmp
imul
loopne
and
cwtl
adc
es
icebp
call
push
js
out
cmp
mov
stos
mov
cmp
shlb
shl
inc
xchg
fldl
jo
shll
mov
or
movsl
insl
nop
scas
inc
fidivrl
push
dec
fucom
lret
test
mov
mov
sbb
shr
push
ficoms
adc
pop
xchg
out
dec
xchg
sub
ljmp
sbb
xor
xchg
pop
pop
push
arpl
ds
std
mov
sub
sbb
movsl
xor
rorl
mov
jb
jno
sub
popl
out
test
gs
ss
xor
out
sbb
std
popf
inc
gs
pusha
sti
arpl
sub
push
gs
mov
rol
mov
mov
les
mov
lahf
movsb
test
push
arpl
cmp
add
inc
xor
pop
rcrb
push
mov
pop
jmp
aaa
iret
inc
adc
imul
cltd
xchg
sbb
aaa
ret
aaa
call
dec
filds
adc
lcall
adc
lds
add
push
sub
popa
repz
mov
and
mov
mov
bound
leave
xor
cmp
ss
jl
inc
fisttpll
jo
cmc
roll
popf
sub
sbb
adc
mov
scas
sti
sub
das
jp
xchg
cltd
arpl
out
je
loope
repz
push
push
jp
out
xor
adc
idivb
popf
je
dec
in
out
ljmp
inc
push
rcrl
je
imul
int
call
jns
xchg
mov
inc
iret
push
stos
push
lods
dec
cmp
push
testl
sbb
lods
movsb
imul
mov
or
jb
inc
xchg
jl
mov
pushf
pop
xchg
pop
push
xchg
jbe
pop
stos
xchg
movsl
gs
cltd
aas
and
xor
fwait
add
sbb
outsb
adc
call
ret
and
inc
jmp
int
pop
movsl
aad
xchg
test
loop
fbld
sub
stos
cli
ror
lea
sub
lret
mov
dec
xchg
daa
sti
add
outsl
movsb
and
repz
inc
ss
xor
stc
fmull
or
add
test
mov
xor
dec
hlt
xor
pop
cmc
inc
ss
ret
mov
cmp
ret
adc
push
call
outsb
xorl
ss
clc
jp
sub
mov
imul
cmp
fsubs
inc
rcrl
adc
xor
inc
sub
loop
xor
into
mov
leave
std
xchg
dec
fistpll
cmp
jbe
subb
push
dec
fldt
sub
jo
decb
pop
arpl
adc
repnz
bound
push
inc
pop
cmpsb
or
dec
leave
cs
cmp
lods
pop
icebp
aaa
mov
mulb
push
idivb
sbb
and
into
ljmp
cmc
push
stos
sub
xchg
enter
xchg
dec
jl
cmpsb
cmc
testl
data16
fidivrl
xlat
xchg
inc
cmpsb
jge
xchg
je
pushf
xchg
and
out
rcrb
daa
sbb
fwait
push
jp
stos
add
in
jp
rcrl
decl
dec
sub
add
mov
lods
test
push
pop
cmpsl
inc
mov
dec
push
addr16
fidivs
push
popa
test
nop
jecxz
jmp
sti
daa
iret
int3
cli
gs
stos
or
fsubrl
dec
cmpsb
cmp
shrb
ret
cmp
push
lret
popf
xchg
das
mov
bound
call
imul
test
add
push
shrb
sbb
sub
mov
test
mov
bound
mov
xor
mov
sbb
ret
jle
mov
xor
inc
iret
test
mov
mov
dec
ljmp
pop
xchg
gs
jg
xchg
decb
divb
jmp
lcall
adc
add
mov
cmpsb
je
pop
icebp
daa
cmp
fbld
and
xchg
xor
popf
jmp
jge
jmp
adc
mov
inc
mov
mov
sahf
in
xchg
push
sbbl
jne
stc
loopne
adc
or
adc
jge
cld
pop
pop
loop
pop
lock
movsl
test
rorl
out
mov
addr16
cmp
or
xchg
fistl
loope
pushf
sub
xorb
mov
sarl
xor
mov
sbb
push
mov
inc
popf
add
inc
cmpsb
sub
idivb
cli
movsl
mov
dec
pop
push
lods
push
mov
push
or
add
inc
adc
inc
leave
ss
popa
out
fsubrl
out
fidivs
inc
dec
call
rol
or
mov
mov
scas
xor
movl
xchg
push
enter
push
lea
subb
aaa
add
jno
into
adc
loope
addr16
jge
push
or
pop
xchg
fnstenv
jg
mov
mov
fcmovne
ljmp
push
ja
incl
insb
cld
lret
in
scas
adcl
cmpsb
out
hlt
in
sub
xor
out
popa
icebp
jno
xlat
sbb
mov
cld
dec
orl
scas
adc
jo
mov
jno
and
mov
jne
js
xchg
outsl
aam
das
sub
cltd
mov
push
xor
loope
ret
push
fnstsw
sub
sub
xchg
add
sar
mov
repnz
adc
mov
xor
shlb
and
jb
jp
or
sbb
insb
pop
pushf
sbb
ret
xchg
and
sbb
shlb
sub
and
and
push
jbe
cmp
ds
dec
movsb
mov
int3
loop
mov
cmp
int
shll
andb
fcoml
bound
push
jne
cmp
pop
jle
lods
ss
jnp
loopne
mov
sub
lret
push
arpl
cmp
imul
pop
nop
rclb
xchg
xor
mov
cmp
mov
es
icebp
inc
inc
popa
xchg
dec
mov
mov
in
adc
jle
fstpt
inc
test
jnp
hlt
and
js
fs
mov
vmovntps
enter
mov
jb
gs
dec
sub
sbb
sub
xchg
testb
jl
dec
push
jns
arpl
test
xor
in
test
cwtl
mov
sbb
andl
adc
mov
jl
icebp
inc
dec
adc
mov
or
sbbb
mov
dec
xor
or
mov
xchg
aas
daa
mov
jb
flds
fsubs
ss
jmp
adc
cmp
icebp
xchg
andl
mov
aas
push
pop
and
cmp
clc
xchg
es
fwait
rorb
adc
lcall
pop
inc
insb
iret
addr16
mov
lods
in
push
pop
sub
mov
xchg
in
and
int
inc
in
fs
and
repnz
clc
and
dec
arpl
mov
movsb
enter
push
inc
mov
scas
push
ret
in
clc
add
out
rorl
ret
in
sbb
aaa
xchg
cmpb
cmp
lds
fsubl
inc
rolb
sub
std
sub
adc
adc
cmp
pop
mull
sti
add
loopne
shl
adc
aad
or
movsb
scas
or
jb
push
cmp
add
inc
cli
mov
cmpsl
jo
dec
jbe
mov
xchg
popf
int3
lock
jmp
cmc
jne
cmc
xchg
push
je
clc
ss
inc
adc
lret
add
cmp
js
fimuls
adc
jnp
rolb
loope
push
xchg
jmp
outsb
dec
push
xchg
shll
xor
mov
jmp
int3
cmp
pusha
lds
popa
scas
mov
rcll
subl
cmp
mov
jne
pop
jecxz
sbb
dec
lock
cmp
adc
mov
cmp
mov
xchg
ret
adc
icebp
sub
loop
sbb
sub
stos
jmp
mov
adc
addb
aas
mov
imul
jae
inc
pop
into
lods
inc
sbb
mov
cmp
sub
ljmp
pop
xor
jno
sbb
int3
test
lock
out
add
mov
arpl
arpl
fidivl
in
or
fstpt
sbb
cmpsl
aad
cld
in
or
xlat
and
dec
sti
push
xchg
int3
js
in
lret
jp
cs
imulb
jno
jno
jmp
daa
jo
lret
xor
sbb
rorl
pushf
push
cwtl
jb
in
rolb
push
cmp
dec
cmp
and
jecxz
dec
cmp
dec
movsl
add
pop
mov
cmp
push
push
inc
imul
fimull
jns
jecxz
outsl
sti
inc
lret
inc
sub
adc
aad
clc
in
cmp
int
mov
lcall
mov
push
fwait
push
adc
out
mov
pop
sbb
scas
jbe
je
push
bnd
lods
das
push
stos
lahf
mov
rorl
cld
es
fs
leave
cmpsb
stos
mov
repz
sbbb
mov
jge
and
nop
shrb
outsl
inc
adc
inc
jbe
mov
push
das
pop
dec
imul
dec
pop
xor
rcrl
pusha
and
mov
or
nop
add
mov
js
test
sub
mov
lahf
fimull
in
hlt
xor
xor
cmc
and
mov
es
movsl
mov
fnsave
fistl
cmp
sbb
inc
jnp
les
loopne
lret
pop
inc
out
hlt
xor
fwait
mov
adc
dec
je
or
sti
pop
out
xchg
fldcw
and
js
xor
push
cli
jg
stos
xchg
in
xor
aam
rcrl
fwait
mov
std
movsl
int
mov
pop
lods
fmull
popf
stos
mov
mov
xor
jbe
push
mov
adc
je
adc
lods
jns
mov
lahf
mov
in
sbb
push
lahf
mov
std
and
sub
test
ret
jmp
div
in
fmul
in
repz
insl
sbb
cltd
sbb
fnsave
cwtl
xlat
dec
or
adc
imulb
enter
inc
mov
jecxz
out
dec
rorb
dec
hlt
lea
pusha
push
sbb
test
pop
arpl
and
sub
call
je
inc
outsl
test
mov
mov
insl
outsb
ret
mov
and
xor
xor
adc
stos
std
pushf
in
xor
xor
sub
push
movsl
jl
push
les
sub
loop
sub
int3
arpl
stc
push
bound
pop
roll
adc
push
into
xchg
fmul
loopne
je
pmulhuw
ficoms
jae
sub
mov
inc
mov
lret
sbb
mov
mov
mov
hlt
fwait
addl
xchg
andl
push
mov
pop
push
xor
std
mov
shlb
cmc
add
mov
fdivrs
sub
nop
cmc
js
daa
jb
xchg
out
inc
cmc
xchg
add
imul
mov
negl
sub
pop
mov
rcll
aad
adc
ljmp
xlat
fs
xchg
mov
push
cs
adc
cmp
adc
jnp
mov
out
pop
fistps
fcomps
cmpsb
pop
add
out
xor
repnz
inc
xor
ja
and
jae
sub
movsb
xor
jns
lock
xorb
jne
mov
aaa
js
sub
cmp
xor
or
addr16
sub
icebp
mov
push
pop
pop
and
cmp
inc
outsl
cltd
rcrl
daa
inc
cmp
mov
adc
xchg
push
xchg
dec
nop
sahf
loop
jbe
jmp
or
or
push
test
es
cmp
fwait
gs
mov
cmp
mov
ret
jle
xchg
mov
dec
jge
mov
ret
iret
fimuls
pop
mov
outsl
ret
dec
movsb
add
test
cltd
xchg
adc
loope
loopne
and
into
rorl
in
call
or
sub
pop
rcrb
jge
movsl
cli
jp
xor
insl
mov
push
dec
daa
xchg
out
sbb
jae
movsl
or
rclb
data16
pop
xor
dec
out
jle
lret
cmpb
and
add
aaa
out
cmp
jae
add
push
cmc
insb
sub
inc
cs
lea
push
pushl
jns
jns
mov
pop
fnstsw
filds
mov
pop
rcll
push
ret
mov
sti
inc
push
push
add
out
push
inc
popa
jg
rolb
xchg
push
add
adc
xor
sahf
into
mov
sbb
ljmp
idiv
jbe
add
rcrb
cmp
dec
xor
aam
pop
shl
dec
add
mov
xchg
aaa
dec
xor
and
ficoml
pop
push
add
add
cs
shll
cmpsb
cwtl
rcll
push
jnp
aad
jbe
stos
cltd
incb
sbb
sarb
inc
cltd
mov
loopne
stc
and
ja
xchg
lret
cwtl
mov
cmpsl
add
gs
fistpl
popf
mov
adc
adc
in
xlat
cmp
repnz
ret
sbb
out
out
lods
cmp
pop
mov
and
fmul
pop
mov
add
mov
adcl
push
push
movsl
adc
nop
das
add
es
xor
jno
jl
lea
in
xlat
call
jle
fisttps
xchg
bound
sbb
popf
dec
add
dec
and
ret
mov
mov
push
enter
idivl
das
scas
dec
cli
jp
sbb
fdiv
into
or
shlb
gs
rorb
cwtl
mov
pusha
in
and
subb
das
push
hlt
jnp
in
cmp
lea
pop
sub
mov
push
sbb
fwait
jo
test
roll
fists
jecxz
out
push
inc
add
ljmp
or
repz
push
sub
subb
stc
cmp
insb
mov
in
mov
and
popf
dec
xorl
testl
xchg
push
pop
xchg
leave
dec
jmp
adc
sbb
shrb
mov
cmp
adc
outsb
loopne
je
push
xor
fdivrs
jmp
cmp
pop
movb
add
cmp
test
adc
push
mov
push
popaw
xchg
and
inc
fdiv
test
lcall
daa
adc
push
paddw
push
lret
xchg
mov
fsubrs
push
mov
jno
dec
or
cmpsb
out
rorl
cmc
lahf
mov
add
adc
mov
push
clc
xor
or
shlb
xor
scas
addr16
jecxz
mov
jle
push
aaa
in
inc
push
outsb
stos
aad
and
fcompl
scas
xchg
test
ret
sti
add
mov
push
xchg
aaa
push
cmp
adcl
xchg
ret
dec
popa
xchg
icebp
xor
outsb
cmpsb
sbb
mov
incl
cmpsl
cld
jnp
ljmp
insl
add
cmpsl
cltd
fists
iret
pop
push
mov
jp
je
test
jo
call
cmovno
push
cltd
pop
and
and
pop
fisubrl
inc
es
fidivrs
jo
inc
xor
or
and
vpextrw
lds
pop
sti
imul
cmp
mov
jmp
add
or
repnz
popa
mov
enter
dec
add
push
sahf
pop
or
pop
sbb
or
pop
sub
xchg
jo
ljmp
popf
je
shrl
mov
sbb
dec
mov
fidivrs
pop
out
mov
cld
lea
xorb
jmp
adc
arpl
in
sub
inc
es
add
insb
scas
and
pop
loope
mov
popf
or
aad
mov
jl
cli
mov
cli
lods
pop
jne
es
sub
jmp
addr16
cld
or
xor
ja
mov
sbb
mov
in
es
roll
sbb
dec
adc
in
shrl
cs
jl
out
bound
push
push
aaa
in
jns
jbe
repz
mov
xchg
adc
cs
jno
cmp
lea
mov
or
adc
add
jp
stos
sub
sbb
dec
push
clc
icebp
cmp
shlb
cld
sub
in
mov
mov
ficoml
xor
dec
mov
sbb
js
jle
in
mov
aam
call
sub
mov
cmpsb
sbb
push
cmp
lock
leave
pop
jg
andl
pushf
cmc
popf
sbb
hlt
lock
mov
jbe
xchg
dec
arpl
push
addr16
or
movsl
and
loopne
sub
dec
js
pop
jmp
movsl
inc
jle
hlt
pop
out
jp
or
pop
fwait
xor
xor
pop
stos
sbb
mov
icebp
enter
xchg
dec
subb
aam
stc
and
fdivs
test
and
mov
mov
xchg
mov
jnp
lret
rol
sbb
fsts
and
shl
nop
jecxz
loope
pop
ret
mov
pop
push
add
sub
add
mov
cmpsb
incl
or
dec
out
pop
cmpsb
xor
cmp
sbb
jne
mov
push
push
lahf
jb
inc
or
repz
addl
aas
dec
nop
push
xchg
in
aaa
into
dec
push
imul
sbb
sbbl
mov
loopne
test
xchg
xor
not
xor
jae
out
stos
inc
loopne
iret
leave
inc
gs
sub
pop
cwtl
out
pop
adc
mov
sub
jb
inc
and
jecxz
mov
pop
sbb
js
add
push
jae
jge
and
out
pusha
mov
shlb
das
cmp
data16
inc
iret
and
imul
je
insb
sahf
adc
lea
mov
jmp
std
out
xor
sarl
and
scas
sub
insb
lock
jnp
and
out
repz
cmp
mov
pop
xchg
or
cmp
push
fs
leave
mov
out
push
cli
or
dec
sub
xchg
popf
insl
add
xchg
sarl
xor
and
add
mov
icebp
pop
push
or
js
mov
pop
mov
ficomps
enter
xchg
daa
cltd
je
test
rclb
mov
cltd
scas
push
hlt
outsl
adc
repnz
dec
ret
sub
out
and
clc
insb
roll
jmp
and
pop
cltd
jmp
jp
or
insb
mov
jbe
insb
testb
lea
mov
cmp
and
lahf
add
inc
cli
or
je
sub
mov
cli
jecxz
fs
pop
jns
rcll
mov
sbb
adcl
add
add
cmpsb
and
sub
pop
mov
jmp
pop
and
push
mov
mov
pop
aad
mov
dec
cmp
outsl
out
cmp
or
stc
leave
pcmpgtw
rclb
jmp
cmpsb
cmp
mov
and
mov
adc
inc
lret
push
icebp
cmp
mov
xchg
pushf
push
ss
mov
inc
jge
mov
lret
jnp
jbe
sbb
es
mov
rclb
data16
loope
or
lret
adc
mov
push
pop
lock
aad
mov
dec
adc
dec
or
pop
jl
lahf
xor
leave
decb
dec
pushf
test
cwtl
lahf
sub
add
pusha
rolb
loope
jl
or
jle
mov
inc
pop
xor
push
xchg
jle
ljmp
mov
lret
push
mov
inc
jg
out
inc
scas
mov
imul
push
dec
pandn
jb
aaa
mov
or
mov
inc
mov
das
sub
mov
bound
divl
lcall
enter
pop
xchg
das
loop
repz
jge
jae
mov
add
sbbl
mov
adc
shll
inc
cld
int
pop
roll
clc
jb
mov
lock
sbb
js
ds
loop
mov
clc
icebp
divb
inc
inc
cmc
or
pop
out
pop
cmpsl
push
gs
xor
loop
arpl
and
push
xor
sbb
push
xor
dec
xchg
pop
lret
mov
ret
pop
adc
mov
lea
sbb
dec
out
pop
cld
jl
push
leave
or
xor
fldt
push
in
int
fucomp
scas
xchg
xor
inc
add
inc
cmpsl
mov
add
loope
out
or
jae
jle
pop
jle
pop
xor
push
cmp
jmp
push
xor
mov
movsb
mov
jb
cmp
sub
fsubrl
stos
inc
mov
mov
test
stos
xchg
lea
sub
in
fucomi
lods
add
test
xor
mov
call
in
mov
cmpsl
adc
aaa
pop
out
test
jbe
rclb
movsl
dec
push
fcomps
inc
adc
and
push
inc
into
dec
rclb
sub
imul
pusha
sub
inc
ret
fmul
std
imul
in
sbb
daa
jge
enter
mov
xor
sbb
test
dec
xchg
out
and
jmp
daa
filds
add
jg
lock
popf
out
inc
cmp
leave
test
mov
subb
stos
xchg
div
sub
popw
bound
repnz
mov
popa
sar
mov
lret
aaa
out
mov
push
sbb
ja
cmp
dec
or
adc
lock
cmpsb
jmp
pop
inc
dec
out
shrb
dec
lds
data16
pusha
bound
dec
push
mov
pop
subl
test
mov
cmp
filds
call
insl
cltd
fistpl
std
xor
sbb
xchg
push
out
shlb
xchg
icebp
and
das
xor
mov
out
mov
popa
int3
mov
push
mov
jle
mov
lods
xor
test
mov
cltd
mov
out
loop
mov
js
dec
rcl
pop
ffreep
xor
adc
cli
push
add
dec
xor
mov
out
adc
out
push
xor
mov
ffree
mov
test
ret
xchg
mov
aam
fisubrs
mov
mov
mov
ficomps
xchg
test
mov
lahf
jbe
mov
in
mov
lods
mov
orl
sti
int
into
xlat
lock
fimull
out
mov
fwait
push
cmp
sbbl
xor
sbb
scas
or
add
sbb
push
jne
pop
adc
pusha
lret
mov
mov
pop
and
les
cmp
mov
mov
jo
dec
in
int3
cwtl
iret
mov
mov
jle
mov
fs
cld
cmp
mov
adc
and
pop
jecxz
add
imulb
jb
sti
sub
lods
movsl
nop
push
dec
mov
pop
pop
jmp
fsubr
int
imul
int
mov
cli
dec
mov
pop
xor
scas
inc
mov
mov
xchg
bnd
sti
mov
adc
cmp
andb
cli
pop
mov
dec
cmp
dec
xor
xchg
jl
test
jbe
xor
xlat
inc
xlat
mov
lock
jb
push
mov
mov
adc
mov
arpl
iret
das
mov
sbb
xchg
mov
add
push
and
iret
cmp
push
fldln2
lea
mov
xor
push
pop
cmp
xorb
xor
push
addps
std
out
push
ret
jl
ror
cmp
xchg
dec
lea
pop
xlat
adc
jns
test
inc
jmp
repz
sub
cmpsl
lret
dec
test
daa
jle
adc
out
fistl
lahf
clc
sub
pop
insl
daa
inc
inc
jecxz
push
subb
push
aas
cltd
lcall
dec
mov
push
adc
rclb
filds
test
sub
insl
lcall
imul
mov
and
imul
push
add
outsb
insl
stc
pop
mov
ss
popf
mov
sbb
and
xchg
inc
aaa
mov
in
int3
in
mov
inc
fistpl
loope
adc
sub
dec
popf
sub
push
fwait
pop
mov
add
mov
adc
pop
repz
sub
out
sbb
pushf
lods
pop
xchg
pop
pop
pop
adc
fstpl
or
popf
or
in
ljmp
sbb
popa
mov
loopne
ss
mov
pop
jmp
fwait
sub
rcr
aas
cmp
mov
mov
cwtl
mov
lret
lods
mov
jns
adcb
sub
pop
jns
xor
push
pop
int
and
pop
pop
inc
cmp
cld
sti
push
repnz
subl
mov
arpl
mov
jns
sub
pop
sub
mov
data16
fnstsw
aam
int3
push
mov
test
mov
push
xchg
scas
imull
in
push
or
cmp
mov
lods
dec
inc
repnz
bound
outsb
lock
push
scas
movsl
std
ds
lahf
push
inc
add
xchg
mov
outsl
xchg
pop
insl
dec
push
cmc
dec
inc
or
fstpl
cmp
imul
in
scas
push
and
mov
adc
outsw
fisttpl
imul
cmp
mov
cmp
push
xchg
xchg
mov
icebp
mov
dec
xchg
int3
arpl
fisubl
pop
add
fstps
xchg
mov
ror
add
bound
loope
inc
dec
js
sub
jg
ss
es
xchg
jg
inc
xor
and
pop
cmp
aaa
je
jge
pushf
out
dec
aaa
sub
xor
stc
jne
cmp
loope
jg
ficoms
addb
repnz
pop
sub
fstps
cltd
xchg
es
dec
xchg
test
jmp
mov
lahf
or
or
mov
and
loope
cmc
aam
xorl
les
xchg
sub
sbb
repz
int3
jle
fcoml
cmp
mov
ljmp
xchg
bound
add
es
leave
test
iret
scas
loop
mov
mov
insl
xor
aad
jns
sbb
sahf
mov
mov
sbb
stc
push
clc
push
jne
inc
leave
lcall
into
inc
loope
fdivl
in
in
sahf
je
fisubrl
loop,pn
and
popa
xchg
adc
stc
out
loopne
xchg
xchg
in
orl
test
jg
xchg
aaa
cmp
jbe
pop
loopw
mov
cltd
inc
repz
rcll
xor
and
test
inc
call
cmpsl
into
sbb
push
sub
shrb
cmp
shll
aad
jmp
sarb
das
cmp
jne
test
push
jg
fsts
mov
cmp
sbb
pop
cmp
fnstenv
sub
fcoml
sub
movsl
push
push
push
add
pop
outsb
test
popa
xor
xchg
ret
ja
mov
xor
mov
pop
inc
adc
jae
push
iret
lock
cwtl
mov
dec
mov
or
sbb
lret
pop
and
hlt
pop
hlt
loope
inc
adc
and
int
icebp
mov
dec
mov
add
cmpsl
inc
lcall
sub
push
std
or
dec
jnp
cmpsl
inc
lea
mov
xchg
fsubl
xor
inc
iret
loop
dec
nop
out
fldenv
push
jne
pop
jp
pushf
mov
dec
je
call
cmp
testl
xchg
push
std
inc
mov
mov
mul
and
cwtl
popf
imul
adcb
shlb
shrl
dec
std
mov
popf
sbb
shl
mov
add
dec
pusha
ficompl
mov
or
fbld
in
or
jmp
lock
dec
sub
add
push
int
lea
jge
sarb
inc
int
mov
scas
sbb
add
push
cmpsl
stos
shl
push
sub
cmp
mov
mov
sub
into
jo
std
cld
jp
incb
inc
aaa
stos
mov
jle
pop
xchg
imull
leave
jl
out
subb
es
out
test
mull
adc
mov
insl
sub
cmp
or
insl
jo
sets
loopne
mov
push
fcompl
out
mov
sbb
lock
mov
imul
loopne
mov
jb
lret
in
in
shrl
out
pushf
xchg
xchg
or
cmp
arpl
or
pop
fwait
push
sub
inc
jnp
imul
pop
mov
xchg
mov
sarl
mov
cmp
mov
dec
xlat
arpl
push
and
scas
inc
jp
add
sbb
push
adc
cld
mov
leave
cmp
xor
lods
std
rcrb
pushw
sahf
or
mov
xchg
sub
sbb
insl
sti
jmp
jnp
lods
push
mov
lahf
out
repz
jae
and
cmp
xor
pop
mov
mov
decl
push
mov
inc
sbb
clc
pop
mov
dec
pop
or
lds
sbb
test
rcll
mov
inc
pop
loopne
mov
push
popf
inc
sub
stc
scas
scas
cmp
add
sub
xlat
stc
aad
adc
stos
mov
sbb
sub
push
mov
or
xchg
mov
mov
mov
pop
add
pop
sbb
push
push
ja
pop
gs
cltd
gs
mov
loopne
and
pop
iret
dec
xlat
ljmp
pop
inc
andl
inc
jbe
mov
mov
insb
movsb
andl
icebp
ds
or
cs
mov
sub
or
into
sub
pop
sbb
mov
sbb
add
and
inc
jno
js
fnstsw
xchg
nop
jo,pn
xchg
xor
ss
jbe
sahf
and
jo
shll
out
push
xchg
fldcw
jnp
call
in
xchg
and
sub
inc
mov
shlb
push
fs
mulb
cmc
jg
adc
not
xor
mov
stos
nop
xor
jmp
loopne
adc
outsl
cs
jns
cmp
popf
rcr
rorl
stc
ja
push
out
arpl
or
xor
pop
mov
in
gs
mov
sahf
dec
pop
push
mov
pop
aam
dec
in
mov
pop
ja
push
std
push
sub
out
sti
mov
push
lret
mov
cmp
arpl
xlat
add
mov
lds
scas
test
add
repnz
dec
cmp
or
imul
xor
mov
mov
pushf
test
jl
out
mov
pop
adc
rcll
sbb
sbb
mov
sub
js
icebp
cmpsb
jp
sbb
bound
jecxz
filds
inc
dec
stos
addl
or
int
int3
xor
jno
xchg
or
enter
stos
mov
ret
vpmuludq
and
icebp
lahf
dec
imul
movsb
imul
xchg
pop
push
imul
pop
and
dec
or
imul
lock
xchg
js
out
lock
or
rcll
fwait
pop
inc
jge
pusha
test
out
dec
ss
lcall
scas
jne
scas
lcall
lea
cli
mov
dec
dec
into
xchg
xor
sub
inc
inc
int3
jge
sbb
mov
dec
sti
cmp
cmc
pop
in
mov
cmp
fsubr
mov
sbb
jl
or
scas
push
stc
or
xchg
mov
scas
int3
xchg
daa
aaa
mov
and
or
mov
stos
cmp
push
aas
xchg
mov
jno
adc
hlt
mov
std
mov
xchg
je
out
rcrl
outsb
pop
fists
shr
fdivl
sbbb
pushl
pop
inc
adc
test
ja
fistpl
movsl
jg
sub
sahf
popa
pop
inc
fs
or
loopne
lea
movsl
cld
push
push
aam
pushf
or
mov
ret
xchg
mov
and
push
daa
bound
jbe
mov
das
out
add
call
lds
sub
ss
fsubrp
push
push
fimuls
lret
jg
and
push
push
add
lock
rcrb
mov
out
out
cmp
ret
dec
and
jne
imul
fisubrl
mov
mov
inc
ja
icebp
adcb
ds
mov
sbbl
pop
pushf
and
sbb
scas
sub
adc
inc
push
stos
sahf
push
jae
mov
orb
mov
sahf
push
inc
clc
jge
mov
mov
repnz
shl
dec
xchg
loopne
mov
xlat
jb
cmp
jge
push
dec
jmp
movb
xchg
lcall
int3
jl
loop
jecxz
pop
inc
outsb
sub
xchg
cwtl
adc
mov
cmp
and
fucomip
cs
daa
pusha
repnz
in
out
jle
or
xor
lret
jbe
and
push
jecxz
nop
mov
pop
std
sbb
xchg
pop
cs
in
cmc
mov
mov
sbb
sub
sti
enter
orl
mov
mov
push
mov
test
repz
mov
xor
js
repnz
push
fldt
pop
push
adc
mov
jl
push
push
inc
xchg
and
icebp
sbb
mov
fcoms
pop
add
xlat
xor
jmp
or
jno
cmpsl
out
sub
outsb
data16
xchg
ret
lea
xchg
adcl
dec
popa
daa
es
lret
fisubrs
clc
mov
sub
lock
ss
ret
push
adc
pop
cwtl
mov
sub
fucomip
mov
mov
and
fdivr
sahf
sbb
data16
fidivl
insb
jns
mov
mov
movsl
fsubs
xlat
cmp
out
push
mov
and
sbb
fstpt
xlat
lcall
pop
xchg
popf
push
in
inc
fimuls
mov
cs
daa
loope
or
dec
add
mov
aaa
outsl
stos
movsbl
mov
fmuls
repnz
or
outsl
cld
xor
jl
mov
pushf
jns
add
add
test
fstl
mov
mov
int
xchg
jo
xchg
adc
add
popf
fwait
inc
negb
testl
dec
inc
jp
stos
lds
icebp
ret
sarl
dec
shl
lock
push
mov
imul
cmpb
js
push
mov
xor
clc
dec
shll
in
inc
dec
pop
movsl
loopne
mov
leave
inc
data16
and
imul
mov
jbe
inc
pop
adc
stos
dec
push
add
xchg
cltd
sbb
adc
adc
scas
arpl
call
xor
jge
or
dec
inc
call
inc
jo
hlt
pop
and
jae
and
sub
in
xchg
rorl
and
mov
movsl
int3
cmpsb
pop
jne
inc
loop
jnp
lahf
ret
imul
int3
cmp
xchg
jp
cwtl
xor
or
fucomip
adc
adc
out
nop
cmpsb
cwtl
dec
sarb
aas
jle
fildl
mov
in
ds
mov
inc
pop
ret
mov
xchg
push
in
mov
mov
addb
int
in
out
ss
pushf
aam
ret
subb
mov
jae
mov
jl
rep
lock
insb
mov
adc
add
inc
inc
mov
or
pushf
cmp
cli
jp
aaa
sbb
jmp
xlat
add
dec
mov
pop
add
stc
out
in
pop
movsb
ret
add
cmp
jbe
idivb
sub
pop
test
addb
mov
cld
mov
push
shlb
sub
inc
icebp
pop
fdivrl
and
sbb
add
rcll
leave
fisttpll
call
mov
out
or
mov
shr
jnp
mov
stc
cmp
cmp
cmp
cs
sub
mull
jmp
mov
incb
mov
imul
jae
xchg
mov
mov
ljmp
loop
jl
mov
sub
jne
fisttpll
lcall
xor
out
sbb
xchg
adc
arpl
jg
js
hlt
jg
call
movsb
nop
pop
pop
pop
loop
push
sbb
out
mov
pushf
ret
or
insb
jno
shr
pop
dec
xor
mov
mov
test
xor
mov
outsl
cs
xor
js
mov
loop
push
mov
and
cmp
jbe
notb
cmp
lock
dec
lods
fstpt
mov
popa
ja
inc
pop
fildll
cmp
pop
call
push
xor
arpl
add
stc
bnd
pop
push
jg
dec
jmp
pusha
pop
or
mov
push
xorb
mov
jne
xchg
mov
xor
xchg
fwait
pop
test
jmp
sbb
or
lret
xchg
out
sti
mov
outsb
inc
sbb
push
popf
in
xor
fsubl
mov
jo
daa
lea
mov
push
scas
pop
int3
cmp
popf
cwtl
inc
jp
ficoml
aas
jnp
dec
mov
and
cmpsb
dec
sub
mov
into
lret
lea
andl
cmp
imul
mov
pop
out
cwtl
pop
fcmovnbe
sti
sahf
cmpb
and
push
loopne
in
and
and
push
cmp
xorl
inc
push
ret
sahf
into
push
fwait
sbb
imul
pop
into
negl
xchg
mov
jle
push
popf
stos
insl
out
adcb
cmc
xor
out
js
jl
gs
gs
xor
sbb
pop
lret
in
and
testb
push
repnz
test
add
inc
add
das
xchg
dec
in
lret
cmp
sub
icebp
fs
xlat
cmc
add
mov
dec
adc
or
jmp
fdivrl
jo
pusha
cs
lret
inc
in
andl
into
xor
dec
dec
add
sbb
iret
movsb
jl
pop
add
xor
ficoms
ds
pop
pop
leave
enter
xchg
pusha
cmp
push
sbb
and
ret
or
ja
push
fistpll
push
xor
mov
idivb
popf
icebp
xchg
arpl
cld
mov
sahf
and
inc
or
mov
pop
std
jns
nop
or
cli
ljmp
stc
nop
mov
jecxz
sub
push
inc
std
fmuls
mov
mov
loope
aas
mov
loop
data16
sub
jmp
scas
mov
arpl
jne
dec
iret
scas
test
xchg
call
clc
stc
clc
mov
pop
dec
je
out
cmpb
or
shl
jo
xchg
or
lea
outsl
inc
cmp
sub
ljmp
out
inc
insl
push
fwait
mov
cld
scas
popf
and
aaa
clc
mov
push
cwtl
rolb
mov
hlt
ss
and
or
push
pop
es
xchg
and
out
sti
mov
into
in
cmp
mov
les
fwait
mov
jle
hlt
inc
mov
inc
adcl
pop
or
mov
jp
mov
in
inc
stc
shrb
ret
jne
insb
scas
aaa
xchg
jbe
hlt
mov
add
insl
mov
jge
les
jl
sub
div
bound
negl
ljmp
in
mov
mov
mov
dec
sub
push
dec
mov
xchg
xchg
in
aaa
movntq
popf
outsl
nop
cmpl
js
inc
push
lret
or
xchg
jmp
mov
arpl
je
mov
cmp
cltd
sarl
fs
or
mov
clc
ret
cmpsl
inc
lret
arpl
imul
scas
mov
push
leave
hlt
cmpsb
push
push
in
inc
pop
ds
push
sbb
and
mov
push
mov
adc
pop
rcll
sub
popa
dec
cmp
dec
xrelease
push
sub
and
adc
aas
inc
lock
push
insb
cmp
call
jp
stos
add
mov
xor
arpl
xor
mov
jbe
pop
popf
push
jg
lods
insb
leave
jo
push
cltd
int
test
movsb
ret
stos
pusha
push
int
or
xchg
test
xor
mov
ja
xchg
push
xor
pop
loopne
dec
xlat
dec
adc
lret
imul
push
popa
cmp
roll
int
data16
mov
push
push
rorl
dec
cli
lds
inc
sbb
fdivr
pop
xor
movsl
mov
sbb
xchg
in
loop
or
aaa
je
insb
andb
jne
icebp
aas
andb
stos
sub
sbb
dec
jg
xor
cmp
cltd
mov
pop
push
pop
pop
add
iret
and
mov
sbb
scas
pop
push
mov
je
jle
repnz
sbb
test
scas
mov
mov
lea
pop
enter
add
jo
sbb
and
mov
aam
js
ja
mov
push
pop
lahf
out
lock
aam
pusha
addr16
mov
rorl
or
insl
lcall
and
ljmp
jb,pt
inc
or
mov
stc
xchg
cmpsb
or
mov
repnz
push
dec
xchg
inc
or
jg
and
pop
sti
xor
adc
sub
inc
mov
xor
jmp
mov
xor
push
jnp
jmp
lea
mov
mov
adc
cmp
pop
test
xchg
or
mov
sub
push
ffreep
pop
sub
add
addr16
repnz
clc
flds
stos
inc
pop
out
jb
dec
cmp
sbb
daa
mov
pop
mov
rcrb
jge
aaa
cmp
jnp
sbb
sbb
shrl
repnz
xor
cwtl
mov
xchg
pop
dec
test
cmp
enter
cli
add
stos
outsb
je
xor
xchg
mov
inc
mov
sbb
aam
mov
and
cmpsl
mov
fstps
sub
ss
arpl
mov
insb
adc
and
ret
mov
mov
cltd
mov
sub
adc
rorl
ja
cmp
adc
mov
sahf
arpl
cmp
or
inc
or
and
xlat
lcall
mull
popf
xchg
xor
xorl
push
andb
jb
inc
imul
insl
cmova
movl
cmp
sbb
pop
jmp
nop
sub
icebp
bound
rcl
arpl
add
lret
push
add
sub
adc
sbb
mov
aam
mov
jecxz
or
in
mov
cmpsl
enter
mov
adc
sbb
mov
pop
repnz
cmpsb
or
dec
cwtl
add
inc
addr16
ljmp
in
dec
xor
mov
sbb
mov
data16
cmpsl
dec
or
popf
push
jle
add
jmp
pop
scas
daa
mov
test
bound
inc
or
repz
addr16
jecxz
inc
adc
xor
jle
mov
xchg
insl
imul
cmc
and
mov
mov
das
or
or
and
add
test
add
mov
pop
inc
rorl
pop
sbb
dec
push
push
xlat
in
adc
je
mov
jnp
mov
insl
lods
xchg
shrl
cli
inc
xchg
sub
imul
pop
movb
cmp
pop
rorl
and
insb
or
loop
or
add
ret
add
sbb
repnz
inc
xchg
test
int
js
xor
aam
adc
fstpl
mov
mov
fs
dec
cmp
popa
pop
sub
faddl
add
lahf
push
xchg
lods
lock
fwait
and
sub
in
lea
xor
push
jecxz
sub
inc
out
iret
clc
imul
nop
push
xchg
inc
test
ljmp
incb
mov
sub
jle
lcall
inc
push
push
push
lahf
clc
lahf
mov
jbe
mov
jno
daa
push
pop
clc
ds
clc
daa
xchg
shl
inc
fnsave
jno
mov
jbe
push
insl
mov
in
jge
jo
mov
insb
jb
std
push
push
sti
push
cltd
mov
shl
lcall
pop
popf
mov
popf
rolb
mov
mov
adc
lock
adcb
adc
data16
shl
push
dec
xor
gs
repnz
inc
mov
xor
push
ss
and
ds
xor
add
sbb
loop
aaa
repnz
adc
repnz
aam
xchg
push
popa
rolb
call
jmp
test
lcall
cmp
mov
fwait
xchg
adc
enter
out
add
or
stc
lods
xchg
cmc
jecxz
lret
sbb
jp
xchg
jl
adc
or
js
leave
cpuid
xchg
lods
jno
xchg
mov
xchg
mov
jns
mov
sarl
popl
sbb
adc
adc
arpl
shrl
xchg
xor
jne
pop
mov
mov
dec
fdiv
cmp
and
test
xchg
xor
cltd
lcall
add
in
jmp
or
cmp
jle
pushf
out
dec
imul
neg
ret
mov
dec
lea
in
outsb
sub
mov
popf
adc
fs
jne
and
xor
mov
mov
and
stc
test
adc
sub
xchg
leave
cmp
js
loope
or
dec
sub
imul
pop
mov
fsub
leave
adc
push
and
out
jmp
jp
daa
imul
into
outsl
divb
dec
inc
cwtl
jo
lret
and
push
hlt
shld
add
mov
add
sbb
fisttps
jp
xchg
je
stc
insl
sbb
mov
jmp
xchg
fisttpl
aas
xor
xlat
jb
iret
repnz
xchg
lahf
gs
insl
adc
idiv
sahf
test
dec
xor
jno
mov
cmp
sbb
ss
sub
jne
jae
adcl
xchg
jle
loopne
add
xchg
rcrb
ja
sub
scas
lods
arpl
push
xor
pop
icebp
mov
mov
daa
andb
mov
sub
mov
mov
mov
into
push
inc
sahf
popa
mov
mov
adc
stc
mov
lods
and
loop
add
jmp
stos
push
add
jmp
and
mov
sahf
push
jbe
test
dec
rcll
je
stos
inc
inc
aaa
cmp
jae
mov
fs
es
pop
fs
add
fmuls
cmp
je
xchg
out
mov
test
mov
in
out
mov
pop
inc
and
mov
loope
fadds
lret
lahf
cmp
outsl
int3
xor
dec
xchg
and
sub
ds
nop
in
js
jle
ds
pop
pop
jmp
xchg
adcb
dec
int3
mov
ficompl
repz
cmp
les
adc
inc
stos
ja
and
add
sub
aad
clc
dec
inc
fidivl
repz
repnz
sbb
cmpsb
cmpsb
jo
loope
push
jbe
inc
std
xchg
push
dec
lock
mov
mov
lcall
orl
push
jle
adc
mov
dec
mov
xor
add
dec
filds
sbb
imul
mov
cli
jb
adc
mov
add
mov
lahf
lds
es
inc
xchg
retw
popf
sub
popf
fsubl
push
fs
push
cmp
pop
xchg
xchg
andl
cwtl
and
popa
shlb
mov
push
or
cmp
mov
or
xchg
aad
stos
push
js
and
ret
divb
or
inc
adc
xor
sti
push
cli
cmp
out
stos
push
jb
xor
iret
mov
or
mov
loope
pop
push
pop
mov
enter
out
js
or
xor
mov
popa
xor
out
sbb
add
repz
cmp
push
pop
cltd
ret
or
dec
sti
aam
lahf
in
scas
push
push
jne
insb
lea
sti
push
mov
xchg
inc
fs
cltd
sub
sub
repnz
addr16
in
outsl
adc
ret
xor
movsb
sti
rorl
dec
sub
xchg
push
adc
mov
imulb
or
lea
clc
bound
hlt
fucom
xor
lret
ret
pop
out
clc
dec
bound
xor
iret
lods
pop
xchg
adcl
pop
mov
fisubs
xlat
dec
or
mov
lahf
shll
aad
sbb
inc
sub
pop
cmp
fadds
sbb
mov
pop
mov
jno
call
or
inc
imul
ja
inc
loopne
jmp
imul
outsb
in
add
cmp
in
dec
and
scas
cmp
jmp
inc
sub
dec
xchg
enter
je
and
cltd
adc
ds
scas
ja
add
xor
pop
lret
xchg
mov
cmp
repz
jbe
mov
cmp
fadds
pop
popa
adc
mov
or
out
sub
pop
cld
jmp
mov
xor
push
mov
mov
xor
je
inc
mov
mov
in
mov
lods
or
push
xchg
lods
vxorps
mov
leave
jnp
push
or
int
lret
mov
push
test
or
lahf
in
bound
lret
enter
mov
cmp
bound
scas
and
cmp
ja
lcall
ds
icebp
je
repz
push
ljmp
adc
jno
or
int3
inc
imul
lret
sub
adc
mov
mov
hlt
sarl
movsl
jmp
sub
fdiv
jecxz
sbb
ret
loop
sub
xor
mov
push
pop
mov
inc
dec
out
out
xor
jle
xchg
ja
gs
loop
jg
inc
and
in
mov
sbb
icebp
inc
fwait
aad
sbb
out
ja
xchg
push
lock
cmp
nop
imul
ror
pop
push
jle
sahf
lret
and
pop
in
arpl
xor
sbb
iret
loope
jns
or
sbb
xchg
test
mov
mov
je
and
dec
cwtl
icebp
push
mov
ret
mov
mov
scas
pop
mov
imul
les
imul
sbb
daa
mov
int3
or
sub
pop
mov
jns
jl
rorl
cmpsb
push
shrb
or
leave
loope
xor
fisttpl
mov
mov
push
mov
dec
push
adc
jecxz
and
bnd
xlat
xor
stos
xlat
push
stos
aas
in
data16
addl
lea
pop
mov
pop
test
mov
jae
sahf
out
jl
xchg
nop
and
xor
mov
xchg
jecxz
sub
ret
sti
mov
sub
fistps
ss
fs
xor
mov
ret
cmp
movsl
dec
test
nop
mov
lcall
stos
fcmovne
lret
outsl
inc
out
daa
les
pop
mov
popa
sahf
notl
daa
dec
cs
mov
and
add
or
out
push
jo
enter
aam
pcmpgtw
dec
mov
or
pop
mov
les
out
into
cmp
jae
pop
pop
pop
mov
jae
push
cmc
mov
cmp
cmp
inc
test
jl
movsl
outsl
mov
push
movsb
xchg
out
pop
mov
insb
pop
sbbb
mov
mov
out
push
lret
and
or
into
in
mov
and
inc
pop
adc
or
orl
ret
scas
repz
add
mov
push
pop
lret
sahf
sub
lock
fwait
imul
iret
movsb
lods
aam
test
cmc
mov
popf
jne
adc
lcall
in
cmpsb
push
lahf
test
add
mov
add
jl
stos
out
add
lahf
or
mov
cwtl
test
inc
lods
xorl
popf
pop
sub
outsl
xchg
call
outsb
repnz
sbb
mov
push
mov
add
lcall
pop
cmp
jmp
pop
andl
roll
add
xchg
push
aas
lods
jge
movl
cmpsl
mov
mov
in
dec
faddl
push
bound
int3
int
ljmp
jb
repz
pop
pusha
mov
sbb
mov
out
in
inc
cmp
mov
jns
inc
rclb
nop
sbbb
int
dec
push
ja
xor
push
cmp
push
out
inc
or
icebp
push
jp
dec
iret
dec
mov
jecxz
data16
shll
outsl
inc
call
out
popf
lock
aaa
xor
add
lahf
test
add
xlat
xor
inc
adc
sbb
inc
xor
xchg
pop
not
imul
out
push
test
pop
aad
add
add
mov
adc
pop
fisubs
mov
aaa
adc
into
lods
js
jnp
jmp
movsl
xchg
aaa
dec
sbb
rcrb
aam
shlb
adc
xor
pop
mov
xchg
xchg
xchg
xchg
mov
jnp
inc
aad
mov
mov
aad
jb
ljmp
or
pop
cmc
call
das
cs
mov
inc
inc
out
and
xor
adc
fcmovu
inc
xor
orb
hlt
or
movsl
jge
test
cld
jg
int3
and
outsb
pusha
inc
fdivl
mov
in
xchg
mov
adc
sub
test
outsl
push
idivl
ror
aad
aad
mov
roll
daa
mov
lahf
dec
inc
jo
ret
lods
add
es
gs
mov
fwait
daa
push
std
arpl
sahf
push
push
jle
cld
lds
outsb
xorb
test
mov
in
xor
dec
mov
inc
fwait
loop
cmc
test
fisttps
fadds
fwait
int
add
and
incl
not
adc
or
xor
sahf
insl
fwait
push
jne
pop
and
test
js
mov
cltd
lret
xchg
adcb
lock
mov
dec
jne
mov
lcall
mov
in
repz
scas
cmp
cmp
lea
or
lds
daa
cmp
dec
mov
mov
push
into
pop
inc
or
push
out
dec
add
sysexit
sbb
jns
and
adc
fwait
push
mov
xchg
cmc
push
or
ret
movsl
push
mov
andnps
shr
pop
imul
sub
mov
xor
sti
jne
xor
aam
lods
scas
pop
jb
xchg
cmpb
stos
mov
push
cmp
daa
adc
push
dec
push
mov
orl
push
mov
rol
shll
or
mov
ss
je
xor
add
mov
insl
pop
xchg
fistl
aas
push
aam
lock
mov
xor
pop
notb
dec
push
mov
dec
xor
xchg
dec
dec
aas
adc
sub
xor
bound
xchg
lret
aad
jne
fptan
jno
data16
sbb
nop
mov
lods
fnsave
pop
cmp
stos
pop
jecxz
std
ds
fisttpll
mov
adc
dec
fwait
cmp
insb
sbbb
adc
sbb
in
sub
dec
adc
jmp
ss
shrl
xor
dec
mov
mov
js
mov
push
mov
xor
push
jae
xchg
sahf
add
push
jno
insl
orl
lret
pop
adc
lahf
std
jo
jp
cmpxchg
cltd
adc
das
pop
ffreep
dec
mov
or
inc
or
pop
or
hlt
js
pop
xchg
popf
lods
push
mov
in
mov
andb
push
xchg
push
roll
pop
cmp
dec
scas
and
jno
push
xchg
push
mov
repnz
mov
std
in
push
add
lods
fstl
daa
mov
stc
pop
repnz
xchg
push
adc
out
popa
push
jno
popa
std
mov
test
ljmp
xor
bnd
mov
xchg
sub
sub
in
ljmp
pop
xchg
test
loop
shrb
out
adc
and
add
jge
mov
call
mov
cmp
nop
sub
lock
cld
sub
test
adc
fdivr
mov
or
inc
dec
push
and
rcl
mov
cmp
flds
dec
icebp
aad
sbb
daa
or
push
add
sub
push
lds
sbb
icebp
dec
xor
inc
add
xchg
cmp
or
push
or
hlt
rorb
jae
ds
aas
arpl
cs
cmp
mov
movsl
cwtl
or
mov
rcll
test
pop
aas
cmp
mov
push
cmp
jg
push
jno
incl
fisttps
push
inc
icebp
fst
jmp
enter
inc
cmpsl
or
and
xchg
adc
xchg
xor
or
aam
xor
lds
xor
inc
std
pop
inc
jno
ror
lahf
mov
inc
aas
or
flds
push
cs
xor
cmp
pop
dec
mov
jg
ss
fbld
push
jge
jl
repz
jecxz
shr
aad
xchg
xor
lock
xchg
mov
cld
fldt
cmp
fisttpll
dec
push
or
icebp
stos
fs
cmp
or
enter
or
mov
out
sub
ss
sub
sub
ds
add
dec
repz
jl
pop
pop
mov
sub
pop
adcl
subps
out
xor
mov
inc
mov
es
push
push
stos
pusha
mov
mov
jno
pop
lcall
add
js
fsubrl
cmp
insl
ds
subl
out
out
sti
mov
mov
cmp
lock
testb
mov
outsb
movsb
add
pop
pusha
mov
andl
push
sahf
mov
jns
stc
pop
andb
inc
push
je
rcr
pop
or
arpl
xorb
push
cmc
ret
mov
push
cmpsb
cltd
or
pop
sbb
sbb
negb
repnz
into
ja
pop
fsubrs
lcall
jb
push
clc
mov
cmpsl
scas
int
sbb
xchg
aad
inc
sub
or
sbb
mov
mov
jae
jbe
imul
mov
lea
bound
shrb
loope
pop
dec
ja
fucom
insb
xor
inc
mov
out
push
lahf
test
leave
sub
dec
sbb
test
rcrb
in
fcmovbe
dec
or
push
dec
mov
push
popf
rep
or
cmpsl
cmova
inc
lds
mov
test
push
mov
cmc
aam
stc
jns
and
inc
sub
xchg
mov
add
fwait
mov
jge
cltd
in
mov
pushf
loope
loopne
aas
mov
imulb
ds
mov
cmc
xchg
in
daa
enter
push
xor
sti
jg
cltd
adc
add
push
push
in
push
dec
in
or
xor
scas
stos
in
mov
and
lods
sub
out
inc
lret
jo
idiv
negb
xor
push
jl
xchg
sbb
out
mov
test
lcall
push
gs
shlb
dec
das
outsb
jg
jl
rolb
inc
addl
sub
mov
push
and
test
aaa
add
repz
push
push
cmpsl
adcb
mov
bound
shlb
sbb
and
dec
mov
bound
cltd
xor
adc
add
mov
jae
fstp
inc
cmp
dec
pop
sbb
or
mov
xor
xlat
aaa
jmp
mov
insb
cmp
hlt
inc
xor
insb
in
inc
aad
jb
arpl
mov
xorl
test
cmpsl
adc
xor
and
cmp
lret
jge
pop
dec
or
imul
out
jmpw
je
lcall
push
aas
cmp
sub
push
pop
or
adc
or
test
lods
mov
sbb
icebp
dec
inc
inc
cltd
jle
leave
fdiv
int3
jo
add
mov
pop
dec
or
sarl
push
dec
stos
push
jl
outsl
cmp
pusha
inc
adcb
test
call
cmp
xchg
xchg
cmpsb
iret
push
and
es
xchg
iret
leave
cmp
jl
dec
mov
lcall
test
cs
cli
rolb
push
cmp
cmpsb
aad
pop
sub
jo
test
addr16
inc
xchg
jmp
jmp
data16
and
out
or
sahf
dec
cmc
popa
in
push
jp
cltd
push
xor
mov
aas
xchg
stc
push
lock
sahf
int3
nop
enter
xchg
mov
dec
jno
adc
push
std
jge
mov
mov
divl
std
jne
outsl
and
shrl
add
pop
mov
add
rcrl
mov
mov
push
insb
mov
lret
fwait
jmp
add
dec
or
dec
push
jb
into
push
fbstp
enter
sbb
in
jl
call
loop
mov
es
or
mov
leave
rorl
add
xor
inc
aas
jle
imul
outsb
push
mov
popf
pop
push
jae
fisubl
push
and
mov
or
popf
inc
daa
test
dec
push
fiadds
aad
bound
xchg
jmp
aam
icebp
stos
lcall
or
stc
sub
outsb
in
adc
xor
aaa
dec
mov
and
push
mov
es
mov
cmp
mov
mov
sti
fmuls
outsl
xorb
faddl
mov
lahf
fwait
jecxz
pop
ljmp
shrl
cltd
mov
jmp
jb
aad
jnp
push
repnz
push
in
shll
xchg
push
loopne
lahf
xor
insl
or
cmp
call
fstps
cmpsb
sub
inc
jbe
jp
mov
mov
sub
cwtl
pop
fdivs
test
jae
jg
push
out
popf
int
lods
fndisi(8087
pop
mov
mov
inc
aas
out
inc
pop
mov
push
mov
jb
divl
stc
loopne
jp
gs
xchg
mov
int3
test
mov
mov
stos
push
and
pop
adc
or
cmp
icebp
cmp
inc
mov
mov
xchg
xchg
rcrl
popa
lahf
pop
lea
in
lods
ds
pop
sti
rclb
xchg
jle
push
xchg
scas
movsl
inc
jp
stos
cmp
push
or
mov
xor
mov
test
int
ja
xchg
cs
inc
sbb
mov
sbb
loope
std
mov
dec
js
sub
add
dec
add
leave
add
cs
xchg
xchg
inc
mov
sbb
or
stos
les
out
push
inc
or
ret
push
push
paddb
mov
mov
adc
and
cmp
scas
enter
ret
or
sahf
sub
mov
adc
mov
jae
lds
push
cs
lret
and
sub
mov
test
ret
gs
jecxz
scas
xchg
enter
sahf
add
inc
cmpsb
sahf
mov
cmp
lret
mov
or
and
mov
outsl
pop
xchg
push
xchg
in
shl
cltd
cld
jno
xlat
insl
sbb
sbb
push
mov
cs
sbb
xchg
popf
test
stos
cmp
push
push
out
push
div
xlat
sub
jl
rcrb
jnp
push
outsb
xor
xchg
inc
sub
cwtl
pop
loop
gs
xchg
sti
imul
adc
test
cmp
mov
shlb
fidivs
mov
loope
mov
fwait
xorl
cmp
xor
jne
xor
test
xchg
xor
sbb
mov
inc
mov
mov
cli
aad
xlat
ss
aam
out
sub
ss
sbb
cltd
xchg
mov
pop
inc
cmp
test
insl
mov
jb
mov
iret
mov
data16
mov
mov
sub
mov
loopne
push
dec
push
add
and
daa
mov
call
lods
fidivrl
dec
sub
inc
rcr
daa
push
mov
into
cmp
mov
mov
dec
cs
mov
sbb
xchg
mov
ret
fst
mov
and
test
and
arpl
mov
xchg
pop
add
popa
stos
fimuls
loop
add
dec
in
pop
repz
popa
push
fdivl
jg
xor
popf
sbb
fidivrl
daa
xor
test
mov
mov
daa
or
test
divps
lock
cmp
nop
cmp
xorb
jbe
sbb
mov
insl
and
mov
mov
sbb
jb
lahf
or
repnz
xor
movsl
cmp
jne
inc
mov
pop
mov
xchg
fcoml
jmp
inc
xchg
popa
push
imul
xchg
cli
pop
push
out
mov
push
imul
ja
jge
sub
sahf
xor
dec
movsl
dec
add
fidivs
aam
mov
test
push
daa
arpl
in
mov
cmpsl
fs
ss
hlt
stos
xor
lock
iret
mov
pop
dec
dec
movl
bound
inc
or
lods
stos
cli
dec
jmp
fcmove
iret
mov
dec
pop
sahf
rcll
fistpl
sti
inc
mov
out
shrd
clc
repz
cmp
mov
adc
dec
stos
mov
aas
cld
jne
icebp
mov
andb
sbb
cmp
sub
adc
or
xor
sub
push
ret
in
cmpb
push
xor
mov
and
jb
dec
sub
icebp
mov
sbb
xor
inc
jg
or
jbe
fnclex
rol
add
aas
cmp
aaa
jne
pusha
ss
or
pushf
insl
js
xchg
adc
std
gs
movsl
mov
shl
jb
push
arpl
cmp
mov
enter
cmp
fbld
mov
hlt
xor
adc
ljmp
jnp
hlt
repnz
loope
pop
adc
or
pop
cmpsl
push
in
cld
add
lcall
jnp
mov
jo
ret
mov
cltd
fwait
test
dec
out
pop
push
sub
sahf
sub
add
stos
push
lea
mov
sbb
xchg
dec
daa
testl
lcall
sbb
scas
jnp
push
sub
out
mov
adc
shlb
jge
outsl
test
or
popf
arpl
cmpsb
nop
or
xor
mov
jl
das
mov
pop
jge
and
movsb
or
push
sbb
push
loopne
cltd
mov
faddl
pop
sbb
loopne
add
pop
cli
fs
cmp
xor
mov
sbb
xchg
fadds
mov
inc
cmpsb
inc
mov
push
push
ljmp
mov
adc
pop
sub
sbb
adc
xorl
out
push
test
push
outsb
mov
mov
add
fwait
add
cli
xchg
inc
jmp
mov
fwait
cmp
add
hlt
mov
jecxz
xor
or
gs
leave
bound
pop
cmp
sbb
loop
scas
fwait
out
xchg
into
adc
in
sbb
mov
lret
insb
leave
inc
stos
cwtl
jbe
sbb
dec
jle
subb
rep
mov
jae
jge
ljmp
dec
dec
dec
mov
pusha
push
sbb
inc
addl
rol
loope
jg
ficompl
clc
mov
int
push
xchg
mov
sarl
adc
or
jmp
sbb
mov
cmp
or
jae
cmc
out
out
cltd
pop
imul
xchg
xchg
imul
outsb
lcall
sti
test
lret
scas
aas
movsl
in
cmp
les
xchg
aaa
xchg
lahf
stos
adc
enter
pop
or
lods
pop
xchg
test
sbbl
cmc
cld
dec
mov
sbb
stos
or
sar
mov
jns
ds
jg
sub
lcall
inc
mov
mov
inc
push
add
pop
cltd
xchg
or
cltd
mov
cmpsl
sbb
arpl
out
jae
pop
insl
mov
jae
push
sbb
mov
or
pop
inc
int
sub
adc
aaa
addb
push
addr16
sbbb
mov
cmp
cwtl
lcall
jnp
add
in
adc
and
aam
loopne
rorl
pop
fimull
xor
and
lock
jbe
stos
ds
mov
cmp
rol
orb
shlb
adc
lahf
mov
in
sub
jno
loope
pop
ret
inc
sbb
cmpl
cmc
outsl
es
dec
fsubs
outsb
or
fst
inc
orb
inc
sub
mov
sub
xor
jo
into
sarl
das
inc
fcmovnb
adc
jg
xchg
add
or
test
jns
pop
pop
cwtl
xor
mov
shrb
mov
cld
add
rcrb
and
and
pop
mov
inc
cmp
adc
addr16
xchg
mov
out
mov
xor
xor
pop
jbe
in
scas
push
insb
imul
aaa
lods
add
fcmove
popf
fcoml
fldl
cmp
pop
cmc
xchg
sahf
in
xor
xchg
adc
or
pop
cmp
and
push
push
or
lahf
leave
mov
sub
outsb
push
and
ja
call
push
jle
sbb
test
xor
xchg
push
scas
in
popa
jecxz
inc
into
rorl
fadds
loope
fdivl
jge
rcr
mov
mov
cmp
arpl
push
dec
adc
sbb
xor
sub
mov
lea
pushf
scas
popa
push
inc
push
nop
mov
int3
jb
insb
inc
rorb
fnsave
stc
pop
jge
adc
inc
jl
and
loope
repnz
sub
cltd
inc
hlt
sbb
daa
jo
pop
sub
push
or
add
inc
mov
inc
cmp
int3
movsl
xchg
clc
sbb
push
mov
aaa
fldenv
popl
aad
lock
dec
inc
mov
and
xchg
cmpsl
mov
push
pop
cmp
in
ss
into
sahf
sub
mov
xchg
jmp
aas
loopne
push
dec
fs
out
mov
lahf
in
jge
mov
scas
push
mov
aas
test
insl
into
frstor
pop
movsl
insl
push
call
pop
test
jb
stc
mov
je
dec
stc
inc
inc
push
rcrl
inc
inc
inc
cmc
xchg
hlt
popa
mov
push
sahf
jno
push
mov
loopne
pop
dec
repnz
mov
fdivrp
mov
decb
rorb
sbb
les
jne
xor
leave
test
into
pop
jge
sahf
ljmp
pusha
pop
cmc
aam
mov
fnstcw
imul
sbb
and
xor
or
jne
xchg
mov
das
clc
pop
je
xor
jg
cmp
fnstsw
push
pop
icebp
inc
nop
in
pop
mov
int
leave
xlat
ljmp
mov
andl
push
cwtl
add
or
sti
nop
sbb
mov
jno
mov
mov
loop,pn
add
mov
je
pop
xchg
push
cmp
xchg
fildll
add
and
loope
dec
mov
shrb
scas
push
pop
je
cwtl
aas
movsb
in
add
popf
cwtl
rorl
gs
lds
sbb
xchg
adc
arpl
into
imul
push
pop
test
std
popa
adc
rol
pop
movsl
out
mov
fs
mov
lods
add
in
sub
jmp
dec
imul
add
xchg
rcrl
stos
jae
sub
and
mov
adc
jmp
test
cli
aas
adc
test
hlt
jge
stos
mov
pop
mov
or
mov
adc
sarl
fisubs
xchg
sar
ficompl
push
imul
xchg
mov
lods
mov
xchg
add
in
and
ret
pusha
sbb
inc
or
fimull
xchg
dec
mov
sub
adc
frstor
or
pop
decl
dec
aad
inc
xor
pop
and
dec
mov
out
test
push
add
dec
out
pop
inc
jnp
mov
gs
and
outsb
inc
test
ret
mov
cld
sub
in
movsb
sbb
lods
lock
test
shll
jmp
fcomip
jp
mov
arpl
lret
stos
mov
jle
jo
push
fwait
cli
xchg
jbe
lcall
xchg
clc
adc
in
jl
dec
pushf
add
fs
jecxz
cmpsl
mov
inc
xor
xor
mov
sbb
lret
mov
stos
jecxz
mov
in
lcall
enter
dec
add
jmp
cmc
pop
jecxz
cmp
xchg
mov
mov
add
out
nop
adc
mov
or
mov
cmp
xchg
jb
inc
sub
scas
mov
jecxz
mulb
rcl
repnz
inc
mov
fisubrl
cmp
adc
xor
add
cwtl
rcll
popf
jmp
int
orl
movsl
andl
xchg
cmp
fstp
add
push
movsl
push
stc
scas
mov
or
xchg
pop
cltd
adc
sbb
popa
mov
sub
jb
sub
mov
xor
cld
es
jmp
dec
lods
adc
push
jno
add
dec
mov
pop
shrl
pushf
push
leave
ljmp
and
sbb
mov
out
cmp
cmp
cmpsl
movsb
pop
popf
add
dec
ds
pusha
fadd
sub
out
push
lahf
cmpsl
jg
insb
mov
or
cmp
ret
sbb
outsl
lret
dec
and
movsl
in
movsl
jno
flds
xor
jae
cli
xchg
das
sti
pop
in
inc
lods
out
ret
fldt
mov
jne
sbb
jo
stc
or
scas
push
and
mov
add
sub
sbbl
sbb
xchg
pop
insb
mov
out
jl
into
jne
inc
rclb
test
and
pslld
arpl
stos
inc
cld
mov
xchg
mov
aad
mov
insl
or
imul
stos
inc
mov
ljmp
icebp
daa
popf
mov
sub
mov
or
outsl
xor
loop
mov
sbb
mov
xchg
add
xchg
outsl
inc
xchg
fwait
andl
movsl
xor
lock
or
jns
imul
pop
das
in
lret
popa
mov
jmp
xchg
mov
mov
adc
adc
lahf
xchg
xor
mov
push
sbb
shll
aas
pushf
mov
push
adc
imul
ror
ss
push
jb
sarl
adc
sub
dec
seto
pop
push
int
dec
mov
popf
inc
sbb
out
push
outsb
push
bound
mov
pushf
jo
xchg
add
push
repz
orb
xor
fdivs
jae
or
data16
jo
sar
movsl
call
pop
ss
mov
inc
aam
jnp
dec
test
dec
ror
add
ds
subb
cmc
and
dec
jl
inc
flds
mov
pusha
adcb
jb
cld
repz
icebp
pop
add
fs
ror
push
out
inc
lods
out
mov
fcompl
ficompl
add
loop
cld
pushf
push
stc
into
mov
xor
ret
fnstenv
sbb
push
cmc
mov
mov
pop
enter
mov
adc
push
fstps
aaa
sbb
sar
loop
dec
inc
fs
sbb
add
loop
popa
cmp
push
in
jl
inc
addb
bound
or
dec
jge
fdivrs
xorb
fxam
sub
and
mulb
mulw
lods
dec
ja
or
inc
mov
xor
push
pop
push
shlb
loope
push
jmp
inc
popf
cltd
mov
jmp
push
add
pop
insl
orl
stos
cmpb
inc
scas
jnp
xor
inc
mov
aam
es
sbb
jnp
mov
inc
fdivrs
ret
mov
aaa
mov
mov
pop
push
insb
or
or
cmp
arpl
pusha
xchg
clc
adc
repz
jbe
inc
mov
stos
mov
inc
pop
dec
sub
push
push
sbb
pop
sub
jmp
mov
xchg
lcall
or
cli
sub
in
sar
inc
scas
lea
push
adc
xchg
aad
jo
mov
sbb
daa
and
test
movsb
push
ljmp
nop
jp
xor
cli
inc
jle
inc
dec
jno
sbb
dec
xchg
negl
mov
popf
jbe
xlat
mov
cmpsl
adc
lea
fucomip
stos
subb
xchg
and
push
roll
pop
pop
les
jmp
mov
and
out
aam
arpl
dec
cmp
push
xacquire
fwait
loop
or
push
cld
and
pop
imul
mov
push
shrl
mov
in
inc
push
in
insl
iret
test
dec
negb
stc
imul
daa
and
popf
loopne
jno
sub
add
test
insb
cmp
push
aas
pop
dec
xor
adc
cmpsb
lds
mov
push
cld
adc
sub
mov
aam
mov
pop
xor
mov
mov
int3
into
sub
pop
out
js
roll
stos
les
inc
jg
push
dec
mov
addr16
lea
cmpsl
mov
clc
popf
outsl
sub
repz
adc
mov
repz
addr16
pop
out
mov
in
xchg
andb
das
sub
and
rorb
push
inc
sbb
loop
xchg
and
aad
rorl
sbb
add
outsb
jmp
sub
repz
shr
es
or
fdiv
sbb
or
cmpsb
add
dec
add
sub
mov
nop
daa
mov
test
jle
push
call
dec
jb
subb
and
imul
sti
push
ds
in
add
sub
fldenv
stos
push
push
push
pop
cltd
in
mov
inc
loopne
cltd
xor
in
jle
jb
xchg
bound
or
xor
jne
loope
jnp
fcmovnbe
or
cmp
xchg
inc
aas
mov
orb
sub
popa
test
cmp
xor
mov
jg
out
push
arpl
pop
scas
mov
in
pop
roll
cmp
dec
fs
xchg
out
rorl
sahf
movb
dec
cwtl
sub
xor
pop
xor
mov
std
or
adc
lods
int3
jns
inc
and
sarb
jle
or
cld
into
push
out
es
cld
jmp
icebp
mov
movsl
or
mov
push
add
push
sbb
jae
movsl
das
insl
push
aad
imul
xlat
or
xlat
shl
lds
jno
sbb
int
clc
pop
xchg
xchg
call
xchg
inc
imul
xor
mov
ss
dec
movsl
pop
cld
lods
push
add
gs
inc
sub
test
push
lahf
fcompl
adc
lock
std
and
mov
sbb
adc
xchg
aam
jb
jno
call
pop
js
or
pop
push
sub
outsb
ret
push
jg
je
pop
push
dec
mov
xchg
xchg
es
ret
and
and
jle
popa
daa
int3
loopne
orl
mov
sbb
dec
sahf
inc
mov
outsb
gs
in
mov
mov
call
pop
lret
or
pushf
sbb
dec
add
lods
rcrb
stc
inc
incl
push
xchg
fsts
push
add
jb
mov
lea
pushf
sbb
pop
ja
outsb
sti
clc
adc
aaa
lret
inc
dec
sub
addl
adc
pop
pcmpgtw
adc
outsl
jl
repz
das
mov
insl
pop
lea
lods
mov
cmpsl
call
insl
fiadds
add
repz
inc
test
cld
ret
mov
mov
mulb
sub
cld
xor
pop
sub
imull
sbb
and
aad
xchg
mov
push
loop
adc
es
push
jmp
call
or
imul
jbe
hlt
pop
test
mov
mov
js
in
leave
and
xorps
dec
jbe
imul
subb
out
lock
std
js
push
or
sbb
push
es
fisttpl
or
pop
nop
mov
xchg
mull
cmovne
fmull
add
pop
loope
push
jp
dec
sub
adc
xor
inc
add
sub
adc
xchg
insb
pusha
xchg
dec
or
ret
cmpsl
cmpsb
cmp
sahf
inc
mov
xchg
out
js
aas
jp
sub
and
fisubs
ss
loopne
sbb
pop
mov
stos
fs
xor
pop
dec
popf
xchg
gs
in
imul
cli
xor
xor
pop
cwtl
pop
sbb
loope
bound
rcr
out
add
mov
mov
sub
adc
lea
mov
enter
cmp
mov
out
push
xchg
cwtl
ljmp
cltd
pop
mov
out
jl
repz
and
cmc
fs
adc
sub
scas
sbb
call
add
cs
jmp
sub
or
sub
negl
sub
dec
adc
imul
xchg
cmc
jnp
stc
xchg
dec
and
andb
icebp
into
daa
pusha
aaa
call
mov
lahf
fwait
aad
js
jle
sub
scas
push
mov
adc
lds
sbb
in
mov
mov
mov
sub
movsb
rol
mov
inc
jnp
stos
cmp
pusha
inc
jns
pusha
push
ds
xor
and
or
pop
xor
jns
or
push
incb
fsubl
test
mov
add
sub
nop
repnz
mov
pop
rcrb
or
ss
daa
inc
or
add
pop
jo
mov
cmp
push
mov
movsb
pop
xor
nop
dec
das
sub
loope
bound
sbb
not
xchg
addb
arpl
cmpb
test
add
xchg
fimuls
pop
adc
shrl
ljmp
inc
in
icebp
mov
aad
and
push
ret
inc
pop
enter
sub
xchg
ret
loope
movsl
or
leave
mov
test
scas
mov
mov
ja
les
push
imul
icebp
sub
sub
cmpxchg
out
fimull
sahf
faddl
clc
xchg
inc
std
xchg
cmp
lcall
fucomp
int3
adc
iret
in
xchg
xchg
mov
adc
pop
xchg
test
add
mov
push
dec
mov
mov
ret
andb
into
lcall
xchg
scas
fisubrl
jne
rcll
adc
mov
movsl
inc
jne
sub
lret
std
sbb
jp
sbb
and
outsl
outsl
mov
mov
nop
xchg
or
sti
xchg
rcr
pop
or
sti
cmpsl
cmp
movsb
shll
daa
jb
cmp
mov
dec
int
push
frstor
aam
mov
lahf
push
sub
sbb
test
out
push
out
sbb
ja
inc
lret
sub
outsl
iret
push
in
and
fucomip
pop
sub
pop
movsl
cwtl
gs
dec
dec
dec
xor
sbb
ja
loope
outsl
jae
js
xchg
dec
shrl
mov
insl
pop
xchg
iret
adc
shrb
sbb
push
loop
fldl
inc
adc
lock
or
pushf
jp
pop
idivl
inc
mov
push
add
push
std
call
rcr
mov
cmp
inc
sub
daa
insl
sbb
pop
adc
aaa
inc
insl
mov
scas
adc
xor
out
imul
mov
or
xor
bound
je
pop
inc
xchg
push
adc
mov
adc
pop
jne
mov
movsb
sti
sbb
inc
cwtl
add
xchg
push
or
dec
addl
dec
mov
jecxz
adc
movsb
xchg
pop
lock
loopne
xchg
xchg
dec
and
in
js
pop
popa
and
sub
hlt
imul
or
addr16
sbb
inc
and
push
xchg
push
adc
adc
insl
data16
fnstenv
xchg
xchg
imul
mov
mov
cmpsl
arpl
cltd
jl
mov
jo
sub
mov
mov
sbb
pop
sub
jp
fists
int3
cmpsb
sub
nop
cs
sbb
mov
ss
push
es
fs
jnp
enter
test
cmp
and
push
lea
jbe
sahf
std
or
add
mov
sbb
daa
stc
lods
xchg
cmp
inc
ret
mov
dec
stos
xor
mov
repz
add
mov
jo
fnstsw
xchg
mov
dec
mov
adc
in
xorb
add
pusha
shlb
or
mov
test
adc
enter
orl
out
pop
lret
mov
add
fwait
enter
pop
repnz
push
out
movsb
fsub
andl
movsl
icebp
ss
cmp
xchg
in
mov
pop
fucomip
bound
repnz
dec
jp
xchg
lahf
js
lahf
push
jl
sbb
adc
js
add
fimuls
xchg
das
dec
jge
mov
mov
in
push
hlt
push
rcrb
js
sahf
mov
ret
lods
pushf
shld
cld
push
mov
push
inc
mov
daa
pop
jg
lahf
faddl
imul
std
loop
jns
mov
or
loopne
stos
stos
adc
leave
mov
push
cmpsb
enter
and
cld
push
cltd
int3
or
lcall
xorl
scas
notb
inc
stc
imul
jp
inc
ret
ret
aas
ljmp
push
jmp
fwait
push
add
pop
inc
dec
sbb
inc
pop
out
push
imul
push
mov
mov
sbb
cmp
cmp
pop
jno
sub
sub
pop
and
sub
bound
mov
es
mov
pushf
sti
mov
xor
lea
andl
jp
mov
jb
stos
push
les
ljmp
mov
sub
or
test
scas
xlat
push
push
push
in
imul
lock
cmp
pop
jmp
divb
mov
mov
push
dec
pop
xchg
je
int
push
jb
add
scas
adc
add
bound
iret
shlb
sub
mov
js
fsubrs
or
mov
inc
add
in
add
lret
movsl
movsl
adc
adc
pop
mov
or
sbb
sub
xchg
movsl
iret
movsb
dec
fdivs
cmc
jbe
jno
andb
shr
nop
insb
loopne
and
pusha
mov
arpl
adc
pop
mov
adc
jbe
dec
jnp
dec
in
jmp
popa
cmp
push
enter
ss
pop
roll
adc
dec
out
xor
xlat
lds
mov
xlat
mov
int3
subl
mov
int
xor
cmpsb
mov
cmpb
fcompl
pop
jne
mov
dec
shlb
fstpl
ret
shlb
push
mov
lret
pop
fwait
mov
sub
fldcw
push
pop
test
xor
popa
lods
mov
cmp
addr16
mov
and
cwtl
mov
divb
sbb
ja
push
adc
ret
into
iret
sbb
lret
push
push
call
fstpt
mov
add
mov
cmc
cmp
mov
jmp
mov
into
xchg
mov
sahf
pop
je
jge
dec
mov
dec
jns
push
mov
lret
rcrb
inc
pop
inc
jo
das
test
adc
fdivs
ret
sahf
icebp
push
test
or
add
pop
mov
push
or
cltd
clc
push
ljmp
popf
cmp
sahf
dec
pop
xor
ljmp
jge
mov
add
cltd
jg
orl
movsl
das
cmp
pop
mov
dec
sbb
icebp
adc
mov
xor
mov
incl
xchg
shll
mov
loope
inc
iret
push
pop
movsb
pushf
push
xchg
jne
das
cwtl
gs
iret
out
arpl
out
sub
ljmp
push
jno
test
imul
and
sbb
loop
push
push
aaa
aad
dec
dec
and
cmpsb
adc
sbb
stc
or
in
add
movsb
in
adc
imul
mov
hlt
cltd
aad
popa
jne
insb
add
jle
mov
call
loopne
hlt
lret
xor
sub
addl
mov
sbb
pop
sti
es
adc
fsubrl
jb
push
loop
orl
or
jae
cli
nop
in
mov
decb
stos
divb
xchg
fisttpll
pop
jnp
push
jge
mov
and
hlt
out
fisttpll
ss
add
xchg
out
stos
ja
ds
xchg
in
push
mov
lret
xchg
movsl
mov
sbb
push
rcrb
mov
inc
repnz
stos
gs
dec
pop
fsts
jbe
and
push
or
sub
orl
pusha
or
pop
mov
adc
iret
mov
cmp
ret
in
push
jmp
scas
dec
fcoml
into
xchg
nop
lock
sbb
mov
in
andl
dec
repnz
pushf
inc
fs
push
xor
fbstp
cld
fistpl
xchg
push
mov
pop
dec
into
insl
rorl
or
movb
push
lods
pop
mov
or
test
cmp
sub
add
jmp
and
mov
pop
cmp
or
lds
or
pop
mov
pop
cmp
stc
js
inc
insb
sbb
jbe
test
pop
pusha
add
sbb
add
mov
sub
scas
lahf
repnz
scas
sahf
lret
sbb
add
iret
nop
shll
jbe
mov
mov
mov
notl
cltd
pop
sub
inc
lcall
sti
mov
sti
js
pop
mov
aas
mov
in
and
sub
fadds
or
xor
scas
sbb
add
push
sub
das
icebp
sub
mov
xchg
call
insb
mov
push
pushf
je
lds
mov
cmpsb
push
jg
repnz
pop
loopne
scas
xchg
enter
lods
scas
xchg
icebp
leave
or
inc
lahf
xchg
fidivrs
jne
jbe
dec
movsb
lahf
jmp
fisttps
jnp
movsb
pop
into
push
int3
stc
mov
adc
bound
stos
cmp
mov
mov
das
xchg
in
push
and
xor
jno
mov
fsubl
jmp
xchg
adc
jmp
out
cmpb
push
xor
stc
mov
mov
cwtl
shl
sub
mov
stos
in
adc
mov
mov
pushf
sbb
addl
fldenv
sub
pusha
aas
push
enter
stos
sahf
lahf
int3
push
int
dec
mov
pop
push
mov
add
clc
mov
ficoms
inc
shrb
mov
xor
add
insl
iret
int
xchg
popa
insb
jg
pop
incb
push
cli
in
cmp
inc
mov
mov
mov
rorl
push
stc
add
push
add
ja
movsb
cmp
out
xchg
xor
and
dec
sub
push
mov
test
lds
cmpsb
sub
dec
dec
xor
xor
ret
ret
xlat
jl
mov
or
push
into
inc
ret
cli
push
lock
int3
jns,pn
mov
cltd
int3
adc
sub
xchg
je
dec
stos
ret
int
loopne
pop
out
add
mov
or
into
or
loopne
sbb
andb
xchg
ror
add
sub
out
adc
and
xchg
out
push
outsl
sbb
leave
mov
mov
mov
dec
dec
push
push
loopne
popf
test
sarl
hlt
mov
pop
or
cmp
leave
mov
mulb
pop
xor
ja
xor
push
sub
std
ret
xchg
and
nop
or
lret
jmp
mov
sub
fdivl
jle
pop
pop
push
push
in
adc
jne
xchg
xchg
or
lods
cmpsl
iret
imulb
movsb
int3
scas
sub
inc
pop
pusha
sbb
or
xor
xchg
icebp
ljmp
mov
std
enter
mov
push
adc
dec
mov
mov
popf
mov
cld
cmp
aam
fisubs
outsl
fwait
outsb
loopne
in
ljmp
or
in
adc
repz
pop
adc
push
mov
ret
popf
fbld
pop
adc
out
mov
inc
jne
jbe
cmp
pop
jp
gs
mov
inc
insl
ss
insb
cmp
cli
imul
lret
pop
enter
scas
cltd
roll
and
call
jle
fsubrl
aaa
test
mov
mov
mov
mov
mov
pushf
or
pop
fists
pop
jb
adc
sub
lods
cmpl
inc
js
dec
inc
jl
sbb
aam
bound
push
stos
fstps
inc
sub
ss
fmull
aaa
mov
add
cmp
add
sub
imul
adc
je
xchg
std
rcl
fdivp
push
cmp
cmp
loop
leave
sti
cmc
push
or
cmpsb
mov
push
mov
sahf
pop
push
lods
mov
xor
loope
mov
xchg
sbb
jecxz
pop
jns
sbbb
aas
lock
fdivrp
add
lcall
dec
and
stos
adc
bound
imul
and
cmp
dec
pop
shl
in
inc
pop
shll
add
int3
loopne
es
scas
push
inc
lock
jnp
inc
cmpsl
stos
jge
xor
cmp
lea
adc
movsb
pop
push
mov
arpl
clc
dec
mov
fwait
test
xor
pop
mov
in
cwtl
jns
add
ret
sarb
or
scas
lock
ss
jns
daa
push
scas
mov
mov
std
lahf
cmp
or
rcr
xorb
pop
aaa
sbb
cmp
insl
mov
stos
pop
cmp
addr16
jns
aam
pop
pop
add
outsl
pop
stos
push
test
outsl
test
test
xchg
test
imul
add
fisttps
push
out
sub
leave
push
orb
mov
mov
pushf
xor
jl
jb
push
in
cmp
sbb
inc
xor
shlb
imul
outsb
and
xchg
sbb
ljmp
pop
jo
clc
cmp
xchg
cmp
mov
xchg
jp
xor
mov
sti
cmpsl
cmc
ret
rcr
add
es
push
sbb
call
jg
dec
rorb
movsl
mov
loop
sarb
stos
and
sti
or
out
mov
leave
push
xchg
dec
and
movsb
xchg
sub
bound
inc
stc
mov
daa
sbb
and
ss
push
inc
mov
xchg
jbe
add
mov
sbb
fbld
adc
ret
and
cmp
addr16
ds
mov
out
mov
xorb
test
stos
mov
call
xor
dec
iret
cmp
in
fsubs
cltd
shr
sbb
les
push
popa
push
test
repnz
or
les
cmp
xor
dec
shl
inc
cs
sub
mov
lret
inc
add
add
ror
adc
inc
mov
ljmp
lret
jle
stos
out
xor
rcll
call
pop
dec
mov
repz
push
repz
ret
mov
out
jbe
subl
lahf
jb
lcall
int3
xchg
imul
imul
mov
aaa
stos
pop
lahf
enter
scas
test
fnstcw
cld
movsb
out
aas
cwtl
jb
mov
push
je
xchg
repnz
push
inc
jo
lods
in
jnp
sti
xchg
sbb
out
inc
and
fwait
scas
sub
inc
push
cltd
or
cmp
lahf
cltd
or
pop
mov
loopne
push
ljmp
stos
dec
jle
ja
enter
push
jecxz
push
cmpsb
push
data16
adc
stos
lcall
sub
lock
sbb
jb
fwait
rorb
out
sbb
pop
insb
ljmp
dec
xchg
dec
cmpsb
negb
in
in
lods
loopne
adc
shl
pop
push
sbb
fldl
sbb
rolb
test
cs
sub
dec
push
ret
call
jmp
mov
pop
sbb
inc
pushf
loope
insb
cltd
sbb
xor
add
and
dec
shlb
lods
sub
insb
mov
subb
rcrl
test
xchg
mov
mov
insl
sbb
repz
loopne
movsl
dec
mov
insl
cltd
inc
stos
xor
movsb
pop
cmp
lahf
inc
push
push
adc
sub
rorb
jbe
cmp
xchg
and
inc
test
pop
or
fsubrl
frstor
jecxz
xchg
pop
mov
ljmp
xor
into
sub
jp
xor
sti
push
hlt
push
mov
into
inc
loop
lcall
out
sub
jle
sub
adc
in
cmc
and
insb
mov
push
xchg
pop
adc
and
inc
dec
shl
sub
jge
cmp
xchg
mov
pop
aam
push
jp
inc
out
pop
bound
or
dec
add
fadds
sbb
xor
xchg
lds
mov
fisttps
out
xchg
sarl
leave
sti
pop
xacquire
insl
stos
shll
push
xchg
inc
xchg
xchg
mov
sub
pushf
sub
jp
mov
xor
sub
push
pop
or
or
fisttpl
push
lret
orl
popf
adc
dec
aad
mov
inc
push
mov
rcll
repz
pop
push
mov
and
sahf
roll
dec
rcrl
pop
jecxz
shrb
dec
inc
xchg
sbb
push
push
jae
movsb
lcall
aad
ret
and
bound
cmp
xor
cmp
add
dec
pop
divl
xchg
loopne
int
in
addr16
dec
push
cwtl
mov
mov
pop
mov
mov
loop
push
inc
jecxz
fiaddl
jne
pop
lcall
outsl
push
pop
das
adc
mov
or
fwait
jns
leave
into
mov
pusha
icebp
arpl
mov
insl
xchg
push
sub
xchg
cli
lret
pop
pop
sub
sbb
mov
imul
imul
sti
inc
test
xlat
push
sarb
imul
in
jecxz
xchg
inc
xor
shl
inc
mov
and
xchg
rep
mov
ret
out
jno
mov
dec
add
pop
push
dec
jne
dec
xor
jmp
rcl
and
dec
aam
aad
push
cmp
pushf
xchg
xchg
sbb
xchg
xorb
jae
repz
xor
xchg
jecxz
cltd
js
mov
in
dec
adc
mov
rcrl
inc
add
and
test
gs
cltd
sub
rclb
mov
stc
test
mov
orb
lret
jle
sub
stc
add
ljmp
mov
mov
inc
fistpl
pop
push
outsb
dec
hlt
dec
mov
sub
jne
mov
jbe
xor
pop
jne
inc
adc
jno
dec
es
dec
das
xchg
jne
test
ljmp
ljmp
mov
mov
mov
push
imul
out
xchg
js
push
push
lods
jecxz
xor
popf
and
nop
addr16
adc
lret
sub
cmp
mov
mov
pop
and
dec
bound
dec
jle
mov
and
dec
fnstsw
or
dec
xchg
cmpsb
movb
shlb
mov
add
push
pusha
mov
lret
xchg
push
or
rclb
sbb
cmc
mov
mov
jmp
imul
cld
mov
dec
imul
sub
imul
es
jnp
xor
xchg
in
mov
stos
loop
cmpsb
adc
ss
xor
push
pop
sbb
or
sbb
adc
fdiv
ret
add
mov
dec
sub
iret
mov
hlt
mov
mov
cmp
xchg
loop
icebp
int
rclb
xor
pop
xor
fs
push
or
int
xor
add
dec
lods
cs
jne
lods
push
imul
jbe
adc
movsb
push
les
pop
mov
or
out
std
jle
aam
into
mov
add
popl
jle
xor
inc
mov
jbe
jno
pop
int
js
mov
mov
das
cmpsl
xchg
push
mov
cli
adc
mov
icebp
adc
xchg
rclb
xorb
pop
sti
jg
xor
sbb
rcrl
mov
rcr
call
sub
int3
je
pop
push
xchg
xlat
nop
repz
fnstsw
add
xchg
movsl
mov
mov
repnz
mov
pop
add
imul
push
adcb
int
ja
inc
sub
cmp
jge
sub
out
push
dec
negb
les
dec
ficoml
and
divb
jae
jno
fdivl
enter
inc
inc
jae
in
loopne
lods
fwait
and
test
add
adc
and
loopne
sub
sti
or
sbbl
dec
sbb
or
rcrb
cmc
shll
and
fcomp
and
push
sti
jmp
rclb
cmp
clc
add
xchg
xor
jecxz
not
lods
dec
sti
je
mov
scas
push
cmpsl
push
mov
rclb
jbe
dec
je
jp
jne
mov
xor
ja
xchg
nop
pop
mov
cmpsb
xchg
and
aas
aas
jp
lahf
xchg
xchg
fwait
mov
push
jo
mov
into
in
movsl
push
add
das
mov
cmp
mov
nop
add
shrb
add
icebp
popa
pop
cs
cmp
fildl
mov
mov
cld
sahf
es
sub
es
fiadds
data16
fisubl
data16
jno
lahf
aam
scas
pop
jne
or
negl
fldcw
out
push
popa
movsl
adc
mov
out
jo
adc
fidivs
jns
sahf
in
push
pop
cmp
push
rcll
mov
sahf
mov
stc
sahf
pop
inc
lret
fbld
lds
icebp
in
shlb
push
or
int
add
repz
mov
fildl
jbe
lcall
or
cmp
dec
cmp
bnd
or
jae
lcall
fldl2e
inc
nop
sub
push
pop
sub
test
push
nop
mov
push
sahf
xchg
jle
xor
mov
cmpsb
sbb
mov
mov
xchg
imul
out
data16
stos
loope
sbb
jno
and
dec
test
cmpsb
jg
lds
enter
pop
orl
vpcmpgtw
jge
xlat
fbld
xchg
cmp
sub
push
popf
imull
sbb
fdivl
call
xchg
mov
imul
pop
into
jle
dec
lcall
xor
or
jbe
in
sbb
mov
xor
pop
outsl
in
loopne
mov
int3
sti
inc
decb
dec
xchg
fisttps
cwtl
sub
or
lds
xor
out
cmp
push
pop
bound
xchg
add
xor
ficomps
xor
adc
sbb
fdivs
add
push
mov
cmpsb
jle
outsl
insl
js
inc
js
push
mov
push
pop
cwtl
subl
lcall
and
or
dec
ss
or
cltd
out
mov
cmpsb
mov
pop
movb
mov
push
mov
dec
mov
jge
mov
jbe
idivl
out
mov
lret
and
and
rclb
bnd
lcall
pop
fs
mov
sbbb
out
shlb
mov
das
inc
data16
icebp
jmp
mov
aas
jge
cmp
gs
cmp
pusha
jecxz
xor
ficompl
fisttpl
ftst
mov
jle
incb
xchg
inc
or
bound
cmpsl
sahf
dec
mov
aas
mov
pop
pop
incb
loopne
filds
in
dec
cltd
mov
xchg
pop
or
dec
in
dec
mov
or
xor
cltd
pop
fdivs
lock
cli
nop
and
bound
xlat
movsb
jo
push
movsl
test
xchg
mov
in
mov
adc
inc
sub
mov
in
scas
cmp
dec
andl
sub
and
aaa
sub
daa
add
inc
fsubrp
xchg
sbb
pusha
xchg
xor
xor
mov
xlat
lahf
push
dec
adc
ror
or
xchg
xchg
lret
int3
lret
and
cmc
xchg
aas
mov
mov
ljmp
sbb
xchg
fistps
sbbl
mov
orb
dec
adc
shrl
mov
out
mov
sahf
mov
or
add
push
mov
fwait
sub
arpl
push
std
xchg
sub
mov
notb
call
ds
mov
xchg
mov
test
xor
mov
jmp
and
call
cmpsb
mov
dec
ret
adc
and
xor
decl
dec
mov
add
jnp
sbb
hlt
xchg
js
rcrb
sub
shrb
je
test
and
add
adc
fldenv
cwtl
xchg
cmp
imulb
add
pop
js
push
dec
call
pop
jno
jmp
pop
cltd
pop
mov
sub
dec
shrl
int3
mov
leave
add
xor
jg
ret
or
cmp
mov
or
jg
scas
sbb
aad
add
mov
stos
nop
insb
imul
mov
insb
rcrl
adc
or
pop
mov
mov
jecxz
jno
pop
mov
test
mov
sbb
push
rorb
ficomps
enter
lcall
call
ret
divb
or
xor
mov
dec
mov
xor
cmpsb
adc
mov
ds
lea
dec
std
clc
push
jo
call
jg
cmp
insb
xchg
xlat
push
lea
ret
inc
mov
and
je
pop
pushf
sbb
cmpsl
pop
xor
int3
out
xchg
jmp
xor
sub
mov
cmpsb
jo
in
pop
in
and
daa
and
je
lret
imul
iret
dec
iret
jp
mov
loopne
pushf
pusha
out
not
xchg
out
and
fs
jnp
insl
cmp
cmp
inc
sbb
les
pop
mov
fisubrs
incb
cmpsl
or
fimull
inc
or
dec
jb
push
or
stos
shlb
inc
rcll
mov
test
xor
jmp
jne
lods
jmp
addr16
out
js
aad
orb
cli
mov
cs
dec
xor
fwait
sub
lea
out
loopne
rol
xchg
lock
imul
jno
pop
es
leave
xor
cwtl
sub
lods
push
cltd
icebp
iret
addr16
inc
jbe
sub
xchg
notb
cltd
addr16
sub
iret
incl
inc
sbb
sahf
cli
aaa
fiaddl
push
xor
movsb
xchg
jb
and
push
test
mov
add
push
lock
jb
or
add
aaa
das
adc
dec
in
sbb
push
rolb
sbb
inc
je
mul
xchg
in
xor
outsl
jbe
cmp
test
inc
cltd
jb
rcrl
jmp
fwait
mov
sbb
sbb
stc
sbb
cmpsb
or
fs
push
dec
popa
fadds
push
push
fiaddl
aad
loopne
push
pusha
dec
js
cmp
cwtl
adc
sbb
call
shlb
xor
mov
lods
lss
dec
jno
jp
adc
mov
lcall
iret
int
xor
sub
outsl
pop
loopne
xor
pop
mov
pop
test
fisubrs
pop
dec
insb
push
subb
mov
xchg
inc
js
cmpl
int
nop
push
push
int
scas
sub
repnz
jae
sub
shl
ljmp
push
xchg
in
mov
mov
cwtl
jp
cltd
cmp
inc
lcall
arpl
xchg
loop
cwtl
pop
hlt
imul
mov
mov
jb
insb
add
push
fadds
nop
mov
dec
lods
push
lcall
mov
lret
shll
call
rol
inc
add
or
call
cmp
rorl
imull
cmp
fimull
and
std
pop
movl
inc
movsb
out
or
das
rol
cmp
add
enter
out
testb
xchg
das
dec
lcall
loop
add
mov
push
lahf
scas
subb
jl
aas
jo
xlat
lods
xor
outsl
cmp
in
jo
mov
jb
push
int3
and
cmc
imul
fistps
mov
fs
cmp
sahf
xchg
aas
jge
ds
add
jmp
add
sub
xchg
pushf
cmc
mov
addr16
cmp
inc
lock
dec
fwait
aaa
repz
cmp
mov
aas
stos
int3
lea
fdivrl
pop
xchg
jo
sbb
push
jo
jbe
xchg
sbb
dec
enter
loop
out
lcall
mov
aam
inc
popa
cmpsb
sbb
mov
addr16
call
inc
iret
jo
xlat
adc
lea
out
out
int3
inc
adc
dec
add
xchg
call
sbb
xor
push
push
hlt
mov
out
pop
dec
insl
idivb
ss
add
icebp
out
div
ja
xchg
std
mov
pop
leave
pop
pop
ja
loop
movsb
clc
and
popa
xchg
push
dec
cmp
movsl
push
mov
stos
inc
jno
jl
ljmp
mov
movsb
mov
mov
sub
popf
leave
gs
xor
roll
dec
or
or
dec
lcall
cmp
stos
cmp
cmpsb
ret
inc
jns
imul
sbb
das
xorl
arpl
outsl
and
or
hlt
add
mov
mul
xchg
pop
and
adc
aad
cltd
push
repz
fnstcw
cwtl
lds
xchg
dec
mov
add
xchg
stos
inc
jne
inc
arpl
lcall
mov
sbb
gs
and
mov
sti
dec
vmread
insl
cli
rcll
sbb
dec
jmp
adc
cld
dec
int3
mov
fstpt
xor
enter
mov
cmp
dec
sub
call
and
cmova
rcrl
cld
ret
inc
gs
js
fwait
stos
mov
ja
pop
pop
pop
jmp
or
jp
rcl
xchg
stos
mov
int
out
test
cli
cld
bound
icebp
shrb
push
inc
mov
jae
or
mov
fcmovu
mov
daa
cltd
xchg
out
sar
aaa
movsb
subb
mov
scas
add
jns
clc
adcb
inc
cmp
inc
push
xor
sti
cmp
cld
dec
outsl
sub
or
clc
sub
lahf
jmp
pop
dec
fsubrl
in
das
sbb
sub
dec
push
or
out
push
dec
xchg
into
push
or
sub
sub
mov
int
aam
add
jg
lfs
fstps
pop
movsb
movsb
in
push
cmp
xchg
in
lcall
ds
pop
mov
loop
jmp
iret
cld
cld
lods
jg
inc
jb
push
xchg
pop
cmp
sub
lahf
xchg
push
enter
int3
aas
mov
fucomi
pop
ss
test
xor
ljmp
sub
mov
shll
or
jns
pop
cmpsl
push
mov
out
ljmp
xor
loopne
cs
cld
adc
inc
dec
mov
push
addr16
mov
push
jge
cs
xlat
mov
in
xchg
orl
fldt
pop
adc
push
dec
rol
push
xor
filds
movsb
jecxz
jb
push
and
jo
cwtl
mov
fildl
ja
popa
bound
frstor
shll
jns
les
adc
pop
lret
imul
jnp
sub
mov
mov
and
inc
adc
insl
push
mov
lahf
out
xchg
test
inc
int
fnstsw
jo
pop
xchg
sub
cmp
add
sub
sub
mov
push
cwtl
pop
jnp
mov
add
mov
push
cmp
lret
mov
aas
sbb
ret
shrl
sbb
shrb
inc
dec
test
insl
das
psubsb
fs
call
pop
bound
and
add
add
aaa
mov
lret
ljmp
rcrl
mov
mov
arpl
sub
loope
jb
push
and
daa
mov
andl
jl
aam
cmpsl
int
fwait
sub
adc
pop
sarb
lahf
sbb
rclb
stc
dec
add
pop
sub
adc
xor
adc
jb
std
popf
movsb
sbb
cmp
sbb
stos
mov
push
clc
es
dec
or
or
adc
mov
pop
pop
sbb
xchg
push
xchg
mov
mov
mov
shll
aas
or
adc
xlat
int3
cwtl
in
push
ljmp
add
insb
aam
enter
out
xchg
mov
cmpsb
jp
add
pusha
xor
sbbl
jecxz
std
jae
mov
loope
add
inc
xor
sbb
push
test
xlat
in
ror
imul
mov
add
lahf
and
lahf
fsub
inc
jg
scas
mov
mov
or
lcall
shll
xor
push
imul
sub
cwtl
lahf
das
mov
shll
mov
push
out
pop
out
jbe
add
fmull
dec
bound
or
call
shl
dec
jnp
pop
sbb
xchg
ljmp
mov
rcll
xchg
mov
mov
pop
adc
clc
pop
hlt
out
add
mov
push
lods
es
xlat
add
mov
sahf
iret
dec
inc
inc
dec
sub
pop
mov
iret
or
scas
and
fstp
cmpsb
sbb
mov
popa
enter
rol
test
leave
jbe
test
call
stos
outsb
stos
popf
ljmp
imul
jnp
or
mov
movsl
test
mov
insb
dec
and
pop
daa
lret
cmp
xchg
push
and
cltd
test
imul
stc
popa
adc
out
loopne
sar
test
sub
icebp
mov
mov
arpl
sub
test
hlt
mov
push
xor
push
lret
sbb
insb
data16
cs
jo
xchg
fsubs
dec
fnstenv
mov
insb
outsl
inc
jne
push
sub
jecxz
enter
and
sbb
push
mov
loopne
xor
scas
in
aam
jb
xor
xchg
push
pop
push
jbe
stos
xchg
int
lods
iret
loopne
jae
scas
cwtl
lahf
sub
push
imul
ret
pop
stos
sub
out
xor
repnz
adc
pusha
aas
push
and
lret
cmp
jno
push
insl
sbb
add
xlat
call
ljmp
fdivrp
ss
push
mov
pop
xchg
xchg
icebp
add
mov
repz
jb
testl
cmp
mov
ds
repz
pop
push
mov
pcmpeqw
into
lret
adc
cmc
out
ds
fnsave
arpl
sub
imul
test
or
jp
gs
shlb
and
jp
jecxz
int3
insb
pop
lock
stc
repnz
out
scas
cmc
sbb
sbb
shl
pop
mov
std
stc
movsl
push
push
fidivl
pop
stos
pop
mov
add
loop
push
xor
out
stos
xor
sbb
pop
iret
je
pushf
sub
ficoms
sbbl
rorb
jmp
add
sbbb
sub
lcall
xlat
in
shll
mov
aam
adc
add
or
pushf
sub
stos
sbb
cli
xchg
test
rcll
cmp
mov
test
cld
jmp
xor
loopne
mov
mov
jne
sbb
cmp
adc
inc
sti
dec
cmpsb
cwtl
mov
pop
inc
cmp
pop
push
sbb
cmpsl
pusha
sbbl
xchg
mov
dec
xor
stc
test
xchg
repnz
fildll
dec
push
xlat
inc
call
jmp
popa
stos
loope
loopne
fsubs
in
xor
loope
xlat
je
or
lcall
push
inc
push
es
pop
inc
add
xchg
cmp
and
cltd
cltd
outsb
outsb
xlat
repz
cmp
cwtl
mov
push
jge
lds
xchg
out
cli
or
pusha
int3
inc
in
in
jle
rclb
pop
add
pop
lret
jb
or
inc
test
pop
loop
popf
mov
mov
push
out
cmpb
sub
mov
jmp
mov
xchg
and
jge
xchg
test
inc
movsl
xor
dec
in
xor
out
xor
push
dec
emms
jae
fs
push
pushf
dec
and
into
repz
push
pop
jp
insb
pusha
in
lret
in
cmp
fstpl
insb
lcall
ja
dec
pushf
fwait
outsb
test
cmp
sbb
inc
xchg
pop
pop
out
aas
int3
mov
jne
subb
cmp
dec
adc
mov
dec
dec
lods
jo
pushf
pop
sub
mov
mov
mov
pop
loopne
or
aam
cmp
sbbl
push
cwtl
adc
frstor
ret
sub
out
leave
mov
dec
out
mov
sbb
aad
jmp
int
loop
ret
lods
sbb
pusha
movsb
ficoms
ja
lock
sub
movsl
je
cltd
gs
loopne
sbb
mov
adc
out
rorl
xor
mov
xchg
xor
xlat
out
roll
mov
sahf
pop
imul
or
shrb
and
int
dec
inc
pop
sti
push
jmp
push
div
fisubrs
jne
push
sub
mov
popf
stos
out
lea
cmp
stc
mov
iret
arpl
xchg
lods
test
cmp
inc
dec
mov
iret
popf
test
add
pop
xchg
in
loope
mov
mulb
mov
test
adc
int3
in
insl
jle
dec
sbb
pushf
fnstcw
push
cmpsb
push
cmp
push
xor
in
ret
js
inc
sbb
mov
push
sbb
lahf
mov
cs
sub
inc
fdivs
or
pop
and
popa
jae
or
gs
mov
add
sti
ljmp
cmp
add
push
das
xchg
xlat
xor
add
sbb
inc
or
je
faddp
jo
or
cmp
and
test
jle
popa
push
dec
in
xchg
cmp
insl
xchg
jl
xchg
shl
mov
imul
ret
pop
and
xor
adc
adc
pop
lahf
pop
fucomi
xchg
test
les
in
out
es
push
pop
pop
mov
rcrb
movsl
jmp
or
out
xchg
sti
popf
popf
popl
flds
xchg
mov
inc
out
loopne
testl
inc
cmp
sbb
movsb
xchg
out
addr16
add
jmp
mov
pop
xchg
add
xor
push
jecxz
mov
pop
pop
fistl
push
pusha
inc
arpl
and
or
std
sbb
lahf
hlt
adcb
lcall
stos
mov
repnz
insl
xchg
js
or
xchg
in
hlt
and
clc
aas
negl
mov
aaa
dec
dec
and
dec
and
or
mov
jg
mov
ja
gs
aas
icebp
mov
stos
ss
out
lcall
xchg
push
jp
pminsw
lds
mov
ljmp
cmp
jno
sahf
popf
jnp
add
mov
sub
or
adc
xor
adc
xor
data16
mov
xor
mov
sar
movsb
scas
xor
add
xchg
js
cmp
and
sti
outsb
js
sub
imul
jg
cmp
inc
insl
arpl
xchg
popf
mov
sub
mov
sub
lret
dec
jnp
sbb
rcll
cmc
push
out
add
filds
push
imul
sub
out
lods
andl
sub
jno
dec
push
test
fnstsw
pop
cwtl
mov
jb
jp
xchg
cli
or
push
dec
imul
push
outsb
jns
fildl
xchg
jnp
icebp
xchg
loop
adc
xlat
sub
mov
dec
int3
mov
arpl
into
test
gs
sar
mov
or
jo
pop
fldl
pop
sbb
push
or
repz
adc
loop
adc
cmpsl
sub
pop
push
es
popa
jne
lret
out
cwtl
std
or
into
cmpsl
mov
inc
ret
sti
pop
mov
mov
out
xchg
in
fcoml
dec
xor
xrelease
pop
cmp
rcrb
or
fildll
mov
pop
jnp
addr16
insl
add
iret
into
leave
mov
out
xchg
pusha
in
and
sub
sbb
adc
sub
out
jnp
sub
lcall
lret
or
jmp
or
mov
loope
mov
mov
das
and
jg
mov
push
jns
mov
stc
in
sub
mov
in
leave
jle
and
mov
or
rorb
mov
loope
push
arpl
sub
mov
stc
mov
movsb
aam
sub
jbe
jecxz
iret
cs
push
jmp
ljmp
ficompl
insl
cmp
push
fidivl
test
mov
push
and
fistpll
ss
popf
test
nop
and
cmp
aaa
mov
sbb
mov
pop
mov
repz
cmp
pop
insl
sarl
cmp
push
xor
mov
imul
rorb
xchg
sbb
mov
inc
jge
mov
ret
cmp
cmp
sub
jp
ljmp
ljmp
jno
test
fcompl
lret
jbe
std
add
int
cwtl
adc
aaa
aas
jge
test
dec
aaa
adc
mov
rolb
dec
shrl
out
mov
and
jbe
or
pop
or
call
lods
fldenv
hlt
dec
out
outsl
lea
jae
mov
jae
push
movsb
inc
into
push
jle
jnp
push
enter
sub
clc
mov
push
push
sbb
inc
push
push
outsl
stos
pop
push
sti
ret
push
stos
xor
mov
into
push
lods
daa
adc
inc
mov
add
divl
xchg
daa
sub
loopne
dec
lods
mov
cmpb
add
test
mov
sbb
mov
fsub
lods
mov
sbb
sub
xchg
add
inc
jae
and
insb
repz
inc
filds
gs
push
imul
in
mov
mov
cmpsl
or
xchg
push
mov
js
aad
push
mov
jo
and
adc
add
scas
jl
ret
xchg
mov
cmp
arpl
fbld
push
loop
and
das
aad
shrl
add
jbe
stos
clc
pop
mov
in
loop
bound
and
std
jmp
push
inc
aad
mov
mov
outsl
mov
arpl
jmp
stos
cmp
jne
ret
inc
icebp
pop
add
sahf
nop
mov
add
enter
ja
pop
stos
xor
xor
lods
or
nop
sub
sbb
fdivrs
dec
lds
in
add
pop
test
xor
clc
and
and
pusha
aad
push
ret
mov
or
lock
pop
ficoms
jno
dec
pusha
sbb
and
decb
arpl
dec
test
adc
cmp
cli
push
jl
into
adc
pmuludq
jae
lods
fdivs
shl
mov
mov
stc
xor
loop
push
out
inc
sbb
aas
sbbl
push
fistpl
xchg
inc
dec
pop
adc
sbb
stos
sbb
sbb
stos
fwait
incl
out
lods
idivb
jo
pushf
mov
dec
or
pusha
fidivrl
out
dec
call
and
gs
andl
jb
or
xchg
pop
mov
xchg
jbe
push
inc
jl
lcall
or
cli
hlt
mov
cld
pop
xor
and
and
dec
rcr
jbe
push
sbb
jg
imul
mov
mov
pop
adc
mov
lock
inc
insb
aaa
popf
sub
jecxz
sub
in
mov
aaa
testb
dec
jne
xchg
stc
xchg
or
int
xor
fcomps
cld
test
clc
icebp
call
ret
pusha
sbb
outsb
stc
jmp
dec
cmp
sbb
xor
dec
or
inc
bound
sti
scas
inc
incb
jno
dec
dec
xchg
pop
xchg
sbb
adc
mov
dec
ret
hlt
inc
xlat
es
fistl
mov
inc
mov
pop
xchg
mov
push
cmp
mov
fwait
repz
push
inc
jle
mov
push
cli
xchg
jmp
or
sbb
dec
push
loope
ljmp
movsl
cs
mov
pop
roll
shl
cmp
sahf
cmp
cs
mov
aaa
and
inc
pop
xor
leave
add
or
and
inc
add
cmp
pop
add
pop
out
mov
lock
mov
pushf
fiaddl
bound
push
jmp
lock
mov
xlat
sub
pop
test
iret
or
mov
mov
fdivr
dec
fildl
xchg
lret
ret
cmp
popl
mov
inc
push
inc
cli
mov
mov
jae
cmp
rol
push
inc
pusha
sub
mov
and
arpl
pop
repnz
push
lahf
xlat
out
ljmp
test
push
mov
popf
movsb
and
dec
fidivrs
inc
xor
enter
cltd
xchg
shlb
cmp
call
outsl
ljmp
push
sbbl
pop
aas
adc
dec
int
scas
mov
dec
pop
mov
adc
sbb
adc
test
push
push
out
movsb
lret
dec
fwait
es
shll
xchg
pop
ret
mov
add
push
xor
mov
push
inc
dec
push
cmpsb
aad
dec
dec
sbb
cmp
and
ficompl
pop
add
xor
cmpsb
mov
xchg
out
mov
mov
daa
push
aas
pop
test
stos
jl
jp
sub
movsb
push
cmp
fdivl
mov
mov
pop
dec
mov
mov
add
mov
shrl
rcrb
shrb
lods
pop
xchg
mov
cmp
xor
inc
adc
or
sub
cmp
dec
add
xlat
lds
test
jnp
ljmp
mul
jge
jo
pop
in
and
insb
fistps
nop
sahf
adc
sbb
or
out
scas
xchg
popa
imul
lds
mov
sbb
movsb
out
lret
inc
and
inc
lock
dec
out
cltd
test
pop
rcrb
pushf
leave
or
es
pop
pop
aad
sub
stos
sub
xchg
outsl
jne
mov
bound
add
jnp
sbb
lret
mov
test
lcall
mov
pop
inc
xchg
subb
xchg
bound
test
loopne
or
cmc
hlt
sub
std
push
leave
cmpsb
lds
jns
ljmp
push
sub
pop
aad
dec
xor
pop
cltd
pop
xlat
mov
rorl
xchg
ss
mov
ss
daa
pop
decl
jns
mov
imul
xchg
pop
and
push
mov
or
jle
jmp
cltd
mov
inc
mov
push
in
or
pusha
sub
lods
inc
js
jns
arpl
pop
jmp
mov
leave
and
imul
xchg
in
dec
in
inc
cld
jecxz,pn
sub
mov
test
lcall
ret
cli
or
ret
stos
xchg
dec
gs
mov
inc
inc
es
adc
mov
dec
cmpsl
bound
inc
inc
movsb
xor
outsl
fwait
sub
and
mov
icebp
cmp
xchg
inc
inc
lret
jge
es
dec
negb
dec
fistps
mov
mov
fs
fs
sub
pop
push
push
fistl
mov
lds
je
xchg
cs
mov
push
xor
fxch
jne
pop
stos
or
sbb
cmpsl
pushf
sub
sub
xor
pop
adc
adc
push
xor
in
inc
adc
xchg
icebp
orl
xchg
movsl
jb
popa
or
xchg
sbb
in
pop
lods
pop
pop
jne
loop
adc
sarl
mov
fbld
into
mov
mov
mov
mov
popa
jg
aad
jnp
into
jp
clc
movsl
adc
shl
inc
push
fcmovnu
push
test
mov
push
jb
xor
and
cmpsl
scas
lcall
fldenv
mov
or
cwtl
jmp
outsb
enter
cmp
pop
les
mov
cmp
sbb
fucomi
xor
ss
insb
in
adc
jbe
cmp
xor
inc
xchg
fcmovbe
imul
dec
push
cmp
xchg
and
sbb
rcrb
xchg
dec
fistl
mov
sti
out
xchg
xor
dec
je
xor
mov
scas
ret
iret
inc
mov
ja
leave
xchg
and
pop
mov
dec
in
push
adc
mov
sar
fisubs
lods
ja
inc
xchg
xchg
cmpsb
js
jecxz
movsb
jg
repnz
call
sbb
mov
xor
aaa
pop
fst
sub
push
iret
push
fstps
out
enter
arpl
out
shrb
sbb
push
movsb
mov
lods
adc
jecxz
dec
mov
ret
xor
shll
sub
test
pusha
pop
cmpsb
mov
std
pop
stos
in
es
mov
flds
iret
outsb
cld
inc
sbb
fdivrp
mov
mov
mov
or
mov
iret
clc
jns
cmp
adc
push
and
inc
xor
leave
adc
xor
sub
xchg
sarl
push
add
or
mov
jmp
ljmp
lahf
pop
jmp
aad
cmp
int3
xchg
inc
mov
adc
ret
dec
rclb
or
repnz
sahf
push
sub
lret
les
mov
mov
and
lcall
rcll
test
mov
stos
and
push
or
ret
lock
add
insl
pop
sub
in
faddp
push
or
fisubrl
mov
aam
imul
cmp
sbb
pop
loopne
cmp
xor
daa
inc
mov
mov
mov
shlb
or
mov
mov
or
repz
adc
into
pop
fmul
inc
fsub
mov
xchg
scas
ss
cli
and
imul
inc
mov
mov
sbb
pop
sub
enter
aad
jne
pop
and
cs
mov
sarb
pop
xchg
lret
add
cwtl
in
test
outsb
xchg
mov
xchg
sbb
sbb
sbbb
hlt
cli
jmp
cmp
stos
push
sub
xchg
pop
fdiv
aam
mov
mov
out
mov
ja
mov
mov
sub
add
lret
jge
dec
jo
jns
popa
pop
sub
sub
dec
adc
cmp
jge
int
push
sub
adc
xchg
mov
push
push
es
iret
fstpt
dec
xchg
sub
loope
ret
outsl
outsl
test
hlt
mov
pop
test
mov
sbb
dec
xor
adc
xchg
xchg
imul
into
mov
add
les
pop
jns
mov
pop
push
test
cmpb
cmpsb
test
fwait
jbe
xchg
lds
dec
push
test
stc
out
lods
faddp
decb
cmpsl
or
outsb
inc
sub
je
cmp
sahf
popf
sub
imul
fcomi
dec
pop
pop
into
loopne
cmp
jmp
sbb
sbbl
add
xor
scas
cmpsl
fcmovnb
lds
mov
mov
inc
imull
mov
push
sti
mov
shlb
js
pushf
int3
outsb
dec
sbb
push
mov
and
nop
psrlw
dec
cmp
xchg
push
mov
cmp
cmp
sbb
div
cmp
jecxz
test
mov
dec
or
jecxz
popf
stos
fsubrs
and
jge
loopne
test
jne
xchg
mov
xor
clc
cmp
fadd
fildl
lods
cmpsb
pop
das
into
test
cli
leave
es
loope
xchg
in
pusha
les
inc
pop
sub
repnz
or
int3
lods
je
mov
and
mov
push
xorb
cmp
test
push
je
lea
in
add
lds
rorl
aad
mov
pushf
xchg
or
dec
inc
add
or
mov
jmp
or
pop
or
int
xlat
dec
xor
push
xor
sub
mov
sahf
mov
add
movsl
push
outsl
int3
push
paddusw
jno
push
sbb
fbld
dec
jg
and
jae
or
inc
and
and
mov
std
pushf
inc
fwait
jb
std
rcrl
fwait
incl
jb
pop
vpunpckhqdq
sbb
adc
or
and
adc
leave
add
adc
lahf
fidivl
dec
push
das
into
shrb
xor
xor
stc
imul
xor
jno
shl
xlat
pushf
mov
xor
dec
fsubrp
or
enterw
cld
push
dec
das
popf
rcl
push
xchg
lret
xchg
push
adc
dec
cmp
hlt
lods
mov
pop
xor
js
repz
push
ja
and
jae
ficoms
lods
sbb
insl
mov
fstpl
into
je
cmpsl
xchg
sub
in
fwait
aas
bound
pop
inc
fldenv
pop
loop
dec
sub
lods
orb
fcomps
jnp
clc
lret
out
jb
inc
cmpsl
int
imul
sub
cmpsl
movsl
int
mov
dec
jmp
outsl
sub
jne
test
aam
fildll
call
les
xchg
or
mov
or
pop
inc
mov
mov
jmp
add
xor
mov
xchg
stc
and
loopne
out
arpl
jae
stos
mul
cltd
ds
dec
adc
jne
sub
mov
jle
add
xor
daa
test
or
cmp
dec
adc
inc
fidivl
cli
xchg
fwait
pop
pop
lods
out
sub
fsubp
mov
aaa
loop
push
call
push
xor
push
bnd
rcrb
insb
sub
push
sub
mov
dec
insl
jo
in
sub
pop
or
das
fiaddl
dec
lods
testl
sahf
arpl
push
dec
int3
nop
pop
fiadds
cmpsl
adc
aad
push
rorl
xchg
and
cmpxchg
lret
ret
mov
pushf
add
mov
push
or
repnz
jae
ret
negb
dec
or
sub
and
in
testb
sbb
lcall
in
jno
cmp
movsl
mov
mov
inc
imul
and
loop
popl
sbb
push
in
xchg
or
movsb
xlat
fldt
decl
inc
dec
lock
lock
push
jge
sbb
icebp
mov
ljmp
test
aas
push
jbe
repnz
clc
xor
add
call
int
iret
cmpsl
movnti
mov
mov
leave
add
addb
xchg
ret
inc
mov
push
mov
push
std
dec
or
inc
sub
mov
loop
cwtl
jg
aad
nop
stos
cmpsl
and
lret
je
aam
rorl
jmp
das
xchg
and
lahf
movb
pop
mov
fidivl
add
aam
inc
pavgb
jp
push
mov
push
jno
fstpl
xor
enter
mov
pop
test
lret
in
les
mov
push
test
mov
mov
dec
lret
bound
test
mov
mov
fnsave
pop
mov
icebp
jle
and
push
mov
vmovdqu
xor
inc
cltd
and
add
pop
subl
outsl
xchg
add
fidivs
jp
cmc
into
sub
push
mov
mov
jge
sbb
test
vpsubw
sbb
xchg
cs
iret
dec
arpl
mov
dec
xchg
xchg
dec
xchg
jno
movsl
icebp
shrb
and
or
push
movsb
mov
out
clc
mull
dec
push
arpl
cmp
orb
fwait
lcall
sahf
imulb
iret
mov
cwtl
xlat
adc
push
rclb
and
mov
int
arpl
or
imul
cli
je
and
push
inc
jmp
or
sub
inc
cmp
sub
push
incl
imul
insl
pop
and
orl
cwtl
int
ret
arpl
cltd
sub
sarl
mov
inc
adc
imul
push
push
mov
rcll
in
sarl
xor
nop
hlt
int
mov
loopne
and
cmc
cmc
pmullw
dec
and
popf
cmpsb
mov
daa
imul
push
add
je
pop
dec
pop
or
cwtl
add
push
jo
jb
or
int
xchg
mov
jecxz
dec
xchg
jg
add
jge
push
push
push
adc
push
mov
xchg
inc
inc
aaa
in
pop
mov
mov
lahf
cmp
pop
add
nop
rorb
rcrb
push
loopne
cwtl
push
xchg
cmp
int
pop
fwait
sbb
iret
push
in
ljmp
pop
or
mov
mov
and
xchg
loopne
ja
xchg
xor
mov
adc
dec
push
scas
and
in
mov
xchg
cmp
in
lock
movsb
cwtl
rcll
xlat
jb
cmp
popa
aad
or
into
adc
push
sub
mov
adc
mov
jns
fmuls
and
testb
dec
xor
xchg
aaa
call
sbb
adc
fcomps
ja
arpl
push
inc
pushf
arpl
pop
sbb
dec
dec
adc
test
out
jns
addb
jae
jecxz
or
shrl
mov
in
mov
adc
add
sbb
xchg
addb
dec
jge
inc
out
jecxz
dec
mov
out
fiaddl
fiaddl
dec
loop
inc
jmp
and
loop
sub
out
test
push
add
movsb
push
outsb
inc
pop
mov
movsl
aam
repnz
mov
pop
js
pushf
lock
aam
xchg
sbb
dec
dec
xchg
dec
xchg
inc
dec
sub
inc
and
dec
js
push
loope
jns
subl
add
ficompl
leave
stos
dec
outsl
cmp
add
pop
sbbl
in
dec
adc
push
lcall
adc
cmp
xor
adc
xor
dec
cmpb
int
cmc
movsl
adc
adc
pop
shl
xchg
cld
add
ja
push
mov
push
test
add
sbb
xchg
insl
sahf
add
dec
push
xchg
int
mov
sbb
mov
sbb
in
arpl
mov
cltd
push
xchg
and
stc
mov
inc
out
pxor
and
outsl
out
mov
gs
xchg
int3
mov
cmp
adc
mov
rol
mov
mov
aam
sub
adc
outsb
in
adc
iret
push
fisubrl
lcall
lds
imul
mov
add
outsl
lcall
dec
sub
jae
repnz
sub
or
inc
dec
scas
cmpsb
cmp
mov
ja
cltd
sarl
mov
push
jle
dec
hlt
mov
repz
inc
jg
dec
adc
lret
dec
jae
pop
inc
mov
pop
jg
cmpsb
jmp
in
aaa
pop
mov
ffreep
out
movsb
xchg
cmp
xor
xor
mov
cs
push
sub
test
icebp
adc
cwtl
movsb
xchg
icebp
mov
jmp
loopne
inc
out
ja
push
sbb
fistps
mov
pop
mov
jle
into
adc
push
fsts
mov
outsl
cmp
mov
aam
xor
fnstsw
or
fmul
mov
push
adc
enter
jecxz
xor
mov
fwait
dec
movsb
leave
sahf
shll
sub
or
ret
push
out
mov
adc
mov
push
enter
ret
jg
cmp
jg
insl
mov
je
mov
or
mov
dec
outsb
sbb
jo
rcr
and
imul
loop
into
cwtl
push
testl
push
hlt
movl
sbb
out
xchg
scas
cmpsl
lret
fdivs
ss
add
movsl
testb
ret
mov
in
mov
jp
pop
cltd
dec
out
out
jb
jg
test
sub
les
cmp
sub
push
mov
or
notl
jge
out
pop
jecxz
shrl
cmp
lret
mov
addr16
fbld
push
lods
pop
jmp
movsl
lcall
es
adc
jae
inc
das
push
daa
mov
fcoms
ret
adc
scas
jo
insb
xchg
adc
iret
iret
lds
fcomi
ds
aad
icebp
ds
adc
bound
lea
lea
and
pop
je
sub
imul
scas
lods
mov
or
mov
sub
xchg
or
jno
icebp
das
cmpsb
mov
pop
pusha
mov
or
xchg
in
popf
pushf
lret
pop
leave
scas
mov
xor
nop
and
mov
xchg
pop
dec
dec
adc
inc
ficoml
iret
cmp
out
push
or
pop
imul
aam
push
jle
mov
xor
mov
mov
add
xor
out
lret
pushf
jns
xchg
stos
outsl
std
notl
jnp
leave
int3
jp
repz
hlt
out
inc
enter
sbb
pusha
out
jmp
int3
lods
in
push
adc
xchg
mov
out
imul
mov
int3
lea
inc
inc
call
cld
insl
or
push
jb
cmp
jmp
xchg
sbb
adc
mov
dec
das
scas
adc
data16
aam
cmpsl
add
pop
ret
mov
sbb
out
test
push
repz
sbb
out
stos
mov
gs
pusha
iret
jl
and
fiadds
das
add
movl
push
call
push
jb
mov
xlat
ja
adc
and
or
pinsrw
divb
mov
or
insl
fldenv
sbb
cmp
rclb
dec
out
in
ljmp
add
lock
xor
push
sbb
mov
in
push
in
push
or
mov
and
add
stc
xlat
xchg
loop
mov
push
and
adc
add
mov
hlt
or
loope
or
cmp
ja
mov
pop
mov
test
rcrb
int
xchg
ffreep
jl
inc
rolb
subl
jmp
sbb
or
dec
fnstenv
shrb
pop
mov
out
mov
mov
inc
bound
mov
scas
movsb
adc
ret
mov
sahf
ja
sbb
loopne
pop
inc
lock
jns
jnp
pop
or
jmp
daa
xor
dec
push
mov
cwtl
nop
fs
xchg
cmp
ret
inc
or
imul
xchg
aaa
mov
ret
fdivs
xchg
fcoms
sti
out
fucomp
shll
push
lcall
fsubs
inc
andl
or
push
fstl
test
mov
cltd
popa
xor
insb
fisttps
mov
imul
push
iret
mov
add
sti
loopne
movsb
in
cmp
push
adc
jno
fldenv
lret
mov
pusha
adc
and
mov
lods
mov
inc
sub
pop
add
sub
inc
arpl
mov
cwtl
test
and
sub
push
dec
xor
repz
add
mov
movsb
mov
pushf
scas
or
cmp
rcll
repz
mov
mov
adc
push
stos
cmpsb
pop
fistps
ja
mov
mov
and
outsb
xchg
cltd
stos
stos
and
dec
mov
inc
and
push
bnd
cmp
jo
lret
sub
mov
cltd
sahf
inc
cld
jg
rorl
jbe
sub
sarl
adc
sub
aaa
decb
fisttpl
cmp
xor
mov
jl
xchg
pop
or
int
push
mov
pop
inc
dec
cmp
into
push
sub
xchg
adc
xor
out
dec
adc
mov
iret
xchg
subl
xchg
mov
jmp
jb
add
pop
or
mov
cmpsb
pushf
sbb
and
rcrl
push
imul
jg
pop
aam
mov
xchg
js
cmp
cmp
xor
mov
dec
fbld
mov
movsl
cmp
out
sub
add
mov
jecxz
lock
jmp
cwtl
jle
insb
int3
lock
pop
insb
cmp
ljmp
mov
rcrl
fnstsw
pop
cltd
and
mov
out
dec
shl
jo
mov
scas
xor
loopne
dec
add
xchg
dec
ja
into
arpl
xor
jns
mov
dec
pusha
cmp
repnz
mov
stos
xlat
lret
scas
sbb
inc
pop
in
movsb
add
xchg
pop
fs
dec
dec
fs
jp
xchg
in
mov
mov
rcr
fldpi
mov
mov
sub
sahf
cltd
xor
loop
into
and
adc
sarl
jmp
addl
or
gs
sbb
into
aaa
addb
xor
clc
mov
setg
or
pop
sbb
sub
insb
cli
scas
mov
sbb
push
or
mov
movsb
cmp
push
lds
insb
pushf
mov
or
push
xchg
push
leave
mov
lds
in
jne
out
dec
xlat
ljmp
dec
andl
jg
dec
mov
daa
outsl
dec
sub
daa
es
or
pop
cmpsb
sub
sbb
and
mov
scas
nop
insb
shll
outsb
icebp
insl
out
loopne
icebp
sbb
sbb
ja
lcall
mov
cs
cltd
stos
test
push
cmp
mov
sarl
adc
movsl
rclb
lds
cld
push
data16
fisttpl
sbb
cmpsb
inc
jmp
inc
dec
adc
inc
movb
push
aaa
jle
test
jo
fsts
mov
xor
mov
stc
xchg
fstpt
cmp
in
lea
repnz
fsubr
dec
jbe
dec
and
mov
push
jnp
cmp
mov
push
call
add
add
fwait
inc
push
adc
out
std
pop
mov
mov
hlt
dec
sub
xor
fldl
push
call
test
stos
mov
imul
push
stos
jmp
sub
jg
and
cmp
mov
push
xor
cmp
cmp
sub
add
mov
lret
lgs
adc
dec
pop
pop
es
inc
sbb
outsl
out
jnp
jo
mov
pusha
test
addb
mov
xchg
std
push
popa
adc
pop
imul
jecxz
iret
sbb
adc
dec
lea
push
mov
hlt
notl
xor
repz
xchg
jae
ret
adc
add
fsubr
sub
inc
data16
push
popa
test
lret
jl
xor
xchg
repz
je
adcb
jmp
call
sbb
cs
push
gs
aad
data16
pop
ret
or
lret
in
cmp
int
mov
sub
cltd
arpl
xor
or
xchg
xchg
jecxz
xchg
insl
inc
mov
mov
fadd
scas
hlt
mov
xchg
xor
xchg
pop
jne
loope
dec
inc
out
pop
push
jae
push
sub
test
mov
leave
sbb
fiaddl
cld
mov
cmp
xor
scas
add
mov
jg
dec
test
pop
jns
lcall
dec
mov
jp
dec
dec
dec
fstpl
fwait
sub
ficoms
loop
pop
push
dec
bound
stc
in
nop
and
mov
adc
push
movsl
jmp
test
jnp
lea
adc
lcall
in
gs
aas
and
fistpl
mov
sbb
popa
lret
or
js
mov
cmp
insb
lea
xchg
xchg
sti
sub
xor
sub
mov
shll
cmp
iret
subl
fisubrs
pop
sub
mov
hlt
cmp
push
sbb
out
clc
and
enter
fimuls
fnstsw
add
mov
jae
xor
jl
daa
movsl
pop
out
inc
lods
popf
outsl
movsl
lcall
pushf
fcoml
mov
gs
mov
push
add
mov
mov
pop
clc
or
cltd
pop
testb
std
push
dec
cmp
mov
push
cmp
ret
push
fldcw
pop
outsb
pop
sub
adc
cwtl
repnz
mov
mov
arpl
and
aad
movsb
pop
sub
cli
xchg
or
sarl
fisttps
in
ss
sub
xor
push
sbb
cmpsl
jg
jb
stc
pop
fimull
insb
sbb
jae
lock
inc
sub
test
xchg
incb
xor
push
or
ret
fidivrl
aaa
dec
incl
mov
mov
cs
pop
jbe
jg
jae
and
inc
xor
std
test
sub
pop
jp
clc
fidivrs
repz
mov
cmpsb
int3
jge
out
push
ss
repz
dec
mov
mov
jle
sar
push
ljmp
test
jne
cmpsl
lock
fsubs
popa
mov
xor
mov
mov
fwait
insl
in
jp
into
sub
jp
ret
cltd
sahf
lods
popa
lcall
dec
cmp
nop
mov
push
xor
imul
filds
xlat
push
test
imul
and
imul
and
sahf
jo
jl
and
push
and
aam
cwtl
es
xor
add
js
clc
push
gs
bswap
dec
push
mov
push
ds
fdivrs
mov
xor
sub
adc
jbe
sbb
mov
ss
jb
ja
jae
jmp
stos
and
pop
lea
int
ds
in
jg
stos
jbe
dec
xchg
frstor
cld
adc
out
push
lock
popf
push
lock
add
hlt
mov
fwait
xor
or
xor
mov
cmp
or
stos
or
xadd
inc
push
dec
ret
sub
scas
int
inc
clc
lds
add
fs
mov
inc
adc
dec
sub
push
dec
pop
jecxz
shrl
iret
stc
addr16
fstpl
pop
push
ss
mov
test
icebp
push
adc
sub
cmpsb
lret
dec
jecxz
incl
pop
aam
and
inc
push
push
loope
mov
enter
mov
sub
push
ret
outsl
sti
insb
cli
pop
cmp
xor
int3
es
pop
cmp
ljmp
fwait
xchg
cli
sbb
test
imul
and
fildl
inc
jp
sbb
jae
lds
fnstenv
xchg
mov
enter
adc
lret
or
mov
int
xlat
pop
les
xchg
jne
repz
add
cmp
hlt
hlt
add
xor
jns
jge
push
jg
push
test
pop
lahf
nop
mov
int3
cli
pop
push
mov
jae
sbb
lret
adc
push
add
pop
in
jge
dec
push
push
lods
filds
jno
popf
xlat
sub
sub
mov
fistpll
push
dec
fsubrl
clc
push
ja
popf
mov
add
std
push
dec
inc
sar
cld
mov
sahf
and
sbb
lret
pop
lcall
aaa
leave
dec
mov
sarb
scas
test
in
mov
subb
lds
cmpsb
shll
inc
jne
xchg
lods
cwtl
mov
sub
fwait
xchg
mov
cmp
inc
mov
dec
sti
movsb
pop
sub
rorl
aaa
xchg
mov
and
clc
test
push
mov
xchg
jge
adcb
sahf
popa
jge
sbb
jecxz
repnz
jle
inc
loop
outsl
ret
lods
out
and
test
jbe
cmp
cmpsb
or
jg
push
and
ljmp
stos
test
push
out
shrb
mov
pop
pop
out
pop
rolb
xchg
mov
popa
add
adc
pop
push
fnstsw
mov
into
stos
lcall
into
out
mov
mov
jg
aas
add
cmpsl
inc
dec
sbb
es
jb
xchg
sub
mov
lahf
sbb
xor
insb
xor
mov
cmp
loopne
imul
repnz
daa
sbb
enter
push
fwait
jge
stc
jae
cmp
cmpsb
out
out
lret
inc
cmp
xchg
adc
hlt
adc
sbb
fistpl
adc
push
sub
push
jns
mov
dec
fidivrs
rol
gs
jbe
icebp
push
sub
loop
push
ret
push
repnz
push
adc
fs
jno
add
mov
push
ds
pop
daa
das
push
inc
in
jecxz
fcoml
out
lock
dec
fsubrs
sub
pop
cwtl
outsb
fsubl
sbb
jnp
cs
out
loopne
sti
pushf
ret
inc
cmpb
dec
fnstsw
insl
cmp
mov
jmp
imul
inc
out
pop
popa
dec
sub
cmp
mov
ds
add
xor
xlat
xor
xchg
sub
jne
stos
mov
negl
push
mov
dec
out
sbb
icebp
or
sti
or
cmpsl
in
and
cli
mov
sbb
subl
or
gs
rorl
mov
aas
jns
cmp
js
imull
sbb
or
outsb
sbb
mov
icebp
or
in
jno
push
ret
test
cmp
or
xor
mov
shl
jno
fstpt
add
or
pop
add
or
pop
cltd
mov
loop
mov
mov
mov
sub
repnz
cmpsl
jmp
nop
jg
and
sub
lds
loope
or
mov
add
xchg
idivl
mov
dec
pop
sbb
xor
jb
cmp
adc
or
dec
xor
aad
rclb
pop
in
je
mov
fldz
jns
sub
imul
lods
ljmp
xchg
dec
jno
outsl
or
adc
pusha
jp
imul
sub
sbb
arpl
xchg
dec
in
outsb
pop
rol
cld
push
leave
xchg
popa
jb
repnz
xor
adc
mov
mov
es
jae
xchg
dec
test
and
pop
cmp
push
cmp
pop
add
or
mov
in
fadd
jb
fadd
loop
dec
add
adc
add
dec
push
jecxz
adc
mov
lret
xchg
pop
aas
and
mov
repz
add
push
add
xchg
enter
movsl
test
in
das
lahf
xchg
js
std
sbb
dec
je
mov
es
lret
mov
in
mov
out
push
mov
adc
and
jle
fdivs
mov
aam
xlat
bound
pop
inc
mov
mov
lret
ret
and
fsubrl
and
stc
dec
pop
jns
and
xchg
inc
bsf
inc
add
xor
arpl
decl
in
push
mov
lods
xchg
xor
in
ret
jae
add
jge
mov
dec
fldl
add
pusha
cwtl
in
fmull
test
loop
jle
stos
outsb
cmp
dec
mov
call
cmp
jmp
scas
fsts
inc
fiaddl
sub
mov
pop
inc
cli
and
mov
push
ljmp
mov
or
into
int3
inc
mov
shrb
push
mov
data16
push
pusha
jp
imul
cmp
sub
cwtl
push
jmp
sarb
out
leave
and
ret
push
fnstenv
jle
add
shl
cwtl
jns
call
sub
je
sbb
sbb
fucomp
lds
pushf
scas
jne
test
outsb
insl
pop
mov
pop
pop
test
mov
sar
jno
or
lcall
adc
jmp
push
stos
sub
test
jo
sub
pop
jmp
inc
jecxz
pop
rolb
inc
and
xor
cmpsl
push
test
or
outsb
fistpl
pop
cmc
xchg
cmp
push
imul
sbb
loope
jg
loop
daa
cltd
mov
mov
mov
test
into
test
fbstp
rcrl
mov
insb
shlb
les
in
jnp
xchg
gs
xor
loop
xor
das
inc
js
int
and
pop
mov
pop
scas
imul
push
cmpsb
imul
cwtl
test
and
xor
jl
add
stc
ss
les
sub
movsl
divl
out
sbb
pushf
lods
jmp
xor
mov
fwait
mov
xor
mov
outsb
pop
inc
xchg
movsl
lret
in
mov
push
mov
adc
push
cltd
pop
and
jbe
repnz
das
int
addr16
push
cmp
loop
ss
and
mov
mov
and
lods
sbb
lret
xlat
loopne
mov
aaa
neg
mov
mov
cmpsl
jns
adc
jp
roll
cmp
lret
mov
lods
xor
adc
or
and
outsl
arpl
icebp
or
aam
or
jnp
sub
mov
pop
cmp
mov
or
dec
cmp
jo
je
ja
mov
pop
mov
mov
dec
pushw
cmc
sbbb
aad
in
adc
lcall
movsb
stc
inc
xchg
rcrl
aam
inc
xor
stc
imul
in
mov
leave
sub
mov
fcmovnbe
fwait
sbb
outsb
sub
js
in
aad
mov
or
cmp
iret
sahf
iret
test
mov
fbld
gs
iret
and
mov
in
std
sbb
add
add
sub
ret
sub
aaa
sub
xchg
push
lea
pop
push
sub
ljmp
jo
xor
xorb
mov
sbb
push
frstor
push
jp
push
sbb
aad
inc
sti
cmp
ss
push
out
int3
int
cmpb
jne
fs
pop
pop
pop
pop
clc
mov
sarb
add
push
test
test
mov
cmp
call
push
repz
push
lcall
stc
add
je
push
dec
cmp
fs
cli
add
in
insl
mov
int
xchg
pushf
jb
fwait
imul
adc
fldt
pop
cmpsb
push
push
test
insl
outsb
insb
loope
push
or
pop
imulb
mov
mov
push
adc
or
jno
and
out
mov
xor
cmp
ds
imul
lahf
sub
pop
mov
xor
adc
dec
xor
inc
or
push
out
or
xor
xchg
and
dec
loope
mov
stos
or
outsl
mov
pop
subl
call
cs
lock
pop
mov
int3
jge
dec
lods
sub
fucomip
gs
fbld
shrl
cmc
push
gs
lock
fidivrs
sti
popa
mov
dec
scas
cmpb
push
cmpsl
into
and
arpl
xor
loope
and
add
mov
push
stos
insb
add
ud2
nop
popf
mov
or
mov
dec
insl
lea
push
dec
mov
rorl
mov
cld
sub
xor
clc
inc
rcrb
add
push
dec
xchg
cltd
inc
test
testl
andl
int3
or
adc
stos
jecxz
xlat
mov
rcrb
xor
dec
in
lret
call
adc
jp
in
xor
jae
lret
out
decl
jecxz
push
imul
lock
test
fwait
sbb
in
push
or
jge
xchg
mov
xchg
push
loop,pn
orb
ja
sub
movsl
fwait
or
test
and
mov
or
pop
xor
mov
lods
ret
lahf
jo
hlt
dec
push
popw
or
pop
jge
addr16
push
cmc
xchg
lds
mov
pop
enter
pop
xor
inc
jns
or
xchg
add
add
test
jb
ror
pusha
jecxz
pop
clc
mov
cs
inc
mov
mov
and
cs
sbb
test
mov
xlat
pop
negb
mov
jp
push
xor
cmpsb
mov
sub
stos
test
setle
mov
push
in
inc
adc
add
lret
jo
testl
hlt
and
jp
lea
out
jns
int
jg
in
jl
adc
or
data16
es
scas
adc
mov
addr16
xchg
aam
cmp
aam
testl
in
call
mov
fmull
nop
enter
mov
loop
cmp
jmp
sarb
shl
jb
fbld
sub
movsl
or
aad
fdivs
int
or
fisubl
fcmovbe
xchg
cwtl
jecxz
pop
mov
in
jbe
ljmp
xor
out
shlb
pop
ret
dec
bnd
xor
mov
xor
jmp
dec
lahf
adc
mov
fadds
sbb
lcall
daa
mov
push
or
xor
loope
das
ljmp
fildll
mov
add
das
addr16
rcll
ret
outsb
movsl
test
adc
adc
movsl
dec
push
sbb
out
add
cmpsb
mov
push
push
imul
int
push
adcl
fsubs
into
lcall
ja
sbb
jg
mov
dec
sbb
enter
bound
dec
xor
push
jne
push
aam
mov
lcall
jno
adc
add
inc
das
clc
lcall
add
mov
aad
je
sbb
test
pop
setno
dec
ret
mov
int3
mov
adc
stos
loopne
sbb
pop
jle
and
inc
test
pop
popa
jmp
daa
pop
and
repnz
jbe
call
or
leave
sbb
lret
push
daa
adc
imul
adc
movsb
add
add
and
adc
loope
or
pop
imull
movsb
int3
dec
and
dec
jo
sahf
mov
cs
cmpsl
adc
or
adc
std
jmp
mov
cld
add
mov
ss
cmp
loope
and
mov
adc
jae
inc
push
sarl
mov
mov
inc
sbb
out
icebp
fisttpl
or
adc
mov
shll
dec
mov
xor
sbb
arpl
out
mov
subl
movsl
dec
or
mov
pop
xor
mov
std
popa
lods
test
pop
and
add
outsb
xchg
decb
dec
mov
sbb
xlat
push
mov
test
fmuls
mov
ret
outsl
and
inc
lea
out
cltd
int
or
rcll
ljmp
sbb
inc
inc
out
or
lods
bound
out
pop
mov
push
cmp
mov
jae
repnz
jno
jl
sbb
mov
fsubp
cmp
cld
mov
lahf
aam
subl
addr16
les
jecxz
sub
xor
sbb
pop
add
pusha
ror
divl
test
jb
add
into
sarl
fstpl
jg
cmp
es
sbbl
sub
cwtl
adc
mov
cmpl
js
in
push
or
cwtl
leave
xorl
jp
imul
push
pop
cs
pop
sub
sub
rcrb
push
stc
outsl
push
popf
push
sub
pop
ret
imul
jmp
push
pushf
sub
mov
mov
fs
or
out
js
notl
inc
cmpsb
stc
insl
lcall
iret
adcb
fimull
test
test
push
shll
and
ror
ret
popa
jge
push
lock
inc
daa
cmp
mov
pop
loopne
cmp
popf
jns
movsl
fistpll
jl
add
test
and
sub
lods
insb
je
push
stos
int3
jo
and
in
mov
hlt
pusha
shlb
push
test
fdivrs
mulb
out
sub
pop
shll
imul
lea
cmp
or
inc
fadd
fisubrs
fwait
aas
adc
aad
ret
pop
cmp
or
ljmp
data16
xor
cmp
dec
cmp
inc
dec
mov
jge
out
jne
mov
push
inc
lds
mov
fs
popf
popf
outsl
sbb
movsb
in
movsl
lahf
pop
or
xor
outsl
lea
push
pop
inc
pop
repz
or
xchg
cli
mov
bound
insl
pusha
adc
or
or
loop
adc
xor
mov
jp
sbb
clc
pop
ror
fwait
dec
aam
ret
ss
pop
xchg
insb
sub
in
jne
pop
rolb
psubsb
fimull
or
dec
fs
push
repnz
ss
fdivrl
ja
sarb
push
cld
ret
test
adc
xor
insl
imul
and
ret
pushf
stc
jae
movb
xor
int3
pusha
sarb
add
dec
loop
mov
and
cwtl
sub
test
jns
clc
int
aaa
sbb
scas
divl
aam
mov
notb
jl
cltd
cmp
xchg
pop
mov
sarb
data16
repnz
mov
scas
gs
jecxz
xor
cmp
lcall
inc
jmp
fcomi
lahf
xchg
fidivl
dec
aas
shlb
fstps
xor
lods
jmp
in
adc
jg
push
adc
xorl
dec
pop
shlb
sub
jb
or
jmp
aaa
mov
addb
and
cltd
rorl
add
jg
xor
fcmovb
sub
movsb
inc
cld
mov
test
pop
dec
stos
inc
push
shrl
fwait
mulb
and
out
cmpsl
loope
lret
add
inc
btc
push
stos
xor
inc
addr16
test
dec
test
decb
pushf
add
inc
fisttpl
filds
ficoml
add
stos
lahf
dec
cmp
aam
fstps
sbb
outsl
cwtl
je
std
mov
sbb
in
xchg
clc
pop
dec
sub
dec
and
ja
or
xchg
lds
fadd
inc
jmp
push
add
push
inc
push
and
xchg
adc
in
lock
adc
push
in
out
push
fcmovnb
pop
push
xor
rolb
nop
stos
repz
cmpl
loope
sbbb
sub
std
and
mov
loope
xor
fwait
aam
cli
mov
pop
mov
pop
lahf
je
mov
cld
xor
cmp
je
sbb
and
and
xor
iret
xchg
xchg
dec
xchg
push
dec
cmc
les
into
icebp
jb
xchg
sub
jge
xchg
dec
in
xchg
dec
sbb
aam
cs
cltd
ss
gs
and
mov
mov
aam
rcrb
xacquire
imulb
dec
mov
daa
roll
out
cmp
xor
repnz
andb
pop
mov
imul
or
aam
mov
flds
inc
std
inc
adc
mov
nop
mov
out
xchg
test
inc
cmc
sbb
mov
lods
imul
xor
aam
rolb
les
iret
call
sub
outsb
or
pop
cmp
shl
test
jecxz
sarl
pop
inc
movsb
mov
lock
les
loope
in
outsb
insl
dec
xchg
out
xor
and
push
outsb
or
shll
imul
rolb
pop
dec
mov
dec
mov
push
cmp
xchg
adc
add
dec
fdiv
dec
dec
sub
lods
xchg
xchg
cmp
das
outsl
lea
add
sub
jns
add
xchg
jmp
call
mov
or
xlat
sbb
movsl
xchg
imul
jge
andl
aam
sub
mov
ds
adc
jg
fnstenv
dec
mov
mov
xor
xchg
les
loopne
sub
les
and
push
jns
xchg
cmp
xchg
xor
out
lea
inc
and
das
loop
enter
dec
pusha
mov
fbld
mov
pop
push
jle
aam
or
enter
shll
daa
imul
xor
sbb
stos
fs
xchg
sub
sti
je
loope
jns,pn
push
js
lea
bound
add
xor
xlat
lret
pop
dec
or
sub
cmp
sahf
test
sbb
jb
or
jg
jno
pop
in
jle
mov
sbb
jmp
inc
rcll
inc
leave
sbb
mov
les
push
push
sbb
xor
filds
mov
xlat
cld
lods
pop
jmp
aaa
mov
push
leave
add
adc
js
mov
in
push
and
cmpsl
shl
sbb
xor
sarb
roll
inc
subl
leave
pop
aam
xchg
xchg
fisubrl
jg
in
inc
mov
lret
mov
add
inc
sbb
push
push
add
test
cltd
jmp
push
roll
mov
or
inc
xchg
inc
xor
out
inc
jp
lock
xor
test
ljmp
mov
cmp
aad
dec
jp
cmp
mov
test
ret
cmc
std
sub
sbb
add
sbb
push
push
pop
push
mov
pushf
dec
push
pop
into
leave
add
jne
cmpsb
ds
cltd
fistps
lcall
jae
mov
pop
nopl
dec
mov
lods
pop
jg
xor
cmp
jns
shl
jmp
fnstcw
out
out
les
and
jmp
push
in
orb
ds
pop
cmp
push
les
jge
push
inc
adc
dec
int
repz
cs
inc
stc
or
and
or
mov
sahf
nop
lahf
and
inc
leave
std
mov
jl
mov
xchg
cmp
pop
adc
mov
fwait
pushl
pop
mov
dec
xor
test
nop
pop
imul
adc
jp
or
push
into
pop
mov
test
xchg
das
cmp
mov
sbb
pop
pop
sub
push
cmp
sbb
and
fwait
add
lock
push
push
cmpsl
insl
adc
jb
adc
adc
test
xchg
push
xchg
mov
pop
xchg
mov
dec
loop
mov
fldl
mov
add
mov
xorb
or
xor
jae
std
stos
aas
pop
nop
out
loopne
ud0
and
push
mov
or
mov
cltd
dec
mov
adc
mov
aas
sub
lcall
fwait
mov
call
imulb
mov
or
sub
xchg
jmp
lds
and
sub
scas
jns
out
enter
push
pop
xor
or
adc
out
mov
sbb
mov
sub
sub
pop
dec
fnstenv
jno
sub
mov
pop
dec
mov
in
or
jge
mov
leave
push
jecxz
cmp
dec
pusha
data16
mov
pushf
imul
into
popf
bound
inc
and
cli
xchg
add
dec
lret
les
xchg
jg
pop
shll
xor
cmp
divb
clc
stos
hlt
add
push
adc
popa
loop
push
fldt
push
ret
push
sub
xchg
push
xchg
jmp
xor
repnz
add
fistpl
cs
xor
push
jecxz
lret
outsw
or
icebp
sub
cmpsb
iret
loope
or
add
mov
dec
sahf
js
or
jecxz
loopne
cmc
in
daa
mov
int3
xchg
pop
add
and
pop
adc
stos
xchg
adc
insl
jnp
js
mov
pop
int
lds
sbb
mov
mov
and
rolb
jmp
in
enter
sbb
push
push
pop
pop
in
pushf
out
push
testb
push
movhps
push
sub
sub
inc
mov
jp
dec
sti
add
push
pop
xor
nop
lcall
ljmp
mull
cmp
push
ljmp
aaa
out
push
or
pop
xchg
dec
add
imul
test
scas
xchg
std
inc
push
mov
subl
or
inc
jnp
lcall
cld
aaa
jg
add
in
and
in
test
pushf
test
lahf
jo
bound
mov
xchg
stc
or
mov
inc
jmp
cmp
in
xchg
aas
mov
sub
pop
jae
lods
jmp
lcall
mov
sbb
cmp
mov
sub
or
fsubrl
cld
jmp
int3
ja
mov
mov
out
lret
jp
mov
xor
push
cli
idivl
shlb
xchg
pop
xor
adc
cld
les
mov
flds
in
data16
mov
xor
adc
or
loopne
ret
sbb
cli
lcall
repnz
inc
lcall
adc
mov
push
inc
addr16
in
mov
mov
out
pushf
dec
addr16
or
mov
addb
inc
int
push
and
and
lods
out
pusha
mov
pop
or
or
ljmp
inc
les
movsl
fistpll
ficoml
repz
and
out
push
xchg
pop
sub
ret
sbb
add
xor
ljmp
fadd
insl
enter
nop
inc
out
test
pop
and
mov
pop
cmp
aad
daa
ds
push
leave
in
cld
aad
or
cmpsb
icebp
fs
fcoms
inc
roll
cs
sub
adc
or
adc
push
or
aam
mov
pusha
in
jo
mov
push
adc
mov
insl
or
scas
jns
mov
sbb
xchg
cld
add
cmp
ja
shll
mov
lods
add
lods
push
xchg
iret
je
and
sub
jmp
pop
pop
ja
add
cli
mov
mov
jb
aad
lods
mov
cltd
cli
test
inc
test
das
inc
push
clc
jno
call
jb
int3
and
popf
sub
movups
hlt
sub
mov
push
shll
mov
mov
rolb
xor
jno
add
nop
dec
mov
cmc
mov
mov
mov
popf
clc
cmp
sahf
jl
cs
fcmovb
scas
pop
mov
lret
push
sbb
sub
imul
mov
pusha
iret
iret
lea
lds
ja
aam
aad
loope
xchg
les
out
lcall
testl
pop
pop
mov
out
les
movsl
mov
lea
shll
das
int3
cmp
pop
in
sti
rorb
fnsave
cmpsl
mov
mov
push
enter
jbe
inc
inc
cwtl
jle
test
shrb
nop
mov
pushf
cmpsb
jb
pop
sbb
or
sub
insb
xchg
popf
pop
fldcw
aam
in
jnp
cld
mov
dec
lret
int3
pop
xor
jno
cltd
pop
xor
adc
ret
sahf
sti
xchg
cld
or
jo
push
push
mov
mov
xchg
dec
loopne
jle
jp
and
mov
mov
in
or
lods
test
insb
xor
push
ret
dec
lods
in
and
call
imul
mov
pop
fdivp
aaa
push
aaa
aas
icebp
inc
dec
xor
sub
lea
jno
je
pop
outsb
jb
add
notl
shll
pop
xchg
sbb
setbe
push
cmc
sub
lods
mov
mov
cmpsl
fldt
or
dec
cmpsl
xchg
sahf
push
aad
xchg
lcall
cmp
dec
xor
jae
add
or
sub
orb
pusha
or
mov
pushf
fidivrs
pop
push
mov
sahf
push
icebp
scas
xchg
and
stc
and
jbe
mov
movsb
jmp
int
loope
stc
sub
dec
xlat
xchg
push
mov
movsl
jno
xchg
xchg
cwtl
mov
shlb
loope
lret
outsl
mov
xchg
imul
sbb
test
popa
jmp
subl
xor
jg
jne
repnz
clc
push
bound
pop
inc
xchg
xlat
in
mov
ret
psubsw
jmp
imul
push
sbb
jl
out
lahf
mov
ja
jle
lret
mov
out
js
mov
mov
scas
cmp
lret
daa
addr16
stos
push
fists
push
ficompl
loopne
int3
lock
shlb
adc
imul
call
sbb
clc
lock
jle
scas
aam
fldl2t
call
mov
mov
pop
pusha
dec
push
pop
jnp
mov
mov
or
mov
mov
add
jle
hlt
mov
ljmp
add
xor
pop
dec
aam
test
jmp
scas
imul
mov
inc
movsl
mov
lock
jmp
int
fdivrp
es
add
lret
out
add
clc
sbb
std
fstpt
outsb
lea
aam
loope
arpl
sarl
jbe
add
in
xor
jmp
jb
cli
call
aas
and
mov
rorl
mov
mov
inc
call
mov
mov
pusha
and
xchg
sub
ret
pop
cwtl
negb
inc
in
add
inc
dec
std
cltd
xchg
into
push
sbb
mov
pop
data16
pop
and
inc
mov
or
jb,pt
clc
jle
loop
subb
xorb
mov
in
or
dec
scas
xor
dec
fistps
mov
adcl
xchg
push
mov
push
push
dec
ja
jbe
fcompl
lds
sub
imul
adc
stc
sbb
int
aam
jg
cmpsb
push
mov
test
insb
lea
icebp
clc
mov
lods
push
call
test
push
insl
xchg
bound
cmp
pop
sbb
mov
push
inc
add
sbb
cmp
cmp
mov
fsubl
mulb
sub
repz
xlat
inc
cmp
fsubrl
inc
jmp
bound
shl
movsl
dec
out
scas
sbb
jns
pop
add
cmc
lret
test
je
aam
stos
pop
mov
push
jne
je
and
jl
adc
andl
ffree
lods
push
push
inc
inc
push
flds
dec
sub
push
xor
imul
pop
adcb
pop
lret
sbb
mov
add
jle
or
push
xchg
xchg
dec
lea
loope
cmp
rcr
add
inc
jbe
loopne
les
mov
fisttpll
mov
jne
call
inc
outsb
jnp
push
cmp
adc
adc
jle
arpl
add
ss
sub
lds
daa
insl
and
fmull
hlt
das
xorb
and
loopne
xor
sbb
xchg
adc
pop
icebp
push
sub
lods
lods
mov
mov
and
test
test
mov
loop
ss
pop
leave
pushf
xchg
cld
adc
js
fisttpl
pop
adc
iret
das
fs
and
cmp
imul
divb
cs
pop
pop
ds
jecxz
imul
xchg
mov
sub
xchg
fsubr
aad
cmp
dec
cmp
jp
pop
test
jmp
jg
jbe
xchg
aad
jecxz
je
xor
mov
cmpsb
or
sub
mov
xor
ret
into
pop
mov
popa
pop
shlb
in
addr16
xchg
sub
nop
lahf
aad
adc
push
jp
cmp
xor
test
push
jl
insl
dec
inc
cli
xor
and
or
sbb
sub
jl
pop
adc
xor
or
lahf
fcoml
cld
mov
test
mov
icebp
in
in
adc
sbb
insb
mov
out
lret
or
cmc
cwtl
inc
ficoml
test
mov
lods
in
popf
add
ljmp
js
dec
inc
mov
jmp
or
pop
push
xchg
xchg
inc
insb
movsb
mov
push
jbe
mulb
cmc
or
mov
adc
pop
js
test
ljmp
and
push
cmp
mov
fidivs
push
divb
mov
mov
dec
add
add
gs
repnz
lret
lretw
nop
jle
sti
jae
xchg
xlat
fdivl
xor
inc
hlt
outsb
fdivrs
mov
pop
dec
pop
aam
push
es
and
test
pop
jb
dec
push
test
mov
fistpll
inc
mov
cmp
jl
mov
icebp
aad
mov
rorl
cmp
and
sbb
mov
out
add
test
pop
cmp
adc
sbb
inc
aam
rorb
mov
les
inc
sub
incb
inc
push
cmp
adc
sbb
adc
mov
xchg
xchg
cmp
push
hlt
xchg
pop
and
pop
sti
adc
mov
push
repz
repz
insb
in
rcl
shrb
out
mov
aam
fmulp
outsb
in
js
mov
xchg
decl
ficomps
pop
add
jns
int
sbb
mov
jmp
mov
jle
jb
ds
jne
jecxz
gs
mov
pop
icebp
push
insl
add
push
inc
es
push
dec
xor
jg
sub
add
aas
adc
jb
testb
xor
lret
dec
frstor
and
xchg
mov
sahf
xor
insb
jg
pushf
aaa
sti
lock
push
ret
and
sbb
nop
popf
jmp
fwait
cmp
rorl
pop
inc
test
clc
sub
adc
xchg
mov
sub
andl
or
lcall
cmp
insl
mov
or
iret
xchg
jno
enter
cmc
sar
cmc
mov
into
popf
btr
loope
cmpb
data16
je
push
mov
sbb
movsl
loope
or
push
repnz
lock
or
scas
cmp
std
iret
je
sahf
jnp
jo
and
xchg
xchg
push
pop
and
arpl
fwait
sbb
jno
out
arpl
aaa
aaa
shrl
mov
xchg
cmp
fldl
and
xor
lods
add
in
pop
lret
mov
sub
imul
add
fs
mov
outsl
in
pop
jnp
or
mov
test
in
push
cmpb
add
sbb
shll
or
or
xor
test
out
ds
iret
repz
sbb
adc
hlt
xchg
xor
loop
xchg
inc
adc
or
sub
shll
mov
fcompl
add
mov
pop
les
js
and
pop
insl
pop
adc
mov
pop
enter
arpl
push
pop
daa
out
stc
push
popf
xchg
or
nop
mov
adc
stos
dec
sub
mov
sahf
xor
enter
push
adc
xchg
into
rcl
push
dec
add
clc
loope
sub
inc
ds
jns
mov
xlat
out
cwtl
sahf
aad
ljmp
in
lods
int
and
push
inc
mov
adc
mov
jns
lock
dec
ret
insl
outsb
adc
in
jns
mov
mov
les
xor
mov
pushf
rcrl
add
aad
cmp
sub
cmpsb
lret
in
out
lods
add
sbb
or
jbe
inc
movsl
leave
sbb
dec
insl
loop
wbinvd
out
add
orl
dec
xchg
or
cs
pop
test
fxtract
jb
ret
jecxz
push
push
add
arpl
popf
dec
pop
jmp
mov
iret
push
in
inc
lock
adc
push
mov
pop
inc
sub
ja
aaa
push
dec
dec
iret
push
or
sub
inc
sub
cmpsl
xor
icebp
or
out
cmc
data16
mov
push
xchg
popa
shrl
sbb
test
inc
sahf
add
jno
sub
call
stos
xor
pop
lahf
fcomi
pop
mov
lods
xchg
push
lret
inc
mov
jecxz
and
pop
inc
inc
and
mov
push
imul
push
in
jl
adc
mov
std
mov
fs
sub
inc
mov
inc
dec
aaa
cmp
fcompl
jnp
sub
repz
push
hlt
pop
dec
push
popf
xchg
cmpsb
and
mov
mov
jns
lahf
add
loope
out
sub
das
pop
jle
insl
push
scas
cmp
add
mov
mov
cmp
xor
js
rorl
nop
ljmp
idiv
mov
jae
cmpsl
pop
mov
fs
aad
cwtl
sbb
mov
dec
aad
inc
mov
ret
push
lds
aam
rcrb
pushf
cwtl
repnz
std
add
call
xchg
dec
dec
scas
fdivs
jecxz
mov
and
push
inc
daa
lods
push
repz
push
or
sbb
loop
pop
add
cmpl
inc
call
into
loopne
pop
push
xchg
fimull
stos
ss
jecxz
loope
or
mov
test
xor
mov
cmpsb
xchg
pop
insl
std
and
imul
mov
xchg
idiv
inc
adc
push
mov
push
out
frstor
aas
and
outsb
jle
inc
pop
call
int3
cmp
aad
orb
mov
rcl
push
in
and
pusha
enter
shlb
inc
pusha
cwtl
cmove
add
dec
xor
fiaddl
mov
mov
aas
rorb
mov
mov
jo
out
add
inc
loopne
jle
sub
mov
xorl
cmpsb
je
cmp
scas
jle
and
push
xchg
adc
and
imul
dec
mov
cmp
aaa
mov
add
mov
inc
cmp
daa
out
pop
xchg
nop
and
lods
std
add
or
cmovp
xchg
mov
jno
insb
iret
imull
rsqrtps
add
stos
inc
out
sbb
stos
xchg
pop
push
xlat
mov
mov
xchg
out
push
adc
or
ja
mull
and
lcall
dec
shr
push
enter
aaa
lods
xchg
push
fcmove
or
cltd
xor
stos
pop
mov
dec
je
inc
jo
ret
lds
je
fdivr
loopne
push
pop
sbb
push
xlat
and
push
dec
or
adc
int
push
and
dec
xchg
jns
jns
out
xor
shll
les
cmpsb
jg
mov
and
into
imul
sarl
mov
sub
cmpsl
adc
ss
dec
mov
arpl
mov
jmp
aas
push
jmp
jmp
sbb
push
mov
lcall
into
mov
int
fstps
je
cltd
popf
rcrl
fs
icebp
pop
adc
sub
mov
push
aam
pop
mov
insb
and
or
and
push
add
push
jnp
xor
push
jmp
adc
xchg
loope
inc
xchg
sbb
pop
xor
loopne
pop
xchg
jns
mov
add
xor
shrl
hlt
jb
sbb
mov
ljmp
dec
shll
and
push
sub
repz
fisubrs
in
and
adc
iret
sub
or
or
xchg
arpl
js
das
outsl
and
pop
mov
test
inc
icebp
jno
dec
mov
jle
jg
jne
mov
inc
stos
pop
aad
lods
bound
sbb
push
jl
sbb
mov
sub
clc
sub
pop
fidivl
xchg
mov
sti
int3
mov
add
rcr
aas
insl
fldenv
mov
aas
push
sub
fbstp
lods
push
cli
pop
gs
nop
cld
sar
sub
ficompl
lea
jge
cmpsb
jl
popf
jmp
sbb
or
scas
dec
out
loope
nopl
mov
data16
lock
repz
gs
clc
sbb
fsubrl
jge
clc
fisubs
lret
adc
cmp
sbb
and
mov
mov
fisttps
pop
adc
sbb
scas
movsb
sbb
dec
mov
add
cmpsb
mov
stc
aas
lcall
jns
sub
out
push
and
idivb
xlat
push
mov
xchg
cs
jge
jle
pop
pusha
rcr
inc
out
mov
subl
mov
outsb
es
repnz
sub
xor
faddl
mov
xchg
cmpsl
gs
das
jae
out
push
xchg
shlb
cld
dec
iret
daa
inc
insl
add
cmp
mov
mov
xchg
pop
jmp
jmp
out
xchg
test
pop
cmpsl
repnz
imul
dec
call
lods
out
ret
cmp
stos
andb
loopne
jmp
xchg
out
dec
imulb
cld
jmp
addr16
rorb
xchg
dec
push
ljmp
jp
mov
dec
or
addr16
add
scas
dec
test
mov
xchg
std
dec
mov
rorb
scas
jae
xor
inc
push
call
mov
bound
adcb
inc
inc
xchg
cld
pusha
fsts
nop
cwtl
cmp
xchg
mov
xor
jecxz
inc
sbb
xchg
inc
pop
push
inc
daa
push
sub
sti
inc
cmp
dec
icebp
jbe
sarl
subb
mov
inc
mov
push
insl
mov
repnz
int
sub
mov
pop
cmp
sub
pop
ss
repnz
jb
and
jb
xchg
out
pop
or
gs
xor
scas
adc
dec
push
cmp
push
sub
jb
adc
inc
mov
rclb
jecxz
jge
mov
imul
xchg
mov
mov
test
add
sbb
inc
test
mov
or
cmova
pushf
add
push
xor
adc
bound
push
lcall
sub
jp
mull
aad
addr16
mov
xchg
mov
dec
inc
xor
cmpsl
jns
rorb
leave
inc
mov
repnz
clc
adc
xchg
cmp
jbe
and
int3
sub
mov
xchg
int3
or
fsts
mul
cmp
sbb
mov
sbb
and
and
movsb
push
xchg
addb
pop
arpl
les
xchg
xchg
aam
xor
bound
arpl
call
jmp
sub
lods
xor
fadds
icebp
cmpsb
xor
push
ss
mov
mov
add
or
xchg
fstps
mov
or
pop
and
data16
cmpsb
xchg
out
sub
dec
push
dec
lret
dec
pop
mov
mov
test
out
out
stos
imul
jge
xor
sbb
cli
and
js
xchg
add
adc
inc
cmp
and
insb
addr16
xchg
popa
les
cwtl
inc
lahf
pop
out
cmp
push
adc
addl
lods
subb
into
jp
int
xlat
int
xchg
mov
jnp
ja
insb
out
rcll
pop
pop
or
jb
push
push
mov
out
pop
cmp
ja
dec
mov
filds
xor
sysexit
fcoml
notb
cmpsb
inc
xchg
mov
jb
cmp
stos
icebp
daa
sub
stos
adcl
xor
outsl
xor
jno
popa
fisubs
inc
inc
jl
push
mov
pusha
or
dec
mov
pop
mov
add
and
repz
mov
jmp
jp
jp
cmp
mov
ret
pop
cli
in
dec
inc
and
clc
dec
cld
jmp
cmp
pop
faddl
pushf
sbb
sub
mov
in
xchg
mov
and
and
inc
add
mov
lds
add
out
sub
out
mov
push
xor
subb
ds
rorb
sbb
sahf
and
je
mov
bound
leave
cmpsb
fisubs
push
sti
fildl
cmpsl
or
pop
adc
xor
sbbb
mov
clc
aad
andb
in
mov
ds
test
repnz
push
mov
js
push
rcrl
lea
and
in
lods
aaa
testl
xchg
dec
mov
inc
sub
sub
xchg
hlt
in
and
or
popa
ret
daa
or
pusha
and
les
ret
mov
sbb
jnp
sahf
push
mov
dec
jge
popa
pop
mov
scas
insb
lret
scas
in
movsl
aaa
sbb
outsl
aaa
xchg
adc
sbb
mov
into
dec
stos
rorl
mov
insl
sbb
xor
mov
jnp
mov
mov
jp
push
jl
repz
sub
iret
push
add
inc
push
mov
gs
cmp
jl
test
add
movsb
aam
pushf
dec
aas
scas
inc
loopne
push
in
cmp
cmpsb
stos
es
fisttpl
mov
mov
divb
add
or
xor
pop
repnz
or
rcr
and
jo
jb
dec
fcomps
fldt
mov
inc
mov
pop
fadds
scas
pop
lret
in
mov
add
imul
lahf
adc
push
sub
xchg
mov
lcall
cltd
xlat
ljmp
xor
sub
push
dec
movsb
mov
or
hlt
add
mov
ret
jae
into
adc
cmp
mov
pop
and
inc
cld
enter
mov
daa
stos
loopne
les
ret
dec
dec
movsb
cmp
xlat
xor
dec
xor
mov
std
mov
shll
popa
push
jnp
lcall
test
xchg
jns
lcall
pop
ret
dec
push
ret
fsubrl
cmp
cmp
in
stos
repnz
mov
jo
lret
insb
jbe
jle
mov
cmp
pop
into
jg
jb
pusha
lds
lcall
mov
icebp
aaa
stc
and
frstor
or
stos
test
scas
xor
mov
xchg
sarb
mov
addr16
mov
add
add
mov
add
fwait
test
int3
sbb
lock
inc
and
sbb
movhlps
pop
fs
movsl
xchg
mov
push
faddl
es
mov
xchg
adc
cltd
adc
imul
inc
jb
pop
push
lret
mov
cmc
jle
lret
mov
lds
add
rcrl
outsl
pop
lret
arpl
and
add
add
or
adc
xlat
lret
pop
cltd
add
fstps
push
xchg
mov
insl
dec
loop
pop
imul
push
push
pop
push
dec
push
sbb
insb
jns
xor
inc
ret
xlat
lods
add
rcll
mov
loope
loope
jmp
xchg
inc
rorb
setae
or
fldcw
mull
and
mov
dec
popf
stos
ja
push
mov
xchg
lret
lods
movsl
scas
repz
test
lret
adc
or
pop
scas
scas
cmpsl
adc
xchg
cmpsl
mov
scas
xchg
mov
aas
xchg
ret
loopne
push
repnz
sbb
push
movb
aaa
lret
aam
mov
mov
sbb
xor
ror
adc
cwtl
push
es
mov
vaddpd
sbb
into
and
inc
pop
sbb
pop
mov
orb
mov
push
pop
or
ja
imul
add
or
notw
lcall
in
push
and
mov
gs
dec
push
stos
movsw
mov
sti
cmp
scas
testb
xchg
aam
out
pop
lods
loop
mov
daa
pusha
pop
xchg
cld
in
sbb
pop
bswap
int3
aas
loope
imul
lock
fiaddl
lret
int3
lahf
jg
cmp
insb
pop
test
sub
fwait
ror
std
adc
arpl
pop
cmp
daa
xchg
aam
xlat
mov
push
jecxz
leave
jl
pop
int3
add
mov
push
dec
int3
xor
jl
notb
xchg
roll
ljmp
or
pop
in
pop
lcall
mov
inc
xchg
cmpsb
jnp
lcall
out
mov
jl
adc
xchg
xchg
not
aas
dec
add
js
jne
rcll
add
ret
shlb
push
mov
cmp
sub
mov
or
cmp
inc
sub
outsl
fcompl
mov
cmpsl
fs
sbb
xor
and
outsb
pop
adc
stc
jg
push
movsl
cmp
pop
inc
pop
pop
mov
rcll
xchg
sbb
xor
arpl
inc
lret
xchg
mov
or
adc
or
xor
dec
or
loopne
push
sahf
cwtl
sbb
je
mov
jmp
inc
loope
pop
call
add
repnz
nop
les
inc
stc
xor
inc
inc
cltd
out
jge
mov
pop
test
and
dec
jnp
xchg
xchg
push
out
pop
adc
pop
stos
xchg
sub
out
pop
loop
lea
adcl
mov
repz
inc
and
inc
sbb
mov
gs
jmp
xchg
lea
adc
jecxz
in
jecxz
inc
inc
cmp
sti
cmp
pusha
cmp
and
fwait
in
sub
push
rolb
leave
mov
shrb
leave
lds
pop
xchg
sub
std
cmp
in
xor
je
cli
mov
mov
pushl
mov
pop
pop
into
pushf
popw
loope
filds
les
or
pop
mov
dec
xor
es
adc
adcb
out
mov
in
sub
shlb
dec
shlb
sub
xlat
outsl
test
leave
sbb
xchg
notb
mov
mov
or
out
xchg
inc
bound
lret
push
sub
cmp
or
adc
push
pop
jg
push
lahf
lcall
or
lahf
mov
int
pop
aam
not
aam
test
mov
shlb
lock
and
sbb
das
ss
dec
xchg
cmp
inc
shr
cmp
outsl
sarl
fcmovnu
fstpl
lahf
mov
mov
test
stos
jecxz
pop
sub
jle
ja
or
aaa
dec
inc
xor
adc
or
xchg
int
sub
dec
mov
mov
stos
push
cmp
aas
mov
xchg
stc
cmpsl
stos
pop
out
test
mov
mov
das
out
xor
jge
inc
xorl
repz
xlat
jg
ja
jecxz
scas
stos
mov
rolb
sbb
lret
shlb
bound
leave
adc
inc
imul
or
sbbl
test
pop
aaa
lret
repz
sbb
push
xchg
and
push
mov
sarb
fistps
pop
adc
add
push
popa
push
loop,pn
insb
dec
ljmp
dec
mov
aam
cmp
push
add
mov
or
dec
loopne
dec
and
cld
mov
flds
sar
cmc
sbb
fsubrl
add
test
xchg
scas
and
sub
or
jg
aad
gs
mov
cwtl
sbb
cmp
dec
mov
jl
rcrl
adc
jns
sbb
fbld
mov
add
loopne
jl
out
data16
mov
adc
sahf
and
pop
mov
sbb
or
push
cld
pop
inc
sub
mov
rclb
push
xchg
inc
sbb
jb
insl
fsqrt
lcall
add
stos
fdivrp
pop
cmpsb
nop
pop
leave
cli
xorl
push
and
adc
loope
jne
repnz
lock
ds
push
clc
xchg
xchg
dec
sub
dec
or
pop
sub
push
sbb
lret
je
jmp
aas
in
ret
pop
call
jl
add
cld
cmp
fstps
pop
mov
adc
push
push
add
subl
imul
scas
ljmp
rcrb
test
mov
mov
jnp
lret
movsb
lods
jne
call
stos
sar
xor
dec
mov
jle
pop
inc
shr
insb
or
jge
and
add
sub
lea
dec
push
int
js
roll
lds
inc
icebp
loop
cmpsb
mov
mov
sarb
adc
call
jnp
not
movsb
lahf
call
in
mov
inc
icebp
sarb
sub
loopne
loop
or
imul
xor
into
add
xchg
dec
hlt
mov
in
jge
mov
sbb
nop
push
test
mov
cs
leave
inc
sahf
mov
inc
pop
test
inc
iret
mov
sahf
add
inc
es
cmp
mov
dec
fisubrl
repz
pop
ret
flds
rcl
inc
jno
add
mov
in
lds
outsb
nop
mov
loopne
out
lods
dec
xor
rclb
mov
mov
icebp
adc
pop
mov
lahf
leave
push
dec
adc
fsubrl
lret
fwait
mul
in
scas
push
push
push
xchg
jmp
out
and
dec
dec
jmp
or
ljmp
cltd
fstl
push
adc
int
push
xchg
and
je
aad
out
sub
pushf
mov
cmc
and
dec
icebp
aam
fadds
mov
push
mov
add
das
out
add
mov
cmp
push
adc
mov
out
cmp
ljmp
add
ljmp
mov
xor
xchg
sti
xchg
cmpsb
jmp
and
dec
sbb
sub
ds
aas
stos
loopne
shlb
mov
iret
inc
das
adc
sbb
dec
or
xor
dec
int3
mov
fcmovbe
les
icebp
dec
jp
adc
push
scas
mov
or
in
aam
ja
mov
push
cmp
cltd
sub
inc
leave
ficoms
lea
rorb
pop
out
xorb
push
add
xchg
je
fst
or
les
cs
pop
mov
cwtl
push
dec
fidivrl
sarb
or
addr16
faddp
das
and
hlt
xchg
mov
xor
sub
xorb
and
mov
movsb
fsubs
sbbl
push
sub
xchg
dec
and
sbb
adc
xchg
mov
into
push
sub
or
push
test
xchg
cmp
mov
lods
add
sbb
pusha
fistpll
inc
push
addr16
daa
bound
xchg
test
push
scas
sub
ljmp
iret
ljmp
mov
add
push
push
adc
cli
std
mov
test
shrb
jbe
loope
dec
pop
enter
xchg
dec
xor
and
mov
xchg
mov
dec
sbb
test
test
lods
push
add
cs
push
shlb
inc
mov
push
insb
test
das
into
and
xchg
xchg
mov
xchg
xor
xchg
lcall
into
jnp
push
jp
lea
sub
inc
push
mov
aas
out
jbe
inc
mov
pop
lahf
das
in
cwtl
adc
js
icebp
mov
into
and
stos
sbb
fwait
push
and
adc
test
mov
movl
fwait
das
pop
cmpsl
aaa
or
mov
in
sbbl
es
pop
daa
rcr
sbb
pop
iret
shlb
sbb
je
jl
inc
mov
jo
popa
cmp
add
inc
mov
mov
insb
repnz
push
pop
push
outsl
and
shlb
loop
enter
xchg
jbe
addr16
xor
fstl
mov
or
cmp
lahf
adc
dec
jae
push
cli
sub
pop
loop
inc
adc
cmp
in
test
lds
xor
loope
int3
sbbb
mov
xchg
dec
dec
push
subb
into
repnz
pop
dec
lahf
xorb
jo
or
pop
push
out
imul
mov
hlt
ret
out
mov
lret
shl
add
stos
sbb
adc
mov
push
out
sub
pop
in
sub
add
sbb
or
dec
adc
test
cltd
pop
push
daa
jno
cwtl
pop
outsb
or
imul
mov
test
or
push
or
xchg
sbb
nop
int3
loop
adc
fs
mov
push
cmp
push
mov
or
xchg
pop
es
jl
je
in
lcall
lock
call
dec
lahf
xor
pop
insb
mov
pop
outsl
xchg
jle
clc
xchg
aas
mov
mov
cmp
add
mov
in
loope
xchg
aam
cltd
das
mov
xor
fistpll
or
out
lods
jbe
fisubl
cmpsb
mov
in
jmp
inc
test
xor
inc
int
gs
push
popa
out
idivb
push
dec
push
lret
or
rclb
cmp
mov
jb
or
push
repz
gs
pushf
mov
lret
push
adc
stos
arpl
push
das
clc
js
cmp
adc
or
ret
cmp
and
pop
cmp
lock
mov
inc
xlat
lcall
pop
mov
lock
pop
cli
ss
or
mov
push
in
cmpsb
inc
push
mov
leave
pop
xchg
mov
out
das
jge
mov
cmp
jmp
adc
lret
dec
mov
jmp
jmp
cmp
mov
cs
adc
mov
lea
jae
or
dec
jle
loope
in
pop
rcrb
mov
sub
lods
inc
fisttpll
push
jecxz
push
xchg
cmc
mov
or
pop
orb
gs
push
inc
push
lods
sbb
adc
mov
dec
inc
xor
negb
pop
stos
sahf
cmp
or
popf
xor
jo
cmpsl
sbb
lods
jge
mov
jge
ljmp
adc
leave
ljmp
push
cmp
aad
mov
daa
or
add
sbb
mov
and
dec
pop
stc
mov
subl
inc
mov
sub
ret
jge
dec
addl
addr16
sbb
jns
sahf
mov
mov
xchg
mov
in
add
hlt
fxam
lret
lcall
cltd
pop
data16
orl
xor
mov
mov
mov
mov
pop
test
sub
movswl
pop
and
push
pop
mov
dec
cmp
mov
mov
lcall
mov
loope
inc
jg
mov
push
stc
fldcw
pop
insl
es
jae
sub
mov
add
inc
sbb
jecxz
or
add
dec
pop
xchg
rcrb
icebp
xor
adc
ficoml
cmp
rcll
xchg
adc
je
test
mov
cmp
jne
enter
fidivrs
adc
xchg
ds
mov
movsb
cwtl
inc
sub
xchg
repz
stos
sbb
fdivs
xchg
mov
rcrb
mov
push
sub
adc
lods
rolb
sbb
daa
pushf
lahf
fldt
pop
xchg
fidivrl
mov
out
xor
adc
push
es
xor
ljmp
mov
loopne
xchg
scas
push
negb
cmp
xlat
divl
dec
sbb
lea
mov
and
popa
ljmp
das
push
add
andb
in
aad
outsb
or
bound
outsl
and
inc
lret
les
aad
out
adc
adc
jbe
dec
pop
or
sub
mov
push
sub
out
xchg
mov
das
mov
xchg
or
sub
sub
or
test
jnp
mov
pop
cmpsl
pop
mov
or
dec
adc
and
or
int
add
fsubl
lock
stos
shll
lds
push
xchg
pop
sub
scas
jecxz
lods
cltd
pop
sub
xchg
stos
shll
jnp
ret
movsl
enter
adc
push
addr16
xor
xchg
data16
push
outsb
gs
inc
ljmp
movsb
cmovp
jnp
push
mov
rolb
gs
xor
mov
movsb
push
inc
mov
shr
test
pop
movsb
addr16
sar
lds
test
jge
xchg
push
pushf
or
pop
cmovs
ficoms
int
stos
mov
das
push
xchg
lea
idivl
packuswb
test
testl
or
lods
add
mov
aam
jecxz
xor
mov
es
inc
or
addb
sbbb
dec
les
push
push
pop
jle
ficoml
stos
jecxz
mov
test
dec
pop
lahf
je
outsb
sub
mov
clc
sbb
mov
push
sbb
ljmp
dec
mov
mov
shlb
xchg
adc
xor
repz
jns
popf
ret
inc
adc
scas
adc
clc
clc
imul
sbb
pop
ss
jb
and
daa
xchg
clc
or
lea
xchg
xchg
ljmp
push
lods
push
push
test
pop
mov
jge
sub
out
movsl
mov
sbb
mov
inc
or
mov
jmp
pop
jg
xchg
lock
jb
push
mov
jl
call
add
scas
movsl
nop
les
aas
into
out
xchg
jb
cli
jae
div
add
or
xchg
mov
scas
es
cmpsl
das
loope
xor
test
and
lods
ret
xchg
mov
popa
mov
add
in
bound
pop
idivb
pop
mov
sub
call
jno
scas
js
iret
lret
cmpsb
pop
mov
mov
fidivs
inc
jo
aad
jmp
int
mov
daa
inc
cmpsl
xchg
jle
sub
mov
pushf
sbb
inc
add
mov
icebp
inc
xchg
jne
mov
lcall
push
mov
hlt
and
mov
push
push
xchg
adc
ss
dec
mov
fmull
or
mov
aam
cmp
insb
cs
inc
push
ret
push
jmp
mov
jb
out
enter
dec
xchg
sbb
leave
out
jne
mov
inc
inc
add
outsl
ja
test
popf
sub
ljmp
cmp
push
or
inc
ljmp
ret
sahf
test
dec
jmp
xchg
xor
out
inc
sbb
je
mov
out
fisubs
sbb
cmp
pop
insl
popf
roll
mov
orl
mov
sub
xor
pop
cwtl
push
cmp
adc
mov
es
mov
or
outsl
mov
imul
jp
sbbb
jp
and
or
stos
cmp
mov
push
add
inc
cld
pop
loop
fisubl
sub
sti
xchg
or
jle
jne
shll
repnz
cmp
ret
rcl
int3
jae
rclb
sub
test
inc
rorb
pop
lret
movsl
and
dec
push
cwtl
sub
jl
fidivrs
adc
add
cmp
cltd
xchg
out
test
xchg
lds
xchg
push
push
mov
mov
ja
xor
loope
mov
mov
pop
adc
fsubrl
mov
test
arpl
jae
ret
fs
mov
insl
out
jp
push
add
jbe
cmpsb
dec
ficompl
and
dec
in
add
call
in
mov
xchg
scas
iret
pop
or
xor
pop
popl
das
das
xorb
lret
cmpsl
movsl
sbb
cli
pop
or
pop
adc
aam
imulb
pop
xor
sub
fwait
xor
test
mov
call
fisttpll
repz
jl
dec
iret
dec
cmpsb
decl
push
jp
inc
iret
xor
pop
xchg
pop
xlat
cmp
popa
addr16
gs
add
add
pop
sub
ja
or
jae
fs
cmovle
adc
hlt
int
xchg
cmp
mov
incb
ficompl
stos
outsb
jmp
or
dec
adc
mov
mov
popf
or
inc
push
fsubs
mov
pop
pop
mov
shlb
rorl
cmp
data16
inc
in
mov
sbb
ljmp
mov
fld
mov
pop
or
push
js
push
pop
sti
mov
mov
push
mov
add
outsb
icebp
xchg
push
fsubrl
sub
sub
sbb
fwait
cmp
push
lock
sar
mov
inc
push
and
dec
popa
shlb
adc
jb
push
add
stc
sti
mulb
rol
insb
in
mov
mov
mov
mov
dec
or
add
test
jmp
int3
leave
add
xchg
loop
and
cwtl
cmp
xor
lea
pop
and
repnz
cs
sbb
out
sbb
das
xor
ret
dec
std
stc
sub
cmp
add
and
es
add
sub
add
in
jne
mov
aas
shr
sbb
mov
les
jnp
push
add
cmpsb
movb
aam
push
addr16
jp
bound
or
add
xadd
add
jecxz
mov
mov
or
sbb
in
lods
pop
shl
aad
inc
shlb
inc
das
inc
and
xchg
xchg
les
pop
popa
movsl
shrl
dec
inc
mov
adc
sbb
xchg
popa
out
jg
push
or
and
mov
mov
jns
and
or
sbb
loope
xchg
mov
xchg
out
lcall
adc
insb
nop
xor
enter
lret
sti
push
stos
mov
sbb
test
push
fistps
call
sub
int3
push
das
movsb
push
cmp
lcall
aas
notl
jbe
dec
jge
clc
adc
jmp
ljmp
mov
mov
and
cmp
or
and
fidivrs
add
xchg
jg
pop
int
fildl
out
xchg
xchg
and
pop
sahf
mov
add
mulb
push
pushf
ss
jecxz
sub
arpl
fidivrl
ss
push
idivb
mov
sbb
movaps
scas
or
mov
xchg
pop
test
cmpsb
addl
add
xor
push
mov
xchg
sbb
imul
scas
test
add
std
mov
aas
cmpsl
shlb
cmp
dec
adc
repz
cmp
jno
lcall
jl
cmpsl
std
cmp
repz
loop
fldt
imul
fcomps
in
icebp
or
mov
dec
cmp
ret
xor
lds
rclb
cmpsl
jp
dec
dec
dec
mov
xor
inc
jo
inc
pop
jge
xlat
push
mov
sub
sub
jge
pop
loop
cltd
mov
push
mov
pop
add
mov
pushf
loopne
pop
pop
movsl
jge
mov
and
add
les
sbb
popf
fcomp
pop
adc
sbb
push
negl
fnstcw
and
es
das
or
xchg
mov
movsl
pusha
fnstcw
call
mov
bound
push
popf
cmp
or
sti
pop
out
push
std
and
push
inc
adc
das
test
push
insl
aaa
fbld
push
jp
sub
ss
stos
push
push
scas
pop
sub
in
mov
sub
out
fsubs
sti
les
in
jb
sbb
and
adcl
mov
scas
mov
sbb
les
dec
iret
movb
cmp
and
inc
jp
inc
mov
jnp
stos
mul
divl
ljmp
pushf
out
jae
mov
jecxz
fsts
and
repz
les
leave
adc
dec
jb
idivl
cmp
jno
adc
xor
or
jp
out
scas
gs
pop
push
add
leave
hlt
idivl
repz
in
add
filds
jae
mov
xchg
mov
loopne
add
xchg
jmp
lds
pop
sbbl
pusha
pop
mulb
xchg
jl
sub
adc
mov
cs
xchg
pop
call
movsl
dec
inc
sub
inc
data16
lea
cmp
mov
fs
xor
pop
pop
jns
mov
loope
movsb
fs
gs
ror
cmc
in
out
fists
ret
popf
sbb
loop
push
add
shll
push
aas
mov
call
ret
insl
xchg
arpl
adc
and
and
pop
sbb
mov
xor
sbb
push
pop
bound
mov
mov
mov
orl
and
and
fwait
inc
xchg
scas
jbe
push
jmp
rcrb
or
sbb
xor
js
push
sbb
aad
xor
add
fsubs
cmp
mov
sar
rolb
add
pop
mov
insl
dec
aad
cs
daa
lods
and
jae
xchg
pop
pop
xchg
frstor
push
push
mov
xor
mov
jb
orb
pushf
mov
fmulp
es
int
xchg
sbb
pop
aaa
out
data16
cmc
mov
loope
and
clc
movsl
cmpsb
cmp
js
ds
sbb
dec
cmp
addl
rclw
test
dec
pusha
jmp
stos
scas
outsl
xlat
notl
shl
or
jp
xorl
cld
je
lea
push
jge
pop
push
adc
movsb
xor
adc
mov
push
adc
int3
sub
adc
sbb
mov
pop
pop
je
or
mov
test
mov
mov
pop
out
aad
jnp
test
fiaddl
cwtl
sbb
push
pop
addr16
mov
cwtl
nop
dec
aad
xchg
cmp
xchg
dec
xorl
sub
cld
lock
adc
or
inc
dec
mov
outsb
mov
out
xchg
lahf
cmpsb
or
pop
jecxz
mov
gs
dec
in
mov
ficomps
and
decl
dec
shl
add
xchg
int
cmc
mov
js
scas
adc
push
pop
rorb
lea
jl
xor
in
push
ror
in
cmp
rcll
in
loopne
and
mov
outsl
aas
jno
jl
popa
mov
xor
and
stos
fstpt
mov
cmp
mov
or
in
xchg
shl
lods
imul
cltd
jecxz
insb
inc
cmp
call
jg
dec
inc
jle
adc
aam
js
push
test
lods
cmpsb
scas
movsl
ljmp
rclb
lods
adc
xor
movsb
sub
mov
sbb
jl
mov
sbb
sbb
rcl
sbb
xchg
outsl
aam
std
push
xor
dec
jmp
inc
dec
mov
cltd
push
jge
fs
in
cmp
fdivrs
repz
fdivl
inc
pop
js
repz
ret
mov
lcall
call
es
rorb
dec
repz
add
jb
daa
push
pop
xchg
aam
sub
repz
jno
jp
test
xchg
or
push
sub
insl
lods
cmpl
dec
add
cmpsl
aam
fwait
movsl
rol
mov
mov
dec
cwtl
inc
add
cmpsb
xchg
xor
adc
push
aam
ljmp
lock
mov
inc
mov
push
xor
in
es
xor
xchg
cwtl
rcr
aam
imul
sbb
xor
shl
or
imul
fcomp
outsl
xor
mov
fsubrp
jb
mov
or
mov
sub
scas
cwtl
scas
or
mov
std
xchg
clc
int3
xor
pop
xor
int
ret
jmp
inc
adc
inc
push
inc
jle
xchg
test
mov
lea
cltd
add
mov
xchg
and
adc
fadds
sbb
jmp
sahf
cmp
movntq
ret
mov
packssdw
pop
dec
movsl
lret
pushf
inc
mov
adc
lock
les
mov
mov
push
imul
push
scas
mov
popa
fwait
add
jmp
jns
test
nop
or
fldl2t
pop
cmc
das
es
push
mov
gs
outsb
insl
loop
cmp
dec
mov
pop
pushf
fists
rcr
jmp
sub
adc
fnstcw
jb
mov
leave
xchg
push
dec
jb
jne
mov
pop
push
cs
cmp
lea
fisubl
mov
mov
ja
jno
repz
js
imul
inc
pusha
mov
push
or
mov
mov
scas
inc
sahf
xor
stc
jnp
jb
out
jmp
mov
divl
ss
fbstp
inc
mov
ja
push
fdivrl
jnp
xor
sub
mov
xchg
sbb
inc
frstor
mov
out
push
lret
lods
enter
movsl
lods
push
sbb
xor
std
add
sbb
and
dec
in
int
xor
add
iret
xchg
clc
iret
mov
icebp
gs
sbbl
xchg
loope
sbb
xchg
stos
mov
xor
push
push
mov
mov
ss
jae
lret
jmp
dec
data16
mov
cwtl
sti
in
jae
ss
rolb
sarb
dec
call
stos
and
test
adc
fwait
movsb
leave
leave
out
insb
jge
aad
dec
xor
mov
push
lock
in
out
das
jge
sub
test
lock
aaa
in
mov
aam
sbb
inc
fcmove
jae
out
add
hlt
sbb
push
insl
out
fcomps
mov
sahf
je
loopne
cmp
fistpl
mov
icebp
shrb
les
sub
xchg
jmp
fcmovne
mov
mov
pop
push
mov
lret
imul
hlt
cmc
mov
outsb
dec
add
and
bnd
neg
sti
rol
fsub
movsl
hlt
mov
insb
repnz
leave
inc
sbb
popf
inc
aad
test
stos
orb
adc
dec
in
sub
ss
inc
lds
and
fisttpl
or
mov
inc
enter
mov
mov
insb
loop
fsubrs
add
push
es
pusha
jp
jecxz
shrl
sub
repz
rolb
xchg
xchg
add
ret
je
mov
cs
iretw
imull
loop
jmp
jnp
push
out
sti
xchg
inc
ljmp
inc
bound
fs
mov
mov
push
xchg
jnp
add
std
lea
jmp
adc
xor
js
push
cmp
icebp
cltd
adc
lcall
stos
and
pop
mov
repnz
xor
push
aad
cmp
fsubrl
je
dec
das
test
xor
ds
inc
mov
dec
leave
sub
inc
mov
insb
int
xor
shr
dec
pop
aas
push
sarl
sti
dec
lds
mov
xor
sbb
test
loope
dec
repz
pop
sub
push
int
fidivl
sub
push
lahf
push
iret
sbb
and
shlb
mov
das
lods
js
mov
enter
dec
cli
movsl
xchg
sub
mov
mov
xor
mov
pushf
int3
xchg
std
negb
dec
in
pusha
fisttpll
ss
loop
les
into
and
cmpb
fnsave
or
sub
fildll
roll
push
xor
pop
testb
push
dec
sub
mov
mov
push
hlt
movsl
movsb
stc
and
out
mov
aam
cmpsb
push
cld
lods
outsb
inc
cmp
push
pop
mov
xchg
sbb
mov
and
sub
or
rsqrtps
xchg
xchg
je
loope
sub
out
or
enter
jmp
mov
xor
add
imul
fadds
lea
mov
mov
inc
and
cmp
repnz
out
aaa
shll
add
adc
pop
sub
inc
xor
aam
lea
pusha
leave
shlb
out
out
subl
push
mov
nop
pop
lret
nop
sbb
pusha
repz
mov
repnz
dec
out
dec
dec
test
dec
outsl
or
movsb
scas
jp
mov
jge
sbb
jno
xchg
int
inc
fwait
pushf
xchg
out
enter
cmp
bound
lods
mov
push
sub
and
and
sahf
int3
cmp
cmp
lret
pop
insl
loop
mov
pop
in
imul
test
or
out
sarl
cmp
fistpll
add
ss
mov
rep
push
push
jno
hlt
inc
call
push
inc
xor
loope
loopne
xor
lret
cmp
mov
sbb
adc
mov
and
mov
sbb
add
enter
aam
sbb
aad
ja
push
mov
mov
inc
lds
lahf
inc
enter
inc
das
out
stos
imul
xchg
or
pop
jecxz
cmpsb
push
cmp
loope
je
jmp
fcompl
and
xor
int3
xchg
movsb
cmp
mov
pop
popf
jae
dec
test
test
mov
adc
xchg
inc
pop
pop
and
sub
into
popw
adc
decb
fbstp
cltd
js
dec
out
mov
lods
sti
add
clc
xchg
xor
pop
cmp
jp
test
mov
sub
pop
inc
scas
push
or
inc
fsubs
les
dec
ret
and
dec
fadd
cmp
pusha
cmpsb
sarl
push
jns
or
or
jno
pop
mov
mov
and
add
mov
xor
mov
sub
mov
ljmp
ficompl
pop
xchg
cli
mov
aas
repnz
in
or
cmpb
repnz
adc
hlt
movsb
xchg
gs
shll
testl
or
inc
insl
out
xchg
nop
mov
pushf
lods
xor
mov
leave
ja
inc
mov
in
enter
dec
ss
cmpsl
and
cmpsl
es
xchg
sbb
stos
aad
loopne
add
stos
xchg
mov
lret
xor
adc
mov
mov
mov
inc
ret
inc
in
or
out
pushf
insl
push
jmp
test
jb
call
inc
int3
push
cmpsb
pop
rclb
bound
icebp
loopne
movsl
or
push
xchg
push
mov
jmp
popa
hlt
mov
fildll
jmp
loope
xchg
aas
sti
or
mov
jne
or
cmpsl
add
and
xchg
sti
pop
or
dec
in
jo
sbb
fidivrs
test
stos
inc
inc
cli
mov
adc
sar
or
xor
mov
sbb
mov
dec
sub
jns
movsl
pusha
dec
jns
in
popa
ret
rcrb
xchg
pop
jl
sbb
hlt
xor
adc
dec
mov
enter
je
mov
repnz
xor
loop
inc
mov
popf
data16
dec
pop
jb
pop
icebp
int
or
add
test
mov
cmpsl
cmp
inc
push
cld
mov
aam
ss
pop
std
sbb
lock
adc
negl
sbb
inc
dec
nop
jmp
and
fsubs
push
sub
adc
mov
mov
aaa
dec
test
insb
push
inc
popf
push
fsubs
pop
out
and
ret
stos
jb
cmpsl
fidivs
xchg
fcomps
adc
or
jo
outsl
add
mov
shr
repnz
and
dec
cmpsb
addb
push
cwtl
adc
xor
push
dec
enter
cmc
mov
sti
push
inc
lret
loopne
sub
in
dec
sarb
mov
ficompl
and
out
in
inc
xchg
movsl
leave
mov
and
jo
std
mov
sahf
xor
outsl
jo
push
das
pop
push
mov
and
mov
out
push
pop
mov
clc
inc
push
inc
lods
dec
inc
xor
push
es
and
mov
or
or
push
or
aad
test
sub
and
inc
dec
pushf
xorb
imul
push
stos
cmp
pop
es
xor
stc
inc
call
dec
test
mov
shl
jno
ret
pop
sbb
arpl
push
jae
push
insl
lea
lock
inc
xlat
sahf
in
in
outsl
ret
xchg
pop
jns
sub
insb
scas
aas
addl
xor
cltd
mov
jmp
sub
sahf
sbb
out
or
mov
aaa
cmp
push
lret
or
mov
dec
ucomiss
or
add
push
sahf
loopne
ds
push
mov
hlt
inc
cmp
mov
adc
out
inc
test
fimull
ret
dec
cwtl
sarb
mov
push
lods
inc
call
xchg
fisubrl
jnp
enter
or
fs
xchg
iret
imul
rorb
add
js
stos
lods
scas
xor
or
out
pop
adcb
sbb
shll
pop
mov
pop
cmp
push
xchg
ds
imul
cmpsb
fcoml
stc
sub
jne
xor
hlt
rolb
lods
fistpl
sub
popl
inc
std
jo
cld
adc
mov
bound
mov
sbb
dec
stos
dec
lahf
call
movsb
cmc
test
or
imul
mov
das
loopne
stc
xchg
pop
dec
inc
cwtl
sub
std
cmp
jecxz
or
inc
call
push
mov
cmp
jnp
inc
push
cwtl
idivb
int
sbb
sub
pop
push
cmpsl
lret
scas
jns
xchg
mov
dec
xlat
ja
xor
mov
sub
ja
and
jmp
leave
adc
dec
pop
push
sbbl
xor
xchg
sti
sti
aam
mov
repnz
orl
arpl
xchg
movl
mov
add
push
sarb
add
daa
mov
jle
xor
lods
mov
push
addr16
scas
mov
or
rol
jg
xchg
scas
and
enter
pop
and
mov
mov
sti
jle
sub
pop
aad
add
mov
cwtl
stc
push
shrl
lcall
outsl
imul
bound
mov
jno
test
pop
js
push
stc
sub
icebp
adc
sarl
and
xor
call
es
pop
imul
pop
call
or
adc
stos
cmp
sub
in
mov
repz
out
and
imul
pop
add
in
aam
es
xchg
jecxz
rolb
das
jns
js
and
jns
inc
lret
pop
mov
shlb
pop
dec
xor
cltd
mov
in
adc
push
push
psrad
jge
ja
add
lret
mov
jo
rorb
outsl
mov
aam
adc
xchg
inc
int
mov
xor
pop
add
imul
push
lahf
test
mov
mov
aad
jnp
or
fadds
dec
sbb
cwtl
pop
aad
jne
fwait
icebp
pop
dec
iret
shl
cmpsb
push
and
mov
repnz
stos
imulb
mov
cmp
test
or
pop
call
mov
jbe
stos
bound
and
pop
add
out
inc
lea
mov
imul
and
in
xchg
je
inc
bswap
mov
repnz
jbe
daa
and
jmp
xchg
mov
xchg
sub
mov
addr16
aaa
jo
add
imul
push
outsb
in
arpl
fmuls
push
sub
jns
mov
fnsave
mov
sarl
int3
pop
cmpb
loop
xchg
mov
mov
cmp
es
jp
push
mov
ret
leave
out
insl
lock
sbb
dec
mov
pop
inc
adc
sbb
jmp
xchg
stos
in
aad
lret
pop
cmc
pop
mov
movsb
mov
push
or
jecxz
push
jbe
daa
adc
int3
mov
sub
and
sbb
cli
in
aaa
mov
sub
push
push
cmp
fsubrl
sti
ret
lds
xchg
xchg
xchg
jp
push
int
mov
int
movsl
scas
loop
js
xchg
adc
enter
aad
popa
cli
cmpsb
fisttps
imul
mov
mov
or
cmp
mov
clc
mov
mov
xor
enter
out
xor
cmp
mov
adc
int
jmp
or
xor
adc
scas
add
inc
push
inc
push
xorb
ljmp
mov
mov
jns
imul
gs
in
push
sbb
push
cmpsb
add
pop
jmp
inc
adc
bound
mov
xor
xor
add
rcrl
out
outsb
and
jb
jge
insl
sbbb
lret
testb
xchg
call
adc
lea
dec
fcoms
push
fidivl
test
adc
mov
add
xchg
fndisi(8087
pop
ss
push
imulb
call
pop
data16
aam
dec
xor
dec
xchg
jae
pop
xchg
sub
shlb
push
loope
daa
cli
nop
jo
xchg
push
fcoms
mov
ja
and
mov
mov
xchg
test
out
fadds
insl
mov
xchg
or
add
mov
sub
das
cmpsb
movsl
xchg
arpl
test
popa
dec
add
int
adc
pop
inc
inc
rolb
rclb
sbbl
shll
test
mov
imul
add
cs
pop
std
test
mov
mov
mov
dec
lea
dec
ss
fcoms
sbb
or
xlat
mov
jae
and
outsl
cltd
icebp
mov
dec
push
adc
add
in
pop
ja
scas
aas
add
je
fiaddl
cld
jno
mov
cli
repnz
insl
mov
imul
mov
inc
dec
jbe
iret
cmp
add
lods
pop
notl
ljmp
xchg
cltd
push
or
maskmovq
imull
jl
xlat
loope
aas
mov
lahf
xor
aas
mov
add
add
outsl
aam
adc
or
cs
outsb
loopne
es
push
je
sub
sbb
mov
out
ret
lret
js
adc
outsb
in
add
call
test
dec
sbb
jmp
idivb
test
mov
sbb
push
mov
ret
les
test
imul
aad
adcb
pop
mov
jbe
and
enter
xchg
add
sahf
lock
sbb
test
cmp
or
ljmp
xchg
fildl
pop
loop
xchg
inc
adc
push
mov
xor
pop
mov
out
icebp
mov
ja
adc
xchg
adc
stos
push
loop,pt
ja
ss
ret
and
add
iret
mov
sbb
mov
mov
jno
test
cmpsb
pop
ds
fs
pop
and
mov
stc
cmp
std
insl
out
xchg
in
mov
dec
loope
aas
jnp
ljmp
sub
lock
testb
ret
xchg
rolb
fnsave
insb
stos
mov
xchg
mov
mov
sbb
out
pop
scas
call
gs
call
bound
mov
adc
mov
aad
xchg
outsb
lcall
into
in
ret
sub
out
xor
lcall
sub
or
jecxz
movsl
dec
cmpsb
into
inc
or
shrl
cmp
std
loop
lret
clc
ss
sti
pop
xchg
scas
inc
std
add
aas
not
xor
bound
lock
cs
push
cmp
sbb
push
xchg
xchg
popf
ret
lret
jb
mov
hlt
shrl
jl
or
push
xor
sbb
insl
mov
adc
dec
mov
mov
ja
mov
scas
rcl
cli
xor
mov
outsb
imul
sti
mov
bound
mov
sub
mov
cmp
or
mov
insb
mov
push
imul
cs
add
mov
aas
jnp
jge
jb
dec
jle
out
arpl
rcr
stc
push
pop
mov
gs
and
fcoml
and
jp
pop
push
mov
xlat
mov
push
ljmp
mov
sbb
inc
xchg
mov
mov
push
dec
sub
xor
pop
loope
ja
mov
aaa
jns
cwtl
cltd
call
faddl
stos
mov
clc
inc
xor
es
mov
jecxz
adcb
lret
adcl
xchg
push
jecxz
cld
lods
lds
pop
daa
rcrl
icebp
xchg
xor
ss
cs
sbb
loopne
int
jno
add
aad
jnp
mov
ret
and
xchg
mov
jno
mov
dec
xchg
les
inc
out
aaa
sti
pop
dec
add
pop
les
cmp
push
rcll
iret
pop
dec
inc
gs
mov
xchg
mov
data16
mov
pusha
add
sbb
mov
or
dec
decl
sbb
sub
pop
in
scas
popl
das
enter
imul
jg
scas
cmpb
mov
push
push
fildl
add
and
repz
aas
divb
xchg
idivl
xchg
mov
sbb
xchg
jnp
and
mov
dec
mov
mov
fdivrs
mov
jo
mov
pop
xor
ret
jno
cli
out
leave
or
fisttps
pushf
xchg
mov
mov
inc
data16
movsw
mov
pop
popa
xchg
xor
inc
jl
mov
mov
mov
fidivs
push
jae
iret
and
dec
test
in
in
mov
xor
outsl
cltd
push
push
lds
and
pop
std
mov
mov
fsubrl
sub
idivb
adc
dec
mov
jg
sarb
cmpsl
mov
mov
mov
cmc
mov
dec
mov
jo
pop
lods
pop
fsubr
mov
insb
add
mov
mov
xor
jae
mov
mov
fldln2
das
xor
loopne
xchg
xchg
push
xchg
test
dec
lds
int3
cwtl
cld
shlb
inc
cwtl
lret
mov
jae
cld
arpl
lret
in
testb
lcall
iret
push
sbb
push
inc
lret
scas
push
push
ljmp
cmc
cmp
sub
xor
mov
stc
and
fs
xor
push
inc
mov
push
sub
shll
outsb
pop
push
jne
insb
orb
repnz
addl
push
out
movsl
inc
popf
stos
sarl
mov
xchg
into
xchg
and
test
xchg
pop
into
scas
and
adc
mov
and
rcrl
dec
xor
push
popa
cmpsb
inc
insl
push
xor
mov
xlat
xchg
sbb
mov
jge
add
pushf
iret
xchg
jmp
stos
inc
inc
dec
outsb
fistpll
or
sub
pop
dec
insl
fidivrl
jecxz
xor
mov
popf
inc
xor
out
movsb
mov
daa
jl
ja
mov
push
inc
in
aas
call
sub
lcall
lods
cltd
jb
add
insl
stc
xor
aaa
aaa
outsl
jb
shlb
pop
inc
sub
xlat
test
sub
push
inc
out
ljmp
jno
xlat
popa
add
push
lcall
sub
inc
xchg
pop
xchg
inc
arpl
dec
sub
push
push
push
dec
add
mov
inc
xchg
fs
call
popa
addb
pop
cltd
scas
cmp
insb
mov
cmp
cltd
mov
mov
pop
push
leave
or
dec
call
outsb
mov
fdivrl
mov
and
mov
pop
std
dec
enter
jmp
lods
xor
mov
daa
cld
fwait
pop
clc
or
lret
test
push
fidivrs
stc
pop
jne
jnp
pusha
icebp
icebp
aas
pop
lret
xchg
inc
enter
xchg
sub
mov
xchg
sbb
mov
jge
cld
mov
lods
inc
pop
out
gs
and
in
sub
sahf
fwait
mov
push
inc
fimuls
pop
and
aas
outsl
jnp
jo
dec
inc
pop
inc
mov
fldcw
lret
or
fiaddl
rol
cmp
inc
insl
mov
dec
cmp
aaa
int3
push
jns
leave
inc
pop
pop
movb
stos
jle
jae
in
push
inc
daa
pop
loop
jne
nop
pop
jbe
aam
in
lret
push
hlt
or
fmull
out
in
outsb
mov
jnp
or
or
mov
fidivrl
lret
xor
mov
inc
mov
aam
ffreep
pop
cwtl
lods
rorb
call
mov
push
mov
nop
pcmpgtd
aad
adc
push
movsl
cwtl
push
test
loopne
lods
add
adcb
jae
ret
rcll
fidivrs
int
fcomip
scas
mov
jmp
adc
mov
push
or
or
xor
push
pushf
insb
aaa
inc
push
popf
dec
adc
jbe
xchg
cmp
mov
movsl
iret
sub
and
inc
xor
adc
outsb
and
cltd
or
repz
fwait
in
cltd
lcall
shlb
out
ret
pop
mov
insb
mov
xchg
pushf
jg
clc
jmp
fwait
ja
pushf
outsl
xor
test
jp
push
es
les
inc
fbstp
xor
mov
or
add
mov
pop
and
sub
push
lods
mov
dec
push
ja
cwtl
repnz
movsl
iret
sub
mov
stos
jl
jb
mov
call
jo
pop
pop
pop
mov
jp
mov
pop
mov
cmp
sub
add
repz
mov
mov
ret
mov
push
ss
outsb
rclb
imul
mov
lods
inc
call
mov
mov
inc
jle
add
push
adc
fs
in
push
push
leave
xor
xor
stos
pop
lret
jno
or
add
ds
int3
movsl
into
in
jge
xchg
xchg
fwait
inc
data16
cltd
and
ficomps
add
pop
out
sahf
ficoml
xchg
pop
mov
mov
adc
jp
clc
cli
rcrb
sub
xchg
loopne
cltd
adc
popf
aam
stos
mov
call
scas
neg
pushf
cmp
pop
sbb
and
sub
shl
xor
jge
mov
jns
out
sub
adc
mov
lock
inc
orl
sbb
test
shrd
jle
es
mov
xlat
jl
cmp
sbbl
lods
push
jae
insl
out
push
lods
or
sub
xchg
and
sbb
mov
jns
jmp
dec
shl
mov
out
sbb
and
decb
sbb
xor
mov
mov
bound
adc
shll
jno
sbb
sbb
cs
mov
ficoml
cwtl
aad
jns
cmpsl
xchg
push
lret
cmp
aaa
pushf
sbb
xchg
movb
bound
pop
aaa
push
inc
add
dec
gs
repz
push
jecxz
in
sahf
jne
xlat
lret
rclb
dec
gs
rcl
cmp
mov
inc
repnz
xchg
add
jge
scas
adc
out
vcvttss2si
push
dec
stos
jle
fsubs
data16
das
push
or
testb
mov
loope
cmp
lret
push
orl
jb
out
pop
xlat
not
das
and
cmc
push
push
das
jne
pusha
or
adc
loop
subl
mov
cmp
xchg
and
jge
push
pop
out
ja
mov
loope
pcmpgtb
sar
movl
push
xchg
mov
or
out
lock
icebp
orl
jbe
ror
mov
bound
pop
inc
sub
nop
sbb
sub
repnz
rcr
adc
push
mov
aas
bound
iret
jnp
gs
mov
mov
adc
test
pop
push
or
pusha
pushf
aad
jb
sub
and
loop
cmpsl
jae
in
mov
ret
ret
xor
add
push
fidivrl
add
cltd
cmp
xor
ret
es
shl
cmp
aaa
pop
mov
xchg
shlb
lret
adc
xchg
iret
nop
adc
movsb
xchg
dec
stos
push
jo
push
xchg
adc
lahf
pop
mov
jge
or
mov
sbb
adc
inc
jns
mov
repz
bound
test
jg
pop
cs
sub
mov
out
inc
pop
pop
orl
shl
addr16
mov
movsb
cmpsl
popf
mov
lods
hlt
lods
pop
push
mov
xchg
or
or
popa
jl
xor
push
xor
nop
mov
pushf
xor
and
lret
xchg
aaa
repnz
pusha
inc
hlt
cmp
or
pop
xor
add
fisttpl
pushf
jae
push
ficoml
dec
ljmp
or
xchg
cmp
loop
pop
lret
add
push
hlt
mov
daa
pop
or
jge
jg
cmp
dec
test
aad
adc
jo
aas
fwait
gs
lahf
inc
jnp
fsubrp
pushf
mov
cmp
adc
repnz
dec
sub
mov
fs
mov
scas
or
and
mov
outsl
lods
scas
mov
push
inc
lds
jmp
imul
add
dec
cmpsl
dec
sbb
sbb
add
js
pop
movsl
arpl
mov
jle
push
repz
ds
add
fimull
mov
out
dec
sub
lods
nop
xorb
xchg
imul
push
sub
pop
sbb
sahf
mov
dec
dec
sub
push
aad
das
inc
movsb
push
sarb
pop
xchg
and
pop
and
cmp
ljmp
push
sub
mov
js
cmp
push
cmpsb
loope
sub
cwtl
lcall
mov
push
aaa
div
push
or
jge
inc
scas
cltd
cmp
xchg
sti
fimull
aas
mov
inc
push
xchg
sub
dec
adc
pop
ficomps
or
mov
pop
fwait
in
and
cwtl
sub
sti
pop
adc
inc
pop
mov
into
sub
mov
sub
cmp
pop
lock
pop
popa
outsb
jmp
mov
mov
mov
xchg
andb
insl
push
xchg
push
fnstenv
imul
stos
xchg
into
adc
push
xchg
pop
divb
or
testb
inc
cmc
out
js
loop
pop
pop
xchg
fisttps
xor
cli
lds
jns
sub
les
jne
bsr
push
and
mov
or
call
popa
rcll
cli
loopne
xorb
mov
inc
stos
filds
xlat
xchg
sahf
push
xor
adc
divb
adcb
movsl
add
rorb
dec
mov
adc
stc
mov
mov
out
pop
sub
inc
mov
movsl
fiadds
jg
cmp
mov
push
xchg
push
out
rclb
push
nop
cwtl
cmp
mov
add
fsub
clc
and
jno
mov
lcall
xchg
leave
sub
or
cmp
shlb
sub
pushl
xchg
nop
dec
clc
jl
xor
ficoml
leave
pop
js
fs
cmpsb
xor
xchg
out
les
xchg
mov
dec
inc
je
jb
lret
cmp
repz
jbe
stos
add
iret
push
ja
scas
loop
aad
inc
stos
sub
in
test
jne
loope
out
jp
adc
ja
mov
jns
inc
das
mov
mov
push
mov
adc
insb
push
or
jno
movsl
or
mov
lods
shrb
cwtl
mov
cmp
int3
arpl
imul
cmpb
xor
push
loopne
call
fwait
sbb
loop
sbb
sbbl
adc
data16
cmp
leave
and
bound
or
neg
je
pop
push
push
cmp
sarb
or
add
mov
and
jg
sub
movntq
cmp
add
sub
xlat
ljmp
cmpb
nop
sub
cmpsl
inc
lea
popw
mov
pop
cmp
cli
cmpsb
and
popf
xchg
jno
pop
and
push
xchg
cmpsl
clc
test
sbb
jle
cs
pop
jnp
cmpsb
repz
mov
sbb
notl
fcmovnbe
fisubl
jp
xchg
addb
in
add
jl
jae
stc
inc
dec
rolb
adc
xlat
push
clc
cmp
ds
cs
mov
shll
imul
cli
leave
paddsw
push
add
je,pn
roll
int
mov
mov
nop
pushf
inc
scas
hlt
test
jne
xor
or
popf
xchg
xchg
jle
dec
and
addr16
add
mov
sub
push
aam
dec
aaa
push
out
add
push
jae
ja
mov
inc
fcmovnu
test
fdiv
push
add
adc
dec
clc
addr16
adc
adc
pop
mov
mov
mov
pop
int
pop
pusha
xchg
repz
mov
mov
add
stos
cmp
adc
lock
inc
lods
and
mov
jo
push
outsl
or
lret
xor
fsts
jbe
daa
outsl
jb
insb
jb
fnstcw
out
mov
pop
fadd
rclb
ja
or
xor
ljmp
out
cmp
in
mov
divl
or
mov
sub
and
hlt
ds
rcl
adcb
test
pusha
and
cltd
rcr
or
dec
add
push
adc
pop
xchg
ljmp
inc
adc
or
cmp
repz
mov
ret
out
je
jo
ja
fldl
lret
dec
popl
xchg
add
jmp
int
xor
mov
into
push
dec
sbb
lods
imul
into
out
lods
xchg
lods
xchg
out
dec
sbbb
fldl
hlt
inc
mov
leave
adc
mov
not
in
xchg
push
int
inc
xchg
aas
movsl
xchg
sahf
sbb
mov
pop
inc
sub
mov
outsb
into
ljmp
insb
cmp
dec
sbb
push
leave
dec
scas
outsb
les
jns
add
sbb
rcll
xchg
mov
aam
mov
mov
mov
jmp
in
out
jp
fmull
push
mov
xlat
or
dec
test
cmc
cmp
testb
push
sbbb
xor
jecxz
ja
outsl
jp
daa
scas
cld
mov
push
sbb
ror
cld
jae
pause
dec
xchg
mov
into
inc
push
aaa
dec
fisubrs
and
sub
cmp
jae,pn
stc
std
cmp
jp
aad
jge
push
stc
lock
adc
cmp
scas
push
das
mov
sbb
add
jp
rolb
cltd
ror
test
xchg
mov
dec
sub
shlb
and
outsb
ret
mov
popw
lret
and
fstpt
leave
fidivrl
dec
std
xor
mov
stc
insl
fidivs
or
mov
mov
leave
out
subl
push
sarl
dec
or
fs
inc
mov
bnd
cmpsl
test
pop
dec
das
xchg
arpl
sbb
ficomps
lahf
inc
add
imul
mov
and
xchg
jp
mov
ret
scas
adc
inc
xor
cmp
loop
push
lret
ljmp
push
cld
push
and
outsb
stc
es
jns
xchg
mov
rdtsc
xchg
cmp
popf
insl
daa
adc
sar
mov
shl
mov
decl
pop
xchg
push
dec
pop
ret
iret
xor
inc
mov
cltd
cmpsl
repnz
adc
xchg
jo
fucomp
shrb
sbb
mov
push
dec
xor
cmc
mov
adc
jo
xorb
aam
ret
int
add
or
outsl
xorb
pop
sbb
sbb
nop
movl
sar
ficompl
mov
or
mov
fbld
sbb
ret
repnz
orb
push
mov
mov
adc
pop
inc
pop
and
aad
stos
xor
jns
pop
mov
test
mov
xchg
sbb
lods
push
add
notb
outsb
faddl
pop
jge
jge
inc
dec
inc
mov
movsb
enter
cs
adc
mov
cmp
jne
or
iret
insl
imul
lea
mull
aam
in
das
cmp
mov
test
jne
enter
movsb
aam
stos
jecxz
es
push
jb
sarb
lret
pusha
xchg
mov
daa
adc
cli
subb
sbb
add
pop
mov
mov
aad
dec
dec
call
adc
sbb
std
add
lock
xor
std
pop
xchg
sbb
ret
stos
in
loope
adc
cmpsb
add
inc
aad
outsl
insb
sbbb
mov
outsb
push
decb
mov
jge
cmpb
xchg
mov
mov
dec
mov
or
nop
aaa
mov
adc
cli
in
jmp
push
das
xchg
sahf
hlt
and
or
loop
jmp
cltd
mov
dec
lret
fs
adc
inc
push
in
push
sbb
int3
pop
xorb
mov
pusha
insb
sbb
subl
shll
outsb
imul
loope
sbb
push
subl
cli
sbb
xchg
js
lods
shl
mov
rcll
orb
stos
imul
sub
sti
mov
jns
repnz
sbb
loope
sub
cwtl
pop
xor
dec
bound
sahf
call
js
out
sti
inc
scas
cmpb
movsb
sbb
ds
outsl
js
imul
mov
std
rorl
js
sahf
jle
mov
cmpsb
outsl
xchg
mov
aaa
aad
mov
inc
or
and
shlb
jmp
ja
or
lea
stc
popfw
pop
jnp
dec
add
sbb
mov
mov
js
xorb
sbb
adc
sub
ljmp
jnp
pop
icebp
cltd
in
shrl
imul
jnp
idivb
sub
pop
iret
jbe
enter
jne
arpl
fidivrl
inc
daa
cmp
push
mov
stc
lcall
or
loopne
push
jno
sbb
cmp
mov
xor
or
jae
inc
call
insl
add
popf
ret
enter
dec
daa
jg
leave
not
jo
add
add
and
mov
sbb
in
mov
pop
das
mov
push
fistpll
push
rol
mov
add
adc
nop
js
sti
dec
and
jmp
jo
mov
outsl
shlb
xchg
jo
cli
xor
push
mov
sarl
fmulp
dec
pop
out
ljmp
inc
idivb
aad
sub
xchg
mov
inc
out
lahf
xchg
mov
jbe
cld
dec
cmp
shlb
jmp
std
or
add
add
cmc
adc
mov
outsl
push
xchg
mov
sbb
aam
int
int
sub
pop
xchg
adc
adc
insb
rcr
inc
pop
dec
cmp
imul
das
add
dec
ja
ja
pop
mov
cmp
gs
mov
icebp
sub
es
jo
xor
fisttps
push
inc
jne
add
repz
dec
jne
jmp
push
push
rcl
hlt
jmp
cli
mov
cmp
adc
push
notl
sbb
push
xchg
out
in
xchg
inc
cmp
or
iret
cmp
mov
scas
push
jnp
push
cmp
test
or
outsl
and
and
cmp
sbb
cwtl
lea
repnz
inc
mov
cli
imul
rcll
leave
cmp
sahf
cmp
xchg
adc
cld
es
inc
incb
mov
scas
mov
wbinvd
jmp
jg
mov
adc
push
fisttps
jbe
in
add
lea
and
testb
inc
popf
and
cmp
mov
dec
sti
mov
mov
outsl
lock
subl
cs
test
jae
sub
mov
cmc
cmpsl
ret
test
mov
lods
adc
aas
aaa
imul
mov
loopne
ficoml
xchg
int3
lock
inc
mov
jg
les
jo
bt
popa
in
mov
jmp
mov
repz
mov
push
jg
js
cli
repnz
mov
jecxz
aad
dec
mov
xchg
notl
popa
or
outsl
pop
test
push
pop
jle
mov
and
rcrb
xlat
mov
ja
inc
jo
jbe
int
gs
ret
mov
test
inc
jg
divl
popa
cs
outsb
pop
std
mov
ret
outsb
es
adc
and
pop
inc
in
stc
incb
cs
sti
mov
mov
dec
repnz
or
dec
outsl
and
mov
xor
xor
add
cmc
mov
pop
xchg
jle
sub
mov
push
inc
fwait
inc
loope
mov
push
push
pop
pop
mov
int3
scas
std
pusha
popa
aad
popa
xchg
addr16
lods
add
rep
mov
orb
les
stc
into
dec
sbb
mov
lahf
inc
jbe
out
aas
mov
scas
or
mov
aaa
push
jecxz
jnp
test
fs
cmp
hlt
push
and
push
in
push
add
ret
push
fdivp
cmpl
xchg
mov
ficoml
adc
mov
cmpsb
push
inc
gs
mov
mov
mov
and
aad
ja
mov
es
mov
adc
xor
aas
cmp
or
fistl
cmp
xor
mov
fistl
mov
adc
jb
mov
aad
pop
adc
pop
jo
enter
imul
ror
jb
in
xor
sub
movsl
and
xchg
mov
sbb
divl
lcall
js
mov
dec
xchg
cmp
inc
mov
mov
es
cmp
inc
or
pop
mov
inc
addr16
cmc
jbe
repnz
dec
jecxz
out
mov
in
xchg
dec
sub
lock
int
fsubs
arpl
clc
mov
sbb
dec
xor
out
inc
adc
les
jno
jne
mov
push
aas
and
pop
jl
repnz
xchg
xchg
jae
add
jle
ret
and
aad
ficoms
in
xchg
insl
frstor
inc
loop
in
or
cmp
sub
mov
arpl
and
imul
sub
xor
push
mov
daa
loopne
push
out
rorl
insb
cmp
add
dec
mov
jge
fsubs
sub
sbb
in
adc
and
mov
mov
psubsb
and
negb
push
sub
and
jl
movsl
jle
out
mov
mov
in
ret
xchg
shl
test
xor
ja
cltd
lods
mov
sbb
pmulhuw
xchg
cmp
pusha
push
imul
sbb
mov
iret
jg
ret
stos
aam
loope
imul
cmp
mov
mov
testl
fidivrs
cmpsl
xchg
sub
mov
add
call
sbbb
test
roll
aaa
and
and
test
ja
xor
and
fsubr
inc
push
rcll
arpl
leave
dec
emms
sub
mov
movsl
lea
mov
mov
sub
fnstcw
and
divb
push
add
xchg
out
fldl
add
or
jmp
mov
xor
js
add
lods
arpl
popa
insl
insb
and
pop
test
pop
enter
cli
mov
and
test
imul
pop
cmpxchg
mov
pop
nop
ds
repnz
push
insl
mov
pop
dec
xchg
filds
dec
cmpsb
pop
enter
xor
adc
fs
inc
or
popf
push
dec
in
inc
fisubrs
dec
xorb
sub
pop
cmp
sbb
enter
dec
pushf
sbb
insl
sub
addr16
lret
dec
and
pop
xlat
sbb
in
mov
pop
daa
dec
cmp
mov
mov
jnp
in
xlat
xchg
push
loop
xor
push
and
sbb
loope
jno
mov
mov
outsl
push
sbb
mov
scas
add
test
mov
pop
outsb
shll
xor
push
sahf
ljmp
insb
push
enter
cmp
mov
lock
fwait
jecxz
adc
fs
popa
out
test
lds
mov
or
in
sbb
je
jp
adc
cmp
mov
jp
mov
test
outsb
addl
sbb
pop
dec
sbb
js
jbe
sbb
mov
mov
mov
add
int3
or
int
scas
xchg
add
or
mov
dec
test
sub
lcall
ret
repnz
or
cmpsl
iret
icebp
or
jmp
dec
pushf
daa
mov
xchg
adc
add
push
jbe
add
mov
incl
aad
movsb
scas
ret
jp
jae
test
stc
mov
and
enter
xor
adc
and
mov
and
jo
loop
insb
call
xor
test
lahf
ret
insb
and
cltd
sub
xchg
sub
enter
lret
adc
jae
mov
pop
pop
imul
mov
pop
sarl
push
icebp
or
out
or
nop
jge
pop
pop
cmpsb
pop
add
pop
sub
sub
push
dec
or
dec
addr16
xchg
pushf
jle
ffree
popf
testb
sti
cld
insb
ret
xor
and
ljmp
mov
test
mov
sub
xor
aad
push
mov
xchg
pop
sub
push
cld
ret
xor
or
inc
lock
jnp
add
jns
pop
inc
icebp
ja
icebp
sbb
mov
stos
add
stos
mov
mov
or
in
cmp
or
in
or
pop
xor
xlat
sbb
jo
add
mov
aad
mov
xchg
pop
orl
fbld
out
xchg
outsl
mov
shlb
sbb
lock
sub
and
add
mov
fmul
lret
in
adc
and
sub
jns
pop
daa
fisubrl
xchg
and
or
xor
rcl
loope
movsb
pushf
adc
push
mov
jl
dec
mov
imul
cwtl
push
cmpl
mov
or
jl
push
lods
loope
jg
add
cltd
mov
or
pop
push
mov
dec
push
fstpl
mov
ds
xchg
push
loop
push
add
or
or
sub
sub
or
mov
sub
jne
push
idivb
popf
sarb
mov
test
ja
testl
outsb
pushf
loop
sub
fsubrl
ss
stos
cmpsb
stos
hlt
and
dec
testb
jecxz
mov
pop
icebp
popa
mov
pop
xor
push
test
lret
pminsw
inc
sub
nop
mov
or
sbb
mov
lret
inc
or
popf
add
cs
nop
iret
aam
out
and
test
aam
cmp
jo
loopne
push
lods
push
in
dec
dec
shrb
scas
push
push
push
sub
mov
or
mov
loope
testl
jp
roll
les
or
cmpsb
pop
clc
push
push
sbb
push
arpl
pusha
cwtl
in
ss
dec
inc
add
movsb
test
mov
dec
std
and
xor
sahf
imul
and
les
int
mov
out
ret
nop
test
clc
add
inc
lret
xor
shll
or
jge
lods
andb
test
mov
aam
scas
push
data16
mov
jmp
jge
add
in
lock
sti
xorl
sti
mov
call
in
out
mov
mov
xor
cli
clc
jge
dec
mov
mov
mov
loopne
ds
out
dec
dec
mov
cli
pop
lock
jne
adc
push
xor
fxtract
int3
jmp
pop
clc
imul
push
iret
sbb
dec
jns
mov
data16
mov
leave
pop
sub
cmp
or
jbe
call
inc
and
add
aaa
jecxz
inc
lods
xchg
mov
push
inc
sbbb
dec
add
into
insl
out
mov
divl
stos
ljmp
cmpl
ljmp
testl
loop
lds
xchg
add
stc
pop
cmpl
dec
in
out
xchg
jo
sti
mov
std
pop
adc
or
mov
test
xor
jae
mov
cld
pop
js
lods
cmp
fwait
xchg
mov
pop
sahf
mov
sahf
push
mov
leave
jae
jbe
adc
cmpsl
jo
xor
scas
mov
dec
outsb
xlat
int
or
pop
sti
stc
ja
into
cmp
aam
in
pop
rorb
out
sub
push
scas
pushw
clc
lds
insb
dec
xchg
stos
fiadds
enter
and
mov
test
sbb
jmp
inc
push
mov
fiaddl
into
pop
add
in
mov
push
and
cmp
push
in
pop
mov
scas
ja
cmp
push
sub
jbe
mov
jle
or
pop
inc
pop
push
and
fldenv
sbb
lods
bound
pop
ds
mulb
aad
mov
pop
inc
movsb
imulb
cmp
sub
xchg
dec
fs
sarl
insb
loope
aaa
test
outsb
sbb
int
cmp
stc
mov
xchg
loop
outsl
clc
jnp
aam
stos
pushl
outsl
cmp
pusha
push
xchg
fs
adc
and
rclb
pminsw
cmp
or
nop
mov
xor
fstpt
xchg
xor
aad
xchg
int3
movsb
sbb
pop
jecxz
adc
sbb
pop
jno
push
inc
add
es
pop
and
and
or
push
mov
data16
sub
test
adc
pushf
fmulp
jae
fldenv
push
imul
mov
ror
int
cli
movsb
sbb
xchg
xor
dec
aaa
fsts
sub
fcomps
sbb
out
mov
xchg
fidivrs
jb
stc
pop
daa
shlb
mov
enter
inc
mov
sbb
xor
mov
test
inc
mov
and
shlb
inc
out
incl
xchg
cmpsb
dec
xchg
pop
jecxz
pop
fcoml
sbb
pop
sahf
push
iret
movsl
cld
pop
add
test
inc
xor
cli
mov
rorl
ret
jb
mov
aad
fdivp
pop
lds
mov
push
jb
sbb
cmp
loop
or
adc
adc
mov
and
imul
fldl
and
das
push
rolb
mov
into
lea
scas
lcall
xlat
insl
pop
mov
xor
imul
rorl
loopne
xlat
test
arpl
nop
and
xchg
adcl
xor
hlt
repnz
dec
push
outsb
subb
mov
je
pop
cmpsb
cmpsl
orb
jnp
jl
outsl
lret
out
lret
cli
mov
mov
jge
dec
js
int3
or
jg
loope
pushw
ret
cmpsb
sbb
cmp
mov
xor
cmp
fdivl
or
gs
imul
shr
sahf
inc
cmp
test
mov
push
imul
push
cld
subl
fidivl
mov
outsb
push
icebp
jmp
ret
pop
mov
stos
xor
cli
lret
mov
lret
inc
add
jecxz
add
mov
xchg
xor
jmp
push
jmp
adc
mov
add
cmpsl
iret
pop
cmp
scas
push
into
cli
rcr
sub
xchg
mov
or
stos
jecxz
jle
inc
mov
enter
mov
mov
aas
or
jo
pop
or
out
imul
pop
cmp
cmpsb
iret
push
cwtl
lods
sub
out
jmp
pushw
add
push
shrb
leave
pop
popf
mov
sub
movsb
pop
in
inc
ja
mov
adc
aas
jp
fsubrs
js
push
dec
push
dec
pop
outsb
sbb
push
xor
sbb
cmp
call
out
xor
rclb
fidivl
push
inc
mov
push
fnstenv
pop
inc
dec
jno
cltd
in
push
jno
or
lahf
push
xchg
pushf
jb
or
imul
mov
or
lods
out
sbb
jle
inc
fs
xchg
cmpsb
cmp
sub
ret
pop
xlat
aam
cmp
xchg
push
pop
lods
rol
lret
dec
aam
pop
nop
adc
mov
push
jnp
jle
push
push
xchg
pop
push
dec
dec
insb
addr16
pop
pop
pop
repz
lret
mov
test
int
nop
ret
cmp
push
cs
test
lret
dec
subl
push
inc
popf
add
mov
fs
and
cltd
push
enter
mov
sub
cmpsl
popf
xchg
mov
mov
mov
dec
fldz
sub
or
xchg
stos
out
fimuls
faddl
cli
sub
sub
into
sahf
fimull
pop
mov
movsl
std
mov
shrb
push
lods
es
mov
sahf
jns
pop
xor
inc
jl
leave
sub
jnp
int
lock
out
cltd
jb
jne
mov
xchg
hlt
pop
out
stos
ror
adc
aam
adc
outsl
or
cmp
inc
inc
add
popf
aas
stc
adc
arpl
cmp
daa
sti
add
mov
xchg
cmp
sub
pop
sbb
call
cmp
ja
jb
std
sub
aaa
inc
inc
fistl
aam
sbb
pop
cmc
int3
or
fidivs
mov
das
cmp
nop
and
jmp
sbb
sahf
and
add
xchg
mov
add
sbb
rcr
sbb
aad
fsub
push
and
pop
and
jns
hlt
int3
and
mov
dec
push
or
rclb
stos
ret
push
jle
call
jge
addr16
cwtl
rolb
insl
ret
jle
push
and
pop
lret
sub
xchg
push
mov
dec
fwait
stos
mov
sub
rorb
sub
jge
es
les
into
xchg
or
cmpsb
cmpsl
lods
nop
mov
stos
rcll
mov
insl
fadds
and
subl
or
mov
cmc
inc
push
dec
mov
popa
dec
jmp
daa
jg
xorb
adc
xchg
or
jb
icebp
dec
aad
add
or
push
push
jb
inc
adc
jnp
cltd
push
dec
dec
lret
mov
loope
in
imul
or
icebp
inc
dec
leave
mov
lret
icebp
fwait
adc
sbbb
adc
lret
xchg
jl
fnstcw
int3
mov
fcmovbe
pop
cmc
scas
mov
das
icebp
xchg
pop
ret
mov
fdiv
test
dec
aas
dec
adc
leave
in
jl
mov
add
mov
xor
pop
lret
add
jno
fwait
aam
aas
jo
add
pop
mov
movsl
or
cmpsl
cmp
mov
cmp
cwtl
xchg
popf
out
jb
out
jbe
divb
cmp
push
js
leave
mov
arpl
int
jb
sub
int3
sbb
xor
mov
dec
ret
mov
mov
and
sub
cltd
shrb
mov
jmp
in
push
out
test
inc
pop
xchg
ljmp
mov
pop
pop
xchg
dec
cmp
std
or
xor
pop
add
rolb
mov
dec
leave
or
push
stos
scas
aad
std
or
insl
sbb
mov
lret
mov
insl
xchg
push
lods
lret
adc
dec
test
je
xchg
clc
fsubp
jnp
add
call
loopne
xor
dec
roll
ret
cmp
xlat
mov
adc
mov
jp
sub
lret
sub
bound
inc
nop
out
nop
cmpsl
jmp
adc
pop
and
mov
scas
jne
jbe
inc
insl
movsb
mov
jno
out
iret
or
outsl
repnz
dec
cltd
sti
shrb
mov
mov
mov
mov
lods
pop
movsl
dec
xor
pop
jge
outsb
and
pop
movsl
arpl
test
mov
mov
xor
ja
mov
xor
mov
inc
in
dec
sbb
loopne
hlt
inc
insb
into
into
inc
push
xor
or
rcrl
xchg
sbb
repnz
dec
adc
jb
push
ds
std
rclb
js
pop
mov
loopne
and
pop
xchg
ret
cmp
fistps
dec
cmpsl
shrl
and
or
test
insl
filds
or
mov
inc
jne
and
sahf
mov
fisttps
mov
mov
xchg
std
cmp
hlt
xor
test
inc
addr16
xor
dec
push
xlat
je
mov
inc
inc
xlat
jne
ret
ds
dec
inc
xorb
nop
add
mov
shll
jmp
mov
jb
jle
stc
das
leave
aam
and
push
lea
adc
cwtl
clc
outsb
iret
icebp
insl
xchg
pop
mov
arpl
mov
addr16
hlt
jbe
movsl
jo
outsl
les
filds
repnz
mov
imul
outsb
lods
js
and
lea
ret
jb
test
je
mov
pop
loop
and
pusha
fidivrl
inc
scas
adc
out
and
add
jbe
mov
sbb
ror
xchg
std
test
add
xlat
jmp
and
clc
aas
ljmp
in
loopne
imul
out
xchg
mov
aaa
or
aas
or
mov
and
push
mov
mov
xchg
je
dec
cmp
rolb
int3
cmp
sbb
incl
sub
outsl
and
add
sub
inc
xchg
and
xor
orl
adc
xchg
xor
out
push
movsb
stc
jmp
rorb
mov
lods
cmpsb
sbb
xor
mov
int3
aad
ja
cld
push
daa
and
sahf
or
cmp
push
sbb
sbb
cmp
add
stos
lret
fcmovne
outsb
fimull
adc
mov
jne
jne
add
inc
cmc
inc
mov
mov
subl
push
call
xchg
sbb
popa
mov
mov
in
loope
fiaddl
jl
stc
adc
pop
leave
add
leave
test
nop
popf
adc
aam
dec
cmp
int3
daa
xor
push
movsl
aam
stos
aam
aad
cli
adcl
scas
data16
icebp
adc
jp
sar
sub
push
repz
jns
push
mov
mov
insl
push
pop
std
incb
add
enter
jo
pop
repz
repnz
test
fsubr
jl
test
andl
faddl
and
mov
daa
or
jnp
sub
aaa
cmc
mov
popa
lahf
mov
dec
dec
sarl
mov
adc
nop
imul
mov
push
or
xchg
cli
aad
lods
inc
test
or
in
mov
gs
xchg
test
cmp
adc
xorl
iret
in
out
sbb
inc
cwtl
sbb
dec
sub
xchg
or
push
dec
in
fs
xlat
dec
insl
jne
mov
xchg
sub
dec
jnp
shll
je
pop
push
jmp
scas
inc
adc
cs
cmpsb
insl
mov
fcom
popa
add
cwtl
pop
imull
das
mov
jp
fistpl
sahf
add
sti
jb
push
pushf
xlat
ljmp
imul
xchg
inc
loope
stc
jmp
jmp
fstps
or
push
iret
fstpt
sarb
mov
push
lods
mov
xor
xor
add
fwait
iret
addr16
ret
stc
sub
ljmp
ja
mov
hlt
inc
nop
xchg
push
adc
fwait
imul
cwtl
ljmp
pop
or
iret
pop
pop
jle
push
add
sbb
lret
movsb
lods
mov
xchg
sub
cmp
cmp
stos
mov
les
add
mov
inc
xchg
psllw
cld
and
mov
dec
inc
sub
sub
daa
insl
jbe
out
add
lcall
push
testl
daa
aaa
jecxz
push
push
xor
insl
inc
mov
enter
jnp
iret
in
movsl
fcomps
test
xchg
add
jle
sbb
mov
jns
pop
divl
dec
xor
call
idivl
mov
ret
leave
aaa
out
in
mov
mov
test
js
adc
ret
insl
out
insb
mov
ds
mov
movsb
aas
enter
or
mov
mov
outsl
sub
sub
pop
mov
lahf
int
xchg
loopne
jp
fidivs
dec
in
ljmp
cmp
cmc
insl
sbb
xchg
jp
xchg
jle
ficomps
and
imul
jge
in
repz
inc
fisubrl
cli
les
cmp
mov
mov
sbb
cltd
adc
out
xchg
scas
or
test
xchg
cmp
pop
test
xchg
mov
jmp
test
cmpsl
or
mov
dec
sbb
jg
aaa
dec
mov
and
cmpsb
add
mov
adc
add
push
jp
aaa
scas
fdivs
sarb
mov
ljmp
mov
push
stc
popf
rcl
iret
mov
dec
outsb
xchg
jb
and
push
push
xor
inc
cmpsb
test
push
xchg
push
pop
sub
sbb
sub
xchg
arpl
mov
imul
adc
fidivrl
dec
xchg
stos
mov
and
inc
cltd
mov
jno
lret
and
scas
pop
push
adc
dec
sbb
rcl
jmp
movsb
add
stos
xchg
icebp
test
out
fs
mov
fists
movsl
mov
inc
jno
daa
dec
imul
fwait
scas
mov
mov
rep
and
cmp
inc
xchg
lods
dec
inc
xor
sbb
mov
jbe
das
push
or
pop
add
pop
cmpsl
ret
iret
lahf
cmp
aas
xor
in
mov
pmulhw
iret
cwtl
movsb
iret
inc
iret
push
xchg
movsl
sub
pop
add
jge
add
sbb
cmp
pop
pop
mov
inc
adcl
stos
jae
orb
xchg
jge
fucomip
mov
std
adc
in
in
mov
aas
and
sbb
sub
push
push
mov
jge
sub
inc
add
jmp
xor
xchg
sbb
imul
or
jle
inc
inc
mov
push
sbb
leave
mov
pop
cs
mov
mov
dec
adc
mov
outsb
clc
mov
sti
dec
insl
lods
and
popf
icebp
jne
adc
jnp
ret
and
inc
add
ds
xor
cmp
sti
fisttpll
insl
js
repz
and
cli
sbb
mov
sbb
int3
cmp
mov
add
mov
int
or
test
xchg
or
inc
add
sub
leave
rclb
xchg
mov
rorb
dec
imul
jns
push
pushf
shll
inc
out
mov
add
jns
and
stos
test
repz
and
negl
notl
adc
sbb
add
xor
std
in
cld
fcmovne
cmpl
inc
mov
outsb
movsl
insl
call
lods
jl
xor
flds
pushf
cmp
mov
into
or
mov
jae
pushf
imull
pop
inc
dec
mov
aas
jl
jne
hlt
cmp
pop
jns
cmpsl
sar
nop
cs
imul
pop
adc
xchg
jle
cmc
scas
in
adc
enter
loope
xor
pop
mov
jp
dec
adc
xor
inc
js
out
out
jnp
imul
ret
add
add
fidivrl
mov
in
out
mov
lds
pop
pop
inc
data16
ljmp
jbe
sbb
icebp
movsl
fwait
xchg
iret
jbe
sahf
jmp
adc
jnp
std
neg
sub
mov
mov
sbb
add
aad
lahf
mov
clc
gs
int3
sahf
push
mov
lret
call
and
pushw
mov
popa
sbb
test
out
cltd
cmp
mov
push
cmp
mov
cmp
out
sub
pop
jecxz
mov
inc
mov
fdivp
lret
pop
push
add
and
mov
mov
arpl
sbb
es
loope
jl
enter
imul
push
stos
xor
push
push
pushf
sbb
stos
mov
test
sbb
or
dec
sub
fsubl
iret
xchg
arpl
fldcw
cmp
cs
shl
pushl
mov
xor
dec
xchg
in
and
aam
pusha
ljmp
xor
mov
cmp
jecxz
dec
mov
repnz
mov
andl
jl
les
ret
fstl
add
adc
mov
ds
and
fsubs
jns
test
cltd
aam
push
push
ret
aaa
scas
jnp
mov
sti
movsl
push
pop
push
xor
xchg
loop
lock
repnz
icebp
adc
adc
mov
or
out
cmp
je
ret
lds
xchg
bound
mov
adc
sbb
dec
and
mov
test
inc
stc
cmpsb
incb
gs
jno
and
imul
adc
inc
fsubr
mov
pusha
stos
mov
aaa
add
sub
aas
jnp
outsb
fldenv
fsubrs
cmp
adc
lods
xlat
in
cwtl
xchg
dec
sbb
push
jno
fstpt
sqrtps
cmp
mov
or
nop
dec
stos
push
mov
sbb
or
xor
and
enter
jns
fmuls
push
leave
scas
dec
cli
push
mov
push
push
adcl
xor
push
movsl
dec
test
pop
js
cmc
pop
addl
jae
jle
in
stos
xchg
arpl
arpl
ret
in
push
pop
push
dec
fmul
pop
test
jg
or
imul
cmpsb
out
jae
sub
jb
fcoms
fisttpll
mov
loopne
popf
jns
mov
dec
lret
pop
jp
int3
push
mov
test
mov
cmpsb
cmp
pop
outsb
rclb
inc
inc
std
xorb
dec
inc
test
sbb
lcall
test
push
mov
mov
and
push
lret
ja
push
adc
sarb
leave
mov
dec
mov
in
movsl
add
mov
lock
repz
xchg
xor
aaa
sbb
ficoml
pop
scas
mov
fdivrl
jle
aas
mov
repnz
cmpsb
mov
dec
divb
insb
pop
cmpsb
test
or
add
jo
out
out
in
enter
test
push
test
int3
aam
insl
adc
addb
dec
fstps
mov
cwtl
orl
add
icebp
sti
call
pop
fildll
jo
xor
loope
pop
xchg
add
ret
mov
inc
fwait
mov
mov
fwait
cmp
push
cmp
call
inc
addr16
lods
sub
adc
enter
sbb
push
lea
negl
push
push
cmpsl
repz
xor
ds
xchg
iret
xchg
fnsave
sbb
adc
aad
push
dec
cmp
std
sbb
adc
sub
jo
jno
cmp
push
aam
dec
inc
fildll
stos
jmp
dec
lret
imul
lods
push
mov
ja
mov
bound
mov
dec
push
sub
addr16
and
inc
cmp
shll
ret
pop
add
jecxz
scas
add
push
mov
shrl
mov
pop
jbe
dec
sti
testb
and
iret
leave
adc
pop
mov
xorl
cwtl
repnz
pop
mov
push
pop
add
sbb
pop
and
imul
dec
outsl
enter
mov
xor
xchg
iret
js
repz
ja
xchg
xlat
sub
add
sub
xor
xchg
aad
imul
lock
cmpsb
outsl
xchg
pusha
les
xchg
xor
adc
scas
shlb
push
faddl
je
insl
mov
or
movsl
insb
add
les
addr16
mov
cmp
mov
and
scas
pop
movsl
jb
mov
jno
insl
mov
mov
idiv
mov
shll
push
cmp
add
lds
outsl
fcmovne
mov
clc
mov
xchg
inc
mov
jmp
xlat
xchg
stc
push
cmp
outsb
mov
insl
lods
outsb
sub
out
mov
mov
and
sarl
stos
add
adc
sub
test
loop
add
cwtl
push
cmc
adc
addr16
mov
popf
or
dec
jno
pusha
scas
out
insl
std
out
mov
jecxz
outsb
sub
mov
pop
or
sahf
daa
in
imul
or
inc
bound
cwtl
mov
push
or
jle
flds
and
imul
cli
rdtsc
out
mov
addr16
dec
add
xor
fsubr
fs
daa
mov
fisttpl
mov
insl
mov
xchg
sbb
dec
ret
add
ja
push
test
cmp
xor
popf
mov
std
xchg
mov
hlt
cmpsb
xchg
or
sbb
addb
les
adc
cmp
pop
pop
mov
into
call
cmp
push
mov
sub
jne
adc
rclb
jns
fildll
in
stos
fidivrl
shlb
fsts
scas
adc
loope
outsl
rcr
fcoms
loopne
orb
pusha
jl
mov
mov
xor
xorl
aad
dec
mov
mov
call
push
push
popa
add
fxch
pop
in
xchg
push
andl
enter
jge
notb
test
cmpsl
pop
sub
pop
sub
mov
ljmp
pop
and
out
sub
sbb
xor
xor
cmc
mov
adc
mov
jno
stos
arpl
inc
aam
push
lock
mov
scas
xchg
nopl
jnp
dec
xor
lock
lret
jge
lods
inc
sbb
mov
lods
int3
leave
dec
lods
and
and
xchg
xchg
and
ja
inc
sbb
xchg
jmp
hlt
sbb
pop
lret
sub
push
adc
aaa
or
data16
cld
cmp
jge
aam
mov
mov
lcall
pop
mov
or
es
es
lcall
clc
mov
ss
ds
sbb
add
stc
lods
pop
bound
fs
mov
dec
shl
inc
je
lahf
in
and
xchg
or
xor
pop
scas
mov
stc
clc
lahf
inc
pop
sbb
cmpsl
mov
sbb
xor
cli
inc
ljmp
xor
lahf
js
or
lcall
inc
mov
dec
mov
les
push
jnp
fisubl
enter
inc
fadds
push
sub
int
psllw
mov
push
ljmp
leave
mov
xor
pushf
inc
out
dec
xor
int
lret
lods
dec
rorl
sti
jne
adc
adc
xchg
sub
and
xchg
dec
xchg
dec
mov
sarl
jbe
mov
je
push
jae
mov
in
xor
btr
push
mov
stc
shll
rep
mov
adc
cli
inc
test
mov
push
cmp
imul
push
mov
ljmp
mov
adc
dec
jle
stc
push
xchg
movsb
xchg
xor
sub
mov
dec
push
xor
push
push
int3
and
add
fldt
imul
int3
enter
imul
cmp
movsl
fidivl
push
dec
out
mov
and
lahf
sub
or
popa
inc
push
std
iret
fstps
xchg
push
xorb
mov
dec
inc
loopne
mov
ljmp
push
test
std
and
mov
shl
mov
es
ret
xor
in
clc
outsb
stos
sub
shll
dec
outsl
adc
orb
out
push
out
nop
in
stos
add
dec
dec
add
divl
sbb
out
and
xor
aad
jne
pop
mov
xlat
inc
push
xor
add
lods
sub
divl
cwtl
loop
daa
aad
mov
xchg
cmc
stos
testb
add
pop
or
in
mov
call
xchg
mov
bound
stc
and
sub
idivl
pop
inc
pop
mov
aaa
adc
adc
push
mov
les
subb
popf
mov
cmp
mov
mov
inc
adcl
add
cmp
faddl
push
stc
popa
adc
lods
pop
movsl
clc
mov
pop
pop
test
mov
pusha
lret
jecxz
push
mov
pop
or
loopne
cmc
int
aad
adc
cli
push
scas
or
popa
mov
pop
inc
pop
pop
adc
lahf
cli
jns
test
pop
call
sub
rcll
or
popl
add
stos
imul
iret
arpl
insb
enter
and
inc
shll
out
jne
out
pop
add
fistpll
pop
xchg
pushf
aaa
adc
and
addr16
iret
out
mov
adc
mov
ret
mov
lods
mov
dec
outsb
xor
push
movsl
and
jmp
imulb
loop
push
push
sbb
mov
fldt
xchg
lods
mov
outsb
out
int
and
imul
mov
ret
das
mov
in
push
pop
aam
lahf
pop
aad
lcall
clc
xor
daa
fidivs
mov
xchg
xchg
pop
mov
jge
rorl
lods
push
js
dec
or
iret
and
fs
push
mov
mov
push
xchg
test
sub
gs
fs
insl
xchg
pop
int
dec
inc
jns
xorl
rcr
jno
xor
pop
lods
das
data16
rcrb
ds
jmp
jno
jge
jecxz
es
adc
adc
in
test
roll
nop
loopne
xchg
sub
mov
sub
daa
js
pusha
stos
add
xlat
add
je
shll
mov
dec
xchg
dec
ret
cmp
xchg
dec
xchg
jbe
les
adcb
insb
cltd
pop
mul
add
out
jecxz
test
out
and
mov
mov
push
sub
dec
xchg
cwtl
sahf
shlb
or
push
or
ja
fmull
out
push
push
fwait
dec
push
mov
mov
out
push
andb
sbb
pop
mov
mov
inc
stc
test
pusha
sub
stc
or
xchg
test
push
in
sub
hlt
xchg
xchg
jo
xchg
adc
out
clc
movsb
andl
pop
dec
std
ja
inc
mov
icebp
push
lea
mov
lock
movsl
lods
mov
nop
setbe
sub
mov
adc
xor
cmp
inc
daa
push
mov
jl
mov
xor
push
shrb
mov
loopne
ss
testb
xlat
pop
ret
pop
xchg
or
or
out
xchg
jl
ss
xchg
into
sbb
imul
mov
pop
push
push
dec
push
mov
stos
shrb
and
cmp
xor
cmp
mov
cmc
or
xchg
sbb
adc
xchg
sbb
fnstcw
push
or
sbb
arpl
popa
xor
stos
andb
inc
add
rorb
loope
cli
jmp
xlat
pop
sar
inc
mov
ret
dec
insl
fucomip
ret
rorb
push
cmp
xchg
or
test
xchg
js
int3
leave
mov
xor
adc
push
add
stos
mov
push
setae
mov
push
inc
mov
sahf
pop
ja
ss
sub
pushf
jns
jmp
or
aad
lret
pop
or
call
inc
leave
inc
lock
adc
adc
mov
dec
add
mov
es
daa
add
leave
push
cmp
outsb
imul
and
out
or
lds
int
outsl
addr16
push
scas
add
fs
scas
rep
mov
cmp
leave
pushf
imul
lcall
aas
ror
std
push
fldl
ss
mov
sub
hlt
add
les
sbb
hlt
xchg
mov
dec
push
pop
out
leave
push
xchg
enter
jae
or
or
addr16
test
pop
push
popf
ret
adc
cltd
repnz
or
jno
das
data16
notl
negb
jae
xchg
int3
into
ljmp
lahf
pusha
and
inc
std
outsl
test
inc
jo
mov
iret
mov
arpl
mov
insl
xchg
dec
imul
mov
xchg
sub
mov
testl
les
pop
loop
cmp
je
and
inc
sub
test
pop
addr16
leave
call
lea
ja
mov
jo
dec
stos
add
int
jecxz
xor
loop
sbb
test
test
pop
mov
and
and
mov
stos
mov
jl
xor
jg
arpl
inc
cmp
dec
sbb
pop
cmp
clc
and
cltd
mov
add
out
mov
xchg
sub
and
push
lret
imul
sti
lahf
outsl
xor
pop
mov
dec
adc
inc
adc
or
std
or
inc
stos
push
negb
mov
ret
mov
neg
or
xchg
dec
cld
das
xchg
mov
mov
xorb
lret
push
pop
xchg
aas
and
loop
dec
mov
or
mov
arpl
scas
jno
fs
inc
ret
jecxz
arpl
mov
sub
iret
scas
add
dec
add
cmp
push
sbb
push
jno
hlt
ret
loope
negl
fcomps
cmp
sbb
nop
inc
mov
repz
sbb
fcomi
push
mov
je
and
outsb
sub
jb
sub
js
sbb
bound
loope
cld
jmp
cmpsb
xlat
out
fs
cs
jg
fwait
push
jp
les
out
mov
sub
repnz
movsb
jns
xchg
scas
shl
sub
sub
sub
jecxz
fnstenv
adc
imul
imul
jmp
xchg
jl
iret
nop
cld
push
mov
xchg
sub
jmp
test
inc
pop
push
enter
or
outsl
adc
addb
fs
leave
jge
test
sub
dec
dec
jl
sbb
mov
inc
xor
xchg
in
pop
xchg
stos
xchg
sub
jns
push
gs
cmpsl
stos
test
push
jo
sahf
das
loopne
insb
or
jbe
sbb
inc
jbe
mov
shlb
aaa
sbbl
loopne
int
stos
int
pop
iret
sub
mov
int
stos
adc
jno
jne
insb
daa
or
fnsave
sahf
aas
clc
nop
rcr
push
rcll
rcll
out
movsl
mov
jg
out
and
sub
loopne
pop
out
icebp
mov
jb
push
jnp
sbb
shlb
sub
aas
fstpt
cmpb
push
inc
loope
and
mov
push
mov
xchg
movsb
pop
push
sub
lea
dec
icebp
mov
mov
or
pop
popa
test
cs
hlt
or
mov
adc
or
push
aaa
sbb
fistl
sbb
push
push
pop
loopne
test
mov
push
dec
lods
out
mov
adc
loop
xor
lds
pop
fstps
and
adc
push
cmpsl
dec
mov
int3
addl
pop
adc
es
mov
das
jmp
imul
jp
jle
xor
clc
call
jns
sub
push
testl
sti
add
imul
pop
xor
pop
mov
add
pop
xor
push
aam
aam
ds
xchg
mov
pop
lret
sbb
decb
lock
add
dec
dec
pushf
inc
inc
mov
movsb
push
push
mov
ja
repz
clc
xor
lods
add
and
sbb
fcoms
out
gs
arpl
xchg
mov
mov
sub
out
ret
pop
cli
add
cmc
scas
push
jns
mov
push
mov
clc
bound
inc
aas
jl
dec
out
mov
test
mov
jmp
xchg
xchg
inc
pop
pop
lods
xchg
push
js
push
push
lods
les
out
mov
insl
jmp
pop
call
push
jecxz
mov
repz
mov
fstl
icebp
xchg
mov
cmp
pop
pop
mov
idiv
testb
inc
and
cltd
push
xchg
insb
push
mov
fs
dec
and
in
mov
sub
into
jmp
fldcw
inc
es
dec
test
lret
adc
and
mov
jae
pushf
xor
sub
outsl
push
shl
pop
and
adc
out
shlb
hlt
fwait
mov
aam
dec
push
jge
in
popf
mov
jns
jno
test
ds
jecxz
jg
inc
stos
mov
enterw
dec
xchg
mov
xchg
lret
ret
cwtl
lcall
fisubs
cmp
into
pushf
sub
mov
movsb
jl
orl
out
mov
test
sbb
mov
jl
lods
movsl
cmp
and
adc
or
mov
cmp
sti
mov
enter
gs
sahf
test
aas
psubd
mov
stos
sbb
dec
and
adcb
cmpsb
aad
fs
fcmovne
dec
xchg
test
icebp
subl
fs
sar
sarl
pop
push
and
or
cltd
inc
dec
add
mov
pop
inc
lret
add
out
dec
dec
lods
adc
roll
andl
xchg
adc
mov
jg
hlt
dec
adc
outsb
sbb
or
ret
jg
psubusw
jge
aam
sub
or
ljmp
clc
jnp
movsl
inc
and
ljmp
in
pop
ja
push
pop
xor
mov
cwtl
pushf
movsl
outsl
inc
push
sub
ficompl
pop
add
mov
or
pop
mov
xchg
mov
repz
or
test
enter
popf
jne
gs
repz
test
jns
cld
jmp
dec
xchg
inc
mov
lock
jge
push
lods
in
shrb
pop
pop
aam
cmp
mov
jb
scas
push
xor
xchg
add
movsl
sub
mov
aad
sbb
cmp
ds
pop
mov
or
out
out
mov
sbb
pop
mov
mov
iret
cmc
test
jmp
incb
jb
sbb
imul
mov
xchg
xorb
shl
push
cmc
adc
and
cmp
or
xlat
sub
shlb
test
pop
push
inc
xchg
lock
lods
adc
out
jno
xchg
popa
dec
inc
orb
pop
push
dec
xor
rol
fnstcw
lret
std
jge
cmp
cs
push
push
xor
push
enter
call
sub
stos
shlb
dec
mov
inc
lods
rcll
mov
movsb
adc
or
icebp
imul
or
andb
jl
jmp
pop
aad
add
call
notb
pop
enter
adc
out
lcall
mov
sbb
inc
mulb
mov
xchg
push
repnz
fcmovne
xchg
jecxz
rorl
outsb
andb
pop
mov
les
jns
repnz
les
sbb
adc
cmpsl
cli
adc
push
mov
xor
jb
lcall
cmp
add
inc
int
int3
aaa
inc
lods
scas
fldt
inc
imul
inc
sbb
js
pop
inc
sti
adc
stos
sbb
popa
cmp
sar
in
pop
fcoms
lods
mov
xchg
arpl
popa
sbb
sbb
or
xor
lods
cwtl
out
jae
push
iret
fxch
test
xor
inc
mov
jo
pop
mov
shr
sub
in
cmp
xchg
jbe
int
push
cltd
lds
flds
scas
jl
fldt
cmpb
notl
jo
outsl
dec
aad
push
sub
xchg
push
jae
mov
incb
pop
cli
sbbb
inc
in
ret
hlt
adc
mov
aaa
xlat
dec
mov
lock
adc
push
adc
push
sbb
push
mov
add
pop
sti
sub
xchg
out
cmc
bnd
xor
xchg
testb
jge
imul
sahf
lcall
sub
in
leave
insl
and
jl
ds
stos
scas
fdivrp
outsb
int
bound
jne
call
lods
jae
jb
adc
aas
stos
imul
pop
pop
cmovns
jae
pop
mov
and
jbe
jl
fdivrl
lret
fisttps
jb
add
xchg
mov
push
cs
mov
jp
pop
adc
ljmp
jno
and
movups
in
cwtl
jg
into
repz
adc
ficoml
lds
xor
xchg
mov
test
loop
testl
stos
xchg
xchg
pop
mov
leave
enter
jbe
and
dec
jns
dec
cmpb
push
mov
mov
insb
gs
lret
inc
adc
xor
xor
bound
push
push
aas
imul
cmp
sbb
call
and
inc
lret
mov
lods
dec
add
adc
sub
xor
cltd
insl
xchg
pop
pop
sbb
sub
jp
insl
jge
dec
fstl
inc
cmp
and
sarb
ljmp
xchg
and
lcall
repz
mov
and
cmpsb
sub
ds
sbb
adc
mov
test
pop
inc
sbb
outsb
stos
or
int3
adc
repz
mov
sbb
repz
testb
cmp
ret
xchg
out
pop
shll
dec
mov
scas
cwtl
push
mov
ret
xchg
adc
add
xor
xchg
push
insb
mov
jns
xor
loop
aam
fnsave
cltd
cld
pop
pop
fldenv
jo
and
test
stos
lock
sbb
mov
push
cmp
lcall
pop
sub
xlat
test
inc
push
mov
fistpl
or
add
divb
ficoms
les
mov
lret
cltd
mov
addl
pop
jb
icebp
shl
adc
mov
lea
into
adc
cli
fmul
ljmp
ja
pop
inc
dec
xlat
xchg
cltd
fnstcw
stc
adc
loopne
mov
test
push
xor
mov
pushf
lcall
mov
cmpsb
mov
ljmp
dec
inc
and
movsb
cs
mov
jp
jmp
lods
mov
mov
push
orl
push
repnz
mov
xlat
cmc
int3
test
xchg
popf
adc
cmc
cmpsl
test
jecxz
lahf
lahf
and
lret
mov
imul
xchg
mov
push
mov
jg
cli
adc
in
and
iret
cmp
mov
repnz
jne
mov
int
pop
mov
in
movsb
xchg
test
push
loop
jbe
pop
and
fiaddl
add
loop
movl
imul
ja
ret
das
mov
sub
enter
cli
rorl
sub
cld
pop
enter
jb
movsb
push
gs
push
cpuid
or
mov
addr16
xchg
addr16
fidivl
mov
and
push
mov
out
insl
gs
mov
mov
pop
mov
js
xchg
push
enter
mov
jns
and
ds
cwtl
lock
pop
xchg
pop
pop
call
nop
jbe
cwtl
mov
sub
mov
gs
shr
sub
movsb
sbb
mov
out
shrl
dec
aas
in
test
rorl
pop
scas
jle
add
or
aaa
jo
mov
mov
leave
push
je
arpl
aam
xchg
jns
test
mull
xchg
xchg
mov
inc
out
je
mov
fildl
push
iret
mov
pop
jmp
jp
xor
popf
sahf
fidivs
and
shlb
movsl
fldcw
mov
insl
adc
mov
sahf
lea
xchg
adc
rorl
rclb
dec
adc
bound
cmpl
in
xor
cmp
test
out
jge
out
inc
xor
cmpl
scas
scas
icebp
mov
cltd
sub
jnp
xor
xorl
mov
xor
pop
std
push
ds
mov
push
scas
push
repz
shl
adc
cwtl
cmp
mov
sub
add
pop
jle
int3
or
sub
push
out
mov
movsb
adc
out
jns
fisubl
lcall
jp
cmpsb
sti
int3
ljmp
cmpsl
into
rcll
jbe
push
sbb
sbb
mov
add
xchg
out
movsl
inc
sub
fcoml
jmp
add
int3
push
test
stos
cmp
hlt
into
xchg
adc
fistps
cmp
lods
pop
cmpsl
jg
fidivrs
xor
and
jne
inc
comiss
out
in
cmp
sahf
lret
pop
sbbl
gs
adc
out
pop
subl
adc
and
pop
or
inc
pop
cmp
xchg
mov
sub
lds
push
enter
int3
pop
inc
test
call
std
sub
and
test
mov
fildll
stos
test
dec
ret
imul
mov
aam
mov
mov
sub
jecxz
or
or
sbb
int3
mov
inc
cwtl
jp
jo
sbb
repz
int3
fistl
in
add
out
jnp
cli
xchg
mov
shll
xor
jae
xchg
xchg
push
sub
pop
ret
rol
cmp
testb
pop
es
out
ret
sahf
jne
sbb
cmpsb
in
dec
sbb
inc
aas
pop
dec
incl
sbb
jle
add
sub
dec
add
mov
push
inc
ljmp
push
mov
cmp
mov
jl
js
dec
lcall
inc
or
pop
xor
push
ret
sub
movsb
jle
mov
cmp
push
test
or
xlat
jne
sub
add
pop
pop
iret
int3
out
jle
out
and
cmp
mov
std
dec
mov
inc
std
inc
jge
lods
push
ds
rol
hlt
imul
jp
aad
jg
vunpcklps
or
sbb
test
push
sbb
and
dec
in
pop
pop
insb
nop
mov
mov
stos
cli
stos
sbb
nop
push
ret
imul
jbe
fld
adc
adc
stc
test
push
decl
jo
out
or
dec
adc
pop
in
pop
cmp
mov
or
shl
std
insl
dec
repnz
insb
jle
lds
scas
sti
cmc
mov
sbb
es
xchg
pop
xor
leave
loope
and
pop
push
repz
mov
stos
push
pop
aas
test
subb
and
push
add
scas
arpl
and
mov
mov
jl
mov
testl
add
clc
outsb
shr
dec
jp
cmc
and
pop
aaa
inc
xchg
sub
adc
aas
dec
mov
pop
sbb
cmp
jae
pop
mov
cmp
pop
jae
pushf
adc
mov
sub
mov
xor
pop
fwait
out
jnp
and
sahf
js
mov
inc
insb
xchg
push
push
push
push
aaa
cmp
and
or
mov
and
ret
xchg
mov
pop
pop
and
dec
das
icebp
fsubr
cwtl
fists
push
subl
shrb
jbe
cmp
ja
cmp
jp
cmovne
jno
or
ja
push
jmp
add
scas
inc
daa
adc
push
add
xchg
push
mov
cwtl
jp
push
xchg
jno
xor
and
movsl
das
pop
cld
ja
cs
ficomps
lret
sub
adc
fnstcw
rcll
xor
fisubrl
ror
jo
negl
adc
mov
lods
repz
sbb
mov
pop
popf
bound
inc
xchg
jb
add
loopne
sub
xchg
rcrl
add
add
popa
outsl
std
call
into
fldt
dec
int3
imul
jmp
and
mov
or
jo
imul
xchg
pop
ljmp
sub
repz
cli
pop
push
push
push
mov
pop
adc
mov
insl
mov
inc
cltd
xor
sub
inc
sbb
roll
test
mov
push
jmp
add
popf
int3
inc
subl
jge
mov
sub
cmp
mov
addr16
sbb
daa
in
add
jp
xor
sub
das
inc
mov
addr16
pop
inc
bound
push
push
xor
mov
gs
and
sbb
xorl
movsb
outsl
adc
adc
movsl
cmp
insb
dec
cmp
sbb
sub
mov
iret
jg
lods
or
mov
inc
hlt
mov
xlat
out
out
int
lock
sti
in
cmp
or
xor
jne
push
fisubs
jns
xchg
pushf
fs
sbb
jle
and
and
jmp
cmpsb
imul
dec
cwtl
cmp
inc
mov
cmp
lds
movsl
lds
je
add
loopne
mov
cs
je
cmc
aaa
pop
mov
repz
adc
aaa
inc
imul
ret
or
fs
std
lea
sbb
push
scas
mov
and
mov
daa
sbb
repnz
or
pop
mov
cltd
cwtl
rcl
inc
test
add
pop
sub
push
mov
ljmp
sub
int3
notb
lock
cs
pop
cwtl
pop
in
mov
cmp
loope
add
add
add
daa
addr16
in
inc
sub
aam
jge
inc
mov
ljmp
pop
orl
jns
xor
daa
mov
push
cmpsb
cltd
sahf
mov
jnp
push
mov
sbb
pop
pop
fbstp
xor
sbb
cli
fdivl
jle
mov
mov
stos
sub
or
test
mov
mov
push
in
xlat
jb
loopne
and
inc
mov
leave
jb
in
sbb
xchg
jbe
push
clc
repnz
mov
stos
dec
in
jecxz
inc
pop
cmpsl
mov
inc
outsb
add
jecxz
cmpl
jle
cld
xlat
dec
mov
mov
mov
mov
inc
repz
dec
or
mov
les
cmp
lods
aas
push
ficompl
lock
mov
fnstcw
arpl
add
shll
out
mov
mov
cmpsb
cwtl
test
cmp
mov
test
mov
inc
fadds
pop
mov
aaa
jp
arpl
jae
add
icebp
xlat
push
cmp
or
push
pop
adc
pop
ss
adc
xchg
jl
push
fdivrl
subb
inc
arpl
jae
jns
jb
daa
mov
and
fdivl
enter
adc
jecxz
bound
xchg
js
test
jecxz
inc
inc
movsl
mov
push
aad
cmpsb
pop
insb
push
test
sub
and
inc
mov
sub
sarl
pop
rorb
pop
jbe
push
mov
into
cmp
int3
mov
aaa
xchg
push
mov
nop
fistpll
addr16
dec
lea
xchg
push
lods
cltd
inc
outsl
loope
daa
push
xchg
popa
ret
icebp
iret
sbb
shrl
push
xchg
inc
mov
shrl
pop
push
jge
scas
lcall
stos
sub
ds
push
cli
or
lret
mov
or
push
mov
sub
cs
and
adc
arpl
mov
xchg
cmp
fnstsw
daa
sub
outsl
xchg
jmp
pop
jne
xchg
xor
and
lea
xor
lret
cmp
andb
push
lods
xchg
mov
xor
xchg
movsl
lahf
cmp
aaa
out
inc
jmp
push
imul
sub
out
test
gs
scas
stos
push
push
pop
divb
jb
stos
mov
push
in
in
pop
repnz
push
js
fs
mov
pop
push
popa
int
leave
pop
mov
outsb
jle
jns
sbb
divb
xlat
mov
cmp
sbb
aam
pop
add
xchg
mov
pusha
dec
jno
fwait
negb
sub
sahf
xor
xacquire
xorb
into
insb
in
add
mov
sub
arpl
xor
push
mov
jns
adc
mov
mov
lods
lcall
decl
mov
jmp
pusha
into
data16
cmpsb
or
mov
sbb
aad
dec
rcll
push
out
shlb
in
mov
sub
and
jg
mov
xor
aad
out
mov
sub
and
out
mov
lcall
sbb
push
adc
mov
xor
cmp
daa
into
mov
sti
loope
dec
pusha
repz
lds
cmp
mov
mov
mov
xchg
cmp
iret
dec
push
add
cs
stc
pop
add
pop
mov
ret
dec
pop
push
jb
mov
out
cli
in
in
repnz
mov
lret
in
jle
adc
xchg
cmpsb
dec
aam
outsb
cltd
fbld
dec
sub
mov
and
insl
psubusb
fcompl
fisubrl
inc
popa
ret
lret
loop
stc
test
out
lret
arpl
mov
sub
or
dec
hlt
jne
negb
sbb
mov
loopne
aad
std
mov
cmp
mov
adc
popf
mov
xor
pop
push
push
xchg
inc
xchg
or
jb
lret
jns
sbb
add
adc
fadds
cwtl
insb
inc
inc
xor
jl
sbb
inc
insl
mov
and
push
cmc
stc
sbb
pop
jge
jecxz
dec
lcall
out
daa
ficoms
rcrb
jae
mov
and
in
out
loope
test
or
fucomip
jg
ret
sub
inc
mov
es
xchg
sbbl
jl
call
movsl
lods
clc
push
stc
xor
jo
jbe
ljmp
and
aaa
and
dec
scas
cltd
add
mov
lds
ljmp
sbb
push
mov
sub
ffree
pop
punpckhdq
jne
cmp
xor
es
ss
push
xor
pop
mov
leave
js
cs
cmp
aas
dec
sub
xor
lock
outsl
in
sub
mov
insl
mov
rorb
jge
mov
aam
push
inc
xor
xchg
inc
xchg
das
outsb
shlb
xor
mov
pop
mov
xchg
sahf
sub
pop
scas
cmp
add
std
xor
and
rol
lea
dec
out
mov
adc
sbb
sti
push
xor
add
or
jl
push
das
sbb
in
pop
inc
push
fstpt
push
mov
and
mov
out
inc
imul
hlt
movsb
lods
cmp
cmp
insl
cltd
xchg
in
sub
pop
ficoms
sub
push
add
lahf
lods
xor
ds
dec
mov
lea
fadd
cmpsb
testl
mov
ror
xchg
repz
out
or
test
movsb
inc
shl
and
mov
fadd
jp
add
fstps
ljmp
shll
or
fldt
cwtl
sbb
sub
xor
ljmp
mov
xor
aad
mov
xor
ljmp
out
mov
cmc
stos
cmp
shl
int
xchg
pusha
push
std
nop
push
rcll
inc
sbb
jecxz
adc
call
pop
pop
loopne
mov
pop
pop
xchg
pop
jmp
dec
movb
iret
pop
mull
add
movsl
lcall
or
daa
and
in
mov
add
jle,pn
das
test
mov
dec
out
and
stos
sahf
mov
stos
test
dec
dec
movsl
pop
outsl
cmp
jge
mov
mov
adc
sbb
or
aad
in
push
negb
pop
sub
push
and
cmp
push
cmc
pop
mov
dec
adc
pusha
fdivl
andl
int3
xlat
sbb
cmpsb
fsts
sub
push
push
push
fldt
fdivl
and
inc
mov
bound
or
cmp
aaa
aam
pop
faddl
push
mov
std
pop
icebp
xchg
outsb
xchg
push
ror
ja
mov
add
rcrl
sub
out
jns
test
mov
test
arpl
pop
negb
shr
das
movsl
mov
pop
iret
shrl
divl
push
add
mov
fs
fwait
std
rcl
jns
cli
stos
cmpsb
js
xchg
or
inc
test
jmp
lcall
clc
mov
out
sahf
or
jae
in
outsb
subb
je
dec
or
add
xchg
cld
jecxz
dec
push
lahf
xchg
stos
clc
adc
sub
push
pcmpeqd
cmp
sub
dec
pop
inc
xchg
mov
jo
in
push
cmpsb
xchg
add
jl
icebp
add
xor
inc
ret
mov
add
test
add
adc
dec
fimuls
sub
sti
lea
bnd
pop
popf
sbb
push
mov
add
out
lret
pop
xor
sub
inc
mov
cltd
sub
jmp
js
sub
sub
sub
in
xor
lods
hlt
cmp
test
pop
inc
icebp
cmp
mov
or
inc
clc
pop
hlt
xor
and
out
iret
subb
ret
mov
dec
pandn
cmc
rorb
adc
adc
push
cmp
jl
cmp
and
mov
xor
aas
mov
rclb
lahf
outsl
inc
fldt
imul
sbb
jp
ret
sarb
add
sub
out
scas
jne
add
inc
repz
in
addl
pop
or
push
in
push
cmpb
addl
pushf
pop
jl
arpl
xchg
sub
test
jmp
pop
xor
xlat
xor
push
jmp
hlt
addl
sbb
rep
xchg
mov
ret
clc
inc
xchg
or
ljmp
imulb
push
pop
xchg
mov
dec
jbe
pop
add
mov
xchg
xchg
xchg
mov
movsl
mov
adc
cmp
jecxz
mov
in
add
cld
imul
pusha
sbb
fmull
flds
aam
sub
mov
lret
pop
mov
sub
pop
incl
das
iret
push
mov
decb
cmpsb
loope
cmp
pop
fidivs
js
jbe
xor
jmp
hlt
std
inc
and
xchg
lods
pop
out
mov
sbb
add
js
jae
push
js
mov
xchg
push
sbb
stos
mov
pop
icebp
inc
movsl
mov
mov
ficomps
ja
incb
sarl
aaa
xchg
out
mov
pop
movlps
aas
stos
aam
push
adc
stos
lret
or
int3
in
push
test
nop
mov
cli
insl
inc
mov
xchg
gs
adc
mov
xor
dec
movsl
xchg
mov
push
scas
xchg
and
ljmp
xor
and
xor
xor
jle
sub
add
iret
jo
fisubl
fnsave
xchg
and
dec
sahf
or
stc
es
xor
dec
cmp
data16
lods
gs
lret
inc
adc
cmpb
xor
ja
daa
movsb
outsb
pop
mov
lret
xor
sub
adc
addl
xlat
ror
lahf
shll
out
mov
mov
hlt
jb
cmpsb
mov
xchg
mov
add
mov
mov
mov
mov
cs
ljmp
js
mov
cmc
les
loopne
xchg
shl
cmp
inc
inc
in
dec
setle
fsubl
xlat
xchg
mov
repz
push
dec
jecxz
int
loope
jns
push
aas
nop
xchg
add
fsubr
jb
mov
fadd
jecxz
dec
std
add
mov
mov
adc
aas
push
and
loopne
adc
aaa
pushf
lock
lods
or
popa
into
nop
into
cmp
incl
mov
ljmp
out
jne
xor
pop
fnstcw
adc
pop
cmp
int
movsl
outsb
dec
or
push
and
fcompl
faddl
mov
scas
sahf
cmpsl
call
repnz
mov
push
mov
xor
xchg
adc
inc
aas
jb
adc
pop
xor
mov
mov
shll
repz
ss
mov
lret
xor
jecxz
loope
mov
cmp
cmp
push
cmpsl
outsb
push
cmp
inc
push
rcrl
xchg
fwait
loope
jp
sahf
fsubrs
mov
sbb
sbb
addl
inc
stos
inc
dec
adc
jg
fdivr
pusha
pop
jae
push
add
adc
in
gs
pop
sbb
mov
cmc
xchg
rorb
cmp
dec
int
sub
ror
inc
pop
popa
lds
sub
out
mov
stos
in
loop
pop
les
mov
sbb
cmp
ds
pop
pop
enter
cmp
bound
ret
fldl
out
dec
mov
imul
shrl
jl
mov
das
add
jmp
mov
mov
fstl
lods
and
or
adc
rorl
orb
push
stos
push
xor
lahf
mov
jb
in
sub
rorl
xor
jbe
outsl
pop
cwtl
sub
inc
pop
pop
popa
lds
and
daa
jle
addr16
out
adc
lds
mov
push
jnp
cmp
pop
mov
and
sbb
ret
in
or
ret
movsl
xchg
cmp
xor
sbb
push
mov
call
imul
mov
jae
loope
testl
lods
cmp
mov
sbbb
fcompl
mov
jno
mov
out
stos
xor
dec
sbb
and
cmpsl
cld
cmp
roll
daa
xchg
adc
xor
inc
arpl
test
pushf
and
jge
rcll
insb
push
ljmp
jne
add
cmp
cmp
push
hlt
pop
mov
inc
and
negl
flds
mov
loope
xlat
jge
insb
and
or
fs
psubsb
in
mov
xchg
arpl
mov
mov
out
sub
ror
xchg
mov
loopne
push
xor
movsb
jae
rol
mov
xor
xchg
int3
arpl
jae
push
repz
xchg
sub
cmp
pop
mov
pop
add
jmp
push
cld
inc
lahf
cmp
dec
push
fdivs
or
mov
cmc
gs
loope
scas
aam
sbb
xor
cs
jle
inc
jnp
mov
sbb
add
adc
jnp
xchg
pop
and
xor
push
shrb
jns
push
add
pop
pop
mov
fimull
pop
push
movb
sub
xchg
ss
cmp
mov
nop
cli
sbb
mov
stos
jmp
jmp
test
cmp
fisubrs
dec
inc
outsl
pop
fprem1
inc
add
sbb
jecxz
sub
movsb
cmp
inc
movsb
xchg
jae,pn
xchg
movsb
scas
aas
scas
mov
or
jb
scas
out
pop
daa
ds
lcall
in
movsl
mov
jne
pop
aad
daa
adc
hlt
in
arpl
dec
imul
ficompl
xor
movsb
xchg
mov
lcall
outsl
or
or
fistl
mov
xchg
mov
mov
lods
and
push
push
xchg
adc
jl
mov
pop
in
jnp
dec
sbb
divl
out
sbb
std
jns
fcompl
sar
fdivs
ret
movl
cli
mov
lret
mov
icebp
aam
movsl
dec
gs
fisubrl
xor
push
nop
mov
and
aas
shll
sub
mov
fwait
lahf
push
and
ret
bound
test
rcr
test
jmp
or
cmpsb
mov
iret
adc
and
outsb
inc
mov
aad
push
movsb
dec
rcrb
pmaddwd
fdivr
lods
mov
pusha
sub
mov
test
rcr
stos
mov
xor
lea
js
add
cmp
cmp
scas
dec
outsl
mov
mov
orb
popa
jmp
cmp
fiaddl
sarb
inc
outsb
pop
cmp
pop
leave
dec
jp
jb
imul
ds
mov
xchg
out
arpl
ds
xor
sub
sbb
dec
call
or
jmp
mov
or
add
stos
out
push
jb
dec
rcr
xor
shl
pop
cmp
into
adc
mov
push
arpl
and
add
mov
mov
ds
insb
xchg
inc
aad
nop
je
fisttpll
mov
imulb
fdivrp
sbb
fcoml
push
scas
aas
adc
rclb
fisubrs
or
push
xor
shrb
daa
xor
mov
ss
rcl
mov
sub
neg
push
int
add
xlat
loop
mov
jp
sbb
and
pop
mov
push
adc
jbe
cltd
icebp
inc
add
mov
test
add
cmc
mov
out
jns
cmpsb
sbb
jno
mov
add
push
cmpsl
add
imul
inc
ret
add
or
mov
das
fidivl
or
sbb
mov
shlb
jb
push
fs
push
cmpsl
fsubrs
jnp
cmpsl
fildll
pusha
nop
jmp
imul
sti
rclb
jno
cwtl
movsl
movsl
inc
movsl
inc
adc
xor
clc
xor
add
sti
stos
and
stc
out
push
lcall
testb
lahf
adc
hlt
and
pushf
adc
je
pusha
inc
or
and
loopne
jg
lcall
ret
mov
or
xor
or
das
jl
dec
jnp
fistpl
mov
popa
lahf
std
mov
mov
dec
call
mov
dec
pushf
dec
subb
out
jl
jnp
cld
mov
adc
jnp
jo
xor
in
mov
ja
dec
jo
lds
or
cmp
aam
divl
out
adc
jge
insl
je
in
add
pop
jle
xchg
fcmovbe
mov
pop
scas
cmc
jg
sbb
inc
rol
xchg
bound
pop
scas
and
push
sub
into
mov
sub
pop
sbb
xchg
mov
mov
jb
inc
xor
jmp
addl
fsubs
or
sahf
inc
les
notl
test
mov
inc
das
sbb
pop
jnp
shrl
aas
aam
fcmovnu
cmp
roll
push
dec
adc
and
or
xchg
xchg
shrl
arpl
xlat
cmp
dec
sub
out
xchg
stc
adc
mov
movsb
mov
scas
lock
sbb
pop
sub
out
js
jl
out
cmp
scas
xor
push
das
fstpt
in
lcall
or
pop
rcrl
lock
push
ret
jb
jae
xlat
xor
pusha
adc
dec
outsb
push
sahf
add
popa
mov
dec
mov
push
and
je
cmovp
xchg
dec
xchg
jecxz
scas
sahf
jae
repnz
cmp
xor
or
xchg
mov
jp
hlt
inc
insl
inc
int3
add
rorl
cmp
fst
scas
jns
ljmp
add
fcoml
and
popa
pop
sub
or
inc
dec
fisubs
cmp
sbb
mov
mov
mov
sbb
movsb
cmp
mov
cld
popf
add
andl
sbb
xchg
popf
cmp
pop
arpl
out
xchg
pop
and
cmp
adc
jo
pop
addl
imul
jnp
stos
xor
jp
dec
loope
stc
insl
and
out
pushf
ds
cmp
mov
sbb
mov
pop
sarl
xchg
lcall
pop
pop
cmp
inc
xor
xchg
incb
lds
in
jo
ret
sub
jp
add
sarb
mov
inc
out
pusha
xchg
mov
push
loopne
push
and
mov
scas
frstor
push
pop
inc
mov
pop
mov
mov
sbb
sbb
mov
pop
int3
cmp
dec
mov
mov
xchg
cmc
adc
ja
mov
xor
or
maxps
xor
inc
cmp
rol
and
push
scas
push
sarb
jbe
jle
jmp
je
xchg
cmp
les
ljmp
xchg
in
push
movsb
inc
add
sbb
hlt
xorl
adc
xchg
adc
dec
andl
inc
lods
js,pt
pop
inc
pushaw
pop
sub
jle
push
scas
les
pop
adc
lcall
mov
dec
icebp
les
cmp
mov
cmp
dec
xchg
movsl
xchg
mov
push
jbe
xchg
shl
call
and
pop
mov
adc
lahf
pop
aaa
push
adc
xor
inc
imul
sbb
adcb
das
sbb
dec
push
inc
xlat
cmp
test
sahf
adc
test
adc
sub
and
lret
scas
outsb
push
inc
notb
aam
sbb
inc
or
lahf
xor
stos
pop
adc
push
adc
jl
or
or
pusha
jb
lock
mov
shrl
push
dec
mov
jno
xchg
pop
add
in
jp
xor
push
push
xor
mov
negl
xchg
imul
cwtl
jmp
add
adc
or
enter
push
lahf
xor
js
div
and
xor
aas
xchg
bndstx
jmp
xchg
push
test
mov
lock
mov
lock
mov
flds
add
fs
fiaddl
out
adc
pusha
jp
mov
jne
js
mov
push
leave
inc
dec
mov
out
lods
add
or
adc
mov
inc
loopne
movsb
dec
ret
fs
rorl
add
cmp
nop
push
js
int
lds
jae
cmp
cmc
mov
jno
xor
fisubrs
sub
push
fdivrs
das
sub
sbb
sbb
inc
and
mov
mov
cltd
and
xor
or
subb
add
mov
mov
push
repnz
mov
push
and
adc
sbb
jle
jmp
test
sub
jp
cwtl
dec
mov
push
pop
ret
xchg
fidivl
push
dec
pop
shr
daa
xchg
and
das
sub
lds
in
xchg
cli
out
xchg
inc
fisttps
xchg
xor
pop
fcompl
mov
sub
fidivrl
pop
imul
into
movsb
xor
xchg
push
movsl
sarl
aam
ds
sbb
in
xor
push
fcomi
loope
cmp
jnp
aad
cmp
jbe
in
cli
push
test
add
outsl
hlt
divl
hlt
cmpsb
add
jo
xchg
adc
repz
push
or
mov
xchg
push
loopne
sbb
hlt
ret
fldcw
popa
push
mov
mov
mov
lods
shrb
sbb
outsb
pusha
mov
sbb
pop
les
jbe
lcall
mov
ljmp
mov
or
loope
xor
in
dec
iret
cmp
cmp
movsl
push
xchg
xor
dec
outsl
loopne
mov
mov
ss
mov
test
xor
sbb
icebp
sbb
adc
out
xor
int3
ror
cmp
mov
insl
sti
dec
out
xlat
cmc
in
jp
gs
add
stc
adc
insb
pop
adc
test
sub
lods
mov
sub
push
movsb
lret
outsb
sub
loop
jmp
xlat
ret
mov
inc
jmp
les
jne
pop
fildll
int
rcr
inc
jae
dec
xchg
cld
cmp
sub
pop
dec
stos
insl
pop
test
dec
push
insb
nop
inc
mov
push
sub
mov
push
movsb
aaa
dec
push
pop
popa
mov
push
loop
mov
cs
sub
adc
pop
mov
mov
push
popf
mov
into
sbb
out
mov
xor
dec
jae
xor
mov
mov
pop
push
gs
in
inc
xor
add
imul
pop
mov
outsb
imul
shl
sbb
loop
cltd
xchg
mov
jecxz
xor
test
dec
xor
cmp
push
sbb
mov
outsb
pushf
mov
hlt
push
xchg
rcr
xchg
dec
loopne
sbb
repz
loopne
sub
mov
imul
orl
lods
cli
stos
pop
or
mov
in
xor
cmpsb
in
pop
lods
pop
push
lahf
testl
shll
hlt
xchg
cmp
xchg
inc
mov
mov
mov
mov
out
push
lds
add
cltd
mov
mov
mov
jbe
mov
push
mov
add
xor
or
bound
cmp
dec
mov
gs
mov
sbb
cmp
iret
sti
or
in
mov
fdivs
adc
imul
push
jae
stos
pop
mov
pop
sbb
sti
inc
daa
imul
call
mov
fmuls
out
mov
inc
hlt
repz
pop
add
packsswb
push
mov
dec
and
pop
mov
jmp
incb
int3
fimuls
or
les
call
mov
xchg
shlb
sbb
iret
add
mov
fnsave
pop
cmc
pop
mov
sbb
push
cmp
orb
mov
int3
dec
mov
addr16
jmp
insl
mov
aad
ficompl
push
xor
lock
pop
mov
cld
pop
adc
or
push
cwtl
xor
sbb
jmp
ret
fistpl
cmp
out
mov
fimuls
loope
mov
or
stc
inc
iret
aam
jb
gs
mov
lret
xchg
fs
push
int3
sbb
dec
in
flds
fs
pop
mov
dec
ficomps
stos
sbb
sub
mov
mov
negb
mov
mov
std
cld
shr
mov
insl
dec
or
scas
mov
daa
shlb
push
mov
cmc
repnz
ljmp
movsb
pop
pop
and
and
rol
imul
sub
sbb
scas
jae
ljmp
insl
sub
out
mov
loop
dec
enter
sub
xchg
jno
pop
imul
cmp
lea
and
int3
adc
pop
sbbl
sbb
decl
mov
popa
add
scas
or
imul
dec
or
push
rolb
pop
inc
dec
pop
fildl
cs
sub
loop
dec
xor
imul
jb
lods
dec
inc
in
xor
push
adc
je
rcr
mov
pop
movsb
data16
add
es
xor
rorb
dec
leave
push
xchg
add
push
xor
mov
cmp
dec
repnz
jge
push
mov
mov
test
add
mov
mov
movsb
daa
jle
js
fnsave
dec
jne
mov
popa
movsb
inc
icebp
mov
ljmp
daa
sub
pop
pop
cmp
jg
sub
bound
stos
mov
mov
stc
cmpsl
int3
jns
call
enter
jp
lret
pop
insb
ss
add
dec
inc
loopne
lret
ljmp
pop
add
negl
cmc
shrl
mov
orb
xor
adc
cmp
dec
fs
scas
xor
add
sbb
stos
or
mov
xlat
rcrl
cmp
adc
pop
imul
xor
inc
adc
frstor
fldcw
test
scas
mov
movb
stc
pop
out
xchg
inc
xor
jl
rcrb
aaa
movsl
ljmp
decb
or
rcl
xor
rorl
adc
out
cmp
idivl
rorl
jb
faddl
or
sbb
add
add
inc
or
pop
mov
and
faddl
daa
xchg
loop
fsubl
lods
aas
pop
aaa
add
leave
pop
jl
popf
pop
jo
pushf
jecxz
into
jno
aam
js
lods
xor
adc
scas
aam
push
pop
popa
stos
out
imul
addb
das
arpl
cmp
ret
out
jne
mov
enter
pop
xchg
inc
icebp
fsubrl
xchg
fisttpll
int3
test
fstpt
sti
push
jg
sahf
mov
fsubr
fiadds
adc
or
pop
addr16
mov
mov
jl
sahf
movsb
sbb
icebp
repz
cmp
inc
pop
nop
scas
ja
mov
and
push
dec
orl
xor
xor
in
mov
loop
shrb
pusha
fnsave
shll
pop
jo
jo
add
cmp
fcompl
mov
sti
maxps
mov
mov
push
xchg
mov
ljmp
fbld
mov
lds
fdivrp
push
push
mov
in
cmpsl
dec
or
test
fnstsw
sti
jmp
jb
pop
push
nop
mov
mov
iret
mov
adc
xchg
or
ja
inc
adc
lret
jecxz
clc
pop
jge
inc
push
sbbb
addr16
movsl
xchg
loope
aaa
icebp
in
std
add
cmp
jns
dec
xchg
std
call
sbb
pop
aad
inc
mov
inc
vmovaps
lea
mov
mov
xlat
insl
pop
push
inc
sbb
add
cmp
sbb
cmpsl
adc
leave
xlat
jmp
loope
jg
pushf
stos
inc
and
daa
out
and
xchg
dec
pop
leave
mov
gs
ss
mov
cmp
pop
inc
stos
ja
jbe
pop
xchg
fmulp
pop
jecxz
mov
out
je
push
dec
xor
enter
mov
mov
sub
inc
out
push
xchg
push
or
xchg
or
push
aad
cwtl
loope
pop
mov
das
ss
inc
popa
imul
lods
stos
or
jge
in
sub
mov
incl
loop
mov
sub
and
enter
cmp
sti
and
cli
mov
in
lock
inc
arpl
js
sbbl
es
gs
or
mov
fnstcw
cmp
adc
add
aam
jae
pusha
dec
adc
mov
ja
aas
dec
or
popf
push
in
fcmove
scas
mov
push
jae
sbb
jl
mov
sbb
fsub
xchg
inc
dec
add
stc
fs
cmp
loop
fsubrl
and
mov
sbb
les
subl
sub
adc
sub
lret
test
ss
pop
jnp
push
call
loope
jl
pop
jecxz
jnp
dec
xor
in
in
mov
mov
dec
mov
add
sbb
xchg
pop
out
push
test
cli
adc
movsl
imul
shrb
push
lcall
push
movsl
imul
jmp
vpunpckhbw
pop
aas
push
test
outsb
add
dec
jae
ret
je
stc
pop
jp
enter
sbb
and
xchg
sbb
shrl
sbb
pop
cli
add
mull
ret
push
push
nop
addl
arpl
inc
or
cli
cmp
fwait
lahf
sbb
xchg
mov
fnstenv
pop
inc
mov
jl
inc
inc
jp
sbb
out
in
mov
xchg
imul
fisubl
mov
add
scas
jb
fsubs
pop
imul
lods
mov
dec
sbb
pop
sbb
and
bound
lahf
or
xchg
shlb
cmp
jge
mov
stos
sbb
or
icebp
jg
push
aam
mov
lret
repz
sub
out
cwtl
and
jecxz
push
sbb
gs
dec
test
mov
mov
lret
int3
lods
in
sub
ds
movsb
or
xlat
cmp
enter
xchg
js
mov
pop
pop
cmpsl
movsl
mov
sti
ffreep
or
loopne
xor
mov
push
jmp
inc
inc
arpl
dec
ud2
test
imul
jge
inc
int3
push
mov
je
dec
ja
push
add
xchg
push
mov
jne
cmp
dec
cmpsb
insb
inc
sahf
pop
or
pop
hlt
add
or
into
sub
mov
int3
dec
jb
cmpsb
sahf
mull
hlt
jmp
call
add
cmp
or
xor
dec
lods
dec
xchg
repnz
cmp
push
mov
orb
add
mov
loop
adc
mov
mov
xor
bound
ds
test
sbb
pop
pop
shlb
pushf
fadds
jp
ljmp
jmp
aad
stos
and
jae
test
shlb
adc
push
push
aam
cmovs
mov
push
dec
out
jb
mov
test
add
negl
xchg
mov
mov
stos
lds
movsl
testb
mov
push
push
push
fbstp
cmp
mov
jae
push
push
call
jecxz
sub
insl
adc
mov
sti
lret
cmp
push
adc
mov
popa
sti
dec
in
inc
pop
jmp
aaa
movsl
and
or
call
scas
mov
sti
cmp
push
stos
jbe
arpl
jns
jge
imul
cmp
test
lea
sti
xlat
and
pop
sbb
adc
dec
pop
into
and
mov
mov
mov
cmpsl
out
dec
mov
call
or
fwait
or
lret
fnsave
xchg
sbb
shll
push
lcall
cmp
shlb
in
je
pop
loopne
mov
mov
add
pop
scas
call
mov
scas
cltd
inc
decb
inc
sbb
in
mov
cmp
add
jo
out
dec
insb
xchg
xor
cmp
jns
sbbb
cli
jle
cmp
jno
into
cmp
rcll
cmpsb
in
dec
sbb
std
push
mov
add
dec
jmp
test
sbb
xchg
popa
mov
mov
bound
ja
pop
repz
mov
adcl
mov
inc
rol
add
in
adc
or
pusha
dec
pusha
lret
cmp
lods
stos
pop
jo
push
loope
jge
dec
mov
and
movsb
inc
cmp
insl
jl
pop
or
mov
mov
repz
lods
and
call
je
lea
test
scas
loop
mov
imul
add
push
adc
hlt
mov
push
out
sbb
gs
sbb
imul
das
sarl
pop
and
sarl
and
into
pusha
mov
cltd
mov
rorb
inc
dec
add
adc
lret
add
cmp
adc
and
inc
into
add
popa
cmpsb
mov
test
cmp
pop
xchg
mov
cwtl
icebp
aad
fcomps
loope
scas
ret
jnp
imul
cmp
loope
rol
shrb
push
xchg
sub
mov
adc
shrb
lret
and
push
jmp
aam
ljmp
rorb
insb
fsubs
or
mov
js
fdiv
sub
loope
sub
lds
jge
lahf
add
pushl
int3
lret
test
pop
movsb
stc
jmp
sub
dec
or
outsl
stos
out
mov
stos
lock
mov
fldcw
push
fisttpll
xchg
movsb
outsb
xor
cmc
clc
roll
nop
call
imul
jb
push
sbb
xor
dec
lahf
call
push
jmp
stos
xchg
adc
mov
mov
and
pop
mov
leave
leave
lea
scas
ja
out
insb
aam
movsb
aas
xor
mov
js
sbb
pusha
outsb
hlt
lds
dec
sub
add
adc
popa
addr16
aam
or
dec
ljmp
xchg
and
mov
ret
movsb
pop
sbb
inc
pop
and
std
jp
dec
mov
jae
sub
jne
mov
mov
js
xchg
push
or
xor
and
divb
sbb
mov
adc
or
ficoml
cwtl
add
pop
sarb
cwtl
ljmp
stc
pop
cmp
and
nop
add
xchg
jg
jb
sbb
imul
cmpl
inc
iret
je
mov
xchg
fwait
xchg
aam
in
pop
sbb
jl
jne
xchg
mov
mov
inc
sub
sar
push
sbb
out
sbb
insl
xor
in
jge
call
pop
addr16
jbe
pop
push
movsb
mov
ja
pushf
and
xor
dec
shlb
cmp
mov
xchg
jae
leave
pop
in
mov
sub
inc
inc
loope
aad
pop
stos
xor
in
push
shr
hlt
mov
dec
cmp
adc
roll
dec
loopne
cld
and
inc
cltd
test
inc
jmp
test
pop
cli
stc
lret
lock
repz
popf
fwait
rclb
mov
mov
faddp
aas
xchg
scas
leave
imul
test
xchg
repz
pop
push
mov
jnp
and
push
inc
mov
inc
xor
in
push
daa
push
stc
inc
dec
add
jns
out
and
add
ja
mov
and
dec
leave
mov
pop
and
dec
clc
testl
push
cld
aaa
stos
pop
repz
mov
inc
add
mov
out
call
rol
pushf
roll
fisubrs
push
lock
rcrb
flds
stos
stc
outsb
sbb
cltd
jo
leave
call
mov
dec
cmc
insb
or
gs
mov
aas
aad
mov
adc
pop
or
stos
inc
rolb
mov
aad
fwait
in
jae
insl
repnz
push
fcmovnu
ret
jp
test
inc
cmp
xchg
ffreep
repnz
mov
ret
into
repnz
ljmp
jns
xchg
fidivrs
xchg
inc
add
jg
sub
call
and
cmpsl
arpl
bound
push
sbb
and
test
dec
sarb
rclb
mov
mov
mov
sub
popa
jmp
and
test
cli
loop
xlat
push
loope
xchg
loop
pop
mov
inc
js
daa
sbb
in
sbb
mov
mov
icebp
inc
movsl
dec
outsb
int
aaa
lds
leave
dec
mov
lcall
inc
jl
mov
adc
jno
dec
inc
lock
cmc
sub
cmc
out
jnp
enter
insb
loop
clc
xorl
popa
add
loope
sub
push
outsl
cwtl
mov
add
rol
les
and
xchg
jmp
mov
sbb
shll
or
pushf
aad
mov
shr
dec
cltd
mov
fbld
inc
add
cld
jbe
mov
xchg
sarl
scas
cmp
mov
fdivrl
addr16
fcmovnu
push
push
mov
xlat
in
lds
stos
and
arpl
addr16
stc
sarl
fucom
daa
cmp
mov
out
xchg
outsb
cmc
dec
sbb
fiadds
xchg
mov
and
or
or
inc
arpl
or
in
movsl
xor
nop
or
sbbl
and
sbb
cmp
and
subl
testb
and
lahf
add
mov
loop
push
cmp
and
sbb
add
fs
out
shl
sbb
and
pusha
adc
jecxz
mov
adc
mov
int3
sbb
add
mov
aaa
loope
js
jns
pop
sub
stc
pop
ret
sbb
xor
stc
pop
add
adc
leave
test
or
and
jg
fsubl
fdivrl
pop
stos
xchg
sbb
jmp
mov
movsl
mov
or
test
add
jno
out
jbe
mov
test
sub
push
dec
dec
icebp
popf
push
out
movsb
sbb
arpl
cmp
popa
xchg
rcl
bound
ret
pop
aaa
mov
into
jle
sbb
sub
inc
mov
pop
loop
out
nop
push
pusha
mov
add
std
shl
int3
or
or
push
ret
das
jno
pop
lods
mov
sub
jnp
les
or
sub
dec
push
jns
cltd
je
outsb
inc
fmuls
cmpsl
test
clc
cmpsb
inc
test
sbb
push
cmpb
or
test
fucom
iret
xor
mov
jmp
cmp
xchg
pop
dec
inc
xor
adc
push
mov
mov
mov
in
addl
aas
in
mov
idiv
xchg
jbe
adc
push
jb
imul
push
jbe
jle
inc
lahf
adc
add
aas
lahf
mov
xchg
call
lcall
pop
jno
cli
lret
lock
sti
xchg
scas
mov
sti
sahf
sub
add
jp
jecxz
data16
pop
mov
mov
fwait
jnp
int3
lcall
cli
jmp
mov
test
dec
mov
push
out
lret
mov
cmc
xchg
push
test
inc
push
lret
inc
or
mov
add
jecxz
gs
and
xchg
orl
push
jecxz
fistpl
sub
and
xlat
inc
jns
add
into
mov
mov
sbbb
pop
hlt
mov
idivb
jge
rolb
fimuls
push
mov
pushf
outsl
das
call
pop
fs
pop
cli
std
cmovg
int3
pop
sarl
fstps
inc
pop
jno
dec
lods
dec
daa
and
stos
scas
jnp
xchg
popa
adc
cmpsb
rorl
cmp
sub
mov
lds
push
dec
addr16
or
push
mov
push
cmpsb
dec
jbe
push
inc
das
cmp
xor
inc
mov
jno
xchg
into
in
or
mov
idivl
negb
sbb
dec
xorb
push
pop
std
ror
add
jae
aad
or
pop
sub
inc
in
pop
cmpsb
jmp
lock
sbb
inc
sub
cmp
jl
out
xor
or
lock
xor
dec
lock
outsl
scas
jmp
pop
add
fcoml
lods
mov
inc
inc
gs
mov
mov
dec
lret
jl
and
scas
push
pop
dec
push
sub
out
outsl
xor
mov
push
push
icebp
xchg
sbb
test
imul
dec
xchg
push
imul
scas
xchg
repnz
cli
mov
cmp
jbe
pop
mov
in
sti
cmpsl
dec
xchg
sub
stc
inc
aad
sbb
fcmovne
add
enter
mov
mov
call
adc
adc
in
xchg
lret
xchg
jae
cmpsl
mov
push
scas
out
rcl
add
subb
xorb
movsb
iret
inc
mov
ror
mov
cli
xlat
pop
sbb
mov
sbb
xlat
andl
fs
std
cltd
lock
lret
in
jmp
iret
call
fst
mov
sbb
add
int
imul
into
jp
das
rclb
lods
sarb
test
push
mov
cmp
cmc
and
xchg
je
lds
mov
enter
sbb
cmp
icebp
mov
in
out
add
cld
inc
ret
sbb
subb
mov
sub
dec
fnstcw
mov
jo
cmc
cmp
mov
dec
push
pushf
push
sbb
mov
outsl
inc
cmp
scas
and
movsb
mov
jmp
and
arpl
ret
and
cmp
das
fs
imul
jmp
lds
nop
hlt
add
xchg
push
sub
addr16
cli
pusha
aam
pop
mov
cmp
pop
inc
mov
mov
add
leave
arpl
sbb
inc
sbb
sti
fcmovnu
addl
pop
jae
mov
lret
and
mov
movsl
lahf
xchg
mov
js
hlt
mov
mov
mov
icebp
arpl
xor
mov
out
lds
je
push
jle
xchg
clc
jl
or
ljmp
pop
mov
subb
cmpsl
enter
in
xor
adc
movsb
add
jmp
rcl
insb
xor
sbb
jo
daa
loop
je
sbb
imul
sbb
lahf
shll
sbb
xchg
mov
push
xchg
mov
pop
ss
adc
scas
cmc
es
pop
cmp
aaa
xchg
fdiv
or
or
xor
mov
pop
xor
cwtl
xor
sbb
mov
jnp
inc
mov
outsb
scas
mov
pop
sub
popa
movsb
test
mov
dec
mov
loope
filds
pop
stos
sub
cmpsl
inc
arpl
and
cmpsb
movsb
sub
inc
push
mov
pop
xchg
mov
mov
packssdw
jg
and
outsl
outsb
lods
sub
jae
push
push
test
jno,pt
bound
mov
rcrb
loope
xchg
ds
pushf
xor
xchg
movsb
aad
test
insb
pop
pop
roll
push
mov
cmpsl
pushf
fwait
push
inc
pop
or
movsl
shll
rsm
xchg
push
jae
lds
inc
jecxz
xchg
dec
hlt
push
jmp
or
mov
fs
test
mov
int3
test
sbb
and
in
test
jb
cmp
mov
cld
mov
sub
xlat
push
jne
pop
cltd
fnstsw
mov
movsb
cli
inc
iret
loop
aaa
pop
divl
in
and
ficompl
sub
mov
arpl
test
hlt
mov
pusha
ss
push
sbb
test
test
lret
or
and
dec
dec
testb
stos
xchg
rcll
xor
push
pop
data16
mov
fcoms
push
gs
adc
jge
xchg
mov
les
fwait
lods
sbb
jmp
jae
or
test
das
xchg
add
fistl
insl
add
mov
or
sbb
ficompl
pop
sbb
aad
add
mov
lock
or
popa
and
out
hlt
test
add
jo
push
jmp
fbld
aam
mov
dec
scas
push
sti
popf
ja
mov
ds
xor
daa
ljmp
adc
or
mov
testl
jae
clc
lret
pop
cmp
cwtl
mov
iret
jecxz
call
cli
and
aaa
lods
nop
sbb
dec
adc
sbb
inc
cs
outsl
sarb
fidivrs
outsb
pop
jo
xor
insb
mov
jo
jae
add
mov
jge,pt
mov
es
rcrb
pop
scas
push
or
fnstcw
std
inc
push
arpl
icebp
aad
sub
ljmp
fisubrs
fwait
lock
dec
cltd
and
and
pop
lock
adcl
cltd
jno
daa
jae
call
xchg
sbb
insl
ds
repz
push
flds
shrb
mov
stc
outsl
test
jge
jnp
scas
ds
jnp
sub
movsl
scas
sub
imul
lea
or
adc
jne
cmp
jno
sub
mov
movb
xor
fs
and
dec
fwait
adc
mov
mov
pop
popa
jb
cmc
pop
aad
lahf
and
and
xchg
rolb
or
push
xor
mov
data16
dec
push
mov
lret
inc
xchg
add
ss
out
cmp
xchg
repz
mov
loop
fwait
pop
imul
dec
test
lcall
aad
or
inc
push
pop
fdivrs
xor
scas
adc
mov
mov
call
lahf
lcall
and
xor
loope
jle
pop
fcompl
push
inc
call
and
xchg
and
aad
movsb
imul
cs
pop
movsl
mov
sub
add
inc
in
or
out
fbstp
mov
outsb
rolb
cmpsb
add
je
int
pusha
xor
ljmp
hlt
xor
and
mov
jge
inc
mov
xchg
inc
lahf
addr16
or
aas
cld
movsl
imul
mov
fwait
test
xchg
mov
lret
push
mov
pop
xchg
cwtl
mov
mov
xchg
inc
shl
sbb
push
iret
adc
out
xchg
enter
shlb
dec
pop
pop
and
and
sbb
jg
lock
or
xchg
in
xor
push
and
call
sub
mov
cmpsb
imul
adc
cmp
idivl
adc
negb
mov
in
insl
negl
push
mov
jb
xor
push
test
jno
mov
push
out
pop
mov
xchg
jg
add
lahf
xchg
aad
mov
out
xchg
stos
fdivl
pushf
pop
adc
clc
xor
subb
push
roll
jae
mov
into
pop
xor
mov
je
xchg
xor
bound
mov
inc
sub
lods
mov
push
adc
loop
rclb
rcr
hlt
jbe
push
lret
inc
sub
lcall
out
or
xlat
xor
fidivl
test
push
je
inc
mov
aas
aaa
and
adc
les
js
push
fwait
loope
sub
dec
push
dec
sbb
idivw
cmp
cmp
jbe
fsubrl
call
xorb
pushf
jecxz
xchg
pop
cmp
jecxz
jno
arpl
repnz
mov
cmp
or
outsl
pusha
jne
bound
sub
addr16
push
cmp
and
inc
mov
fldenv
mov
shll
jle
and
jae
in
sub
aam
insb
xor
cmp
add
mov
sub
jge
js
lret
cmc
pushf
xchg
imul
xlat
adc
or
push
repz
inc
insl
sbb
enter
gs
sub
push
stos
stc
std
pusha
adc
mov
loop
dec
aaa
les
mov
pop
lods
mov
cmp
pop
mov
adc
lods
sub
cwtl
ds
stos
dec
adc
inc
push
pop
sbb
fcomps
push
lods
jmp
sbb
xchg
mov
xchg
sbb
insb
aaa
test
dec
outsb
pop
dec
dec
out
jmp
pop
jl
xor
push
xor
loop
ds
dec
dec
lret
mov
aaa
sti
or
inc
in
inc
xchg
xchg
sahf
inc
or
ret
mov
or
leave
out
sahf
jmp
clc
insl
push
add
shrb
testb
ja
std
sub
xlat
cmp
fwait
aad
shlb
add
jg
adc
pop
shr
call
jmp
add
jno
daa
ss
push
outsl
mov
iret
out
std
rcr
add
outsl
mov
xchg
lea
dec
popa
push
je
jne
daa
lea
stos
dec
movsl
lock
clc
lea
test
test
adc
jp
inc
push
dec
cli
pop
sarb
test
pusha
push
mov
jb
sub
out
pop
lods
add
movsb
mov
fs
mov
aad
ret
and
roll
jbe
adc
movsb
scas
popa
repz
xchg
out
insb
iret
fnstenv
dec
out
adc
or
push
fmuls
add
cld
roll
adc
sbb
cmp
out
daa
lods
rolb
or
or
cmp
sub
sti
not
adc
lcall
mov
fsubl
shll
inc
xchg
add
fstps
popa
adc
mov
sbb
sbb
dec
les
insb
or
mov
insb
pop
mov
cmpsl
adc
xchg
pop
push
es
daa
mov
fsubrl
ficompl
je
or
jns
mov
std
iret
dec
mov
inc
ljmp
dec
inc
sbb
enter
stos
stos
mov
je
mov
sbb
test
jg
sbb
sbb
xor
or
setnp
jae
push
mov
sbb
add
sarl
mov
add
int
in
jp
je
add
jle
mov
lea
aaa
rol
lret
dec
xlat
aas
sbb
in
cmp
imul
mov
inc
mov
data16
fmul
push
mov
mov
rcll
cmp
mov
adc
sub
jecxz
ret
mov
sbb
sub
mov
in
pop
sti
ljmp
sbb
dec
leave
sbb
test
jp
jmp
fstps
jmp
ret
pushf
and
test
adc
js
mov
cs
jbe
adc
push
push
int
mov
add
in
data16
cmp
lcall
lds
fcom
fwait
sbb
out
dec
iret
cmp
jle
push
hlt
xor
jge
ss
lods
jno
mov
xchg
pop
jecxz
xchg
pop
jle
cmp
nop
rorb
jns
push
shrl
push
out
adc
mov
xor
jmp
cs
cmp
ljmp
xlat
cs
push
fs
add
jbe
fimull
inc
nop
jle
sahf
xlat
imul
sub
mov
outsl
sub
scas
dec
push
lods
mov
test
sub
xchg
sti
mov
mov
nop
testl
inc
and
sub
lods
lods
xchg
das
pop
daa
mov
xor
jnp
dec
push
pusha
add
lcall
clc
and
pop
scas
jnp
push
cmp
xor
nop
jne
pop
sbb
fnstcw
cmp
nop
mov
push
aaa
and
mov
int3
fcmovne
aam
sbb
inc
adc
sub
push
shlb
fidivs
fadd
lods
dec
jecxz
or
loopne
fildl
aaa
dec
pop
sbb
mov
add
add
cltd
fstp
and
sbb
leave
mov
and
or
mov
outsb
pop
jb
sub
int3
xor
scas
idivl
add
and
in
sbb
or
adc
jle,pn
fstl
test
outsl
mov
adc
add
mull
jge
inc
pop
dec
test
mov
mov
packuswb
ret
and
lret
xor
cmp
xor
xor
orb
mov
hlt
push
repnz
cmp
in
adc
inc
xchg
or
rcrb
cltd
push
or
bound
sbb
and
sbb
daa
pop
stc
stc
inc
loopne
test
jbe
int3
lea
adc
int3
filds
mov
pop
test
shlb
adc
mov
jge
jae
loop
fsubrp
in
loop
inc
add
fidivrs
hlt
xchg
push
cmpsl
pop
in
pop
adc
mov
dec
sti
mov
iret
mov
xlat
lds
jae
test
movsl
stos
int3
stos
jp
fisttpl
jl
jp
test
stos
sbb
popa
jbe
aam
pop
pop
loopne
mov
jne
pop
icebp
dec
addr16
pop
dec
out
push
dec
jl
fwait
aad
and
mov
jmp
adc
or
rorb
cwtl
push
jno
jb
fwait
push
or
arpl
inc
jl
ret
and
add
xor
pushf
out
mov
pop
add
or
cmp
icebp
add
sbb
fdivrl
int
movl
and
jle
out
daa
sbb
xchg
pop
xchg
adc
mov
repz
push
jo
insb
fwait
ret
inc
stos
pop
jno
orl
int3
inc
lret
sbb
lahf
int
adc
dec
data16
xlat
mov
rcl
sbb
xchg
pushf
push
stos
mov
mov
out
ret
shll
ljmp
adc
push
repnz
pop
shll
mov
and
loopne
hlt
hlt
inc
iret
adcb
test
jge
mov
dec
cmp
data16
xchg
add
mov
adc
hlt
in
xor
xchg
sbb
mov
jne
xchg
jle
adc
dec
xor
mov
cltd
add
mov
mov
xchg
ret
repnz
jle
mov
pusha
sub
fildl
test
adc
outsl
scas
pop
adc
jl
outsw
out
push
lea
pop
push
xor
sbb
fadd
sbbl
push
sbb
loope
pop
and
bound
test
cmp
and
and
les
fldt
fwait
xchg
ret
addl
mov
mov
xor
incl
cmp
scas
shl
jae
dec
pop
rcrb
jb
push
ss
xchg
jmp
xor
int
adc
xchg
lds
and
cmc
iret
mov
pop
sub
mov
ss
cmpsl
inc
xor
dec
push
gs
xlat
dec
daa
pop
cmpsb
dec
inc
movsb
xchg
mov
add
stc
push
cmpsw
sub
fucomp
pushf
add
pop
mov
sbb
cmp
cmpl
sbb
jnp
scas
and
push
inc
push
pop
das
dec
lods
pop
jmp
stos
int
mov
push
mov
mov
loope
push
pop
sahf
xor
jge
orb
adc
push
push
cld
cmpsl
aad
int3
aam
jg
scas
jmp
cmp
adc
add
imul
popa
mov
es
cld
or
pushf
std
icebp
xchg
add
sbb
scas
movsl
lahf
movsl
aas
cld
js
add
jecxz
enter
lock
adc
dec
clc
arpl
adc
xor
jmp
mov
movsb
adc
inc
mov
shrl
testb
dec
sbb
test
adc
insl
inc
sub
aas
fistpll
lods
sahf
cli
shl
enter
mov
repnz
sub
jnp
jl
test
dec
dec
xchg
test
mov
lahf
ret
stc
xchg
add
jp
or
hlt
sbb
xor
jecxz
inc
or
jecxz
inc
aam
js
fdivs
xor
or
push
sbb
and
roll
or
pop
xchg
clts
mov
mov
ds
in
mov
ss
mov
jae
in
test
insl
inc
push
add
sbb
scas
js
and
or
rcrl
and
stos
xchg
or
lea
outsl
dec
sbb
add
out
mov
or
ljmp
jns
rep
scas
cwtl
movsl
cli
jno
pushf
stos
inc
inc
nop
mov
inc
popa
out
and
jae
addl
lods
popl
fsubr
fsubl
jnp
and
cmp
xchg
repnz
and
cmp
or
sbb
mov
and
sub
mov
push
xlat
aad
mov
xchg
out
mov
fcom
roll
negl
push
jge
lahf
xor
xchg
xlat
cwtl
or
mov
mov
fnstenv
lea
dec
push
ror
rep
or
cmpsb
dec
pusha
addl
mov
sarb
cld
cmp
dec
enter
out
sub
dec
scas
adc
cmp
dec
jae
scas
jmp
pop
cmp
xchg
mov
pop
mov
xchg
lea
inc
enter
lret
push
iret
daa
repnz
pop
dec
and
int
aaa
test
jg
add
cmpsb
mov
bound
leave
pop
shr
xor
cmpsl
in
fbstp
rcrl
sbb
movsl
jo
xchg
xchg
inc
hlt
shll
push
mov
push
xchg
xor
imul
push
mov
imul
cmp
sbb
repnz
jae
cmpsb
aas
cmpsb
stos
lea
adc
call
dec
outsb
pop
push
lahf
dec
mov
xchg
stc
cmpsb
test
call
jge
enter
lods
xchg
pop
push
jne
icebp
movsb
mov
push
dec
fidivl
ret
inc
add
in
mov
aas
push
popa
fsubl
pop
not
popa
aas
lcall
fcompl
cmpsl
mov
xlat
adc
push
movsb
das
ret
cmp
sub
cmp
test
mov
mov
sbb
aas
mov
cmpsb
sub
inc
andb
inc
sub
mov
ljmp
in
mov
cmpsl
js
mov
in
aad
fstpl
sub
call
cmp
fildll
shr
xchg
lds
mov
ja
adcl
sub
dec
leave
or
pop
dec
jno
pop
xor
std
shrb
push
add
sbb
cltd
scas
xor
shlb
fcoms
roll
sub
data16
xchg
inc
std
mov
shl
mov
lea
xlat
pop
iret
stc
dec
dec
dec
in
mov
push
and
jbe
popf
orb
shrl
in
ss
leave
in
sbb
adc
push
in
pop
pop
mov
jne
add
sub
mov
popa
sahf
sahf
inc
gs
fidivrs
cli
cs
lcall
and
cmp
nop
sub
adcl
jmp
inc
ds
push
pop
mov
jnp
xchg
mov
pop
xchg
dec
imul
std
dec
adc
jnp
repnz
inc
mov
es
jae
pop
push
outsl
push
mov
ja
test
fsubl
ljmp
fcmovu
aas
test
testb
mov
or
pushf
fiadds
out
pop
cld
dec
fnstsw
cmp
divb
test
or
aad
mov
pusha
pop
jg
jmp
bound
cli
inc
cmc
sbb
sbb
jae
inc
sbb
inc
pop
outsb
xchg
je
xlat
dec
leave
xlat
jl
jb
mov
ret
js
mov
fistps
cmc
cli
loopne
adc
mov
push
pop
outsb
popf
stc
not
mov
xchg
mov
fcmovu
pop
clc
in
mov
adcl
cld
cltd
dec
lock
sbb
or
imul
lcall
fmull
outsl
inc
mov
adc
and
and
rcl
push
push
inc
aaa
cmp
test
xchg
jecxz
inc
sub
inc
mov
rcrl
add
add
cmc
cmpb
sub
mov
std
lret
cltd
es
in
push
test
mov
pop
jns
aaa
add
movsl
push
fadds
movsb
pusha
push
leave
fstpt
rcl
sbb
nop
add
daa
jne
shl
cmp
sbb
push
xchg
je
into
lret
cmp
pop
or
ja
jnp
imul
stc
or
cmp
sbb
push
insl
cmpl
bound
cmp
rclb
notb
sub
add
lods
insb
cmp
stos
andb
pop
or
fldcw
cmp
cwtl
xor
cmp
mov
iret
cmpsl
jns
imul
jmp
wbinvd
jno
js
xor
movsl
hlt
into
out
push
leave
mov
hlt
inc
stos
push
sahf
push
fistpl
rorb
cmc
arpl
xor
adc
adc
mov
lcall
lods
cmpsb
push
mov
mov
rcll
push
adc
rcrl
shr
mov
ret
xor
push
xchg
ret
pop
mov
jno
stos
fidivs
or
repz
int
pop
xor
mov
adc
ljmp
mov
cwtl
add
inc
fdivl
jmp
push
fs
cmp
xchg
and
outsb
ret
adc
mov
sbb
test
and
mov
mov
sub
jle
adc
or
les
xchg
jae
nop
push
pop
idivl
adc
pop
in
and
inc
outsl
xchg
or
orl
icebp
inc
dec
fildll
mov
rcrl
out
ss
ljmp
sub
in
int3
push
andb
movb
inc
cmp
mov
mov
scas
lds
push
movsl
mov
bndldx
pop
jne
ja
mov
xor
mov
dec
nop
rol
cmpsb
pushf
sbb
fwait
lea
loopne
and
jmp
orl
mov
jnp
xor
jg
or
stos
mov
add
or
inc
push
jg
xchg
fcmove
inc
gs
insb
xchg
push
xchg
mov
lods
cmpsb
rcrb
sub
sbb
call
lret
cld
faddl
push
ret
mov
add
mov
or
inc
push
jle
jmp
inc
fmull
lds
int
pop
in
mov
cmpl
into
inc
jl
movsl
adc
sti
popf
xchg
mov
push
rcll
jne
jp
add
mov
dec
xchg
fisubs
fdecstp
pop
mov
pop
cmpsb
jmp
and
jns
repz
loope
repnz
push
ljmp
xchg
adc
aam
cmp
jecxz
mov
mov
and
andb
int3
in
lret
loop
ljmp
ret
inc
rcrl
fwait
sbb
adc
jns
cmp
pop
call
pop
in
push
dec
lahf
outsl
dec
shll
inc
stos
xor
pop
cli
add
jecxz
pop
fnstenv
clc
sub
popa
mov
and
jo
jae
fsubp
push
push
or
insb
mov
pusha
movb
out
fcom
leave
fmul
pop
ret
push
pusha
dec
dec
push
sbb
dec
adc
in
mov
jle
std
pop
sub
stc
les
sbb
mov
lods
dec
in
push
xor
adc
into
or
outsb
mov
mov
das
xor
popa
lret
xchg
xchg
test
pop
jne
aad
aaa
aaa
scas
jecxz
pmullw
gs
and
lea
cmp
test
mov
or
pop
mov
gs
iret
cs
lods
test
test
into
dec
dec
fildll
mov
mov
mov
and
xor
rcrl
cmp
pop
jge
inc
jle
mull
insl
ss
cmpsl
pop
adc
mov
sbb
sti
pop
jno
push
jae
repz
int3
notb
xor
mov
xor
in
je
pushf
incb
enter
ja
mov
out
jae
cld
cmp
xchg
jecxz
test
cmp
pop
in
mov
push
stos
xchg
lcall
cmp
sbb
jmp
andb
pop
xor
mov
push
fsub
int
scas
sbb
jnp
enter
inc
push
loop
mov
test
mov
adc
jns
in
dec
xchg
xchg
add
mov
out
mov
rcr
mov
insb
addr16
test
lret
jle
push
lret
adc
pusha
pop
cmpsb
shrl
mov
fsts
daa
cs
adc
jb
ljmp
and
setnp
jns
or
notl
pop
test
inc
fisubrl
mov
sub
add
inc
sub
jne
dec
cld
sub
jae
ja
aad
mov
daa
repz
mov
xchg
bound
into
in
into
out
fidivl
xchg
mov
loope
dec
mov
ror
jne
push
xchg
nop
adc
fsubrl
adc
xchg
and
xchg
sbb
divl
push
sar
xchg
into
xchg
gs
jnp
and
cmp
fs
clc
lcall
pop
rcl
setp
pop
sbb
or
cmpsl
fnsave
add
mov
pop
and
xor
xchg
or
dec
aam
imul
pop
mov
or
jl
out
sbb
dec
push
das
fabs
jo
scas
insb
lret
lods
cmp
hlt
jl
dec
lds
hlt
sbb
and
lcall
inc
clc
mov
mov
insl
out
es
sbbb
mov
cltd
fstpt
setne
ljmp
adc
inc
mov
inc
dec
sub
mov
mov
das
add
aas
dec
data16
sbb
fwait
push
or
pushf
ud0
mov
pop
xchg
test
int3
dec
pop
negl
mov
cmp
and
cmp
into
fadds
push
mov
xchg
adc
imul
jbe
in
sub
and
in
gs
stos
mov
bound
xor
pop
fwait
sbb
and
les
mov
into
sub
inc
lock
aas
ret
loop
or
gs
pop
cltd
fadd
inc
popa
scas
lea
popa
loope
pop
hlt
mov
jmp
shlb
mov
dec
xor
dec
addr16
mov
aam
pusha
aaa
mov
mul
jg
jecxz
adc
push
test
dec
add
aad
js
cmpsl
dec
call
nop
mov
in
or
mov
mov
test
pop
sarl
mov
cwtl
sbb
sbb
int
sub
jo
test
test
and
scas
stos
and
stos
das
das
push
adc
dec
shll
fs
mov
insb
mov
leave
mov
mov
jns
or
iret
jno
jnp
adc
jl
in
lahf
xor
jns
jae
or
stos
cmp
xor
jmp
inc
cmp
sbb
jle
adc
dec
and
or
dec
cltd
sti
lret
xchg
lret
rorl
jge
xchg
jl
mov
push
insl
xchg
cmpsl
or
fwait
lds
mov
xor
pop
fiaddl
xchg
dec
adc
mov
lcall
xchg
jg
sbb
push
inc
iret
cmpsl
sbb
and
sub
repnz
lret
cmp
mov
jb
mov
loope
pop
cwtl
xchg
dec
pop
ljmp
inc
push
lret
lods
pop
dec
ljmp
cmpsb
aad
unpckhps
xchg
jge
and
cwtl
fldt
stc
das
jb
or
add
iret
repnz
dec
push
call
repnz
scas
jg
imul
fsub
or
into
inc
push
popf
xor
xor
sub
scas
inc
andl
inc
lods
jns
cmpsl
cmp
hlt
adc
ss
cmp
xchg
idivb
mov
loop
insb
mov
adc
movsl
add
dec
push
out
xlat
rolb
or
push
cmp
mov
add
rcll
repnz
imul
insl
ja
bswap
or
repnz
dec
mov
dec
es
xlat
xor
roll
arpl
jle
aam
adc
jne
cmpsb
icebp
addr16
enter
mov
adc
push
jns
mov
or
mov
lods
arpl
fwait
ja
dec
and
out
jb
je
les
sarl
inc
xchg
and
ret
clc
inc
and
dec
pop
jmp
adc
test
mov
xchg
dec
iret
push
inc
mov
andl
inc
lods
movsl
sub
scas
or
add
xor
call
or
sbbb
jecxz
enter
mov
inc
sbb
mov
or
fwait
daa
pusha
add
fwait
cmp
test
push
push
fisttpll
sarb
xchg
adc
fistpll
mov
scas
icebp
imul
jmp
cmc
popa
xor
aas
iret
test
xor
mov
xchg
in
fisubs
xor
sub
aaa
test
insb
mov
lock
mov
jmp
jo
xlat
xchg
or
mov
out
push
mov
je
cli
mov
aam
mov
add
xchg
jl
lds
sbb
or
and
jmp
cmp
fcoml
dec
aad
lods
add
dec
hlt
sbb
push
xchg
adc
cmp
pop
lret
jo
xchg
nop
es
cmp
pop
testb
ja
out
es
sbb
repnz
xchg
movsb
jae
add
mov
hlt
sbb
pop
stos
popa
roll
sub
divb
sbb
push
xor
mov
mov
call
ret
and
mov
add
sub
fnstcw
xlat
mov
or
fmuls
cmpl
mov
cmpsl
adc
fsubrp
int
jbe
dec
out
negb
test
daa
or
roll
test
push
inc
out
pop
popl
inc
and
cwtl
jb
arpl
dec
aaa
in
add
xor
shll
test
xor
fidivl
test
fdivr
push
frstor
jecxz
add
enter
filds
aas
and
xchg
push
inc
mov
and
aam
mov
in
xchg
into
out
xchg
insl
jg
iret
loopne
push
test
inc
xor
test
sub
pop
add
test
repnz
mov
jno
mov
movsb
xlat
rol
out
or
xor
cltd
aam
xor
and
lcall
repz
jno
mov
mov
or
mov
xlat
imul
jae
lret
outsb
shl
hlt
inc
in
xchg
or
cwtl
inc
sbb
cmp
flds
ljmp
roll
fnstenv
cmc
dec
fwait
bound
hlt
imul
push
js
adc
dec
cmpsb
xchg
outsl
add
lcall
loopne
aas
lret
inc
cli
and
into
iret
lcall
nop
xchg
mov
mov
cwtl
into
pop
or
loop
sub
les
mull
pop
mov
stos
repz
mov
pop
add
jns
mov
in
cli
sub
mov
xchg
js
cmp
mov
sbb
pushl
and
jb
call
mov
pop
jmp
insb
test
movsl
out
inc
mov
jne
imul
xchg
push
jmp
mov
lods
push
popa
sub
and
add
lret
sarb
sub
jle
and
xchg
mov
mov
repnz
pop
pop
push
cld
xchg
nop
lods
lretw
stos
mov
into
inc
in
adc
xor
mov
cmp
xlat
outsl
mov
adc
inc
aad
xchg
in
adc
mov
lahf
pop
adc
mov
mov
dec
daa
ja
rcrl
jmp
sub
cltd
xor
dec
dec
push
dec
push
std
cld
nop
jno
movsb
dec
in
repnz
daa
or
cltd
insb
cli
or
jge
jmp
pop
adc
mov
sub
pop
stc
dec
std
mov
xor
stos
cmp
pusha
cwtl
ret
and
aaa
lock
cmp
out
scas
inc
jnp
sbb
xchg
jl
and
mov
fists
mov
cs
int3
aas
sub
pop
mov
mov
mov
or
bound
add
out
shr
jnp
shl
jbe
sbbb
cmp
clc
add
movsb
xor
jo
out
repnz
mov
jecxz
mov
aam
scas
daa
enter
xor
adc
mov
mov
add
fldl
ss
int
mov
hlt
cmpsb
mov
ds
push
mov
sbb
mov
int
pop
insb
dec
mov
clc
fdivr
add
jae
gs
sti
test
dec
pusha
push
dec
shll
jbe
rclb
sbb
inc
xor
jg
xchg
fdivr
mov
adc
testb
insb
mov
mov
pop
clc
jb
dec
inc
push
daa
xchg
jno
mov
mov
pop
lock
ficoml
xchg
and
jbe
test
stos
mov
arpl
mov
adc
fiadds
stos
test
sub
das
push
push
shlb
cltd
int
aam
pop
jmp
scas
in
lods
xchg
dec
xchg
sub
pop
decb
in
inc
adc
filds
sbb
lret
leave
addr16
mov
loopne
xchg
outsb
sbb
mov
ss
adc
outsl
mov
sub
mov
or
mov
pop
adc
mov
and
iret
adc
ja
lods
push
cmp
inc
cmpsl
movl
add
push
sahf
xchg
rorb
xor
pop
pop
adc
jns
cli
clc
gs
jbe,pn
mov
inc
dec
lds
and
sti
mov
repnz
xchg
pop
adc
mov
sbb
jae
inc
sub
adc
out
lock
push
shrl
insb
sti
push
jge
pop
mov
test
mov
push
mov
sbb
inc
stos
ss
or
rorl
lret
xor
test
jae
int
mov
arpl
fadds
loopne
stc
out
push
pop
or
xorb
push
jg
add
adc
push
dec
imul
fistpll
out
pop
adc
dec
and
movl
sahf
xor
cwtl
pop
add
popf
push
scas
xchg
cwtl
out
or
jl
xlat
mov
xor
stos
sub
cmp
jnp
add
call
sbb
lods
cmp
xchg
pop
cmc
dec
lods
dec
xchg
out
mov
shl
stc
mov
push
mov
imul
mov
xchg
insb
pop
sbb
sub
cmp
pop
outsb
shrl
cmp
or
aaa
cmc
pop
aas
nop
mov
incb
mov
xor
and
sti
pop
icebp
add
sbb
movsb
loopne
call
ret
es
loop
xor
ret
std
jg
xor
pop
in
pop
movsb
mov
mov
test
inc
mov
mov
jle
stos
das
dec
xchg
dec
push
pop
jp
sub
cmp
cmp
cmp
cwtl
scas
xor
aam
adc
mov
xchg
xor
test
or
push
enter
sub
movsl
hlt
mov
xchg
push
movsl
jne
pop
cmp
jl
cs
inc
leave
and
mov
mov
ret
adc
pushf
mov
cmp
fcoms
aam
cmp
jg
add
dec
test
push
mov
sub
push
mov
lret
or
jbe
mov
in
fiaddl
mov
jae
lods
fsts
js
testb
pop
sbbb
xor
push
xor
ret
flds
or
add
or
xchg
push
mov
add
pop
iret
loope
mov
dec
and
add
mov
scas
push
mov
mov
lods
je
arpl
insl
xchg
cmp
scas
sbb
ss
add
jge
xchg
mov
sub
mov
aam
loopne
mov
and
push
jnp
outsl
sub
add
leave
pusha
or
cmpsl
leave
push
mov
add
mov
xlat
or
and
sub
add
rcll
lods
addr16
insl
mov
pop
add
or
adc
jecxz
jge
or
stos
and
lods
and
cmp
cmp
aaa
dec
adc
sub
and
pop
sub
pop
jo
cli
ficoml
mov
xor
xor
and
stos
in
adc
fnstsw
in
mov
jl
push
fsubl
adc
jbe
mov
xchg
or
xor
loope
sarl
enter
mov
jae
cmp
dec
mov
outsb
sahf
mov
pushf
pop
xchg
fisubrl
cmp
jo
gs
faddl
jecxz
xorb
out
jle
lea
lods
hlt
dec
push
enter
inc
sti
in
out
dec
jmp
popf
inc
addr16
sub
xchg
mov
jno
data16
pop
ljmp
gs
dec
into
rcr
push
xchg
push
rcll
pop
jge
xchg
neg
cli
jnp
sahf
mov
test
adc
stc
sub
add
push
sbb
adc
stos
mov
data16
std
adc
in
mov
xchg
out
jne
push
mov
aad
ficompl
negl
xchg
rcl
fdivs
and
lea
lea
or
push
pop
pop
fsubr
pop
test
pop
jge
xor
jmp
and
jp,pt
pop
push
lods
push
lds
shlb
in
popa
xor
xchg
cmpsb
mov
add
int
out
adc
addr16
dec
ds
dec
mov
hlt
push
push
popf
mov
iret
adc
or
cmpsl
ja
scas
inc
jge
insl
std
inc
push
mov
gs
test
mov
xchg
xchg
adc
in
push
xchg
jp
and
out
cmp
pop
cmc
xor
test
shll
push
lods
xor
mov
adc
fwait
sub
sub
push
ljmp
mov
bound
jno
mov
fwait
mov
xchg
inc
pop
cmp
xchg
lcall
cmp
aaa
popf
mov
test
test
aad
nop
sbb
xchg
jnp
push
inc
pop
shr
ret
dec
xlat
adc
inc
ljmp
mov
repz
movsl
dec
pusha
lcall
enter
xchg
rorl
mov
in
loop
dec
sub
and
xchg
add
jmp
or
jae
adc
inc
add
dec
mov
dec
mov
mov
mov
cmpsl
insb
add
xchg
fistpll
loope
add
popa
and
dec
sub
rdpmc
out
jge
adc
mov
push
mov
in
aas
in
orb
jl
mov
icebp
jb
push
mov
pop
xchg
mov
lahf
sbb
sahf
aad
mov
mov
push
mov
mov
and
icebp
xor
in
scas
push
loopne
cli
out
pop
adc
ja
cli
push
cwtl
jnp
imul
and
mov
cmp
xlat
daa
aas
push
out
inc
or
push
mov
insw
pop
hlt
xor
inc
dec
insb
inc
andl
shll
imul
mov
pop
cwtl
mov
dec
or
popf
movsl
das
popa
mov
adcl
in
int
shll
out
xor
clc
mov
aad
mov
iret
push
xor
inc
xor
ss
or
loopne
jg
jnp
xor
lahf
popf
mov
popa
jecxz
and
sbb
pop
push
ret
in
and
sti
mov
rcl
xchg
leave
mov
test
gs
add
cmp
data16
pop
push
stc
jecxz
pop
add
lods
jmp
js
rclb
mov
fldenv
xchg
push
out
imul
aaa
cld
fcmovnb
ds
das
das
sub
inc
dec
int
mov
xor
xchg
scas
mov
or
adc
sub
and
dec
cmp
or
push
dec
jge
push
mov
aaa
cld
mov
call
inc
cli
mov
fistl
dec
lahf
loope
inc
mov
fiaddl
arpl
mov
pop
lock
jle
ds
jb
imul
push
lret
in
icebp
daa
pop
sti
jg
mov
jle
xor
insb
imul
xchg
sub
cmc
pop
inc
enter
sarl
ss
mov
dec
fcmovu
ds
sbb
pop
cmpsb
ret
pop
aam
cmp
mov
pop
jo
leave
pop
jno
adc
popa
xchg
adc
pop
ja
pop
mov
cmp
call
jbe
mov
mov
sub
fmuls
push
testl
out
mov
add
mov
jp
cmp
and
mov
cmpsl
and
and
inc
hlt
in
xchg
inc
clc
mov
repz
leave
test
loop
rcrb
jge
mov
jb
clc
out
dec
sub
scas
mov
push
sbb
mov
mov
jmp
jb
or
mov
seta
jns
lea
sti
rorb
jno
repz
jp
mov
les
mov
xchg
mov
mov
push
and
mov
fwait
cwtl
aas
and
mov
push
mov
pop
dec
cmp
sbb
cmp
sbb
popa
movsb
cltd
fbld
out
repz
in
mov
pop
pusha
je
adc
add
sub
mov
adc
pop
repz
aad
xchg
and
cmc
out
cld
and
fdiv
push
sti
pop
jp
jnp
sbb
sub
push
mov
in
push
or
lods
pushf
repz
xchg
cmp
sahf
scas
mov
es
inc
dec
imul
in
mov
cli
mov
dec
pop
test
jmp
pushw
es
shll
adc
add
push
adc
mov
push
repz
add
mov
cmpsl
mov
mov
shrl
cmp
jns
adc
mov
pop
pop
jg
in
jecxz
je
sbb
adc
xchg
xchg
mov
mov
js
movsl
out
fistps
xlat
into
and
insl
cmpsl
pop
mov
rcrb
out
dec
repz
loope
pop
add
sub
adc
clc
push
jg
push
jbe
cmp
lcall
fadds
out
mov
pushf
cpuid
call
in
mov
push
push
adc
xchg
sbb
je
xlat
dec
sbb
leave
movsb
dec
int
lds
ja
and
cmpsb
mov
pop
mov
ljmp
cmc
fldt
xor
je
xor
jb
scas
sub
icebp
ret
xor
jb
pop
out
mov
jae
mov
cmp
out
pop
data16
inc
mov
mov
aaa
xchg
jbe
pop
sbb
push
in
jo
xchg
sub
xchg
jnp
sub
lods
fldcw
divb
sbb
out
jecxz
sbb
cmp
adc
dec
cld
insl
icebp
push
ret
mov
sub
or
and
data16
pop
out
inc
loope
jmp
in
mov
dec
dec
stos
popa
xlat
cmp
jge
stos
or
mov
fsub
jne
mov
fnstcw
cs
icebp
push
mov
xlat
mov
sbb
or
mov
cmp
jge
sbb
shrb
movsb
lock
cmp
jns
lret
sbbb
call
pop
push
fcomi
flds
pop
and
xor
les
adc
add
inc
cmp
push
push
sbbb
idivb
mov
arpl
mov
jnp
test
xor
add
scas
and
iret
cmc
jo
fbstp
and
je
add
data16
popl
pop
adc
lahf
pop
je
lahf
mov
int3
mov
xor
jl
mov
jb
iret
pop
iret
mov
push
mov
data16
stos
int3
sub
cmp
bound
lcall
hlt
lahf
dec
insb
les
mov
outsl
fnstcw
jle
cmp
sahf
sub
ret
fisubrs
scas
dec
mov
xchg
repnz
int
push
cmp
idiv
addl
dec
mov
inc
mov
aam
into
cmc
int
jge
dec
cld
xchg
gs
pushf
xchg
lret
loop
jbe
jg
xchg
rorl
out
ret
jnp
loopne
and
and
stos
mov
mov
jne
fsubrs
cmp
add
popf
jo,pn
inc
mov
adc
pop
fmull
stc
mov
ja
loope
fadds
push
test
xor
xor
jmp
jne
xchg
xchg
inc
js
jle
dec
movsl
inc
in
pop
cwtl
adc
mov
iret
lods
lret
dec
fsubs
mov
mov
pop
clc
out
mov
xchg
dec
hlt
and
filds
cs
cwtl
das
cmp
inc
or
lds
mov
push
sbb
sbb
notb
nop
popa
out
push
cld
test
and
push
js
in
mov
mov
stos
xchg
dec
mov
adc
fdivl
lea
xor
mov
insb
xor
scas
dec
flds
add
cmp
or
jecxz
dec
in
or
sbb
fisubrl
xchg
jmp
int3
add
nop
add
rcl
cwtl
adc
mov
mov
shll
stc
shl
cmp
cmp
stos
inc
and
lret
fdivs
push
lret
lds
sub
jmp
sbb
cmp
fstl
out
xchg
sbb
add
mov
fstps
pop
fildl
fisubs
jbe
or
xor
sti
mov
into
or
ds
sub
jl
jmp
bswap
iret
sbb
lret
and
inc
aad
or
es
aaa
or
pushl
cmp
mov
dec
and
ficomps
sahf
xor
mov
jecxz
test
adcl
pop
adc
cld
shll
adc
sub
cmp
sub
mov
jo
hlt
jae
cltd
xchg
cwtl
sub
popa
pusha
lods
sahf
ret
fwait
cltd
enter
movsb
mov
sbbl
adc
mov
jecxz
mov
in
xlat
bound
mov
dec
jb
sub
xchg
xchg
pop
mov
enter
pop
movsl
not
out
xchg
mov
test
or
out
fldenv
in
adc
cmpsl
cmp
mov
mov
mov
and
out
test
hlt
cs
or
adc
dec
lock
sbb
or
mov
movsl
mov
ja
jmp
or
das
xchg
shlb
sbb
mov
pop
movsl
xchg
loope
jle
pop
dec
mov
repnz
jae
or
repz
mov
test
outsb
pusha
adc
inc
mov
mov
enter
inc
call
xor
xor
aaa
rorl
jns
cmp
push
stos
scas
mov
shl
pop
add
jb
arpl
adc
jbe
fnstcw
pushf
out
mov
or
pop
xlat
fst
aam
push
sbb
test
sbb
scas
pop
es
roll
lret
jnp
adc
inc
daa
or
fstpl
or
dec
add
out
sub
cmp
mov
in
mov
sub
dec
insb
imul
dec
add
orl
and
mov
sbb
xlat
mov
inc
test
mov
dec
out
push
mov
mov
dec
push
int3
xchg
jmp
and
arpl
ret
pop
cmc
lds
jl
call
sub
les
fdivrs
inc
mov
mov
in
in
jae
adc
mov
sub
in
add
inc
andb
clc
push
jge
xchg
fcomps
adc
jle
loopne
sahf
push
or
mov
mov
icebp
out
inc
add
mov
or
xlat
ret
jge
mov
mov
addb
inc
push
repz
jl
lock
mov
in
sub
rcl
sub
pop
mov
popf
mov
dec
and
jno
cmp
and
mov
sbb
mov
xchg
sbb
add
mov
sarb
pop
outsb
sahf
sbb
stos
in
mov
lret
jecxz
shrl
sbb
xor
mov
je
ret
push
or
mov
hlt
push
mov
push
es
adc
jmp
and
or
add
addb
pop
pop
test
sbb
fs
add
mov
dec
popf
jmp
mov
and
pop
scas
xor
jno
mov
insl
and
sbb
pop
in
mov
adc
stos
cld
fwait
push
push
mov
lock
mov
fisubl
inc
lea
mov
icebp
mov
inc
mov
jecxz
lds
jmp
sub
or
mov
cld
lcall
add
sbb
imul
aas
fidivs
icebp
dec
mov
pop
lods
mov
notl
out
xchg
ljmp
mov
jnp
insb
inc
sti
or
fiadds
scas
popa
push
adc
test
ret
shlb
sub
mov
filds
fadd
push
mov
sub
scas
repnz
xor
jno
pop
std
xchg
pop
cltd
pop
testb
pop
pop
es
in
dec
sbb
adc
sub
dec
or
cld
mov
lahf
mov
jns
sbb
push
int
idiv
out
xchg
aaa
and
repnz
inc
inc
sbb
test
fistpll
mov
popf
xor
cmp
js
xor
pop
dec
out
sarb
adc
dec
and
gs
sub
xchg
fbstp
xchg
xchg
fstpl
jbe
adc
out
dec
cmpsl
out
pop
out
push
leave
gs
push
push
mov
cmp
push
enter
or
test
or
push
push
pushf
lcall
out
loopne
rcll
sbb
cmp
pop
jns
mov
clc
les
mov
arpl
jg
xor
jle
sbb
inc
loop
sub
mov
jb
lret
insb
in
mov
cmpsl
cmp
mov
ret
xchg
adc
shll
adc
xchg
dec
mov
rclb
pop
push
push
ss
xchg
movsb
outsl
jno
gs
adc
stc
dec
and
pop
imul
fdivr
or
cmp
sti
fisttpll
out
adc
adc
ss
fisttpll
xchg
jno
add
ja
fs
mov
xor
inc
mov
in
lods
aad
into
mov
out
inc
shlb
pop
js
cltd
cmc
adc
sub
mov
jne
fstpl
movsl
out
repz
aam
pop
or
scas
jmp
je
mov
cmp
js
pusha
in
push
fidivs
mov
cmc
inc
dec
and
sbb
pusha
cltd
mov
mov
scas
pop
add
test
mov
pop
fdivl
divb
popa
insb
mov
ret
pop
or
mov
push
fs
xor
sbb
rcrl
xchg
mov
je
or
repnz
dec
xorl
xchg
pop
popf
push
int3
lret
das
xor
pop
xchg
push
mov
in
dec
mov
sub
and
lret
arpl
pop
popa
pop
pushf
loopne
mov
or
pop
mov
push
popf
inc
inc
inc
xchg
add
and
in
push
jle
and
mov
leave
popf
in
jnp
movsb
pop
fwait
inc
xor
jo
fcmovnu
ja
insb
xlat
pop
dec
shll
fldcw
inc
aas
xor
adc
jg
mov
pusha
fdivrl
pop
adc
push
les
scas
pop
ja
cmc
ret
mov
pop
fidivrl
inc
out
push
repz
lods
loop,pt
lret
mov
xchg
push
dec
lock
orl
inc
push
in
xchg
mov
push
inc
testb
fwait
xorl
cld
out
outsl
push
stc
cs
adc
loope
sub
ja
and
sbb
jp
rolb
jmp
in
out
mov
sub
ret
lods
loopne
pushf
inc
ret
mov
imul
lret
test
inc
inc
jge
cmp
lock
and
shl
int
addb
shlb
xor
sbb
and
cwtl
xor
leave
popf
icebp
cmp
and
jbe
xor
add
sahf
mov
cmp
xchg
cmp
arpl
sahf
cmp
push
mov
mov
pop
mov
cmp
lahf
inc
xchg
mov
fmull
push
push
sbb
enter
adc
mov
xchg
adc
jg
jl
mov
test
xchg
sahf
xchg
mov
int3
pop
loope
mov
sub
add
ljmp
aam
std
dec
jl
or
jae
lahf
fcmovnu
mov
sbb
adc
mov
pop
mov
xorb
xorb
aaa
icebp
and
iret
mov
sbb
mov
adc
test
outsl
dec
aaa
lret
inc
cmpsl
scas
xlat
test
pop
mov
jl
pop
mov
lea
add
movsb
pushf
lods
scas
mov
xor
test
leave
stos
fld
aas
sbb
xchg
inc
je
popa
pusha
enter
int3
mov
mov
inc
jle
mov
movsb
add
cmpl
jmp
sbb
scas
outsb
mov
ss
sbb
mov
add
movb
pop
cmp
sub
jne
jb
adc
ja
nop
ret
ja
scas
push
outsb
inc
inc
pop
mov
mov
and
fisubrs
insl
cmp
aad
or
cmpb
cli
pusha
ljmp
push
jp
lods
insb
dec
xchg
or
std
or
clc
pop
leave
or
sahf
adc
xchg
aaa
xchg
cmp
xchg
mov
adc
fdivl
jmp
xchg
icebp
fsubs
xor
imul
into
cmp
push
sbb
outsb
scas
sbb
call
or
shr
sub
repz
inc
jge
mov
dec
add
sub
lcall
mov
es
or
scas
aaa
cs
xchg
xchg
jge
sti
repz
dec
mov
pop
jo
mov
jle
movsb
lock
aad
andl
dec
push
addr16
icebp
rcl
dec
mov
pop
push
mov
jne
int
or
jle
push
inc
lret
push
inc
pop
or
mov
in
inc
test
orb
ds
subb
xchg
jns
dec
push
into
push
push
push
push
fistpll
fildll
in
ret
mov
and
mov
jo
cmp
in
or
adc
arpl
in
lods
enter
clc
popf
xchg
jecxz
or
negl
in
loope
jecxz
mov
je
shl
das
fwait
push
ficompl
adc
xchg
adc
sub
and
mov
ja
or
adc
mov
repnz
mov
mov
lahf
dec
xor
inc
xchg
jge
mov
xchg
aam
xchg
jecxz
or
daa
negl
mov
mov
push
cltd
sbb
push
ljmp
add
repz
lds
mov
out
mov
fsubs
sbb
aas
pop
adc
in
lahf
mov
adc
ds
or
mov
in
mov
mov
fwait
xchg
mov
rclb
hlt
or
mov
push
pop
jb
sti
pop
pop
dec
pop
dec
rcrl
sub
ljmp
insb
insl
mov
and
divl
jo
lret
or
xor
push
popa
loope
mov
ror
pop
mov
pop
test
mov
pop
fdivrs
test
mov
adc
jae
jno
sbb
fildll
cli
pop
lret
das
mov
add
fwait
les
xchg
cmpsl
sbb
nop
xor
nop
cmp
inc
add
mov
mov
mov
je
inc
cmpsl
popa
in
pop
add
mov
jmp
out
pusha
inc
pop
ljmp
cmp
iret
xchg
add
mov
iret
pusha
sbb
mov
mov
cs
inc
popf
sub
xor
mov
inc
jnp
mov
cmp
sahf
sbb
lcall
xor
jae
rorl
mov
mov
lods
and
pushf
mov
out
repz
lods
adc
movsb
inc
mov
inc
jne
pop
sub
push
fsts
insl
popf
xchg
dec
clc
inc
int3
xor
pop
mull
orl
loopne
cwtl
jge
lret
jge
les
gs
cmp
sahf
insb
sbb
pop
gs
ror
icebp
sbb
xchg
sbb
lea
xor
mov
cmp
lea
mov
dec
xor
je
jp
xchg
sub
sbb
cli
add
out
xor
add
mov
push
adc
sub
cld
and
stc
cmp
push
lfs
mov
mov
adc
aas
inc
inc
sbb
mov
in
pop
cltd
add
push
xchg
jmp
push
mov
cli
dec
mov
pop
mov
xchg
push
push
push
jle
loope
cmp
dec
xchg
adc
push
jae
mov
adc
insl
add
sbb
mov
test
loope
aaa
add
sahf
test
subb
loop
mov
mov
mov
adc
je
cmp
dec
xchg
and
push
inc
or
add
sub
and
mov
inc
ffreep
inc
imul
rcll
shrl
rcr
ljmp
orb
push
lods
add
push
mov
cs
addr16
inc
jecxz
movsb
jno
xor
in
xor
inc
and
sub
jle
data16
lret
aas
scas
sbb
sbb
insl
xor
jl
cmpsl
in
and
mov
stos
mov
fs
in
mov
inc
pop
add
push
cmp
inc
mov
mov
inc
mov
fbstp
cmp
dec
std
lret
inc
push
mov
mov
push
dec
pop
adc
dec
xor
mov
pop
jno,pn
loop
or
mov
pop
stos
cltd
jb
or
cwtl
mov
sahf
mov
adc
dec
outsl
push
inc
dec
xor
inc
jno
xor
inc
fprem1
idivb
mov
mov
mov
sbb
mov
add
xor
out
jg
test
xchg
pop
call
hlt
movsb
inc
leave
xchg
pop
ss
and
or
xor
adc
addr16
je
and
jle
mov
add
sbb
mov
repz
lret
xchg
pop
ret
icebp
mov
sbb
scas
fdivl
repz
hlt
inc
repz
andl
mov
ja
mov
test
outsb
adc
lahf
jg
ret
cmpsl
test
push
je
sbb
lret
adc
sbb
stc
or
cld
and
loopne
test
mov
inc
sbb
cmp
dec
cmpsl
cmp
mov
stos
mov
aaa
icebp
pop
mov
clc
dec
cmc
push
lods
pop
movsb
adc
in
mov
icebp
loopne
aad
xor
add
jae
pop
stc
add
jl
xorl
mov
jl
xchg
xchg
cmp
rolb
mov
and
sub
jne
loop
loopne
adc
jnp
es
call
and
jo
and
mov
mov
push
outsl
xchg
add
jae
jno
pushf
cmp
push
sahf
cmpsb
movsl
adc
sub
cmp
aad
and
test
hlt
mov
inc
pop
sub
pop
clc
jne
aaa
loope
add
mov
dec
pop
scas
stos
mov
stos
sbb
fwait
repz
ljmp
and
mov
push
sbb
sub
mov
lds
cwtl
scas
mov
jle
xchg
adc
andb
dec
les
xchg
cs
cmp
mov
scas
inc
lods
lods
cld
lock
xor
mov
sub
cmpsb
popa
add
mov
xorb
and
xor
pop
loopne
mov
sahf
call
pop
mov
dec
inc
loope
inc
iret
mov
dec
les
js
mov
mov
mov
xchg
mov
int3
xor
dec
insl
xchg
sbb
push
nop
dec
or
ds
lods
ficoml
mov
cmp
movsb
inc
mov
sarl
pop
xchg
mov
cmp
or
mov
in
pop
jl,pt
into
sbb
cmp
cwtl
pushl
add
es
mov
scas
mov
gs
push
and
adc
repz
je
pop
mov
cli
pop
push
xchg
pop
imul
adc
fs
jb
jp
xchg
mov
mov
call
xor
lods
les
xchg
adc
jbe
pop
xlat
sub
add
pop
mov
mov
sbb
ja
xlat
adc
push
and
jle
xor
inc
pop
xor
pop
lods
cltd
mov
xlat
test
int
jae
sbb
mov
push
fidivl
inc
in
scas
addr16
imul
divps
adc
into
jle
jo
sub
leave
data16
mov
fs
test
xor
jae
cli
cmp
ficompl
daa
call
ds
loop
flds
dec
pop
mov
sahf
push
pop
jp
mov
cld
mov
push
clc
push
adc
in
cmp
push
cmp
push
in
pop
push
andl
sbb
in
in
insl
or
sbb
jg
stos
test
out
js
pop
out
lret
or
add
bnd
add
and
cmp
movsb
stos
repnz
push
insl
or
add
push
xlat
pusha
and
jne
testb
dec
mov
add
test
pop
adc
dec
add
jecxz
imul
fs
jecxz
xorb
lds
ret
in
and
outsl
ret
pop
jo
inc
mov
jae
imul
jno
scas
repz
fmull
xor
push
pop
dec
cmp
je
push
cli
test
mov
mov
jp
mov
out
push
sti
push
xor
stc
mov
icebp
jns
jae
xor
scas
sbb
xor
cmpsb
stos
sub
andl
fwait
add
xchg
les
jo
dec
xorl
cmp
jl
dec
inc
or
inc
pop
jnp
pop
xchg
scas
pop
leave
adc
rclb
mov
nop
sub
mov
or
add
jnp
pop
frstor
enter
mov
sarb
or
xchg
pushf
adc
call
adc
push
mov
sahf
jae
mov
data16
fs
call
push
jmp
push
pop
xchg
or
aaa
jle
fildll
mov
push
data16
mov
je
xchg
fs
imul
lret
mov
scas
fwait
jp
shr
iret
decb
mov
cld
jge
scas
jp
clc
cli
jo
inc
pop
int3
jge
nop
das
inc
mov
sbb
sbb
or
xor
xchg
faddl
jno
mov
add
push
mov
hlt
mov
dec
xor
adc
imul
push
mov
mov
dec
and
aad
icebp
adc
dec
jle
fstl
pop
sbb
adc
movsl
mov
xchg
mov
add
pop
sbb
loopne
lcall
test
mov
lret
mov
test
nop
call
or
cmpsb
lock
in
std
aas
out
mov
mov
fmul
mov
scas
ret
fsubrl
adc
xor
inc
push
pop
rcrl
jl
xor
fdivrl
inc
or
arpl
cmp
adc
sbbb
or
mov
pop
into
adc
pusha
jno
mov
js
pop
pop
in
in
push
cs
fwait
out
pop
sbb
dec
das
push
inc
sarb
inc
xchg
inc
sbb
xchg
cmp
dec
cli
push
inc
xchg
outsb
or
outsb
mov
subb
aad
or
xchg
lahf
fs
inc
ficoms
test
jl
fbstp
mov
enter
lcall
jno
mov
mov
cmpl
sub
test
stos
mov
xchg
idivl
push
add
mov
dec
mov
rcl
or
pushf
jae
mov
dec
inc
adc
dec
pop
insb
int3
scas
data16
push
ljmp
inc
mov
cmp
scas
and
mov
adc
loopne
es
dec
aad
xchg
push
push
sbb
adc
sub
lret
loopne
dec
inc
push
shlb
cwtl
in
jg
jno
dec
adc
test
fwait
and
lcall
sub
push
pop
push
add
sbb
adc
mov
cmpb
sarb
cmp
push
jnp
mov
fisubs
mov
lcall
add
sbb
mov
inc
push
jbe
sbb
sub
fidivrs
adc
repz
shlb
and
loope
cli
cmc
fiaddl
jne
push
and
sbb
popa
loope
mov
cmp
ss
xor
sub
mov
lret
and
movsb
cmp
jo
shrl
add
and
pushf
xchg
inc
push
lea
es
mov
xor
mov
xchg
loop
pushw
outsl
loop
scas
out
sub
mov
addl
dec
test
sbb
das
das
jl
and
addr16
jns
subl
addr16
mov
lods
scas
adc
pop
xor
clc
sti
xchg
sbb
mov
dec
lods
sbb
sbb
cld
lret
sbb
sbb
mov
cmp
pop
xor
inc
jle
mov
jo
sub
inc
mov
pop
loop
fs
xchg
daa
call
xchg
out
fistl
sbb
sbb
inc
sub
cs
or
cmp
mov
jmp
xchg
test
sbb
mov
gs
rolb
int
call
sub
lods
fsubr
iret
icebp
cli
inc
in
xchg
in
aad
or
mov
mov
pop
fs
xor
repz
push
leave
cld
inc
push
jo
adc
inc
mov
icebp
push
dec
add
neg
mov
sti
xchg
ljmp
iret
outsb
inc
lcall
jbe
inc
pushf
shl
or
arpl
adc
frstor
mov
dec
ljmp
jns
fsts
out
in
imul
and
jge
and
cli
mov
test
aam
push
popf
mov
cmp
repz
jns
pop
pop
push
mov
jmp
out
popf
addb
pushf
inc
sbb
jp,pt
sbb
push
repz
fisttps
lret
fcom
jno
loop
ja
cli
push
out
stc
fildll
pop
loopne
or
stos
jge
les
lods
sti
out
insb
ds
les
mov
scas
mov
data16
fwait
mov
fisubl
leave
ret
add
mov
stc
lods
les
daa
sub
mov
add
or
test
sub
lods
or
mov
mov
push
add
pop
sbb
adc
movsb
xchg
jle
dec
jl
fsubrs
cmp
sahf
cmp
data16
mov
leave
dec
mov
jmp
sub
mov
test
arpl
fwait
rcll
fists
ljmp
sbb
scas
add
mov
mov
lock
sbb
int
je
adc
aaa
or
out
adc
mov
ret
adc
aas
xchg
lock
inc
das
nop
xlat
jae
mov
aaa
out
repnz
cmc
incb
ja
cmp
pop
adc
repz
or
je
xlat
cmpsl
sub
popf
adc
andl
test
adc
or
jne
jns
sbb
fdivp
pushf
clc
js
pop
inc
inc
cmp
mov
lea
js
test
adc
hlt
movsbl
cmp
and
scas
shrb
push
aad
gs
add
xchg
xor
movsb
loope
dec
xor
into
adc
inc
sti
dec
push
push
push
sub
sub
movsb
iret
push
std
repz
test
jo
or
dec
jg
xchg
cli
mov
into
pusha
pop
stos
jne
sub
adc
outsb
cli
dec
imul
call
imul
sub
aaa
and
push
testl
hlt
rolb
test
add
sbb
sbb
sub
or
cmp
sarb
fmull
cwtl
jnp
pop
or
js
aam
iret
icebp
mov
ljmp
mov
cmp
jp
fadds
pop
sbb
into
cmp
adc
popf
sub
stos
cmpsl
push
icebp
xor
rcrb
into
mov
ss
mov
or
mov
lods
xchg
loopne
mov
cs
cmp
and
test
js
mov
push
jb
shll
mov
adc
icebp
sbb
or
insb
testb
fildll
sbb
jge
call
inc
push
adc
xor
rcrl
ds
out
fwait
lea
or
mov
outsb
jae
cs
imul
and
popa
dec
push
ljmp
incl
rcrb
and
filds
arpl
adc
jbe
lock
xchg
rcrb
dec
xor
repnz
scas
pop
jp
xchg
adc
dec
jnp
iret
dec
cmp
out
lods
xchg
mov
fnstcw
xor
adc
adc
hlt
xchg
mov
lods
mov
ret
popa
push
push
bound
xor
dec
inc
add
xor
rclb
or
cltd
xor
insb
cmp
fimuls
ja
vpmullw
movsb
mov
mov
imul
adc
push
packssdw
inc
movsb
subb
xor
add
fidivrs
not
mov
mov
scas
rolb
sbb
xor
mov
push
push
or
inc
dec
loopne
pop
and
mov
popa
imul
aad
imul
in
bound
shl
add
xor
inc
add
cltd
lods
movsb
sbb
push
mov
jne
inc
bound
dec
adc
cmp
push
into
adcb
add
jns
rcr
dec
mov
and
aaa
dec
xchg
jnp
xorb
xchg
mov
int3
gs
push
ja
sub
and
jae
jp
push
push
or
sub
cli
jae
adc
imul
jo
cmp
inc
arpl
dec
add
clc
cltd
mov
sub
mov
test
mov
pop
mov
fdivs
sti
jno
cmp
sub
aas
cmp
sbb
mov
repnz
enter
stos
out
std
icebp
or
pop
push
rol
cmpps
mov
in
xchg
mov
or
adc
std
pop
ds
jge
add
and
pop
dec
ret
sbb
ds
mov
and
dec
dec
mov
mov
int3
mov
neg
mov
sub
int3
pop
mov
pop
repz
in
jns
incb
icebp
fs
inc
in
inc
and
aaa
dec
fidivrs
pop
stos
dec
fldlg2
dec
je
stos
sub
ljmp
pop
mov
mov
dec
mov
inc
xchg
dec
hlt
push
push
and
std
fidivrs
mov
lods
lods
rcrb
sub
or
pop
cmp
arpl
les
cmp
js
mov
imul
hlt
into
popa
loope
aam
jne
jle
sbb
sbbb
jl
loopne
xchg
js
push
pop
xor
mov
cmp
test
ror
shll
mov
adc
mov
bound
cmp
test
fcomp
mov
dec
ja
xor
popa
and
xchg
outsl
mov
inc
mov
and
push
jb
test
and
in
jg,pt
jns
jle
pusha
scas
ss
cmp
add
daa
dec
cmp
add
test
adcb
imul
xor
addl
jb
arpl
mov
adc
dec
mov
sahf
shr
jmp
out
out
adc
movsb
sahf
push
pop
ss
sahf
hlt
daa
inc
sbb
sbb
jns
repz
fildl
add
pop
mov
stc
jo
enter
into
rcll
mov
mov
pop
cmp
xor
insl
ljmp
dec
popa
jne
int
icebp
jo
stc
jae
pusha
jb
add
shll
and
dec
insl
loop
hlt
shlb
jecxz
sub
std
cmp
mov
fimuls
sub
setne
mov
ja
lahf
add
leave
and
push
push
push
inc
cmp
dec
out
jae
xlat
mov
data16
loope
and
mov
hlt
sbb
dec
lret
sub
scas
ljmp
pop
cmp
fcoml
push
push
push
or
fldcw
mov
xor
in
pop
jbe
out
lea
loope
addr16
push
pushl
lret
and
and
cwtl
fistpl
sub
jge
fbld
enter
call
xchg
les
inc
xchg
mov
dec
push
mov
add
xchg
sbb
sbb
scas
lds
mov
xchg
jl
pop
cmp
leave
cmp
pushf
push
sub
xlat
ficompl
mov
jp
push
popf
cmp
inc
call
insb
inc
dec
mulb
out
sub
cmpsl
in
pop
adc
rclb
mov
cli
enter
in
sbb
sbb
xlat
xor
and
je
cmpb
dec
js
imul
lods
mov
fld
addr16
ror
ljmp
push
push
jge
fs
and
jno
test
fnsave
in
xchg
sahf
lods
pushf
mov
dec
or
sti
cmp
repnz
call
lahf
lock
xchg
fsubr
je
dec
lea
hlt
mov
je
jb
inc
repz
addl
lcall
adc
mov
test
cmc
and
and
arpl
inc
insl
pop
lods
sbb
je
add
ret
adc
adc
test
repnz
pop
push
je
or
int3
outsb
fcompl
xor
push
icebp
xor
adc
stos
xchg
fisubl
push
add
mov
pushf
in
cmp
cmpsl
mov
ficoml
jg
sbb
call
mov
mov
jle
icebp
xor
jb
test
cmp
push
movsl
lahf
mov
sbb
and
and
ds
or
push
enter
xchg
cltd
add
enter
mov
rcrl
xchg
arpl
fadds
jmp
pop
jo
mul
addr16
mov
mov
mov
pop
jnp
jge
repnz
jne
mov
xor
mov
jg
arpl
call
pop
cmp
mov
xor
sbb
mov
test
aad
cmp
and
jne
ret
add
nop
inc
adc
adc
pop
cmp
call
out
iret
fdivrp
jmp
pusha
ffreep
cwtl
mov
ret
and
mov
cli
and
pop
sub
add
shl
fcmove
inc
aad
push
sbb
jge
dec
test
pop
aaa
jge
fsubr
sub
sbb
jge
push
loope
test
inc
push
in
sbb
stc
aaa
sub
lahf
pop
mov
pusha
std
sarb
inc
das
xchg
mov
xor
fs
mov
imul
mov
cs
pop
pop
enter
pop
and
in
pusha
bound
xchg
int
repnz
lret
jg
mov
call
push
mov
fsts
out
pop
xor
cmp
xchg
loop
ds
ret
or
or
sti
inc
pop
and
lret
lds
pop
icebp
cmp
push
out
stc
sbb
xchg
mov
repnz
insb
push
aas
fmuls
dec
push
and
inc
jg
pop
mov
arpl
push
out
andb
mov
jo
xor
adc
call
rcr
cli
jmp
jb
pop
fcoms
inc
pop
xor
jns
push
test
into
andl
xor
sub
and
xchg
jb
rorl
adc
outsb
call
pushf
mov
std
fwait
dec
in
inc
out
jmp
repnz
cwtl
popf
test
daa
in
mov
int
sarl
insb
outsl
shrb
rcl
pop
dec
pop
xor
add
fdivp
scas
push
aaa
in
outsl
dec
les
lret
loope
ss
out
cmpsb
aam
test
add
mov
dec
not
sub
sbb
jae
or
cld
cmc
test
xchg
xchg
push
mov
add
sub
div
push
hlt
sub
adc
cmp
sub
popf
or
roll
dec
incb
aad
icebp
add
sbb
test
jecxz
test
cmp
enter
and
mov
jg
loop
lods
dec
pop
cmp
jmp
sbb
cmp
loope
fcompl
xchg
test
and
xchg
pop
push
loopne
aad
pop
jns
or
fstp
jb
bound
xor
cmp
or
mov
fwait
jle
lods
xor
mov
test
push
dec
je
test
dec
shll
pop
shlb
xlat
shl
push
out
xor
out
lcall
stos
mov
xchg
imul
fstl
mov
test
dec
or
mov
mov
shrb
pop
mov
jns
or
dec
pop
out
rcll
lock
jae
in
pop
in
jmp
inc
xchg
and
in
lock
ret
fwait
mov
gs
mov
movsb
popa
dec
in
int
aad
aas
jecxz
loope
cmp
sub
jns
js
lcall
or
icebp
mov
ret
cmc
cmp
push
repnz
push
sbb
ud0
xor
sub
jno
test
mov
sbb
in
or
mov
jmp
ljmp
fists
movsl
lods
mov
jg
xchg
adc
lcall
push
imul
ret
nop
das
adc
mov
sti
add
rolb
dec
sbb
mov
adc
jp
inc
repz
push
push
fnstsw
jl
add
repnz
popa
mov
xor
outsl
mov
adc
mov
xchg
mov
mov
lcall
xchg
pushf
loope
shl
xchg
mov
cwtl
pop
lret
icebp
cwtl
and
dec
cmc
mov
push
or
scas
xor
outsb
scas
adcl
xor
sbb
out
and
xchg
cltd
addr16
test
sbb
insl
outsb
popf
dec
and
xor
jle
das
mov
and
mov
int3
mov
adc
xor
enter
sbb
mov
out
ss
rcr
fstpt
test
fsubl
dec
xchg
lea
sti
adc
scas
push
mov
dec
adc
jnp
les
ret
int
pop
push
mov
aam
mov
or
dec
and
iret
xchg
bound
into
cltd
test
push
mov
shrl
cltd
sbb
negl
cli
and
mov
subb
mov
test
lods
aaa
pop
imul
jge
pop
mov
cltd
cmpsb
adc
push
gs
push
inc
jae
ja
inc
das
sub
dec
lods
dec
dec
xchg
lea
jge
mov
cmp
pop
movsb
or
lds
push
and
push
push
cs
cs
fadds
ljmp
adcl
jns
or
leave
vpmaxsw
int
rcr
mov
mov
or
sbb
push
lds
mov
and
addr16
daa
call
add
popa
push
cmp
inc
test
ficompl
mov
add
xchg
jo,pn
in
js
subl
push
cld
pop
popa
sahf
stos
xorb
mov
jnp
sbb
rolb
and
les
mov
scas
jo
call
nop
cmp
xchg
adc
or
cmp
in
inc
mov
dec
or
jl
inc
cmc
lock
or
mov
into
xorb
decb
sarl
jmp
xor
fldl2e
clc
stos
aaa
xchg
popa
sub
or
dec
sub
mov
sub
mov
and
subl
jo
add
orb
ja
aam
mov
sbb
sbb
pop
dec
incb
sub
enter
lcall
add
pop
xchg
push
jp
xchg
std
mov
pop
jo
xchg
out
add
xchg
or
mov
dec
pop
mov
inc
pusha
call
jb,pt
mov
cmpb
mov
mov
popa
rcrl
divb
inc
cmpl
push
mov
push
cwtl
ds
popf
xchg
or
in
or
imul
mov
aaa
jno
or
shrb
out
out
jns
inc
mov
push
or
add
xor
imul
cltd
cmp
arpl
cmp
xchg
jmp
mov
mov
jmp
push
sub
mul
insl
mov
imul
loope
jb
dec
hlt
mov
mov
out
ljmp
dec
cmpsl
cmp
inc
xchg
fwait
into
mov
pop
mov
inc
das
adc
or
xchg
xchg
adc
lahf
pop
in
or
dec
outsb
fistpl
scas
jle
dec
pop
push
or
xor
mov
mov
pushf
push
loope
jnp
dec
push
mov
hlt
lds
js
push
imul
mov
mov
xor
out
xor
call
inc
cwtl
sbbb
inc
xchg
mov
cmp
push
ja
mov
xchg
jb
movsb
cmp
or
or
lret
loop
rcr
add
fwait
push
std
cs
and
mov
xor
or
sub
stos
mov
xlat
int3
test
mov
mov
daa
cs
test
adc
jnp
jns
or
cli
sub
cmp
xchg
cwtl
xchg
sahf
ds
pop
mov
push
adc
nop
test
jmp
aam
push
cmp
add
int3
fldcw
fidivl
push
sub
dec
dec
aas
out
ja
push
xchg
addps
lock
sub
scas
xor
jbe
jo
push
jge
std
xor
pop
mov
fnsave
dec
fwait
mov
mov
stos
outsl
ss
sbb
jb
push
push
stos
pusha
adc
cmpl
or
maskmovq
divl
pop
inc
cwtl
in
or
mov
into
test
leave
mov
jecxz
movsb
mov
addr16
cmpsb
push
add
push
add
sbb
and
fucom
pop
scas
test
iret
ljmp
pop
fs
ret
add
mov
popf
popf
pop
push
jo
pop
into
ficomps
in
outsb
dec
scas
in
adc
ja
xchg
mov
sti
mov
sub
mov
dec
pop
fs
or
stc
cltd
lock
jge
mov
push
add
les
shlb
push
out
int3
jmp
cs
scas
mov
fwait
loope
cld
adc
insl
ja
push
ja
mov
and
repnz
adcb
pop
icebp
push
out
lret
dec
add
fisttpll
cld
aaa
icebp
xor
pop
loope
pop
jg
icebp
cld
jge,pt
aad
dec
lock
and
dec
hlt
inc
aaa
pop
out
push
jae
dec
pop
adc
lea
and
mov
mov
sub
inc
xchg
fs
test
popa
enter
dec
mov
mov
xchg
push
es
xchg
andl
mov
adc
xrelease
or
mov
adc
test
jp
shl
gs
jae
jl
mov
add
push
nop
sub
or
xor
adc
jne
lods
sbb
sub
ss
mov
sub
shl
pop
int3
pop
addl
xchg
xor
rcll
inc
pop
adc
add
adc
push
in
fistpll
sti
push
ud2
addl
pop
or
jl
jecxz
mov
int3
mov
es
popa
insb
jbe
sbb
popf
rcll
push
xchg
xor
jns
iret
dec
add
mov
std
dec
shl
xchg
icebp
mov
jle
ja
sti
pop
ret
jbe
test
mov
cmp
dec
in
jge
adcb
arpl
mov
and
xchg
scas
cmp
in
popa
dec
sti
push
push
test
addr16
mov
lahf
lcall
inc
dec
repz
fs
pop
pop
dec
shlb
mov
shr
xchg
repnz
fnstsw
or
sti
out
lahf
outsl
xor
push
outsl
inc
push
adc
adc
fs
push
fldl
lds
cs
aaa
mov
or
adc
jl
jg
hlt
jmp
ja
mov
ja
in
sbbb
xor
cs
xchg
pop
jmp
pop
imul
sbb
ret
inc
mov
shrb
das
dec
jge
out
xlat
jnp
js
ret
adc
ret
mov
mov
shrb
push
lods
sbb
pop
mov
mov
fucomp
test
sub
sub
enter
push
mov
mov
pop
out
scas
mov
or
mov
xchg
cmp
mov
iret
clc
inc
and
jb
and
dec
addl
push
mov
cmp
jbe
mov
movsl
aaa
inc
pop
push
pop
cwtl
fmuls
testl
push
aad
in
or
popa
lret
movsl
push
loop
fistl
stos
inc
pop
scas
daa
mov
lea
pop
mov
xor
ljmp
nop
sub
pop
orl
loope
hlt
xchg
sbb
fsubrs
adc
hlt
test
mov
xchg
leave
ds
push
jb
jno
sub
push
stc
ja
and
sbb
cmp
or
mov
lock
inc
xchg
daa
xchg
repz
dec
fwait
cmp
mov
jecxz
inc
or
xor
aam
insl
loopne
cli
sarl
jg
int3
and
pop
pop
mov
in
push
pop
ficomps
jl
dec
inc
xor
push
adc
repz
shrl
sbb
jmp
mov
add
fdivs
in
or
nop
sub
arpl
ret
push
sarb
vpaddsb
in
sbb
jns
mov
cmpsb
popf
mov
dec
and
cmp
es
insl
sbb
xor
cmp
stc
mov
inc
mov
mov
test
fidivrl
adc
mov
pushf
mov
jo
mov
sub
xchg
daa
ret
or
out
pmulhuw
push
sub
and
mov
mov
cmpsl
jno
inc
int
mov
gs
arpl
popa
inc
daa
scas
add
push
adc
addr16
ljmp
mov
inc
data16
dec
in
lahf
mov
les
mov
mov
pop
ljmp
push
mov
inc
sub
push
push
fs
push
push
sbb
imull
in
sti
cltd
mov
pextrw
gs
cmpsb
movsb
fstl
leave
pop
out
ret
scas
dec
inc
pop
cmc
shl
xor
cmp
out
add
inc
test
inc
movsb
in
inc
xor
adc
test
xchg
pop
adc
out
iret
sbb
jmp
sub
shlb
imull
fistl
jae
pop
js
cmp
faddl
sbb
pushl
add
pop
lcall
das
sbb
or
adc
in
add
add
dec
out
cmp
pop
or
mov
loop
inc
inc
mov
push
add
faddl
mov
mov
or
ret
add
xchg
sub
sub
jmp
inc
mov
jg
pop
dec
icebp
aam
test
mov
repz
push
sub
gs
in
dec
push
test
ljmp
loop
jp
in
fnstsw
mul
inc
aas
inc
cmp
cmp
out
xchg
aaa
push
lret
cmpsl
xlat
pop
jl
and
stc
xorl
stos
push
jb
shrl
bswap
jne
mov
pop
sbb
lret
ljmp
cltd
push
imul
dec
add
push
cmp
enter
and
mov
loopne
lcall
xor
mov
lods
insl
xchg
adc
fldt
repz
pop
les
and
fisubl
ret
sbb
into
out
inc
adc
loop,pn
push
repnz
add
mov
xchg
insb
fdivs
pop
xchg
sar
add
ss
mov
sbb
mov
idiv
push
std
dec
dec
fistps
adc
sahf
mov
stos
repnz
lock
xchg
or
loopne,pt
pop
addr16
cwtl
or
and
jg
in
sub
sub
jmp
std
lea
idivl
orb
xlat
dec
xchg
aaa
push
jbe
cmp
xchg
cli
sbb
ds
insb
xchg
jno
movsl
push
stos
xchg
and
xorb
in
add
push
cmp
jno
and
mov
int3
idivb
into
xor
movsl
mov
out
repnz
loope
jp
testb
repz
xchg
ret
cmpsb
scas
adc
inc
test
inc
out
into
adc
leave
and
data16
push
es
or
mov
jnp
add
inc
pop
and
shrl
dec
nop
loopne
rol
mov
sub
push
stos
imul
gs
mov
jl
sub
out
pop
sbb
xor
cmp
add
adcb
mov
ds
movsl
test
out
leave
fs
test
jmp
in
add
inc
mov
addr16
push
fwait
push
xor
adc
mov
in
setbe
jle
xor
cmp
sbb
stos
mov
js
mov
popf
sub
add
aas
sbb
out
lret
int
pop
in
xchg
mov
sub
bnd
cmp
and
and
aaa
in
adc
out
repz
ja
aaa
mov
cli
inc
jl
adc
add
bound
push
and
loopne
xor
fxch
shrl
ss
imul
mov
xchg
jns
cmp
mov
adc
mov
cmp
roll
sub
or
stos
lock
fisubrs
fsubs
cmp
or
bound
cwtl
add
mov
mov
out
inc
enter
and
push
add
push
jl
aas
insb
arpl
cmp
fcmovnu
push
and
popa
stos
mov
pop
dec
mov
xor
xchg
push
test
push
adc
dec
outsl
xor
inc
mov
cmp
mov
outsl
jns
js
js
add
repz
sub
or
dec
push
fnstenv
test
ror
int
rcll
adc
les
negl
xchg
inc
or
pop
fdivrs
sub
test
cmp
or
clc
or
adc
push
fstpl
mov
xchg
add
test
ds
jo
xchg
push
in
popf
ss
sub
enter
xchg
inc
mov
outsb
arpl
jb
cltd
insl
xor
cs
roll
dec
mov
jb
jae
in
daa
dec
dec
sbb
jae
cs
inc
int3
mov
loope
mov
lods
adc
xchg
xchg
push
jae
mov
js
mov
adc
sbb
jl
loopne
adc
xor
add
fimuls
push
icebp
adc
insb
mov
adc
ret
js
inc
into
sbb
test
test
cltd
push
test
rcl
mulb
mov
ss
xor
mov
xlat
test
sbb
inc
in
sbb
int
pop
loope
lea
mov
cmp
lret
leave
sbb
sbb
inc
push
mov
pop
xor
sti
or
repnz
inc
outsb
adc
icebp
jbe
push
test
mov
cwtl
lods
push
jecxz
call
or
movsl
xchg
inc
sbb
enter
std
sub
aaa
mov
pop
xor
les
adc
test
xchg
call
xor
jp
out
js
jno
insl
add
aad
mov
loope
adc
add
jb
push
mov
movsl
mov
jae
scas
sahf
mov
int
notb
push
adc
lea
xchg
adc
mov
mov
fs
mov
adc
mov
repz
mov
or
hlt
gs
aas
movsl
xor
xchg
cmc
getsec
dec
ljmp
pop
pop
and
cltd
mov
fstl
adc
divl
inc
div
test
and
divb
mov
stos
add
int
mov
psrad
arpl
sbb
in
push
insb
cmpsl
inc
pop
incb
fidivs
data16
mov
pop
xor
mov
mov
push
inc
cmpl
and
inc
inc
jno
sbb
loope
mov
std
xchg
jmp
mov
movl
and
shlb
mov
push
push
xchg
pop
fsubrp
imul
mov
rcrl
mov
sahf
pop
rclb
fmull
arpl
imul
xor
sub
add
sub
xchg
xchg
scas
cmp
add
orl
mov
bswap
dec
popa
adc
jns
xor
inc
sbb
lret
test
fsubs
scas
data16
dec
cld
xor
mov
shll
stc
pushf
cmp
js
adc
repz
jo
and
cmp
pop
push
in
mov
lahf
je
divb
dec
or
jecxz
jns
mov
xor
xchg
jge
gs
je
lahf
sub
adc
cmp
cmpsl
mov
mov
mov
cld
adc
imul
sti
jbe
add
rcr
sti
and
cld
pop
xor
mov
jne
imul
jae
test
loope
sub
inc
dec
pop
leave
xchg
test
pop
adcl
test
push
lahf
std
or
mov
fnstsw
ja
outsl
xlat
test
inc
pushf
and
inc
mov
xchg
lret
mov
xor
add
leave
add
mov
sahf
inc
leave
fimuls
movsb
adc
adc
and
or
fstl
lcall
xchg
adc
fists
loopne
int
cmp
dec
push
xor
xor
fcompl
mov
xor
and
mov
rcrb
push
mov
iret
ret
xor
test
ret
and
pop
es
rol
les
push
sub
and
cmp
inc
icebp
and
inc
or
jecxz
cs
ljmp
pop
hlt
jecxz
rorl
test
adc
and
sti
jle
inc
xchg
imul
cmp
repnz
hlt
es
or
cmpb
dec
pop
push
mov
inc
add
rcl
and
lods
push
mov
out
movsl
or
jge
sub
loopne
ret
jl
in
or
cmp
in
lea
pop
cmp
add
xchg
mov
xor
pop
es
or
and
mov
push
push
push
ds
mov
xor
mov
int3
fcmove
sub
and
std
and
enter
shrl
aad
clc
and
movsl
nop
mov
adc
or
addr16
push
loopne
xchg
or
out
cs
xlat
lods
sub
shll
out
xchg
stos
mov
mov
loopne
cmpsb
fxsave
fs
or
xor
push
imul
out
and
lods
aad
jno
es
repnz
fnstcw
cs
mov
fwait
lcall
mov
lea
icebp
mov
aad
popa
add
push
cmp
xor
sbb
dec
pop
ds
push
mov
mov
stos
cmp
int3
mov
insl
cmp
adc
push
or
ljmp
cmp
in
lret
lcall
outsb
mov
sub
and
or
int
int3
add
cmp
repz
cmc
call
je
mov
je
outsl
test
fstpt
movsb
popa
out
xchg
movsl
rcrl
adc
enter
mov
lds
or
cwtl
insl
mov
xlat
cmpsb
mov
sbb
dec
into
pop
rcrl
mov
pop
cmp
cmp
data16
stos
in
mov
mov
jne
nop
lods
cbtw
shll
jle
mov
fcmovnu
mov
dec
jp
adc
push
xchg
mov
mov
enter
sti
outsb
sub
xlat
push
insl
push
cmp
jne
out
or
mov
add
sar
adcl
ret
ss
movsl
lods
pop
into
and
out
mov
cmpsb
jg
push
popf
test
sub
jb
xor
pop
dec
xchg
mov
jl
stc
or
movsl
out
xchg
das
pop
pushf
adc
lahf
xchg
and
jbe
push
es
aas
out
pop
cmpsb
clc
and
xorl
jae
call
inc
mov
out
add
jne
xchg
sbb
lret
test
mov
insl
out
push
aas
sbb
jmp
push
and
push
or
mov
push
and
jnp
cmp
into
fcomi
xchg
hlt
jno
nop
cld
cmp
jbe
pop
adc
inc
sbb
jg
pop
sub
push
das
mov
pop
popa
add
push
xchg
or
xchg
mov
imul
inc
sbb
push
cmc
repnz
cmp
in
adc
mov
test
notl
or
test
jmp
movsb
std
cmp
sbb
pop
aad
and
sti
pop
sub
rcll
enter
iret
sub
mov
mov
lea
mov
add
lret
rcl
rcll
cli
fiadds
mov
pop
ficomps
add
jns
sbb
xor
push
popa
inc
xchg
xor
mov
aaa
inc
iret
cmp
das
loope
pop
cmp
lock
mov
loop
dec
sub
scas
loop
inc
xchg
movsb
sub
idivl
enter
shlb
in
xor
dec
subl
adc
mov
enter
or
lret
mov
cmpsl
rcrb
cmpsl
xor
pop
test
jmp
mov
iret
push
lock
arpl
inc
fisubl
mov
pusha
pop
idivl
ja
and
ret
mov
neg
adc
out
nop
test
loop
pop
pop
into
cmp
shll
cld
dec
mov
xlat
sub
in
jg
aad
or
jo
xchg
dec
shr
sti
nop
cmpsl
cwtl
sahf
out
mov
not
push
orl
mov
dec
mov
lret
mov
sub
lea
in
iret
mov
es
mov
dec
mov
arpl
adc
and
in
std
arpl
mov
loop
xchg
inc
decl
pop
xor
out
inc
pop
jb
jo
aam
scas
jo
loopne
stos
insb
sub
adc
cld
adc
test
das
dec
movsl
xor
push
inc
cwtl
imul
xlat
or
mov
movsl
repz
jns
mov
and
fdivl
sti
cmpl
fimuls
or
bound
xchg
add
shrl
gs
dec
add
shlb
adc
jno
xchg
pop
or
sub
cmp
cltd
orl
repnz
rol
jecxz
dec
clc
or
add
in
adc
call
inc
in
daa
ljmp
icebp
imul
or
pushf
lcall
jecxz
mov
sub
pop
nop
push
in
jl
jb
loop
movsb
hlt
incb
leave
int
insl
mov
fisttpl
add
daa
clc
scas
mov
push
mov
push
jb
jp
lret
outsl
fisubs
outsl
fdivr
cmp
adc
mov
sti
jp
adc
cmp
cmp
cwtl
sbb
adc
jae
mov
rol
inc
pop
iret
cmpsl
fsubs
adc
mov
mov
sub
mov
mov
push
mov
stos
fwait
nop
xchg
sbb
pop
or
testb
ret
sbb
xchg
lcall
into
jg
mov
mov
xlat
add
nop
jmp
push
dec
and
fcmovnu
std
roll
xchg
sub
les
loope
push
xor
push
adc
call
movsb
jno
std
push
jno
jge
sbb
dec
fstl
add
inc
mov
and
hlt
jne
addl
mov
pop
push
ror
inc
jg
pop
sub
loope
out
dec
or
xchg
ljmp
jge
push
push
lahf
out
lods
fcmovbe
push
repnz
je
ja
pop
add
fcmovne
into
loop
out
xor
sbb
push
loope
jge
sub
fldt
imul
ljmp
or
adcl
mov
data16
loope
inc
cld
jae
pop
bound
and
push
dec
cmpsb
clc
faddl
xchg
add
xor
lahf
fsts
mov
gs
mov
sub
dec
bound
add
cltd
lods
cmp
inc
ret
es
mov
jp
ret
pop
push
movsb
or
movsl
pop
mov
adc
nop
sbb
dec
jle
inc
sahf
movsl
rcl
dec
adc
test
movsb
movsb
cmpsl
mov
shl
pop
inc
cmp
xor
sbb
cmp
jae
sbb
subl
bound
inc
insl
inc
inc
insb
cmpsb
xchg
xchg
out
push
fistl
sbb
mov
adc
cmpsl
sarl
sub
push
adc
test
xchg
pusha
in
sub
pop
adc
enter
dec
xchg
mov
sub
jbe
jae
mov
mov
movsl
lahf
jo
pushf
imul
scas
pop
bound
insb
mov
add
pop
loopne
int
pushf
dec
repz
cmp
aaa
jmp
imul
jbe
ja
fwait
dec
scas
mov
cltd
sub
test
bound
mov
push
jo
stos
mov
mov
sub
jge
add
push
dec
and
dec
xchg
jae
das
mov
addb
movsl
mov
dec
add
shrb
fbld
leave
sub
loopne
sub
sbb
cmp
lcall
and
ret
mov
push
js
add
push
mov
hlt
xchg
bound
mov
ja
shrb
cld
int3
jbe
dec
cli
popf
cwtl
sbb
imul
xor
and
ret
mov
mov
mov
test
ljmp
mov
int3
pop
dec
push
dec
mov
and
imulb
pop
cltd
jl
lahf
inc
les
pop
mov
push
push
add
lock
fmul
cmp
adc
dec
adcb
and
iret
dec
jle
xchg
nop
push
fwait
stos
test
pop
push
imul
stos
xor
fsubr
jl
cmp
jl
and
jae
add
pop
pop
jge
mov
xchg
and
jne
jge
or
in
push
into
xchg
ficomps
fs
idivb
mov
rcr
sub
or
cltd
pusha
xor
test
mov
xlat
and
ja
and
mov
mov
icebp
sahf
mov
inc
call
mov
int3
ds
pushf
inc
pushf
add
pop
arpl
in
cs
frstor
inc
mov
cmp
mov
xor
xor
clc
xchg
ficoms
adc
test
in
stos
cwtl
cmp
mov
mov
out
loope
push
xchg
add
xchg
push
sub
and
inc
test
decl
inc
mov
add
pop
xor
mov
shlb
lret
adc
cmp
mov
mov
test
rclb
jg
lods
add
movsl
stos
mov
gs
int
xchg
adc
pop
mov
cmpsb
add
dec
push
fmul
loop
dec
aas
adc
in
loop
sbbb
hlt
std
lret
fmulp
fidivs
loopne
lods
lods
push
jbe
orb
negb
inc
movb
test
repnz
jmp
ljmp
mov
mov
movsb
jecxz
ds
in
inc
xor
cmpsb
popf
out
adc
clc
ret
data16
mov
movsb
nop
sub
imul
ss
lret
add
pop
push
cmp
arpl
mov
sub
jb
xchg
push
fwait
lods
int3
negl
cmp
dec
xor
fldl
cmp
mov
roll
pop
cmp
jecxz
sub
shll
push
pop
push
stc
mov
push
movsb
jb
shlb
jno
lret
or
ret
hlt
jl
bound
xchg
push
push
mov
sbbb
or
fdivp
pushf
fwait
mov
call
test
sti
jl
les
pop
push
inc
in
jo
jge
push
mov
cmp
mov
shll
mov
jge
pop
loopne
jne
xchg
test
push
sbb
out
add
ja
ret
aad
mov
push
enter
xchg
mov
mov
pop
inc
jbe
lcall
movsl
leave
gs
pushf
pop
mov
popf
lcallw
ret
fistpll
pop
out
addr16
repz
inc
out
dec
ja
out
test
adc
cmpsl
movsl
jecxz
sbb
xor
mov
push
inc
ficompl
cmpsl
stos
jnp
dec
fbld
fdecstp
mov
pusha
ds
out
xor
test
repz
sti
or
sbb
insb
mov
jge
popl
xor
ss
push
out
stos
cmpsl
pop
cmp
sbb
imul
pop
cld
cmp
repnz
lods
dec
adc
daa
xor
cmc
cmp
insb
jp
jecxz
idivb
dec
pop
xchg
adc
sbb
dec
add
mov
out
loopne
mov
sbb
pop
pop
outsb
loope
push
push
test
je
sub
popa
sbb
and
fsubs
add
add
mov
cmp
mov
sbb
test
out
sbb
scas
ss
pop
sub
mov
inc
je
jecxz
mov
cmp
loop
les
fsub
mov
dec
xor
movsb
mov
cmp
sbb
aaa
mov
jns
adc
cwtl
mov
pusha
dec
or
jne
icebp
dec
dec
jo
scas
fisubl
adc
cmp
ss
dec
sbb
das
gs
mov
int3
mov
test
fimuls
and
xor
mov
push
jae
pop
test
xor
movsl
fs
aas
and
push
and
pop
mov
stc
or
mov
or
loop
icebp
sub
push
xchg
pop
add
push
inc
jns
mov
push
push
and
popfw
aam
cs
loop
inc
or
stos
pusha
pop
and
nop
mov
mov
cli
scas
push
adc
xor
jp
test
mov
repnz
ret
mov
adc
mov
test
add
lahf
and
xor
xchg
stc
inc
push
add
xchg
subb
call
shlb
fucomp
jl
xchg
int
sar
pop
lret
call
dec
push
push
loop
mov
jbe
lahf
aad
or
ret
sahf
xchg
subb
dec
popa
shrb
scas
and
lahf
jmp
nop
sarb
jo
movsl
cmpsb
mov
xchg
or
loopne
imulb
inc
mov
sbb
xor
xchg
push
pop
cmp
lcall
mov
push
jmp
hlt
cmc
cmc
pop
inc
xor
into
je
fcompl
xor
aaa
jle
adc
cltd
sub
pop
shr
mov
sub
adc
pmaxsw
jnp
xchg
popf
orb
or
loop
shll
sub
ficomps
rcl
push
nop
in
fs
inc
insb
sub
and
sbb
inc
imul
aas
loope
fnstsw
decb
out
inc
ret
sub
jno
insl
push
jle
mov
adc
jno
in
adc
insl
mov
jo
cld
lret
xor
xchg
adc
jnp
addr16
dec
sub
mov
add
dec
sub
nop
add
cmc
adc
xor
stc
xor
movsl
fidivrl
mov
mov
jle
sbb
insl
test
imull
mov
dec
xchg
inc
jmp
xrelease
pop
pop
inc
dec
lock
out
xchg
outsl
repnz
mov
push
nop
push
add
xor
in
mov
push
lcall
fwait
cmp
mov
stc
sar
and
xchg
lock
pusha
js
ds
push
repnz
in
mov
in
mov
mov
cmpsb
mov
in
sub
mov
mov
cmc
xchg
jge
xchg
ja
js
aas
push
clc
in
push
pop
rclb
ret
cs
jecxz
pop
fisttps
int
inc
jl
jle
xchg
jne
cmpsl
jp
in
pusha
push
dec
repnz
xchg
sbb
aad
arpl
or
movsb
jmp
inc
call
mov
lock
rep
sbb
incb
out
jle
sub
inc
push
jno
iret
mov
add
ja
lret
cmc
cmp
insb
pop
leave
adc
push
jae
in
pop
repnz
xor
call
push
gs
mov
or
je
cmp
cld
add
pop
mov
movsl
or
scas
out
clc
out
cld
rcr
adc
and
mov
fwait
xlat
fs
repz
mov
rcll
dec
xor
fisttps
int
push
sbbl
icebp
lcall
sub
push
aas
mov
js
int
mov
and
inc
adc
jle
adcl
std
sub
insl
mov
jo
out
mov
lret
mov
bound
mov
jbe
or
or
fists
or
fs
jns
test
jne
je
inc
cli
mov
adc
mov
into
adcb
dec
xchg
int3
dec
inc
jle
jbe
movsl
fxch
mov
mov
mov
adc
jbe
jns
inc
mov
push
in
pop
and
mov
mov
enter
push
cmp
push
pop
dec
mov
or
in
popf
les
bt
xchg
add
test
incb
test
push
repnz
cmpsl
pop
fistpll
cmc
pop
add
sti
jae
and
gs
pop
incb
int
pop
jbe
xor
jns
ds
jmp
mov
popf
nop
push
jmp
lock
sti
pushf
xchg
xchg
xchg
lods
movsb
mov
pusha
push
dec
test
xor
jo
enter
stos
iret
es
test
hlt
rol
jmp
fildl
xor
sbb
addr16
jbe
lahf
mov
fiadds
int
in
data16
inc
mov
mov
xchg
xchg
sete
jne
dec
and
inc
add
mov
mov
xchg
push
jmp
jno
jae
cmpsb
out
sbb
leave
mov
das
and
sub
cli
add
mov
jno
adc
clc
sub
imul
jb
ljmp
fbstp
cmc
mov
sbbl
fbld
popa
pop
in
into
lret
jl
sub
inc
mov
dec
push
out
ljmp
lcall
push
cs
dec
jecxz
push
sbb
mov
mov
cmc
ret
mov
mov
stc
mov
je
fimull
mov
mov
in
mov
bound
stos
sbb
push
rcl
ret
mov
push
xor
and
bnd
xor
push
mov
dec
call
adc
outsl
mov
scas
or
sub
dec
frstor
dec
cmp
xchg
aad
std
inc
stos
pop
cmp
xchg
cmp
sub
hlt
xchg
sbb
dec
mov
inc
mov
mov
cmp
mov
and
jmp
fcom
xorl
dec
stc
test
sahf
pushf
mov
in
es
test
push
outsl
mov
fmul
dec
hlt
cmpsb
repz
jno
out
or
cmpsb
dec
jmp
jl
fidivrs
or
or
pop
ficoms
xchg
dec
ljmp
inc
ret
mov
dec
int
xchg
enter
sub
stos
in
inc
je
push
out
mov
repnz
push
xchg
mov
pop
mov
loop
jg
cmp
lret
mov
and
inc
sbb
push
mov
mov
add
mov
and
addr16
ja
pusha
cs
dec
and
xchg
pop
repz
push
int
jb
sarl
cld
sbb
mov
rcrl
cmp
jo
idivl
xchg
aaa
jae
and
call
mov
and
nop
das
mov
cld
push
fcmovnb
movsb
aas
stos
push
cmp
xchg
xlat
pop
pop
jae
ljmp
push
jle
mov
and
cmp
lock
shrb
lret
and
test
ss
sarb
push
pop
jg
in
stos
ja
ss
psubw
ljmp
sub
mov
sub
push
mov
ljmp
lds
jns
pop
je
mov
je,pt
cs
jmp
test
into
or
and
xchg
sbb
push
sbb
inc
insb
test
or
mov
and
popa
fcoms
clc
push
sub
loop
jbe
fstl
lcall
dec
fstpt
cmp
loopne
lcall
xchg
sbb
repnz
xor
jae
sub
test
movsl
inc
movsb
mov
out
pushf
xchg
fisttpl
sub
test
adc
jne
orb
fidivl
jge
mov
rcll
sbb
cmp
fidivrl
ficompl
cmp
dec
rcll
pop
sub
aas
jne
adc
enter
and
cmp
mov
aaa
pop
dec
mov
ljmp
pop
popa
push
lods
aaa
jle
out
ja
insb
inc
and
sbb
add
js
mov
in
sub
fidivs
aaa
jp
jp
push
xchg
sbbl
xchg
faddl
jbe
xchg
or
test
pop
lock
insb
push
insl
cld
pop
dec
dec
ja
sub
stos
and
push
cs
lock
repz
xchg
rcll
into
mov
out
rorb
push
mov
ds
and
or
mov
out
jmp
shl
adc
dec
mov
mov
pop
mov
mov
mov
lock
and
inc
dec
push
cli
out
outsl
jb
lods
push
leave
test
call
fisttpl
cltd
insb
xor
mov
out
in
xor
pusha
adc
mov
sbb
int3
inc
repz
sbb
lods
lret
or
iret
lds
loop
sub
mov
lock
popa
or
push
xor
sbb
mov
xchg
cmpsl
inc
xchg
inc
out
cmp
jle
pop
daa
out
lcall
mov
outsl
fsts
push
out
iret
pop
repnz
or
mov
pop
jmp
lds
cmc
pop
ss
mov
pushf
mov
add
jg
imul
incb
cmp
movsl
xchg
pop
xchg
lret
fwait
jle
into
call
mov
mov
cmp
dec
jmp
out
pop
cwtl
pusha
mov
push
lcall
inc
mov
cmp
notl
fs
or
sub
push
mov
iret
in
in
xor
lods
movsl
mov
in
sbb
lods
adc
shll
xchg
add
fwait
jl
dec
fistpll
jmp
aam
shrb
gs
shl
test
cwtl
sub
in
inc
sub
add
loope
and
inc
xor
mov
fisttpl
fs
ret
jmp
sbb
inc
inc
push
fstl
mov
out
jnp
pushf
sbbl
adc
outsl
pop
cmp
negb
mov
adc
mov
jge
mov
jmp
scas
pushf
and
shrb
pop
or
out
into
push
jl
dec
dec
daa
mov
jnp
dec
dec
rol
repnz
sub
sub
xor
gs
xor
ljmp
mov
outsb
ret
jns
shll
pop
mov
sub
cmp
or
sbb
lcall
and
sbb
push
into
and
add
mov
jmp
cmc
push
out
repnz
xchg
pusha
dec
push
xchg
loope
mov
hlt
outsl
sub
add
pop
xchg
je
xchg
pop
fisubrl
fmull
aad
test
ljmp
xchg
mov
cmp
mov
add
inc
push
push
call
sbb
push
js
inc
adc
daa
xchg
cwtl
xchg
faddp
mov
dec
dec
ds
test
cwtl
cld
mov
xchg
xlat
fistps
push
and
faddl
xchg
out
cmp
jl
popf
jle
clc
pop
fistl
mov
mov
add
mov
aam
sub
gs
push
mov
dec
sti
mov
cmp
mov
clc
ret
mov
push
mov
mov
jbe
sub
lret
into
adc
mov
rcll
jno
inc
mov
add
sbb
pusha
pop
icebp
ljmp
sub
sbb
lods
lods
dec
xor
add
popa
adc
outsb
cmp
jno
arpl
lret
nop
test
sbb
mov
jge
push
inc
insb
ror
push
es
cmp
addr16
mov
jae
push
js
xor
mov
xchg
xlat
pop
dec
mov
dec
xchg
je
fs
pusha
inc
aaa
or
pop
mov
dec
mov
dec
mov
stc
and
pop
inc
leave
ljmp
xchg
cltd
push
push
mov
pop
mov
push
mov
stos
das
pop
adcb
inc
and
aas
call
dec
xor
cmp
mov
push
ds
test
test
ret
cmpb
adc
and
sarl
mov
stos
stc
fdivrp
push
js
cli
fidivrs
sbb
inc
push
push
fstl
and
xchg
mov
sbb
pusha
setns
adc
mov
jb
dec
mov
outsl
lds
out
stos
jge
jo
cwtl
rolb
mov
mov
sbb
mov
sti
sti
or
and
fsubrl
xchg
fimuls
negb
cwtl
out
cmp
pop
pusha
add
ss
mov
cmp
add
dec
xor
sub
int
rcll
push
cmc
cmp
loop
sahf
mov
sub
pop
inc
pop
je,pn
jne
iret
iret
sti
xchg
rclb
fcomps
setp
ret
icebp
pop
pop
push
test
test
dec
loop
fs
mov
cltd
out
ret
cmp
xor
mov
sarb
or
int3
out
scas
loop
ret
pop
sub
bound
xchg
frstor
mov
push
outsb
jmp
dec
call
mov
insb
jno
mov
ljmp
inc
sub
sub
pop
sub
sub
fwait
mov
fs
and
cli
rcr
les
cli
inc
adc
and
xor
hlt
pop
call
fldt
mov
sets
xorps
arpl
mov
test
mov
mov
xor
jp
push
sbb
das
xchg
sbb
lcall
push
dec
dec
scas
sub
lds
cmp
dec
daa
mov
mov
push
outsb
ret
jbe
scas
add
les
xor
sub
stc
jle
xor
inc
fimuls
push
adc
push
xchg
ss
movsb
sbb
fistpll
enter
jp
xchg
xchg
rcl
adc
inc
push
push
sti
movb
maskmovq
testl
addl
dec
push
addl
jo
fldenv
rorl
rcll
das
ret
ret
pusha
xchg
add
or
xlat
xchg
sbb
mov
cld
inc
push
sub
mov
or
push
lret
rol
inc
insb
jbe
insb
outsb
pop
add
stos
dec
xchg
mov
aad
fdivrs
adc
lahf
pop
cmp
sub
mov
xlat
adcl
lock
dec
push
cmp
mov
mov
into
int
jecxz
mov
sub
jnp
ret
sub
sub
adc
mov
cmpsl
dec
popf
push
movsb
sub
dec
stc
sbb
pop
repnz
dec
jl
adc
enter
mov
lret
or
and
ljmp
fldl
mov
mov
pushf
scas
pop
sub
jae
sbb
mov
add
xorl
insb
xchg
or
jg
imul
lods
shll
cmp
sti
fldl
pop
cmp
jmp
js
pusha
out
push
cltd
mov
jns
dec
jmp
adc
push
pop
fcomps
xor
shll
or
mov
mov
mov
inc
mov
popa
sbb
jmp
sbb
mov
xchg
loopne
lods
and
add
in
inc
and
orl
lods
sbb
popf
sub
jnp
pop
mov
xor
in
iret
add
enter
pop
and
push
xchg
or
lahf
inc
addr16
aaa
out
rolb
xor
xchg
ret
push
adcb
in
out
push
sub
sbb
aas
test
push
loope
outsl
shl
les
pop
addr16
xor
jge
outsl
xchg
xchg
mov
add
loop
and
insb
sub
mov
push
or
fsubl
jo
repnz
ds
data16
cmp
adc
inc
movsb
andb
push
push
mov
sbb
xor
mov
scas
pop
sbb
xor
rorb
call
jbe
stos
sarb
mov
mov
lret
and
or
popa
mov
stos
jne
cmp
fldcw
mov
jl
clc
fbstp
cwtl
mov
lods
fwait
imul
sub
dec
inc
mov
xor
andb
int
xor
xchg
shl
xchg
mov
push
dec
dec
cmpsl
adc
sub
neg
and
fists
and
push
jnp
mov
pop
dec
sahf
repnz
pop
sub
cmp
cmp
push
shrl
or
fmuls
push
or
add
sub
cld
stos
xor
pusha
cmp
jb
test
cmp
dec
mov
bound
test
and
xchg
push
mov
movsb
mov
add
pushf
cmc
sub
cli
punpckhwd
movsl
mov
cmp
or
shlb
push
jnp
add
js
and
shrb
xor
shrl
into
sub
xchg
test
and
jno
xor
mov
imul
mov
xor
adc
and
xor
and
sub
adc
mov
cmp
xchg
xor
in
or
mov
test
or
fisttpll
popa
loop
mov
inc
rcrb
lock
iret
lcall
jge
cmc
fdivs
test
xor
cmp
and
aad
das
ror
add
loope
ret
sub
mov
repnz
cli
mov
fidivl
sub
push
dec
test
and
or
addl
inc
add
shrl
push
mov
ror
pusha
and
pusha
jbe
dec
pop
push
sub
adc
cmp
fmuls
cmp
push
xchg
push
subb
or
pop
sbb
aad
mov
or
aaa
lret
jno
mov
adc
and
data16
sub
cmp
out
movsl
adcb
data16
pop
sbb
lods
fwait
jno
fnsave
testb
int
and
add
and
in
pop
adc
ja
or
test
inc
jb
mov
in
sub
jbe
out
inc
sbb
sub
nop
xor
fisubl
shlb
jnp
push
jbe
test
js
insl
lahf
shll
add
out
pop
movsl
lret
arpl
sbb
push
daa
or
loope
jbe
into
adc
sbb
xchg
lods
out
push
xchg
insl
test
mov
hlt
and
bound
jmp
daa
lds
pop
and
test
cltd
sbb
dec
dec
pop
pusha
push
cmp
push
rorl
xchg
push
push
adc
or
sahf
push
cmp
aas
imul
mov
fisttpl
cmpsl
clc
das
cmp
pop
add
cwtl
cmpsl
mov
jle
jge
inc
and
aad
aad
shrl
push
sub
and
sbb
dec
lds
imul
das
cmp
sbb
pop
dec
push
mov
adc
sub
lcall
dec
lods
mov
xchg
popa
pop
mov
fsubrp
cmp
pop
lret
xor
mull
xor
imull
loop
cmpsb
mov
jae
mov
push
pop
pushl
cmpsb
dec
jg
dec
out
sbb
subl
and
sarl
mov
sub
pop
shr
filds
xchg
fsubrl
xchg
popl
stos
jg
or
xchg
sub
std
adc
dec
into
inc
sarl
popf
shrl
sub
mov
lods
xor
inc
mov
adc
jo
dec
pop
xchg
ljmp
das
push
outsb
xor
mov
data16
mov
cmp
ljmp
rcrb
push
lock
fbld
adc
shlb
push
xor
in
test
rol
cld
cmp
aaa
jo
dec
or
and
and
cwtl
or
rol
loopne
cs
xchg
pop
xor
jge
in
aas
ds
mov
push
iret
xor
repz
lds
out
fwait
in
adcl
inc
sbb
inc
faddp
pop
mov
scas
sbb
data16
jns
xlat
mov
pop
push
in
cmpb
push
sub
mov
fdivrl
jg
and
inc
pop
mov
pop
add
cs
sub
mov
mov
push
jo
call
mov
and
ds
lods
scas
dec
in
enter
and
sub
fiaddl
or
int
ljmp
adc
mov
pop
add
movsb
mov
scas
xchg
testb
sbb
mov
lods
mov
stc
lock
sbb
and
xchg
mov
notb
inc
add
inc
cmp
in
sub
sub
jns
out
out
cmpsb
mov
shrb
aad
dec
mov
pop
sbb
push
fstpt
imul
add
mov
jne
testb
push
push
mov
rorl
ret
add
sub
lods
sub
xchg
sar
mov
icebp
test
add
into
push
movsl
mov
jbe
sub
sbbb
lods
push
add
jmp
in
lds
out
fidivrs
shr
repnz
add
leave
push
xchg
in
pop
fnstsw
les
icebp
in
out
adc
dec
jne
xchg
jg
js
popa
mov
hlt
rcrl
mov
sbb
inc
pop
push
rol
movsb
inc
hlt
pop
stos
lds
xchg
outsl
cmovne
jns
pop
rolb
push
arpl
bound
and
xlat
imul
mov
sbb
xlat
sub
xor
in
adc
int
mov
lock
imul
mov
fiaddl
push
or
lods
push
pusha
fninit
clc
mov
push
jle
add
dec
push
add
and
out
rorb
mov
stos
fs
subb
outsl
mov
xchg
cmp
push
lcall
jmp
xor
jge
not
mov
jmp
cld
xor
sbb
pop
mov
mov
mov
xor
test
xchg
dec
and
mov
pop
lods
add
aam
xchg
mov
add
push
test
mov
sbb
pop
call
xchg
and
pop
xor
fisubs
inc
inc
mov
adc
dec
stos
incb
nop
sbbl
les
movsb
cmp
loop
or
mov
sbb
add
div
movsb
dec
sahf
mov
ds
dec
sbb
push
mov
addb
inc
push
xchg
pop
shrl
cmp
dec
xlat
in
jne
sbb
push
mov
inc
xchg
in
xchg
cmp
pop
loop
insb
and
jo
xor
call
sub
pop
roll
cmc
cmpsb
jo
sarb
cmp
pop
sahf
and
scas
movsl
int
sahf
inc
xchg
pop
adcl
std
cwtl
ret
add
adc
lahf
mov
pop
into
dec
icebp
movsl
mov
std
out
inc
push
sub
idivb
and
push
mov
and
mov
jne
test
mov
lods
aas
ljmp
dec
adc
xlat
idivb
sub
fnstcw
call
cmp
sub
notl
pop
jns
xchg
clc
mov
mov
or
inc
dec
push
cmpsb
imul
add
and
out
loopnew
nop
out
lds
add
sbb
cmpb
push
testl
xchg
sbb
stos
sarb
sub
mov
je
pop
aaa
xchg
sbb
mov
mov
int
adc
and
and
inc
int
out
sbb
stc
pop
insb
jge
sub
mov
repnz
xchg
test
push
mov
xor
push
rcrb
ss
inc
imul
fs
das
int3
rclb
lods
push
subb
mov
or
push
loope
pop
xor
cmp
jle
mov
sub
fdivr
fistl
jne
xchg
jge
iret
movsl
sahf
xchg
jl
adcb
int3
push
jmp
sub
dec
add
icebp
sbbb
or
adc
pop
repz
inc
fisubs
jg
pop
call
stos
xlat
stos
repnz
jno
inc
mov
dec
cmc
and
adc
mov
dec
lret
lods
jle
cld
rorb
dec
push
inc
xor
mov
stos
sub
inc
imull
xchg
call
pmaxub
sarl
aam
mov
mov
add
test
hlt
lea
mov
mov
and
pop
in
movsb
jecxz
push
sub
mov
push
xchg
cld
jno
push
cwtl
dec
cmp
xor
cmp
stc
push
dec
xchg
sub
sarb
xor
jbe
jl
ljmp
mov
push
imul
inc
lret
in
mull
xchg
movb
add
cmpsl
pop
xor
aam
and
insl
in
jge
divb
adc
mov
scas
pop
fwait
out
leave
mov
adcb
sbb
fstpl
icebp
fmull
rcl
insb
mov
repz
addr16
pop
je
push
lcall
testl
popa
jne
sbb
fwait
insl
dec
jo
loopne
or
ljmpw
and
lahf
sub
test
lock
adc
mov
push
pop
pop
pop
call
mov
mov
push
cmp
imul
and
xchg
xchg
or
push
vpmulhw
notb
loope
xchg
fildll
hlt
stos
lods
or
fiaddl
jl
outsl
mov
or
hlt
out
sbb
sbb
mov
cmp
stc
aad
sbb
lcall
jle
cwtl
shlb
insb
or
ficompl
mov
inc
cli
pop
mov
shrb
adc
stos
sahf
or
mov
fmuls
movsb
pop
pop
mov
lahf
sbb
shr
or
xchg
jmp
xchg
fs
jae
lret
xchg
cmpsb
adc
jle
cmp
push
mov
lods
adc
stos
fists
out
mov
das
je
push
mov
dec
dec
lcall
imul
nop
jmp
lret
dec
lcall
sub
repz
add
lcall
scas
sbb
js
cmp
cmc
mov
and
insl
xor
inc
push
inc
ljmp
repnz
xchg
xor
push
sbb
dec
inc
in
mov
push
push
fmulp
mov
sbb
pusha
aad
lret
jmp
or
mov
dec
fdivrs
dec
aad
mov
rclb
push
xchg
xchg
add
lcall
jg
xchg
popf
or
imul
jmp
adc
jbe
push
jge
movsl
mov
out
push
inc
jmp
sbb
mov
push
add
shll
push
stc
or
cwtl
and
and
pushf
add
cmp
popl
in
push
mov
lea
movb
ret
test
jle
mov
in
xlat
je
xchg
orb
lahf
mov
sbb
or
mov
pop
push
xor
ljmp
mov
cmp
aas
insl
or
dec
jb
cmpsb
popa
std
cmp
and
faddl
call
adcl
sbb
icebp
in
arpl
cld
adc
cli
dec
mov
in
bound
aas
fucomip
push
sti
sbb
outsl
lret
jle
imul
cmp
mov
mov
or
mov
xchg
hlt
mov
test
sub
jo
imul
test
icebp
out
lret
xchg
leave
and
sub
mov
out
test
mov
sbb
ds
aaa
lret
push
fwait
imul
inc
sbb
jp
ret
and
mov
xchg
sub
fidivl
mov
dec
js
push
outsl
pop
imul
cmp
ret
mov
jp
push
fwait
outsl
mov
xorps
aam
jmp
cld
shrl
cmpsl
or
int
pop
xor
dec
ja
xchg
in
insl
pusha
fldenv
in
sub
or
mov
pop
ret
rcrb
dec
push
pushfw
cmpsb
sbb
mov
aam
mov
pop
into
dec
pop
lds
cmp
mov
mov
imul
out
sbb
xchg
adc
shrl
icebp
js
cmpsl
add
inc
push
addr16
xchg
jbe
dec
mov
in
lret
aas
in
negb
dec
in
mov
mov
mov
pop
or
daa
fwait
xchg
mov
imul
push
adc
sub
in
aam
add
clc
notl
iret
in
aad
int3
xchg
mov
sbb
cltd
push
out
repz
test
int3
mov
dec
out
int3
repz
mov
and
repz
xor
mov
xlat
adc
jbe
sbb
sarl
scas
les
icebp
xchg
cmp
pop
jo
add
xchg
js
mov
mov
or
movb
addl
shrb
setns
sbb
jmp
lds
xchg
imul
call
and
subb
jle
out
mov
dec
outsl
js
and
fmull
outsl
inc
outsl
xchg
dec
loope
mov
add
sub
mov
push
or
fildll
insl
inc
test
mov
repnz
mov
pop
dec
cmpsb
je
xlat
adc
rorb
ja
lods
mov
jge
out
lret
je
cmp
cli
lods
push
int
adc
adc
arpl
jmp
jbe
pop
dec
mov
inc
loopne
mov
pop
test
aad
mov
outsl
mov
or
out
sti
sbb
add
sub
add
fmulp
cmp
repz
fbld
pop
xchg
mul
std
xchg
push
xchg
fcmovnb
mov
xor
push
mov
pop
ljmp
repnz
divb
in
mov
das
insl
push
imul
shlb
jnp
hlt
sub
sub
pop
add
mov
dec
push
pop
xchg
push
int
mov
fwait
push
test
insl
pop
xor
xchg
shl
pop
addr16
lret
pop
sti
arpl
jge
adc
add
inc
rolb
or
pop
popa
test
pusha
jecxz
xor
inc
pop
sbb
lcall
mov
ja
ftst
mov
jle
icebp
and
lret
push
push
mov
mov
das
or
pop
mov
popa
hlt
adc
repz
mov
je
mov
sahf
lcall
shrl
int
fs
cld
gs
daa
inc
sbb
ds
and
push
insb
icebp
sub
mov
adc
leave
jbe
jge
pop
mov
movsb
fwait
push
sub
insb
outsl
mov
es
stc
mov
pop
test
sub
xor
mov
xor
aaa
stos
or
cs
xor
or
jbe
out
and
and
mov
adc
imul
ljmp
popa
or
mov
and
out
pop
adc
mov
aas
dec
push
fwait
add
pop
adc
rep
dec
lcall
sub
lret
cmp
xchg
inc
lods
lea
mov
and
subb
dec
mov
inc
insb
shlb
mov
pop
xchg
pop
add
idivl
sahf
sahf
jae
push
xor
add
fnstcw
sbb
lods
popf
sbb
mull
jne
mov
add
cli
xor
mov
pop
lahf
xchg
xchg
arpl
adc
sub
aaa
insb
outsb
mov
mov
sbb
cvtdq2ps
js
sahf
jnp
jb
cmpsb
icebp
incl
jmp
push
fwait
or
aas
sbb
sbb
call
out
sti
insl
push
xchg
mov
sahf
lods
out
xchg
add
xor
out
pop
xor
or
test
dec
xchg
add
fucomi
or
in
les
mov
jae
ljmp
seta
clc
sahf
daa
stos
push
mov
pop
out
cmp
lahf
pop
in
xchg
mov
mov
jno
lods
repz
int3
push
push
mov
sbb
in
fcomps
out
out
cmp
sbb
cmp
hlt
bound
daa
test
cld
inc
pop
xchg
mov
adc
outsl
adc
and
daa
fildl
inc
lods
cmpsl
call
lahf
jnp
lods
test
sub
push
lcall
inc
jno
int
scas
mov
pop
iret
jl
mov
clc
flds
mov
inc
mov
ror
shlb
pop
push
or
and
xchg
lcall
adc
xor
icebp
mov
sti
stc
ret
andl
es
in
sub
adc
mov
pop
jmp
pop
fwait
mov
or
sbb
lods
mov
lds
xor
fisttpll
fisubl
inc
mov
push
cmc
dec
mov
jno
adc
push
dec
orps
pop
mov
rorb
sub
jmp
call
loope
sub
cs
xor
mov
fists
push
push
jl
adc
repz
jae
sub
stos
inc
push
dec
mov
mov
adc
dec
cmp
jl
dec
inc
xchg
cwtl
shr
mov
xchg
jecxz
jmp
rorl
add
gs
ret
sbb
subb
add
sub
test
icebp
pop
andb
inc
out
or
ljmp
cld
cli
push
and
out
je
mov
fcoms
rolb
test
push
pop
add
aas
adc
xchg
sbb
add
adc
loop
stc
fisubrl
rcl
push
sti
xchg
and
push
pop
mov
inc
imul
sbb
add
in
xor
jb
rorb
cld
lods
sbbl
or
mov
jnp
xchg
push
jp
inc
mov
sub
dec
in
idivb
sub
stc
mov
xor
ss
mov
movsb
cltd
pusha
dec
cltd
xchg
shll
stos
int
jecxz
lock
ftst
sbb
and
loop
iret
push
mov
pop
icebp
sbb
repnz
cmpsl
aas
leave
mov
pop
lret
loop
sbb
mov
cmpsl
int3
ja
jp
ja
xor
dec
jl
loopne
xchg
repz
lods
jo
mov
insb
subl
jo
dec
sub
sbb
mov
ret
and
dec
sbb
xchg
jae
xor
inc
jb
mov
pusha
jmp
jecxz
aas
mov
push
dec
imul
stos
jo
fwait
xchg
loope
dec
outsb
dec
ljmp
add
jnp
sti
push
mov
lea
dec
jg
int
lret
jg
gs
xlat
add
mov
mov
lods
mov
js
adc
lods
push
jecxz
hlt
out
cmp
out
icebp
lods
insl
cmp
mov
cmc
pushf
lret
sub
in
mov
cmpsl
clc
cld
data16
iret
loopne
data16
mov
pop
pop
pop
mov
mov
ss
fimuls
sarl
push
sbbb
fisttpl
idivl
cmpsb
sub
pusha
xor
mov
pushf
dec
lcall
pop
cmpsb
dec
xor
das
xor
call
mov
cld
mov
loopne
insl
pop
jmp
iret
std
jno
cwtl
dec
call
popa
mov
int
out
and
clc
pop
push
cmp
arpl
imul
or
mov
xchg
shr
ja
ret
push
cmc
jb
test
lahf
lock
pop
and
push
cmp
bound
adc
mov
mov
popf
dec
fcoms
movsl
popa
cwtl
outsl
xor
mov
sub
and
jne
mov
test
lds
mov
in
lcall
scas
int3
cmpsb
sahf
scas
push
aam
adc
mov
es
or
sub
pushf
cmpsb
cmp
mov
pop
or
xor
mov
mov
imul
clc
push
jmp
mov
pusha
clc
push
pop
dec
xchg
sub
mov
lods
push
jg
sbb
dec
bnd
insb
mov
lret
mov
ja
lret
leave
dec
mov
push
dec
dec
pop
js
sub
fdivs
xorb
lods
jl
insl
inc
mov
mov
adc
xchg
pop
and
pop
mov
leave
out
imull
xor
int3
lcall
les
inc
testl
fwait
aam
mov
mov
aad
mov
add
loope
lods
xchg
xor
lahf
sbb
sub
outsl
push
mov
aam
pop
or
cmp
frstor
adc
aas
or
cmpl
push
push
xor
cld
or
movsl
stc
adc
push
mov
xor
jmp
repnz
movsl
popa
xor
adc
pop
leave
sti
fcompl
movsl
ss
jg
cs
adc
and
leave
jg
mov
mov
xor
add
adc
xor
imul
iret
popf
sbbb
dec
add
jno
out
jo
inc
and
pop
push
mov
mov
adc
dec
cli
push
imul
xchg
shlb
inc
mov
and
adc
dec
sbb
cmpsl
cmp
aaa
push
xor
sahf
xchg
mov
xchg
jno
sbb
mov
and
int3
idiv
mov
mov
bound
push
decl
inc
loopne
sbbb
mov
test
pushf
cmpsl
jle
arpl
sub
test
cmp
adc
cld
dec
sbb
test
add
jecxz
cmp
pop
push
test
pop
test
inc
aas
cmp
clc
pop
insb
xor
std
mov
dec
les
jl
icebp
fidivrl
mov
jge
jo
jmp
test
adc
mov
incl
fsts
rorb
push
pop
xchg
pop
cld
jb
mov
out
sub
popa
call
and
cltd
push
mov
or
cld
jg
jo
popf
sbb
adc
sub
mov
mov
inc
outsb
sub
sbb
movsb
inc
push
pop
jno
xor
mov
loope
xor
roll
dec
add
nop
mov
cs
push
test
stc
and
pop
mov
mov
push
push
and
mov
fnsave
ja
or
mov
pop
pushf
sbb
mov
aaa
xchg
movsl
adc
push
jle
fs
inc
andb
fwait
scas
mov
orb
dec
icebp
xchg
pop
insl
adc
adc
xchg
add
lods
test
pop
adc
xor
iret
inc
and
fldenv
inc
sbb
jbe
popf
push
sysenter
nop
xor
jle
xor
or
insl
das
push
je
mov
cmp
cmp
add
gs
sub
add
push
scas
and
mov
jp
cmp
aam
frstor
dec
jle
test
lods
adc
ss
cmp
outsl
push
mov
jae
adc
xor
and
or
pop
xor
leave
pushf
xor
and
xor
outsb
mov
mov
jmp
in
ffreep
xor
scas
adc
nop
cmp
pop
add
jns
sbb
mov
dec
dec
in
std
xchg
clc
xchg
scas
push
xor
incl
lahf
mov
gs
jnp
mov
imul
or
mov
loopne
mov
jne
push
pop
in
cmp
out
imul
pop
pop
aaa
jmp
mov
jecxz
repnz
xor
les
push
mov
mov
add
add
aad
push
std
push
xchg
cmpsb
jp
pop
cld
sub
ds
pop
or
or
mov
das
jle
icebp
scas
adc
dec
jge
in
sub
aaa
cwtl
andb
mov
xchg
lods
out
dec
cmp
push
mov
jnp
mov
fbstp
into
in
jp
mov
es
out
mov
imul
ret
js
push
jae
pop
insb
cwtl
fwait
mov
cmp
sub
jmp
adc
popf
sub
push
mov
jo
loope
shr
cltd
ja
add
inc
cmp
into
cltd
pop
jno
les
add
shrb
sbb
rcll
cmp
and
add
xchg
and
fldenv
cmpsb
lcall
sub
aad
test
or
jge
adc
push
push
nop
sub
addr16
sub
lahf
push
hlt
cltd
lret
jne
dec
movsb
pop
gs
sti
mov
pop
lret
les
push
ds
out
cmp
sub
sub
mov
mov
cmc
mov
test
and
fisubrl
cmpsl
rcll
and
mov
cmp
mov
add
sub
jne
inc
xor
mov
jg
icebp
inc
or
es
cmpsb
mov
lcall
xchg
arpl
mov
jb
arpl
sti
lods
cmp
add
mov
inc
cltd
pusha
dec
xchg
les
outsl
arpl
fwait
mov
push
and
insb
mov
pop
xor
ret
mov
cmp
mov
mov
gs
jnp
sub
or
dec
push
xchg
shl
insb
lock
xchg
mov
rcrl
outsl
push
scas
and
mov
and
mov
mov
daa
les
or
jl
xchg
fidivrl
sub
cmp
hlt
notl
push
imul
rcr
dec
jecxz
fwait
sbb
scas
test
sbb
fwait
in
and
pop
inc
and
ss
repz
adc
stc
ja
daa
lahf
sub
popf
aam
jecxz
icebp
dec
test
lahf
xchg
or
sub
int
sbb
mov
repz
cmp
xchg
popf
rcll
jne
sbb
sbb
fs
adc
sub
mov
fiaddl
inc
xchg
into
enter
in
out
inc
mov
sub
inc
push
and
jns
xchg
imul
andl
out
inc
and
pop
xchg
outsb
std
or
jbe
xchg
leave
mov
into
scas
iret
jle
fsubrs
ret
mov
sub
mov
scas
in
es
icebp
in
push
sbb
popf
dec
imul
mov
outsl
jge
add
ljmp
xor
dec
mov
in
inc
jmp
sbb
decb
lods
leave
and
sbb
notb
xor
pushw
xchg
daa
xchg
into
aas
es
xchg
in
jb
fsts
xor
adc
dec
jmp
hlt
and
pusha
data16
xor
fsts
pop
mov
adc
clc
push
lret
cmp
in
jecxz
pop
mov
sahf
subb
push
clc
shrl
nop
jo
push
in
xor
or
pop
test
push
test
fwait
outsb
pop
jb
sahf
cmpsb
pop
xor
insb
dec
mov
aaa
add
sbb
xchg
add
mov
adc
mov
mov
int
mov
or
mov
xchg
cmp
je
je
shll
lret
pushf
mov
mov
xlat
add
sbb
xchg
jl
or
push
adcb
cmp
mov
test
jae
iret
cltd
js
dec
pop
movsb
pop
inc
adc
cmp
cmp
pusha
mov
mov
pop
stc
xchg
jbe
xorb
push
sub
dec
dec
xor
xchg
lods
enter
push
ficompl
sub
jne
insb
pop
das
mov
in
push
sub
loop,pn
sub
pop
add
sbb
adc
xchg
sbb
add
insb
or
hlt
ja
cmp
sarl
or
adcb
or
dec
jl
outsl
push
jno
inc
xchg
sbb
pop
push
sti
mov
adc
fisttpl
pop
ds
out
mov
repnz
loopne
add
shrb
dec
std
shll
push
imul
xchg
sub
xchg
pop
pop
adc
xor
dec
jle
scas
add
jmp
xor
jg
adcl
bound
xchg
xor
add
das
add
inc
test
addr16
fildll
cmc
sbb
stos
inc
enter
and
add
adc
loopne
popf
std
lods
aam
popa
and
rcll
push
sarb
sbb
xchg
push
lcall
mov
jae
mov
or
lcall
add
es
cld
sahf
jbe
dec
pop
rcr
lods
out
data16
mov
fcoml
negl
and
popf
and
add
mov
push
cmc
popa
addr16
pop
mov
push
mov
inc
cmp
jg
ret
fildl
arpl
mov
cs
xchg
jl
dec
or
mov
popf
mov
mov
cmp
dec
xchg
add
jmp
or
fs
sub
sbb
les
int3
sub
adc
xchg
and
sbb
mulb
aaa
in
mov
add
aas
adcb
sbb
inc
push
mov
popf
xor
inc
scas
adc
sub
mov
dec
popa
lcall
dec
stos
lock
sbb
sub
into
bound
cwtl
mov
jp
ja
leave
leave
repnz
dec
shlb
movsl
call
arpl
inc
jnp
call
stos
mov
gs
add
inc
insb
xchg
mov
xchg
int
sub
cmp
fidivrs
push
dec
adc
xchg
sub
fisttps
pop
or
ficoml
roll
dec
out
icebp
mov
lock
cmc
in
dec
out
push
mov
aaa
sarl
adc
mov
xor
mov
jo
test
test
mov
inc
rorb
fidivl
xchg
xchg
test
div
cltd
scas
stos
test
sub
leave
xchg
mov
subl
xchg
leave
sbbb
adc
enter
in
pop
push
cli
adcb
enter
fprem1
mov
sub
sbb
dec
insl
scas
out
cmp
mov
and
push
shl
mov
in
cs
or
stc
out
jbe
out
cmp
dec
and
or
xchg
jo
lds
dec
lds
sub
add
pop
and
subb
dec
sbb
xchg
fdivl
je
sbb
xchg
dec
dec
lret
dec
or
inc
mov
iret
repz
mov
cltd
xor
sub
filds
out
pop
lret
cmp
mov
jae
sub
leave
out
or
inc
lret
jg
cmp
enter
push
fdivrl
jne
ret
outsb
jo
sahf
mov
je
scas
outsl
clc
pop
pop
mov
and
loopne
shll
xor
inc
adc
mov
shlb
and
insl
cmpsb
test
or
xchg
fwait
push
lret
xor
xor
cmp
out
int
inc
xor
jge
mov
arpl
jno
orb
pop
or
stc
jns
jmp
les
ss
push
pop
dec
inc
cmp
dec
push
enter
pop
and
push
dec
loopne
xchg
or
xchg
xor
orb
lods
mov
test
dec
aaa
jmp
aam
xchg
xor
cmp
push
jb
jg
test
pop
xchg
dec
loopne
fcompl
pop
xor
hlt
push
and
in
mov
jecxz
cmp
mov
dec
imul
add
push
fistpl
xor
mov
int
pop
insl
cltd
hlt
or
mov
icebp
fsts
mov
ret
jb
rol
in
enter
mov
cmp
adc
and
jno
xchg
jecxz
clc
xlat
push
das
mov
ret
jnp
shr
inc
pop
xor
hlt
mov
jb
sub
jbe
repnz
js
or
inc
xor
push
pop
dec
cmovne
dec
cmp
shll
push
pop
sbb
in
mov
enter
rorl
and
push
jge
stos
lret
dec
jle
add
out
verw
adc
inc
addb
mov
push
push
add
sahf
cmp
adc
mov
push
cmc
add
decb
stos
cmp
cltd
andb
jge
pop
xchg
xchg
stos
adc
ret
imul
loopne
push
push
xchg
leavew
les
push
mul
and
pop
das
push
dec
push
popa
sbb
leave
lods
movsl
test
idivb
cmp
cmp
data16
adc
int
cli
sbb
arpl
cmpl
sub
insl
push
cmc
sbb
lret
push
nop
jae
ljmp
imul
ret
pop
jb
cwtl
or
popf
xchg
jl
and
pop
adc
dec
repz
outsl
movsl
cwtl
es
mov
mov
mov
stos
cmpxchg
mov
pop
sub
xchg
pop
out
push
in
outsl
fists
dec
jp
push
js
rolb
dec
cmp
inc
cwtl
iret
push
out
jmp
mov
mov
out
mov
inc
inc
out
jl
pop
repnz
inc
or
push
pop
iret
xlat
dec
dec
sbb
cld
add
test
rcll
mov
rcrb
cld
pushl
es
bswap
mov
cltd
lret
aas
mov
adc
xor
xor
arpl
xchg
sar
sbb
xchg
mov
mov
out
inc
dec
insl
adc
xor
movsb
xor
dec
sub
ja
aas
cmpsb
test
test
cmp
sarb
roll
mov
cmp
mov
insl
jecxz
dec
inc
data16
lret
add
pop
sub
and
adc
add
xor
or
lret
push
aaa
inc
adc
jne
dec
mov
sbb
adc
int3
lock
push
sbb
roll
ss
ja
mov
jnp
fisubrs
xor
fs
sbb
push
lea
incb
push
mov
mov
movsl
xchg
pop
mov
push
scas
out
pushf
cmpsl
adc
xor
push
cmp
and
into
out
das
mov
repz
and
test
lock
mov
mov
xchg
into
and
movsb
dec
ja
pop
cmp
sub
xchg
jl
mov
lcall
fiaddl
mov
dec
pushf
or
pop
out
sti
loope
mov
dec
outsl
jge
push
mov
daa
test
jmp
nop
popl
out
add
lret
popf
and
ja
xchg
lods
mov
mov
push
movsl
mov
js
shrl
lcall
and
fcompl
test
cmp
mov
dec
imul
in
and
mov
aad
or
inc
cmp
pusha
iret
insl
gs
fxch
dec
leave
sahf
adc
rolb
mov
push
jg
arpl
xor
push
push
inc
mov
pop
mov
sub
ja
xchg
pop
sahf
xchg
xchg
xchg
inc
stos
pop
cmpsl
in
xor
push
mov
and
fs
out
fldcw
xor
sub
xchg
push
test
test
pop
mov
jb
call
adc
lret
cmp
xchg
mov
pop
mov
std
fmull
aad
mov
lods
stc
rorb
jmp
mov
fimuls
mov
sti
sub
in
jecxz
pushf
jnp
pop
arpl
in
jnp
repnz
enter
inc
jle
mov
stos
stc
mov
or
popa
jb
icebp
jnp
idivb
lret
int
imul
pop
ret
inc
xchg
cmp
xor
repz
ja
xchg
jecxz
pop
inc
andb
add
fisttpl
bound
fsubrl
fwait
push
cmpsl
mov
insb
add
jmp
mov
lock
imul
imul
test
outsl
int3
jl
mov
mov
jns
jae
inc
mov
adc
fwait
pop
sbb
mov
push
mov
mov
movsb
add
fs
aaa
jmp
pop
inc
sbb
repz
pop
lock
cld
mov
sub
cmpsb
mov
cmp
push
jb
mov
and
inc
jecxz
int
sub
adc
insb
outsb
push
push
das
push
pop
movsb
sub
outsb
ret
mov
pushf
push
push
arpl
daa
jecxz
mov
loope
add
push
fwait
lea
cmp
dec
and
inc
enter
cltd
push
jl
and
out
std
xor
bound
out
dec
mov
mov
sub
cmpxchg
fwait
movsb
mov
xchg
repz
hlt
jbe
jb
sub
aad
dec
cld
add
or
std
out
lcall
pop
mov
stc
pop
outsl
mov
jnp
subb
add
xchg
xchg
loope
pop
clc
aas
xchg
mov
xchg
lods
popa
loop
sbb
pop
aad
pop
jecxz
pop
adc
repnz
dec
mov
std
leave
out
push
push
mov
fistpl
pop
dec
test
and
ret
xor
cmp
push
lcall
and
sub
xor
jge
xchg
dec
xor
rcr
xor
jne
insl
movsb
mov
lahf
movsl
lret
mov
dec
loope
jecxz
imul
repz
xor
push
jg
sub
jmp
movsb
hlt
xchg
fmull
add
pop
add
adc
mov
pop
cmpb
mov
std
dec
jns
and
movsb
stc
inc
outsb
enter
loop
daa
cmpb
in
add
int3
inc
rcr
outsb
arpl
popf
aas
adc
dec
clc
sbb
lret
push
ss
mov
int3
in
test
mov
jo
out
and
jns
sti
xchg
adc
data16
dec
xorl
adc
ljmp
dec
fdivl
iret
arpl
inc
into
push
xchg
cmpsb
mov
ret
cmp
lds
andb
mov
enter
mov
pop
aad
mov
mov
fs
test
cmpsb
push
scas
xor
push
dec
cld
pop
loop
sbb
iret
push
inc
add
int
adc
inc
cld
pop
jnp
out
dec
std
jne
fsubr
or
push
inc
dec
mov
push
adc
sub
mov
sbb
es
mov
push
push
push
jo
pop
push
and
pop
sbb
out
test
aaa
jg
lret
pop
or
push
and
loopne
inc
add
mov
xchg
idivb
iret
cs
pop
pop
jge
inc
push
subl
cltd
dec
out
lret
mov
mov
xchg
mov
nop
jbe
add
popa
jl
lret
enter
fs
lds
repnz
mov
push
ljmp
push
cmovle
adc
pop
pop
xchg
add
mov
repnz
testl
and
mov
jno
scas
push
out
jp
xchg
mov
lds
mov
or
mov
mov
sbb
rcll
mov
push
mov
mov
xadd
sarl
xor
aaa
idivb
fwait
fwait
adc
cmp
adc
and
ja
sub
pop
insb
xchg
jge
nop
test
popf
xchg
adc
popf
gs
xor
cmp
sub
push
mov
xor
cmc
iret
stc
fisubs
pushw
add
add
dec
inc
insb
cmp
imul
mov
sbb
inc
xchg
ficompl
repnz
xor
and
and
dec
sbb
cmp
pop
clc
stos
inc
xlat
imul
bsf
aaa
and
ss
pop
mov
arpl
out
int
into
pop
lock
fmull
jnp
fsts
xchg
pop
sub
and
lds
in
movsl
insl
and
mov
jl
pop
dec
inc
les
pop
push
pushf
xchg
dec
jecxz
pop
inc
insl
sahf
push
push
xlat
cs
push
loope
mov
mov
jbe
das
mov
jae
or
jae
dec
data16
gs
into
cld
ja
lret
inc
pop
sbb
sahf
insl
jno
into
push
test
pop
lret
imul
ds
sbb
fidivrs
xchg
fucom
push
lret
mov
mov
mov
insb
cmc
cmp
inc
cld
dec
jnp
in
test
lds
idivb
popa
xor
mov
mov
inc
pop
pop
lahf
adc
and
jle
inc
xor
jp
push
push
push
scas
cli
in
pop
or
fsubrs
jg
mov
pop
jecxz
mov
xchg
sub
insl
outsl
dec
or
out
mov
and
ficoms
mov
jnp
mov
cmove
pop
call
xchg
add
fisubrs
cmp
inc
mov
or
cmp
push
insl
mov
pop
add
mov
aas
sub
jb
clc
mov
cs
and
sub
rolb
add
adc
out
shrb
mov
mov
movsb
sbb
jo
jmp
mov
pop
fadds
sti
sahf
cwtl
sbb
test
jmp
cmpsb
in
add
or
das
mov
sub
inc
cmp
imul
inc
jp
adc
mov
mov
push
jge
jno
sbb
leave
mov
jne
cli
adc
fldl2e
jp
adc
pop
push
lret
popa
jns
iret
jg
jo
adc
repz
lods
push
or
pop
test
xor
cmp
mov
lock
test
test
xchg
mov
int3
xor
pop
arpl
es
and
push
jmp
daa
dec
repz
sbb
cmp
xor
push
ret
cld
aaa
fsts
pop
push
lds
loopne
pop
jmp
push
insb
push
lds
sbb
push
and
mov
pop
sbb
popa
xchg
inc
pop
sub
ss
or
hlt
sti
dec
ss
push
test
loopne
clc
push
push
xor
xchg
push
adc
xor
push
push
jg
lret
int
xchg
and
sbb
or
hlt
mov
dec
rorb
mov
ja
push
and
das
loop
call
in
pop
in
and
stos
in
sub
jno
sbb
mov
loop
insb
test
mov
into
mov
loopne
pop
inc
and
inc
addr16
pop
add
cmp
lret
push
sti
add
ret
xchg
sub
call
pushf
loopne
addr16
mov
mov
cmp
pop
push
in
xor
mov
aad
mov
ja
popa
mov
cld
into
test
rcrl
test
dec
stos
or
cmp
ret
scas
gs
orl
testb
pop
adc
lods
inc
stos
mov
aaa
mov
adc
cmpsl
lcall
and
xchg
adcb
jp
mov
repz
dec
xchg
fstl
clc
xor
mov
ficomps
inc
popl
add
sub
add
mov
test
xor
push
mov
add
adc
xor
mov
add
lea
in
inc
out
lock
or
cmpsl
or
inc
fsubs
xor
and
nop
test
adc
ss
mov
pop
push
or
cltd
enter
scas
fisubrs
adc
mov
pop
rol
cmpsl
aaa
cmpsl
fyl2xp1
sub
leave
iret
insl
int
pop
mov
xchg
jle
push
leave
fiaddl
mov
jecxz
loopne
sahf
and
popa
sbb
cmovns
xor
sub
sbb
cmpsb
inc
or
cmp
mov
push
lds
mov
push
outsb
or
xor
mov
insb
xchg
jne
test
lahf
dec
adc
sub
push
add
xchg
shrl
sbb
jns
aas
loop
aas
fwait
mov
sub
outsl
data16
repnz
sbb
call
orb
xor
mov
mov
movsl
dec
cltd
and
insl
lock
adc
in
jp
stc
and
push
mov
dec
push
shlb
mov
in
pop
pop
inc
iret
inc
add
push
mov
adc
sub
sub
inc
mov
jo
lods
fildll
jbe
lret
xchg
inc
pushf
lods
pop
mov
mov
sbb
pop
and
aas
add
adc
xchg
mov
pop
lret
gs
cmp
test
jnp
in
lods
mov
sarb
mov
jno
jnp
mov
mov
rcll
jns
dec
stc
jns
lods
jno
loope
fs
fisubrl
outsl
outsb
mov
mov
out
mov
outsb
lock
stos
jo
mov
stc
cli
ja
imulb
es
jmp
bound
incb
scas
ret
sub
pop
cmp
cltd
mov
je
xor
inc
jecxz
add
mov
icebp
adc
push
out
xor
mov
mov
inc
xor
lahf
shr
das
std
lcall
pop
mov
rclb
mov
ss
in
jmp
dec
lods
mov
in
sbb
pop
cmp
add
scas
adc
add
pop
jo
jl
lock
inc
ret
sbb
ds
sahf
addb
xor
inc
fnstcw
jge
fs
stos
cmp
lods
loopne
push
sub
mov
xor
or
test
mov
fdivr
xor
pop
sarl
xchg
sub
mov
enter
insb
sti
add
mov
movsl
shlb
add
pop
out
clc
xchg
scas
in
jnp
sub
scas
or
adc
jne
xor
mov
sbb
push
ss
notl
in
push
neg
jne
jmp
xchg
sbb
jnp
inc
rcll
and
jmp
sub
add
cmpl
add
pop
insb
es
pushw
mov
repnz
fcomip
jbe
sub
mov
mov
push
xor
cmpsb
fldl
nop
sbb
js
insb
sti
stos
xchg
mov
insb
movsb
stos
xlat
movb
xor
stos
mov
and
fbstp
push
sbb
sub
icebp
das
cmp
insb
ret
sbb
or
repnz
mov
nop
out
pop
rclb
pop
mull
jo
roll
adc
and
mov
pop
cmp
pop
inc
pop
clc
int3
push
cltd
push
sbb
xchg
mov
jne
pushf
xchg
cwtl
bnd
pop
icebp
pop
add
popa
arpl
add
shr
xchg
add
add
dec
push
push
sarl
data16
aad
in
inc
call
mov
les
dec
inc
dec
sbb
cmpsl
mov
mov
dec
ror
test
stos
dec
or
xchg
push
jnp
inc
stos
std
jg
jns
or
ljmp
push
pop
clc
daa
cwtl
xchg
pop
arpl
leave
inc
insb
arpl
sbb
inc
pop
dec
sub
sbb
dec
xchg
pushf
xchg
stos
or
mov
jnp
in
add
and
xor
in
movsl
xchg
cmp
and
jae
orl
imul
pop
push
or
stos
fs
shll
mov
popa
adc
and
jle
push
movsb
cmp
fsts
int3
into
xor
out
clc
push
xchg
dec
lods
jbe
push
cltd
cs
out
fcompl
add
into
scas
das
xor
push
lock
jne
mov
push
push
addr16
jne
xchg
inc
add
sarb
inc
arpl
movsb
rolb
pop
movsb
push
mov
rsm
dec
xchg
push
adc
xchg
xor
mov
xchg
iret
rcr
push
ja
cmp
mov
xchg
push
mov
out
fldenv
testb
outsb
pop
out
mov
pusha
leave
mov
hlt
mov
push
sti
lock
int
jo
test
or
push
fdivrl
or
aad
mov
xor
dec
sbb
dec
lret
jge
sub
pop
movsb
mov
addr16
out
xchg
arpl
rsqrtps
mov
pusha
jb
pop
lret
dec
xor
aad
push
push
mov
bound
jne
xchg
sbb
lret
dec
mov
lock
xorl
or
or
lock
ss
gs
sarb
mov
sub
insb
popf
insl
mov
mov
in
aam
int3
xchg
aad
negb
in
test
andb
xor
stos
out
aad
loopne
mov
dec
or
rcl
sahf
mov
pop
push
push
add
xor
inc
mov
jl
inc
iret
or
push
mov
inc
xchg
jl
sahf
push
addl
add
loopne
pushf
add
cmp
into
xor
mov
icebp
call
xchg
add
xchg
fs
mov
and
mov
xlat
in
inc
inc
inc
fcmovb
mov
mov
jnp
dec
icebp
xchg
stos
dec
es
mov
adc
or
imul
sub
idivl
nop
cli
dec
jns
outsb
jno
outsb
jo
int
icebp
shl
rcl
add
aas
lahf
or
aaa
cmp
sub
mov
test
cld
sub
sahf
push
call
cmp
xchg
fisubs
jl
mov
movsb
mov
test
mov
dec
stos
cmpsl
movsl
add
xor
sub
loop
es
sbb
fdivl
mov
movsl
mov
enter
popf
push
mov
jbe,pn
push
jno
imul
mov
mov
out
cmp
cmp
fxch
adc
xor
mov
add
and
scas
inc
mov
js
adcb
ljmp
mov
jns
add
sbb
repz
and
pop
adc
push
sbb
les
jle
jbe
and
xor
fidivs
adcl
add
outsl
adc
add
pop
lds
mov
lea
aas
int3
jg
xchg
sahf
or
push
jp
sbb
push
movsl
mov
ljmp
sbb
mov
sbb
mov
jno
jae
push
add
scas
sti
sbb
dec
in
mov
and
or
loopne
cmpsl
sbb
pop
lods
rclb
mov
add
inc
test
push
mov
pop
adc
pop
dec
cld
xchg
fiaddl
mov
ss
int3
mov
stos
mov
enter
xor
aad
jle
out
ret
pop
push
mov
shll
dec
insl
cmp
pop
daa
fldenv
in
xchg
dec
pop
loope
in
or
movsl
sub
mov
inc
shrl
aaa
and
fwait
hlt
lods
cmp
movsl
shl
cmp
xchg
imul
mov
and
ret
mull
inc
add
js
sbb
dec
jmp
cli
mov
sarb
push
add
xchg
push
push
inc
fwait
mov
popa
dec
ss
addr16
inc
ljmp
xor
mov
jge
movl
push
cwtl
sub
pop
mov
sbb
inc
or
in
add
jne
movsb
sbb
ret
ds
adc
lahf
lcall
push
push
ljmp
fidivs
addr16
mov
sbb
hlt
out
jns
iret
cltd
xchg
jg
js
pop
cmp
insl
subb
enter
xor
hlt
and
xchg
and
xor
jb
sarb
in
cltd
test
lahf
jge
lods
add
sub
cmpsl
sti
xchg
aas
call
fwait
loop
jb
sbb
and
lret
arpl
jae
nop
adcl
shl
dec
pop
mov
or
jb
push
adc
lea
add
mov
mov
ljmp
adc
push
mov
dec
aas
sub
ss
stos
fs
inc
test
je
imul
pop
mov
rcrb
mov
push
sub
cmpsl
lret
fs
pop
jge
orps
inc
lret
pop
push
jle
dec
loope
es
cmc
jl
adc
mov
or
mov
mov
xor
sub
add
fsub
cmc
sbb
bound
add
ds
dec
jl
fwait
outsb
pop
out
push
out
loope
cmp
int
hlt
push
out
cmpsb
and
mov
stc
jbe
outsl
xor
sbb
pop
dec
sbb
das
cmp
lds
fld
dec
call
jno
sbb
aaa
inc
insb
add
sbb
cmpsb
mov
inc
aas
push
popf
pop
mov
dec
dec
pop
mov
push
and
loopne
fstl
fwait
fs
push
jo
pop
sub
popa
test
inc
jo
bound
cmp
fstl
es
sarb
stc
mov
sbb
int
mov
gs
xchg
adc
sbb
pop
scas
dec
pop
rcll
nop
mov
push
je
pop
fcoms
ljmp
inc
shrl
add
mov
cmp
pop
inc
imul
subb
sahf
cli
inc
out
insl
int
sbb
lret
mov
push
xchg
sub
cmpsl
movsb
jmp
dec
xor
xor
cli
gs
movaps
out
xchg
cmpb
daa
hlt
mov
insb
cmpsb
push
mov
xchg
add
ficomps
test
or
add
cmpl
inc
shll
dec
sbb
int
cmpsb
pop
pop
push
int3
dec
jge
lcall
rcll
addl
mov
mov
mov
mov
adc
mov
mov
nop
jno
loope
and
movb
mov
mov
mov
loopne
icebp
dec
imul
fimull
mov
jb
lods
out
jo
push
rclb
xchg
int3
out
mov
push
push
popa
fstps
and
sbb
xor
jecxz
shlb
push
mov
or
fadd
pushf
stc
dec
adc
or
mov
fidivs
dec
fdivrs
les
lcall
push
rcrl
lret
iret
push
or
paddsb
clc
lock
xchg
sbb
pop
mov
movsb
rolb
push
aas
ja
and
cltd
mov
mov
mov
roll
outsb
cmp
sbb
push
sub
pop
or
jnp
inc
call
sub
mov
fsubrl
outsb
shlb
arpl
in
push
push
adc
xor
int
cmp
add
out
xor
sahf
mov
xchg
push
lcall
jmp
fisubs
xchg
into
pop
adc
sbb
out
dec
or
imul
cltd
xchg
and
xchg
dec
mov
fsubl
sub
cmpsb
cld
mov
mov
cmp
pushf
div
filds
negl
out
repnz
movsl
out
clc
xor
xchg
in
sbb
mov
inc
pop
hlt
mov
xor
roll
add
pop
or
into
cmp
dec
inc
cmpsb
imul
xchg
andl
xchg
mov
jb
and
lret
mov
out
cmp
cld
xor
fisttpll
dec
lods
ud0
or
add
imul
xor
or
adc
and
cmp
repnz
lock
repz
ja
xor
xlat
push
adc
jo,pn
fnstenv
mov
outsl
icebp
mov
mov
call
jbe
or
shll
sbb
shrl
fidivs
push
pop
inc
int
add
jnp
mov
imulb
test
iret
into
test
push
icebp
dec
inc
jmp
insl
pushf
sbb
sbb
cmpsb
std
xor
mov
stos
inc
mov
inc
daa
int
lock
lret
imul
dec
std
gs
js
je
xchg
fldl
pop
mov
push
inc
add
inc
xchg
push
lods
fsubs
mov
in
aad
jecxz
ret
sarb
sub
or
adc
or
addr16
ja
cmp
ret
out
imulb
test
mov
add
daa
cmp
sub
bound
add
cmc
popf
push
ss
lods
aas
mov
cmp
mov
xchg
movsb
stos
mov
das
addr16
ja
xchg
sti
mov
bound
pushf
jmp
ffree
test
cltd
jb
clc
lods
sbbb
nop
mov
adc
push
faddl
adc
xlat
leave
subb
xchg
push
sbb
mov
jns
inc
dec
xchg
mov
dec
sub
lds
and
jno
ret
mov
arpl
jmp
popa
mov
jmp
shrb
push
pavgw
add
mov
cmpsl
sarb
sub
pop
sub
xor
scas
loop
cmp
pushf
loopne
jo
mov
lea
lret
mov
cmp
pop
mov
pop
sub
fwait
mov
adc
pusha
dec
and
aam
push
hlt
add
in
dec
subl
xor
in
imul
fdivl
cmp
jno
mov
or
jb
mov
ja
push
cmpsb
xor
popl
aam
imul
mov
xchg
data16
pop
jg
lret
subb
sub
mov
pop
mov
idivb
out
mov
loope
and
sub
dec
lcallw
sbb
xor
stos
lahf
arpl
movsl
push
inc
pop
dec
nop
fstps
jmp
or
cli
sub
adc
dec
sbb
lahf
lods
out
mov
pop
or
push
cmp
cwtl
push
sbbb
cmc
pop
jne
dec
out
fnstenv
jle
adcb
jl
pop
ret
test
test
pop
das
test
mov
mov
pop
push
inc
dec
add
rclb
enter
aad
push
fstpt
dec
cltd
icebp
sub
mov
mov
sbb
sbb
xorb
testl
jno
fisubs
sbb
inc
daa
jg
pusha
jmp
xchg
pop
int3
dec
pop
stc
insl
jo
jne
dec
shrb
loop
ja
cld
mov
int3
sub
ret
imul
sbb
cmp
inc
sub
lea
mov
sub
clc
mov
xchg
or
mov
sub
shrl
sbb
push
leave
xchg
cli
ret
roll
or
iret
xor
mov
pop
cmc
out
sti
repnz
and
cmpsl
sbb
loopne
sbb
rcrb
lods
mov
aas
test
hlt
out
out
iret
test
cmpsl
movsb
repnz
lock
pop
cltd
int
repnz
jge
pop
push
mov
cmpsl
fnsave
inc
lock
pushf
das
std
pop
add
icebp
xor
clc
ljmp
xchg
xor
cmp
in
or
pop
xchg
jnp
repz
rcrl
ljmp
jl
loopne
mov
pop
cmp
add
int3
movsb
es
addr16
dec
ret
rclb
cld
popa
add
push
arpl
in
mov
push
push
xor
adc
daa
in
mov
jg
adc
imul
icebp
pop
push
push
xchg
ljmp
xor
mov
in
ret
xor
cmp
cmp
in
cli
pop
lea
popfw
in
and
test
orb
xor
hlt
pop
fnsave
adc
and
ret
sub
dec
and
out
test
mov
mov
mov
inc
test
lock
xchg
lods
loope
cld
mov
out
inc
data16
mov
iret
xchg
rol
out
in
lds
in
inc
add
sub
sub
stc
mov
dec
cmp
dec
ficompl
mov
cmp
lcall
icebp
push
push
out
aam
inc
pop
andl
ss
mov
movsl
pop
mov
fisubrs
jecxz
aam
push
scas
shlb
mov
mov
out
mov
xchg
rorl
rclb
sbb
dec
inc
sub
cmp
es
cmp
mov
cmp
nop
lods
add
mov
cwtl
add
out
sub
imul
mov
xchg
mov
or
int3
subl
jnp
dec
lods
adc
xor
push
mov
xor
sarb
inc
mov
inc
pop
jl
loope
add
jnp
popa
xchg
fsubrp
jecxz
enter
fcompl
jecxz
dec
clc
flds
fisttpll
adc
add
ret
xchg
add
nop
leave
ja
aaa
xlat
push
data16
xor
sub
push
jp
jmp
dec
enter
sahf
out
mov
mov
cmc
sub
mov
stos
ret
negb
rol
push
mov
mov
jne
enter
push
call
dec
lcall
xor
jge
jge
jecxz
mov
push
sbb
add
outsl
add
push
dec
inc
fistpl
sub
xchg
mov
jbe
lock
sub
sbb
xor
jnp
mov
dec
stos
rclb
cltd
fnsave
mov
pop
daa
call
sbb
aam
icebp
jl
push
mov
cmp
dec
sbb
jae
mov
shl
and
inc
xchg
add
in
pop
js
lret
fiadds
mov
inc
cwtl
mov
std
loopne
mov
jmp
sub
or
scas
mov
mov
inc
scas
or
xchg
push
inc
divb
mov
lret
fdiv
sahf
cmp
mov
negl
jle
cmp
dec
rcrb
add
dec
bnd
jg
arpl
jecxz
xor
lock
mov
mov
add
adc
int3
mov
inc
or
ret
adc
xor
mov
inc
sub
scas
or
mov
or
mov
cmp
cs
xor
shll
push
arpl
data16
leave
clc
mov
mov
pop
and
ficomps
js
dec
inc
add
push
sahf
pop
adc
push
add
xor
test
ror
mov
bound
inc
mov
xor
push
aas
cmp
inc
xor
jne
mov
aaa
mov
xchg
adc
cli
smsw
je
test
sbb
sti
stc
sbb
dec
movsb
fcoms
scas
push
xlat
gs
sub
inc
xchg
outsl
xchg
out
aad
cs
sub
or
cs
and
mov
mov
lret
leave
fsubr
xchg
or
aad
jmp
mov
adc
xor
sub
sbb
data16
push
xor
into
stos
pop
stc
xchg
jecxz
scas
cmp
sbb
fstpl
cmp
and
mov
add
sub
cmpsl
or
xlat
xchg
into
xor
sbb
push
sub
jnp
push
test
xchg
bound
je
out
into
in
xor
aaa
cmp
pop
add
jne
fwait
pop
js
fidivl
data16
andl
jbe
mov
mov
or
pusha
xchg
pop
shlb
or
sbb
fnsave
mov
adc
popf
lods
pop
ja
imul
fidivl
push
cmp
sub
mov
jbe
xchg
test
add
add
ffreep
scas
add
outsl
cmp
xor
loopne
negb
inc
out
mov
adc
sbb
jecxz
imul
lods
inc
jle
add
mov
test
mov
push
scas
mov
lcall
movsb
mov
pushl
jo
mov
adc
test
test
scas
in
xchg
jns
incl
int3
aaa
push
sahf
xor
sahf
jl
push
xchg
xchg
push
notb
in
jle
fistpll
shll
mov
add
rclb
cmpsl
xor
dec
xor
inc
stos
adc
adc
fildl
or
divb
mov
push
inc
dec
or
pop
out
pop
loope
bound
popf
sub
sub
dec
cmpsl
repz
mov
loop
gs
inc
and
orl
cmp
xor
dec
inc
jo
fcoml
push
pop
add
adc
cmp
out
in
jae
dec
inc
clc
xchg
and
push
adc
int
roll
mov
dec
jnp
adc
mov
xchg
and
jo
adc
or
test
push
sbb
xchg
data16
int3
push
cs
sbb
popa
mov
cwtl
enter
addl
xchg
cwtl
xlat
int3
dec
sub
addr16
adc
xchg
jne
cmp
lods
loope
out
jne
shrb
cmp
add
adc
sbb
or
aaa
shlb
out
push
fisttps
outsl
icebp
cltd
sbbb
add
dec
imul
xlat
inc
in
nop
clc
ucomiss
std
adc
jg
loope
dec
push
or
test
and
pusha
clc
int
jns
lods
aam
cmpsl
outsl
push
push
in
pop
sub
seto
adc
push
or
jecxz
in
insl
test
sbbl
inc
lcall
loope
mul
ja
inc
xlat
push
test
stos
hlt
adc
jecxz
andb
inc
in
outsb
iret
sbb
dec
inc
inc
out
mov
dec
orb
stos
icebp
sbb
gs
aad
and
mov
cmp
jae
lret
mov
mov
xor
mov
aaa
lods
mov
cmpb
push
lds
idiv
data16
xor
or
pop
mov
daa
sbb
mov
add
mov
pop
leave
add
iret
es
test
aas
addr16
xchg
out
enter
jbe
mov
jbe
xlat
mov
adc
movsl
push
sub
pop
fucomi
rcll
lcall
add
out
or
cmp
push
mov
ja
mov
pop
into
cmp
mov
addl
iret
add
and
movsl
jb
inc
jnp
addb
sti
in
mov
fwait
int3
sbb
jle
jns
cmp
sbb
lret
outsl
xchg
inc
pop
push
pop
or
mov
mov
ficoms
cmp
mov
inc
dec
stc
mov
push
iret
fsubrs
aaa
lods
pop
js
std
push
mov
xchg
ja
xor
mov
sub
into
jnp
and
sbb
mov
daa
aam
cmc
mov
inc
dec
ss
push
fidivrl
jne
cmpsl
shr
dec
push
repnz
in
movsb
sbb
cmp
push
rol
cmp
test
out
movsb
dec
xchg
ljmp
add
imul
push
icebp
xchg
fldenv
push
and
clc
ret
cli
imul
mov
xchg
push
fnsave
nop
mov
dec
out
adc
andl
loop
test
add
outsl
push
mov
loope
imul
mov
cmp
dec
lock
push
cld
lds
test
daa
lahf
pop
mov
lods
in
cld
pop
inc
push
jl
rcll
pop
aas
xor
push
fcomps
jl
testb
xor
mov
mov
and
cmpsl
jmp
shr
push
sub
cwtl
jmp
add
test
fwait
imulb
sahf
lret
je
cmp
ljmp
mov
push
jb
jp
mov
testl
inc
mov
insb
dec
mov
cmc
mov
lock
cmpsb
adc
insl
pop
in
xchg
dec
je
mov
push
mov
loope
rcr
rolb
jmp
add
mov
add
jb
push
dec
js
and
icebp
aaa
xchg
mov
xchg
jmp
loop
negb
fdivr
jg,pt
data16
cmc
outsl
rcrl
dec
lds
ja
mov
mov
sbb
mov
aaa
add
and
popf
lea
mov
stos
fisubl
popa
sarl
push
jp
jb
test
ss
popf
shll
sub
mov
mov
loope
pop
lret
test
shr
pop
mov
fists
dec
fsubl
enter
inc
sbb
and
sub
fs
mov
je
mov
dec
jp
fwait
sbb
bound
push
sbb
mov
jmp
testl
sahf
lds
pushf
jp
data16
pop
lcall
cmp
mull
lds
push
cli
pop
rcll
das
xor
and
popf
jae
les
loop
push
gs
movsb
into
inc
jmp
push
shll
pop
add
mov
scas
xchg
mov
cmp
mov
cmpsl
mov
dec
scas
scas
adc
xor
int
or
pop
int
cwtl
cmp
or
add
mov
je
cs
in
adc
rolb
das
mov
repz
xchg
lcall
push
dec
lods
movsb
addb
mov
jecxz
adc
xor
mov
aad
sub
or
sub
int3
sub
popf
in
sahf
xor
mov
ljmp
jne
loope
inc
and
inc
mov
mov
pop
pop
stos
sti
jo
jecxz
int
or
mov
mov
cmp
sbb
pop
sbb
mov
enter
mov
cmc
popf
jg
or
jb
inc
sbb
dec
xchg
leave
cltd
adc
dec
outsl
mov
jp
mov
pop
dec
sub
sti
xor
ret
into
pushf
nop
inc
int3
movl
mov
jo
cmp
enter
out
ficomps
sbb
fwait
xchg
add
xchg
mov
push
test
cmpsl
pop
loope
and
lds
mov
xchg
das
jmp
inc
cltd
jno
pushf
fiadds
and
int
inc
and
lock
inc
lahf
js
push
jb
fs
mov
std
es
hlt
lret
sbb
or
jmp
gs
cmp
inc
pop
jae
push
fidivrs
pop
pop
scas
or
popa
lahf
xor
lds
xchg
add
mov
jnp
xchg
sti
xor
push
test
lods
andb
and
movsb
out
test
inc
sbb
pop
inc
adc
leave
add
fsts
dec
outsb
mov
out
loop
dec
and
pop
inc
jle
mov
xor
aad
in
pop
cmp
adc
mov
repnz
sub
xchg
adc
test
cmp
call
movsl
inc
es
repz
and
neg
dec
or
movsl
push
sbb
stos
je
mov
negl
pop
dec
icebp
roll
adc
xchg
push
cmp
push
mov
test
jle
outsb
jge
jb
mov
iret
cmp
pop
mov
ja
adc
dec
push
lcall
jae
inc
push
xchg
mov
fnclex
cmp
fdivp
scas
jle
mov
in
jmp
jmp
push
and
aam
aam
push
sahf
repnz
xor
push
mov
xor
shl
push
add
repnz
push
jb
xchg
push
jae
enter
adc
shrl
dec
dec
xlat
adc
gs
popa
es
pop
fimull
dec
inc
and
mov
xchg
cmp
mov
inc
inc
loope
mov
mov
repz
mov
jnp
int
inc
mov
aas
mov
mull
xchg
je
and
imulb
push
pushf
dec
and
jl
and
cwtl
pop
push
ficomps
cwtl
push
dec
push
enter
data16
test
adc
in
or
adc
pop
out
xchg
ds
insl
push
insl
mov
test
xchg
dec
and
and
jl
insl
test
in
xor
cmpsb
fidivs
mov
push
pop
jne
lahf
icebp
jl
mov
sbb
pusha
mov
dec
sub
leave
clc
mov
cmc
cmp
pop
icebp
out
cmp
ljmp
sarl
popf
adc
gs
pop
xlat
and
arpl
xchg
hlt
xor
sbb
push
xor
ss
into
mov
sub
pop
jns
data16
and
test
jb
ja
jle
das
add
in
in
ss
xlat
jl
inc
out
dec
mov
lret
hlt
inc
xchg
inc
lcall
and
mov
popf
lock
xlat
cmp
in
pusha
jnp
inc
iret
add
dec
or
shlb
inc
xchg
mov
sub
data16
lahf
ss
push
sub
scas
jo
push
cmp
flds
push
aam
add
ret
inc
mov
inc
sub
stc
mov
lahf
and
das
rcll
out
pop
xchg
dec
popf
cmp
movsb
mov
pop
test
jp
stos
lcall
scas
call
push
movsb
sub
push
or
lods
lds
addr16
or
or
ja
loopne
inc
lret
data16
inc
pop
cltd
pop
mov
js
fistpl
pusha
lret
pop
jnp
inc
cmp
cmpsl
imul
int3
dec
scas
ret
jbe
xor
mov
or
shlb
and
cmp
sti
dec
stc
dec
rol
xor
popa
mov
cmovae
pop
adc
cltd
xchg
push
jge
into
stos
xlat
outsl
test
pushf
mov
scas
add
orl
scas
pushf
idivb
in
jno
lret
push
lret
cltd
xchg
cwtl
or
mov
mov
das
mov
sbb
cli
movsl
movsb
or
inc
inc
ret
cmp
add
rolb
cmp
or
pop
push
bound
push
push
add
jbe
mov
out
cmpsb
test
bound
icebp
jae
hlt
pop
imul
jmp
loope
xchg
mov
push
std
xchg
dec
aad
or
xchg
xchg
pusha
inc
sbb
push
sub
outsb
mov
imul
push
lock
jg
jne
jg
sbb
mov
mov
or
dec
inc
mov
loope
fcom
and
push
jge
and
out
ja
int
and
jg
push
or
mov
test
fstps
sbb
imulb
mov
cld
pop
cmpsl
cltd
out
pop
push
add
cs
add
mov
jp
jbe
jp
xbegin
push
sub
add
test
adc
mov
ret
inc
popf
adc
jg
and
in
sub
ret
adc
cmp
pop
ret
cld
das
shlb
push
push
lcall
mov
or
cmp
fwait
push
mov
push
jb
xchg
gs
mov
add
repnz
ljmp
pushf
mov
call
sub
inc
inc
jne
test
mov
push
addr16
pushf
pop
leave
add
and
fistpl
mov
ljmp
fimull
leave
aas
mov
popa
and
es
stos
fs
shld
sar
popa
movsb
fs
clc
xchg
sbb
aad
incl
dec
cmp
adc
cmp
xchg
add
aam
cwtl
fsts
and
sbb
les
inc
push
loop
jb
jecxz
enter
add
fs
inc
add
adcb
jl
je
stos
xchg
mov
xchg
lock
mov
mov
dec
mov
push
cmp
cmp
je
in
ss
das
jno
in
ffree
or
mov
imul
xchg
cmp
lcall
aad
out
sbb
in
jo
lds
add
sbb
fs
sahf
inc
pop
mov
xchg
loopne
sarl
or
pop
push
cmp
jne
sahf
pushf
int3
xor
xchg
repnz
fdivrs
in
ret
cltd
iret
sub
pop
enter
xchg
shrl
mov
sbbb
and
test
adc
mov
cs
in
xchg
xchg
int3
loop
xchg
ret
ror
inc
mov
rcl
jecxz
push
push
push
cmpsb
popa
pushf
jb
mov
ds
ds
je
shll
jne
in
ficoms
insb
aaa
fisubrs
cwtl
sub
mov
sbb
mov
mov
adc
imul
dec
fwait
jge
out
push
push
aam
nop
cs
xor
in
cmp
push
ret
popa
mov
sbb
aas
cwtl
adcb
dec
jle
mov
movsl
and
icebp
inc
je
iret
das
fstl
push
rcll
cmp
pop
notb
mov
pop
or
jecxz
fbstp
rcrl
jmp
dec
lock
dec
lods
push
xor
sar
sti
dec
push
or
iret
add
outsb
adc
push
icebp
jl
cmp
mov
inc
out
inc
das
arpl
out
sti
fldt
push
dec
incb
pop
and
mov
pop
dec
rcrb
cld
popa
enter
stos
push
and
test
inc
les
mov
adc
cld
cltd
pop
aam
push
dec
and
xchg
call
cmp
mov
in
mov
or
bsf
loop
das
mov
inc
and
clc
adc
mov
sub
jbe
idivl
leave
sbb
add
adc
pop
cmc
repz
push
jmp
sbb
repz
adc
ficomps
shrb
and
mov
call
xchg
or
xorl
push
gs
jmp
cmp
shrb
fs
pop
xchg
sbb
xchg
push
pop
sarb
mov
jl
int3
enter
js
andl
jno
adc
inc
mov
adc
add
jo,pt
pop
daa
pusha
sbb
rcrl
push
sub
adc
add
fmul
imul
dec
lcall
sbb
pop
mov
xchg
aam
xchg
jg
jecxz
mov
push
or
mov
xlat
mov
adc
repnz
call
repnz
add
je
loopne
add
jl
inc
movsb
add
movsb
push
rcrb
loope
xchg
cmp
mov
mov
aaa
xchg
roll
mov
popf
iret
cli
mov
mov
rorl
leave
dec
lcall
iret
fiadds
mov
mov
or
cmpsb
daa
in
or
jns
popa
out
pop
mov
mov
movsb
repz
mov
mov
cmp
aad
andb
out
cmc
loopne
sahf
add
push
and
fstp
xchg
mov
sub
or
test
lds
push
sti
lock
ljmp
jp
xor
sub
les
lds
test
or
xor
ds
sub
sahf
outsl
mov
xor
jae
sbb
cwtl
fst
outsl
out
aam
adc
adc
add
clc
jmp
inc
popa
or
outsl
xchg
pop
int3
ret
out
or
dec
dec
xchg
fwait
andb
in
popa
xchg
ljmp
or
stc
ficomps
fs
enter
xor
dec
xchg
push
stos
adc
cltd
lea
sbb
int3
sub
adc
outsl
xor
mov
xchg
xchg
mov
enter
mov
lret
pop
out
in
cmp
lcall
loopne
push
sahf
lea
mov
add
lret
sbb
popa
mov
pop
sub
cmp
push
int3
shll
fwait
scas
fists
rcrl
jp
adc
jne
jecxz
pusha
mov
mov
loope
movsl
adc
push
sub
shlb
dec
push
cmp
jl
cs
sbb
cmp
sub
es
ljmp
mov
ds
xlat
push
int
xorl
ret
out
push
mov
push
in
dec
icebp
hlt
push
and
mov
rorb
movsl
sbb
jbe
fcompl
lds
or
xor
or
fisubrl
mov
xor
orl
fiaddl
mov
dec
repnz
aam
mov
push
fsubrl
sbb
xchg
adc
dec
push
lret
icebp
pop
pop
mov
sub
push
pop
shrb
cmp
cmp
daa
cmp
sub
ds
daa
xchg
es
insb
and
jns
mov
sub
insl
jb
jmp
cli
mov
fdiv
or
add
aad
sub
xor
cwtl
mov
inc
adc
adc
push
stos
fs
in
bound
mov
cmp
jbe
imul
xchg
inc
out
pop
jb
sub
mov
add
cli
mov
mov
outsb
daa
sub
pop
pop
nopl
out
inc
repz
mov
jg
aad
js
or
stc
sub
cltd
fdivrs
pop
adc
mov
push
scas
or
add
ret
push
in
xor
mov
mov
icebp
popf
stos
jne
cmp
and
xchg
push
inc
pop
jo
push
scas
dec
pcmpeqb
rcl
out
jo
mov
sub
cmp
jg
mov
neg
or
push
push
int
sbb
jmp
movsb
adc
stc
mov
test
dec
orb
dec
in
fldl
hlt
mov
adc
dec
push
sub
mov
int
daa
push
xchg
outsb
sub
repz
or
pop
and
xchg
pop
add
pop
pop
inc
jecxz
pop
fcmovbe
insl
cmc
bound
adc
loope
dec
mov
jp
outsl
cmpsb
pop
cmp
fwait
xor
mov
enter
int
iret
inc
inc
jl
and
pusha
fimuls
cli
jl
dec
mov
push
test
mov
out
mov
ds
sti
inc
je
push
jne
mov
out
leave
cmpsb
add
sub
mov
push
repnz
test
loopne
mov
stos
jecxz
cmp
sarb
or
xlat
xorb
outsl
outsl
int
insb
test
inc
mov
push
mov
nop
fdivrl
inc
sub
popf
mov
clc
dec
mov
sbb
push
sub
test
cmc
shll
js
push
movsb
fcoms
movsb
sbb
inc
inc
mov
dec
out
ss
ss
xchg
xor
pop
jne
outsl
imul
out
aad
rcll
add
xchg
adc
push
inc
mov
mov
xor
into
jb
mov
jmp
sbb
push
jno
mov
adc
inc
int3
lcall
dec
stos
shlb
pop
xor
xchg
sahf
popf
pop
ret
xor
sbb
hlt
adc
adc
test
loop
mov
xchg
out
mov
xchg
inc
sbb
sub
gs
jl
jmp
lds
les
subl
xchg
test
fs
or
mov
lds
emms
sbb
rcr
sub
jae
mov
gs
xchg
out
fisubs
xor
xorl
sbb
adc
jecxz
cltd
test
je
insl
or
inc
int
and
pop
mov
in
dec
jbe
shrb
mov
sbb
rcrb
and
adc
jmp
xchg
sbb
aaa
cmp
dec
loope
mov
cmp
xor
addr16
mov
mov
cwtl
jb
idivl
sub
jp
inc
test
enter
ret
cld
loop
lock
les
dec
adc
lds
test
cwtl
bound
addr16
or
mov
fs
jg
inc
pop
mov
pop
push
push
xchg
jg
rcll
adc
jp
cmp
pop
jmp
addr16
jg
mov
hlt
or
ror
sbb
out
add
rorb
or
mov
sbb
movsb
pop
pop
arpl
dec
cmp
add
test
pop
lcall
cwtl
gs
dec
mov
jge
sahf
clc
fwait
shlb
insb
sbb
insb
fldenv
test
sbb
scas
aaa
int
data16
movsl
rolb
jecxz
les
mov
push
jge
addr16
popf
or
jns
pop
jg
adc
imul
and
fsubl
test
cmc
xchg
xchg
xor
ret
cmc
xchg
cmc
es
xor
xchg
lods
les
dec
mov
mov
addr16
imulb
inc
arpl
pusha
and
and
mov
shll
and
sbb
test
clc
push
or
test
rol
sbb
js
jne
pop
xor
nop
filds
mov
mov
movsb
adc
mov
or
sub
pop
mov
imul
pop
push
je
or
in
pusha
lods
fwait
jnp
pop
dec
sub
add
mov
fabs
or
mov
mov
sub
mov
dec
js
pushf
cmpl
repz
jl
xchg
mov
loopne
imulb
push
notl
test
mov
pop
pop
imul
lret
lahf
jg
out
in
mov
int3
dec
jecxz
add
push
inc
and
jo
jmp
sahf
mov
movsb
lret
or
arpl
pop
mov
lahf
out
imul
bound
dec
cmp
nop
imul
jno
mov
mov
xor
jp
push
cld
fistpll
ret
ja
pop
mov
ss
mov
push
jmp
nop
icebp
mov
xor
pop
add
out
and
xlat
jecxz
inc
mov
fists
mov
and
adc
push
cltd
cs
sub
scas
cli
fbstp
out
int3
outsb
push
jl
fcomp
inc
sti
inc
fmuls
iret
daa
lea
dec
jne
cmp
lahf
aaa
int
dec
or
leave
cmp
dec
mov
cmp
or
int
call
xor
and
mov
xchg
icebp
call
andb
test
in
lock
loope
jbe
sub
xor
or
stos
movl
inc
in
rclb
in
push
enter
mull
shll
or
mov
inc
imul
add
inc
sbb
add
in
out
jne
movsl
int3
into
cmp
mov
dec
js
mov
insb
out
out
int
mov
xchg
mov
cmp
pop
gs
in
or
imul
push
push
adc
pop
sub
mov
jns
mov
mov
orb
push
add
xchg
xlat
mov
push
push
out
or
loope
add
imul
ljmp
and
xchg
push
lock
push
rorb
or
sub
mov
sub
push
mov
daa
out
inc
aas
and
shll
push
lods
loop
push
shlb
lahf
push
cli
mov
cmp
and
insl
xor
sbb
sbb
sarl
out
ljmp
mov
pop
pop
fs
movsl
cmp
std
xor
jg
sahf
mov
sub
outsl
andb
mov
cmpsl
push
jnp
mov
mov
cmp
or
sahf
xchg
inc
enter
sub
popa
out
adc
jnp
ds
mov
jns
shlb
add
sub
test
pop
mov
stos
xor
daa
fisttpll
int
cmc
outsb
fwait
mov
inc
js
pushf
movsl
xor
mov
enter
and
sub
and
pop
sbb
jmp
mov
mov
mov
mov
testb
fidivs
xchg
mov
decb
fcoml
imul
movsb
push
lret
mov
mov
outsl
dec
xchg
inc
fisubs
sub
sbb
cmp
aad
sbb
jl
xchg
jns
inc
je
cli
mov
fdivl
imul
cmpsl
out
cwtl
fcomps
push
jmp
add
pop
and
xchg
add
pop
xor
and
cmp
xchg
mov
xchg
ja
sub
daa
scas
push
mov
push
pop
scas
dec
out
sub
repnz
out
and
mov
pushf
lods
push
stc
and
imul
push
add
leave
movsl
pop
pop
and
and
adc
popf
notl
adc
ljmp
hlt
lods
jno
cmpsb
into
dec
iret
mov
jb
clc
sbb
cld
jle
and
nop
ljmp
and
add
push
sub
fcmovnb
mov
and
divb
push
or
mov
fstpl
outsb
shrl
cmpsb
fcomps
mov
xor
rorb
lahf
popa
adc
mov
nop
sub
rcl
push
xchg
mov
in
xchg
sub
mov
sub
xchg
xchg
pop
sbb
out
jb
jb
sbb
sbbl
xlat
dec
fistpll
xor
les
js
das
nop
rol
cmpsb
out
int3
adc
addps
sbb
cmp
adc
jnp
es
stos
xchg
daa
pop
ficomps
xchg
xchg
mov
adc
cmp
fistpl
fucomi
rclb
fs
xchg
bound
shll
sbb
aaa
popf
inc
int3
jl
icebp
outsb
mov
or
xor
sub
shlb
sarb
movsb
cmp
mov
mull
pop
arpl
or
das
adc
add
push
es
lret
out
cltd
mov
pop
push
or
and
inc
movsb
arpl
insl
loope
mov
and
fdivrl
insb
adc
sahf
sbb
int3
pusha
out
ljmp
jo
cwtl
inc
mov
and
jb
add
mov
or
pop
push
out
shrl
xor
sbb
lret
lret
scas
lds
pusha
ret
push
rcr
outsl
dec
lock
ret
fstpt
xor
repz
int
out
add
sub
sub
arpl
lahf
int3
mov
ja
mov
scas
dec
pop
push
inc
jecxz
aam
rcrl
shl
mov
xchg
pushf
inc
outsl
mov
adc
lock
cmp
bound
adc
pusha
pop
sbb
cmp
in
scas
sub
add
cld
jmp
jno
sbbl
clc
mov
xchg
cmp
clc
inc
mov
push
pop
or
dec
sub
pushf
jnp
pop
lret
pop
or
xor
mov
je
movsb
push
inc
push
bound
bound
jmp
push
lods
fstps
sub
cmp
and
std
inc
cmp
inc
enter
inc
sysexit
adc
cwtl
leave
jmp
lds
xor
add
andl
adc
lock
cmc
std
sub
and
xchg
mov
mov
mov
aaa
or
push
std
leave
sahf
mov
add
das
sbb
dec
pop
jno
int3
sar
mov
dec
cs
insl
fldenv
or
or
or
ja
sub
and
pop
insl
addr16
pop
je
mov
pop
mov
jns
mov
xor
mov
cmpsb
enter
jae
xchg
lods
jg
js
daa
or
es
or
jbe
aaa
sti
shlb
js
fwait
rolb
lock
mov
repnz
jae
cmpsb
fisubrl
ds
xlat
pop
aad
mov
fnstsw
sbb
std
addr16
fisttpll
mov
pop
insl
xor
cmpsl
ljmp
push
out
xchg
in
inc
add
xchg
les
fdivp
fimull
hlt
and
and
add
addr16
or
mov
je
ss
add
call
stos
dec
sbb
pop
ficoml
les
cmp
cmp
push
test
pop
jns
scas
rolb
test
mov
int3
mov
nop
dec
std
rolb
dec
add
cmp
jge
xchg
repnz
mov
xor
les
inc
pop
pop
movsb
xchg
gs
fiaddl
mov
aaa
ja
pushf
push
xchg
jne
arpl
outsb
and
mov
push
fcoms
sbb
in
xor
fwait
notl
pop
mov
and
inc
bound
popf
into
cli
adc
inc
stc
int3
in
cs
into
dec
arpl
push
stc
sbb
mov
pop
xchg
in
bound
out
sub
jae
xchg
mov
pop
and
inc
and
into
xor
cmpsb
xor
adc
pop
rcrl
into
shll
add
or
and
outsb
into
jg
cmp
mov
fadd
das
stos
nop
arpl
dec
test
and
mov
ss
dec
and
out
push
lods
mov
mov
and
xchg
dec
sub
lea
rolb
jb
and
fdivl
sbb
std
das
adc
push
cmp
lock
or
or
inc
xchg
mov
mov
inc
push
and
and
gs
aad
jns,pt
or
loope
pop
pop
cmp
aad
jp
imul
inc
pop
fs
xchg
cmc
pop
mov
or
stc
adc
mov
insl
adc
xor
sar
mov
imul
sub
xchg
adc
cmp
jg
call
add
test
mov
and
adc
test
lahf
add
js
mov
adc
lods
sbb
es
cmp
testb
dec
sub
sub
push
je,pn
dec
jmp
adc
dec
fiadds
popf
std
or
rol
xchg
push
mov
cmp
mov
sti
es
mov
push
sahf
xlat
push
xor
shll
repnz
xchg
testl
cmp
lock
cmp
pop
stos
xchg
repz
dec
pop
dec
mov
arpl
stc
popf
push
les
arpl
cmp
xchg
mov
in
pop
and
cmc
dec
subl
mov
pushf
pop
pop
inc
sti
cli
dec
xchg
push
dec
sub
xchg
int
push
xchg
lahf
scas
mov
lahf
addr16
dec
stos
xor
inc
push
mov
out
fidivs
scas
das
cmp
add
pusha
out
cltd
add
in
out
xor
in
rcrl
mov
dec
pusha
cmp
enter
pop
mov
sub
mov
mov
shrb
lcall
push
lock
aaa
cld
movsb
mov
insl
imul
leave
and
lret
lcall
dec
cmpsb
in
lods
adc
mov
gs
pop
lock
inc
pop
addl
mov
jns
sbb
mov
mov
outsl
ret
mov
dec
enter
in
push
fiadds
jo
movsl
movb
stos
jne
out
adc
enter
in
jno
fs
adc
dec
pop
mov
jge
loop
sbb
movsb
lods
pop
cs
push
pop
push
mov
xor
push
jp
mov
jb
and
rcrb
mov
inc
add
add
push
mov
loop
lahf
mov
scas
fsts
std
mov
jne
xor
loop
push
in
mov
ret
cmp
fnstsw
cmp
movsb
inc
fdivrl
movsb
ds
mov
cmp
add
jmp
mov
or
jle
push
jae
push
leave
push
outsl
stc
clc
mov
pop
aaa
mov
mov
dec
or
icebp
pop
jno
test
fiaddl
out
daa
js
dec
clc
adc
or
cs
out
jns
loopne
fstl
insb
daa
aam
mov
push
adc
addr16
movsl
mov
pop
imul
and
imul
imulb
sahf
aaa
adc
pop
daa
pop
cs
stos
mov
hlt
imull
fdivr
push
jo
aam
lds
push
fisubrl
leave
bound
cmp
cmpsl
or
stos
lock
mov
push
movsl
and
aaa
test
out
or
xchg
movsb
fcomps
sub
rorl
inc
roll
movsb
pop
cltd
leave
xor
test
lods
movsl
mov
mov
adc
pop
xchg
lcall
mov
add
inc
and
xor
stc
sti
fidivs
jmp
jns
dec
lcall
std
popf
cld
dec
lcall
test
jno
lea
push
incb
insb
mov
lret
in
adc
sub
dec
gs
fs
mov
ja
mov
mov
lret
cmp
mov
jmp
pop
push
push
pop
push
pop
xor
stos
or
in
xor
lret
add
pop
andw
lds
sub
mov
mov
mov
pop
loopne
jmp
shrb
add
shrl
or
hlt
sub
into
loopne
or
das
out
dec
jmp
pop
and
adcl
xchg
fs
xchg
adcl
xlat
mov
es
fbstp
mov
pop
sub
lds
dec
shll
sub
xchg
sub
sbbl
inc
jmp
test
adc
xor
dec
in
lret
lods
cmp
leave
push
push
cli
jb
imul
adc
mov
test
icebp
call
mov
sub
push
sub
mov
notl
push
push
enter
xor
in
out
das
mov
push
pop
repz
rolb
cmpsl
getsec
xchg
dec
xor
jns
add
fstl
add
icebp
and
movsl
movsl
add
test
das
hlt
mov
mov
jbe
stos
out
stos
mov
and
sbb
cmpsl
jecxz
mov
adc
jp
repnz
daa
mov
call
in
pop
push
mov
mov
inc
push
and
andb
cltd
negl
cmpsb
lock
xchg
pop
lock
jmp
sbb
dec
sahf
dec
pop
in
cmp
stos
fildl
and
les
push
inc
mov
outsb
pop
in
fwait
mov
and
addr16
ss
and
lret
sbb
push
mov
mov
fnstcw
and
add
cmp
inc
aad
add
stos
cmp
jns
xchg
test
loope
repnz
loop
mov
xchg
in
les
and
jle
mov
pop
inc
xchg
push
std
subb
movb
mov
js
adc
lahf
testb
es
andb
fsubl
adc
mov
pop
enter
jmp
out
and
mov
sub
sub
movswl
addl
aas
sbb
xchg
loope
add
dec
jbe
out
outsl
jne
popa
lods
pop
pusha
mov
ret
adc
sbb
fcomip
xor
out
add
rcl
inc
push
dec
in
outsb
cmp
js
add
fsubp
mov
xchg
sub
rcr
mov
outsl
pop
flds
mov
mov
pop
rcr
push
aad
popf
adc
push
in
jge
add
mov
dec
fs
adc
and
push
ret
lcall
rcll
jns
addr16
or
sub
push
loope
sti
inc
pushf
xor
fists
mov
jno
outsb
add
sbb
xor
inc
or
test
sbb
push
lea
xor
and
insl
nop
jg
xor
add
iret
jnp
out
inc
pushf
xchg
hlt
jl
inc
xor
ret
cmp
mov
lea
sti
mov
sbb
cmovge
andb
inc
push
inc
mov
aad
loope
or
aaa
filds
lret
mov
cmp
int
mov
rcrb
xor
cmc
ror
rcrl
testl
or
xchg
jo
ja
out
add
mov
cmp
test
sub
pop
outsb
add
mov
sahf
inc
sbb
dec
out
movsb
subl
push
lea
add
out
subl
das
push
jecxz
mov
inc
cwtl
ret
sub
out
pop
roll
push
rcll
int3
sub
xchg
sbb
repnz
mov
fbstp
test
mov
insb
jmp
inc
fimuls
cmp
jo
xor
and
and
loopne
and
in
ret
dec
xor
in
dec
inc
insb
fmuls
mov
test
xchg
xchg
sbb
mov
outsl
out
mov
and
pop
adc
pop
sbb
imul
iret
stos
mov
push
xchg
inc
adc
adc
sbb
mov
push
aam
loopne
mov
movsb
loop
mov
lods
cmp
fs
clc
inc
xchg
cmpb
inc
sbb
xchg
repnz
icebp
mov
push
adc
fwait
stos
fnstsw
cltd
jle
ss
insl
push
pop
inc
xchg
movsb
xor
inc
mov
inc
push
push
and
mul
fwait
inc
pop
adc
or
mov
or
cmp
fstpt
mov
dec
lods
add
mov
adc
shr
sbb
cmpsl
mov
lea
push
sbb
cltd
jb
or
mov
push
inc
dec
sbb
fisttpll
or
adc
mov
sahf
and
les
adc
mov
stos
jno
mov
movl
or
mov
mov
shll
mov
outsl
pusha
pop
xchg
imul
mov
int3
popl
outsb
jecxz
test
jae
mov
jge
ror
add
pop
push
jnp
sbb
mov
fldt
lcall
in
inc
push
into
loop
mov
cmpsl
add
or
inc
sbb
addb
rorb
dec
orl
pop
lret
mov
and
dec
ss
adc
mov
sub
mov
sbb
fmull
mov
test
test
js
data16
cmp
addl
in
sbb
xor
das
jecxz
out
dec
cltd
jne
jl
jo
in
mov
xlat
dec
mov
inc
push
dec
lea
and
and
in
ds
pop
sbb
mov
into
xadd
inc
pusha
nop
adc
xlat
mov
fildl
jl
popa
jle
pop
or
mov
push
leave
shll
jle
lds
jne
adc
jbe
push
push
xor
or
test
nop
test
orb
and
in
js
inc
xor
mov
lds
inc
xchg
sbb
push
push
ss
push
adc
mov
pop
jmp
dec
ficomps
xchg
add
outsb
dec
in
cmp
loope
xchg
xchg
aaa
call
jp
and
or
aaa
scas
xchg
mov
dec
push
mov
and
mov
mov
xchg
xor
xchg
and
lods
hlt
sub
inc
push
unpcklps
mov
or
add
pop
sub
lret
and
dec
cltd
daa
jae
mov
rclb
loopne
xor
sbb
or
mov
notb
stos
jnp
out
inc
and
cmp
fwait
xor
jle
dec
cmp
fiadds
movsl
xchg
dec
mov
xchg
std
dec
test
cmp
cmp
sbbb
mov
cmc
hlt
or
faddl
lcall
sti
in
sub
cwtl
jg
xchg
mov
mov
or
pop
sbb
pop
mov
pop
inc
add
rcrl
and
ficomps
iret
pop
adc
frstor
outsb
inc
add
andb
fmuls
dec
loopew
mov
arpl
movsb
push
gs
dec
ljmp
call
in
gs
xor
jnp
sbb
mov
ljmp
pusha
subb
xor
or
mov
mov
cmp
insb
cltd
jb
ret
fstpt
in
std
addr16
ret
bound
mov
adc
sarl
pop
push
pop
xchg
cmp
aaa
mov
mov
add
test
push
add
gs
imul
and
mov
imul
int
xchg
cmc
fiadds
jg
jecxz
insl
and
xorb
ds
aad
push
imul
sub
scas
call
movl
adc
enter
ja
mov
mov
xor
mov
int3
jecxz
and
fldl
and
sbb
roll
mov
and
dec
inc
push
cld
out
out
mov
int3
mov
mov
loope
pop
lods
rcrb
ds
sub
push
sub
jno
fldenv
pushf
out
test
jns
dec
std
out
mov
push
and
insb
xchg
xor
fmull
ret
div
jmp
addl
in
dec
pop
sub
addb
insl
mov
and
dec
test
mov
push
mov
jecxz
ret
cmp
or
pushf
push
fdivrl
jne
aas
stos
dec
loope
aas
movsl
add
lock
xor
cmp
pop
aad
js
push
orl
addr16
mov
mov
lret
int
rolb
sbb
jne
fldt
movsl
inc
cld
push
cmp
push
out
ret
mov
push
mov
std
aas
push
lods
adc
sbb
inc
shl
jmp
lods
push
sbb
push
xchg
lcall
lret
dec
out
or
loopne
sbb
pusha
inc
push
xchg
ljmp
scas
fwait
adc
xor
insl
pop
pop
inc
inc
or
or
xlat
xchg
mov
movsb
xor
lret
cmpsl
cs
stos
pop
mov
testb
dec
insl
aas
xor
std
imul
clc
addr16
push
adc
sbb
sahf
mov
or
scas
jmp
test
pop
int3
add
and
mov
inc
data16
mov
add
jb
cmp
sub
adc
push
mov
insl
pop
idivl
dec
lock
out
push
vcvtdq2pd
xchg
pop
sahf
arpl
mov
negb
loop
push
push
jle
loope
push
ret
cmpb
xlat
push
dec
outsl
in
or
adc
ss
stos
pop
in
xor
call
mov
into
lods
push
ret
push
clc
or
clc
adc
add
xor
push
and
mov
ret
lock
bound
cmp
and
or
cmp
out
outsl
inc
inc
inc
xchg
jl
pop
cltd
push
jb
mov
loope
xchg
loope
sti
jmp
adc
mov
loop
xor
lods
xchg
jmp
sbb
bnd
or
push
int3
mov
insl
gs
xchg
stos
scas
cmp
in
fnstsw
push
push
je
imul
mov
mov
push
pop
scas
fmuls
cld
call
mov
adc
repnz
add
dec
repz
addl
inc
mov
repnz
hlt
cmpl
cmp
test
and
ljmp
jnp
and
cld
mov
lock
hlt
mov
out
cmc
and
stc
mov
out
cmpsb
jmp
dec
addr16
sbb
and
dec
test
stos
pop
dec
lods
iret
pop
dec
cmp
insl
pop
adc
and
scas
nop
dec
jnp
xchg
cmp
lcall
sbb
dec
dec
lds
jb
fmulp
add
pop
nop
into
inc
nop
popl
fnstcw
sbbb
cmp
lods
adcl
lret
dec
dec
lahf
xorl
add
sub
push
push
sahf
int
cmpsl
mov
push
pop
stos
in
push
push
xor
mov
out
mov
dec
cmp
sub
icebp
in
adc
adc
xor
loop
ret
lret
add
daa
or
jns
scas
fimuls
jb
jl
and
int3
cmpsl
mov
std
bound
push
cltd
or
movsl
add
and
xchg
insb
add
xor
jae
mov
sub
aam
sti
fildl
pop
and
adc
leave
sub
loopne
jb
cmp
data16
hlt
hlt
movsb
mov
pop
popw
test
push
push
xchg
inc
mov
inc
and
xchg
xchg
adc
adc
into
sub
dec
mov
xchg
or
or
ljmp
out
jb
xchg
and
add
push
cld
sub
subb
xor
not
inc
lea
out
add
xor
push
subb
push
repz
cmp
aas
mov
scas
cld
ja
and
fdivr
orl
movsl
std
sahf
and
sbb
dec
pop
das
pop
notl
push
mov
xor
mov
push
pop
inc
jo
xchg
and
adc
and
cmpsb
jb
shlb
pop
jl
adc
mov
xchg
add
sarb
inc
orb
cmp
add
pushf
mov
pop
or
aam
dec
cmp
push
or
inc
aas
jecxz
cmp
rolb
ss
call
xchg
push
test
inc
xor
lods
int3
push
ret
popf
adc
in
aaa
xchg
in
orb
push
and
pop
adc
hlt
pushf
pop
mov
xor
pop
repz
andl
push
ss
mov
lods
test
jns
sbbb
sub
out
lcall
jnp
xchg
mov
repnz
mov
jmp
sarb
mov
or
mov
xchg
jne
pop
imul
mov
jecxz
lret
stc
inc
pop
and
out
mov
jne
sbb
ret
pop
stos
push
add
das
jmp
stos
test
movsl
repz
push
fwait
pop
push
test
mov
repz
inc
jns
or
iret
add
and
cmc
divl
inc
adc
mov
mov
dec
mov
nop
jmp
movsl
cmp
jno
test
push
mov
jge
xchg
mov
insb
or
ljmp
movsl
xchg
inc
jae
dec
xlat
mov
mov
je
xchg
iret
mov
enter
and
inc
pop
adc
jecxz
mov
jbe
dec
nop
add
or
lahf
mov
xor
adc
lea
mov
push
sub
outsb
dec
cmc
pop
je
scas
insl
or
jecxz
jbe
and
add
into
fucomip
loop
mov
ds
inc
insb
jae
pop
lods
sub
popa
mov
dec
movl
mov
repnz
cmp
sub
xor
add
or
jle,pt
inc
adc
mov
adc
lea
sti
inc
out
scas
lret
call
int
ret
mov
cmpsl
cmpsl
add
or
cmp
loope
xor
fldt
fdivl
or
test
dec
dec
and
fadds
insl
ficomps
imul
push
push
scas
or
mov
cld
xchg
lea
jbe
out
hlt
divl
popl
mov
in
pusha
iret
into
add
or
std
jl
sub
inc
xchg
inc
popf
lds
test
xchg
sub
mov
rcrl
xchg
xor
jbe
mov
push
pop
je
mov
lret
aaa
sub
sub
stos
push
enter
pushf
cwtl
mov
inc
or
cmpsb
cwtl
rol
js
addr16
sub
rolb
add
sti
mov
out
popf
test
fidivrs
cli
sahf
dec
mov
stc
xchg
fsubl
mov
jl
xor
add
push
mov
test
push
je
sbb
stos
inc
shlb
push
mov
sub
inc
test
xchg
dec
sarb
inc
inc
or
sbb
push
gs
mov
mov
jo
jbe
icebp
jbe
pop
push
sub
sarl
sub
out
es
loopne
leave
addb
push
notl
outsl
lcall
push
lods
adc
out
fs
push
insl
or
sbb
pop
push
das
pop
push
dec
inc
scas
push
inc
xchg
sub
mov
add
push
push
iret
adc
xor
add
idivl
mov
shlb
and
into
call
jl
lods
mov
pop
cmp
mov
push
cmp
mov
pop
jp
or
add
xchg
lahf
sbb
dec
pop
aaa
add
dec
cltd
fidivrs
xchg
push
xchg
jne
inc
xchg
pop
or
adc
pop
cmp
in
xor
popa
mov
rorb
jns
mov
adc
inc
pusha
loopne
mov
adc
aaa
xchg
cmp
sarl
imul
mov
mov
iret
cmp
dec
decl
sub
dec
clc
decl
arpl
loop
cmp
or
pop
aas
inc
lahf
xor
outsl
mov
xchg
pop
cs
fists
jp
arpl
insl
dec
arpl
mov
jl
mov
and
push
xor
lods
pop
dec
inc
xchg
lds
pop
int
mov
es
cmp
jge
mov
lcall
repnz
outsl
aam
subb
mov
vsubps
into
lods
jecxz,pt
pop
icebp
jno
xchg
pop
call
loopne
or
gs
jl
add
or
out
rolb
adc
xchg
or
push
sub
iret
sbb
clc
sub
pop
subl
cmp
data16
push
in
call
jecxz
mov
push
fst
lret
into
outsb
shrl
in
inc
js
loopne
lock
pop
adc
jl
push
jo
pop
popa
adc
lcall
movsb
xchg
mov
cmpb
cmc
mov
jo
inc
add
stc
dec
mov
insl
nop
test
jp
adc
in
and
and
sbb
std
sbb
push
dec
push
fsubr
movsl
sub
inc
inc
cmpsl
jno
cmp
xor
movb
outsb
arpl
test
mov
jmp
lret
leave
and
out
mov
arpl
cmc
add
nop
mov
jne
stc
insl
test
movups
fs
fisubrl
popf
pop
lds
mov
sub
mov
push
cld
addr16
xchg
inc
cmpsb
aaa
jle
cltd
mov
mov
pusha
cltd
push
leave
mov
hlt
ss
mov
xor
jno
test
and
inc
bound
sbb
mov
shlb
sbb
lretw
das
mov
xchg
stos
in
xor
pop
in
sbb
ljmp
jns
icebp
sub
sbb
sub
das
push
outsb
leave
and
in
sbb
add
xchg
stc
xchg
lahf
fimull
outsb
fcomp
lods
test
repz
lea
mov
ret
jge
call
cs
movsl
push
pop
in
or
or
rclb
jnp
mov
push
inc
ljmp
imul
jbe
jmp
mov
jae
jl
mov
push
and
aam
push
mov
in
push
mov
sub
imul
xchg
or
lds
add
clc
je
xchg
push
cmp
fwait
lret
rcrb
push
xchg
jo
sub
and
sbb
dec
xchg
cmpl
test
push
and
aad
int
cmc
jle
movsb
pushf
pop
out
sub
mov
push
pop
mov
inc
imul
andl
jnp
movsl
push
cwtl
cs
cmp
loopne
ljmp
xchg
scas
pop
lock
ja
pop
imulb
mov
mov
out
sub
dec
adc
call
ss
mov
mov
repz
out
mov
mov
popf
xchg
mov
jg
mov
and
nop
push
stos
andl
icebp
les
fsubrl
enter
jne
dec
sub
inc
iret
movsb
insb
or
stos
or
sbb
push
adc
sub
jp
mov
lret
xchg
push
popf
daa
xor
mov
cmp
icebp
xchg
in
pushf
mov
js
fwait
inc
fstpl
cmp
cmp
es
scas
cli
lret
inc
xchg
inc
and
mov
cld
popf
dec
loope
std
push
outsb
inc
or
push
repnz
xor
stos
lcall
in
sub
daa
jle
jg
add
pop
scas
aas
outsl
call
test
in
cmc
shll
jns
jno
outsb
mov
enter
mov
xor
push
xor
cltd
mov
js
shrl
xchg
insl
push
mov
enter
pop
xchg
lock
inc
cmp
xchg
lds
add
lds
lret
das
cmpsl
jb
pop
rcrl
bound
fistl
sub
rcl
rcl
inc
pop
lret
arpl
jecxz
mov
loop
andb
adc
inc
loope
outsb
arpl
xchg
pop
aad
setl
jl
icebp
jmp
dec
push
mov
inc
inc
ja
orl
lea
and
add
cmp
or
aas
cmc
sbb
cmp
push
popa
inc
subl
fdivs
dec
cwtl
fucom
jge
adc
push
sub
outsb
or
pop
mov
pop
in
pop
mull
fcoms
cltd
out
sub
add
stos
std
repnz
adc
add
ljmp
sbb
xchg
inc
les
sahf
cltd
fisttpl
mov
adcb
pop
icebp
sbb
scas
dec
cmovs
push
cmp
ret
or
mov
jne
js
dec
add
push
jmp
lahf
out
sub
or
add
jns
pop
dec
and
sbb
or
xor
xchg
cli
sub
pop
fwait
movsl
scas
or
sti
orl
push
xchg
sbb
mov
and
xchg
fucom
or
gs
lahf
dec
imul
mov
stc
adc
adc
inc
inc
adc
add
testl
shll
mov
sub
jb
hlt
jne
and
pop
sbb
xchg
fdivl
dec
test
xor
pusha
hlt
je
jmp
xchg
mov
adc
push
and
outsb
inc
sbb
outsl
push
sub
scas
jle
pop
outsl
cmpsb
cli
adc
leave
xchg
int3
push
pop
ss
addr16
jo
push
cmp
push
or
orb
dec
and
clc
sbb
lret
ds
jge
icebp
insl
mov
in
jp
xorl
xor
shl
sub
jbe
movb
call
mov
jecxz
jnp
sbb
xchg
push
nop
or
fldl
shll
nop
ds
jb
lea
xor
lods
gs
xor
rcrb
into
icebp
mov
or
or
lds
out
mov
dec
mov
add
movsl
sbb
js
fstl
mov
insb
or
clc
shrb
jo
stos
sarb
nop
mov
dec
movsl
or
outsb
cmp
inc
pop
push
int
scas
add
lahf
test
xchg
sbb
jp
cltd
cmpsb
inc
repnz
push
in
cmp
push
jno
fcomps
dec
icebp
popf
or
orb
lods
inc
cwtl
roll
dec
xchg
add
jge
inc
stos
subb
shll
mov
sti
fcoms
mov
lahf
dec
popa
lods
xchg
jmp
jg
sbb
dec
cmp
fbstp
jmp
shr
mov
push
scas
or
in
mov
cmp
xlat
sahf
push
shr
xor
jg
sar
jle
sahf
and
out
pusha
repnz
bound
ret
mov
out
add
xchg
notl
sub
jl
movsb
rep
cmp
xchg
lcall
cmp
and
sub
popf
push
cmp
ds
mov
loope
mov
sub
fisubrs
je
sub
adc
jg
xlat
fbld
arpl
mov
inc
test
ss
scas
inc
push
push
mov
xchg
adc
jnp
xor
out
scas
mov
cmp
jnp
mov
push
stc
xchg
inc
roll
bound
inc
outsb
cmpsb
bound
mov
pop
stos
adc
cmp
dec
cmp
aas
inc
out
pusha
inc
lret
test
push
les
mov
shl
sub
in
xchg
stc
mov
pop
popf
fnstcw
sbb
dec
out
jmp
push
in
test
add
jb
aas
cmpsl
cs
icebp
mov
and
mov
xor
or
lahf
sub
int
jmp
mov
dec
lret
sbb
push
sub
xchg
xlat
fdivrl
and
cmpsl
cmpsl
add
jecxz
add
mov
jne
sti
or
pop
rcrl
push
mov
bt
aaa
mov
aad
mov
cli
loopne
inc
inc
xor
movsb
ss
mov
ljmp
mov
lea
das
adc
sahf
fneni(8087
dec
out
cmp
xchg
stos
push
adc
mov
ret
fwait
popf
push
inc
das
loop
lret
sbb
jne
adc
inc
pop
pop
fiaddl
pop
add
daa
insl
sbb
mov
xor
pop
je
popf
scas
or
xor
cmp
sbb
mov
outsb
mov
call
andb
or
push
in
mov
pop
pop
cwtl
mov
pop
ffreep
sub
and
imul
inc
negl
arpl
ja
out
ret
fwait
adc
mov
insb
pop
aam
negb
xor
mov
xlat
int3
cmpsl
xlat
push
outsl
and
mov
mov
jg
adc
sar
or
pop
sti
push
jb
xchg
repnz
add
push
test
icebp
in
orl
lret
or
addl
or
mov
push
xchg
popa
cmp
bound
and
popf
mov
jnp
mov
orl
or
dec
mov
shr
out
lcall
xchg
insl
jbe
adc
shrb
and
ja
fbstp
js
dec
xchg
std
push
and
stc
pop
scas
xchg
sub
and
push
repnz
and
int3
push
lahf
mov
aas
into
cmp
loopne
add
scas
sub
cwtl
stos
fsubr
sbb
pop
pushf
push
jo
sub
adc
xchg
mov
jg
inc
sbb
stc
mov
or
pop
or
and
lods
movsb
pop
inc
call
pop
add
xlat
lock
ret
jmp
bound
into
inc
xor
mov
in
mov
testb
fbstp
mov
clc
arpl
dec
stos
hlt
xchg
mov
les
inc
test
cmp
dec
scas
mov
adc
and
mov
jb
sbb
lret
mov
pop
or
add
lcall
jo
mov
mov
out
movsb
mov
or
fwait
ret
arpl
lea
fiadds
lock
push
or
jo
lret
or
out
and
sub
push
mov
push
movq
or
xchg
cli
push
jns
xor
add
pop
lock
aas
movsb
repz
mov
dec
pop
bnd
xor
sub
jge
cmpsb
cmp
jns
xchg
bound
in
dec
daa
loope
mov
xchg
orb
pop
mov
int3
add
or
xor
inc
les
pop
sbb
mov
out
adc
in
lods
in
mov
sbb
out
mov
mov
subl
lret
cmp
sti
ljmp
outsl
das
aas
sbb
mov
fstp
xchg
cmp
fs
mov
pop
sbb
mov
leave
lods
mov
fldl
fcmove
aaa
mov
in
cwtl
mov
and
xor
sti
xchg
cld
nop
int
fs
fisubrs
imul
test
iret
xor
adc
cmp
insl
xchg
mov
insl
repz
xchg
data16
das
cmp
sbb
and
ss
mov
cmp
push
in
and
rcr
lods
test
sub
movsl
jmp
sti
je
add
in
stc
lds
add
repz
sar
jnp
or
cltd
pop
pop
mov
aad
push
pop
daa
push
xchg
imul
andb
outsb
test
xor
dec
fwait
cmpsb
outsw
xchg
adc
std
imul
and
lods
jo
sbb
imul
dec
call
sub
and
push
lcall
push
sub
loopne
ljmp
sub
push
push
cmp
mov
xor
test
fs
repnz
shll
loopne
lret
ljmp
mov
je
test
leave
push
out
ret
iret
jne
sbb
pop
mov
sub
jl
div
adc
pop
fwait
add
adc
xlat
insb
and
ds
mov
shlb
jp
or
and
dec
mov
shrl
std
repz
dec
xchg
popa
add
cmp
mov
adcb
into
iret
fmuls
cwtl
xchg
mov
mov
ficomps
arpl
subb
inc
xor
adc
out
mov
pop
inc
aas
scas
ja
mov
sub
mov
xchg
pop
jbe
mov
dec
mov
adc
cwtl
outsl
insb
adc
and
mov
sbb
pop
gs
jns
xor
push
fisttpll
pushf
nop
add
add
pop
or
adc
popa
jo
sbb
sub
ss
mov
out
aad
mov
insb
lods
and
pop
imul
sub
jge
dec
daa
lods
dec
and
lcall
lahf
or
lcall
mov
clc
repnz
js
popf
pop
icebp
pushf
push
jnp
mov
sbb
sub
xor
add
xchg
sbb
test
dec
mov
cmpb
les
pop
fisttpll
clc
shr
pop
and
xchg
mov
stos
mov
dec
or
cmp
cmp
into
mov
cli
jle
cmp
mov
jb
pop
stos
in
inc
test
shlb
and
sbb
push
fmull
in
daa
adc
mov
jo
cmp
pusha
push
int
jbe
inc
gs
adc
mov
or
mov
push
fwait
add
inc
xor
pop
and
adc
fistpll
je
in
or
stc
mov
cmpsl
dec
lahf
clc
mov
adc
fs
dec
push
cmp
xor
and
xchg
out
sub
addr16
sbb
xchg
arpl
aas
jnp
stos
mov
in
cld
sub
and
push
cmp
dec
mov
dec
or
or
mov
hlt
xchg
mov
lods
jp
mov
mov
in
push
pop
xchg
mov
push
xor
repnz
mov
pushl
jns
ljmp
pop
hlt
mov
insl
scas
imull
in
add
sahf
pusha
repnz
jno
std
test
sbbb
imul
rol
mov
inc
addr16
mov
push
testl
xchg
outsb
sarl
mov
xor
add
mov
sbb
dec
cmp
dec
and
dec
xchg
push
mov
push
gs
pop
xchg
push
xchg
mov
nop
mov
xchg
movq
mov
pop
xlat
les
jp
sub
adc
xchg
clc
andb
sbb
xor
fisttpl
or
xchg
movsb
adc
out
fstpl
mov
lret
mov
nop
push
sub
dec
test
mov
mov
jp
scas
out
js
repnz
mov
insb
fidivs
sbb
jl
jg
ljmp
cmpsb
add
push
lock
inc
not
mov
fcomip
push
cmp
loop
in
iret
jmp
adcl
and
gs
adc
cmp
repnz
aad
loopne
js
fsubrl
idivl
xchg
add
jle
idivl
jp
mov
rclb
ja
ljmp
roll
mov
int3
adc
out
mov
mov
sbb
fsts
add
inc
enter
inc
or
test
pop
cwtl
cmpsl
xor
dec
jl
lods
pop
push
push
cs
cmp
inc
mov
adc
popa
lea
mov
gs
loop
pop
shll
test
pop
outsb
aas
andb
mov
icebp
xchg
ss
repz
mov
pop
in
and
push
dec
cmp
add
mov
inc
or
iret
dec
test
push
cli
into
icebp
dec
ds
sub
shrl
loop
lds
loop
rorb
mov
stos
int
movsl
jmp
int3
iret
pop
in
lock
push
xchg
mov
mov
insl
jecxz
xchg
sbb
inc
cs
sub
fisttpl
inc
jne,pt
mov
jno
int
mov
adc
and
aam
ss
lret
sub
dec
inc
sbb
sahf
inc
movswl
arpl
cld
test
mov
xchg
mov
gs
sqrtps
xchg
shr
push
repnz
sbb
lds
pop
mov
pop
movsl
mov
inc
imul
xchg
les
out
pushf
cmc
notb
mov
push
cmp
sub
dec
insl
xchg
test
fdivrl
and
mov
mov
pop
ret
lret
sbb
rclb
xor
pushf
sbb
cmpsb
sbbb
out
stc
inc
inc
push
cli
xchg
add
rolb
in
jmpw
filds
daa
and
in
xchg
stos
jbe
es
mov
dec
cmp
sub
sub
aad
and
fldcw
rorl
cmp
jnp
pop
sub
fisubrs
pop
add
mov
sbb
dec
xchg
arpl
jo
pop
fbld
mov
push
ret
stos
or
mov
lock
push
pop
mov
dec
add
hlt
push
mov
loop
dec
xchg
cmpsb
pushf
into
adc
xchg
mov
insl
or
iret
stc
fidivrs
icebp
inc
cld
mov
dec
dec
js
jns
dec
and
popa
dec
cmp
sbb
pop
imul
insl
add
add
scas
xchg
js
pop
clc
or
repnz
in
xor
js
push
mov
xor
movsl
add
pop
outsl
dec
lahf
xchg
pop
mov
jb
add
lahf
stos
mov
push
ret
fs
enter
call
addl
xchg
inc
mov
or
dec
hlt
inc
lods
mul
notl
or
test
dec
push
sbb
std
pop
in
and
enter
jbe
or
roll
dec
lods
pop
push
push
js
test
xor
test
xchg
mov
pcmpgtd
xchg
dec
aaa
xor
shl
daa
dec
enter
and
jp
outsb
outsl
dec
xchg
cmp
fsts
or
es
jns
push
das
add
fcomps
adc
call
movsb
aad
and
dec
stc
lahf
test
idivl
cmp
xchg
mov
mov
scas
ret
cmpsl
mov
fs
mov
std
lds
add
xchg
cmp
mov
push
lea
ljmp
xchg
fadd
adc
jmp
in
mov
mov
pop
rorl
in
je
dec
adc
leave
sbb
inc
fwait
jne
scas
movsb
xchg
popa
adc
dec
mov
push
repnz
jl
inc
test
repz
or
insb
lods
fdivrl
xor
dec
jecxz
les
fistpll
or
and
inc
subl
jo
and
cmp
popf
repnz
cwtl
scas
jmp
add
inc
out
pusha
jb
pop
pop
cmp
jae
popf
pop
xchg
out
xor
cmp
aam
rolb
imul
xchg
lods
hlt
les
cltd
jne
push
out
lahf
inc
les
and
int
jbe
loop
push
subl
push
xchg
vpor
cmc
sbb
jae
pop
out
push
inc
mov
or
jo
sub
sub
inc
fisubs
mov
lea
out
push
push
scas
lods
movsl
mov
and
loope
xor
aaa
shlb
jno
or
sbb
filds
mov
popa
mov
out
rolb
jp
xchg
mov
sbb
mov
popf
cmp
inc
iret
xchg
into
add
popa
mov
pop
les
push
sub
stos
dec
outsl
ds
in
ss
cmp
dec
pop
lods
jecxz
sbb
cmpsl
mov
push
jbe
xor
dec
cmp
xor
dec
xor
aas
dec
or
dec
sbb
insl
push
in
subb
out
aam
fs
and
mov
mov
inc
or
mov
cmp
push
mov
shll
mov
sbb
loopne
or
shll
add
popf
int
stc
ja
sub
mov
and
mov
add
inc
cli
mov
sub
cli
leave
lea
mov
inc
nop
dec
into
hlt
mov
mov
or
push
stc
push
stos
push
mov
mov
mov
push
pop
sub
int
hlt
movb
stos
testw
imul
fisubs
push
out
in
lret
mov
int
out
xchg
add
inc
add
orps
add
xchg
mov
cwtl
xlat
push
arpl
loopne
inc
adc
hlt
pop
fisubl
movsb
repz
and
out
loop
dec
mov
mov
and
or
pushf
xchg
inc
daa
mov
xor
fistpl
jne
cmpsb
jno
mov
sub
movsl
lods
icebp
adc
ss
cwtl
push
orb
repnz
and
pop
ret
enter
and
cmc
insb
jne
inc
adc
lret
add
mov
ret
jne
out
mov
into
sbb
cltd
data16
adcl
mov
mov
or
out
ja
cs
mov
fnstcw
and
dec
loope
scas
jmp
insb
add
imul
mov
jmp
lret
ljmp
je
mov
repnz
pop
fildl
out
xchg
ret
mov
stos
sub
daa
daa
out
jno
ja
mov
jne
aam
dec
imul
sar
pop
inc
sub
loopne
push
sbb
lret
pop
loope
add
mull
push
sub
ficomps
pop
mov
dec
jnp
inc
sbbl
in
jecxz
mov
xchg
mov
inc
sub
push
mov
mov
jae
dec
sbb
jmp
pop
sti
loopne
mov
leave
fbld
scas
scas
cmp
scas
ds
cmp
inc
fidivs
push
and
cmp
leave
mov
pop
and
mov
xchg
out
and
rorb
sbb
cmp
in
push
repnz
addr16
jne
sbb
adc
cld
mov
jge
ss
adc
adc
jbe
aas
jp
call
jmp
hlt
jne,pn
mov
jbe
jns
push
jno
insb
inc
ficomps
jecxz
pop
xor
lods
mov
stos
dec
repnz
cmc
test
mov
cmp
call
out
ss
mov
jb
out
inc
lock
int
xor
arpl
imul
sub
sub
mov
and
push
xor
and
mov
or
aas
mov
add
or
mov
pop
pusha
mov
shlb
aad
jg
leave
hlt
sbb
outsl
push
inc
dec
cmp
sub
lock
push
sbb
push
adc
mov
mov
imul
sti
in
xchg
xchg
inc
leave
jae
jns
loop
aas
icebp
loope
lcall
jne
test
mov
das
shll
jl
jnp
inc
mov
insb
cmc
mov
dec
mov
mov
xor
pushf
es
mov
incl
lea
inc
pushf
fwait
or
adc
imul
cld
dec
mov
push
aad
fs
pop
aaa
fidivl
shrl
dec
add
lock
incb
leave
pop
outsl
dec
orb
pop
mov
fcomi
and
add
daa
lock
aaa
sbb
xchg
pop
inc
ss
mov
mov
cmpsl
add
imul
dec
pusha
mov
lock
pop
or
mov
test
mov
xchg
mov
and
nop
jl
pushfw
or
push
sub
fmull
movsl
pop
mov
es
and
dec
stos
dec
mov
ret
jae
xchg
aas
fnstenv
jae
and
sub
fisubl
in
les
movsb
or
sub
rclb
mov
mov
mov
repnz
and
jecxz
shll
mov
fsubs
jle
jae
xchg
sti
pop
out
jne
int
in
adc
cmp
push
mov
dec
mov
pop
cli
or
and
xlat
mov
fdivr
arpl
clc
out
daa
xchg
cmp
mov
xor
xor
adc
stc
dec
xchg
push
fwait
and
inc
cmc
mov
mov
mov
pop
popa
pop
cmp
push
xchg
cltd
or
aad
mov
or
nop
xor
shlb
cmp
push
nop
out
ret
imul
fucomip
nop
xchg
lods
mov
xor
mov
add
fbstp
mov
lret
mov
jo
imul
bound
pop
and
push
push
bound
dec
test
in
cmp
notb
xchg
cmc
xor
and
xor
lret
xor
inc
push
hlt
pop
sti
pop
sbb
sub
mov
mov
aad
test
jge
pop
in
out
adc
or
fsubrl
ds
xchg
shlb
inc
add
xlat
inc
lret
fisubl
and
or
aas
ret
cmp
fs
jo
dec
js
or
inc
dec
je
subl
mov
pop
jnp
insb
jns
dec
fisttpll
adc
in
and
popf
mov
pop
push
fstpl
adc
adc
mov
cs
in
fisttps
cmp
fnsave
jecxz
stos
int3
cmpsl
jg
ret
mov
mov
mov
es
int3
jo
fidivrs
repnz
dec
cli
ja
test
dec
sti
pop
test
dec
pop
inc
dec
dec
aad
enter
iret
daa
fwait
push
xchg
pop
jl
cs
mov
cld
loope
jge
jg
rcr
sti
hlt
mov
roll
popa
lock
mov
repz
stc
call
out
xchg
adc
cwtl
shrl
imul
stc
dec
jg
sbb
shl
aas
outsb
jmp
cs
or
add
and
mov
lret
jmp
push
mov
mov
mov
hlt
imul
dec
mov
pop
and
sub
arpl
and
mov
push
sub
ds
enter
frstor
cmpb
cltd
ret
loopne
call
dec
adc
jbe
or
lods
xor
rorl
lods
ja
push
clc
int
dec
sti
outsb
inc
dec
ja
pop
jge
pop
jno
mov
and
inc
add
clc
sub
dec
insb
inc
xor
ret
outsl
rclb
cltd
mov
sar
cmpb
stos
outsb
popa
mov
stos
sub
clc
cs
jbe
lahf
imul
loope
jmp
xchg
je
sbb
in
loop
dec
jp
mov
stos
shll
sbb
xchg
leave
pop
cld
cmpsl
enter
repz
rorb
jnp
jo
out
je
mov
adc
pop
arpl
pop
jmp
pop
add
or
xor
lret
push
pop
hlt
add
aas
insb
jne
add
cmpsb
push
loop
sub
mov
ljmp
mov
mov
push
fmuls
pop
inc
test
lret
cmp
push
shll
adc
xchg
xor
mov
fwait
addr16
and
addr16
jecxz
int
xchg
je
insl
outsb
test
jp
mov
pop
push
or
mov
ja
mov
mov
push
xchg
adc
pop
inc
frstor
mov
sbb
lock
sub
xor
push
xchg
loop
pop
mov
loopne
xchg
movsb
cmp
fld
xor
jg
adc
repz
aam
jo
cmp
cli
inc
test
mov
iret
ficoml
popa
push
mov
insl
das
sub
mov
push
imul
lds
mov
push
inc
not
push
and
jns
or
push
push
jbe
cmp
mov
in
mov
in
sbb
sub
push
mov
jne
outsl
mov
stos
xchg
dec
leave
push
jle
jge
jae
xchg
testl
paddusb
daa
dec
call
ds
cmovo
repz
adc
inc
mov
test
mov
fiaddl
push
fsubr
out
les
pop
cltd
pop
leave
incl
push
lret
push
lret
idivl
dec
add
aad
and
xor
xchg
pop
loopne
sahf
push
cmp
sbb
lea
inc
out
mov
or
and
popf
cmp
push
sahf
inc
mov
pop
pushl
idiv
outsb
push
xor
inc
xchg
fisubl
fsubs
mov
and
cmp
push
aaa
xchg
scas
es
sub
adc
cmp
leave
cld
pop
lret
mov
mov
or
les
or
sbb
or
and
and
pop
cmp
movsb
push
hlt
xchg
roll
addl
je
mov
aam
insl
mov
ljmp
xchg
in
je
jecxz
jecxz
push
adc
sub
adc
ss
xlat
test
push
sub
out
rcl
jp
mov
push
cmp
pop
xor
and
fiaddl
lret
adcl
fcomps
lea
lahf
data16
push
push
pop
xlat
scas
testb
cmp
sub
mov
pushf
nop
stos
or
sbb
dec
into
and
pop
orl
ljmp
rol
insl
xor
fs
daa
mov
mov
jle
inc
jae
cmp
jb
xor
jbe
pop
and
inc
rcrl
ljmp
ss
out
je
insb
andl
cmovne
mov
inc
test
or
test
jl
aam
data16
pop
fwait
lea
popf
mov
gs
int3
mov
out
add
xchg
int
aas
jno
cwtl
xorl
dec
cmpl
lcall
imul
jge
outsb
or
mov
cmp
xchg
lcall
adc
pop
sub
fimull
popa
jg
pop
add
psrlq
mov
sub
outsb
or
or
jns
or
add
push
fbstp
fdivr
or
mov
es
xlat
cmp
xor
add
repnz
stc
push
popl
inc
jo
cs
mov
std
fwait
mov
test
adc
push
cmp
add
adc
push
stc
dec
imul
adc
push
push
sbb
scas
jle,pn
push
sbb
add
mov
add
inc
xlat
inc
inc
push
test
jo
and
sahf
xor
lret
movsb
outsb
xchg
sub
jg
cld
icebp
pop
pusha
xor
xchg
jp
xorl
mov
int3
jge
loope
jne
pop
imul
sub
repnz
leave
jns
dec
inc
fistps
jb
xchg
std
push
mov
push
rcrl
push
pop
jns
nop
aad
in
push
mov
pop
sbb
orl
sbb
fists
ja
movl
xchg
pop
clc
aad
and
jo
jae
jp
mov
sub
push
xchg
repz
push
mov
sub
cld
mov
loope
pusha
sbb
mov
xchg
lea
pop
outsb
subl
fldenv
popf
add
add
lods
mov
out
jbe
sub
cmpsl
or
cmpsb
ret
inc
in
mov
sub
call
mov
popf
push
icebp
mov
jmp
push
mov
call
push
fisubl
cli
std
cs
push
cwtl
lret
cmp
loope
test
adc
inc
outsb
ds
shrl
mov
outsl
cmp
xchg
stos
mov
mov
mov
arpl
push
push
mov
call
and
inc
ret
and
adc
xor
push
and
pop
ss
or
inc
scas
rcl
cmp
fdivrs
test
cmp
xchg
js
jae
pushf
sub
inc
push
loope
pushf
add
aaa
jo
sub
icebp
adc
sbb
or
adc
jae
lahf
ret
inc
inc
sbb
cmp
and
mov
mov
and
arpl
xor
das
dec
popf
sbb
mov
xchg
add
lods
pushf
dec
pusha
push
cld
insl
add
into
mov
push
xor
ret
ss
cmp
sbb
arpl
cmp
out
fcmovne
mov
ds
test
outsl
fcmovne
mov
sbb
aam
pop
inc
cmp
jmp
mov
mov
push
bound
mov
sti
xor
dec
ret
fimuls
loop
pop
pushf
fs
movsl
sub
aad
fists
mov
ja
mov
jmp
repz
mov
or
in
pop
cmp
xor
lock
mov
xchg
out
sub
adc
cmc
sbb
mov
leave
or
out
into
xchg
xchg
lock
clc
dec
mov
shrl
stc
xchg
push
das
shrl
into
fwait
insl
mov
fisubrs
mov
int3
xor
out
lods
sti
shrl
adc
pop
int
cltd
dec
bound
cwtl
es
pusha
push
pop
inc
jmp
mov
sub
ret
mov
fdivs
call
inc
mov
xchg
out
jno
out
out
cmp
stos
inc
sbb
idiv
jns
push
or
ret
xlat
scas
push
mov
cli
lret
pushf
cmc
or
rcrb
scas
sti
mov
sarl
enter
or
sub
icebp
push
movsl
les
dec
jno
fstpl
mov
movsl
xchg
lea
push
or
imul
popf
test
sbb
mov
dec
push
nop
sbb
adc
push
or
out
mov
test
test
cmp
je
mov
outsb
loop
inc
int3
dec
cli
imul
sub
fnstcw
jl
pop
xchg
xor
popa
jnp
arpl
rcll
lock
clc
jb
mov
inc
jb
xor
and
jae
rorl
dec
mov
rcl
in
or
dec
movsb
push
or
je
outsl
xor
lds
xchg
fsubl
add
mov
push
add
cmc
scas
repnz
out
and
and
add
sub
mov
inc
repz
aas
mov
push
adc
and
sbb
or
mov
call
int
into
sub
and
and
divl
ret
iret
xor
lahf
or
loop
lock
sub
ljmp
and
push
pop
test
and
bound
iret
xor
jmp
push
iret
pushl
sub
sub
je
leavew
jle
pushf
mov
mov
insl
out
fcompl
clc
scas
inc
push
repz
mov
cwtl
inc
pusha
jnp
aaa
dec
lods
jb
pop
add
xchg
decl
pop
jmp
stos
mov
sbb
es
cmp
pushf
cmpsl
mov
pop
xor
lods
jmp
xchg
dec
jae
xlat
inc
jo
dec
rcr
movsl
out
test
out
rcrb
xchg
and
cmp
push
or
add
adc
push
cmpsl
aas
xlat
xchg
adc
pop
dec
fdivr
add
push
mov
sub
mov
or
sbb
xor
xor
lds
loope
pop
mov
ja
dec
pop
outsl
es
push
enter
imul
fsubrs
sub
dec
in
roll
dec
sbb
dec
movups
mov
mov
mov
mov
and
fstl
sub
add
insb
test
cmpsl
inc
lcall
lahf
and
movsl
imul
and
shl
jp
scas
dec
dec
lret
imul
jne
mov
mov
and
arpl
in
inc
fisttpl
jge
mov
mov
adc
lods
aaa
xchg
popa
add
xchg
jp
xor
mov
in
sbb
arpl
daa
push
lahf
adc
insb
lds
movsb
in
jg
sub
and
sub
mov
jb
leave
push
sub
jecxz
ret
inc
inc
sub
xchg
or
mov
scas
push
sahf
or
jle
or
push
out
dec
cmpb
movsb
sub
add
outsb
or
lods
sbbl
sbb
adc
jl
sub
addr16
xor
push
mov
jl
loop
fnsave
cmp
jl
xchg
xlat
cmp
jp
mov
and
jle
stos
sbb
dec
and
insl
das
jp
ljmp
inc
aam
mov
scas
cmp
xor
mov
jp
repz
and
mov
pop
outsb
scas
add
rclb
imul
fildl
in
ljmp
stc
xchg
mov
fisubl
lea
push
mov
call
mov
les
mov
lret
lahf
xchg
add
jg
dec
inc
fimuls
xor
push
aaa
and
xchg
lods
dec
clc
adc
cwtl
dec
in
mov
adc
lods
loop
cs
shlb
hlt
leave
mov
mov
shll
out
mov
frstor
dec
add
repz
arpl
movsb
jp
add
movsl
ret
xor
sub
pop
xor
xchg
xchg
cmc
pop
jecxz
loope
inc
jno
call
sarb
sahf
inc
mov
sbb
fsub
cmp
cmpsl
not
or
orb
dec
cmp
inc
leave
jl
sarl
outsl
mov
push
cmc
xor
popa
push
jp
pop
insb
xchg
dec
mov
sub
aam
mov
scas
lcall
mov
fsubrl
pop
pop
fistl
push
cmp
mov
js
cmc
lcall
push
mov
cmp
shll
out
sbb
push
leave
jg
gs
sti
push
mov
sbb
mov
or
mov
enter
sahf
and
mov
dec
pop
jecxz
xor
stos
cmp
xor
in
out
call
mov
xor
sbb
mov
loope
fnstenv
out
pmaxub
gs
shl
inc
inc
jb
inc
sub
fstpt
add
into
jl
cmpsb
cmp
andl
dec
imul
fucomp
and
pop
jb
and
sbb
pusha
fwait
lcall
push
leave
lar
pushf
arpl
xor
inc
sbb
rcl
fdivp
fistpl
sbb
inc
mov
pop
sbb
mov
lahf
inc
mov
sar
jb
testb
mov
mov
sar
add
sti
test
sub
adc
pusha
sbb
inc
jns
mov
adc
repnz
mov
in
push
jl
dec
dec
mov
test
mov
adc
addr16
shld
xchg
inc
cmp
sti
loop
jnp
cmp
push
outsl
sub
inc
bound
mov
adc
movsb
jecxz
jle
ffree
roll
and
xchg
test
sbb
mov
pop
mov
adc
fistps
inc
gs
int
insl
sbb
jmp
je
mov
sar
into
pop
push
int
sbb
popf
cmp
inc
or
mov
outsl
mov
scas
push
pop
mov
in
fisttps
insb
xor
inc
sub
orb
in
insb
divb
insl
sub
mov
out
add
inc
daa
popf
lret
dec
ss
push
and
test
push
pop
cmpsb
pusha
int3
or
push
pop
ror
mov
sbbl
jbe
xor
and
or
inc
and
adc
loop
test
test
dec
and
jae
out
test
adc
pop
xchg
jb
xchg
rolb
andb
mov
inc
cli
sbb
xchg
jne
sbb
lret
sbb
arpl
jl
repz
inc
fwait
arpl
movsl
dec
pop
lcall
push
bound
mov
jge
pop
sbb
pop
out
inc
sbb
ljmp
dec
je
lods
fsubrp
aas
dec
cs
dec
pop
int
mov
mov
mov
in
scas
divb
inc
push
adc
lret
push
pmulhuw
ss
clc
jne
push
xor
cld
sbb
jmp
fdivr
dec
xchg
xchg
cmpsb
push
cwtl
sub
mov
dec
push
leave
sub
cmc
push
mov
push
inc
ret
adc
jg
out
testb
leave
pop
xchg
fs
mov
sub
mov
adc
mov
jo
add
cmc
or
mov
lea
push
dec
cmp
inc
ds
jl
sub
xchg
insl
mov
movsl
lea
xlat
sbb
fistps
insb
cmp
cld
imull
inc
push
inc
xor
and
push
xchg
leave
inc
mov
pop
mov
cs
and
push
mov
jecxz
pand
xchg
rol
mov
cmc
sub
xchg
pusha
outsl
push
jmp
mov
lret
sub
sub
jb
stos
in
cmp
and
add
jge
test
and
mov
rol
mov
repnz
out
cmpsl
andl
and
insb
adc
jae
sbb
jne
and
mov
mov
fcoml
repnz
movsb
cmp
in
or
dec
int3
push
jo
in
bnd
pop
push
js
fmull
fs
stos
mov
mov
cmp
or
add
mov
jno
fidivrs
inc
and
dec
mov
int3
cmpl
ftst
iret
lcall
and
int3
push
jmp
jecxz
sub
std
mov
ss
ds
push
arpl
jge
js
mov
adc
and
dec
icebp
lods
popa
repz
mov
bound
stos
jle
add
adc
push
and
nop
jnp
jb
arpl
sbb
xchg
mov
int
sbb
jp
mov
out
mov
out
or
sahf
mov
xor
add
pushf
mov
add
add
or
lret
fnsave
adcb
sahf
xchg
fldt
shr
es
shlb
data16
add
pop
add
cmpb
ja
cmp
cmp
jo
movsl
pop
shl
jno
shlb
scas
add
outsb
aam
or
testb
sbb
xchg
les
out
movsl
xor
adc
mov
and
sti
lcall
jle
out
xchg
into
pop
bsr
fs
test
xchg
aam
cwtl
or
mov
mov
pushf
stos
cmp
add
adc
or
mov
jb
mov
imul
cwtl
outsb
insl
es
or
xor
adc
shl
mov
ret
cmp
and
mov
xor
js
inc
push
inc
sub
add
cmpsb
imul
in
in
dec
adc
enter
enter
cltd
insl
inc
sti
add
dec
std
mov
js
addr16
push
push
push
gs
shll
add
add
cmc
xor
movsb
add
mov
dec
pushf
jae
dec
xchg
jae
push
cmp
cmpsb
rorl
shrb
sub
out
push
mov
adc
mov
int
push
inc
jg
xchg
sti
scas
and
mov
mov
lods
pusha
es
notb
cs
jge
les
fistpl
sbb
aaa
sti
repnz
sub
aaa
fidivs
and
insl
int
mov
xchg
push
xchg
popa
jno
mov
xchg
test
xchg
push
int3
xchg
lods
shl
movsl
push
out
xchg
inc
add
aam
jae
popa
jno
sub
pop
xor
pop
jae
insl
shlb
inc
stc
jbe
xor
jae
pop
data16
push
sub
pop
adc
mov
daa
ret
mov
leave
dec
lods
jb
pushf
jb
enter
ja
xor
clc
sbb
cltd
jne
xchg
xchg
ds
inc
test
xchg
pop
dec
cmp
inc
out
test
pop
testb
jg
lcall
mov
stos
arpl
lret
adc
xor
dec
mov
jbe
adc
cmp
out
cs
mov
les
cmpsb
mov
cmp
mov
js
push
push
cltd
sahf
loope
fmull
sbb
adc
push
lret
jge
xlat
fwait
push
adc
jae
push
int3
xchg
jp
jnp
shlb
sahf
mov
lock
pop
add
cli
sbb
stc
xchg
movsb
test
or
fldl
jle
jnp
mov
xchg
fidivrs
jno
push
jmp
setg
ret
lret
inc
jmp
jbe
xchg
jge
lea
fsub
jne
pop
mov
pop
jg
cmpsb
iret
xlat
nop
sub
repz
loope
iret
mov
push
dec
into
sti
jl
pop
testb
vmovss
inc
mov
ret
ss
test
stos
imul
mov
es
lds
jle
je
dec
imul
xchg
insb
movsb
sbb
out
popa
sbb
adc
jnp
xchg
andb
popa
mulb
xchg
xlat
mov
fcoms
sbb
test
and
xchg
in
repz
ret
arpl
sub
mov
jbe
mov
in
xor
scas
inc
pusha
adc
xchg
les
inc
sbb
sbb
nop
dec
out
fisubl
pushf
mov
test
daa
icebp
dec
out
aad
mov
loopne
pop
mov
push
nop
mov
add
stos
cld
xor
adc
test
mov
cwtl
int
movsb
sub
test
push
pop
adc
mov
xor
enter
aaa
outsl
pusha
mov
je
cmpsb
fucompp
sub
lret
jmp
push
jp
ss
sub
push
lods
neg
pop
inc
mov
sti
jbe
inc
loope
pop
and
inc
xlat
fucomip
fnstsw
insb
flds
mov
mov
mov
or
mov
mov
adc
loop
jmp
sbb
xchg
test
or
pop
inc
xchg
mov
cmp
cmpsb
loop
jecxz
mov
in
jne
fdivp
scas
xchg
adc
xchg
mov
inc
pushf
pusha
or
fnstsw
or
pop
jmp
xor
or
cli
nop
fcmovnbe
imulb
and
xchg
lods
dec
mov
mov
cmpsl
sub
adc
sbb
fbld
jnp
or
test
jl
popa
jmp
cmp
notb
pop
xchg
mov
add
out
mov
call
jmp
ja
jno
bound
lcall
xchg
xor
mov
jo
repnz
or
popf
call
repz
mov
push
loope
leave
pushf
jl
jb
adc
jns
and
mov
xor
test
sub
es
adc
mov
rcpps
ljmp
or
inc
bound
out
in
fwait
mov
push
mov
mov
in
mov
push
push
test
daa
push
in
pop
cmp
sbb
and
nop
cmpsl
decl
push
mov
cmc
andl
imul
loopne
testl
imul
lcall
test
xchg
iret
mov
sbb
jecxz
xchg
andl
aad
je
sahf
jp
test
push
jnp
js
lahf
xchg
xlat
and
or
jae
jmp
loope
sub
dec
bound
dec
or
adc
mov
push
xor
sarb
insl
pop
aas
jecxz
mov
dec
xchg
jle
inc
setl
sub
lret
cmpl
jl
push
mov
cmp
xor
lret
insb
dec
leave
xchg
and
adc
inc
scas
push
pusha
mov
xchg
mov
push
or
mov
jmp
repz
and
inc
fiaddl
xchg
hlt
mov
lret
mov
fwait
sub
jl
or
int3
mov
lret
out
xchg
in
xor
jbe
fistpll
icebp
into
inc
push
enter
fimull
dec
adc
inc
cmp
xchg
xorl
addr16
push
and
inc
andb
daa
cmp
sbbb
add
dec
xchg
ja
aam
outsb
call
addr16
lock
xor
jnp
movsb
jmp
std
lods
movsl
jle
xchg
jg
push
cld
loop
std
and
add
add
and
mov
pop
push
lcall
hlt
subb
fcmovnbe
jl
jp
movsb
xor
mov
pop
lahf
inc
jge
sub
in
ljmp
stos
faddl
pusha
cmpsb
int
sbb
pusha
dec
cmpsb
dec
mov
imul
mov
add
and
inc
insb
mov
lahf
lret
inc
xchg
push
pop
imul
int
loope
ds
stc
xor
int3
jg
rcll
nop
ret
jle
and
cwtl
pop
lahf
push
jp
mov
in
loope
rorb
outsl
jg
arpl
out
addr16
dec
ret
scas
icebp
push
cmp
push
push
and
shlb
sarl
sub
xchg
dec
jbe
xchg
dec
and
cmpb
js
aas
addl
or
mov
aam
mov
xchg
push
pop
aam
movsl
cmp
movsl
mov
in
xchg
outsb
ficomps
ficomps
inc
out
les
in
mov
cmpsl
dec
enter
scas
mov
fidivs
push
xor
fstpl
in
fisubl
hlt
dec
cmp
jne
fdivrl
ja
jne
sbb
aad
cmpxchg
adc
psrad
add
jae
inc
pusha
push
mov
jae
rcrb
bound
pop
mov
xor
jno
xlat
popf
dec
fistl
mov
push
loope
divl
sti
xchg
jecxz
pop
add
imul
pop
push
sub
jae
adc
push
ret
add
pop
cmpb
jne
rorb
jle
mov
in
or
adc
shlb
ret
mov
pop
or
or
inc
xor
insb
adc
repnz
inc
cmp
and
movsl
insb
pop
call
inc
gs
stos
dec
jg
mov
fisubs
fs
xlat
nop
jmp
mov
call
in
mov
dec
xchg
cmp
movsb
arpl
push
rcll
xlat
xchg
test
loopne
lret
js
or
xchg
pusha
das
sbb
pop
js
or
fsubs
aam
imul
xor
push
subl
rorb
lcall
inc
xor
mov
clc
mov
arpl
cmp
mov
push
lret
xor
push
je
fistl
xor
cli
cmp
fwait
movb
in
ss
xchg
fsubrl
mov
mov
jecxz
add
cmp
push
popf
movsl
outsl
mov
adcb
add
ret
mov
dec
lret
adc
lea
push
sarl
cli
pushf
test
cwtl
addr16
cmc
mov
stc
lds
ljmp
jae
sti
lret
push
push
sbb
mov
aad
mov
shll
dec
xchg
test
jecxz
and
cmp
mov
lahf
sbb
stos
adcb
mov
and
mov
cwtl
test
push
test
movsl
adc
adc
push
xchg
das
ljmp
inc
stos
ret
xorb
aad
int
lret
je
movsl
lfence
sahf
xchg
imul
dec
sub
push
sarl
bnd
dec
mov
cld
jl
dec
es
cltd
push
enter
cmp
jne
adc
icebp
repnz
mov
popf
pop
sub
test
xchg
cs
icebp
popa
jle
sub
xor
or
popa
je
outsb
mov
adc
mov
inc
jo
cmc
mov
leave
and
aad
xchg
decl
imul
mov
imull
adc
loopne
mov
stos
cs
jmp
xchg
rcll
ljmp
pop
pushf
mov
mov
lret
rorl
cltd
outsl
cvtdq2ps
sub
push
sub
or
fcoms
imul
sbb
ss
adc
call
sti
aam
push
inc
mov
pop
pop
add
pop
lcall
test
cmp
into
fistpll
push
outsb
fsubp
arpl
shll
dec
cltd
pop
bound
in
and
cmpsl
imul
lea
sbb
jp
mov
mov
aam
arpl
push
in
dec
arpl
pop
mov
repz
jmp
cmp
roll
inc
shll
or
cmpsl
cmp
lahf
and
jl
jns
cmp
xor
inc
adc
loop
pop
jl
push
loop
popf
and
sbb
sbb
ljmp
repz
jns
mov
int3
cmpsl
jg
or
inc
push
adc
cmp
push
movsb
mov
adc
xor
xor
ret
and
mov
mov
inc
xor
fists
mov
mov
test
mov
or
ljmp
mov
sbb
push
test
repnz
sti
mov
addl
test
push
je
xchg
lahf
aaa
icebp
lds
mov
cld
or
add
jecxz
adc
push
xchg
or
arpl
jb
dec
pop
add
inc
repnz
xor
movsb
jnp
add
mov
xor
jge
cmc
sbb
in
mov
mov
cmpsl
adc
xor
jns
notl
xchg
dec
and
inc
cli
repz
mov
add
ljmp
repnz
and
arpl
mov
and
in
inc
addb
cmp
addr16
scas
cmp
bound
icebp
and
xor
movsb
in
rolb
pop
sub
lahf
sub
mov
sti
test
mov
aas
aas
lds
leave
fldt
dec
jecxz
and
mov
out
int
stos
pop
ror
out
and
push
xchg
ja
sub
mov
jmp
xchg
jnp
jp
mov
cmp
cltd
sbb
mov
adc
inc
inc
movsb
outsb
xorl
outsb
fs
xor
stc
jb
sti
mov
mov
ss
popf
cmpsb
mov
shll
push
mov
sub
fs
ret
pop
call
mov
adc
in
mov
add
hlt
pop
arpl
fsubr
aas
push
imul
inc
imul
or
mov
xor
lret
dec
js
xchg
movsb
arpl
decb
adc
inc
ror
das
add
or
dec
int
mov
shlb
add
test
inc
inc
push
add
and
insb
shrb
mov
lret
std
iret
mov
adc
xchg
jnp
sub
pushf
xchg
inc
popa
aad
aaa
out
cmp
cmp
mov
push
pushf
shlb
int3
xchg
mov
daa
mov
sub
sub
adc
adc
jl
shlb
adc
fidivrs
int
test
ret
out
pop
in
fbstp
into
add
aas
xor
dec
addr16
push
ss
insl
bound
pop
push
popa
hlt
test
daa
fsub
push
incb
sti
daa
imul
dec
push
mov
fldenv
fnsave
cmp
jae
jo
mov
xchg
jmp
push
loop
cmpsl
jecxz
call
insb
mull
ret
jae
dec
js
xchg
sub
lock
sbb
ja
dec
vpsubq
jbe
test
add
lea
inc
loop
inc
ljmp
adc
mov
inc
sti
push
sbb
ss
stos
push
roll
or
out
and
inc
cmp
es
xchg
mov
sahf
fnstsw
pop
das
test
mov
mov
sub
cwtl
xlat
icebp
sbb
mov
les
inc
outsb
int
inc
stos
mov
push
push
aam
xor
push
sbb
popf
repnz
lret
les
sbb
pop
inc
cmpsl
xchg
or
push
pop
sub
sub
pop
adc
in
test
jecxz
xchg
mov
or
inc
adc
jnp
jg
and
jle
inc
or
ret
sbb
movsb
sbb
mov
addr16
add
inc
push
ds
inc
test
clc
mov
insb
jp
push
dec
std
xchg
addr16
es
insl
pop
into
and
push
mov
dec
aad
cmp
and
sbb
insl
push
push
jle
xorl
and
dec
frstor
out
jb
inc
mov
nop
jne
cmp
popf
cmp
push
repz
out
pop
je
ror
sahf
xchg
orl
les
flds
mov
jp
sbb
add
push
fidivrl
mov
mov
repz
mov
imul
inc
push
xchg
add
xchg
gs
fxch
fbld
testl
jb
pop
add
jmp
popf
or
lcall
int3
or
xorl
or
sub
push
nop
std
pop
fsubs
jle
lret
cmp
pop
imul
push
fistps
int3
aam
mov
cmp
call
ret
int
pop
out
mov
inc
mov
add
cmc
jns
test
push
and
dec
mov
xchg
mov
mov
jmp
lret
cmp
cmp
into
dec
push
insl
bound
xor
mov
rcr
adc
mov
je
dec
inc
lret
ja
lahf
sub
mov
fdivs
and
pushf
int
or
das
push
or
add
arpl
lret
xor
push
add
das
inc
iret
xchg
and
insl
xchg
loope
push
cmpsb
adc
and
or
int
outsl
xor
add
push
je
ret
dec
shll
sar
xor
mov
cltd
mov
cmp
mov
fcoml
pop
dec
and
and
scas
cmpsl
pop
pop
movsb
std
pop
dec
out
ret
pop
test
aas
adc
fdivrl
clc
int
jmp
xchg
iret
sbb
and
inc
imull
loop
or
add
pop
mov
sub
mov
or
pushf
push
icebp
scas
cmp
inc
inc
mov
pop
xchg
add
cmp
push
rcrl
lea
mov
push
push
sbb
jl
into
mov
xor
scas
movsb
xor
push
sbb
ss
pop
adc
dec
imul
ja
pop
mov
pop
or
jg
mov
bswap
fwait
iret
cwtl
loopne
jle
push
lea
lahf
add
dec
sub
imul
mov
lret
adc
cmp
lret
fistpll
repnz
and
addl
sbb
pop
xor
add
mov
xchg
xor
leave
sub
iret
mov
xlat
std
xor
adc
popa
or
loop
mov
fmuls
or
xchg
std
rcrl
and
xor
jmp
xor
pop
repnz
jne
mov
shrb
cmp
xorb
dec
outsb
xor
push
dec
mov
lret
lock
loope
push
out
fidivrs
pop
cmp
pop
test
in
scas
push
stos
mov
sub
enter
cmp
mov
lahf
push
dec
mov
mov
jg
mov
ljmp
inc
push
mov
xor
lea
test
mov
cmc
or
leave
fsubl
filds
mov
mov
ja
imul
mov
fsubrl
xchg
roll
ss
xchg
cmp
shr
mov
sbb
fsubs
fldcw
aam
notb
ljmp
and
aas
inc
add
push
into
popa
dec
out
push
subl
jl
or
push
js
pop
int3
ljmp
pop
daa
sub
fsubs
call
inc
push
xchg
ret
cmp
xor
push
and
stos
jo
mov
mov
lahf
mov
adc
cmp
sub
xchg
aad
mov
jno
mov
ja
mov
test
push
stos
pop
xchg
mov
pop
sub
xchg
dec
cld
int3
repnz
stos
outsb
adc
sti
sub
sbb
mov
lds
pop
movsl
pop
popa
iret
out
in
repnz
pop
cmp
add
sbb
inc
cld
xor
lea
enter
les
rorl
push
jp
xor
sub
inc
cmpl
inc
ljmp
lods
dec
icebp
insb
push
shrb
dec
and
inc
push
cld
fildll
into
cld
loop
adc
fsubr
and
std
loope
mov
mov
mov
les
ret
jnp
icebp
nop
repnz
imul
mov
call
or
outsb
negl
aas
loop
jo
xchg
pushl
cmp
add
cmp
or
cwtl
sub
xor
std
dec
loope
push
mov
mov
jo
or
pop
mov
out
cmc
into
inc
les
test
pop
jecxz
pop
mov
cmp
adc
push
aad
cmc
adc
pop
test
addr16
mov
and
xor
cmpsl
xor
insb
push
loopne
jnp
add
stos
adc
out
leave
inc
pop
sbbb
test
sbb
test
fistpl
adc
pop
xor
xchg
mov
les
jno
fcoml
adc
and
add
mov
cld
add
cmp
mov
inc
jmp
aam
lea
pop
inc
adc
mov
mov
int3
push
pop
insl
or
inc
dec
data16
aas
outsb
cmp
and
je
mov
push
lods
jne
pop
fcoms
sub
int
xor
or
gs
es
loopne,pn
faddl
pop
int3
jg
test
jb
mov
pop
sbb
outsl
mov
rorl
lock
shlb
dec
sbb
aaa
sbb
inc
movsb
out
push
js
or
adc
popa
pop
mov
adc
jo
mov
ds
sub
or
mov
popa
cmpsl
cwtl
mov
sub
adc
mov
mov
lahf
mov
jns
icebp
test
adc
in
out
and
xchg
lret
pop
jle
cwtl
xchg
mov
adc
jg
sub
fbstp
jns
xchg
mov
and
enter
pop
jo
adc
cmp
push
mov
in
push
hlt
in
and
loope
popa
rorl
xor
ss
mov
rorl
pop
loop
ss
inc
imul
fmul
mov
rorb
icebp
mov
pop
pop
setno
pusha
dec
test
mov
push
push
xchg
mov
mov
sbb
movsb
in
mov
mov
repnz
lock
cli
inc
sub
ss
cwtl
adc
jno
aam
jg
dec
pop
fsubr
xchg
cli
cmpsl
icebp
adc
or
adc
lods
mov
pop
subb
dec
mov
mov
xchg
dec
andl
leave
aam
sub
popa
lods
adc
es
xchg
gs
ja
movsl
movsb
popa
bound
or
test
inc
addr16
pop
push
jmp
xor
jns
mov
std
rcl
icebp
adc
in
mov
cltd
cmp
mov
pop
lahf
leave
mov
stc
mov
push
leave
xchg
xor
stos
cli
sub
sub
lcall
dec
nop
xor
mov
jmp
pushf
inc
in
and
arpl
push
insl
jne
push
hlt
sub
mov
jp
popf
mov
or
sub
adc
jae
ret
sarb
cld
mov
add
xchg
mov
push
lret
in
test
int
inc
pop
add
jl
ds
fwait
pop
adc
push
mov
add
mov
out
xor
push
mov
inc
loop
imul
push
adc
and
stos
mov
jmp
jp
clc
cmpsb
pushf
sbb
mov
jmp
mov
call
adc
test
lahf
xchg
lea
dec
xlat
bound
or
mov
lds
mov
xchg
leave
fwait
mov
clc
add
in
ljmp
push
sbb
mov
aaa
lods
cltd
and
outsl
pop
insl
pushf
rcrb
outsb
aas
or
jg
incl
jo
rolb
ret
imul
inc
call
xchg
icebp
ja
icebp
pop
mov
cltd
cmpsl
xchg
and
dec
xor
mov
cmp
add
jl
add
jl
sbb
add
iret
fsub
fxch
cmp
fucomip
and
aaa
jge
data16
lods
mov
mov
xchg
sub
std
mov
xchg
movsb
jb
cmp
imul
sbb
add
movsl
das
cmp
gs
fdiv
lahf
addl
dec
out
imul
scas
popa
adc
mov
mov
insl
add
mov
cmp
dec
stos
lret
push
dec
and
js
je
mov
xor
in
push
inc
lock
dec
mov
dec
dec
insb
lahf
outsb
dec
int
or
xchg
jo
mov
lcall
lock
loope
mov
xchg
fnstenv
movsb
sub
hlt
jp
cmpsb
les
shr
test
pop
shrb
mov
xor
mov
insl
pushf
lea
adc
sub
xchg
scas
dec
cmp
ret
dec
mov
adc
jp
jl
es
jmp
lcall
add
iret
push
dec
or
faddl
hlt
and
jne
pop
xchg
aaa
daa
loop
mov
adc
cmp
fisttpl
sbb
in
orps
cmpsl
jno
in
mov
cmpb
xchg
int3
sub
xor
jmp
ret
loopne
mov
xchg
cmp
popf
or
add
xchg
call
mov
inc
test
sarb
mov
sahf
popa
movl
xor
inc
xchg
shrb
in
js
js
sbb
outsb
insb
xor
sahf
cltd
int3
lcall
pop
fwait
xchg
adc
sub
xor
jecxz
jne
push
into
add
enter
stos
cmpb
das
push
into
adc
daa
lea
jne
imul
rolb
call
mov
clc
rcll
xchg
jo
lahf
mov
repz
aam
mov
pop
addl
inc
ss
adc
aas
stos
data16
scas
aad
lds
or
inc
mov
into
sub
xor
push
pop
lret
es
and
dec
pop
dec
mov
mov
in
cli
cmp
shll
add
sbb
mov
jmp
mov
xchg
cmp
gs
in
pop
jns
sub
mov
push
mov
pop
jp
call
pop
repnz
and
xor
repnz
fs
push
xchg
add
xchg
jne
cmp
jne
add
cmp
in
xor
jp
insb
sub
pop
dec
inc
js
push
add
cli
or
and
dec
les
mov
add
pop
cmc
aas
mov
pushf
cmp
jae
sbb
inc
mov
test
out
sub
pop
push
dec
pop
jmp
test
insb
jl
ljmp
dec
div
je
xchg
dec
jnp
out
ja
lods
lock
out
jo
in
into
mov
xlat
jge
mov
rcrl
pop
xchg
pop
mov
call
scas
mov
fisttps
iret
in
lods
movsl
repnz
fs
inc
inc
pushl
fwait
in
mov
daa
add
inc
mov
and
adc
popf
fsts
and
fcmove
mov
lret
ljmp
fdivrl
jle
ret
jle
xchg
aam
bound
ljmp
add
mov
mov
push
sbb
dec
dec
xor
jns
sbb
js
pusha
test
xchg
sub
in
es
dec
sub
orl
push
aam
scas
stos
and
and
mov
jno
lahf
fisubrl
inc
les
push
ljmp
mov
and
int3
mov
mov
cmpl
xor
add
push
xchg
loop
movsb
cwtl
cwtl
rcrb
iret
fbld
pop
cmp
sbb
sbbl
cwtl
push
jmp
test
mov
das
sbb
xchg
add
jb
jge
inc
arpl
test
inc
jnp
icebp
xor
sbb
lea
or
mov
cmp
xor
inc
fadds
int3
sbb
jno
fdivl
int
push
lods
xor
cld
sbb
mov
or
jno
add
daa
add
repz
cmpsl
outsl
lods
sub
mov
imul
outsl
cmp
sub
lcall
jmp
xor
fistpl
pop
add
sbb
mov
les
cmp
xor
or
addr16
test
popf
mov
push
mov
sbb
filds
rorb
inc
fsts
bound
push
pop
ds
mov
and
test
loop
int
testb
dec
aam
scas
jbe
jg
sarl
pop
loop
icebp
popl
and
push
out
scas
xchg
mov
mov
ss
cmc
mov
sub
pop
inc
pop
les
or
adc
mov
jbe
jp
xchg
jge
sarl
jl
add
inc
call
cmp
in
addl
fdivl
aas
jo
xor
lret
les
sarb
shl
xchg
scas
pop
mov
out
test
aaa
jo
cmpl
iret
sahf
xchg
in
mov
xor
jae
rolb
xchg
scas
sbb
mov
mov
cwtl
sbb
fsts
push
mov
call
add
mov
lret
jmp
pop
cmp
push
nop
xchg
mov
pusha
fwait
mov
xorb
std
push
or
lret
mov
in
cmpsb
je
mov
xchg
pop
xchg
jg
stos
icebp
and
mov
cmp
pop
inc
jne
in
push
in
rol
xchg
or
sub
mov
push
in
mov
loopne
add
sti
xor
test
int
xor
lods
xchg
outsl
idivl
dec
xchg
mov
fs
push
inc
xchg
fdivrl
sub
jb
sahf
loopne
jne
outsb
lea
lock
lret
dec
sub
testb
push
mov
lcall
scas
shll
push
mov
jnp
inc
cmpsb
mov
jmp
fidivs
fsubp
add
shrb
stos
scas
xor
pushf
lea
test
pop
fnstcw
inc
push
shr
inc
xor
mov
add
sbb
sbb
fidivrs
sbb
mov
push
icebp
sub
add
repz
inc
js
nop
movsb
pop
hlt
push
sbb
xor
and
mov
ds
inc
add
push
xchg
addb
mov
jp
pop
adc
clc
jecxz
inc
and
and
fwait
push
popa
sub
clc
sbb
push
bound
mov
inc
sub
adc
inc
insl
xchg
pop
push
aad
or
in
pop
xor
fwait
add
and
dec
subl
es
and
mov
hlt
popa
push
das
fidivrl
jge
pop
pop
mov
cmpsl
sub
or
pop
mov
lret
nop
adc
out
xor
faddp
cmp
subb
inc
mov
lret
ret
push
xor
push
fs
xor
leave
icebp
xor
and
cwtl
movl
adc
dec
mov
fidivrs
cmpsb
or
inc
adc
stc
xlat
push
mov
and
movsl
sbb
adc
xchg
sbb
or
cmp
or
repz
enter
enter
int
int
adc
inc
dec
rcrb
fadd
mov
xchg
jo
sbb
dec
dec
int3
mov
fdivr
sbb
scas
or
push
into
jno
dec
and
loope
dec
push
hlt
stos
sub
xlat
jo
dec
mov
shlb
aam
dec
mov
outsb
rcll
cmp
fildll
shl
xchg
mov
and
int
jg
mov
dec
or
sub
dec
leave
jge
test
xchg
mov
and
add
fwait
push
stc
xor
mov
pop
out
popa
pop
enter
imul
push
and
push
push
stos
inc
push
adc
movsb
arpl
inc
shll
enter
je
ss
insl
push
cmp
repz
iret
push
lret
pop
lock
fmul
pop
stos
sub
mov
test
nop
xorl
fidivl
cmp
pop
push
roll
pop
adc
mov
lahf
push
mov
inc
lcall
xchg
in
hlt
sub
jge
test
sbb
dec
insb
pop
enter
mov
or
pop
lret
and
sahf
push
adc
in
and
aad
lret
mov
mov
movsl
das
jbe
arpl
insb
or
sbbl
dec
dec
xchg
cmp
insl
dec
lods
push
movsb
sbb
dec
mov
daa
stos
dec
jmp
dec
stos
mov
notb
jb
arpl
test
cmp
mov
push
roll
aas
xchg
jo
movsl
aam
or
js
pop
enter
xchg
pop
mov
ret
dec
mov
mov
inc
mov
test
popf
jge
andl
lds
push
cmp
loopne
fucomi
xchg
cmp
mov
jae
mov
test
in
pushf
loopne
aad
lret
decb
out
or
mov
add
imul
call
xchg
and
push
and
xchg
lods
iret
movsb
je
mov
jno
mov
int
icebp
rcl
pushf
imul
or
loop
fidivrs
sbb
jmp
lock
mov
inc
scas
push
mov
xchg
lret
add
mov
jb
mov
rorb
xchg
aas
movl
mov
jge
or
inc
inc
scas
push
mov
cmpsb
ljmp
mov
out
mov
fisubs
mov
fnstsw
push
cmp
flds
ljmp
adc
adc
dec
call
pushf
jne
dec
xor
insl
js
cmp
pop
lods
mov
add
imul
mov
jg
sub
sub
sub
push
mov
insb
mul
xor
imul
ja
push
push
dec
aam
adc
mov
ror
sti
rcl
push
outsl
xchg
nop
and
xchg
dec
shlb
arpl
mov
sarl
cmpsb
xchg
out
jno
jae
push
test
loop
ds
lahf
xchg
repnz
test
adc
xchg
jnp
or
idivb
cltd
xchg
shl
adc
xorb
cmp
sub
sub
lahf
imul
pop
aad
int
je
lock
cltd
adc
push
loopne
mov
push
sbb
dec
movsl
pop
leave
mov
outsl
nop
jo
out
mov
stos
outsb
mov
inc
aad
leave
jg
jle
ss
xor
add
in
inc
loopne
mov
inc
mov
adc
aas
inc
cmp
mov
insl
test
das
mov
sarl
mov
inc
aas
shrb
es
dec
in
mov
sbb
das
mov
xchg
and
test
push
in
mov
lods
mov
sbb
pop
scas
jno
jmp
das
and
repnz
cld
mov
jo,pt
sbb
lcall
push
arpl
mov
pop
push
fcoml
push
dec
movsb
outsl
lods
inc
cmc
jge
pop
push
outsb
shrl
cmp
movl
lret
mov
lods
push
fadds
mov
insl
mov
cmpsb
pushf
lret
shlb
add
cmp
pop
lret
ret
hlt
mov
jne
mov
mov
insl
mov
lock
jge
push
fldl
push
cmc
dec
or
jecxz
xchg
fucom
jnp
repnz
shr
fistps
mov
rcr
jne
xor
stc
mov
and
out
jae
inc
imul
lock
push
mov
fmulp
in
imull
jmpw
and
cld
test
jns
inc
sbb
and
and
sbb
lds
and
addb
push
nop
and
xchg
mov
push
sbb
sahf
push
mov
jmp
mov
movsl
inc
movsb
test
imul
push
xor
jo
lahf
lods
je
and
jle
loope
or
xor
sub
test
cwtl
and
mov
dec
pushf
out
push
fs
lea
popf
and
push
cmpsb
movsl
xchg
mov
inc
aad
and
pop
imul
icebp
popf
sbb
inc
js
and
sub
mov
xor
pop
xor
sub
xor
and
cmc
dec
addr16
cli
pop
xchg
mov
sbb
xor
in
fcmovnb
pop
inc
inc
jbe
in
pop
gs
fsts
decl
jp
imul
test
negb
cmp
jecxz
popa
push
stos
pop
mov
imul
dec
neg
cmp
cs
ljmp
mov
mov
jae
pop
pop
fisubs
dec
rolb
dec
jmp
pop
mov
cltd
adc
xor
mov
inc
lahf
insb
xor
inc
lret
sbb
mov
out
cld
mov
inc
jg
jo
in
add
movsl
incl
das
cld
and
stc
in
add
je
and
mov
push
in
in
add
xchg
mov
xor
mov
loop
stos
fwait
sbb
jecxz
cmp
dec
mov
cmpsb
push
stc
je
cwtl
decb
lock
rorb
push
push
subb
inc
std
sbb
in
mov
movsl
adc
cmp
sarl
adc
inc
mov
push
or
adc
les
loop
lds
aas
sbb
popa
mov
dec
icebp
cli
add
movsb
push
stos
in
jb
hlt
mov
push
jbe
mov
xor
lock
jno
adc
xchg
imul
bound
repnz
or
in
js
shlb
or
out
stos
xchg
hlt
inc
jge
and
xlat
mov
xchg
mov
push
les
push
inc
xor
add
fnsave
xchg
mov
push
test
loop
repz
adc
in
in
inc
push
or
lods
adc
pmulhw
sbb
outsl
into
and
ljmp
iret
xchg
mov
pop
scas
sarb
ljmpw
inc
xor
stos
adc
mov
push
pusha
mov
imul
adc
nop
push
inc
mov
jo
ret
or
ss
mov
lods
mov
insl
or
rclb
mov
and
nop
mov
insl
arpl
xchg
push
jb
jg
or
sub
inc
outsb
lea
inc
test
push
cs
ljmp
aam
or
push
imul
test
bound
pop
inc
push
jb
movsb
aaa
sbb
cmp
mov
push
jl
mov
cmp
test
enter
mov
cs
and
push
out
dec
cltd
gs
sbb
add
cmp
adc
xchg
addr16
bound
inc
cmpsb
adc
cld
cmp
arpl
mov
xor
sub
addr16
or
adc
inc
fisubl
maskmovq
testl
shl
adc
pop
mov
pop
or
in
jmp
inc
add
out
dec
out
or
mov
in
int
push
js
xor
mov
gs
push
ljmp
dec
push
insb
sbbb
cld
push
adc
in
arpl
nop
push
jbe
sub
insl
inc
cmc
in
mov
stos
dec
scas
push
js
subb
insl
cmpl
int3
mov
adc
test
adc
inc
cltd
lahf
ret
sub
mov
insb
movsl
cmp
mov
insl
mov
repnz
sbb
repnz
es
mov
adc
insl
jl
jp
outsl
mov
and
repnz
cmp
stos
cmp
pushf
inc
sarb
xchg
fsub
idivl
xchg
stos
inc
xor
pop
or
push
lds
push
xlat
pop
data16
aaa
mov
pushf
fisttpll
push
mov
into
loopw
cmp
sub
mov
div
rcrl
das
nop
or
ds
push
xchg
popa
int
add
sub
lods
hlt
sub
fbld
or
jno
imul
xlat
icebp
out
dec
mov
fcomp
cmp
imul
clc
push
mov
in
fstpl
mov
mov
adc
and
addr16
das
dec
sarl
mov
into
dec
push
cmp
xor
xchg
pop
mov
imul
lods
cmp
mov
les
aaa
xchg
ss
xor
sbb
adc
xor
push
je
inc
out
sub
adc
imul
jl
aas
nop
xor
jno
jo
pminub
jmp
decl
mov
xlat
adc
mov
gs
cwtl
cmp
dec
pop
inc
jg
cmp
cli
inc
jecxz
and
ret
enter
cmp
inc
test
xchg
cmpsb
shlb
push
les
pop
mov
jb
pop
add
imul
cld
test
mov
andb
mov
mov
int
icebp
sub
mov
fldl
or
inc
cmc
lds
lea
pop
fldenv
addr16
adc
test
jle
nop
rclb
push
xchg
in
adc
pop
pop
xchg
into
aaa
enter
in
pop
aas
popa
push
push
jle
stos
jnp
cli
int3
inc
mov
pushf
mov
cmpsb
sbb
jmp
imul
jbe
mov
mov
nop
pop
fwait
enter
jnp
push
cmp
jbe
cli
push
jge
inc
ret
push
mov
cmp
stos
dec
add
ds
int3
xchg
sahf
push
notl
push
ljmp
aas
lds
xchg
stos
mov
mov
inc
mov
fidivl
adc
or
out
inc
xchg
das
xor
pusha
mov
fisubl
scas
mov
jns
xor
out
aad
cmp
push
mov
cs
shl
adc
and
cmp
cs
je
sbb
xchg
pop
xchg
hlt
cwtl
aad
lods
cld
enter
inc
sti
cltd
lods
test
ds
mov
sub
lods
rcll
leave
jg
mov
loope
arpl
mov
pop
inc
or
inc
mov
mov
bswap
or
insb
and
in
xor
xchg
call
jmp
add
mov
flds
adc
dec
scas
pop
bound
iret
add
les
ror
scas
mov
cmp
dec
das
sar
push
add
inc
and
loopne
jcxz
aam
sarb
fstpl
dec
cmc
out
add
mov
sub
push
popa
sbb
pop
push
mov
mov
scas
insl
pop
or
adc
loopne
mov
insl
mov
fcoms
add
push
insl
nop
fucom
push
mov
out
pop
mov
bound
add
shrl
push
cli
sbb
xor
imul
inc
iret
mov
pop
sbb
mov
xor
xor
clc
jge
sbbb
loop
les
les
ret
or
aas
rcrl
pop
dec
divl
mov
int
inc
out
std
or
jge
mov
xor
lock
inc
filds
div
dec
or
mov
icebp
mov
dec
test
movsb
jb
das
or
in
inc
in
hlt
dec
jb
mov
push
cmp
jne
sub
adc
pop
je
fs
jnp
ja
jne
or
dec
dec
xchg
ret
xchg
add
adc
xchg
mov
mov
inc
out
in
inc
push
jecxz
inc
cmp
pop
sbb
lods
pop
inc
or
in
jp
jno
fstps
aad
es
lods
shl
das
pop
mov
and
mov
addb
mov
jae
push
test
daa
cmp
sub
es
mulb
aaa
xchg
push
cmp
dec
jns
outsb
out
dec
sbb
mov
sub
xor
ss
fisubrs
dec
inc
fdivrl
push
push
loop
cmp
sbb
and
sub
or
mov
mov
adc
in
data16
outsb
ss
mov
stc
js
cli
mov
sub
xlat
push
ret
les
cmp
mov
add
jp
adcb
mov
imul
dec
push
ds
dec
inc
imul
and
xchg
roll
push
dec
sub
cmp
pop
sub
test
mov
sub
ja
frstor
or
mov
cmpsl
pop
pop
out
push
ja
cli
mov
and
jnp
pop
cmp
cmp
add
fidivrs
jnp
mov
ljmp
js
mov
pop
mov
pop
filds
outsl
shlb
push
cld
test
jle
fimull
add
or
aas
jle
call
jg
ss
mov
mov
loop
dec
add
add
btc
hlt
test
loopne
in
pop
xchg
pusha
daa
daa
mov
jg
std
mov
mov
dec
popl
shr
mov
push
push
xor
pop
rorb
mov
cmc
jno
in
lods
pop
repz
push
push
imul
jl
dec
and
clc
mov
mov
lret
pop
dec
std
fsts
add
sub
jb
stos
out
fstpt
inc
pop
mov
lea
das
rcll
inc
into
jne
inc
test
ljmp
in
cmp
or
pop
and
out
and
push
shll
dec
cli
pop
mov
push
data16
sahf
or
rcrl
shll
xchg
aam
sbb
hlt
xor
sbb
lds
out
and
push
das
or
jno
jae
test
bound
jb
xchg
inc
pop
aas
insb
pusha
fdivl
dec
test
inc
add
adc
lds
imul
fwait
popa
jmp
mov
lret
cmpsl
and
fmull
inc
jns
dec
cltd
adc
add
add
xor
call
cmp
mov
pop
insb
and
jno
hlt
loope
ror
dec
insb
sbb
lcall
sarl
and
daa
out
aam
ds
adc
cmc
xchg
jbe
es
cwtl
adc
xor
lcall
outsl
inc
cmc
sub
mov
fnsave
shll
mov
mov
add
dec
xchg
adc
stos
jl
lret
js
pop
xor
out
push
out
xchg
mov
mov
and
mov
repz
and
inc
mov
mov
mov
pop
push
cmp
mov
mov
mov
sahf
cmp
das
imul
loopne
cs
pop
inc
pop
call
fstps
sarl
cmpb
nop
test
subb
ret
push
mov
sbb
fwait
daa
mov
inc
jp
or
pop
mov
jle
lock
xchg
inc
shll
pushf
pop
dec
adc
les
test
clc
imul
icebp
mov
test
lret
mov
jge
sbb
in
loop
push
loop
js
mov
pop
push
repnz
and
sub
push
aad
cmp
jbe
cli
aaa
movsb
jno
and
out
bound
arpl
adc
cmc
sbbl
loopne
pop
int3
cmp
xor
dec
cmp
cmp
xor
std
in
mov
xor
add
jge
sub
inc
pop
sub
pop
sbb
mov
mov
lret
inc
push
push
fistl
clc
cmp
scas
add
mov
popa
fisubs
push
xchg
lahf
int
out
sbb
adc
mov
push
jl
sahf
sbb
or
sti
push
cmc
lock
cmp
cmp
mov
fs
pop
mov
push
pop
test
xchg
mov
push
arpl
sub
mov
jle
mov
and
lods
fnstenv
xor
push
xchg
subl
xor
ret
inc
mov
ss
icebp
and
inc
in
ret
cmpsb
imul
push
imul
mov
jmp
or
dec
das
mov
in
insl
cmp
fsub
sbb
pop
inc
pusha
xchg
xchg
pop
mov
mov
add
dec
enter
mov
or
sahf
shl
mov
sbb
mov
repnz
cld
in
repnz
cmp
fstpt
jne
enter
lock
ja
shlb
imul
push
push
cmp
popf
cmc
sub
mov
mov
push
or
sahf
insb
insl
push
push
sub
in
mov
dec
adc
push
rcll
enter
mov
cmp
pusha
pusha
inc
or
mov
xor
out
frndint
packssdw
and
push
test
add
push
jp
pop
sub
je
xchg
jno
cltd
or
mov
int3
popa
push
out
mov
gs
data16
adc
repnz
push
rcll
dec
dec
sub
inc
jnp
shl
or
cmpsb
mov
xor
roll
pop
pop
push
cmpl
inc
into
popa
xchg
shlb
mov
xor
xchg
and
lds
into
jge
xor
dec
xchg
sub
into
jecxz
ret
addr16
cli
loopne
inc
and
xchg
add
sub
lret
xchg
add
push
mov
mov
sti
xchg
int
scas
dec
jle
xor
adc
pop
adc
lret
xchg
adcl
mov
sbb
inc
mov
dec
ja
sti
leave
pop
sub
push
insl
and
ljmp
mov
cmpsl
jmp
xchg
insl
pusha
xchg
addl
xchg
jp
push
mov
jne
add
out
rorb
ds
cld
xor
movsb
ficoml
loopne
pop
and
cmpl
divb
scas
out
mov
mov
push
loopne
push
idivl
or
sub
inc
sbb
mov
in
sbb
mov
mov
jge
pop
hlt
ljmp
aam
cmpsl
mov
or
mov
nop
iret
lods
cmp
ss
xor
stc
add
jmp
out
pop
das
push
insl
out
daa
out
cmp
push
fcoms
jmp
inc
push
inc
mov
lcall
and
lret
rcrb
jl
loop
jle
sbb
jb
int
push
outsl
and
mov
xor
xchg
pushl
fimull
adc
and
lds
adc
lods
outsb
sub
arpl
jno
call
sub
dec
xor
add
je
add
test
call
fldl
aad
lcall
cmp
xor
add
lahf
mov
mov
lcall
inc
stos
rcrb
stc
and
mov
mov
sub
outsb
sbb
adc
jnp
dec
imul
mov
sub
sub
scas
ds
jg
ljmp
cs
icebp
pop
ds
test
insb
clc
push
add
stos
mov
cmpsl
outsb
xor
inc
pop
lock
xlat
cltd
mov
loop
addr16
call
xor
lods
push
ret
bnd
xchg
mov
xchg
mov
pop
cmc
mov
ficoms
add
and
mov
data16
jnp
adc
add
js
and
push
add
ret
cmp
sbb
xchg
inc
cmp
xchg
sub
sub
hlt
jp
into
mov
xchg
sub
dec
mov
sub
jp
mov
loop
pop
xchg
jne
push
icebp
pop
outsb
jmp
inc
ss
fsts
adc
dec
mov
out
aad
jecxz
or
dec
movntq
mov
push
loope
daa
jmp
in
mov
sub
sti
daa
xchg
test
add
jae
mov
mov
add
push
ret
add
lods
inc
pop
or
sub
xor
call
sub
mov
push
jg
mov
adc
dec
lret
sbb
fneni(8087
pop
jne
pusha
jns
and
sbb
nopl
jae
pop
add
rcpps
rolb
jb
das
pop
pusha
pop
loop
xchg
mov
lcall
fwait
leave
ret
hlt
cmpsl
mov
xchg
les
pop
mov
sti
nop
std
fildl
add
stos
adc
ljmp
pop
add
adc
add
rol
inc
push
shrb
inc
stc
loop
jmp
mov
push
ss
mov
cli
push
subb
jns
sbb
xchg
or
xchg
cmp
movsb
dec
int3
pop
nop
test
ja
adc
leave
sub
daa
jle
out
es
dec
in
pusha
cld
leave
mov
dec
jl
mov
xor
inc
lds
adc
push
dec
xor
or
sbb
mov
push
cltd
lret
xchg
jne
scas
sbb
aad
push
jg
sub
insb
movsb
pusha
add
mov
cli
lret
loopne
in
cmp
jns
cmp
stc
icebp
mov
es
popf
fstps
add
mov
xor
push
int
cmpsl
mov
arpl
or
aad
fsubr
lods
add
sub
cmpb
adc
xchg
and
xchg
addb
pop
insl
xchg
mov
push
jg
xchg
cmp
jo
sub
cmovns
adc
push
lretw
jo
movsl
push
subb
call
movsb
cwtl
sti
or
repz
sbb
not
loopne
xchg
aaa
mov
push
out
int
sarb
dec
adc
push
mov
punpcklwd
fisttpl
jno
mov
push
call
xor
jbe
sbb
int3
insb
sub
or
test
add
sbb
je
sbb
lcall
cmp
or
movsb
and
sub
cmp
and
jle
mov
fldcw
in
and
lods
shlb
xchg
repnz
sbbb
jbe
pop
cmp
mov
fldl
sbb
mov
or
push
xchg
out
fstpl
mov
xchg
jne
mov
inc
pop
bound
hlt
xchg
jmp
iret
jle
and
cmp
cmpsb
lock
dec
dec
mull
inc
mov
jp
lods
int
xchg
cltd
cmp
sbb
addb
or
mov
ds
aaa
dec
das
push
dec
sahf
call
jnp
xchg
shrl
pushf
sbb
jbe
xlat
cmp
popa
pusha
mov
andl
out
imul
pop
rorb
pop
andl
adc
mov
fnstsw
sbb
push
mov
fstps
std
iret
xchg
rcrb
mov
mov
movsl
push
jae
dec
div
and
mov
dec
mov
lea
jb
popl
push
pushf
cld
int3
mov
mov
aas
xor
adc
mov
fwait
data16
push
inc
insl
cld
dec
push
and
and
ljmp
jmp
ss
adc
inc
pop
aam
jb
or
xlat
dec
jg
icebp
daa
sarb
rorl
mov
dec
xchg
or
xchg
rcll
ljmp
and
or
xchg
movsl
aad
out
js
jnp
dec
test
xchg
push
xchg
nop
jo
es
push
ja
testb
int
gs
mov
fnstsw
fucom
testb
xchg
adc
bound
test
or
lret
loopne
ss
inc
mov
mov
or
repnz
lock
in
pop
dec
loop
xchg
movl
xor
data16
jne
jno
loop
mov
nop
into
mov
mov
lea
ds
imul
shll
mov
adc
mov
icebp
mov
imul
xor
mov
mov
into
dec
aad
mov
call
stos
mov
js
push
mov
repnz
pop
xchg
ud2
xorl
pop
in
push
and
nop
icebp
cmp
cwtl
cmp
sbb
icebp
mov
lods
xor
test
mov
push
cmp
jno
call
pop
repnz
stos
and
rcr
sub
clc
lret
mov
repnz
xor
sub
ds
fmull
mov
jmp
scas
dec
call
ror
out
add
add
es
in
int
test
cmp
mov
mov
cmp
cwtl
popa
adc
cmc
loopne
icebp
push
fnsave
cmp
dec
fstps
dec
add
mov
mov
addr16
mov
inc
jae
sub
add
cmp
aad
inc
shl
outsw
pop
mov
dec
xchg
sti
pop
jnp
das
jecxz,pt
dec
xor
and
sbb
pop
jg
pop
inc
mov
call
adc
jmp
imul
lret
fwait
cmc
jmp
sub
loopne
mov
push
sti
mov
cmp
xor
inc
lods
icebp
push
jmp
inc
das
push
fisttpl
cmp
mov
mov
sub
xor
pop
xchg
rolb
loop
jg
fistl
scas
pusha
mov
inc
outsl
jl
push
add
add
insl
xor
xchg
xchg
sub
dec
pushf
ror
mov
out
jnp
cmp
inc
add
xor
repz
js
into
add
push
in
sub
fcoms
cli
mov
sub
fsubl
mov
mov
jmp
icebp
pop
cmp
push
mov
adc
cmpsl
and
jb
mov
outsb
imul
in
push
mov
cmpb
testb
jge
mov
add
mov
and
scas
sarl
aam
lods
js
xchg
push
adc
jo
movsl
into
mov
mov
mov
cmp
pop
sub
inc
int3
dec
xchg
jge
cmp
ja
and
cmp
mov
dec
in
jmp
mov
repnz
and
add
fsubrl
sbb
lock
lods
mov
in
imul
and
popa
pop
add
and
adc
repz
in
mov
inc
js
pop
xchg
and
or
call
sbb
or
xor
call
in
ljmp
lret
sub
shll
pop
mov
add
ja
xorb
out
ds
add
mov
jno
movsb
jb
mov
xchg
jg
push
lock
stos
iret
out
ret
inc
out
and
jmp
jne
mov
and
push
int
jmp
cmpl
mov
subl
fnsave
lds
sub
sub
push
or
fucom
or
enter
out
daa
push
in
pop
pop
cltd
push
add
dec
mov
not
leave
insb
fldl
fs
call
pusha
jp
xor
dec
mov
mov
xor
sbb
cmpsl
imul
inc
scas
xchg
mov
das
push
movsb
jl
add
das
adc
inc
pushf
mov
lcall
or
aad
cmp
push
fadd
mov
xchg
sbb
mov
fxch
repnz
mov
sbb
in
ja
lods
add
mov
dec
cwtl
ds
mov
lock
fsub
pusha
adc
cltd
call
mov
rolb
xchg
dec
mov
dec
cld
mov
adc
fwait
test
sub
aas
push
fwait
mov
cmpsl
int
sbb
subl
sbb
xchg
inc
lods
leave
mov
xchg
cmp
xchg
push
add
push
sub
leave
adc
es
hlt
jecxz
push
sbb
lds
push
mull
cmp
leave
sbb
scas
loop
insb
ret
mov
push
cmp
arpl
add
clc
out
dec
sbb
pop
pop
pusha
add
or
sbb
cs
mov
jbe
insb
sbb
lret
gs
out
mov
test
sti
push
mov
lahf
push
std
sarb
xchg
and
out
sub
xchg
iret
out
adc
push
inc
nop
outsb
lret
aaa
sbb
std
in
int3
rclb
rcr
pop
mov
lods
inc
xchg
in
lahf
fldt
orl
es
pop
jg
push
notl
sbb
jle
add
aad
jl
dec
jle
in
sbb
xor
lcall
fldcw
adc
cmp
in
insl
pop
in
mov
jle
cs
or
call
or
clc
mov
dec
and
cltd
xchg
sub
lret
icebp
sub
inc
dec
outsl
push
xchg
flds
lea
int
mov
test
cmp
inc
mov
fstpl
test
jg
outsb
mov
jne
mov
and
mov
aas
into
sbb
mov
mov
scas
enter
cmp
insb
ret
popf
popf
dec
inc
nop
adc
stc
stc
jp
xchg
jge
jl
or
mov
hlt
shll
test
jns
mov
cli
fisubrs
pop
jo
mov
xchg
push
mov
push
sub
adc
or
aaa
ds
sbb
fsubs
and
adcl
mov
pop
lahf
or
mov
ss
lea
in
pop
ljmp
cli
mov
mov
sahf
pushf
cmp
xchg
daa
jl
movsb
into
jno
add
inc
inc
leave
cltd
cmp
pop
pop
ficompl
push
loop
ds
xchg
or
test
xchg
mov
adc
sbb
and
pop
lds
stos
in
imulb
lret
cmpsl
xchg
ret
inc
js
push
add
std
int3
mov
int3
pushf
aad
mov
push
and
imul
iret
fmull
push
mov
xchg
adc
loop
cmp
add
mov
or
ret
jbe
inc
stos
cwtl
xor
cld
sub
pop
push
and
jmp
mov
xchg
stc
cld
xchg
testb
rolb
imulb
mov
cmp
rcl
mov
push
in
mov
inc
repz
int
dec
xchg
push
ss
jle
repz
sbb
pop
xchg
int
das
xchg
add
lods
sbb
mov
fisttps
dec
pop
sbb
cmp
adc
popa
or
lods
dec
and
mov
cmp
test
push
cmp
fisubl
and
mov
mov
mov
pop
mov
fmulp
jbe
out
and
jmp
sbb
jecxz
push
imul
mov
xchg
repnz
mov
pop
xchg
xor
jnp
insl
jnp
fldenv
lock
jmp
cmp
push
mov
push
pop
add
pusha
lds
int
imul
mov
add
fwait
cmpsb
sbb
outsl
cmc
movb
xor
jb
or
test
push
xor
negl
sub
addr16
shr
mov
and
xchg
inc
mull
rcrb
push
adc
mov
inc
lret
add
or
xor
xor
or
fdivl
loope
sti
shlb
pop
dec
xor
adc
push
je
dec
inc
pop
pop
loopne
dec
sbb
fisubs
sub
outsb
adc
or
jmp
decb
mov
xchg
add
xchg
lods
test
dec
or
imul
enter
in
mul
mov
in
ret
jnp
jnp
repnz
jbe
mov
cwtl
outsl
cmpsl
sarb
imul
pop
mov
xlat
add
dec
mov
lret
mov
sahf
cmpsb
pop
repz
nop
aaa
loope
dec
mov
and
and
test
push
or
xor
inc
mov
pop
cmp
lods
test
add
sub
or
inc
mov
or
mov
dec
je
scas
jo
pop
call
sbb
clc
push
jb
lock
sarb
dec
jns
dec
cmpsl
lret
decl
cld
mov
ret
stos
push
adc
push
test
push
mov
or
mov
test
push
fstpl
out
add
ljmp
xchg
mov
shll
or
push
sti
fmuls
ret
xchg
dec
jg
in
daa
push
rcrb
mov
adc
xchg
xchg
repz
cmpsb
fistpll
cmp
push
scas
pop
testl
rol
jbe
mov
fst
add
es
pop
add
mov
ljmp
cli
xchg
dec
mov
jp
add
cmp
dec
arpl
int3
or
inc
mov
add
cli
in
stos
mov
clc
ja
enter
cltd
fcompl
and
loop
lea
nop
imul
xchg
inc
adcl
iret
add
into
into
std
int
add
fisttps
adc
psllq
dec
ss
pop
dec
into
pop
jl
jp
cmpsl
jg
xchg
hlt
bound
lahf
dec
shlb
std
ljmp
xchg
fwait
test
jge
lds
jge
pop
out
idivl
dec
sar
or
pop
in
cmp
xchg
adc
jg
sub
addr16
test
mov
fadd
inc
or
xchg
lcall
rclb
or
imul
mov
pop
leave
pushf
jp
mov
push
aad
outsl
data16
lret
mov
fcmovnu
ljmp
fldenv
popa
and
jmp
mov
lea
jp
std
cli
ss
fnstsw
mov
lea
push
test
mov
sub
add
push
xchg
cmc
fiadds
add
add
sub
lock
mov
pop
rolb
xor
outsb
mov
movsb
ret
adc
rorl
jl
lret
sub
clc
nop
or
cmp
cmp
bound
stos
cwtl
push
add
stc
pop
and
jae
sbb
jne
in
inc
in
jp
push
pop
lds
ret
jle
popa
repnz
and
sbb
pop
sbb
loopne
call
insb
dec
mov
jecxz,pn
movsl
insb
and
repz
xor
jmp
movsb
cmp
sub
popa
aad
je
cmc
mov
movsb
or
pop
or
cmp
in
outsl
mov
sbb
dec
sub
mov
int3
push
leave
negb
inc
xor
push
dec
das
push
pusha
cmp
mov
dec
sub
shlb
cwtl
stc
jecxz
stc
cld
ja
mov
in
push
adc
add
sbb
andb
inc
in
icebp
shll
xor
shl
xor
xchg
adc
push
cltd
pop
jp
jmp
xlat
dec
hlt
jle
inc
cwtl
and
and
aaa
push
int
cmpsl
pop
cmp
push
add
mov
in
call
mov
cli
loop
and
rcr
pusha
and
jmp
cmpsl
mov
mov
popa
sub
sbb
sub
ret
ljmp
push
fldenv
mov
cmp
mov
loope
pop
mov
fwait
out
mov
jp
test
jecxz
aas
imul
mov
neg
sub
int3
mov
add
mov
rcr
aaa
mov
jno
popa
mov
cmp
lret
or
into
fcomps
mov
or
out
fiadds
xor
pop
mov
and
leave
mov
out
bound
cmp
jbe
inc
mov
psubusb
cmp
add
jnp
gs
cltd
xchg
xchg
outsb
xchg
add
sahf
stc
mov
jne
mov
daa
adc
mov
pop
inc
popf
push
mov
ficoml
mov
ljmp
aas
or
paddq
leave
insb
xchg
stos
fwait
mov
ds
pop
filds
or
mov
xor
and
xchg
fistpll
jp
mov
jae
das
pop
fs
xor
dec
daa
lea
fsubl
jbe
xchg
cmp
xchg
in
xor
cltd
jecxz
add
mov
jb
or
lcall
sub
out
pop
sti
scas
mov
mov
fisubrs
pop
sahf
lods
add
add
lods
cmp
repz
and
jae
pop
fs
mov
stc
repnz
sarl
cmp
clc
fidivrs
fdivl
sub
fmull
cmc
out
jnp
sub
shrl
xor
ljmp
jmp
push
lcall
lods
cmp
or
ljmp
jb
add
in
test
ds
es
sub
fmulp
push
cmp
shlb
jnp
push
stos
pushf
lcall
mov
gs
mov
xor
stos
dec
sti
imul
stc
in
fldl
xor
add
adc
push
mov
loopne
xor
imull
mov
jle
pushf
lea
cmpb
jg
insb
mov
inc
aaa
jmp
and
mull
add
inc
daa
mov
sbb
das
xlat
inc
idivb
enter
cmpsb
out
ss
lds
scas
sahf
stos
jae
push
push
cmp
outsb
cld
xlat
jne
xchg
out
pop
push
mov
cli
in
push
sbb
enter
dec
popa
call
jmp
das
inc
jbe
sbb
dec
mov
dec
jnp
bnd
sbb
mov
repnz
nop
clc
push
lcall
add
dec
sarl
out
out
cmpsb
bound
xchg
rcrl
pusha
test
add
cmp
jmp
cmpsl
fwait
xchg
and
jle
cmc
xchg
addr16
cltd
repz
pop
fbld
xchg
sub
adc
dec
fwait
sti
fisubrl
sbb
jmp
icebp
imul
pop
mov
js
out
nop
bound
das
jg
xchg
xchg
jg
mov
test
jge
mov
xor
mov
xor
ficoml
roll
out
mov
xchg
add
and
enter
nop
outsb
call
pusha
addb
ficompl
mov
push
sbb
pop
mov
mov
cmp
xor
mov
lods
shll
lods
mov
sbb
jb
repnz
aas
popf
fdivl
push
mov
cltd
jl
int
and
xchg
shrb
cltd
push
movsl
pop
sbbl
push
int3
cmp
out
jo
hlt
imul
movsl
cli
inc
cmp
mov
mov
outsb
xchg
jle
mov
jbe
cmp
jno
cmp
loop
dec
repnz
aad
mov
in
cmc
dec
lds
xor
imulb
outsb
leave
cltd
push
xchg
jbe
sti
inc
add
insb
arpl
stos
lock
test
fsubl
xor
dec
imul
mov
adc
push
pop
pop
xlat
stos
sahf
insl
psubsb
and
dec
sarb
mov
aam
pop
test
cmp
mov
push
lods
or
in
stc
pop
xchg
dec
xchg
fidivl
mov
scas
loopne
xor
or
push
ret
test
xor
push
push
xor
or
stc
push
mov
jge
mov
test
jecxz
outsb
adc
mov
out
push
jmp
int3
xorb
pop
mov
andb
enter
iret
xor
aam
shl
push
lret
jno
xor
stos
int
jp
mov
inc
cld
pop
mov
mov
lret
movsb
or
mov
es
cmpsl
push
xchg
stc
mov
sbb
xchg
sbb
outsb
pop
sbb
iret
or
adc
jp
and
int
int3
push
daa
push
das
mov
fsts
mov
scas
add
mov
pop
inc
daa
arpl
mov
fsubrl
xor
mov
aas
jecxz
adc
aad
xchg
in
lcall
imul
jnp
hlt
inc
mov
stos
lea
jge
mov
mov
out
aaa
or
mov
sbb
mov
push
jnp
xlat
aam
jo
push
inc
cltd
roll
mov
push
out
xlat
add
icebp
sbb
cmpsb
lods
jo
jno
loope
fidivs
popl
or
inc
xor
mov
out
flds
loope
xor
add
mov
out
pop
andl
insb
add
stos
mov
xchg
nop
lea
int
out
dec
int
push
aaa
test
js
ror
adc
orl
xlat
cli
movsb
mov
lea
pop
and
mov
pop
pop
pop
xlat
fistl
dec
pop
dec
lock
flds
arpl
mov
jge
pop
xor
test
lock
ja
jl
popa
dec
aad
xlat
pop
fcoms
gs
xor
or
xchg
shll
xor
jp
pushf
test
sub
pop
ret
push
or
mov
mov
cs
mov
and
jmp
push
aad
sbb
das
fs
jo
fimuls
mov
mov
mov
inc
ret
jecxz
andb
push
jecxz
cmpsl
jmp
mov
dec
jg
sarl
scas
inc
sub
push
sbb
push
jnp
jp
jp
negb
lds
pop
fs
jb
xchg
cmp
movsl
mov
mov
or
arpl
cmpsl
add
scas
jb
mov
rcrb
lock
ljmp
pop
sahf
push
xchg
clc
sub
aas
testb
xor
pop
mov
ss
mov
movsl
or
fisubl
in
xchg
movsl
jl
pop
lock
test
dec
or
daa
push
sub
test
seto
fiadds
inc
aad
mov
dec
pop
or
pushf
in
dec
mov
push
or
clc
xchg
daa
sub
cmp
insb
mov
stc
movups
or
mov
lahf
sti
js
dec
mov
inc
xor
mov
js
mov
pop
add
and
clc
je
mov
jg
movsl
and
jle
lahf
repz
enter
aas
les
punpckhbw
xor
mov
cmpsl
jo
test
scas
addr16
jnp
jmp
dec
xor
cli
pop
xchg
dec
mov
mov
add
ss
out
xchg
xlat
jg
dec
xchg
out
pop
adcb
add
leave
or
jl
movb
add
fildll
lcall
push
out
jmp
mov
jns
hlt
mov
jp
ljmp
call
les
mov
mov
add
inc
and
imul
push
sbb
lock
das
icebp
adc
sarl
es
stc
push
hlt
stc
cmpb
dec
xor
xor
es
cmp
shll
bound
push
call
pop
enter
mov
xchg
add
mov
and
dec
xchg
xchg
jg
dec
sahf
mov
xor
iret
testl
shr
dec
ja
sub
daa
mov
ds
sub
push
mov
xor
ja
lahf
add
fstpl
push
xlat
shlb
ficoms
mov
mov
and
dec
xor
jae
sti
inc
xor
jg
mov
mov
adc
mov
std
pop
test
xor
movsl
jbe
or
xchg
push
stos
push
mov
int3
push
je
adc
iret
and
push
jae
fwait
imul
cmp
jb
js
icebp
xchg
mov
or
mov
add
lds
das
int
push
jle
sbb
push
sbb
int3
or
adc
mov
sbb
cli
pusha
jbe
movsb
ljmp
xor
sub
push
mov
int3
xchg
rcll
lods
sbbl
insb
mov
xchg
cmp
call
roll
jecxz
dec
lret
jmp
push
jmp
loop
sbb
loope
aas
add
in
mov
sbb
inc
clc
or
in
out
sub
or
int
pop
cmc
and
and
pushf
stc
arpl
mov
mov
insl
sahf
sbb
jb
fcomi
xchg
jne
sub
aaa
mov
mov
pop
repnz
sbb
dec
inc
sub
sub
stc
sbb
imul
nop
loope
inc
adc
push
xor
mov
es
xchg
adc
dec
dec
popa
push
pop
mov
lea
xor
push
insb
ja
inc
jno
out
idiv
iret
cwtl
pop
push
in
outsb
xchg
jno
xchg
shlb
in
into
jmp
packsswb
inc
sub
push
frstor
sbb
stos
push
mov
xor
dec
jl
dec
mov
push
add
mov
shl
addr16
pop
les
cmp
sbb
jmp
add
pop
adc
aaa
or
das
add
inc
inc
adc
and
push
sti
movsl
push
lods
xlat
outsb
push
inc
daa
mov
inc
push
xor
aas
scas
sub
loopne
imul
pop
add
call
cli
fs
inc
ret
enter
adc
pop
scas
in
add
mov
push
adc
fsubrl
fisubs
cwtl
xorl
ja
push
sub
mov
jne
mov
into
aaa
pop
push
mov
in
mov
out
repnz
outsb
mov
pop
aaa
mov
inc
lret
sub
xlat
mov
mov
mov
testb
fidivrs
repz
xor
jecxz
arpl
je
rorl
xor
imul
inc
mov
nop
cmp
test
insl
aad
fildl
inc
push
add
or
cltd
bound
flds
mov
repnz
mov
mov
inc
inc
lcall
xchg
cld
or
lret
cmp
rol
xor
inc
pop
xchg
into
xchg
imull
nop
sbb
mov
cwtl
xchg
and
test
cmp
inc
jns
fbld
sti
add
shlb
ret
das
dec
fidivrs
test
mov
dec
fldt
sub
cmp
pop
mov
shr
pop
nop
sbb
hlt
jp
push
out
movl
mov
mov
je
mov
mov
stos
xor
inc
inc
push
das
les
rcrl
stc
int
imul
and
mov
cmc
arpl
jle
gs
insl
pop
sub
inc
jmp
xchg
adc
jl
pop
cmp
cwtl
inc
pop
push
out
pop
cmp
int3
cmc
jmp
into
xorb
int
adc
orb
cmp
dec
adc
adc
xchg
add
mov
pop
mov
fstl
mov
das
lea
int3
pop
and
push
jnp
lret
fstps
pop
fidivrs
imul
fnstenv
mov
test
jecxz
xlat
jne
mov
jge
fwait
cmp
push
movd
cmp
mov
add
loopne
loope
cmp
mov
sub
jno
rolb
test
das
cwtl
das
or
fadd
cmpsl
out
out
sar
sub
scas
push
pusha
sub
pop
dec
xchg
cs
or
js
inc
faddp
test
loope,pt
js
adc
mov
jnp
xchg
aas
xor
popa
rcl
rorb
inc
roll
pop
push
push
stc
clc
in
pop
sti
jb
sbb
test
aam
iret
jp
sub
mov
sti
arpl
inc
cmc
int3
cld
mov
lret
cs
sahf
repz
sub
mov
pop
in
scas
add
jl
push
fnsave
int3
rcrl
inc
sbbb
adc
pop
push
push
adc
out
hlt
and
pop
cmp
out
inc
out
loopne
cmpsl
fmuls
and
push
es
add
push
mov
mov
mov
ja
sbb
dec
inc
cmpl
cmp
push
jns
xchg
and
jle
mov
aad
and
aaa
hlt
mov
aad
fstpt
mov
dec
mov
daa
jmp
arpl
out
rcr
adc
sbb
mov
lds
insl
push
les
in
xor
and
xor
xor
inc
addr16
cli
jnp
movsl
fsts
test
xor
jae
mov
clc
in
cmc
xchg
dec
pusha
rcrl
loop
push
xlat
and
into
cmc
repz
jns
test
inc
xchg
cli
insl
outsl
in
scas
dec
jbe
push
pop
shlb
xor
popa
pop
movsbl
pop
xor
dec
sbbl
fincstp
mov
test
mov
bswap
jge
push
pop
xor
cmp
add
pop
fwait
push
jle
xchg
mov
sub
jno
out
jbe
test
mov
jmp
mov
ss
inc
test
cmpsl
das
sbb
into
jns
pop
fsubs
lods
roll
add
xchg
sub
xor
cmp
xor
mov
movsl
nop
cmp
jo
call
lret
and
adc
mov
sub
xor
inc
aam
aad
dec
jl
xchg
jle
jbe
loopne
mov
outsb
rclb
ss
or
add
cwtl
adc
pop
cmc
mov
addb
scas
scas
fwait
es
mov
mov
pop
es
pop
push
dec
lds
dec
lds
mov
dec
xchg
dec
insb
rolb
sti
and
dec
add
or
jmp
test
xchg
mov
shll
int
je
xor
subb
addr16
jns
ja
lock
jo
mov
out
pop
fs
fadd
add
ret
and
dec
jge
cld
fldt
mov
popf
das
clc
lds
mov
mov
mov
pop
test
callw
push
inc
mov
ss
inc
lods
push
add
movsb
bound
icebp
push
fcomps
int
sbb
jae
hlt
sahf
push
push
mov
ret
dec
mov
mov
mov
sbb
mov
lret
addr16
push
arpl
mov
subl
faddl
jbe
leave
and
fadds
test
inc
bound
inc
arpl
int3
lock
cmpsl
jae
lcall
xor
mov
xchg
jecxz
in
push
jge
jl
and
dec
dec
rcrb
mov
pop
adcb
dec
ss
sub
mov
lcall
xor
imul
outsl
addl
test
adc
dec
xor
mov
xor
dec
mov
fstpl
or
stc
test
imul
jns
in
cmp
loopne
and
and
mov
cmpsl
stos
das
fldl
mov
test
orb
in
mov
out
cmpsl
das
or
mov
movsb
ja
insb
xchg
and
xchg
imul
arpl
bswap
cmpsb
subl
inc
testl
or
or
cmpsb
shlb
cmp
jns
cwtl
dec
hlt
dec
push
cmpl
fst
shrl
jo
insl
outsb
add
push
cmp
jne
rcrb
xlat
dec
jae
icebp
sbb
xchg
dec
cmpsl
lcall
or
insb
jp
push
test
and
mov
mov
lret
mov
jecxz
adc
sub
mov
popf
repz
scas
testb
cmpsl
inc
push
mov
xchg
mov
lea
xchg
and
sbb
inc
sbb
mov
add
and
xorl
pop
or
fcmovu
push
xor
or
sti
fcomi
test
or
out
repnz
jle
sbb
or
sbb
fadds
and
push
in
mov
sarb
jae
mov
cli
xchg
jae
pusha
aad
aaa
lds
dec
mov
jp
mov
xchg
adcl
mov
repnz
fisubrs
mov
adcl
andb
or
je
push
xor
cwtl
fld
ja
cmp
pop
fcoml
push
leave
aas
pop
mov
shrl
sarb
jbe
jg
mov
sub
insb
xchg
das
fistpll
pusha
shr
inc
adc
sbb
sahf
mov
jmp
pop
fnsave
mov
pusha
ficoml
icebp
mov
dec
jnp
or
mov
jecxz
sub
mov
jg
in
sub
inc
dec
out
shrb
sahf
mov
das
repnz
loope
mov
test
shlb
out
pop
pmaxub
push
icebp
scas
cmp
pusha
xor
arpl
int3
xchg
add
sub
xor
and
mov
insl
mov
mov
dec
lea
cmp
leave
mov
leave
faddl
or
cmp
leave
push
add
jns
std
cmp
aam
cli
lret
mov
and
push
sub
rcrb
inc
xchg
pop
push
jae
inc
xchg
out
mov
and
and
inc
add
lods
cwtl
xchg
inc
mov
ss
scas
gs
ficompl
add
push
lret
fdivs
mov
enter
ss
jge
hlt
out
pop
or
jg
or
fistpl
xor
add
push
xchg
dec
lods
and
xor
inc
or
dec
push
sarl
mov
jnp
adc
xchg
into
lods
mov
aas
xchg
or
les
int3
or
ljmp
test
cmp
xchg
add
sbb
aas
int3
mov
scas
aas
pusha
push
jl
or
fsubrp
repnz
jg
sub
pop
lods
outsl
in
incl
adc
jbe
mov
lods
lret
sbb
mov
sub
arpl
xchg
stc
js
dec
movsb
push
repnz
lods
outsl
or
ret
call
hlt
leave
inc
mov
inc
pop
fldl2e
clc
or
cmp
jge
xchg
jle
push
cmpsb
and
jnp
sbb
jmp
push
mov
mov
imul
movsb
in
stc
inc
mull
xchg
mov
dec
dec
xor
add
js
add
cmp
mov
pop
inc
xchg
sbb
or
push
das
mov
or
test
jno
sahf
jns
adc
int3
insl
dec
scas
dec
aam
jle
xchg
gs
push
mov
scas
outsl
lret
hlt
pop
in
sbb
fisubs
lret
inc
in
mov
negb
into
enter
cwtl
cmc
ret
or
ss
fsubl
xor
data16
aaa
outsl
rorb
push
push
inc
push
sub
fwait
cmpsb
cmpsb
xchg
dec
inc
add
shufps
mov
mov
rcll
and
pop
xchg
bound
mov
and
test
adc
adc
ja
data16
sub
cltd
mov
lret
mov
push
and
sbb
loop
shll
mov
dec
dec
push
dec
cwtl
ljmp
lock
gs
bound
mov
leave
cmpsl
and
mov
push
pop
loop
std
out
push
push
fmulp
stos
fwait
pusha
les
jmp
inc
cltd
mov
mov
adc
mov
popf
dec
pop
out
mov
fs
mov
mov
int3
or
es
sbb
mov
mov
in
sub
daa
sbb
mov
inc
jae
and
xor
jae
xchg
outsl
xchg
arpl
cmp
sti
roll
insb
les
adc
rol
or
out
inc
or
stos
nop
cli
fisttps
jge
fistl
fstpl
sub
mov
pop
jne
mov
imul
cltd
invd
and
aas
dec
outsl
sbbl
fisttpl
dec
pop
es
imul
inc
fnstenv
xchg
xor
faddl
cmp
movl
jmp
mov
dec
pop
push
adc
xchg
jns
fisubrl
scas
mov
pop
movsl
dec
stos
push
sub
aaa
push
mov
jns
xor
mov
jp
lret
mov
fsubl
sub
test
jne
stc
or
xorl
jl
lcall
xchg
mov
je
mov
icebp
cli
sub
push
adc
lds
outsl
movsb
test
rorb
testl
pusha
outsb
aad
cwtl
cmp
hlt
dec
pop
cmpsb
lcall
pop
or
add
shll
inc
ja
cwtl
jl
aad
lret
jg
mov
or
add
add
in
insb
mov
out
insb
xchg
dec
cld
dec
scas
push
cmc
push
pop
scas
pop
shll
pop
sbb
lahf
decb
lods
cltd
mov
or
adc
hlt
int
push
pusha
scas
pop
ja
out
xchg
in
out
or
or
cmp
xchg
daa
push
xchg
dec
push
ja
xchg
imul
mov
icebp
pusha
cmpsl
sub
outsb
fidivl
out
xor
push
rolb
insb
into
lods
push
repz
cmp
xchg
mov
ret
add
test
adc
mov
dec
add
je
pop
and
push
pop
mov
sub
jg
push
aas
popf
fcompl
add
xchg
pop
iret
dec
rorb
mov
mov
push
mov
aas
out
push
popf
push
ss
repnz
mov
je
and
pop
ret
movl
cmc
inc
add
mov
or
decb
addl
xchg
cmp
xor
pop
lret
sub
or
xchg
adc
nop
cmpsl
pop
imul
mov
loop
stos
mov
icebp
mov
int
add
cmp
xlat
adc
sub
mov
sahf
and
loope
lret
mov
push
adc
or
inc
cmp
lret
mov
add
lods
adc
pop
sub
mov
in
xor
sahf
aam
ja
jl
arpl
push
push
scas
test
jbe
imul
loopne
mov
shlb
iret
fidivs
push
outsl
imul
mov
xchg
aaa
sbb
cwtl
mov
das
jg
dec
cmp
aad
mov
cwtl
cltd
mov
adc
cltd
pop
pop
pusha
ret
push
xor
and
cmc
adc
adc
and
subl
mov
lea
sub
sbb
jns
int
cli
cld
xchg
hlt
push
call
adc
stos
aam
addr16
ds
insl
pushf
or
jmp
or
xchg
mov
sbb
imul
lea
jae
sub
push
fiadds
mov
addl
cld
pusha
pop
stos
push
cs
out
mov
daa
cmp
pop
or
adc
inc
outsl
xchg
iret
mov
inc
push
or
xorb
stos
push
xchg
jge
add
jp
scas
in
sahf
mov
mov
dec
dec
data16
jecxz
jns
jge
pop
leave
xchg
mov
fsubrl
pop
outsl
cmp
faddl
push
fcom
lcall
lea
mov
stos
cwtl
fidivrs
inc
cmpsb
xor
clc
sub
jle
and
repnz
cli
aam
outsb
scas
movsb
fcoml
xor
adc
loope
jp
ret
sub
dec
loop
cld
mov
repz
push
cmp
mov
sbb
stc
jp
inc
std
mov
lds
lea
cli
test
enter
push
test
push
aaa
cmp
mov
push
mov
out
aas
insl
and
push
jecxz
sub
outsl
icebp
dec
lcall
icebp
xchg
repz
cwtl
out
scas
xchg
push
adc
inc
pushf
add
xchg
stc
std
mov
xchg
xor
loop
or
imul
xor
mov
mov
data16
xchg
sarb
xor
and
and
xchg
xchg
jns
es
fwait
or
sub
jge
mov
xchg
mov
mov
sub
lahf
and
sub
sarb
push
sub
jae
xor
stos
fsubl
jns
or
in
jbe
pop
mov
mov
jbe
js
ljmp
and
jl,pt
jo
push
mov
test
popf
xor
ret
stos
pop
or
iret
imul
addr16
pop
sub
stc
test
cmp
icebp
dec
pop
loope
outsl
xchg
add
jo
sbb
mov
pop
sbb
xlat
xchg
test
or
or
mov
lods
in
cmp
in
out
fcoms
gs
mov
scas
enter
pop
xor
cmc
jb
xchg
sbbb
jg
push
jle
enter
imul
cmpsl
jae
icebp
jb
push
fsubr
jnp
xchg
xor
testb
xor
cmp
sbb
pop
add
leave
mov
aad
or
jecxz
fs
pop
sbb
mov
mov
push
add
mov
jmp
xchg
jg
pop
xor
pop
pop
push
roll
xor
loope
mov
add
mov
mov
or
ret
aas
lea
push
pusha
into
xchg
mull
stc
aaa
sub
ds
loop
or
daa
push
mov
outsl
int3
mov
jecxz
and
cwtl
dec
pop
push
push
jo
mov
inc
and
xchg
addr16
xchg
cmc
repnz
add
icebp
mov
adc
cltd
cmpsb
add
pop
jno
out
fucomp
loop
add
mov
lds
push
clc
movsb
push
les
ror
and
inc
add
in
out
jl
out
outsb
es
rcll
in
push
jg
incb
loope
dec
in
int3
scas
jmp
negb
les
pop
push
jnp
xor
sub
hlt
sub
sbb
cmp
add
rcr
jge
and
jle
jle
xchg
push
icebp
inc
arpl
jns
pop
xlat
sbb
pushf
lods
sbb
sbb
aas
jae
punpckhwd
jno
mov
pop
lods
scas
push
mov
ret
sbb
in
jne
fwait
or
push
adc
gs
ret
mov
mov
cltd
enter
xor
and
xchg
dec
flds
icebp
add
push
test
ss
add
ret
mov
and
repz
mov
outsb
cld
or
and
js
cmpsl
mov
jmp
outsl
gs
int3
test
push
roll
jmp
mov
leave
mov
cmp
ss
fsubr
mov
dec
mov
pop
lcall
jae
call
fldl
mov
push
mov
ds
adc
in
inc
push
sti
xor
ficoms
scas
push
push
or
xor
nop
mov
push
and
les
cmp
aaa
sbb
shr
rcr
mov
mov
mov
mov
sbb
mov
cli
in
mov
pop
das
pop
mov
jge
nop
jp
cld
addl
outsb
sub
lcall
xor
xchg
into
les
sbb
insl
andb
add
ds
int
das
xor
jnp
xlat
mov
popa
into
or
xchg
mov
adc
daa
xor
fists
sub
cmp
pop
setge
fdivs
push
xor
pop
jbe
jge
jmp
mov
jge
pop
add
push
or
fmuls
into
pop
xor
pushf
mov
shll
dec
mov
mov
rorb
xchg
mov
xchg
xchg
inc
sti
pop
add
xor
and
add
push
in
addb
mov
sbb
inc
jne
mov
outsb
fisttps
xchg
iret
scas
fisubrs
std
rcrl
or
xor
add
dec
out
sbb
lahf
cmp
ret
loope
in
test
ds
mov
sbb
mov
push
mov
dec
mov
es
movsl
dec
and
popf
lret
rcll
inc
or
push
popa
test
movsl
pop
fiadds
pop
repz
xchg
xor
out
sbb
add
dec
idiv
or
adc
scas
shlb
dec
inc
sub
xchg
xchg
mov
cmp
test
xor
sbb
dec
pop
ret
dec
mov
out
cltd
or
sub
call
lods
insl
pop
xlat
add
icebp
pop
test
pop
in
jl
js
ffreep
movsl
movsl
or
jo
xchg
lret
bound
sti
xor
lea
pop
sub
lcall
movsb
lods
in
movsb
loopne
lds
xchg
iret
add
xor
or
jns
sub
insl
fcoms
xor
call
lret
sub
aaa
bound
push
mov
mov
cmpsl
mov
inc
xor
mov
adc
lahf
inc
dec
xchg
or
mov
data16
rcll
gs
cli
add
scas
cmpsl
clc
mull
mov
push
popl
lods
sbb
outsl
cld
cmp
pop
mov
xchg
mov
xchg
mov
mov
and
push
pusha
stos
int3
and
pop
pop
fsubrs
punpckhwd
sub
xchg
mov
or
push
lods
in
and
bound
daa
mov
stos
ret
into
fisttps
xor
std
cs
andl
aas
hlt
int3
test
fwait
cmp
mov
fwait
sahf
fcompl
jnp
loope
lahf
cmp
inc
xchg
xor
addl
rcrl
negl
mov
jbe
in
cld
mov
repnz
inc
insl
dec
and
sub
outsl
and
in
sbb
xchg
rclb
sub
xor
push
ljmp
jle
in
sbb
pop
xchg
sub
cmp
mov
jmp
jge
ret
gs
adc
in
sbb
inc
mov
cmp
push
lret
setae
mov
xor
in
mov
imul
outsl
cmpsl
cmp
insb
xor
in
jecxz
pop
add
cmp
lret
fsubs
cli
pusha
outsb
push
push
jmp
les
pushf
mov
jnp
push
sbb
add
sbb
test
fistps
call
adc
or
add
inc
cmp
mov
mov
out
and
icebp
jbe
fmull
push
pop
fwait
jle
sub
aaa
sub
addr16
cmp
iret
negl
in
dec
out
call
aam
cmpsl
mov
mov
movsb
jns
adc
enter
mov
add
inc
iret
pusha
leave
repnz
cld
add
aam
adc
cmp
es
adc
mov
push
or
cmp
loop
and
jge
lods
fildl
xor
pop
add
inc
sub
fldenv
cmc
sbb
int3
sbb
inc
in
pop
fdivr
mov
mov
test
mov
sarb
inc
push
push
mov
test
je
push
ficoms
andb
stos
lahf
or
scas
fildll
or
cmp
shr
mov
lahf
enter
jmp
add
or
jp
xor
xchg
iret
imull
imull
test
dec
and
imul
loop
xor
add
xchg
pop
jns
mov
jecxz
dec
mov
jae
sbb
push
sub
arpl
sub
test
adc
mov
and
cld
in
or
roll
adc
xchg
push
lods
add
push
jl
mov
and
sahf
mov
jnp
icebp
sbb
aas
xor
sbb
xchg
test
movsb
lahf
and
push
sub
push
xchg
and
mov
sub
nop
mov
and
sbb
xchg
dec
hlt
in
sti
cli
in
jae
nop
pop
pop
bound
outsl
loopne
fisubl
and
lock
add
mov
sub
insl
sbb
cli
mov
sbb
ficoms
inc
ljmp
xor
xchg
iret
fwait
cmpsl
mov
jle
push
orb
int3
stc
add
add
pop
arpl
cmp
mov
mov
in
xchg
int3
push
jg
dec
sahf
outsl
sbb
test
lods
mov
sub
dec
push
aaa
adc
mov
lock
ret
sbb
clc
dec
pop
idivb
aas
mov
daa
fwait
or
repnz
add
sbb
jnp
xor
ret
stos
fwait
daa
sahf
stc
movsb
test
stos
int3
xor
pop
fidivrs
in
adc
andl
mov
popf
mov
dec
cwtl
adc
mov
or
movb
or
xchg
fucom
fs
xchg
or
adcl
cmc
insb
loope
js
sub
inc
adc
or
add
data16
stos
popa
dec
fisttpl
cmc
and
int3
xor
jbe
test
xchg
lds
xlat
repnz
dec
idivb
adc
mov
sub
cmc
fcomps
mov
inc
add
daa
sbb
cmp
mov
inc
cmp
mov
jno
imul
pop
aad
inc
test
jg
dec
sbb
push
adc
pop
lock
mov
sub
daa
fs
test
rcl
push
xchg
mov
cmp
pop
or
lock
xlat
fsubrl
insb
and
std
xlat
je
push
push
das
ficompl
sahf
sbb
cmc
jae
adc
push
push
pop
jl
mov
and
push
xor
daa
out
sbbb
popf
test
mov
sti
roll
fsubrl
and
xor
mov
lcall
xchg
fs
in
fiaddl
mov
or
xchg
xchg
or
ds
pop
and
aas
in
xchg
and
lods
inc
mov
lods
add
test
sbb
ror
outsb
and
aam
scas
or
rorb
jns
mov
xchg
jmp
fbstp
cltd
shlb
mov
shl
xor
push
cmpsb
iret
push
mov
push
dec
push
rorl
jbe
and
dec
leave
mov
pop
test
stos
inc
inc
repnz
js
shlb
push
lea
mov
sarl
stos
and
mov
cltd
inc
or
mov
dec
lods
repz
loope
adc
inc
test
call
imul
lret
sbb
sarl
pop
das
push
in
aas
mov
cmp
xchg
aas
sub
jb
or
or
addr16
jno
push
or
in
jae
adc
das
xor
fsubrs
mov
lock
mov
or
test
in
xor
cmp
sub
ss
add
xchg
in
lret
insl
lods
or
subb
cmp
pushf
gs
pop
int3
les
mov
or
cmpsl
mov
sub
push
mov
dec
cmp
dec
add
xor
imul
adc
hlt
xlat
pop
xchg
mov
mov
add
ret
xorb
mov
andl
push
aad
jbe
cmp
cmp
outsb
push
pop
test
mov
rorb
aad
sbb
pusha
and
adc
push
push
and
mov
push
out
cltd
cmp
xlat
xchg
sub
stos
pop
mov
es
xor
cmpsb
and
mov
cld
icebp
xlat
fsubl
loop
and
mov
loope
add
insl
push
inc
inc
xlat
cmp
es
add
sub
add
sbb
mov
popa
fs
es
cld
pop
fwait
dec
pop
ja
mov
test
pop
sbb
jmp
orl
outsl
bound
scas
shr
dec
les
stos
dec
repz
cmp
push
lds
arpl
loopne
int3
and
xor
dec
cmc
sub
lea
xor
cs
xchg
xchg
scas
test
frstor
test
add
sbb
negl
lret
pop
xor
out
cs
nop
ficoms
iret
ror
and
cli
mov
inc
sub
hlt
and
sub
ja
inc
sbb
pop
inc
dec
lahf
jecxz
sbb
nop
outsl
cmpsb
fwait
or
and
mov
add
adc
add
lret
popf
sub
test
mov
cmp
ret
out
test
jmp
pop
pop
movsl
xchg
aad
nop
cmpsb
adc
lahf
in
pop
shlb
movsb
shll
fdivrl
adc
test
stos
or
pop
call
mov
orb
js
and
xor
mov
mov
or
icebp
jb
cmp
ror
je
mov
subb
jns
shrb
test
fs
in
jne
test
jns
mov
jae
out
rcrl
inc
lret
jge
push
idiv
mov
setns
shrb
ds
cwtl
aas
pop
sbb
xlat
loopne
rcrl
insb
fcmovu
mov
or
dec
std
jno
xor
adc
mov
dec
into
ret
sbb
mov
mov
pushf
mov
adc
xor
dec
outsb
push
mov
stos
or
xlat
cmpsl
stos
and
gs
mov
repnz
add
je
push
mov
stc
inc
xchg
fisubl
ds
test
int
aaa
sbb
fmul
test
xchg
push
cs
inc
lods
mov
sar
aam
jl
mov
mov
icebp
jle
es
jl
mov
adc
test
pop
and
imul
ds
mov
jmp
sahf
aaa
out
adc
leave
mov
mov
in
xchg
flds
cmc
cltd
jle
or
cli
jae
addl
push
xor
pop
jp
add
sti
mov
subl
mov
dec
idivb
cmp
testb
sbb
jnp
jg
cwtl
ljmp
push
cwtl
cmp
xchg
rclb
test
inc
and
dec
sahf
xchg
adc
mov
filds
iret
dec
and
aad
and
in
xchg
pop
out
cmp
or
xchg
inc
pop
int3
xor
xchg
cmp
sbb
cmp
stc
adc
popa
inc
sbb
mov
or
pushf
dec
mov
or
mov
inc
cmc
and
icebp
lods
addl
mov
adc
sti
icebp
fdivrl
insb
pop
xor
xchg
test
mov
std
push
xlat
push
aas
dec
xor
adc
mov
sub
adc
lods
sub
cmpsb
mov
mov
lcall
fidivs
xchg
cmp
mov
fcoml
repnz
sub
inc
testb
sbb
jmp
sbb
cmp
shll
ret
ljmp
xlat
call
pop
push
pop
or
aas
mov
mov
test
push
sbb
enter
in
fdiv
cmp
xlat
out
mov
mov
popf
mov
fcoms
add
mov
push
cmpsb
jnp
mov
std
mov
or
or
inc
inc
mov
imul
insl
add
daa
xchg
scas
movsl
out
pop
sbbb
dec
mov
ljmp
jmp
mov
dec
loopne
inc
mov
or
push
xor
roll
insb
mov
jg
cmpl
lret
inc
scas
mov
fcoms
cs
repnz
std
jne
gs
filds
das
out
leave
sbb
or
inc
inc
cmp
movsl
test
das
lret
mov
mov
outsl
leave
aas
jb
lret
in
test
divl
add
xor
fcmovnbe
dec
fcomps
pusha
bound
scas
and
stos
inc
dec
iret
fwait
in
ljmp
imul
hlt
test
js
loop
jl
add
and
ret
outsb
rcr
jge
jp
add
int3
push
jnp
rcrb
dec
add
shll
add
fildl
adc
push
js
cltd
push
repnz
dec
js
adc
popa
in
mov
xchg
jb
xor
rcrl
test
dec
sbb
test
jl
addr16
rol
call
sbb
pop
test
fstl
add
dec
icebp
inc
xchg
ds
push
iret
neg
jb
push
mov
pop
mov
sbb
and
pop
repz
jmp
adc
xchg
rolb
jp
pushf
testb
outsb
loopne
lret
out
and
mov
or
sub
sarl
add
pop
dec
fdivp
pusha
mov
pop
pop
inc
call
js
stos
mov
pop
icebp
fidivl
in
mov
sbbl
pop
shlb
leave
xchg
cmp
shl
pop
lea
cmp
pusha
std
in
test
sub
adc
addr16
repnz
shr
adc
sysexit
mov
in
hlt
or
xchg
lods
sbb
jl
jmp
inc
xchg
xchg
jle
pop
aaa
push
negb
ljmp
jle
jl
hlt
out
mov
fnstcw
lods
mov
pop
jae
es
dec
xor
ret
xchg
aam
cmpl
ja
xchg
cmpl
cmc
cmc
bound
fs
lret
stos
imul
jae
mov
dec
adc
sahf
in
mov
inc
mov
pop
shufps
xlat
xchg
rorl
jbe
and
sbb
nop
sbb
jno
cmp
mov
pop
add
paddusb
hlt
jecxz
aad
mov
mov
mov
push
bound
rclb
push
sub
outsb
sub
jnp
push
std
lock
dec
add
int
dec
jmp
int3
int3
xor
stos
xchg
aad
ljmp
es
cmc
push
sbb
mov
in
inc
ret
js
mov
inc
inc
testb
loopne
aas
and
pop
cmpsl
not
jg
jno
out
jo
leave
add
mov
xor
in
daa
dec
daa
insl
dec
loopne
fnstenv
adc
jecxz
shl
stc
subl
inc
ljmp
cmpsl
int3
mov
insb
mov
pop
icebp
sti
cmp
dec
dec
sbb
adc
jns
mov
cli
jl
lea
rclb
in
add
insb
cwtl
push
xchg
push
adc
scas
cmp
stos
mov
sbb
sub
repz
xchg
call
lods
ds
mov
mov
ret
pop
or
pop
push
push
push
jbe
lcall
outsl
and
cmp
stos
aas
jae
sub
xchg
jmp
xchg
sub
loope
jl
js
dec
jge
loop
xchg
and
push
jne
sub
nop
loope
mov
movsl
jae
in
sbb
hlt
or
nop
fldcw
jno
cmp
jmp
inc
in
ret
lock
js
repz
sbb
out
aas
jno
div
jae
mov
cwtl
add
incb
sub
loope
xor
mov
repz
mov
pop
stos
outsl
add
iret
jns
push
cwtl
std
jnp
ss
fsubrl
sahf
inc
orb
fisttpl
insb
lods
mov
mov
hlt
imul
sahf
cltd
push
dec
mov
xchg
sbb
mov
pop
adc
push
and
insl
xor
and
nop
in
aam
scas
cmp
repnz
mov
push
jecxz
bound
push
xor
adc
sar
xor
mov
jo
push
xchg
aad
out
xchg
xchg
iret
jno
and
ret
fcmovnb
mov
mov
push
inc
cld
jecxz
xchg
jecxz
or
push
sbb
lret
fcomps
cwtl
or
push
push
push
jns
xchg
cltd
dec
or
pop
sub
imul
popf
ja
add
aas
test
ret
int
or
int3
pop
icebp
jl
cmp
mov
ret
mov
inc
and
imul
lods
mov
push
mov
scas
or
pop
and
xor
sub
pop
pop
xchg
aaa
add
xchg
subl
cmp
faddl
jmp
shlb
sbb
and
lods
stos
daa
push
push
mov
lock
out
arpl
jnp
jge
mov
cmp
xchg
es
sbb
aad
adc
fiadds
popl
add
adc
fwait
xchg
xchg
arpl
mov
test
adc
mov
jne
xor
jge
movsb
adc
xor
and
daa
jns
popa
jge
mov
cld
pop
out
xor
repz
movsb
mov
push
outsl
imul
cmp
xchg
in
shlb
mov
sbb
outsb
fistl
hlt
sub
clc
cmp
mov
jb
dec
sbb
sti
es
in
incb
and
push
mov
xchg
and
mov
cmp
lret
xor
das
jne
in
and
pop
mov
arpl
mov
stos
inc
cs
lret
jb
lock
mov
and
popa
bound
hlt
sbb
shrb
xor
mov
test
sbb
inc
inc
cmp
mov
mov
adc
cld
loope
push
test
ret
adc
add
xor
ja
rclb
pop
push
addl
adc
bound
sarl
lods
add
adc
into
inc
addr16
mov
out
sarl
in
fiadds
lcall
sub
push
js
mov
ret
dec
adc
shll
sti
push
sub
mov
lods
popa
call
sbb
mov
adc
inc
pop
cmp
pushf
xchg
cmp
je
in
in
dec
nop
cmp
xor
clc
inc
mov
cmc
dec
enter
loopne
test
int
sub
and
xor
ss
outsl
jp
mov
jne
xchg
cwtl
jne
nop
pushf
ds
sbb
push
pop
aad
xchg
mov
popf
cld
and
xchg
test
push
add
std
mov
rcll
repz
faddl
mov
fsubrp
dec
pop
lea
cld
xchg
icebp
xchg
push
int
xchg
lods
iret
dec
cmp
mov
add
pop
sub
nop
stos
or
xor
clc
aam
cmp
jb
in
fcmovu
movsl
fimull
xor
insl
inc
stos
lret
popf
jb
iret
stos
sbb
jb
int3
sub
xchg
test
push
lock
inc
daa
sub
outsb
test
sub
out
cmpsb
push
push
sbbl
adc
popa
cmp
insb
sahf
jle
mov
sbb
loope
add
mov
fcoml
and
aaa
pop
inc
dec
jb
mov
mov
addb
test
arpl
xlat
mov
mov
push
clc
mov
push
sub
dec
push
dec
test
dec
iret
or
xchg
movsl
sbb
bound
mov
and
adc
test
xlat
scas
xor
int3
xor
lds
mov
hlt
lret
mov
lret
aam
adc
mov
cld
enter
pop
hlt
out
jae
inc
ret
fdivr
sub
pusha
cmc
sbb
test
and
push
fistpl
jecxz
jns
loopne
cwtl
test
inc
ds
test
lcall
push
adc
inc
sbb
jg
jns
sub
pusha
clc
jno
dec
dec
mov
adc
scas
cmp
lcall
inc
add
xor
and
std
jg
dec
xchg
lock
fistpl
bound
xchg
shr
fiadds
push
clc
cs
stos
add
test
mov
stc
lods
or
fcmovb
and
sub
rcr
lds
sub
psubb
loope
in
lret
in
sti
and
mov
test
xor
mov
sbbb
mov
sub
xchg
jno
cwtl
rcll
int
inc
fcmove
cltd
sbb
jecxz
add
adcb
sbb
mov
adc
adc
cmpsl
and
fs
enter
ja
pop
pop
add
cmp
xchg
cs
aaa
xor
lds
add
mov
fldl
mov
bound
stc
call
into
dec
outsb
pushw
jns
test
dec
add
sarb
lret
pop
mov
ds
adc
add
push
mov
xor
push
pop
in
sbb
mov
jo
xchg
dec
fcompl
add
movsb
arpl
push
nop
notl
rclb
pop
je
inc
loope
xor
insb
jae
and
leave
rorb
sub
int3
or
dec
mov
mov
add
inc
mov
xchg
iret
ja
xor
outsl
or
sbb
xchg
div
jbe
out
sub
ret
movsb
lods
mov
clc
neg
test
test
aam
je
cmp
xchg
ficoml
mov
or
and
pop
or
jne
xchg
aaa
inc
xchg
dec
adc
cmpl
das
jno,pt
xchg
mov
mov
jle
dec
pop
int3
fwait
sub
jge
xchg
enter
mov
cmp
pushf
aad
movsl
fmul
fldl
stos
xor
scas
pop
scas
sbb
and
sbb
mov
in
ja
xor
test
call
ds
subb
push
in
mov
xor
out
jb
dec
sub
and
inc
or
pop
rcrl
outsb
sub
sub
movsl
hlt
loope
test
xchg
xchg
rclb
mov
imul
xchg
mov
sub
cmc
cmp
fldt
pushf
push
cmp
dec
jle
popa
jae
int3
add
xchg
mov
adc
call
fcmovnbe
repnz
push
push
mov
cmp
inc
pop
mov
push
mov
add
pop
adc
inc
sbbl
call
push
mov
leave
gs
lahf
sub
andb
stos
mov
ja
in
les
mov
ret
pop
dec
out
cmp
or
sarb
push
cmp
lcall
ljmp
push
stos
xor
push
jno
hlt
lods
jg
test
xchg
xchg
je
pop
cmp
rol
cmp
xchg
icebp
lahf
cmc
scas
pop
mov
rclb
addr16
ficompl
sub
arpl
adc
test
fnstcw
notl
sbbb
pop
jae
add
mov
lret
stos
push
push
adc
shr
xchg
mov
aad
jg
xor
mov
pop
cmp
rcr
cmp
out
stc
cmpsl
jbe
aaa
mov
arpl
subb
dec
and
cmp
jg
dec
adcl
jne
mov
xor
stc
dec
pop
imul
fdiv
dec
bound
test
mov
and
fadds
and
gs
dec
mov
fcmovu
rcll
dec
unpckhps
js
inc
ret
mov
adc
xor
mov
and
loop
push
int3
movsl
les
scas
or
lea
mov
push
xchg
les
mov
push
stos
mov
ficoml
ljmp
or
notl
jne
inc
add
push
push
in
sbb
xchg
pusha
xor
dec
add
adc
xchg
dec
repnz
addr16
std
jecxz
push
xor
mov
fistpll
aam
out
mov
popf
lods
mov
mov
int3
test
enter
cli
loopne
pusha
out
push
adc
scas
stos
imul
lahf
test
adc
orl
sub
push
shll
push
xor
out
sub
lods
sub
xchg
sub
imul
test
js
arpl
dec
dec
push
inc
rcr
or
in
add
xor
imul
lods
mov
inc
push
jae
add
stos
nop
call
in
xchg
sbb
sub
mov
lcall
test
orb
push
jnp
pop
push
sbb
das
in
lret
cs
pop
test
push
pop
inc
addr16
pop
jl
jae
fistps
inc
sbb
hlt
shrb
in
lods
dec
mov
push
xor
pop
addr16
sbb
fnstcw
and
repnz
pop
lods
pop
aad
enter
outsb
or
movsb
inc
stos
popa
sub
push
pop
incb
dec
gs
loopne
loop
mov
das
fwait
or
add
mov
mov
pop
clc
addr16
shlb
mov
add
imulb
movsb
cltd
xor
cmp
mov
icebp
push
fdivrp
hlt
sub
rorb
icebp
aad
xlat
pop
lcall
addr16
inc
bound
fidivs
movsl
scas
mov
sahf
inc
mov
or
push
pop
and
or
pop
lea
cmp
xlat
pop
int3
add
jecxz
mov
rdpmc
push
sbb
stos
iret
sahf
fwait
mov
in
add
or
pusha
out
jge
xlat
xchg
inc
push
cmp
push
xchg
mov
jmp
adc
test
or
pop
movsb
loope
in
pop
stos
adc
sbb
out
or
mov
scas
or
shl
cli
jmp
and
or
or
shrb
movsb
les
stos
lods
lock
cmc
xlat
xchg
xor
sbb
shrb
daa
mov
mov
mov
jl
clc
sbb
inc
imul
shll
clc
cmpsl
ljmp
fmul
pusha
negl
and
jl
mov
fcoml
int
jne
pusha
jno
in
and
mov
mov
ss
inc
int
and
call
jne
bound
push
cmpsb
ljmp
pusha
xor
dec
dec
adc
mov
fisttpl
loopne
push
xchg
pop
aad
jge
cmp
dec
fisubrs
xor
sbb
xlat
xor
bound
lods
mov
xchg
iret
mov
subl
les
les
fisubl
pop
fwait
jbe
lods
test
aas
pop
jg
insb
fistl
rcrb
lahf
sahf
xor
push
loop
xlat
movsl
mov
out
aas
dec
test
add
enter
mov
push
lsl
ret
call
mov
repnz
lds
dec
ret
push
mov
cmp
addl
mov
mov
movsl
xchg
es
pop
adc
dec
out
lock
dec
cmp
into
aad
jns
and
sub
mov
cli
pop
mulb
aas
adc
jp
das
push
test
or
addr16
lods
push
or
cmp
adc
lds
xchg
push
mov
cmp
aad
icebp
call
pop
test
into
mov
jl
push
mov
push
dec
jmp
cmp
pop
ds
mov
mov
push
inc
jge
mov
push
loopne
adc
jmp
pop
jo
and
sub
inc
lahf
cmpsb
repnz
imul
lock
dec
mov
test
inc
adc
sub
sahf
jp
icebp
mov
dec
xchg
ret
sbb
and
lds
add
mov
fdivrl
mov
out
icebp
sti
add
jmp
into
cmp
push
loope
cli
mov
in
push
push
cmp
add
in
andb
data16
inc
scas
push
ret
mov
pop
add
fsubl
aam
sbb
out
pushf
fistl
out
xchg
mov
cmp
xchg
bound
aam
xchg
jbe
icebp
push
xchg
rcll
shl
mov
int
sub
imulb
cli
ja
out
jecxz
mov
mov
loop
mull
mov
cmpsb
xchg
js
cltd
stos
xor
in
stos
cltd
insl
ret
pop
add
sysret
dec
sbb
and
xchg
mov
je
xlat
repnz
fs
loopne
lret
sub
and
xchg
push
cmp
shr
sub
and
xchg
cmp
movsl
push
cmp
aaa
imul
push
or
scas
jns
bound
jbe
mov
push
push
add
inc
mov
sbb
adc
ja,pn
mov
fdivp
xor
aaa
mov
mov
fistpl
js
fldt
pop
das
scas
cmp
lds
imul
in
mov
mov
push
cmpsb
sbb
pop
add
fnsave
adc
ret
in
enter
push
xchg
pop
mov
ror
lret
movsl
ret
mov
imul
jne
stos
xchg
mov
sub
jb
mov
std
jle
mov
ljmp
jp
aad
sahf
mov
dec
dec
cmp
pop
mov
data16
inc
add
subb
int3
js
adc
ret
dec
mov
sub
into
push
outsb
jb
and
cmp
lret
mov
add
mov
or
movsb
fisttpll
lret
mov
dec
cmpsl
test
in
dec
jae
sbb
jecxz
lcall
int3
mov
push
cs
and
aas
add
js
stos
int
inc
push
push
fiaddl
scas
test
iret
inc
sti
cmp
adc
mov
mov
aas
mov
push
call
mov
pop
pop
mov
enter
and
mov
push
imul
cmp
mov
mov
lahf
xor
xchg
mov
stos
ret
imul
jno
xchg
movsl
xchg
mov
dec
jne
push
popa
and
out
out
lcall
addr16
xor
imul
xor
add
arpl
mov
out
mov
imul
jmp
repz
pusha
add
mov
dec
inc
pop
sbbl
call
rorb
pop
jb
aam
cmp
insb
in
ret
insb
cmpsl
test
jmp
mov
jle
nop
fdivs
lods
pusha
xchg
jns
mov
sbb
sbb
int3
test
bound
dec
int
clc
sub
jp
or
leave
mov
pusha
adc
out
popf
lcall
test
leave
pop
adc
negb
cmp
sbb
adc
cmp
ret
mov
cmovae
pop
push
push
cmp
or
or
xor
sub
leave
mov
lods
mov
cmp
scas
cmp
aas
jmp
cmp
mov
push
in
push
sti
fsubs
adc
add
and
mov
popa
rclb
adc
xor
loop
mov
inc
in
xor
or
jno
jb
arpl
jge
ljmp
mov
dec
inc
jecxz
test
push
pop
jge
mov
test
negb
mov
ja
cmp
ret
imul
in
jo
add
repz
push
lock
add
mov
stos
movsb
std
inc
ret
lds
lods
jne
fbld
cmp
jmp
mov
clc
adc
mov
dec
and
mov
sbb
aam
mov
enter
stos
jnp
mov
jne
sbb
inc
shll
mov
imulb
fsubr
sahf
rclb
out
data16
rol
mov
fsubp
stos
sbb
pop
mov
add
or
in
and
dec
xchg
add
fsubrs
push
test
add
mov
pop
repz
repnz
push
int3
in
mov
jecxz
mov
outsb
int3
fisubs
mov
jae
fsubrs
sub
push
ljmp
pop
sahf
cmpsl
mov
fldt
sbbb
jle
sub
cmpsl
jg
ljmp
ret
mov
mov
push
or
jg
pop
call
aaa
les
das
aas
xchg
adc
rcrb
dec
xor
aad
dec
lcall
es
ja
jmp
iret
movl
pop
inc
pusha
xchg
cmp
mov
sbb
repz
mov
fwait
popf
fisubs
stc
rcr
insb
mov
jb
push
loopne
add
or
jmp
cs
add
jb
inc
lock
sub
sbb
mov
push
call
fdivl
sub
xor
mov
clc
fistl
fimull
into
dec
and
outsb
mov
fwait
xchg
js
mov
pop
xchg
bound
jnp
shlb
movsb
movsb
rorb
mov
cmp
inc
or
out
lcall
or
add
dec
xchg
push
mov
lcall
push
cltd
movsb
mov
fyl2x
inc
mov
jno
jae
add
stos
movsb
jmp
dec
pop
std
test
add
push
pushf
mov
cmp
xor
repnz
roll
xlat
fwait
imul
jmp
enter
add
out
rcl
aad
mov
mov
dec
pusha
xchg
xor
adc
daa
inc
push
in
sub
cmp
dec
lods
pop
add
idivl
mov
orl
fnstsw
insb
sarl
cmpb
push
sub
cmp
test
ss
add
subl
jns
xor
outsl
icebp
movsb
mov
out
mov
js
sub
jp
icebp
lret
pop
jbe
pop
ljmp
adc
sbb
add
je
sti
sbb
pop
cmp
aas
adcb
pop
lods
or
addr16
lea
sbb
ret
inc
out
shlb
inc
xor
xor
and
pop
mov
mov
in
mov
mov
jle
daa
cmp
lret
mov
sub
jge,pt
notl
fisttpl
cmpb
inc
dec
cmp
bound
lods
xlat
push
jns
sub
outsb
xlat
and
jmp
pop
xchg
out
repz
xchg
xor
mov
fwait
push
sbb
mov
or
ss
dec
call
mov
std
in
pop
pop
stos
dec
jge
xchg
cmpsl
out
cmp
fistpl
adc
sbb
push
add
xor
pop
xchg
fsubr
mov
mov
jecxz
cld
gs
andl
enter
or
jb
or
adc
insb
bound
cmc
add
lock
cmp
loopne
out
jp
shrl
ret
incb
pop
out
shll
xor
inc
in
aam
dec
fmuls
add
push
mov
leave
and
xor
rcrl
stc
sbb
xchg
lods
lods
dec
mov
jns
and
mov
stos
rclb
adc
mov
mov
bnd
cmpsb
mov
in
xor
lds
ja
mov
pushf
cmpb
inc
jl
add
mov
and
ret
cwtl
xchg
outsl
lret
insb
xorl
pop
out
xchg
iret
hlt
push
push
push
in
add
mov
cmp
push
test
xor
in
and
retw
mov
loop
push
mov
mov
push
insl
adc
hlt
shrl
lods
dec
out
jnp
inc
cmpsl
pop
cmp
adc
adc
pop
fs
lods
adc
popa
mov
roll
fdivp
xchg
inc
decl
jb
or
pushf
xchg
mov
xor
jle
mov
lods
mov
aaa
call
mov
inc
sub
loopne
orb
lods
mov
mov
mov
lods
out
fists
stos
aas
test
push
mov
bound
mov
ja
and
and
sub
jecxz
jbe
movsb
dec
xchg
cltd
lret
xchg
jbe
out
cmp
or
adcl
xchg
inc
xor
push
leave
jmp
cwtl
incb
aam
jns
lret
inc
sub
mov
jne
cmp
or
and
add
ljmp
mov
fisubs
idivl
push
fisttpl
cmpsb
movsl
cmp
gs
cli
mov
fisubl
fnstenv
push
xchg
jb
jl
stos
jnp
in
add
push
mov
pop
outsb
addr16
jp
std
pushf
scas
mov
pop
int
rcll
cmp
mov
mov
hlt
xchg
or
sbb
or
dec
push
scas
cld
fs
sub
inc
mov
popa
data16
outsl
mov
push
in
cld
aas
ds
loope
insb
mov
xchg
imul
xchg
or
or
inc
movsw
in
imul
notb
int
pushf
ret
ss
mov
mov
mov
push
xchg
push
mov
mov
lret
scas
scas
sub
popa
push
push
and
movsl
xchg
xchg
mov
mov
xchg
sub
inc
push
out
or
and
add
xchg
push
das
inc
push
xchg
into
mov
add
cmc
push
add
cwtl
iret
pop
sub
hlt
hlt
ljmp
icebp
ljmp
ret
or
aam
mov
aam
sbb
inc
clc
cmpb
jnp
repz
xor
in
bswap
adc
inc
ss
mov
test
add
ljmp
cmpsl
jp
cltd
sbb
movsb
sbb
jnp
pop
pop
mov
inc
sbb
cmpsb
scas
dec
sub
jle
push
sbb
xchg
mov
mov
std
push
inc
add
into
cmp
into
fcoml
addb
adc
in
ds
mov
fsts
loope
clc
push
orl
push
in
pusha
mov
ret
shr
or
mov
dec
jge
iret
xor
call
xor
sahf
cmp
mov
paddw
xchg
enter
mov
nop
mov
jp
in
mov
fincstp
xchg
sbb
enter
jbe
out
adc
js
dec
jl
pop
dec
fistl
push
js
ss
push
fnsave
aas
pop
mulb
mov
sbb
incl
and
xchg
cmp
pop
xchg
push
ficoml
xlat
add
sub
cmpsb
insb
mov
imul
and
inc
mov
movntq
imul
aas
in
mov
test
inc
mov
push
cwtl
test
jmp
or
mov
shlb
imul
push
xchg
pop
jg
cmpsb
adc
fdivrs
addr16
jle
std
mov
dec
in
inc
lods
push
add
and
js
popa
test
pop
mov
sub
xor
sar
enter
iret
ret
cld
ret
xchg
jmp
nop
enter
mov
loope
stos
les
dec
mov
mov
mov
mov
fstpt
mov
push
movsl
jecxz
in
repnz
inc
jecxz
addr16
cmp
pusha
insb
xchg
mov
scas
xchg
fidivrs
cmc
sahf
xor
mov
cmpsb
adc
sub
push
jno
cmc
stc
dec
add
shl
sti
push
mov
sbb
fstl
pop
fnsave
jno
cmp
js
jnp
repz
cwtl
push
cmpsb
pushf
cwtl
xor
mov
or
and
push
ljmp
daa
or
insl
enter
or
out
adc
mov
dec
add
add
test
mov
cmp
movsl
dec
mov
mov
sbb
jp
lock
inc
std
sbb
imul
into
ja
xor
mov
jg
inc
test
xchg
andl
jo
cld
lret
xchg
enter
push
add
orl
testl
fistl
subb
adc
sbb
rolb
lcall
stc
mov
je
xor
mov
out
xchg
mov
add
rcrb
pop
pop
ja
sbb
or
xor
hlt
mov
mov
cs
lea
enter
mov
pop
stos
dec
pop
mov
xchg
fadds
mov
fdivr
mov
lods
hlt
loop
jecxz
xor
jmp
pop
xlat
incb
cmp
or
sbb
adc
out
xchg
mov
fbld
mov
dec
rcrb
incl
popa
dec
pop
loopne
xlat
fwait
clc
pop
sub
push
aad
cmp
outsl
xchg
sbb
stos
into
xor
les
fbstp
in
mov
xchg
mov
and
push
cltd
lcall
dec
shrl
xchg
add
inc
rorb
sub
sti
mov
push
inc
mov
dec
fnstcw
push
jns
jae
jbe
push
jnp
add
sub
jge
mov
cmpsl
imul
movsb
jo
adc
xchg
jg
std
lds
leave
mov
jge
cmp
or
das
fs
dec
push
lret
sbb
xor
pop
and
shll
addr16
psubw
jge
fwait
stos
lock
inc
fs
repz
xchg
pop
iret
and
lret
flds
sbb
cmp
push
push
lret
mov
adc
inc
xchg
xor
movsl
jno
ljmp
cmpsb
pushf
or
pusha
add
xor
fwait
adc
dec
jno
mov
cwtl
cli
mov
jl
pop
dec
lods
pop
xchg
sbb
xor
cmp
icebp
push
clc
out
xchg
mov
into
mov
xchg
xchg
imul
mov
cwtl
ret
cltd
push
not
mov
xchg
lea
add
sub
pop
loope
call
icebp
cmp
stos
cmp
push
or
fsubrs
cwtl
lock
in
push
adcb
mov
test
mov
ja
or
imul
mov
popf
push
dec
adc
sbb
insl
insl
xor
lahf
cmp
xor
mov
sbb
adc
jo
xor
je
mov
or
cmc
pop
iret
rcrb
mov
das
mov
outsb
jecxz
inc
push
and
stos
es
or
repnz
xchg
xlat
out
dec
and
inc
mov
jno
push
and
into
negl
jl
push
or
mov
cmp
outsb
push
jg
in
inc
pushf
neg
and
ret
jne
and
outsl
xor
shll
sub
adc
mov
hlt
ds
mov
jns
cmpb
mov
or
out
test
aam
xor
lock
scas
jne
aad
push
or
push
ret
out
cmpb
dec
cld
loopne
xchg
data16
pop
lods
in
test
sbb
and
movsl
pop
cmp
test
xor
shr
call
pop
in
iret
dec
dec
addb
xchg
inc
adc
mov
test
sbb
imul
loop
cmp
or
pop
mov
cmc
push
insb
add
sbb
pop
jnp
sti
lret
psadbw
cmpsl
mov
js
clc
inc
mov
mov
and
adc
inc
aaa
pop
nop
into
je
and
pop
movsb
movsl
sahf
icebp
int3
adc
lret
jl
lds
sub
jg
lcall
mov
ds
dec
fcmove
movl
cmp
jle
push
xchg
push
ret
push
flds
xor
xor
orb
jns
jp
inc
sub
sub
sbbb
pop
jecxz
rcrb
adc
mov
pop
sub
subl
imulb
rcr
mov
add
out
jg
dec
push
jno
lret
outsb
icebp
add
repz
call
push
sbb
add
lds
in
fcomip
clc
lret
mov
scas
inc
repnz
daa
js
imul
jmp
push
mov
mov
sbb
int
pop
out
daa
pop
inc
dec
or
push
test
mov
inc
dec
loope
out
das
in
sti
mov
btr
lods
addr16
dec
pop
imul
dec
arpl
add
mov
mov
lods
jnp
fiaddl
add
fnsave
test
outsl
movb
pop
std
mov
cltd
in
lods
and
adc
mov
jb
dec
adc
repnz
add
scas
pushf
add
sbb
test
xchg
std
sub
jge
arpl
cmpb
cmp
test
mov
jle
or
adc
leave
cwtl
mov
stos
jge
lahf
lock
into
js
fs
and
push
pusha
xor
sub
cwtl
hlt
jo
das
adcb
pop
mov
ret
ljmp
add
and
sbb
add
mov
add
cld
loop
idivb
sbb
outsl
pop
loopne
cmp
movsl
fisubrl
lock
mov
addr16
cmp
cmc
mov
es
or
pusha
pop
jo
lret
push
cmpsb
cli
pushl
in
cmp
icebp
cmp
imull
sub
loopne
mov
push
lods
push
fstl
adc
sbb
sbb
xchg
dec
stos
dec
sarb
orl
mov
jbe
dec
test
dec
jg
xor
sub
arpl
bound
sub
outsl
lods
sbb
movsl
mov
das
jo
lret
aam
pop
sub
pop
int3
jnp
cld
pop
pop
clc
jp
movsb
pextrw
sbb
aam
jbe
aam
addl
ljmp
dec
jnp
inc
inc
pusha
std
push
xchg
jl
and
lds
sahf
adc
imul
dec
aaa
jns
xor
lret
xchg
fxch
cli
inc
jge
dec
push
sbb
sub
add
push
outsl
pop
mov
shlb
hlt
push
mov
jno
and
or
xchg
push
addb
jle
shll
dec
adc
xchg
dec
mov
xor
push
out
test
rcrb
jo
sbb
add
xchg
mov
sahf
scas
arpl
fnsave
xchg
fwait
int3
pushf
jbe
push
in
cli
mov
mov
subb
mov
xchg
and
ret
loope
jae
xor
out
pop
rolb
cs
rcrb
fwait
ret
and
push
push
je
mov
pop
add
std
pop
inc
xor
or
sbb
addr16
enter
imul
hlt
add
fsub
orl
inc
outsl
dec
les
and
push
and
cmc
lods
xchg
ja
jl
test
mul
or
lcall
push
outsb
icebp
mov
in
push
cmp
xchg
cmpsb
mov
jl
lea
popf
adc
dec
jbe
je
es
push
push
push
mov
add
xlat
inc
adc
push
ljmp
nop
sahf
ds
notb
lods
xchg
fistpl
je
test
testb
sbb
cmpsl
test
idivb
testb
fistpll
aas
and
ror
add
sub
push
mov
inc
into
subb
dec
js
lds
mov
insb
push
add
out
cmc
mov
stc
cmp
cmp
xor
push
fcoms
cld
jl
fwait
test
ficompl
push
adc
test
dec
jle
pop
mov
or
and
inc
or
icebp
inc
push
not
xor
xchg
push
mov
jbe
leave
mov
push
fwait
cmp
mov
push
hlt
push
outsb
xchg
xchg
lcall
popa
pusha
push
adc
pop
jo
mov
imul
sub
mov
xor
sub
xchg
out
cltd
sbb
inc
cmp
xchg
aas
les
adcl
cwtl
cs
imul
aas
xchg
in
fdivrs
inc
add
test
addr16
mov
mov
lret
xlat
testl
lea
rcrb
out
ret
out
stc
pop
dec
shrl
in
stos
repnz
iret
fs
push
mov
jns
sub
sub
xor
pop
mov
xor
cmc
push
xchg
mov
stos
fcmove
dec
and
add
xchg
psubsb
mov
push
addr16
inc
leave
negl
add
jae
das
fisubs
pop
pop
xchg
or
out
xchg
lock
popf
jmp
push
push
xor
std
jns
les
and
cmp
ffreep
cltd
cmpsl
icebp
jl
mov
clc
adc
pop
pushf
sub
call
dec
mov
out
push
pushf
fstps
push
sbb
mov
inc
pop
imul
push
add
scas
ret
lds
xchg
hlt
mov
inc
testl
inc
pop
ret
jnp
mov
push
daa
add
popa
test
sub
bound
sub
outsl
nop
fucompp
mov
sub
dec
cmpsl
ret
ds
imul
out
les
ret
xchg
mov
adc
test
push
push
lret
mov
xchg
dec
xchg
test
and
int3
dec
loopne
jae
movl
subl
jno
fld
pop
push
cmp
decl
sub
loopne
sti
std
cmp
mov
push
xor
adc
mov
lea
out
mov
test
push
in
add
or
xchg
xchg
fnstcw
add
les
enter
and
aam
and
add
scas
arpl
aad
or
das
jae
push
push
mov
mov
ljmp
stc
inc
std
out
dec
and
and
pop
xor
into
lea
outsb
sti
flds
movsb
loopne
inc
mov
pop
andl
or
rorb
arpl
int3
inc
inc
rcl
scas
xchg
sti
call
sbb
stos
jge
std
push
lahf
or
test
inc
fcmovnu
cli
sbb
repnz
mov
dec
in
fdivr
xchg
andl
lods
push
and
pushf
mov
jb
pushf
adc
mov
je
pop
adc
pushf
jno
or
fisttpll
lret
in
xor
push
into
dec
subl
dec
xchg
les
or
xlat
xchg
mov
push
pop
std
dec
pop
and
ret
hlt
lret
lcall
sub
xor
xor
add
inc
jp
repnz
fisttpl
pop
or
notl
sub
loop
mov
mov
xchg
dec
push
xchg
and
enter
and
cmpsl
mov
cmc
mov
leave
mov
pop
loopne
mov
adc
add
sub
lds
inc
and
rclb
and
addr16
repnz
mov
fs
adc
xchg
js
inc
jge
imul
sahf
adc
mov
out
sbb
dec
mov
out
scas
cmp
dec
add
out
int3
or
push
push
into
xchg
cli
pop
cmpsb
cmp
xchg
jns
adc
jmp
dec
mov
fdivrs
loop
imul
jle
mov
mov
mov
push
mov
cs
dec
cmp
xor
daa
int
std
enter
add
je
jl
loope
inc
xchg
dec
mov
orl
push
jb
cmp
in
sbb
fidivrl
jp
jmp
stc
jge
icebp
push
mov
pop
or
jle
mov
pop
and
jecxz
outsl
xor
cs
dec
xor
jnp
movsl
pushl
stc
xchg
popa
aad
pop
decl
rorb
or
imul
fisttpl
adc
test
je
fwait
or
inc
sub
push
test
mov
lcall
mov
xor
lods
mov
loopne
cs
dec
inc
mov
mov
push
clc
fcomi
loope
stc
sbb
or
sarl
movsl
call
arpl
lret
inc
jae
fs
jp
pushl
dec
repz
sbb
sbb
mov
sbb
lds
fwait
dec
in
sti
xchg
lahf
cmp
jns
adc
test
pop
dec
stos
push
cmp
sbb
aam
lret
lret
enter
and
dec
pop
enter
mov
shl
into
in
jl
arpl
fisubrl
out
insl
dec
lds
mov
dec
mov
orb
adc
push
add
das
popa
das
outsl
inc
out
js
pushf
aam
add
lds
insb
xorl
je
mov
repz
cld
mov
outsb
push
movsb
data16
adc
imul
sub
xchg
ret
mov
push
xor
int
add
mov
xchg
xchg
pop
clc
inc
dec
jae
leave
add
push
inc
mov
out
and
ret
dec
ljmp
std
and
int3
mov
ret
inc
adc
cli
jb
popf
ljmp
imul
adc
add
imul
sub
insb
add
lahf
adc
adcb
adc
push
mov
leave
cld
inc
cs
arpl
insb
dec
pushf
jecxz
xlat
int3
mov
cmp
xorl
sub
daa
lods
or
addb
add
outsl
push
dec
in
inc
and
je
fisttps
dec
mov
cmp
inc
xor
out
lock
cmpsl
je
inc
mov
pop
mov
adc
fs
jns
gs
rcl
popf
in
push
jp
cmp
dec
pop
cltd
pop
outsb
mov
repz
sub
inc
inc
into
sub
adc
sub
cmpsb
push
jecxz
lds
jns
sub
xchg
xchg
inc
popf
mov
aad
rolb
inc
lods
outsb
dec
cmp
push
jno
sbb
in
and
or
cs
in
jle
sti
inc
and
and
pop
push
xlat
pop
movsl
shl
xchg
fisubs
mov
dec
or
dec
mov
int
repz
lcall
data16
mov
arpl
shlb
push
test
in
and
sub
or
rcrl
popf
inc
pop
int3
arpl
scas
insb
popf
mov
ret
pop
ja
jp
sbb
testl
inc
out
ja
call
pop
dec
mov
fsubs
mov
clc
pop
lcall
out
clc
pop
mov
ret
cltd
lret
cs
inc
loope
pop
sub
cs
movsb
add
jne
lods
pop
and
test
cli
loopne
lcall
imul
insl
sbb
or
inc
stos
push
fistpl
sbb
or
in
push
jle
daa
mov
adc
pusha
and
pop
add
adc
ja
inc
das
inc
cwtl
dec
add
les
mov
add
loopne
in
cmp
sti
icebp
iret
out
js
jmp
aad
push
dec
xlat
idiv
mov
mov
add
jne
xor
cld
jl
sbb
jmp
ja
in
test
mov
outsb
pop
add
xchg
fs
sbb
xchg
mov
or
mull
aas
aad
stos
add
rclb
push
mov
xchg
imul
cltd
push
or
jae
icebp
mov
pop
mov
hlt
cmpsl
popa
and
out
jo
shrl
jb
mov
scas
xor
sbb
inc
movsb
inc
iret
sub
push
out
cmp
push
cmp
inc
and
cmp
mov
mov
mov
jbe
mov
aad
xor
cld
ficoml
or
fnstsw
push
cmp
push
jno
mov
pop
jl
mov
sti
sbb
mov
shl
xchg
ret
es
test
push
and
fcomps
adc
xchg
cmp
lea
adc
imul
iret
dec
stos
xchg
adc
fiaddl
movsb
push
inc
xlat
push
push
xor
sub
dec
cmp
adc
mov
scas
jp
push
push
fbstp
test
enter
enter
and
dec
or
mov
fucomi
das
jle
adc
mov
int3
stc
lret
scas
movsb
hlt
movsl
popa
pop
jl
add
lret
lock
test
jne
jle
test
jecxz
push
in
dec
cmpsl
jl
cli
mov
subl
fldenv
in
jno
test
adc
mov
lret
jb
sbb
gs
ja
shlb
ret
out
int3
in
ljmp
imul
in
fcoms
jno
lods
cmp
test
jmp
lods
xlat
stc
push
fwait
fwait
call
lahf
test
popf
push
call
add
adc
nopl
mov
jle
addr16
or
jl
fs
leave
out
lock
mov
mov
ds
jae
mov
inc
mov
sbb
outsl
ljmp
stc
push
xor
xor
or
push
inc
or
mov
pop
push
andl
xchg
rclb
sub
loope
stos
adc
cld
fsubrl
movsl
loope
int
fstps
and
jbe
xchg
cmp
sub
ja
dec
cmp
mov
hlt
pop
imul
gs
call
pop
jb
lods
lcall
ds
mov
xor
pushf
fstpl
dec
mov
mov
push
fucomi
arpl
ret
movsb
loopne
jp
mov
orl
ljmp
jnp
inc
dec
sub
jp
movsl
imul
lock
push
jae
and
cld
shll
xchg
push
cmpb
in
add
jge
cmp
xor
jg
jmp
ret
push
sub
and
inc
xchg
mov
push
jge
xor
jge
push
mov
sbb
jecxz
loope
inc
mov
pop
scas
mov
lds
popa
and
out
movsl
in
movsb
mov
mov
pushf
shr
std
adc
fsts
pop
sub
sbb
pusha
sbb
adcl
loop
imul
and
adc
mov
mov
sahf
sti
and
imul
imul
and
outsb
mov
mov
test
outsb
fbld
ja
lds
std
arpl
or
dec
lds
sahf
sbb
enter
pop
test
orb
xor
div
arpl
pop
and
pop
in
dec
rclb
mov
popa
int
aam
fdivrs
xor
jecxz
dec
stos
mov
add
aad
shlb
mov
cmpsl
les
xor
loop
loope
subb
stos
adc
or
sbb
shrb
xorl
jbe
dec
cmp
sub
aas
cmp
int
mov
adc
cmpsl
mov
imul
pushf
mov
sub
mov
outsb
push
and
aaa
aaa
jo
cmp
int
inc
push
dec
sbb
cmp
cltd
enter
mov
repz
add
inc
sbb
and
movsb
and
inc
ja
ja
lret
cmp
into
out
insb
aad
aam
arpl
popf
fwait
sarb
cmpsl
pop
or
xor
arpl
test
addr16
inc
testl
xchg
mov
or
int
jns
cmpsb
test
loope
and
fsubs
xchg
xchg
out
lahf
cltd
mov
mov
inc
cmpsl
inc
leave
icebp
add
add
cld
cs
adc
add
sbbb
hlt
mov
notb
jne
test
mov
sub
scas
cmp
mov
lods
sub
sub
jl
cmp
cmpsl
inc
stos
add
lods
xor
cmp
cltd
std
fsubrl
notb
or
loop
in
add
inc
repnz
and
insb
inc
ret
jle
in
aam
shl
cmp
cmp
into
mov
pop
lock
fdivr
fs
fs
xchg
mov
jmp
fcomi
cs
pop
fs
mov
push
mov
int3
dec
mov
inc
aaa
out
mov
jp
shr
rcrl
test
jo
mov
mov
sub
mov
in
push
xor
mov
xlat
repz
xchg
movsb
in
clc
inc
into
js
icebp
mov
mov
lods
lods
push
iret
adc
adc
push
xor
push
jne
xlat
idiv
pop
pop
sbb
or
cmp
fstpt
mov
or
mov
xor
cwtl
add
lods
fimull
imul
push
add
in
xlat
icebp
imul
adc
in
push
clc
xchg
out
pop
lock
sahf
inc
xorl
mov
jno
push
jmp
mov
ret
rcrl
and
cmp
inc
arpl
add
lret
sahf
idivl
imul
bound
mov
mov
sbb
adc
fbstp
jmp
std
rclb
xor
sbb
shl
pop
cltd
mov
loop
adc
pop
imul
mov
mov
mov
dec
jecxz
add
and
sub
cmp
push
add
push
scas
shll
xchg
das
xchg
jno
arpl
lahf
sub
aas
sti
mov
imul
aad
mov
mov
inc
int3
insb
or
cmp
dec
shlb
inc
in
ss
push
pop
js
cmc
inc
add
mov
mov
xchg
xchg
sti
pop
inc
and
mov
cwtl
jns
and
sbb
stc
xchg
fnstenv
adc
cmpsl
scas
fisubs
jnp
sahf
fidivrl
pop
lods
shrl
mov
aad
inc
fnstcw
jne
lret
push
adc
mov
sbb
adc
and
sub
fwait
into
xchg
bound
add
jns
lret
jo
test
cmp
push
jle
inc
in
pop
pop
mov
cs
orl
rorb
ds
cwtl
push
push
and
sbb
outsb
arpl
loope
clc
pop
mov
jne
rcrb
test
push
fisttps
pushf
xor
out
sbb
fs
test
ljmp
in
cmp
insl
cli
jno
ja
cmp
mov
jle
aaa
push
mov
xchg
cs
sbb
int
movsb
mov
dec
aad
mov
arpl
push
sbb
cmpsb
daa
push
testb
test
dec
aas
mov
pop
push
mov
pop
cmp
jle
call
push
push
pop
lea
xlat
rcll
fdivl
push
dec
jl
adc
aas
ja
and
aam
cmc
jne
sub
shrb
jl
pop
mov
fidivrl
aad
xchg
iret
decl
gs
gs
mov
xchg
cltd
pop
out
mov
cli
icebp
and
loop
fwait
data16
ss
leave
jle
cmp
cltd
sub
movsl
mov
dec
jbe
push
mov
testb
ret
pop
and
mov
mov
outsb
mov
add
inc
scas
push
ja
pop
popf
mov
push
cmp
std
scas
fistpll
fwait
or
dec
dec
test
imul
cmp
hlt
pop
test
jmp
pop
cltd
jb
out
out
test
das
jo
out
int3
rdseed
movsb
or
sub
jae
fnstsw
ret
cwtl
adc
push
je
jns
jmp
test
mov
jmp
divl
imul
sbb
xor
sbb
mov
xchg
mov
jnp
push
or
sbb
adc
in
push
xchg
rclb
mov
stos
jbe
sbb
cmc
mov
mov
test
jecxz
xor
mov
popa
mov
pop
shlb
push
push
sub
loope
shll
popa
sbb
jl
inc
xor
pop
lcall
pop
jge
ss
ss
xor
pop
stos
imul
pop
scas
mov
fdivrl
lret
pop
or
fimuls
cs
xchg
mov
push
mov
xlat
test
divl
xor
cmp
jno
popf
adc
mov
loopne
and
dec
mov
cmp
jg
jmp
add
test
mov
xor
movsl
mov
shlb
and
inc
ljmp
cmpb
fcom
dec
push
xchg
ret
sbb
push
mov
jnp
push
repnz
jge
fisubl
pop
and
xor
or
fstl
pop
and
scas
in
dec
jno
leave
dec
adc
loop
dec
jb
popf
aad
inc
mov
adc
fldenv
cltd
and
roll
aaa
and
xchg
xchg
int3
scas
aam
imul
mov
mov
pop
cmpsl
mov
mov
sti
mov
jmp
cmc
das
mov
nop
ret
mov
sub
movsb
loop
mov
mov
pop
mov
or
imull
inc
or
push
pop
dec
sub
leave
daa
sbb
call
in
or
xorl
xorl
or
lock
xchg
clc
pop
fwait
imul
jns
sbb
sbb
jne
cmpsb
adc
addb
sbb
push
push
movsb
sub
cmp
loope
test
dec
iret
xor
incl
rcr
mov
outsb
xchg
sbb
sbb
and
pop
lods
popa
mov
stos
or
sbb
push
mov
mov
mov
xchg
xchg
adc
and
mov
int3
mov
adc
iret
loop
dec
xor
divb
ss
gs
jne
jo
data16
lcall
shll
mov
jne,pn
in
pop
jae
xchg
dec
pop
or
outsb
ljmp
and
pop
daa
push
or
imul
dec
mov
pop
or
xorl
lock
lods
lds
inc
imul
pop
push
ja
push
out
imul
xor
jmp
and
fstpl
loopne
mov
xor
ja
into
cmp
sub
jge
pop
jbe
inc
add
jge
pop
xchg
cmp
mov
xlat
orb
mov
popa
mov
imul
cmp
xchg
jge
std
insl
fcomip
popl
mov
mov
add
loopne
xchg
imul
addr16
push
dec
xchg
fcomps
pop
in
jae
sbb
shll
icebp
dec
ja
lods
jmp
xlat
lods
sub
jmp
adc
mov
pop
sbb
add
pop
in
pop
stc
push
mov
mov
insb
inc
sti
and
in
int
movsl
imul
sar
push
js
mov
inc
mov
inc
cmp
mov
and
enterw
jnp
fsubrp
hlt
sbb
orl
in
data16
xchg
dec
xor
jg
leave
sbb
out
pop
adc
jge
ret
pop
inc
sarl
pop
pop
pop
inc
out
pop
dec
cltd
stos
inc
mov
pop
pushf
test
or
fndisi(8087
xorl
inc
test
mov
movsl
fisttpl
jns
mov
mov
xlat
xor
adc
push
lret
fcomps
push
inc
mov
arpl
fistps
xchg
xor
dec
mov
mov
pop
lcall
pop
sti
jnp
das
repz
mov
jmp
repz
and
cmp
aaa
xor
scas
cmp
mov
push
push
movsl
cmpsl
push
lods
ljmp
xchg
inc
fwait
adc
mov
mov
mov
ret
data16
pop
sub
cmp
jne
loope
dec
push
jne
pop
or
mov
hlt
sarb
popa
stc
mov
xchg
loopne
jge
dec
pop
cmpsl
pop
adc
sub
lods
bound
sbb
call
cmp
shlb
push
into
or
dec
jp
add
dec
test
pop
sbb
fiaddl
and
jg
jl
xchg
fistps
dec
jbe
adc
and
out
aad
cwtl
popa
imul
mov
lret
inc
xchg
xlat
dec
into
enter
cmpsb
ja
cmp
scas
mov
shll
mov
inc
push
loopne
xchg
ror
into
repnz
js
jns
mov
out
ja
pop
mov
cmp
mov
popf
fisubrs
mov
inc
xor
mov
cmp
or
movsb
ss
xor
cld
pop
push
mov
push
ja
sbb
or
test
inc
sti
mov
dec
aas
mov
cmp
outsl
repnz
mov
loop
or
jns
and
pop
and
fsubrl
add
dec
jns
and
sub
mov
icebp
int
fldcw
fsubrl
popa
divl
dec
imul
rclb
aas
dec
outsl
inc
popf
xchg
stos
ret
push
jmp
fsubrs
pop
ja
scas
or
pop
sbb
fs
leave
fnsetpm(287
ffreep
mov
or
adc
repz
fwait
sbb
add
fsubs
cmpsl
sub
test
out
push
aad
and
lods
mov
stos
iret
sarl
xchg
push
ret
ret
popa
daa
mov
xor
pop
icebp
adc
stos
lds
cli
andb
pop
xor
jge
daa
in
setle
or
out
mov
lcall
push
push
and
js
add
jne
fwait
jb
ret
jb
nopl
or
int3
mov
inc
clc
orl
xchg
and
sub
dec
add
jne
push
inc
adc
movsb
test
jge
and
pop
daa
sbb
inc
int3
shrl
cltd
adc
jne
dec
cs
push
adc
mov
pop
fidivrl
je
faddp
js
sarb
cld
stos
push
lock
push
xchg
clc
pop
sbb
aaa
test
mov
std
cmp
ss
add
pop
cld
pop
pop
dec
out
add
cmp
ja
out
pop
mov
mov
ljmp
pop
pop
popa
xchg
xchg
dec
mov
repz
sub
stos
aam
cmp
enter
and
cmp
jge
mov
in
dec
add
jns
mov
loopne
jecxz
xor
ja
mov
adc
js
in
lock
jmp
cmc
jle
mov
fstpl
add
out
test
cmpl
adc
add
or
leave
jl
xchg
pop
icebp
jne
or
pop
daa
aad
mov
cmpsb
fwait
push
push
sti
add
jg
testb
test
xchg
cltd
jmp
stos
out
dec
inc
sbb
cld
popf
inc
in
xchg
sub
pop
xor
mov
push
fcompl
mov
inc
mov
sbb
ljmp
mov
xchg
shrb
bound
push
cld
into
popf
mov
fsubrs
test
mov
movsl
sbb
arpl
out
xor
inc
aaa
es
and
sub
aam
test
loop
or
fisttpl
aaa
xor
adc
dec
jmp
movsl
lods
mov
dec
and
pushl
xor
add
mov
add
insb
fisttps
hlt
xor
lods
out
xchg
cld
lods
xlat
push
shll
addr16
scas
jns
and
sbb
and
in
adc
inc
aam
shlb
enter
test
sub
and
call
popa
mov
mov
ljmp
push
rclb
jg
lods
test
stc
imul
xchg
lods
and
pop
into
push
cmpb
add
test
cld
shrb
push
sub
icebp
addl
cmp
sub
stos
pop
xchg
mov
lods
cmp
frstor
cmp
mov
jae
cmc
cli
cs
jmp
imul
fcomp
sbb
ds
cmp
pop
mov
icebp
mov
sbb
in
cmc
jmp
stos
movsb
cmc
addr16
and
shl
cmp
scas
hlt
fwait
out
into
xor
push
testl
mov
mov
cltd
pop
push
mov
ret
mulb
inc
outsb
sub
fwait
push
or
or
inc
cmpsb
cmp
pop
testl
pop
repnz
fsubl
movsb
jl
jnp
or
mov
dec
push
insb
repz
lahf
arpl
into
cmp
daa
lds
jns
cmpsb
roll
fists
mov
sub
sbbb
ss
cwtl
xor
ficoml
cmc
or
mov
or
es
jnp
push
add
lds
mov
in
xchg
psrlq
mov
out
mov
movsb
xor
repnz
stos
out
inc
mov
push
cmpsb
ret
loope
cmp
imul
mov
add
testl
xlat
stos
cmp
imul
and
cli
cmp
mov
add
fistpl
dec
pop
pusha
movsb
stos
stos
mov
orb
fcmovu
mov
stos
sbb
nop
sti
mov
fstpt
xor
and
sub
sbb
xlat
clc
xor
shrb
add
scas
push
push
xchg
jmp
push
fnstenv
push
pop
dec
push
adc
push
sti
bound
adc
dec
adc
fnstcw
cli
pop
cmpsb
fwait
incb
mov
ds
add
icebp
std
imul
das
and
aad
aad
mov
testl
imul
xchg
mov
dec
cmp
mov
daa
leave
sahf
js
adc
mov
insb
or
movsl
divb
scas
lea
out
pop
test
pop
xor
mov
xchg
pop
add
pop
pop
imul
adc
push
ret
lret
idivl
add
mov
mov
push
mov
push
mov
pop
shlb
ss
js
dec
jne
jp
and
mov
add
cmp
inc
or
popa
push
insb
push
inc
dec
mov
push
divb
jne
mov
imul
xor
add
notb
jbe
sbb
lcall
xchg
add
cmp
stos
and
mov
pushf
pushf
popa
sub
fildll
repnz
mov
xchg
jb
in
adc
add
mov
xor
call
mov
aam
push
push
pand
ret
mov
rcrl
ret
or
and
xor
outsl
cmp
fdiv
push
rolb
ret
lods
je
icebp
add
daa
jg
mov
inc
stc
addl
shlb
js
int
addr16
sbbb
sub
ljmp
out
push
sub
mov
lret
push
cltd
cmpl
fsub
imul
nop
cmp
cmpl
repz
loopne
sub
add
and
add
arpl
shlb
inc
dec
in
sub
fdivp
push
pop
and
push
clc
pop
push
push
push
dec
dec
and
xor
cmpsl
add
cmpsl
ret
pop
adc
pusha
rorl
mov
pop
lret
stos
dec
dec
dec
lods
repz
sahf
xchg
mov
addb
sbb
enter
push
pop
or
dec
mov
test
pushf
lret
pop
dec
mov
lcall
rolb
insl
push
xor
adc
cmp
mov
jne
dec
orl
xchg
or
push
subl
xchg
add
outsb
lret
jg
adcb
cmpsl
push
sub
popf
push
lea
sbb
jo
repnz
and
mov
push
orb
xlat
movb
mov
sahf
roll
dec
or
gs
mov
cmp
mov
shlb
mov
xchg
out
jge
sti
lahf
mov
icebp
lock
mov
add
mov
repnz
aad
mov
ljmp
daa
ss
jnp
in
stos
mov
mov
addb
mov
or
repz
adc
lds
pop
mov
or
or
and
pop
arpl
push
jmp
fs
pop
lret
inc
lods
add
fdivl
pop
in
ror
stc
cmp
rol
push
sbb
pushf
loopne
pushf
arpl
add
fucomip
jge
setge
xchg
xlat
fnstcw
leave
cmp
pushf
adc
push
jp
into
lock
flds
or
out
mov
mov
xchg
xchg
bound
fs
add
push
jecxz
lock
incl
inc
jb
push
mov
shlb
aaa
mov
xlat
mov
cmpsb
cmp
movsb
sub
cmp
cmpb
icebp
setge
nop
mov
outsl
ljmp
or
mov
scas
jbe
mov
jge
ret
cs
icebp
fisttpll
leave
imul
cwtl
movsl
adc
loopne
xchg
loopne
lahf
jb
add
aad
call
sbb
sti
mov
push
dec
jmp
enter
or
adc
jge
loope
std
and
shrb
dec
cli
xor
push
aaa
xor
pusha
test
add
jns
cmp
mov
dec
sub
out
xor
inc
dec
les
jp
mov
add
jb
and
movsl
sub
into
sti
inc
push
pop
repz
push
push
sbbl
xor
sub
lahf
lcall
test
andb
add
pop
pop
ja
iret
push
cmp
cmp
std
mov
dec
push
repz
and
outsl
jb
sbb
mov
popf
mov
add
hlt
inc
push
pop
xor
jle
and
leave
lods
and
pop
fnsave
outsb
movsl
insb
leave
shl
cmp
adc
dec
xor
in
insl
fcomps
out
popl
nop
addr16
in
shlb
shll
sbb
inc
inc
mov
outsb
sbb
das
push
pushf
pop
out
sub
in
movlps
andb
xchg
orl
jp
sub
push
and
mov
inc
jge
aaa
popa
nop
and
mov
and
sbb
das
ss
or
gs
push
fidivs
aas
mov
inc
jg
jo
out
fisttps
add
insb
test
test
sti
push
or
or
xchg
leave
cld
and
loop
and
adc
mov
sbb
xor
insb
push
xlat
cltd
loop
lds
into
pusha
mov
push
ret
xorb
jne
xor
xchg
xor
inc
inc
push
inc
insl
fdivrl
or
in
cmp
notl
xor
cmc
dec
ljmp
fcompl
pusha
icebp
sub
mov
outsb
inc
cmp
jb
xor
scas
lods
lods
xchg
xchg
fidivs
mov
jg
mov
stos
movsb
mov
lods
adc
jecxz
jbe
movsl
loopne
pop
sub
mov
daa
pusha
iret
and
and
int3
iret
sti
fldenv
es
xchg
sbb
mov
sub
lea
xchg
mov
call
scas
arpl
data16
push
jns
stos
sub
xor
lock
add
data16
jmp
push
cwtl
and
dec
fstl
pop
pop
pop
or
xchg
scas
mov
aad
out
mov
call
in
jne
test
jno
mov
mov
hlt
jns
clc
sahf
shl
mov
andl
jo
stc
xchg
in
nop
pop
bnd
cmpsb
adc
sahf
nop
mov
dec
pop
sbb
sub
or
jb
jg
lods
in
aaa
pop
mov
xchg
inc
test
std
sti
and
je
fldl
push
add
mov
mov
bound
xor
imul
sahf
pop
xchg
imul
fildl
pop
mov
aas
out
sarb
repz
mov
xchg
push
cltd
sarb
fildll
ds
inc
dec
mov
and
imul
gs
or
idiv
mov
mov
scas
mov
pop
enter
sbbl
xchg
ficomps
cmpsl
les
lock
icebp
in
fdivl
pop
shrl
pusha
or
sub
and
cmp
bound
push
adc
cld
loopne
and
adc
cli
mov
push
and
popa
mov
pop
aas
in
inc
in
lret
or
cmpsb
scas
sbb
push
movsl
xlat
mov
lds
mov
xchg
out
fdiv
mov
mov
stos
add
mov
aam
cmp
push
hlt
ja
or
inc
rolb
es
shl
cli
stos
mov
mov
cli
mov
test
add
lcall
lretw
in
inc
int3
push
xlat
aad
aad
xchg
outsb
or
xchg
push
iret
out
out
jne
and
imul
push
mov
and
and
es
lahf
aaa
or
adc
int3
mov
es
lods
pop
imul
pop
imul
mov
xor
cmc
stc
mov
popf
sub
mov
imul
call
push
push
hlt
cmpsb
push
loopne
push
or
jo
sbb
stos
xlat
mov
jne
cmp
lods
add
shl
fcomip
lret
ret
and
push
test
inc
ret
mov
mov
push
outsb
xchg
jne,pn
mov
jbe
push
sub
int
test
mov
mov
hlt
data16
adc
jmp
cmpl
xor
sarl
dec
pushf
add
mov
inc
xlat
pop
pushf
pop
mov
mov
mov
ret
scas
push
push
push
jae
ljmp
sti
inc
jns
xchg
fdivr
arpl
outsb
and
lahf
aas
push
fidivrl
mov
mov
push
mov
and
dec
xchg
or
subl
lret
mov
pop
stc
and
cmp
enter
in
scas
test
sub
pop
pop
movsl
stos
and
and
test
jmp
insb
cmp
xor
sub
or
cmpsb
pop
shrl
add
fstpt
mov
addr16
stos
inc
fnstenv
or
jne
jge
mov
pop
out
nop
inc
ds
lahf
sarl
jb
lods
mov
add
outsb
pop
mov
mull
in
fnstsw
jg
loopne
mov
mov
stc
inc
andl
pop
jo
popa
fbld
aas
ret
push
pop
push
jbe
icebp
mov
xor
adc
or
mov
push
or
in
ljmp
xor
lds
iret
or
ss
dec
xchg
in
mov
stos
or
enter
mov
aas
movsb
dec
jg
cmp
mov
sub
xchg
jb
jb
imul
outsl
icebp
xchg
mov
movsb
loop
jge
mov
in
push
dec
xlat
je
jb
fisubrs
ja
rol
and
out
fbld
loope
pop
aas
jg
sbb
mov
lock
popf
in
xor
push
cmp
fadds
mov
test
in
lea
or
sahf
inc
mov
adc
ffreep
pop
mov
xor
test
pop
daa
lea
push
inc
jg
mov
punpckhwd
xchg
mov
xchg
aam
mov
adc
push
add
cmpsb
xchg
push
sbb
mov
gs
inc
lea
popa
out
mov
inc
enter
xor
dec
fadd
test
fs
imul
pop
xchg
pop
in
ljmp
data16
xchg
enter
jge
js
repnz
adc
xchg
or
sarb
xchg
rorl
sbb
out
push
loopne
add
sahf
out
jle
test
test
add
pop
push
out
add
push
sub
inc
mov
out
jo
sub
push
or
pop
jp
popf
fsubr
mov
and
mov
test
push
movsl
scas
jne
popa
lods
jb
daa
adc
mov
mov
jae
or
inc
add
lcall
scas
fldenv
cmpb
mov
test
pop
in
mov
subb
ret
int3
mov
dec
adc
nop
cld
dec
fs
or
cmp
jl
jecxz
pushf
out
paddsw
sbb
inc
and
mov
shl
pop
xchg
andl
ljmp
push
hlt
int3
cmpsl
sbb
into
aas
dec
inc
cmp
xor
push
fwait
popf
pop
push
outsl
les
leave
jne
mov
movsb
pop
sub
adc
cmpsl
lods
inc
push
cmp
dec
fisubrl
fbstp
sub
mov
notl
sarl
jo
sbb
in
adc
imul
mov
lods
push
push
icebp
inc
sbb
mov
lock
xor
adc
or
xchg
icebp
lahf
movsl
es
in
shlb
push
inc
push
inc
lods
inc
or
mov
imul
dec
push
push
sbb
lds
adc
ja
loope
rorl
pop
jae
cmpsl
push
ss
out
mov
in
loopne
inc
fidivrs
jl
and
into
dec
sbb
les
mov
sbb
or
dec
push
dec
xchg
lret
add
pop
div
shlb
lret
pop
int
mov
punpckldq
sbb
or
popf
add
inc
loop
ret
push
icebp
and
and
add
fidivrl
lods
adc
insl
daa
aam
addb
mov
gs
in
push
cmpl
sbb
sahf
push
movsb
fwait
pop
sub
xlat
repnz
in
xor
dec
cs
adc
inc
shr
repnz
cmc
adc
dec
shrb
pop
or
mov
aam
ja
lahf
mov
cmp
in
rcrb
mov
add
loopne
jge
xchg
inc
iret
xchg
or
xchg
push
scas
mov
jo
test
add
sub
mov
sahf
xchg
icebp
stc
sbb
js
dec
lcall
and
dec
inc
dec
dec
lcall
mov
mov
jecxz
pop
icebp
adc
add
push
xor
cmpsl
loope
lds
aam
pop
mov
mov
inc
push
add
stc
hlt
and
adc
jecxz
scas
outsb
fimull
fs
lock
xor
orl
dec
nop
inc
pop
int
xor
dec
outsb
or
aad
stc
dec
sbb
sbbb
mov
push
jle
dec
cmp
pop
pushl
cmpl
daa
cmp
mov
sub
mov
stos
jg
outsb
mov
push
xchg
inc
andb
mov
mov
mov
repnz
mov
sbb
iret
add
popf
cmp
mov
aad
in
call
jo
imul
dec
xchg
std
ja
div
adc
jp
je
scas
into
xchg
enter
push
pop
pop
mov
les
repz
and
sbbb
lock
jnp
cwtl
lret
stos
xchg
sbb
ror
push
fistps
inc
pop
xchg
in
jns
js
push
sbb
lods
push
test
movsl
mov
mov
mov
mov
add
subb
add
sub
imul
xchg
in
inc
rcrl
xchg
mov
scas
mov
inc
repnz
add
mov
pushl
in
and
popa
pop
xlat
pop
adc
adc
mov
inc
ret
mov
lods
pop
stos
xchg
sbb
jb
fists
xchg
mov
incb
or
jbe
xor
das
pop
lods
fcomps
push
xor
shlb
sbb
push
idivb
das
add
sti
test
lea
mov
and
test
dec
sbb
push
mov
and
jmp
jmp
cld
into
mov
popf
dec
ja
sub
pop
nop
nopl
mov
outsb
fiadds
and
xor
cmpsl
lret
adc
out
jb
ret
or
out
push
lahf
jl
popf
xchg
xor
mov
push
mov
imul
push
out
fwait
mov
pusha
and
ret
push
push
xchg
cli
sbb
mov
pop
aam
push
mov
fstpt
xor
hlt
cltd
mov
scas
add
or
lods
mov
dec
inc
sub
test
es
jle,pn
cmp
jb
in
adc
mov
push
dec
fstp
add
gs
adc
mov
pop
fadds
jnp
daa
int
test
ret
hlt
pop
int
push
mov
add
adc
std
and
cmp
xchg
xor
sub
jmp
pop
repz
xor
ljmp
cmp
inc
push
mov
pusha
add
cld
cmp
pop
add
jle
ret
xor
fwait
test
les
mov
xchg
lahf
mov
jns
push
inc
lods
jp
shrb
testl
mov
inc
ss
add
js
pop
mov
add
adc
or
and
xor
mov
adc
lahf
adc
int
fadds
test
cs
jecxz
jae
addr16
shrl
leave
in
mov
fistps
ds
sbb
int
push
mov
mov
imul
in
jl
sub
add
cli
mov
stc
push
test
push
xlat
ficoms
pop
les
xchg
mov
or
lcall
xchg
mov
aam
cmp
pop
pushf
or
push
mov
mov
push
ss
mov
push
mov
pop
add
aam
test
mov
stc
fsubrs
push
add
pop
fstpt
mov
pusha
in
call
push
push
js
pop
push
mov
es
addr16
insl
add
mov
pusha
pop
pop
mov
scas
mov
int3
sub
movsb
adc
pop
jo
xor
jl
mov
or
pop
push
fwait
sbb
sti
popa
mov
enter
mov
mov
int
mov
sub
sahf
negb
out
push
into
cmp
pop
xchg
mov
aad
std
cmp
cmp
jle
dec
sbb
inc
addl
xchg
aad
insl
push
loope
loop
dec
push
or
add
or
mov
add
cmp
mov
dec
addr16
test
call
gs
pop
imul
jb
fistpll
push
cmp
sbb
push
and
cmc
mov
neg
std
xchg
mov
push
add
mov
xchg
mov
aam
cmp
cmc
dec
sub
push
inc
xchg
ljmp
lret
mov
std
ret
xor
jl
pop
push
andb
daa
cmp
mov
mov
mov
dec
ss
mov
mov
or
dec
or
sbb
xlat
inc
or
mov
cli
iret
lret
inc
adc
jns
xchg
mov
sub
and
mov
mov
xor
aas
movsl
lret
lcall
jnp
dec
stc
int3
inc
sbbb
jp
faddl
pushl
jnp
inc
mov
dec
xchg
push
add
add
mov
sbb
stos
clc
sbb
mov
jp
les
dec
jg
pop
jp
add
dec
adc
mov
xchg
sbb
and
pop
push
out
mov
pop
iret
loopne
xlat
cwtl
mov
and
iret
test
inc
adc
pop
add
cmp
jne
xchg
out
call
xor
and
mov
ret
lds
mov
movsl
repnz
out
adc
dec
inc
enter
adcb
cmp
out
ljmp
mov
test
and
sub
cs
mov
sbb
xor
jecxz
adc
lods
pop
add
ret
inc
cmp
arpl
sub
out
jbe
cmp
leave
inc
addr16
push
mov
pusha
in
les
xchg
xorl
push
add
push
adc
cli
lods
fucomi
cmpsb
leave
cmp
mov
inc
mov
jecxz
in
push
arpl
jne
test
mov
pop
mov
int
cltd
stos
dec
mov
inc
pop
xlat
movsl
imul
dec
adc
hlt
leave
jle
mov
jge
out
aas
inc
mov
xor
stos
mov
mov
inc
mov
shll
or
data16
mov
int
int3
and
adc
mov
scas
mov
and
and
pop
js
dec
cli
jl
adc
sbb
sub
out
mov
push
mov
repz
sbb
xor
jecxz
iret
sahf
aas
idivl
fildl
aas
ficoms
test
andb
inc
mov
xorb
inc
lea
inc
clc
xorl
cmpsb
popa
scas
call
sti
dec
adc
dec
sbb
sarb
xchg
repnz
addr16
iret
fucomp
das
xchg
mov
es
jns
in
mov
or
mov
jno
pop
in
in
sub
sbb
test
aad
xor
sub
imul
mov
and
adc
in
add
add
pop
cmc
and
pop
mov
dec
cmp
mov
pop
add
jno
or
jl
ret
mov
push
loope
adc
sbb
rcll
jg
ljmp
ja
pop
cmp
sbb
jno
mov
nop
xor
mov
jns
sbb
out
out
xor
es
movsl
shrb
sahf
out
rcrb
scas
push
dec
sbb
cmpsl
fwait
in
pop
add
sub
ret
and
pop
sbb
mov
mov
lea
mov
push
rcrl
sub
sahf
mov
mov
icebp
aad
cmpb
push
loop
cltd
dec
cs
mov
mov
lahf
cmp
and
mov
testl
jmp
cmp
or
jp
mov
and
xor
outsl
pop
leave
adc
or
loope
shll
jg
push
popa
inc
subb
jmp
and
dec
int
add
and
aaa
mov
sti
aad
ficoms
repnz
aaa
stc
std
out
mov
repnz
jbe
add
test
mov
mov
roll
jo
or
jg
lret
cmp
mov
mov
lock
mov
imul
insl
pop
cld
stos
mov
cltd
sbb
out
mov
out
xchg
xchg
in
jne
rolb
xchg
or
or
mov
fcmovne
ror
test
lcall
jbe
fcmovb
je
out
push
and
and
cmp
mov
sbb
pop
push
and
aas
inc
cs
test
xchg
dec
nop
loope
shlb
cmpsl
inc
imul
cmp
sti
pushf
out
repz
fldl
arpl
pop
mov
ffree
jb
or
mov
push
push
loop
jg
cli
adc
lahf
fdivrl
jb
pop
push
mov
arpl
xorb
inc
add
mov
or
push
gs
testb
adc
jl
pop
jno
mov
in
xor
clc
or
xchg
enter
sbb
sub
sub
jmp
je
outsb
xchg
push
mov
lods
fidivrs
pmulhuw
mov
push
pop
jbe
mov
or
xchg
test
rolw
mov
push
mov
imul
push
fbstp
test
mull
sub
jne
in
mov
in
pop
shrb
sub
hlt
pop
mov
ror
scas
imul
ret
clc
push
xchg
dec
jbe
iret
shrb
insl
nop
aad
xor
shl
outsl
pop
and
mov
fcomi
dec
rcrb
mov
stc
js
test
fs
push
pop
mov
or
cmp
dec
mov
sarl
sub
mov
sar
xchg
sub
das
repnz
pop
and
cmc
cltd
mov
xor
jbe
xchg
movsb
mov
push
scas
add
xor
mov
cmpsb
gs
sub
cmpb
mov
push
movsb
int3
lods
insl
incb
lds
stos
dec
jo
das
ret
and
mov
push
popf
inc
andl
imul
pop
pop
xchg
dec
adc
or
and
mov
sub
dec
and
sub
mov
scas
xor
stos
pushf
repnz
adc
cltd
arpl
and
movsb
cmp
mov
cmp
pop
out
iret
ret
mov
stos
mov
insl
dec
xchg
syscall
push
or
rorl
push
or
push
push
sub
and
push
sub
and
fiaddl
mov
out
push
ds
movsl
ret
mov
clc
aad
bnd
scas
popf
sahf
shl
pop
js
xchg
stc
sub
dec
and
jle
add
ljmp
or
iret
stos
or
inc
cmpsl
lock
fisubrs
jne
lahf
push
mov
movsb
mov
and
and
idiv
ror
out
adc
ds
sti
sub
push
arpl
lcall
ljmp
not
in
popf
sub
test
pop
fadds
add
inc
lods
sub
cmp
shl
mov
nop
scas
and
fcomps
lods
das
push
cmpsl
orb
movsl
enter
stc
xchg
leave
loop
cmpsb
mov
test
and
inc
mov
cmp
cld
movsb
or
inc
imul
mov
ret
into
popa
push
pushf
push
lahf
xchg
loopne
mov
mulb
sub
aad
xor
push
xchg
lea
and
dec
sbb
lahf
pop
jae
repz
fdivp
mov
add
in
mov
lock
aas
pop
les
jmp
sbb
or
xor
jno
adc
rcl
stos
loop
push
nop
mov
pop
push
cmpl
push
fisttps
aas
push
adc
fisttps
xor
enter
or
sbb
fiadds
lret
push
and
out
dec
pop
push
sub
enter
pop
hlt
idivb
fstps
lahf
sahf
xchg
cli
inc
ss
stc
pusha
push
stos
add
adc
adc
xchg
inc
ds
popa
push
mov
shl
rcrb
xor
push
lds
push
and
sbb
mov
mov
movsb
dec
jl
sub
sub
lcall
imul
dec
and
lahf
shl
xor
jae
push
lock
pusha
cmp
insl
mov
pop
jge
lea
cmp
inc
ret
xor
das
add
mov
mov
sbb
in
rclb
add
insl
mov
rolb
jbe
jae
scas
movsl
imul
pop
sbb
je
pop
xor
ljmp
push
add
imull
shrl
jo
mov
addr16
aaa
insl
jns
mov
pop
push
aad
mov
push
stc
ss
lods
test
mov
fdivrp
cmp
outsb
adc
loop
and
jecxz
add
stc
fwait
mov
mov
cmp
in
mov
or
xor
cmpsl
mov
in
movl
xor
mov
jo
lcall
icebp
outsb
movsb
mov
dec
ret
push
mov
dec
cltd
aam
lcall
fs
mul
outsl
add
adc
xor
push
rorb
dec
sub
jle
push
shrb
dec
arpl
jo
dec
push
xor
bound
shrl
cmp
jne
mov
push
sbb
and
xlat
dec
cmp
in
aad
iret
fnstenv
mov
dec
popa
nop
fidivrl
dec
aam
mov
mov
data16
scas
pop
mov
fwait
jg
aad
dec
test
clc
inc
sub
mov
stc
mov
fdiv
fcmovne
test
fmul
test
mov
adc
dec
testl
dec
filds
fcompl
leave
xchg
xchg
ret
in
sub
or
push
fwait
jnp
in
push
daa
jge
ficompl
push
out
or
adc
xchg
daa
adc
andl
cld
loop
mov
cmpsl
mov
adc
jmp
jg
inc
data16
shll
shrb
cmp
insl
and
pop
xchg
mov
sbb
fs
fidivrs
sarl
repz
mov
stos
pusha
rcl
fadd
mov
lcall
aas
mov
xlat
cmpsl
xlat
repz
dec
sti
inc
mov
or
jns
add
fwait
idivl
xchg
push
clc
dec
shlb
bound
push
loope
jb
stos
stc
inc
insl
xor
rol
pop
jle
push
in
inc
fdivl
repnz
repnz
aad
fcoms
mov
clc
sbb
or
jo
insl
rcrl
testl
adc
jb
movsl
pushf
mov
js
fnop
cmp
fs
xchg
cmp
or
inc
cmpsb
xor
dec
out
sbb
sbb
cld
es
aas
cli
inc
or
or
scas
dec
rorl
sbb
scas
inc
insb
xchg
mov
xchg
lret
and
fistpll
int
lea
fcomip
inc
sbb
mov
cmp
inc
xor
aas
inc
mov
lea
jb
add
cmp
sbb
mov
xchg
xor
stos
sbb
mov
mov
jg
jmp
js
add
inc
xor
shl
ret
icebp
push
pop
push
mov
js
xchg
fisubl
rcl
insb
shlw
aas
std
cmp
rclb
rorb
push
pop
fwait
repnz
and
dec
mov
andl
das
jnp
cmp
inc
fcoml
jmp
dec
xchg
xor
push
leave
pop
outsl
jg
test
pop
jle
jo
pop
jo
subl
xchg
aam
movsl
sub
addr16
rcrl
lds
sbb
ja
fdivrp
fcoml
sahf
rcl
inc
mov
inc
and
fmuls
ja
scas
sbb
push
jmp
rol
ror
cs
inc
pop
push
lods
lds
xor
psllq
fwait
sahf
cld
xchg
xchg
sbb
enter
sub
pop
popf
stc
dec
add
insl
push
rol
scas
call
or
xchg
std
push
lahf
outsl
repz
ds
aaa
inc
fistpl
mov
dec
daa
push
mov
inc
test
mov
ret
in
lret
inc
push
mov
inc
push
cli
rolb
imul
leave
adc
cs
lret
pop
mov
xchg
jg
mov
repz
mov
push
ret
stc
sbb
sub
pop
aad
nop
sbb
mov
cmp
popf
sbb
ljmp
jae
ljmp
sub
mov
jbe
sbb
test
dec
push
mov
add
push
int
push
cmp
or
push
imul
loope
lcall
xchg
mov
mov
mov
jb
fcoms
movsb
and
xchg
xorl
addr16
xchg
sarb
cmpsb
or
and
cld
fcmovnu
out
imul
cmp
add
adc
subb
mov
mov
shrl
das
sub
inc
jge
dec
jge
jecxz
and
gs
enter
dec
clc
sub
xor
jne
jmp
ds
sub
div
or
mov
ljmp
lret
cwtl
ret
cli
inc
scas
mov
adc
dec
add
pandn
push
cmp
mov
add
sahf
mov
aaa
xor
mov
popa
push
push
push
popa
pusha
sti
bnd
xchg
sub
cmpsl
mov
push
movsl
les
mov
dec
outsl
mov
jb
insl
push
push
xchg
cmp
pusha
enter
fildll
push
shl
out
sbb
fsubl
ss
adc
and
inc
add
invd
out
or
fidivrl
dec
daa
int3
out
mov
cmp
inc
test
pmovmskb
jmp
mov
cmp
fimuls
mov
ljmp
imul
daa
movsl
xor
jle
and
pop
outsl
sub
repz
mov
daa
push
in
xchg
pop
clc
imul
add
and
sub
cmp
push
push
into
jle
and
loopne
leave
imul
pop
jne
addl
add
xchg
jl
pusha
mov
push
push
arpl
push
jnp
adc
xchg
icebp
lret
pop
xchg
imul
jg
dec
ret
sahf
sbb
xchg
movsb
lods
add
ror
aas
cld
es
lods
push
aaa
mov
nop
je
cli
push
sahf
xor
lahf
je
fistl
shll
popa
mov
fcmovbe
sub
nop
push
mov
add
mov
lahf
adc
incb
mov
push
nop
mov
stos
out
aas
or
jo
nop
call
push
fimuls
pop
inc
lods
inc
dec
push
pop
mov
cmp
jae
push
sbb
test
aad
lods
lret
xchg
je
testb
mov
pusha
fidivrl
addr16
cmp
clc
sub
jg
push
sbb
inc
stos
sti
out
jne
pop
ljmp
nop
dec
fistpll
popa
jmp
push
xlat
insl
xchg
clc
sub
mov
push
mov
mov
cli
mov
int3
int3
nop
mov
jb
enter
mov
adc
or
into
icebp
outsb
sbb
sub
xchg
xorl
loop
lret
out
add
cmp
ret
daa
pushf
shld
mov
out
ja
xchg
int
repnz
push
adc
das
stos
cmp
xchg
or
ficompl
and
mov
cmp
popf
es
cltd
sti
jge
outsb
addr16
jns
dec
pop
mov
out
movb
mov
inc
sub
in
dec
adc
cmp
inc
or
movsl
mov
or
xchg
jmp
adc
mov
adc
push
inc
xor
loopne,pt
je
gs
add
pmuludq
push
fsts
sub
mov
into
insl
inc
cmp
sub
cmp
out
cmc
mov
lret
das
or
dec
lret
jmp
fcoml
inc
push
adc
test
push
pop
out
cmc
out
mov
and
aaa
lods
and
fcoml
sbb
ret
add
out
dec
add
xor
xor
mov
xor
outsb
pop
lahf
lret
stc
dec
mov
in
jl
mull
leave
dec
cmpsl
adc
out
gs
adc
rol
mov
mov
sbb
dec
mov
lods
cmp
out
iret
and
jne
push
sbb
mov
xor
call
add
sahf
or
jg
jg
fwait
or
cli
push
push
fdivrl
xor
daa
fsubrp
mulb
repz
mov
fsubrs
push
inc
pop
sbb
add
mov
ja
push
jl
mov
jle
inc
out
xchg
jmp
fs
js
push
movsb
pop
lock
or
je
fistps
or
test
and
push
mov
mov
pop
dec
popl
call
in
mov
xchg
push
mov
xor
leave
adc
ja
or
fcoml
pop
pop
push
xlat
adc
inc
aas
cmp
scas
or
mov
mov
mov
adc
stos
in
dec
aam
push
test
les
test
or
dec
ds
jp
dec
push
xchg
dec
ret
mov
sub
outsl
shrl
jp
inc
add
lods
lret
or
push
stc
enter
popf
cmpsl
test
push
add
outsb
mov
popf
jle
mov
or
leave
test
addr16
das
lods
push
xor
push
out
add
mov
cmp
repz
insl
sarl
dec
ds
neg
repnz
sub
pop
adc
mov
jmp
pop
push
pop
sarl
imul
test
ljmp
in
cmp
push
xorb
mov
jno
jbe
push
xchg
cld
cmc
xchg
jecxz
push
ds
mov
jmp
sub
fdiv
jg
adc
mov
sub
cli
pop
sti
test
push
push
xchg
add
faddl
out
mov
icebp
pop
jb,pt
dec
ja
cmp
and
xchg
or
icebp
push
lods
push
inc
push
outsl
push
xor
in
es
and
rorb
dec
out
cmpsl
push
jnp
or
insl
xor
fs
push
outsb
add
mov
or
and
sti
mov
mov
cmp
in
adc
push
iret
fsubs
arpl
sub
loop
mov
and
aaa
jl
enter
push
scas
sbb
push
dec
fs
lret
jecxz
cmp
daa
int3
xchg
or
pop
cs
pop
dec
and
inc
stos
out
add
add
fistpll
shl
adc
fnstcw
andb
dec
out
mov
jb
stc
inc
lcall
mov
ljmp
and
fdivr
jl
rcrl
xorb
sti
xchg
pushl
or
imul
movsb
rcll
mov
sbb
inc
hlt
mov
mov
sbb
lret
jl
push
fwait
pop
ret
das
and
insb
fstps
xchg
lods
pusha
stos
jbe
mov
fidivl
jecxz
addr16
cmc
jmp
das
fs
mov
mov
add
pushf
or
push
lret
out
jo
push
push
stc
inc
dec
adc
xchg
jno
lret
sbb
mov
pop
jns
pop
or
imul
cmp
add
inc
test
stc
fcmovbe
add
das
dec
inc
push
int
hlt
push
rcl
mov
push
hlt
clc
mov
pop
mov
or
push
fwait
dec
testw
push
cmc
or
movsl
insb
je
sbb
fnstsw
sahf
xor
jns
push
out
addr16
mov
imul
call
mov
sahf
iret
shl
or
xchg
pop
sar
ror
cmp
fsts
incb
xor
and
loope
jnp
and
mov
fucomip
popf
xchg
decl
es
dec
xchg
mov
xchg
mov
nop
dec
inc
fadd
jbe
and
mov
dec
jno
xor
or
adc
mov
imul
sbbl
leave
jae
lods
scas
daa
rcl
dec
jnp
scas
push
and
xchg
movsl
push
mov
call
jb
jg
lods
mov
divb
mov
rorl
movsb
xor
aaa
inc
mov
imul
imul
inc
rol
data16
push
es
movsl
in
rorb
sbb
lcall
sbb
cmp
arpl
sahf
sarl
lock
pop
push
inc
mov
jmp
cmc
fidivl
add
xchg
cmpsl
lods
inc
sub
dec
add
and
jmp
xchg
sbb
nop
mov
out
mov
clc
mov
aas
xchg
inc
xchg
pop
inc
xor
data16
ja
jle
mov
int
out
push
into
incb
xchg
int3
xor
xchg
fimuls
mov
xchg
in
xor
mov
lret
mov
aam
inc
mov
or
aaa
jmp
addl
mov
sbb
in
or
jmp
and
in
mov
xchg
inc
xchg
or
push
pop
mov
dec
cmp
lret
sbb
popa
mov
inc
inc
add
cmp
dec
into
call
sti
ret
std
in
cmpsl
push
mov
call
pop
dec
pop
adc
das
add
ljmp
clc
addb
add
fs
mov
mov
pop
mov
je
pop
push
or
jecxz
insl
sub
xor
mov
jne
pop
mov
cld
pop
es
sbb
push
lcall
fwait
push
mov
repnz
cmpsl
jle
xor
int
out
xor
mov
xchg
xchg
xchg
xchg
pop
pop
lds
cs
outsl
rcll
jl
ret
xchg
mov
xlat
loop
pusha
dec
call
inc
fmuls
mov
and
mov
cmpsl
sti
xchg
mov
fisttpl
dec
sbb
and
xchg
cltd
sbbb
mov
xchg
rcll
popf
jae
out
divb
or
pusha
mov
shl
mov
fcoml
sbbl
iret
in
icebp
xchg
inc
out
stc
mov
aad
rolb
and
rclb
popf
aad
aad
and
sbb
stos
inc
roll
scas
cltd
xchg
repnz
js
push
xchg
lahf
ljmp
pop
inc
hlt
int3
hlt
pop
enter
test
loope
adc
js
cmp
and
cmp
fcoms
testl
push
add
sahf
add
jbe
dec
xchg
or
iret
loopne
or
mov
xor
xchg
cld
jecxz
cmpsb
pop
add
xor
mov
dec
mov
cmp
sub
cmp
cmpsl
cmp
sbb
jg
das
xchg
add
xchg
movsb
call
add
mov
push
insl
pop
in
aaa
mov
xchg
dec
adc
insb
cmpsb
je
repnz
in
push
adc
out
push
pop
or
xchg
adc
les
ret
push
cltd
or
ret
pop
sub
mov
sub
adc
cmpsl
inc
push
ret
and
sub
mov
imul
dec
sbb
jnp
mov
dec
sub
xchg
xor
inc
xchg
mov
jo
push
inc
in
fwait
mov
mov
sbb
adc
push
shrl
lcall
les
loop
lcall
test
pop
mov
cmp
xorb
add
jmp
fstl
subb
insl
xlat
enter
call
add
push
xor
mov
jb
mov
add
scas
out
jo
pop
and
enter
xchg
mov
sub
sarb
sub
sbb
in
mov
push
hlt
mov
movsbl
and
cmp
sbb
pop
xor
outsl
pop
outsl
gs
push
orb
push
into
test
cli
dec
xor
pop
pop
adc
hlt
inc
mov
push
xchg
and
ficoms
sbb
xor
pandn
mov
cwtl
lahf
pop
push
fs
mov
lock
jecxz
sbbl
popa
rcll
mov
mov
sbb
xor
add
adc
clc
test
lahf
sub
pop
xchg
les
sub
jne
mov
push
xchg
adc
das
jp
test
adc
fiaddl
adc
sub
jg
stos
sbb
jecxz
in
jg
iret
ljmp
into
dec
mov
cmp
mov
mov
mov
push
add
adc
xchg
inc
pop
dec
popa
shll
mov
push
mov
es
test
pop
mov
dec
shrb
inc
jns
inc
adc
cmp
mov
mov
addr16
push
mov
cmpsl
aad
call
stos
jno
or
xchg
push
mov
stos
in
ret
mov
mov
cli
divb
popa
mov
leave
inc
cli
frstor
cmp
frstor
insb
lret
cmp
jmp
and
pop
add
xor
lcall
xor
pop
jmp
add
sub
pop
or
aad
jg
test
sbb
mov
push
insb
sbb
push
sbbl
aad
lock
out
testb
mov
cmp
jno
dec
jmp
call
jne
jbe
out
sbb
adc
je
add
add
and
dec
idivl
arpl
iret
in
leave
rorl
xchg
mov
out
insl
pushf
les
jecxz
mov
es
or
in
inc
pop
fs
ret
js
jp
or
ja
add
fidivrl
movlhps
xchg
in
jge
into
scas
sbb
adc
pop
sbb
xor
je
ja
imul
shlb
je
fdivr
inc
adc
rolb
mov
outsl
mov
pop
es
adc
shlb
imul
addb
mov
push
out
mov
push
or
divl
jp
cmp
jecxz
or
push
push
nop
js
in
push
pop
xchg
rcll
int3
xchg
mov
mov
jo
mov
push
sbb
or
stc
js
mov
jmp
and
in
bound
addl
pop
outsb
jecxz
push
fwait
fwait
aaa
in
push
scas
jb
fstl
lcall
nop
sbb
inc
cmpsl
imul
ret
jl
fwait
jnp
pusha
insb
inc
pop
jo
pushf
lea
cmp
lcall
jo
sub
lea
push
cmp
and
push
cld
lods
in
or
das
out
sub
scas
test
popf
dec
stc
arpl
ljmp
mov
ja
scas
in
inc
add
das
mov
xor
stc
xchg
cld
sub
and
xchg
lret
in
cmp
hlt
mov
push
subl
int3
mov
sub
push
sahf
and
mov
clc
je
rcl
cmpb
fiadds
movsb
and
xor
fs
es
jbe
cmpsb
adc
push
insl
inc
cmpl
ret
stc
push
adc
push
icebp
or
enter
movsbl
mov
pop
subl
xchg
mov
dec
daa
xchg
sar
pop
mov
loop
mov
arpl
inc
decb
insl
mov
add
push
lods
xor
test
adc
push
xchg
add
das
rcrl
xchg
mov
mov
stos
icebp
jb
xor
xchg
push
and
popf
mov
mov
mov
push
mov
mov
inc
popa
mov
rcl
clts
repnz
pop
mov
and
ljmp
sbb
stos
pop
test
sub
cmc
mov
addl
lds
das
fstps
push
std
xor
ljmp
dec
cli
out
jns
pop
dec
lret
out
xchg
popa
lahf
loope
std
xchg
outsb
out
stc
or
in
outsl
jne
cmp
fcmovu
out
mov
out
in
lret
adc
dec
nopl
mov
fistl
enter
or
and
dec
cltd
mov
lods
aaa
add
inc
or
pop
inc
dec
cmp
ds
bound
or
push
clc
imul
gs
in
scas
enter
out
mov
mov
gs
mov
inc
sub
adc
xchg
lret
inc
stc
nop
test
sbb
into
adc
sahf
jmp
xchg
adc
gs
push
jo
push
jo
fisttpll
arpl
imul
push
pop
cmpsb
repz
ficoml
iret
pop
fs
pop
outsl
sbb
lds
jecxz
cmp
aaa
push
pushf
movsl
insl
cmpsb
imul
or
scas
mov
test
int
das
int
and
call
fst
xlat
pop
adc
xchg
push
mov
in
inc
push
jns
sbb
jp
pop
ds
dec
sbb
add
mov
ret
xchg
xlat
lcall
gs
popa
call
ret
cli
call
test
sub
push
in
gs
fldl
je
jg
cmc
int
enter
test
pushw
or
mov
rol
lods
xchg
or
popa
jecxz
das
aaa
fwait
pop
aaa
popa
cmp
in
pop
sarb
cmpsl
xchg
ss
pop
sahf
or
and
cmp
xchg
jb
sbb
in
push
cmp
jno
fs
mov
in
dec
daa
in
mov
lahf
push
invd
jp
sub
mov
mov
or
decb
into
xor
adc
fidivs
movsb
mov
and
leave
ds
jbe
out
inc
call
xchg
cmovle
adc
ljmp
push
or
scas
int3
xchg
addr16
inc
cmp
mov
fwait
push
divb
jne
outsl
in
push
cmc
dec
lret
xchg
fistpll
das
addr16
and
shrl
in
push
outsl
mov
in
ljmp
xor
dec
xor
mov
jmp
sbb
push
outsl
cmc
inc
jmp
lock
xor
mov
or
jl
inc
inc
lock
sub
ret
push
xlat
int3
int
push
out
and
push
stos
cld
push
es
push
cld
ret
or
xchg
enter
push
xchg
out
and
dec
xorb
scas
int
lods
or
lods
out
push
scas
and
cmp
inc
add
mov
dec
imulb
icebp
jp
lcall
ss
xor
adc
dec
lcall
xchg
fnstcw
aam
clc
mov
inc
add
scas
aaa
ljmp
pop
rcl
pop
ds
jo
jmp
fists
inc
repnz
jp
pop
jl
push
mov
xor
push
xlat
pop
push
inc
lahf
jb
pusha
sub
leave
jb
add
fistl
cmp
fwait
mov
mov
roll
leave
add
xchg
pop
xchg
fsubp
pop
push
rorb
mov
scas
fbstp
pop
xchg
dec
mov
xchg
xchg
cmpsb
mov
fstp
pop
inc
or
cmp
jecxz
dec
int3
imul
in
test
icebp
sbb
stos
imul
cli
js
jns
mulb
cmc
nop
bound
add
into
mov
inc
sbb
jne
je
cwtl
shlb
mov
lcall
jecxz
adc
xor
dec
inc
dec
xor
outsb
mov
test
xor
imul
movsb
test
je
sarb
popf
and
mov
rolb
mov
orb
les
xor
add
push
jl
ljmp
push
pop
inc
sbb
jns
outsb
jae
mov
push
push
sub
shl
ret
mov
movb
popa
arpl
lods
sbb
scas
mov
add
dec
and
clc
aad
int3
int3
sbb
adc
test
mov
push
das
pop
dec
jnp
data16
mov
out
cwtl
data16
sub
mov
mov
icebp
icebp
pop
in
push
adc
cwtl
scas
test
xor
jnp
aas
or
mov
lahf
fildll
jmp
cli
or
jmp
push
mov
sahf
xchg
xor
fcom
aas
lret
mov
xor
dec
push
fcom
push
outsl
ret
mov
nop
leave
inc
cmp
fists
pop
xchg
and
jmp
arpl
andl
outsl
inc
test
mov
and
js
sub
xor
jns
xchg
pop
add
xor
sbb
push
orl
xor
add
daa
push
cmp
xor
dec
inc
mov
mov
mov
or
ljmp
sub
mov
cmp
je
mov
xor
push
mov
adc
je
pop
andl
sub
xor
adc
push
jbe
fisubs
inc
mov
inc
out
jnp
call
xor
mov
inc
in
aas
and
addr16
jae
gs
cld
in
push
jbe
cmpsl
pop
ljmp
rcll
sbb
ret
sbb
popa
cmp
mov
sub
dec
sub
xchg
jge
or
andl
lahf
insb
les
std
dec
adc
cmp
mov
fs
dec
push
or
adc
jnp
js
xor
fst
sahf
pop
add
mov
cmpsl
push
jp
aaa
push
sub
imul
je
pop
and
sti
in
add
pop
push
mov
dec
or
push
cmc
les
add
or
mov
inc
imul
ja
jmp
bswap
test
mov
pusha
dec
adc
adc
adc
stc
repz
bswap
lods
call
mov
data16
je
adc
out
cmp
test
stc
cmp
dec
ret
jp
ds
cmpsb
adc
cmp
cmp
ficoml
add
loope
xor
push
imulb
adc
test
add
into
aad
jnp
dec
fsubrl
ret
and
push
stos
jbe
aad
lahf
test
pusha
stc
and
sbbl
sub
insl
mov
jl
mov
lcall
push
outsb
in
xor
cmp
xor
xor
xchg
bound
jle
add
mov
icebp
aas
std
pop
xlat
mov
mov
pop
loope,pt
sbb
mov
mov
imul
sub
sbb
cmp
aam
jmp
push
fisttpl
scas
fstps
sbb
into
scas
adc
sub
stc
mov
insb
adc
or
pop
mov
and
pusha
fwait
mov
jne
or
sbb
int
call
push
imul
movsb
imul
inc
ss
sbb
mov
daa
movsl
sub
sub
lahf
mov
mov
mov
push
adc
imul
insb
adc
cmpsl
adc
mov
add
sub
push
sbb
nop
fdivp
add
sbb
inc
test
out
scas
lods
cltd
ret
sub
jb
fcompl
cmp
mov
lret
dec
loop
push
enter
popf
xor
mov
jg
sbb
subl
mov
sbbb
adc
out
push
enter
xchg
and
push
out
adc
daa
mov
sbb
in
cltd
pop
add
push
mov
std
lret
stos
mov
inc
inc
fdivrs
adc
js
push
and
push
or
push
push
mov
icebp
jp
mov
pop
das
loope
icebp
adc
lds
jno
xchg
mov
aaa
popf
pop
push
push
xor
sar
data16
int3
mov
add
mov
sub
iret
stos
addb
ljmp
jle
inc
pop
pop
pop
jo
sbb
daa
rorb
call
mov
inc
lret
enter
xchg
stc
data16
int3
xchg
mov
jae
jl
inc
add
outsl
mov
mov
push
dec
inc
test
and
pop
lea
mov
imul
loop
out
daa
pop
or
inc
into
xchg
cmp
sbb
xchg
jl
test
dec
popf
pusha
jb
adc
jmp
add
idivb
sub
test
leave
push
mov
dec
cmpsl
stos
fwait
ret
addl
pop
outsb
cld
xchg
decl
roll
scas
lds
adc
imul
pushf
mov
push
xor
push
js
lcall
add
jns
in
adc
ficoml
push
leave
push
xor
or
hlt
dec
pop
adcl
rorb
mov
adc
pusha
inc
push
lcall
mov
hlt
pop
xchg
pop
insl
add
popf
lds
mov
mov
std
out
enter
add
dec
es
xchg
addr16
adc
inc
add
outsl
xchg
sbb
sarl
imul
arpl
or
ljmp
out
lahf
or
mov
pop
sbb
lods
mov
rcr
aas
xor
push
mov
outsl
pushf
ret
jg
mov
jle
jns
pop
outsb
sbb
gs
sub
bound
ja
or
xchg
jle
lock
mov
rcrb
inc
pop
stos
cmp
add
fcom
pop
and
pop
cmpsb
stos
pop
push
push
mov
cmp
push
scas
push
cld
cmc
lock
adc
outsl
dec
inc
std
mov
push
mov
jge
mov
mov
push
inc
ljmp
bound
pop
popa
fwait
lahf
nop
dec
es
adc
popf
call
mov
sahf
ja
xchg
add
test
mov
aad
sub
or
jae
clc
sldt
cmp
popa
push
fcmovbe
leave
mov
mov
inc
mov
sbb
pop
test
adc
xor
pushf
xchg
mov
jae
mov
dec
fwait
dec
jl
pop
or
or
mov
xor
iret
add
cmp
lahf
or
shr
add
push
push
dec
mov
jne
jno
lds
jb
push
outsl
sbb
mov
gs
repz
adc
ja
loope
mov
bound
pop
push
push
xchg
scas
mov
insl
in
sub
sbb
jno
push
out
cmp
dec
outsb
jl
push
inc
nop
sbb
inc
inc
or
mov
sub
movsl
loope
jno
scas
jnp
mov
cmp
lods
faddp
setg
add
enter
push
xor
cmp
jp
mov
popa
mov
pop
dec
rcl
out
or
inc
ret
in
movsl
dec
cmpsb
mov
mulb
xchg
dec
leave
jnp
adc
je
rol
fwait
pop
in
jns
sti
adc
jle
lcall
test
sbbb
xchg
aad
fsubrs
stos
jns
stos
cmp
aas
jp
insb
test
fdivp
xchg
jo
xchg
add
in
shrl
fldl
in
pusha
scas
push
mov
jmp
ret
lret
push
push
fdivs
mov
std
bound
jecxz
sti
xchg
cmp
inc
xor
mov
rcrl
outsl
mov
stos
lock
sub
xchg
mov
pop
jbe
cmp
cmp
adc
js
inc
enter
cmp
add
inc
and
add
mov
push
xchg
jp
arpl
adc
gs
rorl
mov
add
add
push
fistpll
mov
adc
adc
dec
int
xchg
movsl
push
fsubl
je
je
nop
cmp
outsl
dec
add
cmp
out
dec
popa
xor
mov
and
dec
lret
das
adc
pop
lahf
sbbl
out
xlat
mov
lret
sarl
int
xor
adc
pop
dec
das
imul
leave
sbb
xor
rolb
ss
inc
loope
dec
int3
popf
mov
jae
mov
cmp
pop
test
adc
loopne
jp
fimuls
jo
and
out
cmpsb
sahf
sbb
repz
movsb
aaa
jg
adc
lahf
shl
push
push
dec
in
inc
nop
fwait
jle
daa
sbb
jbe
mov
emms
add
fdivrl
dec
mov
mov
jae
push
mov
xlat
addr16
dec
out
lcall
das
pop
loopne
pop
lods
pop
ret
rol
aaa
je
out
andb
dec
sbb
cmc
and
lahf
and
or
jo
iret
js
pop
xchg
mov
enter
jge
jecxz
sbb
outsl
rolb
ja
sub
ja
xor
xchg
in
pop
imul
lds
cmp
mov
push
sub
mov
in
popa
mov
adc
das
mov
or
jl
jb
insl
push
je
sahf
js
arpl
pop
cmpsl
fstl
lods
pop
in
dec
jns
jle
lds
call
pop
gs
pop
int
or
icebp
sbb
fsubl
push
cli
inc
dec
xchg
nop
push
movsl
xor
sahf
aaa
enter
add
cwtl
pop
push
dec
mov
inc
sbb
int
pushf
mov
sbb
jno
leave
faddp
rolb
dec
and
push
dec
adc
mov
mov
xchg
inc
add
cmp
int3
decl
test
fs
or
sahf
lea
dec
pusha
dec
sti
mov
sbb
pusha
mov
fisttpll
mov
lret
cmp
loope
and
stc
insb
outsb
jle
pop
push
xchg
fcoml
popf
dec
cwtl
hlt
cmp
test
daa
rorb
scas
push
stos
mov
mov
es
out
mov
and
sbb
movsl
lret
pop
xor
inc
dec
xchg
jl
sti
dec
dec
inc
push
inc
popl
fnstsw
mov
jmp
mov
mov
fldcw
inc
push
xchg
and
lds
jmp
insb
lea
lahf
repz
loopne
leave
dec
cmp
ret
push
aad
mov
cmpsb
pop
xchg
mov
xchg
pop
jge
cmpsb
xor
fnsave
arpl
push
lcall
in
mov
hlt
fwait
jae
xchg
sbb
xchg
xchg
lahf
or
inc
jg
push
arpl
xor
sarl
mov
ret
jl
sbb
xchg
insb
add
adc
push
lret
jns
push
xchg
daa
aaa
pusha
cmp
lods
xor
pop
pop
xor
stos
shll
cmp
fs
dec
test
loopne
and
rorb
cmp
pop
jge
ljmp
mov
pop
dec
addr16
pop
pop
ror
mov
fbld
jle
jno
aas
test
aas
test
mov
adc
or
push
xor
cmp
xchg
or
and
mov
int
clc
mov
push
out
ljmp
lahf
sbb
or
cld
cmp
xchg
pop
inc
xor
imul
mov
lock
mulb
fmul
imulb
mov
test
enter
sub
pop
fwait
shll
cwtl
lods
stos
test
popf
push
push
jl
mov
xor
push
mov
mov
mov
testl
or
insb
lods
add
inc
xchg
dec
arpl
push
rcll
mov
scas
add
xor
push
stos
pusha
mov
insl
out
data16
aaa
adcb
sahf
dec
mov
add
and
jmp
cmp
clc
mov
ret
cld
or
dec
popf
jmp
or
jno
xchg
shr
stc
pop
inc
mov
lahf
out
fs
jo
pop
stos
cli
mov
stc
int3
inc
insl
push
cmp
push
call
out
dec
popa
jle
insl
jecxz
inc
adc
inc
stc
cmp
inc
sbb
mov
cld
cmc
xchg
sub
mov
stos
in
or
xor
mov
sbb
or
xchg
sub
mov
insl
push
sarb
out
out
jle
cmp
cmp
dec
push
ret
cmp
add
iret
das
dec
cwtl
mov
dec
cmc
mov
lea
int
push
lods
mov
leave
xchg
divl
cmpsb
mov
inc
xor
add
fs
ja
aad
and
jl
daa
mov
pop
mov
or
leave
repnz
mov
pop
xor
dec
out
in
inc
clc
push
jb
in
rcrl
jmp
add
pop
outsb
or
mov
or
call
inc
outsl
popf
arpl
add
jb
cmp
shll
dec
out
lods
sahf
add
cli
inc
aam
es
mov
test
mov
or
xor
call
dec
add
pop
and
adc
mov
and
pop
adc
pop
adc
iret
adc
jp
ret
push
or
jle
outsl
jp
mov
ret
xchg
out
add
fs
xor
sub
and
lock
pop
lds
stos
xchg
test
push
jecxz
pop
das
cmc
into
push
add
repz
sbb
stos
adc
cs
jecxz
cltd
jl
pop
or
rcrl
or
arpl
or
xor
mov
dec
cmpsl
iret
aaa
ja
out
push
pop
loopne
pop
fwait
lcall
idivl
insl
dec
imul
xor
mov
subl
notl
sbb
mov
push
pop
sub
insl
jns
xchg
and
fadd
or
dec
stc
jg
rclb
daa
add
push
les
fldl
ja
mov
jmp
mov
test
inc
pop
mov
xor
or
push
push
shrl
inc
xor
fnsave
push
filds
dec
fwait
lods
push
lds
mov
pop
test
stos
fs
sub
and
ds
rcl
sarl
mov
sbb
jle
cwtl
jecxz
jb
out
or
push
sbb
pop
jo
sub
sub
xor
xor
stos
jp
call
repnz
sar
and
mov
push
test
mov
bound
clc
test
pop
fnstsw
jle
mov
cli
aaa
jae
into
cmp
pop
xor
js
jl
or
pop
fstpl
test
push
and
push
cmp
dec
outsl
adc
repnz
fimull
or
cmp
jae
and
movsb
outsb
or
mul
es
loop
lcall
test
adc
fiadds
icebp
pop
xorb
shll
js
mov
add
add
adc
lds
mov
into
fwait
mov
frstor
sub
jecxz
mov
call
cwtl
mov
mov
lds
mov
xchg
xchg
lock
mov
xchg
push
insb
adc
cwtl
mov
lods
or
pop
call
fbld
loope
xchg
push
xchg
lret
addl
push
bound
mov
repnz
lahf
in
cltd
mov
add
outsl
decl
mov
cmpsl
out
es
std
std
inc
cs
xor
iret
jo
mov
popf
jbe
add
fnstcw
mov
gs
xor
mull
mov
repnz
mov
fdivl
sub
jmp
test
pop
scas
insb
ret
dec
push
mov
enter
outsb
and
cld
cmpsb
insb
iret
ja
and
sbb
mov
xorb
push
adc
inc
sbb
rcll
je
mov
and
das
mov
push
mov
cld
mov
dec
jl
push
pop
sarb
pop
aad
insb
xchg
mov
insb
adc
aad
mov
ficompl
mov
mov
orb
jo,pn
inc
mov
das
sub
lods
imul
fildll
xor
jb
inc
insb
test
cmc
pushf
pop
daa
pop
aam
xchg
lods
mov
pop
add
sti
sub
and
shlb
fsub
out
mov
adc
sahf
lret
cmp
mov
push
and
out
fsub
lea
std
lock
lock
in
enter
sub
inc
push
add
sti
ret
push
or
mov
sub
push
cltd
repnz
lret
jle
adc
in
xchg
dec
imul
pop
inc
rorb
or
and
push
mov
xor
mov
out
testb
pusha
arpl
xorl
mov
xchg
mov
fidivs
out
aaa
in
cmp
bound
jbe
popf
stc
xchg
xchg
dec
mov
adc
lea
movsl
xorl
sahf
pop
pop
fsubl
pop
test
addb
fsubs
loop
insb
xchg
outsl
les
test
jae
xchg
aas
add
pop
add
inc
loop
cmp
int3
sbb
dec
add
cmc
inc
rol
stos
pop
aas
sti
outsl
int3
push
aam
rcll
sti
cs
and
mov
jae
sbbl
push
sbb
or
jae
fs
mov
pop
fistpl
cmp
inc
mov
pop
inc
push
das
fisubs
push
or
out
js
xchg
and
out
mov
gs
pop
pop
ds
je
insl
je
fidivs
cmp
pop
out
frstor
jmp
inc
int3
adc
push
sbb
test
sub
sarl
inc
sub
push
in
ficoml
push
pop
mov
ficoml
outsl
push
ljmp
pop
xor
or
adc
mov
fidivrl
push
ja
add
sub
ds
or
rcrl
lea
adc
mov
xchg
mov
jno
aas
fdivrs
cs
inc
pushf
cmp
dec
cmpl
jno
inc
pop
xor
jmp
or
lds
adc
test
aaa
pop
je
xchg
xchg
aaa
pop
dec
mov
push
sbb
mov
inc
repz
iret
dec
call
outsl
lret
gs
add
mov
out
inc
jg
mov
push
add
mov
imul
inc
and
pop
add
stos
shr
gs
mov
pop
jb
dec
arpl
sub
or
nop
sub
add
mov
aas
and
jno
inc
push
out
repnz
das
cmp
movsl
xchg
insb
inc
fsubrp
push
xchg
aam
cwtl
fdivs
cmp
mov
xor
lcall
and
pop
push
outsb
pop
sahf
bound
pop
and
fiadds
inc
cmpb
or
xchg
sub
jmp
call
and
rcll
add
lret
adc
xchg
movsb
roll
xor
cmc
sahf
inc
xorb
pop
cli
fdivrs
daa
add
and
pop
cmp
inc
adc
mov
push
movsl
jne
push
shlb
jecxz
sub
out
xor
adc
test
testb
xor
sub
push
sahf
sub
ret
imul
insl
rolb
xchg
mov
neg
fldt
sarl
test
cltd
into
out
mov
call
mov
jne
aaa
and
sarl
xchg
dec
xor
clc
mulb
push
dec
mov
cltd
into
loope
mov
dec
sub
mov
in
cltd
cmpl
mov
adc
iret
xor
xor
mov
sub
outsb
sbb
fistpll
lods
pop
das
aam
xchg
sub
sbb
mov
push
mov
mov
lcall
cwtl
lcall
cwtl
mov
inc
sub
aas
lea
fcmovbe
adc
out
lock
push
pop
fwait
out
mov
fadds
dec
call
inc
fwait
fs
jl
out
movsb
pop
lock
mov
loopne
in
cmp
pushf
hlt
mov
dec
je
out
es
adc
xor
mov
outsb
xchg
test
mov
popf
loop
nop
mov
loopne
cwtl
lret
movsl
push
inc
mov
rorb
loope
xor
push
pop
mov
cmp
into
xchg
jb
jb
or
cld
stos
sbb
fmul
aaa
adc
ficomps
push
dec
adc
adc
add
pushf
in
out
push
mov
add
or
inc
in
jno
inc
mov
lods
cmp
inc
inc
or
imul
adc
jne
or
rorb
iret
scas
mov
loope
mov
in
ja
sbb
scas
or
test
xchg
mov
out
loopew,pn
js
xchg
jecxz
in
jb
mov
sbb
loope
sub
les
out
sbb
in
sbb
xor
jmp
mov
push
das
pushf
jge
rorl
jmp
lcall
lcall
mov
inc
cmp
daa
in
hlt
push
pushf
pop
mov
inc
jnp
adc
sbb
push
mov
pop
pop
cmpsl
mov
inc
xchg
and
mov
xchg
push
mov
push
cmp
jge
das
inc
jl
cld
lcall
jb
je
mov
cli
dec
add
and
cs
roll
jo
mov
arpl
jns
adc
shr
mov
sbb
cmc
add
xchg
cmp
push
movsl
fisubrs
stos
push
sbb
bound
mov
lock
stos
sub
fistps
jo
movsl
pusha
in
cmp
jns
push
jmp
daa
fisttpll
mov
mov
sub
xchg
jg
loopne
jp
xor
insb
or
push
ljmp
decl
shl
cmp
outsb
mov
mov
or
rclb
pop
sbb
loop
cs
inc
ss
imul
add
pop
jno
pop
sub
push
js
add
int3
mov
loope
or
jo
out
xchg
fucom
push
jne
xchg
mov
call
cmpb
mov
mov
xor
mov
call
ja
push
mov
adc
adc
add
add
pop
push
and
movsl
stos
out
jp
cmp
std
dec
repnz
les
mov
jo
cmp
pop
xchg
fcompl
sub
loopne
popf
mov
mov
fadds
lock
dec
repnz
jle
lods
and
push
popl
leave
imul
pop
loop
mov
push
ret
mov
ret
dec
enter
les
mov
iret
mov
arpl
jnp
or
rcll
cwtl
inc
xorl
mov
mov
aaa
add
scas
mov
jns
jge
orb
xor
bound
xchg
fidivl
clc
inc
aaa
testl
mov
inc
and
jl
xor
call
in
sbb
inc
jns
je
jl
iret
lock
loop
stos
and
push
addr16
lods
and
lcall
out
inc
push
mov
mov
das
push
push
iret
out
xchg
addr16
rcll
push
pushf
stc
jno
cmpsb
pop
mov
xor
inc
xchg
push
or
negl
test
or
dec
enter
xor
push
not
ljmp
bound
jb
inc
sbb
fistpll
xchg
push
sbb
jno
xor
rolb
cmp
jmp
jge
or
push
xor
fisubl
inc
lods
into
push
jmp
mov
xor
fistpll
or
jp
in
testb
push
fwait
out
sbb
mov
test
leave
lock
cli
mov
std
push
je
fbstp
lcall
mov
inc
xchg
pop
mov
arpl
xchg
out
mov
call
inc
jle
add
push
je
imul
push
add
lods
push
mov
ja
xchg
sbb
iret
movsl
adc
fcompl
and
scas
jb
push
je
pop
in
fbld
add
insl
das
fwait
mov
mov
or
lods
mov
xchg
popf
push
lock
adc
sarb
adc
lods
rcrl
or
mov
pop
mov
sbb
loop
fsubp
repnz
sub
shlb
adc
mov
jecxz
jne
mov
or
fistl
push
push
int3
fisttps
imul
or
les
jle
fstpt
mov
sti
je
pop
ret
sbbb
mov
inc
adc
data16
xlat
lahf
mov
imul
xor
call
lods
or
adcl
jg
je
movsb
popf
dec
cmp
daa
push
or
inc
iret
and
not
stos
jnp
cwtl
mov
push
mov
mov
add
mov
mov
or
pop
cmp
enter
dec
xlat
push
sub
lret
outsb
fistpl
stos
mov
movsb
aad
jne
pushf
jmp
ljmp
imul
enter
test
imull
sbb
push
fldcw
stos
mov
int
ljmp
xlat
mov
inc
shl
pop
mov
mov
ljmp
dec
shrl
aas
hlt
loope
leave
ss
dec
clc
dec
loop
mov
repz
out
sbb
pop
jae
roll
sub
roll
jmp
test
cwtl
xlat
vpcomuw
fs
fadds
lret
xlat
inc
mov
and
stos
outsl
push
pop
xor
jp
sub
mov
pusha
ss
mov
nop
fildll
sbb
roll
dec
dec
xlat
sub
pop
xchg
cld
inc
or
add
test
test
add
js
jmp
or
mov
sti
call
out
jp
and
add
arpl
les
xchg
lret
jge
mov
fs
or
push
pop
or
dec
xchg
test
xor
fnstcw
sbb
fmull
mov
push
bnd
cs
faddl
aam
sbb
mov
or
xchg
bswap
and
inc
aaa
loopne
xor
dec
adc
pop
mov
stos
jl
mov
push
xchg
xor
inc
pop
pop
sbb
sbb
sbb
leave
and
xor
shlb
je
sbb
inc
out
outsb
fdivs
test
roll
or
pop
xchg
inc
adc
and
push
xchg
or
jo
xchg
andb
push
je
andb
sbb
xor
movsb
es
je
in
jl
aaa
pop
push
scas
push
dec
dec
adc
inc
mov
pop
and
xlat
fdivrl
jns
mov
icebp
jno
xor
test
inc
mov
adc
into
pop
jge
or
loope
inc
xchg
sub
loop
cmp
adc
and
adc
xchg
sbb
inc
dec
lds
loope
sbb
push
inc
push
adc
in
bound
ror
es
mov
xchg
jge
jge
pusha
mov
mov
je
cwtl
mov
adc
xorl
mov
cli
push
test
sub
inc
or
cmp
adc
add
ds
scas
push
mov
sub
push
dec
sub
or
dec
xor
jecxz
iret
mov
dec
sub
push
sub
lret
push
cmovp
je
loope
pop
adc
cmp
lods
add
mov
and
xor
mov
xor
lcall
and
clc
nop
cs
mov
jmp
pushf
adc
out
xchg
ss
cmp
cmpsl
xorb
nop
in
sub
in
ds
mov
cmc
in
jmp
pop
dec
int
xchg
sub
popa
mov
sub
add
bound
int
stos
add
adc
je
inc
jle
dec
sbb
stc
pop
cmp
insb
inc
sub
mov
out
inc
call
je
in
mov
lods
xor
add
addr16
sbb
mov
push
gs
fsts
jae
dec
push
fiadds
or
std
outsb
mov
imul
jecxz
and
and
inc
imul
fdiv
adcb
shrl
fsts
mov
mov
push
inc
fmull
sti
lcall
push
fsubr
jmp
je
cli
push
movsl
pop
pusha
leave
dec
loopne
mov
clc
or
outsb
sbb
loope
cmp
mov
loope
dec
mov
cli
xchg
pop
std
fimull
sbb
fwait
mov
mov
lock
lcall
enter
inc
and
test
bound
jns
cmp
push
add
sub
cli
pop
mov
insb
iret
cwtl
lcall
mov
ss
lret
sub
add
addr16
ret
pop
test
jp
es
test
testl
sbb
bound
sbb
cmp
push
and
push
loope
mov
repnz
aad
andl
fldenv
lods
mov
outsb
adc
mov
sbb
bnd
into
add
hlt
ja
aas
add
sbb
aas
push
das
xorb
lds
cmp
test
cltd
test
popa
jmp
xor
mov
jns
pop
mov
push
fs
inc
je
add
xchg
aad
movsb
js
out
or
xrelease
push
xor
stos
fbld
ja
popa
frstpm(287
int
jle
adc
and
cltd
sub
mov
in
mov
mov
jbe
in
stc
mov
lcall
or
mov
jo
out
push
scas
push
and
pop
adc
mov
shlb
stc
xchg
xor
out
movsl
xlat
dec
je
ret
inc
and
outsl
fadd
mov
stos
dec
js
enter
ss
sbb
and
sbb
mov
xor
and
push
and
fdivs
je
orl
inc
or
lock
pop
fwait
mov
int
stos
mov
adc
xchg
ror
repnz
or
pop
pop
push
in
add
mov
jecxz
fwait
stc
ret
inc
sbb
and
loope
and
add
arpl
adc
dec
fildl
sbbl
sarl
fidivrs
sub
out
jp
lock
sub
data16
lds
or
movsl
inc
popa
or
or
or
repz
cmpsl
pop
jg
jle
cmp
loopne
inc
jecxz
inc
es
lds
add
hlt
push
sub
adc
sub
adc
shlb
pop
out
movsl
outsl
or
jb
fwait
xchg
xchg
dec
adc
inc
dec
sbb
into
outsb
push
mov
jge
sbbb
sbb
movsb
mulb
daa
sub
push
imul
push
lahf
pop
scas
add
pop
mov
stos
out
xlat
cmp
cltd
arpl
popf
jmp
mov
mov
rcrb
movsb
in
int
stos
sbb
and
and
xor
aam
rcrl
rcrb
lods
add
push
fs
jmp
fs
addb
popfw
pop
jae
sbb
xchg
pop
cld
imul
sub
addr16
movsb
sbb
or
cmp
mov
cmp
cs
inc
out
rcll
pop
xchg
sbb
andl
dec
sti
jle
lock
lds
mov
das
mov
fiadds
js
cmp
stc
in
sqrtps
rcrl
mov
out
into
pop
or
dec
test
lret
mov
mov
ss
and
mov
decl
cmp
jns
mov
sub
insl
inc
imul
negl
and
pop
jp
sub
mov
jecxz
add
xchg
push
dec
in
or
negb
adc
mov
out
and
mov
lcall
dec
iret
cld
adc
inc
enter
enter
mov
push
adc
sub
int
and
lds
test
mov
cmp
inc
cmp
and
ds
cwtl
sub
sbb
lahf
mov
cmp
fsts
xchg
dec
push
movsb
stc
jo
xor
xorl
dec
pop
push
pop
test
jb
push
out
ss
and
inc
hlt
mov
push
mov
out
stos
cs
adc
push
sub
pop
mov
and
test
pop
push
or
ljmp
adc
fwait
call
mov
pop
ret
not
test
push
xchg
jecxz
pop
dec
cmp
cmp
push
push
pusha
dec
divl
dec
shrb
add
test
cmp
lret
aam
mov
sbb
jecxz
sbb
mov
in
je
test
mov
mov
mov
adc
cmp
pop
cmpsl
pusha
icebp
or
add
or
sub
push
dec
out
rclb
fnstcw
fisubl
fldenv
cmc
stos
push
mov
pop
dec
sahf
rcrb
sbb
dec
xchg
lock
iret
test
jns
popf
or
ja
mov
dec
insb
sbbb
push
jecxz
jg
sarb
pop
std
pop
mov
js
inc
das
jg
fnstenv
lea
jb
mov
sub
rclb
dec
xor
test
mov
mov
add
mov
and
sub
popf
adc
xor
jecxz
pop
xchg
stos
or
or
mov
adc
dec
adc
pop
xor
mov
pop
cli
jns
loope
repnz
jle
daa
lcall
clc
test
push
aad
add
xor
fisttpl
sub
cmp
insl
adc
daa
es
out
cmpsl
inc
rorl
into
scas
xor
ds
pop
int3
loop
add
xchg
xor
incb
addr16
sbb
addr16
nop
pop
repz
dec
push
addl
insb
pop
cmpsb
xor
dec
jbe
lds
bound
lods
ret
pop
test
mov
xchg
sbb
test
xchg
icebp
mov
xchg
imul
adc
push
xchg
fs
xor
jp
adc
filds
out
out
sub
pop
mov
jae
mov
jns
hlt
xchg
jmp
or
sbb
fdivrs
mov
cwtl
test
inc
sbb
and
push
popa
imul
inc
and
xchg
insl
vpmacsww
test
xor
inc
xor
push
xor
out
push
test
gs
das
add
cmc
xchg
inc
mov
das
les
js
shlb
lahf
lret
std
dec
or
jl
pop
push
xchg
shlb
push
dec
cli
xchg
ret
stos
mov
inc
dec
sbb
int3
cmp
xchg
rcrb
loope
or
lods
mov
addb
sbb
sbb
sahf
xor
es
aad
insb
mov
jo
test
cmp
pop
repz
faddp
addr16
stc
cmpsb
les
push
imul
pusha
das
repz
cld
cwtl
dec
call
in
sbb
fstpt
jae
push
notb
dec
add
js
inc
cmp
mov
dec
xchg
aad
inc
test
and
mov
cli
es
push
sbb
xor
test
test
ret
jae
hlt
dec
mov
mov
cs
mov
sbb
and
negb
adc
and
adcb
or
cmp
mov
mov
sbbb
sbb
cmp
xlat
fmuls
out
mov
lret
rcrl
mov
stc
lcall
cmp
pushf
mov
xchg
lds
jnp
and
and
ficomps
inc
sub
shr
push
pop
mov
jne
xor
dec
in
jg
sub
jmp
lock
ffreep
jnp
or
dec
push
xchg
add
fwait
mov
stos
stos
mov
mov
movsl
inc
test
inc
jns
cli
outsb
adc
and
aaa
imull
xlat
mov
testl
orb
mov
data16
loopne
ljmp
int3
enter
mov
in
mov
mov
movsb
mov
in
inc
ror
lods
push
int
push
je
out
jb
flds
jg
mov
popf
daa
push
sbb
push
cwtl
sub
subb
cmp
cmp
add
xchg
or
imul
or
arpl
inc
rcll
outsb
aas
fadds
insl
leave
rolb
ljmp
or
jne
imul
add
daa
jns
mov
cmpsl
add
negb
ret
mov
cmpl
pop
arpl
insl
mov
stos
mov
push
mov
in
mov
inc
or
dec
mov
scas
push
pop
imul
inc
cmp
xchg
ret
mov
jp
xor
pop
mov
and
iret
cltd
aad
lcall
and
movsl
inc
dec
dec
roll
add
js
cmpsl
cmp
inc
pop
mov
or
test
fistps
adc
dec
sub
xchg
loope
jge
inc
add
cmp
nop
sub
movsb
and
cltd
push
xchg
fnstsw
mov
lds
adc
xor
mov
or
mov
cmpl
ds
add
pop
faddp
aad
test
lock
leave
adc
push
cmc
test
jbe
xchg
out
mov
and
add
in
jns
or
icebp
pop
push
in
mov
pop
fisttpll
cmc
add
filds
xor
mov
or
imul
jae
fs
jle
lret
fiaddl
aad
mov
push
or
shl
sub
shlb
add
xchg
dec
inc
or
push
out
dec
shll
cltd
push
and
mov
getsec
leave
test
jne
int3
int3
push
ret
mov
scas
js
fsubrp
ret
lcall
adc
mov
repz
arpl
shl
pushf
xor
mov
xchg
fwait
and
or
pop
cli
mov
mov
loopne
jge
js
popf
loopne
mov
inc
nop
daa
jle
test
aas
fstpl
sbb
mov
fdivr
xchg
cmpsb
rolb
cmp
jmp
sub
fidivrl
jns
jne
andl
addl
mov
out
leave
mov
mov
nop
icebp
mov
dec
call
cmp
jns
inc
and
pop
mov
xchg
dec
push
fisubs
dec
aaa
mov
cli
add
pusha
nop
dec
jge
aam
imul
xor
mov
andb
ret
mov
pop
arpl
or
add
push
jnp,pn
push
pop
mov
inc
sub
ficomps
mov
lods
fdiv
leave
adc
lahf
divb
push
fcomps
imul
hlt
fdivs
dec
popa
ja
xchg
insl
add
jg
jg
pop
push
cld
dec
test
inc
push
mov
mov
dec
inc
mov
cmpsl
sti
jge
outsb
mov
and
lea
xor
inc
andb
hlt
call
sar
sub
daa
outsb
mov
in
mov
pop
pop
fs
add
pop
into
push
leave
sub
andb
pop
jae
stc
movsb
stc
pusha
xchg
jbe
imulb
aam
lret
popa
dec
aas
shll
dec
xchg
cmp
and
jno
xchg
push
hlt
pop
ljmp
add
pop
stos
bound
xor
dec
test
adc
xchg
cmc
and
add
data16
js
add
cmp
pop
sarl
pop
jle
test
xorb
pop
push
sti
mov
outsl
dec
mov
mov
mov
dec
inc
shlb
movsb
adc
mov
repz
aas
cmc
loop
or
dec
and
aas
in
int3
sub
fstpl
insb
push
sbb
test
and
lods
or
leave
lea
pushf
out
inc
mov
andl
xchg
into
aaa
mov
pop
das
ret
sbb
mov
cmpsl
pusha
loope
jne
inc
adc
pop
xchg
lods
xchg
and
ljmp
sbb
adc
cmpb
dec
jle
pop
and
pop
jle
push
pop
and
nop
inc
xchg
rcrl
ja
push
ficoms
pop
or
ljmp
leave
inc
dec
fs
shrb
sbbl
jge
lret
outsb
dec
daa
sti
sbb
sbb
and
lret
testl
mov
nop
lahf
lea
xchg
jge
out
xchg
movsb
pushf
or
adc
in
fistl
xchg
inc
add
dec
nop
loope
push
mov
inc
cmp
push
test
jl
arpl
mov
in
enter
xchg
decl
fwait
pushf
pop
mov
inc
jp
push
popf
jne
add
in
mov
mov
mov
leave
push
push
pop
mov
dec
mov
pop
jg
into
das
jno
shrb
in
pop
in
cmp
or
sub
aaa
in
inc
cmc
dec
mov
loope
ljmp
insl
insl
push
dec
loop
pop
mov
call
dec
jns
adc
jb
cmp
movsl
xchg
test
lods
sbb
xchg
pop
adc
ljmp
inc
cmc
mov
sbb
popa
test
jecxz
in
movsb
cmpsl
xchg
adc
mov
or
push
pop
nop
decb
cmp
cmpsb
sti
push
das
cmpsl
imul
fs
dec
or
dec
jge
mov
push
xor
and
mov
idiv
or
bound
movsl
ret
fcmovne
jno
push
add
or
cmp
sbb
pushf
les
test
insb
arpl
or
push
jg
aam
sbb
sbb
dec
add
inc
mov
mov
fcoml
aas
add
popf
xchg
sub
fmull
outsb
and
data16
sbb
jmp
jo
push
cmpb
pop
data16
push
pop
lret
push
xchg
cmpsb
xchg
pop
jle
mov
iret
in
sub
jmp
andl
lcall
push
cmp
pop
lods
add
aas
xor
push
or
outsl
cmpsb
int3
adc
outsl
adc
je
call
lcall
into
mov
repnz
mov
mov
in
push
cmp
mov
mov
mov
xchg
xchg
and
inc
xchg
fnsave
insb
hlt
push
adc
inc
and
and
fcmovnb
outsl
lods
inc
imulb
adc
sub
notl
pop
add
je
pushf
and
dec
push
xchg
flds
fs
fst
add
xlat
out
pop
in
jecxz
roll
cld
cli
jl
cmc
bnd
xchg
int3
push
pushf
inc
les
sub
or
mov
outsb
ss
movsl
inc
cmp
testl
jae
jp
push
xor
ret
ja
vpmacswd
icebp
xor
and
psrld
cld
stc
int3
xlat
movsb
out
mov
pop
cwtl
xchg
sbb
push
jns
pop
imul
push
lock
xchg
gs
aas
fmull
mov
pop
inc
xchg
add
mov
scas
gs
data16
xor
jp
adc
lret
out
jno
hlt
pusha
inc
sbb
pop
outsb
pusha
mov
cmp
pop
jae
lods
jp
lret
or
mov
and
jp
xchg
dec
ret
ss
push
shlb
sahf
inc
gs
xchg
roll
mov
push
jp
pop
leave
ljmp
jle
rcrl
ret
mov
mov
loop
xchg
mov
pop
jg
outsl
gs
shrl
sbb
mov
popf
sbb
leave
adc
les
out
clc
adc
dec
outsl
mov
out
inc
dec
and
lret
push
jno
inc
inc
inc
shll
xchg
cmp
andl
xor
inc
ss
xchg
jmp
inc
mov
andb
sti
stc
xchg
hlt
popf
lret
inc
fwait
mov
adc
mov
mov
sbb
in
push
xchg
mov
push
xor
les
adc
xorl
jl
stc
xor
in
jecxz
adcb
ret
or
mov
int3
inc
add
pop
push
jnp
dec
push
jae,pt
jp
out
out
push
dec
je
stc
inc
mov
mov
jae
lea
fdivr
lods
adc
or
repz
push
mov
xlat
jnp
sub
mov
push
sbb
jne
std
mov
mov
dec
fsubs
or
jbe
shrb
pop
ret
sub
fstpt
inc
add
shlb
out
xor
push
mov
lock
sahf
fisubs
rcrb
stos
pop
lahf
repnz
pop
add
xlat
stos
sahf
js
mov
or
call
pop
jo
xchg
cltd
push
fsubr
xor
aaa
dec
imul
push
jns
mov
xchg
loop
xor
out
cmp
push
sub
rclb
add
lds
fbstp
xor
mov
call
jae
xor
and
push
testb
jnp
xchg
push
jae
scas
adc
sarl
sub
jne
repnz
js
pop
inc
xor
pop
subb
xchg
fadds
cmp
popf
pop
sub
nop
sub
inc
and
dec
dec
jbe
jne
pusha
pusha
imull
ss
push
stos
pop
in
push
arpl
and
add
lods
les
mov
outsl
pop
inc
or
push
sub
adc
insb
loop
jae
sbb
push
lds
push
push
add
int3
sbb
xor
mov
sbb
add
xchg
push
pushf
jnp
pop
xor
jbe
sub
aad
xchg
loopew
mov
out
dec
or
imulb
and
and
sub
push
inc
cltd
leave
mov
aas
mov
sbb
notb
les
in
incb
fisttpl
icebp
std
adc
and
paddd
ds
js
sub
into
mov
adc
sub
repz
sarl
fmull
test
es
test
cmp
xchg
sub
add
xchg
call
jg
scas
pusha
sub
testb
xor
mov
pop
aad
lods
lods
push
mov
or
add
pop
or
and
lcall
add
adc
jge
aam
cli
or
cld
cmp
sbb
movsb
or
jmp
pop
dec
cmpsb
mov
push
xor
and
push
xchg
std
call
xorb
inc
ret
xor
int
cld
sbb
add
or
lea
mov
insb
insl
cwtl
test
in
push
jmp
rclb
sti
mov
fadd
mov
es
loop
jp
mov
insb
mov
or
mov
enter
mov
fisttpll
inc
aas
mov
jmp
into
or
sbb
loope
loope
adc
ljmp
ds
mov
jb
imul
xchg
pop
sub
dec
mov
pusha
icebp
test
and
test
push
loopne
lahf
or
jge
sbb
mov
mov
cmp
outsb
and
and
mov
dec
pop
ja
inc
das
push
mov
pop
sub
ret
push
in
adc
mov
iret
test
arpl
or
push
xor
in
inc
xor
ss
out
mov
xor
ja
jnp
cld
daa
dec
pop
repz
dec
in
pop
fcomi
or
imull
stos
pop
inc
mov
aam
lods
into
pop
mov
dec
push
in
cld
cmp
insb
add
pop
ljmp
jns
lahf
xchg
adc
into
aas
idiv
push
xor
or
jmp
mov
mov
mov
in
dec
and
and
popa
scas
sub
xor
mov
data16
sub
xchg
clc
ret
sbb
sarl
pop
repnz
lock
fs
decl
movsb
mov
inc
cwtl
xor
jecxz
rorb
pop
enter
call
in
outsb
rol
inc
lods
sub
arpl
mov
sbbb
pop
mov
outsl
xor
jne
cmp
pop
xchg
pop
fwait
mov
loopne
popf
mov
popf
mov
in
sbb
cmp
repz
inc
push
jmp
sbb
sub
push
scas
dec
pop
push
lea
adc
cld
add
inc
jne
outsl
mov
hlt
mov
mov
mov
hlt
add
scas
cltd
fwait
mov
mov
xor
js
pop
fiadds
xchg
mov
xchg
sub
dec
pop
daa
or
pop
adc
lret
mov
sbb
ret
fcmovnu
arpl
xchg
xchg
jnp
test
mov
and
mov
or
filds
push
data16
dec
out
loope
in
stos
pop
xor
inc
jbe,pt
out
repnz
nop
rorb
les
mov
test
popf
mov
jb
cmp
popl
and
push
inc
xor
mov
movsb
adc
mov
adc
sub
pop
pop
jge
ficompl
adc
push
in
add
lret
push
dec
sbb
add
adc
adc
gs
xchg
xor
pop
iret
int
or
jecxz
repz
add
sbb
push
ucomiss
test
mov
loope
and
sbb
xchg
inc
adc
mov
jecxz
cmpsl
adc
outsb
daa
jne
xchg
dec
ret
das
jne
sti
repnz
xchg
out
je
dec
mov
imul
jge
cmc
fwait
sbb
out
repz
pusha
push
cmp
insb
mov
jmp
jmp
or
nop
push
in
shll
sub
mov
add
adc
mov
dec
jmp
jno
clc
add
and
dec
ret
popf
int
push
subb
cwtl
inc
fstpl
test
test
or
push
pop
repz
mov
xor
jbe
inc
in
pop
add
popl
addr16
sbb
jno
push
es
sub
repnz
and
cli
lea
xor
push
popa
push
inc
fsubs
sbb
lds
inc
pop
sub
enter
push
mov
jge
std
mov
shr
sahf
hlt
dec
cltd
or
cli
push
pop
jne
cld
gs
leave
mov
push
lahf
out
popl
or
mov
and
jp
inc
dec
dec
pop
addr16
jo
loopne
repz
push
mov
sarb
call
ficoms
add
int3
ss
imulb
iret
icebp
cmp
out
nop
push
out
idivl
dec
sbb
in
ret
xor
jmp
jl
sub
sub
mov
xor
mov
push
push
test
inc
and
mul
xlat
dec
rcl
test
ret
test
sbb
sti
add
iret
bound
mov
xchg
shrl
xlat
cmp
add
pop
push
adc
mov
mov
cli
gs
hlt
outsl
lods
sti
or
dec
xchg
mov
push
jecxz
and
xor
out
les
imul
out
add
xor
mov
push
xor
fdivrl
imul
movl
cwtl
cmp
xor
add
enter
jno
scas
cli
lcall
cmp
mov
cmp
mov
mov
pop
fcomi
or
lods
pop
sbb
mov
sub
mov
pushf
push
mov
insb
out
jnp
lock
rolb
adc
jns
ljmp
mov
sarb
jg
sbb
das
iret
dec
xchg
pusha
pop
fs
xlat
and
xchg
mov
push
repnz
clc
xor
insb
hlt
int3
adc
cli
mov
sbb
mov
cmpsb
imul
test
sbbl
mov
xchg
pop
mov
push
cmc
sub
xor
leave
jl
imul
lcall
adc
jmp
add
dec
popa
dec
push
mov
lcall
inc
movsl
and
psadbw
imul
or
jb
mov
cmp
addl
jmp
push
jmp
gs
adc
pop
lret
inc
pop
fidivs
xchg
dec
lock
cltd
loopne
loope
add
in
shll
push
mov
lahf
jno
xchg
imul
mov
pop
mov
aaa
ret
insb
shll
clc
mov
std
imul
into
inc
rcll
jne
mov
cmpsb
loope
or
dec
cmpl
adc
and
lea
cs
mov
sbb
in
mov
neg
lds
insl
pop
nop
mov
dec
and
mov
dec
ljmp
lcall
pop
insb
stos
cli
adcl
je
and
mov
out
repnz
adc
push
daa
mov
dec
xor
jno
mov
mov
aam
jge
or
js
loopne
mov
jno
cmp
push
pop
xchg
call
mov
inc
rcl
int
jge
mov
and
icebp
mov
imul
pop
xor
aad
dec
jmp
aaa
mov
ficomps
aad
sub
mov
aam
subb
call
or
dec
push
fsubrs
test
sub
push
hlt
bnd
pop
xor
in
pop
cs
inc
add
js
jae
data16
test
push
lea
outsb
mov
mov
pop
xor
xchg
jmp
adc
mov
pop
test
insl
test
mov
out
jecxz
pop
xchg
lds
inc
lds
iret
insl
pop
jmp
jne
iret
hlt
inc
lcall
repnz
xchg
dec
jmp
popf
cmp
mov
mov
xchg
push
lea
push
cmpsl
ds
cmpsb
mov
xchg
daa
setg
int
and
jp
out
mov
sub
jbe
xor
push
insl
add
mov
shll
ret
aas
xlat
adc
mov
popl
nop
sarl
push
sub
loopne
xor
in
loop
mov
mov
dec
icebp
jne
push
fsubr
loopne
sub
xchg
fldt
push
les
int
mov
cmp
bound
loopne
dec
lea
jo
cmp
iret
push
mov
push
sub
dec
dec
xchg
cmpsb
push
mov
mov
in
test
jne
inc
mov
adc
arpl
cmpb
sub
jge
dec
or
jmp
cmp
dec
add
mov
adc
les
adc
fstpt
stos
and
stos
or
cmp
add
jo
outsb
aas
lret
inc
out
inc
xchg
mov
aam
stc
jle
mov
fsubrs
loope
sbb
mov
rcrl
stos
adc
sbb
rorb
add
fbstp
adc
dec
push
cmp
xchg
movsl
jle
jne
sbb
frstor
xor
dec
add
xchg
cltd
lods
test
pop
adc
icebp
push
fwait
lret
dec
bound
cmpsb
call
jns
pop
jae
fwait
cmp
mov
inc
cmp
xor
ret
insl
xchg
aam
and
es
loopne
lods
adc
jae
mov
fdivp
bound
push
test
xchg
add
std
ret
mov
lods
lods
popa
mov
mov
lahf
lret
ss
out
or
imul
in
jmp
and
movsb
mov
out
push
and
jo
mov
rclb
cwtl
popa
xorb
dec
cmpsb
rorb
in
addr16
xor
lret
push
pop
das
jnp
roll
cli
das
adc
sub
shr
adc
pop
jno
push
dec
loopne
inc
jns
or
jl
cmpsl
aas
loope
enter
mov
sub
push
adc
adc
jg
xchg
lods
repz
xchg
jmp
jbe
cmp
int3
inc
inc
mov
out
jae
repnz
xor
daa
in
mov
es
mov
repz
or
add
sarl
js
rorb
and
dec
loope
xchg
sti
pop
loopne
or
enter
lret
or
hlt
bound
sbb
inc
outsl
mov
jmp
leave
xchg
popa
bswap
stos
cltd
lods
ds
sub
lret
mov
cwtl
js
int3
lret
imulb
push
push
dec
add
ret
imul
mov
push
imul
in
imul
mov
lock
movsl
mov
fsubs
jnp
icebp
xchg
xor
pushfw
lods
pop
into
xor
mov
enter
xor
push
mov
aad
jecxz
cmpsl
xchg
iret
cmc
xchg
adc
mov
cmp
test
cmp
sub
mov
in
nop
jge
lret
bound
inc
icebp
adc
fs
aas
hlt
jae
cld
arpl
jbe
mov
shll
leave
pusha
pop
int3
push
lret
mov
scas
imul
fs
and
ret
cmp
scas
inc
sbb
push
shll
outsb
test
aad
add
push
ljmp
daa
fcmove
and
mov
pop
jns
stos
cmp
outsb
sbb
xchg
or
mov
sbb
pushf
pop
stos
cltd
stos
aam
jle
sub
push
jmp
testb
jecxz
mov
jmp
das
jnp
out
dec
dec
call
jmp
and
dec
cmp
inc
pop
icebp
cld
das
push
ja
addr16
sub
js
sbb
dec
add
or
inc
mov
enter
aaa
fsubrl
iret
mov
adc
loopne
dec
iret
pushf
pop
adc
pop
xchg
fsubs
sbb
jbe
pop
jbe
shll
dec
jno
sub
sarb
pop
lea
insb
xchg
jle
jne
inc
mov
pop
xchg
mov
mov
dec
dec
jle
mov
mov
aad
or
adc
gs
iret
and
push
lds
out
push
adcb
das
jmp
test
adc
inc
mov
stos
dec
add
pusha
push
xor
push
jo
and
pop
dec
mov
inc
and
ss
pop
rcrb
test
hlt
les
jp
inc
cmp
outsl
into
xor
or
sbb
inc
lahf
stos
pop
shrb
popa
subl
pop
int3
js
es
jp
or
mov
repnz
mov
in
dec
loop
ja
shll
movsl
nop
sti
push
or
cltd
clc
addr16
sbb
push
sbb
inc
call
jge
insb
jno
out
mov
mov
rcrl
jl
addb
inc
push
je
sbb
nop
les
mov
pop
mov
test
mov
jo,pt
mov
lock
in
addr16
pusha
adc
shlb
add
in
mov
adc
xchg
xor
inc
int
adc
pop
adcl
test
mov
mov
ja
mov
in
rorb
fiaddl
jp
lods
shl
and
lret
data16
mov
dec
pop
push
je
sub
lds
xchg
inc
mov
lret
daa
push
pop
lock
fs
xor
out
xor
popf
push
sahf
xor
int3
adc
out
repz
pop
lahf
cwtl
imul
int3
andl
data16
div
adc
aaa
iret
or
ret
or
loopne
jecxz
incb
mov
adc
adc
pushf
jmp
sahf
mov
stos
mov
out
and
inc
mov
jle
push
mov
and
idivb
pop
iret
xchg
push
insb
js
icebp
xchg
push
push
test
arpl
inc
out
outsl
dec
jge
daa
movsl
dec
fwait
jmp
mov
or
in
int
shlb
out
ror
sub
lds
out
sub
mov
jbe
jp
aad
xor
pop
mov
adc
xchg
jl
dec
push
popa
insb
repnz
sarl
rorl
inc
test
xor
xchg
loopne
mov
dec
test
subl
xchg
dec
dec
inc
mov
cmp
mov
outsb
and
jns
into
xlat
jmp
aad
daa
subb
or
dec
adc
or
xor
in
cmp
cmp
mov
imull
clc
fs
and
cmp
sub
dec
je
sbbl
scas
les
orl
mov
mov
mov
int
cmp
rcrl
repz
sbb
fimull
sbb
jb
cmp
imul
mov
jle
sub
and
out
test
xor
mov
xchg
sub
inc
xchg
dec
or
cmp
push
xchg
dec
inc
push
pop
jnp
or
out
push
ret
sahf
outsl
out
inc
int3
fs
into
pop
sti
pop
sbb
mov
mov
dec
adc
icebp
insb
sbb
cmpsl
mov
jge
or
insb
xchg
ss
bound
sub
bound
sub
ret
push
je
sahf
jp
mov
push
lods
inc
aam
mov
fwait
mov
mov
push
pop
mov
lock
adc
push
xor
nop
mov
push
sub
push
push
jnp
cmp
cwtl
aad
add
xor
or
mov
stos
jp
seta
ja
jp
adc
sbb
xor
inc
cwtl
xchg
add
sub
cmc
divb
mov
and
fs
dec
inc
arpl
sbb
xchg
adc
mov
sbb
lea
mov
cmp
cmpsl
dec
pop
faddl
inc
inc
sarb
push
dec
shlb
aad
shl
loop
cmp
push
ss
mov
orb
push
push
aad
xlat
push
and
mov
pop
mov
ljmp
mov
test
sbb
dec
ficoml
sub
xorl
pop
or
imul
sub
ds
mov
nop
aaa
lcall
and
adc
aas
and
push
add
popf
inc
movsl
dec
lret
lret
dec
sbb
inc
gs
shll
mov
imul
lret
push
xchg
je
insb
aam
sti
popf
inc
lods
ljmp
jp
and
fimuls
sub
and
fldcw
cmp
cmpsb
fwait
stos
cmp
jg
adcl
add
sub
mov
sub
andl
sbb
push
mov
dec
cltd
loop
xorl
dec
mov
test
push
push
adc
add
out
out
push
cmp
cmp
inc
icebp
push
xor
arpl
and
jno
inc
mov
sub
push
mov
js
mov
xchg
stos
sub
inc
out
mov
dec
push
xor
inc
fcoml
into
dec
mov
in
pop
inc
sub
insl
fcoms
lcall
jge
inc
xchg
iret
add
push
mov
clc
clc
xchg
cmp
adc
push
lret
ja
push
push
push
cmp
or
pop
pop
int
les
mov
insl
push
cmc
dec
jns
je
or
jne
mov
test
lea
roll
aas
ss
enter
dec
sbb
pop
leave
inc
cmc
int3
adc
cmp
aam
outsb
lahf
les
into
cltd
sub
movsl
cmpsb
jae
dec
pop
mov
dec
lea
out
imul
ja
xorl
scas
dec
or
jae
mov
push
pushf
fs
jb
jb
jg
aad
sahf
add
and
frstor
pop
push
xchg
push
mov
std
out
out
pop
out
sub
call
out
push
mov
xor
test
mov
int3
cmp
popf
push
imul
dec
inc
sub
cmp
adc
aam
pop
sub
cmp
jbe
sar
int3
or
dec
in
xchg
stos
idivb
pop
ds
ja
aam
push
cltd
cmp
inc
popa
fldl
cmp
shlb
xchg
or
sbb
jb
mov
jns
adc
or
cs
leave
mov
xchg
push
dec
ret
lret
add
mov
call
inc
jle
rolb
ss
call
pop
cmp
pop
into
nop
notb
and
imul
inc
push
adc
orl
push
dec
std
imul
out
mov
push
xchg
xchg
data16
adc
stos
or
push
ret
stc
test
cmp
push
pop
data16
popa
jecxz
xchg
lcall
lods
pushf
dec
lea
dec
and
insl
daa
jb
add
mov
inc
add
mov
dec
jge
sbb
cmpsb
iret
inc
add
divl
mov
mov
pop
sbb
sub
jecxz
jno
xchg
je
xorl
arpl
aad
dec
adc
outsl
dec
mov
repnz
inc
bnd
adc
mov
adc
dec
dec
bts
addl
and
loope
pop
stc
mov
inc
nop
leave
and
adc
pop
add
inc
dec
into
jecxz
movsb
mov
and
sub
out
jb
inc
cmc
push
dec
mov
and
sbb
push
or
push
and
mov
outsb
les
mov
pop
cmp
lock
movsl
add
mov
hlt
gs
mov
ret
sub
lret
out
pop
mov
sub
push
xor
pop
cli
pop
call
adc
sahf
jno
xor
push
jnp
sub
xor
ret
pop
inc
lods
sub
dec
xchg
aaa
sub
and
les
mov
enter
mov
xchg
shll
cmp
adc
mov
mov
ds
mov
push
jle
cmp
or
dec
lock
push
jbe
cltd
inc
adc
imul
shr
insb
cmp
mov
cmp
lcall
xchg
or
in
xchg
rcl
adc
jp
cs
test
inc
push
insb
ret
dec
mov
mov
mov
sub
fnsave
lahf
imul
fists
lods
push
cwtl
hlt
dec
add
xor
mov
enter
mov
xchg
cli
call
insb
and
dec
inc
mov
mov
adc
rorb
adc
clc
idivb
sub
sbb
adc
dec
test
cld
sbb
xchg
sub
shrl
sbb
lods
scas
jae
push
adc
fisubs
fsubrs
daa
add
pop
daa
push
cmp
mov
inc
shlb
in
cld
cmpsb
lea
or
loopne
dec
pusha
movsl
mov
aas
loop
push
push
xor
sbb
and
or
jp
and
push
or
stc
dec
enter
xor
xor
xchg
mov
mov
fbstp
mov
inc
popa
pop
xor
add
xchg
xor
in
sbb
jbe
mov
lahf
fimuls
pop
jb
rolb
in
xchg
sub
xchg
xchg
jl
sub
sbb
fnstcw
std
or
mov
mov
and
orb
repz
pushf
xchg
sti
jmp
mov
mulb
add
jl
sub
and
push
aas
out
dec
repnz
fidivl
insb
mov
ds
add
movsb
leave
push
iret
jno
xchg
clc
pop
rcl
ret
mov
lods
mov
pop
sub
inc
sbb
aaa
out
rol
cld
cmp
cs
pop
ds
mul
dec
scas
sub
add
imul
pop
push
repnz
imul
loopne
cmpsb
and
push
jne
pop
fnsave
pusha
jnp
sbb
add
inc
call
sbb
pop
inc
mov
xchg
es
std
push
xchg
mov
add
lea
xor
mov
xchg
mov
mov
jnp
dec
cmp
jo
cmp
icebp
push
sbb
xchg
ljmp
mov
cmc
jno
es
add
cld
loop
xchg
jne
mov
mov
movsl
idivb
fucomi
jne
push
push
cmpl
mov
xchg
in
mov
jb
jnp
lea
mov
popf
adc
mov
dec
adc
adc
cwtl
std
mov
mov
movsb
xor
pusha
sti
cmpsl
insb
clc
xor
dec
mov
sub
pop
inc
xchg
scas
fimuls
push
inc
data16
dec
adc
ljmp
and
test
nop
pushf
xor
pop
mov
xor
sahf
mov
mov
dec
pop
xlat
dec
mov
and
dec
or
push
repz
enter
movsl
mov
test
dec
loop
mov
inc
cli
iret
mov
enter
fistpll
stos
fwait
ret
adc
lods
mov
fs
negb
orl
fwait
adc
mov
mov
sub
cmc
sbb
pop
stos
jecxz
icebp
in
mov
hlt
aam
push
add
inc
subl
jg
bound
cmpsb
adc
mov
lcall
fstpt
lcall
sbbb
mov
inc
out
sub
sbb
dec
pop
inc
mov
mov
ja
or
inc
sbb
sbb
out
cmpl
sbb
lea
jmp
sbb
std
lcall
or
jmp
mov
sub
out
outsb
and
in
jl
mov
insl
dec
mov
dec
add
cmpsl
add
sti
loope
and
es
xchg
mov
and
pop
call
test
sbb
loopne
and
bound
or
pop
cmovl
sbb
inc
sbbb
cmc
repz
lock
add
lcall
imul
xchg
cmp
leave
out
push
add
cwtl
xchg
mov
daa
movsl
jno
mov
enter
push
xor
adc
adc
xchg
inc
pop
inc
dec
sbb
push
loope
cmp
sbb
mov
mov
mov
sbb
add
xchg
push
es
mov
or
mov
cmc
sbb
leave
adc
fbstp
and
aaa
add
jnp
cltd
stc
mov
out
fimuls
stos
mov
adc
or
ds
in
xchg
fiaddl
jp
mov
and
ds
sub
aad
lods
repz
cmp
push
cmp
sub
cmpsl
sub
and
ljmp
int
nop
pop
xchg
fsub
or
jne
lds
imul
xor
mov
jno
and
xor
imul
xor
and
jp
ret
xchg
jecxz
xchg
cmp
jno
jne
iret
lcall
out
push
sub
cmp
adc
push
fistpl
mov
cmp
pop
adc
sbb
fidivl
call
dec
out
cmp
sbb
movsl
or
rcrb
push
xor
push
pop
cmpb
test
pop
pop
jae
xchg
or
mov
mov
xor
cmp
fs
mov
dec
out
bound
ljmp
aad
add
popf
int3
xchg
mov
ja
rcrb
pop
repz
out
js
xchg
insb
jo
pusha
lret
lods
dec
lea
mov
fdivrl
add
pop
sarl
mov
sub
dec
lock
adc
hlt
testb
ret
dec
xor
je
sub
sbb
mov
mov
pop
xchg
inc
jg
mov
xchg
adc
inc
ret
sbb
testl
cmp
repz
leave
idivl
push
pop
push
scas
mov
std
mov
jecxz
inc
gs
pop
lods
jnp
mov
das
or
xlat
test
sub
fcoml
pop
inc
aam
dec
lods
ret
ja
movsl
adc
mov
je
dec
addr16
jle
mov
loope
mov
aas
mov
mov
add
lods
mov
xchg
lock
testb
pushf
cmpsb
mov
sbb
test
push
in
xchg
mov
shlb
pop
mov
mov
mov
push
je
insl
enter
enter
xchg
iret
shlb
filds
push
int3
cmp
cmp
pusha
aaa
ja
out
cmp
sub
sub
fisttpll
loop
sub
pop
dec
mov
xchg
push
or
addb
sub
and
mov
xchg
mov
pop
jns
scas
sbb
cmp
int3
loopne
pop
ret
sbb
les
andb
jne
iret
inc
pop
scas
sub
and
mov
ja
or
mov
ret
xor
in
lods
ja
shl
pop
add
hlt
in
push
mov
xchg
fstpt
out
mov
or
mov
ja
nop
or
jo
add
cs
cwtl
pop
mov
js
jl
popa
inc
pusha
enter
fwait
xor
pusha
cltd
aas
push
mov
push
icebp
jae
fwait
test
and
xchg
xor
dec
fwait
outsb
mov
jns
mov
ljmp
push
or
data16
push
push
cmp
loope
mov
andl
fsubl
das
sbb
outsb
or
test
negb
pop
bound
xchg
ret
stc
clc
jge
push
leave
pop
lret
push
xor
jo
bound
inc
inc
cvtps2pd
jg
dec
lcall
dec
fiaddl
mov
fstpt
aas
out
in
outsl
pop
add
fnstenv
sahf
cwtl
xchg
sub
xor
sti
xor
inc
fdivl
call
adc
sbb
dec
fdivs
sbb
or
out
mov
add
mov
int
sbb
and
pop
push
pop
and
dec
lock
pop
and
sbb
jne
cmpsl
xchg
mov
mov
mov
iret
cmp
dec
dec
dec
pushf
mov
push
add
shl
inc
sub
std
xor
mov
minps
in
scas
pushf
jge
fists
lock
mov
lods
or
jl
sbbl
stos
fdivrl
mov
movsb
or
push
movsl
dec
out
jb
cmpsb
into
cld
mov
les
in
adc
es
stos
xchg
insb
jg
cmp
mov
xchg
adc
std
lcall
or
call
jo
sahf
sub
pushf
gs
cmpsb
fsubl
xchg
jns
sub
lods
inc
xor
mov
sbb
sahf
mov
sub
push
mov
dec
icebp
mov
les
insb
repnz
fiadds
cmpsb
xchg
lret
movsbl
jns
rcr
jnp
push
pop
lea
pop
add
cmp
pop
test
mov
push
test
test
mov
push
hlt
jno
rclb
int
shll
pop
mov
inc
lock
cltd
xorb
push
int
xor
jmp
scas
dec
jle
ss
icebp
out
inc
js
xchg
or
and
lahf
icebp
ds
call
sbb
or
arpl
enter
test
add
std
roll
aaa
or
adc
cmpsl
push
sub
and
stos
pop
stc
test
stos
pop
dec
les
xchg
sar
das
inc
add
jecxz
gs
xlat
addr16
add
test
or
out
repz
push
mov
repnz
ret
inc
in
mov
jle
arpl
ficomps
or
lret
in
adc
popa
repz
mov
adc
pop
xlat
call
sub
mov
adc
daa
in
mov
aaa
mov
dec
call
dec
pop
xlat
cmpsb
addr16
rcr
pop
mov
pop
repnz
and
jnp
mov
out
sub
jb
xlat
mov
or
hlt
ror
les
fimuls
aaa
and
ret
dec
jp
out
popf
das
hlt
mov
xor
cld
xchg
push
cwtl
pop
push
mov
test
lcall
out
mov
push
xor
faddl
mov
xchg
call
push
pusha
shlb
lds
sbb
clc
dec
test
loope
and
mov
aad
and
push
stc
push
outsl
push
into
dec
lret
mov
adc
xchg
mov
repz
mov
mov
dec
mov
out
mov
jne
pop
lods
gs
loope
std
loope
scas
in
mov
pushf
cltd
shll
xor
and
jmp
jbe
pop
ficoml
mov
push
jns
mov
cld
adc
cli
xchg
xchg
out
push
popa
jmp
test
imul
or
test
mov
jbe
int
rolb
leave
push
sbb
call
mov
lock
jl
arpl
xor
mov
mov
push
ret
iret
bound
cmp
test
int
lret
fs
movsl
xor
xor
enter
add
stc
je
aaa
in
pop
push
jnp
pop
aas
add
clc
push
xlat
jecxz
push
sarl
mov
call
fucomp
lods
imul
bound
rcrb
loopne
loope
add
ret
push
mov
fst
dec
xorl
sar
jbe
call
fimuls
out
adc
popf
jle
mov
std
out
xchg
int3
sahf
les
sbb
mov
sbb
or
sub
es
in
insb
jle
in
gs
adc
sbb
insb
fistl
mov
inc
fs
stos
and
mov
xchg
pop
aas
jmp
and
fmull
fstl
addl
add
xor
sbbb
mov
add
iret
dec
gs
and
xor
or
xor
test
mov
cmpsb
lods
push
stos
movsb
rol
mov
jne
lret
scas
mov
push
frstor
fidivs
and
fisttpl
out
cmp
and
in
add
imul
add
lock
xor
adcl
adc
lods
imul
fs
mov
orb
push
movsb
lcall
clc
test
leave
out
pop
fidivl
adc
fst
aad
push
xor
xchg
inc
sub
aad
in
popa
xchg
xchg
cmp
and
outsb
xchg
icebp
jns
xchg
aas
add
fs
sti
cmp
or
sub
dec
aaa
loop
es
jp
fs
leave
frstor
or
in
xlat
cmpsb
mov
aaa
add
outsb
jno
lcall
stc
jle
xchg
mov
push
shll
shrb
mov
insb
lret
push
sbbl
xchg
xor
ret
fstl
popa
shlb
loop
pop
inc
jne
xchg
mov
jbe
ds
dec
adc
add
aad
adcb
pop
lahf
mov
lods
pop
cltd
lods
push
xchg
stos
jbe
mov
outsb
cwtl
push
xorl
push
sbb
leave
pop
inc
imul
mov
fisttpll
xor
xchg
inc
lcall
sbb
cltd
sbb
cs
outsl
loop
push
and
clc
adc
jnp
imul
mov
cltd
or
sub
rol
sbb
pop
mov
mov
lea
mov
das
inc
dec
xchg
pop
lahf
jo
sub
int
and
xchg
mov
add
inc
sub
outsl
fcoms
jo
and
xchg
or
add
arpl
jnp
ss
mov
xchg
cltd
inc
add
lahf
xchg
pop
icebp
push
cli
xor
sub
xchg
jp
cmp
ja
in
push
pop
cwtl
bound
add
adc
rorl
adc
jnp
movsl
shlb
or
and
jno
imul
es
inc
rclb
das
sbbl
xchg
jle
loop
pop
lret
dec
lcall
insl
add
xor
sbb
add
gs
jl
xor
and
push
std
jnp
cmc
aas
xchg
pop
shlb
stc
dec
popf
pop
sbb
push
mov
lods
repz
adc
ficoml
adcb
pop
cmp
jmp
sbb
mov
scas
cmp
rcrl
popa
hlt
mov
cmp
push
xchg
addl
loop
leave
or
jno
xlat
cmp
mov
rorb
dec
xchg
ja
xor
sti
sbb
repz
pop
mov
shll
fistpl
inc
sub
xorb
mov
stc
mov
imul
pop
sub
push
mov
std
sub
xchg
mov
stc
adc
pop
xor
arpl
insl
movsl
pop
jecxz
xor
and
mov
push
add
shll
les
pop
das
xchg
mov
scas
scas
inc
xor
push
rcrb
shlb
lds
mov
dec
jbe
xor
enter
aaa
popf
sbb
mov
adc
mov
cmp
es
cmp
adc
sbb
xor
sbb
in
adc
enter
or
pop
lock
mov
loopne
jae,pn
andl
scas
sub
push
and
push
push
xor
mov
add
and
push
roll
xor
mov
push
adc
cmpsl
pop
dec
adc
pop
in
push
jb
xchg
add
sbb
outsb
icebp
mov
xchg
xor
filds
adc
insb
outsb
or
adcl
scas
xor
add
std
mov
inc
addr16
pop
sub
lahf
inc
loop
stc
mov
into
ret
mov
inc
in
push
imul
ja
jmp
mov
lret
push
pop
push
sub
lds
adc
xchg
sbb
or
jp
movsl
popa
test
rorb
cmp
mov
inc
mov
cld
push
gs
sub
filds
pop
sbb
sbb
sbb
xchg
pop
pusha
gs
cmp
xchg
push
cmp
push
bound
cmp
scas
xlat
push
ficoms
mov
pop
das
shrl
push
inc
ficompl
jmp
dec
mov
fstp
out
jno
int3
lahf
imul
pop
jge
cli
icebp
add
sbb
ljmp
xrelease
popf
loop
adc
popa
ljmp
pop
mov
mov
ja
add
addr16
fwait
test
popf
dec
xlat
and
cmpsl
push
pop
stos
int
push
test
incl
inc
and
shlb
leave
cmc
xor
les
pop
fidivrl
inc
stc
imul
adc
test
inc
addl
ss
fstpl
pusha
mov
jae
pop
leave
into
icebp
or
adc
lret
adc
aam
test
shl
je
vmovq
pop
push
mov
jg
sbb
push
xor
xor
jg
push
sub
mov
add
lahf
jne
iret
movsl
xchg
mov
push
fs
lods
pop
loope
add
outsb
mov
cmp
xor
add
push
mov
inc
pop
mov
sub
and
or
repnz
jbe
sbb
jns
push
jne
xchg
ss
mov
push
mov
lock
mov
dec
addb
mov
cs
inc
sbbl
out
jno
rcrl
xchg
outsb
test
decb
mov
jmp
sub
lods
cmp
ret
bound
sahf
sbb
sbb
inc
adc
sbbb
xor
lret
jae
lods
mov
inc
or
add
push
ret
call
pop
jae
xor
rcll
push
lret
xor
xor
pop
fwait
cwtl
mov
mov
mov
jbe
mov
jns
or
dec
and
sbb
pop
subl
jnp
aad
fisubs
push
shrb
leave
pop
or
mov
jge
and
ss
add
jae
push
insb
xlat
xor
mov
test
mov
popa
pop
test
dec
add
std
test
dec
imul
push
mov
or
hlt
push
push
and
adc
mov
mov
pop
mov
andb
inc
jns
test
pusha
xor
call
data16
cmp
stos
std
and
pop
cmpsl
div
jp
les
push
popa
and
insl
test
ljmp
jns
mov
jge
mov
mov
xchg
sub
in
mov
cmp
das
push
jl
cmp
rorl
cmp
out
fcmovb
jmp
sahf
mov
ss
or
ja,pn
call
push
pushf
push
xchg
pop
pop
and
mov
fs
inc
dec
push
pop
shlb
sub
jnp
mov
or
push
xchg
das
sub
mov
imul
and
out
dec
sti
gs
cmp
cmp
mov
mov
xchg
in
sub
jne
cwtl
jmp
dec
and
lods
sbb
scas
inc
pop
xor
push
or
xchg
mov
sub
inc
ljmp
iret
ds
pushf
lahf
pop
sbb
mov
inc
call
adc
push
push
jmp
sub
mov
out
fs
jnp
mov
inc
shll
push
jns
dec
add
stc
test
les
cmpsb
test
mov
cmc
mov
outsb
add
sub
dec
xchg
aaa
adc
sub
rcrl
ja
clc
add
or
aam
clc
or
adc
cltd
xlat
push
icebp
in
adc
roll
pop
addr16
clc
aas
orl
xchg
into
and
das
iret
sarl
imul
push
or
xchg
aas
iret
push
insb
test
aas
push
jmp
adc
int
clc
xchg
out
push
daa
cld
or
into
repz
mov
add
jbe
pop
inc
fidivrs
pushf
mov
dec
pop
or
sub
lret
jmp
int3
sbb
push
shlb
sub
push
jge
decl
push
into
jl
jne
insb
cltd
cmp
leave
data16
loope
pop
out
sbb
adc
sub
stos
mov
out
xor
in
push
adc
scas
jb
mov
outsl
sbb
rolb
pop
outsb
dec
pop
mov
push
add
shlb
pop
mov
fsub
inc
sahf
ret
inc
int
dec
in
lock
push
jecxz
inc
les
nop
leave
push
dec
lcall
jo
stos
test
jnp
ret
push
inc
push
xchg
and
in
icebp
outsb
jmp
imul
sub
cmp
imul
aas
add
cmp
movsb
sbb
lods
lahf
inc
out
mov
push
sub
icebp
jp
fs
adc
int3
ret
xchg
cmpl
jb
sbb
dec
popa
sbb
pusha
testl
push
xchg
sbb
lods
lcall
addr16
pop
jmp
js
pop
mov
add
mov
gs
mov
bound
imul
lahf
cltd
jns
adc
mov
fdiv
pop
movsb
xorl
or
xchg
ljmp
mulb
and
roll
dec
add
inc
hlt
lret
sub
inc
sbb
xchg
subl
fs
mov
jmp
das
inc
sbb
dec
sub
popa
sub
std
movsb
mov
enter
jb
and
orb
in
sbb
sbb
fadds
push
stos
fbstp
out
lret
jnp
xor
insb
mov
movsb
ret
and
aam
or
notb
pop
popa
mov
mov
dec
xor
sarl
dec
cmp
lret
loopne
movsl
add
mov
arpl
es
xchg
cld
loope
cmp
inc
push
pop
jmp
mov
js
cmpsb
lcall
icebp
and
cltd
dec
inc
jge
jb
ja
jecxz
inc
cmp
inc
pop
mov
mov
testb
icebp
add
jmp
cltd
sbb
ret
imul
cltd
jnp
out
js
rcll
das
lods
cmpsb
fnstenv
or
and
adc
test
push
ret
cmp
jns
leave
subb
outsb
repz
ljmp
andb
push
pop
mov
fdiv
or
cmp
loopne
inc
and
cmc
jecxz
std
push
andl
mov
mov
out
sbb
mov
test
pop
or
les
outsl
pop
push
xor
inc
enter
and
mov
pop
stc
sbbl
stos
test
or
lods
fnstsw
fisubs
jg
fistpll
insb
pop
aaa
or
push
sbb
cmp
mov
cs
pop
fistl
mov
mov
cmp
jmp
imul
sbb
out
hlt
adc
mov
cltd
and
rclb
cmp
push
push
scas
rcl
stc
movsb
pop
mov
add
add
mov
mov
fsubl
test
or
loope
jo
mov
fdivrp
mov
mov
xchg
rolb
push
add
mov
ljmp
xchg
push
adc
jl
loope
push
mov
sbb
jo
sti
or
xor
push
cmp
nop
mov
and
and
cwtl
mov
imul
cltd
xchg
mov
std
lods
mov
or
xlat
jno
sub
stc
mov
aam
fcomps
fsubrs
push
rep
in
sbb
jne
cmp
int
jno
icebp
repz
and
mov
hlt
mov
testb
movsb
xor
shrb
das
push
insl
push
mov
sti
in
fcmovnb
jnp
add
mov
fdivp
in
jecxz
sub
loop
mov
inc
inc
cmp
fstpl
arpl
or
mov
xchg
pushf
divl
cmpb
popa
jnp
movsl
aas
xor
addl
jle
stc
cmpsl
push
std
adc
in
cmp
sahf
mov
push
in
add
pop
mov
push
cmc
int
stos
push
xorb
loop
lcall
sbb
sub
addr16
mov
mov
hlt
inc
notl
dec
fstl
mov
inc
fnsave
imul
sbb
call
stc
jns
imul
xchg
jbe
sub
mov
insl
into
add
loope
mov
sbb
dec
xlat
cmp
and
add
insl
cmp
xchg
imul
negl
cmpsb
negl
sbb
mov
adc
push
jbe
orb
sarb
pop
nop
daa
sbb
sbb
popf
adc
rcr
xchg
cmpsb
movsb
push
jno
sarl
fildll
data16
fdivp
mull
insb
xchg
das
and
ds
mov
cwtl
pop
inc
stos
mov
mov
push
cmpsl
lods
and
dec
jle
adc
xor
sbb
push
sarb
mov
stc
add
dec
lds
adcb
lret
xchg
adc
mov
fwait
aad
mov
cmp
push
push
repz
dec
inc
arpl
mov
mov
in
cmp
mov
test
push
loop
xchg
out
and
fdivrl
sub
daa
mov
mov
xchg
lahf
mov
push
sub
or
ss
add
stos
loopne
jg
hlt
mov
sarb
popa
into
int
mov
pop
jbe
cmc
sbb
cs
ficoms
test
in
fisubs
scas
mov
test
pop
sbb
mov
pop
push
xchg
add
add
cmp
lcall
mov
xor
lahf
jge
inc
xchg
cmpps
cmp
cmpsb
cli
lret
xor
mov
dec
lret
ret
and
adc
test
cmp
into
xor
xorb
lahf
fidivl
push
push
addb
gs
jo
fisttpll
sub
xchg
lock
scas
fdivl
in
test
test
xchg
popa
shll
in
inc
mov
daa
or
addl
sbb
movsb
popa
decl
mov
and
fwait
ret
xchg
sbb
roll
mov
fldcw
popf
out
in
sub
dec
sahf
sbb
insb
mov
aam
and
out
repz
out
sub
insl
push
and
dec
mov
imul
loope
xchg
mov
leave
test
jmp
cmpsb
dec
test
xchg
test
cmp
mov
and
push
es
cli
js
sbb
cmpsb
ret
shlb
stos
jl
xor
and
or
jbe
xor
aas
sahf
cmp
inc
xchg
sub
mov
cld
mov
imul
sbbl
add
lret
dec
daa
mov
pop
dec
cmp
aam
arpl
out
xchg
mov
icebp
jbe
aam
and
dec
inc
sub
and
or
mov
ss
call
lahf
orb
inc
mov
fdiv
loope
cmp
mov
or
lds
andb
leave
dec
std
dec
andb
outsb
lcall
and
sbb
sbb
mov
pop
adc
dec
mov
dec
stos
shlb
in
lahf
mov
xchg
and
subb
fidivl
inc
out
inc
aad
cltd
lret
sub
lods
in
xchg
pop
jecxz
daa
adcl
adc
and
inc
fistpl
dec
mov
inc
adc
aas
xor
int
jnp
pop
lret
cmp
pushf
int
xchg
mov
inc
xchg
imul
outsl
mov
inc
cmpsl
fdivr
fs
in
sbb
xchg
jbe
fcmovnb
stos
jb
and
int3
inc
int
mov
xor
xor
in
cmp
das
and
jle
fstp
mov
or
mov
std
jmp
mov
mov
sbb
sbb
inc
jmp
iret
push
or
insb
insb
add
pushf
pop
or
stos
cmc
lret
cld
mov
scas
jp
xchg
test
xchg
ja
mov
xchg
add
ss
adc
sub
das
lret
push
inc
push
add
dec
je
testb
cmp
mov
dec
fdivrl
xlat
jno
int
cmp
jo
and
mov
mov
mov
std
stos
push
out
mov
dec
mov
mov
cmpsb
jecxz
mov
jge
sbbl
pop
xor
and
sarl
mov
jg
lods
mov
outsl
inc
inc
add
out
dec
test
mov
push
outsb
not
jne
cmp
adc
data16
sub
jecxz
fcoms
sti
fs
dec
or
xchg
sti
fdivrl
xchg
icebp
insb
fistpl
xchg
push
dec
dec
scas
jecxz
cmp
mov
std
sbb
mov
xorb
add
pop
in
xor
loopne
inc
jnp
mov
push
pop
pop
ficompl
sbb
pop
mov
push
add
adc
xchg
cmp
stos
jae
push
sub
dec
adc
mov
fildl
loop
cs
push
sub
aaa
sar
push
lret
aas
sti
outsl
sbb
fst
sbb
mov
lahf
adc
push
mov
icebp
outsb
out
add
inc
sbb
lret
mov
or
cmp
in
mov
jg
sub
cld
pop
idivl
imul
inc
cmp
test
dec
sub
lea
orl
xor
and
adcl
rcrl
test
jmp
outsb
jno
in
in
daa
cmp
add
sti
pop
and
dec
fcomp
iret
sub
inc
sub
xchg
pushl
mov
sbb
push
lea
movsb
test
pushfw
mov
divb
movsb
mov
sub
add
pop
int3
andb
push
das
frstor
xchg
movsb
test
lds
mov
and
inc
dec
scas
dec
pop
jns
cmp
jo
ret
ret
pop
jb
and
xor
or
iret
xchg
enter
cld
movsb
and
jmp
or
aas
loope
and
xchg
mov
dec
sub
rcr
mov
xor
dec
gs
dec
jne
xlat
sub
mov
call
ret
mov
pop
mov
jb
out
sub
leave
xlat
or
test
adc
lret
cli
jecxz
push
xor
dec
loope
sti
aaa
and
cmp
fwait
scas
in
lahf
loope
xor
orb
ret
aam
out
fadd
loopne
and
add
loopne
into
lahf
jae
mov
out
int3
iret
push
outsb
jae
sbb
sbb
sbb
out
xchg
cs
dec
xchg
mov
nop
sub
hlt
mov
mov
jns
ss
and
fidivrl
rorb
inc
icebp
loop
sbb
cmp
adc
movsl
push
iret
div
xor
pop
push
rclb
popa
jmp
into
push
out
mov
or
cmp
push
sbb
lea
mov
inc
sahf
popw
sbb
es
cmpsb
ficomps
add
test
mov
jne
dec
add
inc
sub
scas
xchg
std
lea
sarb
outsl
ficoml
mov
popf
jne
test
push
scas
and
sbb
ret
js
arpl
rorb
xor
decb
cld
jnp
stos
add
mov
jmp
pusha
lret
and
push
lods
pop
jmp
add
ja
mov
jp
push
and
sbb
jle
sbb
std
mov
addr16
inc
mov
push
imul
test
mov
mov
mov
or
pop
and
rcr
mov
stos
or
scas
lcall
nop
hlt
repnz
mov
add
cli
fidivrl
and
pop
cld
cmp
lcall
adc
iret
ja
movsl
pop
jns
imul
out
dec
cli
jge
lret
std
out
pop
sti
outsb
xor
pop
or
rol
cmp
jl
repnz
push
inc
mov
mov
mov
mov
insl
outsl
shlb
lock
mov
ljmp
add
sub
aaa
hlt
push
frstor
mov
in
pop
cmp
and
sahf
fisubrs
pmulhuw
lret
mov
and
loopne
sub
dec
jno
test
pop
fs
les
jae
popa
ret
out
or
push
jno
lea
ficoms
jl
lock
mov
out
mov
mov
lods
or
and
mov
xchg
jmp
or
push
lods
out
xlat
rolb
adc
fxch
inc
push
jl
dec
fisubs
xchg
push
jg
mov
mov
mov
mov
mov
xchg
sub
dec
mov
inc
jmp
cltd
mov
mov
mov
inc
shl
jge
xchg
mov
add
fidivs
mov
gs
mov
leave
mov
int
xchg
popf
mov
xchg
ljmp
enter
mov
movsl
cli
sub
and
roll
add
ret
jo
or
push
data16
pop
sahf
out
push
fcomp
rorb
xchg
jbe
push
scas
xchg
or
daa
das
mov
arpl
movsb
sub
cltd
sbb
aaa
or
jmp
stos
out
and
add
xor
fxch
gs
loop
nop
out
pushf
and
xor
add
dec
subb
cli
sub
test
test
fidivrs
cmp
pusha
pushf
fmul
divb
dec
repz
stos
jecxz
sub
sub
sbb
in
outsb
daa
push
int
mov
lods
stos
push
hlt
xor
push
ja
adc
push
std
jmp
jle
mov
pop
inc
xor
aaa
fdivl
mov
xor
out
sarl
mov
aad
lahf
jo
mov
or
sahf
cmpsb
xor
icebp
ja
xor
jl
ljmp
adc
jge
inc
jl
pop
sub
inc
ret
insl
dec
shll
fiaddl
imul
jecxz
adc
mov
stos
aas
lea
punpcklbw
inc
fcomip
add
add
adc
cs
in
shlb
sbb
hlt
inc
vmovaps
push
cwtl
add
fsubs
inc
xchg
sbb
mov
inc
sbb
push
out
in
in
bound
enter
or
and
sub
cltd
xchg
mov
out
and
inc
dec
outsb
cmpsb
sbb
jle
sbb
cltd
int3
je
mov
sbb
into
cs
and
mov
pop
push
enter
enter
stos
imul
dec
jmp
push
mov
push
out
nop
xor
jp
pusha
lock
pop
jne
jbe
mov
add
push
mov
fisubl
sub
mov
jbe
loop
fldl
sbb
jns
fs
bound
xor
jg
push
sti
push
dec
pop
stos
cwtl
movsb
dec
jne
rcrb
pop
roll
inc
add
and
sbb
mov
cmp
adc
add
dec
leave
out
and
das
pop
inc
test
pusha
xor
test
jl
enter
scas
scas
pop
inc
bound
push
and
and
inc
clc
fidivrs
cltd
shll
mov
in
out
add
jns
aad
cmp
pop
or
xchg
out
int
hlt
mov
cmpsl
cmpsl
adc
xchg
aam
cmp
loope
push
fs
push
repz
xchg
add
mov
pop
ret
mov
fisubrl
dec
cmp
pop
in
outsl
mov
lea
jo
repz
mov
ljmp
sbbb
lods
xor
adc
dec
xchg
jbe
leave
cmpsl
ret
push
jp
daa
pop
mov
xor
loop
sub
arpl
mov
add
jmp
and
and
data16
jo
or
mov
sbb
xorl
ja
push
adc
insb
cmp
xor
icebp
ss
xor
mov
mov
pop
push
loop
mov
subb
aam
xor
call
mov
jo
sbb
ficompl
iret
inc
jmp
mov
xchg
cmp
pop
scas
adc
sub
es
xchg
or
sbb
sub
es
pop
je
push
je
pop
lcall
movsl
or
mov
stc
pop
sbb
mov
and
jb
ljmp
ret
adc
outsb
js
hlt
mov
insl
inc
aaa
fidivrs
jecxz
cmpsl
jnp
cli
out
mov
push
adc
mov
jnp
and
jnp
les
xorb
das
adc
add
xchg
mov
lret
ret
sbb
jp
lcall
test
maxps
add
nop
pushf
adc
or
dec
inc
cmp
jp
xchg
pop
repnz
mov
sub
daa
jno
or
cmpsl
push
loop
cwtl
rcl
fstps
xor
push
lret
jmp
pop
adcl
mov
mov
dec
sub
xchg
sub
adc
xchg
pushf
cmp
mov
mov
fmul
pop
xchg
inc
inc
add
imul
mov
pop
adc
pop
sbb
xlat
test
cmp
cmp
sbb
movsb
fs
sbb
xchg
js
xor
mov
out
adc
cs
xor
outsl
pop
sub
pop
push
hlt
shlb
pop
xor
sbb
mov
pop
inc
jno
out
jecxz
test
inc
test
cmp
das
ret
sub
cwtl
pop
or
sbb
das
cwtl
add
push
mov
add
dec
mov
pop
jne
sub
ret
movl
mov
test
push
cld
lods
or
popf
inc
mov
jo
mov
dec
pop
cmp
insb
repz
pop
xorb
in
xchg
mov
shrb
clc
xor
pop
jnp
mov
in
sbb
dec
jle
add
nop
lret
push
rcrl
ljmp
loopne
mov
dec
nop
lods
pop
cwtl
cmpsb
rcrb
mov
cmc
mov
adc
addr16
cmc
icebp
lds
cmp
stos
or
jne
mov
cli
mov
add
int3
ret
add
dec
shlb
or
cmp
dec
aaa
xor
pop
loope
cmpsb
mov
and
mov
push
fbstp
adc
mov
arpl
je
sti
jns
mov
mov
std
aas
mov
mov
jle
das
inc
mov
test
mov
jns
insb
inc
pusha
lea
and
mov
sbb
sbb
rcll
enter
imul
jl
dec
out
xor
ljmp
lret
dec
dec
jle
out
icebp
sub
daa
cmpsb
mov
xchg
dec
aaa
jns
jb
ret
mov
lcall
popl
sbb
bound
outsb
aaa
push
jecxz
xorb
test
lret
lret
cmp
jae
out
pop
cld
jle
mov
mov
adc
insl
adc
inc
and
or
ljmp
lds
pushf
sub
stos
mov
inc
pop
aad
mov
popf
in
cmp
ss
jns
rorl
pop
lds
mov
cmpsb
mov
push
cwtl
gs
dec
dec
out
jmp
dec
sarl
sti
push
imul
cmp
std
jl
rorl
pop
add
pusha
nop
push
aas
repz
lret
test
jp
pop
xor
cli
test
loop
inc
adc
jnp
dec
push
fstps
pop
lret
cmp
cmp
jmp
sti
cmpb
daa
arpl
jp
lock
mov
adc
sarl
pop
ljmp
stos
lods
dec
ss
daa
std
lods
repnz
sbb
mov
cmp
mov
pushf
push
sbb
jno
add
sbb
in
xor
push
cmp
dec
jno
mov
xorl
jbe
cmp
cli
mov
xlat
jmp
ficoml
dec
xchg
sti
fiaddl
adc
push
iret
mov
scas
dec
push
add
test
dec
inc
out
xchg
lods
cmp
jne
pop
sub
cltd
jae
cld
ss
sub
xchg
ficomps
push
xorb
dec
cmpsb
leave
mov
ss
shl
jnp
xor
dec
lahf
fidivrs
sbb
rdtsc
jnp
clc
test
cld
shrb
or
aaa
fdivs
xchg
loop
cltd
orb
xchg
dec
adc
xchg
out
out
testb
icebp
cmc
inc
inc
test
mov
jl
fcompl
push
mov
cs
mov
mov
push
fdivrp
in
sarl
loop
or
aaa
sbbl
push
xchg
jmp
mov
jle
stc
mov
das
mov
or
xor
pop
xchg
mov
enter
adc
dec
aam
mov
test
push
mov
jp
test
sbb
and
notl
scas
sbbl
stos
pop
fnsave
adc
fst
jnp
pop
mov
pop
inc
aas
adc
xor
pop
pop
cli
jl
jbe
or
loopne
mov
sarl
pusha
ffreep
hlt
fadds
shlb
fiadds
xor
aas
pop
ret
lahf
enter
push
fisubrs
imul
cmp
popf
inc
test
mov
mov
dec
mov
fxch
lods
xchg
dec
push
push
ret
pop
xchg
fcmovnu
cmp
adc
in
out
das
or
mov
aas
iret
pop
enter
xor
mov
pushf
lods
mov
jno
cmc
jecxz
ret
sub
cmpb
sbb
pop
sbb
sbb
test
out
xor
arpl
rolb
mov
mov
mov
and
outsl
adc
movsl
mov
jo
jb
mov
sub
push
push
pop
push
xor
mov
cmp
das
cmp
inc
or
ja
fimull
nop
and
fsubrs
imul
inc
dec
mov
jb
sub
gs
ret
test
pop
mov
sbb
push
fbld
cld
push
fmulp
out
xor
xchg
sahf
jnp
push
lahf
shrb
push
inc
and
sbb
ds
insl
in
sbb
push
and
mov
enter
shrb
xchg
movsl
loop
pop
dec
push
mov
out
test
shll
sbb
repz
dec
popf
addr16
mov
nop
cli
imul
mov
xchg
sbb
test
push
push
std
out
adc
pop
add
loope
leave
jge
mov
out
xor
movsb
ljmp
jmp
or
scas
sbb
xor
add
dec
jp
dec
push
mov
cmp
adc
sub
lds
jmp
xchg
pop
jle
sbb
aad
jp
ja
mov
add
cmp
sub
nop
cmp
inc
imul
xor
jle
pop
les
addr16
mov
incb
lret
rorb
jno
lcall
test
push
push
push
test
xlat
cmc
imul
ja
push
dec
push
xor
mov
jecxz
lea
mov
scas
ss
dec
loop
int3
pushf
cwtl
imul
push
push
out
sbb
lret
sub
dec
lret
aad
jp
push
jecxz
jne
stc
pushf
mov
cwtl
lds
pop
add
sbb
xor
pusha
push
and
sbb
ljmp
repnz
fdivrp
stc
jmp
mov
imul
pop
mov
mov
subb
or
sub
in
sub
adc
xlat
sbb
test
and
xlat
ds
add
sbb
xlat
sbb
jbe
push
icebp
add
adc
les
mov
xor
imul
int
lods
shll
repz
jbe
xorb
sbb
daa
mov
xor
incl
in
pop
aas
xlat
mov
sub
insl
ljmp
fnsave
mov
test
mov
adc
and
mov
cmp
jl
fistpll
sbb
push
dec
cmp
test
cmp
pop
fiaddl
jmp
pop
jno
les
pushf
sbbl
insl
dec
adc
pop
scas
stos
jnp
sbb
mov
jae
inc
jno
fmuls
sub
sub
dec
shrb
dec
add
add
mov
and
stc
cmp
fs
inc
dec
fcomps
pop
xchg
sbb
loopne
push
xor
and
movl
and
lods
pop
add
call
sub
das
lahf
int3
lods
push
cmp
adc
shl
daa
out
xor
fisubrs
inc
mov
dec
ljmp
inc
repnz
mov
inc
xorb
ja
jmp
mov
add
imul
movsl
jecxz
xor
loopne
cltd
jns
ljmp
jne
jg
pop
push
outsl
out
or
testl
ss
mov
ja
and
fs
sub
aas
mov
cmp
xchg
xor
gs
mov
mov
xor
cmp
jne
lods
ffreep
xchg
test
jno
out
mov
rcl
ror
cmp
imul
das
dec
repz
fcmovnb
jge
je
lahf
js
lea
pop
push
inc
cmc
test
push
les
cwtl
push
lret
cmc
ja
and
lds
roll
lahf
lods
ret
add
jmp
test
mov
fwait
ret
mov
sub
cwtl
ss
in
lock
push
sbb
insl
pop
dec
imul
or
daa
or
or
mov
daa
aad
push
add
xchg
lret
mov
push
adc
mov
mov
imulb
and
mov
sub
cmp
int3
popf
push
cmpsb
adc
adc
repz
dec
sub
loop
mov
fmuls
shl
push
sbb
pop
addr16
xchg
sbb
jb
sub
test
dec
orb
sub
push
adc
insb
sub
xchg
inc
iret
xchg
mov
filds
int3
dec
or
push
imul
inc
or
rorb
scas
mov
pop
xchg
cmp
sub
ljmp
push
cld
int3
int
into
push
cwtl
xor
dec
sbb
add
mov
mov
xchg
rcll
mov
push
jmp
sub
push
insl
dec
icebp
insl
lods
jmp
or
out
lods
test
notb
xor
pop
mov
aad
cmpb
clc
fwait
xchg
mov
fs
rorb
sub
lret
gs
jmp
pop
lret
dec
and
movsl
dec
pusha
cs
or
jg
and
sub
cs
xchg
mov
and
dec
inc
sbbb
xor
mov
popa
ret
jo
jmp
jp
sbb
sbb
lds
xorb
cmpsb
pop
dec
cs
xchg
daa
xor
outsb
inc
dec
dec
pop
mov
push
ss
iret
jmp
mov
sub
dec
xchg
adc
leave
cli
popa
mov
int3
fistl
add
push
lret
addr16
sub
sbb
hlt
hlt
shlb
mov
pop
out
and
mov
sbb
cltd
cmc
and
mov
in
sbb
mov
cs
add
xchg
adcb
xchg
xchg
int
repz
repz
inc
pusha
lods
inc
call
lds
cmc
pop
ja
and
imul
lods
pusha
jnp
jno
jae
jg
pop
xchg
dec
mov
imul
inc
xchg
mov
out
loopne
cmpsb
stos
lea
push
push
and
aas
or
mov
in
aad
leave
push
xchg
pop
push
nop
int
dec
push
je
lock
clc
test
jbe
mov
aam
mov
shl
addl
mov
aad
mov
cmp
mov
dec
mov
jl
mov
std
addl
jno
cmp
pop
push
push
xchg
xchg
dec
jmp
nop
hlt
test
imul
in
pop
inc
jg
dec
cmc
fstl
sbb
inc
mov
adc
inc
adc
notb
inc
fsub
push
xor
dec
and
mov
sub
dec
jl
mov
rcrb
add
insl
pop
lcall
add
cmpsl
mov
pop
pusha
sub
movsl
jmp
loopne
and
pop
repz
out
jnp
xor
call
mov
cld
mov
xor
cli
mov
pop
inc
pop
cld
add
push
or
push
lahf
and
jl
and
sbb
mov
jno
xor
xchg
jl,pt
adc
cmp
push
or
addr16
and
jnp
addr16
loopne
sub
mov
push
leave
out
loop
in
movlhps
mull
arpl
int
mov
sub
fs
dec
push
jg
push
dec
cmpsb
clc
test
xchg
xor
dec
arpl
lods
sub
lret
jnp
push
push
cmp
and
xchg
mov
or
addr16
mov
enter
imul
fidivrl
and
ror
outsb
or
adcb
xchg
cmp
add
dec
inc
outsb
aas
int
loopne
xchg
and
mov
mov
inc
push
xchg
test
pop
pop
xor
sub
pop
dec
mov
xchg
out
loop
les
sub
mov
push
pop
lahf
push
mov
pop
jecxz
xor
mov
jmp
mov
aad
mov
frstor
repnz
xor
xor
xchg
js
sub
xchg
std
xchg
test
sub
mov
fldt
mov
outsb
rcrb
out
jo
ficomps
fidivs
outsl
pop
icebp
les
es
sti
jecxz
inc
adc
loope
xor
js
sbb
out
call
shrb
mov
in
lahf
cwtl
and
mov
xchg
inc
push
ds
scas
rclb
mov
pop
aaa
mov
repnz
sahf
jo
popa
insl
mov
or
sbb
fs
rorl
fidivrs
lahf
fisubs
lea
testb
lock
outsl
in
inc
ficompl
mov
push
inc
notb
adc
jecxz
into
or
jns
popa
pusha
mov
gs
fbld
mov
and
jge
push
dec
mov
pop
jl
mov
mov
add
cld
sbb
fldl
cli
jmp
hlt
iret
sarl
push
ret
xor
cmp
hlt
test
sub
xchg
in
adc
add
or
jno
cmp
xor
ds
jl
js
lods
hlt
popa
cmpsb
xor
rcrb
outsb
lcall
mov
xlat
repnz
das
mov
mov
mov
ss
in
push
and
aad
cmp
daa
pop
adc
sbb
add
subl
or
mov
jae
cmp
out
jl
sbb
jge
push
xchg
adc
add
pop
pop
js
cmp
outsl
mov
xchg
mov
arpl
add
push
xchg
jg
stos
iret
clc
push
xchg
jne
orl
cmp
fists
int3
adc
negb
xor
out
cli
out
gs
rolb
in
mov
adc
pop
push
cmp
mov
ljmp
test
out
std
sub
cs
pop
outsw
jb
mov
add
inc
xchg
add
lahf
jecxz
fildll
call
fucom
or
sbb
push
inc
cltd
rcrb
cmp
cmp
fnstcw
cld
inc
test
aaa
cmp
jae
add
test
test
fidivl
mov
mov
pop
pop
pop
jg
sbb
sub
std
jl
mull
pop
jge
gs
jmp
inc
push
stos
loopne
call
fidivl
lds
popa
fwait
mov
lea
out
jl
mov
arpl
add
jecxz
shl
pop
addr16
mov
push
xor
jle
shr
inc
and
inc
push
jne
clc
out
xchg
sbb
fldt
adc
pop
cmp
popaw
mov
inc
mov
add
and
pop
dec
cmp
sub
and
sub
or
sarl
sub
ljmp
outsl
das
sbb
lcall
mov
mov
pop
std
dec
xor
sbb
sub
sub
dec
jne
xchg
sub
xchg
xchg
sub
cmp
cmp
sub
stc
sub
es
and
cmp
cmp
cmp
sub
xchg
sbb
add
scas
mov
mov
jb
fdivrl
push
stos
in
outsb
push
fwait
imul
out
push
mov
and
add
adc
add
mov
insb
push
out
jmp
jp
dec
les
mov
sub
jl
pushf
sbb
xchg
repz
pop
ss
xchg
mulb
inc
jg
movsl
jecxz
stos
jmp
xor
sub
jecxz
jecxz
pop
pop
xor
out
mov
sbb
and
or
pop
hlt
cmp
push
mov
out
ds
xchg
syscall
cmpsl
sbb
imul
nop
fisubl
jmp
cwtl
push
mov
mov
mov
arpl
pop
xchg
repnz
out
pop
and
test
inc
sbb
lcall
sbb
fisubrs
sarl
ret
dec
clc
pop
mov
mov
mov
push
je
ret
icebp
dec
mov
mov
push
lock
adc
add
insl
xor
call
test
test
fcomip
aas
push
jg
xor
inc
loop
mov
fwait
dec
aas
push
outsl
sub
orb
icebp
xor
mov
scas
mov
out
cld
les
push
pushf
or
cli
hlt
xchg
sub
lahf
addl
cmpl
stc
repz
inc
mov
xchg
rorl
rcrl
jb
sub
pushl
js
xor
shr
icebp
jl
loopne
xchg
xor
clc
xor
push
dec
sub
pushf
push
add
jnp
xcrypt-cfb
cmpsl
and
pushf
jno
test
xor
outsb
idivl
sbb
adc
call
add
sub
xchg
in
adc
fs
popf
aam
rcl
std
xor
stc
xor
pminsw
or
outsl
dec
push
rclb
nop
adcl
hlt
out
hlt
ret
outsb
popa
mov
loop
stc
sbb
and
jb
and
jecxz
xor
into
stos
push
pop
bnd
int
stos
sarl
add
scas
stos
mov
notb
and
push
dec
aad
aam
sub
dec
or
addl
cmpsb
lcall
cwtl
je
cli
ljmp
xor
mov
ds
orl
push
es
dec
push
das
out
pop
vlddqu
jns
dec
fs
and
fstl
outsl
test
popa
fs
xor
shrb
add
cli
loopne
ret
test
insb
imul
mov
dec
js
inc
lcall
hlt
add
int
addr16
mov
xchg
test
cld
pushf
push
dec
jnp
lahf
testl
xorb
add
sbbb
mov
shlb
es
out
jg
xchg
imul
ficoml
pushf
dec
sbb
sub
popf
mov
pop
ds
mov
mov
mov
dec
mov
inc
js
orb
push
iret
inc
xorb
mov
aam
pusha
xor
pop
lds
mov
jl
dec
sbb
movsl
or
test
popa
xchg
xor
dec
pop
add
push
and
add
lcall
adc
mov
ds
test
sbb
or
mov
jmp
adcb
inc
and
jg
aaa
hlt
andb
inc
or
iret
cwtl
cmpsl
cs
inc
and
cmp
inc
jecxz
outsl
cmpl
jmp
ret
insb
mov
stos
out
imul
lea
or
sbb
test
dec
dec
je
inc
loopne
lods
push
test
jle
sub
aaa
push
xchg
pushw
pop
mov
and
mov
mov
in
or
cld
push
adc
sti
inc
adc
negb
sub
push
dec
fbstp
arpl
outsl
jmp
mov
ds
jns
movsl
test
jns
mov
xchg
mov
inc
lret
ds
sub
inc
ret
push
lods
adc
xchg
aam
sub
pop
loopne
pushf
or
fadd
iret
imul
ljmp
adc
or
push
inc
push
inc
hlt
or
pop
mov
fs
jnp
icebp
mov
hlt
mov
xchg
jecxz
pop
stos
xor
mov
gs
arpl
xchg
movsb
jnp
dec
mov
inc
or
pop
and
fdivrp
xchg
pop
aam
xchg
scas
mov
and
idivl
push
aam
mov
lods
daa
and
daa
xchg
push
add
mov
push
xorl
push
test
pop
lcall
add
cmpsb
jle
xchg
adc
cmpsl
faddl
xchg
cmpsl
cmp
or
mov
nop
iret
and
shlb
sub
mov
dec
mov
pop
sub
mull
inc
mov
cmp
rcrb
sbb
in
pop
or
mov
in
ja
popf
pop
stos
scas
sub
xorl
push
or
or
dec
ret
xchg
sbb
out
ss
jg,pn
sub
pop
cld
sub
mov
insb
fmuls
fmul
mov
lret
add
jg
lock
lret
shlb
ret
sub
imul
mov
std
cmp
mov
xchg
movsl
pop
lret
mov
add
fwait
inc
jb
stc
xor
out
adc
fwait
div
jl
sub
int3
sarl
adc
test
push
mov
cli
jl
pop
and
dec
jae
int3
in
insl
arpl
pop
pop
into
xchg
dec
fsubs
out
push
notb
jg
mov
pop
push
fidivs
negl
pop
mov
mov
lret
adc
and
pop
push
daa
add
subl
aaa
sub
jl
push
shrb
out
mov
fsts
and
leave
and
and
aaa
rorb
gs
and
in
lret
mov
stos
cmpsb
test
in
mov
and
or
ja
jecxz
sub
bound
mov
mov
insb
ret
xchg
xchg
ljmp
mov
cmp
xor
out
cld
pushf
cld
outsl
rclb
xor
adc
insl
push
cvtps2pd
or
ficomps
sub
adc
int
shl
popf
js
jmp
insl
cmp
sbb
ret
sub
mov
movsb
shrb
or
adc
fldcw
mov
test
mov
sbb
sahf
mov
shll
jnp
sarl
shl
jl
into
xlat
mov
roll
jbe
insb
cmpsb
xlat
push
push
or
fwait
popf
repz
arpl
cld
dec
mov
xchg
pusha
sbb
sub
ret
jp
jp
add
inc
push
jo
pop
cmp
or
out
ret
cs
dec
ficoms
ror
out
rcr
dec
in
lret
sub
xchg
pop
lea
dec
mov
jl
shlb
fs
sbb
shrb
sub
add
lods
cltd
mov
lahf
movsl
test
mov
and
mov
stos
jp
ljmp
and
pop
cmp
and
xchg
sti
mov
bound
outsl
mov
aad
jns
xchg
push
repnz
xlat
lds
xchg
leave
cmp
shl
pop
xor
and
jne
insb
repnz
cmc
push
out
mov
cmp
mov
mov
xor
or
mov
enter
out
adc
inc
add
add
or
mov
in
scas
mov
outsl
rclb
bsr
call
test
mov
jmp
into
repz
repnz
in
jae
cmp
faddp
jo
mov
lret
repnz
bts
cmpsl
jl
add
pop
inc
sub
adc
call
pop
test
or
adcb
add
pop
loopne
mov
shrl
into
and
iret
jecxz
push
clc
dec
aaa
inc
out
sbb
push
divb
pop
fimuls
xchg
ljmp
je
mov
bound
loope
lds
mov
insb
lcall
fldt
sbb
hlt
sub
add
aad
out
fwait
pop
loopne
push
shll
push
dec
inc
call
add
jno
adc
jmp
mov
aam
push
mov
sub
hlt
mov
out
cmp
mov
push
xchg
mov
mov
cmp
fnsave
jle
call
xchg
pop
xchg
test
fmuls
imul
mov
adc
rcr
addr16
lods
push
sbb
push
leave
sub
frstor
inc
mov
push
pusha
std
push
movsl
fnstsw
insl
cmp
movsb
cli
jmp
fdivl
fldenv
push
dec
cmpsl
mov
stos
or
mov
ret
xchg
and
inc
push
xchg
sub
xchg
cmp
xchg
xor
into
scas
or
outsl
rorb
imul
pop
daa
or
push
jmp
test
and
xor
fistpll
icebp
push
mov
lock
cmc
addl
inc
das
jnp,pt
aad
jno
jge
movsb
jb
add
push
out
movhlps
push
push
mov
ret
and
sub
xchg
xor
jae
push
jnp
hlt
adc
xor
fdivrs
fdivp
jmp
mov
shlb
inc
int3
in
mov
adc
dec
dec
ja
cltd
lahf
lcall
push
stc
lahf
in
cmpsb
movsl
jnp
cmp
cmp
xchg
sti
cld
in
cmpsb
test
xor
int3
add
mov
mov
pop
scas
push
jle
pop
clc
orb
jno
psubsw
add
ja
adc
pusha
push
xchg
pop
stos
or
popf
das
je
dec
dec
jne
push
and
aam
push
jb
lcall
xorl
xchg
daa
mov
xchg
lock
dec
jbe
push
stc
int
pop
lock
test
hlt
sub
push
sub
cld
icebp
aaa
loope
dec
push
stos
sbb
nop
loope
cs
movsb
fstps
int3
cmp
cmp
sbb
mov
dec
inc
cmpsl
loopne
outsb
inc
pop
inc
sti
cmp
sub
in
arpl
rorb
iret
cmpsl
lds
js
cmpsb
inc
adc
push
std
dec
in
lahf
mov
mov
std
and
mov
push
imul
ret
jmp
pop
out
dec
loopne
js
push
mov
jg
in
cmpsb
lret
imul
stc
lret
aas
clc
lret
pop
jecxz
sub
roll
popf
and
ret
nop
in
xchg
and
lods
jl
movsb
xchg
faddl
dec
fmull
mov
movsl
int3
sub
fadd
test
pop
and
sub
and
leave
sub
and
sbb
lret
popf
pop
dec
xlat
xor
ljmp
xor
inc
sub
sbb
sub
adc
xchg
push
repz
loop
adc
mov
pop
in
es
push
xor
sbb
sbb
loop
je
cmp
movsb
int
fwait
rcrl
push
out
jns
push
in
sub
lcall
push
xchg
xchg
mov
dec
and
jne
pop
adc
cltd
sbb
pop
mov
mov
cmpsl
sub
aaa
dec
adc
scas
lods
loope
sbb
cmp
int3
cmp
dec
jp
loope
mov
loope
enter
cmp
adc
dec
xor
xchg
jle
repz
outsl
sti
mov
mov
and
ret
xor
int3
daa
leave
mov
ds
xor
dec
mov
sbb
xorl
rcr
dec
scas
push
outsb
iret
rorb
pusha
mov
dec
fistl
lcall
and
je
jle,pn
jns,pn
cmp
dec
jbe
data16
and
rcrl
aam
inc
push
xor
andb
inc
cwtl
cld
imul
mov
lahf
test
xchg
push
int
inc
mov
imul
in
lods
enter
sub
flds
fidivs
xchg
mov
pop
cwtl
movsb
mov
inc
addl
bound
cmp
pop
call
jnp
jmp
bound
dec
loop
cli
dec
sub
adc
jbe
repz
loop
into
jnp
mov
aam
add
jg
inc
jle
repz
add
and
mov
ss
insb
push
mov
and
insl
jmp
xchg
icebp
scas
pop
int
sub
add
adc
mov
shl
inc
cmp
movsl
push
mov
sahf
vmread
ja
sahf
cwtl
es
jno
xlat
lock
jl
imull
cmp
ljmp
lahf
mov
outsb
bnd
push
sbb
mov
loopne
pop
rorb
xor
idiv
into
movsb
dec
mov
test
ror
sbb
das
cwtl
outsb
cli
add
jns
mov
push
addr16
insl
repz
flds
aad
lds
rcrb
mov
popa
aam
outsl
fnsave
sbb
xor
dec
sbb
hlt
cmp
or
in
ret
dec
sbb
sbb
and
dec
addb
popa
scas
repnz
pop
subb
jge
cmp
jns
push
mov
cld
adc
imul
dec
sbb
mov
lahf
jmp
add
je
out
sbb
popf
outsb
adc
lcall
sbb
push
inc
ret
mov
inc
push
sub
mov
mov
jno
inc
aad
mov
rorb
js
and
cld
push
roll
jne
inc
test
test
in
inc
hlt
mov
dec
cmp
ret
hlt
jp
movsb
leave
fdiv
inc
xor
dec
testb
cld
mov
lods
lds
out
and
lds
fptan
mov
stos
stc
loopne
sbb
fidivl
push
jge
and
enter
rcr
call
mov
dec
push
add
and
enter
insl
adc
mov
or
inc
insb
lcall
xchg
das
push
fidivl
inc
push
outsb
mov
dec
inc
cwtl
xchg
cmpsb
repnz
jbe
cltd
mov
in
cmpsb
sbb
mov
pop
cwtl
test
add
dec
xchg
dec
aaa
aaa
dec
mov
pop
xchg
pushf
jnp
cld
fldenv
imul
loop
and
push
cmp
test
cmpsb
fldz
xor
jge
sub
dec
bound
jle
js
xchg
stos
ljmp
cmp
repz
pop
and
lods
addr16
movsl
adc
lahf
clc
decb
pushf
fs
addr16
and
arpl
push
adc
cmp
lcall
cmp
cld
out
mov
outsl
mov
sbb
cwtl
or
sub
adc
insl
rcl
mov
bound
fsts
xor
pop
cmp
and
imul
test
fs
cli
add
adc
rolb
bound
sbb
adc
movswl
idivb
push
mov
xor
jmp
xor
test
inc
xor
dec
jne
pusha
adc
pop
pop
cmpsl
cltd
fsqrt
dec
cmp
lock
mov
ret
gs
pop
jmp
mov
lret
inc
adc
pop
add
inc
nop
push
arpl
mov
nop
cli
filds
sub
inc
in
pop
lods
mov
sub
xchg
repnz
sub
and
faddl
mov
jnp
xchg
dec
xchg
mov
pop
sub
add
mov
xchg
loop
jl
ja
fcoms
xlat
cld
out
add
mov
lods
mov
and
fld
int
jle
and
sti
xchg
xchg
xchg
or
out
cwtl
push
ljmp
add
lea
inc
jno
dec
jp
outsb
cmp
jae
inc
and
xor
stos
push
push
nop
mov
rorl
data16
fdivl
pavgw
or
lds
cmp
adc
xchg
hlt
clc
int
mov
mov
push
jne
call
pop
inc
and
mov
sub
loopne
repz
sahf
mov
test
push
add
xchg
adc
xor
dec
in
and
jne
adc
xor
cmpsb
xchg
sbb
fcompl
xchg
or
push
and
jno
pop
dec
js
stc
ds
xchg
cmpsl
xor
fucomi
add
fists
mov
scas
xchg
fmull
clc
mov
stos
pop
add
push
nop
cmp
mov
imul
jecxz
es
xchg
subb
lret
scas
inc
fistl
ret
push
mov
inc
xchg
lahf
stc
fwait
inc
ljmp
and
sbb
push
mov
clc
ds
repz
dec
xchg
mov
es
jbe
test
imul
je
pusha
dec
fcoms
dec
pop
mov
stos
add
inc
mov
fucomp
lahf
addb
mov
cld
jl
mov
adc
ja
pop
and
stos
sub
pop
fdivl
jmp
cmc
in
fiaddl
fidivs
and
push
push
fstpt
cmpsb
loop
leave
ffree
mov
and
xor
sub
inc
push
adc
mov
mov
cmp
loope
es
adc
daa
or
out
les
orb
out
fldenv
repnz
lock
mov
inc
and
repz
sahf
jmp
sbb
mov
cmp
jb
add
fimuls
clc
add
andl
out
jnp
fwait
xchg
stc
push
mov
mov
das
ss
das
sub
sahf
jmp
or
sti
test
xor
les
daa
jns
aas
nop
xor
loope
add
fstps
movsl
dec
out
pop
insb
int
mov
cmpsb
inc
cmp
add
add
stos
xchg
cmpsl
sbb
mov
inc
mov
dec
xchg
jp
dec
add
and
gs
iret
and
cmp
dec
fmuls
out
outsb
ror
push
shlb
inc
das
aad
cmpb
jae
mov
lcall
push
out
pop
xorb
lahf
xchg
fldcw
mov
push
jmp
arpl
inc
imull
add
jle
add
xor
pop
fmull
in
mov
repz
aaa
xchg
adc
aas
call
jg
cmc
pop
dec
mov
movsl
push
iret
aad
sub
cmc
imul
or
jae
xchg
pop
mov
popf
jmp
sub
push
or
and
cli
cmp
jo
aam
sbb
js
dec
jge
iret
enter
mov
dec
movsl
cmpsl
and
sti
outsb
fstpt
and
mov
test
pop
xor
ljmp
jmp
jbe
sub
call
mov
push
mov
es
leave
mov
sbb
mov
add
push
add
mov
pop
mov
je
pusha
push
repnz
stos
pop
in
push
data16
xorl
aaa
ret
jle
mov
mov
add
js
jp
fstpl
arpl
jae
inc
repnz
jne
sbb
xchg
movsl
push
stos
fstl
xchg
fcmovnbe
fcmovb
dec
xor
roll
adc
aas
jnp
lods
adc
jb
adc
fwait
and
jg
out
push
mov
cs
fildl
dec
scas
shll
leave
out
mov
add
lods
cmp
mov
dec
sti
dec
scas
push
sbb
sbb
addr16
ret
and
sarl
mov
mov
nop
out
cmp
mov
aam
das
ret
movsl
imull
and
mov
mov
sbb
sub
sbb
in
pop
fadd
andl
stos
xchg
int
sbb
into
or
sbb
ss
xor
mov
sub
lods
cmp
jb
cmpl
or
dec
mov
test
sbb
xchg
mov
mov
pusha
dec
pop
fdivr
pop
xor
repnz
pop
imul
cmp
js
jge
dec
sbb
jp
sbb
pop
lcall
cmp
outsb
push
sub
mov
dec
sbb
rcrl
sub
and
push
aas
movsl
outsb
in
test
jbe
pop
jae
or
pop
std
out
clc
mov
mov
and
stos
bound
push
cmp
nop
jns
pop
or
mov
pop
out
inc
pop
or
sbb
mov
shl
nop
or
in
in
cmp
push
sbb
sti
jae
push
popf
fists
inc
test
out
add
call
xor
push
or
test
mov
push
jne
mov
pop
outsl
or
xor
xor
jp
addr16
icebp
ret
in
pop
jnp
inc
rorb
dec
test
or
jge
xchg
jge
loop
adc
mov
inc
ficoms
jle
inc
les
movb
push
jmp
jnp
sub
enter
push
out
lea
cmp
sbb
sub
dec
mov
sbb
mov
cmpsb
xchg
mov
dec
pop
pop
icebp
dec
and
xor
add
mov
adc
sub
mov
mov
xor
mov
dec
push
sbb
jmp
pop
pop
pop
test
ret
jbe
pop
xchg
daa
inc
jbe
out
ret
into
test
mov
roll
pop
xor
jo
sbb
in
adcl
cmc
fs
lahf
mov
xlat
loopne
or
cmpsb
adc
dec
inc
adc
inc
push
pop
xchg
std
xchg
mov
jg
loop
nop
in
nop
cli
jp
jge
xor
xor
cld
xchg
pushf
cmpsl
jb
loope
lret
mov
je,pt
jmp
mov
inc
aaa
out
add
enter
test
adc
rcr
out
pop
mov
and
stos
sbb
xchg
mov
push
aaa
popf
lods
cld
aad
fbstp
cmp
and
pusha
mov
divb
fcmovbe
ljmp
test
pop
insb
lds
enter
mov
enter
cltd
adcl
int
insb
pop
cmp
jne
sub
mov
push
jo
subl
push
mov
and
test
lcall
dec
mov
add
and
jae
adc
adcb
fstp
mov
sahf
dec
push
movsl
cmpsl
gs
sub
sbb
insb
vpsubsb
xchg
jnp
pop
mov
popa
cmpsb
mov
push
cmpsl
ja
or
push
scas
test
out
ds
dec
mov
call
gs
push
testb
imul
mov
das
repnz
and
movsl
movsb
and
add
xor
adc
lea
mov
stc
ret
push
mov
sbb
je
aad
pop
arpl
in
inc
mov
pop
jl
add
clc
inc
mov
lods
jno
inc
sub
jge
into
inc
mov
jnp
adc
xchg
cli
inc
movsl
out
fucomp
mov
addr16
inc
hlt
and
outsb
scas
jge
int3
xor
lods
mov
pushf
xor
sbb
xor
inc
ljmp
or
call
imul
pop
aas
decl
jns
leave
shrb
mov
popa
movsl
xlat
int
andb
and
mov
jne
fldenv
xor
in
imul
icebp
mov
mov
xchg
in
aaa
sbb
outsb
pop
xchg
fists
lahf
repnz
fmull
ljmp
fxtract
mov
loop
xchg
out
fiadds
add
sub
mov
adc
sahf
cmp
rolb
cld
dec
loopne
enter
xor
fsubs
mov
and
push
int3
dec
xorb
shlb
cmp
pop
cmp
xchg
ffreep
mov
pop
pushf
push
sub
mov
sub
or
add
test
mov
aam
out
and
push
std
lret
jns
test
lods
test
std
test
daa
je
mov
bound
jo
aad
mov
repnz
and
lret
push
xchg
stos
js
leave
aam
andb
lea
mov
and
gs
adc
test
add
int3
jnp
mov
adc
sbb
xor
inc
cmp
xchg
sti
fstpt
out
jle
out
jne
hlt
add
cltd
mov
inc
test
inc
add
sbbl
jle
cmp
inc
mov
sub
leave
sbb
andb
mov
adc
leave
andb
add
dec
mov
jae
push
mov
cltd
adc
stc
fsts
mov
lcall
cltd
push
jb
pusha
test
xor
out
lea
mov
daa
jge
jl
adc
out
bsr
iret
lods
popf
mov
lods
out
imul
scas
push
in
stos
sub
pop
xor
popa
pop
inc
aad
push
jl
mov
inc
adc
pusha
stos
dec
pop
inc
jno
xchg
jno
out
enter
out
fwait
test
int3
lret
movsb
jmp
sub
dec
out
idiv
in
jno
xchg
stc
and
jne
mov
xchg
push
cmp
sbb
dec
cmpsb
leave
dec
mov
sub
loope
xchg
out
xchg
lret
pop
adc
addr16
and
fsubrs
filds
dec
out
push
es
popf
fldl
add
fcompl
or
mov
xchg
fldcw
cld
adc
pop
jne
xchg
je
lods
ffree
xchg
mov
mov
cmp
or
jl
mov
stos
pop
out
ja
lret
xor
xchg
xchg
sbb
or
ficoml
pop
lds
cmpb
dec
add
pop
std
pop
insl
adc
push
mov
cmpsl
cmpsl
adc
push
addr16
lea
mov
dec
push
pop
scas
inc
pop
call
xchg
jg
inc
repz
loop
es
std
xchg
dec
out
scas
in
and
lcall
pop
data16
cmp
cmpsb
jno
and
xor
lcall
mov
xorb
dec
mov
jg
and
inc
dec
jecxz
or
insl
add
adc
dec
sbb
sub
fisubrl
jge
add
mul
repnz
and
aam
adc
test
cltd
das
lods
mov
and
mov
addb
cmpsb
call
pop
jle
shlb
adc
inc
inc
xchg
roll
xor
mov
pusha
insl
rclb
ds
aad
outsl
out
shl
mov
push
inc
out
lds
and
and
cmp
push
pop
push
jns
jne
inc
cs
dec
popf
fsubrl
loop
dec
push
fwait
mov
xchg
adc
jecxz
repz
arpl
popf
jmp
nop
jo
cli
mov
addr16
pop
inc
stos
push
repnz
sbb
roll
mov
pop
jmp
xor
cmp
lcall
push
sbb
add
sub
mov
push
ljmp
xchg
xchg
cwtl
jmp
xchg
lret
and
sub
sub
jo
and
xchg
xchg
mov
aaa
mov
ja
sahf
out
mov
andl
or
xchg
stc
push
out
fs
stc
dec
mov
dec
rcrl
repz
rolb
call
lret
ljmp
dec
setp
push
and
mov
mov
adc
int3
pop
cmp
mov
pusha
test
xor
aam
clc
or
pushf
lahf
mov
loopne
sub
xchg
movsl
icebp
inc
jb
push
push
pop
inc
inc
push
dec
cmp
aaa
js
test
cmp
fwait
cmp
aam
sub
aas
or
cld
push
or
rcll
xor
inc
inc
les
cs
adc
jbe
scas
movsb
aad
xchg
mov
test
imul
outsl
inc
ficoml
fcoms
or
push
adc
pushf
stos
shlb
imul
repz
fs
les
scas
js
push
jmp
xchg
cwtl
xlat
cmp
mov
jnp
pushf
and
or
fnstenv
push
xchg
dec
push
pop
push
push
xchg
inc
adc
push
inc
movsl
cmp
pop
pop
lret
cwtl
inc
mov
sub
push
andl
push
pushf
add
jge
xchg
dec
aas
push
xor
rorl
sbb
ret
cmp
sbb
loopne
into
test
lock
dec
xchg
inc
repnz
test
xlat
cmp
mov
sub
sub
imul
adc
mov
cs
jbe
lods
mov
movl
push
loop
es
push
jae
and
icebp
mov
mov
xor
movsl
ftst
and
js
ret
insl
mov
mov
ja
pusha
cmp
mov
ds
loope
dec
add
adcl
mov
cmpl
sub
shrb
clc
cwtl
in
in
mov
fmuls
sub
shlb
in
dec
mov
out
mov
xchg
into
mov
les
push
out
jle
mov
aaa
test
sub
pop
mov
pop
rorb
mov
mov
arpl
mov
jge
push
push
lret
add
aad
cli
lcall
push
lds
mov
sub
and
orl
xor
lods
out
dec
sbb
cwtl
mov
and
or
fistpl
xor
lret
out
daa
loope
jle
divb
mov
jns
push
insb
xchg
xchg
cmp
add
inc
loopne,pn
add
ss
cmp
cli
popf
mov
jns
imul
xor
fsubs
or
rolb
mov
and
mov
dec
fsubrs
lahf
fistpl
dec
sbb
cmpsl
push
mov
sbb
dec
gs
daa
fldl
scas
cli
xchg
scas
jnp
xchg
pmaxsw
aaa
js
cmp
jl
aam
jo
das
rcrl
cmovp
loopne
mov
fwait
lods
inc
jns
js
daa
mov
mov
aam
addr16
loop
jmp
inc
jle
push
popf
cs
popa
scas
push
stc
sbb
mov
imul
hlt
fwait
insb
loope
sbb
mov
dec
lods
loope,pn
pop
fcom
sbb
std
xor
rorb
xchg
ror
movsl
cmp
add
dec
jp
mov
fnsave
adc
pusha
pop
add
mov
or
or
fucom
repz
imul
dec
push
fiaddl
sbb
and
dec
pcmpgtd
mov
into
lahf
out
sbb
jae
divl
adc
xchg
ret
xlat
cmp
inc
xchg
and
adc
push
in
push
iret
xchg
jle
jno
jg
ja
pop
insl
adc
xor
and
xchg
or
hlt
scas
popf
loopne
inc
pop
mov
int
mov
sub
mov
clc
popf
into
rcll
repz
inc
mov
movsb
dec
test
out
or
adc
xorb
in
mov
ljmp
jno
or
dec
jge
js
outsb
outsb
fstl
mov
cmp
fwait
imul
cmpsl
aas
jg
pop
xchg
pop
movsl
push
add
inc
mov
lret
pop
xchg
sbb
jnp
lock
iret
cmp
sub
cli
fwait
sarl
mov
aam
mov
aad
subb
xor
mov
ljmp
fwait
sub
pop
push
dec
ret
jnp
aam
leave
out
inc
cmc
sub
repz
push
jge
cmp
jae
movsb
arpl
sbb
push
out
xchg
lret
sar
mov
rorb
pop
mov
mov
movsl
add
dec
in
dec
push
in
cmc
jb
adc
insb
loopne
jnp
adc
cltd
das
hlt
and
sarb
or
push
mov
fiadds
sub
xor
xor
dec
mov
dec
jmp
adc
push
icebp
hlt
xorl
sub
add
push
std
and
int3
sbb
jbe
cmp
sbb
lcall
xorl
add
xlat
cltd
fsubl
mov
xchg
xchg
cld
dec
xchg
ficoms
imul
enter
push
ss
mov
inc
imul
fs
jae
mov
pop
lea
std
sahf
jnp
pop
out
jbe
push
adc
push
scas
ljmp
jae
in
movsl
insb
add
adc
mov
das
xlat
je
test
xchg
mov
shrl
dec
shll
aas
dec
popf
insl
fdivl
push
jb,pt
addr16
loopne
scas
mov
out
xchg
bound
dec
xchg
mov
arpl
ss
push
nop
xchg
in
push
test
add
bnd
in
push
xchg
pop
inc
and
iret
arpl
adc
jne
in
dec
push
mov
push
jb
sbb
inc
push
push
jnp
cmp
aam
int3
cmp
out
pop
mov
adc
fsubl
jle
adc
jb
or
push
jmp
dec
xchg
pop
pop
aad
cmp
push
push
leave
mov
jbe
insb
ja
fdivr
jnp
ljmp
fstl
sub
imul
arpl
stc
shll
inc
jnp
pop
inc
mov
push
jecxz
sub
sub
je
test
sub
repnz
mov
mov
dec
xchg
pushf
arpl
and
xlat
call
xor
in
push
dec
mov
cli
lcall
add
int3
imul
push
add
push
fimull
push
jno
add
movsl
sahf
std
jmp
jo
call
lcall
inc
cmp
or
xorb
leave
icebp
jg
cmp
stos
sahf
inc
inc
xchg
in
cmp
pop
dec
into
push
cmpsl
mov
test
sbb
adc
test
sub
icebp
sbb
and
and
bound
pop
out
data16
xor
jae
jbe
inc
test
int3
pavgb
insb
xchg
jns
push
jmp
and
sub
mov
rcll
mov
dec
push
mov
enter
aad
adc
mov
add
les
out
sarl
cmp
add
mov
mov
cmpsb
adc
mov
push
xchg
xchg
pop
inc
add
insb
mov
and
xchg
xchg
cltd
and
js
fbstp
and
push
or
int
mov
pop
ljmp
push
sbb
in
jae
int
or
inc
lcall
push
iret
adc
mov
xchg
sub
mov
jo
sbb
mov
jp
push
mul
xchg
xchg
pop
adcl
mov
pop
add
pop
scas
fs
rorb
cwtl
inc
or
push
add
inc
loopne
sbb
cmpsb
data16
mov
pushf
lret
ret
stos
pop
mov
idivl
js
rcrl
imul
addr16
mov
repz
sbb
shr
jo
fwait
push
xor
call
dec
pusha
pop
fwait
clc
pop
mov
cmp
mov
jmp
call
loop
icebp
aaa
les
or
in
inc
stc
iret
sub
hlt
pop
lret
add
int3
insl
jae
out
je
ret
ja
xchg
ret
push
xchg
mov
mov
xchg
scas
ljmp
mov
std
jmp
aad
jecxz
cmp
inc
xchg
pop
popf
das
dec
cmp
ds
ljmp
fnstenv
xor
mov
lds
fstl
aam
and
xor
pusha
push
out
ja
ss
pop
xor
inc
cltd
shlb
inc
shrb
mov
data16
xchg
xchg
pop
lods
inc
inc
out
insb
push
paddb
adcb
cmc
or
add
xchg
pop
xor
div
cmp
in
stc
inc
push
aam
pop
insb
fidivrs
cmc
loopne
in
mov
mov
pop
xchg
data16
push
inc
mov
rolb
dec
cmp
in
add
ret
cwtl
cmpsl
or
aaa
xchg
test
scas
cmpsl
test
sbb
dec
es
aaa
jp
movsl
xchg
push
jecxz
idivl
pusha
movsb
call
sbbb
sub
mov
mov
mov
aam
movsb
ret
mov
stos
or
jl
xor
jp
mov
dec
das
out
and
mov
sbb
das
shlb
push
dec
mov
mov
push
loop
repz
fstpt
mull
iret
leave
das
sti
cmpsb
mov
test
xor
test
sbb
cmp
sahf
ficoml
mov
push
xor
push
test
int3
xor
mov
pop
movsl
push
lds
cmpsb
data16
loopne
movsb
sbb
or
adc
scas
lcall
out
or
ljmp
daa
xchg
and
mov
int3
insb
mov
pusha
ret
adc
mov
mov
mov
dec
fldl
mov
xor
adc
loopne
stc
mov
push
adc
loopne
mov
xor
lahf
roll
push
test
leave
ret
nop
clc
jp
mov
and
push
sbb
lods
aaa
mov
jg
call
or
fisubrs
loope
xchg
mov
xchg
xchg
insl
inc
neg
jle
lock
push
decl
movsb
loopne
shrl
pop
in
add
and
out
or
pop
test
gs
pop
sahf
xor
arpl
mov
pop
outsb
clc
std
xchg
into
push
sbb
fisubl
sub
imul
ljmp
insb
push
inc
jae
mov
pop
out
cmpsl
in
cmpsb
lods
mov
out
scas
daa
adc
jns
dec
sub
xchg
mov
pop
xchg
xor
lret
mov
mov
repnz
cmp
mull
inc
and
mov
xchg
test
aas
mov
out
sti
outsl
fdivrs
mov
loop
sahf
shrb
xlat
inc
push
in
cmp
xchg
jnp
rcrl
add
loop
fsubs
bound
lcall
jno
lods
xchg
mov
or
and
lock
mov
test
mov
push
les
ljmp
xor
mov
or
lahf
decb
add
lea
and
fs
jae
cltd
in
lods
adc
cmp
and
arpl
jb
add
test
cmpb
repz
xor
xchg
outsl
bound
stos
and
adc
sbb
xchg
cltd
pop
mov
xlat
cmp
fidivrl
adc
lock
jmp
or
std
fxch
repz
imul
inc
jl
adc
and
mov
mov
sbb
int
stos
fidivl
out
add
cmp
dec
cmp
sbb
aad
pop
xchg
ds
mov
mov
lock
arpl
inc
or
cwtl
dec
jp
adc
sbb
xor
or
sbb
lahf
outsl
cmpsb
adc
test
xchg
fdivrs
addr16
inc
mov
pushf
dec
test
ja
xor
mov
lock
lahf
push
repnz
add
jo
popf
sub
xor
dec
mov
mov
sub
mov
mov
ret
mov
xorl
or
movsl
or
dec
mov
enter
push
mov
negb
out
sub
sbb
push
sbb
jle
inc
cld
std
shll
mov
es
pop
and
lcall
mov
and
out
xchg
lret
movsl
fs
fbstp
dec
rcll
out
inc
push
or
inc
ljmp
cmp
mov
test
scas
mov
stos
insb
ds
lea
faddp
xchg
push
pop
push
cmpsl
xor
rcrl
push
fs
ficoml
sarl
xorl
add
int
aaa
mov
fld
rclb
xor
sbb
aam
sbb
inc
decl
push
popa
rclb
mov
xor
in
push
jle
sub
or
bswap
lret
and
outsb
in
cmc
icebp
js
out
gs
jle
cmp
add
or
dec
fistpl
sub
mov
fcmovnbe
or
sti
inc
cwtl
mov
lods
les
or
stc
xchg
push
sarb
cs
ret
push
arpl
cmp
inc
mov
cltd
std
popa
in
mov
mov
jb
xor
pop
into
cs
inc
aam
test
cmp
dec
xor
sbb
sbb
sub
sub
mov
js
xchg
movsl
mov
pusha
add
mov
sbb
jb
sahf
daa
dec
mov
fs
addl
inc
dec
lahf
mov
enter
dec
lods
out
mull
adc
cmp
stc
inc
cld
inc
fs
adc
jmp
imul
lock
or
or
jmp
inc
push
andb
lret
lods
cmpl
je
in
cmpsl
out
aas
outsb
cmp
popa
mov
in
add
popf
loop
sbb
cld
xchg
cmc
in
sbb
leave
sub
enter
jno
iret
sub
es
pushf
and
icebp
sbb
fwait
xor
orl
push
movsb
inc
jmp
adc
cli
mov
sub
jge
mov
and
xlat
sbb
popf
outsb
negl
push
jle
cmp
ljmp
out
ljmp
out
sbb
push
sbb
mov
movl
lcall
push
cmpl
movsl
adc
repnz
fidivl
mov
adc
add
pushf
adc
sub
inc
mov
jecxz
data16
test
clc
xchg
cmp
int3
outsb
popa
sbbl
mov
outsl
push
sbb
imul
pop
daa
insl
dec
mov
sbb
sub
and
in
pop
xorb
out
nop
sbb
inc
dec
sub
sub
sbb
movsb
test
xlat
fcoms
inc
mov
sbb
das
cmp
mov
fdivl
dec
insb
inc
aaa
movsb
jle
lock
je
and
or
das
or
sub
jmp
add
lea
adc
dec
add
or
push
and
or
mov
push
popf
nop
lea
ljmp
ljmp
and
pop
test
pushf
lea
adc
adc
cmpsb
and
cltd
pop
jle
scas
add
mov
pop
ja
or
sub
idivl
inc
shl
jmp
mov
shlb
pop
ret
and
ja
ja
repz
ja
test
shrb
or
push
lods
inc
faddp
lock
cli
pop
lcall
dec
ficoml
push
or
fwait
add
roll
sub
mov
sbb
pop
adc
cmp
outsb
fimull
pop
repnz
lahf
cmc
jb
push
lret
cmp
jmp
sbb
cmpl
pushf
sub
push
hlt
mov
dec
fsub
xchg
rclb
inc
mov
push
adc
adc
mov
or
xchg
or
adc
mov
jb
pop
add
cli
mov
add
int
push
xchg
clc
jae
movsb
mov
loopne
dec
and
shll
scas
cli
sub
xchg
pop
push
mov
idivb
and
sbb
loop
dec
dec
pop
pop
daa
cmpsl
pusha
push
mov
ja
daa
fistpll
pop
out
fisubs
mov
loopne
sbbb
int
xchg
into
add
lcall
xor
imul
test
sti
shlb
push
test
and
out
adc
lret
inc
mov
adc
mov
cmp
pop
inc
xor
scas
sub
jl
push
adc
xchg
ja
xchg
jle
loopne
imul
dec
xchg
inc
cmp
sbb
fwait
jnp
call
popa
fcomip
rolb
shll
xchg
jle
jmp
sarb
add
sub
scas
xchg
fwait
jne
pop
jge
lcall
xchg
ret
mov
pop
add
push
xchg
int
mov
pop
lods
lret
mov
fisubs
push
cmp
out
stos
adc
popa
ret
aam
cmc
ss
andb
int3
sbb
jecxz
fcmovu
sub
movsl
push
addb
shrl
xchg
mov
inc
cmp
mov
popa
shl
cmpsb
xchg
imul
or
test
and
jg
xchg
cmp
xchg
mov
sub
ret
hlt
scas
mov
jmp
and
test
mov
inc
xor
xor
scas
xor
pop
mov
jne
mov
sbb
inc
mov
lahf
push
rcr
push
sbb
pop
sbb
push
mov
inc
cmpsb
stc
ja
int3
out
imul
xchg
in
fildl
in
add
pusha
jns
test
push
or
mov
mov
addr16
aas
dec
inc
mov
bound
mov
mov
adc
movl
mov
pop
mov
cmpl
loope
adc
in
fsubrl
xorb
pop
xor
push
mov
pushf
cmpsb
and
testb
fs
insb
lds
mov
out
arpl
mov
cmpsb
jl
int3
mov
popf
pop
mov
dec
cli
jnp
pop
xchg
outsl
xchg
into
xchg
or
cltd
or
inc
mov
mov
sahf
mov
test
sbb
xchg
cwtl
xlat
cs
js
fcmovne
mov
adc
cmc
movsl
testl
dec
dec
aas
repnz
insl
xchg
pushf
daa
loope
inc
mov
mov
xchg
xor
push
mov
inc
je
getsec
stos
clc
mov
jl
push
add
rolb
cmp
sub
mov
int3
leave
mov
adc
in
shrb
sub
insl
dec
inc
popa
outsl
mov
dec
xor
fidivs
and
loop
pop
inc
cwtl
adc
iret
mov
and
jae
xorl
inc
cmp
adc
out
add
pushf
notb
jl
mov
pop
or
fidivl
leave
mov
xchg
lcall
cmp
test
loope
pop
popf
in
cmp
jae
lock
and
push
add
inc
leave
cmp
mov
push
push
movsb
pop
scas
mov
dec
je
scas
inc
jne
cltd
lds
rol
ret
pop
cmp
sbb
or
and
jo
push
jge
stc
mov
je
jl
fucom
sub
bound
mov
inc
mov
imull
jp
sub
mov
std
jno
pop
iret
scas
les
pop
xchg
pop
jae
or
cwtl
les
in
inc
pop
es
lock
movsl
movsb
pmulhw
hlt
sub
adc
push
je
xor
pop
arpl
addb
insl
or
inc
pop
lods
arpl
fwait
mov
add
aaa
pop
call
rol
fwait
or
nop
out
stos
sub
jns
sub
mov
ja
xchg
pusha
ret
sti
push
bound
cli
pushf
pop
push
cmpsb
adc
pop
enter
js
mov
lds
ds
mov
pop
cld
push
call
fidivrs
dec
popa
inc
je
jge
cmp
dec
push
dec
stos
das
imul
sub
loope
mov
fcmovb
fsubrs
cmpb
jge
fdiv
aam
cli
in
pop
sub
or
fistl
xchg
popf
push
xchg
adcb
cmp
clc
std
imul
negb
mov
ljmp
dec
sub
in
xor
pusha
mov
lea
xor
sbb
test
mov
imul
mov
out
jl
and
mov
out
insl
adc
xchg
xor
push
mov
jno
add
mov
push
rorb
cwtl
sbb
xchg
inc
dec
shrl
cmp
cmpl
ja
mov
push
fists
mov
inc
in
in
xor
cmp
fcoms
cmpsl
shrl
sahf
add
in
sub
adc
fistps
cmp
lods
daa
push
dec
xor
ficoms
pop
push
adc
inc
add
inc
fcoml
movsl
rcrb
push
leave
jo
fisubl
adc
fisttpl
xor
repnz
jp
leave
or
or
je
sahf
dec
jne
ss
imul
cmp
xor
sub
lret
icebp
test
add
clc
fwait
sti
or
jg
andb
ficoms
and
push
xor
push
imul
shlb
lods
jge
fldcw
push
aad
cmp
mov
in
repnz
dec
add
pop
sbb
shl
mov
or
adcb
xchg
cmc
fstps
call
or
push
mov
inc
jmp
mov
iret
test
push
jp
pusha
orb
and
pusha
pushf
bound
jp
movsl
sub
jne
mov
pusha
inc
pop
mov
std
shr
mov
das
testb
pop
push
cmp
cmp
fldl
sti
inc
dec
clc
push
stc
mov
xor
cmp
xor
mov
enter
push
lock
popf
ljmp
xor
lret
pop
jl
fwait
adc
repnz
int
outsb
mov
inc
loopne
into
jo
mov
les
mov
cmpsb
xor
mov
loope
out
mov
cli
les
sub
cld
jns
cmp
divl
dec
shrb
outsb
add
out
xchg
dec
stc
icebp
pop
push
cmp
stos
ret
popa
out
stos
lds
mov
in
mov
mov
imul
mov
add
inc
scas
sbb
xorb
pop
aam
sub
mov
xchg
pushf
add
adc
push
push
mov
pop
pop
sub
cmp
mov
cmpsl
and
fstpt
cmpsb
ja
jbe
jl
lods
dec
out
ss
xchg
shl
jl
arpl
inc
and
cli
pop
mov
mov
cmp
cmp
xor
or
es
roll
cmp
popf
ds
test
cmp
xchg
fnstcw
cmp
xor
jge
fisubrs
dec
push
clc
je
mov
nop
std
std
movl
pop
arpl
ret
lcall
data16
jle
pop
mov
fnstcw
clc
pop
or
negb
das
sarl
scas
dec
mov
mov
xor
cmc
stc
fldl
int3
popa
add
cmp
xchg
cmp
test
ss
mov
insb
test
fld
pop
rclb
jns
lods
imul
dec
xchg
divb
test
jae
jg
mov
cli
xlat
int
lods
es
inc
adc
or
pop
mov
es
add
in
sbb
jl
dec
andl
dec
ss
cmp
sbbl
mov
push
mov
sbb
or
cmp
inc
mov
jae
push
bound
xchg
inc
xor
arpl
push
rolb
dec
scas
orl
inc
cmp
pop
cmp
inc
loop
pusha
cmp
stos
add
pusha
sub
in
dec
xor
mov
mov
lret
test
xor
popf
outsb
push
ds
jecxz
bound
subl
or
sub
ds
add
nop
arpl
pop
test
dec
sbb
cmovo
cltd
push
and
sbb
lret
loopne
mov
jb
repz
push
jo
pop
ds
or
stos
test
dec
out
imul
ja
shl
daa
mov
xchg
pop
add
imul
pop
int3
jb
add
add
insb
dec
xchg
add
in
ljmp
push
sbb
iret
mov
mov
pushf
outsl
int3
and
mov
aam
mov
leave
adc
mov
cmp
xchg
mov
dec
push
dec
inc
pop
inc
cmpsb
in
fnstenv
xor
lea
push
hlt
ss
sbb
leave
dec
imul
inc
popa
mov
hlt
repz
scas
test
sub
push
xchg
jecxz
clc
jo
sbb
stc
pop
nop
lds
bound
popa
xchg
ret
ret
pop
popa
daa
sub
xor
dec
or
mov
aaa
mov
xor
mov
shrl
sbb
push
aas
mov
adc
mov
das
popa
add
mov
mov
jnp
push
mov
jnp
popf
divl
cmp
gs
mov
into
insl
add
gs
fsubr
push
sub
jns
and
cmp
pop
cmpsb
adc
es
lret
cld
push
outsl
jno
mov
scas
mov
jp
je
cmp
xchg
push
pop
xor
fcompl
fistpl
cmp
je
jnp
xor
and
add
fisttpll
dec
jle
loop
xchg
pusha
inc
and
or
cmp
fbstp
push
cmp
cmc
sub
loopne
dec
sub
push
loope
cmpsl
push
xlat
xadd
std
or
cmp
sub
and
cmc
rol
pop
sbb
sbb
jno
jb
pop
lcall
inc
rorb
out
stos
insl
in
xchg
add
pop
int3
ljmp
sub
aaa
pop
xchg
stos
fistpl
jge
js
outsl
jmp
das
adcb
hlt
sarl
push
out
jnp
push
cmp
fmuls
xlat
mov
add
and
enter
mov
insl
sbb
arpl
sub
lods
mov
int
mov
sbb
jne
sub
sahf
add
out
mov
mov
pop
sbb
mov
gs
dec
push
pop
repnz
movsl
movsl
idivb
cmp
fldenv
sub
mov
inc
mov
mov
add
and
je
xor
cmpsb
dec
aad
das
and
pop
mov
jnp
icebp
xchg
icebp
std
add
gs
mov
mov
cmp
cmp
fisttps
dec
xor
in
insl
sbbl
popa
xchg
push
inc
icebp
add
daa
es
cmovae
add
jge
ljmp
shrl
test
fsubl
rcrb
jo
clc
adc
fstp
cmp
mov
icebp
add
aaa
jp
mov
test
in
enter
loope
aam
dec
push
int
pop
xchg
aam
mov
push
das
ficoml
adc
jae
mov
xlat
popa
cmp
dec
out
unpcklps
jno
movsb
sub
pop
adc
ds
addr16
jl
das
mov
ret
loopne
mov
sbb
cmp
cmpsb
jge
cmp
sbb
mov
adc
jno
dec
in
xchg
andb
adcb
pop
jl
sub
sbb
jp
cmc
jle
sarl
fdivp
pop
cwtl
sbb
jo
repz
inc
pop
pop
mov
out
sub
les
jg
scas
xor
sub
pop
pop
inc
loop
jnp
jg
add
push
imul
aas
push
into
test
inc
add
addb
or
dec
mov
jae
push
mov
jb
mov
add
jb
insl
pop
jle
xchg
fcomps
push
fwait
mov
jmp
mov
fistl
fwait
sahf
mov
sub
pop
incb
xchg
arpl
sub
mov
jg
push
fdivr
sbbl
rcrl
scas
lahf
push
sub
mov
xchg
sub
or
in
cwtl
aad
cmpsb
pop
fsubp
mov
imul
dec
cld
lahf
cs
mov
mov
push
aaa
mov
and
mov
daa
fs
ds
push
out
cld
dec
fcmovbe
and
inc
or
or
rcrb
cltd
push
fs
popf
rorl
jno
out
mov
lcall
in
or
sub
add
xchg
jbe
xor
dec
shlb
add
imul
clc
pop
out
aad
enter
cli
or
xchg
adc
pop
adc
mov
xor
xchg
out
aam
lds
or
dec
icebp
jl
cmp
enter
xchg
jnp
ss
push
pusha
call
or
stc
cmpsl
stc
add
std
stos
addl
imul
pushf
bound
add
cwtl
in
ret
and
lods
xchg
mov
push
push
jle
call
lds
jno
push
add
cli
in
jl
out
mov
in
sbb
mov
jo
adc
cwtl
mov
idiv
sub
cld
into
loop
fmul
int
lcall
sub
test
sub
push
in
push
dec
test
into
xorb
jb
in
fdiv
xchg
xchg
sahf
fisubrs
jp
or
int3
pop
pusha
popf
xor
ljmp
ss
jecxz
icebp
push
cli
sub
sub
cmp
fs
fsubrl
in
pop
push
jns
jnp
or
in
test
pop
fwait
mov
or
out
pop
movsb
pop
add
or
jns
clc
jge
test
sti
sbb
lret
jb
sti
sbb
mov
lods
rcrl
fisubl
mov
cmp
and
jecxz
popa
xor
cmp
and
cmp
cmp
mov
aas
ret
iret
adc
mov
mov
push
sbb
clc
mov
repz
and
xchg
dec
call
sbb
or
dec
rolb
pop
fwait
push
outsl
dec
mov
cmpsb
cmp
lcall
rcll
xchg
jns
jne
enter
xchg
lods
repnz
in
fcomps
out
ja
lahf
cmp
das
scas
adc
cs
mov
push
and
setne
mov
mov
or
fs
pop
add
pop
sub
and
leave
loope
sub
xchg
pushf
ret
inc
in
sub
push
push
dec
aad
push
imul
jno
mov
and
imul
test
dec
icebp
jle
mov
cli
mov
popf
push
push
sahf
jns
out
mov
out
and
ja
data16
popf
or
fcmovnb
call
inc
sbb
dec
adc
cmpb
rcr
mov
in
movsl
sbb
mov
das
and
arpl
jne
xchg
pop
in
or
sbb
cmp
xchg
pop
cmp
xchg
or
rcrl
sbb
or
mov
jl
ds
push
jnp
mov
xor
movsb
xchg
dec
test
aas
ja
pop
cmp
sbb
pop
scas
push
xor
hlt
clc
testl
mov
pop
jbe
inc
add
cmc
xchg
push
jbe
inc
adc
mov
mov
mov
ret
mov
popa
mov
addr16
loop
pop
jae
aas
notb
pop
cli
mov
popf
les
cmp
aam
mov
rorl
mov
and
push
cli
stc
inc
or
std
hlt
negl
and
mov
fs
test
inc
popa
push
mov
mov
and
icebp
rcrl
push
and
outsl
dec
pop
loope
cli
insl
cld
cmpsl
mov
fidivs
cmpsb
pop
lret
jae
pop
fdivrs
lret
gs
int
movsl
cld
add
add
add
xchg
pop
shlb
mov
pusha
test
or
test
sbb
xlat
jbe
adc
rcrb
rcrl
mov
add
loopne
in
stos
sub
shlb
lea
push
loopne
adc
bound
jb
icebp
add
and
push
outsb
mov
mov
jmp
mov
jne
xchg
sub
std
or
int3
add
aas
mov
and
mov
lds
loope
mov
jecxz
sbbl
pop
dec
imul
add
stc
idivl
dec
scas
jns
lock
test
mov
cmp
cs
jl
inc
sub
jp
popf
mov
sahf
cmp
and
shr
neg
cltd
mov
addr16
aad
adc
xchg
sbb
test
sbbb
pop
je
aad
xchg
adc
sbb
inc
push
xor
test
scas
adc
mov
sbb
aaa
or
jns
inc
mov
pop
sub
adc
sub
push
adc
or
push
push
adc
out
add
mov
pop
neg
sbb
pop
jp
insl
cmp
sub
and
jo
lods
aam
push
mov
in
in
fstl
adc
movsl
mov
dec
or
mov
or
pop
mov
cmp
ja
sbb
lcall
test
icebp
adc
jnp
cmpl
jae
scas
scas
ljmp
js
popf
les
test
and
inc
aaa
es
cld
and
lea
mov
shll
cld
test
popf
mov
mov
and
dec
pop
cltd
xorb
call
dec
jbe
ret
adc
addr16
out
popa
cld
xchg
pusha
mov
int
mov
lret
fadd
or
ja
push
sbb
stc
fsubs
or
lea
leave
sub
testb
ja
imul
adc
sbb
push
in
lcall
pusha
pop
fwait
dec
xor
xchg
sbb
mov
in
insl
push
sub
jo
lds
mov
call
das
call
cmpsl
dec
pop
fyl2xp1
mov
or
cmp
cld
cmp
clc
jne
pop
adc
in
test
add
test
outsb
or
sub
in
dec
enter
aaa
jae
jmp
pop
les
mov
jge
test
jmp
jg
roll
stos
sub
dec
pushf
in
ljmp
jbe
into
pushf
adc
mov
rorb
aas
dec
aas
vsqrtss
test
vmovdqa
add
daa
mov
mov
xchg
rcrb
jb
lahf
roll
push
jno
adc
xchg
and
mov
ljmp
leave
pusha
imul
cmpxchg
lret
add
xchg
or
fmul
adc
dec
sbb
pop
fdiv
pop
int
subl
mov
and
inc
cmp
ds
or
ret
stos
mov
xorl
inc
sub
add
add
cmp
xchg
push
inc
cwtl
stc
fildl
xchg
push
out
xchg
or
outsb
sti
mov
clc
aam
cwtl
dec
call
adc
lret
hlt
test
lahf
fistpll
push
ficoms
pop
mov
and
aam
add
or
and
cli
aas
lret
std
jg
dec
xor
int3
add
scas
push
xchg
fisttpll
jae
mov
pop
in
inc
ja
ljmp
dec
pusha
mov
cmpsl
mov
movsb
add
into
cmp
lea
les
mov
xchg
cvtps2pi
call
leave
jnp
inc
push
add
and
xor
sub
sbb
test
adc
jb
add
pop
sub
cs
jge
rclb
inc
mov
cmpsl
jno
push
subl
jecxz
icebp
xor
cmp
in
loope
pop
test
pop
mov
sahf
pop
xor
das
cmpsb
dec
dec
out
mov
subb
jge
push
xor
in
cmp
rclb
cmpsl
nop
loop
mov
stc
fstpl
cmp
orl
scas
add
xchg
add
movsb
lods
pop
ja
and
jecxz
jle
arpl
pop
ret
mov
pop
jl
shl
cmp
cltd
jg
xchg
xchg
mov
jl
dec
fisttps
adc
mov
jmp
push
fnstenv
ss
lods
ds
push
cmp
push
jb
nop
sub
inc
pop
dec
out
xchg
adc
test
leave
jp
jno
sahf
out
mov
fs
shl
repnz
lods
sahf
add
push
arpl
add
xchg
in
and
sahf
mov
adc
addr16
faddl
les
movsl
dec
xchg
cmp
popf
je
xchg
cmp
repz
imull
sbb
pop
rolb
and
cmpsl
adc
mov
sub
out
ds
pop
fsubs
mov
mov
stos
or
jecxz
sti
in
nop
pop
nop
push
cs
adc
stos
push
jns
inc
add
lahf
dec
negb
and
movl
imul
daa
out
cmp
cmp
into
pop
sub
les
or
mov
jmp
pop
jecxz
int
mov
and
mov
ret
rol
imul
inc
adc
mov
ret
sti
sbb
xor
std
ret
cmpsb
js
addr16
pop
leave
ss
pop
mov
pop
loope
jl
dec
sub
or
arpl
in
mov
mov
or
cmp
adc
mov
adc
dec
jo
movsb
mov
xor
lret
push
inc
lahf
push
icebp
repz
jmp
loopne
jmp
ffree
sbb
imul
mov
bound
and
xchg
add
std
in
pop
mov
and
cmp
pop
call
or
fsubs
insb
lds
inc
fidivl
leave
les
shll
mov
cmp
cli
insl
sub
aas
dec
pop
cltd
push
add
addb
sbbb
sbb
mov
xor
cs
je
ds
ss
adcl
aam
xor
stos
loop
repz
and
mov
or
jle
inc
stos
imul
lcall
jne
add
pusha
outsb
test
pop
xor
xor
or
jle
and
ja
ret
xor
mov
cmpsl
dec
xor
jne
mov
pop
stos
call
pushf
mov
dec
mov
cli
dec
xchg
dec
ljmp
loope
mov
hlt
pop
loopne
xchg
mov
jecxz
xorl
rcll
cmp
xor
jbe
gs
popa
inc
movsl
jmp
lods
and
aad
mov
pushf
sub
mov
sub
and
lea
lret
imul
loop
dec
repz
sub
rclb
in
bound
xor
insb
dec
cmp
push
dec
xchg
fisubrs
pusha
pop
mov
mov
rcrl
loop
stos
jl
and
mov
shl
cmpsl
es
mov
sahf
cmp
scas
and
mov
fdivrs
outsl
adc
pop
sti
xor
push
movsl
pusha
xchg
shlb
and
nop
adc
adc
mov
push
xchg
addl
inc
test
dec
in
imul
test
inc
push
xlat
xchg
mov
jo
aad
pop
pop
outsb
loope
mov
sarl
repz
or
nop
movsb
scas
mov
insl
outsl
push
sbbl
mov
and
pop
es
push
jle
lret
add
jl
jns
adc
mov
pop
jno
mov
adc
jbe
cmpsl
movsb
jns
pop
jl
mov
xlat
jno
dec
and
xchg
idivl
mov
popf
das
sbb
jge
dec
pop
lods
lcall
cmp
cld
mov
mov
mov
cmp
pop
pop
xor
nop
push
in
cmp
in
dec
cld
add
adc
loope
sub
in
adc
scas
imul
cs
xchg
arpl
cmp
loope
dec
int
dec
in
cmpsl
sbb
shll
ficoms
rcrb
dec
cmpb
aam
adc
or
mov
popl
sbb
lock
lret
lea
cmp
aaa
sbb
std
sub
sbb
imul
cwtl
pop
aam
inc
outsb
fstps
and
inc
pop
mov
repnz
and
fwait
rorb
inc
cmp
out
push
xchg
sub
aas
test
xchg
lret
dec
cmp
stos
stc
push
imul
xchg
mov
mov
lea
scas
jo
ss
inc
iret
inc
aas
jbe
xchg
movsl
mov
popa
daa
mov
mov
fdivs
sbb
in
push
ret
cltd
pop
fsubs
mov
dec
out
or
aaa
mov
mov
aam
dec
lds
mov
inc
in
jb
fists
xor
push
inc
mov
fisttpl
pop
fwait
bound
xchg
imul
lods
test
test
sbb
dec
outsb
mov
adc
ja
inc
pop
mov
lea
mov
int3
and
loopne
jl
push
fstpt
hlt
repz
into
dec
or
mov
ljmp
add
xor
mov
aad
jae
add
pop
mov
insb
push
lds
lret
sbb
xchg
lahf
and
dec
enter
popf
cmp
push
lds
cwtl
loope
push
icebp
sbb
mov
shrl
jne
popf
mov
movsb
xchg
and
leave
lcall
xor
adc
les
aad
jnp
add
xchg
jecxz
stos
jbe
call
and
push
lret
dec
adc
xchg
mov
inc
mov
ljmp
lods
sub
movsb
cmpsl
hlt
dec
out
out
lcall
mov
mov
jle
out
push
fwait
mov
xor
jb
pusha
sahf
cmpsb
push
adc
push
adc
in
mov
mov
stc
sbb
and
aaa
mov
and
data16
sbbb
out
push
mov
fwait
add
scas
mov
push
lods
jo
call
inc
inc
and
push
test
adc
jbe
or
dec
leave
sarl
data16
dec
shr
sti
insb
repnz
mov
jo
push
shl
lahf
mov
movsl
dec
sub
cmc
sbb
rolb
inc
test
andl
inc
and
add
loop
xchg
push
mov
int
xchg
cmp
dec
push
push
push
insb
push
mov
and
add
jne
and
xchg
sahf
jns
mov
jne
das
xchg
xchg
lock
imul
jae
test
sub
jmp
sbb
lahf
add
sbb
push
sbb
mov
dec
sbb
jae
xchg
and
push
push
xor
inc
fsts
test
mov
iret
fisttpl
mov
pushf
sub
add
dec
cmp
jmp
hlt
sub
jns
nop
cltd
jg
leave
pushf
lock
xchg
jae
fbld
jb
cmp
jo
jno
lret
jle
jnp
jae,pn
ja
insb
sbb
push
scas
ret
outsb
insb
xor
test
jle
cmp
pop
sarb
fcompl
js
sysret
xor
lods
pushf
jge
mov
icebp
cmc
push
mov
loop
and
sub
cmpl
inc
xlat
call
shll
xchg
cwtl
sub
enter
mov
jp
xor
in
cld
mov
and
jecxz
mov
mov
ret
mov
adc
or
mov
add
adc
push
es
add
mov
into
imul
cld
adc
mov
push
jl
int3
sbb
adc
adc
popf
xor
and
pop
pop
les
mov
cli
mov
setae
mov
mov
push
sub
out
sub
sahf
jecxz
inc
adc
jecxz
pop
stos
push
jg
je
pop
jle
mov
mov
push
daa
dec
push
rcrb
push
imulb
cmp
lret
test
jno
mov
mov
sub
lods
pop
push
jb
loopne
or
xlat
add
sub
lods
push
pop
mov
ret
pop
xchg
add
in
fsubr
jb
and
jo
out
mov
dec
pop
pop
adc
andb
push
push
dec
sbb
or
rorb
jbe
add
mov
aaa
push
dec
sbb
loope
lea
mov
push
mov
add
pop
aas
jl
jmp
cmpsl
xchg
repz
and
aad
jge
xor
xlat
icebp
and
push
dec
movsl
sbb
les
rorl
push
mov
push
push
jnp
addr16
mov
movsb
addr16
mov
test
push
sbb
push
fidivs
out
dec
cli
repz
push
add
inc
dec
adc
shlb
xchg
sti
mov
pushf
pop
mov
lea
pop
jns
mov
xchg
mov
jecxz
enter
movsb
cmc
push
sub
enter
lahf
dec
fwait
mov
xor
lds
scas
and
sbb
inc
cmp
mov
inc
xchg
or
pop
clc
sub
mov
or
cmp
mov
mov
nop
jo
scas
aam
ss
or
or
pop
repz
icebp
add
cmpsb
sbb
ficompl
sahf
sub
rcrl
aad
stos
jns
xor
jbe
and
mov
or
cltd
pusha
shl
inc
xor
leave
mov
mov
xchg
mov
inc
xchg
in
sbbb
mov
xor
adc
mov
adc
fnstcw
enter
push
sub
scas
cmpsl
jns
sbb
stos
or
jbe
cmpsl
lcall
dec
test
test
cmp
shll
inc
inc
jnp
xchg
xor
fwait
sahf
clc
jg
sti
jge
test
ljmp
mov
xchg
add
scas
stc
mov
pop
xor
rorb
cmp
out
pop
popf
jne
pop
rcll
loop
or
xchg
cmp
mov
movsl
cmp
xchg
pop
inc
and
stc
in
pusha
and
lcall
lret
lret
mov
xor
push
lea
shrl
push
xchg
push
imul
or
push
outsl
inc
mov
jmp
outsb
clc
fists
ret
outsb
xchg
xchg
xchg
xchg
xchg
mov
scas
mov
push
jnp
test
add
mov
jge
add
lods
add
push
stos
shll
hlt
ret
sarb
or
clc
les
rcrl
subb
out
xor
les
cmp
mov
sbb
sbb
outsl
stos
fdivl
and
hlt
push
call
push
aad
aaa
inc
movsl
xchg
loop
mov
arpl
cmp
lcall
dec
xchg
push
mov
std
jecxz
pop
sbb
cmp
mov
daa
ret
inc
out
insl
inc
fwait
lahf
ficomps
inc
mov
mov
ss
mov
test
push
inc
mov
adc
dec
je
cwtl
dec
and
pop
xchg
mov
sbb
mov
popf
test
orl
push
sarl
adc
inc
das
cld
mov
jno
loope
cwtl
xlat
fucomp
rol
scas
and
popf
add
cltd
das
mov
dec
test
or
sbb
icebp
mov
jmp
inc
insb
shr
jo
popa
gs
mov
push
ret
dec
lods
or
cmp
xchg
push
sbb
outsl
xchg
mov
popl
xlat
push
mov
add
adc
stc
adc
stos
cmpsb
add
in
mov
or
mov
ds
imul
add
cwtl
or
int3
stc
ficoms
movsb
in
lcall
adc
sub
aaa
imul
leave
test
int
orl
xlat
push
lcall
mov
mov
cmp
mov
inc
mov
or
in
xchg
xchg
sub
rclb
push
adc
test
adc
mov
xchg
sbb
je
and
xchg
cmp
add
sbbl
dec
in
lahf
sub
out
add
dec
pop
popa
popa
xchg
adc
push
sub
add
test
mov
int3
fsubrp
outsb
and
int
je
jmp
and
jns
subb
div
and
mov
repnz
stc
pop
fmull
push
shrb
repz
push
pop
or
cld
sub
dec
movsb
enter
lret
hlt
fdivp
xor
shlb
leave
jo
sub
repz
or
sahf
sahf
jmp
test
push
mov
adc
pop
es
adc
push
incl
pop
cmp
xchg
jle
fldenv
notl
xor
cmpsl
lds
pop
pusha
das
push
sbb
jmp
or
outsl
ss
ljmp
stos
pop
pop
lfence
imul
cwtl
mov
ret
kmovb
push
sbb
insl
outsb
pop
push
or
or
lods
ds
push
lcall
leave
pop
pop
les
decb
cmp
jle
lret
cli
xor
ret
sarl
gs
enter
das
std
mov
iret
sarb
mov
adc
add
insb
into
in
es
dec
add
sub
jge
lods
cmp
dec
adc
cltd
clc
dec
push
mov
icebp
mov
ss
xor
loope
jno
push
aad
adc
repz
loope
mov
cmp
xchg
dec
inc
or
fwait
or
xlat
push
cmp
mov
xor
xor
daa
fsubrp
adc
jno
sbb
pop
fbld
lahf
iret
movsb
mov
int3
add
imul
into
sbb
jle
jne
mov
cs
dec
cli
sarl
xchg
in
add
sarb
or
enter
lret
and
pop
xchg
add
fs
mov
out
pop
push
inc
jle
mov
outsb
add
jno
stos
mov
jg
jg
mov
lcall
add
ret
pop
mov
inc
lock
push
dec
fs
popf
lret
xor
or
int
sahf
shlb
mov
cmp
jl
out
rcrl
xchg
ret
xor
fsubr
pop
mov
push
in
call
dec
in
cmp
dec
adc
in
lock
xchg
push
movsl
out
or
jg
int3
repnz
push
pop
gs
mov
idiv
mov
lds
fistpl
stos
dec
push
push
out
aad
lahf
outsl
cmp
stc
movsb
add
ss
mov
or
test
aas
mov
sub
aaa
or
sub
jmp
jle
xchg
fcoms
pop
movsl
lods
sub
or
push
shlb
sub
bound
lret
inc
inc
int3
lahf
test
aam
xchg
jbe
sub
and
add
das
push
cmp
and
clc
daa
inc
shl
call
test
repnz
incb
pop
in
out
imul
int3
cmp
and
test
fimuls
addr16
jbe
sbb
pop
mov
mov
orl
in
insl
test
cld
xchg
aas
push
inc
incb
mov
pop
mov
mull
push
test
mov
add
popa
loopne
testl
dec
fidivrs
jle
ret
fsub
xor
sub
dec
xchg
mov
lahf
and
jb
mov
fwait
sbb
mov
je
lds
sub
dec
out
fiaddl
int3
shrb
jno
add
pop
pop
pop
mov
movsb
mov
mov
pop
bound
xor
inc
int
shr
mov
cmp
movsl
push
sub
xchg
add
bound
jmp
sbb
cmc
add
arpl
shr
pop
dec
jl
push
inc
sahf
test
xor
mov
pop
mov
mov
and
add
incl
xor
push
das
lret
movsl
rclb
test
ja
xor
cmp
push
mov
push
sarb
out
sbb
and
xchg
sti
popf
ss
leave
xchg
pop
nop
xchg
leave
sbb
fs
out
mov
mov
jae
add
mov
loope
push
or
shrb
sarl
pop
xor
inc
sub
push
je
andb
dec
sub
cltd
ficoms
fmuls
dec
hlt
into
mov
sub
sbb
or
aaa
push
xchg
pop
push
sub
push
lds
xor
js
pop
dec
mov
jmp
fcompl
into
xor
sub
pop
movsl
inc
jae
pop
pop
add
adc
cmc
xchg
adc
pop
or
repz
faddl
daa
push
cli
mov
stos
lret
fsubrl
dec
mov
imul
popa
mov
mov
lret
iret
inc
adc
adc
xchg
sub
cmp
movsb
cmp
inc
add
mov
stc
into
sub
xchg
inc
add
dec
btr
imulb
dec
add
aad
aas
lret
inc
mov
mov
jecxz
mov
push
lock
into
loope
mov
mov
xchg
jne
push
cmp
mov
pop
mov
inc
outsl
cwtl
arpl
jg
in
lock
adc
and
fsts
movsb
sbb
ja
mov
fidivl
and
jl
inc
lods
enter
mov
xchg
inc
adc
insb
jae
mov
movsl
cmp
out
xchg
scas
fsubrs
dec
mov
pop
pop
movd
int3
mov
and
popa
sub
add
sub
mov
jmp
and
cmp
mov
pop
bound
testb
add
movsl
and
pop
sbb
adc
ret
xchg
inc
push
push
push
into
loope
out
pushw
es
fisubrs
jnp
bound
std
xchg
rcr
imul
sbb
rolb
aas
mov
lods
int3
pop
pop
xchg
mov
mov
add
xchg
add
rcr
shrb
lock
push
lock
sbb
aas
lret
in
mov
cmpsb
aas
cmp
idivb
leave
dec
outsb
leave
push
ljmp
test
data16
stc
popf
out
jmp
inc
ficoms
test
and
lahf
es
icebp
sti
xchg
cmp
or
jg
xchg
or
gs
dec
pop
fists
jmp
or
lret
movsl
sbb
test
nop
jmp
sbb
xchg
iret
add
mov
sub
mov
lods
xchg
shl
add
scas
mov
push
test
xor
les
rcrl
imul
lret
daa
jge
push
ret
mov
test
into
sbb
cmp
das
inc
loopne
jb
aas
push
movsl
out
pop
es
hlt
push
xor
push
test
rcll
jb
data16
push
dec
in
pop
push
cmp
nop
movsl
cld
enter
or
xor
cwtl
sarb
xor
sbbl
scas
add
sti
call
cmp
divb
sahf
mov
jg
pop
aad
xor
cmc
mov
fisubrs
ret
sbb
pop
stos
jnp
fst
add
fsubr
inc
mov
imul
sub
adc
push
sbb
test
mov
test
mov
add
jbe
xor
shll
mov
bound
push
pop
mov
xor
inc
push
fisttpll
shr
add
int
jg
sahf
sti
outsb
cmc
ss
bound
mov
push
cltd
shll
stos
sbb
push
mov
jns
mov
xor
shlb
sbb
pushf
shll
in
or
rclb
push
popa
decb
popf
cmpl
mov
ficoml
ret
pushf
pusha
and
mov
loopne
mov
mov
int
xor
insl
andb
fstl
mov
xchg
push
pop
pop
cmp
pop
sarl
cltd
xchg
and
scas
or
xor
pushf
dec
cmp
mov
fstps
mov
cli
aas
push
fxam
cld
sbb
mov
mov
push
or
fs
jmp
lods
jp
subl
cmp
sbb
jns
inc
push
test
mov
inc
mov
fs
addb
mov
clc
mov
mov
notl
shlb
fs
scas
inc
cmc
mov
ret
push
jmp
int
in
aad
arpl
add
rcll
xchg
movsl
js
inc
fwait
and
loopne
mov
das
or
test
sub
pushf
or
aas
add
push
lds
sbb
mov
enter
loop
mov
xor
add
int
rcll
push
aad
ja
pop
jbe
xchg
xor
mov
push
lret
adc
scas
add
leave
mull
xchg
cld
and
mov
mov
repnz
dec
cmp
loope
test
iret
jecxz
fucomi
shlb
push
mov
cltd
mov
int3
jnp
sub
aad
mov
fwait
js
das
mov
xorb
xchg
sub
repz
mov
push
jmp
lea
xchg
lock
adc
add
sub
jmp
mov
stc
in
dec
sbb
into
out
sub
cmpsl
aaa
mov
push
push
mov
dec
test
jns
xor
pop
rcl
neg
sahf
je
ja
adc
cmp
xor
fs
fs
push
sbb
cmp
mov
add
sbb
xor
lahf
aam
popa
mov
bound
fdivs
sbb
xchg
cmp
dec
cltd
dec
cmpsl
sbb
mov
dec
gs
mov
jb
adc
imul
popl
inc
mov
add
lahf
lcall
jns
pop
out
dec
test
xchg
insb
add
mov
loope
fisubrs
xor
jns
jns
cs
mov
insb
jnp
cmp
cmc
imul
gs
sub
cld
adc
or
xlat
xchg
pop
fisttps
jbe
pop
inc
push
cmp
cwtl
sbb
mov
or
lds
or
test
mov
cs
jmp
fucompp
iret
lea
jnp
inc
pop
mov
daa
sahf
mov
jns
xchg
js
repz
fmuls
pop
lret
mov
repnz
js
push
sti
mov
movsb
add
sbb
xchg
mov
aaa
dec
mov
divl
iret
jnp
cmc
std
add
xor
rcr
out
adc
mov
mov
insb
dec
in
out
into
rorl
cmc
pop
fsub
inc
scas
shrb
ja
aam
mov
xchg
stos
push
jno
lods
imul
pop
mov
pop
rcr
inc
aam
xor
sbb
sbb
adc
push
call
push
outsl
sub
mov
adc
rcrb
mov
int
fldcw
ret
nop
dec
shrl
xchg
and
xchg
mov
stos
sub
add
adcl
mov
lds
sbb
push
pop
lods
xor
or
mov
mov
fcoml
fcmovnu
in
push
or
cli
jp
addr16
and
inc
xor
xor
aad
xor
leave
aad
cmp
sbb
or
movsb
add
mov
imul
xchg
push
adc
mov
mov
mov
lea
mov
outsl
notl
fmull
sub
adc
fmulp
dec
or
imul
cwtl
sahf
cmp
sti
add
pop
setle
xchg
and
adc
popa
lods
pop
pop
divl
cld
aam
das
xchg
inc
sub
adc
dec
xchg
pop
mov
push
sub
out
mov
mov
adc
outsl
iret
pop
sbb
mov
lods
ljmp
ja
cmc
dec
cmp
outsl
movl
imul
int3
enter
or
insl
pop
sub
lods
outsl
inc
stos
jns
sbb
es
jne
out
lds
mov
scas
jecxz
arpl
xlat
sti
mov
push
dec
jae
xor
push
adc
ds
minps
aam
xchg
sbb
clc
mov
aam
jbe
icebp
jg
sub
xchg
scas
inc
int3
std
data16
repnz
je
test
out
inc
call
xor
and
aaa
fsub
lock
repnz
pop
andb
in
lcall
add
mov
sbb
dec
cmp
fwait
outsl
add
repz
adc
mov
mov
push
test
mov
and
movsl
dec
add
cli
mov
lds
sbb
sub
mov
outsl
loopne
xchg
lock
daa
pop
mov
inc
jecxz
iret
mov
scas
imul
das
mov
cld
cmp
std
jns
jnp
pop
leave
push
popa
arpl
sub
push
je
fwait
movsl
inc
xchg
inc
or
sbb
jle
divl
cmp
jns
dec
jge
arpl
jbe
sub
sbb
pop
insb
sub
push
mov
sbb
and
mov
push
push
mov
out
adc
in
hlt
jo
adcl
jno
imul
dec
jnp
push
cmpsb
pushf
adc
add
imul
and
mov
repnz
wrmsr
nop
push
pusha
and
fistpl
fwait
cltd
shll
daa
sarb
pop
sub
call
and
je
sbb
sbb
adc
sbb
lcall
out
sub
inc
add
mov
jnp
in
notl
dec
pop
ss
in
push
imul
pop
xor
cmp
das
in
inc
cmp
stos
xor
jmp
js
mov
xor
adc
fistps
xchg
mov
inc
push
or
dec
jno
lret
pusha
dec
mov
hlt
or
lret
push
xchg
stos
xchg
add
je
cmp
es
cmp
jns
or
jne
dec
movsl
sarl
mov
jbe
xor
popa
shll
sbb
pop
jp
mov
or
cmpsb
repz
or
xchg
mov
stos
sti
icebp
popfw
mov
pop
int3
daa
or
xor
repnz
imul
and
test
cli
push
adc
mov
sbb
mov
push
aaa
sub
shrl
mov
and
mov
lcall
mov
fwait
mov
and
fnop
pop
bnd
pop
pushl
in
add
jmp
adcl
mov
ss
xor
pushf
pop
pop
hlt
jnp
orl
and
inc
cmp
push
or
cmp
dec
lret
cwtl
movsb
shlb
or
inc
clc
mov
aaa
icebp
push
shrl
sub
xor
or
mov
int
xor
xchg
notb
scas
int
in
das
xchg
mov
clc
rol
xor
add
adc
cmp
push
outsl
cmp
scas
insl
cmc
bound
dec
insb
lahf
add
roll
dec
add
xchg
xor
xchg
mov
ja
pop
das
movsl
and
mov
jnp
shlb
out
jmp
aas
lret
decl
mov
mov
xchg
inc
leave
outsl
xchg
push
decl
push
push
push
loope
outsb
mov
data16
int
xchg
aaa
es
push
or
faddl
adc
and
adc
mov
in
cld
dec
xchg
xchg
mov
js
mov
dec
xchg
in
xchg
or
jp
adc
idiv
into
aam
sub
adc
fdivs
outsb
aas
mov
add
pop
pop
lret
imul
fidivl
test
je
pop
add
push
mov
mov
orl
jmp
std
mov
add
dec
dec
xchg
lret
xchg
mov
dec
test
push
add
cltd
mov
sbb
ret
hlt
outsb
or
push
cmpsl
scas
dec
xor
and
pop
test
rorb
insl
fldenv
ss
repz
mov
xchg
and
test
jge
inc
pushf
mov
push
push
vmulpd
cmp
test
clc
dec
rcrl
orl
pushf
jo
jge
inc
push
ret
lea
or
cmp
push
ss
pop
aam
lret
xchg
xchg
sbbl
sub
fs
leave
lock
fists
stc
pushf
movsb
loope
cli
lods
les
sbb
push
or
out
ds
mov
out
pop
cmp
in
xchg
lods
in
sub
fwait
adc
push
in
pushf
aad
mov
in
mov
shrb
ret
cmp
scas
popf
pop
cwtl
out
lret
jnp
aam
mov
stc
test
in
mov
rcrb
add
xchg
push
inc
rep
sti
outsb
nop
les
out
ljmp
add
test
cmc
fmul
push
jmp
mov
aam
mov
or
mov
xor
cs
int3
mov
or
pop
dec
xor
cmpsl
test
scas
adc
pop
jle
xor
dec
aad
or
mov
sbb
or
shr
sbb
xchg
xchg
adc
adc
mov
xchg
dec
and
jbe
ds
scas
xlat
rolb
mov
cmp
xor
arpl
xchg
dec
rcl
mov
aam
scas
hlt
jae
popa
jl
dec
in
inc
inc
lcall
xchg
test
sbb
das
lahf
pop
ljmp
adc
dec
dec
outsb
mov
push
sbb
jo
or
mov
push
les
sbb
dec
mov
and
sahf
fnstenv
mov
sub
or
imul
push
fcomps
mov
test
push
inc
xchg
shrl
ss
inc
mov
jl
push
data16
mov
jno
xlat
fdivs
incl
dec
xlat
or
jne
add
test
mov
pop
mov
lock
xchg
dec
repz
xchg
jecxz
mov
mov
cmp
push
mov
xchg
roll
scas
frstor
push
bound
test
mov
ds
lods
out
sub
lret
adc
sbb
cld
mov
test
mov
adc
mov
xchg
jnp
pop
insl
sbb
rcll
jae
push
pop
pushf
mov
cmp
jmp
insl
lcall
jnp
ret
and
sub
push
out
push
or
add
and
mov
out
mov
mov
insb
ret
bound
jle
je
sbb
ja
mov
jg
dec
pop
xor
repz
daa
jae
arpl
pop
mov
push
loop
ss
test
fsub
in
push
jne
adc
jno
cmp
dec
push
mov
mov
add
insb
inc
xchg
roll
xchg
jecxz
sbb
ror
or
mov
movlps
and
inc
je
push
xor
test
sbb
xchg
fldcw
pushf
ret
loopne
fs
sub
in
or
in
mov
push
mov
ret
add
dec
push
cmpsb
movsb
push
decl
cmp
and
push
cmp
xor
mov
push
or
mov
dec
fs
outsb
mov
xchg
imul
inc
hlt
sub
ja
adc
pop
add
mov
pop
notb
dec
sbb
nop
les
stos
xlat
sbbl
push
out
fs
sbb
mov
sti
mov
and
loope
fldcw
enter
loopne
or
pop
ret
lea
inc
lcall
add
test
in
daa
mov
pop
or
pop
clc
adc
ffreep
xor
push
pop
mull
mov
jnp
cmp
enter
das
add
outsl
sub
inc
cmp
out
push
mov
lods
imul
xor
push
inc
hlt
fsts
or
test
sub
popf
jbe
jae
and
sbb
and
jecxz
mov
jo
mov
ret
mov
cs
dec
sbb
ja
push
add
aas
xor
cmc
mov
xchg
mov
arpl
and
sub
ret
adc
push
shl
into
and
mov
call
dec
adc
adc
sbb
and
push
or
xchg
jae
insb
fisubrl
inc
push
aaa
mov
mov
roll
mov
lret
rorb
push
adc
clc
mov
shl
imul
lods
test
fs
mov
aaa
sbb
sub
fsubr
stos
test
cmp
es
add
testb
mov
mov
jno
mov
ficompl
pop
stc
or
bound
js
cmpsl
add
inc
add
imul
add
test
sub
push
clc
inc
xor
ja
xchg
adc
pop
fistps
into
repz
icebp
adc
hlt
inc
adc
imul
mov
mov
fnstsw
push
mov
fisubl
pop
popf
int
das
pop
xor
scas
jbe
in
dec
and
js
jmp
ja
in
rcll
lds
jno
and
lock
lods
in
xchg
add
cs
or
clc
push
call
rcrb
or
sarb
std
out
jne
xor
cmp
or
sbb
xchg
add
cmp
and
movsl
outsb
xor
sarl
mov
inc
movsw
clc
sub
mov
sahf
out
out
cmp
stos
pop
jl
jnp
fcoml
stos
xchg
or
jne
add
pop
aaa
icebp
sbb
addr16
stc
mov
xor
pop
xor
pop
mov
repnz
sahf
fs
pop
xchg
pushf
test
mov
subb
jae
mov
sti
pop
aad
cmpsl
inc
add
and
es
and
sarl
call
push
pop
je
movsb
adc
aaa
imul
or
pop
lods
mov
add
je
add
and
cmp
sbb
inc
xchg
std
int
jno
pop
inc
outsb
aas
jns
repz
insl
lahf
cmpsl
std
fcmovne
daa
in
pusha
pop
mov
adc
sbb
xor
xor
cmpsb
sbb
jne
bound
pop
icebp
sbb
or
pop
jno
jl
dec
add
lock
ret
xchg
mov
outsb
pushw
mov
popf
and
test
loopne
cli
in
dec
ret
cmp
cmpl
pop
push
cwtl
scas
scas
lcall
ret
out
cwtl
adc
divb
mulb
inc
inc
jge
mov
call
xchg
pop
outsb
subb
aad
in
lcall
mov
push
pop
imul
xor
imul
idivl
push
lahf
or
mov
xor
mov
push
es
ss
out
cmc
pop
add
iret
jg
sbb
cltd
sub
adc
mov
jae
popa
inc
or
ja
mov
fwait
cmpsl
cld
ss
and
push
imul
sub
cltd
inc
andb
mov
lcall
pop
sbb
push
repz
inc
inc
fldl
dec
aad
pop
mov
lds
xchg
lret
fsubrl
or
dec
mov
xor
rcrl
in
and
stc
xchg
out
movl
fidivs
inc
outsl
test
out
sub
lds
div
clc
icebp
sarb
mov
in
xor
cld
rcrl
frstor
insb
iret
cmp
pop
xchg
imul
data16
iret
mov
addl
test
mov
add
dec
rcll
cmpsl
addl
mov
bound
popf
pop
jns
icebp
push
popf
and
adc
notl
outsl
lods
lret
add
daa
lcall
mov
loopne
es
mov
mov
jge
push
out
dec
adc
adc
add
outsb
mov
movsb
add
and
dec
mov
stc
jo
mov
lret
pop
clc
lock
test
add
daa
add
inc
mov
xchg
sarl
inc
ret
cmp
mov
nop
and
sti
dec
rcl
mov
adc
popa
sbb
mov
mov
lock
sbb
setge
and
xor
xchg
popf
pop
in
inc
xor
cmpsl
loopne
mov
mov
jl,pn
mov
or
lcall
sub
mov
inc
add
gs
imull
add
cmp
std
mov
sbbb
lret
leave
in
pop
and
cmpsl
test
adc
inc
shl
fwait
jo
mov
outsb
or
je
leave
fdivl
mov
addb
mov
mov
xor
and
inc
ret
mov
test
sbbl
data16
mov
data16
mov
test
and
std
or
cltd
aad
insl
in
fsubrl
sub
ds
insb
inc
test
sbb
leave
mov
mov
inc
inc
jae
repz
in
sub
sbb
data16
pmaxsw
adc
adc
add
add
int3
test
into
imul
mov
out
int3
xchg
loopne
push
in
mov
leave
je
cmp
sub
xor
jmp
int3
std
add
lea
push
rcrb
lock
sub
cmpsl
ficompl
inc
lret
insb
stos
inc
stc
mov
cmp
scas
mov
inc
lret
dec
sbb
insb
dec
xchg
sub
gs
cltd
push
inc
dec
push
ljmp
sarb
in
lock
mov
je
imul
push
call
xor
or
or
inc
jno
insb
push
fsubrl
cmc
in
pop
inc
add
jl
pop
cmp
add
add
jne
in
dec
inc
cld
hlt
mov
dec
xchg
inc
mov
in
scas
pop
push
cmp
push
in
push
repz
and
int3
jmp
jno
lea
popf
cmp
fs
sahf
int
xchg
adc
pop
jge
out
stos
push
leave
or
mov
mov
pop
inc
lahf
div
outsb
push
stos
xor
pushf
popa
inc
fldt
jle
mov
push
iret
mov
ja
out
sbb
pop
aad
or
adc
xlat
es
cwtl
cmpsl
cld
dec
insl
sub
cmp
aam
add
and
pop
mov
jno
or
mov
nop
xor
movsl
movsb
or
push
ret
sbb
cmp
adc
xchg
sub
mov
movsl
lret
xchg
fldcw
cmpsb
push
fs
clc
daa
and
cmp
jae
insl
ret
or
daa
cli
call
sarb
andb
outsl
push
adc
add
push
cmp
fcomi
jmp
insl
xor
lret
jnp
jge
adc
xchg
mov
xchg
fcoml
dec
jmp
loopne
xor
fistps
jne
in
mov
sbb
aas
push
mov
pop
cltd
pop
pop
in
aaa
xor
mov
jmp
adc
into
inc
daa
cwtl
das
cli
xor
xor
jle
jae
out
sub
mov
xchg
std
or
int
mov
leave
cmpsb
sub
outsb
std
mov
pop
mov
cltd
fxch
scas
xchg
xchg
mov
inc
sub
addr16
out
loopne
shlb
fcoms
aam
jnp
dec
icebp
leave
inc
lea
jbe
mov
arpl
dec
rorb
sti
mov
jns
movsb
fists
rcll
es
pop
adc
test
outsl
sbb
xor
inc
adc
int3
in
dec
addr16
cmpsl
push
jae
sub
aam
mov
cmc
sub
mov
mov
sub
xchg
pop
stos
rcrl
push
mov
jp
pop
pop
aam
and
lods
loop
imul
lock
out
fistl
shll
xor
call
jmp
lcall
add
lret
leave
push
aad
ret
xchg
push
ficoms
pop
insl
hlt
out
clc
aam
xlat
cltd
aam
adc
and
hlt
sub
ret
mov
pop
push
loop
and
pop
lahf
xchg
nop
mov
fistps
addl
xor
mov
daa
and
push
testl
mov
dec
and
fstps
mov
addr16
test
jo
out
mov
mov
fstpt
in
cmpsb
mov
xor
mov
sbb
test
iretw
adc
aam
jbe
dec
data16
int
scas
add
out
xchg
xchg
es
mov
cltd
dec
pop
hlt
stos
int
fucomp
dec
rcrl
lods
subb
push
pushf
lret
inc
push
jg
pushf
jae
ds
xorl
mov
xchg
pop
fs
xorb
in
out
inc
inc
add
int
sub
pop
sbb
and
or
ds
mov
sahf
in
jle
fsubrs
es
fcmovne
cmc
mov
push
cmp
fsts
int3
cmpsl
fcompl
idivl
push
mov
aaa
jb
leave
mov
int3
jno
or
outsl
mov
cmp
push
lock
fnstcw
fists
sub
orl
cmp
cmp
pop
and
pusha
mov
push
and
push
push
movsl
xchg
mov
cmpsb
jae
mov
aam
fwait
add
inc
pop
lods
inc
loope
mov
rolb
inc
fisubl
ret
push
push
outsb
mov
rcrb
movsl
pop
icebp
dec
sbb
scas
mov
inc
push
in
test
pop
cmp
int3
mov
mov
sub
leave
scas
in
mov
insl
push
cmp
mov
xor
or
add
in
mov
shll
sub
adc
pop
pop
mov
or
jb
jbe
jb
rorb
cmp
pop
rorb
push
das
jb
sbb
scas
xchg
lcall
imul
imulb
cmpb
leave
mov
add
in
movsb
add
adc
hlt
sbb
mov
divl
or
movsb
inc
push
movsb
pop
sbb
dec
cwtl
pop
cmp
mov
push
outsb
inc
adc
cmp
hlt
aaa
addr16
mov
loope
rcrb
sub
pop
adc
sar
and
xchg
negb
nop
pop
sub
test
dec
lods
clc
test
pop
lods
aaa
fwait
popf
mulb
cld
lcall
pop
stc
push
ret
leave
jne
push
sub
in
adc
enter
push
in
ds
ror
dec
mov
ret
inc
inc
push
sbb
sbb
insb
xchg
and
in
xor
mov
pushf
and
cltd
int
cmp
cmp
mov
ljmp
jo
inc
add
loop
xor
or
lea
rcll
fucomp
mov
xor
sub
cmp
or
and
fdivrl
jp
xchg
cmp
push
lret
mov
sbb
mov
xchg
arpl
test
fldt
push
insb
or
add
mov
cli
rclb
add
mov
into
push
xchg
pop
test
cmp
mov
pushf
and
xlat
mov
cmp
mov
inc
insl
mov
sub
or
jno
sbb
out
mov
aam
or
push
rolb
popa
sbb
push
ds
adc
loope
bound
dec
fmuls
xchg
xor
mov
fiaddl
sbb
push
outsl
cmpsb
mov
and
xchg
xlat
fstl
mov
enter
mov
xchg
fnstenv
xchg
mov
and
aad
sbb
lods
cmpsb
inc
sub
shlb
aas
insw
std
xor
bound
and
setnp
int3
imul
sbb
pushf
scas
fists
inc
fidivrs
inc
sub
jle
xlat
jae
ds
pushf
enter
stos
sbb
movsl
xor
add
sbb
adcl
jo
or
fnstsw
clc
push
clc
movsl
mov
sbb
in
jl
out
and
hlt
pop
add
xor
pop
mov
pop
push
sahf
inc
xor
add
enter
adc
lcall
cmp
bound
adc
insl
push
in
xchg
adc
rcll
xchg
imulb
es
test
push
push
lds
aas
jecxz
xchg
lea
or
scas
sbb
mov
push
jmp
shrl
fwait
in
push
sub
jo
cmp
sub
ja
leave
jl
test
outsl
sub
movsb
sub
push
or
and
in
push
loope
test
or
daa
out
add
pop
rclb
inc
je
call
daa
mov
daa
mov
inc
mov
push
pop
pushf
popf
testl
lcall
fildll
push
mov
sbb
outsb
sub
xchg
pushf
cwtl
js,pt
es
out
lods
and
rolb
sbb
jl
fildl
data16
pusha
shrb
add
out
scas
mov
xor
xchg
ficomps
test
aam
jns
not
mov
jg
adc
cmp
out
stc
aas
shll
inc
sbb
mov
sahf
js
rorb
mov
dec
out
fsubrp
push
insb
jbe
push
adc
div
dec
jg
xchg
push
test
sbb
xchg
lahf
lock
stos
sub
adc
jl
in
push
rcr
mov
fldenv
int3
mov
xchg
sub
mov
sbb
mov
test
adc
test
push
sub
jnp
or
out
sbb
xor
lret
cwtl
sbb
ret
arpl
push
mov
imul
xchg
inc
cmp
sbb
jge
cmp
dec
push
repz
mov
imul
iret
mov
sbb
cs
ss
aaa
xchg
scas
adc
mov
aas
fistps
movsb
or
cmc
jae
aad
push
push
mov
push
stc
addr16
clc
outsl
mov
arpl
xlat
mov
enter
pop
cmp
es
in
and
shlb
xor
or
adc
mov
repnz
out
cmc
inc
ds
js
out
jg,pn
ja
xchg
and
lock
pop
or
je
and
loop
jae
sub
out
push
pop
icebp
out
cmp
dec
test
cmp
shlb
dec
dec
push
sub
cmp
sbb
jne
sti
inc
call
dec
rcll
dec
mov
sti
push
mov
mov
cld
adc
cli
aaa
clc
mov
jb
fbstp
dec
mov
mov
std
cmc
add
or
adc
cli
aaa
repz
cmp
jbe
add
insl
inc
js
aas
neg
cmp
inc
dec
ficoms
sti
add
hlt
mov
clc
add
and
mulb
cmp
push
mov
jnp
jns
and
icebp
icebp
pop
sub
sub
and
push
inc
dec
or
xchg
add
and
xchg
mov
rcr
adc
out
cmp
sbb
scas
movsb
xor
out
jns
jno
or
mov
and
jno
bound
adc
xchg
sahf
adc
xchg
cmp
inc
mov
cmp
cld
inc
es
daa
cmp
pushf
adc
ss
fiadds
imul
inc
lcall
int3
xor
xchg
xor
stos
psllw
arpl
or
jl
cmpb
sarl
fimuls
daa
sbb
adc
sub
mov
les
inc
cmp
lret
movsb
ror
jl
mov
outsb
xor
sub
in
jno
jbe
inc
ret
and
jg
add
pushf
outsb
or
pusha
enter
clc
ret
pop
mov
rorl
test
bound
cmpsl
pop
mov
mov
push
xor
inc
fisttpll
mov
xchg
mov
les
jno
imul
pop
in
fisttps
jns
pop
and
lahf
push
add
mov
dec
test
and
push
sub
push
imul
or
xor
sbb
sub
aad
mov
sbb
lret
mulb
jne
cmp
adc
aam
sub
and
xchg
mov
mov
mov
jecxz
ret
fisubrs
leave
int3
dec
insb
push
cmp
adc
repz
daa
out
cmpsl
rcrb
jle
xchg
push
inc
fcomi
or
and
adc
imul
out
stos
inc
adc
mov
sub
popa
rcr
xchg
mov
lock
cmp
pop
ds
call
inc
mov
scas
rorb
lods
cvtdq2ps
adc
in
imul
xchg
xor
sub
inc
cmp
sbb
sbb
lock
mov
fdivrl
rorb
xchg
stos
mov
push
sbb
bound
cmp
jns
jae
cwtl
mov
out
addb
int
jne
jg
ds
js
cmp
and
jne
inc
push
icebp
mov
movsb
push
ficoms
mov
fdivs
push
and
fucomip
les
lahf
gs
cmpsb
das
int3
inc
inc
rolb
and
cs
rorl
call
and
cmp
pop
xor
ss
jmp
or
inc
scas
loop
nop
loope
ds
aas
cmovl
push
inc
scas
test
and
xchg
xchg
adc
sbb
addb
push
int
sub
test
jl
or
pop
push
fisubrl
cmc
xor
jle
push
addr16
iret
jmp
mov
ljmp
leave
add
mov
mov
xchg
or
repz
sbb
or
fisubrs
adc
mov
pop
mov
dec
push
cmp
call
cltd
shll
loop
mov
shr
iret
sub
mov
pop
push
add
dec
inc
ffreep
fcom
loop
push
in
add
ja
pop
mov
imul
imul
test
in
lods
pop
iret
out
movsb
pop
nop
rcrl
bts
xor
mov
mov
les
aas
jmp
dec
test
lret
pop
subb
addr16
lcall
pop
dec
lods
push
pop
pop
xchg
pop
sub
push
xchg
jmp
push
adc
mov
cli
dec
inc
and
ret
mov
iret
cwtl
mov
outsb
mov
out
call
jnp
jg
inc
int3
cmpsl
xchg
cmp
sbbl
popf
pop
loopne
or
lock
mov
test
dec
mov
cwtl
in
adc
mov
and
and
aam
adc
jb
lahf
cs
out
test
jmp
add
loope
pop
dec
adc
mov
test
cmp
sub
aam
fcoms
loop
mov
add
sub
jp
adc
fcoms
dec
mov
adc
mov
add
sub
or
into
xchg
aad
push
dec
pop
fnstcw
lret
shrb
out
or
push
lods
sub
xchg
push
mov
xor
sbb
inc
sub
outsb
test
adc
and
sub
daa
push
shlb
pop
inc
mov
mov
inc
incl
mov
popf
aam
inc
ss
clc
and
push
add
ds
lods
js
push
in
int3
mov
movsl
test
mov
xor
push
sarl
test
add
ljmpw
cltd
xchg
icebp
push
stc
add
sub
les
cli
cwtl
les
mov
outsl
lock
cmp
push
or
ret
pop
aad
leave
xchg
fisubs
fdivrs
mov
enter
dec
aam
pop
sbb
mov
mov
adc
xor
call
mov
fcom
sub
xchg
mov
jle
xchg
sub
sub
dec
mov
sub
ret
pop
pop
mov
ret
enter
lock
xchg
int
in
repnz
inc
mov
adc
dec
push
ds
jp
add
cmp
lcall
xchg
adc
into
call
aaa
push
xchg
inc
mov
dec
shl
insl
jbe
cmp
sbb
mov
outsb
ret
cmc
daa
aaa
cs
aad
hlt
in
loope
icebp
pop
mov
xchg
aad
jnp
aaa
int
aas
mov
push
adc
dec
scas
sub
decb
dec
and
and
cwtl
add
adc
jne
inc
jo
cld
pop
mov
clc
arpl
out
mov
push
cwtl
repnz
xchg
inc
in
inc
push
scas
lock
imul
jmp
mov
jmp
xor
out
mov
lcall
cmp
movsb
cmpsl
or
jae
repz
jl
cmp
adc
push
aad
sub
out
out
cmpsl
xchg
enter
and
cs
mov
nop
hlt
or
lods
cmp
shrl
jbe
push
mov
mov
cs
imul
mov
cmp
and
or
hlt
and
pminub
pushf
cmp
scas
fnsave
push
jecxz
pop
call
stos
fldt
pushf
cmp
test
out
aad
cmp
xchg
inc
or
movsl
test
inc
push
xor
lret
mov
add
and
test
cmpsl
xchg
adc
lahf
nop
pop
mov
pushf
rcll
bound
ss
dec
hlt
adc
outsb
mov
mov
imul
mov
in
test
push
in
mov
dec
js
push
cmc
xchg
xor
xchg
push
jmp
sub
out
sbb
add
adc
jl
push
mov
dec
test
xchg
out
and
jg
clc
fs
sub
pop
popa
jp
std
shll
and
fildll
xor
push
xlat
push
ds
lahf
dec
adc
cltd
js
inc
rclb
stos
out
sbb
jno
adc
hlt
jb
stos
cs
push
shll
jno
dec
hlt
inc
cmp
pop
js
in
adc
mov
fisttpl
xor
sub
mov
adc
rol
nop
js
dec
sub
add
cmp
fs
ss
ficoml
fdivrp
mov
rclb
jnp
mov
addr16
into
sub
mov
je
jb
jae
cmpsl
add
cmp
scas
dec
stos
cli
adc
ja
rorb
jmp
add
dec
xlat
and
xchg
test
mov
sbbl
pop
std
lds
push
lcall
jno
out
sbb
stos
inc
mov
sbb
cs
inc
out
incl
cmp
lret
and
push
xchg
mov
aam
es
aas
mov
pop
gs
out
insl
mov
test
shl
data16
xor
cld
lods
and
addb
ss
dec
cmp
xchg
dec
jo
mov
insl
ss
sbb
popf
movsb
sub
pusha
jmp
in
jno
aaa
insb
add
sahf
push
mov
pop
xchg
insb
int3
cmp
arpl
iret
mov
inc
leave
dec
mov
shll
dec
mov
jmp
sub
pop
mov
aam
push
and
xor
dec
add
lret
insb
jle
cmpsb
cmp
mov
andb
xchg
lea
sbb
sub
shll
inc
sub
cmp
repnz
lret
jl
js
fs
in
mov
mov
sbb
jge
cli
fsts
jo
sti
add
sub
inc
xor
pop
std
inc
adc
pop
mov
mull
imul
repnz
mov
es
nop
int
add
cmp
inc
bound
mov
xchg
sbb
sbb
xchg
scas
clc
jne
test
add
movsb
xchg
test
jecxz
out
in
pop
lret
pop
call
dec
popf
movsl
jnp
adc
jmp
adc
inc
jle
and
data16
sub
add
es
xlat
clc
pop
dec
pop
daa
cmc
xchg
leave
daa
loopne
loope
push
push
mov
fdivr
pusha
cmpsb
pop
add
inc
jne
jbe
dec
and
ljmp
jno
cs
xchg
fucomi
fisttps
or
cmp
insb
mov
flds
lcall
jmp
cmp
push
lahf
push
mov
xchg
jno
mov
pushf
ror
ljmp
pop
in
inc
xor
xchg
jbe
insb
movl
frstor
test
test
or
mov
jns
stc
dec
pop
mov
jbe
enter
repnz
fcoml
mov
xor
test
jbe
leave
xchg
icebp
aad
add
and
xor
clc
inc
push
data16
hlt
inc
or
hlt
xor
loope
mov
dec
sti
sarb
sarl
lcall
xor
clc
fidivrs
add
sub
scas
and
cmp
mov
xlat
shr
inc
pop
adc
rcrl
lea
mov
jbe
lret
imul
pop
es
test
jnp
jne
inc
mov
test
cmpl
sub
xchg
dec
mov
sub
into
add
jge
jo
sbb
jmp
in
sub
adc
data16
test
xchg
xchg
mov
sbb
lods
neg
jne
sbb
mov
adc
jno
sub
cmc
arpl
push
jo
sub
fwait
push
fimuls
sbb
lods
sbb
jne
xor
in
dec
loope
sbb
add
fldcw
jnp
addr16
dec
jno
lea
mov
shlb
js
cmp
das
sti
xor
and
sbb
or
push
inc
jnp
lret
test
daa
lahf
fcmovne
daa
mov
je
outsb
in
popf
xchg
sbbl
sub
fsubrs
xlat
xchg
jge
push
and
shl
xchg
movsl
adc
mov
call
mov
sub
or
and
les
lds
mov
sbb
mov
xor
sbb
cmp
sub
xchg
aaa
sti
sub
imul
push
in
push
cltd
cwtl
lret
lock
jecxz
or
addl
jne
cmp
mov
divl
and
shl
test
rclb
fs
jb
add
adc
push
pop
repnz
xchg
movq
loope
andl
sbb
inc
push
mov
aas
push
cmp
rcrl
sbb
and
in
xor
sbb
mov
sti
mov
and
cmp
fldt
dec
add
ss
lds
adc
hlt
pop
arpl
test
shl
leave
jb
repz
push
or
mov
pop
into
test
mov
xchg
mov
into
dec
movzwl
push
mov
lds
cmc
test
lret
or
call
xor
pushf
xor
icebp
add
jnp
pop
into
sbb
stos
aad
inc
fs
in
lock
jb
cmc
sbb
sub
xor
ljmp
xor
inc
hlt
lock
dec
dec
test
cmp
cmp
div
bnd
lock
push
or
jns
mov
repnz
sub
dec
es
adc
jl
mov
cmpsl
lret
int3
xorb
dec
dec
std
popf
mov
push
adc
fstps
or
cmp
fcoms
inc
jmp
dec
push
popa
lods
sbb
sub
stc
shrb
lds
inc
stos
fs
cwtl
mov
inc
movsl
inc
jb
leave
fdivrl
push
rorl
push
jae
into
jbe
or
iret
mov
sbb
adc
and
test
pop
mov
sub
out
push
lea
or
jno
or
mov
std
pop
clc
mov
xlat
dec
mov
out
mov
push
outsl
cmp
xor
mov
mov
fistpll
mov
repnz
dec
inc
sbb
lods
mov
rorb
nop
add
push
mov
inc
fmull
daa
cmc
fnsave
xor
dec
mov
lea
cmc
inc
mov
popf
repnz
dec
test
jl
and
push
cmp
aad
mov
ljmp
in
movsb
nop
idiv
xchg
push
aas
mov
sbb
mulb
mov
jno
imul
stos
aam
aaa
rcrl
outsb
push
repnz
stos
rcrl
out
mov
jecxz
pushf
notl
jo
ficompl
dec
bswap
push
dec
jg
and
shlb
add
sub
xchg
xor
mov
int
hlt
mov
fisubrs
xchg
into
sub
int3
and
push
clc
inc
popa
popa
dec
inc
xor
xor
movsl
dec
leave
daa
aaa
and
jae
cli
test
jecxz
pop
and
or
push
or
es
pop
arpl
mov
loope
mov
or
cs
cmp
sub
rorb
mov
or
cld
push
dec
test
push
fcmovu
jb
and
test
mov
xor
push
dec
mov
negb
dec
xchg
fldl
mov
adc
repnz
ret
test
or
fisubs
lret
xchg
mov
sub
cli
mov
dec
add
dec
pop
popa
out
stos
xchg
xchg
sub
inc
xor
mov
into
xchg
adc
and
jnp
mov
adcb
mov
stos
mov
stos
cmpsb
pop
stos
mov
sub
add
mov
aad
icebp
daa
sbb
outsl
sub
loop
jbe
fistl
lret
sub
dec
pushf
dec
push
test
jmp
js
out
test
jnp
cmc
out
cld
flds
into
test
lds
pop
scas
data16
jp
mov
pushl
push
mull
xor
ret
sub
outsb
mov
lahf
jge
mov
mulb
stos
jns
mov
jns
subl
or
mov
inc
into
cmp
mov
mov
js
ret
sbb
js
mov
mov
in
mov
or
jg
int
mov
aaa
sub
add
cmpsl
rclb
ds
call
xchg
mov
fists
fisttpll
aas
je
dec
mov
inc
cli
jns
push
in
push
sub
and
and
fisubrl
lods
push
push
push
in
arpl
cmp
push
or
negb
mov
roll
dec
jle
int
mov
enter
cmc
in
add
fstps
and
rclb
aad
daa
fcomp
pop
icebp
or
sub
mov
ds
or
imul
cmp
adc
xlat
shlb
test
mov
pop
mov
jb
add
jno
xor
popf
scas
jle
sub
dec
cmpb
mov
cmp
test
or
dec
sub
mov
js
in
jg
xchg
pop
clc
leave
lcall
lcall
cli
fs
sub
adc
mov
push
movsl
int3
mov
add
mov
pop
jmp
sbbb
mov
js
es
bound
xchg
lahf
mov
daa
xchg
pushf
sbb
pop
int
jmp
and
mov
aas
shlb
lds
xor
mov
pop
call
xor
sbb
mov
out
aad
ret
cld
xchg
inc
sub
adc
addr16
sbb
sbb
adc
xor
mov
dec
inc
push
movsl
inc
outsb
repnz
insl
push
add
jle
aam
push
jg
mov
stos
int3
or
dec
stc
ljmp
shll
rcr
dec
fs
js
sub
popf
pop
lock
pop
mov
cmp
mov
mov
sub
aam
xchg
rclb
cmp
subl
lods
add
inc
sti
xchg
or
cmpsl
mov
and
xor
fsub
inc
cltd
sti
inc
loopne
add
and
mov
in
pushf
mov
jne
cmpsl
testl
sub
push
jl
insl
aas
sahf
dec
push
out
sub
rcrl
fsubr
iret
add
pop
popf
mov
push
outsl
cmp
fisubs
jmp
push
dec
jp
negb
test
and
fwait
jno
jmp
jns
xchg
xchg
sbb
out
pop
push
push
aas
adc
xor
repz
xchg
dec
stc
in
cld
adc
dec
enter
paddusw
push
and
or
inc
jl
insb
mov
sbb
sub
cmp
push
jp
xchg
mov
adc
scas
xor
dec
dec
jle
in
and
push
outsb
cmp
dec
inc
adc
sarl
subl
mul
lods
xor
mov
cmp
add
pushf
pop
mov
jbe
xchg
fwait
mov
lret
icebp
and
push
xlat
xchg
rolb
cld
sbb
mov
movsb
lds
lea
mov
leave
mov
aas
push
inc
push
push
hlt
sub
popl
into
dec
adc
inc
inc
pushf
pop
sub
dec
xor
pop
add
push
mov
dec
fwait
mov
cmp
mov
xor
pop
adc
jnp
inc
outsl
insb
cmp
cmpsl
mov
push
xacquire
adc
ja
inc
adc
aaa
mov
pop
jmp
repnz
mov
movsb
pop
inc
lret
adc
mov
push
es
fstpl
fwait
cltd
es
mov
test
sti
push
mov
jmp
clc
adc
mov
hlt
sub
pushf
inc
mov
lods
and
or
out
adc
lods
dec
adc
into
movsl
add
cmp
jnp
imul
jbe
or
test
xor
popa
mov
push
jg
mov
mov
addr16
loope
jmp
scas
mov
imul
and
leave
dec
mov
fs
jnp
xchg
cs
in
dec
jnp
push
scas
ficomps
dec
pop
int
dec
dec
pop
sub
shll
add
mov
mov
mov
shl
emms
imul
xchg
and
push
es
aam
in
mov
adc
jmp
scas
and
pop
mov
pop
push
mov
inc
sbb
xchg
ret
xor
pop
lock
xchg
sahf
in
inc
movsl
sbb
and
pop
or
cmp
mov
or
arpl
shrb
loop
sti
bound
adc
std
xor
pop
mov
add
jg
jmp
pushf
cmp
outsb
sti
lock
sub
jb
popa
mov
cmp
sti
add
in
iret
outsb
test
call
and
adc
fidivrl
out
nop
in
xchg
outsb
aam
fisubrs
pop
or
cmp
pusha
addr16
in
add
xor
push
sub
push
add
mov
mov
mov
push
aad
mov
test
std
add
push
out
inc
mov
aad
outsl
insb
popa
call
aas
add
inc
cmpsb
cmp
mov
roll
popf
addr16
ss
cmp
dec
xor
sub
push
and
cmp
dec
pop
lock
sbb
sub
xor
jae
adcb
mov
xchg
xlat
adc
xor
sbb
vmovlps
ret
add
scas
popf
mov
dec
hlt
hlt
lret
dec
push
in
mov
orb
push
mov
mov
jb
inc
mov
icebp
insb
popa
inc
fldcw
test
stc
mov
pop
pop
fwait
loopne
imul
sahf
mov
cmp
cltd
into
cmp
and
pushf
push
mov
cs
enter
shrl
mov
imul
ds
mov
test
lds
pop
and
fwait
adc
cmp
cmp
xchg
or
es
mov
bound
dec
fadd
push
xor
lea
lret
xchg
push
insb
outsl
push
mov
xchg
adc
xor
and
or
pop
sbb
mov
arpl
cmp
pop
adc
fimull
mov
pushl
ljmp
cmpsl
cmpsl
sub
ja
testl
scas
add
jns
mov
add
jmp
sub
repnz
jge
ficomps
mov
js
es
jg
and
push
int3
adc
mov
pop
jmp
cwtl
xor
mov
mov
dec
data16
sbb
cmp
push
mov
ds
fs
imul
lods
push
push
jno
pop
mov
arpl
out
orb
mov
or
loop
xor
divb
jns
dec
or
xchg
cld
mov
add
imul
in
fbstp
inc
adc
pop
mov
ljmp
sbb
and
ja
scas
or
aam
and
lock
dec
push
push
jmp
dec
rclb
or
movsl
sbb
in
ret
sbbb
js
pop
dec
push
enter
lods
fwait
aas
sbb
movsl
mov
fstps
push
test
lods
mov
and
adc
jne
aas
xchg
push
insb
jmp
fiadds
scas
call
and
inc
icebp
scas
and
pushf
sbb
ja
loope
mov
xor
mov
mov
jnp
adc
mov
mov
inc
mov
mov
loop
repz
pop
outsb
inc
or
or
arpl
xchg
jecxz
mov
xchg
jne
push
out
rcll
cmc
lods
test
repnz
shlb
hlt
testl
pushf
cmp
dec
jge
adc
lahf
scas
dec
cs
mov
jae
cwtl
mov
cmp
ret
aas
xchg
pop
mov
cwtl
mov
push
pop
icebp
movzwl
sub
jnp
cmp
pop
notb
dec
and
cmp
enter
outsb
popf
aas
loope
movsl
mov
and
lea
jno
aad
jae
jae
loop
lods
scas
push
mov
inc
mov
cmpsl
mov
push
pop
jne
xor
pop
push
sbb
notl
and
lods
and
sub
jae
add
andb
mov
inc
pop
loop
sarb
mov
xor
adc
adc
aad
cmp
imul
out
sub
pop
addr16
out
xchg
jae
imul
rcr
pusha
ret
lret
sbb
and
int3
sub
lods
xchg
sbb
clc
sbbb
outsl
jae
mov
jnp
cmp
cmpsb
jmp
lds
jo
dec
mov
adc
push
jae
cwtl
mov
adc
dec
push
cmp
bound
sbb
cmp
or
pusha
mulb
add
out
dec
outsb
push
pop
or
jbe
mov
xchg
jp
rcrb
adc
test
jns
xchg
and
sysexit
arpl
in
fwait
adc
sub
push
pop
neg
inc
repz
arpl
mov
adc
aas
das
std
mov
adc
push
pusha
cwtl
adc
dec
mov
lahf
outsb
mov
shlb
sub
inc
ror
sti
sbb
js
scas
lret
fs
inc
lods
inc
sbb
sub
test
pop
and
aam
cld
ret
fwait
and
and
mov
inc
sahf
mov
mov
push
stos
outsb
mov
push
daa
pop
arpl
insl
scas
push
cmpsl
ficomps
mov
sbb
xor
mov
mov
bnd
mov
ss
pop
aaa
xchg
mov
rol
iret
adc
in
test
pushf
xor
add
insb
xor
mov
hlt
sub
shlb
mov
add
sub
dec
rolb
mov
inc
fiadds
stos
inc
pop
int3
add
in
test
dec
and
sbb
test
into
push
sub
xchg
rorb
rclb
mov
sarb
and
jmp
jne
xchg
divb
pop
adc
inc
xchg
insb
adc
sbb
insb
sub
scas
mov
int
cmpsb
inc
addr16
push
mov
mov
push
lods
adc
mov
cmpsl
xchg
lods
pop
insb
and
into
insb
fisubrs
xor
out
add
int3
mov
pushf
pop
mov
loope
cld
push
cmpsl
ljmp
pushf
aaa
imul
mov
add
push
sbb
shl
mov
iret
cmpsl
mov
cwtl
js
and
inc
nop
push
inc
sub
les
jmp
repnz
pushf
sbb
andl
sbb
nop
fdivs
ret
std
mov
dec
lret
dec
jg
push
orl
cmp
cmc
test
mov
mov
adc
and
stc
fcmovbe
ja
stos
xchg
and
jmp
jns
cmp
fimull
es
cmp
pushf
jp
sbb
outsb
incl
stc
dec
fwait
adc
fcmovne
sub
in
aas
add
jmp
repnz
lret
push
inc
rclb
mov
test
jno
add
imul
bound
push
dec
les
outsl
push
adc
sti
mov
fisubs
jno
cmpsb
add
mov
cmc
addr16
je
fimull
rcrb
inc
inc
and
pop
imul
test
dec
dec
add
sbb
out
fistpl
inc
jne
jb
mov
adc
fcomps
dec
sbb
cmp
imul
roll
push
jo
sti
sub
jno
fsubrl
jae
pop
es
adc
in
icebp
adc
in
stos
fsubl
jmp
or
ret
bound
insb
or
mov
test
cli
clc
gs
sub
sbb
lea
nop
cmp
mov
jle
cli
xor
outsl
aad
insl
leave
daa
jg
push
nop
mov
fimuls
subb
mov
adc
ret
jl
mov
push
mov
iret
shl
jge
enter
or
pop
pop
cwtl
loope
sub
xchg
or
mov
imul
mov
add
mov
fisubrl
cwtl
or
cmc
or
inc
pop
rolb
mov
cltd
mov
jg
xchg
cmp
cld
stos
inc
pop
sahf
adcl
mov
js
push
add
arpl
lock
jge
cli
inc
ljmp
jmp
and
push
jge
inc
sbbb
sub
sub
lcall
hlt
add
push
nop
test
adc
std
imul
mov
outsb
inc
lock
fcompl
sbb
mov
dec
cmp
pop
cs
push
gs
imul
test
lcall
out
push
cltd
out
sbb
fs
and
push
inc
mov
ja
push
jo
iret
add
inc
cmp
add
add
pop
sub
hlt
push
lds
and
jne
subl
cmpsb
and
dec
push
mov
inc
js
in
or
inc
adc
xor
pop
inc
xlat
cmpsl
stos
aam
xor
rorb
add
cmc
fidivrs
mov
pop
insl
inc
cwtl
inc
pop
adc
andl
negl
mov
fdivrs
mov
sbb
sarb
lods
jp
mov
xchg
bound
cld
inc
out
cmp
aas
sub
mov
dec
icebp
mov
orb
cwtl
push
push
movb
inc
or
cli
scas
test
jge
mov
scas
push
cmc
mov
mov
cmc
fdivl
scas
enter
xchg
js
cmpsb
adcb
hlt
in
or
push
jns
inc
xlat
mov
and
lea
ret
into
lods
rolb
jp
jmp
jge
insb
cmp
sub
mov
sub
mov
add
push
stc
lcall
sbb
pop
arpl
xchg
or
testb
out
mov
sub
dec
pop
sub
int
ret
cli
insl
or
cmp
sub
or
adc
das
mov
insb
into
insb
sub
out
pop
lcall
adc
mov
adc
xor
pop
aas
lcall
or
insb
sbb
adc
or
aam
pop
fimuls
leave
jbe
lods
mov
lret
test
mov
insl
adc
and
push
cmp
xchg
je
mov
jle
jns
iret
mov
mov
out
roll
test
aas
push
sahf
dec
mov
cltd
movsb
arpl
iret
xchg
add
push
xchg
ja
neg
lret
mov
and
out
or
out
pop
cmpsb
sbb
fiaddl
inc
in
xchg
cmpl
test
push
mov
shll
lds
sub
aas
mov
outsl
jp
imul
shrl
mov
testl
iret
js
lods
or
lcall
fsubp
ss
iret
sbb
mov
ret
jmp
fwait
sub
ljmp
inc
je
inc
inc
push
hlt
enter
inc
xchg
sub
and
les
and
jmp
lds
adc
test
add
in
outsb
fiadds
add
pop
int
and
hlt
mov
iret
add
test
insl
hlt
int
insl
leave
cmpsb
adc
sarl
ja
push
cmp
sarb
imul
lcall
test
push
in
ficomps
push
dec
call
adc
mov
mov
adc
xor
inc
nop
dec
and
je
jg
cltd
cmp
pop
shlb
leave
mov
cmp
mov
cli
scas
mov
leave
aad
inc
test
in
pop
loopne
inc
dec
shrl
or
add
mov
jle
ret
jp
pop
dec
inc
push
cmp
mov
mov
push
mov
in
jmp
pop
xchg
enter
pushf
mov
lret
and
aam
mov
clc
jl
aam
ficoms
shlb
jae
jge
push
adc
inc
shl
push
je
ret
jge
sub
and
add
bnd
push
rcll
pop
daa
push
sbb
rclb
clc
inc
and
and
fbld
or
sub
lret
fisubs
outsb
push
test
pushf
ja
xchg
fdivrl
clc
mov
mov
jb
daa
pop
mov
inc
jp
shll
xchg
or
loopne
cwtl
xchg
add
in
jne
mov
adc
and
lret
sbb
adc
dec
outsb
add
ds
es
xor
stos
data16
add
add
cli
ret
shlb
mov
jmp
dec
jge
xchg
pop
loopne
sub
repnz
mov
adc
bound
jg
sbb
sub
insl
or
push
bound
popf
ret
mov
outsb
adc
popl
add
inc
shrl
xor
pop
inc
test
adc
je
jne
pop
pushf
sub
aam
mov
sahf
inc
jl
mov
scas
sbb
lods
icebp
dec
mov
jno
fsub
popf
xchg
pusha
mov
hlt
aas
cwtl
inc
jmp
dec
adc
jecxz
pop
movsl
shl
insb
xorl
int
inc
push
mov
add
add
pop
test
adc
insl
pusha
je
and
mov
daa
ds
das
test
pop
shl
mov
rolb
pop
xchg
test
dec
fsub
push
xchg
mov
aas
and
scas
scas
cwtl
ret
popl
add
fists
jmp
sbb
or
popl
mov
cmp
pop
push
stos
pushf
cmp
pop
and
leave
push
fstpl
nop
add
or
aas
push
and
push
mov
data16
stos
cs
pop
pop
fcmovnu
sbb
pop
dec
push
cmp
cwtl
lret
sbb
lock
add
add
push
push
out
aaa
adc
fisubrs
addl
loopne
movsl
and
push
outsl
sbb
cmpsb
into
xchg
mov
ret
shl
mov
imul
push
cltd
addl
or
xchg
or
outsl
sbb
lahf
fdivr
jl
insl
mov
pop
sub
mov
add
mov
push
mov
rorl
es
test
pop
adc
add
add
out
sbb
arpl
dec
test
mov
inc
into
jmp
mov
ja
jge
mov
sub
push
outsb
pop
pop
int
fwait
movsl
sub
pop
push
inc
ljmp
xchg
jbe
std
adc
push
adc
cmp
mov
fistpll
rorl
push
add
in
icebp
mov
popa
js,pn
pop
dec
mov
aad
cli
enter
in
adc
shll
sbb
mov
jge
and
cmp
js
mov
pop
scas
mov
adcb
ljmp
mov
dec
pop
aad
dec
cmpsb
out
hlt
insl
insb
cmpsl
data16
inc
jb
loope
sub
aas
es
push
inc
movsb
addb
rcr
push
add
push
mov
push
data16
xor
or
or
push
outsb
rorl
notb
imul
jno
aas
scas
cmp
out
dec
sub
mov
out
mov
fdivrp
sub
push
jno
mov
jecxz
lcall
pop
push
push
stos
jo
aam
dec
insb
subb
mov
lea
ficomps
sbb
dec
push
xor
fstps
into
push
xchg
imul
shl
shl
loopne
xor
imull
stos
xchg
pusha
mov
cmpsb
cltd
mov
scas
push
mov
addb
cwtl
jge
pop
mov
outsl
inc
pop
cmc
inc
js
inc
mov
xchg
sub
arpl
loop
or
pop
out
pop
push
and
inc
aaa
loopne
adc
outsl
adc
repz
mov
filds
jb
adc
stc
cmp
cli
fisubl
cmc
jl
adc
sbb
and
mov
push
jbe
sbb
sub
ret
inc
push
mov
test
add
push
mov
out
scas
into
clc
sti
mov
xor
fisttps
adc
dec
rorl
mov
test
mov
lock
mov
inc
icebp
xchg
js
adc
mov
icebp
outsl
or
out
les
inc
inc
dec
xor
push
sbb
jae
outsl
xchg
js
mov
sub
test
scas
dec
xor
xorb
sbb
cmp
cmp
aam
pop
ja
and
leave
cs
or
ljmp
cmp
jle
std
nop
mov
add
lea
outsl
sbb
inc
repz
adc
jnp
pop
or
rcl
pop
cmp
mov
test
repz
xchg
and
sub
into
lret
pop
ja
mov
out
xchg
scas
jmp
cmpl
arpl
sub
fisttpl
shll
push
jmp
xchg
sbbb
and
dec
shl
mov
cltd
mov
mov
int3
cld
ud2
call
mov
pop
iret
scas
imul
movsb
mov
scas
push
jb
mov
pop
mov
ja
and
test
add
arpl
sarl
test
addr16
lods
ja
insb
inc
mov
xchg
or
mov
add
arpl
lds
std
cmp
mov
jle
pop
sbb
xchg
sbb
fists
jp
sbb
mov
idiv
fcompl
stos
movsb
mov
icebp
push
int3
inc
pop
or
mov
add
pop
cmpsl
xchg
sbb
jo
arpl
out
jle
ljmp
dec
sub
mov
jge
mov
xor
inc
iret
pop
adc
sub
sbb
ja
ds
jp
stos
rcrb
cmp
stos
add
jno
jmp
xchg
cwtl
cmc
aas
loope
ljmp
inc
xor
das
nop
loop
jg
andl
cmc
ljmp
stc
cmpsb
outsl
sub
sbb
flds
push
pop
popa
std
fistpll
mov
filds
insl
movsl
xlat
sub
or
mov
addr16
xchg
fbstp
mov
sub
pop
test
daa
scas
sub
imul
mov
cmp
cmc
mov
push
add
cmc
outsb
mull
xor
notb
jmp
roll
xchg
leave
into
stos
sahf
jnp
mov
test
dec
pop
jmp
adc
hlt
dec
pop
sub
pop
inc
push
or
scas
cmp
bound
pop
mov
xor
and
jge
dec
je
or
jae
inc
fimuls
jnp
negb
pop
std
mov
adc
mov
xor
jg
inc
and
adc
mov
movsl
xchg
int3
sbb
mul
jl
mov
lea
sbb
jge
stos
inc
pop
das
mov
hlt
jno
mov
xlat
insb
dec
and
or
pop
xchg
add
xor
popf
sub
push
add
das
bound
mov
sbb
add
inc
mov
cmc
push
jae
sti
daa
inc
popa
stos
dec
cwtl
mov
inc
cmpsl
push
jo
mov
mov
cmp
andl
add
fsubrp
fwait
pop
sub
xor
into
sbbl
fsubrs
call
arpl
cld
rorl
mov
mov
outsl
mov
stos
rorb
sahf
add
test
lahf
push
scas
push
fucom
mov
jecxz
jnp
outsb
lock
negb
cmp
daa
mov
iret
or
push
inc
xchg
xchg
out
clc
gs
pop
int3
xchg
mov
shrb
jmp
pushaw
inc
stos
popf
sahf
stc
aas
mov
icebp
sub
xor
pushf
stc
sbb
dec
xchg
xor
push
jne
pop
xor
js
and
testb
push
fisttps
popf
jae
daa
inc
pop
pop
inc
inc
mov
pop
out
pusha
imul
jl
xor
mov
mov
cmova
jbe
out
cmp
aaa
push
or
nop
enter
fidivrl
mov
aaa
pop
dec
std
jne
pop
repnz
push
inc
cltd
xchg
jb
fwait
xor
or
or
icebp
xchg
mov
cwtl
sub
jae
dec
adc
xor
int3
cltd
mov
sub
sbb
aam
loope
repz
insl
dec
inc
pop
lds
test
adc
jmp
adc
push
out
scas
inc
int3
push
mov
shrl
leave
mov
mov
out
aad
roll
movsb
push
in
mov
lret
xor
sti
sahf
add
dec
out
out
scas
xor
lods
and
sub
jl
xor
out
stos
xchg
xor
jmp
pop
xor
shr
lcall
shrl
xor
pop
push
jp
pop
mov
nop
scas
loop
adc
xchg
push
int
out
fsubrl
fst
mov
fistpll
pusha
mov
jle
jns
mov
jecxz
imul
cs
xchg
push
pop
xor
and
repz
xchg
lret
cmp
mov
in
scas
nop
push
testb
dec
xchg
inc
fldenv
pop
add
arpl
out
mov
xor
adc
sbb
aad
lahf
js
cmp
loop
mov
fiaddl
out
jns
in
rorl
bound
loopne
cmpsl
jbe
js
stc
into
rol
pop
enter
pop
sub
or
rclb
call
pusha
dec
pop
push
outsl
ljmp
or
or
insl
jbe
sub
outsl
xor
xchg
xchg
sub
jne
sub
pop
cmpxchg8b
sub
cmpl
rcll
stos
mov
insb
and
cs
sbb
inc
pop
inc
xchg
dec
xchg
cld
dec
or
out
adc
inc
ds
dec
movsl
std
mov
jae
fidivs
jp
dec
fs
imul
sbb
jg
mov
and
mov
pop
int
pop
cmc
les
xchg
sbb
sbb
sbb
popl
mov
gs
and
popa
dec
pop
fbstp
arpl
mov
cli
cmpsl
lret
sbb
pop
movsb
sbb
clc
inc
mov
push
jb
ja
cmp
pop
push
xlat
lcall
nop
popf
jbe
movsl
push
inc
push
xchg
ret
jb
lahf
inc
rep
stos
and
scas
lock
adc
xchg
xchg
sub
pop
fldcw
mov
push
push
xlat
jne
xor
rcl
xor
and
pop
push
xchg
adcb
std
pop
sbb
push
mov
jae
add
loop
scas
sbb
aam
fwait
and
out
push
scas
ljmp
aad
and
mov
mov
fnstenv
xchg
and
jbe
cs
xchg
push
xor
les
xor
movsb
jecxz
inc
jle
inc
mov
pushl
nop
xchg
adc
lods
cli
cmpsl
jae
or
xlat
dec
sbb
inc
cmpl
inc
push
xor
inc
aad
bnd
cmp
test
pop
insb
lods
dec
add
dec
imul
pop
mov
or
mov
nop
inc
cmc
jnp
cwtl
cli
jp
leave
lock
stc
xor
lahf
dec
es
push
lods
daa
pop
mov
mov
pop
and
insl
int
push
add
inc
fstl
push
aaa
xchg
jb
mov
sbb
rolb
mov
pop
int
xor
in
imul
mov
rclb
push
sar
outsl
pop
jbe
sahf
xchg
dec
test
mov
scas
ret
jno
xchg
rolb
push
jl
repz
pop
push
sti
pusha
mov
xchg
cli
add
inc
cmp
insb
cmp
and
pusha
subb
push
lret
das
and
insb
js
inc
xor
push
popa
popa
std
xchg
and
xchg
rcr
dec
mov
outsb
sub
and
enter
lret
pop
adc
cld
test
repnz
dec
jecxz
cli
pop
mulb
std
pop
push
mov
lds
testb
js
ljmp
stos
xor
mov
push
inc
and
popf
pop
mov
mov
cs
fisttpll
div
je
mov
repnz
xor
push
arpl
int3
push
and
xchg
and
lea
jle
pop
aam
adc
jp
lods
xor
add
add
mov
xchg
jle
and
add
int3
fistpll
orl
ja
add
leave
dec
mov
stc
push
test
movsb
xor
test
adc
mov
inc
adc
cmovnp
js
arpl
inc
pop
decl
imul
imul
xor
push
hlt
loopne
mov
cmp
push
iret
test
mov
xchg
out
push
push
mov
fstl
and
das
jp
push
jl
lcall
push
mov
push
pop
adc
ficoml
jne
xchg
adc
inc
clc
loopne
inc
loop
inc
inc
in
leave
enter
lret
mov
leave
adc
mov
rcrb
idivl
test
enter
jmp
jge
pop
mov
in
inc
pushf
xchg
dec
outsl
jg
push
adc
push
adc
mov
xchg
or
jns
test
cmp
xchg
jnp
je
sub
mov
jmp
imul
iret
shll
mov
mov
clc
iret
mov
dec
adcl
or
jno
mov
mov
push
aaa
sbb
xor
fcomps
out
and
sub
cwtl
push
test
xor
jo
inc
rolb
mov
lret
pop
bound
push
mov
xchg
push
lods
shll
sahf
jge
pushf
int3
scas
lahf
sub
orl
ret
lret
sub
stos
cld
mov
pushf
push
xor
mov
das
shrl
cmp
pop
fdivr
inc
stos
jecxz
jns
fiaddl
sbb
xor
data16
fucomip
adc
push
jge
jb
call
scas
ljmp
fiadds
mov
add
js
dec
xchg
mov
test
xchg
push
scas
xor
jb
xchg
shll
sub
aad
inc
xor
inc
mov
and
or
mov
cwtl
sbb
pusha
jne
repz
and
ret
push
test
jp
mov
jne
pop
mov
pop
push
or
xchg
push
mov
mov
stos
sbb
xchg
lods
push
push
dec
or
test
insb
rcll
mov
loope
xchg
fsubrs
ds
push
adc
andb
push
jl
ja
xor
mov
popf
push
mov
pushf
add
in
cmc
cwtl
shl
sti
js
inc
out
cmc
rolb
lret
shll
xchg
mov
ja
outsb
lods
dec
push
insb
sub
mov
rcrb
sbb
jl
cmp
cld
push
add
mov
inc
out
and
pop
xchg
pop
mov
jmp
aad
mov
mov
and
cmp
rcrb
xchg
test
mov
push
js
imul
pop
sarb
enter
push
stos
add
cld
ds
lret
push
repz
cmp
mov
dec
cmpsb
insl
hlt
and
fldl
push
ljmp
xor
add
add
inc
dec
pop
in
push
mov
mov
xchg
ljmp
imul
sbb
xor
dec
gs
je
jb
sub
jae
ds
add
mov
cli
das
insl
add
ja
dec
stos
lods
jge
pop
and
pop
lahf
arpl
frstor
or
pop
lret
das
ja
push
push
int3
xor
jecxz
xor
adc
fsubs
xchg
jecxz
cmpsl
fcmovnb
dec
sbbb
dec
lods
push
and
aas
inc
cmpsl
jns
cmp
inc
jecxz
pop
sub
xchg
jp
jge
xor
in
sbb
dec
das
push
mov
and
pusha
mov
lret
je
sahf
mov
jge
jno
data16
add
and
dec
outsb
dec
adc
lret
mov
sbb
imul
cltd
shl
mov
outsb
rclb
ljmp
or
fldl2e
inc
jns
mov
jmp
rolb
mov
inc
pop
and
cmpsb
or
repz
sbb
xor
push
dec
mov
jmp
daa
fdivrl
out
mov
inc
xchg
cltd
xor
jge
iret
pop
scas
push
and
rolb
adc
sti
jle
out
mov
xchg
das
in
scas
sbb
inc
or
add
sbbb
fldenv
out
test
xchg
aad
leave
xchg
mov
subl
mov
das
mov
push
push
pop
test
jg
loop
sub
push
pop
and
mov
int3
mov
jmp
or
cwtl
test
int
jbe
test
and
ror
pusha
push
adc
mov
ja
bound
cmp
sub
sub
aas
xchg
and
cs
mov
gs
test
lea
stos
mov
jae
addr16
mov
repnz
jne
jecxz
aas
and
push
pop
jl
pop
jno
inc
push
dec
inc
add
lret
lea
add
push
lea
test
adc
das
or
cmp
inc
or
or
fadd
jg
test
and
xchg
in
mov
mov
mov
mov
out
mov
out
lret
dec
xchg
in
mul
in
xchg
aam
cmp
subb
dec
out
and
aaa
outsb
xor
mov
mov
data16
out
std
jmp
flds
iret
jp
add
cs
rclb
lcall
add
cmp
cmp
inc
dec
std
lret
lods
xor
out
fldt
ja
adcl
xchg
clc
dec
out
aam
lds
ja
mov
enter
push
pop
daa
outsb
movups
rcrl
inc
shl
popa
ljmp
inc
pop
call
int
cs
ficompl
fs
ds
fmull
sbb
dec
stos
xchg
jbe
mov
lods
and
stos
pop
fsqrt
mov
shll
imul
cmc
pmaxsw
lahf
aaa
inc
pop
or
pop
adc
add
bound
test
xchg
repnz
dec
jns
and
push
adcl
cmc
jns
mov
mov
lcall
push
add
ljmp
mov
pop
iret
pop
adc
add
lcall
fiadds
pop
xorb
adc
ljmp
imul
push
and
jle
fwait
adc
or
fs
pop
arpl
xor
test
daa
xchg
outsb
imul
mov
ja
out
xchg
sbb
je
xchg
push
dec
xchg
popa
ds
iret
and
adc
fnstcw
add
rcr
icebp
rorl
fwait
enter
xchg
xchg
lahf
pushf
and
xchg
mov
mov
into
stc
ss
jp
push
insb
mov
out
mov
sbb
dec
cld
jae
cmp
orb
enter
nop
repnz
mov
adc
jnp
mov
add
das
sar
das
out
sahf
loopne
into
push
mov
xchg
mov
inc
ret
test
xchg
sbb
sub
or
cmp
jns
cmp
jae
icebp
outsb
cmpsb
movsb
daa
mov
data16
mov
add
pop
addl
ret
lds
mov
dec
sahf
mov
aaa
js
xor
mov
mov
movsb
cmp
test
addr16
push
cmpsb
inc
hlt
cmp
mov
adc
or
add
out
xchg
sbb
and
enter
cmp
outsl
and
push
dec
in
xchg
jno
lds
xor
and
in
fistpll
arpl
mov
repz
jo
dec
roll
mov
dec
xor
scas
cmc
mov
das
mov
stos
jmp
fs
xor
in
xchg
pop
es
aam
and
xor
aad
xlat
and
iret
jno
fimull
lock
mov
lret
fdivs
jno
fwait
les
test
cli
add
fnstsw
sub
flds
dec
inc
sub
dec
cmp
lret
push
cmp
jmp
or
aam
pusha
stos
adc
sub
testl
test
push
loopne
sub
push
adc
pop
jecxz
or
mov
outsl
sub
xor
adc
jb
and
arpl
stos
mov
jp
shlb
push
int3
dec
loop
divb
cmp
jecxz
es
out
sbb
mov
rorl
rorb
out
mov
sub
push
dec
sbb
push
pcmpgtb
enter
push
ds
je
dec
js
mov
cld
inc
rclb
test
push
inc
popw
push
js
movsb
fstpt
iret
in
aad
insl
xchg
xor
repz
fidivs
inc
adc
mov
insl
jmp
mov
int3
hlt
lods
rorl
xor
push
xor
xor
pop
dec
or
mov
sbb
fs
dec
and
jle
pop
out
test
push
and
call
xchg
jne
shrl
mov
jns
xor
push
lret
enter
cmc
out
pop
or
sub
iret
mov
or
fildl
mov
out
cmp
cmpsl
out
call
divl
das
repnz
into
mov
sub
or
js
xchg
imul
fs
test
add
andl
icebp
pop
jb
out
mov
pop
aam
gs
push
mov
xor
cmpsb
push
daa
push
push
movsl
aad
fbstp
je
mov
sub
repz
dec
jae
pop
push
push
inc
pop
movsb
sub
in
xor
jne
test
in
in
ss
mov
roll
mov
lahf
mov
jnp
xlat
add
iret
inc
fidivl
ljmp
ret
push
addr16
fbstp
sti
and
bound
dec
pop
ja
mov
and
xchg
div
xchg
icebp
leave
adc
push
jg
int
stos
add
xchg
sbb
ret
sub
sub
gs
int
xor
popa
rorb
pushf
or
or
stos
jno
icebp
xchg
xchg
jle
push
aad
imul
cvtps2pd
addb
pop
sbbb
loope
bound
stos
fs
scas
test
loopne
ffree
inc
push
inc
push
fmuls
scas
test
aas
orl
or
out
cmp
call
daa
mov
pop
fsts
sub
sbb
xchg
rclb
jge
add
insl
or
orl
outsb
clc
sub
popf
push
jb
dec
sbb
pop
loope
mov
repz
shrl
xor
cmpsb
aaa
rcl
cmp
xorb
cmpsl
and
mov
fisubs
movsl
pop
hlt
sbb
movsl
je
sub
xchg
nop
int
sbb
and
xchg
mov
xchg
mov
inc
sub
cmp
mov
divb
test
andl
loope
pusha
sub
dec
push
aam
rclb
pop
dec
outsb
dec
add
adc
mov
xor
jp
mov
sbb
sti
push
shrd
mov
dec
cwtl
pop
les
imul
mov
jecxz
shlb
ja
mov
cmp
sub
rolb
jmp
jge
jo
sbb
and
xchg
in
xor
pop
idivl
dec
fwait
loopne
in
pop
rorb
xor
cmp
and
inc
cmc
push
sub
ret
mov
rcrl
std
sbb
mov
push
clc
ja
addl
mov
lea
xchg
lahf
dec
push
push
adcl
sbb
push
pop
hlt
dec
mov
out
scas
or
das
pop
nop
psrlq
inc
mov
sub
dec
xlat
pop
and
test
jns
pushf
jge
dec
and
insb
and
push
dec
pop
mov
sub
jo
ljmp
mov
lret
and
insl
xor
dec
nop
and
xchg
inc
xlat
mov
leave
insb
push
push
inc
adc
fistpll
push
in
push
push
addr16
movsb
out
or
jo
std
inc
and
cmp
cmp
jmp
rcrl
or
or
dec
mov
mov
stos
mov
and
jae,pt
mov
adc
lret
dec
lods
push
push
mov
cmp
jno
out
mov
jns
test
push
xchg
pop
cmp
jnp
fidivrl
xor
or
imul
xor
int3
dec
mov
push
in
push
cmpsb
dec
mov
pop
inc
fsubrs
out
mov
mov
mov
or
mov
rcrb
add
add
inc
jmp
lahf
lock
test
jno
stos
fmulp
lss
sub
addr16
bound
and
stos
mov
push
inc
nop
push
aad
or
sub
cmp
sti
adc
adc
cmp
mov
pop
push
subb
es
je
mov
lcall
pop
and
dec
mov
dec
xchg
jb
pop
bound
xrelease
leave
inc
les
ja
cmp
shll
xchg
cmpsl
subb
push
mov
ss
scas
push
outsb
lea
mov
call
cmpsl
sub
bound
pop
mov
jae
adc
push
roll
push
sbb
push
les
sub
scas
loop
shll
sub
lcall
mov
fidivs
xor
cli
pop
cmp
dec
inc
xchg
int
ret
xchg
rcrl
inc
inc
push
aas
push
hlt
stc
int
jecxz
test
das
cmp
add
repz
jl
addl
xor
dec
movzwl
or
loopne
push
xchg
sbb
in
xor
xor
or
or
repnz
sub
out
imul
out
mov
aam
in
push
outsb
cmp
add
je
adc
das
mov
xor
cmc
sbb
adc
cmp
push
test
mov
test
rclb
mov
pushl
mov
call
leave
push
rclb
and
loopne
lds
jg
lods
int
aaa
loope
dec
mov
aad
jl
lret
jne
mov
sbb
andb
xchg
fdivrp
jns
mov
iret
outsl
add
mov
scas
lods
lahf
cli
bound
cmp
stos
cmp
inc
xchg
xor
adc
mov
sub
sub
adc
mov
dec
cmp
dec
pop
jle
out
push
loope
push
dec
les
mulb
pop
addb
in
sbb
jecxz
rcll
xor
cmc
cwtl
data16
mov
push
xchg
xor
mov
ficoms
dec
lahf
push
cmp
or
out
lods
adc
add
mov
pop
pop
fsubs
pusha
adc
outsl
sbb
mov
xchg
mov
ljmp
lods
sbb
test
je
fisttpl
push
dec
jp
stc
or
add
hlt
push
shl
cld
popa
mov
push
xchg
push
in
xchg
xor
xor
mov
js
xor
mov
or
pop
leave
sbb
inc
mov
pop
mov
or
bound
mov
cmp
rcr
or
leave
into
scas
sbb
clc
xchg
popa
lds
sarb
mov
imul
mov
sbb
jno
adc
cmpl
mov
scas
popl
mov
cli
sub
mov
mov
dec
in
jg
cwtl
xor
sub
into
shrl
adc
ds
notl
fs
sub
jo
xchg
and
sbb
ror
sbb
movsb
dec
sbb
in
adc
aad
xchg
lea
lock
lods
pop
ss
dec
or
leave
push
mov
adc
icebp
xor
cli
lret
arpl
jns
cli
lock
scas
decb
bound
inc
mov
xor
jno
xchg
imul
cld
lret
mov
aam
fcmovb
adcl
jl
sub
push
push
adc
aam
adc
shlb
pop
xchg
pop
fistpl
pop
sbb
hlt
loop
sub
add
fidivl
aad
negb
and
in
push
int3
mov
adc
cmp
mov
adc
pusha
cmp
xchg
clc
lcall
xchg
mov
mov
mov
and
in
fistpl
in
stos
movsl
stc
aad
call
das
xchg
mov
test
xchg
sti
aam
enter
ljmp
pop
sub
in
leave
mov
movsb
mov
pop
out
mov
add
leave
imul
sti
insl
ret
push
jo
aam
je
rorl
push
std
shl
push
cmp
xchg
pop
mov
jecxz
clc
outsb
sahf
and
jle
ficompl
in
add
sbb
dec
dec
lahf
loope
std
addr16
movb
mov
xchg
ljmp
testl
jmp
shl
inc
into
dec
cmp
cltd
pop
test
jo
jnp
ficoms
jle
adc
divb
ds
push
mov
dec
pop
pop
aad
cmp
cs
mov
jno
loop
call
cmp
lcall
leave
dec
add
shll
push
sub
jl
lods
sbb
lahf
cmp
push
mov
mov
repnz
ss
lcall
mov
loopne
xchg
pop
mov
xchg
push
jo
lds
or
add
das
pop
mov
xchg
push
out
test
sbb
push
jl
mov
inc
into
cvttps2pi
loopne
jo
mov
inc
mov
xchg
stc
aam
in
or
cmp
fldcw
cmp
lds
xchg
inc
cmp
cmp
fists
pop
loopne
fwait
push
ficoms
test
xor
fs
lret
mov
xchg
mov
sub
push
fsts
mov
pop
jbe
mov
cmpl
xor
push
push
push
sbbl
push
mov
lahf
imulb
fwait
stos
dec
mov
push
scas
popf
fcmovb
mov
push
insl
pusha
ret
mov
scas
dec
mov
data16
cmpl
aam
dec
sub
inc
lcall
cmp
jge
pushf
sbb
fnstenv
pop
xor
cmpsl
xor
xchg
in
push
mov
xchg
mov
adc
sbb
fs
sub
scas
cmpsl
incl
mov
cltd
push
add
and
inc
fs
test
sub
inc
sahf
out
enter
sub
aas
dec
ljmp
or
jno
mov
inc
outsb
mov
add
cmp
popa
jg
out
sub
jnp,pt
fwait
jmp
shlb
jmp
jmp
aam
jp
int3
in
pop
andl
jecxz
mov
inc
add
cli
aas
sub
jg
push
ficompl
incb
test
out
jae
add
jl
es
or
lock
dec
push
xor
sub
cld
out
push
mov
or
lcall
rcrb
jl
movsb
sbbb
push
mov
and
gs
xor
mov
xor
jbe
mov
fmull
fsubs
push
in
fcmove
xor
mov
or
jle
jns
mov
stc
aaa
pop
sbb
into
aaa
mov
inc
cld
out
pop
enter
or
mov
mov
push
movb
out
fildl
jno
insb
or
mov
mov
lods
sbb
inc
lods
add
mov
insl
subb
pop
adc
dec
stos
cmc
imul
imulb
add
xchg
insb
lret
adc
fwait
xor
xchg
sarb
ss
push
sub
inc
popa
push
cld
ja
inc
cltd
sbb
aas
and
mov
adc
mov
jno
xchg
sub
ret
jge
into
push
arpl
insl
lret
test
ja
xchg
test
jns
out
sub
jl
xlat
push
movsl
rcll
fwait
add
mov
fdiv
sahf
jbe
lahf
push
xchg
xor
add
cmpl
sub
outsb
gs
jb
mov
movsb
jl
shll
out
xchg
test
inc
movsl
xchg
or
jle
aam
mov
jmp
mov
jne
jp
rcll
sbb
jmp
xor
ficoms
mov
push
inc
test
xchg
push
sahf
add
ror
or
sti
push
test
inc
and
imull
ljmp
cli
div
decb
mov
push
jns
jl
jne
mov
movsl
rcrb
xchg
xor
lds
lcall
adc
mov
xchg
bound
push
sub
lea
int
xchg
stc
lret
lods
hlt
shr
scas
mov
mov
addr16
int
icebp
push
jne
add
or
aam
cmpsb
pushfw
and
sbb
cmp
sahf
fldt
cld
push
dec
xchg
mov
sub
adc
mov
mov
jnp
fadd
call
scas
cs
in
je
cld
inc
jne
push
push
xchg
add
int
scas
inc
jmp
inc
les
test
push
and
sub
pop
pusha
sti
scas
adc
cmc
lods
mov
das
jo
enter
push
pop
std
pandn
or
ja
or
sahf
sbb
stos
out
rol
sub
mov
loopne
fcoml
fwait
xchg
dec
or
jecxz
ljmp
and
inc
je
fcompl
int3
jle
popa
mov
stos
sbb
mov
out
dec
mov
repz
push
inc
mov
sub
test
push
mov
mov
int3
xchg
lret
cld
ljmp
sbb
add
jno
adc
cmpl
fimuls
inc
jge
inc
dec
xchg
xor
pusha
scas
push
add
and
mov
outsl
adc
push
or
mov
cmp
or
xor
insb
xor
push
cmpsb
and
push
subps
ss
xchg
out
adc
cmp
out
and
push
pop
ja
lret
jecxz
xor
outsl
lock
add
scas
xor
sarb
push
loope
imul
imul
xchg
mov
xchg
or
out
iret
repz
sahf
or
cmp
jmp
mov
mov
std
jne
nop
mov
push
andb
enter
mov
cltd
mov
js
mull
inc
frstor
add
pop
dec
xor
gs
push
jo
inc
xchg
sbb
sub
jae
int
jno
push
gs
je
into
push
pop
fwait
jg
lret
push
jns
inc
jmp
cli
imul
and
call
and
fidivrs
call
test
jg
push
jns
jae
bound
pushf
addr16
clc
ljmp
movsl
jmp
loopne
loope
aad
push
xchg
out
and
int
fbstp
imul
faddp
dec
lcall
jmp
je
jmp
aaa
sub
push
adc
imul
test
shll
and
xchg
wrmsr
mov
ljmp
pop
mov
loop
dec
xchg
call
aad
xchg
insl
mov
mov
aaa
flds
ds
mov
or
movl
fprem
jecxz
add
les
fmull
push
movsb
lods
jne
imul
adcb
jns
popf
jmp
pop
nop
adc
bound
loopne
out
cmp
aam
xchg
ss
push
ljmp
sbb
faddp
ss
mov
push
je
lahf
push
dec
pop
push
xor
dec
dec
lods
jg
outsb
movsl
fldt
fcoml
push
inc
lods
push
add
or
test
aam
int
jecxz
jecxz
mov
insl
in
mov
jle
xor
lahf
sbb
jne
sbb
lcall
fisttps
mov
inc
aam
movsl
inc
or
adc
mov
fidivs
push
inc
lock
xor
js,pt
mov
mov
xor
mov
pop
dec
cs
and
pushf
imull
les
addb
dec
aaa
sbb
and
push
sub
jle
mov
in
das
clc
and
mov
aaa
jnp
lea
jl
mov
cmp
mov
repz
jmp
add
rol
jns
incb
push
xlat
fldcw
cld
orl
adc
fs
je
mov
xchg
shrb
adc
sahf
loopne
int
addr16
lahf
in
fs
pop
jmp
sbb
mov
shrb
xor
xchg
and
mov
push
bound
test
jnp
stc
sub
add
dec
adc
loop
imul
adc
jp
loope
dec
loope
stos
mov
inc
pop
mov
into
or
push
pavgb
add
mov
xchg
adc
inc
out
cmpsl
push
and
nop
lock
pop
mov
out
clc
or
inc
lods
pop
mov
dec
cld
xor
dec
pop
mov
sub
outsl
in
add
mov
out
xor
add
mov
ljmp
fs
int
jb
in
cmp
ret
pop
or
inc
clc
fisttpl
xchg
cmpsb
cld
add
in
out
lea
dec
mov
xor
stos
push
jmp
std
sub
jp
push
popl
scas
mov
repnz
jp
jecxz
xor
cmp
repnz
das
xor
loope
xchg
ljmp
out
pop
and
xchg
sbb
nopl
pop
dec
inc
iret
popa
pusha
repz
fwait
cs
dec
dec
mov
mov
mov
jmp
leave
out
ror
adc
sahf
jge
stc
popf
js
lods
inc
mov
jle
aaa
pusha
dec
std
out
std
test
inc
imul
xchg
rclb
mov
out
loopne
sub
rorb
pop
sub
xchg
jne
stos
out
out
aad
jae
xlat
inc
lea
sbb
sub
sti
jecxz
div
movsl
inc
addr16
lea
pop
jmp
or
push
lcall
mov
xchg
xor
push
mov
aad
movsb
popa
je
imul
add
ds
adc
test
mov
pop
fs
and
orl
scas
call
sbb
add
and
nop
adc
shr
push
xor
xchg
pop
ret
fisttps
in
xchg
mov
push
repnz
es
push
sbb
push
ja
nop
pop
rcrl
pop
sete
cmp
out
fstl
rolb
mov
popa
out
cwtl
out
cwtl
and
pop
cmp
test
dec
mov
adc
xor
in
into
fidivrs
sub
sti
adc
pop
adc
push
mov
pop
insb
dec
sub
xchg
mov
sub
daa
push
pop
cmpsb
aad
fcomip
in
call
inc
ja
mov
sub
sub
subl
sbb
sahf
jno
mov
push
popl
sub
xchg
mov
pusha
or
lods
insb
add
je
xchg
fidivs
lods
ss
movsb
xchg
rcl
pop
js
lahf
in
loope
and
in
xlat
mov
pop
xchg
pusha
mov
incb
sub
out
ror
cmp
sarl
and
mov
icebp
jg
lods
out
cltd
repnz
ffree
int
imul
or
add
fistpll
xchg
mov
xor
in
xor
lea
cli
jmp
pop
test
sbb
popa
icebp
mov
lods
into
adc
pusha
bound
mull
fwait
aam
daa
pop
inc
mov
pop
sbb
out
outsl
repnz
xchg
xchg
xor
aaa
jge
shll
mov
mov
add
stos
push
mov
daa
xchg
sub
fsubr
and
fnsave
je
aaa
popa
dec
test
insb
rcll
and
daa
xchg
in
push
es
das
mov
inc
xchg
add
out
stc
popf
popl
loopne
push
add
das
orb
loopne
and
mov
sbb
push
arpl
mov
mov
hlt
iret
mov
into
movsb
mov
out
mov
out
popf
data16
ljmp
es
insb
mov
std
insb
mov
push
je
inc
mov
outsb
add
xor
je
mov
flds
aas
aad
adc
sub
cmp
stos
cmp
repz
lahf
data16
mov
xchg
xchg
call
mov
mov
adc
stc
stc
iret
or
cltd
enter
fs
cmpsb
or
push
xchg
daa
jbe
loopne
sarb
loope
xchg
xor
add
test
mov
std
push
lods
pop
pop
fdivs
sahf
dec
out
stos
iret
add
adc
jge
xchg
testl
lret
sub
sub
add
xchg
inc
inc
mov
icebp
push
ss
imul
popa
jnp
clc
rcrb
popf
lret
out
inc
popl
in
into
xor
adc
mov
inc
dec
stc
lret
test
lahf
push
push
sub
cmp
outsl
jp
push
pusha
lods
cmp
clc
pop
xchg
inc
in
cltd
ret
ret
or
mov
xor
sbb
pop
jae
xor
push
cmpsl
into
adc
jecxz
mov
je
aaa
int3
mov
pop
adc
add
mov
dec
adc
arpl
rclb
orl
sahf
shll
add
push
sbb
outsb
mov
or
jbe
pop
fimuls
jbe
sbb
mov
sbb
adcl
out
or
hlt
or
lea
jmp
mov
sub
dec
xor
or
sub
addr16
sbb
mov
add
lcall
add
pop
popa
jp
mov
sarl
push
data16
xchg
cmc
xor
inc
sbb
mov
jno
or
imul
jp
shlb
lea
scas
xchg
nop
xchg
movsl
stc
inc
cld
pop
push
addr16
fsubl
mov
jno
iret
inc
lods
mov
push
mov
js
nop
fsubrs
adc
test
add
lcall
je
lret
sbb
pop
sahf
fbld
mov
mov
pop
icebp
aam
mov
inc
sub
sbb
mov
mov
xchg
jecxz
test
mov
aaa
xor
sbb
popa
xchg
rclb
push
fbld
imul
icebp
cmp
jno
pop
int3
inc
imulb
repnz
push
pop
xor
arpl
jge,pt
cs
js
into
sub
cld
hlt
fiaddl
je
jae
js
inc
sub
xchg
mov
or
jmp
mov
nop
rcrb
push
xor
fsubrs
xchg
dec
aas
lods
sti
sub
loop
cmp
cwtl
push
cmc
rorl
ds
cmp
add
xchg
xchg
xchg
cmpsl
adc
add
add
leave
mov
and
lahf
mov
dec
jb
icebp
sbb
fs
lret
inc
inc
lret
in
popa
cld
mov
insl
test
dec
sbb
outsb
xor
inc
jbe
dec
mov
fwait
insb
stos
add
jne
add
ror
sub
in
repnz
pop
mov
sbb
mov
repnz
jp
mov
mov
dec
or
adc
imull
push
repnz
sarb
int3
fdivl
cmp
add
pushf
lods
icebp
clc
push
and
mov
cmpl
and
pop
jecxz
add
in
enter
push
add
add
mov
fnstenv
push
pop
jg
pop
push
push
push
or
rol
fistps
aas
bound
jl
pop
test
mov
push
and
adc
addl
fstp
jb
pop
sti
pop
out
mov
lds
rorl
out
pop
addb
std
cmp
push
addr16
mov
out
push
je
rcrl
xor
in
in
jne
es
in
jecxz
dec
cmp
cli
mov
imul
inc
int
pop
lcall
inc
repz
inc
add
mov
sub
hlt
in
jge
lock
jg
push
adc
fcmovne
aaa
cmpb
sti
cmp
mov
or
xchg
loope
popf
pop
insb
mov
xor
scas
sub
fs
inc
jl
movsb
insl
out
cmp
sub
dec
hlt
scas
xor
sub
pop
inc
or
bound
xlat
mov
nop
push
je
sbb
dec
pop
inc
les
xchg
pushf
cmp
or
inc
ljmp
adc
mov
mov
out
push
mov
testb
dec
loopne
es
shlb
jmp
mov
sbb
adc
mull
push
xchg
arpl
movsb
mov
mov
repnz
out
popa
jnp
aaa
mov
mov
mov
stc
int3
movsb
int3
or
imul
xchg
mov
call
idivb
les
rcrl
cltd
aas
std
fsubrl
int
movsb
rorl
lods
fisttpll
push
inc
sbb
dec
sbb
pop
stos
jne
xor
ret
test
repz
loop
pop
mov
or
xor
mov
testl
outsb
stos
insb
cmc
jg
xchg
cmp
jae
int3
pop
dec
daa
int3
pop
mov
cmpsl
cwtl
push
fistpll
cmp
aam
cmpl
pop
or
xchg
ss
fistpl
mov
out
mov
out
fs
push
sub
xor
pop
in
test
mov
sbb
rcr
iret
xor
or
sbb
lods
aas
aam
add
ja
pop
fmull
sbb
and
jp
je
pop
mov
fidivrs
fldl
push
cltd
js
xor
imul
aad
imul
push
in
test
test
aam
daa
lods
cs
dec
xchg
jmp
xchg
mov
daa
xchg
idiv
mov
ds
jbe
fsubrl
pop
stos
lret
cltd
jge
repz
inc
in
sar
mov
mov
ret
cmp
or
mov
out
mov
rcl
test
sbb
mov
pop
adcb
and
test
add
pop
cvtdq2ps
dec
add
xchg
outsl
loop
movsb
add
in
test
scas
add
jno
ficoml
mov
in
clc
pop
and
mov
mov
mov
jp
jp
cld
or
gs
xchg
pusha
mov
rolb
pop
mov
mov
cmp
pop
add
ret
pusha
fs
stos
sahf
pop
push
leave
cmp
daa
push
lea
cmpsl
test
adc
mov
add
sbb
cmp
jmp
pop
or
cmpsb
sar
xor
adc
and
sbb
loop
lret
and
dec
daa
fistl
xor
pop
push
scas
adc
lcall
xchg
mov
aaa
push
and
shlb
lods
cld
movsl
ret
adcl
js
mov
into
imul
repz
cwtl
xlat
xchg
js
sbb
outsb
lods
mov
push
jne
or
call
insl
test
idivb
je
stos
lods
add
jb
bound
push
cmp
push
mov
ljmp
sub
lds
jecxz
cmpsb
jmp
lock
xchg
leave
and
add
and
mov
jno
add
mov
mov
xor
in
push
sub
inc
ret
mov
fdivl
roll
lcall
xor
mov
xor
xchg
mov
into
add
dec
or
pop
jbe
mov
loop
iret
xor
outsl
jl
push
orl
fisubrs
mov
and
jae
push
dec
daa
outsb
mov
xchg
mov
loopne
andb
cmc
sub
loope
jne
or
repz
cmp
cmpsb
push
inc
push
loop
xchg
lds
sub
imul
push
loope
jo
aaa
dec
test
and
add
fcmovnb
out
insl
mov
in
push
fwait
mov
jmp
cmp
incl
jo
lods
jne
add
adc
iret
mov
inc
data16
inc
mov
lahf
pop
pop
andl
jns
adcb
and
mov
dec
push
aam
scas
or
xchg
cld
or
xchg
push
push
rcrb
or
or
jge
in
push
ljmp
cli
iret
mov
dec
idivl
aam
xchg
jp
ret
lea
push
icebp
pushl
aas
vpacksswb
push
in
jo
pop
jne
cmp
cmp
inc
sub
rcrb
and
or
jmp
cmp
pusha
stos
cwtl
out
and
das
xchg
pop
stc
mov
lcall
icebp
sti
int
cld
std
push
sbb
lret
outsl
mulb
addr16
icebp
stos
mov
xchg
cmp
enter
xlat
xchg
jge
lcall
and
jl
ret
in
jmp
lret
jmp
repnz
aam
mov
bound
popf
enter
testb
push
xchg
pushf
incl
sahf
enter
jl
inc
dec
push
insb
inc
lods
insb
xor
int
adc
mov
cmpsl
cmp
sbb
lahf
sub
pop
add
add
push
cli
or
add
test
jae
inc
test
cmp
mov
inc
xchg
into
dec
add
out
mov
cmpsl
rolb
mov
jb
lret
imulb
add
sbb
scas
scas
add
loopne
lock
or
dec
pusha
adc
dec
or
xchg
jge
mov
and
lcall
sti
mov
pop
pusha
cmp
sub
jne
add
add
dec
jl
std
es
add
inc
and
movsl
cwtl
data16
jle
loopne
stos
rclb
cmpsb
mov
lock
icebp
xchg
mov
testl
sahf
mov
jg
pop
jg
xorb
push
dec
sub
fstp
sbb
inc
popf
out
jp,pn
add
mov
mov
call
ljmp
std
dec
inc
scas
sub
mov
aaa
pop
dec
cli
cmp
push
dec
in
pop
lods
xor
jl
adc
imul
ret
repnz
out
add
addr16
xor
stos
std
sbb
mov
mov
leave
jmp
dec
dec
pop
dec
push
mov
lret
push
xchg
call
ret
adc
inc
ja
inc
xchg
xlat
ljmp
lahf
push
js
nop
imul
popf
sahf
sub
loopne
mov
mov
jg
push
pop
lods
les
aad
xor
mov
ja
sub
push
or
dec
pop
pushf
gs
sub
adc
test
ud1
push
sub
jmp
ret
dec
lret
inc
scas
jns
mov
adc
lea
aas
inc
cmp
in
add
pop
ficoms
sub
cmp
add
push
dec
arpl
and
mov
push
mov
scas
scas
ret
aad
mov
in
pop
mov
imulb
inc
in
mov
int3
lret
push
movsl
outsb
std
mov
push
and
add
popf
dec
subl
repz
sub
pop
imul
sub
js
jbe
fwait
int3
cltd
pop
daa
mov
addl
arpl
call
xor
jb
mov
sbb
outsb
inc
inc
cmp
mov
xor
inc
jp
cmp
mov
inc
pop
mov
into
mov
stos
jb
sub
lret
or
and
std
or
pusha
pop
pop
cmpsb
pop
cld
fsubr
pusha
xorb
xor
mov
hlt
add
cmp
and
stos
xchg
pop
inc
jno
rorb
add
and
push
js
sbb
rcl
adc
dec
ret
icebp
mov
mov
xchg
push
lea
fldcw
mov
insb
xchg
jb
aas
lock
aaa
xchg
sub
mov
lods
pop
leave
or
ds
les
imul
ret
ljmp
adc
sbb
clc
fisubs
ficoms
subb
loop
sbb
xor
jne
in
adc
pop
cmp
outsb
push
insb
jge
push
xchg
and
andb
outsb
xor
xorl
mov
xor
lret
mov
clc
int
aad
sbb
add
filds
jge
lret
les
test
sub
jno
xorb
jo
mov
inc
mov
lds
repnz
pop
jmp
mov
inc
gs
add
pop
mov
inc
clc
and
cmp
inc
push
les
pop
xchg
insb
cs
cltd
repz
shrl
mov
lods
mov
in
int
lcall
test
inc
popa
es
cmp
les
dec
dec
cli
jl
mov
mov
rcll
jp
pop
add
jecxz
xlat
or
push
inc
loop
inc
mov
arpl
fwait
sbb
add
dec
lea
iret
pop
push
or
aas
in
movsl
mov
pop
push
xor
pop
xor
mov
pcmpgtw
and
movsb
mov
jmp
insl
jns
jb
mov
xor
and
repz
lret
shrb
mov
jmp
dec
push
push
push
fisubs
outsb
xchg
lret
add
popf
mov
mov
pop
lds
ja
das
loope
sbb
enter
inc
mov
ss
cmc
outsl
jbe
dec
adc
loope
mov
push
out
pop
dec
jl
xchg
std
inc
cmp
imul
leave
pop
ret
nop
mov
dec
out
es
sarl
gs
xchg
jo
push
rcrb
mov
subb
adc
shrl
or
pop
xor
movsl
dec
aaa
sub
inc
inc
push
adc
xchg
fsubs
push
push
subl
xchg
dec
lods
mov
cmpsl
xchg
loopne
adc
loope
adc
aas
lock
sti
mov
rcll
sarb
sti
in
rep
sbb
inc
sbb
cmpsb
jecxz
movsb
nop
aam
mov
xor
sbb
xchg
cmp
adc
jne
mov
sarl
std
sub
push
fisubrs
addl
pand
out
sbb
scas
cmc
cmc
pushf
test
test
repz
add
or
xor
jl
mov
and
icebp
pop
cmp
mov
lds
ja
jp
repnz
push
pop
in
scas
sti
shlb
and
sub
xchg
or
sub
shrl
aas
cmp
push
xchg
sbb
inc
mov
enter
cmpl
in
sbbb
cli
les
fcmovb
mov
sub
push
aas
cwtl
mov
imul
sti
lods
jl
jg
out
adc
cmp
inc
xor
test
xchg
shrb
jmp
add
xor
inc
pop
and
jge
cltd
test
inc
subl
lahf
pop
cmp
andl
pop
push
pop
pop
mov
or
bound
mov
ljmp
dec
pushf
sbb
test
icebp
adc
stos
push
push
cmp
cmp
int
cmp
xchg
imul
mov
out
jbe
in
adc
mov
in
test
shl
outsl
inc
push
mov
rorb
nop
jp
adc
or
adc
pop
jnp
mov
inc
cmpsb
and
es
jno
fisttpll
dec
dec
xor
sahf
fadd
add
add
lret
jns
rorl
mov
test
dec
mov
jecxz
xchg
jae
out
cltd
jne
mov
pop
sub
mov
mov
lods
pop
xchg
dec
dec
cli
and
adc
test
adc
rorb
add
jb
lods
mov
mov
dec
lret
jb
test
pop
mov
adc
rep
out
mov
negb
mov
pop
int3
fstl
cmp
jecxz
push
sbb
mov
mov
data16
lret
repz
mov
xor
mov
pop
sbb
adc
enter
das
int3
int
adc
jecxz
mov
push
dec
scas
xlat
stos
cmc
inc
push
inc
push
xchg
ret
loope
int3
insb
mov
dec
or
test
mov
lea
cmc
xor
mov
ficoml
les
cmp
mov
or
mov
jle
xor
push
ja
push
cmp
fs
and
fisubrs
sbb
sahf
adc
pop
rep
cs
xchg
leave
push
lret
rclb
mov
out
push
inc
imull
add
jp
in
mov
in
insl
into
xor
mov
inc
mov
rorb
push
sbbl
jnp
jb
clc
adc
ret
stc
testl
mov
cmp
lahf
stos
cld
jp
inc
test
adc
cmp
dec
addb
sub
adcb
leave
bt
jmp
subb
push
mov
fcoml
sub
aaa
cwtl
mov
and
adc
cmpsl
popf
cmp
std
nop
outsl
push
sti
das
mov
js
jle
push
ret
nop
inc
xor
pusha
dec
mov
in
hlt
mov
movsl
mov
sbb
ficoms
cltd
es
sbb
jge
out
dec
stos
sbb
aam
sbb
lea
mov
gs
fwait
enter
lahf
leave
cmp
cmp
loopne
cli
xchg
sar
pusha
cmp
aad
repnz
jl
fistl
leave
mov
dec
jb
and
in
outsl
adc
sub
jmp
loopne
pop
lods
ret
sub
test
imul
push
repz
push
mull
pusha
or
jnp
imul
cmp
add
jo
push
sub
sbb
fwait
cmp
cmp
pushf
sbb
daa
int3
gs
movsb
out
inc
xlat
xor
jo
mov
sub
pop
imul
xchg
push
adc
pop
rcrl
or
add
cvtpi2ps
push
jle,pn
jbe
das
aas
into
jae
jnp
cmpsl
std
add
movsl
jl
orb
aam
and
cmpsb
xor
gs
xor
cmpsb
adc
insb
add
js
popa
ljmp
inc
clc
movsl
stos
cmp
mov
mov
ss
cs
xor
cmp
cmp
mov
loope
inc
cmp
aam
jmp
pop
fcompl
jp
adc
stos
mov
adc
test
dec
cmc
nop
data16
mov
xchg
shr
xor
or
mov
jecxz
insb
jge
mov
sbb
subb
data16
xchg
xor
mov
pop
pop
dec
inc
sub
xor
popl
stos
push
lea
aas
test
int
and
pop
movsl
push
andb
bound
jne
jo
sub
mov
inc
outsl
aam
loopne
icebp
cmpsl
fisttps
mov
mov
jge
inc
xor
xchg
sbb
inc
sbb
add
or
lret
mov
cwtl
lret
lahf
xchg
cmpsb
xor
inc
mov
scas
mov
mov
dec
add
shl
push
xor
orl
xchg
nop
push
fs
xchg
jne
jo
sbb
add
and
jle
dec
mov
sbb
dec
mov
cltd
mov
rcr
sub
cmp
leave
or
fwait
arpl
rclb
add
das
or
mov
imul
ret
cli
add
imul
lcall
shl
insb
cmp
and
data16
imul
xlat
adc
stos
push
testl
nop
cmp
sbb
sbb
xchg
or
mov
pushf
mov
pop
cmp
sub
sbb
call
and
lahf
sub
mov
push
adc
leave
push
mov
add
pop
lret
jg
scas
hlt
xor
mov
fsubl
jb
leave
rcrl
popa
jno
jmp
das
cmc
fst
rcl
cltd
inc
push
negb
dec
sub
das
mov
mov
xchg
mov
add
inc
push
test
rcrl
adc
movsb
add
in
mov
and
pop
xor
nop
cltd
je
pop
adc
sbb
int3
shll
adc
imul
movsl
add
out
jo
in
or
dec
lock
xchg
xor
sub
mov
sub
jae
xchg
je
mov
mov
push
jge
pop
out
in
cmp
and
cmpsb
into
lock
add
cwtl
xchg
popa
or
loope
xchg
inc
inc
ret
xor
outsb
adc
pop
enter
mov
mov
addr16
mov
xchg
lret
fneni(8087
xchg
jg
mov
cli
in
arpl
fistpll
neg
imul
cmp
ret
cmp
xor
ret
dec
pop
lret
dec
jne
lock
int3
mov
xchg
xchg
jle
andl
jns
out
cmp
pop
loopne
scas
mov
mov
in
add
ja
test
stos
aaa
enter
loopne
in
es
out
ja
push
adc
pop
clc
jge
cmp
lret
test
or
out
test
cmp
and
leave
push
divl
adc
lcall
fisubl
cmp
lods
shrb
out
mov
xchg
into
pop
pop
out
cmp
add
into
mov
aad
test
push
mov
sbb
sub
sbb
mov
dec
inc
jno
inc
or
push
lret
dec
mov
insl
insl
push
lret
push
adc
xlat
jmp
jnp
push
inc
mov
negl
sbb
adc
sub
mov
sahf
divl
cmp
lahf
das
ja
jbe
leave
dec
out
lea
ret
sbb
mov
leave
jmp
fwait
outsb
xor
sahf
fmul
inc
and
xchg
push
dec
mov
das
mov
xchg
enter
push
into
jmp
fsub
cmpb
mov
mov
pop
lret
je
sub
fsubrs
xchg
cmpl
or
outsb
mov
hlt
aam
add
icebp
push
jmp
out
sub
inc
adc
xchg
adc
add
inc
xor
xor
mov
push
inc
sti
icebp
lret
lcall
jg
out
inc
mov
sub
sbb
and
sub
out
xor
xchg
aad
mov
ja
nop
stc
pop
out
add
jmp
cmpsl
loope
add
shlb
xchg
cmovp
clc
pop
icebp
mov
jg
insb
mov
mov
jg
in
xchg
cmp
and
cmpsb
xchg
pop
adc
or
and
cmp
cmpsl
rorl
enter
stos
mov
push
xor
xchg
cmp
mov
fadds
mov
ss
jp
in
insl
cmp
lea
leave
xor
xor
sub
ffree
pop
lea
add
mov
iret
movsl
push
mov
xor
and
and
fidivrs
xchg
and
cltd
mov
cltd
and
aad
mov
out
call
scas
xchg
xchg
and
jp
jo
out
push
das
mov
sbb
out
ljmp
dec
loop
sub
xchg
je
inc
sbb
outsb
std
call
jl
inc
push
out
std
and
cmp
lods
in
jle
mov
dec
aad
and
mov
lea
ror
out
add
pushf
jmp
lahf
cs
bound
in
cmpsl
rolb
repz
stc
cld
xchg
dec
dec
lods
lahf
mov
mov
repz
push
push
xchg
sbb
pop
into
mov
sub
sub
clc
repz
nop
inc
mov
loop
ds
pop
jnp
mov
jno
mov
xorl
mov
mov
sbb
lahf
mov
insb
inc
subb
cmpsl
shll
adc
adc
mov
loopne
enter
mov
test
cmp
das
test
cmp
pop
mov
adc
sbb
jb
call
outsl
jns
push
fldl
inc
ret
or
jmp
add
push
iret
sub
sar
sbb
cmp
xadd
repnz
pop
dec
adc
es
inc
push
mov
xor
or
ret
jo
repz
fiadds
mov
ja
sti
cmp
mov
dec
int3
psllq
cwtl
jge
inc
xor
cmp
popa
outsl
in
sahf
xchg
push
daa
shll
in
adc
sbb
push
mov
push
scas
sbb
popf
pop
popf
fbld
dec
arpl
dec
add
notb
lea
or
sbb
lcall
push
aas
in
jne
jns
and
mov
and
aad
popa
lock
je
xchg
push
cltd
jl
imul
and
dec
es
addr16
es
cld
rep
imul
shlb
jle
test
xchg
cli
sub
lds
out
imul
lea
cmp
or
cltd
jo
mov
or
cmp
shlb
int
daa
mov
xchg
push
xor
and
cwtl
adc
aaa
dec
dec
clc
lret
subb
loop
js
push
adc
into
scas
into
icebp
out
xor
inc
ss
cwtl
or
cmc
scas
xchg
ret
pop
push
fildl
mov
lds
push
out
fdivl
dec
and
leave
andl
ljmp
cli
xchg
push
fadds
mov
sbbl
bound
sub
cmpsl
xor
jb
icebp
pop
inc
xchg
mov
outsl
fs
xor
sti
popf
lahf
sarb
sbb
aaa
popf
popf
xchg
cwtl
pop
loopne
xchg
in
movsb
mov
lahf
or
lods
insl
adc
aaa
cwtl
push
std
mov
xchg
and
add
xor
add
sub
dec
pop
imul
lock
mov
outsl
xor
inc
mov
add
adc
test
cmp
ret
ficoml
cli
lret
adc
cmpsl
xchg
mov
inc
push
xor
fisubrs
mov
cli
dec
shll
xchg
adc
leave
push
les
mov
iret
jge
xor
push
rorb
pop
test
daa
sub
or
pop
iret
rclb
out
or
test
stos
sub
inc
nop
nop
pushf
adc
gs
sbb
shll
cmp
cld
scas
sub
sbb
cmc
lds
jge
mov
mov
push
ficompl
push
mov
out
pop
pop
mov
jge
cli
or
push
or
sbb
rorb
xorl
dec
shll
add
sbb
outsb
jmp
and
mov
xchg
inc
fnstcw
cmp
lds
ret
imul
es
xor
enter
call
and
imul
cmp
adc
mov
inc
ja
cmpsl
in
and
daa
or
fwait
mov
push
or
xor
fsubrs
push
pusha
ret
inc
clc
into
pop
cld
and
minps
jb
mov
mov
jp
push
adc
adc
repnz
or
inc
fiadds
xor
add
push
dec
mov
jne
pop
iret
mov
das
imul
mov
scas
outsl
clc
mov
imul
fildll
push
stos
xchg
popf
pop
mov
mov
dec
mov
mov
pop
adc
jle
cmp
test
jge
inc
xchg
adc
add
push
or
insb
xor
push
js
flds
je
into
cwtl
jl
jo
mov
inc
in
pop
iret
cmp
dec
push
adc
stos
cmp
xchg
inc
shlb
pop
sti
insl
cli
or
jnp
push
loopne
xchg
movsb
jno
mov
sarb
mov
fcompl
jmp
repnz
mov
je
dec
fcompl
mov
das
ljmp
jle
bound
push
mov
pop
mov
xor
test
cmp
adc
cwtl
jne
sahf
push
pop
or
push
xchg
decb
pop
push
loopne
hlt
sarb
pop
jnp
pusha
hlt
mov
xor
cmp
call
jl
mov
xchg
sbb
scas
nop
fildll
mov
xchg
int
pop
push
outsl
dec
add
push
xchg
push
lcall
iret
sarb
or
adc
jle
pop
push
push
std
sbb
dec
dec
xchg
mov
ds
fst
inc
mov
dec
outsl
add
in
fiadds
fidivrl
mov
dec
imul
push
cmp
pop
mov
cs
mov
inc
leave
sbb
test
stos
mov
fcoml
mov
push
popa
lods
or
js
movsb
sub
fnstcw
and
push
call
lret
lahf
ljmp
push
cmp
movsl
lcall
push
jmp
mov
gs
ds
xchg
pop
jo
insl
adc
stos
movsl
popf
inc
popa
lret
dec
scas
dec
xor
xchg
mov
or
mov
out
push
mov
movzwl
mulb
inc
sub
jbe
push
daa
lea
mov
mov
popf
pop
adc
adc
in
xchg
push
ja
sub
sbb
mov
movsl
mov
dec
sti
dec
roll
mov
push
mov
shrb
mov
push
imul
mov
dec
cmp
orl
cwtl
rcl
adc
or
dec
mov
xor
jl
or
pop
out
mov
test
or
icebp
or
cmp
imul
mov
hlt
sub
jmp
insb
roll
fdiv
xchg
outsl
xchg
and
popa
ss
scas
push
popa
mov
in
mov
jo
sti
cmp
aas
xor
andb
jmp
aam
call
ss
mov
sbb
lahf
rcll
neg
jg
dec
mov
add
rorb
jmp
mov
inc
outsl
popf
lds
popw
mov
loop
pop
mov
inc
adc
push
jmp
lret
sub
popl
xor
lret
add
pop
loop
and
das
cmpsl
incb
mov
mov
pop
sub
add
sub
pusha
sub
xchg
sub
jge
faddl
mov
push
or
mov
push
xor
popa
jg
out
pop
fistl
pop
lret
int3
mov
inc
xchg
aas
sbb
mov
xchg
lods
or
or
fwait
loop
mov
addl
iret
inc
lcall
cs
xchg
jb
sbb
mov
jmp
pop
popa
imul
jbe
sbb
mov
and
jmp
dec
aaa
sbb
es
mov
aas
sarl
scas
incl
ret
fisubrl
clc
pop
stos
mov
push
enter
pop
mov
gs
ss
pop
test
ret
lret
hlt
fwait
or
cmp
das
pop
fdivr
pushf
push
orb
xor
psubsw
and
xor
add
rorb
mov
mov
fs
jb
test
jp
pop
pop
aas
lcall
or
insl
sub
andl
fcmovne
push
dec
xchg
jmp
add
mov
push
cwtl
mov
js
test
xor
jecxz
jmp
jne
push
xor
lret
scas
and
xchg
pop
ljmp
mov
add
push
clc
pop
loopne
cmp
jecxz
cmp
mov
add
pop
push
add
fsub
fwait
xor
out
icebp
sub
push
fmulp
xor
jecxz
call
fstpl
xchg
fcoms
scas
add
shll
cmp
or
lea
xchg
int
movsb
sub
jmp
bound
jns
lret
mov
cmp
mov
dec
jl
jl
mov
data16
ljmp
sbb
loop
icebp
jno
in
sbb
mov
mov
adc
filds
push
sti
jo
movsl
or
or
je
inc
sbb
repnz
dec
mov
push
xchg
mov
xchg
insb
les
xorb
roll
loope
es
inc
ficoml
decl
nop
sub
mov
les
or
test
dec
in
jae
add
stos
and
mov
xchg
sbb
jp
push
mov
xor
jns
ds
fsubp
mov
inc
dec
gs
cmp
out
xchg
ss
test
cli
pop
jbe
arpl
cmc
cmp
or
add
out
sahf
aam
shlb
jecxz
xor
or
hlt
aas
arpl
pushf
pop
notb
dec
or
sbb
pop
or
das
mov
sub
and
mov
leave
fidivs
fwait
stos
mov
subb
aas
xor
cmp
inc
mov
popf
leave
jl
xchg
or
sar
pop
lcall
add
testb
jge
popf
in
outsl
cmp
test
xchg
inc
or
add
or
and
imul
or
gs
daa
sahf
adc
cmc
ret
mov
ret
fs
cwtl
sbb
inc
push
lret
sar
fstps
aam
repz
test
into
in
sbb
arpl
xchg
adc
lods
pop
ds
mov
les
rcrl
inc
insl
std
imul
pop
mov
rolb
test
adc
cmpsl
das
add
int3
xchg
xor
es
sub
mov
cli
or
cmp
push
cwtl
and
insb
dec
shlb
xor
imul
dec
and
jp
cmp
mov
xorb
push
cmpsb
jp
mov
xchg
out
shlb
jge
xor
push
push
cld
cli
pop
add
jnp
loope
fninit
sub
hlt
repnz
xor
mov
gs
cld
inc
inc
add
pop
repnz
xchg
loopne
lods
fwait
test
les
inc
add
jb
into
push
adc
je
mov
pusha
and
stos
push
sbb
out
cmp
pop
push
scas
ds
clc
mov
shlb
out
aad
lret
ret
mov
add
push
xchg
xchg
or
in
fisubs
mov
shrb
aam
xor
add
or
mov
mov
ds
daa
call
xor
cmp
xchg
sub
rcll
push
add
or
mov
out
inc
sbb
mov
loope
push
stos
jp
mov
jb
fmuls
in
dec
movsl
add
pushf
outsl
repnz
sub
fucomip
mov
pop
leave
aam
jge
push
sti
loopne
mov
xor
and
adc
push
fcmovnbe
cs
or
jno
pop
jo
addb
cmp
dec
test
in
mov
ror
mov
ret
push
xchg
mov
pop
nop
cmp
dec
and
cmp
ret
leave
call
rcr
xor
pop
ss
ret
pop
dec
inc
xor
testb
loope
hlt
xchg
cltd
lock
pop
push
fidivs
scas
jns
lea
test
rorl
ljmp
add
xchg
jp
jle
outsb
sbb
xchg
je
lret
gs
mov
mov
cmp
je
sub
out
cmp
mov
adc
rorb
and
dec
sbb
dec
fwait
pop
subl
cmp
cs
push
inc
xorl
cmp
xor
cmp
mov
adc
ror
out
inc
ficompl
mov
pop
inc
das
in
jae
mov
outsl
les
cmp
das
xchg
cmpsl
push
sub
push
cmp
mov
xchg
insl
call
adc
cwtl
xlat
mov
mov
xor
repz
xchg
push
stos
pop
sub
jno
xchg
sub
sub
dec
pop
add
jmp
cld
fmuls
fstl
loopne
mov
cld
mov
mov
xchg
sub
cmp
adc
inc
mov
pop
hlt
add
push
or
popa
out
dec
and
and
inc
pop
adcb
jne
aad
mov
adc
mov
in
mov
sub
or
scas
out
repnz
mov
and
or
add
or
inc
mov
lret
fnstcw
loop
addr16
or
jo
jmp
faddp
sti
in
lret
push
es
mov
jp
inc
cs
sarl
shl
jno
je
out
and
test
sub
gs
and
add
cmp
xor
std
sub
fcmove
fcoms
outsl
add
scas
fisttpl
lods
push
xchg
fidivs
sbb
jp
add
jmp
jae
out
mov
or
faddl
orl
fwait
or
xchg
push
jb
stc
inc
je
push
push
scas
imul
push
lods
xchg
lods
push
cmp
lret
pop
and
rclb
js
fs
cmc
fcoml
lock
dec
icebp
jb
addr16
inc
inc
dec
lahf
adc
push
icebp
into
mov
mov
gs
cmp
pop
hlt
andl
sbb
inc
flds
xchg
lahf
jae,pn
loop
jge
lret
jb
int3
push
insl
xor
pop
push
and
cwtl
mov
in
or
jle
repz
negl
lcall
pusha
or
mov
cmpsl
jle
test
roll
out
pop
stos
cmp
cmp
loop
xchg
lds
inc
pop
stos
loopnew
outsl
mov
dec
push
imul
sub
pop
cmp
pop
xchg
mov
sbb
push
rorb
jb
jl
lods
jbe
jg
shrb
sub
adc
sub
sub
cltd
cmp
and
mov
and
push
cmp
cld
fbstp
mov
inc
shll
jnp
mov
cmpsl
inc
loopne
out
mov
add
mov
and
ret
test
daa
ss
xchg
ljmp
bound
lods
fisubl
popa
mov
mov
dec
mov
js
sub
xor
push
xchg
and
in
shll
push
out
shrb
cmp
icebp
xorb
sub
loope
push
lods
fistpl
mov
push
or
daa
push
loopne
xor
ds
mov
lret
jg
dec
dec
jle
mov
push
hlt
cmp
outsb
sbb
dec
pop
push
jno
repz
xchg
outsl
pusha
dec
out
scas
lcall
push
jne
add
test
lahf
ret
push
push
xchg
mov
bound
out
popa
mov
in
jecxz
gs
je
std
sub
xor
into
jge
out
pop
cli
pop
pop
fldl
lret
sbb
mov
and
jg
cmp
iret
getsec
jo
ficoml
adc
lods
push
jbe
and
xor
fcmovbe
mov
sub
jno
push
loopne
mov
out
add
or
cmp
and
mov
xchg
cmp
xchg
mov
in
add
rorb
push
dec
daa
pusha
in
inc
jg
les
pop
fistpl
cmp
inc
lret
lock
xor
cmp
stos
leave
mov
xchg
mov
cmc
cwtl
divb
jne
push
std
aam
jp
repnz
shl
dec
sbb
jns
xchg
cmp
cwtl
imull
jae
lret
xchg
clc
sti
sub
test
push
push
out
pusha
or
jp
mov
sub
js
movsl
push
and
sub
xchg
inc
lea
outsb
mov
push
leave
mov
stos
fwait
es
pop
movsl
add
push
sub
and
outsl
mov
lahf
mov
mov
int3
and
sbb
or
popa
xor
ret
mov
popf
loop
rorl
xor
mov
dec
mov
xchg
inc
xor
dec
cmpsb
cmpsb
fidivs
and
andl
cs
mov
jo
adc
imul
push
leave
sbb
f2xm1
mov
inc
dec
mov
jmp
out
inc
cmpsl
xor
mov
xor
ds
adc
orb
mov
imull
testb
test
adc
lods
ret
xor
rcll
inc
and
push
subb
into
lods
iret
mov
les
test
js
dec
in
or
adc
cltd
lds
mov
or
int3
bound
fsubl
sbb
adc
pusha
in
stos
pushf
mov
dec
lock
int3
in
sahf
rcrb
mov
fwait
ss
or
cmp
mov
xlat
iret
cmp
adc
dec
cmp
cmp
lret
dec
mov
add
mov
jmp
movsl
jnp
xlat
into
lock
jbe
cltd
ds
jns
aad
jns
shrl
notl
and
rcll
push
sub
sub
add
test
inc
xor
push
imul
in
js
inc
xor
fidivrs
dec
nop
mov
inc
xor
cmpsl
or
insb
xchg
ror
jle
popf
cmp
stos
scas
push
movsb
pop
sbb
add
in
aam
pop
dec
xchg
lahf
test
fwait
mov
fdivrp
xlat
inc
out
popl
mov
das
mov
dec
xchg
lods
cmp
push
inc
sbb
xchg
mov
mov
sub
jp
pop
shlb
jg
cmpsl
mov
sahf
int3
push
xor
ds
out
mov
jge
dec
mov
iret
popl
dec
cmp
mov
mov
add
adc
jno
test
fiadds
or
insb
fwait
outsl
add
add
data16
or
rcl
xchg
imul
cmp
filds
cmpsb
xchg
pop
mov
pop
loopne
fldcw
push
cmp
pop
outsb
add
lcall
mov
mov
xchg
bound
testl
in
push
pop
dec
push
jne
jae
shll
mov
add
mov
xchg
jo
jg
add
jb
xchg
dec
adc
add
nop
lods
jecxz
test
add
sub
fmull
dec
mov
enter
jmp
mov
jns
mov
mov
cltd
clc
dec
dec
ffreep
mov
pop
es
xchg
repnz
test
sbb
cmp
and
mov
scas
sbb
ljmp
dec
sti
cld
cmpsb
sbb
dec
and
add
pushf
inc
xor
nop
mov
icebp
or
leave
in
and
popa
mov
pop
sub
ljmp
sub
lock
lcall
sub
add
or
add
loope
rclb
mov
pusha
pushl
pop
sbb
subps
fxch
xchg
adc
inc
lcall
cmpsb
fwait
sub
xchg
cmp
jne
outsb
in
push
xlat
pusha
imul
sbb
adc
xchg
jmp
js
lds
pushw
sbb
repz
pop
jno
sbb
cli
mov
out
sub
xchg
dec
inc
lock
pop
ss
out
aas
mov
xor
mov
int
lock
add
popf
sahf
inc
ret
jecxz
cmpsb
jle
jl
and
out
pop
mov
das
push
fdivr
mov
pop
cmc
mov
aad
mov
rcrl
push
mov
cmp
push
fistpll
push
cltd
addr16
push
shl
pop
jae
imul
push
dec
dec
mov
flds
shrb
push
mov
or
jbe
out
ja
pop
shlb
shlb
xchg
ret
xchg
dec
scas
hlt
repz
cmp
jp
aam
stos
mov
repz
sti
mov
cmp
lock
push
sub
or
stos
jl
jp
cwtl
mov
xor
sarl
adc
in
cmp
test
jl
fsubrp
jle
cmp
cmp
test
lods
mov
jmp
pop
add
pop
cmp
fnstsw
mov
in
data16
or
and
cmp
jo
sbb
xor
out
dec
cli
in
or
mov
int
mov
xchg
or
loop
inc
insb
test
push
adc
fcmovb
pop
int3
push
repz
lds
insl
inc
or
xchg
adc
pop
and
add
mov
in
xor
ds
sti
jge
jns
xor
jle
fidivrl
push
dec
push
jne
ja
lahf
sarl
jge
shl
out
ret
scas
mov
or
aad
sahf
int3
jne
imul
and
hlt
lods
jmp
push
ljmp
push
pop
xor
insl
jg
mov
xor
addr16
xchg
mov
inc
xchg
or
mov
orl
and
jmp
fs
push
shrl
pop
mov
inc
ss
mov
pop
add
push
pop
rol
mov
mov
fs
jg
adc
call
outsb
es
dec
scas
pusha
mov
lds
test
jno
mov
in
mov
mov
mov
add
xor
and
pop
or
and
or
cmc
mov
sbb
inc
and
mov
ljmp
pop
jmp
fiadds
push
dec
and
or
or
idivb
test
sub
dec
cmp
dec
pop
insb
sbb
or
jo
xchg
std
loop
inc
scas
rclb
lods
dec
aam
pop
loop
out
push
mov
cmp
push
inc
inc
ss
movsl
fidivl
lds
push
mov
mov
pop
int
dec
dec
adc
dec
push
pushf
jmp
jns
arpl
cli
pop
cmc
sub
pop
mov
add
pop
nop
aaa
jecxz
mov
sarb
pop
and
fwait
mov
cmpsb
add
cwtl
sub
cmpsb
jg
xchg
push
cmp
test
or
jae
mov
bound
pop
jb
jno
cli
insb
push
insl
movsb
sbb
push
std
repnz
adc
mov
and
pusha
mov
mov
repz
les
jo
leave
aad
out
inc
xor
mov
subb
inc
push
scas
jnp
push
mov
sbb
in
and
push
cli
int
cmpsb
inc
loop
mov
mov
std
daa
dec
sbb
pop
test
in
push
repnz
ret
leave
push
or
sub
push
inc
mov
mov
inc
popf
int
ja
mov
dec
incb
xchg
sbb
movsl
xchg
shl
call
xor
add
lds
outsl
dec
push
lret
loopne
xchg
adc
push
jmp
outsl
jp
xor
pop
xchg
mov
inc
shr
jae
push
idiv
lahf
rcr
pop
jp
push
jb
inc
cld
aas
bound
call
adc
and
pop
es
mov
push
dec
mov
mov
jnp
push
jo
add
add
sub
jl
sbb
outsb
into
adc
arpl
adc
lret
cs
shrb
iret
xchg
lahf
inc
in
and
ret
repnz
aas
xor
shr
and
popa
repnz
cmpsl
sub
das
push
addl
sbb
mov
lods
add
xchg
adc
sbb
adc
sub
in
push
int3
sub
cld
pop
insb
jge
fwait
sbb
mov
out
adc
inc
push
insb
push
ret
pop
pusha
bound
nopl
data16
out
xorl
les
inc
xor
mov
push
into
xchg
cmp
xor
dec
mov
mov
lea
dec
incl
pop
fwait
repz
repnz
pop
mov
arpl
inc
pop
inc
pop
jmp
lods
test
sbb
test
call
js
daa
lret
jo
shll
das
hlt
lret
push
dec
xchg
fsubrl
or
cmpsb
mov
mov
cmp
jae
or
push
rcrb
inc
std
lret
dec
pushf
test
in
sub
call
cmp
fcmovne
les
aas
lock
sub
lahf
adc
add
sti
les
inc
push
jmp
lods
ja
xor
pusha
mov
jmp
ud2
lahf
jnp
push
sar
lcall
aas
adc
push
and
shl
mov
push
jle
pusha
mov
aad
xor
pop
ret
pop
addr16
std
cmpsl
inc
jmp
out
jl
fbld
mov
flds
sbb
stos
je
sub
jns
clc
jmp
lahf
lea
or
insb
lret
push
adc
inc
adc
rclb
cmp
in
pop
jmp
mov
xor
or
loopne
pop
mov
adc
gs
or
sbb
push
jl
and
cmpsl
sbb
mov
and
cmp
enter
std
push
mov
or
jo
mov
js
dec
push
jmp
dec
pop
call
dec
lods
hlt
icebp
fidivl
leave
mov
xchg
fisubrs
push
movsb
push
stos
mov
fisubl
in
push
xchg
and
cs
popf
shlb
mov
loop
mov
mov
js
aam
movsl
fstl
fcomps
enter
mov
fwait
add
js
loop
sbb
sbb
mov
xor
adc
repz
jmp
lods
and
movsb
cmp
ss
or
je
inc
inc
pop
add
cwtl
push
iret
dec
setno
cmp
cwtl
jnp
shll
les
lcall
clc
mov
es
add
mov
sbb
mov
xchg
nop
xor
bound
lea
pusha
xor
js
fisttpll
or
jge
or
imul
jg
scas
fcom
into
hlt
jne
mov
arpl
in
adc
xchg
inc
or
push
popf
adc
arpl
not
jle
adc
jnp
aas
sbb
jo
dec
ds
ss
xchg
xchg
jecxz
stos
push
shl
dec
shll
imulb
nop
call
mov
jo
sbb
imul
adc
sbb
cmp
notl
outsb
repz
xchg
neg
mov
js
test
shl
lods
pop
pusha
xor
dec
sar
jmp
out
dec
xor
aam
or
and
fisttpl
add
cmp
imul
inc
into
push
and
stos
cmp
lcall
addss
jl
iret
or
pop
mov
int3
inc
outsb
arpl
mov
cmp
outsb
jp
ret
lret
push
add
lods
sbb
inc
loope
pop
fdivl
lods
leave
mulb
mov
pusha
sub
nop
mov
scas
pop
lahf
movsl
in
sbb
test
xchg
push
or
outsb
ud1
push
pop
or
add
aas
imul
xchg
mov
enter
in
jg
inc
sbb
sbb
xchg
push
push
push
subb
xlat
out
les
bound
sbb
jnp
lods
add
test
pop
dec
or
and
mov
ud2
mov
sahf
mov
mov
pop
or
mov
mov
insb
push
repz
setnp
stos
push
jae
xor
insb
pop
xchg
push
daa
lret
das
pop
dec
mov
in
xchg
decl
inc
les
mov
adc
enter
adc
in
mov
xchg
mov
loop
jge
sub
jmp
inc
loope
ja
mov
jno
xchg
pop
adc
lods
in
addr16
push
mov
push
mov
aas
sahf
add
jp
test
mov
mov
mov
inc
loope
lcall
push
and
insl
in
mov
out
sahf
outsb
push
jmp
lods
scas
fistpll
aaa
addr16
rcrb
shrl
dec
xor
call
jle
jo
inc
fsubs
movsb
jge
and
dec
stos
sub
mov
cs
cmp
add
pushf
scas
jge
call
or
xchg
xor
adc
subl
addr16
mov
mov
cmp
mov
in
call
fs
push
rorl
data16
jl
fdivrl
andb
mov
xor
scas
aaa
scas
sahf
addr16
out
outsb
adc
sarb
ss
sub
xor
sbb
mov
adc
or
out
mov
sarl
mov
lock
jo
js
jmp
packsswb
xchg
dec
std
mov
push
popa
bnd
stos
adc
and
or
pop
cmpsb
or
xor
pop
or
pop
int3
scas
and
andb
fsubrp
iret
and
jno
xor
cmp
stc
lods
lcall
sub
ret
in
enter
pop
mov
jae
push
mov
push
add
lock
outsl
lea
dec
les
push
rcll
leave
dec
sbbl
inc
xor
loope
cmp
nop
sub
insl
iret
jb
add
mov
pop
dec
les
movsl
or
xchg
pop
mov
mov
sub
lcall
loop
loope
rorb
inc
or
pop
mov
xchg
mov
pop
push
rcll
xlat
cmpsb
jge
jl
les
outsl
idivb
outsl
cwtl
mov
out
inc
pop
sti
leave
leave
jae
mov
add
mov
mov
push
ret
sbb
mov
testb
sbb
push
cmp
sbb
out
adc
scas
push
imul
test
dec
out
lea
xchg
ja
in
ret
insl
sbb
push
mov
sub
les
loope
sbb
lea
mov
roll
xchg
inc
notl
rcll
das
insb
in
pop
ds
mov
es
pop
out
xchg
imul
lock
add
in
dec
insl
push
cmc
sahf
jne
ret
sbbb
adc
mov
insb
movsl
js
repz
xlat
insb
aam
pop
mov
ret
sarb
sbb
jl
xor
scas
jge
jecxz
cltd
push
mov
jo
cs
popa
mov
and
jns
cmpsl
pop
mov
rep
push
inc
inc
repz
fs
jnp
or
jecxz
iret
xchg
adc
les
push
int
and
xchg
jg
test
sarb
je
stc
test
idivb
sbb
lcall
in
daa
scas
loopne
mov
aas
add
add
dec
jns
enter
scas
int3
loop
ljmp
jb
mov
nop
mov
jnp
insb
insb
roll
mov
jo
pusha
sub
dec
jbe
mov
dec
cld
push
push
pop
std
ljmp
mov
mov
adc
and
add
ds
jecxz
in
jbe
sbb
fwait
adc
inc
mov
mull
mov
mov
jae
sub
gs
sbb
fists
mov
pop
add
mov
test
sbb
jo
mov
in
mov
lret
inc
mov
mov
sbb
jno
aas
loopne
inc
daa
jns
jg
aad
repnz
icebp
xor
xchg
dec
movsl
add
fwait
lods
or
imul
ret
mov
rcr
das
pushf
and
andb
push
call
jns,pt
insb
aaa
dec
aaa
pop
xchg
sub
mov
pop
dec
sub
xor
mul
push
and
cwtl
enter
xchg
nop
es
push
sub
aam
adc
cmpb
fbstp
nop
xchg
cs
xor
dec
mov
mov
popa
add
movb
rolb
pop
ret
push
hlt
call
ficomps
push
xlat
mov
dec
call
aad
push
inc
mov
mov
push
lret
jae
xor
out
mov
and
leave
push
jp
sti
leave
jns
mov
sbb
aas
dec
cmpl
dec
cmp
cmp
cmp
int3
dec
les
cmpsl
scas
pop
and
fadds
add
pop
fdivrs
outsl
mov
movsb
lahf
incl
ja
mov
out
mov
xlat
jo
push
cli
ljmp
sub
xor
push
dec
ss
aas
in
aaa
inc
pop
mov
ja
ret
mov
add
or
ret
jg,pt
dec
daa
andl
stos
add
jo
fadd
in
clc
mov
cmp
add
cmp
xchg
hlt
sub
pop
les
push
movsl
scas
mov
mov
lret
aam
leave
insl
xchg
mov
mov
orl
lcall
mov
sbb
fsubr
mov
xor
pop
iret
rcrb
push
je
sub
jmp
inc
ficoms
je
aaa
adc
and
dec
adcl
int3
insb
xchg
xchg
loopne
and
adc
pop
pop
fidivrs
fildl
daa
testb
sti
les
inc
fucomi
gs
xchg
jne
jp
mov
imul
loopne
mov
icebp
jae
adc
sahf
jl
rcrl
mov
lcall
and
pop
sti
push
push
jge
push
cwtl
inc
mov
ret
inc
icebp
out
xchg
ret
xorb
and
inc
xor
push
sahf
sbb
ss
adc
movsb
cmc
mov
outsl
jne
adc
pop
clc
add
mov
push
inc
mov
mov
dec
jmp
ljmp
adc
jecxz
fs
xor
fwait
je
jmp
and
out
sub
loope
sbb
mov
xchg
addr16
rolb
js
xchg
mov
add
sbb
andb
jno
pop
mov
imul
pushf
scas
add
push
mov
mov
call
push
jmp
popa
xor
mov
iret
cmpsb
xchg
cli
dec
pusha
jbe
scas
cmp
inc
out
add
or
sub
jo
xlat
jns
ss
inc
pusha
cmp
xor
je
jp
inc
jnp
jmp
lret
xchg
push
dec
clc
mov
mov
mov
xor
dec
adc
mov
mov
jmp
push
xor
cwtl
jbe
push
js
ror
adc
scas
sbb
insl
or
popa
icebp
gs
cmpsb
lods
jmp
je
dec
mov
pushl
sub
jmp
leave
shrl
pop
mov
dec
and
leave
fs
and
into
inc
mov
dec
imul
sbb
cmp
in
scas
jl
test
inc
cmp
inc
xchg
jecxz
lcall
sub
shll
inc
and
ds
jg
lds
sbb
pop
and
inc
sub
test
pusha
or
aas
mov
inc
idivl
inc
enter
xor
cmp
push
ret
jmp
inc
push
adc
jmp
cmp
pop
sti
test
aam
lahf
or
fiadds
inc
mov
and
addb
fnsave
aas
mov
cmp
lock
dec
and
int
not
fwait
ret
push
add
mov
jbe
mov
sub
fnsave
lea
adc
js
call
adc
add
nop
lea
mov
inc
stc
ds
mov
mov
shrl
in
std
mov
mov
jmp
jecxz
mov
xchg
jo
sti
or
sti
data16
mov
mov
jb
shlb
mov
pushw
mov
fisubs
mov
lds
jnp
add
xchg
xor
int
bound
dec
or
ljmp
mov
insl
push
xchg
lret
test
loop
dec
push
mov
data16
leave
cld
repnz
fucomi
loope
shll
jne
inc
sbb
or
push
in
add
push
jae
pop
jg
cmpsl
shll
scas
in
movsb
push
ss
mov
inc
jge
daa
fstps
filds
xchg
hlt
xor
push
movsb
cltd
out
and
push
or
jp
stos
sub
lods
push
out
mov
xor
frstor
xor
pop
out
push
ss
adc
das
or
imul
flds
test
std
les
test
cld
mov
les
sub
dec
movsl
jne
sbb
shlb
lret
lret
fcoms
mov
ja
lahf
mov
xchg
xor
in
push
or
sub
fstl
and
jge
add
or
rcrb
and
adc
rcr
xor
inc
leave
mov
clc
fwait
xchg
mov
xor
adc
dec
sahf
rcrb
popa
cmpsl
mov
dec
push
xor
sarb
popa
out
cmp
xor
mov
sub
push
cmp
add
adc
sbb
xor
inc
xchg
cmp
push
push
jecxz
scas
push
cs
add
movsb
dec
out
mov
movsb
sub
and
sub
pop
xlat
out
mov
js
lods
lods
xchg
std
mov
aam
pop
aam
lods
sbb
xchg
je
pop
and
jecxz
mov
out
sbb
add
and
loope
mov
in
int
pop
mov
xchg
pop
mov
enter
mov
lahf
or
add
aaa
and
pop
cltd
sub
test
mov
fcompl
mov
adc
and
scas
adc
inc
ret
adc
sahf
stos
mov
js
je
loope
imul
scas
shrl
or
add
mov
lret
inc
bnd
pop
and
outsb
add
mov
dec
addr16
push
add
loope
sarb
js
fidivrs
ja
xor
mov
mov
test
cmc
pop
mov
arpl
in
dec
cwtl
out
push
add
pop
dec
aam
dec
nop
jp
les
push
fimull
fsubrs
jle
adc
mov
ss
jo
cli
outsl
pushf
out
add
xlat
icebp
xor
cs
push
pop
xor
iret
jno
mov
mov
arpl
lock
call
inc
lret
shrl
hlt
push
mov
js
lods
mov
cld
sbb
cs
insl
push
sbb
mov
mov
lcall
insl
xor
mov
sub
bound
inc
xchg
clc
jmp
dec
fildll
cmp
cld
sar
int
mov
or
insb
sti
lret
loope
ss
arpl
adc
xchg
mov
rcr
cltd
pop
rcrb
xor
cld
adc
jp
cld
mov
push
aad
movsl
push
jno
mov
fld1
testb
mov
loop
outsl
fs
cwtl
add
jns
out
jg
mov
push
pop
mov
rorl
dec
xor
stos
negl
sbb
pop
sbb
lods
inc
pop
idivl
inc
pushf
adc
jl
ret
push
push
shl
xchg
out
fnstcw
sarl
mov
inc
fsubrs
lret
xchg
sbb
aas
xorl
adc
cmp
push
push
js
fidivrs
push
ret
add
xchg
cmp
and
xchg
test
cmpsl
pushf
or
adc
cmpsl
aam
xchg
stos
aas
adc
repz
popl
pop
std
mov
mov
ss
imul
stos
in
and
cmpsb
popa
loop
adc
push
rolb
mov
cltd
scas
push
pop
add
mov
in
mov
gs
xorl
cwtl
imul
pop
addr16
dec
lcall
push
test
or
gs
lea
push
inc
and
cmp
hlt
mov
gs
popl
dec
add
xor
jle
push
in
mov
lds
fdivs
xchg
push
sbbb
leave
lret
es
bound
popa
lcall
das
loop
jbe
das
cmp
repz
push
push
leave
xchg
repz
sahf
pop
jbe
out
arpl
adc
pop
and
mov
mov
xor
adc
pusha
sbb
mov
test
shlb
in
add
cli
test
out
outsl
test
repnz
test
push
inc
in
in
jbe
push
paddusw
aad
clc
jb
es
cs
and
outsb
jecxz
stos
inc
pop
mov
scas
pop
std
sbb
out
and
in
sbb
imul
jle
push
or
and
xchg
js
mov
cltd
faddl
add
les
add
push
sbb
ret
pop
aas
mov
sub
mov
ja
or
xchg
mov
ret
adc
add
mov
sub
sbb
xchg
cld
data16
nop
fstl
pop
mov
test
repz
pop
scas
push
or
add
mov
mov
or
mov
xor
cmp
cmpsb
mov
jb
dec
aad
loope
loope
repz
jne
and
or
ret
sub
enter
cs
sub
xchg
push
movsb
xchg
shrb
jnp
int3
mov
or
nop
xlat
imul
pusha
add
lret
js
hlt
hlt
cmp
and
cmpsb
test
jp
fmull
jl
or
or
and
mov
lea
add
mov
popa
dec
std
mov
ja
call
xor
adc
ljmp
push
loop
movsb
in
loope
dec
push
or
dec
out
out
je
movsb
shll
aaa
mov
xor
loope
hlt
int
xchg
aaa
dec
push
lahf
dec
lret
pushf
clc
xlat
jb
dec
hlt
xchg
popf
mov
je
push
sbb
or
addr16
jl
xor
push
jg
mov
lds
ret
outsl
icebp
shl
mov
pop
les
stc
adc
lds
test
outsb
mov
movsl
cmpsb
in
in
int3
xorl
aaa
or
sbb
lcall
shlb
mov
jns
push
aad
repz
push
aaa
mov
sub
jns
mov
jo
loop
xchg
xor
mov
xchg
dec
push
and
push
dec
pop
or
jmp
and
or
dec
icebp
lods
loop
jg
sub
lret
jne
sbb
xchg
xchg
je
xchg
out
sbb
in
cmc
nop
ror
aas
shrb
jno
cwtl
mov
movsl
and
out
clc
or
add
les
mov
mov
int3
lds
jo
pop
rcr
sarb
pop
lcall
lret
mov
adc
push
je
pushl
das
cmpsb
test
sub
mov
mov
push
jns
sbb
cltd
out
dec
insl
mov
jb
xchg
dec
lahf
rorb
and
out
jmp
mov
push
mov
out
mov
mov
push
mov
mov
ds
arpl
fists
aaa
dec
pop
add
adc
lret
mov
insb
stos
jmp
mov
jno
nop
aaa
int3
push
push
xorb
popf
jne
arpl
les
push
cmpsb
test
mov
pop
push
movsl
mov
cmpsb
xchg
push
stc
loope
inc
std
pop
adc
and
push
cmp
shl
sbb
push
jb
push
bnd
faddl
dec
mov
inc
iret
adc
sbb
outsl
xorb
test
jp
lret
mov
fisubrl
cmp
adc
inc
push
lret
mov
stc
adc
js
pslld
xchg
mov
insb
xchg
pushf
sbb
xor
push
flds
popa
jp
std
sbb
inc
ret
jmp
xor
jae
dec
mov
hlt
or
or
lret
loopne
mov
fwait
mov
std
add
mov
adc
test
cmpsl
insl
aam
push
push
nop
loop
das
bound
mov
dec
or
and
push
push
or
lahf
inc
adc
test
xchg
xor
leave
xor
ss
jb
jecxz
negl
jnp
pop
aaa
in
and
xor
cs
mul
orb
bound
das
ljmp
lret
push
add
lcall
loopne
dec
sub
ret
repz
push
loopne
push
lahf
xchg
or
mov
pop
adc
cmp
sbb
jl
test
sub
sbb
add
insl
sbb
daa
push
in
cmc
and
adc
fwait
imul
sbb
lcall
or
or
inc
in
repnz
or
jbe
test
mov
mov
or
jb
loopne
mov
xchg
cmp
stos
or
fcmovnb
inc
scas
xchg
mov
ss
and
dec
lret
or
ficoms
pusha
ds
lock
xor
mov
out
in
adc
aad
inc
sub
ds
sti
sbb
pop
push
scas
xchg
stc
bound
push
leave
sub
push
repnz
cmp
jmp
mov
out
jge
lds
push
cmc
out
jge
mov
sbb
fadd
nop
test
ds
ret
lcall
add
cmp
jbe
sbbl
cmp
adc
jb
sti
mov
adc
xor
or
mov
hlt
std
pop
pop
cmp
sbb
cs
fs
std
dec
sub
clc
add
inc
in
jmp
aaa
imul
cld
mov
sbb
lcall
aas
out
loopne
cmp
fimuls
popa
adc
and
lods
jbe
and
test
pusha
sbb
push
movsl
pop
sbb
shl
lea
push
jb
jb
loopne
push
dec
arpl
push
fcompl
pop
loop
das
adc
add
mov
cli
jg
sbb
enter
shll
movsb
loopne
sbb
xor
test
mov
mov
sbb
fmull
sbb
aad
and
xchg
mov
pushf
scas
outsb
add
aas
dec
xchg
xchg
inc
int
and
mov
pmaxsw
adc
dec
mov
imul
mov
hlt
push
jbe
shr
imul
lret
mov
pop
mov
cmpsb
loope
xchg
and
lret
jo
jecxz
sbb
jns
jge
aaa
xor
cmpsb
jbe
cmpsb
mov
lret
sub
dec
cmc
outsl
or
imull
int
dec
sub
cwtl
dec
nop
mov
test
shll
push
insl
sti
cli
mov
rorl
dec
imul
and
gs
mov
inc
pop
push
sbb
jg
cmp
cmp
pop
xorl
popa
dec
lods
stc
iret
rcr
lods
cld
fiadds
jmp
popf
sarl
addr16
cli
sub
scas
iret
hlt
cmp
mov
enter
push
arpl
ret
jnp
lret
iret
dec
or
mov
test
imul
xor
cltd
iret
daa
insl
inc
jmp
mov
xchg
in
ds
jb
cwtl
mov
fmul
xchg
mov
fisttpl
jo
pop
inc
int
jecxz
sub
adc
xchg
sbb
add
mov
jno
or
jmp
imull
stc
sub
pop
pushf
sbb
jnp
mov
pop
cld
pop
aad
sbb
sub
adc
push
or
sub
adc
mov
std
data16
xor
mov
dec
dec
dec
in
pusha
insb
stos
movsb
mov
mov
cmpsb
out
xchg
call
outsl
dec
add
push
jecxz
ljmp
push
int
je
jmp
inc
into
and
pop
into
or
jns
nop
ljmp
ja
sahf
dec
cld
jo
dec
clc
xlat
push
dec
pop
sbb
icebp
enter
test
inc
js
push
and
pop
lret
jno
jmp
inc
mov
lret
sbb
in
fucomi
clc
add
mov
pop
sbb
add
add
mov
xchg
lcall
sti
mov
lods
mov
sahf
decb
hlt
vfpclasspd
movl
mov
adc
add
cmp
int3
test
push
push
into
pop
sub
sub
jg
pop
sbb
mov
jb
imul
roll
push
xchg
adc
shll
loopne
dec
cmc
mov
rclb
adc
das
movsb
or
xchg
push
icebp
jg
fnsave
pop
dec
mov
mov
xchg
lret
shrb
in
xchg
orb
int
imul
mov
xchg
mov
or
cmc
out
gs
iret
lds
outsb
sub
sub
xor
cmpsl
pop
jg
nop
xlat
sahf
ds
lds
adc
ret
hlt
pop
cmc
mov
fcmovb
adc
cmp
and
ret
push
aad
xor
movsl
sbb
int
adc
push
xor
imul
xchg
les
enter
sub
stos
xchg
icebp
fcmovnu
pandn
stos
jne
mov
test
lock
push
cmpsb
loope
mov
repz
adc
fwait
xchg
hlt
enter
xchg
ret
mov
adc
push
mov
rcrb
in
mov
xchg
and
movsl
jg
or
enter
aad
or
daa
pusha
mov
insb
faddl
leave
cltd
mov
pop
pop
push
jnp
cld
xor
cmp
outsl
pushf
xchg
sbb
mov
call
out
out
or
xor
pop
add
in
std
xor
jmp
imul
popa
fsub
stc
mov
jb
test
lea
push
test
sbb
mov
mov
or
stos
adcb
pop
das
je
inc
inc
dec
lahf
mov
jp
or
xchg
lret
mov
daa
popf
test
sub
dec
flds
leave
sub
enter
fs
and
mov
xlat
add
fucomip
jge
hlt
scas
into
dec
mov
xchg
cltd
repnz
pop
or
jl
or
pop
outsl
sti
sarb
or
repz
sbbl
sub
adc
inc
decb
in
inc
mov
adc
jae
imul
lret
call
out
lcall
fistps
cs
test
ficomps
or
mov
sub
arpl
pop
inc
xor
or
mov
bound
adc
movsb
pusha
stc
xor
jb
sub
and
fisttpl
inc
jo
ret
icebp
or
jmp
jl
aaa
fnsave
push
popf
cmp
decl
nop
lds
mov
mov
and
loop
lret
xor
repnz
pop
jae
aas
popa
jl
cmp
pop
and
pop
out
pushf
mov
insl
lock
sub
jmp
adc
jno
stc
xorb
icebp
loope
lret
sub
jg
pusha
mov
sbb
shll
imul
inc
movsl
mov
pop
fidivrl
push
cs
loopne
int3
and
and
cmpl
dec
ficoml
dec
test
adc
jle
imul
in
xor
inc
stos
leave
add
cmp
push
or
sub
fdivs
call
xchg
add
push
dec
shr
popf
test
test
daa
dec
xchg
xor
mov
mov
adc
pusha
and
ss
pop
dec
mov
adc
sbb
std
pop
test
mov
jp
jge
js
push
mov
push
nop
push
mov
in
pop
in
xor
jp
aad
addr16
outsl
pop
ret
cwtl
lretw
pop
pop
ficomps
mov
mov
fisubrs
add
fwait
xor
cli
mov
outsb
push
fildl
das
std
push
sub
cmp
shrl
ret
fs
push
pop
jns
mov
mov
cmp
dec
fistpl
ja
jmp
in
in
cltd
jns
outsl
push
imul
scas
inc
repnz
jmp
sub
xlat
iret
jns
scas
out
push
xchg
ja
pop
xor
sbb
cltd
es
int
lret
lea
inc
call
dec
pop
pop
adc
adc
jp
fxch
sbb
sbb
push
and
add
fisttpll
push
aam
js
fildll
sarb
push
orl
mov
std
and
adcl
cltd
jle
aas
pop
iret
mov
jbe
daa
mov
sub
out
int3
out
cmp
mov
push
push
jno
call
push
xor
cmp
and
push
or
lahf
test
ja
sub
or
xchg
pop
out
sbb
mov
loopne
popf
scas
outsb
stc
cmp
jae
filds
dec
adc
push
faddl
mov
daa
sbb
mov
lock
sahf
xchg
leave
push
jb
push
stos
dec
sarl
or
or
into
mov
fwait
std
push
xchg
fidivl
mov
jge
mov
ljmp
push
mov
dec
jmp
or
adc
dec
mov
stc
mov
imul
sarl
aas
dec
shlb
xchg
sarl
jmp
loope
lret
cli
ds
in
mov
in
inc
xchg
cmp
jg
and
notl
popa
pop
mov
sbb
pop
or
jl
cwtl
dec
outsl
int3
cmp
or
and
adc
pop
nop
insb
xchg
sub
leave
test
bnd
sub
cmp
icebp
ror
cld
out
mov
and
loop
sarb
xchg
aaa
arpl
xchg
add
aas
jb
or
pop
push
repz
cmc
sbb
or
xchg
and
adc
mov
push
dec
sbb
aam
mov
stc
push
mov
push
mov
xchg
mov
fistpl
movl
mov
adc
lock
dec
repz
movsb
jmp
imul
mov
les
push
fs
loopne
pop
pusha
push
inc
xchg
jg
stc
decb
imul
add
inc
mov
ja
sbb
xchg
test
cmp
imul
mov
ljmp
into
mov
in
pop
cmp
adc
cmpsb
jmp
pop
mov
shl
lea
or
shrl
jmp
push
lock
xchg
dec
xor
dec
dec
lahf
sub
sbb
aaa
dec
pop
sbb
out
stc
outsl
fidivl
out
push
mov
push
or
int
stc
push
push
xchg
daa
push
nop
and
and
pop
shl
filds
loopne
pop
push
je
jge
and
mov
shl
repnz
das
and
or
repz
jg
aaa
inc
aaa
ljmp
jo,pn
cmp
sbb
lods
sub
pop
pop
incl
dec
cmp
mov
mov
pop
sbb
jge
push
es
and
out
sbb
lods
aas
and
mov
sbbb
pop
cmp
fistps
ret
cmp
xor
or
sub
imul
or
jo
mov
inc
inc
psubb
pushf
cs
lret
push
inc
imul
call
and
sub
jg
arpl
mov
xchg
sub
je
dec
pushf
into
jl
inc
cld
add
mov
xchg
add
mov
xchg
aaa
roll
shll
fldenv
popf
cs
fsub
xor
push
fists
inc
subl
cmc
cli
scas
or
popa
add
jo
rcrl
or
loope
mov
jb
es
sahf
nop
add
inc
mov
divl
repz
test
pop
adc
or
mov
adc
adc
and
lcall
pop
inc
inc
push
fsubrl
pop
fstl
or
or
cs
std
mov
or
xor
xor
iret
enter
mov
pop
xor
loop
imul
push
dec
das
popf
inc
dec
push
ds
xchg
cs
pop
add
in
mov
test
adc
repz
pop
pop
hlt
fisubl
sbb
scas
int3
rorl
pop
incl
outsb
jecxz
out
mov
cwtl
fcmovne
iret
dec
sbb
push
xchg
adc
xchg
mov
add
pop
into
shlb
cmp
jge
test
sub
hlt
inc
lds
adc
outsl
fs
and
out
in
cld
jae
dec
shl
stc
push
dec
adc
in
mov
inc
push
xchg
ja
sti
or
scas
cmp
inc
jge
outsb
outsb
sbb
or
cmp
ja
cmp
lret
inc
lret
mov
pop
xorb
or
and
mov
test
xchg
into
mov
adc
ret
cli
mov
mov
mov
and
dec
jl
sub
push
call
mov
xchg
dec
dec
test
xor
push
test
inc
xchg
movsb
add
pop
dec
cmp
inc
pop
inc
pop
int
dec
ffree
and
aam
push
cs
add
in
scas
push
dec
mov
push
cli
add
das
pop
mov
push
push
into
aad
ljmp
sbb
test
sbb
loop
and
inc
dec
fists
shrl
mov
mov
lahf
sti
imul
fstpl
imul
inc
in
sub
call
in
sbb
inc
inc
mov
pop
or
adc
test
jge
mov
enter
ret
call
pop
aas
inc
gs
pop
nop
jae,pn
adc
or
or
gs
xor
test
mov
out
jb
or
fsubr
sub
push
mov
loop
movsb
pop
jns
jne
adc
xchg
jmp
addb
movsl
push
std
pop
add
mov
rclb
aad
or
adc
xchg
rorl
jns
mov
mov
jns
dec
sahf
jecxz
pop
cs
adc
les
xor
aad
mov
xor
mov
mov
inc
fs
sub
adc
ret
mov
repnz
xorb
hlt
push
adc
pop
nop
sub
test
mov
mov
push
add
popf
lds
cmp
fs
test
cmp
fwait
and
or
mov
push
and
push
repnz
test
dec
data16
dec
push
call
out
or
lcall
mov
jmp
movsb
adcl
loopne
aaa
pop
jno
leave
push
sbb
xchg
loopne
cli
fisubl
enter
push
movsb
pop
rcr
mov
mov
jae
mov
out
rcll
cld
or
push
dec
popf
cmp
gs
dec
hlt
push
frstor
and
lret
clc
xchg
scas
jp
cmp
pop
push
dec
and
dec
pop
ja
scas
push
out
jb
stos
jns
ret
mov
or
xchg
mov
icebp
rcll
adc
std
mov
xor
jae
inc
icebp
in
sub
xchg
sbb
or
mov
or
or
adc
sbb
xchg
push
inc
lcall
and
dec
jmp
ss
ficoms
clc
lret
inc
call
or
mov
test
jl
inc
pminub
das
pop
cmp
fcoml
aaa
movsb
mov
ja
sub
adc
out
cmp
imul
jno
clc
inc
xchg
sbb
adc
js
not
decb
sar
pop
in
sub
and
push
popf
inc
xor
jne
popf
cmp
repnz
lret
sub
xor
cli
sub
dec
xor
push
lahf
les
loop
int
insb
ret
sbb
push
push
ss
test
iret
aaa
xor
aad
ss
and
dec
fistps
and
or
dec
inc
pusha
fmuls
or
xor
push
xchg
xor
pop
insl
xor
cmp
pusha
lret
push
pusha
and
ror
lods
inc
fisttpll
push
outsb
inc
inc
movsb
aam
push
cmpsb
inc
testb
fisttps
addr16
xchg
scas
in
pop
nop
jecxz
mov
in
mov
dec
sub
or
dec
xlat
xchg
data16
aad
sbb
sub
out
fistps
insl
je
lods
mov
cvtps2pd
aad
dec
out
shlb
jb
xchg
subl
movsl
and
mov
jbe
lods
fisubs
pop
or
dec
das
dec
sar
fstps
pop
sbb
addl
scas
stc
or
add
pop
cltd
or
mov
cmp
sahf
xor
pop
jmp
shrl
mov
ret
lea
aaa
fwait
push
cmpsb
jae
cwtl
bound
inc
or
xchg
mov
inc
out
enter
push
scas
cmpsb
scas
xchg
in
push
mov
cs
hlt
jb
xchg
xchg
inc
dec
mov
insl
sbb
cld
mov
je
in
icebp
idivl
inc
add
sti
daa
dec
mov
pop
xor
shlb
mov
jae
out
mov
jne
inc
add
or
cmp
mov
gs
and
pop
jb
pop
xor
aas
cmp
mov
cltd
pop
xchg
ds
mov
dec
push
sub
stc
cmc
enter
loopne
jae
cmpsb
ror
incl
lcall
xchg
cmp
push
fwait
dec
pop
sub
and
in
cmpsb
push
mov
andl
lock
adc
addr16
mov
xchg
loope
pop
sub
xorl
loope
lcall
and
mov
test
iret
js
ret
inc
cmpsl
xchg
and
jl
movsb
jb
sub
je
add
mov
shr
cltd
sbb
xchg
ds
mov
movsl
daa
xchg
subb
pop
add
cmp
mov
in
jl
sub
ljmp
push
xchg
arpl
filds
mov
negl
mov
jmp
push
mov
shll
push
pop
jg
jns
inc
jae
mov
mov
xor
ret
pusha
inc
std
loop
mov
shll
lcall
mov
lret
push
stc
test
push
test
bound
add
push
loopne
dec
jmp
sub
lds
add
push
lods
xchg
loop
cld
sub
repz
addr16
ficoml
dec
mov
push
mov
mov
push
jns
movb
xor
clc
jne
test
test
sbb
cmp
rcl
sub
mov
jmp
sub
mov
adc
pusha
lret
sbb
roll
in
xor
shll
add
jbe
mov
es
loope
add
inc
dec
retw
addb
adc
test
iret
pop
sub
push
jne
or
stos
std
xchg
lahf
in
sub
mov
push
loop
cmp
adc
mov
dec
dec
add
ss
scas
lds
lahf
ror
jmp
cmp
jle
pop
stos
fmul
add
lret
inc
and
fdiv
and
xchg
mov
bound
inc
push
sbb
loop
pop
insl
test
aam
xchg
cmpsb
cmp
add
in
sub
shr
dec
push
mov
repz
xor
dec
jne
pop
jecxz
rclb
das
sbb
sub
fistps
in
int3
jnp
mov
and
lret
hlt
jne
add
add
gs
out
and
dec
addb
or
and
in
scas
cmpsl
fistps
and
mov
mov
outsb
neg
js
out
popf
cld
sub
sbbb
fwait
dec
mov
push
in
fisubs
lds
xor
mov
cwtl
lcall
clc
or
leave
push
xor
mov
jnp
jge
jp
pop
cmpsb
in
inc
scas
mov
push
lods
in
push
sti
lods
andb
jmp
into
lahf
ret
xor
leave
pop
cmova
sub
push
rolb
inc
and
arpl
paddd
nop
pusha
dec
and
cmp
ret
push
test
mov
mov
fisttpll
fs
test
or
xchg
push
ficomps
sahf
les
mov
mov
inc
testb
xor
lds
insl
scas
cmpsl
xor
bound
insl
dec
lret
das
dec
cwtl
xor
mov
cli
jae
xlat
aaa
fldl
ljmp
aas
testb
mov
daa
mov
pop
pop
iret
aam
sub
inc
clc
iret
fisubrl
test
lret
mov
add
add
iret
adc
in
dec
arpl
lods
jno
daa
notb
rcr
les
cwtl
aam
arpl
mov
add
add
push
ret
jb
pop
dec
push
jg
pop
js
pop
jns
jg
push
and
push
in
adc
push
xchg
mov
push
movl
inc
jl
js
repz
jae
out
arpl
inc
testb
out
out
rorl
mov
and
xor
add
lods
sbb
stc
mov
dec
pop
cli
xchg
call
add
xor
sbb
into
sbb
xchg
std
scas
xchg
enter
add
lahf
orl
adc
test
mov
insl
mov
cld
mov
lods
enter
adc
add
movsb
jo
aad
inc
mov
test
and
cmpsl
add
adc
adc
pop
fmuls
or
hlt
out
adc
jmp
ret
xor
jne
push
call
jg
adc
and
outsl
pop
mov
je
inc
mov
pop
notl
and
fsubl
ret
jb
hlt
es
xor
int3
lods
and
pop
mov
je
mov
sbb
pop
sub
popf
rorb
mov
or
je
in
sbb
ret
cmp
aam
je
or
xchg
js
daa
lret
xchg
pop
or
data16
jnp
test
jge
pop
and
in
in
mov
jo
fwait
pop
jle
test
mov
adc
mov
addr16
or
sbb
inc
sub
or
andb
test
cmp
repz
js
in
cwtl
push
cs
or
dec
lahf
addr16
ds
scas
or
xor
clc
add
lret
mov
xchg
push
out
xchg
push
leave
dec
mov
jg
sbb
fistpl
imul
clc
or
pop
cwtl
add
sub
mov
jle
insb
out
sahf
mov
scas
fwait
ds
and
pop
xor
add
fs
dec
or
loope
jl
inc
mov
adc
lea
adc
jecxz
les
mov
cmpsl
shll
scas
dec
fs
and
xor
pop
sbb
je
inc
xchg
leave
push
jo
jg
out
sbb
add
outsl
imul
push
fdivl
sahf
push
rclb
dec
inc
icebp
xchg
dec
fidivl
hlt
ljmp
mov
das
addb
and
cwtl
mov
mov
and
dec
mov
lret
enter
movsl
sti
jle
imul
inc
aam
pop
addr16
dec
mov
stos
cltd
ja
loope
or
jg
xchg
pop
jmp
add
test
test
imul
stos
popa
mov
sbb
push
push
icebp
cwtl
out
or
sub
sub
shll
adc
rcr
sbb
mov
int3
pop
mov
lret
xchg
les
lahf
sbb
jmp
lret
filds
push
je
bound
icebp
lcall
fldt
jo
sub
pop
xchg
or
fsubrp
arpl
sbb
sbb
pop
dec
jb
adc
sbb
mov
inc
in
dec
or
sahf
scas
rolb
cmpb
mov
adc
xchg
fldcw
call
push
or
lods
test
mov
jl
sub
mov
sub
or
shlb
push
jo
xchg
mov
rorb
dec
js
mov
aad
scas
and
lds
sub
jg
adc
mov
mov
sbb
popa
fimuls
or
cli
sti
xchg
jl
aaa
push
xor
ret
inc
lret
and
imul
imul
outsb
xor
iret
loope
subl
mov
inc
jmp
xlat
out
pop
rcl
pop
rcrl
inc
push
pop
cli
and
jbe
xor
imull
fisubl
ljmp
hlt
sbb
cwtl
push
imul
lods
cs
push
inc
dec
xlat
aas
dec
ljmp
jge
stos
int3
mov
std
mov
xchg
lret
adc
xchg
or
mov
aaa
gs
jle
and
xorps
cmp
std
adc
js
adc
cld
into
arpl
adc
xor
and
adc
pop
ret
add
mov
inc
push
sub
jmp
jno
jbe
adc
sbb
lahf
fmull
push
test
imul
in
and
xchg
inc
jnp
in
xchg
xor
fimuls
cli
mov
cmpl
scas
in
pop
mov
orl
adc
mov
mov
add
cmc
fs
gs
and
jl
jbe
fisubs
or
popl
add
cli
xor
stos
sub
or
mov
xlat
mov
icebp
test
and
adc
or
xchg
out
das
jo
xchg
jnp
sbb
stos
jnp
movsl
in
sbb
sub
push
das
and
add
out
fmulp
adc
imul
sbb
cs
std
xchg
ret
xchg
push
popf
xchg
xor
add
imull
sbb
leave
or
aam
call
out
pop
and
icebp
cmpsb
popf
lret
mov
ljmp
dec
push
out
cmp
loopne
ja
data16
std
insl
repnz
jle
ljmp
mov
sub
push
cmp
popf
jle
sbb
inc
scas
mov
pop
sub
pop
or
push
bound
xchg
idivb
push
cmp
rol
xor
adc
inc
cltd
out
adc
xlat
repnz
mov
aaa
test
cltd
sbb
dec
aad
mov
lds
mov
push
ds
icebp
mov
mov
sbb
xor
xchg
lret
fwait
daa
sub
cmp
lock
mov
stos
add
dec
xchg
cmc
adc
out
push
xor
inc
add
das
out
icebp
push
scas
loope
mov
loope
in
adc
mov
aad
int3
popf
inc
fsts
insb
mov
mov
and
mov
fstpl
lds
outsb
xor
imul
xor
inc
dec
push
pop
sarb
push
fwait
das
pop
dec
mov
jnp
cli
xor
push
mov
test
hlt
xchg
sbb
and
fsubr
xor
jbe
mov
pusha
arpl
out
mov
stc
shll
xchg
fs
divb
addb
fxch
or
lds
jno
push
add
les
pop
sub
je
mov
xorb
lahf
push
and
mov
scas
push
fwait
dec
push
pushf
pop
pop
repz
std
idivb
lea
daa
pop
or
mov
jno
in
dec
mov
pop
push
add
mov
movsl
movsb
data16
lret
movsl
out
mov
jle
nop
push
dec
sbb
or
mov
xor
mov
lea
cmpb
xchg
in
test
mov
test
test
repz
ss
mov
stos
dec
test
mov
jge
shlb
cmp
testl
push
cmp
cmp
ret
jp
mov
dec
lahf
push
mov
mov
cmp
aaa
les
mov
pop
insl
cmpb
jb
push
loopne
push
sub
inc
dec
icebp
lcall
jne
jns
jo
dec
ss
sbb
out
subb
adc
push
sub
pop
lret
push
dec
das
int
aam
mov
icebp
xor
movsb
enter
aaa
loope
xor
inc
mov
or
sbb
push
ds
jp
jge
fildll
imul
daa
fnsave
add
lret
movsl
pusha
and
test
aaa
dec
leave
cmp
sub
sarl
lds
xor
mov
popf
jae
cmp
xchg
xor
or
aam
xor
mov
daa
mov
pop
fdivrl
adc
shlb
bound
lods
jecxz
or
data16
pop
aas
mov
fcomip
and
stos
cmp
idivb
enter
push
insl
cwtl
int
and
push
data16
xchg
adcl
notl
jmp
popa
xlat
cmp
cmp
mov
jg
push
cld
mov
or
cmp
xor
outsl
push
ret
lock
push
sbb
jecxz
pusha
mov
mov
push
in
popf
fildll
in
call
xor
xchg
mov
pushf
mov
adc
lock
pop
add
ss
icebp
ljmp
call
or
rorl
jge
pop
xchg
mov
lock
and
outsl
push
roll
xchg
nop
inc
aad
dec
test
push
xor
idivb
cmp
sarl
aad
or
in
xor
dec
lret
push
in
lahf
shrb
xchg
cmp
pop
outsl
sbb
lods
je
inc
xor
jae
lret
jecxz
adcb
testl
mov
mov
loope
in
sub
sub
lea
aas
imul
push
scas
push
sub
sbb
cmp
aad
stos
mov
xor
sub
ljmp
mov
mov
cmp
aad
in
jmp
sub
add
xor
fsubrp
outsl
xor
adc
dec
add
repnz
push
add
icebp
sub
cmc
inc
mov
lods
pop
jmp
pop
sahf
jae
inc
xchg
lret
jge
out
jne
dec
repz
test
fcmovbe
pushf
jbe
outsb
pop
lock
add
aas
inc
into
nop
data16
push
pop
pop
test
sub
add
pop
xchg
mov
out
sbb
ret
sti
mov
and
pop
cmc
jecxz
daa
cmpsb
aas
mov
imul
rclb
cmovge
cmp
out
pop
fistl
ljmp
mov
inc
sbb
aam
dec
cmc
or
mov
cmp
insl
add
rol
insb
stos
xchg
sbb
hlt
bound
aam
popf
and
sbb
xor
and
ljmp
into
outsl
dec
jno
pop
adc
js
xchg
jecxz
xchg
inc
inc
jbe
pop
jge
sub
and
xchg
arpl
cltd
fistpll
js
jns
arpl
cmp
mov
decb
jnp
jo
enter
repnz
mov
rorb
add
sbb
test
sbb
repz
aaa
js
cmp
jg
iret
cmp
pop
jb
and
scas
or
orl
mov
test
fildl
int
es
fildll
cmp
aaa
and
test
fnstcw
push
outsb
jmp
clc
cld
mov
sbb
stc
xchg
test
xor
jp
int3
cli
hlt
adc
pop
pop
jle
inc
add
in
into
cltd
push
loop
inc
repz
out
cltd
pop
cld
jno
mov
xor
in
add
ds
repnz
push
dec
and
test
xchg
dec
adcl
cmp
mov
repz
adc
mov
pusha
sub
adc
pop
inc
mov
adc
add
and
sbb
fsubrs
sbb
mov
push
in
push
repz
xchg
jno
jae
add
bound
push
into
xchg
sahf
mov
jb
and
and
jae
cmp
mov
movl
insl
iret
push
lock
lahf
jecxz
dec
sub
xchg
iret
les
push
sbb
cld
jb
dec
fadds
adc
push
pop
or
mov
loopne
outsb
hlt
clc
repnz
movsl
mov
pop
scas
scas
dec
and
enter
cmpsb
mov
lods
movsb
int
sbb
push
mov
dec
repz
dec
test
xor
das
test
mov
xor
xor
icebp
mov
outsl
jmp
nop
sbb
adc
stc
xchg
inc
popf
mov
outsl
and
or
leave
mov
mov
and
dec
mov
rcrl
decl
pushf
xchg
roll
mov
xor
push
or
not
fmuls
mov
test
sub
sub
cmp
dec
daa
repnz
sahf
scas
iret
xchg
negb
lock
aaa
cmp
or
lea
mov
inc
jne
repz
mov
jo
cwtl
add
dec
or
icebp
std
loope
dec
sbb
mov
push
pushf
into
imul
cmp
or
sub
subb
jno
lcall
sub
jmp
lods
push
fdivl
rolb
stc
pop
or
push
nop
pop
and
dec
fiadds
fists
rcll
mov
and
notl
clc
popa
lea
fdivr
insb
lea
inc
sbb
lret
leave
int3
mov
push
orb
push
push
pop
daa
fisttpll
sub
adc
dec
stos
js
jns
or
lods
pop
sbbl
xchg
andb
shl
lods
addr16
aad
lea
int
ja,pt
lahf
fcomps
cmp
bound
std
vunpckhpd
add
lret
out
add
pop
adc
lods
and
mov
test
adc
dec
insl
lock
es
or
popf
addr16
jg
sahf
je
push
sbb
xchg
mov
push
cs
jns
push
xor
dec
jns
push
fcoms
push
out
lock
pop
subl
or
add
lcall
adc
cltd
imul
push
bswap
push
shll
xor
pop
mov
adc
lock
pop
pop
mov
pop
mov
xchg
clc
dec
sbb
cmp
xor
in
jle
mov
or
stos
in
xchg
loop
pop
inc
jae
inc
nop
mov
cmp
sub
pop
or
cld
push
push
cld
jg
xor
pop
bound
dec
sub
lcall
sbb
in
clc
cs
andl
jo
pop
out
push
rclb
scas
in
pop
sbb
xor
push
mov
mov
or
mov
loope
aam
inc
repz
jle
cs
pop
iret
std
adc
je
orb
pop
inc
push
xchg
cwtl
jmp
pop
and
dec
xor
aaa
dec
pop
fbld
jg
inc
jno
jmp
inc
add
pop
call
mov
jmp
pop
ljmp
ds
adcl
sbb
adc
lock
push
sub
dec
cltd
xor
in
jo
mov
fisubrl
sbb
push
xor
inc
inc
push
or
sub
pop
or
xor
pop
add
jo
ja
into
stc
js
add
jmp
sarl
dec
hlt
out
std
jmp
cmp
es
xor
sub
stos
cld
in
loope
jae
loope
pusha
jg
into
xchg
jg
fwait
lea
test
jb
test
xchg
mov
jecxz
insl
jge
mov
mov
mov
cmp
shrb
insl
add
fiadds
sti
test
aam
fsubs
pop
dec
jae
cmp
insb
ljmp
dec
jl
jno
mov
xchg
movsl
cwtl
and
cmp
or
sbb
push
gs
in
repz
pop
pop
call
sarl
adc
ss
jo
or
mov
repz
jmp
addb
imul
std
jno
in
xor
jl
pop
imull
mov
adc
lahf
xchg
cmp
shrb
insl
clc
or
push
adc
jmp
fimull
mov
fsubrs
inc
cli
jns
add
add
dec
movsb
adc
inc
pop
shrl
pusha
adc
xchg
inc
mov
hlt
mov
cmp
pop
in
pop
hlt
fs
sub
ret
fcom
int3
push
dec
adc
int
dec
cld
xchg
sar
fs
pop
push
es
jmp
xor
dec
push
iret
cmp
das
jae
push
out
aam
mov
cmp
and
icebp
bnd
mov
in
cmp
jmp
movsl
fld
leave
inc
xor
mov
inc
loopne
nop
in
icebp
jmp
mov
ja
sarl
fcoml
enter
lods
add
adc
shlb
jge
xor
xchg
and
les
sub
dec
in
mov
jae
in
ds
adc
mov
outsl
js
pop
xchg
cwtl
xchg
aam
cmpsb
pop
mov
mov
cltd
pop
push
xchg
pop
outsl
in
sti
popl
xor
mov
fdivp
into
inc
sub
mov
aam
cmpsl
stos
pop
ja
sbb
in
mov
cmp
adc
mov
cmpsb
jecxz
add
daa
adc
sub
scas
xchg
xchg
jo
lret
inc
ljmp
xchg
sbb
jbe
outsb
scas
es
and
pusha
mov
mov
adc
test
xchg
jecxz
out
sbb
imul
add
sub
icebp
xchg
leave
jbe
pop
xlat
jo
mov
fdivrl
pop
inc
pop
mov
adc
adc
add
fsubs
push
adc
jp
lods
xor
inc
insl
mov
mov
jae
dec
sub
out
push
lcall
es
or
cwtl
inc
pop
add
inc
cwtl
cmp
mov
mov
testb
sub
xchg
pop
divl
jmp
dec
movsl
bound
and
push
jbe
add
xor
push
jge
inc
shr
adc
int
sbb
into
add
es
mov
inc
and
inc
mov
pushf
daa
enter
sbb
jns
cmp
pop
sbb
cltd
sahf
add
pop
mov
inc
or
int3
sub
add
push
lret
and
or
and
lcall
push
outsl
mov
fsubl
pop
test
sti
jmp
xor
adc
pop
hlt
cmpsl
pop
mov
pop
fistpl
imul
push
pop
mov
loope
sldt
bound
mov
test
das
jge
add
ss
in
and
fsubs
pusha
inc
fldt
mov
icebp
mov
jmp
sub
pop
lret
ss
mov
es
fstl
scas
mov
push
mov
in
pop
sbbb
pop
nop
lahf
pop
dec
rorb
sbb
mov
dec
nop
sub
outsl
les
es
add
mov
dec
loope
ficompl
xchg
lea
es
mov
mov
dec
pushf
in
imul
adc
lcall
testb
mov
adc
jp
fs
inc
or
fistl
dec
jae
icebp
pop
xchg
mov
jns
jmp
add
cmovg
jl
sahf
lock
inc
shrl
sahf
jb
js
jnp
in
cmp
mov
sbb
data16
sbb
xor
sarb
jb
out
mov
push
sub
loope
add
arpl
adc
inc
inc
cs
std
and
and
add
mov
jne
loope
lret
jg
ret
cmp
repz
xchg
mov
jmp
and
packssdw
dec
dec
push
push
scas
xchg
enter
xor
or
push
in
rolb
fmull
dec
sbb
pop
cmp
mov
xchg
inc
and
jne
jg
mov
fidivl
sbbl
push
pop
clc
ja
push
imul
push
mov
cmc
jnp
mov
leave
pop
popf
cmp
sbb
pushf
cmp
lods
jno
fnstcw
push
les
push
out
les
sar
xchg
dec
imul
xchg
cmp
dec
ret
adc
nop
xchg
xchg
incb
or
jno
gs
lds
or
mov
adc
pop
push
jle
call
sbb
mov
xor
push
idivb
pop
mov
dec
sub
cmp
push
mov
es
test
js
adc
inc
dec
sti
sub
test
cltd
mov
loope
add
or
mov
xchg
lods
cld
cmp
xlat
pop
sub
lahf
inc
or
cmp
xor
mov
cmpsl
gs
lea
cwtl
in
mov
cs
dec
mov
mov
pushf
jle
inc
scas
fcomip
inc
adc
or
mov
out
ss
jnp
sbb
ficoms
ds
lods
jmp
sub
test
or
mov
cli
pop
scas
bound
jns
ljmp
jb
and
rcrl
jno
inc
fstl
fmull
fs
pushf
outsb
xchg
shl
jno
out
mov
jb
scas
fidivl
jmp
cmpsl
push
inc
sub
sbb
jecxz
mov
xor
pushf
pop
and
test
sub
mov
rcrl
mov
in
test
repnz
xchg
test
inc
jecxz
in
cmp
pusha
or
mov
dec
xchg
mov
jno
push
bound
dec
scas
mov
add
test
movb
lcall
in
pushf
jne
pop
add
pusha
mov
mov
xchg
push
xchg
push
movb
mov
ljmp
jecxz
or
scas
scas
pusha
fiadds
ret
mov
popa
and
push
xor
mov
pop
loope
je
inc
test
jne
adc
inc
mov
fwait
lods
fadd
dec
push
jp
loop
in
cmp
xchg
sub
stc
lret
dec
push
xor
outsl
jns
add
push
mov
lods
cwtl
gs
loope
pop
inc
popf
add
inc
lahf
xor
sbb
loop
int
into
mov
sarb
sbb
aam
jns
les
jmp
call
or
push
roll
test
inc
mov
push
inc
subl
jo
mov
adc
leave
out
dec
test
negl
lret
icebp
lahf
dec
mov
nop
pop
enter
sti
lods
mov
add
sbb
ja
push
sub
sbb
cld
jge
mov
rorb
sub
inc
lret
ret
pop
in
and
sahf
xchg
xchg
repnz
call
sbb
jle
loop
mov
fisttps
cmpsb
andl
pop
lcall
mov
movl
mov
gs
push
add
test
not
adc
int3
xor
ja
and
std
inc
cs
jge
add
das
mov
iret
add
jle
and
aaa
push
cltd
notl
pusha
nop
fcmovu
adc
testl
add
rcrl
mov
int3
sbb
push
mov
dec
dec
jo
or
mov
call
mov
xor
js
mov
mov
push
jno
jno
in
insl
in
icebp
stos
lods
inc
xor
push
in
shrl
dec
and
mov
mov
shlb
bound
test
push
int
mov
sub
inc
cmp
cltd
ficompl
pop
adc
out
hlt
fcmovb
jo
and
cmp
into
pop
int3
mov
pop
out
imul
ret
dec
pop
sub
test
sldt
outsb
mov
xchg
xchg
push
imul
loop
int
int
xor
test
xchg
sub
or
sbb
mov
pop
push
jecxz
jmp
repnz
ljmp
das
mov
xor
xchg
aas
in
mov
ss
imul
popf
lcall
dec
ds
leave
sbb
aad
stos
vpmaxsw
lret
aam
lds
mov
lea
incb
jno
dec
xor
jo
ss
adc
jle
mov
or
mov
push
cmp
jmp
mov
ds
sarl
dec
stos
out
in
push
ficomps
fsub
mov
aad
push
inc
div
or
stc
ljmp
cmp
js
loopne
test
adc
leave
mov
int
rorl
pop
lret
test
sub
inc
jge
dec
imul
mov
add
cmpsb
fs
push
adc
popf
mov
aaa
mov
cmp
mov
pushf
movsl
ss
pop
leave
mov
out
inc
pusha
fiadds
dec
je
push
add
pop
shrb
adc
jle
add
sbb
jnp
mov
mov
sar
movsl
jp
mov
or
push
xchg
inc
shl
test
arpl
stos
pop
xor
or
dec
mov
les
push
sbb
scas
cmpsl
jl
in
pop
dec
in
lret
or
loope
aam
enter
testb
cwtl
cltd
movsb
lds
aad
pop
cltd
imul
sbb
movsb
ret
dec
and
mov
push
mov
cmc
mov
bound
ljmp
imul
outsb
outsl
mov
xor
test
sbb
mov
rcl
add
ljmp
sub
pop
mov
inc
scas
adc
out
std
outsb
outsb
jle
pusha
outsb
lcall
pop
lods
sbb
jge
adc
inc
fdivr
repz
pop
adc
lock
mov
jb
xor
pop
push
rolb
test
cltd
mov
jnp
dec
sbbl
stc
loope
push
mov
ds
pop
sar
lods
js
dec
jp
push
xor
mov
pop
testb
lahf
cmp
scas
cli
icebp
sti
in
adc
pop
jmp
push
popf
roll
hlt
arpl
out
inc
sar
cmp
mov
test
int
xlat
sub
dec
stos
lret
mov
xchg
xchg
mov
inc
or
lods
clc
push
roll
cmp
sahf
jne
pop
mov
or
std
push
mov
mov
mov
shrb
bts
movsb
test
ljmp
inc
fcmovnbe
ljmp
inc
sbb
lods
enter
into
cmp
xor
scas
aas
xor
and
inc
shrb
lods
in
xchg
mov
mulw
sbb
pusha
sbb
or
jp
idivl
jne
stc
add
add
clc
pop
mov
pop
xor
int3
cwtl
push
addr16
lds
ljmp
popf
adc
loop,pn
imul
das
xchg
imul
aas
or
ds
inc
sub
inc
rorb
push
out
and
push
out
imul
push
in
mov
ljmp
push
movsb
lret
daa
stos
clc
push
push
in
dec
or
addr16
or
cmp
rcr
jbe
pushf
jmp
imul
inc
mov
out
loopne
mov
cmp
jne
jl
cmp
cmp
lcall
add
jb
mov
xchg
loop
cmpsb
lods
das
pop
test
fsub
pop
or
imul
and
sar
jecxz
add
cmp
inc
ja
movsb
addr16
dec
test
push
imul
and
jge
cmpsl
sub
incl
test
pop
je
mov
xchg
sub
leave
stos
sbb
dec
push
faddl
adc
lds
mov
inc
adc
test
std
cld
cmp
dec
lods
fnstcw
repnz
int3
jb
fwait
mov
sub
shl
cmp
jg
push
icebp
fcoms
sbb
push
push
jne
lods
fcmovbe
add
xchg
mov
ljmp
cmc
je
insb
loopne
jl
pop
js
jecxz
dec
xchg
test
rorl
mov
jne
pop
push
popa
inc
lret
scas
scas
inc
rol
repz
pop
mov
cli
dec
into
jecxz
push
int3
and
cli
push
stos
inc
popf
xchg
inc
pop
sub
adc
sti
ret
les
imul
popf
jb
test
sub
cmp
xchg
mov
mov
cltd
out
jl
je
sub
xor
cmp
inc
sbb
nop
repz
xlat
out
jo
xor
add
das
add
mov
das
mov
outsl
fwait
or
rorl
and
or
mov
mov
sbb
shl
xchg
lea
inc
test
xor
mov
xchg
int
lahf
push
push
and
gs
shlb
jle
adc
xchg
aaa
cli
push
xor
ja
jo
xchg
lret
bound
ret
inc
fisubrs
push
je
rorb
xor
daa
gs
lret
movsb
add
pop
adcl
push
pop
stos
pop
test
js
add
scas
clc
push
dec
mov
xor
xchg
outsl
pop
dec
add
fwait
adc
adc
mov
sbb
ficoml
int3
lds
inc
call
lods
cmp
dec
aaa
xor
add
add
mov
mov
rclb
mov
mov
sub
mov
mov
dec
aaa
rcll
in
das
cmc
inc
pop
mov
xchg
clc
xchg
xor
out
fldl
sbb
dec
push
sbbb
repz
xchg
mov
dec
stc
mov
cmp
cmp
fdivr
sahf
xchg
sbb
cmp
popf
aad
pop
repz
in
cmpsb
jmp
rorl
dec
lock
jb
adc
mov
and
pop
stc
cmp
shlb
sbb
mov
mov
orl
cmp
test
repz
hlt
stos
xor
mov
popf
jl
mov
fistpll
xchg
std
xchg
push
mov
dec
into
int
shll
aam
pop
add
call
inc
test
push
dec
cmp
push
int
sub
pop
rorb
dec
sahf
mov
mov
pop
dec
jb
cmpsl
mov
inc
imul
gs
xchg
sub
xchg
or
addl
sub
imull
out
pop
mov
sahf
xchg
aas
repz
dec
or
icebp
push
shlb
and
pop
sub
push
lret
adc
push
lret
sti
lea
cmp
je
push
push
mov
inc
adc
xor
and
and
nop
pop
loop
jge
inc
mov
jne
adc
xchg
cmc
inc
sub
test
int3
sarb
or
push
jo
adc
mov
lock
push
sbb
int3
fsub
gs
lock
aam
fdivl
stos
or
test
iret
mov
jbe
sbb
mov
xor
cmp
iret
xor
dec
pop
fldcw
xchg
xchg
mov
mov
sub
xchg
repz
mov
pop
es
mov
arpl
push
out
jns
xchg
or
pop
in
test
cs
sub
jo
test
jle
lods
push
dec
scas
insb
xchg
add
pop
pop
fcomi
xchg
sti
jb
cli
insb
add
xchg
stc
sbb
sbb
in
adc
pop
js
mov
xchg
mov
mov
data16
push
lea
and
sub
popa
push
lds
in
lret
ja
cmp
jmp
adc
add
adc
gs
ljmp
inc
adc
add
mov
mov
sub
add
jge
dec
add
jne
mov
mov
adc
add
mov
cmpsb
lcall
pop
lea
jmp
inc
pop
push
shr
add
xchg
sbb
mov
xchg
aad
aam
repnz
jns
jecxz
es
add
dec
test
pop
stos
mov
cmp
das
in
shrb
mov
test
dec
in
push
mov
jns
fsts
in
dec
jbe
mov
movq
mov
lods
cmp
andps
and
jp
iret
loopne
sub
repz
sub
dec
mov
sbb
or
sub
add
shlb
je
testl
leave
and
bound
sub
mov
jns
jno
inc
sub
ret
inc
std
jg
cwtl
lret
in
mov
ret
pop
mov
enter
jmp
jno
das
pop
inc
pop
inc
mov
and
add
pop
pop
xchg
push
iret
in
pop
push
cmp
pop
leave
pop
add
imul
clc
aas
dec
ljmp
and
lcall
or
fstpt
mov
loope
jmp
cmpl
dec
lods
nop
push
fmul
dec
dec
lret
dec
mov
pop
in
push
les
in
xlat
stc
or
test
test
mov
insb
sub
jge
or
test
xor
pusha
movsb
popf
in
mov
sub
sbb
mov
adc
xlat
mov
ja
sbb
xchg
dec
loope
inc
flds
push
lods
outsb
pop
inc
insb
xchg
out
rorb
inc
xchg
loope
mov
push
aaa
push
jns
je
xor
mov
rcrb
pusha
jmp
aaa
add
push
fldt
jmp
mov
dec
mov
mov
fisttpll
test
sub
mov
xchg
or
scas
lret
push
add
das
sbb
dec
pop
jno
in
xor
push
ficomps
ret
xchg
inc
cld
ljmp
jns
outsl
pop
les
mov
pop
or
lret
out
mov
mov
push
add
test
test
mov
hlt
ljmp
xchg
pop
push
jmp
push
fildl
fbld
xchg
stc
and
jns
int
xchg
cwtl
and
out
pop
push
mov
jl
scas
add
int3
sbb
jle
ds
adc
std
jp
stos
fisubrs
mov
jl
fsubl
mov
sbb
adc
ja
xchg
jge
scas
movsl
add
cld
hlt
pop
adc
mov
lcall
add
cmpsb
mov
dec
daa
mov
in
xchg
scas
cli
enter
mov
or
mov
mov
xchg
jnp
or
das
mov
repz
or
dec
fnop
nop
ss
nop
push
push
in
xchg
gs
cwtl
je
lock
ret
rcll
mov
imul
push
xor
dec
push
mov
jae
or
mov
outsl
jecxz
adc
mov
fdivrl
out
dec
int
out
mov
or
push
dec
mov
inc
mov
enter
mov
jae
sbb
push
insl
ficoms
sub
dec
pop
stc
push
jae
and
cmp
adc
jns
mov
xchg
dec
add
mov
adc
test
xor
dec
push
sub
pop
add
mov
in
js
int
push
out
push
push
jmp
out
and
push
mov
mov
sub
xchg
xor
pop
dec
and
and
out
inc
inc
sbb
cld
cmc
xchg
mov
mov
aad
add
sbb
and
loope
push
lahf
aad
jmp
loopne
add
mov
je
mov
mov
pop
mov
aad
dec
mov
fs
adc
cmp
aam
mov
sub
fldl
mov
int3
jp
call
sbb
lods
fwait
cli
inc
mov
scas
in
dec
sahf
lea
jae
int
stc
test
pop
mov
gs
xlat
xor
sub
rdtsc
mov
fsts
add
pop
pop
push
sbb
cmp
cs
pop
inc
or
add
pop
xchg
mov
dec
mov
loopne
pop
pause
adc
and
push
xchg
mov
xchg
push
adc
jg
std
inc
stos
leave
xchg
inc
push
xor
subb
rcl
xchg
jb
scas
pop
inc
das
scas
pop
cmp
xor
mov
adc
pop
jae,pn
out
mov
or
xchg
cmp
mov
sbb
cs
sbb
sub
sub
pop
cmp
in
fiaddl
jae
add
pop
stos
out
ret
cmpsl
pop
mov
std
dec
inc
sti
cltd
cmp
xchg
adc
adc
repnz
cmp
inc
gs
xor
mov
inc
frstor
sub
dec
out
jnp
sti
mov
dec
push
inc
dec
gs
inc
lcall
xchg
mov
les
add
movsl
lahf
mov
ret
call
mov
cmpsl
pushf
mov
mov
sub
in
rcll
and
sbb
in
push
or
mov
push
xchg
sub
divb
call
cli
test
ret
cmp
test
outsb
stos
xchg
repz
ret
xchg
daa
inc
mov
xor
lods
shlb
cmp
sub
loopne
test
xor
loop
cmp
sahf
push
movsb
lahf
adcl
adc
mov
adc
adc
xlat
pop
ljmp
dec
jmp
mov
cwtl
inc
arpl
ljmp
dec
ret
js
rolb
leave
jmp
jecxz
push
dec
xchg
or
test
jp
cmp
in
fdivrp
inc
orl
insb
sbb
jmp
sub
aas
nop
int3
mov
dec
mov
sahf
cmp
cmp
pop
sub
and
arpl
cs
lret
inc
mov
mov
repz
lods
jno
sbb
imul
fcomip
sbb
mov
adc
xchg
stc
jo
jp
out
fs
pop
clc
fidivrl
or
dec
outsb
pop
lcall
bound
jl
and
aas
dec
mov
cltd
ljmp
sub
pop
das
sbb
or
mov
out
jmp
or
loope
push
add
scas
cmp
and
push
dec
popf
adc
xlat
dec
mov
mov
imul
adc
in
clc
mov
xor
xlat
inc
mov
sub
enter
ss
mov
or
jb
sub
scas
js
and
add
cs
add
leave
add
ja
out
jo
mov
mov
hlt
mov
mov
notl
ret
mov
xor
outsb
pop
loopne
add
ljmp
pop
shlb
mov
outsb
jle
inc
mov
mov
cmp
cmpsl
mov
pop
outsb
mov
sbb
adc
ja
fsubl
imul
mov
adc
sbb
loop
clc
jb
pusha
push
mov
incb
es
test
mov
add
addr16
and
cltd
lods
insb
push
repnz
pop
fwait
xchg
mov
jnp
orl
adc
adc
cld
mov
jno
fsubrl
pop
adc
adc
popf
in
or
inc
test
mov
es
mov
sbb
and
loop
out
sbb
cmp
fists
pop
test
out
xorl
repz
mov
pusha
lret
dec
xchg
out
fsts
jg
sti
stc
pop
ficoml
popf
iret
and
rcrl
mov
push
sbb
sahf
cmp
into
pushf
push
jo
xchg
sbb
pop
aam
push
or
repnz
clc
les
fcomip
mov
pop
in
iret
gs
mov
mov
std
add
and
mov
movsb
xchg
jb
cwtl
xorl
stos
jmp
stos
fisubl
xor
fwait
sbb
loopne
xchg
scas
call
sub
cmp
pop
mov
mov
xor
mov
fmuls
adc
fdivrp
cltd
push
cli
inc
pop
movsb
and
cmp
xchg
add
adc
xchg
add
cmp
push
xlat
adc
out
xchg
push
test
pop
push
dec
jp
pop
imull
jnp
mov
pop
mov
dec
add
add
mov
lds
ret
aaa
ja
sbbl
cmpsb
jae
mov
cmpsb
dec
xor
mov
es
jae
scas
daa
repnz
clc
jnp
pop
xchg
push
cltd
pop
jno
arpl
mov
rol
mov
xchg
fucomi
and
repz
mov
add
xor
lds
mov
test
adc
xor
and
xorl
fidivl
mov
adc
iret
lods
cmp
data16
and
leave
dec
data16
notb
loop
subl
cmc
rcl
int
jo
sbb
jbe
mov
out
out
shr
push
icebp
sbb
mov
jbe
add
mov
icebp
inc
push
aad
inc
lea
xchg
stos
and
mov
push
out
cld
xchg
popa
test
inc
aad
dec
push
orb
and
adc
add
es
inc
jl
sub
testl
out
mov
jg
xchg
pop
or
mov
mov
les
lret
sbb
movsl
mov
sbb
mov
sahf
add
push
jg
in
fiaddl
sbb
outsb
mov
out
push
test
dec
sbb
pop
adc
cmp
in
mov
adc
bswap
push
sahf
fstps
sbbb
out
pusha
add
pop
ret
mov
fneni(8087
loopne
repz
fildll
mov
pop
arpl
pusha
sbb
scas
inc
sub
jl
aam
jno
shrb
mov
jmp
pop
inc
mov
cs
pop
or
lea
pop
mov
push
mov
aad
push
je
stos
adc
lret
sbb
lahf
cmp
ret
shrl
in
gs
inc
or
xchg
ret
insl
push
cmpsb
mov
int3
mov
out
shl
out
mov
arpl
lea
cli
mov
sbb
push
fisubs
mov
mov
push
or
cmpb
rorl
cs
xchg
xor
in
mov
xchg
sub
scas
cmp
sub
dec
pop
cmpl
pop
lret
mov
cmp
in
movsb
adc
into
insb
loop
pop
or
or
xorb
js
dec
fwait
pop
insl
rcrl
adc
and
inc
sub
adc
mov
sbb
dec
mov
cmp
lret
lahf
scas
jno
lods
push
scas
das
mov
xor
cmc
add
cmpsl
and
bound
push
push
jl
loope
sub
adc
iret
dec
movsl
mov
scas
cmpsb
xchg
mov
inc
mov
xchg
inc
mov
push
inc
sbb
mov
sbb
inc
pop
fs
push
pop
lea
lcall
adc
stos
ja
gs
dec
jo,pn
ficoms
lret
cmpsb
std
das
mov
popa
mov
xchg
lock
xchg
lret
sbb
clc
je
sub
cld
mov
jae
es
out
inc
adc
pop
icebp
data16
xchg
cmp
bound
repz
bound
out
push
mov
jge
pusha
addr16
movsl
jb
loope
sti
xor
test
pop
andb
and
cmp
ljmp
lods
scas
push
rcl
or
mov
push
jecxz
andb
loopne
jg
lods
test
add
mov
mov
lods
lret
xchg
add
in
out
sbb
push
xchg
bnd
xor
fimull
dec
rcrb
push
xor
adc
add
mov
pop
outsl
aaa
cli
dec
or
pop
pop
sub
sbb
outsl
fcomps
cmp
mov
pop
or
add
leave
aam
out
mov
popa
jecxz
ret
push
inc
pop
das
loop
int3
sbb
xor
dec
iret
sbb
pop
mov
ja
mov
lods
mov
xor
scas
aaa
cs
pop
test
loop
mov
lock
adcb
mov
ja
in
or
loope
lods
je
fwait
mov
mov
cli
fistpl
dec
in
shrl
mov
sbb
push
inc
mov
jmp
aad
cmp
cli
insl
jbe
fnstenv
pusha
daa
inc
popf
arpl
or
lret
stc
or
call
fcmovnb
pushf
xchg
jbe
jmp
inc
mov
and
std
pop
push
mov
ss
test
inc
xchg
cltd
test
sbb
add
rcll
popa
mov
pusha
es
mov
add
xchg
add
xchg
xor
out
fwait
pop
mov
nop
call
jmp
and
inc
add
xchg
xor
lods
xorl
push
mov
jecxz
fidivrs
mov
sub
mov
lods
lods
add
or
xor
outsl
cld
adc
lods
cmp
stos
push
dec
inc
sub
mov
jge
sbb
xchg
fsubrl
leave
jge
pop
xor
movsl
jo
push
pop
xor
in
mulb
aam
arpl
dec
fidivrs
shrb
pusha
test
int3
xor
adc
inc
xchg
mov
test
jge
dec
inc
or
add
gs
lods
incb
fdivrl
pop
fcompl
lcall
clc
xchg
mov
push
dec
sbb
mov
je
and
adc
xor
cmp
adc
push
ret
lock
movb
sar
cltd
add
jo
in
fs
sbb
jmp
ds
xor
add
lods
jnp
sti
sbbl
mov
lea
test
mov
and
jecxz
sbb
pop
out
xor
lods
into
xchg
mov
fisttpll
sbb
or
sbb
xchg
imul
or
rorl
and
imul
jnp
mov
and
xchg
xchg
fdivrl
adc
xor
stos
roll
push
push
mov
push
mov
in
dec
pop
cmpsl
insb
xchg
mov
mov
jo
test
mov
fs
sbbl
dec
pushf
adc
subl
sbb
pop
dec
fdivrl
push
imul
test
inc
jp
pushf
push
pop
cltd
fmull
stos
xor
jecxz
fwait
mov
rolb
jo
jns
inc
mov
fidivl
mov
jae
xchg
adc
mov
jp
pop
mov
push
ret
call
sahf
addb
dec
cmp
test
fmulp
jns
inc
xor
cli
bound
lods
push
sbb
in
fwait
xchg
scas
inc
push
jnp
adc
mov
fcmovnb
inc
fidivrs
jns
cmp
pop
sub
dec
adc
aam
pop
stos
sbb
imul
les
push
pop
or
pop
mov
dec
outsb
or
dec
leave
fwait
or
mov
fisttps
push
aad
push
push
lock
pop
inc
xor
addr16
inc
cmp
bound
or
les
xchg
fucomp
jns
test
or
xchg
sub
mov
mov
clc
lcall
ja
jnp
stos
out
xchg
mov
pushf
les
inc
xor
pusha
adc
scas
aaa
dec
pop
jbe
mov
push
mov
mov
xor
inc
pop
mov
in
iret
idivl
test
lret
sbb
test
into
cmp
ja
pop
stc
add
sbb
movsb
mov
add
popf
dec
pop
sub
push
and
inc
aad
mov
fsts
sbb
leave
push
cmp
mov
ret
lods
mov
adc
push
jo
mov
xchg
mov
movsb
inc
in
sbb
mov
jne
mov
iret
stc
sbb
jl
xor
adc
inc
adc
cld
mull
add
inc
scas
sbb
jne
sbb
neg
cs
inc
adc
cmc
sahf
inc
lahf
cmp
xchg
leave
jno
xor
xchg
fisttps
test
xorb
inc
add
lods
imul
mov
inc
lods
jnp
sbb
andl
hlt
dec
inc
stos
jo
insb
fmull
jne
xor
inc
sub
pop
popa
dec
sub
fstps
jecxz
in
mov
mov
mul
aad
dec
je
inc
xchg
or
xchg
imul
jecxz
jbe
out
push
pushf
gs
mov
rcrb
gs
aaa
add
xlat
cmp
rep
sub
cwtl
hlt
jae
add
pop
out
push
xor
mov
daa
aaa
push
jns
movsl
inc
push
movsb
es
and
xchg
inc
lret
xchg
inc
rcll
cmpsl
pushf
xchg
cmp
dec
nop
inc
add
xchg
mov
das
and
dec
fstpt
test
and
push
cs
mov
pop
xor
push
jle
arpl
pushf
adc
sbb
sub
inc
repnz
test
pusha
xchg
insl
xor
and
dec
sub
pop
mov
clc
fs
movsl
dec
dec
add
mov
testl
and
in
mov
or
lock
push
mov
daa
test
mov
mov
cmpsl
lds
pop
push
sub
addr16
mov
cmp
cmpsl
stos
rep
loopne
cmp
pop
mov
shrl
add
shll
arpl
lahf
mov
push
daa
insl
sub
loop
xchg
lods
adc
add
mov
gs
div
xchg
das
or
jae
xlat
and
clc
jnp
jno
sub
pop
sub
and
xlat
cmc
cmp
or
aas
jmp
mov
pop
in
sub
mov
stos
mov
cmp
mov
ficoms
stos
mov
mov
mov
pop
cmp
sub
fsubr
in
add
cmp
jl
popf
adc
shll
pop
loope
shr
in
or
fwait
or
dec
shrb
mov
les
int
sbb
outsb
sbb
add
stos
bound
adc
das
jle
jo
ja
les
jle
cmpsl
lea
dec
dec
iret
pushl
je
iret
adc
popa
mov
inc
mov
fadd
into
pop
adc
mov
inc
and
and
movsb
outsl
dec
je
pop
xchg
add
imul
clc
ds
imul
or
dec
stos
dec
jne
popf
daa
shlb
mov
or
imul
inc
sbb
xchg
sarb
xor
int3
cmp
into
sarb
jae
jle
sbb
add
or
or
push
xchg
ja
mov
push
dec
cmpsl
mov
add
dec
shrb
ljmp
push
xor
fldl
mov
adc
sbb
cmp
bound
xchg
jns
add
mov
hlt
jnp
mov
ss
push
div
pop
stos
lods
push
cs
push
jmp
or
push
out
mov
fimull
lret
stos
loope
pusha
add
je
adc
negl
bound
shrl
jbe
ret
xchg
popf
imul
jno
or
fs
bound
cwtl
fisubs
push
mov
jecxz
cli
dec
dec
push
mov
aas
sti
add
mov
xor
push
jo
sub
dec
js
mov
jle
fists
scas
iret
ljmp
sbb
fsubl
movsl
jmp
fadds
add
shr
xchg
negb
icebp
cmp
sbb
mov
push
xchg
out
or
movsl
les
xchg
dec
jg
push
and
sbb
es
mov
lods
pop
mov
das
aam
dec
sbb
mov
xor
xchg
das
xchg
push
dec
aaa
pop
add
jg
pop
xchg
mov
add
or
lret
pop
lock
cmovns
bound
xchg
dec
xchg
push
rcll
inc
mov
xchg
dec
dec
add
in
cmc
sub
xchg
iret
das
and
mov
arpl
pop
ret
outsb
repnz
andb
push
out
and
pushf
sbb
add
dec
jecxz
stos
sahf
movsl
cmp
mov
stos
inc
fistpll
push
mov
jp
popa
movsb
cmp
dec
mov
hlt
sbb
jne
les
sbb
je
sti
pop
push
arpl
xchg
into
lods
test
pop
mov
pop
or
push
fucom
cmp
scas
cmp
sbb
xor
call
int3
jmp
cmp
and
add
mov
push
das
loope
sbb
pop
jmp
sbb
push
lock
pop
add
or
cmp
cwtl
mov
xor
mov
stos
jb
xchg
roll
sub
mov
xchg
push
enter
sbb
mov
adc
dec
inc
leave
and
test
push
or
adc
add
mov
ja
add
pop
mov
jp
jg
and
in
push
push
xchg
ficompl
scas
mov
add
add
pop
lahf
adc
cmpl
jge
mov
cmp
pop
outsl
mov
fisubrs
ret
and
sti
xor
mov
jae
enter
add
leave
adc
pusha
jle
and
xor
xchg
adc
jge
div
test
scas
sub
and
jl
cli
dec
mov
fcompl
jle
sub
ja
mov
loopne
and
xchg
mov
adc
add
dec
inc
mov
mov
sbb
xlat
loop
bound
sbb
out
lds
jno
jecxz
mov
je
das
addb
add
out
mov
shlb
mov
mov
mov
scas
iret
popf
outsl
mov
adc
out
adc
scas
roll
pop
adc
aad
lods
pop
out
test
shlb
push
xor
sbb
pop
lcall
movd
pop
fs
xchg
mov
mov
xor
repnz
pop
arpl
div
push
dec
mov
adc
push
aaa
add
cltd
loop
mov
jno
arpl
movsb
cld
mov
cltd
cmpsl
sahf
movsb
imul
scas
inc
xor
add
les
xor
xor
clc
ss
jbe
stos
dec
pop
inc
dec
scas
or
ss
fistpl
push
push
fucomi
bound
inc
mov
ja
ret
mov
bound
push
sub
jnp
pushf
add
aam
pop
outsb
sbb
fldcw
repnz
pop
in
decl
lahf
cmp
cltd
xchg
pop
pop
lea
lods
ljmp
das
adc
inc
push
out
subl
sar
mov
test
nop
pop
or
fiadds
cwtl
rorl
movsb
sub
mov
jo
or
jge
pop
xor
add
lret
mov
xchg
mov
jb
mov
stos
iret
inc
enter
movsb
mov
dec
sbb
stos
ret
les
jecxz
js
lcall
out
dec
inc
or
int
aad
add
icebp
sbb
pop
leave
repz
call
lds
add
inc
notb
setb
mov
arpl
mov
mov
pop
xchg
or
cltd
sbb
bound
pop
jg
jne
jb
or
jns
mov
es
popa
sub
and
cmp
repz
jns
test
aam
cmp
in
clc
push
sbb
lahf
imul
push
pop
mov
leave
js
xor
sbb
iret
lcall
jge
enter
pop
sbb
idiv
inc
bound
mov
sahf
adc
popw
mov
jne
inc
lods
pushf
js
jecxz
imul
pop
dec
xchg
clc
aaa
pop
lea
sbb
xchg
test
lcall
xor
xchg
loop
frstor
push
repnz
cmp
sub
imul
fsub
arpl
mov
sub
sbbl
mov
pop
rcrl
test
popfw
xchg
cmpsl
test
sub
lcall
cmpsl
push
sbb
outsb
mov
xor
push
xor
mov
stos
mov
and
add
add
cmp
push
xor
add
jle
jb
sbb
pusha
hlt
daa
pop
pop
xchg
cs
cmp
test
fwait
add
repz
loop
inc
sbbl
xchg
test
stos
adc
ret
jecxz
decl
push
imul
ja
popl
sub
pop
cltd
pop
rorb
sbb
stc
mov
cmp
add
negb
js
xor
sti
or
mov
xchg
xchg
push
repz
xchg
ljmp
incl
mov
pushf
pop
xchg
popa
outsl
xchg
lret
push
adc
add
xchg
cltd
rclb
inc
cli
stos
pop
ss
inc
xchg
mov
or
popf
fisubs
inc
jge
cmpsb
std
aad
js
inc
sbb
test
mov
pop
lock
inc
in
fnstsw
xor
push
cwtl
aas
filds
or
fsubrs
outsb
lret
lds
xchg
push
jmp
mov
cs
or
or
jl
and
push
mov
push
aas
lea
xorps
addl
jmp
in
sbb
mov
ret
sub
mov
adc
dec
out
scas
xor
mulb
pop
cld
mov
pop
outsb
jl
mov
mov
inc
lods
loope
aad
test
js
mov
lods
inc
dec
clc
pusha
cvttps2pi
scas
jle
cmp
shr
lret
inc
or
insl
mov
rcrb
sub
in
test
mov
outsb
dec
and
cmp
jb
and
rolb
adc
adcb
std
jp
mov
push
test
outsb
lock
inc
xchg
and
fistpll
lock
jo
lahf
mov
es
mov
idivl
lea
add
push
loop
jno
fmuls
cmpsl
lds
mov
lods
dec
mov
sarl
inc
mov
cmp
jp
xchg
mov
loopne
lock
xchg
mov
sub
ss
test
loopne
icebp
sub
xchg
mov
orl
xchg
push
sarl
icebp
push
mov
icebp
xchg
sub
ljmp
add
lock
xor
pop
jge,pn
xor
pop
and
pusha
std
xor
mov
cmp
pop
aaa
inc
push
test
pusha
adc
data16
xor
out
mov
aad
xchg
insb
push
sbb
testl
mov
add
xchg
test
ljmp
add
dec
add
stos
cli
bnd
js
adc
cs
jb
push
pop
and
fistl
pop
cmp
mov
imul
pop
nop
iretw
data16
dec
dec
jno
addr16
sub
fstps
push
fstpl
shl
add
fidivs
shl
stc
xlat
pop
stc
push
and
inc
xor
test
sbb
test
movsb
xchg
xchg
jnp
test
or
pusha
jl
mov
sbb
mov
aam
mov
mov
xchg
outsb
pop
jl
jne
jb
int3
divl
push
mov
xlat
shl
ror
imul
push
test
mov
mov
xchg
inc
lods
cmp
mov
mov
scas
shrl
and
les
push
repz
js
jno
xor
in
ret
cmpsl
cmpsl
popf
lea
push
shlb
dec
mov
ja
jmp
xor
loopne
pusha
push
clc
add
cld
sbb
sub
add
inc
mov
push
push
xchg
xchg
push
dec
stos
xchg
sbb
sub
sahf
push
jns
das
in
mov
lea
mov
loopne
scas
iret
popf
lds
loop
jmp
xor
lods
je
into
pop
mov
dec
cltd
pop
lods
lret
jl
jg
sti
in
out
data16
addl
adc
inc
push
outsl
push
pop
dec
loopne
xchg
push
aam
rcrl
pop
mov
imul
xchg
scas
das
les
pop
fxch
leave
das
inc
push
cwtl
sahf
repnz
inc
jmp
hlt
jns
and
imul
xor
stc
ss
rcr
jl
and
into
dec
nop
imul
push
mov
hlt
mov
dec
xchg
ret
push
or
add
xor
mov
data16
adcl
icebp
push
test
into
adc
xchg
es
pop
jmp
sarb
sahf
or
sub
sbb
jne
xor
jp
stc
out
mull
ret
inc
dec
push
jo
adc
inc
or
std
sbb
mov
inc
movsl
mov
adc
jecxz
stos
xor
ljmp
nop
jecxz
sbb
mov
out
ljmp
push
mov
outsb
pop
stc
inc
push
cmc
scas
and
loopne
in
mov
xor
inc
test
mov
stos
mov
pop
fcoml
icebp
push
inc
mov
ret
test
lea
cltd
sbb
fxtract
mov
subb
loopne
add
pop
mov
add
jge
ret
or
adc
pop
and
insb
pop
mov
jle
sbb
scas
xor
push
push
mov
icebp
add
rorl
cmp
add
pop
mov
cld
jl
add
xor
jmp
xchg
adc
jge
pop
mov
inc
aaa
push
fildl
aas
movsb
jnp
data16
and
orl
test
das
or
dec
sti
xorl
in
jmp
ss
mov
test
dec
ja
dec
push
lods
pusha
mov
lock
mov
fisttpl
dec
xchg
ja
pop
ss
sbb
and
in
xor
inc
movsl
pop
and
fnstenv
jg
pusha
cli
rep
jmp
pop
test
fs
sbb
lock
cmp
scas
test
sbb
sarb
insl
sahf
pop
pushf
mov
daa
adc
shrl
push
pop
scas
icebp
lcall
or
aam
enter
jae
nop
arpl
stos
jnp
out
hlt
push
outsb
add
add
loop
add
cmp
mov
add
push
xchg
filds
adc
or
sar
das
fmuls
mov
orl
jbe
aaa
push
sub
adc
mov
inc
mov
shlb
pop
mov
mov
cltd
mov
mov
push
sbb
das
lds
out
test
sub
pop
and
xor
inc
lret
push
loopne
inc
mov
rorb
xchg
inc
int
loop
sub
jbe
jle
push
push
xor
xor
rcr
jmp
dec
dec
inc
push
movsb
jmp
call
fs
int3
pop
cmp
pop
out
stos
aas
aaa
int
jb
pop
cs
xor
or
sbb
add
and
mov
rclb
fnstenv
aam
sbb
sub
std
dec
mov
fwait
add
movsbl
add
push
push
inc
ss
fndisi(8087
push
jecxz
jle
cmc
test
jl
lcall
lcallw
stc
dec
add
movsl
push
jp
ljmp
loop
stc
jb
xchg
sbb
inc
fs
xchg
sbb
mov
std
or
and
sub
cmpsb
and
push
xchg
pcmpeqd
sbb
ret
mov
frstor
xchg
xlat
dec
hlt
xor
xchg
push
xor
and
fsubrl
xchg
fisubrs
cmp
pusha
add
sahf
xchg
enter
lods
jg
out
mov
or
ficompl
pusha
mov
jnp
outsb
xchg
fcmove
idivb
mov
int3
and
mov
jl
pop
mov
gs
cld
dec
outsl
xchg
pop
lock
decb
jnp,pn
insl
push
pop
fsubrl
jnp
and
jecxz
adc
inc
sub
jp
lahf
daa
pop
inc
xchg
pushf
mov
jns
add
sbb
or
pop
cld
das
jmp
imul
jbe
test
xchg
mov
fldenv
adc
push
jl
sbb
movsl
je
mov
ret
pop
dec
jecxz
sub
add
aam
je
stc
insb
dec
fildl
popa
jmp
mov
les
jg
outsb
sub
ret
add
sub
xchg
dec
jbe
sub
xchg
mov
ficompl
xchg
ljmp
or
shr
mov
cmpsl
xor
sbb
insb
lock
enter
mov
dec
inc
js
int
daa
into
adcl
jbe
push
jne
std
repnz
add
jecxz
cmp
add
enter
clc
mov
and
dec
not
sbb
push
cmc
fwait
cmp
mov
fcos
xlat
bound
gs
sbb
lahf
aaa
or
pop
push
dec
ret
bound
call
jo
jb
aad
je
cmc
aad
xor
dec
movsb
shl
mov
mov
das
mov
jl
jne
sub
jns
xchg
mov
imul
bound
or
out
dec
dec
cmpl
adc
call
movl
dec
andb
jp
sub
mov
push
inc
mov
xlat
fdivrl
ja
inc
out
cmp
push
and
push
out
jb
lret
sub
shr
sarb
mov
cli
sahf
pop
test
mov
jecxz
cmp
das
arpl
mov
rorl
dec
cld
lods
or
pop
xor
add
jbe
shlb
rcr
int
mov
push
test
fwait
xor
fdivrp
add
lock
outsb
das
lds
test
jmp
loop
repnz
movsb
fsubs
aad
and
ja
filds
insl
sub
daa
lods
dec
test
hlt
ja
and
sub
fldcw
aas
sbb
inc
icebp
mov
std
jl
mov
pusha
push
cmp
pop
xchg
mov
mov
movsl
in
imulb
ja
sub
sbb
add
stos
movsb
icebp
stos
shrl
sbbl
dec
cmp
outsb
sbb
imul
test
adc
in
cmc
adc
cltd
dec
pop
adc
ret
mov
and
incb
cmp
stc
mov
test
stos
lret
mov
mov
fcompl
lds
or
push
bnd
xchg
adc
fstpt
sti
addl
fdivrp
mov
cmp
out
cs
pop
insl
lea
rorb
cmpsb
lret
mov
inc
pop
js
aam
pop
stos
xchg
add
cmc
lods
shr
lds
out
test
cmp
mov
aad
in
je
pushf
not
pop
lahf
cmp
adc
outsl
insb
ds
mov
lahf
xchg
repz
xor
pop
ss
mov
jp
jp
sbb
inc
adc
into
fstps
jns
jg
movq
repnz
ret
or
jle
push
int3
push
jne
pop
icebp
sbb
dec
or
rcrb
addl
mov
pop
or
cltd
mov
lret
stos
jg
sarl
cmp
mov
popa
cmp
dec
mov
pop
adc
push
lret
rcll
and
sbb
push
aad
sahf
cmp
pop
icebp
inc
mov
and
push
xchg
fadds
mov
fistpll
cmp
outsb
popf
dec
rcr
sti
pushf
jge
jecxz
or
test
hlt
mov
idivl
and
sbb
insl
shll
push
cmp
sbb
stos
dec
scas
xchg
mov
xchg
test
pop
sub
stos
mov
mov
sub
dec
test
cmp
outsb
jbe
inc
cwtl
fdivl
stc
leave
jns
stc
mov
lods
cmp
jg
jnp
popf
loope
cmp
test
lret
sbb
sub
mov
cmp
xchg
mov
lret
sub
repnz
out
je
hlt
cs
aas
pop
jge
xor
xchg
ret
sbb
idivb
mov
push
jp
aas
dec
std
fimuls
pop
add
push
es
jo
push
inc
test
je
out
push
mov
sti
add
inc
call
xor
xchg
test
cli
je
jno
push
test
mov
or
outsl
cmp
fldcw
dec
cmp
mov
inc
pop
sub
adc
ret
imul
ds
cmp
push
pop
cli
in
fsub
nop
jne
sbb
movsl
pushf
insl
cmp
test
lcall
in
sbbb
or
pusha
fwait
lret
jp
pop
push
pop
test
in
sti
pop
fs
ret
fsubl
push
stc
data16
aaa
lods
cmp
lret
testl
in
dec
pop
lret
xchg
movsl
fs
xchg
rcrb
enter
dec
mov
cmc
daa
mov
mov
xor
mov
inc
inc
jg
push
filds
add
adc
pop
or
dec
fwait
movsl
mov
and
int
imul
scas
mov
xchg
mov
cmp
sub
pop
orb
inc
movsl
mov
push
xchg
out
inc
jns
scas
es
cmp
loope
addr16
sub
fnstsw
sar
pop
and
sbb
and
aam
js
cwtl
xor
rol
sti
es
fwait
cld
enter
test
outsb
popf
popf
mov
adc
jae
lahf
iret
sbb
loope
mov
xor
es
xchg
mov
shll
movsb
loop
jge
imul
lea
mov
mov
push
pop
je
push
or
aas
int
xorb
dec
andb
dec
hlt
mov
stos
mov
test
movsb
daa
xor
push
aaa
out
xchg
in
sarl
rcr
push
roll
dec
mov
jge
mov
sar
mov
adc
mov
xlat
lds
iret
std
loopne
cmp
mov
fbstp
negb
aas
adc
clc
lcall
andb
dec
dec
cmp
cmp
inc
ret
fisubl
push
lods
icebp
addr16
repnz
jl
les
or
xor
mov
push
xchg
mov
insb
dec
mov
xorl
xchg
inc
jbe
lods
dec
ficoms
out
xchg
xor
add
loope
movsl
xchg
xchg
das
lods
decl
insl
cmpsb
lcall
imul
popf
jg
mov
jecxz
jns
push
pop
test
sbb
jge
mov
insl
cwtl
fistps
sti
imul
bound
dec
xor
fisubrl
je
add
jge
cmpb
sub
fsubrp
pop
mov
test
sbb
cld
and
aad
daa
lods
sbb
ja
push
mov
jle
stos
and
dec
push
imull
sbbl
outsl
rcrb
sub
cmp
sbb
mov
mov
sahf
ss
vcvttpd2dqy
mov
bound
ret
jb
scas
sbb
cmpsl
jecxz
cmpsl
movsl
out
mov
and
sub
addb
inc
jae
jne
pop
shrb
pop
xlat
or
xchg
xor
imul
cmp
cli
sub
cmp
movsb
xlat
das
xchg
rcl
rolb
sahf
jbe
sub
rcll
mov
xor
sarl
stos
ja
lret
lea
rorb
enter
mov
add
mov
add
push
pop
push
xchg
jb
cmp
loope
add
mov
ss
popf
xchg
jecxz
and
pop
sub
lcall
out
sbb
push
inc
sub
dec
pop
scas
pop
xchg
dec
test
cwtl
repnz
cmp
ljmp
pop
xlat
ret
and
or
aad
xor
xor
pushl
fcmovb
xorb
push
pop
cmp
popa
mov
lods
mov
mov
mov
pop
sbb
pop
iret
push
jecxz,pn
push
sbb
aas
rcl
movsl
aam
jnp
and
adc
fadds
or
les
into
fwait
xchg
sub
test
sbb
xlat
arpl
inc
das
mov
and
cwtl
in
pop
cmp
adc
and
fs
jne
popa
lock
scas
ret
data16
popf
insl
jmp
mov
adc
cs
ljmp
and
jmp
dec
jb
mov
push
xor
push
dec
mov
push
sub
insb
xchg
sahf
jp
iret
sub
scas
pop
xchg
iret
in
test
cmp
mulb
mov
inc
fs
orb
pop
aam
icebp
mov
mov
inc
jg
xlat
inc
mov
fstpl
xor
xchg
xchg
loopne
inc
inc
mov
xor
sbb
xor
adc
pop
movd
movsl
xor
mov
and
leave
xor
cmp
xchg
call
mulb
lcall
cwtl
divb
fdivs
push
and
cs
enter
inc
lret
push
xchg
out
lods
push
movsb
push
in
mov
add
sbb
idiv
push
mov
iret
push
fucomp
lock
adc
mov
or
or
xchg
jno
and
outsl
xor
mov
xlat
gs
push
jns
in
push
mov
dec
pop
into
ljmp
push
in
lcall
es
fs
lcall
jge
inc
das
or
xchg
and
iret
jne
rcr
inc
xchg
pop
inc
add
mov
sub
scas
addr16
xchg
cmp
xchg
aad
dec
test
nop
cmp
dec
out
jmp
out
fwait
pop
push
or
dec
or
in
mov
loope
fmulp
adc
sub
shl
push
mov
fwait
pop
js
xor
subl
inc
enter
mov
aad
stos
call
pop
fwait
scas
leave
fwait
and
jnp
mov
subb
rclb
test
mov
sbb
lods
jmp
les
jecxz
fcoms
in
xchg
aam
mov
ljmp
inc
dec
cli
pop
shll
adc
xor
mov
pop
or
cmpsb
scas
and
mov
push
lds
adc
push
int
push
pusha
mov
or
mov
fbld
fs
insl
movsb
jmp
sbb
ljmp
mov
mov
out
ret
jns
scas
adc
jo
jnp
dec
xchg
loope
jge
mov
mov
gs
pop
and
or
test
add
jno
or
push
mov
nop
lods
into
push
sbb
push
push
pop
sub
cmp
or
stc
jecxz
in
stos
incb
and
cmpsb
sub
in
aas
sub
dec
and
arpl
mov
jge
dec
push
add
roll
icebp
xchg
xchg
mov
or
mov
add
mov
sub
dec
lods
xchg
pop
add
jno
sub
dec
cltd
divl
int3
out
adc
add
jb
pop
pop
mov
fstps
bound
icebp
adc
repz
roll
hlt
ljmp
imul
es
fidivl
jp
loop
dec
pop
jmp
pop
lcall
fwait
and
add
stc
jmp
pop
addr16
fwait
std
and
mul
aam
shlb
out
sbb
xor
outsl
lahf
dec
pop
in
push
mov
aaa
sbb
ror
mov
jge
mov
push
cs
les
dec
mov
adc
je
scas
mov
fwait
icebp
dec
imul
loope
jns
xchg
fistpll
xchg
outsb
and
and
movsb
push
hlt
add
scas
out
jge
jae
fcmovu
cwtl
or
inc
jl
jle
pop
mov
jecxz
psraw
out
outsb
mov
int3
jb
repz
fwait
dec
int
out
mov
fists
aaa
dec
mov
pop
push
inc
lahf
cmp
lahf
inc
mov
out
sbb
into
js
test
pop
je
stos
std
pushf
mov
data16
cwtl
xchg
cmpsl
das
cmpsb
int
imul
jo
xchg
pop
jmp
jne
xor
nop
xchg
pop
push
clc
mov
push
cld
int
pop
pop
scas
push
sbb
test
pop
loopne
add
pop
test
iret
loop
ss
dec
sahf
std
lahf
stc
dec
cli
cmp
lods
mov
jmp
in
testl
push
shl
mov
into
hlt
fstpl
inc
into
and
mov
mov
xchg
imul
shrl
out
inc
jbe
dec
syscall
std
andb
xor
or
pop
xor
xor
sbb
cmp
xor
addr16
std
pop
stc
push
cmp
add
imul
notl
adc
loope
xor
push
cmp
add
add
pop
aad
sbb
mov
jmp
mov
or
test
mov
ss
lds
fnstsw
das
testb
jno
mov
inc
jmp
cmp
rcr
ss
mov
cmp
xchg
cmp
adc
test
ss
xchg
pop
push
jp
adc
shll
pop
loopne
mov
sbb
xor
pop
jmp
mov
mov
pop
sti
outsb
mov
jo
jae
lods
mov
arpl
or
jge,pn
and
xchg
out
insl
into
fadd
and
aas
cld
dec
adc
mov
pop
es
loope
jbe
sub
fcoml
sub
push
jecxz
and
cli
movsl
sbb
adcb
daa
pop
fistpl
shlb
sarl
stos
lret
aam
lahf
cwtl
jb
push
mov
cld
dec
xchg
cs
dec
nop
outsl
dec
lock
andb
adc
push
and
mov
push
mov
push
xor
add
imul
xor
xlat
data16
mov
cmp
jmp
or
shlb
jae
lcall
imul
movsb
mov
pop
repnz
mov
lds
mov
push
mov
jns
lea
push
add
jns
push
push
sub
pop
pop
outsl
or
push
stc
push
sti
repz
shll
sbb
pop
xchg
mov
insl
push
leave
mov
jp
pop
pop
in
in
jbe
xchg
pusha
sahf
pusha
aad
rcll
outsl
sbb
into
fstpt
push
lea
xchg
js
jns
sub
pop
arpl
xchg
pop
jmp
mov
push
adc
inc
aam
loopne
push
movsl
mov
push
adc
repz
push
clc
push
mov
arpl
add
shlb
lods
pop
adc
test
xchg
or
xlat
out
notb
out
mov
mov
fisubs
sub
xchg
mov
mov
inc
ret
mov
sub
fdivrs
lcall
jle
sbb
sahf
movsl
xchg
push
cs
mov
jb
xchg
cmp
lods
out
pop
ficoml
mov
pop
mov
inc
mov
pusha
fwait
push
arpl
movb
jmp
mov
adc
cli
xchg
add
sti
jnp
jge
jne
mov
out
inc
stc
cmc
addr16
push
std
call
xchg
lret
sbbb
shr
ficomps
js
hlt
xor
and
pop
xlat
adc
ret
in
add
jge
cmc
nop
push
fsubl
std
cltd
cmpsl
adc
test
inc
mov
jg
mov
cmp
sbb
or
rcrb
shll
dec
and
mov
sahf
push
add
gs
pop
mov
shrb
inc
mov
cltd
ja
daa
jge
adc
jecxz
fmuls
sub
pop
addb
test
cmp
push
out
popa
fimuls
js
out
pop
int
lods
push
pushf
or
mov
sub
ja
and
mov
dec
cmp
mov
jnp
mov
add
inc
or
and
hlt
pop
and
pop
stc
pop
lret
hlt
aas
fstl
stos
daa
and
cmc
lahf
mov
int
test
dec
cmp
aam
fcmovb
xchg
mov
scas
add
push
imul
jp
add
fwait
mov
dec
fisubrl
add
push
iret
aas
fistpl
and
test
inc
xchg
jbe
mov
clc
imul
pop
lret
fcoms
movsb
int3
into
cmp
xchg
bound
outsb
cmp
out
pop
adc
sub
jb
sahf
add
test
mov
cmp
nop
subb
je
int
popf
rol
mov
add
xor
lcall
int3
xor
mov
orb
aaa
push
test
int
or
std
inc
xchg
sub
leave
mov
daa
int3
push
aad
or
cmpsb
pop
repz
xchg
jno
push
out
pop
xchg
mov
adcl
call
add
call
push
pop
mov
shr
mov
inc
dec
push
jne
test
stos
pop
or
test
sbb
ss
adc
cmp
mov
sub
jl
and
mov
xchg
leave
outsb
pop
in
adc
mov
push
dec
sarl
fnsave
mov
cmpsl
mov
orl
xlat
add
in
stc
xor
mov
scas
dec
add
inc
sbb
mov
jle
bound
mov
lods
push
jno
sti
jecxz
pop
scas
lret
jbe
je
jle
dec
pushf
rolb
jl
in
jns
repnz
test
in
stos
inc
bound
push
rolb
test
cmp
sbb
ja
test
sub
lock
repz
clc
jg
mov
out
pusha
lea
adc
bndstx
adc
jo
sbbb
xlat
or
stos
fldenv
push
or
xchg
jnp
xorb
adc
dec
test
jmp
pop
loop
insl
outsb
push
mov
sti
icebp
aad
and
push
mov
pop
aad
enter
dec
or
in
mov
pop
jl
push
mov
mov
icebp
add
add
inc
pop
scas
test
test
push
jmp
cmp
lcall
movsb
push
pop
je
inc
rcll
pop
cltd
dec
inc
mov
or
test
sbb
rorb
cmp
xchg
jnp
inc
xchg
scas
enter
jmp
mov
cwtl
sub
adc
sbb
mov
jecxz
es
lret
push
in
mov
notl
and
jecxz
add
aam
cltd
icebp
cmp
mov
clc
jmp
pushf
int3
imul
cld
aas
cwtl
sub
inc
xorl
aas
mov
xchg
scas
dec
ja
push
dec
sub
movb
push
cmp
inc
pop
push
pop
test
push
or
ret
in
nop
pop
mov
cmp
push
fucomi
sub
out
fistpl
je
sub
xchg
mov
notl
outsl
push
leave
inc
pop
add
pavgb
ja
adc
or
jae
fdivrp
mov
iret
pusha
or
imul
add
and
pop
dec
jl
jne
jns
outsb
mov
fsubrp
rorl
jecxz
jmp
mov
dec
jg
mov
adc
test
in
mov
aam
repnz
and
sarl
fiaddl
fisttpl
ss
ss
test
out
push
sarl
out
in
jbe
int
shrb
movsb
popa
gs
ja
movsl
leave
mov
fdivrl
inc
int3
jmp
cltd
sti
jae
pop
push
xchg
sub
adc
add
xor
inc
xchg
ds
inc
ss
sub
cmc
loope
icebp
sub
pusha
hlt
add
aas
shrl
push
mov
int
inc
xor
inc
fistpll
sahf
jnp
and
imul
push
dec
addr16
pop
adc
sti
fnstenv
sbb
fs
test
sub
sub
xor
xchg
xor
push
nop
xchg
sub
adc
mov
cld
push
inc
enter
sbb
cmp
jb
pop
pop
add
mov
sarl
pushf
cmc
stos
dec
insb
xor
push
adc
movsb
adcb
lret
cmpl
sbbl
sti
gs
jno
imul
mov
dec
xchg
lret
mov
adc
aas
int3
adc
sub
gs
sub
dec
mov
inc
sub
std
test
or
inc
sub
cltd
dec
adc
xchg
jne
adc
in
lcall
mov
gs
fcompl
sub
xor
sub
test
in
jnp
inc
xchg
out
fs
jle
fsubrl
adc
not
in
or
js
or
popa
fildll
jne
jle
outsl
shl
aad
dec
jae
push
loope
xchg
xchg
int3
lods
gs
fwait
lds
and
sbb
fbld
mov
jle
icebp
sub
push
adc
adc
movsb
je
mov
loope
ret
out
xor
pop
push
lds
xor
or
dec
lds
dec
pop
inc
adc
sbb
enter
in
insb
nop
out
in
mov
pop
mov
mov
inc
insb
cld
imul
sub
and
sbb
lret
pusha
push
rclb
cld
repz
inc
fs
fildll
adc
loopne
std
xchg
xor
aam
sub
stos
std
jne
insl
ljmp
adc
ljmp
out
sbb
call
cmpsl
repnz
sbb
adc
divb
lods
imul
dec
mov
jb
xchg
xchg
cwtl
adc
in
mov
cmp
pop
xchg
pop
je
out
dec
jecxz
daa
mov
pop
sbb
inc
sbb
push
fmuls
pop
adc
sahf
mov
out
lahf
and
jp
outsb
mov
add
xchg
mov
je
mov
xor
stos
mov
jl
mov
sbb
dec
lcall
popa
cmp
jbe
lea
int3
add
pop
jo
out
mov
mov
aad
popa
sbb
testl
push
push
adc
jbe
pop
es
jg
push
jl
sbb
add
movsl
ja
iret
mov
dec
ja
aad
jge
pop
pop
movsb
je
lahf
out
cmpsl
ja
dec
push
inc
push
roll
push
sub
jns
sbb
pop
jecxz
push
imul
gs
aad
imul
sub
subb
or
repz
pop
mov
test
loopne
ss
in
test
stos
fs
loope
scas
and
push
test
and
repnz
stos
jmp
aad
stc
lds
add
fcomps
shrl
sbb
aad
sbb
and
ds
orl
mov
repz
mov
add
xchg
cmp
sub
xor
inc
pop
dec
call
aaa
and
inc
popf
inc
mov
add
pop
cltd
push
or
sub
sbb
bound
jecxz
mov
stos
sbb
outsb
push
or
daa
mov
sahf
vmaxpd
aad
sbb
imul
pop
rcrb
lea
sub
fisttpll
xorb
cmp
stc
jecxz
pop
sub
mov
test
test
nop
mov
enter
inc
sub
sarb
jl
and
fcmovbe
std
fsubrl
push
mov
or
push
es
inc
lretw
pop
je
lds
dec
fs
cmc
mov
shr
xor
mov
out
add
or
lret
jmp
mov
jb
jae
bound
xchg
pop
or
jmp
inc
ja
sbb
inc
and
inc
jae
cmp
popa
orl
or
fistpll
popf
lret
sbb
mov
mov
pop
outsl
aaa
cmp
cli
xor
pop
ljmp
mov
mov
clc
and
jb
test
mov
imul
push
add
push
rcll
les
push
pop
leave
push
clc
cmp
es
test
insl
mov
push
mov
and
cs
out
jp
cmpb
loop
jge
dec
scas
or
xlat
in
sub
jnp
shlb
inc
xchg
jp
leave
sahf
adc
jmp
shlb
shll
shlb
jmp
or
mov
mov
adc
pop
push
pop
out
movsl
xlat
dec
int
fmuls
inc
jb
pushf
add
jbe
pop
adc
push
mov
adc
jae
add
mov
jge
aas
add
pushf
enter
cmp
ret
add
push
jge
cmp
ret
sbb
nop
and
std
or
mov
inc
scas
mov
mov
stos
clc
sbb
testl
ds
pop
lcall
cmp
pop
fadds
cmp
pop
jae
jp
or
aas
mov
fildl
mulb
cmp
xchg
mov
or
clc
shll
aam
inc
adc
ja
inc
in
addr16
dec
mov
mov
or
adc
test
out
jge
sbb
cmp
mov
arpl
jecxz
mov
mov
cld
bound
push
lods
mov
push
clc
xor
sub
andl
icebp
adc
mov
mov
xor
xchg
pop
lret
out
mov
add
pop
scas
pop
inc
cltd
mov
jecxz
iret
dec
call
pop
xor
es
stc
push
dec
dec
xchg
adc
cmpsl
insb
lcall
in
loopne
lcall
jo
in
pop
loope
or
xchg
mov
cmp
fisttpll
enter
xor
add
add
and
add
jle
push
int
mov
lcall
jle
pop
stos
jmp
or
stos
sub
ljmp
repz
or
xchg
xor
pop
and
shrb
mov
mov
mov
xchg
or
fnsave
into
sti
call
loope
lods
xor
pop
sbb
xchg
inc
pop
test
int
and
lods
mov
push
hlt
adc
enter
push
add
stos
int3
add
pop
shl
lods
inc
mov
stos
mov
lods
enter
pusha
jne
test
int
aam
enter
kmovb
cltd
push
mov
cwtl
repnz
lahf
or
gs
cmp
mov
sub
sbbb
inc
push
and
jb
xchg
sub
test
mov
fwait
mov
or
out
lods
testl
mov
ds
enter
push
es
xchg
jecxz
adc
add
pop
gs
call
push
cmpsl
pop
cmp
jae
adc
mov
push
cmp
decl
dec
sbb
out
fsubr
xrelease
shl
test
out
aas
push
and
adc
into
fs
and
jmp
sbb
and
popa
rorl
inc
and
adc
push
rorb
adc
push
sbb
xor
mov
lds
mov
mov
xchg
repz
inc
js
inc
push
popf
push
xor
adc
test
addr16
les
xchg
pop
movsb
loop
push
out
push
pusha
push
shl
test
into
int3
dec
sbb
popa
jmp
and
or
std
adcb
cmp
push
mov
lock
jbe
sub
sub
es
or
dec
xchg
or
dec
mov
shl
mov
jmp
sbb
and
out
mov
mov
into
pop
test
xchg
out
in
add
pushf
leave
sub
cmp
int3
cs
jnp
mov
mull
andb
cs
mov
push
cwtl
xchg
das
ljmp
add
mov
push
sarb
push
popf
pop
pop
ljmp
xorl
cltd
adc
aas
in
push
rcll
mov
movsb
jg
xor
scas
push
stc
pop
cmpsl
hlt
pop
mov
andl
jo
pop
movsl
dec
add
dec
xchg
fcom
ja
jle
data16
adc
test
or
sub
imulb
iret
sbb
mov
or
adcb
scas
sub
adc
enter
lods
inc
dec
imul
xchg
mov
mov
inc
xchg
cmovae
push
push
jae
stos
sbb
push
cmp
mov
jae
lahf
or
test
gs
jo
jmp
xchg
add
xor
push
outsl
and
cmp
sub
movsb
dec
sub
cld
popa
insb
xor
jnp
sar
jno
inc
push
inc
sub
inc
popf
testb
ret
pusha
mov
pop
ret
xchg
popf
inc
loopne
and
mov
cli
fsubrp
in
lods
cmp
push
cmp
ljmp
leave
dec
jo
rorl
inc
mov
out
cmpb
lcall
lret
pop
fdivrl
inc
cmp
adc
jo
mov
dec
jmp
stos
mov
jnp
sbb
mov
pusha
mov
out
pop
idivb
ja
push
fcompl
sub
frstor
mov
lahf
mov
daa
dec
loop
xchg
mov
xor
ds
add
mov
lret
pop
imul
or
imul
mov
cmp
cmp
sahf
push
jmp
cli
mov
in
stos
inc
stos
sub
mov
push
or
je
sarb
dec
popf
push
cmp
aad
repnz
mov
test
ljmp
mov
daa
mov
popa
movsb
outsl
xchg
fwait
ret
test
ss
sbb
adc
push
jmp
xor
pop
add
loope
test
lods
int
inc
mov
xchg
add
fldcw
lea
dec
sar
dec
popf
lret
mov
jmp
dec
sbb
cwtl
shl
push
mov
call
xchg
movsb
mov
xchg
call
scas
jmp
subb
pop
mov
jg
jnp
push
stos
cmpsb
cmpsb
repz
pextrw
mov
sbb
mov
xchg
test
test
sub
lea
push
mov
in
test
xor
mov
mov
mov
dec
aas
nop
cs
sub
ds
daa
rolb
fidivrs
jno
in
inc
xlat
ret
out
je
jle
inc
daa
xchg
fsubp
pop
lret
fcmovb
xor
jmp
out
mov
aaa
outsl
inc
xchg
fcmovu
and
xchg
jmp
pop
xor
mov
push
ja
and
add
xchg
fstpl
sbb
inc
addr16
xchg
cmc
leave
mov
notb
je
repz
xor
mov
cmp
sub
shl
fistps
jg
push
inc
dec
call
push
sbb
shll
popa
push
add
ficomps
icebp
push
insl
xchg
addl
jg
clc
repnz
mov
mov
ja
jp
imul
movsl
cs
pop
push
orb
add
xchg
cmp
jnp
or
repz
js
add
and
in
std
jp
mov
inc
jge
dec
sti
into
out
jb
mov
aad
pushl
enter
adcb
and
jge
pop
jo
std
pop
dec
rcll
je
mov
lahf
test
movsb
adc
in
or
mov
in
repnz
shrl
jno
in
setne
pop
jae
int3
out
or
aas
scas
push
xchg
adc
xchg
fwait
gs
pop
in
push
into
imul
test
in
mov
cmp
xchg
into
cmpsl
xor
out
cli
lods
cltd
cli
push
mov
cmc
mov
cmc
outsb
mov
test
outsb
mov
cmp
inc
push
sub
in
inc
or
pop
xor
and
ss
inc
xchg
adc
mov
sbbl
cmpsb
jmp
mov
jnp
ja
add
icebp
push
sbbl
cmpsb
mov
dec
inc
je
mov
outsb
ja
int
mov
enter
pop
xor
sti
and
xchg
inc
mov
mov
xorl
sub
add
xchg
pop
test
cwtl
ficoms
xchg
jb
out
popf
push
cmp
stc
mov
pop
sar
and
nop
jp
pop
lds
mov
jne
icebp
cmpsl
adc
pop
loop,pn
inc
mov
xor
xor
into
xchg
jg
subb
stos
loopne
or
push
xchg
or
sbb
lds
add
pop
xchg
adc
insb
mov
outsb
adc
shrl
pop
dec
mov
ja
dec
push
or
mov
inc
repz
xor
inc
in
inc
stos
inc
sbb
ficompl
lods
lret
inc
sub
ret
test
mov
add
lahf
adc
mov
pop
add
pop
inc
mov
or
enter
test
mov
rcl
cltd
pop
or
xorb
aam
mov
jb
sbb
lods
xchg
adc
xor
test
leave
stos
or
dec
dec
cld
mov
cli
push
adc
ficoms
lahf
mov
cld
nop
mov
cmp
je
hlt
js
out
push
loopne
add
jae
push
sbb
ja
pop
lock
and
sbb
pop
adc
aad
jb
clc
sbb
pop
mov
and
fwait
hlt
mov
xorb
add
dec
js
adc
fsubrl
fiadds
sbb
mov
sbb
sub
sbb
imul
in
adc
ja
in
scas
add
rol
arpl
jbe
or
repz
cmpsl
sub
in
insb
inc
and
scas
out
xchg
shl
scas
or
shrb
and
sbb
add
sbb
cmp
nop
mov
stc
iret
pop
jmp
imul
mov
lods
out
fistl
dec
in
xor
test
les
push
jg
cmp
rcl
pop
daa
loope
test
inc
das
sub
sbb
shll
adc
sbb
lea
lds
pop
and
push
jns
jb
pop
xchg
jns
push
rcll
mov
movsb
mov
decb
pop
jae
mov
mov
mul
sub
pop
mov
push
ror
icebp
xor
xlat
push
cmp
mov
les
cwtl
jnp
mov
mov
mov
in
xchg
or
ljmp
mov
push
in
cmc
pop
lds
cmp
loopne
and
jle
pop
sbb
and
dec
outsb
jl
sub
mov
push
pop
rcrl
aaa
test
js
dec
int
mov
mov
push
std
aas
leave
and
mov
ret
data16
xor
test
popa
add
mull
int3
stos
inc
or
ja
xchg
cltd
mov
sub
mov
mov
cli
insb
repnz
cs
insb
xor
or
and
cmp
js
stc
cs
dec
icebp
lods
in
das
add
push
and
mov
jnp
je
inc
inc
dec
and
mov
ljmp
mov
out
add
mov
int
divl
pushf
insl
mov
jnp
xor
mov
mov
xor
sahf
shll
xchg
xor
inc
daa
jae
xor
push
cmc
enter
lea
jbe
stos
pusha
popa
dec
out
cmpsb
lret
sbb
mov
cmp
pusha
xor
jmp
xchg
add
cmpsl
dec
movsl
pop
pop
stc
out
jbe
stc
sbb
push
and
popf
sub
fwait
inc
and
or
cli
xchg
insl
call
mov
push
mov
cmp
std
lret
jle
jo
shl
or
ret
xchg
jmp
xchg
ret
fldcw
mov
fnstsw
insb
nop
adc
cwtl
fidivs
dec
insl
cmpsb
mov
sub
pusha
pop
add
sub
shl
dec
mov
xor
mov
push
rclb
mov
mov
xchg
inc
inc
mov
mov
sbb
inc
int3
jmp
cmp
dec
leave
push
xor
popf
pop
lods
out
dec
shrb
add
sti
stc
inc
pop
into
sar
xchg
jle
mov
mov
or
cmpb
fldcw
xchg
insb
inc
adc
je
inc
out
enter
mov
inc
cltd
mov
lods
inc
mov
aam
pushf
rorl
sbb
movsb
adc
movsb
rorl
cmp
sbb
fsubl
adc
sbb
in
cli
adc
dec
ret
sti
shlb
xchg
xor
outsl
mov
mov
cmpsl
stos
insb
sbb
pop
and
adcl
adc
jno
xchg
jmp
mov
loope
popf
and
jmp
sbb
enter
pop
inc
xchg
insl
jb
nop
adc
sbbb
addr16
push
lcall
fcomip
idivl
out
test
aam
xchg
sub
jnp
cmp
test
stc
push
and
mov
jle
jne
add
xchg
cmp
pop
adc
pop
pop
mov
popa
pop
push
iret
jecxz
jp
fwait
outsb
imul
mov
add
pop
fsubp
cmpsb
in
dec
dec
js
xor
movb
ss
std
cmpb
xor
xchg
popf
mov
push
push
jg
mov
mov
mov
jbe
in
jns
repnz
jne
mov
js
fsubrs
ret
adc
inc
jno
pop
sbb
xor
ss
call
pop
fcomps
lods
lret
push
testb
ret
aas
push
popf
jns
adc
fldenv
call
mov
xchg
popa
jmp
fdivrp
std
bswap
mov
jno
in
data16
jb
dec
mov
jbe
mov
mov
out
xor
rolb
pop
xorl
add
jmp
divl
shll
jnp
lods
cltd
xor
dec
out
es
dec
inc
inc
out
cmp
ja
sbb
jb
stos
add
add
clc
dec
leave
pop
cmpsb
xchg
jl
and
lods
out
and
notl
or
lds
mov
imul
lea
cmpsl
xor
add
dec
xor
cmc
or
imul
flds
loope
add
inc
test
xor
mov
adc
inc
add
jb
jecxz
pop
mov
js
adc
test
or
out
int3
std
sahf
pop
ja
push
xor
in
add
dec
pushf
lret
mov
cmpsb
xlat
daa
mov
adc
int
fiaddl
jecxz
sbb
sarl
aad
dec
imul
cmp
jg
or
imul
cmp
daa
cmc
stc
xor
ret
push
dec
dec
mov
icebp
and
and
and
imul
pusha
outsl
pop
cmpsb
inc
into
xchg
fcoms
and
push
and
xor
jmp
inc
sbb
jno
addl
xor
or
or
popa
cmp
iret
shl
pop
cld
stos
xchg
lds
cli
cmc
and
outsb
xor
sbbb
ds
repz
loope
pop
push
xor
mov
cmp
jg
je
movb
push
int3
das
fucomi
data16
leave
ja
jg
jecxz
enter
fs
stos
mov
jnp
jno
incb
mov
or
int
mov
call
lock
mov
insb
sbb
cmp
shlb
orl
mov
xchg
cs
xor
out
dec
cmp
adc
push
sbb
fstps
ds
add
jae
loopne
dec
pushf
jg
xchg
andnps
push
adc
sub
cmp
out
outsb
pop
jno
pop
popf
mov
xchg
xchg
xchg
jb
cmp
xchg
std
data16
je
std
fxch
std
popf
imul
and
sub
sbb
andl
inc
xchg
sub
pop
or
cmpsb
sub
imul
dec
repnz
shll
push
mov
or
add
pusha
xor
out
test
cmp
in
lock
xchg
and
cmpsl
xchg
xor
test
in
test
sub
inc
enter
sbb
pop
fisubrl
sti
out
ret
ss
outsb
sbb
lods
ret
push
jl
lods
xlat
fisubrs
mov
imulb
ret
sub
js
mov
rcr
popf
push
and
xchg
in
jle
sub
test
pusha
cmp
daa
push
movsl
xchg
inc
popl
push
sub
das
out
push
dec
pop
sub
dec
pusha
pop
pop
or
sbb
or
adc
mov
sub
and
or
clc
xchg
and
call
pop
outsl
roll
cmp
loop
sbb
push
in
cmpl
cmpsl
inc
icebp
or
es
jno
std
fs
jg
and
cmpsb
jb
icebp
fbstp
outsl
and
insb
imul
cld
xlat
movsb
jnp
jne
icebp
sbb
dec
inc
sti
pusha
push
callw
repz
pop
push
push
lahf
dec
mov
inc
push
int3
push
jg
adc
dec
fwait
jbe
sub
adc
leave
mov
add
xchg
mov
jle
mov
cltd
das
xor
scas
ret
mov
mov
sarl
movl
xchg
ljmp
std
push
inc
push
into
pop
xchg
cmp
dec
mov
addr16
cmpb
stos
jp
repz
dec
push
pop
movb
inc
nop
jg
jge
out
mov
inc
pop
push
into
mov
sbb
repnz
mov
out
xchg
in
and
ret
imul
jmp
lret
sub
sbbb
test
jmp
cmp
pop
data16
hlt
xor
dec
add
xchg
dec
lds
test
paddb
lock
adcb
or
mov
andl
xchg
ljmp
or
xor
xchg
scas
xlat
mov
and
rol
imul
add
add
push
cltd
mov
stc
aaa
fadds
mov
shlb
fdivp
cmp
rcrb
adc
int
dec
stos
push
imul
add
or
in
inc
sub
scas
pop
adc
outsl
push
in
dec
cmp
in
mov
fstpl
outsb
xor
push
push
jp
sbb
scas
fyl2x
ja
adc
mul
mov
add
adc
and
gs
enter
push
or
dec
add
fisubrl
mov
shlb
into
mov
xor
xchg
push
test
mov
movsl
int
pop
inc
xchg
adc
out
repnz
ret
ljmp
cmp
sub
je
out
out
repnz
jecxz
aad
jge
fldt
jnp
and
push
fstpl
xorl
addr16
rorb
mov
sbb
mov
xchg
ret
inc
enter
scas
pop
shll
jmp
adc
jmp
sarb
mov
cmp
sub
pop
push
pop
es
sti
nop
adc
xchg
pop
test
dec
stos
cmpsb
pop
or
cmp
xor
pop
pushf
sub
test
in
fs
in
add
cli
fistpl
into
icebp
movsb
shl
sbb
fdivrl
pusha
xor
mov
sbb
test
xchg
mov
cmp
inc
mov
or
movsl
push
je
repnz
xchg
sahf
jbe
push
jo
inc
cli
movsb
cmp
out
push
adc
cli
xor
arpl
fs
mov
or
dec
icebp
rcrl
pop
js
arpl
int3
jo
push
fimuls
lret
inc
mov
xchg
lret
sub
outsb
or
scas
push
jecxz
movlps
adc
jg
sub
idivl
aaa
cmp
jno
pop
out
jns
or
lahf
bound
push
push
xchg
insb
lahf
push
fisubrs
dec
jbe
cltd
mov
push
mov
xchg
sub
je
cmp
pop
nop
sub
sbb
imulb
shl
sub
pop
mov
loope
fcoms
xor
sbb
push
aad
mov
les
gs
mov
lds
lcall
lods
dec
js
push
add
adc
stos
xor
adc
rcr
lods
lret
cmc
std
outsl
inc
ret
sbb
arpl
stc
out
add
negl
lahf
cli
sub
test
add
dec
adc
ret
out
xor
sbb
push
pusha
das
or
inc
pop
cmp
into
inc
stos
push
jne
mov
jecxz
cmpsl
nop
mov
add
popa
dec
mov
xchg
adc
mov
clc
pop
pop
lods
jle
mov
xchg
and
test
aaa
inc
ficomps
repnz
push
repnz
or
ret
xchg
imul
sbb
leave
jne
jl
mov
jb
xor
cli
les
loope
cmp
test
jae
adc
rclb
incl
adc
fadd
add
sahf
leave
repnz
jmp
ret
sbb
aam
imul
cmp
sarl
subb
in
pop
push
sbb
or
rcrl
arpl
and
xchg
jmp
jns
int3
sti
mov
fidivrl
sbb
cwtl
push
jmp
jbe
mov
data16
bound
cmp
scas
cli
and
dec
and
iret
ret
popf
ljmp
push
test
and
xor
fistpl
in
cs
aas
dec
inc
aam
and
stos
and
sub
loope
mov
xor
xchg
mov
pop
sarl
sbb
mov
pop
sbb
sub
mov
push
addl
inc
nopl
push
fsts
push
sub
pop
and
ret
and
jns
jno
sbb
imul
fwait
pop
popa
mov
xlat
lock
ret
loopne
pop
ljmp
mov
gs
inc
in
insl
faddp
lahf
mov
sti
inc
dec
jbe,pt
adc
push
test
cmp
fsubl
xor
mov
pop
add
or
inc
pushf
sub
fwait
aam
mov
xor
mov
in
add
inc
pop
leave
jae
push
pop
lock
dec
aad
adc
cmpsl
das
lret
adc
cmc
jle
hlt
xor
cmp
sub
popa
mov
repnz
sbb
test
jae
filds
sbb
jbe
xor
lds
pop
jl
mov
cmp
roll
xchg
xor
inc
jecxz
mov
stc
push
cmp
lock
enter
sub
dec
enter
jecxz
mov
idiv
pop
fmulp
sbb
cld
mov
clc
fwait
addr16
add
fs
nop
xlat
mov
cmpl
cs
xlat
sub
cmp
jb
aam
pusha
and
fnstcw
dec
shrb
add
sti
jmp
or
inc
orl
xor
out
jle
push
ljmp
pop
out
xchg
lcall
pop
lahf
into
arpl
mov
adc
cmp
pop
push
imul
stos
and
xor
or
mov
pusha
sub
inc
mov
movsb
dec
sub
mov
mov
adc
inc
and
je
and
sti
xor
sub
test
inc
in
push
xor
fcomps
mov
aaa
mov
cwtl
cltd
add
ja
int3
and
mov
out
cltd
js
pop
mov
jl
xor
pop
bound
test
lcall
pop
mov
sub
mov
push
dec
mov
out
outsl
dec
sbb
data16
lret
pop
cs
sbb
mov
mov
int
clc
nop
pop
rcrl
inc
sub
sahf
imul
xchg
fldl
inc
aad
lret
mov
dec
test
out
push
xor
push
jnp
inc
pop
lcall
xchg
movsl
pop
lret
or
sahf
pop
rorl
rorb
call
xchg
out
dec
mov
pop
leave
mov
cmp
divb
jne
or
aad
fcoml
lcall
fimuls
lds
scas
fnstsw
mov
mov
rol
mov
shl
mov
sbb
das
add
jne
pushf
fldl
jne
in
rcl
daa
fdivrp
int
dec
sahf
jno
push
dec
test
int
das
mov
push
in
jge
lret
push
test
cmpsl
push
icebp
sub
ds
fwait
push
lahf
in
imul
mov
jae
gs
xchg
je
call
imull
mov
mov
pop
mov
repnz
scas
out
cmp
adc
repz
cmpb
shrl
filds
movsb
jo
mov
pop
mul
mov
jbe
ret
notl
mov
rcll
cmp
test
cli
jae
imul
jb
sub
out
pop
js
shl
mov
cmp
cwtl
divb
mov
sahf
add
jb
cmp
std
loop
sbb
or
cmp
sbb
adc
sbbb
mov
js
cwtl
fcmove
pminsw
xchg
mov
push
and
inc
cmp
mov
negl
nop
fxam
cmovbe
hlt
dec
push
popa
fdivs
icebp
fisubs
test
stc
outsl
scas
sub
or
inc
mov
movsl
das
pop
cwtl
or
adc
adcl
xor
test
adc
fisubrl
push
stc
lcall
out
jle
dec
loop
in
jo
jo
insb
fs
test
mov
mov
andl
incl
gs
pushf
lret
sti
sbb
push
push
push
sub
inc
mov
je
aaa
pusha
test
pusha
out
sub
mov
or
enter
add
adc
out
mov
mov
sbb
out
jge
xchg
push
cs
jo
jg
mov
add
xchg
dec
in
cmc
and
sub
jne
popa
in
jg
lods
push
in
and
leave
arpl
cmp
ljmp
fcmove
mov
dec
fwait
mov
test
jmp
sbb
mov
and
mov
sub
test
insb
sub
adc
dec
inc
xchg
and
cmp
inc
or
loope
ja
mov
inc
les
std
imul
mov
in
aad
sub
popa
movsl
aad
xchg
loope
xor
movsl
dec
xchg
and
cmpsl
xchg
sbb
jnp
orb
jg
stos
aas
setbe
sub
jbe
aaa
es
add
bound
fldl
sbb
and
dec
fldcw
movsl
pushf
adc
in
lock
dec
sub
pop
adc
sti
dec
aaa
jb
clc
pushf
fucomip
sbb
push
add
add
std
jnp
rclb
xor
xchg
mov
mov
test
inc
outsl
or
push
adc
sub
stos
stos
mov
cs
test
dec
es
stc
loop
pop
push
lret
push
or
jl
add
bound
or
dec
pop
sub
xor
out
inc
sarl
sbb
je
xor
or
aaa
jp
lods
lahf
insb
jmp
dec
sub
popf
je
rep
inc
in
loopne
mov
scas
aas
sar
jne
clc
stos
arpl
mov
adc
popa
add
out
or
push
mov
pop
xchg
jge
scas
xchg
inc
mov
fcmovne
cld
add
clc
out
jne
ljmp
iret
xor
test
xchg
arpl
sub
inc
mov
and
enter
mov
sbb
xchg
xchg
out
mov
mov
in
inc
out
sbb
and
sbbb
ret
mov
dec
fdivs
mov
out
mov
enter
es
aas
les
cmp
push
push
dec
sub
inc
mov
inc
fistpl
push
ss
fbstp
dec
mul
lods
aas
sub
pop
gs
cld
mov
fbld
out
sbb
addl
sbb
mov
xor
in
jno
or
and
test
jnp
aad
xor
div
or
jmp
sbb
les
lock
ja
push
popa
mov
push
in
and
jmp
mov
or
arpl
mov
bound
push
mov
into
xchg
cmp
out
and
mov
mov
xlat
je
pushf
test
add
push
sbb
pop
dec
adc
mov
fldt
mov
mov
jg
test
or
sbb
fs
rorl
icebp
out
out
sub
insb
sbb
sbb
push
jbe
mov
lea
cmp
xchg
pop
fistpl
scas
ss
out
pop
pop
es
sbb
push
scas
mulb
test
sar
in
mov
sub
sbb
mov
mov
sbb
and
sti
les
test
sub
sti
fs
mov
cmp
in
mov
jmp
and
or
mov
mov
lret
mov
cmpsb
pop
push
cmpsl
xchg
adc
mov
fcoml
jge
add
imul
xor
jno
jns
lods
test
push
fiadds
pop
pop
aas
jle
int3
add
cmp
lahf
mov
lock
ljmp
loop
cmp
stos
xor
jb
addb
and
dec
into
mov
fisttpll
jne
sub
jbe
mov
cltd
xorb
xchg
and
sti
fisttpll
jle
lret
xchg
test
sbb
xchg
mov
movsb
insb
xchg
mov
stos
dec
push
sub
rclb
push
test
sbb
jb
push
add
sbb
xchg
jnp
pop
or
test
mov
pop
add
or
test
push
in
pop
test
jns
pop
movsb
mov
cpuid
xor
ds
hlt
sub
add
out
idiv
jle
sbb
or
cmp
pop
mov
insb
in
ret
iret
pop
adc
cmpsb
hlt
popf
stc
imul
adc
jnp
push
xchg
mov
push
dec
dec
clc
pusha
out
sbb
mov
dec
in
test
inc
inc
sub
jle
or
mov
xor
or
cld
mov
rolb
xor
loop
pop
and
inc
fmull
sbb
bound
push
inc
xchg
and
mov
gs
je
dec
or
fwait
jo
mov
fimull
and
dec
push
movsl
mov
popf
leave
shrl
fnstenv
xchg
xor
jno
xchg
lret
mov
scas
filds
push
ds
rcl
pop
popf
pop
mov
cmp
lock
fildll
es
icebp
mov
movsb
cmp
xlat
and
add
and
mov
mov
pushf
rcrb
jne
mov
xorl
insb
imul
nop
in
icebp
mov
js
sbb
pop
test
call
and
jmp
popa
cmp
xchg
add
subb
mov
in
fists
xlat
inc
int
cmc
ja
dec
andl
icebp
push
sahf
mov
pop
sub
lret
lock
lcall
in
movsl
mov
leave
pop
cmp
loopne
out
inc
mov
cwtl
jns,pn
inc
or
out
lods
repz
mov
into
sbb
mov
push
inc
jns
imul
jb
adcl
lods
mov
sbb
cmp
fidivs
rcrl
adc
mov
into
stc
dec
leave
lret
dec
dec
and
sahf
push
mov
arpl
scas
popa
mov
in
lea
enter
xlat
lods
jne
clc
ret
mov
jmp
repnz
out
jbe,pt
adcb
jp
loop
push
aam
pop
mov
add
rclb
fistpl
push
fildll
call
loope
cli
lock
test
xchg
cs
test
xchg
push
push
sub
pushf
int
push
mov
jns
arpl
in
frstor
cmp
movsb
push
xor
je
int3
repnz
dec
sub
and
push
xor
add
or
fbstp
xor
adc
fcomps
mov
push
pop
arpl
xor
lcall
mov
clc
cmp
scas
stc
pop
mov
mov
add
ss
bound
in
or
dec
inc
jns
sub
in
add
arpl
data16
mov
addr16
imul
shl
push
add
test
inc
jnp
rcl
add
jge
cmp
push
sahf
icebp
ja
sbb
mov
push
stos
pop
mov
test
aas
dec
pop
ret
inc
xchg
lahf
mov
data16
clc
mov
dec
lcall
adc
pop
and
jge
or
xchg
push
cld
sub
jg
fcmovbe
fcmovu
lret
sarl
insl
mov
mov
rorl
fwait
add
rcll
or
aad
mov
lods
adc
sahf
mov
xor
subb
xchg
inc
and
pop
or
xor
pop
repz
icebp
jns
and
rclb
es
les
orb
lcall
or
enter
and
int3
push
dec
addr16
cmp
mov
mov
cmp
pop
adc
roll
sti
dec
lret
ljmp
add
hlt
or
subb
pop
cmp
jg
dec
push
sbb
pop
lods
ja
fidivrl
push
test
das
sub
stos
ljmp
pop
lock
xchg
fldenv
dec
adc
xchg
cmpsb
sbb
fwait
lfs
fisubrs
adc
lods
loopne
loop
adc
pop
adcb
sub
xor
lret
icebp
push
icebp
cmp
mov
fiadds
jmp
jno
je
je
ss
mov
pop
dec
popf
lret
fwait
mov
leave
xchg
jb
sub
in
push
fcom
movsl
fwait
scas
push
xor
fnstcw
mov
fldl
gs
in
cmp
stos
lea
add
cmp
ret
call
pop
daa
inc
sbb
iret
inc
inc
leave
std
inc
sbb
test
clc
push
jbe
test
mov
pusha
nop
sub
dec
clc
je
inc
mov
push
dec
pop
in
fstpt
hlt
int
movsl
pop
or
into
mov
cld
lahf
std
out
scas
inc
mov
pop
test
pop
cmpsb
xchg
xchg
add
rol
dec
inc
insl
aad
add
jecxz
inc
std
mov
out
xor
mov
push
mov
sub
mov
add
adc
xor
movl
flds
adc
loop
jl
outsb
or
rorl
les
in
cmp
dec
cwtl
loope
into
popa
push
sti
out
out
mov
pop
xchg
sub
push
inc
xor
bound
nop
in
pop
push
mov
jae
xchg
vorps
dec
lds
pop
lahf
icebp
cmc
dec
push
pop
jl
je
insl
add
sti
inc
fimuls
dec
push
movsl
outsb
dec
sub
lods
mov
xor
test
js
clc
adc
push
sub
stc
mov
dec
xchg
dec
or
pop
add
push
es
push
cmpsl
fwait
cmp
or
jo
mov
cld
inc
fdivl
ja
jb
sbb
test
push
out
ja
mov
gs
cs
push
fwait
xor
scas
outsb
cmp
js
adc
dec
xchg
dec
mov
jae
xor
push
jb
add
or
ret
dec
mov
cmc
out
sarb
or
mov
adc
inc
jle
sbb
inc
popf
test
icebp
test
pop
add
sub
push
jo
dec
mov
mov
add
stos
enter
outsb
aaa
test
out
add
push
xchg
dec
scas
iret
ljmp
xlat
push
int3
repnz
icebp
dec
and
jl
stos
jae
in
jl
sarl
sbb
gs
pop
pop
dec
addr16
xor
sub
shlb
dec
lret
xchg
cmp
mov
dec
pusha
inc
and
cmp
and
push
clc
fs
mov
xchg
daa
adc
or
mov
inc
lods
jbe
cs
inc
inc
sub
push
mov
repnz
inc
sarl
push
pop
lds
stos
xor
jge
test
scas
push
xchg
fdivrs
jb
mov
aad
push
ja
sbb
sarb
movl
sub
adc
notl
insl
es
mov
sub
lahf
xor
xchg
scas
mov
lods
sbb
adc
hlt
adc
adc
adc
mov
loopne
jbe
cmp
ljmp
inc
outsl
add
or
rcrb
stos
jge
aam
bound
pop
and
pop
lods
in
pop
add
pop
rorb
or
movsb
pop
movsb
in
lea
jle
mov
sbb
mov
adc
xor
cmp
subb
fwait
adc
cld
sub
mov
scas
sbb
inc
jbe
xor
or
in
pop
test
mov
adc
lds
pushf
jg
movsb
mov
or
in
lds
std
cmc
dec
sbb
sub
gs
lcallw
jb
xchg
add
rorl
test
push
ljmp
pop
mov
adc
mov
out
mov
cltd
ret
les
jmp
cmp
out
or
push
cwtl
xor
push
out
mov
test
pop
in
aaa
out
cmp
mov
xchg
jbe
mov
or
mov
movsb
dec
pop
test
mov
inc
lods
jl
in
add
add
sbb
mov
pusha
cltd
or
cmp
mov
push
or
pushf
cltd
arpl
push
or
fsubp
push
sarb
insl
and
test
fisubl
adc
adc
pusha
fildll
popa
mov
imul
adc
aaa
fisubrs
jne
or
mov
fwait
sub
outsb
stc
rcr
out
inc
sub
lods
mov
sbbb
loope
int
in
pushf
push
mov
jl
sub
add
pop
inc
mov
add
test
lahf
lret
xchg
jb
cli
xchg
pop
sahf
test
adc
sub
lahf
push
adc
pop
outsb
jne
cwtl
popf
clc
xchg
push
jo
xor
and
cmpsl
jle
sbb
cmpsl
movsb
ds
push
in
leave
mov
mov
xchg
cld
mov
mov
mov
incl
js
enter
sti
fistpll
push
pop
aaa
out
cli
mov
xor
scas
xchg
add
cltd
mov
and
mov
addb
rol
xchg
mov
fsubs
test
push
dec
addr16
xchg
pop
jmp
test
int
mov
sbb
pop
orb
jns
ds
ds
addr16
push
nop
push
xchg
pop
jb
out
mov
and
orl
addr16
sbb
orb
push
test
movsl
inc
out
mov
xchg
mov
shl
sub
adc
out
testb
or
or
jl
iret
pop
mov
das
sub
jp
insl
repz
dec
dec
adc
or
cmpsl
cmp
push
ror
xchg
or
pop
inc
adc
adc
movsb
jno
lahf
fadd
popa
xchg
jne
sti
sbb
cmc
stos
pop
pop
inc
cmp
xor
cli
loope
xor
imul
inc
aas
add
xchg
mov
out
cmc
sub
sbb
or
testl
pop
cmpsl
mov
cmp
pop
xlat
push
jp
mov
jae
dec
sbb
push
daa
mov
push
shlb
out
xor
mov
or
push
cwtl
insb
sbb
mov
mov
jb
jbe
push
push
lods
fidivs
notb
xchg
addr16
stos
lock
fldt
dec
xchg
bound
adc
cltd
push
icebp
push
cmp
push
test
mov
adc
cmp
pop
or
mov
out
add
test
insb
mov
les
jp
xchg
lods
rorl
dec
inc
cmp
and
inc
jnp
xchg
push
lret
xchg
add
pop
xchg
push
xchg
inc
aaa
clc
fidivrl
pop
pop
popa
add
inc
sub
sub
loope
cmp
arpl
orb
fmuls
sbb
add
mov
out
mov
add
aad
lret
xchg
rcl
xchg
in
jl
and
into
dec
lods
in
cld
inc
mov
lds
pusha
jg
mov
xor
movsl
mov
jmp
call
arpl
pusha
add
jb
mov
js
push
movsl
je
jb
xor
cmpb
push
insl
adc
stos
scas
je
mov
inc
data16
pop
and
decb
or
cmp
inc
rdtsc
out
icebp
out
js
rcrl
lret
les
ja
js
bound
mov
dec
ret
pop
iret
cmc
push
shlb
movsb
shll
adc
movb
loope
mov
xchg
in
fs
adc
jbe
xchg
fsubrs
or
or
cld
int
lret
jl
rorl
sub
enter
jp
hlt
fs
dec
pop
mov
inc
lret
lcall
xlat
or
into
cmp
inc
inc
fidivl
mov
cmp
cmp
or
divl
andb
je
xor
das
das
push
pop
aad
std
aad
fcoms
mov
subb
push
push
or
or
mov
das
xchg
push
cmp
push
dec
test
dec
push
aam
cwtl
rolb
aaa
jecxz
mov
jnp
sar
outsb
call
fiadds
add
mov
add
jne
xor
stos
out
push
sahf
add
mov
aam
push
daa
rol
sbb
adc
pusha
sahf
loop
cmpsl
fwait
in
jecxz
mov
insl
outsb
xchg
cmpsl
inc
jo
call
add
xor
xchg
dec
push
std
inc
ja
orb
aad
ljmp
dec
call
pop
lcall
into
add
adc
insl
clc
xlat
xchg
icebp
nop
les
push
dec
aas
xor
dec
fcmovb
out
push
arpl
imul
push
jno
mov
dec
aas
jmp
hlt
jp
rcrl
adc
sahf
sub
dec
cmc
rorb
mov
das
ljmp
fadd
int3
xchg
lcall
push
sahf
pushf
lea
and
insl
xchg
rcll
inc
ljmp
stos
ljmp
fimull
divb
jp
dec
xor
mov
test
movsb
xchg
loopne
jns
repnz
pushf
xchg
sbb
cmpsl
paddb
imul
fwait
xor
inc
dec
jne
fistpl
ljmp
mov
fs
pop
lds
add
xchg
ret
adc
mov
fdivr
pop
push
repnz
fsubl
mov
fucomi
jae
mov
cld
and
fcoms
and
or
push
jo
mov
pop
stos
mov
andb
into
and
imul
pop
xor
jmp
mov
cmpsl
add
lret
cmpsl
rclb
in
jmp
mov
lods
arpl
xor
sbbl
push
and
pop
bound
mov
add
das
int
je
in
jb
aaa
push
mov
mov
add
lock
fdivl
fnstsw
es
and
shlb
jecxz
ret
adc
push
popa
push
add
sbb
adc
xor
pop
cld
push
mov
iret
out
fdivl
in
cmp
sub
ljmp
and
or
push
jl
ds
popa
jb
lods
aaa
adc
sub
adc
aas
or
mov
mov
dec
pushf
ds
icebp
sub
jno
nop
and
popa
loop
test
out
add
dec
movntps
inc
jbe
movsl
out
lcall
or
test
outsb
inc
and
js
cmc
inc
jmp
jnp
loope
clc
mov
add
lret
or
pop
xor
and
jnp
aaa
or
xor
stos
rcll
decl
mov
aaa
outsb
push
fisttps
mov
in
aaa
push
enter
mov
es
dec
pop
xor
jnp
pop
movsl
and
mov
xchg
loop
adc
andl
jo
mov
outsb
jb
ljmp
mov
in
je
or
mov
pushf
rolb
push
xor
daa
xor
jl
mov
push
pop
jp
mov
faddl
cmc
fsts
popa
mov
mov
dec
fstps
ss
popf
pop
or
movsbl
xchg
movd
cmp
std
insb
fsubr
aaa
sub
fadd
repz
cli
icebp
imul
jge
js
add
jnp
fidivl
xchg
push
outsb
adc
loope
mov
mov
mov
and
or
fisubrl
stos
or
out
cmp
pop
call
xchg
pop
push
out
arpl
mov
lcall
rolb
scas
or
mov
or
push
or
add
push
adc
push
mov
dec
and
mov
or
cwtl
push
out
sub
xchg
enter
insl
and
shl
ret
outsb
mov
repz
pop
push
scas
fsubrs
xchg
and
lods
mov
jbe
fdivrs
aas
ss
cmp
mov
mov
sub
mov
mov
rcr
jns
clc
sbb
mov
xchg
ficompl
loopne
dec
jnp
sub
in
out
push
loope
fmul
int
mov
fdivs
or
popf
mov
mov
fistl
and
push
cwtl
pop
lods
push
xor
clc
pop
inc
mov
out
push
jns
push
arpl
data16
pusha
stos
movsb
adc
push
stos
sbb
cmp
inc
inc
xor
add
je
dec
pop
rcrl
mov
xor
mov
push
push
fstps
pop
shlb
sub
lds
mov
lock
shll
addl
cmp
sbb
mov
jnp
mov
adc
mov
and
jns
fs
dec
pop
pushf
jge
pop
cmpsl
jmp
xor
popa
cmp
mov
jmp
test
and
cs
mov
icebp
sub
shlb
add
mov
mov
or
jbe
push
in
inc
int3
clc
dec
push
add
ret
sbb
mov
jle
jle
push
pop
sahf
or
out
mov
and
mov
out
stos
rcr
lods
push
icebp
mov
int
sbb
fnstcw
pop
push
xor
or
lcall
cli
rorb
rcrb
lds
imul
insl
loopne
xchg
xchg
test
ss
call
sub
xchg
sbb
enter
jg
lcall
enter
jmp
push
sub
fdivrp
mov
xor
insb
jae
aas
cmp
dec
mov
xor
cmp
outsb
out
ds
cld
js
cmp
addr16
sbb
enter
fdiv
pop
inc
dec
add
loope
and
lea
lret
cwtl
ja
cmpsb
std
push
jo
lods
adc
loopne
jmp
ficoml
dec
or
pop
fisubrl
and
ret
fmul
add
push
add
testl
sbb
inc
imul
mov
dec
add
mov
cld
das
add
lret
inc
xchg
fnsave
xchg
mov
xlat
clc
rolb
aam
cwtl
mov
lods
mov
mov
xlat
in
xchg
or
push
repnz
add
cmp
push
push
div
fcoms
imul
int
leave
addr16
in
xor
fidivrs
sbb
push
mov
xchg
js
js
cmp
out
xor
sbb
adc
inc
rcrl
sahf
in
das
popf
dec
es
divb
adc
icebp
test
xchg
lret
sub
inc
jmp
pop
loopne
or
mov
in
inc
dec
mov
cmp
aam
xchg
sar
nop
popl
in
int3
into
int
cwtl
shl
xchg
jno
repnz
js
popf
dec
push
and
cltd
push
mov
ja
arpl
sub
jmp
lea
add
dec
insl
push
enter
loop
sbb
pushf
lock
mov
or
stos
sbb
stos
mov
mov
jecxz
mov
icebp
jns
adc
xchg
in
sbb
push
cmp
int
imul
cmp
push
lock
std
enter
in
scas
aam
jnp
and
pop
lahf
sub
stos
popa
unpckhps
push
stos
cs
xlat
pop
cmp
dec
lret
les
loop
sub
mov
and
jns
addb
int
or
add
nop
jb
sub
mov
dec
pop
cmp
dec
add
dec
lret
int
mov
hlt
cmpsl
imul
cmpsl
lahf
lock
fists
xchg
stc
add
fists
bound
add
mov
mov
push
mov
push
outsb
mov
in
lea
jns
sbb
mov
xchg
mov
pop
cmc
push
pop
mov
aaa
jnp
dec
mov
pop
lahf
jg
and
jmp
idivb
out
xchg
subb
pop
jno
aad
jle
aam
xlat
andb
cld
ljmp
or
xor
xchg
stos
pop
xor
test
push
and
lret
push
and
push
call
and
push
pushf
xchg
sub
sub
xor
dec
ret
push
cmp
adc
adc
xchg
mov
adc
mov
mov
xor
push
inc
sub
mov
cmc
in
out
xchg
mov
xchg
aas
insl
stos
cwtl
mov
adc
test
repnz
mov
lret
or
and
jbe
sbb
je
mov
inc
jae
stc
int
leave
mov
movsl
aam
addr16
jg
xchg
hlt
sub
pop
adc
inc
rclb
add
mov
mov
and
mov
stc
push
cmp
ds
pusha
frstor
in
jle
sahf
movsb
dec
sub
outsb
sub
and
cwtl
ret
mov
jbe
fs
pop
inc
or
sti
nop
cld
insb
and
add
ret
test
sbb
cs
push
mov
sub
inc
sbb
subl
mov
stc
jne
dec
mov
pop
jns
xor
mov
push
jns
jne
push
nop
stc
sbb
xor
sbbl
mov
mov
movsl
push
pop
inc
fmuls
xor
aas
out
jg
mov
fnsave
cmp
iret
xor
xchg
subl
mov
fnstcw
xor
or
dec
fdiv
loopne
ficompl
pop
adc
and
add
ret
out
into
or
negb
cmc
sbb
mov
adc
pop
mov
mov
sub
test
cmp
add
jae
fs
fadd
ja
jg
fidivl
jmp
out
ja
xchg
adc
jmp
fmul
fcom
add
sbb
or
jno
lahf
and
out
or
movsl
adc
loop
mov
xchg
pusha
aam
and
mov
jle
inc
in
jo
fcomip
bnd
cmpsl
mov
adc
rcrb
je
pop
mov
and
test
movsb
ret
add
xor
ja
leave
cmp
in
sub
jbe
jns
lods
add
push
cwtl
cltd
mov
adc
mov
push
aas
add
or
loop
sub
popa
scas
push
mov
jmp
adc
and
sbb
mov
cmove
dec
insl
divb
shl
mov
jge
aad
cmpb
mov
mov
pop
cld
push
and
cmp
js
pop
push
lahf
jle
je
sub
test
insl
inc
rcll
cld
mov
cmpsb
js
mov
sbb
jmp
xchg
leave
mov
mov
mov
rcrb
push
insl
lcall
mov
fsub
sub
adc
or
xor
scas
or
scas
les
aaa
jno
stos
lock
push
ljmp
mov
adc
jl
ret
mov
loop
in
jmp
mov
pop
mov
dec
cli
popf
or
adc
xorb
mov
mov
mov
or
push
xchg
pop
cmpsb
xchg
stos
cmc
mov
mov
shlb
mov
out
add
stos
scas
lea
mov
or
flds
out
sar
xchg
mov
repnz
sbbl
pop
push
xor
pop
test
sub
xchg
daa
pop
adc
insl
push
popa
add
cli
xor
pop
incb
imul
push
or
pop
stos
sub
cli
jb
aas
pop
sbb
jmp
mov
cs
mov
arpl
and
out
loop
adc
pop
movsb
cld
lea
cmpsb
int3
in
daa
rolb
dec
add
sub
mov
sti
add
fnstenv
adc
and
loopne
pop
xchg
mov
outsb
mov
mov
add
xchg
insb
inc
xor
mov
clc
pop
aas
and
aam
mov
pop
ds
xor
lret
dec
mov
outsb
cmp
mov
hlt
or
xor
imul
in
test
adcb
xchg
iret
in
fidivrl
jmp
mov
fsubr
fistpl
xchg
and
pop
xor
dec
pop
cmp
mov
fdivs
into
xchg
fdiv
pushf
idiv
pop
pop
jmp
lret
sub
cmpsl
aaa
lock
xchg
xchg
arpl
into
jecxz
push
mov
out
push
mov
notb
outsb
dec
push
test
loope
mov
and
lea
mov
or
hlt
dec
out
sbb
fisubl
adc
xchg
push
mov
aad
xor
mov
int
repz
out
cltd
std
rcr
in
imul
xor
jmp
add
sahf
xchg
push
xlat
iret
test
es
cmp
push
sahf
aaa
aam
lock
outsb
sbb
popf
data16
add
push
xchg
adc
movsl
lods
or
jne
and
lock
lret
xchg
sbb
and
mov
cmc
in
popf
insl
xchg
pop
pushf
js
mov
push
repnz
dec
dec
inc
sarb
sbbl
push
ja
cmpsb
cmp
and
and
out
cmp
sbb
or
and
push
lea
clc
or
xchg
cmpsl
and
fiaddl
mov
js
aad
mov
lahf
mov
imul
xchg
and
shlb
pop
or
mov
int3
mov
data16
test
scas
clc
cltd
jp
out
jg
insb
add
test
js
push
in
cmp
call
int3
rolb
lea
inc
add
sti
jbe
dec
adcb
inc
xchg
addl
jmp
xchg
lea
int3
stos
scas
nop
or
cmpsb
scas
insl
inc
jo
cmp
adc
dec
lds
and
aas
pop
mov
out
ja
enter
cmp
sbb
dec
ror
call
sub
pop
mov
jns
xchg
push
mov
jge
data16
jbe
test
sub
push
lods
cmc
scas
shlb
xchg
notb
outsl
xchg
dec
add
daa
mov
and
pop
test
add
adc
push
rolb
jbe
jno
fstps
shll
pop
lret
mov
xor
pushf
popf
lret
flds
cs
es
jge
ss
xchg
or
adc
lods
paddusb
sbb
dec
loop
push
test
sbb
into
add
add
or
lds
cwtl
pop
mov
add
xchg
jb
pushf
lock
in
sbb
mov
mov
pavgb
test
inc
xor
shrb
daa
lock
incb
adc
out
les
xchg
lea
mov
jle
xchg
jg
iret
sub
push
dec
push
nop
lcall
jbe
test
lcall
les
xlat
out
mov
or
mov
lret
in
mov
in
adc
dec
lds
cs
adc
loop
jo
cmpsl
into
int
xor
xchg
incl
inc
fsubs
mov
sahf
jge
lods
jo
call
in
jo
pop
notl
je
push
loope
das
lea
jecxz
mov
cmp
addl
xor
mov
cwtl
inc
pop
jge
pop
decl
ja
dec
sti
push
lret
aas
shll
and
push
and
incb
xchg
lock
ja
in
add
pop
cli
popa
stc
xchg
xchg
mov
dec
or
xor
inc
pop
jg
loope
shrb
mov
call
test
cltd
xchg
or
push
cmp
mov
scas
jl
dec
mov
push
pop
cmp
int3
sahf
mov
pop
loopne
das
ljmp
icebp
rorl
imul
xchg
pop
add
push
adc
xor
shll
xchg
aas
push
cltd
stc
js
xor
test
ss
fdivs
jle
loopne
shlb
sahf
int
rcll
cmpsl
aam
push
out
xor
bound
in
sub
xor
adc
pusha
leave
scas
sbb
pop
sub
jle
xchg
out
push
pop
movsl
mov
hlt
pusha
adc
mov
cs
pop
mov
pop
push
in
gs
jecxz
pop
jp
int3
sar
or
pop
out
xchg
outsb
inc
lock
clc
dec
test
pop
sub
lret
lret
push
add
jbe
push
or
or
adc
addr16
or
push
jmp
push
cmp
mov
lea
xchg
cmp
cmp
loope,pt
mov
aam
or
lcall
jg
mov
lods
xor
cmp
dec
jb,pn
push
shl
sub
push
jo
ret
cli
adc
dec
or
insb
fdivrl
push
xorl
lock
xchg
xchg
std
inc
bound
push
clc
rcrl
and
test
cmpsl
cmpsb
mov
xchg
push
push
popa
or
mov
shll
pop
aam
or
mov
xchg
add
jmp
xor
fnstsw
mov
mull
and
sub
loope
fdivrl
or
dec
mov
lret
fldenv
fwait
xchg
scas
dec
cwtl
out
xor
cmp
sub
xchg
dec
jns
lods
aaa
jl
lea
adc
mov
mov
xor
insl
mov
mov
shlb
jbe
cmp
lds
dec
adc
inc
and
fcmovu
js
sbb
fwait
pop
jle
add
dec
lcall
cli
pop
int
sbb
jmp
cli
insl
test
sbb
cwtl
dec
cmp
loopne
dec
pop
lcall
dec
mov
lcall
add
data16
insl
mov
fldt
add
jnp
sahf
cmp
in
ret
test
pusha
sub
jne
mov
cli
hlt
sub
add
jne
cmp
cmpsb
jb
jae
mov
mov
into
pop
lcall
mov
mov
test
lods
testl
ja
test
lods
cmpl
popa
fists
jbe
or
xchg
add
mov
out
decl
cwtl
cmp
bnd
mov
xor
jns
std
dec
sbb
adc
xor
aas
xchg
frstor
outsl
and
in
dec
nop
sbb
adc
push
sub
mov
or
adcl
loope
js
mov
int3
mov
mov
push
mov
movsb
or
push
and
mov
sbb
add
ja
add
mov
adc
push
insb
pop
jns
cmp
or
test
mov
iret
xchg
xor
inc
sub
add
pusha
or
cmp
add
dec
adc
pop
jle
imul
mov
pop
sbb
subb
adc
inc
data16
lock
jecxz
mov
pop
scas
pop
dec
jg
sub
mov
bound
fidivs
popa
pop
mov
fistl
push
cli
out
je
insl
inc
fsubp
sbb
and
and
mov
test
leave
dec
sub
imul
loopne
jae
stos
sbb
orb
or
xor
lret
sarl
nop
jle
shll
adc
lock
pop
addr16
mov
push
cmpsb
adc
mov
adc
repnz
sbb
inc
insb
sub
lods
inc
fcmovnu
cltd
xchg
sub
outsb
mov
aaa
test
das
jbe
pop
pop
adc
or
dec
adc
xor
mov
pop
iret
and
cmp
clc
aaa
jle
sti
mov
jmp
shrl
mov
lds
inc
loope
lcall
and
icebp
add
adc
push
jmp
push
fdivl
jl
loope
loopne
or
lret
pop
sbb
mov
xchg
push
inc
icebp
mov
push
out
adc
or
insl
adc
mov
stos
fmull
std
mov
sbb
jmp
movq
cltd
insb
rolb
adc
lcall
pop
lcall
stc
push
es
dec
repnz
xchg
push
pop
mov
repz
xchg
jb
iret
sbb
and
inc
insb
jno
mov
test
inc
xchg
and
aas
repnz
psubw
psubsw
jl
inc
inc
sbb
or
pop
inc
jle
dec
imul
mov
pop
adc
shrl
push
lcall
movsl
ss
leave
sbb
out
cmp
mov
mov
in
and
sub
inc
add
cltd
ljmp
cmp
and
mov
int3
sub
mov
stc
xor
xchg
lahf
mov
aaa
xor
xchg
rol
pop
xchg
pushf
jo
movb
fs
dec
and
sbb
scas
push
sahf
jae
jle
negl
nop
sbb
repz
dec
popf
push
xchg
xor
mov
jmp
lea
cwtl
das
movsb
mov
test
pop
mov
in
out
mov
xchg
inc
lahf
sbb
push
pushf
shrb
and
daa
or
ljmp
cmovne
pop
es
es
lods
fsubl
mov
testb
xchg
mov
xor
mov
mulb
jae
jnp
push
inc
cmpsl
xor
dec
repz
sbb
shll
insb
inc
decl
lods
iret
sbb
sbb
mov
add
or
mov
cmpb
sub
fnstsw
add
repz
sub
dec
pop
add
pusha
xchg
iret
repz
jne
sbb
mov
or
rcll
or
push
pop
cmp
cwtl
jb
xor
cld
push
jmp
jmp
adc
jecxz
or
mov
hlt
push
loop
insb
push
lcall
faddl
or
xchg
daa
adcb
repnz
popa
bound
in
testb
push
mov
sarl
pusha
leave
push
test
xchg
jnp
fists
mov
push
sbb
add
repz
fcoms
in
dec
fdivs
jno
xchg
psrad
push
in
insb
mov
lret
and
xor
cmc
faddl
sub
pushf
lcall
inc
repz
testb
arpl
test
fsts
mov
or
popa
data16
arpl
dec
cmp
xchg
push
or
mov
lret
rolb
push
adc
push
xchg
pop
outsl
jns
cwtl
js
and
jp
adc
scas
sub
rorl
mov
mov
inc
jmp
sahf
int3
sarb
leave
push
jbe
div
fstps
lods
sbb
gs
andb
sarb
enter
stos
imulb
mov
sti
xchg
mov
sahf
xor
lods
cli
mov
pop
add
js
dec
stc
test
std
cmp
sub
mov
dec
dec
push
sub
xchg
call
inc
data16
xchg
out
ret
in
iret
clc
jnp
pop
jne
lods
sbb
push
adc
aad
pop
sbb
push
mov
scas
pop
sub
dec
mov
data16
xor
push
inc
outsl
lahf
inc
sbb
rclb
icebp
push
jae
dec
hlt
mov
fildll
push
push
popf
lahf
repz
xor
mov
sarb
ss
ljmp
jno
test
xor
xor
aas
cmp
add
jmp
add
into
in
pop
jnp
adc
dec
mov
sbb
pop
push
cmpsl
cmpsl
sbb
out
or
std
push
jno
mov
fwait
sub
add
xchg
mov
fbld
aaa
in
sub
mov
imul
xchg
popa
movhps
out
jl
les
xor
cmc
sbb
sbb
into
imul
xor
dec
push
subb
ret
jle
cmp
mov
out
in
sbb
repz
ret
push
mov
dec
enter
shrl
push
scas
cmp
aam
into
mov
pushf
xchg
jo
sub
sub
pavgb
fbstp
mov
mov
adc
aam
mov
add
repz
std
shlb
dec
cltd
inc
xchg
outsb
cmc
imul
mov
or
jns
or
add
and
cmp
add
in
subl
loope
xchg
xchg
mov
cmp
cs
andb
push
lcall
pop
movsb
xor
dec
out
cld
rcrl
lea
das
je
das
fildl
inc
adc
test
imul
pop
mov
dec
sbb
pop
and
lret
push
icebp
dec
mov
fildll
das
cmp
jb
xchg
fisttpll
xchg
adc
in
adc
shl
insb
je
mov
pop
jo
cs
or
dec
mov
adc
loopne
and
insb
push
mov
xsavec
int
cmp
scas
sbb
insb
inc
push
inc
es
pop
in
mov
xor
dec
out
mov
mov
dec
fucomip
das
addr16
aad
rolb
int3
mov
inc
sahf
add
mov
sbb
daa
fbstp
or
jp
dec
push
cmp
in
xor
out
test
mov
cmp
sbb
cwtl
sarb
dec
cmp
push
inc
mov
sbb
add
shrl
xorb
movsl
loopne
or
pop
test
or
inc
jnp
add
std
dec
dec
jecxz
xchg
and
push
jb
js
je
ja
jmp
or
cmc
adc
pop
jmp
add
push
pop
mov
mov
outsb
adc
dec
daa
mov
ja
pop
mov
or
mov
dec
int
out
xchg
jno
adcl
push
or
mov
fstps
inc
cmp
xor
and
stos
mov
or
mov
pop
arpl
pusha
mov
lcall
mov
call
push
cmpl
test
fildl
pop
mov
out
and
test
push
push
inc
cmp
push
mov
pop
xchg
ret
mov
lds
gs
add
lods
ret
push
imul
loopne
cmp
ss
loope
stc
cmpsb
mov
pushf
call
scas
popf
sub
push
test
sub
mov
and
subl
lcall
dec
mov
fisttps
stos
push
cltd
xor
movsb
dec
jns
imul
outsb
addr16
add
push
sarl
adc
fwait
inc
xchg
inc
inc
mov
push
fs
imul
add
mov
cld
test
fdivl
aad
addr16
leave
leave
cmp
jae
addr16
dec
rolb
enter
out
mov
sbb
fs
fisttps
xor
mov
test
jno
inc
cmp
call
cmp
jno
xchg
adc
fcoml
cwtl
mov
xor
add
in
dec
ret
cs
inc
mov
cld
int3
jbe
inc
sti
bound
push
push
in
xchg
or
and
aam
aad
daa
add
push
inc
test
xor
adc
jg
pusha
leave
xchg
inc
enter
fisubrl
pop
push
mov
into
repnz
bound
mov
mov
sbb
mov
push
adc
fmuls
lret
fcoms
leave
xchg
popf
mov
pop
push
in
es
call
lcall
sbb
sbb
sub
test
pop
dec
push
clc
cmp
and
out
mov
daa
mov
jecxz
sbb
mov
outsb
pop
sbb
shll
pop
leave
outsl
inc
cmc
pop
ret
into
stos
or
out
jo
sbb
test
lods
call
dec
pop
jae
popa
js
pop
add
or
ljmp
add
andb
clc
mov
repz
jmp
push
mov
or
test
adc
or
data16
dec
int3
lea
pop
cvtps2pd
enter
pop
rcll
jb,pt
cld
icebp
jmp
popa
das
or
loop
lret
lahf
xchg
dec
mov
mov
test
js
int3
jnp
cmp
mov
enter
xchg
lods
aad
int3
ljmp
pushf
repz
push
or
repnz
out
mov
push
xor
mov
mov
pop
or
dec
popa
repnz
adc
test
mov
fisubs
cmp
inc
clc
jo
fcomps
in
push
outsb
push
inc
jbe
fistl
ds
pop
popf
add
into
lods
adc
or
lcall
cli
mov
imull
int
mov
or
mov
jle
xchg
je
sub
add
sub
aas
push
add
mov
fs
pop
pop
mov
or
dec
xorb
mov
sbb
dec
or
pop
jp
inc
jg
fnsave
jge
cmc
mov
jl
sub
dec
sbb
repz
xor
cmp
into
es
push
dec
lock
xchg
test
mov
mov
sub
mov
sub
jns
sbb
xchg
xchg
loop
call
das
sbb
addl
outsb
and
push
inc
in
andl
adc
iret
pop
pop
dec
pop
pop
loop
lock
dec
push
es
cmp
ds
mov
lcall
cmp
iret
mov
and
jp
icebp
ljmp
loop
cwtl
xorb
push
push
aam
iret
push
dec
and
outsl
lds
rol
orl
mov
cltd
push
addr16
add
loop
xor
std
push
notb
out
inc
lods
imul
xchg
bound
sub
ds
mov
daa
cs
and
std
inc
daa
or
mov
mov
fs
or
or
in
and
pop
cmp
dec
mov
mov
roll
rorb
and
imul
cmpsl
pop
addps
cwtl
xorb
pop
push
fs
test
jg
or
dec
in
pop
aas
mov
cmp
mov
sbb
pop
pop
cmp
dec
mov
sub
ljmp
inc
sbb
jge
or
xor
daa
lret
stc
out
movsb
loope
sbb
clc
loope
xchg
int
or
stc
stc
dec
pop
fs
addr16
dec
adcl
jns
xlat
sbb
and
stos
lds
pop
add
aaa
dec
cs
adc
mov
fiaddl
adc
push
jns
adc
add
pop
and
lods
lahf
stos
or
mov
dec
adc
pop
and
stc
mov
pop
je
sub
repz
add
fmull
fld
insb
in
xchg
pop
xchg
inc
mov
pop
imul
lods
sub
rcl
mov
adc
fcmovnbe
mov
ret
dec
xor
lds
arpl
ret
add
jae
fwait
daa
jecxz
mov
pop
jnp
pop
imul
enter
mov
xor
sub
and
pop
mov
mov
pop
mov
jecxz
aad
mov
jae
in
inc
adc
or
mov
push
or
ja
or
shll
dec
push
js
push
and
jmp
xor
cmp
sub
sti
clc
sub
push
and
jo
imul
insl
push
mov
inc
inc
jmp
ficoms
xor
xor
aas
inc
fdiv
dec
sub
pop
or
sbb
jno
arpl
repnz
pop
popf
dec
js
dec
or
or
test
out
pop
pop
lcall
filds
mov
incl
lock
xor
cmp
lock
sbb
add
dec
popf
sub
mov
outsb
or
xor
jne
inc
and
add
pop
aad
outsl
mov
push
in
mov
insb
mov
adc
dec
add
jo
mov
lahf
testl
pusha
leave
loop
notl
push
xor
test
fsubrl
sub
push
mov
jno
inc
insb
mov
sub
push
mov
or
test
mov
sbb
cmpsb
adcl
dec
lcall
sbb
out
inc
adc
test
cmp
not
lds
cmp
xchg
pop
xor
shlb
fwait
mov
or
add
or
lret
adc
ss
cmp
xchg
insb
jne
test
rorb
push
jne
add
stos
lret
inc
mov
into
mov
fs
in
jne
decb
movsl
xchg
rolb
ljmp
stos
nop
mov
in
or
mov
cwtl
rclb
fwait
or
andb
icebp
sbb
push
addr16
bound
cmp
out
mov
aad
in
push
cmp
xor
int
pop
mov
push
nop
push
stc
xor
popa
aas
mov
sub
mov
arpl
nop
repz
mov
arpl
cmp
xchg
add
stc
push
loope
adc
xchg
mov
lret
clc
and
js
or
add
pop
mov
sahf
pop
pop
jg
loope
cld
out
mov
cmp
test
gs
add
orl
xor
xlat
repz
addr16
xlat
lock
out
dec
sbb
add
xchg
in
mov
rorb
arpl
pop
and
fdivrl
out
add
enter
cld
mov
add
in
add
push
aam
out
sbb
fdivp
cmp
inc
mov
repz
sarb
pop
fnsave
das
inc
dec
xor
movsl
fistpll
sub
sbb
aas
fwait
mov
lret
inc
jnp
roll
push
inc
lock
jne,pt
icebp
lods
outsb
lock
mov
push
sahf
insl
fldt
and
clc
adc
jecxz
cmp
push
test
xchg
sbb
pop
xchg
xchg
scas
mov
test
rorl
fmuls
repz
cmp
adc
popf
sbbl
mov
xchg
decb
repnz
frstor
andb
xor
mov
mov
sbb
push
jb
aaa
insl
xorb
jnp
dec
inc
and
jecxz
adc
jbe
mov
sti
xor
fs
push
cmpsl
cld
jge
xchg
mov
mov
cmp
adc
pop
shrl
daa
lahf
and
test
xor
cltd
out
sbb
in
push
outsl
dec
xor
mov
add
xchg
or
jne
push
repz
in
aad
mov
mov
out
mov
es
pop
mov
pop
push
lcall
popf
stos
test
cmp
test
ljmp
push
icebp
cmpl
add
mov
push
dec
and
and
rolb
pop
or
or
push
xor
cmp
mov
push
lahf
or
xchg
stos
call
outsb
sub
sarl
imul
fistpl
xor
sbb
push
aam
or
sahf
mov
mov
inc
pusha
sub
or
icebp
pop
jge
jecxz
pop
dec
pop
stos
mov
addl
dec
sarb
bound
dec
jo
ror
out
dec
mov
fcomps
adc
cmp
sti
xchg
test
sub
arpl
jbe
bsr
push
push
leave
mov
inc
loopne
adc
in
pusha
push
push
nop
in
das
xlat
rorb
push
inc
pop
fisubl
xchg
or
repz
je
cmp
mov
subl
aad
stos
call
movl
lock
lahf
inc
inc
jecxz
ljmp
in
inc
rcrb
and
inc
xor
test
lret
cli
out
mov
shrl
addr16
or
fstps
push
and
mov
dec
jno
addr16
jecxz
in
jecxz
push
jnp
jmp
ds
pushf
jb
in
imul
fwait
dec
xchg
sub
dec
mov
sbb
outsl
pop
push
mov
cmp
cmpsl
jmp
pop
push
dec
or
sbb
repz
dec
fcmovbe
incl
mov
popa
loopne
div
fistpl
sub
cmp
xchg
sub
sub
xchg
imul
or
mov
lahf
sub
and
push
xor
push
adc
loope
movsl
xchg
pop
inc
inc
aas
ja
push
mov
xchg
adc
popf
call
hlt
xor
sbb
sti
insb
popf
inc
out
mov
les
inc
cmp
sti
repnz
pop
jne
blcic
out
insl
push
or
push
pop
add
cmp
nop
fs
dec
mov
mov
int3
jmp
out
rcrb
lods
sbb
push
lret
pop
add
dec
rolb
in
xchg
fadd
cmpsl
lock
mov
add
nop
or
stos
lock
cmp
and
rcrb
ljmp
loop
xor
ret
jecxz
adc
gs
xor
int
addr16
std
push
pop
cmpsl
insb
xor
loop
cmp
jne
sti
mov
leave
add
jno
or
mov
pop
dec
sbb
insl
das
jo
cmpsb
add
in
andb
test
mov
lret
add
je
divb
int3
push
aad
outsb
lcall
sbb
push
mov
and
xor
int3
xchg
cli
inc
shl
cmp
mov
movsl
stos
lods
test
loope
nop
inc
es
aas
cmc
mov
imul
mov
or
cmp
imul
lods
inc
mov
addr16
mov
imul
lea
icebp
or
rcrb
mov
xchg
inc
cmc
cmp
mov
pop
cmpsl
xchg
jge
mov
js
mov
push
test
lds
divl
fsubs
push
dec
jb
rcrl
sub
subb
xor
fmull
repz
mov
mov
clc
cmp
mov
mov
pop
nop
jnp
adc
mov
popl
jns
movsl
push
jg
inc
xor
rcl
shl
mov
in
fs
loopne
sub
test
addl
mov
add
xchg
mov
adc
xor
aas
mov
sahf
lds
sbb
je
mov
je
sbb
es
mov
fwait
pushf
in
lahf
mov
cmp
outsb
sbb
lcall
nop
daa
popf
push
mov
jns
fildll
rdpmc
sub
loope
lea
xor
mov
xchg
pop
mov
movsb
daa
in
sub
ss
and
jae
adc
fsts
fs
imul
push
inc
push
mov
loop
lock
xor
bound
jb
xchg
pusha
les
cmc
adc
push
add
out
jo
test
mov
loopne
cli
scas
pop
adc
mov
mov
jns
mov
xchg
lret
repz
hlt
clc
in
and
sub
dec
addr16
ret
pop
mov
lret
in
dec
add
cwtl
mov
push
xchg
add
pop
push
mov
xchg
push
int3
pop
aam
sti
int
push
and
mull
push
xchg
daa
popf
add
dec
adc
mov
or
and
jno
dec
push
scas
mov
dec
push
and
mov
push
imul
sbb
fbstp
pusha
lahf
jne
and
xchg
dec
out
xchg
rclb
jmp
lahf
sub
mov
xchg
jo
add
inc
mov
push
inc
xchg
cmp
data16
lcall
out
aad
mov
int3
sub
fwait
rorb
lcall
sbb
lcall
push
jno
fs
iret
scas
pop
outsb
mov
adc
mulb
je
adc
loopne
cli
ds
cmp
mov
mov
sub
mov
sub
sub
push
dec
dec
test
arpl
mov
lock
fwait
scas
cld
xchg
jb
dec
test
mov
cltd
push
inc
sbb
mov
pusha
pop
sub
sti
pop
add
xchg
cltd
lea
fidivl
or
mov
sti
out
pusha
sbb
data16
pop
push
and
xchg
outsb
es
push
or
adc
sbb
cmp
js
test
sub
jns
fsubrs
scas
ds
push
push
xor
inc
xlat
or
out
mov
sub
sub
mov
stos
in
shlb
sub
adc
scas
cmpsb
sbb
in
clc
leave
test
inc
std
cld
pop
fwait
cmp
and
mov
sub
mov
out
mov
enter
or
cmp
ror
push
mov
mov
fldcw
push
iret
popa
jns
sbb
orl
sub
sbb
cwtl
shlb
test
lahf
xchg
xchg
addl
push
push
and
data16
sub
out
jp
pop
cmp
push
sbb
loop
imul
stc
push
inc
jecxz
repz
dec
pop
pop
cwtl
ret
lock
jo
sbb
ret
dec
push
insl
xor
jg
inc
adc
cmp
js
cmp
scas
mov
je
add
dec
pop
icebp
test
cmp
jecxz
int3
mov
push
and
xchg
popf
inc
cmpsl
dec
clc
push
fimuls
insl
mov
out
add
lcall
adc
cmc
jecxz
dec
ja
xchg
int3
stos
mov
fnsave
push
idivb
sub
jae
lcall
push
loop
sti
aaa
pop
push
mov
push
in
mov
int3
data16
das
jae
aam
sub
pop
mov
push
xchg
xchg
int3
push
lahf
addb
test
sub
fdivrl
or
jbe
push
ret
int3
je
sahf
adc
scas
ljmp
addr16
dec
int3
or
sub
aaa
or
or
xor
fdivs
adc
nop
mov
daa
nop
jae
cli
shll
testb
test
xor
mov
jle
clc
mov
ljmp
sub
daa
xchg
lret
popf
pop
sbb
or
repnz
or
or
jns
pop
jp
push
cmc
add
into
jl
stos
into
jne
orl
add
out
addl
imul
and
pop
jmp
pop
jp
int3
pop
mov
pop
add
es
lret
or
nop
mov
jecxz
arpl
arpl
inc
xchg
scas
cltd
adc
cmp
jae
add
cltd
loope
mov
add
aaa
mulps
sbb
sub
test
jmp
andl
xorb
sbb
sbb
in
jle
in
adc
cmp
gs
in
add
ja
in
adc
push
lods
cltd
inc
test
pushf
cmp
fnsave
dec
iret
push
cli
sbb
subb
mov
and
jnp
push
arpl
sub
sub
ret
fwait
jle
addr16
andb
pushf
jmp
loope
test
sar
push
je
jno
call
jmp
fs
lret
aaa
mov
mov
test
stos
or
aas
subb
push
std
mov
sbb
xchg
xchg
jo
lret
call
push
or
out
cli
fs
and
jne
movsw
psllq
sbb
cmpsb
pop
lret
xor
xchg
jmp
fdivrs
dec
in
inc
outsb
insl
mov
cli
ja
add
into
or
jp
lods
iret
mov
fidivrs
adc
in
cmc
loop
cmp
inc
cmp
sub
insl
scas
add
fdivrl
adc
or
xchg
out
mov
or
pushf
mov
lds
cmpsb
rcll
sahf
sub
xchg
pop
fistps
mov
ret
aaa
jecxz
dec
mov
sub
xchg
xorb
cmpsl
test
adc
jecxz
aam
add
push
xor
xlat
sub
jl
push
push
cmp
jns
cmp
test
insl
popa
xchg
lret
cmp
mov
in
arpl
rorb
lea
fwait
xchg
mov
iret
cmp
scas
pushf
add
hlt
daa
mull
fistps
daa
arpl
loopne
arpl
xchg
sbb
je
xchg
push
mov
sub
xchg
cmp
or
div
dec
add
mov
imul
mov
cli
bound
rclb
movsb
mov
sub
dec
mov
dec
popf
rol
mov
out
push
shrb
pop
in
jo
push
sbb
jno
push
inc
sub
repnz
bound
sbb
xorb
pushf
inc
hlt
lret
scas
push
jo
fcom
in
scas
lea
aaa
out
inc
ss
das
jecxz
imul
lods
mov
and
add
adcb
jle
fistpll
mov
jecxz
mov
cmpsb
mov
dec
adc
pushf
sbb
roll
sbb
lret
mov
push
aad
lret
push
push
pop
notb
out
out
sbb
sbbl
push
clc
movsb
sub
data16
shll
popa
mov
dec
push
jae
inc
or
mov
jg
jmp
xchg
mov
jae
xchg
adc
sbb
push
pusha
push
bnd
xor
test
out
add
add
shll
and
fwait
adc
xchg
lods
mov
inc
add
mov
in
xor
mov
jbe
mov
xchg
lret
xor
pop
mov
das
jae
xor
cltd
fwait
inc
fdivs
andl
or
out
and
icebp
js
fprem
pop
addr16
pop
inc
mov
mov
sbb
cs
pop
xlat
enter
pop
mov
sbb
insb
lds
dec
in
les
cmp
or
out
mov
lcall
test
jg
loope
sbb
bound
mov
test
ret
popf
push
insl
or
jl
shlb
and
out
cmp
or
pop
cmp
push
adc
and
and
inc
lea
jne
push
test
shlb
stc
xchg
ja
lods
adc
data16
xchg
test
lret
setno
bound
out
loop
sti
stos
jmp
stos
in
jecxz
jns
int3
repnz
mul
xchg
pop
in
push
je
xor
push
xchg
std
outsl
or
int3
mov
pop
mov
out
movsl
aaa
cmp
xchg
xor
imul
out
sbb
sar
popa
lods
xchg
sub
or
out
xchg
xor
xlat
lret
xlat
fcomip
lahf
stc
xchg
in
add
aam
imul
or
mov
lcall
stc
mov
and
stc
cmp
clc
mov
dec
mov
xchg
cmp
sbb
arpl
fbld
push
lds
mul
inc
outsl
sub
jb
cmp
aad
inc
inc
and
cmp
mov
pop
jne
xchg
lods
fmull
pminsw
not
cmpb
movsl
ss
push
ljmp
shlb
xchg
jecxz
imul
or
lock
add
pushf
cmp
clc
sub
add
xchg
mov
sbb
sbb
xchg
jne,pt
outsb
aad
mov
divl
int3
outsl
das
les
or
pop
fnsave
addr16
mov
fs
mov
inc
nop
jmp
iret
insl
adc
dec
lds
adc
mov
pushf
imul
popl
and
pop
sbb
lcall
or
mov
test
mov
fstpl
cmpsl
push
fists
jne
cmp
mov
int3
sub
popf
enter
insl
hlt
mulb
pop
adc
jge
pop
push
cmp
add
mov
push
adc
and
rcl
add
in
outsl
sti
pop
les
leave
movsl
push
ds
popf
mov
sarl
push
cli
stos
add
xor
sti
shlb
push
push
stc
je
mov
std
or
inc
push
movsbl
sti
in
sbb
inc
or
loopne
lret
push
sub
imul
jecxz
mov
mov
repnz
jmp
stc
fldt
sbb
cld
imul
xchg
pop
int
pop
mov
out
mov
cltd
adc
out
ljmp
dec
sahf
arpl
dec
rolb
cmp
add
adc
mov
pop
in
arpl
int
in
inc
add
insl
mov
loop
inc
repz
and
test
es
mov
out
cwtl
cmp
das
mov
xchg
inc
cmp
mov
int
mov
js
cmp
ljmp
out
mov
inc
sub
pop
jb
iret
inc
mov
arpl
lods
jge
adc
dec
push
or
test
dec
sub
test
cmp
lcall
dec
xor
and
adc
and
or
faddl
sbb
mov
or
dec
imul
loopne
cmp
clc
hlt
jle
jb
pushf
mov
hlt
ret
and
mov
mov
out
daa
shrl
mov
enter
arpl
sarb
movsl
jb
imull
jns
dec
adc
stos
setnp
mov
test
stos
jecxz
pop
cmpb
aaa
jecxz
pushf
dec
push
mov
lret
xor
fldz
imulb
movsb
add
xor
repz
jno
into
scas
rorb
sti
jge
jbe
mov
mov
fdivrl
add
das
inc
jmp
js
stc
scas
cmp
popf
mov
das
nop
jge
adc
jae
push
fidivl
cmp
mov
cmp
pop
les
cmc
gs
lret
js
repz
xor
arpl
xorb
je
jge
sahf
dec
dec
daa
lods
fists
int3
push
lods
movl
cmpsl
fsub
hlt
jge
push
jmp
sub
dec
addr16
cmp
cmp
and
ds
hlt
inc
push
mov
loopne
iret
xchg
cld
int
fdivl
push
out
arpl
add
fisubrs
cli
lret
inc
testb
inc
cli
xchg
dec
pop
mov
push
sarb
jb
sbb
cs
add
cwtl
sarb
xlat
push
lidtl
push
sub
out
adc
or
movsb
out
sub
cmc
xor
insb
imul
mov
mov
aaa
sbb
dec
ret
lahf
push
mov
xchg
dec
aam
movsl
iret
push
adc
and
ficompl
movb
xor
lahf
insb
sbb
out
pop
adc
mov
push
ret
mov
fwait
ljmp
inc
sub
nop
lea
push
and
sbb
jmp
popa
pop
inc
loope
mov
arpl
add
push
lret
jnp
jle
sbb
cmp
sbb
stos
daa
jmp
push
and
sub
mov
or
mov
adc
lret
jmp
xchg
jno
pop
mov
xchg
sbbb
imul
cmp
sbb
jbe
pop
aam
cmpsb
or
int3
iret
cmp
sbb
sbb
inc
fwait
push
into
pop
sbb
outsb
and
in
or
aad
lock
sbb
mov
aaa
loopne
xchg
sbb
inc
nop
mov
cmc
inc
aaa
test
jle
cmp
pop
ds
inc
mov
add
add
pusha
addr16
xchg
out
imull
lea
aad
lods
mov
aaa
sahf
imul
or
jb
or
jbe
or
nop
adc
push
je
popf
ret
xchg
mov
mov
mov
test
mov
jecxz
mov
xchg
pusha
or
shl
sbb
jnp
dec
xchg
call
je
mov
fsubs
lahf
jmp
mov
mov
dec
xchg
sub
jmp
std
aad
add
cs
mov
scas
aad
add
mov
xchg
fstpt
dec
sub
jbe
mov
in
flds
enter
mov
in
adc
jge
bound
mov
scas
push
fwait
push
cmpsl
mov
or
or
and
adc
sarl
out
xchg
and
stc
out
addb
test
addr16
xor
sbb
leave
xchg
sti
aam
or
imul
movsl
ja
xchg
pop
mov
add
scas
adc
loope
out
mov
mov
in
ficoms
lods
mov
sbb
sub
push
fdivrs
stos
push
inc
add
inc
adc
pushfw
int3
mov
push
jp
pop
or
adc
js
mov
andb
pop
movsb
push
imulb
xchg
mov
lea
sub
inc
lock
xlat
cmp
sti
push
mov
xlat
lret
mov
dec
outsb
inc
mov
loop
jns
sub
xchg
jle
inc
inc
imul
or
mov
pop
mov
aaa
mov
mov
mov
mov
divl
imul
inc
sub
sub
pop
sbbl
cmp
js
pop
jmp
dec
mov
sbb
xchg
cwtl
cmp
scas
add
mov
cmp
das
in
stos
xchg
push
enter
out
adc
les
push
or
pushf
ss
test
pop
cmpsl
ss
dec
popf
lods
fdiv
imul
ret
cli
jge
and
mov
loop
ljmp
jbe
enter
std
lea
mov
jno
movsb
push
stos
add
push
add
lods
mov
adcl
sbb
pop
aaa
lret
mulb
test
dec
push
inc
mov
imul
rolb
add
sbbb
les
inc
pop
movsl
sub
lea
mov
lret
test
pop
pusha
xchg
test
mov
inc
sub
hlt
daa
jno
push
dec
cld
nop
fnstenv
jecxz
movsb
xchg
imul
pushf
dec
xchg
adc
sti
cld
loope
jb
lea
push
fdivrs
addb
pop
jp
push
shlb
push
mov
cmp
jbe
xchg
shl
sbb
push
and
inc
and
in
ret
lock
or
je
adc
push
or
pusha
sbbb
and
inc
sbb
test
cmp
jne
clc
stos
shl
subb
mov
sub
or
orl
mov
incl
push
outsl
inc
sub
adc
mov
ret
out
call
xor
xlat
and
rcrl
ret
add
dec
icebp
imul
xchg
adc
sti
leave
out
test
call
jae
pop
fwait
adc
rorb
sbb
ret
inc
repz
sbb
addb
xchg
mov
fnstsw
sbb
push
pop
mov
push
jp
jns
cwtl
xchg
ret
loop
pop
mov
push
mov
mov
divl
push
movsl
push
faddl
out
add
movsb
sub
notl
dec
pop
push
push
cmpb
outsb
std
mov
cwtl
cmp
test
mov
repnz
and
jns
lock
xor
repz
pop
lds
push
in
and
push
add
xchg
mov
ljmp
std
and
sub
addr16
cmp
dec
repz
int
xchg
xchg
mov
mov
dec
lock
aam
jge
mov
adc
sti
pop
xchg
in
aad
lcall
movsl
lcall
jno
inc
cmc
inc
pop
inc
xor
lcall
cmp
je
lcall
sarb
outsb
hlt
loope
les
fisttps
mov
imul
adc
cmp
jno
nop
jge
sbb
lret
jmp
mov
mov
addr16
mov
sarl
adc
dec
xor
pusha
xor
dec
xchg
mov
pminsw
jns
mov
lods
lcall
xchg
sub
adc
push
xorb
iret
sub
pop
or
pushf
movl
sbb
fisubrl
insb
cmp
test
sub
pop
mov
cld
inc
cmp
cmpsl
mov
clc
mov
gs
sub
or
addr16
mov
mov
lea
sub
std
aam
mov
jnp
jno
xlat
lahf
jnp
jl
adc
jmp
into
dec
jl
dec
and
and
and
xor
jns
and
repnz
out
jle
inc
gs
mov
sub
shl
lods
push
mov
arpl
aad
fnstcw
cmp
iret
jle
jnp
aas
imull
mov
cmp
xchg
xchg
pop
xchg
inc
pop
dec
pop
adc
aas
dec
fs
inc
push
jmp
fnsave
inc
into
aam
cmc
mov
mov
imul
popa
ret
mov
inc
aad
push
lahf
dec
es
subl
mov
jne
add
cmp
mov
sbb
sbb
out
mov
nop
test
push
jno
jno
sahf
sub
ss
je
mov
ljmp
sbb
leave
cmc
das
lods
in
pusha
arpl
std
addr16
push
inc
inc
hlt
loop
adc
or
adc
es
jae
ds
stos
add
cmc
dec
mov
mov
je
sbb
inc
in
push
dec
dec
xchg
js
pop
rclb
push
or
out
dec
daa
ficomps
push
lcall
jecxz
xlat
lods
xchg
dec
xor
scas
fcoms
sub
lahf
sbb
dec
mov
sarb
sub
xor
aam
or
push
rorl
dec
popf
xchg
or
mov
ja
or
lret
mov
stos
loopne
lret
push
pop
orb
dec
jae
outsl
cmp
mov
and
push
hlt
pop
xchg
cmp
packuswb
cld
lock
in
inc
pop
jp
add
lea
adc
push
push
or
or
push
mov
sub
dec
push
test
mov
mov
push
and
mov
dec
and
iret
sbb
mov
stos
adc
ds
mov
xchg
and
movsb
gs
jbe
fwait
jmp
sbb
jns
adc
dec
cmc
mov
xchg
xor
aad
ja
sbb
sbb
insb
fadds
pop
sar
movsl
iret
int3
mov
pop
lcall
clc
les
mov
sarb
inc
mov
divb
in
xchg
lods
mov
cmp
jmp
hlt
push
rolb
or
xor
push
lods
in
sahf
sbb
push
mov
leave
push
inc
dec
xlat
lcall
lahf
add
imul
daa
xlat
es
dec
out
jno
and
pop
jle
cmp
rcrl
pop
jbe
fistl
subl
in
notb
mov
jae
sub
mov
push
and
gs
mov
pop
or
ffree
cmc
xchg
bound
adc
in
aam
out
movsb
fsubs
jecxz
mov
pusha
popf
xor
icebp
add
push
push
ja
ja
mov
sbb
adc
loope
or
and
aad
push
jb
iretw
mov
icebp
jmp
sub
sbb
pop
adc
hlt
mov
cmpsb
stos
pop
mov
mov
jno
rorb
icebp
nop
jecxz
cmc
inc
add
mov
sbb
mov
dec
clc
fmull
cmpsl
pushf
mov
jno
incb
mov
pop
sbb
jg
sub
jne
in
adc
ret
xor
icebp
fs
inc
pop
aad
pop
or
shrl
inc
iret
pushf
xchg
cmp
test
xor
lods
adc
std
ljmp
cmp
or
or
insb
in
push
das
in
test
sub
call
mov
or
jns
ret
jg
loop
mov
and
divb
push
and
mov
test
mov
out
cmpsb
sbb
daa
dec
aas
mov
sbb
sbb
inc
lret
lret
jle
jmp
sbb
mov
mov
lock
notb
jecxz
and
dec
push
mov
out
adc
push
aaa
jo
mulb
fs
fistpll
jb
sub
pop
jmp
pop
push
idivl
or
xchg
fnstcw
insl
xchg
lret
push
push
pop
mov
mov
cmp
hlt
mov
fsubrs
push
pop
add
test
pop
add
xchg
shll
rclb
out
lahf
xor
fistps
outsb
stos
sub
or
js
pop
dec
lahf
adc
jg
arpl
aaa
sbb
mov
pop
lods
push
imul
lahf
sub
mov
xchg
mov
bound
pusha
xor
iret
cmc
push
dec
mov
push
mov
ss
mov
fstl
iret
sbb
ds
inc
push
or
mov
imul
dec
mov
sub
loopne
rolb
push
out
fcomp
in
cs
and
and
mov
int
or
inc
clc
jecxz
outsl
scas
push
int
adcl
inc
ja
or
pop
dec
divb
and
jnp
jnp
cwtl
pop
aam
insb
pop
icebp
mov
scas
cmpsl
push
or
fiaddl
in
mov
jae
jnp
into
out
add
test
inc
mov
cli
xor
add
outsb
adc
cmp
les
test
or
add
xchg
cltd
mov
adc
and
repnz
mov
push
cmp
sub
cwtl
jl
lock
adc
add
jecxz
mov
dec
fxch
in
addr16
outsb
ja
sub
aad
ja
loope
pop
stc
cwtl
dec
sub
jle
xchg
lds
arpl
and
nop
out
lret
add
stc
xor
cmc
mov
dec
mov
inc
arpl
testl
push
push
popa
xchg
jp
push
fcmovnb
jo
dec
cmp
mov
sub
pusha
jmp
lds
and
mov
mov
outsl
mov
cmp
or
test
pop
xchg
aad
push
push
daa
outsl
into
loopne
test
rol
xchg
aad
call
cwtl
and
lret
mov
test
xchg
ret
cmp
adc
das
mov
push
xchg
lock
leave
adc
mov
push
inc
xlat
jge
subb
outsb
int
js
mov
bound
sbb
dec
mov
dec
stos
or
pop
pop
pop
pushf
insb
inc
cmpsb
fsubrs
pusha
inc
mov
imul
mov
push
popa
jge
push
nop
xor
fcompl
test
das
arpl
sahf
loop
adc
iret
aad
xchg
inc
out
xor
sub
or
aaa
stc
jb
xlat
push
jl
pop
pop
lahf
add
xchg
test
aad
push
sahf
lods
shrb
xor
imul
rorl
notb
push
adc
lods
jb
sbb
jge
ss
leave
je
sahf
push
cmp
mov
cmp
repz
jmp
adc
stos
cmp
jmp
mov
lret
sbb
mul
and
cmpsl
ljmp
or
fidivs
and
dec
pop
sbb
xor
mov
mov
stos
push
sbb
adc
jnp
push
sub
mov
pop
fidivrl
xor
cli
xchg
inc
sub
pop
es
stc
ret
loopne
sbb
dec
mov
push
mov
ds
setle
lea
push
xor
jb
mov
stos
sub
mov
rcll
inc
aas
enter
cmpsb
adc
xchg
rcrb
dec
mov
ss
loope
mov
popf
addr16
mov
ret
mov
shlb
cmp
mov
hlt
testl
out
xchg
fcom
rolb
jmp
orb
and
or
bound
jb
xor
movsb
in
ss
or
dec
scas
shrl
int
inc
test
adc
gs
jmp
shl
dec
cmp
lahf
add
cmpsl
sti
lret
test
dec
inc
jns
insl
movsl
jb
aad
ret
rorb
bound
cmpsl
pop
push
hlt
xchg
push
and
xlat
in
add
dec
stc
push
std
or
xchg
aad
out
xchg
pop
or
push
pop
fildl
add
lods
sub
and
jns
dec
dec
les
jg
lds
call
sbb
pop
aam
dec
jmp
test
cmpsl
push
mov
ja
xorl
stos
xchg
scas
inc
mov
jmp
add
mov
gs
in
dec
call
xor
mov
ja
mov
xchg
cs
into
jns
or
pop
jns
in
cs
outsb
je
gs
jg
xor
jecxz
jl
xor
rol
inc
fs
das
jns
arpl
cmpsb
leave
or
push
dec
push
out
sarl
cmpsb
mov
xor
mov
push
add
jge
insl
xchg
mov
mov
pusha
into
outsl
and
add
pop
call
into
andl
inc
mov
loop
cltd
xchg
mov
int
aas
dec
or
leave
sub
adc
adc
daa
icebp
xor
sbb
adc
xchg
inc
pop
movsb
fmuls
ljmp
fldcw
jne
icebp
mov
scas
add
pop
sahf
psubsb
mov
fistpll
cmp
xchg
jo
cmc
mov
dec
call
inc
sbb
cmp
dec
fadds
sbb
test
in
popf
imul
andl
mov
mov
inc
hlt
push
jle
jle
test
fsts
clc
fadds
addr16
andb
dec
xor
into
xlat
pop
movsb
lcall
inc
scas
cmpsb
gs
push
jmp
jmp
add
test
popa
mov
dec
pop
pop
push
xchg
testb
in
int
js
dec
ret
lods
jecxz
cld
outsl
out
add
rorb
xchg
jb
mov
rorb
dec
cltd
scas
jbe
movsb
pop
mov
sbbb
out
out
addb
jno
lret
sub
push
loop
fld
xor
cmp
jb
addl
adc
addr16
into
mov
pop
aaa
std
mov
jp
and
and
cmp
push
inc
xchg
out
test
lods
arpl
and
and
cltd
je
adc
test
ds
nop
js
bound
aaa
lret
cs
xor
mov
push
mov
movsb
dec
or
sbb
arpl
test
sub
pop
ret
cmp
jno
rcrb
jae
xchg
mov
xchg
mov
and
ja
cmp
push
rolb
aad
mov
icebp
jl
sbbb
add
mov
int
jge,pt
sub
add
sub
xor
inc
call
bswap
xor
out
or
sub
pop
sub
jecxz
or
lock
mov
inc
mov
dec
cmc
push
pop
add
fimuls
push
cmp
pop
cmpb
cwtl
jo
dec
fiadds
ret
push
cmp
mov
iret
and
jnp
fiaddl
push
fnstenv
cmc
ljmp
jae
shrb
loop
cmp
mov
push
icebp
mov
mov
inc
imul
cmp
aas
add
inc
and
mov
les
stos
sub
repnz
ja
adc
pop
inc
into
popa
jp
jns
and
test
fiaddl
and
jp
cs
push
mov
and
mov
out
jle
fiadds
push
dec
jp
enter
or
and
fldpi
fidivrs
sarb
mov
xchg
sub
jns
sbb
push
xchg
shrb
loope
or
int3
dec
ficoml
dec
pop
push
ror
cmp
leave
sahf
pushf
popf
mov
mov
add
into
cmpsl
mov
leave
pushf
inc
enter
xchg
repnz
lahf
xor
jle
adc
and
xor
hlt
add
ja
jmp
or
mov
lods
xchg
mov
xorb
scas
cltd
stos
inc
sbb
fiadds
rcl
mov
push
or
and
mov
mov
push
pop
jbe
loop
dec
jae,pn
pushf
push
push
repz
pop
ja
or
sub
cmp
out
addr16
jecxz
sahf
dec
mov
or
inc
in
cmp
int3
mov
leave
cmpsl
jae
push
and
loope
icebp
xchg
sub
sahf
outsb
cmp
inc
fstpl
xor
nop
or
cmpsl
rorl
cs
jge
add
mov
mov
pop
pushf
filds
mov
push
sar
cmp
and
and
inc
add
fsubrl
pop
or
add
dec
cmp
ret
clc
sbb
or
dec
mov
sahf
pop
fidivrl
xchg
add
pop
inc
and
cmp
dec
stos
iret
movsl
dec
xor
aad
bound
shll
outsb
aaa
aaa
arpl
idivl
mov
aad
push
das
addl
jno
push
cmp
and
inc
push
imul
xchg
popa
push
sbb
pop
insb
pop
test
aad
xchg
loope
cmp
sub
xor
rep
pop
push
sub
je
mov
fisubrs
sbb
dec
hlt
dec
fsubrp
loop
shr
pop
inc
shrb
and
or
nop
mov
int3
push
mov
adc
je
xor
daa
push
push
pop
stc
jecxz
fwait
add
xchg
sbb
jne
xor
xor
mov
iret
jnp
call
jmp
test
jb
cmp
add
jno
mov
or
xor
jae
jo
mov
cld
lods
add
clc
or
addl
in
lock
scas
arpl
adc
aaa
mov
fcmovbe
jo
sbb
add
mov
xchg
cmp
cld
pop
repz
fwait
dec
shll
adc
iret
jnp
aas
loopne
push
clc
pop
dec
xchg
cmpsb
jmp
cli
push
cltd
lds
in
into
adc
sbb
outsl
arpl
dec
xchg
popf
in
jge
cltd
mov
cmc
push
jo
fisttps
push
fdivrp
andl
sbb
fdivs
dec
sub
jle
jp
jns
sarb
dec
or
sub
aas
ret
jns
push
add
mov
loopne
fcomps
dec
cltd
jb
lcall
xchg
add
imull
imul
sarl
and
xchg
imul
fwait
mov
or
xor
xchg
popa
call
inc
inc
mov
jp
imul
daa
xchg
clc
adc
test
sub
mov
mov
testl
sahf
mov
movsl
cwtl
push
fmul
xchg
pop
arpl
pop
push
out
int
ret
fsubs
lahf
mov
pop
sar
loopne
das
ror
leave
cmc
dec
adc
dec
out
in
out
mov
and
xor
adc
ljmp
stos
sub
test
jecxz
inc
adc
pushf
sbb
cmc
mov
inc
fbld
bound
cli
mov
aam
or
cmp
mov
mov
sub
adc
nop
fs
dec
cmp
js
xor
xchg
lret
ret
fldl
test
imul
sbb
enter
insb
gs
or
aam
sti
push
test
dec
rorb
ds
pop
dec
jo
jae
pop
jge
lcall
mov
ja
inc
cmpsb
fadds
rorl
pop
adc
repz
repnz
nop
scas
fucomip
xchg
ficomps
adc
push
imul
mov
imul
adc
and
mov
dec
cld
cmp
mov
push
or
jae
adc
or
inc
sbb
inc
or
mov
std
lret
inc
bound
inc
iret
sbb
stos
xchg
insb
ret
fwait
xor
pop
scas
scas
rolb
sar
mov
loopne
stos
imul
frstor
dec
and
std
call
sub
js
test
mov
lcall
or
push
dec
mov
and
cmp
aad
add
jl
inc
addr16
inc
in
aas
jae
lahf
pop
lods
pop
fucomp
packsswb
test
jbe
daa
cmp
and
pop
cmp
loope
ds
push
fwait
lds
xchg
push
daa
testl
sahf
insl
icebp
loopne
test
mov
rclb
pop
stos
test
call
int
fs
nop
jno
adc
andl
pop
out
and
into
jne
dec
push
mov
mov
lret
lcall
mov
decl
std
or
js
push
push
test
xchg
mov
inc
dec
add
pop
in
jne
std
popa
iret
push
xchg
ljmp
cltd
cs
pop
popf
stos
pop
push
outsl
pop
std
sbb
jg
rcll
shll
mov
fs
je
or
jl
scas
outsl
cmp
xor
leave
or
loop
push
test
sub
pop
xchg
js
mov
dec
xchg
mov
mov
dec
and
test
vmwrite
mov
addr16
jl
scas
pop
inc
or
outsl
testl
cmp
dec
out
stos
mov
rsm
mov
xor
fs
jns
imul
xchg
push
sbb
jo
int3
or
push
out
filds
cld
pushf
or
outsb
addb
mov
mov
cmp
sbb
mov
lods
and
add
cs
in
jg
inc
jae
clc
or
or
xorl
aas
sub
xor
mov
dec
test
add
clc
cmp
in
iret
dec
test
xor
xchg
les
lods
lock
addb
gs
jno
xorb
cwtl
add
mov
cmc
aas
cmc
sub
pop
rorl
mov
cld
xorl
dec
adc
mov
das
jns
lret
shll
mov
int
pop
mov
fstps
leave
cmpsl
clc
pop
mov
cld
cmp
pop
mov
ja
sub
lahf
jnp
and
xor
sbb
insl
mov
jge
mov
push
jge
adc
jne
jge
mov
sub
push
out
pop
icebp
mov
xor
fcoms
popf
cmpsb
scas
inc
mov
in
ret
jp
mov
mov
sti
mov
xchg
leave
arpl
ror
lret
je
xchg
stc
ljmp
mov
cwtl
adc
push
pop
fdivl
mov
stos
push
mov
dec
cmpl
pcmpeqw
sarl
inc
cmp
mov
fstpl
inc
test
mov
test
nop
sub
push
es
mov
pop
or
fadd
into
dec
or
cmp
in
pop
jl
cmp
push
lahf
pop
mov
push
pop
test
xlat
sahf
mov
dec
cmc
aas
cltd
lods
cld
dec
or
hlt
stos
ror
jp
xorl
das
pusha
push
scas
dec
cmpsl
push
jp
je
mov
shrb
cmpsb
adc
xlat
bound
por
imul
push
xor
icebp
lds
inc
psubusw
jle
insl
out
cltd
cmp
icebp
inc
mov
loope
add
inc
bound
sub
cs
test
sbb
roll
sbb
xor
gs
stos
and
out
shrl
fcoml
or
jp
jmp
daa
lret
movsb
lds
out
rcll
jl
loopne
sbb
out
testl
enter
sti
sub
or
mov
mov
inc
jo
arpl
sbb
mov
jmp
scas
mov
adc
stc
dec
incl
adc
clc
leave
mov
sub
sbb
add
push
jo
orb
fldt
or
and
lret
cmpl
popf
ss
outsl
and
pop
aas
adc
dec
xchg
xchg
in
iret
dec
rclb
lcall
inc
cs
nop
loop
andb
cltd
sub
dec
sahf
mov
call
fwait
leave
mov
notl
adc
jns
test
push
push
sub
xchg
sahf
fwait
repz
jecxz
mov
sub
push
mov
add
shr
insb
fdivrp
test
push
pop
mov
inc
loop
nop
repz
aam
mov
cmpsl
out
dec
pop
cmp
or
or
pushf
inc
jbe
aam
daa
mov
in
into
es
movsb
fsubrs
add
jns
ss
mov
sbb
cli
mov
arpl
push
push
mov
sub
clc
hlt
xchg
cmp
adc
jo
aam
mov
adc
mov
testb
je
and
mov
cmp
or
jae
cmp
cmpb
test
sub
lock
fwait
or
mul
nop
mov
mov
sub
cmpsl
push
pop
lcall
pop
xchg
cmp
pop
lcall
cmpsl
cmp
movsl
sbb
mov
movsb
in
pop
subb
or
dec
mov
mov
mov
movsl
imul
xchg
cltd
push
sub
lock
jo
call
push
pop
dec
mov
daa
and
shrl
xor
cmp
xchg
mov
sti
mov
inc
xor
pop
sarb
mov
jle
daa
cmpb
add
and
or
fistpll
mov
leave
clc
clc
cld
pusha
out
adc
test
push
addl
and
jmp
scas
lahf
jmp
sti
ret
adc
filds
repnz
push
and
lods
sub
xchg
lcall
jne
sub
jecxz
inc
sbb
mov
mov
lds
aad
add
jmp
adc
repz
dec
pushf
insl
aad
xor
lds
fstps
fsts
jne
aaa
leave
dec
cmp
push
sub
pop
or
adcb
pushf
push
sub
add
xor
push
mov
and
and
shlb
jmp
and
hlt
stos
ret
daa
mov
xchg
ss
cli
mov
inc
das
cmpsb
jg
fdivrl
mov
jne
lret
push
shl
pop
shll
nop
pop
push
out
movsb
mov
mov
xchg
fwait
movsb
adc
cmpsl
pop
push
aaa
sahf
cmc
jmp
cwtl
push
inc
nop
psrlq
adc
gs
js
mov
add
test
loope
inc
pop
jno
fisttps
sub
frstor
and
dec
imul
adc
out
push
push
sbb
or
mov
sbb
ret
rclb
fcmovnbe
das
insb
adc
cwtl
nop
push
jne
mov
ficoms
mov
mov
movsl
push
sahf
ja
mov
cld
clc
inc
jbe
or
cmp
nop
push
test
clc
pop
jecxz
jge
mull
push
filds
mov
ficompl
and
inc
jp
or
inc
loopne
jo
das
sbb
jo
jl
and
dec
and
dec
push
mov
ja
nop
pop
fistpll
mov
jmp
add
popf
fists
jne
vmptrst
shll
icebp
cmpb
sbb
add
cli
cld
xor
scas
jb
jg
mov
or
jnp
cmp
test
jnp
cmp
pop
jge
sbb
leave
movsl
mov
arpl
jbe
mov
pop
xor
popa
dec
mov
aad
push
xchg
cmpl
out
repz
jne
aaa
pop
or
out
scas
lret
cmp
dec
lahf
insb
cmp
dec
loopne
pushf
mov
mov
aad
fldl
into
push
lods
adcl
pop
xchg
inc
stos
das
std
xchg
das
in
adc
sahf
jecxz
sub
inc
mov
xchg
cmp
jle
add
daa
imul
loope
aad
mov
mov
adc
jl
aaa
mov
scas
mov
cwtl
lret
or
mov
or
outsl
cmpsb
pop
adc
fs
dec
andb
aas
ljmp
or
imul
xor
or
push
inc
pop
test
insb
fsubl
xchg
cmpsl
testl
adc
aas
out
dec
xchg
xchg
dec
push
sti
ds
sbb
or
cwtl
outsb
dec
adc
daa
cmovs
mov
aas
sti
test
aad
popf
pop
shrb
jl
pop
mov
pushf
and
ljmp
push
mov
fisubs
cmc
lds
sub
lods
and
push
dec
push
es
call
out
cmp
lcall
dec
xchg
add
clc
repz
repz
fisubl
imul
arpl
add
faddp
and
hlt
mov
ljmp
dec
mov
pop
insl
mov
fidivrs
into
sub
movsb
mov
scas
std
arpl
shlb
aad
pusha
lods
xor
rorl
xor
in
ret
add
sub
scas
and
into
lret
aad
in
icebp
mov
cwtl
ss
xor
add
cmpsl
inc
mov
lcall
or
loop
dec
sbb
rcl
lahf
mov
pop
jo
xor
iret
mov
out
xchg
sub
and
cmp
cmpsl
jle
lock
out
xchg
xor
jecxz
mov
jno
insl
shrb
movsl
or
mov
shr
into
mov
sub
xchg
out
mov
sub
xchg
insl
sbb
cmp
pop
inc
enter
cmc
push
cmp
popa
ret
sub
in
outsl
xor
ficompl
arpl
adc
dec
ds
in
mov
sub
dec
shll
insb
cs
int
shrl
mov
daa
aaa
clc
or
push
bnd
scas
fsubs
add
pusha
repnz
xor
outsl
ficoms
int
aas
mov
inc
imul
loope
xchg
mov
xor
ds
repnz
pop
push
imul
xchg
mov
pop
sbb
aad
popf
mov
jno
lcall
dec
xor
rcrb
cmpsb
xlat
int3
pop
and
jp
add
cs
outsl
cmp
sbb
aad
subl
outsb
js
lea
and
shrb
cmp
jge
hlt
mov
fs
mov
mov
dec
and
fidivrl
mov
movsb
jecxz
cmpsb
imul
aas
add
mov
sti
dec
cmp
pop
mov
std
adc
sbb
sbb
adc
lea
lods
bound
fdivs
cmp
lods
mov
int3
ret
and
scas
xchg
add
jecxz
test
in
idiv
push
fcmovne
cli
rcl
aas
clc
addr16
nop
out
cld
mov
hlt
jecxz
cltd
lods
xor
data16
cmp
jmp
testl
sbb
sub
push
rcr
out
subb
jg
cmp
fwait
pusha
adc
sbb
xchg
mov
rorb
jecxz
or
xor
jns
push
xchg
pop
mov
pop
rolb
repz
pop
jge
xchg
mov
loope
cmp
loope
cmp
fsubl
jbe
lahf
jmp
fcomps
inc
add
popa
inc
shl
je
ja
in
pop
in
xchg
jb
sub
out
mov
mov
cmp
inc
imul
pop
adcb
shl
mov
add
xchg
out
xchg
mov
jnp
sub
pop
shl
xchg
xor
push
adc
jo
mov
stos
test
mov
sahf
mov
call
cmpsl
or
cmp
fcomps
add
pop
cmp
jmp
loop
mov
out
push
or
inc
mov
mov
into
cmp
ror
daa
jg
jns
es
jae
jecxz
notb
enter
cmpsl
daa
lods
clc
dec
mov
mov
in
mov
shll
mov
jno
jae
mov
mov
sub
mov
imul
xor
and
jle
pop
jmp
mov
ljmp
mov
out
cmp
jne
pop
mov
or
jle
cmc
push
shll
aam
ljmp
xchg
loopne
mov
add
jg
cmpsl
dec
insb
cli
mov
adc
inc
ljmp
pop
xchg
push
mov
pop
cmpsl
inc
mov
cmp
cmp
xor
jae
cli
or
pop
lret
inc
and
jle
xchg
cmp
in
jo
dec
mov
push
mov
push
xchg
adc
out
mov
pop
lret
sti
inc
test
rcr
arpl
sbb
mov
xor
pop
cmp
fistpll
sub
out
xchg
pop
dec
outsb
sub
call
fadds
jns
pushf
out
xchg
fcmovnbe
mov
pop
push
mov
in
popf
test
pop
add
je
adc
loope
not
movsl
bound
rorb
scas
sub
fldl
mov
loopne
sub
push
pop
xchg
or
cltd
adc
fsubl
lret
ss
lret
push
les
stos
sar
cmp
adc
fdivr
push
or
inc
dec
cmpl
out
xchg
xchg
push
mov
xlat
cmp
mov
in
mov
xchg
and
cmp
pop
inc
cmp
js
adc
loop
jnp
push
cmp
mov
mov
outsl
sahf
mov
popa
fs
xor
push
pop
mov
aas
pop
xlat
int
in
in
adc
je
pop
imul
call
cmp
loop
lods
aam
pop
sub
aad
pushf
cmp
outsb
jp
scas
or
sub
jo
add
jno
out
or
or
mov
fcmove
dec
test
outsb
inc
clc
ret
stc
fldenv
or
loope
sbb
pop
jg
fs
stos
xor
or
mov
push
sbb
jne
movsl
jmp
sub
iret
or
and
mov
inc
out
sbb
mov
mov
in
icebp
xchg
mov
dec
icebp
lahf
js
jmp
adc
sahf
xchg
fnstcw
insl
loopne
pop
add
repz
push
push
cs
xchg
std
push
aam
outsl
pop
pusha
pop
jmp
cmp
jl
push
or
insl
jecxz
sub
rclb
or
shlb
sbb
push
sahf
sub
xor
int
outsb
getsec
lcall
fadds
mov
fildll
stos
lret
ljmp
cmpsl
jae
cmp
sbb
dec
aad
xlat
add
aaa
test
mov
or
mov
add
and
xor
stos
call
xchg
jo
adc
cmpsb
lock
fisttpll
ljmp
test
xchg
outsl
and
adc
jae
loopne
es
ret
inc
cmp
gs
cltd
ja
rclb
or
jnp
cmpsb
stos
enter
out
bound
loopne
jnp
movsb
cltd
pop
lahf
jno
stc
add
sbb
nop
sub
cmp
es
scas
data16
enter
sahf
lret
test
lret
jecxz
gs
out
insl
or
jae
test
sbb
inc
sahf
cmp
repz
pop
shll
idivb
jmp
mul
dec
repz
popa
pop
push
into
inc
notb
fwait
xchg
test
movsl
popa
xor
adc
jno
xchg
inc
outsl
jo
lret
sub
outsl
out
dec
and
pop
pop
xor
lahf
sbb
stos
xor
bound
jmp
fstpt
testl
push
subl
xchg
fadd
push
mov
pusha
push
pop
lcall
daa
add
punpckldq
add
sahf
int
scas
ds
mov
jae
out
std
int3
mov
mov
sub
mov
push
xlat
sbb
daa
test
pop
nop
lahf
aam
mov
lods
mov
adc
push
xchg
shll
scas
fcoml
outsb
jbe
setle
mov
xor
sbb
repz
and
cs
call
shrl
icebp
popa
imul
movsl
shl
dec
sub
fisttpl
jg
fdivl
and
sub
aaa
ret
pop
loop
push
dec
sbb
push
repnz
adc
sbb
popa
cmpsb
ja
jl
mov
hlt
push
and
aad
dec
notl
mov
jbe
mov
mov
enter
mov
jo
add
or
or
inc
jo
addr16
jl
mov
xor
jle
push
fistpl
and
mov
cmp
rcl
mov
fcmovbe
sbb
dec
loop
add
mov
popa
lds
stc
aas
jge
inc
xchg
pop
mulb
mov
in
loope
and
xchg
dec
or
cmpsl
fstl
daa
adc
pop
xchg
lret
loope
push
sub
test
add
inc
push
ljmp
sub
cmp
xlat
addr16
cmp
and
jle
scas
adc
pop
mov
cmpsl
cmpsl
mov
push
xchg
stc
cwtl
daa
push
inc
jecxz
and
testb
sbb
push
pusha
push
shlb
dec
dec
lahf
cwtl
add
gs
pop
inc
popf
mov
out
cld
and
mov
test
dec
mov
pop
cmp
xchg
pop
inc
std
sbb
fs
pop
jecxz
fisttpl
hlt
cmc
push
sbb
jmp
int3
rcrl
and
pop
in
jae
jmp
mov
xchg
fcmovnu
mov
jne
xchg
jmp
out
aas
jg
mov
inc
inc
xchg
xor
cmp
xchg
or
mov
or
minps
jl
sub
pop
or
popf
jno
addr16
mov
inc
cmpsb
clc
mov
lret
pop
rcll
stos
mov
mov
add
imulb
xchg
mov
jp
icebp
push
decb
push
arpl
or
add
fnstcw
loope
or
mov
and
lcall
lods
call
dec
and
jne
pop
lret
les
fildl
shlb
inc
ljmp
mov
xor
test
sub
aaa
sti
scas
in
xlat
aas
push
mov
cmpsl
sub
jno
xchg
cmp
into
lahf
add
das
lahf
icebp
dec
jno
jae
xchg
xor
pop
aam
gs
fisttps
int3
add
pop
sbb
addb
mov
mov
xor
and
test
aam
mov
rcl
shlb
lcall
shrb
shl
xchg
int3
loop
xchg
xor
jno
or
inc
dec
shll
into
hlt
pushf
pop
into
fwait
sub
fs
push
fwait
ret
das
xchg
pushf
loopne
jle
insl
and
cmp
jge
inc
out
out
or
inc
ficoms
adc
jl
sarl
xchg
in
mov
pop
add
push
and
mov
pop
cmp
in
jb
nop
mov
mov
or
mov
cmp
jl
push
add
rcr
adc
fbld
jmp
popf
imul
and
pop
ret
and
bound
or
sti
inc
repz
insl
rorl
dec
test
lds
das
cmp
cltd
stc
hlt
mov
add
inc
shr
jns
aam
nop
dec
mov
mov
mov
hlt
test
push
xchg
sbb
push
mov
cmp
and
mov
arpl
shlb
fdivl
cmc
xchg
and
sarl
jl
popf
js
hlt
pop
dec
or
rol
scas
pop
jmp
lcall
outsb
push
jb
pushf
dec
scas
pop
lcall
mov
fdivrs
mov
cmpl
add
mov
dec
out
mov
lahf
fiaddl
out
push
pop
dec
sub
add
pop
lea
pop
add
xlat
xor
mov
push
test
stc
movsl
gs
testl
mov
clc
or
icebp
push
sbb
inc
or
xor
int3
mov
mov
push
mov
int3
ret
outsl
xor
dec
xor
loopne
jecxz
test
inc
mov
mov
and
sti
aad
dec
add
daa
mov
mov
sub
icebp
mov
jmp
mov
dec
xor
fcoml
adc
sti
stos
sub
mov
int
ja
mov
cmp
out
adc
ljmp
jno
adc
push
sub
push
dec
imul
push
test
movsb
pop
mov
mov
fucomi
stc
jne
push
mov
sbb
cmp
mov
fwait
loope
cmpsl
add
mov
jnp
fcoml
loope
movsb
iret
xor
jb
sbb
dec
rorl
jae
xor
adc
mov
push
loopne
jb
mov
mov
test
ljmp
in
mov
inc
push
shlb
idivb
pop
fldl
fmuls
lahf
push
mov
ja
xchg
cmc
jns
mov
push
call
ds
fimull
or
loopne
das
or
fcomps
loop
in
xor
fucom
jne
mov
or
fs
loopne
and
pop
push
cmp
push
into
out
int
push
into
cmp
jmp
mov
push
jae
addl
jnp
push
aas
dec
arpl
xor
inc
insl
mov
out
sar
inc
xchg
lcall
out
lcall
daa
jns
mov
xor
adc
loopne
shlb
jp
push
inc
je
arpl
aam
loop
shll
dec
and
pop
jae
lds
mov
nop
out
pop
cmp
sub
aaa
mov
or
fstps
jbe
hlt
and
pop
in
mov
adc
nop
cmp
cmp
sub
push
pop
repz
jnp
fiadds
stc
mov
lods
aam
mov
sub
push
pusha
push
mov
inc
punpckhbw
jmp
sbb
xchg
sbb
notl
jle
hlt
ss
xchg
fidivs
jl
add
fsubs
incl
jp
rorb
cld
inc
adc
or
add
out
mov
lcall
push
xchg
dec
dec
dec
popa
lock
jp
notb
mov
cwtl
pusha
hlt
mov
jmp
pop
lea
ret
add
mov
loopne
popa
and
push
fsubrs
adc
inc
adc
cmp
and
jae
sub
add
mov
mov
fwait
lcall
mov
xor
ret
jno
popf
in
push
pop
lahf
jae
mov
imul
xlat
sti
enter
repz
sti
test
dec
inc
fcomi
jno
xor
addb
adc
fistps
dec
inc
aas
mov
add
mov
cld
cld
pop
mov
stc
add
or
fstpt
nop
js
hlt
xor
or
push
sub
popa
cltd
pop
por
cmp
lds
scas
mov
adc
pushf
mov
loop
and
xchg
xor
movsb
mov
movsl
adc
mov
cli
stc
fsubl
add
sbbb
mov
xchg
mov
rcrl
ret
xlat
inc
push
rcrl
mov
jnp
addr16
insb
push
daa
lock
iret
adc
mov
fisubrl
pop
add
or
sub
sbb
cmp
test
out
jae
jmp
pop
out
movsl
mov
xor
sub
int
in
mov
fidivrs
jle
sub
or
pop
dec
je
call
xor
pushf
xlat
in
push
ss
scas
loop
xor
int3
push
pop
jbe
xchg
mov
cwtl
pushf
lea
ret
repz
ret
sub
addr16
pop
and
sub
out
mov
mov
stos
jp
pop
xor
add
daa
test
aas
cs
negb
push
in
jmp
jmp
cmp
aas
push
mov
outsb
push
stos
ret
test
imul
mov
pop
lahf
shlb
pop
mov
stos
out
icebp
lods
test
int
adc
push
stos
cmp
dec
cld
jle
jo
push
pop
mov
out
dec
cmp
cli
loop
daa
jg
addr16
jge
adc
sbb
jle
dec
fs
mov
notl
inc
mov
cmpsb
xchg
and
jns
jbe
fisubl
sti
out
pushw
mov
mov
inc
cmp
int3
jmp
loopne
imul
xchg
jp
sahf
stos
mov
mov
xchg
sub
xchg
push
out
mov
inc
push
aam
mov
xor
add
insb
mov
mov
mov
cltd
xor
push
add
gs
dec
cmp
shlb
sbb
jmp
lcall
sub
mov
push
sbb
mov
cmp
inc
mov
dec
popa
jp
cmp
adc
inc
jle
inc
add
stos
inc
das
xchg
xchg
pop
pop
pop
int
out
sti
sub
ljmp
jmp
stos
lret
mov
xchg
xor
adc
fildl
jne
cmp
addb
push
daa
jo
addr16
repz
dec
int3
adc
mov
xchg
notl
les
push
mov
jle
js
sbb
loop
push
sub
mov
and
mov
scas
ret
push
mov
mov
mov
push
adc
aas
gs
or
adc
imul
adc
into
push
jmp
gs
test
or
and
popf
in
sarl
cmp
out
jnp
dec
dec
jecxz
pop
or
adc
jg
jge
fidivrs
mov
fistpl
test
sahf
addl
sub
pop
sub
sti
and
pop
addb
mov
xchg
loope
fistpl
test
push
sub
sub
aaa
roll
xchg
xchg
jg
movsl
jp
or
hlt
test
push
pop
mov
jns
or
sub
imul
adc
pop
cmp
jp
add
sti
sarl
inc
lds
inc
jb
xchg
lods
mov
push
mov
aam
test
std
jae
popa
fimull
pop
into
clc
movsl
ficoms
pusha
ds
sbbb
test
and
outsb
cmc
pushf
lret
stos
adc
cmc
imul
xchg
adc
lahf
out
cmp
xchg
cltd
lods
out
mov
add
adc
adc
mov
mov
or
jne
xchg
adc
add
stc
pusha
mov
push
mov
xor
xchg
xchg
test
xchg
sub
dec
mov
pushf
xchg
fstl
ds
mov
inc
nop
push
inc
fnstsw
fsubl
mov
dec
das
aas
cmpsb
aad
jl
add
nop
cmc
cli
addb
pushf
lret
ds
test
pop
in
push
xlat
push
adc
push
sub
or
popf
popf
mov
imul
rcl
dec
inc
sbb
xchg
repnz
roll
sub
add
mov
and
and
add
xor
mov
addr16
fnstenv
in
or
fimuls
mov
pop
repz
sub
pushf
jno
lret
or
arpl
sbb
mov
sbb
cmp
mov
pusha
mov
movsb
das
xchg
repz
pop
test
les
lcall
ljmp
pop
ss
verw
adc
jnp
or
outsl
gs
xor
aad
push
in
mov
pop
enter
inc
lock
rorl
insb
fwait
pop
add
cmp
xchg
arpl
mov
mov
jne
push
ficoml
test
scas
outsb
or
inc
inc
add
sbb
adc
lods
psubq
aam
cmp
out
mov
mov
notl
test
lods
cld
add
mov
in
or
pop
sarl
mov
shll
push
pushf
mov
fisttpll
jg
jp
mov
push
or
fimuls
or
ljmp
pop
xchg
dec
in
int3
xchg
iret
out
cwtl
inc
xchg
mov
cmp
inc
cmp
xchg
fstp
scas
fldenv
inc
dec
push
xchg
fcoms
mov
jae
xorl
push
sbb
add
mov
addr16
push
pushf
mov
push
and
lret
insb
imul
js
sahf
out
jle
push
dec
pop
push
inc
movsl
add
shlb
jno
into
or
or
sub
sub
cmp
mov
xor
pushf
fstp
mov
push
iret
movsb
jl
or
scas
adc
into
ja
jae
mov
stos
dec
test
repnz
jno
sub
cmp
sub
movq
cmpsl
mov
and
lods
push
popf
dec
pop
add
jbe
je
das
inc
pop
add
ja
xor
sub
sub
stc
sbb
jmp
xor
lods
inc
jnp
mov
jp
je
xchg
pop
call
dec
xchg
imul
mov
sahf
xchg
mov
add
sub
mov
mov
pop
push
jbe
sbb
xor
sahf
jns
xchg
test
dec
loop
jb
dec
addl
das
add
les
mov
push
mov
mov
das
xor
scas
movsb
jge
mov
sarl
mov
cmpsb
mov
ja
fildl
test
mov
je
loopne
outsb
fisubs
inc
mov
leave
jns
addr16
xchg
xor
cmc
dec
mov
jmp
push
mov
add
mov
bound
pop
std
xor
jne
mov
arpl
push
mov
sbb
xchg
mov
xor
insl
cld
xor
fwait
shll
aam
push
or
or
mov
mov
repnz
jae
pop
xor
cld
lods
adc
and
ja
lret
daa
test
mov
testl
aad
call
push
push
push
inc
cmp
add
and
scas
lock
in
mov
stos
mov
mov
arpl
xor
ror
insb
pop
lock
das
hlt
mov
fwait
cmp
sbbl
mov
shl
outsl
icebp
ja
dec
cmpb
pusha
shlb
xchg
or
cmpsb
mov
cli
mov
xor
sti
call
push
jg
pusha
cmp
sub
xchg
dec
lcall
dec
xchg
cmp
inc
cld
mov
add
cmp
sbbl
or
es
dec
xchg
mov
or
pop
insb
cmpsb
enter
daa
and
sub
xor
pop
cltd
cld
or
dec
das
xor
push
push
stos
jle
inc
jl
std
xchg
leave
orl
xchg
add
inc
stos
xchg
cmp
sbbl
aad
ss
or
aad
add
jmp
aam
arpl
lret
xor
scas
ds
inc
and
rcrl
int
inc
cmc
xchg
js
dec
ss
sbb
mov
pop
inc
jle
scas
push
pop
in
imul
test
and
dec
pop
popw
popf
hlt
repnz
je
push
or
adc
lret
push
or
out
in
loop
aaa
mov
cmp
jo
cmp
xchg
push
xchg
xchg
adc
outsb
pop
cmovg
int
adc
mov
xchg
mov
inc
test
fcomi
std
test
or
leave
mov
call
lods
jo
stos
add
test
repz
jmp
push
into
push
add
inc
cltd
mov
loopne
ljmp
mov
pushf
fidivl
cvtps2pi
push
fwait
xchg
in
es
andb
push
cltd
mov
mov
mov
and
in
sbb
mov
sbb
push
and
daa
xor
sbb
sub
and
out
rcll
frstor
cmpsb
inc
inc
or
mov
adc
jbe
mov
test
cmp
ret
cmp
lcall
adc
jbe
popa
int
push
adc
push
pushf
mov
pusha
sbb
pop
inc
pop
gs
xchg
sbb
js
jp
cmp
stc
mov
dec
ficoml
scas
dec
lods
outsl
test
push
jo
fwait
or
aam
cmpsl
cmpsb
jb
adc
push
sarb
shll
leave
sub
shlb
push
in
pop
push
mov
cmpsb
ja
stos
adc
nop
stos
xchg
loopne
sbb
into
mov
repz
ret
mov
outsb
sub
repz
mov
inc
mov
rcrb
sbb
pop
lcall
sbbb
lret
adc
mov
daa
push
inc
fcmove
cmp
push
imul
in
lret
jnp
jne
add
adc
lcall
xlat
adcb
inc
lea
xchg
cmp
enter
aas
or
das
dec
jg
lds
cmp
mov
dec
sbb
leave
xor
in
pop
jle
setae
mov
sub
push
xor
mov
repz
in
pop
in
pop
fidivrl
push
addr16
dec
sbbl
inc
nop
shll
mov
imulb
mov
insl
jmp
xchg
les
vmovq
repz
cmp
xchg
xor
adc
lret
repnz
adc
lea
bound
cli
fcmovnbe
jge
pop
in
movsb
popa
xchg
jbe
int
std
lods
xlat
adc
icebp
lcall
out
fs
imul
inc
push
in
add
out
cmp
mov
addr16
sub
shlb
mov
pop
xchg
stos
jno
lods
cs
in
mov
push
arpl
stc
mov
mov
push
sub
dec
mov
fisttpl
sub
arpl
lret
es
xchg
add
or
ds
sti
mov
dec
push
lret
movsl
fisubs
out
sbb
cmp
and
outsl
mov
xchg
icebp
and
std
das
or
sbb
out
filds
adc
jo
rclb
adc
pop
dec
jmp
cld
dec
lods
movsb
cmp
rolb
add
pop
xor
xor
shl
sarb
jae
insb
mov
in
cli
add
or
ds
pop
lret
cli
test
lds
adc
leave
sbb
and
in
sbb
lds
repz
rorl
out
adc
stos
push
cmpsl
dec
cmpb
sarl
enter
mov
jbe
orb
inc
xor
jmp
popf
dec
sahf
mov
in
inc
out
ss
cmp
enter
jp
mov
insb
adc
add
jo
add
std
notb
xor
shlb
push
rolb
gs
cmp
adc
insb
sahf
pop
jmp
pop
loop
mov
aam
fstpl
aas
or
iret
xchg
and
lods
data16
test
insl
repnz
adc
jb
out
adc
sub
mov
cmp
testb
je
pop
dec
xchg
sbb
cmc
sbb
mov
rcrb
movsl
mov
outsb
sbb
push
mov
sub
ljmp
and
nop
lds
ret
aad
pushf
les
scas
xor
xorb
out
add
lret
or
out
cwtl
add
pop
mov
or
lret
add
int3
inc
test
xor
push
mov
xchg
adcb
pop
push
into
pusha
pop
xor
mov
aam
dec
lcall
jp
add
xchg
mov
rorl
and
or
mov
dec
dec
ljmp
icebp
aas
sbb
jmp
ficomps
into
imul
shll
std
imul
mov
lods
dec
jl
or
cwtl
dec
imul
and
mov
mov
shlb
sbb
mov
mov
loop
mov
or
jbe
add
rorl
clc
shlb
fptan
movsb
aad
xchg
pop
mov
fptan
xlat
push
movsb
mov
les
pop
push
jg
hlt
pop
xchg
out
push
or
and
test
cmp
lea
popa
imul
inc
jo
mov
sub
mov
lods
pop
push
lret
fst
sub
jge
sub
add
or
inc
push
nop
fnsave
lods
rcrb
fistps
int
movb
inc
adc
sub
xor
xchg
outsw
and
mov
imul
aam
int3
mov
out
rcl
loopne
pop
inc
iret
mov
das
insl
aad
adc
or
mov
lock
lods
nop
and
cmp
fldcw
cmp
sub
adc
hlt
adc
mov
insl
mul
fld
in
data16
test
cmpsb
jecxz
fsub
cmc
push
je
icebp
out
les
fisttps
arpl
and
fists
dec
testl
mov
sarb
inc
push
jg
in
add
call
dec
mov
or
pop
add
aas
or
sbb
daa
mov
mov
bound
insl
and
aas
out
enter
ja
sahf
std
out
or
xor
lds
dec
enter
and
cmp
xor
jecxz
mov
mov
add
jge
push
fidivrs
mov
mov
ret
repnz
out
mov
or
jae
ja
notl
cli
cmpsb
inc
mov
cmp
jno
xor
push
sbb
sub
push
sbb
or
mov
inc
push
pop
push
sub
mov
mov
pop
mov
sbb
and
jp
and
fidivl
jno
pop
adc
push
jne
and
dec
mov
fstpt
jno
lea
enter
lret
iret
inc
mov
in
cld
pop
push
push
adc
call
roll
enter
and
mov
cmp
neg
xchg
add
cmp
mov
pcmpeqb
cmpxchg
and
popa
popa
jge
fistl
mov
cmpsb
or
inc
lea
xchg
out
jb
int3
push
iret
cli
fucomi
xchg
popa
out
test
out
leave
add
mov
xchg
rolb
xchg
sahf
sbb
cwtl
sub
push
add
imul
pushf
aam
and
andb
cmc
or
fwait
and
xchg
jo
lcall
lea
mov
ret
cmpb
xor
or
pop
std
divl
xor
rolb
and
pop
cli
xor
sub
inc
jp
shrb
bound
clc
pop
movsb
lds
pop
inc
test
inc
das
xor
idivl
inc
mov
shr
mov
cmc
push
arpl
or
test
mov
dec
std
xlat
in
ja
mov
mov
adcb
sbb
inc
lods
pop
mov
cli
shll
into
mov
inc
pop
mov
aaa
mov
or
dec
sbb
cmp
add
jp
out
or
sbb
dec
aam
mov
loop
rcr
cmp
xchg
fcompl
fwait
dec
loop
data16
loope
jl
frstor
out
je
push
mov
mov
lea
push
push
std
pop
leave
lret
inc
aam
ficoms
scas
pop
jecxz
fstps
fmuls
jg
in
popf
ret
pushl
nop
xor
mov
xor
lea
sbb
ja
mov
inc
iret
or
neg
out
lahf
mov
les
test
add
ds
lds
out
iret
xchg
ret
push
dec
adc
mov
leave
icebp
push
cmp
or
test
fdivr
pop
add
add
sub
pop
addr16
outsl
sub
xor
repnz
hlt
ret
adc
or
cs
mov
idivl
mov
push
mov
fnstenv
push
jg,pn
push
jb
out
dec
jg
inc
test
adc
test
call
orl
adc
lret
push
add
fstpt
add
mov
jp
ret
lret
or
stos
sbb
add
xchg
roll
fdivp
push
das
daa
stos
in
dec
outsl
fcmovnb
test
js
xorl
and
scas
test
sahf
divb
popa
xor
push
test
adc
xchg
add
in
stc
sbb
push
icebp
fmuls
jmp
inc
inc
push
cmp
cmpsl
out
xchg
stc
pusha
jmp
subb
mull
iret
jns
jb
sub
ds
adc
andb
inc
jbe
not
dec
push
xor
and
loope
int
mov
or
orb
rcrl
xor
movsl
pop
call
and
lret
mov
ja
jno
add
test
push
push
movsb
inc
cmovbe
pop
aam
scas
std
roll
les
xchg
out
xchg
xor
mov
dec
stos
iret
xorb
jge
push
jbe
nop
clc
inc
sbb
mov
sub
add
adc
and
xor
test
xchg
in
test
lahf
jmp
popa
mov
sub
mov
movb
push
ja
jne
cld
mov
pop
aam
shlb
mov
xchg
jb
int3
cld
jne
dec
lcall
testb
jno
mov
sbb
and
mov
xlat
lahf
pop
sbb
sbb
decl
inc
aam
sub
outsl
aaa
or
lods
jle
ja
cmc
rcll
jmp
mov
leave
adc
xor
jae
mov
adc
mov
stos
js
in
push
imul
sarl
mov
lret
lret
sub
dec
iret
ljmp
cmp
add
mov
je
insb
leave
push
sub
fisubs
outsl
mov
sbb
lods
mov
imul
imul
dec
popa
or
movsb
cmp
out
adc
push
xchg
rcrl
sbb
pop
rorl
xor
jp
mov
int3
lock
mov
add
inc
mov
fbstp
arpl
lea
cmp
les
sbb
xchg
aam
mov
dec
ss
enter
cs
gs
leave
dec
popf
shrl
mov
or
test
sbb
lods
dec
xor
test
lods
into
insl
pop
sub
mov
sub
loope
loope
inc
rcr
xor
or
mov
outsb
jg
repnz
dec
aam
push
jns
jp
mov
int3
xchg
xchg
in
ret
addl
mov
std
jl
xor
adc
mov
mov
dec
pusha
pop
rolb
cmp
mov
sub
scas
or
mov
pusha
imul
cli
adc
sti
fisubrs
xor
arpl
int3
xor
push
jge
fwait
notl
and
leave
adc
xor
loopne
or
sub
sti
xor
mov
insb
push
xor
mov
cld
mov
imulb
add
rcrl
xorb
loopne
imull
cmp
pop
push
test
call
ret
push
inc
xor
xor
outsb
sbb
cmp
mov
mov
out
jbe
push
dec
add
xchg
es
push
jg
cltd
dec
not
mov
data16
mov
data16
test
pop
divl
pop
pusha
shll
mov
add
add
in
mov
jns
mov
into
fwait
xchg
mov
leave
sub
outsb
sbbl
adc
fnsave
sbb
sub
ret
fnstcw
in
sbb
xor
fs
inc
flds
repnz
jecxz
push
xor
fimuls
fs
add
pop
jae
xor
adc
popa
or
push
hlt
in
daa
in
jmp
das
data16
pop
aad
insb
mov
rcrl
cli
cmpsl
mov
in
xor
or
add
pop
in
mov
adc
push
je
into
jecxz
ret
repz
jno
shrl
pop
mov
bound
jmp
sub
jnp
or
xor
aas
in
dec
inc
xchg
mov
fisttpll
repz
stos
and
xor
rcrl
popf
enter
pop
xlat
shll
and
movsb
mov
out
sub
mov
lret
inc
xchg
int
pop
jns
daa
aam
imul
or
in
push
add
daa
lds
cmc
test
and
int3
mov
mov
pop
mov
js,pt
bound
xchg
jne
pop
lret
stos
xor
in
std
mov
adc
lret
pushf
sub
out
adc
stos
aaa
bound
gs
pop
stos
sar
aam
cltd
stos
shll
pop
cmp
cwtl
sbb
mov
mov
aas
jge
xchg
mov
and
sbb
outsb
scas
bound
jb
ss
je
mov
cmp
bnd
xabort
pop
and
imul
sbb
xchg
xchg
gs
or
scas
out
pop
int3
ja
cmpsl
mov
andl
lcall
sbb
jle
push
lret
xchg
mov
xchg
loop
push
daa
pushf
push
mov
sbb
mov
loopne
push
fisubrl
pcmpgtw
and
pop
jmp
js
subl
mov
cmp
loop
in
aaa
stos
dec
aad
pop
pop
inc
insl
add
lret
pop
push
cmp
pop
mov
ja
adc
out
cmpsl
sbb
mov
jb
ja
adc
mov
cltd
addl
hlt
cmp
add
add
les
cmp
jg
adc
adc
xor
ja
adc
addr16
out
sub
add
sub
addr16
or
int
mov
mov
js
mov
mov
cltd
pop
addr16
xor
sbb
shrl
rcr
ljmp
fmull
adc
add
xor
xchg
mov
ret
dec
rolb
enter
scas
mov
mov
sahf
push
xchg
jb
aam
inc
fmulp
and
cmp
mov
mov
ss
scas
lods
xchg
push
and
jp
sbb
lods
pop
clc
dec
sahf
xor
int
call
pop
sahf
repnz
mov
mov
mov
cmc
or
fwait
ret
jb
sbb
aad
insb
push
outsb
out
sub
pop
jmp
sbb
jl
repz
push
jmp
pop
xchg
aad
sub
push
jae
dec
pop
imul
dec
bound
pop
sub
je
popa
pusha
icebp
sbb
jne
sub
xchg
in
insb
push
mov
inc
dec
out
or
ja,pt
pop
out
dec
dec
adcb
and
jns
pop
xchg
mov
lahf
js
xor
mov
push
ret
pusha
int3
into
mov
xor
sbb
aad
dec
xchg
push
xchg
ret
jne
and
cmp
push
sarl
pop
adc
dec
fwait
ret
cmpsl
daa
xchg
and
loopne
lcall
and
push
mov
push
push
mov
mov
adcl
lods
xchg
and
push
in
mov
and
and
shlb
imul
jb
add
mulb
mov
add
or
push
data16
sbb
xchg
iret
sub
stos
push
mov
and
outsl
dec
mov
jg
stc
lcall
or
lods
jae
dec
mov
bound
lret
daa
lret
aad
and
cltd
sbb
push
hlt
and
jne
or
push
test
inc
push
mov
pop
jb
scas
dec
sub
lcall
das
cmp
pop
adc
lods
or
outsb
push
inc
mov
or
test
and
adc
iret
jecxz
scas
or
inc
out
push
mov
dec
sbb
and
mov
dec
flds
stos
push
jge
in
xchg
scas
nop
xorl
popa
out
push
sub
ret
je
sub
addb
insl
sbb
or
andl
inc
or
comiss
rorl
dec
outsb
mov
arpl
movsb
lcall
jb
ljmp
cmp
mov
scas
fcmovb
dec
pop
data16
mov
adc
mov
cmp
push
fcomi
inc
sbb
test
movsl
sub
cmp
sub
out
push
ja
in
xchg
xor
mov
cli
dec
jl
lret
pop
dec
roll
xor
pushf
cld
jl
pop
ret
sbb
xchg
repz
mov
pop
daa
mov
mov
mov
xor
lods
sub
fmuls
jmp
lret
xor
adc
lods
lds
loope
sub
and
add
int
mov
xchg
xchg
jle
daa
inc
notl
outsl
sub
addr16
addr16
pop
push
int
popa
pop
jmp
fnsave
push
and
int3
enter
fndisi(8087
icebp
xor
or
into
fsubrl
or
adc
pop
insb
cmp
or
sahf
adc
out
push
out
jne
icebp
addr16
lcall
push
push
sub
or
enter
push
fstps
test
les
pop
fwait
mov
cmp
mov
sahf
xchg
inc
imul
adc
out
das
mov
stos
in
jae
sub
jl
xchg
cld
adc
outsb
aaa
inc
adc
sbb
jecxz
mov
or
pop
ljmp
in
sbb
fistps
lock
inc
jmp
pushf
push
sub
cwtl
aad
enter
arpl
int3
loope
std
setns
xlat
xchg
in
out
ret
pop
dec
jne
inc
mov
jno
int
in
lods
xchg
inc
cmp
pop
xchg
xor
jo
sbb
xor
adc
pop
int
or
sub
clc
dec
dec
pop
cmp
or
cltd
jmp
or
ret
test
loope
sbb
or
sbb
mov
push
sarb
cmp
cmc
and
cmp
sub
scas
mov
lahf
xor
mov
push
mov
cmpsl
sub
dec
pop
xchg
jle
pop
int
inc
ja
xlat
arpl
hlt
es
in
and
test
push
leave
xlat
mov
test
sub
mov
adc
mov
add
or
add
jle
mov
loopne
loop
xor
movsb
dec
stos
push
movsl
or
and
mov
and
xchg
sbb
lcall
xor
add
popa
in
int
and
shrl
and
xchg
mov
sub
dec
pushf
inc
and
ss
rcll
xor
scas
lods
leave
fisttps
or
pop
sub
mov
lret
call
mov
xchg
mov
lods
push
lds
pop
sbb
rolb
xor
adc
adc
xchg
xchg
rcrl
add
push
sub
cmpsb
jne
and
xor
outsl
fdivrl
roll
sahf
popf
sub
sub
dec
sub
xchg
sub
pop
mov
push
and
push
push
dec
sub
leave
ficoml
adc
xchg
adc
dec
int
lods
sub
outsb
cmpsb
and
clc
mov
push
xor
imul
jmp
mov
mov
push
push
xchg
sbb
sub
shll
sti
xor
fs
das
dec
mov
clc
push
sbb
out
cmp
cld
les
pop
xchg
jp
mov
mov
mov
cmp
in
fldenv
mov
xchg
push
xor
stos
jmp
xchg
test
lock
pop
mov
enter
dec
sbb
cmpl
jno
add
mov
xchg
xchg
jae
and
push
sahf
dec
pop
lock
mov
je
xlat
outsb
fsubr
jne
bound
pushf
imul
and
push
xchg
rorb
pop
sarl
mov
xor
fmull
repz
arpl
mov
mov
push
aaa
hlt
xor
adc
ja
or
lret
pusha
aam
scas
dec
lahf
mov
xlat
test
inc
fisubs
jns
lret
pop
aaa
int
rcll
push
mov
stc
or
jg
pop
out
jo
negl
jbe
jle
push
imul
jle
cmp
test
and
ss
cmpsl
test
xor
or
mov
pop
cltd
inc
lcall
jns
pop
adc
xchg
jge
cmp
and
das
lods
sti
inc
adc
mov
add
dec
mov
xchg
cs
mov
jnp
jecxz
jbe
mov
mov
je
and
outsb
pop
mov
lahf
pop
pushf
loopne
mov
out
repz
push
ds
fimull
daa
mov
aaa
repnz
push
bswap
pusha
pushf
sub
adc
jl
loopne
ret
pop
cmpsb
push
into
mov
push
out
and
or
xor
adc
stos
cs
xor
push
imul
outsl
inc
mov
dec
aad
xlat
je
dec
xchg
inc
test
pop
arpl
fsts
push
xchg
push
sub
loopne
push
inc
or
lods
test
clc
xchg
addr16
imul
xchg
and
push
ror
jnp
pop
push
repz
or
mov
les
xchg
xlat
cltd
jnp
sahf
adc
jb
sub
cmp
nop
fidivs
ret
adc
pop
imul
xchg
mul
and
fisubrs
xchg
mov
push
jne
scas
fld
js
stc
or
fldenv
and
and
mov
adc
dec
rolb
jne
add
clc
jae
lds
sbb
out
jbe
xor
xor
push
adc
jo
cmp
sbb
inc
into
mov
cltd
int3
xchg
push
or
sbb
mov
xchg
ficompl
inc
and
std
jl
sub
ret
adc
subb
push
fwait
jp
pusha
lock
inc
fs
inc
pop
jae
sbb
cs
repnz
movsl
out
xor
cmc
dec
ljmp
ret
pop
pop
push
sar
fsts
call
loope
or
mov
imul
xor
lahf
mov
pop
inc
jl
or
lds
rorb
das
add
push
sbb
jbe
pop
mov
push
shl
imul
dec
movsl
stos
inc
pop
mov
dec
in
lods
sarl
mov
pop
js
test
xor
mov
in
jnp
sbb
and
push
fwait
repz
add
add
push
add
fld
pusha
in
sub
sub
pop
push
mov
fsubr
inc
push
movsb
jg
jb
daa
cmpsl
cltd
dec
js
fwait
loope
loop
sbb
std
mov
or
ret
mov
jbe
loopne
mov
mov
fs
inc
cltd
ret
or
cwtl
xchg
jl
movsl
and
in
rclb
or
cmp
dec
sbb
and
adc
mov
add
or
test
jmp
and
stos
or
mov
dec
mov
xor
add
or
mov
jnp,pt
popa
xchg
cmp
mov
push
mov
lods
shll
mov
in
cmpsb
jno
xor
ss
repz
jbe
js
pop
sub
ljmp
inc
fcom
xor
flds
lcall
xor
pop
mov
inc
or
int
xchg
pop
adc
lea
push
inc
ficompl
cmp
insl
dec
dec
pushf
push
stc
dec
cmpsl
mov
nop
cmp
shl
add
imul
bound
lcall
lock
jae
xchg
pop
insb
jl
mov
mov
in
xbegin
xlat
push
mov
sub
aaa
xchg
loop
dec
mov
inc
adc
aam
into
jnp
jge
es
shlb
loope
push
pop
jle
int
jmp
in
shrb
imul
cmpsb
jbe
enter
fisttps
fdiv
jo
mov
xor
imul
or
pop
inc
and
imul
test
sysexit
mov
xchg
sub
pop
sbb
ljmp
inc
xchg
jg
nop
jb
pop
mov
cld
cmp
pusha
mov
stc
lret
mov
daa
std
ds
lret
cs
orl
scas
int3
into
adcl
jnp
sbb
pop
dec
mov
fs
add
push
push
ret
lods
cmp
cmp
hlt
rclb
pop
movsl
and
data16
shll
repz
xchg
addl
cs
inc
das
jge
xchg
ret
jb
mov
jns
pop
movsb
jne
pop
mov
xor
outsl
dec
add
outsl
ret
push
mov
hlt
adc
pop
shrb
pop
scas
xchg
jg
push
jns
jmp
dec
and
xor
adc
jno
inc
inc
xchg
and
ljmp
adc
jae
lret
std
push
xchg
mov
sub
imul
pusha
cmpsb
mov
hlt
add
push
or
jl
insb
pop
xchg
and
and
mov
cmc
inc
xchg
and
mov
out
and
pop
jl
ficoml
fisubrl
or
cmp
icebp
pop
or
scas
sub
inc
pop
push
mov
dec
sbb
sub
sub
push
hlt
jo
loop
xor
ret
pop
jo
shrb
inc
ja
ja
in
sbb
js
rcrb
and
and
mov
add
push
cwtl
les
pushf
iret
test
or
adc
inc
lock
pusha
stos
or
pop
hlt
mov
pop
and
je
lret
fdivs
insl
xchg
popf
aam
jmp
out
in
cmp
das
mov
in
jg
lds
xchg
mov
or
dec
movsb
lahf
aad
dec
std
dec
push
xor
fadd
cs
dec
fimull
bound
inc
ficomps
shrb
or
jno
or
cmpb
mov
ret
or
cs
insb
pushf
inc
arpl
cwtl
push
cmp
mov
inc
popf
es
movsl
pop
aas
inc
jnp
out
xchg
leave
push
lods
loopne
ret
xor
scas
cmp
test
clc
notl
mov
inc
scas
ja
es
jp
cli
sbb
add
cmp
sub
scas
fidivrs
jmp
out
in
inc
add
movsl
pushf
xor
or
dec
inc
pop
into
enter
push
pop
dec
filds
lret
mov
push
addr16
das
dec
jo
mov
femms
mov
lahf
mov
xor
and
mov
in
mov
jb
divb
cmp
outsb
enter
aaa
inc
xor
adcl
call
mov
jge
and
mov
jns
in
pop
pop
sahf
pop
dec
stos
cmpsb
mov
add
jne
sbb
cmp
lea
dec
fdivr
jnp
cs
cmc
mov
sbb
scas
test
cmp
sahf
outsl
shrl
xchg
mov
jo
std
push
fwait
lods
xchg
in
ljmp
fucomi
mov
add
andb
paddq
into
sub
ss
mov
ds
shlb
jge
sub
inc
cwtl
in
jg
dec
leave
inc
bound
pop
imul
fstpt
jge
out
ss
cmp
ss
dec
addr16
cwtl
frstor
and
fsubs
mov
xlat
xor
xchg
loop
push
aaa
movnti
pushf
xchg
ret
and
rol
xchg
imul
cld
arpl
add
ss
mov
jbe
push
call
dec
jg
mov
jge
sbb
dec
pushf
pop
xor
lods
mov
shll
mov
jl
sbb
ret
push
add
pop
dec
ljmp
or
push
cltd
push
jl
sbb
xchg
xchg
lret
push
arpl
cmp
sub
lds
out
mov
call
and
int3
aad
or
popf
scas
or
ret
or
mov
mov
call
inc
jns
adc
fildll
loop
jg
mov
sub
and
jnp
sti
and
mov
mov
jmp
mov
cmp
jbe
outsb
mov
popa
push
lahf
daa
arpl
frstor
mov
xchg
lahf
push
inc
pop
cltd
loop
push
lahf
enter
sti
add
mov
pop
rcrb
fnstsw
les
shll
mov
and
cmp
pop
test
aas
test
adc
sbb
out
mov
mov
xor
dec
out
inc
push
in
aas
loope
add
xor
repz
pop
ret
and
push
sub
push
ficompl
ljmp
dec
cmp
inc
outsl
fnsave
adc
sub
sbb
ds
sbb
in
lret
rclb
dec
push
pop
cltd
dec
xchg
xorb
in
stos
lret
sub
out
addb
or
dec
out
jmp
shrl
out
stc
push
push
out
adc
sbb
aaa
push
adc
or
repz
inc
aam
sti
iret
cmp
lahf
pushf
adc
loop
jo
cli
mov
out
pop
mov
aas
push
mov
inc
mov
pop
iret
cld
lcall
adc
ljmp
sahf
sbb
pop
pop
icebp
xchg
ficoms
xchg
xchg
or
lock
push
dec
and
jmp
xchg
lods
push
jg
jne
je,pn
pop
jg
mov
in
xor
mov
aad
sub
cmp
aas
movsl
add
cwtl
mov
dec
in
pop
sub
in
xchg
jae
sbb
movsl
mov
add
icebp
pushf
sahf
dec
leave
jmp
ficoml
xor
jle
std
cmpl
jbe
test
push
push
lahf
lahf
push
pop
sub
ds
fcom
int
scas
popa
mov
out
inc
hlt
mov
push
test
sbb
mov
filds
push
clc
sarl
imul
push
movsb
and
out
loope
test
pusha
sub
hlt
iret
jno
scas
and
inc
mov
stc
xorb
cmpsl
jns
inc
dec
movsl
lahf
out
dec
dec
scas
aaa
push
jecxz
ljmp
stos
mov
daa
sarb
jp
xor
mov
dec
mov
mov
rol
mov
orb
sbb
pop
cltd
clc
xor
inc
cmp
insl
ficoml
xchg
inc
rolb
jg
scas
jmp
imul
or
ret
rcrb
test
in
or
mov
fwait
in
rcrl
sbb
cmp
fdivl
clc
xchg
dec
push
sbb
cmp
iret
sub
and
gs
jo
orl
popf
stos
fisttpl
movsb
push
sub
fidivs
and
roll
pop
gs
fdivr
lret
push
cld
lcall
mov
mov
test
in
jp
inc
dec
rcr
sbb
in
sbb
stos
nop
mov
jne
pop
mov
push
jbe
pop
add
xchg
sbb
push
xchg
mov
jge
lret
inc
clc
sbb
dec
dec
ljmp
and
shlb
inc
xchg
add
shrb
popa
stos
int
or
cli
sub
divb
arpl
push
sbb
adc
mov
aas
nop
xor
jl
fcoml
and
add
insl
add
lcall
and
sbb
test
insb
dec
popf
test
test
sbb
jae
fiadds
adc
fs
aas
xorl
jae
sbb
xchg
shl
fwait
es
cmp
nop
imul
test
mov
jg
xchg
pop
repz
lock
cmpsl
mov
add
lods
mov
lcall
in
push
nop
in
and
dec
aaa
imul
xor
idivb
mov
sbb
xorl
movntps
and
lcall
and
add
ja
push
add
inc
out
lret
outsb
dec
int
in
rclb
mov
pop
xchg
fnstsw
jp
jle
addl
loope
inc
jo
into
pop
and
cli
mov
ret
dec
insl
xchg
int
xor
mov
add
pop
mov
or
aad
sub
jp
fnsave
mov
int3
scas
push
inc
lock
imulb
addr16
xor
cmp
std
add
dec
ret
pop
movsb
stos
es
in
jae
fs
xchg
out
mov
mov
std
repnz
pop
xor
sbb
inc
arpl
add
mov
inc
xchg
dec
daa
addb
iret
jp
push
cmp
clc
lods
xor
fimuls
movb
mov
je
sbb
nop
ja
scas
mov
pushf
xor
dec
clc
mov
xor
sub
xor
dec
leave
mov
subb
and
jmp
or
or
or
mov
pop
push
push
int
scas
push
jb
sbb
std
lock
out
movsl
lea
lcall
dec
leave
lcall
mov
adc
ret
mov
pop
inc
cmp
mov
repnz
in
rorb
sub
push
js
xchg
dec
daa
or
js
addl
and
daa
jge
cmp
cmpb
enter
unpcklps
loop
sbb
push
add
and
pop
inc
cmpsb
xchg
add
loope
clc
xchg
cld
xchg
mov
dec
roll
xor
adc
fwait
lret
repz
xchg
xchg
pusha
insl
test
stos
xchg
popf
jle
pusha
stos
jle
aad
rol
mov
fcomip
pusha
mov
and
ret
adc
jge
xchg
adc
aad
cmc
sub
adc
clc
sub
stos
stos
scas
sahf
push
add
add
push
mov
gs
shll
jo
dec
movsb
cs
cmp
jl
leave
adc
cltd
mov
mov
jmp
add
lahf
mov
push
or
paddusb
or
es
xchg
test
rol
cmp
test
lds
rclb
and
mov
jp
lahf
nop
movsb
and
xor
mov
test
stc
xchg
mov
orb
dec
out
mov
out
cmp
jnp
bound
mov
push
imul
loop
bound
mov
xor
xor
fistpl
push
mov
jne
je
out
cs
mov
dec
call
fwait
inc
dec
push
push
subl
mov
xchg
sbb
ljmp
nop
clc
push
fsubl
jns
addr16
aaa
adc
pop
adc
pop
mov
sub
test
mov
cmp
lret
sahf
ret
sbb
dec
insw
fs
pop
add
xchg
inc
pop
add
xor
mov
scas
addr16
mov
in
out
push
js
ljmp
sub
cmp
hlt
mov
addl
add
or
rcll
std
add
lds
jne
sbb
rcrb
dec
pushf
popa
add
cld
in
xor
cmpsb
and
or
xchg
adc
add
insb
aam
cmp
insb
lret
mov
xor
xor
adc
movsb
lcall
inc
addl
jmp
int
inc
imul
sub
xchg
jmp
in
push
xor
sbb
push
sub
ja
outsl
aad
adc
sbb
lahf
sub
mov
cmp
hlt
out
daa
xchg
and
fbstp
mov
mov
lea
mov
out
scas
add
mov
lret
std
jns
push
es
add
std
enter
add
lcall
add
stos
mov
sbb
and
mov
nop
pop
pop
ret
add
add
stos
subl
adc
cld
jecxz
das
xchg
xchg
push
mov
imul
jne
aas
or
cwtl
or
shlb
adc
pop
pop
aaa
dec
in
dec
sbb
gs
xchg
xchg
lret
nop
and
xor
dec
or
xlat
xchg
movsl
loope
jnp
movswl
pop
imul
int
cld
jp
mov
adc
call
inc
jmp
push
or
icebp
push
movsl
pop
fidivs
add
mov
mov
dec
aaa
or
sub
jmp
xchg
inc
sub
inc
daa
add
mov
cmp
rol
out
test
xor
pop
popf
mov
cmp
dec
fwait
adcb
hlt
and
jl
sub
fisttps
xor
mov
ret
jb
test
fimull
idivl
pop
int3
fxch
lret
sbb
mov
and
leave
negl
inc
bound
xorb
popl
fsubl
cmc
out
mov
into
jg
inc
dec
mov
mov
popa
xor
dec
jle
stos
adc
sub
pop
daa
or
push
add
cmp
stc
aam
clc
sub
pop
pop
push
pop
icebp
push
sub
dec
mov
cmp
and
inc
adc
and
sub
clc
lret
pop
mov
stc
jno
or
lret
jns
cmp
test
mov
push
lret
enter
lds
fisubs
fsubrs
cmc
inc
jae
mov
dec
pop
cld
stc
ret
dec
cs
dec
push
mov
enter
pop
jge
mov
adcb
ret
bound
xchg
rclb
cwtl
jmp
ljmp
mov
push
call
sub
aaa
push
popa
test
cld
insb
ret
fidivl
in
ljmp
mov
fstps
and
xor
int3
adc
pop
xchg
mov
pop
ret
pop
dec
fldenv
jg
popf
and
lcall
or
adc
inc
iret
add
mov
mov
test
daa
mov
movsl
jge
loope
sub
inc
popa
shr
cmp
iret
ja
aas
push
mov
lret
iret
addr16
mov
repz
jbe
cmp
aam
out
fcompl
push
push
cmpsb
pop
fisttpll
adc
loope
cmp
ds
sbb
mov
cli
cmp
mov
sbb
push
inc
ret
mov
mov
jg
into
push
js
ret
pop
mov
mov
mov
movsl
loope
sub
sbb
lock
rol
iret
mov
movsb
leave
push
fisubrl
cmp
jge
mov
jae
push
sahf
jmp
popf
mov
push
and
and
int3
jne
rclb
jnp
xchg
xchg
dec
sbb
in
inc
cmpsl
cmp
inc
subb
fldenv
cmp
pop
ret
and
aas
cmp
and
xchg
sbb
cmp
adc
xor
cmpl
insl
push
imul
cmpsb
jne
pushf
adc
jne
mov
cld
outsl
scas
div
fucomi
add
jbe
xor
dec
fisttps
roll
adcb
xchg
jae
mov
js
imul
je
or
out
pushf
cmp
or
mov
pop
add
xchg
jecxz
mov
pop
sbb
sbb
pushf
sub
xlat
pop
sbb
mov
scas
outsl
sbb
xchg
out
rorl
mov
popf
sti
je
movsb
jnp
inc
dec
notb
jmp
addb
imul
push
imul
insb
cmp
pop
popf
mov
adc
dec
jecxz
fimuls
iret
mov
add
sbb
pop
fnstenv
mov
sahf
mov
lret
call
bound
gs
stc
iret
xor
lods
inc
mov
xchg
shlb
scas
std
out
dec
aam
mov
fadd
fimull
xchg
mov
lea
bound
cmp
test
fildll
sahf
pop
or
jle
jmp
cli
mov
stc
jp
mov
pop
dec
mov
aam
ds
out
aad
inc
sbb
je
xor
or
fs
mov
xor
inc
xchg
mov
adc
int3
js
inc
aam
pop
jns
inc
scas
jg
pop
add
xchg
or
add
or
adc
mov
notl
or
jmp
jmp
int3
clc
stos
scas
cwtl
or
mov
lret
pop
shrb
adc
iret
ja
les
fnsetpm(287
jp
xor
in
sbb
inc
sti
xchg
gs
pusha
out
pop
andb
scas
xor
cmp
dec
lahf
leave
inc
dec
jl
or
add
mov
adc
jae
in
mov
daa
push
mov
lea
rcrb
scas
mov
call
xchg
pop
dec
imul
cmc
notl
iret
testl
sub
lea
mov
stos
call
repnz
or
pop
aas
dec
movsl
mov
push
clc
mov
lahf
lods
repnz
and
outsl
xchg
fnsave
push
jecxz
ds
sti
mov
jp
lds
and
cmp
into
sub
sub
insb
gs
push
mov
mov
mov
sahf
std
mov
test
imul
test
push
aam
clc
pop
stos
out
adc
or
hlt
inc
cltd
cmp
fwait
mov
pop
out
and
gs
hlt
push
ja
ds
int
sub
pop
sti
sub
aam
in
sub
sbb
cmp
imul
mov
nop
sub
or
mov
inc
cltd
sub
loopne
inc
mov
adc
push
addr16
mov
inc
inc
xor
stos
lret
in
outsb
push
daa
lahf
xor
test
mov
mov
or
loope
dec
pop
stos
push
push
xchg
jmp
pop
outsl
mov
testl
cmp
pop
movsb
cs
cmc
insb
mov
imulb
iret
dec
xor
inc
cmp
mov
dec
aam
roll
mov
fiaddl
test
out
push
test
add
push
xchg
in
or
inc
test
xlat
mov
mov
mov
lods
test
imull
adcl
cs
lock
mov
push
pop
and
icebp
jnp
mov
lds
pop
adc
fists
jno
xor
stos
rcl
test
mov
aaa
out
daa
xlat
fcmovu
icebp
add
push
push
push
jp
lcall
sar
shlb
push
sahf
inc
es
inc
inc
sbb
jne
and
stos
lret
mov
or
les
push
sahf
mov
dec
les
xor
cmpsl
pop
scas
xorb
cmp
out
test
gs
mov
loop
lods
pop
adc
imul
std
mov
and
shll
mov
aam
sub
push
adc
lret
hlt
das
popl
shrl
out
repz
sbb
push
mov
xchg
mov
out
or
jae
arpl
clc
ficomps
out
shlb
insb
mov
cmp
xchg
xor
out
mov
stos
xchg
inc
adc
xchg
shr
mov
mov
arpl
cmpsl
xchg
loop
rorb
fstl
inc
cltd
or
and
inc
pushl
adc
dec
sti
push
iret
push
dec
cli
test
roll
xchg
push
lods
stc
mov
xchg
sbb
cmp
add
adc
int3
sbbl
sbb
imul
insb
mov
jnp
dec
push
in
mov
mov
and
pop
addr16
in
fwait
jo
shll
jl
adc
ss
out
jp
movsb
jae
mov
adc
ds
and
adc
and
roll
cmp
and
or
out
xor
mov
lret
ret
shl
sub
cmc
test
cmp
dec
xor
rcll
lods
lahf
mov
addr16
roll
or
inc
add
dec
xchg
xchg
and
jge
jmp
jns
xchg
ret
mov
scas
rorb
add
add
pop
cmp
fisttps
je
adc
mov
mov
push
jg
out
dec
xchg
pop
insb
cli
and
or
in
hlt
cs
sbb
xchg
sbb
shrb
movsl
jge
push
insb
mov
or
in
pop
and
xchg
loop
cmpsb
xlat
in
mov
jb
icebp
fisubrs
ja
add
add
cmp
xchg
jle
mov
mov
gs
ret
push
push
dec
cs
shll
pop
std
call
lods
inc
loopne
data16
pop
std
adc
ror
out
int
pop
dec
cwtl
fdivrl
adc
fwait
jnp
or
cltd
call
push
mov
inc
mov
cmc
jmp
dec
mov
inc
or
xor
or
xorb
inc
xor
xorl
dec
xchg
je
mov
repz
jp
inc
js
adc
mov
mov
jecxz
cmp
pushf
cmp
jle
sbb
or
sbb
fs
push
xor
push
scas
cmp
or
mov
dec
movsb
pop
push
adc
rorl
sbb
inc
call
outsb
or
insb
cmp
push
mov
mov
data16
lcall
pop
inc
adc
jmp
xchg
and
mov
jmp
sarb
stos
mov
int3
mov
sahf
loope
add
inc
or
fisttpl
cli
dec
shlb
adc
inc
fs
jecxz
adc
out
adcb
clc
add
subl
popf
mov
pushf
add
das
sahf
lcall
daa
leave
push
clc
ret
mov
loop
out
ss
in
out
push
je
pop
jmp
incl
sbb
mov
jnp
ds
adc
rcrb
std
push
sbbb
adc
sub
loop
lds
jp
push
push
popa
or
testl
xorb
stos
mov
or
js
sub
imul
jg
add
lock
jne
enter
flds
push
and
loop
and
cmp
rcrb
mov
repnz
and
push
adc
es
pop
cmp
mov
xchg
pushf
cld
subl
or
jp
sbb
sbb
shlb
shrl
stos
pop
mov
cmpsl
jg
mov
sbb
popf
int3
test
je
push
xor
ja
shll
test
push
ja
clc
mov
addr16
jg
lods
out
aam
pop
notb
subb
pusha
int3
out
push
scas
gs
or
adc
negb
sub
add
fmul
inc
std
mov
fisubrs
mov
scas
jno
lods
jnp
gs
imul
xchg
ret
cmp
xor
inc
jp
lahf
jno
movsl
push
and
fidivl
dec
add
jno
lods
push
sub
dec
out
insl
push
jae
xor
mov
mov
xor
cmp
rol
sbb
pop
mov
repz
sbb
add
cli
or
push
mov
pushf
and
shlb
xchg
push
cwtl
sarl
push
stos
add
jp
lret
push
inc
leave
enter
inc
pop
into
dec
repz
aas
or
nop
mov
sub
sub
inc
xchg
arpl
rol
ljmp
or
add
add
mov
ja
mov
jmp
xor
mov
or
sbb
mov
cmp
cmp
add
add
and
mov
and
mov
mov
mov
adc
jle
loope
aam
xchg
xorb
fcmovbe
sarl
fcoml
or
insb
add
cltd
pop
inc
push
rorb
jle
xlat
jecxz
adc
lds
mov
jo
movsb
negl
loopne
daa
and
jo
lds
mov
inc
mov
cltd
mov
lcall
adc
xlat
add
nop
xchg
jl
mov
add
dec
rcl
jge
lea
lock
push
js
lods
fildl
test
fwait
in
sbb
outsl
xor
xchg
lods
cmc
sbb
jge
lea
fisubl
mov
popf
jecxz
lods
xor
cmp
adc
inc
jnp
addr16
and
inc
scas
fwait
sub
test
lock
jg
jnp
or
lock
cli
push
pop
loope
movsl
movsl
inc
stos
push
push
or
xor
ds
mov
jb
and
lret
call
mov
cltd
cmpsl
gs
std
inc
or
adc
jae
stc
xchg
je
mov
clc
jecxz
ds
addr16
push
ja
test
ret
mov
testb
in
xchg
push
add
mov
mov
dec
lcall
jecxz
pop
and
jns
ret
push
mov
add
ret
mov
xchg
arpl
int
mov
notl
sbb
push
push
xchg
cltd
lock
add
daa
loope
fwait
cmp
push
adc
jmp
mov
cmp
xor
sub
sub
jne
xchg
enter
in
and
push
cmp
sub
cmp
mov
stos
mov
int
jmp
addb
mov
outsb
jae
mov
pop
fmuls
imul
icebp
mov
adc
or
add
pop
mov
ror
mov
in
add
clc
sub
push
fadds
sbb
nop
test
mov
pop
or
lds
xlat
cli
mov
test
cmp
enter
cmp
adc
inc
mov
addb
adc
pop
or
add
es
lcall
test
sub
nop
mov
xor
mov
add
int
adc
daa
insb
cmp
jae
loop
lret
lds
arpl
push
dec
mov
adc
jecxz
jno
cmpsl
icebp
fwait
pop
rorb
int
out
or
ljmp
jns,pt
je
jo
ret
mov
mov
out
daa
jnp
rorl
shl
repnz
push
pop
test
fdivl
les
push
enter
in
and
add
lcall
andl
int
js
aaa
popf
je
idivl
icebp
inc
movl
call
test
sbb
shrb
mov
jno
addr16
xchg
sub
adc
xor
cmpsl
dec
mov
enter
cli
ficomps
xchg
push
sahf
mov
jbe
mov
xor
sahf
movsl
gs
jecxz
rsm
loopne
bound
repz
mov
test
test
loopne
inc
xchg
mov
cmp
bound
rol
pushf
pop
xchg
xor
data16
mov
jno
mov
or
js
sub
shl
push
es
test
aad
rcrb
in
xor
or
fildl
sbb
and
into
jnp
int3
jl
and
in
sti
jle
mov
aam
imul
adc
lods
sbb
push
jae
push
cmp
jle
into
jge
cmp
lock
aad
jo
pop
mov
sarl
and
adc
cmpsl
test
mov
gs
lcall
in
scas
shrl
push
jnp
push
mov
mov
mov
aaa
mov
int
movb
test
pop
xchg
xor
xchg
cwtl
inc
xor
jmp
test
cmc
dec
ret
push
les
in
adc
push
push
js
cmc
inc
addr16
jl
cmpsb
loope
pop
pop
xor
push
sbb
pushf
fcmovb
or
inc
push
add
cmc
repnz
push
or
sahf
fmull
testb
cmpsb
or
jb
add
sbb
imul
inc
in
mov
popa
pop
ret
and
and
and
xchg
sbb
fidivrs
fmul
adc
out
test
fs
jmp
enter
cmp
sub
mov
adc
arpl
jne
push
jo
fimuls
push
sub
dec
cmc
adc
pop
out
inc
pop
test
xor
push
lock
cltd
fwait
xor
or
repnz
sbb
lds
xchg
out
sub
xchg
push
pop
jo
inc
pop
lahf
enter
dec
pop
xchg
mov
mov
cs
push
cli
mov
mov
adc
inc
and
mov
pop
pop
jbe
xor
mov
notl
xchg
push
roll
xor
sbb
andl
data16
shrb
sub
fistps
rolb
ds
orl
arpl
jnp
and
icebp
jae
ljmp
jg
and
loopne
movsb
int3
jmp
int3
adc
mov
add
mov
shrb
or
jne
cmp
xchg
sub
pop
loop
mov
jl
and
pop
ds
mov
repnz
cld
sub
push
xor
mov
cmp
adcb
dec
fidivl
sbb
stos
outsb
aad
addb
xor
sbb
scas
jns
std
shlb
cmp
dec
sbb
jge
push
repnz
fwait
imull
mov
inc
cmc
sub
hlt
xor
adcl
repz
cmp
test
lea
leave
mov
dec
xor
xchg
gs
out
and
mov
jp
mov
jb
mul
sbb
lahf
scas
aaa
mov
ret
enter
data16
jo,pn
mov
cmpsl
shlb
repz
orl
out
outsl
adc
dec
jl
lods
test
in
out
pop
movsb
arpl
dec
nop
cmpsb
pop
js
adc
repz
push
dec
jmp
and
aaa
xchg
ss
nop
paddusw
jp
bound
cwtl
into
popf
outsb
lahf
mov
pusha
xchg
and
push
sub
repnz
push
sub
jmp
gs
out
jg
out
jle
pushf
push
xchg
add
test
xchg
dec
insb
mov
jge
add
sarb
xor
inc
mov
arpl
cmp
jl
icebp
mov
push
xor
dec
jl
xchg
mov
lods
icebp
shrl
mov
and
imul
adc
jp
push
mov
lods
or
movsl
mov
push
cmpsl
mov
add
cmp
and
test
mov
ss
xor
ret
xchg
out
aad
in
imul
dec
outsl
aad
add
xor
loop
lds
and
stos
imul
push
dec
mov
imulb
or
and
mov
push
push
sbbb
sti
sbb
ss
insb
pop
js
mov
dec
insl
xorl
ja
dec
repz
mov
insl
inc
or
pop
inc
add
cmp
add
fcompl
in
mov
faddl
sub
mov
out
and
rcrb
fsubrs
mov
loop
mov
out
pop
clc
lret
les
in
pop
jle
cli
out
push
cltd
push
jmp
sbb
lods
std
lock
imul
jnp
lea
enter
add
popf
pop
push
inc
jnp
dec
pusha
loop
xchg
aas
mov
lock
stos
or
mov
dec
pop
adc
push
jb
inc
out
orl
aaa
dec
sub
mov
sarl
hlt
push
aas
adc
in
and
ffreep
pop
push
cmpb
mov
xchg
adc
jmp
pop
test
cmp
mov
jns
fs
ja
pusha
addl
cld
mov
shl
sbb
fs
pop
jns
and
popf
push
add
fdivr
sbb
mov
sar
pop
sbb
rolb
shld
jno
xor
pop
mov
jmp
pop
adc
and
out
mov
or
int3
nop
push
unpcklps
mov
dec
push
ffree
lret
inc
nop
mov
js
hlt
arpl
sar
or
in
mov
gs
mov
inc
push
mov
mov
ljmp
ljmp
mov
popa
pushf
sub
jae
inc
push
mov
data16
mov
scas
sub
push
hlt
jge
mov
std
inc
cmc
push
sti
shr
sub
sbb
in
add
aas
mov
or
push
push
shll
lock
and
das
inc
test
push
adc
dec
and
mov
adc
lar
push
std
and
jp
mov
mov
popf
inc
popa
xchg
xor
push
lret
adc
idivb
xor
clc
fsubrs
xchg
pop
and
out
adc
testl
sbb
inc
pusha
hlt
or
sti
push
pop
mov
in
push
dec
push
sbb
pop
div
js
sti
pop
ret
cmp
push
ret
rcll
sbb
pop
jae
jb
in
das
dec
mov
inc
jmp
mov
mov
or
mov
mov
into
mov
test
mov
ljmp
out
and
pop
xlat
pop
mov
sub
mov
add
pop
clc
out
test
dec
adc
lock
in
inc
cld
data16
adc
in
std
fnstcw
les
es
imul
jbe
sub
mov
xchg
xchg
aam
lahf
fisttpll
mov
int3
popf
in
xchg
cmp
mov
jg
push
push
in
stos
xor
lret
lcall
mov
out
imul
stos
and
hlt
enter
mov
and
dec
je
mov
cmpsl
dec
daa
cmpsl
ljmp
mov
mov
jno
jp
cmp
imul
jge
dec
cmp
or
incl
mov
movb
jno
jg
in
jecxz
packuswb
fs
inc
sub
insl
mov
ss
pop
push
inc
lcall
xor
pop
mov
or
mov
aas
dec
and
lods
or
inc
jecxz
mov
mov
movsb
mov
push
iret
dec
divb
lea
fstp
cmp
leave
sub
lcall
mov
orl
flds
aas
lea
orb
jg
jge
mov
cmpsb
jg
shl
and
outsb
dec
mov
and
push
cmp
dec
bound
mov
in
scas
call
mov
inc
mov
cmc
xor
jo
push
je
push
lret
jmp
test
lds
in
or
xlat
sbb
jae
addr16
pop
push
imul
mov
jecxz
add
jge
dec
xor
sbb
leave
jge
cmp
mov
xor
dec
add
push
fxch
push
imul
pop
das
jns
mov
jmp
cmp
pop
test
and
cmpsl
mov
lret
outsl
sbb
cmc
adc
lcall
mov
in
out
inc
pop
aas
lret
xor
mov
jle
mov
pop
sbb
sub
in
cld
fildll
sbb
les
je
mov
test
cmpsl
mov
push
out
pop
adc
cltd
scas
aam
aas
push
adc
jg
mov
inc
inc
mov
out
sbb
jmp
mov
iret
shl
popa
addb
js
or
ret
jmp
push
test
rcrl
jno
xchg
bound
push
pop
pop
pushw
vcvttsd2si
fstps
out
xor
cmp
xchg
mov
adc
int
lahf
cmp
dec
xor
ficompl
jo
notb
sbb
and
cmpsb
dec
xor
stos
push
push
fdivrp
sub
fdivrs
iret
decl
ljmp
push
int3
faddl
bound
adc
mov
lahf
push
xchg
pop
adc
sbb
and
mov
xchg
inc
and
jno
jmp
dec
inc
notl
or
jle
mov
or
jno
push
mov
cmp
mov
xchg
call
jp
xlat
int3
xchg
mov
fcompl
adc
mov
or
ret
ljmp
push
lock
jne
adc
sarl
jle
xor
lret
int3
jbe
test
and
mov
dec
in
aas
fidivs
xchg
test
jns
pop
int
xchg
cmc
bound
xor
fcmovu
sbb
not
or
adc
out
ss
in
jecxz
pop
xorb
jg
in
sub
insb
hlt
arpl
in
stc
cmp
sahf
mov
lods
dec
pop
mov
lock
lea
pop
pop
mov
decl
rol
lahf
pop
aad
inc
loope
xchg
nop
ja
in
xchg
adc
sbb
dec
fidivrs
pusha
enter
adc
test
dec
push
leave
xchg
xchg
or
mov
jbe
ret
dec
xchg
dec
lds
mov
and
push
ficoms
lock
mov
std
shl
shll
sub
mov
pop
add
test
in
ror
push
icebp
sub
or
dec
adc
out
inc
mov
sbbb
nop
mov
jae
add
out
push
pop
bt
int3
pop
push
add
es
xchg
ret
sub
xor
mov
add
in
movsl
sub
in
cmp
xor
out
push
fs
loop
ljmp
mov
add
push
popa
jmp
icebp
add
xor
lods
popa
xchg
and
inc
in
sub
xchg
mov
dec
sarl
push
cmp
sbb
xchg
inc
lods
movsl
mov
mov
movsb
jl
cmp
lock
xchg
ficoms
add
aam
lret
mov
popf
je
cli
scas
mov
and
das
jecxz
ja
or
aad
out
add
loopne
popf
and
sbb
sub
out
lahf
test
test
roll
movsb
cmc
jae
mov
pop
mov
cmp
xchg
dec
add
mov
loopne
lea
mov
shrb
sub
jecxz
or
mov
mov
and
push
outsb
xor
popl
je
jnp
sbb
cmp
jmp
pushf
push
sahf
imul
push
pop
outsb
cwtl
iret
inc
mov
or
cmp
es
in
rclb
rcll
insl
mov
dec
jp
push
sbb
push
lret
stos
pushf
es
or
into
clc
mov
pusha
inc
pop
pushl
add
add
clc
stc
movsl
insl
in
jns
fsubrs
mov
ret
mov
pop
or
sahf
andl
insb
cmp
xchg
lret
aad
les
add
adc
dec
ljmp
adc
shlb
roll
loop
inc
cmpsb
out
push
insl
lds
outsl
imul
aas
xchg
cwtl
push
cmp
push
or
in
jle
or
jecxz
jl
lock
rolb
xchg
xlat
mov
rorb
xor
jae
sub
sub
repnz
je
jo
scas
cltd
xchg
dec
xchg
mov
mov
into
pop
and
jno
adc
or
cmc
lock
aaa
cmp
mov
adc
add
int3
push
ja
sbb
test
les
shrl
cmp
mov
adc
cmp
imul
fistpll
lahf
addr16
popf
inc
pop
mov
fdivrl
rcll
in
out
jg
add
and
xlat
lds
in
mov
push
addr16
adc
cli
mov
adc
jp
repnz
jle
loopne
test
xor
jb
repnz
sub
xchg
mov
scas
jbe
insl
lcall
pushf
dec
xor
jmp
addb
fstpt
mov
stc
xchg
jnp
mov
push
jnp
mov
cs
jg
jno
add
cld
push
and
pop
mov
jecxz
jmp
sbb
adc
addr16
and
rolb
ja
sbb
arpl
dec
scas
test
xchg
mov
mov
mov
hlt
int
dec
xchg
and
loopne
mov
lods
push
fnstenv
ds
pop
lds
pop
data16
jne
xchg
cmp
push
scas
mov
jecxz
fsubl
xchg
ss
testb
cmc
dec
push
shll
pop
lahf
fisubs
mov
clc
fdivrl
addr16
sti
std
xor
pop
out
xor
cmp
je
rcrw
rcrl
mov
pop
stc
adc
mov
popf
fsts
push
inc
mov
fcom
push
cwtl
cmp
sub
ds
lcall
mov
ss
mov
adc
movsl
shrl
mov
sbb
and
sub
daa
outsb
mov
mov
popa
jns
sub
aaa
out
addl
ret
mov
sub
dec
mov
jae
sub
jbe
jp
lahf
fists
mov
ljmp
fbstp
bound
adc
mov
loop
cmpl
xlat
fiaddl
loopne
mov
aas
push
jle
xchg
les
pop
xchg
outsb
jl
cmp
jne
cltd
scas
lock
ljmp
aam
rclb
xor
sub
addl
xor
inc
mov
lret
cld
ja
adc
stc
mov
inc
jbe
or
push
mov
imul
sub
lods
inc
fsubs
dec
xchg
cmp
push
jae
pop
cmc
fdivrl
hlt
xor
mov
push
or
jecxz
sub
ds
mov
frstor
cmp
int
ret
mov
push
jo
fs
push
fistl
and
mov
sti
jge
cld
pushf
mov
nop
pop
pop
repz
push
and
pop
in
add
inc
pop
and
jp
jecxz
jecxz
dec
fcmovne
pop
sub
mov
push
std
or
jae
push
outsb
jp
jmp
sbb
and
lret
push
pop
in
into
cltd
add
xor
js
mov
jnp
int
lea
or
sub
adc
mov
mov
ja
fists
mov
fldenv
and
das
cli
xorb
adcl
loop
aad
pushf
push
cmp
out
stc
push
in
inc
scas
out
popa
sahf
jecxz
std
iret
aaa
nop
ja
jno
xor
mov
mov
test
sbb
imulb
and
xor
fbstp
push
jmp
xorb
push
pop
jmp
xor
in
into
imul
add
fidivrl
in
testb
mov
mov
mov
inc
inc
mov
popf
cmc
loop
jge
or
imul
jmp
mov
xor
and
cli
push
pop
mov
inc
repz
iret
das
outsl
inc
nop
sahf
pusha
inc
fucomip
fstps
cld
lret
movb
out
pushf
fwait
sahf
ljmp
pop
ror
mov
lock
lock
pop
inc
int3
in
cmc
data16
pop
popa
mov
mov
mov
or
das
mov
scas
loop
xchg
pop
in
jbe
push
shrl
dec
add
mov
mov
dec
cs
lods
ss
or
dec
out
std
leave
cmp
jecxz
adc
or
mov
call
jecxz
dec
aad
in
add
mov
inc
pusha
mov
movsb
sub
in
and
faddp
mov
outsb
lds
adc
lcall
shll
pop
mov
aas
mov
fsts
sub
insl
iret
out
ds
mov
xchg
xchg
clc
fsubl
xor
xchg
jns
mov
popf
clc
leave
xor
pop
es
leave
xor
adc
adc
push
sub
lods
mov
stos
add
je
inc
scas
sub
mov
xor
stos
push
adc
inc
lock
mov
std
mov
xchg
ffreep
dec
adc
jge
xor
adc
cmp
in
stos
dec
jl
adc
pop
pushf
aas
aad
mov
or
ds
insb
stc
fwait
pusha
cmp
mov
rolb
add
inc
test
push
lcall
jecxz
jg
pop
cmp
sub
shl
sbb
lcall
cmp
adc
jmp
mov
les
inc
add
pop
idivl
fs
jge
dec
mov
lods
or
ss
jnp
into
mov
xchg
mov
push
pop
js
jnp
xor
fs
push
xor
es
in
inc
rorb
sbb
je
into
sarb
icebp
stos
fsubr
xor
jg
pop
cmpsl
out
bnd
dec
orl
pop
and
pop
dec
ffree
aas
mov
xchg
inc
roll
stos
pop
movsb
call
sub
cmpsl
popl
pop
adc
subb
push
rcrb
test
ja
cmp
bound
mov
sbb
mov
or
sahf
pop
test
cmp
stos
aas
sbb
jae
fnstcw
xchg
push
jp
lcall
jge
icebp
lds
out
test
das
stos
test
xor
mov
iret
push
jmp
nop
xor
inc
push
push
or
inc
ds
dec
stos
xchg
fstl
test
jmp
in
mov
bound
test
test
cmp
rolb
movsl
ds
push
or
arpl
cltd
sahf
loop
ja
adc
sub
ss
mov
push
xchg
ja
sbb
jb
mov
cs
outsl
lcall
mov
cmp
cmp
bound
xor
pop
insl
fldenv
loop
sbb
shl
mov
mov
and
loope
ljmp
das
pop
pop
outsl
je
cmp
mov
xor
mov
repz
push
fldl
sbb
mov
nop
push
xor
push
add
imul
jl
leave
pop
mov
sub
imul
jne
mov
pop
loopne
jno
add
pop
cwtl
or
inc
cmp
dec
xchg
push
pcmpgtw
not
sub
sbb
lock
jae
cmp
enter
lock
int3
jg
inc
pop
add
jle
adc
cmp
hlt
sub
int3
jecxz
dec
push
lea
cmp
pop
mov
shlb
jno
fidivrs
lds
jno
repnz
mov
faddl
mov
mov
scas
into
xchg
in
scas
out
mov
ljmp
pop
dec
jmp
les
aaa
mov
sbb
fs
jns
mov
mov
push
hlt
scas
xchg
cmp
les
xchg
lds
jge
xchg
out
out
divb
shll
xchg
data16
push
movb
cmpsl
or
push
or
xchg
mov
mov
scas
adc
xchg
sbb
int3
or
fdivr
dec
mov
dec
js
sub
jl
mov
in
sbb
out
adc
or
test
push
fsubr
pop
add
and
mov
sub
out
fiaddl
mov
insl
in
jae
rcr
inc
jmp
inc
popf
inc
mov
or
movsb
cld
loopne
adc
sub
sbb
xchg
mov
fcomps
subb
scas
push
pop
mov
inc
lods
pop
mov
sbb
mov
dec
add
stc
push
adc
aas
jg
lds
out
mov
std
mov
xchg
mov
dec
orb
pop
arpl
sbb
dec
jp
fists
fsub
dec
test
das
insl
and
cmpsb
jbe
or
aaa
dec
mov
push
daa
pop
jmp
out
or
dec
in
test
add
in
lock
out
mov
push
inc
fidivrl
mov
ficoms
repz
pop
xchg
rol
dec
inc
inc
loope
adc
adc
je
cmp
xor
push
pop
mov
sbb
xchg
xchg
jae
mov
int3
push
sbb
cltd
cmpsl
sahf
sub
gs
aas
xchg
lret
subl
inc
jae
pop
jno
sub
inc
das
jge
dec
repz
add
xchg
xchg
les
loop
mov
xor
mov
out
push
jo
int3
adc
ja
movsl
mov
fs
inc
or
pushf
cmp
sbb
bound
jle
jb
imul
clc
adc
sbb
mov
dec
ss
push
add
dec
adc
sub
imul
pop
in
or
dec
mov
mov
xor
inc
mov
bound
push
mov
iret
jg
xchg
out
dec
repnz
inc
mov
xlat
xchg
in
pop
test
xchg
ficoml
pop
add
mov
jecxz
loopne
jae
int
cmp
in
inc
adc
incl
cli
inc
xchg
sub
stc
push
jmp
aaa
fistl
mov
push
rcrb
sbb
cmp
dec
sti
adc
xchg
push
dec
call
lea
add
mov
push
cmp
fidivl
pop
mov
mov
and
xor
cmp
push
inc
push
adc
outsl
imul
mov
mov
jmp
loop
dec
cmpsb
mov
mov
mov
arpl
xchg
pop
sahf
stos
test
xchg
jnp
sub
cmp
mov
stos
cwtl
dec
adc
cmp
lods
stos
jb
mov
pop
mov
push
dec
ret
sbb
les
shlb
rcrb
sbb
popa
pop
orl
loope
mov
xchg
inc
jge
leave
ss
jge
lahf
jbe
fs
stos
mov
lea
push
mull
push
mov
mov
add
cmp
or
xchg
xchg
dec
inc
add
out
bound
mov
loop
cs
mov
sub
sub
insb
pop
pop
mov
mov
push
push
mov
adc
xchg
lods
push
push
sub
cwtl
int3
je
or
pop
pop
inc
add
sub
and
jle
lea
and
push
or
in
subb
jmp
push
insb
pop
xor
test
ljmp
dec
sbb
fdivrs
and
fildl
mov
xor
mov
jae
jno
je
mov
lods
movsb
scas
sub
lods
jns
pop
sbbl
int
or
mov
and
dec
jg
xchg
xor
xchg
pop
push
lret
stos
outsb
jmp
xchg
jno
addl
inc
mov
ficompl
mov
pop
dec
ret
xor
push
call
xor
je
loop
mov
mov
ret
int3
cmp
adc
pop
push
jecxz
jns
sbb
popa
icebp
xchg
cld
sbb
and
mov
sub
enter
mov
stos
std
jg
out
add
jge
fcmovnb
push
dec
mov
xchg
clc
dec
or
icebp
jle
xorl
mov
jp
scas
test
call
cmp
fmuls
mov
sbb
xchg
dec
jl
je
mov
fwait
jecxz
in
xchg
cmpsl
pop
fsubr
mov
cmpsb
xor
mov
mov
and
imul
aad
insb
pushf
out
cmp
xchg
sbb
outsb
ret
inc
stos
popfw
sbb
aad
psrld
dec
stc
xor
pop
stc
mov
jmp
js
rcl
mov
mov
xor
and
sbb
mov
stc
sub
test
push
sub
lock
add
call
sti
xor
cmp
dec
ja
dec
and
sti
adc
add
call
clc
cli
mov
push
ljmp
lahf
imul
cmpsb
daa
adc
mov
mov
std
mov
adc
rol
xchg
sub
inc
andl
arpl
push
insl
imul
adc
or
out
xchg
sbb
xchg
push
pop
test
cmp
sbb
push
xchg
in
loopne
jmp
jb
push
fcmovu
or
call
inc
add
and
xor
fsubs
cwtl
sbb
xor
mov
pushl
out
sarl
popf
data16
gs
push
fidivrl
gs
vmovaps
push
push
aam
mov
scas
push
adc
lret
insl
out
dec
pop
xchg
in
sub
into
nop
test
push
push
out
jmp
in
cmpsl
add
inc
jno
sub
shlb
mov
jecxz
lods
add
or
shrb
adc
add
fucomip
sbb
sub
mov
cmp
sub
mov
jl
call
int
loop
call
arpl
cmp
adc
rcr
inc
fcmovnb
adc
lea
jge
ljmp
add
inc
aas
fcomps
outsb
movsl
cmp
jno
xlat
movb
scas
rcrb
pop
fstps
xor
imul
pop
scas
adc
or
bnd
mov
pop
jo
xchg
sub
shl
nop
mov
movsb
adc
cltd
cltd
les
push
jno
pop
imul
icebp
add
pop
pop
aaa
sub
dec
dec
ljmp
icebp
rorb
pop
fldcw
push
aas
cld
adc
popa
xlat
dec
push
mov
jnp
cltd
fsts
loope
hlt
movsl
cmp
rcrl
decb
sub
cmp
pop
insl
iret
push
lahf
ret
cld
mov
pop
sub
jb
inc
dec
sub
or
push
daa
fidivs
jge
clc
in
sub
add
mov
xor
push
sbb
or
inc
shr
sbb
dec
pop
cmp
rcrl
mov
xchg
pop
dec
pop
lcall
push
sbb
fadd
inc
sub
mov
mov
add
sbb
sahf
insl
inc
ret
add
jno
fistpl
stos
pop
mov
movsl
loope
jae
lock
fsubs
leave
out
out
data16
push
in
adc
icebp
imul
into
push
pop
ficomps
or
mov
lret
xor
adc
and
movntq
aas
mov
rcll
dec
cmp
cmp
mov
push
or
push
xorb
imul
jmp
dec
push
adc
leave
cmpsl
inc
add
mov
lods
add
mov
pushf
repz
fstps
xor
adc
sub
jo
arpl
sbb
shrb
or
ret
xchg
xor
lret
pushf
add
jo
push
mov
mov
mov
inc
jne
pop
mov
sti
in
loopne
sub
sbbl
loop
xchg
push
fldenv
push
jne
sbb
rcll
mov
push
fstps
adc
movsl
fisubrs
xchg
test
movsl
mov
inc
jno
shrl
sub
test
mov
sbbl
leave
call
popf
pop
jecxz
inc
and
and
push
push
in
adc
sub
dec
push
cld
dec
xor
imul
xor
fsub
mov
in
inc
ficoml
test
mov
jae
js
xchg
or
popa
lds
scas
xchg
out
pop
xor
xor
jp
xor
mov
setns
in
pusha
sub
fstps
data16
xor
adc
fistl
faddl
loop
fsubp
xchg
push
jne
mov
push
inc
out
push
pushf
aam
mov
sahf
pushf
adc
fwait
or
dec
rcr
cs
sub
sbb
imul
jge
test
push
inc
insl
in
fsubrl
adc
outsb
testb
xchg
cmpsl
add
and
lea
xchg
mov
aad
stos
js
daa
orl
outsb
cli
cmc
dec
xchg
jb
mov
idiv
xchg
xchg
not
dec
push
or
mov
jb
push
scas
adc
push
insb
xchg
lahf
iret
mov
fst
sub
pop
fwait
jmp
adc
cmc
jnp
repz
cmpsl
mov
iret
js
inc
pop
adc
jnp
dec
cmp
loopne
addr16
sti
push
dec
cmpsl
add
inc
in
cmp
lds
mov
test
add
mov
test
jg
mov
sub
mov
lahf
mov
jo
lock
jno
arpl
rcll
xor
or
adc
dec
pusha
push
rorl
cmc
ficompl
cmp
or
xchg
adc
cmp
sahf
mov
jle
push
and
mov
shll
movsl
pop
jp
mov
pop
outsb
and
push
and
or
movsl
imul
jg
pop
add
adc
lahf
and
mov
stos
in
add
sub
loopne
test
outsb
pop
fs
pop
push
mov
lea
mov
pop
mov
dec
pop
and
dec
jg
mov
mov
sbbl
xchg
push
aaa
test
xchg
shr
enter
add
sub
ret
lods
test
les
lcall
lock
imul
cmc
adc
xchg
lods
inc
mov
mov
lahf
add
loopne
call
bound
ret
xchg
mov
in
pop
sti
ljmp
dec
inc
jae
push
sahf
mov
jo
mov
adc
pop
les
xor
xchg
inc
or
dec
pusha
jns
dec
mov
arpl
mov
je
mov
push
fwait
dec
sbb
call
int
push
push
jo
mov
aam
jbe
popf
mov
mov
push
or
jnp
iret
push
fmull
jg
inc
inc
xchg
repz
lds
repz
cwtl
add
mov
call
push
push
fs
test
jecxz
jle
mov
jnp
cli
add
leave
push
sbb
dec
mov
jne
sti
or
test
adc
cmp
ss
lods
roll
addps
xchg
dec
les
aad
dec
jne
xchg
ret
cmp
inc
mov
int
int
pop
jg
notb
dec
test
xchg
mov
jo
lcall
lcall
pop
pop
jl
dec
sti
jno
or
sarb
out
leave
jbe
or
adc
xor
sub
pop
mov
sbb
sbb
mov
ja
nop
cmp
shlb
cmp
pop
shlb
movsl
xor
adc
push
or
lcall
icebp
and
jecxz
incb
daa
mov
test
jae
mov
iret
and
inc
aaa
add
call
adc
push
fs
xor
mov
pop
pcmpgtw
pop
jae
xor
xchg
or
and
xor
adc
dec
dec
dec
cs
in
hlt
or
popf
or
pop
push
je
push
mov
movups
faddp
mov
mov
inc
js
jmp
or
pusha
cmp
popa
fs
jmp
das
fwait
xchg
cmp
and
sub
pop
shlb
add
adc
out
pushf
or
xchg
popf
jp
repnz
in
mov
and
out
in
pushf
cmp
mov
push
adc
sbb
sub
cmp
scas
and
test
iret
data16
imul
sbb
pop
dec
movsb
inc
inc
test
cmp
adc
add
and
dec
jbe
ret
iret
popf
inc
cmp
fimull
add
cmp
pop
ret
shlb
incl
sbb
mov
int
out
push
cmp
mov
outsl
push
test
push
lods
nop
jecxz
insl
adc
xchg
or
push
mov
inc
sahf
das
mov
push
icebp
dec
aad
push
or
imul
adc
cmp
clc
adc
mov
add
int
jg
or
push
and
into
cmp
bound
lds
jno
aaa
nop
inc
dec
fstps
lret
jbe
jl
in
insl
cwtl
sarl
or
push
enter
xchg
or
enter
out
mov
lods
xchg
leave
add
adc
push
xchg
fstps
bound
shr
adc
addr16
xor
fnsave
mov
xchg
sub
das
push
add
sbb
mov
and
call
inc
push
icebp
sub
std
loop
mov
xchg
fstpl
cmp
cmp
stos
xchg
push
or
scas
out
scas
lret
cmp
xlat
and
pop
icebp
ret
int3
hlt
les
rcll
lods
xorb
loop
inc
ljmp
jns
pusha
inc
pop
insb
sbb
or
jg
jge
inc
mov
rcrl
enter
in
int3
je
out
pop
pop
cmpb
lret
pop
sbb
es
fsubr
out
add
inc
jmp
icebp
sbb
mov
or
or
mov
scas
pop
inc
xchg
lret
sbbb
mov
mov
push
inc
xchg
scas
ret
cmc
jo
fbstp
cli
int
lods
fsubrl
mov
out
data16
imul
jmp
mov
push
jp
int
mov
inc
fsub
cli
cmp
mov
cmp
mov
loope
insb
imull
xor
aam
push
aaa
out
lahf
lds
ljmp
jmp
mov
cld
jmp
xor
jae
fisttpll
push
cmp
jns
dec
jl
mov
inc
fmul
stos
jae
push
cld
push
xchg
lret
call
mov
cmc
enter
xor
mov
addr16
inc
ror
ja
mov
repnz
je
mov
pop
or
push
mov
jg
ret
int3
mov
add
cmp
pushf
inc
lret
movsb
and
adc
push
lcall
cld
cmp
adc
sbb
ret
add
mov
in
xor
arpl
mov
js
aas
mov
imul
out
mov
subl
xor
sahf
xchg
push
adc
fiadds
pop
dec
ss
push
pop
mov
pop
or
testl
lret
insl
mov
inc
shlb
mov
fisubrl
sbb
inc
call
lcall
jnp
jb
test
mov
pop
and
mov
push
fdivs
repz
cmc
sub
sub
lds
imul
pop
jbe
call
pop
loope
pop
mov
lret
repz
xorb
fildll
je
xchg
pop
add
in
ficoml
insb
mov
scas
mov
adc
xor
cwtl
fdiv
pop
cmc
xor
out
mov
mov
lods
and
sahf
popa
add
fldl
jne
dec
flds
test
in
in
rcl
pop
sahf
ja
add
mov
hlt
jmp
mov
pop
lcall
push
loop
mov
jae
or
add
adc
push
mov
icebp
scas
subl
test
cli
push
call
cmpsb
imul
dec
scas
cmpsb
lahf
cltd
cmp
in
mov
xchg
mov
pop
mov
outsl
insb
or
fcoml
push
push
pop
out
nop
leave
and
sbb
adc
add
jmp
mov
sahf
mov
sub
pop
lods
cltd
add
xor
call
scas
outsl
cmc
cmp
pop
mov
xchg
fdivl
std
adc
sahf
pop
jns
dec
jmp
xor
lds
inc
or
and
mov
stos
incl
xor
aam
add
test
mov
add
xor
mov
add
add
in
sub
cwtl
repnz
mov
into
loope
cwtl
cmpsl
adc
lock
std
sbb
es
subl
sbb
in
inc
lret
cmpsl
movsl
adc
mov
std
adc
mov
das
inc
or
mov
push
lahf
out
sub
xchg
push
mov
mov
shr
fistpll
sub
mov
mov
mov
addl
push
push
xchg
fsubl
and
fldcw
sbb
mov
or
xor
xor
movsl
aam
jnp
imulb
xchg
mov
shrb
ret
inc
outsb
or
or
roll
xor
daa
mulb
sbb
push
adc
mov
insl
aam
xchg
push
in
lds
mov
stos
sti
jl
sub
inc
clc
xorl
into
stos
cmpsl
cmpsb
outsl
movsb
push
imul
cmp
push
fs
push
imul
dec
mov
xchg
loop
test
mov
cmc
fwait
enter
mov
cltd
shll
push
cmp
sti
adc
xchg
test
sub
inc
leave
fsubrp
insb
and
jmp
insb
lea
inc
pop
lcall
and
test
xchg
cwtl
mov
sbb
or
add
iret
pop
cmp
ss
vphsubwd
stos
jnp
lods
mov
aaa
enter
bound
in
inc
ret
sub
jb
out
push
sbbb
out
adc
cmc
sub
loopne
je
aaa
repz
or
repnz
sub
repz
lret
mov
out
inc
fcomi
sbb
adc
das
das
aas
repz
fwait
mov
adc
repnz
cwtl
add
adc
xchg
mov
xchg
pop
fdiv
jne
fidivrs
lods
add
lahf
mov
aas
or
xchg
mov
stos
lods
ja
aaa
cmp
sahf
out
gs
sub
cmp
sarl
test
add
adc
xchg
xchg
repz
or
xchg
mov
xor
jl
dec
test
shrb
sbb
mov
and
loopne
pop
dec
data16
fucom
sbb
push
je
jmp
in
pop
dec
lods
dec
jbe
pop
rcrb
lock
and
xchg
pop
mov
sbb
and
push
sbb
fs
cld
xor
pushf
add
cli
push
xchg
pop
jb
aad
inc
cli
out
mov
inc
xchg
imul
jo
and
ljmp
pop
ljmp
outsl
in
and
in
sarb
mov
mov
dec
test
cwtl
aad
jae
pop
or
in
jbe
leave
jg
repnz
mov
jmp
imul
or
jb
gs
dec
add
sarl
add
into
mov
stos
add
mov
or
add
mov
addr16
aaa
add
shlb
jle
mov
mov
cs
stos
into
pop
ja
and
rcrl
fstl
xchg
xchg
sbb
out
ja
adc
out
mov
adc
push
lds
lahf
sahf
push
xchg
add
mov
in
xor
lcall
in
fmuls
in
and
ja,pn
repnz
xor
pop
scas
adc
les
outsl
mov
fildll
iret
xor
xchg
or
add
fidivrl
jbe
iret
fpatan
push
pop
jne
or
jae
out
cmpsl
stos
or
outsb
ljmp
lods
cmpsb
xor
shl
and
bound
call
ret
out
dec
xchg
out
or
push
ret
mov
add
popf
dec
or
dec
popa
inc
add
add
movsb
jb
add
cmp
mov
adc
pop
dec
testl
idivb
popf
imul
xchg
xchg
addr16
leave
imul
jnp
lret
xchg
mov
jae
cmp
lret
aam
push
inc
out
ss
jnp
repnz
movsb
pop
inc
jl
addr16
and
js
xchg
sub
gs
xor
cmp
inc
ljmp
pop
sti
add
sbb
inc
sbb
inc
loope
xchg
arpl
cmp
stc
add
loope
and
fs
add
adc
mov
jnp
addr16
pop
adc
pop
cmpsl
mov
dec
mov
divb
dec
into
imul
push
and
incl
inc
xor
test
lods
or
loope
adc
xchg
data16
pop
mov
mov
xchg
push
mov
lahf
mov
shll
out
adc
mov
scas
mov
scas
iret
mov
pmaddwd
out
push
sub
in
push
mov
mov
sarl
adc
lock
aad
mov
pop
jmp
jecxz
sbb
pop
sbb
lods
jge
xchg
jmp
lret
mov
mov
cmpsl
mov
imul
push
cmp
push
enter
in
mov
jns
xor
or
ret
push
sahf
adc
mov
fisttpl
ja
stc
stos
adcb
and
add
stos
dec
adc
xchg
outsb
mov
mov
js
test
ret
sub
and
jle
inc
scas
cmpsl
sti
adc
leave
cmp
imul
pusha
shlb
notl
cmp
imull
adc
adc
mov
ret
ss
and
mov
mov
xchg
adc
loope
push
push
inc
add
cmp
inc
mov
call
and
lret
sbb
xlat
sti
xor
add
sub
testl
sub
movsb
movsl
push
sub
mov
lret
xlat
mov
cltd
push
dec
adc
fmull
rcrb
aad
xchg
out
sbb
bound
in
sub
mov
fs
loopne
mov
dec
out
outsl
mov
sar
fs
repnz
mov
and
dec
insb
xchg
lret
add
popf
mov
test
cs
or
adc
shrl
insb
dec
cmp
mov
inc
pop
in
mov
jmp
lds
rolb
into
in
xor
push
outsl
repz
jnp
mov
out
pop
leave
jae
iret
stos
add
mov
dec
sub
xchg
orl
lahf
push
rcrb
jne
fdiv
xchg
inc
ds
pop
push
insl
jnp
iret
pushf
es
and
jmp
int3
sti
cmp
sbb
lods
stos
jg
inc
shl
xchg
and
cmpsl
pop
mov
insb
jl
and
jns
push
pop
sbb
ja
mov
xchg
notb
pop
out
push
aas
or
cld
test
fisttps
pop
loopne
inc
pop
sbb
xchg
lods
dec
in
jecxz
ja
or
push
cmp
stos
popa
cs
mov
addr16
xor
mov
lahf
test
cmp
push
cld
jns
pop
sub
in
std
insl
xchg
test
cmpsb
xor
jb
push
add
xor
aam
std
lods
jp
jne
fimuls
divb
repz
add
jle
add
shl
std
pop
xchg
lds
pop
jl
leave
andb
and
fiadds
fwait
xchg
addr16
sti
insl
fwait
jne
sbb
push
repnz
int
lock
fldt
pusha
test
daa
push
sub
jge
push
mov
je
icebp
dec
pop
addr16
and
jb
pop
leave
cmp
fmulp
outsb
iret
cmpl
arpl
adc
fcomi
xchg
jne
mov
mov
cmpsl
pop
xor
xchg
es
dec
pop
jbe
push
cmp
lods
pop
xor
sbb
je
xor
cmp
fiaddl
mov
movsl
jge
xchg
sbb
lods
into
add
dec
mov
mov
inc
pop
cmpsb
rcl
std
sub
sbb
in
out
out
push
mov
sub
filds
pop
sbb
fsave
iret
out
xchg
xor
cwtl
push
cmc
xchg
xor
xor
dec
jmp
xor
jns
dec
inc
xchg
xchg
mov
iret
xorb
xchg
xchg
test
cmp
sahf
inc
popf
push
std
in
fmuls
das
and
inc
sti
pop
stos
pop
dec
mov
enter
cwtl
pminsw
arpl
adc
mov
xchg
adc
and
clc
lret
pop
repz
cltd
mov
notl
idiv
xor
or
leave
dec
mov
ljmp
rcrb
jp
push
mov
xchg
jae
xchg
paddsb
adc
mov
mov
push
push
xor
cmp
gs
aas
push
mov
data16
js
imul
xchg
sub
repz
push
lods
jle
mov
imulb
xlat
xchg
fs
scas
aad
je
imul
xchg
xor
daa
je
add
add
fisubs
out
adc
ficoms
push
stc
insb
push
pop
inc
jns,pn
dec
adc
dec
xlat
jo
outsb
mov
sbb
fiadds
pop
sub
shrb
add
adc
mov
mov
hlt
icebp
push
cmp
negb
nop
xchg
out
hlt
mov
xchg
mov
xor
shlb
mov
jge
inc
jne
cmpsb
jbe
js
adc
mov
and
adc
daa
icebp
lods
jecxz
imul
mov
popf
dec
cmpsb
testb
lea
pop
je
fcompl
pop
mov
jg
pop
loop
popf
sub
pop
jg
stos
or
adc
out
lods
dec
pop
sub
inc
add
jb
lock
pop
imul
notb
mov
subw
inc
dec
ds
mov
dec
lods
cmc
in
and
xor
gs
mov
xor
xchg
cmp
mov
add
push
testl
out
pushf
mov
mov
xor
arpl
out
or
and
cld
loope
fisubrs
dec
test
inc
sub
sbb
fs
insb
adc
fwait
mov
pop
fiadds
movsb
and
lds
stos
ret
or
cmpb
push
xor
mov
icebp
lods
into
std
jg
icebp
push
mov
aad
jmp
sbb
inc
jmp
or
and
pop
shll
pop
iret
mov
mov
rorl
loope
fidivrs
roll
mov
scas
outsb
dec
xchg
in
dec
dec
fidivrl
test
mov
rorl
sahf
or
inc
xor
repz
in
xchg
xchg
pop
stc
arpl
dec
fcmovb
push
and
mov
push
mov
es
dec
jnp
les
mov
mov
ss
push
aam
int
dec
test
mov
dec
dec
and
mov
add
xchg
add
shlb
mov
ja
lods
cltd
in
jno
push
das
mov
mov
fadds
pop
scas
xchg
test
xchg
pushf
sub
and
gs
subb
leave
pushf
test
movl
test
jmp
scas
in
sbb
cvtdq2ps
mov
outsl
shlb
popf
aaa
stos
js
cmpsb
imul
dec
pop
sbb
ss
lret
andl
dec
aam
and
mov
jl
cltd
dec
repnz
xchg
fsub
push
movsb
sub
cmp
push
test
xchg
lret
xchg
fcomi
out
shrl
out
bound
xlat
test
std
sub
mov
add
test
xor
cli
add
cmpsb
pop
cmp
mov
pop
and
xlat
cmp
cmpsl
xchg
cld
scas
loope
movsb
xor
outsl
pop
fs
xchg
jge
scas
cli
mov
scas
sbb
mov
les
call
shl
into
and
or
inc
xor
mov
std
or
inc
adc
cmpsl
cs
mov
cmpsl
fidivrl
push
add
adc
fildl
mov
push
ljmp
cs
xor
xstore-rng
cmpsl
xchg
test
hlt
lahf
mov
stc
stos
cmc
xor
cmp
xchg
sub
adc
adc
daa
xlat
add
sbb
push
imul
xchg
lds
and
lock
push
jmp
test
xor
xor
lahf
mov
sahf
popf
lret
mov
xchg
pusha
loope
call
idivb
outsb
in
enter
stos
xchg
int
cmp
fwait
sub
les
nop
jo
pop
pop
xor
cmpsb
xchg
pop
jae,pt
cmp
fcom
and
adc
sub
jbe
aaa
xchg
or
jmp
or
push
cld
cmp
mov
fmull
inc
fisubl
jl
push
mov
mov
and
iret
aad
js
push
pop
cmpsl
sahf
jno
jns
mov
pop
test
xchg
jb
sub
out
scas
dec
sub
add
imul
out
push
sub
into
mov
xchg
sbb
inc
lret
xor
mov
loopne
out
mov
xchg
dec
xor
or
loope
test
test
xor
xchg
sub
out
out
or
sbb
or
dec
mov
cmp
mov
rcll
icebp
movsb
mov
jo
fists
inc
xor
decl
add
dec
ret
push
loope
ret
out
or
mov
rol
jecxz
lods
pop
bound
in
jne
shl
mov
out
cld
psubusw
xlat
or
imul
sbb
imul
rolb
sbb
cli
rcr
hlt
pop
mov
push
mov
cmc
sbb
enter
arpl
mov
xor
push
scas
inc
sti
js
loopne
xor
push
jne
sti
jle
add
and
and
push
ret
jmp
inc
pop
or
push
pop
aam
loopne
jp
mov
hlt
sub
rolb
cmp
pop
mov
or
xor
das
jge
mov
mov
mulb
mov
lea
rorl
pop
test
loope
adc
aam
push
sbb
sarl
pop
xchg
enter
pop
pop
dec
or
jnp
sbb
push
cmc
adc
insl
dec
inc
neg
fadd
repz
or
das
jecxz
sub
sbb
inc
push
cltd
add
ficomps
js
sbb
dec
inc
inc
pop
insl
cld
jle
cwtl
cld
push
dec
push
inc
sub
out
mov
test
mov
mov
fwait
mov
pop
sub
pop
sar
push
out
sbb
loop,pt
rcrl
rcrl
ret
ljmp
das
jmp
jl
aas
popa
jae
testb
dec
arpl
dec
cmp
cmp
test
mov
sbb
leave
and
lret
outsl
inc
xchg
dec
lock
push
jbe
out
fisttps
jecxz
xor
fsub
xor
jae
stos
mov
mov
pop
push
imul
push
sub
mov
mov
add
movsb
cwtl
and
dec
mov
dec
push
stos
or
nop
cmp
cmpb
int
or
dec
jmp
lret
ret
add
jp
xchg
cld
cld
cmp
mov
subb
jo
aaa
repnz
ja
xchg
push
sti
imul
in
sub
sub
push
iret
and
sbb
int3
xchg
adc
out
add
jns
xchg
push
ds
mov
fiadds
arpl
ficomps
test
mov
lahf
arpl
lea
aaa
xor
push
je
cmpsl
inc
loop
ret
mov
sbb
mov
jbe
aas
sub
nop
sub
and
aaa
xor
lods
imul
dec
push
push
jae
cmp
sub
fwait
js
xchg
mov
popa
jb
cmp
jns
fidivrs
or
cmp
lret
or
or
addl
popa
fnstsw
addl
jns
jl
sar
sbb
loopne
jb
sbb
xor
imul
int
pop
stc
adc
adc
sahf
loope
mov
js
fcomps
std
mov
nop
icebp
loop
aas
jecxz
mov
fmull
add
push
insb
jl
fistpll
stos
push
insb
or
lods
jno
fadd
jecxz
xchg
test
mov
adc
sub
push
imul
adc
pop
sbb
adc
shl
jge
xchg
sbb
inc
mov
mov
cmp
ror
mov
ja
fcoml
int
mull
dec
dec
sub
push
inc
mov
or
into
pop
mov
dec
out
mov
in
push
lahf
insb
and
pop
inc
and
je
inc
adc
rcll
cmp
roll
imul
sti
push
bound
int3
adc
ss
sbb
lea
sub
imulb
and
add
inc
lea
cmp
pop
test
aam
dec
inc
adc
or
cltd
ficoml
jbe
add
adc
bound
inc
dec
pop
pusha
ja
outsb
in
mov
outsl
lahf
out
stos
xchg
mov
shlb
popf
shll
movsl
adc
adc
mov
mov
mov
push
xor
pop
cwtl
add
mov
js
call
aad
sub
out
roll
imul
push
leave
jno
pop
hlt
popf
sahf
pop
pop
lock
dec
je
pop
cltd
mov
push
push
mov
or
movsb
xor
popf
out
repz
adc
cmp
jne
inc
scas
adc
mov
lret
jg
and
dec
push
pop
jmp
loopne
ficomps
mov
push
loopne
inc
mov
dec
mov
lds
add
rorl
jnp
cli
lret
movsl
push
mov
pop
pop
push
pop
mov
hlt
or
sahf
outsl
test
jecxz
lock
add
test
cmp
ds
scas
mov
xchg
cli
out
add
in
dec
add
loope
fdivr
push
xchg
jge
pusha
daa
js
sti
push
out
pop
les
dec
mov
mov
add
call
dec
movsl
outsl
jbe
cmpsl
sub
jae
adc
sahf
dec
cmp
rorb
cmp
lret
jecxz
int3
repz
push
xchg
stos
jp
fcompl
add
mov
lods
or
push
push
adc
mov
dec
fsubrl
stc
addl
cmpsl
xchg
out
stc
aas
xchg
lret
mov
add
dec
lds
xlat
or
aad
popf
sahf
fsubr
lods
push
pop
add
ja
cmp
jno
pop
lods
das
daa
scas
add
xchg
fistpl
or
ret
loopne
xchg
testl
or
push
adc
mov
int3
inc
insb
fdivrp
add
sahf
or
mov
stos
push
cvtps2pd
push
lret
dec
add
mov
xchg
sbb
mov
in
push
push
sahf
sbb
mov
int3
ret
ss
mov
fstl
mov
js
cld
adc
pop
enter
xchg
in
fwait
imul
xchg
out
out
icebp
rcll
shll
mov
fldenv
pop
push
and
push
loop
in
les
out
popa
adc
clc
rol
jge
push
pop
repz
iret
jb
daa
inc
jne
jb
inc
jo
push
nop
stos
stos
sahf
mov
arpl
out
and
mov
xchg
pop
je
mov
jae
and
inc
push
mov
sbb
insb
cmc
xchg
cs
inc
add
xchg
fmulp
sub
sbb
pop
adc
mov
cmpl
mov
jns
fsubp
jns
and
xlat
mov
test
das
and
outsl
ljmp
outsb
xchg
xor
test
jbe
shll
dec
hlt
jp
repnz
sbb
sarb
ret
adc
mov
adc
sub
jno
sub
ret
xchg
lret
pop
cs
ljmp
ds
testb
mov
mov
fwait
jno
inc
xchg
mov
and
imul
in
inc
mov
xchg
mov
mov
popa
pop
or
jl
jmp
test
test
add
push
xor
fsubrs
adc
push
xor
scas
add
ja
in
lock
loope
in
push
es
pop
test
ss
shl
repz
or
mov
adc
add
and
mov
sub
cmp
xchg
push
fldt
outsb
and
out
or
out
std
fwait
pop
xchg
pop
cmpsl
mov
es
lcall
mov
cmp
sub
cmpsl
aas
pop
scas
push
xor
dec
mov
rcll
mov
lahf
fucom
inc
xchg
mov
dec
test
gs
rclb
dec
leave
mov
fnsave
lods
mov
mov
push
pop
and
jb
cmpsb
cmp
push
xchg
shll
stc
jne
sub
out
mov
xchg
insl
mov
add
jo
inc
enter
xchg
test
or
loope
cmp
mov
popa
in
and
mov
xor
movlhps
aam
jge
shll
lret
pushf
cmp
push
pusha
insb
andl
arpl
mov
mov
pop
leave
xor
and
aas
loopne
outsl
adc
mov
cmp
push
cmp
mov
aaa
out
jmp
stc
add
popa
jmp
out
clc
stc
test
sbb
mov
xchg
and
es
xchg
pop
pop
cmp
mov
fists
inc
adc
sbb
mov
std
iret
dec
mov
popa
movsl
adc
mov
cmp
cmpsl
pushl
ret
sahf
mov
mov
mov
aad
sub
mov
outsl
sbb
xchg
stc
fidivl
cli
fwait
or
add
mov
sar
lahf
dec
pop
mulb
inc
mov
enter
add
push
inc
mov
in
loope
mov
jae
xor
out
push
cmpsl
loope
mov
data16
dec
push
stos
cmp
push
add
pop
cli
ja
and
pushf
call
xchg
shl
xchg
inc
jg
jb
inc
mov
imul
push
dec
fistl
pop
orb
inc
inc
sbb
mov
fiaddl
sbb
movsl
into
mov
scas
in
mov
add
imul
inc
in
movsb
fsubrl
and
nop
and
andl
dec
jl
mov
push
rclb
jle
pop
dec
lock
sarl
cmp
jns
dec
daa
popa
das
sub
cwtl
jle
or
icebp
jne
aad
inc
mov
dec
jp
pop
sbbb
cmc
add
ljmp
aas
sbb
fmul
loopne
jbe
push
je
roll
lods
in
push
pop
je,pt
dec
jl
mov
aam
stos
sub
inc
cwtl
pop
test
add
cmp
cmp
fists
adc
iret
mov
sub
enter
or
jecxz
imul
sbb
icebp
and
xor
sbb
jp
push
les
or
dec
repz
xchg
jno
push
mov
sub
cmp
jb
add
sbb
dec
or
cld
arpl
aam
cmpsb
jbe
pop
pop
push
loopne
push
int3
add
mov
push
out
rolb
adcb
cmc
cvtpi2ps
mul
sub
jae
cmc
and
push
push
push
stos
aam
jne
push
ffreep
cwtl
pop
scas
shl
jns
jecxz
adc
push
mov
xor
cmp
dec
jbe
pop
fsubs
jne
cmp
imul
or
pop
andb
cmp
cli
cmpsb
xor
sub
paddsb
dec
and
mov
outsl
push
in
daa
xchg
bound
je
fmull
xchg
movsl
pusha
adc
out
mov
xor
pop
pop
mov
aad
cmp
push
movsb
xchg
into
jg
add
imul
dec
lods
les
ja
inc
jl
sti
stc
sarl
dec
leave
movsl
pop
fsubrs
cli
add
xchg
notb
push
push
cltd
or
sarb
sar
or
loope
push
sbb
test
insb
sub
icebp
jl
das
pop
cmp
inc
repnz
mov
stc
mov
push
push
or
mov
push
add
ret
mov
adc
push
cmpsb
shr
popf
jb
cld
adc
mov
mov
add
lret
add
and
cs
jns
xor
jno
cmp
cltd
out
push
adc
addr16
push
sbb
iret
xchg
xor
mov
jbe
adc
negl
cmpsb
pusha
xor
rcll
inc
ret
scas
push
lahf
xor
icebp
leave
sbb
push
aam
jno
push
add
pop
daa
sbbl
xor
call
std
nop
jg
scas
aam
pop
pusha
in
xchg
fs
or
jb
xchg
aad
in
into
push
rorb
mov
cmp
out
enter
ret
or
xchg
in
push
std
ja
pop
cmp
dec
imul
pop
dec
adcl
inc
mov
inc
xchg
pop
lret
nop
lret
push
dec
stos
cld
mov
sahf
mov
repnz
mov
xor
std
jno
adc
leave
mov
add
aaa
fucomp
jnp
out
adc
sarl
lds
mov
imul
sbb
sub
push
inc
cmpsb
enter
call
jne
int3
dec
out
xchg
inc
icebp
shll
cli
mov
pusha
xchg
outsb
pop
mov
cmp
push
insb
lds
xchg
out
out
daa
jp
std
pop
repz
sar
cmpl
stos
int3
cmp
ret
dec
shll
pop
cmp
rolb
scas
mov
xlat
cmp
jo
xchg
sbb
hlt
daa
jns
fmuls
mov
xchg
or
mov
dec
add
mov
sbb
loop
scas
or
mov
sbb
dec
pushf
aas
cmpsb
jne
imul
in
cmp
faddl
sti
cmp
hlt
cltd
xchg
sub
ret
mov
add
mov
fs
add
jecxz
inc
outsl
aam
inc
jnp
or
mov
rol
push
lods
push
jne
out
or
test
push
hlt
mov
inc
data16
sbb
inc
sbb
outsb
scas
xchg
repnz
cli
cmp
lret
mov
or
in
pusha
out
insl
enter
scas
xchg
and
loop
je
mov
lret
scas
cmp
sbb
xchg
repnz
mov
or
push
mov
mov
sti
sbb
sbb
xchg
jle
js
xchg
mov
shl
mov
jne
add
std
aas
inc
repnz
jle
mov
sub
jecxz
adc
cmp
xorl
pushf
rorb
aam
loop
adc
lcall
scas
dec
or
sahf
repnz
decl
insb
inc
adc
icebp
pop
xor
out
and
inc
cld
pop
call
aaa
mov
pop
inc
mov
dec
call
pop
into
mov
cmp
jno
sarl
or
mov
lahf
inc
cmp
fnstcw
push
dec
ficompl
test
iretw
xchg
sub
shll
push
hlt
mov
imul
clc
popf
jae
loop
lods
out
sbb
lea
ljmp
aad
mov
sub
fwait
leave
cmpsl
testb
or
stos
aad
test
in
insl
mov
mov
enter
xor
addr16
sbb
adc
mov
dec
add
popl
lods
fdivl
xchg
xor
jp
imulb
sbb
and
sub
sub
imul
sub
scas
movsb
mov
adc
sbb
pushf
sbb
in
test
fisubrl
aas
and
cmp
push
mov
add
mov
sbb
call
test
dec
adc
scas
push
divb
test
dec
jo
ret
bound
incb
sub
lret
cltd
loope,pt
repz
mov
rcll
lods
pop
xchg
rorb
imul
sub
out
lret
out
stos
adc
sbb
jmp
rcrb
imul
cli
mov
mov
jmp
mov
std
rcrl
push
mov
loope
stos
out
ret
cmpsb
and
test
cmp
push
out
arpl
test
jne
pop
add
xor
rcl
cmp
jb
daa
in
movsb
cs
mov
lret
cmp
leave
imul
into
add
int3
outsl
sub
adc
dec
pusha
lcall
xchg
mov
inc
loope
jecxz
jmp
sahf
mov
mov
leave
sub
mov
push
dec
pop
std
cltd
pop
lods
xchg
sbbb
add
and
loope
out
mul
lret
mov
aam
inc
addps
dec
je
mov
pop
cmp
std
sub
push
dec
cmp
iret
mov
scas
inc
push
ficomps
sub
mov
js
mov
push
or
and
or
cmp
and
fwait
add
icebp
imul
mov
lea
mov
dec
in
test
mov
roll
dec
jae
ja
xor
add
sbb
jb
add
insb
mov
sti
sbb
xor
arpl
ffreep
sbb
mov
jne
push
enter
and
mov
fdivs
arpl
add
pop
cli
in
push
mov
lock
pop
popa
subl
dec
ss
and
jns
sahf
jge
add
dec
dec
shr
insb
lods
mov
jo
fimull
jmp
jb
lds
add
jmp
add
adc
adc
mov
mov
shlb
mov
lea
ret
insb
sub
cld
pop
subl
je
leave
jno
pop
pushf
pop
dec
dec
xor
cmp
cmp
cmp
int
pop
jmp
inc
aam
jns
shr
mov
out
xchg
mov
lods
sbb
xchg
les
mov
push
lret
rol
jo
mov
das
ja
xchg
inc
aas
fsts
jns
mov
xor
andb
mov
mov
stos
fdivl
sub
adc
enter
inc
mov
push
mov
shrl
clc
adc
cmp
ljmp
add
mov
mov
ja
adc
call
dec
mov
cs
int3
inc
mov
jno
dec
sub
test
push
rcr
lahf
mov
jl
xorl
stc
mov
pop
pop
mov
imull
lret
loop
pop
popa
sub
popf
mov
cmc
fldenv
xchg
stos
jae
shrb
mov
lahf
push
ja
dec
adc
push
lds
mov
add
lock
cmp
icebp
arpl
push
ss
sti
push
test
fstpl
pop
mov
imul
fldenv
add
scas
fbstp
mov
pop
adc
int
dec
push
mov
jnp
stc
adc
roll
std
inc
add
jb
or
inc
cmp
jp
jns
mov
mov
mov
fisubrs
out
mov
xchg
mov
pop
mov
mov
mov
inc
addl
jne
fwait
mov
testb
popf
loopne
cbtw
cld
pop
fisubrs
sub
movsb
or
pop
sub
into
push
es
sti
mov
push
fsubr
mov
lret
pop
hlt
in
pop
xchg
test
adc
lock
mov
stos
and
sbb
sti
inc
jb
push
sti
pop
fucomp
cmp
addb
arpl
int
xor
pop
loop
ljmp
sub
sub
mov
add
ja
xchg
or
adc
adc
and
adc
pmaxub
and
cmp
mov
mov
ss
nop
fincstp
cmpsl
outsl
les
call
sbb
pusha
xchg
lock
push
mov
arpl
pop
fidivl
push
sahf
rep
jae
lea
int
loop
icebp
stc
cmp
xchg
mov
dec
shll
sbb
mov
xor
xor
cmp
ljmp
loope
rcr
lods
add
cmp
adc
jnp
jp
bound
cmp
outsl
pop
mov
mov
jne
lret
add
outsb
dec
icebp
cld
rol
add
out
xchg
insl
fsubl
insl
cmp
mov
adc
cltd
hlt
fdivp
aas
mov
pop
dec
imul
and
mov
add
xor
mov
cmp
sbb
mov
aaa
jp
pop
lret
pop
pop
fwait
or
adc
sarb
mov
loope
loope
cmp
sahf
dec
inc
jg
push
arpl
xchg
dec
push
cmc
or
adc
xor
xor
fidivrs
mov
repnz
push
jo
xchg
pop
in
sbb
push
adc
aaa
mov
ss
clc
sub
mov
cld
lahf
js
push
pop
mov
out
dec
mov
sub
mov
les
and
js
inc
mov
and
xor
adc
mov
and
mov
dec
push
stos
test
cmp
fcmovnu
inc
loop
add
nop
int3
repz
pop
mov
fs
fdivl
push
sti
out
test
sub
add
repz
jo
jge
insb
jle
push
pop
loopne
push
inc
cmpsb
rcl
add
repz
push
xchg
insl
inc
push
fidivrl
in
movl
pop
add
mov
push
mov
cmpsb
int
pop
enter
sbb
call
sahf
inc
loop
imul
es
mov
sbb
and
flds
xchg
sbb
dec
push
in
aam
xchg
adc
call
fs
into
jg
popa
pop
push
xchg
out
lods
ret
dec
stos
pop
iret
and
cs
pop
nop
add
ret
pop
push
lcall
loopne
pop
lahf
adc
call
mov
sub
ret
in
insb
imul
sub
xchg
pushf
dec
pop
xor
sub
jp
cmp
xchg
call
and
popf
mov
mov
dec
daa
dec
scas
and
mov
push
int3
pop
call
jo
jge
jmp
pop
adc
sub
sub
mov
and
in
clc
xor
push
adc
test
pop
dec
cmpsb
fistps
arpl
dec
and
cmc
cmp
and
pop
jo
cs
push
mov
test
lock
and
mov
xor
inc
add
ja
mov
add
sub
mov
cli
mov
in
inc
loope
mov
dec
xlat
insb
sub
mov
faddp
outsb
jecxz
adc
les
scas
mov
sahf
out
xchg
cli
or
outsb
adc
sbb
jnp
call
xor
inc
adc
insb
popw
lret
es
or
fcos
and
xchg
inc
fimull
mov
mov
cmp
fs
add
sub
mov
mov
cwtl
ret
es
sbb
push
std
xor
mov
adc
gs
jne
add
push
mov
mov
ret
mov
clc
pop
bound
xor
xchg
cltd
adc
push
inc
pop
mov
cmp
mov
xor
sub
inc
jmp
enter
lods
outsb
sub
pop
mov
mov
mov
cmpsl
dec
mov
jns
arpl
jns
mov
jnp
cmc
cli
lods
jo
xor
popa
mov
adc
xchg
and
push
jb
sub
cmp
call
cmpsl
adc
mov
push
jae
mov
lods
into
repnz
insb
cmpsl
loop
sub
sbb
je
push
les
aaa
pop
or
pop
pop
add
loop
jb
mov
ljmp
jae
sbb
fcoms
lock
mov
mov
inc
rclb
dec
push
sub
cmp
fisubrl
mov
lret
or
jl
scas
pop
mov
in
je
sub
enter
sub
add
je
adc
rclb
iret
aas
cmpsl
cmp
and
cmpl
pop
das
xchg
movsl
mov
pop
jbe
out
pop
fxtract
in
mov
or
mov
dec
aad
mov
sub
outsb
cmp
rcrl
mov
xor
and
adc
and
sbb
idivb
shlb
add
pop
jle
mov
subl
lea
nop
jnp
lds
sti
int
mov
inc
int
mov
ror
ja
shll
pop
negl
push
jecxz
arpl
mov
sub
xor
adc
repnz
push
pop
sbb
xchg
inc
and
adc
jno
adc
inc
fwait
cmp
mov
xchg
add
les
or
jb
mov
pop
cld
je
int3
out
or
leave
sbb
xor
mov
cltd
mov
pop
bound
push
xlat
in
mov
leave
xor
xor
jns
fistpll
lahf
and
outsl
daa
jmp
sbb
push
jae
dec
fcmovbe
loop
sub
loope
hlt
inc
and
inc
cmp
jl
pop
push
cmp
jl
lcall
mov
mov
popa
dec
inc
push
push
push
or
rcrb
jge
insb
movsl
cmpsb
aad
aam
jle
mov
push
pushf
les
push
or
aad
into
push
jl
or
shr
mov
pop
xlat
pushf
test
xchg
sub
pop
in
mov
std
and
inc
pop
adc
and
push
mov
pop
repz
int3
fbld
sbbb
xor
cmp
das
dec
inc
addb
int
jle
jmp
addr16
xor
add
dec
xchg
xchg
xor
mov
push
fidivs
inc
aas
mov
dec
mov
jl
xor
int3
popa
dec
jle
enter
mov
mov
or
jbe
ja
imulb
in
add
or
xlat
xor
adc
mov
jbe
dec
clc
imul
jns
mov
sub
cmp
sahf
xchg
pusha
inc
mov
mov
add
testb
ficompl
ret
popa
xlat
out
mov
mov
mov
mov
mov
enter
insl
or
and
and
loop
xorl
pop
gs
mov
push
aam
adc
fcom
push
dec
mov
fnclex
stc
loopne
adc
add
adcl
cmc
ds
movsb
mov
mov
jbe
xor
mov
fnclex
and
mov
into
mov
fwait
mov
ret
pop
xchg
shlb
rcrl
jnp
inc
cmp
in
jg
dec
jne
das
push
jecxz
ss
xor
cmpsl
mov
popa
pop
xchg
cmp
aad
push
xchg
mov
cmpsb
jl
repnz
sub
mov
and
or
push
sbb
aaa
aad
shl
mov
xlat
lods
xchg
shr
xchg
icebp
sbb
aas
jg
add
fsubl
popa
lahf
fidivl
cwtl
rol
popa
push
push
out
xchg
add
cmpsb
imul
dec
mov
pop
and
jl
mov
jle
pop
imul
lret
movsb
or
in
xchg
push
pop
bswap
dec
pop
cs
dec
ret
sub
test
mov
and
xor
add
mov
divl
pop
icebp
sbb
add
xchg
mov
jne
in
adc
shl
mov
sbbb
mov
popa
fsubrl
outsl
add
mov
invd
xor
cltd
orb
hlt
imul
loope
leave
and
jle
jbe
mov
cmp
cmpl
es
lahf
xor
call
test
cmp
icebp
fwait
ja
call
cmp
push
push
test
inc
cmc
push
hlt
xor
sub
inc
jmp
insl
ret
cld
xor
jno
adc
inc
fbld
cmp
pop
movsl
stos
aaa
xor
mov
add
scas
sbb
sub
inc
mov
ljmp
les
jno
pop
aaa
cli
push
iret
mov
mov
cmp
push
sub
mov
les
clc
test
test
out
arpl
outsl
xor
xchg
addb
fidivl
push
push
dec
sub
test
sti
cmc
cld
add
idiv
hlt
pop
dec
jle
push
ret
ljmp
imul
mov
pop
les
sbb
out
data16
stc
aaa
jmp
mov
lret
xchg
aaa
inc
cmc
popa
cmpsl
test
jnp
test
adc
int
pop
xchg
lea
jecxz
xlat
cmpsl
pop
int
or
cmp
pop
jmp
push
iret
aam
jmp
out
mull
xor
int
add
in
xchg
aam
fisubs
scas
jns
sarl
cmp
lcall
push
mov
jne
subb
das
xor
test
push
cmp
je
xorl
pop
add
xchg
jnp
pop
ljmp
or
add
mov
sbb
das
inc
jne
rcrl
loop
and
lret
cmp
sbbl
in
les
popa
popa
lret
push
mov
pop
push
or
pop
cmpsb
sub
xchg
sub
mov
mov
and
jmp
sub
xchg
fistpl
icebp
test
pop
int3
addr16
push
mov
add
dec
enter
pop
mov
adc
sbb
inc
fisubs
push
xchg
sbb
sub
mov
loop
inc
cmp
push
mov
mov
mov
outsl
mov
xchg
sahf
ja
push
push
leave
negl
add
xlat
or
into
sbb
pop
repnz
insl
cmpsb
pop
imul
push
push
sar
aaa
fisttpll
push
adc
dec
or
push
push
repnz
ss
andl
out
ja
mov
cmp
arpl
xchg
jnp
jo
arpl
adc
push
pop
out
ljmp
push
jmp
and
stc
shrb
push
adc
xchg
inc
inc
lcall
mov
std
mov
lahf
sti
pop
mov
and
rcrl
ret
pop
inc
or
ja
adc
cmp
fstp
xor
adcl
fistl
or
mov
xor
data16
loop
fwait
mov
rcrl
lcall
or
adc
pop
nop
cli
cli
cmp
xchg
xabort
imul
xchg
inc
test
iret
lret
mov
fbstp
sub
and
inc
sbb
inc
shll
sahf
outsb
clc
add
mov
icebp
rcrl
sbb
shrl
and
out
bswap
add
jns
jmp
int
mov
lds
and
pop
mov
pop
jmp
cmpsl
pop
jb
in
lea
push
or
pop
ds
push
aam
stos
mov
dec
inc
cmc
int
cmp
shlb
sub
mov
pop
stos
lahf
mov
in
sahf
jg
add
mov
cmp
inc
shl
cmc
test
or
lret
fwait
or
add
push
pop
mov
inc
sub
ret
mov
mov
jns
xchg
imul
sub
pusha
mov
or
jns
mov
cmc
xchg
mov
or
add
sbb
cmc
mov
lock
popf
mov
sbb
dec
test
xor
xchg
test
and
cli
pop
jg
or
cs
mov
mov
mov
and
popf
js
xchg
ret
mov
rorl
cmp
pop
loope
nop
ret
xchg
arpl
js
cltd
int
jo
cmp
mov
add
pop
jae
push
jecxz
out
aas
cmp
pop
arpl
aam
cmp
add
add
ss
loope
pop
sub
sub
fcmovbe
cmp
jbe
insb
sbb
mov
scas
popf
sub
ds
sbb
add
sub
dec
int3
nop
data16
xlat
inc
ja
mov
psadbw
mov
push
outsl
adc
xchg
cld
insb
push
outsl
xor
cmp
iret
rorb
pop
dec
push
in
addr16
inc
jmp
jle
cwtl
enter
push
shll
xor
pop
addr16
cmp
dec
enter
mov
push
lret
imul
pop
jb
test
mov
push
aaa
mov
add
xchg
out
jmp
fs
repz
mov
dec
pop
mov
pop
mov
fnstcw
ficoms
adcb
adc
sbb
adc
cmp
jbe
pop
fsubrp
test
jmp
out
dec
sahf
jge
test
add
mov
xchg
out
mov
hlt
movsl
into
pop
fsubs
push
adc
clc
std
mov
shlb
inc
pop
or
pop
shr
imul
stos
push
popa
rorl
aam
pop
sbb
gs
popf
movl
lcall
nop
cld
loopne
addr16
xchg
mov
mov
fsubl
hlt
mov
movsl
int3
aaa
adc
decb
lds
xchg
ficompl
mov
mov
aas
jge
pop
sub
jae
or
sbb
mov
rclb
sbb
out
mov
scas
pop
cmp
pop
fadd
ljmp
add
cmp
lcall
fiadds
lock
jle
adc
mov
fldl
pop
test
adc
cld
cmp
xchg
add
mov
jns
imul
shr
jl
sti
lods
xchg
lea
lods
adc
in
insb
popf
ljmp
pushf
pop
push
std
cmc
sbb
lcall
cmp
cmovne
pusha
or
or
add
lcall
and
ljmp
outsb
aam
xchg
iret
xor
out
mov
rorl
adc
adc
stc
int
jg
cmp
xchg
enter
add
loop
push
add
adc
pop
cmpsl
pop
mov
rep
push
push
push
dec
sbb
xchg
cwtl
dec
mov
clc
test
and
cmp
jns
addl
and
mov
ljmp
int3
cmpsl
jae
mov
repnz
add
pop
cmp
push
sub
cmp
mov
push
out
jb
mov
test
push
pxor
fwait
mov
add
and
inc
loop
or
xchg
add
xor
xchg
sub
sarl
int
loopne
dec
in
or
lcall
inc
negl
sub
ds
aad
mov
outsl
cmp
inc
insl
sub
sarb
mov
mov
dec
pop
adc
icebp
stos
cmpsl
ljmp
mov
inc
add
push
cltd
pushf
jns
std
stc
mov
jnp
test
lods
mov
dec
hlt
push
mov
call
in
adc
fisttps
sbb
or
icebp
je
filds
dec
push
sub
mov
mov
dec
pop
inc
gs
dec
test
aas
gs
leave
jmp
jl
pop
cs
pop
xchg
mov
mov
xchg
hlt
push
jge
loopne
and
inc
inc
mov
pop
xchg
pop
add
xchg
xchg
push
xor
lods
dec
sarl
sbb
fisubrl
sti
and
sbb
fld
inc
call
clc
push
pop
dec
inc
cwtl
daa
xchg
fsubl
aad
incl
icebp
scas
jle
jmp
inc
adc
cmp
xor
ljmp
fistpl
xor
jecxz
pop
sub
adc
sbb
dec
fwait
into
mov
subl
mov
xorl
pop
repnz
and
push
mov
fldt
inc
fadds
movsl
pop
jle
jae
cmp
lock
mov
loope
out
aam
fsubl
shll
in
xlat
ljmp
jno
jle
sub
or
popa
jo
lahf
xor
inc
lahf
les
lahf
stc
mov
pop
fidivl
mov
aam
pop
xchg
mov
mov
rcll
mul
push
cmp
dec
adc
and
and
mov
sbb
iret
leave
push
ds
and
xor
add
lcall
inc
in
pop
mov
push
adc
imul
rcll
mov
pop
fwait
and
fdivrs
jp
push
in
cmp
pop
je
outsl
rolb
repnz
scas
test
fsubrs
jnp
xchg
ret
lahf
mov
mov
je
fstpt
data16
inc
xor
xchg
adc
data16
cmp
shl
insb
fstps
xchg
icebp
std
cmpsb
xchg
sbb
mov
loopne
fbld
jnp
push
or
cmpl
ret
mov
loope
add
popf
mov
nop
test
cmp
scas
mov
xor
insb
or
cltd
pop
adc
adc
mov
mov
jle
jne
ret
sbb
sub
push
lods
andb
ds
dec
sti
lds
mov
mov
xchg
ss
jb
mov
sub
sahf
cwtl
pop
xorl
cwtl
into
aas
sbb
jecxz
mov
addl
mov
out
mov
or
daa
sub
clc
nop
lret
aas
pushf
push
or
sbb
sub
inc
pop
dec
lods
mov
in
scas
inc
jns
xchg
testl
shll
mov
inc
sub
cmpsl
mov
test
cvtdq2ps
mov
or
sbb
popl
cld
adc
fildll
pop
in
push
shl
fldt
std
dec
xor
ret
inc
and
mov
jle
jge
jecxz
mov
in
add
inc
fsubl
dec
adc
insb
or
loope
lods
rclb
mov
jb
shl
add
inc
pushf
or
lock
cmc
lret
add
sbb
and
sti
mov
ficompl
lods
mov
pop
push
inc
fidivs
or
dec
pusha
xorl
fdivl
and
mov
stos
sbb
lahf
push
cmpsl
subb
fsub
popa
xchg
xchg
leave
and
sbb
jbe
enter
cmp
setnp
dec
push
mov
xchg
dec
push
or
aam
push
or
add
imul
sub
add
imul
sarb
push
sbb
mov
push
sub
cltd
mov
sbb
jnp
sub
mov
out
xor
jns
addr16
xchg
push
outsl
sahf
jbe
out
mov
adc
pusha
xor
cltd
pop
pop
jae
dec
push
out
fsubrs
mov
data16
add
mov
sub
and
ret
sbb
test
sub
dec
bound
loopne
xor
or
lret
cmp
and
cmp
jb
pop
mov
sbb
lods
idiv
popa
popa
dec
push
sbb
orb
sbb
ret
cld
xchg
mov
cmc
lahf
sbb
dec
popa
mov
mov
jo
sti
mov
rcr
out
in
movsb
jae
mov
jb
cmpsb
jg
mov
adc
jg
int3
push
fstl
add
inc
pop
addb
mov
outsb
aam
sbb
mov
or
adc
xchg
pop
aad
mov
add
es
loopne
pop
into
sahf
push
jne
xor
cmpsb
test
sub
ficoml
aam
pop
bound
pop
mov
cli
lret
push
adc
insl
call
ja
mov
pushf
leave
call
lret
pop
jae
push
test
lds
adc
in
int3
cmpsl
adc
mov
test
stos
mov
sahf
push
adc
xor
sbb
test
data16
aad
das
movsb
loopne
dec
bound
xlat
roll
lods
xor
sub
loop
jae
cmp
lods
je
out
xlat
jae
cld
adc
mov
imul
lcall
mov
inc
or
and
enter
mov
jb
add
out
ret
loop
mov
xor
insw
inc
add
or
sub
mulb
fstps
mov
stos
inc
sub
imulb
test
sti
jecxz
xor
xor
mov
cmp
and
repnz
dec
push
adc
mov
mov
inc
dec
aad
mov
pop
cli
fnstenv
cmp
push
fisubl
and
xchg
out
loopne
push
sbb
cmp
push
mov
mov
sub
ja
ljmp
mov
into
mov
xchg
adc
sbb
xor
repz
xchg
mov
add
adc
adc
mov
insl
je
clc
sbb
out
dec
imul
inc
clc
aas
push
ljmp
or
xchg
bound
pop
jl
xor
pop
xor
frstor
xchg
imul
in
ret
mov
inc
xchg
filds
mov
jns
add
les
adc
dec
cmp
out
and
mov
jge
int3
outsl
iret
lea
mov
cmpsb
sti
jmp
gs
mov
adc
cmp
or
pop
insl
jp
mov
gs
pop
sti
jle
push
dec
cmp
adc
and
inc
sahf
aas
orl
addb
xlat
faddl
lcall
loop
stc
iret
jbe
jecxz
cmc
cli
add
loope
test
inc
xchg
push
push
pop
rorb
push
sbb
dec
call
aad
ficomps
add
pop
add
and
adc
jo
ds
jns
xor
aaa
add
xchg
xor
cmpsl
inc
fldcw
pop
popf
push
inc
pop
and
push
mov
adc
or
mov
or
cltd
mov
movsl
jle
dec
push
fs
pop
sbb
stc
test
clc
je
pop
insl
mov
aaa
xor
add
ss
sti
lahf
call
sbb
movsl
outsb
jmp
ret
scas
and
out
popa
cmpsl
dec
into
pop
jp
mov
add
pop
loopne
movsb
mov
aas
push
push
pop
addr16
addr16
jae
loope
int3
inc
jmp
push
jns
out
dec
jnp
sub
ljmp
sub
data16
ljmp
xor
jae
in
jae
mov
jbe
insb
fcompl
pop
adc
sbb
cmp
lods
pop
sar
stos
movsl
xor
xchg
xor
out
jg
and
ss
loop
pop
and
dec
dec
dec
rcrl
testb
xchg
lock
jmp
aam
xchg
dec
jne
popf
and
xor
sbb
std
test
mov
ret
jb
xchg
mov
jne
cltd
xchg
fs
std
subl
js
mov
loope
sbbl
sbb
fwait
insl
sbb
in
xor
clc
cmp
mov
mov
pop
fisttpll
sbb
call
mov
outsl
fisttps
enter
lret
or
sti
and
mulb
imull
pop
jnp
xlat
data16
out
mov
sub
pop
out
cld
fs
insb
xchg
cmpsb
repz
lcall
jg
sub
jae
icebp
stos
es
cmpsl
ss
in
pmaxsw
push
lret
jno
out
clc
jl
pop
push
add
into
inc
outsb
mov
mull
shll
movsb
mov
gs
push
mov
xchg
sub
out
mov
add
bound
aaa
psubsb
inc
or
sahf
dec
push
dec
adc
pop
gs
repnz
mov
mov
sub
lods
push
test
pop
pop
adc
jb
sti
int
lcall
jp
dec
testl
sbb
xchg
push
repz
mov
lea
iret
and
push
cmp
movsb
push
ja
add
insb
sbb
jo
loopne
js
stos
or
incl
add
inc
adc
loopne
xor
rcll
jecxz
stos
fstpt
fs
push
push
loop
xchg
fstps
pop
fdivr
jae
xchg
xchg
repnz
shll
in
gs
js
in
in
arpl
xchg
or
push
shrb
ficompl
test
pop
or
push
repnz
add
adc
add
cmp
into
ret
pop
cs
add
push
dec
push
shrl
mov
pusha
bound
push
es
rcl
scas
xor
cmc
iret
push
loope
or
push
mov
roll
leave
fucomp
add
mov
in
push
mov
xchg
mov
and
dec
sahf
outsl
aaa
adc
push
out
mov
les
cli
cmp
push
es
std
test
xchg
loope
jns
cmpb
jmp
shrl
or
dec
popa
imul
add
popf
shl
cmp
mov
xchg
sbb
into
or
xchg
enter
jmp
psrlq
into
xchg
cmp
ret
lahf
xor
repz
xchg
pusha
adc
xchg
or
stc
popf
add
loop
fsubp
insb
and
inc
test
jp
add
jne
pop
in
dec
lret
cs
mov
mov
pop
stc
jnp
push
push
mov
and
xor
loopne
push
pop
dec
pop
into
fcomp
arpl
aaa
es
rolb
and
pop
data16
xchg
or
jp
push
aaa
xor
xlat
push
mov
scas
jo
in
push
sub
xchg
jns
sbb
sbb
ds
outsl
xor
and
push
sbb
dec
loop
orl
push
in
pop
in
ja
and
fimull
in
xchg
or
xor
add
pop
inc
pop
pop
rcr
add
jle
in
mov
outsb
rcrl
dec
adc
scas
mov
cmpsl
outsb
lahf
je
pop
sub
pushf
lcall
mov
cmp
mov
lods
inc
ja
dec
cmp
cs
and
sub
jecxz
in
sti
mov
mov
mov
mov
mov
jae
cld
xor
ds
xchg
mov
arpl
mov
call
mov
push
add
mov
pusha
mov
jno
add
out
jb
cmp
ja
push
jecxz
sbb
pusha
inc
and
adc
lods
pushf
sub
retw
negl
std
icebp
and
test
addr16
stos
inc
add
add
sbb
cmc
xchg
sahf
les
sarl
xlat
outsl
inc
dec
mov
and
sahf
xor
xlat
or
jl
out
add
orl
mov
jns
push
je
movsb
jae
inc
jp
outsb
cmp
fiaddl
iret
add
icebp
cmpsb
sbb
cmp
lods
and
inc
fs
std
repz
mov
mov
sti
and
cmp
test
mov
mov
jecxz
lods
jo
out
push
lahf
pushf
push
bnd
jmp
and
inc
cli
loop
stos
mov
ret
sub
int3
lret
outsb
cmpsl
push
pop
loope
dec
dec
in
or
push
mov
aaa
das
cmc
insl
sti
es
out
lods
xchg
insl
test
add
cltd
push
ds
cmp
mov
mov
cs
lea
xor
movsl
mov
sbb
movsl
jmp
push
pushf
mov
inc
addr16
aas
arpl
jg
stos
rcrb
dec
dec
adc
mov
xor
xchg
std
inc
and
jne
jmp
and
push
pop
mov
or
push
mov
scas
es
mov
iret
sub
or
xchg
xor
out
add
repnz
scas
js
hlt
push
test
popf
adc
cmc
ljmp
imul
stos
mov
iret
std
iret
and
adc
jge
shrl
mov
out
push
dec
ret
testb
ret
repnz
pop
sarb
xor
mov
mov
cmp
xchg
daa
add
call
add
icebp
lret
sbb
mov
bound
push
arpl
dec
xchg
add
into
and
mov
cmp
adc
xor
ret
mov
lahf
arpl
xor
sub
sahf
call
dec
rorb
dec
mov
loope
test
bound
cmp
dec
mov
testl
pop
cmc
out
mov
and
out
stos
and
or
pop
inc
outsb
cs
in
and
and
scas
xor
int3
mov
add
insb
jae
repnz
pop
rorl
sub
or
into
adc
sub
push
jb
xchg
repz
jbe
and
xchg
or
jmp
jb
mov
adc
cmp
dec
repnz
lock
test
mov
mov
pop
fstpl
mov
ljmp
mov
push
xchg
cli
sub
or
mov
push
dec
fdivrs
in
jg
lcall
orl
cltd
loopne
adc
push
jae
fabs
push
add
out
push
ffree
jmp
fsubrp
add
push
xor
andb
jp
push
fadd
outsl
insl
mov
gs
pusha
in
push
xorb
inc
lret
inc
je
enter
cwtl
push
int
sarl
push
outsb
ljmp
lock
out
hlt
test
or
clc
cmp
xchg
mulb
push
incb
cmp
and
ja
xor
das
inc
xchg
mov
imul
icebp
sbb
subb
adc
sub
movsl
negb
dec
push
pop
xchg
lock
add
testb
mov
pop
mov
pop
loope
sar
cmpsl
popf
and
pop
lods
adc
adc
jmp
add
mov
insb
lds
mov
add
cld
insb
and
jnp
adc
xor
cs
pop
mov
lea
inc
jle
lcall
and
sti
loope
div
bound
loop
ljmp
mov
push
in
dec
mov
lods
mov
out
daa
push
jge
add
xchg
rclb
push
repnz
mov
push
xchg
xor
push
cmp
andb
fiaddl
cs
mov
shrl
dec
ret
sub
movsb
pop
imul
add
add
inc
sub
mov
lcall
push
and
lcall
outsb
lcall
lret
push
xor
cmc
packsswb
xchg
loopne
push
sbb
push
xchg
shl
in
push
pop
loope
pop
in
shrl
neg
xor
out
sub
xchg
jp
ss
imul
xor
xor
and
pop
add
xchg
jnp
pop
jne
sbb
mov
jno
xchg
inc
jbe
cltd
jo
enter
push
in
jnp
pop
fs
loop
ljmp
rolb
inc
outsl
divb
xchg
push
in
outsl
loop
cmp
ss
sbb
cmp
xchg
les
xchg
adc
cmc
repnz
sub
fucomp
movsl
rclb
sbb
inc
push
push
popf
fsts
and
pusha
fldl
cmp
cmp
push
cmp
and
adc
leave
sbb
loop
movsb
lret
adc
mov
mov
add
pop
lea
leave
and
scas
ss
inc
shlb
dec
mov
cmpsb
int3
sbb
mov
test
inc
mov
or
test
ret
out
cmp
adc
xor
cmp
mov
cmpsb
xor
cmp
stos
xlat
out
addr16
testl
loope
ja
push
adcl
outsl
and
mov
push
stc
xor
jnp
or
sub
cmc
mov
sub
mov
xchg
push
push
jo
mov
pop
nop
lods
lds
xchg
cmp
jge
jecxz
popl
mov
lret
inc
cltd
mov
cmpsl
add
cmpsb
mov
mov
sub
ss
stc
ja
dec
jnp
or
xchg
sbb
inc
mov
add
push
in
repz
into
xor
mov
into
and
push
lret
pop
mov
push
mov
in
in
out
xchg
xchg
call
mov
mov
das
inc
lock
loopne
out
push
mov
popl
out
stc
rcll
lock
fisttpll
shlb
nop
mov
mov
xor
test
movsb
cmc
inc
xorl
cmpb
rorb
add
imul
aad
push
out
add
adc
rorl
jb
addl
testl
mov
jb
adc
iret
out
gs
std
movsb
and
pushf
outsb
push
mov
pushf
movb
call
movsl
out
dec
movsl
nop
das
out
idiv
cmpsl
lods
lahf
enter
mov
pop
mov
lods
adc
insl
jge
bound
push
jns
jae
xchg
xor
and
in
push
xor
jb
jp
pop
push
push
push
cmp
push
addl
pop
stc
fdivr
pushf
dec
fldt
mov
inc
std
icebp
stos
mov
jp
lock
insb
or
scas
xor
and
icebp
add
mov
mov
imul
adc
std
call
into
mov
jo
pop
jo
test
mov
lds
cmp
repz
push
inc
push
inc
and
cmp
push
cmpsl
mov
lret
cmp
pop
rcll
mov
mov
pop
push
test
mov
mov
jmp
cmc
dec
stos
jg
mov
mov
imul
or
pminsw
mov
call
inc
addr16
xor
pop
push
test
pushf
bound
cld
cmpl
dec
add
pop
xor
lret
mov
push
ret
out
mov
jae
lea
dec
lods
leave
sbb
cmp
and
jns
xchg
push
jge
scas
loop
lahf
mov
dec
sbb
dec
inc
icebp
aad
push
outsl
std
xchg
jl
sbb
iret
cmp
sbb
shlb
mov
push
into
jl
cmp
dec
push
repz
pushf
mov
iret
sti
mov
add
inc
xlat
in
xchg
lds
mov
pop
enter
sub
jp
dec
push
lret
sub
subl
inc
cld
cmp
orb
mov
int3
jl
fbstp
dec
sbb
mov
and
sahf
xlat
js
or
pop
xchg
adc
std
pusha
push
or
pop
mov
out
sbb
cmp
jbe
repz
lods
jle
jo
mov
add
dec
sbb
add
enter
mov
imul
nop
fucompp
cli
shl
leave
dec
pop
and
arpl
fs
dec
fisubl
repnz
push
aad
stc
and
sbb
mov
lret
ja
or
fstl
test
xor
test
add
int
repnz
cwtl
and
lods
rclb
jns
push
pop
cmp
or
mov
scas
push
sbb
scas
shlb
outsl
mov
adc
adc
js
mov
movsl
pushl
dec
or
clc
mov
sub
mov
jmp
shr
hlt
jle
mov
inc
out
aas
movsb
fiadds
mov
iret
mov
mov
lahf
js
push
mov
loope
pop
mov
mov
jo
pop
mov
lds
xchg
clc
rcr
mov
mov
mov
int3
insb
roll
xchg
ror
jo
cli
les
xor
in
dec
inc
jno
bound
int3
addr16
aaa
xor
fdivp
push
ret
cwtl
xchg
cli
push
orl
cmp
decb
push
jg
xlat
adc
jns
or
mov
mov
and
jnp
pop
or
push
out
ret
out
cltd
insb
in
out
imul
xchg
pop
aam
inc
sbb
sbb
adc
repz
fidivl
and
mov
pop
mov
addl
mov
push
sub
jb
int3
scas
repz
cld
and
inc
dec
out
jge
inc
inc
push
pop
mov
mov
mov
lea
lods
repnz
fwait
lret
mov
or
fdivp
outsl
xor
test
push
mov
mov
add
pop
mov
xor
jge
inc
mov
test
movsb
icebp
shlb
lret
sub
aad
incb
mov
xor
add
scas
inc
fimull
xchg
xchg
jl
cltd
mov
inc
cmp
lahf
xor
jecxz
push
popf
es
int
arpl
frstor
or
bt
aas
cmpsl
hlt
stos
cmp
daa
arpl
mov
mov
sub
das
fldcw
nop
arpl
enter
sti
das
loopne
sahf
inc
push
or
aad
mov
dec
or
cmpsb
stos
shrb
sbb
das
in
jb
sub
jnp
test
xchg
andl
push
mov
jge
cld
movsl
cmpsb
fwait
aam
inc
cmc
mov
das
jle
xchg
repnz
mov
pop
in
insb
jecxz
jne
push
outsb
es
jb
xor
xchg
adc
bound
mov
data16
mov
dec
fxch
xchg
aas
mov
movsb
mov
push
nop
jg
mov
pusha
jle
push
andb
dec
pop
loope
adc
ret
push
jmp
pop
dec
pushf
add
or
cltd
push
mov
xor
into
add
stos
ret
sbb
call
mov
adcb
mov
rcrb
lods
add
and
aaa
add
sub
mov
das
or
jmp
iret
call
in
lret
stos
mov
fildll
mov
jb
dec
sub
ds
pop
push
add
idivb
cmp
pop
pop
mov
loop
daa
sti
stos
xor
dec
mov
pusha
mov
jg
sub
dec
out
sbb
iret
sub
les
dec
gs
inc
mov
pop
cmp
je
sub
ret
mov
push
scas
test
push
cs
lret
repnz
dec
into
enter
arpl
xchg
and
in
adc
adc
pusha
lahf
adc
fwait
ss
mov
jecxz
fs
and
aad
mov
adc
mov
pop
push
jno
ficomps
out
cmp
jae
repnz
and
outsl
int3
mov
mov
mov
int3
div
cmpb
jae
test
mov
inc
inc
shrb
pop
push
fisubrs
jmp
sbb
loopne
and
pop
jnp
xor
lahf
frstor
leave
mov
jnp
or
push
sarb
into
mov
mov
jmp
cmc
imul
jge
mov
mov
ljmp
jo
rorb
stc
push
popa
ret
lcall
notb
dec
sbb
add
adc
test
xchg
xchg
sbb
cmp
or
cmp
in
adc
lock
adc
cmp
inc
mov
cwtl
mov
inc
shl
sahf
and
add
sub
mov
hlt
xchg
outsb
push
adc
and
push
repnz
push
inc
fnstsw
lods
or
pop
mov
dec
sarl
nop
ljmp
scas
mov
pop
rcl
loop
test
and
mov
mov
mov
push
fdivrs
scas
into
push
ret
jb
xchg
pop
mov
fwait
mov
adc
lcall
add
xor
enter
lock
push
push
pop
stos
faddl
dec
das
inc
testl
mov
imul
das
fbld
imul
lahf
out
or
inc
rcll
fmuls
loopne
imul
and
leave
in
sbb
or
sarl
add
iret
and
popf
jl
xor
out
test
scas
imul
inc
inc
mulb
xchg
jle
cmc
popf
daa
insl
pop
test
add
ret
pop
mov
push
push
sbb
dec
insb
push
mov
shr
js
loop
aad
mov
jnp
pop
stos
or
mov
jg
call
add
iret
mov
or
rcrb
and
add
popf
push
xchg
fildll
push
jbe
cmp
dec
imul
dec
pop
xor
xchg
cmp
es
icebp
lods
pop
arpl
shlb
je
inc
ffree
jae
xlat
pushf
mulb
xchg
ds
add
xchg
lahf
and
rol
daa
lcall
repz
jno
mov
sub
arpl
dec
cli
jge
es
arpl
cmp
arpl
adc
inc
inc
dec
shrb
lret
mov
pop
nop
hlt
mov
test
jge
fistps
adcl
push
xor
pop
cmp
cmpsb
cltd
mov
xchg
ja
xchg
push
cmp
pop
andl
loop
popf
sub
or
jg
dec
test
jae
sub
adc
jo
subb
pop
and
push
jecxz
jp
sbb
js
hlt
push
lahf
ljmp
pop
push
or
out
ljmp
adc
add
out
cli
adc
in
mov
insb
popf
jp
mov
daa
or
das
push
add
jp
inc
sub
sbb
or
lods
clc
loop
jns
mov
add
adc
cmp
sbb
push
push
not
sub
cs
fwait
out
dec
std
lea
pop
ja
add
mov
mov
add
outsb
push
aaa
mov
les
mov
leave
dec
jmp
lret
int
test
mov
add
push
mov
inc
mov
test
add
shl
xchg
sbb
stos
or
fs
xor
outsb
out
pop
icebp
and
adc
sub
in
fcmovne
jp
lods
outsb
in
mov
mov
ss
shl
cltd
jg
push
mov
and
divl
push
dec
mov
and
jo
test
mov
sub
push
or
aas
repnz
mov
out
lods
sub
add
push
hlt
lcall
ss
fwait
push
cmc
jae
sti
imul
je
int3
out
std
cs
mov
test
lds
push
data16
adc
fidivs
jp
test
and
ljmp
pop
jmp
push
in
mov
dec
dec
xchg
pushf
cmpsb
dec
mov
loope
xchg
in
mov
jno
sbb
lods
xor
mov
bound
jp
lea
into
mull
lahf
rclb
inc
lods
xchg
sbb
mov
fcmovnbe
mov
stc
sbb
mov
and
pop
jnp
pop
fsubrl
aam
xchg
sbb
xchg
pop
add
mov
mov
insl
mov
jb
fisubrl
das
push
int
cmp
mov
pusha
int
je
dec
mov
mov
fbstp
fwait
test
sub
insl
or
out
rorb
pushf
sbb
jo
mov
mov
nop
lds
push
mov
adc
popf
sti
mov
push
xchg
ljmp
dec
pusha
xor
negb
shll
lret
getsec
enter
mov
or
dec
sub
pop
or
pop
iret
shll
in
inc
call
rsm
aas
call
lea
mov
xor
adc
jnp
popa
outsl
rol
push
cmp
sbb
push
lods
lock
rorl
scas
jle
movsl
test
inc
mov
mov
sbb
jns
jp
push
outsb
js
pop
jl
std
ss
lcall
cli
lret
push
push
jg
roll
cmpsl
adc
pop
subb
xchg
clc
mov
test
inc
lods
in
cmc
iret
mov
repz
imul
push
es
pop
iret
cmpsl
movsl
into
fmul
shlb
das
sbb
xlat
adc
xchg
jp
jge
iret
fildll
sbb
loopne
sbb
mov
aad
in
shrb
cmpsb
negl
add
add
dec
test
sbb
add
int3
pop
inc
inc
inc
int
xchg
adc
and
testb
popa
xlat
mov
jnp
flds
in
in
mov
das
popf
xchg
dec
es
mov
iret
xchg
sub
cwtl
mov
adc
pop
inc
into
dec
imul
jae
outsb
mov
pop
pop
dec
push
lods
pop
js
pushf
jnp
lret
scas
aaa
mov
and
dec
jo
mov
mov
clc
ss
cmpl
lcall
push
ret
out
enter
push
fdivrl
lret
insb
cmp
insl
notb
mov
out
div
arpl
out
xor
dec
sub
loop
icebp
inc
push
aad
clc
fprem1
push
sub
add
cli
cmp
popf
sbb
fcmovbe
inc
pop
fdivrp
ja
and
or
aam
mov
and
mov
shll
int3
sbb
add
or
nop
pop
pop
adc
cmp
xor
pusha
push
std
leave
rorb
mov
outsb
xchg
fwait
lahf
outsl
movsb
int3
jl
in
jo
xchg
pop
pop
repnz
xchg
mov
cmp
inc
add
add
lea
mov
adc
lret
mov
into
sbb
xchg
mov
adc
fdivrs
mov
push
ljmp
stos
fcoml
push
add
icebp
movb
mov
addr16
inc
cmpsl
inc
ret
sbb
out
jo
fwait
pop
xchg
jp
rolb
inc
pop
or
xor
jb
imul
push
push
addl
out
mov
jmp
push
andb
sub
or
out
imul
cmc
stos
aas
pushf
movsl
adc
in
sahf
inc
pop
push
add
movsb
mov
shl
mov
test
mov
data16
push
stc
inc
jg
hlt
sub
push
clc
cmp
ljmp
fcmovne
out
into
mov
push
mov
jg
pop
leave
jbe
subl
mov
dec
inc
sub
int
mov
ficoml
adc
jl
mov
popa
mov
into
in
scas
push
dec
and
jne
cmp
sub
jecxz
popa
popa
out
adc
testb
ss
sbb
and
sub
pushf
lods
inc
cmpsl
testb
dec
jge
mov
enter
mov
push
test
mov
lret
pusha
lahf
pop
mov
out
sahf
popa
xchg
ret
subl
push
jge
mov
pusha
and
cmpb
push
fs
jae
cli
or
dec
cmp
js
mov
outsl
int
aaa
popf
cltd
dec
xchg
pop
cltd
mov
adcb
cmp
in
inc
add
fwait
xchg
fstpt
fistps
mov
hlt
pop
imull
jns
and
test
or
xchg
push
sahf
pop
inc
and
xchg
stc
mov
in
sub
outsl
stos
jp
in
int
jmp
out
sub
mov
gs
pop
rcr
sub
sbb
sub
loope
arpl
cmp
cmovo
leave
imul
cli
iret
cmp
xor
stos
shrl
xor
inc
mov
sub
hlt
shlb
nop
xor
data16
ret
je
mov
inc
jno
decb
pop
sahf
or
sbb
pushf
push
adc
sarl
shll
dec
sub
push
scas
and
mov
addb
aaa
pop
cwtl
xor
pop
aad
mull
loopne
adc
mov
imul
sahf
dec
mov
and
cmp
push
sub
pop
xor
pop
mov
sbb
push
and
stc
arpl
jl
inc
enter
hlt
mov
xor
jle
lods
repnz
cwtl
test
aas
cwtl
fcomip
adc
or
fidivrl
dec
sti
dec
cmp
bound
add
inc
mov
add
bound
xorl
gs
sbb
test
adc
addl
lcall
sub
pop
pop
ret
xor
xchg
nop
inc
ds
pusha
pop
ret
stos
mov
addr16
cmp
jbe
xchg
pop
pop
cmpsb
inc
and
subl
je
xor
jge
insb
mov
inc
std
inc
pop
ffree
adc
mov
mov
jmp
inc
in
aam
out
inc
xchg
neg
xchg
mov
inc
ret
out
xor
aam
mov
scas
cs
cmp
repnz
stc
ja
loop
je
mov
xchg
or
adc
lods
enter
mov
dec
push
pop
inc
adc
or
repnz
pop
testl
jl
push
push
push
jmp
mov
incb
adc
mov
movsb
rcrl
adc
cld
push
jmp
push
testb
adc
mov
test
aas
imul
lock
mov
pop
jnp
adc
mov
sub
std
arpl
mov
in
ds
pop
testb
push
lods
pop
xor
int
sub
pop
shlb
push
inc
sahf
xor
daa
pop
inc
or
popf
out
xor
mov
jg
sub
add
jb
test
cmp
pushf
xor
mov
push
mov
push
mov
hlt
xor
inc
cmpsl
dec
repnz
sahf
pop
aad
xor
sbb
sub
sub
sub
test
inc
test
mov
inc
jo
inc
inc
xchg
bound
lahf
push
jb
xchg
lods
cs
out
movsb
sysexit
mov
stos
mov
mov
ret
xor
sahf
idiv
rep
enter
sub
xchg
notb
xchg
mov
into
jne
pop
js
sbb
lea
test
jmp
in
xchg
stos
adcl
or
lods
add
loope
sbb
scas
sti
mov
add
scas
mov
and
inc
ret
movsb
push
fmuls
xlat
xor
add
xchg
mov
mov
jp
add
mov
btr
loopne
xlat
loope
and
push
and
in
jno
add
out
sbb
pop
sub
insl
imul
stc
inc
dec
push
mov
gs
lds
icebp
mov
sbb
cltd
in
inc
jne
cmp
divb
subb
push
adc
cmp
xor
dec
dec
ljmp
xchg
and
cmp
xor
push
pop
negb
add
mov
addr16
movb
int
pop
and
pushf
in
jae
jg
add
sar
xchg
loope
dec
div
lret
fisubrs
lods
xor
lds
popa
stos
scas
xorl
pusha
std
add
cmp
idivb
fsubrp
ret
add
add
jns
mov
jne
imul
xor
fwait
mov
or
push
stc
pop
mov
stos
sbb
jl
mov
and
loope
xchg
cmp
mov
popf
or
pop
mov
sti
scas
push
movsl
mov
arpl
and
xor
pop
add
push
pusha
sti
inc
add
pushf
mov
popa
daa
and
lods
pop
sbb
pop
leave
fwait
out
mov
inc
xchg
or
sti
sahf
mov
adc
fmuls
das
xchg
vmovd
sub
in
shlb
pop
cmpsb
daa
sbb
pop
stos
xchg
push
xor
push
lods
in
mov
loop
repz
push
arpl
inc
in
arpl
mov
les
add
ficoml
ss
fcoml
mov
arpl
mov
cmp
pop
std
fidivrs
xchg
mov
rol
mov
lods
and
pop
or
sub
xor
jg
xlat
cmp
add
loopne
pop
jae
sub
jg
inc
les
imul
xor
sub
add
mov
outsl
aaa
dec
ljmp
pop
bound
test
in
insl
jns
shrl
mov
das
sub
es
lret
mov
lea
add
and
in
lock
or
or
mov
adc
xor
jae
or
pop
pop
push
in
ss
add
xchg
cwtl
in
in
jl
iret
xchg
mov
jecxz
enter
push
das
cmp
scas
iret
xchg
sti
cltd
or
add
mov
je
lods
fld
lcall
outsl
add
mov
es
ljmp
push
xor
sbbb
push
mov
out
adc
add
jl
dec
pop
and
jns
jl,pt
mov
pop
pop
icebp
push
int
incl
fisubl
aad
lahf
jp
int3
mov
std
push
popa
jbe
movsb
jo
les
dec
push
xor
popa
pop
sbb
pop
mov
mov
xchg
movsb
es
shrd
pushw
daa
imul
fiadds
push
dec
jle
nop
mov
clc
inc
and
mov
int
dec
pop
add
ret
pmullw
movsl
jbe
and
bnd
xor
rcr
popf
rcl
or
xor
jb
adc
cmp
push
sbb
mov
cmpsl
shr
mov
stc
aas
or
out
cmp
ja
adc
jae
scas
mov
sti
popa
hlt
push
mov
rorl
or
mov
sub
test
pop
push
adc
cli
and
xorb
or
push
in
sahf
movsl
scas
sbb
inc
icebp
lahf
mov
data16
xchg
and
mov
fdivrs
sbb
nop
into
push
mov
dec
ja
testl
mov
push
shll
xor
jno
cmp
js
lds
mov
ret
sbb
test
iret
mov
xor
pop
inc
lret
cmc
aam
adcl
xlat
pop
pop
es
cmc
orb
ljmp
and
addr16
xor
enter
xor
cli
adc
cmp
lahf
in
pop
inc
pop
adc
lock
rcrl
cltd
rorb
mov
push
cmpsl
and
sbb
cmpsl
ss
lret
or
sub
mov
sti
cmc
xor
out
call
xlat
xor
xchg
fildll
loopne
ret
das
gs
cltd
mov
cltd
test
int3
cmp
mov
add
scas
ds
adc
sbb
inc
pop
push
xor
insl
adc
push
sub
callw
test
jo
sahf
pop
cmpl
xchg
inc
dec
ja
mov
mov
mov
fsts
cmpsl
repz
out
mov
pop
fnsetpm(287
cmpb
iret
mov
into
clc
lret
mov
xchg
stos
aam
adc
orl
leave
jbe
mov
push
sub
sbb
shl
push
in
jb
push
cld
pop
push
cmp
mov
dec
or
dec
ret
jmp
or
icebp
inc
ss
push
popa
xchg
mov
xlat
idiv
or
push
mov
aas
sbb
mov
push
jnp
iret
cmpsl
lahf
cli
sbb
mov
je
push
xchg
es
xchg
sbb
push
daa
ss
and
sub
lret
imul
jp
sub
xchg
cmpsb
pop
sub
insb
popf
jb
or
fmuls
lods
xchg
and
lret
insb
xlat
xchg
or
xor
cmp
adc
mov
sbb
sahf
int
ljmp
dec
inc
push
mov
add
mov
add
inc
data16
cmc
sbb
xor
adc
xor
loope
and
movsl
rcll
xor
mov
dec
dec
pop
lock
lahf
std
mov
xchg
test
aaa
mov
xchg
dec
dec
mov
fldcw
cmc
xchg
cmp
dec
and
jmp
into
mov
loope
ss
push
lret
pushf
ficomps
push
sahf
daa
fimull
subl
pop
pop
out
fwait
cmpsb
mov
shlb
mov
test
ret
dec
scas
cld
jno
mov
cs
xor
aam
shl
std
test
sub
stos
dec
xchg
sub
xor
mov
add
test
ja
repnz
das
cmp
movsl
mov
adc
dec
test
sbb
pop
call
mov
inc
mov
bound
lea
and
jno
xchg
repz
cs
nop
cmp
sbb
pop
cmp
cli
jecxz
cmpsl
dec
pop
ljmp
shr
lods
call
jo
bound
add
and
dec
cltd
aas
loopne
lcall
fwait
sarl
jns
xlat
push
mov
lcall
aaa
mov
inc
aaa
inc
mov
xchg
mov
divb
xchg
stos
fwait
xchg
inc
and
jg
inc
xor
mov
js
rcrl
push
imul
mov
rorb
test
fisttpll
outsb
addr16
adc
jmp
add
ja
jge
cwtl
je
push
inc
mov
xor
movsl
cmp
cmpl
pop
inc
push
dec
xchg
mov
add
rclb
xchg
outsl
jge
por
mov
push
pop
lds
loop
xchg
jmp
test
in
xchg
pop
aad
xor
daa
data16
mov
jnp
test
sub
and
roll
scas
pop
icebp
test
add
sbb
in
cmpsb
aad
movsl
lods
and
inc
in
push
inc
inc
mov
sub
icebp
jnp
ret
fisubrs
je
dec
aad
rcrb
cmp
mov
test
dec
loop
xor
arpl
sbb
pop
pop
push
xor
rclb
mull
sarb
lcall
stos
idivb
mov
mov
dec
enter
mov
mov
xor
cmp
pop
dec
shlb
mov
xchg
mov
enter
scas
mov
dec
inc
add
test
adc
xchg
popf
popa
push
hlt
sub
mov
adc
inc
cmc
scas
lds
movsl
mov
movsl
fildll
popf
sbb
mov
popl
mov
inc
sti
test
sub
sbb
push
test
sbb
push
mov
inc
and
add
mov
cmp
sbb
pop
sub
xor
in
push
cltd
dec
into
cld
and
insl
out
xor
inc
xor
mov
loopne
shrb
je
cmp
jge
in
out
sbbl
jno
ljmp
pop
sbb
sub
scas
cli
scas
cmp
aad
xchg
xor
int
push
cmp
dec
dec
mov
imul
mov
ret
stc
movsl
aam
rolb
mov
push
call
cmc
cltd
insl
pushf
xor
inc
mov
dec
and
sub
cmp
repz
mov
dec
clc
sub
lods
cmpsb
cmp
xor
and
add
push
push
data16
mov
jne
mov
lret
mov
sub
jno
xlat
pop
add
cld
rorl
push
sbb
mov
in
jo
iret
sbb
in
js
xor
jb
push
cmc
testb
leave
push
test
out
inc
jecxz
scas
pop
fdivl
xor
fldl
xchg
mov
daa
cmp
fistpl
jo
and
cld
std
sbb
xor
push
aaa
out
out
aaa
cltd
jp
inc
dec
cmp
pop
pop
aas
cs
leave
add
lret
repnz
loop
stos
daa
sbb
inc
dec
mov
mov
xchg
add
mov
sti
shrb
int
lods
add
xchg
xor
and
gs
popa
xlat
cmpsb
repz
pop
leave
add
fadds
push
out
mov
pop
cmp
rol
mov
iret
push
ret
in
jl
cmpsl
fists
enter
mov
sbb
sarl
outsl
mov
sahf
icebp
dec
jb
rcl
inc
xor
or
jmp
fmul
mov
lret
das
push
neg
xchg
and
or
sub
cs
mov
popa
fdecstp
pop
cmc
pop
push
ficomps
imul
mov
ljmp
add
out
je
push
js
xlat
sub
jbe
xchg
or
cmp
xor
test
xor
aas
jne
movsb
pop
sub
mov
mov
inc
pop
es
pop
lock
fstpl
ja
inc
xchg
xor
test
mov
inc
idivl
and
dec
pop
adc
sub
es
xor
adc
jo
fcompl
in
stos
hlt
in
push
push
jo
inc
leave
test
sbb
bound
insb
sbb
pop
test
jp
jge
clc
jmp
fidivrl
lret
out
mov
mov
dec
push
push
movsb
lahf
sbbl
xchg
fsubs
repnz
mov
ljmp
jle
dec
cli
push
or
add
shl
mov
aas
mov
dec
addl
inc
pop
cmp
sub
adc
xor
fldt
or
cli
mov
mov
jns
cld
out
mov
add
subb
jmp
mov
fcompl
inc
scas
xlat
aam
cwtl
pusha
lret
dec
lret
cmp
ljmp
aas
nop
mull
fwait
std
jmp
add
inc
outsb
adc
loop
arpl
lcall
cmpsb
jg
inc
out
add
xor
lret
ljmp
in
hlt
mov
adc
fists
push
popf
test
popa
cmpsb
mov
test
mov
movsb
push
push
sti
adc
xor
in
call
loopne
cmpsb
std
lcall
scas
dec
and
scas
pop
dec
arpl
jle
sub
and
push
add
fiaddl
pop
dec
pop
adc
ficomps
jno
out
addl
outsb
sub
int3
ja
insb
scas
inc
int
pop
or
sbbl
mov
bound
icebp
xchg
push
sub
fnstcw
enter
mov
cmpsb
push
cltd
xchg
sbb
clc
loopne
dec
popl
jbe
mov
pusha
test
mov
movsb
movsb
sbb
jnp
lods
insl
xchg
and
adc
dec
mov
outsl
clc
jb
adc
adc
push
jo
mov
adc
pop
aam
rcrb
dec
and
pusha
dec
fnstcw
loopne
cmp
ja
add
jno
cs
lock
gs
or
test
add
imul
add
outsl
jg
xchg
xorl
nop
loopne
dec
cmp
test
cli
and
repnz
inc
sbb
pop
xchg
cmpsl
movsl
dec
negb
sbb
inc
mov
dec
pusha
push
sub
outsl
mov
loope
push
into
out
fimull
push
push
ret
cmp
inc
sti
adc
xlat
aad
cld
pop
fsubrl
mov
xor
jae
cmp
shlb
push
js
sarb
mov
sub
sbb
sbb
out
cltd
out
dec
decl
xor
adc
aas
add
enter
cmp
cltd
inc
in
pop
push
or
pusha
xchg
add
pop
pop
jp
gs
inc
cmp
mov
fwait
stc
cmp
fbld
cmp
lds
push
add
cmp
fisttpll
or
pop
je
aam
daa
loop
mov
jl
pushf
aam
pop
fisttpll
mov
iret
mov
data16
test
mov
cmp
int3
mov
pop
cld
cmp
leave
lret
add
into
mov
into
icebp
jb
in
dec
outsb
xchg
mov
pop
mov
mov
popa
adc
addb
fcoms
aaa
fdivrs
jmp
and
repnz
aad
xor
cmp
aad
jnp
cmp
mov
jg
fwait
outsb
pop
jmp
xor
or
fsubrs
daa
dec
xchg
cs
or
imul
adc
add
mov
aas
adc
loopne
push
mov
ret
iretw
fdivrl
mov
mov
js
fsubs
mov
ds
outsb
mov
into
jmp
push
jnp
aam
sub
add
push
push
lret
repz
daa
das
in
leave
cmp
cmp
mov
push
shlb
sub
cmp
daa
pushf
sbb
mov
pop
sbb
call
xchg
jge
loope
aam
mov
push
mov
addr16
ret
cmp
inc
pushf
cwtl
stos
xchg
sahf
sbb
adc
and
xchg
enter
loopne
mov
loope
jg
mov
sbb
push
mov
in
xchg
nop
jne
leave
scas
call
int3
jl
fdivs
aas
pop
das
cmc
rcr
icebp
js
and
mov
movsl
jmp
bound
adcl
cld
hlt
std
enter
mov
mov
or
cmp
pop
pop
addr16
mov
scas
sub
xor
xor
cmp
imul
xchg
or
add
cwtl
inc
in
sahf
inc
inc
mull
mov
mov
or
and
sbb
mov
lret
sbb
push
out
orl
lahf
add
iret
fimuls
aas
sub
mov
mov
jb
cs
push
add
dec
xor
mov
or
daa
xchg
nop
xchg
xor
outsb
and
cmp
xor
lea
lods
in
jmp
mov
mov
cli
and
ja
dec
add
jb
push
movsl
jecxz
and
scas
push
push
mov
divl
mov
inc
sbb
sbb
lods
and
push
cld
sbb
add
incb
sbb
and
and
ret
mov
cli
mov
push
repnz
fiadds
loopne
inc
or
gs
adc
lods
cmp
ficomps
mov
arpl
mov
mov
xlat
ja
scas
insb
xchg
loop
pushf
fstp
scas
push
xchg
add
push
xor
call
cli
lock
mov
aam
fstl
pop
insb
add
sti
fadds
dec
outsl
loope
push
cwtl
aaa
dec
mov
out
mov
inc
pop
fisttpl
mov
sub
dec
add
jmp
sub
mov
and
cmpsl
in
inc
mov
ret
and
loopne
lret
mull
adc
pop
pop
mov
or
outsb
jne
inc
push
cltd
cmp
fldpi
leave
out
loope
int
movsl
sqrtps
mov
cmc
xor
jo
inc
and
popa
pop
jno
dec
cmp
popa
mov
mov
pop
das
loop
mov
nop
sbb
pop
imul
jmp
aas
rcr
cltd
popa
jo
aad
mov
xor
psubusw
dec
sub
gs
pop
xchg
mov
cmp
subl
or
adc
scas
cmp
movsb
cmp
inc
mov
mov
imul
dec
push
mov
iret
enter
add
cs
sbb
mov
aam
gs
jecxz
pop
in
dec
scas
push
xor
shl
aad
lret
pop
das
add
outsb
call
clc
or
inc
mov
xchg
popa
fwait
imul
inc
fistl
cmpsl
adc
push
test
xchg
fstps
dec
hlt
into
hlt
leave
shlb
sub
mov
pop
nop
movsl
test
fcoms
jb
xchg
insl
dec
test
inc
cmpsb
stos
xlat
cwtl
out
out
bound
push
jl
add
int3
xchg
mov
aam
leave
sbb
xor
mov
lods
data16
pop
xchg
loop
insl
dec
jp
adc
xor
dec
xchg
pop
out
sbb
adc
cmpsb
ret
or
sbb
sahf
mov
add
push
loope
shl
xchg
push
or
push
dec
adc
sub
lods
shrl
cmp
aaa
out
xchg
jp
lret
out
jp
int
and
mov
xchg
jnp
adc
xchg
in
outsl
jl
push
imull
pop
in
nop
jnp
in
insb
inc
hlt
gs
mov
imul
sub
cli
or
add
fcmovu
fnstcw
dec
jnp
out
mov
pop
dec
scas
test
push
shll
subl
sub
scas
shlb
adc
sbb
in
fwait
mov
bound
mov
sbb
lret
jg
fs
jno
lods
push
popf
insl
dec
jbe
scas
repz
xchg
sarl
inc
push
sub
dec
divl
mov
nop
mov
cld
mov
mov
xchg
lcall
xchg
popf
xor
inc
rol
shrl
push
sub
jb
cmp
es
lds
and
in
rorb
sub
sub
mov
and
popa
cmp
stos
mov
dec
int3
inc
inc
inc
pop
jge
pop
shl
jne
sbb
imul
shr
mov
stc
loope
pusha
shl
pushf
fldt
pop
inc
jbe
xchg
xchg
inc
fwait
cmp
cltd
adc
fnsave
xlat
popa
push
loop
sub
es
in
dec
push
jmp
xlat
sti
and
fbld
jno
push
xchg
arpl
sbb
xor
xchg
mov
pop
xchg
in
outsl
mov
loopne
fstpl
cmp
loopne
and
jl
sub
jmp
jp
sub
mov
cwtl
out
stos
mov
mov
loopne
mov
cs
sub
fcmovbe
lods
push
jo
ja
inc
lods
xchg
mov
arpl
cmp
xchg
loope
inc
xchg
out
push
inc
pop
test
repz
push
inc
fdivp
shrd
xchg
insl
jmp
push
popa
jmp
fnstenv
sub
cmp
lods
lock
or
mov
or
fidivs
sbb
and
sub
push
insb
push
push
jo
and
fstl
add
movsb
adc
mov
js
ret
js
shlb
test
arpl
push
push
cs
mov
inc
pop
cli
mov
or
loopne
mov
hlt
in
jmp
jp
mov
or
ja
jns
shrl
sbb
mov
xchg
orb
push
add
arpl
inc
mov
push
push
lock
rcll
dec
xchg
xchg
mov
xchg
sbb
fiaddl
inc
negl
in
popa
ret
jge
add
or
mov
decl
mov
jge
inc
pop
sbb
out
pop
in
push
dec
or
push
es
mov
repnz
nop
out
add
mov
mov
inc
shlb
fisubl
arpl
popl
mov
dec
pushl
add
xor
xor
notl
and
repnz
daa
dec
sbb
push
jp
mov
rcrb
jg
js
push
test
fcmovnu
sub
shrl
jnp
jmp
or
sti
mov
sbb
sbb
test
pop
sub
fiadds
call
inc
movsl
imul
inc
ficoml
pop
cmp
mov
lods
popf
xor
sti
aas
pop
test
pop
dec
roll
mov
jb
test
mov
data16
adc
mov
cmp
mov
fidivrs
mov
pop
ja
pusha
mov
pop
sbb
mov
jl
mov
rorl
mov
inc
xor
sbb
push
pop
cwtl
pusha
jbe
xor
push
movsb
scas
jb
add
nop
lods
add
jl
test
test
push
fsubrp
pop
and
push
fsubrl
enter
push
and
lods
cmp
stos
adc
es
ljmp
rcl
jnp
lahf
into
xchg
xchg
push
in
arpl
pop
adc
popa
ret
jg
loopne
addr16
sbb
jp
add
loope
movsb
mov
test
mov
inc
movsb
rorl
mov
add
out
push
test
cmp
test
ja
in
push
xor
stos
into
stos
fwait
scas
jecxz
stos
test
and
sahf
dec
iret
cld
sbb
sbb
push
lret
popa
mov
sub
imul
xchg
adc
cmpsb
dec
pop
sbb
js
dec
sahf
lea
ret
das
xchg
jne
xor
add
inc
lahf
fwait
push
shr
mov
repz
cwtl
leave
inc
jno
xor
xchg
andl
and
fsubp
mov
std
lods
push
or
and
ret
lcall
sbb
into
jbe
xchg
std
leave
in
sbb
xor
pop
leave
shrl
sbb
lds
cmpsb
repnz
push
lret
inc
daa
cmpl
fcmovnbe
scas
lods
das
pusha
fwait
jle
mov
cmp
xor
jle
adc
push
add
aaa
lret
pop
fwait
inc
out
lea
imul
jns
jge
mulb
xchg
xchg
jae
in
inc
and
dec
mov
dec
nop
push
jecxz
fstpt
iret
mov
test
arpl
lods
dec
arpl
dec
out
ds
inc
fsubrs
xor
jl
gs
idivb
push
cli
data16
adc
ja,pn
arpl
imul
es
loopne
jb
xlat
dec
jmp
movsl
sub
stos
int3
ljmp
insl
push
fidivl
or
dec
shlb
std
push
jmp
mov
mov
icebp
and
dec
stc
scas
mov
sbb
mov
mov
add
pusha
cltd
inc
sub
add
and
nop
or
rcr
mov
hlt
add
shll
decl
test
repz
mov
shlb
mov
xchg
cmpsb
push
ud1
mov
and
mov
loope
xor
push
sbb
mov
inc
xchg
jns
jmp
jmp
ljmp
das
jbe
xchg
lret
enter
and
dec
mov
inc
clc
je
inc
adc
je
or
xor
jnp
loop
jl
inc
ss
std
sbb
bound
pop
lret
mov
push
mov
stos
and
das
fistps
dec
cmp
pop
insl
fisubs
and
inc
add
out
pop
leave
xor
lods
pop
mov
mov
mov
flds
ret
mov
sub
mov
imul
mov
cld
js
test
mov
orb
pop
add
and
xor
inc
push
jmp
jecxz
mov
loop
mov
fwait
or
into
jecxz
scas
movsb
negl
add
push
loope
jbe
orl
mov
xchg
cmp
jno
push
leave
daa
dec
imul
mull
jb
xlat
rcr
jo
jl
cwtl
scas
sarl
pushf
mov
xchg
out
inc
movsl
out
mov
push
dec
mov
cmp
cmp
inc
jmp
dec
mov
aam
xor
andb
out
loop
mov
cmc
sub
mov
add
add
cltd
xor
inc
inc
sbbl
addb
in
ds
fwait
jbe
fmull
xchg
pop
sub
subb
dec
subl
fidivrl
adc
popf
or
int3
stc
xchg
or
loop
in
jge
out
xchg
fimuls
dec
jle
cmp
ja
sub
out
shlb
push
push
decb
push
js
xchg
fs
andl
cld
or
dec
in
fbstp
xlat
xchg
ja
popf
mov
out
mov
lcall
fidivrl
ja
add
cmc
leave
push
popf
fsubr
stos
bound
cmp
mov
mov
push
jecxz
ret
xor
aam
aas
sbbb
mov
adcl
pop
loopne
and
mov
popa
loopne
dec
mov
inc
jnp
xchg
lods
jg
jb
lods
loopne
cld
into
mov
cwtl
mov
cmpsl
out
sbb
mov
mov
test
test
scas
xchg
adc
stc
pop
ret
and
test
mov
loopne
call
lock
mov
inc
xor
sub
xchg
addb
mov
in
push
jecxz
sbb
dec
cmp
ja
in
pop
mov
dec
push
fists
add
in
shll
push
push
rorb
loope
pop
out
pop
pusha
jno
addb
cmp
imul
inc
dec
mov
lcall
sub
xor
cmp
mov
gs
negl
test
loop
jge
rcrb
cmp
xor
lret
fsubrp
mov
lods
insb
mov
push
add
in
sar
pusha
xchg
dec
adc
mov
xchg
stos
add
pop
inc
adc
orl
sahf
cmp
lods
dec
sbb
shll
aad
std
add
subb
push
jbe
lds
and
xor
mov
fisubrl
cld
addr16
and
mov
leave
sub
cmp
js
xchg
iret
lods
sub
jne
bnd
pop
cwtl
loope
testb
daa
cmp
mov
daa
mov
mov
or
mov
aaa
int
lds
fsts
std
sbb
sbb
add
push
xchg
mov
adc
mov
cmpsb
sub
xor
rorl
test
cli
push
mov
sarl
fsubs
mov
mov
or
lcall
loopne
mov
aaa
sub
loop
call
jecxz
cvtpd2ps
enter
cltd
cltd
push
sub
jecxz
scas
jmp
rolb
jecxz
push
mov
mov
mov
pop
add
jg
xchg
ds
pop
imull
inc
push
push
lea
mov
arpl
ljmp
push
push
or
inc
adc
add
pushf
ja
neg
insb
inc
stos
in
int3
cmp
sbb
aas
rcll
or
pop
lret
lods
push
add
xor
das
shl
mov
lret
dec
xchg
xchg
jl
outsb
clc
jle
push
mov
cmpsl
jge
dec
das
cmpb
sbb
push
out
ret
mov
or
add
enter
and
cmpsl
mov
xor
cmp
js
adc
pushf
loop
adc
rcrl
sbb
arpl
xor
stos
sbb
imul
pop
cmp
sbb
stos
subb
sub
icebp
adc
icebp
mov
xchg
iret
sbb
cmp
dec
pushf
xorb
inc
ss
inc
mov
clc
lret
fwait
sbb
movsl
jmp
imul
jne
jg
scas
mov
cltd
loopne
idivb
lock
das
addb
pop
gs
jb
mov
notb
xor
lods
xchg
mov
mov
cmpl
xchg
aaa
and
popf
es
pushf
rcl
popf
sti
mov
mov
jge
out
movsb
aaa
fabs
push
lahf
xchg
lods
aad
int3
test
cmpb
inc
out
push
je
cmp
mov
and
loope
test
sbbb
inc
mov
mov
jecxz
sub
pop
in
sbb
push
nop
mov
xor
cmpsb
repnz
add
and
mov
lret
int3
inc
outsl
sti
mov
mov
enter
push
pop
jb
in
dec
fcoml
sbbl
xchg
mov
in
dec
or
adc
sub
pop
xlat
imul
rorb
js
sbb
mov
pop
adc
jle
ljmp
pop
in
push
jmp
daa
mov
stos
fcoml
mov
mov
sbb
pop
sbb
lret
lds
mov
or
cmp
jp
pop
mov
cmp
or
rolb
xor
faddl
in
out
js
mov
jecxz
shll
sahf
icebp
loope
dec
xor
xchg
mov
xchg
data16
test
lret
movl
ret
pop
mov
or
jno
lcall
insl
xchg
out
or
xchg
dec
xor
xor
cmp
fnstcw
repz
int3
inc
inc
or
jno
jo
ret
xchg
inc
push
mov
mov
push
xorl
repnz
mov
cmp
add
add
add
mov
inc
mov
add
fisubrs
fcoms
cmc
out
fsubr
shll
and
sub
adc
sbb
push
movswl
adc
mov
xor
sub
stos
in
clc
ret
mov
insb
sbb
sarl
sub
cs
inc
inc
loope
sbb
push
cmp
loopne
mov
lahf
cmp
or
cmc
iret
or
jno
cwtl
jnp
shl
sbb
mov
js,pt
mov
sbb
call
mov
mov
push
xchg
fdiv
in
push
arpl
insb
or
movsb
int3
orb
mov
mov
cmp
stos
fidivrs
clc
int
fisubrl
and
xor
popa
addr16
adc
les
stos
test
push
lods
stos
mov
xchg
sbb
test
sbb
pop
aaa
mov
pop
mov
hlt
jne
cmp
das
testb
adc
divl
call
les
inc
int3
cmpsb
add
aas
shll
test
imul
pop
ja
into
pop
mov
ret
dec
cwtl
cmp
ret
inc
dec
in
lods
jno
xchg
stos
fistps
sbb
fcomi
jecxz
push
orl
arpl
mov
mov
mov
inc
dec
xchg
fsts
mov
jl
pop
int3
je
sub
fmuls
mov
pop
imul
lock
iret
dec
lcall
daa
push
sub
shll
lds
repnz
int3
dec
xor
movsb
dec
xchg
in
add
jne
cmp
mov
and
mov
adc
popf
cmp
cmp
inc
mov
lock
add
xor
mov
add
jnp
pop
pusha
sub
push
add
or
push
popa
xchg
cmc
mov
cmc
ja
xchg
push
mov
mov
ja
xchg
fsts
icebp
or
out
xor
jle
out
sub
jae
mov
xor
inc
inc
pop
pop
sub
repnz
xlat
push
test
icebp
into
pushf
mov
push
push
sub
push
xchg
cmp
mov
insb
mov
inc
inc
or
les
push
in
xchg
dec
mov
xor
mov
std
xchg
inc
and
fldl
aas
mov
fidivl
andb
xor
xchg
add
call
out
sub
roll
jge
sti
sub
addl
xchg
stc
adc
jg
sbb
jno
jecxz
in
shr
mov
roll
clc
stos
mov
aam
sarb
push
lods
xchg
aas
sbb
ficompl
mulb
lret
outsl
outsb
mov
pop
cmp
push
mov
imul
shr
mov
nop
in
pushf
mov
cmpsb
push
xchg
data16
cltd
xchg
mov
mov
ja
addr16
outsb
gs
shll
xchg
insb
sbb
push
movsb
jp
jmp
mov
cmpsl
gs
test
sti
or
es
ficoms
cmp
aam
cwtl
bound
mov
mov
mov
test
cmpsb
adc
add
and
sbb
pop
mov
sub
cmp
add
fnstenv
pop
pushf
in
mov
jo
xor
and
mov
repnz
pop
iret
repnz
test
lock
popa
aas
iret
mov
xlat
mov
jp
shrb
push
inc
mov
or
imul
jns
scas
mov
mov
into
jl
pop
outsb
mul
sub
mov
push
pop
adc
roll
pop
mov
pop
test
daa
rcrl
pop
stc
or
lds
aad
sub
lods
clc
dec
sub
jp
xchg
insb
jl
dec
sbb
xor
scas
push
aas
and
xchg
pop
int
mov
out
jmp
xchg
or
arpl
shlb
repz
cmp
pop
cmpsl
daa
pop
bound
add
inc
pushf
jae
push
pop
mov
test
rcr
inc
cmc
dec
adc
push
jge,pt
jno
jp
push
mov
jmp
lds
jge
nop
test
sub
pushl
test
shlb
gs
push
and
xchg
inc
xchg
in
dec
lods
inc
stc
push
xchg
and
js
incl
or
ds
test
fisubs
imul
test
jp
mov
js
or
mov
cmpsb
mov
jb
or
je
repz
fwait
sub
push
fldcw
stos
popa
sub
out
test
pop
cmp
rcr
mov
jmp
lods
imul
movsb
or
xor
jae
lock
mov
call
fldl
pop
shll
mov
or
adc
stc
rorb
push
xorb
test
xchg
clc
dec
pop
pop
outsb
rolb
jno
push
in
rclb
add
and
js
aam
test
dec
adc
bound
fdivl
mov
out
sub
cmpsb
jae
push
testl
add
pop
repnz
loop
jle
popf
data16
sarl
cld
addb
inc
pop
hlt
sub
xchg
ds
xchg
sbb
inc
pop
push
popf
aas
shrl
sbbb
inc
sarl
insl
fcompl
ja
outsl
jmp
insb
xor
jle
mov
push
inc
mov
sub
add
sbb
push
jge
or
lret
adc
inc
movl
sub
xor
inc
or
sbb
fistps
es
or
stc
mov
fimuls
adc
aas
pop
xor
loope
jb
and
and
push
popf
into
clc
lahf
js
inc
jmp
pop
cmp
or
pop
out
test
mov
addl
cmpsb
xor
subb
inc
xchg
mov
mov
push
imul
out
xlat
test
adc
iret
cwtl
pop
xchg
mov
pop
data16
test
ds
pop
sbb
xor
mov
enter
shrb
cli
mov
inc
and
aam
xor
lods
pop
sub
adc
movsl
cli
fisubrs
outsb
fdivrs
addl
stc
clc
adc
pop
fdivrp
pop
pop
sub
orb
pop
cmpsb
xchg
data16
fisttpl
adc
cmp
lret
jbe
pop
lock
pop
scas
add
jp
stc
adc
cmp
inc
mov
scas
mov
cltd
sahf
lret
jle
or
mov
xchg
add
mov
or
mov
test
dec
loopne
cmp
jnp
pusha
dec
mov
and
xor
stc
cmp
fs
pop
ljmp
inc
leave
and
cmp
inc
xor
add
dec
jge
mov
shll
push
js
cmp
lret
pop
add
pop
xor
push
push
or
jmp
dec
and
jb
test
push
andl
fistpl
insb
jno
pop
sub
sbbl
push
outsl
hlt
sub
cwtl
and
sub
in
sub
jmp
cmp
hlt
inc
sub
mov
push
mov
leave
jp
xor
mov
mov
mov
mov
subb
pop
xchg
scas
in
out
sbb
mov
mov
xchg
or
scas
out
dec
xchg
adc
out
jns
add
test
clc
psubd
sub
xor
sub
add
addr16
mov
jae
xchg
mov
xor
mov
cmp
jmp
xchg
and
cmp
mov
roll
or
xor
ret
fcmove
out
dec
sbb
rorl
pop
stos
inc
mov
jns
ss
insl
or
and
loopne
or
cmp
mov
in
sbb
pop
xchg
scas
lahf
pmulhuw
or
jg
fiaddl
ret
fisttpll
rcl
ss
and
sahf
add
sbb
aaa
or
xchg
xor
push
punpckhdq
sub
pushf
push
roll
in
and
pop
pop
movsb
cltd
pop
fcmovne
push
data16
xchg
pop
lds
sub
xor
xchg
push
sbb
leave
ja
jns
push
idiv
mov
xchg
mov
ret
dec
inc
and
jge
cmp
outsl
sbb
je
sbb
shrb
mov
jo
stos
push
mov
xchg
shlb
jae
outsl
dec
das
shl
sbb
xor
sbb
cmp
test
les
imul
leave
dec
addl
int
pusha
loop
mov
pop
mov
stos
in
fs
jl
ret
dec
mov
jle
das
mov
adc
mov
cmpsb
mov
push
push
lahf
inc
andl
xor
jns
cmpsl
iret
inc
push
iret
in
fadd
fwait
xchg
test
mov
cld
out
test
rorl
sub
aas
int3
and
jb
mov
loop
jmp
ljmp
pop
xchg
fnsave
and
jae
xor
sub
fs
jecxz
imul
fcomps
leave
xchg
sub
rcrl
pop
sbb
cli
in
ja
inc
js
rol
insb
arpl
cltd
cmp
xchg
sbb
hlt
movsl
mov
lock
adc
mov
pop
jno
out
sub
pop
lahf
push
test
mov
icebp
pop
push
iret
out
or
ret
mov
xchg
imul
shll
fsub
mov
cwtl
inc
fiaddl
cli
clc
scas
pop
shl
dec
dec
ds
or
sahf
imul
cld
int3
mov
outsl
xor
daa
lods
jle
icebp
sub
pop
out
cld
scas
mov
mov
cmc
jo
aam
popa
cmpsb
rcll
ret
add
andl
push
orb
xor
ja
ljmp
insb
lock
mov
add
popf
jns
aam
call
mov
mov
sub
mov
outsb
mov
repz
insl
or
add
lret
fldenv
in
add
and
sahf
cmc
and
lcall
bound
popl
popf
ss
ds
shrl
pushf
aas
sub
xlat
jae
mov
clc
lcall
rcrl
adcl
dec
dec
imul
mov
xchg
cmpsb
out
xor
imul
pop
mov
popf
fstpl
jmp
xchg
cwtl
test
push
xlat
icebp
or
lcall
arpl
test
orb
mov
fsts
xchg
stc
cli
pop
int3
stos
daa
and
adc
cmpsl
jb
inc
mov
push
dec
xchg
pop
jnp
sahf
jmp
jle
test
sub
stc
mov
and
xor
and
xchg
mov
adc
stc
xor
pop
out
mov
stc
xchg
jp
fsubs
dec
or
sbb
adc
into
push
jl
fnsave
cwtl
pop
das
inc
pop
dec
cmc
iret
stc
jg
in
mov
sub
stos
sahf
pop
hlt
jb
mov
xor
jg
loope
or
and
dec
adc
sbbb
iret
dec
test
sbb
mov
dec
inc
repz
dec
push
dec
sub
cmp
int
cltd
in
lahf
push
pushf
outsb
mov
int3
mov
movsl
push
fiadds
ja
add
test
mov
inc
xlat
mov
push
out
add
dec
jecxz
mov
or
jge
mov
add
jno
xchg
inc
mov
cmp
into
cmp
mov
aam
adc
test
test
and
push
aaa
inc
pop
mov
hlt
add
mov
lcall
fs
mov
gs
xchg
testb
fs
or
mov
push
push
jmp
sub
sbb
cmp
push
test
cmc
scas
add
add
lea
sahf
scas
ja
dec
xor
or
stc
push
xlat
xor
and
aaa
insl
xor
xchg
repz
pop
adc
inc
mov
pop
js
inc
dec
lar
inc
outsl
or
cmpsb
in
pushf
seta
aad
leave
sbb
test
cmp
mov
movb
xor
push
dec
lret
incb
push
movhps
fisubrs
clc
jb
int3
jecxz
push
cwtl
imul
push
call
mov
fwait
in
xchg
movsl
insl
filds
or
test
ficoms
xchg
rorl
adc
sarl
sbb
fists
pop
xor
lods
or
int3
push
sbb
jecxz
mull
aam
inc
loope
aam
scas
add
inc
pop
loope
in
cmc
lds
sti
pop
mov
mov
sbb
into
push
push
sbb
xlat
cmc
jbe
cmp
lods
mov
stc
mov
or
lock
or
scas
push
aad
xor
enter
sub
imul
out
je
push
int3
or
jge
pop
ljmp
mov
sub
or
andb
inc
or
ljmp
imul
jnp
negb
test
std
adc
or
inc
cmp
cmc
fcoml
pop
jb
push
imull
add
in
adc
enter
jg
inc
les
push
pop
or
mov
mov
lock
filds
mov
in
aas
add
cli
xor
cwtl
pop
lcall
adc
sub
lea
arpl
jmp
xchg
sahf
jns
mov
adc
cmp
outsb
adc
jmp
mov
das
lahf
mov
adc
pop
popf
dec
fidivl
mov
aas
loop
stc
std
sbb
jmp
ds
xchg
lcall
adc
into
in
inc
out
lret
xor
js
inc
mov
in
xchg
lret
push
mov
xor
ds
dec
push
jecxz
sbb
ja
in
mov
insl
ret
sbb
rorb
test
push
dec
test
jle
cmpb
push
arpl
jmp
lcall
mov
ret
pop
xchg
sahf
mov
cmp
and
out
lcall
in
adc
inc
shlb
stos
lods
out
std
pusha
push
leave
lret
mov
pop
add
dec
popf
rcrb
je
fwait
les
outsb
stos
fcoml
add
inc
dec
shlb
out
js
pop
hlt
es
push
stos
or
mov
mov
sub
or
sub
in
test
test
mov
clc
mov
sub
imul
push
xor
cs
add
mov
dec
test
cltd
mov
sub
fwait
mov
jecxz
les
dec
xchg
xor
or
add
sbbl
nop
mov
xor
sbb
add
shll
cs
sub
cld
jmp
adc
out
cwtl
mov
mov
out
mov
jle
mov
test
ret
and
scas
popf
rep
in
aas
xchg
add
add
cmpsb
pop
push
add
xorb
into
xor
sbb
jne
pop
and
add
repnz
scas
pop
sbb
jnp
mov
test
iret
das
mov
dec
pop
mov
inc
out
loopne
flds
pop
jmp
popa
dec
sub
xorb
movsb
mov
jp
pop
dec
adc
jo
nop
in
insl
adc
and
mull
scas
bound
dec
or
hlt
cmp
out
ffree
out
push
addl
push
xchg
jnp
in
sub
stos
dec
out
mov
outsb
fwait
pop
mov
pop
loop
pop
jbe
add
inc
and
mov
pop
cltd
push
dec
jne
ret
push
adc
jp
push
jmp
arpl
mov
loopne
pushf
mov
sub
dec
les
pop
rorl
xchg
cmp
addl
icebp
aas
cmp
call
lods
paddsw
mov
sbb
sub
ss
jge
test
pusha
and
sbb
ficoms
or
adc
ljmp
pop
loopne
daa
jg
push
xchg
push
mov
dec
data16
pop
ror
push
imul
je
jp
clc
mul
xchg
cli
es
xor
mov
cmp
push
ret
cld
jmp
lret
inc
push
inc
sub
xchg
mov
cmp
lds
jbe
and
scas
negl
sub
out
sbb
xor
arpl
dec
and
jae
sbb
mov
inc
add
pop
nop
std
ds
mov
lahf
xor
xlat
out
xor
lods
lock
stc
push
jae
cmp
xchg
jg
fdivrs
jg
inc
ljmp
xchg
xor
mov
sbb
lret
and
jecxz
lahf
cmp
push
aad
jl
inc
mov
mov
jp
push
ret
sbb
mov
shlb
or
cld
mov
iret
push
jl
mov
dec
and
sbb
lret
jle
add
das
cmp
lds
orb
int3
and
fwait
jmp
add
pop
or
sbb
dec
fisttps
inc
mov
rorb
dec
ret
pop
pop
psraw
stos
pusha
ja
dec
dec
xor
dec
enter
stos
mov
mov
jae
pop
inc
dec
mov
lahf
mov
aas
jb
ds
jae
imul
repnz
dec
push
adc
out
cmp
lea
push
pop
dec
jns
aad
cwtl
movsl
fcmovnbe
push
lcall
or
dec
aas
incl
mov
mov
ds
push
xor
dec
jb
out
int
out
in
int
cmp
mov
adc
in
scas
xchg
in
daa
les
rcrb
inc
adc
pop
add
mov
mov
dec
mov
subl
es
mov
loop
add
ljmp
add
in
lods
mov
imul
sub
fisttpll
lea
inc
xchg
cmp
push
or
je
push
popa
lods
push
rcr
imul
imul
mov
lcall
pusha
mov
and
pop
leave
pop
inc
das
lea
lds
mov
cld
shll
aaa
data16
add
dec
in
jecxz
pop
je
cs
xchg
daa
icebp
jecxz
lret
inc
popa
adc
mov
add
push
cmc
add
test
mov
lods
dec
mov
aad
dec
lahf
add
cmp
adc
out
call
cmp
ret
aaa
fnsave
mov
fdivs
pop
mov
mov
dec
xor
jp,pt
dec
addr16
imul
fs
mov
cwtl
xchg
or
stos
inc
popf
iret
cmc
xchg
jge
xor
popf
mov
nop
loop
mov
jle
dec
test
movsb
jle
mov
inc
push
push
inc
push
mov
arpl
test
mov
in
xchg
mov
push
loopne
xor
cmc
adc
mov
sarl
jle
shrl
dec
sahf
cmc
xchg
push
xchg
inc
adc
outsb
push
xor
mov
mov
and
cwtl
xchg
roll
sub
pop
dec
das
inc
jbe
mov
jae
dec
lret
sub
int
xor
nop
jmp
inc
jmp
or
lret
cmp
pop
adc
cmc
ret
sub
or
fmuls
scas
or
mov
push
lock
dec
daa
adc
push
push
jle
and
sahf
fs
idivb
xchg
xchg
insl
stos
fidivs
xor
mov
inc
ljmp
xor
shll
jle
inc
fsubrl
push
xor
inc
pop
test
mov
nop
in
bound
cmpsb
test
mov
inc
mov
push
decl
lret
jp
pop
out
sub
or
std
enter
addr16
pop
cmpl
pop
loope
jae
cld
mov
sbb
xor
lods
stc
sti
outsb
shr
inc
pop
daa
int
mov
les
xchg
mov
mov
mov
imul
mov
int3
pop
movsl
sbb
add
push
push
and
mov
jnp
xchg
popf
xor
xchg
pop
pop
jg
or
les
sahf
pusha
lods
std
pop
sub
stc
out
xlat
stc
sub
out
ljmp
negl
imul
dec
jecxz
in
test
cltd
pop
mov
test
jl
lock
jns
and
jle
xchg
mov
hlt
xor
mov
fcoml
lds
ja
dec
addr16
push
je
xchg
dec
lea
in
js
fsts
out
xor
pusha
fldlg2
mov
add
xchg
push
pop
arpl
jno
pop
aam
adc
push
mov
xor
mov
or
push
add
nop
ja
add
mov
cmp
arpl
mov
lods
lods
xchg
adc
and
add
daa
imul
in
shl
ljmp
outsb
pop
cmc
lcall
cmp
mov
mov
mov
push
push
jo
push
jle
xor
bound
pop
test
or
push
orb
mov
cmc
or
xor
pop
test
inc
fiaddl
lds
cmp
aaa
add
xor
inc
adc
scas
scas
or
faddl
test
nop
in
jmp
dec
dec
enter
push
cwtl
cmp
out
mov
jmp
adc
shl
lahf
xchg
lahf
fisttpll
test
jl
or
stos
jle
loop
aaa
out
dec
mov
in
xor
arpl
xor
mov
jg
mov
pop
or
daa
test
mov
test
xchg
ja
lahf
xchg
iret
mov
out
fucomp
xlat
icebp
add
inc
shll
push
adc
cmp
sub
test
lret
dec
jns
adc
cmc
mov
aas
dec
cltd
xlat
decb
fs
sti
push
cmpsb
addb
inc
mov
cld
mov
out
mov
jne
int3
adc
fldl
ret
scas
lds
les
push
outsb
xor
xchg
clc
lds
dec
dec
mov
pop
clc
and
sbbl
push
xchg
aas
js
jge
add
fs
in
pushf
xchg
lretw
or
pop
push
cmp
fwait
mov
arpl
into
push
dec
xor
lea
jmp
ja
xor
cmp
adc
pop
pop
mov
xor
push
lret
iret
into
nop
pop
imul
es
push
fidivrl
sub
mov
sbb
clc
mov
mov
outsb
movsb
jb
push
or
sar
flds
fiadds
sub
outsl
enter
mov
push
shl
imul
cmpsb
iret
out
lret
cmp
das
and
sbb
adc
pop
xchg
mov
mov
push
aas
jno
sbb
sti
xor
push
xchg
xchg
mull
add
icebp
icebp
push
flds
push
sbb
mov
ja
imul
rcll
hlt
andb
add
mov
sbb
insb
pop
cmpsl
pop
loop
xchg
push
sub
out
xchg
push
inc
jmp
into
das
pop
lea
pop
ret
test
xchg
icebp
push
inc
sahf
sarb
sbb
pop
sbb
out
inc
cli
sub
cli
push
movsb
mov
add
js
adc
jg
sub
pop
pop
and
dec
mov
cwtl
pop
jb
push
and
lret
negl
add
jnp
rorl
popa
mov
ljmp
imul
push
das
sbbl
nop
lret
xor
pop
outsb
stc
pop
jecxz
aaa
mov
je
inc
cs
repz
orb
sahf
inc
je
aad
push
mov
sbb
xchg
in
test
mov
cmp
mov
aas
xlat
xchg
lods
mov
adc
js
jp
jg
insb
insl
aas
pop
sbb
enter
sub
cs
aad
jb
inc
jae
mov
in
pop
adc
xchg
call
insl
jb
xchg
xor
mov
clc
loop
pop
inc
aaa
push
out
data16
mov
imul
ret
lock
dec
xchg
stc
xchg
fmuls
dec
adc
push
ljmp
mov
add
push
or
sar
xchg
out
shr
in
dec
lahf
push
jno
xchg
rcrb
fsubrl
clc
je
fsub
hlt
jns
and
sarl
ljmp
inc
lods
stc
mov
test
mov
xchg
push
fcmove
int
jle
in
gs
sub
jne
ja
test
fmul
xor
xor
insb
add
mov
dec
fiaddl
sub
repnz
fistps
jl
pop
iret
jb
popa
jbe
and
rorb
js
into
js
cli
mov
test
out
cmpsb
pop
inc
push
sub
div
xlat
test
stc
into
lods
sbb
iret
mov
jnp
subb
call
add
lahf
int3
call
ret
dec
and
out
mov
and
jne
into
pop
push
mov
sub
icebp
ret
mov
mov
or
fsub
sbb
into
pop
dec
sub
pop
icebp
outsb
jmp
add
or
int
xchg
push
add
fadds
lret
lret
iret
imul
dec
dec
loope
call
cli
inc
jne
lahf
das
test
rcll
sbb
lock
pusha
pop
lahf
cmp
ss
pop
js
push
sbb
sbb
lcall
call
out
jae
in
jp
lahf
mov
sbb
js
mov
or
loope
out
stos
xor
xchg
divb
imul
subl
sub
dec
ljmp
adc
xchg
shrl
rclb
fcmovbe
sbb
pop
inc
adc
or
sbb
and
mov
and
pop
iret
push
dec
jnp
inc
cmp
xor
imulb
xor
mov
outsb
sarl
jmp
enter
jo
mov
loop
out
in
jmp
mov
enter
inc
and
ficoms
mov
nop
add
stc
pop
pop
call
pop
mov
or
add
call
movsl
cmpsl
add
mov
xchg
pop
lock
filds
cmp
les
and
cld
subl
repz
adc
add
jne
es
sarl
fdivrl
ds
out
andl
aaa
jmp
repz
cmpsl
enter
addb
arpl
pop
out
jae
stos
rcr
out
mov
cmp
mov
pop
mov
ja
cs
push
mov
sub
mov
test
stos
sub
icebp
mov
dec
out
stc
movsb
dec
adc
test
dec
rcrb
sub
push
cld
out
jno
sbb
add
mov
lods
hlt
stc
xchg
aas
xchg
dec
popf
dec
popa
loop
imul
inc
cmpsl
aad
dec
jns
pop
xchg
cmpsl
xor
pop
fdiv
sbb
add
mov
mov
cli
shrl
das
mov
mov
in
pop
enter
pop
xor
cs
into
mov
stos
sbb
cmpb
stos
sbb
gs
cmp
loope
jge
mov
and
pop
aaa
arpl
sub
add
enter
mov
repz
dec
inc
je
jle
jbe
shr
inc
and
pusha
cmp
ljmp
cwtl
fisubrs
mov
jle
adc
push
mov
sub
mov
adc
popf
push
jmp
and
aad
sub
jmp
aad
sbb
es
adc
sti
push
jns
and
ja
addr16
nop
ja
push
lea
add
inc
decb
ffree
adc
es
popf
xchg
sbb
frstpm(287
cmp
hlt
ds
and
stos
faddp
test
adc
sbb
mov
into
int3
out
fucomi
jne
pop
and
sbb
add
pop
popa
xchg
adc
jp
mov
cmp
jnp
cmc
sbb
sub
add
mov
jg
jmp
add
cwtl
mov
test
icebp
aas
mov
xchg
xchg
inc
xchg
mov
rcr
bnd
test
sub
add
movsb
push
jmp
es
push
rorb
xchg
add
mov
sbb
pop
imul
push
lret
loopne
pop
jb
xor
ret
addr16
and
xchg
jp
jmp
in
mov
dec
inc
and
out
shll
pop
xchg
or
sub
xor
add
pushf
add
dec
mov
dec
sahf
ja
loopne
addr16
push
push
or
add
les
pop
adc
shrb
xchg
xor
pop
cld
icebp
jg
sub
jns
sti
call
and
fisubs
xchg
ss
xor
and
call
pop
inc
lods
aas
adc
mov
push
mov
dec
inc
mov
pusha
and
mov
xor
stos
and
or
lcall
inc
add
cltd
faddl
fs
je
adc
and
sbb
shlb
aaa
sbbl
xor
lret
pop
xchg
cmc
cmc
xchg
lahf
sti
into
mulb
inc
push
dec
lods
adc
imul
data16
mov
or
stos
xor
outsb
xchg
mov
jmp
fisttpl
push
adc
repnz
in
cmpsl
notl
push
loop
pop
fdivr
jno
cmpl
enter
out
push
inc
lret
dec
jne
idivl
enter
ds
jmp
psrld
test
sarl
sbb
dec
pop
pop
sub
jmp
jno
lds
pop
sub
xchg
fisubrs
stc
fmul
push
int
jbe
mov
nop
aad
adc
or
dec
movsl
lret
mov
loop
mov
pop
pop
xor
addr16
sbb
push
mov
iret
xor
sti
dec
aas
sbb
inc
or
out
fcoml
lcall
out
or
add
cmp
sub
mov
cmp
pop
xlat
pushf
fs
cmp
aas
out
aaa
add
pop
int3
cli
sbb
inc
xchg
sarl
cmc
and
aad
cmp
sbb
mov
pop
arpl
add
mov
enter
lret
and
mov
push
out
inc
cmp
push
cmc
pop
and
fs
mov
out
jecxz
push
in
xchg
push
stos
fstpt
fnstsw
push
addr16
mov
sbb
sbb
cmp
repz
dec
or
xor
inc
and
ret
push
scas
xor
xor
xchg
jmp
push
push
push
mov
shlb
fsts
sbb
xchg
xor
xor
fwait
xor
sbb
es
ret
xchg
mov
adc
push
enter
inc
lret
or
mov
mov
sub
dec
pop
imul
jno
rcll
loope
mov
dec
mov
jecxz
bound
loop
add
repnz
mov
adc
xchg
add
xchg
cmp
cli
xor
add
ja
sub
mov
stc
loop
rorb
or
push
in
cmp
popf
mov
push
scas
shrb
sub
push
sbb
xchg
xchg
iret
jle
cmp
les
inc
roll
sub
adc
sti
out
test
ret
inc
mov
popa
push
das
lods
cmpsl
jle
jns
mov
push
adc
add
mov
push
repnz
clc
or
lret
mov
xchg
jg
inc
int3
loop
fmull
dec
test
add
pop
shl
adc
dec
in
lods
jecxz
cmc
mov
aas
and
inc
sahf
xchg
lret
push
hlt
test
incl
push
xchg
push
push
push
add
jo
fistl
arpl
sbb
testl
aam
mov
adc
out
xchg
jg
pop
xor
and
and
mulb
adc
stos
int
aas
sbb
jmp
and
push
adcb
cmp
xlat
lods
call
adc
cmpsl
insb
mov
mov
bnd
xchg
hlt
or
push
inc
jge
xor
gs
jo
xchg
lock
js
push
mov
sub
pop
and
mov
mov
sub
mov
xchg
bound
fbld
add
jns
out
mov
xor
pop
in
xchg
mov
lret
mov
loopne
mov
mov
sub
sbb
outsb
lea
xlat
mov
pop
out
sub
sub
xchg
shlb
adc
in
out
das
scas
adc
jno
jno
insl
mov
push
jl
xchg
shlb
or
pop
hlt
sub
lods
mov
cltd
and
pop
ja
adc
mov
fidivrs
mov
pop
call
in
ret
pushf
jg
pop
rcrb
inc
aam
inc
rcll
loopne
xchg
mov
out
lret
das
inc
mov
mov
bound
lds
test
jb
cmp
jmp
mull
adc
inc
jns
out
das
lds
xchg
imul
sub
cmp
mov
hlt
loope
nop
ss
out
lods
pop
insb
sbb
dec
out
jae
push
or
cltd
sub
popa
push
lret
mov
xchg
fsubp
cmp
mov
push
test
clc
push
mov
outsl
nop
ja
scas
xchg
xchg
fsts
cmp
mov
lret
mov
ret
jmp
std
shlb
add
icebp
sbb
shll
adc
in
mov
mov
and
pop
jns
out
push
insl
je
shlb
notl
jge
push
adcl
jle
fadds
popa
mov
repnz
xchg
pop
jl
in
cwtl
xchg
rcrl
push
rcll
pop
jne
sub
push
ss
inc
mov
inc
jg
icebp
push
ss
sub
mov
jmp
jnp
test
jge
sbb
lock
in
mov
add
pushl
jge
mov
lcall
adcb
sbb
adc
jae
aad
push
mov
hlt
lcall
ljmp
in
pop
repz
adc
mov
push
push
fisubrs
outsb
out
inc
test
adc
not
test
sub
lahf
jmp
sahf
lock
dec
lahf
add
jmp
adc
repnz
fistpl
sbb
loop
imulb
mov
aas
addr16
jae
in
insl
sti
test
loopne
mov
pop
daa
xchg
insl
sbb
rcll
int
leave
icebp
xor
insb
mov
pop
inc
xchg
cmp
lret
cmp
sub
pushf
adc
out
mov
mov
add
mov
andl
testl
push
dec
mov
dec
push
orb
andl
xor
jmp
inc
and
add
xor
addr16
int3
popf
add
lret
pop
push
pop
rolb
xor
subb
daa
dec
mov
ss
sub
cmp
pop
nop
ficomps
mov
lock
ror
stc
ficoml
sub
xchg
jno
mov
jb
add
inc
cs
xor
pop
std
ljmp
out
cmc
pop
jg
call
lods
pop
pavgb
pop
cmp
xor
aas
leave
loope
jne
cmpsb
xchg
and
out
test
test
xlat
out
orb
adc
sub
pop
cmp
int
pop
aad
daa
or
fiadds
push
and
sub
ficomps
and
xchg
inc
or
in
adc
add
lea
enter
mov
inc
add
repnz
mov
jl
and
loope
mov
mov
dec
pop
cmp
aam
test
pop
fstpl
mov
lods
pop
push
hlt
nop
enter
pop
in
movsb
or
out
mov
jbe
fstpl
fidivs
mov
mov
in
xor
mov
and
sub
mov
in
push
pop
negb
xchg
ds
iret
push
pop
fstpl
xlat
popf
push
lret
xor
push
add
std
aam
push
shll
jb
jl
xor
and
pushf
or
xchg
jmp
mov
ret
fsubr
adc
push
loope
shrl
push
pushf
jo
cmc
push
push
mov
iret
enter
sbb
ret
push
lret
add
pop
in
cli
jp
sub
mov
hlt
xchg
mov
ljmp
test
out
popa
inc
push
sbb
push
shlb
and
mov
mov
mov
daa
incb
adc
fs
lods
test
test
inc
out
test
pop
out
jae
jno
mov
in
xor
mov
jbe
adc
and
xor
push
cmc
adc
ret
add
mov
lret
jne
cmp
out
mov
add
pop
cmpsb
dec
xor
pop
jbe
std
cmp
add
xor
test
sub
push
inc
xchg
add
mov
mov
stos
pop
out
dec
mov
pop
sub
and
push
mov
imul
je
aaa
mov
repz
adc
adc
setne
rcrb
icebp
mov
jbe
push
jne
shrb
or
push
mov
es
dec
jmp
int
xorl
pop
push
fs
mov
jne
jl
cs
out
pop
stos
ret
repz
lods
jle
aaa
cli
adc
icebp
aaa
push
add
mov
cmpsb
and
aad
inc
jmp
xchg
jmp
or
cmp
test
stc
mov
sbbl
push
xor
cwtl
add
or
aaa
xchg
test
push
adc
stos
or
adc
dec
into
xchg
shrb
dec
aaa
call
cmp
jb
in
insb
je
fmull
inc
adc
call
int
mov
pusha
mov
ss
fadd
orb
lea
xchg
dec
cmp
leave
sbb
repz
je
add
sub
push
add
movsl
aam
and
cmp
mov
mov
jecxz
rcr
aaa
dec
sbb
dec
xorl
or
fs
jbe
adc
or
aas
push
push
push
sbb
or
aam
lret
dec
sbb
cld
les
push
jmp
cli
push
push
test
add
push
test
push
push
loopne
jo
mov
in
leave
and
jecxz
aam
fildl
and
push
sti
cmc
scas
sbb
push
sbb
jmp
cwtl
loopne
sbb
int
sub
xchg
and
scas
mov
mov
cmc
iret
add
mov
sbb
and
repz
sub
les
inc
fsubrs
xor
sti
pop
insb
sbb
cmp
mov
scas
arpl
stos
sub
mov
mov
adc
xor
bound
addr16
push
dec
in
fwait
lods
pop
test
jle
jnp
lods
push
jb
daa
inc
xor
int
enter
cmc
hlt
ror
in
and
bound
add
ss
push
xchg
fistl
xor
pop
fldl
inc
push
xchg
call
in
nop
jns
mov
mov
inc
push
stos
stos
pop
mov
inc
rcll
rcl
mov
jne
movsl
in
fldcw
inc
mov
jmp
xor
xor
cmpsl
dec
je
adc
jae
jp
cmpsb
icebp
inc
adc
call
aaa
ds
outsb
cld
dec
dec
out
aas
mov
mov
insb
mov
enter
xor
adc
dec
iret
add
cmp
imul
lahf
cmp
sub
aam
xchg
leave
jge
sbb
fldenv
loopne
lds
lock
lret
movsl
xor
adc
call
aad
stc
mov
rorb
xchg
movsl
mov
mov
pop
sub
adc
fdivrl
lret
int
popa
das
cmp
sub
pop
lcall
push
cmc
add
in
in
sbb
lret
and
dec
xor
adc
mov
jl
mov
xchg
iret
adc
inc
cli
loop
mov
xchg
mov
sbb
push
pop
cmpsb
gs
in
inc
pop
sub
add
insl
cs
cmp
stos
mov
push
inc
gs
adc
xor
call
in
sbbb
or
mov
mov
andnps
mov
fimull
outsb
and
cmp
dec
or
push
inc
das
push
add
xor
push
repnz
ljmp
loopne
in
pop
add
push
shrb
mov
fscale
xor
cmp
sbb
ret
jmp
stc
dec
mov
cmp
adc
gs
cltd
and
jae
jnp
ja
dec
sbb
mov
out
cmpsb
or
mov
ret
lret
pop
or
fcoms
lods
into
push
jno
fadds
xor
add
mov
xorb
out
popf
mov
mov
and
in
jo
mov
adc
mov
punpckhdq
jnp
and
fnstenv
xchg
test
add
mov
mov
add
push
mov
inc
push
ss
adc
dec
shll
enter
out
imul
mov
cmp
mov
cs
jge
mov
lods
cmc
mov
mov
push
test
out
add
fisttps
daa
movsb
inc
jge
and
cmp
aam
outsb
add
and
push
dec
test
inc
das
jg
jns
ret
subb
out
xor
sub
pop
mov
out
rorl
push
incb
lea
or
fadds
lods
stc
sar
lds
ret
xchg
repnz
pop
and
add
pop
push
js
pusha
sbb
and
pop
sbbl
xchg
pushf
mov
jbe
push
std
pmaxsw
and
push
std
sbb
mov
sbb
cmpsl
aas
loope
add
in
cmpsb
rorb
mov
test
jmp
shrl
add
scas
ljmp
loop
loop
inc
test
cli
ss
fisttps
mov
test
xor
sbb
inc
orl
das
sub
nop
je
repz
adc
sbb
xchg
mov
mov
test
loope
in
xchg
jle
jp
outsb
mov
lea
xchg
pop
dec
mov
adc
push
xchg
inc
sub
aas
xchg
bound
nop
daa
jo
jl
fwait
mov
mov
das
cmc
adc
aas
scas
inc
addr16
dec
ljmp
bound
cmp
cmp
jg
sub
cmp
fists
sub
sti
mov
shrb
jle
and
push
lods
loope
clc
lds
xor
repz
mov
mov
or
push
pop
out
inc
xchg
jmp
inc
adc
xchg
pop
cmp
dec
push
data16
movsl
test
int
scas
mov
sarb
or
xor
repz
cli
loope
lcall
push
xchg
push
call
es
stos
inc
repz
inc
jg
adc
js
or
in
test
sti
ss
int
fistpl
faddp
mov
addr16
jl
push
push
ret
xchg
cmp
inc
jle
or
lcall
stos
dec
xlat
cmp
sbb
lea
cltd
adc
cld
jge
jnp
add
cmp
mov
sub
nop
mov
jbe
pusha
mov
mov
sahf
in
cmp
or
xlat
or
add
jge
push
jge
mov
and
decb
pop
and
xchg
xor
mov
jo
in
mov
fnsave
mov
or
cwtl
hlt
fsts
push
jl
pushf
data16
push
and
pop
push
fs
or
or
out
xor
fldl
add
cltd
mov
inc
paddsb
daa
mov
fisubl
mov
sahf
xor
clc
mov
push
mov
fnstsw
sahf
push
mov
cli
push
gs
xchg
out
pop
sub
ja
push
xchg
and
fisubl
fwait
mov
mov
test
leave
push
popf
ljmp
data16
dec
test
pusha
inc
rcrb
jns
dec
lcall
out
test
cmp
mov
xor
xchg
aas
mov
and
xchg
push
lcall
dec
cld
xor
lods
aas
test
xor
int3
fst
stos
and
cmp
jne
aam
stos
subb
call
clc
mov
subl
aaa
adc
mov
lcall
xchg
mov
fidivl
pop
rolb
lea
mov
outsl
mov
push
dec
aam
adc
mov
mov
jns
adc
rol
pop
push
lret
mov
push
mov
dec
sbb
or
fbstp
je
shl
cmpsb
loop
lahf
ret
int3
mov
stos
out
clc
add
ret
cmp
imul
insl
idivl
xchg
add
push
adc
xor
subl
addr16
jecxz
dec
cmp
cs
jg
mov
xor
in
ss
lcall
cmp
dec
cli
xchg
out
ret
xchg
push
mov
call
je
inc
or
jp
push
adc
dec
lock
pop
sub
scas
icebp
arpl
incb
add
lock
lods
sbb
in
inc
cmp
lods
add
testl
cmp
adc
das
fldenv
leave
cmp
cvtpi2ps
ds
jmp
push
aam
dec
inc
jl
mov
mov
push
inc
in
ret
pop
test
icebp
movsl
mov
insb
out
dec
mov
shr
and
inc
jae
and
sub
and
push
sub
jne
lods
sub
pop
je
sub
jae
rorb
dec
mov
pushf
hlt
aaa
test
sub
or
jle
jne
mov
dec
sbb
cmp
call
and
dec
mov
dec
xchg
jo
hlt
xor
lods
and
lret
lods
and
adc
inc
and
call
mov
xchg
icebp
loop
adc
xor
insl
sub
test
fsubl
sbb
mov
stc
hlt
dec
iret
push
inc
inc
or
enter
dec
pop
sbb
jne
sbb
je
inc
imul
sub
xchg
imul
data16
testl
divl
mov
pop
cmpsl
int3
adc
aam
push
and
adc
mov
addr16
pop
and
mov
adc
ja
add
push
pop
push
insl
push
push
call
jo
fnsave
ret
pop
js
mov
outsb
rcll
pop
push
jl
stos
mov
lret
mov
mov
shll
je
in
es
in
lret
adc
lods
pushf
test
lea
stc
out
jae
pushf
cmp
jo
imul
in
adc
imul
jns
pop
out
pop
or
js
inc
ja
insb
mov
push
test
outsb
xor
jmp
push
mov
push
add
push
push
pop
sbb
adc
jno
ret
or
pop
inc
xor
jb
mov
in
dec
pop
pop
ss
rcrb
push
or
mov
loope
cmpsb
sub
inc
push
jge
jecxz
sahf
dec
fimuls
fwait
mov
mov
cmp
inc
loopne
push
fstpl
and
lea
imul
push
xor
inc
sub
cmp
repz
mov
sbb
pop
or
adc
mov
ja
lock
pusha
dec
and
mov
dec
jg
arpl
cmc
fst
popa
xor
lcall
push
dec
mov
cmpsl
rclb
in
daa
inc
cmp
or
mov
and
ljmp
out
mov
sub
dec
sbb
scas
mov
adc
aas
inc
repnz
fmul
mov
iret
mov
shlb
push
dec
cmp
das
call
inc
insl
or
decb
inc
jg
in
cs
push
sbb
jns
jle
notb
cmp
out
stos
aad
sub
xchg
dec
xor
gs
imul
int
cmp
pushf
jecxz
inc
int
shll
xchg
lcall
cmp
mul
imul
mov
or
or
lea
jb
jbe
into
pop
es
jnp
sub
inc
lds
jp
inc
or
aam
mov
shll
inc
lods
pop
mov
pop
pop
mov
jg
lea
ja
xchg
icebp
repz
daa
sbb
or
inc
aas
mov
mov
and
arpl
pop
mov
mov
in
movsl
outsl
sub
je
sbb
cwtl
mov
call
xchg
rolb
sbb
inc
add
mov
push
and
push
dec
cmp
xor
mov
aaa
pop
inc
icebp
mov
dec
inc
and
sarb
fadds
stc
add
jno
mov
xchg
cli
adc
cmp
push
cld
mov
xchg
and
into
das
mov
inc
cmc
movsl
test
cld
mov
and
lcall
cmpsl
add
stos
sub
cmp
cmp
fadd
sub
add
xor
jo
cmpb
jmp
sar
cmpsb
cmpsb
jmp
cli
mov
mov
push
cli
or
inc
sti
fisubs
push
cs
xchg
mov
inc
push
fstpt
dec
int3
pop
loop
xchg
in
add
sub
mov
jmp
inc
mov
fcoms
or
add
int
mov
cltd
pop
outsl
add
fisttpll
mov
lcall
and
add
dec
adc
sti
xor
add
sub
sub
sahf
cmp
push
inc
jbe
sub
test
add
clc
push
nopl
push
adc
pop
or
aas
std
or
and
les
cmc
mov
js
jp
rorb
mov
add
push
mov
mov
int3
jle
rep
xchg
mov
inc
out
sbb
in
xchg
mov
push
fists
pop
cld
inc
test
test
int
inc
add
or
push
shll
fnstsw
sbb
inc
mov
sbb
push
arpl
sub
int
hlt
cmc
out
xor
ret
notl
sub
inc
dec
lds
add
sub
jbe
pop
sar
sbbl
mov
jg
rclb
xchg
iret
adc
mov
ret
imul
les
sbb
and
lahf
mov
js
dec
xor
pusha
or
mov
xlat
cmpsb
pop
lods
loope
jmp
dec
mov
xor
enter
cmp
mov
xchg
cs
mov
movsb
das
loope
push
sbb
jno
or
sbb
scas
mov
lods
rorl
or
js
sbb
sbb
mov
mov
test
popa
mov
leave
dec
mov
loop
insb
scas
mov
jns
movsl
mov
xchg
loop
repnz
call
aaa
aad
mov
lret
inc
and
imul
push
xchg
dec
push
imul
xchg
jo
jmp
dec
xchg
add
insl
loop
scas
sub
ss
scas
repnz
sub
jl
or
mov
cltd
cmpsb
loop
repz
ds
test
adc
stos
lock
sub
cmp
xor
jae
nop
aam
in
dec
rcrb
mov
ljmp
fmulp
int3
cmpsb
lcall
pop
jecxz
xor
lret
add
andl
ljmp
sub
cmp
out
arpl
dec
cld
add
movsl
cwtl
pop
aam
ret
addl
inc
pop
dec
jmp
adc
test
mov
cmc
int3
movsl
mul
xchg
pop
adc
movsb
iret
cmp
or
jmp
jmp
daa
mov
mov
stos
in
mov
mov
bound
ret
mov
mov
stos
xchg
dec
jge
mov
add
sub
push
ds
fwait
lods
xchg
imul
xchg
js
popa
mov
mov
cltd
or
mov
or
jae
and
jns
inc
mov
jb
mov
pop
scas
rclb
daa
push
icebp
pop
sbb
mov
pusha
and
add
movaps
test
movsl
dec
or
lcall
rolb
mov
pop
push
testb
and
pushf
xor
std
lds
mov
dec
jle
movsl
iret
in
xor
loope
adc
insl
add
in
orl
in
jecxz
adc
test
fdivs
mov
cld
pop
lock
add
adc
jbe
int3
jge
outsb
shlb
mov
xchg
cltd
mov
fldenv
fnsave
xchg
or
pop
jno
cwtl
xchg
inc
movsl
push
mov
lcall
mov
std
testl
scas
push
jo
mov
mov
ret
dec
pop
ja
or
clc
or
inc
mov
aam
into
mov
es
xor
nop
jge
rolb
cmp
fsubrl
pushf
mov
and
hlt
push
cmp
sbb
inc
lods
fimuls
add
ljmp
lock
push
les
push
mov
fiadds
test
push
cmp
pop
leave
ficoms
and
imul
in
pop
out
xchg
jb
fwait
push
clc
push
pop
jns
pop
sub
sbb
ss
dec
loop
mov
mov
mov
mov
popa
rcrb
pusha
in
sarb
push
mov
fs
xor
lock
loop
outsl
icebp
cmp
jbe
lret
lods
push
pop
sub
inc
fcom
dec
das
jnp
fsubs
int3
and
mov
jmp
mov
pop
out
incl
or
mov
sub
jo
stc
mov
xchg
lcall
cmpsb
push
push
mov
add
push
xor
scas
and
stos
jae,pn
xorl
pop
or
push
std
es
mov
into
push
divb
and
lahf
stc
lret
cmpsb
sbb
hlt
cs
ficompl
adc
lahf
pop
sti
push
push
inc
mov
adc
jno
test
push
xchg
lcall
loopne
dec
pop
in
pop
leave
iret
ja
mov
pop
pop
enter
cltd
mov
in
xchg
mov
out
lds
push
cltd
inc
dec
pop
inc
or
mov
pop
sbb
dec
lret
mov
int3
lods
adc
push
jb
cmp
enter
or
out
mov
add
mov
mov
jno,pn
inc
int
adc
insl
scas
mov
add
jae
movsb
repz
out
lock
xchg
loopne
ret
cmc
mov
and
push
out
xor
lcall
xchg
fwait
movsl
cmp
mov
ds
mov
jmp
mov
inc
pushf
mov
adc
sub
push
cs
in
cmovno
outsl
mov
in
ret
cmp
add
test
xor
out
or
mov
loopne
mov
insb
andl
loopne
rorb
iret
inc
dec
adc
push
push
adc
jg
add
jns
pop
insb
ljmp
stos
jno
pop
out
mov
ret
fwait
mov
push
sbb
cmp
out
and
jnp
jns
hlt
add
mov
adc
pop
cs
ret
or
fsubrp
iret
loopne
dec
push
ds
cmpsb
pop
xchg
mov
pop
add
mov
xor
outsb
sub
push
mov
xor
flds
into
push
dec
test
rorb
push
dec
add
xchg
sarl
stos
js
mov
and
push
mov
push
mov
in
sahf
xor
ds
ja
lret
test
into
xchg
lahf
stos
push
mov
cld
lret
popa
insb
xchg
xchg
jge
pop
xor
xchg
push
and
ss
sub
out
mov
inc
negl
out
mov
mov
ja
sti
jl
adc
lds
adc
mov
inc
lahf
icebp
mov
or
dec
inc
pop
or
out
pusha
push
icebp
inc
mov
ficompl
outsl
lods
call
gs
pushf
dec
push
xor
jecxz
inc
movsl
add
pushl
pop
leave
movsl
add
cmpsb
shlb
push
cs
mov
push
jb
outsb
movl
jecxz
xchg
cmp
and
and
mov
movsb
into
daa
mov
pop
mov
mov
jbe
into
mov
mul
cmpsl
popa
out
pop
stos
sahf
add
int3
sub
adc
lods
cmc
fmul
add
jg
bound
mov
push
or
testl
xchg
xchg
pop
mov
jmp
arpl
sarb
cmovne
jle
and
mov
sub
mov
mov
push
fwait
arpl
les
lea
repnz
jb
dec
mov
ret
dec
lahf
fstpl
pop
pop
pop
hlt
bound
ret
push
mulb
and
mov
mov
and
and
dec
lock
pop
mov
sub
outsb
push
sub
sub
add
cmc
fimull
pop
pusha
andl
in
inc
cmc
shll
ret
xor
xor
jmp
lret
add
jo
dec
cld
ss
cld
in
fnstenv
jns
insl
jo
bound
mov
sbb
or
and
mov
sbb
mov
adc
xchg
cltd
rclb
stos
inc
test
nop
cmp
adc
add
movsl
adc
int
outsl
cmc
cmpl
shlb
int
call
jp
xchg
scas
inc
clc
mov
pop
stc
xchg
flds
push
loop
jns
cld
dec
movsb
pop
mov
sahf
je
inc
movsb
mov
lret
fdivr
or
xor
in
jb
push
pop
fists
outsb
addr16
pushf
mov
insb
xchg
icebp
mov
dec
iret
dec
rcrb
out
stos
cmpl
ljmp
mov
ficoms
test
cmp
mov
mov
inc
cltd
es
hlt
jle
pop
jle
sbb
xchg
xchg
xchg
aam
addr16
ret
and
and
add
adc
in
and
jmp
pushw
hlt
cli
addr16
mov
adc
push
mov
xchg
fists
xchg
cmpsb
daa
mov
xor
movsl
mov
pop
sbb
dec
adc
ret
fs
pusha
sarb
imul
sub
fistpll
xchg
cmovne
pop
into
rclb
in
mov
stc
lods
mov
sbb
arpl
mov
adc
fbld
subl
jno
mov
push
dec
repz
jecxz
mov
ret
fidivrl
out
pushf
jecxz
xchg
aaa
or
outsb
mov
in
ds
inc
or
mov
sbb
ret
push
mov
jo
bound
dec
jo
inc
insb
and
xchg
cmpsl
lods
adc
xor
sbbl
bound
mov
mov
sub
lods
negl
into
test
jp
cmp
adc
loopne
lods
inc
or
mov
into
pusha
scas
daa
xor
mov
dec
or
shrl
and
push
inc
mov
or
outsb
push
cmp
fists
imul
lahf
das
aad
mov
mov
ljmp
and
sbb
xchg
gs
cmp
pushf
mov
aad
cmp
jg
out
insb
insb
pusha
mov
jl
lret
dec
mov
sarl
xor
sbb
jae
or
mov
xchg
test
push
xchg
lock
mov
jnp
mov
popf
lea
cmp
bound
imul
adc
lds
mov
jp
dec
inc
add
cmp
jns
lret
stos
addb
ret
push
std
pop
or
xor
in
jbe
sbb
fcoml
xchg
xchg
cld
ret
inc
mov
ss
das
outsb
mov
jnp
dec
cmpl
sbbl
dec
cmp
inc
outsl
icebp
cmp
fwait
rcl
enter
test
icebp
xorb
push
inc
js
cmp
sub
jo
push
mov
rorb
in
div
out
lret
arpl
pop
push
ds
pop
cmp
cmp
in
mov
into
mov
pop
cltd
xor
sub
pop
jno
lods
cs
enter
out
jl
scas
pop
pop
push
clc
arpl
cmp
dec
mov
mov
cmpps
jg
fldcw
sub
xor
loop
das
std
or
fcompl
cmp
insb
insb
push
js
imul
cmp
es
pop
pop
rorb
andb
stc
or
lret
orl
add
mov
lcall
in
icebp
hlt
sbb
fcoms
sbb
lea
dec
out
es
xchg
lock
and
mov
or
fwait
xor
pop
scas
fdivrl
mov
arpl
mov
cmc
jae
xor
adc
call
imul
adc
insl
mov
loop
push
cld
xchg
mov
mov
sbb
loopne
lods
sbb
call
ljmp
lods
jg
fdivs
test
jns
pop
push
fistl
push
lea
lods
xchg
loopne
jp
lods
jg
insb
stos
ret
mov
inc
scas
repnz
sbb
mov
jae
imul
adc
mull
mov
scas
mov
xchg
inc
aam
jo
dec
push
xor
adc
cmpsb
dec
mov
stc
lcall
mov
push
movsl
popa
mov
inc
adc
jno
mov
es
pop
arpl
lea
sub
int3
xchg
xlat
cmp
bound
cmc
ja
or
mov
fdivrs
rcr
jp
andb
out
inc
adc
mov
mov
ret
imulb
jge
ret
negb
jle
mov
sub
ljmp
xor
xchg
jne
adc
push
dec
sub
sub
loopne
or
pop
movsb
test
jbe
jle
scas
xchg
adc
je
and
adc
aad
lods
imul
and
mov
repnz
enter
pusha
pop
xlat
and
orb
insl
mov
cltd
out
out
in
movb
cmp
sub
out
mov
push
push
jne
outsl
nop
and
mov
dec
gs
jge
repnz
mov
mov
push
imul
andl
jae
jge
cltd
mov
inc
cmp
push
add
push
shll
int
bound
sbb
cwtl
sub
xchg
subb
cltd
das
pop
imulb
adc
fnsave
xor
aam
or
cltd
loopne
leave
push
inc
mov
sbb
push
pop
insb
subb
hlt
movsb
adc
lret
mov
dec
lock
aad
cmp
fistl
sbb
and
lods
std
mov
fs
mov
pop
cld
int3
add
xlat
mov
repz
xor
movsb
add
mov
cs
sub
divl
sbb
fisubs
mov
pop
mov
dec
lods
adcb
loope
insl
out
pop
cmp
dec
jecxz
pop
rcrl
pusha
jno
leave
mov
jnp
nop
enter
mov
pop
cmp
imul
insl
jnp
loope
xchg
add
mov
mov
or
loopne
pop
sbb
sti
push
add
imull
cmpsb
jl
scas
call
imul
push
pusha
aaa
int
jnp
pop
loop
mov
ss
hlt
and
int3
lea
iret
xor
test
ret
mov
xchg
shll
jl
arpl
mov
pop
sub
mov
ja
daa
les
sbb
xor
adc
lcall
and
sbb
sub
stos
dec
shll
xorl
addb
ds
push
lods
xchg
xchg
dec
add
aas
push
jg
mov
mov
int3
and
lahf
fimuls
ret
pop
pop
sub
mov
in
cmc
pop
and
mov
leave
mov
into
mov
movsb
jae
ficoms
lods
xchg
jge
bound
jne
bound
in
nop
fmul
ficoms
or
pop
testl
popa
aad
cs
out
lret
mov
loop
ljmp
insb
addl
push
inc
pusha
or
mov
invd
mov
fs
ret
cltd
ss
mov
aaa
push
insb
jl
mov
fadd
adc
sarb
jp
and
aaa
rcr
jns
movsl
nop
pop
xchg
or
xor
push
fistl
fistpll
inc
fistpl
fxch
mov
out
sbb
loopne
sub
cmpsl
push
dec
jp
stos
xor
fidivrs
rclb
call
pop
xchg
js
jns
ss
dec
cmc
lcall
dec
or
ss
sbb
and
filds
jbe
push
out
cmp
ljmp
out
stos
cld
inc
jnp
xlat
pop
push
push
imul
je
into
les
or
neg
mov
add
in
push
sbb
sahf
jns
int3
mov
cltd
mov
loope
jle
jmp
cld
push
jecxz
jo
sti
daa
imul
jg
iret
pop
outsb
shrb
aaa
cmp
sbb
rcrb
hlt
ret
mov
cltd
aaa
and
cmp
mov
lcall
jg
out
xchg
das
cmc
aam
out
adc
sbb
stos
cmpsl
sub
mov
ds
sbb
sub
in
sbb
loopne
sub
push
xor
and
or
insb
arpl
icebp
test
add
cld
jne
jle
sub
sub
decl
inc
jmp
loop
push
push
bound
sbb
ja
pop
or
flds
bound
xor
mov
hlt
xchg
in
aam
lcall
jne
popf
cltd
lods
cwtl
jp
fists
pushf
push
cltd
jne
hlt
mov
scas
lods
and
fstpl
add
jo
xor
cmp
mov
pusha
in
adc
mov
push
and
push
or
jmp
add
das
scas
cltd
mov
mov
jecxz
dec
fisubrs
jo
orl
xor
mov
into
jae
push
sbb
loope
sub
cmpsb
sub
in
adc
das
mov
push
jecxz
sub
cwtl
cmp
mov
lods
fsincos
out
xor
das
dec
call
mov
ja
mov
iret
xchg
fbld
arpl
stos
mov
add
jae
mov
ja
stos
mov
push
dec
or
lds
inc
data16
cmp
dec
mov
cmp
and
mov
xchg
loope
icebp
inc
push
push
mov
push
lret
add
add
mov
add
test
rcrb
sar
xchg
push
mov
sub
mov
fs
paddb
fdivrl
push
in
lods
lret
in
mov
js
es
cld
lahf
nop
lcall
pop
jbe
in
inc
cmp
inc
xchg
mov
loop
xchg
test
fs
jns
loope
into
cmp
daa
adc
ljmp
es
pop
lods
inc
movsl
aam
lahf
inc
mov
or
push
mov
out
and
cmp
jg
cld
ret
cwtl
add
lret
cmp
add
mov
jns
pop
ss
ds
pushf
es
ss
pop
aas
jle
hlt
imul
xor
sbb
sub
mov
pop
inc
les
sub
mov
mov
xor
shlb
pop
loopne
daa
dec
add
mov
shll
outsl
hlt
mov
es
push
lahf
insl
iret
push
pop
fldt
adc
push
pusha
out
stc
cmpsl
loop
pop
mov
imul
adc
scas
pop
xchg
mov
dec
cmpb
xor
inc
icebp
inc
mov
scas
sbb
sub
fmull
inc
popa
add
call
mov
mov
scas
dec
orl
call
in
mov
test
sti
je
mov
xor
in
and
dec
arpl
pop
outsl
jge
pushf
call
sti
push
cmp
ljmp
push
fdivrs
xchg
mov
xor
add
ret
ja
mov
cmp
xor
in
pop
mov
xor
mov
shld
out
xor
jae
sbbb
cmp
pop
ret
xor
es
pop
mov
lcall
call
adc
outsl
std
inc
and
pop
repz
lcall
popf
imul
xchg
nop
push
dec
fsts
fbld
or
or
aaa
fildl
mov
mov
pop
cld
ja
clc
mov
sahf
mov
jb
ret
les
dec
mov
loopne
sbb
sub
nop
push
mov
xchg
cmp
mov
add
lret
pop
mov
mov
sub
hlt
dec
insl
jmp
lods
jle
add
dec
pop
test
imul
mov
sarb
addr16
loop
aaa
cmc
pushf
cmpsb
test
xor
mov
xor
aas
mov
adc
addl
mov
xchg
add
inc
pop
xor
xchg
shl
jne
lcall
sub
test
or
jb
popf
ss
dec
ret
xchg
push
lods
aas
or
loope
push
iret
sbb
xor
das
add
mov
xchg
push
and
out
mov
pop
call
jb
test
xchg
loope
push
inc
mov
lret
xor
inc
adc
xchg
push
cmp
dec
aam
fwait
xchg
orb
sub
bound
pop
inc
and
sbb
xor
or
sbb
or
and
mov
jecxz
pop
insb
push
xchg
pushf
push
cmp
ficomps
jmp
out
inc
sub
xchg
or
and
mov
aad
out
mov
mov
sbb
addr16
and
mov
mov
mulb
cmp
mov
jle
std
push
cli
push
mov
xchg
popa
mov
sahf
mov
sub
aam
pop
sarl
movsl
movsl
cpuid
inc
lock
jl,pt
test
cmp
shrw
dec
test
xchg
jb
inc
movsl
mov
jbe
add
in
pop
push
jae,pn
mov
int
ljmp
cmp
mov
jle
loopne
hlt
fmull
sarl
add
movsl
mov
sub
jg
dec
add
jne
dec
push
mov
dec
jb
mov
add
jle
push
cmpsb
mov
sub
jno
fsubrs
add
ror
and
in
mov
in
cmpsb
loope
add
cmc
cmc
out
filds
jge
and
xchg
ret
and
adc
in
popf
aad
out
mov
adc
xchg
pop
adcl
jne
pushf
lcall
iret
adc
sbb
lds
icebp
test
fsts
fiadds
insb
dec
sub
cmp
outsl
mov
lcall
adc
sbb
mov
ss
nop
popf
pop
dec
add
mov
cli
mov
shlb
int3
mov
aaa
xor
int
sbb
jecxz
sahf
cmp
pop
ljmp
jecxz
pop
add
lods
stos
push
scas
inc
fwait
xchg
mov
mov
xchg
out
mov
mov
mov
add
inc
int3
dec
movsl
lcall
xchg
cmp
rolb
movsl
jae
aam
or
test
shrl
loop
pop
or
lret
out
push
mov
sub
out
int3
jbe
lods
push
scas
mov
xchg
lahf
mov
pop
shrb
ja
das
add
jo
inc
dec
cmpsb
into
mov
or
xchg
daa
lret
out
and
sbb
add
ljmp
fidivs
cmp
mov
mov
jl
in
push
jle
sbb
cmpsb
das
ss
icebp
dec
std
xchg
sbb
mov
fiadds
push
imul
jnp
jecxz
std
pminsw
test
push
jo
jge
lods
leave
mov
dec
sub
mov
cld
adc
push
add
add
dec
mull
incb
jno
fbstp
jb
xor
and
nop
fnstcw
dec
pop
sbb
nop
add
push
mov
jnp
sahf
neg
cld
inc
jne
dec
xor
jne
pop
inc
adc
mov
icebp
pushf
jmp
aas
mov
nop
push
mov
xchg
lds
in
mov
lods
repz
outsl
fwait
push
rorb
cld
cmp
rorl
stos
sub
in
inc
enter
xor
cmp
push
ljmp
jb
mov
add
push
fstps
fisttps
sahf
pop
push
lcall
push
push
sub
es
test
cli
xchg
push
inc
hlt
jl
mov
les
sub
bndldx
dec
ret
in
adc
mov
jl
sarb
jecxz
popa
xchg
and
pop
arpl
dec
mov
sbb
test
and
es
leave
push
icebp
cli
ljmp
add
pop
aas
inc
or
aam
in
xchg
pop
and
cmp
inc
xchg
mov
in
roll
pop
or
movsl
xchg
xor
pop
faddl
push
cmp
sub
std
push
ret
and
jns
lds
push
xchg
iret
aad
data16
push
scas
jge
push
dec
adc
jne
enter
mov
cmp
call
jne
push
out
les
dec
aas
rcr
inc
add
adc
ds
pop
sbb
int3
jno
xor
cmc
cmp
inc
add
xchg
cmp
adc
dec
test
addl
insb
lods
leave
inc
in
sahf
out
sbb
ja
mov
jmpw
xchg
ror
adc
fbld
sbb
outsl
int
sbb
push
mov
cmp
cli
or
loop
inc
xchg
mov
int3
ja
mov
mov
inc
outsb
inc
and
daa
repz
imul
std
int3
insb
sbb
clc
sbb
or
ja
sbb
sub
sub
inc
sbb
pop
pop
adcb
int3
lret
inc
inc
into
lret
fimuls
repz
push
popf
mov
imul
inc
aam
or
cmp
mov
push
mov
jne
mov
mov
or
popf
scas
mul
into
or
dec
pop
imull
pop
mov
bound
loopne
dec
loop
or
adcl
dec
outsb
int3
xor
adc
insl
das
jecxz
inc
and
push
imull
outsb
mov
or
xor
imul
mov
xchg
dec
les
sub
mov
sbb
lret
outsl
cmpsl
movsb
or
dec
push
orl
sub
cs
jns
dec
pop
xor
mov
shrl
dec
movsl
fwait
jbe
add
mov
shlb
mov
out
sub
test
xor
mov
hlt
loope
fcomps
stos
jne
dec
xchg
sbb
lea
jle
in
in
pop
gs
dec
xchg
dec
loop
test
sub
pop
sub
cld
movsl
imul
adc
rorb
in
movsb
mov
cmova
ret
cmp
lret
lock
inc
scas
es
cmp
test
fsubrl
cli
xor
loopne
push
adc
orl
mov
xlat
push
repnz
sbb
pop
test
xchg
mov
pop
mov
inc
notl
adc
shlb
adc
rolb
std
jo
and
adc
jecxz
scas
pop
lahf
loopne
mov
lock
adc
cld
push
add
rolb
cmp
adc
pop
mov
sub
popa
and
and
stos
std
jbe
fnsave
lea
sbb
jge
pop
test
mov
cmpsb
xor
std
fsubrl
stc
cmp
xor
push
mov
addr16
arpl
add
loopne
dec
add
mov
or
cmp
fisubs
jle
and
sbb
pushf
imul
or
jbe
imul
push
xchg
fists
bswap
xchg
pop
mov
leave
hlt
xor
dec
ja
mov
aas
adc
xchg
and
and
gs
jle
jo
xor
nop
push
testl
xchg
xchg
idivb
and
ds
popa
xchg
lahf
mov
xchg
xchg
push
mov
mov
gs
adc
setge
fs
loop
dec
pop
lock
popa
arpl
insl
adc
cmpsb
orl
pop
movsl
arpl
test
dec
imul
dec
out
nop
push
stos
leave
adc
shrl
repz
fs
daa
and
inc
mov
sbb
push
xor
movsb
ds
arpl
adc
xchg
jno
shrb
mov
in
push
cmpsl
pop
pop
sarb
inc
cwtl
ficompl
dec
jno
arpl
and
aad
pop
out
and
xor
dec
and
rol
jge
cmp
mov
mov
ret
neg
rcrb
cwtl
adc
mov
daa
push
sahf
sbbl
je
inc
mov
loopne
mov
sbb
jg
or
movsl
insl
jecxz,pt
mov
sbb
mov
adc
sarl
mov
mov
mov
fisttpl
mov
cmc
mov
shrl
mov
out
cltd
aaa
das
dec
cmp
jmp
xor
jl
mov
js
mov
sub
push
add
movsb
in
lds
jae
sbb
mov
xor
test
rclb
gs
fidivl
dec
push
fs
jbe
cld
cmp
out
jl,pn
idiv
fistpl
lds
jae
bound
ja
aas
stos
test
jmp
adc
inc
sti
leave
add
push
and
sub
cmpsl
push
fwait
hlt
cmp
and
mov
add
and
and
inc
cmpsl
push
dec
ljmp
ja
lods
inc
data16
mov
xor
jl
cli
dec
ret
lret
xor
mov
adc
out
sbb
inc
call
movsl
jge
out
data16
push
pop
inc
ljmp
out
push
xor
dec
cmp
push
fwait
adc
aaa
add
or
repz
push
or
subb
or
push
mov
stos
fsts
add
push
xor
mov
xor
mov
ja
xor
sbbb
imul
xlat
cs
data16
xor
pop
mov
jge
jmp
loop
addr16
xchg
gs
mov
xchg
in
cmpsl
rorl
xchg
out
out
lcall
leave
dec
inc
rcrl
dec
lret
mov
ja
jae
and
jns
loopne
jb
lods
sbb
sbb
pop
ds
xor
push
xchg
pop
sub
mov
xorb
xchg
iret
mov
xor
add
xor
push
jbe
pop
bound
fdivrl
rolb
pop
and
pusha
enter
in
dec
mov
xchg
push
lds
push
stc
mov
clc
out
mov
sub
sub
xor
xchg
sub
pop
xchg
xor
adc
push
xor
in
xchg
add
xchg
pop
mov
dec
scas
popa
adc
enter
aas
stc
xchg
sub
lret
cmpsl
sub
mov
mov
inc
or
pop
add
or
jp
cmp
sub
repz
mov
lods
mov
mov
push
repz
inc
andl
mov
mov
notb
into
jp
mov
rorb
jae
sbb
cmpsl
stos
scas
mov
or
sub
nop
ret
dec
lea
and
test
push
pop
inc
mov
sub
add
fistpl
adc
adc
fmuls
loop
cmp
jg
lods
xor
xchg
sub
adc
xchg
out
aad
push
jnp
push
mov
fdivp
sub
or
iret
pop
push
shlb
fildll
dec
das
cmpsl
and
add
mov
adc
in
arpl
and
dec
or
jae
cmp
jl
out
fsub
lea
jae
rcll
ficomps
insb
fisubs
adc
mov
movl
xchg
dec
in
bound
pop
push
std
neg
arpl
iret
or
js
js
mov
and
imul
mov
mov
scas
push
push
jo
icebp
into
jno
pop
sbb
fcom
sub
or
pop
leave
insl
out
lock
lock
jo
push
inc
jp
jae
pop
push
adc
repnz
push
mov
pop
in
xor
xor
xchg
fiadds
sahf
pop
in
mov
pop
or
push
aas
call
dec
mov
ss
or
xor
movsl
cmp
lcall
and
push
icebp
xor
movq
je
dec
mov
mov
mov
lahf
repz
jmp
sbb
xchg
dec
push
sub
inc
mov
lret
andb
mov
push
daa
mov
or
mov
add
xchg
fidivrl
mov
aas
mov
cmp
lahf
mov
or
cmp
daa
push
ds
cmp
jno
or
int3
fxch
mov
in
hlt
inc
sub
sbb
or
addr16
mov
shlb
es
mov
fs
sahf
int
xchg
lcall
lcall
cli
outsl
sub
mov
gs
adc
out
test
pop
xchg
dec
adc
mov
ror
add
mov
ljmp
pop
addr16
and
cwtl
mov
xor
imul
loope
leave
jle
fld
inc
stos
lods
mov
dec
and
xchg
cmp
aaa
loop
jge
push
leave
and
call
or
xchg
std
xor
fs
repnz
stc
and
enter
xor
cld
xchg
cltd
cmp
and
mov
fldl
out
and
fidivs
mov
jo
xchg
xor
add
jns
bound
in
out
sub
sarb
pop
int
mov
adc
mov
shll
iret
push
cld
pop
adc
dec
mov
or
scas
sbb
pop
mov
fcomip
movsl
dec
pop
dec
fimull
rolb
sbb
push
xchg
adc
and
sbb
shlb
and
mov
and
hlt
cli
andb
aad
pushf
lcall
inc
mov
adc
cld
lods
adc
in
cli
ret
xchg
xor
mov
inc
loopne
jge
test
jp
in
mov
jmp
xchg
xlat
fistpll
push
int
lods
int
inc
ds
pop
xchg
pop
lock
mov
adc
fidivrs
dec
lds
xlat
and
in
rcrl
rcrl
mov
xchg
xchg
fidivs
cmp
imul
adc
test
xorl
pop
xchg
push
xorb
sahf
dec
pop
pushf
adc
cmc
or
push
xchg
test
dec
iret
and
sbb
xor
adc
loopne
and
outsl
scas
mov
pop
cmp
std
test
clc
push
and
inc
lret
cmc
adc
aam
nop
xor
ficoms
sub
ret
jecxz
shrl
test
imul
push
push
xlat
jno
imul
push
nop
lea
add
test
popa
adcl
hlt
test
xchg
sub
shrb
lea
inc
les
fstl
fiadds
ja
mov
jnp
mov
xor
shll
xchg
fnsave
mov
mov
imul
aas
xorb
xchg
popf
pop
test
push
idivb
add
and
test
cmp
xchg
rorl
adcb
push
mov
jo
fldenv
or
or
out
stc
cli
sbb
out
dec
xchg
fsubr
pop
stos
aas
pop
rcll
outsb
xchg
fildll
daa
or
les
lahf
cmc
xlat
mov
adc
adc
xchg
dec
pop
mov
aas
cmp
fwait
mov
xor
out
cmpsb
add
jl
lods
int3
push
sub
sbb
xchg
adc
dec
or
scas
or
cmovno
loop
mov
cmp
push
mov
lcall
pop
sarb
and
das
test
and
adcb
cs
ja
movsb
cmp
mov
inc
repz
sub
add
enter
mov
xchg
stc
add
divl
jo
lahf
or
and
imull
inc
lret
inc
xchg
inc
jmp
mov
inc
cmp
dec
lahf
push
rcl
scas
and
iret
push
jp
ret
mov
or
stos
cli
xchg
ljmp
lahf
jae
add
pop
lcall
ljmp
or
ds
pop
mov
xlat
inc
call
in
push
int3
adc
mov
xchg
cmp
push
lods
ficoms
jnp
lock
shrl
mov
xchg
inc
sbb
pop
imul
cmp
sbb
push
shlb
push
lods
scas
mov
scas
lds
ret
aam
repz
pop
stos
loopne
aam
mov
jno
ds
cmp
les
jl
pavgb
test
stos
jg
sarb
rcrb
clc
cld
adc
sub
int3
ss
push
aad
xor
js
or
xchg
stc
mov
dec
out
push
pop
gs
mov
mov
cmp
addl
push
dec
mov
int3
loop
xchg
inc
mov
cmc
scas
cli
lcall
rcll
push
imul
cmpsb
fwait
jl
dec
jp
push
sub
jne
sub
shll
push
stos
xor
aad
daa
xor
arpl
mov
or
negb
jnp
adc
imul
adc
pusha
mov
movsb
add
jae
cmp
jne
movsl
push
cmp
and
sbb
fimuls
jmp
push
mov
lock
jmp
insb
sub
add
add
add
cmp
outsl
div
sub
lea
loope
pop
mov
cli
xor
std
push
mov
and
pop
mov
cmp
jns
lea
mov
cmp
inc
lret
cmp
loope
cli
sub
insl
jle
mov
cwtl
and
dec
mov
jle
lahf
sbb
push
mov
lods
rolb
cmp
es
rcrl
add
daa
in
adc
mov
cld
mov
lock
mulb
inc
jg
xchg
scas
push
arpl
test
je
mov
cmp
add
icebp
push
fs
xor
pop
sbb
ja
jle
jmp
jmp
cmp
bound
cmp
dec
lcall
flds
push
clc
aaa
jecxz
jge
jle
sub
mov
and
xchg
jle
xor
cmp
or
cmc
fisubs
cmpl
inc
popa
adc
loope
in
in
lods
mov
loope
inc
mov
lock
and
test
or
cs
jne
lret
jbe
sbb
leave
inc
in
mov
scas
ss
maskmovq
in
insl
out
outsb
mul
sbb
movsb
dec
shll
int
cmp
jbe
stc
stos
adcl
sahf
ja
jl
hlt
xchg
mov
sbb
stos
cmp
or
leave
mov
push
repnz
or
pop
sbb
ret
cltd
out
inc
jge
js
push
icebp
in
repnz
out
push
aam
dec
xor
add
test
inc
mov
push
inc
rclb
or
lods
fiaddl
orb
and
aaa
or
ds
aad
pushf
pop
mov
adc
inc
cwtl
enter
sub
aaa
rcll
mov
adc
jp
ds
mov
jle
mov
movsl
and
fnstenv
mov
int3
out
in
adc
or
or
push
lahf
sub
pop
lcall
dec
mov
stos
repnz
or
or
leave
and
sti
clc
xchg
pop
mov
xchg
ds
dec
jae
pop
lods
loope
ror
fidivrs
in
push
pop
cwtl
outsb
insl
jg
mov
or
sbb
and
cmp
cmpsl
pop
subl
aaa
das
imul
add
adcb
adc
cwtl
negb
mov
mov
fnstenv
fistpll
call
aaa
mov
pop
inc
push
dec
call
cmp
pop
ret
mov
addr16
xchg
fdivl
and
jno
sub
imul
add
add
incb
lret
cld
lock
inc
cli
sbb
mov
pop
das
jno
xchg
and
imul
addb
add
mov
add
pusha
sub
inc
clc
lret
and
test
cmp
or
sub
pushf
clc
imul
and
jbe
and
out
cltd
push
push
xchg
cmp
inc
mov
push
mov
inc
push
or
dec
sbb
add
shl
xlat
call
in
mov
loop
mulb
push
mov
dec
lret
xor
push
mov
dec
fistps
scas
fsubs
lods
mov
mov
mov
aad
sub
inc
lea
outsl
in
pop
in
mov
pop
inc
rcrl
adc
adcl
mov
push
cs
into
mov
jns
aas
popa
cli
sub
jns
icebp
and
and
adc
mov
and
dec
xchg
xorl
and
jmp
data16
jmp
cmpb
ficoml
mov
ja
dec
sbbb
push
out
mov
lock
mov
mov
lcall
in
inc
jge
pusha
je
loopne
pushf
lcall
popf
mov
shlb
xchg
vunpckhps
sub
mov
aas
cmp
cld
ss
repnz
imul
in
cld
out
ret
jo
pop
and
add
mov
push
cmc
push
arpl
dec
and
pop
icebp
iret
push
jae
push
cmp
or
xor
in
inc
pop
push
ja
stc
sub
shll
cmp
jmp
js
push
idivb
imul
aaa
jb
fbld
insl
sub
mov
pusha
jae
out
adc
shlb
cmp
pop
or
popf
dec
mov
xchg
dec
jne
sti
dec
repz
jg
or
jmp
mov
out
cltd
push
dec
add
jno
sbb
mov
cmp
addr16
xor
mov
inc
or
adc
inc
fsubrl
mov
arpl
in
mov
add
insb
xchg
mov
jle
inc
jg
mov
xor
js
addr16
mov
dec
cld
lods
add
adc
shrb
out
dec
xor
incb
lds
lods
nop
pop
cmp
mov
cltd
or
cs
jno
and
rorl
or
test
loop
ljmp
sub
sbb
jnp
xchg
push
out
xor
int3
pop
pop
loopne
aas
mov
mov
mov
inc
xor
bound
mov
jp
sub
fucomi
outsb
scas
fidivl
ds
lea
jnp
daa
push
int
mov
xor
aam
inc
int
push
inc
cmp
mov
add
fucomi
cli
push
pop
repz
es
fwait
jnp
and
dec
call
push
xchg
fwait
and
mov
pop
loop
pop
fs
inc
mov
in
xchg
hlt
mov
jmp
xchg
lock
out
push
mov
mov
jl
dec
dec
xchg
nop
push
mov
jnp
cmc
cwtl
movsl
adc
shll
inc
in
jge
mov
xor
es
popf
dec
mov
leave
mov
xlat
mov
dec
sbb
loope
cmp
inc
cmp
or
ljmp
push
ret
push
mov
cmp
sbb
and
push
aad
and
pop
shll
roll
mov
push
mov
cmp
adc
jmp
push
loope
pop
leave
pop
call
or
xchg
and
push
pusha
rcr
xchg
cmovge
pushf
lods
das
scas
xchg
dec
xor
add
lock
dec
jle
dec
div
jne
cmp
dec
faddl
in
xchg
sbb
sub
leave
je
mov
and
jge
outsb
in
imul
stos
xlat
aaa
jmp
out
push
jns
or
nop
and
enter
mov
inc
xor
and
out
jmp
sbb
jae
cmpb
lea
fdiv
js
xor
xchg
jge
cmc
arpl
addr16
jl
xorb
or
fadd
mov
out
and
test
stos
cbtw
mov
dec
sbb
pop
das
test
lds
aas
fsubrp
push
loopne
icebp
iret
fsts
push
push
test
ja
mov
int
or
adc
and
cwtl
pushf
shl
sbb
repz
dec
sbb
inc
cs
add
xor
mov
dec
xchg
xor
outsb
pop
shll
mov
sarl
xor
popa
mov
mov
jp
bnd
mov
push
dec
fisubs
call
mov
jns
fadd
daa
mov
out
mov
jecxz
shll
jl
add
inc
cwtl
xor
lds
cmp
mov
cli
fdiv
das
mov
and
lds
bound
iret
cmp
xchg
sbb
mov
inc
sahf
testl
cmp
les
aad
pop
aas
es
in
shll
std
in
inc
pminub
jo
loope
sbb
xor
mov
inc
addl
mov
or
dec
push
out
mov
ret
pusha
cmp
xor
xor
stos
dec
jo
je
repz
sbb
pop
inc
lcall
out
xor
sub
cli
je
push
or
pop
inc
inc
push
adc
jmp
sbb
mov
test
adc
or
fs
mov
mov
cmp
pop
loope
cmp
sahf
xorb
add
lret
stc
movsl
test
add
jo
push
std
movsl
rcll
jo
mov
shrb
stos
or
outsl
push
dec
out
mov
js
into
xchg
push
out
and
fsubs
data16
inc
loope
cmp
dec
mov
test
or
jnp
add
rcrb
xchg
jmp
mov
stc
pop
mov
xchg
mov
mov
mov
clc
out
mov
lods
ds
out
and
mov
xchg
fsub
cmpsb
cld
xchg
jnp
mov
test
stc
mov
and
sub
stos
jo
push
fisubrs
xchg
dec
jle
add
xchg
xorl
push
dec
lods
and
and
dec
push
mov
inc
sub
cs
aaa
inc
sbb
adc
mov
adc
mov
add
add
xor
jle
lret
fmull
hlt
sti
and
sub
in
mov
xlat
push
in
push
popa
subl
das
hlt
nop
pop
dec
push
xchg
pop
mov
mov
push
sbb
or
cmp
jnp
push
test
push
mov
mov
nop
dec
arpl
and
out
int
aam
imul
cmp
jb
mov
mov
adc
mov
mov
jbe
aam
adc
repz
rol
push
or
ror
xlat
mov
fsubrl
mov
lcall
ljmp
xchg
loop
and
add
dec
out
stc
out
mov
cmp
clc
mov
leave
jmp
shll
lea
fidivl
dec
inc
int
pop
lea
fwait
and
mov
push
add
sbb
subl
xchg
out
add
cli
jno
push
xor
adc
add
adc
aas
mov
imull
loop
or
jecxz
jge
lods
divb
mov
sbb
loope
imul
sub
daa
push
mov
cld
pop
mov
mov
cmp
and
pop
dec
mov
jbe
cmp
or
or
cmp
mov
cmp
inc
jp
mov
repz
nop
mov
push
das
je
inc
stc
fcmovu
aaa
rcrb
and
mov
syscall
aas
push
dec
pop
jg
jb
xchg
aam
mov
cld
fstp
jbe
mov
aas
push
sysexit
arpl
inc
cltd
jnp
cld
push
cmp
ds
pushf
mov
aas
mov
cmp
fcmove
ljmp
ss
xchg
call
xor
out
aaa
cmp
out
xchg
popf
sub
and
cmp
mov
sub
mov
mov
orl
inc
mov
out
js
pop
jmp
xchg
sti
test
scas
adcb
cmp
lret
push
mov
jb
sub
push
dec
lret
dec
shl
and
jmp
les
pop
add
push
cltd
stos
mov
xchg
push
sub
or
lock
push
shlb
cmp
ret
xor
xchg
outsb
dec
or
and
subl
sbb
int3
xor
adc
sbb
fiadds
in
inc
lahf
or
es
outsb
sub
push
ja
cmp
cmpsl
sub
mov
push
into
jle
lea
inc
adc
les
ljmp
push
push
cmp
popf
pop
pop
das
mov
jo
scas
fwait
xchg
xor
mov
push
dec
insl
inc
fdiv
xchg
pop
xchg
stos
xchg
inc
ja
setp
pusha
insb
adc
into
xchg
adcl
loopne
sbb
js
mov
adc
movsb
pop
jmp
jl
push
jb
push
push
xchg
and
loop
cwtl
pop
xor
pop
lcall
sub
dec
add
dec
sub
out
push
push
mov
loop
bound
cli
sbb
int3
push
xchg
stos
out
dec
sbb
adc
enter
mov
mov
push
xor
push
jge
pop
imul
adc
and
or
xchg
addl
jne
lret
pusha
mov
pop
divb
jg
xchg
mov
mov
xchg
jne
mov
fldt
or
sar
cmp
mov
push
shrb
xor
mov
stc
sub
inc
push
out
and
btr
sbb
pushf
les
mov
push
or
push
mov
and
or
lret
mov
xchg
hlt
push
mov
dec
lcall
mov
and
mov
and
mov
bound
mov
mov
and
mov
jns
stc
loop
dec
fwait
add
pushf
repnz
mov
ret
call
mov
cwtl
dec
mov
mov
jne
iret
jne
out
movsl
mov
daa
pop
jbe
scas
stos
adc
xchg
aaa
inc
pop
mov
lea
and
aam
scas
aas
cmp
shl
ljmp
arpl
inc
leave
mov
jp
movsb
jmp
clc
in
int3
out
roll
gs
pusha
and
lea
call
push
out
sbb
ror
xchg
or
and
test
cmc
cmpps
push
adc
add
fnstsw
sub
loopew
push
xchg
addr16
push
jo
pop
into
push
adc
addr16
add
in
lock
lea
int3
add
xor
testb
cmpsl
push
cltd
pop
jmp
cld
in
mov
xchg
out
lahf
bndldx
stos
jmp
ret
je
std
aas
jb
add
stos
rcll
mov
sbb
mov
cmp
cwtl
sub
push
fadds
xchg
outsb
hlt
pop
jno
pop
test
into
outsl
mov
cs
clc
sete
pop
in
or
mov
xchg
cmc
scas
add
int
aas
cmp
mov
pushf
aam
orl
xchg
dec
jbe
fwait
adc
ret
jns
out
nop
cli
mov
rcrl
dec
adc
mov
fisubs
dec
popa
pushf
stos
gs
nop
adc
movsl
push
or
hlt
sub
es
call
jnp
dec
or
mov
in
mov
adc
dec
je
movsl
jbe
mov
loopne
popf
pop
or
lret
and
adc
shl
mov
aam
jge
dec
in
imul
pushf
bound
mov
loopne
mov
neg
out
mov
mov
mov
loop
sbb
sub
mov
inc
int3
xchg
jge
nop
into
lret
loop
add
push
mov
adc
dec
ret
push
cmp
mov
inc
mov
mov
fldcw
out
outsl
lea
bound
fwait
lea
sbb
jge
loopne
movl
pop
jg
stos
sbb
movsb
xchg
jbe
push
xor
shrb
pop
lods
movsb
leave
or
xchg
aas
into
mov
scas
xchg
push
mov
cmp
push
sahf
adc
lret
test
push
sbb
mov
sbb
push
inc
mov
cli
pop
dec
mov
fisubs
mov
push
cmp
sub
push
xchg
xchg
jg
pop
aam
pop
adc
icebp
stos
cmpb
and
int
lods
add
cld
mov
push
adc
fwait
dec
jle
jmp
inc
dec
jo
pop
add
xorb
mov
xor
inc
mov
xchg
mov
add
repnz
popf
lods
jae
fimuls
in
jp
xchg
gs
xchg
scas
sub
dec
adc
jge
adc
imul
idiv
dec
mov
fs
pusha
dec
rolb
lock
mov
loopne
xor
outsl
sub
fldenv
clc
jno
push
insl
jnp
sub
mov
incb
dec
pop
sahf
fadd
rcl
adc
test
shrl
movsl
inc
inc
fcom
sub
mov
xlat
add
and
fisttps
cld
add
sbb
outsl
cmp
sbb
in
jb
into
sub
lods
in
cmc
adc
push
fsubrs
shlb
lahf
push
dec
dec
push
mov
xorb
mov
jl
cmp
cld
xor
testb
dec
mov
mov
sbb
sbb
les
mov
loope
xorl
stos
je
mov
jge
insl
mov
adc
outsl
mov
fwait
sub
orl
inc
push
jbe
xor
push
outsl
sbb
out
cwtl
lcall
lock
pop
push
adc
sbb
mov
adcl
loope
and
push
sbb
in
int
or
shlb
xchg
loope
jp
cmp
add
jb
idivl
jns
and
ret
or
je
mov
or
lcall
fs
jo
or
inc
and
ret
std
pop
rorb
jns
ljmp
or
cmpsl
push
jecxz
jg
popa
int
cltd
xchg
push
push
add
xchg
das
test
insb
loop
je
fprem1
shlb
inc
ds
orb
test
ss
dec
jne
pusha
inc
jecxz
outsb
ret
push
mov
push
stc
imul
mov
js
fimull
hlt
add
push
cmp
sbb
mov
xchg
iret
dec
pushf
add
lods
add
or
out
cmp
cmp
aas
jmp
push
sbb
int3
cli
xchg
fwait
pop
in
adc
dec
test
xchg
das
pop
mov
icebp
sbb
xchg
xchg
or
out
dec
push
das
bound
adc
movsb
xchg
enter
mov
sbb
pusha
mov
inc
lret
ljmp
aas
jno
call
out
add
and
push
dec
fnstsw
rol
popf
mov
dec
gs
cwtl
arpl
mov
mov
subb
pop
mov
aad
jo
data16
insb
fstps
insl
jmp
leave
mov
push
data16
js
pop
pop
fisubl
dec
test
dec
addr16
test
xchg
ror
dec
scas
leave
or
iret
lahf
pop
mov
dec
flds
sbb
popl
pop
loope
add
sub
cltd
data16
pop
jb
inc
ret
pop
fadds
cpuid
test
xchg
aaa
pop
mov
push
sub
xor
mov
lock
arpl
mov
frstpm(287
inc
stc
ret
cmp
arpl
mov
pop
jns
dec
inc
xchg
cmp
add
inc
pop
sarb
mov
xchg
cmp
inc
cmp
ss
push
sub
subb
in
and
movsl
testl
mov
mov
aas
insb
push
dec
movsb
dec
xor
xor
mov
mov
sub
ret
jbe
movsl
ljmp
pop
mov
or
fisubrs
in
mov
sub
stc
in
iret
andb
pop
rcrb
mov
cmp
test
jbe
and
aaa
adc
scas
mov
jae
push
sarb
jle
test
sbbb
xor
pop
xchg
ffreep
mov
jbe
lds
arpl
mov
pop
dec
mov
dec
lret
ret
leave
push
mov
and
jb
cltd
out
out
cmp
ds
sub
add
int
loopne
jo
xor
hlt
or
test
aam
aad
addb
test
mov
pop
add
outsl
push
int
test
mov
aaa
cmpsl
insl
jno
arpl
rolb
aad
mov
aam
out
inc
sub
push
inc
shlb
outsl
cmp
xchg
in
je
dec
dec
insl
fsubl
pop
pop
inc
test
icebp
cmp
mov
add
and
mov
dec
fidivrs
mov
jb
aaa
mov
je
pop
jmp
in
mov
push
pop
mov
add
mov
ret
dec
mov
sub
jl
stos
inc
cmp
sub
or
lcall
mov
shll
mov
add
insl
cmp
and
test
mov
xchg
push
shl
dec
jb,pt
ret
push
pop
bound
lcall
and
movsl
xchg
fs
or
pusha
fs
jns
inc
or
lcall
mov
push
push
popa
in
dec
jmp
jecxz
xchg
xorb
mov
test
mov
std
push
gs
daa
scas
dec
mov
xchg
and
jp
adc
ljmp
call
xchg
add
xlat
pop
icebp
aas
xor
cld
cmp
std
sbb
sub
aad
idivl
imul
xor
shlb
outsl
inc
or
movd
add
mov
mov
sbb
add
xor
jae
out
stc
and
pop
lds
popf
push
push
mov
int
into
and
icebp
and
and
scas
cmpsb
int
xor
cld
das
dec
pop
mov
pop
sarl
or
ret
or
in
pushf
add
jmp
insl
popa
roll
mov
cs
fistpl
out
or
or
sub
dec
popf
pushf
push
push
inc
imul
push
push
xor
xor
pop
push
fdivrs
add
and
inc
mov
call
sub
ss
xorb
rcr
sbb
jge
jmp
sub
lret
lods
loop
std
pop
mov
outsl
adc
adc
cld
jns
mov
push
mul
shlb
jl
cld
jb
jne
inc
and
cld
or
xchg
xchg
adc
fldl
xor
jg
jb
jl
mov
lcall
mov
ret
cmp
inc
or
sbb
lods
out
adc
jne
sub
pop
orb
push
dec
mov
ja
xchg
sti
dec
jae
fildl
mov
push
or
add
stc
push
jae
xor
mov
xchg
mov
add
cmpsl
jecxz
xchg
aaa
iret
adc
roll
dec
dec
sti
mov
pop
dec
mov
pusha
fisttps
int3
int3
jle
daa
jecxz
jmp
xadd
adc
adc
mov
shl
pushf
shrb
push
popa
mov
sub
insb
pop
rclb
enter
inc
mov
sbb
push
in
cwtl
popf
mov
cwtl
jne
jle
push
pusha
and
dec
out
and
jno
sub
les
dec
and
cmp
or
scas
push
mov
arpl
mov
andl
cmp
and
inc
and
cmp
mov
xor
adc
ret
jecxz
and
ds
push
mov
mov
ds
pop
out
push
mov
rorb
add
add
add
mov
bound
enter
scas
nop
stos
jnp
inc
mov
push
jecxz
xchg
mov
insb
pop
mov
inc
push
fs
xor
imul
jmp
mov
dec
mov
icebp
divl
add
dec
adc
mov
ja
jno
sbb
lret
jg
iret
test
or
pop
lahf
pop
leave
es
ljmp
ret
jo
push
cltd
add
xchg
jne
dec
lds
add
xor
cmpsb
jne
aas
jb
loope
dec
cmp
cli
lds
mov
stc
mov
dec
cltd
popf
ret
mov
cmp
stc
shl
push
test
mov
mov
sarb
mov
repz
jb
xchg
cltd
loope
inc
push
es
push
hlt
addl
and
js
adc
add
cs
mov
xchg
add
and
int
es
ljmp
jmp
and
fsubr
push
push
xchg
inc
xor
cmp
ljmp
out
dec
in
sub
call
cwtl
ds
jne
mov
ret
into
ret
mov
cmpsb
sub
sbb
je
push
push
adc
mov
je
enter
mov
cmp
out
pop
clc
mov
xlat
movsb
pop
stc
jbe
bound
cmpsb
mov
pop
lret
inc
movsl
or
mov
mov
dec
or
and
and
out
and
movsl
push
orl
popa
push
sub
or
inc
xor
dec
ds
lods
push
jp
xor
xchg
push
mov
xor
dec
push
lea
movsb
aas
push
in
imul
je
out
loopew
icebp
add
add
sub
pop
daa
inc
sbb
inc
ret
xchg
sahf
pushl
popa
cmp
mov
sub
mov
lds
pop
daa
or
xor
scas
cmp
shlb
add
aas
rcrb
loop
pop
test
inc
jp
and
adc
clc
jb
cwtl
adc
fsubs
jno
pop
lds
adc
pop
cs
and
in
dec
fisubrl
adc
imull
pushf
and
lahf
fwait
cmp
add
sub
gs
cmc
pop
mov
jmp
andb
jae
ds
iret
dec
jge
jg
les
mov
scas
andb
aam
iret
push
xor
inc
call
jge
push
addr16
cmpb
xor
das
lret
lods
xor
push
div
cwtl
push
jg
xor
dec
inc
shl
fldenv
push
dec
xor
sub
sbb
sahf
mov
mov
scas
and
mov
mov
jnp
test
mov
push
adc
push
push
xor
mov
mov
loope
out
dec
xor
ljmp
lahf
arpl
sub
cmp
dec
cmc
ror
mov
add
xor
or
outsb
jmp
dec
mov
jg
iret
adc
dec
int
bound
fmul
sbb
dec
add
push
or
pusha
or
push
andb
fsubrs
cs
fdivrp
into
into
jle
adc
jno
mov
mov
sbb
cmc
mov
cmp
in
scas
push
scas
test
and
bnd
jbe
dec
or
sbb
jmp
xchg
aam
adcb
int
arpl
fists
pop
fimull
aad
sbb
aas
cwtl
xlat
addb
pop
in
mov
lock
icebp
imul
in
cmpsl
lods
sbb
cli
pop
repnz
or
push
leave
xchg
cld
jge
inc
jecxz
add
pusha
adc
or
inc
ja
push
fcmovb
mov
int3
dec
outsb
in
lds
push
inc
popa
inc
add
call
push
mov
pop
test
add
shrb
fldenv
lahf
push
cmp
daa
push
jge
dec
mov
inc
add
ficompl
lods
jbe
cwtl
pop
push
clc
cmp
cmpsl
mov
inc
adc
mov
push
dec
sbb
cmpl
mov
stc
out
fsts
gs
mov
and
cmc
jmp
mov
pop
push
jne
adc
sti
pop
or
mov
cmp
scas
test
xor
mov
ret
push
mov
in
push
dec
jae
add
push
aam
xor
fdivrl
cmp
cmp
xor
aad
ljmp
mov
sbb
or
push
mov
mov
hlt
lahf
or
cmp
sub
mov
dec
inc
aam
or
jge
push
shll
add
scas
jnp
add
adc
or
adc
pop
sub
xchg
push
inc
je
or
fucomi
test
jae
mov
icebp
pop
insb
sbb
std
lea
movsl
imul
pop
adc
stos
out
push
mov
enter
sbb
shlb
lds
test
cs
mov
aas
loop
cli
inc
ds
pop
js
jle
mov
in
mov
imul
dec
outsb
call
repnz
inc
daa
or
mov
int
xchg
jns
add
das
inc
rcrl
or
push
xor
push
aas
lret
xlat
and
js
lds
aam
sarb
jo
lcall
lock
js
arpl
loop
imul
scas
or
movsb
lahf
js
sbb
pop
mov
nop
xchg
cmp
adc
popa
push
call
arpl
mov
mov
mov
adc
cmp
cs
push
fcompl
cmp
push
insl
adc
out
adc
into
xor
mov
repz
test
mov
stos
mov
mov
mov
xor
jno
fisttpl
ret
pop
dec
arpl
stos
sbb
mov
out
adc
or
mov
nop
in
xchg
pop
mov
xor
or
movsb
loop
pop
ljmp
loopnew
xlat
jb
dec
sbb
xchg
mov
dec
pop
push
adc
dec
jb
out
out
xchg
or
in
insl
dec
sbb
pop
insb
and
mov
cmpsl
xchg
pop
into
pop
fldl
aaa
and
lods
and
cmp
adc
fnsave
out
mov
mov
shll
xor
aad
lahf
ja
push
push
fisubrs
push
push
scas
fcoml
mov
mov
scas
bound
pop
push
dec
ror
fcoml
cmp
sub
mov
mov
andl
stos
jl
ds
notb
xchg
dec
pop
or
adc
in
gs
lcall
jnp
xor
scas
pop
inc
jne
mov
leave
adc
sti
mov
cltd
enter
pop
and
scas
dec
js
test
lods
lods
add
into
jecxz
cmpsl
dec
add
jp
loop
xor
cmpsl
add
addr16
cmpsl
xchg
cmp
mov
xorb
aad
jmp
mov
or
lods
scas
pop
push
pop
push
and
mov
repnz
adc
sbb
fnstsw
dec
lods
pop
mov
sbbb
enter
cmp
xchg
pop
add
stos
push
rcll
sub
dec
cmpsb
in
sbb
inc
sub
jno
inc
xor
fistl
xor
ss
outsl
or
and
adc
leave
and
loop
pop
mov
addr16
mov
jns
mov
jo
vmwrite
idiv
iret
stc
cli
or
or
shll
xchg
sbb
arpl
inc
inc
shll
mov
xchg
data16
movsl
jne
push
dec
inc
idivb
push
sahf
jae
jl
pop
loope
sub
test
or
loop
xor
ret
sti
enter
es
bound
stos
clc
stc
cmp
popf
adc
push
jns
mov
push
mov
dec
repz
pop
mov
mov
nop
lahf
lcall
pop
mov
cmp
fcoms
popa
push
add
inc
jb
push
frstor
call
les
adc
xchg
xor
jb
daa
and
cmpsb
dec
dec
dec
lea
es
dec
sub
add
inc
xchg
jae
fcmovbe
fsubrs
or
lods
test
daa
adc
mov
mov
push
cli
or
sti
sar
jno
and
stc
popa
pusha
dec
cltd
xor
fmul
or
mov
sub
xchg
call
imul
repnz
stos
shll
bound
cmpsb
add
push
mov
shrl
lahf
dec
inc
fistps
jbe
test
fcomps
adc
test
inc
add
mov
xor
pusha
test
js
sub
sbb
cmpl
dec
pop
sub
xchg
push
in
mov
in
cmp
mov
ror
sahf
sbb
hlt
insb
imul
je
dec
das
jl
insb
push
xchg
and
pop
je
mov
inc
loope
sub
inc
out
int
cmp
and
mov
idivl
mov
add
mov
xchg
mov
mov
cli
mov
pop
into
push
xor
or
add
out
mov
mov
dec
xchg
xor
jo
jge
xchg
stos
jnp
jae
jle
mov
cs
notb
divl
jo
sti
adc
bound
push
not
or
pop
rolb
bound
fs
xor
push
mov
or
mov
cltd
push
jl
mov
mov
jne
scas
xchg
shll
ficoml
aam
int
push
adc
sbb
push
lcall
cli
es
jecxz
in
cmp
arpl
cmpl
push
lret
and
cmpsb
scas
push
jnp
pop
xchg
mov
push
stc
mov
ja
filds
and
xchg
mov
jge
js
mov
xlat
cmp
js
jge
test
sti
out
push
int
neg
sbb
mov
outsl
fcomps
mov
in
mov
mov
mov
xchg
icebp
mov
fcoms
dec
adc
add
add
loopne
pop
mov
inc
cltd
xchg
rcr
mov
sbb
adc
nop
insb
adc
xor
adc
mov
daa
je
push
adc
mov
sub
sbb
mov
jns
dec
cli
mov
ret
pop
xor
mov
adc
sahf
pop
jle
mov
cld
mov
orl
inc
xlat
jbe
scas
adcb
and
lea
mov
int3
mov
std
in
shll
push
out
xchg
lea
mov
inc
pop
pop
push
jno
or
dec
lret
iret
push
push
test
ret
inc
or
adc
push
xor
xor
sub
out
push
xchg
test
ficoms
push
aam
sbb
add
adc
inc
cld
das
fsubr
lods
jle
jbe
push
fcoms
sub
cmp
add
add
adc
clc
call
movsb
mov
cmp
sahf
cmpsb
ja
adc
iret
mov
cmc
stos
jae
mov
xchg
xor
sbb
fwait
or
insl
push
cmpsl
leave
cltd
push
mov
sbb
mov
pop
imul
aam
insl
cwtl
cmc
and
jp
int3
fdiv
sbb
test
mov
and
negl
mov
imul
jp
les
sti
pop
in
cmpsb
lcall
push
or
pop
stos
lahf
aaa
add
push
push
repz
mov
jns
inc
jno
mov
jle
xor
xchg
jmp
sub
sbb
test
lock
rcrb
pop
repz
adc
negb
sub
ret
mov
sub
lock
mov
fmuls
sbbb
sbb
mov
jg
adc
rclb
xchg
cmp
sub
js
test
pop
pop
adc
adc
inc
push
mov
scas
mov
loopne
insb
insb
or
mov
cmp
cld
mov
pop
stc
and
mov
insb
stc
inc
leave
das
lds
cmpsl
aad
fnstenv
pop
and
dec
fnstcw
xor
or
mov
adc
inc
sbb
adc
rclb
arpl
mov
das
aam
rorb
adc
jge
push
inc
push
dec
jae
mov
out
xchg
or
sub
lock
popl
int3
sbb
lcall
add
and
inc
sbb
int3
cmp
pusha
xor
cmp
push
add
sbb
movsl
pop
dec
in
adc
add
xchg
fs
int3
jle
push
scas
or
and
jae
rcl
cmp
add
and
pop
dec
jl
xchg
mov
hlt
pop
mov
aad
adc
mov
inc
pushl
push
ret
pop
fdivl
lods
xor
sahf
js
xchg
addr16
ret
fidivrl
dec
and
mov
data16
arpl
popf
and
cmpsl
fisttps
in
push
pop
inc
mov
adcb
cld
xchg
xor
and
fsubs
lea
lahf
add
cmp
outsb
and
add
out
inc
dec
push
xchg
xchg
push
lahf
mov
sti
mov
popf
or
push
push
arpl
mov
stos
out
sbb
pop
pop
mov
lock
test
dec
and
jns
mov
adc
or
xlat
out
cmp
mov
lahf
ljmp
aad
sbbl
je
mov
dec
xchg
inc
pop
xor
out
sub
cmpsl
pop
xacquire
jg
mov
jns
mov
xor
jle
out
xor
scas
and
cs
sub
movl
push
bound
cmp
adc
out
adc
jne
popf
cwtl
dec
jl
mov
fninit
xchg
sub
imull
mov
pop
pushf
cs
dec
shll
sbb
into
inc
xchg
sbb
inc
push
gs
or
sti
jnp
mov
jns
adc
out
pop
mov
inc
sbb
push
push
rorl
bound
adc
cmp
lret
fs
xor
in
xchg
jb
pop
stos
enter
inc
dec
xchg
jne
cwtl
push
mov
mov
pop
call
push
sar
jno
and
and
js
xchg
aam
mov
in
push
jnp
ds
add
aaa
aam
and
std
xchg
sahf
popa
hlt
jns
lds
aad
jg
aaa
push
dec
add
mov
or
inc
movsb
jmp
scas
mov
push
mov
add
inc
and
mov
jmp
mov
sbb
fcoms
orl
lahf
adc
ret
out
in
lods
aas
push
or
push
inc
pop
sarb
add
mov
xor
pcmpgtw
out
jecxz
mov
call
mov
test
push
int
mov
lea
push
mov
das
stc
fldt
inc
and
dec
sar
mov
inc
movsl
mov
iret
push
mov
es
push
lret
inc
inc
and
fwait
mov
mov
xchg
or
cmp
pop
xchg
lahf
das
je
push
pop
stc
call
mov
cmp
and
addr16
outsl
ljmp
or
mov
lea
lcall
incb
jae
pop
push
xchg
bound
cmp
xor
insb
sub
insl
adc
fwait
repz
test
data16
das
lea
mov
xor
filds
loopne
xor
pop
mov
mov
cmp
adcl
bnd
xchg
xor
mov
adc
test
leave
push
dec
in
xchg
jl
cmp
adc
stc
jl
out
dec
lea
pop
cltd
mov
pop
lret
fmulp
xchg
jle
push
jo
inc
sbbl
mov
inc
lods
sub
jnp
xchg
lret
idivb
lcall
sarl
das
or
mov
push
pop
xchg
icebp
push
sub
rolb
pop
xchg
int3
and
xlat
popa
jns
inc
cltd
or
or
repnz
jmp
mov
call
pop
push
sysret
push
hlt
imul
mov
jecxz
pop
inc
mov
pop
es
cmp
adc
dec
out
ss
jmp
sbbb
inc
or
rclb
jg
test
add
in
inc
pop
mov
push
sbbb
outsl
cld
adc
lcall
popf
xor
sbb
js
sbb
jns
je
mov
ficompl
xchg
adcl
rcr
sbb
fbld
lcall
pop
xchg
bound
shlb
js
cs
cmp
clc
mov
push
sub
dec
out
sahf
push
xor
lods
xor
jae
fimuls
jle
test
in
aaa
xchg
jecxz
mov
inc
sub
push
icebp
fnsave
adc
jle
fwait
add
inc
mov
push
sub
sbb
testl
ret
outsl
jmp
rol
inc
jp
xchg
push
iret
adc
add
ficomps
adc
mov
cmc
push
sub
or
lods
adcb
out
fwait
push
jae
jge
adc
gs
mov
je
mov
add
jbe
test
xor
sbb
cmc
out
outsl
out
imul
mulb
aam
mov
push
and
cmp
test
pop
lret
addr16
sbb
mov
insb
loop
or
add
jb
sub
mov
adc
lahf
ret
addl
je
mov
xchg
add
shl
repz
pop
jnp
shl
jge
or
pop
xchg
jl
hlt
push
iret
lds
jb
nop
insb
push
sbb
leave
dec
lret
nop
test
je
mov
dec
add
xor
mov
sbb
out
das
aas
jne
mov
cmp
pop
aaa
nop
movb
adc
in
pop
xlat
inc
ficoml
inc
xchg
sub
pop
jle
lods
add
addr16
and
in
addr16
mov
fs
sbb
xchg
loopne
mov
pop
in
das
je
rorl
mov
mov
imul
and
and
adc
sbb
cmp
fildl
xor
scas
rcrl
in
jnp
dec
and
adc
mov
fldcw
xor
fsubs
jecxz
xchg
fs
leave
mov
fs
cmc
cwtl
jmp
or
mov
dec
inc
sub
movsb
lods
shll
lahf
movsl
xchg
lcall
adc
stos
das
loopne
jge
fwait
stos
mov
out
mov
adcl
xor
mov
xor
xchg
outsb
stos
push
jecxz
and
cmp
push
inc
dec
adc
loop
inc
adc
in
pop
fstpt
adc
adc
mov
scas
or
fwait
js
or
inc
jge
adc
adc
xchg
fnsave
sub
push
cmp
adc
cmp
ljmp
adcb
jnp
jl
jl
xlat
dec
repz
adc
out
adc
ret
sub
mov
pop
push
in
pop
stc
ljmp
xor
dec
jge
sti
sub
mov
inc
inc
mov
push
stos
into
inc
push
xchg
xchg
mov
cmp
fiadds
insl
mov
inc
ds
and
ret
out
adc
sarl
cmp
cli
dec
nop
pop
orb
xor
aaa
push
mov
inc
outsb
popa
adc
mov
imul
jg
stos
rcll
faddl
xchg
outsb
mov
xor
jp
clc
aaa
idivl
jge
lods
lahf
das
pop
lahf
shll
jmp
mov
mov
insb
sti
mov
out
inc
fcom
xchg
mov
fisttps
push
std
es
outsl
inc
daa
aas
dec
rcrl
popf
pop
mov
mov
inc
jbe
pop
popf
push
or
js
pop
loop
mov
pop
data16
push
add
push
xor
scas
adc
inc
int3
dec
shlb
add
dec
mov
iret
arpl
jnp
adc
in
ljmp
mov
cmp
outsl
or
stos
add
push
out
cmp
and
pop
add
adc
xor
jno
cmp
push
ret
repnz
subl
mov
adc
scas
add
lods
or
inc
xchg
fidivs
push
dec
test
sub
lods
push
dec
int
leave
cld
xor
fldl
cmp
inc
das
sub
jp
inc
bound
add
in
mov
xor
int3
outsb
mov
dec
pop
push
outsb
push
aad
outsb
dec
mov
out
ror
in
sub
dec
dec
mov
loopne
xor
cmp
inc
fmul
xor
int3
js
fcomps
rolb
inc
add
dec
jno
movsl
ljmp
mov
add
push
push
add
in
cld
mov
shrb
cmp
aas
mov
rcll
dec
test
addl
aad
icebp
dec
xchg
mov
xrelease
in
mov
push
mov
rcrb
popa
dec
mov
or
push
pop
ja
xchg
cmova
int
dec
mov
add
out
pop
sbb
xor
nop
xchg
cmp
testb
jb
test
pop
into
pop
mov
loopne
mov
mov
jg
inc
or
cmpsb
nop
push
loope
pop
inc
adc
testb
pop
shlb
cmp
adcb
lcall
movsb
push
in
imul
mov
std
mov
je
xchg
push
js
popl
jl
push
repnz
xorl
pushf
test
ja
jge
mov
sub
jl
sbb
add
pushf
out
sub
add
aaa
test
cmc
movsb
shlb
pop
rorl
jl
hlt
mov
ret
out
mov
push
jp
adc
jp
fsubl
test
iret
xchg
lahf
imul
cli
arpl
adc
aaa
out
test
pusha
add
adc
lret
adc
pop
movsb
out
sub
rclb
inc
dec
mov
xchg
aas
pop
adc
in
pop
mov
sbb
mov
int
shll
fisubrl
rcr
sarl
and
dec
test
mov
bound
subl
cmp
inc
mov
push
ffree
sub
add
in
xchg
or
cmp
lods
stos
mov
mov
mov
outsl
sub
pop
imull
xchg
jbe
sub
xchg
adc
cmp
mov
sub
and
shl
adc
iret
popf
fildl
cmp
dec
pop
cmp
xchg
xchg
and
mov
fwait
sub
dec
rcr
pop
insl
out
iret
jp
push
aam
dec
sub
jo
mov
in
faddl
push
jmp
mov
out
jecxz
sbb
call
push
andl
xor
scas
xchg
sbb
push
test
cwtl
xchg
xor
into
in
js
mov
push
outsl
mov
and
aad
sbb
imul
fwait
add
dec
popa
mov
mov
popf
add
andps
fs
xchg
jle
xchg
loop
aaa
adc
or
dec
push
push
pop
jecxz
and
jo
and
jbe
xor
int
fists
nop
imul
rclb
imul
sahf
cli
scas
push
sti
mov
notl
jle
lret
out
ret
cld
stos
out
shrb
push
mov
lret
sub
xor
mov
out
or
jmp
jae
jb
push
push
sbb
xor
fmull
daa
inc
adc
das
into
sub
pushf
popf
or
cmp
mov
and
mov
or
sub
negb
cmp
pop
setns
rorb
mov
adc
jg
or
push
aam
ljmp
xchg
fnstcw
sbb
add
out
and
mov
cmc
push
mov
int3
inc
or
fcmovbe
push
enter
dec
cwtl
sbb
stos
rolb
enter
mov
icebp
jmp
mov
mov
sbb
xlat
cmp
pop
lahf
sbb
pushf
sahf
insb
das
pop
and
jne
inc
cmpsb
mov
int
jmp
rcrb
movsb
loopne
ja
test
and
outsl
mov
sti
push
push
enter
in
pop
cmp
and
adc
jmp
cwtl
out
cmp
mov
cmpl
stc
jae
testl
loop
xor
enter
jecxz
jo
push
dec
enter
stos
loopne
jge
rcll
xchg
or
iret
xlat
leave
mov
pushf
sbb
out
shr
dec
push
inc
je
push
mov
cltd
int
psrlq
lcall
ror
daa
fimull
mov
stos
sub
movsb
shrd
cmp
dec
lods
add
orb
xadd
out
std
in
hlt
into
outsl
and
subb
fistpll
into
in
mov
das
movsl
test
jge
ja
or
jno
xchg
xor
xchg
cmp
mov
xor
jns
xlat
mov
arpl
jb
ss
movsb
pop
push
dec
into
daa
or
insb
mov
cmp
sti
clc
jg
pop
sub
mov
mov
nop
outsb
dec
test
sub
insb
insb
aad
lret
adcb
xchg
shlb
outsl
dec
in
sbb
repnz
stos
enter
mov
inc
inc
bound
lret
aas
dec
icebp
out
pop
xorl
xor
sbbb
add
adc
in
sbb
push
in
or
adc
mov
pop
sbb
xor
xchg
push
cmp
jb
jle
imul
or
xor
daa
vprotw
loope
or
add
cld
loop
add
pusha
nop
push
or
lea
push
imull
jg
xchg
gs
fldl
je
dec
push
mov
xor
sub
mov
aas
pop
stos
aaa
jne
adc
pop
hlt
mov
inc
cmp
pop
pop
les
mov
ret
and
out
sub
or
xchg
popa
dec
das
pop
sti
mov
arpl
outsb
pop
lods
lods
mov
popf
lret
push
daa
test
pop
mov
mov
xor
sbb
or
addr16
or
mov
cmp
cmp
out
sbb
jge
xor
xchg
push
push
mov
mov
mov
cmp
lea
addr16
adc
xchg
nop
pop
dec
sbb
call
scas
mov
and
rcrl
push
fimuls
or
xchg
cmp
mulb
inc
jne
and
sbb
inc
xor
movl
in
jg
rolb
ss
mov
aad
addr16
mov
fwait
jb
xor
xor
lahf
loop
cmp
inc
mov
mov
sub
or
shrb
fbld
push
fwait
pusha
mov
jg
lret
cmp
xor
jb
or
popf
xchg
icebp
pop
stos
test
lss
in
popa
adc
test
lahf
cmpsb
out
push
les
push
shll
lods
repz
mov
cmpsb
les
shlb
rdtsc
or
imul
insl
jo
jp
add
xchg
roll
xor
fwait
xor
clc
mov
xchg
addr16
ret
clc
sub
std
mov
das
pop
das
adc
push
inc
push
xchg
out
repz
data16
aaa
jnp
mov
jno
sarl
mov
sub
xchg
xchg
je
outsl
push
test
lods
adc
adc
cld
xchg
sbb
jmp
cmp
jmp
sbb
stos
add
fs
incb
mov
jmp
mov
aam
lods
insl
sub
mov
cmc
xor
lret
cmp
int
xchg
mov
dec
mov
lds
loop
adcb
mov
daa
hlt
clc
jge
sti
sti
loope
add
call
sbb
stos
enter
repz
int
clc
mov
scas
add
adc
lods
adc
dec
in
cs
call
das
xor
ljmp
lds
jle
adc
add
in
je
jno
push
xchg
inc
cmp
or
jo
and
pop
icebp
push
lock
dec
lods
mov
fadd
dec
add
add
adc
pop
scas
xchg
push
stos
mov
imul
adc
fwait
dec
sti
call
mov
test
shl
add
sub
or
daa
fwait
shl
stos
or
shlb
out
lret
fiadds
test
mov
or
lods
movsl
lahf
mov
mov
orb
jbe
mov
lcall
std
inc
pop
mov
inc
sbb
dec
add
jbe
outsl
mov
in
aam
shrl
or
or
loopne
dec
neg
repnz
outsb
test
mov
fildll
std
xchg
add
pop
cmc
inc
insl
pop
push
testl
add
dec
mov
xchg
ret
fimuls
push
add
paddw
push
dec
shrl
jo
lahf
and
sub
je
xchg
scas
push
icebp
nop
adcb
test
dec
nop
fdivl
add
jle
xor
pop
fadd
shrb
cmpsb
mov
xchg
pop
fsubrs
arpl
mov
cmpsb
or
out
ret
rorl
mov
loop
mov
pop
ror
in
mov
test
or
pop
dec
and
cmpsb
jl
inc
jno
ret
inc
aaa
jg
out
cmp
sub
sbb
jl
mov
sub
negl
sbb
cmp
and
out
movl
popf
adc
jle
dec
cmpsb
shll
cs
mov
cmpl
int3
cmp
xorb
in
pop
jne
cwtl
pop
mov
add
js
jmp
jno
inc
int3
cmpsl
shll
rcl
mov
mov
cs
fists
sub
out
mov
fcmovu
jle
rolb
lret
xor
call
push
pusha
sub
rolb
mov
ret
mov
sbb
mov
scas
cmp
xor
xor
sub
mov
clc
pop
lret
lea
inc
or
mov
mov
jge
shll
cmp
add
inc
lock
adc
mov
push
inc
inc
jp
movswl
flds
fcmovb
push
bound
dec
push
fidivs
inc
cmc
imul
xor
outsb
enter
cs
cld
sbb
add
push
in
ja
mov
movsl
in
lods
jne
lret
inc
jbe
dec
or
jno
jp
xchg
das
lock
leave
fcompl
sbb
mov
add
jmp
push
mov
adc
test
loope
inc
fcmovu
or
push
xor
int
and
cltd
cltd
hlt
pop
sbb
mov
pop
push
pop
fidivl
pop
int3
push
shlb
dec
loop
dec
testb
or
dec
jl
je
lods
xchg
outsl
out
mov
or
cmpb
inc
pop
jno
es
cmp
icebp
out
dec
xor
jbe
mov
jmp
or
fldcw
outsl
dec
or
or
test
stos
pop
in
loopne
test
mov
test
xchg
rcll
xor
add
fmull
aad
push
nop
jge
popf
sub
arpl
pop
outsb
stos
mov
data16
pop
xor
mov
ja
rcrb
stc
insl
imul
or
stos
sbb
push
push
cmp
arpl
mov
xchg
sbb
jnp
inc
and
popf
push
jb
mov
mov
lahf
aaa
nop
stos
add
fdivrs
adc
lret
and
subb
or
into
mov
xor
xchg
pusha
mov
mov
sti
addr16
push
rorb
leave
mov
mov
sti
jno
add
cmpsb
lahf
add
inc
cmp
pop
dec
cmp
jecxz
rorb
test
in
cld
push
out
cltd
lcall
lds
adc
enter
dec
fs
or
pop
out
jb
cld
cmpsl
or
mov
je
add
addr16
scas
sub
mov
cmp
xor
imul
into
mov
andb
lods
push
mov
ds
jl
daa
pop
nop
mov
mov
cmovb
mov
hlt
mov
dec
fwait
push
sahf
lea
dec
sub
cli
xor
xor
lret
orb
pushf
inc
or
and
shl
into
rclb
aaa
int
loop
push
div
jns
mov
or
xchg
xchg
push
in
pop
adc
movsl
cmp
and
xchg
int
inc
mov
mov
or
mov
aam
inc
pop
inc
push
mov
out
mov
arpl
repz
push
mov
sbb
and
addr16
movaps
fisttps
xchg
mov
jle
fwait
js
in
inc
sti
dec
push
dec
mov
adc
xor
xchg
insl
repz
fisttpll
lds
dec
stc
in
and
outsb
mov
iret
in
hlt
pop
pop
jns
inc
pop
andl
jecxz,pt
ja
arpl
int
cmp
fwait
das
and
ret
cmp
sub
cwtl
xchg
imul
xchg
dec
and
mov
inc
pop
sbb
or
xchg
fwait
or
test
fdivl
mov
inc
xchg
add
adc
in
es
test
ror
imul
xlat
popa
addr16
or
inc
imul
mov
movsb
adc
push
fwait
xor
mov
aad
js
popf
xchg
filds
pop
jbe
push
leave
sbb
lcall
test
clc
fldcw
jmp
clc
jo
test
iret
xchg
ret
cmp
fldl
out
mov
gs
jae
mov
pop
cmp
bound
rorl
sar
ret
mov
fbstp
ss
and
dec
sbb
movsl
pop
sub
add
push
xchg
mov
inc
mov
ja
push
cli
xor
push
dec
adc
dec
dec
gs
loope
out
push
popf
or
cli
stos
jp
lock
hlt
mov
stc
mov
sub
push
popf
or
stos
push
and
aas
int3
cmpb
mov
add
xchg
mov
sub
dec
mov
in
push
push
push
adc
movsl
or
divb
mov
sub
cmc
repz
xor
push
pop
pop
pushf
pushf
imul
int
cmp
into
dec
push
pushf
add
iret
insb
sub
dec
cmp
inc
mov
scas
sbb
and
lret
cmp
fbld
sub
movsb
fwait
push
xor
fmull
insb
out
cmpsb
in
xchg
pop
push
hlt
aas
jl
mov
pop
prefetcht0
mov
xor
inc
bound
mov
nop
or
clc
sbb
insb
pop
std
fnstenv
mov
cwtl
je
int3
mov
enter
aas
push
jns
sbb
and
cmp
stos
int
jle
lods
push
jo
mov
cltd
hlt
adc
lret
insl
and
dec
sbb
sbb
loop
or
inc
add
jnp
push
lods
popa
das
sbb
adc
fdiv
jmp
and
xor
out
mov
cs
out
inc
cmc
in
aad
int
int
pusha
divl
xor
outsl
loop
sub
xor
mov
sbb
mov
cmp
jmp
dec
into
fwait
xor
sbb
nop
push
mov
pop
pop
mov
fdivl
xchg
sbb
xchg
xchg
jle
icebp
push
inc
jecxz
jnp
and
sbb
push
stos
das
mov
mov
mov
mov
jecxz
push
jno
adc
ret
sarl
mov
scas
movsl
or
xor
xchg
push
loop
or
iret
cld
lock
sbb
aam
mov
jl
cmp
fsubrp
push
dec
ret
add
mov
mov
xor
pop
inc
daa
fwait
and
insl
clc
push
test
sbbl
push
mov
lock
addb
sub
jo
shr
mov
xchg
inc
cli
nop
mov
pop
dec
xchg
sbb
push
out
repnz
add
aad
pop
cmp
mov
mov
inc
ds
or
mov
cmp
or
imul
aas
loope
jl
xchg
pop
test
insb
test
aad
or
mov
hlt
adc
pop
imul
aad
mov
pop
dec
sub
or
pop
mov
mov
ja
xchg
xchg
pop
inc
pushf
inc
sub
inc
lea
dec
clc
dec
push
dec
inc
mov
ds
shl
movsb
outsb
popf
icebp
pop
andl
popa
xchg
rclw
cli
sbb
dec
lcall
test
cmp
jge
ret
mov
cmpsb
imul
lods
mov
insb
push
pop
jo
scas
push
sub
pop
dec
fsubs
adc
jl
sbb
or
jg
in
bound
mov
es
loop
test
pop
lods
js
add
xlat
leave
and
sub
cltd
adc
xchg
jb
std
fisubl
sbb
fdivr
cltd
xorl
cmp
cmpb
cld
clc
jns
stos
adc
call
lret
addr16
repz
or
jbe
ljmp
jno
ja
roll
movsl
mov
fcompl
inc
data16
rorl
outsl
sub
call
push
dec
sbb
dec
xchg
rcll
sub
popl
jbe
sbb
int
jns
jae
cld
out
push
inc
scas
icebp
pop
pusha
pop
aas
rorl
fstps
add
repz
repz
lock
push
and
cmp
mov
dec
hlt
mov
addb
das
inc
out
push
cmp
inc
jle
mov
mulb
arpl
pusha
add
fs
jb
push
nop
hlt
ret
xlat
movsb
mov
push
pop
test
mov
add
or
enter
bound
sbb
enter
mov
pop
out
cmp
in
xor
sbb
sbb
inc
xorb
nop
adc
xchg
fadds
cmp
arpl
xchg
lods
or
push
xchg
das
or
cmp
loope
dec
shrb
das
nop
cmpb
mov
ljmp
into
out
in
pop
das
mov
and
mov
and
pop
cltd
dec
mov
addr16
out
andl
pop
cmp
mov
dec
lret
jae
jnp
cld
in
push
sbb
xchg
test
in
movsl
xor
mov
mov
push
lock
sub
jae
push
sub
pop
mov
mov
call
es
rorl
mov
lcall
lcall
cwtl
mov
movsb
or
or
and
cmp
sbb
inc
lods
add
loope
scas
dec
jmp
mov
fisttps
mov
push
sbb
pop
jle
jo
stos
xchg
popa
movsb
sti
and
and
xor
out
bnd
xchg
inc
repz
push
jno
dec
test
stos
outsl
xchg
mov
sub
mov
es
dec
jns
lods
add
xor
fwait
or
stos
sbb
and
xor
pop
push
and
in
in
mov
sub
pop
loope
mov
jae
xor
sbbb
iret
cmc
fabs
notl
mov
invd
cmp
sbb
mov
stos
mov
xor
pop
out
fsubr
push
stos
xchg
mov
xchg
lret
jno
dec
cmp
push
fnsave
outsl
loope
cwtl
mov
das
mov
fmull
inc
std
mov
push
xor
mov
sarb
lret
ds
pop
inc
cltd
fcoml
mov
sub
jmp
stos
push
jle
fists
cmp
xor
cmpsb
push
pop
lahf
add
sub
cltd
clc
cmp
aad
pop
jge
std
dec
fdivl
daa
inc
lock
repz
out
movsl
inc
stos
push
xchg
xor
dec
adc
test
sub
test
push
inc
add
subb
and
jbe
enter
sbb
mov
imul
cmpsb
sbb
test
out
mov
out
xor
cmp
adc
push
adc
mov
inc
flds
mov
jle
mov
lods
in
mov
dec
mov
mov
test
testl
cltd
jo
mov
adc
scas
test
push
dec
cli
fucomp
rclb
sbb
cmpl
mov
call
movb
add
xor
mov
andb
sbb
mov
lret
cmp
add
xchg
jecxz
movsb
mov
icebp
outsl
outsb
pop
inc
fisttpll
loop
jae
mov
jmp
arpl
fiaddl
sub
cmp
cmc
mov
xchg
sub
and
ret
test
xchg
mov
mov
or
sbb
movsl
clc
cmp
cmpsl
fcoml
imul
xchg
movsl
dec
mov
xor
xor
aam
fldenv
dec
rcll
ja
mov
call
mov
push
or
pop
dec
push
mov
sbb
mov
dec
and
push
sbb
nop
or
cld
and
mov
push
jns
das
mov
insl
jns
das
sbb
xor
push
lock
xchg
inc
rorb
and
sbb
dec
sbb
adc
pop
inc
cmp
sbb
shlb
mov
jl
fstpl
sti
sbb
sbb
in
clc
orb
sub
scas
or
subb
mov
push
frstor
aam
push
clc
and
sub
cltd
pusha
and
or
adc
loopne
inc
pop
out
movsl
xchg
pop
out
mov
jno
int3
inc
jo
jl
cmp
sahf
call
add
mov
fisubrs
dec
sti
aas
popa
rcr
aaa
gs
lcall
in
sbb
dec
lcall
pop
rcl
inc
add
adc
cmp
mov
fstpt
push
iret
ss
mov
xor
jbe
movsl
test
pusha
outsb
jns
inc
mov
and
sti
push
xchg
and
xchg
mov
cmp
rol
push
inc
push
xor
movsl
stos
test
pop
testb
das
mov
out
pop
xor
out
sbb
imul
sub
test
ljmp
sbb
or
inc
push
add
outsb
pop
js
ljmp
out
shll
jo
aas
mov
fiadds
xor
dec
pop
jecxz
cmp
outsb
xlat
into
or
push
add
pop
push
and
mov
mov
mov
in
bound
insb
test
fiadds
lods
leave
jns
les
ds
ds
add
cltd
and
sub
mov
lcall
aaa
push
pop
aaa
enter
lods
mov
inc
jmp
xchg
shrl
adc
adc
mov
dec
sub
ljmp
fwait
nop
mov
negl
arpl
dec
jmp
cmpsb
mov
adc
xor
mov
dec
dec
add
rorb
mov
or
test
sub
ss
orl
and
pop
jmp
sbb
jb
jmp
andb
mov
add
sub
sbb
mov
mov
in
fst
cmp
and
shlb
mov
mov
adc
test
unpckhps
faddl
lahf
push
ror
pop
fsub
dec
jmp
sbb
mov
dec
addr16
mov
jle
xor
mov
mov
out
cmp
xchg
xor
cwtl
out
cmp
jno
movsb
dec
stos
sub
es
scas
and
fwait
mov
sub
sbb
into
sbb
or
scas
lods
les
addl
cmp
add
dec
jno
orb
mov
dec
push
das
fcoms
jmp
arpl
cmp
xor
sub
loopne
cmp
xor
loopne
sub
mov
loopne
add
test
xorl
enter
aam
rorl
divb
or
inc
jno
loop
xchg
test
arpl
jge
dec
sbb
push
cmp
cmpsb
and
sub
insb
loopne
test
sti
sbb
pop
or
mov
sbb
mov
test
add
mov
int
push
push
faddl
sub
jle
lds
adc
jo
test
fildl
pop
push
jae
mov
mov
int3
and
dec
movsl
arpl
inc
lods
add
out
add
out
jge
push
outsl
rcll
push
mov
inc
sbb
xor
cs
jbe
popf
inc
jmp
xchg
testl
aad
mov
sub
sbb
mov
dec
fnstcw
or
jl
adc
rcl
pop
sub
jecxz
test
jmp
out
js
jmp
ror
jae
aam
inc
imul
jl
push
pushf
sub
lcall
add
out
bound
or
testb
cmpb
push
jmp
xchg
andb
push
jmp
add
jns
pop
add
sbb
out
or
add
repz
adc
das
icebp
and
lret
out
push
mov
adc
pop
pop
pusha
push
dec
dec
push
data16
mov
cmp
stos
inc
mov
cmpl
cmp
nop
or
xor
and
mov
push
imul
pop
pushf
gs
out
test
add
cmp
pop
jno
rorb
cld
dec
call
sub
hlt
mov
sbb
jne
sub
jp
aaa
in
int3
pop
pusha
xor
mov
cld
mov
push
inc
cltd
dec
xor
loope
pop
loopne
sub
mov
xor
jp
shll
inc
inc
lea
cmp
add
add
aas
and
loope
jnp
adcb
roll
xor
mov
xchg
imul
add
jnp
jo
rcll
sbb
add
ret
and
lahf
jl
mov
pop
adc
ret
js
sbb
cmp
jge
icebp
enter
xchg
and
jecxz
fsts
std
xchg
add
scas
add
in
push
mov
lods
xchg
cmc
push
mov
stc
loope
xchg
jo
pusha
loop
xor
mov
ret
jnp
bound
cltd
push
adc
scas
test
lahf
pop
xor
out
add
imul
outsb
jb
sbb
cmc
test
mov
cmp
adc
icebp
xor
push
jl
mov
sbb
rcll
clc
fdivrs
and
lcall
stos
test
dec
adc
or
test
ljmp
into
jo
xlat
cmp
cmp
icebp
scas
jno
xchg
aas
sub
loopne
jb
jb
jae
loop
rcrl
test
cmc
clc
in
xchg
mov
ja
pop
inc
popa
mov
cs
mov
into
into
loope
and
adc
inc
sub
or
loope
xlat
adc
xchg
fmul
push
sub
inc
aaa
mov
jmp
jne
stos
aaa
push
inc
dec
test
sbb
add
sbb
test
rcll
push
insb
call
adc
mov
inc
ret
xor
pop
inc
fnstenv
out
or
mov
scas
dec
fsubrp
lret
jnp
and
push
jle
add
mov
loop
push
pop
scas
inc
test
cli
inc
popf
lea
mov
clc
iret
popf
sub
out
sbb
stos
pop
adc
nop
imul
ja
push
or
pop
add
pop
xchg
and
pop
adc
mov
cs
out
stos
stc
dec
mov
mov
popf
jecxz
pop
pop
ret
imul
and
adc
fldenv
in
dec
add
int3
jge
adc
jp
adc
out
bound
sbb
call
and
stc
mov
lea
lods
ret
rorb
inc
sub
std
sub
push
jg
jno
sahf
imul
fwait
inc
stc
mov
xchg
add
notb
xchg
xchg
or
lods
subl
pop
shl
imul
dec
mov
mov
mov
pushf
pop
ror
cwtl
inc
andl
je
inc
dec
dec
mov
adc
rcrl
pop
adc
mov
inc
mov
xchg
cli
repz
arpl
imul
xor
xor
mov
and
cli
jge
mov
addb
jl
rorb
test
lea
sahf
sub
orb
push
rolb
push
sbb
les
lods
mov
add
lea
outsb
cmp
dec
inc
das
fwait
test
inc
int
icebp
divb
push
cmp
in
repz
lret
hlt
inc
push
jg
fwait
cmp
pop
leave
pop
fstpl
loope
lcall
ss
stos
in
popa
ret
push
out
sub
adc
cmpsb
cmc
adc
fld
data16
mov
sbb
jns
push
data16
ss
pop
test
mov
jb
xchg
or
out
test
dec
enter
cmp
inc
add
sub
push
sarl
pop
mov
in
ds
xchg
push
jecxz
jp
addr16
dec
mov
mov
nop
cmp
bound
xchg
jnp
push
dec
xor
lret
mov
cwtl
hlt
fldl
and
sub
int3
fcomp
cld
popf
out
jns
mov
push
sub
roll
sub
mov
pop
insb
add
inc
sbbb
xor
js
ficompl
outsb
pusha
xlat
xor
bound
or
jno
roll
cwtl
pop
stos
pop
sbbl
cmpsb
add
nop
push
sbb
insl
scas
pop
repnz
mov
pushf
lcall
imul
sti
movsb
push
pop
xor
xor
sti
inc
jp
scas
adcb
pop
pop
and
cltd
test
cwtl
cwtl
mov
repnz
icebp
fisttpll
add
ret
dec
xor
imulb
repnz
pushf
fwait
stc
sub
mov
rolb
add
or
or
or
fildll
push
sbb
jecxz
sbb
popf
jp
out
pop
xor
sbb
aad
les
in
test
cwtl
int
sub
mov
outsl
fstl
in
popf
sbb
xchg
in
push
insb
mov
or
test
ret
sub
sahf
cmpsb
add
sub
push
jle
mov
popa
or
stos
iret
inc
xor
mov
gs
mov
jne
into
and
mov
pushf
jmp
adc
xor
mov
mov
lea
ljmp
sub
sti
sbb
shlb
cmp
outsb
inc
xlat
xor
xchg
mov
add
jb
adc
sub
sub
xchg
icebp
int3
mov
scas
out
and
shr
adc
cmp
insb
lret
in
mov
sub
ret
dec
sub
pop
nop
in
add
test
jo
ret
sbb
fcoms
mov
sub
xchg
lret
pop
sahf
inc
adc
xlat
add
arpl
arpl
sub
sub
enter
xor
pop
cmp
push
mov
inc
cmp
sbb
mov
lret
or
sbb
mov
mov
and
mov
or
xor
dec
mov
scas
cli
pcmpeqw
dec
popf
cmp
or
push
sub
xor
lock
popa
pusha
aam
lods
xor
or
fldl
cmp
in
movsl
xor
aam
aas
bound
icebp
and
lods
mov
cli
sub
ud0
mov
arpl
call
sbb
pop
mov
rorl
fldenv
pop
dec
add
addr16
in
fidivs
push
and
sbbl
fcom
and
jb
call
jmp
inc
xorb
add
ljmp
push
lcall
dec
mov
push
push
cmc
push
mov
ds
cs
mov
stos
xor
sarl
sti
push
sbb
ret
daa
clc
sbb
lock
pop
sti
inc
jg
daa
in
fsub
call
xor
fwait
arpl
aam
sbb
sub
push
mov
lds
lock
fildl
pop
aad
call
sub
movsl
dec
xchg
popf
inc
data16
outsl
lcall
rcrl
sub
enter
sub
imul
push
fsubs
push
add
and
inc
jle
stos
cmp
flds
sub
pop
aaa
and
cmp
push
mov
mov
cmc
jecxz
mov
dec
and
add
aaa
popf
pushf
xor
sub
addb
es
sahf
sub
push
out
pop
divl
and
add
loopne
out
pop
mov
xchg
movsb
push
in
sti
sbb
ficompl
movsb
add
push
sti
dec
inc
cld
loopne
dec
or
lods
jge
mov
js
cli
add
lock
roll
cld
mov
shlb
in
mov
and
fisubrs
shrl
rcrb
lcall
test
mov
fwait
cli
add
nop
mul
clc
mov
mov
subl
pop
jg
inc
shll
mov
jle
mov
mov
dec
dec
out
adc
push
test
popa
mov
mov
jbe
push
adc
gs
adcl
jo
fmuls
rcrl
test
add
jg
int3
test
xchg
out
iret
stos
dec
xchg
fwait
inc
xlat
inc
xor
daa
insb
ret
fstpt
ss
scas
jb
adc
psubsb
cmp
adc
aad
pop
pop
sti
pop
lret
cmp
sub
mov
push
nop
or
mov
bound
add
mov
push
jg
fstp
enter
dec
add
fisttpl
push
push
jne
mov
inc
out
jb
xchg
icebp
imul
sahf
outsb
mov
pop
ljmp
dec
cs
sbb
popf
mov
mov
icebp
subl
xorps
hlt
adcb
gs
cmc
sbb
inc
aas
pop
leave
adc
das
negl
lods
in
push
js
pop
jg
sub
mov
jp
add
xchg
fdivl
les
mov
mov
stos
imul
shrl
leave
ja
clc
fistpl
loopne
sti
pop
stc
stos
cmpsl
loopne
enter
xchg
cmp
movsl
push
pop
ret
mov
or
cmpsb
lcall
jo
gs
push
add
popa
jmp
outsb
ret
xchg
daa
in
inc
stc
ljmp
mov
jb
cmpsb
rcrb
dec
not
xchg
mov
adc
cmp
inc
or
sarb
repnz
cmp
add
and
push
mov
xchg
out
sahf
pop
shrb
lcall
cld
mov
in
dec
outsl
sbb
mov
mov
add
xor
adc
les
mov
push
mov
pop
xor
fs
push
bound
mov
lret
lret
outsl
xor
xor
xor
mov
lahf
and
push
imul
loopne
out
add
imul
mov
cmpsb
dec
mov
nop
bnd
push
stc
mov
pop
in
ljmp
je
imul
nop
xorb
and
out
xchg
mov
and
mov
mov
lret
sbb
or
test
aaa
inc
leave
sbb
mov
mov
sub
pop
call
xor
imul
cwtl
sub
jl
sahf
andb
loop
xchg
sbb
ja
addr16
stos
xchg
sub
mov
rclb
xchg
dec
sub
je
inc
xchg
sbb
push
jne
mov
popf
iret
xchg
push
ss
ret
mov
or
fisubs
cltd
mov
dec
shr
lea
adc
cltd
out
jne
and
fcomp
or
sbb
sub
xor
cltd
inc
push
push
mov
loopne
xchg
sarb
addr16
add
xchg
fiadds
mov
cmp
in
cwtl
int
and
cmpsl
jns
pusha
lds
das
movsl
popa
mov
xchg
and
lds
adc
cltd
pop
mov
mov
incb
mov
sbb
or
cmp
test
test
insb
ds
loopne
mov
or
cmpb
mov
lret
jae
pop
stos
pop
es
loop
jmp
jno
call
int
mov
test
pop
add
in
xchg
xor
sbb
cmp
jns
mov
mov
add
push
insb
dec
dec
xor
pop
mov
enter
out
pop
add
sbb
xlat
fstl
clc
rcl
mov
mov
loopne
sub
popf
vpinsrw
ret
sbb
or
push
adc
add
dec
adc
jmp
fs
jge
and
adc
clc
jbe
mov
cltd
mov
adc
mov
jb
inc
sbb
sbb
movsb
xor
inc
push
out
in
outsl
lea
xor
dec
xor
fdivs
ficoms
dec
aam
add
fcompl
loopne
pop
fcoml
scas
iret
mov
sub
fisubrl
call
pavgw
xchg
or
loope
cmp
fistl
aam
fcoms
dec
test
jbe
aas
push
jb
dec
xchg
inc
addr16
notl
and
lock
adc
lds
jns
sbb
das
xor
mov
nop
adc
rcrl
dec
test
mov
and
icebp
jecxz
sbb
push
push
sbb
add
es
mov
push
lock
fidivl
add
shlb
xchg
stc
xor
jbe
cmc
out
mov
imul
jno
fs
cli
lea
mov
test
cltd
imul
mov
call
xor
pop
xchg
pop
xor
in
mov
sarb
jno
mov
sbb
mov
into
incb
push
stos
jb
cmpsl
je
sub
cmovg
lods
push
cwtl
cwtl
dec
and
inc
imulb
insb
mov
sbb
outsb
sahf
and
and
push
dec
in
push
xchg
movsb
popa
sarl
popa
psadbw
inc
fwait
in
xchg
nop
leave
jg
mov
mov
jl
loop
add
jecxz
adc
inc
pop
insl
xor
outsb
mov
ret
jnp
pop
test
fisubrl
punpckhbw
inc
insl
enter
mov
jge
out
and
xlat
pop
aas
pusha
addb
push
out
sbb
cmp
adc
add
dec
notb
push
mov
mov
shl
mov
es
add
cld
dec
addl
ret
filds
imul
lds
jbe
lret
aad
out
or
into
mov
bound
sbb
loope
ret
adc
jae
sarb
cld
lock
inc
xor
sub
int
in
arpl
int3
jnp
mov
sbb
rol
rcll
mov
pop
sub
popf
ret
adc
ret
daa
js
sub
jns
rorb
add
pop
and
js
or
or
test
popa
mov
or
jg
stc
insb
sbb
sbb
shl
pushf
xor
inc
out
cmpsl
loop
and
arpl
sub
daa
loopne
jmp
jg
jg
fldenv
jecxz
daa
jno
int
test
in
aam
adc
jl
xlat
sti
or
or
lds
lods
in
test
jne
aaa
aaa
add
push
imul
out
cmc
or
in
popf
xchg
mov
mov
test
roll
jp
stc
fidivrs
mov
sbb
and
mov
loope
dec
ret
out
hlt
outsb
out
lods
int3
dec
and
jmp
push
adc
repz
into
add
rcl
sahf
cwtl
shlb
xchg
cmp
stos
pop
push
ja
pop
cmp
stos
add
shlb
lea
out
fdivr
jle
aam
mov
xchg
outsb
cmp
je
dec
leave
pop
cmp
inc
jmp
cmp
lods
add
out
mov
dec
gs
pop
mov
iret
push
dec
loopne
add
push
jne
fwait
sub
ret
inc
cmpsb
jmp
cmp
and
xchg
movsl
and
pop
adc
pop
mov
mov
cmp
outsl
dec
mov
xchg
xlat
imul
ss
in
add
pop
cmovb
and
push
pushf
pop
inc
mov
jmp
pop
fdivs
push
loopne
jl
dec
mov
pop
jb
ret
cmpl
cmpsb
mov
rcll
repnz
fbstp
mov
mov
mov
adc
lods
push
jo
out
sarb
ret
add
clc
jecxz
adc
and
popa
rclb
outsb
addr16
mov
popf
lds
push
lret
cs
add
adc
xlat
hlt
pop
push
dec
out
adc
out
jmp
or
scas
cmp
push
sbb
cmc
cmpsb
outsl
pop
add
ss
push
jnp
or
out
out
xchg
cmpsb
pop
jbe
dec
and
cmp
mov
test
lret
mov
xor
xor
mov
or
das
add
mov
add
xchg
daa
inc
xor
je
cmp
sub
mov
fcmovb
push
and
ss
bound
pop
nop
out
ljmp
jnp
movb
fadd
jl
or
or
std
mov
popf
and
sub
gs
push
test
mov
or
xor
inc
cmpsb
test
ret
xor
xor
mov
jnp
ficoml
cmp
addr16
xchg
dec
adc
je
out
fmuls
stos
ficoml
jle
jno
js
cs
mov
mov
xlat
cli
mov
out
cmp
call
inc
mov
imul
cmpb
mov
mov
iret
mov
cmp
mov
dec
inc
into
les
loope
cmc
mov
inc
inc
mov
andb
jnp
rorl
dec
xor
lea
fmull
rorb
inc
leave
mov
in
cmp
test
adc
leave
scas
ficomps
stos
lcall
mov
add
fimull
xchg
in
xchg
push
pop
test
and
dec
sti
jae
mov
testb
mov
or
pusha
push
lds
add
mov
pop
jns
push
in
mov
inc
cmp
imul
or
jb
dec
test
test
mov
movsb
pop
addb
enter
add
notl
movsb
sub
xchg
adc
jle
sbb
out
fdiv
jge
push
cli
insb
sub
testb
stc
lret
pop
mov
jns
mov
jmp
loope
ret
out
sarb
mov
pop
sbb
ds
mov
push
stos
push
push
into
test
jne
pop
rorl
addb
loop
lods
fdivrl
dec
cmp
pushf
je
push
jnp
mov
pop
and
aaa
mov
bound
dec
pop
into
pop
scas
cmp
or
je
fidivs
rolb
fidivl
mov
mov
xor
addr16
xchg
push
ficompl
aam
dec
cmp
inc
dec
adc
mov
cmp
sub
cld
push
add
lock
or
lret
xor
dec
scas
xchg
push
and
in
fisubrs
rcl
jb
xlat
adc
cmp
or
dec
push
int
imul
aaa
inc
add
cmp
cmpsb
jb
addr16
jmp
jg
inc
sti
mov
jecxz
lcall
push
mov
je
xchg
dec
repz
aad
imul
hlt
imul
cwtl
sub
in
fwait
xchg
lods
mov
daa
into
test
insb
dec
mov
repnz
lods
and
lea
dec
std
shlb
fs
pop
adc
sahf
adc
jo
push
ja
int
repnz
imul
mov
cmp
andl
repz
adc
pop
lahf
push
or
push
addb
jg
push
cmp
lret
lods
cmp
cld
enter
jns
xor
lea
jbe
stc
dec
and
ret
xchg
out
dec
mov
push
inc
xchg
jo
xor
jle
cmpsl
and
xor
xor
mov
mov
shrl
or
or
gs
loope
xchg
xchg
mov
sbb
add
jnp
cmp
adc
xchg
xchg
pop
leave
orl
andb
jmp
sbb
nop
pop
push
mov
add
sub
mov
jns
inc
push
and
fsubrl
mov
add
inc
xor
push
pop
push
or
cli
imul
and
sbb
mov
int
lcall
das
cli
jnp
push
in
and
test
in
mov
xor
xor
sbb
adc
cmpb
add
pop
sub
stc
sub
hlt
cmp
xlat
pop
rorl
cmpsl
mov
inc
fldpi
push
inc
stc
mov
insl
cld
rcrb
mov
daa
hlt
int
lret
lods
into
fcoml
cltd
push
addr16
jp
jb
test
pop
xor
push
adc
nop
arpl
pop
cmpsb
popf
fdivl
icebp
pop
sub
aas
jp
rcrb
sub
inc
push
fdivl
dec
pop
js
jnp
mov
mov
lea
test
roll
dec
and
ret
icebp
fbstp
nop
orb
inc
or
cmp
dec
add
pop
pop
inc
dec
movsb
inc
lcall
push
mov
jecxz
mov
out
add
pop
mov
push
testb
jno
cld
sbb
mov
cltd
inc
inc
mov
aas
mov
arpl
das
and
push
and
mov
add
xchg
into
dec
lods
bound
inc
cmpsl
push
adc
gs
xchg
push
add
inc
xor
xor
and
cltd
call
add
xor
dec
lret
test
sbb
into
call
pop
es
test
inc
mov
lods
stos
adc
js
inc
or
divl
lds
in
cwtl
jo
mov
or
pop
add
sti
mov
mov
pushf
mov
subb
std
int3
ds
clc
nop
int3
jbe
mov
or
les
jb
and
outsb
adc
pop
xchg
js
les
inc
mov
push
push
popa
and
dec
test
push
cltd
insl
lea
lcall
push
mov
mov
or
movb
xchg
jle
sarb
sub
push
add
jbe
add
inc
ja
mov
das
mov
mov
push
rolb
loop
repz
popa
push
push
int
sub
fcoms
mov
or
nopl
test
insb
dec
xchg
leave
add
daa
loopne
push
sbb
stos
or
sub
adc
pop
mov
mov
out
test
or
aad
sarl
mov
sub
or
xlat
pop
int3
daa
pop
das
mov
sahf
sbb
push
inc
popa
lds
push
dec
add
and
ja
fdivr
or
jb
test
and
cmpsl
mov
fcmovnu
cmpsl
cwtl
std
loop
push
adc
jg
push
fisubrs
xorl
jmp
aas
jmp
mov
cmp
ret
rorb
nop
aam
outsl
aaa
shll
xor
jmp
cld
outsb
loope
pop
cmp
cmpsl
clc
push
shll
adc
into
sarb
sbb
fimull
pushf
sbb
ffreep
jg
fndisi(8087
adc
sub
pop
pop
std
cmpsb
sub
test
jns
and
rcr
cmpsb
add
inc
push
ficoml
mov
cwtl
add
push
sub
inc
cmp
jp
dec
cmc
imul
mov
push
inc
and
shr
out
enter
jnp
pop
cmp
adc
or
cmp
lcall
inc
pop
lcall
sbb
and
aam
jnp
inc
mov
mov
sub
push
cld
insl
pop
mov
dec
add
cld
mov
loop
xchg
imul
das
dec
xor
push
dec
xor
fwait
xor
test
jo
aad
pop
rcl
jnp
daa
mov
xor
fbstp
filds
sti
xchg
cwtl
jecxz
pop
cli
xchg
ss
imul
adc
or
xchg
inc
inc
inc
mov
aas
jns
into
xor
dec
add
rcrl
ss
or
push
out
nop
movsl
mov
adc
add
push
enter
test
aas
xchg
mov
cmp
and
imul
xor
jbe
pop
das
mov
mov
xchg
inc
clc
push
out
mov
test
insl
xor
push
shrl
ret
jne
and
pop
ja
or
lds
add
scas
mov
xchg
repnz
ja
lret
cmp
repz
mov
mov
mov
icebp
je
pop
cmpsb
push
lock
sbb
or
mov
push
mov
xor
repnz
dec
mov
leave
sahf
xchg
imul
dec
add
xchg
fiadds
xchg
xchg
addl
inc
scas
or
testb
mov
or
mov
cmp
incl
es
adc
inc
adc
inc
cli
inc
test
stc
or
push
es
cmp
sub
in
aaa
inc
hlt
push
fidivs
add
bound
jo
sbb
push
jnp
pop
inc
movsl
mov
lods
je
mov
cld
pop
mov
scas
cmp
mulb
mov
out
and
out
jecxz
stos
out
ret
lahf
and
dec
call
sbb
lret
not
sbb
xchg
or
mulb
jb
insl
cmc
fadds
rol
dec
mov
xchg
icebp
add
jae
mov
pop
stos
mov
iret
jg
push
das
mov
lret
xor
and
adc
test
sti
jg
jnp
lahf
mov
iret
mov
sarl
dec
xchg
movsb
repz
jb
inc
fbld
mov
addr16
sbb
cmp
imul
bound
outsb
sbb
out
das
cmp
loope
or
shll
jge
inc
pop
jnp
notb
es
cmpsl
xor
adc
pop
jo
aas
xchg
aad
arpl
leave
daa
push
inc
inc
aaa
call
lahf
enter
fiaddl
push
lock
loope
cwtl
cmpsb
loop
adc
mov
push
aaa
jb
dec
jecxz
mov
movsl
adc
shlb
rcll
xchg
das
hlt
sub
sarb
xlat
cmp
lock
dec
cmpsl
clc
mov
sbb
lcall
out
cli
fwait
shrl
pop
andb
push
sbb
or
inc
jle
out
outsb
xor
enter
aad
sahf
data16
push
lret
sbb
sbbl
xchg
pop
das
push
and
inc
inc
push
arpl
popa
es
push
stos
ss
notl
push
inc
pushl
pop
jns
lcall
sub
add
mov
push
push
scas
inc
inc
adc
stc
mov
cmp
dec
cld
cmpsl
daa
lea
jg
push
adc
lds
js
int
dec
sarb
mov
jns
pop
xor
je
out
jl
push
bound
in
or
mov
repz
pop
bound
sahf
clc
jl
cmp
jl
push
fisubs
jmp
nop
cmp
lods
out
and
pminub
sub
xor
popf
push
cmpsb
out
push
jl
insl
mov
stos
rclb
jo
jno
mov
push
dec
add
xlat
jae
in
cld
push
fbstp
aam
jg
mov
cmp
mov
mov
mov
nop
sbb
inc
xchg
adc
jnp
popf
mov
into
mov
pop
dec
xor
mov
shl
push
push
jecxz
imul
ljmp
cmp
adcb
mov
les
inc
pop
pushf
test
nop
sti
xor
push
mov
sub
add
ljmp
psrlq
cmp
cmpsb
out
int3
dec
stos
outsb
loopne
sbb
das
mov
pushf
aam
stos
dec
or
lds
imul
clc
andl
cli
xor
inc
lcall
jns
aad
scas
movsl
stos
jo
test
push
lcall
and
add
or
jnp
and
imul
popf
imul
in
es
xor
test
call
sub
pop
push
xor
pop
leave
fnstcw
lret
inc
cmp
mov
push
jnp
pusha
cmp
stos
mov
jp
pop
in
imul
mov
mov
cs
mov
jne
ja
cwtl
shl
cwtl
xlat
pop
mov
fidivrl
and
sbb
cmp
sub
or
sub
cmc
inc
rol
mov
cmpsl
and
pop
jae
jp
lds
xchg
lock
xor
icebp
pop
jbe
inc
mov
aad
repz
pop
dec
aad
bound
lods
adc
mov
andl
xchg
cs
xor
mov
mov
lds
dec
pop
inc
movsb
cmp
jbe
xchg
test
xor
icebp
jne
je
popf
jecxz
lock
and
lds
movsl
orl
outsb
in
test
test
push
jge
rcll
cmp
cltd
xchg
in
nop
rclb
and
outsb
cmp
sbb
or
jecxz
sbb
sarl
jo
sahf
clc
fiaddl
fisubrl
addr16
adc
push
outsb
fnsetpm(287
and
mov
movsl
scas
or
imul
mov
cwtl
cmp
cld
lds
popf
cmp
mov
stc
les
dec
cmp
stos
dec
pop
xchg
mov
adc
and
dec
inc
sbb
mov
aaa
popa
xchg
xor
adc
lret
mov
imul
popa
inc
pop
mov
mov
jecxz
icebp
xchg
int3
push
sti
jb
sahf
jmp
jg
inc
mov
inc
dec
test
and
popf
insl
shrl
ja
cmp
add
dec
out
inc
dec
outsb
call
mov
inc
mov
enter
mov
mov
fistpl
xlat
mov
clc
cli
loope
jecxz
sub
push
push
dec
cltd
mov
dec
jp
push
jl
imul
data16
sti
mov
or
jle
adc
ror
xchg
mov
xorb
outsl
xchg
ja
mov
pop
ss
insb
jl
dec
dec
or
data16
daa
pop
push
outsl
movsl
jp
xchg
pop
jbe
jbe
sbb
xor
xchg
add
dec
aaa
cmp
rcrl
shr
dec
orb
dec
rcll
push
push
les
cmc
popf
mov
es
or
adcl
pop
adc
mov
xchg
pop
jp
inc
icebp
test
push
or
or
inc
cmovne
imul
test
and
sub
xor
mov
xor
int3
cmpsl
inc
mov
lds
xor
inc
repnz
nop
mov
jle
test
xor
mov
pushf
dec
sbb
xchg
pop
push
pop
jp
push
pushf
lods
notl
xor
mov
test
icebp
rcrl
in
mov
sub
push
je
xor
sub
roll
shr
pop
lods
fucom
adc
inc
cli
leave
out
scas
pop
mov
mov
repz
nop
jge
sbb
push
test
lods
test
jl
int3
xchg
dec
inc
stos
leave
std
dec
xor
sub
xor
rcll
dec
int3
mov
adc
outsl
xchg
mull
jo
out
xor
stos
xor
ds
icebp
out
sbb
jecxz
loop
push
jmp
push
mov
inc
cmp
ljmp
sub
pop
add
pop
loop
into
xchg
push
cmp
dec
sbbb
push
test
clc
jnp
adc
lock
aaa
or
dec
push
xchg
lea
mov
mov
arpl
add
or
outsl
vmulss
test
xlat
adc
add
sub
movsb
cmp
cltd
outsb
fistl
lods
sub
mov
xor
lcall
aad
jl
mov
cmp
push
add
loope
inc
fsub
sub
push
mov
lods
out
jge
ret
dec
push
mov
or
into
jge
ficoms
test
mov
fnsave
push
push
or
jmp
pusha
push
jecxz
rcll
faddl
sub
loopne
sbb
repz
xor
pushf
pop
or
pop
dec
bound
lcall
add
push
fisttps
in
imul
sbb
mov
adc
jp
hlt
dec
int
in
push
jnp
rorb
jbe
push
mov
inc
lds
fldcw
add
or
jae
and
orl
int
pusha
popf
jne
pop
push
xor
xchg
pusha
aas
and
mov
dec
jg
jne
push
dec
xchg
in
and
je
pop
mov
lahf
pop
push
iret
jnp
jo
jnp
or
pop
inc
js
mov
jmp
jge
shll
jecxz
adc
push
jne
sahf
lods
call
add
test
popf
in
push
and
rcr
adc
ret
divb
xchg
sbb
cltd
add
fldenv
in
out
xchg
lahf
and
lds
xchg
cmp
inc
mov
daa
rolb
or
std
mov
lret
xchg
adcl
adc
pusha
or
xor
lret
pop
xchg
ficompl
xchg
subb
push
mov
aaa
movsb
add
mov
sbb
stos
orl
mov
cli
sub
imul
scas
mov
paddw
xor
sti
mov
fxch
add
cmp
fs
xchg
mov
dec
jno
pop
jecxz
in
mov
jno
sbb
mov
and
pop
xchg
icebp
cltd
jl
lret
imul
lcall
cli
mov
cmp
adc
pop
push
cmc
movsl
rcl
jmp
mov
aaa
insb
push
lds
jb
rcrl
in
stos
push
popf
inc
aaa
xchg
jmp
lcall
clc
movsl
jge
push
jns
loopne
xor
push
push
js
mov
add
hlt
mov
jno,pt
inc
mov
pop
xor
sbb
addl
outsl
sahf
sbb
mov
cmp
pop
adc
int3
rolb
inc
scas
cmpl
jmp
xchg
fbld
pop
jbe
cmpb
aam
std
pop
aam
dec
clc
in
aaa
dec
imul
mov
jnp
cs
mov
mov
xchg
pop
imul
jle
dec
sbbl
lods
js
insb
scas
xchg
nop
jo
out
mov
ret
and
in
in
pushf
fdivr
std
lods
mov
and
mov
mov
call
sub
push
mov
icebp
fidivs
lret
and
pop
loopne
pop
xor
je
movsb
lret
inc
stos
in
sub
lea
pop
pop
stos
mov
ss
sub
lods
jnp
cwtl
mov
mov
push
add
sbb
sbb
arpl
jmp
mov
push
mov
inc
dec
cmpsb
lahf
add
jmp
push
sar
addr16
mov
push
adc
cs
shl
dec
xchg
mov
pop
les
sbb
or
mov
add
arpl
dec
xlat
mov
fsub
lods
fnstsw
and
sub
pop
xchg
mov
xor
lcall
sub
lock
pushf
lcall
mov
cltd
aad
aas
insb
int3
pop
inc
mov
or
jne
icebp
push
imul
lds
push
and
push
cld
adc
mov
into
popa
stos
mov
cmpsb
mov
jg
repz
xchg
dec
pop
push
out
push
xor
mov
fcmovne
pop
xor
adc
ret
pop
inc
adc
pushf
divl
jno
out
mov
adc
es
ret
add
and
cmp
out
push
xchg
aad
xor
pop
push
pop
in
xor
xor
int3
stos
mov
in
sahf
and
xor
scas
dec
sub
enter
shlb
inc
pop
xchg
sub
inc
pop
test
aas
dec
fwait
xor
stc
add
ja
setns
cmp
nop
jno
xlat
icebp
out
cmp
dec
repz
mov
aam
jp
fsubl
xor
or
mov
aam
push
fidivs
cmp
adc
daa
shrl
into
lods
lods
push
mov
inc
mov
xchg
out
mov
adc
push
pop
out
repnz
mov
and
test
mov
jno
and
xchg
in
fwait
pop
xor
inc
adc
sub
mov
xchg
mov
mov
or
cs
loope
jnp
jnp
jp
cli
lret
inc
xchg
xchg
mov
cmc
push
test
add
fmull
inc
mov
sbbl
repz
mov
cmpsl
pop
jb
mov
adc
inc
fists
xchg
inc
dec
fstpl
ds
jnp
xlat
pushl
push
bound
adc
pop
jbe
shll
xor
into
sarl
adc
sbb
mov
pop
adc
xor
push
out
xchg
xor
out
out
or
mov
push
and
pusha
aam
jmp
jae
lock
sub
jmp
jno
sahf
loop
jecxz
sbb
xchg
pusha
scas
dec
movsb
bound
mov
sub
loop
jl
pop
addr16
push
dec
loopne
shr
xchg
sub
adc
test
idivb
cmp
add
popa
icebp
outsb
andl
adc
xchg
jmp
xor
or
push
addb
ret
je
xchg
sub
stos
int3
test
inc
xor
cli
cmp
jg
call
mov
dec
push
add
repnz
mov
sub
pop
iret
push
je
inc
in
fiaddl
cmp
insl
mov
cwtl
adc
popf
push
or
cmp
ret
jp
lock
xchg
inc
out
roll
outsb
xchg
pop
mov
push
int
and
push
in
pop
add
xchg
xchg
sub
jne
stos
scas
push
lahf
gs
fisttpl
aad
jle
pop
xchg
sti
cmpsb
in
scas
adc
movsl
mov
rcr
xor
into
icebp
cs
xchg
in
outsb
pop
or
stos
or
jns
mov
xchg
xlat
rorb
fwait
test
jp
jns
lret
lock
jb
rcrb
or
push
dec
inc
sub
push
imul
adc
in
ds
jno
nop
mov
mov
gs
jo
or
xor
pop
int
cmp
test
call
pop
hlt
and
or
nop
cmp
cltd
add
pop
jbe
inc
adc
lock
rol
jne
aaa
pop
std
and
mov
cli
mov
cmc
xor
cltd
aad
or
movsb
cmp
add
shrl
int
outsb
mov
mov
adc
out
sbb
stos
xchg
mov
mov
cmc
nop
arpl
sbbl
movsl
lret
jecxz
jecxz
mov
mov
loop
add
loopne
or
sbb
hlt
xchg
test
xorl
xchg
jecxz
push
in
push
js
or
push
inc
dec
cmpl
fs
icebp
xchg
stc
popa
xor
es
cmovb
nop
jg
xlat
decl
push
fnsave
repnz
xchg
mov
or
scas
jp
iret
out
decb
mov
xor
xchg
je
xor
stos
shll
popa
mov
push
pop
call
mov
adc
sbb
rcrl
jecxz
sbb
ret
adc
fcmovbe
lahf
mov
adc
add
scas
lret
inc
dec
pusha
call
jo
ja
pushf
adc
push
pop
push
int3
pusha
sub
imul
xor
sbb
push
popa
das
jmp
and
pusha
imul
lods
js
dec
mov
in
cmp
and
xor
dec
add
stos
lods
jle
xor
xor
test
out
inc
fsts
out
shll
js
xchg
in
shll
pop
push
lods
ret
mov
je
inc
and
sub
pop
popa
xor
addl
sbb
in
int3
pop
aam
or
icebp
push
and
in
fnstenv
mov
xor
cmpsl
mov
popf
jp
pop
mov
aad
data16
popa
loopne
dec
fdivrs
test
das
into
repnz
movsb
xor
aaa
sbb
mov
push
pop
test
aas
mov
imul
inc
int
fisttpll
sub
popf
ds
mov
mov
ret
mov
adc
mov
test
push
out
push
fdivrl
enter
xchg
cmp
insb
jl
cli
add
mov
nop
movw
ljmp
jle
inc
add
xchg
lea
mov
or
data16
push
xchg
sub
mov
sub
insl
jnp
daa
mov
inc
dec
xchg
insl
or
out
and
ret
daa
sahf
cmpb
cmpsb
jne
test
dec
addl
mov
xchg
xchg
pop
pop
fs
cltd
popa
jmp
cmp
sbb
sub
mov
adc
ss
loop
int
mov
imul
or
push
ja
sub
jno
orb
fs
push
or
pop
cltd
hlt
xchg
daa
popf
mov
jne
mov
popa
mov
or
and
in
push
jge
ret
jae
push
in
dec
lret
outsl
outsb
insb
mov
movsl
push
cwtl
inc
repnz
in
mov
push
mov
out
push
lods
xor
add
xchg
movsl
aam
xchg
imul
jno
and
mov
rcll
scas
jle
xchg
mov
enter
cmp
cmp
bound
out
repz
das
cmp
xor
icebp
loopne
stc
add
adc
push
in
stc
stos
sub
das
add
test
aam
jl
sbb
nop
sbb
aad
aam
call
jae
jbe
dec
aas
ficoml
rol
pop
dec
mov
xorl
clc
adc
je
inc
dec
adc
mov
mov
jmp
sbb
repnz
and
into
lea
shrl
or
testl
in
xor
pop
ret
push
pop
les
jae
cmp
fstpt
sub
negb
std
inc
push
nop
sub
les
xlat
jae
sub
out
jno
pop
mov
inc
and
pusha
mov
inc
jl
or
cmpsl
pop
aas
imul
push
sub
rorl
mov
dec
mov
inc
xor
jb
outsl
xchg
mov
sub
nop
mov
sbb
lcall
mov
adc
out
fwait
add
test
adc
xlat
js
or
hlt
jmp
insl
ret
aad
add
insb
pop
xchg
adc
jle,pn
sbbl
sbb
arpl
lods
mov
js
dec
mov
ljmp
xor
mov
cmc
and
imull
cmc
xorl
sub
sub
jae
jmp
add
and
cmp
mov
lods
push
push
xlat
xor
jb
push
lea
xchg
cmp
inc
push
js
fnsave
adc
je
das
cmpsb
mov
xor
lock
jecxz
mov
decl
loop
out
sbb
shl
mov
arpl
inc
test
lcall
jge
insb
leave
ret
inc
addr16
cwtl
xor
push
push
and
hlt
into
mov
push
stos
pop
and
rorb
and
andb
pop
xor
mov
cmp
adc
sub
insb
adc
enter
andb
mov
test
ss
sbb
add
pop
xchg
test
pop
mov
jecxz
cmp
jge
mov
sbb
test
outsl
push
dec
mov
or
add
mov
sbb
xor
aam
stc
mov
xchg
incl
cmpsl
fcoml
cmp
cwtl
sub
push
push
out
and
xchg
xchg
dec
adc
imul
cmp
mov
loopne
addr16
and
sub
push
dec
sbb
jmp
push
call
fidivl
mov
sub
xchg
into
cmp
xchg
push
insb
inc
cltd
shrb
sub
push
or
mov
jno
xchg
jo
mov
add
aam
mov
xchg
xor
mov
loop
xor
pusha
sarb
pop
sbbl
adc
jle
mov
xchg
adc
int3
in
lret
mov
adc
dec
dec
sub
mov
ds
icebp
mov
lods
andb
pop
xchg
sub
rorb
cmp
xchg
dec
add
cmc
mov
jl
in
pushf
adc
out
cld
iret
setnp
and
xchg
push
mov
into
outsb
pop
test
jl
add
adc
fldcw
lcall
fists
add
jle
addr16
lds
dec
rclb
xchg
pushf
aam
xor
and
subl
sub
stos
mov
ds
cmp
ja
into
push
nopl
fisubs
adc
adc
jae
pop
xor
inc
loop
dec
movsb
in
xlat
and
out
arpl
push
xchg
push
int
lods
out
scas
jg
jbe
dec
xchg
mov
and
mov
mov
xchg
mov
dec
jbe
loop
pop
test
jns
xlat
pop
rcl
and
into
push
fisubs
movsb
xor
dec
movsl
ficoms
xchg
and
out
cmp
outsb
lock
insb
fs
cmpsb
dec
add
ret
and
push
or
out
jmp
stc
in
xlat
bound
mov
mov
out
in
pop
push
subb
and
ret
cmpsl
ds
das
mov
aas
inc
jecxz
add
pop
mov
inc
dec
mov
repnz
add
shl
es
shr
fyl2xp1
push
and
dec
movsl
xchg
sbb
jmp
cld
icebp
lret
mov
jmp
filds
dec
imul
inc
out
adc
xorb
inc
mov
pop
pop
pop
mov
or
loope
cli
imul
jb
into
xchg
push
out
sbb
pop
aam
mov
mov
pop
enter
xchg
inc
and
into
shll
in
mov
sbb
mov
ret
add
sub
pop
rorl
into
dec
xor
jae
divb
and
jge
xchg
or
jb
repnz
xchg
ss
aad
imul
mov
jo
push
mov
lods
lcall
pop
adc
jns
loop
sub
jae
lea
in
jo
sub
xor
push
hlt
xchg
dec
int3
adc
pop
or
xlat
je
jmp
icebp
data16
push
or
test
mov
sbb
outsl
repz
xchg
fs
lea
xlat
xchg
pusha
pop
dec
push
orl
xchg
pushf
push
add
cmp
fldt
call
cmc
pop
mov
jmp
mov
std
pop
cwtl
aas
insb
cld
das
mov
in
mov
arpl
shll
cmpsl
dec
push
std
into
sti
rclb
iret
inc
cmc
out
test
cmp
decb
imulb
jae
call
add
mov
lods
lds
mov
lret
pushf
loope
imul
shrb
not
push
jno
xor
add
cmp
cmp
or
popf
and
in
stc
shlb
enter
sbb
sub
mov
dec
lret
lds
lods
ret
mov
loope
sub
out
sarb
xchg
cwtl
int3
add
test
push
add
mov
fs
or
fidivs
push
out
xorb
sbb
pusha
addr16
ljmp
pop
inc
out
inc
pop
lret
or
je
stc
jl
sub
inc
addr16
cmp
jb
sbb
jmp
cmc
popa
repnz
adc
cmp
enter
fcomps
lcall
pop
adc
xor
dec
je
iret
cld
sbb
call
adc
push
aaa
cmp
data16
mov
scas
nop
xchg
fcomip
jg
lahf
jmp
mov
sbb
inc
add
fsubs
loop
jmp
jp
xor
jo
mov
das
sub
mov
push
xchg
xor
xchg
xor
hlt
lahf
mov
mov
dec
xchg
repz
jp
fincstp
sbb
xchg
aad
insl
icebp
stos
lods
fidivrs
push
jnp
das
scas
jecxz
push
ljmp
jns
lret
xchg
adc
les
mov
divl
lahf
into
jno
mov
outsl
repnz
xchg
mov
subb
movsl
sub
icebp
inc
out
testl
pop
dec
pop
das
xor
test
jecxz
sbb
pop
cmp
dec
iret
psllq
mov
hlt
mov
sarb
lods
lock
xor
in
sbbl
lds
testl
sub
fsts
jp
sub
test
aad
and
in
mov
xchg
outsl
mov
mov
gs
sarb
jmp
test
int3
mov
ficoms
enter
mov
mov
ret
pop
jne
arpl
jbe
cmp
push
xor
mov
dec
mov
leave
repnz
mov
add
add
mov
or
int
clc
jle
mov
or
cwtl
xchg
clc
imul
sub
scas
mov
int3
inc
cmc
das
sub
shr
push
bnd
cmc
fidivl
in
jp
stos
rcrb
mov
jp
dec
out
push
or
dec
in
fcmove
imul
xchg
shll
enter
mov
imul
sbb
push
adc
inc
pop
or
js
sub
mov
in
cmp
sbb
or
cs
aas
test
das
push
xlat
pop
mov
mov
fneni(8087
repz
jb
stos
cli
scas
dec
adc
mov
sbb
cmp
push
cwtl
cli
inc
push
inc
pop
enter
int3
mov
xor
adc
xchg
add
push
jns
xchg
add
or
stos
xchg
mov
hlt
mov
mov
arpl
inc
ror
mov
xchg
sub
in
repnz
stos
push
push
mov
push
gs
push
pop
and
cmp
pop
mov
mov
dec
inc
fdiv
inc
add
and
add
imul
push
call
adc
out
data16
add
inc
lods
ss
jb,pn
ret
sbb
xor
jno
sbb
ljmp
sbb
mov
insl
lods
outsl
idiv
into
lea
dec
xchg
xor
jmp
mov
dec
mov
subb
jge
sbb
ja
dec
inc
jno
mov
xchg
mov
les
push
sahf
out
or
fnstcw
xor
lods
movsb
das
and
sbb
sbb
inc
sarb
cmp
add
aaa
cltd
pop
cmp
out
int
xor
pusha
call
dec
int
cmp
fmuls
sbb
mov
je
jne
adc
imul
pop
xchg
push
addl
pop
adc
mov
xor
push
int3
pushf
xor
pop
adc
enter
xchg
mov
in
xor
insb
mov
sti
mov
mov
enter
jno
cmc
and
int
sub
dec
pop
dec
adc
dec
stos
sti
xchg
ret
add
and
popf
mov
arpl
xchg
nop
cmc
jns
push
sbb
leave
nop
dec
push
mov
push
push
or
movsl
dec
stos
in
bound
repnz
fiaddl
jl
sbb
sbb
movsb
jne
nop
cmp
xlat
stos
in
cltd
insb
fcoml
sub
notl
aad
mov
fsts
xchg
cmp
divl
rcll
mov
inc
adcb
cmp
ror
es
and
js
dec
int3
lock
cmc
jns
bound
lcall
dec
or
mov
mov
pop
jp
pop
jno
pop
mov
dec
popf
xchg
mov
pop
add
jnp
iret
int3
js
ss
push
out
or
push
jp
mov
mov
jb
mov
xchg
sti
sahf
pop
popf
lcall
mov
ljmp
fistpll
subb
pop
sub
lcall
sbb
je
loopne
push
xchg
xor
jb
lret
xchg
inc
loop
and
push
imul
ds
cld
gs
sarl
mov
insb
sbb
cmp
inc
add
mov
ja
stos
adc
ficompl
imul
pop
test
dec
add
scas
sbb
mulb
push
in
or
sub
andl
lahf
ret
adc
mov
pop
jmp
ljmp
inc
std
lahf
adc
lea
fistpl
add
enter
popf
and
adc
mov
xor
push
outsl
push
test
mov
xor
bound
jns
scas
fisttpll
jecxz
fldcw
xchg
out
jl
ret
add
pop
lahf
rcrl
imul
add
mov
fimuls
xchg
clc
out
ret
loope
lret
dec
lods
and
das
mov
call
lods
cmp
gs
jno
push
mov
xchg
adc
outsl
repz
stc
xor
push
data16
rclb
cmp
leave
cmp
inc
jb
pop
les
cld
jp
int3
or
inc
adc
adcb
scas
or
imul
movsl
jl
cli
pop
iret
sbb
sti
pop
out
mov
repnz
xchg
cmp
dec
aam
push
fisubrs
in
add
xchg
xchg
cmp
and
jnp
sbb
sti
cltd
mov
or
test
loope
sbb
inc
add
cmp
push
or
jp
std
lock
xchg
shl
std
arpl
repz
inc
insl
fiaddl
cmp
mul
mov
mov
adcl
mov
es
push
dec
lds
je
sub
fwait
jecxz
mov
xor
mov
mov
pushf
mov
imulb
jp
aad
mov
jne
test
and
push
ret
dec
rclb
icebp
out
mov
stos
dec
and
das
pop
cmp
inc
nop
mov
mov
in
int3
decl
mov
test
pop
in
bnd
mov
add
cmp
daa
mov
stc
push
pusha
dec
lcall
ss
push
inc
mov
inc
loope
push
push
mov
stos
in
xchg
dec
push
xor
push
outsb
inc
xchg
daa
outsl
lcall
pop
push
subl
insb
xor
mov
rcl
das
xchg
jne
pop
aam
fcoml
out
movsb
nop
push
nop
pop
and
adc
addl
sbb
sbb
push
inc
push
inc
out
repz
xchg
jb
in
mov
xor
sub
aam
lcall
push
adc
xchg
in
push
ror
in
push
jb
mov
jo
push
repz
mov
loop
in
imul
cmpsb
or
nop
jge
aad
xchg
test
jnp
cmp
jnp
cmp
stc
pop
mov
push
dec
mov
sub
cltd
xchg
enter
adc
push
push
sub
adc
mov
jmp
add
iret
add
xchg
inc
xchg
dec
jmp
or
and
popa
pushf
adc
cmp
enter
pop
mov
xchg
lahf
jbe
in
ljmp
fs
pop
fdivrl
movsb
cmp
aas
pop
out
adc
sbb
aam
inc
cmp
push
add
push
es
loope
out
sub
enter
push
insl
mov
fcom
adc
sbb
or
repz
jle
push
in
add
cmpb
shlb
scas
add
outsl
push
mov
xchg
pop
jb
cmp
insl
add
mov
jl
dec
push
sub
mov
and
jno
fstps
mov
cs
lcall
jmp
in
xchg
in
sub
push
cld
jbe
cmp
lods
cmp
cmp
xchg
movsl
fdivl
negb
ret
xor
xchg
mov
xchg
adc
xlat
cmp
sub
lea
dec
lock
or
aaa
lret
clc
pop
rcr
pop
cmpl
fistpll
add
sub
aaa
rolb
and
and
or
fmull
cli
cmp
mov
inc
ljmp
addr16
testl
aaa
lods
push
xor
jmp
hlt
nop
mulb
add
lds
fcmovne
lods
int3
ret
popf
mov
cmp
inc
loope
adc
jg
mov
je
ficompl
popf
xchg
insl
xchg
fnsetpm(287
sub
mov
in
or
jp
xchg
push
scas
icebp
inc
mov
rorb
out
pop
int
or
jb
or
sub
es
sbb
ljmp
in
test
xchg
mov
and
xchg
outsb
adc
rol
mov
jge
xchg
lock
and
cmp
sti
es
jne
pop
dec
pop
fsts
ss
adc
dec
pusha
fisttps
shrb
insl
test
leave
ja
jle
mov
sub
inc
mov
jnp
add
and
sbb
mov
adc
movsl
add
aad
inc
adc
sbb
inc
test
add
daa
dec
cmpsl
mov
lods
mov
scas
in
nop
xor
in
mov
jbe
fistpll
adc
lods
jo
mov
or
lret
out
push
sbb
in
and
bound
mov
sahf
popa
inc
add
adc
pop
sub
popl
mov
adc
pop
mov
inc
sub
int
fsts
xor
es
mov
xorb
sbb
add
movb
xchg
popa
inc
add
adc
lcall
adc
outsl
aas
into
lahf
mov
mov
aam
jo
xchg
push
push
hlt
mov
cmp
arpl
jmp
push
fsubrl
enter
cbtw
mov
jg
jmp
shll
mov
inc
jns
idivl
stos
ljmp
push
popf
mov
mov
int
stc
add
ficompl
aam
sub
lea
xchg
lahf
in
push
cmpsl
cwtl
jmp
cmp
into
cmp
cmp
aaa
push
mov
mul
inc
sub
test
sub
push
dec
adc
jmp
mov
push
enter
arpl
pop
mov
add
and
lcall
sbb
sub
adc
in
pop
test
adc
pop
je
push
enter
ljmp
push
insl
popa
rcrl
into
aam
rcrb
xchg
dec
insl
jl
leave
int
push
test
sub
daa
cmpsl
out
int
fwait
xchg
fadds
pop
loopne
mov
or
dec
xor
repz
fwait
mov
jge
dec
aaa
mov
clc
push
fadd
addr16
mov
xor
mov
sbb
or
ljmp
dec
pop
dec
mov
mov
in
mov
jle
xlat
out
jnp
test
mov
and
lahf
test
rorb
in
outsl
cmp
lahf
push
fistl
xor
clc
jp
pop
and
jle
call
cmp
outsb
dec
mov
pop
lock
mov
sub
mov
test
xchg
mov
push
and
push
stc
push
jp
out
stos
mov
xor
xor
lcall
mov
bound
xchg
in
dec
jo
arpl
cli
cld
fdiv
addl
icebp
ret
lahf
pop
imul
stos
les
lcall
icebp
push
into
cltd
inc
out
xor
es
mov
and
inc
and
fstp
fdivs
jae
or
cli
mov
sub
jo
fs
ljmp
mov
pop
push
sbb
arpl
test
repnz
sub
je
mov
aad
jge
push
mov
adcb
das
nop
movsb
andb
mov
jle
adc
les
add
mov
out
das
mov
mov
out
jecxz
rcrl
mov
cmovl
pop
add
insb
sbb
cli
imul
and
pushf
mov
and
jne
pop
data16
cs
adc
pusha
and
sti
push
outsb
mov
roll
es
xor
mov
ret
jns
add
ljmp
jmp
mov
in
jle
aas
dec
fmul
std
jmp
loopne
sub
push
fistpll
sbb
xor
cmp
jbe
rcrl
push
jl
je
repnz
push
sti
jae
cmp
mov
jo
mov
adc
fwait
in
sbbb
cmp
or
add
inc
movsb
push
pop
mov
inc
sub
jp
sbb
iret
lret
sti
sbb
mov
mov
fldenv
jge
aad
andl
outsl
pop
sbb
jecxz
out
mov
cmc
into
ret
ja
push
loopne
mov
out
jle
lock
jge
fucomi
out
out
push
nop
pop
dec
rcll
sbb
loop
iret
jbe
faddl
loope
cs
test
inc
lods
int3
shr
xchg
add
mov
push
cmp
xchg
movsl
pop
pop
cmpl
xor
inc
andl
xor
fsubr
sahf
jns
in
and
es
out
pop
ljmp
call
jmp
scas
mov
dec
pushf
jp
inc
mov
pop
push
cmp
movsb
pop
xchg
cld
add
push
push
jo
xorl
sti
jno
sbb
jecxz
rcrl
dec
cmp
incl
add
cmp
jno
xor
mov
mov
roll
push
adc
loope
jns
je
mov
mov
dec
adc
pop
or
loop
cmp
xor
adc
arpl
jp
lock
jg
repnz
mov
jb
adc
inc
fstps
aaa
cmpsl
xlat
and
fcoms
fwait
lds
shl
add
mov
pop
test
adc
jno
jle
aaa
cmp
push
popa
outsb
in
pop
cmpsl
rcrb
push
imul
or
jno
cmp
mov
cmpsb
icebp
or
mov
sub
cli
repnz
js
and
mov
mov
push
or
ds
rol
mov
jo
sahf
mov
int3
add
sarl
and
shlb
popa
in
inc
dec
and
cwtl
or
je
inc
xor
mov
out
add
or
adcb
loope
test
leave
inc
push
xlat
enter
insl
add
fildll
xor
gs
shlb
int3
jae
cmp
and
mov
iret
stc
leave
mov
test
addr16
jne
mov
shll
or
dec
sti
push
data16
dec
inc
in
xchg
imul
jge
inc
popa
add
jne
aas
aaa
das
cmp
in
dec
repnz
imul
xor
jge
xchg
gs
push
pop
mov
jp
cmp
int
mov
fnstenv
sub
push
roll
mov
sti
mov
add
mov
rcll
or
xor
cmp
mov
xchg
fwait
lea
xchg
sub
sbb
lods
add
pop
pushf
mov
pop
sbb
jle
callw
xor
fiadds
ds
cli
adc
push
enter
pop
push
inc
stos
cmc
repz
stos
lea
jns
xor
subb
test
adc
cmpsb
std
es
cmp
into
cmp
dec
sbb
rorl
xchg
aas
cmp
jg
push
mov
mov
adc
ret
rcrb
cmp
mov
inc
add
xor
pop
pushf
mov
ficoml
mov
mov
inc
jge
out
pop
sub
hlt
mov
xor
push
push
and
and
mov
pop
dec
cmpb
push
cmp
xchg
out
xor
lret
sub
test
jecxz
int
adcb
addr16
sbb
dec
cltd
test
das
fisubs
stos
test
add
in
jle
iret
mov
mov
add
adc
mov
movsl
inc
push
repz
test
adc
mov
sar
shll
cld
shlb
sbb
cmp
xchg
int
or
insb
pushf
outsl
ja
or
data16
ds
testl
out
sub
mov
addr16
adc
inc
loopne
mov
xchg
addr16
xlat
xchg
lods
mov
jl
sub
pushf
shrb
push
jno
mov
mov
stos
push
dec
loopne
test
repz
leave
lahf
movsb
test
insb
repnz
sub
enter
lods
test
ljmp
fdivr
mov
bound
cmp
mov
xorb
cmp
out
inc
test
fcmovnbe
rcrb
insb
inc
pop
das
or
mov
jnp
mov
in
test
std
shll
add
stc
push
loopne
sti
dec
lret
or
imul
fidivs
clc
xor
mov
out
ret
or
addr16
add
cmp
aaa
push
inc
out
mov
gs
xor
or
mov
lea
sub
cmc
aam
std
xor
mov
jge
std
cmp
mov
mov
out
jnp
cltd
fiadds
aam
fmul
xorb
cmp
je
insl
push
adc
hlt
inc
adc
scas
sbb
scas
adc
loop
or
inc
cmp
repz
andl
mov
mov
pop
ljmp
adc
sbb
sbb
jns
jne
sub
cld
insl
fldt
cmpsl
jp
add
rorb
mov
pop
push
pop
jne
daa
xchg
xchg
clc
movsl
lcall
shrl
mov
pop
or
push
fsubrs
xor
lea
mov
cwtl
push
add
cmp
outsl
lret
mov
test
sub
cli
inc
outsb
ljmp
mov
or
sub
addr16
add
pop
imul
xor
mov
dec
xchg
fwait
cmp
sub
mov
dec
push
js
sbb
jle
es
dec
iret
mov
mov
jle
fsin
fst
push
mov
ds
push
and
pop
rorl
mov
addr16
in
jp
mov
stos
mov
rcll
jecxz
out
xor
bound
fcmovne
ljmp
pusha
aas
xchg
push
pop
pop
mov
mov
movsl
lds
call
push
and
pop
es
adc
sti
xor
and
icebp
mov
mov
movsb
adc
xchg
sub
ss
pop
out
rcr
or
xchg
sahf
jns
adc
fidivrs
stc
loope
insl
test
imul
ljmp
repz
pop
mov
mov
or
dec
add
hlt
jnp
insl
adc
popa
cmp
dec
mov
popf
dec
mov
ljmp
sbb
mov
mov
and
lcall
sbb
pop
jbe
mov
lea
negb
sub
push
jecxz
mov
push
dec
sbb
fstl
push
push
fbld
cmp
scas
push
cmp
sub
jmp
mov
dec
push
mov
mov
push
sti
inc
mov
fidivrs
dec
mov
ret
jbe
test
mov
jecxz
xchg
push
adc
adc
push
insb
sbb
cmp
add
repnz
shl
inc
out
mov
mov
add
sbb
das
mov
lcall
sbb
vmwrite
sbb
loop
repnz
dec
inc
jnp
repnz
mov
pusha
inc
stos
scas
outsb
std
pusha
notb
gs
jecxz
cmp
sbb
pop
movsb
imul
add
dec
dec
pop
dec
mov
pusha
out
cmp
xchg
es
cli
xchg
repz
mov
lds
add
shrl
pop
and
orb
jno
stos
mov
sbb
icebp
in
inc
lea
push
sub
icebp
dec
loopne
jg
and
movsl
fldcw
mov
and
aad
icebp
sbb
push
andl
sti
es
insl
sbb
pop
jg
mov
iret
jmp
xchg
adcl
add
pop
mov
cmpsb
mov
mov
popa
repz
pop
imul
imul
xchg
cmpl
add
xchg
mov
jae
roll
adc
enter
addr16
out
jp
cmp
mov
sub
adc
addr16
js
shll
lods
mov
test
psllw
loop
jno
mov
movsb
lret
lea
xor
push
loopne
call
movsl
sub
jmp
xchg
lret
or
xor
fs
fld
sti
push
xchg
lock
sbb
fwait
sbb
dec
je
adc
xchg
jae
fbstp
xor
outsl
and
adc
fistpll
xchg
mov
ret
scas
jl
enter
or
sahf
rcll
stos
pop
stos
in
aam
repz
mov
ret
push
cmp
daa
jnp
mov
dec
insl
jle
adc
into
jb
in
pop
cmpsl
mov
icebp
xchg
adc
imull
xchg
xor
clc
jp
mov
stos
fstl
mov
imul
gs
sbb
cmp
les
mov
adcl
ja
push
lret
lds
dec
push
or
lret
aam
sub
push
ret
das
repnz
ja
insl
pushf
cmpsl
movsb
and
sbb
add
into
leave
xchg
jg
push
pop
pop
mov
jae
mov
in
and
das
push
test
pop
cs
stos
mov
mov
shl
jo
or
xchg
imul
mov
cld
enter
xor
and
pop
movsb
mov
jae
shrb
adc
dec
push
int
ss
in
dec
scas
pop
pop
push
xchg
inc
ret
cli
int3
sbb
push
loopne
pop
inc
dec
mov
or
sahf
adc
jnp
jmp
fldt
sub
cmp
lock
cmp
and
ret
lods
xor
xlat
pop
addr16
scas
std
ret
popf
xor
xor
sub
xor
push
dec
rdmsr
scas
lahf
push
or
add
and
sbbb
aam
adc
sub
dec
scas
ficoml
test
mov
add
add
pushf
sbb
mov
daa
movsb
xor
lea
push
leave
jecxz
xor
out
mov
xorl
cmpsb
stos
push
in
mov
aad
les
pop
add
xchg
mov
mov
adc
loope
out
dec
add
dec
or
pop
ljmp
pop
cmpsb
sub
sub
repnz
daa
cmp
sub
cmp
leave
and
and
mov
ja
clc
mov
lds
dec
or
pop
cmp
insb
les
mov
hlt
jp
scas
mov
data16
cmc
or
push
or
xchg
sbb
push
sbb
sbb
pushf
lahf
adc
das
push
clc
xor
fs
test
outsb
jne
and
cmpsb
sbb
add
mov
lods
mov
out
pop
inc
repz
mov
xchg
xor
loop
or
xchg
pop
lea
mov
inc
mov
nop
mov
cmp
mov
pop
mov
mov
jecxz
int3
clc
test
pop
bound
jecxz
js
test
sbb
push
fs
imul
push
hlt
push
aad
adc
fisttpl
cmp
lods
std
mov
ret
sbb
dec
pop
xor
or
pop
inc
int3
mov
mov
stos
pop
lea
test
jp
movsl
push
cmp
lock
sbb
sub
leave
xchg
in
mov
fildl
inc
addr16
sub
out
sub
dec
jae
sub
push
cltd
adc
rcl
inc
dec
jns
jb
lods
cwtl
sbb
mov
fwait
pop
into
xchg
jg
rorl
bound
or
sub
les
lret
cmpsl
mov
and
lret
and
loope
call
inc
mov
fs
lods
stos
scas
and
aaa
cmpsl
fcoml
cwtl
pop
push
je
jns
lret
mov
aam
je
loop
subb
mov
jns
mov
bound
add
pop
jge
mov
and
ret
imul
jl
jo
psubsb
xlat
sub
and
and
and
push
fcom
test
mov
ljmp
orb
mov
xchg
cmp
push
mov
test
add
xorl
aad
mov
in
cld
pop
mov
xlat
movsb
outsl
xchg
sbb
dec
push
mov
insb
inc
nop
popa
or
notl
mov
and
pop
sbb
lds
daa
mov
les
bound
dec
je
hlt
mov
lcall
cld
out
mov
or
pop
scas
pop
dec
xlat
ss
pushf
inc
xchg
movsb
scas
xchg
pop
push
ret
or
sbb
fwait
test
xchg
out
xchg
sbb
movsb
int
ficompl
and
test
mov
xor
adc
aas
cmp
outsl
xor
test
hlt
inc
enter
or
roll
jne
jno
shlb
add
mov
ss
sub
into
cmc
xor
xor
fcmovnb
and
mov
mov
pop
inc
dec
aaa
xchg
test
jp
dec
inc
xlat
dec
popf
lds
mov
or
jo
xor
mov
insl
and
xchg
jbe
gs
adc
movsb
push
and
test
jns
ss
jmp
fisttpll
xchg
pop
dec
cmpsb
xlat
loop
or
cmc
stos
call
dec
jne
cmp
icebp
dec
push
outsb
lcall
dec
add
iret
jbe
push
nop
iret
jecxz
push
shrb
xor
rolb
cmp
jg
ds
mov
add
xchg
push
das
and
sub
mov
pop
addr16
bswap
pop
xchg
cmp
cltd
push
mov
js
fisubrl
das
push
je
adc
xor
sbb
mov
jo
or
bound
out
jmp
scas
ret
pop
cltd
addl
push
mov
out
cmp
sbb
or
mov
push
and
mov
frstor
mov
int3
scas
insl
mov
xlat
inc
in
out
pushf
inc
jae
sub
mov
adc
adc
loop
iret
loope
push
jg
ret
sarb
popf
mov
push
in
dec
xchg
xor
movsb
mov
mov
and
sbb
push
rorb
mov
mov
lods
cmpsb
or
inc
dec
and
movsb
popf
xor
in
pop
push
test
in
in
jb,pn
xor
cli
add
cltd
imul
hlt
xor
push
inc
outsb
push
xchg
pop
hlt
fsubrp
iret
ret
jo
adc
xor
addr16
cmp
sbb
pop
shrl
push
push
cltd
std
adc
sub
xchg
mov
jle
xor
les
call
stc
jbe
push
jmp
jns
cwtl
push
aam
lret
inc
loope
mov
outsb
mov
xchg
ret
mov
pop
idivb
ljmp
movsb
pop
int3
les
adc
in
idiv
mov
int3
pop
scas
dec
lock
lods
call
loope
mov
scas
fistpl
aaa
aad
aam
pop
test
pop
hlt
loop
cld
imulb
adc
mov
fs
fsubp
xor
jmp
inc
hlt
fmul
imul
inc
sub
vpminub
sbb
ret
jne
movsb
push
int
arpl
mov
jge
pop
inc
mov
mov
push
cli
fdivrs
dec
in
aas
sub
adc
test
iret
xor
je
cmp
mov
xchg
inc
loope
lods
imul
add
cmp
movsb
add
sbb
mov
lret
ret
fcomip
das
sti
imulb
pop
sti
sbb
dec
sub
sbb
nop
cld
cmpsl
xchg
mov
jae
outsb
add
ret
jg
and
jp
insl
mov
jo
clc
ja
out
sbb
cmp
int
or
call
lods
mov
mov
jnp
js
inc
pusha
stos
fnstenv
xchg
mov
jns
movsl
out
adc
xchg
jmp
repz
ds
int3
repnz
rol
sub
cmp
pop
dec
inc
mov
fcompl
mov
fstpt
mov
test
out
fimuls
test
cmc
shll
inc
movsb
add
mov
je
cli
inc
push
xchg
inc
dec
pushf
sub
loop
aaa
push
fs
fsubrs
in
lcall
fcmovbe
insl
or
loop
out
dec
mov
je
or
xchg
add
sarb
push
mov
cmc
ljmp
decl
jns
stos
sbb
pop
dec
sbbl
jo
sarb
adc
int3
cltd
ss
in
cltd
add
xchg
xor
cmp
adc
scas
push
sarb
les
sbb
dec
inc
adc
jae
imul
icebp
idivl
cmp
mov
add
or
sbb
push
pusha
int3
xchg
inc
cmc
insl
mov
jne
sub
rcr
adc
sbb
or
call
xchg
stos
jnp
lret
sbb
pop
out
xor
add
sbb
push
pop
adc
daa
ret
mov
pop
int3
xor
pop
sub
xchg
pop
cmp
sbb
insb
mov
in
inc
xor
pop
dec
lds
dec
add
add
or
mov
jno
jae
roll
out
adc
push
adc
jns
push
js
pop
lret
mov
cli
test
outsl
out
xchg
out
call
mov
ljmp
in
decl
fldpi
pop
daa
shll
inc
inc
pop
fldcw
or
or
lgs
jnp
adc
rcll
xchg
jge
mov
and
imul
loope
mov
add
test
inc
ljmp
dec
in
xor
addr16
pop
mov
sub
dec
dec
pop
adc
or
inc
mov
jb
cs
icebp
movsl
fmuls
je
je
cmpsb
mov
xchg
xchg
cmp
loope
sbb
notl
cmp
sub
in
insl
test
popa
insl
mov
addr16
mov
inc
test
and
inc
lods
mov
sub
imul
push
into
push
inc
adcl
sub
jp
fdivrl
jecxz
sub
lods
aaa
rcl
stc
jne
pop
in
jp
subl
shrb
cltd
jge
aaa
push
aas
mov
adc
es
inc
inc
xor
andl
dec
cli
xchg
sub
pop
orb
mov
ret
stos
loopne
pop
cld
mov
xchg
cmc
inc
rolb
lretw
cmp
into
xchg
inc
jbe
or
flds
and
in
addr16
xchg
push
push
cltd
push
cwtl
inc
mov
fidivrl
test
push
jae
mov
adc
dec
call
xlat
dec
icebp
lcall
mov
jne
xor
sbb
jae
bound
adc
pop
repz
xchg
sub
int3
or
popa
mov
mull
mov
pop
mov
cld
out
cli
sub
jbe
das
dec
push
push
xchg
dec
inc
mov
or
mov
loopne
out
mov
outsl
cmp
and
xor
dec
dec
push
xlat
dec
lret
ret
jp
mov
pop
jmp
lock
push
and
scas
mov
das
mov
and
pop
pop
push
xchg
xchg
cmp
sbb
inc
xor
ljmp
dec
aad
testb
rclb
stc
cmp
sub
xchg
mov
xchg
xor
pop
outsb
jecxz
mov
mov
fsubl
or
data16
push
loop
int3
fildll
mov
pop
std
push
sub
cmp
add
dec
push
adc
pop
inc
sbb
lcall
push
cmpl
xchg
aam
xchg
iret
mov
stos
xchg
push
cmp
shrl
lret
enter
mov
fs
fbstp
sub
dec
aaa
gs
mov
push
scas
xor
pop
ret
pop
fwait
mov
xor
int
pop
xchg
inc
sub
add
cmp
movsb
stc
adc
jne
repz
push
pushw
clc
xchg
mov
pusha
mov
in
push
adc
cmp
jg
jle
scas
out
arpl
mov
cmp
in
in
sti
fsubrs
in
jecxz
cld
fwait
jb
cwtl
fsubrs
into
mov
push
mov
xchg
sbb
outsl
push
mov
ret
mov
ror
pop
ss
xchg
jo
nop
cmc
ljmp
imul
xor
fs
ret
jecxz
stos
pop
stc
movsl
push
cmc
cmpsb
cmpb
arpl
jnp
mull
movsl
in
ja
cmpsl
into
or
movsb
movsl
pop
jle
ret
ja
push
lret
clc
add
lock
or
pushf
pop
scas
xchg
test
cltd
pop
adc
ja
mov
mov
mov
sub
xor
jo
jg
add
xchg
xlat
scas
push
in
jecxz
sub
sub
sbb
mov
or
xchg
add
xchg
sbb
stc
or
dec
sarb
push
pusha
xchg
aad
arpl
fisubl
repz
mov
push
cmpsl
dec
sbb
mov
outsl
loop
mov
add
dec
aad
mov
repz
jp
sbb
shl
xor
adc
jl
cmc
call
push
icebp
add
enter
ljmp
adc
imul
dec
xchg
xchg
enter
push
test
adc
es
inc
fwait
sub
xchg
cli
outsl
pop
xor
add
xchg
rcrb
mov
jle
pop
push
sub
jb
xor
cmp
addr16
dec
lds
jns
aaa
je
lods
bound
pop
loopne
stos
sbb
fwait
loopne
xor
sub
fchs
pushf
pop
or
cmp
movsl
cmp
inc
and
ret
in
jmp
jns
imul
out
jmp
cltd
mov
dec
mov
mov
jecxz
cli
ror
hlt
pushf
adc
mov
mov
mov
add
fstps
inc
xor
mov
jnp
add
mov
push
inc
pop
js
mov
xchg
into
xchg
hlt
cmc
fldt
xchg
jecxz
inc
std
bound
xor
stc
sbb
and
addr16
xor
xor
fsubrp
ljmp
xchg
lods
les
xor
pop
add
aad
jmp
adc
mov
mov
jmp
leave
sti
lea
sahf
mov
jo
outsb
or
ds
xor
mov
xor
mov
fadds
nop
jbe
out
mov
pop
sub
mov
push
inc
cs
cltd
add
xor
dec
sub
xor
mov
lods
sbb
mov
or
fsub
addr16
stc
pop
ss
lds
insb
mov
add
add
mov
mov
pop
fsubrp
iret
push
add
in
jle
les
pop
cmpsb
es
int
bnd
bnd
or
push
call
int
es
cltd
cmp
xor
cmpsl
ret
adc
dec
sub
sub
fsubl
insl
jp
dec
cmp
scas
das
inc
into
mov
cmp
cmp
push
ds
pop
roll
jmp
or
pusha
pop
sbb
jg
mov
lea
pop
add
arpl
inc
cmc
sbb
and
aaa
mov
imull
int3
stos
out
pop
push
push
cmpsb
mov
test
fbld
fwait
imul
hlt
mov
push
pushf
and
fidivrl
bound
movsl
imul
data16
cli
movsl
jnp
cmc
ss
adc
gs
loop
mov
jo
popf
pop
mov
dec
mov
out
mov
stc
mov
and
xor
add
xor
sti
jp
inc
fsubl
adc
mov
out
outsb
cmp
pop
popa
shrb
pop
add
repnz
loope
add
mov
insb
add
inc
sub
push
les
jb
shlb
mov
popa
lods
and
mov
inc
scas
inc
fs
subb
xchg
jp
divl
cli
mov
into
jge
jbe
sbb
push
sbbb
pop
loop
jmp
sti
ret
popf
cmp
pop
rcrb
cmc
lds
scas
dec
dec
xor
push
stc
sti
cmp
les
out
iret
cli
jle
arpl
pop
out
sbb
sub
imul
xor
dec
xchg
ds
sbb
loop
stc
ds
mov
add
mov
xchg
add
and
nop
xor
push
push
add
sub
fwait
dec
pop
hlt
push
jae,pn
or
jne
lret
add
roll
les
shl
mov
mov
xor
sbb
add
mov
outsb
push
pop
push
cmp
popa
fnstenv
push
stos
dec
cmp
jae
xchg
xor
repz
xorl
push
or
jae
jae
cmp
cwtl
cmp
or
xor
mov
and
js
jmp
scas
sbbl
push
loopne
movsb
dec
mov
lock
xor
data16
mov
jae
lea
mov
and
xor
push
imul
hlt
lods
cmp
sar
jb
js
int3
cmc
pushf
jnp
sbb
xorl
jg
aad
out
fcompl
pop
ucomiss
fmuls
or
mov
inc
inc
xchg
jns
cli
dec
fidivrs
mov
shlb
dec
jae
push
mov
popf
add
outsl
mov
dec
and
out
aad
and
mov
mov
movsl
in
mov
mov
ljmp
inc
nop
cmp
jmp
sub
pushf
mov
push
movsl
mov
xchg
and
sahf
cmp
pop
xor
or
cmp
pusha
jb
mov
mov
jnp
iret
inc
sbbb
and
inc
push
mov
xor
xchg
cwtl
lock
adc
ds
aas
fadd
sbb
mov
nop
adc
cmpl
outsl
jmp
sahf
sbb
mov
addr16
out
mov
or
or
inc
dec
cmpsl
test
mov
dec
pop
or
adc
inc
daa
adc
jecxz
lods
mov
xor
pop
push
outsl
cmp
fldt
ss
or
or
dec
add
fdiv
xor
repz
mov
ret
loopne
pusha
cmp
mov
cld
xchg
mov
or
cltd
fbld
subps
out
jecxz
mov
or
fsubs
outsl
or
mov
mov
negl
mov
jb
scas
mov
sbbl
pop
add
cmp
cltd
push
imul
mov
mov
icebp
inc
pop
scas
and
outsl
jecxz
stc
popf
addb
sub
mov
push
in
in
xor
aaa
nop
out
insl
mov
pop
in
jno
outsb
jmp
mov
out
dec
add
dec
xlat
arpl
and
mov
mov
lods
popa
or
je
fstpt
aas
dec
aas
push
ficomps
addr16
je
pop
out
stc
lcall
ss
sbb
gs
call
cmp
sbb
nop
inc
fs
mov
imul
jne
push
dec
and
or
xchg
adcl
les
and
mov
push
arpl
scas
faddl
and
sub
inc
push
dec
push
push
call
xchg
cs
mov
adc
cmp
movsb
jb
sub
enter
mov
es
shrl
dec
out
push
jno
mov
bound
add
adc
and
fistpll
bound
insl
les
fsubl
daa
je
rcll
pop
mov
es
jnp
sub
adc
inc
fsubrs
inc
imul
testb
inc
jbe
adc
fidivrs
les
mov
jge
pop
das
bound
aas
outsl
jmp
insl
addr16
outsl
xor
popf
mov
lods
mov
daa
mov
mov
test
xor
cmp
pop
cltd
push
inc
hlt
xor
cld
outsb
cmp
dec
int3
mov
call
sbb
sbb
lea
loope
pushf
iret
inc
test
js
push
jg
sbb
sub
push
xchg
mov
shlb
sbb
xor
mov
loop
xor
into
mov
and
jno
and
pop
les
dec
jmp
xor
add
out
fildl
add
aaa
mov
cltd
lds
xchg
mov
xchg
aam
jecxz
jp
arpl
push
mov
aad
mov
movb
mov
xor
gs
imul
ljmp
add
mov
sbbb
mov
sbb
pop
sub
push
imul
adc
dec
les
decl
xchg
and
push
ret
std
pop
imul
imul
xlat
outsl
sub
rorb
rcr
push
add
stc
push
aaa
imul
pop
stos
jl
pusha
sub
mov
or
aam
js
dec
xlat
cmpsl
cmp
icebp
cmp
mov
pop
mov
movsl
pop
lahf
sarb
ss
pop
popf
aam
lea
leave
mov
xchg
xchg
orl
jp
dec
mov
and
stc
push
add
add
loopne
add
mov
cld
sbb
adc
cltd
adc
mov
notb
sbb
inc
pop
jecxz
setl
cmp
jle
lods
test
test
lods
js
sub
jmp
mov
or
xchg
ret
and
cli
stc
add
pop
fimuls
into
test
push
sub
xor
adc
in
imul
inc
das
adc
xchg
into
mov
sub
js
in
adc
adc
or
out
pop
daa
xor
push
stc
push
pop
and
addr16
cmp
cltd
dec
out
clc
data16
xor
js
stos
xor
negb
and
jle
int
aam
jo
in
outsb
sbb
jl
stos
cli
xchg
push
cli
lock
loopne
es
enter
les
pop
mov
push
cmpsb
nop
insl
and
xor
xchg
mov
jns
adc
fidivrs
das
xchg
test
push
mov
adc
sti
sub
iret
mov
mov
inc
movsl
mov
cmc
push
and
pusha
xor
test
das
leave
popa
sub
roll
ret
flds
jne
neg
and
enter
jbe
jmp
jbe
mov
test
mov
imul
sub
inc
push
lock
jmp
jae
les
mov
popf
loope,pt
scas
cwtl
fcom
cltd
inc
inc
cs
pop
mov
fyl2x
or
pop
jmp
cmpsb
and
rclb
test
xorb
enter
mov
mov
and
xor
testl
pop
or
jg
jg
ljmp
push
fdivrl
pop
stc
rcrl
call
outsl
out
loopne
rorl
clc
test
repz
mov
sbb
test
pop
sub
bswap
push
iret
sbb
adc
insb
imulb
sbb
mov
insb
cmp
repnz
cmp
xor
mov
mov
cwtl
shll
in
mov
adc
repnz
push
inc
dec
sbb
out
jle
movsb
xchg
iret
outsb
adc
dec
adc
mov
sub
lahf
out
cmpsl
cwtl
mov
out
cmp
insb
inc
pop
out
in
outsb
cmp
xor
inc
into
xchg
xchg
adc
xor
jecxz
push
iret
fnstenv
mov
xor
jnp
xchg
adc
jb
lahf
inc
imul
jmp
jp
inc
and
cmp
mov
lahf
cmp
sbb
gs
push
inc
xchg
outsl
mov
and
out
subb
cvtps2pi
int3
aad
push
lds
inc
mov
push
mov
push
inc
mov
data16
mov
lret
data16
leave
cmp
pop
mov
pop
ds
stos
clc
mov
loope
cmpsl
push
ret
hlt
or
sbb
and
aam
popa
pushl
mov
and
ret
in
sbb
add
mov
dec
cli
cmp
or
push
push
cmp
add
and
cltd
dec
insl
jle
lret
pusha
test
cmpl
dec
outsl
scas
lds
je
push
movsb
shl
xor
xor
cmc
jge
lret
mov
das
mov
cmp
adc
xchg
fistps
cmpsl
jae
lods
dec
into
lock
xchg
jp
nop
inc
dec
call
and
adc
pop
nop
icebp
adc
cmpsb
adc
mov
cmp
gs
add
inc
mov
test
push
sub
or
fcoml
cmp
cmp
mov
push
mov
stc
pop
test
sub
or
cmpl
or
jb
pop
pop
scas
push
lods
mov
lret
push
fnsave
xchg
leave
aas
inc
movsl
adc
divb
xchg
mov
or
adc
dec
add
xchg
adc
imul
cmp
in
lret
push
xrelease
xchg
aas
aad
jbe
clc
inc
cltd
je
mov
mov
mov
repz
jp
jg
jecxz
pandn
push
fsubl
imul
jae
hlt
sub
les
push
fcompl
int3
mov
das
mov
les
xor
aas
cmp
xor
hlt
int
jp
popa
cltd
sbb
lds
mull
and
add
popa
xor
lock
push
ljmp
call
leave
lret
xchg
lods
and
jle
dec
and
adc
les
push
mov
out
int3
dec
pop
mov
pushf
pop
mov
dec
push
popf
push
xchg
jae
or
outsb
push
pushf
fcoms
sbb
adc
mov
lds
mov
pop
imulb
ret
out
cmp
xorb
lahf
sub
xor
jle
dec
xor
daa
push
aaa
stos
dec
stc
les
adc
xchg
lcall
mov
shr
jecxz
aaa
divb
sub
pusha
or
mov
xchg
dec
sub
mov
dec
add
xchg
mov
mov
pop
jp
or
mov
xchg
movl
out
adc
mov
and
jo
outsl
xlat
lret
loop
mull
cld
mov
repnz
test
mov
and
test
xlat
cltd
push
adc
aam
incb
push
fwait
xchg
sbb
or
adc
cli
mov
ja
in
mov
fcomps
mov
adc
enter
mov
sbb
inc
aam
mov
or
and
into
cli
rcrb
popa
jnp
fs
ss
adc
jle
jge
fldl
adc
lahf
shrl
test
inc
loopne
push
fcmovnu
xorb
js
pop
lret
sub
insl
add
mov
pop
pusha
mov
bound
xchg
ja
pop
xor
stos
or
sub
mov
inc
and
pop
in
mov
xchg
push
push
push
jp
pop
inc
and
mov
inc
shll
test
scas
call
mov
jo
add
mov
data16
push
fimull
shl
sti
test
pop
std
sbb
lret
test
sbb
mov
mov
iret
jo
add
adc
jb
stc
sbb
cld
mov
in
lahf
loop
iret
sbb
xchg
mov
cmpsb
sbb
pop
adc
lahf
or
push
push
out
adc
cmp
pop
lcall
xor
or
xor
fidivrl
rcr
adcl
dec
dec
jnp
jge
pop
xchg
mov
out
enter
sbb
aad
add
jns
fnstenv
jl
inc
mov
or
and
xor
cmp
dec
fstpl
add
lea
jl
je
aas
test
decb
cmp
vunpckhps
pushf
mov
fwait
and
inc
dec
repz
es
and
dec
mov
in
mov
pop
or
imul
push
xchg
jmp
mov
rorl
cmpsl
cmp
push
mov
pop
xchg
in
add
pop
and
ficoml
roll
jae
pushf
fidivs
in
lds
fmul
movsb
and
lret
dec
rep
cs
fs
out
std
jmp
fsubs
dec
adc
dec
int3
stc
xchg
pop
mov
cmpl
or
inc
insl
daa
in
lea
lahf
lcall
dec
dec
cmp
xchg
inc
imul
icebp
sub
je
das
adc
adc
adc
shlb
aaa
nop
xor
mov
cld
pop
cmp
mov
les
sbb
mov
mov
xchg
inc
incl
out
xchg
fistps
push
cwtl
orb
lea
les
ja
mov
add
frstor
mov
pop
test
pop
inc
push
push
icebp
pop
pushl
rcl
or
xchg
and
mov
cmp
add
mov
out
pusha
xor
ror
pop
cmpsl
sbb
and
sbb
jl
push
insl
setl
jb
mov
inc
mov
das
sbbl
add
push
xor
iret
ljmp
cmp
mov
lcall
push
push
fs
jnp
mov
leave
or
cld
and
popf
lahf
sub
je
repz
syscall
jbe,pt
jl
cs
xchg
scas
cmp
loopne
or
push
fstps
sahf
stos
mov
jp
fmul
adc
lcall
je
lds
cmpsl
sbb
addr16
call
out
aam
xor
fists
cld
cmp
or
xorl
jmp
push
mov
mov
mov
jbe,pt
scas
mov
data16
cmpsb
lret
inc
sub
adc
jae
xor
cwtl
lea
ljmp
mov
jo
nop
gs
stos
jle
push
sbb
negl
das
ret
mov
cmp
mov
adc
xchg
pop
push
xor
aam
lods
xchg
es
arpl
and
fs
out
inc
add
icebp
sbb
push
inc
pop
jmp
adc
sahf
cld
jle
cmc
ss
movsb
fdivs
add
add
dec
add
pop
loope
sbb
aad
lahf
push
jns
hlt
jae
cmpsl
and
pop
adc
jmp
sbb
dec
repnz
ja
std
mov
sub
idivb
in
xor
rcll
pop
jns
sub
cmp
test
dec
fldl
rolb
mov
cmp
mov
sub
les
icebp
rolb
mov
jbe
mov
orl
lods
push
out
jl
dec
cmpsb
cltd
sub
shrl
cli
jmp
nop
out
and
dec
std
adc
inc
sbbl
lret
mov
pop
or
mov
fdivs
mov
iret
cmpl
cmc
cmp
fs
rcl
and
mov
call
add
mov
mov
add
sbb
pop
xor
ljmp
pop
push
mov
jne
lahf
push
cmp
mov
lds
pop
stos
imul
mov
xchg
add
cwtl
int3
cld
pop
ror
sbb
push
and
outsb
test
in
ds
ret
addr16
int
test
repnz
cmp
fisubrs
cmpb
jl
adc
leave
ror
add
test
sub
loopne
pop
dec
dec
test
cmpsl
imul
sbb
cmp
cmp
mov
or
dec
movsb
jae
pop
add
push
and
nop
cs
in
rcl
pop
mov
je
and
inc
shll
int3
loope
call
or
add
cmp
pusha
xlat
xchg
xor
xchg
inc
stos
faddl
inc
hlt
int3
mov
mov
or
and
popa
jns
cli
sub
push
push
mov
inc
push
ljmp
mov
stos
push
jae
ret
repnz
out
dec
mov
test
roll
adc
jge
cld
shrl
pop
xor
and
xchg
pop
int
arpl
mov
in
shll
add
out
icebp
aad
mov
mov
add
lods
add
mov
add
cwtl
les
les
add
pop
stos
lret
stos
jne
mov
adc
ret
pop
daa
push
add
and
cltd
sbb
inc
cmpsl
inc
adc
dec
ficompl
cmp
mov
pop
lret
data16
jecxz
aam
fwait
aad
enter
push
push
mov
aas
mov
cmpsl
mov
add
xor
xchg
call
xchg
insb
inc
mov
inc
lods
test
aaa
orl
sbb
adc
lahf
jno
mov
adc
or
lcall
int
cmp
mov
leave
adc
enter
pusha
xchg
imul
pop
mov
testb
push
arpl
adc
in
sbb
neg
lahf
sub
and
push
imul
dec
jbe
lret
jne
dec
add
out
sub
aad
cmp
xor
cltd
sarl
ja
pop
fstl
gs
or
or
inc
gs
lock
and
mov
inc
push
mov
dec
loop
adc
shll
push
icebp
jbe
iret
fildll
loop
cmp
inc
and
xchg
loop
add
ficoms
and
and
xchg
dec
test
pop
dec
dec
stos
add
sbb
out
sbb
ficoml
popf
push
gs
test
test
cmp
movsl
aam
mov
cmpsb
sbb
negb
pop
push
scas
jnp
add
sub
dec
arpl
mov
mov
jle
xchg
imul
mov
push
sbb
leave
push
mov
sbb
inc
jno
rolb
push
inc
cmpsb
fistpll
cwtl
fdiv
sbb
out
insb
or
mov
ret
and
pop
sub
push
jp
filds
cmp
push
sbb
inc
xorb
adc
mov
and
mov
es
clc
leave
cmp
fwait
nop
jne
cmp
cmp
mov
aas
adc
jae
inc
push
popf
cmc
dec
push
cmp
divb
fstpt
call
xchg
cs
xor
imul
hlt
je
out
cmp
add
loope
orl
adc
pop
cmc
xlat
push
icebp
sub
pop
pop
repz
dec
out
icebp
and
or
jmp
mov
mov
icebp
cmp
lcall
pop
mov
outsl
popf
movsb
xor
ret
ja
imul
pusha
int3
cmpsl
pop
popf
inc
movsb
inc
popf
mov
stc
jp
mov
lock
imul
addr16
and
jo
dec
xchg
addr16
je
clc
mov
aad
xor
push
idivb
cmp
pop
and
vxorps
scas
je
jecxz
subb
add
cld
and
or
cmpsb
andb
mov
pop
mov
pop
das
hlt
adc
sub
xchg
xchg
movl
in
adc
inc
gs
pop
rdmsr
jbe
and
add
sbbl
mov
xchg
and
rcrl
dec
pop
loope
or
jo
lock
cs
psrad
jge
pushf
shr
xor
pop
pop
ljmp
clc
dec
ror
or
daa
sbb
leave
mov
push
mov
fnstsw
ret
data16
mov
pop
lods
or
jnp
inc
mov
xlat
sub
mov
cltd
jp
and
sub
mov
arpl
cmp
ja
out
cwtl
pop
ljmp
xor
and
pop
popa
in
cmp
adc
les
mov
jmp
mov
icebp
cwtl
pop
push
imul
out
sbb
and
sub
add
je
enter
shl
sub
sbb
aas
inc
fwait
cmp
outsb
addl
rcrb
lahf
call
fistps
mov
sti
jl
xchg
adc
dec
jmp
cmp
xchg
lret
pusha
dec
subb
ds
stos
add
jle
stos
dec
in
inc
xchg
iret
xlat
jp
inc
shrl
mov
push
mov
and
dec
in
loop
xor
jno
dec
mov
mov
mov
inc
es
pop
sbb
xor
and
aam
bound
pop
test
into
es
call
xor
test
out
fs
push
lock
xchg
push
xor
mov
lret
shrb
xor
cmp
dec
ret
subl
lcall
test
or
in
jnp
pop
dec
mov
nop
pop
jnp
orl
divb
mov
insb
lcall
subb
push
sub
xlat
scas
xchg
sub
repnz
sbb
cli
push
cli
ds
add
inc
loop
adc
bound
scas
dec
cmc
sub
push
iret
sbb
push
or
or
add
jg
inc
push
test
outsl
sbb
push
ds
hlt
fmuls
lock
out
lret
stos
ljmp
rcrb
inc
jno
pop
mov
cmova
pop
mov
push
repz
adc
pop
ja
out
adc
daa
std
and
adc
jae
repz
add
das
push
jecxz
add
mov
sub
inc
adc
add
inc
mov
sbb
mov
or
push
jg
push
mov
dec
out
imul
sbb
mov
cld
aas
jbe
mov
insb
xor
jnp
lret
insl
daa
js
scas
in
xlat
dec
lret
stc
hlt
ds
mov
mov
testb
int3
cmp
in
mov
mov
mov
mov
scas
aaa
lods
ret
and
cwtl
cmpsb
aaa
ss
pop
push
adc
out
daa
pusha
xchg
shl
sub
xor
inc
stos
xchg
mov
pop
and
or
cwtl
mov
imul
rcrl
sub
imul
cmp
adc
mov
idivb
rcrb
fldenv
int
fiadds
outsb
stos
cli
cld
orb
pop
ret
lock
push
js
lods
stos
fsubrp
fadds
adc
and
hlt
or
mov
fldt
xor
dec
cmp
scas
or
mov
xor
imul
xchg
mov
fisttpll
dec
call
fbld
mov
push
sbbb
jp
mov
pop
mov
lahf
sub
leave
mov
in
mov
in
jo
imul
sbb
lea
call
loope
inc
arpl
pusha
aam
lods
jae
push
add
test
cmp
and
or
mov
and
sub
imulb
insl
mov
mov
fsubr
jnp
in
cwtl
dec
out
xlat
adc
cmp
out
call
pop
jp
pop
rcr
pushf
repnz
pop
loope
inc
mov
sbb
jge
and
cwtl
jge
or
mov
xor
sub
out
jg
ds
sub
mov
xchg
ror
in
popa
imul
outsb
mov
out
testb
jb
loopne
xchg
cltd
mov
out
mov
sbb
out
rorl
jp
xor
cmp
rorb
ja
push
stc
pop
jo
std
dec
jl
lahf
pop
sub
mov
jbe
fdivl
inc
pop
fldcw
adc
shlb
inc
inc
jb
xlat
xor
cmp
clc
or
inc
inc
insl
sub
push
add
daa
fadds
inc
lds
or
mov
insl
mov
fistps
ljmp
cmp
adc
imul
aas
enter
ret
shlb
sbb
and
mulb
jae
test
or
inc
cmp
jge
dec
cld
xor
fwait
das
in
aad
cld
xchg
inc
inc
mov
push
in
cld
or
xor
lock
push
cmp
loopne
or
push
leave
mov
repz
push
pop
fstl
bound
popf
push
pop
popf
pop
in
sbb
and
movsl
xor
jbe
orb
imul
out
cmp
jle
les
mov
xchg
push
imul
fisttps
iret
mov
push
fcomps
pop
cmp
lcall
jmp
sbbl
and
nop
cmp
dec
test
or
mov
adc
es
sbb
ja
stos
dec
pushf
data16
sarl
inc
movsb
aas
cmp
fcmovb
add
repnz
jne
call
sbb
sub
push
cmpsb
jg
fsubrs
or
shl
mov
and
stc
lahf
dec
rorl
lea
mov
inc
pop
xor
dec
pop
les
cmp
shrb
adc
inc
rclb
pop
repz
dec
test
jae
ret
adcb
clc
jmp
arpl
dec
cwtl
fwait
inc
ret
xchg
iret
popf
pop
cmp
pushf
mov
sbb
cmp
enter
sub
push
test
insb
cmpsb
and
loope
arpl
push
lods
shl
dec
aam
adc
in
or
in
pop
or
adcb
cmp
and
pop
loop
cmp
sbb
xchg
ret
inc
fldt
pop
iret
mov
xchg
jno
jle
fwait
or
pop
das
mov
xacquire
icebp
cmp
ds
clc
shl
lea
rorb
push
popa
cmp
fildl
mov
sub
mov
and
les
mov
daa
out
testl
jne
add
pop
outsl
add
stos
mov
imul
sbb
jbe
cs
push
jp
and
dec
cmp
fistpll
mov
and
jae
pop
xor
or
lahf
rcll
xchg
sbb
es
movsl
and
jl
push
xor
fs
fists
aad
mov
repz
dec
iret
lret
lahf
test
adc
pcmpeqb
sbb
in
ret
daa
div
in
sub
aas
sahf
andl
out
xor
push
mov
je
jl
pop
loopne
add
inc
inc
rsm
cs
dec
call
cmp
add
jbe
sarb
ss
mov
fs
inc
dec
sahf
pop
movsb
or
imul
jle
test
aas
ud2
and
adc
push
neg
or
pop
ret
or
fstl
add
cmp
or
push
lods
cmp
jae
pusha
aaa
or
pop
mov
cmc
mov
xor
xchg
stc
mov
mov
in
and
mov
xchg
daa
inc
scas
dec
pop
push
clc
mov
xchg
mov
fcomps
mov
inc
aam
jae
ljmp
mov
testl
movsb
scas
out
imul
enter
xchg
test
data16
leave
xchg
lret
pop
mov
push
fwait
loop
adcb
ret
add
mov
sbb
lahf
adc
in
dec
and
lods
jnp
jnp
std
int
daa
lea
mov
cmpsl
mov
adc
imulb
ss
std
notl
mov
adc
shr
xor
xchg
xor
jne
fldt
dec
insb
push
jns
mov
repnz
sbb
pushf
push
scas
pop
sub
je
mov
aaa
sbb
mov
adc
push
in
mov
xor
mov
jecxz
enter
shl
mov
sbb
cmpsb
push
and
in
ds
jb
jno
mov
fisubrl
inc
or
xor
ds
movsb
inc
icebp
pop
mov
ja
mov
rol
mov
fldl
imul
mov
inc
mov
dec
dec
sbb
xchg
xor
inc
lds
mov
lods
addr16
scas
lcall
lea
dec
jae
cmpsb
sbbb
push
lock
push
mov
sar
popa
addr16
and
mov
mov
das
jne
fcompl
mov
jnp
sub
sub
mov
loopne
lcall
inc
xor
jo
lods
xchg
inc
jb
mov
imul
nop
xchg
fildl
fiadds
movsl
xlat
pop
cld
addb
daa
xchg
xchg
and
push
in
je
mov
rcll
mov
jmp
cmpsb
or
ret
adc
addr16
push
mov
jno
shll
pop
arpl
bound
cli
cmp
push
je
fdivl
push
adc
call
stc
scas
test
mull
rcr
ret
fdivrl
in
mov
or
dec
mov
xor
jecxz
sbb
pop
dec
movsl
jno
testl
inc
xor
push
push
cmc
xchg
scas
push
pop
mov
mov
xlat
inc
and
pop
adc
loop
xchg
daa
imul
adc
jb
xor
ds
adc
adc
std
movsb
ljmp
out
in
aaa
inc
icebp
or
and
popa
dec
dec
pop
fnstsw
shlb
mov
cmp
outsb
popa
sbbl
or
sbb
andl
ret
insl
fisttpll
sbb
mov
mov
or
adcb
fs
and
in
adc
and
lock
sarl
adc
fs
xchg
mov
out
mov
xchg
mov
call
xlat
pop
aad
std
add
sub
fsts
fwait
jo
dec
mov
jg
xor
xor
and
cmp
fistpl
pop
push
jp
test
fadd
jbe
sub
out
cs
stos
mov
rcrl
das
pop
jno
jb
call
and
mov
imul
and
sub
fnstcw
enter
shr
add
adc
das
xchg
stc
imul
aam
insl
cs
dec
ljmp
sub
int3
addl
je
scas
dec
and
mov
lods
sbb
mov
insb
or
xchg
mov
les
int
xchg
pop
cmpsb
pop
push
and
ret
cmp
xchg
jp
push
add
dec
ss
jo
test
and
divb
cmp
pop
sbb
jl
sub
cli
inc
jg
mov
adc
nop
adc
adcb
or
jge
xor
push
cmp
jne
lock
lods
jb
fcompp
int3
push
loope
xor
int3
lret
enter
jl
cmp
push
scas
daa
fwait
adc
mov
mov
xchg
movsb
pusha
leave
xor
cmpb
xlat
jmp
add
dec
rcll
xchg
and
lock
push
or
insb
sbbl
es
adc
loop
int
sti
xchg
rolb
clc
inc
or
mov
pop
mov
and
jne
fistpl
mov
int3
pop
int3
dec
dec
mov
inc
dec
outsl
sub
in
sbb
xchg
fisttpll
mov
int3
out
xor
pop
xor
fsub
sbb
dec
nop
out
mov
cmp
ds
push
clc
gs
jns
mov
mov
fcoms
arpl
jo
lcall
pop
and
iret
pusha
int3
movsb
leave
jg
fisttps
add
ss
fcomps
xchg
add
out
test
out
in
sbb
push
dec
mov
test
into
xchg
les
or
ror
pop
insl
mov
dec
or
and
cld
mov
push
pushf
sbb
aas
dec
or
sbb
push
leave
lahf
dec
enter
std
push
push
int
push
cmp
movsb
lock
cli
push
insb
out
pop
pop
test
mov
jno
jbe
or
call
cmc
lock
fisubrl
mov
out
xchg
out
cmp
fstpl
xor
mov
int3
out
out
mov
xchg
xchg
mov
sbb
sub
out
insl
cmpsl
rol
cmp
cmpsb
cmp
mov
cmp
xor
fcmovnb
jg
xlat
arpl
std
leave
js
iret
outsl
inc
jns
out
push
jo
jl
jbe
xor
scas
pushf
jo
add
jg
jb
mov
adc
cmp
adcb
shlb
dec
pop
lock
ja
dec
inc
sub
das
jns
js
scas
mov
into
and
cmc
mov
inc
cwtl
adc
mov
mov
or
mov
js
hlt
sbb
mov
movsl
das
dec
cs
push
jle
shlb
int
mov
adc
xchg
pop
sub
pop
add
les
mov
jo
pop
ret
xor
sbb
or
xchg
mov
dec
arpl
sbb
pop
clc
cmpsb
push
shl
lret
inc
jb
xchg
adcl
add
movsl
jno
cmc
notb
add
ret
pop
popl
test
xchg
jge
lcall
pop
jmp
adc
push
popa
cmp
lcall
xchg
inc
out
inc
push
std
pop
mov
dec
cwtl
adc
add
mov
int3
outsb
cs
xchg
rcr
ficompl
pusha
xchg
cltd
and
cmp
js
cltd
rcll
jp
je
data16
add
cmp
jne
xchg
outsl
lcall
bound
sti
in
daa
sti
into
mov
pop
fisttpl
pop
jb
aaa
test
xor
dec
xor
divb
add
stc
jmp
jbe
push
cltd
data16
mov
mov
inc
rolb
inc
sarl
dec
add
outsb
xchg
mov
jnp
mov
ja
inc
adc
mov
mov
dec
and
push
subb
stos
or
pushl
stos
daa
insl
fisubrs
or
xor
xor
fidivrs
or
jo
pop
insl
lods
lret
mov
sti
pop
or
insl
adc
ja
fimuls
xchg
aaa
xchg
sub
daa
imul
por
cmp
adc
adc
rorb
pop
je
push
jo
lea
pop
pop
push
mov
sahf
adc
fistps
mov
icebp
inc
ja
iret
lret
xor
outsl
sub
stos
xor
outsl
xor
push
test
xchg
adcl
test
add
int
arpl
out
test
mov
and
aas
and
jno
dec
pushf
sub
mov
fcom
push
aam
add
mov
jo
sub
ds
aaa
jb
adc
mov
mov
mov
push
mov
add
adc
outsb
jb
jae
xor
std
xchg
dec
sbb
lahf
gs
lods
sbb
pop
test
stos
out
sub
fmull
icebp
int3
outsb
jne
filds
push
add
rorb
push
loopne
sub
scas
sbb
lods
in
jne
popf
add
int
jae
jb
push
sub
add
cmp
lock
subl
cmp
shlb
out
mov
inc
sub
mov
cmp
lds
or
rclb
sub
aad
sbb
je
sar
xorb
inc
movsb
xchg
mov
addr16
sub
dec
aam
fcmovu
mov
cmp
sub
sbb
sti
insl
mov
add
ds
mov
cmp
dec
lock
mov
jl
push
push
push
test
movsb
xor
add
dec
adc
ljmp
pop
in
mulb
mov
movsb
push
adc
dec
sarl
jae
mov
xlat
les
push
sub
inc
mov
pop
shl
mov
adc
push
mov
mov
outsl
adc
in
inc
fcoml
cmc
push
adc
inc
sub
mov
scas
push
push
mov
test
xchg
out
sahf
movsb
push
mov
outsl
jo
dec
pop
mov
jbe
scas
aam
dec
shl
idivb
adc
sbb
js
push
xor
inc
mov
cmp
cmpl
adc
jmp
lds
push
lret
jnp
sbb
imul
xchg
add
pop
fyl2xp1
xor
repz
cli
mov
fimull
fidivl
lret
cmp
mov
sti
test
data16
mov
mov
sbb
mov
nop
xchg
pushf
mov
aad
push
repz
cmpsl
out
mov
xchg
loopne
mov
jge
add
call
pushf
lret
sarl
fidivrs
mov
popf
xor
xchg
cmp
arpl
mov
sti
cli
and
sub
test
xlat
loope
es
and
stos
add
fadds
test
test
mov
test
inc
imull
es
lock
or
or
add
mull
xor
lret
mov
mov
push
inc
mov
faddp
cmc
lret
jecxz
fs
fsub
mov
roll
rcll
push
aam
inc
xchg
mov
jle
dec
xchg
jmp
sbbb
jae
push
in
sbb
cmp
lock
inc
repnz
aad
pop
jnp
push
fucom
cmp
bound
clc
out
pop
test
jg
decl
mov
es
insb
fsubrl
xor
xchg
or
scas
or
xlat
adc
mov
inc
push
mov
dec
rcl
mov
lods
mov
aam
jbe
testb
call
popf
lret
xchg
lock
loop
mov
lret
cmp
cmp
insl
cltd
jecxz
mov
add
out
xor
fsub
fs
jae
int
xchg
sub
sub
sahf
pop
xor
nop
sbb
jno
gs
out
sbb
dec
scas
sub
mov
and
mov
pushl
sbb
adc
fidivl
cwtl
rcll
xchg
ret
cli
add
and
mov
dec
adc
test
pop
add
xorl
idivl
arpl
mov
ja
nop
cmp
jmp
adc
addr16
sbb
jg
nop
cmpsb
loopne
testb
fstps
xchg
sbb
insb
loope
jl
push
ljmp
or
xchg
movsl
insl
sbb
cmpb
aaa
mov
push
xor
test
enter
scas
sbb
ret
pushf
lret
insb
pop
dec
push
mov
fucomp
popf
loop
or
pop
es
adc
test
jle
push
ret
mov
aad
es
je
cs
enter
xor
adc
and
sub
add
lret
pushf
cwtl
push
bound
adc
dec
stos
xchg
ficoml
idivb
fs
or
mov
xchg
inc
in
imul
cld
les
xor
aam
xchg
dec
pop
or
out
pop
subl
push
mulb
popa
add
ljmp
xor
sbb
cmp
daa
add
pop
hlt
lret
or
xor
nop
shl
sub
sub
arpl
add
dec
push
jp
movsl
es
outsl
cwtl
mov
jae
ret
ret
int3
xchg
adc
jb
in
jns,pt
test
ja
inc
imul
pop
jp
mov
adc
push
cmpsl
mov
iret
stc
or
repnz
jnp
mov
ljmp
cmp
mov
jae
add
hlt
mov
icebp
cmp
test
test
pop
mov
mov
jge
pop
enter
jbe
jmp
loope
int3
dec
sbb
jl
xchg
jp
pop
addr16
jne
sub
iret
popa
pushl
mov
push
leave
pushf
lahf
out
js
call
add
dec
adc
and
mov
int3
jae
or
pop
push
cmpsl
movsb
lock
enter
imul
stos
cmp
aas
and
mov
nop
sahf
ror
arpl
insl
xor
pop
sbb
shrb
je
call
popa
sbb
sub
fidivs
cmp
dec
adc
pop
push
fistps
jae
lock
ss
fmuls
mov
add
cmp
pop
jbe
dec
dec
loop
xchg
inc
add
push
stc
daa
outsb
aad
adc
stc
sahf
cmp
int
add
mov
add
imul
bound
xchg
jnp
int3
cmpsl
sbb
mov
inc
mov
push
lods
insb
movsl
mov
inc
xor
cs
add
xor
jae
loopne
subps
sbb
and
xchg
cmp
stos
push
in
pop
iret
dec
dec
loopne
orl
pop
mov
lods
adc
add
cwtl
lcall
lahf
or
int
add
cmp
fcmovbe
jecxz
sbb
sbb
sar
ret
xchg
mov
xor
add
mov
inc
fwait
sbb
popa
rolb
testl
mov
les
test
out
fdivrl
lea
xchg
fucomi
xor
xor
add
shrl
sub
fdivrs
lock
mov
mov
pop
adc
push
push
outsb
xchg
aas
int
add
in
xor
call
dec
pminsw
jg
arpl
aas
inc
lret
ds
and
jmp
push
ss
push
add
sub
xor
addr16
cwtl
mov
adc
jmp
mov
lock
stos
fists
mov
arpl
sbb
ja
dec
xorl
mov
cmc
mov
sti
outsb
pop
repz
mov
push
rolb
dec
add
cmp
mov
pop
cmpsl
frstor
dec
dec
ds
cwtl
cmp
xorb
mov
cld
in
ds
dec
enter
push
pop
int3
sbb
push
outsl
std
xchg
xor
incb
xor
inc
cmp
rolb
ret
stc
int
scas
iret
bound
out
std
xor
fcoml
xor
popa
stc
cmp
lahf
jg
aas
mov
jb
xchg
stc
imul
adc
add
test
in
lret
das
loop
imul
xchg
add
or
fwait
rcll
je
or
lcall
stos
pop
xor
pop
addl
pop
add
cmp
inc
mov
mov
inc
pop
push
adc
dec
jne
popa
jge
lods
sti
dec
insb
jmp
sti
vminss
push
dec
stos
jo
jl
mov
cmp
jp
push
out
xorb
sbb
mov
popa
cli
add
pop
xor
mov
cmpsl
or
push
imul
mov
stos
inc
or
push
push
pop
and
xlat
jbe
pop
in
pop
idivl
in
and
jno
jns
sbb
dec
push
rcrl
lret
mov
cwtl
xchg
sub
cli
or
dec
jge
xorb
aam
jmp
aad
pop
icebp
or
stc
pop
lock
cs
xchg
out
insl
clc
push
cli
divl
mov
ret
aaa
movsb
das
xchg
and
inc
mov
out
cmp
movsl
mov
out
cmpsb
sub
adc
aaa
xchg
sahf
xor
leave
cmp
jae
rcrl
roll
inc
mov
or
pop
ljmp
xor
addr16
mov
aaa
xchg
pusha
das
cmp
movsb
loope
and
xchg
lcall
gs
cs
adc
push
mov
pop
cld
loop
mov
popl
inc
pop
jg
mov
sub
out
cvtps2pd
cmp
jle
test
bound
das
push
push
enter
mov
inc
test
call
mov
mov
aam
leave
jp
or
cmpsb
js
xchg
cmp
rcr
add
sbb
cli
clc
aas
add
leave
push
mov
iret
sbb
xchg
jno
pusha
shrb
aam
adc
lea
add
push
inc
and
mov
dec
cmpsb
pop
lds
ret
pop
and
cs
jne
jns
push
add
dec
cmp
outsb
xor
fldenv
icebp
sub
lods
fs
adc
lret
data16
inc
js
cli
test
lock
push
cmp
bnd
inc
fadds
pop
fucomp
rorb
mov
in
xchg
imul
and
icebp
mov
cmpsl
loopne
test
mov
dec
mov
ret
loope
out
pop
jno
fstl
mov
dec
lods
sbb
jp
jge
or
xlat
push
aam
mov
iret
add
sar
int3
adc
enter
jmp
sbb
stc
sub
sub
or
mov
leave
mov
pop
mov
movsl
pop
push
jmp
push
dec
pop
jbe
mov
xchg
mov
mov
xlat
pop
xchg
inc
push
mov
mov
sub
mov
push
jmp
int
mov
sub
inc
hlt
push
fwait
sub
xchg
sub
or
adc
cmpsb
add
mov
mov
scas
push
imul
jb
add
jge
jl
movsb
pop
mov
xchg
xchg
jno
xchg
sbb
cmp
push
jle
push
int3
mov
cmc
add
inc
fwait
jecxz
push
sbb
popa
and
out
scas
push
inc
cmp
ret
jno
ds
pop
fidivl
cs
lret
mov
hlt
ss
dec
or
xlat
push
cmc
push
pop
mov
sub
and
repz
fsts
xchg
cmpsb
aam
pop
fs
push
dec
bound
icebp
pop
jg
xor
or
sbb
enter
dec
std
push
adc
int3
je
rorl
outsl
rolb
leave
mov
dec
push
aas
aaa
fcmovu
dec
dec
push
cwtl
rorb
sbb
int
xchg
jge,pn
loop
xchg
pop
js
sub
mov
insl
xchg
inc
fwait
in
mov
xor
icebp
and
hlt
push
push
adc
in
std
es
push
xchg
enter
lret
repz
stos
inc
inc
pop
jecxz
lods
clc
lds
daa
js
xor
or
and
lock
xchg
jns
in
outsl
out
cmp
inc
sarw
mov
lea
les
pushf
xchg
and
int3
popa
das
cmp
rcrl
mov
dec
aas
xlat
int3
aad
icebp
jecxz
test
xor
out
pushf
adc
push
or
pop
neg
sbbb
xor
inc
sbb
push
cmp
lret
cli
in
mov
call
push
mov
xchg
test
jle
out
shll
lock
imul
dec
and
int3
negl
out
inc
hlt
dec
imul
push
fld
cmc
fstpt
push
data16
movsb
js
add
mov
mov
adc
out
loop
sbb
loop
test
xchg
inc
pop
dec
pop
jg
gs
add
jp
insl
out
rcr
jmp
popa
xor
inc
or
add
mov
pop
xchg
xor
push
jno
add
dec
sub
pop
pushf
fcom
and
je
out
push
stos
xor
cmp
mov
clc
cmp
lock
sbb
in
push
pop
or
xchg
sub
mov
hlt
insb
sbbb
xchg
or
push
movsb
jl
jb
adc
and
mov
gs
sbb
or
mov
xor
or
fwait
sahf
adc
inc
mov
gs
je
int
jle
pop
icebp
push
push
leave
add
push
mov
xor
add
loope
mov
jbe
cmp
dec
jge
push
inc
bound
lahf
push
into
inc
ficoml
sub
das
lret
pavgw
mov
rcrb
lahf
movsl
jb
movsb
andb
mov
roll
jno
push
aad
pushf
scas
imul
pop
ficomps
dec
jmp
mov
test
push
ds
push
fs
mov
xchg
lret
mov
fistpll
dec
loope
mov
mov
outsl
jns
and
ffree
or
lock
mov
or
dec
mov
or
jg
cmp
rorl
loop
push
test
ret
imulb
mov
push
mov
and
adc
ds
out
enter
call
loope
inc
ds
push
xchg
add
je
xchg
in
inc
lock
inc
in
mov
lods
cmp
scas
shll
leave
inc
cmc
xchg
idivl
and
jl
jns
fnsave
dec
lret
or
push
out
or
repnz
in
test
and
pop
sbb
fs
cli
push
inc
jp
outsb
shll
push
jecxz
ret
mov
bound
aaa
fidivrl
enter
daa
dec
scas
out
lea
lret
int3
fimuls
iret
cmp
push
or
sub
pop
or
insl
and
leave
mov
repz
dec
int
mov
fiaddl
sarb
xchg
stos
xlat
jecxz
pop
int3
xlat
movl
inc
cs
jo
in
fdivrl
pop
xchg
sub
add
sbb
sbb
mov
movsl
movsl
icebp
daa
pusha
dec
mov
das
adc
lret
addl
ja
cmp
mov
insl
insl
leave
add
adc
cmc
mov
arpl
xchg
icebp
ret
add
cmpsb
sub
fldt
jle
iret
or
pop
rorl
mov
mov
scas
mov
sbb
xor
mov
inc
sub
mov
push
test
mov
iret
sbb
aam
mov
bound
adc
ds
testb
mov
popf
jecxz
sub
das
mov
and
sbb
test
or
adc
adc
stc
or
pop
subb
cwtl
lea
iret
sbbl
stc
insb
add
aas
jbe
jne
pop
mov
sbbb
ss
aam
fidivs
jnp
jnp
ds
mov
data16
jmp
and
mov
test
hlt
sub
inc
jge
out
call
rcll
pop
push
cmc
mov
add
pop
mov
shlb
mov
and
mov
call
push
inc
mov
add
loope
jae
dec
in
sbb
lret
cmpsb
dec
jp
add
lock
sub
call
cmp
call
mov
in
lcall
sub
mov
pushf
cmp
xchg
adc
ss
enter
push
daa
add
cmpsb
jge
xor
jmp
movb
push
xor
push
xor
push
or
int
fmuls
imul
pop
xchg
dec
or
or
push
popa
out
xor
icebp
test
aaa
xor
sarl
in
dec
cmpsb
aas
push
dec
iretw
addl
cltd
out
lahf
mov
and
mov
xor
fbstp
jl
pop
je
jl
add
mov
inc
jae
pushf
call
cmpsb
push
mov
fdivrs
push
add
je
jg
imul
dec
cwtl
les
out
fs
outsl
pop
ret
or
fdivl
mov
dec
sub
leave
pop
add
add
incb
inc
push
add
or
mov
mov
add
mov
pop
pop
insl
dec
lods
ret
hlt
sbb
mov
and
inc
fldt
sub
idivl
sub
xor
ret
imul
sti
setno
push
nop
fld
jp
mov
push
dec
inc
rcr
call
subb
xor
mov
jae
aam
mov
enter
or
lds
cld
push
or
ss
cli
push
imul
test
push
mov
popa
mov
inc
loopne
aad
rorb
cmp
jecxz
inc
mov
mov
add
adc
dec
mov
sub
dec
and
fisubrs
test
cmp
sub
inc
cmpsl
aaa
jae
mov
cmp
rcrb
sbbl
cltd
sbbl
push
xchg
push
and
pop
adc
or
xor
jae
movsb
pop
push
or
insl
leave
jmp
data16
push
add
xor
scas
fimuls
hlt
les
loop
xchg
cmp
repnz
mov
shll
int
mov
and
lods
lcall
into
inc
mov
jae
inc
insb
sbb
xchg
pop
cmp
loope
dec
cmc
push
js
adc
xor
sub
gs
push
inc
lds
lahf
dec
mov
das
adc
lcall
ja
adc
and
stc
insb
adc
fldcw
test
inc
adc
mov
insb
add
adc
adc
cmp
mov
push
outsl
pop
mov
dec
aam
pop
stos
and
jne
mov
mov
loope
jmp
or
mov
mov
sub
mov
jns
fcoml
lret
mov
sub
inc
icebp
mov
and
sub
cmpsl
xor
mov
and
enter
jg
cmpsb
cmp
jb
sub
cltd
fiaddl
fnsave
out
icebp
lods
mov
xor
std
mov
dec
cs
dec
mov
bound
test
pop
loop
sbb
sub
jmp
cmp
aas
call
cltd
das
sbb
push
fidivrs
jle
nop
inc
fwait
pop
pop
ret
push
jns
sbb
inc
pop
inc
notb
adc
icebp
test
mov
mov
xor
cwtl
stos
call
mov
fs
fimuls
pop
jbe
rcll
cmp
pop
fbstp
dec
cmp
test
sub
lret
mov
cltd
ds
icebp
icebp
lret
mov
xor
xchg
mov
aam
nop
js
pop
pop
pop
push
out
outsb
sbb
sub
adc
mov
xor
pop
cmp
insl
rcrl
pop
cmp
aaa
lock
dec
pop
inc
int
aaa
jnp
bound
push
cltd
push
or
xchg
loop
inc
jp
int
in
sbb
rcll
jns
add
in
out
dec
jnp
cmc
daa
rcrb
sbb
push
mov
fbstp
push
dec
stc
call
popf
daa
push
lock
test
jmp
adc
cmp
pop
add
orb
mov
lods
dec
lret
cwtl
lods
pop
bound
nop
xchg
stos
repz
sbb
cmpsb
sbb
cltd
push
push
jecxz
nop
leave
push
xchg
xchg
ret
mov
add
adc
jns
iret
adc
aad
adc
and
xchg
fidivl
jp
mov
sub
mov
hlt
sbbl
pushf
pop
jle
cmp
and
lods
or
mov
mov
dec
imul
xchg
ud2
sbb
jg
stc
jae
xorb
mov
test
mov
and
stos
movsb
adc
or
inc
lock
or
lods
push
loop
lahf
sbb
xorl
push
or
sub
pop
mov
jae
mov
addr16
xchg
pop
xchg
dec
dec
mov
stos
xchg
or
hlt
pop
fs
ljmp
les
pop
mov
lods
push
test
call
stos
mov
insl
mov
add
fcomps
sub
fwait
shll
lods
fs
cmp
mov
loopne
incb
lcall
xchg
test
aad
outsl
jecxz
xchg
lcall
mov
or
add
cs
fildl
mov
cmp
dec
push
aam
lods
sahf
std
enter
popf
es
xchg
test
lret
adc
mov
int3
or
and
sub
nop
sbb
movsl
push
mov
dec
std
mov
imul
shrb
pop
push
xor
jecxz
gs
lods
pop
push
insb
dec
and
sbb
rcrb
enter
mov
lret
push
cwtl
rcll
cs
lret
insb
clc
and
into
hlt
and
fcompl
dec
xchg
aaa
xchg
jbe
inc
fcmovne
add
lret
incl
iret
fs
xor
or
js
xchg
lahf
nop
enter
xor
scas
shrl
stos
data16
adc
sub
mov
ss
add
lods
les
xor
sub
roll
jle
jbe
shlb
lock
orb
subl
imul
mov
sbb
push
daa
cmp
or
sub
mov
stos
fldcw
das
inc
mov
mov
aas
dec
dec
insl
push
cltd
lcall
leave
scas
mov
fstpt
push
cltd
jmp
call
push
scas
inc
push
mov
subb
or
push
jbe
sub
outsl
mov
mov
fldenv
and
jmp
cmp
gs
cmp
out
fwait
pop
popa
popa
aaa
xchg
rclb
sub
sub
or
into
mov
insb
jg
sbb
dec
iret
add
stos
mov
mov
xchg
add
lea
into
xchg
xchg
loope
xchg
mov
test
nop
leave
lods
xchg
aas
mov
and
or
insb
loop
test
fisttps
fwait
in
jp
enter
mov
repz
cld
and
ja
das
fdivrl
sub
sbbb
or
adc
cmp
scas
dec
sbbb
ret
addb
sub
jl
fidivs
scas
int3
neg
jb
dec
sbb
nop
cmp
mov
mov
fwait
pop
jo
outsl
xchg
sbb
mov
xor
sahf
aad
push
out
and
out
xchg
data16
loope
lods
pop
xor
inc
xchg
rolb
jne
cmp
shlb
xchg
mov
scas
aam
in
js
and
push
dec
mov
and
mov
xlat
ds
nopl
add
jge
mov
adc
in
repz
jle
loop
xchg
sbb
jle
xchg
call
mov
dec
inc
mov
mov
mov
mov
mov
addl
int3
or
pop
loope
xchg
cmpsb
sbb
cmpl
push
mov
in
adc
and
das
add
pop
mov
sbb
pop
ds
xor
pop
cmp
pop
aam
dec
and
loopne
insl
cmp
js
addr16
shl
popf
xor
mov
popf
je
mov
xchg
pop
lods
test
xchg
push
inc
mov
stos
sbb
aad
cmc
push
jg
jae
pop
fistps
addr16
push
push
add
dec
cmpsb
das
xor
test
dec
mov
pushf
insl
push
repnz
or
loop
cmp
sub
lds
push
enter
repz
int3
ljmp
ret
ficoml
shlb
mov
jo
sti
mov
jl
push
push
lods
repz
std
adc
xor
mov
lds
fwait
sbb
dec
mov
xchg
out
ja
xchg
and
lock
icebp
das
pushf
pop
fsubl
bnd
insb
xor
mov
jb
outsb
leave
adc
je
jb
xchg
fmull
and
negb
fistps
es
fucomi
push
hlt
xchg
mov
and
push
dec
sar
leave
adc
es
cmp
mov
sbb
mov
test
sbb
cmp
test
cmp
movmskps
lea
jp
jnp
fstps
loop
xchg
popf
pop
mov
cmp
test
sbb
sarb
movaps
test
xchg
and
xor
xor
shr
mov
xchg
rcll
add
cmpsb
pusha
into
loopne
aam
ltr
fcomp
insl
shrb
mov
vpandn
inc
lea
ljmp
jno
ds
sub
movswl
cld
mov
lea
push
push
push
mov
es
enter
jns
mov
mov
push
cmc
push
ljmp
jp
and
mov
rcrl
shll
cmp
in
fisttpll
cltd
jbe
add
cld
cltd
sub
push
cli
mov
jno
call
insb
cmp
dec
je
xor
pop
lcall
push
cltd
cmpsb
add
push
and
aaa
aad
fisttpl
ret
ret
dec
aas
int
inc
mov
bound
xchg
jnp
xchg
mov
stos
pop
test
mov
cltd
inc
sub
mov
fdivrl
pushf
mov
pop
mov
adcb
push
imul
dec
xchg
imul
repz
bound
pop
and
outsl
mov
ret
popa
je
xor
pop
inc
add
and
lea
icebp
out
cs
scas
inc
cmp
in
or
insb
dec
sbb
push
outsb
mov
mov
jecxz
push
mov
in
in
mov
sbb
in
ss
jp
in
xor
aaa
fwait
leave
xlat
push
sti
into
xchg
sub
cli
mov
mov
fildll
movsl
push
inc
scas
shrl
ret
jl
shrl
scas
inc
pop
divl
repz
jae
pop
mov
add
push
dec
cmp
hlt
test
test
xor
jo
mov
or
inc
pop
pop
jge
sub
ss
aas
jb
push
sub
movsl
add
mov
cli
dec
test
inc
sub
fisubrl
daa
rcl
or
into
dec
pushf
and
mov
nop
ss
xchg
int
xchg
aam
scas
fldl
icebp
mov
nopl
push
mov
push
scas
xchg
das
xor
lret
sub
stos
fildll
or
movsl
jnp
dec
stos
std
jle
inc
loop
xchg
ret
inc
fsubrl
and
jecxz
cs
outsb
inc
xor
ret
rclb
mov
fnstsw
push
ficomps
and
scas
xor
jmp
jo
and
testl
lock
jbe
lret
hlt
inc
and
fbstp
xor
ret
lahf
sub
mov
clc
outsb
and
mov
jbe
ret
xor
sub
mov
mov
mov
cwtl
pop
mov
movl
xchg
dec
ret
ja
sahf
popa
mov
cltd
pop
add
sbb
and
xor
pop
es
push
in
arpl
inc
push
pop
inc
in
clc
decb
pop
and
repnz
cmp
call
mov
push
int
push
nop
test
lret
add
mov
mov
lea
push
hlt
sbb
push
lret
aas
push
mov
add
cmp
pushf
xor
imul
sub
push
pop
sbb
cs
rcll
inc
cmp
imul
leave
sbb
imul
pop
mov
adc
inc
jbe
or
inc
pop
data16
cmp
outsl
popa
mov
sarl
imul
mov
and
jp
mov
loope
and
loope
xor
sub
stc
mov
scas
lods
mov
lock
dec
fidivrl
pop
sbb
sbb
inc
jg
mov
int3
sbb
xchg
xor
jno
jge
pop
sub
jmp
pusha
xchg
sbb
dec
push
pop
or
pop
je
mov
int
adc
or
dec
sbb
imul
pusha
enter
pop
jge
test
jle
jnp
dec
sub
cwtl
fistl
push
push
int
cmpsb
test
or
sub
xchg
into
mov
cmp
sub
mov
jg
inc
incb
xchg
jmp
pop
data16
popf
andb
lods
mov
xor
gs
adc
dec
loopne
push
shrb
rcrb
inc
mov
jne
cmp
cmpl
sti
cs
inc
jae
push
jg
rcrb
test
notb
cmpsb
mov
cmp
fs
test
lock
adc
ret
stc
xor
add
cmp
lds
sti
ja
jnp
shrb
test
into
loop
or
rcrl
jle
cmp
or
push
sbb
xlat
test
aaa
rorb
push
loopne
popa
push
adc
stos
popa
mov
repnz
aas
cmp
sub
xchg
sub
notb
in
test
scas
cmc
cmpsl
insb
mov
add
sti
jne
or
xchg
jbe
push
aam
lods
or
es
dec
jge
cltd
mov
pop
nop
or
mov
xor
jl
sub
sbb
cmp
adc
cmp
es
in
jmp
pop
mov
cmpsb
inc
and
dec
lret
push
add
mov
and
in
nop
sbb
pop
push
imul
mov
mov
jg
fdivl
repnz
jle
sti
pushf
pop
cmp
into
jg
mov
mov
push
jp
nop
push
mov
push
aam
mov
cld
fnsave
cmp
popa
mov
xor
out
or
lds
xchg
sbb
loope
fldl
movsl
inc
int
cli
adc
adc
xchg
inc
jg
insl
incb
jmp
jne
fs
fwait
and
mov
cli
add
mov
sbb
faddl
push
lds
stos
leave
or
adc
push
adcb
shlb
adc
mov
jae
xchg
fs
stos
enter
cmp
ss
lret
iret
daa
scas
int
xor
inc
loop
mov
rolb
jno
movsb
lret
scas
ret
cld
ret
add
jae
test
xor
sub
in
out
ret
or
pop
cs
test
scas
xchg
movsl
fidivrs
xor
cmp
add
push
and
cmp
adc
test
outsb
icebp
jae
jp
inc
push
loopne
popa
loope
stc
andb
cmc
xchg
scas
in
pop
fcompp
jb
push
bound
mov
pop
jne
add
pop
movsb
lea
xchg
lods
jl
cmp
popf
xchg
leave
inc
jns
lock
xor
movsl
fcomi
dec
xchg
popf
push
mov
push
sub
or
cwtl
bound
jl
sub
ljmp
outsl
in
sarl
and
pop
sub
jo
or
daa
loopne
loopne
out
sbb
mov
mov
and
imul
push
sbb
fcomp
jbe
inc
mov
inc
sub
adc
pop
or
mov
stc
sub
sahf
ss
xchg
lods
cmp
daa
or
test
imul
rol
cmp
das
and
lahf
dec
inc
fwait
in
cld
xchg
jae
cmpsb
ljmp
arpl
sbb
xchg
push
push
xchg
sub
or
dec
add
cwtl
daa
mov
stos
xchg
cmpsl
orb
add
add
inc
cmp
iret
les
cmp
jp
pop
out
inc
adc
ljmp
int3
lds
iret
mov
outsb
mov
lds
vmwrite
and
xor
repnz
push
jle
int
in
stos
sub
rep
clc
mov
mov
push
xor
lea
jmp
ret
dec
stc
push
xchg
mov
push
leave
mov
and
adcl
push
jb
push
outsl
in
addr16
imul
inc
ja
and
xchg
push
lret
xchg
pushf
add
sbb
sub
ret
js
cld
adc
lret
cmp
and
fbstp
rclb
xchg
jae
push
adc
nop
jns
ljmp
jb
and
test
xchg
sbb
and
insl
jnp
lea
cs
orl
stos
fwait
sbb
cmp
cmpsb
sub
pop
in
jecxz
pop
in
pop
pushf
ret
sbb
adc
lock
xchg
and
jl
cmp
psubusw
sub
lea
mov
in
sbb
cmp
xchg
add
mov
enter
fistpll
mov
hlt
sahf
fsubrp
shlb
sbb
dec
lret
xchg
aas
push
jo
sbb
push
xchg
push
adc
out
adc
test
xor
push
jnp
and
pop
daa
adc
lock
adc
mov
outsb
jnp
jo
inc
cmpsl
std
mov
jecxz
mov
mov
dec
cmc
enter
mov
push
or
dec
dec
sti
fiadds
and
and
or
fs
iret
adc
addl
outsb
stos
mov
or
ret
sbb
xchg
xor
jo
js
rclb
into
cmpsb
stos
movsb
dec
ljmp
jl
stc
stos
xchg
testb
or
pusha
sub
add
mov
fildl
lahf
pop
cmp
mov
xor
push
add
int
cmp
gs
jmp
push
xor
add
xor
ss
mov
pop
mov
dec
aam
adc
pop
std
push
sahf
lock
xor
pop
int
and
xchg
push
mov
std
inc
cld
js
xor
bound
mov
adc
pop
jp
outsl
icebp
sbb
cmpsl
or
cmp
fwait
dec
sbb
mov
pop
inc
fistl
and
xchg
xor
dec
jecxz
and
lods
jns
push
push
mov
sub
jg
sarl
push
mov
repz
adc
push
mov
jns
sti
add
es
fcmovne
add
push
xor
ret
clc
fstl
sbb
lock
hlt
mov
pop
popf
test
bound
stos
xchg
hlt
cltd
enter
cltd
xor
sub
adc
loopne
test
dec
insl
nop
dec
ret
iret
push
mov
dec
xchg
cmpsb
jle
dec
iret
fscale
arpl
loopne
call
call
xchg
lea
loopne
enter
mov
inc
jnp
js
stos
pusha
inc
push
outsb
jb
inc
jb
stos
cli
jp
lret
add
or
mov
rorl
push
ret
mov
lods
fldenv
inc
popf
repnz
fs
cmpsl
aas
fsubrl
icebp
cmp
test
enter
cli
cmpsb
xchg
inc
mov
jo
gs
push
or
arpl
push
sub
out
andl
clc
cmp
inc
mov
jmp
cmp
sub
mov
xchg
or
dec
push
sbb
inc
push
imul
testl
dec
stos
mov
cmc
xor
dec
pop
dec
insb
add
mov
scas
jmp
sbb
push
pop
mov
mov
mov
out
into
test
push
test
test
pop
in
dec
mov
sub
fld
imul
xchg
pop
aad
aas
pop
test
insb
xchg
xchg
and
jb
dec
or
shll
cmp
mov
xor
cmp
shlb
pop
jp
dec
addb
add
or
add
mov
sub
and
mov
rol
add
lea
dec
push
cmc
int3
mov
inc
leave
or
xor
insb
in
sub
xchg
les
icebp
jae
pop
movsb
iret
dec
jmp
xor
stos
push
aam
pop
add
mov
test
pop
inc
jnp
and
or
sti
or
xchg
out
loope
mov
in
sub
mov
aad
call
insl
mov
mov
cltd
sub
jb
pop
inc
xchg
xlat
sub
jno
mov
gs
jno
push
test
ljmp
xchg
jp
inc
mov
push
sub
jne
cltd
pusha
popa
and
mov
stc
xchg
sti
fldenv
data16
cmpsb
pop
std
inc
lds
dec
mov
mov
lahf
dec
add
cmp
push
add
adc
push
push
lods
outsl
push
fnstsw
sub
imul
pop
inc
or
roll
push
add
gs
cmpsb
enter
mov
dec
cmp
frstpm(287
rorl
push
test
adc
push
fs
repz
fwait
sti
cvtdq2ps
in
add
push
ret
push
jbe
lods
sub
into
cmpsb
aaa
repz
mov
popa
jae
mov
filds
mov
sarl
cmp
mov
enter
ficomps
pop
out
cmp
mov
pusha
add
out
iret
cmp
test
rcl
xor
lods
mov
and
ficomps
insl
dec
test
jle
jecxz
adc
ljmp
lods
unpckhps
or
inc
int
pop
dec
into
dec
mov
out
je
cmp
cmp
push
inc
outsl
xchg
mov
xor
pop
and
icebp
rol
xchg
push
pop
cmpsb
in
cmp
mov
mov
jae
cmp
test
loope
xor
push
or
dec
cmp
cmpl
outsl
movsb
in
push
pop
les
sar
push
inc
and
icebp
std
sub
out
xchg
aad
mov
mov
fldcw
ficoms
stc
inc
outsb
rolb
xchg
push
jne
push
cwtl
mov
imul
jp
insl
inc
enter
fldcw
adc
je
nop
aam
inc
into
ss
nop
cs
xor
push
test
adc
mov
push
mov
mov
leave
mov
lods
imul
or
xchg
lcall
inc
test
stos
lret
jg
into
push
mov
lahf
dec
and
mov
adc
and
adc
loope
popf
insb
add
hlt
adc
into
das
fs
ljmp
ret
xchg
mov
aas
ljmp
fistl
cmpsb
out
nop
mov
xchg
repz
cmp
fdivrl
sarl
fwait
jae
push
in
xchg
and
fstl
faddl
stos
jbe
cli
cli
cld
xchg
call
bound
xchg
mov
sti
lds
js
fsts
rcl
pop
sub
roll
sub
sub
sbb
std
jne
xchg
sbb
mov
mov
xor
push
test
pushl
mov
and
iret
cld
jmp
pop
cmp
add
sub
add
jp
aad
xlat
push
push
repnz
push
pop
jle
sti
lcall
aam
xchg
inc
loop
add
loop
adcb
shll
adc
or
add
and
push
xor
jle
xchg
dec
mov
test
xchg
imul
sbb
hlt
sarl
fcomps
dec
push
cmp
push
push
test
ds
ds
fistps
push
icebp
xor
js
push
xor
mov
fwait
or
aas
stos
fisttps
jl
rol
mov
adc
ss
push
inc
inc
in
inc
adc
pop
pop
loope
dec
inc
mov
mov
jge
iret
test
xor
mov
pop
sar
jno
in
popa
mov
mov
push
xchg
pop
int
and
cltd
jecxz
decl
aad
lods
sbb
out
jns
cmpb
mov
jl
lret
and
pop
repz
pop
cltd
jp
mov
jbe
or
push
pop
fnstsw
icebp
lcall
pop
pop
shll
push
test
iret
mov
or
in
dec
fnstenv
pop
dec
dec
nop
adc
aas
data16
adc
rolb
sti
in
xchg
xor
mov
fsubl
ljmp
fimuls
add
rcll
mov
mov
fadds
ss
rorb
lahf
or
fmull
shll
movsl
idivl
mov
sarb
pop
scas
adc
aas
inc
or
scas
mov
rolb
fsubrl
push
das
jae
pop
or
test
out
pop
cltd
int
scas
shlb
imul
jns
sbb
ret
in
les
cld
push
cltd
lahf
adc
movsb
and
stc
imul
xor
int3
outsb
adc
xchg
std
int
jb
mov
mulb
daa
in
dec
out
aaa
ss
out
adc
nop
inc
mov
mov
fisubrs
xor
pushf
sbb
jl
mov
or
mov
sbb
cwtl
push
fidivl
lahf
jge
cs
and
sbb
xorl
imul
imul
gs
xchg
or
lcall
lcall
in
daa
pop
mov
push
lods
sub
or
sbb
jno
add
cwtl
stc
int
and
call
dec
mov
in
mov
outsb
leave
dec
pop
out
inc
cmp
pop
cmp
sub
pushf
adc
dec
clc
loopne
mov
mov
test
enter
xchg
xchg
fcoms
jne
fisttps
inc
sbb
mov
and
push
test
push
cmpb
sbb
pop
push
popa
add
jl
gs
jns
inc
add
cld
inc
add
push
loope
scas
pop
and
cmp
dec
sub
arpl
sahf
ja
test
fucomip
icebp
mov
jmp
inc
test
mov
fildl
push
mov
adc
lock
dec
dec
lods
rorl
dec
cli
data16
movsb
movb
fs
push
xchg
mov
shlb
hlt
jl
addr16
ret
inc
les
pop
mov
scas
in
and
das
cmp
popa
lret
scas
mov
xchg
push
mov
mov
jbe
repz
jecxz
pop
pop
xor
ljmp
outsl
mov
push
sbbl
out
call
dec
inc
repz
sbb
lods
sbb
arpl
lea
ss
shll
xlat
mov
test
xchg
stc
or
cwtl
je
jg
rolb
pop
shll
mov
fidivs
incb
dec
lods
into
add
and
sbb
pop
cli
ja
pop
lds
loopnew
xchg
jg
jae
push
mov
pushf
test
pop
mov
jb
ret
leave
inc
lds
jg
mov
sub
aas
push
push
faddp
aam
push
inc
push
jns
dec
add
push
ljmp
add
mov
or
cmpsl
or
mov
fiaddl
ljmp
into
or
shll
dec
mov
inc
roll
xchg
icebp
iret
sbb
cld
sbb
mov
daa
test
mov
xchg
cwtl
jmp
call
ja
insl
sub
leave
rcr
sbb
mov
sub
mov
inc
sti
sub
cmp
ljmp
xchg
dec
outsl
jnp
xchg
mov
lcall
lods
pop
in
xor
push
dec
mov
pop
aad
arpl
jg
jns
push
inc
or
inc
push
dec
xchg
sub
int3
mov
push
popf
add
inc
lods
loopne
sub
testl
aas
ds
sarb
pop
mov
stos
pop
jae
sbb
adc
movsl
aas
xchg
ret
fdivrs
insb
fimull
out
jl
imul
aam
dec
mov
push
push
mov
or
cmpsl
or
imulb
mov
cmpsl
inc
or
aaa
cmp
adc
xchg
pop
xchg
loopne
mov
sub
or
pop
into
and
insb
add
ja
xchg
xchg
in
xor
aad
cwtl
ret
xor
stos
add
fs
mov
rcrb
lahf
std
pusha
mov
sbb
mov
or
add
fimuls
sub
in
mov
in
mov
sti
iret
mov
jl
ds
xorl
pop
fstpl
adc
mov
xor
sub
sbb
imul
add
ljmp
gs
sub
stos
adc
repnz
aad
sbb
pop
mov
insl
mov
and
aaa
mov
xlat
std
jae
jl
stc
je
leave
add
mov
sbbl
mov
mov
lahf
lret
pop
bound
hlt
xchg
out
lret
scas
mov
out
xchg
neg
sbb
sub
pop
and
subl
mov
iret
jae
in
adc
pop
pop
inc
and
daa
ja
cmc
adc
cltd
dec
inc
fsub
mov
pop
ficompl
repnz
sbb
xchg
cltd
cwtl
lods
aad
mov
out
repz
aas
xchg
adc
pop
jecxz
lahf
adc
jb
adc
cmp
mov
les
cmpsl
pop
push
scas
mov
push
in
inc
rorl
or
add
iret
add
and
arpl
out
pusha
mov
sti
push
cmp
loopne
adc
lret
lret
popa
push
mov
loopne
and
xor
add
xchg
les
or
imul
sbb
inc
jno
or
aas
shl
jp
or
jle
data16
cs
mov
push
arpl
sub
or
fistps
sub
fsubr
jle
xlat
dec
in
leave
pop
lods
insl
adc
push
cli
jb
jge
mov
mov
mov
es
jae
pop
pusha
sbb
cli
ja
pop
mov
icebp
call
sub
pop
arpl
decb
imul
adc
aad
imul
fimuls
nop
pushf
pop
lret
inc
subl
inc
add
stos
dec
inc
sub
test
and
stos
and
jmp
mov
fucomp
or
pusha
push
mov
daa
out
dec
das
stc
mov
xchg
jg
and
imul
cmpsl
pop
xchg
out
ljmp
xchg
or
sub
xorb
leave
je
cmc
push
pop
imul
pop
movsl
sbb
aam
in
stos
add
mov
fiadds
cmp
xchg
or
gs
fnstcw
es
dec
dec
int
dec
mov
sbb
fisttpl
hlt
icebp
cmpl
jle
cmp
sti
sbb
push
or
in
sarl
pop
sub
inc
or
pop
sbb
adc
or
ret
lods
and
ds
and
iret
cwtl
add
out
push
push
jne
ljmp
xchg
sbb
lods
scas
popa
cwtl
pop
imul
or
mov
shlb
scas
sbb
xchg
pop
inc
or
lret
pop
inc
gs
mov
xchg
xor
pushf
mov
pop
adc
rcrb
xchg
or
std
mov
out
sub
inc
ds
into
clc
orb
push
aas
dec
jmp
mov
inc
ret
cmp
outsl
mov
lahf
incl
inc
and
mov
in
scas
int
fadd
jnp
jl
testb
xor
add
adc
cld
ret
rorb
sbbb
loop
movb
sbb
jnp
daa
pop
daa
dec
jl
imul
aad
mov
sbb
and
pop
lds
push
add
mov
xchg
ret
inc
mov
pusha
mov
add
outsl
jnp
sub
lods
pop
and
adc
out
popa
scas
inc
daa
arpl
popa
and
xchg
testb
mov
adc
xchg
jge
push
pop
xchg
divl
mov
das
call
repnz
fsubr
adc
mov
inc
arpl
sub
adc
xor
push
push
and
mov
jb
mov
jg
xadd
inc
push
pop
push
mov
pop
dec
lods
loopne
inc
and
xchg
out
andps
fisubl
scas
enter
xor
adc
out
stos
sahf
rdmsr
cmp
jecxz
jbe
stc
insl
cltd
sub
cmc
arpl
sub
sub
jno
hlt
pop
xchg
add
daa
les
loopne
mov
test
sub
push
loop
jp
cs
inc
mov
dec
jno
call
inc
incl
inc
xacquire
in
xchg
and
ret
clc
loop
inc
sbbb
jmp
add
fbld
ss
icebp
daa
mov
outsl
push
incb
int3
rolb
xor
xor
std
jno
or
mov
popa
and
or
je
or
pop
hlt
or
out
push
adc
xchg
in
lret
jp
jmp
or
ds
repnz
lret
dec
jae
lock
std
into
inc
push
fadds
dec
or
testb
cmp
bound
cld
int
es
pop
mov
xor
mov
jg
cmpb
or
int3
rcl
jecxz
filds
and
inc
cmp
or
or
sbb
int3
insl
pop
jbe
mov
mov
xor
out
int3
jae
test
ds
mov
sub
loopne
and
ret
sub
jp
inc
insb
cli
xor
jmp
test
cmp
mov
clc
mov
or
xor
pusha
and
cmp
pushf
sub
cmpsl
adc
push
mov
mov
and
outsb
push
inc
movsl
bound
inc
repz
sbb
out
add
adc
stos
cmp
add
loop
xchg
sbb
mov
stos
pop
cmp
test
aam
or
add
fmul
sahf
and
dec
pop
fcmovb
adc
and
inc
xchg
sub
lahf
adc
push
xchg
loop
cmc
pop
sub
cmp
les
pop
mov
mov
or
mov
jns
std
jp
scas
xchg
add
mov
inc
or
or
shrl
push
push
or
pop
insb
lods
adc
xor
xlat
mov
notb
out
gs
push
adc
push
out
mov
movsl
or
lret
repz
add
int3
lock
pop
cmp
sbb
cmp
xchg
daa
repz
iret
inc
dec
push
jne
pop
pop
js
test
xchg
xor
gs
insl
cmpsl
mov
lret
ds
cltd
or
mov
test
aas
push
roll
add
pop
outsl
mov
mov
inc
jns
mov
mov
test
push
test
das
adc
pop
fwait
adc
pop
push
mov
mov
xor
mov
int3
adc
lock
lcall
xor
and
insl
cwtl
push
insl
jl
xchg
or
mov
dec
jbe
jge
lcall
pop
ljmp
cs
mov
jns
js
jns
adc
mov
ss
sub
je
outsl
push
sub
push
fwait
outsb
sub
cmpsl
cmp
sahf
std
or
dec
xchg
mov
loope
enter
jle
inc
sti
sbb
jle
out
mov
mov
xchg
fldt
add
push
mov
bound
pop
jb
push
mov
cmp
or
mov
jg
xor
and
adcl
aas
xor
in
adc
mov
add
jl
xchg
popa
sbb
jecxz
daa
mov
testb
repz
mov
js
outsb
mov
push
mov
jp
jl
jne
add
aaa
xor
cmpsl
or
push
leave
mov
imull
inc
es
sbb
xor
loopne
sbb
push
jmp
push
or
sbb
cmpsb
sbb
mov
xchg
cmp
inc
add
mov
sub
icebp
out
add
rorl
loopne
add
add
or
pop
push
push
sub
lea
push
adc
pop
movsb
inc
shrl
test
enter
push
cmpsl
jnp
sbb
or
fimuls
sub
sahf
rcrl
int
pop
movsb
dec
add
test
shrl
and
cltd
lret
and
test
bound
out
in
imul
jle
xor
xor
filds
movsl
sti
fistpl
and
jne
adc
push
test
inc
cmpb
mov
test
lock
scas
fcmovu
sbb
dec
pushf
lcall
fwait
adc
push
lock
and
xor
mov
sahf
inc
imul
rcr
sahf
cs
fnsave
fwait
call
into
neg
jbe
enter
insb
push
js
scas
lods
sub
mov
sahf
inc
ficomps
icebp
cmpsb
cmp
and
movsl
pop
inc
rolb
or
mov
mov
ret
nop
test
jl
cmpsl
mov
out
lods
or
jecxz
xchg
repz
xchg
rorb
xchg
inc
add
addb
call
cmc
add
or
mov
insl
xchg
inc
aas
rcl
shrd
add
dec
sbb
int
jmp
xchg
inc
daa
mov
das
leave
pusha
aas
dec
mov
adc
push
jmp
cmpsl
adc
mov
xor
pop
push
mov
cs
dec
fsubl
inc
int3
sub
scas
and
rol
mov
arpl
pusha
mov
xor
ret
push
fwait
and
jns
jecxz
push
add
pop
sarb
ret
fistpl
in
out
rcll
adc
out
imul
push
push
bound
jae
jns
ljmp
mov
jno
dec
mov
cmp
sbb
sar
fistl
setnp
pop
jge
rorb
les
repz
test
add
jmp
jno
in
loopne
insl
push
jo
and
pop
cmp
subl
scas
add
mov
in
out
ja
mov
cmpl
in
jb
or
stc
adc
lods
lret
adc
aaa
mov
mov
aad
inc
xor
sub
jno
repnz
add
lock
frstor
xchg
pop
xchg
pop
inc
ss
pusha
subl
or
pop
test
xor
lock
pop
jae
pusha
jns
and
loopne
push
les
adc
jmp
push
add
mov
jb
inc
inc
mov
mov
daa
sti
cwtl
push
lahf
xlat
leave
sahf
sbb
fmul
mov
adc
sbb
jno
and
push
adc
and
or
pop
stos
fwait
sbb
or
pop
jno
pop
rcl
dec
call
cltd
xor
loope
jge
loope
aam
lret
add
outsl
add
inc
movsl
imul
dec
nop
dec
cmc
pop
je
enter
push
xchg
sbb
mov
sbb
dec
inc
enter
cmovo
testb
xor
cmc
std
mov
movsb
push
cltd
pushf
dec
lret
inc
inc
sahf
xchg
and
xchg
lea
dec
and
lock
mov
push
jmp
fs
outsb
pop
or
orb
subl
out
pop
jo
xlat
enter
pushf
sub
pusha
lods
mov
add
inc
push
jg
hlt
rol
loopne
sub
xchg
xor
dec
out
lods
scas
into
aam
cmp
push
mov
enter
lcall
mov
push
sub
lods
xchg
pop
cmpsb
jnp
rol
cmp
sahf
pop
out
adc
lds
call
cmp
or
mov
lret
push
adc
into
pop
mov
jb
jecxz
sub
xor
sub
lds
out
data16
imul
mov
scas
adcl
push
fldt
sbb
mov
jo
movsl
lcall
inc
dec
in
or
insl
adc
test
cmc
aam
in
dec
out
mov
push
jmp
push
pop
aaa
add
fs
pop
mov
ja
aas
mov
jge
adc
mov
xchg
mov
bound
sarb
cmp
repnz
aas
mov
out
xchg
pop
roll
enter
enter
xor
push
push
nop
leave
pop
dec
pop
adc
mov
lea
jge
push
mov
nop
enter
dec
enter
and
std
pop
fadds
outsb
call
std
outsb
mov
add
jo
dec
insl
dec
jne
ljmp
jg
pop
adc
cld
arpl
sub
orb
daa
nop
aaa
jnp
xor
lahf
enter
pop
mov
sbb
mov
push
xchg
add
cmp
fildll
xorps
cmp
fnstenv
push
movsb
cli
xlat
push
xchg
mov
jg
cmc
notb
sbb
xor
push
sbb
cmp
adc
adc
cmp
mov
ljmp
movsb
lret
stc
push
shlb
ret
inc
mov
push
aaa
aad
push
rclb
dec
adc
lods
fcomps
std
xchg
ror
mov
daa
addb
arpl
inc
inc
rep
out
int
xchg
mov
test
mov
xor
hlt
out
cmp
clc
xchg
push
inc
clc
mov
iret
push
push
push
push
out
dec
xor
jmp
push
je
sub
add
push
jg
sbb
test
mov
adc
jp
jg
push
pushf
xor
std
mov
arpl
cmpsb
mov
adc
push
pop
fstps
lahf
xlat
jl
and
imul
sbb
cltd
and
mov
outsl
jbe
aad
gs
and
mov
xor
in
cs
aam
xchg
mov
mov
fildl
filds
lock
scas
mov
in
or
insl
icebp
out
icebp
clc
jecxz
sahf
jmp
stc
out
sti
pop
aaa
sbb
ret
out
call
jg
pop
adc
inc
call
push
push
into
inc
push
push
mov
mov
ficoms
push
push
rcrb
mov
addr16
repnz
adc
cmp
popa
cs
je
mov
out
mov
inc
push
int3
aad
and
cmp
sarb
rolb
lds
inc
in
xchg
mov
mov
adc
mov
movsb
add
rclb
xor
inc
iret
fcmovbe
rorl
inc
mov
ficoml
orb
adc
xor
and
mov
popf
xor
lods
repz
int3
dec
xchg
add
dec
repnz
fimuls
add
xor
adc
jl
inc
in
outsl
mov
jae
jnp
jecxz
pop
fsubr
fwait
in
and
add
js
test
pop
cld
mov
xchg
and
aaa
and
fdiv
pop
iret
fbstp
mov
push
lret
or
sub
test
das
mov
mov
cli
pop
lcall
pop
fisubs
test
neg
jo
imul
les
test
ja
pop
add
repnz
popl
cwtl
pop
pop
or
and
sub
repnz
mov
adc
and
dec
mov
repnz
dec
mov
lcall
xchg
call
add
inc
dec
mov
rol
sub
mov
mov
xchg
add
insb
mov
cmp
stc
insb
add
ljmp
loop
negb
aam
mov
mov
xchg
nop
sub
ljmp
fcompl
push
data16
aas
mov
push
xor
inc
cli
fdivrs
jb
cmpsb
mov
push
mov
js
mov
imul
das
jne
loopne
sbb
sub
mov
jl
push
lock
fwait
mov
movsb
dec
pop
jmp
push
cmp
cmp
jge
mov
test
jmp
stc
xorb
fadd
xor
mov
and
inc
mov
fdivrs
xor
arpl
testl
cmc
insl
fimull
fucomp
leave
and
cli
add
sbb
push
inc
mov
mov
jl
add
orb
dec
outsb
rclb
mov
aaa
out
sbb
rorl
push
mov
jb
jno
call
lock
fwait
js
add
mov
in
and
repz
pop
test
pop
cli
pop
mov
adc
out
sbb
adc
out
dec
sub
lret
ljmp
sub
xor
cmp
inc
inc
cmp
imul
loopne
pop
pop
or
add
call
xchg
iret
xor
dec
sbb
mov
mov
mov
popa
imul
cmpsb
mov
imul
xchg
cmpsb
inc
jae
out
jae
mov
mov
insb
rcrl
or
push
loop
imul
in
mov
rolb
jns
or
imul
movsb
addr16
mov
xchg
dec
into
pop
and
pop
int
lods
test
and
imul
dec
loopne
div
adc
sub
rcrb
mov
cli
inc
imul
shlb
pop
int3
lret
push
mov
dec
or
add
xchg
pop
cwtl
mov
dec
scas
cld
lds
mul
and
sub
mov
pop
dec
push
mov
jg
fnstsw
sub
jb
push
fistl
pop
sub
dec
insb
pop
stc
dec
hlt
inc
adc
sub
les
or
div
jno
mov
cld
or
dec
int
mov
cmpsl
cld
pop
push
mov
jmp
icebp
dec
pop
add
mov
mov
pop
leave
aad
push
push
pop
cmp
lods
shrl
adc
sub
inc
loopne
in
cmp
call
call
lahf
adc
cwtl
push
stos
movsb
std
movb
in
fiaddl
ds
fistl
icebp
hlt
push
mov
addb
sub
pop
scas
divb
in
jl
popl
inc
pop
sub
aas
daa
clc
pop
mov
jns
add
imul
lds
mov
push
pusha
pop
jg
jne
outsl
adc
xchg
sub
outsl
fsts
lret
out
mov
out
dec
mov
scas
add
scas
cli
push
xchg
dec
stos
push
das
imul
jmp
fisttps
ret
adcl
aad
mov
add
and
xchg
mov
negl
mov
push
jmp
jae
mov
mov
enter
adc
pop
rclb
ja
sub
scas
inc
mov
ds
aad
sbb
mov
inc
or
sbb
lods
pop
scas
mov
negb
cmc
dec
scas
out
enter
pusha
lret
adc
or
sub
push
sahf
push
icebp
stos
inc
lahf
mov
adc
rorb
cs
cmpsb
adc
shlb
loopne
out
mov
mov
fisttpl
shll
daa
test
and
mov
push
dec
add
jge
adc
or
and
sbb
jae
movsl
push
push
les
xchg
xchg
push
jae
out
inc
dec
mov
jne
push
nop
sti
cmc
sbb
dec
rcrl
mov
int3
adcl
cmp
lods
xlat
movsl
adc
push
xchg
inc
mov
push
jbe
mov
push
ss
inc
and
pop
ja
gs
lea
xchg
and
iret
inc
gs
cmpsl
xor
stc
arpl
movsb
cmp
push
add
fcmovnbe
jne
unpckhps
insl
cmp
adc
out
cltd
int
fs
inc
sbb
std
in
push
xchg
lahf
adcl
loop
xchg
add
stc
mov
xchg
test
mov
and
dec
sbb
frstpm(287
or
shll
mov
mov
xchg
and
add
cmp
push
pop
bound
cld
ret
sahf
sbb
adc
icebp
sub
or
test
data16
in
and
ds
fchs
aad
mov
pop
xor
sub
inc
lds
mov
cmc
sti
loope
xchg
cltd
pop
add
bound
cwtl
rcrl
add
fiadds
xor
ret
shlb
cli
dec
add
jle
dec
push
xlat
stos
into
pop
sub
aam
cmp
sub
fs
pop
xor
jmp
out
cmc
and
cmc
jbe
rorl
ret
sub
test
leave
add
dec
cmp
jb
stc
sub
std
in
out
mov
imul
rcrl
in
cltd
cmp
into
jmp
movsb
repnz
scas
adc
jnp
int3
adc
ror
aam
xorb
cmp
lock
in
inc
aas
cmp
adc
call
js
pop
xor
xor
push
or
test
and
adc
inc
sub
mov
cmpl
dec
imulb
movsb
jns
xlat
divb
test
cs
daa
or
dec
push
lock
pop
dec
xchg
jg
inc
ljmp
clc
or
enter
std
jmp
ret
sahf
or
mov
call
nop
sub
call
jae
sbb
inc
insb
incb
daa
js
ja
xchg
push
add
fisubrs
test
cmp
insl
push
push
push
adc
ja
jmp
mov
es
stos
popa
scas
sub
xor
sarl
sub
int
shlb
mov
hlt
jg
mov
and
pop
repz
sbb
mov
mov
mov
push
dec
add
roll
roll
xor
push
cmc
popa
es
je
dec
jecxz
pop
cmpsl
sub
adc
pop
fdivrl
lcall
mov
sub
jmp
add
stos
push
dec
dec
pop
xchg
push
pushf
push
adc
out
ffree
adc
adc
dec
test
movsl
mov
inc
fdivrl
lds
js
ret
mov
mov
aaa
pop
jo
jle
mov
les
xchg
pop
and
or
pop
mov
push
loop
mov
insb
mov
mov
outsb
add
cmp
dec
icebp
pusha
pop
repnz
ret
jns
int
jnp
sbb
ljmp
lcall
out
ret
lea
sub
cltd
sbb
mov
cltd
and
or
jge
add
cs
inc
fs
pop
fcomp
push
adc
das
adc
or
mov
mov
outsl
adc
inc
cltd
cmpsl
sahf
xchg
cli
lock
xlat
mov
in
lret
mov
adc
into
dec
push
out
inc
in
movsb
mov
pop
les
daa
and
and
stos
inc
xchg
fwait
jg
outsb
popf
pop
cmpsl
sub
sub
lds
pop
xlat
ret
pop
test
idivl
sbb
lcall
xor
add
or
out
or
pop
adc
pop
add
pop
pop
cmp
ds
jg
mov
psllq
pop
enter
stos
lods
jecxz
jmp
jno
inc
inc
pop
add
jl
fdivrs
mov
rcll
sub
das
sub
pop
mov
popf
test
inc
aad
int3
pop
das
mov
push
imul
adc
daa
xor
sti
sbb
sbb
or
cmp
out
aam
cs
sahf
sar
cmpb
mov
mov
jle
sbb
rcr
add
sbb
jmp
jecxz
xchg
lods
arpl
loope
in
sub
xchg
mov
push
shlb
rorl
leave
ss
dec
jmp
or
jmp
mov
mov
out
mov
sub
ja
js
fnstsw
inc
pop
mov
adc
push
lock
pop
cmp
ljmp
mov
std
out
xchg
push
inc
mov
push
aam
lcall
and
std
adc
cmp
mov
andb
cmp
fwait
mov
cli
loope
jne
test
lahf
cltd
sub
stc
mov
loopne
lret
cmpsb
sub
jg
cmpsl
mov
and
mov
and
pop
pop
into
lock
mov
fimuls
fwait
xor
push
lret
pop
dec
dec
push
imulb
testb
stc
pop
push
loop
or
mov
popf
hlt
into
in
cwtl
movsb
pop
mov
xchg
call
cmp
xchg
imul
or
imul
cmpsl
stc
repnz
cli
push
and
lods
push
fs
or
dec
push
push
rcl
xor
test
mov
mov
mov
lods
ds
and
dec
mov
pavgw
in
mov
xor
jno
sbb
sub
mov
sbb
jge
push
test
ljmp
into
pop
ja
xchg
push
aam
inc
pushf
repz
xchg
fistpl
loop
inc
fistpl
mov
sahf
in
outsl
jmp
aaa
mov
orl
rorl
mov
lretw
dec
fs
mov
and
dec
inc
dec
loopne
out
mov
push
sbb
pop
xchg
cli
push
mov
loope
addl
or
pop
xor
jno
fsubp
outsl
lret
scas
pop
mov
fisubl
and
int
out
sub
push
dec
enter
int3
daa
idivb
inc
fnstenv
in
outsl
cld
repnz
aas
lret
cmc
fdivrs
add
mov
ljmp
js
leave
insb
push
jmp
fiaddl
add
mov
pushf
sahf
lret
sub
jb
adc
outsl
scas
sti
sti
hlt
stos
adc
dec
movsl
mov
mov
lods
jl
roll
cmpsb
scas
popa
cs
xor
lcall
in
aam
adc
dec
dec
dec
mov
ret
sub
out
mov
sbb
sub
push
shl
in
xchg
outsb
xor
mov
xchg
jno
scas
adcl
outsb
call
divb
in
js
jmp
jbe
sbb
pushf
mov
ret
sbb
addr16
cmp
push
jb
hlt
adc
pushf
es
jo
and
cld
inc
dec
sbb
and
lea
cmp
adc
dec
mov
into
push
dec
test
adc
shlb
add
in
and
subl
dec
pop
out
in
pop
ds
dec
imul
sub
xor
and
cmp
or
pop
popf
pop
pop
filds
inc
lret
or
test
in
outsb
push
in
test
fcmovu
sub
sbb
popf
ret
mov
lds
and
cltd
movsl
xchg
cltd
mov
test
jb
inc
imul
mov
cmpb
mov
cld
movsb
add
repnz
rcrb
push
mov
dec
jl
pop
push
pop
sbb
outsb
lods
scas
push
adc
jns
pushf
insl
xchg
sarb
leave
fstl
xchg
mov
xchg
cmp
dec
int
lretw
mov
jg
inc
faddp
fsincos
pop
es
sub
int
shll
and
cmp
sahf
xor
bound
fs
xor
inc
lahf
xchg
mov
cli
dec
pop
and
je
jno
and
cmp
negb
ret
jnp
mov
hlt
add
and
jmp
pop
movsl
mov
push
inc
ds
and
into
fstl
sbb
loopne
cwtl
mul
add
mov
or
xor
adc
jmp
jecxz
fistl
pop
xchg
div
pusha
stos
sti
push
xlat
ret
dec
push
das
stos
rcrb
ret
fsts
mov
fwait
jge
lcall
adc
adc
xor
out
dec
xorl
pushf
aam
cmp
sahf
jmp
rcll
push
jno
popf
mov
int3
pop
and
das
lds
mov
or
and
cmpl
add
lret
pop
lods
out
or
xor
cld
mov
jnp
mov
jne
es
sub
inc
jmp
call
out
sahf
jle
jo
xor
jnp
adc
jno
std
dec
out
les
addl
lds
sub
inc
out
jge
outsl
cmpsb
and
sbb
mov
and
mov
xlat
iret
push
pop
scas
aam
xchg
notl
mov
daa
inc
jbe
push
out
adc
stc
push
mov
pop
test
mov
jg
dec
or
push
daa
jmp
nop
xchg
xchg
pop
adc
stos
xor
sar
arpl
out
ljmp
orl
mov
mov
cmc
jecxz
das
das
push
in
inc
mov
xchg
aas
xor
pusha
xor
aam
ffreep
adc
insl
cmp
xchg
push
dec
and
xchg
loop
lcall
jno
push
jae
fdivrp
xchg
popa
dec
adc
sahf
int
insb
loop
into
insb
gs
sub
jnp
jae
shl
sub
push
out
fnstenv
jb
pusha
push
mov
rcr
cmp
sub
mov
mov
js
add
shll
and
out
pop
sbb
inc
mov
inc
jge
leave
outsl
arpl
pop
insb
and
adc
jno
insb
fildll
pusha
xor
lahf
fisubrl
mov
mov
mov
mov
xchg
mov
shr
je
cmp
cwtl
mov
jns
inc
push
shr
lahf
or
loop
sub
xchg
adc
push
pop
adc
inc
cmp
cmp
fs
cmp
insl
shlb
lds
sarb
or
loope
scas
sub
push
push
in
and
test
mov
and
sti
xchg
push
xchg
lods
or
sti
stos
and
mov
sbb
cmp
cmpsb
pusha
ds
fisubl
divb
popf
push
jnp
jp
cmp
inc
jle
cli
inc
mov
in
popa
scas
add
sti
rol
ret
xor
aad
pop
mov
popf
icebp
jbe
test
in
pop
cmpsl
jecxz
mov
shrb
push
or
jg
movsb
pop
loope
cs
into
and
movsl
push
fnsave
fs
int3
cwtl
pop
int
mov
cli
jbe
outsl
cmpsb
mov
lahf
out
aaa
jp
jnp
or
hlt
sar
insb
xor
pop
pop
dec
and
insb
mov
sarb
imul
fcoml
movsb
imul
insl
cmpsb
cli
jae
dec
out
sbb
inc
lea
out
sub
loop
loope
ljmp
and
mov
push
in
cld
sub
stos
inc
das
sub
mov
or
push
gs
ss
jnp
scas
decb
aas
insl
add
repz
mov
sub
cli
jns
add
lea
lods
xchg
or
insb
ficoml
sub
pushf
mov
mov
mov
or
out
jl
pop
pop
mov
adc
cmp
ljmp
push
mov
sbb
fstl
ds
cmp
sbb
jne
fcmovb
aaa
shrb
sbb
daa
pop
into
cmp
icebp
ds
dec
sbb
iret
pushf
cltd
fisubs
loope
xor
dec
pop
sbb
adc
cmpsl
iret
rcll
test
clc
insb
orl
adc
and
shlb
popa
enter
in
dec
mov
lods
xor
sub
nop
cltd
notb
jns
out
xchg
mov
pop
or
imul
cli
mov
pop
mov
pop
test
pop
data16
ds
xor
inc
hlt
fwait
pop
push
imul
dec
push
cmp
fs
pushf
stc
mov
mov
dec
adc
insb
fmuls
xlat
enter
filds
cmpsl
mov
cmpsl
jecxz
mov
push
shrl
jmp
dec
xor
add
pop
shll
or
test
stos
fistpll
imul
addl
aaa
shrb
pop
inc
mov
xor
fcmovnu
loope
cmc
push
enter
sub
in
lret
subl
push
stos
push
mov
std
inc
add
push
dec
test
xchg
and
movsl
inc
pop
in
mov
xchg
lret
mov
repz
sub
lea
movsl
lods
push
int3
mov
sahf
aaa
lods
xchg
js
jecxz
inc
cmp
push
outsl
out
repnz
int
cmp
imul
mov
ret
jae
clc
inc
mov
mov
fildl
int3
inc
addr16
cmp
fs
jle
repnz
dec
sahf
xchg
aas
pushf
cwtl
data16
push
add
hlt
push
das
idivl
mov
adc
xor
push
push
test
mov
jnp
insl
xor
in
xor
mov
push
stc
sbb
and
je
std
jl
mov
dec
cld
pop
outsb
dec
js
and
je
xor
mov
sub
jnp
call
testb
push
mov
or
or
cld
std
cmp
cmp
xor
mov
sbb
in
test
xchg
call
cmc
pop
push
and
cmp
mov
inc
sarb
icebp
aas
adc
pop
and
stos
pop
mov
popl
hlt
adc
fiaddl
xlat
cmp
pop
or
fildl
jo
xor
push
clc
shll
lret
add
pop
mov
inc
out
adc
ljmp
xadd
pushl
aaa
sbb
xbegin
sbb
push
leave
fisubrs
movl
in
sti
lcall
xchg
sbb
bound
lods
mov
sahf
outsl
sub
mov
sub
ret
xchg
divb
rclb
push
movl
js
lcall
out
push
mov
push
and
sbb
sbb
xor
movsl
xorb
push
inc
inc
push
sbb
stc
mov
loop
std
jg
in
repnz
rcl
rcrb
pusha
push
xchg
shlb
rolb
xchg
add
sbb
loope
in
jp
mov
sti
sahf
push
mov
mov
sti
call
add
mov
stc
push
imul
jp
add
add
testl
sbb
sti
xchg
aaa
sub
pop
add
and
lds
jmp
jne
inc
leave
push
insb
arpl
mov
sbb
and
and
xchg
mov
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
mov
xchg
mov
into
lcall
cmp
packssdw
stc
fnstenv
jno
out
mov
jne
sbb
add
in
addr16
cmp
and
pop
je
xchg
arpl
pop
pop
ds
jo
sbb
aad
pop
and
ret
je
sub
ja
andb
insb
cmpsb
mov
lods
iret
mov
adc
test
aaa
cli
mov
inc
test
mov
sub
popf
loop
adc
das
incl
push
pop
out
add
test
mov
sub
js
jb
mov
bnd
loope
adc
dec
mov
popf
daa
adc
mov
pusha
xchg
xor
xor
jl
adc
cs
call
movsl
inc
add
jne
xor
test
mov
rcl
nop
addb
test
xchg
mov
ror
cmc
push
xchg
scas
and
adc
shl
repz
mov
jno
cmp
and
cmp
jne
push
out
add
fldcw
or
cmpsb
aas
push
mov
jg
and
jns
hlt
adc
sti
ret
and
pop
mov
and
testl
add
add
xchg
add
inc
xchg
outsb
popa
add
xchg
push
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
and
add
jle
