jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
pop
adc
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
dec
call
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
fdivr
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
or
add
addb
pop
inc
add
add
or
lea
mov
add
mov
add
cli
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
jge
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
add
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
dec
incl
jne
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
shr
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
cld
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
stos
or
xor
cmp
je
mov
adc
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
out
loope
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
roll
add
lea
mov
mov
inc
and
aad
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
push
add
jmp
shr
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
push
push
call
mov
add
out
stos
fcomi
mov
add
jl
add
loop
add
xchg
idivb
mov
add
push
push
push
push
push
call
addb
add
les
push
fwait
mul
shlb
add
pusha
mov
andb
jnp
fwait
scas
add
add
xchg
jmp
popa
add
shll
lock
popl
push
push
lea
push
push
lea
push
push
call
mov
mov
lret
add
pop
xchg
xchg
add
jp
add
mov
data16
mov
jne
fsubr
fcoms
add
loopne
jge
add
cwtl
mov
movsl
push
push
xchg
fwait
push
mov
add
add
data16
pop
add
lcall
push
push
call
mov
lock
fimull
cli
in
pop
push
iret
shr
add
add
mov
add
add
cmpsb
mov
lcall
push
push
lea
push
push
push
lea
push
push
lea
push
call
enter
mov
add
subl
add
pop
arpl
add
add
add
push
popf
mov
fucomip
add
add
imul
add
popf
leave
sti
lods
in
loope
add
sub
pop
call
push
lea
push
push
call
add
lcall
add
fldl
in
mov
add
add
data16
lcall
loope
lret
fs
stos
add
int3
js
call
add
add
cmc
cmpsl
add
lods
loope
add
out
jo
mov
jbe
mov
pop
add
testl
lcall
jnp
add
push
lea
push
push
lea
push
push
call
add
add
int3
mov
icebp
lods
cwtl
nop
add
add
jl
outsl
jecxz
pop
add
test
add
gs
add
test
test
cwtl
mov
out
mov
jae
sti
push
add
lcall
add
lret
push
lea
push
call
stos
addb
mov
add
add
add
add
jp
add
push
add
iret
mov
mov
xorl
pop
add
xchg
cld
xchg
out
pusha
cld
push
add
mov
jae
sub
pop
call
push
push
push
push
push
push
push
push
call
mov
fucomi
lods
add
pop
add
notb
mov
add
jge
ljmp
popf
mov
in
lret
add
call
pop
mov
add
mov
add
jmp
mov
add
sub
pop
jmp
push
lea
push
push
lea
push
push
push
lea
push
call
lea
add
add
add
imul
add
add
jp
in
add
add
add
add
add
add
lcall
push
push
lea
push
call
xchg
test
test
loop
mov
push
fmull
add
je
mov
push
add
sub
pop
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
in
xchg
add
jne
imul
movl
add
add
add
imull
test
filds
pop
hlt
push
push
lea
push
push
push
push
push
call
add
add
jp
aam
push
add
add
enter
add
add
ret
mov
pop
add
add
fs
add
add
add
add
add
add
sub
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
fiadds
ret
add
add
add
add
push
add
push
out
push
add
in
add
pop
pop
mov
add
add
jecxz
add
add
in
fdivr
lcall
ret
add
add
push
push
push
push
push
push
push
push
push
call
out
add
fsubs
pop
add
ljmp
add
cltd
mov
add
add
scas
xchg
addl
add
mov
shr
add
jle
fiaddl
addr16
add
sub
pop
add
push
push
push
lea
push
push
call
push
mov
insb
sar
test
add
out
xchg
add
aad
xchg
int
adc
mov
cwtl
xchg
xchg
xchg
je
mov
std
leave
add
add
ljmp
pop
mov
push
push
push
push
call
out
add
orb
popf
add
in
add
repnz
faddl
iret
add
xchg
xlat
xchg
add
jno
add
iret
into
mov
add
add
cmpsl
mov
enter
add
jae
filds
mov
mov
add
lcall
sbb
push
lea
push
lea
push
lea
push
call
lcall
add
lods
lds
lods
pop
add
add
stc
shlb
add
mov
add
call
aad
push
stos
in
enter
fadds
pop
mov
scas
mov
clc
jno
jb
aad
add
lea
scas
aad
mov
add
lcall
les
add
push
push
ror
shr
push
push
pop
add
inc
not
sub
sub
sub
add
pop
ror
pop
push
push
push
lea
push
lea
push
push
push
push
call
jl
aam
stc
insb
pop
mov
movl
movsb
lods
push
xchg
add
mov
call
test
loopne
pushl
push
push
push
call
mov
pop
mov
jne
add
or
rcr
xchg
mov
jns
add
xchg
pop
add
add
mov
mov
lcall
inc
add
push
push
push
lea
push
lea
push
call
repnz
pop
mov
xor
add
add
cwtl
bound
add
les
add
ret
mov
pushf
subl
filds
add
add
in
lcall
inc
lock
push
push
push
push
call
mov
add
xchg
icebp
xchg
push
jge
jbe
in
fs
add
add
popa
add
pop
les
pop
arpl
pop
xchg
add
fs
data16
ret
les
lcall
inc
call
push
push
push
call
test
xchg
add
add
add
data16
mov
xchg
push
icebp
iret
add
add
add
xlat
xchg
sub
lcall
inc
call
push
push
push
push
call
ficompl
pop
add
add
add
jne
addb
test
add
push
add
add
add
lods
addr16
movsb
sti
mov
out
loopne
scas
xchg
add
lcall
push
push
push
push
push
lea
push
call
add
test
je
add
movsb
add
mov
add
mov
cmpsb
gs
add
push
add
add
add
add
scas
xchg
add
sub
pop
pushl
pushl
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
push
test
aad
fwait
sub
push
clc
mov
mov
mov
movb
lcall
push
sub
add
push
push
push
push
call
lret
icebp
pop
mov
add
add
jne
jnp
cmpsl
out
int
add
mov
add
cld
jae
addl
js
pop
arpl
mov
add
repnz
jp
sub
pop
pushl
push
lea
push
lea
push
call
mov
add
out
aad
jns
arpl
lea
jle
pop
pop
add
mov
loop
add
movsl
add
fs
lret
out
add
xchg
fcom
mov
pop
add
add
imul
movsb
ficomps
xchg
add
xchg
jnp
int
fldl
add
jne
call
push
push
lea
ror
shl
dec
push
or
not
add
sub
ror
lea
sub
rol
pop
lea
pop
push
push
push
push
call
cld
test
in
add
add
stos
clc
add
add
mov
in
push
push
jmp
add
add
jge
add
lock
mov
roll
mov
scas
add
rolb
jle
mov
add
insb
int3
add
add
mov
jns
imul
int
repnz
mov
hlt
add
add
sub
pop
pushl
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
stos
push
loope
add
fldenv
mov
add
add
add
sub
pop
call
push
push
push
rol
dec
shl
sub
push
or
inc
add
shr
lea
sub
sub
dec
pop
xor
inc
dec
pop
push
push
lea
push
push
push
call
loopne
xchg
loop
push
int
add
add
mov
into
loopne
add
scas
add
in
add
xlat
shrl
add
add
in
xlat
add
pusha
add
jo
in
in
lcall
push
lea
push
lea
push
push
push
push
push
push
call
add
pop
add
add
add
add
add
hlt
pop
pop
xchg
out
arpl
add
add
pushf
add
mov
andb
add
xchg
add
out
jae
add
test
in
rolb
mov
adcb
icebp
nop
int
sub
pop
push
call
push
push
call
mov
pushf
nop
fildll
push
flds
push
fwait
mov
add
jns
add
aam
jecxz
popa
fdivp
add
add
imul
lcall
clc
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
shlb
incb
je
int3
xchg
lahf
cwtl
cmpsl
mov
add
cmpsb
std
lods
call
fstl
aad
cmp
roll
jbe
icebp
movb
icebp
jmp
aad
add
mov
add
push
push
push
push
push
push
call
mov
jmp
call
mov
add
addl
lcall
push
test
cltd
nop
mov
push
nop
hlt
fnsave
add
icebp
jne
mov
hlt
aad
test
mov
jno
mov
add
pop
add
add
lcall
pop
hlt
push
push
lea
push
lea
push
call
jbe
add
iret
push
test
jae
lret
fidivl
add
add
bnd
mov
add
roll
out
xchg
xchg
add
mov
sub
pop
add
push
lea
push
lea
push
lea
push
push
push
call
add
lock
add
add
fwait
add
iret
mov
mov
lock
enter
jns
jle
mov
jl
xchg
insb
xchg
sahf
mov
arpl
jp
sub
pop
add
push
push
call
pushf
add
incb
mov
add
add
xchg
cld
roll
add
int
loopne
add
lret
add
add
pop
stos
add
faddl
enter
add
add
js
repnz
xchg
add
pusha
add
jmp
add
scas
jp
cld
pop
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
lea
add
rcrl
lret
mov
arpl
add
pop
add
lea
nop
mov
add
arpl
cmc
add
mov
into
mov
loop
clc
movsl
add
add
add
int
lcall
call
mov
add
add
add
in
fcompl
xor
push
push
push
lea
push
push
call
add
scas
fadds
data16
mov
testl
add
add
fldl
call
out
mov
add
add
je
add
mov
cwtl
mov
ljmp
cld
out
int
add
xchg
bound
add
xchg
fcmovnu
cwtl
sub
pop
add
push
push
push
lea
push
lea
push
call
add
add
in
add
imul
add
mov
out
cld
add
add
in
lods
arpl
add
jnp
jns
mov
add
clc
arpl
lcall
push
lea
push
push
push
push
push
lea
push
lea
push
call
lods
repnz
rcll
add
push
fldl
add
add
add
xchg
outsl
jle
push
icebp
add
stos
lret
mov
add
add
imul
add
roll
lcall
lret
fiadds
ja
push
add
cwtl
add
add
lcall
inc
or
push
push
push
push
call
popf
addb
mov
addl
testl
cmc
nop
test
mov
mov
add
add
imul
xchg
addb
mov
jo
cli
mov
pop
gs
scas
mov
xchg
add
icebp
shlb
push
push
pop
in
in
hlt
pop
add
push
push
push
push
push
push
push
call
call
mov
fcmovnu
addr16
mov
add
add
in
insb
sahf
flds
movsb
add
add
jp
stc
mov
add
test
push
aam
jmp
fildl
scas
shrb
pop
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
add
ret
add
mov
mov
adcl
push
add
jb
fiadds
mov
gs
add
add
jno
xchg
mov
xchg
add
add
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
xchg
insb
pop
pop
mov
int3
ficompl
push
add
pushf
fistps
mov
push
xchg
mov
xchg
add
mov
andl
fstl
testl
add
add
xchg
push
mov
flds
std
outsl
add
adcl
add
sti
sub
pop
xor
push
push
push
push
push
push
lea
push
push
call
push
test
movl
bnd
roll
aam
mov
imul
add
lret
add
cltd
mov
out
add
out
pop
mov
loop
add
add
addb
loopne
add
push
push
push
push
call
add
add
mov
stos
add
fdivr
cltd
mov
int
xor
add
jmp
jge
testb
lods
scas
out
add
test
mov
mov
add
mov
add
popf
mov
jo
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
jbe
outsl
iret
add
add
stos
add
pop
pop
add
mov
add
data16
add
add
cwtl
testl
into
leave
pop
pop
add
fisubs
sub
pop
mov
xor
push
lea
push
call
in
xlat
xchg
add
xlat
lods
ret
mov
pop
add
xchg
add
fcoml
nop
mov
jle
add
je
mov
fstpl
negb
add
sub
pop
sub
push
lea
push
push
lea
push
push
push
call
out
jno
adcl
fsubs
addb
add
add
add
xchg
add
je
andb
insb
scas
xorl
call
in
dec
sbb
push
push
push
push
push
push
lea
push
push
call
leave
gs
mov
in
addb
in
add
add
add
shrl
add
add
add
fiadds
add
xchg
mov
test
add
jns
pop
add
push
arpl
mov
loope
mov
add
fcomps
movsb
push
lea
push
push
push
lea
push
push
call
call
mov
movsl
addb
int3
nop
cld
add
add
jno
add
add
pop
cmpsb
add
push
add
mov
cld
aam
mov
lock
lods
jo
jl
add
lret
add
repnz
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
shr
hlt
add
add
push
shr
add
add
imul
add
jle
add
lods
push
mov
add
xlat
pop
pop
mov
add
movsl
add
rolb
in
fdivr
lcall
pop
hlt
add
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
ja
push
add
incb
cld
add
add
add
js
pop
push
stc
add
lods
shrl
in
bound
movsl
add
in
in
pop
arpl
popl
jno
add
lods
cmc
add
add
stos
testl
add
lcall
ret
add
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
lds
ret
push
popl
in
icebp
test
add
push
jl
mov
xchg
add
add
insb
mov
add
shlb
ja
sub
pop
add
push
lea
push
push
push
push
push
call
add
lock
push
int
add
add
add
testl
add
sar
add
xchg
jl
jnp
out
add
in
fiadds
pop
add
push
add
add
add
add
popa
add
add
add
add
pop
cmc
mov
add
lahf
movsl
mov
add
in
call
mov
push
push
lea
push
lea
push
push
lea
push
call
js
mov
roll
movb
add
rolb
add
pop
test
lret
add
add
push
mov
imul
lds
add
faddl
scas
cwtl
testb
leave
add
add
xor
push
push
push
lea
push
call
add
lret
test
xchg
add
mov
add
mov
lds
add
hlt
hlt
add
lods
mov
pop
push
mov
add
add
fsubr
add
movb
mov
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
pop
add
add
add
add
popa
sar
add
add
push
pop
jge
add
add
flds
mov
add
out
mov
pop
adc
xchg
mov
in
xchg
jge
fsubrp
push
cli
add
mov
sub
pop
mov
xor
push
push
push
lea
push
call
stos
add
stc
add
mov
add
jb
add
in
fistps
add
add
add
in
ficoml
in
arpl
shl
out
mov
xchg
fwait
add
lret
add
roll
lods
int
mov
out
in
lock
lcall
dec
sub
pop
jae
push
push
lea
push
call
addl
add
movsb
push
add
loope
add
add
mov
xchg
add
mov
insb
push
add
add
pop
jp
xchg
push
mov
rcrb
hlt
mov
scas
mov
in
hlt
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
lods
add
jmp
add
popf
clc
jb
popf
add
pop
rcrl
movsb
fldl
fcompl
jle
jno
shll
add
scas
add
imul
rolb
pop
add
movsb
ljmp
scas
add
pop
cli
nop
add
mov
add
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
pop
lds
add
add
ljmp
int3
add
test
mov
add
xchg
add
add
push
mov
add
add
push
sub
pop
add
push
push
call
xchg
add
mov
add
fimull
xchg
pusha
mov
outsl
mov
push
add
add
pop
add
add
add
fiaddl
pop
add
pusha
push
xlat
lods
stos
mov
lods
test
adcl
fs
idiv
add
add
sti
mov
xchg
add
pusha
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
filds
xchg
add
outsl
mov
add
add
add
add
cltd
mov
int
sub
pop
mov
push
push
push
and
add
inc
sub
lea
sub
inc
pop
shr
add
pop
push
push
push
push
push
call
imulb
mov
xor
int
pop
test
decb
push
cmpsl
rolb
ljmp
add
xchg
add
add
add
add
mov
add
add
movsl
mov
ja
out
jb
lea
pop
pushl
call
push
lea
push
lea
push
push
push
call
add
add
movb
jb
test
mov
push
add
movsl
vaddsubpd
scas
ret
imul
pop
add
add
out
insb
movsb
add
scas
addr16
les
add
pushf
std
in
mov
add
sub
pop
push
push
push
add
sub
push
and
add
not
xor
sub
shr
lea
lea
pop
sub
pop
push
push
push
push
call
xchg
jp
push
loope
add
mov
add
xchg
add
add
add
int3
cli
arpl
addb
add
mov
pop
fisubl
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
testl
push
out
flds
xchg
mov
pop
std
stos
add
into
mov
into
add
add
mov
jle
add
add
test
fdivs
ret
jb
push
insb
ja
add
mov
push
mov
in
call
push
not
pop
mov
push
push
push
call
aad
xorl
pop
pop
jo
cmpb
jp
cli
add
add
add
add
pop
lret
test
push
add
add
ja
add
add
mov
push
add
lret
jbe
add
cmc
icebp
add
sub
pop
push
push
pop
mov
push
shr
sub
pop
add
push
ror
add
ror
shr
pop
add
add
push
push
call
pushf
xchg
fs
jbe
add
jge
data16
fxch
add
add
pop
imul
add
add
add
add
add
jne
add
mov
push
push
in
clc
lcall
jae
xor
push
push
lea
push
push
push
lea
push
push
lea
push
call
les
fstpt
int3
add
filds
fwait
gs
push
out
xchg
add
sti
jle
add
fwait
in
add
mov
add
arpl
add
jne
push
lea
push
push
push
push
push
call
pop
adc
add
add
add
jmp
out
fwait
add
nop
pop
data16
add
ret
add
add
pop
movsl
jne
mov
scas
jns
divb
add
fisubl
add
pusha
imul
lahf
add
pop
add
add
mov
call
push
mov
xor
push
sub
inc
pop
add
pop
push
push
push
lea
push
push
call
add
lods
mov
jb
add
push
imul
push
nop
add
xchg
add
add
js
add
in
rolb
add
xchg
imul
add
mov
lds
jge
aam
add
enter
testl
add
in
lcall
dec
and
push
push
not
shl
rol
shl
pop
rep
push
xor
rol
sub
xor
pop
mov
push
push
push
push
push
push
call
call
add
xchg
add
add
add
lret
int3
test
stos
pop
lret
add
mov
add
pop
xchg
scas
add
mov
add
push
nop
cmpsb
jae
add
in
cld
mov
add
arpl
jl
add
xchg
add
outsl
jecxz
in
in
lcall
or
push
push
push
push
push
push
lea
push
push
lea
push
call
add
nop
in
jle
add
std
fcoml
lahf
add
add
jp
add
faddl
ret
push
into
add
mov
iret
add
add
mov
out
fiaddl
insb
mov
lahf
out
ret
sub
pop
add
push
push
lea
push
lea
push
push
push
call
jae
add
jge
add
add
pop
add
push
add
int3
cwtl
jo
fiaddl
add
add
push
in
testb
sub
pop
or
je
push
push
call
lods
add
add
add
lcall
roll
mov
add
lahf
pushf
jp
add
pop
mov
mov
add
add
int3
add
add
jnp
iret
add
add
in
clc
lcall
xor
push
push
lea
pop
mov
xor
push
push
push
push
push
call
add
cwtl
mov
add
sahf
imul
push
add
addl
add
jle
loopne
mov
mov
add
jns
fwait
add
repnz
push
push
push
lea
push
push
push
push
call
xchg
add
fldpi
jle
lock
add
repnz
add
add
loop
lods
push
mov
decb
add
add
add
add
pop
std
add
lcall
jne
push
push
push
push
lea
push
push
push
call
add
mov
jo
lock
push
add
mov
add
int3
add
mov
add
cmpsl
std
out
sar
insb
mov
scas
mov
movsb
add
add
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
add
pop
mov
aad
add
int3
add
xor
hlt
pop
stc
add
add
lods
add
add
aad
pop
scas
push
loope
add
add
mov
in
leave
movsb
cld
nop
mov
xchg
rorl
movl
pop
xor
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
popa
hlt
add
add
jns
pushf
mov
xchg
add
lahf
add
xchg
sahf
xchg
rolb
mov
add
add
add
fldl
sub
pop
add
push
add
ror
pop
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
jns
add
mov
jge
add
add
mov
cmc
popa
pushf
ficomps
std
add
xchg
add
push
lock
add
movsb
push
shl
pop
mov
xor
push
lea
pop
or
je
push
push
push
push
lea
push
push
call
faddl
add
pop
mov
in
sti
cli
rolb
lea
test
js
push
filds
add
test
mov
int
add
imul
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
stos
add
ficompl
iret
leave
jp
mov
add
std
xlat
push
mov
jae
ja
pop
push
add
mov
add
into
movsl
cli
xchg
add
add
shll
add
add
mov
add
xchg
mov
add
add
fwait
enter
sti
add
loop
popf
fstps
push
loop
scas
insb
clc
test
add
in
loopne
lcall
sub
movb
add
push
lea
push
push
push
push
push
lea
push
call
add
mov
mov
add
add
mov
mov
cwtl
fnstcw
in
push
xchg
test
stos
pop
add
arpl
xchg
fwait
sub
pop
rep
push
inc
pop
pop
push
push
not
dec
sub
sub
push
or
inc
add
inc
sub
xor
sub
inc
pop
xor
shr
dec
pop
push
push
push
push
lea
push
push
push
push
call
loop
add
xchg
add
aam
jp
fbld
jno
add
lea
lods
lret
mov
sub
pop
pop
push
add
dec
not
pop
mov
push
push
push
call
add
add
shrl
jo
outsl
std
mov
add
je
add
fdivrs
outsl
mov
mov
add
add
in
pop
popl
aam
add
mov
mov
insb
add
xchg
incb
add
lcall
insl
hlt
mov
push
push
push
call
add
xchg
add
pusha
test
faddl
add
pop
arpl
aad
js
pusha
add
jae
cld
push
pusha
arpl
mov
in
jl
mov
push
fsts
leave
add
add
mov
les
mov
add
testl
mov
lcall
loopne
ror
rol
ror
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
push
ljmp
pop
fadds
add
addl
mov
xchg
add
xchg
add
jbe
mov
mov
mov
mov
mov
outsl
scas
add
lcall
add
in
push
push
push
push
push
push
push
lea
push
call
xchg
xchg
stc
add
test
stc
loope
add
add
mov
mov
in
mov
jecxz
mov
cltd
arpl
cmpsb
add
mov
clc
mov
call
lcall
cld
push
push
call
add
add
fs
add
imul
in
js
mov
add
mov
popa
add
mov
js
jae
add
add
add
fisubl
mov
jmp
add
add
add
add
lcall
push
lea
push
push
call
add
add
incb
jle
test
in
add
bound
sti
rolb
in
add
mov
mov
cmpsl
add
push
xchg
mov
ja
lock
in
hlt
lcall
push
push
add
pop
push
mov
push
dec
pop
pop
push
push
lea
push
push
call
cwtl
popf
loop
addl
out
les
roll
lahf
icebp
ret
cwtl
add
mov
mov
add
add
les
add
lahf
add
lahf
leave
fwait
add
sti
add
lahf
in
jecxz
mov
mov
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
std
add
cmc
frstor
add
add
add
ficomps
loope
xchg
scas
imul
pop
add
add
add
add
ficomps
mov
add
add
add
mov
cmc
jnp
add
mov
lcall
push
push
push
push
lea
push
lea
push
call
lret
add
mov
sahf
orl
sti
scas
jle
out
push
je
test
test
push
add
cli
movsb
jbe
add
fsubrp
push
xchg
mov
test
call
in
mov
mov
add
mov
add
lret
sub
pop
pop
leave
push
push
call
scas
add
add
add
ja
in
mov
xchg
add
add
xchg
add
test
add
add
add
in
add
add
mov
mov
add
add
mov
fwait
mov
in
clc
pop
ret
push
push
push
push
call
add
in
add
insb
hlt
add
shlb
add
add
insb
add
add
clc
mov
fdivs
ret
sub
pop
push
push
push
lea
push
push
call
add
mov
jno
add
std
xchg
or
pop
add
add
js
test
mov
xchg
pop
xchg
jno
add
scas
xchg
jbe
pop
add
mov
sti
add
push
mov
lock
mov
add
push
lea
add
ror
inc
pop
push
push
push
lea
push
lea
push
push
call
push
add
fstpl
lea
add
ljmp
add
add
add
add
fildl
pop
rorl
mov
add
add
out
add
xchg
add
decb
add
mov
add
lahf
rolb
data16
mov
imul
push
push
shr
sub
pop
push
movl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
xchg
fs
shlb
incb
cwtl
test
ja
add
mov
jno
mov
jns
push
add
add
add
cli
insb
jge
add
sti
addb
rorb
in
fcomps
inc
clc
call
testb
ror
pop
test
je
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
push
jmp
add
je
shll
push
add
pop
add
les
lret
arpl
add
les
cmpsl
add
push
xlat
roll
add
jo
loopne
fadds
in
loopne
lcall
inc
or
mov
repnz
imul
pop
push
push
lea
push
push
call
loopne
sahf
add
add
pop
mov
outsl
jp
gs
loopne
xchg
xchg
aam
add
mov
mov
add
repnz
push
sub
pop
pop
pop
push
lea
push
call
push
add
faddl
xchg
xchg
jbe
add
add
mov
add
add
cld
push
add
bnd
lret
add
add
fsubl
loop
add
int3
subl
clc
lcall
push
lea
push
lea
push
call
add
loope
jno
mov
push
movsb
jns
push
add
fdivrs
jnp
jl
add
push
mov
add
add
mov
add
push
push
add
add
hlt
pop
pop
leave
push
add
lea
sub
pop
ret
push
push
push
push
call
add
lret
jbe
stos
je
add
mov
mov
mov
data16
pusha
aam
push
in
lods
cmpsb
stos
mov
add
jnp
sub
pop
mov
push
not
pop
add
push
sub
dec
pop
push
push
pop
push
push
push
shr
pop
push
push
xor
ror
inc
pop
testl
addl
push
xor
pop
push
push
push
push
lea
push
call
add
fs
cwtl
mov
mov
jmp
mov
add
add
jecxz
xchg
sub
pop
call
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
rorl
roll
fiadds
out
add
cwtl
add
imul
add
fwait
add
out
add
popa
mov
mov
xchg
add
sahf
roll
into
add
icebp
xchg
ret
add
add
add
sub
pop
mov
push
push
push
push
call
push
pushf
in
add
push
test
add
mov
xchg
mov
add
add
in
lock
pushl
push
shr
xor
inc
not
pop
push
push
push
push
call
add
mov
fst
mov
rcll
nop
jno
mov
addl
in
add
mov
add
loop
test
jne
imul
icebp
mov
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
lea
pop
rcr
add
roll
add
jmp
jae
add
cwtl
imul
stos
out
je
jmp
in
add
jnp
js
add
jge
mov
add
add
add
aad
mov
in
in
lcall
jns
call
iret
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
call
add
jmp
add
add
ja
pop
add
add
out
sti
jbe
mov
mov
cli
push
fiaddl
pop
add
sti
add
iret
add
add
roll
cltd
add
loope
xlat
add
add
mov
add
add
push
add
pop
add
add
call
xchg
xchg
ljmp
push
call
add
bound
pop
out
add
add
add
add
out
test
pop
add
popf
add
sti
clc
mov
mov
andl
mov
in
fwait
lahf
nop
jno
mov
mov
cmpsl
mov
lahf
cld
xlat
add
iret
add
aad
add
addb
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
add
add
add
out
add
aad
add
mov
ret
add
add
mov
frstor
mov
add
lcall
add
add
pop
push
insb
rolb
fsubr
lea
add
sti
add
out
push
add
add
in
fdivr
lcall
push
push
lea
push
lea
push
push
lea
push
call
add
add
xchg
hlt
add
xlat
add
mov
add
add
add
jmp
lcall
add
add
add
nop
add
fistpl
add
add
add
xchg
mov
enter
add
mov
sub
pop
leave
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
pop
push
add
pushf
push
pop
mov
add
pop
data16
mov
xchg
mov
sbbb
add
add
mov
add
lock
lock
sub
pop
ret
push
lea
push
push
push
call
add
into
fxch
xchg
jp
scas
rolb
cmpsb
filds
add
pop
add
hlt
int3
add
mov
pop
jp
je
shlb
shl
add
add
jo
loope
add
push
xchg
leave
scas
add
sub
pop
push
mov
push
push
push
call
enter
pop
in
addr16
pushf
add
mov
imul
fiadds
add
add
xchg
jno
jbe
add
mov
popa
add
add
rolb
arpl
lcall
cld
push
xor
pop
push
push
push
sub
inc
shl
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
fwait
add
add
aad
ja
movb
add
aam
add
fiadds
lret
mov
add
into
add
add
add
pusha
add
cli
sub
pop
push
push
lea
push
push
lea
push
push
push
call
add
movb
xchg
pop
mov
add
out
pop
xchg
pushf
cmpsl
jno
add
jae
xchg
add
enter
testl
add
arpl
add
jmp
lea
loope
fildl
mov
fistps
sub
pop
movl
push
push
push
lea
push
push
push
push
push
push
call
mov
add
mov
add
out
aam
add
add
add
movsb
test
add
aad
mov
out
push
mov
pop
add
pusha
aam
add
add
hlt
jp
push
push
faddl
popf
sub
pop
call
push
not
sub
pop
push
push
sub
pop
call
subl
push
dec
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
lea
push
push
call
rcrb
jmp
add
add
cmc
push
add
push
mov
call
int
cmc
add
not
add
arpl
sti
js
cmc
add
add
testl
add
xchg
add
js
add
add
add
mov
add
push
int
add
add
leave
lcall
lcall
push
pop
pop
pop
push
add
sub
pop
pop
push
shl
lea
shr
pop
leave
ret
push
push
lea
push
push
call
push
add
movsl
xchg
add
cmpsb
cwtl
add
add
sti
lods
cmpsb
mov
cmc
add
mov
push
add
add
ror
xchg
in
mov
lcall
push
not
add
pop
mov
add
push
not
xor
lea
lea
pop
push
push
push
push
push
push
push
call
add
add
scas
add
add
jle
jge
mov
add
add
mov
ljmp
add
test
call
dec
dec
push
push
push
push
push
lea
push
call
imul
mov
jge
add
add
add
add
add
add
add
add
lcall
push
rol
lea
pop
push
push
not
ror
inc
pop
mov
lea
push
ror
xor
add
xor
pop
sub
push
push
push
lea
push
push
push
lea
push
push
call
js
sti
add
add
add
add
add
mov
imul
xchg
add
sahf
add
iret
push
mov
in
loopne
lcall
add
push
push
lea
push
call
push
orb
add
add
add
cli
xchg
imul
call
add
add
test
cmpsl
mov
pop
test
mov
sub
pop
shr
push
lea
push
lea
push
lea
push
push
call
out
add
jp
imul
push
int3
add
add
add
incb
fdivrp
add
lahf
add
add
add
xchg
rcll
add
jo
xlat
add
add
push
pop
xchg
lea
jne
cmpsl
js
out
lret
in
in
lcall
inc
or
push
push
push
call
lock
xchg
pop
icebp
into
add
add
push
call
mov
pusha
lea
std
add
rolb
pop
loope
xchg
rcl
jb
lods
stc
add
add
fwait
add
addr16
addl
add
inc
cld
mov
push
not
ror
pop
add
add
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
add
js
lods
pop
addb
lret
mov
pop
lds
stos
add
mov
loop
cltd
cli
fldl
add
add
icebp
sub
pop
mov
mov
push
shl
pop
cmp
jne
push
push
call
shlb
add
add
push
add
add
jo
jns
mov
add
jecxz
outsl
mov
mov
sahf
add
xchg
add
movsb
add
out
out
jmp
add
cwtl
fadds
add
jne
push
shl
pop
mov
push
lea
push
push
push
push
lea
push
push
push
call
add
fs
rcl
shl
test
sarl
xchg
push
in
lods
mov
xchg
fwait
cmp
add
call
add
add
fadds
add
add
add
mov
shr
pop
mov
push
sub
xor
ror
pop
mov
push
add
xor
shl
pop
sub
jne
mov
push
push
push
push
push
call
pop
pop
add
movsb
cli
lret
add
fldl
xchg
add
fistpl
add
add
into
pop
add
add
mov
xchg
jmp
add
add
in
in
pop
movl
push
rol
not
pop
jmp
push
inc
sub
lea
pop
mov
push
shr
dec
pop
mov
push
add
pop
cmp
jne
push
ror
lea
ror
sub
pop
mov
movl
push
push
push
push
lea
push
push
push
push
call
add
add
mov
add
add
add
mov
mov
ret
add
mov
add
loopne
lods
lods
cld
pop
add
andl
add
add
mov
pop
add
add
mov
in
iret
leave
loope
add
xlat
jecxz
push
je
add
inc
or
cmc
shl
xor
pop
mov
push
push
push
push
push
call
add
leave
rcrl
mov
pop
repnz
lret
stc
loop
add
in
add
data16
out
add
add
mov
add
push
mov
push
rolb
jp
sub
pop
cmpw
jne
push
not
add
sub
inc
pop
mov
push
rol
pop
movl
push
push
push
push
call
add
pushf
jns
add
jo
xchg
pop
je
mov
mov
add
shrb
push
add
add
stc
add
icebp
jp
add
add
xchg
add
mov
add
jecxz
in
lock
lcall
push
push
lea
push
push
push
push
push
push
call
call
test
mov
in
loop
add
bnd
jo
add
lcall
add
add
stc
jle
mov
push
push
lods
add
pop
add
jbe
add
add
mov
add
lea
add
add
mov
bound
loopne
pushl
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsb
add
xchg
lret
add
insb
jge
add
add
add
add
add
add
sar
add
add
xchg
imul
pop
add
iret
lahf
js
add
add
cli
add
scas
sar
add
add
int3
lret
sti
loope
in
fdivr
lcall
inc
or
not
dec
pop
mov
push
pop
mov
push
push
add
add
not
xor
push
and
add
sub
sub
pop
ror
xor
shr
pop
push
push
lea
push
lea
push
push
push
push
push
call
sahf
leave
leave
clc
add
fcoml
add
push
pop
mov
add
add
nop
incb
add
into
shll
add
lahf
add
mov
cld
pusha
lret
shr
add
lcall
push
push
push
lea
push
push
push
push
push
call
shll
mov
testb
mov
fwait
into
sar
add
add
pop
lret
jnp
jns
lcall
sub
pop
call
push
xor
pop
cmpl
je
push
push
not
sub
shl
push
sub
add
ror
ror
lea
shl
sub
dec
add
pop
sub
rol
add
not
pop
push
push
push
lea
push
push
push
push
call
add
mov
add
lods
aad
add
mov
add
test
add
les
rcll
mov
add
in
in
push
call
push
xor
xor
shr
pop
cmpl
je
push
push
shr
sub
inc
push
or
inc
add
sub
xor
inc
xor
sub
ror
dec
pop
add
inc
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
jge
test
rolb
int
in
js
fucom
call
add
sahf
jbe
add
fnsave
out
add
pop
jae
add
add
add
add
fstps
push
movl
lock
add
cmc
sub
pop
cmpl
je
push
push
sub
rol
sub
push
or
inc
add
rol
shr
dec
shr
sub
pop
add
not
pop
push
push
push
push
push
push
push
push
call
add
add
lahf
pop
mov
fcompl
add
sti
out
movsb
pushf
hlt
fdivl
add
add
pushf
enter
add
xchg
add
fdivrp
mov
xchg
add
stos
sub
pop
push
push
push
push
push
call
add
ror
movl
mov
cmc
addb
add
jb
scas
mov
pop
add
lret
movsl
aad
add
mov
stc
aad
add
lea
jne
add
popf
incb
int3
leave
aam
fisubrl
repnz
add
pop
call
push
sub
xor
pop
cmpl
je
push
push
shr
push
sub
add
add
lea
not
sub
lea
pop
inc
shl
sub
pop
push
push
call
mov
jne
je
fimull
mov
cmpsb
iret
movsl
addl
cmpsl
sti
iret
xchg
cwtl
mov
add
pop
ret
sarb
xchg
je
cltd
add
roll
into
add
roll
add
fcompp
add
lret
add
add
add
pop
mov
add
lcall
push
shr
pop
call
cmpl
je
push
push
lea
push
or
inc
add
xor
rol
sub
sub
dec
xor
pop
not
inc
inc
pop
push
lea
push
push
push
push
push
push
push
push
push
call
pushf
add
fildl
add
add
push
clc
mov
add
add
add
add
add
add
outsl
out
add
gs
test
imul
mov
sarl
fadds
add
subl
push
call
push
inc
add
dec
pop
cmpl
je
push
push
add
xor
rol
push
or
inc
add
shr
sub
sub
sub
pop
shr
shr
ror
pop
push
xor
shr
pop
push
push
add
xor
pop
call
push
inc
rol
pop
cmpl
je
push
push
add
not
push
sub
add
add
rol
shr
shr
sub
pop
shl
lea
pop
push
push
push
push
lea
push
push
push
push
call
lea
shlb
sti
lods
add
add
mov
pop
add
mov
jge
xchg
add
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
fdivrs
pop
cltd
add
add
add
stos
in
add
scas
testl
pop
jnp
add
rolb
jle
push
add
in
add
pop
imul
mulb
add
jmp
add
add
negl
popf
add
ret
scas
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
push
call
cmpsb
out
mov
xor
leave
fldenv
add
mov
mov
filds
insb
shrl
add
iret
xchg
pop
mov
clc
fdivs
add
push
add
insb
sbb
add
insb
add
in
jge
add
andb
mul
push
sub
pop
cmpl
je
push
push
dec
push
or
inc
add
ror
sub
ror
xor
lea
pop
dec
ror
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
insb
sar
mov
add
hlt
add
icebp
pop
add
add
lea
mov
add
add
mov
add
sar
mov
testb
mov
cmc
xchg
add
sub
pop
push
call
push
xor
dec
ror
sub
pop
cmpl
je
push
push
sub
push
or
not
add
ror
shl
add
lea
sub
add
pop
add
pop
push
lea
push
push
call
out
add
pop
jle
add
ret
push
fildl
js
shlb
add
gs
mov
pop
enter
out
jne
add
notb
add
lea
stos
movb
aam
shr
add
incb
out
xchg
pop
movsl
lods
sub
pop
push
call
push
push
push
push
lea
push
push
call
cltd
je
test
cmpsb
repnz
add
lods
ljmp
jbe
add
add
les
stos
hlt
add
sub
pop
cmpl
je
push
push
dec
ror
push
sub
add
lea
sub
shl
pop
add
xor
pop
push
add
sub
ror
pop
push
push
lea
xor
sub
pop
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
int
clc
mov
lcall
push
pop
fldl
in
xchg
add
jns
jns
add
mov
cltd
add
add
add
mov
jmp
add
add
rcll
fdivr
lcall
js
xor
ret
test
add
cli
ja
sub
push
or
inc
add
sub
pop
lea
sub
inc
dec
pop
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
xchg
mull
jecxz
add
std
rorb
pusha
rcrb
add
aad
add
add
mov
mov
add
out
mov
in
fcompl
push
shl
pop
call
push
dec
pop
cmpl
je
push
push
dec
push
sub
add
add
sub
add
ror
add
xor
pop
sub
sub
dec
pop
push
dec
dec
not
pop
push
call
push
lea
lea
pop
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
call
je
add
mov
add
cwtl
arpl
movl
incb
rolb
pop
add
xchg
push
add
roll
call
aam
stos
add
add
add
fcompl
inc
adc
add
add
add
aas
xor
sub
xchg
mov
lods
addb
push
call
roll
clc
stc
add
stos
orb
stos
xchg
add
cwtl
fcoml
add
cmpsl
add
subb
aad
add
pop
scas
push
pop
add
sti
test
jnp
cwtl
sub
pop
jmp
push
push
lea
push
lea
push
push
push
push
call
leave
add
mov
mov
cmc
lods
loop
push
jns
mov
add
add
mov
mov
add
imul
out
add
nop
arpl
mov
add
mov
stc
fiaddl
add
enter
push
add
icebp
loop
jge
add
add
add
push
xchg
rolb
jo
add
nop
add
loope
mov
sub
pop
xor
pop
push
sub
shr
pop
pop
pop
push
push
push
push
push
lea
push
call
idiv
stos
xchg
lock
add
in
add
popa
loope
mov
loop
add
mov
int
js
add
xlat
insb
imul
scas
sub
pop
pop
leave
push
add
shl
pop
ret
push
lea
lea
xor
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
fadds
mov
lcall
add
pusha
repnz
jmp
jecxz
xchg
repnz
add
add
lea
mov
pop
mov
mov
int3
xchg
add
add
test
add
scas
pop
add
popa
scas
add
add
cmc
cld
add
out
mov
add
shrl
lret
fdivr
lcall
in
add
push
not
pop
cmpl
jne
push
push
shl
xor
inc
push
and
add
sub
sub
shl
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
push
test
add
jns
cmpsb
add
je
imul
add
add
add
pop
out
sub
pop
pushl
call
push
lea
push
lea
push
call
fistl
nop
add
out
arpl
mov
scas
hlt
add
mov
add
mov
add
mov
push
push
jge
roll
call
add
xchg
add
popf
cmpsb
cmc
repnz
jns
xchg
mov
add
xchg
add
add
push
sub
pop
push
call
push
sub
pop
jmp
push
lea
xor
sub
pop
cmpl
je
cmpl
jne
push
push
push
push
lea
push
push
call
add
add
push
add
sti
loopne
jecxz
jecxz
add
mov
bound
add
lcall
pop
cltd
test
add
jne
fstpl
pop
icebp
gs
add
call
leave
push
xor
shr
lea
pop
add
push
add
ror
sub
pop
pop
pop
push
push
call
add
out
add
icebp
pop
clc
in
add
icebp
add
push
jp
mov
push
data16
add
arpl
jecxz
test
add
add
test
xchg
add
add
add
jo
in
clc
lcall
push
ror
add
pop
pop
push
lea
push
push
push
call
mov
add
out
jmp
add
add
add
add
sub
insb
add
add
sub
pop
leave
add
push
push
push
push
call
shrl
cli
mov
add
cwtl
xlat
roll
add
sahf
imul
add
lcall
jmp
push
sub
inc
pop
cmpl
jne
push
push
inc
push
and
add
rol
not
sub
sub
sub
pop
sub
ror
inc
pop
push
rol
inc
pop
pushl
push
sub
pop
call
push
push
lea
pop
call
push
lea
push
push
push
push
push
call
mov
push
arpl
jo
jb
jb
fnstcw
insb
add
add
testl
add
loop
mov
mov
mov
enterw
mov
sub
pop
jmp
push
ror
pop
cmpl
jne
push
not
pop
mov
mov
push
xor
shl
pop
jmp
push
dec
add
pop
push
push
push
add
push
or
inc
add
xor
inc
add
sub
add
shr
pop
rol
add
add
pop
push
dec
rol
not
pop
pushl
call
push
add
inc
xor
pop
call
push
push
dec
not
lea
shl
push
push
pop
add
shl
lea
inc
sub
shr
dec
pop
inc
xor
not
pop
push
push
push
call
hlt
add
icebp
div
add
add
fbld
stc
out
clc
add
xchg
mov
add
add
cwtl
push
test
mov
iret
lret
loope
mov
add
add
add
add
add
xchg
sahf
add
mov
sbbb
loop
cmpsb
mov
add
add
mov
pop
pushl
push
rol
not
pop
call
push
push
push
push
push
push
lea
push
push
call
add
scas
add
jae
add
test
cli
imul
imul
add
jmp
add
add
add
jle
loop
sti
add
shrb
addl
scas
xchg
mov
in
loopne
lcall
shrb
cvtpi2ps
not
shr
add
push
xor
add
add
sub
inc
add
pop
add
pop
push
shl
sub
ror
pop
pushl
call
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
arpl
add
fiadds
jl
out
add
push
add
add
fmull
aad
into
out
scas
pop
jbe
mov
add
add
pushf
push
repnz
loope
cli
out
add
mov
add
push
jl
addr16
test
add
movsl
mov
out
loop
out
add
lcall
shrb
xchg
push
dec
push
shl
add
sub
push
push
pop
add
shr
dec
rol
sub
lea
ror
dec
shr
pop
ror
pop
push
inc
shl
pop
pushl
call
push
shr
ror
ror
rol
pop
call
push
push
shr
push
or
inc
add
sub
shl
ror
sub
dec
ror
pop
pop
push
add
xor
sub
not
pop
pushl
push
push
push
push
push
call
jb
jp
add
pop
add
add
bound
add
cld
xlat
mov
jbe
add
pop
pop
add
add
loopne
xchg
roll
add
add
xchg
stos
push
shll
add
lcall
xchg
add
out
add
mov
add
sub
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
testl
addl
add
mov
mov
mov
mov
add
jge
mov
push
roll
add
call
jns
insb
add
pop
add
add
scas
imul
in
fdivr
lcall
shrb
test
adc
es
or
inc
add
add
add
rol
sub
pop
sub
not
pop
push
not
pop
pushl
call
push
shl
pop
call
push
push
sub
shl
push
push
pop
add
add
xor
not
sub
sub
add
dec
add
pop
inc
xor
inc
sub
pop
push
lea
pop
pushl
push
xor
sub
pop
call
call
push
push
sub
add
push
or
inc
add
add
inc
sub
sub
ror
pop
shl
pop
push
push
lea
push
push
call
scas
add
mov
add
add
js
xchg
out
test
aam
push
out
shl
add
movsl
lock
stos
mov
fists
add
add
mov
add
add
add
out
add
jns
stos
add
add
add
data16
hlt
insb
fwait
divl
sti
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
into
sar
add
stc
aad
je
add
add
add
in
add
mov
mov
add
ljmp
call
push
push
push
lea
push
lea
push
push
push
call
out
add
xchg
add
add
add
add
movsl
add
shl
fsts
jo
sahf
add
lahf
lea
add
in
add
add
add
add
mov
add
jge
add
add
andl
roll
movsb
add
sub
pop
call
push
push
sub
sub
rol
shl
push
push
pop
add
lea
shl
shl
add
sub
ror
pop
shl
not
pop
push
lea
push
push
push
push
lea
push
push
push
call
jnp
fmuls
add
add
mov
testb
mov
add
add
testb
add
imul
loopne
add
pop
int3
jecxz
fiadds
jne
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
add
add
add
mov
js
add
pop
iret
add
jnp
add
add
cltd
jno
testb
leave
fyl2x
mov
orl
add
add
add
add
fldenv
mov
add
cld
sub
pop
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
sahf
jns
in
push
jmp
add
add
jo
out
add
ret
movsl
stos
add
mov
jecxz
add
add
ret
filds
add
fcomps
shrb
xor
mov
add
ror
push
and
add
rol
sub
dec
rol
shr
inc
pop
inc
pop
push
push
push
push
push
call
add
sti
add
mov
add
lahf
jle
mov
sar
sahf
mulb
shl
outsl
cwtl
jno
lds
icebp
add
jne
push
shr
pop
call
lea
push
push
push
push
push
push
push
call
add
mov
mov
xchg
mov
test
rolb
add
icebp
cltd
popf
add
add
int3
add
jno
push
mov
clc
mov
jns
popf
add
lret
add
jbe
fwait
shlb
movsb
jo
addl
mov
in
in
lcall
call
push
push
inc
inc
inc
push
and
add
xor
add
sub
inc
lea
sub
pop
lea
rol
pop
push
dec
lea
xor
add
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
push
call
rorb
cmpsl
mov
xlat
add
fistl
popf
add
in
mov
mov
add
jecxz
icebp
pusha
jp
mov
cwtl
hlt
xchg
mov
cltd
lds
sub
pop
call
call
push
push
shl
add
dec
shl
push
xor
add
sub
sub
dec
shr
not
pop
dec
add
pop
push
rol
add
add
not
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
mov
xchg
mov
add
mov
add
push
add
jmp
jnp
mov
mov
add
pop
add
fistl
mov
cwtl
pop
add
cltd
add
mov
add
add
add
shr
cmpsl
pop
xchg
mov
sub
pop
call
call
push
push
not
lea
xor
add
push
or
inc
add
shl
sub
shr
sub
lea
add
dec
pop
shl
inc
pop
push
push
push
call
add
push
cld
add
cmpsb
roll
les
add
mov
cltd
stos
mov
push
push
clc
push
call
add
addr16
add
lahf
lret
push
pop
sub
pop
pushl
push
dec
inc
sub
lea
pop
call
call
push
add
dec
inc
pop
lea
push
push
not
inc
shl
push
sub
add
sub
shr
sub
add
pop
pop
push
lea
not
add
inc
pop
pushl
call
push
not
sub
pop
push
call
push
push
inc
add
shr
not
push
xor
add
shr
sub
rol
sub
pop
ror
add
sub
inc
pop
push
pop
pushl
push
pop
call
push
lea
push
push
push
push
push
call
add
stc
insb
popa
add
add
add
cmc
lea
add
movsl
cltd
mov
popf
add
mov
mov
rolb
pop
je
pop
cmpsb
add
pop
nop
add
add
add
rol
add
shl
arpl
int
add
add
add
cli
movsb
pop
sarl
aam
movl
lcall
rclb
hlt
add
xor
pop
mov
push
push
push
push
pop
add
rol
not
sub
sub
pop
sub
not
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
mov
fdivrs
add
test
mov
rcll
les
add
mov
xchg
fdivr
sub
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
mov
enter
sar
add
jmp
add
stos
add
add
test
add
aad
addb
add
pop
pop
add
push
aad
mov
cli
mov
add
loopne
ljmp
jmp
xchg
lcall
jnp
add
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
in
jae
enter
xlat
fwait
jae
add
add
mov
movsl
push
xchg
jnp
std
jle
add
jns
add
testb
add
mov
loopne
lcall
add
lea
pop
pushl
push
push
push
push
push
call
add
hlt
add
test
nop
push
add
add
push
push
add
push
cmpsb
mov
stc
add
imul
add
popa
add
mov
mov
add
nop
lcall
add
out
in
in
pop
call
push
push
lea
sub
add
push
push
pop
add
lea
sub
add
dec
pop
add
rol
pop
push
push
call
mov
movsb
data16
lds
mov
test
rolb
add
cli
push
outsl
xchg
add
jb
in
lea
in
cli
je
add
rcrb
mov
add
add
add
jbe
jo
sahf
movb
jmp
outsl
cltd
add
add
sub
pop
pushl
call
push
push
not
sub
push
and
add
shr
sub
shr
add
add
pop
lea
not
pop
push
push
rol
push
push
pop
add
inc
rol
inc
sub
not
dec
shr
pop
inc
dec
not
pop
push
add
xor
pop
call
push
push
shl
add
xor
push
or
not
add
xor
sub
rol
add
dec
pop
add
xor
pop
push
sub
inc
pop
pushl
push
push
push
push
push
push
push
push
call
jne
mov
add
pop
pop
mov
add
int
add
stos
pushf
add
add
fiaddl
out
scas
mov
stos
mov
add
clc
je
rolb
add
loop
xchg
movsl
jecxz
add
add
add
xchg
push
cmpsb
test
add
add
mov
cltd
popl
add
test
cld
sbb
hlt
push
push
push
lea
push
call
add
push
add
fs
lods
add
add
add
mov
jp
les
in
add
add
push
add
aad
add
add
mov
fldlg2
add
scas
add
lea
jb
add
imul
pop
imul
xchg
push
fildl
add
pushf
lods
rolb
stos
les
add
into
sub
pop
lea
lea
push
add
pop
push
push
push
shr
dec
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
loop
loopne
add
add
loopne
add
popl
jge
add
add
add
loopne
movb
add
sti
sub
pop
push
push
add
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
lret
sarl
subb
jmp
push
add
int
add
add
jnp
add
lods
add
sti
je
add
mov
add
add
lods
icebp
add
mov
in
add
mov
jecxz
jns
fistps
add
push
lcall
add
push
rol
dec
pop
pushl
push
push
sub
pop
call
push
push
not
push
xor
add
sub
sub
shl
pop
xor
shr
pop
push
shl
pop
pushl
push
push
push
call
data16
pop
add
add
add
push
popf
test
add
jnp
addr16
int
push
mov
rcrl
add
pop
add
add
add
push
int
add
fsubl
sahf
add
add
sub
pop
call
call
push
add
lea
not
lea
pop
mov
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
add
add
pop
add
xchg
mov
add
fisttps
loop
ja
add
pop
nop
add
add
in
jmp
add
fwait
test
xchg
int
roll
stos
add
add
fldcw
add
iret
roll
jae
addb
sub
pop
dec
jne
push
add
shr
pop
call
push
push
sub
add
xor
add
push
or
not
add
dec
sub
sub
lea
rol
inc
pop
inc
inc
pop
push
push
call
mov
add
add
bound
add
add
mov
mov
lahf
add
add
mov
icebp
lds
rolb
int3
jbe
out
jmp
xchg
add
jne
push
add
rol
xor
pop
call
push
push
push
push
push
push
push
call
mov
add
in
mov
add
xchg
add
mov
add
add
push
iret
lcall
js
fdivr
cli
add
mov
int
add
fiaddl
sub
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
call
add
mov
add
xchg
add
jo
add
sarb
add
add
andb
push
mov
mov
add
call
add
xchg
in
fdivr
lcall
add
add
push
push
push
push
push
push
push
lea
push
call
add
add
add
sahf
add
add
add
xchg
aam
arpl
jbe
stc
jecxz
int3
leave
add
push
out
add
mov
xlat
xchg
add
lcall
pushf
and
ljmp
gs
or
mov
into
rclb
incl
add
cmc
sub
ror
shr
pop
xor
rol
add
pop
push
push
call
lds
iret
jne
add
leave
mov
stos
add
mov
mov
rol
in
mov
jl
loopne
add
add
jmp
add
mov
xchg
add
lea
add
add
mov
shll
fwait
or
add
pushl
call
push
rol
shl
pop
push
call
push
push
rol
rol
push
or
not
add
add
xor
ror
sub
ror
pop
ror
pop
push
lea
push
push
push
lea
push
call
push
add
add
push
je
add
flds
pop
imul
pop
mov
add
ret
add
add
mov
ror
mov
mov
add
mov
add
add
add
add
add
roll
add
sub
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
jp
add
aad
add
push
jnp
pop
add
fadds
add
add
xchg
shl
add
add
add
scas
cmc
fldt
iret
jno
add
add
icebp
les
mov
in
fdivr
lcall
rclb
push
push
push
push
push
push
push
call
add
call
fistps
push
add
jno
ror
mov
push
jae
stc
push
pop
flds
add
jns
add
xchg
xorb
in
pop
mov
mov
add
add
add
add
add
mov
jle
add
add
inc
cld
push
push
push
lea
push
push
push
push
push
push
call
faddl
mov
popf
mov
mov
jae
lret
jge
add
mov
add
stc
add
shl
into
add
add
xchg
add
jnp
jge
int3
add
lcall
pushf
and
ljmp
jp
mov
sub
not
push
sub
add
lea
shr
dec
sub
lea
add
pop
shr
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
jnp
lahf
mov
fcmove
add
and
add
mov
add
add
add
add
jnp
xchg
mov
add
lods
xchg
mov
stos
pop
push
call
fdivr
lcall
jne
call
push
add
xor
pop
lea
push
push
push
push
push
lea
push
lea
push
call
sarb
add
icebp
mov
fdivrp
lds
icebp
jmp
loope
add
addb
into
enter
add
roll
push
add
jge
add
add
pop
mov
out
movsl
push
clc
testl
in
lcall
push
push
push
push
push
push
call
addl
lock
add
add
mov
test
add
add
lods
int3
add
aad
mov
add
add
mov
sti
out
xchg
lcall
call
push
push
push
call
mov
add
leave
addb
imul
add
sti
xchg
mov
rcrl
add
add
jno
add
pop
movsl
add
sti
add
test
push
add
iret
sub
pop
push
mov
rcrb
out
in
clc
pop
push
push
lea
push
push
push
call
add
imul
add
addb
mov
stc
addb
jb
addr16
add
add
mov
add
add
mov
push
mov
pop
pushl
push
push
sub
push
and
add
sub
rol
shr
sub
inc
ror
lea
rol
pop
dec
add
pop
push
push
push
call
roll
add
in
bound
cmpsb
jl
jmp
fsub
lods
add
pop
add
mov
cld
mov
add
lock
jp
xchg
mov
add
ret
add
pop
add
xchg
sub
pop
push
push
sub
add
rol
pop
call
push
push
sub
shl
shr
push
push
pop
add
ror
add
lea
ror
sub
shl
pop
not
rol
shl
pop
push
add
pop
pushl
push
pop
call
push
push
push
lea
push
push
lea
push
push
call
add
pop
cwtl
add
xchg
add
add
add
jmp
clc
add
add
xchg
call
pushf
stos
insb
loope
add
add
shl
xchg
add
js
pop
test
test
add
add
mov
mov
add
add
pop
add
js
add
mov
mov
push
jmp
cltd
sub
pop
call
push
push
sub
xor
push
or
not
add
shl
inc
sub
add
dec
xor
pop
shr
ror
pop
push
xor
sub
dec
pop
pushl
call
push
pop
call
push
add
dec
dec
pop
jmp
pushl
push
lea
push
push
lea
push
push
call
cmc
add
add
add
out
jno
add
add
add
fldl
push
add
add
mov
jne
add
add
cli
add
mov
imul
lcall
mov
jmp
push
push
add
push
push
pop
add
lea
sub
add
dec
not
pop
xor
shl
pop
push
push
call
loop
mov
add
add
add
add
fldl
add
push
xchg
addl
add
add
fdivp
push
add
lds
lods
add
add
fxch
fadds
insb
sub
pop
pushl
push
sub
pop
call
push
xor
sub
pop
push
call
push
push
not
push
or
inc
add
lea
sub
not
dec
rol
shr
pop
not
ror
pop
push
add
dec
dec
pop
pushl
call
push
shr
xor
lea
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
aam
fidivrl
add
push
pop
pop
int
mov
add
add
add
add
rcl
icebp
add
add
fcomps
ror
push
sub
sub
pop
add
push
rol
ror
pop
pop
pop
push
push
push
push
call
stos
cmpsb
pusha
jl
add
add
jmp
mov
add
mov
mov
add
out
add
jne
lods
add
add
imul
sahf
ret
add
xchg
mov
pop
pushf
fisttps
mov
add
add
lcall
push
push
call
repnz
leave
add
stos
imul
aad
mov
xchg
fisubrs
mov
add
jo
add
rcrl
mov
jo
rolb
mov
jae
mov
andl
leave
push
sub
pop
add
push
inc
shr
pop
ret
leave
push
push
push
call
add
add
push
xchg
lcall
int
push
add
add
add
cmpsl
cld
add
cltd
add
imul
jecxz
mov
add
add
add
add
add
add
pop
add
pop
les
add
add
in
hlt
lcall
or
push
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
cld
xlat
test
data16
pop
add
add
add
add
add
push
add
add
add
push
add
imul
test
loopne
mov
push
ror
pop
cmpl
jne
push
push
call
pop
add
add
mov
mov
out
add
pusha
push
add
jmp
push
add
int
stos
enter
imulb
int3
add
fs
in
clc
pop
mov
push
push
push
push
call
add
add
insb
add
cld
xchg
lds
xchg
push
cli
int3
add
add
fldt
add
add
add
call
stos
mov
jae
add
add
add
mov
pop
jmp
push
push
push
push
call
add
adcb
out
js
add
mov
ja
mov
fidivs
test
add
in
lock
mov
and
push
push
call
addl
push
pop
add
add
mov
roll
add
add
add
add
add
movsb
add
jb
sbbb
add
push
mov
xchg
in
les
in
clc
lcall
leave
push
sub
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
push
call
popf
add
cltd
pusha
add
addr16
call
movsl
add
out
ret
add
incb
pop
mov
add
cld
cmpsl
clc
imul
add
popf
mov
add
mov
mov
xchg
add
mov
add
jecxz
nop
add
rolb
pop
xor
push
pop
dec
push
lea
sub
pop
sub
push
lea
push
lea
push
lea
push
call
lret
add
pop
aam
jp
add
enter
xchg
add
add
mov
xchg
mov
cltd
add
rolb
outsl
add
movsl
xchg
in
pop
add
mov
push
add
scas
add
add
pop
push
push
xchg
outsl
add
in
lock
lcall
mov
lea
push
lea
push
push
push
push
push
push
call
push
scas
scas
add
fadds
cltd
pushf
add
add
push
std
mov
add
int3
add
movsb
add
xchg
sub
pop
sub
push
push
lea
push
push
call
xchg
cltd
mov
push
enter
jl
leave
fnstenv
jecxz
add
add
pop
add
stos
test
jmp
add
add
jecxz
mov
sub
pop
pushl
push
add
ror
add
dec
pop
pop
push
ror
pop
sub
cmp
jne
push
push
push
push
push
call
add
insb
add
add
add
mov
xchg
mov
add
popl
popf
int
ljmp
mov
xchg
mov
add
add
xlat
xchg
cmpb
pop
push
add
scas
in
add
pop
lock
add
cmpsb
mov
mov
jl
scas
add
ret
in
lcall
enter
push
not
rol
pop
sub
push
push
push
push
push
lea
push
push
call
add
mov
ret
lods
movsl
add
jp
out
pop
aam
add
lock
popa
add
icebp
cltd
addl
lret
in
in
mov
push
not
rol
inc
lea
pop
shr
add
push
shl
lea
lea
pop
sub
pushl
push
sub
pop
pop
push
shl
rol
not
pop
shr
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
xlat
test
add
scas
pop
add
jnp
jno
jecxz
aad
mov
mov
pop
add
add
pushf
clc
fwait
push
add
push
jmp
add
fwait
add
add
sub
pop
and
sub
push
lea
push
push
push
push
call
lock
mov
add
aam
mov
add
lock
fldl
pop
int3
stc
hlt
add
fbstp
testb
in
add
mov
popf
addl
rcrb
sarb
push
mov
gs
push
add
mov
cli
add
lret
sub
pop
cmp
jne
push
shl
dec
add
pop
leave
ret
push
push
call
cwtl
out
add
mov
mov
add
add
cmpsl
add
pop
add
xchg
ret
mov
add
add
add
add
cltd
bound
cli
shl
xchg
push
icebp
popl
call
test
xchg
bnd
sub
pop
push
mov
push
push
call
add
mov
add
mov
cmpsl
jl
roll
lret
popf
fs
add
bound
add
pop
fcomps
push
sarl
loopne
andb
lcall
cld
push
shl
sub
pop
push
push
push
dec
shr
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
jmp
bound
jo
mov
add
pop
mov
nop
fs
add
add
ja
bound
add
push
mov
divb
add
mov
pop
lahf
add
nop
jb
mov
lods
sti
add
cld
mov
mov
in
fcompl
push
add
pop
push
push
dec
shr
ror
pop
mov
lea
push
push
push
push
push
push
call
push
out
add
testb
add
mov
add
push
add
std
add
fwait
push
scas
scas
add
add
xchg
add
jl
mov
pop
idiv
add
add
add
jle
insb
add
add
sub
pop
sub
push
inc
shl
pop
mov
push
push
push
push
push
push
call
add
fildl
in
add
add
rol
add
in
add
mov
add
js
add
rolb
add
mov
into
test
in
add
add
add
shlb
add
cli
cmc
jno
test
add
mov
mov
aam
mov
add
arpl
rolb
ljmp
xchg
popf
inc
push
lea
push
call
iret
bound
repnz
add
int
fldl
add
mov
mov
movsl
leave
add
mov
add
repnz
out
movsl
add
shrl
mov
lds
test
xchg
add
add
add
sub
pop
mov
push
push
call
movsl
xchg
ja
mov
add
add
mov
add
pushf
lcall
shl
ret
pop
movsb
jbe
add
add
add
mov
loop
pop
mov
jb
fldl
xchg
pop
or
cli
shr
pop
add
push
pop
xor
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
cwtl
into
loopne
enter
stc
add
add
pusha
add
xchg
add
imul
stos
add
add
icebp
cmpsb
sbbb
mov
add
popl
add
in
outsl
pop
add
add
add
test
pop
arpl
add
jbe
push
add
addr16
add
lcall
pop
and
push
dec
rol
pop
rol
push
push
push
call
add
add
outsl
outsl
add
cwtl
push
add
fnstsw
add
clc
xchg
pop
add
addr16
add
add
mov
add
add
imul
add
add
rolb
add
push
push
lea
push
lea
push
lea
push
push
lea
push
call
push
add
leave
cli
add
jbe
rolb
addr16
add
mov
jnp
iret
in
stos
cwtl
add
movsb
sti
add
push
mov
add
cltd
cwtl
mov
int3
jecxz
mov
add
add
scas
add
jecxz
sub
pop
inc
push
push
push
lea
push
push
push
call
loop
les
in
jno
add
add
testl
je
add
mov
enter
add
add
pop
jae
mov
cmc
cmpsl
sarb
add
imul
sahf
add
jns
stos
push
sub
pop
cmpb
jne
push
push
push
push
push
push
call
movl
add
test
pusha
add
movsb
add
loope
add
jno
add
add
add
add
sahf
add
pop
add
stos
xchg
mov
pop
add
add
jnp
imul
sub
pop
add
push
add
sub
ror
sub
pop
cmp
je
push
sub
pop
add
cmpl
jne
push
lea
push
call
add
add
mov
cld
popf
mov
fwait
add
mov
jbe
hlt
ljmp
add
leave
add
testl
add
sub
pop
xor
pop
push
add
pop
pop
pop
push
push
lea
push
push
push
push
call
add
mov
mov
fstpl
add
add
out
add
add
add
stos
shlb
push
add
popf
add
add
lcall
push
push
push
push
push
push
push
push
call
push
add
rolb
js
divl
nop
iret
cld
gs
add
in
std
add
add
ficoms
mov
add
mov
stos
xchg
add
add
add
js
xchg
add
cmpsl
push
sub
pop
pop
leave
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
add
cmpsl
mov
add
cwtl
push
add
add
mov
add
add
fcomps
add
xchg
sub
pop
ret
push
lea
push
lea
push
call
add
add
xchg
mov
mov
xchg
test
add
push
movsb
fcmovnb
data16
push
add
add
add
sti
out
orl
pop
mov
add
push
push
lea
push
push
push
push
lea
push
call
add
add
add
jecxz
mov
std
hlt
test
add
rolb
mov
push
cmpsb
add
mov
popfw
pop
add
mov
add
cmc
pop
add
ljmp
roll
add
add
add
add
add
loopne
add
in
push
push
push
ror
pop
add
push
add
not
xor
pop
mov
push
push
push
push
push
push
push
push
call
lea
push
jae
add
add
jne
movl
mov
out
mov
add
add
add
add
add
ljmp
sahf
add
add
add
sub
pop
testw
push
inc
inc
add
add
pop
pop
push
rol
sub
add
pop
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
stc
add
andl
data16
mov
pop
add
pop
mov
add
jnp
lock
mov
add
add
add
jno
data16
shlb
sub
pop
push
push
push
push
push
push
call
add
lahf
add
lods
int3
add
mov
cwtl
popa
addl
add
mov
add
shrb
add
movsb
pushf
push
out
mov
in
in
pop
call
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
lret
add
add
ret
in
mov
loope
arpl
jae
lahf
incb
insb
nop
loope
add
mov
roll
out
movsl
addl
call
add
lds
add
add
test
add
movsb
imul
add
mov
in
fcompl
xor
pop
push
push
push
push
call
push
push
add
mov
jne
cmpsl
add
jae
in
push
loop
add
enter
sti
pop
add
add
test
lahf
push
stc
sub
pop
pop
pop
push
push
call
into
add
mov
not
repnz
int3
mov
add
add
cmpsb
add
push
out
add
xchg
jge
loopne
add
push
addb
add
mov
add
andb
add
pop
add
stos
movl
sub
pop
pop
push
add
xor
ror
pop
pop
leave
push
add
pop
ret
push
push
call
add
stc
add
add
mov
mov
jb
xorb
add
add
popf
add
mov
add
push
add
add
addr16
mov
add
add
stos
test
in
cli
sub
pop
push
mov
push
ror
lea
pop
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
pop
mov
jne
mov
jnp
xchg
add
add
jmp
add
mov
add
add
add
xchg
test
mov
add
add
add
add
faddl
mov
lret
add
test
xchg
add
in
add
add
out
add
sub
pop
push
push
push
not
pop
push
push
shl
sub
sub
pop
push
mov
push
inc
pop
push
push
push
push
call
add
mov
jecxz
repnz
shll
mov
xlat
add
mov
mov
add
mov
jp
pop
test
in
jnp
mov
add
loopne
gs
add
sub
pop
pop
lea
push
push
push
lea
push
push
call
add
incb
mov
add
add
mov
push
mov
add
leave
add
lcall
add
add
stos
fsts
add
add
push
mov
add
sub
pop
sub
push
push
push
push
call
out
add
add
je
std
add
add
xchg
add
add
add
test
fsubp
rcl
add
pop
pop
in
add
in
cld
add
add
add
jo
int
sub
pop
mov
shr
push
push
push
call
outsl
add
icebp
add
shlb
pop
shr
in
aam
out
std
add
add
push
add
out
add
repnz
cld
jp
sahf
xchg
in
add
add
xchg
add
add
jbe
sub
pop
add
mov
push
not
add
not
pop
add
pushl
push
lea
pop
popl
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
mov
std
add
out
hlt
rcll
mov
aad
shrl
add
scas
xchg
js
mov
mov
add
mov
cltd
pushf
add
pop
push
js
add
repnz
add
lea
add
sti
add
add
add
lcall
jnp
push
add
ror
add
pop
add
xor
push
push
push
push
lea
push
push
call
add
jmp
add
add
in
int
add
add
cmp
mov
fsubl
xchg
icebp
add
std
mov
hlt
add
push
mov
add
addb
add
pop
leave
push
jno
ljmp
add
rol
add
add
sub
pop
lea
push
ror
ror
pop
mov
add
push
xor
pop
xor
rol
push
add
shr
pop
nop
push
push
push
push
call
add
rolb
add
lret
jmp
nop
jae
insb
mulb
lock
add
add
out
les
addb
add
add
add
fidivl
add
out
in
add
mov
jge
add
add
pop
loop
add
add
loop
shll
iret
js
jnp
iret
add
nop
xor
push
push
push
push
push
push
push
call
add
add
movsb
add
add
add
lret
fs
xchg
ljmp
test
faddp
bound
add
jl
je
add
je
add
add
lcall
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
jb
add
add
mov
add
incb
add
ljmp
cli
add
add
add
add
add
loop
mov
add
mov
ja
call
jns
add
fcompl
push
shr
dec
add
pop
inc
nop
push
push
lea
push
push
lea
push
lea
push
push
call
addl
add
fadds
ja
out
movl
pusha
ficoml
stos
movsl
imul
jecxz
push
fs
add
add
data16
fstp
data16
add
add
clc
pop
cmpsb
mov
loopne
mov
jne
add
add
in
in
lcall
push
lea
push
push
call
lret
add
rol
mov
add
add
testl
out
aam
mov
push
mov
push
aam
pop
mov
add
outsl
mov
cmc
add
lahf
pop
loop
xchg
add
jmp
enter
add
sarl
add
in
testl
popa
sub
pop
cmpb
jne
add
push
sub
inc
pop
nop
push
dec
dec
xor
sub
pop
nop
push
not
sub
pop
cmp
je
push
push
push
call
add
add
add
mov
cmc
pop
ret
mov
add
mov
shrb
pop
add
push
int
xchg
add
push
add
add
cwtl
lret
cwtl
add
arpl
add
lods
mov
jl
fisubrl
filds
push
cld
xchg
sub
pop
nop
push
not
sub
pop
nop
push
lea
pop
inc
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
pop
clc
leave
mov
mov
or
loop
add
enter
out
add
add
insb
add
sub
pop
nop
nop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
mov
enter
add
test
mov
sti
add
add
mov
add
filds
add
fcomps
mov
jbe
roll
fwait
shlb
lret
push
fiaddl
lock
in
fcomps
jne
jb
push
push
push
call
loop
push
pushf
add
add
add
add
test
movsl
add
mov
add
mov
out
cltd
push
int
add
push
add
shrb
add
mov
gs
mov
jnp
add
fadds
push
js
andl
add
pop
test
in
hlt
lcall
rclb
loope
push
push
call
xchg
cld
add
add
add
add
add
cld
add
push
fdivr
add
lods
push
ret
fs
mov
add
arpl
add
add
add
add
loopne
mov
add
out
mov
cmpsl
enter
mov
sub
pop
jmp
push
shl
pop
mov
push
push
push
lea
push
push
call
mov
cli
xchg
push
shll
push
jmp
add
add
fildll
sar
pop
add
jbe
add
out
xchg
mov
jae
jb
imul
pushf
filds
add
test
jmp
cli
icebp
cli
add
in
mov
add
rcll
cld
push
lea
push
call
mov
add
add
cmpsb
mov
stos
mov
add
mov
pop
add
add
lods
add
in
push
fimuls
mov
mov
jge
je
je
add
mov
jmp
pusha
xchg
movsl
jecxz
add
add
mov
xchg
shlb
popf
add
loop
mov
add
in
lock
lcall
mov
jb
pop
mov
push
push
push
push
push
push
call
mov
add
in
nop
addr16
add
add
add
int
shlb
insb
test
repnz
popa
xchg
add
clc
add
add
push
test
mov
mov
scas
xchg
into
push
add
notl
scas
scas
pop
sti
xchg
lahf
add
nop
add
out
sub
pop
add
push
sub
xor
pop
mov
push
push
push
push
call
add
add
add
call
nop
mov
out
xchg
fcmovb
add
add
add
add
mov
sub
pop
xor
xor
push
push
call
add
pop
add
ljmp
mov
add
incb
mov
loopne
ret
fnstcw
add
fldl
loope
xor
push
lea
push
call
mov
add
add
jl
in
pop
pop
mov
mov
add
add
cmpsl
in
mov
add
add
popa
enter
add
add
addb
test
in
js
push
cli
je
add
ja
add
sahf
add
loope
push
lea
push
push
push
lea
push
push
push
push
push
call
add
jecxz
add
jp
mov
push
add
fadds
jno
add
push
add
add
data16
jle
in
add
mov
add
imul
mov
jne
add
add
fdivr
lcall
dec
nop
add
js
push
push
lea
push
push
push
push
push
push
push
call
add
lahf
mov
add
mov
xchg
add
mov
mov
add
add
jne
mov
mov
imul
add
jl
jb
sub
pop
shl
push
push
push
push
push
lea
push
push
push
push
call
add
add
scas
add
xchg
stos
push
in
add
lods
push
test
pushf
rclw
int3
add
push
sub
pop
xor
push
xor
lea
pop
mov
push
sub
add
pop
add
pop
push
push
push
push
push
push
push
call
iret
cld
shl
add
add
ljmp
fdivrl
add
loope
mov
add
xchg
aam
gs
add
cmpsl
addl
jno
add
add
add
add
mov
add
add
add
jae
xchg
int
ljmp
test
popa
rolb
sub
pop
pop
push
add
shr
ror
add
pop
pop
pop
push
push
push
push
push
call
loopne
fst
mov
addb
mov
add
mov
out
add
push
add
xchg
ljmp
aad
ja
jno
mov
out
mov
ret
int
mov
push
jecxz
add
add
pop
add
add
add
sub
pop
leave
push
push
call
arpl
insb
add
add
add
popa
rclb
add
add
jno
fisubs
loopne
add
mov
in
je
push
add
mov
lahf
add
lahf
add
shlb
pop
ret
push
push
rol
shl
pop
mov
push
ror
sub
pop
push
push
push
push
call
xchg
xchg
ja
add
add
mov
add
push
add
fdivrs
add
addr16
push
add
mov
stc
add
mov
add
add
add
out
add
add
test
popaw
rcl
add
clc
add
roll
fcomip
aam
in
hlt
lcall
push
push
lea
push
lea
push
push
lea
push
call
fucomip
testb
sarl
bound
add
imul
add
mov
add
add
add
add
mov
add
cwtl
add
mov
lahf
add
loopne
sahf
mov
jecxz
shl
test
test
fidivrs
in
in
pop
push
push
lea
push
push
push
push
lea
push
call
push
add
sar
add
pop
mov
mov
mov
rorb
repnz
hlt
add
add
scas
mov
xchg
mov
add
jnp
mov
add
add
pop
add
add
in
call
push
push
lea
push
push
push
call
mov
in
lods
add
add
add
std
mov
push
addr16
add
int3
imul
cld
mov
ffreep
imul
adcl
jae
add
add
insb
mov
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
push
add
add
add
add
mov
add
in
add
mov
les
fxch
mov
mov
add
sahf
add
in
popf
cwtl
add
push
pushf
fs
lcall
sub
pop
mov
test
je
push
push
push
push
push
push
push
push
call
idivl
add
insb
add
jp
scas
flds
add
add
add
addl
add
jo
push
lcall
pop
jb
push
push
imul
imul
pop
add
outsl
sub
pop
mov
test
je
push
push
lea
push
call
add
add
fdivrp
add
lahf
ja
add
fstps
cmpsb
mov
lcall
test
insb
push
jb
cmpsb
shl
je
shll
jp
pop
push
nop
mov
into
add
gs
sbbb
add
testl
jl
insb
push
lea
push
push
call
rolb
cli
add
mov
mov
pop
rcrl
add
add
add
pop
push
add
nop
add
flds
icebp
add
pop
pop
jne
add
push
push
add
mov
sti
add
out
jns
add
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
or
add
xchg
add
mov
mov
andb
jbe
add
add
pushf
loope
fldcw
jo
repnz
rolb
not
pop
cmp
je
test
je
push
add
shr
pop
mov
push
lea
push
push
lea
push
call
jge
add
mov
mov
add
pop
shl
add
add
add
add
add
add
in
lock
lcall
cmp
je
push
sub
shl
sub
pop
test
jne
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
lret
fwait
add
pop
add
popf
cmc
add
xchg
rolb
jo
jnp
add
roll
add
aam
add
filds
add
fsubl
xchg
mov
lcall
mov
add
add
ja
add
add
test
shl
ror
add
xchg
jle
xchg
pop
add
mov
in
fdivr
lcall
push
sub
shr
shr
pop
pop
push
sub
ror
pop
pop
push
lea
shl
not
sub
pop
pop
push
lea
push
push
push
push
call
add
push
jae
add
fiaddl
out
ja
add
hlt
jns
add
jnp
idivb
add
mov
jns
mov
add
add
add
add
aad
je
out
pop
int3
xchg
jmp
mov
add
add
in
lcall
ret
push
push
call
jnp
rcll
outsl
add
ret
add
mov
add
add
add
int3
jo
lods
in
out
in
pop
push
add
aad
cwtl
add
cld
jl
lcall
pop
mov
push
inc
pop
inc
push
push
lea
push
push
lea
push
push
push
push
push
call
into
xchg
add
shl
shl
lahf
add
add
add
add
add
mov
int3
add
add
lret
add
add
mov
xchg
pop
lcall
leave
jb
mov
add
xchg
add
add
add
add
hlt
mov
xchg
sti
xchg
fsubp
sub
pop
cmp
jne
push
xor
pop
lea
push
add
ror
pop
mov
push
lea
pop
test
je
mov
push
rol
xor
pop
add
cmp
jne
push
sub
sub
pop
mov
test
je
push
sub
dec
sub
pop
mov
add
push
not
shl
pop
cmp
je
push
pop
jmp
push
push
call
add
xchg
aam
mov
add
test
outsl
add
je
jb
pop
popa
les
add
add
out
mov
cld
fsubs
rorl
mov
add
xchg
imul
add
mov
leave
mov
add
lret
loopne
in
clc
pop
xor
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
test
insb
add
test
addl
add
mov
call
arpl
mov
lret
add
mov
xchg
popf
rclb
call
jae
add
insb
lret
add
mov
lea
pop
add
icebp
jns
aam
mov
add
jle
add
add
rcr
sub
pop
pop
push
rol
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
test
xchg
xchg
add
hlt
push
add
std
add
add
les
add
lods
idivb
rcll
mov
lds
sahf
add
add
xchg
arpl
add
pop
add
sahf
add
sahf
add
add
ja
mov
test
fdivr
lcall
push
push
lea
push
lea
push
call
add
loop
jne
mov
cltd
mov
int
int3
fcmovb
push
add
push
push
aad
add
add
rcll
add
cmpsl
add
add
sub
pop
pop
leave
push
lea
push
push
call
add
add
add
arpl
cli
ljmp
jae
mov
les
ljmp
mov
jns
add
pop
enter
imul
in
jb
sub
pop
ret
push
pop
lea
push
not
pop
pop
push
push
push
push
call
add
add
cmpsl
mov
pop
jp
add
sti
fwait
push
pop
push
outsl
stos
add
add
pop
sahf
mov
add
mov
in
add
xchg
in
push
idivl
cmpsl
mov
bound
jp
add
add
scas
xlat
sahf
add
sub
pop
pop
push
pop
pop
push
lea
push
call
add
scas
mov
mov
xchg
add
add
push
pop
mov
add
push
imul
add
stc
insb
jo
js
pop
jle
mov
fldcw
push
cmpsl
sar
jae
sub
pop
pop
leave
push
inc
inc
add
sub
pop
ret
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
arpl
add
scas
lds
out
loopne
add
xchg
cli
jge
stos
add
add
push
test
push
add
loope
jns
addb
add
add
sar
mov
lock
pop
mov
pop
push
lea
push
push
lea
push
push
lea
push
call
aad
add
add
add
out
arpl
fwait
mov
add
sti
add
add
jnp
aad
cli
mov
add
jne
mov
add
popa
jne
add
mov
in
add
lcall
push
lea
push
push
push
push
push
push
push
lea
push
call
xchg
sbbb
mov
fwait
xchg
lret
addr16
add
add
jne
movl
iret
add
cmpsb
add
movsl
lret
add
add
mov
hlt
mov
loope
mov
popl
out
add
rorl
sub
pop
pop
push
inc
pop
pop
push
lea
pop
leave
ret
test
jae
js
jae
test
jo
test
push
push
push
push
mov
jae
test
jae
hlt
mov
add
and
outsl
std
imul
cmpsb
leave
inc
fldl
pop
pusha
cmc
fwait
in
test
loopne
push
mov
xor
jle
in
and
mov
iret
sbb
aad
mov
bound
movsl
push
movsb
sbb
sbb
movsl
xchg
inc
subl
xlat
ror
mov
js
dec
cwtl
movaps
je
jb
cs
mov
cmp
div
jge
jnp
adc
jmp
add
das
jae
xchg
adc
mov
sub
pop
xor
pop
lea
cltd
movsb
sub
xchg
outsb
sub
ret
rcrl
pop
adc
scas
and
pop
pushf
jp
mov
sub
jmp
call
cmpsb
rcrl
xchg
daa
cmp
flds
rcrl
add
in
xor
mov
notl
xchg
push
pop
stc
out
mov
int
movb
popf
dec
sub
lea
int
ja
into
lods
cli
lret
xchg
xor
cmpsl
imul
movsl
xor
cmpsl
push
or
add
pusha
or
movsl
jno
jmp
sub
fisubl
jnp
data16
sbb
popa
xor
or
cmpsl
fildll
adc
push
js
adc
jp
enter
aam
mov
int
loop
mov
fldt
insl
cmp
inc
rcr
cmc
daa
lds
mov
rep
sub
mov
or
push
mov
lret
xchg
int
pop
adc
mov
and
adc
lea
sub
push
add
das
cmp
movsb
dec
sti
adc
adc
hlt
aaa
stc
aam
inc
mov
pop
js
mov
push
xchg
and
mov
cmpsl
mov
lock
out
xchg
mov
adc
shl
insb
xchg
cmpsl
or
add
pop
int
sbb
push
icebp
jnp
aad
jmp
cwtl
out
ficomps
testl
lcall
jae
and
addl
jns
mov
ljmp
mov
push
xor
mov
add
pop
push
inc
popf
push
repnz
inc
insb
inc
cmc
sti
jns
push
xor
jg
inc
orb
imulb
subl
clc
gs
adc
push
stos
in
dec
gs
mov
mov
je
sbb
in
in
push
aad
out
sahf
sub
xor
inc
and
cs
lods
sbb
adc
mov
jnp
inc
out
stc
dec
pop
inc
inc
xchg
addr16
sub
adc
subl
mov
mov
dec
sub
decl
add
lahf
mov
and
lods
bound
jl
xchg
mov
adc
sub
nop
cld
test
or
sarb
mov
ja
and
daa
call
dec
inc
adc
je
loop
fcmovnu
inc
mov
push
aaa
and
jmp
sarb
enter
mov
fistpl
mov
in
inc
mov
pop
fs
xchg
fs
dec
fcmovnb
mov
adc
add
push
sub
movsl
mov
sub
rcrb
leave
mov
dec
leave
aad
lock
sbb
sub
lahf
jg
addr16
add
and
cld
adc
adc
cli
fstp
sub
push
mov
xchg
test
stos
aas
fidivrs
mov
fldcw
or
sbb
mov
jp
pop
loopne
adc
dec
jl
cld
cvtps2pd
mov
mov
mov
push
sbb
push
mov
adc
push
xor
mov
mov
mul
loop
pushf
push
ljmp
in
and
hlt
fstpl
mov
mov
inc
dec
enter
lcall
loopne
les
cli
mov
daa
mov
cmc
nop
loop
mov
mov
pop
fdivl
inc
dec
cmp
and
call
into
addb
sub
into
mov
jmp
inc
rcll
xor
incl
pushf
mov
mov
test
test
test
imul
fs
jae
decb
ret
decb
pop
repnz
fwait
enter
outsb
idiv
or
adc
adc
mov
rorl
push
mov
mov
xchg
ss
into
xlat
mov
aad
mov
jp
mov
pop
ret
jge
xchg
hlt
add
jmp
add
pop
mov
cmp
out
dec
pop
data16
ret
cmp
push
sbb
gs
sbb
rcrl
cmpsl
push
adc
xchg
loope
test
rol
popf
lcall
mov
hlt
pop
scas
or
jno
je
in
cs
leave
adc
es
push
jbe
jne
jg
push
adc
push
mov
and
xor
mov
mov
add
and
pop
xchg
pop
xchg
pop
aas
clc
mov
fstpl
xchg
push
dec
jp
mov
rclb
or
pop
mov
adc
or
xor
mov
or
jmp
lea
arpl
arpl
int3
add
add
push
jecxz
adc
push
je
adc
fsubrl
cmp
shl
movsb
cmp
enter
test
cld
jne
adc
mov
and
mov
cs
push
pusha
loop
push
sub
shlb
xchg
out
insb
sub
dec
lahf
bound
sub
mov
call
idivb
imul
dec
xlat
sub
idivl
xchg
int
lahf
pusha
into
fwait
xchg
xchg
inc
xorl
cwtl
addr16
or
std
lea
insl
xor
sbb
xchg
nop
aad
cmpl
cwtl
add
lds
add
lcall
xchg
xchg
ret
pop
jbe
inc
and
cmp
aam
in
das
or
xchg
jg
inc
xorl
or
notb
mov
dec
loop
push
pop
inc
ljmp
mov
jle
fisubrl
jbe
or
mov
xchg
xchg
mov
xor
mov
inc
add
out
cwtl
clc
cmpsb
fwait
inc
adc
ljmp
push
ficompl
mov
out
push
stos
shrb
inc
cs
inc
and
xor
mov
in
and
xor
aad
fwait
pusha
subb
pop
jmp
sbb
cmpsb
dec
movsb
stos
in
mov
jno
das
jle
cmp
push
subl
repz
mov
push
mov
ds
sti
movsl
pusha
cmc
out
movsb
cmp
and
icebp
fistpl
in
mov
adc
and
cmc
and
aaa
test
jne
pop
mov
imul
inc
sub
jp
test
fisttpl
inc
xchg
mov
push
mov
jge
scas
xchg
inc
mov
aam
add
push
subb
or
and
arpl
aam
ret
mov
cmp
or
cltd
sub
cmp
int
and
shlb
pop
pmulhuw
call
popf
and
stos
cmp
inc
flds
std
lock
inc
popf
inc
addl
test
xor
xchg
add
je
xor
jne
add
xchg
popf
scas
mov
fstl
cwtl
lods
pop
popf
fsubrs
dec
je
mov
aam
jmp
dec
dec
cltd
xor
add
push
fisubl
cmc
cmp
jb,pt
pusha
push
cli
fwait
imul
enter
add
push
rolb
in
fisttpl
or
and
adc
std
cmp
ljmp
movsb
shll
jle
pop
cmpsb
jbe
mov
lret
push
mov
mov
jmp
push
pop
adc
outsb
lret
add
jle
mov
lcall
scas
mov
jns
and
popa
or
inc
add
mov
xchg
cmc
ds
mov
cs
cmp
xor
pop
xchg
rcll
add
cmpsl
fwait
xchg
mov
js
fildl
push
jle
inc
stos
jmp
sub
dec
push
jmp
xchg
incl
jecxz
mov
fmul
cld
fisubl
sub
je
pop
jae
xor
mov
cmp
mov
adc
cmpsl
fldcw
fwait
jnp
pop
xchg
iret
pop
jg
ret
fs
pop
add
jo
jo
mov
push
sbb
mov
push
add
enter
inc
sub
dec
lock
ljmp
fsts
xor
in
rorb
dec
pusha
stos
mov
movsb
lock
cmc
mov
cmpsl
out
push
outsb
jne
nop
icebp
test
xlat
mov
ja
add
addr16
js
ss
mov
add
mov
dec
repnz
dec
mov
and
imul
dec
cmp
inc
jle
das
mov
push
int3
fisttps
fsubrp
sub
or
pusha
add
imulb
aad
push
pop
pushf
cmp
sub
out
test
adc
insb
loopew
dec
lea
rorl
push
adc
rorb
mov
mov
xchg
or
or
mov
sub
lcall
mov
cmp
and
fldcw
sub
mov
xchg
nop
sti
jge
in
imul
mov
lahf
test
dec
dec
lret
adc
xor
mov
mov
pop
dec
jecxz
pop
loope
iret
fs
xor
push
mov
hlt
inc
sub
dec
jecxz
dec
jo
sbb
mov
adc
or
repz
lret
mov
cmp
icebp
mov
pop
xchg
or
and
adcb
pusha
jmp
jno
movsl
out
adc
sbbl
stos
inc
stos
pop
inc
sbb
pop
cli
dec
inc
mov
imul
mov
xor
push
mov
xchg
xlat
es
cmp
fstpl
std
out
push
mov
cwtl
push
sti
push
mov
mov
xchg
test
rcll
movsl
push
fcmovu
jecxz
sub
mov
mov
add
and
repz
inc
mov
fstpl
add
rolb
cmpsb
mov
jecxz
mov
xlat
scas
repz
pop
xchg
add
das
fiadds
imul
outsb
mov
loop
add
push
pusha
lods
cltd
jb
mov
xor
mov
incl
add
mov
xor
cmp
xchg
ds
and
in
jns
push
adc
ret
mov
imulb
scas
push
out
cmp
push
call
insl
xchg
rolb
pop
inc
js
add
mov
xor
mov
outsb
cmp
adc
cli
dec
sub
jnp
ret
test
cmpb
ror
popw
and
repnz
jae
or
aam
adc
incb
scas
loop
xlat
inc
and
testb
mov
insb
mov
dec
sub
daa
int3
lret
nop
shl
dec
mov
xchg
out
adc
fs
cmc
adc
addr16
sbb
jbe
das
leave
mov
sbb
mov
mov
arpl
push
and
out
ss
leave
mov
fnstcw
shrb
xchg
xlat
xor
jno
jecxz
out
xchg
mov
cmpsb
ret
mov
sbb
sbb
sub
jmp
mov
loop
sbb
call
fimull
cmp
fst
xchg
xchg
lahf
fst
sbb
add
cmpsl
inc
scas
fsts
or
lret
stos
sub
pop
hlt
push
iret
pop
in
gs
pop
dec
pop
idiv
jno
sbb
je
aas
pop
sub
mov
leave
adc
inc
jbe
inc
sub
loope
pusha
lahf
fimuls
sub
mov
add
clc
sbb
sbb
push
pop
int3
fimuls
adc
icebp
push
popf
push
pop
lock
in
or
fwait
mov
mov
xchg
add
dec
jne
pop
push
je
and
adc
mov
shll
add
cmp
sbb
das
ja
ds
lods
popa
aaa
mov
dec
cmc
shll
negl
mov
out
loop
cmpsb
adc
mov
and
out
inc
rcl
adc
jge
lods
lahf
fcoml
stos
cmp
xchg
std
adcb
push
arpl
mov
aaa
mov
xchg
pop
mov
aaa
mov
icebp
das
dec
cmp
sbb
shl
aas
out
push
dec
shlb
push
pop
push
push
pushf
cmp
mov
addl
pop
sbb
xchg
or
dec
xchg
insl
outsb
inc
ficomps
movsb
dec
xor
sub
fdivrs
xor
cmp
into
int3
pop
pusha
sbb
xor
das
cli
andl
mov
push
jnp
add
mov
xlat
sbb
pop
not
lea
sbb
jae
out
in
addr16
hlt
push
test
mov
aas
cwtl
insb
mov
jmp
pop
jg
rorl
std
mov
xchg
add
and
cmpsl
sbb
add
pop
pop
aad
ret
lods
imul
popa
ret
xor
test
rcrl
outsl
clc
test
lods
push
pop
inc
jge
jo
loopne
or
sub
push
jb
add
mov
mov
loopne
mov
bound
push
adc
adc
out
test
sub
inc
dec
jl
inc
push
push
lods
and
imul
repnz
mov
clc
or
ja
and
nop
popl
jmp
jbe
mov
icebp
aaa
ret
je
das
lds
hlt
adc
sti
push
push
div
imull
inc
adc
aas
lret
inc
out
scas
in
mov
imull
push
or
call
xor
push
cmp
subl
push
repz
mov
dec
push
push
icebp
jmp
shlb
shll
test
and
in
pop
lods
ficoml
mov
push
and
aam
mov
adc
jbe
dec
inc
sarb
mov
jb
cs
cmp
mov
jle
enter
and
bound
in
iret
mov
pop
xor
aaa
rcrl
push
push
clc
push
les
les
fistpl
cmp
add
sbb
sbb
xchg
mov
hlt
scas
push
mov
call
out
int
ret
andl
movsb
push
sti
mov
popf
std
mov
mov
pop
scas
aas
ds
and
les
jp
cmpsl
ud1
fs
cmp
mov
jbe
push
arpl
push
loope
cmpsl
xchg
pushf
push
or
jno
clc
jo
dec
mov
out
gs
mov
and
ljmp
add
mov
mov
mov
fwait
pop
xchg
movsb
enter
mov
add
adc
out
mov
movsl
sub
mov
arpl
enter
cmp
in
xchg
and
in
inc
adc
jl
insl
inc
ja
jle
and
mov
leave
xchg
dec
jge
cmpsl
pop
mov
movsl
cmp
mov
add
loop
andl
mov
test
mov
dec
in
inc
fbstp
out
add
test
xchg
sahf
ss
add
fisubl
xchg
push
jg
sub
push
imul
sti
jno
bound
xor
aaa
emms
movsb
stos
fcoml
cltd
insl
mov
jmp
int3
test
cld
inc
mov
add
jae
add
push
insb
xor
iret
std
clc
out
mov
sub
mov
xor
rclb
gs
test
daa
pushl
outsb
push
or
mov
sub
inc
mov
and
insl
int3
lcall
stc
mov
in
cmpb
mov
sub
ror
inc
je
int3
ljmp
int3
or
ljmp
in
mov
incl
pop
mov
enter
adc
aas
mov
test
pop
inc
rcll
mov
sbb
jp
adc
sbb
push
addb
pushl
scas
cmpsl
cmpsb
sbb
stos
loop
dec
adc
idiv
mov
xor
cmp
rorb
add
xor
jge
aam
les
popa
sbb
adc
sar
mov
out
enter
ret
push
push
xchg
popa
stc
imul
adc
cli
adc
jae
adc
gs
dec
ja
test
xor
aam
shll
dec
jge
ret
icebp
pop
idivb
xchg
push
sub
out
cli
mov
xor
dec
mov
pop
int3
out
repz
loop
es
arpl
xchg
sub
int
mov
clc
mov
iret
roll
loopne
cmp
adc
jae
sbb
aaa
sub
or
push
xor
iret
inc
sub
fidivrs
dec
cmp
mov
std
sub
xor
daa
daa
mov
arpl
mov
test
movl
add
dec
or
scas
jae
arpl
push
std
mov
mov
mov
test
clc
inc
bound
inc
sbb
out
rorl
test
mov
mov
push
mov
addr16
movsb
mov
mov
pop
xchg
add
sahf
cli
jmp
aas
pop
xorl
out
lds
icebp
stos
icebp
popa
mov
roll
cmp
dec
or
jnp
pop
sbb
popf
divl
mov
movsb
add
popf
std
inc
test
pop
pop
out
fsubr
sarl
jecxz
pop
mov
sub
rol
mov
ret
add
push
mov
push
cmp
movsb
test
xchg
es
lsl
sbb
xlat
loope
fbld
dec
mov
and
mov
mov
sbb
cmpsb
pop
xchg
xchg
xlat
movsl
cmp
fists
or
scas
pop
call
fistl
sbb
mov
mov
cmp
xchg
ljmp
push
cmp
pop
leave
cmc
cld
rclb
enter
lcall
xchg
mov
testl
mov
jns
cmp
push
adc
jl
stc
xlat
inc
cmp
in
and
cmc
mov
xchg
dec
and
add
and
inc
jae
xorb
push
out
and
adc
dec
pop
ljmp
or
mov
mov
mov
cmc
xor
inc
dec
mov
lret
sar
or
xor
inc
pop
insb
push
jmp
mov
cli
sub
add
sbb
aas
outsb
xor
jno
loopne
adc
nop
push
mov
add
mov
pop
xchg
icebp
arpl
xor
inc
push
testl
jecxz
loop
jo
imul
xchg
jp
cmp
fdivr
cmp
loopne
push
icebp
jp
fisubl
jge
and
icebp
jne
jo
cwtl
aaa
inc
inc
aad
sub
xchg
mov
dec
sbb
daa
out
test
xchg
mov
shlb
pusha
insl
je
mov
and
dec
lahf
pop
fldenv
inc
dec
sub
pop
push
push
and
mov
mov
xorl
cmp
in
out
jecxz
cmpb
mov
mov
push
nop
xchg
mov
mov
popa
mov
push
jbe
loopne
jecxz
xlat
inc
jnp
jns
mov
pop
push
cmp
insl
mov
or
das
daa
rol
test
dec
adc
loope
lcall
ss
ret
std
jo
orl
mov
cmp
arpl
out
cmp
push
sbb
and
rorl
sub
jb
mov
fldcw
orb
in
test
xchg
jno
and
insl
lret
ret
push
shlb
xor
xchg
jns
mov
add
mov
mov
fldenv
cmp
mov
add
cmpsb
fimull
dec
xchg
adc
lock
aaa
pushf
loopne
clc
stos
cmp
dec
aam
xor
sarb
jns
pop
or
enter
sbb
out
push
imul
iret
jns
and
lods
lcall
or
xorb
dec
stos
and
push
inc
int3
mov
jle
outsb
push
out
jle
aas
xchg
mov
cmp
pop
mov
ljmp
gs
lret
jmp
stos
pop
fwait
xchg
push
jnp
jne
sub
mov
fbld
push
repnz
jge
nop
sub
rclb
xchg
jb
in
or
xor
inc
aaa
cmc
mov
shl
mov
cmp
push
mov
mov
add
mov
lock
add
xchg
ficoml
movsl
xor
pop
outsl
or
daa
mov
pop
and
das
ljmp
leave
sub
adc
push
lahf
xacquire
sbb
enter
jne
lds
jbe
into
mov
jbe
pop
fldt
push
mov
push
cmpsl
pop
jg
sbb
dec
xchg
lods
inc
aas
enter
ss
icebp
nop
daa
mov
in
cmp
sub
mov
rep
cld
or
ds
hlt
xchg
or
cmpsb
mov
push
jbe
adc
add
aam
cmp
aad
repz
mov
ss
jne
outsl
jge
in
add
popf
jmp
iret
notb
jnp
mov
ret
push
scas
jecxz
ja
cs
mov
clc
adc
rolb
sub
xor
pop
stc
cli
sbb
mov
mov
or
fcmovne
jae
ret
int3
rorl
dec
add
test
stos
loop
js
pop
sub
mov
les
sbb
push
andl
push
scas
fists
push
cmpsl
pop
rorl
inc
xchg
push
push
ds
pop
jbe
xor
fs
ja
loope
jge,pn
insl
or
lret
sub
aad
es
out
sub
adc
jns
mov
lea
mov
mov
push
ja
sahf
mov
jmp
mov
pop
and
testb
loopne
jno
adc
jmp
sub
shll
clc
and
cltd
pop
push
xchg
push
imul
aad
insl
test
out
push
fstl
fnstcw
add
cltd
mov
mov
rolb
incb
cmp
movsl
add
clc
rolb
xor
das
cmc
dec
push
lahf
push
scas
aad
add
cmpsl
arpl
xchg
cmc
and
add
add
xor
cmpsb
fsubs
mov
xchg
adc
sbb
dec
mov
mov
mov
mov
ljmp
lock
jbe
mulb
mov
cmc
stc
stos
call
inc
in
xchg
and
mov
sbb
mov
mov
sti
cltd
mov
negl
xor
jns
andb
or
scas
mov
insl
jecxz
cli
jecxz
add
mov
fwait
aas
movsb
test
leave
outsb
sbb
cmpsb
test
inc
pushf
xchg
mov
mov
or
jge
sub
call
and
mov
std
push
lods
iret
xchg
cltd
cmp
cmpsb
pop
pop
jecxz
test
jo
pop
mov
push
das
cmc
sub
pop
movsl
or
call
push
mov
xchg
clc
pop
hlt
sub
pop
fstps
sahf
stos
loop
enter
mov
xor
sbb
fisttpll
jae
dec
push
int
shlb
jmp
push
std
and
ret
or
aad
mov
adc
stos
inc
push
adc
cmpl
xchg
arpl
cmp
push
daa
mov
lea
ret
adc
xor
pop
sbbl
push
ds
leave
lcall
fsubp
mov
cmpsl
sub
incl
cmp
into
mov
lcall
sub
movsb
mov
pop
hlt
or
shrb
adc
jecxz
jnp
pmaddwd
lahf
vmovntpd
push
andb
pop
movsl
mov
sti
jmp
cwtl
sbb
and
std
pop
pop
xadd
cmp
ror
xor
pop
ja
scas
mov
loopne
mov
and
aas
dec
or
pusha
mov
pop
cmc
into
mov
sbb
mov
hlt
adc
ret
clc
addr16
fld
arpl
rorb
mov
sti
and
seto
shl
sub
dec
jle
neg
mov
sbb
data16
rcrl
shll
cs
push
fists
mov
js
cmp
cmp
and
test
sbb
push
sbb
pusha
sub
lret
lea
push
xlat
mov
out
or
pop
adc
push
filds
sub
test
xchg
dec
loopne
gs
negb
xchg
add
fildl
inc
mov
xor
jg
leave
add
loop
adc
sbb
pop
cmp
pop
subb
add
loope
or
repz
lods
sbb
sub
mov
cs
jge
mov
ss
lahf
call
mov
in
adc
nop
or
sahf
dec
test
dec
mov
in
add
jne
mull
mov
sub
daa
fnstenv
fsub
mov
xchg
rolb
int
stc
inc
xor
push
xor
scas
nop
jge
mov
sbb
bound
dec
and
inc
push
fldcw
mov
into
arpl
fsubrs
xchg
stos
std
lds
roll
push
dec
or
popf
push
adc
repz
out
add
pop
les
test
dec
cli
mov
jb
daa
mov
pop
dec
cwtl
sbb
pop
jnp
ret
icebp
mov
push
outsl
jmp
imul
inc
jnp
adc
lods
outsb
rorb
mov
jge
xchg
jl
mov
insl
nop
cmp
fdiv
push
or
js
clc
mov
pop
dec
pushf
or
sbb
idiv
mov
movsb
in
stos
aam
or
outsl
jl
mov
int3
das
xchg
add
subb
xchg
pop
sbb
push
dec
dec
out
in
mov
sub
mov
xchg
cmpsl
popf
add
dec
lret
arpl
or
mov
lods
lcall
sahf
cmp
sti
dec
imul
pushf
test
sbb
push
hlt
popa
incb
push
xchg
push
cmp
scas
mov
cwtl
lea
push
xchg
push
sub
dec
inc
fsubrs
fisttpl
scas
pop
imul
test
mov
fistl
mov
dec
shrl
jecxz
cltd
xor
es
dec
imul
mov
mov
xchg
rorb
stc
outsl
sbb
mov
shrl
shrb
ss
fists
push
icebp
add
test
inc
push
xor
push
or
cmp
mov
sbb
sbb
push
aaa
inc
mov
cmp
popa
xor
divl
movb
mov
sbbb
jmp
mov
ret
aad
jne
sbb
jb
sub
mov
and
lret
movsl
mov
xor
sub
jno
stos
push
sbb
cltd
xor
mov
push
add
into
dec
or
and
xchg
lcall
shrb
mov
and
outsl
stc
sub
lods
cmp
cmp
nopl
push
or
push
scas
adc
jp
or
push
mov
daa
push
popa
loopne
loop
adc
sub
movsb
pop
sbb
jae
sbb
sti
mov
adc
add
lahf
stos
std
cli
sti
or
mov
daa
popf
dec
repz
ret
mov
adc
xor
pop
sahf
andb
rcrb
and
js
sbb
sbb
cld
push
mov
aad
adc
cmp
mov
adc
arpl
mov
sbb
inc
dec
and
popa
cmp
jo
mov
xor
xchg
imul
jge
dec
mov
cwtl
push
sub
cmc
jns
mov
pop
sbb
pop
or
aad
iret
xor
or
mov
xchg
in
mov
lahf
nop
xchg
out
mov
cmpsb
jge
or
adc
push
or
fisubrl
lret
fdivl
and
or
xchg
seta
mov
inc
push
adc
ret
pop
or
std
data16
jbe
push
push
add
scas
ja
es
ljmp
dec
jae
and
cld
sahf
jmp
fs
pop
xor
or
mov
push
int3
stos
stos
cmp
mov
scas
enter
jb
aaa
xor
mov
leave
insl
cld
or
push
jg
jecxz
jae
add
mov
scas
jl
jecxz
mov
out
leave
add
imul
push
xor
cmp
pop
shlb
pop
in
dec
incb
std
out
sub
pop
lret
stc
push
mov
sbb
cs
orl
xlat
out
xor
ds
or
add
push
stc
ret
lods
mov
dec
jp
or
or
cmp
stos
mov
data16
adc
stos
in
std
push
movb
mov
loop
fidivs
bound
adc
insl
fincstp
sbbl
inc
sbb
cli
cltd
rorl
pop
dec
xchg
sub
xchg
pop
xor
scas
inc
jle
xlat
test
icebp
outsl
lahf
inc
adcb
xchg
stc
adc
aam
and
inc
add
sti
cmp
dec
mov
cltd
arpl
push
push
cmp
into
fdivs
ret
inc
out
fiadds
jle
out
push
or
test
jp
out
cmp
xchg
icebp
repz
icebp
xchg
dec
or
jo
pop
iret
sub
or
dec
or
add
mov
adc
push
mov
adc
neg
in
pinsrw
dec
jle
pop
push
fsub
inc
out
iret
sub
or
push
int3
adc
or
out
loope
inc
hlt
dec
loopne
nop
inc
sti
test
testb
mov
bound
pop
into
fwait
sbb
movsl
sub
lock
mulb
outsl
repz
push
mov
int
adc
xor
dec
cmp
xchg
daa
mov
fbld
aad
jbe
ret
shll
push
mov
es
xchg
push
add
dec
in
insb
aas
adc
stos
lock
mov
push
icebp
pop
mov
aad
fs
push
movsb
insb
sub
push
dec
cli
add
jo
int
fstpl
jmp
testb
push
mov
loopne
jg
scas
inc
sti
add
jo
xchg
push
fisubs
adc
xchg
pop
sub
fdivrp
lret
lret
jmp
rcll
mov
or
mov
movl
iret
xchg
pop
adc
and
lcall
push
stc
xor
jl
scas
jno
cmc
rcrl
pusha
push
lahf
negb
inc
add
add
movsl
pop
inc
aad
testb
xchg
subb
jge
mov
int3
adc
jno
movsb
mov
jne
sub
popf
dec
cmp
fs
ficoms
jns
xchg
add
and
mov
mov
lods
jo
or
stos
inc
sbb
mov
shlb
rorl
and
cmp
jle
sbb
jne
fwait
rorb
inc
push
xorb
xor
idivl
pop
cmovg
rorl
icebp
jg
cmp
and
outsb
imul
popa
in
pop
arpl
jb
jmp
popf
stc
sub
xchg
adc
in
clc
jo
pop
jecxz
sti
nop
into
mov
out
and
inc
cmp
xor
insl
xchg
jge
out
jne
insl
jmp
ret
jbe
cmp
int
fisttpll
sub
mov
adc
push
or
hlt
or
movsl
xor
jmp
xchg
imul
fistpl
sub
mov
mov
inc
lcall
push
aaa
xchg
orb
testl
pushf
jbe
lret
sub
sub
pop
aad
adc
shlb
out
adc
fsts
clc
cmp
adc
add
dec
orb
xchg
sub
push
push
dec
and
fs
pop
add
sbb
push
mov
push
std
pop
out
xor
mov
ja
sti
xchg
jae
lds
pop
pop
jecxz
push
mov
loope
movsb
or
add
pop
fwait
out
pushf
mov
jle
dec
int3
adc
loope
stos
negl
dec
add
lret
icebp
dec
pushf
jae
mov
lods
lock
jnp
paddsw
clc
jnp
dec
add
ja
pop
mov
sbb
and
popf
adc
popa
andl
jno
adc
imul
mov
in
lea
outsl
xchg
addr16
pop
push
stos
fwait
xchg
in
ljmp
jae
lret
mov
xchg
ljmp
lret
hlt
jno
cmp
cmp
xor
aad
test
push
cmp
imul
mov
mov
arpl
push
aas
add
xchg
mov
jge
xchg
lcall
dec
pop
sub
pushf
push
lcall
fstps
sarl
jge
test
ja
stos
maxps
cmp
pop
pop
jecxz
sub
pop
js
sub
mov
pop
loope
in
jae
leave
cmp
xor
mov
fisubl
test
jnp
or
mov
push
call
test
mov
or
pusha
pop
cwtl
loop
and
xchg
mov
xor
mov
jo
or
fs
adc
inc
sub
xor
jge
fldcw
sbb
push
inc
xchg
aad
movsl
bound
lods
outsb
jne
cmp
std
inc
insl
call
out
sbb
xor
mov
pop
fnsave
mov
lcall
mov
jne
jb
das
xor
push
xor
loopne
xchg
icebp
das
aas
sub
pop
imul
jbe
pop
fmulp
aad
push
add
mov
int3
xchg
add
and
and
rorl
xchg
icebp
cmp
mov
in
movsl
lcall
ret
adc
cmp
mov
sbb
lret
pop
push
cwtl
lock
jle
ss
jne
xchg
mov
cmp
sub
mov
jno
fstpt
out
mov
sub
push
insl
push
sahf
cld
sbb
xchg
rol
fstpt
in
hlt
xlat
cltd
aas
insl
adc
cmp
jecxz
dec
xchg
dec
dec
sbb
nop
fwait
sbb
xchg
js
popa
shrb
xchg
mov
cmp
or
enter
mov
cmp
frstor
inc
jns
mov
out
into
mov
inc
add
xor
cs
fwait
push
jecxz
int
lret
pop
xchg
cmp
pop
lret
lret
jne
enter
xor
jo
pusha
test
rorb
push
cli
xchg
adc
mov
and
int
lods
inc
lret
aam
xchg
jns
or
mov
nop
pusha
fidivl
out
xchg
ds
and
xchg
add
leave
insl
ret
inc
push
pop
mov
mov
out
mov
xor
bswap
xor
les
push
xchg
jo
fisubrs
xchg
jne
ljmp
sbbb
xchg
in
sub
mov
xor
cmp
mov
lods
mov
pop
shrl
daa
pop
cmp
and
inc
mov
mov
push
dec
and
push
push
inc
movsl
lea
cltd
aas
jmp
mov
pop
sub
sub
lods
dec
imul
jo
js
push
sub
xor
adc
addr16
push
sbb
ss
mov
xchg
push
mov
or
imulb
sbb
ror
xlat
xchg
lock
or
stos
psubusw
lea
rorl
ret
das
enter
cmp
mov
jb
leave
dec
filds
sbbl
xor
in
jns
xor
imul
div
orb
lods
mov
dec
adc
lea
inc
fwait
leave
mov
repnz
xchg
sub
push
addl
add
movsl
data16
pop
pusha
xchg
adc
les
mov
mov
loopne
dec
inc
jmp
add
loop
sub
mov
adc
or
xchg
in
mov
shrb
jle
loope
xorb
inc
mov
leave
daa
mov
jl
jmp
push
pop
and
push
arpl
jge
mov
sahf
popf
imul
aam
or
lods
insl
scas
inc
lret
lea
ficoml
fstpl
cmp
jg
pop
lahf
std
mov
push
mov
ret
rorb
push
int3
std
and
aam
mov
fildll
cmp
repnz
nop
outsb
ficoml
cmp
push
mov
sub
adc
je
push
adc
aas
jns
arpl
iret
jae
insl
or
test
ds
shl
ror
xchg
sub
loop
mov
sbb
mov
inc
push
push
mov
sarb
mov
dec
cltd
and
dec
cmpsb
adc
outsl
xchg
jmp
and
mov
scas
nop
sub
int
dec
xchg
lcall
jns
inc
stc
test
dec
imul
nop
clc
sub
mov
jmp
iret
dec
scas
pop
inc
popf
imul
stos
movsl
jecxz
and
movsb
jl
faddl
jl
xor
popa
popa
call
negb
pop
sub
inc
pushf
sub
push
lds
mov
cli
ja
sarl
mov
cmp
fabs
push
popa
fistl
push
adc
adc
ss
loopne
sbb
and
aaa
or
sub
add
mov
jmp
fcompl
repz
arpl
push
push
push
cmp
sbb
xchg
and
aaa
xchg
pop
loope
popf
in
and
sub
mov
or
aad
icebp
movsl
xchg
push
std
lret
int
lret
loope
xchg
inc
mov
std
icebp
or
sbb
popf
sbb
cmpsl
fmuls
and
imul
ficoml
push
sti
fidivrl
mov
sbb
sbb
aad
loop
inc
sbb
xchg
push
cmp
sahf
mov
dec
xchg
sti
dec
sti
jne
xlat
nop
mov
xchg
pusha
sub
mov
or
jge
aam
les
fnstenv
pop
xchg
leave
lret
pop
leave
loope
fisubrs
lods
lret
cltd
add
sub
pop
push
js
je
dec
dec
mov
sbb
shr
dec
cmpb
sub
mov
mov
and
data16
cld
out
mov
push
lret
and
cmp
jle
dec
hlt
jns
add
mov
cmpsl
sub
xchg
push
jg
incl
outsb
push
push
loope
sbb
dec
lahf
into
int3
or
jle
xchg
mov
inc
cmpsb
ja
jno
daa
je
sbb
cld
xchg
push
xor
lea
clc
mov
jmp
nop
push
ja
jecxz
pop
rolb
push
or
js
pop
mov
ficoml
test
jg
dec
movsb
and
and
mov
clc
push
in
testb
int
jae
out
test
and
sbb
and
cmp
dec
lods
mov
jae
jo
mov
jne
add
pushf
xchg
sbb
loop
adc
adc
movsl
inc
sub
js
lcall
imul
adc
imul
mov
xchg
sub
cmp
inc
repnz
mov
pop
xchg
out
mov
mov
or
ja
adcb
or
mov
scas
xor
jle
mov
stos
filds
fdivp
or
cmp
cmp
inc
jno
ret
xchg
cmp
fists
dec
fmuls
cmp
mov
gs
cmp
lock
sbbl
ficompl
xor
push
sbb
insl
ret
push
push
or
dec
adc
lock
mov
xchg
jnp
mov
xchg
pop
mov
mov
rorl
mov
push
jbe
adc
fidivl
sub
icebp
ja
decl
pop
insb
insb
push
movsl
and
cmp
mov
subb
sub
xor
add
push
nop
cwtl
orl
hlt
mov
adc
and
ja
in
cli
aam
mov
arpl
push
or
data16
jecxz
mov
rcll
mov
in
les
shll
in
in
sti
into
inc
das
cmpl
sbb
push
sub
in
imul
in
inc
mov
push
test
pop
mov
inc
cwtl
jns
and
inc
mov
pushf
pop
jge
xchg
and
test
shr
jb
xchg
jno
repz
cmp
add
js
aaa
inc
or
dec
in
loop
scas
cmc
clc
lock
cltd
mov
outsb
adcb
scas
roll
shll
sub
and
push
std
sbb
push
pop
cmpsb
in
rcrl
mov
shrb
ss
std
adc
pop
out
aad
fwait
mov
pop
or
sub
pop
xor
je
xchg
push
xlat
imul
jbe
push
test
xor
xor
sub
jg
pop
rcrl
and
aad
fisubrl
sbb
or
and
idivl
test
cwtl
aad
les
cmc
push
pop
pop
js
and
add
lea
jae
pop
std
je
push
xor
cmpb
pushf
pop
cmp
sub
pop
or
arpl
cli
jp
lcall
ja
xchg
fs
cmpsl
mov
in
daa
in
xor
stos
movsl
fnstsw
cmpsb
popa
and
push
test
sub
and
push
pop
and
or
mov
xchg
jmp
cld
les
add
inc
fwait
enter
in
int3
xchg
jecxz
add
fwait
and
sahf
leave
mov
add
dec
cmc
repnz
ds
std
fdiv
fsubs
cwtl
and
ret
pop
or
mov
inc
jge
loopne
imul
or
add
add
inc
pop
sub
cld
aam
pusha
fwait
mov
outsb
fcompl
and
push
ss
xchg
sub
fs
dec
sysexit
dec
xchg
push
fbstp
in
jns
insb
add
jnp
les
outsb
push
insl
incb
rol
aad
repz
fistpl
cmp
mov
fdivr
push
or
pop
cmp
jmp
sub
xor
fiaddl
mov
daa
pop
loope
inc
mov
in
cld
inc
pop
xchg
cwtl
mov
dec
ljmp
jae
mov
std
lods
add
gs
xchg
or
mov
sti
daa
add
call
xlat
ret
or
push
ret
in
flds
rcrl
and
ffree
jbe
stos
enter
mov
cmp
mov
inc
ret
and
fiadds
mov
outsb
insl
std
sub
shr
fdivl
mov
jo
cld
iret
loopne
inc
pusha
hlt
and
xor
stc
stos
into
cmp
fcompl
or
xchg
negb
mov
mov
fcmovnbe
lret
pushf
call
mov
not
fildl
aam
fisttps
mov
sub
push
test
fdivs
pop
pop
xchg
push
fwait
in
inc
mov
repnz
aaa
xor
popa
out
pushf
sbb
mov
pop
mov
sbb
mov
fsubl
xor
sub
sbb
jmp
dec
insl
cs
xor
dec
and
fmulp
inc
sahf
or
cmp
lock
sbb
ret
jno
or
or
lods
cmp
sbb
sti
xchg
inc
loope
cmpsb
add
and
adc
sub
int3
push
jo
mov
push
jle
ja
xchg
fs
mov
or
out
push
cmpb
fisttpll
mov
xchg
into
jne
push
cmp
sbb
mov
cmp
mov
sbb
insb
mov
mov
adc
push
lods
sbb
sarl
pop
stc
xchg
pop
xchg
jne
mov
jmp
pop
loopne
clc
lods
sar
fadds
in
xor
pop
cli
xor
push
loope
iret
inc
add
out
arpl
divb
and
pop
lock
or
push
push
std
in
mov
mov
sub
sub
xchg
or
cltd
sub
fucomp
mov
xchg
pushf
inc
cld
int
add
jg
iret
fwait
jae
in
rcrl
push
arpl
dec
add
iret
mov
xchg
push
out
lret
mov
cmp
adc
mov
movsb
push
sub
mulb
push
inc
insl
loope
and
mov
push
push
sbb
cwtl
push
js
sub
cmp
xchg
jb
push
cmpsl
aas
jns
jecxz
inc
cmpsl
cmp
inc
jl
mov
or
push
sahf
cmc
popf
add
or
cmp
mov
in
repnz
and
jns
loope
jmp
push
aam
jmp
rorl
and
inc
imulb
outsb
mov
push
repz
loop
push
cmpsl
cmc
fs
data16
xchg
add
hlt
mov
insl
aad
mov
mov
imul
pop
fwait
mov
sbb
inc
stos
xchg
xor
mov
and
in
mov
mov
mov
lcall
rorl
xor
ss
in
sub
stc
xchg
xlat
mov
xchg
loopne
popa
mov
xor
addr16
adc
and
lahf
xor
jo
cs
rol
inc
insl
leave
sbb
push
int
adc
scas
mov
lods
cmc
idivb
pop
pusha
add
push
scas
mov
cmp
ss
jno
xor
lock
mov
pop
pop
andb
jmp
mov
add
add
add
ja
push
hlt
xchg
pop
mov
aad
cmpsb
mov
jnp
bound
sbb
pop
jo
add
xor
sti
leave
mov
out
or
and
jmp
icebp
in
push
push
loopne
mov
insl
cmp
in
add
pusha
daa
push
cmp
ret
inc
ja
push
add
add
jle
mov
scas
adc
or
dec
mov
cmp
popf
iret
pop
pop
aad
sahf
lods
aas
push
aas
fmull
test
and
xchg
mov
fstp
pop
movsb
xchg
jp
push
es
sub
cmp
cmp
xchg
pop
mov
js
inc
sub
popa
xchg
and
mov
fnstenv
lahf
cli
popa
cmp
push
test
cmp
or
mov
push
leave
hlt
imul
cwtl
dec
jmp
pop
dec
js
ficoms
rcrl
cwtl
xchg
mov
and
repz
pop
jne
arpl
inc
mov
sti
xor
lret
in
push
or
flds
fisttpll
add
adcb
or
xchg
adc
je
jmp
push
mov
inc
hlt
add
jge
mov
rol
xchg
or
cmpl
in
jmp
push
push
imul
cmp
iret
movsb
loopne
loopne
int3
movb
xchg
and
xchg
fsubl
mov
dec
das
push
push
pop
shr
inc
popa
jge
cli
cmpsl
stc
cs
jne
ja
stc
mov
out
shll
jge
frstor
pop
or
xor
mov
aaa
cmc
jbe
xor
in
adc
shrb
mov
ja
ljmp
in
pop
stc
adc
aam
ja
mov
mov
test
out
fidivs
inc
or
movsl
lods
push
cwtl
adc
push
mov
pop
sbb
lds
xlat
jne
push
sub
mov
cmpsb
and
mov
push
repnz
mov
mov
inc
xchg
and
or
cli
nop
ficomps
jle
int3
jae
cmp
stos
es
xchg
popa
jne
pop
and
popa
ror
out
in
xchg
je
pop
out
imul
mov
std
pop
aam
cli
dec
sub
rcrb
pop
cmp
in
inc
int3
push
ljmp
jg
jle
xchg
xlat
imul
xchg
sahf
leave
fiaddl
cld
iret
pop
mov
jae
mov
pop
add
int3
pop
movsb
test
pop
pop
cli
add
cld
jb
adc
dec
pop
int
push
cmp
sarl
enter
xor
cmp
sub
mov
in
xor
xor
cltd
movsl
aaa
or
pop
and
roll
xchg
adc
jo
les
jl
loop
cmp
js
mov
popa
dec
pop
test
icebp
or
ljmp
cmp
mov
sub
adc
adc
mov
fsubs
dec
pushf
mov
mov
shrb
and
xchg
loop
daa
mov
lods
add
aaa
push
mov
iret
cmp
ret
insb
inc
push
fsub
rdmsr
xchg
mov
cmp
ffree
mov
imul
sbb
mov
mov
push
lcall
jp
jno
mov
cmpsb
push
push
and
pop
jb
pop
bnd
cwtl
xchg
adc
jbe
fwait
dec
repnz
stc
sub
ret
dec
mov
sbb
hlt
pop
jnp
and
fs
inc
dec
pusha
mov
and
adcl
es
cltd
push
mov
int
pop
outsl
imul
pusha
sbbl
mov
inc
daa
jle
es
lea
push
push
aam
shrb
add
mov
inc
sub
nop
jb
inc
adc
sbb
andl
cmpsb
add
push
lahf
mov
test
inc
testb
pop
in
push
je
pushf
les
jno
add
popa
and
inc
cmp
jl
call
popf
dec
jge
loopew
mov
and
jno
icebp
adc
roll
leave
dec
xchg
xchg
and
add
jp
sub
int
scas
mov
insl
jmp
ret
loop
pop
pushf
stos
xor
mov
sbb
inc
and
movl
cltd
pop
pop
xor
mov
loope
push
js
fistpll
inc
xchg
shr
xor
xor
stos
adc
popf
out
fcoml
dec
idivb
ret
jns
dec
mov
fdivl
in
in
test
add
mov
mov
sub
loope
out
push
adc
mov
adc
pop
sbb
call
hlt
fcompl
mov
stos
inc
pop
and
cs
jmp
inc
push
in
cmpl
and
jnp
test
call
rcr
mov
jle
mov
or
ja
lock
loop
rcrb
aaa
mov
xchg
leave
dec
mov
xlat
mov
add
jmp
or
fcomp
sar
sahf
and
push
leave
sub
dec
imul
std
ffree
fstl
mov
jae
popa
es
icebp
adc
in
cmpl
icebp
rcll
jns
pop
dec
outsb
sahf
push
dec
scas
aad
inc
test
test
in
push
cmp
dec
int3
or
scas
and
ja
dec
imul
sub
jg
hlt
enter
movsb
sahf
push
pushf
out
ret
add
lods
ret
int
xchg
fidivrs
mov
fcomps
test
test
test
mov
mov
ss
pop
loop
pop
icebp
ljmp
dec
stc
arpl
repnz
aam
scas
cmp
dec
dec
daa
sti
jmp
mov
lret
scas
addb
incl
stos
rcrb
lcall
jns
test
out
xchg
jbe
mov
mov
sbb
out
mov
test
adc
test
mov
fidivl
mov
push
cmp
aaa
cmpsl
xor
adc
iret
lods
pop
jo
pop
cmp
lret
popa
jne
jo
xor
sbb
pop
xchg
push
sti
inc
push
cld
aas
push
xchg
inc
out
jne
push
push
arpl
inc
jl
cwtl
in
fiadds
sub
push
mov
and
fs
dec
call
popa
nop
push
js
faddp
clc
test
pop
in
mov
pushf
ss
or
xlat
out
andb
out
call
scas
xchg
and
lahf
pushf
jno
push
xchg
dec
les
test
xchg
pop
xchg
sar
push
movsb
mov
jno
out
test
adc
pop
movsl
cmp
bound
cld
loop
out
mov
adc
loopne
lahf
lods
jb
mov
ret
clc
stos
mov
outsl
or
popa
cmp
pushw
dec
xchg
push
and
jnp
ljmp
out
mov
jne
sbb
ret
dec
cmp
jl
ja
or
aas
repnz
sbb
loopne
jge
andl
mov
and
dec
push
jae
mov
mov
in
iret
in
aaa
sub
addr16
and
ljmp
jb
jmp
cmpsb
and
aam
test
push
js
mov
and
pop
jnp
das
add
mov
subl
imul
sahf
int
cmp
add
pushf
movsb
mov
mov
push
scas
dec
cmc
pop
gs
jecxz
ror
mov
pushl
fwait
jge
push
lcall
lods
sbb
ret
fisttpl
test
pop
or
sbb
pop
dec
in
test
sub
sti
addl
je
ljmp
mov
mov
clc
push
xlat
adcb
or
adc
test
push
pop
inc
std
test
in
or
add
and
sbb
xchg
or
int
xlat
outsl
push
push
jns
cmp
jmp
cli
fsub
aas
popa
in
sbb
addl
out
in
xchg
js
adcb
adc
test
int3
mov
dec
mov
add
cld
dec
and
pop
mov
sbbb
movl
or
xchg
add
mov
inc
fists
push
xchg
test
dec
stc
sub
cli
iret
sub
daa
notb
jmp
add
push
fbld
fiaddl
jge
repnz
sub
popa
add
mov
push
getsec
orb
test
cmp
cs
jb
mov
or
lret
leave
bound
or
roll
out
sbb
push
add
push
inc
inc
fbstp
sbb
xor
jbe
aam
in
adc
ja
jns
es
shlb
xor
ja
shlb
jle
testb
push
rorb
add
scas
ljmp
aaa
pop
ss
lcall
and
push
rcl
xorb
test
pop
lods
push
lds
cmpsl
inc
aad
in
xchg
mov
lock
add
ja
mov
arpl
lock
lods
mov
inc
mov
pusha
fsubs
mov
in
or
jnp
pusha
mov
and
sbb
mov
fisubrs
adc
repnz
mov
cltd
mov
sbb
jae
rol
or
lret
sbb
xchg
cmc
sub
dec
andl
sbb
pop
cmc
lock
push
sbb
mov
mov
inc
mov
push
in
lret
cmp
inc
imul
ret
scas
es
jmp
dec
shlb
pop
fldl
imul
jl
lret
jnp
pop
loope
jl
div
hlt
mov
insb
gs
gs
mov
imul
stos
jne
ja
pop
fldl
imul
fstl
pop
push
xor
and
or
stc
inc
add
ds
mov
jp
add
dec
or
add
inc
add
aad
mov
and
mov
cmp
leave
and
std
sarb
arpl
dec
hlt
sti
lods
insb
add
mov
loop
rcll
pop
pop
repz
out
lods
in
mov
cmp
add
outsb
ja
cld
fistps
addb
mov
xchg
mov
pop
adc
cli
sub
js
fs
sbb
das
xor
push
cmp
loop
sbb
pop
inc
ljmp
cmp
mov
cmc
addr16
cltd
mov
cld
and
aas
or
sub
nop
stos
dec
orl
out
and
dec
loopne
pop
push
cmp
aad
jg
dec
in
cwtl
aad
dec
xor
inc
and
cmp
arpl
inc
in
test
mov
pusha
push
push
mov
or
dec
jns
mov
sub
stos
cli
test
or
jne
adc
sbb
mov
cltd
ss
push
xchg
xor
fidivl
test
cmpsb
adc
or
cmpsl
add
cmp
popa
push
or
sbb
scas
js
aam
jge
in
push
cltd
popf
push
cmpsl
mov
aas
push
flds
shlb
fs
insb
lahf
mov
cmc
push
sbb
push
dec
jmp
pop
neg
xchg
clc
test
xlat
xor
cld
push
xor
mov
mov
cmp
xor
lcall
adc
icebp
push
shr
push
mul
sahf
and
std
fists
test
in
ja
or
push
int3
imul
xor
lahf
xor
stos
adc
cmc
dec
push
xchg
ret
xchg
mov
dec
pop
mov
xor
xchg
mov
lods
movsl
adc
push
mov
inc
cmp
inc
shrl
push
push
dec
aas
push
pop
add
mov
fwait
pop
lcall
sar
aad
rcr
mov
out
xchg
out
mov
push
addr16
cmpl
lcall
dec
mov
lahf
test
xchg
rol
jno
adc
sub
sbb
in
cmp
cmp
mov
subl
jno
cld
xorl
jae
pop
and
shll
clc
mov
stc
aad
push
testb
push
in
mov
mov
ds
cmp
in
dec
cmp
lds
xchg
sahf
add
push
in
out
lock
or
insb
sub
mov
divl
fwait
lret
call
and
fstps
and
mov
in
xchg
jbe
out
mov
sub
fsubrl
and
jmp
pop
iret
xchg
push
push
mov
js
cmp
test
xor
inc
testb
cmpsl
push
std
and
ss
popa
xor
stos
not
dec
jl
mov
int
sbb
lods
dec
xchg
mov
xor
mov
rorl
lods
sbb
mov
test
sbbl
or
data16
ret
dec
jo
mov
adc
ret
call
adc
push
jl
jnp
ja
test
xor
jo
ja
mov
sbb
mov
push
sub
loope
push
arpl
add
xchg
fisubl
push
pop
inc
sbb
loope
and
jo
inc
ret
scas
sub
cmc
xor
jbe
inc
dec
mov
lahf
jl
arpl
pop
pop
cmp
mov
mov
push
jge
pop
aaa
shlb
lock
in
mov
push
rorb
mov
jl
mov
add
divb
jae
xlat
and
push
add
das
divl
mov
fcomps
mov
dec
cmc
push
std
add
into
or
mov
jmp
jno
push
pop
push
jns
and
xchg
std
loop
fucomi
and
mov
movsl
sbb
pop
aas
addr16
dec
and
ret
sbb
or
dec
jo
dec
sub
mov
in
fdivrs
xchg
fxch
cli
xchg
cld
icebp
popf
push
cmpsl
push
add
sub
xchg
roll
xchg
inc
in
std
sbbb
fdivrs
dec
and
mov
loop
adc
arpl
lds
inc
xchg
test
inc
inc
cmp
js
int3
pop
lods
es
aam
adc
aaa
push
nop
mov
xor
sbbb
insb
stos
mov
outsb
lea
repz
ds
xchg
mov
adc
mov
pushf
inc
xor
cmc
jno
xchg
fcmovbe
push
cmpsb
adc
mov
out
in
push
pop
jge
ret
adc
lcall
loopne
orl
insl
mov
lock
push
lahf
into
stos
dec
sub
cmpsb
jge
push
repnz
int3
sbb
cmpsb
sub
mov
aam
mov
sub
sbb
test
in
iret
bound
mov
xlat
cmp
inc
pushf
out
imul
divl
enter
add
pop
adc
lods
xor
push
dec
push
ljmp
push
nop
in
nop
js
data16
cmp
jnp
cwtl
pop
leave
outsl
adc
mov
inc
adc
mov
sbb
adcl
jo
xchg
repz
mov
jge
sub
out
jp
push
outsl
sbb
int
add
daa
xor
sbb
fbld
inc
push
cmp
cmc
xor
mov
stc
cmpsb
xchg
loopne
mov
push
xor
cmp
sahf
arpl
add
pop
adc
sbb
adc
push
mov
or
dec
mov
mov
ds
loopne
out
imul
and
inc
cmp
dec
ds
mov
mov
sahf
jmp
xchg
dec
ds
insb
mov
pop
sti
leave
mov
jl
int
mov
enter
dec
mov
pop
add
fcmovnbe
adc
pop
stc
cmc
push
outsb
popa
je
mov
aas
flds
adc
adc
cmpl
stc
dec
and
cmp
out
inc
xlat
cltd
in
fadd
jl
out
int
and
cmc
dec
inc
stc
xchg
pop
rcrl
fldenv
nop
mov
add
or
cmp
or
pop
subl
inc
pushf
arpl
test
mov
pop
popf
repz
lret
push
lea
adc
mov
ljmp
adc
jae
ljmp
inc
and
pop
lcall
popa
rolb
lods
cmpsl
hlt
and
shrb
xchg
pusha
mov
fneni(8087
and
mov
cmp
inc
and
sub
sbb
icebp
fs
xchg
jno
jbe
push
mov
repz
sub
lahf
sub
dec
mov
insl
and
mov
xchg
mov
rcrl
jnp
mov
cmpsl
shrl
add
pop
cmc
mov
sar
loope
xchg
je
mov
inc
mov
sbb
inc
std
adc
jno
pop
sbbb
and
xchg
sbb
hlt
inc
pop
rcrl
and
leave
pop
pop
in
pop
mov
jge
mov
pop
cmp
cltd
shll
mov
call
lret
imul
mov
clc
push
arpl
inc
mov
pop
push
je
sbb
push
iret
cmp
rorb
jae
popf
int
in
push
les
stos
mov
insl
cmpsb
add
jmp
jge
add
jmp
pop
cmc
adc
fwait
pop
loopne
cmp
imul
lock
push
out
jne
xor
aaa
ds
addr16
popa
je
stc
test
testb
rorl
push
fcomp
mov
or
mov
out
jb
inc
test
mov
in
hlt
mov
cmpsb
repnz
pop
xchg
or
dec
rolb
adc
rcll
daa
fldcw
or
inc
jge
jp
pop
push
or
stos
pop
inc
sbb
inc
fs
iret
adc
or
or
nop
mov
aam
sbb
ret
pop
dec
loop
cwtl
jg
xchg
jg
xor
loopne
add
fmull
adc
sti
insl
adc
sub
pop
je
xchg
push
xchg
call
xchg
js
jl
sub
int
out
dec
mov
xlat
pop
mov
dec
int
bnd
movsl
aas
rcll
dec
jbe
and
gs
repz
xchg
jne
pusha
xor
push
icebp
mov
jle
inc
je
and
out
iret
popa
jbe
sbb
fidivl
mov
fildl
adc
mov
or
outsb
ss
sbb
testb
and
push
push
pop
icebp
out
or
add
out
inc
xchg
cmpb
into
lods
cli
mov
movsb
adcl
mov
call
out
xchg
xchg
lods
jp
cmpsl
xor
xchg
das
stc
popl
lock
popf
fcomps
and
ror
imul
or
jb
mov
or
or
data16
push
popa
mov
mov
dec
or
mov
push
fisubs
add
out
fwait
mov
pop
cmpsl
iret
jns
nop
mov
stos
adc
push
popl
jns
sbb
sbb
add
movsl
fisubrs
cmc
fmul
sub
clc
xor
mov
mov
movsb
sbb
push
in
push
js
in
popl
xor
test
subl
sub
shlb
sar
pop
scas
test
xchg
subb
mov
rcll
sub
je
sub
cmp
xchg
xor
hlt
andb
ds
or
adcb
pop
int
divl
scas
arpl
xchg
stos
scas
cmp
inc
jne
xor
cmpsl
negb
mov
pop
insl
icebp
xorl
pushf
or
fsts
adc
lcall
push
lret
and
pop
shlb
dec
fs
stos
lahf
sub
nop
das
mov
cmp
fsubrs
jl
ret
xor
cwtl
push
inc
or
inc
in
loopne
xchg
insb
jp
cmp
lods
repnz
dec
test
jg
add
fdivs
push
and
push
jle
mov
lret
test
cmp
mov
nop
shll
jl
adc
mov
sti
lock
sub
fiaddl
imul
mov
cmp
mov
cs
scas
fwait
into
lret
adc
mov
int
aaa
sub
cwtl
jg
lret
jl
mov
out
lds
aad
adc
std
jp
or
inc
lds
fld
loopne
or
fdivrs
imul
int3
ss
push
jns
xchg
dec
icebp
in
cmp
imul
pushf
xchg
xchg
iret
xor
into
cmp
sbb
imul
fs
jo
pusha
add
cmc
pop
cmp
mov
or
in
pushf
pushf
lahf
jae
repz
test
mov
daa
lret
push
stos
mov
adc
lods
rolb
mov
sbb
bound
jne
jge
xor
sub
aad
or
add
fcmovu
pop
out
movb
mov
cmpsl
mov
pop
jo
aad
and
repnz
loope
mov
and
cmp
jbe
cmp
mov
in
cmc
sub
or
int
dec
mov
and
dec
inc
fisttpl
scas
in
jo
cmp
fs
test
fldl
push
or
pop
push
jp
cmp
cmpsb
pop
cli
dec
pop
stc
lods
inc
jno
cld
add
jb
push
or
int
xor
lret
in
popa
mov
and
or
fstl
addb
pop
sbb
mov
popf
dec
loop
insl
shrb
xor
and
xchg
lds
xchg
movsl
mov
loope
icebp
mov
mov
in
mov
jno
mov
xchg
in
lret
mov
sub
pop
addr16
punpcklwd
fidivs
in
jp
xor
mov
outsb
push
pop
mov
add
js
movsb
adc
jl
nop
xor
adcl
mov
sbb
push
pop
inc
pop
or
lea
aam
ja
dec
aad
inc
out
icebp
iret
sbb
ljmp
les
push
dec
stos
xchg
and
test
fildll
psllq
mov
imul
lcall
outsl
loop
or
hlt
jb
adc
inc
mov
inc
pushf
push
mov
mov
movsl
dec
push
loop
frstor
cmp
jo
jg
jmp
cltd
mov
pop
or
test
inc
shlb
sbb
dec
dec
std
sbb
jl
xor
outsb
cmc
mov
je,pn
lahf
mov
out
fs
jle
inc
cmpsb
loope
pop
outsl
push
push
cmp
js
out
mov
pop
dec
xchg
js
dec
xchg
dec
out
adc
test
movsl
out
rclb
push
pop
scas
ficoms
inc
cli
mov
push
jb
fbld
filds
hlt
adc
and
adc
dec
cli
jns
aam
cmp
fucomip
sub
or
jge
repz
imul
jno
jo
adc
stos
dec
fwait
mov
arpl
xchg
stos
xor
sub
repz
sbb
shr
loop
in
sub
idivl
mov
push
rorb
ret
popa
in
ljmp
pop
pusha
inc
cs
cmc
lret
icebp
or
daa
out
cmp
negl
insl
ljmp
inc
pop
mov
fsubrl
and
mov
fwait
adc
mov
movsl
cmp
arpl
aas
mov
loope
aad
dec
loopne
inc
mov
cmc
out
movl
rorb
and
ja
or
adc
cmpb
test
pop
hlt
iret
or
or
pop
mov
aas
xchg
out
lea
jmp
sbb
dec
add
test
add
outsb
inc
insl
jo
shll
jns
push
test
add
and
cmp
mov
jl
into
and
jge
lods
in
adcb
xor
inc
jge
and
dec
xrelease
aad
jbe
test
daa
lret
mov
mov
es
xchg
pop
aaa
icebp
sbb
movsl
in
or
sub
sbb
sub
std
popf
adc
mov
sub
push
test
sbb
cwtl
push
rorb
inc
xor
cmpsl
fiadds
pop
jno
and
pop
adc
idivb
imul
rcrl
movsl
push
fs
notb
jns
sbb
dec
repnz
fiaddl
sub
sbb
push
int3
pop
or
cltd
lahf
int3
mov
jg
filds
lods
adc
xor
divb
pop
or
dec
inc
mov
jb
dec
adcb
mov
jnp
lods
into
mov
lret
xchg
cmc
and
cmp
dec
sbb
jne
outsb
xchg
flds
xlat
mov
loop
test
aad
xor
pop
cmp
or
scas
pusha
add
push
or
mov
cmc
clc
aaa
xor
pop
pop
pop
inc
je
push
insl
repnz
push
dec
sbbl
stos
notl
cmp
decl
cmp
test
movsl
out
jmp
sbb
pop
lcall
mov
mov
ror
lods
outsl
fisubrl
lds
inc
jne
inc
roll
push
js
cmp
stc
mov
pop
mov
lods
push
xchg
push
xchg
mov
cmpsb
sub
add
pop
mov
aam
jne
inc
or
or
rclb
push
cwtl
movsl
mov
or
fisttpl
test
adcl
jo
addr16
lea
xchg
arpl
push
and
imul
jp
int3
push
add
gs
ds
jp
push
shr
mov
or
dec
enter
mov
jnp
xor
ds
adc
arpl
mov
push
pop
mov
fwait
or
popa
test
or
addr16
imul
fdivrs
aam
sub
icebp
and
popf
mov
lods
cmc
test
mov
lea
mov
pushf
push
or
xchg
jo
xchg
or
iret
and
mov
imul
push
jecxz
fidivrs
imul
sahf
insl
insb
push
out
inc
insb
xchg
jae
lods
dec
or
inc
xor
loop
push
fnstsw
rorl
add
or
pop
fbld
dec
pusha
mov
es
pop
mov
inc
mov
cltd
push
mov
pop
mov
sbb
mov
fwait
daa
movsl
xchg
iret
mov
cmp
repnz
dec
cli
xchg
test
or
xchg
ffreep
cli
pushf
lds
jecxz
iret
or
stos
push
popf
rcll
pop
stc
loopne
sbb
mov
inc
mov
push
mov
ds
pop
filds
jge
movsl
sbb
pop
xchg
ficomps
adc
cmp
sub
jbe
ret
mov
lret
push
shlb
xchg
ljmp
mov
sbb
popa
sub
mov
lcall
or
push
mov
mov
rolb
push
ja
jae
out
mov
adc
std
jmp
pop
jle
inc
mov
lds
daa
in
push
std
std
xor
iret
fcmove
push
loop
out
out
loop
scas
add
andb
pop
es
inc
rclb
sbb
mov
imul
cmp
ficompl
cmp
jecxz
addr16
cmp
sti
add
lret
cmp
sub
daa
je
mov
jb
mov
pop
negb
pop
out
scas
cmc
fsub
adc
loop
mov
cmp
hlt
pop
push
add
repnz
add
lds
mov
mov
fisubl
push
arpl
adc
pop
imul
in
data16
push
clc
cmp
and
in
cmp
inc
cmp
dec
jnp
test
mov
xchg
sbb
sub
andl
arpl
sub
add
enter
scas
je
mov
repnz
sub
push
dec
int
fwait
sbb
es
insb
push
adc
lret
in
nop
mov
cmp
aas
mov
add
lea
mov
lods
jecxz
dec
jmp
inc
hlt
les
loopne
and
cltd
stc
cmc
lcall
call
daa
movsl
mov
mov
out
and
imul
push
cld
pop
sub
xchg
mov
jb
pop
push
pop
jo
jecxz
rcrb
lea
test
lcall
aas
lock
leave
iret
out
jbe
imul
sub
pop
in
int
cmp
inc
sar
mov
sbb
je
push
jp
push
sub
inc
ds
shrb
aas
cmpb
mov
bound
adc
fildl
mov
adc
es
push
mov
cmp
or
fldl
call
cmpsb
inc
adc
mov
jae
cmpsb
insl
inc
mov
and
and
push
mov
mov
jmp
iret
mov
xchg
push
clc
mov
je
add
xchg
inc
mov
outsl
rcll
or
movsb
add
jb
cltd
pop
cmp
pop
inc
add
mov
jno
jae
mov
fld
iret
frstor
mov
outsb
in
add
addr16
push
loop
xchg
mov
jo
popa
push
sub
sbb
mov
ss
ficoml
jns
call
xchg
pushf
adc
fisubl
clc
pop
rorb
out
jp
mov
loopne
push
add
ret
cmpb
dec
aad
sbb
dec
push
mov
ficoms
mov
leave
jle
adc
sub
push
insl
leave
cmp
pop
pop
pop
inc
add
lds
push
pop
or
jle
sbb
jne
xor
ret
outsb
stos
push
sbb
popf
int
lods
cwtl
in
pushf
ret
sbb
out
mov
lods
push
ficoms
mov
push
add
and
mov
mov
dec
sti
enter
xor
insb
call
aam
dec
push
lds
out
in
imul
mov
pushf
dec
clc
leave
movsb
mov
jnp
adc
fadds
mov
in
adc
lods
enter
adc
das
add
popa
inc
sbb
add
xchg
call
ds
and
jge
fdivrp
xor
pop
shlb
negb
mov
xor
shl
adc
jg
xor
fcmovnu
lea
movsl
lahf
adc
hlt
push
mov
add
xor
imulb
cmpsl
jae
or
lea
lret
lret
aaa
test
filds
push
fs
xchg
adc
dec
aam
or
adc
out
adc
in
push
mov
ret
loope
out
movd
mulb
mov
movsb
in
mov
popf
lods
mov
push
outsl
jbe
pop
test
dec
add
fstpl
jge
repz
lcall
push
sbb
data16
rcrb
sub
in
lock
fnstsw
mov
addr16
ss
les
jge
dec
mov
cltd
xor
les
mov
push
add
mov
and
ret
loopne
lea
xchg
shrb
pop
inc
ljmp
push
sub
loope
rcrb
and
jnp
insl
js
incb
stos
mov
push
pop
add
roll
pop
mov
repnz
pop
jno
repz
clc
or
shll
pusha
dec
jae
cmp
or
and
sbb
mov
ja
test
xchg
or
filds
mov
sti
mov
push
popa
sbb
js
std
mov
sub
jae
pusha
nop
or
clc
pmulhw
test
sbb
push
cmovb
mov
pop
cmc
hlt
in
sub
pop
fwait
xchg
adc
cmp
mov
iret
dec
push
movsl
xchg
lods
add
cmp
mov
add
dec
out
fdivrl
lret
leave
adc
push
fiadds
mov
xchg
pop
pop
rcrb
add
inc
xor
outsb
insl
lret
fidivrs
pause
fdivrl
mov
sub
out
or
decl
push
mov
negb
insb
cmp
jmp
stos
repz
test
bound
pop
addr16
push
popf
mov
lods
frstor
add
pop
inc
xor
mov
inc
mov
fsubr
idivb
out
or
in
xchg
or
add
daa
stos
lds
push
mov
sub
fldcw
xchg
sub
movsb
sbb
add
aad
xchg
das
xor
hlt
shll
mov
mov
inc
divl
or
add
aas
test
dec
scas
jbe
insb
push
mov
mov
ljmp
xchg
cmp
inc
pop
lds
adc
sbb
aaa
add
sahf
imul
pusha
loope
adc
mov
sbbb
add
mov
jbe
out
mov
jno
inc
mov
and
mov
mov
in
push
add
lcall
popa
push
sbb
cld
movsb
xchg
inc
add
mov
mov
push
scas
int3
sahf
dec
pop
sub
mov
jl
dec
or
cmpsl
jle
jmp
cmpsl
push
dec
in
xchg
js
imul
push
lret
fsubrl
std
mov
sub
stos
dec
fdivrl
add
push
xor
xchg
push
ja
into
xchg
lods
mov
cmpsb
jae
xlat
mov
mov
push
xchg
or
sbbl
jne
lret
outsl
int3
sub
pop
dec
sbb
es
sbb
xchg
dec
mov
pop
mov
lods
cmp
sub
xor
sbb
add
test
icebp
or
jae
adc
sbb
std
sub
adc
jbe
add
sub
inc
in
rorb
inc
ja
xor
fildll
repz
nop
jne
mov
pop
jae
jg
xchg
xchg
sub
mov
cmp
fistpl
mov
dec
adc
jns
in
and
sbb
pop
jmp
sarl
mov
jmp
pushf
mov
xor
jo
fstps
shrb
push
scas
inc
cmc
enter
cmp
stc
jne
ds
xor
test
cmp
ds
lcall
push
into
pop
mov
dec
fwait
jo
or
xor
xchg
rorb
cld
idivb
js
cltd
or
insb
xor
dec
or
sarb
mov
not
and
xor
sub
push
dec
cld
xchg
std
xchg
jnp
push
enter
js
fistpll
iret
adc
xchg
adc
inc
inc
mov
js
dec
push
adc
sbb
test
ret
scas
stc
mov
push
fidivs
sti
xor
sub
xor
jge
cmp
sub
repz
cwtl
xchg
ds
inc
adc
cmp
sub
xchg
pop
mov
cld
negb
or
pop
pop
push
jge
test
int
jo
adc
orl
in
fwait
adc
inc
push
mov
cli
mov
aas
lea
inc
jmp
popa
test
jb
mov
imul
xchg
dec
enter
adc
leave
ja
push
push
mov
xchg
js
pop
sub
lcall
and
pop
push
and
sub
cmp
adc
les
cmp
jg
pop
negl
and
lcall
xchg
icebp
int
aaa
cmp
pop
stos
jp
mov
adc
jne
hlt
pop
out
mov
sub
mov
shr
imul
dec
int3
popa
push
lock
shll
push
movsb
stc
or
push
jecxz
ljmp
mov
fistpl
stos
cmp
dec
dec
dec
test
push
dec
rcrl
mov
ja
bound
les
sti
loopne
mov
js
dec
icebp
out
dec
pop
mov
and
loope
push
dec
mov
add
push
jp
mov
sbb
jno
out
mov
into
xchg
xchg
lods
jmp
shr
shrl
cli
je
sarb
fwait
divb
into
call
sti
out
scas
movsl
xor
push
sahf
pop
jmp
loope
fdivrs
add
mov
inc
xchg
sbb
shll
lret
inc
enter
add
jp
push
adc
je
cmp
std
push
xchg
xor
aas
sbb
cs
outsl
push
jns
mov
clc
dec
dec
daa
push
push
dec
mov
subl
clc
jl
insl
sub
dec
testl
test
sub
mov
hlt
stos
inc
fstl
add
arpl
je
or
nop
mov
cmp
inc
mov
sub
mov
and
fidivl
mov
dec
aam
clc
popf
mov
mov
addr16
ret
jno
insl
cmp
xlat
testb
movsb
dec
adc
xor
bnd
test
popa
xchg
dec
lock
push
cmp
aas
nop
cs
ljmp
jne
shlb
mov
pmaxub
and
push
mov
adc
push
adc
cli
lds
jb
jecxz
popf
add
mov
and
negl
addr16
js
scas
popl
dec
mov
cli
in
mov
cmp
or
xor
cmp
gs
incl
stc
add
pop
cmp
test
cltd
mov
inc
or
sub
mov
xorb
outsl
cld
mov
ljmp
lock
mov
bound
mov
andb
mov
lea
add
enter
xor
sub
push
sub
inc
divb
ret
inc
mov
mov
add
clc
lahf
stos
mov
jmp
xor
es
inc
popa
pop
iret
fildll
mov
lret
push
orb
mov
js
push
push
mov
inc
ds
ljmp
push
lea
push
lods
jle
cld
jle
pop
gs
in
shlb
aas
ljmp
mov
pop
push
adc
or
scas
mov
scas
sti
xor
je
pop
xchg
xlat
cltd
jns
sub
pop
mov
jns
loope
cmp
fsts
adc
std
cmp
popf
scas
pop
daa
movaps
push
stos
sub
xlat
pop
push
jne
stc
imul
dec
xchg
test
int3
mov
mov
pushf
test
mov
mov
enter
adc
and
sbb
lahf
test
cwtl
inc
sub
ret
ret
xor
loopne
jne,pn
leave
ss
lret
mov
in
jg
clc
jl
mov
jle
into
push
mov
sub
lods
xor
push
sbb
inc
cltd
pop
push
mov
cmp
cmc
dec
ror
inc
rclb
pushf
sbb
sub
or
rorl
inc
mov
sbb
lock
shr
fadds
aas
sti
sti
dec
lcall
mov
fwait
push
and
loopne
push
fs
js
jle
pusha
js
xchg
xor
lahf
adc
ret
xchg
aad
pop
outsl
xchg
aad
fisttpll
test
sahf
fistps
mov
cmpsl
and
in
push
add
jecxz
xchg
loopne
lahf
js
xchg
fsub
mov
sub
sti
and
test
mov
pushf
dec
outsb
test
push
out
dec
cwtl
test
dec
das
jo
rcrl
ljmp
sub
mov
jb
lret
bnd
sub
je
subl
sub
psubb
xchg
sub
data16
std
cmp
push
fsubp
dec
lea
or
stc
scas
std
inc
mov
stc
fdivrl
inc
ja
mov
push
xor
insb
inc
pop
out
push
jae
adc
pop
add
fsubr
cmp
sub
xchg
aas
xor
rclb
aad
test
popf
xchg
imul
pop
lret
xchg
fistpll
inc
enter
push
andb
push
jns
push
dec
fninit
inc
out
adc
jae
add
adc
mov
aaa
fidivl
push
sbb
cli
call
dec
sbb
xchg
pop
cmp
into
push
inc
mov
dec
das
sahf
sbb
and
pop
int3
outsb
lds
add
inc
insb
xlat
push
and
and
adcb
sub
pop
addr16
repnz
mov
je
or
pop
std
add
adc
outsl
bnd
mov
dec
rclb
xchg
dec
in
cmp
aad
cmc
inc
lret
and
cmp
or
es
inc
jecxz
insb
sbb
in
out
out
xchg
fbld
jge
xlat
sbb
xchg
and
dec
dec
lods
pusha
dec
add
add
fidivs
shrl
lret
loop
sub
hlt
out
push
test
pop
dec
dec
or
sti
push
mov
jge
sub
andb
imulb
mov
arpl
in
jnp
out
pusha
inc
pop
push
jp
or
pop
jmp
cmpsl
imul
ret
ja
add
jmp
lcall
xchg
fidivrs
cld
xlat
dec
mov
cmpsl
xor
xchg
das
sbb
adc
sbb
mov
jb
xor
or
insl
or
push
mov
mov
pop
lcall
es
dec
lods
mov
nop
adcl
decl
dec
and
scas
sahf
jmp
outsl
inc
adc
add
sarb
sub
xchg
adc
icebp
jo
pop
inc
mov
insb
and
arpl
jg
cmpsl
movsb
jl
outsb
dec
and
mov
pop
mull
dec
je
cmp
cmp
or
lods
push
lea
outsl
inc
inc
lock
pop
and
sbb
push
lods
and
jno
add
jbe
cmp
das
push
fs
push
icebp
inc
sub
adc
mov
ret
lea
mov
or
int3
dec
cwtl
add
in
push
outsl
in
pop
daa
or
mov
xor
aas
aad
lods
add
mov
adcb
add
bound
xchg
cmp
inc
mov
call
mov
mov
loop
xor
push
sti
inc
pop
dec
push
xlat
add
and
rorb
adcl
in
mov
mov
repnz
mov
test
xor
jbe
je
fnsave
jl
mov
jmp
push
pop
jbe
jp
scas
pushf
and
cmp
mov
pop
popa
cld
mov
mov
sub
pop
pop
add
movsb
stos
pop
dec
sub
sarl
inc
ss
cmc
sbb
mov
sub
pop
or
movsb
jb
push
jns
in
aad
mov
jge
movsb
fs
mov
mov
jl
push
add
jns
pop
mov
pop
mov
pop
mov
lret
sbb
xchg
mov
xchg
xchg
les
adc
test
mov
mov
dec
add
cmp
pop
inc
cmp
cmp
out
mov
addr16
mov
js
fwait
lret
test
push
repnz
es
add
cmp
sub
push
xchg
sbb
mov
insb
dec
scas
mov
adc
loope
dec
arpl
dec
ret
and
gs
xchg
lahf
push
sub
ret
xchg
and
or
jo
cmc
stos
cmp
push
dec
std
fdivrl
jbe
test
and
imul
sub
bound
cmp
sti
mov
push
lcall
ret
sbb
push
add
mov
mov
ljmp
movsl
fistl
sbb
mov
cltd
jbe
loope
popl
mov
add
push
xor
lret
cmp
xor
shrb
dec
add
enter
cmp
loopne
sbb
add
das
sti
cmp
sti
sbb
pusha
sahf
pop
movsb
cmp
pop
jae
sti
xchg
iret
cmpsl
mov
cmpsl
xorb
jle
inc
aas
or
pop
pop
insl
popa
sbb
jmp
in
fsubr
pop
subl
adc
aam
leave
fnstsw
in
or
jp
ror
loopne
mov
pusha
adc
cmp
sub
insl
out
xchg
add
mov
in
std
xchg
sub
cmc
notl
or
stos
int
cmp
arpl
nop
mov
jbe
sbb
push
xchg
inc
popf
sbb
aad
stos
jmp
and
push
xchg
xchg
fs
pop
daa
sbb
inc
lock
icebp
adc
pop
rorb
or
je
sahf
jb
mov
mov
mov
add
jl
pop
pop
pusha
stos
xchg
jle
sub
pop
nop
add
arpl
inc
jmp
out
push
pop
jmp
cli
adc
inc
push
inc
sbb
es
adc
push
test
sbb
sbb
pop
lods
mov
movsb
inc
dec
mov
call
lods
jp
ficoms
out
jmp
mov
mov
nop
mov
arpl
push
inc
jge
rcl
fbstp
mov
xlat
xor
repnz
cmc
push
out
aas
int3
xchg
pop
sub
sbb
cmp
stos
sbb
or
adc
lret
dec
aad
xor
loop
mov
cmp
jl
inc
push
and
arpl
lret
shl
loopew
xlat
js
ljmp
cmp
outsl
bound
add
mov
nop
leave
les
daa
bound
lock
mov
and
adc
add
mov
scas
into
adc
mov
in
cli
mov
cs
fistps
ja
notb
mov
packuswb
inc
and
inc
or
xchg
pop
pop
pop
cmpl
sub
mov
movsb
lahf
add
mov
ficompl
dec
insl
lods
lea
sbb
dec
mov
stos
pop
push
in
cli
xor
in
jle
jecxz
daa
cld
lods
lock
inc
mov
dec
rol
les
rcl
jo
xchg
cli
lahf
jne
test
xor
adc
adcb
out
dec
xor
fmuls
outsl
jl
repnz
push
shlb
pop
mov
xchg
dec
je
aas
cs
icebp
or
add
push
daa
push
jl
ja
and
cmpsl
mov
pop
jle
outsb
daa
jno
les
and
sbb
stos
enter
and
insb
push
mov
dec
fmul
xchg
test
push
xchg
and
push
xchg
repnz
mov
mov
jecxz
or
jne
pusha
rolb
lahf
cmp
or
fcomip
pushf
cwtl
leave
fisubrs
cmp
dec
inc
lahf
stos
mov
sbb
les
out
pop
add
jmp
sub
adc
mov
and
test
je
or
das
xor
test
push
add
add
inc
shrl
xchg
or
movsl
cli
es
inc
cmp
mov
push
mov
or
inc
pushf
mov
incl
ret
xlat
rol
inc
cwtl
outsb
or
mov
push
outsb
ret
or
std
enter
scas
adcl
pushf
enter
ret
outsl
mov
in
daa
scas
jmp
dec
cwtl
into
mov
enter
icebp
push
lahf
arpl
sbb
or
mov
inc
arpl
inc
push
sahf
insb
dec
daa
xchg
push
shlb
add
push
mov
stos
insl
push
mov
sub
pop
pmaxsw
cmpb
ds
shl
push
stos
out
aad
dec
sbb
sub
gs
push
dec
clc
cwtl
push
mov
add
mov
jge
repz
imul
cld
inc
pop
jg
jp
mov
out
sub
jb
gs
cs
scas
lock
dec
insl
data16
jp
loope
aaa
xchg
xchg
mov
sbb
jge
dec
pop
pop
xchg
lods
cmp
out
push
scas
jmp
dec
cmpsl
xchg
cltd
pop
xchg
pusha
push
pop
ja
mov
scas
mov
mov
or
sub
inc
or
rorb
cld
lcall
es
xlat
jb
movsl
dec
xor
aas
pop
mov
cmp
jecxz
in
xchg
fstpt
outsb
insl
jmp
shll
jp
jle
out
icebp
sub
and
rclb
jge
aam
mov
and
add
mov
sarb
add
add
xlat
ret
mov
sbb
mov
or
repz
dec
push
int3
fistl
nop
imul
or
pop
mov
repnz
das
jle
stos
inc
jl
sub
push
out
sub
fcompl
outsb
add
and
std
push
adc
and
mov
dec
mov
or
push
jmp
push
jbe
scas
mov
packsswb
cld
xchg
testb
jbe
scas
adc
jae
push
shlb
pop
sub
xchg
jmp
pop
dec
ss
jg
loope
mov
sar
xchg
sub
mov
pop
push
cmp
jno
test
xor
lods
jns,pt
dec
les
in
icebp
xchg
cmpsl
test
dec
adc
inc
push
jg
mov
arpl
and
dec
push
mov
push
and
ljmp
xchg
imul
cmp
je
xor
mov
push
insl
imul
andb
and
mov
mov
roll
pop
repz
sub
pop
test
push
lea
out
arpl
aaa
xchg
jecxz
adc
in
nop
fbstp
je
jecxz
adc
xchg
jecxz
xchg
push
clc
xor
mov
or
push
mov
or
push
lds
jmp
push
pushf
aas
push
sbb
jo
push
movsb
or
cld
lahf
setae
subb
in
test
xor
mov
jns
push
gs
dec
and
add
mov
repz
out
xrelease
xchg
inc
adc
mov
fidivs
stos
insl
mov
mov
pop
fcmovbe
ja
lret
or
flds
adc
or
out
sub
sbb
dec
test
fwait
xchg
shlb
jg
adc
in
add
loope
cmpsl
repz
stos
mov
pushf
push
xor
or
test
lea
ficoms
fmull
loopne
shll
pop
jmp
fneni(8087
stos
dec
cld
pop
pop
loopne
xorl
pop
inc
dec
add
int
notb
aas
call
je
pop
imul
mov
pop
xchg
stos
fwait
and
or
cmc
xlat
lods
or
xchg
sbb
and
pop
hlt
push
out
jl
or
fnstsw
stos
mov
test
mov
xor
sbb
and
arpl
mov
or
push
jbe
and
ljmp
lods
sub
js
stos
lcall
fdivl
test
jg
push
out
cmp
sbb
sahf
jge
add
repnz
push
das
or
xor
insb
sbb
fsts
pop
inc
xchg
sub
sub
push
inc
and
lods
add
in
mov
jnp
push
xchg
jecxz
or
add
mov
pushf
mov
jae
in
outsb
das
cltd
push
pop
xor
mov
cmp
ds
mov
dec
pop
leave
dec
sub
jle
das
push
mov
cwtl
rcll
jmp
dec
mov
sbb
push
or
sbb
or
mov
and
mov
in
aaa
dec
call
shrl
jmp
pushf
or
sbb
and
addr16
jnp
jmp
dec
das
imul
adc
icebp
stos
or
xor
mov
in
shlb
pop
xor
lret
mov
pop
xchg
push
or
bound
add
xchg
or
adc
cltd
scas
lret
pop
adc
bound
out
sbb
xor
cs
mov
sbb
pop
jp
clc
icebp
mov
insl
mov
or
adc
mov
mov
out
and
inc
test
gs
stc
dec
aas
mov
mov
and
ficomps
fldenv
in
int
or
dec
clc
add
jg
mov
push
sahf
inc
fwait
ljmp
add
ficompl
js
jno
out
movsb
pop
and
bound
rclb
std
xor
pop
mov
repz
sub
inc
xchg
addr16
jg
jge
jge
jno
insb
sbb
fwait
jge
or
mov
int3
flds
cli
icebp
mov
into
mov
add
inc
and
and
fsubrs
sub
dec
lods
das
cmp
mov
inc
cli
pop
add
pop
loope
mov
pop
fisttpl
ss
loop
in
xor
jl
fildl
inc
cmc
inc
icebp
mov
jns
call
hlt
mov
stc
aaa
dec
mov
or
xor
out
pushf
enter
mov
inc
insb
lods
out
adc
mov
adc
add
push
dec
sahf
pop
les
sub
cmp
mov
inc
jae
xchg
xchg
inc
mov
lods
cmpsl
xchg
gs
sub
stos
repnz
inc
out
loopne
rorl
stos
adc
mov
add
inc
sub
xor
lea
int
mov
int3
jmp
jl
pushf
lcall
outsl
sahf
pop
cmp
xor
out
enter
loopne
push
or
lahf
and
pop
stos
xor
sti
add
jns
les
bnd
mov
mov
push
adc
inc
pusha
pop
mov
stos
mov
pop
test
sub
cmp
in
add
inc
or
scas
pop
cmp
mov
mov
sbb
push
shlb
add
xchg
fisubs
mov
push
out
int
fistpl
mov
push
adc
jno
ret
fisubs
mov
add
fld
jnp
push
or
out
jo
sub
adc
cmc
sbb
inc
or
in
sar
lods
sbb
fs
xchg
sbb
mov
sbb
jae
jle
mov
into
xor
rol
and
std
inc
test
jnp
push
rorl
aad
lret
sub
imul
scas
add
and
iret
out
add
incl
call
rcrl
outsl
fstps
cmp
mov
cmc
push
mov
lret
in
test
mov
ds
sbb
xor
cltd
ficompl
mov
fsubrl
dec
scas
lahf
mov
je
mov
lret
xor
add
jne
adc
jb
jl
outsl
adc
mov
inc
sub
imull
add
or
pop
ret
mov
test
imul
push
mov
jno
xchg
push
push
sub
mov
xor
std
mov
ret
mov
ja
outsl
js
mov
mov
xchg
jl
loope
fcomi
or
ret
xchg
sbb
xlat
dec
roll
ficomps
loop
add
movsl
mov
sub
add
xor
pushf
repz
pop
lock
nop
xor
mov
cmp
jp
xlat
dec
rol
aad
adc
in
add
cmp
pop
stos
cmp
aam
push
xchg
hlt
pop
sub
sub
loop
jns
pop
lret
jns
sbbb
mov
dec
push
leavew
or
xchg
add
add
shlb
add
shlb
lea
xchg
les
or
jnp
das
and
jbe
andl
outsb
mov
test
jns
repnz
inc
in
aaa
sbb
or
hlt
mov
dec
aaa
jg
cmp
lock
fldt
mov
sub
addr16
sbb
insl
movsl
and
out
jb
jno
dec
clc
push
xlat
push
xchg
adc
mov
adc
popf
outsb
add
shlb
mov
pop
pop
scas
aad
mov
inc
xchg
mov
insl
pop
cmc
pop
popa
push
cmp
lods
pop
mov
outsb
addr16
inc
mov
sbb
test
cmpsl
ljmp
mov
adc
push
push
sub
js
mov
insl
xor
les
stc
cmp
mov
cmc
cld
fstpl
push
call
or
ret
adc
adcl
mov
repnz
mov
in
xor
push
and
enter
aaa
fs
ss
push
rcrl
jns
jmp
mov
push
test
xor
or
sub
pop
add
lea
mov
es
cwtl
add
mov
sub
mov
push
sub
fsubrs
or
cmpsb
cld
sub
or
mov
leave
inc
dec
cmpsb
xor
cli
jns
inc
jl
push
repz
int
mul
dec
and
nop
sub
aam
sub
imul
outsl
jecxz
sub
fildl
sbb
fistps
mull
loope
insb
jecxz
or
pop
sub
scas
sub
or
sarl
dec
pop
push
ss
aaa
push
mov
xor
jge
cld
je
xchg
loop
dec
hlt
inc
xchg
sub
mov
movsb
int
sbb
insl
inc
rclb
je
xor
cli
cmc
adc
aam
adc
test
daa
gs
cmp
subb
daa
cmp
mov
sbb
aaa
cmpsb
mov
mov
mov
xchg
jmp
cmp
xor
and
das
xor
xchg
mov
jae
xlat
iret
sub
int3
mov
ja
dec
dec
repz
push
xchg
cmpl
popa
xor
jo
not
xchg
mov
jecxz
mov
pop
mov
dec
xor
and
icebp
cmpsb
test
cmp
dec
xchg
repnz
mov
or
mov
repz
sbb
jle
xchg
or
jb
cmpsb
pop
popw
andl
cmp
cmp
xchg
in
push
and
jb
pop
inc
mov
add
dec
popa
in
out
into
imulb
pop
xor
xchg
xor
mov
sbb
pop
daa
mov
loop
pushf
cwtl
rcl
in
xor
pop
xchg
mov
out
jecxz
fcom
mov
aad
add
arpl
jae
jmp
out
in
sbb
and
jmp
pop
jno
out
or
clc
sbb
enter
nop
fstpl
ret
xchg
fsubr
jo
inc
cmpsl
add
xor
cmc
fwait
inc
and
fidivs
pop
mov
or
adc
mov
sahf
fisttpll
dec
clc
ljmp
daa
punpckldq
scas
cli
jns
data16
add
xchg
cld
push
aad
int3
sub
loop
xor
pop
push
mov
jle
lds
mov
adc
loopne
pop
push
fisttpll
lods
lea
and
xchg
out
lcall
mov
fistpll
add
dec
mov
add
cmpsl
repz
aad
jae
mov
push
sub
fxch
test
test
insb
push
mov
pop
and
out
shl
mov
xor
loopne
add
mov
mov
adcb
imul
or
push
sti
dec
xchg
daa
hlt
pop
and
addr16
mov
mov
lods
int
cmp
repz
insb
xchg
jbe
push
inc
notb
cld
icebp
sbb
xchg
scas
mov
adc
into
sub
push
sub
jg
or
test
jne
pushf
fsubs
cmp
fnstenv
adc
adc
fxch
bound
outsl
add
sub
aam
rclb
add
mov
mov
push
inc
testl
stos
cwtl
jno
mov
bound
and
shll
add
or
and
stc
pop
imull
lahf
push
adc
inc
lea
aad
sub
int3
cli
mov
mov
sbb
and
xchg
or
push
bound
adc
xchg
bound
in
dec
addl
out
push
shlb
or
add
rcll
or
fdivl
and
lods
stos
ljmp
push
cmc
call
xor
inc
lcall
xchg
and
xchg
xchg
pop
mov
aad
cmp
in
jae
push
out
inc
pop
mov
sub
int3
into
mov
pop
jp,pt
cmp
mov
fistl
dec
mov
sahf
pop
out
and
jp
pop
mov
mov
ret
mov
pop
dec
sahf
pop
loopne
cmp
mov
mov
pop
mov
add
add
in
xlat
movsl
std
ret
shll
xchg
sbb
fmull
inc
sbbb
xor
icebp
ret
gs
sbb
and
or
pop
pop
dec
mov
sub
pop
movsb
sbb
ss
push
add
lock
enter
sub
xor
jno
fidivrl
sbb
sbb
pop
add
mov
mov
adc
loopne
xchg
inc
xchg
dec
cmp
test
dec
xor
fimull
ja
aad
test
xchg
outsl
mov
dec
pop
add
fsts
and
sub
cs
adc
sub
pop
rcr
pop
add
ficompl
stc
mov
movsl
dec
loopne
or
gs
jo
insb
lret
insb
ret
cmp
inc
or
xchg
push
into
sub
pcmpeqb
cmc
les
xor
mov
and
mov
push
xchg
iret
js
push
test
xchg
dec
cltd
test
mov
jmp
and
jbe
mov
inc
mov
cmp
popa
sbb
and
xor
jae
mov
test
cmp
adc
push
aad
mov
aam
mov
call
outsl
and
sarl
adcb
data16
out
loopne
sub
add
xor
mov
dec
jecxz
testb
jmp
dec
outsl
jmp
push
es
cmp
cmp
call
sti
fwait
lcall
loope
das
xor
push
cmp
sub
mov
ss
in
pop
fistl
pop
icebp
mov
ljmp
icebp
sahf
lret
lds
jae
mov
mov
mov
scas
cli
fistpll
std
cmpsb
or
cmp
orl
popf
inc
adc
int
or
lods
jecxz
orb
xchg
pushl
lea
jo
clc
and
pushf
push
in
inc
pushf
repz
sub
mov
movsl
xlat
sbb
lock
pop
sub
push
inc
inc
jbe
mov
in
mov
dec
ljmp
sbb
stos
lds
scas
xor
mov
in
aad
in
inc
or
outsl
aad
lock
imul
xorb
push
pop
loope
popl
test
test
cmpl
or
inc
popa
dec
mov
popa
lods
testl
rdtsc
inc
int
and
aad
shl
out
aas
adc
jbe
adc
lret
jg
rclb
adc
popa
fldenv
sarb
xchg
jno
rcrl
jae
push
lea
call
add
out
mov
mov
dec
imul
mov
repz
cltd
or
sbb
imul
mov
ss
xor
mov
mov
xchg
mov
pop
pusha
int3
add
mov
jns
and
pop
mov
xchg
sub
pop
or
std
mov
les
mov
outsb
xchg
inc
sbb
fdivrl
push
mov
sbb
ret
xor
fsts
inc
ds
adc
add
jmp
scas
mov
xor
rorl
push
imul
xlat
xlat
inc
push
push
inc
pop
test
sub
add
xchg
outsl
mov
ret
xchg
inc
bound
shl
mov
dec
sub
data16
cmp
sarl
jb
sub
adc
rclb
stc
add
adc
push
pushf
pop
xor
int3
push
mov
hlt
icebp
dec
mov
xor
mov
mov
cs
xchg
push
inc
test
jnp
jecxz
loope
mov
shl
jle
push
test
mov
push
cmpsl
sbb
sbb
and
or
jp
sub
mov
out
fldt
cwtl
inc
jl
int3
and
lcall
fwait
mov
pop
arpl
fdivr
jp
xchg
data16
xchg
xchg
cmp
not
arpl
add
popa
ja
cli
cmp
out
in
enter
push
ret
xlat
xor
cmp
icebp
ret
cmp
mov
popa
sbb
push
adcb
inc
test
sbb
xor
cmp
mov
pop
mov
jnp
mull
mov
xchg
mov
xchg
cmp
fsubrp
or
insb
arpl
cli
std
rolb
and
cwtl
sub
mov
int3
jae
test
jg
push
sbb
dec
xchg
add
sbb
xchg
subl
and
xor
pop
or
mov
pop
add
lcall
popa
leave
nop
pusha
xlat
ret
xchg
dec
pop
andb
daa
cmp
push
xchg
cmp
imul
cld
xchg
movsl
loop
push
es
sbb
mov
fwait
call
loop
popa
adc
stos
adc
repz
add
dec
hlt
aaa
mov
push
ficoml
fsubrs
insl
stc
rclb
shlb
mov
ss
lret
push
sbb
push
dec
jecxz
or
inc
mov
out
pop
add
dec
fsubs
aaa
and
sbb
mov
imul
ds
scas
std
je
out
or
or
popf
cli
bound
loop
sub
xchg
dec
aam
into
mov
inc
ljmp
imul
and
add
rol
in
mov
sbb
xchg
cmp
xchg
repz
mov
dec
jbe
jno
dec
sbb
lcall
sub
lret
aaa
and
adc
mov
xchg
fucomi
cld
sub
inc
mov
filds
push
sarb
pop
icebp
int3
xchg
mov
pop
sarl
jo
rorb
mov
adc
mov
cmp
iret
jmp
repnz
data16
fstps
jle
pop
dec
push
mov
dec
and
sarl
and
and
movsl
cmp
aad
add
jbe
lret
fwait
dec
std
fiadds
pusha
ja
xchg
adc
ljmp
adc
lods
enter
jbe
xchg
and
mov
jb
jbe
imul
mov
jecxz
dec
fistl
cwtl
lods
sub
push
mov
hlt
mov
adc
lods
je
cltd
push
lret
pop
inc
mov
xor
nop
or
movsb
stos
test
pop
mov
adc
je
scas
lods
fildl
pop
add
fisubrs
push
icebp
popf
call
pop
and
out
gs
xchg
leave
jmp
push
lods
push
xor
imul
cmp
sbb
pop
jge
adc
daa
stc
das
sub
push
subb
pop
sub
ret
repz
sbb
jne
std
es
inc
data16
mov
movsl
scas
pop
inc
xor
iret
into
sub
xor
fs
in
nop
pop
jae
aas
sti
and
mov
lods
sbb
mov
js
adc
cmpsb
orl
push
test
fnstenv
add
jb
xchg
xor
sbb
daa
lods
jmp
mov
fimull
adcb
xlat
lods
iret
push
sub
scas
jns
inc
cmp
inc
push
js
ja
rcll
pop
mov
fadd
inc
and
push
repz
dec
repz
out
decb
stc
inc
push
push
inc
pop
pop
sbbl
sarl
stc
xor
fcomps
dec
lea
push
adc
sbb
mov
inc
hlt
mov
int
adc
flds
xor
sar
cs
rclb
cld
mov
into
data16
insl
mov
and
push
jge
xor
xlat
push
fcomps
xchg
lock
dec
negl
push
in
cmp
push
xor
sahf
pushf
xchg
test
out
es
orb
dec
stos
fs
cmp
ljmp
das
mov
shl
pop
xchg
and
scas
cmpsl
cld
adc
aad
and
leave
sub
dec
lea
fldl
pop
pop
outsb
jnp
mov
jl
cmpl
pop
ss
mov
movsb
arpl
in
xor
in
adc
in
das
jb
mov
and
leave
jo
mulb
xor
jno
in
pop
cmp
adc
pop
push
pop
mov
in
xlat
je
sub
adc
insl
mov
scas
out
stos
out
fstpt
insl
jmp
pop
sbb
xor
jg
push
push
ljmp
mov
pusha
adc
jns
push
mov
add
andl
fidivs
and
loopne
ret
fs
mov
push
jle
mov
fnstcw
mov
push
addr16
lret
ret
scas
sub
pop
mov
dec
addr16
sbb
and
jle
scas
cmp
sarl
dec
push
fistpl
sti
jnp
mov
xchg
cmp
jns
mov
lods
popa
pushf
push
dec
ljmp
xchg
shlb
sbb
pop
ss
fists
jae
sti
test
sub
daa
mull
push
sub
jge
test
dec
push
push
leave
pop
jns
mov
ds
inc
arpl
mov
aad
outsl
popa
cmp
popf
leave
pushf
inc
adc
add
pop
push
leave
lcall
adc
sub
jno
jno
xchg
aam
movsl
add
js
out
jb
push
sub
xor
jbe
stos
and
in
push
xor
mov
fistl
outsb
push
pushf
xchg
jg
sub
nop
xchg
push
hlt
lea
pop
frstor
je
fcmovnbe
add
inc
push
out
loop
inc
lea
scas
pusha
add
cmp
mov
incb
arpl
lcall
ss
ds
pushf
pop
and
cltd
sahf
jne
mov
cmp
lods
movsb
add
fidivrs
mov
test
out
add
jp
leave
call
pop
vpcmpgtw
test
aaa
pop
xorl
pop
pop
pusha
sbb
lods
and
shl
sbb
test
pop
movsl
lcall
into
mov
out
mov
mov
sbb
mov
cltd
and
loopne
sub
mov
nop
xchg
mov
negb
adc
adc
popa
sub
xchg
and
sub
lahf
insb
pop
sbb
inc
sbb
nop
adc
mov
mov
dec
cmp
cld
call
xchg
leave
jle
dec
es
pop
iret
adcl
dec
aam
dec
loopne
pop
push
pop
in
pop
mov
cmp
cmpb
push
pop
in
xor
ss
out
sub
sbb
imul
xchg
fildll
in
pop
inc
fnsave
mov
pop
or
or
in
push
pop
mov
mov
mov
xchg
std
sbb
add
cmp
leave
push
push
bound
mov
leavew
sub
adc
add
outsb
lahf
mov
arpl
add
lahf
add
mov
icebp
in
xchg
or
fimuls
ret
cld
lcall
pushf
xchg
out
pop
push
or
mov
inc
xchg
lock
lcall
pop
inc
cmc
jbe
dec
mov
mov
rol
mov
loope
jl
stos
add
lods
cmp
lcall
movsb
xchg
mov
popf
xor
jo
loop
and
cmc
mov
loopne
js
aam
sub
into
in
mov
test
lret
jno
cmp
inc
xchg
or
mov
popa
fiadds
div
push
imul
cvtps2pi
imul
mov
stos
jl
jo
pushf
adc
pop
test
lds
add
lods
pop
sbb
xchg
scas
adc
sub
notb
hlt
aas
gs
mov
bound
out
daa
sub
into
addr16
daa
and
inc
inc
mov
ret
negl
push
insb
fwait
aaa
cmc
and
addr16
dec
loop
sti
adcb
xor
mov
jle
add
xor
addr16
pop
outsl
xor
pushf
add
jle
xchg
mov
mov
mov
sahf
push
mov
and
add
inc
sub
cmp
inc
pop
sbb
mov
xchg
test
vmulss
cld
pop
call
fildll
mov
aam
arpl
shll
mov
mov
dec
mov
cmp
out
adc
mov
dec
cs
mov
cmp
dec
cmp
sub
xchg
sti
nop
sbb
xchg
fsubl
shlb
push
lods
mov
iret
jbe
dec
lret
aaa
repz
in
pop
xchg
inc
push
and
cmp
adc
int
clc
xor
mov
inc
scas
mov
lods
sbb
inc
das
dec
xchg
frstor
fstps
cltd
sub
xchg
push
pop
lods
test
je
dec
test
push
fdivrl
mov
popf
or
xor
mov
fdivrs
push
adc
sarl
mov
cmp
mov
mov
and
sbb
jp
in
ss
and
dec
pop
mov
mov
sbb
push
out
lea
fwait
mov
popa
loope
inc
or
cmpsl
gs
sbb
inc
and
jae
mov
xchg
rcll
dec
ret
mov
push
push
lods
mov
xchg
ljmp
lds
and
xor
dec
xchg
imul
in
in
push
pop
cmc
popf
mov
inc
xchg
sub
jno
and
inc
pop
push
dec
xor
cmp
clc
xchg
sub
jecxz
xchg
mov
lock
arpl
adc
movsb
fmull
insb
shll
xor
mov
lcall
das
sbb
imul
inc
cmpsb
dec
sbb
les
or
jbe
ret
dec
popa
js
shll
mov
sbb
jns
cld
fistpll
cli
mov
jnp
mov
dec
lret
cli
xchg
lock
add
mov
xchg
cs
dec
mov
jl
outsl
adc
rcrb
jp
int3
sbb
add
jl
hlt
rcrl
dec
mov
pop
cmp
xor
dec
call
jle
ja
add
cmp
leave
dec
add
sbb
ret
jecxz
push
stos
push
lret
mov
dec
fs
mov
stos
sbb
outsb
mov
call
lea
in
shl
pop
imulb
jg
or
mov
ffree
mov
sbb
xor
fcomi
add
out
dec
mov
mov
das
push
rcll
int3
jne
lahf
sub
add
and
outsl
jmp
adc
sub
xor
adc
xor
inc
mov
lea
int3
jg
inc
xor
inc
call
mov
inc
inc
push
sub
mov
or
int3
insl
pop
adc
hlt
es
push
test
shll
lret
sub
fistl
mov
inc
enter
dec
add
cmc
and
adc
add
xchg
lods
cwtl
or
test
push
arpl
and
mov
inc
lret
and
push
pop
dec
mov
xchg
push
jns
loope
jb
or
sub
inc
cmp
lahf
push
fs
inc
and
bound
push
cs
out
add
jne
into
call
fcoms
push
leave
out
dec
repz
imul
sub
mov
mov
daa
lret
sub
xor
jb
and
lock
loop
addb
or
sub
loop
pushf
int3
mov
sub
ret
ret
and
pusha
mov
daa
cmpsb
dec
cmpsb
pop
insl
mov
pop
shrl
or
xchg
xchg
test
push
push
mov
hlt
pop
cwtl
loop
push
or
and
adc
rcrl
repnz
inc
cmpsb
mov
or
jge
outsl
mov
and
mov
add
das
and
je
in
pop
fistl
sub
xchg
je
mul
add
xchg
add
adc
mov
mov
jnp
xchg
aam
lock
inc
and
xlat
and
jbe
stc
adc
dec
in
icebp
xor
xchg
mov
popa
pop
addr16
roll
sub
push
mov
xor
adc
sub
lock
or
and
adc
sahf
sbb
bound
ss
ja
sbb
ret
dec
mov
mov
aam
push
sub
sbb
mov
and
mov
ret
push
sti
inc
or
push
or
jl
sbb
cmp
pop
add
xchg
mov
xlat
sbb
clc
push
add
cs
push
aam
add
pop
in
insl
pop
jle
pop
ljmp
or
mov
stos
pop
lea
mov
push
xor
pop
lock
or
popa
aaa
push
sub
stos
les
sub
test
in
jl
mov
incb
dec
leave
mov
fidivl
cmp
xchg
imul
leave
cmp
cld
push
lds
fiaddl
movsb
cmp
xchg
xor
add
insb
sub
fldt
imul
mov
push
xchg
es
sahf
dec
rolb
dec
pop
jae
jecxz
loopne
dec
ret
push
in
fcmovnb
xor
push
adc
jno
icebp
jecxz
pop
rcl
inc
mov
outsb
and
and
cmp
aas
add
outsw
mov
dec
addr16
es
imul
and
fcoml
or
movsb
and
and
lea
adc
les
sbb
mov
sbb
mov
jne
test
ror
jnp
jb
lahf
in
sbb
cmp
and
lods
xchg
or
or
insl
ja
cmp
xchg
and
ja
xchg
xchg
inc
mov
mov
or
xchg
repnz
adc
loopne
sub
pop
fsubs
inc
or
mov
incl
test
mov
andl
mov
adc
aaa
jae
orl
pop
mov
call
test
clc
push
sub
sahf
test
fildll
stos
sub
dec
pop
push
sbb
cli
daa
mov
mov
cwtl
push
int3
pusha
jo
adc
jbe
add
pop
cltd
idivb
sub
mov
pop
jg
test
mov
push
cli
sbb
shlb
and
lods
rcll
add
add
mov
sbb
mov
push
cld
sbb
dec
mov
iret
cmpl
and
mov
js
jae
popf
in
mov
jp
rorb
mov
and
sti
bound
stos
inc
int3
or
xor
fsubp
mov
jnp
test
out
pop
inc
fmull
adc
push
jmp
xchg
fistl
dec
out
pushf
push
test
jb
out
xchg
insl
xchg
adc
and
mov
dec
inc
inc
in
mov
bound
mov
sub
dec
cltd
or
inc
cwtl
sub
inc
movd
outsl
or
push
mov
jne
pop
popa
loop
jle
push
gs
cli
imul
jecxz
inc
mov
xchg
stos
fs
ret
xchg
push
and
in
add
dec
hlt
add
adc
into
add
imul
in
push
int
pop
ror
shll
orl
rolb
arpl
sbb
xchg
call
jno
mov
imul
mov
inc
jl
sub
inc
jp
add
je
mov
xchg
lcall
in
loope
dec
sub
mov
jo
mov
mov
ja
stos
movsl
jge
shrb
imul
inc
jo
fiaddl
xchg
push
enter
jmp
mov
lahf
stc
adc
sbb
mov
addr16
mov
and
sahf
dec
gs
stos
popa
icebp
push
push
dec
jne
call
adc
mov
pop
sub
push
xchg
push
arpl
mov
xchg
loope
int3
shrb
aaa
orl
clc
cmc
adc
cmp
add
das
out
jle
out
sahf
sbb
idivl
cld
imul
mov
test
mov
mov
xor
mov
sub
lret
sbb
lret
aad
lcall
ffreep
in
ss
enter
xchg
ret
lds
jge
push
lds
fs
inc
adc
ss
std
mov
insl
xchg
xchg
lods
lcall
or
fwait
pop
sub
rcl
push
xorb
pop
gs
xor
repz
mov
xchg
xchg
aaa
je
or
bound
and
mov
dec
repnz
std
in
xchg
jo
movsl
es
cmp
inc
fildll
cs
jecxz
xchg
lahf
mov
cmp
mov
jnp
dec
negb
popa
sahf
fdivs
fcoml
mov
js
xchg
sarl
push
dec
ret
incl
inc
fs
pop
cs
test
mov
iret
fwait
js
mov
movsl
xlat
hlt
ret
fisubrs
or
inc
pop
sub
jl
out
pop
mov
sbb
and
mov
les
cmp
neg
sub
xor
mov
mov
sub
outsb
stos
mov
es
sub
rcrb
ret
popa
pcmpgtb
and
xor
and
fadds
notl
loope
mov
pop
jl,pt
mov
push
push
testl
adc
mov
les
push
aad
cmp
fisttpll
dec
imul
add
daa
xor
push
loopne
out
stc
out
xor
fsts
out
cmpsl
pop
mov
adc
rcll
dec
jno
mov
out
lds
popf
addb
jp
pop
push
pop
aaa
xor
pop
imull
pop
aas
mov
xchg
daa
mov
outsl
pop
lea
ljmp
test
fisubrs
mov
aam
push
dec
inc
mov
int3
sbb
dec
adc
mov
jl
inc
outsb
mov
adc
pop
dec
sti
jno
xchg
cmc
inc
sbb
mov
sub
mov
mov
in
scas
adc
into
add
lret
and
push
fsub
xchg
dec
jns
aas
inc
jnp
mov
jecxz
in
and
scas
les
sub
jbe
mov
mov
inc
loope
test
leave
or
popa
out
out
xchg
sbb
sub
repnz
sarl
push
addb
xor
inc
mov
stc
inc
and
adc
xchg
add
jns
dec
adc
mov
divl
pop
fdivrl
lret
dec
flds
es
jnp
jbe
sbb
xchg
inc
int3
loopne
out
push
shlb
psubusw
pop
mov
test
adc
in
scas
or
mov
mov
push
leave
sub
leave
push
adc
int
or
xchg
mov
adc
xor
in
enter
xchg
stc
rol
or
pop
mov
push
das
fwait
push
cmpsb
sti
xchg
pop
and
mov
imul
jge
sub
je
and
mov
ret
mov
gs
jo
cld
idiv
stos
fwait
mov
psubusw
adc
data16
push
adc
sub
inc
jge
andb
mov
insl
cmp
jmp
xchg
and
sti
mov
add
jo
sti
jle
sbb
lods
xor
je
push
sti
inc
orb
ret
jns
cmc
mov
iret
je
ja
negl
inc
lea
movsl
adc
vcvttps2dq
rcr
int3
xchg
rclb
mov
adc
pop
inc
cmpsb
fs
leave
insb
dec
mov
std
or
and
adc
xchg
jmp
lock
push
sahf
movsl
mov
and
es
gs
inc
ror
xor
jbe
aam
aad
cmpl
dec
test
sbb
pop
divb
fcomi
leave
lods
in
fsubr
jnp
jo
scas
jo
mov
subl
insb
or
cmp
and
mov
ret
out
pushf
stc
inc
clc
jecxz
adc
ficompl
addr16
mov
js
or
mov
mov
outsl
adc
in
imul
fstl
adc
js
mov
xchg
hlt
pop
add
daa
and
cmc
mov
or
sar
inc
xor
mov
mov
std
and
adc
nop
aaa
jb
aas
mov
jle
push
stos
test
repnz
in
test
shlb
xlat
ds
in
adc
lds
pop
cli
mov
xchg
pusha
jbe
add
jo
aam
fdivrp
movsb
cli
mov
arpl
fisubs
adc
adc
jae
and
mov
fidivrs
aad
or
dec
sub
pushf
insb
fwait
scas
fstpl
clc
xor
dec
and
pop
and
xorl
xor
js
jle
mov
push
dec
lahf
mov
scas
mov
adc
pop
loop
pop
aaa
das
dec
test
movsl
push
fmull
sti
adc
popf
mov
pushf
jb
inc
jnp
sbb
mov
xorl
insl
test
and
pop
insb
and
sbb
sarl
add
out
fcoms
mov
push
int
inc
sbb
mov
icebp
or
xchg
adc
add
mov
pusha
push
sub
mov
daa
sub
in
mov
movsb
cmp
subb
mov
xchg
fnsave
lods
std
ret
outsb
neg
sub
mov
stc
or
xor
enter
nop
inc
mov
ss
sub
icebp
pop
shlb
gs
adc
call
in
add
push
fs
and
cltd
and
sahf
jns
xchg
add
mov
push
push
pop
lcall
mov
or
sahf
aaa
rorl
les
push
jo
test
and
and
xlat
daa
in
nop
fldenv
sub
jno
inc
adc
sbb
sub
out
in
and
fnsetpm(287
jnp
in
out
sti
lock
inc
xor
inc
adc
stos
fidivs
mov
jmp
fstpl
mov
jmp
add
int
fdiv
inc
insb
push
sbb
lcall
int
and
xchg
dec
sbb
flds
cwtl
fldl
mov
mov
inc
les
rcrb
adc
sbb
or
pop
pop
orb
adc
repz
pop
add
xor
xchg
mov
fcomps
mov
cmp
or
adc
scas
shl
inc
add
repz
sub
add
in
insl
or
or
inc
out
bound
popa
sarl
jg
shll
xor
adc
xlat
ja
ret
insb
xor
push
push
mov
inc
scas
les
dec
pop
repz
dec
xchg
pop
insb
xchg
mov
loope
sti
pushf
repz
test
and
dec
push
sbbl
sbb
pop
js
cmp
mov
mov
aas
fistps
sub
add
inc
mov
pop
aaa
sbb
lss
pop
push
lahf
cltd
xor
popa
xchg
mov
xchg
outsb
vminps
mov
fstps
sub
ds
shll
push
pop
scas
pop
mov
or
xor
cs
jecxz
sbb
rcl
sahf
loopne
inc
lock
xor
xchg
mov
push
bound
jno
lods
out
sbbl
sub
pusha
mov
mov
subl
and
fldl2e
ja
std
icebp
daa
cwtl
jo
xchg
adc
testb
mov
pop
jmp
pop
dec
lds
in
mov
fmul
lret
pushf
cli
jbe
test
data16
fwait
dec
mov
fbld
sub
mov
pop
cmp
cwtl
in
push
mov
imul
scas
sti
lcall
pusha
xchg
cwtl
inc
ficompl
cmp
xchg
mov
pop
jbe
push
jae
jge
arpl
push
loope
mov
pop
stos
fldenv
jecxz
arpl
and
xorl
lret
jbe
sub
add
shll
dec
leave
lcall
push
sub
cmp
scas
outsb
fucomp
stos
push
and
sbb
lea
inc
jae
jne
pop
aaa
jns
jecxz
test
mov
leave
push
lahf
popa
mov
movsb
ljmp
mov
mov
dec
in
mov
ja
mov
or
rcll
out
shlb
add
cwtl
repz
xchg
xchg
sub
fsubr
test
std
jae
push
pop
mov
add
xchg
pop
lret
mov
push
pushf
ret
inc
ja
sub
adc
loopne
mov
inc
jg
mov
mov
or
jbe
into
and
mov
imul
or
cmp
nop
pusha
jle
fs
sbb
add
xor
xchg
fbld
jno
ret
popa
pop
jle
pusha
test
inc
je
pusha
hlt
xchg
xchg
inc
mov
push
adc
jne
ljmp
je
add
add
dec
orl
bound
mov
push
fwait
pop
inc
in
pop
pop
xchg
std
adc
jecxz
cwtl
js
daa
sahf
nop
popf
shlb
mov
sbb
out
fwait
cmpsl
cmpsl
or
push
push
push
add
shl
xchg
ret
xchg
push
dec
rorb
add
fcomps
loope
stos
mov
xchg
and
rcl
push
mov
faddp
rcr
fdivs
sti
sahf
repz
scas
popf
push
inc
mov
dec
add
pop
dec
ret
sub
and
sub
inc
loopne
sahf
xor
lods
scas
sub
jae
cmp
fmul
sahf
push
arpl
or
aad
imul
adc
mov
and
arpl
inc
repz
adc
hlt
push
shll
mov
push
push
sub
pop
imul
add
add
repnz
pop
or
out
push
add
lret
inc
adc
loopne
dec
gs
cmpsb
adc
lods
aas
sub
adc
cmp
test
jmp
pop
shr
push
xor
or
aaa
jmp
xchg
lds
ss
movsb
sub
pop
out
add
sbb
push
mov
add
cli
mov
insl
in
add
mov
loopne
inc
xchg
loope
cld
push
insb
mov
imul
out
adc
fidivrs
loop
or
lea
arpl
outsb
mov
mov
xchg
sub
cmp
imul
xor
xchg
pop
jne
movsl
dec
mov
out
out
xor
fisubl
xchg
xchg
mov
xor
fimuls
sub
add
push
nop
lods
push
adc
add
inc
cwtl
xchg
popf
add
bswap
sbb
push
mov
dec
jle
push
sbb
mov
inc
or
jl
push
test
cmpsl
mul
mov
stos
xchg
filds
addr16
jg
and
aad
in
out
and
test
jne
mov
dec
in
test
dec
jo
arpl
iret
dec
sbb
outsl
dec
loopne
test
loope
cwtl
movsb
cltd
leave
mov
call
pop
fsubrl
repnz
cmp
jb
imul
int
clc
jo
repz
push
in
adc
and
xchg
sti
push
ja
mov
sbb
pop
pop
add
xchg
test
xor
imull
loope
jo
jp
loopne
mov
mov
xor
lds
xchg
xorl
add
mov
jp
mov
pop
ja
dec
mov
jge
cmp
fdivs
outsb
pop
pop
push
pop
cmpb
adc
in
in
mov
lcall
add
mov
mov
lods
pop
scas
loope
sub
cld
and
inc
lods
xchg
pop
sahf
sub
mov
pop
push
push
in
cmp
addl
mov
in
mov
fnsave
mov
fistpl
mov
stos
sub
dec
pop
pop
outsl
mov
mov
neg
inc
xlat
lret
repnz
ficompl
fcoms
jecxz
cmpsb
imul
loop
mov
fsts
sarl
sub
ret
shrb
popf
insl
pop
mov
push
fistl
into
cmp
xor
adc
into
dec
inc
pop
mov
imul
cmp
sub
out
mov
int
jo
ret
testl
repz
add
cmp
and
cmp
movsl
adc
cmp
push
add
call
es
lea
and
jnp
insl
in
movsb
add
pop
in
int
xchg
jns
mov
clc
xchg
lret
pop
outsl
mov
add
das
jne
inc
xor
jle
fbstp
sub
imul
js
jl
xor
sbb
sbb
push
cs
adc
mov
cmp
cwtl
imulb
inc
sbb
sbbl
and
and
lahf
mov
inc
aaa
or
xor
movsb
push
fs
shll
aaa
bound
fwait
je
sbb
jl
test
xor
mov
add
pusha
or
jbe
sarb
fiaddl
mov
xor
test
pop
push
pushf
or
sbb
adc
scas
inc
sub
mov
and
pushf
mov
fistl
adc
jg
ds
inc
xor
sub
imul
xchg
sub
add
xor
fldt
push
mov
fsubrs
xlat
mov
test
data16
cli
jne
and
out
xchg
cmp
sub
aaa
ror
mov
rcll
jg
xor
xchg
mov
mov
cmp
dec
mov
or
push
sbb
and
dec
jns
test
lods
iret
or
fsubrp
ljmp
fisttps
imul
and
xchg
cmp
sub
dec
in
out
sbb
push
push
popl
imul
xor
frstor
inc
mov
inc
or
pop
dec
aad
push
fdiv
and
loope
pop
sti
out
inc
xor
mov
mov
xor
lods
cmp
inc
bound
mov
gs
sbb
mov
arpl
or
xchg
les
mov
out
inc
sti
adc
lret
in
cmp
cmp
mov
stc
jb
movsb
dec
mov
loop
outsb
loopne
lods
add
mov
popa
data16
cs
add
xlat
dec
in
pop
dec
adc
jnp
mov
ljmp
mov
arpl
fsubrl
nop
icebp
pop
cmp
test
cli
mul
lods
mov
ja
popa
int
dec
testb
push
jp
lret
arpl
sbb
pop
add
mov
pop
push
in
outsb
dec
jnp
jbe
sub
mov
pop
xor
aad
pop
xor
push
inc
lcall
cld
xchg
jno
in
fstpl
jmp
xchg
imul
push
repz
xor
test
cmp
sbb
xor
adc
arpl
adc
data16
gs
jmp
popa
clc
dec
jno
push
sub
out
cld
mov
xchg
outsb
in
ret
test
aam
pop
and
lret
xor
pop
mov
fsub
addr16
add
ret
in
adc
cwtl
loope
mov
dec
jmp
push
jmp
je
aas
js
push
cli
mov
cmp
leave
and
fcompl
iret
push
cs
cmp
les
xchg
aaa
push
aad
or
addl
lret
sub
lahf
fbstp
sbb
mov
into
movsl
aam
data16
push
gs
arpl
push
sub
js
in
add
out
fchs
pushf
pop
jmp
je
lea
add
jg
mov
sbb
divb
inc
mov
cmp
sbb
int
mov
or
loopne
or
test
cltd
rol
or
mov
jne
int
sbb
pop
jns
sbb
repnz
mov
mov
jb
subb
mov
cli
pop
xor
or
mov
inc
xchg
xor
sbbb
int
add
push
inc
and
das
cmp
ljmp
scas
pop
mov
or
sub
mov
and
bound
dec
sub
cmp
std
mov
insl
push
sbb
inc
inc
test
push
nop
cmc
xor
xrstors
or
push
insl
push
sahf
mov
sbb
sbb
and
movsb
mov
jno
inc
dec
subb
fmul
mov
rcr
aam
icebp
je
sbb
xor
out
xlat
mov
inc
mov
fisttps
mov
adcl
daa
jbe
aas
jne
ja
dec
cs
pushf
xchg
hlt
dec
dec
mov
pushf
out
xchg
or
add
cwtl
fisttpl
mov
lcall
pop
sub
push
adc
clc
cmp
lret
pushf
push
sete
daa
bound
xor
mov
xchg
mov
cmpsl
xchg
int3
popf
daa
and
adc
sbb
pop
enter
cltd
mov
xchg
push
ss
ss
fadds
cmp
adc
fmuls
mov
adc
mov
jnp
dec
or
mov
stos
xor
cmp
dec
gs
sbb
sbb
mov
add
cmp
push
mul
add
incb
imul
aas
std
push
test
les
in
pop
lcall
pushf
cmp
and
pop
call
mulb
ss
std
movsb
mov
cmp
jp
stos
pop
pop
icebp
lahf
cmp
shl
ficompl
mov
in
ret
daa
aaa
push
mov
std
dec
pushf
jl
jp
mov
push
leave
in
rcrl
jnp
jge
hlt
mov
notb
mov
popa
and
sub
out
test
mov
mov
adc
stos
push
sbb
push
mov
and
pop
pop
pop
cmpsb
lea
pop
pop
jl
mov
or
mov
mov
add
lods
sub
add
fmull
mov
movsl
inc
cmp
fs
pop
push
mov
js
lcall
mov
push
inc
mov
sub
inc
jns
mov
jg
jmp
shll
inc
repz
adc
aaa
cmp
push
mov
sbb
jne
negb
add
cli
mov
sysexit
push
mov
fmull
std
jp
cmpsb
sub
push
shlb
mov
fcoml
aaa
mov
dec
sbb
mov
repz
or
inc
fstpl
loopne
stos
mov
mov
inc
pop
cmp
jmp
or
mov
cmp
mov
stc
clc
pushf
stos
xchg
xchg
adc
and
lods
sub
or
or
xchg
sub
sahf
jo,pt
pop
out
inc
pop
jle
and
das
jp
insb
stos
sbb
std
sub
jb
lods
popf
test
call
mov
lods
xor
cmp
fildll
addb
cld
xor
xor
addr16
xchg
movsb
iret
mov
daa
cmpsb
or
push
inc
xchg
dec
xchg
pop
lea
push
or
cmpsl
jne
cmp
int
cmp
orb
mov
mov
sarb
dec
xchg
mov
shlb
cmp
adc
mov
lcall
jne
mov
dec
jb
add
sbb
cmp
shrb
pop
enter
aam
sub
repz
lcall
inc
jno
mov
push
out
inc
pop
mov
daa
xor
mov
dec
popa
push
mov
mov
push
rcr
xor
loope
mov
mov
or
and
pop
mov
add
mov
add
lods
mov
icebp
push
mov
test
mov
out
sub
mov
lea
jmp
mov
jae
in
fidivl
aad
jp
push
cmpsb
inc
push
mov
mov
scas
or
mov
jbe
daa
shlb
mov
aad
xlat
shl
outsl
cmp
movsb
enter
repz
push
adc
not
dec
adc
push
xor
cltd
mov
daa
fwait
adc
xor
das
ss
inc
data16
add
stos
xor
mov
clc
lret
arpl
mov
sti
add
daa
movsb
inc
sbb
lret
push
xchg
add
test
int3
pop
cmp
adc
or
adc
push
addb
cmp
mov
cmc
shlb
cmp
jnp
jbe
sbb
jge
les
jp
push
mov
popf
mov
lea
je
loop
scas
mov
pop
jl
popa
push
arpl
mov
mov
mov
xchg
and
sub
mov
cwtl
jp
xor
or
out
loopne
sub
movsl
dec
in
add
out
cmpb
mov
pop
das
stc
aaa
add
shrb
ds
push
mov
imulb
pushf
stos
cs
pop
loop
clc
mov
cmp
mov
bnd
gs
jae
sahf
sti
cmpsb
outsb
aad
mov
pop
cwtl
stos
das
xchg
xor
push
call
out
pusha
mov
setp
mov
dec
dec
pop
push
int
pop
sbb
in
dec
je
xor
and
loopne
subl
push
into
add
pop
aaa
jmp
orb
repz
ljmp
pop
out
lds
lahf
pop
ret
add
xchg
adc
ds
in
fildl
push
mov
outsb
adc
aaa
jnp
xchg
nop
std
fcmovbe
add
je
loop
push
fwait
adc
repnz
or
notl
dec
push
pop
push
cs
dec
in
inc
lret
sub
ficompl
rorl
dec
leave
sbb
sbb
and
sbb
cmp
sbb
nop
lret
bnd
mov
mov
inc
lods
js
xor
repz
add
rcl
dec
mov
or
sti
and
repnz
xchg
fwait
test
push
xchg
sbb
xlat
test
add
aam
icebp
push
daa
in
insl
inc
loop
orl
popf
ret
fistps
bound
fwait
mov
jl
stos
fmuls
imul
andl
in
stos
mov
dec
pop
int
loopne
add
or
mov
out
push
sbb
ja
sbb
lcall
loope
mov
in
add
gs
cmp
jecxz
xchg
cmpsb
cwtl
nop
mov
test
xor
in
shl
fsubl
lahf
add
push
add
mov
pop
mov
sub
std
fidivrl
push
lret
inc
xor
adc
int
jne
test
out
xchg
and
cmp
loope
scas
add
aas
dec
push
mov
cwtl
test
and
test
or
mov
add
and
test
sub
adc
ss
in
adc
push
xor
test
sahf
inc
sbb
xor
sbb
and
je
cmp
out
fcmovnbe
adc
test
icebp
insb
cld
inc
cli
aas
adc
movsl
ljmp
ja
sbb
cli
or
dec
pusha
sbb
pop
pop
mov
sub
pop
xchg
mov
pop
jo
inc
mov
fs
andl
pop
pop
mov
aas
call
fisttpl
and
scas
and
dec
pop
add
jl
cmp
out
shlb
xor
popf
jne
mov
mov
mov
outsb
je
mov
add
lahf
sbb
fnstenv
cmp
lods
or
lcall
jae
or
xchg
sahf
mov
insl
pop
mov
clc
std
push
inc
lea
inc
loope
xchg
jmp
ss
es
insb
xor
clc
inc
jo
push
or
mov
inc
mov
loopne
and
loopne
xchg
aad
jg
cltd
js
in
xor
jle
cwtl
stos
scas
iret
lods
addr16
lret
mov
sbb
fisttps
arpl
mov
cs
insb
pop
cld
xchg
push
jle
aaa
fsubr
out
iret
inc
call
cmpsb
dec
xchg
mov
dec
mov
shrb
pop
cmc
sarb
stos
mov
mov
jg
cmpsl
and
pop
cmp
cltd
pop
dec
outsb
out
shlb
jl
mov
cmp
gs
push
je
mov
inc
inc
scas
cmc
pop
arpl
lods
mov
dec
xchg
js
mov
repz
sbb
dec
or
jmp
mov
inc
and
adc
repz
sbb
jmp
adc
call
xchg
inc
bound
leave
xchg
add
inc
xchg
xchg
xchg
sub
lods
lcall
pop
jmp
loopne
arpl
jp
fcmovnu
iret
sub
and
pop
jb
sahf
xor
lahf
mov
push
xor
scas
fstpt
rcr
out
and
rsqrtps
add
mov
div
popf
sahf
cld
out
adc
nop
pusha
push
push
push
dec
mov
aam
push
sbb
or
cs
mov
add
clc
add
sub
imul
nop
cmp
sub
lret
sub
pop
dec
jns
xchg
mov
xor
dec
mov
in
jge
scas
mov
dec
std
icebp
cld
jp
dec
pmulhw
add
jno
mov
or
movsl
mov
dec
sbbb
daa
inc
orb
popl
rcr
jo
inc
xchg
jno
aam
pop
pop
lods
aas
loopne
js
sti
sahf
stc
jns
int
imul
pop
adc
mulb
imul
mov
sub
pop
cmpsl
aad
inc
and
testb
cmpxchg
jp
fildll
rolb
jle
jbe
jecxz
mov
cmp
inc
arpl
pop
mov
pop
push
stos
or
inc
loop
mov
add
cmpb
inc
fbstp
xchg
aas
add
repnz
lock
inc
jg
iret
sub
jb
jecxz
js
xchg
outsb
xchg
mov
rcll
scas
jae
cwtl
enter
in
jmp
push
movb
lds
popa
xlat
adc
dec
aas
cmc
jmp
fldenv
push
mov
fildll
es
sahf
stos
pop
sub
out
jmp
push
add
cmpb
loopne
shll
dec
pop
int
sbb
mov
adc
dec
inc
xchg
push
out
movsb
mov
sub
mov
and
sbb
dec
sti
jne
or
out
mov
jmp
push
movq
fistpll
mov
lahf
inc
or
aam
mov
jecxz
jge
push
addr16
stos
xor
fwait
mov
mov
xor
inc
mov
mov
movsb
pop
pusha
xchg
out
aam
enter
testb
jnp
and
mov
sub
add
ret
jle
es
hlt
enter
xor
popa
dec
cmpsl
lock
sti
sbb
pop
out
add
pop
mov
into
and
outsl
cltd
xchg
mov
xor
sti
roll
xchg
fists
sbb
mov
das
add
movsb
jno
cmp
out
lock
fs
mov
faddl
push
push
icebp
xchg
push
push
imul
lea
mov
fs
fwait
xor
fadd
icebp
mov
popf
imul
mulb
adc
shr
addb
jge
mov
mov
stc
iret
mov
pop
imul
mov
aaa
outsl
inc
xchg
mov
shrb
leave
loopne
std
stos
mov
scas
push
pushf
dec
nop
xor
push
pop
sar
mov
and
icebp
add
dec
arpl
or
imul
and
daa
pop
ret
jp
js
sbb
add
arpl
loope
vrsqrtss
enter
xchg
sarb
cmpsb
test
xchg
incl
sub
fadd
add
fdivl
nop
addr16
dec
mov
adc
ljmp
dec
fidivl
fiaddl
mov
fwait
mov
jno
sahf
lods
stc
daa
stos
icebp
mov
push
mov
push
outsb
xor
sbb
pop
aad
cmp
fs
dec
ror
dec
dec
push
imul
ja
dec
std
mov
test
lods
movsl
mov
push
popa
lret
bound
jle
mov
ljmp
fs
xlat
and
adc
es
dec
pushf
pop
dec
sub
cmp
add
adc
test
loop
cli
jmp
add
mov
inc
cltd
xchg
out
xchg
aas
fsubl
xor
nop
stos
dec
mov
fmul
cmpl
in
dec
lahf
out
dec
jbe
repnz
scas
push
push
ret
adc
out
push
cli
mov
push
jns
jb
mov
test
ss
arpl
sub
cmp
xorb
ret
jmp
dec
rcrl
mov
iret
repz
loope
xor
adc
fcomip
xor
or
xchg
dec
push
cmp
scas
dec
lret
addr16
push
lods
jl
inc
sti
test
xchg
pop
xchg
xor
jle
dec
ret
mov
stc
shll
push
cmp
scas
jae
pop
test
adc
or
or
jne
mov
dec
aaa
add
fmul
xchg
mov
xor
mov
ret
inc
xchg
cmp
pushf
inc
cmpsb
xor
nop
cld
outsl
mov
jle
insl
sub
fstpt
ljmp
inc
test
cli
lds
daa
mov
leave
pop
xchg
leave
mov
mulb
scas
adc
mov
mov
add
xchg
push
dec
jg
dec
mov
cmp
mov
lods
fstl
enter
dec
test
testb
out
push
iret
jmp
sbb
out
lock
loope
bound
mov
adc
xchg
std
orl
fistpl
fcoml
sub
add
lahf
dec
mov
sarb
mov
cli
scas
xchg
loop
or
sahf
jns
inc
insb
jecxz
test
pop
ret
repnz
imul
inc
popf
xchg
test
sarb
fdecstp
pop
into
insl
xlat
lods
lds
pop
lahf
cli
or
mov
lock
enter
stc
fcomp
cltd
add
out
imul
out
jge
sbb
sbb
shrl
mov
js
out
jnp
mov
sti
imul
mov
and
daa
ret
mov
or
add
es
mov
lret
add
addr16
mov
push
das
out
add
sbb
mov
jns
adc
sbb
lret
cmp
pop
outsb
xlat
jmp
push
ljmp
mov
dec
dec
dec
push
ds
pop
loope
andl
fists
scas
sbb
enter
jae
lock
fisttpl
or
shll
imul
aaa
add
mov
mov
mov
mov
xor
popf
movl
outsl
repnz
sbb
stos
dec
dec
repz
add
out
movsb
ds
jmp
dec
inc
sub
in
sub
outsb
fldpi
sti
cmp
ficoml
xchg
mov
pop
sbb
pushf
lock
xchg
add
add
cmp
std
sti
repnz
bound
inc
jmp
movl
mov
aas
int
jnp
adc
fs
insl
out
and
js
sbb
sbb
lcall
cld
out
ret
inc
mov
cmp
sub
pop
pop
imul
sub
push
cmp
inc
push
mov
mov
cs
mov
adcb
mov
sbb
les
fcoml
sbb
jge
fsts
lret
add
inc
and
inc
push
sbb
push
adc
adc
add
push
jne
push
mov
dec
mov
mov
fldl2e
push
test
test
and
ret
into
add
xor
addr16
std
and
sbb
jmp
movsl
xchg
test
sahf
pop
inc
mov
cmp
cltd
mov
jl
fldt
cli
out
sbbb
mov
dec
loope
or
push
mov
pop
movsl
repz
lods
cmpsl
fiaddl
xchg
sahf
inc
loope
pop
pop
and
xchg
inc
into
std
mov
pop
sub
mov
add
sub
xor
adc
test
and
scas
xor
add
mov
pop
daa
cmp
nop
cld
push
jae
dec
movsl
fcmovnbe
mov
ret
sahf
gs
out
notl
loope
mov
sub
daa
xor
das
notb
mov
ds
test
lret
pop
fmuls
xor
fisttpl
dec
jle
rclb
sub
xchg
adc
or
pop
popa
repnz
std
sbb
xorb
add
shll
int3
cli
cmp
jb
dec
pop
inc
roll
jp
push
test
in
lock
cs
jb
mov
stos
mov
fcmovnu
insb
jno
aas
testb
loopne
xor
sbb
movd
add
mov
daa
xchg
shl
dec
imul
inc
or
push
fistl
pushf
mov
cmpsb
inc
pop
das
add
imul
sbb
pop
adc
pop
inc
adc
sbb
rcll
dec
aam
add
and
sub
push
jae
adc
mov
xor
cmc
jno
ljmp
xor
sti
adc
je
jl
pop
xchg
popa
aaa
fs
and
negl
test
stc
push
in
cmp
shrl
insl
sbbl
into
push
mov
xor
or
lock
mov
sub
mov
sbb
inc
jg
iret
xor
shll
stos
call
jg
sbb
ljmp
ret
add
add
das
xchg
clc
mov
push
movb
cwtl
loope
sub
jle
lret
ret
pop
dec
sub
xor
mov
jecxz
jmp
stos
les
sahf
xor
stos
iret
sbb
cwtl
call
pop
mov
mov
aas
stc
sub
add
mov
leave
mov
mov
sub
dec
dec
mov
adc
mov
jge
xchg
iret
and
inc
ljmp
mov
sbb
adcl
mov
cmp
jb
scas
jl
icebp
pop
out
add
push
add
stc
xorl
bswap
dec
rol
test
xlat
cwtd
pop
sub
jns
mov
inc
inc
and
push
cmp
sbb
shll
xchg
mov
decb
adc
scas
and
mov
and
data16
pop
mov
inc
in
ja
ds
push
lret
loope
enter
push
add
xchg
icebp
hlt
and
jg
stc
pop
aas
push
cmp
xor
mov
hlt
dec
fdivrl
daa
enter
std
sti
pop
xchg
ficomps
dec
xchg
fmull
jl
xchg
cltd
xchg
stc
sbb
xor
jae
mov
mov
not
rorl
lret
push
les
jl
data16
rcrb
mov
pop
shl
push
shl
in
push
inc
call
mov
jnp
jnp
add
inc
lret
cli
jo
jo
add
gs
xor
adc
adc
adcb
popa
setne
push
lods
adc
xchg
imul
arpl
mov
out
mov
pop
pop
lret
sub
aam
repnz
dec
fimull
jmp
add
push
pop
mov
cmp
lcall
mov
mov
cmp
out
xchg
inc
xchg
call
enter
push
xchg
sbb
sbb
sahf
int
cmp
push
add
adc
fprem1
mov
add
push
push
movsl
pminub
mov
push
push
std
fdecstp
dec
cmc
pop
popf
popf
jmp
lods
clc
sbbb
sub
inc
mov
xchg
xchg
mov
or
or
sahf
or
lret
fldl
cmp
fldcw
mov
cmc
repnz
mov
out
bound
inc
xor
push
or
ss
mov
fmuls
ja
dec
pop
adc
inc
loop
dec
pop
data16
xor
inc
push
mov
ds
jno
loope
add
insl
jne
inc
mov
and
jne
add
hlt
xchg
mov
cmpsl
jnp
or
out
in
leave
les
mov
pop
pushf
stos
cmpsl
sbb
stos
sub
divb
stos
inc
or
jp
add
adc
push
aad
jecxz
push
push
inc
arpl
inc
loopne
inc
cltd
ret
pop
sub
dec
pop
scas
add
fstpt
push
pushw
pop
pop
sbbb
cmp
sbb
stos
mov
mov
enter
fs
jo
insb
xchg
xchg
push
jmp
mov
mov
popf
bound
popa
scas
xor
jmp
daa
sub
jbe
test
pop
test
push
ficoml
add
jbe
sub
sbb
mov
lret
cld
popa
push
loopne
xchg
sbb
push
clc
mov
jae
pushf
hlt
pusha
in
sti
or
movsb
fwait
fs
pop
xchg
push
and
pop
add
mov
push
lahf
daa
les
insb
adc
aam
icebp
fdivrl
mov
popf
push
mov
cltd
sbb
fs
pusha
pop
xchg
and
adc
es
jle
mov
popf
mov
sarb
ds
sbb
xchg
movsl
repnz
xchg
or
add
repz
psadbw
pusha
sub
mov
cmpsl
adc
jne
leave
ds
cltd
fcompl
notb
enter
test
lock
sub
inc
adc
mov
and
je
lret
sub
fbld
ret
je
inc
lret
or
inc
jmp
popa
mov
pop
daa
or
jmp
jbe
jno
js
lret
mov
bndstx
push
push
loopne
sbb
jbe
gs
adc
pop
cli
mov
lret
imul
push
and
inc
push
mov
inc
dec
xchg
mov
ljmp
inc
pop
mov
rcrb
dec
mov
xchg
or
jmp
mov
push
cmpsl
jo
insb
scas
sarl
andb
inc
xor
xchg
push
enter
mov
jae
cmpsb
ret
pusha
stc
scas
pusha
out
loope
xchg
xchg
pop
popf
out
data16
lods
enter
jp
into
inc
int
mov
xorb
call
loope
cmp
push
adc
lods
xchg
cmp
rclb
std
pop
mov
fs
lods
movsb
xorb
dec
ljmp
jns
push
jmp
sahf
cmp
pop
ljmp
xchg
mov
mov
sahf
movzbl
mov
sub
dec
inc
fs
mov
mov
sarl
data16
mov
adc
test
and
mov
daa
fwait
out
push
out
cmp
jl
or
push
aad
or
mov
std
pop
inc
out
pop
jg
pushf
lods
add
loopne
add
test
hlt
add
add
and
and
push
cltd
sub
cmpsl
fimull
pop
test
pop
push
fwait
sbb
lret
mov
das
bound
and
and
inc
lahf
fscale
pushf
mov
or
std
bound
jne
mov
lea
or
add
mov
sbb
out
xchg
jmp
dec
aad
in
xchg
shrl
or
sub
pop
push
mov
mov
ffree
push
lcall
push
comiss
in
shlb
out
js
dec
jne
jg
std
pop
stos
jmp
movsb
cmp
daa
out
push
stc
inc
pop
or
adc
cwtl
dec
inc
sbb
movsb
mov
fs
sub
insl
inc
pop
cld
ss
gs
je
shr
scas
sub
pop
arpl
call
shll
pop
jecxz
and
mov
push
cmp
lret
push
add
pop
movsb
lods
xchg
test
mov
pop
popf
inc
and
jbe
sub
pop
jb
clc
in
cmp
adc
push
jp
mov
mov
ss
push
test
pop
shll
and
fsts
adc
pop
sbb
movsl
fucompp
xor
jno
aaa
lahf
pop
jmp
test
xor
adcb
insl
loop
loope
shl
fdivrs
cs
jmp
mov
or
mov
jne
mov
mov
mov
pop
jb
and
mov
hlt
jno
lcall
pop
sbb
int
cmp
shlb
lods
notl
dec
pushf
lock
outsb
lret
in
jb
sbb
mov
lods
ja
xor
fisttpl
aas
out
xor
mov
mov
sbb
gs
inc
sar
cmp
adcl
mov
xor
xor
dec
push
jno
mov
pop
xchg
jo
sarb
add
dec
jge
clc
fstl
xor
adc
jne
imulb
arpl
add
pop
jp
sub
dec
out
lods
pop
stc
std
cltd
out
add
aas
jno
insl
pop
in
pop
pop
imul
bound
in
mov
daa
fcoms
aas
mov
cmp
jne
push
push
xchg
sub
icebp
mov
ja
repz
lock
ret
sbb
inc
push
ljmp
push
mov
and
std
cmp
xchg
sbb
push
arpl
lods
xorb
inc
nop
iret
mov
out
add
mov
xchg
pop
int
call
mov
imul
dec
cmp
addr16
push
cmp
xor
out
int
shl
insb
jae
ljmp
pop
mov
pop
push
sarl
cmpsb
fmull
push
xor
test
lcall
daa
push
cli
ret
cmp
insb
mov
hlt
xchg
xchg
cld
xor
mov
mov
aad
sbb
out
push
test
int3
daa
pop
inc
outsb
mov
inc
push
cs
sbb
pop
lahf
mov
push
push
xchg
mov
jg
mov
or
data16
shlb
mov
xchg
int3
js
movsb
or
push
push
add
ss
sub
push
add
sub
cld
mov
cmp
push
ret
jne
into
add
gs
mov
and
imul
jle
fs
jle
dec
jno
jp
fisubl
sbb
aaa
lods
popa
mov
popa
xor
pop
or
mov
dec
adcb
xchg
push
push
sbbb
lock
mov
out
push
clc
mov
loope
sbb
sbb
push
test
lahf
outsb
sub
addr16
jb
pop
xor
rcrl
insl
js
pushf
dec
sbbl
std
stos
mov
cmc
sbb
test
xchg
aaa
push
stos
or
pop
mov
es
js
jns
push
mov
mov
xchg
lcall
je
xor
or
inc
lock
cmp
cmp
movb
in
lods
mov
aam
std
sub
inc
xchg
jmp
push
test
cli
add
push
pop
mov
shl
inc
cmp
push
cmp
xlat
push
add
enter
gs
js
jo
nop
xor
add
addr16
jmp
xchg
stos
jge
iret
sub
push
inc
inc
cwtl
stos
or
xor
nop
out
pop
sub
and
xchg
push
hlt
test
ret
adc
fdivrs
stc
or
mov
cld
sahf
sbb
inc
push
cmp
icebp
or
xchg
pop
mov
cs
pop
outsb
mov
jle
cmp
decb
test
mov
inc
aad
mov
aam
shlb
jbe
inc
sbb
fdivp
dec
outsb
mov
test
cli
aaa
in
lcall
add
jmp
das
cmp
sbb
jno
in
sub
jmp
inc
inc
xor
or
ja
lret
xchg
pop
jae,pn
rclb
inc
jnp
loope
leave
pushf
pushf
pop
mov
scas
adcb
test
loopne
aaa
daa
mov
adcl
cli
sub
lea
mov
add
pop
in
std
or
xor
jno
dec
xor
mov
adc
mov
cmp
pop
incb
mov
xchg
pop
cmpsl
imul
sbb
aas
hlt
out
scas
sbb
out
repz
push
lea
dec
cld
insl
dec
repnz
mov
icebp
call
in
das
loop
fisttpl
arpl
aam
sbb
pushf
hlt
jb
dec
sub
enter
mov
xchg
push
fldcw
mov
mov
add
bnd
xchg
or
and
mov
testb
gs
or
jle
and
and
mov
shl
lret
aad
in
sbb
rcr
cmpsb
and
inc
xchg
outsb
out
mov
lods
pop
in
lret
cmp
test
mov
mov
cltd
xchg
cmpsl
repz
jnp
stos
jae
fidivrl
fcmove
pusha
stos
xor
inc
rcll
push
sbbl
js
push
pop
into
lock
jmp
and
and
cmpsl
sub
cmp
scas
movsl
leave
add
jecxz
mov
cmc
adc
xor
xorb
lret
jmp
lods
jno
push
or
int3
imul
popf
cwtl
rcl
in
in
jmp
inc
adc
fwait
sti
dec
mov
lods
mov
aaa
shrl
mov
mov
cs
fisttps
nop
inc
push
lea
cmp
and
es
mov
push
xchg
xchg
jmp
shll
es
ret
inc
mov
jnp
movl
pop
or
ret
cltd
lds
mov
loope
mov
push
adc
js
and
add
idivl
test
sub
andb
cmp
aad
push
cld
ss
loopne
cli
fwait
push
sbb
jb
sbb
mov
inc
xor
loopne
movsb
rclb
and
mov
or
add
test
int
xchg
mov
sub
xlat
jno
mov
mov
lods
pop
inc
jle
ss
sarl
dec
push
inc
leave
add
jmp
mov
fcomps
and
dec
mov
mov
sbb
data16
dec
imul
inc
push
inc
fidivrl
loop
mov
inc
xlat
lret
repz
add
lock
mov
mov
xor
lahf
cltd
mov
push
and
pop
les
stos
mov
out
loop
scas
popf
xchg
pop
push
xchg
popa
sti
fldl
iret
in
mov
adc
jbe
orl
cmpsb
subl
fnstenv
xchg
pop
jg
fs
pop
or
test
insb
jo
faddl
cmp
mov
aam
sbb
test
and
xchg
cmpsl
out
sub
mov
lds
mov
jb
jmp
sub
xor
jnp
xlat
pop
adcb
inc
out
mov
xor
mov
xor
add
xlat
fstps
xchg
mov
mov
mov
inc
jo
jle
test
or
cmpl
push
jae
je
ljmp
add
mul
inc
in
mov
les
fldcw
lret
jns
shr
aas
jecxz
js
push
cmp
xchg
mov
or
mov
divl
aad
fildl
xorl
xor
mov
dec
insb
fistpll
jne
das
mov
xchg
jmp
les
pop
mov
and
mov
repz
add
xor
jecxz
test
ficompl
rcr
mov
mov
sub
push
ret
test
jge
mov
mov
lcall
xchg
insb
faddl
add
xor
xor
xor
xor
sbb
sti
mov
out
cmp
mov
jl
mov
jg
shrb
test
fs
push
xor
inc
lcall
mov
push
jmp
inc
push
loope
cld
icebp
mov
push
mov
dec
and
ret
sbb
mov
lahf
je
add
fnstsw
leave
push
sbb
nop
hlt
mov
outsb
data16
jno
test
rcrl
push
mull
in
adc
lods
jl
frstor
mov
dec
sbb
xchg
adc
mov
fdiv
ljmp
or
inc
int3
inc
addr16
leave
test
jmp
and
pop
das
and
subl
mov
inc
popl
lods
add
add
mov
and
test
jle
outsl
pop
pushf
sub
aaa
inc
mov
loope
test
lcall
std
sub
pop
and
add
out
mov
jnp
mov
aas
arpl
jne
push
push
insb
mov
insl
movsb
int3
mov
mov
mov
and
daa
pop
and
mov
push
ss
mov
fisttpl
insb
xlat
leave
and
ret
add
mov
js
mov
repnz
sbb
ljmp
add
add
test
or
mov
jl
in
sub
push
push
mov
ljmp
adcb
cmc
aaa
loopne
pusha
add
aam
sahf
cltd
in
jecxz
jp
adc
cmp
adc
inc
repz
pop
xor
fbstp
es
jg
add
cwtl
repnz
sahf
mov
push
sarb
movsb
imul
sub
cld
dec
lods
test
push
xchg
push
ffreep
rcrb
pop
ss
call
jns
scas
xor
dec
dec
arpl
and
push
ja,pt
pop
clc
jp
pop
dec
mov
mov
sahf
nop
in
mov
lds
push
pop
movsl
inc
mov
adc
dec
sqrtps
jns
or
and
xchg
std
adc
icebp
xchg
mov
shll
and
xchg
jae
push
pop
jle
lret
mov
andl
pop
outsl
mov
ret
and
mov
cmp
stos
xor
add
pop
jle
cmp
fwait
leave
mov
enter
in
stos
xchg
imul
push
adc
mov
jo
push
scas
les
test
dec
mov
push
jp
mov
mov
inc
pop
roll
pushf
cmpsb
les
lret
sbb
lahf
pop
sub
scas
jmp
mov
pop
pop
adc
jg
stc
inc
out
in
cmpsb
push
mov
sbb
pop
pop
mov
xchg
in
sti
scas
cmpb
mov
jb
mov
and
or
or
aad
xchg
cmpsl
fstpt
pop
inc
add
inc
ret
pushf
push
jo
xlat
icebp
inc
cmpb
push
dec
xchg
push
ffreep
mov
mov
cmpsl
sub
sbb
imul
aad
mov
test
repnz
cmp
dec
pop
arpl
cmp
pop
hlt
xchg
mov
repnz
les
jmp
push
pop
mov
cwtl
sbb
inc
insl
xor
lods
mov
js
mov
repz
cs
push
jb
cld
adc
in
sbb
mov
inc
xchg
xchg
jl
add
hlt
nop
mov
fdivrl
or
mov
push
std
xchg
add
shrl
ljmp
push
cmp
stos
or
mov
push
cmpsb
inc
cld
outsb
ror
push
inc
or
jo
sub
dec
add
sbb
adc
test
sub
cmpl
xchg
jle
mov
cmc
out
push
or
pop
imul
into
shl
cmpsb
push
ds
in
or
lret
jecxz
fildll
sub
or
push
loop
imul
jbe
add
xorl
psraw
xchg
fstpl
test
shlb
adc
cmp
ljmp
mov
pushf
xchg
and
mov
test
jmp
pop
fidivs
inc
scas
mov
aas
jge
sbb
repnz
adc
and
xlat
jge
inc
into
dec
lret
imul
ret
cld
cmpsl
insl
jmp
in
lods
insb
imul
icebp
xor
movsb
imul
loopne
mov
inc
xlat
mov
test
lcall
in
icebp
or
dec
cmp
xor
iret
hlt
clc
std
loope
ret
push
add
movsl
xor
lahf
shl
jno
push
xor
jl
adc
das
jae
mov
sbb
pop
stc
int3
cmpsb
add
xchg
push
pop
cmp
dec
into
adc
std
sahf
sub
adc
inc
in
loopne
into
test
sub
pop
loop
dec
mov
dec
jecxz
push
leave
inc
inc
adc
sub
jmp
aas
shrb
sub
addb
inc
repz
jb
push
pop
xor
add
adc
jmp
or
pop
ds
scas
fcomi
out
and
mov
pop
popf
mov
clc
pop
adc
rcll
outsb
aaa
aam
or
push
ret
vrsqrtss
in
imul
movsl
sub
fdivs
mov
or
dec
inc
insl
sbbl
jecxz
pop
dec
and
cwtl
jno
mov
in
ret
shlb
push
jb
lcall
jo
int
lahf
xchg
sub
jmp
sub
mov
fsubrs
imul
xchg
mov
mov
dec
ljmp
sbb
mov
fisttpll
pop
pop
jge
or
mov
loopne
stc
or
ja
mov
xlat
call
push
jo
sub
fs
lcall
mov
inc
dec
in
or
push
sub
and
outsl
rol
int3
std
insb
mov
iret
mov
mov
mov
mov
inc
fsubrl
cmp
stc
cmp
loope
repz
outsl
jecxz
xchg
jo
adc
and
aad
popa
repz
push
ljmp
adc
sahf
pop
roll
jge
inc
cli
shll
mov
aad
lds
and
and
cs
mov
jno
cltd
xchg
out
cmp
lods
xchg
mov
mov
add
gs
push
mov
rcrb
bound
and
xchg
movsb
test
cwtl
lret
notb
inc
jl
sub
sbbl
sbb
xchg
sbb
sbb
mov
iret
movsl
cmpsb
mov
leave
mov
cmc
pop
into
out
mov
out
mov
fidivrs
cmpsb
fisubrl
lcall
lods
sbb
mov
rcrl
fwait
dec
xor
and
sbb
pop
fwait
std
or
cmc
xchg
scas
ja
push
bound
out
fidivs
add
jo
pusha
cmp
lock
add
xor
inc
mov
outsb
lret
pop
orb
jmp
xor
sub
mov
jae
inc
and
out
jne
fmuls
and
xchg
xchg
popf
xor
pop
cmp
push
mov
fstl
or
nop
xor
sti
add
push
ljmp
mov
cmpsb
xchg
or
jo
or
mov
xchg
mov
dec
mov
xchg
rcll
or
adc
add
xchg
test
jo
rcll
jae
xchg
lods
push
mov
xor
pop
js
data16
push
mov
jno
xor
in
in
sub
int
mov
stos
add
lret
xchg
push
sarb
adc
fldl
cmp
pusha
mov
stos
sbb
int3
in
cmp
lds
or
stos
xorl
popf
mov
pop
mov
jl
mov
imul
js
popa
sbb
std
cmp
cwtl
jle
and
movsl
sub
idivb
rorb
adc
mov
js
and
andl
adc
jb
xlat
jnp
sarb
sub
sbb
sarl
faddl
mov
jle
inc
cmp
sbb
jecxz
loop
stos
fs
gs
lahf
mov
es
push
xchg
push
lock
mov
fisttpl
jno
push
add
sbb
mov
add
clc
in
outsb
push
xor
mov
xor
popf
xchg
jg
mov
imul
inc
mov
stos
mov
out
and
lcall
dec
cmp
js
sub
sbbl
ja
lea
aad
push
adc
ja
stc
ds
aaa
push
and
jle
mov
sub
jp
subl
divl
insb
bound
dec
inc
xor
inc
xchg
add
mov
sbb
push
xchg
arpl
repz
faddl
mov
cmp
adc
pushf
fstl
xchg
and
push
rcl
mov
test
mov
iret
or
pusha
sti
and
sbb
aas
pushf
xchg
add
sbb
sub
scas
mov
in
inc
lret
pop
dec
imul
xor
fistpl
cltd
pushl
sbbb
lcall
xor
sub
ret
loopne
push
scas
filds
leave
movsl
fldl
inc
add
xor
lods
xor
out
jb
cmp
lret
mov
addr16
push
cmp
jnp
cmc
push
or
sub
inc
xchg
pop
mov
mov
lds
dec
rorb
mov
out
std
mov
or
repnz
test
mov
jb
repz
xor
out
ds
cmp
movsb
cwtl
dec
pop
adc
mov
sbbl
adc
sahf
test
mov
dec
push
and
and
ss
pusha
inc
inc
enterw
dec
adc
push
stc
jno
cmc
into
xchg
xchg
sti
or
lods
fwait
adc
scas
shl
pop
pusha
bound
mov
mov
addr16
in
imul
sbb
loopne
xor
pop
jne
daa
mov
sbb
xor
imul
test
pop
mov
mov
leave
ja
push
xlat
sarb
fildll
mov
cmp
sbb
loope
ret
cmpsb
shll
shlb
stos
xor
outsl
mov
aam
jo
mov
dec
cmpsl
jno
popw
sub
shrb
fucomip
sbb
sub
inc
daa
push
mov
sbb
inc
jb
xchg
xor
mov
jl
jp
and
dec
out
adc
jno
sub
sbb
inc
cmp
orl
mov
out
nop
sub
adc
loopne
mov
orb
adc
repz
add
push
jb
jecxz,pn
movsb
mov
in
aaa
leave
dec
adc
xor
scas
cmp
mov
xor
adc
ljmp
and
dec
fadd
xchg
ret
or
ret
in
in
mov
adc
cld
jbe
xlat
mov
pop
cmp
int3
jl
mov
stos
cld
mov
test
cmc
addr16
xchg
dec
push
cmp
shll
jmp
or
sbb
in
rcrl
sbb
insl
lds
out
mov
inc
repz
int3
jne
mov
loope
push
mov
aad
call
loop
mov
test
ss
fs
dec
jge,pn
xor
bound
cmpsb
mov
sbb
mov
andl
dec
mov
dec
clc
loopne
mov
push
mov
lcall
js
cmp
gs
stos
fsubrl
mov
fsubrs
pop
stos
jp
nop
add
fistl
or
roll
stos
lret
dec
aam
lods
xor
mov
fisubl
or
ds
sbb
fsubs
test
mov
mov
sahf
push
xor
dec
stc
ret
push
ret
shrl
outsl
mov
mov
or
rolb
push
pop
pop
bound
xchg
int3
and
scas
rcrl
inc
mov
fisttpl
imul
icebp
popf
jbe
ss
out
adc
aas
fs
mov
cmp
ret
dec
imul
int
aad
shrb
ja
xchg
xchg
xor
push
cli
decb
int3
mov
mov
sbb
mov
mov
sti
pop
jl
mov
xor
dec
cmc
daa
stc
mov
pushf
push
repnz
xor
pop
ret
scas
jns
in
incl
mov
mov
bound
mov
sub
inc
aas
push
adc
add
sahf
jge
in
icebp
mov
mov
dec
inc
lods
mov
insl
mov
adc
pop
xchg
test
xchg
sti
lock
and
js
xchg
cmp
aaa
popa
addb
push
scas
mov
mov
shll
adc
lcall
mov
shrl
pop
int3
mov
add
sahf
push
adc
inc
ds
popf
dec
xor
sbb
xor
loop
mov
cld
dec
int3
imul
cmc
pop
mov
add
lahf
fidivs
mov
jl
popa
pop
xchg
inc
stos
outsl
push
insl
jbe
sbb
mov
in
arpl
adc
push
scas
mov
outsb
test
push
cmp
rcll
dec
jecxz
cltd
in
xlat
divl
decb
jbe
stos
ljmp
xor
add
or
repnz
jl
nop
jnp
add
fcom
sbb
push
dec
popf
push
mov
cs
xchg
mov
std
out
cmp
testl
mul
xchg
jo
mov
pushf
inc
jb
dec
repz
lods
cmc
sbb
cmp
insb
sub
repz
xchg
int
dec
jle
mov
fnstcw
jne
cli
mov
stc
sbb
jne
shrb
inc
dec
mov
cwtl
jno
je
fistps
int3
movsl
ljmp
jge
inc
repnz
lret
cltd
les
mov
stc
fwait
fcmove
inc
cmpsb
out
das
adc
loopne
mov
lds
fldt
lds
mov
mov
add
cmp
push
das
ds
dec
xchg
push
sbb
jne
scas
inc
in
sbb
lahf
xchg
jno
lods
fld
xchg
dec
clc
mov
xchg
and
daa
push
jo
pusha
mov
out
mul
mov
dec
mov
push
lods
adc
imull
ja
pop
pop
push
outsb
or
sub
sbb
sbb
cmp
lods
into
or
push
xlat
repz
imul
into
sub
xchg
into
int3
mov
and
fst
lret
pop
arpl
sbbl
repz
pop
loop
adcb
rolb
lret
lahf
mov
in
daa
xchg
imul
xchg
scas
jo
bnd
ds
fsts
insl
bnd
dec
mov
push
data16
test
adc
stos
mov
cmp
jmp
loope
ret
test
fdivs
sub
sbb
sub
bound
cld
mov
xor
mov
bound
mov
repz
int
inc
stos
loop,pt
addb
dec
pushf
lds
iret
std
push
out
das
add
mov
in
inc
xor
xchg
mov
rcrl
pop
data16
cmc
pop
push
jbe
push
cmc
mov
mov
mov
test
das
cmc
ja
mov
mov
or
sub
mov
in
sub
jnp
lods
cmp
movsl
mov
adc
add
xor
lods
pop
mov
inc
icebp
ret
pop
arpl
sbb
das
repnz
mov
inc
sahf
cmpsl
jne
dec
or
into
aad
or
mov
jo
mov
mov
fisubrl
fnstcw
das
ljmp
dec
scas
call
mov
pop
push
jg
mov
inc
fucom
jnp
mov
sahf
outsl
xor
sahf
aad
je
cs
mov
and
lods
sbb
adc
imul
out
jmp
mov
cmpsl
push
lods
das
pop
adc
push
pop
outsl
cld
add
push
sbb
xor
int
pop
xchg
fmulp
xor
aaa
cmpsl
mov
add
xchg
outsl
sub
mov
cltd
ss
andl
insb
out
mov
cmovo
or
xor
cmp
pop
inc
xchg
fcoml
push
xchg
repz
ds
mov
aaa
sti
repnz
pop
cs
shl
push
cmpsl
out
pop
mov
rolb
dec
subb
cmp
stc
in
jg
xchg
sti
fisubl
xor
mov
dec
into
cmpsl
flds
sub
or
out
cmpsb
cmp
fbld
adc
enter
inc
hlt
push
pop
adc
jecxz
add
push
and
mov
pusha
mov
cmp
test
cmp
rorb
popf
ret
add
outsl
aas
test
xchg
push
outsl
jbe
pusha
cmp
mov
xchg
mov
rcl
shll
mov
lods
les
stc
sub
dec
jmp
nop
test
and
adc
inc
xor
dec
add
aaa
add
xchg
orb
stc
divb
mov
add
pop
mov
adc
sbb
inc
xchg
into
out
add
loope
addl
mov
or
mov
ljmp
mov
push
sub
daa
clc
sahf
and
sbb
test
cmp
xchg
add
sarb
mov
in
adc
div
and
mov
out
rclb
test
es
test
movsb
fisttpl
in
cld
cmp
xor
jnp
cmp
push
sbb
jbe
inc
dec
inc
adc
push
mov
sahf
out
fisubs
int
arpl
aaa
out
sub
lahf
in
std
mov
or
pop
addr16
mov
pushfw
xor
xchg
pop
out
lds
add
stos
stc
outsl
pop
and
aad
or
xor
int
or
push
sbb
pop
ret
sti
shlb
jl
adc
dec
movb
add
pop
jb
push
xchg
lods
ret
dec
xchg
adc
push
out
divb
pushf
jmp
cmp
and
xlat
mov
dec
in
sti
lods
cwtl
sbb
test
jg
jb
sbb
stos
dec
xchg
andl
test
clc
lods
scas
push
jecxz
jge
mov
xchg
lret
es
xchg
jl
sbb
push
sbb
mov
pop
roll
xor
in
mov
push
jae
in
adc
and
ret
adc
dec
not
out
lahf
inc
jmp
ja
inc
jle
cmc
sub
jnp
cld
bound
pop
nop
sub
mov
cld
dec
lods
ficomps
or
push
add
jp
fiadds
push
push
scas
cmp
mov
sarl
data16
fwait
call
clc
out
gs
adc
in
mov
jge
xchg
xchg
lods
mov
ficoml
add
test
push
mov
push
popf
pop
fs
mov
fistl
lret
scas
adc
pushf
or
jnp
popf
jecxz
xor
dec
and
orb
xor
pop
aam
bound
xchg
jg
pop
out
popf
add
iret
cmpsl
filds
or
in
popa
push
sti
mov
xor
push
imul
ja
lock
xor
xchg
pushf
imul
pop
pop
bnd
shll
repz
roll
outsl
fwait
push
jne
rcll
mov
je
inc
cli
dec
add
xchg
cs
sub
push
cli
in
out
pop
rorl
push
dec
jno
or
and
imul
dec
dec
mov
cmp
dec
pop
mov
sbb
lret
cltd
mov
push
inc
inc
inc
sbb
mov
js
or
jb
in
outsb
sbb
dec
xor
push
push
outsl
mov
xchg
scas
out
mov
test
int3
pushf
icebp
sbb
imul
lea
ret
push
mov
and
call
xor
add
jg
inc
jmp
pop
xor
dec
or
cmp
pop
shlb
sub
xchg
cmp
xorl
jb
js
xor
pop
jge
add
dec
add
arpl
stos
mov
nop
xor
daa
cmp
and
adc
mov
clc
sub
rcrl
mov
xchg
sbb
lret
xor
mov
in
lret
pop
daa
mov
out
inc
fmuls
rcrb
imul
jae
jp
fs
addr16
mov
adc
rol
xor
lods
mov
dec
sub
sub
xchg
int
ja
addr16
stos
push
loope
adc
stos
js
out
std
dec
jbe
mov
outsb
xor
iret
pop
sbb
jge
lea
dec
ret
addr16
mov
mov
inc
xchg
adc
xchg
dec
mov
in
orb
sbb
daa
xor
adc
lcall
xor
push
jmp
mov
test
adc
rorl
test
or
dec
xor
repz
xor
sub
arpl
inc
repnz
lods
mov
test
mov
in
cmpsb
pop
dec
in
mov
mov
ljmp
jle
rclb
jg
mov
orb
pop
scas
and
inc
sub
lods
push
mov
push
pop
xchg
xor
cmpsl
aas
pop
cmp
inc
pop
enter
sub
inc
sbb
jns
out
hlt
scas
and
xchg
pop
insl
cli
inc
fstl
inc
and
dec
lfs
sub
push
gs
mov
clc
mov
xchg
stos
xchg
icebp
push
rcrb
mov
pop
sub
bound
mov
sbb
mov
sbb
pop
mov
xor
data16
sbb
jp
test
movsl
adc
sub
xchg
rolb
mov
xchg
dec
mov
leave
push
imul
jmp
pushf
hlt
pop
push
nop
movb
pop
fsubrl
push
mov
and
iret
lahf
xlat
imul
lcall
lret
stos
jb
push
fwait
push
je
in
cmp
pop
dec
gs
mov
cmpsl
lds
cs
das
or
inc
dec
pusha
cmp
push
aas
and
cmp
les
xchg
dec
or
repnz
sbb
adc
cmpb
mov
ret
jbe
fcoml
es
cmp
ficomps
xor
dec
mov
outsl
cld
pop
mov
and
add
rcll
xchg
cmpsl
loope
sbb
or
mov
pop
xlat
or
insb
dec
push
xor
add
fcomi
lcall
and
sub
int
add
stos
xor
sbbl
call
loopne
cmp
icebp
shll
test
mov
and
and
roll
aaa
in
fisttpl
cwtl
shll
lea
mov
xchg
jge
imul
in
mov
ds
jmp
mov
dec
add
add
rcpps
inc
pushl
sbb
ret
fisttpl
test
pushf
ds
dec
push
mov
ficomps
jo
lods
mov
in
add
jbe
inc
std
or
cwtl
aas
mov
xor
scas
dec
inc
add
pop
sbb
hlt
sbb
cmpsb
push
lcall
sbb
mov
arpl
mov
mov
mov
je
gs
and
lret
test
pop
jl
mov
xor
out
fimull
add
and
in
movsb
ds
sub
or
test
xchg
scas
mov
vmovss
in
pop
mov
adc
xchg
jb
shlb
outsl
sbb
jecxz
repnz
and
ror
xchg
rorb
pusha
mov
jbe
ds
pop
neg
movsb
cld
xor
scas
inc
mov
cld
cmp
leave
dec
adc
and
int
pushf
imul
mov
jno
add
add
sub
sub
mov
das
xchg
sub
dec
adc
inc
arpl
outsl
std
je
scas
rcl
xchg
lret
xorb
rcll
shlb
pslld
adc
imul
xor
adc
xlat
xchg
lahf
addr16
lds
push
nop
cmp
in
pop
add
dec
mov
lcall
scas
xor
or
daa
pop
jg
bnd
dec
cld
xor
or
cltd
shrb
lods
dec
push
add
fcoms
popf
testl
dec
rorl
xor
push
loop
inc
mov
xor
ja
mov
leave
js
call
les
imulb
std
fistl
inc
movsl
ljmp
sbb
mov
mov
xchg
jno
ljmp
push
popf
mov
mov
jae
pop
inc
into
sub
cli
cmp
cwtl
repz
push
sub
sbb
fldl
fadds
add
iret
movsb
outsb
mov
mov
js
jmp
mov
movsb
es
enter
and
mov
push
fisttpll
adcl
add
xchg
xchg
jl
or
loopne
xchg
sub
mov
or
pop
jge
inc
adc
test
fistpl
push
test
test
ret
push
inc
xor
cmp
sub
inc
mov
and
das
pop
sbb
lret
es
mov
jp
scas
clc
add
xor
sahf
and
fmull
pop
pop
in
pop
leave
and
and
mov
mov
mov
jb
xor
fisttpl
gs
sub
inc
cld
jnp
cmpsl
popa
push
pop
and
cmp
or
adc
aad
shrl
inc
xor
adc
fisttpl
sahf
pop
inc
sbb
stc
loope
mov
xchg
in
inc
movsl
mov
xchg
imul
ficomps
pop
stos
adc
mov
mov
and
into
cmp
repz
inc
pusha
lcall
cli
xor
inc
ret
sub
lret
inc
div
mov
and
add
cmpsl
in
es
pop
xchg
stc
add
js
call
push
jp
mov
shrb
outsl
je
cs
ficoml
sarl
jbe
stc
mov
repz
and
mov
pop
xor
mov
lahf
ret
imul
cld
cmc
xchg
push
cmp
and
or
or
lods
ja
sbb
xchg
jmp
pop
mov
inc
or
pop
rolb
lcall
adc
dec
adc
or
dec
cmp
int
or
ficompl
pushf
mov
stos
mov
cltd
mov
push
add
xor
cmpsb
fwait
lcall
mov
sahf
jb
jb
jmp
nop
dec
mov
movsl
add
pop
sbb
outsl
or
xor
aas
mov
lods
mov
out
sar
mov
cmp
inc
addb
out
lret
rcrl
xchg
pop
or
iret
sbb
sub
iret
add
call
mov
mov
stc
into
xchg
icebp
jmp
xchg
mov
and
jmp
mov
cmp
lods
push
mov
jmp
mov
pop
sbb
mov
rcrl
ftst
mov
push
xchg
sbbb
push
and
add
mov
int3
aad
loop
es
push
cmpsl
das
testb
pop
shrb
loope
xorb
das
sub
sbb
jle
rolb
mov
adc
subb
aad
xchg
rcl
sahf
cwtl
cmpsl
jne
cld
lea
xchg
shll
js
pop
ret
push
loope
push
xor
stos
dec
jbe
leave
and
push
lds
mov
cmp
mov
lahf
xor
sbb
lret
sbb
or
shlb
mov
pop
and
dec
stos
fstpl
dec
dec
popa
test
dec
mov
mov
pop
push
add
loopne
sbb
aas
sbb
push
adc
loopne
sbb
cmpsb
pop
ds
mov
dec
outsb
lret
sub
or
std
hlt
ss
dec
adcl
push
popf
jmp
mov
lods
out
and
flds
lods
xchg
xlat
aam
cmp
lret
cmp
shlb
arpl
sub
adc
out
or
push
and
mov
and
je
lahf
mov
imul
insb
out
xor
into
push
pop
jle
sahf
dec
pushl
ret
repz
leave
or
mov
pushf
pop
and
in
in
push
data16
inc
andb
loop
dec
or
ljmp
push
lods
mov
mov
mov
adcl
das
sub
mov
jnp
lret
jo
dec
fabs
fcmovnu
mov
outsb
mov
nop
subb
iret
std
push
cs
movsl
stos
ret
int3
pop
adc
xorl
loopne
arpl
mulps
movaps
mov
and
jb
fsubrs
sti
inc
pop
fwait
into
mov
js
pop
mov
fs
jno
mov
mov
xor
xchg
hlt
mov
out
movsl
mov
jns
insl
jge
cmc
push
xchg
pop
jne
movl
cmpsb
mov
pop
stos
movsl
cmp
repz
lcall
ss
xor
jmp
pop
add
cmc
mov
mov
sarl
push
mov
xor
mov
clc
rol
mov
test
imul
xor
pop
dec
ds
pop
aas
push
inc
jg
ss
mov
cmp
pusha
out
stos
sbbb
cmpsb
cmp
mov
test
loope
xchg
sbb
jg
xchg
jbe
jg
fs
jns
cmpsb
sub
fwait
into
cmp
stos
jne
ja
aaa
jns
push
pop
xchg
lcall
mov
jmp
rcr
mov
fcmovbe
cli
add
lcall
ficompl
xchg
cli
cs
lahf
es
cltd
cmc
add
les
mov
sub
pusha
rolb
hlt
adc
pcmpeqw
enter
js
jbe
icebp
arpl
out
add
in
jp
lea
xchg
fdiv
push
cltd
test
ret
mov
stos
push
test
adc
in
mov
jp
dec
std
or
sbb
mov
push
jb
mov
inc
push
jbe
fbld
mov
cs
addr16
jmp
lea
mov
xchg
decb
xlat
enter
xchg
adc
sbb
or
mov
sub
arpl
insb
enter
sbb
push
stc
mov
or
or
xor
mov
insl
push
push
outsb
loope
adc
inc
jmp
dec
add
pop
pop
dec
ret
dec
sbb
jne
adc
test
fildll
or
mov
cmp
mov
imul
mov
sbb
fwait
loopne
outsl
imul
stos
stos
sub
add
es
inc
loop
jbe
mov
fdivl
std
imul
cmpl
add
jp
push
sbb
adc
dec
lods
mov
mov
jne
aad
shlb
xor
pop
mov
pop
inc
or
push
xor
cmc
ljmp
sub
les
test
shlb
and
pop
in
and
xchg
int
xchg
xchg
lea
pushf
jp
out
outsb
fdivrs
jle
jmp
and
mov
sbb
hlt
nop
in
test
inc
inc
cmp
sub
adc
rcrb
inc
pop
out
or
in
sarl
test
mov
push
sbb
mov
ss
push
mov
rclb
shrb
fisttpll
div
mov
ljmp
cmc
or
imulb
xchg
lret
mov
test
enter
aaa
inc
pop
fnstsw
and
add
and
sahf
xor
ficomps
xor
push
xchg
push
fcmovbe
outsl
xchg
scas
lahf
cmpsb
mov
or
xor
mov
inc
add
popfw
lods
test
test
xchg
in
sbb
xor
call
xor
pushf
dec
jge
inc
inc
rorb
push
aad
mov
inc
sbb
nop
xor
inc
test
inc
js
jmp
sbb
aas
sbb
in
jb
outsl
add
arpl
pusha
or
loop
lock
int
xchg
mov
je
shlb
jae
mov
mov
popa
adc
dec
lods
cltd
add
sub
pusha
mov
mov
bound
xor
es
imul
fmull
ret
test
loop
push
add
fimull
orl
dec
fs
insb
xor
addr16
pop
popf
cmpsl
in
rorb
xchg
into
insl
movsl
sbb
addr16
push
jnp
js
iret
push
fildl
or
mov
xor
mov
enter
fucomp
sub
mov
cmp
sbb
cs
pop
sub
in
addr16
jmp
mov
sub
xor
in
sub
adc
into
add
mov
stc
push
push
inc
xor
xchg
cmpsb
lret
ds
cltd
jp
movsb
dec
pop
mov
jmp
ret
dec
push
sbb
jmp
mov
enter
and
repnz
push
add
and
ds
pushf
inc
lret
sbb
movsl
loop
pop
pop
or
or
fldt
or
cmp
pop
mov
jbe
in
mov
dec
out
ja
mov
idiv
call
sub
xor
jecxz
mov
out
sbb
es
loop
mov
repz
dec
lods
and
push
jle
pop
test
mov
rolb
mov
sbb
repnz
bound
out
aaa
mov
pcmpeqw
cmp
into
sahf
loopne
ds
pushf
add
xchg
sbb
mov
dec
lcall
push
inc
sarb
xor
xor
xchg
in
icebp
mov
loope
xchg
ja
shrb
sub
jnp
faddl
push
popf
insb
iret
dec
subl
je
fldcw
sbb
loope
dec
cmp
test
and
push
dec
or
adcb
sti
les
inc
movsl
stos
mov
rorl
btrl
pop
test
mov
fldln2
dec
or
sbb
pop
or
dec
sahf
mov
lahf
push
cmp
add
push
sub
pop
sar
enter
mov
stos
popa
mov
out
sbb
dec
add
push
pop
push
test
mov
test
test
stos
push
test
lds
out
pop
ret
nop
adc
cli
sub
add
mov
push
jmp
lahf
jp
les
popf
nop
movq
push
xor
fists
xchg
cmpsb
pop
cmp
rclb
ret
mov
xchg
mov
push
es
dec
xchg
mov
pop
mov
rcll
hlt
pusha
enter
loope
mov
jae
pop
or
xor
push
test
xchg
xchg
inc
dec
jmp
push
pop
sub
icebp
jmp
mov
ret
xchg
push
pop
fidivs
mov
cmp
lods
inc
mov
out
add
adc
xor
mov
cs
pop
test
xchg
popa
insb
jl
out
pop
int3
sbb
bound
in
scas
mov
add
in
shrl
mov
add
pop
stos
adc
bound
repz
mov
ficomps
jp
ret
push
adc
cmp
jnp
test
or
bound
mov
cmp
movsl
jmp
jne
mov
push
nop
cwtl
and
dec
mov
imul
adc
or
sub
cmp
sbb
icebp
pop
dec
push
fstsw
mov
sub
sti
adc
stos
lahf
xor
dec
mov
sbb
sbb
mov
popf
or
ds
movsb
dec
leave
ljmp
pop
jg
xchg
mov
mov
mov
sbb
jb
jns
mov
imul
mov
push
mov
jne
add
and
outsb
fs
out
ret
mov
sbb
push
jp
aaa
pop
and
xchg
cmp
lds
lcall
xchg
adc
fs
das
fidivl
mov
icebp
adc
out
xchg
fdivs
insb
ds
xlat
pop
jbe
pop
adc
out
xchg
das
in
cmp
in
jg
xlat
and
insb
inc
aaa
lds
add
lcall
xchg
xor
adc
popa
js
ja
aam
mull
xchg
cmpsl
inc
mov
sub
pushf
push
inc
shlb
sbb
add
adc
out
xchg
lds
repz
lcall
mov
add
pusha
jno
loope
scas
xchg
test
fwait
outsl
jb
sahf
fildl
pushf
lahf
jno
adc
and
add
ret
or
pop
cmp
lds
inc
outsl
xchg
mov
or
cld
mov
lods
addr16
inc
scas
pushl
sahf
sub
ficompl
cmpsl
push
es
insl
test
imull
adc
cmp
ss
iret
addps
adc
adc
cmpsl
es
fistl
test
inc
or
pop
jecxz
adcl
popf
mov
iret
and
sbb
fsubl
jae
out
sbb
dec
mov
jp
aam
fldt
cmp
fstps
imul
arpl
or
es
int
mov
sub
lea
int3
adc
push
in
dec
push
adc
addr16
mull
loop
in
jle
and
xchg
add
xchg
jno
ljmp
fnsave
test
clc
jae
jne
xor
lods
cmp
mov
jo
and
adc
test
aaa
lret
mov
call
adc
cmp
xor
xor
dec
mov
xchg
fstl
pop
jae
aam
lret
outsl
add
shrb
add
or
lods
or
lds
jg
pop
push
adc
sbb
nop
xchg
xorl
jns
mov
push
push
xchg
testb
or
sbb
sti
mov
mov
pushf
test
ds
sub
repnz
mov
hlt
adc
jge
ljmp
cmp
lahf
lods
pop
dec
dec
mov
aaa
push
mov
call
dec
ret
push
test
pop
repz
add
mov
mov
xor
xor
and
push
xchg
cltd
movsl
lods
push
pop
insb
sbbb
clc
clc
or
lret
scas
fcoml
in
imul
mov
inc
pusha
rcll
mov
and
mov
aam
popa
mov
mov
mov
inc
mov
pop
repnz
sbb
xchg
movsb
fdivr
jo
sahf
mov
jle
cmp
shll
pusha
pop
jb
sub
int3
add
int
push
pop
push
or
or
ds
ficompl
repz
inc
jg
imul
lods
mov
stc
or
in
jmp
gs
call
lock
or
mov
fwait
mov
inc
jge
xchg
bound
clc
inc
sbb
inc
adc
roll
notl
int3
dec
stos
test
aaa
popa
aam
enter
lock
lahf
xchg
mov
scas
int3
mov
and
mov
pop
mov
call
sub
dec
gs
movb
icebp
fstl
jg
insb
xor
outsb
cmpsl
fstp
pop
stc
jbe
cmc
mov
sub
xor
sbb
mov
mov
fsts
aad
mov
xlat
pop
xor
or
pop
jne
sti
clc
dec
or
sbb
mov
je,pt
xchg
mov
out
jbe
mov
adc
aas
push
pop
cld
inc
in
xchg
lods
ja
add
aad
inc
int
push
int
ja
shlb
orb
inc
dec
or
inc
sar
scas
in
and
xchg
pusha
iret
cs
rclb
or
jmp
and
cmp
sahf
or
in
inc
inc
cltd
js
and
roll
sahf
pop
shlb
es
push
push
popa
popfw
jg
pop
or
push
cmpb
filds
hlt
clc
adc
das
pop
jbe
jns
push
insb
mov
xor
lock
push
mov
aam
inc
daa
out
xchg
insb
movsl
test
lret
scas
sti
fcoml
and
dec
sbb
test
mov
mov
mov
or
pop
test
popf
pusha
inc
jns
and
sbb
mov
jmp
ret
cltd
je
mov
push
sbb
repz
out
aas
ljmp
mov
xorl
jle
sbb
pop
icebp
int3
into
sbb
jmp
repz
jmp
aas
mov
insb
xor
mov
es
xchg
test
dec
daa
inc
enter
frstor
xor
xchg
out
mov
push
std
add
fildll
dec
cwtl
lea
push
sbb
std
mov
mov
test
cwtl
dec
fnstsw
dec
ss
xchg
and
outsb
push
bound
cmp
stos
das
xor
psubd
inc
movsb
xchg
sub
push
mov
inc
xorb
frstor
pop
push
aad
aad
mull
shlb
sub
lahf
fbld
cmpsl
add
ljmp
sbb
mov
or
repz
and
inc
mov
xlat
in
pop
into
or
aas
ljmp
lods
rcr
jo
pop
in
inc
xchg
movlps
into
loopne
shl
cltd
jbe
xlat
fistpl
fstpt
in
adcb
sub
ljmp
sub
jbe
jne
daa
cmpsl
jns
neg
mov
or
in
sbb
jae
add
mov
mov
in
inc
dec
aaa
push
adc
popa
push
es
outsb
test
subl
dec
stos
inc
pushf
punpcklbw
cmpsl
cmc
rorl
inc
cli
js
fisttpl
push
loopne
ds
dec
and
jg
inc
rcr
add
sub
nop
xor
jnp
mov
cli
popf
xchg
push
mov
dec
int3
frstor
cmp
fs
sub
rclb
stos
popf
sarl
out
insl
adc
out
add
add
repz
xor
adc
push
ds
jmp
cld
pop
arpl
clc
call
lods
adc
mov
scas
adc
lcall
and
adc
ljmp
xchg
fistpll
js
sti
fs
xor
shlb
mov
sbb
rcl
paddsb
retw
jle
pop
xchg
and
mov
fimull
movsb
stos
in
mov
lcall
cli
cltd
in
push
out
imul
rcll
inc
push
inc
xchg
scas
mov
in
lods
push
rorb
xor
cmp
imul
sub
sbb
jbe
or
out
jbe
xor
rorl
in
fildll
arpl
ss
mulb
xchg
mov
dec
sbb
insb
cld
dec
sbb
inc
mov
jmp
ret
repnz
xchg
fiadds
lods
pop
not
inc
dec
xor
mov
out
test
or
and
test
lcall
cld
mov
repz
xchg
insl
inc
or
adc
sahf
add
pop
aaa
mov
les
movsb
mov
aaa
sbb
mov
xchg
test
pop
mov
iret
xchg
push
sbb
hlt
mov
mov
add
adc
inc
in
jne
ss
push
subl
push
mov
lahf
mov
adc
inc
dec
mov
cmp
cwtl
fisubrl
rcrl
rcrl
stos
sub
lock
out
adc
bound
and
jl
xorl
mov
cmp
sbb
sarl
rcrb
xchg
cli
fldl
dec
mov
push
shll
cmp
test
push
in
bts
push
and
inc
fwait
ret
pop
xchg
mov
push
sbb
push
call
mov
adc
loop
out
or
sub
or
push
nop
clc
mov
test
push
in
adc
mov
push
int
or
loope
roll
or
bnd
test
fldenv
fdivr
adc
push
xchg
mov
imul
scas
cli
jle
xchg
leave
jg
nop
push
js
rcrl
je
aam
mov
or
pop
jle
das
outsb
aas
mov
aam
jle
add
cmpsb
leave
sub
jle
lahf
mov
adc
jg
int3
xchg
sbb
jnp
outsb
inc
mov
lret
test
jbe
scas
or
popf
jne
add
mov
xchg
add
sub
push
pop
rcrb
inc
xchg
push
clc
shrb
mov
sbbb
xchg
bound
xor
scas
push
hlt
fcompl
popf
mov
sbb
cmp
mov
push
cmp
arpl
scas
inc
jmp
mov
sbb
pop
lret
mov
and
test
mov
dec
out
leave
bound
btr
xchg
dec
sub
js
xchg
sbb
xor
mov
daa
pop
cmp
sub
cmp
cs
ja
imul
or
out
into
es
inc
test
out
xchg
out
decl
dec
mov
clc
adc
stc
addr16
mov
enter
push
test
dec
mov
out
out
jno
pop
cmp
fidivs
mulb
int3
push
ja
cmp
div
test
sbb
xchg
xor
lods
or
clc
movsl
ss
xor
and
mov
std
pusha
xor
das
pop
jmp
push
fsubrl
sub
lds
fldl
arpl
jns
insl
dec
ret
jge
cltd
sbb
push
pop
jp
fstps
roll
xchg
daa
ljmp
sub
int
adc
fldcw
adc
jmp
jns
sahf
xor
insl
andl
pop
xchg
dec
aad
mov
ret
sub
jb
and
and
fistl
or
lods
adc
jle
xchg
mov
movsl
aam
mov
shlb
inc
js
push
arpl
lds
shlb
mov
subb
das
test
push
clc
enter
outsb
push
xor
pop
push
mov
sub
repz
dec
or
and
inc
xchg
loopne
fs
mov
push
sub
cmp
stos
incl
dec
scas
loop
pop
pop
mov
call
testb
stos
cltd
xor
shl
call
inc
jge
movb
out
hlt
sbb
xchg
cmp
xor
jnp
shll
xor
insl
mov
adc
scas
jns
in
inc
dec
test
incb
setle
and
out
jnp
pop
imulb
bound
pop
loopne
jb
mov
ds
pop
adc
mov
loope
clc
mov
loop
shrl
js
sub
data16
sbb
dec
cmp
int
mov
daa
cmp
test
inc
cs
xchg
sbb
dec
xchg
in
pop
ja
jne
dec
xchg
outsb
pop
cmp
aad
ljmp
xchg
rcrb
and
dec
push
sbb
sub
mov
xchg
xchg
push
push
push
scas
dec
sub
aas
ss
test
aas
pop
lods
fcmovnb
sub
push
call
cmc
add
mov
add
mov
sbb
cmp
push
push
cmp
inc
mov
push
mov
arpl
cld
scas
and
iret
xchg
push
test
or
pop
into
test
xchg
ds
ror
and
or
fwait
cmp
push
xchg
gs
imul
mov
and
jl
popa
jae
add
push
mov
into
pop
dec
sti
dec
pop
js
and
jg
or
cmp
dec
fildll
enter
adc
push
dec
xor
sbb
or
add
mov
not
hlt
push
sarb
clc
pop
pushf
pop
enter
sub
adc
push
xor
out
jbe
dec
or
js
xchg
mov
xor
lock
mov
jg
lods
sbb
mov
mov
pushf
lret
lahf
movsl
repz
int3
mov
inc
xchg
inc
out
icebp
sub
inc
mov
orl
sbb
add
pop
mov
cmpsl
fadd
out
mov
sbb
cli
leave
cmp
jo
mov
dec
call
dec
mov
imul
mov
lods
push
scas
test
mov
sti
mov
pop
cltd
mov
mov
push
repnz
ds
cmp
push
cs
xor
fildll
std
dec
pop
mov
mov
xor
dec
scas
or
scas
aam
int
add
pop
cmpsl
jns
std
add
in
insl
daa
mov
das
pop
mov
cld
adc
xchg
xor
clc
cmpsb
inc
or
cltd
sub
dec
sbb
sbbl
sti
pop
dec
in
pushl
lcall
cmp
jmp
lret
cltd
cmp
fidivrs
cmp
or
ficoml
sub
aam
sbb
cltd
in
mov
insb
scas
or
cmp
lcall
jg
or
call
xor
cwtl
sbb
mov
adc
ret
xchg
adc
adc
stos
int3
decl
xorb
inc
fistl
jp
cmp
xchg
dec
lods
pushf
in
ret
dec
ljmp
in
mov
ja
mov
lods
dec
xchg
xchg
mov
and
xor
mov
cmp
test
cltd
dec
hlt
andb
and
lods
xor
pop
cmpsl
or
jg
or
nop
push
outsl
inc
jnp
push
jnp
in
inc
jae
mov
stc
in
aas
mov
mov
xchg
rclb
and
dec
cmpl
je
sbb
loope
jecxz
enter
inc
shl
das
pop
cld
les
push
fildl
pop
adc
add
dec
and
sahf
adc
sbb
out
rclb
insl
and
iret
cld
stc
aam
add
push
xor
jle
jnp
rcll
fildll
outsb
das
popf
jge
xchg
xchg
xchg
adc
arpl
dec
shrl
das
mov
add
jns
shlb
imul
dec
aaa
aaa
mov
test
imul
mov
or
add
cmpsl
test
pop
in
jb
inc
iret
rorb
sbb
mov
aam
rclb
pop
test
dec
sbbb
lret
xor
pop
jo
movsb
das
scas
cmp
daa
dec
mov
call
leave
push
push
loop
cmpsb
mov
les
sbb
and
test
in
push
push
mov
je
dec
stc
cltd
xor
mov
pushf
xor
insl
sbb
jnp
jl
pop
data16
or
pop
cmc
jbe
xor
push
dec
fwait
mov
iret
rol
ljmp
pop
jbe
iret
iret
cmp
aam
sbb
cli
negb
inc
xchg
sub
divl
rep
out
mov
xchg
mov
insb
inc
aas
arpl
popf
mov
and
mov
dec
lods
sbb
jmp
lahf
add
aas
sbb
pop
cmp
dec
xchg
dec
pushf
cmp
push
inc
sub
das
stc
aam
ss
mov
sbb
ljmp
mov
inc
and
insl
xchg
cmp
sub
ficoms
push
xchg
inc
mov
sub
push
iret
movsb
mov
fadds
test
popa
sahf
mov
sub
loop
subl
and
shr
cs
or
outsl
aam
mov
rcl
jne
adc
ja
push
lods
push
sarl
and
mov
jmp
aam
imul
jbe
jle
push
movsl
mov
jnp
pop
popf
ljmp
repz
push
ds
out
xchg
into
inc
inc
scas
pop
add
lahf
jno
xchg
mov
push
lds
cwtl
xor
pop
repnz
fdivl
sbbb
lock
jo
jnp
bnd
sub
gs
push
sbb
inc
cmp
dec
lret
lods
inc
mov
ja
incb
movsl
ret
xchg
movl
les
add
xor
aas
imul
dec
testb
es
flds
add
cs
pop
xchg
in
rcll
popa
in
sbb
rol
xor
xlat
push
or
aaa
xor
and
add
ja
jbe,pt
lahf
mov
mov
fs
adc
xchg
push
ss
cmp
sub
inc
sahf
jne
push
sub
add
outsb
cmp
mov
in
jno
adc
stos
shlb
scas
xchg
add
add
mov
out
fwait
cmpsl
lods
lock
mov
mov
jmp
xor
cmp
adc
dec
jmp
fisttps
pop
lea
sbb
pop
movsb
push
icebp
dec
cmc
sub
sub
rcrb
out
cli
cmp
les
sarb
xor
jmp
fwait
mov
or
sbb
inc
mov
ja
cmp
je
insl
data16
andb
cmp
outsl
mov
add
xchg
mov
sbbb
jge
sar
push
es
hlt
mov
sbb
cmp
and
fsubr
bound
fdivrs
stos
or
bound
pop
jo
jne
adc
in
in
cmp
out
int3
cmp
out
dec
jae
bound
stc
clc
inc
push
je
sub
pop
xchg
in
xlat
xor
adc
xlat
stc
sbb
jp
inc
mov
and
inc
cmp
cmp
inc
scas
pop
add
xchg
sti
lods
lret
or
xor
mov
ss
push
jnp
fists
push
cld
popa
popa
pop
pushf
pushw
pop
rolb
in
insb
sbb
inc
jae
jae
outsb
arpl
sub
cmp
jmp
test
ret
or
push
and
pop
insl
loope
inc
mov
ficomps
mov
idivl
jmp
mov
xchg
das
popa
and
lcall
pop
jno
or
sbbl
cmc
iret
cmp
movsb
inc
fisubrl
mov
testb
cld
inc
jnp
push
pop
lock
iret
push
mov
or
mov
testl
jg
lock
leave
cld
iret
cmp
out
das
call
test
gs
jecxz
scas
lods
mov
fistpll
fcoms
out
test
test
sub
dec
imulb
loop
fwait
mov
aad
jo,pt
cs
and
mov
pop
mov
cli
push
mov
jnp
int
push
jmp
adc
outsb
js
rol
mov
jae
lds
rcr
xchg
xor
movsl
cmpsl
pop
push
jno
pop
jmp
xchg
pop
loope
cmpsl
xor
addr16
jae
xor
lods
dec
sbb
out
gs
cltd
into
mov
or
xor
or
scas
fdivl
push
test
aad
pop
xchg
xchg
mov
pop
push
setg
insl
and
cmc
cli
rcrl
les
dec
std
ds
cld
mov
mov
cld
jae
test
cmc
enter
lahf
repz
mov
scas
mov
pop
daa
mov
mov
decb
cltd
cli
mov
add
adc
mov
inc
add
push
negl
ss
mov
addl
jge
fisubrs
xchg
jno
scas
loopne
add
shlb
inc
mov
data16
fcompl
jns
inc
xor
pop
nop
imul
pop
aad
and
es
shr
cmp
jno
and
fldenv
popa
add
loopne
cs
jb
xchg
cmp
dec
add
lret
sbb
das
xor
incb
aaa
push
mov
mov
scas
in
shrl
orb
mov
insl
in
sbb
sub
sbb
cmpsb
sbb
jle
gs
pop
mov
mov
icebp
mov
js
repnz
stos
mov
std
push
xchg
adc
pop
ss
or
pop
sub
or
ss
lret
mov
call
and
popf
mov
sub
mov
jno
das
in
xor
mov
and
mov
push
and
pop
sti
xor
or
popf
int3
dec
leave
push
xor
push
lahf
std
or
xchg
flds
lea
popf
test
or
mov
mov
lret
daa
and
sub
inc
push
lods
adc
popa
sarl
xchg
adc
mov
outsl
addr16
icebp
and
fbld
cmp
jne
mov
or
add
jl
testl
roll
add
sub
jg
cli
sbb
pop
push
push
in
negl
cmp
insb
aam
dec
pop
enter
out
adc
cmp
inc
insl
gs
and
pop
movl
scas
into
jg
dec
jmp
xchg
rcrl
dec
sbb
jmp
mov
in
or
imul
addb
adc
dec
dec
add
mov
mov
push
jnp
dec
pop
add
sbb
popf
std
and
xor
popf
jge
mov
mov
mov
mov
in
mov
or
out
ds
lods
cwtl
test
lods
ret
or
adc
sub
jl
mov
enter
fwait
in
clc
sub
test
negb
clc
out
adc
lods
add
flds
pop
cmc
push
jg
mov
sbb
loop
inc
rcrl
repnz
enter
and
xchg
mov
enter
jo
int3
or
dec
lret
adc
out
shrl
nop
add
cmp
movsl
fbld
jmp
cmpl
sub
push
outsl
add
sti
xor
fistpl
lret
enter
jnp
adc
cmp
sbb
outsb
outsl
les
add
jo
xchg
push
outsb
cmp
jo
lahf
ret
jmp
incl
mov
lea
cmp
pop
rcl
pushf
lods
sub
inc
jecxz
test
js
sti
xchg
test
lcall
mov
in
aam
push
xor
mov
pop
sub
cmp
push
pushf
fisubl
in
jmp
add
jle
cmp
xchg
inc
xchg
mov
mov
jmp
pop
push
arpl
in
sbb
lret
xchg
mov
inc
cld
shrl
mov
cld
or
popf
pop
out
mov
push
insb
imul
mov
fiaddl
jno
fs
fnsave
xchg
movsb
repz
xchg
loope
xchg
loop
xchg
push
jle
adc
cmp
mov
aaa
pop
inc
jbe
or
rcrl
in
sub
or
pop
or
sub
mov
lahf
out
jge
mov
loop
fstpt
and
mov
jg
lret
pop
mov
xchg
es
aaa
lock
jge
aas
xchg
jne
out
push
stos
dec
xor
lock
pop
xor
mov
inc
ja
cmpsl
or
or
loope
jns
pusha
inc
mov
fnstcw
sub
idivb
mov
inc
mov
ss
and
sub
push
or
xchg
stc
inc
xor
pop
dec
test
xchg
shl
cmp
inc
mov
pop
cld
mov
or
mov
ret
or
dec
mov
adc
cmp
jge
cmp
rorb
cmpb
scas
push
and
mov
lds
inc
add
pop
enter
cmp
mov
inc
mov
ja,pt
xchg
sti
pop
xchg
ss
repnz
ja
push
add
leave
jns
sub
popf
adc
push
scas
pusha
lahf
subl
mov
fisubrs
popf
rclb
pop
dec
rcl
stos
lods
adc
add
lea
sub
inc
and
cmp
add
dec
push
push
mov
out
subb
xchg
dec
call
ljmp
cmpsb
imul
jp
cmp
jmp
int3
sub
push
add
mov
mov
mov
daa
push
enter
add
sbb
mov
out
out
sbb
cmp
je
add
jg
sub
js
popf
out
test
cs
ja
sub
ret
xchg
inc
mov
add
cwtl
in
push
iret
xchg
sbb
xchg
adc
mov
cmp
orb
and
xchg
xor
adc
mov
jge
test
jns
cmpsb
arpl
mov
adc
lret
cmp
pop
mov
jg
inc
mov
in
or
adc
arpl
lahf
std
movsl
sbbl
je
pop
movsl
imul
pop
cld
pop
pop
int
add
imul
ljmp
imul
mov
mov
mov
fwait
pushf
or
cld
ficoml
pop
xchg
lret
add
pop
mov
gs
loope
add
push
mov
xchg
int3
mov
lret
dec
cmc
inc
mov
or
orb
mov
nop
pop
mov
shrb
mov
je
cmpsl
push
daa
sti
daa
and
out
jmp
add
mov
sbb
and
lds
pop
fcompl
mov
cmp
popa
pop
shlb
xchg
repnz
loop
out
aad
cmp
std
out
add
xchg
jmp
cmp
notl
push
sub
or
xchg
xor
jl
sarb
insb
lods
xchg
icebp
inc
pop
xchg
push
popa
push
add
push
gs
pop
js
in
push
and
rorl
xchg
xor
xchg
inc
lods
inc
stc
cmp
sahf
xchg
inc
and
jo
movsl
dec
xor
xchg
daa
add
clc
xchg
into
ljmp
lret
jno
out
repnz
mov
mov
and
xlat
cmp
lds
loope
xchg
pop
xor
xor
xchg
arpl
gs
adc
push
mov
cli
cmpb
push
push
iret
mov
sub
pop
stos
pop
mov
rol
inc
aaa
cmpsb
stos
xor
dec
mov
out
push
ret
int3
movsb
imul
or
inc
mov
lods
mov
cmpsb
and
fs
int3
push
sub
mov
shlb
sub
add
decb
adc
jp
or
xchg
je
popa
mov
pop
ret
push
cmpsl
inc
push
cmp
roll
mov
imul
arpl
aaa
xchg
out
out
or
jge
mov
gs
mov
mov
sub
insl
into
pop
adc
stos
test
jl
mov
insb
lods
ljmp
ds
aad
inc
fnstcw
addl
jns
inc
xchg
push
out
icebp
cli
cmpsb
xor
and
lds
je
mov
subb
and
sbb
lock
or
dec
or
jo
pusha
mov
sti
mov
push
xchg
cmp
jns
out
popf
dec
rorl
test
inc
xchg
aas
mov
push
lahf
data16
xor
lods
jecxz
jl
roll
jg
adc
ds
mov
push
mov
pop
sub
shl
xchg
mov
xchg
add
push
inc
scas
cmpsl
in
pop
push
cltd
insb
jne
loope
jns
cmpsl
pop
mov
mov
jg
mov
xchg
ljmp
xchg
jno
xor
jne
inc
xorl
loopne
push
jnp
ja
fwait
mov
cmp
scas
in
mov
out
adc
mov
les
das
ficoms
jae
test
loope
in
cltd
adc
jg
shr
stos
xchg
nop
sbb
mov
movsb
insb
rorb
sti
dec
pop
bound
loop
sbb
mov
test
mov
lret
das
scas
jns
dec
sub
setl
pop
add
sub
pop
adc
jge
pop
scas
clc
inc
test
pushf
ss
es
sahf
lds
mov
inc
sub
movsl
lcall
je
sbb
idivl
dec
dec
and
dec
xor
inc
scas
add
outsl
popf
scas
rorl
or
idiv
aad
cmc
pop
pop
rep
insl
mov
adcl
call
sbb
iret
stos
push
aam
inc
gs
mov
frstor
xchg
cmpsb
jg
mov
push
call
divb
add
mov
push
mov
fwait
jbe
mov
stos
mov
jae
ljmp
or
gs
jmp
push
fwait
stos
pop
or
shlb
into
or
cwtl
mov
xlat
cs
je
lds
insb
sub
sub
push
mov
lods
dec
ja
pop
jns
mov
sbb
je
push
icebp
push
adc
add
mov
ljmp
sub
lea
pop
lahf
push
fdivrs
popa
sbb
and
in
mov
mov
push
dec
scas
xor
andb
fwait
dec
scas
int
aaa
sub
inc
sub
std
inc
test
stos
xchg
cmpl
mov
cmp
arpl
push
dec
std
inc
rorb
popa
sbb
or
push
das
pop
mov
adc
aas
daa
push
sbb
out
mov
sarl
sub
xchg
fimuls
xor
dec
fs
arpl
xchg
ret
sbb
mov
adcl
inc
dec
sub
repz
xchg
sbb
add
xor
je
sbb
sbb
or
mov
sbbl
adc
dec
cmp
loop
or
add
mov
das
les
sbb
and
pop
push
push
mov
shrb
mov
fsubs
fimuls
cmp
not
pop
jae
mov
jle
ljmp
cmp
dec
iret
jae
jae
inc
daa
stc
cwtl
add
or
std
hlt
shll
aaa
cmp
bound
xor
pop
in
pop
jno
scas
movsl
push
push
mov
adc
inc
ds
nop
jge
outsb
mov
addl
mov
jge
shrl
xchg
fists
pop
loopne
rcll
loop
fwait
lock
movsb
imul
inc
push
aas
xor
jns
jne
stc
dec
clc
leave
test
xor
add
xor
addr16
mov
pop
push
and
mov
mov
pusha
or
add
lcall
sbb
mov
push
xchg
js
rcll
jl
pop
adc
stos
sbb
push
sbb
lret
add
fiaddl
sub
pop
mov
jp
rcl
jl
sti
xor
jnp
push
lock
test
dec
add
call
stos
scas
movsl
sbb
aam
fdivs
popa
loopne
aad
cwtl
push
mov
push
cld
sbb
ja
and
jmp
test
or
lea
cmp
inc
test
fcmovnu
xchg
stc
mov
xchg
push
iret
or
push
pop
ja
cmp
xor
imul
stc
mull
inc
lret
divb
loope
xchg
shl
scas
int
mov
push
lret
dec
jno
scas
jne
dec
je
out
lock
sub
subb
repz
loope
cmp
xchg
out
sbb
push
dec
cltd
dec
aam
sub
outsl
lds
shl
out
sub
lea
xchg
sub
pop
sbb
push
pop
adc
negb
leave
loopne
popf
jl
pop
xchg
int
sub
stc
mov
mov
sub
lret
xchg
lods
pushf
jecxz
inc
sbb
xor
cmp
push
mov
shll
add
mov
ds
es
xchg
adc
lock
lods
push
xchg
and
sub
and
lods
hlt
or
scas
fistpll
xor
out
std
ja
or
lcall
sbb
pop
shrb
mov
xchg
fldl
insb
ret
mov
sub
ljmp
dec
xor
popa
pop
adc
or
lcall
dec
loope
xchg
stc
sub
add
cmp
pushf
stos
pop
imul
lock
ljmp
jmp
sbb
in
cmp
add
dec
push
or
ror
pop
add
insl
daa
pop
sbb
leave
icebp
cmp
dec
push
pop
or
cmc
adc
add
inc
xchg
pop
xor
notb
lods
push
rcll
mov
and
jl
sbb
lret
jecxz
xchg
push
rorl
adc
fucomip
xor
jp
sbb
out
divl
push
jae
out
add
pop
mov
xchg
pop
movsb
lds
mov
and
sbb
cltd
fwait
add
push
pop
daa
or
pop
dec
mov
adc
jmp
mov
into
lods
xchg
cmp
xchg
cmp
ret
pop
pop
mov
fnstenv
sti
mov
xor
lea
getsec
out
sti
xor
stos
es
std
int
imul
jle
mov
mov
loope
ret
xchg
sbb
mov
scas
fcomp
or
dec
push
hlt
cmc
fildll
icebp
push
in
aam
vmovups
por
or
sub
add
in
ret
inc
cmp
imul
pop
in
aas
cmpsb
shll
jbe
xor
mov
pushf
mov
ds
clc
sahf
test
push
jns
hlt
test
enter
mov
das
sbbl
stos
repnz
adc
shr
loope
fists
clc
lods
fcomi
mov
mov
fcoms
fiaddl
xchg
jo
mov
call
sbb
outsb
das
mov
fsubp
lcall
inc
clc
fwait
aaa
lcall
aad
arpl
testl
sub
ror
jmp
in
push
xorb
aaa
adc
iret
int3
roll
rcl
mov
add
sbb
std
mov
adc
imul
ret
and
inc
pushf
dec
loope
mov
mov
sub
scas
or
scas
iret
cmp
xor
pop
repnz
push
test
push
ficompl
fisttps
sbb
push
sub
jle
adc
out
lea
cmp
or
popf
loop
icebp
imul
loope
cmp
mov
push
rcrb
outsb
sub
pop
sbb
cmpsl
xlat
xor
ja
xor
dec
xchg
push
xchg
mov
xor
gs
cmpl
pop
inc
repnz
insl
xchg
js
xchg
mov
jg
xor
fists
dec
xchg
js
xchg
cmp
cmp
pop
dec
icebp
popa
in
inc
pop
push
cld
shl
and
dec
shl
into
sahf
push
push
mov
insl
popa
sbb
arpl
inc
lds
jl
push
xchg
loope
leave
mov
adc
cld
xchg
out
xchg
pop
out
aam
divb
jecxz
or
adc
and
movsb
lods
pop
loopne
ss
dec
bsr
shrl
pushf
in
stos
add
stos
sahf
loop
aam
out
jns
insl
xor
stc
pop
repnz
xchg
popw
adc
popa
pop
lret
add
adc
xorb
and
push
sbb
addr16
outsl
xor
jno
adc
add
dec
push
cmp
imul
pop
stc
adc
shll
cmc
mov
in
mov
adc
push
sarl
call
xchg
popf
add
pop
enter
sbb
decl
or
sub
sub
stos
hlt
cs
add
fcoms
fldl
popf
cli
jecxz
mov
push
stc
add
mov
stc
xor
mov
jg
mov
inc
push
adc
cmp
mov
gs
mov
lcall
lret
mov
bound
cmpsl
into
pop
movsb
andl
pop
mov
xchg
fidivl
test
inc
hlt
xchg
and
mov
cs
or
jb
add
sub
fs
iret
cmp
sub
lock
push
xchg
mov
imul
out
lret
add
mov
sbb
sbb
notl
xchg
xchg
push
scas
gs
out
les
adc
jle
scas
mov
stos
int3
sbb
rclb
leave
mov
lret
addr16
in
cs
movsl
jns
into
mov
das
pop
xor
adc
pop
outsl
cmp
arpl
push
add
mov
inc
bound
cmp
and
int
adc
lds
cmp
loope
dec
cmp
lcall
popa
movsb
js
jmp
sbb
sbb
cmpsb
imul
sahf
popl
es
add
dec
out
shl
std
outsl
sub
push
adc
mov
adc
push
outsl
lock
daa
cmpsb
mov
popa
jg
xor
lock
push
imul
push
cli
stos
in
jg
cmp
cmp
js
js
bound
lret
jnp
sub
mov
daa
nop
or
xchg
cmovle
push
fbstp
adc
xchg
add
xchg
pop
adc
inc
sbb
stos
in
insl
out
lcall
mov
cmp
mov
inc
lcall
sbbb
lret
scas
sbb
into
clc
shrb
je
sbb
and
cwtl
jecxz
jge
movsl
add
jbe
xchg
ret
sbb
pop
adc
mov
inc
and
push
xchg
sub
nop
test
clc
xor
adc
adc
xchg
shll
in
aam
xchg
mov
dec
pop
or
cmp
je
lcall
aam
stos
xchg
pop
int
cmc
and
cmp
and
lahf
test
cmp
dec
icebp
out
out
xchg
sub
lret
and
es
outsb
cmc
in
rorb
mov
push
pop
aas
arpl
aam
inc
imul
lcall
pop
aad
movsl
insl
js
fucomi
loopne
xlat
dec
lret
lds
mov
ss
mov
pop
fisttpl
jno
cmc
pop
adc
js
roll
rcl
add
mov
scas
sarl
sbb
mov
in
in
fidivrl
push
ret
cmp
mov
or
sbb
in
xor
jle
std
sub
fstps
cmp
mov
push
scas
xchg
jecxz
insb
sbb
rcrb
and
pop
xorl
push
leave
sahf
cmp
sub
inc
ficoml
pop
inc
mov
cwtl
popf
repz
mov
mov
mov
sahf
push
sub
xor
inc
sbb
dec
mov
xor
roll
ja
frstor
scas
outsl
adc
push
mov
push
mov
jnp
adc
or
adc
xlat
arpl
scas
push
icebp
jb
aas
inc
cmp
mov
pop
jne
mov
dec
outsl
inc
and
xor
in
mov
hlt
insb
cmpsl
ss
pop
push
int
rolb
xlat
push
push
adc
push
pop
sbbb
int
dec
xchg
in
mov
fdivrl
or
sub
mov
and
mov
cld
pop
mov
fimull
ds
ljmp
iret
test
fs
dec
dec
subb
cmp
jae
dec
push
xor
sbb
pop
movsb
test
push
ret
test
adc
je
xchg
sahf
cmp
popa
arpl
int3
inc
xchg
stc
inc
mov
jecxz
and
sub
ret
idivb
movsl
je
sahf
sub
and
mov
ljmp
fsubr
pop
mov
mov
fcoms
adc
inc
push
loopne
in
push
jmp
stos
fwait
jge
pop
mov
mov
es
popf
cmp
xchg
and
jp
lds
sbb
pop
movb
stos
cmpb
js
jp
stc
pop
cmp
mov
les
xchg
das
mov
push
nop
in
iret
sbb
mov
js
push
pushf
rcl
mov
xor
jecxz
imulb
xlat
fdiv
ret
es
dec
cwtl
popa
mov
mov
adc
mov
shlb
mov
jmp
rclb
adc
add
sbb
and
cmp
xor
jne
lret
int
ljmp
loop
jl
icebp
and
and
lds
in
stos
lds
pop
test
mov
dec
fildl
outsb
stos
xchg
mov
movsl
test
pop
in
outsb
and
ss
aas
int
push
call
nop
data16
sbb
dec
and
mov
or
lock
adc
and
ss
mov
jge
aam
xor
jmp
xchg
out
push
je
ja
pop
fldt
mov
or
mov
clc
pop
imul
sbb
outsb
xlat
sbb
jbe
mov
fistl
add
mov
cmpsb
sub
sub
js
inc
ljmp
mov
mov
enter
mov
cmp
das
std
cld
dec
imul
mov
in
mov
into
scas
insb
cld
mov
into
mov
mov
or
xlat
mov
add
pop
loop
jecxz
mov
xor
cmpsl
pusha
outsl
xor
add
xor
mov
inc
arpl
inc
push
jmp
sbb
lcall
ret
inc
shlb
sbb
leave
and
aad
dec
int3
out
shll
lret
pop
xlat
inc
mov
and
inc
xchg
jo
lods
cmc
or
dec
pushl
jae
cld
aaa
mov
or
mov
cmpsl
mov
mov
test
and
rcr
cmp
loopne
testb
inc
and
aas
add
cmpl
push
pop
mov
cmp
sbb
movsb
dec
sbb
pop
rcll
mov
xchg
cmpb
mov
arpl
or
stos
pop
mulb
test
xor
popf
std
lcall
sub
jl
gs
fisttpll
push
and
sbb
mov
rcrb
jmp
push
inc
sbb
xchg
sub
hlt
enter
icebp
adcl
mov
mov
aaa
sbb
cmp
mov
gs
mov
mov
lret
mov
push
into
sub
mov
jl
aaa
aas
in
int
ljmp
or
add
add
cmp
in
scas
xor
lds
cmp
ljmp
out
inc
jle
push
push
or
ss
mov
lret
xchg
fldcw
inc
imul
ret
js
or
jo
in
mov
cli
or
inc
or
ss
and
std
cltd
dec
gs
fcmovnu
xlat
dec
push
sahf
jp,pt
test
pop
sbb
cmpsb
gs
filds
push
lods
sbb
rcll
repnz
add
mov
ss
scas
inc
fistl
mov
loopne
ja
lret
xchg
and
cmp
dec
insl
mov
mov
add
pop
cmpsl
push
ret
cmpsb
jae
sahf
push
imul
mov
loopne
push
push
sub
fcoms
jb
je
mov
mov
adc
adc
inc
push
orl
ljmp
mov
pop
lret
inc
ret
jecxz
hlt
cltd
std
pop
pop
mov
aam
or
loope
and
roll
push
mov
xchg
ds
fwait
lds
sbbl
repz
push
scas
xchg
insb
repz
xchg
inc
pop
daa
outsb
push
fsubl
ret
nop
stos
mov
pop
mov
dec
xor
and
jmp
call
xchg
lea
dec
sbb
push
lock
fnsave
pop
xlat
cwtl
int
cmpsb
or
mov
inc
dec
sbb
push
fmul
add
xor
xchg
sub
xchg
int
cmp
inc
rcrb
movsl
out
fs
mov
mov
sbb
sahf
sti
mov
shlb
add
jg
cs
push
fsub
fists
loop
push
imul
add
and
rcll
lods
pushl
out
inc
outsl
mov
in
in
sub
or
and
insl
insl
sbb
fwait
adc
adc
xor
aas
lcall
add
aam
add
sub
mov
mov
jl
push
pop
daa
fsubp
scas
fs
and
sub
cmp
inc
cmpsb
or
jno
pop
sbb
inc
pop
sahf
pop
and
or
int
cmp
adc
jnp
xor
xchg
aam
mov
mov
fwait
sub
notl
in
lahf
pop
stos
lea
mov
mov
outsl
cltd
stos
xchg
inc
or
jg
mov
dec
sbb
and
das
orl
dec
loop
sub
jo
mov
push
jge
pushf
cmpl
lds
sahf
rcr
insb
arpl
mov
and
mov
icebp
loope
scas
inc
inc
add
subb
shl
xchg
adc
ret
sub
mov
loopne
stc
cmp
es
lcall
xchg
out
lea
xorb
sbb
mov
dec
ljmp
jo
repnz
loop
mov
push
push
dec
add
sbb
out
ss
dec
xchg
sub
jge
loop
mov
inc
les
arpl
inc
cmp
dec
push
xor
pop
sbb
jae
sbb
test
mov
xchg
cmp
arpl
lret
sub
jge
ds
jmp
push
inc
in
push
pop
lret
fisttpl
push
xchg
or
jnp
or
sbb
xor
lods
insl
inc
sar
fnsave
rol
push
xchg
daa
insb
pusha
inc
movsl
js
scas
imul
loopne
mov
push
sbb
test
push
push
shll
inc
sbb
loop
and
popf
aas
and
mov
arpl
jecxz
sbb
or
movsb
movsb
xor
xor
mov
mov
sub
stos
adc
leave
cmp
or
fmuls
pop
subps
dec
jbe
ja
cmp
jno
cmc
inc
lret
and
sbb
test
pop
out
cmp
jbe
sub
mov
movsb
jne
imul
mov
fmulp
mov
leave
add
push
dec
addb
ret
rcl
pop
mov
mov
cltd
stos
insl
sbb
je
mov
in
jecxz
mov
mov
push
xor
jecxz
sbb
pop
ss
push
cld
into
xor
lret
push
mov
xor
or
sbb
outsl
mov
push
dec
hlt
cmp
iret
xor
mov
mov
movsl
cmp
push
jg
jl
lea
push
ljmp
and
cmp
mov
mov
fisttpl
dec
shrl
mov
xlat
cmpsb
and
add
sub
add
std
ret
les
arpl
jo
into
imul
popa
or
fidivrl
int
and
jo
and
pop
mov
sbb
or
scas
dec
mov
es
sbb
push
mov
cmp
fmul
lods
inc
mov
ds
sub
neg
stos
subb
cli
aaa
and
xor
sbb
daa
inc
sbb
jg
dec
dec
in
mov
mov
push
test
jecxz
insl
in
fstl
imul
nop
je
adc
mov
je
push
jecxz
push
and
imul
xchg
out
mov
faddl
in
out
into
xor
xlat
stos
dec
jecxz
enter
mov
lods
in
mov
cmp
pushl
jno
jb
cmpsl
sbb
ljmp
cltd
test
lods
xchg
stc
shl
xor
jb
dec
outsb
pop
scas
inc
pop
cmpsl
jmp
arpl
lods
mov
insb
xchg
xor
out
stos
int
fistl
jle
cmp
pop
pushl
sbb
fsubrl
inc
cmc
jbe
iret
mov
sbb
ret
pop
sub
pop
daa
lret
mov
movsb
sub
adc
neg
xorb
mov
cmp
movsb
nop
fistpll
mov
xchg
arpl
enter
ljmp
mov
nop
inc
xchg
mov
ss
pop
loopne
pop
cmp
int
push
aad
dec
ret
cmpl
push
xor
inc
int
cli
push
out
lods
pop
sub
inc
out
pop
or
nop
lock
adc
lea
mov
adc
jne
fcomp
inc
and
xor
nop
mov
mov
and
inc
cmp
pusha
ss
cmpsb
jg
mov
scas
mov
push
pop
jne
dec
roll
push
push
lea
lret
cmpsl
js
in
or
enter
test
sbb
mov
jae
xlat
data16
push
sbb
xor
sbb
jle
test
lret
in
shr
pop
jnp
ljmp
notb
test
lcall
lods
and
adc
mov
jno
cmp
xor
fildll
movsl
orb
inc
cs
dec
xor
jnp
es
inc
das
adc
xchg
loopne
sysret
mov
popf
cltd
loopne
lret
mov
loopne
xor
fdivl
clc
mov
sarl
pop
xchg
fidivl
fdivl
mov
ret
mov
roll
jbe
mov
and
and
adc
ret
inc
jae
adc
jnp
sbb
les
pop
outsb
add
xchg
clc
lret
xchg
fs
sub
push
std
mov
mov
sub
push
and
out
cmc
fldcw
outsl
cmpsl
out
inc
ljmp
jecxz
ret
pop
jecxz
int
mov
outsb
mov
rcll
cmp
in
add
jge
icebp
cld
or
adc
bound
pop
gs
jnp
sbb
popa
fwait
push
daa
mov
mov
mov
sbb
jp
lea
pop
out
mov
pushl
xchg
into
imul
push
inc
jns
imul
loopne
call
ret
dec
jb
mov
out
and
push
ja
sub
out
mov
or
ret
lcall
jl
imul
sti
and
and
outsl
inc
arpl
sub
or
push
popa
stc
into
outsl
std
or
fbstp
xor
add
sub
jae
icebp
les
adc
stos
popf
add
sub
cmp
pop
pushl
repz
cmc
iret
shlb
fbstp
std
mov
sub
adc
jo
scas
data16
shlb
adc
scas
add
lcall
ficoml
test
les
dec
mov
loope
or
movsl
or
cmc
sbb
stc
xchg
mov
in
in
imul
out
cltd
stos
js
dec
lods
int3
ret
popf
mov
mov
out
ffreep
or
les
mov
shlb
push
mov
cmp
push
std
jo
out
in
cli
inc
das
fdivp
dec
mov
jge
xor
pop
scas
jge
adc
mov
in
add
les
jb
jne
mov
insl
dec
fwait
push
sti
addr16
xor
pop
and
xchg
and
mov
mov
outsl
xchg
test
cmp
scas
adc
jns
test
movsl
mov
sbb
push
movsb
rol
into
pop
sub
or
pushf
loopne
popa
lds
mov
loope
sub
popf
rorb
mov
out
mov
in
xchg
dec
pop
push
mov
decb
or
mov
leave
jne
repnz
push
or
and
int3
cmp
mov
into
cmp
adc
jg
adc
xorb
lock
add
hlt
add
inc
add
iret
testb
mov
xchg
mov
push
mov
mov
add
pop
dec
pop
adc
daa
sti
mov
mov
jmp
fsubs
sbb
jp
and
adc
adc
jge
sti
pop
stc
arpl
test
mov
cmp
leave
cmp
es
arpl
cltd
xchg
iret
mov
scas
fisubrs
mov
test
test
sahf
stc
insl
adc
cmpsl
xor
inc
jbe
add
and
cmpsl
sbb
push
test
aas
lea
loopne
addr16
in
inc
xchg
in
pusha
cmpl
div
sbb
xlat
jmp
movsb
adc
mov
movsl
add
add
adc
pushf
adc
adc
shrb
mov
imulb
outsb
add
cltd
mov
mov
test
loopne
imul
js
lcall
jb
and
pop
xchg
inc
stos
pop
sub
aam
shlb
scas
mov
mov
addr16
testl
mov
je
or
mov
out
imul
mov
push
push
adc
stos
mov
ss
dec
es
test
mov
iret
test
mov
shr
mov
mov
and
cmp
inc
int
aad
mov
sahf
adc
out
pushf
jl
ja
testl
mov
push
stos
cmova
shlb
mov
sar
scas
and
adcl
and
in
pusha
mov
add
push
faddl
lods
push
enter
xchg
mov
pop
mov
test
out
fs
xor
xchg
mov
stc
int3
and
mov
lret
sbb
cmp
ljmp
stos
outsb
orl
ficoml
fstp
fimull
dec
pop
mov
lods
popf
fmul
cmpsl
push
push
dec
sbb
mov
fimull
sti
mov
adc
sbb
mov
or
sbb
push
dec
lret
push
cmc
jge
idiv
xchg
pop
jecxz
mov
add
or
jo
scas
lret
cmp
lret
cmp
jne
mov
jb
xor
or
sub
add
push
xor
aad
mov
sbb
mov
inc
nop
push
mov
out
jb
cmc
daa
lods
and
incl
pop
and
out
bound
push
mov
movsb
je
outsb
sub
mov
fsubl
sarb
cmp
dec
dec
pop
lods
xchg
and
sbb
cmpsb
jns
mov
cmp
jecxz
adc
popa
pop
in
xor
cwtl
lds
cld
adcb
jle
mov
jp
fisubs
xchg
nop
xor
ret
xlat
testb
push
out
sub
mov
outsl
mov
cmp
mov
xchg
dec
inc
icebp
test
xchg
push
fadds
lods
adc
shll
dec
dec
pop
xor
dec
mov
rolb
call
icebp
pop
jae
and
add
insl
or
add
push
adc
jge
idiv
call
loopne
rcll
xor
push
lds
and
pop
sub
negl
adc
mov
hlt
dec
mov
rcll
sahf
cltd
cmp
sub
and
jle
adc
jno
lret
sbb
mov
pop
jno
inc
xchg
movsb
add
mov
enter
fmull
test
xorb
mov
add
mov
cmc
mov
inc
add
inc
ret
and
rcrb
andb
mov
push
add
pusha
xchg
into
pop
and
imul
int3
jae
jnp
push
xor
mov
pop
mov
inc
cmp
ljmp
daa
xchg
test
ficompl
xchg
enter
icebp
sahf
xchg
psubd
push
shl
data16
inc
test
loop
mov
adc
pop
sbb
jne
add
jb
mov
dec
cmp
dec
ficoml
pop
insl
sub
out
inc
xor
rcrl
push
cmp
inc
add
cmc
subl
jl
mov
aas
in
jge
push
pop
aas
ds
xchg
notl
jb
aaa
hlt
into
or
mov
pop
nop
push
mov
inc
test
iret
stos
aad
sub
jp
ret
fcomps
dec
cmpsb
jo
mov
push
clc
xchg
cltd
aas
sti
mov
mov
arpl
sbb
cwtl
mov
test
imul
icebp
stos
lock
leave
add
outsl
jmp
les
dec
icebp
xor
mov
push
aad
sbb
push
arpl
xchg
sbb
mov
call
and
loope
fldcw
inc
jecxz
andb
dec
outsl
lods
std
add
or
dec
mov
repz
aas
cmpsb
pop
mov
fcoml
sti
cmp
sub
rcll
pushf
cmc
idiv
mov
push
test
inc
pop
xchg
loop
sbb
nop
daa
jnp
sub
imul
and
mov
push
xchg
ss
mov
xchg
mov
inc
pop
stos
mov
sbb
mov
xchg
mov
pop
ret
mov
fistpll
inc
push
lds
jg
adc
arpl
inc
test
xchg
sub
out
in
repnz
loop
leave
dec
xchg
xor
cmpb
rcll
std
sbb
test
mov
loop
push
add
icebp
test
icebp
out
sbb
fwait
xor
mov
mov
jae
outsb
sub
pushf
or
mov
xchg
jl
and
pop
loop
and
jbe
int3
hlt
cmp
loop
scas
aad
fadd
leave
test
lea
jl
inc
call
ljmp
dec
pop
ljmp
repz
outsb
jge
mov
push
aam
push
ret
add
or
in
aaa
cmpsl
lahf
xchg
jns
push
inc
pop
dec
mov
daa
xlat
mov
mov
inc
out
insb
cmp
jae
mov
in
ja
outsl
cmp
cld
gs
push
fdivl
xchg
arpl
ret
out
and
out
and
shlb
movsl
adc
fdivl
jmp
fadd
test
imul
lds
shrl
gs
fwait
jae
add
sti
inc
cwtl
mov
sub
cmp
mov
jo
mov
inc
inc
loopne
test
mov
nop
jbe
or
jg
nop
mov
negl
aaa
in
push
mov
fsubr
mov
mov
mov
cmp
rolb
pop
int
jg
xor
adc
xor
js
adc
mov
cmp
pop
cmp
ret
popf
and
ss
cmp
fcoms
clc
repz
push
nop
xor
test
mov
or
ss
jge
mov
dec
mov
push
cmp
and
mov
ljmp
notl
or
ljmp
sub
data16
imul
ret
dec
mov
cli
mov
mov
jl
loop
xchg
add
xor
mov
jbe
pop
ret
mov
iret
das
adc
sub
pop
std
popf
dec
sbb
or
push
pop
gs
adc
popf
mov
xchg
push
or
fistpll
arpl
leave
push
push
out
mov
jg
cmp
pop
xor
mov
inc
fsubr
sbb
xor
dec
cs
sahf
xchg
mov
adc
pop
or
cli
dec
mov
pushf
mov
and
test
xor
mov
loop
leave
call
push
mov
add
fsubs
xor
das
test
sbb
fst
das
das
insl
addb
repz
push
lock
je
movsb
push
sub
mov
jbe
dec
cmp
cmc
leave
in
std
adc
adc
test
pop
or
outsl
insb
call
outsl
xchg
sbb
frstor
aaa
stc
add
xchg
lock
or
mov
dec
mov
jno
int3
out
xorb
pop
fnstcw
repz
outsl
mov
stc
out
stc
incw
push
lock
jp
jmp
sub
jg
std
adc
adc
shrb
push
push
xor
adc
mov
pop
xchg
outsb
repz
xchg
push
xor
mov
mov
orb
add
jle
xor
xlat
pop
dec
cld
mov
cmp
in
or
in
xchg
xchg
lcall
ss
dec
aaa
cmp
push
ja
mov
mov
jae
cmpl
jge
pop
iret
and
lcall
adc
sti
in
inc
adc
shl
sahf
rcl
into
test
mov
sarb
adc
lds
or
cli
pop
and
imul
dec
pop
sarb
stos
pop
add
sub
xor
fstl
push
push
pop
fcmovnu
fsubl
fnstenv
gs
repz
lcall
pop
in
daa
push
adc
lret
fwait
xchg
sub
pop
cmp
test
sbb
xor
lea
icebp
out
add
adc
dec
jg
push
sub
sbb
mov
lret
jne
xor
or
adc
push
inc
aam
lock
sbb
call
add
sti
cli
push
mov
inc
cld
inc
in
fucomi
lds
jge
into
shlb
mulb
lret
fsubs
push
cld
cltd
mov
xor
adc
push
fwait
inc
insb
sub
xchg
or
inc
test
adc
mov
jmp
hlt
lods
scas
aaa
stos
mov
inc
aad
or
mov
aam
addr16
sub
cmp
mull
mov
dec
test
cld
div
test
mov
adc
push
jno
xchg
jb
sub
insl
push
pop
mov
dec
insb
arpl
fisubs
lds
lds
test
add
les
cld
mov
cli
insb
push
sahf
mov
or
inc
mov
adc
lods
pop
adc
outsl
cltd
add
xchg
pop
fwait
xchg
inc
ja
mov
xchg
pop
cmpb
adcb
xlat
je
adc
fldl
ljmp
in
in
xlat
mov
sub
stos
rcrb
imul
xchg
xchg
bsr
mov
or
icebp
jnp
sahf
mov
mov
push
stos
ljmp
adc
test
loope
clc
dec
cmp
fsubrl
daa
enter
push
or
or
sub
repz
mov
iret
test
movsb
icebp
ja
inc
pop
xchg
pusha
movsl
jae
xchg
mov
adc
cmp
cmp
lahf
repz
test
lahf
or
xchg
lods
xchg
sbb
jno
inc
test
mov
pop
int3
pop
mov
pop
adc
push
imul
adc
shll
je
adc
sbb
and
loopne
stos
adc
cmp
push
popf
mov
push
notb
mov
ja
push
icebp
in
fxtract
popf
lods
xor
ja
icebp
add
pop
sti
mov
and
inc
rcll
mov
lret
mov
pop
rclb
xor
aad
xor
mov
mov
inc
mov
push
pop
push
xchg
cmp
and
loopnew
fildl
imul
jne
add
mov
bound
stos
xlat
fndisi(8087
push
cmp
sub
lods
ficompl
adc
js
mov
mov
fs
lcall
stos
adc
arpl
mov
dec
mov
push
jp
adc
in
fsubs
inc
lea
fsubr
adc
or
pop
iret
dec
imul
leave
aam
pop
jae
rcl
adc
mov
fsubrs
inc
cld
cld
adc
inc
lcall
sub
push
adcb
rcrl
fwait
jbe
sbb
out
adc
icebp
cmp
mov
popf
push
scas
mov
cs
sbb
xorb
mov
rcrl
push
pushf
fistl
ret
mov
in
loopne
mov
pop
fs
imul
es
adc
sub
std
andb
push
push
xor
hlt
add
loope
xor
and
pushf
lds
stos
ret
hlt
jne
sbb
or
cld
cmpsb
insl
scas
out
or
sbb
jecxz
imul
insl
stos
jl
dec
inc
xchg
mov
cmp
out
popl
sbb
dec
and
or
push
dec
and
in
jle
adc
mov
adc
fidivs
xor
aad
leave
es
cmp
rcll
push
xchg
test
lret
or
or
aad
jmp
ljmp
aam
push
sbb
cwtl
sub
in
dec
and
pop
shll
and
or
test
push
popf
sub
cltd
std
xchg
rorl
loop
adc
std
and
inc
ja
stc
push
or
mov
nop
pop
cmp
sbb
aad
xor
sbbl
push
jle
adcb
push
sti
xlat
je
pop
cmpsb
sbb
mov
inc
jp
mov
int
clc
stc
divb
shlb
push
pop
add
sbb
inc
mov
mov
pop
mov
ret
or
jb
mov
mov
inc
mov
mov
ja
mov
xchg
cmc
xor
cmp
cs
cmp
pop
int3
lcall
outsl
mov
mov
pop
add
jb
add
push
fadds
add
and
fdivr
push
idivb
push
adc
mov
xchg
pop
stos
pop
add
fs
and
js
inc
xchg
mov
pushf
pop
xchg
insl
shl
lea
dec
shlb
icebp
enter
jne
pop
mov
lret
cmc
dec
lds
scas
and
imulb
lret
clc
push
dec
mov
pop
xchg
incl
sub
sbb
test
xchg
fcmovbe
js
xor
mov
ds
rcrb
sbb
push
xor
pop
je
rclb
mov
pop
sbb
pop
mov
cmp
ffree
inc
push
dec
mov
mov
cmp
or
and
movsb
cmp
or
movsb
fwait
dec
popa
in
data16
int
test
push
fisubrl
xchg
mov
aam
cld
push
sub
jbe
mov
subl
mov
sbb
aam
aas
cmc
mov
mov
shl
test
mov
push
xlat
push
xchg
jge
mov
lock
jmp
mov
mov
aad
int
or
ds
lret
dec
popa
movsb
cmp
lods
dec
mov
add
pushf
call
push
pop
imul
pop
pop
add
fcomi
sbb
sbb
ret
popf
jg
jl
dec
jns
scas
jne
push
mov
cwtl
mov
push
and
hlt
ret
rclb
pop
lock
in
stos
int
int3
xchg
les
mov
sahf
repz
xchg
lods
mov
adc
addr16
mov
movsb
xchg
xlat
int
sub
xor
ficomps
in
push
sub
fwait
call
jno
out
xor
and
inc
fistpll
pop
scas
mov
dec
call
add
loop
ja
mov
jmp
jge
adc
jo
inc
cli
and
or
jg
aas
push
paddb
adc
add
aaa
and
jns
cmp
pop
sbb
pusha
movsb
insl
orb
mov
mov
inc
mov
inc
sahf
push
sbb
xlat
mov
mov
testl
test
popa
mov
jmp
stc
push
jns
dec
pop
pop
daa
push
and
rcl
aad
sahf
int
inc
inc
adcb
sbb
jmp
adc
sub
add
dec
outsb
add
jp
and
adc
mov
adc
push
lock
loope
push
jb
pop
push
test
xchg
or
xor
ljmp
or
icebp
fisttpl
xor
and
dec
push
clc
xor
xor
pop
inc
dec
and
sbbl
sbb
push
js
sub
lret
testl
adc
mov
cmpsb
mov
stos
mov
push
imul
mov
in
les
lret
cmpsl
jl
out
pop
push
push
shll
dec
pop
dec
aam
pop
nop
sbb
push
mov
in
subb
jl
stos
test
xchg
jmp
lret
popa
push
mov
cmpsb
mov
ret
in
hlt
loope
incl
test
sbb
pop
inc
int3
cwtl
pop
fdivs
pop
or
inc
pop
repnz
push
push
mov
test
dec
sub
insl
lock
bound
mov
repz
enter
mov
push
xor
testb
shr
idivl
push
sub
jg
std
mov
and
sti
sbbl
xchg
add
sti
mov
xchg
ds
pop
mov
js
push
out
popa
pop
jge
sbb
xchg
ljmp
adc
inc
push
ss
inc
inc
jns
mov
add
sbb
outsb
add
and
ret
fwait
scas
fxch
shll
stos
xchg
call
std
jne
flds
pushf
sbb
and
xor
mull
leave
jne
ret
sub
mov
sub
addr16
hlt
jmp
mul
clc
sahf
cmp
cld
inc
cwtl
pop
cmpsl
in
cmp
cmp
xchg
jmp
scas
mov
shl
subl
out
addr16
xlat
xor
dec
insb
dec
sub
xchg
mov
mov
cs
sub
jle
movsb
lods
push
mov
shlb
popa
hlt
int3
jbe
in
sbb
xchg
sbb
fnsave
mov
iret
sub
scas
push
lret
negb
movsl
lcall
xchg
mov
jns
lock
or
inc
and
test
jnp
jbe
int
cwtl
jbe
movsb
and
negb
lret
or
sub
mov
push
popf
mov
in
adc
cmp
enter
lret
test
cmp
in
out
out
and
in
lods
jno
push
enter
test
ja
test
divb
std
popa
fs
mov
xor
lods
movsl
mov
add
iret
into
cmp
mov
popa
daa
and
sub
mov
jb
mov
adc
fistpll
out
daa
push
sarl
jl
gs
lods
push
push
adc
adc
sbb
xlat
and
out
leave
dec
xchg
lcall
xorl
sahf
iret
mov
dec
dec
push
pop
mov
mov
mov
add
mov
fists
out
rorb
psubd
outsb
mov
fists
mov
xorb
and
mov
add
push
push
sbb
ss
jae
insl
inc
jle
mov
push
sub
das
sub
adc
adc
mov
sarl
femms
cmpsb
dec
js
cmp
sahf
jne
xchg
and
sarb
or
xchg
jnp
push
fucomp
adc
and
xchg
ret
or
mov
xor
and
loope
aam
imull
pop
lcall
push
pusha
test
rep
mov
sahf
fidivrs
arpl
adc
call
vcvttsd2si
fcomip
jle
aam
leave
push
pop
sbb
jns
into
into
icebp
andb
cmpsl
cmp
push
jl
jno
xchg
inc
clc
xchg
in
adc
dec
cmp
repnz
or
aaa
cmp
arpl
jmp
arpl
sub
jle
xor
xor
ret
push
imul
inc
push
sub
mov
loopne
daa
outsb
push
mov
ljmp
inc
push
dec
ljmp
inc
cld
cs
jg
rorb
ss
repnz
repz
and
outsl
hlt
testl
and
push
rclw
pop
sbb
lea
pushf
xchg
ficoms
push
loopne
cmp
lahf
in
jg
xor
mov
adc
xlat
movsl
inc
inc
dec
sbb
shrb
push
push
daa
pop
test
sub
movsb
push
ds
loope
fisttpll
fs
pop
inc
inc
jae
idivb
stos
rcrb
inc
fucomi
sarl
push
inc
cmp
adc
pop
repnz
mov
xor
xchg
inc
lea
mov
or
aam
xlat
outsl
xchg
pop
dec
incb
mov
jecxz
inc
mov
gs
xlat
cld
negb
sbb
out
inc
push
mov
dec
sbb
sbb
test
pop
inc
lock
aad
xlat
cmc
call
or
test
jns
cmp
xchg
cli
push
dec
mov
cmp
popf
jp
pushf
loop
xor
adc
fists
pop
jg
insb
xor
and
enter
jae
rorb
aad
jae
inc
push
add
std
adc
call
push
xorb
cmpsb
imul
ret
lret
jge
pushf
push
jae
sub
sbb
inc
and
xlat
adc
cmp
ret
mov
and
fwait
arpl
test
pusha
add
sti
outsl
popa
cltd
xor
pop
dec
sahf
std
scas
cli
cli
push
mov
cmp
cmp
sbb
cli
fldl
pop
mov
arpl
pop
cmp
in
pop
cmp
cmp
sbb
je
mov
sbb
xchg
aad
fdiv
subl
inc
pusha
popf
mov
cmp
stos
mulb
sbb
push
enter
jmp
jnp
rorb
xchg
outsl
adc
xabort
fbld
xor
adc
addr16
out
lcall
roll
inc
movsl
icebp
mov
jecxz
adc
rorb
xor
bound
push
lods
hlt
sbb
jmp
js
jne
imul
xor
xchg
pop
arpl
testl
mov
pop
cmp
rcl
adc
inc
daa
xchg
mov
pusha
sbbb
fiadds
aas
gs
adc
xchg
adc
les
pop
inc
sbb
fisubs
push
shll
test
dec
scas
lea
lods
rcrb
and
xor
ficoml
sbb
mov
dec
sahf
xchg
jg
sbb
cwtl
jp
xchg
insb
sbb
pop
sbb
loope
shlb
mov
repz
loopne
mov
mov
hlt
lock
inc
subb
cmp
mov
add
daa
adc
dec
push
inc
fldenv
dec
push
iret
gs
movsl
inc
mov
ss
mov
adc
fidivl
sti
rclb
xor
xchg
test
inc
sbb
push
std
xor
out
cmp
out
inc
fildll
and
lock
repz
aas
and
sbb
pop
addr16
gs
lret
jmp
push
push
mov
popf
push
push
inc
lret
sub
adc
push
sbb
mov
insb
push
out
pop
cmp
xor
lock
popa
cmp
aaa
inc
pushf
mov
repz
imul
add
mov
pop
inc
loopne
jg
or
cmc
mov
fcoml
leave
and
out
sbb
dec
pop
xchg
loopne
aaa
inc
push
jbe
pop
adc
jp
into
add
push
add
out
test
cli
shl
ljmp
mov
cmpsb
add
xchg
dec
jb
sub
push
add
mov
pop
imul
sub
push
call
xchg
mov
ljmp
jne
mov
dec
fistpll
popf
in
jge
add
add
cmp
cmp
jb
mov
leave
les
xor
arpl
pop
adc
imul
or
and
push
and
hlt
into
mov
xchg
fwait
loop
mov
pop
inc
lahf
sub
jns
shrb
jbe
pop
mov
mov
jns
js
jmp
lcall
mov
das
add
ja
imul
cmp
cmp
inc
sbb
mov
imul
xor
push
pop
mov
cmpsb
add
int
mov
add
mov
idivl
testl
pop
pop
xor
adc
das
dec
leave
dec
mov
jne
inc
pusha
cmpl
aas
stos
pop
adc
insl
dec
cs
jne
jae
cmp
mov
cmp
movsb
movsb
jo
jb
dec
scas
sbb
mov
test
cmp
pop
dec
outsb
jno
sub
mov
xor
inc
sahf
lcall
xchg
inc
jne
fdiv
jno
mov
fwait
xchg
xchg
mov
adc
mov
inc
adc
jnp
add
pop
test
lcall
scas
test
out
and
push
gs
mov
add
nop
xlat
sub
sub
pop
es
stc
cwtl
divb
imul
adc
icebp
lods
movsl
cmp
mov
or
mov
cmp
movsl
mov
add
xchg
xchg
pop
int
aam
ss
mov
mov
cld
loopne
cld
inc
mov
mov
js
jmp
mov
adc
daa
rcll
push
dec
xor
rclb
pop
cmp
mov
xchg
cmp
inc
int3
enter
inc
jb
xor
xchg
clc
lock
js
inc
cs
lret
fsubl
stc
xchg
cmp
std
je
xchg
add
mov
push
and
pushf
lret
add
stos
mov
mov
xchg
cmpsl
data16
dec
pop
mov
inc
pop
pop
gs
sub
stc
nop
lock
in
mov
push
mov
aam
stos
ret
xor
adc
mov
xchg
paddd
negb
shrb
test
stc
xor
inc
jmp
js
sub
adc
fstl
push
mov
pop
or
in
arpl
lcall
ret
test
fninit
out
and
pop
fisubl
and
enter
mov
or
push
stos
icebp
jne
jns
sahf
xchg
pop
lahf
sbb
ljmp
jle
inc
scas
add
inc
loope
orl
lea
mov
and
leave
cmpsb
and
jno
js
and
imul
stc
mov
lahf
jmp
xchg
fiadds
out
jb
and
mov
xchg
pop
inc
jge
mov
cmp
ljmp
in
add
sbb
cmpsb
dec
sub
mov
or
push
repz
xchg
jno
mov
inc
ds
inc
leave
push
daa
pxor
lods
dec
das
xchg
mov
xor
popa
stos
inc
pop
cmc
cmpsl
xor
je
lcall
or
add
ret
outsb
dec
mov
dec
subl
insb
int
pop
add
xchg
xor
outsb
adc
int3
lcall
sub
movsb
push
sub
roll
mov
adc
mov
xchg
dec
push
loop
mov
roll
pusha
rcrb
mov
push
out
push
ds
xchg
or
sbb
dec
arpl
daa
adc
inc
jns
xchg
mov
hlt
lret
pop
cld
lds
and
ja
lock
mov
adc
insb
or
loope
cmpsb
dec
lods
orb
pushf
add
stc
dec
mov
or
mov
loope
sub
and
inc
ljmp
xor
cmp
lret
xor
sub
cmp
sbb
dec
cmc
inc
enter
inc
xchg
rolb
inc
cltd
mov
dec
fsubrl
jb
mov
sbb
orb
adc
ljmp
mov
rcrb
insb
lock
jg
dec
adc
lods
lock
xchg
shlb
dec
icebp
add
cmc
rol
cltd
jae
push
sub
adc
xor
call
xchg
dec
cs
shll
push
lods
ljmp
cmpsb
int
lds
or
lock
call
mov
insl
mov
and
inc
adc
mov
sbb
cmp
push
xor
inc
and
inc
in
gs
lea
cmp
jl
inc
mov
daa
mov
sti
lock
jge
dec
inc
xor
xor
imull
push
push
fdivs
xor
cmc
int3
dec
mov
push
sub
jge
lea
push
in
mov
pop
addw
insl
xchg
pop
xlat
add
das
add
inc
out
fmull
fld
out
fs
test
insb
adc
xchg
and
push
dec
adc
into
pop
mov
imul
repz
daa
dec
movsb
dec
clc
jnp
sub
fidivl
clc
push
mov
xor
sbb
cmpsb
mov
aam
sahf
dec
mov
sbb
pop
sti
push
mov
pop
fsubp
ret
hlt
movsb
lcall
adc
rorl
inc
pop
mov
lea
mov
out
ljmp
pushf
out
test
call
cmp
imul
push
mov
xchg
in
ss
adc
inc
jae
lcall
popa
and
add
dec
inc
inc
mov
push
xorb
enter
add
repnz
push
aad
lcall
mov
enter
xchg
imul
int3
cmp
push
mov
push
aad
push
imulb
and
mov
in
dec
sbb
aad
mov
xchg
pop
xchg
cmpsb
pop
sbb
jnp
icebp
xchg
xor
in
stc
in
or
lea
stos
add
sbb
mov
mov
ret
dec
cmp
mov
and
repnz
cmp
push
jb
pusha
lea
out
push
pop
in
int
and
or
add
xor
jg
stos
arpl
xchg
jp
and
mov
sbb
pusha
and
repnz
xchg
mov
jg
pop
mov
orb
das
sbb
rcrl
and
pop
pop
xchg
pop
outsl
repnz
shr
push
filds
out
clc
je
fidivs
mov
lods
sahf
mov
out
ficoms
mov
std
jecxz
mov
popa
stos
movsb
xor
cs
scas
adc
ljmp
mov
sarl
cmpl
and
fisttpll
movsl
ja
cmp
mov
or
sbb
out
lcall
mov
push
dec
mov
rclb
sbb
cmp
mov
xchg
dec
insl
sbb
or
xchg
dec
push
sub
popa
sbb
icebp
cmp
adcb
or
mov
or
or
add
add
inc
sub
jne
mov
sub
repz
loopne
movsb
push
xchg
rcr
sbb
stc
imul
enter
mov
fwait
pop
call
xlat
mov
pop
or
push
in
and
lock
pop
inc
xchg
stos
dec
mov
sub
testl
rorl
shrl
pop
popf
dec
jnp
jbe
or
mov
jle
inc
test
pop
mov
adc
push
es
cmp
pop
sti
xchg
jg
fstpt
test
hlt
push
test
fstps
arpl
and
aad
push
and
xchg
cli
mov
arpl
push
mov
lret
sub
imul
jbe
ret
or
aaa
rorl
idivl
push
ret
decl
or
or
push
mov
js
pop
xchg
out
lret
fsubrs
jle
jbe
push
sarl
imul
inc
pop
pop
mov
mov
jge
aad
mov
mov
push
cmp
xor
or
jno
cmpsl
inc
hlt
sti
xor
inc
stc
ss
pop
mov
fwait
jbe
or
cs
cmpsl
cld
mov
jecxz
fcmovu
sbb
mov
or
jno
jle
mov
sbbl
adc
outsl
push
arpl
mov
cltd
mov
push
mov
mov
aam
xchg
out
sub
push
or
fs
aad
arpl
pusha
jle
dec
inc
cmc
fisttpll
push
std
mov
jns
pop
xchg
shll
in
cmpsb
push
ds
outsl
adc
mov
mov
dec
into
scas
ret
test
add
movsl
jne
mov
mov
sub
or
fiadds
sti
add
int3
icebp
out
scas
bnd
xchg
and
sbb
in
mov
std
test
rcrl
into
movsb
test
cli
sbb
aad
mov
and
xchg
mov
lods
sbb
jp
popf
dec
xor
mov
aam
dec
xchg
dec
cmpsl
loop
jecxz
lock
stc
lret
sub
pop
sbb
xchg
push
fistps
repnz
xchg
jb
push
adc
jg
mov
jp
pop
cld
dec
mov
std
je
addr16
push
cmp
mov
xchg
std
mov
mov
imul
mov
add
jmp
test
sub
fisubl
pusha
sbb
sbb
fmuls
xchg
std
and
test
add
es
fistpl
fs
cli
in
xchg
data16
daa
mov
es
ljmp
das
sub
and
outsb
repnz
movsb
scas
stc
hlt
insb
lds
das
dec
insl
test
dec
xor
cmp
stc
jle
add
popf
pop
lcall
mov
sbb
dec
ret
mov
pop
test
lock
lea
sub
jae
dec
lret
int3
xchg
mov
int3
les
sbb
push
adc
push
pop
mov
and
add
loop
xor
and
sub
mov
insl
pop
cmpsl
movsb
push
ja
mov
or
xchg
adcl
in
cmp
xchg
arpl
mov
cmp
pop
push
popa
push
mov
cmp
or
into
jb
pop
jae
pop
cs
popa
in
nop
fwait
lahf
daa
sub
xchg
xor
jae
inc
lret
cmpl
lahf
adc
sbb
pop
dec
ret
pop
push
and
out
xchg
add
out
xchg
and
ficomps
data16
add
nop
add
jnp
inc
push
sub
out
sub
push
int
jmp
sbb
inc
push
inc
or
rcrl
loop
mov
ret
mov
xchg
or
dec
aaa
mov
daa
mov
jbe
or
cmp
adc
leave
push
cmp
pop
cwtl
xchg
or
fwait
lds
addr16
iret
mov
sub
mov
ret
push
pop
pushl
sbb
das
stos
stos
ret
cmp
xchg
lahf
out
loope
cmpsb
cld
mov
xchg
mov
and
or
adc
nop
out
push
mov
sbb
dec
lcall
icebp
pop
inc
daa
dec
into
inc
xchg
fimuls
dec
incb
fistpl
sbb
mov
popa
cmp
icebp
inc
lahf
dec
sti
mov
sub
daa
enter
xchg
pop
call
xor
mov
std
in
lea
shl
sub
jle
jnp
inc
fisubrs
lea
mov
jmp
adc
cmpsl
push
test
and
scas
rol
mov
fnstsw
dec
cmp
xor
jne
or
dec
adc
lock
xor
and
cmp
iret
inc
outsl
mov
and
pop
ret
shll
leave
mov
test
rorb
aad
outsb
roll
out
mov
or
mov
jo
adc
dec
add
data16
shl
in
dec
out
bound
jmp
xlat
sti
in
mov
cmp
adc
adc
out
fimull
add
jnp
dec
mov
or
dec
aam
sbb
mov
pop
gs
mov
aad
insb
xchg
scas
sbb
lea
loopne
ret
xor
lahf
jmp
jp
cltd
aaa
arpl
pop
jmp
mov
mov
mov
lret
xchg
mov
xchg
pushf
xchg
push
je
adc
fdivrl
js
pop
outsb
pop
dec
pushf
test
inc
xor
dec
cwtl
iret
test
adc
cmpsl
add
mov
sahf
dec
add
push
dec
clc
fxch
sub
lahf
movsb
nop
pushf
jo
loope
push
faddp
xchg
push
iret
aad
push
mov
xchg
inc
bound
push
repnz
sub
lods
mov
inc
gs
fbld
mov
xor
dec
outsb
enter
mov
mov
popf
or
inc
rclb
pop
out
jp
jns
jp
adc
and
sbb
cltd
repnz
adc
lcall
mov
or
sub
jne
dec
mov
pop
push
mov
int
test
or
sbb
adc
int
cltd
inc
add
add
std
xor
loopne
cmpsl
mov
insl
addr16
ljmp
and
cwtl
cwtl
fisttpll
lret
and
xor
roll
fsubl
cli
or
push
add
push
cmp
sbbb
sbb
pop
cli
mov
dec
test
lds
fildll
xlat
sub
fbld
adc
aam
mov
cmp
push
xchg
sub
sbb
loope
inc
fisttps
js
cmp
rclb
or
rcr
cmp
jp
ret
mov
jb
mov
lds
shll
dec
push
test
adc
ja
cmp
cmc
cmp
adcl
int3
sub
in
sbbb
mov
jecxz
dec
cmp
push
mov
inc
dec
orb
lds
push
bswap
dec
cmp
sbb
pop
ret
push
in
insb
je
loop
mov
add
lock
dec
adc
xchg
sbb
loope
cmpsb
push
dec
sub
adc
push
gs
pop
adc
fxch
jne
mov
sub
mov
add
mov
cld
push
pop
popa
pop
adc
jl
pusha
jp
sbb
enter
idiv
gs
push
ljmp
std
xchg
inc
mov
ja
add
pusha
push
ret
pop
or
mov
cltd
pop
lcall
inc
mov
ret
clc
clc
mov
xor
inc
cmp
test
mov
fnsave
pop
aaa
and
loop
neg
mov
int
mov
mov
dec
or
movsb
mov
mov
mov
loopne,pt
aas
mov
pop
data16
adc
add
repz
xchg
push
shlb
mov
mov
pop
int3
cmp
dec
add
addl
cmp
negb
jbe
or
and
cli
cs
cmp
jp
out
xor
lahf
lret
int
jnp
or
stc
frstor
ljmp
adc
imul
jne
inc
jge
clc
inc
mov
sub
xchg
mov
dec
jg
push
cwtl
fcomp
jnp
push
ljmp
and
out
and
xchg
test
rorl
addb
lods
jmp
mov
out
ds
fiaddl
int
lret
aas
mov
or
aad
mov
cmp
mov
into
or
xchg
shll
adc
out
out
dec
enter
pop
sahf
fistpl
xor
mov
xchg
popa
xchg
popf
daa
outsl
in
outsb
mull
mov
aad
inc
ljmp
jae
dec
or
xchg
mov
in
cmp
push
dec
orb
adc
mov
jp
addr16
ret
lahf
adc
std
mov
push
in
jno
cmpb
pop
xor
dec
adcl
cmpsb
fiadds
push
mov
mov
jge
aam
xor
inc
mov
inc
dec
arpl
push
jbe
addr16
sub
add
ss
into
inc
inc
mov
das
adc
popf
adc
out
push
cltd
call
and
divb
iret
in
jbe
gs
shlb
push
pop
jecxz
sbb
lea
inc
dec
inc
fldl
sbb
aad
pop
sti
inc
fs
mov
sbb
pop
lret
rcl
push
pop
movsb
mov
addr16
es
shrl
jbe
aaa
out
lods
push
pusha
sbb
xchg
mov
lcall
lar
ja
clc
xchg
sbb
sbbl
test
xor
loope
inc
or
cmpsb
cmc
dec
add
out
aam
stc
mov
nop
mov
mov
mov
sar
rorl
pop
cld
add
clc
or
ja
xchg
xchg
cltd
cld
movsl
mov
pop
cmc
sub
inc
xchg
cmp
and
cwtl
jle
cs
dec
fcmovnu
addb
cmp
pop
not
mov
push
dec
push
adc
stos
int3
in
std
aam
ror
fcompl
arpl
adc
shlb
imul
test
adc
lahf
push
jp
negb
pop
dec
dec
mov
adc
std
loopne
mov
push
dec
xor
mov
cmpsl
call
mov
xor
mov
xor
cmp
movsl
jb
and
or
aaa
dec
push
sub
pusha
mov
stos
inc
adc
sti
jbe
dec
aas
test
xorb
leave
mov
test
pusha
mov
rcll
mov
jp
ljmp
cmpsl
repz
pop
fidivl
dec
mov
test
stc
data16
cmpb
push
fisubl
gs
xor
dec
test
fildl
and
bound
push
cmp
push
jle
sub
orl
rorl
fwait
xor
daa
adcb
clc
add
cmc
test
es
or
imul
pop
inc
cmpsb
stos
test
dec
jp
in
add
adc
std
loope
and
xchg
fcmovnu
and
dec
call
fwait
jb
fbstp
enter
in
pop
mov
ja
cmp
or
sbb
shrl
jecxz
jmp
fwait
mov
call
lea
jmp
and
pop
repz
add
lds
pop
pop
fwait
addl
mov
xor
in
shll
jo
insl
fs
mov
pushl
xchg
ss
push
push
mov
push
fiaddl
icebp
cltd
jmp
movsb
fcmovbe
cmp
mov
xchg
dec
int
cwtl
mov
dec
lods
insb
add
xor
faddl
lea
iret
idivl
inc
jns
mov
stos
sub
cmp
dec
push
jle
inc
fcoms
dec
jge
mov
jmp
cmp
or
and
daa
dec
lret
jns
and
gs
sbb
scas
test
orl
popf
bound
mov
cmpsb
mov
xchg
pop
aaa
mov
rolb
or
je
out
gs
cs
and
jo
push
cmpsl
lret
idivl
sbb
lea
mov
add
inc
xchg
xchg
push
loope
insl
arpl
jns
jbe
imul
ret
and
es
daa
repz
or
cwtl
dec
cld
inc
movsb
scas
sbb
gs
mov
js
or
nop
aad
jbe
scas
fists
es
xchg
loop
lret
je
pop
sub
lcall
mov
jle
es
test
int3
in
sahf
pop
push
in
aad
imul
or
or
in
push
and
leave
incb
adc
sub
add
je
inc
lea
mov
adcl
mov
push
rclb
insl
jae
inc
cmp
pop
inc
and
xchg
test
or
push
repnz
les
mov
jo
jne
mov
and
adc
ja
mov
and
sbb
imul
xor
lock
pop
mov
xor
mov
push
xchg
dec
xor
jo
enter
sbb
mov
mov
out
jnp
add
cbtw
ja
pop
movsl
mov
adcb
arpl
or
je
lock
mov
lret
xlat
sub
fmuls
gs
xor
pop
pop
gs
stos
xchg
aas
and
sti
xchg
addr16
or
fisttpl
xchg
sbb
out
jecxz
lcall
pop
add
lahf
ja
jl
pop
cmp
adc
repz
push
test
mov
into
cli
lret
cmc
std
sbb
scas
out
lahf
xchg
leave
loope
imul
dec
or
addr16
add
dec
add
mov
dec
rorb
push
jns
jmp
jae
cmc
lcall
xlat
sar
pusha
dec
adc
add
xorb
dec
inc
in
ljmp
jns
repnz
xchg
jnp
ret
pop
shlb
nop
pop
dec
jo
imul
cwtl
adc
int
ja
popf
mov
or
test
call
lret
or
addr16
sub
mov
shlb
xchg
ret
pop
flds
shrb
shlb
ja
mov
rol
cmp
jbe
mov
ret
cmp
pusha
mov
mov
inc
das
insb
fbld
mov
push
sub
sbb
lret
cld
inc
adc
and
xor
leave
out
cmpsb
stc
hlt
and
lret
mov
ljmp
mov
lock
jecxz
xchg
rcrb
jg
mov
pop
cmp
testb
push
sub
add
roll
pop
lcall
adc
loop
cwtl
pop
iret
pusha
notb
push
jae
call
repz
mov
jae
into
mov
out
aam
movsb
inc
xchg
lock
sbb
aad
nop
sub
fists
mov
push
dec
pop
sbb
fstpl
in
aas
mov
pushf
sbb
shlb
lock
mov
addr16
ja
lock
popf
mov
mov
fs
imul
push
dec
fcom
andb
es
xor
or
insl
imul
ror
dec
aam
push
test
inc
sbb
mov
sahf
nop
xor
push
mov
out
mov
hlt
jg
mov
int3
lea
insl
out
and
lods
fwait
ret
jno
sbb
jns
pop
jg
je
mov
and
cmp
fstp
dec
jo
fstps
shrl
push
sbb
mov
inc
jmp
in
fmul
xor
rcll
aad
repnz
xor
les
pop
adc
sahf
je
dec
pop
xchg
addr16
lea
aad
jne
dec
pop
cli
xor
pop
scas
imul
in
cmpl
mov
jae
add
adc
shrb
fbld
pop
pop
pushf
dec
xchg
pop
daa
lods
sbb
xchg
dec
shlb
xor
pop
mov
sub
ret
out
lret
roll
es
int
mov
sbbb
cmpb
fnsave
mov
ja
in
push
js
xchg
jne
cmpb
lods
lret
pop
leave
iret
mov
cmpsb
xor
pop
xor
stc
xlat
pop
test
outsb
pop
icebp
lods
mov
or
fstpt
arpl
mov
mov
jle
fmull
cltd
sbb
sbb
add
xchg
mov
push
and
sarb
mov
movsl
push
sbb
push
in
sub
popf
push
lods
dec
mov
stos
dec
pop
mov
out
scas
movb
cmc
bound
xchg
loope
xor
iret
xchg
lods
inc
xor
not
adc
sahf
push
popa
sub
xchg
mov
shlb
jge
mov
mov
add
ret
test
pop
jnp
push
orl
aaa
call
xor
ja
mov
imul
mov
inc
mov
push
adc
mov
clc
xchg
scas
dec
out
pop
call
in
jge
ja
loop
orb
cmp
mov
in
add
xor
roll
dec
pop
mov
mulb
xchg
das
push
fildll
icebp
sub
faddl
in
pop
out
pop
sub
adc
fwait
add
into
test
aam
mov
jp
and
mov
pop
std
hlt
adc
daa
push
loope
loopne
cmpsb
jle
jmp
push
cmp
ret
adc
dec
dec
in
sbb
add
std
call
xlat
shrl
fimull
jae
aaa
fisubrs
lods
mov
int
inc
adc
insl
push
movsb
and
int
push
or
int3
dec
rol
jp
or
cmp
jmp
shll
decb
mov
and
cld
inc
lret
dec
add
cmc
pop
loopne
jg
mov
cmpsb
add
mov
ljmp
aam
push
repnz
outsl
sub
xchg
jb
cs
cmp
and
mov
jnp
push
aaa
cmp
add
push
int
clc
lods
loope,pt
jne
inc
movsb
cmp
pop
pop
iret
arpl
arpl
pop
mov
stos
xchg
pop
push
add
cli
sbb
je
and
rorl
jnp
sbb
imul
xlat
xchg
mov
mov
jg
jp
mov
int
push
push
iret
mov
mov
sbb
sbb
hlt
or
loopne
mov
scas
sbb
or
cltd
cmpsl
jl
es
push
or
pusha
adc
fisttpl
aad
dec
mov
xchg
popa
aad
adc
adc
cmpsb
xor
mov
mov
cmpsl
xchg
lods
test
das
lds
jge
xchg
xor
stc
xchg
push
fsts
sub
cmp
push
std
frstor
clc
test
popf
jl
jmp
sbb
inc
out
push
sti
sti
or
clc
cmp
jne
out
pop
cwtl
loop
push
mov
lcall
jmp
xchg
leave
out
cmp
mov
pop
mov
adc
outsb
popa
pop
pop
sbb
jnp
notl
sub
mov
mov
sbb
inc
rorl
stos
push
mov
ds
jae
dec
jle
mov
jb
sbb
ja
inc
jns
nop
arpl
fdivs
pop
cmc
adc
push
jo
xor
ds
dec
mov
cmp
lahf
mov
mov
and
or
jp
outsl
or
testl
mov
xchg
scas
test
add
aam
hlt
gs
out
les
fidivs
fisubrl
arpl
mov
and
mov
rorl
or
mov
addr16
jb
orl
pop
ret
loop
push
pop
cmpsl
stc
xorb
scas
repz
cmp
cltd
mov
pusha
aad
ss
out
jo
mov
mov
or
jg
jl
cmc
mov
jbe
out
or
mov
call
jmp
mov
dec
push
cmp
mov
jb
inc
decl
jle
in
mov
xor
cltd
jmp
adc
dec
push
cmp
mov
repz
sbb
inc
adc
or
mov
cmp
sub
gs
ja
xor
mov
adc
sti
mov
sub
lods
and
sub
and
xor
and
push
push
dec
sub
sub
xchg
cwtl
mov
inc
ficompl
dec
inc
pop
test
mov
or
je
adc
scas
sub
gs
add
fmuls
xchg
push
test
outsb
push
mov
adcl
inc
scas
mov
push
dec
xchg
pop
and
jns
enter
pop
mov
jmp
insl
sub
add
enter
push
jecxz
fcmovnu
in
pop
and
outsb
cld
push
pop
jne
or
cmp
sub
push
lret
push
push
push
rorb
inc
lods
fdivs
push
add
stos
mov
and
push
cs
imul
sub
push
bound
test
and
lahf
ljmp
enter
jl
push
cmpsb
push
mov
add
push
sarb
es
test
dec
ffree
or
or
je
mov
loope
dec
aaa
inc
daa
es
mov
xchg
fdiv
or
imul
mov
fldt
xor
or
mov
cmp
cmp
sti
xchg
scas
mov
outsl
push
lods
aad
sub
scas
dec
test
mov
cmpsb
mov
aad
inc
mov
jbe
loop
test
inc
enter
test
leave
sbb
cmp
mov
lret
pop
adc
test
cli
cmpsl
lahf
mov
mov
ret
movsl
and
jle
sub
and
jge
push
jl
sub
js
push
inc
xchg
shrb
or
lock
int
sbb
xchg
push
dec
orb
js
js
jge
xor
sbb
jp
jae
gs
push
mov
pop
adc
cs
push
mov
mov
loope
shll
stos
sahf
adc
add
or
push
and
sub
inc
add
pop
mov
mov
jp
into
sbb
dec
jne
mov
sub
xchg
pop
in
leave
das
int3
mov
adc
sub
ficoms
jne
pop
out
mov
mov
jg
fiaddl
inc
pop
xor
inc
in
sub
mov
inc
lds
dec
sub
enter
outsl
dec
jno
aaa
inc
inc
dec
pop
cmp
inc
xchg
ds
adc
jne
pusha
outsb
mov
and
std
loop
xor
inc
jo
pop
mov
dec
mov
ret
mov
je
cmpsb
ret
inc
mov
andb
fcmovne
pushf
test
aad
shrb
jns
add
lods
outsb
cs
mov
mov
jae
push
negb
mov
mov
test
jb
popa
xor
std
xchg
jbe
in
sbb
inc
iret
inc
jns
push
shll
in
std
in
xchg
jl
inc
xchg
scas
jg
push
aas
ljmp
loope
popf
rcr
sbb
push
xor
inc
call
xor
out
pusha
push
and
mov
xor
mov
pop
scas
ss
push
adc
push
lret
sub
insl
loopne
mov
mov
mov
push
je
ljmp
aas
int
dec
lds
fmull
fucomi
cwtl
sub
test
jl
push
pop
push
mov
out
push
lods
adc
ss
call
jo
movsb
adc
mov
sub
jb
mov
fs
and
roll
popf
pop
cltd
bound
cwtl
dec
add
int
int
mov
rorl
nop
ficompl
add
mov
jge
aas
pusha
jo
out
dec
fwait
mov
push
sarl
push
xchg
out
xor
into
jge
mull
inc
out
mov
and
dec
test
lods
and
push
ja
addb
ret
push
xchg
xor
adcl
or
mov
sbb
jmp
or
lret
push
aad
push
js
stos
fmul
jp
lret
jnp
fidivl
pop
outsb
leave
cmp
mov
push
or
int3
hlt
mov
nop
jge
mov
inc
sahf
xchg
hlt
mov
cmp
and
mov
push
popa
cli
dec
filds
mov
xor
xchg
pop
cmpb
roll
add
pop
enter
in
sub
jo
nop
in
xchg
mov
stos
dec
cmpsl
imul
fmuls
push
sbb
lods
sbb
enter
fsubrl
push
mov
xor
test
loope
imul
or
mov
icebp
je
mov
xor
faddl
mov
sbb
push
scas
aas
inc
leave
adc
jmp
ss
outsl
popa
test
lret
insb
sbb
inc
shrl
adc
add
mov
aaa
mov
dec
stos
movsl
jecxz
clc
pop
sub
stc
sbb
cmpl
and
or
test
fildl
popa
fsubp
add
mov
imul
loop
cmp
jge
mov
fisttpl
cmp
xor
cmp
adc
sub
or
aaa
push
aam
sub
mov
in
stos
mov
cmc
leave
sbb
scas
pop
add
sbb
inc
inc
mov
mov
xchg
xor
mov
ret
and
add
adcb
push
sub
adc
push
dec
mov
mov
add
movsl
jnp
and
lods
popa
mov
cmp
cmp
xor
xchg
lcall
jns
mov
ss
fisttps
pusha
mov
lods
loop
lcall
and
lea
or
jno
fstpl
jne
sub
and
lock
bnd
jns
dec
test
lods
or
addr16
insb
mov
mov
insl
notb
popf
adc
pop
out
adc
jae
cmp
sbb
push
cmp
cld
ljmp
div
pminub
mov
jno
pop
jo
dec
xor
xchg
mov
push
shlb
mov
or
gs
into
and
out
stc
jmp
cmp
cmpsb
mov
pushf
insb
scas
mul
pop
stos
popf
rorb
dec
or
inc
pop
scas
imulb
es
movntps
cmc
xchg
iret
inc
lcall
mov
inc
push
imul
pop
mov
daa
inc
mov
or
stos
pop
call
mov
sbb
or
out
fmull
loopne
jne
mov
and
jo
mov
push
in
push
add
pop
sub
fwait
mov
cmp
mov
repz
cs
pop
dec
test
sub
dec
mov
jge
inc
enter
mov
int
inc
mov
adc
das
and
mov
repz
jnp
cmpsb
jecxz
ret
shrb
mov
push
into
imul
and
dec
jl
xchg
pusha
rcr
cmp
rolb
ss
or
sub
rcr
mov
aaa
mov
lock
rolb
aaa
dec
jmp
jns
movsl
xchg
pop
adc
sahf
mov
or
mov
int3
mov
aaa
mov
mov
icebp
orl
je
or
inc
xor
int3
mov
aaa
sub
and
in
mov
pushf
lock
loop
push
xchg
scas
clc
cmp
rcr
jmp
cmp
mov
pop
fdivl
data16
gs
add
xchg
dec
in
xchg
pop
lock
sbb
mov
xor
leave
repz
mov
push
scas
inc
xchg
std
jge
hlt
daa
add
and
stc
ss
push
je
push
movsl
gs
lock
std
xchg
xlat
stc
bound
and
aaa
stos
iret
xchg
sbb
add
and
dec
inc
or
or
inc
out
out
popa
or
mov
fdivrp
int
dec
dec
fistpll
add
popa
outsl
dec
dec
inc
dec
leave
mov
ficompl
cli
jp
fs
arpl
sub
push
aas
rcl
roll
mov
mov
adc
pop
inc
or
mov
mov
lret
and
int3
jo
xchg
sub
add
pop
and
xor
sti
xchg
dec
out
lret
mov
pop
inc
sbb
enter
inc
dec
rolb
jnp
inc
addb
pop
cli
loopne
adc
or
or
dec
je
mov
xor
and
stos
sbb
jecxz
out
movsb
dec
loop
mul
mov
sub
shlb
lods
sub
rorb
push
push
adc
insl
sub
popf
xchg
mov
and
cs
popf
xorl
and
loope
mov
cltd
dec
mov
cmp
mov
adc
outsb
popa
repnz
mov
in
sub
in
and
pop
mov
adc
cmpsl
cmp
jge
jge
xor
data16
aam
testl
mov
sbb
out
pop
aas
xchg
and
in
notl
sub
adcl
mov
in
mov
dec
sub
inc
es
xor
movsl
pushf
arpl
push
hlt
fidivrl
add
sub
cmp
adc
cmp
mov
push
jbe
push
mov
adc
int
int3
mov
pusha
mov
push
sahf
push
sub
or
inc
mov
mov
and
sahf
mov
mov
mov
mov
jnp
in
in
or
sub
mov
sub
enter
push
xor
insl
cmp
testl
mov
enter
xor
sbb
into
dec
mov
out
sarl
nop
enter
cltd
mov
std
dec
mov
pop
lods
adc
jl
xchg
icebp
outsl
mov
dec
mov
out
fidivrl
daa
xchg
xor
sbb
stos
xchg
mov
xchg
dec
mov
sbb
or
test
mov
mov
mov
xor
add
out
push
push
leave
push
xchg
mov
ljmp
dec
jns
fld
arpl
pop
nop
icebp
dec
ja
pop
lret
insb
es
add
frstor
pop
nop
jb
test
rclb
mov
in
scas
inc
cmp
adc
lock
icebp
lret
jbe
inc
cli
jbe
sbb
in
les
ret
aas
test
aas
sub
xchg
sbb
test
mov
mov
aad
incb
mov
aaa
sub
xor
sub
clc
ret
fists
cmpl
call
les
sbb
sbb
adc
movsl
cmpsl
cmpb
out
inc
aas
aaa
jecxz
dec
nop
jbe
xchg
and
stos
or
cmp
add
mov
sbb
sahf
push
lret
push
dec
push
sub
mov
adc
call
mov
aad
int
push
mov
nop
lcall
inc
out
dec
mov
lret
and
cmc
xorb
out
mov
mov
out
in
lods
out
xchg
pop
push
adc
mov
je
stos
stc
sahf
jbe
mov
xchg
outsb
pop
add
dec
fisttpll
into
leave
out
cmc
in
add
xor
test
imul
pushf
jl
push
push
lret
push
sahf
orb
mov
push
lret
mov
aam
insl
xor
cmp
sbb
adc
lret
cmp
outsb
mov
fcomip
add
cwtl
es
ljmp
and
out
xor
enter
ret
hlt
ror
into
xor
std
ret
mov
shll
aaa
adc
ja
in
xlat
movsl
push
jge
lahf
and
pop
ja
xchg
and
cmp
push
mov
mov
pop
push
lods
je
inc
add
cmp
mov
cwtl
mov
icebp
and
js
push
fwait
inc
jb
jl
ljmp
aam
aaa
cmp
jecxz
cmp
test
mov
fidivl
arpl
mov
sub
rcrl
mov
sub
aad
push
jnp
ds
dec
xchg
out
cwtl
jg
inc
mov
adc
scas
inc
mov
jp
jcxz
dec
insl
dec
xor
mov
out
dec
out
js
xchg
fnsave
aas
sbb
shlb
jg
cs
sub
cmpsl
cmp
cmp
jns
dec
jmp
mov
inc
loopne
gs
imul
icebp
adc
xlat
gs
or
arpl
jb
das
in
pop
xchg
or
sbb
inc
imul
lock
ret
sar
xchg
jg
jb,pn
cmpb
test
push
sub
push
outsb
sbb
pushw
and
add
push
aas
adc
jnp
jmp
dec
inc
loope
sar
lea
sbb
push
imul
lods
shlb
dec
mov
into
inc
popf
bound
mov
xchg
mov
add
xchg
adc
rolb
icebp
sub
sti
and
jbe
cmp
inc
movl
gs
push
mov
mov
cmpsl
mov
cs
add
mov
mov
or
mov
jne
inc
lcall
or
dec
cmpsl
in
sub
mov
int3
pop
sub
out
in
mov
jg
test
jb
out
inc
and
mov
mov
cmp
into
pop
popa
or
aad
mov
cmpsb
mov
mov
js
mov
sbb
adc
jmp
mov
add
sbb
mov
xor
fwait
push
xchg
mov
outsl
mov
inc
or
mov
pusha
scas
adcb
lcall
pop
aam
scas
pop
lds
jae
in
ds
jo
fsub
ffreep
sbb
mov
sbbl
adc
push
pop
imul
sub
test
movsbl
cmpsl
dec
xchg
out
loopne
ds
or
cs
lcall
push
leave
fdivr
add
or
insb
jmp
xor
xor
das
push
adc
add
dec
stc
cltd
mov
push
sbb
mov
popf
icebp
lret
insb
cmpsl
cli
add
imul
je
ret
push
mov
dec
inc
in
push
rolb
inc
cs
iret
mov
call
mull
jge
sub
pop
mov
stos
gs
pop
ret
sbb
xlat
inc
into
dec
test
cmpsb
jle
lds
mov
jle
shll
xchg
mov
dec
adc
mov
cmpb
cs
sub
je
lahf
lods
repz
xor
lret
cltd
mov
inc
jb
jle
and
mov
or
data16
push
repz
sar
jp
aam
jecxz
test
les
push
mov
mov
add
in
dec
divps
inc
inc
rol
jmp
movsb
pop
pop
fmull
ret
sbb
mov
lcall
inc
js
in
rcll
scas
pand
pop
add
mov
daa
jg
cmp
adc
das
gs
ret
dec
xchg
cmp
outsl
test
jle
ds
js
cltd
xchg
test
outsb
les
test
pop
es
sbb
insl
cld
sub
mov
mov
rorb
jmp
cltd
and
mov
fidivrl
stos
mov
push
roll
mov
ret
xor
and
jae
xor
push
mov
pusha
jns
xchg
mov
roll
dec
mov
jl
sbb
loop
push
inc
sbb
jmp
and
xor
cmp
add
mov
lcall
or
mov
sti
mov
mov
cmpl
les
and
mov
pop
fwait
icebp
xor
daa
mov
test
popf
lcall
movsl
xor
inc
dec
aaa
jb
rcrb
movsl
jge
pop
ss
and
in
fsubs
aaa
stos
push
xchg
in
cmp
sbb
dec
aaa
fildl
scas
out
stos
push
or
or
jae
pushf
jmp
cmp
movb
enter
or
in
pushf
lock
aaa
insl
mulb
fs
jnp
out
lods
ljmp
dec
adc
cmc
or
shlb
and
add
inc
mov
loope
ret
test
js
or
or
lahf
add
popl
mov
sbb
dec
pop
lods
mov
insl
cmp
arpl
jmp
jmp
ljmpw
out
popf
movsb
xchg
jmp
rcrl
jecxz
push
repnz
ljmp
std
out
ret
inc
xor
adc
fucomp
out
test
enter
out
stos
test
mov
mov
jb
pop
mov
aas
inc
add
dec
mov
adc
stos
jge
lahf
add
je
jno
lods
les
mov
dec
adc
stos
call
clc
fstl
lahf
hlt
lds
mov
das
ljmp
shlb
and
lret
push
or
mov
fisubrl
iret
sti
pop
cwtl
repnz
or
xchg
push
jecxz
loop
jl
std
mov
ljmp
sbbl
pop
jge
cltd
adc
xor
mov
enter
sbb
cmpsb
push
xor
xor
mov
adc
jo
jl
cwtl
ss
je
sbb
mov
scas
and
inc
out
ljmp
scas
dec
test
ficomps
add
imul
and
minps
lahf
sbb
call
xchg
pushf
movsb
adc
test
mov
rorb
cmp
popf
ret
bound
sub
inc
stos
inc
arpl
fidivrl
clc
movsl
cs
aam
data16
inc
pop
dec
sti
push
sbb
push
test
pop
shl
ss
pop
lea
sub
jb
fisubl
xchg
test
pop
xor
es
rolb
sbb
je
mov
mov
scas
push
cmpsb
gs
test
inc
cmp
sbb
iret
shlb
ja
arpl
setnp
scas
jg
ret
gs
mov
shl
mov
mov
jae
cs
lahf
pop
pop
stc
sub
xor
fiadds
test
adc
out
push
jmp
adc
mov
movsb
lods
cmp
jns
add
add
sub
jbe
mov
stos
mov
pop
movsl
mov
pop
mov
lret
ret
nop
cmp
cld
lods
out
negl
push
adc
stos
notb
or
mov
popf
cmp
dec
pop
xchg
push
pop
sar
pop
es
daa
xor
ret
and
mov
push
adc
loop
test
pop
cld
dec
mov
dec
adc
push
adc
int
pop
sbb
scas
aas
es
int
fimull
sub
mov
js
popf
push
or
jg
xchg
test
jmp
xchg
add
clc
out
mov
xchg
cmp
mov
repnz
jle
xchg
lods
xor
sbb
pop
dec
mov
pop
push
test
imul
ret
cmp
stos
push
stos
xchg
test
ds
out
stos
testb
lret
xor
cmpsb
aas
pop
jae
sbbl
ret
lret
xchg
dec
ss
out
jnp
push
pop
jg
cmp
inc
sbb
roll
rclb
into
call
add
aad
lahf
jne
xchg
mov
mov
adc
inc
bound
mov
mov
push
adc
mov
aad
lods
and
inc
ss
push
jle
jnp
mov
push
jae
pop
jo
lcall
sbb
sahf
aad
jno
ds
push
adc
pusha
jnp
dec
repnz
add
jnp
cmpsl
pop
shll
movsl
adc
or
out
pop
sbb
adc
lahf
outsb
xchg
popf
jecxz
jae
pushf
mov
repz
jmp
stc
imul
jmp
fcomip
xchg
and
hlt
inc
jl
addr16
lds
sti
xchg
mov
cmc
jecxz
das
dec
dec
xor
pop
aad
sub
cld
jns
cmp
cmp
xor
fs
test
loop
fdivr
fidivl
jnp
or
push
push
icebp
loope
sbb
cwtl
xchg
dec
ds
mov
mov
inc
dec
pop
and
fidivrs
mov
insb
in
sti
sbb
dec
outsb
push
lock
or
and
mov
cmpsb
mov
adc
into
push
in
mov
call
push
adc
adc
inc
xchg
cmp
mov
out
mov
dec
cmp
jae
lods
test
mov
xchg
das
outsb
pop
mov
insb
pop
pop
push
adc
ficoms
shll
xor
cld
in
in
std
jge
nop
sub
cwtl
jo
loopne
jl
and
xchg
jns
mov
repz
addb
shlb
mov
cmpsb
sub
inc
gs
loop
xchg
cmp
fwait
imul
pop
pop
xor
fcmovnb
sbb
xchg
mov
inc
jl
movsb
mov
mov
iret
dec
jmp
gs
add
ret
mov
push
xchg
mov
dec
and
cmp
mov
icebp
mov
or
dec
jg
icebp
fldenv
pop
fdivrs
cmpsb
or
lods
jae
lock
cld
shl
stos
jecxz
idiv
subps
jae
adc
mov
add
sub
adcl
jmp
loop
out
or
dec
add
clc
push
adcb
cmp
or
ret
test
xchg
pusha
cld
jb
xor
and
out
mov
addr16
pop
stc
and
sbb
adc
mov
into
out
fwait
add
lcall
fisttpl
and
mov
jae
cld
mov
sbb
movsl
aas
enter
push
sub
std
fisubl
fmuls
cmp
int
sbb
push
xchg
es
aad
jb
in
push
rclb
sub
push
pop
xorb
xor
xor
jle
xor
das
movsb
iret
fbld
inc
dec
scas
lea
mov
pushf
and
hlt
cmp
push
mov
adcb
aad
mov
xchg
push
nop
pushf
rcll
clc
push
pushf
fs
cmc
outsl
ss
jns
add
imul
pop
outsb
cwtl
sbb
lcall
lods
inc
fcomps
adc
push
sbb
rdpmc
lea
cli
mov
stc
or
mov
cs
inc
push
aas
rolb
push
jp
dec
dec
scas
aas
and
fnstcw
sub
xchg
or
mov
sub
inc
xchg
bound
push
inc
push
sub
out
sbb
pop
ljmp
and
in
inc
icebp
movsb
add
pop
adc
sub
inc
cmp
mov
ss
inc
test
pop
movsb
sbb
stos
aaa
mov
cmp
cmpb
jmp
dec
into
sbb
inc
and
mov
loop
push
daa
inc
and
mov
mov
outsb
jbe
sub
std
pop
adc
cmp
and
daa
mov
cmp
mov
and
loopne
sbb
cmpsl
xor
lcall
sub
rcrl
mov
out
leave
push
mov
sub
fwait
ret
cmpsl
dec
flds
cmc
cmpsl
test
or
shlb
push
push
popa
push
jns
loopne
int
dec
xchg
cmp
lret
aad
jmp
mov
int
sbb
pop
and
rep
in
lds
inc
xchg
xor
fcmovnbe
pop
push
popa
push
rcrl
test
sub
and
inc
rcll
cmp
inc
inc
jg
xor
sti
gs
jne
cli
mov
nop
icebp
fistps
jno
es
in
cwtl
mov
jnp
xchg
jg
ja
mov
push
jecxz
cmpsl
stos
lcall
popf
jge
mov
outsl
fildl
cmp
rolb
xchg
sti
mov
push
push
inc
sbb
pushl
mov
mov
lods
cmp
or
lock
aas
xor
mov
ss
push
mov
push
das
cmp
xchg
inc
or
scas
mov
lcall
int3
lret
cmp
xchg
xor
mov
jae
sti
repnz
add
mov
pop
lret
test
aaa
cmp
push
cwtl
aaa
shll
mov
xor
cmpl
dec
cmp
andb
push
mov
cmp
pushl
je
fdivrp
shlb
mov
jne
mov
js
cmpsb
push
jp
je
pop
pushl
or
in
ror
adc
lds
cli
push
insb
dec
scas
push
std
leave
push
sti
jnp
dec
cli
enter
in
test
lret
push
pusha
mov
xchg
lcall
ret
push
addr16
and
mov
lock
dec
adc
mov
jmp
out
pop
testb
mov
arpl
popa
mov
push
insb
xchg
push
push
bound
fsubp
je
jno
sub
shll
cli
lock
mov
mov
in
cli
mov
add
mov
mov
addr16
fidivrl
and
fstpt
inc
pusha
push
dec
sub
pop
inc
add
sahf
stc
lea
notb
daa
imul
adc
jge
fsubs
aad
imul
xchg
stos
fdivrs
stos
fwait
or
mov
gs
outsl
adc
jge
add
jge
inc
std
push
sub
jb
cmpb
out
cmpsb
jnp
int
jbe
jmp
addr16
or
push
insb
push
test
imul
mov
pop
sahf
test
or
mov
xor
lcall
call
xor
sbb
mov
mov
mov
loope,pn
push
ret
lods
insb
insb
lret
test
push
or
jle
mov
jae
bound
mov
loop
push
mov
and
fistpll
dec
fists
cmp
pushf
mov
cmp
test
jmp
mov
jne
icebp
pop
aam
adc
cmp
adc
add
call
cmpsl
fsubrs
in
mov
dec
jne
scas
sbb
sbb
sarl
mov
mov
int3
lea
mov
pop
xchg
cltd
jbe
idivl
xor
jmp
cmp
jb
xlat
mov
push
lock
push
jge
mov
div
pop
stos
mov
cltd
xchg
inc
cmp
outsb
mov
movsb
mov
add
sbb
dec
iret
rcll
inc
inc
xchg
es
lret
daa
cwtl
inc
shll
js
mov
insb
shrl
ds
fistl
int
add
lods
mul
sbb
aam
in
mov
push
xchg
jmp
loop
dec
sahf
mov
xor
ret
cmp
mov
and
mov
push
xor
mov
jae
mov
pop
adc
dec
adcl
hlt
push
imul
pop
jl
mov
jmp
xlat
repz
mov
dec
insb
cwtl
jp
adc
jp
cmp
in
cmpsb
fstpl
or
adc
xchg
pusha
jno
push
test
cmc
pmuludq
sbb
push
in
add
mov
pop
cmp
out
in
sti
loopne
dec
jmp
filds
int
mov
arpl
fnstsw
cmp
sbb
add
repz
loopne
xchg
mov
jo
stos
xor
pop
repz
push
lock
scas
and
out
dec
inc
out
mov
jg
ret
loop
lret
pop
xor
std
out
sbb
mov
ret
mov
je
stc
ss
cld
roll
movsb
dec
fnstenv
jmp
js
sub
xchg
mov
out
in
testb
fsubrl
mov
inc
xor
xor
sbb
jae
and
cli
mov
sub
ret
mov
daa
lret
push
pop
scas
loope
or
and
add
xchg
mov
lds
jo
mov
adc
test
ss
jl
jmp
and
out
hlt
scas
in
jae
lods
jno
xrelease
sub
inc
stos
js,pt
mov
sbb
aam
mov
mov
mov
mov
ret
ror
xor
pop
push
fidivrs
cmp
test
sub
xchg
iret
aaa
adc
xchg
lea
js
shlb
popf
add
adc
mull
fwait
sub
jbe
xor
jns,pn
int3
jmp
or
test
imul
mov
xlat
je
pop
dec
cmp
mov
dec
mov
xor
test
inc
xlat
dec
sbbb
cmp
out
pop
iret
out
and
cs
adc
cltd
or
ljmp
out
test
popl
int3
outsb
ja
pop
fs
xor
xor
outsb
pushw
jge
mov
and
aas
lcall
shlb
jp
mov
int
fstl
push
stos
xor
cmp
pop
cmpsb
addr16
ljmp
cmp
cmp
pop
addb
dec
xlat
nop
adc
orl
sbb
shr
in
cmpsb
cmpsl
xchg
dec
addb
test
hlt
jmp
mov
mov
xor
mov
fmul
pop
out
fwait
stc
in
movsb
add
mov
inc
fnstenv
add
push
dec
cmp
sub
fsubl
push
shlb
xchg
xlat
in
push
mov
mov
stos
push
xor
loopne
cmpsb
inc
sbb
in
mov
xorl
add
stos
int
mov
cmpsb
lods
pushf
jo
fisttpll
std
jg
fcomip
es
lods
sub
sub
popa
dec
jle
lret
lock
pop
cld
imul
xchg
jl
mov
sbb
pop
cmp
sub
sbb
push
stos
mov
dec
add
sub
fmul
xchg
inc
mov
push
lss
xchg
lahf
jo
sbb
add
sbb
or
lahf
loop
pop
jae
add
lcall
cmp
outsl
push
lods
sahf
pop
or
mov
add
fcoml
mov
daa
and
or
leave
enter
pop
push
pop
incl
inc
lods
xchg
add
mov
cmp
cmp
fldt
ds
pop
jae
push
sub
xor
lods
pop
fdivp
call
std
movsb
sarb
inc
adc
rol
cmp
insb
add
and
push
ja
sub
mov
sub
lcall
out
mov
dec
pop
mov
bound
mov
add
push
out
mov
stc
pop
mov
enter
pop
gs
xchg
icebp
jb
scas
sahf
sarb
mov
mov
andb
fs
ds
test
inc
cs
aaa
cld
cwtl
jns
inc
xchg
cmc
pop
shll
xchg
cs
iret
into
fiadds
pop
ret
sub
jno
hlt
jecxz
mov
dec
pop
movsb
push
movsl
inc
mov
xchg
je
cmp
insb
lock
or
and
push
push
fwait
std
xchg
lods
push
sbb
mov
lods
or
imul
dec
and
cmpsl
mov
and
pop
cmc
xor
sbb
pop
fildl
lahf
ljmp
fistpll
popf
push
shr
push
mov
movsl
stos
pop
lret
cmp
xor
xchg
movsb
jo
push
or
adc
js
cltd
push
sahf
and
je
xor
clc
and
lods
popf
leave
bound
mov
rorb
adc
lea
inc
mov
add
dec
push
hlt
outsb
sti
jb
adc
andl
inc
lahf
sbb
cs
in
in
or
fsubrs
add
mov
mov
push
and
aam
push
inc
xchg
or
icebp
sub
shrl
aam
lods
and
mov
dec
insb
in
mov
rorl
add
and
pop
dec
sbb
mov
lock
sbb
lds
adc
push
push
testb
jae
inc
push
lods
popa
push
pop
sub
cli
fnstsw
outsb
repnz
pop
mov
mov
add
sub
add
test
adcl
inc
push
test
das
dec
xchg
pop
add
ret
sub
mov
jne
pop
xor
jge
lahf
lahf
nop
mov
push
jno
push
dec
cli
sti
stos
jl
fisubrl
adc
in
mov
or
fcomps
lods
mov
rcr
mov
enter
adc
lret
jl
jg
xchg
push
fbld
push
lods
or
cmp
dec
mov
lret
adc
mov
enter
cld
shl
popf
jno
xchg
dec
data16
mov
incb
sub
pop
cwtl
shlb
shlb
dec
cmp
sub
or
hlt
mov
fiaddl
inc
pop
push
pop
sub
sbb
push
pop
rorl
jnp
fmull
mov
adcb
pusha
shlb
sub
or
adc
inc
adc
sub
mov
add
rolb
jae
jg
cmp
lds
add
fsts
push
sbb
rcl
xor
lds
push
ret
ja
push
adc
xor
sbb
push
adc
lds
mov
xchg
xchg
pop
icebp
inc
add
outsl
pop
sbb
adc
insb
dec
push
cmp
sub
cmpsl
mov
fs
call
inc
pop
hlt
push
push
add
lahf
mov
mov
jbe
xor
in
inc
inc
dec
repnz
dec
in
enterw
out
pop
pop
fdiv
add
std
mov
and
push
out
pushf
fcoms
jmp
bound
push
ds
or
ds
loope
enter
cmp
shlb
rol
ret
sbbl
cmp
movsb
movl
or
and
sbbb
adc
imul
add
andl
outsl
sahf
aaa
push
scas
inc
data16
or
sbb
divl
inc
ds
mov
subl
movsb
int3
jg
pop
rcrb
xchg
pushf
xchg
pop
lock
cli
pop
cli
jnp
test
cmpsl
mov
push
mov
mov
mov
xlat
fldcw
stc
inc
fwait
aad
cmp
dec
lea
arpl
outsl
orb
dec
cwtl
out
popa
mov
add
loopne
js
pop
mov
mov
adcb
mov
cmp
adc
mov
pusha
xchg
and
pop
mov
push
cld
jmp
outsl
out
ss
inc
xchg
jno
sub
jbe
mov
sub
xchg
js
roll
scas
lcall
cmp
push
mov
sahf
pop
out
lock
mov
addr16
loopne
ds
fldlg2
dec
xor
jo
jmp
hlt
inc
adc
ja
js
repz
pop
testl
ss
cwtl
or
popf
insb
push
mov
and
andb
testl
push
push
sub
pop
push
test
xchg
pop
jne
rorb
aas
xchg
lods
in
decb
fistps
xor
loop
sub
inc
ss
rcrb
popf
outsb
clc
aam
xchg
pop
cmpsl
xor
add
es
xchg
hlt
sti
push
dec
sub
out
adc
mov
jmp
jae
fisubl
add
in
sub
ds
shl
push
or
lsl
divl
sbb
mov
and
jecxz
add
adc
add
sub
jns
aaa
add
and
orb
sub
mov
push
inc
ret
imul
dec
mov
or
xor
pop
fcompl
arpl
pop
adc
icebp
sti
stos
pop
dec
jge
ret
jecxz
cld
adc
lock
in
jl
mov
ja
pop
test
daa
inc
xchg
push
lret
mov
adc
stc
mov
mov
inc
mov
adc
lea
and
xor
cmp
and
and
shll
jnp
sub
push
push
push
stos
iret
xlat
xchg
xor
inc
pop
out
add
das
in
pop
sti
jmp
cmp
adc
js
sub
or
add
sti
adc
jns
rorb
pop
sbb
xchg
mov
addr16
mov
call
mov
sbb
or
xchg
mov
call
js
cwtl
push
push
mov
add
das
mov
stos
adc
inc
ret
imull
int3
add
pusha
ret
jmp
movsb
inc
pusha
daa
cmpsl
xchg
xchg
mov
stos
orb
bound
shrb
movsb
rol
popf
sub
mov
xor
lret
xor
mov
push
adc
or
test
in
iret
inc
push
aad
fucomip
bound
xor
dec
mov
or
mov
in
pop
arpl
fisubs
dec
imul
fiadds
pop
jge
shlb
jo
cld
bndldx
mov
mov
xchg
out
movsl
cs
jnp
mov
mov
jmp
or
add
or
mov
sub
scas
inc
aas
jno
std
es
jnp
daa
out
adc
test
push
cmc
lods
cmpsl
mov
push
mov
or
popa
cld
fldenv
aaa
std
ja
push
outsl
mov
or
jecxz
mov
loopne
and
or
enter
mov
add
mov
pop
out
aas
mov
jp
push
test
mov
fwait
push
mov
scas
fs
cltd
cwtl
mov
mov
mov
sub
dec
pushf
dec
dec
pop
xor
stos
loopne
out
dec
cmp
dec
test
out
mov
dec
jmp
and
mov
shl
jp
xor
push
dec
jne
or
popa
pushf
scas
jg
sbb
fsubrl
push
outsb
or
cli
cmp
inc
or
push
cld
jb
sbb
lods
adc
pop
push
shrb
mov
mov
arpl
and
mov
xor
lods
lods
lahf
or
movsb
sbb
sbb
cmp
ss
xor
fidivl
in
push
jp
subl
mov
fidivrs
xchg
lea
stc
stc
jle
push
or
das
pop
das
jae
pop
jmp
pop
in
icebp
pushf
fimull
int
inc
xchg
and
push
xchg
out
fwait
jle
into
push
addb
xorl
push
mov
jne
andl
shrl
jmp
insb
add
data16
jbe
adc
xor
sbb
xor
js
roll
les
sbb
out
out
and
clc
mov
pop
inc
inc
push
push
add
daa
gs
repz
je
sti
test
imul
cmp
fsts
adc
pop
stc
pop
ret
enter
outsl
jecxz
inc
rcrb
xor
decb
out
mov
movsl
iret
push
dec
push
mov
subb
cmc
loop
stos
mov
inc
jp
lea
out
movsb
in
lea
xor
add
sub
mov
outsl
fisttpll
adc
adc
jecxz
sub
sub
jae
sbb
dec
sub
cmp
mov
subb
mov
push
sbb
int3
sub
js
addl
lret
shrb
sub
out
into
mov
bound
cmp
push
enter
xchg
mov
mov
ljmp
int3
clc
je
ss
sbb
or
aam
sahf
addb
mov
std
xor
cmpl
pop
into
aas
xchg
inc
addr16
insl
in
dec
xchg
push
cmc
mov
mov
test
mov
cli
adc
or
cmp
lods
xchg
add
outsl
xorb
mov
mov
rorl
jnp
sbb
inc
pusha
add
in
loopne
popa
lea
mov
out
pop
in
in
ss
scas
in
addr16
mov
pop
pop
pop
push
shl
negl
pop
adc
test
cld
aad
stos
dec
loopne
lcall
mov
mov
adc
out
test
sbb
loopne
mov
mov
mov
add
cmpsb
adc
es
shlb
mov
pop
inc
mov
fisttpll
mov
jecxz
xchg
imul
and
and
or
ljmp
sbb
lret
inc
daa
mov
jmp
je
jg
pushl
push
inc
mov
or
sbb
inc
neg
xchg
call
and
dec
mov
jnp
in
xlat
or
mov
or
jno
loope
insl
aas
test
xchg
inc
mov
xor
les
xchg
sub
lahf
and
in
add
and
popa
arpl
mov
addl
pop
test
add
call
sub
insl
call
push
jmp
fstl
mov
push
dec
iret
scas
sbb
mov
addb
and
movsb
inc
push
cmp
mov
orb
push
jbe
shll
and
daa
addr16
out
fs
sbbl
jnp
loop
adc
arpl
mov
mov
inc
sbb
mov
sti
jns
inc
jmp
in
inc
jl
fdivp
fs
mov
fstpt
fcompl
lcall
mov
fdivr
sti
insl
mov
clc
push
xchg
push
pop
ja
sub
fisttps
push
jg
xor
lods
push
mov
sub
jle
inc
jno
inc
dec
push
and
insl
ret
vprotw
movsl
mov
int3
sbb
inc
ljmp
iret
movsl
sub
sub
aaa
in
mov
jecxz
lret
and
add
call
push
jp
hlt
xchg
fcom
out
mov
dec
inc
into
ret
dec
jno
dec
mov
adc
jnp
hlt
xchg
sti
cmp
movsl
pop
add
fists
mov
repz
aas
dec
mov
in
sub
lcall
imul
push
jnp
push
cmp
ljmp
rcrb
fldl
in
cmp
lods
popf
cs
cmp
int3
fists
enter
cs
test
popa
sub
hlt
mov
scas
nop
cli
jo
lcall
ficoml
mov
aam
shl
test
shll
ret
push
inc
rclb
cmc
pop
adc
or
in
aad
fs
lods
jg
mov
aaa
mov
cmc
dec
stos
in
jmp
rcrl
test
jge
inc
mov
into
outsl
mov
jmp
and
andb
mov
sbb
popf
fstpl
int3
bound
lea
fadds
mov
das
pushf
cmp
int3
mov
cmp
out
push
inc
push
pop
mov
mov
fldl
fsubr
push
dec
fiaddl
jne
pop
sbb
xchg
clc
popa
std
clc
scas
mov
pop
and
and
pop
jne,pn
fcoms
scas
jp
cltd
push
dec
xchg
push
add
cmp
pop
push
dec
scas
cmp
movsl
pop
push
cmp
loop
cmp
inc
lret
clc
xlat
jle
fcmove
sub
dec
lret
push
xor
add
test
jo
xchg
adcl
bound
shrb
jo
and
in
or
mov
aas
push
test
sub
xchg
jne
imul
xlat
push
push
mov
mov
loopne
ret
xor
dec
pop
push
in
xchg
dec
mov
mov
test
xchg
loopne
popf
mov
fadd
orl
ret
fs
sti
pop
sbb
mov
shll
xchg
add
mov
pusha
stos
das
lock
push
ror
inc
mov
jns
test
test
jbe
dec
bound
aas
sti
subb
lods
nop
inc
cmp
addb
stos
daa
hlt
inc
mov
sbb
imul
inc
mov
xchg
mov
hlt
or
stos
push
cmp
addr16
adc
lahf
xchg
bndstx
or
mov
xor
sub
dec
orb
inc
enter
push
mov
sbb
mov
mov
imul
insl
insl
jg
mov
dec
hlt
xor
es
add
push
setne
dec
sbb
and
xchg
adc
push
and
and
hlt
mov
mov
dec
pop
int
clc
xlat
xchg
push
movsl
jp
sti
push
imul
mov
xlat
mov
out
push
pop
aaa
orl
pop
test
xchg
mov
push
xchg
adc
and
rcr
jmp
mov
test
pop
je
aas
adc
std
psrlq
sarb
lret
push
mov
push
xor
xchg
mov
out
xchg
stc
cmpsb
pop
push
clc
aad
sbb
negb
sbb
je
add
imulb
dec
shl
lods
lret
ret
aam
xchg
mov
arpl
cmp
shrb
pop
sbb
and
mov
lds
mov
fmul
pop
cmpsl
xchg
int
insb
add
dec
jp
inc
rcrb
daa
out
rorb
stos
mov
adc
negl
cmp
mov
ret
mov
sbb
pop
cli
xor
fidivrs
push
push
push
pop
mov
mov
mov
dec
or
sarl
mov
sbb
movsl
lea
mov
pop
sbb
out
adc
arpl
repz
scas
xchg
lods
test
pop
aad
aam
std
scas
jmp
out
nop
adcb
std
dec
inc
sahf
mov
dec
jmp
mov
jno
fiaddl
fsts
jne
ja
cld
div
jle
aaa
fiaddl
push
ret
fildl
gs
xchg
push
aaa
mov
xchg
popf
pop
dec
bound
ret
mov
nopl
sbb
inc
or
insl
rcll
or
dec
int
fdivs
ret
test
cmc
jmp
jae
gs
jl
repz
cltd
and
fistpl
lret
and
dec
fdivl
rcr
into
cmp
test
sub
int3
jnp
scas
xchg
in
mov
lods
ja
push
loop
ror
jae,pn
in
pop
enter
pop
rorl
pop
cmpsb
test
sbb
js
sbb
push
xor
vprotw
adc
inc
or
sbb
dec
sub
jle
mov
push
leave
ret
dec
cwtl
aam
pop
insb
adc
push
fs
aam
push
dec
lahf
push
or
out
mov
mov
scas
sbb
ss
test
sbb
jg
ja
add
dec
mov
sub
fisubrs
test
test
add
insb
lods
iret
adc
jo
xlat
jbe
insb
inc
insb
jl
mov
inc
jle
sbb
rcll
stc
pavgw
repnz
fldcw
sub
push
mov
mov
inc
in
popa
std
std
ret
add
jae
stos
mov
lea
mov
test
inc
int3
pop
mov
idivb
xor
call
cmp
sub
pop
mov
xchg
mov
repnz
and
xor
int3
cmp
in
loopne
mov
shl
loopne
inc
stos
inc
add
sub
sbb
addb
sahf
call
adc
push
out
mov
fsubrs
loope
das
inc
bound
xor
cmpsl
rol
jmp
insl
cmpsl
jo
clc
mov
cmp
jns
gs
jmp
xchg
ret
enter
xchg
pop
pop
xor
jnp
mov
xchg
and
notb
aad
lds
lcall
dec
jb
outsb
inc
inc
fwait
loope
cmp
in
sub
mov
xchg
scas
lds
insb
jb
pop
inc
mov
enter
xchg
jo
mov
mov
or
aas
mov
das
jno
cmpsl
inc
ja
sub
jle
adc
fidivrs
data16
cli
ret
push
mov
mov
popa
mov
fisubs
subb
ss
adc
mov
xchg
xor
lods
in
shlb
pop
adc
mov
shl
testb
inc
mov
jbe
mov
lret
xchg
jge
cli
addr16
test
add
ja
adc
jae
pop
xor
fwait
mov
cs
stc
dec
rcl
das
jo
loope
in
imul
gs
loop
adc
push
jle
pop
mov
and
sub
addr16
addr16
push
push
push
jg
sub
dec
push
xchg
jns
cltd
jno
loope
sarb
or
sub
fstpl
fdivs
jl
dec
and
cmpsb
xor
sahf
cwtl
inc
cmp
push
adc
ljmp
mov
leave
xor
jp
ds
jo
nop
sub
scas
cltd
stos
mov
sub
sar
push
insl
xchg
mov
into
xchg
sub
mov
sbb
movsl
shlb
cmpsb
outsl
aas
push
shr
in
pushl
es
sbb
push
bnd
pop
gs
repz
sahf
adc
push
out
adc
or
and
jae
sbb
and
repz
lret
and
adc
mov
popa
imulb
ss
and
mov
inc
je
lds
das
xchg
and
xchg
mov
sbb
movsb
je
push
xor
xchg
dec
subl
mov
movsb
or
inc
or
sub
pop
ds
push
insb
pop
sub
sti
cmpsl
subl
mov
push
test
icebp
lock
lods
inc
xor
js
mov
jo
jbe
sbb
pop
iret
or
out
movsb
icebp
shr
aam
std
fmuls
insb
lret
ret
jp
mov
push
fwait
dec
ds
cmp
enter
repnz
aad
sub
fstpt
stc
rcr
das
int
test
aaa
fdiv
scas
shl
cmpsb
xchg
dec
int
movsb
mov
or
fcomp
xchg
daa
cmp
lea
inc
pop
arpl
into
sbb
xlat
jg
jae
and
insb
out
sarl
out
dec
inc
push
push
mov
lahf
cwtl
pushf
jge
out
ror
mov
add
jnp
sbb
mov
pop
push
ja
mov
push
pop
pop
fst
loopne
push
loope
or
xor
nop
popl
jg
adcl
mov
or
push
adc
popf
gs
dec
test
outsl
inc
pop
adc
movsb
nop
in
cltd
add
es
push
pop
fcoml
inc
adc
dec
shlb
mov
lods
mov
test
rclb
pop
fsubl
loop
xchg
add
imul
in
xor
out
scas
jns
xchg
add
inc
jl
mov
dec
insb
cmpsb
mov
sub
ljmp
jbe
daa
lds
and
aam
adc
enter
icebp
xor
in
out
aad
xchg
cld
icebp
cmp
cmp
add
lahf
pop
pop
lea
shr
mov
push
xor
xchg
add
push
loope
adc
sub
sub
push
jmp
mov
push
and
push
push
andl
cmpsl
loope
out
aad
jle
dec
jl
fsub
pushl
adc
sbb
push
insl
in
dec
or
sub
test
pop
shrl
jmp
push
cld
cmp
mov
push
add
jmp
subb
adc
leave
dec
movsb
dec
push
jp
sub
xchg
dec
xchg
in
imul
out
inc
imulb
inc
test
pop
and
add
sahf
mov
test
popf
arpl
std
imul
add
mov
sbb
loop
mov
mov
xchg
ljmp
aas
bound
mov
ja
sbb
mov
je
and
dec
xchg
push
mov
push
int3
cmp
in
adc
xchg
fadds
icebp
push
lcall
xor
add
stos
mov
arpl
dec
mov
or
inc
pusha
or
lret
clc
cwtl
inc
jl
loopne
test
fsubr
stc
xchg
cmp
int
mov
dec
sub
sub
and
sub
pop
fnstcw
xchg
pusha
jns,pn
xor
sbb
sbb
ss
scas
loopne
insb
jl
mov
outsb
pusha
mov
push
xlat
and
sub
insl
mov
mov
ret
adc
lret
mov
mov
iret
leave
hlt
dec
dec
add
cmc
or
pop
stos
inc
movsb
in
adc
cmp
xchg
cmp
xchg
push
andl
push
scas
xchg
push
push
add
jbe
inc
leave
addr16
xchg
movsl
call
cmp
pop
sub
push
fiaddl
stos
rol
push
lret
adc
mov
imul
push
pop
adc
adc
adc
imul
les
inc
loope
not
add
loope
sub
cltd
bound
out
push
or
stos
aad
push
xchg
daa
stos
lds
outsb
in
pop
in
mov
out
xor
dec
jmp
nop
aad
fildl
mov
shl
imul
popa
inc
in
popa
iret
mov
add
negb
repnz
lds
loop
bound
mov
mov
out
jge
lods
lods
cmp
inc
test
add
dec
xor
adc
addr16
enter
sub
lods
adc
ficoml
mov
pop
test
push
push
fcmovnbe
loope
mov
xor
scas
mov
lea
ljmp
mov
push
shrb
add
test
cmp
fnstcw
jns
cs
jne
scas
sub
adc
inc
sbb
xchg
mov
in
push
sub
xchg
les
pop
lock
gs
sbb
movsl
aas
inc
jp
scas
test
xchg
into
cmc
sahf
and
push
je
ficoms
aad
jns
sahf
lret
jle
mov
daa
pop
or
add
jge
xchg
mov
and
mov
mov
cltd
lods
mov
add
or
xchg
push
or
lods
push
std
mov
in
push
fwait
movsb
adc
sub
xchg
pop
mov
daa
ja
aad
inc
xchg
mov
outsb
mov
inc
lcall
or
outsb
push
fidivs
mov
cmpsl
add
adc
cli
int3
xchg
pop
insb
inc
cs
adc
cmpsl
push
cmp
jo
xchg
repz
cmp
or
add
dec
in
push
xchg
xchg
mov
sbb
test
in
mov
inc
jno
add
adc
aad
lahf
arpl
cmc
arpl
mov
jl
adc
xor
and
lods
loop
jl
jo
jge
adc
cmpsl
aaa
push
sub
bound
mov
cs
aam
shl
gs
xor
xlat
outsl
mov
mov
inc
or
xor
mov
arpl
jne
jo
add
btr
xor
iret
mov
not
lds
push
mov
addr16
iret
loopne
add
rolb
jmp
jae
cmc
cmp
sahf
xor
loope
inc
lret
dec
sub
ret
or
sub
xchg
repz
ss
lahf
mov
fs
sbb
pop
outsl
ret
mov
xor
movsl
or
pop
lahf
aad
jge
pop
mov
aas
or
clc
lcall
insb
dec
test
push
push
add
int3
icebp
inc
sub
cwtl
mov
test
movsb
jg
roll
hlt
sub
enter
sti
fisttpl
fldt
and
es
stos
fdivrp
lods
xchg
in
sbbb
adc
inc
cli
mov
sti
or
out
mov
cld
roll
ret
mov
lds
or
jae
leave
xor
sub
cmp
push
fld
int3
push
imul
sbb
lret
out
adc
inc
insb
pop
movsb
js
rol
call
int3
jge
jp
jp
adc
and
je
scas
cmp
decl
fld
jmp
ja
add
insl
cs
bound
or
cmp
andb
sub
push
cld
imul
jl
int
lret
lahf
insb
leave
cmpsl
dec
lcall
mov
cmp
adc
inc
add
aaa
jmp
lss
xor
cld
add
or
in
push
sti
inc
out
sbb
and
mov
loope
repz
mov
enter
sub
lods
jns
xor
lcall
fidivl
fldcw
push
jns
cmp
sub
cld
scas
mov
fistl
sbb
flds
jecxz
dec
rcr
rcr
rcl
ret
dec
dec
inc
pop
xorb
stc
add
call
sbb
xchg
jg
shl
in
loop
xchg
pusha
rorl
dec
aaa
inc
xor
jae
push
orb
pop
and
cmp
cmp
cmpsb
sub
out
sub
jge
divl
fnstenv
cmc
repnz
test
mov
cmp
jnp
jnp
lock
xor
ficomps
aad
aam
pusha
xorl
lock
sub
add
xchg
sbb
lods
xchg
sarl
mov
push
ret
cs
adcl
adc
in
outsl
scas
movsb
movb
ret
or
rorb
inc
mov
scas
std
inc
cmp
loop
pop
fcompl
scas
mov
xor
adc
xlat
mov
stc
outsb
jns
mov
adc
aad
jb
dec
testl
sub
decb
cmpsl
testl
mov
xor
popa
jge
mov
jne
push
mov
int3
sbb
xchg
xor
leave
mov
subl
repz
iret
push
pop
insl
pop
es
movsb
cmc
clc
jbe
push
lret
or
mov
movsl
dec
bound
stos
movsl
mov
add
out
mov
lds
dec
sti
int
dec
test
xchg
dec
mov
dec
insb
int
mov
jne
or
dec
cmpsb
popa
data16
or
push
pop
lret
sahf
shll
inc
call
push
addb
adc
ret
inc
inc
data16
aad
dec
scas
mov
cmp
js
insb
aad
jbe
mov
push
pop
push
data16
lods
dec
scas
adc
repnz
jmp
mov
inc
mov
fcomip
adc
clc
fcoml
push
sub
mov
dec
dec
cmp
jecxz
mov
out
aaa
ror
clc
pop
push
ja
jmp
rolb
xor
cmp
or
jo
cmp
adc
loopne
test
mov
fcmovnb
lret
jo
jb
sub
cwtl
pop
imul
testl
xchg
cmp
lods
out
inc
inc
or
sub
jl
nop
jne
push
fildl
jecxz
xchg
int3
aam
cmc
mov
cmpsl
jnp
inc
ret
push
mov
add
mov
pop
xor
aas
mov
xchg
and
inc
pop
lahf
daa
aad
roll
push
jmp
jbe
sti
adc
mov
ret
lret
leave
aam
mov
dec
mov
sahf
mov
jae
dec
adc
push
mov
pushf
in
cwtl
and
imul
stos
lds
jbe
jae
pop
sub
fwait
or
xchg
pop
int
shll
lret
fmuls
mov
jae
je
mov
mov
pop
or
clc
pusha
into
js
rorl
ret
jl
dec
mov
cmp
repz
xlat
or
faddl
lea
arpl
insl
push
shl
push
fadd
xchg
mov
aad
dec
push
jge
lods
pusha
fsubrs
icebp
jb
dec
mov
dec
scas
mov
cmp
mov
sub
cmc
sti
dec
xchg
dec
insl
cmp
gs
aaa
je
popf
nop
push
xor
push
pop
fistpl
jmp
cmp
mov
mov
jbe
cmc
xor
sbb
xchg
std
sub
sbb
jo
sbb
mov
push
out
xchg
mov
movsb
cmp
xchg
scas
xor
xor
adc
pop
mov
mov
fisttpl
or
adc
fmull
cmpsl
xchg
mov
out
loope
cs
outsl
mov
test
jnp
cmp
lds
dec
adc
inc
push
test
jp
clc
and
sbb
add
insl
stc
add
sbb
or
mov
addr16
push
mov
shl
mov
imul
add
xor
adc
test
es
sahf
push
stos
add
push
adc
pop
and
cli
test
int
adc
mov
or
inc
stos
repz
adc
lea
sbb
arpl
stc
push
repz
push
lock
pop
mov
adc
pop
iret
lcall
test
lahf
fildl
jne
push
je
push
sbb
mov
lds
mov
bnd
rclb
int3
scas
pop
pop
pop
pop
jge
idivl
xchg
std
cs
mov
shll
shrl
dec
jecxz
and
ss
subb
adcl
addl
testl
in
or
dec
mov
sub
mov
lahf
pop
jb
imul
dec
cmp
aaa
loope
xchg
xchg
fs
out
add
adc
out
sub
push
sahf
int
xchg
es
icebp
xchg
out
add
arpl
ret
fistpll
cwtl
movsb
iret
inc
sub
js
mov
mov
inc
pop
imul
sbb
aad
mov
js
cwtl
fcom
dec
loop
jmp
inc
jge
std
push
push
imul
mov
lret
pop
movsl
inc
jmp
es
and
js
pop
jl
pop
in
sub
in
movsb
dec
mov
or
cmp
or
sbb
lea
loopne
pop
lock
insl
mov
mov
jae
pop
jmp
fists
cmpsl
mov
sub
adc
jp
popf
jno
push
cmpsb
aad
mov
sub
call
fyl2xp1
sub
sbb
into
fldl
mov
lcall
inc
out
sub
in
mov
mov
inc
popf
in
ljmp
mov
int3
or
pop
adc
dec
mov
mov
or
pop
inc
and
sahf
adc
and
sahf
xchg
shll
adc
subl
pop
das
sub
lahf
dec
jg
popa
jmp
add
lahf
mov
rcrl
dec
shl
imulb
lret
dec
cwtl
mov
pop
xor
rorl
les
cli
fiaddl
insl
lods
pop
repz
int3
xor
jecxz
jmp
add
es
mov
cli
in
mov
xlat
imul
push
add
dec
js
jp
test
or
xor
sbb
jp
subb
xchg
clc
test
sarb
incl
jle
pop
adc
lock
into
and
inc
pop
push
pusha
jae
fs
mov
pushf
call
sbb
and
call
jb
sbb
mov
xchg
outsl
dec
fisttps
adc
aaa
aam
enter
push
sti
hlt
add
jl
ss
and
mov
clc
adc
inc
xchg
or
push
mov
popa
dec
push
dec
add
or
ljmp
subl
adc
icebp
test
xor
xchg
pop
push
mov
mov
in
inc
dec
gs
sti
inc
mov
imul
mov
sbb
inc
sbb
jecxz
js
adc
inc
repnz
test
bound
int3
cmpsb
xor
cmpsb
mov
movsl
mov
mov
jno
insb
addr16
add
sbb
lret
lock
mov
bound
pop
lods
out
ja
sub
lea
iret
push
inc
ljmp
and
push
fwait
testb
les
out
cld
cli
cli
cmc
lock
mov
outsb
rcll
jnp
popa
sbb
sbbl
push
xor
pop
and
mov
sbb
repz
dec
sti
sti
repz
das
jno
inc
mov
gs
jmp
mov
std
mov
movsl
jl
inc
sbb
test
jae
adc
ficoml
and
add
push
add
pop
push
inc
push
mov
cmpsb
shll
xchg
popa
bound
mov
inc
aam
or
xchg
lret
movb
mov
icebp
mov
dec
mov
sub
inc
sbb
loope
xor
aam
mov
dec
ret
inc
jg
xor
jle
sbb
cmp
and
jns
cmpsl
popf
sbb
cltd
jb
pop
fdiv
push
and
out
fcomip
fnstsw
stos
adc
mov
pop
mov
adc
test
pop
movsl
lock
sarl
lock
push
lahf
push
in
int3
icebp
pop
pusha
hlt
mov
int3
es
idivb
rorl
outsl
jge
out
jbe
add
dec
out
adc
jns
cli
mov
bound
pop
xchg
aas
into
sub
scas
movsl
mov
in
add
fwait
lods
or
or
sbb
mov
cmp
imulb
daa
mov
or
lods
dec
adcb
pop
lods
sti
add
test
sti
ret
js
fnsave
fildll
leave
sub
in
or
es
fbld
outsl
inc
popf
test
scas
mov
sub
das
inc
popf
jp
xor
aaa
mov
pusha
shl
lahf
jp
xchg
cld
sub
rorb
imul
push
shlb
lcall
arpl
pop
andl
inc
ss
sub
xchg
push
movsl
fidivrs
lret
loope
jo
xlat
mov
mov
bound
icebp
xor
hlt
ljmp
adc
jns
imul
iret
pop
dec
pop
call
pop
out
add
fcoms
pop
in
popf
inc
sbb
int3
xor
out
dec
outsb
mov
cmp
push
ret
xor
mov
sub
or
add
push
jno
mov
push
fcompl
movsl
fwait
pop
mov
mov
lock
cmc
out
in
add
sbbb
popf
lds
dec
jg
repnz
add
xchg
lds
pop
lock
ds
xchg
mov
add
jle
stos
push
jle
dec
cmp
aam
mulb
push
es
jmp
bound
scas
loopne
call
inc
sbb
dec
pop
adc
mov
out
push
push
jg
loope
fbstp
popf
jo
mov
xchg
mov
clc
popf
mov
xor
clc
iret
mov
das
ret
sti
inc
and
pushf
insb
fsubp
cwtl
and
jbe
fwait
and
mov
das
cmc
mov
out
das
dec
cld
sub
test
les
psrlw
add
repnz
std
insb
out
adc
insb
mov
sbb
and
sbb
mov
mov
jo
or
cltd
out
adc
insb
push
cmpsl
add
sub
jmp
sti
jp
int3
adc
push
inc
popa
in
pop
jnp
mov
mov
imul
and
add
mov
push
push
xchg
pop
out
xchg
cmc
inc
mov
inc
or
and
push
cld
sahf
xor
movsl
mov
addb
sub
pushf
cmp
and
jno
orb
outsb
call
sahf
inc
sub
cmp
xor
mov
lods
pop
and
pop
mov
jne
popa
jge
icebp
xor
xchg
ret
negb
addr16
inc
sahf
mov
fwait
hlt
mov
dec
fiadds
dec
pop
cld
or
aam
cmp
gs
out
scas
addb
cmp
aaa
push
jp
ja
or
sbbb
sub
inc
roll
adc
mov
cmp
sti
xor
daa
xor
pushf
sub
mov
push
cmp
cmp
xchg
adcl
xchg
inc
test
xchg
cltd
jge
cmpsl
dec
int3
addl
xor
in
fisubrs
dec
ret
xchg
sti
xchg
sbb
mov
sub
pop
lods
dec
dec
aam
sbb
bound
push
push
jnp
fs
sub
bound
inc
out
push
popf
add
add
pop
sub
test
addb
jge
fnstenv
add
inc
call
aam
mov
lret
addr16
popa
addr16
push
push
sub
add
lret
icebp
and
es
jle
jns
leave
inc
fisubs
mov
and
mov
xchg
mov
jo
ds
repnz
out
sbb
adc
sub
scas
adc
mov
outsb
mov
bound
mov
ljmp
cmpsb
out
clc
push
insl
mov
mov
sub
sti
sub
mul
fwait
mov
aas
adc
cli
sbb
js
sbb
jns
in
xchg
ret
popf
sub
hlt
bound
cmp
sbb
test
xchg
dec
xchg
std
push
daa
int
cli
lock
je
loope
fdivrs
fcomi
test
dec
cmp
bsf
mov
stos
xchg
sbb
sub
lahf
jg
jnp
jb
pmulhw
pushf
pop
inc
cmp
lahf
clc
loopne
mov
and
lret
movsb
fdivrs
inc
add
jno
jne
dec
nop
ret
adc
mov
mov
in
xor
and
daa
mov
leave
das
inc
cmpsb
mov
push
fisubrs
icebp
pop
jb
and
mov
mov
add
sub
mov
inc
mov
pop
adcb
sahf
push
push
push
jg
cmp
jmp
mov
cld
adc
pop
ja
shl
rolb
inc
daa
jns
or
fcmovu
push
jl
sahf
outsb
lods
ljmp
mov
insl
dec
cmpsb
nop
movsl
sub
dec
and
jne
mov
enter
bound
sbb
pavgw
inc
fnstcw
mov
or
lret
sahf
add
mov
push
cmp
mov
lea
ljmp
popf
imul
xor
push
fs
jo
addr16
xchg
aaa
les
shlb
call
xor
or
movsb
imul
xor
out
mov
stos
scas
fisubrl
enter
lret
repnz
or
push
fsub
fstps
mov
vphaddwq
or
leave
or
lcall
sub
xor
push
xchg
data16
testb
sbb
push
sarl
inc
int
pop
outsl
in
ja
cwtl
sarb
mov
sub
jle
mov
sti
add
sbb
and
repnz
mov
pushf
and
push
sti
xor
mov
inc
adc
loope
push
mov
shlb
insb
mov
and
lret
data16
call
loope
std
pop
int
jecxz
rcrl
pop
flds
jp
push
les
xchg
add
push
je
mov
dec
outsl
add
stos
add
adc
lds
pusha
cli
cmp
jmp
cmpsb
cmp
loopne
or
or
popa
pop
sub
cmp
mov
sbb
mov
inc
jecxz
rorb
xor
arpl
sbb
bound
test
imul
hlt
cmpsb
xchg
and
sbb
enter
pushf
mov
test
ja
mov
adc
xchg
mov
out
bound
mov
pushf
outsb
les
pop
mov
cmpsl
leave
es
pop
xorb
das
dec
sbb
aam
imul
sbbl
adc
int
and
orl
mov
scas
cmp
mov
add
andb
lahf
mov
subb
imul
icebp
jno
call
fstl
or
mov
push
xchg
insb
clc
lock
jne
out
int
les
add
popf
out
mov
jo
cmpsl
jb
xor
lahf
mov
xchg
pop
rolb
dec
rorb
mov
cmp
mov
shll
and
cmp
out
lea
movsl
adc
xchg
into
xor
pop
cmp
dec
mov
fnstcw
pop
pop
pop
scas
pushf
mov
jno
jbe
int
ja
aas
cmpb
xor
mov
fimull
xor
dec
into
mov
or
xorps
adcb
inc
jb
loop
adc
pop
jmp
out
ret
xchg
cmp
jp
cs
aad
mov
lret
push
pop
xchg
test
mov
xchg
mov
fdivr
subb
xchg
or
out
sbb
insb
into
clc
inc
leave
scas
jmp
pop
icebp
cmpsb
xor
push
or
push
pop
pop
lods
add
fwait
aam
fsubrs
mov
incb
fwait
cmp
jg
xor
sub
fnstenv
stos
xchg
sub
xchg
loope
outsl
cmp
mov
cmp
mov
out
stc
xor
jg
jecxz
mov
push
pop
mov
mov
push
insb
mov
dec
stc
jns
es
rcrl
inc
mov
mov
mov
insl
fnstsw
jl
push
mov
jmp
testb
or
in
sub
pop
xorb
dec
mov
neg
pop
enter
cmpsb
jne
adc
ret
hlt
imul
nop
lret
enter
stc
mov
imul
shrb
pop
dec
dec
aaa
pusha
in
cmpsb
sbb
fmuls
aad
push
out
gs
xor
ja
push
out
fbstp
in
out
pop
mov
int
ret
mov
lock
and
mov
stos
stos
xchg
jecxz
aam
inc
adc
or
stos
mov
mov
icebp
cmp
andl
lret
xchg
push
mov
in
daa
adc
shll
xlat
and
pop
divb
pop
scas
add
sbb
inc
pop
xchg
jmp
cld
shlb
scas
ret
mov
push
or
pushf
push
into
dec
hlt
aad
mov
push
jnp
out
xchg
subl
arpl
mov
adc
enterw
dec
push
inc
cmpsl
prefetch
xlat
add
or
sub
pop
xchg
rcl
cmp
mov
sub
xor
dec
lea
ret
dec
int
fcomps
dec
aam
jp
and
jmp
and
scas
pop
loopne
ret
pop
push
pop
ret
inc
cmp
and
or
mov
or
mov
orb
pop
push
jp
pop
inc
pop
ss
pusha
cs
fidivl
mov
call
outsl
je
pop
repnz
pop
jg
lahf
pop
js
mov
mov
xchg
int
cld
call
mov
push
mov
lea
hlt
mov
clc
cld
sbb
sahf
push
aam
cmp
es
ds
das
mov
clc
loop
xchg
add
cwtl
or
lea
lcall
clc
pop
sub
xchg
pop
cmpsb
stos
jle
mov
push
jae
pop
adc
stos
add
shll
or
push
pop
xor
jle
aaa
sti
jnp
inc
sub
idiv
xchg
and
inc
aas
ljmp
sub
jae
jmp
push
sub
jp
push
cmpsb
xor
into
mov
xor
push
pop
mov
nop
clc
adc
mov
mov
lods
cmpsb
inc
mov
inc
addr16
pushf
add
xorb
inc
je
sbb
repz
clc
sbb
pop
xlat
lahf
out
shll
cmp
jnp
and
shlb
jmp
pop
cld
jp
or
in
fbstp
andl
idiv
mov
insb
clc
or
loop
xor
jl
std
jge,pn
shll
dec
cmp
cmpsb
pop
mov
xor
lret
cmp
sub
shr
xchg
add
dec
aam
pop
lahf
and
jmp
pop
xchg
pop
sbb
loop
insl
xchg
mov
mov
popa
push
and
mov
sbb
add
aad
lret
imul
je
mov
push
out
dec
inc
hlt
call
das
dec
lcall
add
mov
inc
xchg
jno
adc
flds
jo
adc
adc
int3
daa
xchg
ds
test
rcll
cmpsb
jecxz
loop
sub
ljmp
fimuls
pusha
mov
in
xor
or
mov
test
filds
ret
mov
aas
jmp
int3
adc
and
or
mov
xchg
adc
stos
sub
or
aas
mov
push
cmp
es
inc
inc
cld
lret
out
psubw
xchg
movsb
dec
mov
mov
sub
mov
movsl
jl
ja
cmp
stos
jns
ret
fwait
es
jecxz
and
push
ss
fs
pop
push
leave
fcompl
cmp
aas
sub
sbb
dec
aad
cmp
stos
es
lcall
or
sbb
inc
addr16
or
xchg
dec
push
imul
leave
sahf
in
lret
out
enter
mov
mov
loop
sahf
xor
fisttps
popa
jae
pop
imul
mov
test
gs
shlb
imul
add
jg
gs
mov
lahf
shl
and
adc
inc
fidivrs
push
jmp
sarl
mov
stc
cmp
xlat
outsb
call
jmp
movsb
popa
mov
insl
xor
jbe
or
test
push
dec
push
add
aad
in
cmp
sub
cld
xorb
out
out
js
push
arpl
ret
jno
icebp
cmp
cmp
mov
push
imulb
shlb
or
test
fstpt
fisttpl
fwait
pushf
fadds
ja
imul
fistpll
mov
insb
dec
or
sti
lcall
pop
mov
stos
jp
sbb
sub
push
clc
lock
add
add
cmpsl
insl
ret
out
jecxz
dec
inc
stos
mov
enter
mov
fadds
or
push
lret
loopne
mov
fstps
fdivrl
mov
mov
jg
in
test
xchg
pop
xchg
xchg
push
mov
addr16
push
sahf
sbb
jbe
aaa
cwtl
decl
lds
or
in
and
addr16
mov
sbb
xlat
mov
push
ljmp
int3
in
mov
lock
fldt
call
push
cwtl
sbb
and
pop
test
jne
xchg
sbbl
add
in
fld
popa
fidivrs
and
xchg
int
mov
fwait
outsl
shlb
jle
push
out
jnp
pop
inc
shlb
sbb
sbb
scas
mov
dec
jle
add
push
dec
cmc
cltd
xor
xchg
les
inc
add
ficomps
inc
jge
adc
sahf
sub
popa
pop
and
test
cltd
shrb
mov
out
fcmovnbe
dec
test
sub
fdivs
push
mov
daa
lret
andl
je
lcall
mov
fldl
out
xchg
ret
lret
imulb
leave
jnp
xor
test
orl
push
pushw
mov
pop
xchg
mov
push
cmp
arpl
scas
daa
ss
xor
cmp
lcall
jbe
mov
inc
cli
mov
aaa
enter
cs
or
push
mov
popa
sub
popf
mov
outsb
jno
xor
inc
mov
and
lea
js
cmp
jle
mov
or
jo
mov
xchg
faddl
inc
fcoms
or
or
jmp
xchg
push
jb
ja
cmpsb
std
fs
cmp
mov
aam
and
mov
popf
adc
jge
jbe
xor
mov
dec
outsb
jno
outsb
jne
inc
inc
inc
in
mov
lret
cmc
mov
movsb
loop
push
ficoms
fisubs
sbb
arpl
ss
adc
into
mov
sub
es
inc
sbb
test
enter
pushf
add
popl
inc
lock
xor
es
repnz
outsb
test
or
pop
mov
shl
pushf
sbb
pop
xchg
call
mov
xorb
inc
iret
and
pushf
sub
je
lods
popa
call
mov
adc
test
cmp
xchg
sbb
fisttpll
jecxz
inc
mov
mov
push
cmp
mov
insl
mov
out
push
or
mov
push
ret
ret
add
sbbb
mov
test
mov
mov
and
lods
or
mov
test
jae
lret
mov
jnp
lock
lret
std
adc
sub
mov
lea
cmpsb
jp
xchg
in
dec
cwtl
pop
je
mov
pop
sub
aaa
mov
xchg
jbe
in
emms
mov
inc
xor
cmp
std
sub
out
inc
sbb
jmp
in
sti
add
push
pop
pop
jb
popa
push
adc
jno
or
leave
cli
rcl
adc
pop
adc
or
sbb
pop
cmp
pop
test
cmp
pinsrw
jle
les
cwtl
inc
mov
in
aas
test
je
test
xchg
fcoms
mov
sbb
mov
or
pop
or
hlt
out
cltd
imul
faddl
fwait
je
pop
push
pop
rcll
mov
and
out
dec
loopne
out
sbb
sub
xor
int
in
fwait
popf
fadd
pop
je
in
popf
fs
mov
nop
fisubs
add
pop
mov
pop
inc
jne
in
push
sub
mov
xlat
xchg
xchg
push
cmc
xor
pusha
dec
and
rorb
push
lods
das
xchg
addr16
pop
into
repnz
nop
jecxz
xchg
fidivrs
inc
mov
jns
mov
fwait
scas
mov
shlb
pop
sub
sbb
push
and
xchg
mov
pop
icebp
daa
out
dec
les
pop
pusha
inc
adc
dec
cmpsl
andl
addr16
mov
or
sbb
inc
mov
sub
cwtl
push
add
inc
aad
lret
add
jbe
inc
filds
dec
cmpsb
mov
jle
sbb
gs
pop
pushf
mov
jg
std
add
mov
loop
ret
out
and
pop
ss
cmp
sbb
popa
rclb
cmp
gs
in
shl
cmp
or
push
scas
mov
scas
cmp
incl
and
jbe
ficoml
xor
in
rolb
mov
fldt
fdivl
ret
addr16
aas
cmp
xrelease
lods
push
sahf
mov
test
jp
fists
sahf
jp
fidivrl
mov
popf
push
sbb
pop
inc
xchg
lcall
out
lds
ret
andb
test
cmp
sbb
out
push
test
loopne
xorl
inc
aas
bound
addr16
fs
loop
addr16
push
mov
mov
aas
aaa
cmc
nop
stc
mov
loope
or
adc
cmpsl
test
cltd
cltd
pop
cmc
jg
or
lods
repz
mov
sbb
dec
jp
jl
clc
xchg
sbb
xor
and
mov
add
push
pop
dec
sysenter
pop
inc
aaa
shr
rcrl
mov
loopne
and
sbb
test
inc
nop
sub
lcall
es
dec
xor
xchg
aam
pop
sub
mov
pushf
sarl
lods
and
lock
mov
loopne
imul
ret
aaa
pop
sbb
inc
xor
lods
pop
rol
lahf
add
movsl
or
cs
pusha
lret
popf
popa
out
roll
inc
jns
pop
xchg
dec
xchg
loop
cmc
mov
sub
jp
es
shlb
dec
mov
lahf
add
mov
pusha
jbe
cli
sub
xchg
cmpsb
ret
cs
mov
pop
imul
jmp
rcl
mov
pop
mov
push
outsb
cmpsl
xor
ljmp
aam
cmpsb
mov
add
insb
and
sbb
mov
sub
stos
rcl
shrb
inc
imul
inc
shl
mov
dec
and
dec
jmp
adc
fimuls
pop
or
sbb
pop
mov
xlat
cwtl
cmpsl
insb
dec
pop
int
iret
add
movsb
sbbb
push
adc
jp
push
push
pop
stos
lds
into
pop
cmc
imul
push
cmp
inc
jp
xor
shl
es
sbb
lds
in
push
adc
jne
test
mov
mov
lods
in
seta
mov
mull
inc
jb
stos
add
mov
inc
pop
push
mov
mov
clc
fsubrl
jge
push
sub
loopne
shlb
ret
dec
and
lcall
dec
sub
xchg
outsb
scas
lds
dec
or
inc
test
je
xchg
lea
cmpsl
leave
push
push
fidivl
sub
and
or
sbb
mov
cmpsl
push
and
xor
jl
inc
fnsave
push
dec
lock
lods
cmp
test
cli
pop
or
pop
mov
in
loopne
aas
xlat
shr
jg
mov
and
fsubrs
and
jle
roll
push
repnz
into
loope
cld
sahf
mov
adc
pop
cmc
and
push
add
mov
ds
cmpsb
bound
aas
mov
push
pusha
inc
scas
and
ficoml
sahf
jae
idiv
jo
cs
lahf
adc
movsb
xor
mov
dec
cmp
lret
bound
test
daa
movsb
dec
inc
sahf
inc
push
mov
in
or
dec
jg
sub
jb
add
add
icebp
sbb
mov
mov
shr
outsl
jge
push
jnp
pop
in
sbb
sahf
push
xor
ds
xor
sub
dec
repz
and
inc
pop
fstps
test
pop
and
out
out
jne
xchg
icebp
insl
sub
popa
inc
data16
xchg
addb
push
in
dec
test
cmpsb
out
xchg
or
loopne
fisttps
sub
clc
lds
scas
inc
add
pop
xor
ljmp
jmp
cmc
ficompl
and
xor
popa
xlat
out
mov
mov
jle
pop
push
push
and
lock
or
jle
dec
lret
xchg
data16
cmp
clc
cs
sub
enter
cli
dec
mov
sarl
gs
pushf
mov
sbb
ret
fdivrs
ds
aaa
mov
dec
cmpsb
orb
adc
out
bound
mov
or
cwtl
ficoml
push
jno
int3
cmp
jecxz
iret
dec
mov
pop
int3
push
sbb
out
insl
mov
xor
insl
test
out
cmp
lret
stos
xchg
pop
mov
xchg
imul
cmp
les
ljmp
lock
int
pop
in
mov
fwait
int
popf
ss
mov
sarb
xor
ret
enter
repnz
out
xchg
or
push
push
push
xchg
int
test
or
ljmp
sahf
dec
gs
inc
aaa
jp
ret
fsub
lcall
mov
mov
jns
popa
nop
cmpb
test
add
and
mov
mov
fnsave
push
int
pop
test
iret
mov
xchg
test
sahf
fstps
mov
pushf
dec
decb
mov
jo
pop
frstor
inc
in
in
add
xchg
push
ficomps
daa
adc
movsl
xchg
popf
mov
pusha
popf
nop
repnz
mov
inc
in
or
dec
mov
pop
fdivl
mov
mov
insl
xor
lcall
lea
push
daa
out
xchg
mov
cmc
and
ret
inc
negb
push
shrb
fisubs
enter
cmp
loope
call
scas
jmp
lods
mov
int3
or
stos
mov
xchg
jmp
les
cli
iret
cmp
pop
aaa
loopne
out
xchg
mulb
or
popa
lds
inc
lods
popl
out
insl
fldenv
aas
mov
in
mov
out
mov
rorl
fstps
jg
loope
mov
push
mov
iret
push
xor
jecxz
pusha
ret
xcrypt-cbc
cmpsl
rcl
cmc
arpl
in
stos
imul
pop
sbb
das
data16
pop
imul
ret
mulb
push
pop
mov
in
jno
xchg
scas
gs
jae
mov
ss
mov
push
inc
mov
fisttps
cltd
jle
mov
test
fsubl
sub
mov
jo
test
scas
xchg
sar
mov
pop
out
das
inc
xchg
mov
mov
outsb
jno,pt
subb
lret
dec
fstpt
movsb
mov
jae
scas
cmp
sahf
pop
push
add
dec
scas
imul
pop
sub
jb
jle
test
les
inc
push
jnp
push
aad
xlat
clc
adc
adc
cmp
cmp
jle
ret
pop
mov
popf
pop
dec
mov
fldl
stos
mov
out
cs
adc
sub
icebp
pusha
jle,pn
test
shlb
ds
orl
or
pop
add
hlt
mov
insl
ret
stos
pop
repnz
xchg
or
xchg
ss
insb
mov
imul
inc
or
fisubrs
adc
lret
cmc
cmp
pop
loope
pop
mov
lods
insl
dec
mov
jbe
gs
mov
xchg
cmc
pushf
push
hlt
pop
jb
or
add
sub
enter
sti
pop
lret
push
xchg
aas
popa
ljmp
push
repnz
movsl
dec
inc
ret
jp
or
push
movsl
or
lds
push
or
adc
loope
filds
cmp
lock
cli
loopne
sbb
push
cmpsl
insl
ljmp
jnp
lcall
pop
sarl
inc
nop
sbb
nop
and
xchg
or
mov
or
xchg
cmp
insb
fisttpll
repz
movsb
sbb
inc
popf
mov
xchg
cmpl
in
cs
push
jle
mov
mov
inc
lret
je
movsb
lret
inc
xchg
clc
mov
aaa
sub
filds
xchg
test
or
mov
sbb
call
add
lret
jo
cmp
imul
idivb
sbb
aas
fsubrl
add
add
mov
lret
or
jmp
jbe
fnstsw
lret
mov
out
cli
ror
cld
adc
sti
outsl
ja
mov
mov
mov
arpl
cmp
imul
or
stc
movsl
repnz
lds
xor
enter
sbb
push
mov
stos
mov
push
cmp
nop
mov
dec
shll
mov
fldt
cs
rcll
mov
sub
mov
fisubrl
inc
xchg
arpl
fsubl
out
sbb
dec
and
in
arpl
std
dec
lret
incl
and
mov
popf
fisttps
mov
loop
cmpsl
jmp
movsb
fnstcw
mov
clc
xor
out
add
loope
aam
clc
out
and
mov
outsb
jecxz
fbstp
push
gs
jmp
dec
mov
jp
iret
and
sbb
scas
fcmovnu
xchg
cmp
push
jnp
pop
xlat
lods
push
sahf
inc
or
je
jne
mov
inc
in
inc
jae
imul
add
cmp
mov
dec
mov
or
dec
iret
pop
xorl
xor
inc
outsb
cwtl
xor
outsb
test
push
sahf
fdivl
xor
enter
cs
xor
ja
icebp
loope
arpl
xchg
cmp
xchg
fidivl
lods
sub
push
lret
shl
dec
cmpsl
imul
js
mov
ja
jle
fadd
shll
outsb
jbe
mov
lods
jo
mov
xlat
outsl
pop
sub
sbb
sbb
push
lret
add
cmp
inc
jle
mov
int
mov
pop
mov
adc
sbbl
addr16
out
movsb
arpl
mov
pop
vzeroupper
int
fistps
xorb
fdivl
mov
in
dec
aaa
lret
std
push
lods
sti
mov
in
js
out
repz
or
add
sbb
xlat
inc
dec
xchg
cmp
mov
dec
push
mov
ds
lcall
test
pop
add
fwait
inc
or
imul
inc
mov
dec
xor
xchg
es
and
mov
xchg
cmp
mov
or
pop
xchg
in
dec
push
stos
xor
push
cmpsb
cmp
and
pop
or
or
mov
inc
jns
pusha
out
scas
push
pop
lods
fcoms
adc
stos
pop
and
out
cmp
idiv
fisubl
or
jb
or
push
stc
xor
fyl2xp1
push
int3
adc
aad
lods
cmc
inc
adc
add
call
mov
and
test
xlat
pusha
sti
xchg
and
jns
xchg
filds
pop
push
arpl
cmp
adcb
cli
push
je
ja
aad
dec
xor
movsb
rorb
jb
pop
push
xlat
add
push
dec
dec
ja
add
cmp
pop
push
mull
popf
and
lret
fidivs
jae
jmp
insl
or
xor
xor
lock
cmp
pop
pop
fadd
jp
push
jmp
nop
add
sub
jo
pop
insb
xchg
dec
sbb
ror
loop
call
in
inc
inc
or
pushf
push
sysenter
adc
add
in
test
sub
insb
push
push
fs
mov
cmp
std
adc
sub
divb
xor
enter
and
pop
pushf
mov
daa
call
hlt
sbb
cmpsl
in
jb
rcr
adc
loopne
inc
repnz
jno
xor
in
mov
push
jae
or
mov
lret
mov
mov
fldl2e
sbbb
pop
sahf
cmpsb
xor
jno
jb
fbld
inc
xchg
cs
mov
adc
jl
jecxz
test
aad
into
pop
popa
aaa
xchg
cmp
ret
shrl
lods
pop
imul
loopne
inc
in
lods
pop
loopne
xchg
cltd
pop
pop
das
addl
xchg
mov
push
out
mov
jle
cmp
push
arpl
xor
mov
es
aad
jb
sbb
js
jne
lcall
sbb
pop
add
cmpsl
mov
pop
out
stc
jle
aas
aas
dec
test
and
loope
imul
push
aam
repz
ja
in
lods
and
inc
jecxz
pop
mov
sti
jbe
cmc
xlat
jnp
in
and
icebp
pop
mov
cwtl
mov
out
stos
mov
jb
shrl
push
inc
dec
cmc
xchg
mov
popa
push
lock
add
adc
push
xchg
cmpsb
inc
and
mov
cmc
and
repz
into
xchg
cmp
mov
scas
jnp
dec
mov
mov
cmp
dec
out
adc
adcb
idivl
jnp
out
add
repnz
and
in
stos
outsl
mov
arpl
jmp
cmpsl
mov
jns
xchg
and
push
shlb
sbb
jae
lods
test
mov
push
int3
xlat
mov
mov
push
add
idivl
adcb
push
mov
std
shrl
in
mov
int
xchg
add
pushf
pop
fimuls
mov
cmp
adc
pop
cmp
ja
push
xor
and
xor
data16
jg
mov
push
inc
mov
mov
int
test
gs
sarl
loop
orl
xchg
sub
fstpl
gs
and
pop
and
jge
shrb
lods
xchg
xor
or
mov
sbb
xor
out
cli
pop
mov
fucom
outsb
outsb
nop
fwait
xor
and
mov
mov
cli
scas
inc
cmpsl
and
lds
filds
push
dec
and
push
mov
stos
inc
icebp
add
cmp
jns
es
push
arpl
mov
mov
jp
lea
sbb
popa
in
cmc
cmpl
das
or
pop
jg
fbld
lret
add
jb
cmp
inc
push
add
hlt
jecxz
sbb
jae
add
sbb
lcall
mov
test
or
push
mov
dec
and
dec
not
add
adc
popa
sub
shr
out
sahf
xchg
jmp
repz
mov
pop
xchg
sbb
movsb
orl
xor
mov
in
and
lahf
mov
jno
dec
xor
sub
andb
pop
leave
loopne
loop
sub
ret
or
add
call
xor
fstpt
cwtl
hlt
xchg
lcall
les
push
out
xchg
dec
roll
pop
mov
lret
push
fldenv
or
outsb
pop
cmp
mov
and
cmp
enter
imul
lcall
jl
cmp
stos
adc
pop
pop
repz
fdivs
push
jne
mov
push
sub
outsb
xchg
scas
cwtl
dec
arpl
inc
jbe
lcall
lock
imul
mov
jg
mov
jecxz
pop
rorb
ja
repz
jno
pop
push
and
push
mov
xor
xchg
sti
pusha
pop
jne
jp
sbb
mov
ror
jg
fbld
mov
movsl
lds
mov
call
out
imul
mov
out
addr16
inc
mov
int
xchg
inc
pushl
and
je
sti
mov
mov
sub
or
stos
stc
xor
into
add
pop
push
lahf
mov
xchg
mov
nop
cmp
ror
cld
lea
pop
pop
stos
icebp
movsl
jbe
scas
in
sbb
adc
cltd
mov
cmp
mov
sbb
add
cmp
das
adc
aas
pop
dec
test
push
loope
outsl
adc
sub
sbb
pusha
cmc
pop
fcmovb
out
loope
xchg
mov
add
add
xchg
popf
sub
jmp
in
xlat
movsl
outsb
sbb
and
mov
stc
adc
loope
cmp
mov
pusha
lahf
scas
leave
xor
add
mov
and
mov
addr16
jmp
dec
repnz
push
stc
lahf
rorb
shll
jnp
sub
pop
rorl
fisubs
mov
jne
or
add
dec
xor
arpl
scas
jnp
pop
adc
fiaddl
in
mov
xchg
sti
stos
push
in
daa
jo
or
das
cmc
lret
and
icebp
lods
sub
mov
daa
push
sbb
imul
lret
int
pusha
push
mov
test
or
cmp
jp
repnz
xchg
ret
cli
add
pop
out
jb
roll
inc
mov
out
mov
ss
mov
popa
adc
enter
cmp
sbb
testl
cmpl
xor
bsf
adc
imul
add
adc
icebp
and
jnp
fisttpl
fs
jnp
rolb
sub
popf
cs
or
lret
cmpsl
and
inc
sbb
mov
sbb
pop
shrb
popa
testl
in
cmpsb
ss
jl
jb
push
hlt
or
mov
cmp
jmp
pop
arpl
std
cmp
inc
lahf
aam
pop
std
mov
out
call
ljmp
cmpsl
xchg
int3
jbe
movsl
das
pusha
and
sti
in
xorl
jbe
and
ljmp
jo
mov
mov
fistps
add
pop
dec
ret
and
cmp
lret
hlt
scas
stos
ret
lock
mov
sbb
or
out
sub
ficompl
js
pop
pop
into
xchg
mov
imul
jp
cltd
ret
cmc
ret
das
mov
pop
add
mov
ret
and
enter
cli
loopne
mov
fs
lret
sub
cwtl
movsb
into
cltd
in
aad
dec
gs
in
pop
push
scas
push
pop
movsl
pushf
adc
mov
data16
mov
dec
mov
mov
repnz
mov
rolb
push
outsl
fbstp
outsl
faddl
sti
mov
std
loope
push
push
cli
adc
jecxz
je
loope
adc
outsl
mov
sub
std
ret
pop
sub
dec
dec
push
scas
jbe
sbb
sbb
popa
jmp
aam
insl
xchg
pushl
test
les
mov
loope
push
sub
inc
aaa
mov
dec
mov
std
xor
push
adc
cmpsb
cmpl
ds
xchg
add
dec
mov
ss
lock
in
jp
movsl
pusha
imul
xor
adc
add
insl
dec
push
cmp
add
mov
sarb
jmp
lahf
push
dec
scas
jmpw
dec
xchg
or
pop
fdivr
loope
ficomps
cmp
pop
cmp
or
iret
xchg
out
aaa
adc
out
add
outsl
mov
dec
inc
pop
fldt
mov
arpl
mov
pop
leave
divb
mov
stos
fwait
mov
mov
lret
arpl
rcrl
pop
loope
es
sub
cmpsb
mov
add
adc
out
call
mov
xor
pop
in
out
mov
cmc
jl
test
push
iret
sbb
aad
arpl
dec
out
mov
call
dec
and
daa
adcl
repz
pop
fnsave
popa
fs
xor
and
sub
cmp
fwait
pop
mov
rclb
jge
push
push
jae
ret
jno
and
sarb
aaa
pop
mov
xorb
int3
push
sbb
or
cmp
gs
hlt
mov
stos
stos
xor
cmc
gs
outsb
mov
jns
pop
fdivrp
and
sbb
shlb
lret
and
inc
filds
inc
pusha
pop
lahf
leave
in
cmp
imul
xchg
xor
jne
into
xchg
repz
pusha
ljmp
test
bound
cmp
mov
icebp
aas
mov
and
popf
push
out
push
push
mov
jne
fwait
test
pop
jne
inc
add
arpl
adc
mov
incb
popa
dec
xchg
inc
and
xchg
jle
mov
mov
icebp
push
iret
push
jnp
adc
dec
inc
mov
lock
mov
xchg
popa
sbb
popf
test
shr
sub
jg
inc
sub
mov
push
enter
lea
xchg
fs
shl
icebp
cmp
and
and
lret
pop
leave
js
inc
inc
add
xor
pop
cmpsb
push
xchg
inc
lds
cli
shll
jb
dec
rclb
jbe
cmc
jge
out
paddusb
add
dec
sub
jae
hlt
mov
rol
sti
int3
sub
jle
add
ljmp
in
add
int
mov
ljmp
and
pop
lods
mov
push
xchg
inc
test
inc
dec
sbb
jle
push
fstpl
inc
push
pusha
fstpl
cmpsb
pop
mov
outsb
fwait
jg
pop
and
ja
push
mov
das
sbb
inc
ja
pop
cmpsb
push
push
lea
int3
subl
sbb
sbbl
inc
les
push
mov
pop
pop
divl
js
xchg
or
daa
xor
mov
repz
std
or
loope
jo
ret
cmpsb
das
dec
xchg
inc
je
mov
pop
jae
lahf
mov
and
jge
sbb
divb
sahf
mov
movsb
inc
pushf
jg
lret
xchg
jo
dec
and
fmulp
push
pop
cmc
pop
stos
xorb
ret
jg
sbb
es
bound
lods
mov
mov
xor
sbb
cld
jp
or
daa
fwait
es
pop
jo
dec
nop
cltd
mov
jp
fists
xchg
pop
rcrb
fcomip
xchg
mov
jecxz
mov
inc
test
push
int
jle
fildl
jecxz
hlt
fmuls
mov
jbe
enter
pop
rcr
lret
and
xor
jne
jno
inc
xchg
mov
pop
adc
je
repnz
and
xor
push
sahf
push
and
dec
mov
xchg
push
xchg
fistpll
xchg
jne
aad
sti
or
push
xchg
xor
jb
notl
out
push
mov
push
ljmp
lea
dec
punpcklbw
sub
push
adc
inc
mov
sub
inc
cmp
push
cmp
jns
aas
push
das
out
jg
movsb
mov
sub
lcall
aad
pop
jnp
lret
cli
adc
lods
stos
fnstsw
mov
jo
mov
sbb
int
xchg
int
fldcw
xchg
lods
scas
adc
cmpsb
inc
out
ds
cmp
lret
gs
xchg
test
add
adc
arpl
and
jmp
mov
fdivs
cld
std
mov
xor
nop
add
adc
mov
pop
mov
lods
xchg
pop
mov
loop
xchg
notb
movsb
push
test
or
pop
mov
push
push
dec
xchg
outsb
inc
andl
xor
lcall
clc
fistl
mov
jp
test
mov
mov
mov
adc
lret
add
inc
mov
or
insb
pusha
fidivs
repnz
fdivrl
sub
or
sub
fsts
lret
imul
mov
jns
pop
xchg
mov
popf
sub
mov
and
popa
imul
test
enter
stos
insb
pop
outsl
mov
xchg
aas
fst
notb
pop
sahf
stos
fdivrl
filds
mov
ja
sub
xor
fisubs
mov
aaa
mov
divl
aas
aad
out
lds
orl
pusha
or
mov
dec
mov
arpl
push
dec
call
jmp
xor
push
sbb
in
repz
fistl
out
push
in
adc
setge
stos
hlt
or
jle
xor
popa
cmpb
aad
fisubs
sub
pop
nop
or
dec
xchg
inc
mov
mov
sbb
orl
push
rol
jmp
stos
mov
lcall
mov
jl
pop
mov
xchg
sbbb
mov
adc
and
sbb
andl
jno
sbbb
jns
inc
sti
out
or
fnstcw
dec
fisttpll
jecxz
xchg
std
or
lds
fwait
mov
movl
enter
movsb
rcrl
and
in
arpl
sbb
cmp
ja
add
mov
loopne
add
jmp
sub
pop
mov
push
jb
fs
arpl
cli
dec
mov
cwtl
inc
or
in
call
push
daa
addl
cltd
lea
xor
enter
dec
mov
stc
pop
out
add
cmp
push
movsl
mov
roll
pop
aam
and
adc
adc
daa
jne
stos
and
aaa
pusha
cmp
repnz
call
loope
ljmp
sbb
sarl
jbe
pop
or
pushf
test
pop
sbb
dec
push
popa
xor
pop
push
or
imul
mov
sti
or
pop
xor
inc
imul
or
xor
sub
and
popa
dec
insb
aaa
data16
and
addr16
mov
or
mov
and
lock
inc
mov
lds
or
xchg
cmc
and
or
div
add
aas
lods
push
adc
or
addr16
lods
adc
outsl
imul
in
mov
or
mov
cmp
sbb
xor
sub
xor
jno
cltd
hlt
pusha
adc
mov
dec
in
dec
mov
pop
push
lahf
aad
jb
bnd
or
in
in
sbb
xchg
in
push
mov
sbb
mov
insl
fisttps
push
clc
mov
mov
in
jp
repnz
pop
fisttpl
enter
ret
insl
xchg
sub
test
cltd
sub
pop
test
movsb
xor
hlt
dec
shlb
dec
loope
cmp
in
push
sti
enter
cmc
mov
jecxz
das
jmp
inc
mov
aas
outsb
sbb
and
jecxz
xchg
pop
lcall
sti
movb
cmp
call
loope
sub
imul
add
fs
inc
sbb
je
adc
in
enter
call
hlt
cld
sub
inc
push
push
das
lds
sub
adc
scas
cli
sbb
mov
imul
es
in
add
dec
or
pop
leave
push
jno
out
sub
sbb
test
inc
add
in
sub
fdivp
call
clc
pusha
cmp
lods
jnp
out
repnz
mov
push
fcmovne
fidivrl
dec
adc
sbb
sbb
sbb
lods
fwait
aad
inc
int3
push
fucomi
lds
jb
clc
in
aam
sbb
or
dec
fistl
test
sbb
mov
xor
mov
daa
jecxz
sub
cld
push
xor
fs
andl
mov
inc
mov
mov
add
pop
imul
cli
sbb
mov
enter
fxch
mov
cmp
mulb
aaa
adc
mov
jecxz
dec
dec
fcoml
sub
xchg
jbe
add
push
out
mov
nop
dec
inc
outsb
ja
outsl
imul
adcb
pop
lods
mov
push
or
pop
sahf
fsubrl
push
sub
fstl
xlat
jns
and
mov
adc
cmp
lea
lock
sub
jecxz
push
fimull
out
movb
jg
paddw
mov
jne
daa
popa
dec
pop
rorl
popf
fdivl
dec
jo
sbb
test
les
xor
jp
xchg
push
jns
aas
lea
mov
lods
dec
or
sbb
adc
or
jp
nop
fs
jno
sub
pop
ja
add
xor
jbe
movsb
lahf
sahf
push
jne
adc
mov
mov
aas
fiadds
inc
cltd
mov
cmp
sbb
lea
test
add
cmp
mov
gs
mov
pop
or
jmp
gs
pop
mov
ror
mov
arpl
adcl
inc
add
mov
cmpsb
lret
push
mov
pop
adc
out
mov
xchg
in
in
jae
nop
jp
shll
fst
dec
mov
jmp
imul
imul
dec
rorl
sub
sti
adc
ret
xchg
and
jae
xor
xchg
lret
mov
ror
sbb
fisubrl
fwait
stc
les
pop
out
aas
jb
xchg
repnz
jg
popf
dec
jae
in
out
xor
inc
scas
pop
pop
jns
lahf
inc
pop
push
mov
and
xchg
cmp
vmovmskps
push
add
cmp
dec
inc
mov
les
pop
mov
enter
sub
subl
add
fs
out
lods
outsb
jns
sbb
stc
loop
sbb
mov
mov
loopne
push
in
xbegin
movsb
pop
adc
scas
push
ds
into
bound
inc
cwtl
sub
repz
std
ja
jne
outsb
hlt
jp
stc
and
sub
push
sahf
cs
sub
insb
pop
bound
in
lret
mov
clc
pop
fsubl
mov
push
cwtl
jmp
pop
repz
or
adc
pop
mov
fadd
aas
in
into
lret
mov
sub
jg
pop
cmc
test
mov
push
inc
adc
push
and
arpl
into
aas
jb
fisttpll
cmc
shll
pop
sarl
leave
cmp
xchg
jp
out
ficoms
mov
adc
lret
adc
mov
jnp
ljmp
pop
ret
mov
xchg
pop
lret
out
dec
push
jg
sub
push
jbe
lock
cli
adc
and
push
shll
xchg
fs
cmp
cmc
call
std
pop
push
das
push
imulb
mov
adc
rorl
xchg
xor
stc
cs
inc
lret
push
cmpl
cmp
and
arpl
and
mov
loope
and
jnp
test
test
inc
repz
mov
mov
jne
fisubs
xchg
sahf
mov
nop
pop
mov
test
and
mov
mov
inc
nop
and
jb
sbb
loop,pt
scas
in
adc
fsts
sbb
cmp
incb
mov
cmpsl
jno
inc
pop
push
mov
push
je
jns
lea
sbb
sub
mov
and
