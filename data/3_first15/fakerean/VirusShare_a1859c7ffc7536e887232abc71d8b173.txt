sbb
add
mov
cmpsl
cmp
jmp
push
mov
dec
push
cli
lahf
add
imul
je
lock
xchg
mov
jmp
std
or
mov
pop
test
mulb
sarb
xor
add
outsb
fiadds
mov
das
push
ret
scas
aad
mov
test
lret
push
fmul
cmp
jne
mov
xor
iret
jnp
mov
icebp
dec
push
and
adc
dec
xor
fwait
inc
aam
xor
xchg
cmp
jo
pop
mov
pop
inc
cwtl
fidivrl
pop
adc
lret
into
or
push
cmp
sbb
push
pop
lret
aaa
inc
jnp
pop
push
lret
cld
loope
out
jge
les
sub
mov
cli
imul
dec
out
inc
fcoms
nop
push
cs
push
pusha
mov
lret
push
pop
in
sub
jns
add
mov
cmpsb
jle
je
inc
sbb
in
xorb
xchg
xor
jmp
subb
push
mov
scas
pop
fcoml
adc
inc
fadds
mov
fidivl
ret
mov
or
testb
jecxz
repz
jge
mov
out
add
jg
mov
out
aad
cmpb
mov
and
sub
mov
pop
mov
stos
je
jle
add
inc
mov
inc
mov
out
inc
lock
mov
gs
jnp
fcoml
sbb
add
js
mov
daa
mov
mov
insl
iret
sub
addb
imul
cmp
adc
sahf
sbb
xor
hlt
add
repnz
insl
pop
adc
mov
jnp
sub
dec
lea
out
mov
cmp
stos
xchg
add
stos
mov
inc
je
into
andl
jo
push
clc
mov
addr16
mov
dec
mov
inc
xchg
int
adc
mov
jbe
lahf
cmp
lock
imul
mov
jno
into
push
dec
test
cmc
enter
inc
gs
mov
inc
je
jge
mov
pop
mov
and
mov
xchg
mov
in
xor
mov
cltd
ret
ss
or
mov
ret
gs
loopne
insl
pusha
adc
lea
in
idivl
cmp
pop
adc
inc
mov
add
fisubl
fisubrl
in
in
pushf
pop
adc
pushf
mov
mov
or
repnz
dec
jne
adc
push
sbb
aas
mov
rorb
xor
push
push
data16
pop
fistpll
dec
or
sub
dec
xor
pusha
jmp
jle
bound
ljmp
ret
mov
jge
lock
aas
inc
sub
leave
mov
ret
call
add
inc
lods
sbb
out
movl
test
inc
lea
pop
jno
dec
xchg
sub
sub
xchg
out
mov
mov
test
xor
outsb
aad
sbb
mov
pop
test
and
and
ror
cmp
insb
add
push
ljmp
sbb
pop
sub
inc
cld
lea
mov
scas
test
pop
push
icebp
xor
sub
jns
cs
in
mov
cmp
or
in
sets
sub
jge
mov
lahf
bound
pushf
popa
adcl
gs
mov
insl
div
sbb
fwait
jmp
arpl
divl
jb
mov
sbb
push
aam
gs
ds
mov
pop
pop
push
add
lahf
addr16
or
sar
out
nop
pop
das
test
add
jae,pt
sub
sbb
mov
lods
loope
and
movsb
sbb
lock
sbb
popf
bound
pop
jecxz
mov
mov
ret
inc
pop
cmp
fnstsw
mov
cs
dec
mov
imul
pop
jns
mov
mov
xchg
pusha
jno
inc
into
jnp
dec
in
jecxz
imul
sub
sub
inc
sar
in
and
shlb
sbb
ds
or
cmp
pop
xchg
jge
inc
adc
mov
mov
movsb
sbb
adc
mov
xchg
lcall
je
hlt
shll
adc
insb
je
mov
mov
push
in
xor
pop
jbe
push
test
imul
sub
mov
xchg
mov
fidivrl
test
push
repnz
push
test
es
xchg
xlat
or
enter
or
adc
test
std
push
int
lock
nop
das
pushf
xlat
bound
in
movsb
sbb
stos
push
inc
mov
cmpsl
cmp
clc
push
sbb
imul
rcrl
sub
ret
push
inc
xchg
icebp
push
stc
mov
loope
adc
pop
inc
adc
push
mov
movsb
lea
cmp
cmc
loopne
xchg
das
lods
sbb
sbb
mov
scas
out
ret
rcrl
xor
mov
das
rorb
mov
icebp
push
fmulp
jl
xchg
sub
xor
xchg
lods
jg
or
cwtl
push
xor
sub
sub
mov
jecxz
and
xchg
lret
push
gs
insl
xchg
fists
sarb
imul
inc
int
lock
les
gs
pop
imul
inc
xchg
mov
stc
cld
push
pop
pop
imul
sub
cmc
shlb
pushf
fdivrs
sbb
lcall
repz
mov
sub
icebp
test
mov
in
adc
xchg
lret
popf
js
lret
xchg
ret
int3
test
xor
dec
mov
inc
jno,pt
push
inc
inc
mov
mov
mov
bound
pop
mov
push
andb
ljmp
stos
jae
dec
inc
xchg
mov
pop
xchg
xchg
in
pusha
xor
jge
es
pop
outsb
aas
insb
fmull
test
sub
shrb
test
enter
and
imul
lcall
in
xchg
int
or
mov
xlat
push
shl
sbb
mov
jne
mov
jnp
arpl
cmpsb
loopne
dec
jae
xchg
jnp
push
aam
cmp
negl
das
fmull
sbbl
pop
push
push
pushf
scas
sahf
cmpsl
or
in
jg
xchg
loop
or
stos
test
int3
addr16
adc
sbb
inc
adc
sbb
outsb
fisttpll
sub
pop
sub
pop
pop
jns
cmp
das
add
cmp
mov
cmp
mov
leave
pop
out
test
inc
repz
or
and
mov
and
mov
inc
push
sub
and
cmpsb
pushf
aam
stos
shll
lret
jmp
pop
fs
pop
inc
sbb
outsb
inc
mov
testb
cmp
jae
cmp
aam
cld
outsb
mov
lcall
lods
sarb
cmpsl
fwait
adc
push
adc
mov
arpl
repnz
mov
push
fs
test
test
iret
cmp
push
mov
out
mov
in
out
js
and
rorl
xchg
lods
and
adc
cmp
mov
pop
push
add
lret
push
test
sub
sbb
push
inc
dec
cs
mov
addb
fucom
mov
pop
xor
je
push
fstpl
mov
mov
mov
dec
xchg
fucomi
int
dec
leave
je
jo
pushf
mov
sbbb
pop
cmp
in
popf
or
mov
stos
cltd
inc
or
xlat
add
aaa
sub
pop
inc
ss
mov
aas
pop
shr
enter
sub
ret
stc
inc
bound
add
jg
andl
sub
sbbl
decb
or
inc
iret
pop
addr16
mov
push
dec
dec
arpl
mov
pop
push
pop
cmp
mov
push
mov
mov
aas
xor
lahf
daa
fistpl
cmpsb
fwait
paddsb
dec
aam
adc
or
mov
movsb
push
mov
daa
rcrl
mov
insl
xor
xor
add
or
test
aad
int
jno
icebp
mov
daa
outsb
test
pop
mov
dec
loopne
inc
sbb
mov
xchg
xchg
or
movsl
fsubrl
lock
jle
and
push
xchg
cmp
stos
mov
mov
lods
daa
stc
xor
js
popf
imul
fmul
hlt
inc
xchg
in
les
lret
insl
icebp
cmpsb
sbb
or
xchg
sub
mov
movl
insl
arpl
out
ja
int
lret
hlt
jno
fwait
xchg
daa
popa
push
mov
push
es
cld
mov
adc
dec
ret
or
fstl
movsb
cs
imul
mov
mov
fmuls
mov
sarl
fisubs
push
xor
push
and
inc
push
xchg
pushl
xor
fstpl
pop
icebp
mov
in
out
ljmp
jb
lcall
into
call
fwait
into
cs
adc
enter
sub
xchg
subb
iret
rorl
mov
lret
xor
mov
fcmovu
mov
or
scas
data16
lahf
mov
cli
or
adc
mov
inc
push
ret
or
lcall
out
and
aad
cmp
repz
pop
mov
add
jo
fdivl
push
lods
inc
dec
dec
or
and
fwait
and
push
mov
fisttpl
push
stos
mov
pushf
inc
pop
out
call
xchg
add
mov
sbb
repz
push
pop
invlpg
lea
mov
add
aaa
mov
jne
jmp
andl
pop
sbb
mov
cmp
movsl
andl
imul
sbb
pop
int
sbb
pop
fisubs
in
cmpsl
push
popl
loopne
rcl
jnp
cmovne
or
and
ja
insb
sub
and
loopne
or
cs
fwait
rep
push
ret
sbb
pop
or
ss
call
ret
push
xor
sub
pop
adc
push
dec
add
sbb
pushf
out
lds
int3
repz
cmp
mov
call
push
test
pop
dec
jnp
push
jg
jno
push
push
adc
xor
in
std
mov
ja
sub
bound
mov
in
push
xchg
and
arpl
xlat
test
pop
mov
call
add
icebp
mov
pop
and
fildl
lock
int
shrb
dec
mov
or
daa
pop
nop
lods
push
xor
push
pop
xchg
cmpsl
xchg
jb
dec
pop
arpl
push
and
js
dec
lcall
out
mov
xor
push
arpl
xlat
into
subl
cltd
add
jae
sub
lds
fistl
inc
cli
pop
add
sub
std
in
lahf
hlt
sbb
aad
imul
mov
in
or
shll
stc
adc
push
lret
in
ret
leave
in
pop
pop
roll
out
mov
jo
call
push
cli
lret
push
pop
pop
pop
leave
cmp
add
mov
popl
insb
jne
push
inc
add
push
jmp
nop
fnstsw
xchg
jl
imull
dec
fisubl
int
std
outsl
push
movsb
ljmp
pop
dec
or
cmp
mov
jbe
jbe
xor
test
lods
outsb
push
mov
lods
push
lods
scas
dec
jecxz
faddl
vaddss
sbb
loop
jb
rcrb
adc
stos
imulb
push
sbb
cmc
inc
fs
sub
into
push
cmc
adcb
jle
stc
popf
outsb
add
add
rclb
pop
sub
sub
xchg
inc
cmp
shrb
popf
inc
lcall
leave
jns
or
or
sarb
add
insl
mov
ret
lret
lcall
outsb
push
daa
inc
xchg
divb
icebp
ret
ja
pop
lea
pop
fnstcw
xchg
mov
adc
sbb
mov
imul
push
lret
xor
fs
movsl
hlt
fsts
test
xchg
xchg
aas
pop
rorl
mov
cmpsl
fildl
jle
shrl
pmaddwd
jge
sahf
push
gs
xor
pop
push
push
inc
inc
stc
ja
lock
imul
jg
or
xor
lret
mov
and
int
add
jmp
push
sbb
mov
pushf
add
mov
mov
aaa
adc
cmpl
in
add
mov
mov
insl
mov
sahf
mov
xchg
in
and
popa
icebp
and
jne
insb
testl
xor
call
inc
jne
sub
dec
in
push
shrb
xchg
adc
mov
pop
push
add
jne
roll
rclw
sbb
das
add
ds
mov
push
arpl
add
pop
mov
notb
add
pop
mov
mov
or
sub
movsl
outsb
xchg
leave
inc
sbb
stos
dec
inc
sbb
lods
outsb
jae
pusha
cmp
adc
aaa
push
ja
in
xchg
push
rclb
mov
bound
push
outsl
ljmp
pop
adc
leave
aad
pop
xchg
fwait
sbb
adc
cmpsb
mov
ds
pop
sbb
xchg
sub
popf
pop
pop
cmp
mov
mov
mov
cli
mov
xchg
ret
push
add
aaa
leave
mov
test
pop
jmp
lods
cwtl
sub
popl
xchg
rolb
shl
jle
xor
out
xchg
xchg
add
ds
icebp
stos
imul
inc
xchg
pop
or
and
mov
repz
jg
punpckhbw
call
mov
test
frstor
sahf
addr16
fisubs
fists
sbb
stos
iret
cs
loopne
fldl
fcompl
xchg
cli
shrb
pop
and
mov
sbb
inc
scas
sub
jl
lds
test
in
xchg
or
mov
mov
mov
and
mov
leave
inc
xor
pop
inc
mov
push
aam
mov
lods
mov
and
inc
cmp
xchg
mov
in
fiadds
mov
xlat
lods
mov
imul
ss
push
popa
adc
mov
dec
xchg
pop
test
data16
cmp
push
outsb
dec
xor
sbb
jp
mov
movsb
xchg
dec
pop
jb
addb
mov
inc
fiadds
fcompl
repz
outsl
out
xor
sbb
xchg
lret
fidivrs
sti
rcl
xchg
sbb
inc
xchg
inc
mov
lds
adc
fisttps
mov
jmp
out
sub
adc
sar
shlb
pop
jns
pop
jle
push
les
xor
and
push
or
in
cld
scas
fsubs
arpl
sti
dec
insb
inc
sti
std
add
call
sub
mov
lods
push
adc
xorl
cmp
cli
adc
hlt
lods
iret
mov
cmpsb
jmp
aas
mov
xor
movsl
adc
orl
mov
faddl
sub
and
ffree
stc
mov
mov
inc
sub
add
call
push
dec
jae
mov
lock
fisubrs
sahf
push
pushf
cmp
imul
pop
rclb
add
sbb
in
mov
adc
mov
sbb
pop
mov
ja
test
fisttpl
cli
sub
orb
enter
pop
mov
mull
mov
or
rorb
mov
push
loopne
adc
inc
cmp
mov
dec
jb
sbb
mov
cli
fiaddl
sbb
lock
clc
iret
std
adc
in
fbstp
dec
cmp
xchg
dec
pop
xchg
jne
lret
or
jb
rclb
sub
push
push
lcall
dec
icebp
out
sbbl
and
jb
popa
fsubp
mov
xorl
jmp
fwait
xor
push
into
xchg
fdivr
insb
mov
push
jg
arpl
mov
ret
push
rorb
pop
or
jl
push
xor
rcrb
sti
mov
mov
or
and
inc
inc
or
jnp
pop
cld
ret
pop
fists
mov
scas
sub
jle
or
lods
data16
mov
dec
arpl
inc
pop
mov
or
or
pop
in
cltd
mov
push
mov
fdivl
cmpsb
js
dec
lea
push
int3
cmp
faddl
xchg
aas
lahf
repnz
dec
xchg
fistpll
scas
jns
inc
and
sbb
and
lea
cmp
lahf
loopne
aad
jne
jecxz
mov
insb
jno
mov
jbe
insb
dec
xchg
jne
mov
in
je
test
jnp
inc
inc
pop
lahf
lcall
inc
mov
arpl
fmul
add
in
test
pop
pop
cwtl
pmuludq
inc
sub
inc
flds
movsl
add
loope
sahf
lods
sahf
xor
sti
stc
mov
xchg
mulb
insb
cmp
jne
mov
inc
insb
repz
xchg
rcr
int
jnp
push
jo
rolb
cmp
movsb
int3
mov
dec
pop
pop
cld
xchg
adcl
test
push
add
cltd
jne
rcrb
xor
movlps
sbb
dec
test
das
xchg
aas
outsl
fucomip
adc
repz
dec
ja
pushf
ds
arpl
sub
push
hlt
mov
mov
daa
or
ret
cmp
insb
add
mov
adc
adc
ljmp
pusha
jg
gs
sub
fwait
sahf
ja
cli
nop
or
imul
pop
pop
cmp
jl
jge
or
shlb
sbb
pop
xchg
mov
dec
lahf
xchg
test
xorb
pop
adc
dec
mov
in
cmpsl
xorl
test
dec
repnz
enter
mov
push
or
popa
push
incb
cmp
jne
mov
stos
mov
dec
pop
inc
xchg
jno
popf
test
loopne
flds
mov
cmp
and
lods
jbe
orl
jp
xor
ljmp
cmp
xchg
push
in
cli
xchg
and
jbe
cmp
adc
jns
cmc
aaa
xchg
xchg
sub
push
fsubl
repnz
dec
add
and
and
rcrb
lds
dec
adcb
dec
lret
sub
push
xchg
cli
lret
lock
dec
xor
stos
outsl
mov
add
nop
mov
hlt
daa
icebp
pop
xlat
mov
data16
insb
push
add
or
daa
cmp
ljmp
mov
push
and
dec
sbb
pop
into
or
rorb
cmpl
and
test
lret
or
xchg
push
cs
ret
xchg
cltd
push
push
aaa
mov
jmp
or
insb
xlat
lods
inc
cmp
andb
popa
xchg
push
fwait
xor
adc
stos
bswap
dec
loopne
imul
out
insb
and
nop
push
subl
js
xlat
sti
decb
data16
es
jge
jle
adc
inc
inc
sahf
ja
mov
xor
pop
int3
imul
push
push
pushf
ret
ret
int3
pushf
dec
jns
lret
aas
jnp
cli
test
jae
jecxz
pop
adc
mov
push
imul
xchg
ss
mov
push
pop
dec
mov
jns
inc
fwait
mov
push
jb
add
lea
mov
int3
xchg
cmp
adc
or
push
cmp
popf
jp
add
jl
add
mov
lock
outsl
cld
stos
push
ror
sarb
ficompl
daa
mov
test
sbb
dec
imul
loop
inc
add
inc
mov
enter
sbb
ss
mov
nop
cmp
adc
out
push
pop
neg
push
push
outsb
out
xchg
cmpsb
mov
shll
shl
shl
icebp
xor
jecxz
or
and
cmp
repnz
sahf
lock
stos
add
dec
jo
jbe
mov
out
cltd
xlat
ljmp
jo
lds
add
dec
pop
aaa
arpl
in
stc
addb
rcrb
scas
sub
sbb
push
cmp
xchg
ret
nop
xorl
aaa
shl
sarb
cltd
cwtl
xchg
sub
sbb
ror
sbb
fs
mov
jp
sub
ljmp
scas
mov
test
popf
insb
jg
mov
rcl
mov
insl
repnz
xchg
movsl
mov
repz
shl
xchg
xchg
jae
push
push
pop
inc
xchg
add
sub
mov
testl
jl
jl
aad
add
or
jae
in
fists
or
xlat
jo
shll
ss
in
insb
lahf
push
mov
nop
pop
loope
xchg
add
lahf
add
popa
fildll
pop
sub
lock
sub
icebp
repz
rorb
gs
inc
cmc
jmp
mov
sbb
cmp
cs
cmpsb
or
xor
inc
cwtl
test
dec
out
mov
push
int
dec
aad
pop
fwait
sbb
lds
lods
jge
push
pop
jle
movsl
js
mov
push
fs
mov
dec
xchg
out
pushf
lods
or
test
fstpl
fucomi
lret
cld
lock
loop
mov
mov
jg
fcoms
pop
aaa
stc
adc
push
in
mov
loop
loopne
fwait
ja
push
addr16
xlat
jmp
testl
cmp
fcoms
out
pop
mov
clc
cltd
iret
in
fidivl
cltd
loopne
xchg
jne
popf
imul
mov
nop
cmp
mov
leave
fstps
ds
pop
popf
xor
jecxz
cli
test
scas
movsb
xchg
fistpll
gs
jnp
loope
icebp
xchg
and
cli
inc
sbb
clc
xchg
mov
jle
jecxz
pop
sub
aaa
mov
adc
int
mov
mov
mov
and
mov
cmp
pop
mov
fisttps
adc
jmp
les
repnz
call
xor
mov
jge
fbstp
sbb
aas
cltd
shrl
push
lea
and
jp
cli
ljmp
fimuls
lds
rolb
imul
xchg
int3
sub
sbb
mov
sbb
idiv
push
cmpsb
dec
scas
push
cwtl
orb
jns
xor
mov
je
lcall
subb
xchg
cli
scas
ljmp
cmp
cmp
adc
enter
out
lcall
outsl
shrb
mov
xchg
sub
adc
xadd
jno
xchg
in
cmp
addr16
aad
adc
lods
cltd
xor
jl
push
repnz
jb
push
rcll
jnp
ja
push
movsb
sbb
movsb
insb
jo
movsb
or
push
fldenv
ljmp
bound
mov
sahf
mov
jp
bound
fadd
and
mov
pop
imul
pushf
pop
mov
fistps
cwtl
mov
lock
stc
adc
mov
loope
jecxz
in
sbb
sbb
push
shlb
les
adc
or
fxch
ret
stc
lcall
pop
rclb
mov
jle
xchg
adc
out
mov
cmpsb
jmp
imul
dec
push
aad
popf
xchg
pop
dec
adc
or
out
cli
xorb
out
jne
xchg
jns
rcll
ja
push
popa
lock
addr16
pop
fs
sub
mov
shll
mov
inc
or
gs
push
jnp
inc
stos
mov
movl
dec
xor
and
cmpsl
cmc
lcall
push
dec
int
mov
jbe
pop
jns
scas
enter
and
xchg
lds
or
xor
xchg
push
ds
insb
adc
xor
push
scas
nop
cld
test
cmp
movsl
cld
cmp
dec
sbb
sbb
mov
out
mov
jne
out
mov
test
or
inc
mov
movsb
inc
mov
or
dec
sbb
jle
dec
or
cmp
and
mov
fisubrl
lret
enter
sbb
jns
fs
sub
out
dec
adc
xlat
sub
imul
data16
nop
adc
std
sbb
mov
bound
mov
iret
mov
cltd
push
push
pop
xor
arpl
and
and
jmp
lcall
jns
xchg
sub
xchg
data16
test
xor
push
push
subb
dec
ja
insl
adc
push
jl
mov
sahf
xor
cwtl
dec
loope
pop
xchg
xor
or
or
cmp
xor
rcll
jmp
int
jnp
sub
mov
in
adc
loopne
add
or
jns
insl
push
mov
sub
xor
pushf
leave
xor
cmp
mov
mov
pop
stc
jge
mov
or
stc
lcall
ret
je
scas
iret
sti
or
repz
xchg
jge
jge
lahf
lea
push
inc
xchg
and
insb
popf
or
inc
loope
scas
mov
fstl
iret
jmp
fsubrs
mov
and
pop
cwtl
sahf
mov
pop
inc
xor
mov
lret
add
push
push
in
mov
ret
cmp
sub
aam
outsb
ljmp
xor
fsub
mov
lods
in
dec
add
ljmp
jae
xlat
inc
lds
mov
and
xchg
and
popa
or
cmpl
test
ret
mov
icebp
cmp
xchg
cmp
jmp
cld
in
push
push
mov
inc
nop
jae
repz
cld
enter
scas
leave
lock
mov
jae
pop
sbb
mov
push
and
jo
mov
dec
jge
adcb
mov
cmpsb
jnp
or
lcall
stos
ja
sahf
mov
push
insl
out
and
cmp
push
adc
mov
pop
jns
les
jno
js,pt
daa
jno
dec
rcll
push
sub
dec
pop
jp
outsl
loopne
ficoml
lods
lods
outsl
cwtl
mov
fsub
jae
inc
lods
out
aas
popf
mov
push
xchg
cli
adc
add
testl
push
add
pop
jo
fildll
adc
stos
and
push
rclb
rcrl
out
aaa
mov
push
dec
pop
andb
and
xor
sarl
int
jns
jecxz
adc
or
add
and
cltd
cltd
out
pop
fsubrl
daa
ret
push
add
jecxz
inc
loope
jo
cmpb
jle
cmpl
pop
in
jbe
es
clc
mov
pop
dec
mov
mov
dec
orb
es
rclb
mov
and
push
pop
xchg
clc
and
mov
sbb
out
pop
fidivrl
adcl
jmp
xchg
int3
push
adc
cmp
fists
fadds
mov
lret
xor
mov
cmp
push
shll
stos
mov
int
fisubl
inc
cmp
popl
imul
insb
xor
mul
pop
fwait
jbe
and
clc
xor
sarb
enter
dec
imul
xor
fstps
rorb
pop
mov
shlb
subb
mov
push
push
jg
sbb
pop
mov
das
and
pop
test
pushf
out
jb
push
or
xchg
or
dec
sbb
test
in
aas
pop
adc
ret
pop
pop
notl
and
mov
mov
jl
dec
int3
scas
out
pop
sbb
leave
or
sahf
arpl
repz
inc
shlb
or
mov
dec
ret
ret
push
jnp
sti
clc
xor
repz
jle
sahf
sbb
lock
inc
mov
subb
pop
sub
pop
cmp
jae
pop
fcompl
lock
cmp
imul
xchg
or
aam
dec
out
fcomps
sub
push
add
mov
pusha
cmp
adc
mov
inc
cmpsb
and
cmpsl
sbb
mov
lcall
outsb
mov
ds
jg
mov
mov
mov
mov
cmp
aas
inc
push
adc
xor
loop
shl
faddl
lcall
scas
cmpsb
dec
cmp
xchg
or
daa
stc
sbb
imul
nop
popf
adc
test
in
outsb
test
subl
imul
lds
xchg
insb
mov
aad
das
inc
scas
aaa
mov
insb
mov
rclb
shr
mov
ds
pop
xchg
sub
fnstcw
xor
inc
sbb
push
stos
mov
into
lahf
push
mov
testb
pop
iret
insl
mov
fmuls
pop
push
and
and
pop
xchg
arpl
push
dec
ja
and
xchg
mov
ret
xchg
or
ds
xor
cltd
push
test
pop
xchg
pop
aam
lcall
adc
in
and
lods
sub
mov
jmp
aaa
pop
adc
cld
cmpsl
in
scas
inc
shrl
lret
inc
pop
js
jg
sbb
cli
cli
adc
das
je
dec
ljmp
pop
mov
hlt
insl
cmp
sub
icebp
divl
xchg
or
mov
lods
ret
pop
pop
sub
shll
mov
pop
ret
loopnew
out
jae
shll
add
cmp
jb
call
cmp
inc
push
push
or
jbe
mov
cmp
add
outsb
fcompl
lods
fwait
test
push
adc
xchg
test
scas
fstl
mov
and
sbb
dec
or
xor
mov
xor
cmpsb
push
mov
lcall
dec
in
pop
dec
mov
adc
mov
hlt
jl
test
inc
dec
dec
movsb
mov
bound
out
xor
outsl
sbb
bound
inc
arpl
in
call
or
out
jae
sub
inc
cmp
cltd
jecxz
decb
es
and
push
mov
repnz
add
dec
xor
dec
sbb
add
push
in
cltd
aas
adc
popa
andl
jns
daa
vdivsd
pop
inc
fisubrs
and
mov
fists
mov
pop
test
call
add
ljmp
or
in
insl
xor
imul
xlat
lret
and
mov
jnp
dec
pop
adc
andl
sub
fiaddl
inc
xor
bound
and
pushf
inc
pop
int3
pop
in
mov
xlat
ficomps
out
int
imul
insb
mov
jecxz
add
add
test
sub
ret
daa
lret
rcr
push
bound
out
cmp
inc
cmp
jno
dec
cltd
cs
xchg
sub
cld
pusha
cmp
sub
stos
in
aam
mov
xchg
jo
pop
addb
xor
pop
in
enter
in
sbb
repnz
inc
mov
fistps
idivl
and
xchg
orl
data16
pop
add
and
frstor
or
jnp
cmpsb
ljmp
addl
bound
mov
aad
in
cmc
pop
adc
xchg
test
fldt
xchg
cmp
mov
fwait
add
dec
and
dec
ss
mov
or
xor
push
addr16
jp
hlt
jno
fstl
xchg
shl
dec
add
enter
push
dec
mov
mov
popf
mov
push
int3
mov
mov
adc
cld
and
cmc
fisubl
ficompl
scas
out
test
addr16
mov
icebp
mov
jno
inc
int
fdivl
add
mov
incb
jg
dec
jbe
fldl
loopne
or
push
push
mov
mov
inc
mov
std
test
jno
mov
and
sarb
push
das
and
das
shll
sti
xchg
jp
shlb
mov
inc
enter
jmp
testb
jbe
out
cmc
add
add
clc
xor
push
enter
push
push
push
imul
lock
mov
insl
mov
rorb
xchg
cmp
xchg
fwait
and
sbb
mov
cmpl
iret
jno
pop
out
aad
jge
mov
dec
xor
cmp
stc
adc
popa
shr
add
push
sbb
sbb
popl
std
jo
bound
shr
and
cli
shl
adc
fisttpll
aad
adc
ret
mov
cmp
mov
aaa
mov
out
out
imul
mov
xchg
xchg
movsb
or
popa
mov
mov
int3
dec
xor
pop
outsl
jae
xor
xchg
inc
cmpb
push
jmp
xchg
movsb
fdivr
pop
fildl
dec
jno
jecxz
push
dec
mov
rcr
cs
push
in
fidivrl
or
mov
in
jp
xlat
stc
fwait
inc
xchg
and
aam
push
dec
out
pause
add
cld
ret
and
jmp
test
loope
arpl
mulps
adc
cmp
xlat
shl
dec
dec
scas
xor
jno
sub
in
or
mov
sub
or
insb
aas
in
xor
push
andb
pusha
int
int
aam
aad
xchg
clc
inc
inc
out
or
ret
loope
les
jno
add
daa
jmp
sbb
mov
adc
adc
pop
adc
lds
xchg
pop
and
jne
repz
arpl
lea
xor
or
jl
shll
test
ds
xor
fidivl
xchg
cmp
xchg
add
pop
pusha
or
es
test
inc
inc
push
fstps
add
sub
xor
jno
push
pusha
push
jp
mov
mov
ficomps
test
nop
addl
test
loope
stos
out
dec
or
mov
or
mov
ja
shr
lods
outsb
jmp
data16
mov
mov
pop
xchg
xchg
push
push
loope
cmp
pop
into
or
pop
stos
lods
adc
mov
inc
push
or
cmp
dec
std
std
int
push
ljmp
inc
mov
nop
fdivrp
loopne
jmp
enter
ret
xor
xchg
out
push
enter
mov
sbb
rol
push
pop
cwtl
addr16
mov
outsb
int
sub
jae
dec
xor
mov
das
cmp
aam
ja
lds
or
ja
das
mov
and
sbb
dec
movsl
cmpsl
aad
dec
imul
cmp
adc
push
into
enter
rolb
xchg
into
push
stos
mov
mov
pop
icebp
push
jo
loopne
bound
popf
rolb
sub
cmp
pop
pushf
mov
xor
test
daa
xchg
push
mov
mov
shrl
ss
adc
loopne
fldcw
add
movsb
int3
lahf
call
cmp
out
shl
fcomps
jns
mov
jg
movsb
aam
loopne
sbb
fcoml
mov
xchg
les
cmp
fcoml
cmp
xchg
lods
push
xchg
dec
ret
xchg
mov
push
mov
xchg
mov
test
jmp
adc
pop
and
aam
pop
mov
dec
xchg
pop
lods
shr
sbb
enter
mov
jge
insl
push
pop
in
jae
mov
or
bound
pop
mov
js
adc
mov
hlt
mov
add
cmc
xchg
push
jle
mov
sarl
push
xchg
iret
and
mov
xlat
lret
insl
test
roll
std
xchg
mov
outsb
clc
lock
pop
xor
bound
xchg
and
jne
sub
dec
test
mov
cmp
nop
sub
insl
xor
out
sbbb
or
dec
loope
pusha
xchg
adc
push
loop
icebp
dec
mov
inc
cmp
sbb
iret
sub
mov
cmp
cmpsl
jo
xchg
add
mov
inc
cmp
cld
mov
pop
adc
mov
mov
das
jle
push
or
lods
mov
rclb
sti
cmp
rcll
xor
cmpsb
rclb
inc
lret
rclb
test
mov
mov
scas
mov
ja
sub
rol
ss
mov
push
popf
loop
mov
inc
movsl
push
mov
int
push
aam
bound
ret
add
fwait
pop
push
jne
mov
adc
mov
fwait
pop
xlat
lcall
add
add
fwait
repnz
sbb
xchg
inc
rcrl
sub
int3
adc
cmc
cmp
xor
shrl
in
jnp
push
inc
nop
sbbb
mov
fst
into
sub
mov
jb
bnd
mov
test
out
jbe
cld
pusha
lock
xchg
lods
lods
sti
jbe
cmp
inc
rcll
dec
mov
out
push
dec
mov
sub
push
xchg
adc
faddl
mov
mov
lret
xchg
repnz
add
bound
cli
test
sahf
push
scas
xchg
fwait
enter
cwtl
cmp
mov
dec
inc
sub
insl
loopne
xchg
and
aam
cli
xor
ss
and
pop
or
aam
out
mov
jae
sub
sbb
xchg
and
leave
stos
test
push
adc
jge
pop
ja
jp
jecxz
dec
xor
inc
jmp
push
shll
pop
es
leave
js
lods
test
cmp
bound
xlat
push
hlt
jmp
cmp
cmp
jne
xchg
inc
sbb
out
repnz
inc
out
or
xor
stc
lea
dec
js
sahf
xchg
jne
jg
xor
outsl
imul
jb
xor
pop
in
into
push
addr16
push
ret
addr16
push
push
fnsave
adc
inc
mov
leave
jg
fistl
push
xor
mov
mov
cmp
nop
ljmp
inc
mov
cmp
or
movsb
push
jno
or
mulb
int
lods
mov
ljmp
sub
adc
test
mov
sbb
out
xchg
lods
into
jne
sub
add
xchg
push
xchg
decb
es
addr16
fdivp
in
and
xor
mov
andl
es
lcall
scas
pop
jbe
fimull
test
mov
inc
mov
cmp
hlt
xchg
in
sarl
arpl
xor
xchg
sub
jb
mov
fucomip
lret
jecxz
test
rorb
movsb
stc
idivl
sbb
mov
sahf
lret
push
cwtl
fisttpl
jg
cmp
arpl
loop
xchg
jmp
push
sub
pop
pushf
lea
or
notb
repnz
and
popa
pop
push
or
in
mov
jmp
xor
dec
cmc
mov
shlb
das
add
data16
popf
popa
sub
lds
stos
jne
pop
xor
mov
xor
nop
in
outsb
sub
bound
pop
cld
xchg
ret
ljmp
shrl
jle
test
insl
mov
push
fs
repz
mov
arpl
rcl
out
add
jecxz
adc
movsl
xchg
adc
mov
insl
cmp
add
jo
push
aas
adc
lods
lea
cmp
out
lock
enter
fldl
xor
vsubpd
push
push
fst
dec
in
mov
pop
rcrb
jecxz
in
xchg
dec
cmpsl
lcall
xchg
cmp
aas
ja
sbb
scas
aaa
jbe
iret
lret
xlat
adc
mov
fnstcw
xchg
call
int3
sbb
gs
mov
stos
sub
dec
or
pop
pop
xchg
xor
adc
pop
jne
mov
movl
pop
fcompl
js
ds
mov
adc
dec
push
jbe
fisubrl
jnp
clc
mov
outsb
out
or
mov
imul
add
lock
fcompl
sbb
dec
cmpsl
xchg
mov
inc
sbb
push
int
js
dec
imul
jmp
and
push
xchg
and
sti
push
mov
sbb
fldt
mov
das
push
adc
sbb
nop
divl
rol
subb
mov
sub
jmp
lahf
cmpsb
insb
xchg
sbb
push
pop
sub
xor
lock
sbb
ljmp
gs
push
stc
pop
mov
lock
sbb
rcll
jmp
insb
xor
js
jmp
xor
mov
sbb
inc
cli
dec
adc
call
pop
shrb
dec
mov
leave
add
mov
or
or
push
popa
dec
push
mov
xorl
xchg
ds
or
insl
xchg
out
in
data16
and
aam
in
test
push
pop
xchg
cmp
inc
push
pop
insb
mov
sub
in
push
and
push
rolb
push
xrelease
std
add
jg
inc
ficomps
iret
mov
mov
inc
imul
subl
or
mov
js
call
hlt
js,pt
rcl
fmul
jle
mov
mov
add
arpl
leave
pop
mov
test
push
arpl
leave
mov
scas
cmpsb
pop
xchg
fisubl
mov
loope
and
push
jg
out
ret
outsb
lcall
pop
sbb
mov
inc
jge
jecxz
lods
mov
mov
xor
movl
insl
cmp
std
ja
xchg
mov
push
fnstenv
push
ret
mov
iret
loope
adc
sub
ljmp
xor
out
nop
push
sub
push
add
or
mov
adc
jle
mov
add
loope
loope
es
pop
insl
cmp
ss
lods
dec
outsb
es
sub
in
mov
push
or
sub
add
pusha
sbb
test
mov
cmp
stos
aam
pop
push
mov
adc
dec
aam
mov
imul
add
cwtl
or
xor
out
push
fistl
mov
push
jl
dec
ss
inc
cmpsb
add
aaa
call
xor
daa
push
xchg
mov
xor
imul
shll
pop
mov
call
sbb
push
divb
xor
fnstcw
fidivl
rolb
adc
add
out
cmp
or
pop
lea
jp
out
push
lcall
imul
icebp
int3
xchg
jb
pop
mov
cmp
xor
jno
mov
dec
lea
mov
fistps
rcll
mov
test
ss
jp
xlat
stos
mov
mov
rcr
bswap
ficomps
xchg
jp
xchg
sti
imul
popf
fidivrs
cs
mov
add
lock
or
jbe
push
mov
pminsw
inc
and
gs
and
div
outsl
shlb
xor
cmp
add
inc
fisubl
enter
sub
xor
cli
cmp
mov
pop
data16
dec
mov
mov
sbb
cltd
enter
inc
outsb
dec
mov
arpl
in
and
xchg
push
fidivl
xchg
ja
outsb
testb
sbb
scas
lret
cmc
sbb
aad
or
out
inc
mov
outsl
lret
mov
rcrb
fdivs
insl
sbb
loop
mov
mov
adc
lock
pop
push
test
dec
int
outsb
cmp
xchg
test
cli
ljmp
xchg
jle
xor
js
lea
frstor
aas
mov
jp
xchg
mov
cmpsl
divb
and
cmp
mov
dec
nop
cwtl
dec
or
mov
mov
loopne
pop
mov
push
in
push
gs
test
icebp
jo
and
test
inc
mov
lock
repz
aaa
or
push
xor
mov
cmp
mov
rcrb
loopne
cs
jg
xchg
mov
rolb
mov
mov
xchg
xchg
into
in
fdivrp
cmp
test
repz
mov
insl
pop
inc
pop
int
fisttpl
rcrb
mov
mov
fwait
pop
mov
pusha
mov
dec
jge
aas
in
push
insl
xlat
add
icebp
repz
cmp
out
iret
push
out
movsb
lock
ficoms
inc
sbb
xchg
push
push
popa
dec
push
xor
add
jp
dec
mov
mull
test
cmp
mov
cli
aas
cs
in
int
xchg
rol
adc
add
add
push
lock
inc
add
inc
jns
into
stc
mov
mov
sub
fsts
inc
sbbb
call
insl
repnz
push
cmpsb
xchg
aaa
insb
mov
mov
and
rcrb
js
insb
jbe
cltd
dec
les
imul
fcomip
out
lock
sbb
out
sub
mov
inc
testl
jp
pop
aas
in
lea
fistpll
fisubrs
jmp
les
mov
out
or
pop
mov
int3
scas
stos
imul
clc
xlat
adc
daa
or
cmp
inc
fucom
lock
int
loope
out
jecxz
sarb
cmpsl
pop
addb
push
xchg
sub
mov
scas
pop
xchg
imul
sub
mov
mov
lock
and
sbb
repnz
mov
jecxz
lahf
popa
and
test
mov
dec
sbb
call
pop
jne
or
insb
nop
cmc
popf
dec
sub
inc
andl
and
frstor
jmp
fiadds
sub
aas
cmp
jb
rolb
or
or
call
movsl
xlat
or
pop
xor
mov
in
mov
and
sbb
stos
and
test
js
lods
jg
sarl
xor
jp
jg
xchg
ret
dec
mov
jnp
push
mov
out
or
cmp
mov
fsub
jb
sti
test
clc
mov
divps
dec
mov
aam
cmp
jp
jecxz
and
in
push
jmp
scas
and
lods
fdivr
orb
insb
pop
arpl
mov
pushf
test
xchg
sub
fs
pop
jg
xchg
or
dec
add
cmp
jecxz
test
and
mov
lea
dec
lret
xor
pop
jo
int
stos
mov
mov
mov
mov
push
inc
or
ds
push
adc
lret
lea
test
mov
push
shlb
je
jo
cmp
loope
inc
sub
fisubrl
int3
test
jno
xor
leave
and
pop
sbb
lahf
or
push
fisubs
repz
jbe
add
jnp
enter
andl
out
aas
inc
ds
jl
push
mov
mov
xor
leave
outsl
dec
xchg
fisttpll
stos
notl
xor
data16
movsl
loope
xor
mov
das
nop
pop
pop
stos
js
xorb
fsubr
push
int
je
sti
dec
out
push
dec
scas
lods
daa
jle
cltd
sub
pop
xchg
or
pop
adc
pusha
jmp
call
xchg
out
or
xor
pop
leave
and
lahf
or
jbe
xchg
add
xchg
inc
js
jnp
fs
mull
pop
and
jge
sub
mov
jle
repnz
in
cmp
xchg
dec
jb
pop
push
or
mov
jbe
xchg
dec
das
pop
aad
jne
ss
xchg
jne
mov
loopne
jmp
fistl
mov
mov
xorl
jb
outsl
push
pop
dec
fidivrs
addl
mov
dec
mov
cmpsb
xor
scas
push
pop
push
cmc
inc
mov
bound
xlat
sbb
je
or
ret
loope
cs
cmp
cmpsb
xchg
xor
mov
fcomps
adc
repz
pop
add
or
adc
mov
sub
repz
iret
sub
jae
js
adc
lea
mov
jle
jge
ror
mov
xor
add
cs
jno
sub
pushf
push
mov
aad
push
xor
imul
hlt
add
test
shlb
push
xchg
repnz
sub
pop
cmp
mov
sti
mov
cltd
sub
dec
xchg
insb
sub
dec
jb
stos
or
sbb
xor
jmp
icebp
icebp
fnsave
cmpsl
call
jmp
xor
imul
mov
popf
iret
leave
scas
sahf
jb
jae
loopne
popf
fcmovnb
mov
mov
pusha
mov
push
and
and
lock
mov
int
pop
pop
data16
add
xchg
in
xchg
xchg
or
xor
arpl
push
mov
and
loopne
and
jmp
test
adc
out
test
or
enter
cld
leave
add
dec
lods
pushf
std
iret
adc
dec
mov
in
jns
stc
fldcw
xlat
pop
leave
insl
sbb
into
ret
adcl
pop
push
out
out
cs
xchg
adc
mov
movsl
cmpsl
adc
fisubrl
push
shlb
adc
jns
ret
sbb
out
sahf
pop
mov
jl
dec
je
fnsave
cltd
in
int
mov
sar
adc
mov
mov
or
in
imul
mov
dec
xor
jae
repnz
cmp
mov
push
seto
push
js
mov
addb
ret
push
and
cltd
clc
iret
mov
xor
jle
sbb
and
sub
pop
loop
sub
icebp
mov
xlat
test
stos
sub
pop
or
sub
test
xor
jmp
adc
subb
int
sahf
jp
mov
xchg
fstl
push
pop
mov
mov
aad
push
rolb
mov
arpl
push
je
test
insl
out
iret
xchg
sahf
add
mov
mov
test
and
dec
call
ret
fdivrl
push
or
push
loop
into
lods
sti
or
jne
add
stc
rclb
push
cs
xchg
xor
and
int
fimull
mov
add
ljmp
xchg
cmp
cmp
dec
lods
xor
stos
cmp
orps
mov
fisubl
mov
ret
fstpt
stos
or
inc
in
call
sarl
in
int
cmp
mov
je
jb
fistpll
xor
adc
shrl
and
cltd
adc
fs
loopne
in
pop
cmpl
mov
inc
mov
jp
push
or
jae
jo
add
add
outsb
pop
std
hlt
mov
ja
and
pusha
std
lret
xor
daa
inc
mov
repnz
or
loop
mov
mov
add
dec
mov
or
test
fdivs
je
lds
sti
jbe
ret
negl
test
arpl
mov
push
mov
arpl
sub
add
push
ret
stc
ljmp
ror
xlat
mov
repz
xchg
imul
repnz
sbb
pushl
pop
and
push
fisubrs
sbb
xor
mov
or
xchg
aas
xchg
outsl
test
repnz
push
out
aad
je
pop
sub
xchg
inc
pop
push
xchg
jmp
sti
sti
and
out
je
mov
test
push
mov
jp
jle
lahf
shll
out
loopne
insb
lcall
daa
mov
or
sub
paddusb
add
aaa
mov
pop
movsl
mov
ret
stos
addr16
mov
fmuls
cmp
inc
jb
ds
jmp
mov
cmc
sti
shlb
cs
jg
test
dec
push
xchg
dec
inc
add
es
aas
inc
add
xor
pop
or
jae
mov
mov
adc
xor
repnz
in
enter
cs
mov
mov
outsb
fwait
sub
bound
pop
fisubrl
and
and
fadds
and
loop
into
xchg
es
in
scas
lds
out
xor
lods
pushf
cwtl
cli
push
inc
sub
stos
sub
jbe
dec
mov
es
sbb
cmp
jne
rorl
cmpsb
cwtl
lock
in
mov
pop
shll
push
aad
and
outsb
les
pop
and
insb
pop
ret
xor
jo
mov
ljmp
dec
and
cmpsl
adc
addr16
das
clc
mov
push
mov
popf
and
fwait
mov
and
aas
mov
sar
jo
jle
repz
filds
mov
lea
pop
mov
jbe
mov
stos
outsb
push
int3
imull
mov
notb
or
inc
mov
jmp
xchg
fs
ljmp
aam
jmp
dec
pop
mov
lcall
in
inc
ds
es
cmp
aas
mov
sahf
pop
push
adc
mov
inc
pop
dec
aaa
fwait
adcb
pop
cltd
iret
popl
test
pop
enter
sbb
cmp
pop
mov
mov
call
aas
add
cld
mov
pop
sub
out
aas
ss
pop
ds
add
ss
mov
clc
in
jge
insl
mov
js
add
scas
out
std
cld
js
dec
pop
dec
ret
jge
pop
pushf
enter
xlat
hlt
inc
or
imul
inc
mov
adc
fdivrs
push
or
jg
fstpl
or
scas
lods
xor
fistpll
in
out
mov
mov
mov
adc
fwait
mov
sahf
inc
pop
inc
aam
into
xchg
add
test
lods
push
and
push
mov
xchg
mov
imul
je
bnd
popf
sub
shl
xchg
mov
or
sub
or
test
xchg
sahf
mov
xchg
dec
aam
jno
or
lahf
clts
scas
cmc
xorb
cmp
dec
adc
icebp
fmull
or
enter
fistpll
aas
sub
pop
add
faddp
rclb
xor
mov
xchg
int3
subb
mov
xlat
iretw
lcall
sarl
cmc
dec
cwtl
insb
inc
push
jne
inc
sub
iret
inc
repnz
mov
xchg
mov
push
add
rorl
dec
pop
push
shl
iret
lahf
stc
in
outsl
pop
mov
push
loop
push
jo
cltd
and
jmp
jmp
and
mov
fdivrl
mov
out
sub
test
dec
gs
mov
sbb
rorl
outsb
push
cmpsb
pop
mov
test
pusha
notl
out
out
push
dec
popf
mov
sub
mov
mov
in
ret
mov
xorb
mov
lret
adc
fiaddl
cmpsl
jb
xchg
xor
xchg
dec
das
or
or
inc
mov
sbbb
add
pusha
mov
xor
movsb
xchg
mov
aam
cwtl
xchg
js
xor
cmp
jmp
cmp
out
inc
ljmp
andl
std
clc
out
pop
xchg
in
fs
sarb
test
cmp
pop
mov
add
push
lods
pop
incb
adc
xor
sub
adc
jne
mov
aas
in
mov
std
sbb
add
ja
in
call
inc
sub
mov
push
popf
jl
in
dec
outsl
lods
xor
in
sub
and
rorb
ret
jmp
test
cmp
hlt
ljmp
jno
shll
rcrl
pushf
jno
imul
inc
xor
shlb
dec
jg
fstl
outsl
push
pop
data16
test
mov
std
pop
std
scas
mov
lods
clc
mov
lcall
mov
or
add
icebp
jecxz
add
or
fistps
cmc
icebp
mov
mov
sti
jae
push
xor
pop
popf
mov
cmp
adc
idivb
push
jbe
ljmp
lods
pusha
and
sbb
mov
iret
sub
out
dec
and
xchg
add
inc
cmp
cli
es
inc
mov
nop
cpuid
dec
lret
mov
xchg
jmp
addb
repz
sbb
je
xchg
jmp
mov
loopne
call
dec
push
cld
push
pop
clc
inc
sbb
fisttpll
xorl
and
mov
sub
sbb
ja
bound
insl
mov
mov
xlat
je
aaa
fstpl
mov
fsubl
int3
fnop
dec
pop
xchg
fcmovne
mov
adc
fmuls
push
aam
or
pushf
xchg
jecxz
sarb
scas
movsl
xor
or
jmp
cmc
lcall
lea
push
inc
or
and
daa
push
sar
mov
inc
sub
pusha
daa
ret
ret
cmp
pop
mov
popf
xor
mov
and
mov
and
pusha
mov
loopne
bound
shlb
add
sub
xor
jo
and
fadds
mul
test
or
cmpsb
ljmp
shrb
push
add
jbe
jecxz
mov
je
lret
insb
test
sbb
mov
inc
pop
inc
and
sbb
aam
push
mov
lret
icebp
xor
cmp
test
pop
sti
jne
loopne
and
adc
sub
mov
or
add
xchg
loope
mov
or
mov
outsl
sbb
test
dec
mov
in
mov
xchg
mov
cltd
xchg
cmp
addb
insb
imul
mov
int
pop
or
imull
lods
sbb
inc
sub
outsb
fcmovbe
xor
and
mov
mov
repnz
scas
lahf
cmp
sarl
cld
outsl
sbbb
hlt
in
and
mov
pop
add
das
out
test
leave
or
insb
pop
dec
pusha
cwtl
mov
push
cmp
std
cmp
jmp
pusha
pop
lea
add
pop
popa
imul
test
scas
push
add
adc
popf
dec
aaa
dec
xchg
cmp
repnz
arpl
cld
add
adc
mov
call
cs
add
js
outsl
push
ja
cmp
cltd
addr16
test
dec
xchg
sbb
test
jl
mov
mov
xchg
jbe
imul
dec
pop
enter
iret
jge
mov
mov
mov
mov
in
xchg
dec
mov
outsb
cmp
and
addb
jnp
inc
sbb
sub
cmpsl
mov
mov
push
adc
lods
test
sarl
out
and
xchg
cmpsl
or
std
cltd
xchg
aas
mov
jbe
loopne
mov
nop
push
or
jbe
mov
fadds
jnp
popf
or
js
inc
outsb
jo
jb
fmul
ja
mov
lret
inc
jge
or
add
ret
jle
fidivl
or
xchg
and
mov
rcl
popa
inc
int3
insb
jecxz
jmp
loope
xor
pop
int
mov
dec
mov
xchg
sahf
and
dec
lea
push
fldl
xor
test
test
icebp
aad
psrld
ljmp
lds
fiadds
gs
fdivrp
popf
bound
cld
arpl
mov
jl
jmp
xchg
ror
dec
or
pop
jns
aam
dec
arpl
insb
mov
pusha
jmp
push
mov
ret
mov
pusha
in
int3
cmpb
fldt
sub
mov
out
add
push
and
mov
dec
cmp
adc
int3
xlat
pop
mov
adc
adc
push
lea
test
push
mov
test
xchg
or
push
mov
sub
sbb
daa
shll
xor
es
and
pinsrw
jl
xchg
push
es
out
lock
or
pop
or
mov
orl
popa
mov
icebp
push
inc
push
repnz
sbb
test
leave
pop
cltd
mov
adc
imul
pop
pop
dec
xchg
cmp
pop
outsl
pop
inc
xchg
cmp
cld
sahf
imul
mov
mov
or
roll
adc
jmp
inc
mul
inc
outsl
pop
fadd
mov
daa
adc
dec
sahf
sub
leave
sub
push
push
xor
bnd
sbb
popf
decl
pop
push
adc
jp
mov
sub
rolb
inc
xor
xlat
xchg
outsb
push
cmp
and
dec
nop
ds
push
or
clc
push
dec
inc
ret
movsl
mov
pop
imul
repnz
out
jo
lret
jae
addr16
scas
test
loope
sub
xchg
addb
xor
inc
cli
negl
cmp
fiadds
lcall
add
iret
adc
push
push
push
daa
insl
mov
mov
outsb
in
setbe
pushf
ror
dec
jb
sub
cmp
shll
daa
or
popa
iret
insb
out
scas
fcmove
dec
sub
aas
xor
cltd
xor
xor
in
cmp
or
enter
popf
daa
sbb
idivl
sub
ret
mov
dec
mov
adc
or
mov
adc
lea
pop
cltd
lds
adc
sbb
jg
inc
add
and
mov
xor
and
cmp
sub
nop
dec
fistpl
xchg
push
push
jle
ret
add
mov
xor
jo
dec
xchg
loopne
or
sub
add
push
sbbl
push
jae
into
ret
xor
mov
in
rol
aam
adc
ret
jb
arpl
pop
sahf
mov
mov
aas
push
or
pop
push
mov
add
test
sbb
inc
jae
inc
add
fistpll
adc
fucomp
fstps
dec
in
or
xchg
cmp
sti
lods
adc
std
sub
jne
dec
mov
or
stos
xchg
and
outsl
in
fisubrs
js
std
stc
pushf
inc
in
jo
bound
sbb
mov
sahf
hlt
aaa
jne
xchg
loope
mov
jns
mov
fnstsw
jl
mov
adc
aad
or
test
leave
mov
and
pop
cwtl
xchg
cmpsl
push
adc
movsl
cmp
js
and
pop
in
add
sub
mov
push
outsb
in
push
out
mov
dec
ja
mov
xor
mov
loope
aad
jne
xchg
add
jp
add
leave
mov
addr16
test
and
out
fidivrl
pop
push
mov
dec
dec
rclb
imul
lock
mov
pop
push
sahf
scas
or
orl
stc
mov
sub
mov
pop
ret
mov
mov
mov
ja
xor
nop
rcr
jl
add
negb
pusha
mov
xchg
mov
jns
push
stos
imul
pop
xor
dec
mov
lods
inc
popf
mov
cs
inc
and
xchg
nop
sub
or
sub
push
out
push
stc
aad
loopne
rdmsr
add
cmpsb
mov
inc
fdivr
add
hlt
movsl
push
mov
mov
xchg
addb
cmp
cmc
aas
xchg
imul
dec
xchg
or
add
xchg
xchg
stos
jbe
mov
enter
lret
mov
out
mov
mov
push
jmp
sarb
mov
test
lcall
sbb
in
int3
jnp
sbb
mov
pop
sti
out
or
cs
fcoml
subb
jno
jnp
mov
mov
mov
neg
dec
sarb
xchg
les
adcl
pusha
inc
imulb
push
ss
cmpsb
add
movsb
sub
cmp
pop
stos
les
fdivr
pushf
flds
pop
adc
add
sbb
bound
ret
fsubrl
sysenter
sbb
iret
mov
and
dec
lret
xchg
cli
pop
enter
mov
mov
mov
loopne
decl
fisubs
cmp
mov
test
fimuls
push
fwait
xchg
insb
sub
cmp
mov
xchg
ret
push
loopne
lock
arpl
ret
cmp
pop
sbb
out
xor
call
sub
fisttpl
pushf
and
adc
lods
and
push
dec
dec
xchg
movsl
pop
jae
popf
out
fists
leave
test
icebp
push
fcompl
movsl
xchg
flds
into
insl
add
jmp
scas
mov
sbb
scas
push
jns
popf
adc
add
int
jno
jo
xchg
lret
and
cld
nop
mov
mov
mov
xor
jb
inc
push
xor
mov
ret
imul
xchg
jbe
daa
mov
and
mov
or
test
push
rclb
jb
stos
push
xchg
ficoms
loope
add
add
adc
test
push
insl
test
shr
jecxz
or
sbb
loop
lret
xchg
pop
sub
aam
sub
mov
fisubrl
je
or
mov
ret
xor
xor
enter
add
xor
inc
dec
inc
jnp
add
imul
movsb
jg
adc
jp
imul
add
sbb
in
sub
enter
sub
icebp
shrl
insl
movsb
mov
shrb
xchg
std
mov
xor
jne
js
or
and
shrl
decb
mov
jne
stos
lea
daa
mov
and
fnstenv
fsubrp
mov
popa
adc
push
add
fwait
stos
idivb
sub
sti
mov
add
inc
xor
insl
push
push
outsl
sbb
pop
push
mov
adc
stos
xchg
pop
mul
pop
subl
rclb
sti
leave
cmp
into
lds
mov
aam
idivb
and
xorb
inc
orl
jg
fs
xorl
rcrl
push
mov
mov
cmp
aad
sub
pop
dec
add
out
insl
int3
sbb
dec
lcall
subl
mov
inc
xchg
jne
popa
enter
mov
dec
aaa
add
pushf
sahf
jae
or
ja
xor
cwtl
adc
jne
xchg
fs
inc
ret
and
add
jne
jge
dec
ret
push
test
adc
xlat
ljmp
cmp
orl
cmp
movsb
or
cmpl
icebp
mov
pusha
cmpl
xor
pop
push
mov
daa
testl
mov
mov
xchg
mov
std
addl
sbb
nop
mov
into
nop
mov
lods
sbb
stc
push
rcr
mov
ds
sbb
sbb
mov
mov
mov
movsl
test
pop
push
outsl
test
sub
adc
mov
mov
in
sarl
push
sbb
sub
test
mov
fcmovu
push
movsb
fs
fnop
adc
xchg
test
scas
stos
int
out
sbb
xchg
pushf
into
jp
call
lahf
dec
clc
mov
jl
shlb
mull
or
dec
imul
and
sbb
les
add
pop
adc
sti
mov
inc
cmp
rorb
push
and
mov
sbb
cs
fwait
in
pop
pop
inc
sbb
push
test
mov
leave
and
lock
dec
pop
hlt
cmpsb
xchg
cmc
mov
adc
xorb
loope
hlt
aaa
adc
aad
test
call
popf
inc
fsubl
jns
fcmove
or
or
dec
aad
add
mov
xchg
mov
and
fidivrs
outsb
fs
mov
cld
push
cmc
cmp
dec
es
pop
adc
je
inc
jnp
add
adc
fs
or
imul
xchg
xlat
loop
es
and
stc
cwtl
xchg
adc
daa
xchg
test
fsub
pop
xor
sub
mov
or
rorb
inc
movsb
rcrb
mov
clc
lods
and
lret
std
mov
in
pop
add
add
and
cmpsl
xlat
jecxz
in
fnsave
leave
leave
not
and
out
out
pop
fldenv
jle
pop
movsb
roll
outsl
add
sub
out
sub
iret
arpl
or
cmp
cmp
inc
inc
push
popa
jmp
sub
mov
test
add
cs
insl
xor
pop
js
inc
jne
jp
outsb
dec
jg
sti
cmpsb
mov
cmp
stos
mov
jle
pop
push
sub
movsl
push
adc
xchg
lods
xchg
idivb
cmp
mov
outsl
shrb
test
inc
aas
xlat
stos
mov
loope
cmp
sbb
popf
test
lahf
pop
mov
cltd
in
in
les
mov
cmp
jl
fbstp
jae
iret
jno
bound
pusha
pop
xor
mov
test
cmpsl
decb
ss
mov
add
mov
ss
cmpsb
int3
mov
sbb
lret
mov
out
adc
jae
sub
jl
addb
dec
jl
fbld
test
cmc
outsb
insl
and
lock
mov
inc
mov
pop
push
bound
popf
sub
push
xor
cmpsb
loop
rcll
subb
int
sub
or
lret
pop
push
ret
mov
into
xchg
icebp
jl
cmp
and
adc
adcl
sahf
mov
lea
mov
push
mov
icebp
sbb
cmp
inc
fsts
stos
jb
rcl
cwtl
mov
pushf
adc
adc
xchg
adc
loop
dec
mov
std
test
mov
shrl
jns
cmp
cmp
xchg
push
mov
mov
in
inc
aaa
bound
sti
mov
enter
adc
add
scas
push
push
mov
leave
cmc
daa
xchg
or
xor
xchg
mov
les
xor
adc
push
movsb
mov
jg
jns
enter
gs
or
jmp
imul
pushf
xchg
dec
push
cmp
movsb
jmp
je
hlt
xor
movsb
aas
fisttpll
ret
insb
ljmp
pushf
push
iret
add
inc
sbb
cmp
mov
lds
scas
or
mov
cmp
sar
dec
stc
inc
xor
fistpll
loop
std
stc
xchg
xor
push
notb
mov
adc
pop
mov
adc
mov
scas
sarl
mov
xor
dec
push
push
inc
jl
mov
subl
push
pop
cmp
or
and
add
or
xchg
mov
jb
xchg
pusha
pop
in
daa
push
cmp
fdivrp
mov
in
pop
dec
mov
xchg
test
fbstp
pop
pop
icebp
aad
movsl
and
lcall
testb
loopne
inc
sbb
inc
lcall
pop
xchg
cmc
mov
cmpsb
jmp
and
repz
sub
dec
hlt
sub
cmp
in
out
xchg
es
fsubrl
cmp
fisttpl
jb
in
inc
icebp
xchg
ret
ficomps
stos
popa
cmp
mov
sub
cmpsb
inc
add
lcall
out
add
lods
push
jecxz
mov
and
rcr
inc
dec
push
jae
mov
mov
adc
dec
and
push
mov
cmpsb
lock
and
mov
pusha
ljmp
jl
je
cmp
adcb
jno
xor
or
push
cwtl
addl
cmovo
fistpl
lret
pop
lods
xor
jae
dec
shrb
cli
mov
xor
dec
push
xor
pop
out
pop
fprem1
push
jae
int
xchg
cmp
insb
mov
inc
mov
dec
push
fisubrs
hlt
bound
lea
repnz
add
push
stos
mov
and
jae
lret
xor
sti
filds
and
call
lock
adc
jb
sbb
testl
cmp
add
mov
cmp
mov
fcomp
mov
pop
xor
aad
push
fs
mov
sub
push
out
rolb
lock
jno
push
xchg
popf
data16
cmp
inc
mov
mov
mov
adc
loop
mov
push
sbb
aaa
mov
addr16
push
cmp
int3
loope
test
movsl
mov
pop
scas
int
into
test
aam
inc
sbb
pop
mov
sbb
sub
in
movb
xor
mov
iret
and
in
mov
mov
mov
in
iret
rcrl
jne
push
jp
call
hlt
adc
xchg
dec
mov
repz
hlt
jne
rolb
pop
not
pop
hlt
into
push
mov
nop
sub
dec
pop
pushf
add
test
mov
fmull
incb
xchg
or
dec
mov
sub
out
daa
rclb
mov
cmpsl
mov
adc
sub
jecxz
test
xchg
mov
mov
jno
dec
jns
orb
mov
and
call
jp
lea
cmc
inc
pusha
sub
icebp
sbb
cmp
mov
or
jb
ret
push
dec
sbb
inc
mov
rcrb
cltd
mov
sub
and
mov
aad
in
adcb
pop
mov
scas
fcoml
xor
cmpsl
or
enter
in
dec
inc
imul
xor
add
test
pop
rcll
leave
dec
xor
jno
push
pop
mov
adc
cmpsl
jno
ss
sub
mov
and
test
push
and
in
sub
leave
lret
cmp
and
xor
pop
mov
cmpps
push
xchg
imulb
insl
jmp
adc
fisttpll
jecxz
movsl
loope
dec
or
fwait
mov
mov
loopne
xchg
ret
cmp
into
mov
jmp
inc
mov
loope
adc
jnp
jmp
out
mov
fistpll
inc
xor
in
and
call
pusha
repz
adc
push
mov
jecxz
inc
adc
out
outsb
jmp
std
pop
outsl
sbbb
add
mov
pop
push
cmp
shrb
ds
pop
fidivl
or
mov
mov
mov
lea
sbb
sbb
fcoml
add
sub
and
das
add
cld
push
mov
xor
out
cltd
push
cmp
dec
popf
out
rclb
dec
pop
cmp
cmpsb
sbb
sbb
dec
push
cmp
aaa
enter
or
ret
test
inc
iret
and
cmpl
jns
lahf
jnp
lcall
cmp
out
mov
stos
stos
movsl
rcr
dec
jbe
add
jmp
imul
jns
mov
jne
jg
mov
fwait
sub
xchg
scas
cmp
or
ja
stos
or
inc
mov
sbb
mov
cli
mov
push
mov
cmp
push
pop
iret
dec
idivl
dec
xor
dec
and
loope
popf
loop
adc
adc
jecxz
mov
lods
add
jecxz
mov
ret
add
cmp
cs
push
repz
cmp
rorb
xor
leave
outsl
btr
in
shl
frstor
mov
ja
push
mov
gs
push
mov
sub
repnz
cmp
xchg
out
fisubrl
mov
jle
mov
shll
mov
dec
jmp
rcrl
lret
cld
dec
inc
int3
repz
cld
push
cmc
lds
and
sar
imull
in
sbb
jl
scas
push
loope
xor
pop
mov
dec
fdivrs
mov
mov
mov
shrb
push
dec
pop
pop
ret
jns,pn
mov
pmuludq
xor
and
shrb
xchg
pop
dec
mov
ds
cmp
aam
xor
ds
and
push
sbb
stos
xlat
mov
and
push
xchg
jbe
mov
and
inc
adc
inc
xchg
adc
mov
push
adc
pop
insl
dec
lahf
test
cmpsl
mov
cld
jmp
sub
push
mov
dec
xchg
push
fsubs
into
les
ret
pop
cmpsl
jle
jmp
xor
in
mov
out
and
push
js
insb
dec
sub
jbe
push
aas
loop
jo
clc
cmp
ss
ficoms
mov
movsl
mov
mov
mov
push
aad
fistpll
ja
mov
xor
insl
jnp
inc
gs
pop
xchg
sbbb
sbb
inc
sbb
repnz
fdivrl
mov
scas
mov
mov
jge
movsb
daa
inc
xchg
das
stc
out
xor
out
cmp
test
sub
out
push
and
pusha
push
fwait
mov
insl
fldenv
nop
or
and
daa
mov
mov
mov
inc
fsubrp
ss
or
and
or
ljmp
cmp
aas
jg
imul
subb
lahf
sbb
rcrb
mov
shlb
mov
mov
xchg
and
clc
jb
push
push
enter
sbb
add
shrl
cli
add
in
cmp
push
jnp
lods
sbb
icebp
ss
or
mulb
pop
shrb
mov
add
in
xor
bound
aaa
movsb
xchg
mov
and
lret
lret
and
and
repnz
popa
pop
stc
lahf
movsl
rcrl
sbb
cbtw
jbe
cmp
imul
into
push
frstor
bound
fsubrs
notb
out
or
fwait
imul
xchg
shrb
mov
inc
sub
outsl
pop
inc
mov
push
ret
gs
fcomp
mov
data16
jb
cmpsl
and
mov
jmp
sbb
jl
fdivl
fdivrs
iret
ret
xor
xchg
out
shlb
xchg
mov
mov
xor
lcall
push
es
fistpll
stc
or
pop
mov
push
cmp
daa
adc
mov
jg
pop
sbb
movsb
inc
aam
ja
push
insl
push
mov
lea
call
jmp
js
ljmp
push
push
xchg
sbbb
je
cs
sahf
pop
mov
push
xchg
rcrb
and
fwait
subl
test
inc
xchg
int3
push
fcompl
add
add
enter
dec
popa
icebp
js
xor
mov
cld
fcoml
subb
pop
out
pop
sbb
loope
or
movsb
pop
fwait
hlt
jb
out
loope
push
rcrl
cmp
pop
insl
std
repz
fnstcw
jl
repz
xor
or
leavew
dec
jmp
fwait
adc
popa
xchg
outsl
shll
jmp
mov
into
sub
outsl
mov
mov
inc
clc
mov
jno,pt
push
sub
sub
mov
pop
xchg
xor
mov
daa
add
or
mov
data16
mov
test
xchg
pop
ljmp
insb
mov
mov
dec
cmp
imul
and
fisubs
mov
jnp
jns
in
inc
jbe
in
test
jle
dec
jns
xchg
outsb
cmpsb
dec
testb
fs
add
inc
test
xor
mov
mov
cmpl
mov
ret
mov
dec
mov
sub
push
push
mov
sbb
jge
out
pop
xor
dec
mov
pusha
bound
rorb
or
inc
stc
iret
or
xor
aas
ret
out
testl
je
mov
and
dec
fwait
add
push
sub
adc
push
loope
and
mov
mov
xchg
push
ret
mov
int3
outsb
loopne
imul
fwait
sbb
push
fiaddl
xor
dec
lahf
popa
cmp
adc
add
jns
in
iret
xor
aad
mov
ret
push
mov
lds
fs
ror
and
fwait
jnp
mov
mov
jne
or
pop
lret
pop
rolb
push
rcll
inc
fcos
push
push
repz
mov
cwtl
sbbb
lret
fwait
inc
push
cli
scas
andb
int
jp
pop
add
jno
pop
xor
cld
add
dec
mov
addb
jmp
or
imul
mov
into
daa
sbb
scas
push
sbb
push
mov
insb
dec
or
mov
adc
ja
div
add
aad
jp
int
rolb
mov
push
or
pop
subl
cmp
mov
dec
jge
adc
push
or
pop
int3
pusha
cli
xchg
jnp
insl
ss
cmp
sti
pop
test
mov
aad
pop
dec
cmc
test
leave
out
in
dec
subl
inc
dec
shlb
loop
xor
scas
and
push
dec
lcall
pop
push
les
ffreep
cmp
pop
icebp
pushf
insw
nop
push
xchg
outsl
ror
scas
mov
les
outsl
jecxz
mov
jne
xchg
jle
pop
das
insb
ds
daa
arpl
stos
stc
popf
dec
adcb
aaa
pop
sbb
jbe
push
mov
gs
testb
popa
push
fnstsw
repnz
int3
adc
sbb
jl
or
jecxz
xor
adc
scas
jge,pn
and
push
xchg
in
stc
testl
outsl
dec
imul
ss
xchg
subl
mov
inc
jecxz
or
or
daa
lret
mov
test
dec
dec
fbld
test
dec
xchg
ret
sti
push
fsts
mov
fdivs
add
or
les
enter
arpl
arpl
dec
cwtl
xor
xor
and
inc
sti
inc
and
dec
pop
push
shr
push
pop
push
jns
movsb
icebp
mov
rclb
and
cmp
cmc
inc
fs
repnz
stc
mov
notb
pop
iret
icebp
pop
pop
pop
inc
push
orb
repz
in
insl
stos
popa
mov
pop
stos
dec
movsl
decl
shrl
push
gs
cli
out
xor
xor
inc
test
push
cmp
pop
sub
cmpsl
arpl
cmp
fisubrl
ret
xchg
sub
mov
int
add
std
mov
cmp
mov
xchg
popl
mov
outsl
outsl
fwait
addr16
ja
inc
push
push
mov
mov
push
mov
loopne
cmp
orb
mov
jb
cmc
lret
jae
int3
rcrb
gs
adc
hlt
int
cmc
in
lods
loope
mov
mov
inc
lods
rolb
icebp
jl
fildll
int
enter
mov
cmp
loop
aad
imul
cmp
pop
adc
test
data16
and
test
mov
adc
iret
sti
mov
ficompl
jecxz
dec
jg
xor
push
mov
ret
and
jb
cmpsb
scas
cmp
mov
mov
sub
mov
jge
pop
xchg
dec
pushf
fistps
push
filds
vmovupd
icebp
stc
and
add
std
mov
call
jae
popf
dec
pmulhw
sub
cmp
shrl
xchg
sub
sub
loopne
div
loope
inc
js
adc
pop
popa
clc
lcall
and
pop
popa
stc
jl
add
and
fldl2t
push
imul
subl
scas
gs
inc
lret
mov
add
xchg
inc
arpl
push
out
sub
ja
adc
pop
icebp
push
pop
dec
sbb
aaa
loope
inc
or
sub
push
cmpsb
push
mov
aad
in
scas
xchg
add
stos
cli
mov
mov
xor
shl
enter
xor
jnp
dec
push
inc
add
test
lods
cwtl
negl
mov
jle
ret
jb
pop
cmp
mov
jb
jb
stos
dec
add
cmpsb
dec
lods
out
or
push
loopne
pop
jp
test
int3
cli
dec
xorl
mov
push
cmp
ret
and
push
stc
or
call
jecxz
leave
pushf
clc
lds
dec
push
xchg
in
jmp
lahf
fdivrp
mov
jns
mov
inc
mov
fdivrl
inc
test
adc
mov
lock
xchg
jl
fwait
sbb
sti
mov
leave
cmc
pop
sbb
repz
cmp
fs
cmc
mov
out
mov
and
push
push
inc
dec
pop
jg
imul
lods
rcr
dec
jecxz
fiadds
popa
cmpsl
mov
repnz
cmpsb
cmp
xchg
dec
add
push
jae
outsb
pop
imul
cld
push
enter
sbb
sbbb
xchg
sub
adc
enter
push
inc
inc
fcomps
movsl
ljmp
pop
rep
xchg
xor
outsb
jb
mov
out
push
lret
lcall
mov
imul
mov
push
hlt
rcrl
mov
jmp
in
daa
jp
repnz
push
mov
ret
fisubs
outsl
and
ja
mov
or
ficoml
subl
sbb
cwtl
lods
sbb
int3
or
gs
mov
pop
aaa
xor
popa
imul
negb
jb
ret
jl
scas
fsubrs
int3
mov
adc
cmp
cmp
and
xchg
dec
adc
inc
les
shll
sbb
daa
sbb
jne
pop
lahf
test
or
push
mov
roll
stc
pushf
shl
dec
sub
ret
sti
dec
lea
hlt
stc
fsubs
dec
adc
cmp
sbb
mov
nop
inc
insb
adc
out
jg
les
inc
ret
xor
jp
sbb
or
jl
xchg
lcall
rolb
sbb
adc
sahf
mov
cmc
pop
je,pt
pop
push
pop
lea
popf
mov
add
lods
mov
and
sub
pop
push
int3
test
xchg
cmp
fmul
push
mov
cmp
inc
mov
ja
xchg
xlat
add
shl
xchg
mov
and
mov
jecxz
jne
mov
pop
jae
aas
addr16
dec
xchg
int3
dec
sbb
out
pop
dec
dec
je
cltd
mov
jbe
sbb
shlb
or
cmovb
pop
add
or
lds
fdivl
out
sbb
or
dec
mov
stc
sahf
push
fstpt
fldenv
sahf
inc
mov
repnz
dec
out
xlat
out
outsb
dec
xchg
jge
subb
dec
ret
mov
into
test
jns
aad
inc
mov
jno
jg
test
mov
hlt
cmpsb
xchg
sub
pop
je
xor
inc
mov
or
inc
dec
mov
sub
stc
rcr
and
push
jno
mov
mov
ret
idivb
mov
ret
cs
xchg
mov
out
pop
or
mov
adc
test
fists
mov
or
add
mov
stos
pushf
add
mov
lods
push
xchg
lcall
aaa
dec
pop
mov
addr16
pop
pop
mov
jo
jnp
stos
xchg
pop
jge
js
mov
in
mov
sub
dec
stc
pop
xor
cmc
ret
les
pop
add
pop
sub
shl
das
data16
jecxz
mov
mov
loopne
notb
scas
mov
lods
xchg
push
enter
sbb
aaa
aas
xchg
pop
or
fwait
jb
fcmovb
les
lods
aaa
int3
dec
jno
mov
mov
jns
pop
test
lahf
cmp
cmp
popa
push
adc
ss
push
test
sbb
mov
test
add
xchg
or
frstor
inc
stos
inc
mov
fidivrl
inc
ret
jbe
aad
cmp
movsb
or
mov
mov
in
jmp
mov
gs
dec
dec
test
xchg
mov
sbb
in
or
inc
enter
mov
sbb
mov
lds
inc
mov
jns
mov
clc
sbb
jmp
pop
cmpsl
add
sbb
fbld
dec
rorb
mov
scas
and
jmp
mov
js
test
leave
shr
jae
leave
test
push
shl
imul
movl
negb
mov
enter
std
dec
cmp
cmc
xor
xor
inc
hlt
dec
adc
pop
or
add
cmp
out
push
mov
pop
xor
xchg
mull
sub
or
sbb
dec
push
loopne
nop
fldl
sub
insl
fs
je
pop
fmull
jg
or
xor
push
dec
arpl
inc
loope
and
test
cltd
inc
add
test
cs
hlt
or
fcoms
test
rcrb
lahf
jbe
outsb
enter
jno
lods
neg
sub
mov
lods
das
int3
aad
mov
in
mov
fmulp
add
leave
mov
rcll
inc
adc
stc
sub
das
sbb
xor
xlat
push
xchg
test
xchg
cmpsl
les
ret
pop
sbb
sbb
jnp
pop
fisubrs
mov
sarl
movsb
icebp
imul
stos
sti
jl
lds
int3
dec
sbb
or
aas
out
xchg
push
lret
jecxz
cmp
add
cmp
lock
es
pusha
mov
and
enter
mov
ret
das
dec
fisttpll
int
mov
jg
aam
sub
adc
jnp
push
insl
add
incl
nop
mov
dec
test
and
das
push
fs
rcr
mov
repz
pop
jae
jbe
adc
dec
pop
data16
xor
or
fsubrl
jbe
sbb
in
dec
fsubp
push
andb
data16
addb
addr16
push
add
test
or
xor
icebp
shll
pop
scas
push
aaa
xchg
dec
sub
cmc
js
sbb
ljmp
push
in
iret
xor
lds
sub
cmpsb
std
cmp
cmp
shlb
aam
xor
pushf
xchg
aam
pop
and
jbe
pop
lock
lods
inc
jo
pop
xor
fiadds
call
aas
jge
push
sarl
mov
and
jns
pop
enter
daa
push
fcoms
in
xlat
repz
ret
call
les
les
fidivs
mov
fwait
cmpsb
es
andl
popa
out
xchg
mov
mov
adc
mov
out
and
xchg
imul
jp
dec
fs
je
cmp
xchg
lret
sbb
repz
mov
jo
xchg
cli
cmc
pop
and
add
imul
inc
sti
imul
inc
xor
mov
mov
lea
push
push
lret
in
add
aam
inc
mov
mov
std
es
nop
data16
add
mov
rorl
rcll
jns
js
fmull
inc
jb
or
jb
mov
in
cs
push
in
cwtl
and
enter
outsb
mov
fnstcw
mov
bound
dec
leave
ret
jae
sub
mov
cmp
mov
mov
imul
lahf
push
das
stos
xlat
xchg
inc
mov
mov
jle
add
cmc
push
xchg
or
test
push
inc
stos
push
pop
aad
movsl
ss
aaa
daa
arpl
inc
fisubl
xor
test
les
dec
cs
jl
test
xchg
inc
add
leave
arpl
shll
insl
mov
pop
sub
pop
mov
fadds
sti
test
std
xor
and
roll
ja
pop
test
in
pop
shll
jb
sub
js
out
andl
dec
mov
les
fadds
stc
mov
pop
inc
pop
lcall
inc
and
or
mov
lock
jmp
stos
adc
lcall
xchg
in
dec
cmp
push
test
test
in
mov
das
push
or
imul
mov
lret
or
push
or
cmp
fstl
and
mov
sub
xor
jne
adc
jo
inc
jl
popa
xchg
outsl
push
ret
sub
ret
sub
dec
stos
ss
in
fwait
mov
sub
sahf
mov
cmp
pusha
jge
cmp
mov
ret
test
mov
ficoml
aaa
jne
lock
addr16
in
repz
mov
pop
pop
add
stos
add
jae
push
jne
jne
icebp
push
cwtl
sahf
mov
int3
xchg
push
or
xchg
or
notb
xchg
in
jle
push
dec
fiadds
cli
nop
fwait
adc
lods
mov
sar
lods
sub
mov
jp
cld
orb
xchg
stc
idivl
scas
in
lods
sti
cld
cmpsl
daa
lds
pop
adc
push
sbb
sbb
xchg
xor
xchg
xchg
daa
lock
inc
and
imul
adcl
lods
pop
roll
dec
xchg
out
fcomps
aad
roll
cld
out
xor
inc
mov
mov
incl
ret
jecxz
cmp
jge
arpl
xor
mov
xchg
outsb
ja
jp
sub
int
test
push
inc
incb
ljmp
push
add
and
adcl
aad
sub
xchg
mov
xor
jle
add
mov
imul
and
xlat
movsl
add
dec
cmp
mov
push
pushf
lcall
mov
test
dec
jno
fs
call
sbbb
adc
mov
and
dec
mov
imul
js
or
jo
push
outsb
pop
aaa
aas
mov
and
xor
inc
sbb
xor
dec
mov
lret
dec
pusha
popf
dec
push
mov
push
push
das
ret
push
sub
jmp
or
push
ljmp
les
sub
loop
sbb
cmp
mov
mov
adc
dec
sbb
stc
cmp
dec
sub
lahf
aaa
nop
in
inc
outsb
fdiv
stos
test
dec
int
mov
lret
mov
nop
jl
js
jge
push
dec
inc
and
pop
jbe
loop
jno
fs
mov
ljmp
jbe
cmp
push
ds
mov
xchg
scas
stos
inc
out
rcrb
jb
push
test
fmulp
jnp
push
jb
es
and
lods
add
clc
xor
mov
mov
cmc
or
xchg
cmpb
jmp
jl
stos
fcmovu
xchg
ds
mov
jo
push
iret
mov
jle
movsl
pop
aaa
adc
out
cmpsl
xchg
and
xor
test
pop
fwait
int3
jecxz
or
in
sahf
or
dec
pop
lret
aas
jo
push
test
inc
xchg
dec
mov
ret
lret
in
enter
faddl
pop
mov
pusha
out
inc
inc
dec
jnp
inc
mov
in
aam
pop
mov
dec
xor
lahf
test
xchg
or
fcmovnu
aad
mov
push
xchg
fwait
jmp
push
repz
sub
ds
adc
data16
ds
sahf
xor
pop
cltd
inc
adc
stos
inc
out
mov
jg
xchg
cltd
adc
add
leave
adc
jmp
pop
addr16
xchg
cli
pushf
rcr
or
and
mov
fcmovnb
repz
mov
xchg
and
cmpsb
addr16
pop
dec
jmp
adc
fdiv
adc
movsl
lock
add
aas
dec
inc
das
fldcw
cmp
sbb
out
out
popf
out
mov
vandnps
add
pop
xchg
iret
fistl
sbb
gs
cwtl
sub
cs
jne
test
icebp
pop
jmp
mov
or
dec
shll
test
jecxz
rcrb
mov
ss
bound
cltd
in
fcomps
cmp
push
gs
mov
rcrb
repz
daa
ret
push
push
jecxz
or
shll
shll
and
mov
pop
mov
xchg
xor
inc
pop
stos
cmp
jb
mov
test
or
adc
add
push
je
dec
in
or
xor
sub
sbb
imul
scas
mov
test
mov
cmp
sbb
cmpsl
adc
push
pop
aaa
movsb
or
or
mov
mov
lods
pop
cli
dec
adc
repnz
and
sbb
notb
dec
stos
clc
push
xchg
fdiv
adc
mov
flds
inc
stos
repnz
sub
dec
adc
call
push
iret
or
cmc
sub
dec
xchg
cmp
pop
test
xor
hlt
lds
repz
sub
aas
fistl
mov
cmc
cmp
jno
pusha
or
repnz
shrl
cmp
pop
fists
jo
mov
and
dec
aad
sbb
movsl
shl
mov
and
mov
lcall
jbe
and
mov
sbbl
jae
add
lds
outsb
les
mov
mov
sub
jge
jg
xchg
sbb
lods
sti
mov
mov
mov
fbld
fisttps
and
adc
add
xchg
push
addr16
ret
mov
cmp
mov
sbb
adc
rol
test
cmp
mov
mov
testb
std
mov
lea
jle
orb
imulb
jae
mov
and
addr16
int
add
inc
or
fwait
rorl
roll
int
xor
xlat
pop
jne
jno
lock
or
mov
test
das
jne
inc
mov
sti
out
sub
xor
pop
cmp
mov
outsb
sub
push
cmpsl
add
mov
push
xchg
scas
setge
test
add
insl
push
outsl
xor
pop
in
xor
shll
and
lret
inc
cmp
sub
ss
push
out
test
repz
cli
push
movsl
int
lock
add
inc
fldt
xchg
pop
push
push
inc
sarl
test
insb
push
call
mov
sbb
mov
mov
in
jge
std
out
out
dec
xor
js
mov
mov
xor
or
jl
cmpb
rorb
fstpl
pop
xor
sbb
rclb
dec
int3
mov
dec
lcall
aaa
cmp
sub
push
mov
pop
sarb
mov
jnp
and
insl
cmp
xor
xchg
jmp
jle
fiaddl
inc
xlat
scas
jnp
pusha
sub
dec
lret
jb
fwait
mov
pusha
lds
push
sub
sbb
sbbb
in
cmp
or
imul
xchg
xorl
daa
pop
repz
in
idivb
mov
sbbb
cmpl
das
test
xchg
dec
mov
in
dec
nop
pop
popf
movb
xchg
fsubl
mov
fucomp
push
pop
push
test
mov
aad
leave
inc
mov
mov
ljmp
add
xor
mov
gs
jbe
mov
mov
cld
xchg
aas
ror
or
es
xchg
xchg
sti
les
fidivrs
push
lock
in
inc
mov
pop
sub
repnz
pop
push
out
mov
mov
ret
test
shlb
xor
cmc
adcb
xchg
aad
cmpsb
outsb
popa
push
dec
scas
jne
icebp
jnp
dec
outsl
cmp
sbb
arpl
lcall
mov
hlt
push
stos
mov
lods
jbe
scas
les
call
xchg
jecxz
clc
leave
adc
je
outsb
push
mov
fidivl
movsl
sahf
popf
jp
mov
in
insb
sub
jg
loopne
jmp
inc
lock
mov
push
ja
add
mov
test
lcall
mov
mov
icebp
pusha
mov
adcb
in
push
stos
xor
cmc
ds
inc
jno
sub
addr16
jecxz
movsb
xor
ficomps
inc
pop
sti
sub
push
fmul
lods
les
add
mov
fidivs
xchg
fildl
jecxz
add
fcmovb
or
sub
push
mov
sub
mov
sti
and
lock
sub
cmpsl
and
or
lahf
sub
mov
inc
mov
mov
xorb
cmc
stos
sub
sbb
test
daa
push
jmp
jbe
out
adc
xchg
inc
bound
xor
mov
adc
push
cmp
outsb
sub
jge
shlb
cmpsl
cld
outsl
pop
xor
movsb
add
loop
scas
jae
mov
sarb
xchg
sub
aad
xor
int3
je
out
push
je
push
dec
or
pushl
sub
push
push
xchg
test
push
loopne,pt
in
daa
xchg
mov
pop
mov
lret
gs
xor
outsl
xor
lret
push
arpl
cmpsb
mov
pop
fnstsw
inc
and
add
lret
mov
scas
mov
jg
std
sbb
and
in
mov
and
dec
leave
sbb
sti
call
and
push
lret
test
lock
lahf
cmp
rep
scas
std
inc
insl
divl
cmp
aaa
jmp
testb
mov
shrl
scas
adc
out
add
aas
jg
dec
or
jnp
pushf
js
xchg
xor
loope
mov
ljmp
xchg
aad
inc
popl
ret
inc
mov
inc
loop
fstl
pop
adc
pop
mov
cmp
inc
push
and
push
pop
sbb
rcl
cmp
sub
shlb
sub
cmp
cmp
jecxz
stos
mov
xchg
jne
lahf
mov
cwtl
sub
push
pop
dec
in
jmp
lea
xchg
repnz
sbb
xchg
aaa
mov
lcall
xor
insl
or
imul
jge
pushf
loop
push
or
addl
push
iret
jae
xchg
int3
jle
mov
out
xor
push
push
push
fidivs
lcall
push
mov
adc
or
xchg
pop
inc
jmp
and
aas
lret
cwtl
inc
xor
out
pusha
jmp
shl
push
adc
subl
sahf
daa
mov
pop
insl
or
pop
add
push
jg
int3
stos
jo
ret
sti
sbb
insb
test
push
out
faddp
jle
mov
arpl
test
dec
mov
and
fcom
pop
or
rsqrtps
push
sbb
popa
xchg
mov
mov
and
lret
arpl
mov
adc
dec
fwait
addr16
xchg
stos
jle
and
out
jle
call
inc
and
cmp
pop
cmc
xchg
adc
add
std
dec
aam
xchg
push
pop
mov
jns
pushf
mov
movb
in
cli
pop
sti
adc
push
and
add
movsl
rcll
arpl
int
jae
cmc
sbb
cmpsb
dec
xchg
cmc
jnp
sbb
aaa
xor
sbb
xor
add
aas
pop
rclb
call
pop
dec
and
dec
icebp
js
cmp
ja
ret
jns
inc
cltd
in
lahf
mov
mov
sbb
test
dec
cmpb
in
pop
cmpsl
xor
lock
adc
test
inc
pop
push
mov
lahf
sbb
sub
add
popf
sub
clc
scas
cs
or
dec
push
inc
leave
or
loopne
xchg
call
mov
sub
inc
int
sub
sub
ljmp
jge
adc
insb
fwait
lock
in
pop
mov
adc
push
push
inc
sub
cmc
cmpsl
fildl
in
inc
in
test
inc
mov
sub
pop
cmc
data16
mov
jmp
pop
mov
sahf
fs
loope
mov
sub
and
mov
xchg
insb
adc
jle
push
xchg
repz
aas
insl
pop
loopne
jmp
mov
inc
pop
add
xchg
jo
mov
and
into
shlb
dec
xchg
subl
mov
cmp
inc
xor
hlt
sub
cmp
dec
or
mov
repz
xchg
out
test
call
jae
pop
cmpsb
sbb
aas
ds
jb
add
out
sbb
in
inc
lcall
cmpsl
fcmovu
xor
adc
mov
pop
sub
iret
jmp
aas
pop
pop
scas
not
jne
pop
mov
cmp
pushf
out
pop
xchg
test
aam
sbb
pusha
jbe
xchg
pop
adc
jne
sti
cli
cmp
mov
and
scas
roll
mov
imul
fimull
cmc
das
stos
xor
mov
add
xchg
aas
bound
adc
pop
loope
pop
mov
push
cmp
sar
ror
jo
jno
sub
ret
or
inc
push
loopne
fs
push
xchg
mov
ss
sub
lret
cmp
notb
stos
inc
or
incl
loop
jne
cs
pusha
dec
pop
fisubs
nop
test
xchg
jl
sub
mov
insb
jnp
popf
shufps
mov
xchg
mov
enter
jae
jo
popa
movsb
lcall
sub
fstps
fmuls
adc
ss
ja
jo
push
cli
xchg
mov
add
pushl
jne
repz
add
pop
cmp
add
sbb
mov
push
fadds
ss
cmp
jnp
pop
pop
or
inc
push
lret
mov
xor
scas
push
mov
in
pop
jbe
arpl
mov
lahf
mov
jg
push
pop
or
jecxz
test
mov
out
pop
cs
xor
jno
outsb
xor
daa
test
cs
or
push
outsl
int3
mov
and
mov
jp
jns
bound
dec
and
cwtl
iret
addr16
imul
adc
ljmp
mov
sbb
bound
xor
mov
ja
sbb
jae
in
add
mov
pop
rcrb
add
mov
inc
push
std
imul
mov
push
arpl
add
nop
mov
popf
jo
ret
pop
fiadds
sti
xchg
push
mov
int
xchg
xchg
push
or
sub
imul
mov
mov
icebp
push
or
jae
pop
mov
les
out
dec
jmp
bnd
shrl
aad
ror
jae
fnstsw
jp
cmpl
in
sbb
outsl
cltd
mov
cs
mov
lods
fcomi
addr16
outsl
fmuls
stos
push
mov
cmpsl
jnp
cmp
xchg
xor
insb
xchg
mov
sbb
adc
out
in
jl
outsl
pop
cmp
xchg
roll
fidivrs
movsb
pop
scas
ret
fwait
popf
and
lds
stos
cmpsb
and
push
push
xchg
sub
cmpsl
mov
movsl
cmpsb
ljmp
jb
in
push
adc
fidivrl
loope
push
cmpsl
pop
icebp
or
mov
push
lods
jmp
fisttpl
enter
cmp
lret
mov
lods
xor
daa
inc
cld
xor
pop
sub
ret
add
repnz
mov
mov
or
jne
enter
dec
addl
test
mov
ds
add
mov
out
int
push
insb
es
shlb
scas
jmp
xor
and
cmp
sbb
jnp
popa
and
outsl
lret
loope
or
leave
and
pop
ror
mov
dec
mov
push
lods
fstl
je
mov
mov
inc
cmp
or
nop
mov
and
jae
iret
fucom
pop
popf
jmp
mov
adc
jle
xchg
jecxz
sbb
cld
and
outsl
out
push
orl
dec
jbe
js
or
jmp
out
push
jl
and
pop
mov
std
mov
cmp
adc
fnstcw
sti
icebp
in
push
lods
mov
and
sub
mov
sbb
dec
mov
mov
cwtl
into
out
mov
nop
jb
add
data16
mov
dec
add
mov
inc
dec
mov
mov
add
rcrl
jg
push
jnp
pop
xchg
dec
sub
jmp
jbe
push
add
mov
and
nop
ds
cmp
mov
jmp
adcl
and
lret
idivb
inc
clc
in
inc
lods
inc
dec
sbb
sbb
je
dec
insl
addr16
sub
rolb
cmp
pushf
pop
mov
push
add
int
push
pop
shlb
mov
lds
sbb
aad
and
cmp
jb
ljmp
dec
ret
dec
inc
xor
or
lods
dec
repnz
push
mov
shrb
pop
sub
push
dec
lcall
fdivs
dec
mov
test
adc
mov
xor
sub
ret
sahf
testb
mov
loop
incl
push
xor
fcmove
xchg
xlat
dec
inc
lods
dec
dec
inc
cmp
add
ja
lods
testl
push
mov
xor
push
push
mov
xorb
push
in
jecxz
sbb
fwait
inc
push
push
jnp
adc
repnz
sub
mov
xor
xor
adc
test
outsl
fdivr
pop
dec
inc
add
je
stos
mov
iret
mov
push
adc
adc
in
mov
sub
mov
movsl
cli
jne
mov
jmp
push
ljmp
mov
pop
jne
sarb
jmp
pop
aad
call
xchg
mov
aas
mov
and
mov
and
sahf
push
push
jge
push
mov
andb
subb
dec
in
jp
iret
add
fldl
dec
repz
out
clc
push
lds
minps
xor
mov
lea
stos
in
sub
jge
xor
inc
hlt
push
mov
xchg
mov
or
in
dec
xchg
lock
xor
enter
dec
jbe
push
dec
fisubrl
jne
popa
jmp
add
addr16
push
jbe
add
fwait
xchg
pop
jno
jmp
stos
out
pop
jbe
xchg
push
call
in
xchg
mov
mov
adc
dec
jmp
sub
mov
movsl
jecxz
pop
fistpll
bound
das
inc
fsts
jecxz
push
addl
ret
repz
push
adcb
jge
fstpl
loop
out
dec
mov
or
mov
xchg
scas
mov
mov
lods
test
lock
aam
sarl
icebp
cmpsl
add
rol
add
xchg
ffree
iret
jnp
mov
ljmp
push
les
stos
or
add
xor
nop
loope
sub
stc
lahf
adc
push
jne
lahf
loope
popf
and
std
fnstsw
repz
loope
push
bound
cli
xor
jmp
mov
pop
lds
sub
push
loopne
push
es
fildll
mov
sbb
jnp
cmp
hlt
ja
sbb
jmp
leave
bound
out
cld
xchg
xor
stos
xor
les
cs
fwait
inc
mov
pop
xlat
cmpsl
or
push
add
in
inc
rolb
orl
fstpt
mov
pop
addr16
insb
shll
in
insb
xor
test
out
or
stos
adc
aaa
sub
dec
pusha
int
test
cmp
adc
push
jl
xor
cmp
popa
jle
sub
mov
rcr
adc
sbb
aaa
xchg
fsts
sub
cltd
mov
stos
push
int
push
into
iret
loop
and
bound
push
ficomps
loop
adc
cltd
and
call
shl
mov
push
xlat
jmp
movsb
push
xchg
mov
jb
cmp
and
ds
test
or
adc
push
sub
mov
add
add
lahf
mov
stc
stos
ljmp
fstsw
imul
test
xchg
in
imul
adc
pop
cwtl
popa
xchg
das
stos
jns
hlt
test
filds
xor
stc
insb
and
inc
movsl
or
add
push
cmp
xor
in
in
xorl
mov
mov
iret
mov
sbb
pop
les
mov
bound
mov
lock
pushf
jb
orb
mov
std
daa
hlt
xor
jbe
daa
nop
add
mov
sbb
insl
lods
std
push
inc
sub
out
ljmp
lcall
fs
jle
inc
in
add
pop
adc
push
repz
mov
mov
and
xchg
push
xchg
dec
fnsave
xlat
adc
insl
mov
dec
stos
and
sbb
lock
aam
sub
cmp
inc
xor
add
mov
xchg
mov
stc
jecxz
mov
mov
cmp
popa
aaa
fists
int3
and
lea
jg
movsl
sub
xchg
sub
add
dec
adc
gs
sub
inc
mov
xchg
lahf
ss
jge
iret
lock
lahf
inc
in
mov
mov
xchg
push
cs
ljmp
sub
inc
add
and
rclb
mov
rcrl
loope
dec
add
add
sahf
or
inc
ss
push
popl
cmp
mov
or
es
mov
mov
lds
push
mov
adc
lret
dec
jmp
adc
or
in
and
push
lods
into
dec
dec
cmp
pop
xchg
add
in
jp
pop
mov
loopne
stos
pop
jge
mov
xchg
sar
out
cmp
repz
mov
mov
fcoms
add
mov
in
loope
fmul
aas
imul
movb
push
rorb
sahf
sub
jne
cmpb
sub
mov
in
cmc
push
leave
and
out
lahf
test
xor
jp
xchg
sbb
addr16
iret
mov
xchg
fmul
movsb
add
outsl
jg
cld
dec
jae
cmp
sbb
pop
cld
push
int
pop
insb
or
dec
lods
adc
mov
pop
lret
fmuls
mov
sbb
ds
push
cmc
and
dec
outsb
into
aaa
xor
lods
jnp
cld
outsb
js
dec
popl
adc
sbb
test
add
test
bound
adc
enter
mov
pop
fsub
jae
sarl
decl
sbb
test
jbe
mov
lock
stc
mov
jae
cmpsl
cmp
repz
fsubrl
inc
mov
sbb
daa
mov
bound
push
lret
loopne
xchg
add
sti
shrl
jle
lds
cmp
mov
cmp
clc
loopne
adc
repz
int
fwait
test
lods
aam
push
test
dec
sub
int3
dec
and
push
cmovg
pop
cmp
rcrb
cmc
ret
orl
subb
ds
or
push
mov
lret
jg
subb
dec
repnz
pop
pop
push
pushf
sbb
push
cli
ss
jns
jp
insb
dec
fistpll
daa
inc
cltd
cmp
dec
sub
mov
add
jae
xor
int3
loopne
xor
lcall
aaa
cmp
neg
xlat
adcb
insb
sub
xchg
xor
dec
fs
cmp
sti
arpl
jno
fwait
push
cmp
cmp
popf
jns
pushf
mov
jo
sub
cmpsb
repz
mov
test
xchg
and
jne
dec
aaa
inc
cmpsb
push
icebp
orb
push
push
and
jle
or
pop
movsl
and
or
mov
cmp
mov
inc
mov
mov
lret
les
fs
loop
fists
xchg
mov
inc
scas
jae
test
insb
jecxz
pop
mov
push
xchg
sub
imul
adc
hlt
jae
xlat
sahf
jbe
aas
add
mov
xor
push
fbld
cmp
jo
loopne
sbb
or
test
adc
dec
push
sahf
dec
out
imul
lret
lret
inc
pop
into
xor
mov
aad
xor
push
aas
aad
inc
stos
scas
sub
int
or
repnz
cli
in
adc
add
push
dec
pop
mov
popf
repz
push
imul
cltd
cpuid
pop
push
dec
repz
push
imul
aaa
fidivrs
leave
lret
jl
out
cmp
insb
cmpl
push
cmp
jno
mov
mov
int3
popa
rorb
dec
or
je
gs
ret
push
call
aas
mov
test
xchg
outsl
arpl
mov
fstl
push
rorb
and
cld
sti
cli
out
popf
add
test
mov
in
push
mov
lret
xchg
shlb
adc
loope
sub
ds
lret
push
mov
sti
rorl
ret
jp
je
inc
cmp
dec
mov
out
divb
jmp
mov
scas
js
testl
cmp
gs
xchg
aaa
movsb
inc
dec
inc
sbb
add
insl
mov
es
adc
mov
mov
xchg
sub
push
push
mov
push
sbb
adc
and
jmp
les
loopne
fsubrs
add
outsl
pop
xlat
sbb
test
xchg
test
pop
adc
rcl
inc
xor
notl
pushf
jge
adc
imulb
cmp
lods
sbb
cmpsl
inc
fucomi
in
push
mov
or
ret
mov
adc
daa
sbb
es
pop
mov
movsl
sub
fildl
inc
sub
sti
cmc
pop
loope
lret
addl
mov
push
xor
aam
inc
xor
sbb
enter
leave
shll
enter
adc
rcll
call
movsb
lea
mov
sbb
inc
mov
jp
cli
in
call
cmpsb
test
mov
cmp
push
push
sbb
test
jno
shlw
xchg
icebp
loope
dec
sub
ss
in
cmp
cmp
es
xor
lahf
sbb
dec
jecxz
cmc
ficomps
push
shr
mov
jle
inc
ret
movb
pop
lret
or
ds
iret
mov
push
fdivr
fcmovnb
xlat
setl
mov
rcrl
jle
notb
lds
jne
xchg
cmpsl
shll
in
lods
scas
andl
cmp
mov
dec
fwait
sub
and
les
decl
mov
jne
pusha
adc
jb
ja
mov
stos
fcoml
gs
xor
push
pop
int3
call
popa
test
negb
mov
lahf
or
out
shll
push
arpl
mov
cmpsb
mov
jmp
xor
push
sbb
jge
fstps
cs
and
cmp
push
xor
bound
sbb
movsl
decb
rclb
and
ss
jne
int
and
cmp
cmpsb
pushf
out
inc
dec
sbbl
mov
jge
mov
fcomps
sbb
aaa
inc
loope
add
out
dec
pop
pusha
mov
pop
loop
xchg
pop
jbe
or
sub
mov
dec
cmp
popa
std
jg
in
fbstp
mov
mov
lock
jl
outsb
xchg
and
push
sub
or
and
push
das
xchg
mov
frstor
fstps
sbb
xor
into
lock
xchg
pop
dec
shrb
fisubs
xlat
mov
xchg
in
jecxz
movsb
mov
in
fsubrl
mov
add
mulb
and
stos
xchg
mov
insb
lea
dec
and
push
dec
push
pushf
fs
or
loop
test
ds
mov
xchg
xchg
mov
int
movsb
int3
pop
out
sbb
out
les
inc
jl
dec
xchg
cmc
adc
lret
dec
popf
ja,pn
mov
xchg
je
mov
pop
push
push
sub
push
add
lods
xlat
cmpsl
mov
pop
dec
add
inc
sub
push
test
mov
inc
jae
mov
mov
sbb
jle
sub
jns
adc
shlb
pop
mov
and
lret
lock
jl
dec
pop
xor
insb
or
dec
jmp
jl
out
jecxz
mov
push
mov
mulb
sub
jo
dec
ret
lds
inc
out
arpl
add
inc
and
jg
mov
push
jge
ljmp
and
add
jbe
jnp
sub
mov
test
out
jmp
add
inc
inc
sub
outsl
xchg
fidivrl
je
inc
repz
mov
loopne
xor
fcoml
in
int
cltd
or
xchg
push
adc
pop
pop
or
mov
xchg
mov
scas
leave
sub
jbe
sub
in
sahf
fcmovu
imul
xor
and
pop
out
jb
mov
mov
mov
mov
rorl
cmp
xlat
mov
sub
or
mov
xchg
popf
int
cs
dec
push
xchg
or
push
pop
test
dec
cld
fdivrp
rol
ja
dec
mov
jno
jns
daa
and
sub
sbb
jno
js
movsb
fimull
sub
int
outsb
fldcw
mov
xchg
mov
push
xor
adc
sahf
addr16
orl
hlt
pusha
enter
pop
xor
adc
cmp
push
js
and
hlt
mov
lret
push
adc
hlt
sbb
cld
fildl
popa
imul
test
fistpll
push
paddd
sub
leave
push
pop
jae
ss
add
cmc
stos
lods
lea
in
jle
mov
fs
xchg
and
jno
cmpsb
mov
push
pusha
popf
adc
push
in
add
jg
int
push
outsb
adc
push
jo
jo
cwtl
daa
push
fnstcw
jge
sub
pop
dec
inc
xor
mov
sub
mov
mov
push
notb
test
clc
aad
xchg
mov
and
bound
or
sbb
lret
stc
sar
notl
or
pusha
inc
xor
es
mov
sbb
jge
mov
ss
fsubr
imul
add
ja
push
cs
fldcw
mov
icebp
in
sbb
mov
push
pushf
adc
pop
pop
fldenv
lahf
arpl
add
loopne
xor
idivb
cwtl
xor
xor
xor
imul
mov
sti
insb
dec
adc
add
outsb
out
repnz
xor
sbb
cmp
pushl
inc
cmp
imul
adc
mov
push
mov
loop
dec
jle
inc
cwtl
mov
dec
jbe
inc
mov
xchg
fdivl
mov
loope
nop
fnstsw
pop
ja
mov
jo
rorl
add
jo
lock
das
dec
not
call
insb
cld
mov
push
xchg
jmp
jecxz
ret
addl
jge
loop
sti
sbb
ljmp
std
add
sub
mov
scas
pop
fstpl
out
rcrl
lret
and
mov
cmpb
cmp
movsl
popf
test
lea
or
cmp
pop
jb
in
add
inc
cmp
and
cld
pop
jg
ss
mov
jb
int
call
frstor
call
cmp
into
int
pop
lcall
int3
jecxz
repz
pop
add
mov
sbb
push
insl
mov
dec
aad
or
or
adc
icebp
lahf
test
xor
imul
clc
cmp
lahf
clc
loope
mov
aam
cmc
push
inc
rcll
in
das
mov
nop
dec
xchg
adc
jne
jmp
outsl
push
cltd
mov
jge
inc
and
jnp
xor
xor
clc
cmp
das
cmp
jne
mov
loopne
rorl
adc
mov
nop
movsb
sbb
out
pop
ret
mov
in
mov
icebp
add
jae
fiaddl
loopne
int3
xchg
test
sti
jns
movsl
outsb
aaa
mov
in
out
ss
into
xchg
sahf
fwait
in
int
xchg
mov
test
fisttpl
dec
shlb
pop
add
cmp
pop
pop
gs
pop
pop
inc
or
stc
test
shll
arpl
push
adc
xor
jp
out
pop
std
dec
cmp
sub
push
adc
xchg
sub
jl
stc
scas
aas
pop
or
in
mov
mul
sbb
dec
sti
test
jl
pusha
push
loop
jns
data16
xlat
shrl
es
sbb
fisubrl
jg
and
inc
out
icebp
push
insb
dec
pop
xor
enter
std
cs
push
fucom
or
shll
push
jae
sub
fdivs
fmull
bound
pusha
dec
adc
bound
iret
xor
xor
jl
imul
xor
cmpsb
pop
or
lcall
mov
adc
enter
outsl
ja
xchg
je
cltd
aad
rol
or
lods
pop
stos
ret
mov
test
cmc
pushf
adc
frstor
arpl
or
add
cmpsl
mov
testl
mov
xor
js
push
ss
xor
cld
incb
clc
jge
cmpsb
rclb
mov
inc
sub
stos
fnstcw
mov
push
insb
cmp
hlt
dec
sub
xchg
aam
or
push
xchg
jmp
and
mov
mov
lods
adc
clc
imul
push
dec
in
rcrl
into
and
inc
xor
in
adc
inc
push
pop
dec
xchg
cmpsl
mov
mov
mov
pop
push
xor
shrl
fmul
sbb
mov
mov
inc
bnd
sbb
imul
xchg
or
push
aam
sub
dec
xchg
shrb
inc
mov
lds
push
test
rcl
aas
jno
and
int3
jecxz
push
out
fcomps
pop
xchg
sbbb
push
shrb
xorb
sbb
sbb
xchg
xchg
std
popf
mov
xchg
add
mov
shll
pusha
int3
jo
aaa
dec
push
fnstenv
add
sub
jmp
push
inc
sbb
shrl
and
xor
pop
cmp
jbe
xchg
pop
push
out
je
adc
in
jge
inc
push
or
add
mov
lods
addr16
sti
sub
cmp
mov
outsb
cmp
inc
xchg
jnp
push
outsl
movsb
mov
pop
imul
xchg
icebp
into
sbb
mov
scas
ss
add
pop
aad
jmp
xor
xor
sub
fldcw
stos
mov
jmp
subb
movsb
adc
roll
xchg
or
adc
and
andl
jae
jle
push
inc
stc
jns
lahf
mov
cmp
loope
jne
mov
pop
and
xchg
push
iret
ljmp
or
mov
lcall
xchg
adc
pop
xchg
pop
stc
test
or
or
fidivs
mov
xchg
add
mov
or
jle
push
sub
hlt
sbb
sarl
outsl
nop
daa
jg
cmpsl
je
shrb
stc
rcl
sbb
sub
outsb
jmp
pop
or
loop
mov
pop
jne
xorl
fnstcw
mov
loope
push
subb
mov
jecxz
insb
inc
or
lcall
fwait
or
dec
movsl
push
scas
mov
mov
movsl
pop
test
pop
pushf
cmp
jno
leave
rcrb
add
lea
pop
out
sti
arpl
xor
xchg
sbb
sbbl
mov
aaa
pop
push
clc
shrl
mov
add
hlt
inc
xor
lahf
mov
push
lods
cmpsb
adc
mov
out
push
and
ljmp
out
dec
in
ja
cmp
mov
mov
jne
lea
inc
fwait
sub
mov
mov
int
aad
adc
push
call
test
aas
pop
test
out
mov
push
push
inc
or
sub
aad
jecxz
fdivrp
hlt
into
popf
stos
cmpsl
fistpl
push
popf
cmp
sub
jmp
and
dec
mov
xchg
ja
mov
cli
loop
sub
cmpsl
mov
xor
cmp
and
add
xchg
add
dec
pop
and
stc
sub
andl
and
add
test
sbb
pop
jge
dec
jb
or
aaa
dec
cmp
out
je
mov
das
adcb
inc
xchg
decl
jl
ret
jbe
or
aad
popa
cltd
push
cmp
cmpsl
adcl
stos
jge
std
inc
fsubs
pushl
int
test
mov
imul
sub
andb
into
mov
je
pop
fistpll
mov
lahf
mov
lock
int3
outsl
jo
je
sub
in
test
sub
ss
insl
vmread
mov
leave
push
fwait
inc
loope
add
outsl
in
test
shrb
dec
out
mov
jae
inc
cld
inc
push
test
and
xor
test
pop
rol
rcl
ja
mov
fildl
cmp
cmp
cmc
aas
and
es
xor
inc
mov
scas
dec
rcl
push
test
pop
push
aam
dec
jmp
dec
test
mov
dec
xchg
add
in
movsb
pop
aam
mov
xor
into
in
std
push
mov
bound
ret
mov
ds
dec
or
pop
fisttpl
mov
dec
lahf
fildll
or
xchg
notl
adcb
xchg
shrl
movsb
add
sahf
sub
out
and
mov
push
xor
or
push
sub
cmp
dec
push
clc
cltd
fwait
mov
fxch
xor
and
push
add
scas
mov
pop
aam
mov
lock
mov
mov
pop
xchg
jle
cmp
fwait
in
in
jno
push
sbb
push
fdivr
lods
jl
aas
sbb
mov
mov
push
repnz
or
jno
cmp
adc
mov
in
dec
mov
cmp
pop
mov
lea
cltd
adc
ja
push
cmp
sub
cmp
cmp
mov
fs
fildll
mov
adc
je
repz
pushf
das
imul
mov
mov
aad
test
or
push
sti
sbb
push
or
and
ljmpw
fs
fdivrl
adc
call
xchg
test
inc
sbb
and
dec
popf
mov
sar
movsb
add
and
push
gs
out
inc
daa
add
insb
ret
in
pop
test
add
jle
or
xor
inc
inc
testl
mov
jle
std
cmp
divb
dec
addr16
iret
pop
adc
repz
sarb
cmp
mov
push
addr16
or
mov
icebp
sar
or
sti
dec
scas
js
mov
xchg
into
imul
mov
pop
loope
into
dec
inc
imul
xor
sub
xor
lcall
ret
lcall
add
mov
jge
xchg
int
stos
dec
stos
stos
mov
dec
jae
enter
mov
xor
and
leave
movl
scas
negl
and
lahf
jbe
pop
jl
dec
cwtl
data16
and
loopne
icebp
mov
push
enter
dec
or
or
aam
sbb
inc
sub
add
xorb
jno
jb
inc
daa
lcall
pushf
scas
ljmp
rcll
in
mov
nop
mov
jp
dec
test
sub
pop
movsb
add
xor
sub
rcll
adc
inc
dec
dec
sbb
imul
insl
les
add
jg
mov
data16
hlt
add
mov
out
sbb
pop
sahf
sahf
or
xchg
jmp
cmp
fdivr
or
sub
cmpsb
out
addl
xlat
insl
inc
add
bound
jecxz
int3
mov
insb
jl
sbb
xchg
mov
pop
rcrl
stc
pop
cs
and
xor
ret
sbbl
shrl
repnz
jb
sub
sbb
lret
repnz
sbb
push
test
fchs
xor
adc
mov
cmp
imull
lods
and
idivl
insb
inc
push
mov
push
mov
dec
cmp
jbe
rcrl
dec
inc
mov
sub
test
inc
pop
jle
mov
fcomp
inc
sar
iret
popa
iret
frstor
sti
sbb
xchg
fldln2
leave
push
sub
in
rep
in
jmp
add
mov
es
pop
or
pop
mov
or
iret
jecxz
pop
adc
aad
repz
jp
stc
cmp
adc
je
dec
pusha
insl
or
notb
mov
inc
mov
icebp
and
loope
test
mov
xor
push
je
or
xchg
cmp
and
push
sbb
inc
or
rclb
dec
sub
andl
ja
aas
adc
jbe
mov
pop
ret
nop
daa
jae
mov
lock
mov
gs
push
into
test
xchg
inc
iret
sahf
sahf
push
pcmpgtd
iret
mov
lret
inc
leave
mov
daa
jle
scas
aas
or
mov
xchg
sbb
jns
fpatan
daa
add
imul
stos
and
inc
xor
push
aaa
xor
mov
subl
add
dec
xor
loop
pushf
test
jmp
out
imul
inc
add
adc
aam
mov
xor
add
std
push
sbb
testw
int
pop
push
push
xor
push
mov
pop
adc
adc
dec
je
cmpsb
arpl
shlb
xor
rcrl
push
cmp
movsl
mov
or
pop
cmp
mov
push
inc
outsb
movsb
inc
xor
push
test
push
and
stos
pop
push
dec
inc
fsub
in
xor
inc
cld
lock
sub
lahf
cwtl
sub
clc
cmpsb
xchg
push
mov
pop
dec
and
push
lret
xchg
add
and
jns
cld
test
dec
push
sub
add
call
notl
xchg
jmp
mov
loope
fsubrl
ljmp
bound
add
push
push
or
push
lret
iret
and
repz
scas
popa
dec
and
add
sub
fstpt
jo
inc
xchg
sbb
movsb
in
sub
xchg
enter
test
lret
dec
jle,pt
adc
mov
bnd
bnd
lret
mov
fs
faddl
jne
stc
dec
out
inc
imul
int3
push
out
js
enter
pop
mov
and
and
jae
add
cmpsb
pop
add
dec
fisubrl
cmp
mov
sub
mov
mov
mov
cmpb
jb
enter
aaa
jbe
pop
mov
outsb
adc
jecxz
pop
pop
outsl
or
sub
icebp
out
mov
mov
scas
movsb
cmp
fsubr
sbb
jno
clc
pop
stc
jo
fstpt
inc
std
ja
sub
leave
mov
int3
rolb
arpl
popf
je
sahf
mov
sub
xor
mov
rorl
lret
leave
mov
push
stc
sub
popf
jb
js
addb
cltd
paddsb
mov
and
in
pop
mov
xchg
xor
cli
pushl
loope
push
dec
mov
stc
xchg
lock
clc
adcb
aam
mov
inc
fldcw
push
into
mov
mov
dec
push
xchg
add
and
stc
je
hlt
fs
inc
mov
cmc
mov
push
scas
cld
inc
xchg
pushf
cwtl
adc
add
mov
idivl
cmp
xor
cld
pop
xorl
cmp
les
jnp
adc
cld
inc
adc
je
stos
mov
lods
repz
leave
subb
mull
dec
jge
imul
lcall
dec
pop
fwait
aaa
stos
mov
push
aad
cmp
in
into
popl
sarl
mov
nop
push
xor
jns
mov
std
cmp
pushl
pop
xchg
pop
xor
sub
xchg
inc
pop
cmp
icebp
adc
mov
push
loope
sub
mov
mov
add
fstps
xchg
push
or
pop
jg
xlat
push
push
push
add
fwait
mov
cmpsb
in
mov
and
or
cltd
or
sub
das
sbb
mov
sbb
ret
xor
inc
adcb
jecxz
loope
jno
mov
stos
push
and
aaa
jp
insl
in
sbb
into
aas
adc
xchg
pop
mov
scas
mov
fstpl
mov
jo
mov
or
mov
mov
pop
ret
push
stos
mov
cmp
jnp
sbb
in
dec
sbb
int3
and
push
scas
mov
push
sti
jae
mov
es
inc
lods
pop
repz
sbb
add
jb
add
adc
enter
mov
mov
stc
addb
adc
jbe
xchg
std
sbb
lods
xor
dec
sub
push
into
shl
cmp
sub
je
fbstp
cmpsl
add
int3
and
imul
jns
xchg
mov
mov
inc
int3
lcall
pop
mov
enter
or
push
dec
js
jmp
push
in
dec
mov
adc
cwtl
jge
cld
lds
mov
movb
jnp
and
and
dec
ljmp
ja
push
outsl
sti
add
in
add
les
pop
std
sub
add
nop
push
pop
push
xchg
fisttpl
rcll
stos
sbb
dec
mov
adc
cmp
and
jecxz
mov
daa
test
std
js
cmp
push
mov
fcoms
add
jo
adc
nop
dec
ds
adc
mov
or
es
jge
call
cmp
test
test
cli
cmpsl
or
pop
cmp
add
jg
xchg
cmp
in
push
pop
mov
cmpsl
inc
cli
push
xchg
pop
pop
mov
push
mov
jne
jnp
push
js
test
xorl
mov
add
cmp
popa
daa
xchg
and
mov
adc
mov
cmp
insl
jle
loopne
xor
pop
and
lock
scas
and
insb
mov
xor
sbb
cmp
mov
insb
mov
out
cmp
xorl
mov
xor
jnp
ret
and
adc
push
ret
mov
stos
pop
rcrb
or
cmc
xchg
cli
icebp
xchg
adc
popa
bound
pushf
lods
divl
jmp
cmp
xor
ret
mov
jmp
repnz
adc
fwait
mov
dec
lgs
test
les
sbb
in
fimull
inc
in
daa
jo
ret
iret
out
std
push
iret
out
inc
out
fmul
icebp
pusha
aas
fwait
push
outsl
rorl
jno
dec
add
jmp
adc
add
and
pop
das
push
or
je
mov
insl
push
js
jp
mov
mov
jbe
xchg
insb
jp
cli
lods
int
subl
sub
rorl
imulb
in
pushf
movsb
sbb
mov
xchg
bound
or
or
jae
push
mov
inc
pop
dec
roll
shlb
das
cltd
mov
xlat
xchg
addb
jp
pop
dec
mov
fisubrs
cs
test
aad
jnp
ljmp
ret
mov
dec
adc
xchg
or
divl
movsb
sbb
mov
pop
inc
lea
add
xchg
jg
shr
test
stos
outsb
jp
xchg
popf
cld
xor
call
mov
shll
jne
add
sbb
pop
xor
fsubl
outsl
stos
aas
pop
das
test
cmp
ss
or
adc
xor
sub
add
push
mov
jg
fbstp
das
jb
orb
jle
xchg
push
leave
xchg
or
lods
test
scas
mulb
loop
imul
out
rolb
fwait
imul
mov
and
add
mov
pop
cmp
dec
or
sarb
cwtl
push
int
adc
pop
fucomi
jmp
mov
int3
stos
ja
test
cwtl
xor
icebp
aas
pushf
cmpsl
dec
test
push
and
cs
jmp
jno
pop
push
pop
mov
push
mov
jge
dec
xchg
sbb
cmp
adc
push
add
xlat
mov
test
jns
mov
dec
enter
and
lcall
inc
dec
movsb
or
aaa
gs
jmp
bound
sub
std
outsl
icebp
add
loopne
xor
mov
mov
fs
mov
ret
iret
jle
sti
ljmp
or
pop
push
es
pop
inc
adc
push
add
or
mov
iret
je
mov
out
or
popf
jns
mov
add
mov
lret
enter
ficoms
loopne
insl
dec
fs
add
push
out
test
cs
push
sbb
es
inc
les
lods
fnsave
leave
sahf
enter
fsubs
test
repnz
lds
mov
mov
fstl
sub
sub
das
xor
xorl
pop
jle
adc
clc
xor
arpl
pop
insb
in
xor
ret
roll
mov
fiadds
mov
xchg
scas
cmp
or
push
and
adc
inc
in
clc
jno
lret
pop
out
and
test
aam
mov
idivl
push
add
stos
ds
inc
push
jg
add
sub
lcall
mov
arpl
int3
cmp
gs
loop
lock
nop
ss
pop
or
xlat
xchg
cs
and
arpl
or
mov
insl
cs
nop
mov
rol
sbb
ret
or
aam
push
dec
jo
push
lds
xchg
add
test
push
pop
faddl
push
mov
subb
cmp
push
adc
xchg
dec
jns
addr16
stos
fisttpll
das
fwait
mov
cmpsb
jl
xchg
cmpsl
lds
jmp
imul
or
push
push
add
or
push
cmp
es
mov
xchg
pop
and
decb
cmc
es
stos
add
nop
inc
jl
pop
xchg
std
mov
rcl
push
pusha
fidivs
pop
sbb
xchg
mov
dec
enter
test
icebp
dec
repnz
dec
lret
pop
mov
sub
mov
sbb
adc
mov
fwait
ss
into
std
push
jae
mov
mov
shl
adc
jne
iret
aam
fstpt
add
mov
adc
sbb
mov
mov
popf
leave
stos
sbb
stos
push
ucomiss
mov
aaa
mov
adc
mov
test
push
test
add
push
lds
loopne
mov
and
aaa
or
sub
add
jno
inc
pop
lret
pop
cmp
outsl
repnz
in
mov
rclb
xchg
xchg
jl
or
xchg
cmp
mov
xor
mov
mov
push
pop
jne
ljmp
or
test
pop
mov
dec
xchg
out
sti
in
and
shlb
inc
xor
jle
adc
or
pop
lahf
inc
xchg
or
stc
add
inc
ret
lahf
stos
cmp
cmp
nop
incl
es
sti
mov
or
enter
jge
addb
dec
mov
pop
or
iret
in
mov
popf
and
loope
adc
and
stc
out
sarb
pushl
sbb
or
lea
out
sub
inc
cmp
push
into
pop
sub
stc
ret
mov
mov
jg
loop
lret
push
out
jo
aas
std
fnstcw
daa
mov
leave
dec
adc
jno
cltd
push
add
and
lds
mov
cmpsb
stos
mov
sub
mov
sub
dec
test
push
xchg
pop
leave
pop
aaa
add
push
fwait
subl
cmp
mov
popa
inc
mov
idiv
xchg
popa
add
fdivr
lock
xchg
push
sub
rcl
popa
das
imul
pusha
sub
sahf
cwtl
clc
inc
pop
aaa
add
movsl
adc
out
xchg
aam
outsl
dec
inc
ret
mov
mov
mov
insl
je
faddl
sarb
mov
shlb
fwait
jecxz
shll
cmp
xlat
lret
and
push
jge
push
scas
enter
mov
push
movsb
cltd
stos
xchg
xor
cmp
dec
mov
sub
inc
xor
xor
fisubrl
xchg
inc
cltd
dec
add
inc
and
jbe
cld
repz
xor
dec
out
pop
mov
icebp
xchg
jbe
mov
or
pop
mov
ret
adc
jmp
sbb
pop
mov
in
push
xchg
cmpsb
pop
xchg
fs
fcompl
push
insl
insl
mov
es
add
jns
in
imulb
call
adc
jg
pop
loope
cli
push
aas
pop
jl
sbb
sbb
mov
pop
shlb
insl
lea
in
movsl
mov
pop
in
mov
imul
pop
xchg
cmp
fucomip
mov
adcl
jbe
repz
pop
mov
fs
mov
mov
cld
dec
ja
popf
scas
add
adc
jne
xlat
xor
imul
push
or
rcrl
xlat
jg
inc
mov
xchg
pop
or
push
pop
rorl
scas
sub
ret
das
or
aaa
into
lods
push
xchg
hlt
pop
push
push
push
loope
jnp
mov
mov
xchg
lret
mov
jmp
jnp
adc
into
gs
jg
push
into
xor
mov
pop
pop
cltd
ret
aaa
jno
jmp
arpl
mov
daa
and
mov
xlat
cmpsb
movsb
adc
dec
stos
xchg
lcall
and
xchg
dec
rcr
jmp
nop
xor
adc
jbe
add
sub
xchg
inc
or
and
fadd
call
mov
fbstp
fcmovnb
sbb
push
xor
cmp
rclb
pop
faddl
mov
rolb
popa
inc
rorb
add
dec
inc
inc
sbb
hlt
adc
dec
cltd
out
insl
and
mov
sbb
fwait
orb
fisttpll
stos
pushf
push
addr16
push
ss
push
cs
arpl
inc
das
cmp
cld
in
inc
xor
dec
push
jg
or
mov
xor
pop
in
and
call
andl
stos
adc
jl
vpunpckhqdq
lock
pop
cmp
mov
fwait
and
hlt
aad
push
dec
cld
outsl
xchg
jno
xor
xor
popf
sbb
inc
outsb
addb
adc
inc
out
push
jecxz
mov
dec
xchg
and
jne
sub
mov
jbe
jo
int3
outsb
stc
popf
or
xchg
outsl
rorl
mov
dec
movsb
push
fwait
and
jmp
pop
inc
dec
cmpsl
mov
inc
xor
int3
push
push
cmc
xlat
test
or
mov
xor
xchg
mov
cmpsl
pop
sar
outsb
cs
inc
lcall
jae
mov
mov
jmp
mov
cmpsb
or
fs
fnstsw
outsl
or
popf
cmp
out
hlt
lcall
jae
cmp
and
fbstp
movsb
ljmp
or
in
jns
mov
pop
xchg
fimuls
adc
inc
push
mov
lahf
leave
loop
scas
mov
into
mov
push
mov
sub
xchg
add
dec
xor
shrb
push
outsl
cld
fildl
sbb
xor
inc
test
cwtl
xor
outsl
pushf
gs
and
mov
push
std
out
rcrb
push
popa
inc
cmp
inc
sahf
stc
dec
or
lds
js
loope
add
cmp
andl
push
outsl
ret
sub
ja
sub
inc
sub
subl
xchg
loope
out
jl
out
sbb
outsb
lea
cmp
mov
call
orl
xchg
push
and
ret
jb
sub
scas
jmp
sub
adc
push
mov
cmc
adc
bound
dec
pop
in
sbb
and
push
pop
aas
roll
test
lods
stos
mov
mov
aaa
enter
aaa
inc
cld
mov
cld
sbb
adc
add
es
fimuls
mov
sbb
cmp
dec
xchg
mov
outsl
into
pushf
add
pop
dec
icebp
mov
aas
dec
sub
lds
jno
inc
repnz
mov
sbb
pop
dec
fdivr
push
movsb
jbe
out
adc
xchg
mov
jge
fists
imul
stos
fdivrs
cmpb
pushf
jg
mov
mov
xor
sub
inc
outsl
movsb
jle
andb
or
push
pop
test
je
mov
xchg
push
stos
mov
ja
push
push
and
fistps
xchg
push
jmp
mov
mov
fs
push
sub
mov
cld
fwait
lcall
imulb
out
inc
daa
hlt
xchg
jns
fs
imul
xchg
fsubr
mov
xor
cmc
scas
fnsave
adc
cmp
and
cmp
sub
pusha
mov
addr16
xlat
adc
sub
pop
jl
xchg
mov
adc
mov
cmp
cmp
lret
push
test
loop
sti
aam
insb
add
pop
rcll
push
shl
fistl
testb
mov
inc
inc
cli
inc
and
orl
hlt
inc
loope
les
push
fs
xchg
mov
in
jb
ficomps
aaa
ds
testb
sbb
call
xchg
je
dec
aaa
push
mov
jb
cwtl
pop
xchg
jbe
out
add
mov
lods
lret
rol
jge
fisttpll
lret
shlb
stc
subl
push
xchg
cmp
push
cmc
mov
cli
dec
hlt
outsl
pop
cwtl
jnp
js
ds
fcmovu
xorb
mov
jg
sub
fidivrl
mov
xchg
cmp
pop
or
jg
outsl
movsb
out
and
jle
mov
outsb
mov
jg
and
jb
clc
xchg
mov
bnd
adc
rcrb
sub
inc
add
lahf
jnp
add
js
dec
pop
mov
hlt
xor
loop
mov
in
rorl
mov
sub
ljmp
mov
fsubrl
fucom
or
jae
lods
data16
pop
cmp
fdivp
lods
inc
push
push
outsl
imul
arpl
sub
cmpsl
decl
out
fwait
hlt
xchg
cmp
adc
push
imul
mov
push
dec
add
fs
fidivl
or
lcall
leave
and
and
xchg
jbe
push
cmp
push
fcomip
add
sarb
mov
sub
pop
cmpsb
xchg
mov
xchg
lret
sbb
or
xchg
xlat
or
mov
shl
movsl
mov
mov
dec
incl
loop
ret
xchg
cmc
sub
sub
pushf
dec
sub
push
mulb
scas
lcall
mov
cmpsl
cmp
rorl
orb
jmp
xchg
cmp
sub
repz
pushl
or
hlt
in
pop
or
xchg
pop
inc
adc
xchg
cmpsb
inc
sbb
scas
and
clc
inc
sbb
sbb
xor
and
lods
or
fisubl
dec
push
xchg
xor
push
mov
mov
fxch
pop
addl
jp
or
mov
notl
sarb
mov
cmpsl
lret
push
ljmp
xor
mov
push
lods
adcl
dec
sti
mov
mov
add
xchg
mov
sub
std
or
jns,pn
jae
pushf
adc
inc
sbb
shrl
ret
mov
inc
lock
adc
push
jae
hlt
mov
fwait
sqrtps
fs
cmpsb
faddl
shrb
imul
dec
inc
sbb
std
xchg
enter
iret
lds
xlat
dec
cmp
cmpsl
fstpl
test
test
aam
jo
lcall
or
push
mov
jnp
mov
cltd
and
addr16
jnp
sub
and
mov
insb
aas
stos
mov
mov
stc
mov
lods
into
xchg
pop
xlat
lock
sahf
enter
jle
std
pop
out
push
add
shl
lahf
mov
int3
mov
sbb
xor
fdivrp
cmp
sbb
push
inc
lds
and
add
out
icebp
test
comiss
add
mov
imul
mov
nop
lret
rolb
jmp
dec
add
clc
pop
loopne
and
sub
jne
iret
xor
std
outsl
mov
add
movsb
or
cmp
data16
lds
aas
in
add
mov
cmp
mov
minps
xchg
adcl
loopne
mov
sbb
movsb
jnp
jae
push
sub
in
jo
dec
mov
or
lret
mov
and
push
cmp
dec
lcall
out
adc
or
fstpl
and
mov
loopne
dec
add
adc
xor
ficompl
mov
xchg
cmp
repnz
scas
ljmp
ret
jl
cmpsl
sub
lds
add
dec
imul
add
push
pop
add
js
push
pop
inc
mov
inc
xor
jg
cmpsl
cmpsl
mov
lcall
pop
mov
push
lods
rolb
adc
adc
movsb
insl
inc
dec
test
mov
pop
lods
pop
test
aas
inc
push
movsb
or
ds
jmp
sub
mov
les
xchg
xor
dec
clc
or
and
stc
insl
jp
and
dec
pop
push
cwtl
in
stos
add
xor
xor
xchg
cwtl
test
repnz
push
jb
sub
cli
leave
cmp
dec
jle
inc
mov
xor
lods
xchg
cmc
or
imul
lods
out
in
push
cld
adcb
pop
or
cmc
lret
clc
and
int
adc
mov
jecxz
jno
or
inc
out
jo
sarl
mov
inc
pusha
mov
sbbb
ja
filds
shlb
dec
mov
dec
dec
push
outsl
sti
in
cmp
xchg
xlat
mov
mov
cmpsb
cltd
sub
cmpsb
or
stos
hlt
sbb
dec
adc
cmp
or
sbb
stos
jg
enter
dec
xor
sub
cmp
call
in
or
and
mov
xor
cmpsl
scas
pushf
mov
jecxz
lcall
test
lock
mov
sbb
cmp
ja
in
in
ficoml
mov
cmpsl
test
inc
repz
int
xor
mov
jo
adc
out
out
jae
mov
push
fcomp
fdivl
and
mov
movsl
int
mov
jmp
pop
push
rcrl
xchg
lea
dec
or
xor
test
loope
dec
imul
mov
call
aam
loop
rorl
cmp
pop
stos
dec
jae
fisttpl
cmp
sbb
or
fwait
cltd
mov
shlb
and
test
jno
mov
popf
aaa
imul
test
and
jle
scas
decl
loopne
xchg
sub
aaa
jb
push
xchg
adcb
test
mov
push
mov
dec
or
pusha
sub
jbe
sbb
cld
add
dec
sahf
loope
sbb
mov
inc
xchg
dec
inc
and
push
outsb
or
ret
mov
ret
shl
inc
mov
rcr
dec
mov
pop
les
mov
out
mov
lret
and
add
inc
ds
dec
mov
sub
mov
xchg
pusha
lock
outsb
dec
pop
mov
jae
pop
arpl
das
jmp
mov
loop
arpl
inc
dec
mov
cli
fnsave
lock
ret
mov
fsubrl
sub
adc
enter
aas
jo
dec
imul
insl
xlat
call
push
add
cmpsl
sbbb
std
pop
dec
xchg
in
add
cwtl
xchg
fsts
ret
push
cltd
mov
xchg
bswap
int3
and
mov
into
cli
pop
mov
imul
int
movsl
push
mov
sbb
scas
icebp
aas
add
jb
cmp
mov
xchg
dec
mov
cmp
fnstenv
insl
pop
sbb
push
mov
mov
cmpb
das
rorb
add
sbb
test
jle
lret
cmp
mov
aad
cmp
pop
test
hlt
test
shl
sub
pop
jne
hlt
mov
push
mov
addr16
mov
and
test
cmp
mov
pop
xor
loop
cmp
mov
sbb
test
arpl
push
imul
lods
in
sub
js
sub
cmpsb
adcl
cltd
sbb
pop
cmp
stos
testl
lret
mov
add
mov
fsubrs
push
add
in
adc
push
cmp
cmp
and
js
sub
cwtl
and
ficomps
leave
push
adc
rcrl
cltd
sbb
testb
pop
shlb
mov
mov
pop
mov
popa
scas
cmc
pop
into
sbb
aam
lods
or
fiadds
sbb
dec
pop
shrb
jl
add
incb
inc
out
loopne
cmpsb
push
or
aas
movsl
adc
addr16
cmp
inc
stos
xchg
lahf
shll
loop
lret
mov
fnstcw
int3
pop
push
jp
push
pushf
in
mov
leave
arpl
imul
scas
pushf
jg
pusha
rcrl
je
pop
mov
mov
filds
and
mov
xchg
cmp
adc
xchg
movsb
xor
push
leave
and
jnp
pop
push
pop
pop
dec
pop
push
out
aaa
mov
rcll
and
pop
insb
in
jecxz
mov
push
mov
jmp
push
outsb
mov
in
cmp
pop
push
jle
lods
mov
mov
xor
and
sub
popa
cmp
aad
sbb
mov
lret
adc
pop
loop
leave
adcl
ljmp
div
adc
adc
test
inc
xchg
int3
sti
jmp
outsb
pop
pop
rclb
sub
insl
lods
orb
in
test
cmp
add
shl
and
fs
dec
jl
cs
dec
push
dec
idivb
add
mov
xor
pop
lock
dec
add
cli
pop
stos
in
ja
sbb
loopne
shll
pop
adc
mov
out
lea
dec
scas
js
in
mov
aas
pop
inc
mov
adc
adc
mov
jmp
aaa
jl
or
aad
std
push
sub
adc
inc
jne
sarl
mov
mov
xchg
xchg
cmp
ja
rcrl
pusha
xchg
gs
lods
sub
mov
clc
ret
mov
std
sbb
push
scas
mov
dec
jo
xchg
outsl
test
aas
mov
cli
lock
imul
xchg
scas
mov
mov
xchg
sbb
jmp
and
dec
jle
add
inc
pop
fiadds
dec
push
dec
insb
lea
out
js
push
popf
pop
sbb
mov
jo
out
repnz
rcll
cltd
mov
aam
and
jg
xor
push
test
fcomip
sbb
sbbb
test
add
push
sub
icebp
mov
fists
sahf
xchg
mov
mov
jmp
xor
hlt
into
fnsave
and
lds
mov
loopne
push
fs
adc
add
push
jge
sbb
das
mov
out
jns
push
add
ja
xchg
push
jp
es
jmp
inc
ret
fdivs
sub
fcmovnu
mov
inc
adc
inc
bound
iret
repz
fldt
and
dec
jnp
popa
push
aaa
fs
jno
repz
mov
out
movsl
cmp
adc
sahf
push
cmc
shll
or
push
sbb
inc
mov
repz
push
std
inc
clc
stc
mov
aam
movsb
hlt
sbb
add
mov
inc
in
jne
and
movsb
dec
stos
add
mov
inc
sti
adc
fildll
mov
mov
mov
popl
les
inc
or
dec
neg
fcmovnu
pop
sti
mov
popa
and
and
lea
loopne
sar
fcompl
ljmp
test
and
add
enter
inc
sbb
or
call
dec
xor
lret
out
mov
call
notb
xor
sbb
mov
cmp
lds
jne
hlt
lcall
int3
sti
adc
pop
xchg
popf
outsb
icebp
ds
add
xlat
iret
add
adc
sbb
mov
dec
scas
mov
aam
xor
xchg
inc
loopne
adc
cmp
sbb
xchg
ds
cltd
mov
jmp
dec
jno
fdivr
lahf
mov
aam
xchg
lcall
rorb
lahf
enter
popa
shl
jle
push
jle
add
or
and
dec
jle
mov
mov
jg
outsl
mov
shll
mov
rcr
popf
pop
mov
mov
daa
push
and
mov
test
cwtl
in
add
bound
sub
ss
enter
xchg
cwtl
inc
inc
sbb
xchg
fs
test
aam
jbe
pop
jecxz
lods
jno
jle
movsb
out
xchg
jg
mov
hlt
stos
mov
add
mov
add
sbb
jp
movsl
insl
test
int3
push
mov
and
ss
jge
add
in
fidivrl
ja
es
jg
rcl
push
mov
adc
pop
das
popa
xchg
fcompl
xor
cwtl
imul
cld
xchg
push
or
xchg
cs
inc
call
adc
pop
push
pop
and
dec
inc
cmp
jg
add
lret
mov
add
out
outsb
dec
fistpl
in
mov
arpl
pop
fists
fisubl
lahf
dec
inc
push
push
rcrb
lds
icebp
dec
mov
lcall
daa
mov
orb
mov
loope
jnp
xchg
in
xchg
leave
or
and
or
test
xchg
push
dec
mov
dec
inc
sbb
icebp
xlat
cmp
into
aaa
das
es
outsl
stos
scas
daa
aas
cmpsl
adc
fsubs
test
int
sbb
xor
mov
nop
hlt
jae
mov
and
hlt
inc
mov
mov
mov
mov
addr16
aas
or
pop
int3
lea
cmp
jmp
dec
and
mov
std
mov
xchg
cmp
fimuls
jno
imul
cmp
pushl
xor
lods
add
pop
std
scas
inc
sbb
cmp
das
data16
dec
cld
add
out
das
stos
push
xchg
xor
mov
push
sbb
jnp
xor
in
sub
jle
decl
pop
or
sub
cmp
xor
jg
mov
or
and
into
shll
je
aam
xchg
jb
xor
lret
js
out
test
neg
shl
das
mov
dec
in
jns
mov
lds
rol
mov
adc
mov
fldcw
cmpsb
iret
leave
xor
sub
mov
aad
jns
xor
cli
mov
and
aad
sub
inc
fmuls
push
arpl
scas
outsb
gs
gs
push
or
insb
inc
pop
out
push
push
cltd
jge
es
jle
leave
push
mov
xor
ret
subl
pop
lds
adc
mov
xchg
std
ljmp
and
sbb
cmp
pop
mov
or
push
dec
mov
subb
pop
scas
mov
xor
lods
jl
mov
test
out
cltd
adc
push
neg
cld
jno
daa
xchg
mov
std
push
mov
dec
js
pop
test
outsb
fwait
xchg
out
sub
fisttps
pop
sub
mov
lret
scas
movsb
js
push
test
das
mov
push
inc
dec
inc
ds
adc
ficompl
jle
cli
inc
mov
cmp
mov
or
addr16
arpl
inc
mov
push
inc
aas
or
mov
cld
rorl
aaa
in
pop
and
jl
mov
add
fistl
imul
xchg
xchg
jae
xchg
std
xchg
insb
jbe
fwait
insb
jbe
xchg
dec
enter
shlb
dec
aad
je
nop
mov
data16
xchg
sti
clc
mov
in
inc
push
xchg
and
outsl
jnp
fldt
aad
xor
inc
fstpt
fsubrs
xor
aas
adc
lds
es
sarb
out
and
ja
mov
push
jne
filds
sub
les
push
and
int3
int3
sbb
xchg
xchg
pusha
add
loope
movsl
add
adc
xchg
jno
mov
add
ror
cmp
sub
mov
imul
test
ret
cmpsb
lds
dec
and
xor
jnp
pop
push
push
std
rcll
jmp
pop
sbb
add
mov
mov
pop
add
xor
cmpsl
notb
fwait
jae
pop
outsb
pop
insb
insl
jb
mov
in
shrb
loope
jecxz
ljmp
in
sbb
cli
or
aas
mov
push
das
push
out
stos
cmpsl
mov
lock
lods
jne
or
mov
sub
test
idiv
and
adc
xchg
pusha
add
adc
add
jae
sub
mov
enter
inc
loop
addr16
test
mov
add
ss
xor
mov
jmp
push
lret
leave
add
mov
into
mov
jge
add
push
ljmp
bound
inc
sti
sub
lret
mov
lea
in
outsb
xchg
aas
std
mov
or
dec
jecxz
in
xchg
jnp
mov
pop
sub
pushf
rcll
push
lret
xor
fistl
inc
lcall
lock
inc
int
or
inc
ficomps
xor
stos
in
test
push
bound
xor
repnz
mov
sbb
pop
push
repz
rcrl
inc
mov
test
sub
bound
mov
arpl
in
stos
insb
adcb
movups
push
fsubr
push
aaa
lods
xor
bts
icebp
mov
stc
dec
cmpsb
mov
lods
pusha
inc
inc
loop
bound
in
mov
inc
mov
xchg
sub
xchg
sub
jmp
push
sub
popa
cmc
adc
push
add
mov
jecxz
push
repz
sub
cmp
pop
dec
mov
cmp
aam
pop
jno
dec
and
popa
ret
xor
in
or
decb
test
mov
sbb
jmp
fidivrs
sub
xor
scas
nop
call
sub
popa
xchg
icebp
fldl
cmc
mov
sahf
or
mov
cwtl
aas
xchg
xchg
mov
cmp
shrb
loop
mov
aam
mov
xchg
pop
mov
mov
lea
push
jo
push
ss
cmp
lcall
mov
xlat
pop
loope
sti
fsubl
pop
and
adc
mov
or
enter
sbb
adc
fbld
pop
add
mov
push
test
es
fs
repz
sbb
ret
icebp
mov
scas
aas
fisubrs
pop
inc
stc
jge
push
ss
dec
scas
jo
push
sub
xchg
loop
testl
adc
sbb
mov
in
dec
fnsave
cmp
xor
leave
cmp
push
pop
es
pop
in
or
stos
cli
pop
lea
orb
sti
lret
stos
xchg
xchg
pop
adc
cmp
push
shl
int
aas
xchg
aas
test
js
inc
sbbb
mov
add
fnstsw
pop
sub
inc
push
test
and
pop
pop
ret
fistpll
pop
pop
out
outsb
and
ret
push
sbb
lcall
mov
fdivp
and
loopne
xor
dec
pop
push
adc
int
xchg
pop
loopne
dec
ds
mov
popl
fsubp
les
xor
nop
repnz
add
mov
stos
ja
push
mov
push
inc
dec
jae
test
imul
dec
push
clc
test
leave
push
xor
jnp
push
pop
outsl
sahf
xchg
or
xor
jne
daa
subl
or
fcmovu
mov
mov
aas
sarl
pop
lock
out
mov
lods
push
sub
cmpsb
cwtl
gs
gs
test
jae
jae
adc
popa
cmp
push
adc
xor
nop
mov
insb
in
pop
imul
and
insl
mov
aaa
icebp
rorb
adc
inc
hlt
inc
sbb
push
stc
imul
in
mov
push
mov
lret
mov
mov
cltd
sub
ljmp
mov
cli
xor
mov
lea
fwait
cmp
lock
adc
movsl
or
sub
scas
adc
add
sbb
mulb
sti
fildl
xchg
push
xchg
xor
movl
insl
or
jnp
inc
insl
loope
nop
fdivrp
je
push
repz
insl
sahf
lock
mov
aaa
mov
fcomp
mov
jmp
rolb
push
and
mov
pop
adc
add
jno
jl
js
xchg
daa
insl
cmp
add
push
sub
mov
mov
movsl
dec
fistps
into
stos
leave
addb
mov
popf
dec
mov
pop
loop
push
cs
sub
cmpsl
pop
js
jbe
mov
mov
mov
fdiv
inc
xchg
dec
pop
loop
ret
in
jge
adc
lds
sub
outsb
scas
xor
jb
and
jns
jo
jp
addr16
sub
hlt
outsb
loope
or
repnz
pop
cmpl
sub
pusha
sbb
out
jae
push
and
sbb
sbb
jns
pop
je
lods
sbb
dec
mov
xor
cmp
sub
popf
push
mov
and
jp
pusha
adc
icebp
cmp
mov
in
inc
aad
push
xor
out
push
push
fcomi
mov
cmpsl
fdivrl
push
mov
push
push
out
lods
daa
xor
push
std
cmp
test
dec
sbb
nop
xor
arpl
push
das
std
dec
repz
pop
fisubrl
lds
fildl
pop
sbbb
rcpps
mov
fsts
inc
mov
fst
sbb
mov
push
pushf
push
dec
jo
lods
cmp
fwait
dec
mov
sbb
fimull
push
cld
ficompl
cld
inc
xchg
mov
call
mov
lds
sub
repz
pop
pop
out
loope
out
mov
sbb
mov
jl
lea
or
repnz
mov
insl
pand
or
sub
jp
mov
mov
insb
sbb
aad
fs
mov
movl
shlb
fstps
pop
inc
adc
je
cmpsl
outsl
mov
pop
pop
fiaddl
inc
fildl
jl
dec
and
mov
pop
pop
mov
push
mov
dec
aas
loopne
fisttps
cmp
adc
sub
sub
mov
nop
js
mov
ds
imul
dec
inc
mov
in
xor
dec
cmp
xor
push
ljmp
xchg
pop
and
gs
mov
negb
push
stos
das
repnz
mov
pushf
scas
int3
xlat
jae
push
movsl
xchg
sub
add
ds
or
cli
arpl
xorb
mov
iret
int3
jbe
outsb
add
mov
adc
insb
mov
mov
xor
mov
sbb
mov
loope
dec
jnp
xchg
pop
in
pop
setnp
fistpll
sub
jb
lds
push
ja
das
fiaddl
push
imul
jb
mov
sbb
xchg
sub
lods
popa
dec
imul
out
addr16
pop
fsubrs
dec
mov
mov
and
xor
cmpsb
and
inc
mov
push
xchg
mov
dec
add
add
aas
inc
inc
mov
cmpsb
mov
lods
cwtl
scas
inc
movsb
lock
xchg
int
stc
and
call
mov
xchg
xchg
push
sbb
jbe
adc
test
rorb
jne
jae
jo
sub
push
stc
das
sti
fcoms
cmpsb
dec
ljmp
inc
rolb
push
cmp
test
testb
lods
mov
dec
xchg
fsubs
mov
jo
out
add
jns
jecxz
cmp
cli
scas
jmp
repz
les
jg
jmp
dec
pop
push
pop
jmp
clc
les
fildl
iret
inc
jg
sbb
sbb
inc
inc
cwtl
pop
call
ret
jb
adc
adc
dec
inc
fwait
lods
sti
push
iret
mov
dec
cmp
add
mov
add
or
ljmp
push
inc
leave
push
inc
sub
in
or
jmp
outsb
insl
mov
data16
jb
mov
mov
sbb
and
mov
bswap
mov
divb
xchg
mov
dec
push
inc
pop
imul
push
mov
ds
inc
push
enter
add
inc
dec
mov
in
cmp
xorb
mov
cld
rclb
inc
or
adc
lds
pop
pop
push
lcall
push
cmp
std
jg
lcall
adc
add
stos
rorb
mov
inc
push
fxch
add
jle
xchg
cwtl
int3
mov
sahf
lods
ret
inc
fistpl
pop
sub
mov
clc
ret
or
loop
ret
mov
cmp
aaa
sti
dec
pop
or
cmp
imulb
sub
jmp
and
xor
sub
mov
lcallw
or
ficompl
sbbb
imul
subb
shrb
orb
push
packuswb
jecxz
push
shl
mov
sbb
in
popf
or
xchg
adc
inc
inc
xor
and
stos
fidivs
add
nop
xchg
mov
loop
popf
sbb
stos
cmc
scas
in
outsb
add
pop
nop
dec
add
jns
aam
test
jecxz
ja
pop
sbb
in
ret
fcmovb
aad
mov
es
cmp
mov
xorl
aaa
and
in
xor
iret
mov
mov
ss
ret
xchg
xchg
jbe
ja
jmp
pop
sbb
frstor
movb
insb
negl
in
or
lret
mov
nop
sub
je
push
xchg
jge
imul
sti
add
stc
mov
or
test
jle
in
subl
push
lods
in
mov
pop
scas
mov
inc
sti
mov
ss
push
ficoms
clc
or
add
push
sbb
xorl
xchg
sub
jns
fisttpl
call
or
mov
clc
inc
testl
scas
cmp
jmp
jo
mov
scas
insb
paddq
dec
lret
xor
cld
movb
fimull
sub
in
jb
pop
adc
xor
lahf
jge
adc
daa
add
fsubl
rcrb
cs
js
imul
sub
out
lcall
hlt
pop
xor
push
mov
pusha
jnp
repnz
icebp
pop
and
cld
or
cmp
push
out
bound
add
jnp
inc
aam
xchg
mov
aas
sub
mov
mov
lahf
in
data16
sahf
push
push
ljmp
and
inc
or
pop
loope
das
in
fxch
popf
xchg
pop
gs
push
mov
rol
jmp
and
sbb
sub
test
cmp
xchg
mov
cmp
aaa
jge
js
lock
leave
loope
xchg
out
ds
fists
loope
mov
dec
fstpl
add
sbb
cmp
dec
pop
repnz
mov
rorb
shll
xchg
scas
pop
adc
out
bound
pop
push
xlat
popa
pop
xor
leave
xchg
mov
push
xor
xchg
adc
xchg
out
aam
adc
xor
dec
iret
push
sub
jg
int
sbb
inc
ss
xor
adc
sub
inc
push
cmp
and
mov
imul
xchg
inc
pop
jle
push
jle
sub
pop
xor
xchg
mov
jns
mov
cld
jp
hlt
push
jnp
ljmp
xchg
dec
inc
daa
mov
and
sub
push
mov
push
adc
sbb
cs
in
dec
mov
push
cmp
fld
mov
xchg
adc
loop
out
rolb
test
push
sub
xchg
inc
repz
cmp
pop
push
out
hlt
mov
adc
fildll
xchg
mov
pop
fs
mov
pop
cmc
mov
add
jb
test
mov
cli
inc
add
enter
ror
dec
into
jb
sub
jge
test
cmp
aas
xorl
inc
xor
xchg
pop
and
je
adc
cmp
sub
sbb
scas
test
inc
in
and
stc
sub
jmp
sbb
insl
add
mov
and
cmpsl
ljmp
ffreep
mov
mov
loop
daa
inc
push
dec
repnz
test
and
cli
and
fcomps
dec
shrl
push
ds
movsb
sub
stos
jo
dec
ljmp
in
cmp
mov
inc
outsb
clc
popa
adc
fcomip
lret
and
rolb
pushf
push
pop
inc
lcall
or
pop
in
mov
sub
testb
lock
insl
xlat
mov
outsb
fs
fldcw
shrb
sbb
andl
scas
subl
inc
popa
les
popf
add
rcrb
push
adc
sbb
imul
repnz
stc
insb
jmp
repnz
outsl
call
dec
stos
mov
dec
xchg
jp
lret
jns
dec
mov
lcall
lods
mov
sub
aas
jl
out
fldt
pushf
push
gs
fs
fisubrl
or
in
dec
call
cmpsl
lods
rcrb
imul
outsb
push
sbb
cs
stos
lahf
jg
xchg
jb
into
adc
push
dec
adc
xor
test
mov
pop
jmp
dec
std
adc
pop
pop
sub
addr16
xor
add
imul
stc
xchg
cmpsl
jno
movsb
inc
dec
cmp
mov
adc
daa
mov
mov
addb
sbb
sbb
aam
xchg
icebp
lock
ficoms
inc
cmpsb
nop
lret
lods
inc
pushf
aaa
imul
repz
xchg
test
in
lahf
testb
xor
sarb
push
je
cmpb
mov
in
or
jmp
out
xor
xchg
sahf
nop
repz
cmpsl
hlt
out
mov
mov
cmp
lcall
nop
jp
cmp
ret
jbe
jl
scas
or
sbb
jbe
mov
outsb
dec
dec
xchg
mov
dec
pop
call
xor
lock
lcall
movsb
cmp
loop
loopne
sub
bound
fiadds
movsl
imul
jge
repz
dec
mov
jle
inc
add
ret
out
sub
inc
je
push
inc
sub
ror
mov
ds
xchg
mov
popf
xchg
dec
out
fs
sub
sub
xchg
cmp
and
sub
inc
pop
leave
popa
pop
addr16
push
mov
mov
push
fisttps
stos
or
dec
push
cld
xor
xchg
dec
xchg
xchg
outsl
push
movsl
imul
mov
jae
int
scas
mov
jae
scas
cmp
push
push
xor
outsb
cmc
ds
out
add
inc
mov
inc
clc
fsubs
sar
inc
pop
rorl
push
mov
lds
std
scas
mov
pushf
push
test
mov
adc
push
sbb
sbb
push
fnsave
sub
mov
sti
xlat
sbb
pop
int
stos
mov
sub
aam
sti
jecxz
cmp
or
push
push
jecxz
adc
les
cmpsl
xchg
mov
lcall
sahf
call
xor
cmpb
sbb
cmpsb
incb
cmp
lcall
add
fimuls
xchg
pop
push
jns
stc
dec
adc
xchg
imul
fbstp
push
pop
xchg
sahf
jno
ds
and
and
xlat
ljmp
stos
test
mov
pop
test
in
ds
imul
imul
sub
adc
loop
fistpl
ret
aaa
xchg
pop
push
popa
ljmp
inc
mov
push
dec
add
mov
push
nop
fimuls
mov
add
shlb
iret
stc
mov
push
add
clc
sub
arpl
pop
cli
clc
and
and
sbb
push
faddl
xor
or
pop
and
mov
pop
lret
and
mov
sub
inc
mov
lock
cmc
sub
negb
dec
push
add
mov
add
jp
mov
add
js
jbe
xor
shll
push
adc
not
or
jne
sti
mov
movsb
std
push
out
adc
inc
jl
mov
cmp
xor
inc
mov
loop
adc
stos
mov
dec
test
dec
xchg
dec
lock
push
rcrl
mov
sub
sbb
inc
insb
rcll
pop
inc
imul
and
cmp
xor
pop
mov
push
and
inc
out
mov
mov
int
aad
aas
sub
lds
add
pop
in
pop
out
xchg
addr16
inc
or
push
cmpsb
xchg
inc
or
mov
dec
ss
xor
xchg
inc
and
addr16
adc
lds
inc
cmp
sub
xchg
gs
data16
addl
add
xor
adc
into
push
jo
fiadds
push
lahf
jmp
sub
loope
jmp
pop
mov
push
imul
jecxz
or
mov
xor
aam
stos
insb
test
test
inc
fisttpll
inc
mov
fcmovne
mov
mov
cs
dec
pop
push
inc
inc
js
push
test
cmpsl
icebp
and
sbb
ftst
addr16
lahf
lcall
leave
cmp
inc
mov
mov
cmp
ljmp
xchg
rolb
loop
fcmovnu
mov
les
pop
jnp
fwait
mov
rorl
loope
icebp
pop
xor
sti
daa
jo
aam
inc
ljmp
hlt
ret
into
lcall
lods
dec
movsb
dec
fnstsw
cmp
mov
stos
or
loop
fldenv
sbb
mov
sub
adc
inc
adc
repnz
imul
push
pop
les
or
ljmp
jne
push
das
jb
ds
adc
pop
repz
bound
and
nop
pop
lcall
clc
cmp
ret
fsubs
daa
adc
lods
aad
adc
fcom
and
data16
in
outsl
or
cmp
xor
xchg
adc
in
and
aam
and
pusha
std
fsts
sti
pop
fldt
inc
std
je
cmpsl
imul
inc
mov
pop
jo
fwait
bound
push
xchg
pop
mov
call
mov
mov
add
fcmovbe
stc
dec
dec
lock
std
fwait
loope
push
adc
push
cmp
imul
xchg
cmp
lods
mov
push
fisttpl
sahf
inc
imul
ljmp
test
popa
and
and
push
lods
add
mov
push
pop
aam
push
shrb
dec
jbe
fsin
and
push
pop
das
push
into
aam
ljmp
and
push
stc
int3
pop
shlb
sub
mov
fsubr
dec
inc
sbb
dec
cmp
jecxz
test
cmpsl
shrb
popf
in
jne
shrl
mov
jnp
fwait
mov
xor
sahf
xor
mov
stos
inc
push
mov
enter
addr16
jns
mov
push
mov
sbb
or
mov
clc
jns
jbe
sahf
mov
vmovaps
mov
mov
pop
pop
push
repnz
xor
stos
add
cmp
nop
mov
cs
cmpsl
outsb
sub
push
push
cmp
mov
inc
movsl
inc
sbb
push
cmp
inc
lret
push
aad
das
xor
ja
aaa
shl
lret
bound
iret
gs
inc
test
adc
fstl
jle
xchg
xor
imul
adc
ficomps
mov
js
ljmp
nop
outsb
mov
dec
jae
ja
imul
cld
dec
or
adc
pop
jg
cmpsb
lods
popf
add
inc
mov
xlat
pop
fsts
outsb
add
mov
inc
sbb
stc
mov
add
les
inc
jbe
enter
addr16
ja
xchg
andl
cmp
neg
insb
lret
icebp
in
add
jbe
sbb
mov
sub
mov
xchg
es
movsl
mov
adc
test
jp
data16
loope
or
jns
lock
nop
inc
stc
jns
rolb
arpl
ds
leave
cmp
sub
stos
pop
cli
sarb
nop
fcmovnu
movaps
inc
mov
pop
adc
pop
cld
cmp
or
stos
fstl
dec
and
lcall
adc
and
mov
inc
jecxz
lds
xchg
pop
jecxz
xchg
or
mov
aad
xor
push
test
loop
scas
stos
daa
movsb
repz
add
mov
mov
jmp
jo
sbbl
cmovge
int
push
pop
add
push
xor
mov
xchg
lea
cmp
dec
sub
jb
or
out
xchg
pop
es
and
loop
dec
mov
dec
sti
call
fdivr
push
xlat
sub
or
jge
outsl
js
shlb
adc
dec
pusha
clc
push
dec
test
test
popf
int3
mov
aad
daa
add
imul
sti
cmp
inc
and
js
or
jbe
mov
addr16
mov
pop
fldt
push
addr16
ja
add
pop
jb
idivb
aaa
cmp
je
cmpsb
mov
mov
sub
jl
jle
test
pcmpgtb
hlt
mov
sbb
add
enter
rcrb
cltd
xchg
xchg
xor
pop
mov
jmp
lods
sub
jl
mov
mov
xor
xor
loop
aad
fisttpl
push
movsb
int
cmp
sti
xchg
testl
mov
scas
sbb
sub
icebp
mov
scas
xchg
mov
pop
hlt
jb
push
shrb
push
test
pop
testl
pop
fldl
mov
mov
les
add
je
pop
mov
and
xchg
push
inc
pop
mov
push
push
push
insl
mov
and
pop
sbb
in
outsl
push
hlt
sbb
dec
mov
out
xchg
sub
push
roll
lret
jl
dec
shrb
add
push
out
dec
inc
ret
xor
adc
mov
div
out
inc
out
je
sbb
loope
in
inc
mov
or
xchg
ja
pop
dec
movsb
xor
mov
adc
dec
pop
and
lock
testb
inc
mov
ljmp
aam
repz
loop
repz
arpl
mov
add
and
test
xor
shlb
adc
cli
xor
out
sti
dec
mov
fistpl
mov
or
push
mov
fucomi
mov
mov
jle
mov
pop
mov
insl
dec
call
scas
and
aam
or
dec
xchg
movb
in
and
cmp
pop
ret
leave
fistpll
fisubrs
lcall
adc
ja
xchg
xor
push
and
scas
push
xchg
dec
sub
dec
sahf
xor
lcall
lret
das
mov
pop
mov
insb
pop
arpl
sub
shr
cmpsl
mov
add
jge
or
dec
push
mov
addb
std
sahf
xor
stos
outsb
sbb
test
data16
popf
imul
sbb
sub
lods
popa
xchg
daa
sbb
outsw
pop
mov
inc
inc
pop
jmp
push
inc
filds
and
mov
jge
int
ss
decb
or
mov
xorl
shl
adc
mov
pop
and
out
shrl
pop
negl
mov
ret
int
in
test
mov
testl
jp
js
add
aaa
leave
xchg
loopne
fsubs
add
pop
repz
mov
pop
pop
dec
or
popa
int
call
mov
sbb
iret
into
out
mov
lcall
mov
lea
and
push
imul
pop
sahf
scas
cmp
inc
aaa
cld
mov
out
mov
fldenv
mov
xchg
inc
pop
in
mov
movsb
jle
cmpsb
jno
and
mov
or
rorl
mov
mov
int
add
jmp
testl
pop
imul
repz
movsl
xor
repz
sub
addr16
push
xor
stos
push
ja
xchg
popf
adc
loopne
sbb
xchg
jmp
xchg
ret
mov
mov
test
mov
loope
mov
mov
xor
popa
and
loopne
mov
cmpsb
mov
sti
cmpsl
cmc
pop
fs
stos
das
ds
push
mov
aad
sub
popf
mov
cmp
jne
dec
sub
jo
rolb
sbb
mov
add
sahf
pusha
inc
dec
iret
pop
cmp
hlt
in
lret
push
fcomip
add
fmuls
cmp
lods
or
add
test
and
sub
flds
popf
and
movsb
iret
mov
dec
mov
push
xor
je
stos
into
mov
in
xor
cmpsl
cmpsb
xor
mov
int
test
adcl
mov
test
jno
inc
stos
aam
icebp
cld
and
xlat
mov
icebp
mov
fnstcw
cmp
and
add
outsl
push
adc
ss
enter
sbb
hlt
jl
xor
inc
mov
or
mov
xchg
out
scas
sbb
imul
jp
aad
sahf
sti
sbb
or
test
xchg
or
lods
dec
or
out
xorb
push
movsb
mov
add
arpl
ret
pusha
jge
cmp
mov
shrb
filds
mov
lret
fdivrl
das
lods
lcall
inc
mov
nop
inc
xchg
pushf
loop
insl
das
or
sbb
cmp
cmp
xchg
inc
jge
nop
xor
add
sub
or
xor
xor
sub
mov
rclb
cld
fisubrs
dec
cli
cmp
popf
xchg
xchg
lahf
jecxz
xchg
fiaddl
pop
lds
or
and
test
xchg
clc
out
inc
inc
fistl
shll
add
sahf
xor
das
and
shrb
mov
bound
loopne
mov
sub
adc
mov
test
out
outsl
mulb
cli
jp
addr16
xor
xor
int3
sti
cmc
insb
int3
roll
loope
dec
push
xabort
loopne
mov
add
sbb
and
jmp
jbe
mov
dec
dec
mov
mov
shl
insl
movsb
adc
ljmp
push
jb
mov
fsubs
or
push
cmp
cmp
insl
fdivrs
test
sub
rcr
pop
icebp
scas
xor
push
stc
jg
cmc
inc
scas
lods
and
mov
addb
int3
mov
adc
movsl
fadd
pop
xchg
push
es
mov
mov
insl
pop
mov
xor
or
or
jg
adc
insb
mov
flds
int3
insb
lret
lods
jbe
fisttpll
sbb
insl
cmpsl
push
adc
pop
insl
mov
ret
mov
fwait
and
das
aam
xchg
pop
mov
mov
lret
aam
push
mov
sub
out
cmp
sbb
test
lock
enter
push
cmp
lcall
cwtl
xrelease
mov
add
insl
lods
xor
pop
or
int
inc
mov
in
mov
cli
sti
loope
pop
aad
clc
lret
pusha
xchg
addr16
jo
es
call
fs
xchg
dec
in
test
sahf
cmpsl
gs
push
pop
and
push
mov
and
arpl
testl
mov
push
loope
scas
out
lret
pop
popl
mov
shrb
sub
add
dec
in
mov
mov
push
inc
std
lret
inc
cmp
outsb
cmp
xchg
pop
aaa
push
push
loope
jbe
outsb
and
push
mov
imul
adcl
rolb
sub
lret
lods
sar
rorb
sub
mov
or
and
repnz
call
and
adc
cmp
jg
mov
popa
mov
pop
xchg
jo
fwait
les
add
subb
lea
lret
in
xor
mov
repnz
fincstp
dec
mov
xor
pop
mov
nop
cwtl
inc
fdivrs
incl
enter
aam
xchg
xor
mov
ja
pop
addr16
popl
sub
inc
cmp
fwait
pusha
mov
pop
cmp
xchg
xchg
mov
xchg
out
pusha
cmpsl
dec
mov
dec
insl
and
jecxz
sbb
insl
adc
sbb
aad
jecxz
mov
mov
cmp
mov
xor
in
fwait
xor
test
and
lods
fldt
adc
insb
imul
inc
and
lock
or
xor
clc
pop
pushf
adc
test
pop
loop
ficoms
repz
xchg
xor
xchg
or
imul
fistps
out
clc
cmc
rcrb
jle
inc
sub
mov
movsl
and
and
sbb
js
pop
cmp
in
xchg
mov
scas
mov
jno
pushf
dec
mov
adc
loop
dec
ret
cmpb
in
std
outsb
jbe
clc
push
pop
std
mov
sub
ss
dec
adc
sub
leave
sbb
fisubs
push
jge
fwait
inc
or
rorb
das
or
add
push
loop
push
xchg
push
call
test
inc
ja
push
dec
mov
ret
dec
repnz
std
cmp
mov
xlat
repz
mov
add
enter
xchg
push
out
es
pop
in
mov
cmp
jge
xchg
sub
scas
adc
call
leave
loopne
pop
inc
fcmovu
lock
decb
dec
int
sub
cmp
rcrl
lock
es
test
xor
dec
xor
jae
fldl
cltd
jae
cmp
mov
fs
outsb
ret
pop
mov
xor
lret
add
jne
mov
jge
or
mov
pop
mov
insb
pop
scas
mov
popf
cmc
inc
xor
mov
ljmp
pop
dec
cmp
xchg
jl
cmpsl
and
mov
repz
addr16
popa
lret
lret
adc
loope
outsb
fisubrl
mov
sub
mov
decb
sub
add
std
sub
mov
cwtl
mov
orb
pop
test
popa
lret
sbb
inc
jge
lods
adc
jp
shrb
rcrb
sti
mov
pop
jl
fidivl
fisttps
pusha
mov
sub
stos
jns
adc
aas
push
jmp
sub
sub
lods
pop
mov
cmp
push
pop
les
lea
fiaddl
sub
mov
in
jp
xchg
xchg
fsubrl
out
pop
shrl
in
mov
ljmp
mov
sbb
mov
test
addr16
outsl
and
cmpsl
inc
fsubs
int3
and
adc
gs
orb
or
jbe
pushf
xchg
fs
vdivsd
inc
jmp
fistpll
xor
adc
std
fs
int3
mov
cmp
arpl
and
inc
xchg
sub
push
add
cmp
lods
int3
sbb
and
ror
adc
loop
jmp
sub
dec
call
cmpsb
mov
cwtl
icebp
cs
stos
add
jle
or
sahf
dec
lcall
mov
and
or
mov
lock
mov
nop
dec
adc
fs
adc
adc
lods
pusha
rcrl
mov
push
xor
lret
add
pop
hlt
jg
inc
ret
cmp
xchg
fcomp
sbb
shr
dec
imull
lahf
ret
lea
mov
inc
dec
cwtl
movsb
cmp
mov
or
add
insb
scas
dec
fists
push
cltd
adc
dec
cmp
enter
sar
aas
enter
outsb
add
test
ja
xor
leave
mov
nop
in
dec
jb
roll
adc
cmc
jl
push
sahf
cmp
xchg
push
in
roll
dec
sbb
pop
sbb
inc
pop
xor
dec
in
xchg
outsb
icebp
jecxz
sbb
xchg
jmp
sti
je
push
sub
out
jno
xchg
daa
and
and
pop
fcoms
iret
daa
leave
xor
sti
sbb
xchg
outsl
mov
mov
repz
jne
add
add
lods
pop
cmp
out
pop
fstl
xchg
adc
shrd
hlt
push
push
jecxz
and
mov
xchg
test
jmp
cmp
js
cmp
push
mov
inc
xor
cld
jo
clc
push
sub
leave
pop
mov
or
fisubrl
nop
push
sub
jnp
adc
cmp
mov
jmp
xchg
orl
fcomp
daa
jne
lcall
aam
bound
stos
icebp
sub
icebp
lock
jb
push
les
jp
jbe
lods
push
fisttps
push
jno
scas
or
popa
or
xor
add
push
cmp
mov
inc
dec
cmpsb
es
xchg
das
les
add
cmp
push
jae
fwait
inc
jecxz
sub
jp
mov
jae
movb
mov
outsb
addr16
das
inc
fimuls
add
or
xchg
push
adc
in
fdivrl
cmp
sti
and
dec
arpl
out
cmpsb
xor
sbb
pop
and
cld
pop
push
loopne
xchg
pop
sub
and
xchg
aad
xor
or
inc
js
inc
adc
mov
lahf
push
cltd
cmp
jmp
data16
icebp
push
mov
push
clc
xchg
clc
fdivrs
sbb
stc
adc
insl
fisubs
daa
sub
jge
pop
sbb
jno
daa
scas
call
dec
lret
sbb
fstl
mov
insl
or
push
clc
je
mov
mov
inc
jge
push
std
andl
inc
test
mov
and
jns
pop
lret
mov
pop
pop
jno
addr16
inc
cmp
iret
mov
ljmp
jbe
lds
add
andl
jns
xor
insl
icebp
gs
inc
and
and
js
sahf
xchg
mov
add
push
xchg
push
inc
clc
lret
lret
cs
inc
xchg
je
mov
ret
ret
aam
pushf
cmp
loop,pn
ljmp
mov
dec
sete
repnz
test
das
mov
scas
repnz
push
add
sahf
scas
and
mov
mov
dec
inc
add
xlat
nop
pop
enter
test
subb
fyl2x
into
adc
and
lods
ds
arpl
sbb
jmp
repnz
mov
out
adc
lods
out
jo
and
sub
insb
ss
data16
aad
xor
lea
popa
pusha
xchg
cli
lea
stc
nop
aad
pop
sbb
push
jg
pop
or
dec
jnp
inc
aaa
xchg
loopne
push
mov
push
sahf
mov
adc
mov
inc
mov
push
push
movsl
clc
out
inc
cmp
and
xchg
jb
pop
lret
jp
call
fildl
scas
lahf
adc
popl
andl
clc
push
std
pusha
inc
pop
and
and
mov
mov
fisubs
push
rclb
int
adc
pop
aaa
sbb
dec
cmp
sbb
mov
add
cmp
pop
ror
inc
fimull
fnsave
xchg
pop
and
mov
dec
fisttps
add
in
loopne
push
fisubs
iret
inc
or
lret
dec
in
hlt
jae
jno
pop
gs
clc
aaa
idivb
cmp
clc
and
roll
shll
fimull
syscall
lods
stos
psadbw
mov
mov
inc
or
mov
xlat
dec
insl
pop
mov
daa
xor
mov
out
jecxz
mov
adc
jnp
mov
sbb
lea
int3
fiadds
imul
xchg
pop
pop
jg
or
sti
or
aam
inc
mov
fisubrs
in
push
int3
fnstcw
imull
bound
lock
es
or
hlt
sti
push
pop
imul
ds
je
fdivl
jns
mov
or
repnz
enter
cmp
sti
loop
ret
testl
mov
push
jo
sahf
xchg
xor
push
mov
sbb
or
inc
push
daa
int3
pop
std
lea
cmpb
ja
xchg
shlb
or
jmp
push
test
movsb
sbb
std
dec
pop
add
fstpt
out
loope
aaa
call
addl
sahf
push
popf
xor
aam
jp
ret
xor
inc
rorb
inc
scas
or
pop
xchg
mov
lds
pop
or
dec
jecxz
mov
lret
hlt
fdivrl
push
or
inc
xchg
nop
cwtl
sbb
sub
cli
inc
cmp
dec
jns
sbb
lods
and
in
and
nop
je
mov
add
pop
cmp
jmp
sbb
pop
loop
ficoms
cmc
mov
sarb
jae
cmpsl
mov
adc
fistl
mov
and
fcoml
jbe
fadds
popf
outsl
mov
test
pop
xor
aam
jge
add
test
xchg
aas
mov
push
mov
out
inc
fdivrs
mov
adc
dec
inc
insb
inc
cld
test
fildl
sti
or
push
imulb
mov
test
int3
insl
jp
mov
scas
mov
pop
inc
call
cli
adc
sub
std
popa
mov
cmpsl
cmpsl
bound
dec
popl
repz
mov
clc
pushf
or
push
popf
out
adc
popa
cmp
lcall
xor
add
in
call
fnstenv
mov
movsl
icebp
clc
scas
cmp
and
jge
stos
dec
sbb
sub
popa
xor
inc
sti
fs
maskmovq
pop
dec
cli
sbb
iret
cli
rolb
cmp
lock
add
xchg
cmc
cmpsb
adc
and
call
lahf
cwtl
testb
lods
or
push
mov
sbb
lcall
sbb
insl
enter
gs
inc
mov
jmp
xor
lock
pop
mov
xchg
aad
add
sti
divb
aaa
push
lret
popf
packssdw
lds
pop
dec
cmp
addr16
xchg
shll
or
jmp
shll
xchg
test
push
inc
lods
loope
lods
sbb
fbstp
pushf
mov
insl
inc
lcall
fmuls
jne
jb
and
sub
movl
data16
push
pop
push
cltd
mov
in
mov
mov
jg
adc
outsl
loopne
int3
xor
pop
add
push
es
hlt
fnstcw
outsb
mov
repz
int3
rcll
xor
jg
test
movsl
mull
push
dec
in
jge
inc
dec
pusha
sub
or
mov
sbb
jmp
pop
ss
ret
push
xorl
ficoml
cmp
lods
test
and
insl
std
mov
into
mov
sbb
loop
mov
jp
test
roll
sbb
mov
mov
jo
mov
aas
hlt
mov
daa
ret
cmpsl
pop
cltd
cltd
cmc
mov
and
cmpsl
pop
cmc
call
push
xchg
pop
popa
jp
mov
cmc
int
mov
sub
and
aad
inc
test
sub
dec
dec
cmpsl
xor
lds
and
mov
inc
cmp
out
mov
inc
test
aaa
lret
mov
and
pop
shll
nop
push
ds
adc
fwait
inc
imul
loopne
imul
mov
daa
jl
cmp
mov
or
cmpsb
or
je
cmp
or
mov
and
nop
das
mov
xlat
insl
sbb
jno
test
ret
inc
cld
ljmp
in
push
push
and
out
in
outsb
and
xor
jmp
movsb
ror
jcxz
lods
xchg
inc
push
or
inc
mov
lahf
inc
adcl
push
xchg
lret
xchg
int
lods
jae
xchg
pop
stos
push
loop
int3
pop
xlat
jmp
mov
pop
pop
outsb
shl
gs
dec
test
insb
les
aaa
insl
bound
xor
sti
push
popa
ret
adc
inc
int
sar
imul
lcall
sub
std
mov
insb
and
out
ja
pusha
mov
popf
rcrb
inc
mov
stc
jae
mov
jnp
push
add
xchg
out
push
or
mov
jns
aad
shlb
sub
movsl
sbb
xor
jae
mov
sbb
xchg
xlat
and
rorb
fisttpl
in
es
scas
sbb
cmc
sbbl
loopne
mov
and
push
or
xor
jae
and
mov
repz
pop
enter
scas
pushf
pop
jmp
lods
rorl
and
add
aaa
pop
jmp
jl
inc
jb
add
xor
gs
jne
jbe
mov
pop
popl
aaa
mov
imul
xchg
dec
in
cmp
jle
pop
cwtl
lea
and
push
or
test
ret
push
insb
dec
repnz
data16
fistl
lahf
push
adc
stos
mov
into
mov
shrb
xchg
data16
cld
cmp
adc
aas
fwait
inc
inc
mov
jl
insl
in
cwtl
ss
mov
dec
out
iret
xlat
xchg
sub
mov
mov
dec
xchg
sub
movsb
inc
les
call
or
lock
movsl
sarl
pop
jae
lods
xor
xor
ret
dec
out
aas
cmp
shrl
popa
mov
in
or
dec
stc
sub
lock
lahf
jecxz
mov
stc
fstpl
inc
fisttpl
fisttpl
lods
cmp
sub
mov
sbb
add
pop
cs
ja
or
mov
sub
sbb
out
xor
push
mov
mov
dec
test
aas
pop
scas
ljmp
sbb
xchg
shrl
pop
sub
lock
jb
fwait
bound
lea
cltd
movsl
inc
push
and
xchg
jp
xchg
inc
lea
loope
cmpsb
and
dec
mov
sbb
xor
sahf
fists
cmpsb
out
sub
and
icebp
out
shrl
negl
jbe
lea
mov
ret
enter
pop
subb
add
adc
xchg
cs
mov
xchg
test
cvtpi2ps
lea
dec
repnz
push
sarb
lret
add
cmp
jnp
daa
mov
out
inc
addr16
dec
cmp
sbb
adc
inc
sahf
sbb
or
jecxz
mov
jmp
insb
push
push
push
mov
xchg
lock
andb
lahf
unpcklps
dec
pop
pop
setp
jl
in
lds
mov
cmp
adc
test
int
enter
or
push
mov
lock
scas
pop
cltd
ja
ljmp
cmp
push
insl
out
cli
sahf
stos
shlb
xchg
ljmp
and
inc
loopne
sti
and
lods
xorb
ret
push
loopne
push
jae
mov
sahf
jbe
sbb
call
pop
sysexit
cmp
pop
mulb
sahf
mov
cmp
pop
sarl
or
shrl
cwtl
sbb
lret
aas
xlat
adc
nop
cmc
test
outsb
and
enter
adc
inc
xor
dec
loopne
mov
cld
adc
inc
fidivrs
or
sub
add
or
into
jge
mov
xor
xchg
shlb
or
iret
jp
sub
stc
pop
inc
mov
adcl
push
std
xor
push
clc
popf
sub
dec
stos
nop
jl
pop
sbb
sbb
ret
mov
xchg
js
daa
mov
or
xor
ds
and
in
mov
jo
outsb
mov
pop
cmp
adc
xor
xlat
mov
jg
pop
sbb
fisttpl
rolb
jmp
jmp
mov
pop
add
adcl
push
nop
push
sub
mov
jae
fists
xor
xchg
jecxz
jle
pop
inc
xor
shlb
into
rcr
or
adc
sarb
mov
bound
mov
out
cmpb
or
mov
inc
lea
xchg
cwtl
mov
mov
outsb
add
jae
jns
add
adc
mov
jl
enter
pop
aam
ljmp
clc
aaa
mov
imul
xchg
ja
push
sbb
and
jbe
pop
xor
insl
mov
cltd
mov
into
addb
mov
lds
inc
and
lods
jl
repnz
sahf
call
mov
adc
rolb
ret
inc
ljmp
lea
xchg
xchg
ret
pop
xchg
push
pop
jl
outsl
in
dec
imul
out
fdivr
out
mov
push
pop
mov
dec
mov
pop
jp
loop
inc
fisttpll
imul
cmpsl
inc
sbb
mov
xor
sbb
jp
add
cwtl
xorl
nop
lahf
xlat
int3
ret
aaa
cmp
xor
lea
or
fnstenv
fidivs
mov
dec
inc
and
imul
in
sub
and
sbb
mov
push
outsl
gs
scas
scas
fidivs
mov
push
insb
lock
or
push
mov
aad
je
adc
inc
jns
jg
add
jno
rolb
cli
xchg
dec
adc
jnp
nop
movsl
test
mov
jecxz
stos
mov
fsub
mov
xchg
mov
aad
xchg
outsl
gs
mov
sub
push
orb
popf
push
xor
jecxz
pushf
pop
jle,pn
mov
jo
mov
cld
lret
aad
enter
and
push
in
push
pop
dec
add
pop
or
jecxz
repnz
int3
ret
cmp
add
cmp
fistpll
add
test
cld
fnstsw
stos
adc
mov
nop
popa
jg
stos
xchg
mov
jp
cmp
out
pop
xor
into
repz
mov
cmp
addr16
add
cli
ja
mov
sub
jmp
mov
push
bnd
or
jmp
xor
jge
ds
stos
sahf
inc
aad
pop
add
adc
xchg
mov
xor
ja
cmp
mov
arpl
adc
or
lock
hlt
mov
mov
mov
aas
mov
inc
cmpsl
pop
cmp
xchg
adc
popa
es
xor
push
orb
cmpl
lret
repz
adc
mov
push
ss
or
enter
cmpsb
xchg
xchg
mov
add
sbb
loop
addb
xchg
sbb
arpl
cmpl
outsl
cmp
fs
pop
xchg
mov
jb
cmp
mov
inc
mov
mov
in
or
jp
outsb
xchg
mov
add
ror
xor
test
inc
jno
add
sbb
imul
add
orl
iret
pop
dec
xor
or
dec
xor
sbb
cmp
push
pop
shr
or
push
lcall
add
cld
push
adc
in
enter
or
mov
insl
int
xchg
xchg
out
mov
xor
inc
es
ljmp
cli
mov
cwtl
push
sub
ljmp
add
push
xlat
push
mov
sub
add
aam
mov
cmp
inc
popf
xor
adc
xlat
hlt
adc
pop
pop
sub
jns
mov
stc
ds
xchg
cs
in
add
xchg
sti
xor
pop
out
lahf
and
jb
lock
and
cmp
pop
lods
mov
jle
dec
dec
notb
shlb
in
xchg
xchg
insb
loop
push
add
movsl
shl
mov
jmp
push
insl
adc
out
mulb
idivl
add
loopne
xor
jne
mov
fwait
arpl
insb
mov
pop
call
pop
cmp
xor
fstps
stos
cmc
inc
jmp
adc
push
shlb
and
lock
mov
outsb
popa
mov
aad
shrb
adcb
push
leave
adc
arpl
imul
and
xchg
fsub
pusha
aad
lahf
xchg
mov
lahf
loopne
scas
and
jbe
and
xor
mov
or
fsubs
push
idivb
sbbb
mov
mov
loop
or
adc
rorb
push
sub
jne
outsb
stos
hlt
push
and
inc
xchg
jecxz
push
xor
pushf
test
test
cmc
sub
imul
ja
mov
data16
and
ja
pop
mov
in
lods
popf
nop
fsubs
jp
test
je
dec
jp
iret
mul
mov
fidivl
subl
pushf
std
decl
push
push
jbe
je
sub
mov
mov
adc
push
jb
mov
mov
cmp
xchg
pop
sub
mov
or
xor
jae
adc
mov
sbb
jp
aaa
mov
ljmp
out
adc
jge
dec
cwtl
loopne
pop
sbb
sahf
push
aaa
sub
imulb
add
fucom
sub
lret
mov
xchg
sub
daa
icebp
mov
fistps
jns
js
dec
jno
repz
pop
or
nop
fldl
xchg
stos
orb
pop
cmc
mov
pop
mov
pop
pop
jl
push
adc
mov
dec
bound
xor
xchg
scas
shr
dec
lret
cmpsl
or
mov
push
jl
dec
icebp
push
pop
je
cmp
mov
mov
sahf
stc
dec
lds
ds
sub
pop
inc
cmp
ret
mov
add
das
pop
fcompl
lea
jbe
add
mov
inc
mov
movsl
mov
sbb
cmp
int
xchg
dec
pop
cmp
push
cltd
inc
je
ja
xchg
or
mov
scas
inc
idiv
sub
in
cmp
cs
add
scas
inc
je
aad
cltd
outsb
shl
ss
fs
mov
nop
fisubl
sub
xchg
icebp
repz
push
testb
dec
fistpll
lret
cwtl
aas
daa
fisubrs
mov
test
sarb
jo
iret
insl
les
push
pop
fwait
dec
add
xor
jbe
call
xchg
fiaddl
gs
xchg
cmp
out
imul
fucomip
inc
jmp
or
loopne
cmp
je
adc
and
bound
inc
jle
das
mov
sub
adc
es
fnsave
mov
xor
ret
dec
xchg
lret
jp
mov
arpl
icebp
inc
dec
sbb
mov
mov
pop
xchg
jno
or
inc
cmp
dec
inc
xchg
mov
unpcklps
jl
bound
lret
icebp
fwait
push
movsl
sub
stos
and
daa
jp
cwtl
int
and
xor
ds
test
mov
xorb
outsl
std
xor
filds
mov
fwait
push
std
ret
dec
mov
mov
movsb
push
adc
lret
sbb
or
push
jge
mov
outsb
shlb
pop
pop
sbb
inc
ja
push
mov
mov
jbe
xlat
adc
fstpt
aam
insl
jne
mov
sbb
mov
lods
sbb
adcl
nop
cmp
mov
iret
or
aam
cmpsb
pusha
pop
cmp
pop
arpl
cmp
push
cmp
sub
jns
testl
jmp
sbb
mov
xchg
into
cwtl
xor
cmp
shrb
fwait
sbb
aam
pop
es
push
jp
mov
orl
je
and
xchg
and
shrl
dec
dec
push
sub
jae
dec
fnstsw
in
pop
fs
into
jge
idivl
test
pop
cmp
pop
test
in
ja
lea
aaa
inc
in
shl
divl
cmc
inc
jns,pn
popf
add
les
gs
dec
addl
jno
notb
pop
test
lods
xor
jmp
jne
lret
jecxz
mov
dec
push
loope
loopne
sub
xchg
mov
popf
or
cld
loope
ret
pop
push
outsl
outsl
inc
test
addr16
xchg
shrl
inc
xchg
scas
lahf
sbb
inc
andl
pop
fmuls
loop
push
lret
pop
cmp
sbb
inc
dec
xchg
lock
loop
outsb
fists
mov
xlat
sbb
dec
cwtl
sub
xor
jp
loop
movsb
add
push
or
cwtl
mov
adc
xchg
pop
xchg
dec
and
aad
mov
cmp
lock
cmp
jno
pop
inc
test
or
cs
inc
out
popf
push
cli
dec
xor
mov
outsl
imul
inc
test
insl
xor
sbb
xchg
pop
mov
inc
sahf
cmp
les
or
pop
repz
lret
ss
call
or
and
pop
js
pop
sbb
and
lea
sbb
repnz
sub
icebp
inc
imulb
xchg
cmp
popf
movsb
icebp
imul
movsb
test
sub
sbb
sub
addr16
mov
sub
sahf
outsl
mov
push
inc
lds
movsb
xchg
mov
clc
fucomi
and
xor
mov
push
cmp
fucomp
idivl
jmp
ret
inc
fs
add
cli
imul
sub
outsb
jnp
push
insl
push
cmpsl
add
out
sbb
fmull
outsb
adc
jp
push
addr16
lret
and
cltd
xchg
dec
pop
insl
fnstenv
in
in
push
push
ss
mov
test
sbb
out
and
ds
push
dec
popa
shll
aaa
dec
push
inc
add
mov
pop
mov
pop
ret
mov
push
ret
test
inc
jb
fs
cmpsl
push
jae
cmpsb
mov
mov
ret
test
outsb
jl
xlat
nop
jbe
lahf
int
cmpsb
sbb
in
arpl
pop
out
gs
push
and
incb
xchg
mov
scas
add
int
fists
add
cld
jo
popf
push
adc
or
fs
push
pop
out
orb
cmpsb
inc
pusha
repz
ss
iret
pop
and
mov
add
daa
xchg
inc
enter
fistl
jno
ljmp
or
push
outsl
das
fisttps
or
mov
and
mov
call
sbb
ds
or
test
add
movsl
mov
shl
fwait
out
pop
mov
pmulhuw
data16
stos
dec
repnz
adc
jl
roll
loop
sbb
scas
jo
pop
cmpl
stos
mov
movb
into
test
xchg
sub
and
subl
mov
or
testb
cmc
cmp
lret
push
inc
cwtl
mov
mov
mov
ljmp
or
or
xor
loopne
mov
dec
jmp
inc
outsl
xchg
cs
je
shlb
jmp
ficomps
lea
xchg
ljmp
fildl
mov
cwtl
nop
sbb
imul
adc
cmpsb
fldcw
xchg
test
inc
and
mov
gs
xor
addr16
adc
xchg
dec
mov
and
vxorpd
mov
call
lea
sub
jp
add
scas
int
jb
test
notb
cmp
hlt
sbb
dec
jno
ss
jae
stos
inc
lret
loopne
mov
popa
and
fsubs
dec
and
and
call
or
pop
pop
mov
mov
or
cmp
xchg
xchg
and
stos
lock
addb
xchg
loop
mov
cmp
or
repz
stc
in
adc
repnz
mov
mov
mov
mov
xor
jl
push
xchg
mov
cmpb
mov
ficoml
test
dec
imulb
mov
cmc
fs
shll
and
push
mov
jo
sbb
push
out
push
std
dec
out
rcl
call
lods
imul
jge
mov
or
addr16
dec
out
addr16
xchg
pop
loopne,pt
repz
ret
jl
cs
stos
js
cmp
mov
mov
in
sahf
jno
dec
popa
test
dec
aaa
pop
or
jbe
jle
outsl
xchg
xor
cmp
movsb
insb
or
js
mov
rcll
mov
mov
cwtl
and
repnz
inc
xor
cmpsb
or
dec
xor
add
lea
xor
orl
pop
jns
mov
cmp
shrb
cmp
rol
add
inc
mov
xchg
lods
mov
inc
add
mov
lods
imul
in
xchg
movsb
cmp
pushf
and
repnz
inc
in
mov
cmp
push
cmp
popf
pop
mov
aas
popa
pop
xchg
in
and
mov
outsb
aaa
jmp
repnz
adc
mov
scas
adc
xor
cmp
mov
dec
inc
push
push
xor
enter
cltd
adc
mov
mov
mov
sub
push
mov
xor
mov
shl
clc
mov
lcall
repnz
mov
gs
cmc
push
mov
shl
stos
pop
pop
inc
push
mov
in
sbb
test
flds
push
dec
bound
mov
insl
ds
repnz
fists
adc
incb
mov
addb
fnstsw
add
je
sub
mov
sbb
leave
pop
and
cmp
pop
lret
into
ss
mov
fwait
ret
sbb
pop
add
xchg
sub
xorl
sbb
pop
fwait
sub
insl
mov
loopne
xor
push
popa
jno
or
or
inc
icebp
std
mov
lcall
in
outsb
push
icebp
mov
xchg
rorl
jo
push
add
jbe
xchg
cmp
dec
push
addr16
pop
in
loopne
cwtl
loopne
mov
aas
add
nop
fwait
hlt
xchg
in
cs
xchg
jb
rclb
out
lods
push
cmp
cli
lea
lret
out
push
test
jnp
imul
cmp
jmp
sbb
pop
sub
push
mov
add
in
or
add
pusha
dec
sarl
push
icebp
int3
popf
fwait
mov
ja
inc
js
mov
dec
mov
lea
xchg
pop
repnz
adc
imul
outsb
pop
xchg
int
dec
cltd
xor
jg
sti
or
xlat
popf
fs
sbb
mov
or
popa
push
stos
bound
out
or
xadd
lods
cmpsb
or
push
push
and
or
mov
gs
insb
cs
xchg
shll
out
cli
flds
and
ret
sub
decb
jmp
cmp
loope
sahf
jne
test
loopne
mov
lcall
add
pop
jno
or
mov
mov
xchg
je
stc
stc
out
cmpsl
in
cmpsl
or
dec
imul
mov
add
sbb
add
stc
sbb
adc
mov
jl
test
cmp
inc
adc
leave
idivb
bound
mov
data16
xor
and
daa
in
inc
xor
mov
or
mov
psrad
cld
jns
mov
sub
shr
fcomip
in
lock
add
mov
andl
stos
shll
dec
sbb
xchg
enter
jnp
push
cmp
pop
dec
adc
pop
insb
data16
mov
inc
outsb
lret
ja
je
xchg
cmp
xchg
xchg
cmp
movsl
bound
pop
out
add
mov
jo
adc
mov
ds
inc
cmp
and
xchg
int
sarb
roll
pop
call
jg
jge
imul
or
lods
and
jmp
aas
movsb
add
push
faddp
pop
sub
scas
mov
fildl
popl
mov
mulb
pop
lcall
dec
dec
and
mov
push
pop
aaa
loope
imul
roll
jmp
cmp
sarb
rcrl
push
inc
xchg
mov
fldenv
test
xchg
movsb
xchg
inc
rclb
mov
jl
cmp
ljmp
sti
xor
lcall
jmp
jb
fiaddl
mov
ss
push
jge
sar
ja,pt
mov
or
stos
push
andb
aad
into
lock
add
shl
mov
call
mov
xchg
sbb
xor
cmpsb
scas
into
jp
enter
rolb
bound
dec
push
adc
popf
mov
xor
dec
insb
jae
jle
mov
ret
aas
je
push
aad
lret
pop
xchg
scas
sbb
jp
out
mov
test
mov
inc
mov
xchg
cmp
sti
fcoms
add
rorb
pop
xchg
les
cld
cmp
or
xchg
xor
adc
add
lahf
stos
pop
dec
xlat
mov
ret
in
stos
repz
pop
les
dec
into
xlat
mov
jmp
mov
out
je
jp
mov
hlt
mov
add
jb
daa
ja
and
fucomi
call
addr16
insb
test
or
adc
inc
sbb
pusha
xchg
pop
mov
clc
adc
and
or
dec
inc
or
pop
call
icebp
fildl
repnz
test
jb
sbbl
and
pop
out
pop
pop
daa
and
sub
aam
push
lahf
inc
stos
cmp
lcall
aas
bound
or
cmp
inc
pop
jns
shrl
outsb
xlat
lods
jbe
jl
shll
add
insb
in
push
xlat
sbb
jge
pop
in
lock
push
add
mov
mov
pop
cmp
mov
loopne
fisubl
jno
push
and
pusha
pusha
jnp
dec
push
in
mov
cld
inc
dec
sub
roll
inc
js
jp
push
aad
cmp
ja
push
jg
data16
jb
adc
stos
ja
push
std
clc
adc
stos
inc
pop
stos
test
pop
iret
notl
and
add
ja
and
repnz
dec
mov
jb
lahf
lods
adc
sbb
push
mov
clc
paddsw
out
mov
popf
sbb
movsb
in
in
mov
ret
mov
dec
jbe
add
sub
jp
jae
mov
xor
jae
ret
lods
pop
pop
sbb
dec
mov
xor
dec
mov
iret
adc
push
enter
push
pop
or
dec
std
fldln2
cmp
mov
adc
xor
das
cmp
idivl
xor
aas
sub
fcoml
sub
mov
sbb
or
cmp
gs
add
std
push
ja
out
xchg
pop
cmp
xchg
sub
pop
in
jmp
movsb
mov
push
popa
and
sysexit
inc
adc
lock
mov
xchg
inc
sti
sub
sbb
repnz
xchg
push
ljmp
iret
jb
fdivrs
cmp
in
xchg
mov
inc
sub
pop
enter
and
sbb
sbb
xchg
rcl
jne
es
insb
lcall
push
cmp
mov
pop
cmp
inc
ja
push
jo
and
and
lahf
loope
push
pushf
hlt
leave
and
cmp
mov
and
push
loope
lock
or
daa
negl
sub
dec
test
mov
je
sbb
cmpsb
jp
lea
xchg
clc
fidivrl
cli
hlt
mov
mov
mov
inc
sbb
movsl
sbb
mov
jns
or
ds
pop
das
or
pop
xor
adc
sub
js
mov
pop
pop
rcr
xor
imul
jge
cmc
fcompl
into
xchg
fprem
das
aaa
xchg
mov
push
jnp
and
in
xor
or
psubb
ret
jecxz
outsb
mov
cwtl
in
inc
add
sbb
lahf
jmp
mov
cmp
jb
out
pop
insb
movsl
adc
adc
cwtl
pop
xchg
lock
sub
stc
mov
fwait
iret
stc
pusha
mov
dec
outsl
in
jp
xor
xor
xor
adc
mov
cmp
aaa
gs
push
cli
fiadds
aaa
in
push
jp
xchg
cmp
daa
inc
pusha
sub
xchg
into
jns
pop
mov
mov
xchg
cld
aas
scas
lock
cs
xor
rcrl
idivb
daa
repnz
push
dec
ret
pop
lock
jecxz
dec
adc
sbb
daa
pusha
add
adc
aas
popa
dec
ret
mov
call
pop
cs
mov
jb
xor
lock
bnd
ficoml
sahf
push
mov
jp
and
insb
nop
mov
clc
xor
xor
testl
pop
push
mov
adc
mov
xor
lea
cmp
cltd
dec
mov
outsb
loope
xchg
testb
aaa
sahf
andb
add
je
add
mov
pop
shrb
fisubrs
outsl
loop
pop
inc
sarb
or
aad
pop
xchg
push
rcrl
inc
int
lcall
jno
rolb
jae
aas
rcrl
xor
push
lods
rcll
scas
push
fists
mov
add
pop
jecxz
and
inc
xchg
push
push
in
inc
add
sub
jb
pop
adc
inc
imul
sbb
lods
mov
pop
jl
and
aas
mov
mov
sarb
fildll
dec
pop
jmp
mov
pop
stos
in
add
xchg
lods
sub
xchg
insb
stos
nop
sub
js
xor
jle
incb
pushf
mov
jno
fwait
adc
xchg
dec
fs
dec
lahf
or
jnp
lods
loope
cmp
mov
jns
cmp
shll
lret
adc
xchg
xchg
and
push
out
dec
fidivl
or
in
dec
fsts
sbb
out
loop
mov
ffreep
pop
mov
push
mov
lahf
sbb
test
adc
out
sbb
fldt
ljmp
sub
ret
mov
mov
imul
mov
das
mov
icebp
ss
mov
fnsave
cmp
jb
imul
inc
aas
add
scas
add
xor
lahf
sbb
cli
mov
adc
xlat
push
and
mov
data16
mov
mov
lret
push
xchg
mov
add
fadd
outsb
cmp
ljmp
cwtl
out
aad
nop
mov
sbb
xchg
loop
insl
cmp
jb
test
mov
test
xor
push
mov
repnz
pop
mov
fsubrp
or
jmp
and
xlat
loop
js
add
or
in
mov
loop
lcall
aam
mov
cmp
pop
jge
pop
nop
es
dec
int
pop
xor
fdiv
adc
xchg
adc
aad
push
sub
sbb
jo
daa
push
push
mov
inc
cmp
imul
test
ja
lods
mov
lahf
jmp
in
jp
push
negb
insl
lret
push
xchg
add
jmp
or
mov
ret
jne
mov
sahf
xchg
fcmovnb
cmp
int3
push
je
in
xchg
sub
add
mov
mov
xlat
sbb
arpl
icebp
cmp
dec
jo
mov
pusha
arpl
int3
mulb
jl
mov
add
fwait
div
aad
jecxz
push
fdivr
pop
mov
inc
insb
sub
fiaddl
lock
add
sub
sbb
lsl
test
mov
xor
pop
mov
mov
fisubl
cld
or
aam
xchg
dec
xchg
loopne
mov
mov
push
movsb
sub
or
out
ret
dec
cmpsl
roll
fdivrs
push
jmp
sbbl
fwait
jecxz
hlt
push
add
shl
ret
lret
cmpsl
icebp
pop
and
sub
adc
add
xchg
rolb
sti
or
jb
sub
or
mov
es
int
fstpl
fldt
sarl
mov
shll
mov
stos
jge
xchg
fdivrs
sub
xchg
xchg
jo
shrl
aam
pop
fcompl
mov
mov
push
mov
testl
inc
inc
repz
addr16
cmpsb
xchg
lods
test
inc
push
and
mov
cmpsl
push
hlt
imul
sbb
inc
xchg
and
mov
inc
mov
nop
pop
push
loopne
fbld
out
sarb
xchg
jnp
sub
call
xor
push
cli
push
out
sub
pop
inc
or
scas
add
mov
fcoms
jo,pn
cmp
pop
push
dec
out
inc
adc
popf
fwait
mov
leave
outsb
mov
mov
adc
je
stos
loopne
es
jg
lahf
inc
lret
movsb
ret
inc
andl
add
movsb
mov
sbb
xor
fsubrl
scas
arpl
sub
mov
loope
in
xchg
push
insb
push
mov
mov
mov
cmpsl
mov
jecxz
xchg
add
int3
popf
mov
lods
xor
inc
inc
xchg
jle
sbb
adc
scas
mov
stos
cld
mov
push
dec
push
and
sbb
outsb
shrb
ds
repz
push
leave
adc
jno
lret
cltd
jne
pop
lret
and
stos
test
sahf
push
andl
mov
outsl
jmp
xor
mov
ror
and
xchg
call
mov
pop
test
imul
push
push
pop
jmp
inc
cmpsb
push
iret
jle
enter
inc
xchg
pop
mov
mov
in
mov
call
fisubrs
lods
mov
sbb
jp
dec
jnp
jmp
pop
jmp
push
jl
mov
xor
shl
popa
sub
mov
cmp
in
mov
add
pop
mov
xchg
push
mov
dec
dec
arpl
pop
in
push
xor
loop
mov
sbb
sbb
jecxz
sub
aaa
sub
ret
sub
lds
jns
jge
repz
rorb
ror
out
shrl
mov
ret
pop
mov
mov
notb
inc
popa
lods
adc
push
ja
xchg
push
jb
push
push
loope
jge
out
xor
ficompl
sbb
sti
pushf
sahf
into
cmp
pop
jmp
xor
je
cli
push
out
and
scas
mov
xchg
jp
adc
cmp
pop
fldenv
lea
push
add
mov
xor
dec
arpl
mov
sahf
shlb
movsb
cmp
jbe
and
mov
xor
cmpsb
pop
mov
dec
mov
xor
xlat
adc
mov
ja
mov
pop
cmp
push
in
add
xchg
cmpl
sbb
and
adc
xchg
inc
pop
insb
add
and
or
xor
imulb
and
pop
add
jl
lds
cmp
pop
in
dec
es
jg
mov
arpl
mov
xor
cs
inc
out
insb
jecxz
sbb
popf
sub
sbb
in
jno
mov
stos
mov
andb
and
sbbl
add
leave
icebp
push
in
in
add
mov
addl
push
loope
aad
les
or
pushf
aam
inc
out
mov
arpl
pusha
arpl
pop
mov
outsb
pop
jb
mov
cli
insb
jl
lock
jle
jle
test
add
jle
cmp
jle
sub
pop
hlt
arpl
inc
and
dec
xchg
xchg
fucomi
pop
nop
pushf
dec
xor
inc
xorb
push
in
mov
xor
and
xor
test
adc
add
movsb
mov
fwait
mov
xor
inc
add
mull
sbb
loop
add
push
stos
sarl
sbb
pop
xor
out
cmp
mov
push
mov
pop
lret
push
sub
jo
push
xor
push
inc
xchg
jle
lods
mov
fsubs
in
aas
and
dec
xor
mov
jecxz
out
hlt
sub
arpl
cs
sub
sbb
push
inc
cltd
add
ds
loope
gs
adc
sbbl
iret
icebp
fs
rcl
jae
xchg
cmp
pusha
lcall
cmp
jg
mov
pop
cmc
mov
xor
aam
cmc
mov
stos
push
xor
jp
mov
xchg
mov
mov
test
cmp
jns
test
dec
rol
sub
inc
out
in
das
sbb
jp
popa
push
jecxz
imul
addr16
xor
data16
jecxz
aaa
adc
dec
jmp
add
js
cmp
cmp
mov
loope
push
icebp
cli
push
sbb
xchg
stc
inc
inc
cmpsb
pop
je
aaa
sub
cmp
or
adc
adc
les
dec
and
xchg
fisttps
or
imul
jle
std
adc
add
adcb
stos
inc
lcall
xchg
repz
sahf
xchg
lds
dec
addl
lock
ss
pop
inc
mov
sbb
pop
and
add
jl
lret
mov
sbb
arpl
push
shl
fldcw
push
stos
ret
rol
add
pop
jae
popf
push
cld
shll
sbb
xorps
daa
sub
dec
cmp
sahf
or
jl
xchg
jecxz
ja
xchg
fidivrl
das
ljmp
add
xchg
push
push
hlt
shrb
fdivl
scas
push
or
in
out
inc
xchg
push
cs
xchg
sbb
fcoml
add
pop
cmpsb
jne
jb
xchg
movsl
add
in
std
fucomp
jg
lods
add
dec
or
xchg
fsubl
insb
das
scas
jb
flds
out
dec
jo
xor
arpl
ret
outsb
nop
mov
xchg
push
mov
iret
insl
add
aad
loope
call
aad
xchg
cmpsl
bound
sub
pop
shrb
ss
add
aam
into
ret
dec
inc
pop
sub
adc
scas
fldenv
and
jae
and
jb
out
out
insl
adc
scas
lods
mov
adc
inc
aad
popa
mov
xchg
xor
push
adc
movsb
imul
rcrl
lea
mov
mov
not
push
shlb
ret
xor
pushf
insl
idivb
in
sbb
push
mov
jl
push
cs
dec
mov
into
mov
jp
jg
daa
jo
add
pop
sti
xor
push
call
sub
in
sub
mov
adc
mov
mov
fidivrs
mov
dec
xchg
push
mov
xor
arpl
dec
xchg
iret
push
pop
aam
push
aam
mov
cmp
shrl
addr16
sbb
ret
test
adc
cmp
add
fdivr
sti
int
or
jo
xlat
pop
outsb
or
cmpsb
in
bound
push
lcall
mov
loope
ret
adc
repnz
popa
jg
add
cmpsb
shlb
sarl
mov
inc
ret
cmp
mov
outsl
jae
xchg
xchg
or
add
mov
cmpsb
int3
gs
ret
sarl
add
mov
push
sbb
add
jl
add
sub
and
mov
cmc
jnp
test
int3
aas
stc
nop
fs
mov
ficoml
lret
mov
push
aad
pop
ficoms
aam
sbb
mov
inc
lcall
daa
ds
aaa
loope
stc
pop
jae
and
dec
cmp
sub
cld
mov
fdivrs
inc
mov
dec
lock
fcoml
insl
pushf
mov
daa
es
test
add
push
mov
jo
out
sti
mov
into
xchg
inc
push
lcall
repz
movsl
int
add
push
sub
decl
mov
scas
mov
enter
inc
lods
dec
inc
pop
lret
enter
int3
ss
sbb
ret
or
add
cmp
orb
pop
shrb
repz
cs
pop
dec
aas
and
arpl
push
rcrb
jmp
sub
jle
cltd
ss
out
lss
cmpsl
jo
inc
jb
in
add
add
cmpsb
adc
xchg
sbb
fadd
add
adc
sbb
sub
cli
rcl
mov
mov
in
pop
clc
inc
add
out
mov
mov
add
pop
pop
xchg
jmp
jo
and
sub
nop
cmp
or
and
imul
cli
jmp
aam
adc
repnz
cwtl
inc
pusha
sub
pop
das
aad
rcrb
jecxz
sub
xor
dec
out
ret
arpl
shlb
inc
push
repz
jns
sub
pushf
sub
mov
pop
stc
out
aaa
cmc
pop
jae
loope
adc
aaa
add
or
mov
pop
rorb
xor
cmp
mov
cmpsl
in
mov
ds
xchg
dec
movsb
outsb
popa
mov
jl
mov
lds
int3
ljmp
or
mov
inc
add
fdivrs
adc
scas
add
lods
push
lods
andb
lock
test
mov
inc
xorl
cmc
jg
cld
cwtl
movb
xorb
adc
clc
mov
cmp
cmpsb
ja
cmc
outsw
in
jne
int3
pop
jae
lds
push
fs
call
fistps
pop
dec
rorb
ficoms
insb
add
fdivr
jle
adc
daa
sbb
mov
inc
out
sbb
es
gs
std
jmp
add
ljmp
pop
ds
and
les
pop
xorb
mov
fdecstp
jb
inc
push
pop
jecxz
or
adc
cmp
loopne
mov
push
xchg
xchg
fldl
and
test
lea
stos
xor
les
xlat
jne
pushf
adc
fs
or
rorl
lds
je
sub
stos
push
jle
jae
popa
std
negl
xor
lods
sahf
and
or
pop
std
pop
and
roll
xchg
jmp
jmp
jmp
mul
mov
inc
mov
filds
and
testb
out
inc
add
sbb
fistps
daa
mov
jae
lock
cmp
jo
test
cmpsl
pshufw
nop
adc
nop
pop
test
popf
sub
hlt
and
mov
lret
jno
in
in
xchg
pop
jbe
jg
xor
or
mov
pop
pushl
mov
pop
cmpsb
lahf
push
orl
push
leave
mov
movsl
rcll
in
lahf
dec
lock
mov
vminss
sti
fucomp
int
and
addb
loopne
push
mov
std
into
add
lret
roll
xchg
or
pop
pop
mov
or
sub
add
mov
jno
sbb
mov
lods
pusha
mov
jl
mov
stos
mov
dec
out
outsb
pop
sbb
aam
inc
fstp
cltd
int
subl
test
loopne
add
mov
scas
mov
dec
inc
std
pusha
outsl
adc
adc
xor
push
sbbb
fcoms
stc
out
lret
int
mov
mov
xor
test
xchg
stc
jecxz
call
in
movsb
into
shl
add
out
loope
imul
adc
xor
inc
les
into
and
ret
out
das
out
fbstp
mov
bound
sub
andb
insl
or
and
int
cmp
stc
les
in
ljmp
lods
fldenv
sbb
mov
sbb
dec
iret
inc
aam
les
pop
lods
stos
jbe
dec
sahf
loope
cli
fwait
cmp
jp
mov
aam
adc
mov
scas
sbb
mov
push
mov
cmp
into
daa
repz
mov
in
dec
aas
jmp
xchg
cmp
ja
iret
xor
repz
cmp
outsl
push
insl
data16
ja
cli
out
xchg
scas
lock
ljmp
dec
jmp
mov
sbb
loop
dec
lods
jge
sar
push
stc
cmc
nop
fwait
inc
stc
jno
mov
fiadds
or
adc
jno
nop
xchg
jo
sbb
scas
test
xchg
xor
fs
mov
loope
mov
jg
pop
sbb
mov
pop
dec
ja
scas
adc
sub
sub
rorl
out
mov
adc
jmp
cmp
xor
lret
pop
push
cmpsb
add
sub
mov
jl
dec
mov
subl
lcall
enter
int
jmp
or
rolb
orl
fwait
pop
int3
cmpsb
out
dec
jmp
xorb
sbb
mov
cmp
insb
and
daa
cmpsl
fs
add
stos
or
pop
xlat
fcoml
lcall
loope
pop
leave
and
dec
jle
mov
pop
int3
cmp
je
adc
bound
inc
fcoms
xor
clc
mov
push
xchg
loop
mov
insb
movsb
or
mov
jb
sbb
loop
cmp
mov
shr
popa
cltd
ret
std
lock
inc
fidivrs
inc
sbbl
jb
ret
bound
aam
and
rcrl
sub
andb
xchg
sbb
stos
test
inc
add
or
push
ljmp
mov
int
cmp
jnp
std
lock
sbb
leave
lret
loop
arpl
pop
addl
jl
aaa
xor
push
pusha
mov
jp
mov
cmc
and
popa
push
sub
and
cmp
jle
mov
outsl
xor
bound
stos
mov
stc
pop
fistl
jle
xchg
cmp
ss
jbe
sub
sub
sbb
sub
and
xchg
and
sti
push
enter
sbb
pop
inc
fidivs
rolb
xchg
jg
inc
adc
int3
aaa
dec
ffreep
jp
cmpb
jae
add
dec
nop
adc
dec
jnp
mov
pop
sbb
push
jnp
dec
dec
push
cmpsb
loop
inc
out
adc
cmp
mov
mov
xlat
jmp
fisttpl
push
pop
shl
out
sbbb
push
aas
rcr
aas
pop
mov
sahf
mov
pushf
and
mov
outsb
sub
adc
adc
jg
test
shl
or
mov
push
cltd
out
add
or
ret
into
push
out
xor
jb
rclb
push
lret
fnstcw
sbb
cltd
or
jbe
mov
ljmp
push
adc
xchg
lcall
mov
int3
popa
sub
or
dec
ljmp
test
adcl
outsb
rcrl
addr16
push
xchg
inc
movsl
std
sahf
xchg
fildl
sahf
in
je
jne
mov
repz
add
mov
inc
adc
test
cmc
push
mov
imul
rol
jo
mov
sti
divb
mov
pop
pusha
enter
pusha
push
cmpb
xchg
inc
push
dec
jl
jecxz
aam
xlat
rol
push
jo
cmp
dec
test
xor
fimull
addr16
int3
aas
out
popa
mov
insl
insb
jnp
outsb
cmc
iret
aam
lahf
or
loopne
test
pushf
sbb
mov
push
loopne
or
mov
mov
fstpl
jge
sbb
mov
sti
cmp
xor
hlt
mov
cld
xchg
jmp
dec
js
mov
out
xchg
in
dec
and
nop
mov
out
push
sub
xchg
mov
sbb
xchg
jbe
or
sbb
ja
inc
and
pop
push
inc
cmc
jge
stos
rcl
aad
pop
pop
out
lret
xor
lret
mov
movsl
inc
insl
mov
mov
movsl
mov
fists
out
mov
cmpl
insb
inc
int
jg
mov
shr
call
push
lds
jne
jae
add
adc
mov
mov
and
mov
sub
enter
adc
push
repz
imul
repnz
std
loopne
dec
rorw
lret
inc
repz
shlb
fiaddl
cmpsb
pusha
push
int3
jo
shll
adc
pop
adc
pop
sbb
divb
sbb
pop
cld
jno
popa
xchg
sbb
movsl
jg
cwtl
lret
movl
scas
enter
outsb
mov
int
xchg
bound
dec
xor
ds
sbb
leave
out
fdiv
ret
mov
xchg
inc
push
fs
push
scas
movsl
int3
sarb
loopne
and
movsb
iret
sub
cltd
mov
jns
shr
add
or
mov
dec
je
clc
mov
bound
pop
xlat
test
mull
inc
lcall
out
jbe
aam
imul
sbb
adc
and
jae
inc
aad
lods
cwtl
jns
dec
dec
inc
sbbl
cs
divl
into
cmp
popf
jo
inc
decl
adc
out
sbb
sbb
xor
sbb
jno
mov
imulb
dec
mov
adc
push
pop
in
icebp
scas
xor
subb
cwtl
jne
jnp
orb
gs
movsl
mov
loop
insl
push
dec
aaa
fsubs
mov
or
ja
loopne
pop
fnsave
cwtl
ja
mov
ret
ja
lret
dec
push
push
mov
cwtl
aas
iret
in
fwait
es
fwait
mov
dec
mov
adc
push
sub
mov
rolb
repnz
jo
ffree
cli
fstpl
add
rcll
mov
xchg
xchg
xchg
cmp
lods
rcl
or
cmpsb
mov
add
xchg
das
or
icebp
popf
mov
push
outsl
insb
pop
jo
mov
pop
xor
mov
adcb
icebp
dec
pop
xchg
mov
call
add
enter
imul
sar
or
mov
cmpsl
lcall
xchg
pop
adc
les
in
cmp
test
sbb
int3
dec
lea
add
lret
inc
subb
ds
shlb
cmp
mov
sbb
xchg
mov
mov
fcoms
mov
ret
sbb
in
cmp
push
add
stos
pop
jmp
and
sbbb
mov
bound
inc
jb
loope
sbb
adc
jg
jae
adc
xchg
dec
push
mov
push
loopne
cmp
mov
sbb
mov
and
lock
xchg
push
sub
loope
in
add
imul
sub
lods
mov
imul
jae
movsb
adc
outsb
xchg
pop
adc
aam
sub
mov
imul
push
aas
xor
and
adc
pop
sub
mov
data16
cmc
cmc
cmp
pop
push
adc
pop
push
and
inc
addl
mov
cmp
movsb
cmc
les
ret
sar
xchg
test
test
mov
mov
ffree
push
ljmp
mov
cmpsl
mov
adc
fistpll
stos
sbb
add
movl
jo
in
mov
jnp
imul
aad
inc
jne
ds
shl
adc
and
in
sbb
push
insb
push
dec
push
lods
dec
xchg
inc
std
jg
and
jae
loopne
jo
xchg
aam
push
mov
sbb
addl
lcall
inc
dec
js
repz
pop
lret
or
stos
stc
mov
xor
or
or
inc
push
fwait
fs
rcrl
sbb
xor
sbb
pop
btr
push
mov
push
cmc
and
mov
std
push
repz
xor
mov
and
or
popa
fsubrs
push
test
stos
test
loopne
cmp
je
push
testl
cmpsb
and
push
fdivl
cmp
dec
jp
arpl
mov
xor
xchg
int
lods
dec
fsts
clc
push
sbb
sahf
push
lock
test
jne
mov
xor
lcall
movl
lret
sub
mov
push
outsl
adc
and
test
out
adc
cld
aas
jno
xchg
cmp
enter
xchg
mov
mov
or
mov
dec
xchg
xor
jnp
and
enter
scas
dec
adc
push
gs
cmc
lea
xor
popf
sbb
jb
sbb
sbb
push
ja
das
pop
pop
cmp
push
xchg
out
cmp
call
dec
push
add
lret
ljmp
push
jb
loopne
jbe
enter
sub
sarl
out
xchg
ret
mov
pop
scas
xchg
cmp
mov
inc
adc
or
andb
cltd
sbb
xor
mov
mov
sub
popf
pushf
mov
mov
test
int
int3
lods
push
xchg
adc
adc
test
mov
add
cmp
and
pop
push
out
lcall
ljmp
cmpsb
jae
loopne
in
les
cltd
adc
mov
mov
xchg
push
mov
or
orl
xchg
push
daa
mov
xor
jge
icebp
ret
leave
sub
andl
loopne
aas
jnp
in
pop
push
fcmovbe
xchg
fadds
setb
nop
scas
shr
pop
mov
lret
pop
and
mov
fs
fwait
cmp
mov
daa
mov
daa
nop
cmp
dec
inc
clc
shll
pop
repz
mov
movsl
mov
jno
mov
dec
mov
in
shrl
sbb
jmp
int3
fisttpl
mov
mov
addb
aas
cmp
clc
mov
push
mov
xor
bound
pushf
push
push
fsubrl
jmp
pop
xor
sub
cmp
or
repnz
shrd
pop
bound
push
push
xchg
mov
cmc
lret
xor
ds
fstpl
les
fnsave
rcr
add
push
sbb
rcrl
fldl
je
mov
repnz
pop
xor
nop
mov
mov
jmp
scas
jne
pop
test
and
hlt
push
fimull
rol
sub
adc
pop
add
dec
sbb
jnp
in
jl
aad
andb
push
sti
pop
push
jg
or
icebp
imul
sbb
sub
mov
xor
mov
add
dec
cmpsb
sub
mov
bound
push
loop
into
xorl
enter
cltd
cmpsl
iret
mov
es
and
sub
pop
jbe
sub
ror
jp
movsb
cmpsb
std
lds
or
sbb
xor
jb
sub
insb
jns
pop
xchg
popa
lcall
ficompl
add
and
jb
repz
cmpsl
push
mov
cmp
lods
inc
clc
dec
inc
ret
add
sbb
mov
jmp
jg
movsl
xor
or
xorps
push
pop
dec
fdivs
mov
int
mov
xchg
mov
sbb
mov
push
pusha
jno
cltd
out
std
push
jb
push
jo
cmc
imul
or
push
out
ds
sub
ror
xor
sbb
xchg
daa
dec
das
jb
lods
jg
xor
outsl
repnz
xchg
lods
push
cmp
mov
inc
adc
out
sub
popf
ds
imul
lods
mov
jns
jecxz
incl
int3
inc
push
insb
dec
rcrb
jp
xchg
movsb
adc
dec
jns
out
push
js
add
lret
test
sti
test
push
and
mov
leave
xor
mov
aaa
aam
mov
mov
and
stos
out
xchg
inc
shll
lods
jns
bound
and
cmpsl
outsl
fidivl
cltd
jne
lret
adc
mov
lss
call
test
es
adc
mov
movsl
or
mov
cmp
push
push
jns
push
dec
inc
dec
fsubrs
inc
adc
push
pop
das
sbb
cs
mov
ret
arpl
incl
aam
lret
lods
sahf
pop
sbb
mov
cltd
dec
cmpsl
mov
iret
shlb
sub
cwtl
inc
inc
jg
sti
inc
adc
pop
bound
jg
pop
lods
or
jp
jecxz
mov
sbb
movsb
sub
divl
sub
cmp
sub
jns
xchg
leave
mov
loop
or
mov
movsb
in
inc
daa
in
jnp
mov
push
mov
push
jmp
jg
enter
add
sub
add
mov
sub
pop
xchg
xchg
fsubrp
xchg
das
into
sti
cmp
jae
jbe
inc
mov
idivb
dec
sub
cmpsl
int3
mov
or
and
daa
fsubs
jp
pop
xchg
popf
jb
popf
or
addr16
mov
push
and
cmpb
inc
inc
ret
push
ds
adc
xchg
sub
stc
pmulhw
adc
cli
dec
xchg
dec
cmp
in
jmp
mov
inc
mov
mov
and
lods
dec
ds
sub
mov
mov
or
test
cmpsb
mov
mov
pop
mov
mov
pop
pop
xor
inc
xor
out
cmp
popf
sub
pushl
adc
imul
pop
test
xor
sub
lods
mov
cmpb
jne
push
lock
jmp
fsubr
sbb
rolb
aaa
decb
mov
pop
and
mov
test
mov
je
notb
fscale
into
mov
sub
or
repnz
shlb
dec
mov
mov
jge
rorb
das
std
xor
test
dec
push
inc
jnp
push
test
std
pop
lret
lods
insb
fucomp
mov
xor
je
and
pop
pop
inc
or
xchg
inc
jo
out
adc
and
and
dec
jmp
cmp
and
jbe
mov
or
ljmp
mov
jg
sbbb
push
outsb
xchg
add
stos
shlb
jnp
xchg
pop
fwait
std
xor
daa
mov
add
insb
push
adc
push
mov
push
push
sbb
jo
jne
cmp
xorb
or
jmp
sar
add
aam
add
mov
test
xchg
cld
mov
jb
pushf
insb
int3
mov
inc
dec
imul
add
adcl
push
ljmp
pusha
or
mov
cmp
das
lds
in
test
add
notb
in
lock
test
dec
aam
or
mov
js
aad
pop
dec
imul
lea
lods
and
jns
dec
mov
int3
stc
pop
rorb
jno
mov
sbb
and
mov
out
xchg
jno
lcall
mov
sub
fcompl
xor
add
cli
push
adc
pop
ds
arpl
sbb
add
and
aas
flds
dec
sub
jae
add
mov
mov
jnp
je
aaa
mov
inc
dec
je
addr16
mov
dec
mov
repnz
xchg
jl
les
dec
imul
or
lock
pop
psubb
jno
push
clc
add
insl
ljmp
xchg
fs
in
add
push
scas
stos
xor
mov
icebp
repnz
roll
loop
jp
sbb
in
test
or
cmp
jle
add
inc
xor
push
adc
insb
or
mov
pop
mov
xchg
shrb
mov
or
pop
push
cmpsl
push
shll
adc
xor
sub
popa
out
mov
and
xchg
fiaddl
mov
test
call
pop
push
adc
mov
jecxz
jecxz
mov
jl
xchg
jb
iret
out
fisttpl
pop
aad
outsl
cmp
dec
push
int
pop
cmp
stos
dec
mov
xlat
outsb
xchg
jl
fidivrs
int3
lret
cwtl
ds
sbb
cli
mov
mov
out
std
rol
lods
and
sub
dec
je
pop
adcl
and
shlb
adc
mov
pop
add
lahf
shrb
jge
xchg
cmp
lahf
ds
lds
mov
xor
test
mov
ljmp
repz
fwait
pop
in
fidivs
cmp
out
pop
cltd
inc
inc
adc
cli
mov
adc
mov
push
or
jae
int
int
sbbb
xchg
addb
inc
sub
fsubrs
psubb
fisubrl
test
addr16
pop
ss
pop
fimuls
sub
add
mov
jge
and
pop
fcomp
pop
mov
fsubrl
fistpl
insb
movsb
packuswb
rolb
lods
add
push
aas
fcompl
sub
nop
jbe
stos
sub
cmp
xchg
xchg
lahf
scas
mov
push
lods
push
mov
jp
sbb
mov
ja
push
or
and
mov
icebp
test
inc
orb
arpl
mov
in
xor
adc
outsl
adc
add
or
sbb
cmpsl
add
xchg
aam
jmp
orl
push
and
sbb
aaa
push
inc
repnz
mov
mov
mov
adc
add
inc
aam
inc
xor
inc
push
aad
lahf
ss
xor
and
andl
pushl
xchg
das
repz
stc
mov
or
add
inc
inc
cmp
jno
add
jle
shl
add
and
jne
sbb
or
sbb
dec
clc
inc
ja
out
cwtl
jno
add
pop
lods
or
fisttps
push
out
stos
pop
shlb
inc
dec
lret
clc
loop
sub
sbbl
cs
out
xchg
mov
xchg
cmpsb
jnp
mov
add
jp
jl
sysret
mov
and
imul
and
mov
jecxz
push
clc
push
adc
inc
inc
mov
or
pushf
jae
push
xchg
lahf
shll
mov
cmpb
out
jo
xchg
test
pop
push
jae
pop
out
inc
and
xor
sub
mov
imul
jecxz
push
jmp
pop
sub
dec
jg,pt
adc
jae
xchg
loope
lock
cmpsb
pop
xor
mov
sbb
lahf
clc
xchg
scas
fldcw
lahf
mov
clc
dec
dec
std
jecxz
xchg
jne
push
arpl
movsl
jo
aam
mov
mov
fldl
sub
rcrb
mov
out
jb
push
adc
stos
jmp
sbb
or
mov
out
lods
and
hlt
adc
sbb
xchg
and
push
push
push
mov
jno
jb
inc
mov
adc
lahf
in
clc
push
scas
fsub
jo
mov
mov
fcmovnu
das
cmc
fisttpl
adc
mov
cmpsb
daa
or
js
add
stc
movswl
push
adc
rolb
or
das
shll
subl
cmpsb
pusha
fwait
pop
fwait
aad
pop
xor
mov
inc
xor
jnp
sarl
jmp
hlt
mov
adc
push
pop
mov
daa
push
adc
mov
lea
mov
mov
mov
jb
ret
push
dec
ja
mov
adc
popa
hlt
dec
movsb
xchg
lcall
push
out
test
mov
and
jle
repnz
addb
mov
test
adc
sbbl
xchg
iret
stos
rorl
push
pop
test
out
aas
es
mov
repnz
and
popf
pop
int
lret
xor
xor
in
inc
fnstenv
scas
mov
cli
inc
sbb
movsb
icebp
mov
scas
lret
cld
xor
rclb
dec
mov
adc
add
cmc
or
cmp
leave
sti
pop
sub
push
aaa
jg
mov
xchg
xor
cs
sub
or
and
jns
fld
orb
test
lret
xor
mov
jge
mov
sub
push
pop
push
mov
cld
xchg
mov
jge
cmp
and
or
sub
push
mov
mov
cltd
pushaw
ljmp
sbb
inc
addr16
cld
cli
adc
aad
or
popa
filds
push
insl
jae
and
pop
and
adc
lret
lahf
aam
test
test
or
mov
fidivrs
jmp
daa
js
mov
rcrb
or
mov
daa
xor
xchg
sbb
aaa
faddl
lahf
popa
jecxz
negb
in
inc
in
xchg
inc
push
push
pop
xchg
cmp
jns
sarl
jge
mov
insb
mov
pop
mov
and
bound
xchg
push
gs
and
in
loope
mov
sahf
daa
pop
sbb
xchg
jbe
rol
xchg
adc
jge
add
push
hlt
adc
stc
mov
imul
ja
adc
test
push
hlt
xchg
mov
into
insb
adc
push
mov
shlb
ss
mov
fdivs
incl
sub
cmp
aam
inc
frstor
lret
testb
gs
fists
dec
daa
lock
pop
icebp
cmp
cmpsl
ds
ljmp
pushf
inc
mov
bound
fwait
jge
mov
imul
mov
leave
les
xor
mov
repnz
or
mov
mov
ss
mov
out
pop
subl
in
icebp
out
dec
mov
dec
stc
mov
clc
lahf
cli
push
or
adc
fstpl
xor
outsl
adc
dec
push
adc
pop
mov
inc
shr
fidivl
cmp
mov
cmpsl
xlat
cmp
dec
jmp
sbb
cmp
out
fimuls
pop
add
cmc
fcomps
and
ret
sbb
or
popa
push
sbb
ljmp
pop
cmp
sahf
lea
pop
insb
dec
out
lods
dec
das
jo
xchg
xchg
sbb
xor
xchg
mov
dec
mov
mov
push
lods
cmp
mov
push
pop
jnp
add
fsubl
mov
and
fs
pop
pop
pop
pop
jno
push
ret
jp
ret
pop
jno
shl
mov
push
mov
mov
sub
xor
enter
mov
call
sub
mov
mov
jle
bound
popa
or
mov
push
or
and
in
add
dec
lds
imul
aam
mov
or
clc
or
pushl
inc
jle
fiadds
cltd
cmp
outsb
cwtl
cmp
cs
and
mov
pop
mov
in
in
xor
push
jo
insb
pop
and
repz
cs
pushf
dec
xchg
ficoml
jb
dec
push
das
jae
lcall
rorb
je
pop
cmp
xor
call
bound
jmp
sub
dec
push
mov
es
add
dec
daa
adc
popf
inc
dec
gs
test
lods
push
pop
or
sub
ss
sub
lea
popa
insb
cmc
or
mov
sub
mov
pop
mov
cmpsb
sbb
dec
adc
dec
or
jl
imul
loopne
cmc
adc
call
push
mov
sub
cmp
push
les
jns
sbb
hlt
aaa
cmp
xchg
andl
pop
mov
pop
imul
sbb
mov
daa
loopne
popf
mov
daa
adc
cmc
push
fildll
inc
subb
adc
inc
sbb
mov
jbe
lds
leave
xor
sbb
dec
dec
sub
rolb
ds
mov
cmpsb
mov
add
xchg
or
push
fucomi
push
gs
repz
adc
jb
lret
outsl
dec
inc
jbe
cwtl
add
sub
test
imul
dec
sbb
int3
mov
test
xchg
adc
xchg
fwait
in
and
sbb
push
js
lds
adc
in
sbb
pop
sti
das
or
ja
mov
sbbl
xchg
mov
pop
push
inc
aas
push
push
push
subb
adc
pop
xor
imul
mov
test
push
push
jnp
decb
mov
das
pop
push
cmpl
iret
lret
push
mov
dec
xchg
xchg
cmp
mov
pop
imul
mov
cli
xchg
mov
iret
pop
out
into
scas
mov
pop
mov
shrb
jno
repz
adc
fnstcw
leave
icebp
push
cmc
dec
and
shll
push
cli
pop
xchg
sbb
mov
cltd
int
js
lret
stos
fldenv
dec
or
test
sbbb
mov
mov
dec
out
lahf
jecxz
leave
sub
add
mov
cmp
add
call
dec
data16
scas
mov
shrl
sub
fdivrs
out
and
xor
sbb
sbb
mov
stos
xchg
dec
bound
cmpsb
out
cmp
push
in
jns
xchg
add
pop
push
lahf
sbb
or
test
shrb
outsl
movsl
imul
mov
in
iret
adc
aaa
fnstcw
imul
dec
rorl
add
fistpl
mov
push
jb
xchg
popa
pop
cld
int
mov
fisubrs
movsl
mov
pop
pop
jl
ja
mov
cwtl
and
jo
xor
pop
pop
cmp
or
jle
dec
inc
dec
out
seta
out
mov
addr16
add
rcrl
mov
pop
fstpl
or
pusha
dec
xchg
stos
inc
adc
fstps
and
and
xor
test
inc
jg
aas
std
test
aaa
jg
xchg
fnstsw
lret
sub
sub
std
mov
mov
push
mov
nop
cmp
and
ljmp
mov
mov
scas
stos
mov
add
filds
nop
mov
sbb
and
gs
fidivs
pop
adc
in
ret
jnp
push
and
icebp
push
inc
mov
lcall
jne
call
out
leave
mov
into
add
icebp
stos
cltd
add
out
dec
xorl
dec
and
popf
popf
test
ja
mov
inc
adc
mov
xchg
jb
push
mov
clc
lods
cld
leave
std
iret
insb
ja
mov
xchg
or
mov
shll
hlt
cld
push
add
xor
dec
mov
add
outsl
cmp
cmpsb
xor
scas
add
or
sti
pop
cs
addb
mov
aad
add
jg
pop
add
pushf
test
sub
dec
push
xor
jge
lcall
in
bound
adc
xor
mov
mov
test
lods
outsb
aam
rcl
aas
adc
xchg
add
adc
ficompl
cmc
inc
outsb
or
add
adc
pop
lock
icebp
pop
imul
adc
pop
and
mov
test
push
cmp
mov
sbb
fs
imul
pushf
sbb
enter
sbb
lcall
ss
cmp
loopne
enter
nop
xchg
hlt
mov
sbb
lahf
ret
dec
rcrl
es
pop
mov
bnd
add
cmc
cld
pushf
pop
sbb
js
push
les
adc
loop
sbb
std
push
pushf
mov
xchg
push
ja
jmp
jno
in
das
out
mov
cmp
sbb
mov
pop
lcall
dec
pop
mov
cmp
adc
lar
cs
outsb
push
js
and
mov
adc
xlat
dec
push
jo
into
mov
xor
out
lds
cmpsl
add
jae
lret
in
mov
scas
xchg
not
mov
inc
pop
sbb
xor
mov
les
jbe
jo
mov
dec
mov
mov
addl
loopne
push
xchg
sub
fistps
and
addr16
inc
inc
mov
bswap
rcr
xchg
inc
lock
add
dec
ficompl
or
out
add
cli
aas
pop
xor
rcl
xchg
add
push
jb
icebp
dec
icebp
lock
inc
shr
mov
ss
push
fdivrs
out
sub
xchg
sbb
and
lea
cmpsl
pushf
mov
pushf
and
xchg
in
cmp
outsb
sbb
adc
pop
and
sbbl
mov
mov
xor
jmp
sbb
mov
fidivs
in
aam
aad
out
jl
sbb
or
xor
push
cmp
stos
shll
push
mov
pop
insl
popa
fdivl
xor
or
push
adc
mov
pop
rcrl
mov
clc
lods
sbb
into
mov
add
sar
add
jmp
push
cs
mov
clc
dec
dec
push
js
mov
jno
shlb
divb
rolb
in
xlat
f2xm1
fisttps
xor
xor
pop
or
dec
icebp
in
arpl
addr16
scas
pop
cmpsl
bt
ja
lcall
sbb
out
shl
cmpsb
call
fdivs
add
test
imul
loope
xor
pop
sub
fs
aas
and
das
int3
jae
jne
imulb
mov
js
or
fisubrs
pop
imul
cmp
leave
out
stos
sbb
and
or
fiaddl
cwtl
nop
xchg
cmp
or
inc
inc
outsb
stc
push
and
add
jg
xor
add
mov
test
jb
shlb
or
jle
push
hlt
jb
inc
adc
popa
aad
push
xchg
pop
test
rorb
adc
xchg
cmp
lds
insb
xor
xchg
in
sub
inc
cmpsb
add
mov
cmp
sbb
in
scas
dec
lea
sahf
subl
push
jo
pushf
sub
sbb
inc
and
pop
mov
jne
enter
push
cli
xlat
clc
loop
xchg
xchg
sbb
add
pop
jge
jg
test
lcall
shl
add
sub
lret
movsb
inc
add
jge
loop
daa
rcl
and
or
loop
mov
pop
movsb
mov
and
fadd
pop
sarl
inc
or
adc
jno
inc
pusha
ror
addr16
popf
data16
mov
adc
pop
sti
add
fbstp
pusha
int3
insl
jbe
sub
pop
imul
into
lret
cmp
les
test
out
mov
cmpb
bound
cli
ja
popf
sarl
imul
loop
mov
jnp
xchg
lret
out
xlat
push
hlt
scas
pop
test
sbb
or
dec
mov
daa
std
jecxz
and
inc
subb
push
push
xor
out
out
imull
mov
imul
enter
ret
cld
fnstenv
cli
mov
dec
test
cmp
dec
cmpsl
inc
insb
sbb
sub
subl
dec
out
in
adc
stos
ret
xchg
sbb
fsubl
dec
xor
idivb
inc
or
dec
ret
les
in
cltd
and
mov
sub
out
loopne
pop
imul
lods
cli
sub
dec
jge,pt
test
loopne
xchg
das
mov
daa
popa
cmpl
movsl
xor
ret
inc
inc
fisttps
jl
and
dec
test
lcall
cmc
jg
push
ror
dec
arpl
adc
add
sti
push
push
jl
cld
movsl
mov
mov
add
jae
pop
js
mov
popa
xchg
adc
jns
add
testl
dec
mov
jecxz
cmp
mov
mov
xchg
pop
pop
jo
leave
scas
xor
jmp
lods
pop
ljmp
outsl
sbb
xchg
sbb
push
sbb
push
mov
scas
lret
lcall
aad
sub
jbe
ret
mov
push
jl
data16
je
sbb
inc
xlat
push
jo,pt
pop
mov
dec
scas
mov
shrb
or
shr
and
adc
in
jno
cs
mov
sarb
adc
shrl
out
mov
nop
sub
jnp
leave
ja
std
add
cs
cli
mov
sub
xchg
xorb
inc
in
js
sti
mov
add
xor
add
adc
ret
push
mov
sub
cli
dec
out
out
mov
jns
sub
hlt
stos
cwtl
call
mov
push
pusha
cmp
mov
mov
lahf
pop
orps
adc
cli
adc
ja
push
popa
and
mov
fistpll
adc
sahf
jle
nop
bnd
jns
pop
mov
sahf
adc
fisttpll
pusha
xchg
cmp
lock
jge
dec
je
mov
jbe
loop
adc
adc
aas
dec
aad
sub
mov
xor
lock
fcoml
push
arpl
movb
daa
es
nop
mov
xor
and
mov
jle
loope
sbb
jbe
add
dec
mov
cmp
imul
mov
stc
test
jb
loope
push
out
gs
sti
aas
leave
mov
dec
jae
jo
imul
lds
loop
mov
cmp
pop
mov
sub
cwtl
mov
mov
mov
insb
popf
mov
pop
scas
es
jp
sbb
dec
xor
fbld
stc
xor
rcrl
lahf
push
mov
jl
sub
add
cli
insl
jb
ucomiss
adc
cmp
cli
jns
jae
mov
popa
mov
in
rcll
adcl
inc
out
inc
push
cwtl
sbb
nop
test
movsl
jge
mov
cmp
push
or
sub
fcoms
pop
pop
scas
testl
xchg
sbb
dec
sti
out
popa
cwtl
je
sbb
stos
inc
rclb
mov
mov
test
das
and
sti
lea
jae
lret
push
jne
insb
arpl
repnz
fdivl
aad
loopne
pop
lods
idivl
inc
stos
push
sbb
pushf
pop
bound
jnp
mov
jp
test
dec
jg
mov
push
pop
lret
les
pop
xor
sub
aad
adc
js
fisttps
out
addb
mov
pusha
test
pop
imul
mov
lret
stc
pop
addr16
mov
shl
xor
mov
mov
jge
inc
gs
adc
stos
jae
add
sub
cmp
push
mov
ds
xchg
mov
es
xor
ficompl
fcoml
ss
rcrl
fs
test
rcrb
jmp
jo
js
ret
mov
mov
or
arpl
imul
or
bound
insb
bt
mov
enter
mov
mov
test
rcrl
testb
nop
adc
xor
das
cmp
push
add
loopne
jb
sbb
or
push
fistpl
test
enter
add
fiaddl
or
cli
inc
adc
xchg
gs
andnps
adc
je
xor
cmp
adc
cwtl
jg
pop
fcomip
cmp
push
or
fiadds
addr16
adc
mov
jl
movsb
push
push
push
mov
pop
fstpl
or
ss
jl
or
mov
mov
je
sbb
dec
push
loopne
cmp
mov
mov
and
mov
dec
pop
mov
dec
mov
dec
pop
ljmp
jecxz
mov
dec
test
pushf
out
movb
push
push
xor
ljmp
xchg
aam
adc
sub
mov
and
test
dec
test
out
push
daa
das
mov
jl
out
jp
pop
sub
mov
push
xchg
orb
inc
test
pop
cmpsb
jns
orl
ret
dec
lea
xchg
mov
lahf
and
push
xchg
sbb
jmp
imul
xlat
icebp
mov
and
add
pop
xchg
sahf
pop
pop
jg
xchg
add
adc
repz
push
or
jl
out
cmp
mov
mov
mov
std
imul
push
mov
rcl
mov
insb
jl,pt
sub
pushf
sub
xchg
and
sbb
xchg
fcoml
xchg
mov
jp
cltd
add
neg
lret
and
sbb
out
mov
or
cli
sbb
subl
push
aas
fidivrl
pop
mov
and
les
clc
sbb
pop
push
jne
jnp
mov
mov
sbbb
cmpsl
cli
and
loop
in
jecxz
adc
dec
mov
ret
adc
imull
and
mov
dec
cmp
aam
sub
jg
pushf
stos
repnz
xchg
xor
std
addr16
cmp
push
repnz
loopne
pop
cmp
ja
sbb
int3
movsl
mov
aaa
popa
xchg
fs
or
rcrl
pop
xchg
shrb
xchg
sub
jmp
xor
cmpsl
mov
push
arpl
push
or
xorl
and
pop
int3
adc
mov
inc
xchg
mov
inc
jbe
mov
stos
lret
pushf
sbb
sti
fldenv
xchg
movsl
in
cmp
mov
mov
loop
cwtl
push
orb
dec
andb
jbe
sub
pop
push
xchg
sahf
ds
loope
jns
xchg
test
adc
xor
cmpsl
faddl
sbb
in
icebp
sub
jg
push
pop
out
add
mov
cmpl
mov
lock
push
pusha
pop
xchg
mov
push
cmp
insb
cltd
lret
sahf
fstpl
mov
or
add
jbe
rorb
cmpsb
push
insb
aad
fistps
jmp
pop
push
push
add
imul
icebp
daa
adc
xchg
cmp
lcall
xor
jg
jae
push
mov
xchg
mov
add
inc
inc
cltd
xor
inc
popa
sahf
mov
push
xor
aad
cmp
out
cmpsl
inc
sbbb
es
or
test
adc
ficompl
mov
sar
data16
jmp
fiaddl
mov
cmp
adc
cwtl
or
cmp
addb
dec
mov
pop
popf
pop
cmc
and
les
into
lock
rcll
out
cwtl
movsl
mov
popf
clc
scas
xchg
push
js
mov
imul
lock
mov
pop
orl
push
mov
jb
imul
cmp
sbb
mov
imul
out
sarl
stos
dec
mov
push
cld
stos
adc
dec
mov
jp
add
jno
pushl
stos
dec
fstpt
mov
leave
inc
mov
inc
fldt
gs
inc
add
rorb
fsts
inc
mov
xor
cld
hlt
das
pop
lret
pushl
out
or
ja
out
aas
or
xchg
push
icebp
insl
push
push
js
out
popa
test
cmp
lcall
sub
cmp
inc
lock
adc
mov
cmp
shrl
lock
push
jl
jbe
mov
push
adc
pop
test
pop
ja
data16
cmp
push
mov
jg
ds
rcrl
test
lods
ficoml
push
mov
fidivrl
or
sarl
insl
sahf
jmp
and
push
jp
mov
fsubr
stc
lods
xchg
jae
and
jecxz
sti
rcl
pushf
xor
add
lcall
inc
dec
add
test
jnp
dec
inc
repnz
test
mov
cmp
out
sbb
jno
push
cmp
aaa
jmp
push
add
movsl
cmpsl
cmp
mov
adc
sahf
and
fsubrl
into
test
in
shr
ljmp
call
jge
cmp
faddl
jns
xchg
lods
or
jp
jno
negb
les
sarb
clc
and
xchg
shll
test
pop
push
inc
inc
das
and
imul
loopne
enter
stos
fs
shrb
add
jbe
sbb
and
mov
repz
imul
mov
add
push
mov
cmp
lret
not
mov
movl
sub
add
icebp
inc
mov
je
adc
icebp
cli
mov
and
jne
cmp
arpl
movsl
iret
push
add
in
push
cmp
ficompl
mov
shrb
jo
fidivs
inc
cmp
push
mov
mov
sbb
mov
cmpb
cli
leave
cmp
cmpsl
popl
inc
rorb
cmc
fldcw
push
cwtl
aam
rcll
cmpsb
cwtl
addr16
jle
cmp
and
mov
lds
int3
xchg
repnz
sbb
jno
xor
ficoml
test
cs
jo
mov
call
xor
or
in
inc
xor
push
ljmp
push
jno
andb
ss
lock
add
jae
call
xchg
dec
pop
jmp
dec
inc
and
pop
mov
lret
imul
xchg
jns
fsubp
jnp
rolb
push
movsb
xchg
fbstp
mov
subb
shr
xchg
fs
popa
rcr
js
sbb
lret
mov
cld
cltd
aad
idiv
inc
add
pusha
xor
daa
scas
je
mov
and
subb
ret
outsl
dec
dec
pop
xor
imulb
rorl
jmp
loop
sbb
test
std
cmpsl
xlat
jne
hlt
pop
aas
nop
pop
cmp
pusha
leave
pop
and
inc
dec
ret
in
mov
sub
jl
rcrb
pusha
mov
out
sub
sub
shll
aaa
mov
push
pop
inc
call
jge
jecxz
sub
mov
test
push
addr16
jl
repnz
xor
pop
and
or
push
fs
push
mov
out
clc
ljmp
shll
mov
mov
sbb
xchg
out
fistl
mulb
idivb
inc
jae
pop
inc
sti
testl
aad
inc
imul
xor
je
out
sbb
insb
lret
adc
rcrb
pushf
push
dec
lahf
ljmp
mov
jmp
pop
push
rol
pop
push
outsl
lods
xchg
ja
jmp
mov
ret
pop
dec
adc
add
and
inc
inc
adc
xchg
or
cmp
cmovp
mov
fsubrp
leave
adcb
imul
in
push
call
xchg
cmpsb
enter
lret
push
outsl
sahf
pusha
jp
lret
and
lods
inc
jnp
leave
je
jge
jae
mov
cwtl
xor
and
test
cs
jecxz
dec
xor
ds
jecxz,pn
and
clc
imul
lret
subb
cmp
je
and
outsb
mov
xchg
cs
fnstenv
inc
cmpsl
pop
fs
and
add
sbb
add
les
jae
fistpll
mov
loop
push
cmp
pop
cld
adc
adc
popa
bound
adc
jnp
inc
repz
dec
dec
inc
cmp
push
mov
xchg
push
inc
in
pop
dec
cmp
or
cmpsb
and
popa
mov
addl
test
mov
mov
arpl
ret
mov
mov
and
mov
xchg
sbb
mull
pop
lcall
stos
mov
loope
pop
inc
out
sub
pop
imul
in
mov
ljmp
into
xchg
sarb
aam
fsts
mov
sarb
sub
les
jecxz
pop
sar
inc
mov
sub
fwait
cmpl
shlb
push
stos
adc
or
aam
or
lock
outsb
das
in
sub
xchg
xor
adc
or
sub
add
jecxz
stc
xchg
mov
popa
icebp
mov
pop
adc
sbb
push
aas
out
mov
rcrb
mov
push
subl
dec
cmpsb
mov
test
or
int
mov
add
dec
bound
xorl
stc
or
enter
das
xor
pop
or
ret
push
int3
lea
mov
cmp
hlt
add
inc
gs
subl
and
jg
jae
jns
lret
cmp
data16
mov
icebp
in
sbb
cmp
pop
pop
pop
pop
and
test
insl
imul
aad
movsl
or
push
add
es
out
and
scas
es
pop
aaa
test
jb
loope
mov
push
iret
inc
push
mov
fwait
mov
xchg
xchg
mov
fiadds
sub
out
or
int3
xor
jb
adc
sbb
xor
mov
add
outsb
es
iret
imul
xor
pop
mov
mov
aam
jg
mov
repz
dec
and
cltd
adc
xchg
fiaddl
dec
in
mov
and
es
aaa
push
in
sub
loopne
pop
inc
pop
fldln2
xor
push
sub
or
test
out
outsl
pop
mov
in
cmp
pop
out
jae
push
xchg
adc
inc
mov
insl
in
mov
or
xor
outsb
push
iret
pop
out
into
out
cmp
push
subl
les
insl
loopne
or
lahf
icebp
pop
scas
enter
repnz
pop
xchg
mov
fwait
sub
mov
cmp
sub
pop
pop
enter
mov
arpl
and
jb
mov
mov
pop
cltd
into
lcall
fnsave
cmp
sbb
xchg
adc
push
test
cmp
mov
jmp
mov
loop
jns
pushl
test
pop
nop
mov
jg
or
push
add
fdivl
sbb
mull
movsb
xchg
gs
clc
xor
lahf
arpl
lods
adc
jbe
mov
in
pushf
or
aaa
inc
jne
or
out
loopne
pusha
mov
mov
cmp
addl
push
push
jg
jle
ret
lret
popa
cs
test
in
and
insb
add
adc
inc
shl
inc
lea
pop
sbb
mov
pop
lret
pop
ljmp
adc
lahf
jl
inc
jbe
xchg
dec
cmpsb
mov
push
cs
sti
pushf
push
dec
jo
or
repnz
addr16
cmp
sub
add
ds
mov
cs
mov
ss
jle
pop
adc
mov
mov
cmp
jno
lods
mov
cmp
jge
outsl
push
add
sbb
pop
cmp
push
cltd
mov
xchg
inc
xor
adc
xchg
adc
scas
ja
out
cmp
sbbb
std
mov
movsb
mov
stos
subl
mov
repz
in
pop
inc
sbb
test
mov
xchg
push
sbb
and
xchg
inc
inc
jbe
rolb
iret
sub
out
adc
call
ljmp
xchg
iret
out
pop
xor
out
push
out
notl
fs
lods
fdivrp
les
lods
sahf
ror
mov
int
pop
sub
repz
push
inc
testb
xlat
pop
and
jb
test
xchg
jg
push
xchg
mov
or
pushf
lahf
and
in
and
inc
inc
aas
sbb
daa
push
int3
add
and
pop
dec
cmp
fisttpll
cmc
rolb
fmuls
adc
mov
add
jle
imul
outsb
insb
sub
adc
aam
and
adc
adc
xchg
jno
sbb
jbe
inc
shrl
ja
mov
push
je
test
pushf
jb
jmp
and
out
sub
dec
or
xchg
push
dec
add
ret
pushf
stc
stos
mov
clc
mov
xor
lods
add
hlt
iret
adc
fistpll
fistpl
ljmp
xor
cmp
dec
insb
rorb
insb
out
cmp
call
and
xchg
test
pop
repz
sbb
dec
cmp
iret
jno
iret
cmp
push
sarl
stos
in
mov
stc
iret
mov
das
cli
scas
enter
mov
sbb
sub
in
adc
pop
and
or
sbb
rorl
pop
rcrb
pop
scas
adc
xor
cld
push
or
inc
mov
jmp
mov
fmull
mov
push
push
stc
shr
out
loopne
ss
in
xchg
lret
push
sbb
jnp
nop
cs
ljmp
mov
nop
nop
xlat
mov
inc
pop
pushf
mov
jle
arpl
popa
repz
movl
push
ret
fadd
xchg
popf
sub
or
pop
fcoml
pop
add
in
add
sub
or
dec
ror
test
sbb
mov
jnp
inc
dec
push
iret
add
mov
dec
sub
push
fwait
cmpsl
addr16
in
aaa
dec
test
mov
pop
mov
stos
cmovg
into
pushf
es
inc
imul
mov
push
push
repnz
jmp
pop
aam
jae
test
loop
and
push
inc
in
jno
add
cmc
aaa
shlb
push
adc
clc
mov
push
fcmovu
mov
pop
add
aam
jo
imul
rcrb
sarb
xor
push
adc
call
out
into
jge
fiaddl
pop
sub
arpl
mov
jnp
sub
pop
mov
loop
enter
jns
leave
icebp
jmp
dec
dec
sbb
and
sahf
inc
imul
inc
ljmp
or
ret
inc
lret
xchg
adc
sbb
mov
jb
dec
jo
inc
adc
mov
mov
pop
out
xchg
xchg
adc
inc
stos
mov
movsb
dec
fstl
and
xchg
add
jmp
inc
gs
arpl
mov
and
divb
div
mov
mov
decl
mov
fisttpl
cmpsl
mov
jg
hlt
enter
lods
mull
pop
push
ss
jbe
or
adc
sub
inc
adc
jns
xchg
out
test
sub
or
pop
lock
adc
mov
in
dec
test
mov
cmp
dec
aas
adc
outsb
ror
adc
push
scas
mov
push
jg
jae
mov
jbe
cmpsl
xchg
icebp
add
jmp
mov
mov
add
hlt
pusha
out
mov
dec
dec
in
mov
jg
loope
in
lock
mov
mov
ret
mov
xor
dec
jo
call
or
std
add
or
out
pop
fcmovne
mov
sbb
xor
je
lods
and
es
and
add
sarb
dec
sub
ret
pop
fs
bound
loop
and
imul
clc
cs
mov
out
pop
sub
dec
xor
xor
dec
adc
mov
xchg
xlat
rcll
mov
lret
and
leave
inc
movsl
frstor
pop
lret
les
jecxz
mov
mov
cs
test
xor
mov
mov
les
rolb
sub
test
mov
es
add
ret
jge
mov
movsb
jmp
pop
ficoml
std
push
add
std
popa
insb
pop
xlat
out
clc
jbe
pop
add
mov
inc
adc
fimull
and
fucomip
cmp
outsb
adc
push
xchg
push
in
dec
jno,pt
or
outsb
rcrb
dec
pop
add
fldenv
mov
push
pop
and
mov
mov
fwait
imul
inc
testb
inc
mov
xchg
pop
xchg
jmp
cld
mov
adc
rorb
dec
mov
stos
cmpsl
pxor
pop
pushf
daa
stos
es
or
clc
dec
ss
jnp
es
push
xchg
xlat
mov
mov
cmp
cmpsb
cld
out
push
fisttpll
xor
xorb
adc
pop
push
dec
xor
fnsave
adc
dec
cltd
lea
sahf
arpl
subb
dec
xor
arpl
sahf
in
iret
fdiv
in
or
pop
scas
mov
stos
cmpsl
adc
pop
shlb
dec
stos
push
sbb
push
sbb
js
adc
stos
shll
add
mov
enter
cwtl
push
pop
push
sub
cs
jne
cmpb
mov
sub
xchg
push
inc
cwtl
sub
mov
lea
mov
lds
adc
inc
icebp
js
ret
and
add
out
loopne
cld
subb
mov
pop
decl
jmp
pop
movsl
ljmp
push
out
aad
and
loopne
push
out
outsb
mov
mov
inc
nop
sub
outsb
rcr
xchg
adc
mov
pushf
cld
ss
sahf
and
push
mov
pop
movsb
push
mov
das
test
je
nop
pushf
mov
sub
lahf
mov
fxch
stos
outsl
ret
push
into
jns
push
imul
mov
or
stos
push
dec
mov
fcompp
push
push
jle
lahf
dec
lea
push
pushf
mov
or
js
nop
mov
or
hlt
pop
mov
lods
in
mov
shl
pop
cmp
xlat
and
fst
rcrb
popf
mov
dec
mov
scas
inc
outsb
insb
xor
jne
ja
jno
dec
mov
fs
cmp
call
daa
fwait
dec
pop
ds
and
cmc
in
jecxz
test
sub
imul
mov
mov
ret
sub
jne
xor
and
and
sub
testl
sbb
and
repnz
repz
cmp
mov
aaa
enter
hlt
push
mov
out
ret
pop
xchg
pushl
sbb
insl
or
sbbl
mov
shrl
push
dec
daa
mov
mov
mov
jl
cltd
sbb
and
or
testb
scas
rcrb
fmull
mov
sub
inc
push
adcl
popf
pop
mov
inc
popf
push
orl
cmpb
adc
jae
xchg
into
inc
jne
test
sub
lret
mov
sarb
insb
pop
dec
js
jecxz
pop
mov
mov
loop
aas
mov
xchg
sti
sbb
mov
or
cmp
out
movups
jb
das
fidivrl
in
mov
out
out
daa
sbb
jmp
add
cmp
inc
push
sub
aaa
xor
and
pop
pop
cmp
and
repz
or
jecxz
fidivrs
shll
cld
dec
outsl
and
stos
outsl
ret
xor
mov
jmp
push
lds
jle
push
jb
pop
jne
adc
cs
xchg
aam
sbb
in
jnp
imul
imul
pop
mov
add
add
adc
fstps
decb
push
cltd
nop
ret
sub
pop
mov
inc
mov
jge
sbb
scas
pop
aas
jmp
and
adc
scas
repnz
imul
adc
dec
aaa
mov
sub
movsb
adc
add
imul
inc
adc
mov
adc
xchg
imul
stos
fs
daa
jmp
filds
vfnmadd231ps
cmp
int
stos
push
in
xor
pop
mov
out
cmp
pushf
ret
into
aam
outsb
xor
cwtl
or
xchg
xlat
ljmp
sub
adc
or
sub
js
repnz
adc
xchg
lret
pop
pushf
mov
sti
in
shlb
bnd
into
lcall
scas
stc
sub
aas
push
xorb
cltd
adc
popf
inc
pop
stc
mov
mov
std
outsb
or
inc
and
aaa
cmp
sbb
cmp
adc
push
and
fdivrs
inc
out
test
xchg
loopne
jg
outsl
fdivrl
fcoml
cltd
fildl
jnp
cs
jne
lods
pop
mov
sarb
and
notb
lods
in
cmp
sbb
daa
cmp
mov
repnz
or
cmpsb
mov
sbb
add
lcall
pushf
fstp
fstp
imul
dec
inc
adc
addr16
dec
cmpsb
mov
cwtl
movsl
aas
ss
iret
adc
mov
mov
out
fidivrl
inc
pop
adc
imul
pushf
lcall
jne
cmpsl
mov
nop
pop
iret
jne
jecxz
rcrl
jbe
popf
ret
das
xchg
mov
mov
sub
mov
push
push
mov
jae
in
pop
xor
movntq
push
dec
js
daa
insb
mov
dec
pop
xlat
pop
dec
loopne
push
adc
insb
push
pop
lds
adc
mov
out
aad
pop
jg
mov
add
mov
test
mov
jb
inc
ret
push
pop
jo
cs
ret
dec
int
jg
aad
popf
mov
lock
in
idivl
cwtl
mov
rol
pop
aad
roll
lds
loope
pop
dec
ds
inc
inc
jecxz
repnz
xchg
sbb
sub
push
jmp
add
push
outsl
jno
add
int3
mov
cmp
xor
mov
jp
mov
xchg
push
adc
or
clc
xchg
xchg
adc
pop
mov
push
bound
arpl
add
int
adc
sub
in
out
pusha
mov
or
mov
mov
mov
xchg
int
mov
data16
add
xor
xor
cwtl
xor
lods
mov
mov
stos
push
jnp
fstps
fwait
sub
outsb
outsb
xchg
mov
xchg
dec
stos
or
fldcw
push
outsb
or
push
add
mov
rcrb
insl
ss
push
dec
lds
sbb
or
mov
lock
mov
scas
jo
shr
and
scas
lods
fstps
jnp,pt
cmpsl
stos
iret
mov
stc
cmp
jecxz
dec
adc
ret
xchg
clc
mov
and
mov
or
popa
or
int3
pop
fdivl
adcl
lods
inc
pusha
mov
inc
sub
loope
cmp
clc
outsl
cltd
mov
es
in
pop
xlat
cmp
andb
lods
sahf
sbb
sbb
add
xchg
mov
and
fsincos
dec
and
outsb
sbb
jecxz
aas
pop
jae
or
fstpt
jl
or
mov
pop
out
mov
dec
cmp
shrl
mov
pop
push
out
repnz
lahf
sbb
mov
push
ljmp
pop
xchg
in
sbb
cmpsl
pushf
sbb
sub
loop
iret
jno
mov
dec
test
push
not
mov
sahf
loopne
popf
dec
jmp
daa
mov
insl
mov
stos
outsb
sbb
rolb
stc
jns
cmp
or
sbb
push
jo
leave
mov
jae
inc
jns
pop
js
pop
adc
lock
out
jmp
fptan
xor
and
in
pop
push
inc
lcall
bnd
pop
loope
add
leave
mov
dec
sbb
imul
mov
std
or
ja
xchg
push
pop
fidivrs
aad
not
or
add
test
push
mov
fsubrs
js
scas
pop
mov
ljmpw
cmp
mov
push
push
loopne
lods
in
jl
imul
int3
push
jb
insl
jle
mov
scas
push
inc
mov
mov
mov
out
movsl
or
scas
das
inc
or
iret
jo
cmp
repz
xor
out
xor
loop
rclb
jmp
lret
orb
jb
sub
int
dec
pop
xchg
mov
pop
inc
in
push
pop
call
sbb
rcrl
push
icebp
sub
adc
sarl
dec
push
xlat
mov
and
adc
cld
test
push
out
mov
push
dec
push
inc
loopne
mov
and
inc
cmp
add
add
sbb
outsl
sarb
inc
jecxz
ja
add
jo
mov
mov
jecxz
xchg
test
js
test
outsl
inc
sub
inc
add
les
xchg
xorb
xor
dec
xor
or
inc
cmp
jae
sbb
mov
push
mov
cld
stc
mov
mov
push
mov
inc
fsubr
push
add
mov
dec
test
push
or
stos
test
mov
inc
mov
stos
aaa
cs
cmp
outsl
xchg
xor
pop
dec
or
xor
sub
lret
add
mov
cmp
js
sub
movsl
lods
out
inc
dec
dec
mov
js
and
popa
int3
push
sub
push
cmc
lds
or
inc
sbb
sahf
hlt
adc
sbb
popa
in
sbb
cmp
and
rclb
out
xor
cmp
sub
or
and
push
sub
das
cs
cld
cmpsl
jmp
jb
aam
mov
test
xor
loope
cmpsb
jle
mov
fwait
sub
jnp
stos
rolb
das
ljmp
or
ja
imul
int
out
or
and
test
clc
js
scas
imul
outsl
xor
js
data16
cmp
ficoml
pop
fimull
mov
add
or
mov
test
arpl
dec
mov
adc
inc
push
mov
sarb
roll
std
push
inc
push
inc
push
mov
out
sub
out
inc
mov
stos
lods
lods
adc
mov
mov
cmp
mov
cmpsb
jo
jecxz
sub
cmp
or
push
mov
in
cld
push
xchg
jae
dec
popf
jmp
jb
inc
jecxz
test
out
out
sti
ja
icebp
jo
xchg
xchg
jp
stc
xchg
adc
aaa
or
addr16
jl,pn
in
sti
in
imul
dec
cmp
cmpb
les
cmp
insb
sahf
lea
add
shl
mov
add
movsb
or
popa
and
dec
aam
pop
and
stos
cmp
mov
and
call
les
dec
fwait
add
jns
stos
or
insb
sbb
in
xor
pop
xor
lcall
xor
pop
out
shll
push
sub
inc
inc
mulb
mov
clc
lcall
and
pop
and
cs
xor
mov
sbb
loop
cmp
and
mov
xor
jbe
lds
in
push
outsl
es
pusha
sub
jo
jge
mov
xchg
pushf
ds
push
int3
and
push
or
mov
jecxz
adc
sbb
adc
inc
ret
dec
sbb
scas
pusha
dec
push
aad
in
lret
jl
imul
xlat
pop
xchg
testb
int3
and
push
stc
inc
mov
insb
cmovns
adc
add
and
dec
sbb
push
cltd
cmpsb
lcall
cmp
das
stos
add
lock
jns
scas
dec
push
scas
fs
mov
bnd
pushf
sub
lahf
push
cmpl
stc
push
push
mov
scas
cmp
repz
mov
ljmp
test
ret
mov
imull
cmp
scas
push
mov
sub
sub
shlb
fisttpll
iret
mov
push
push
push
jl
pop
cld
sbb
sti
filds
bound
loope
adc
cmp
sbb
xor
xchg
or
push
jae
cmpsl
fisubrl
xchg
mov
les
sbb
popa
pop
adc
bound
add
pop
out
cltd
subb
jge
out
jecxz
xchg
push
orb
rcrl
pop
xchg
jb
xor
leave
jns
mov
sub
inc
insb
jbe
sbbb
jmp
push
pop
xchg
sub
shrb
repnz
stos
test
jmp
jecxz
cmp
jecxz
cmp
cmpxchg
mov
notb
popa
rcl
xor
out
mov
int3
shlb
add
enter
rcrl
and
mov
sbb
repz
out
mov
incb
pushf
sub
push
or
fcmovnu
movsb
mov
inc
inc
ret
pop
cmpsl
into
inc
inc
scas
scas
call
push
xor
out
pop
push
jp
movsb
jmp
and
rcrb
insb
mov
into
psubw
sub
xchg
adc
pop
cld
aaa
push
inc
fmulp
xchg
scas
add
fwait
push
sub
xor
mov
int3
and
jp
jo
idivl
add
xchg
pop
mov
stos
test
jecxz
mov
push
iret
adc
popl
xchg
mov
into
enter
mov
mov
mov
aas
pushf
jecxz
dec
roll
int
adc
mov
icebp
and
push
xor
or
pop
outsb
adc
out
dec
add
mov
cwtl
or
adc
and
mov
jp
pop
fsubrs
in
repz
or
call
outsl
movsb
lds
sahf
add
lret
jmp
dec
movsb
rol
push
adc
adc
lret
pop
repnz
cltd
icebp
dec
fcoms
jno
mov
ja
jbe
jg
jg
lock
aam
repnz
stos
icebp
in
mov
les
pushf
or
push
adc
dec
xor
hlt
and
test
xchg
pop
into
fcoms
pop
aaa
repz
sbb
loope
jmp
rep
lahf
and
mov
jg
jne
mov
dec
arpl
leave
or
hlt
lret
push
sub
test
mov
inc
lret
arpl
mov
sub
inc
sub
pop
dec
xchg
mov
jl
mov
ret
jb
pop
inc
pop
sub
or
addl
sahf
daa
shrb
add
idiv
fs
jmp
push
arpl
les
jle
cmp
inc
xorb
test
into
ljmp
test
push
xchg
in
je
or
jg
sahf
les
std
and
leave
aad
jne
cmp
xchg
pop
call
popf
scas
insb
cmovs
or
test
stc
and
insl
and
aam
add
movsb
add
sub
jl
xor
test
arpl
mov
cld
aas
sbb
hlt
scas
dec
pop
insb
jl
aaa
int3
or
flds
into
xlat
mov
push
sub
and
push
lahf
lret
jno
es
sub
sub
adc
mov
pop
setg
sub
inc
mov
and
or
pop
mov
dec
mov
movsb
and
mov
sub
mov
js
test
loope
sbb
ficompl
mov
push
add
adc
adc
push
xor
sub
test
sahf
push
and
fmul
xchg
xchg
lret
int3
mov
popa
cmp
dec
or
mov
mov
cwtl
jmp
inc
int3
jne
bound
push
fisubrs
pop
test
gs
mov
push
in
int3
inc
or
imul
xchg
add
xlat
popa
xor
aad
adc
adc
fisubs
lods
xchg
fwait
out
cmp
lea
xchg
cmovnp
ret
push
std
mov
jo
adc
adc
out
stos
and
je
aas
cli
jo
xchg
or
adc
es
insl
mov
fcomps
inc
out
leave
lods
cmp
adc
lea
jb
mov
rcll
dec
cmp
pop
ja
ss
fs
leave
xchg
adcl
xchg
mov
pop
jno
lret
sub
fbld
sub
in
mov
stos
filds
pop
adc
pushf
gs
testl
ret
mov
or
fs
out
jecxz
dec
inc
out
add
sub
jbe
cmpsl
adc
dec
lea
pusha
mov
movl
filds
lods
cld
ret
fistl
xchg
arpl
jo
mov
push
in
ret
dec
inc
mov
sbb
sub
jnp
mov
cmp
mov
jge
ds
out
xchg
mov
add
and
mov
jno
or
aad
xchg
mov
out
repz
and
mov
inc
xchg
mov
dec
or
movsb
push
cmp
dec
jne
test
cmpsl
addr16
pop
xchg
shl
mov
shlb
movsl
mov
mov
xchg
sub
ljmp
pusha
mov
push
lock
scas
xor
push
in
test
adc
idiv
lcall
inc
movsl
mov
sarl
mov
pop
pusha
sbb
cmp
stos
sahf
sub
into
fadd
sahf
ljmp
cltd
xchg
pop
popa
xchg
rorl
push
rorl
loope
clc
in
jle
mov
rcrb
or
pop
lret
and
or
fs
mov
in
in
stos
leave
cmp
in
fwait
into
mov
cmp
das
sbb
cmpsb
ss
mov
lock
stos
pusha
pop
cmp
arpl
cmc
ret
gs
inc
cmp
js
out
push
push
xor
cli
pop
daa
push
mov
push
mov
mov
sub
cmp
imul
sub
insl
fnstcw
jno
cld
cs
mov
mov
out
push
and
push
mov
jbe,pt
dec
mov
es
fwait
lahf
int
xlat
add
mov
add
clc
and
mov
push
adc
jns
in
mov
or
outsb
and
ds
in
inc
cs
mov
xchg
dec
adc
in
and
xchg
xchg
insl
mov
andb
sub
into
mov
ja
jge
and
dec
or
or
mov
xchg
arpl
arpl
inc
int
mov
mov
jl
nop
lods
das
mov
or
jns
inc
insb
test
ret
out
mov
fwait
icebp
jne
mov
ljmp
dec
cltd
add
shll
popw
dec
cli
inc
pop
jno
lahf
add
ret
push
push
popf
and
rcrl
loop
mov
adc
shl
mov
inc
cmp
mov
out
or
cld
cmp
std
fisubrl
adc
in
pop
in
loop
fnstcw
insb
push
pop
push
add
and
out
enter
and
aaa
into
repnz
or
sub
push
dec
inc
rcrl
ret
sbb
mov
xchg
nop
fldt
add
fmul
cmpsl
sub
dec
pause
cli
mov
stos
std
sbb
loop
adc
add
xchg
cs
push
testl
lods
push
aam
subl
stc
inc
lcall
inc
bnd
aam
xchg
aas
pop
lock
xchg
push
jne
add
xor
fdivs
jne
pop
or
sub
xchg
and
jl
sub
xor
xchg
dec
push
push
lret
sub
mov
pop
mov
nop
lret
xchg
dec
mov
sbb
add
cmp
push
ds
inc
in
fwait
test
or
or
arpl
addl
orl
or
jmp
fdivrl
iret
rorb
in
les
inc
mov
mov
int
movb
fadd
mov
sbb
inc
shlb
cli
std
mov
mov
fldl
test
mov
push
pop
cmc
push
ficomps
push
mov
mov
fisubl
insb
add
xchg
jl
daa
mov
test
in
xchg
movsb
pop
enter
cld
sahf
mov
roll
fdivrl
xor
xchg
arpl
xchg
xchg
xor
insl
repz
outsl
xor
push
fcomp
and
test
in
mov
adc
pop
jmp
push
inc
jno
fidivl
test
shll
pop
cmp
arpl
rorb
add
mov
pop
jecxz
shrb
or
inc
mov
es
jecxz
aaa
fwait
insb
in
cli
inc
mov
cmp
and
sub
lods
and
mov
jbe
add
xor
sbb
inc
test
jns
cltd
mov
jb
shlb
and
xchg
mov
ss
cmp
mov
les
dec
sub
mov
ds
into
cwtl
shll
push
jns
xchg
or
jg
cmp
push
jnp
xor
sbb
iret
sahf
stos
ds
lock
mov
mov
pop
std
les
mov
jp
aaa
xchg
int
popf
push
add
pop
repnz
push
roll
add
adc
push
xchg
mov
call
cmp
fs
xlat
lcall
ljmp
adc
bound
addr16
jg
push
and
mov
sti
sti
in
jae
int
xor
shrl
decl
ja
cmp
push
sahf
mov
pusha
enter
mov
mov
pop
mov
lcall
dec
sbb
sbb
cmp
mov
shlb
dec
imul
fildll
fwait
outsb
jmp
inc
cld
cwtl
xchg
dec
mov
outsl
mov
mov
imul
mov
loop
ljmp
dec
je
ret
scas
adc
push
sub
and
mov
ret
lret
fldl
sub
push
inc
pushf
xchg
push
popa
pop
dec
loope
lahf
stos
jo
sub
pusha
xor
inc
add
mov
xlat
pop
push
popf
fstpl
imul
daa
outsb
repz
jle
stc
mov
xchg
adc
cmp
out
adc
sbb
sbb
mov
clc
ror
inc
popf
jl
mov
lods
mov
jae
mov
pop
mov
push
xchg
push
cmpsb
pop
fistps
mov
fcomps
fbstp
shll
lods
sub
xchg
sub
push
cltd
dec
out
xchg
jmp
or
dec
testl
jbe
jb
pop
jge
jne
dec
in
es
rolb
loopne
loop
push
insb
pop
mov
add
ss
gs
xor
cmc
imul
sbb
cmp
and
mov
xchg
add
enter
xchg
xor
jle
and
inc
xor
cmp
cli
sahf
arpl
mov
mov
dec
test
aas
lahf
jl
adc
cmpsb
lea
lods
add
fs
pop
sbb
jno
shlb
int3
mov
push
or
mov
stos
sub
xor
mov
lea
sarb
xchg
pop
icebp
lcall
cmp
pop
pop
mov
xchg
or
daa
mov
xchg
xchg
add
pop
push
std
cmp
xlat
cwtl
jecxz
out
push
cmp
lahf
dec
xor
shrb
xlat
push
rclb
pop
push
xchg
dec
mov
pop
sahf
jnp
and
mov
call
lock
sub
xchg
mov
xchg
roll
pop
mov
bound
out
mov
loop
andb
push
scas
mov
fisubl
aas
or
aas
mov
aas
scas
aad
lods
add
xor
jl
jno
and
jge
hlt
inc
incl
mov
data16
cmp
add
mov
lret
sub
push
negl
jmp
cld
cmp
out
rol
jp
add
testb
jbe
sarb
xor
ret
and
pop
aas
cltd
in
mov
push
stos
adc
pop
mov
lahf
je
aaa
or
mov
fcomip
lods
dec
movsl
out
fucomi
mov
lcall
dec
sbb
inc
cmpsl
in
sbb
jecxz
adcl
movsl
test
dec
aad
mov
cmpsl
or
xlat
scas
or
mov
mov
lahf
sbb
ja
aaa
dec
int3
imul
ret
insl
dec
pop
cmpl
mov
jecxz
clc
xchg
xor
dec
ret
sub
fwait
xchg
jle
sub
in
xchg
pop
pusha
pop
fiaddl
jl
push
lock
imul
add
xor
ss
iret
pop
addr16
les
cmc
test
sbb
jb
push
out
jp
out
divl
push
out
je
icebp
sub
dec
sub
ss
mov
or
cwtl
loop
mov
outsl
cmp
outsb
push
outsb
out
push
test
mov
inc
pop
shl
jmp
xor
sbb
jno
insl
rorl
lret
movl
sbb
fstpt
dec
imul
cltd
mov
sbb
pop
pop
aad
in
push
and
leave
jb
xor
mov
lods
mov
test
test
scas
lock
mov
pop
ret
ficomps
inc
xchg
pop
add
lds
mov
in
cmp
testl
clc
push
into
pop
pop
mov
mov
scas
jo
mov
sub
imul
mov
xchg
fidivrl
rorb
mov
imul
fldl
xchg
movsl
sub
dec
popf
xor
test
pop
icebp
adc
andl
push
in
movsb
ret
xchg
dec
movsb
add
daa
pop
aam
xor
sti
test
pop
stos
xchg
fcompl
dec
fldl
xchg
enter
in
mov
adc
sbb
cltd
outsb
and
insb
sub
and
popa
fmul
cli
xchg
fwait
inc
in
mov
sub
lea
cmp
ret
mov
fadd
mov
movsb
cmpsl
add
mov
or
dec
add
addl
lahf
sbb
push
aam
outsb
cli
scas
inc
mov
cmp
daa
inc
sbb
or
fbld
sbb
daa
push
jno
dec
fbld
cmpl
jl
daa
shll
pop
outsb
push
jmp
pop
mov
orb
iret
pop
repz
pop
mov
inc
shr
test
mov
pop
mov
sbb
out
mov
mov
push
imul
in
and
add
jb
mov
push
jmp
jle
enter
or
in
imull
mov
aam
test
loop
inc
ret
movsb
jo
aad
add
in
pop
sbb
lea
test
sbb
sbb
cmp
and
pop
mov
test
adc
lods
jno
inc
fsubl
les
add
sub
call
sub
aaa
and
pushf
cmp
push
add
lret
xchg
addl
sahf
mov
sbb
cwtl
sbb
pop
and
sarb
lcall
out
mov
sbb
in
js
mov
cli
dec
pop
in
sub
push
popf
pop
pop
xchg
jmp
js
push
test
sub
xor
add
clc
or
testl
popf
out
iret
jo
add
mov
inc
pop
push
subl
xor
xchg
fwait
mov
inc
push
loopne
rolb
mov
inc
cwtl
cltd
mov
inc
mov
imul
cli
push
or
xcrypt-ecb
cmpsl
or
xlat
std
sbb
sbb
mov
test
dec
jnp
jle
repz
into
jp
lock
sbb
adc
and
test
and
mov
mov
loop
iret
imul
sahf
js
mov
orl
push
and
stc
add
inc
addl
cmp
aaa
nop
push
xor
jae
jbe
mov
imul
push
and
mov
cmp
and
lcall
mov
ret
enter
mov
ror
jae
xor
iret
or
shl
add
adc
les
shrl
js
les
and
into
and
add
mov
gs
shll
jne
dec
pop
inc
push
dec
dec
jl
scas
or
inc
jns
xchg
sbb
add
mov
xor
mov
mov
push
dec
xchg
lods
rolb
repz
pop
jae
adc
jecxz
xor
movsl
movsb
sbb
mov
rolb
push
scas
or
push
das
aas
mov
fadd
scas
push
pop
scas
fmuls
dec
xrelease
ret
push
inc
xchg
lret
cld
sub
scas
sub
aas
cs
mull
repz
out
mov
bts
mov
push
and
push
push
adc
xor
xchg
jecxz
or
mov
decb
cs
pop
aas
cmpsl
out
andl
sub
ficoml
push
mov
insl
aad
out
popa
imull
pop
adc
push
sti
mov
in
or
les
xor
xor
in
or
mov
scas
add
dec
sahf
adc
mov
jns
jae
push
cmpsl
mov
inc
testb
adc
xlat
xchg
push
xchg
pushf
aaa
mov
inc
and
pop
pop
pop
push
enter
in
cmp
inc
adc
nop
out
dec
pop
jmp
mov
sti
xor
testl
and
sub
out
adc
add
jge
sbb
xchg
sahf
jecxz
xorb
stc
cmp
jns
je
cmp
mov
jne
cltd
cs
inc
pop
outsb
shll
ret
sti
fcomp
or
mov
or
jnp
cmp
aaa
shlb
test
sbb
pop
popf
xchg
scas
movsb
xor
dec
xor
mov
pushf
gs
arpl
adc
adc
in
or
jle
jge
into
jmp
inc
lcall
in
adc
pop
inc
cmp
xchg
repnz
xchg
sarb
add
and
pop
or
xor
gs
or
inc
sbb
push
out
sbb
push
fs
idivl
jbe
add
or
mov
sub
pop
leave
stos
and
push
ss
add
adc
mov
add
or
fisttpl
hlt
jecxz
inc
or
pop
pop
mov
adc
loop
shll
dec
mov
popf
in
xchg
in
lods
outsb
add
stos
sub
clc
mov
xor
lret
ret
dec
push
scas
pop
push
dec
rorl
aaa
add
pop
xor
pop
mov
movsb
pop
fisubl
and
ljmp
scas
dec
mov
push
lds
push
adc
and
leave
loopne
popa
dec
mov
ficomps
pushf
sub
sub
mov
or
lock
test
cmp
jnp
mov
lahf
cltd
pop
loope
popf
insb
mov
jo
dec
leave
cmp
adc
aad
enter
lods
jo
ljmp
clc
push
stos
add
subl
cs
xchg
sarl
hlt
pop
cmpsb
mov
fistpl
xlat
sbb
cmp
sahf
orb
call
adc
popf
gs
pop
cmp
mov
mov
inc
mov
je
insl
test
push
sti
ret
adc
outsb
mov
jnp
arpl
loope
cmp
add
xor
sub
cld
xchg
adc
and
xchg
push
jb
mov
xor
push
dec
adc
sub
dec
imul
test
mov
mov
imul
push
adc
mov
mov
push
sbb
data16
jp
mov
push
ja
insb
leave
fdivrs
cmp
dec
pop
lret
and
adc
jecxz
cltd
out
out
adc
insb
out
xor
cmp
sahf
loopne
frstor
adc
insl
loope
repz
fwait
jge
roll
je
in
add
addr16
push
sub
fdivrl
andb
jns
pop
mov
cmp
or
cmp
cmp
sub
xor
sbb
int3
dec
mov
jno
or
pop
rcl
push
lds
cmpsl
loope
popl
sub
xor
dec
mov
add
sub
jnp
dec
push
jg
sarl
sbb
mov
out
lock
mov
divb
insl
aad
adc
dec
push
jbe
jp
fimuls
es
cmp
lds
mov
or
cli
insl
cmp
bnd
and
lods
fnstsw
jle
in
ds
popf
push
push
or
jle
cwtl
int3
subl
cmp
cmc
mov
repz
lods
xchg
mov
xchg
popa
and
mov
outsb
mov
pop
je
lods
nop
jecxz
sub
fwait
xchg
aas
dec
cli
movsl
lock
decb
aam
add
jne
jg
in
or
pop
dec
inc
push
insl
ja
xor
push
mov
jb
lret
sub
js
pop
add
sbb
jmp
xchg
subl
xchg
dec
shl
idivl
lret
repz
or
push
sbbb
test
insl
seta
jmp
aas
jp
icebp
subl
adc
mov
sarb
xor
iret
dec
mov
sub
fists
cld
addb
fwait
fwait
pushf
mov
lret
mov
cltd
ffree
pushf
imul
xor
jl
ret
mov
sbb
loopne
add
aaa
mov
xchg
movsb
push
in
mov
jmp
insl
stos
inc
repnz
test
xchg
xchg
and
js
iret
mov
pop
inc
movsl
mov
adc
movb
pop
mov
cmc
mov
mov
imul
adc
shll
push
jg
inc
ret
lods
popa
ss
mov
add
stos
popf
xor
loopne
imulb
addr16
xchg
shlb
lret
mov
push
pop
add
pop
adc
int
push
cwtl
lock
dec
dec
cmpl
or
ror
mov
jl
nop
xchg
dec
fldcw
xor
ret
mov
mov
mov
inc
mov
clc
lods
push
insl
iret
push
adc
pop
xchg
test
ja
orl
mov
push
dec
jae
xor
out
adc
cmp
andb
mov
push
xor
xor
push
and
push
jecxz
icebp
pusha
xchg
shlb
stc
sbb
hlt
fistpll
push
test
movsb
pop
stos
cmpsl
xor
sub
in
mov
fwait
mov
adc
jns
and
ja
pop
push
xchg
sarl
xchg
xchg
mov
aam
and
mov
andb
imul
add
and
repz
adc
push
xor
push
in
fdiv
xchg
mov
or
les
sub
push
movsb
and
mov
and
bound
push
sub
xchg
xchg
add
adc
adc
sub
dec
jne
mov
inc
sub
sti
dec
and
xor
stos
push
dec
out
push
xchg
cli
fwait
mov
pop
mov
sbbb
test
lcall
sub
or
mov
in
divb
jae
stos
popa
adc
push
lret
aas
mov
adc
scas
sub
imul
nop
add
adc
popf
gs
insl
and
outsb
in
mov
aaa
adc
mov
and
cmp
mov
mov
inc
jecxz
mov
lret
jl
pop
bnd
mov
inc
shlb
xor
outsl
sub
pop
jl
sub
add
lods
xchg
or
frstor
arpl
iret
in
movsb
sub
add
jns
stc
lret
add
les
sbb
mov
xor
xlat
rolb
es
mov
popa
addr16
add
inc
add
mov
pop
sub
mov
fptan
test
add
and
addl
cli
test
das
sub
inc
shlb
jno
testl
pop
fildl
mov
mov
cltd
mov
mov
jb
int3
xchg
stos
leave
leave
nop
mov
imul
sub
sub
hlt
or
daa
or
test
popf
jp
pop
and
adc
mov
stos
movsl
ret
push
cmpsl
lock
sti
mov
xchg
sbb
mov
pop
xor
lods
cmp
jge
sbb
mov
cmp
mov
xchg
add
or
push
xchg
xchg
pop
enter
leave
out
scas
dec
jae
loopne
jmp
into
icebp
pop
mov
bound
scas
cmpsl
int
arpl
test
xor
jno
adc
pop
repnz
adc
xchg
lods
test
out
cltd
cmp
add
push
into
inc
inc
adc
sahf
xor
mov
sub
jp
adc
jg
dec
cmp
lods
pusha
sbb
sar
xor
and
dec
pop
outsl
data16
and
mov
call
add
bound
mov
dec
je
mov
mov
dec
enter
mov
adc
lock
das
clc
out
popw
xorb
mov
push
fidivrl
push
sub
mov
mov
mov
pusha
filds
pusha
shl
or
push
push
iret
mov
in
mov
scas
mov
push
push
mov
popa
fisubl
subl
cmp
dec
fs
push
test
maxps
shll
icebp
mov
sub
adc
lcall
ja
inc
in
movsl
jl
and
iret
inc
add
inc
mov
adc
sub
adc
inc
mull
push
hlt
aaa
rclb
dec
push
mov
jno
test
pop
js
xor
sbb
xchg
rorb
jbe
in
dec
fldcw
mov
pop
jae
lret
inc
xor
xor
orb
adcb
ret
or
popa
and
mov
stc
into
fs
rclb
xchg
mov
lods
imull
daa
push
jmp
shll
andl
pop
mov
and
cmpsl
call
mov
mov
mov
ffreep
inc
jg
cmpsl
fisubs
outsb
pushl
jnp
hlt
inc
xchg
xor
cmpsb
lea
mov
mov
out
mov
fsubl
mov
cmp
or
inc
pop
aam
or
xchg
dec
dec
mov
pop
out
push
xchg
fldl
add
cmp
repnz
pop
daa
and
jle
sub
das
push
aaa
in
int
lret
out
push
inc
outsl
shlb
and
stos
fwait
popf
outsl
not
icebp
movsb
fsts
push
not
ja
hlt
mov
add
jbe
sub
pushf
test
int
addr16
push
cltd
mov
hlt
mov
mov
mov
das
add
lock
icebp
and
inc
lods
shll
inc
dec
int
add
sahf
push
rcrl
cmp
fs
xchg
adc
add
jnp
ficoml
sbb
mov
rolb
jmp
sub
add
loop
pop
cmpsl
mov
and
out
rorb
sub
mov
scas
ret
cmpb
xlat
imul
pop
iret
or
xor
popa
dec
xchg
dec
aad
hlt
rolb
ret
or
movsb
adc
imul
stos
test
pop
loop
sbb
popa
jb
iret
mov
mov
sahf
addb
mov
mov
pop
dec
enter
xor
pop
stc
andb
nop
inc
arpl
mov
mov
rep
jns
and
ljmp
fisttpl
mov
push
js
cmpsb
out
jle
out
sub
mov
addb
scas
inc
cmp
sub
cmp
add
xchg
pop
lock
fdivrs
iret
and
fsubl
push
mov
aas
sub
sub
int3
imul
scas
jbe
sbb
int3
int3
xchg
jp
sub
sar
add
aas
fstl
adcl
lahf
adc
mov
jns
cli
xor
and
int3
int
adc
popf
mov
flds
roll
xchg
push
out
mov
xor
push
mov
cwtl
mov
test
fldt
xchg
sub
jmp
push
or
popa
sbb
jns
xchg
testl
ds
cmpsl
push
jmp
into
lcall
cmp
lock
or
xchg
icebp
cwtl
gs
es
shl
clc
outsb
repnz
mov
testl
inc
mov
cmp
fcomp
and
fbstp
add
aas
sahf
mov
mov
hlt
ror
pushf
int
lret
stos
outsb
scas
jo
aaa
xor
mov
mov
outsb
xor
mov
jge
sub
jbe
test
sub
mov
sbb
xchg
loope
dec
es
shll
mov
fwait
loop
inc
adcl
inc
daa
pusha
outsl
sahf
lcall
cmc
les
jmp
das
xchg
imul
mov
adc
mov
stos
jl
jno
insl
cld
cmpsl
out
pusha
imul
xchg
mov
inc
sub
jp
jmp
or
mov
xor
ret
and
xchg
test
insl
push
in
stos
ljmp
imull
cli
sub
xor
pop
and
push
mov
push
mov
dec
cmpsl
testl
imul
int3
testl
adc
inc
and
scas
dec
push
pop
xchg
mov
or
iret
push
pop
xchg
sub
pop
shrl
sub
lods
sub
adc
cmpsl
xchg
rep
mov
dec
mov
jb
cmp
int3
stc
arpl
jo
dec
push
xchg
dec
jp
clc
pop
mov
scas
push
cmpl
pop
mov
mov
pop
out
imul
cmp
pushf
ret
mov
sahf
movl
lcall
or
sub
lret
cmpsb
lahf
leave
mov
sub
inc
mov
js
loope
ret
ret
mov
stc
and
in
push
mov
in
xchg
lret
or
adc
mov
daa
sub
pusha
push
das
sahf
push
adc
add
ret
lods
repnz
or
stos
out
jno
popf
pop
xchg
loope
xchg
sbb
in
xchg
xorb
sub
dec
std
movsb
fwait
xchg
fdivrl
std
mov
mov
int3
pusha
add
adc
pushf
mov
jg
xor
jb
int3
inc
dec
cmc
fldz
es
inc
lret
adc
and
mov
xorl
int3
sub
add
adc
aas
jmp
dec
stc
mov
das
mov
into
repnz
fdivrs
repz
shll
aas
mov
jno
sbb
je
mov
jg
pop
push
in
sbb
cmp
cmp
or
sbb
pop
jns
int3
inc
mov
fimuls
ret
xor
dec
and
push
insl
rcl
lea
inc
jg
push
out
mov
lods
cmpsb
add
fbstp
jb
shll
in
mov
stos
push
xor
xchg
leave
jle
mov
or
dec
sub
push
pop
cmp
fcoms
ds
sahf
insb
add
inc
xchg
out
jl
dec
xchg
outsb
popa
jg
add
lret
lods
push
sub
fsubrs
in
adcl
dec
out
out
enter
jg
clc
jp
repz
mov
in
jmp
sahf
clc
mov
pop
cli
stos
pop
push
ret
or
add
popf
pop
sub
mov
pop
movsb
into
sbb
test
ss
cmc
leave
and
pop
xchg
push
push
sub
shlb
mov
insl
xor
cmp
push
dec
rcrl
xcrypt-ecb
cmpsl
dec
arpl
repz
out
and
out
xor
sti
push
jnp
sti
nop
and
xor
inc
scas
xor
ds
scas
rclb
sbbl
dec
in
fisubl
xchg
xchg
fnsave
dec
and
sbbl
inc
mov
cmp
je
incl
orb
lret
or
repnz
mov
mov
push
xchg
xchg
sub
in
push
ljmp
rorb
mov
or
jle
scas
cltd
cmp
adc
sarl
and
cmpsl
aam
mov
mov
inc
clc
xor
mov
mov
arpl
fstl
ror
cmpsb
repnz
addl
sub
scas
and
push
dec
mov
pop
ljmp
in
sahf
out
call
ja
loopne
cltd
imul
aam
mov
popf
subb
xchg
inc
mov
and
adc
jp
pusha
mov
dec
dec
or
movsl
movsl
jp
and
push
arpl
cmpsb
dec
cs
sbb
pop
inc
push
push
je
out
inc
and
cmpsb
cwtl
in
inc
and
add
sti
sub
mov
mov
cmp
and
add
xchg
out
fcomps
push
repnz
bound
jl
jge
mov
cmp
push
or
cs
mov
cmp
push
pop
ret
fistps
outsb
in
or
inc
jbe
cmp
cwtl
fadds
mov
mov
push
cmp
cmpsl
mov
inc
lcall
jmp
stos
mov
jge
push
out
cmp
jge
sti
mov
lcall
fcmovbe
imull
jns
lock
add
imul
mov
movb
decb
push
xchg
push
lds
adc
test
sbb
sti
xchg
cmc
cmc
add
pop
jmp
xchg
cld
mov
jge
clc
ljmp
adc
sbb
call
imul
fs
mov
arpl
dec
fcoml
mov
fwait
sub
filds
arpl
dec
into
outsl
push
ret
and
mov
lret
xchg
ss
bnd
rcrb
gs
ja
pop
lret
jbe
cmp
mov
popl
mov
shl
filds
fcompl
adc
pop
push
ds
jge
sbb
call
inc
mov
or
stos
call
xlat
out
pop
mov
push
push
cli
xor
loopne
addr16
mov
stos
push
or
mov
decl
sbb
inc
faddp
add
out
adc
mov
imul
mov
jg
leave
adc
dec
repz
cmpsl
dec
outsl
dec
rorb
sbb
mov
sub
adc
xchg
push
nop
loopne
mov
hlt
xchg
aas
aad
jbe
and
inc
push
mov
out
cld
lret
in
inc
lret
shr
je
cmp
int3
cmp
movsb
shll
or
fucomi
mov
imulb
cmp
pop
push
rolb
insb
pop
fstpt
ret
lods
push
addr16
scas
and
mov
jne
imul
cld
mov
jp
das
mov
cmp
std
xor
bound
notb
inc
fisubl
lret
pop
add
stc
jl
shll
cmp
inc
adc
in
lods
mov
cmp
popa
sbb
fisubs
inc
fldenv
inc
mov
inc
jg
cs
into
mov
lahf
lods
rorb
cmp
in
bound
rorb
fstl
scas
fsubrs
scas
dec
addr16
daa
or
gs
xchg
pop
mov
xchg
adc
add
pop
test
aam
stos
fistpl
mov
fimull
mov
jmp
lret
ret
dec
xor
adc
or
mov
mov
mov
push
cmp
lock
jl
fists
dec
dec
fwait
push
adc
or
dec
test
add
sub
and
sub
movsl
mov
dec
push
sarb
ds
push
cmpsb
add
ljmp
mov
xchg
mov
pop
and
xchg
mov
stos
lret
sbb
cmp
add
loope
push
pop
adc
aad
cwtl
insl
enter
inc
mov
iret
inc
mov
fnstenv
pop
movsl
fmul
in
add
add
push
jae
mov
push
cmpsl
push
int
in
mov
jae
aaa
or
dec
stc
outsb
jae
leave
xor
push
cmp
cmp
jp
clc
lds
jo
pop
popf
add
sub
scas
dec
push
out
push
cmp
leave
jecxz
dec
fcoml
pop
xchg
bound
sub
inc
nop
mov
mov
test
in
jmp
lcall
sbb
leave
xlat
lds
xchg
pop
daa
xor
shrl
mov
dec
cmp
inc
popf
sub
sub
aam
push
push
push
lods
and
es
cmp
es
movsl
data16
jnp
cmp
out
gs
lods
cmpsl
cwtl
incb
sbb
aas
or
scas
sub
fs
rcll
push
ds
arpl
sub
cmpsb
sub
cmp
jge
dec
in
or
pop
sbb
cmp
and
stos
outsb
je
fistps
loop
pop
push
dec
jae
lds
daa
test
xor
add
push
bound
fisttpll
bound
adc
sub
sub
push
mov
mov
in
fnstsw
push
cmp
mov
repz
nop
loope
add
mov
mov
in
movsb
rclb
jle
sbb
adc
mov
imul
data16
insb
das
pop
adc
xor
sbb
sbb
sub
mov
stc
or
in
dec
mov
cmp
xchg
and
cltd
in
jmp
aam
orb
stc
pusha
xor
imul
mov
out
push
cli
or
aaa
lahf
movsb
cmpsb
test
sahf
adc
adc
push
adc
adc
in
pop
mov
adc
icebp
fcoms
fs
push
popf
add
scas
push
test
inc
sub
imul
inc
movsb
mov
xchg
dec
dec
movsb
mov
mov
test
pop
into
mov
push
mov
ss
lret
inc
loope
ret
pop
mov
mov
inc
or
mov
pushf
push
flds
sti
mov
ret
push
stos
adc
into
mov
mov
adc
mov
push
push
aam
sub
stc
jge
pusha
lahf
and
dec
cmp
fdivrp
lahf
insl
gs
rcr
dec
cmpsb
addb
inc
adc
mov
jne
rorb
mov
js
xchg
fdivrp
add
dec
add
inc
inc
push
in
dec
mov
sahf
xchg
and
shrb
sarl
dec
jg
data16
pop
mov
xor
mov
and
sahf
shl
data16
sbb
jns
das
sahf
inc
aam
dec
or
loop
scas
rolb
int
out
nop
insb
out
out
sbb
mov
cli
jge
imul
adc
mov
adc
outsl
dec
out
mov
mov
insb
shl
mov
cmp
in
popf
in
push
arpl
add
sbb
cmp
xor
push
push
adc
add
and
dec
fmul
adc
mov
xor
mov
addl
loopne
inc
je
aam
sub
xor
fsub
mov
jge
ljmp
mov
push
insl
jnp
add
inc
popa
or
out
aas
fsubl
outsl
jecxz
xor
cld
or
sahf
cmp
mov
mov
xchg
mov
mov
dec
fs
je
xchg
iret
pop
ficoms
stc
adcb
sub
add
filds
mov
fwait
adc
jmp
and
push
add
adc
mov
dec
mov
div
mov
adc
loop
pop
push
popa
in
pop
inc
ret
cmp
add
or
movsl
adc
xor
lds
xchg
cwtl
push
sbb
jns
test
mov
dec
jp
out
sub
divl
push
mov
imul
in
dec
fistpl
or
data16
movsb
jb
addl
sar
imul
hlt
mov
dec
sub
mov
mov
jae
movsb
mov
jbe
add
sub
addr16
pushl
dec
xchg
mov
lcall
mov
and
sub
fucom
gs
or
xchg
sbb
and
mov
dec
cli
gs
adc
mov
dec
scas
pop
inc
jmp
push
jge
pop
sbb
and
and
pop
jmp
clc
xchg
cmpb
cmp
scas
push
pop
add
mov
ret
sbb
test
insl
xlat
enter
dec
scas
mov
sbb
jo
push
popa
jbe
or
jno
add
push
pop
xchg
xor
sub
adc
data16
ljmp
clc
push
pop
adc
xor
add
movsl
addb
std
insl
insb
sbb
or
js
stos
pop
arpl
or
scas
mov
popa
clc
xchg
mov
dec
sti
lahf
cmp
jp
mov
cmc
jge
aam
pop
lret
sub
mov
add
into
enter
fstpt
push
jno
xchg
cmpsb
push
xchg
adc
xor
inc
out
aam
pop
and
sub
dec
or
jge
lret
push
iret
xor
lcall
data16
je
mov
cwtl
lods
xor
es
stc
push
xor
les
sbb
mov
xchg
aaa
push
xor
pop
fsubs
xor
sarl
lea
jns
shlb
push
in
ret
pop
or
cwtl
cmp
cld
stos
or
dec
inc
pop
and
lcall
clc
jns
lock
cltd
test
mov
cwtl
daa
mov
sub
rcr
stc
gs
and
sahf
dec
repz
mov
cmp
sub
mov
and
movsb
ljmp
scas
push
adc
cli
xor
adc
cmc
dec
xor
add
push
xchg
into
xor
jge
test
mov
add
pop
mov
mov
mov
sub
mov
imul
or
js
xchg
jb
push
ds
cltd
pop
xchg
adc
movsl
fdivl
lahf
stos
pop
rolb
gs
xchg
imul
xchg
ret
xlat
lock
std
stos
in
pop
sbb
jle
push
mov
into
loopne
mov
leave
push
mov
sbb
inc
push
fisttps
and
pop
jae
stc
xchg
lea
popa
iret
das
gs
fs
imul
es
mov
icebp
and
inc
inc
mov
dec
out
jnp
mov
or
sub
xor
push
push
pop
xchg
test
fbld
repz
ret
xchg
lret
ja
test
xchg
pop
shl
daa
and
push
add
cltd
push
pop
xchg
mov
mov
cld
lds
rcrl
dec
mov
clc
or
pop
addl
into
add
xchg
mov
cmp
cmc
mov
out
lock
adc
mov
inc
or
add
or
inc
push
popf
or
mov
int
rcrl
scas
inc
xchg
sub
push
jg
mov
mov
inc
adc
or
mov
test
fisubrl
mov
outsb
sub
mov
sbb
pop
lret
mov
mov
jle
dec
xlat
aam
fsubl
test
sub
mov
enter
imul
sub
pop
pop
adc
cld
xor
outsb
loope
jge
cmp
mov
inc
cmc
mov
or
das
xchg
mov
mov
and
in
pop
cmc
lret
lret
sub
dec
push
scas
inc
mov
jo
lahf
mov
rcl
jae
outsb
sbb
xlat
cltd
jae
jns
je
xchg
push
jge
das
fucomi
jg
pushf
add
scas
push
insb
jmp
mov
aam
or
aad
jb
mov
cmc
adc
lcall
jns
clc
xor
std
js
test
jmp
mov
push
clc
mov
in
shlb
add
and
mov
add
leave
fstl
in
sbb
adc
or
popf
jb
in
cmp
push
mov
iret
imul
out
sti
imul
xchg
pop
insb
cmp
push
shll
xor
xchg
xor
in
sub
xchg
mov
mov
or
inc
mov
or
lock
cmc
xchg
leave
orl
ljmp
sbb
jecxz
jl
shlb
iret
out
and
in
leave
fldt
mov
mov
inc
bound
and
fimuls
or
and
pop
das
jb
mov
enter
sub
jl
cld
pop
repz
and
sbb
fs
mov
adc
das
lock
xchg
or
mov
sub
call
push
fwait
cmp
movb
cltd
mov
mov
shl
imul
xchg
add
push
push
pushf
fchs
inc
cmc
mov
repnz
xlat
jmp
mov
and
and
push
shll
mov
movsl
add
fldcw
push
gs
int3
scas
push
push
pop
ljmp
lea
gs
imul
sub
pop
jmp
push
fcoml
loop
fs
in
pop
mov
dec
sbb
cmpsl
ss
mov
pop
outsl
cmc
xchg
add
pushw
sbb
pop
mov
test
or
loopne
into
cmp
fwait
test
sti
and
in
dec
cmp
jo
push
rclb
fsts
das
out
xchg
or
sbb
pushf
cmpsl
addl
popa
inc
nop
fdiv
push
push
stos
nop
inc
cwtl
or
push
add
negb
pushf
adc
test
test
jg
stos
inc
xor
adc
iret
xchg
into
inc
aam
inc
out
mov
hlt
mov
in
sahf
or
call
ljmp
inc
out
xchg
das
mov
dec
cwtl
inc
ja
fstps
insl
sbb
lds
repnz
xor
xor
adc
lods
ljmp
pop
cmp
push
movsl
movsb
outsl
inc
fisubrs
mov
or
ja
loopne
cmpsb
loopne
fists
push
xorl
scas
jns
dec
push
aad
push
and
xchg
and
sbb
icebp
fwait
rol
lds
pop
sub
lahf
xor
sbbl
aaa
jecxz
dec
jle
add
in
xchg
stos
repnz
dec
in
adc
imul
push
lahf
je
movhps
mov
sub
cltd
int
rcr
sbb
incl
into
push
scas
jbe
jmp
cwtl
mov
aaa
icebp
add
jge
cmp
dec
mov
xor
out
inc
repnz
xlat
fildll
pop
sub
and
mov
push
xchg
mov
inc
fidivrs
lock
and
pop
pop
jno
adc
call
xorb
gs
xor
in
xor
xchg
repnz
pop
imul
loop
outsb
lahf
mov
bound
dec
lea
imul
cmp
arpl
cs
fstps
push
adc
gs
and
or
jnp,pt
into
add
and
push
cld
cmp
aaa
sbb
aam
push
dec
pop
cwtl
mov
cmp
out
jne
mov
push
lret
shlb
cmc
xor
sbb
xchg
sub
in
fs
pop
mov
outsb
loope
scas
xchg
mov
push
jl
jo
or
les
ret
or
jae
mov
es
mov
mov
and
add
sbb
insl
sbb
outsb
mov
xor
sbb
xchg
or
mov
sub
ret
pop
or
push
aam
jb
adc
xchg
push
cs
std
pop
or
lods
cmpsb
jno
movl
test
ljmp
or
xor
dec
or
int3
or
das
hlt
lods
ret
aad
add
arpl
insb
andl
ja
js
mov
add
inc
repnz
sbb
popf
sbb
jge
fcomi
or
in
enter
sub
arpl
xchg
test
dec
inc
in
outsb
mov
push
popl
xor
xor
sub
jno
jo
call
addr16
inc
mov
inc
fcomps
sbb
and
cmp
mov
shlb
jl
cli
cs
inc
xor
aad
xchg
mov
iret
sahf
fiadds
cmp
popa
lret
out
cmp
mov
aaa
rcl
cs
cmc
push
lahf
imul
ss
hlt
adcb
mov
outsl
mov
test
aas
cmc
iret
add
push
pop
mov
mov
js
iretw
cmpsl
sti
adc
int
aas
shlb
call
lods
mov
pop
sbb
imul
arpl
lcall
xlat
mov
ficomps
cmp
leave
pop
imul
loope
mov
cli
movsl
pop
and
out
ss
jmp
mov
repz
pop
bound
mov
mov
add
push
jns
in
daa
lret
in
sub
loopne
test
je
add
add
jnp
sub
rcll
inc
mov
push
mov
mov
js
cmpsl
arpl
jmp
jae
mov
pop
aad
cltd
leave
mov
rorl
aaa
push
out
movl
xchg
in
add
adc
push
leave
pop
add
out
jno
cmp
inc
pushf
shrb
sub
fildl
pop
jbe
mov
adc
jl
cmp
lret
sub
xor
mov
mov
test
in
dec
stos
fadds
clc
dec
mov
fcoml
aam
mov
in
js
nop
test
stos
inc
scas
scas
jmp
mov
popa
loopne
mov
pop
and
fwait
adc
fsubp
cmc
mov
leave
addl
jmp
dec
adc
or
mov
jmp
pusha
loop
test
xor
and
inc
adc
inc
loope
mov
stc
pop
popf
pop
imul
xchg
rcll
cwtl
fwait
js
outsb
repnz
stc
idivl
out
repnz
lahf
jl
shl
lcall
loope
jg
loopne
mov
imul
movsl
mov
aad
sbb
and
gs
dec
or
cmpb
adc
sbb
pop
mov
iret
repz
pop
mov
aas
xchg
arpl
add
jne
dec
or
sub
push
test
cmc
dec
sub
mov
ja
in
test
call
ret
mov
lcall
frstor
push
insl
dec
mov
leave
dec
rolb
fstp
pop
test
cmp
mov
inc
mov
jg
or
adc
mov
sbb
push
call
lea
stos
test
shlb
xor
jbe
outsb
push
in
xor
xorl
andb
les
inc
movsl
dec
fsubr
jle
or
dec
push
or
lods
incb
or
sub
mov
xor
in
pop
adc
je
ja
jno
roll
scas
mov
dec
jg
cmp
nop
imul
in
push
stos
jns
inc
testb
and
icebp
loop
push
inc
hlt
add
jmp
outsb
loopne
popa
outsb
and
add
rcrb
rorb
out
jl
lcall
popf
push
sub
addr16
mov
mov
push
and
scas
cli
stos
bound
inc
cmpsb
lods
push
jnp
gs
out
int3
inc
or
sbb
xchg
cmp
je
mov
inc
jmp
fcomi
push
mov
clc
stos
lods
popf
and
xor
in
in
push
xorb
insl
mov
mov
fimuls
sahf
mov
jecxz
lea
ss
cli
fsubrp
imul
pop
cltd
push
jl
jb
enter
xor
insb
loopne
jle
inc
cld
jg
ja
add
and
movsb
test
xlat
dec
iret
je
or
je
shlb
sbb
out
notb
enter
lods
mov
test
xorb
or
outsb
xor
and
jg
dec
cmp
push
test
das
xor
jnp
or
fisttps
and
daa
insl
xchg
add
shlb
enter
ja
arpl
in
ja
ret
add
fidivrs
loope
mov
xchg
sbb
mov
sbb
xchg
mov
and
cmp
aad
aad
mov
lods
pop
leave
test
and
dec
clc
incb
sub
lds
xchg
movl
test
adc
in
mov
inc
push
stos
xchg
imul
cltd
rcrl
push
cmp
mov
shll
cltd
not
sub
icebp
addr16
je
xor
pop
mov
mov
mov
fldenv
rcll
jg
xchg
mov
mov
mov
int3
xor
jae
xchg
xor
push
xor
test
ret
dec
and
cmpsl
xor
add
dec
in
jmp
hlt
mov
shrb
loop
loope
mov
cmp
cltd
cmpsb
jae
dec
lods
mov
jecxz
mov
mov
cmp
popf
pop
je
sub
jg
and
clc
pop
jne
xor
insl
stc
xor
inc
xor
not
outsb
push
mov
push
arpl
or
and
das
cld
ds
int
push
mov
sbb
dec
mov
lock
and
jge
cltd
stc
ret
pop
mov
jno
test
xor
jle
jmp
inc
jne
ror
aam
jae
mov
movsb
scas
jns
push
lret
mov
mov
or
add
pop
ljmp
jmp
ss
scas
push
shll
aam
jl
ret
pop
jnp
cmp
adc
xor
jo
jmp
imull
enter
adcb
cmp
cmp
int
jg
cmp
mov
popf
daa
dec
rolb
lds
add
call
mov
cli
sarl
inc
jae
xchg
fdivl
jle
sbb
adc
out
push
nop
add
dec
daa
and
dec
and
insl
jge
push
cmp
adc
mov
xchg
sar
jns
jg
xchg
jge
mov
pop
enter
shlb
ljmp
test
mov
and
and
adc
lea
xchg
sub
int
push
add
jp
stc
xor
jb
push
or
or
dec
and
mov
jle
outsl
mov
int
sub
cltd
lds
mov
add
adc
leave
es
mov
outsl
dec
data16
mov
iret
addr16
dec
mov
xor
mov
push
inc
es
xchg
lcall
jb
pushf
sbb
pop
es
cwtl
addb
ret
push
pop
andb
jb
cmpsl
or
cld
into
and
mov
mov
fnsave
hlt
add
pop
inc
andb
fstp
push
inc
mov
loop
push
cmp
dec
mov
mov
mov
mov
cli
nop
inc
mov
sbb
and
mov
rorl
jae
outsb
push
jne
add
fisttps
pusha
dec
movsb
lea
jb
dec
das
insb
mov
in
dec
adc
cli
pop
push
scas
xchg
lahf
pusha
inc
sbb
enter
clc
inc
testb
push
incb
aam
and
stos
adc
xchg
fidivs
jnp
lcall
xor
in
insb
outsl
and
fdivrs
scas
mov
mov
les
mov
push
ficompl
test
movsb
fisubrl
inc
stc
xorl
sbb
sbb
cmp
inc
mov
push
mov
mov
fdiv
pop
scas
fcmovb
add
cmp
push
test
push
out
stos
sub
jge
sbb
and
dec
inc
stc
mov
nop
add
mov
mov
xor
mov
inc
ljmp
fnsave
push
mov
pop
fbld
push
lret
ret
mov
cmp
mov
cli
push
loop
and
iret
data16
clc
sub
fisubrl
cmp
sbb
and
js
sbb
jmp
sub
cli
in
decl
push
repz
jle
mov
rorl
aam
je
adc
sbbl
xchg
inc
into
mov
lock
xor
xchg
adc
test
cmp
lret
int3
or
bound
mov
mov
push
push
fadds
lock
cltd
lahf
jb
fildll
aam
xchg
xchg
mov
xlat
xchg
movnti
sbb
stc
dec
and
and
fwait
ret
adc
or
mov
push
dec
mov
ja
rep
xchg
sbb
sub
xchg
pop
fnstenv
ljmp
jo
pushf
cmp
pop
mov
hlt
aam
and
lahf
mov
jmp
push
push
popf
vpunpckhdq
push
ja
push
xchg
daa
insl
cmp
stos
aad
inc
and
and
movsl
aas
test
in
adc
in
xor
or
xlat
callw
inc
mov
leave
mov
dec
push
icebp
sbb
jno
dec
push
lret
xchg
jbe
lahf
fucomip
lods
fcmove
arpl
repnz
push
leave
sbb
nop
mov
pop
pop
arpl
out
pusha
sbb
andl
push
enter
movsl
popl
cmpb
cmpsb
ljmp
test
sbb
mov
mov
scas
or
adc
cmp
daa
lock
inc
add
push
jne
push
fcmovb
pop
xchg
sbb
call
and
add
lahf
pop
imul
xchg
adc
inc
addr16
mov
jge
cmp
jmp
cmc
inc
xchg
pop
cmp
inc
loop
push
ljmp
aad
imul
jecxz
or
xor
dec
int
sahf
addr16
pop
cli
cmc
sbb
sbb
push
and
add
fcoml
shlb
fwait
jle
dec
mov
lods
and
sbb
icebp
aaa
xchg
and
mov
inc
stc
xchg
pushf
rorb
sahf
jnp
mov
fwait
add
rclb
cmp
loopne
fcomp
fsubrl
adc
push
lcall
loop
pop
std
sbb
out
sub
push
mov
xchg
push
ficomps
std
es
jg
fnsave
adcl
test
data16
dec
xor
fwait
into
pop
add
dec
and
aam
rcll
shll
dec
into
jae
and
add
aad
js
hlt
int
lcall
insl
mov
dec
push
nop
mov
push
aas
inc
inc
push
lcall
add
dec
mov
popf
pop
fimull
inc
lods
cmp
hlt
fstps
aad
leave
loopne
cmp
mov
add
arpl
jge
or
ret
sub
fucom
jns
imul
sub
nop
dec
out
mov
mov
test
or
jg
arpl
adc
mov
das
daa
mov
jl
sbbl
dec
in
mov
jmp
pop
or
addr16
into
mov
inc
pop
inc
xlat
sub
pop
loop
cmpsl
jmp
and
ret
dec
jb
jg
xchg
inc
push
out
pusha
cmp
dec
cmc
xchg
in
mov
jmp
xchg
iret
sbb
xor
aam
test
out
fnstsw
shlb
add
fstp
out
subb
or
cmpsb
push
xchg
daa
or
xchg
cmp
stos
pop
adc
fs
and
dec
mov
popf
dec
xchg
test
arpl
aas
shrl
stc
or
lret
mov
int3
test
stc
iret
ficomps
dec
addl
push
inc
fstpt
loopne
test
icebp
sahf
mov
nop
xor
adc
cmpsb
pop
addr16
bswap
pop
and
call
and
fcompl
dec
scas
je
pop
xchg
sub
popa
dec
jbe
mov
add
and
insl
lret
out
stos
or
leave
jno
les
ljmp
movsb
sub
jp
mov
nop
addl
outsb
imul
dec
in
push
or
aad
dec
das
push
jle
ljmp
add
repz
loop
mov
mov
jnp
cli
adc
test
popf
test
gs
cmp
push
pop
mov
jae
test
or
sub
in
mov
push
mov
daa
movsb
lcall
stos
subb
fimuls
sbb
add
mov
fwait
jnp
mov
pop
rcrb
add
sub
rorl
iret
dec
popf
add
lahf
or
xor
mov
out
ds
dec
movsl
sar
add
leave
adc
jg
call
flds
or
clc
jb
sahf
sub
jbe
jae
insl
pop
es
das
mov
ds
or
xor
fimull
pushf
jnp
sub
jo
sbb
shrb
pop
push
les
xor
mov
cmpl
jge
cmp
scas
fwait
pop
inc
adcl
addr16
lcall
xchg
dec
cmp
test
int3
lahf
inc
pop
cmpsl
mov
repnz
adc
mov
dec
xchg
das
fldl
std
xchg
fs
cmpsl
push
adc
sbb
adc
sub
gs
pop
xor
mov
or
mov
in
sub
and
insl
test
lds
das
pop
inc
mov
in
cmpsl
out
inc
ss
jo
and
daa
hlt
xlat
test
dec
ret
mull
rol
loope
xor
mov
call
scas
pop
jno
mov
jne
das
std
push
pop
inc
cli
hlt
pop
movsl
out
jne
testb
test
push
adc
adc
addr16
rclb
mov
loop
and
inc
adc
cwtl
cli
fsubrs
jl
cmp
and
xor
xor
add
dec
rclb
sti
jbe
ror
xchg
stos
stc
ljmp
sbb
push
bound
cmpl
insl
jnp
sbb
dec
inc
inc
mov
mov
and
push
mov
cmp
lea
sub
sbb
sub
jbe
mov
and
xor
out
jns
div
ret
cmp
dec
icebp
pop
fwait
sahf
out
test
jno
ja
adc
insb
add
dec
aad
xor
dec
sub
outsb
xlat
xlat
jne
xchg
lahf
dec
push
gs
popa
xor
jp
add
hlt
push
sub
bound
nop
cmp
sub
rcrb
push
and
mov
push
sub
popa
rcrl
ror
andl
pop
xadd
je
sbb
sbb
fistpll
jo
adc
das
ds
pop
imul
repz
sahf
outsb
jg
sub
test
and
gs
xorl
or
and
bound
pop
adc
pop
stos
pop
push
rorl
fildll
sub
push
jo
sub
btrl
xchg
imul
adc
inc
pushf
jge
cmp
adc
push
mov
cmp
mov
outsb
xor
stos
int
loope
or
pop
adc
mov
xor
cmp
js
xchg
test
mov
push
jge
xor
enter
pop
sbb
push
push
lea
rorl
stos
xor
aam
adc
dec
sahf
jo
aad
push
sbb
push
sbb
adc
xchg
inc
inc
mov
xchg
inc
add
ret
das
fs
pop
rclb
aas
stos
add
and
pop
mov
test
xchg
clc
sub
push
in
stos
fldenv
jmp
cmp
sbbl
filds
orl
jno
insb
xor
mov
movsb
jle
jno
inc
pop
jge
inc
mov
ret
cmp
bnd
jns
je
mov
dec
dec
jb
aad
inc
stos
inc
loope
int
xchg
out
in
imul
and
shl
and
cmp
sbb
cwtl
push
add
push
cwtl
movsl
lret
shlb
adc
cld
dec
cmc
or
xchg
jns
or
add
js
dec
in
popf
fldcw
pop
fbstp
mov
mov
repz
dec
cltd
jne
lock
add
loop
sti
sbb
repnz
pushf
enter
not
dec
out
add
mov
xchg
jae
es
inc
and
dec
and
adc
or
cwtl
jp
adc
aam
aam
push
dec
xchg
jbe
test
adc
in
pop
hlt
movlhps
mov
cmpsl
and
cmpsl
int3
push
and
push
lds
cmp
pushl
push
mov
pusha
lods
lds
sub
dec
adc
cmp
inc
decl
imul
xchg
push
pusha
roll
lret
add
and
repz
xchg
jb
cmp
and
jns
movsb
scas
pop
pop
dec
adc
xchg
jne
lds
push
imul
aaa
dec
leave
int
inc
test
nop
outsl
sub
mov
sub
xchg
push
aas
add
pop
pop
insl
movsl
or
jg
jne
into
sub
cmp
add
push
in
or
into
scas
pusha
aas
and
jbe
sub
ja
mov
das
cmp
cs
pop
xchg
jo
mov
and
push
jns
add
ret
xchg
call
push
push
sub
cmpsb
cmpsb
cmp
dec
and
pusha
fsubs
pop
test
inc
mov
push
aas
in
leave
out
mov
pop
add
sub
cwtl
mov
add
xchg
call
inc
negl
cmpsl
sbb
ret
xor
shr
sub
inc
mov
iret
adc
jg
sbb
sbb
sbb
ret
xor
pop
std
lret
dec
sub
jp
cmp
addb
lcall
dec
test
mov
cld
es
mov
push
add
rorb
add
fsts
push
xor
test
jb
pop
sub
repnz
jno
subl
or
mov
cmp
or
hlt
and
adc
pop
dec
jbe
push
jl
dec
fwait
test
lret
icebp
cltd
cmpsb
sub
mov
call
iret
mov
fistl
jl
pop
push
aas
js
ss
aas
movsb
add
mov
jne
lahf
cmp
adc
mov
ljmp
inc
fwait
xchg
xchg
adc
sub
in
out
or
out
pop
inc
leave
mov
cmpsl
sti
addl
push
inc
push
add
and
pop
ds
ficoms
cmpsl
dec
ja
adc
ss
js
ret
dec
inc
sub
mov
sbb
inc
sbb
xchg
sti
xchg
sub
add
pop
repz
inc
insb
or
xchg
adc
pop
mov
adcl
inc
cmpsl
add
fstps
popa
ss
xchg
push
pop
outsb
add
arpl
mov
and
ficomps
fmull
xchg
adc
add
mov
jecxz
out
dec
sub
nop
rcll
inc
cmp
pop
shll
jae
fcmovb
cmpl
pop
or
xor
xor
outsb
adc
lods
xchg
jp
out
inc
adc
sti
and
daa
dec
jmp
adc
and
push
loop
daa
adc
jl
repz
push
sahf
xor
clc
es
js
cld
mov
loop
pusha
xlat
hlt
out
ret
int
int
lret
mov
rcl
mov
and
xchg
and
add
lret
out
fadds
arpl
loop
mov
jno
out
bnd
out
js
shrb
sbb
notl
fdivr
sbb
xchg
push
out
sar
lcall
ja
das
pop
mov
sub
add
mov
in
mov
mov
jno
cltd
sbb
push
rcrb
jnp
adc
dec
push
hlt
inc
cli
inc
cld
xchg
xchg
lret
inc
adc
mov
sbb
pop
sbb
pop
push
mov
add
cmp
icebp
adc
add
mov
jp
subl
xchg
ds
dec
dec
popa
loopne
addr16
inc
lods
out
insb
fistpl
sahf
loope
push
sbb
mov
add
or
rorl
clc
jge
pop
dec
test
sub
jle
daa
push
bound
aad
neg
mov
jno
imul
pushf
add
mov
mov
std
nop
cwtl
sub
cmpsb
mov
ja
ds
je
imul
inc
add
icebp
inc
xor
mov
pop
push
pop
fs
out
sub
test
cld
aas
imul
sbb
dec
dec
add
ljmp
cwtl
fstpl
mov
mov
pop
das
dec
out
inc
loope
cmp
sub
or
js
jmp
push
cmpsl
xor
lock
lea
jmp
icebp
push
aas
push
jecxz
xchg
popf
xchg
cmp
pop
xor
syscall
aad
dec
fcmovne
cmp
sbb
fisubrl
xorl
mov
in
xor
xlat
fcoml
cli
rorl
test
stos
sub
lea
fdivrl
mov
cmp
sbbl
xlat
outsb
or
push
addl
push
fmuls
std
fsubrl
jle
sbb
inc
out
out
psadbw
loop
dec
fimuls
rcll
popa
ret
sbb
push
and
jmp
cs
xor
mov
xor
add
bound
orb
loopne
xor
mov
dec
pushf
orl
jecxz
xbegin
jl
aas
repz
rorb
cwtl
inc
mov
imul
inc
sbb
or
cld
inc
xor
mov
push
and
add
andb
inc
xor
lods
cmp
cwtl
mov
adc
ret
ret
lds
pop
inc
ss
sub
popa
jecxz
repz
dec
call
stc
test
pop
jb
cs
dec
jno
cmpsl
fs
mov
pusha
jmp
leave
lds
pop
mov
dec
aam
dec
lahf
fcmovu
cmp
sbb
sub
lret
mov
fwait
test
adc
in
push
dec
pop
rorb
mov
fisttpll
mov
sbb
mov
cli
jg
fsubs
ss
jnp
addr16
mov
icebp
addr16
jb
in
adc
pop
orl
je
call
lods
xor
xchg
adc
sbb
in
stos
push
push
data16
pop
mov
fnstenv
les
xchg
pop
push
mov
popf
int3
fiaddl
jg
sbb
push
mov
dec
adc
call
and
cmp
push
jns
sbb
xor
lock
pop
inc
jo
add
nop
mov
jp
dec
outsl
jbe
adc
push
outsl
das
sub
in
sti
scas
xchg
jge
inc
cmp
adcb
stos
insl
jl
xor
lds
iret
ret
xlat
nop
notl
stos
jbe
fists
js
and
sti
loopne
and
scas
adc
add
aas
mov
add
push
arpl
stos
cmpsl
mov
add
je
fiadds
mov
xor
mov
mov
lcall
cmp
and
and
shl
and
xorb
mov
jl
add
adc
add
aam
pusha
shrl
movsl
xchg
adc
pop
lret
xchg
pop
push
popa
mov
sub
leave
scas
loopne
clc
pop
das
mov
ljmp
leave
lret
test
cmp
push
repz
mov
aas
sub
inc
jns
stos
mov
push
ja
push
jo
jb
and
add
insb
dec
mov
and
cmp
xchg
mov
les
test
jle
movsb
xlat
pop
das
dec
lret
lret
cmpsl
out
mov
stos
mov
or
out
dec
sub
and
xchg
pop
insl
dec
test
jg
gs
iret
cltd
xor
adc
mov
aaa
and
mov
or
mov
sbb
pop
shlb
push
pop
mov
lock
fsts
ljmp
in
sub
cmp
addr16
jo
insl
rcrb
cmp
cmpsb
add
mov
jle
sbb
push
or
adc
or
adc
rorl
or
jecxz
lock
mov
hlt
jl
movsl
fidivs
push
hlt
outsb
cmpsb
xor
sub
jno
rcrb
aam
fisttpll
inc
and
or
ficoms
jno
jne
shrb
fsubr
mov
xchg
xor
test
inc
xchg
mov
dec
xacquire
pushf
add
and
mov
jns
xor
and
rorb
adc
ss
aaa
pop
jmp
scas
xorl
fwait
mov
data16
mov
mov
call
les
fs
in
sub
add
xor
sbb
cmc
enter
je
jae
push
rep
fcomip
in
mov
ja
cwtl
push
adc
sbb
jge
push
adc
shrl
jne
mov
jmp
outsb
cld
mov
xchg
iret
add
inc
cmc
inc
sbb
inc
sub
stos
add
js
loopne
add
pushf
push
out
sbb
and
imul
and
mov
add
cmp
lods
hlt
daa
arpl
lahf
sarl
dec
sbb
push
cmp
adc
jecxz
dec
ret
hlt
jbe
cmp
sub
sub
ret
adc
gs
pop
cltd
shl
mov
cli
test
cs
dec
test
xor
insl
mov
push
xor
rorl
add
dec
lcall
push
lods
dec
pop
inc
hlt
sti
dec
out
sbb
sbb
cmpsl
mov
call
out
dec
jmp
push
and
dec
lea
arpl
loop
popa
push
or
push
push
inc
and
int
out
test
and
enter
cmp
dec
in
imul
cmc
rorb
dec
fsubrl
cmc
iret
jle
nop
js
stos
es
ficompl
repnz
and
hlt
push
ss
enter
add
adc
or
mov
mov
inc
xchg
pop
adc
lcall
sub
in
xor
out
insl
mov
sahf
mov
pop
out
push
call
xchg
xor
sbb
push
jmp
out
and
int3
adc
sub
pop
sahf
adc
cmp
dec
das
shrb
or
pop
std
faddl
pop
xor
cmp
sub
mov
jmp
jae
push
inc
mov
jb
movsb
pop
ror
popa
inc
jo
enter
cmc
pop
in
repz
mov
pop
add
testl
jg
rcrl
cmc
jl
daa
mov
mov
mov
pop
and
push
enter
jle
xchg
jae
jnp
enter
mov
add
inc
mov
cmc
xor
inc
fsubrs
cld
outsb
mov
cld
fwait
jl
test
add
es
pop
jbe
push
add
out
or
mov
cli
jae
xchg
ja
xlat
inc
lret
pop
mov
femms
inc
dec
xchg
addr16
pop
aas
and
push
pop
lods
push
jne
jmp
insl
cmp
repnz
pop
mov
js
mov
out
push
flds
jp
xchg
and
and
scas
adcb
xchg
aad
icebp
loope
xchg
pop
push
int
repz
push
xchg
sar
sbb
mov
negl
cmpsl
aad
mov
adc
cltd
stos
int
cmpsb
or
adc
jle
cmp
pop
xchg
imul
adcb
mov
pop
adcb
and
ljmp
stos
mov
sub
mov
dec
es
aaa
push
out
mov
inc
and
inc
addr16
jle
div
or
push
xchg
push
rclb
mov
out
fsubrs
lcall
dec
icebp
xchg
sbbl
rclb
sub
mov
push
add
push
dec
mov
ret
outsl
in
ljmp
jae
repnz
add
lods
xchg
insb
mov
and
pop
jle
push
adc
and
and
inc
hlt
mov
mov
ja
inc
pop
in
fwait
sub
pop
xor
jge
gs
mov
cmp
mov
int3
xchg
insl
in
add
scas
lods
adcl
sbb
sub
pop
pop
sbb
cmp
out
jge
jg
xor
ret
push
std
push
stos
jecxz
add
scas
insb
cmp
and
adc
inc
or
lahf
cmp
mov
imul
insl
fldenv
clc
sub
inc
sub
jmp
outsb
dec
mov
pushf
test
or
loopne
cmp
pop
jp
negl
pop
mov
mov
xchg
cmp
mov
sbb
into
xchg
cmc
les
mov
adcl
loope
aad
mov
push
das
sbb
iret
xchg
jns
push
xchg
pop
fstl
xor
adc
movsb
xor
add
arpl
aaa
sti
dec
pop
mov
push
pop
cmp
mov
xorb
out
pop
sub
out
test
mov
push
inc
inc
xor
pop
mov
and
movsb
mov
int
mov
jmp
xchg
ss
inc
cld
push
iret
sub
rcrb
sarb
stc
hlt
filds
ret
cltd
xlat
adc
inc
popf
jmp
mov
movsl
push
push
out
enter
aaa
loopne
inc
mov
push
push
mov
addr16
fldenv
mov
dec
push
mov
push
add
adc
fmuls
jae
adc
cmp
out
loope
rolb
sub
dec
insl
xor
dec
ja
inc
cmc
jno
push
int3
pusha
in
jmp
sbb
daa
add
mov
mov
xlat
aas
mov
imul
sti
sub
popf
mov
outsl
daa
cmpsl
pop
in
adc
and
loop
pop
lock
dec
jecxz
mov
xchg
inc
jbe
dec
outsl
cmp
jnp
nop
out
movb
or
xor
mov
or
pop
cmp
inc
outsl
pop
cli
mov
and
xchg
orb
jge
int3
outsl
int
loopne
fwait
addr16
add
adc
jns
das
je
cmpsl
in
xor
push
nop
ret
mov
jbe
sahf
mov
push
dec
mov
mov
mov
jns
pop
lods
jg
mov
imul
sbb
push
xlat
sbb
divl
push
call
nop
and
pusha
in
adc
sub
outsl
stos
mov
sbb
add
sbb
xor
jecxz
cmpsl
negl
mov
add
jbe
loop
gs
pop
enter
pop
xchg
jge
inc
das
add
inc
mov
add
mov
test
hlt
ret
ret
test
pop
or
push
mov
aas
in
and
sbb
lock
mov
jmp
sbb
popf
jge
into
xor
outsb
pop
call
or
iret
mov
cltd
mov
pop
add
sti
push
movsl
bound
cld
int3
sub
push
xchg
hlt
cmc
mov
sbb
bound
clc
pushf
cmc
das
inc
pop
rorb
fbstp
ss
cmpsb
test
jg
lahf
aam
xor
add
pop
dec
pop
mov
push
stos
xlat
jo
shlb
cmp
xor
fidivrl
mov
je
mov
xor
enter
lods
jae
movsl
lcall
mov
and
mov
jb
shl
movsl
rorl
lods
or
divb
cmp
aaa
or
inc
mov
push
adc
data16
mov
outsb
and
sti
mov
gs
mov
cmpsl
enter
jns
sbb
cmc
scas
out
into
pop
mulb
mov
and
outsb
add
mov
lcall
mov
mov
in
out
les
xor
xor
fs
es
sbb
xchg
sbb
sub
dec
loope
push
xchg
in
dec
fstl
je
dec
hlt
pop
mov
pop
push
mov
cmp
fldenv
pop
push
mov
mov
pop
mov
add
xor
nop
call
mov
adc
inc
adcb
mov
nop
adc
hlt
ds
or
fisttpll
bound
out
dec
cmp
pop
sbb
decb
mov
push
fiadds
loope
jmp
lds
fisubl
mov
mov
test
adc
jno
das
mov
fwait
pop
mov
pop
or
ret
cmp
sub
mov
mov
cmp
stc
lds
mul
hlt
jne
int3
fsub
sarl
imul
loope
inc
fbstp
push
push
jno
arpl
add
dec
jae
out
sahf
enter
xchg
movsl
dec
or
xchg
add
test
test
ja
push
cltd
out
in
outsl
in
xchg
add
and
mov
adc
das
xor
mov
or
test
push
lret
lods
mov
lret
lods
cli
pusha
ss
mov
in
div
outsb
repnz
push
jno
cs
pop
adc
bound
xor
testl
les
pop
aaa
and
push
mov
and
sbb
ret
daa
loop
or
push
xchg
repnz
jno
rcrb
popf
lds
fdivrs
incb
xchg
jae
pop
xchg
pop
jne
pop
jg
mov
out
pusha
notb
and
adc
fisubrl
inc
je
js
dec
shrl
aad
mov
adc
mov
mov
sbb
jno
es
cmc
xchg
xor
mov
jo
notb
int3
dec
test
notb
shrb
cltd
add
mov
adc
notb
xlat
je
repz
fldenv
je
loopne
outsl
sbb
mov
push
cmp
or
jle
bound
or
and
dec
sti
xorb
in
mov
add
xchg
mov
das
mov
sub
push
lret
add
push
dec
sub
xchg
das
push
ficoml
sbb
xorb
cmp
push
adc
and
rorl
mov
shrb
iret
pop
repnz
jnp
push
clc
add
out
ret
das
insl
fisttps
stos
addr16
cwtl
pop
not
mov
addr16
adc
stos
inc
aad
inc
sub
rep
mov
xchg
mov
insl
sbb
out
push
cmp
fisttpl
push
mov
mov
xor
aam
push
push
mov
stos
mov
push
stos
xchg
popa
sti
pop
inc
mov
push
and
outsl
add
gs
sub
mov
sbb
hlt
pop
fcmovnu
punpckhdq
cs
daa
clc
imull
lds
jb
dec
rcrl
cmpsl
pop
xor
push
push
imul
mov
and
es
pop
cmpsl
lods
xor
cwtl
cmpsl
push
cltd
aaa
psubq
bound
cli
sub
ljmp
mov
rorl
sub
loope
fwait
lods
arpl
aaa
in
mulb
mov
xor
fldcw
and
lds
andb
mov
mov
jmp
or
lcall
push
outsl
lea
daa
ds
push
jge
and
jle
rcrl
xor
push
or
dec
nop
xchg
outsb
jl
rcrl
icebp
ljmp
lret
jb
scas
mov
mov
int
mov
sar
or
mov
push
add
adc
push
pushf
push
xchg
pop
loope
test
out
lods
xchg
xchg
out
sahf
shlb
adc
mov
hlt
enter
or
lea
and
lods
push
add
and
mov
fimuls
inc
test
push
ja
push
cmp
xor
mov
loop
sbb
mov
test
jmp
fyl2x
das
and
mov
addr16
fdivs
jmp
aaa
mov
fisttpll
and
add
out
push
xor
fsubrp
xchg
ss
adc
icebp
adc
push
lcall
jp
jmp
iret
out
jns
bound
stc
jae
adc
leave
sub
xor
popa
idivl
stos
inc
pop
push
sub
test
fnstcw
pop
and
icebp
lods
mov
sub
push
sbb
aas
mov
jno
xchg
je
fsubrl
jb
mov
je
not
jg
jo
sti
sbb
insl
mov
insl
mov
adc
scas
xchg
pop
jmp
mov
xchg
add
xor
lds
jl
stc
popf
push
mov
sbb
aad
nop
jmp
inc
jno
xchg
in
cmp
das
ljmp
pop
jle
mov
movsl
inc
xor
loopne
repnz
mov
and
pop
out
stos
lea
fdiv
push
nop
stos
inc
jle
aaa
xor
out
jecxz
test
pop
ret
stos
cmpb
test
lret
mov
ret
xor
aas
test
dec
call
xor
mov
sarb
adcl
sahf
cmpsb
sub
fcmovnu
xchg
lea
push
fsub
add
scas
xchg
mov
aad
lock
std
mov
cmc
adc
cmp
fisubrs
out
shrb
ret
jbe
sbb
arpl
sub
movsl
sub
inc
add
mov
sbb
or
pop
into
insl
and
into
sub
shrl
call
pop
stos
cmp
cmp
rol
mov
int3
ljmp
add
cwtl
lret
lods
jne
jns
shrb
sahf
add
addr16
mov
push
fdiv
and
pop
xchg
adc
sahf
adc
or
decb
cld
pushf
inc
clc
cmc
fs
popf
jg
pushf
mov
push
xor
outsb
insb
pop
insl
add
iret
fs
popa
and
into
insb
mov
lahf
sub
sub
and
xchg
ficoml
mov
je
xorb
out
inc
xor
pop
pop
cmp
mov
jge
mov
jae
addb
jge
xchg
sub
es
or
incb
mov
subl
add
add
outsl
dec
xor
jecxz
mov
xlat
push
aad
mov
jecxz
xchg
nop
mov
faddl
xchg
lea
negl
fimull
sbb
dec
repz
ud0
adc
ficoml
gs
adc
dec
jnp
dec
cmp
cltd
inc
movsb
xor
or
fcoml
xor
cmp
insb
and
cmp
mov
add
in
push
and
bound
pop
or
jne
push
movsl
mov
adc
in
pusha
pop
sub
adc
xchg
sbb
xchg
mov
daa
fsubr
jle
sub
mov
cmp
clc
mov
not
xchg
mov
lahf
push
popf
and
sub
test
jmp
sub
inc
pop
pop
push
bound
aas
push
add
cmp
sub
cmp
aaa
mov
popf
dec
pop
mov
mov
sub
dec
mov
cld
arpl
ret
jae
shlb
mov
ret
ds
xor
jmp
mov
cmp
mov
lea
mov
imul
lods
in
adc
out
add
fimull
mov
frstpm(287
mov
hlt
sbb
rorb
rclb
mov
scas
xlat
les
pop
movsb
mov
mov
xchg
xchg
rorb
mov
mov
jne
adcl
pop
movsl
mov
out
popf
fcoms
sub
fcmovnu
ret
mov
jmp
lea
cmpsl
imul
inc
orb
test
rcl
mov
xor
lds
or
or
es
ret
mov
sub
int3
cmp
or
add
addb
cli
cld
mov
sub
sbb
adc
lret
lcall
xor
divl
sub
leave
and
je
inc
rol
into
mov
xchg
aam
shll
jle
lods
lds
pop
dec
xchg
cmp
and
js
mov
imul
mov
mov
xor
jl
jbe
adcl
adc
xchg
scas
scas
fcompl
lea
imul
sar
mov
inc
in
mulb
add
lock
or
stos
popa
in
dec
ds
cmp
cs
mov
add
jbe
outsb
mov
sbb
jp
xor
movsl
mov
ljmp
mov
aam
loope
rolb
out
mov
decb
pop
and
test
in
mov
and
sahf
lcall
sar
push
scas
or
mov
pop
repz
mov
or
insb
das
inc
dec
cmp
fnsave
mov
add
ficoml
call
dec
push
addr16
scas
cmp
std
clc
call
gs
sbb
xor
mov
fs
xor
mov
fcmovne
cmp
mov
inc
rorl
xor
sbb
test
hlt
dec
pop
cmpsl
sbb
push
jb
jo
push
pop
inc
inc
daa
imul
add
insb
enter
insb
jg
lret
movsb
lods
es
dec
out
mov
ss
outsl
jmp
lahf
stc
aaa
cmpsl
cmp
push
and
je
jns
mov
add
xor
or
repz
pop
ficomps
ljmp
mov
testb
pop
int3
daa
jl
ja
mov
ret
xchg
data16
stos
fildl
dec
icebp
stos
pop
sarb
fwait
push
xor
jmp
xor
mov
or
jbe,pn
aam
movl
enter
push
push
and
jp
and
into
roll
dec
add
nop
sub
movsl
inc
fdivp
je
iret
push
adc
pusha
push
out
push
arpl
das
mov
xchg
add
mov
jae
ljmp
or
jb
xchg
jbe
push
ret
dec
loope
test
mov
orl
fwait
xchg
xor
add
xor
je
lcall
push
sub
xchg
mov
lcall
jae
pop
sbb
lds
ret
bound
in
or
sbb
sub
cmpsl
cwtl
jl
incl
push
mov
insb
inc
sarb
fildl
aam
clc
insb
test
and
repnz
push
sarl
mov
jbe
ja
pop
mov
fstl
push
inc
xor
cltd
dec
mov
mov
sysenter
and
insb
dec
push
mov
jecxz
mov
enter
hlt
in
jns
jecxz
ret
cmp
jge
cwtl
pop
sbb
pushf
sahf
adc
push
push
ffreep
push
cmp
xor
xchg
mov
sarb
xchg
pop
sahf
loope
int3
fstpl
fwait
xor
pop
xor
inc
adc
sbb
jle
fwait
mov
pop
subb
orb
xor
inc
ficoml
dec
mov
out
mov
lea
or
inc
fxch
fildll
lods
cwtl
or
scas
mov
aaa
jle
adc
mov
leave
fstps
mov
inc
pusha
loopne
test
fs
add
aad
insl
pushf
in
loop
cmp
cmp
jae
push
lret
repz
fisubl
push
repz
enter
les
shl
movsb
imul
test
in
in
push
fcmovbe
bnd
adc
xor
xchg
fnstenv
loope
mov
ret
test
or
inc
inc
jle
adc
mov
fs
bound
aaa
test
inc
push
pop
stos
sti
xor
shlb
aam
push
adc
mov
jns
pop
sbb
lahf
pop
orb
mov
pop
fbstp
in
ss
xchg
mov
inc
or
sbb
push
pop
cmp
lret
outsl
adc
jne
shlb
xchg
stos
lods
jecxz
das
push
in
adc
jge
pop
loopne
inc
fcompl
pop
dec
pop
clc
fnsave
mov
xchg
movsb
ljmp
pop
cmp
fstps
add
cld
pop
inc
fimull
sahf
mov
dec
fidivrs
push
mov
push
lods
lock
daa
scas
stos
sub
sub
enter
adc
adc
hlt
xor
mov
aas
cmc
jbe
and
push
loop
shrl
mov
mov
pop
push
or
add
stos
push
dec
jo
lcall
push
mov
cld
dec
cmp
jge
inc
lret
inc
dec
imul
push
pop
xchg
jne
negb
pop
cli
icebp
sub
roll
cs
xchg
int
jp
jmp
dec
out
adc
leave
cltd
dec
sbb
sub
or
push
mov
push
gs
lret
movsb
and
shlb
sbb
idivl
jne
mov
push
sbb
jbe
jns
fisubl
mov
inc
and
push
popa
cltd
rolb
xlat
fadds
adc
and
adc
stc
ljmp
dec
lods
dec
cmp
mov
insb
or
lahf
sbb
sarl
inc
xor
push
int
ret
les
mov
jle
jae
sbb
outsl
mov
lret
mov
dec
and
imul
arpl
mov
pop
pop
mov
push
testl
mov
adc
test
sub
mov
lds
jle
pop
jns
cmp
cltd
sub
pop
dec
aaa
mov
cwtl
popa
rcrb
test
jg
or
ja
ljmp
inc
sahf
repz
jl
aas
lahf
dec
and
push
outsb
xchg
call
aaa
cli
mov
xchg
sub
or
dec
push
adc
inc
jle
sub
adc
popf
jb
fidivrl
and
fstps
rcll
inc
dec
adc
icebp
push
jne
out
orl
into
sub
jbe
imul
pop
aad
cltd
daa
stos
pushf
inc
into
loope
inc
pop
pop
jno
in
push
mov
xchg
sub
sbb
or
sar
push
in
std
ss
leave
add
test
cmp
mov
jmp
scas
loope
std
mov
cmc
shr
xchg
pop
sarl
xchg
mov
mov
mov
push
es
fistpl
jmp
cmp
ret
adc
xor
int
js
jl
lds
jle
inc
push
adc
mov
ja
stos
mov
pusha
faddl
add
and
sub
ss
repz
clc
inc
cmp
in
repnz
sbb
ljmp
xor
scas
pop
sub
movsl
faddl
cs
mov
stc
sub
sub
mov
insl
push
out
pop
clc
lds
pop
fsubrs
ret
ja
leave
mov
dec
push
jecxz
mov
leave
lock
shlb
add
insb
sahf
jno
fimull
ret
out
gs
repz
xor
mov
push
pop
jecxz
xor
mov
push
push
clc
mov
or
icebp
mov
inc
fwait
outsb
repz
in
mov
jo
adc
pop
or
inc
and
cmp
cs
pop
jecxz
mov
jbe
push
cmpsb
sbb
xchg
sbb
dec
cmp
test
dec
dec
out
xchg
push
inc
arpl
scas
adc
js,pn
je
fcmovb
in
add
scas
pop
imul
loop
push
push
mov
xchg
lods
mov
outsl
fcomps
ss
sub
add
bound
stc
jae
push
aam
mov
js
push
nop
xchg
sbb
mov
xchg
mov
jecxz
cld
fldl
or
insb
or
xchg
inc
pop
je
test
adc
aad
cwtl
subb
jo
aam
and
adc
add
xor
jns
inc
fiadds
push
adc
fistl
out
gs
add
mov
nop
xchg
fidivrl
push
push
add
cmp
jmp
lods
dec
sbb
das
stc
cmp
cmpsb
inc
out
in
inc
adc
pop
repz
cwtl
xchg
es
inc
xor
pop
mov
xor
rclb
insl
fdiv
jecxz
push
xor
test
std
cli
pusha
in
fs
push
mov
and
out
xor
test
jg
ret
jge
fldenv
or
aaa
jb
dec
or
stc
insl
mov
add
popa
sub
sbb
enter
cli
sahf
popf
scas
scas
shr
into
mov
xchg
insl
popf
cmc
popa
sbb
ret
repz
outsl
adc
insl
bound
dec
cmp
repz
adc
sarl
xor
pop
movsl
jg
scas
add
pop
cmp
jno
mov
pop
jae
subl
fbstp
mov
daa
xchg
add
inc
test
jg
mov
dec
sbb
lods
mov
mov
push
je
add
or
push
sub
hlt
nop
jae
cmp
pop
fsubs
outsb
push
scas
pop
xchg
addr16
adc
js
inc
sub
pusha
add
pop
or
xchg
in
push
mov
cmp
cmp
mov
mov
add
sub
adc
sbb
xor
in
jae
nop
out
cli
leave
inc
call
stos
lret
mulb
dec
imul
adc
mov
mov
icebp
push
into
and
repz
xor
dec
jl
mov
lahf
dec
dec
add
insb
ror
rolb
jae
push
dec
aam
mov
sub
dec
out
push
jge
int3
inc
divb
cmpb
stos
pop
fldl
pop
mov
jmp
xchg
mov
cmp
in
ljmp
pop
or
fsubr
test
je
aad
int
or
mov
add
xor
inc
mov
xchg
mov
mov
in
pop
movsl
sahf
nop
pop
fmul
push
pusha
push
dec
jb
lods
push
cmp
xchg
lahf
out
mov
xchg
jmp
mov
aas
and
push
lds
fcomps
pop
scas
mov
popf
aaa
ret
aas
cmpsb
cs
ja
rcl
mov
into
les
cmp
imul
ret
mov
sub
adc
lods
sub
sub
xlat
add
jne
ficoml
enter
scas
sbb
aam
test
jns
dec
arpl
lcall
and
nop
inc
scas
movsb
push
push
sarb
cmp
xchg
fnstcw
out
jno
ss
pop
cmp
movb
push
pop
push
dec
nop
sbb
pop
jb
dec
repnz
ret
jle
subl
mov
and
icebp
sbb
inc
mov
push
jge
pop
mov
inc
ret
xchg
and
jecxz
xor
adc
rorb
in
lret
sbb
arpl
loop
mov
xchg
cli
xor
dec
dec
jecxz
jp
mov
or
icebp
inc
lcall
pusha
push
cwtl
xchg
arpl
push
jns
adc
int
repnz
or
pushf
lea
push
or
mov
dec
jae
sbb
adcb
mov
in
lods
pop
in
in
dec
cli
stc
pop
sub
mov
jno
ss
inc
filds
sub
mov
mov
xor
xchg
icebp
je
adc
adc
imul
pop
pop
insb
pop
stc
pop
fbstp
and
jno
imul
and
arpl
imul
cmc
add
add
pop
aaa
pop
jae
daa
sbb
pop
sub
cmpsl
rcrb
vshufps
std
dec
push
inc
scas
fs
mov
pop
cmpsl
cltd
push
and
aas
adc
mov
xor
or
call
dec
cs
xchg
popa
or
xchg
sbb
inc
rorb
mov
add
dec
xor
mov
shlb
jge
cli
mov
es
sub
test
xor
dec
repz
sbb
sbbl
mov
dec
bound
ja
cmp
mov
aad
lods
lock
out
inc
dec
jns
cmp
cmp
push
lods
jl
ss
int3
push
mov
jecxz
loope
enter
push
sar
jne
call
test
pop
lock
dec
cmp
or
ds
es
out
and
push
sbb
data16
cmp
pop
xchg
inc
adc
xchg
push
iret
xlat
xchg
test
imul
jbe
push
test
es
push
dec
mov
sbb
adc
bound
arpl
push
bound
loopne
scas
mov
sub
fmuls
mov
xor
and
lahf
movsb
lret
pusha
xor
test
mov
stos
stos
outsl
xchg
adc
and
jb
in
and
push
loop
aas
ret
inc
lcall
pushf
rcrb
push
movsl
sti
mov
mov
cmp
pop
push
and
fsubrp
out
fs
mov
ret
adc
fcomps
xchg
into
js
push
pop
add
cs
out
mov
fbld
mov
mov
mov
repz
dec
or
aam
add
pushf
inc
mov
jmp
inc
hlt
inc
mov
xchg
enter
sub
in
xor
inc
iret
bound
jne
ret
sub
fidivrl
pop
gs
and
mov
mov
dec
aam
pop
insl
or
push
cmp
out
xlat
mov
repnz
lods
add
push
mov
sub
jmp
aad
cmpb
pop
or
mov
in
ret
out
ss
mov
in
cwtl
sub
lcall
dec
push
and
fsubl
cmpsl
ret
out
mov
inc
xor
inc
pop
jle
scas
cmpsl
iret
std
iret
rorb
sub
inc
orl
mov
or
mov
scas
sub
cmp
addr16
pop
dec
xor
cmc
mov
and
xchg
lock
dec
outsl
inc
adc
stos
shrb
shll
sub
mov
pushf
pop
mov
int3
or
dec
pop
stc
ret
or
push
mov
mov
sub
in
jbe
stos
into
mov
lret
shll
mov
sbb
mov
jae
push
dec
fs
stc
in
outsl
mov
pushf
jns
or
or
mov
xlat
push
pop
mov
sub
out
inc
out
jnp
push
inc
daa
lahf
cmp
aad
loope
add
fstl
xor
ret
mov
out
adc
imul
fidivs
ljmp
inc
cmpsb
mov
adc
and
leave
in
xlat
xchg
test
mov
add
mov
into
cmp
iret
movsb
cld
inc
sub
fisubrs
std
add
nop
shlb
adc
mov
and
movsl
loopne
mov
push
or
push
inc
lcall
adc
mov
xlat
les
mov
inc
xchg
jl
stc
in
inc
fcoml
mov
and
test
pop
cmpsb
sbb
movsb
push
lods
neg
mov
movsl
mov
lcall
adc
and
iret
jmp
loope
movsl
add
leave
xor
pop
aam
adc
jns
and
mov
imul
icebp
inc
adc
outsl
stos
cwtl
adc
outsb
mov
out
in
mov
clc
sub
mov
mov
jb
inc
jnp
mov
add
es
mov
jecxz
sbb
inc
daa
push
bound
cs
aam
mov
leave
mov
mov
pop
fnstenv
pusha
xor
adc
pushl
sub
and
js,pn
mov
cmc
rcrl
sahf
test
pop
fs
and
mov
cmp
out
jg
or
cmc
dec
nop
mov
repnz
and
jp
loopne
adc
sub
fcmovnbe
pop
clc
pop
roll
and
lods
cmp
xchg
sub
cwtl
push
jge
push
xor
mov
xchg
jp
jp
testl
call
rcl
clc
imulb
fs
jno
jae
push
or
popa
popa
ds
mov
testl
cld
es
dec
push
add
jl
mov
btc
mov
sarb
in
ret
mov
fs
or
jl
sbb
pusha
popf
pop
lret
push
fisubs
stos
loope
mov
jb
jmp
inc
add
flds
push
pop
inc
lcall
mov
mov
jge
pop
cmp
xchg
push
cmp
rol
inc
adc
cld
outsb
adc
rol
jl
pop
mov
add
jb
sub
sub
repnz
or
ror
out
mov
ss
orps
push
aaa
jb
xchg
mov
cmc
cmpsb
ja
add
ss
repnz
or
push
repnz
icebp
jne
mov
mov
add
mov
adc
push
sarb
push
push
sbb
in
fwait
out
int3
push
mov
push
push
movsl
push
mov
mov
outsb
adc
inc
cmp
dec
mov
push
cmc
lds
mov
in
aas
cmp
int3
fistpl
sbb
jp
std
pop
out
jmp
dec
and
pop
or
or
popa
popa
push
call
push
popa
imul
bts
dec
test
add
lahf
and
jg
loope,pt
ror
jbe
scas
cltd
cld
gs
data16
xchg
movnti
aam
arpl
call
int
mov
xor
sahf
mov
movsl
or
push
data16
lock
pop
jnp
jo
dec
fdivrl
sbb
inc
add
call
imul
std
std
dec
cmc
push
cltd
push
daa
cli
mov
iret
lock
adcb
enter
adc
cld
sub
push
jmp
mov
inc
ljmp
mov
testl
or
notb
mov
scas
mov
jnp
dec
mov
fwait
inc
add
jb
add
subl
mov
push
add
push
jle
pop
lods
pop
cmc
out
jne
daa
test
add
loop
mov
lret
cld
push
and
das
xchg
mov
mov
push
pop
ret
in
mov
and
adc
inc
push
ja
enter
mov
inc
mov
cmc
sbb
int
in
dec
pop
ljmp
jl
adc
in
and
dec
ficoms
jns
arpl
cmp
sti
leave
pop
cmp
push
push
jge
mov
mov
sahf
mov
push
jmp
outsb
mov
dec
rcl
movsb
jle
fldt
jns
ljmp
mov
jl
out
mov
sbb
xchg
or
inc
clc
add
dec
xor
mov
scas
aad
push
mov
push
adc
jle
std
cltd
and
dec
mov
jnp
push
push
sbb
movsb
xchg
mov
mov
ret
gs
lahf
adc
xchg
jne
and
xchg
sub
enter
or
push
mov
dec
repz
mov
imul
btc
xchg
test
cmp
xchg
jae
hlt
fidivl
cmp
imul
cmp
movsl
loop
jno
movsb
in
insb
movsb
pop
add
movsb
mov
ja
mov
jl
mov
aad
xchg
sahf
fs
or
rorl
sub
mov
xchg
cmp
adc
loop
movsl
sub
ficomps
ja
sbbl
push
fs
or
jmp
pop
mov
xchg
clc
add
inc
inc
lar
mov
dec
adc
cmpsb
imul
popa
int
fmul
lock
inc
lock
pop
stos
movsl
lods
jo
jnp
mov
addb
je
inc
cwtl
stc
dec
or
and
cli
cmp
push
jl,pn
lret
add
push
xor
inc
pop
and
iret
or
in
xchg
repnz
mov
add
and
sahf
popa
pop
inc
pcmpeqd
adc
test
test
mov
dec
pop
subl
lret
mov
das
mov
jmp
mov
das
ljmp
sbb
add
repnz
dec
or
dec
pop
je
lahf
or
mov
mov
fs
stos
and
dec
mov
rorl
sarb
scas
stos
jns
mov
push
punpcklwd
dec
lock
test
outsb
add
adc
test
push
adc
mov
leave
cld
not
add
and
jns
iret
jbe
loop
mov
dec
insl
movsl
cmpsl
fmull
cmp
pusha
xor
clc
mov
jmp
fnstenv
mov
sub
mov
inc
sub
inc
enter
sub
cli
pop
daa
inc
sub
xor
leave
pop
xor
xor
jmp
hlt
dec
jle
in
les
mov
pop
xor
sbb
mov
loope
in
sbb
aad
repz
jns
dec
jp
dec
push
rcrl
adc
mov
cmp
jb
xchg
inc
imul
inc
cmpsb
push
divb
addl
int3
es
push
and
mov
nop
imul
cmp
lahf
jmp
arpl
cmpsb
mov
sbb
sbb
ljmp
push
xchg
clc
inc
mov
mov
xchg
test
mov
movsb
inc
jmp
stos
and
leave
sub
notl
adc
imul
xchg
jp
mov
xchg
xor
mov
movsb
push
push
cmp
xor
lock
pop
out
flds
lahf
jno
mov
xlat
pop
pop
jno
stos
xchg
cld
pop
push
lea
sbb
cmp
shlb
pushf
lret
or
add
cmp
in
mov
jno
fisttps
stos
xchg
clc
xlat
into
mov
scas
adc
mov
or
insl
and
add
rcrl
jmp
insb
js
xlat
sub
adc
xchg
pop
shl
scas
jl
in
cmp
mov
jge,pn
cmc
mov
aam
dec
push
cmp
xor
adc
stos
or
sarb
jnp
sti
imul
out
mov
xchg
aaa
fwait
xor
icebp
jnp
hlt
add
push
fsubs
push
mov
and
cwtl
xor
loopne
es
push
cmpsl
sub
fcos
aam
fwait
dec
rcrb
mov
in
or
stos
nop
xchg
pop
push
loopne
ja
aaa
mov
sub
inc
add
ja
ret
aas
inc
rcrl
inc
stos
stos
das
cmp
jbe,pt
rorb
xchg
sbb
jns
jns
roll
and
rorl
adc
adc
push
add
dec
sarl
ret
pop
data16
xchg
roll
cmp
ja
push
cltd
and
lock
jle
inc
movsl
shlb
into
dec
andb
jg
int3
pop
nop
call
aam
outsb
scas
mov
js
leave
fs
gs
sub
push
xchg
jne
xor
jo
clts
dec
cmp
popf
lret
inc
mov
add
push
inc
mov
shl
jno
jb
ret
sbb
sti
push
pop
in
out
add
cmp
jns
cmc
pop
cmp
std
jno
jb
jbe
lock
adc
loopne
jmp
sub
aaa
cmp
jno
mov
es
jnp
cmp
dec
jne
mov
int
xchg
mov
rcrb
test
pop
pop
lock
xchg
imul
imul
jbe
mov
mov
fnsave
add
push
loopne
inc
out
pushl
daa
jecxz
loope
inc
mov
mov
jae
sti
das
in
iret
dec
jmp
mov
jno
mov
pop
pop
add
test
lret
adc
lcall
loopne
bound
pinsrw
aaa
clc
ja
inc
les
cmp
and
push
adc
xchg
incl
cmp
or
lret
xor
insl
outsb
and
pop
push
and
sbbb
rol
fwait
mov
jae
jmp
fldenv
mov
dec
push
mov
je
sub
push
xor
inc
movzbl
and
mov
mov
repnz
pop
jle
inc
lods
cwtl
cmp
dec
pusha
add
nop
lret
jl
clc
push
xchg
lcall
mov
pop
repnz
inc
cmpsb
fsubs
outsb
jne
dec
mov
jmp
ss
in
lods
pop
fisubrl
rol
xchg
in
and
movsl
adc
xchg
popf
or
lea
mov
test
add
jmp
adc
lret
jno
mov
push
jl
or
adc
arpl
adc
xchg
xor
sahf
mov
sub
outsl
cmp
shl
imul
loop
dec
mov
pop
mov
ljmp
jbe
xor
add
cmc
loop
inc
cmp
lcall
mov
call
outsl
popa
fidivrl
xor
in
fs
shrb
push
jnp
mov
push
add
dec
mov
cltd
or
adc
sub
out
xchg
xor
xchg
mov
push
inc
enter
mov
rcll
pushl
inc
add
push
adc
ja
sahf
mov
push
or
and
mov
loope
mov
pop
aam
or
adc
cmp
and
jg
scas
shlb
mov
xor
mov
adcl
mov
xchg
imul
movsl
data16
adc
adc
popf
fsubs
out
mov
or
fistpll
xchg
int
push
sahf
sub
xor
add
and
bound
in
push
xor
xchg
add
adc
mov
fucomip
mov
sbb
roll
hlt
push
lods
jnp
out
arpl
sub
aaa
repz
filds
push
or
loopne
imul
and
arpl
add
push
mov
in
push
sub
or
mov
dec
aad
adc
loopne
inc
test
cltd
or
ja
loopne
mov
and
xor
inc
jne
adc
and
jns
push
dec
xchg
int3
inc
into
xchg
jbe
loope
mov
xchg
sbb
sub
cmp
adc
lret
push
repnz
mov
sahf
aad
insl
adc
mov
imul
xchg
scas
imul
dec
das
pop
sbb
sbb
and
pop
cmpsl
and
jmp
sub
add
testb
int3
sub
add
nop
cmpsb
iret
test
nop
or
dec
daa
mov
mov
mov
lret
sub
outsb
sbb
call
punpckhdq
lds
or
adc
lret
adc
and
inc
pop
cmp
scas
cmc
add
xchg
mov
jno
mov
sbb
int3
jge
andl
fstl
pop
dec
aas
mov
mov
mov
push
push
pop
sbb
inc
stc
aam
adc
gs
fcmovne
sbb
ret
iret
aas
pop
cltd
mov
jbe
sbb
pop
add
push
mov
cld
loop
push
push
add
loopne
dec
cmpsl
mov
jle
cli
cmpsb
loope
xchg
insb
mov
mov
jp
sti
mov
hlt
adc
notb
mov
cmp
aas
in
mov
pop
mov
daa
stos
lods
fwait
cmpb
xor
loopne
pusha
pop
pop
adc
jl
inc
inc
mov
mov
xchg
and
pop
mov
test
xchg
xchg
sbb
mov
push
mov
mov
jle
dec
push
outsb
mov
cmp
ret
loopne
adc
fwait
jbe
push
jge
lret
dec
jbe
mov
ficomps
test
mov
fcmovnb
out
or
test
in
xchg
jno
int
jb
rcll
push
leave
arpl
mov
sysexit
aaa
sub
xor
inc
hlt
dec
mov
sbb
movsl
mov
fsubrl
xchg
xchg
sbb
sahf
mov
dec
imul
adc
sbb
jae
mov
lods
adc
jne
aad
aam
paddq
fcoms
addr16
push
xor
mov
std
push
lods
xlat
mov
fcoml
cmp
cs
cmp
shll
movsl
imul
push
int
xorb
inc
inc
les
adc
out
mov
iret
mov
push
mov
push
push
jae
pop
add
pusha
sti
aaa
or
aaa
and
pop
pop
push
push
ljmp
inc
inc
lods
sbb
sub
negb
xchg
psubw
repnz
aas
mov
cwtl
and
cli
mov
cli
popa
adc
leave
add
mov
daa
push
cmp
jg
push
dec
lret
or
mov
adc
popf
cmp
pop
mov
shrb
scas
movsl
add
ret
mov
push
lods
pop
dec
pop
jb
aaa
popf
sbb
insb
loop
es
scas
je
inc
ljmp
ja
add
in
mov
in
jecxz
pop
shll
adc
imul
adc
cmp
add
mov
push
add
adc
or
or
mov
xor
sub
dec
mov
test
mov
pop
pop
mov
fnstenv
add
push
into
es
cmp
fs
mov
out
inc
popa
cmc
js
ret
xor
xchg
cs
sbb
xchg
inc
filds
jnp
or
iret
cmp
pop
insb
sbb
shll
clc
pop
cmovle
out
imul
test
leave
into
mov
or
bound
xor
jbe
mov
ds
cmp
and
xor
pop
dec
mov
cmp
sahf
repnz
mov
fnop
jp
in
jno
mov
loop
mov
mov
and
pusha
mov
cld
push
adc
bound
jp
push
insb
sbb
inc
pop
in
fdivl
push
icebp
cli
dec
add
cltd
je
inc
mov
into
xor
and
sbb
push
lea
ljmp
lods
loope
pusha
and
mov
cltd
dec
jp
out
push
aas
mov
in
pop
test
xchg
lret
loopne
mov
adc
arpl
jnp
push
int
cli
aaa
iret
cmp
cmp
sbb
mov
scas
insb
mov
pop
sub
adc
lahf
xor
aaa
mov
inc
mov
pop
loop
hlt
icebp
xor
cld
jo
cmp
push
stc
push
std
pop
pop
lahf
pusha
add
arpl
std
pop
jne
jne
mov
push
cmpsl
call
mov
sub
jge
or
sub
mov
sub
testb
es
add
lret
popl
jbe
std
xchg
push
stos
pop
pop
jnp
rorb
into
push
pop
jns
mov
mov
aam
inc
jo
int
inc
or
lret
imulb
fnsave
mov
jmp
mov
dec
mov
mov
in
fnclex
push
fsubs
cli
dec
mov
scas
push
sub
lods
adc
loope
repz
jp
andl
loope
adc
jb
shlb
or
icebp
and
sbb
arpl
pop
push
mulb
imul
insb
and
pushf
pop
loop
pop
mov
add
cmp
cmpsl
orb
cmp
stos
fcmovnu
ds
das
push
jp
sub
movsb
adc
add
int
push
xor
inc
lret
mov
mov
sub
xor
adc
insl
push
iret
pop
dec
pop
dec
nop
mulb
inc
outsb
dec
inc
lods
pop
int3
push
into
mov
mov
test
mov
push
ds
xor
sbb
sub
leave
or
out
fdivrl
pusha
pop
iret
cmp
mov
jns
repnz
sub
iret
or
dec
xor
sub
in
jle
ds
pop
push
dec
arpl
inc
cltd
shll
aad
imul
sub
dec
xchg
popf
cmp
mov
xor
dec
arpl
mov
movsl
jecxz
add
and
mov
dec
push
rcll
dec
decb
mov
push
aaa
mov
xor
cld
inc
out
ss
scas
dec
rdtsc
add
push
fdiv
pop
mov
pop
jmp
insb
stos
loope
adc
or
das
mov
xor
nop
dec
es
arpl
xor
xor
jmp
dec
fldt
aas
cli
inc
test
inc
sahf
imul
fidivrl
mov
das
pop
xchg
adc
adc
xchg
mov
fsin
mov
mov
xor
mov
mov
add
xchg
push
aad
pop
lcall
aas
clc
out
pop
rorl
aam
cmp
jge
repz
sbb
lock
xlat
pushf
xchg
xchg
in
rcll
xchg
mov
inc
lret
add
std
jge
clc
and
mov
xor
mov
xor
sarl
add
std
sub
mov
in
pop
inc
lods
inc
rolb
pop
dec
xchg
add
inc
jae
sub
mov
adc
rorl
inc
sub
adc
rorl
fwait
popa
rorl
xor
lds
and
xchg
fsubs
out
dec
ljmp
mov
ds
clc
adc
inc
mov
sbb
xchg
jno
loop
cmc
mov
mov
lcall
xor
inc
sub
cs
add
push
dec
mov
xor
mov
mov
je
push
dec
ds
cld
movsl
icebp
mov
mov
testb
das
cwtl
int
loope
sbb
cmp
jno
pop
in
mov
xchg
popf
push
mov
pop
jo
enter
xor
and
jle
adc
mov
xor
fiaddl
fstpl
aam
fwait
jg
inc
or
mov
pop
jge
sub
sub
scas
cmovnp
sub
es
dec
int
shll
mov
sbb
inc
xchg
popf
outsb
insl
pop
popf
xlat
jo
sbb
imul
pusha
lea
xor
and
test
adc
push
sub
or
outsb
out
insb
inc
and
push
js
out
mov
cld
ss
fucompp
in
mov
adc
xchg
cmp
inc
push
jmp
cmp
and
cs
sbb
jnp
push
in
mov
bound
inc
addr16
enter
sub
outsb
shll
sbb
or
lock
dec
inc
loope
push
lds
sub
pop
out
mov
movb
pop
aas
cmp
mov
notb
xor
test
xor
sub
jns
inc
and
lahf
xor
mov
mov
mov
inc
pop
stc
mov
pop
xchg
mov
cmpsl
mov
movsl
arpl
sub
pop
push
mov
mov
push
or
movsl
mov
add
and
xchg
jo
mov
sbb
xchg
inc
jle
cmpsb
jne
std
push
ret
ss
cmp
pop
inc
jnp
lock
out
fidivs
dec
clc
ss
xor
and
fnsave
jle
hlt
pop
push
mov
sub
inc
cmpsl
loop
jl
imul
pop
and
sub
std
jle
cmpsb
imul
daa
sub
xor
aas
mov
mov
fwait
mov
and
mov
sbb
xor
adc
dec
test
pop
sub
lahf
enter
in
es
iret
cwtl
cmpsb
mov
imul
push
mov
call
fnstcw
lret
fldl
iret
push
es
ds
and
cmp
jp
popf
push
filds
insl
pop
fiaddl
repnz
shll
mov
mov
out
lods
loop
subl
mov
push
inc
pop
xchg
or
ret
mov
pop
add
lds
add
jno
leave
les
xorb
repz
fdivs
and
scas
mov
mov
mov
lcall
ret
nop
mov
icebp
cmp
mov
sbb
das
pop
insb
mov
jns
mov
cld
jg
inc
add
push
insb
bound
or
mov
lahf
jne
mov
xchg
inc
rolb
es
push
dec
stos
scas
mov
test
adc
dec
sub
addr16
loop
xorb
out
inc
mov
scas
out
mov
jb
mov
adc
jns
xor
lods
pop
lods
data16
int3
jne
jns
std
mov
push
orl
pop
mov
inc
and
hlt
cmpsb
lods
mov
cmp
fisubs
mul
je
add
dec
shrb
ljmp
test
lret
mov
mov
aas
lret
adc
lret
int3
orb
sbb
insl
fsubr
jne
pop
int3
jge
mov
sti
sub
xchg
sbb
push
adc
clc
sbb
fnsave
xor
or
std
mov
dec
pop
icebp
push
or
jg
fwait
cmp
or
in
mov
cli
aas
das
loopne
push
add
pushf
inc
mov
dec
ficomps
and
iret
mov
xor
xor
sbb
je
std
and
xor
scas
int3
adc
les
dec
cmc
mov
xchg
lcall
imul
test
adc
cmpsl
cmp
sbb
push
aam
xchg
pushf
fmuls
or
xchg
xor
pop
lret
sti
pop
xchg
pop
or
jle
inc
jne
cmp
cmp
mov
mov
lret
negb
ljmp
push
mov
lahf
jg
sub
ds
jae
and
push
jnp
ret
sub
icebp
cmp
imul
pop
and
mov
or
adc
call
test
lods
or
adc
flds
cwtl
ror
mov
dec
ja
pop
mov
jge
mov
insb
nop
lea
ss
pop
cpuid
sbb
cld
cmp
lcall
fs
leave
sub
fimuls
mov
or
shrl
call
orb
inc
mov
add
das
sbb
rclb
cmp
sbb
negb
dec
push
test
jbe
mov
clc
and
or
cmp
ret
leave
inc
adc
mov
push
ret
push
stos
aad
jo
insl
fists
shrl
rolb
fwait
lds
pop
inc
bound
ret
or
or
cmpsb
ss
out
mov
sbb
out
call
mov
fmull
stc
ret
je
mov
js
dec
push
or
xchg
ja
lods
popf
and
jbe
push
add
jmp
pop
xchg
loope
xchg
leave
xchg
push
outsl
mov
mov
shl
lock
roll
in
aaa
adc
push
data16
mov
jp
ret
mov
lcall
sbb
lock
fwait
cmp
nop
jo
push
arpl
pop
ret
push
mov
lock
in
pop
hlt
and
or
cmp
dec
inc
enter
mov
mov
mov
call
mov
int3
pushl
inc
fucomi
adc
or
testb
test
std
int
cwtl
fcmovu
aam
sub
pop
add
mov
xor
in
movsb
sbb
inc
imul
int3
xor
mov
les
fdivs
pop
sbb
ss
lods
cmp
sbb
xor
adc
pop
rcrb
jge
xor
mov
dec
gs
and
sbb
iret
aad
or
sbb
push
xchg
movzwl
iret
sbb
mov
bound
dec
add
xor
jecxz
or
pushf
mov
jbe
out
xor
and
push
and
fdivl
arpl
mov
push
mov
loop
ret
insl
ror
mov
adc
test
out
inc
lock
mov
mov
popa
inc
fcompl
imul
mov
push
adc
in
mov
enter
xor
xor
xor
dec
mov
bnd
xchg
adc
outsb
add
push
js
pop
int3
xchg
test
cmp
leave
push
mov
ljmp
or
jbe
mov
jae
repnz
test
dec
push
mov
sbb
and
mov
ja
mov
fs
xor
ja
test
sbb
aam
arpl
pop
pop
stos
outsl
cmp
icebp
dec
daa
mov
and
push
xor
jg
scas
iret
pop
or
and
ret
addr16
inc
sub
stc
das
mov
push
mov
xchg
mov
push
bound
cmpsl
jne
add
sahf
fwait
in
loopne
sbb
xchg
or
or
jge
jne
pop
and
and
xor
dec
outsl
push
and
out
dec
cltd
js
and
mov
das
fisubrs
cmpsb
les
jo
cmp
mul
mov
in
clc
testl
mov
lock
inc
push
hlt
or
pop
mov
cli
fwait
inc
in
xchg
jne
push
loopne
lods
and
sub
dec
add
fisubs
cli
xchg
mov
mov
lret
jl
or
push
adc
adc
outsl
push
fdivrs
cmp
addl
add
test
xor
push
js
divl
lret
xor
add
add
ret
jp
lret
popf
int
push
int
push
enter
push
jno
inc
jnp
xchg
or
rolb
mov
nop
xor
mov
xchg
xchg
dec
cmp
int3
sbb
inc
stos
mov
pop
sbb
sbb
cwtl
out
cld
mov
inc
dec
lcall
daa
inc
jmp
sarb
push
push
sar
lret
test
sub
in
jmp
jns
mov
lods
dec
ret
cmp
push
jb
jecxz
les
clc
sub
int3
jl
and
dec
sub
xchg
jnp
push
pusha
or
mov
jmp
pushf
aad
push
popf
cmp
das
mov
mov
insl
jbe
push
ds
sbb
push
fistpll
mov
push
ficoms
iret
inc
pop
test
cmpsl
daa
lret
pop
lods
clc
loope
and
mov
out
jns
popa
or
insl
cmc
jge
adc
mov
repnz
fdivs
or
cli
pop
xor
mov
sub
popf
sbb
inc
jo
adc
loop
test
mov
dec
das
jl
stc
jb
test
loop
xchg
icebp
gs
ja
and
push
push
lcall
aas
add
push
js
push
xor
jo
jnp
mov
jns
into
or
shlb
xor
movsb
jb
fcoms
negl
xchg
push
adc
fstpt
loop
push
fwait
loop
sub
and
sahf
adc
cld
es
les
push
out
ja
lods
insl
mov
sub
lahf
lret
sbb
jmp
mov
movsl
ficoms
pop
jp
cmp
or
cmp
sbb
jecxz
pop
mov
clc
leave
jb
cmp
push
sub
cmp
cltd
lcall
shrb
lahf
xchg
push
je
pushf
mov
sbb
cmp
pop
mov
and
cmp
xchg
push
adc
arpl
add
dec
je
nop
pop
jb
cmp
imulb
jg
sbb
scas
pop
popf
pop
cltd
xchg
pushf
push
mov
cltd
xor
xor
or
cmp
mov
insl
hlt
in
pop
mov
das
dec
stos
lret
jne
stc
push
dec
cmp
out
out
stos
mov
pushf
mov
sbb
hlt
movsl
inc
mov
stos
ficoms
ljmp
mov
jo
jae
cli
aaa
jae
jge
jae
scas
jecxz
pusha
cmp
enter
sbb
loop
leave
movsl
test
xchg
ljmp
rclb
loopne
lcall
mov
test
push
cmp
pop
pop
mov
push
rcrb
ljmp
pop
mov
mov
push
loopne
repz
mov
arpl
mov
jg
ja
mov
xchg
or
lods
mov
inc
push
mov
sbb
cs
es
push
stos
jl
sbb
repz
mov
fwait
call
xchg
daa
inc
ds
roll
addl
lea
cmp
ret
mov
jle
movsb
jmp
dec
dec
push
jo
sbb
dec
mov
and
mov
push
mov
sahf
sbb
call
mov
pop
rcrb
sbbl
ljmp
fwait
stos
xchg
lcall
mov
sti
mov
mov
sbb
push
insb
add
gs
sbb
dec
push
test
sahf
insl
mov
cmp
xlat
repnz
rcll
call
or
xchg
dec
xor
call
and
movsb
pop
outsb
and
outsl
adc
sbb
or
gs
pushf
outsl
mov
sti
imul
cmpl
sub
lahf
mov
pop
dec
dec
xchg
repz
ffree
push
mov
jecxz
mov
lods
push
data16
cld
lret
push
add
arpl
pusha
cmp
mov
push
gs
mov
out
fwait
xor
in
fiadds
sahf
lret
fisttpl
movsb
mov
pop
mov
pop
push
pop
hlt
xchg
ljmp
stc
and
fsubr
test
into
mov
and
iret
neg
pop
lret
push
movsl
mov
int3
int
pop
aad
mov
sub
cmpsl
repz
cmc
sahf
cmp
lret
lret
mov
gs
rorb
xor
rorl
or
stos
xchg
jmp
cwtl
testb
int3
test
push
loopne
testb
out
int
pshufw
push
push
dec
jmp
sbb
lret
or
or
or
and
outsb
push
sub
dec
pop
rcrl
mov
push
icebp
sbb
rcl
pop
dec
stc
inc
sbb
mov
push
xchg
add
sarb
insl
cli
in
mov
ss
dec
das
sbb
dec
xchg
negl
pop
incl
pushf
mov
aad
lock
repz
aas
stos
or
pop
lock
and
jg
add
stos
pop
and
mov
mov
or
cld
jb
and
lods
jb
imul
mov
enter
cmp
aas
into
mov
mov
fstpt
jne
xor
bound
leave
dec
push
xchg
sub
sbb
push
sbb
sarl
in
imul
xor
inc
imull
imul
cmc
xchg
pop
sbb
cli
xchg
cmp
faddl
mov
sub
xchg
jle
fisubrl
test
or
addl
lcall
cltd
stc
sbb
je
sar
jb
inc
mov
and
add
jge
mov
dec
jb
test
outsb
ss
jbe
sahf
inc
push
pusha
push
or
call
adc
jae
movsl
fiadds
xchg
iret
rorl
or
adc
or
sub
test
cmp
dec
pop
das
dec
iret
jle
add
movsl
jbe
repnz
cmc
lods
shll
and
xor
inc
repnz
popf
jp
fdivrl
sub
push
jae
leave
sbb
dec
dec
lcall
pop
fdiv
test
cmc
push
fwait
int3
cmp
jb
sbb
and
mov
dec
adc
adc
mov
sahf
or
sarb
or
fnsave
into
cmp
sbb
jne
out
lds
cwtl
push
jno
cmp
nop
add
inc
int3
adc
inc
adcl
jecxz
push
xor
sbb
les
dec
imul
cltd
stos
jne
pop
add
cmp
cs
fimuls
mov
cmp
aad
adc
mov
lcall
out
mov
vmread
jmp
xchg
jg
fdivl
ret
fildll
outsl
mov
and
mov
and
xchg
jns
fs
shll
fld
stos
or
inc
hlt
mov
mov
add
test
gs
enter
jp
addr16
in
imul
add
mov
xlat
pop
cmc
adc
andb
fistps
out
hlt
pusha
testb
dec
scas
mov
outsl
mov
lock
cmp
outsl
sbb
inc
cmp
pop
cmp
mov
fldcw
dec
dec
scas
pop
xor
mov
into
cli
test
cs
xchg
push
roll
push
pop
and
sbb
mov
mov
push
dec
dec
mov
pop
pop
mov
and
dec
imull
popf
mov
jne
push
ja
in
cltd
adcl
inc
mov
aam
mov
pop
pop
mov
mov
sahf
adc
sti
in
jle
cmc
cli
ret
bound
xor
pop
sub
dec
jo
pop
pop
aad
push
jne
cmp
xor
sub
mov
rorb
and
cmpsb
sub
cmp
ficoml
add
dec
enter
xor
mov
xor
inc
out
xchg
mov
xor
jnp
pop
lcall
test
push
lea
ljmp
jns
pushf
mov
das
mov
sub
popf
pop
cmpsb
lcall
mov
stos
out
cmp
rcl
jge
push
movl
jno
mov
add
mov
mov
sbb
mov
or
clc
jae
xchg
jmp
sbb
inc
cmpsl
jecxz
xchg
add
pusha
xor
imul
icebp
enter
jge
mov
rclb
jno
add
ffreep
sub
shlb
xchg
inc
mov
hlt
xchg
nop
pop
mov
jno
adc
jl
fwait
mov
adc
jae
adc
and
sbb
aad
xor
aam
std
fsubr
and
dec
mov
mov
xor
jp
sub
mov
dec
add
lret
adc
cli
inc
and
mov
lds
leave
jne
data16
mov
dec
xor
jl
je
jae
cmp
lcall
inc
add
inc
ja
push
scas
clc
sbb
dec
or
jge
mov
sub
cs
mov
xchg
push
insb
in
push
cmp
xor
das
mov
lahf
jl
mov
je
lock
inc
std
out
int3
adc
xchg
in
sbbl
push
mov
stos
mov
sub
push
in
mov
dec
inc
mov
loopne
jg
insb
sub
lock
insb
jb
int3
pop
inc
mov
mov
lds
fucomp
outsb
xor
adc
add
xor
and
pushf
ret
mov
xor
push
fcompl
enter
pop
fdivs
mov
push
je
xor
pop
std
lret
out
iret
xor
add
in
jo
jg
scas
testl
sub
xor
lock
setae
mov
movsl
fwait
mov
int
fwait
mov
scas
push
enter
jo
mov
pop
dec
rcll
push
sub
lcall
cmpsl
xor
or
iret
into
push
mov
dec
xor
and
add
inc
add
or
xchg
sbb
adc
fcmovnu
sub
mov
fsubrp
dec
and
mov
cs
fnstenv
adc
dec
jo
inc
imul
iret
mov
pop
jl
push
cli
mov
div
xchg
push
loopne
cld
sub
insb
mov
mov
cmp
sub
out
fxch
in
xor
push
mov
in
repz
gs
in
stc
xor
ds
or
push
lahf
push
lock
push
push
fimull
dec
jecxz
xor
pop
stc
ret
pop
adc
mov
add
xchg
jb
and
outsb
std
ret
hlt
sbb
mov
pusha
sti
dec
jecxz
xchg
adc
jg
enter
test
ja
jb
mov
lods
mov
add
jg
jge
mov
or
dec
push
lods
in
cmp
std
in
jae
ret
in
cmp
repz
shll
ljmp
stos
aas
pop
mov
cmp
mov
mov
sarb
add
mov
imul
rorb
inc
pop
cmpsl
sub
sti
add
add
enter
or
add
adc
pop
ss
jne
mov
lahf
insl
cmpsb
pop
sub
mov
adc
pop
mov
mov
andl
lret
stos
push
push
sbb
fs
popf
jecxz
jl
adc
jge
fsubrs
pop
or
std
jne
xor
or
dec
mov
mov
xchg
pop
data16
cwtl
xchg
add
pop
loop
lods
pop
sbb
in
xchg
mov
lock
scas
out
lea
mov
imul
xor
das
dec
insb
mov
testb
mov
xlat
jge
dec
test
std
movsl
loope
shl
das
mov
insb
mov
mov
es
sti
mov
int3
xchg
out
insb
hlt
adcb
adc
enter
ja
or
xchg
iret
mull
fldenv
fimuls
dec
movsb
dec
lret
enter
out
lcall
inc
in
loopne
pop
and
ret
mov
adc
xchg
pop
aaa
lahf
mov
mov
add
sub
movb
lcall
adc
fldt
dec
dec
pop
faddp
hlt
outsl
fwait
adcl
in
dec
or
push
mov
stos
fldcw
aad
rcrl
cmpl
fdivr
loopne
aam
cmpsl
sbb
popa
hlt
stc
add
cmp
sub
add
jecxz
xor
jae
js
pop
mov
xchg
add
movsb
dec
mov
and
insl
push
push
mov
sti
mov
add
xchg
insb
inc
or
push
scas
xor
xchg
push
mov
jnp
mov
adc
dec
inc
lcall
mov
in
xchg
popf
aad
insl
shrb
out
out
test
orl
stc
out
mov
pop
sbb
add
mov
loope
in
ret
shrw
push
push
rolb
fistps
je
jbe
pop
pop
push
movsb
rcrb
movsl
adc
pop
aas
dec
cmp
mov
iret
xchg
ja
cmp
hlt
ds
xchg
jnp
test
pop
mov
loope
mov
cld
cvtps2pd
add
sbbb
fwait
sbb
pop
sbb
cltd
push
jo,pn
lret
loop
xchg
inc
mov
jne
in
addr16
loopne
and
cmp
movsb
cli
movl
jne
xor
cmc
or
mov
ret
iret
inc
sti
or
jns
sub
or
cwtl
adcl
adc
mov
push
in
dec
loopne
push
repz
shl
out
jmp
out
sbb
data16
cmp
xchg
andb
movl
popf
mov
mov
roll
lret
cltd
and
sbb
popa
and
or
cmpsl
cwtl
ja
fdivl
jae
pop
out
jecxz
movsl
insb
inc
cmp
ret
xor
push
es
push
test
or
inc
cmc
dec
adc
dec
iret
hlt
aam
adcb
out
pop
lods
lret
sti
in
hlt
jmp
sbb
dec
mov
shrb
insb
and
cmp
out
push
out
fwait
shl
pusha
daa
lret
cmpb
and
insl
sbb
adc
in
cwtl
adc
fwait
dec
mov
xchg
mov
push
or
jle
lret
sub
inc
sahf
lods
popl
cwtl
pop
xor
daa
inc
out
mov
add
push
push
loope
mov
mov
inc
filds
push
cwtl
fisubl
shr
push
shlb
and
cld
fdivr
sbb
cmp
push
andnps
in
fbld
ret
dec
adc
fisttps
cmpsl
test
xor
std
jae
push
out
arpl
push
cs
je
or
or
fnstcw
js
pushf
sub
repz
ljmp
mov
sub
shr
or
cmc
jae
fdivrs
out
enter
lods
nop
sub
mov
mov
lcall
mov
adc
cmpsl
sub
cmp
and
int3
mov
fsubrp
push
xchg
pop
push
mov
js
sub
pushf
inc
dec
dec
sbb
and
cmp
stos
sbb
add
mov
mov
mov
mov
fistps
mov
push
leave
call
imul
jns
mov
sub
xchg
xchg
and
sbb
sarb
out
cmpsb
fs
mov
xchg
push
popf
cli
mov
inc
int3
sub
js
mov
cli
xchg
lods
mov
push
sbb
outsl
inc
stos
repz
push
mov
or
push
adcl
out
inc
adcl
sub
sub
ret
out
cmpsl
add
dec
sbb
mov
dec
ja
jnp
divb
sub
inc
xchg
mov
shrb
cmp
cltd
jnp
cltd
jns
jmp
es
dec
insl
in
clc
rclb
ret
jp
fisubrl
sbb
push
sahf
flds
cmp
xor
nop
pusha
sbb
cwtl
fs
leave
xchg
jmp
sbb
pop
adc
mov
jl
or
lods
loop
jmp
mov
test
loope
pop
mov
xor
pop
cwtl
popa
cmpsb
xor
xchg
dec
push
jecxz
xor
icebp
push
test
push
dec
xchg
or
iret
rclb
shrl
push
jae
ja
sub
mov
jp
cmp
or
dec
fidivrl
add
sbb
mov
fs
mov
test
test
jnp
aaa
sub
jnp
or
test
sbb
lret
jp
sbb
jp
mov
test
xchg
das
fsubl
or
decb
out
leave
ret
add
pop
adc
scas
or
cmp
xor
sti
jl
xchg
jl
addr16
mov
pusha
pop
daa
and
lock
mov
loope
sbb
cltd
loopne
sub
push
fidivl
roll
or
inc
xor
enter
les
je
mov
lcall
cvtdq2ps
lods
loope
mov
mov
out
fcmovbe
out
mov
insb
and
inc
mov
pusha
jp
sbb
movsl
xchg
test
pushf
mov
mov
fs
sarb
insb
repnz
xchg
sbb
fstl
xor
loopne
push
push
hlt
xchg
mov
loopne
push
stos
sub
fwait
pop
movsl
adc
mov
ljmp
scas
in
lods
pop
mov
push
pusha
pop
xchg
scas
or
dec
sub
ret
pop
aad
mov
mov
test
jno
cmp
push
int
shlb
dec
cmp
adc
dec
mov
sbb
test
cmp
imul
outsb
mov
add
xor
enter
cmpsb
ja
je
push
rclb
rcll
xchg
lret
mov
vmovshdup
fsubl
inc
into
call
aad
inc
lahf
mov
mov
sbb
mov
stos
cwtl
xor
mov
ret
jno
jbe
shrl
jnp
loopne
dec
mov
bound
sbbb
sub
inc
xorb
in
sarb
int
xor
mov
lock
push
or
mov
jmp
xchg
push
inc
jo
xchg
mov
es
jp
xchg
loopne
pushf
xchg
xchg
xor
xor
movsl
outsl
jae
sub
outsb
and
je
sahf
scas
rol
push
adc
cmp
aaa
mov
mov
scas
mov
cli
cs
and
adcl
mov
mov
pop
ret
pop
jle
ss
sub
sbb
mov
xor
mov
jae
loope
ds
jns
and
xlat
leave
outsl
leave
lea
adc
out
pop
dec
lret
rolb
mov
dec
lods
scas
int
xchg
stos
lahf
inc
aad
fisttpll
and
fistps
scas
loop
insl
mov
lcall
pop
in
sbb
call
pop
inc
inc
pop
inc
stc
cmpsl
dec
test
xchg
mov
int
dec
jno
add
ja
and
and
dec
ja
cli
mov
jle
cmpsb
lcall
and
push
popa
sbbb
push
loopne
andb
pop
jo
push
jnp
push
test
flds
stos
aas
mov
adc
and
xchg
adc
fs
mov
inc
xchg
xchg
mov
in
shrw
ja
and
sub
jbe
cmp
adc
test
jp
jmp
mov
jmp
cmp
rcll
add
push
notl
imull
inc
rcrl
pushf
jb
iret
cmp
les
pop
and
dec
cmp
jl
aaa
daa
ss
add
or
dec
es
dec
mov
push
daa
and
push
decb
and
lret
jg
sarl
out
pop
filds
push
std
cmpsb
xorl
pop
pop
xchg
push
mov
cmp
xchg
mov
repz
push
cwtl
mov
scas
pop
mov
fadd
pushf
scas
es
adc
ss
xchg
je
int3
adc
lock
sahf
sub
inc
fwait
std
int
inc
iret
xlat
jecxz
sub
loop
xchg
mov
bound
mov
xchg
add
fnstenv
orb
add
loope
sahf
aaa
sub
pop
jb
mov
mov
popf
cmp
je
jb
pop
xchg
xorl
std
push
inc
mov
sbb
pop
xchg
pop
xchg
sbb
gs
inc
add
xor
xor
in
xor
arpl
test
cmc
cmpsb
std
xor
popf
jno
scas
divl
adc
jne
sbb
xlat
sub
arpl
cmp
jae
sti
mov
pop
pushf
aam
cmpsb
shrb
push
loopne
adc
and
pop
adc
sub
push
ljmp
push
lea
movsb
in
shlb
cs
fldt
sbb
and
ret
adcl
or
stos
sahf
inc
jns
add
pop
adc
xor
jle
movsb
insl
notl
fs
pop
add
gs
je
call
testl
mov
notb
jg
call
inc
mov
push
cmp
in
into
mov
push
xchg
pop
movsb
sbb
pop
daa
lret
sub
xchg
aas
insb
mov
mov
mov
sbbb
outsl
add
cwtl
int3
lods
shlb
popf
inc
lods
push
scas
jmp
dec
shrl
push
in
add
imul
adc
push
adc
pusha
shlb
mov
scas
xchg
mov
ja
cld
pop
pop
lret
out
adc
dec
shrl
fcmovu
jmp
xor
mov
push
xor
cwtl
fdiv
mull
xor
enter
scas
cmc
jecxz
movl
sahf
pop
adc
pop
aad
and
xchg
negb
push
scas
lea
test
add
sahf
add
adcb
ret
dec
bound
jb
in
loopne
cmpsl
ss
mov
cwtl
push
xor
ljmp
imulb
test
inc
rcll
xlat
das
mov
test
bound
addr16
ja
adc
xor
in
cmp
or
add
testb
cmpsb
outsb
dec
and
xchg
lea
xchg
mov
notl
test
push
sbb
ja
jge
mov
or
jno
inc
jnp
cmpl
movsl
push
mov
in
repnz
jae
and
jge
mov
pop
jne
icebp
out
cwtl
add
mov
out
popa
bound
insl
jns
push
adc
xchg
das
sbb
data16
sti
mov
les
sub
pushf
in
pop
pop
and
dec
iret
cltd
sub
mov
nop
add
inc
push
addr16
pop
sub
inc
mov
and
mov
adc
mov
sub
pop
push
and
push
push
add
push
lds
cmpsb
mov
jo
sarb
xchg
movsb
xchg
loope
imul
pop
int
pop
sti
aad
adc
jg
sbb
mov
dec
repnz
xor
fs
imul
push
imul
aad
cld
adc
jg
jnp
mov
ret
xchg
sub
inc
les
int
jge
rclb
dec
mov
lahf
push
in
push
out
loop
sub
int3
mov
jbe
in
xchg
dec
xchg
leave
pop
sub
sar
ss
push
add
clc
test
xor
test
and
lock
add
lahf
insb
test
add
int3
sbbb
loopne
cmpsl
pop
mov
rorl
sbb
ror
sub
xor
dec
test
fildll
jns
cltd
push
test
jmp
pop
cmp
popaw
adc
fiadds
pop
ljmp
sub
cwtl
pushf
fidivl
aaa
push
jbe
movsl
jbe
and
int3
inc
mov
cli
mov
sahf
mov
push
rorl
add
push
pop
fcom
cmp
shrl
leave
push
stos
andb
cmpb
mov
push
and
mov
sub
jl
xor
xor
lret
mov
jge
mov
xchg
sbb
scas
int
inc
sbb
push
inc
daa
pop
and
cmp
imul
pop
dec
sbb
out
push
pop
inc
lods
sbb
rcll
inc
clc
mov
jae
lcall
repz
loope
fnstenv
push
ljmp
sbb
ds
lcall
dec
mov
push
and
cmp
arpl
inc
xchg
pop
bound
cmpl
dec
arpl
es
aad
jae
push
call
sub
daa
mov
sub
xor
xchg
jge
pop
loope
xchg
dec
and
mov
aas
jl
sub
scas
into
mov
int3
inc
sbb
fdivrs
xor
test
sub
lcall
aaa
clc
and
int3
add
lods
sub
push
xchg
lea
xor
jmp
mov
xchg
dec
pop
cmpsl
test
xor
negb
jnp
fimuls
imul
ret
push
or
scas
pop
sub
repnz
stos
or
loop
sbbl
cltd
or
lods
xchg
push
jmp
cmp
fldenv
inc
xchg
xchg
fdiv
dec
scas
test
jnp
cmp
push
dec
dec
inc
test
mov
or
in
xor
sahf
inc
rolb
rolb
into
popa
xchg
or
mov
cmc
fidivs
pop
cld
lcall
aam
cmpb
in
mov
dec
fsubp
pop
adc
add
lds
xchg
scas
out
arpl
jbe
lods
inc
cmp
or
inc
pop
push
jne
inc
lods
cmp
test
adc
fisubrl
es
popf
dec
inc
nop
gs
in
in
pop
orl
add
cmpxchg
repnz
mov
cld
pusha
and
in
xor
add
popa
cmp
sub
xor
xchg
icebp
movsl
loopne
cmp
sbb
adc
mov
add
push
dec
in
push
or
mov
mov
adc
pop
jge
ds
or
imull
lahf
lea
xchg
pop
jmp
dec
je
xor
mov
push
out
imul
mov
pusha
pop
xchg
mov
imul
inc
pop
into
jmp
fcmovnu
ja
xor
jmp
imul
mov
jae
xchg
and
das
scas
subb
shl
out
aaa
add
sbb
ret
loopne
lahf
lods
es
push
hlt
and
sahf
clc
jmp
jbe
bnd
pop
das
mov
out
mov
movsl
and
aas
sti
lods
jge
lods
xor
inc
repz
outsb
test
loop
push
scas
mov
cmp
sbb
aam
or
test
and
and
sbb
and
mov
push
or
push
xlat
sbb
sub
rclb
mov
pop
lds
mov
inc
stos
pop
xorl
adc
pop
cld
ficoms
xor
in
mov
hlt
int3
das
push
push
cmpsb
outsb
or
dec
lods
lods
sub
das
es
cmpsb
mov
test
xor
pop
sbbb
mov
push
cltd
imul
fcomp
add
pop
inc
sub
sub
xor
popa
xchg
mov
outsb
mov
push
cmp
xlat
sub
inc
out
gs
dec
push
xchg
sub
jbe
imul
cmp
out
cld
xchg
imul
cmc
in
jle
ds
rorl
mov
sti
imul
xchg
mov
test
cmpsl
lock
add
add
arpl
insl
mov
adcl
mov
push
mov
int
inc
sub
inc
pop
in
mov
inc
fcmovbe
add
sbb
mul
jmp
xchg
cmp
cmp
adcl
pushf
or
sbb
mov
fs
xchg
dec
cmp
daa
fs
aas
loopne
movb
or
push
imul
jg
outsb
inc
jle
jne
and
jg
push
xchg
ljmp
jle
pushf
inc
in
loopne
addr16
insl
cwtl
ret
or
outsb
cmpsb
or
decb
xchg
inc
aam
mov
fmuls
mov
fimuls
push
jl
popa
mov
repnz
ds
cmp
rcrb
xlat
mov
dec
pop
lea
mov
loop
pushf
aas
inc
mov
and
aaa
fsubl
jle
rcrb
pop
lods
or
lret
jecxz
repnz
mov
jno
int
es
hlt
nop
sbb
and
hlt
in
iret
fsubr
arpl
jae
fwait
push
repz
push
and
sbb
mov
pop
movl
ds
dec
inc
popf
sti
push
negb
push
jae
outsb
pop
ds
push
fwait
insb
push
jmp
out
ljmp
nop
int
icebp
cmp
fwait
aam
scas
sbb
js
push
pop
lea
and
xchg
sbb
adcb
or
pop
or
fs
sti
ret
or
inc
pushf
push
xor
push
cmp
pop
gs
mov
mov
jae
fildl
pop
pop
insl
jbe
fdivrp
inc
mov
sbb
xchg
push
fwait
dec
jg
push
push
jbe
or
into
push
mulb
scas
push
pop
sbb
mov
icebp
sbb
pop
mov
fisubs
into
enter
js
or
and
jns
inc
ss
mov
xor
lods
push
ret
xchg
pop
fcoml
and
daa
add
inc
leave
leave
mov
or
arpl
mov
mov
cltd
into
mov
fnstenv
popf
dec
ret
fistpl
push
pop
jl
fistpll
cmp
push
sub
xor
std
daa
fwait
add
icebp
ljmp
lods
lds
xchg
dec
dec
dec
xchg
mov
sub
push
cmovb
je
jne
sub
sub
sub
mov
out
sub
sbb
xchg
and
pop
and
push
fistps
stos
and
test
cs
std
or
mov
test
jb
mov
fildll
orb
pop
dec
mov
aam
mov
into
mov
fcompl
lock
popa
mov
lret
lock
leave
mov
loopne
outsl
jne
sbb
fildll
insb
dec
cmp
movsl
xchg
push
cmp
pushf
cmp
loopne
adc
insb
iret
cmc
inc
pusha
mov
aaa
gs
dec
xchg
pop
aam
lods
clc
iret
xchg
cmpsl
pop
mov
xchg
dec
es
popf
adc
lods
mov
sahf
sbb
push
push
mov
sub
rol
or
mov
add
or
xchg
lea
cli
push
xchg
inc
fistpll
loopne
and
mov
popa
xor
jl
mov
movsl
adc
and
mov
stos
ja
aas
pop
add
inc
sbb
jge
loop
pusha
adc
fwait
jg
fiadds
adc
stos
sbbl
imul
mov
mov
sub
imul
pusha
test
mov
adc
aas
sbb
negb
lods
pop
cmp
sub
pop
dec
fucomp
mov
repz
addr16
enter
sub
inc
pop
or
pop
cld
mov
jp
pop
dec
subb
addl
or
cld
xlat
mov
shll
xor
loopne
stos
or
cmp
and
fimuls
xchg
xchg
loop
repnz
cltd
inc
mov
ret
xchg
push
in
lods
pop
adc
mov
mov
adc
out
xchg
xor
push
iret
loop
imul
mov
mov
sub
fisubl
xor
outsl
pop
aaa
xor
pop
movsl
lea
ret
jnp
cmp
pusha
mov
push
sbb
hlt
ss
imul
jmp
xlat
lret
push
lret
push
mov
push
sbb
mov
and
movsb
mov
pop
icebp
repnz
jns
lret
insl
in
fcoml
lock
mov
xor
mov
xchg
sbb
popa
sbb
dec
sbb
fs
mov
add
and
pop
mov
mov
cmp
mov
or
jl
out
enter
and
iret
aad
cwtl
testl
stos
inc
xor
cmp
pusha
or
mov
push
in
mov
and
in
pop
lods
cmp
fsubrs
leave
out
xor
push
mov
pop
xorb
nop
jl
cmp
sarb
xlat
adc
inc
aas
lcall
or
iret
daa
mov
clc
ss
inc
mull
push
jecxz
pushf
xchg
es
jle
lds
mov
inc
mov
stos
and
or
push
and
inc
pop
mov
je
sub
test
adc
cmp
ficompl
pop
out
mov
popf
push
or
sbb
das
inc
xchg
jmp
push
xor
mov
fimull
mov
outsl
jp
xor
mov
add
mov
loope
lret
xor
icebp
jle
mov
movsl
or
leave
ret
sub
pop
pop
pop
mov
dec
mov
cltd
cmp
adc
stos
shrb
lods
fsubrs
pop
ds
mov
mov
add
dec
add
mov
cmp
push
push
push
mov
jns
push
sbb
mov
mov
adc
or
mov
fsubr
adc
sbb
push
insb
xchg
pushaw
push
les
mov
pop
pavgb
lret
shl
sbb
in
sbb
in
jb
movsl
mov
nop
dec
mov
jo
rcll
adc
xor
scas
push
out
jle
inc
gs
sbbl
roll
fwait
test
lods
movsl
sub
inc
push
push
pop
mov
out
or
xlat
dec
int
data16
lahf
add
cmp
push
jbe
daa
pop
xor
test
xchg
mov
mov
in
imul
adc
mov
mov
sti
adc
mov
sub
mov
test
or
std
mov
sbb
jecxz
mov
bnd
fs
into
lahf
push
mov
cli
mov
addr16
cmpsb
jae
jle
cmpsl
or
adc
clc
rclb
or
inc
cmp
lea
mov
add
lds
add
imulb
movl
aad
outsb
cltd
adc
jno
lahf
out
mov
add
inc
outsb
icebp
loope
aaa
dec
imul
das
repnz
hlt
ret
push
jmp
jnp
fs
pop
fsubl
push
out
mov
mov
push
into
cmp
icebp
aad
leave
push
mov
test
cltd
mov
mov
or
inc
ljmp
das
into
scas
inc
adc
push
out
mov
enter
popf
inc
clc
mov
cli
fmull
jg
inc
cmp
xor
push
inc
into
mov
outsl
arpl
dec
and
rdpkru
jmp
daa
fsubrs
jge
and
jns
cmpb
mov
dec
popa
cmpsl
lret
push
das
cmc
mov
mov
mov
cmp
xorl
push
out
icebp
adcb
sub
aas
cltd
outsl
imul
or
cld
daa
shlb
cs
clc
icebp
movsl
inc
dec
xlat
fildl
push
pop
cmpsl
cltd
cmp
inc
aad
fs
out
adcl
dec
pop
push
mov
popl
enter
push
es
add
test
lret
push
pop
ljmp
mov
sub
divl
jecxz
inc
add
jge
pop
inc
push
in
and
mov
sub
jae
fists
xor
ds
fldt
add
lret
push
out
inc
inc
push
sti
ret
push
stos
fisubs
aad
xor
sbb
mov
f2xm1
jnp
jne
clc
pop
jbe
xchg
icebp
lds
mov
and
adc
or
fsubrl
jmp
pop
dec
jg
cmp
mov
and
xchg
pop
sub
and
data16
pop
dec
sub
out
inc
sbb
mov
mov
inc
mov
dec
aam
arpl
inc
sbb
hlt
mov
xchg
mov
sti
fimuls
jne
and
pop
or
fcmovu
fadds
int
out
imul
loop
push
sti
mov
mov
cmp
mov
jno
out
push
rorb
mov
inc
mov
jno
outsb
test
sbb
lahf
inc
imul
sbb
jnp
divl
nop
mov
xchg
pop
nop
pushf
pop
loop
in
outsb
out
push
inc
jmp
mov
jne
lock
jp
cld
lcall
add
sbb
lds
and
adcl
mov
jl,pt
cmp
test
ja
iret
ljmp
mov
mov
push
or
push
bnd
mov
loope
insb
je
and
in
jb
xor
ss
and
test
adc
mov
mov
test
lcall
and
shlb
cmp
add
jl
add
ja
enter
test
adc
jg
mov
sub
sarl
dec
ljmp
mov
jp
cmp
mov
incl
in
push
rcr
leave
pop
pop
adc
cwtl
jne
leave
push
cli
mov
pop
inc
push
cmp
and
push
cmp
cmp
cld
xor
mov
es
xchg
mov
std
int
cmp
repnz
ret
out
pusha
xor
out
pop
sbb
and
loop
loop
nop
movsl
int
add
lods
out
sub
movsl
adc
scas
inc
ljmp
push
push
clc
mov
lcall
xor
cltd
aam
cld
push
adc
enter
pop
cltd
push
call
sar
jle
int
scas
lcall
xchg
fistps
push
cltd
js
insl
scas
ljmp
pushf
or
cmp
sarl
loope
leave
cmp
insb
in
pop
ja
and
mov
xchg
sub
cmpsl
hlt
add
push
dec
and
das
lret
xor
jns
sub
dec
inc
jo
daa
imul
dec
je
pop
popa
shll
pop
bound
imul
jge
jmp
adc
cmpsl
xor
out
mov
fstps
or
jle
add
xor
jecxz
add
insl
cwtl
xor
aas
push
xchg
xchg
pop
subl
cmc
imul
push
ds
addr16
lods
ja
lods
pop
adc
bound
popf
repnz
xchg
xor
or
adc
xchg
std
fs
and
pop
insb
pop
fisttpll
add
cmp
pop
mov
ret
fs
cli
repnz
pop
outsb
inc
inc
xlat
push
maskmovq
testl
lahf
clc
mov
mov
rol
xchg
cmpsl
inc
push
adc
fs
jecxz
mov
insl
mov
sub
mov
mov
sti
popa
mov
addr16
out
das
insl
shl
inc
mov
jno
daa
or
pop
mov
sbb
mov
pushf
inc
rcl
mov
das
les
mov
push
mov
jg
mov
sub
fildl
or
mov
test
das
sti
cmpsb
mov
pop
cs
test
jo
test
mov
jns
in
mov
bound
insb
test
jb
and
fwait
jp
jns
adc
fs
add
or
cmpsb
sahf
adc
out
cs
mull
repz
jg
ds
dec
mov
inc
mov
lret
pop
mov
cs
mov
lret
jmp
das
cmp
push
addr16
not
fstp
mov
out
out
xor
lahf
push
or
or
jno
movsb
sbbl
icebp
jae
mov
insb
sbb
mov
dec
sbb
sbb
rcrb
aam
shll
jge
loope
mov
rcrl
dec
push
jbe
dec
js
xchg
mov
push
adc
mov
dec
popa
jne
in
push
cmpsl
jae
aas
es
pop
ret
cmc
mov
mov
in
lahf
or
or
push
scas
imul
scas
loopne
stc
and
push
jg
add
dec
sarb
test
cs
lods
and
outsb
lea
push
shll
sub
push
pop
push
dec
xor
xlat
xchg
or
popa
inc
in
out
ret
xchg
lcall
lods
mov
or
push
insb
sub
lods
jp
ds
test
inc
jl
test
ljmp
sbb
aaa
shr
cwtl
or
jge
call
sbb
dec
scas
or
enter
sti
loope
sahf
hlt
lock
fists
or
push
xlat
push
cltd
aam
or
hlt
es
sub
jbe
lret
inc
add
xchg
loope
imul
lret
and
int
insb
pop
popf
ss
lods
push
ja
rclb
jne
lock
or
in
pop
mov
cli
scas
add
inc
pushf
pushf
aas
cmc
bt
movsl
push
stos
ljmp
jge
mov
pusha
dec
push
jae
fs
cmp
xchg
cmp
addb
shlb
pop
fisttps
aas
test
aad
repnz
inc
jge
pushf
inc
aad
dec
xchg
jl
rol
inc
fxch
pop
xor
in
aas
addl
mov
cmp
popa
cmp
nop
or
jmp
stos
adc
mov
inc
iret
test
dec
mov
jo
or
adc
mov
xlat
dec
or
call
push
mov
mov
mov
sbbl
repz
fidivrs
ljmp
je
push
mov
arpl
mov
and
sbb
mov
bound
pop
enter
lods
enter
push
mov
lcall
dec
stos
jg
mov
inc
push
fldl
add
adc
push
and
loopne
cwtl
add
sbb
in
fs
stc
mov
in
cmpsl
push
mov
cwtl
xchg
arpl
fstps
pop
shll
jecxz
adc
iret
rorb
es
inc
xor
mov
push
outsl
je
scas
jae,pn
pop
push
sahf
pushf
test
xor
out
inc
dec
mov
xchg
loopne
xchg
jp
inc
pop
sbb
test
inc
movsl
xchg
leave
xchg
icebp
mov
stos
add
sahf
and
loopne
js
rorl
and
jge
add
insl
mov
and
sti
or
mov
dec
dec
add
into
xchg
xor
ds
pop
mov
adc
lcall
cmp
pop
jns
pop
mov
ret
cmp
push
adc
pop
xor
or
dec
jecxz
sbb
add
fcompl
enter
push
shl
mov
mov
cmp
push
sub
push
mov
ror
stos
xor
test
mov
lock
mov
jno
add
loope
stos
stos
in
pop
pop
iret
shr
mov
push
movsb
in
stc
das
mov
sahf
xlat
mov
popf
pop
lods
loop
mov
es
or
jne
mov
cmp
xor
das
int
sub
insl
test
xchg
add
and
or
mov
push
adc
jmp
mov
cmp
int3
jle
or
dec
inc
cltd
jns
adc
cmp
test
pop
fcmovnbe
push
mov
fisubrs
mov
dec
mov
pop
loopne
push
jge,pt
outsl
xor
pop
int
sub
mov
jge
loope
notb
cmc
xchg
and
fdivr
lods
subl
orl
pop
movsb
sahf
push
repnz
test
subl
sub
out
stos
jae
xor
inc
in
pushl
jl
pop
xor
mov
popa
mov
push
adc
aas
push
int
mov
imul
jbe
and
lock
iret
inc
cmpsl
loope
push
mov
mov
or
call
enter
mov
push
jp
inc
xchg
ss
adc
les
dec
lret
mov
imul
in
nop
outsb
or
mov
leave
ret
aaa
pop
outsb
lret
repz
js
sub
jg
sub
in
add
movsb
je
dec
adc
cmp
repz
repnz
xchg
xlat
add
stos
scas
sbb
aad
lods
jl
cmc
xchg
popa
in
dec
add
cld
or
sbbl
pop
into
hlt
mov
mov
sahf
xchg
es
lret
int3
mov
sub
cld
out
xlat
push
cld
or
cmp
and
repnz
cmp
pop
insb
arpl
cmp
mov
fidivrl
loope
outsl
mov
das
pop
xor
in
shlb
adc
mov
and
out
in
and
push
andb
cld
pushf
or
jno
daa
popf
ljmp
or
or
push
arpl
mov
adc
jno
fcomi
pop
ret
mov
imul
fwait
lcall
rcrl
mov
leave
aaa
decb
in
cld
pop
movsb
test
sub
lock
fdivl
xchg
pop
test
ss
jp
push
mov
insb
mov
push
aad
cmp
adc
add
or
aam
in
xchg
insb
int
leave
xor
inc
mov
or
ds
and
mov
push
addb
cmpsb
mov
fdivrl
xor
and
jecxz
cltd
xor
int3
jns
rcrl
sbb
mov
sbb
jns
daa
movsl
mov
scas
jmp
fs
test
inc
nop
pop
cmp
js
sti
in
push
pop
fmuls
mov
nop
xchg
ja
das
inc
or
jbe
sub
fnstsw
test
lods
xchg
jge
xor
jl
inc
jg
pop
mov
inc
scas
lods
movb
pop
movsl
stc
sti
sub
clc
js
test
push
jo
outsb
jecxz
or
jecxz
adc
lret
adc
adc
lods
jg
stos
sti
adc
sbb
stos
pop
pop
dec
fcoms
loope
out
cmp
fs
dec
sub
mov
push
cli
outsb
outsl
or
ret
rcr
je
nop
fcmovnb
add
clc
movsb
lds
push
jl
add
mov
js
sbb
cmp
cmpsl
test
ljmp
sbb
adc
cmpsb
push
call
push
inc
adc
push
es
jns
idivb
xchg
int
sub
xchg
dec
mov
dec
iret
ret
add
mov
xchg
cmp
in
bound
xor
cmp
xor
fisttpll
mov
jl
jg
mov
sbb
jo
dec
lds
ds
iret
sub
fwait
inc
js
ret
not
dec
out
dec
clc
dec
movsb
addr16
lret
or
cld
into
adc
xlat
sbb
mov
sti
dec
loop
cmp
popa
loope
ret
xchg
out
movsb
das
adc
fdivs
lods
es
or
data16
sahf
pop
jb
sub
xor
mov
out
mov
sub
jg
aas
cld
popf
sbbb
jg
scas
test
clc
gs
push
or
nop
in
or
mov
imul
jno
and
std
mov
jg
cs
leave
jns
decl
adc
cltd
cs
jne
sbb
sbb
or
out
inc
jp
sbb
sbb
push
add
ror
loope
push
lods
cld
test
sbb
push
lea
dec
mov
test
pop
xor
les
daa
js
adc
xchg
and
pop
add
pop
mov
jge
mov
nop
pop
shll
inc
xchg
xchg
sbb
cmpsb
out
into
mov
pop
bound
in
pusha
cmp
out
fwait
lcall
pushl
loope
push
add
dec
jle
adc
mov
or
jnp
rolb
sbb
stos
jmp
adc
cmp
arpl
movsl
pusha
fcoms
or
popl
add
ret
xchg
jno
push
and
xchg
ljmp
popf
movb
sub
and
jmp
xchg
repnz
or
xor
sub
pop
ror
mov
xchg
sub
call
ljmp
xchg
addb
pop
data16
push
jne
add
adc
aaa
mov
cmc
out
rorl
xlat
cmpsb
jp
add
mov
test
mov
xor
test
jns
push
cmc
shlb
out
push
jecxz
dec
dec
or
inc
out
mov
clc
add
lock
inc
jb
xor
ret
repz
js
xchg
rcl
sbb
xchg
iret
movl
test
xlat
xchg
jmp
xchg
lea
fistl
test
inc
and
cmpsl
in
xchg
cld
scas
aaa
cs
xor
or
xor
push
xchg
lahf
mov
sbb
repz
or
cmp
inc
inc
pop
data16
insb
pop
xchg
mov
call
adc
enter
xchg
lahf
cmpsb
jge
outsl
jnp
out
test
adc
mov
xor
push
out
je
data16
mov
jb
mov
stc
xchg
sbb
scas
jecxz
inc
xchg
fs
popf
shll
leave
mov
addr16
inc
mov
sbb
aad
adc
inc
mov
and
ret
cmp
gs
or
xchg
xor
and
xchg
cwtl
mov
ja
shll
xchg
cmp
aam
cmp
cmp
push
cmpsb
ret
test
lods
xlat
stos
or
ja
adc
fwait
cwtl
pop
xchg
push
push
inc
dec
and
out
aad
sub
pop
pushf
ja
mov
xchg
inc
test
mov
push
outsb
repz
mov
and
clc
fiaddl
fwait
xchg
hlt
sbb
adc
lcall
push
stc
sbb
int
jae
clc
ficoms
outsb
aad
cli
dec
push
out
mov
jecxz
ss
mov
iret
mov
xchg
neg
inc
out
mov
iret
arpl
jl
mov
inc
sub
inc
jmp
xchg
xchg
adc
mov
xchg
shrb
mov
in
pushf
das
andl
or
inc
fcmovnb
adc
jno
fmuls
faddp
add
movl
ljmp
test
aas
jmp
dec
add
movsl
xor
adcl
sub
lahf
push
jbe
shrb
rcll
add
mov
push
aam
xor
dec
mov
and
sbb
ret
fwait
push
mov
jae
mov
jae
das
push
xor
mov
sbb
pop
cmpsl
xchg
mov
loopne
pop
pop
inc
xchg
add
imul
add
ljmp
aas
insl
addb
cmpsb
inc
and
orl
cli
out
mov
jmp
mov
lahf
mov
adc
ljmp
cmc
jecxz
movsb
arpl
xor
adc
jmp
push
pop
sub
dec
ss
into
xor
xor
cmp
cmc
loop
xchg
mov
push
cld
push
mov
fimuls
jnp
dec
das
addb
dec
add
fwait
sti
pop
push
scas
pushf
adc
scas
sub
mov
mov
movsl
mov
mov
in
loope
or
cwtl
add
mov
xchg
jecxz
test
inc
aad
movsb
cmpsb
imull
xchg
ficoms
mov
xchg
xchg
subps
out
sub
test
fwait
jno
gs
jne
or
and
fucomp
jb
sahf
rcll
repz
mov
pop
test
callw
sbb
test
pop
test
cmp
sbb
hlt
mov
stos
mov
cs
outsl
sbb
jecxz
cmp
jmp
pop
push
and
fstps
pop
shlb
loop
into
sub
out
adc
mov
das
test
jle,pn
xsavec
push
repnz
daa
jno
inc
and
inc
addr16
sub
mov
push
adc
mov
outsb
sub
mov
mov
sub
addr16
repz
dec
push
inc
sti
int3
repnz
jnp
cmp
movsl
dec
sahf
test
repz
lret
nop
inc
xor
inc
push
xchg
imul
add
adcl
aam
dec
push
xchg
cmp
push
testb
lock
scas
xor
sti
es
or
mov
ret
scas
xor
insl
jo
push
and
inc
mov
pop
add
and
andl
xor
push
sub
or
pushf
scas
push
daa
mov
or
mov
sub
sub
out
in
js
sbb
rolb
push
adcb
sbb
fisubs
ret
loop
or
ret
jae
hlt
imul
cwtl
je
loopne
jo
jb
scas
clc
in
cwtl
push
push
fidivrs
jne
dec
cwtl
roll
lcall
sti
cmp
cltd
sub
pop
jecxz
shr
fnstsw
mov
jbe
xor
fwait
and
fldlg2
in
fs
gs
xchg
aas
mov
divl
fs
mov
mov
cmpsl
call
ss
int
enter
fwait
xchg
lods
ss
stos
pop
rol
mov
or
jno
pushf
std
xor
push
leave
imul
push
jnp
jbe
pop
ljmp
repnz
popf
xlat
insl
sub
mov
and
adc
call
jae
and
repnz
push
push
sub
dec
lds
cmp
dec
jb
inc
jmp
sahf
movsl
call
pop
mov
pop
cwtl
push
or
sbb
dec
shrb
xchg
ljmp
cmp
xchg
test
pop
in
lret
repnz
sbb
incl
mov
push
fistpll
cmp
out
ja
mov
aas
or
sarb
popa
jecxz
sub
xlat
cmpsl
mov
dec
bound
mov
mov
or
imul
mov
in
add
mov
fstpt
outsb
cmp
je
sub
imul
jl
imul
data16
mov
add
or
addr16
sar
pop
pop
dec
xor
pop
pop
int
pushf
cmp
add
pop
push
push
jle
outsb
jg
cmp
sbb
orb
gs
push
mov
sbb
and
pop
shl
paddb
divb
ljmp
or
and
dec
out
jb
cmp
outsb
inc
cmc
xchg
test
cmc
mov
shr
imul
or
ret
sub
stos
sbb
xor
mov
outsb
mov
push
mov
pop
add
or
mov
push
sub
dec
sbb
mov
sub
add
or
insl
inc
xor
lea
scas
add
out
leave
lds
add
sti
iret
mov
add
cmp
or
lods
jns
mov
cmp
pmuludq
arpl
divl
shl
dec
lret
cmpsb
mov
fdivr
dec
jle
or
dec
sbb
bnd
sub
or
cld
loop
pop
jbe
data16
mov
or
mov
outsl
in
sub
sbb
test
sub
outsb
or
fimull
int
in
dec
or
addr16
jb
fwait
xchg
shll
stc
aad
test
mov
cld
fs
outsl
jge
cmpsb
cld
xchg
test
mov
push
daa
sbb
lods
decb
mov
loop
cmpsl
ret
rorl
in
stos
xchg
aam
movsb
loopne
inc
add
pushf
out
xchg
xor
in
add
testl
pop
mov
push
mov
clc
cld
pop
subps
popf
fld
int
ret
jnp
fs
add
push
movsl
cltd
dec
ss
ljmp
pop
mov
sbb
add
fldenv
xchg
pusha
js
mov
sbb
add
or
dec
jg
scas
mov
adc
cmp
sub
xor
shlb
xor
sub
fcmovne
stc
dec
mov
gs
add
add
push
mov
fnstenv
popa
dec
push
pusha
cli
and
mov
stc
outsb
adc
xchg
in
mov
das
dec
jp
push
jecxz
insb
inc
xchg
dec
mov
adc
add
push
cmpsb
dec
and
dec
xor
test
xor
push
cmc
add
mov
lahf
sub
pop
adc
outsb
lods
test
xor
loopne
cmp
adc
mov
call
enter
push
stc
subl
insb
cmc
jbe
ret
xor
ljmp
mov
mov
sbb
sub
push
fistps
add
dec
hlt
sbb
outsl
inc
test
cmp
repnz
pop
loop
push
xchg
or
adc
pop
imul
repnz
subl
cld
inc
cmp
daa
mov
loope
test
xor
jg
divl
inc
mov
or
dec
pusha
push
cld
fisubs
addr16
adc
insb
ret
das
aam
cmpsl
insb
int3
outsl
fcomi
cmp
xchg
adc
add
sbb
mov
movsb
cmc
iret
out
gs
xor
test
aas
xchg
sbb
adc
jecxz
movsl
out
mov
or
ja
out
adc
ljmp
inc
sub
adc
cmp
jle
and
dec
and
popa
jmp
fdivl
stos
fmuls
mov
cmp
iret
es
out
sbbl
hlt
stc
or
inc
mov
push
fwait
iret
sub
je
or
jl
mov
pop
ljmp
push
inc
mull
adc
shr
fistpll
xlat
add
pop
inc
adc
xchg
push
push
out
dec
dec
sahf
bound
rcrb
mov
aam
xor
jno
les
repz
dec
ror
mov
into
sarl
push
outsb
hlt
xor
pop
outsb
iret
fimull
jbe
xor
or
and
dec
mov
cwtl
jmp
rolb
je,pn
cmp
inc
push
jg
in
jbe
pusha
fcompl
out
js
imul
cmp
mov
adc
loop
cld
push
xchg
ret
pop
inc
dec
movsb
scas
push
andb
mov
ljmp
icebp
test
pusha
mov
xor
or
xchg
subl
test
pop
mov
dec
pusha
mov
add
mov
jle
lahf
and
fstpl
pusha
pop
out
rcll
fistpll
jecxz
inc
dec
push
and
push
out
xor
or
aam
enter
and
xchg
mov
jo
sub
mov
nop
jecxz
pop
popf
push
adc
jp
stc
push
pop
leave
shrb
testl
and
push
adc
stos
leave
and
outsb
ds
xchg
xrelease
xchg
lea
stos
adc
loopne
pop
rcrl
xlat
hlt
shrb
or
dec
cmp
and
fldl
mov
insl
lock
sub
cmc
lea
mov
aaa
das
sub
sub
ffree
xor
mov
or
aas
push
cli
ret
dec
popa
test
or
adc
adc
ret
mov
dec
push
lret
adc
cmp
add
xor
and
mov
jne
inc
or
jecxz
xor
mov
xchg
inc
or
out
mov
rclb
push
or
adc
pop
and
sbb
mov
mov
stos
xchg
les
adc
arpl
sub
ror
lock
mov
loope
jl,pn
jns
jne
lahf
jno
pop
pop
cmp
mov
dec
addr16
leave
fmul
cld
inc
adc
loop
xchg
jno
ret
mov
lods
cltd
mov
xor
xchg
stos
dec
test
dec
xchg
jecxz
or
xor
xlat
sub
ljmp
repnz
xor
mov
sahf
xchg
pop
outsl
and
shll
add
xor
gs
pop
and
andl
dec
xchg
ja
test
pop
push
adcl
mov
xor
loopne
inc
push
mov
stc
mov
jno
or
pop
daa
faddp
or
push
jge
push
insl
cmp
push
jns
icebp
pop
dec
dec
push
imul
dec
fmul
data16
jbe
shrb
repnz
add
test
inc
andb
sbb
mov
push
lea
mov
decl
jae
insl
stc
repnz
dec
push
dec
popa
push
xchg
inc
push
js
and
ret
lds
shlb
mov
xor
imul
insb
das
and
xor
fwait
pop
lods
sbbb
loop
inc
adc
test
lods
fcomps
movsb
jmp
inc
inc
or
outsb
std
cmovb
dec
or
data16
push
pop
pop
lods
xor
fs
push
mov
or
push
loope
xchg
ret
and
decl
xchg
fimull
dec
inc
andl
test
test
and
push
ja
test
int3
int
dec
movsb
and
inc
cmc
add
aaa
xchg
and
mov
cmc
lcall
lods
lds
push
cwtl
fnsave
aad
js
out
add
test
lock
add
mov
enter
repnz
fldl
sbb
jns
ret
aas
inc
lcall
je
bound
into
mov
lods
sarl
clc
jae
outsl
cli
ljmp
imul
adcl
pusha
jne
cmp
loope
add
les
push
nop
cmp
mov
in
inc
movsl
jecxz
xchg
push
in
push
and
push
jb
shll
jno
or
fidivl
aad
jnp
out
cld
subb
mov
xchg
sbb
and
mov
sbb
and
push
iret
neg
frstor
das
fwait
cltd
mov
incl
hlt
jb
in
pop
mov
xor
fs
out
push
fbld
mov
mov
dec
fcmovbe
cmp
imul
pusha
xchg
mov
test
xor
push
dec
ss
push
or
fistpl
cmc
xlat
iret
orb
add
pushf
aas
decb
cmp
mov
jae
rorb
lock
lock
lret
call
into
rcl
push
sub
adc
mov
aad
stos
fs
xor
pop
enter
lret
sub
fdivrl
gs
arpl
movsl
add
je
jno
xor
cld
movsb
jmp
xlat
push
push
add
mov
icebp
rclb
addr16
jbe
rcll
sub
ret
sub
push
lcall
adc
dec
pop
lds
push
mov
rcrl
mov
push
or
sbb
imulb
dec
gs
and
stc
cmpsl
shrb
fildl
xchg
sbb
in
cmp
lods
pop
lret
jb
dec
mov
fwait
sub
push
sbb
in
cltd
ficompl
cmp
sbb
xchg
lods
jmp
mov
fdiv
and
sub
sbb
sahf
test
and
jae
rcrb
cmpsl
imul
incl
sub
pop
xor
push
bound
pop
jp
sbb
icebp
out
mov
dec
addr16
popf
mov
jnp
xor
les
movsl
sbb
loope
decb
pop
movsb
into
iret
cmp
dec
pop
inc
or
imul
lea
out
and
or
or
pop
loop
mov
xchg
cmp
out
testb
jge
ds
xlat
mov
aam
mov
mov
jl
fsubs
jns
lock
rcll
xlat
xor
inc
and
inc
nop
or
mov
stos
fadds
sbb
xor
jle
nop
repz
jl
add
push
cmp
pop
enter
scas
sar
mov
jle
pop
mov
sarl
dec
mov
sahf
shlb
dec
mov
loope
and
int
arpl
test
sbb
popa
rcl
imul
jmp
dec
mov
and
or
outsl
repz
das
dec
cmc
mov
int3
dec
in
stc
mov
sbb
sbb
test
mov
mov
js
dec
mov
dec
jle
sbb
fisubrs
in
fcoms
sub
ffree
and
insb
mov
sbb
add
jno
dec
or
fwait
sti
adc
mov
dec
or
jg
push
jo
fidivrl
xchg
outsl
and
inc
fwait
inc
sub
les
daa
out
mov
push
stos
popa
add
add
and
mov
fdiv
lret
test
jle
insb
and
mov
movb
imul
jnp,pn
in
cmp
sbb
scas
int3
inc
fxtract
add
sbbl
hlt
cltd
jae
and
xchg
pop
es
and
sub
lds
jo
push
or
sbb
push
insb
cs
push
push
repnz
aad
js
add
stos
dec
popa
inc
adc
dec
mov
and
push
scas
jp
push
pop
cs
jecxz
sbb
dec
sub
push
scas
push
fbld
sub
push
aas
rcrb
pop
scas
sub
or
pop
nop
das
cli
jmp
mov
test
dec
mov
adc
push
sub
or
xor
jno
xchg
shl
popa
pop
out
shr
pop
fwait
outsb
std
movl
dec
and
popa
popa
clc
push
gs
mov
movsl
pop
inc
outsl
adc
sbb
or
inc
jmp
push
sub
mov
stc
cmp
data16
daa
jns
dec
in
xchg
lahf
sub
inc
shll
jb
add
jl
fisubrl
es
xchg
sarl
mov
and
icebp
cmp
xchg
push
cwtl
in
loope
lods
aad
and
or
insb
mov
mov
in
test
mov
jns
push
adcw
in
pop
cli
add
ja
inc
in
xchg
pop
inc
or
mov
insl
cld
out
cmp
pop
mov
mov
jmp
add
mov
shrb
jmp
stos
xor
mov
dec
xchg
dec
mov
test
jns
pop
insl
add
mov
pop
lods
inc
add
mov
mov
jns
xor
mov
add
pushf
pushl
dec
sbb
sub
fscale
dec
pop
jecxz
jle
jmp
sbb
rorl
push
andb
mov
out
mov
jo
xor
les
loopne
jbe
scas
jb
mov
insl
sub
cmpsb
les
add
mov
aas
pop
pusha
mov
pop
or
les
mov
adc
or
jne
lea
and
das
imul
push
mov
sbb
add
test
sub
adc
add
notb
shlb
add
xor
lds
jmp
ret
sub
into
icebp
shll
test
fsubs
xor
cmp
and
jg
adc
jl
cld
aas
push
dec
mov
jle
cltd
xchg
add
arpl
xchg
imul
inc
jnp
inc
shlb
dec
cmpsl
dec
and
pushf
sti
mov
std
adc
bound
ret
push
jno
cmpsl
mov
mov
mov
adc
daa
inc
jecxz,pt
pop
sbb
fs
aad
sub
cmpsl
aaa
stos
jge
stos
stc
fcomp
sbb
notl
mov
pop
fcompl
cld
and
xchg
fistps
lods
xchg
jnp
xchg
rcl
jnp
movsb
jl
mov
jb
notl
jnp
push
add
and
fcomps
lods
xlat
sub
stos
jl
cltd
or
adc
fadds
mov
sbb
mov
std
adc
ss
and
pop
add
sti
fldenv
lock
jl
cs
sbb
mov
add
pop
inc
fs
lret
fwait
and
pop
jno
outsb
and
add
loopne
mov
sub
aas
ljmp
ret
push
test
and
aad
jl
lcall
inc
inc
push
jnp
xor
mov
stos
fcom
add
mov
mov
add
mul
dec
mov
adc
mov
pop
ret
pop
fimuls
pusha
mov
neg
cmp
ficompl
pop
out
jp
aam
fcompl
shrb
lods
leave
and
jne
nop
std
fs
push
or
add
jle
jbe
xor
cmp
mov
fwait
cmpsl
or
orl
pop
xor
push
imul
or
and
jbe
xchg
or
adc
xor
and
or
rcll
addr16
mov
je
mov
jle
pushf
lret
mov
test
xchg
pop
dec
dec
pop
lods
ds
fiaddl
cmpsb
mov
fcmovnb
lahf
xchg
mov
xchg
std
ljmp
je
add
or
dec
out
nop
sbb
fsubrs
mov
loop
leave
jnp
jae
pop
aad
out
xor
xchg
sbb
push
daa
lods
mov
sbbl
xchg
loop
test
fs
int3
jno
cmp
jmp
mov
gs
call
pop
and
test
xor
mulb
and
stos
cmpl
ret
inc
ficoms
stos
ja
sub
xchg
imul
movsb
je
dec
push
inc
fs
or
cmp
mov
cld
jno
mov
add
jecxz
xlat
mov
mov
stos
fbld
les
scas
loop
loopne
out
mov
arpl
cld
rolb
imul
mov
mov
mov
js
cltd
sbb
sub
inc
dec
cmpsl
dec
push
out
push
jl
xchg
int3
in
pop
ret
push
pop
jp
jbe
sbb
xchg
adc
or
jge
sub
sub
inc
mov
shl
dec
sbb
dec
notb
mov
push
cmp
adc
mov
sbb
shlb
jnp
insl
pop
xchg
je
jg
xor
fists
ljmp
fildl
adc
xchg
lcall
cmp
fldenv
mov
lret
push
int3
imul
rcl
sbb
sub
jle
sbb
je
mov
clc
xchg
adc
mov
push
stos
inc
iret
mov
jbe
icebp
mov
dec
cld
mov
hlt
sub
leave
nop
sub
push
add
pop
push
sti
daa
sbb
push
push
pop
jb,pt
sbb
shlb
inc
ljmp
bound
xor
inc
loop
sub
mov
idivl
outsl
aam
push
pop
push
lret
cmpsl
sub
cmp
lret
or
arpl
andl
push
cmc
jns
xchg
stos
mov
lcall
push
mov
push
incl
cmp
or
dec
in
xor
xchg
mov
mov
sbb
mov
fxch
dec
adc
add
sub
jbe
in
dec
addr16
jl
xor
fdivrl
mov
adc
dec
and
mov
xchg
insl
into
or
lret
mov
xrelease
mov
push
insb
testb
ret
adc
adc
adcb
sbb
js
shr
jp
jp
mov
add
xchg
bound
sbb
cmp
or
stc
sub
fnstenv
std
dec
cmpsl
clc
cli
xchg
inc
sarb
jmp
or
or
xor
mov
mov
lret
int3
je
lods
mov
and
adc
pushf
xor
xchg
xchg
mov
lcall
scas
adc
and
outsl
aas
into
movsl
sub
cld
pop
mov
inc
push
out
je
push
xlat
jo
mov
lret
adc
clc
fisubrs
lea
mov
clc
xchg
push
repnz
aaa
icebp
xchg
sarb
fildl
ret
push
or
scas
gs
lods
loop
movsl
jp
xor
jge
xor
pop
popf
es
mov
sbb
mov
sub
mov
addr16
xchg
mov
cvttps2pi
push
bound
xor
adc
mov
es
jb
jg
jae
std
sar
sbbl
jl
inc
adc
mov
cmc
iret
imul
imul
nop
xchg
loop
aaa
scas
dec
cwtl
push
cwtl
cld
ret
push
popf
push
sub
mov
sub
add
cld
lcall
loopne
push
pop
divb
filds
or
js
xchg
in
jno
sbb
lcall
pop
sub
sub
mov
das
push
sbb
daa
push
pop
out
pop
lret
mov
push
in
mov
scas
mov
xchg
inc
jmp
movsb
push
fcoms
fnstsw
lea
push
lret
and
cmpsl
mov
jnp
adc
xchg
xchg
mov
out
stos
dec
nop
push
mov
js
xchg
lods
or
sub
sub
hlt
mov
xor
inc
lock
loop
xchg
mov
int3
fwait
sbb
mov
nop
push
fdivl
jb
roll
and
jb
dec
adc
pop
mov
lods
jmp
xor
pop
mov
pop
in
es
add
and
jecxz
sub
out
add
dec
mov
jg
outsb
sub
cmp
sub
cmp
loope
pop
pop
test
pop
shr
pusha
jp
das
add
mov
and
jno,pn
dec
jecxz
shll
adc
add
and
leave
ret
ret
push
jnp
aam
mov
mov
outsb
imul
jae
test
bnd
sub
ret
movsb
fsubl
cmp
leave
dec
stc
jb
cltd
add
or
inc
loopne
dec
inc
ret
imul
jne
loope
in
xchg
sbb
or
pop
and
and
mov
icebp
or
jp
push
gs
lcall
arpl
and
xor
inc
inc
sahf
mov
jmp
jmp
pusha
orl
nop
xchg
popa
or
mov
mov
test
mov
cmp
and
pop
xor
mov
push
add
stc
lret
dec
loopne
cmpsl
push
rolb
lds
sub
inc
mov
test
in
push
jb
jb
mov
mov
out
ds
mov
dec
xor
divl
pop
mov
mov
mov
imul
inc
xchg
mov
pushf
cmp
lea
sub
pop
xor
ljmp
mov
mov
xchg
inc
sarb
insb
movsb
jmp
or
jecxz
test
pop
inc
shld
mov
adc
popa
rorb
sbb
cmp
pop
movsb
push
pop
xchg
jae
jl
into
testb
cltd
mov
bound
stos
sbb
call
add
mov
push
cltd
in
mov
int
cmc
test
dec
in
dec
or
xor
enter
or
int
and
icebp
cwtl
sbbl
insl
test
cmp
gs
cs
int
push
add
ret
dec
add
fimull
sti
push
lcall
hlt
cmpb
cmp
xor
cmp
sti
mov
sub
add
lods
das
add
inc
cmp
imul
ds
add
int3
cltd
and
idiv
stc
pop
outsb
subps
cltd
cs
or
jle
add
xor
jae
andl
inc
test
dec
cltd
lea
xchg
hlt
mov
mov
sbb
sti
int
mov
mov
test
sbb
cltd
iret
lock
or
add
cmovl
loope
jno
shrb
out
int
mov
jne
dec
pop
pop
int3
stos
hlt
sub
imul
nop
iret
sti
pop
and
jnp
pop
movsl
jne
and
pushf
imul
daa
mov
das
cmp
mov
sub
fst
xchg
and
push
pop
xchg
sub
inc
push
mov
sar
fxsave
in
xchg
push
jmp
add
xor
imul
sub
jecxz
push
and
mov
xchg
xchg
push
inc
dec
xchg
lret
mov
and
sub
repnz
cmpsb
or
test
leave
arpl
mov
jecxz
or
leave
sbb
xorb
lcall
xor
das
mov
imul
lods
fsts
jne
mov
int3
add
js
cmp
push
sbb
int
add
mov
cwtl
jg
imul
pop
cmp
adc
jb
mov
pop
and
fcompl
xchg
insl
pusha
inc
sub
int3
sub
mov
hlt
ret
lret
cmpb
mov
mov
nop
sbb
add
icebp
lea
push
cmp
cltd
hlt
push
jge
jb
dec
inc
hlt
lods
jl
loop
lret
sbb
cli
stos
push
loop
ja
push
repnz
out
mov
aam
jl
push
dec
cli
cwtl
mov
sub
pop
adc
push
cmc
xchg
js
xchg
inc
rcll
ret
mov
subl
aam
sub
dec
mov
and
xor
enter
out
xchg
in
mov
adc
dec
jmp
sbb
adc
mov
jns
xor
sbb
ret
pop
repz
or
xchg
popf
xchg
xor
sbb
mov
pop
adc
xchg
mov
and
aam
dec
lock
add
jg
ret
jnp
mov
or
cmp
pop
xchg
push
hlt
add
sbb
lahf
lds
shlb
scas
in
arpl
jb
mov
or
mov
movsl
jns
pop
xor
sub
or
inc
pop
cmpsb
xlat
mov
inc
sub
das
or
lea
push
xchg
rclb
loope
movsb
inc
outsl
or
stos
inc
mov
shlb
dec
data16
and
outsl
fisubrl
mov
in
or
call
addl
in
scas
mov
xchg
mov
mov
test
lods
fs
incl
lods
and
jge
int3
pop
les
enter
sbb
xchg
fidivrl
popf
fildl
mov
pop
stos
ja
ljmp
xchg
hlt
je
insb
add
lcall
or
lea
xchg
mov
out
dec
imul
inc
repnz
sbb
pop
std
and
aad
jo
pop
movsl
pushf
lds
jno
test
sahf
frstor
fcomip
lock
int3
dec
popl
pop
add
mov
add
mov
idivl
addr16
dec
adc
mov
pop
mov
sbb
pop
push
mov
out
leave
fcompl
outsb
cmp
cmp
xor
imul
lret
stos
xchg
fdivrl
fistps
sub
mov
in
fcomi
xchg
dec
xor
sbb
pop
inc
fmuls
xchg
xor
inc
mov
rolb
rorb
outsl
adc
push
popf
sub
sub
push
test
pop
mov
lea
in
adc
scas
jmp
mov
and
xor
outsl
fnstcw
sub
sub
fstps
std
cmpsb
dec
adc
adc
fisubrl
daa
stos
test
int
pop
pop
movsb
jl
enter
sbb
popf
cmpsl
imul
jns
xor
lret
pop
inc
pop
lahf
bswap
inc
rcrl
sahf
dec
inc
cltd
ss
test
mov
jns
jg
nop
stos
cli
cmp
stc
test
jmp
fdivrs
xor
mov
cmp
inc
pop
fcomp
mov
fdivp
mov
mov
test
js
mov
xor
aas
adc
lahf
into
in
dec
clc
mov
push
lcall
movsl
ja
mov
sbb
mov
ljmp
int
lods
mov
push
push
push
inc
jmp
mov
shl
call
push
idivl
test
mov
mov
adc
test
and
add
inc
ljmp
push
ret
insl
add
into
push
adc
push
imul
jb
cmp
or
imul
jae
out
rorl
insb
ds
xlat
stos
xor
jmp
aam
sahf
mov
fisubl
xor
pushf
les
les
sbb
jne
shll
es
stc
cmp
lds
clc
fsubrs
push
pop
movsl
xlat
and
idivb
into
mov
xchg
cmp
stos
xchg
insb
aad
and
lret
cmp
xchg
ficoms
mov
orl
xchg
cs
jns
jno
and
pop
and
pushl
testl
cmpsl
cs
ret
mov
add
test
aaa
jbe
lock
outsl
sub
test
cmpsb
mov
add
xor
hlt
mov
mov
mov
repnz
fadd
pusha
push
xchg
xor
loope
sahf
sub
cwtl
insl
jno
lods
xor
aas
dec
dec
mov
mov
jae
mov
push
push
mov
pop
add
fidivs
mov
rcrb
dec
inc
fdivr
stos
fnstsw
test
test
gs
ljmp
add
mov
lods
je
sub
mov
cs
out
push
rclb
ret
ror
jbe
sti
xor
sbb
pop
clc
scas
dec
cmp
out
imul
fwait
cmp
adc
sti
in
pop
call
out
or
lcall
dec
in
mov
mov
gs
orb
in
push
fisubl
cs
test
pushf
cmp
jne
stos
leave
insl
ss
mov
pop
xchg
jno
pop
pop
lcall
jp
push
dec
arpl
and
popa
popf
mov
push
mov
sbb
jb
div
push
adc
and
lods
inc
lret
add
popa
sbb
xlat
inc
jns
stos
aad
inc
push
dec
push
sub
inc
sti
add
mov
lock
idivl
arpl
mov
mov
scas
imulb
outsb
sahf
adc
push
fld
jecxz
sti
cmp
orb
dec
or
fstpl
in
xor
adc
pop
cmp
pop
fwait
rol
push
xchg
add
ds
inc
xor
icebp
xchg
leave
cmpsb
pusha
or
xchg
or
sub
fstps
sbb
add
xchg
mov
dec
mov
push
pop
sub
pop
xor
cmc
pop
push
aad
pusha
inc
jmp
gs
lret
nop
adc
inc
mov
adc
cmp
popa
dec
mov
not
lcall
sbb
sbb
repz
jo
fs
sub
loope
outsl
imull
mov
std
and
inc
jne
inc
xor
addr16
inc
cmpsb
mov
jae
or
ja
mov
xchg
stc
lcall
jmp
pop
incb
subb
and
lret
cmc
leave
popa
test
cld
push
push
mov
pop
in
or
xor
pop
lods
pop
push
test
dec
sub
out
mov
es
or
aad
mov
movsl
jnp
aas
jo
pop
cmp
add
jnp
or
lret
lods
out
and
mov
test
es
mov
push
test
xchg
jbe
mov
jb
int
pop
cmp
cmpl
cwtl
addr16
fcmovnu
movsb
jb
cld
push
pop
or
mov
and
jmp
int3
and
mov
add
xor
out
clc
gs
pushf
sti
add
sub
mov
mov
adc
sbb
iret
ss
xchg
into
std
xchg
loop
dec
scas
mov
sub
shll
or
or
test
jno
aas
fildl
roll
mov
push
ss
jne
lock
out
or
das
sbb
ja
inc
mov
in
xor
inc
mov
jl
jge
sub
mov
xor
or
xor
lock
add
xor
out
mov
jmp
leave
rcl
scas
dec
sbb
cwtl
and
xor
call
xor
je
aaa
mov
bound
sub
gs
lret
sub
cltd
push
loope
pop
lret
enter
xor
scas
inc
push
movsb
mov
pop
or
pusha
jmp
cmpsb
mov
out
jecxz
add
adcl
movsl
je,pt
loop
outsl
lds
xchg
test
jns
rep
ret
mov
push
popf
mov
lret
or
mov
jge
fwait
lock
sbb
arpl
push
outsb
mov
xchg
testb
sti
loop
xchg
adc
mov
push
hlt
cmpsl
lea
cmp
push
into
enter
jno
push
insb
mov
cwtl
ret
mov
movsl
ljmp
inc
scas
adc
pop
jmp
xor
cs
push
leave
jmp
xchg
clc
sub
hlt
ds
ret
sahf
lea
ret
addr16
enter
lods
gs
stos
pop
enter
iret
sbb
fstpl
inc
scas
mov
rclb
xor
and
mov
mov
pop
in
loop
xchg
repz
cmpsl
pop
mov
sahf
insl
into
out
jno
add
pop
stos
pop
fs
mov
sti
je
xchg
adc
mov
fimull
jbe
xor
cmp
and
sahf
sbb
outsb
mov
xchg
cmp
popa
jo
mov
sbb
push
scas
hlt
icebp
sub
pusha
adcb
or
cmp
lods
and
lods
jecxz
add
dec
leave
jnp
pop
sub
lods
stos
lods
push
jbe
pop
psrld
out
xchg
mov
cwtl
pop
mov
pop
subl
pop
or
adc
sub
push
mov
lret
repz
push
cmp
and
cld
fsts
mov
les
sbb
mov
sbb
pusha
sbb
out
jno
cltd
insl
dec
sbb
in
std
jp
mov
jb
and
aam
xchg
pop
xchg
jp
or
jbe
pop
clc
into
mov
lret
fdivl
fcmovnu
sbb
imul
leave
fs
inc
inc
push
ficoml
bound
sub
inc
xor
push
repnz
mov
xor
mov
leave
in
fnstsw
loope
mov
xor
and
pop
les
std
add
pop
add
sub
ficompl
or
pop
andb
shrb
fistpll
xchg
nop
repnz
add
lahf
loope
rol
fdivs
adc
and
sbb
mov
flds
mov
mov
fldenv
adc
push
pop
jb
jl
mov
jb
ja
pop
daa
xchg
std
int3
pop
push
or
idivl
arpl
pop
jmp
mov
xchg
sbbl
lea
ljmp
mov
imul
hlt
jne
mov
ret
das
loop
aas
push
lret
in
cld
cmp
loope
outsb
aas
cmp
jecxz
sbb
aad
cli
inc
idivb
test
inc
push
movsb
xchg
add
and
and
scas
fwait
cld
sbb
repnz
mov
je
and
in
inc
enter
xchg
jne
aam
fnstsw
fwait
pminub
movsl
cmpl
inc
sahf
cmpsl
pusha
pushf
aam
or
sbb
pop
movsl
or
pop
sbb
movsl
push
pop
fwait
lret
sub
jmp
rorb
aas
add
add
jge
inc
jmp
fldl
adc
jle
cld
and
popf
cmp
stos
add
clc
aaa
cmp
jmp
cmp
xor
shll
jnp
mov
lret
sub
push
jb
push
mov
push
and
sbb
jnp
rorl
gs
xchg
cwtl
dec
xchg
lret
cli
fistps
aaa
clc
sti
jo
ret
inc
adc
mov
mov
cmpb
imul
and
jnp
or
push
sbb
mov
in
loope
cmp
loop
outsl
inc
add
roll
out
push
or
inc
loopnew,pn
add
repz
xchg
mov
cwtl
push
lods
or
sub
das
js
outsb
dec
add
shlb
shlb
mov
incb
add
mulb
andl
pop
inc
xor
jae
adc
in
ljmp
dec
test
lock
and
shl
in
or
mov
jb
and
cmp
cmp
mov
xorl
mov
jle
rcr
mov
cmp
pop
imul
bound
scas
and
sub
pop
mov
sub
xor
xor
sub
call
ds
ret
stos
in
loopne
outsl
mov
adc
stos
out
xlat
sub
pusha
movsl
fwait
sub
fisubrl
and
push
dec
iret
incl
aam
rcrl
rcrl
jecxz
sarb
test
lea
adc
outsb
ret
sub
jge
cltd
test
sti
cmc
test
arpl
or
mov
cmc
pop
test
fsubl
and
adc
pop
cmp
jmp
inc
add
inc
pop
jne
xchg
jp
loopne
mov
sbb
jecxz
and
adc
jl
stos
into
shl
mov
sbb
jmp
or
inc
aas
imul
xor
or
into
repz
repz
mov
pop
loope
les
push
adc
inc
movsb
cmpsl
sti
mov
xor
das
ljmp
push
scas
fidivl
fnstcw
jecxz
mov
fcompl
mov
stc
lods
xchg
xchg
fldcw
xor
enter
dec
repnz
adcl
fimuls
rcrb
lcall
sahf
negb
bnd
stos
in
sbb
mov
sub
mov
es
push
lret
jns
or
push
test
rcll
or
sbb
enter
ficomps
xor
aas
jmp
ljmp
dec
outsb
jge
ja
push
pushf
popf
repz
pop
xorl
rep
mov
push
adcl
jbe
movl
inc
or
dec
push
push
in
cmp
jns
lds
shlb
jp
imul
add
xchg
sub
mov
xchg
aas
mov
pop
push
fnstsw
shll
fidivl
push
insb
mov
pop
cwtl
inc
mov
adc
je
sub
enter
lods
dec
adc
cmpsb
adc
fistps
jle
popf
dec
inc
out
sbb
mov
or
adc
jmp
filds
add
inc
repnz
jmp
sub
aam
xor
fwait
push
pop
sub
push
mov
jle
in
lods
xor
jmp
mov
lods
sbb
add
dec
xor
jo
mov
outsb
mov
pop
mov
in
xchg
mov
or
ret
mov
fwait
jne
mov
movsl
adc
dec
rorl
mov
or
lds
xor
jno
push
pop
xchg
cmp
dec
aas
mov
push
jnp
inc
ficomps
roll
mov
arpl
sbb
in
out
std
mov
dec
lret
mov
sub
pop
repz
sbb
imul
push
cld
nop
jl
adc
jbe
dec
add
loope
jmp
lea
push
scas
int3
insb
push
jns
dec
inc
jo
addr16
xchg
or
jg
jle
and
pushf
xchg
sub
fcom
cmpsb
loop
push
enter
add
lock
xor
xor
cwtl
xchg
add
lret
sbb
cmp
jp
sub
add
repnz
lahf
xor
xor
scas
ljmp
pop
imul
push
xlat
cmc
xor
bound
lcall
cmp
ret
push
xchg
add
mov
xchg
not
ljmp
inc
add
outsb
mov
pop
scas
xchg
shl
bound
mov
cmp
mov
jl
aad
ret
adc
sbb
xchg
in
dec
jge
jns
or
jns
sbbl
add
and
pop
and
cmp
imul
cs
xlat
dec
test
sub
data16
xor
repz
popf
xchg
fsubrl
add
dec
jne
xchg
mov
xchg
push
jae
cld
pusha
mov
mov
movsb
jmp
pop
in
and
loopne
shrl
inc
xor
les
shl
or
stos
sub
icebp
orb
and
ficoms
je
and
mov
ret
mov
sub
aas
xchg
aad
out
push
into
lahf
inc
out
xchg
mov
out
rorb
jns
jnp
adc
cmpsl
pop
repz
testb
aad
lret
iret
mov
mov
fs
fldcw
ljmp
cmp
pop
adc
cli
es
iret
ret
mov
daa
hlt
adc
fldcw
mov
shrl
es
cmp
jno
adc
and
push
and
push
mov
cwtl
xchg
stc
in
xor
and
inc
xor
and
test
popl
movsb
sti
lock
jb
jb
out
and
popl
loop
fdivs
jg
aas
jnp
pop
push
jns
mov
rclb
mov
xchg
mov
mov
inc
xchg
mov
mov
xchg
fadd
sbb
das
lods
jbe
ficoms
jl
jns
aad
jg
or
sbb
push
and
cmp
mov
push
xor
hlt
add
and
sahf
bound
pop
cwtl
dec
popf
or
pop
imul
nop
insb
outsb
inc
and
inc
imul
push
adc
jl
es
sub
mov
in
rolb
push
stc
je
leave
add
shrb
clc
jno
dec
nop
xor
insb
inc
das
mov
adc
xchg
inc
scas
icebp
enter
loope
cli
jle
out
xchg
jb
rolb
xor
fldenv
lret
pushf
mov
jb
repnz
sub
jp
push
mov
dec
sbb
mov
pop
push
mov
add
fsubr
push
mov
loopne
push
outsb
cs
aad
mov
xchg
cmp
adc
lret
out
mov
pop
sub
lods
fadds
jp
sub
xchg
cmc
call
mov
xorb
cmp
inc
xor
lahf
sahf
xchg
es
insl
sarb
sub
daa
cld
int3
rolb
sbbb
pop
adc
sti
cs
cmp
bound
pop
sbb
and
scas
xlat
xlat
pop
jge
fucomip
mov
xlat
xchg
xor
jecxz
je
pop
dec
fidivrl
push
sub
xor
sub
and
push
mov
jle
inc
dec
jb
in
popf
mov
aaa
lock
cmp
mov
les
in
enter
daa
push
add
rclb
mov
sti
and
mov
nop
mov
sub
ret
insl
outsl
scas
popa
sbb
mov
mov
xchg
clc
out
mov
xchg
ds
jmp
mov
or
dec
mov
add
mov
mov
adc
test
ss
rcrl
jle
mov
outsl
push
insl
loop
ret
addb
mov
and
call
inc
jae
addr16
xchg
jge
push
sete
and
insb
insb
dec
sbb
dec
mov
push
inc
mov
dec
mov
daa
push
in
lret
pop
outsb
mov
lahf
insl
ja
es
adc
jmp
dec
addr16
xor
rol
xor
pop
inc
sub
addl
into
call
mov
test
fcomp
or
imul
mov
out
cmpsb
jae
mov
cmpsl
orb
inc
mov
jne
push
jno
mov
mov
push
aam
test
repnz
pop
adc
push
js
push
xor
sti
cmp
pop
aam
mov
fwait
out
xchg
mov
and
xchg
mov
adc
mov
cmc
int
or
sbb
es
inc
sub
and
das
adc
aaa
xchg
fldcw
push
lods
out
or
cwtl
mov
sub
test
dec
mov
shr
repz
shlb
clc
fisubl
or
ljmp
aaa
push
xchg
cmp
lea
adcb
add
lods
das
ret
jl
xchg
clc
mov
xor
addr16
loop
out
inc
mov
xor
sbb
mov
xchg
dec
mov
push
call
testl
pop
mov
das
mov
sbb
fbstp
add
cmp
push
jle
roll
cmpl
mov
cmp
fwait
decl
mov
scas
inc
and
push
and
sub
cli
scas
sbb
mov
cmp
mov
mov
sbb
rcrb
out
mov
adc
and
and
cmp
dec
push
movsl
push
jo
fsubl
pop
stos
adc
mov
rorl
dec
shrl
scas
scas
mov
mov
test
mov
test
shlb
and
mov
mov
pop
cmp
add
mov
cli
inc
les
cmpsl
dec
xor
pop
mov
addr16
push
outsb
jo
lea
lods
xchg
ret
pushaw
pop
rcl
xchg
jle
rolb
hlt
test
mov
pop
mov
push
jb
insl
jae
xchg
mov
shll
shll
ret
mov
adc
sbb
stc
jl
pop
fldenv
xchg
inc
call
pop
pop
pop
or
repnz
cs
adc
xor
out
push
out
icebp
movsb
xchg
pushf
or
xchg
push
mov
inc
inc
mov
mov
dec
inc
add
dec
mov
xchg
jo
sbb
fs
int
mov
jmp
mov
rep
push
enter
push
jbe
mov
dec
add
inc
pop
add
lret
fiaddl
leave
xchg
dec
fcmovnb
std
dec
adc
pop
mov
pop
lods
bound
sbb
inc
aas
inc
shll
push
adc
rorl
arpl
mov
into
push
adc
fadd
add
arpl
loope
jmp
ret
add
icebp
cmpsb
xlat
mov
or
icebp
inc
pop
add
adc
mov
xor
cli
jmp
cltd
out
inc
mov
jmp
xchg
andb
push
cltd
sbb
movsb
add
sub
add
leave
repz
cmp
xchg
outsb
inc
iret
aas
cmp
repz
sahf
adc
fmuls
mov
push
adc
inc
mov
or
mov
adc
stos
jl
mov
int3
stos
jnp
jns
aas
sarl
adc
hlt
stos
test
jb
xchg
outsb
pushf
add
add
out
sbb
gs
nop
in
shl
mov
int3
mov
das
and
jns
ret
ja
pop
cmp
pop
dec
jb
enter
loop
scas
adc
lods
scas
insb
popl
fidivrs
mov
adcb
mov
aad
lcall
or
inc
lcall
add
test
xor
cmp
and
and
aas
or
ret
in
movsl
inc
out
add
jnp
cmp
lahf
xor
insb
cltd
loop
cmp
outsl
jno
sbb
mov
pop
ds
movsb
out
fildl
adcl
rol
in
jmp
dec
adc
mov
inc
sub
sub
ss
lds
add
aaa
push
xor
inc
push
incb
mov
imul
pop
sar
mov
out
aaa
xlat
mov
add
mov
adc
sti
cmpsl
outsl
loope
xor
pop
rcr
pop
xor
inc
lret
mov
pop
fiaddl
imull
fimull
xchg
fstl
dec
divl
lahf
sbb
adc
cwtl
push
push
ret
shlb
cmp
push
xorl
mov
inc
inc
xchg
stos
icebp
xorl
shl
fistl
test
inc
cmp
add
push
in
push
popa
imulb
call
pop
out
movsl
xor
lea
pop
sbb
sub
or
cmp
xchg
lods
pushf
lret
ljmp
jo
inc
mul
shlb
sub
mov
fcmovbe
mov
ds
push
pop
jmp
out
sub
inc
loope
or
jo
pop
lahf
mov
sbb
flds
mov
int3
cmp
and
xchg
jns
fnstsw
inc
aad
shrl
lret
out
lds
and
xor
cli
clc
dec
push
and
push
mov
inc
jecxz
ss
call
push
mov
rolb
cmpsl
jge
mov
sub
fwait
dec
inc
dec
jecxz
repnz
add
push
xchg
daa
xchg
push
pop
pusha
or
popa
scas
adcl
jp
cs
or
mov
aas
and
pop
sbb
lcall
xchg
cmp
mov
push
adc
xchg
inc
mov
sarb
cmp
out
push
and
lea
xchg
dec
xchg
jne
cmp
mov
ljmp
int
movswl
insl
jl
daa
pop
fistps
data16
add
test
xlat
cmp
testb
leave
xorl
testb
inc
add
mov
push
std
repnz
movsl
ror
mov
mov
inc
cld
adc
push
aas
jne
lds
movsb
mov
sbb
andb
dec
dec
and
mov
andb
jb
sbb
fcmovnu
aaa
in
scas
sub
daa
inc
nop
dec
add
mov
bound
inc
out
lods
push
test
mov
fsubr
xor
dec
pop
es
pop
sub
out
test
sbb
call
or
pop
xor
clc
dec
xchg
cmp
dec
cmp
pop
daa
xor
leave
leave
mov
lock
xchg
loopne
sub
jecxz
inc
xchg
aas
adc
mov
cmp
add
rolb
in
dec
lret
das
and
mov
cmpsb
mov
dec
test
in
jno
ds
enter
jnp
sub
dec
sub
sub
jg
push
lret
dec
or
in
mov
rcll
rcll
imul
mov
and
xchg
inc
jl
xchg
dec
test
jne
ds
jle
cli
xor
dec
jle
test
mov
cltd
test
outsb
and
inc
out
stc
push
cmc
adc
mov
fcomps
arpl
pop
pop
jle
dec
or
es
data16
popa
and
and
fsub
movsb
cmp
pusha
push
out
jmp
loopne
movsl
daa
mov
fwait
std
adc
and
jp
aas
test
ss
stos
hlt
push
test
adc
and
adc
in
xor
jns
iret
add
int3
lret
xchg
aam
cmc
test
cli
dec
out
push
jne
or
sub
adc
lods
aas
fidivrs
cld
mov
loopne
mov
or
inc
or
adc
add
inc
xor
lds
mov
sbb
movsb
mov
insl
adc
lahf
add
int
repnz
loop
cmpsl
push
xor
int
pop
fmul
int
cmp
ret
push
push
fs
cmpsl
add
cmp
sbb
lock
int
in
mov
mov
sbb
lret
ljmp
sub
leave
insl
aaa
cli
jbe
push
leave
mov
xchg
add
daa
sub
xlat
push
jmp
jg
or
pop
adc
pop
orb
ds
movq
xor
lcall
dec
test
xor
fisubrl
adc
xchg
stc
bound
daa
ficoms
loopne
sahf
imul
into
into
fcompl
in
fisttps
pop
mov
push
in
lods
enter
mov
sbb
shll
leave
pop
sbb
mov
xchg
cltd
notl
punpckhdq
jns
push
out
aas
es
into
add
rol
out
ljmp
inc
cmp
insl
out
xor
sub
mov
repnz
mov
fimuls
push
dec
mov
fisttpll
clc
push
in
mov
addr16
jg
mov
daa
sub
rcr
clc
scas
dec
loope
les
lret
mov
adc
mov
lods
idivl
inc
cld
and
or
imul
loopne
pop
add
mov
sub
or
mov
push
cltd
cmpsl
mov
adc
pop
fstl
imull
jge
lahf
lahf
dec
mov
dec
mov
jl
call
fidivs
pop
mov
stos
es
xchg
cmp
xor
sbb
pusha
das
mov
mov
cmp
hlt
out
fisttpl
inc
cmc
and
bound
fidivrl
outsl
sbb
add
and
add
adc
inc
xor
xor
adc
sarb
repz
in
in
sarb
dec
and
cli
cmp
inc
sti
test
jae
sbb
add
movsl
mov
mov
hlt
xchg
pop
mov
inc
mov
mov
fstps
xchg
or
cmp
inc
enter
jae
add
xchg
cmpsl
jge
pop
pop
fstl
push
out
push
iret
rcll
fcoml
movb
inc
stos
jge
or
pop
loopne
fwait
adc
and
ds
lret
mull
mov
imul
mov
nop
popa
or
outsb
sbb
push
insl
adc
jp
scas
cltd
dec
loopne
sbb
movsb
movsb
mov
stc
movsb
xchg
stc
in
movsb
movb
int3
jl
repz
rcrl
mov
cmp
mov
mov
imul
cwtl
jl
out
mov
lahf
add
sbb
xor
clc
ja
pop
leave
cmc
lret
adc
cld
test
jbe
xchg
cmp
xchg
loop
pop
or
mov
mov
pusha
cli
sbb
cwtl
sub
xchg
jb
and
and
ret
dec
rolb
shl
sbb
mov
pop
lcall
or
add
fistpll
hlt
test
jmp
or
or
hlt
gs
add
mov
push
inc
das
and
movsb
adc
sbb
aas
xchg
cmp
xor
adc
or
std
ja
imul
lcall
inc
cwtl
sbb
fs
cmc
add
push
pushf
test
cmc
dec
enter
sub
xchg
sbb
pop
fists
push
pop
leave
xchg
or
adc
setle
test
aad
es
mov
xchg
mov
pop
push
add
push
add
int
add
ret
xor
aaa
aas
add
pop
pop
sahf
sbb
xchg
icebp
fwait
es
and
test
loope
cmovns
test
mov
mov
fcomip
insb
inc
sbb
lret
push
lock
pop
outsl
das
pop
lods
inc
je
push
pop
dec
sbb
mov
andl
mov
js
in
sets
sub
hlt
jbe
leave
ja
shl
clc
jp
rcll
imul
mov
testl
and
cld
or
in
or
mov
inc
push
cmp
mov
push
shl
pop
lahf
mov
mov
cmc
mov
jle
mov
pushf
push
push
mov
leave
inc
ja
xor
scas
sub
testb
jp
ss
cmp
add
outsl
pop
out
jnp
xchg
xor
lock
dec
ret
aad
xchg
sub
pop
and
push
mov
jge
sbb
stc
jbe
lcall
mov
xchg
adc
ficoms
mov
nop
and
lods
pop
adc
je
push
pop
jmp
mov
pop
cmp
pusha
push
cmp
jae
aaa
repz
scas
xor
mov
sbb
mov
loope
add
subb
jb
jnp
add
icebp
js
inc
scas
inc
add
fists
xchg
hlt
fsubr
push
rclb
dec
and
negl
and
xor
in
das
push
mov
dec
lahf
adc
xchg
mov
jns
jae
cmpl
cmp
mov
in
stos
jmp
bound
icebp
mov
mov
cmp
outsb
jge
stos
push
mov
or
rorb
mov
add
xor
jnp
arpl
stc
mov
mov
inc
pop
mov
cmpsl
and
arpl
inc
fs
lods
pop
pop
test
cmp
lea
xchg
andl
mov
add
ja
cmpsb
lods
aam
out
mov
js
adc
mov
aad
in
fmul
or
sub
insl
lods
repnz
hlt
mov
add
rcrb
jne
cmp
mov
push
popa
lcall
mov
insl
jp
mov
aas
jbe
sub
sub
cmp
inc
mov
sbb
fimull
add
sub
pop
xor
out
and
imul
push
or
inc
sti
or
sub
mov
push
jmp
push
dec
xchg
js
jmp
sahf
mov
roll
ret
cmp
int3
ja
loop
lret
push
shr
fs
xchg
cmp
and
mov
negb
lds
inc
sub
popa
and
adc
mov
stos
xchg
mov
ret
out
mov
pusha
lods
cmpsl
mov
xor
clc
into
fimull
std
push
mov
cmc
mov
fwait
mov
pop
mov
daa
rcrl
jle
ret
in
jnp
mov
pop
fs
ja
iret
lcall
adc
and
push
inc
and
movsl
loop
js
or
stos
cmc
repnz
push
test
pop
lret
xchg
rorb
or
mov
push
movsb
cmp
mov
push
xchg
mov
dec
repnz
movsb
adc
lret
or
adc
aad
jns
in
out
cs
add
fidivrs
adc
adc
out
bswap
mov
adc
pop
div
pushf
test
push
lret
lahf
inc
imul
jmp
nop
xchg
adc
mov
loope
adc
arpl
mov
xchg
xchg
push
mov
stos
sbbb
stos
pop
dec
pop
pop
xchg
pop
call
pop
fiaddl
xchg
in
into
push
sbb
icebp
test
ja
and
jbe
cs
pop
push
cmp
je
mov
jae
sti
push
dec
dec
outsl
pop
jmp
sbbl
loop
adc
out
aad
xchg
leave
dec
add
jl
pushf
jmp
mov
aas
inc
pop
je
sub
or
mov
or
aaa
cmc
lcall
xor
cmp
cmp
jp
push
imul
pop
ljmp
cli
test
ja
sbb
and
xor
add
repz
ja
shrl
lock
bound
mov
adc
fmul
push
mov
scas
xor
jnp
int3
popa
insl
iret
adc
and
jl
pop
mov
psrlw
cmpsl
and
mov
pop
leave
jo
shrl
add
in
pop
xchg
insb
sahf
push
aad
inc
out
jecxz
cltd
scas
nop
mov
fmull
pop
dec
xorb
movsl
dec
push
mov
cmp
or
inc
int3
inc
ljmp
push
bound
sbb
popa
scas
mov
pop
pop
enter
or
ret
int
inc
mov
dec
jge
in
div
add
pop
insb
rcr
xchg
sbb
or
insb
mov
or
outsb
int
push
stos
dec
xchg
insb
mov
push
scas
stc
pop
test
jl
movl
cmp
sbb
scas
mov
dec
pop
xor
daa
mov
test
push
cmp
shll
aas
dec
cmovb
xlat
push
pop
lret
cld
or
add
jmp
jae
jbe
in
jp
pop
or
mov
xor
call
dec
fstl
jl
addr16
mov
sbb
adc
pusha
inc
int
hlt
popa
shrl
clc
test
sbb
inc
jno
jmp
mov
xor
xor
loop
shll
mov
cmpsb
lret
pusha
pop
fsubl
cltd
sub
idivl
aas
mov
or
jecxz
adc
inc
push
stos
and
or
fcmovbe
mov
inc
mov
movsl
hlt
out
clc
and
xor
and
ret
nop
sub
jnp
ficoms
sbbl
sbb
sbb
neg
sbb
test
daa
and
das
mov
pop
imul
cmp
mov
mov
add
rcrb
shl
mov
aad
pop
pop
lds
stos
push
lahf
dec
mov
push
in
mov
mov
mov
icebp
sub
xor
pop
mov
or
xor
repnz
es
jg
pop
pop
push
jae
addl
push
daa
loop
je
decb
fnsave
xor
sbb
pop
dec
int3
sbb
cs
add
sbb
push
std
inc
in
adc
cli
inc
ja
inc
fiaddl
add
push
push
es
mov
or
dec
hlt
sbb
insl
addl
leave
nop
inc
lods
dec
mov
mov
pop
in
sbbb
push
arpl
int
dec
pop
scas
inc
fwait
ss
push
ret
lds
ret
inc
cmpsl
xlat
or
add
outsl
jmp
or
rclb
xchg
lcall
pusha
xor
sbb
mov
fwait
jecxz
xchg
test
repnz
pop
jbe
mov
sbb
dec
add
and
out
lret
cmp
and
and
repz
repz
fwait
pop
lahf
aas
js
or
and
test
mov
test
hlt
scas
subb
je
push
in
sub
std
in
inc
test
outsb
sahf
subps
andl
fiaddl
mov
mov
aad
xor
add
pop
insb
imul
clc
aas
push
cmp
pop
mov
sbb
and
or
popa
andb
scas
in
dec
jno
mov
and
xlat
ret
cmp
stc
jo
inc
xchg
js
mov
fcmovu
adc
or
fdivs
ja
mov
dec
arpl
dec
inc
jne
popf
or
mov
popa
push
pop
addb
in
mov
in
xchg
lcall
xchg
push
xlat
or
ror
adc
adc
lcall
jno
sub
mov
adc
mov
inc
arpl
cmpsl
jmp
mov
out
fstpl
stos
mov
frstor
or
ret
ds
mov
loope
cli
inc
cli
mov
mov
mov
insl
jecxz
shll
int
jge
add
mov
dec
or
cwtl
mov
push
dec
stos
xchg
popa
int
aaa
arpl
fidivs
ja
adc
xchg
lods
jno
cmp
dec
sbb
sbb
add
inc
addr16
mov
push
imul
aad
daa
insb
call
jg
lret
mov
push
inc
fstps
test
adc
imul
repnz
test
fisubrs
jae
push
inc
nop
pop
inc
mov
xorps
sbb
or
sub
inc
adc
jb
pop
mov
push
mov
int
mov
push
push
ja
mov
xchg
inc
gs
adc
icebp
aas
mov
sbb
push
int
div
clc
mov
add
and
jno
mov
push
movsl
je
or
outsb
fisubrs
popf
mov
inc
out
cmpsb
sbb
fs
sub
adc
xor
adc
adc
jp
sub
repnz
insb
aam
pop
jb
mov
ljmp
xor
orb
push
xchg
mov
fs
cmp
dec
sub
pop
add
leave
mov
inc
push
push
push
jno
xlat
mov
mov
mov
sub
jo
fsubrl
dec
and
adc
out
inc
dec
aam
inc
push
movsb
addr16
xchg
das
out
xor
sbb
add
pop
dec
ss
loop
inc
je,pn
scas
sarl
mov
push
jne
adc
add
xor
add
loopne
daa
shrl
in
outsb
lret
sbb
mov
sub
ret
mov
popa
aam
fimuls
jmp
and
xor
outsb
je
test
dec
pop
mov
stc
pop
in
aas
cwtl
iret
inc
push
push
adc
rorl
mov
push
icebp
inc
nop
icebp
test
fmull
lret
ret
cmpsl
and
sarb
shll
and
mov
rol
fildll
inc
add
inc
sub
aas
or
mov
mov
loopne
mov
push
lods
stos
cmp
es
leave
jg
testl
pop
lret
mov
sub
sub
popw
inc
mov
mov
cmpsb
aaa
in
cltd
addb
ret
mov
mov
lret
sub
jbe
sbb
sub
arpl
sbb
mov
xlat
out
jg
mov
mov
scas
gs
leave
stos
or
add
cltd
lret
lcall
insl
adc
or
jge
inc
xor
xlat
loopne
sbb
jmp
xlat
das
call
scas
inc
test
jmp
into
adc
pop
add
aam
dec
cltd
mov
inc
jp
xor
add
sbb
add
pop
ds
jae
jmp
fldt
aam
adc
pop
inc
and
insl
adc
pop
fstps
pop
pushf
or
test
add
jmp
sbb
loope
jg
stos
ja
jno
enter
cmp
jne
scas
cmc
mov
sub
add
subb
addr16
leave
int
and
in
out
mov
pusha
cmp
hlt
clc
loop
ja
cmp
push
pop
data16
daa
js
out
enter
fimuls
jge
aam
adc
insl
and
repnz
cmpsl
orl
pop
push
fldenv
mov
outsb
xchg
std
push
jae
dec
mov
std
jns
inc
outsl
dec
or
icebp
xchg
sbb
pop
mov
mov
add
loope
fisubrs
mov
mov
inc
outsl
inc
pop
fnstsw
stc
dec
jnp
test
jmp
jbe
push
fidivs
mov
push
pop
movsb
aaa
hlt
push
ret
pop
sbb
mov
pop
pop
jnp
inc
sbb
lcall
popf
into
fmulp
and
xchg
push
shll
push
pop
je
out
mov
popf
xchg
nop
sbb
ret
popa
fs
pusha
popa
jp
pop
xor
push
hlt
test
xchg
jl
sub
movsb
or
add
jno
xchg
mov
sarb
push
xor
outsb
fadds
mov
rcll
rcll
mov
xor
sbb
insl
jp
mov
bound
in
out
add
iret
push
jg
outsl
xchg
adc
lock
adc
les
lcall
cmp
test
mov
into
push
sbb
push
add
xor
insl
cmpsb
jmp
cmp
scas
cmp
jp
call
or
sbb
cs
push
shl
pop
sbb
lahf
and
and
loopne
scas
iret
jne
das
xorb
inc
mov
jle
push
movsl
sub
sub
and
cld
sbb
jle
loopne
cwtl
aas
inc
mov
jecxz
jnp
cmp
mov
jg
mov
mov
dec
jecxz
cmp
mov
mov
mov
inc
aam
add
adc
cmp
push
jge
mov
sub
test
push
in
add
idivb
jl
sub
mov
sub
ror
jp
mov
jg
shrd
enter
repz
aaa
subb
xchg
push
mov
iret
leave
jmp
cmp
cmp
mov
es
cmpsl
clc
cmc
or
jle
not
lret
test
adc
xorl
push
test
loope
mov
inc
fs
pop
outsb
in
xchg
add
dec
mov
xchg
sub
adc
sub
jge
clc
mov
rcll
pop
das
cmp
pop
sub
pop
aas
gs
loopne
push
fdivs
lahf
test
pop
mov
fs
inc
clc
xor
stos
or
dec
sysexit
aam
cmp
xor
cmp
xor
aas
xchg
push
push
leave
out
jg
jnp
xchg
adc
xor
sub
outsb
jmp
or
test
sbb
test
les
pop
pop
jp
orl
test
xchg
xorl
aam
repz
inc
sarb
xchg
push
xor
push
fsubrp
adc
mov
push
mov
jg
lcall
xlat
rcrb
and
pop
add
cmp
xor
jecxz
push
sar
scas
and
aam
sbb
repz
and
jnp
cltd
jle
gs
mul
je
push
aaa
xchg
inc
rol
and
cmp
jg
cmc
pusha
stc
pop
int3
outsl
rol
mov
rcrb
ss
jb
lcall
shl
and
mov
in
xchg
push
jl
popa
pop
mov
xlat
scas
neg
mov
popa
or
jle
mov
inc
push
in
cwtl
cld
and
jp
lea
lods
in
lods
fisttpl
ss
andb
decb
mov
data16
sub
out
xor
movsb
dec
daa
mov
outsl
sahf
xchg
pop
pop
pop
in
dec
add
push
mov
mov
mov
xchg
loope
repnz
out
cmp
pop
dec
and
dec
div
mov
push
or
sub
or
inc
aad
nop
push
mov
cs
mov
ret
jmp
out
movsb
xlat
and
mov
cltd
jg
jns
mov
popa
mov
push
adc
ficoms
mov
cwtl
mov
addr16
ljmp
jnp
fwait
popf
cmp
es
jmp
mov
push
aas
test
pop
inc
push
cwtl
loopne
sahf
pushf
jl
fwait
sub
pop
mov
fldl
xchg
pop
das
mov
rorb
pop
push
int
dec
xchg
or
in
repnz
jl
cmp
and
or
and
ss
mul
sub
jbe
push
or
xchg
enter
rcrb
int
fildl
jmp
dec
lea
adc
stc
lret
loope
xchg
les
ss
fisttpl
push
pop
adc
mov
fdivl
pop
and
loopne
ret
xchg
imul
add
or
cmc
adc
mulb
stos
subb
aas
pop
xchg
shl
stos
jg
roll
outsb
dec
imul
jg
outsb
mov
fnstenv
mov
or
jae
pop
sub
or
push
sub
xchg
daa
int
pop
inc
sub
mov
insl
sub
adc
int3
fists
mov
adc
fisubs
and
ja
fstl
call
jle
jecxz
sarb
mov
mov
out
outsb
push
arpl
pushf
push
or
fs
rcl
scas
iret
and
and
inc
fnstenv
dec
dec
es
repnz
outsl
pop
out
jo
lret
ds
popa
iret
jl
movsl
loopne
loopne
xor
int
lods
sarl
ljmp
cmpsl
lea
lods
daa
scas
push
cs
sbb
push
mov
lock
xchg
movsb
pop
mov
xor
cmpsl
sub
or
xchg
cmpl
lcall
cmp
push
mov
cltd
jo
mov
cmp
mov
pop
pop
jmp
shlb
dec
pop
jge
mov
mov
or
hlt
push
je
cvttps2pi
add
or
lds
jno
iretw
gs
vpsrad
dec
sub
cmpsb
dec
daa
dec
push
dec
loop
imul
ss
add
push
mov
and
inc
adc
push
xlat
test
ret
outsl
in
fwait
adc
xor
inc
sbb
cmp
ret
ja
stc
sbbl
pop
outsl
sti
add
mov
push
rorb
pop
mov
mov
mov
std
mov
xchg
cmc
out
inc
xor
imulb
jge
fisubrs
ret
je
and
enter
xor
or
lods
mov
cmpsl
movsl
and
pop
repz
cmp
mov
int
out
fnsave
mov
gs
or
mov
adc
cmp
adc
push
mov
push
test
mov
and
jp
aas
jecxz
push
sub
cltd
push
dec
xor
aad
xor
xor
ljmp
movsb
mov
aaa
jge
add
push
jmp
scas
adc
push
rol
out
dec
mov
push
sub
xchg
adc
inc
in
lcall
dec
and
repnz
out
mov
mov
sbb
jo
dec
dec
inc
cmpsl
leave
imul
cmp
sub
ficoms
out
or
push
gs
jmp
sub
test
xor
xchg
cmp
jmp
cmp
lahf
iret
out
jg
pop
sti
into
sbb
mov
test
mov
mov
in
mov
test
jbe
mov
int
mov
cmc
xchg
cmp
pop
ficoml
pusha
les
xor
and
sbb
stos
and
in
push
decb
mov
xor
mov
ss
cli
pushf
dec
addr16
mov
bound
lods
arpl
int
cmc
lods
mov
add
cmp
mov
and
ffree
cli
imul
mov
jb
sbb
add
cmc
sbb
xchg
xor
jbe
testl
js
int3
dec
push
mov
mov
loop
mov
adc
cmp
sub
xor
fcoml
dec
outsl
sub
ficomps
aaa
xchg
add
lret
je
mov
push
inc
hlt
jl
loopne
push
inc
jg
jns
add
push
or
lods
inc
pop
pusha
cmp
sub
shl
inc
and
inc
mov
test
cwtl
gs
shl
in
xor
aad
mov
test
lret
dec
movsb
sbb
adc
and
pop
dec
dec
mov
aad
mov
mov
ja
ret
inc
fistpl
cmpsl
bound
sbb
popa
aas
mov
cmovb
sub
adc
movsb
and
adc
jge,pt
jno
movsl
xor
sbb
mov
push
jae
dec
pop
jl
mov
jge
dec
test
add
outsl
xchg
xchg
int
sub
or
fwait
add
lods
jnp
loope
imul
mov
sbb
fwait
mov
addb
stos
rclb
fwait
imul
xor
lea
push
pop
adc
mov
cld
push
dec
mov
mov
and
sub
mov
mov
ljmp
insb
jp
fisttps
jns
lcall
push
lahf
and
sbb
ret
outsb
out
ffree
mov
outsb
jns
adc
xchg
mov
mov
cmp
fmuls
mov
jmp
and
xchg
push
and
jg
dec
nop
mov
and
imul
pop
mov
adc
push
lea
shr
ds
sbb
ret
hlt
daa
mov
data16
sahf
inc
adc
pop
xor
pop
fldenv
icebp
movsb
out
adc
mov
sti
lods
ds
fcom
imul
pop
dec
adc
jo
adc
jp
push
scas
jle
pop
aaa
cltd
fadd
jb
add
aam
mov
jns
xchg
lea
cmp
jae
and
repz
cmpsl
aaa
addr16
push
stc
fsubl
mov
xchg
ret
jp
testb
mov
ds
mov
sub
andb
dec
cmp
stos
lcall
subl
or
xchg
lea
adc
jnp
push
mov
push
xchg
sub
stos
in
scas
lret
inc
clc
add
fistpl
jmp
fildll
ret
cmp
cmpsb
pop
fdivrs
mov
and
cmpsl
cs
cli
scas
xor
stc
sarl
jp
mov
dec
repz
add
sti
xchg
sub
loopne
je
push
xor
mov
in
cwtl
adc
out
hlt
push
jp
inc
sub
lods
stos
jnp
mov
or
cld
lcall
lock
ljmp
and
gs
add
mov
idivl
mov
pop
pop
mov
cld
imul
sbb
aad
cmp
into
cmp
addr16
int
ret
xchg
pop
sbb
or
inc
sub
outsb
xor
psadbw
cmp
repnz
sahf
test
fistl
push
cld
push
pop
push
fistpl
ret
mov
daa
cmc
addr16
mov
pop
cmpsl
jns
dec
mov
lods
adc
push
push
rcr
je
mov
lock
pop
sub
jg
out
ret
cmpsb
adc
push
les
dec
add
sbb
mov
jle
loope
and
inc
cmpsb
fsts
ret
dec
pop
jmp
in
inc
fnstcw
cwtl
test
cwtl
sub
insl
loop
pop
adc
lcall
bound
fadds
outsb
sti
lcall
fistps
xor
sub
jp
cmp
scas
ss
outsl
adc
in
mov
rolb
push
jecxz
push
data16
add
sbb
std
stos
jge
aad
out
lahf
sub
cmp
rcr
jo
cmc
dec
gs
or
sti
cmpl
sbb
dec
cmpsl
mov
xchg
mov
rol
xlat
sbb
fnstsw
lret
movsl
nop
pop
fidivl
dec
das
and
pop
pop
push
arpl
and
cmc
sub
ret
xor
adc
sbb
mov
adc
push
mov
jp
movsl
inc
xor
add
cs
and
sti
xor
scas
sti
pushf
fdivrl
add
jb
int3
rcrb
cmp
sub
lcall
xchg
cli
jns
cmp
dec
mov
lret
cmp
inc
pusha
je
and
imul
mov
pop
orl
dec
insl
jne
xchg
mov
inc
cmp
mov
insl
ss
out
xor
fldl
fdiv
mov
call
hlt
xchg
aam
fsts
mov
dec
popf
add
jno
fstl
std
jp
cmp
cli
cli
idiv
in
in
test
in
jmp
lea
jp
mov
arpl
jae
add
cmp
jne
mov
mov
mov
dec
in
jle
aaa
rolb
fs
pop
fimuls
push
add
mov
je
push
jbe
insl
cmp
shrl
sub
sub
int
adc
sbb
hlt
int
pop
push
mov
adc
mov
out
dec
imulb
xchg
jmp
jp
out
sahf
fdivs
les
mov
mov
test
lods
add
mov
mov
in
mov
lcall
add
mov
fdivs
data16
fstps
sub
dec
add
pop
mov
ja
in
push
nop
aas
aaa
fst
movsl
jp
add
jmp
outsb
mov
pop
in
push
dec
out
scas
fistpll
mov
movsb
xlat
push
cli
ljmp
mov
or
inc
test
mov
cmpsl
mov
ja
add
in
pop
fcomps
xlat
mov
jl
sahf
pop
sbb
sbb
aas
movsb
jmp
imul
mov
mov
jae
imul
cmp
std
xchg
aad
pop
cmp
sahf
xor
mov
jnp
cmp
cmpsl
jmp
jecxz
mov
clc
scas
std
mov
dec
pop
ret
fs
push
js
sbb
sub
dec
sbb
js
pop
cld
movb
dec
mov
xor
inc
js
sbb
outsl
sub
out
mov
fimull
xor
add
scas
cmp
mov
jecxz
outsb
mov
int3
cmpl
sub
outsl
mov
sub
jle
je
mov
and
xor
push
cli
insb
xchg
andl
aam
ljmp
mov
divl
inc
add
enter
lods
sbb
icebp
ljmp
lock
pop
inc
scas
mov
insb
push
push
loop
je
stc
ret
aad
pusha
dec
in
loope
ret
fs
mov
imul
movsb
push
repz
pop
mov
inc
xor
rcrb
sub
xorl
sbb
and
mov
loopne
mov
incb
jnp
out
aas
loope
jmp
imul
stc
mov
sub
and
je
xchg
add
ljmp
push
loope
inc
inc
push
adc
jecxz
xchg
mov
push
lcall
mov
stc
ds
lahf
jl
cli
loopne
add
mov
mov
lret
arpl
popf
push
loop
in
mov
add
mov
jns
mov
aaa
mov
adc
cmp
cltd
icebp
mov
sbbb
mov
aad
lret
aaa
subb
imul
jbe
mov
or
or
lea
arpl
dec
sahf
int3
lahf
or
add
and
imul
setns
adc
ret
iret
dec
xchg
lods
ljmp
or
je
mov
jbe
je
cli
out
add
out
outsl
int
in
int3
sub
int
jno
pop
dec
mov
ret
push
lock
gs
cmpsl
and
dec
into
sbb
inc
loopne
mov
popa
orl
ljmp
aaa
sbb
xchg
jb
mov
xchg
cmp
sub
and
xlat
xor
cmp
adc
aaa
rcr
jge
pop
shll
in
jns
dec
lock
mov
or
mov
sbb
mov
add
sbb
pop
cmp
popa
mov
inc
movsb
sbb
aad
pop
xchg
aas
fists
pop
push
iret
daa
hlt
lods
jp
pop
jg
push
mov
inc
loopne
jb
and
je
mov
test
std
arpl
in
lods
sbb
jne
dec
imul
dec
jmp
mov
xor
cmp
mov
ret
xchg
pop
subl
mov
pop
and
shlb
add
push
mov
or
cmp
xchg
jo
stos
xor
push
dec
inc
inc
shlb
ret
insl
xor
les
jne
rol
adc
jne
fldcw
cmpsb
aad
test
push
pop
sbb
andb
inc
hlt
popf
je
test
cmp
testb
lock
lods
pop
addl
outsl
daa
outsb
divl
jo
sbb
and
lock
mov
push
xor
hlt
call
sub
cmp
imul
inc
jne
mov
imul
ljmp
mov
xor
in
neg
shlb
hlt
jge
mov
cltd
xor
pop
stos
and
loopne
daa
sbb
mov
add
sti
in
sbb
mov
fimull
mov
lock
js
andl
test
test
lods
mov
in
popa
in
cmp
pop
iret
ret
test
data16
sub
inc
lcall
mov
mov
mov
testb
rolb
xchg
cli
or
and
daa
inc
inc
and
dec
pop
pop
mov
push
and
dec
fadds
jle
or
sbb
dec
add
insl
inc
dec
mov
jns
decl
cs
mov
jl
and
mov
loope
cld
out
clc
sbb
jb
divb
mov
add
push
test
xor
xchg
cmp
pop
into
in
test
rcrl
inc
and
or
mov
or
jne
xchg
dec
xchg
in
pop
mov
pushf
sbb
jb
stc
push
or
mov
push
das
xchg
and
adc
je
sub
imul
push
shlb
sub
sbb
mov
ret
dec
adc
out
push
mov
mov
out
mov
or
push
jmp
pop
push
inc
cmc
xchg
cmpsb
cmp
out
and
or
sbb
lods
lds
fisubrl
outsl
stos
int3
outsl
orl
addl
adcb
sarl
jae
into
mov
or
xorl
rol
jno
pop
fincstp
mov
jg
scas
scas
or
rcrl
fistl
pop
dec
idiv
pusha
xchg
les
lods
cmpsl
jno
inc
xlat
aas
pop
fsubrs
pushw
mov
sub
mov
jo
jb
xlat
dec
fmuls
jp
xchg
pop
movsb
arpl
movsl
jp,pt
jne
movsb
enter
in
pop
push
fistl
insl
or
fsin
push
jne
arpl
cmp
loopne
push
push
adc
cmp
cmp
xchg
mov
or
inc
inc
cmp
sbb
sbb
mov
adc
jae
sbb
test
clc
aaa
mov
rorb
fistl
das
and
jg
clc
push
pop
pop
aad
imul
jecxz
adc
push
leave
inc
adc
pop
push
xchg
inc
das
roll
testl
add
outsl
mov
repnz
daa
pusha
mov
and
es
push
mov
inc
pop
dec
rdpmc
sbb
pusha
ret
or
xchg
sbb
add
insl
or
in
jno
xchg
cltd
out
jge
iret
fdivrp
pop
pushf
lock
lret
dec
popf
push
sahf
mov
movsb
jp
dec
and
push
ret
or
les
xor
fwait
shlb
xchg
stos
jle
sbb
sarb
adc
mov
cli
bound
sbb
daa
fistl
inc
insb
sbb
sub
sti
add
cmp
adc
out
sar
out
pop
stos
or
test
push
adc
push
popl
std
mov
mov
imul
fyl2x
icebp
lret
imul
test
lods
or
std
jge
ret
pop
adc
mov
xlat
stos
ret
addr16
inc
cmpsl
or
xlat
mov
dec
mov
js
stos
sub
fisttps
jo
mov
add
rorb
sahf
loope
ljmp
jnp
testl
aaa
jb
call
push
xchg
mov
push
cmc
inc
mov
arpl
pop
int3
cmp
mov
ret
lods
stos
sbb
sub
enter
sti
mov
mov
cmp
mov
and
xlat
mov
loopne
sub
cmc
and
pop
inc
lock
add
out
ret
push
mov
dec
sub
aas
dec
add
hlt
mov
test
sbb
and
dec
aam
cs
jl
js
pop
push
push
adc
pop
test
xchg
or
inc
xchg
xchg
pop
outsb
cmp
lcall
nop
jbe
inc
mov
neg
push
shrb
or
addl
enter
sbb
out
psubq
fnstenv
sbb
insb
pop
test
dec
dec
pop
inc
out
cmpsl
xor
xchg
xchg
mov
inc
inc
stos
xorb
rclb
pusha
xchg
rcrb
lods
gs
loopne
in
arpl
cmp
dec
inc
pop
push
mov
push
flds
in
stos
ss
int3
add
or
jo
into
int
jne
dec
dec
outsl
xchg
daa
lahf
cltd
cltd
out
xor
dec
cs
rolb
push
jnp
fstps
add
out
daa
aam
les
mov
sti
ss
dec
xlat
es
lret
dec
hlt
jbe
pop
mov
pushf
push
and
rol
shlb
ret
pop
dec
mov
ret
in
inc
lret
sbb
inc
sbb
mov
mov
in
cmp
cltd
outsl
clc
popa
push
or
mov
mov
dec
cwtl
arpl
das
or
xchg
mov
es
stos
inc
or
push
adc
adc
aas
outsl
insb
aas
or
cmpsl
add
xchg
mov
jp
pop
fcoml
ja
sub
or
jns
ret
pop
jg
inc
jns
sub
pop
call
mov
je
push
loope
fisttps
mov
mov
mov
mov
pushf
int3
inc
hlt
and
mov
cwtl
daa
int3
mov
sbb
pop
mov
ror
sbb
sbb
mov
dec
pop
jo
adc
jns
ficoms
repz
aas
add
and
mov
int
icebp
pop
inc
movsl
pop
cmp
xor
dec
inc
call
addr16
imul
test
sub
push
pop
shll
ds
dec
rorb
hlt
push
inc
sbb
std
dec
std
or
xor
inc
inc
sahf
mov
mov
adc
adc
test
and
imul
fsubrl
fistps
inc
lods
in
pop
and
ss
pusha
outsl
and
fstpt
mov
adc
mov
mov
inc
aad
push
cmp
jb
add
insb
or
inc
andl
xchg
lcall
jp
insb
dec
pop
sbb
xor
enter
push
lcall
imul
jne
xor
test
out
scas
mov
sub
out
ficoms
dec
push
add
jae
out
insl
bound
cmp
in
imul
push
push
xchg
mov
incb
cmp
xorb
pop
jge
decl
in
and
paddd
iret
dec
lods
xchg
cmp
das
sti
jp
mov
pop
into
mov
lahf
cmpsb
nop
pop
lahf
sarl
pop
xor
pop
dec
jge
hlt
std
pop
xchg
dec
fistl
jb
call
ds
jbe
das
xchg
popw
mov
inc
cmc
mov
ja
xor
fnstenv
mov
inc
addr16
sbb
std
mov
lock
cs
mov
movsb
xlat
xor
and
and
sbb
out
loopne
loope
mov
lods
das
outsb
jp
movsb
mov
fdivrl
loope
push
mov
mov
push
clc
addl
inc
in
push
and
in
fimuls
shrl
jp
cmp
fstpl
and
inc
and
xchg
pop
xor
sub
xchg
dec
xchg
in
fndisi(8087
in
sti
movsl
das
mov
pop
cmp
xchg
jle
mov
sbb
inc
ds
fisubrl
add
cwtl
mov
cmc
dec
xchg
mov
movsb
or
push
adc
gs
arpl
jp
data16
sbb
paddusb
xchg
sbb
inc
mov
lock
pop
cmp
pop
add
sub
sbb
or
das
mov
popw
ljmp
les
pop
pop
ljmp
in
xchg
push
stos
and
cmp
pop
xor
es
scas
rolb
cmp
ss
sahf
dec
in
icebp
fmuls
xorl
stos
jle
mov
sahf
dec
ficoml
movsl
add
add
add
out
outsl
pushf
xchg
cmpsl
das
xor
push
cltd
adc
sub
pusha
mov
push
stc
mov
sbb
arpl
mov
into
fucomi
cltd
rcrl
inc
cwtl
dec
cmpsl
pop
mov
xchg
xor
aaa
test
cmc
or
mov
mov
pop
or
popf
mov
mov
pop
stos
sbb
popa
adc
mov
popf
cmp
mov
jne
cmpsl
lock
sarl
test
fucomip
setp
pushf
sub
mov
push
xchg
and
mov
out
es
sbb
stc
cmc
and
or
shlb
inc
sbb
adc
outsl
pop
cmpsb
push
arpl
movsl
push
add
mov
push
mov
dec
bound
jle
add
mov
data16
movsl
push
push
jp
dec
int3
pop
test
cmc
roll
js
test
out
dec
mov
movsl
mov
cmp
test
faddl
add
mov
fimull
nopl
fidivrl
cmp
adc
inc
mov
add
pop
xchg
pop
jne
mov
clc
mov
xchg
adc
mov
test
fs
shlb
cli
xchg
ret
pop
out
cltd
sbb
fmuls
js
adc
gs
mov
add
mov
mov
xor
push
into
aaa
xor
lds
adc
cmp
aam
shlb
in
jge
xchg
cmpsb
mov
and
rolb
rcrl
aad
sub
flds
mov
dec
pop
xchg
push
out
lds
or
jne
test
in
sarl
sahf
into
push
gs
outsl
call
jg
push
mov
fisttpl
aaa
add
jae
jmp
mov
sbb
pop
jmp
cmp
mov
cmp
inc
or
negl
xchg
fdivrl
iret
lock
mov
fldcw
test
xchg
sub
jecxz
test
lods
dec
adc
je
jmp
sbb
mov
mov
add
scas
test
xor
loopne
fbstp
xor
lock
aas
cltd
lods
aam
cld
lods
test
pushf
aas
xor
enter
jmp
es
pop
aaa
pop
xchg
addr16
pop
or
pop
fidivs
pushf
or
out
jge
jg
or
arpl
push
and
pushl
fbstp
std
xor
repz
sbb
stos
popf
mov
mov
arpl
mov
imul
lret
clc
fmulp
imul
mov
jo
pop
adc
xor
jae
cmpsl
inc
dec
loop
pushf
mov
dec
add
popl
pop
sahf
lods
lahf
jno
out
insb
mov
or
mov
adc
adc
ja
pushl
add
fs
aad
dec
int
out
cltd
loope
mov
hlt
je
fcoms
stos
rsqrtps
add
inc
jge
cmp
hlt
sti
sbb
jle
fidivrs
and
push
add
and
inc
jne
mov
fwait
std
insl
sub
cwtl
ds
jl
xor
cs
into
dec
ss
jl,pt
rorl
mov
aaa
scas
sub
ja
sub
aas
xlat
fsubs
dec
xchg
add
add
inc
adc
inc
mov
addl
inc
dec
insl
stc
leave
jae
inc
enter
loope
fs
jns
inc
shl
js
push
lret
sub
mov
push
sub
xor
nop
out
sbb
mov
xchg
sbb
push
push
shll
inc
pop
in
inc
dec
in
xchg
jb
sub
andb
add
shr
out
ret
bound
insb
xchg
sbb
jl
mov
lret
or
push
cmp
int3
push
push
pop
dec
insb
sbb
dec
jl
xor
mov
outsl
inc
shll
sub
inc
inc
add
stos
lods
push
or
mov
enter
mov
fcoml
cmpl
mov
lret
mov
jo
out
jb
inc
mov
ja
fcmovbe
insb
or
xor
mov
add
lea
ret
or
sbb
out
jmp
sarl
inc
cmp
xchg
add
dec
cld
adc
orb
mov
add
cmpb
mov
aaa
xor
mov
sub
push
repz
xchg
rcr
mov
mov
fisttpll
outsb
fdivrs
je
mov
out
push
and
popa
test
push
push
stos
test
xlat
lret
insl
out
and
or
addb
cmc
jnp
xchg
daa
daa
mov
repz
rolb
dec
xchg
movsl
aaa
mov
loope
cmp
daa
fcmovne
cmp
int3
mov
jno
mov
or
push
jl
es
sub
pop
repnz
in
jp
lcall
sub
icebp
imul
adc
leave
aad
jae
xor
lock
clc
adc
push
xchg
fstpt
stos
push
repnz
lcall
in
push
push
sbb
insb
push
cltd
adc
mov
ret
sub
xor
movsb
jmp
sti
mov
inc
jp
push
or
jb
sub
add
jl
call
sbb
or
or
pop
popf
mov
in
test
sub
outsb
or
repz
cmc
xchg
jb
cmp
movsl
dec
addb
or
inc
pop
insb
lea
jmp
jmp
cs
out
orb
jle
inc
jg
ds
push
jp
jns
out
pop
cmp
cmp
jne
ss
jp
movsb
je
xchg
icebp
and
ret
adc
inc
xor
ret
push
and
and
fsts
xlat
cmpsl
jmp
inc
jnp
jmp
jecxz
out
pushf
out
jge
sti
dec
aas
arpl
popf
imul
pop
sub
out
pop
xchg
cmpsb
sbb
push
adcl
aaa
ret
mov
sub
dec
daa
ss
ljmp
sbb
jno
and
cmp
xchg
bound
sbb
fstpt
jmp
mov
jno
test
ja
sbb
adc
or
push
int
xchg
mov
mov
add
iret
jge
mov
mov
pop
pusha
into
mov
and
adc
add
xor
jg
jmp
or
mov
lods
mov
js
push
mov
arpl
mov
call
repz
jmp
aad
cs
loop
stos
inc
popf
inc
movsb
pop
inc
stos
inc
in
mov
dec
jp
test
sbb
or
jl
test
daa
dec
push
adc
movl
pushf
cmpsl
js
shlb
js
pushf
mov
or
sub
jbe
cmp
or
pop
sub
loope
shl
fdivl
leave
loop
clc
loope
and
subl
sub
or
fidivrl
loope
aad
dec
iret
hlt
mov
or
add
push
mov
mov
ljmp
insb
fstpl
prefetchnta
ret
jne
mov
cltd
mov
push
movsb
dec
insl
jns
or
fists
scas
mov
fs
in
xchg
fs
or
gs
stos
out
sbb
add
lock
nop
fists
popf
je
dec
inc
in
inc
or
and
dec
jp
xor
inc
test
jbe
adc
mov
xchg
mov
jmp
xchg
push
ss
xchg
pop
dec
popa
push
mov
pop
cltd
movsb
ja,pt
dec
sar
push
xchg
xorb
xor
imul
out
mov
sub
mov
xor
andl
mov
add
in
stos
mov
lahf
imul
lods
mov
loop
lret
pop
push
daa
or
jnp
jl
cmpsb
fcmovu
push
lods
pushf
in
mov
fsub
sub
mov
pop
repnz
ss
adc
pop
and
loopne
ret
sub
jb
popa
loop
mov
jo
shrb
cmp
xor
out
ja
and
xchg
setne
jle
xchg
jns
test
cmp
pop
das
testl
jo
pop
imul
roll
add
adc
imul
jl
cmpsl
mov
sti
or
sbb
fs
add
imul
push
test
insb
xor
push
pop
pop
push
clc
loopne
inc
sub
fwait
push
jecxz
dec
mov
or
hlt
dec
sub
dec
ljmp
mov
ljmp
cmp
dec
dec
lods
sbb
in
movsl
jbe
mov
mov
mov
cmpsb
dec
and
pop
xchg
sahf
test
ret
enter
mov
mov
push
or
fdivrs
xor
mov
adc
gs
pop
cld
mov
mov
mov
or
jbe
lods
dec
jl
addr16
int3
dec
adc
stc
jp
sbb
lret
and
xchg
and
ljmp
fldl
scas
rcll
jp
ja
lods
xor
hlt
out
aaa
push
jnp
mov
imul
sub
add
push
push
push
push
jmp
xchg
cmp
imul
arpl
push
pop
insl
sbb
or
adc
inc
sbb
and
xor
push
jne
jl
xchg
fnstcw
xor
fnstsw
arpl
or
repnz
jmp
mov
and
xchg
fidivs
fs
arpl
xor
es
pop
test
vmovlps
mov
push
push
test
pop
lret
dec
cmpl
daa
mov
pop
fs
xor
popf
inc
mov
lcall
js
mov
icebp
mov
dec
mov
push
jne
or
lods
sub
mov
cmp
ret
adc
movsb
insb
imul
jle
push
ss
repnz
movsl
jl
mov
inc
popf
add
sub
imul
ror
stos
or
test
pop
sub
inc
jb
ret
dec
mov
adc
sbb
clc
pop
movsb
adc
cs
and
lods
mov
or
dec
xor
mov
lds
sub
sbb
lods
mov
out
aam
mov
std
or
mov
sub
xor
sahf
xor
jecxz
sbb
dec
xor
sbb
jle
jbe
pushf
mov
adc
sub
lea
mov
cmpsb
mov
xchg
repz
hlt
and
shrl
ficoms
mov
pop
test
xor
jge
pushf
bound
call
inc
in
jl
xchg
xor
jmp
push
xlat
mov
sbb
fmull
frstor
ds
adc
xor
mull
aaa
sub
aad
cmc
stos
mulb
imul
or
gs
lret
mov
mul
jae
lods
cli
push
xchg
fisubl
push
add
loope
call
repnz
push
inc
popa
push
lock
jnp
mov
clc
cmpsl
jmp
inc
dec
mov
mov
jb
imul
pop
lods
insl
and
js
loop
sahf
mov
cmc
fisttps
loopne
or
inc
pop
aad
mov
adc
add
fidivl
enter
movsl
mov
push
mov
pop
push
outsl
scas
outsb
sbb
add
js
adc
scas
test
cwtl
scas
adcl
mov
or
lock
jmp
sbb
cs
popa
orb
mov
jecxz
scas
lret
in
ss
shll
xchg
dec
mov
xchg
inc
xor
mov
and
insb
sbb
or
lds
jo
fisttpll
sub
push
xor
pushl
add
shrb
pop
addr16
and
fs
pusha
mov
cmp
addb
outsb
test
int
div
pop
xchg
jp
adc
adc
enter
fstl
repnz
pusha
and
inc
shrl
sub
jg
and
addr16
movsl
sbb
mov
push
es
leave
mov
out
lea
fbld
ljmp
jl
std
jb
scas
arpl
sahf
and
pop
add
adc
idivb
pop
test
xchg
pop
iret
add
jns
fisttpll
fnsave
loope
pusha
lcall
mov
cli
call
jge
add
in
mov
cmp
sub
dec
pusha
push
adc
pop
enter
fnsave
mov
ljmp
hlt
jmp
pop
pop
dec
aas
int
pop
scas
add
pop
dec
mov
xchg
mov
divl
mov
pop
fcompl
sbb
movsb
add
push
movsb
cli
mov
mov
mov
cs
adc
lods
pop
jg
repz
sbb
aas
movsb
push
jnp
out
aas
jne
push
fists
mov
cs
dec
add
jne
icebp
call
aas
and
push
push
jl
and
in
xchg
jbe
dec
push
pusha
xchg
xorl
scas
fidivrl
mov
dec
pusha
and
xchg
xor
shlb
sahf
scas
js
sbb
addr16
pushf
jae
lcall
lret
inc
add
push
movsb
fbld
adc
xchg
xchg
loop
adc
cwtl
enter
adc
mov
lcall
ss
mov
add
adc
es
aam
sbb
repnz
mov
pop
test
bound
sub
dec
andps
insb
stos
out
lcall
lods
pop
add
adc
mov
jle
lea
xor
in
or
leave
stc
xchg
pushf
pop
adc
xlat
inc
fwait
movsb
pop
sbb
mov
int3
imulb
leave
hlt
fistpll
add
insl
sbb
inc
push
mov
mov
push
data16
ljmp
loop
or
inc
mov
xchg
int
pusha
movsb
xchg
stc
push
dec
sub
jnp
cmp
xchg
nop
test
xchg
out
adc
gs
leave
outsl
jno
and
test
ljmp
cmp
sahf
cmc
adc
jle
lods
fdiv
sbb
pusha
mov
inc
xor
and
mov
xor
add
adc
mov
and
adc
sti
jmp
out
dec
cmp
aad
sub
xchg
hlt
aas
cmp
cmpsb
rcll
std
xchg
mov
imul
repz
mov
sub
or
out
jp
stos
stos
and
xchg
xchg
pop
insb
out
scas
push
mov
int
pop
cmp
xor
into
notb
dec
ds
pop
aas
inc
cwtl
clc
rolb
fs
loop
adc
xor
aaa
inc
or
push
sahf
fnstsw
mov
fldenv
imul
or
cmp
pop
cltd
xor
repnz
in
sub
or
push
insb
sbb
mov
lds
jns
cltd
xorb
xchg
ds
push
cli
movsl
aam
mov
lea
and
and
xchg
int
jne
int3
test
mov
lret
xchg
dec
adc
xchg
xchg
cs
xor
mov
add
int
cmp
int
aad
test
or
outsb
fadds
xor
jg
jmp
setp
jb
jns
pop
pop
fs
sbb
mov
xchg
add
popf
andb
mov
add
jo
adc
mov
xor
mov
pop
pop
lahf
movsl
sbb
insl
pop
pushf
inc
outsl
or
aad
add
jno
movsl
jmp
addr16
lods
fmull
push
jne
ljmp
adc
iret
mov
xsha1
cmpsb
leave
out
int
inc
sub
out
ror
push
inc
xchg
insl
fwait
mov
arpl
dec
add
sbb
mov
icebp
addr16
mov
dec
push
das
mov
nop
jae
mov
sbb
mov
xlat
not
inc
mov
int
pop
cmp
cmovne
jns
cmpb
ss
cmp
ss
and
or
inc
out
imul
cmp
mov
loopne
outsl
in
mov
and
inc
inc
jnp
test
cs
inc
mov
inc
adc
pop
or
dec
add
stos
sub
vmovsd
push
lock
lahf
jmp
adc
in
movsb
sbb
cmp
and
rcl
loopne
rcrl
or
push
sbb
pop
fwait
mov
outsl
dec
jmp
and
call
testb
sub
mov
popa
out
aas
xor
mov
push
loop
inc
jno
pop
sbb
pshufw
cmp
push
lods
jg
cmp
push
rclb
fmul
inc
jbe
out
push
mov
mov
pop
xor
clc
pop
stc
xchg
pop
xor
mov
mov
jbe
xor
add
push
call
fmulp
jecxz
push
mov
fwait
mov
add
cwtl
mov
push
push
shrl
notl
or
cmc
inc
into
adc
lret
dec
cmp
ret
in
and
xor
cli
jne
lahf
in
mov
or
push
daa
inc
dec
lock
insb
push
cmp
xor
enter
dec
call
cmpl
nop
adc
mov
add
test
test
xor
mov
dec
or
mov
jnp
cmp
cld
xorb
xchg
movsl
cld
pop
adcb
ds
inc
aad
imul
outsl
jge
xor
outsl
and
add
or
cmp
pop
int
pop
cmp
sbb
mov
arpl
loope
aad
lfs
insl
cmp
cwtl
push
inc
mov
imul
repz
daa
push
pop
xor
adc
sub
les
pop
cltd
test
out
add
roll
cmp
pop
push
cs
xorl
pop
jnp
and
gs
pushf
cmp
movsb
imulb
rcr
leave
repnz
icebp
outsl
jo
ds
fwait
shrb
sub
inc
dec
rcl
hlt
push
jae
test
fisubl
jae
fidivrs
mov
or
jmp
sub
rcr
imul
push
sbb
and
fisttpl
xor
ret
clc
loope
cltd
test
cltd
push
or
in
xor
inc
clc
inc
jnp
rclb
pop
adc
mov
dec
sbb
sub
mov
aad
das
out
xchg
in
jecxz
mov
pop
and
call
push
inc
or
jl
mov
jns
push
mov
mov
lods
scas
xor
mov
cs
insl
scas
sti
loope
test
call
fldenv
mov
iret
into
ss
mov
inc
mov
sub
cmp
jns
movsl
mov
inc
repnz
xlat
or
ds
fs
popf
inc
adc
scas
jnp
sbb
std
mov
mov
and
out
lret
out
enter
rcrb
imul
push
in
pop
loope
xchg
inc
mov
insl
sti
and
mov
jne
nop
int3
fisubrs
jmp
sub
lret
xlat
cld
adc
or
add
mov
ss
dec
sbb
fcmovb
jp
and
adc
lock
je
int3
cmp
int3
test
pop
fimull
cltd
adc
add
inc
mov
add
in
in
ret
jecxz
sub
xchg
pop
mov
je
call
fwait
mov
aad
jns
test
sub
mov
decb
sub
lds
mov
fidivs
je
push
adc
mov
push
call
xchg
mov
inc
xchg
pop
psubb
test
nop
fsub
stos
stos
mov
push
dec
mov
sbb
rcll
add
jbe
test
cmp
je
es
pop
sub
add
xchg
scas
mov
adc
pushf
xor
adcl
pop
push
lahf
cmpsl
jae
lret
jne
ds
sbb
pop
cltd
aad
lock
ja
jle
dec
ljmp
es
dec
addr16
or
mov
mov
les
mov
adc
push
movsb
movsb
inc
test
pop
xchg
outsb
adc
jns
fnstsw
mov
pop
cwtl
popf
cmpsb
pop
and
sub
imul
mov
leave
add
inc
jmp
bound
sub
negb
out
ds
test
pop
pandn
pop
in
lahf
pop
sarl
shll
lret
mov
hlt
jbe
andb
and
lea
stos
or
jle
cs
shrb
cld
add
push
gs
imul
into
cmpsb
push
mov
lcall
loopne
and
dec
sub
enter
movsb
loop
leave
fiaddl
jbe
out
adc
fwait
jns
in
clc
xchg
adc
push
pop
mov
es
fcmovnbe
sub
bnd
mov
out
mov
loopne
inc
cmpsb
test
jle
sub
in
mov
xor
ds
std
jecxz
mov
divb
or
int
addl
aaa
adc
nop
out
cmp
or
lods
adc
mov
xchg
stos
dec
iret
lock
cli
mov
push
xor
outsl
mul
push
mov
cmp
inc
inc
sbb
inc
xorl
adc
inc
imul
xchg
sub
iret
mov
lds
mov
mov
pushf
add
jo
add
cli
les
int3
inc
stos
pop
pop
or
int3
and
dec
dec
stc
or
xchg
scas
mov
data16
xchg
sbb
jle
mov
imul
mov
repz
add
inc
inc
and
add
pushf
pop
jbe
mov
sbb
ret
hlt
push
lods
out
cmpsl
mov
es
adc
sbb
mov
add
mov
in
lock
lds
rorb
arpl
lahf
lds
mov
jbe
or
clc
adc
fstp
cmp
mov
xchg
in
imul
adc
cli
xor
mov
mov
dec
xchg
test
mov
push
ret
std
mov
fs
cltd
add
sbb
insb
sub
add
push
adc
mov
mov
mov
jl
das
call
jg
int3
lock
daa
xor
fs
fs
fsubs
inc
xchg
jecxz
hlt
inc
cs
xchg
ffreep
aas
scas
mov
xchg
add
xchg
gs
pop
or
test
push
lret
mov
fsubrs
xchg
neg
insb
rcr
insl
popa
and
or
test
push
or
jmp
cmp
sti
push
cmpsb
ds
xor
shll
dec
add
in
outsb
xor
ja
xchg
add
icebp
sbb
repz
dec
xchg
es
xchg
xchg
dec
cmpsl
xorl
jecxz
inc
ss
sbb
in
mov
stos
hlt
cs
lock
sbb
and
sbb
mov
into
insl
or
and
xor
je
clc
pop
mov
dec
xchg
das
insb
fiadds
cmpsl
ret
mov
mov
xchg
rcr
cmpb
push
push
int3
ja
lcall
rcr
xor
and
cmpsl
mov
push
push
mov
int3
xchg
stc
cmpsb
push
mov
ficoml
sahf
pop
inc
nop
fwait
push
adc
add
xlat
inc
shrl
jnp
mov
adc
outsb
insl
sbb
push
cmpsl
rcr
add
fwait
ret
outsl
pop
xchg
cmpsl
inc
and
inc
fmul
cmp
sub
mov
cmp
sub
mov
and
jge
jmp
outsl
loopne
mov
and
arpl
imul
inc
sbb
pop
mov
call
clc
push
icebp
mov
lret
insb
imul
push
mov
pusha
leave
dec
inc
popa
adc
adc
test
or
ds
mov
and
jge
push
adc
test
cmp
sub
jp
mov
sbb
pop
xor
shll
lret
xor
in
push
dec
cmp
lahf
lea
mov
lcall
xor
push
insl
mov
sbb
jle
fsubs
pop
std
cmpb
fdivrp
cli
stos
inc
push
scas
dec
fldt
mov
je
stos
aas
fdiv
popf
mov
sti
in
sub
push
insl
int3
xchg
mov
repz
jnp
pop
mov
xor
clc
push
inc
movsl
loope
inc
fsubrs
cmp
push
jmp
push
inc
call
cmpsb
sbb
sbb
mov
dec
std
mov
repz
aad
adc
cltd
insl
push
bound
fadds
mov
push
xor
mov
cli
mov
or
inc
shlb
xor
jns
enter
loopne
movsl
cmpb
cmp
leave
fwait
pop
inc
xchg
in
icebp
inc
dec
addr16
pop
sbb
jb
sub
std
and
add
notl
sub
cli
fists
push
hlt
andb
sbb
inc
test
mov
cli
fs
ds
divl
les
fadds
cmp
test
call
mov
push
mov
test
stos
lock
mov
sub
insb
je
or
sahf
fsubr
in
jecxz
aam
lahf
add
loopne
test
and
mov
jo
lahf
dec
sub
mov
pop
daa
add
jle
push
stos
out
lds
xchg
outsl
cmp
dec
sub
daa
mov
sub
mov
and
shll
mov
add
mov
shlb
xchg
add
inc
push
inc
push
hlt
lods
addb
or
int3
and
lahf
push
or
mov
fldt
mov
js
outsb
lret
leave
add
mov
dec
adcl
adc
dec
add
sub
xchg
mov
inc
xchg
xchg
int
mov
dec
loopne
cmp
push
sti
xor
test
jg
les
sbb
xor
subb
xlat
fmull
cmp
int
jle
pusha
xchg
add
nop
pop
mov
repnz
fsts
dec
adc
nop
or
movsb
in
lret
cmpsl
adc
xchg
mov
cmpsl
mov
mov
aaa
in
fisubrl
adc
rep
cli
adcb
lods
pop
mov
mov
insb
push
xlat
push
dec
ljmp
xor
push
push
aam
push
jp
xchg
ljmp
pop
lds
ss
imul
ss
mov
mov
ret
cmp
push
add
dec
test
mov
lds
adc
repnz
pop
imul
add
sbb
addl
push
inc
cmpsb
cmpsl
jle
loop
mov
lds
ret
cmp
cmpsl
inc
ljmp
ja
mov
mull
mov
mov
repnz
cmc
mov
in
lret
push
mov
shl
sub
loopne
dec
cmp
aad
sbb
pop
fsubrp
cmp
sbb
ljmp
cli
out
xor
or
xor
mov
sahf
fisubrl
inc
jb
mov
dec
xorb
test
sbb
imul
gs
add
ds
mov
out
imul
inc
shl
sub
shll
daa
mov
pop
aaa
xorl
movsb
cmp
adc
jno
pop
jp
or
and
sbb
aas
hlt
pop
or
out
ss
add
int3
out
outsl
jmp
dec
stos
or
subl
aad
test
test
nop
rclb
xor
dec
shl
cmpps
int
shll
lahf
out
cmp
enter
mov
test
sbb
hlt
pushf
xlat
pop
adc
mov
jg
mov
add
bound
jno
mov
mov
jmp
push
adc
cmp
mov
out
cmpsl
dec
xor
cmp
leave
pop
xchg
outsb
jp
push
loop
jg
out
inc
testb
shll
movsb
dec
test
sbb
mov
ret
and
addb
or
movsl
cmc
popa
stc
xchg
and
in
stc
mov
jne
fnstenv
pop
fnsave
call
jb
lret
mov
jbe
lret
loope
cmp
fistpll
mov
test
pop
push
out
mov
or
mov
sub
mov
mov
mov
jnp
inc
das
cld
daa
xlat
push
xor
sbb
hlt
pusha
jge
push
jle
fsubl
fcmovbe
fs
scas
inc
in
dec
jno
cmc
jmp
or
rcl
xchg
mov
in
in
pop
sbb
test
clc
shr
sub
dec
clc
xor
or
jns
call
xor
push
xor
ds
lea
mov
pop
inc
push
loopne
movsb
xchg
in
hlt
sbb
repz
sub
loop
mov
std
mov
cltd
xchg
pop
jge
popf
push
loop
pushf
mov
cwtl
fists
inc
mov
jl
ss
sub
jbe
addb
dec
xor
pop
pop
mov
mov
pushf
adc
lods
js
nop
loop
scas
xlat
xor
cli
jge
repnz
xchg
repz
aam
push
ljmp
lea
insl
fstl
es
sbbl
testb
inc
jg
sub
cs
push
fnstsw
loope
insl
ds
dec
aas
and
in
loop
lahf
arpl
and
movsb
fisttpl
pop
mov
lods
mov
lahf
jmp
pop
sar
inc
cli
out
dec
mov
int3
mov
xchg
into
fscale
fwait
xchg
or
jle
jecxz
xchg
fucomi
ljmp
cmp
push
add
insb
incb
mov
mov
pusha
pushf
insb
mov
dec
mov
jmp
xchg
dec
pandn
and
fsub
and
dec
ds
or
cmp
or
jbe
pop
jg
mov
and
es
testb
loope
push
mov
das
in
adc
movsl
push
add
push
xchg
ljmp
jbe
jnp
hlt
adc
imul
xor
mov
repz
pushf
sbb
xchg
cli
movb
mov
and
xchg
lahf
pop
sbb
mov
fisttps
mov
and
es
fsubl
and
shll
dec
push
push
pop
lods
adc
jns
mov
call
inc
lea
enter
inc
or
lret
jne
jno
adc
mov
mov
mov
stos
jmp
add
or
loopne
pop
jmp
push
sub
adc
leave
shr
pop
pop
pop
pop
les
inc
mov
mov
or
outsl
add
rorl
stos
test
sub
lahf
or
xchg
mov
and
dec
adc
dec
sbb
outsl
test
enter
fsubp
sub
aad
pop
mov
inc
pop
popa
movsb
sbbb
adc
sub
push
jl
mov
sbb
xchg
mov
mov
cli
mov
dec
fsts
aaa
sub
and
int
add
movsl
inc
dec
out
and
addr16
adc
sub
and
ret
aaa
rcr
fwait
push
and
nop
and
cwtl
adc
cs
mov
mov
test
jne
cli
pop
dec
adc
sbb
testl
mov
inc
ljmp
ret
imulb
xchg
sarl
lret
ret
mov
vandnps
push
xchg
imul
cmp
les
test
and
dec
mov
and
es
imul
aas
test
mov
cmp
pop
inc
sahf
rorl
push
sbb
jb
pop
popa
add
xlat
cltd
xlat
out
inc
inc
lods
pop
les
das
cltd
push
cli
stos
lods
lahf
nop
pushf
xchg
icebp
jge
mov
sub
fbld
mov
es
cli
mov
sti
loop
test
jo
cmp
mov
push
mov
adc
mov
in
call
adc
test
inc
sbb
mov
scas
lea
das
push
popa
testl
data16
in
push
in
mov
pushf
and
mov
out
vcvtdq2pd
movsb
jl
sbb
out
pop
mov
stos
rcrl
push
and
pop
pop
mov
movsl
sub
and
dec
inc
outsl
dec
arpl
nop
lds
jb
andl
add
lret
sub
fcmovbe
loopne
mov
ljmp
sbb
xor
sub
pop
add
xchg
adc
pop
xor
fdivrs
and
mov
pop
sbb
or
cltd
or
add
sbb
ret
xchg
xchg
push
shlb
mov
xor
es
inc
loop
arpl
sbb
loop
out
lcall
out
mov
gs
jg
xchg
xchg
in
in
inc
jmp
cmp
pop
jge
mov
cli
subl
ret
lods
fsubl
pop
dec
jecxz
stc
stos
lret
xchg
idivb
sbb
out
mov
push
incb
je
push
sub
push
mov
int3
jp
push
iret
mov
loope
and
lods
sub
and
decb
dec
icebp
jb
scas
mov
outsb
cs
stos
aas
pop
les
sub
repz
dec
outsb
mov
ret
and
xchg
add
stos
or
int
cmp
fldt
cwtl
in
cld
fisttpll
jns
pop
add
fsub
cwtl
mov
imul
and
push
jmp
mov
leave
fcompl
mov
nop
push
outsb
mov
xchg
mov
jb
ret
xlat
scas
in
sub
jo
lret
xchg
out
fildl
sbb
cltd
lds
adc
push
dec
icebp
sbb
fsubp
sbb
sbb
xor
shl
mov
hlt
fisttpll
stos
rcll
jge
js
dec
jbe
inc
xlat
js
or
adcb
loop
fidivrs
repz
xchg
xchg
lods
jp
jb
or
inc
mov
push
in
push
xor
lcall
sbb
sub
xor
push
in
push
cli
pusha
pop
aam
adc
jecxz
ljmp
std
in
mov
mov
ret
jmp
mov
fldcw
pop
xchg
mov
xchg
adc
and
ret
add
adc
inc
mov
or
in
mov
adc
rcrl
xchg
ja
cmp
xchg
dec
cmp
and
mov
push
testb
or
mov
and
cltd
das
jae
sbb
es
gs
mov
in
das
and
test
jmp
rdmsr
push
or
mov
stc
xor
fwait
sub
mov
jg
lcall
sub
cmp
mov
out
mov
xor
dec
insl
popf
xchg
sbb
test
mov
call
lret
lahf
shrb
std
lods
movsl
xchg
stos
mov
aaa
repnz
or
add
rcr
adc
ret
adc
arpl
in
pop
push
fsubl
insl
push
xchg
inc
sub
aam
mov
adc
je
in
cmpsl
inc
aaa
std
and
shlb
mov
aam
lcall
cld
call
adc
popa
mov
idivl
in
jne
lods
stos
xor
mov
jl
cmp
pop
adc
adc
mov
gs
sti
test
gs
push
andl
shlb
insl
push
popf
push
popf
sub
lahf
dec
add
lds
fldenv
enter
inc
sub
xchg
lock
clc
or
pop
lods
popf
out
cs
fs
test
stc
dec
jle
or
or
sub
jno
jmp
push
mov
dec
sbb
mov
and
out
jge
cltd
fst
pop
jp
aaa
push
push
ss
jg
adc
enter
in
mov
mov
ret
and
mov
mov
cmp
mov
fcmovnbe
mov
dec
and
jle
mov
lcall
inc
enter
dec
nop
jbe
pop
cmpsl
aad
mov
inc
cmp
dec
xor
repz
cmp
dec
xchg
fisttpll
addr16
imul
sub
rcl
fs
sub
xor
xor
mov
jg
sub
jl
xor
jo
pop
sub
pop
adc
in
adc
dec
loopne
cs
aad
outsl
xchg
inc
and
addr16
in
adc
scas
or
sbb
aam
mov
mov
out
incl
pop
pop
adcl
cltd
xlat
xchg
sbb
test
outsb
push
push
xlat
xor
neg
or
xchg
sub
jno
mov
jb
nop
hlt
arpl
das
lods
and
lahf
xchg
mov
in
mov
out
leave
xchg
push
popa
popf
dec
mov
popa
dec
pop
sub
lret
scas
pop
mov
xor
js
sbb
push
lahf
or
sarl
jb
ret
repz
cltd
lret
ret
and
xchg
test
jns
sahf
dec
jo
fdivrp
sub
dec
loop
test
inc
repnz
xchg
in
jg
dec
jne
and
sbb
std
cs
mov
push
test
stos
pop
push
jns
jmp
loope
lods
cmp
sarl
in
ja
mov
and
jl
ja
shlb
mov
and
ds
xor
fiaddl
adc
pusha
mov
and
inc
imul
sti
jb
in
mov
mov
and
and
cmp
jbe
jo
sahf
pop
add
push
inc
mov
in
cmp
or
or
push
or
cli
loopne
es
xchg
mov
jl
int3
in
rol
dec
sub
push
jecxz
jmp
adc
fistpll
call
sbb
cwtl
jmp
jp
scas
ljmp
mov
mov
ss
sbb
xlat
mov
mov
mov
cmp
bound
pop
call
mov
lahf
dec
or
mov
sahf
rclb
enter
xor
push
mull
in
push
fcoml
mov
pop
xorb
outsl
stc
mov
xchg
daa
cmp
fst
loope
pop
movsb
cwtl
sbb
mov
push
popa
push
mov
push
adc
repnz
nop
jbe
or
pop
push
call
inc
aas
lods
push
into
outsl
hlt
cltd
sbb
jmp
test
imull
push
inc
mov
sbb
fucomp
hlt
stos
loopne
das
pop
vmwrite
mov
fucomp
rep
mov
ja
popa
xlat
pop
inc
xchg
lcall
mov
lcall
popf
jle
adc
popl
movsl
lahf
es
jecxz
mov
andl
sub
and
cli
or
xchg
nop
or
in
roll
lret
out
mov
and
clc
jg
in
adc
test
jno
hlt
imul
mov
sub
sarb
adc
lret
sbb
xor
and
dec
xchg
lret
dec
outsb
test
xchg
xor
call
fcomp
mov
push
push
adc
pop
jge
test
test
add
ror
and
popf
hlt
popf
sbb
sub
adc
ds
xor
in
mov
and
sub
jecxz
addr16
mov
stos
inc
push
cwtl
das
and
jg
and
cld
dec
push
mov
mov
jp
add
pop
sbbb
aad
pop
cmpsb
shll
xchg
dec
cmpb
lods
jle
inc
or
cmp
pop
cmp
xchg
jge
mov
xchg
mov
jnp
cmpb
mov
mov
in
sbb
lahf
xlat
in
jle
dec
push
testb
stc
imul
outsb
xchg
loop
jo
mov
and
xchg
and
aas
in
notl
pop
add
cmc
and
xor
jb
add
ss
ret
mov
out
neg
cs
push
push
xor
aam
lock
fbstp
jbe
nop
adc
cs
clc
mov
testb
and
jbe
out
notl
sub
cmp
jle
mov
or
and
xor
mov
ja
pop
je
push
pop
sub
sub
cmpb
xor
js
shrl
pop
nop
je
jb
push
inc
hlt
dec
test
or
cs
enter
cld
push
rcl
movsl
bnd
insl
push
push
int3
imul
adc
jl
outsb
sbb
inc
std
je
pop
not
arpl
std
or
fdiv
lret
das
cmc
cmp
add
sti
mov
ret
mov
repz
jmp
test
push
mov
ja
in
divb
cmpsl
xor
sar
scas
repnz
lret
loope
xchg
inc
mov
and
mov
dec
outsb
add
ss
sub
outsl
testl
out
xchg
mov
push
loope
or
int3
repnz
stc
cmpsl
cmp
add
faddl
cmp
push
rorl
or
in
push
mov
repnz
pusha
cwtl
aam
lock
roll
orb
int3
in
and
xchg
mov
test
and
or
hlt
fldcw
std
jmp
dec
ret
or
mov
xchg
loop
hlt
stc
push
jne
pop
push
test
movsl
je
mov
inc
arpl
mov
shrl
push
shlb
jb
mov
dec
ds
jne
testb
jae
pop
aam
cmp
jns
add
jo
xchg
decb
xchg
xlat
and
xlat
lods
mov
lret
sbb
dec
adc
xchg
adc
insb
sbb
mov
in
in
ret
mov
sarb
inc
adc
sub
xchg
jmp
jp
sub
lahf
dec
hlt
scas
imul
dec
out
arpl
add
mov
mov
mov
cmovo
xor
mov
insl
sub
in
sbbb
adc
lods
lret
imull
push
add
mov
add
in
call
addr16
ficompl
dec
xor
push
orl
sti
repnz
scas
pop
xor
mov
ret
inc
jns
outsl
dec
enter
cmpsb
adc
repnz
outsb
xchg
jmp
aam
inc
adcl
pop
sub
push
pop
pop
mov
lea
lret
jne
and
clc
push
inc
leave
mov
rol
push
les
fs
sub
aas
popf
incl
adc
outsl
sub
mov
mov
cli
jb
jge
ja
xor
pop
add
dec
mov
dec
mov
call
dec
jecxz
out
jg
daa
mov
ret
push
ja
push
pop
movsl
mov
or
xchg
fcoml
test
pop
mov
or
xor
mov
push
aad
jle
mov
movsl
and
test
pop
in
ret
stc
dec
dec
scas
sbb
adc
lret
pop
imul
fwait
enter
or
scas
in
sub
mov
jb
mov
pop
popa
int
cli
sbb
jl
cwtl
lret
mov
in
mov
xor
shl
pop
xor
cmp
mov
sub
mov
andb
pop
sbb
jnp
sub
or
pushf
std
loopne
mov
or
sub
popf
call
pop
add
mov
lret
aas
or
and
and
call
push
das
add
fcomps
shl
mov
roll
loopne
das
loop
loopne
mov
stc
lods
push
push
mov
mov
loope
cltd
mov
dec
sbb
mov
insl
lods
iret
in
inc
add
sarl
sub
psubusw
in
push
and
addr16
push
int3
sub
lret
aaa
loop
fs
fbld
pop
fstpl
mov
in
xchg
pusha
test
scas
shr
add
push
inc
sub
mov
fists
scas
push
insl
dec
or
dec
or
jbe
sub
jae
xchg
dec
call
jmp
std
out
ret
daa
sub
mov
ljmp
in
or
jno
xchg
xor
out
aad
xchg
mov
adc
mov
push
push
mov
xor
insb
roll
outsl
outsb
clc
mov
xchg
mov
and
mov
jno
jno
scas
add
mov
pushl
andl
jecxz
sbb
daa
sbb
mov
add
mov
adc
mov
adc
je
mov
popa
dec
lods
xor
xlat
sub
dec
stos
jbe
mov
and
fadds
jns
cmpsb
jp
mov
sbb
decb
and
jae
sbb
fwait
leave
mov
imul
jnp
mov
and
push
in
sub
imul
cmp
outsl
stos
mov
xor
popa
xchg
inc
push
sbb
sti
jns
imul
jg
cltd
icebp
xchg
push
mov
aad
xchg
fldl
push
aas
js
je
pop
in
pop
xchg
pop
ss
inc
push
push
popf
ret
jg
mov
add
in
sub
jg
mov
cltd
arpl
jns
in
xchg
jb
mov
ret
mov
inc
xor
sbb
mov
or
push
cmp
arpl
dec
adc
mov
xchg
sti
sub
inc
dec
dec
sti
mov
fisubrs
loope
jl
sub
insb
sbb
mov
pop
lret
inc
mov
cmp
push
mov
or
adc
mov
lods
jmp
pop
xchg
push
test
in
adc
sbb
mov
sahf
mov
ficoml
pop
dec
aad
imul
stos
jae
mov
outsl
sub
xchg
fstpl
sbb
mov
push
and
das
mov
repnz
insl
cs
cmpsl
mov
pop
ds
adc
cs
leave
mov
pop
movsl
sbb
xchg
adc
push
lcall
jmp
sbb
sbb
rcr
in
adc
adc
or
test
jmp
xorb
aad
sub
push
cld
mov
jp
xchg
cltd
les
or
adc
push
push
mov
jecxz
pop
xor
xchg
mov
and
sub
ds
mov
pop
fildll
pop
cltd
nop
test
icebp
mov
push
dec
ja
loopne
xchg
int3
pop
imul
xchg
subb
add
fidivrs
leave
push
sti
fldenv
data16
pop
xlat
aam
out
insb
mov
pop
mov
fldl
and
stc
sti
jmp
jle
adc
or
xchg
mov
enter
outsb
mov
ja
inc
bound
aam
mov
mov
or
or
ds
xchg
and
jbe
aas
adc
xchg
dec
jg
cmp
test
mov
adc
mov
or
jne
xchg
pop
jae
pop
shrl
aam
pop
in
dec
nop
xchg
mul
xchg
cmp
cmp
jbe
pop
mov
push
xchg
jmp
jg
or
and
lock
push
call
insl
pop
xor
test
aaa
pop
cmc
mov
out
adc
scas
mov
fidivs
sarb
fxam
cmpsb
dec
int3
jmp
sub
je
insb
movsb
and
cmpsb
xchg
lods
pop
imul
or
push
sti
adc
aas
cmp
pop
push
es
fs
das
hlt
dec
mov
push
cmp
mov
shlb
mov
outsb
lock
jge
mov
xor
rcll
pop
cmp
sub
pop
loopne
adc
frstor
cmpsb
call
enter
mov
je
adc
xchg
add
and
pop
fldt
cmp
xchg
in
shl
jp
je
scas
sub
stos
loop
sbb
fnstcw
xchg
ljmp
rcll
je
cmp
aam
fsubs
std
rclb
or
pop
movsb
ljmp
and
xchg
pop
xchg
or
arpl
push
mov
mov
and
cs
in
cmp
dec
movsb
sbb
pusha
mov
mov
ret
shll
mov
cmp
jmp
adc
test
cmp
sbb
pop
arpl
inc
testb
insl
data16
jns
ja
mov
test
stos
repz
ljmp
test
out
push
adc
sbb
lock
mov
mov
int3
push
stc
hlt
inc
push
aam
repnz
sbb
mov
add
in
mov
fiadds
sub
mov
enter
in
mov
jmp
sarb
ss
pop
mov
mov
loop
rorb
cld
inc
push
inc
pop
mov
adc
xor
cmp
push
in
dec
outsb
pop
and
cmpsl
mov
inc
sarl
lock
test
push
sbb
pop
mov
fstpl
mov
mov
sahf
inc
mov
dec
jp
jge
lret
inc
dec
clc
xchg
cwtl
fstpl
lea
cmc
rorb
jg
inc
xchg
cmpsb
rolb
or
stc
mov
dec
jge
cmp
dec
jmp
jle
icebp
jecxz
and
adc
adc
imul
lods
fdivl
adc
stos
mov
push
lds
inc
inc
add
insb
sahf
mov
mov
sub
push
and
mov
sbb
xchg
or
cmp
mov
mov
outsl
jo
cld
rolb
jns
pop
push
ds
shrl
pop
pusha
lahf
jo
scas
ja
lds
scas
cmp
sbb
jnp
xor
dec
push
int
sub
mov
inc
test
jne
jnp
sbb
out
pop
mov
adc
orl
fsts
lea
icebp
pusha
out
pop
popf
mov
mov
movsb
mov
and
mov
movsb
xchg
lcall
add
pop
stos
sub
sub
les
jnp
imul
pusha
ret
in
outsb
mov
xchg
divl
adc
lods
in
xor
out
push
mov
addl
loopew
nop
aad
pusha
jg
aam
cmp
xchg
outsl
mov
cs
gs
jecxz
dec
aas
aas
test
xchg
and
add
inc
stos
cmp
xlat
xlat
ds
dec
sub
int
mov
js
in
jge
xchg
in
ret
mov
or
mov
cmpb
repnz
divl
cmp
and
lret
inc
in
dec
sub
or
ret
insl
and
xchg
insl
pop
in
and
sub
in
jo
roll
inc
out
sarl
lahf
rcr
fwait
jge
aas
add
fmuls
daa
loop
ficoml
cld
lahf
adc
fstpt
rolb
add
lret
mov
decb
and
push
dec
push
sbb
jp
adc
leave
les
xor
rclb
jg
mov
xchg
aas
xor
xor
push
and
cmp
jbe
cmp
dec
into
testl
dec
mov
scas
and
lret
test
scas
xor
add
imul
mov
dec
enter
pop
xor
mov
das
loope
mov
mov
push
imul
andb
pop
jmp
insb
dec
jg
xor
outsb
pop
mov
sahf
xchg
xchg
or
insl
push
mov
jbe
add
inc
leave
ja
int
add
cmc
sarl
out
shlb
pop
xor
pop
inc
pop
in
test
jae
enter
sbb
cli
cmp
fnstcw
imul
jae
loopne
pop
js
pop
nop/reserved
in
shll
xchg
outsb
int3
aam
in
or
dec
stos
push
cmc
gs
dec
std
adc
jecxz
push
push
adc
add
adcb
dec
psadbw
int
mov
inc
es
jl
add
cmpsb
cmp
daa
xchg
popf
lcall
rolb
mov
es
ds
add
jmp
nop
mov
xor
jae
adc
inc
push
mov
ret
mov
and
pop
sti
or
cmpsb
es
add
or
stos
mov
fcompl
hlt
inc
mov
arpl
mov
cmpsb
dec
sarb
adc
jg
sub
mov
ds
xchg
sahf
xchg
sub
loop
and
fwait
dec
cwtl
leave
jo
shll
sbb
cld
inc
mov
inc
mov
fstpt
das
in
and
mov
and
adc
jmp
ret
sbb
stc
push
mov
sbb
out
jle
pop
xor
addr16
xchg
rcrl
and
xor
mov
or
and
loope
test
dec
fwait
cltd
pusha
pop
jp
stos
pop
loope
sbbl
stc
xor
add
or
int
and
out
jge
out
jae
push
or
neg
mov
enter
jnp
cmp
cmp
aam
mov
mov
and
xchg
hlt
sub
sub
jae
cmpsl
loopne
imul
cli
in
and
lahf
and
mov
arpl
and
stos
sbb
jp
xor
and
mov
sub
fwait
pop
mov
clc
out
cmp
mov
fildll
lods
xchg
push
pop
jbe
aad
push
mov
loop
cwtl
sarb
inc
mov
inc
push
adc
test
or
add
mov
and
and
pusha
push
aam
movsb
dec
outsl
sbb
lock
adc
lods
leave
and
cs
inc
sbbl
pop
loopne
out
mov
add
data16
sub
sbb
jmp
mov
sub
jge
inc
cli
shrb
xor
nop
push
sub
mov
test
cmp
scas
sbb
idivl
cmp
in
outsb
aad
int3
lret
inc
dec
xlat
jae
lds
pop
sahf
out
iret
fildl
mov
mov
lock
and
in
dec
jbe
and
mov
push
mov
xorb
imul
out
outsl
enter
dec
lret
sub
fnstcw
or
nopl
mov
add
mov
stc
push
dec
loop
test
sub
call
mov
push
in
stc
or
cwtl
mov
add
mov
push
call
sti
scas
daa
add
es
repnz
pop
lea
out
xor
pop
iret
ficoms
jne
scas
xor
negb
ljmp
js
and
pop
mov
addl
aad
mov
or
push
inc
jbe
in
inc
hlt
call
shll
pop
out
inc
sbb
cmp
rcll
mov
or
out
mov
test
cmc
ja
mov
leave
aaa
push
mov
jle
inc
scas
mov
jae
lock
pop
popf
adcl
xchg
sbb
or
pop
test
sub
fsubrl
mov
mov
aad
cmp
add
out
jo
scas
inc
cmp
or
adc
pop
dec
ret
les
mov
ret
movsl
lahf
or
mov
pop
addr16
in
notl
lea
dec
cmp
std
lds
jp
bswap
pop
in
fcmovne
mov
rcrb
and
pop
std
dec
sbb
xorb
lret
push
cmp
mov
cmp
out
jnp
dec
mov
cmp
scas
outsb
out
mov
adc
and
lds
addr16
jbe
inc
xor
sub
ljmp
xor
xchg
cmc
sbb
mov
jae
xchg
or
bound
pop
fs
sub
test
xchg
insl
fsts
lret
dec
lea
sbb
or
or
enter
pop
rclb
in
aas
rcrl
push
xchg
inc
or
lcall
sub
jmp
xlat
jmp
pusha
or
inc
push
push
fisttpll
add
mov
dec
jmp
xorl
imul
push
mov
mov
ds
ljmp
in
lods
les
mov
mov
pop
sbb
xor
cmp
in
daa
sub
adc
cwtl
xchg
xor
inc
lea
stos
popa
aad
xchg
loop
ftst
cmp
dec
int
iret
xchg
fldenv
push
add
std
and
js
adcb
pop
sbb
mov
mov
or
fidivrl
in
subb
sub
dec
jp
cmp
mov
adc
ret
pop
sub
and
push
je
lret
ja
cmc
cmp
lret
leave
addr16
insl
mov
subl
fs
bound
clc
test
mov
sbb
pop
xchg
sub
test
imul
arpl
xchg
iret
popf
jle
push
repnz
inc
sti
es
in
jp
adc
shlb
jmp
rorb
and
mov
jp
dec
inc
mov
mov
lock
in
lea
scas
dec
cmc
push
jns
pop
out
or
lahf
out
inc
add
cmp
jbe
js
icebp
push
cltd
sub
jns
push
popf
imul
adc
sar
pusha
rolb
sbb
pushl
sub
inc
cltd
cmc
ret
lods
aas
rorb
fsubr
xchg
mov
aam
inc
jne
pop
mov
adc
cmp
sbb
inc
subl
je
mov
mov
enter
adc
sar
add
popa
cmc
mov
sbb
loop
es
fcomp
mov
sbb
stos
and
push
jo
xchg
jb
sbb
push
out
lods
enter
pop
fcoml
out
movsl
sub
lea
push
mov
sbb
cmp
sub
add
stos
dec
das
cmp
mov
lahf
clc
pop
xor
xchg
mov
and
xchg
imul
mov
mov
nop
and
add
mov
xchg
pop
or
gs
jae
addr16
imul
test
loop
xor
nop
sahf
je
enter
fisubl
fdiv
xor
dec
add
or
adc
sbbb
xchg
mov
lcall
inc
es
cmp
fisttpl
sarb
in
push
mov
push
fwait
lahf
stos
mov
icebp
scas
cs
lcall
jb
pop
adc
push
dec
add
out
je
mov
adc
pop
or
pop
or
push
shr
in
adc
lret
or
addr16
adc
mov
xchg
xchg
insl
or
mov
sarb
popl
push
test
inc
mov
mov
mulb
inc
das
cltd
cmp
stos
push
fwait
push
inc
insb
push
mov
lret
pop
pop
dec
das
mov
sub
pusha
jge
add
sub
pop
mov
sub
out
aas
sbb
out
add
fdivl
stos
fldt
lret
pop
mov
imul
icebp
jbe
add
jb
cmpsb
mov
popf
loop
popa
ljmp
jmp
sub
enter
hlt
mov
fldl
ret
dec
fnstenv
pop
repnz
loope
test
ss
sub
addl
cmp
jno
jae
pop
es
xchg
and
sahf
sub
sbb
add
je
add
add
insl
shrb
lea
jnp
xchg
pop
movsl
jge
popa
sbb
add
std
int3
inc
loop
pop
dec
lods
cmp
call
pop
mov
aad
es
cmpsl
xor
cmp
push
in
ret
jp
mov
loopne
push
int
inc
mov
jne
int3
leave
clc
mov
rcr
jne
add
bound
test
shlb
pop
out
sub
das
push
sahf
jns
jmp
cmpb
inc
sub
mov
stos
sub
and
sbbb
clc
sub
inc
jmp
push
mov
and
aad
ret
jbe
rcrl
gs
add
test
add
aam
push
cltd
fiaddl
in
cmp
pmaddwd
ss
dec
sti
jb
rclb
push
mov
adc
dec
or
inc
orb
mov
push
mov
stos
in
xchg
sub
jg
in
or
cmpb
inc
mov
mov
push
push
dec
jl
pushf
lods
jmp
femms
mov
inc
xor
lret
jp
jno
sbb
sub
lahf
xchg
mov
movsl
mov
xchg
std
aam
and
push
jle
dec
out
or
jae
xor
out
add
xchg
jmp
loopne
bound
or
and
push
je
fidivl
scas
cmpsb
pop
jg
xchg
adc
repz
mov
std
out
pop
adc
mov
sub
lahf
xchg
dec
xchg
push
pop
xchg
mov
ja
mov
or
lock
ljmp
loope
adc
cmp
les
and
scas
mov
mov
mov
loopne
adc
adcl
inc
jmp
sti
cmp
xchg
jg
sbb
inc
aad
add
add
lret
add
mov
mov
mov
lcall
mov
shl
jge
mov
inc
leave
mov
jae
shll
xor
outsl
xor
sti
cmp
jle
test
sub
sub
adc
fwait
dec
mov
adc
in
scas
inc
aaa
xorb
in
adcl
in
into
add
jno
jp
pop
loop
js
test
inc
dec
mov
adc
hlt
mov
outsb
add
add
push
outsl
aas
mov
xchg
or
add
out
cs
std
outsl
imul
push
dec
imul
jno
outsl
add
lods
mov
movsb
sahf
dec
sbb
mov
lcall
fs
sub
outsl
sub
pop
jg
xchg
test
cmp
arpl
das
adc
push
sub
sbb
cmp
dec
push
addr16
out
sub
lods
inc
cmc
out
cld
pop
sti
cmp
mov
push
xor
int
dec
xchg
and
sti
imul
loop
fcmove
rcr
cmp
sbb
mov
push
push
sbb
sub
lods
lock
rolb
in
lret
or
in
lock
mov
int
push
mov
lret
mov
cmc
movsl
push
add
jl
out
mov
push
xor
test
test
rcr
stc
outsl
insl
sbbl
jbe
mov
rcrb
in
adc
stos
lcall
xlat
xchg
pop
fnstsw
ljmp
inc
mov
cwtl
cmpsb
mov
jmp
and
rclb
subl
push
dec
movsl
dec
sub
imul
in
pop
adcb
dec
in
push
dec
dec
push
sti
aam
cli
mov
mov
repnz
cmp
scas
or
aad
push
roll
cmc
fsubrl
pop
xor
ss
sub
mov
dec
jb
jg
in
sbb
mov
add
daa
cmpsl
mov
imul
pusha
add
out
out
cs
pop
jnp
push
sub
mov
cli
jne
es
xchg
sahf
fisttps
cmp
into
sbb
dec
aas
cmpsl
jne
adc
inc
enter
mov
mov
mov
test
sub
push
sub
mov
aaa
das
mov
push
gs
jb
fstps
sub
adc
and
sub
ds
into
sbb
dec
js
in
sbb
sahf
imull
repnz
lret
push
mov
stc
pop
stos
notb
aaa
xchg
std
std
push
data16
out
int
cld
adc
mov
lret
inc
rol
jo
stos
inc
mov
jae
mov
mov
repz
sub
push
mov
filds
jmp
jae
xor
sahf
sbb
jae
fwait
out
popa
cmp
shl
call
insb
pop
js
push
lahf
cltd
add
gs
add
es
push
cli
push
push
lock
jo
dec
in
ljmp
or
jle
add
lahf
loopne
sub
add
pusha
xchg
mov
dec
cmp
lahf
xchg
push
je
mov
gs
lea
push
mov
push
mov
dec
xchg
push
iret
lock
xor
adc
rcr
sub
rorb
inc
mov
lret
lret
test
pop
loope
cwtl
sbb
ret
loopne
out
add
lea
adc
out
imul
cmpl
cmc
out
mov
xchg
mov
mov
loop
shll
jo
adc
and
inc
outsb
mov
inc
test
push
ret
data16
pop
mov
adc
fs
mov
mov
lock
leave
sub
bound
data16
nop
push
ss
out
jl
outsb
mov
std
sub
jne
sahf
dec
inc
xor
clc
mov
cltd
jle
and
lock
push
repnz
cmpl
mov
movsb
xlat
sbb
pop
pop
adc
vmread
pop
icebp
sti
mov
and
pop
or
jbe
pop
scas
dec
in
hlt
lods
mov
xlat
sbb
insb
cmp
outsl
cld
imul
icebp
inc
inc
sbb
lcall
stc
jge
pop
push
inc
jecxz
add
and
sbb
adc
pusha
ficomps
sarb
cmc
or
insb
gs
pusha
stc
ljmp
in
mov
cli
pop
adc
addr16
mov
hlt
cld
mov
sub
jno
mov
mov
or
jb
clc
jae
jge
negb
jge
mov
inc
in
mov
sbb
shll
js
add
test
or
pop
pop
fistpll
popf
mov
imul
xchg
int
fnstenv
adc
loope
mov
in
mov
or
mov
sbb
inc
dec
add
mov
test
pop
dec
repz
stos
dec
pop
mov
inc
jae
cmp
movsl
push
inc
sub
dec
mov
pop
popf
negb
pop
mov
mov
xlat
mov
js
dec
sub
insl
dec
pop
and
ret
lds
dec
test
js
fmull
mov
inc
jnp
xlat
cwtl
inc
jle
data16
sub
dec
dec
jo
xchg
xor
and
xor
or
mov
xor
jno
push
fildll
mov
xor
fcoml
lds
cli
mov
ds
mov
inc
inc
out
nop
icebp
jno
ljmp
cmp
mov
sarb
bound
ss
insb
and
stos
enter
mov
cmp
sbb
out
movsl
fmull
or
cmp
ret
into
jne
mov
pusha
xchg
arpl
cmp
hlt
cmp
mov
push
and
add
xor
sub
and
mov
fidivrs
addr16
push
arpl
cmc
add
daa
xchg
std
pop
lret
push
adc
mov
sbb
repz
sub
js
leave
movsl
or
or
or
inc
call
loope
jecxz
adc
leave
sbb
ss
in
pop
add
push
movsb
mov
mov
mov
mov
push
jbe
scas
jno
push
mov
cli
imul
outsb
aas
ret
int3
push
dec
jle
test
or
push
iret
rcll
rcrb
and
sub
packuswb
popf
fs
mov
lahf
xchg
sbbl
jne
jo
popf
mov
lods
mov
inc
stos
cmpsl
xchg
cmp
ljmp
mov
sub
in
arpl
xchg
scas
repz
test
mov
sbb
arpl
pop
gs
imul
xor
leave
in
cwtl
insb
cmp
sbb
pop
fisubl
pop
orb
mov
jo
and
and
jp
test
into
pop
pop
in
and
popf
pop
push
pop
bound
cmp
mulb
mov
sub
push
jo
mov
out
scas
mov
cltd
ficomps
push
mov
or
inc
inc
xchg
add
sbb
pusha
enter
cli
xor
xor
pop
pop
stos
shll
sbb
dec
xor
sbb
push
or
sahf
arpl
and
mov
dec
sbb
mov
sbb
and
shl
mov
or
das
inc
loopne
imul
ret
popa
and
fxch
mov
mov
sub
int
or
lock
test
sub
adc
inc
lcall
lret
jecxz
push
or
and
ja
cltd
sub
xchg
jno
mov
ja
jle
je
hlt
fsubrl
jbe
lods
add
insl
das
rcrb
and
push
js
mov
jmp
inc
movsb
jbe
pop
ret
jecxz
push
fadd
or
lret
xlat
sbb
jne
sbb
sbb
icebp
into
fbld
arpl
dec
push
insb
repz
mov
inc
cmp
mov
ljmp
mov
test
notb
clc
mov
ret
int
or
sbb
bound
pop
inc
jno
jge
clc
xchg
stc
sub
and
jle
lods
mov
cmp
mov
jg
mov
dec
jbe
rol
repnz
sbbl
stos
and
sub
mov
das
mov
ss
cmp
aam
cmpsb
mov
fwait
mov
imul
movsl
insb
and
pop
add
push
sub
popf
cmpsb
and
decb
sbb
call
xor
fucomip
gs
fnstcw
fwait
popa
movb
or
pop
leave
sarl
mov
inc
sbb
jmp
cs
jge
rclb
inc
les
sbb
addr16
push
pop
sub
lahf
jg
adc
cmp
hlt
jnp
sbb
hlt
xor
jmp
stc
scas
stos
je
sti
adc
pop
fcomip
push
cli
jmp
xor
mov
aaa
cld
mov
aas
leave
jb
add
enter
jbe
rcrb
test
clc
mov
movsl
mov
push
push
and
int
fbstp
repz
adc
mov
es
push
rclb
and
test
xadd
movntq
out
mov
mov
push
dec
inc
movsb
mov
int
and
lcall
dec
and
adc
mov
sbb
mov
lcall
add
jl
dec
outsl
subl
dec
jne
imul
and
cmp
int3
rolb
inc
jb
dec
aas
rorl
jge
stos
mov
jb
mov
cmp
pop
push
pop
add
xchg
inc
mov
lcall
xchg
push
out
pop
jae
jge
jl
das
cli
jl
adc
repz
mov
jl
je
mov
cltd
out
mov
sbb
es
lds
popf
mov
pop
mov
inc
aaa
int3
or
lods
fidivs
jecxz
or
lcall
or
cmp
jl
in
fisttpl
xor
lret
dec
sbb
sub
lods
hlt
fadds
mov
loopne
mov
sbb
push
jae
loopne
inc
pushl
ja
jmp
push
add
xor
fisubrl
add
pop
dec
and
push
adc
xchg
inc
nop
inc
daa
ror
sbb
inc
adc
mov
aad
mov
mov
dec
notb
add
shl
aad
jno
mov
std
lahf
stc
repz
cltd
bound
fldt
pop
shlb
scas
xchg
sarb
loop
jnp
mov
cmp
int
cmpl
cld
fsubrs
mov
orl
mov
divps
fldt
addr16
pop
gs
sbb
loop
scas
jp
testl
stc
push
addr16
leave
and
dec
or
lods
mov
lods
mov
xor
pop
popl
pop
subb
not
adc
lretw
xchg
push
dec
sub
movsb
push
and
fistl
inc
dec
sub
cmp
rorb
cmpsb
dec
xchg
mov
cmpsb
adc
sub
sahf
mov
stos
mov
out
cmp
and
mov
in
push
shll
rcr
inc
cmc
adc
mov
lahf
rcrb
pop
add
loope
jns
or
add
fnstcw
add
pusha
mov
outsl
ficoms
loop
loope
mov
aas
shll
pop
add
mov
mov
push
iret
and
push
out
scas
sbb
cmp
push
dec
out
stc
and
imul
loope
dec
xor
add
push
sub
pop
jno
cmp
shrl
inc
enter
and
jmp
lahf
dec
or
movsl
cmp
adc
fwait
ret
popa
cmpsl
mov
mov
cmp
sbb
xchg
sbb
clc
inc
xor
mov
push
pop
stos
iret
and
sbb
jg
add
xchg
dec
xor
sub
insl
adc
shrl
cmpsl
ljmp
sti
das
je
nop
stc
lahf
push
mov
testl
add
test
rcrl
pop
movsb
lds
jecxz
mov
not
lcall
aas
mov
popa
ds
mov
cmp
popl
lcall
imul
into
and
mov
mov
outsl
lock
mov
push
loopne
popa
fnstsw
mov
inc
lcall
stos
daa
adc
orl
mull
gs
jo
lret
push
mov
sbb
pop
jne
sub
or
xchg
sbb
mov
mov
ss
nop
incl
cmp
fistpll
or
mov
repnz
mov
jge
inc
jbe
andb
scas
pop
lods
mov
lret
mov
lcall
push
rolb
dec
stc
xor
pop
repnz
sub
gs
add
stos
je
daa
movsb
jbe
std
mov
js
loopne
adc
mov
mov
xchg
cwtl
jb
dec
mull
inc
mov
push
lcall
rcrl
iret
je
mov
inc
xor
popf
mov
sbb
xchg
adcb
mov
sbb
inc
cmpb
push
int
rcrb
pop
in
cmpsb
cmpl
xor
inc
sub
pop
dec
flds
pop
rorl
mov
or
adc
push
dec
into
ds
lret
xor
js
xchg
push
inc
jae
test
adc
lahf
mov
pop
adc
inc
xor
cmp
dec
daa
cmpsl
insb
es
stc
bound
pop
ljmp
pushl
movsb
push
test
pop
stc
dec
xchg
outsl
pop
outsl
add
pushf
decb
out
shl
das
ror
daa
dec
pop
lds
int3
imul
push
loopne
cwtl
mov
xor
and
jae
add
je
movsl
mov
in
add
or
mov
lods
jnp
add
lods
push
adc
rorl
mov
outsb
push
jne
inc
and
out
adc
mov
in
pusha
xchg
inc
das
jae
add
cltd
dec
sbb
loop
pop
rcr
je
xchg
lret
rorb
in
adc
or
and
pop
xchg
ds
das
sub
xchg
xchg
pushf
lds
cltd
xor
jne
cld
leave
orl
add
test
je
cld
out
cmpb
cmp
xchg
jmp
ljmp
jnp
dec
shlb
lahf
mov
into
pushf
mov
mov
lret
sbb
dec
push
vphaddwq
or
fs
xor
fld
fs
mov
movsb
jle
mov
mov
inc
popf
dec
pusha
sub
xchg
and
lock
push
inc
mov
or
mov
lods
mov
inc
cmpsl
aam
jl
sbb
cmc
faddl
jae
xchg
in
xchg
mov
daa
out
and
mov
jge
addr16
insl
repnz
stc
popa
das
pushf
scas
fldenv
sbb
cmpsl
lret
push
int
mov
fwait
daa
mov
mov
adc
insl
dec
ficoml
cmpsl
jecxz
popf
dec
mov
addr16
cltd
pop
inc
es
addr16
ds
jns
loope
mov
inc
cmp
pop
lret
popf
aas
pop
imul
insb
sbb
test
cmp
xor
rolb
rolb
jo
adc
inc
xchg
xchg
jg
daa
out
mov
dec
pushf
jno
aad
fadds
add
pop
cmp
push
daa
je
push
hlt
mov
inc
test
fsubrl
cmpsb
les
push
xchg
sub
das
mov
pop
movsb
insb
aam
mov
mov
jl
in
dec
ss
nop
dec
stos
mov
pop
push
aas
jnp
cmpsl
out
cmp
scas
fadd
xchg
inc
and
mov
inc
xchg
clc
pushl
arpl
sbb
mov
loop
js
cmp
das
fbstp
rol
jl
mov
in
jecxz
xor
add
jno
mov
push
nop
pop
pop
pop
push
dec
test
test
cmp
push
jb
xchg
jmp
add
fisttpll
inc
in
call
imul
repnz
fsts
push
inc
jge
xchg
dec
stos
sub
out
stos
test
int3
mov
scas
add
ficompl
shrl
ret
out
mov
xchg
mov
loopne
dec
pop
xorb
xchg
jmp
mov
ja
add
add
loope
sbb
fdivl
arpl
aad
push
xchg
mov
idivl
push
cli
leave
jno
xchg
jb
mov
lods
shlb
js
insl
sub
or
xor
and
add
mov
inc
xor
mov
sub
jge
and
mov
mov
ss
cmp
add
xor
add
or
and
ss
scas
pushf
inc
adc
mov
sbb
pop
cmc
mov
push
adc
inc
xor
lods
push
js
ja
xchg
in
outsb
loop
cltd
into
pop
or
sub
xchg
mov
pmulhw
mov
dec
push
insl
movsl
and
lahf
je
pusha
jnp
dec
push
pusha
push
sarl
jnp
nop
or
pop
sarl
imulb
stc
jle
mov
and
push
dec
leave
jbe
test
xchg
dec
jg
mov
mov
or
jo
adc
jecxz
in
jbe
xchg
movaps
jo
stc
sbb
inc
loope
addr16
arpl
fsubrs
push
in
or
mov
lds
inc
mov
outsl
out
sub
or
xor
popf
cli
test
adc
xchg
movl
sub
cs
bnd
jmp
lods
out
out
fadds
sbb
or
xchg
stos
icebp
insl
inc
mov
sbb
cmp
dec
jle
dec
loop
mov
push
inc
mov
inc
shrl
les
loopne
wrmsr
mov
push
adc
dec
in
pop
mov
xchg
hlt
bnd
add
mov
pop
or
outsl
loope
or
lret
clc
shlb
inc
cmc
inc
pushf
enter
xchg
pop
sbb
repz
inc
stos
sub
arpl
adcl
dec
jge
sbb
jb
mov
fidivs
mov
jo
movsb
or
xor
jle,pt
sub
adc
je
mov
pop
mov
call
adc
sub
cmp
repz
cmpb
or
divb
sub
cmc
xor
jg
inc
fidivs
movsb
stos
mov
aas
inc
push
incl
hlt
roll
and
pop
iret
jmp
dec
add
pop
cmpsl
subl
push
jb
mov
imul
pop
add
inc
aaa
jl
pop
fs
mov
pop
jo
cmpsl
fisubl
cli
call
push
js
cmp
mov
jnp
adc
mov
ja
push
mov
push
add
sbb
push
std
jno
ljmp
popf
mov
xchg
fwait
repz
std
loope
push
push
nop
fstps
mov
mov
mov
inc
sti
push
xchg
lock
sub
inc
stos
fwait
testb
xor
push
jmp
aad
adc
clc
lods
push
cmc
push
rolb
push
jl
mov
push
mov
add
adc
jle
inc
push
or
lea
jns
or
mov
ret
lea
jbe
jne
jbe
xor
int3
dec
jae
dec
scas
sbb
mov
mov
ds
scas
js
stos
sbbb
cltd
cltd
mov
mov
data16
pop
adc
sbb
cmp
pop
insb
and
jge
pop
jp
push
xlat
add
mov
fildl
mov
es
or
xchg
stos
sbb
push
mov
cmpsb
cmp
roll
cmc
incl
xchg
pop
mov
jno
fsubrl
cmp
cmc
push
or
std
pop
or
rcrb
dec
jne
add
mov
or
adc
mov
push
cld
scas
scas
imul
sub
sub
rcrb
or
lods
ss
sbb
test
jmp
cmpsl
xor
insl
cmc
cmp
sub
clc
adc
shll
jle
pusha
sbb
scas
fs
adc
jno
je
in
aas
inc
xchg
xor
sub
fisubs
jl
xchg
popa
aaa
mov
dec
fisubl
insl
or
addb
ficomps
pop
mov
insl
fidivs
rorl
scas
popf
hlt
jge
out
add
je
nop
adc
lock
inc
mov
jb
sbb
pop
lods
lahf
pop
pushf
and
push
fisttpl
aad
or
xchg
mov
jmp
xor
data16
lods
push
pop
aam
push
out
jle
add
fidivl
cs
sbb
sbb
and
dec
shrl
fdivl
in
jl
jb
push
es
hlt
sbb
mov
je
or
jo
xchg
adc
fsubr
fxch
xchg
lock
call
fwait
or
sub
or
popf
dec
fs
pop
cli
mov
xchg
andl
stos
jg
loope
ret
dec
mov
icebp
push
movsb
insb
imul
xor
or
test
dec
sbb
out
cmp
and
lods
xor
xchg
jns
cli
repnz
aaa
shrb
pop
inc
jo
mov
jne
add
add
add
mov
stos
popf
sub
nop
and
popf
sbb
scas
test
imull
pop
aaa
cmp
ljmp
std
icebp
mov
lea
and
sbbl
jp
int
adc
jno
test
test
ds
or
sub
pop
or
add
cmp
mov
fsubl
add
imul
popa
xchg
adc
repnz
adc
outsl
loope
inc
out
or
leave
ds
jae
lcall
incb
dec
dec
popa
fildll
dec
lahf
add
mov
mov
xchg
mov
lock
add
stos
mov
push
clc
dec
insb
xor
add
fstl
pop
fimuls
test
jg
inc
sbb
inc
out
iret
sahf
sahf
push
add
mov
xchg
insb
aam
adc
jnp
cmp
mov
aaa
leave
mov
into
nop
mov
fwait
movsb
and
insb
movsb
or
mov
dec
sub
mov
imul
jl
cltd
lret
out
or
lret
inc
rclb
shll
pop
and
push
mov
aad
jmp
ret
repz
jecxz
sub
xchg
jb
mov
jp
in
dec
mov
aad
rolb
int3
dec
jge
pop
mov
ret
fs
std
enter
mov
jg
pop
sub
dec
mov
jge
jecxz
sahf
fwait
aas
pop
lcall
mov
xchg
in
xchg
jb
outsl
push
outsb
dec
xchg
lret
fstpt
jno
hlt
ss
insl
std
xor
shl
mov
js
push
loop
push
enter
cs
xchg
fmuls
and
or
add
push
lret
add
ret
lahf
out
mov
shlb
push
push
mov
test
pop
mov
add
pop
aas
or
sarb
and
bound
mov
jmp
ret
js
daa
testl
or
sbb
jb
lods
adc
xor
dec
into
fs
mov
cmp
test
and
inc
sbb
pop
dec
jge
clc
gs
mov
mov
add
data16
or
loopne
scas
enter
insb
leave
mov
pop
xchg
push
or
sbb
push
push
adc
out
es
aad
sti
pop
call
xor
mov
lahf
stos
dec
pop
or
sbb
and
lods
dec
dec
sarl
sahf
push
and
or
mov
cltd
daa
add
test
int3
fstpt
ror
cmc
push
sbb
sahf
arpl
adc
aad
out
push
xor
jmp
sbb
lret
arpl
loope,pt
or
sub
popa
fnstsw
pop
mov
or
pop
ds
sbb
cmpsb
sidtl
jmp
ret
es
scas
pop
push
or
ss
pusha
mov
je
mov
in
outsl
int3
adc
daa
bound
xor
adc
and
dec
mov
movsb
js
mull
subb
loope
fldcw
lods
loopne
mov
push
je
pop
out
jl
cltd
sbb
xchg
push
fs
shlb
ds
xor
mov
dec
out
pop
sbb
repnz
test
iret
xchg
les
ficoml
jmp
sbb
mov
adc
xchg
adc
dec
xchg
in
xchg
lds
sbb
cmp
mov
stos
add
rolb
dec
inc
mov
gs
push
adc
es
mov
stos
in
out
loop
xchg
lea
inc
out
aad
shrb
pop
sub
jp
mov
repnz
sub
cmpsb
or
mov
bound
lea
lds
adc
aaa
cmp
jg
xchg
enter
push
jl
push
xor
ja
test
push
pop
lods
leave
adc
rcll
add
cmpb
outsb
out
outsl
lds
mov
insl
iret
add
lahf
pushf
mov
mov
or
scas
dec
loop
dec
cs
push
xor
cmp
sti
cld
push
push
mov
add
vmovhpd
inc
daa
inc
xor
dec
mov
push
aam
add
mov
adc
push
jg
int3
mov
aas
rcll
inc
jmp
sub
mov
dec
dec
and
sti
data16
pushf
ret
pusha
mov
cmp
lock
scas
mov
aaa
fdivrp
lcall
xorb
add
mov
loop
test
inc
xchg
inc
push
notl
insb
push
lret
fdivl
rcrl
gs
sbb
push
decl
cmpsb
jp
adc
lods
fnsave
adc
and
xor
es
sub
mov
push
adc
sbb
loopne
mov
sub
and
cmpsb
pop
and
push
and
inc
clc
fsts
data16
fldt
pop
loope
jecxz
or
pop
aam
adc
lods
push
movl
or
dec
int3
jns
dec
push
ljmp
xchg
xchg
mov
pop
pushf
or
add
or
lock
add
adc
fmul
int
mov
xchg
push
sub
fidivrs
mov
mov
repz
out
into
nop
insb
or
add
dec
nop
adc
nop
jge
arpl
xor
push
sub
inc
shr
and
pop
mov
push
push
mov
out
adcb
int3
daa
iret
pop
outsl
in
rorb
adc
push
dec
lods
sub
popf
imul
jne
push
sbb
int
add
xchg
in
xlat
dec
and
and
jl
sbb
adc
in
add
std
dec
dec
xlat
push
inc
ds
mov
and
xor
and
pop
and
arpl
adc
push
xchg
sub
lcall
fisubrl
fdivr
in
sbb
inc
sbb
imul
mov
imul
push
in
pop
lds
add
jecxz
jl
lret
xorb
arpl
aad
xor
gs
in
es
cmp
xchg
xor
test
into
rorb
adc
enter
scas
mov
jne
push
pop
jno
sub
xchg
push
cld
cmc
mov
push
in
push
mov
inc
mov
das
mov
cmpsb
int
out
sub
adc
xor
dec
roll
sbb
ja
les
testl
cwtl
push
ja
cmpl
leave
es
into
lahf
test
push
inc
pop
and
addr16
push
pop
flds
xlat
test
pop
mov
sub
inc
xchg
lods
xor
push
es
cmc
xchg
in
andb
daa
mov
mov
mov
dec
mov
push
jae
ffreep
or
add
add
xlat
lret
cli
arpl
in
mov
sbb
cmpsl
loope
repnz
sar
fucom
inc
dec
xchg
outsb
cmpsb
pop
repnz
inc
add
push
and
or
stos
loope
mov
rcrb
cmc
sub
insl
out
inc
and
mov
insb
fiadds
mov
dec
inc
add
mov
ret
inc
xchg
jno
mov
dec
push
fcomps
lock
insl
lock
cmc
and
stos
mov
popa
sbb
xlat
inc
or
sub
test
jb
inc
lret
fcmovbe
xor
fdivl
cmpsl
mov
mov
mov
adc
repz
dec
sbb
pop
stc
jl
es
lock
dec
add
aas
divb
and
and
cld
inc
loop
cmpsl
mov
push
cmpsb
pop
cmp
clc
xchg
call
lods
mov
mov
or
xor
push
fsubs
arpl
inc
addr16
pushf
push
mov
stos
mov
lea
cs
shr
mov
adc
add
mov
clc
pop
xor
and
push
sbb
dec
inc
cltd
fcmovbe
imul
and
add
in
xchg
adc
sub
mov
jb
das
and
mov
fsts
test
test
fisubl
scas
adc
leave
inc
xor
adc
out
lcall
stos
test
cmp
and
inc
fstl
ret
sub
cmpb
out
pop
or
dec
and
in
push
sub
sub
fadd
es
pusha
and
repz
add
je
adc
je
adc
and
push
dec
fbstp
mov
xchg
and
outsb
pop
cmpsl
sbb
jmp
ljmp
mov
mov
cmp
scas
xchg
stc
jecxz
fstpt
cmc
popa
xchg
pop
adc
dec
test
mov
iret
mov
mov
out
outsl
mov
jp
pop
jae
movsb
fsubr
cltd
push
push
xchg
mov
movsl
mov
mov
lea
jnp
in
cmp
sbb
in
scas
mov
ds
cwtl
adc
std
pushf
inc
ljmp
pop
dec
int3
stc
sub
push
pop
js
cltd
inc
loop
icebp
lock
and
cmp
and
pusha
push
push
push
push
sub
scas
add
ror
dec
fisubl
out
pushf
sub
aad
mov
sub
mov
jnp
lds
mov
add
mov
mov
pop
lods
je
fistps
mov
xchg
data16
jle
ds
mov
mov
xchg
jmp
mov
sub
leave
jb
lods
add
adc
mov
test
call
jmp
jg
dec
arpl
out
cwtl
or
ss
xlat
je
jo
into
clc
jl
adc
cmp
jl
xlat
add
testl
adc
sbb
mov
pusha
aad
inc
dec
pop
jne
rol
sbb
push
lcall
lret
sbb
das
cmp
inc
dec
cld
mov
je
ret
repnz
out
xlat
mov
push
cli
stos
sbb
mov
daa
outsl
mov
and
cmp
or
ljmp
lods
inc
cli
sahf
adc
sub
test
in
outsl
mov
jb
or
hlt
xchg
cmpsl
out
imul
dec
out
andl
and
cmc
in
mov
ret
lret
pusha
les
jl
fs
lods
imul
daa
mov
mov
je
jno
in
nop
push
push
fimuls
xchg
sarl
aad
jbe
pop
in
sbbb
xchg
stos
inc
adc
nop
pop
xchg
cmp
out
into
sub
pop
test
fistpl
inc
inc
mov
or
cld
mov
bound
outsb
xor
mov
enter
enter
sahf
and
push
mov
sbb
adc
pop
sbb
cld
jecxz
std
or
mov
les
leave
dec
fisttpl
lret
int
push
xchg
daa
sbb
lcall
add
adc
ja
push
mov
insb
pop
mov
cmp
fstpl
cli
dec
cmp
adc
loopne
cmpsb
ret
push
lea
mov
mov
in
jno
sbb
jb
and
imul
inc
sbb
ret
aas
add
cmp
outsl
scas
repnz
inc
pop
fsubrs
push
mov
xchg
shrb
jg
stos
push
movsb
fcmovu
pop
xchg
pop
rcl
pop
xchg
mov
mov
stc
int
sub
in
in
mov
out
sub
mov
stos
or
pusha
dec
cli
add
xor
xchg
in
adc
mov
sub
cs
lock
cmp
insl
cltd
outsl
shlb
pop
add
outsb
pop
test
roll
dec
xor
cmp
ret
xchg
ficompl
inc
jns
mov
xor
jns
push
inc
aas
push
cmpsb
mov
fdivl
add
addr16
dec
bound
orb
aad
inc
push
scas
gs
or
in
xchg
jb
jmp
xor
cld
cltd
rep
imul
es
popa
repnz
out
sub
scas
in
testb
push
jmp
or
cmp
int
or
pusha
movsb
xchg
stc
jo
aam
repz
sbb
add
and
jmp
add
clc
pop
jg
add
negl
lret
lods
xchg
mov
jnp,pn
int
mov
repz
test
cmp
sahf
fsubs
inc
sarb
cmp
jecxz
aam
je
movsb
int3
inc
lods
cmc
test
cmpsl
and
mov
imul
lods
mov
jmp
jl
xor
dec
xchg
movsb
inc
js
add
lea
jne
dec
mov
adc
jge
cmc
arpl
fwait
jle
mov
lock
dec
pushf
pop
cmp
sub
lret
aaa
movsl
xchg
in
inc
mov
cmp
mov
mov
inc
or
sbb
ss
cmpsl
fistpl
xor
xor
inc
les
hlt
lods
xor
cmp
push
adc
insb
aas
mov
out
mov
shl
xorb
dec
jne
ljmp
shrl
jl
dec
test
dec
dec
cmpsl
std
repz
mov
lods
push
sub
jo
mov
sahf
mov
push
push
cmp
inc
push
fs
sub
lcall
sbb
jecxz
test
in
pushf
adc
jbe
pusha
je
jnp
lcall
lock
pop
adc
pop
ljmp
push
lods
shrl
xchg
scas
push
lcall
sbb
adc
cmc
mov
dec
lds
into
fisttps
daa
hlt
push
imulb
add
xchg
dec
std
aaa
sub
stos
lahf
mov
push
sbb
movsb
mov
lret
push
xchg
pop
jge
inc
cltd
jbe
push
mov
push
cmp
imul
movsl
or
stc
add
sbb
fstp
jp
in
divl
mov
inc
or
nop
jne
stos
ss
dec
jbe
hlt
dec
or
out
jb
mov
sbb
loopne
inc
and
sub
jl
xchg
pop
mov
jl
dec
jo
loope
sub
inc
lret
idivl
mov
jb
enter
mov
dec
inc
ja
and
into
jmp
jo
mov
sbb
negl
cs
test
test
fs
fcmove
fbld
ret
adc
and
xchg
fmul
fstl
rorb
xchg
outsb
notl
push
cmp
inc
mov
pushl
adc
push
arpl
daa
mov
lock
sbb
pop
gs
mov
cmp
test
cli
jae
dec
sbb
mul
sbb
fwait
clc
fiadds
sbb
test
icebp
push
cmc
cmpsl
jnp
int
call
cld
adc
push
mov
movsb
mov
ret
inc
jmp
inc
and
fadds
cld
add
stos
add
cmpsb
lcall
cmp
fidivs
sub
lods
out
or
test
jbe
enter
fisttpll
loopne
dec
es
xchg
adc
bound
push
test
divl
lds
int3
adc
insb
inc
mov
dec
test
pcmpeqd
dec
xchg
bound
or
fidivl
test
mov
ret
and
jp
cmp
push
xchg
xor
addb
dec
mov
cmp
test
cmpl
enter
xlat
stos
outsb
xchg
into
jle
jl
xor
scas
clc
in
xchg
push
outsb
jge
add
int
pop
clc
lahf
sub
pop
jno
mov
xor
mov
fcoms
sbb
rclb
aam
pop
fdivl
inc
xchg
mov
jne
cmp
cmp
gs
adc
gs
clc
push
fistps
adc
pop
rcll
sbb
sub
mov
xchg
xor
mov
push
fs
cmc
mov
pop
lcall
rorl
in
push
scas
cmp
bound
xchg
cld
test
rolb
jecxz
mov
popa
out
dec
xchg
mov
adc
pop
or
shll
icebp
cmp
jbe
inc
scas
pop
sbb
std
jecxz
sbb
pushf
mov
adc
xor
cmp
cmp
cmpsb
aaa
js
sti
pop
stc
sub
xor
nop
jle
or
fmull
add
notb
mov
lea
das
pop
mov
cmp
movsb
int
dec
xchg
inc
lock
in
xchg
lds
in
stc
and
jno
test
mov
in
xchg
mov
or
push
push
pop
mov
divb
mov
sub
fmuls
adc
cmpsb
xor
test
divl
les
cmp
sbb
in
sbb
rcll
imul
mov
xchg
insl
jb
cmp
mov
pop
scas
inc
jmp
xchg
xor
mov
jo
fstps
loop
cmp
arpl
cmp
xchg
hlt
push
cli
add
les
movsl
cmp
push
sbb
add
cmc
xor
shlb
repnz
xor
fdivrp
and
pop
cltd
add
stos
hlt
mov
shlb
jns
lods
pop
jle
repnz
xor
push
mov
fiaddl
in
and
sub
inc
sahf
mov
jb
jb
mov
xor
mov
jmp
scas
fdivl
mov
fists
push
jnp
ljmp
mov
lea
inc
popf
jnp
mov
add
stos
inc
jl
mov
lret
lods
add
mov
mov
ret
bound
mov
fs
sub
push
ss
mov
lret
xchg
pop
ss
bound
mov
pushf
pop
mov
loope
mov
insb
mov
ja
pop
jne
mov
and
mov
aad
sbb
mov
daa
cmpsl
jnp
icebp
sbb
lea
xor
rorl
add
insl
loope
dec
push
aaa
in
in
add
pop
bound
jo
xchg
cmp
push
mov
pop
es
sarb
sti
repz
sbb
jns
cld
mov
sbb
jno
lea
cmp
stos
es
fimuls
jno
fs
sub
mov
push
jae
stc
jl
jbe
adc
mov
iret
pop
jae
inc
or
pop
dec
out
push
enter
sub
jle
fcmovbe
std
mov
mov
push
and
int3
shlb
jp
xor
lcall
mov
dec
cmp
gs
dec
adc
pusha
out
dec
ja
fadds
dec
pop
xor
lds
shrb
jae
call
add
pusha
lcall
lock
inc
sbb
push
mov
sbb
push
loop
mov
push
inc
mov
sbb
push
mov
movsl
jo
roll
sbb
xchg
mov
cmp
ret
push
lahf
arpl
cmpsb
or
in
or
stos
pop
mov
sub
add
lds
pop
fwait
mov
arpl
inc
mov
outsb
clc
push
mov
mov
pop
pop
xchg
sbb
mov
inc
sub
inc
mov
mov
aad
dec
and
in
dec
aad
and
pop
dec
xchg
and
jo
xchg
in
mov
mov
pop
xor
xchg
lods
ss
ficoms
test
test
inc
xor
xor
js
aas
and
xor
aaa
fwait
scas
dec
out
into
xor
mov
adc
xchg
add
or
xor
pop
pop
push
pushf
popf
push
data16
out
mov
test
adc
decl
pop
lods
jns
adc
insb
inc
push
pop
or
fwait
test
mov
pop
inc
jbe
shlb
and
mov
aas
jns
stc
push
push
sub
adc
push
push
pop
pop
loopne
mov
mov
or
sub
mov
clc
adc
cmpb
cwtl
push
sahf
mov
in
xlat
sub
pop
mov
sub
jno
push
adc
into
sub
into
out
inc
into
xchg
mov
xor
cwtl
es
cmp
xchg
mov
imul
out
cmc
fdivrl
sbb
sysenter
insb
fwait
mov
xchg
and
mov
and
shl
in
fwait
jae
in
pop
cmp
sub
or
dec
jae
add
and
jl
sbb
jae
insb
jbe
mov
pop
cwtl
push
sbb
xorl
add
or
adc
loope
aad
pop
mov
and
clc
jne
jg
xchg
test
outsb
push
add
test
es
jbe
sub
push
pop
mov
repz
or
sarb
cwtl
inc
fidivs
push
push
inc
mov
into
rol
nop
push
xor
jbe
xchg
mov
jbe
adc
idivb
mov
gs
push
xor
adc
lahf
inc
mov
sub
sti
loop
popf
inc
push
adc
xchg
sub
lret
jge
jmp
cmp
es
jle
jle
cmp
fcomip
scas
je
in
scas
fcompl
fisubrs
xchg
sub
cmpl
rolb
xchg
push
push
cld
inc
sti
mov
repnz
out
cmp
rcrl
mov
xchg
lods
cltd
cmp
lcall
adc
scas
loope
ret
dec
mov
jbe
xor
mov
repnz
pop
pop
push
push
push
in
xchg
fstpt
mov
pop
or
inc
repz
into
add
bound
fwait
xlat
jecxz
mov
xchg
cmc
jne
loope
pop
sub
mov
pop
xor
scas
js
xlat
pop
shlb
dec
push
jp
imul
les
scas
repnz
push
aad
movsb
cmp
jno
fidivs
jnp
out
movsb
es
das
jg
cmp
xor
cmp
jbe
and
sub
cmpsb
and
add
pop
xchg
sbb
lock
inc
mov
lods
ljmp
stc
adc
sbb
mov
call
or
cmp
insb
dec
daa
dec
rcr
sbb
sub
lret
jae
movsb
pop
scas
xor
jg
or
jle
mov
jge
mov
scas
jg
cmp
adc
aas
add
movsb
jp
lods
pop
test
imul
and
cmc
clc
fdivp
mov
scas
sbb
pop
vmovshdup
cmpsb
adc
add
sbb
mov
into
lds
pop
jo
test
scas
adc
mov
mov
std
add
mull
popl
cmc
int
hlt
sahf
fwait
clc
push
add
mov
ret
lock
gs
nop
sub
rorb
xor
push
sub
pop
inc
inc
cmp
std
stc
gs
add
cs
out
or
dec
cmp
add
imul
aad
insl
fs
dec
sbb
cmp
xor
cmpsl
test
cmp
movsl
mov
jle
fadd
imul
rcrb
pop
jne
mov
lods
add
aad
popf
mov
nop
aas
test
stos
addb
sub
aas
push
mov
por
mov
into
sbb
sbb
push
xchg
stos
cltd
out
mov
inc
push
jno
add
adc
mov
dec
incl
push
adc
sub
push
cmp
lea
call
clc
es
lcall
hlt
pop
aas
test
loope
push
scas
or
and
jnp
outsl
xor
mov
sbbl
xchg
fidivs
shll
fcmovbe
inc
push
add
cmp
mov
fdivr
call
xor
jns
xchg
sub
inc
loopne
jns
lock
daa
in
mov
js
lea
stos
push
or
adc
mov
cld
loope
inc
in
jno
mov
and
jbe
mov
cmp
scas
push
daa
bound
or
sub
stc
pop
pop
add
cmpsl
mov
cld
push
dec
fisubl
shl
test
push
push
inc
mov
jbe
adc
ret
dec
add
mov
pop
orb
test
aad
fsub
sbb
sti
jmp
lahf
pop
mov
pop
aas
ds
mov
cmp
xchg
js
nop
sub
jbe
sub
gs
stc
stc
mov
xchg
sub
ret
adc
jge
sub
xor
mov
inc
outsl
jecxz
inc
mov
lahf
into
cmpsl
in
xor
xchg
and
ss
inc
popf
rcrb
fbld
shl
insb
or
data16
sub
xorb
call
sbb
mov
aaa
inc
mov
pop
push
pop
lea
mov
testl
mov
test
lahf
int3
sbb
hlt
data16
cwtl
and
adc
lahf
sbb
push
xor
push
movsb
movsl
call
xor
jns
pusha
insb
enter
rcll
jecxz
or
hlt
test
or
je
jle
xor
inc
push
fsubl
out
and
jnp
mov
aad
imul
mov
pop
mov
icebp
ret
jnp
dec
mov
and
shrb
rcrb
fidivrs
xchg
ds
out
dec
add
andb
add
shr
cmpsb
mov
daa
sbb
scas
cmpb
fisubl
mov
lret
andb
out
add
dec
cmpsb
fsts
arpl
cld
lea
push
fildl
rcrb
ljmp
sub
xchg
jmp
push
mov
jns
push
aas
mov
aaa
jns
jl
sub
mov
adc
les
dec
dec
jae
push
fbstp
mov
mov
movsb
or
in
xchg
in
popf
stc
hlt
sub
cmpsl
jg
movzbl
rcll
inc
rorl
lret
rcrl
xor
and
pop
ret
dec
or
inc
mov
mov
sti
or
icebp
fs
addr16
out
rcrl
fisubrs
sub
cmp
shll
out
mov
aad
cmc
push
inc
shl
xor
pop
loope
fildl
sub
cmp
sbb
paddq
sbb
xlat
iret
push
repz
pop
add
jp
jnp
imul
push
push
mov
mov
mov
xchg
das
jns
or
xchg
mov
push
lock
cmp
lahf
jl
cmp
div
outsb
fwait
outsl
xchg
dec
addb
fwait
jbe
fsubl
jle
pop
push
xchg
adc
das
push
in
sbb
adc
jnp
inc
or
adc
ds
mov
lcall
mov
arpl
sbb
icebp
mov
sbb
stc
mov
mov
sbb
dec
cmp
daa
js
nop
fcoms
cmp
xor
cmpsl
jl
fbld
add
inc
je
xchg
xlat
cmpsb
outsb
in
into
jnp
fistl
out
mov
outsb
jnp
pusha
adcl
std
or
test
movsl
lret
scas
xor
arpl
aad
dec
fdivr
pushf
ror
aad
addr16
lret
fistpl
ret
pushf
aam
push
iret
xchg
mov
cmc
stc
xchg
pusha
mov
mul
addr16
jo
mov
xchg
loop
push
sub
loop
sub
lods
pop
lcall
jle
xchg
mov
or
mov
leave
mov
lock
hlt
sub
dec
js
adc
jns
movsb
mov
outsl
test
mov
call
push
add
fldl
inc
push
add
je
sbb
mov
mov
dec
les
shl
jecxz
or
addl
jl
out
aaa
ds
jno
mov
xchg
ja
dec
cmp
dec
sub
ds
ljmp
mov
or
jge
jb
filds
xchg
leave
cmp
pop
cld
imul
insl
push
pop
data16
lret
out
fcompl
movsl
cmp
ja
mov
sbb
push
fwait
sub
rorl
aad
sbbb
test
sub
mov
jnp
mov
xchg
into
in
cmp
test
aam
sbb
lock
inc
lret
mov
mov
aaa
add
jl
xchg
mov
pop
add
jo
aas
mov
xchg
addl
scas
or
fst
loope
dec
les
jmp
fistps
aam
popa
sub
and
pop
sub
ss
bound
mov
hlt
cltd
lock
pop
mov
mov
test
test
add
adc
scas
pusha
lcall
sub
jae
mov
dec
andl
int3
and
push
insb
addb
jns
push
xor
pop
push
adc
mov
jo
jp
xchg
fdivrp
int
sbb
inc
mov
adc
mov
and
loop
jge
rcr
call
aas
dec
mov
mov
and
push
push
push
leave
sub
jg
mov
leave
pop
hlt
inc
stos
adc
movsl
adc
insl
iret
dec
mov
cltd
pushf
cmpsl
and
sub
pop
adc
dec
mov
es
out
xlat
pop
mov
pop
sbb
int
add
sahf
test
sub
addb
ds
mov
mov
dec
mov
inc
inc
loop
adc
pop
divb
mov
call
jns
pop
push
fnstsw
mov
fcomip
jl
add
enter
sbb
stos
inc
loope
in
movsb
icebp
jmp
mov
adc
add
mov
adc
scas
je
test
jb
mov
or
mov
mov
or
popf
mov
xchg
jg
mov
cmp
xchg
lahf
push
sub
cli
pop
call
jnp
jae
hlt
loop
and
mov
inc
pusha
push
pop
icebp
add
cmp
xchg
push
divps
and
sahf
push
rcll
pop
adc
xor
mov
rolb
cmp
leave
cmpsl
push
or
shll
jl
out
test
ret
pop
cmp
jp
xor
fcoml
mov
in
jno
fwait
or
add
jnp
pop
lret
jle
test
adc
pop
dec
mov
inc
cs
push
pusha
ljmp
jno
ret
mov
cmp
push
nop
xchg
out
aad
js
add
imul
add
enter
jle
call
adc
xchg
gs
movsb
rep
jecxz
rolb
into
inc
xor
mov
ljmp
iret
into
xor
es
cs
pop
testb
cmp
add
mov
adc
push
adc
sbb
popa
and
aam
pop
pop
test
xor
scas
sets
movsl
mov
pop
or
les
mov
pop
fcmovnu
push
test
nop
in
jo
nop
jp
scas
jp
sbb
cli
jno
xor
arpl
idiv
add
push
mov
arpl
lret
loope
insl
pop
stos
sub
ss
or
mov
popa
ljmp
dec
jg
jno,pt
push
in
movsb
test
inc
fnstcw
push
mov
mov
std
pop
xchg
mov
int
inc
sub
dec
lahf
frstor
cs
xlat
inc
xchg
testb
gs
adc
pop
or
push
adc
aaa
addr16
stos
push
in
push
or
mov
cmp
push
cwtl
or
adc
pop
insb
add
push
mov
mov
jmp
jl
fdivrs
mov
mov
and
pop
xorl
shrb
push
mov
push
outsl
sbb
push
add
inc
pop
pop
aas
dec
int
jae
pop
xlat
xor
xor
push
jns
mov
ja
in
sub
push
add
inc
mov
push
xor
int3
cmp
lcall
ret
inc
or
mov
daa
or
paddusb
and
loop
jl
push
popf
adc
xor
sbb
lret
jle
int
stos
enter
fists
sbb
add
jl
scas
test
loope
add
cmp
xor
pop
mov
mov
push
push
mov
jecxz
sub
ficoml
ja
xchg
fcomps
sub
inc
ret
lret
out
jg
pusha
in
imul
lahf
fwait
aam
sbb
sti
inc
jg
add
mov
xchg
jp
and
xchg
pop
add
inc
int
push
push
or
mov
je
and
int
or
lds
in
push
mov
mov
jnp
andl
adc
add
xchg
cmc
jp
test
pop
inc
adc
es
pop
mov
sbb
loope
or
les
shll
xchg
ret
jns
pop
adc
jl
and
inc
insb
cmc
sbb
sub
bound
dec
loopne
outsl
decb
fidivrs
and
popa
sub
arpl
push
mov
ss
inc
pop
sub
mov
jo
gs
push
test
jl
repz
sbb
sbb
sbb
orb
pop
stc
mov
sti
add
push
dec
int3
std
fldl
mov
jg
push
das
cmpsb
mov
cmp
mov
fwait
sub
push
adc
leave
jg
jg
mov
pushf
mov
push
sti
outsb
mov
pop
adc
and
je
aad
dec
stc
mov
mov
in
das
jmp
xchg
out
and
addr16
call
or
testb
and
ljmp
adc
dec
add
sbb
jae
push
pop
js
std
ret
shrl
rcrl
mov
jae
cwtl
jmp
lods
jno
pop
pop
mov
jns
daa
push
gs
iret
mov
sbb
sub
shll
push
clc
int
loope
lods
or
push
lahf
and
call
sbb
es
cmc
dec
jae
mov
loop
loopne
mov
clc
les
ss
ret
xor
pop
lods
js
sub
dec
out
mov
ret
ret
ficoms
fwait
push
das
cltd
cli
cmp
jle
dec
jns
jae
nop
movsb
sbb
aas
cmc
inc
faddp
sbb
xlat
bound
and
mov
outsb
or
xchg
out
repnz
push
mov
jno
cwtl
or
out
in
and
aam
and
pfrsqrt
scas
or
sti
inc
pop
pop
xchg
pop
push
mov
mov
mov
repz
das
cwtl
jmp
jecxz
xchg
push
mov
idivl
inc
mov
or
lcall
pop
int3
adc
push
mov
sub
or
jg
dec
jmp
inc
push
call
jb
std
cmpsl
addl
add
testl
cmc
test
lods
push
xchg
stos
pop
cmpsb
inc
push
iret
pusha
lods
stos
jb
mov
adc
or
add
inc
and
popf
std
xchg
test
cmp
cmp
sub
xchg
pusha
xchg
sbb
mov
ficoms
xchg
mov
sbb
fstps
out
int
jge
cs
lds
add
mov
lahf
andb
inc
jo
rcll
push
xchg
shrl
pshufw
out
xlat
push
and
aam
jbe
repnz
loop
shll
sub
adc
and
fcmovb
or
ret
cli
sub
xor
mov
cwtl
inc
adc
adc
rcrb
jne
xchg
add
push
sub
pop
icebp
out
xchg
stos
sarb
in
in
pushf
pop
clc
jecxz
or
add
ja
shrl
add
in
movsl
decl
mov
imul
shll
add
pop
stos
pop
mov
push
scas
arpl
or
and
push
inc
mov
jb
mov
shrl
enter
push
hlt
add
xlat
mov
pushf
pop
inc
in
popf
push
test
push
test
loopne
jp
in
mov
cmp
test
lcall
out
cwtl
subb
fs
adc
or
cmpsl
or
sti
pop
mov
and
mov
sub
xlat
pop
filds
lret
or
popa
out
adc
stc
or
push
cmp
add
test
pusha
test
les
adc
jne
int
popa
inc
mov
jg
test
dec
push
cmp
lret
push
mov
sbb
not
xor
jno
std
sti
xor
inc
adc
test
inc
pusha
scas
cmp
adc
loopne
push
sbb
sub
sbb
cmp
int3
rclb
cmpsb
mov
jno
and
or
lods
mulb
clc
cltd
pop
dec
cmp
icebp
sub
sbb
movsl
pushf
call
and
and
mov
test
into
hlt
cld
shlb
xor
push
lahf
outsb
push
push
sbbb
sbb
sbb
add
lods
cmpsl
push
push
adc
xorl
stc
pop
fsubl
pop
mov
sti
xlat
mov
xor
je
jmp
add
or
xchg
dec
xor
push
add
icebp
mov
shl
icebp
xchg
enter
outsb
mov
out
in
repz
xor
test
mov
nop
das
push
push
pop
ret
xor
outsl
sub
add
into
ret
mov
out
or
scas
sub
jb
cwtl
xchg
sbb
push
jnp
das
inc
fistpll
movsb
mov
xchg
lock
fsubl
icebp
imul
sahf
mov
push
xchg
and
jmp
aam
push
das
mov
mov
jg
cmp
mov
shrb
dec
add
mov
push
lcall
sub
inc
jns
xchg
mov
mov
pop
lret
in
enter
fildll
stos
xor
lock
jne
imul
in
fldenv
loopne
cmc
xchg
and
lods
stc
push
jb
leave
cmpsl
lock
pushf
push
mov
mov
js
jb
inc
mov
std
pushf
push
jecxz
outsl
mov
rclb
jae
add
aaa
aam
xlat
ljmp
in
das
xorl
sbb
or
iret
jns
addr16
adc
dec
in
pop
sbb
imul
and
mov
sbb
mov
aas
pushf
sub
xlat
aas
jecxz
jl
inc
movsb
pop
push
and
loopne
frstors
adc
fs
push
faddl
jae
leave
or
xor
mov
sti
stos
push
xor
jl
movsl
test
cwtl
push
xchg
roll
je
shlb
xchg
aas
and
movsl
cmp
push
cltd
jo
cmp
mov
dec
mov
out
xchg
push
xor
sub
aad
cld
xor
fisubrl
cwtl
lock
pop
js
push
insl
sub
dec
or
arpl
cmp
xor
in
fcmovnb
cld
ret
loop
fnstsw
hlt
imul
cmpsl
inc
imul
cs
push
outsl
test
mov
movsl
jbe
int3
adc
shlb
les
cld
sub
adc
icebp
shlb
jbe
outsb
pop
aad
xor
push
and
rorl
dec
cwtl
xchg
aas
xor
jle
btsl
adc
lret
cmp
mulb
mov
std
push
mov
dec
mov
jmp
xchg
dec
ret
js
or
pop
das
push
pop
inc
ficoms
sub
scas
repz
xlat
imul
add
loop
and
fs
cmp
push
inc
cs
and
call
aas
inc
mov
xchg
imul
mov
scas
jp
mov
divl
test
jb
icebp
xchg
mov
lret
shl
adc
adc
fidivl
or
adc
jbe
add
push
mov
hlt
sub
int
push
test
mulb
push
mov
jns
mov
arpl
jbe
push
sbb
mov
inc
test
xchg
sub
jae
cmp
xchg
push
stos
fsubrl
mov
into
cli
lock
enter
push
enter
int3
mov
xor
add
in
ficoml
sti
inc
sub
push
mov
mov
test
inc
out
fistpl
adc
rorb
dec
lods
jns
adc
and
andl
mov
inc
cmpsb
dec
je
push
cmp
arpl
into
stos
adc
mov
dec
in
test
lea
or
lret
add
adc
cmc
mov
scas
data16
add
lret
mov
pop
jecxz
les
test
gs
cli
cmp
mov
fcomps
clc
test
xor
cld
lea
cli
xor
jmp
test
mov
cmc
jge
xchg
and
ss
jge
stos
mov
xchg
push
jp
jo
or
dec
jae
shrl
outsl
aad
push
mov
sti
sbb
lret
sub
xchg
cmc
xor
je
mov
lahf
lcall
mov
gs
dec
mov
cwtl
xchg
test
jo
mov
cli
in
cmp
rcrb
cld
int
mov
xchg
pop
xlat
shrl
push
mov
imul
out
mov
pop
cmp
movsb
jge
in
sub
imull
cmp
xchg
clc
std
arpl
pusha
mov
testb
incb
push
adc
mov
repnz
xor
xchg
mov
mov
jl
jae
mov
fistpl
mov
jno
mov
gs
gs
adc
xchg
xchg
xor
mov
sbb
mov
xchg
sub
cmp
aad
push
int
test
push
jp
mov
jbe
push
sub
or
lds
leave
adc
mov
or
jno
jl
js
gs
jmp
or
leave
xchg
test
push
sub
pop
push
xchg
pop
or
stc
ss
mov
adc
sbb
mov
sub
gs
cwtl
ds
pop
pop
cmpl
test
mov
inc
jge
imul
in
inc
fbstp
ss
dec
sahf
insb
inc
fdivs
cmp
test
xchg
mov
cli
sar
cltd
mov
ror
sbb
sub
pop
ror
add
cmp
testb
xchg
rcrb
movsl
arpl
push
aad
scas
ret
push
mov
push
adc
jbe
jmp
jle
mov
out
mov
or
int3
pop
ret
xlat
leave
or
and
dec
and
mov
lock
mov
popf
rclb
jno
sti
cs
jle
lock
mov
nop
enterw
xchg
cltd
into
lea
mov
mov
and
mov
inc
pop
or
icebp
xor
xchg
testb
xor
adc
in
mov
mov
push
push
js
pop
hlt
loop
mov
insl
out
daa
sbb
inc
jo
test
pop
cli
inc
mov
cmp
cltd
cwtl
rorb
sahf
cmp
mov
jp
and
test
fisttps
testl
fucom
xchg
lods
add
mov
jo
mov
xchg
mov
pop
loopne
sbb
inc
jg
popa
push
sub
jnp
xchg
sub
int
pop
movsb
jg
aaa
sbb
int3
push
cmp
xor
xchg
mov
mov
scas
jmp
add
lcall
add
push
pop
fadds
mov
push
sbb
add
inc
shll
orb
push
arpl
jb
mov
mov
sahf
sub
pop
mov
imul
cwtl
jbe
dec
xor
xchg
pusha
shll
inc
xchg
cli
fstps
pop
lcall
xchg
pusha
jno
adc
test
dec
inc
fimuls
jae
in
fmull
stc
ret
outsb
sti
mov
add
or
sub
cmp
sbb
out
stos
mov
push
push
mov
jne
call
insb
rcrl
or
outsb
enter
shl
clc
pop
imul
scas
sbbb
lcall
jns
aaa
enter
pop
out
mov
es
dec
and
pop
adc
mov
sub
stos
loope
std
shlb
dec
sbb
pushf
xor
push
mov
jns
sbb
jns
bnd
jecxz
cmp
ja
dec
push
ss
mov
xchg
or
movsl
mov
add
es
jb
test
jne
out
xchg
lret
popf
sbb
sbb
std
movsb
and
fadds
dec
and
fnsave
imul
inc
cmc
jl
ss
pushf
loop
add
adc
lods
cld
mov
mov
ret
sti
movsl
scas
cmp
add
pop
cmpsl
xor
rcll
xor
inc
and
test
mov
push
xor
loopne
ret
mov
xchg
out
in
jmp
pop
adc
mov
inc
roll
test
repz
or
or
pop
pop
popa
imul
inc
mov
push
gs
je
adc
loope
xchg
outsl
add
ja
add
or
xlat
shl
enter
imul
arpl
lahf
inc
popf
lret
xchg
pop
out
mov
movsb
push
jmp
out
inc
mov
push
mov
inc
cmpsb
je
jo
es
pop
or
xchg
hlt
imul
xor
insb
adc
out
aad
push
shll
sbb
rol
in
dec
pusha
fwait
int3
sub
cmc
data16
push
mov
adc
pop
push
fsubs
pushf
cs
mov
add
bound
data16
flds
sbb
pop
mov
xor
in
jp
movsb
push
push
inc
rclb
push
xchg
push
stos
in
mov
lods
hlt
mov
push
push
imul
fsubrs
mov
push
add
mov
mov
inc
add
xchg
lret
xor
mov
out
sub
mov
das
int3
xchg
dec
xor
decl
imull
cmpsb
lods
sub
inc
push
mov
stos
fdivs
lcall
decb
icebp
jae
mov
and
or
xor
test
xor
jg
cmp
mov
push
push
nopl
or
xchg
fdivrs
insb
cmp
sbb
lahf
pushf
jno
push
pop
daa
imul
mov
xlat
dec
iret
loop
or
clc
sub
add
push
loopne
dec
sub
imul
mov
lret
ds
jle
jle
daa
lahf
fdivs
rol
xchg
add
stc
sub
mov
fldcw
and
loope
jno
enter
insl
or
mov
in
js
ds
xchg
inc
mov
push
push
iret
or
mov
pusha
bound
xchg
jae
mov
or
jp
dec
xor
clc
movsb
nop
ret
add
sahf
fistpll
nop
adc
dec
inc
add
jecxz
pop
inc
add
imul
sub
jp
das
sarb
hlt
mov
jne
push
xor
cld
push
mov
jb
jno
in
addr16
jnp
jp
adc
inc
xchg
mov
push
push
stc
mov
jae
xor
sub
adc
dec
bnd
ret
mov
popf
ss
pop
imul
daa
xor
jle
inc
push
or
mov
cmp
pop
daa
xchg
mov
imul
fabs
dec
push
jp
popa
push
test
adc
mov
mov
sti
push
xor
popf
ficoms
addr16
xor
mov
cmp
cltd
loopne
popa
out
sub
cwtl
into
xchg
push
ja
push
test
stc
orl
in
mov
clc
pop
jecxz
es
xor
loop
gs
jbe
push
xchg
cmpsb
push
inc
and
pop
mov
jmp
dec
and
stos
jns
enter
repz
mov
sub
je
sub
xor
imul
pop
inc
push
xor
pop
fldl
pushf
shlb
sub
fimuls
ret
test
cwtl
fstpt
popl
lods
int
pop
jmp
or
lods
add
xlat
aam
jnp
mov
std
mov
and
mov
dec
and
jbe
popl
or
test
fcmovu
mov
and
dec
pop
sbb
mov
jb
popa
jae
adc
or
lods
push
mov
inc
sahf
mov
cs
pop
fsubl
out
bound
popa
and
sub
enter
imul
lret
jno
adc
mov
outsl
fldcw
ds
xchg
xor
or
jb
popf
stos
psadbw
aas
mov
movsb
mov
hlt
push
outsb
cltd
repnz
aas
fisubrl
bnd
test
lds
pop
pop
nop
jo
add
xchg
das
mov
xor
xlat
or
adc
test
xchg
lret
push
repz
and
sarl
cmp
bound
mov
int
addr16
loop
mov
aaa
dec
rclb
add
mov
loopne
out
mov
lea
lods
mov
mov
out
shrl
pop
cmp
call
sub
ror
adc
adc
push
dec
xchg
ss
jmp
fnstcw
lds
outsb
mov
sub
cmp
arpl
xchg
push
or
add
mov
mov
add
ficoml
dec
jge
xor
mov
popa
mov
mov
mov
mov
je
xchg
and
pop
add
add
jl
scas
in
shrb
add
mov
fsubrs
xchg
fcoms
jns
jne
out
mov
je
fwait
loopne
out
bound
fsubrs
sub
mov
insl
mov
outsl
or
inc
dec
scas
mov
or
mov
push
aaa
push
dec
mov
sarl
sub
sub
fs
aam
sar
xor
aas
enter
push
mov
push
daa
mov
inc
or
movsb
mov
adc
shlb
stos
pop
inc
lea
rcll
cld
call
lcall
lret
jg
daa
cmp
push
lds
pop
dec
pop
sbb
test
jne
mov
inc
shrb
out
xchg
fstps
cmc
aam
inc
xchg
jae
fdivs
push
mov
push
xor
sub
dec
or
cmp
add
movsl
ret
mov
xchg
ret
stc
adcl
in
adc
dec
ffree
xor
scas
mov
mov
and
imul
loope
and
lret
ljmp
mov
add
push
or
dec
sbb
or
loopne
mov
xor
push
push
lret
sub
cmc
push
and
push
dec
push
inc
aad
mov
stc
jp
mov
or
mov
push
cld
and
call
mov
pop
aaa
ds
pop
and
test
dec
jmp
ficompl
repnz
pop
cs
mov
adc
inc
jecxz
add
xchg
mov
and
ja
push
and
in
add
sti
xchg
sbb
imulb
mov
test
repnz
lret
in
cmp
ljmp
lock
add
aam
lcall
into
mov
and
arpl
cmp
enter
js
mov
rorb
in
leave
and
xchg
out
aas
mov
cmp
sahf
lock
rcll
and
mov
push
popf
in
test
lcall
aas
insb
lahf
pop
jmp
push
pop
pop
and
xchg
sbb
mov
ss
jle
int3
flds
xchg
fs
cmc
add
movsb
js
fsubrl
dec
sbb
movsl
ss
or
cli
cwtl
push
scas
jnp
outsb
outsb
cwtl
fmull
sub
dec
sub
outsl
pop
jo
mov
and
dec
roll
sbb
inc
cld
ficompl
stc
xchg
fildl
cmpsl
sbb
in
push
std
mov
andb
lods
adc
pushf
in
sub
add
or
imul
or
sub
mov
cs
sbb
pushf
add
lock
test
loop
mov
sub
jae
or
fcomp
xchg
jnp
dec
icebp
pop
enter
mov
add
lock
mov
test
insl
mov
lret
push
iret
movsl
mov
lds
ljmp
idiv
jae
nop
xorb
jg
imul
andb
les
in
pop
and
pop
lods
loopne
push
cmp
icebp
es
sub
jns
mov
sahf
mov
push
jo
jle
push
ss
dec
cltd
std
push
inc
clc
dec
cmp
inc
cmp
adc
sub
jecxz
cmp
imul
sbb
clc
dec
push
aad
mov
add
xor
ss
daa
iret
cltd
pop
inc
add
aad
push
aad
imul
push
xor
call
insl
mov
adc
sti
and
jno
and
jbe
outsl
rcrb
add
cmp
inc
xor
clc
int
scas
lret
ljmp
js
mov
js
scas
ficompl
pop
cmp
stos
insl
cmp
jnp
arpl
xchg
or
in
mov
jge
dec
add
iret
push
daa
lahf
cmpsb
fadd
adc
or
sub
rdtsc
xchg
test
mov
lret
xchg
outsb
stos
int3
ret
fmuls
add
imul
xchg
lods
int3
outsb
push
mov
mov
repz
or
js
ret
in
dec
dec
addb
test
lea
ret
das
dec
and
push
jnp
add
add
cmp
or
push
mov
fnstcw
or
mov
insb
pop
mov
call
cmp
pop
push
shr
jecxz
es
mov
out
pop
popa
mov
mov
div
movsb
pop
insl
mov
xchg
cmp
rcll
sti
xchg
xchg
lods
pop
outsb
inc
incb
shrb
pop
jbe
scas
or
sti
into
xor
mov
pop
sub
jnp
jmp
loop
mov
cmpb
mov
pop
fsubrp
xchg
nop
cmp
xchg
enter
fidivrl
sub
mov
add
sub
sbb
lock
sbb
std
les
gs
push
dec
xchg
in
lock
movsl
popf
callw
in
sbb
in
pushf
dec
stc
ret
rclb
data16
test
aas
insl
fst
inc
add
and
js
mov
fcmovnbe
es
mov
dec
into
and
add
push
jns
les
pop
cmpsb
adc
lea
inc
sub
fidivrs
sbbl
ljmp
xchg
into
insl
xor
std
cld
sbb
pop
inc
lds
loope
fwait
and
mov
inc
movsb
mov
sub
xor
rcl
jp
nop
xchg
or
into
xchg
loope
adc
sbb
adc
aaa
icebp
sbb
mov
test
pop
add
ficomps
pop
and
dec
pop
mov
dec
mov
cs
notl
jb
dec
rorb
icebp
mov
push
rclb
xor
movsb
and
sahf
ror
lret
jg
popa
popf
ficomps
jbe
out
outsb
pop
jbe
fdivrs
out
or
xchg
add
stos
inc
jno
ss
das
inc
cmp
push
mov
test
ljmp
inc
cmp
repz
clc
mov
mov
jne
dec
enter
shrb
push
jg
dec
adc
mov
dec
es
mov
adc
or
xchg
imul
ljmp
xchg
das
cmc
scas
dec
jnp
into
xchg
nop
repnz
pop
fucom
cs
jl
das
or
push
mov
std
cmp
aad
ljmp
testb
xchg
cmp
mov
sti
mov
das
xchg
adc
sbb
mov
jg
cli
popa
movsl
or
push
shrl
call
loope
sti
cld
inc
popa
pop
je
imul
sbb
into
in
push
adc
dec
call
xchg
sub
and
push
rcrb
lock
and
mov
stc
mov
dec
jbe
stos
cmpsl
xor
xchg
cs
inc
jp
lds
jo
inc
enter
ja
cld
cmp
dec
dec
adc
cld
or
aad
xchg
call
xchg
nop
mov
push
push
movsb
and
add
xorl
lea
dec
test
pop
outsl
and
test
mov
std
test
fbstp
cmc
mov
mov
in
fs
dec
push
pusha
inc
sub
insl
lahf
sbbl
les
subl
or
xchg
push
dec
mov
jnp
pop
loopne
mov
cmp
cmp
cmp
sub
jb
xlat
push
sbb
loopne
movb
inc
xchg
gs
nop
rclb
pushf
ficoml
js
inc
push
cmpl
jb,pn
mov
mov
adc
daa
sbb
push
mov
ret
leave
into
push
adc
or
popa
jae
xchg
test
cld
dec
into
test
inc
mov
jnp
sbb
jmp
stos
mov
inc
test
inc
addr16
add
xchg
in
xchg
push
adc
sub
add
inc
jo
lods
fwait
loop
mov
push
jle
add
lods
fmull
push
stc
mov
out
inc
jg
push
in
pop
add
inc
adc
ds
ss
cmp
imul
inc
pop
lds
pop
sub
fstpt
aam
lret
mov
push
daa
pop
rorl
outsb
sahf
inc
out
ljmp
push
xor
loope
nop
add
enter
inc
out
mov
aam
jp
hlt
inc
push
arpl
sub
dec
fldpi
scas
sub
ret
pushf
hlt
les
dec
cmp
adc
jno
imull
ret
dec
bswap
mov
sti
test
and
fwait
test
fmuls
push
ljmp
mov
mov
sub
push
jo
dec
sub
mov
lods
cmpl
jl
push
andl
mov
pushf
imul
mov
insl
std
sub
mov
stos
jne
sar
iret
sbb
push
call
sub
mov
push
xchg
jno
push
jle
pop
jo
mov
ficoms
jnp
jbe
mov
pop
out
test
jns
and
aas
shll
fsubl
ds
cwtl
stos
ret
insl
xor
scas
lods
cltd
pop
push
sub
dec
pop
or
jge
ret
fnstcw
scas
cmp
fsubp
fnstcw
dec
enter
dec
imulb
xor
jae
or
mov
stc
dec
cmpsb
mov
adc
mov
and
push
push
jle
sub
aaa
sbb
ss
int
or
std
lret
push
pop
inc
xor
js
jno
das
push
je
and
mov
push
sbb
ljmp
xchg
mov
ds
inc
stos
sub
push
sar
jecxz
into
dec
sbb
bound
cli
push
clc
out
out
das
or
lea
scas
sarb
ds
stc
mov
lds
pop
mov
or
cltd
add
enter
xlat
jmp
adc
lret
insb
mov
stos
int3
or
mov
mov
negb
dec
stc
fbstp
daa
add
dec
lahf
cmp
in
cmc
sub
int
test
inc
cs
jg
dec
pop
movsb
xchg
or
adc
cltd
out
sub
lahf
daa
bound
and
inc
divl
xchg
fistpl
ret
iret
ja
xchg
adcb
daa
mov
inc
or
clc
cmp
mov
add
ret
and
xor
clc
repnz
cltd
imull
cld
loopne
push
or
adc
incl
inc
int
cli
fildl
jae
lahf
out
out
adc
cmp
mov
lods
adc
sub
cmp
push
sbb
sub
inc
je
sub
repz
mov
int3
fucomi
push
sub
jno
popa
outsb
jmp
out
lret
lds
dec
xor
fcmovne
dec
cwtl
test
pop
mov
lods
adc
and
and
and
fwait
imul
fnstcw
outsl
or
sbb
jns
loop
sub
xor
lods
xor
out
or
popa
dec
sti
cwtl
outsl
fiadds
arpl
pop
add
or
push
sbb
cmpsb
adc
outsb
mov
addr16
mov
int3
dec
push
push
jbe
leave
jno
out
mov
inc
cli
sbb
sahf
bound
pop
lcall
lods
jnp
sbb
stc
or
mov
ficomps
dec
xlat
out
arpl
movaps
rcrl
lock
mov
push
xchg
andl
pushf
loop
outsl
sub
insb
pusha
cmp
mov
or
dec
lds
movsb
in
mov
inc
rorb
xor
mulb
ss
je
pushf
mov
test
dec
jno
das
adc
cmp
sub
lret
cli
lret
cmp
mov
outsl
jmp
ret
scas
mov
cmc
jbe
jle
xchg
loop
mov
pop
xchg
fistps
inc
in
sbb
pop
cwtl
mov
fwait
jb
shl
pop
fisttpl
and
xchg
mov
xchg
imul
aaa
fstps
pusha
arpl
aas
sub
ret
loop
mov
dec
xchg
outsb
cs
out
xor
sub
cltd
iret
cmp
pop
leave
and
xor
fs
cmp
sti
mov
clc
push
gs
pop
xor
jl
cmp
mov
ret
adc
push
or
xlat
imul
add
xchg
push
test
cmc
add
mov
sbb
subb
fiaddl
add
cli
adc
imul
sbb
pop
fdivrl
dec
mov
xchg
mov
cmp
jle
iret
sti
or
sub
js
fwait
push
push
cmp
das
fiadds
add
pop
fucompp
sbb
clc
sub
lahf
ljmp
xchg
jae
movq
jno
insb
data16
icebp
push
test
xor
sbb
arpl
add
cltd
jecxz
jmp
cmc
dec
out
or
or
jg
add
jns
push
jno
xchg
aaa
fdivrl
scas
mov
movsl
or
fwait
int3
push
pop
push
mov
leave
lret
into
jae
fisubrl
in
jno
pop
xor
cmpps
jae
inc
fcomp
xchg
jno
or
cmp
cmpsl
outsl
mov
popa
faddl
dec
cmp
aam
call
ss
and
adc
and
out
push
cs
sbb
push
xchg
insb
jo
pop
es
sbb
test
jae
scas
cld
aas
mov
xchg
add
mov
les
xchg
out
popf
mov
push
jle
aam
add
lds
in
stos
xorl
mov
repnz
cmpsb
movsl
clc
dec
push
scas
lods
ret
mov
add
pop
fimull
fisubrl
inc
out
adc
jmp
cwtl
sub
call
mov
popa
rorb
andb
ret
les
mov
mov
mov
pop
shrl
mov
mov
push
shld
pusha
lods
ljmp
inc
jmp
xor
ss
push
inc
pop
mov
xchg
xor
xchg
sbb
or
or
sarb
repnz
push
and
arpl
mov
sub
mov
sub
and
push
or
lods
pop
loop
sbb
addr16
jl
xor
popf
test
popa
fsubs
push
stos
sub
popa
push
popf
ret
pushf
cld
or
test
jo
mov
inc
iret
cmp
mov
imul
push
sbb
and
push
cmc
dec
xchg
movsb
dec
inc
or
ret
adc
xor
jge
or
je
cli
iret
push
jle
xor
in
add
lret
fcomi
sub
loop
xchg
dec
movsl
bswap
pop
call
stos
iret
daa
jo
daa
addr16
push
dec
js
push
dec
inc
cmp
rolb
shrb
loop
mov
int3
push
cmpsb
xchg
or
jle
inc
scas
mov
out
call
jmp
fwait
aaa
fcoml
mov
push
js
xor
xchg
xlat
lret
mov
adc
push
push
mov
fxch
inc
shrb
aaa
push
mov
dec
add
aaa
addr16
cmc
jge
andb
adc
pop
int3
cli
and
push
xchg
dec
mov
xchg
mov
lret
movsb
xchg
xchg
mov
bound
stos
add
and
xchg
jge
add
xchg
pop
cmpsl
xor
mov
cmpsl
or
stc
pop
xor
inc
ret
dec
mov
mul
jl
mov
mov
daa
ret
mov
ror
cltd
and
inc
inc
sub
xor
imulb
fcmove
sbb
orl
cmp
mov
loopne
jnp
jno
add
les
imul
push
pmaxsw
mov
xchg
jg
mov
pop
fs
pop
mov
sahf
and
inc
pop
sub
adc
out
mov
loop
leave
nop
sti
cltd
ret
shll
test
push
cmp
mov
movhps
shll
mov
xchg
xchg
dec
aas
das
mov
jge
jo
lock
adc
dec
jle
mov
xor
std
les
popf
in
test
xchg
dec
cmpsb
movsb
shll
push
fisttpll
shlb
rcrb
adc
clc
sti
outsl
icebp
dec
mov
ret
int3
mov
out
in
mov
mov
loop
dec
lock
xchg
push
xacquire
iret
repz
lods
push
push
jecxz
rolb
lock
adc
aad
nop
or
push
mov
aam
out
imul
inc
jno
hlt
faddl
shrl
aam
pop
xchg
cmp
xor
jae
pop
test
sub
jne
jle
das
aas
dec
movsb
mov
aas
lods
lcall
popf
and
int3
lahf
repz
xor
mov
and
jnp
js
inc
dec
aad
jno
fxch
lcall
pop
fsubrp
cmp
xchg
pop
call
cmc
das
mov
ror
pushf
cs
movsl
loopne
inc
or
into
std
loope
add
lcall
inc
test
test
jbe
insl
insb
jmp
sbb
adc
cmp
jecxz
gs
outsb
mov
pop
push
lcall
mov
out
sahf
insl
jmp
and
imul
ss
cmp
and
out
xchg
repz
movb
call
add
push
insb
sub
mov
pop
jl
push
mov
fdivrs
fwait
cmpsb
in
or
shrd
and
data16
fmulp
pop
frstor
imul
test
jbe
sbb
pop
fildl
xchg
mov
push
fxch
cmc
mov
inc
outsl
and
jb
push
data16
pop
dec
int3
mov
jb
inc
push
mov
iret
mov
int3
xor
mov
inc
xor
lret
std
push
inc
movsl
mov
mov
cmp
fistpl
movsl
jl
adc
repnz
add
jae
pop
int3
jg
and
push
push
mov
dec
dec
pop
xchg
clc
fnstenv
inc
mov
push
les
and
xor
xlat
mov
cmc
or
stos
add
or
lods
mov
xor
cmp
add
push
lcall
sub
or
jnp
aaa
push
mov
or
inc
jo
ret
sbbb
adc
xor
add
and
arpl
adc
or
add
arpl
jno
xor
xor
cmp
jb
jb
out
sbb
adc
aam
stos
popf
cmp
outsb
mov
pusha
subb
fistps
lahf
push
mov
in
push
mov
dec
or
bound
addr16
ret
insb
mov
cltd
jns
lods
fldcw
push
lods
cmpsb
stc
sarl
pop
xchg
jp
loopne
inc
gs
add
addr16
mov
cmp
add
push
rcl
adc
mov
sbb
cmpsl
notl
leave
push
scas
push
xchg
fadds
in
dec
call
int
lods
mov
pop
adc
test
add
arpl
xor
jo
lret
xor
dec
sbb
jp
ror
or
adc
sbb
out
mov
sarl
lock
jo
movsl
leave
add
mov
mov
cmp
in
jmp
cmp
dec
fnstsw
xchg
fidivs
cmpsb
outsb
xchg
jnp
jp
rcll
pop
movsb
insb
sbb
leave
lcall
mov
imul
negl
cmp
les
mov
mov
sbb
out
lret
xor
lea
and
xchg
adc
dec
ljmp
sub
lock
shrl
push
jp
daa
sub
mov
xlat
sub
dec
xor
les
push
jmp
fldl
adc
sbb
xor
lret
ja
inc
mov
mov
addr16
pop
rorb
rol
push
icebp
cmc
xchg
jecxz
icebp
xchg
testl
pop
outsb
xor
sub
in
inc
cmpsl
jg
jnp
mov
lock
dec
jno
pop
or
in
fwait
loope
push
xchg
mov
adc
cmpsl
mov
push
lret
arpl
mov
aam
je
dec
fidivrl
in
jle
insl
fcomps
cmpsl
stos
ret
das
lret
xchg
sbb
hlt
adc
test
sub
jne
stos
mov
fistpl
daa
sbb
inc
out
mov
pushf
outsl
adc
xchg
mov
xorl
mov
xor
rorb
lds
stos
fsubr
cpuid
subb
add
lret
fdivs
jne
xchg
aad
int3
repnz
sbb
lods
or
in
xchg
jl
mov
mov
imul
call
pusha
sbb
lods
clc
mov
jl,pt
and
cmp
les
loop
daa
or
rclb
int
push
add
fdivs
push
cmp
pop
in
push
addl
imulb
fstpt
sbb
call
packssdw
pop
bound
mov
add
pushf
inc
adcb
or
shll
or
or
rorb
push
loopne
xor
shlb
pop
and
push
push
inc
pop
sbb
jecxz
mov
js
in
rcll
aad
push
push
pusha
sbb
adc
lret
ljmp
pop
inc
add
fildl
movsl
insb
mov
adc
pop
sti
mov
push
leave
aaa
push
mov
call
mov
in
xor
in
xor
jnp
in
jne
add
add
jl
dec
adcl
test
xchg
in
lret
lret
xchg
mov
mov
xchg
cli
adc
sbb
cmpsb
dec
inc
push
adc
add
sbb
testl
cmpsb
or
or
in
mov
adc
push
cmp
outsl
rcll
pop
push
cltd
movsl
stos
cli
leave
je
dec
mov
dec
mov
mov
pusha
cwtl
fmulp
out
sub
sbb
shlb
jne
dec
mov
and
jge
mov
roll
and
jo
fwait
mov
sbb
pop
into
cli
cli
cmpsb
incl
in
xchg
lods
dec
stos
add
popf
out
pop
xor
and
lea
in
sub
adc
pop
and
or
mov
mov
loopne
dec
mov
xchg
insb
cmc
and
jne
mov
js
out
mov
pushf
cmpsl
jge
pop
mov
jns
in
jmp
push
pop
fsubrl
xchg
addb
mov
es
lcall
cmp
pop
mov
ljmp
sbb
pop
xchg
mov
ljmp
rcrb
inc
mov
adc
gs
xchg
adc
roll
call
cmp
cli
lods
aam
scas
xor
fs
inc
jns
stos
jno
repz
sub
idiv
sub
stos
dec
mov
pop
jg
icebp
xor
leave
fwait
push
in
shll
sbb
jnp
jnp
sbb
adc
push
ret
or
xchg
fisubl
loope
dec
push
xchg
movsl
movsl
sbb
test
lods
sbb
scas
adc
adc
sbb
icebp
pop
dec
and
adc
pop
push
sbb
push
xchg
xchg
dec
out
in
repz
pushl
xor
or
mov
or
pop
and
dec
fistl
xchg
stos
xor
pop
sub
lods
fcoms
adc
xor
cli
fnstenv
js
insl
push
jp
stos
cmc
repnz
test
leave
and
inc
mov
imul
movl
lcall
xchg
dec
jns
test
enter
dec
test
and
bound
cmp
stos
subps
push
pop
arpl
add
xchg
sub
dec
xchg
jns
jne
inc
push
xor
mov
mov
ss
test
repz
cmp
xchg
xchg
js
ret
ja
jecxz
lcall
loope
inc
pop
or
fldl
jmp
dec
inc
cwtl
jmp
pop
adc
add
addr16
sbb
xchg
sub
sbb
mov
dec
cli
dec
gs
icebp
sub
jnp
test
cltd
bound
jo
aad
dec
push
sbb
mov
pop
nop
mov
imul
xchg
pop
cltd
push
push
jno
add
dec
lods
or
xor
push
int
js
jne
stc
push
xor
enter
bound
data16
push
leave
adcb
fbld
std
idivb
xchg
int
add
lock
and
ret
inc
jge
dec
mov
data16
rol
xlat
popa
mov
push
in
sub
pop
leave
jp
fsubp
shlb
imul
fwait
movsb
popl
into
mov
mov
mov
mov
pusha
pop
enter
and
mov
sahf
xchg
jp
mov
mov
dec
scas
mov
sub
in
push
push
sbb
dec
mov
mov
and
lcall
pop
or
dec
loopne
negl
jae
shrl
stos
out
fisubrs
sbb
int3
push
inc
xchg
inc
test
cmp
dec
add
push
mov
addr16
sbb
stos
pop
das
push
push
ja
stos
push
out
and
fdivrs
xchg
fildll
push
ja
dec
es
stc
xchg
jns
and
lcall
pop
dec
fistpll
movsl
mov
or
xchg
push
pushf
inc
hlt
call
dec
adc
ret
daa
push
hlt
push
push
dec
les
hlt
pop
sbb
mov
mov
enter
outsl
adc
out
mov
xchg
out
jecxz
movlps
icebp
rcr
mov
and
stos
enter
or
mov
insl
jb
loope
jmp
sub
dec
into
cmpsb
dec
jle
cwtl
adc
test
rorl
pushf
les
inc
or
sbb
imul
adc
imul
jmp
and
pop
xchg
lods
mov
lret
mov
hlt
jmp
push
xorb
dec
dec
aaa
ret
dec
jns,pt
add
push
movsb
gs
add
mov
adc
cs
loop
fisttpll
inc
repz
pop
add
push
xchg
enter
jnp
mov
dec
mov
or
and
aas
add
aas
adc
mov
std
fistl
pusha
inc
sarl
xchg
iret
inc
test
lcall
les
movsl
mov
ret
stc
sbb
repz
mov
fs
jnp
sbb
jle
xchg
fs
je
pop
inc
lods
jae
adc
stc
lret
divb
lods
pop
xchg
add
into
outsl
mov
sub
mov
insl
test
shlb
jp
mov
xchg
lods
push
mov
rclb
push
sub
xchg
sub
fsubrs
sub
cmp
xchg
inc
xchg
cmp
xchg
and
jecxz
test
cmp
lcall
je
sbb
loopne
arpl
adc
daa
sbb
add
xor
mov
jbe
mov
or
arpl
xchg
xchg
fs
or
xor
aam
into
loopne
pop
add
or
pop
sbb
xor
test
sahf
sub
sub
out
and
lahf
aam
ret
cli
sbb
sub
jae
adc
lods
repnz
pop
dec
mov
jb
lea
and
and
loop
insl
pop
outsb
ss
imul
stos
xchg
sbb
jo
test
movsb
dec
mov
rcll
decb
push
push
popa
ffree
cmp
lods
aad
and
es
mov
mov
lods
aas
cltd
mov
notl
dec
out
mov
cmc
xchg
dec
sbb
cmp
mov
mov
fwait
and
ret
clc
or
cmp
dec
and
mov
clc
add
aad
ja
lods
dec
daa
sbb
mov
dec
inc
fidivrs
mov
stc
js
shll
gs
js
test
push
jmp
movsl
js
or
sub
jns
dec
mov
mov
sbb
sub
push
mov
pop
mov
jbe
sbb
dec
loope
xor
dec
lods
cmp
movsb
repz
mov
scas
adc
dec
sbb
inc
mov
mov
adc
loope
ds
sahf
dec
adc
xor
inc
inc
push
or
jmp
add
push
lcall
icebp
sahf
fwait
lret
push
fcmovb
in
and
inc
sbb
test
sub
push
je
or
push
stos
enter
jp
pop
mov
sbb
fldcw
fmull
cli
leave
ss
outsl
fsubrp
inc
mov
and
inc
out
or
pop
iret
lret
fisubl
push
sbb
loopne
pop
jns
cld
test
jnp
push
jb
rol
movsb
mov
xor
xchg
inc
mov
pushl
sub
pop
jb
jg
imul
int
xor
cmp
add
divb
push
push
xor
popa
icebp
push
jb
jbe
nop
xchg
inc
mov
cmp
adc
xchg
rolb
stc
jae
out
outsl
nop
mov
mov
mov
xorb
aam
sbb
jnp
xor
bound
aad
sarb
je
lods
dec
les
xchg
pop
mov
daa
add
inc
cmp
loop
sub
pop
ret
fs
clc
ds
inc
push
mov
sbb
icebp
lea
insl
bound
pop
mov
push
movsl
dec
fcoml
dec
inc
testl
in
or
add
int3
les
inc
xor
imul
test
in
in
cmp
and
je
push
bnd
cmc
out
mov
mov
imul
fisubrl
push
sbb
xor
lds
xchg
fucomip
and
jae
mov
jae
ja
imul
inc
mov
xlat
push
jg
fstpt
adc
push
sub
fisubrs
out
push
mov
cs
mov
pusha
fs
pop
cs
in
xchg
cmpsl
movlps
addr16
popf
or
mov
mov
sub
dec
mov
sbb
scas
shr
sub
shl
sub
pop
shr
xor
and
cmc
rorl
jg
sbb
xchg
pop
lods
fiaddl
dec
jmp
add
imul
and
and
or
cmp
xchg
dec
in
push
pop
dec
pop
sbb
andl
push
stos
pop
mov
loop
mov
jp
dec
filds
insl
call
jnp
inc
and
cmc
shrl
push
pop
sbb
jno
lret
jno
and
or
and
push
jae
insl
adc
in
dec
jbe
popa
or
es
ret
in
stc
insb
ljmp
pop
cmp
xchg
and
pop
imul
movsl
scas
push
xor
cltd
lret
cmp
adc
lahf
inc
sub
movsl
ret
stos
xor
xchg
out
pop
adc
loop
ja
sub
imul
push
adc
stos
xchg
mov
inc
sub
cmp
and
int
dec
mov
jne
pop
lret
push
shl
lods
adc
scas
xchg
xlat
int
or
mov
or
pop
xchg
aad
sub
cwtl
stc
xor
push
fidivl
leave
les
repnz
popa
lret
jle
add
xlat
jg
mov
xor
popf
ficoml
mov
stos
fs
loop
sub
cltd
pop
mov
push
mov
dec
scas
pop
xchg
mov
push
xor
rorl
xchg
lods
not
daa
ljmp
sahf
push
jge
data16
jnp
movl
xchg
test
in
pop
push
sbb
jo
in
pop
in
addb
dec
into
fldz
push
and
inc
and
arpl
cmovle
iret
add
xchg
xor
mov
sbbb
inc
stc
aam
icebp
xor
lahf
and
dec
mov
outsb
jo
add
mov
and
cmpsb
xor
cmc
lock
arpl
xchg
outsb
lgs
xor
jne
mov
lea
in
xchg
sldt
mov
xor
test
loopne
cmpsb
aas
shll
xor
xchg
movsl
sahf
enter
ficoml
fstp
das
sti
cmp
loopne
push
cmpsb
ljmp
push
fcomip
mov
aam
or
lret
aas
pop
mov
fstps
jmp
cld
dec
adc
fwait
es
loope
lods
sbb
clc
mov
and
outsb
jecxz
mov
cmp
lcall
jbe
push
push
xchg
cwtl
lock
xlat
mov
test
dec
push
sbb
mov
xor
out
mov
cmp
ret
or
lods
jge
xchg
inc
push
cmp
sbb
and
lret
test
adc
enter
adc
stos
movsb
jb
mov
mov
mov
adc
xchg
mov
popf
popa
adc
or
push
cmpsb
stc
or
mov
aad
fcmovbe
iret
out
dec
cmpsl
add
mov
and
xor
fsubl
xor
or
loope
push
cld
inc
test
pushf
outsl
inc
aad
popf
or
loopne
and
mov
inc
arpl
adc
or
mov
ljmp
mov
xor
dec
and
and
and
or
fwait
sbb
or
sti
inc
mov
repz
lret
adc
iret
pop
out
jae
lcall
sub
mov
and
int3
stos
jo
mov
mov
outsb
rolb
jg
mov
bound
xchg
cmp
and
sub
inc
aas
idivl
inc
mov
mov
cwtl
dec
lock
push
xchg
clc
pop
stos
enter
mov
fsubs
dec
or
adc
dec
cmpsb
fistps
mov
push
push
cwtl
xchg
bound
sub
cmp
fmuls
push
daa
test
mov
das
add
sub
pusha
mov
inc
rcl
cmp
call
inc
scas
push
mov
sbb
in
fidivrl
jmp
test
jnp
out
jb
lock
xchg
pop
mov
rorb
push
pushf
cmc
and
xchg
addr16
pop
mov
cli
andb
dec
repnz
jl
sbb
sbb
repz
cmp
mov
in
push
add
fdivrs
mov
aaa
stc
or
fmuls
dec
jae
shlb
add
xchg
mov
sbb
xchg
das
ss
dec
fwait
mov
mov
es
cmp
push
les
inc
stos
lods
mov
push
jne
push
jns
mov
jmp
into
shr
shlb
push
or
pslld
lds
aam
add
add
insl
sbb
inc
xlat
inc
cmp
iret
push
js
jne
jecxz
aas
jne
jmp
adcb
or
out
add
jo
push
ja
iret
jnp
ret
jns
jbe
test
in
scas
addb
out
push
cmp
loopne
xchg
mov
sbb
outsb
imul
cmp
mov
xlat
popa
xchg
dec
call
js,pt
rol
jl
imul
call
mov
negb
mov
ljmp
jg
add
adc
adc
into
adc
mov
cmp
xor
fs
mov
cmp
push
lds
mov
sbb
outsl
xchg
aas
xor
cli
adc
jb
hlt
fcoml
mov
insl
js
pop
cmpsl
fadd
pop
mov
mov
inc
nop
cltd
jl,pt
lret
lret
cmp
sbb
mov
sahf
inc
push
inc
and
loop
fcomps
adc
movl
imul
or
aam
inc
inc
mov
sar
jbe
pop
cmp
in
push
jo
imul
mov
jge
movb
add
xchg
negb
scas
repz
pop
fs
cmp
gs
addr16
mov
subl
cmp
test
testl
dec
push
arpl
call
lcall
ds
push
jg
inc
pop
sbb
js
xor
and
cmp
dec
fisubrl
jecxz
mov
sub
adc
xor
add
sahf
imul
and
shrl
push
or
jnp
pop
mov
scas
pushf
sub
jle
fdivl
xchg
push
in
sar
xchg
in
xor
out
push
jp
cmp
push
push
jo
shrb
or
and
repnz
or
lcall
or
cmp
outsl
push
cmpsb
in
movsb
ret
mov
jle
dec
rcrl
lcall
in
jae
mov
xor
aaa
mov
movsl
test
sti
shr
mov
xchg
adc
adc
and
mov
or
fdivrs
sahf
pop
or
add
adc
or
sub
out
jle
les
jle
cmp
leave
ss
fwait
xchg
xchg
enter
cmc
cs
pop
sete
push
scas
pop
out
cmpsb
insb
sbb
xlat
fnsave
dec
clc
adc
leave
mov
xor
and
xlat
mov
sbb
sbb
outsb
jns
fmul
pop
mov
cltd
loopne
adc
inc
push
xchg
jecxz
push
sbb
pop
jno
orl
cmc
pop
into
mov
div
fsubl
mov
cltd
mov
into
pop
mov
pushf
nop
mov
loopne
mov
ficoml
and
add
out
cltd
or
mov
push
xchg
push
scas
fwait
dec
fisubs
bound
xor
inc
mov
sub
inc
rcrl
mov
out
addl
insb
mov
or
cs
in
adcl
jb
or
sti
cmp
divb
xchg
sahf
clc
jb
and
jne
rorl
xchg
jmp
xor
adc
and
mov
outsl
jne
sarl
dec
jnp
mov
mov
dec
cmc
shll
pop
adc
or
roll
cmpsb
sbb
mov
in
addr16
sub
cs
sbb
lock
and
insl
cmpsb
jae
cmp
idivb
out
popf
mov
pop
nop
fidivl
xchg
movsl
mov
and
inc
popa
jecxz
cwtl
sub
pop
mov
and
je
ret
jp
and
sbb
jg
lcall
sahf
jg
add
ret
jno
inc
rcl
or
inc
outsl
scas
xchg
push
mov
fs
insb
or
pop
call
sub
mov
fsubs
shr
daa
stc
xor
aas
xchg
test
add
push
sbb
int3
xchg
xor
sbb
lea
push
scas
push
or
mov
popa
mov
cwtl
stos
xor
popf
frstor
mov
xchg
mull
fxch
add
adc
mov
lahf
and
mov
and
call
out
jg
shl
sub
mov
dec
jl
xchg
js
add
jae
test
inc
dec
in
loope
push
sbb
addr16
cmp
cwtl
jg
cmp
xor
in
mov
inc
addb
cmp
lret
movups
xchg
dec
sbb
in
cmp
jge
idivl
loopne
dec
out
cmp
xchg
les
jmp
sub
xor
adc
sub
dec
lret
push
test
or
imul
push
sbbl
mov
addr16
in
pop
dec
daa
popf
daa
out
sub
and
sti
test
jg
inc
popf
mov
movsb
fisubrs
jo
ds
xchg
xchg
mov
xor
mov
fucomip
outsl
pop
jp
clc
insb
ss
mov
stc
adc
sarb
cmp
in
xchg
test
adc
pop
mov
test
jg
std
or
mov
and
sbb
push
lcall
push
mov
lret
xchg
dec
les
mov
gs
push
inc
cmp
vpxor
sbb
sbbb
push
and
xchg
je
loopne
or
mov
aas
sarb
mov
adc
outsl
sbb
out
dec
xchg
xchg
popf
and
mov
ljmp
jge
out
xor
dec
daa
mov
orb
adc
ljmp
fistpl
pop
push
inc
hlt
sahf
inc
jae
cmp
jmp
adc
xor
and
pop
iret
jb
outsl
push
add
cs
and
pop
mov
add
jle
call
push
daa
out
test
sub
push
xchg
sti
js
fimull
dec
into
pop
cltd
inc
xchg
mov
xor
neg
dec
daa
pop
outsb
jb
mov
lret
xor
imul
xchg
das
insw
inc
xor
in
test
mov
mov
inc
mov
xor
lret
jmp
jecxz
fisttps
in
add
cmpl
xchg
cmp
test
pop
test
jle
repnz
test
dec
sbb
outsb
test
movsb
fstps
movsb
pusha
mov
cltd
idivl
fcoms
mov
inc
jmp
mov
mov
sbb
jae
std
orb
insl
pop
rorb
cmp
pop
inc
mov
insb
inc
cmp
or
pop
xor
pop
xor
cmp
imul
push
fcomp
ljmp
xchg
and
cmp
lock
jb
jl
lahf
or
int
sub
mulb
mov
ss
jne
adc
addl
dec
push
je
push
or
mov
addl
dec
sbb
add
mov
outsb
dec
arpl
xchg
sahf
pop
mov
dec
cld
cltd
clc
inc
add
out
stos
mov
out
pop
mov
dec
jbe
mull
push
jecxz
loope
or
and
mov
mov
push
cmpb
or
xchg
sbb
jg
dec
sub
jae
je
pop
fcomi
aam
pop
pop
fldenv
popa
movsl
push
add
ss
mov
pop
jmp
stos
push
mov
fstpl
sub
jmp
div
lock
pop
mov
imull
out
pop
mov
imull
mov
aas
shrb
mov
mov
lret
enter
shl
cmp
jnp
xchg
mov
mov
aad
add
xlat
mov
mov
mov
xchg
fstpl
jl
jnp
inc
jbe
cwtl
jnp
push
jmp
divl
insl
adc
shl
ret
xchg
jcxz
dec
cmp
sub
iret
xchg
fsubrs
sbbb
xor
pop
mov
loope
mov
orb
ja
dec
jnp
rcll
mov
dec
push
in
cmpl
cld
enter
lret
fs
jle
call
pushf
int3
mov
dec
pushf
push
xlat
aad
shl
or
push
aaa
enter
cli
mov
adc
inc
cmpsb
jne
cmp
shll
jns
enter
dec
xor
xlat
scas
pop
push
cmpsl
ljmp
aas
in
jle
xor
js
mov
mov
stc
mov
fcompl
ja
jns
lods
and
xor
mov
inc
and
mov
push
inc
push
rcl
cmp
add
sub
outsl
inc
imul
out
std
cmp
bswap
push
ljmp
jae
push
shl
xor
rcrb
and
ror
aas
dec
mov
cld
mov
popa
aas
fisttpl
ja
fisubs
jne
jbe
adc
iret
pop
movhps
cmp
dec
mov
jl
test
sbb
add
and
fs
out
repz
repz
int3
pop
sub
mov
cmp
mov
jmp
inc
lods
cmpsb
mov
xor
mov
in
sbb
cmp
les
xor
daa
clts
ljmp
jecxz
es
add
mov
mov
pop
xor
xor
inc
inc
dec
pop
jne
addr16
cld
mov
xchg
add
lds
faddl
pop
pop
fldenv
jle
mov
sbb
xor
and
add
cmp
xor
mov
aad
mov
sub
cli
imul
mov
sub
xchg
inc
xor
and
xchg
cmp
fisttpl
rol
test
mov
sbb
sub
gs
pushf
or
notl
icebp
jbe
xlat
cmp
fistpll
scas
mov
adc
out
out
mov
cmp
and
or
subb
cs
aas
mov
lret
xchg
popa
mov
push
jno
fwait
sbb
test
push
dec
xor
mov
jnp
and
cltd
mov
shlb
xor
push
scas
fnsave
jmp
adc
and
or
loopne
or
add
or
in
lods
lea
jno
sahf
add
loop
jg
sbb
test
jno
cmpsl
pop
popa
dec
mov
mov
sub
scas
sub
mov
mov
dec
subl
lds
movsb
into
movsl
fisttpll
and
and
rolb
mov
inc
popa
pop
fadd
xor
icebp
ljmp
dec
sbb
fiadds
fists
loop
subb
loop
xor
test
shrl
nop
and
clc
icebp
aam
mov
test
scas
mov
cmp
stc
in
cld
sub
loop
mov
mov
jo
jge
cltd
test
hlt
add
mov
pop
jb
stos
push
rolb
jae
jns
sub
cmp
outsb
fstpl
push
mov
mov
into
push
ja
push
mov
mov
pop
iret
add
sahf
nop
int3
mov
cmp
mov
addb
pop
test
or
imul
pop
mov
sub
in
and
dec
xchg
cmp
loope
imul
adc
fsubs
imulb
xchg
ret
cmc
push
test
push
lcallw
cmp
ja
imul
aam
and
pop
sbb
cmp
pop
cmp
int
or
xchg
sbb
dec
and
test
leave
adcb
inc
nop
test
mov
inc
leave
mov
fs
bound
jl
sub
dec
xchg
adc
xchg
repnz
ret
jo
mov
out
out
int
cmp
adc
subb
repnz
adc
clc
mov
out
bnd
pushf
mov
jbe
lock
and
mov
popf
test
and
popa
adc
inc
xor
dec
push
inc
fldt
add
inc
inc
pop
sub
push
loopne
jnp
cmp
push
ss
leave
lea
and
movsb
test
leave
add
mov
mov
pop
adc
fidivrl
xor
fidivrl
fldl
adc
in
sbb
arpl
out
jb
sub
and
iret
inc
dec
fs
sar
xchg
test
adc
pop
std
sub
mov
lcall
imul
in
add
push
inc
fwait
in
out
cmp
cmp
mov
lcall
mov
js
je
add
sub
cs
and
push
cmp
lret
in
xor
jle
push
inc
outsb
in
dec
in
pop
jo
int3
push
jp
imulb
popa
mov
and
in
push
pop
insl
loopne
ja
or
lea
lcall
cltd
push
mov
xchg
dec
xchg
subb
dec
les
add
ret
mov
imull
pop
adc
and
push
push
xor
inc
fwait
std
ja
add
orl
mov
fnstsw
inc
out
or
mov
not
icebp
sti
aas
jbe
xor
in
xchg
jns
shlb
scas
lret
mov
mov
jb
ret
jne
push
cmp
sub
loop
mov
lret
hlt
aaa
inc
std
push
sti
repnz
repnz
out
cmp
mov
xor
stos
adc
cmc
mov
cmp
lret
pushf
add
pop
js
outsb
mov
loope
cwtd
cmp
fcomi
xor
icebp
cmp
sbb
xor
pop
popf
pop
fstl
push
js
add
into
loop
adc
xchg
mov
enter
pop
aad
je
xor
movsl
scas
repnz
and
add
jg
xchg
inc
ret
jge
xchg
xor
andl
cmp
in
imul
push
or
cmp
fadd
pop
add
lret
sub
leave
mov
inc
or
ret
or
outsl
sbb
mov
iret
xchg
aas
mov
or
fs
sbb
pop
or
or
lods
mov
mov
stos
into
cmpsb
pop
outsb
or
pop
xchg
movsl
stc
cld
adc
mov
or
imul
daa
imul
push
or
out
mov
jae
push
ss
push
mov
dec
add
cmpsb
and
pop
mov
pushf
mov
add
jecxz
sub
and
mov
inc
and
fsubrs
jle
jns
popfw
fadds
imul
gs
add
or
cli
lret
and
and
jnp,pt
stos
roll
or
fidivrl
pop
and
sar
adc
lea
sbb
iret
std
pop
pop
and
aaa
fldcw
or
pop
mov
cmp
scas
out
add
mov
jl
push
xlat
insl
in
or
inc
mov
fdivp
ss
gs
and
negb
int3
stc
push
pop
jge
dec
mov
das
mov
dec
arpl
inc
jnp
outsb
aam
xlat
negl
mov
add
mov
enter
dec
mov
test
fidivl
imul
shrb
pop
pop
gs
aas
and
repnz
xchg
arpl
es
test
test
stos
inc
lds
sbb
push
fstps
fadds
cmp
cmp
pop
jo
sahf
jl
and
je
in
add
xchg
lds
adc
dec
clc
jp
aam
xchg
jbe
or
add
mov
je
movb
stc
pop
xchg
sub
dec
movsl
cmpsb
or
dec
push
pop
inc
rcll
add
jge
xchg
pushf
aam
shll
jnp
popa
xor
ret
shlb
popa
subl
fildll
jmp
sub
jecxz
insl
scas
imul
mov
push
xchg
and
xchg
adc
fdivs
mov
daa
pop
clc
int
fs
cmp
add
frstor
inc
inc
dec
mov
or
aad
lods
inc
call
pop
gs
add
inc
cli
dec
sbb
inc
aad
test
mov
mov
stos
addr16
insl
rcrl
and
mov
les
jecxz
cmpsb
push
inc
inc
leave
sbb
bnd
and
mov
sub
pop
out
ds
push
pop
xor
sub
cmp
lret
imul
xchg
out
in
push
pop
jbe
or
hlt
imul
js
loop
cmpsb
test
pop
jne
cmp
xor
mov
fstpt
std
test
push
insl
mov
pop
stos
scas
ds
mov
and
mov
loope
pop
mov
pop
shl
sbb
shll
data16
cmp
mov
mov
testb
shrb
inc
dec
insb
pusha
xor
into
xor
lds
xor
inc
jg
mov
ret
in
cld
jnp
add
push
dec
iret
out
sbb
or
fs
icebp
or
stc
or
xchg
inc
les
pop
test
jo
fs
es
ds
xchg
iret
popl
jb
loopne
lret
lret
aas
test
adcb
sti
das
out
mov
int3
lahf
mov
push
cwtl
and
dec
stos
pop
call
jp
in
cmc
mov
inc
add
or
xchg
ljmp
pushf
xchg
mov
jno
imul
fwait
dec
arpl
jno
rorb
jne
pop
pop
xchg
add
cli
inc
add
lahf
stos
sub
cmc
cmpsb
and
fsubrs
or
fisttpll
mov
and
xchg
push
inc
push
sbb
xor
shl
out
jbe
or
fnstcw
push
cmpl
inc
cmp
cmpsl
xchg
xlat
inc
cmc
arpl
lods
jne
ljmp
enter
dec
icebp
test
and
xor
xor
ret
fstpt
mov
pop
and
dec
repnz
stos
test
jns
mov
mov
ds
and
inc
sbb
xlat
mov
es
and
sbb
jle
and
mov
adc
aas
aas
pop
cmp
lods
icebp
jb
push
lahf
movsb
sbb
sub
add
fbstp
or
bound
jne
dec
cmpsl
das
pop
hlt
cmp
add
xor
cmc
sub
sub
sub
xor
pusha
push
xor
add
cmp
imul
inc
in
sbb
sbb
stc
int3
push
cmp
pop
sahf
lret
xchg
repz
jmp
aas
and
cld
jae
push
cmc
subl
mov
mov
mov
scas
bound
and
dec
cmp
es
push
cmp
jae
lahf
mov
das
sbb
inc
xchg
cmp
aaa
ss
push
lock
xlat
loop
js
cmpsl
test
lods
imul
add
subb
sub
cli
aam
pop
mov
ficoms
mov
out
xor
mov
addl
mov
sub
and
gs
add
add
rolb
mov
pop
mov
mov
ds
mov
sti
outsl
push
arpl
dec
cld
pop
push
xor
bound
hlt
inc
leave
adc
and
and
mov
or
divb
popa
or
jbe
into
and
or
fcompl
cmp
push
ljmp
movb
fdivrl
repz
inc
out
idivl
or
into
jecxz
xor
imul
push
test
pop
loop
popa
add
xchg
push
lret
and
in
mov
push
lret
lcall
pop
aaa
jecxz,pn
jp
hlt
xchg
daa
fisubl
decl
les
dec
scas
lahf
pop
sbb
fdivrp
insl
js
fisubl
fstl
mov
push
cs
cmpsb
dec
ds
or
jbe
pop
xor
nopl
cmp
dec
loope
insl
lcall
pop
rcrl
jecxz
stc
ret
pop
pop
jp
imul
mov
mov
pop
jae
or
inc
scas
inc
jl
mov
adc
popf
sti
shlb
cli
mov
idivb
or
xchg
out
push
add
sub
add
loopne
scas
mov
jno
sbb
mov
inc
sbb
sub
push
xchg
jo
mov
nop
stc
ffree
scas
imul
jle
push
popa
pushw
out
cmpsb
out
and
fildll
leave
mov
mov
outsl
sub
jns
fdivp
xor
sbb
mov
and
fld
mov
mov
scas
lea
sbb
xchg
mov
adc
popa
stc
sub
stos
and
xor
sbb
xchg
test
xor
fnstcw
jbe
jle
das
or
mov
test
cli
sub
loope
popf
jb
jmp
jbe
call
sub
xchg
xchg
mov
jae
cmp
xorb
inc
out
inc
mov
sub
fcmovnb
stc
int
xor
pop
out
and
cltd
add
mov
int
fstpl
js
loop
scas
push
inc
mov
jmp
adc
cli
or
dec
push
cmpsl
pop
add
mov
dec
lods
adc
cmpsb
gs
vsubpd
imul
insb
aad
cmpsl
popa
cwtl
outsb
jp
mov
ret
daa
dec
call
repz
jbe
sub
add
xchg
inc
cmpsl
mov
mov
mov
scas
lock
pop
mov
movsb
sbb
es
movsb
jo
pop
je
sub
mov
ret
inc
mov
out
iret
fidivrs
sbb
dec
sti
and
and
jns
insb
sub
icebp
xor
cmpsl
xor
lret
dec
mov
and
std
cmp
aas
stc
add
lods
cltd
fdiv
cmp
mov
aas
pop
loop
hlt
xchg
gs
jecxz
aam
nop
out
outsb
vmovdqa
sub
jl
and
sub
into
out
enter
adc
add
insb
jns
sbb
cmp
fisubl
addr16
scas
dec
pop
and
sbb
loop
mov
fstps
and
loop
in
sub
xchg
aas
dec
cld
ud0
shll
cmpb
mov
shr
adc
sub
or
addr16
jns
pop
mov
pop
scas
or
mov
mov
jge
pop
add
jne
adc
sub
call
dec
in
lret
jne
pop
pop
je
jno
mov
jb
in
push
imul
pop
push
push
and
aas
roll
call
inc
aad
rolb
xchg
pop
cltd
xlat
jo
sub
inc
pop
test
mov
int3
pop
mov
xor
faddl
mov
data16
or
xor
push
xor
cltd
lods
xchg
clc
cld
lea
enter
popa
aas
xchg
imul
pusha
andl
and
scas
pop
add
int
xor
test
shr
enter
mov
divl
xchg
leave
arpl
mov
sti
pop
pop
in
insl
add
and
fdivrl
or
push
adc
push
jb
cmpsb
pop
fistpl
aaa
sub
or
add
jg
jnp
lea
fs
fisubl
cmpb
rolb
pop
lcall
sahf
scas
adc
xor
add
pushf
push
nop
jge
cmpsl
mov
cmp
push
cmp
cmpl
mov
ret
repz
ja
inc
dec
mov
add
jl
aas
jmp
outsl
imul
outsl
les
sbb
pop
pop
sti
daa
or
jecxz
test
shll
dec
rcll
mov
dec
dec
sub
and
push
cmp
dec
loopne
jnp
sub
popa
cmp
lds
movsb
insl
lods
inc
mov
xor
jmp
lcall
fwait
out
sbb
subl
in
outsl
pusha
ret
fdivr
mov
jne
lds
add
fdivrs
and
in
lods
lds
push
pop
adc
mov
ret
bound
and
xorb
lods
dec
jbe
add
mov
adc
stc
push
mov
add
mov
enter
add
out
sub
xchg
pop
out
mov
push
xor
push
xor
cltd
in
call
faddl
mov
in
xchg
mov
jnp
shlb
mov
xor
mov
dec
mov
cwtl
sub
ljmp
mov
xor
add
cld
jno
stos
and
inc
xor
lea
push
es
loop
addb
repnz
int3
mov
arpl
mov
daa
sub
inc
mov
iret
inc
lea
lods
mov
push
pop
out
inc
arpl
mov
cmpb
adc
mov
and
cli
inc
xchg
popa
lea
repnz
ret
test
frstor
sbb
add
imul
dec
pop
pop
daa
push
imul
fldenv
sbb
std
data16
xchg
ret
leave
orb
cwtl
imul
and
lahf
jle
mov
cltd
repz
and
and
xchg
jns
orb
int
adc
push
aam
int3
dec
or
arpl
adc
popf
inc
test
xchg
pushf
add
mov
insl
or
adc
dec
out
aam
fldcw
scas
or
cmp
popa
dec
loopne
pop
mov
fidivs
aad
cwtl
pop
xlat
ljmp
stos
add
pop
fwait
inc
push
cmc
pop
mov
add
vpsrlq
adc
pushf
stc
add
inc
and
push
pop
int3
and
aad
cmp
lods
int3
fbstp
lcall
or
ret
aad
movsl
data16
lea
mov
addr16
push
sub
bound
out
hlt
add
xor
mov
adc
jb
xor
mov
out
xor
mov
fcmovbe
or
ja
roll
cmp
out
rcrl
or
inc
jae
iret
xor
pop
adc
sbb
ret
cmp
add
mov
mov
mov
movsl
or
cli
int3
add
fbld
enter
add
fs
adc
sti
movsl
cmp
cmp
push
loop
sbb
in
sbbl
imul
push
imul
idivl
stos
outsb
dec
dec
insb
pop
nop
cwtl
das
pop
mov
pop
xchg
inc
jge
jl
and
fsubl
sub
adc
xchg
fimuls
adc
into
arpl
addb
cmp
jge
xchg
bound
cmp
cmpsb
dec
sahf
adc
iret
je
mov
lret
fwait
dec
iret
ss
inc
lret
inc
stos
cmp
jg
repnz
pusha
xor
xchg
test
push
sbb
outsl
cwtl
mov
jnp
jo
test
dec
out
outsb
in
adc
je
jno
fbld
stos
cmpsl
xchg
xor
clc
ficoml
xor
cs
push
lret
push
jmp
outsl
test
enter
pop
nop
lret
rclb
lahf
lock
sub
cmpsl
lods
pop
rcll
mov
dec
mov
fs
testl
mov
shll
pop
aad
mov
daa
and
sub
les
and
push
negb
andl
or
or
icebp
js
adc
rorb
lcall
mov
push
xor
cwtl
repz
mov
push
cmpsl
idivl
inc
repz
ret
push
push
imul
mov
lcall
mov
jge
cld
out
and
imul
xchg
bswap
cmp
pop
pop
cld
sub
sbb
mov
mov
sbb
xchg
cmp
mov
jno
push
lahf
cwtl
inc
repz
inc
vphaddwq
cmpsb
push
decl
mov
enter
sahf
lods
stos
inc
call
mov
jecxz
pop
pushf
mov
scas
lgdtl
sub
xor
inc
dec
add
or
int3
out
add
adc
imul
pop
arpl
int
mov
push
imul
xchg
into
in
mov
adc
enter
fcompl
popf
cli
ret
jmp
cmpb
ljmp
loop
mov
movsb
cmp
cltd
mov
xor
or
cmp
mov
dec
movsb
in
rorl
lahf
dec
sbb
adcl
insb
mov
jo
popf
inc
lods
sbb
test
jge
adc
data16
xchg
sti
pop
cs
addb
jns
testb
xlat
xchg
mov
dec
push
cld
push
es
hlt
outsl
out
or
repnz
es
or
jg
dec
mov
pop
and
mov
push
dec
push
jmp
lret
loopne
push
xchg
add
stc
push
jnp
push
in
loop
rcrb
movntq
xor
push
pop
or
add
adc
push
xlat
cmp
outsb
jl
aaa
cs
adc
cmp
cmp
shrl
adc
aam
loop
xor
inc
mov
pushf
into
mov
cmpl
adc
clc
or
repnz
jns
lods
jp
enter
push
scas
imul
call
faddp
jecxz
mov
leave
ret
call
xchg
inc
loope
jno
mulps
mov
sarb
xor
int3
adc
xor
outsl
pop
test
lds
sbb
pop
mov
push
xchg
test
cmpsl
sbb
es
jecxz
loope
imul
mov
fwait
shl
rorb
inc
mov
imul
mov
xchg
inc
lcall
xchg
sub
mov
mov
mov
dec
leave
push
jmp
or
xor
jecxz
or
pushf
aas
and
in
mov
push
fisttps
pop
pop
and
aaa
push
aad
sub
jl
lret
inc
mov
loopne
add
out
ss
add
jbe
push
and
test
mov
scas
and
sub
movsb
aaa
popf
xchg
and
sub
dec
add
adc
jne
enter
sub
fsub
add
inc
movsl
sub
pop
aad
leave
pop
cmp
sub
cld
cmp
divl
sub
cmp
fisubrl
outsl
ficoml
addl
push
jg
inc
and
mov
call
xlat
loop
push
xor
je
arpl
jge
mov
popf
cwtl
in
xor
xor
or
jl
and
mov
dec
leave
push
test
sbb
push
in
sbb
cmpl
insl
mov
into
iret
add
shlb
aad
sti
jp
int
insb
addr16
and
add
js
mov
lret
dec
mov
xchg
scas
and
aaa
ret
wbinvd
fistl
jge
push
inc
int
inc
out
add
inc
nop
in
mov
lods
idivb
and
ds
shll
mov
cmp
jecxz
and
mov
mov
leave
sbb
sub
lock
cmp
xorl
xor
outsl
push
mov
jle
mov
inc
jne
popf
dec
dec
pop
pop
mov
aas
mov
mov
mov
in
mov
subb
fcoms
shlb
dec
cmpsl
cli
mov
movsl
adc
mov
inc
aas
jae
pusha
movb
push
mov
dec
mov
test
inc
mull
out
mov
dec
lahf
mov
jmp
pop
into
inc
fdivrs
add
mov
jns
fnsave
xchg
insb
jns
xchg
jecxz
push
sub
adc
inc
int
jmp
add
lret
jg
fisttpl
sarl
lret
lock
xchg
in
push
add
jmp
je
jo
add
scas
in
fistpl
ficoml
jmp
jno
push
add
ljmp
cwtl
xor
filds
sub
hlt
pop
sbb
inc
pusha
jo
and
sub
pop
jg
repz
cmp
or
or
ljmp
fprem1
sub
push
mov
movsb
stc
sbb
into
dec
ficomps
mov
loopne
lahf
in
in
xor
push
xor
das
stos
jge
les
hlt
lock
lahf
dec
divl
in
cs
imul
scas
ret
adc
add
and
mov
fcoms
bound
dec
cmp
mov
or
xchg
jg
xchg
jl
mov
aam
or
jbe
lcall
push
cmp
push
sbb
and
das
pusha
push
jns
inc
mov
jb
cmpsl
lock
inc
or
out
jmp
cmc
ret
push
adc
rcrb
push
popa
pop
cmpl
jb
ret
test
repnz
mov
pop
cmc
aaa
inc
adc
inc
sub
pop
push
inc
sub
sbb
imul
jbe
js
add
cs
sbb
aaa
mov
lcall
mov
cltd
mov
lret
test
push
in
lahf
add
xor
mov
mov
push
std
jle
adc
sbb
ret
add
mov
sub
mov
fs
adc
lahf
and
lods
pop
jnp
mov
inc
dec
cmp
repnz
mov
lea
dec
lock
shll
sub
insb
dec
jnp
popf
jl
xchg
fcomp
mov
jmp
inc
sub
inc
adc
lds
adc
push
mov
lcall
ret
outsb
outsb
pop
out
cmp
jb
sub
or
jae
sahf
xchg
pop
outsl
sbb
mov
dec
add
cmp
lea
pop
mov
xor
ljmp
gs
pop
mov
pop
mov
pop
test
popf
cld
clc
call
xor
dec
pop
jo
pop
addl
mov
jo
jb
xchg
pop
dec
arpl
pop
mov
mov
in
popf
pop
lods
mov
hlt
loopne
sbb
lcall
jns
xor
sub
mov
mov
add
mov
or
push
sub
stc
outsb
movsl
push
sar
push
mov
sub
jne
adc
mov
outsb
dec
lods
cmc
inc
push
aas
sbb
daa
out
dec
mov
fs
lock
aad
xor
lret
xor
mov
jmp
pop
cmp
roll
pop
in
sub
cld
lahf
mov
fcoms
cli
lret
daa
or
pusha
das
sbb
xchg
inc
jae
in
dec
test
xor
mov
sbb
rcrl
cwtl
push
add
xlat
mov
icebp
loopne
sbb
popa
insb
add
pop
jg
in
push
push
mov
sub
push
int3
mov
add
jg
mov
jbe
jb
das
adc
push
xchg
and
enter
mov
or
sub
push
pop
rclb
push
pushf
xor
or
lea
call
iret
outsl
icebp
inc
xchg
xor
mov
mov
into
push
sbbl
insl
jbe
xlat
jae
dec
pop
add
adc
lcall
pop
pop
popl
call
add
add
mov
mov
dec
jecxz
bound
shlb
sub
outsb
sub
daa
data16
insl
xor
jbe
pop
clc
ja
xchg
or
rcr
outsb
sahf
outsl
ljmp
ret
cmc
icebp
jecxz
cmc
into
xchg
movsl
mov
les
popa
jp
push
cli
lock
and
icebp
sbb
xor
fsts
push
pop
imul
adc
and
xchg
mov
out
icebp
testl
push
clc
mov
xor
adc
lea
xor
or
test
mov
add
mov
faddl
dec
jmp
int
mov
dec
mov
mov
push
dec
dec
dec
pop
or
xchg
or
dec
shrb
sahf
dec
ja
out
mov
das
shl
inc
cmp
xor
mov
mov
jge
jo
fisttpll
iret
add
pop
dec
lcall
push
xchg
mov
sbb
jle
movsl
lock
inc
fistl
xchg
pop
dec
or
loopnew
push
stos
decl
inc
fmul
jbe
or
insb
or
mov
cmp
enter
and
dec
inc
inc
sbb
jbe
mov
adc
imul
test
mov
pop
scas
cmc
mov
je
jp
dec
sbb
adc
adc
scas
xorb
push
dec
dec
cmpsl
and
repnz
movsb
xchg
mov
gs
movb
lcall
test
mov
add
ficoml
pop
mov
pop
push
rorb
pusha
mov
xor
xor
loopne
ja
pop
push
ds
jge
nop
lahf
stc
aad
push
stos
push
aad
rorb
mov
xchg
pop
sbb
enter
and
es
xor
shlb
nop
push
sbbl
ss
and
push
rorb
jae
aad
iret
sub
or
lahf
stos
nop
clc
cmp
inc
push
push
push
mov
xor
sbb
dec
inc
mov
insl
cmp
ss
icebp
inc
shrb
jge
hlt
std
js
sub
repz
mov
adc
sub
mov
je
sbb
ds
inc
cmpsb
js
popa
push
rolb
mov
jg
clc
mov
out
mov
jl
loopne
inc
orb
pop
mov
sbb
fstpl
fs
sti
fdivrs
jmp
lcall
dec
notb
fistpl
sbb
or
jno
stos
sti
mov
repnz
xchg
cmp
dec
pop
sahf
push
dec
pop
mov
js
cmc
aas
add
cmp
cld
js
subl
push
lea
dec
iret
xor
add
jp
scas
sub
cmp
ljmp
xchg
mov
adc
lods
xchg
shll
cmp
rolb
xchg
scas
cli
fwait
in
xchg
rolb
sub
dec
daa
loope
ja
pop
das
push
je
xor
into
ffreep
loopne
addr16
hlt
jnp
das
cmp
mov
mov
pushf
popa
pop
popa
xchg
xlat
pop
dec
orb
repnz
mov
push
sarl
fsubs
pop
addr16
hlt
scas
aas
cmpsl
outsl
jp
daa
outsl
mov
adc
ss
in
xchg
dec
int
sub
mov
ja
addr16
pushf
call
mov
sbb
pop
mov
dec
popa
pop
inc
inc
dec
scas
mov
xor
pop
movsb
gs
jp
xchg
jb
add
xchg
jb
xor
mov
inc
pop
push
enter
inc
mov
nop
lock
and
aas
cmpb
mov
mov
sub
out
pop
pop
rcll
lahf
lcall
mov
ljmp
sbb
leave
adc
push
sbb
add
loopne
stc
jae
jmp
jo
out
mov
outsb
movsb
in
aaa
mov
int
cmp
mov
dec
in
dec
mov
les
and
mov
xchg
push
sbb
add
add
push
or
inc
sub
mov
push
pop
jg
jl
mov
push
and
push
jle,pt
or
daa
jg
fildll
cltd
and
pop
mov
fdivr
mov
ret
mov
lock
inc
in
daa
jge
loope
adc
lret
icebp
rcrb
pop
inc
les
sub
cmc
test
push
jmp
mov
mov
jno
ja
cmp
sbb
stos
mov
movsl
into
jmp
jmp
xlat
ss
data16
int3
scas
pop
repnz
nop
mov
aam
icebp
cmpsb
jo
out
mov
xor
mov
cmpsl
ss
inc
out
gs
icebp
and
xor
sub
gs
flds
xchg
lret
push
mov
pop
and
ja
mov
mov
cmp
jo
jmp
mov
xor
jmp
pop
pop
pop
push
pop
mov
mov
push
fs
inc
push
leave
cmc
push
data16
lcall
out
mov
or
subl
dec
bswap
out
xor
xchg
cmpsb
or
in
cs
jl
insl
clc
loope
decl
inc
dec
push
and
and
stc
call
jecxz
cmp
int3
les
cs
mov
push
mov
jae
xchg
insb
js
cmp
mov
fucomp
rolb
inc
cmova
xchg
inc
mov
sbb
jecxz
or
lds
outsl
push
je
clc
ljmp
cmpsb
or
movsb
add
fisttpl
in
repz
inc
cwtl
cwtl
aaa
lret
push
push
in
pop
popf
aaa
inc
in
in
sbb
xorb
daa
leave
adc
lods
xor
xchg
cltd
add
pop
aam
arpl
cmp
in
cltd
test
dec
add
dec
aaa
mov
in
jb
repz
scas
sub
test
xor
jecxz
loop
cmpsl
imul
lret
dec
push
call
pop
push
pusha
sub
sbb
inc
das
inc
mull
cmpsl
dec
pop
ds
cmp
cmp
stos
aad
add
mov
jmp
mov
jl
xor
sbb
mov
mov
xchg
and
nop
jp
jbe
jle
mov
dec
push
jae
mov
das
xor
ret
addl
lock
add
in
fdivl
mov
mov
cltd
stos
mov
jnp
cld
xor
mov
push
frstor
xlat
dec
push
test
adc
push
data16
inc
push
lds
iret
mov
loopne
movsb
repz
insb
test
xchg
cmp
mov
add
ret
pop
or
aaa
xchg
repnz
lock
pop
aas
inc
push
sbb
cmp
enter
test
mov
and
xchg
mulb
push
lret
inc
xor
pop
pop
push
out
outsl
ret
mov
pop
and
jl
dec
and
arpl
arpl
hlt
xchg
js
popf
outsb
add
or
and
pop
push
xchg
jno
jns
test
stc
push
sub
icebp
inc
inc
cmp
sub
loope
insb
xchg
pop
ret
mov
pusha
scas
push
mov
inc
nopl
jnp
dec
shlb
dec
jge
mov
lret
mov
js
in
das
loopne
xchg
jge
shrb
pop
leave
aas
push
mov
cmp
xlat
test
or
xchg
out
sahf
and
les
popf
fistpl
int
pop
adc
mov
sub
xchg
pop
lds
adc
cmp
cmc
int3
js
bound
stc
es
pusha
clc
sub
mov
daa
cmp
mov
xchg
adc
lret
lock
pop
add
inc
mov
adc
nop
or
sbb
pop
dec
pop
add
adc
push
pop
dec
stos
and
pop
jbe
outsl
movsl
add
or
jecxz
popa
push
cmp
and
pushf
adc
loope
sbbb
xchg
aam
sbb
shl
std
into
enter
cltd
adc
xchg
jne
fcomps
stos
adc
sbb
ds
in
mov
jb
lds
mov
add
clc
out
aam
dec
jo
in
push
test
cmpsl
dec
pusha
imul
mov
xor
dec
jl
mov
and
add
pop
xchg
das
fidivl
int3
test
lods
cli
sub
jp
out
xor
inc
or
cmp
add
test
sub
cmp
inc
mov
jmp
loopne
xor
insb
inc
loop
add
xor
aad
mov
add
subl
push
imul
into
ret
cwtl
mov
jmp
and
mov
pushf
inc
scas
movsb
je
insl
add
sbbl
call
popa
aaa
xorl
jmp
dec
arpl
add
xor
mov
inc
shrl
mov
cwtd
jecxz
ljmp
jg
sbb
insb
pop
aas
das
add
movsl
mov
push
scas
jge
insl
int
xorb
clc
mov
cmpsb
mov
lods
mov
xchg
push
dec
jecxz
add
xor
lds
stc
pop
xchg
sbb
loop
mov
fwait
xchg
call
adc
fdivs
push
inc
pop
push
lea
mov
lds
cmc
sahf
jmp
sbb
jne
sahf
out
out
jne
or
loop
addr16
mov
ja
test
in
out
sbb
xchg
adc
inc
orl
and
sahf
xchg
adc
loop
mov
movsl
paddusw
inc
cmpsl
int3
cmp
rclb
push
fwait
push
add
sti
inc
cmp
inc
cmp
mov
and
fstpl
gs
inc
xchg
setno
jecxz
lods
push
gs
imul
rcrb
or
mov
xchg
scas
push
js
inc
xor
xor
jae
rorb
jo
sbbl
inc
push
addl
mov
sub
stc
push
nop
outsb
imul
cmp
mov
sti
xor
pop
cli
mov
dec
pop
shrb
sbb
aaa
sbb
jne
cmp
mov
push
sbb
shlb
into
orb
jle
pop
sti
aas
xchg
cs
stos
or
fldt
cmp
mov
cmp
pop
test
xchg
arpl
call
cmc
in
sbb
dec
cwtl
pop
aad
mov
xor
aaa
jne
mov
mov
scas
cmp
dec
cmpsl
into
sub
mov
dec
imul
mov
xchg
jle
and
mov
mov
jo
inc
mov
arpl
in
stc
inc
xchg
pop
push
cltd
adc
jmp
insl
sbb
or
lods
fwait
and
sbb
inc
jmp
and
insb
std
popa
filds
xchg
jg
inc
addb
andl
ds
push
and
add
or
pushf
jns,pt
xor
pop
push
out
mov
mov
hlt
fdivs
sub
mov
sub
pop
call
xlat
jle
mov
mov
and
mov
sub
in
inc
mov
mov
jmp
and
lods
sbb
aad
sub
push
mov
or
cltd
jp
pop
lret
jne
xchg
dec
and
inc
test
mov
fnstenv
jo
test
movsb
movsl
xchg
bound
imul
xor
jle
fwait
aas
push
fists
push
imul
adc
jp
insb
jmp
cmp
ljmp
cmp
push
dec
xchg
mov
sub
sbb
cmp
pusha
pop
shrl
insb
ret
xchg
push
packuswb
mov
adc
jg
lds
je
stos
ljmp
rcr
aam
cmp
test
fdivp
dec
sti
dec
push
or
pop
jmp
in
or
out
xor
imul
push
cmp
xchg
test
jle
mov
pop
dec
out
sbb
pop
jle
add
bound
mov
jae
adc
push
stos
mov
rdtsc
add
jnp
pop
mov
cmpsl
mov
stc
sbb
in
pop
cmc
mov
push
cmp
fldenv
out
add
xlat
push
test
aas
mov
inc
in
mov
aam
stc
add
push
sbb
cmp
xchg
lock
sbb
sub
or
xor
pop
lret
icebp
leave
mov
push
sub
mov
in
sub
imul
adc
mov
mov
ret
pop
cli
cmpsb
adc
push
aas
jmp
repnz
push
push
dec
arpl
dec
sbb
cmpsb
xlat
xchg
add
dec
aaa
lret
pop
add
jmp
xchg
rcll
lret
pop
in
and
cltd
pop
or
cmpsb
push
sub
hlt
dec
data16
cmp
adc
mov
les
push
adc
push
xor
push
in
push
test
nop
loope
out
fsubs
fiadds
sbb
arpl
sbb
sub
flds
sbb
add
or
sbb
out
sbb
mov
mov
sbb
stos
fisttpll
int
mov
unpcklps
in
out
xchg
cmpsl
shr
xor
sbb
fwait
ljmp
sub
lret
call
outsl
jg
repz
push
dec
int3
std
popa
inc
fistps
decl
iret
bound
out
call
test
mov
adc
mov
pushf
sub
repz
pop
pop
and
in
stc
and
adc
sar
clc
or
mov
bound
cmp
popa
mov
or
jmp
cmpsl
lcall
fildl
sbb
std
jp
mov
scas
filds
sbbb
lock
adc
mov
push
cmp
insb
pop
loop
aaa
faddl
mov
xchg
push
hlt
mov
sub
negl
pusha
or
push
jg
andl
mulb
lret
or
push
mov
mov
mov
and
sub
fucomip
rep
rcll
fcomps
mov
lods
adc
adc
xchg
inc
pushf
and
aaa
sbb
push
jae
out
imul
adc
imul
push
inc
testl
shll
and
out
fwait
or
iret
inc
jmp
mov
or
in
mov
loope
mov
and
fidivrs
mov
and
loope
or
pop
add
xchg
popa
push
cmpsl
cmpsb
pop
pushf
dec
adc
jmp
fimuls
adc
push
xchg
mov
xchg
in
popf
fidivrl
cmpsl
sub
dec
sbb
mov
jns
pop
fdivrl
jl
sbb
sbb
pop
insb
sbb
jg
jae
inc
ss
xor
lods
mov
negl
or
lahf
or
sub
cli
imul
cmp
int
mov
adc
add
into
loope
faddl
and
lahf
aam
push
xchg
and
mov
test
js
aaa
cmp
mov
cmpb
ljmp
mov
rcrl
cmp
out
fcompl
add
sub
les
sbbb
mov
mov
cmp
sbb
or
jle
sub
lods
sbb
out
cmp
add
out
jns
mov
xor
cmpsb
mov
xchg
and
or
add
sub
fs
les
leave
adc
cmp
mov
ss
icebp
mov
mov
sahf
mov
or
jge
adc
lds
nop
jg
in
pop
das
push
lret
xchg
push
rcrl
xor
int
addr16
mov
imul
loope
stos
xchg
loopne
faddl
adc
adc
subb
add
push
outsb
xchg
aaa
inc
in
dec
aas
cmp
les
mov
int3
test
imul
mov
jecxz
lock
cs
xlat
inc
aas
mov
cwtl
xlat
adc
shlb
ds
add
mov
xlat
adc
xor
dec
cmp
or
xchg
movsl
xor
push
mov
aaa
scas
cmp
lods
jmp
xor
sub
addr16
loopne
aad
cmp
push
inc
mov
fstp
adc
cld
sbb
in
adcb
sub
adc
test
and
jg
mov
mov
mov
cmpl
cmp
pushf
cmp
rclb
scas
xchg
sub
inc
outsb
xchg
out
inc
les
movsl
daa
sarb
xchg
sbb
pop
outsb
and
aaa
loopne
pop
test
test
sub
ret
mov
xchg
sti
js
lds
imul
fwait
xchg
test
divb
sub
add
mov
fcmovb
mov
xchg
xchg
mov
ja
fisubrs
inc
xchg
stc
jo
pop
lcall
call
mov
adc
mov
cmp
outsl
mov
aad
scas
sub
scas
stos
lahf
inc
push
push
test
push
inc
sub
sub
sbb
push
sbb
aad
repz
lods
push
inc
add
dec
push
dec
mov
mov
sbb
jmp
std
mov
cwtl
pop
and
in
sbb
imul
cld
dec
sub
push
push
cmp
stc
sub
pop
arpl
mov
idiv
jnp
xlat
add
std
pop
stos
leave
add
mov
out
adcl
jbe
cmp
push
xchg
in
negl
push
pop
fs
mov
pop
xchg
dec
adc
add
xchg
into
cmp
adc
dec
add
movsl
fnsave
addr16
js
insb
out
pop
inc
test
movsb
mov
sbb
popf
imul
inc
sub
fistpl
mov
xor
dec
inc
mulb
jo
mov
jbe
scas
mov
and
jmp
xchg
fnsave
pop
icebp
cmpsl
outsl
mov
mov
mov
xchg
out
adc
sub
inc
push
scas
inc
xor
inc
aad
inc
xchg
xlat
aas
fstl
cmc
cltd
xchg
leave
jne
mov
xor
ret
mov
xchg
loopne
or
scas
mov
mov
into
lods
js
mov
dec
or
int
or
into
test
insb
add
jmp
or
iret
adc
adc
mov
and
pop
xchg
cmpsl
sub
inc
loop
in
mov
repz
ja
mov
aam
push
movsl
mov
test
flds
cmpsl
mov
cli
xchg
sbb
dec
pop
and
xchg
sahf
mov
inc
xchg
bound
mov
push
pop
add
nop
in
jae
add
gs
adc
in
insb
sbb
mov
cld
add
adc
sbb
add
loopne
push
arpl
sbb
les
push
lret
jecxz
xor
clc
test
out
mov
push
xor
sti
aam
and
jns
lock
addl
jg
inc
inc
mov
jl
add
lcall
pop
push
inc
loop
sbb
cmpsb
rcll
cmpsl
nop
sbb
ret
arpl
or
mov
scas
mov
loop
adc
rorl
stc
jge
dec
dec
xchg
fcoml
inc
insl
cmp
rclb
cmp
sub
addl
int
cli
hlt
js
cmp
push
pop
inc
aas
lock
pop
sub
cli
out
cmp
mov
ss
sub
in
enter
mov
mov
mov
mov
aaa
xchg
vpshlb
outsb
pop
insl
and
mov
stc
shr
dec
mov
sbb
pop
jb
mov
jbe
inc
stos
and
add
adc
dec
push
jo
rol
daa
sysret
xchg
xor
aam
fiaddl
cmc
lock
xchg
jne
ret
push
dec
pop
test
xchg
addr16
xchg
jo
add
adc
cmpsb
inc
mov
out
add
fidivs
aad
adc
stos
popf
fsts
or
pop
cmpsl
mov
or
adc
mov
add
cmp
aaa
dec
cmp
cwtl
add
inc
decl
cld
ja
ss
xor
subl
dec
push
xor
lds
decb
or
inc
fdivrs
mov
or
outsb
push
xor
das
lahf
loop
xchg
jge
mov
dec
xchg
cmp
ds
mov
ljmp
lods
roll
push
and
pop
aaa
xchg
jle
jns
outsl
xor
cli
jne
clc
jbe
ljmp
add
repz
int
loope
jge
mov
icebp
rcrb
loop
lahf
ss
cmp
xchg
mov
mov
loope
fs
leave
pop
data16
mov
ss
cmp
cmp
and
out
cmp
aad
fdiv
outsl
xchg
mov
aad
scas
mov
inc
adc
xchg
cld
adc
outsb
adc
int3
push
lock
xchg
fdiv
mov
lea
mov
imul
sub
sub
jl
add
push
xchg
cmp
adc
jo
sar
inc
push
mov
cmpsl
ret
pop
fwait
insl
icebp
jo
js
in
ss
mov
icebp
repnz
imul
lea
dec
inc
jbe
enter
and
hlt
insl
pushf
loopne
and
imul
data16
push
dec
loop
in
sub
push
ljmp
and
sahf
jae
repnz
sbb
out
jns
mov
cwtl
jb
popf
jle
xchg
xor
cltd
add
rorb
stos
or
xor
stos
in
repnz
push
mov
stc
cmc
cmp
aad
sbb
jo
cmc
cs
fisttpl
ljmp
movsl
push
push
stc
inc
jnp
hlt
sub
jnp
jne
ret
gs
mov
push
stc
cmp
js
mul
xorl
movsl
cld
adc
pop
sub
out
mov
mov
js
sbb
loope
xchg
jg
mov
push
sbb
outsl
out
add
dec
mov
lds
and
xor
arpl
mov
or
stos
cwtl
dec
daa
mov
adc
lahf
pop
iret
push
test
pushf
int3
add
ljmp
imul
pop
xor
pushf
lret
mov
xchg
adcb
mov
loopne
adc
jns
sarl
sub
sub
mov
ror
out
imul
daa
cmpsb
mov
xchg
adc
outsl
enter
or
into
ret
popf
adc
mov
push
lahf
repz
jg
jg
jne
jb
add
push
adc
out
jno
push
mov
cs
sahf
inc
inc
pop
pop
dec
adc
xor
push
in
jmp
fisubs
xor
cs
insb
outsl
mov
push
subb
jne
xchg
mov
leave
mov
aaa
push
push
xor
loop
rcrl
add
jl
test
xchg
popf
adc
jecxz
sbb
pop
mov
jl
cmp
mov
outsl
or
mov
xchg
pop
cmpsl
fstpt
ret
push
or
imul
and
fwait
inc
movsl
mov
inc
leave
push
mov
cmc
push
shr
mov
add
shll
fisubrs
adc
add
jge
aam
ja
out
and
push
inc
adc
add
xor
pop
lods
fmuls
inc
mov
adc
xchg
enter
pop
pop
bound
rclb
adc
xchg
xchg
jne
pop
stc
pop
push
push
ret
mov
push
fwait
das
addl
std
xchg
scas
stc
addl
xchg
dec
es
roll
xor
fidivrl
mov
lock
arpl
or
sarb
mov
sub
xor
icebp
out
push
push
es
std
rorl
and
fmull
sti
in
push
je
fwait
xor
jecxz
sti
sbb
out
out
rcr
push
sbb
mov
cltd
aaa
jno
insl
ljmp
add
add
outsb
jg
icebp
pushf
into
and
mov
or
lret
test
div
or
fsubr
lods
les
xchg
repz
cmp
add
leave
xorb
aaa
pop
aad
addr16
ljmp
jg
mov
add
jg
jg
frstor
jb
xor
insl
ss
xor
out
sbb
push
cli
ss
pop
lahf
mov
mov
jl
test
push
xchg
adc
cwtl
das
scas
or
std
mov
shll
in
or
test
fisubrl
mov
pop
sub
adc
cmp
les
adc
int
mov
loop
dec
lret
jecxz
aam
fildl
call
stc
cmp
mov
and
sub
mov
mov
repnz
js
mov
add
orb
xchg
aam
aas
mov
andl
adc
xor
lods
cmp
jl
testb
clc
add
in
data16
in
adc
subl
inc
push
movsb
scas
int3
icebp
adc
fs
cld
out
jb
addb
sub
inc
lcall
imul
int3
sub
sbbb
pop
ror
and
je
cmp
pop
inc
insl
mov
sbb
in
arpl
insb
loopne
jae
xchg
xchg
cmp
call
enter
dec
jns
fnstsw
popf
call
lock
sub
mov
sahf
dec
lcall
xor
std
ret
inc
fdivrl
icebp
jmp
add
fs
fildl
mov
arpl
in
mov
pop
outsl
arpl
divl
cmp
push
repnz
lret
fdivrl
lea
or
fimuls
insl
pop
mov
fs
lods
cmp
add
inc
mov
or
push
xchg
outsl
sub
test
addb
push
roll
push
push
push
and
arpl
inc
loop
inc
std
inc
fsubrs
negl
js
mov
out
dec
outsb
or
repz
aaa
sbb
inc
xchg
jbe
adc
jmp
fwait
ret
into
ss
lahf
dec
fldl
xor
pop
push
mov
int
cmp
sbb
ret
das
mov
mov
iret
pop
mov
cltd
lahf
mov
fidivrl
scas
orl
cld
jns
sub
jle
dec
jge
sbb
pusha
mov
cld
adc
dec
push
push
sti
fwait
shl
jp
jne
cmp
popa
or
and
hlt
lods
cmp
lcall
daa
rcr
xchg
mov
call
adc
lret
insb
lods
xlat
inc
mov
in
cmp
add
cmc
mov
sbb
fstps
test
je
cmp
push
fidivrl
shl
push
sub
sub
xchg
push
xor
fnstsw
imul
icebp
mov
dec
mov
es
test
lods
adc
ss
xchg
adc
inc
and
and
pop
push
adc
jecxz
cld
int3
push
adc
int
mov
adc
sbb
rorb
cwtl
jbe
insl
shll
aad
jne
out
movsl
iret
insl
push
js
sub
dec
cmpsl
daa
add
sti
xlat
les
rorb
popa
notl
push
imulb
in
cmp
mov
loope
mov
dec
mov
xchg
popf
leave
out
add
inc
mov
lea
bound
dec
jae
fildl
out
gs
pusha
cmpsl
adc
or
jne
out
jae
stos
push
dec
rcll
mov
mov
mov
adc
or
test
ljmp
cmp
gs
dec
repz
mov
inc
jp
fmull
mov
lods
push
movsb
xchg
xor
pop
mov
push
push
idivb
mov
ret
insb
iret
int
ja
sbb
fcomps
cmp
movsbl
roll
or
ss
mov
gs
outsb
sbb
push
push
ljmp
nopl
and
mov
mov
cmp
repz
leave
ret
lahf
rcll
mov
inc
xor
sahf
call
jg
insl
std
lret
mov
fs
or
push
adc
jnp
fcmovb
call
das
icebp
xchg
ret
jp
xor
mov
pop
pusha
add
pop
jp
mov
rolb
test
lcall
pop
fiaddl
out
loop
add
mov
push
scas
sub
or
jle
aam
inc
pusha
test
lret
pop
in
in
hlt
sub
mov
cmp
stc
xchg
test
mov
jl
inc
imul
lret
xor
xor
aaa
cwtl
aam
fdivrl
lds
jge
inc
lcall
dec
and
stos
push
je
dec
das
shll
adc
ss
add
sbb
fs
jns
push
and
imul
out
jo
adc
xchg
xor
lret
mov
xlat
repz
lods
mov
out
add
adc
dec
addr16
cli
and
add
dec
adc
pusha
ja
jmp
mov
cmpsl
sarb
cmp
rep
jp
inc
adc
push
mov
adc
call
fidivrs
inc
add
fs
out
in
into
shlb
sbb
aas
or
stos
mov
loop
dec
enter
fadds
add
pusha
jmp
ret
loopne
fwait
add
xchg
jge
insb
sbb
sub
addr16
icebp
mov
push
dec
xorb
dec
sub
sub
and
mov
push
sti
sbb
lds
fstpt
inc
ret
in
cmp
test
cmp
xchg
out
pop
dec
pushf
in
push
mov
xchg
and
dec
repz
int3
or
adc
out
or
loope
movsb
pop
xchg
fsub
lahf
je
ret
cmpsl
xor
pop
insl
mov
roll
movsl
aam
sub
mov
mov
in
sbb
push
mov
jecxz
addr16
dec
dec
jge
jecxz
push
sbb
outsb
sub
flds
mov
in
sub
mov
decb
adc
xchg
add
pop
clc
leave
leave
sub
pop
adc
pop
jmp
int
push
mov
cmp
xchg
in
int3
clc
aas
cld
and
jbe
in
push
adc
out
adc
das
mov
scas
fisubrl
sub
das
xchg
mov
pop
or
xor
dec
add
das
add
aaa
pop
xor
add
std
mov
addr16
movb
ror
rol
in
xchg
dec
or
scas
inc
cmp
imul
mov
in
push
lcall
clc
ja
xchg
add
lss
lock
adcl
lock
ss
fld
dec
or
hlt
cmp
push
mov
mov
sbb
lds
jecxz
repnz
loope
push
movsl
mov
aaa
mov
and
fdivl
aam
lcall
int
sbb
and
pop
add
or
mov
in
jle
jae
ja
ss
rorb
dec
nop
xor
aad
push
xchg
test
or
xchg
pop
js
pop
shr
xchg
pop
pop
das
and
cmpsb
ficoml
lcall
jle
adc
negl
adc
mov
inc
add
xchg
popa
jle
sbb
adc
jge
mov
scas
cmpsl
sbb
jg
repz
loopne
int3
outsl
ja
adc
mov
aas
mov
add
loop
push
bound
adc
sub
fdivrl
inc
push
aas
nop
flds
pop
cmovnp
cmp
mov
lods
out
ret
push
loop
add
jecxz
and
add
mov
dec
shl
fldenv
nop
int
sti
stos
pop
test
pop
loopne
jp
push
orl
pop
mov
ja
in
aad
popf
xchg
inc
enter
addl
jno
ljmp
push
mov
or
sbb
jo
mov
dec
pop
push
addr16
jae
pop
int3
adc
pushf
dec
out
mov
jecxz
outsl
pushf
push
imul
adc
hlt
pop
and
bound
mov
mov
mov
test
mov
pop
pusha
mov
cmp
rorb
jecxz
roll
cld
imul
nop
jae
mov
mov
scas
test
rcrl
add
sub
ljmp
into
sbb
mov
cmpb
push
aam
sbb
gs
cmp
imul
fcomps
test
adc
mov
cmp
pop
jge
xor
mov
mov
sub
inc
pop
cmpsb
ror
cmp
dec
dec
ljmp
mov
push
orb
cmpsl
jne
jnp
shlb
jp
adc
scas
push
xchg
cltd
sub
add
mov
stos
sbb
cwtl
sub
jne
or
shll
pop
stos
xchg
les
push
mov
mov
xor
jp
mov
cmp
pop
rorl
stos
sahf
pop
lret
iret
aaa
fsubrs
mov
dec
gs
lock
aam
shr
loope
sti
fsubp
push
repz
xor
jnp
rcrl
out
scas
or
fisttpl
xor
jns
sub
je
jo
jo
and
push
imul
xchg
scas
orb
arpl
mov
mov
xchg
mov
cmp
xor
aaa
push
neg
stos
jo
rclb
mov
lods
or
cmpsl
aam
push
and
inc
ja
sbb
jne
fidivrs
push
push
hlt
dec
jg
arpl
xor
idiv
popf
fs
fs
dec
mov
pop
lods
sbb
adc
add
andl
sub
jae
mull
dec
inc
xor
mov
push
lds
loop
push
mov
outsb
xchg
call
add
push
inc
add
add
lcall
lea
mov
cli
jne
or
in
stc
mov
inc
cld
sub
in
std
imul
mov
testb
xchg
test
out
adc
out
add
iret
pusha
ret
sbb
enter
sbb
and
inc
jp
push
xchg
cld
repnz
ret
pop
xorl
adc
lret
mov
cmpsl
mov
stos
in
mov
fisttpl
pop
add
rcrb
xor
loop
add
mov
or
mov
mov
out
push
xchg
xchg
xchg
adc
lret
pop
mov
gs
jne
fstpl
mov
scas
pop
test
out
jle
es
sub
ret
sbb
cmpsb
pmullw
and
sub
es
mov
cwtl
or
push
out
cli
dec
ja,pt
mov
xchg
cmp
or
jl
test
in
bound
hlt
aad
js
imul
iret
bound
ja
jne
outsl
repz
push
and
add
int
insl
pusha
pop
lods
xchg
lret
ret
jne
inc
popf
loopne
loope
or
fdivs
inc
or
push
mov
inc
mov
cs
icebp
stos
xchg
pop
popf
loop
inc
dec
adc
xchg
js
sub
xchg
repnz
imul
or
stc
loopne
je
sbb
jno
ljmp
pop
jae
lock
push
jg
jbe
in
jnp
jmp
movsb
mov
push
aam
fcomip
cld
mov
shrb
out
push
imulb
adc
xchg
pop
stos
adc
xchg
pop
xchg
mov
loope
ja
adcw
fwait
sub
mov
inc
jb
xchg
pop
sbb
ja
lahf
mov
sub
imul
cltd
cltd
mov
fisttpll
sar
jl
std
dec
or
mov
sub
shl
sub
xchg
fisubs
push
popf
dec
jns
lahf
pusha
push
movsb
xor
jecxz
xchg
aad
mov
js
xor
and
mov
subb
popf
mov
rcr
jne
and
push
jg
pop
xchg
aas
fcoml
mov
into
mov
ja
leave
push
mov
cmp
fldcw
dec
sbbb
sbb
jmp
fsub
fisttpl
push
stc
cmc
or
or
jg
dec
out
xchg
xor
scas
mov
mov
sub
lods
lds
cltd
pop
sub
test
int3
call
ror
nop
jp
loop
popa
pop
shlb
xchg
std
mov
or
call
js
mov
loope
and
stos
adc
push
stos
ja
xchg
xchg
adc
test
dec
or
roll
adc
cmp
or
icebp
pop
xchg
fwait
ss
je
daa
ljmp
shlb
or
xor
push
hlt
adc
jnp
movaps
fcomi
mov
or
fadds
adc
bound
pop
ss
inc
orb
xor
push
outsb
sahf
push
repz
fnstcw
lods
sbb
lods
mov
je
push
in
adc
mov
dec
sarb
test
inc
cmp
push
int
mov
insb
cmp
xchg
jo
push
mov
daa
test
shll
cwtl
cmp
fildl
out
or
xor
fadds
les
dec
dec
shl
adc
xchg
rorl
mov
test
pop
mov
pop
int
subl
inc
bnd
in
les
mov
stos
popa
out
or
xchg
cs
jmp
nop
rcl
xchg
mov
pop
jp
out
mulb
adcl
test
nop
mov
cmp
push
cmpsb
and
into
dec
rcrl
push
inc
sbb
std
adc
nop
sub
lds
or
pop
sbb
dec
aam
lock
enter
pop
push
mov
adc
xchg
lret
and
push
sbb
jge
cmp
sub
adc
push
sub
cmp
cmp
inc
mov
mov
stc
pop
fwait
ds
sub
in
push
mov
push
sbb
xor
inc
lock
adc
pop
sbb
cmp
cmp
jl
sbb
insb
cmp
mov
mov
shll
dec
bound
pop
mov
cmpl
mov
push
sarb
push
in
sub
cli
nop
pop
inc
data16
jg
sub
or
push
xor
jnp
int
test
lds
cmp
add
lds
or
lods
cmpsl
sub
je
sub
jns
shrb
xor
imul
mov
pop
and
in
clc
mov
lahf
in
pop
jmp
add
imul
sysenter
movb
imul
loope
dec
lret
pop
into
mov
mov
outsl
lock
xor
push
test
dec
dec
mov
mov
pop
dec
lock
mov
jle
inc
cmpsl
fstl
ret
mov
fildll
inc
lds
jnp
mov
xchg
lods
mov
jno
mov
ds
int
les
out
xor
leave
ret
mov
push
insb
addr16
test
xchg
cwtl
mov
cmp
fistl
cmp
sbb
cmc
mov
push
shl
enter
fs
adc
mov
inc
jbe
bound
xor
addr16
or
cmp
test
push
dec
testb
adc
jns
rol
jle
sarl
rclw
jle
inc
cmc
addr16
iret
pop
push
loopne
popa
sbb
test
xchg
and
cmp
sbb
xor
pop
jecxz
imul
hlt
pop
pop
jmp
shll
jp
or
push
insl
test
push
dec
push
push
mov
inc
add
call
sbb
mov
test
mov
add
dec
jmp
stos
cmpsb
int
popa
xor
gs
add
mov
mov
inc
loop
rorl
scas
cltd
je
sbb
cmp
sub
sub
add
bound
cli
ljmp
jae
and
cli
shll
push
in
cmc
mov
das
cmp
push
jbe
int3
out
push
adc
xchg
rol
popf
or
pusha
dec
dec
inc
pop
xor
fadd
ljmp
pusha
jl
test
in
xor
push
inc
pop
hlt
mov
mov
lsl
subl
add
adc
flds
imull
enter
cmp
jecxz
sub
cmc
and
les
scas
ljmp
lcall
mov
adc
movsl
dec
std
xor
sbb
lahf
push
popf
lock
mov
pop
jnp
sub
cwtl
and
pop
cmpl
fs
push
jmp
cmp
sbb
xchg
aas
push
cmp
call
arpl
add
outsb
orl
xor
adc
dec
dec
lea
mov
push
add
push
and
ja
or
mov
int3
pop
movsl
mov
stos
out
jns
fwait
jbe
pop
pop
jns
cs
lcall
aad
daa
hlt
push
std
adc
mov
lret
pop
xchg
mov
ret
inc
popa
or
xchg
push
in
aaa
enter
add
mov
pop
push
jle
jo
pop
jmp
mov
sbb
lock
push
insb
shrl
iret
push
call
push
dec
cmp
jp
scas
bound
sub
stos
rcrb
or
shll
sbb
flds
mov
ss
addr16
stc
mov
pop
push
loop
ja
ja
stos
scas
add
ret
adc
inc
xchg
lret
sbb
imul
call
adcb
xchg
add
pop
adc
fistpll
mov
addr16
loope
xchg
push
neg
xor
xchg
loopne
dec
and
aas
test
fists
sti
sbbb
jne
pop
shlb
jmp
loopne
sub
xchg
les
andb
stos
dec
sbb
lods
jb
repnz
xchg
bswap
sub
imul
xchg
pop
and
inc
mov
sub
les
stc
test
mov
push
mov
repz
lea
or
jo
cmp
sub
fnstsw
fs
cmp
mov
in
dec
add
mov
inc
sbb
cmp
cli
xchg
add
fdivr
push
sbb
push
xor
cmp
imul
repnz
insb
or
inc
sbb
push
mov
mov
mov
sub
cmpb
sub
mov
gs
lea
pop
mov
out
and
jnp
cmp
or
ret
arpl
lods
repnz
icebp
cmpsb
idivl
test
jg
pop
inc
gs
mov
icebp
mov
and
daa
fcoms
dec
sbb
lahf
sbb
sbb
cli
rcl
or
testb
fiaddl
pop
pop
push
xor
out
outsl
mov
xor
int
pop
fisttpll
xchg
pushf
xorb
inc
call
test
sbb
clc
outsb
dec
jp
aas
ljmp
push
cld
jmp
cmp
movsb
sbb
cltd
adc
dec
add
test
push
addl
inc
sbb
mov
pop
jno
cwtl
push
sub
jae
cltd
mov
push
sbb
push
cmp
sbb
cs
pop
lods
push
or
push
rcrl
push
adc
pop
into
inc
cmp
xorb
mov
xor
add
xor
hlt
push
or
out
dec
jbe
das
push
mov
push
jno
loopne
je
push
jmp
adc
xor
or
lods
add
and
mov
mul
notb
ljmp
inc
ss
fnstcw
movsb
push
inc
cmp
mov
daa
mov
xchg
stos
inc
sbb
addr16
lods
dec
ja
daa
movsb
cld
mov
popa
sarl
lahf
mov
jge
aas
push
popa
scas
push
adcl
mov
iret
hlt
fldt
sub
mov
mov
dec
cmpsl
dec
mov
mov
shll
nop
mov
adc
jmp
jecxz
lods
or
dec
or
cld
xchg
cvtps2pd
adc
dec
shl
or
xor
dec
notb
sub
mov
lods
scas
sub
xor
and
cmp
adc
jae
cmp
popa
scas
lea
into
movsb
int3
in
aad
test
jno
add
dec
or
outsb
fisubrs
xorb
jno
or
xor
cs
sahf
sbb
lret
movsl
popa
xchg
mov
and
testb
les
xchg
enter
mov
inc
mov
sub
ficoml
inc
and
out
aam
and
lcall
cli
inc
sub
jae
or
mov
mov
fcmovnb
fmull
and
jae
lock
adc
loope
xchg
sub
lahf
cmp
mov
call
mov
jmp
adc
roll
jnp
jmp
popf
jnp
and
scas
testl
nop
arpl
inc
sahf
in
aas
out
xor
je
or
push
scas
pop
lcall
mov
popa
cmpsb
pusha
pop
adc
outsb
mov
loop
call
in
fisubrs
leave
xchg
mov
stos
pop
mov
lcall
sbb
cwtl
inc
push
repnz
mov
pop
pop
add
push
pop
cltd
xchg
mov
pop
jmp
fs
xchg
lcall
xchg
xor
add
mov
adc
pop
add
mov
add
loop
lea
daa
mov
jle
xor
je
insb
jns
std
and
sbb
mov
add
pop
jp
sti
vmovlps
sbb
stos
xchg
dec
jge
mov
sarb
out
sahf
flds
mov
push
pop
sub
jmp
dec
dec
push
add
xor
push
popw
pop
shrb
rclb
push
add
fwait
push
lock
mov
jecxz
jbe
mov
cmp
ret
das
aaa
icebp
pop
cmp
fldl
imul
pop
inc
je
test
subl
fmulp
jle
dec
adcl
lods
mov
or
sar
icebp
pop
mov
add
test
dec
lahf
mov
lret
push
sub
sbb
repnz
mov
inc
stc
push
sbb
jne
icebp
pop
jns
add
loope
mov
or
jns
pusha
mov
adc
lret
test
pusha
mov
fdivl
or
movsb
cli
fisubrs
scas
cmp
jno
cmc
rol
cmc
adc
aaa
mov
insl
dec
jbe
push
jl
add
fcompl
mov
sbb
xlat
lret
mov
or
loope
push
fdivrl
pop
enter
lret
lods
jmp
ret
adc
and
add
or
sahf
jp
cs
sti
jmp
jbe
ja
push
adc
jle
mov
mov
jle
pop
jns
mov
loope
jne
jle
stc
jg
or
outsb
adc
mov
push
sbb
incb
and
in
das
mov
fstl
gs
pusha
call
dec
in
cmpsb
mov
jae
sbb
les
and
add
pop
ljmp
mov
lret
mov
push
arpl
xchg
sahf
jno
cli
das
sub
mov
out
popl
in
sub
fists
icebp
sbb
jo
and
shrb
scas
ja
test
sbb
in
xchg
test
mov
fcom
sbb
and
lcall
jne
cwtl
cmp
jp
jl
stos
mov
push
xchg
jp
cmp
hlt
sub
sbb
push
pusha
push
cmpl
or
jnp
and
pop
adcl
push
das
mov
int3
ljmp
and
data16
dec
ss
sub
lods
inc
sbb
pushl
push
ljmp
xor
clc
xor
or
jnp
jp
sbb
test
popf
add
and
mov
xlat
cmpsl
roll
lret
hlt
cmc
in
cmc
push
xlat
imul
icebp
fisubrs
fnstenv
in
push
xor
lret
dec
shrb
sbb
cmpsb
ret
cmp
sbb
sbbl
xchg
ds
fbstp
mov
push
mov
pop
mov
int3
rorb
add
dec
cld
jns
bound
sysret
les
cmp
or
mov
repnz
lret
dec
ljmp
mov
mov
mov
dec
cld
test
scas
rol
outsb
js
cmpsb
mov
fstps
sbb
js
push
call
dec
add
or
mov
fmull
sbb
cmpsl
dec
mov
adc
jno
int
mov
jp
xchg
mov
jne
aad
enter
mov
enter
repz
mov
int3
fimull
mov
ret
sahf
inc
sub
cmp
lahf
lret
imul
cmpb
fistps
xor
dec
fs
pop
dec
jnp
xchg
out
pop
icebp
popa
outsl
push
adc
inc
and
daa
sbb
push
xchg
xchg
cmpsb
cmpsl
xor
dec
and
repnz
dec
aaa
frstor
and
mov
rclb
popf
js
xchg
andnps
mov
decl
sbb
cli
dec
cmp
adc
mov
jbe
fs
les
sbb
popa
add
jo
addr16
add
adc
cltd
dec
outsl
xchg
or
sti
scas
mov
xor
mov
loope
outsl
pop
sub
into
imul
repnz
inc
fdivs
lea
icebp
pop
aas
stos
cli
ds
ds
into
cli
mov
sub
pop
jle
jp
inc
push
bnd
inc
int3
pop
pop
mov
lret
icebp
js
xlat
in
push
sbb
jbe
lods
xchg
loope
js
push
sbb
xchg
es
xor
fiadds
sub
stos
and
shll
mov
out
cmp
in
fwait
push
adcb
cs
pop
jbe
gs
cmp
mov
lea
mov
mov
fstpl
in
pop
sbb
lock
mov
xor
test
mov
inc
lods
xchg
cmpb
dec
loop
cmp
push
pushf
loopne
sti
test
mov
iret
push
testb
jb
iret
mov
shl
mov
and
dec
es
lea
sub
xchg
dec
mov
sbb
jecxz
jns
repz
cmpsl
sbb
add
rol
xchg
loop
xchg
push
test
or
stos
push
jge
mov
out
cmp
loopne
sub
jge
leave
sti
ljmp
mov
movsb
cmp
cmp
xor
cwtl
dec
and
xor
jl
and
jnp
leave
loopne
bound
inc
mov
leave
fimuls
sahf
mov
sub
aad
or
insb
mov
pop
out
mov
jae
mov
xlat
push
mov
movb
or
idivl
hlt
lds
nop
dec
push
fs
sub
xchg
push
ds
and
add
mov
sbb
and
cltd
repnz
sti
jb,pn
add
mov
icebp
lahf
mov
pop
cmc
sub
andb
push
pop
stos
mov
and
fwait
or
jno
ja
pop
lea
in
cwtl
iret
adc
repnz
sub
scas
in
lret
out
xchg
popf
add
testl
push
leave
xchg
cmpsl
push
pop
stos
test
repnz
out
inc
into
jmp
pop
xor
and
add
insb
pop
add
add
sbb
or
fucom
pop
je
lods
loopne
gs
cmp
fidivl
neg
sbb
lock
jae
mov
mov
adc
pop
out
xchg
pop
lods
and
sbb
cltd
and
shll
pop
repnz
shll
push
pop
mov
push
sti
call
sbb
and
mov
jge
cmp
sub
jne
clc
mov
inc
inc
pop
mov
pop
jnp
dec
clc
mov
ret
test
push
es
inc
push
and
jno
push
xor
jg
outsb
fiadds
jbe
mov
and
adc
or
shl
decl
pop
adc
imul
dec
mov
std
mov
insl
jp
outsl
cmp
nop
add
mov
pop
out
fs
adc
fildll
popa
adc
sbb
or
and
jbe
push
mov
adc
mov
shrb
imul
inc
pop
and
mov
rol
pop
jae
xchg
insl
jmp
repz
mov
sub
in
mov
fbstp
dec
or
rclb
outsb
dec
jne
xor
xlat
sub
mov
mov
nop
cmp
push
scas
stc
std
cltd
or
repnz
push
cmp
cmp
iret
ret
mov
xchg
push
cwtl
xchg
add
cltd
jg,pt
insb
int3
mov
adc
dec
jae
mov
dec
sahf
cld
mov
cmc
int
push
or
adc
leave
xor
mov
in
xlat
mov
test
push
into
push
lret
in
cmp
push
fbstp
ret
or
mov
jno
xchg
dec
popa
xchg
fidivrs
test
fstpl
xor
pop
negb
ljmp
sub
xchg
inc
outsb
iret
add
movb
out
lods
jmp
repz
or
daa
pop
xor
xchg
js
add
aas
pop
mov
in
push
stos
dec
xchg
or
jle
inc
mov
orl
adc
and
iret
fwait
inc
es
jo
bound
lea
insl
jmp
add
daa
daa
movsl
pop
outsb
movsl
aad
jo
pop
test
adc
fistpll
mov
xlat
and
pop
aad
mov
jnp
sub
mov
stos
outsl
and
or
xchg
sti
add
xor
cld
andl
cmp
pop
into
sbb
sahf
xor
sti
sbb
fs
mov
sub
cmp
pop
mov
dec
movsb
lods
xchg
sarl
inc
scas
mov
xor
mov
or
imul
sub
mov
mov
mov
ljmp
add
pop
mov
rorb
test
fsubrs
inc
mov
fildll
mov
es
scas
call
dec
int3
adc
add
push
cwtl
sbb
mov
sub
enter
out
fiaddl
fidivrl
adc
xchg
int3
sbb
mov
sbb
cld
test
lds
adc
ss
lock
pushf
cmpsl
mov
jge
imul
dec
push
dec
out
mov
inc
mov
mov
stos
filds
fdivrl
adc
test
xor
call
jl
pushf
jae
push
sub
scas
les
mov
mov
imulb
mov
repnz
test
mov
in
jns
stos
adcb
mov
xchg
add
orl
lret
aas
inc
arpl
pop
pushf
push
sahf
ljmp
fidivl
jae
and
and
ss
pop
jmp
cmp
dec
xor
jbe
mov
or
sub
mov
lret
cmp
xor
dec
inc
mov
ja
das
add
sub
xchg
inc
leave
lods
jmp
lahf
cli
adc
inc
mov
ret
inc
mov
out
loopne
push
mov
xor
push
and
shll
xor
or
xchg
cmp
mov
aam
pusha
cmpb
mov
push
lods
mov
sbb
inc
jo
fstpl
sub
pop
xchg
shrb
cmp
fcompl
jns
sub
xchg
jp
pop
xchg
mov
push
scas
xlat
repnz
or
or
push
jb
adc
jecxz
popf
aaa
jns
add
pop
xor
test
js
cmp
ja
xchg
ss
mov
sub
adc
das
jbe
mov
hlt
daa
dec
pop
push
jl
and
push
mov
fldt
and
cmp
pop
and
pop
jo
mov
xor
mov
iret
repz
push
repz
mov
pop
sbb
lea
movsl
test
mov
ret
ret
aaa
or
test
pop
inc
jp
insb
repnz
pop
lret
lret
loopne
cwtl
xchg
mov
pop
push
lods
pusha
or
mov
cld
push
pop
sbb
int3
pop
lock
fdivr
dec
mov
leave
inc
ljmp
sub
adc
outsb
sub
sbb
push
fisubrs
out
mov
outsl
es
cmpsb
inc
outsl
mov
loopne
addr16
pop
dec
or
ds
sub
leave
mov
out
mov
mov
cwtl
mov
popf
mov
xchg
fnstsw
mov
popf
fbld
shrl
ljmp
andb
jl
adc
scas
sbb
in
pop
outsl
adc
mov
pop
lcall
lods
mov
mov
sbb
lods
lock
xchg
pop
push
xor
sbb
arpl
movsl
or
jae
inc
scas
pushf
xlat
jmp
or
adc
loope
dec
mov
jns
push
subl
loop
fldenv
pushf
sub
outsb
aam
sbb
mov
lahf
push
or
bound
jmp
or
mov
or
xchg
fcompl
mov
cmp
aam
es
xchg
ss
xchg
mov
fldcw
pop
cmp
popf
enter
sub
mov
and
mov
dec
aad
mov
mov
in
mov
sub
fs
call
mov
insb
mov
popa
es
dec
insb
xchg
xchg
lcall
outsb
jb
cmp
jp
mov
hlt
mov
in
xor
and
xchg
in
or
test
xor
xor
popf
mov
push
sbb
das
push
add
shll
addr16
out
mov
or
mov
popf
mov
hlt
xor
xchg
dec
push
mov
aaa
or
aaa
xchg
add
mov
pop
sbb
xchg
add
inc
sub
jno
xchg
cltd
call
das
sahf
sahf
adc
mov
fcoml
mov
mov
ret
push
das
sbb
incl
jne
sbb
sub
jle
movsb
addl
inc
add
fcmovnu
in
stos
dec
cmpsl
dec
jno
aad
add
repnz
xchg
loope
lret
lock
lds
fidivs
mov
mov
pop
stos
or
jge
test
cmp
dec
inc
lret
comiss
add
cmp
iret
or
dec
xlat
addr16
leave
pop
das
mov
or
sub
xor
or
scas
sbb
lcall
xchg
mov
push
push
lods
out
jnp
add
jp
sbb
rcrb
mov
mov
inc
inc
je
xchg
xchg
adc
aas
xor
lock
inc
gs
push
cwtl
adc
ljmp
jle
pusha
pop
push
jg
add
jl
push
lcall
xchg
enter
mov
inc
jbe
mov
adc
outsb
insb
sub
pop
add
pop
insl
out
in
inc
sbb
es
xor
dec
push
lock
jge
and
adc
mov
xchg
lret
pop
cmp
in
dec
jg
stos
cltd
mov
jmp
push
push
pop
mov
sbb
dec
sbb
or
fmuls
mov
scas
sub
cs
insb
jns
scas
fnstenv
add
es
jle
js
dec
ja
int3
ficoml
out
jno
repz
adc
lods
mov
sbb
mov
sbb
lods
mov
cmp
mov
xchg
ret
xchg
mov
call
mov
xor
cwtl
push
psubusw
pusha
dec
fists
fimuls
jmp
lret
test
adcb
mov
int3
xor
pop
lretw
mov
mov
or
rolb
xor
mov
lock
xlat
and
mov
out
popf
pop
dec
bound
push
loopne
test
lods
repnz
dec
call
repz
gs
push
inc
lods
mov
mov
mov
in
dec
test
sbb
xchg
pop
setae
xchg
jg
stc
cli
lods
out
pop
pop
movsl
ss
into
mov
dec
icebp
inc
jl
push
imul
jb
mov
or
out
repnz
sbb
cmp
cli
int3
lods
loopne
pop
jp
push
mov
push
sbb
sub
pop
call
adc
inc
lods
jbe
mov
insb
inc
loopne
sbb
mov
cmp
iret
pusha
aas
adc
std
fdiv
repz
add
mull
jmp
aam
mov
xchg
inc
sub
sbb
mov
or
mov
mov
jl
adc
fldcw
inc
test
cli
jmp
lods
sbb
icebp
das
xor
dec
lods
pop
pushf
arpl
outsb
clc
xchg
fisttpll
cmp
outsb
dec
shrb
pop
dec
inc
xchg
fdivrs
stc
add
pop
add
es
es
and
ficoms
shll
shl
out
hlt
imul
add
cltd
lret
das
adc
daa
add
movsl
imul
mov
sbbb
idivb
inc
adc
gs
mov
mov
push
mov
lahf
sarl
stos
sbb
and
out
roll
pop
pop
rcrl
xor
in
fprem
fimull
lret
cmpsl
xor
sbb
out
mov
xchg
cmp
mov
cmp
mov
dec
fdivrl
sub
into
in
adc
movsl
add
inc
cmp
repz
or
jl
inc
lock
xor
dec
lods
iret
mov
fisubs
pop
loope
sahf
and
jg
jbe
add
push
pop
xor
mov
xor
xor
xchg
push
xchg
mov
pop
pushf
test
sub
xchg
sahf
mov
sarl
xor
dec
clc
nop
mov
adc
stos
dec
sbb
add
dec
cmp
and
int3
cmpb
jb
test
lock
leave
dec
jl
repz
xchg
es
daa
bound
ret
js
daa
jne
push
inc
adc
nop
sbb
int
insb
xchg
adc
cwtl
mov
popf
cmp
and
aad
sub
pop
sub
cwtl
mov
out
pop
pop
xor
jp
sbb
cmp
fwait
push
int
jmp
pop
adc
xlat
pop
push
cmp
cld
lea
in
push
jns
push
push
loope
hlt
cmp
dec
fidivrs
push
jp
push
and
xchg
jo
imul
dec
pop
adc
jmp
pop
sbb
add
dec
xchg
or
add
xor
xchg
jns
push
fistpl
lret
loopne
lret
adc
imul
mov
jmp
into
adc
mov
sbb
test
adc
daa
xchg
pop
mov
test
test
sbbl
sbb
sarl
je,pt
cmpsb
mov
in
das
and
inc
sbb
xor
xor
sbb
ljmp
pop
jae
xlat
cmp
push
add
mov
xchg
ficomps
adc
jbe
ret
jo
add
jno
cmpb
lret
insb
js
push
gs
popa
xor
mov
int
and
sub
mov
in
dec
mov
insb
jg
jbe
pop
mov
out
loop
jae
jae
xor
ja
cmp
jne
fs
in
filds
inc
and
dec
cli
pop
enter
jl
out
in
inc
adc
fstps
rolb
xor
sub
test
adc
cltd
lods
jno
inc
sub
bound
xchg
add
je
mov
mov
push
mov
sub
ret
test
jno
mov
mov
leave
push
ja
inc
movl
push
push
test
or
jns
xchg
popa
and
fistpl
rorl
lret
cmp
pusha
and
cmp
pop
adc
add
sbb
fwait
cltd
add
cwtl
pop
push
imul
lret
sub
sub
add
lods
lret
adc
push
bound
fistps
adc
pop
add
sbb
mov
dec
stos
popa
jne
push
repz
sub
mov
pusha
inc
push
icebp
add
push
scas
push
xor
mov
test
popa
pop
pop
mov
shlb
jge
xor
xchg
lods
add
movaps
into
into
push
out
and
loop
adc
or
xchg
adc
rcll
insb
nop
pop
dec
sahf
icebp
sbb
and
and
fadds
push
or
sti
push
jns
ja
enter
in
mov
stos
fs
and
xor
sbb
fcoms
add
mov
fisttpll
cli
xchg
adc
ds
and
add
test
inc
xrelease
stos
cmc
fidivl
push
into
mov
call
dec
clc
xor
push
in
mov
mov
lods
shll
and
je
sub
sub
add
ss
and
lds
filds
xchg
xlat
pop
stos
mov
sub
mov
dec
imul
xor
sbb
pop
lods
xor
jae
mov
je
movsb
mov
int3
repnz
cmc
push
stc
fidivs
sub
add
xchg
dec
test
and
icebp
and
dec
dec
dec
test
sbb
mov
lods
mov
testb
jmp
outsl
mov
push
fwait
outsb
fs
idivl
xor
and
loopne
dec
inc
rcll
out
shlb
mov
adc
aas
cmp
cmc
xchg
mov
icebp
aad
ret
xorb
and
dec
sti
sub
push
incb
dec
in
idivl
mov
movsb
pop
mov
aam
pop
cwtl
pop
push
jae
and
pop
adc
mov
or
add
xor
push
mov
inc
jae
xor
xor
fmull
out
xlat
repz
leave
cmp
and
repnz
jge
filds
mov
jno
ja
mov
movsl
adc
jne,pt
mov
push
negb
mov
sbb
or
shlb
gs
fcomps
jmp
cmpsb
inc
sbb
xor
les
stos
mov
adc
jmp
push
xor
gs
je
inc
mov
loop
jbe
jns
lods
jl
sbb
jbe
sub
mov
or
stc
imul
cmp
dec
pop
fld
daa
fsubl
mov
sbb
int
arpl
sti
sti
dec
xchg
fcmovu
subl
mov
std
shrb
shr
arpl
fsubs
add
mov
mov
jne
jmp
pop
data16
sub
jge
pop
ljmp
loopne
jl
dec
lahf
fcmovne
pop
mov
mov
fisubrl
fisttpl
sub
mov
outsb
movsl
jnp
and
lods
inc
je
daa
or
inc
cltd
xlat
push
fldcw
push
jne
pop
fsubs
lods
pop
vmwrite
test
ss
mov
sub
mov
jge
mov
push
stos
inc
insl
cmpsb
mov
shrl
in
fiaddl
lahf
test
add
jnp
sbb
cmc
jmp
loope
dec
into
or
jae
xor
daa
xlat
ljmp
sbb
adcl
xchg
mov
xchg
ret
jmp
imul
pop
lds
jge
push
push
jmp
sub
mov
add
inc
add
jae
lock
in
scas
inc
mov
mov
sbbl
imul
or
push
cmp
in
scas
pop
pop
cli
inc
add
add
scas
push
mov
dec
sbb
xor
out
inc
loope
sbb
cli
inc
iret
jp
adc
mov
sahf
rcrb
test
pop
lret
mov
add
imul
repnz
sub
sbb
icebp
clc
cmc
pop
out
and
lahf
or
add
clc
mov
mov
push
movb
pop
push
or
adc
pop
imul
sbb
das
xchg
aaa
cld
mov
call
cld
outsb
hlt
ljmp
dec
call
shlb
mov
dec
fstpt
ficomps
iret
mov
adc
int
push
push
add
jno
dec
in
jg
les
add
push
lahf
jmp
jns
aas
stc
loop
rolb
sbb
popa
lods
lock
bound
outsb
das
cltd
jg
mov
test
sub
xchg
or
dec
inc
cmc
stos
xchg
sti
dec
adc
jne
shll
inc
sbb
hlt
cmp
test
sbb
cli
xchg
cmp
dec
xor
aas
add
lcall
dec
xchg
daa
xchg
pop
arpl
dec
nop
jp
pop
popa
mov
mov
fdiv
in
mov
int3
lret
out
mov
mov
jns
push
mov
out
loopne
pop
and
int3
sub
sbb
fwait
in
enter
xor
inc
sbbl
xchg
adc
push
lds
and
jno
cmpsb
call
pushf
jne
mov
inc
out
xchg
addb
aam
bound
mov
cmpsb
lahf
jo
xchg
mov
mov
sub
repnz
int
lock
cmc
mov
or
cmpsl
sti
test
ret
sti
testl
mov
and
sub
mov
xchg
pop
xchg
dec
mov
pushf
loope
mov
or
dec
rolb
pop
int
cmp
lock
and
mov
xchg
dec
rcrl
adc
push
stc
out
mov
mov
lcall
addr16
loop
mov
dec
and
das
jae
shlb
insl
scas
dec
ficoml
pop
aam
bound
inc
xor
mov
mov
test
sub
xor
xchg
fwait
or
push
jg
in
ja
js
mov
mov
jne
xor
leave
mov
add
inc
mov
push
push
stos
lods
add
dec
add
pop
and
or
addl
and
jecxz
fsubl
or
pop
fbstp
test
sti
pop
mov
fcmovu
push
jg
leave
mov
mov
rcll
decl
aaa
add
rcll
or
push
jp
mov
inc
pop
bound
outsb
shlb
subl
xchg
dec
ret
imul
push
jg,pt
xor
and
cltd
or
movl
hlt
xchg
pop
jne
fsts
or
mov
test
push
pushf
or
mov
sbb
icebp
inc
adc
add
mov
gs
mov
mov
fdivrl
mov
dec
adcl
pop
add
pop
sub
cld
mov
cwtl
lret
lock
fsubr
iret
fwait
les
adc
lds
daa
test
into
xchg
test
int
jmp
lods
jnp
aam
jnp
negl
cs
stos
mov
push
sub
push
imul
ret
inc
mov
mov
ret
sbb
xor
sub
cld
pushf
adc
mov
imul
das
roll
jle
rclb
mov
dec
mov
pop
cli
mov
imul
out
mov
repz
cs
int
mov
and
and
mov
test
clc
or
je
add
push
popl
push
sbb
mov
fdivl
fdivs
push
mov
sahf
data16
adc
dec
push
lods
pop
loope
dec
cmp
mov
cmp
cmp
rcrl
adc
cmpsb
add
sbb
loope
arpl
xchg
dec
sbb
sub
lods
aaa
fdivl
mov
fstl
cmp
sahf
es
mov
pop
rorb
dec
dec
and
cmp
dec
aaa
test
testb
leave
enterw
jb
dec
cmc
ret
sub
lret
add
repz
dec
dec
fs
fs
filds
xchg
es
mov
push
mov
out
pop
mov
ss
pop
arpl
add
dec
aam
adc
es
das
xchg
test
aam
push
arpl
mov
mov
cmp
pusha
loope
cmc
cmp
adc
fdiv
sbb
aas
pop
mov
pushf
pop
or
sub
pop
push
mov
fcomip
scas
and
xchg
mov
clc
pop
aaa
adc
enter
pushf
repnz
hlt
fmull
jnp
in
and
inc
mov
in
popa
jmp
arpl
ret
and
int3
cmpsb
ds
push
jne
ror
mov
and
mov
stos
lock
leave
stos
xchg
lahf
aaa
mov
sbb
mov
nop
mov
imul
push
inc
arpl
outsb
in
mov
xchg
add
sbb
out
or
mov
cltd
and
fldl
push
movsl
push
or
rcrb
xchg
or
jnp
cmp
lods
imul
test
jbe
dec
cmpsl
lea
xor
cmpsl
inc
jae
movsb
and
scas
mov
inc
inc
fs
imul
icebp
bound
inc
and
int
pusha
repz
add
xor
daa
sub
pusha
sub
daa
push
inc
cs
int
decl
lret
pop
loop
imul
cmp
mov
test
test
push
out
sub
ret
shlb
and
ret
xor
jb
outsb
dec
sub
sub
cmpsb
sbb
push
aad
and
fld
nop
cmc
and
sbb
mov
push
ret
cwtl
or
outsb
xor
jge
push
dec
inc
adc
add
cli
add
sub
xchg
xor
sbb
sahf
out
cli
sbbl
idivl
loopne
fdivr
fcomps
bound
ljmp
cwtl
xchg
mov
jb
jne
mov
inc
dec
ficoms
push
jg
inc
call
fwait
lea
fdivr
ret
pop
cmpsb
sbb
jecxz
inc
xchg
out
decb
fnstcw
iret
pop
loop
mov
pushf
add
popw
lods
mov
pop
xor
jmp
lret
mov
or
pop
or
xchg
in
cmpsb
dec
int
fidivs
pop
mov
adcb
idiv
push
movsl
hlt
out
push
rcrl
mov
jge
fistpl
pop
mov
push
xchg
rcrl
inc
call
push
pop
rcr
dec
fstpt
xchg
adc
mov
movsl
mov
jnp
jb
sti
aas
aaa
push
dec
aad
data16
add
iret
call
mov
or
mov
pop
rorb
push
mov
xchg
xchg
orb
in
mov
mov
add
daa
cmp
cld
fucomp
xorb
sub
xchg
xor
push
das
je
sbb
imul
dec
push
jmp
xchg
icebp
cld
xor
stc
in
adc
jl
mov
cwtl
rorl
mov
mov
xchg
sub
cmp
mov
mov
adc
adc
movsl
and
in
pop
nop
pushf
jne
lret
jp
mov
gs
loop
inc
testb
adc
cmpsl
insl
add
mov
aaa
stc
lods
pop
push
lods
push
fwait
ret
data16
fucomi
xchg
ljmp
cmc
test
adc
xchg
jmp
xor
adc
push
stos
xchg
adc
or
push
mov
lock
mov
push
xchg
arpl
jge
addl
scas
adc
cmpsb
scas
pop
cmovno
and
xchg
cmp
mov
adcl
fldl
xlat
data16
add
test
arpl
xor
iret
dec
cs
int
dec
jp
cmp
clc
iret
bound
sbb
gs
mov
out
mov
insl
ss
lock
dec
sub
push
test
pop
int3
jae
shll
jnp
sub
pop
nop
mov
movb
test
hlt
negl
cmp
jecxz
pop
jmp
mov
mov
insb
js
push
arpl
cld
bound
xchg
and
xchg
mov
mov
ret
pop
sbb
cltd
pop
movsl
pop
cmp
sarb
in
xchg
push
int
loopne
mov
mov
outsb
aad
lods
cwtl
test
pop
leave
mov
push
and
je
bound
xor
in
inc
jns
in
dec
mov
push
ds
into
in
inc
xor
mov
push
ja
pusha
mov
pop
cmc
inc
test
aad
push
pop
cltd
ret
fwait
mov
sbb
movsl
fdivl
movsl
loop
decl
xor
jg
pop
dec
mov
cld
fnsave
cmp
mov
jo
into
xchg
jmp
in
cmp
pop
loopne
dec
paddusw
movsb
push
cwtl
mov
int
fisubs
and
adc
pop
add
orb
mov
mov
cmp
sbb
lds
pmullw
xor
or
and
out
xor
push
push
sub
fstps
lcall
mov
push
jbe
mov
push
pusha
ja
mov
cmpsl
lods
inc
push
ljmp
scas
aad
sub
lea
pop
fdivl
mov
sbb
jg
push
addr16
mov
lahf
pop
adc
mov
pop
popf
test
mov
mov
push
adc
mov
fsubs
mov
mov
rolb
push
jl
rolb
sub
loop
xchg
mov
xchg
sahf
cmp
loop
in
jo
add
inc
sub
leave
push
push
mov
ds
dec
inc
mov
mov
push
mov
xor
lods
inc
mov
add
sub
pop
jp
sub
jbe
jecxz
lret
mov
jecxz
filds
push
cmp
imul
adc
inc
ja
mov
daa
stos
rcr
mov
adc
insl
pop
cmpsl
insl
arpl
popa
insb
mov
and
je
inc
push
into
fbstp
dec
sub
fmull
mov
cltd
jmp
test
and
mov
push
mov
cmpl
sub
not
xor
add
or
lods
fistpl
iret
cmp
pop
and
ss
les
xor
jmp
cs
outsb
mov
mov
addr16
aam
ficoml
lcall
or
mov
cmp
and
xor
popa
repnz
andb
xchg
mov
in
test
cmc
mov
mov
xchg
jg
sub
mov
pop
orl
dec
js
push
out
mov
lea
stos
sbb
pop
xor
mov
sarb
insl
lret
jo
mov
push
sub
dec
pop
sub
faddl
jg
push
jno
inc
lahf
or
sbb
mov
adcl
sbb
xlat
mov
mov
xlat
mull
jle
mov
out
repz
rcrl
stos
xchg
inc
loopne
jno
arpl
test
lret
dec
jmp
mov
mov
xchg
test
dec
mov
pushf
dec
pop
mov
mov
es
mov
imul
mov
loop
arpl
imul
das
and
inc
lret
xor
jbe
rcr
xchg
cmp
mov
inc
leave
jl
shll
adcl
add
jbe
pop
xor
test
iret
icebp
loope
mov
popf
pop
jbe
ljmp
jle
rorb
mov
jbe
push
mov
mov
lahf
es
scas
sub
mov
jp
loope
dec
sub
sbb
jp
or
icebp
dec
or
ret
push
inc
pop
loop
push
sbb
or
dec
dec
mov
add
push
fistpll
cld
pop
sbb
rclb
mov
cld
xor
scas
lret
mov
les
jge
sbb
jnp
add
stc
jo
add
popf
stc
sti
dec
and
fimull
sahf
fcompl
fsubs
mov
mov
lods
hlt
lods
in
push
std
adc
arpl
xor
orl
mov
cmp
aam
lret
pusha
cmp
shll
mov
and
pop
jnp
inc
fsubl
fwait
xor
pop
add
sub
testl
or
push
cli
lods
mov
in
push
jo
cli
sub
rcrb
xchg
sahf
mov
loop
sbb
inc
aam
or
pop
in
and
shl
cmp
bound
popa
inc
push
pop
xchg
test
loope
mull
aas
arpl
jle
mov
lods
push
jl
sbb
adc
jnp
data16
pop
das
xor
mov
out
rcll
pop
mov
mov
mov
or
or
dec
inc
test
lret
mov
es
sahf
je
pop
cmp
sbb
aad
scas
xor
fs
xor
ss
mov
sbbb
and
push
sbbl
sub
and
xchg
jbe
xor
inc
add
jb
stos
sub
or
icebp
cmp
dec
mov
and
notl
cmc
cld
fwait
insb
aas
aaa
push
adc
xchg
test
mov
repnz
fiadds
clc
bound
push
lahf
aam
mov
iret
in
test
pop
ret
mov
or
inc
fs
out
loopne
mov
xchg
or
adc
test
cwtl
in
sbb
jbe
add
push
cmp
fcomip
repz
enter
jge
lods
mov
inc
cmp
inc
inc
test
rcrb
push
push
pushw
pop
xchg
jl
push
push
and
data16
jns
pop
sbb
mov
jg
jmp
ds
push
and
dec
mov
xor
inc
out
xor
lahf
sbb
sbb
hlt
sarb
out
or
lock
jg
cmpsb
std
jne
push
jmp
cmpsb
inc
mov
repnz
cwtl
test
aaa
or
in
pop
inc
andb
xchg
sbb
rcr
xlat
cmc
aam
scas
in
push
lock
or
repz
pop
mov
adc
mov
mov
or
xor
enter
mov
in
jne
orb
outsl
pop
mov
push
js
push
cmp
jmp
cltd
aaa
inc
inc
jle,pt
and
ljmp
add
push
call
dec
sub
push
jl
pop
leave
mov
and
test
out
stos
in
lret
xchg
jbe
sbb
repnz
sbb
shrb
cmp
ret
lcall
in
inc
sub
cmp
shlb
lret
mov
insl
push
add
mov
cmp
jp
ljmp
popa
jno
test
lcall
mov
mov
cld
inc
xchg
arpl
adc
test
jnp
push
inc
pop
pop
lods
in
jle
sub
mov
jp
jle
or
repz
sub
dec
rorl
bound
mov
sub
jbe
lods
ja
xchg
stos
clc
or
cwtl
add
in
aas
and
repz
xor
in
cmp
repz
mov
shll
cmpsb
sbb
decb
iret
insl
dec
rol
mov
pop
jge
xchg
std
jo
test
xchg
and
xchg
fwait
and
xor
gs
imul
jmp
rcrl
inc
lock
xchg
jecxz
xchg
ja
xchg
jne
lock
ljmp
loopne
loope
xor
or
sbb
js
aas
js
inc
or
xchg
lcall
jg
repz
push
mov
jbe
mov
xor
sub
sub
xchg
aaa
mov
jge
sub
aaa
popf
les
fs
add
push
cmp
or
sbb
inc
mov
mov
mov
inc
adc
adc
cmc
jns
bound
dec
add
pusha
test
int
adc
int3
jns
jb
arpl
outsl
fwait
ss
outsl
ja
mov
jmp
ds
cmp
lds
add
xchg
mov
and
jns
mov
jg
dec
hlt
pop
mov
jg
cwtl
add
es
insb
jl
mov
pop
out
cmp
sub
xor
mov
mov
in
daa
imull
fbstp
or
ljmp
bound
out
mov
stos
lods
ffree
pop
test
out
add
stos
into
xor
lcall
jo
int3
shll
outsb
push
outsb
mov
cmp
and
add
dec
mov
bound
fstps
fcompl
adc
mov
adc
adc
lret
sub
enter
fnstsw
inc
dec
ficoml
add
hlt
pop
ret
test
sub
add
sbb
dec
call
adc
es
mov
xchg
je
and
loop
cli
inc
xchg
outsb
and
xor
pop
or
cli
jns
sbbl
fistps
leave
adc
mov
inc
dec
and
cmp
jp
mov
cmpsl
xadd
pop
dec
mulb
ss
popf
fldt
mov
mov
fwait
sub
fwait
xor
add
scas
rorl
fistpll
push
and
mov
nop
cmp
in
push
aad
mov
ljmp
icebp
jae
out
in
pop
js
movsl
pop
push
rorb
push
jb
lea
daa
push
lods
iret
adc
cmpb
dec
sbb
mov
fstpl
gs
clc
mov
adc
dec
lods
add
loop
je
and
sbb
push
mov
subb
cmc
cs
mov
push
mov
movsl
scas
adc
mov
std
outsl
xchg
pop
icebp
jne
and
mov
mov
inc
jnp
push
push
jns
sbb
push
mov
les
aas
jp
movsl
popf
xchg
push
pop
mov
lods
cmp
sbb
scas
push
and
je
add
mov
xor
dec
sub
or
push
cmp
pop
repz
jns
loopne
call
sub
mov
cli
jbe
dec
cmp
xchg
out
mov
mov
sub
subb
cmp
xor
push
cs
mov
mov
scas
xor
lret
sub
push
int3
inc
mov
mov
pop
mov
daa
imul
pop
push
add
daa
repz
in
pop
jp
mov
mov
mov
mov
ficompl
dec
adc
inc
pop
fdivs
push
rcll
fimuls
push
mov
scas
imul
sbb
std
pop
or
jp
aam
mov
cmp
adc
sbbb
inc
xlat
enter
xor
sub
dec
pop
push
pop
mov
das
and
outsl
jecxz
addr16
rolb
add
shll
lcall
in
cmpsl
mul
adc
xchg
bound
aas
pop
mov
out
je
scas
popf
das
call
dec
ret
imul
mov
mov
outsb
sbb
and
fdivrl
push
or
rolb
testl
inc
or
xor
data16
fiaddl
dec
cli
std
mov
xchg
mov
out
mov
outsl
aam
sti
dec
int
or
daa
ja
aas
add
and
inc
and
fcom
dec
pop
or
mov
fisttpll
roll
iret
jmp
out
das
and
xor
mov
es
pop
xchg
dec
leave
out
filds
jne
addl
mov
mov
mull
int3
stos
sbb
jno
pop
push
daa
push
mov
and
lret
add
jb
pop
pop
sub
out
fcoms
push
adc
scas
iret
out
int
call
fs
imul
out
adc
imul
enter
loopne
pop
mov
dec
xchg
popa
push
jle
dec
jecxz
or
add
cmp
sahf
js
mov
xchg
sbb
cmp
repz
cli
clc
inc
mov
mov
cltd
imulb
add
and
adc
iret
inc
jge
cmp
or
lcall
xor
dec
lcall
jb
mov
sub
jmp
push
lret
adc
stos
insl
jge
lock
xchg
push
mov
pop
mov
pop
mov
xchg
out
stos
and
and
inc
jbe
push
repnz
nop
cmp
adc
jo
sub
pop
inc
jg
cmc
jnp
incb
mov
loope
push
aaa
js
xor
enter
sub
and
out
in
insb
and
shrb
push
mov
mov
jecxz
dec
insb
and
mov
mov
push
push
icebp
sbb
leave
decb
lcall
insw
lret
cmp
repnz
roll
jae
push
fwait
cmp
mov
arpl
insl
xchg
mov
ja
add
adc
enter
loop
xchg
push
outsl
test
popa
sub
dec
xlat
fdivs
repnz
jg
rcr
adc
mov
cmc
fisttps
out
xor
roll
idivb
mov
data16
pop
imul
jmp
cmp
dec
cltd
out
adc
into
dec
add
popf
inc
pusha
jns
notb
and
movsl
adc
mov
bound
popf
enter
scas
or
sub
sbb
clc
push
lea
xchg
cmp
in
inc
cmp
test
mov
mov
ret
mov
ret
push
hlt
call
inc
sbb
loope,pt
test
daa
jge
rolb
mov
cwtl
xchg
lods
xor
repnz
mov
js
shll
fcompl
ds
dec
pushf
cld
mov
sahf
mov
xchg
je
and
push
add
std
lock
jge
cmpsb
xchg
fwait
inc
push
cmpsl
div
mov
inc
xchg
enter
jno
push
clc
in
lds
dec
sbb
stc
dec
vphadduwq
fcmovbe
dec
icebp
testl
sub
push
jle
xchg
add
dec
pop
scas
mov
cmp
xchg
jo
xor
in
ljmp
popf
dec
mov
stos
add
aas
or
mov
mov
sub
lahf
sub
inc
inc
enter
and
leave
mov
dec
push
xchg
loope
leave
arpl
lds
cmpsl
cmpsl
sub
cs
outsl
ret
ljmp
sbb
add
loopne
ja
jl
xchg
inc
js
pop
and
loope
and
scas
jae
xchg
int3
ja
pop
ja
popf
lret
fimull
rcrl
jg
push
leave
and
sub
in
mov
or
cwtl
lcallw
jg
or
and
push
loop
mov
mov
jb
push
add
cld
inc
mov
xchg
shrb
add
lret
sub
and
cmp
xchg
mov
sbbb
je
cmc
pop
inc
je
cmpsl
fsubrl
scas
mov
dec
fidivs
cmp
loope
cmpsl
or
dec
sbb
fcomps
repnz
movl
pop
hlt
push
lock
xchg
loope
addr16
into
cli
sub
idivl
in
push
outsb
jae
dec
push
pop
mov
pop
stos
jae
stc
jo
lea
mov
fisttpl
mov
jno
aad
mov
pop
pop
jl
mov
jp
add
cs
mov
and
loop
test
jnp
repz
inc
outsl
cmp
add
mov
pop
das
std
pinsrw
push
mov
and
rol
sub
fsubrl
or
hlt
fs
mov
adc
cmc
mov
add
outsb
pop
lods
jae
bound
dec
xchg
cltd
cld
and
push
dec
rcrb
loopne
ror
mov
data16
mov
pop
sub
jle
jmp
dec
jg
aam
xor
add
sub
cltd
dec
mov
dec
xchg
test
xor
dec
shl
jne
and
mov
xchg
subl
in
out
mov
rcll
lock
mov
jo
loop
and
push
jecxz
cmpsl
jp
jecxz
mov
push
nop
pmuludq
jnp
in
loop
movsb
iret
lahf
insb
repz
scas
xor
and
adc
cwtl
lcall
xchg
test
jnp
loopne
addl
mov
pop
mov
pushw
pop
dec
xchg
sbb
sbb
outsl
pop
rclb
sbb
in
pop
sahf
ljmp
loopne
and
test
iret
test
jo
and
jno
cmpl
jecxz
fisttpl
mov
sub
inc
add
aaa
jb
and
lcall
sbb
or
xor
es
movsl
ljmp
sahf
cmp
or
inc
add
movsb
adc
aam
sub
sbb
mov
adc
repz
sub
ljmp
lret
rol
scas
inc
inc
cmc
ret
adc
shl
push
xlat
dec
or
test
cmpsb
rorb
faddl
pop
cmpsl
mov
inc
fwait
cmp
xlat
mov
stc
addr16
adc
jne
mov
jg
call
js
pop
mov
mov
bnd
or
mov
es
cmp
xchg
sbb
mov
mov
pushl
mov
in
stc
stos
aaa
push
in
fsubrp
insl
movsb
and
xchg
inc
mov
fstpl
xlat
bound
dec
cmpb
jmp
int
outsl
rsm
popa
rorb
lods
popf
mov
shll
fprem
sbb
push
test
push
pop
jnp
lock
cmpsb
pop
mov
insl
fidivl
insl
cmpsb
adc
adc
test
xchg
xor
and
addb
mov
cld
jo
push
bound
xchg
movsl
ss
fdivp
inc
sbb
sbb
fistps
push
mov
inc
icebp
push
lods
mov
xor
loop
lcall
push
jnp
aaa
mov
or
or
mov
pop
add
fnstcw
sub
mov
push
fisubl
nop
dec
shll
sbb
and
frstor
adc
sti
mov
gs
xchg
hlt
loope
push
aas
sbb
jb
popa
pusha
mov
clc
mov
addr16
iret
movsb
stc
jno
mov
add
adc
xchg
jo
lret
outsb
test
leave
rol
jbe
cmp
inc
or
push
rclb
mov
in
adc
lock
mov
testb
subb
jbe
pop
ljmp
mov
mov
inc
aas
sbb
inc
mov
ljmp
in
fisubrs
out
push
jnp
in
adc
data16
xchg
scas
inc
es
rclb
xchg
cmc
jl
and
mov
add
mov
cmc
push
enter
shlb
and
xor
dec
pop
pop
shrb
sbb
pop
lods
adc
jmp
xchg
sub
fs
pusha
in
sti
sbb
lcall
xchg
test
sub
icebp
inc
repz
in
or
push
pmovmskb
xor
sub
dec
jmp
dec
divl
bound
inc
push
sub
adc
ss
mov
je
push
loop
mov
and
orl
outsb
dec
jo
cs
sub
shr
mov
daa
cmpsb
jno
sbb
add
jnp
mov
dec
mov
inc
mov
jne
dec
sbb
arpl
sbb
insl
mov
dec
es
ret
movsb
insl
pop
jmp
inc
testl
xchg
andb
popa
aad
sbb
movsl
adc
loopne
inc
jae
pop
xor
and
mul
pusha
sar
loope
mov
mov
movsb
data16
loop
mov
jp
lods
dec
lret
aad
ss
in
jo
xor
popf
push
jg
or
sub
inc
adc
jge
cmp
mov
adc
cmp
push
stc
xchg
xchg
and
mov
or
cltd
mov
addr16
bound
call
pop
cmc
jnp
pop
push
or
mov
pop
adcb
in
push
sub
jmp
inc
js
cmp
out
push
mov
clc
pop
sbb
and
and
or
mov
dec
mov
gs
jg
ljmp
insb
push
insb
je
shlb
int3
xlat
orb
fdivr
pusha
sbb
aaa
mov
jle
mov
into
out
cmp
or
jmp
aam
test
xchg
adc
outsl
and
dec
out
int3
fsubs
mov
jmp
xchg
xor
dec
mov
or
aam
cld
push
loop
pushf
adc
xchg
cmc
lret
pushf
imul
call
adc
cld
outsl
aas
mov
jle
aam
es
xor
xchg
ljmp
hlt
sti
les
pop
pop
sbb
ret
cmpsl
mov
shll
xchg
push
and
mov
aad
jecxz
pop
add
mov
shll
insb
les
sbb
jge
xchg
fdivl
jno
jnp
xchg
enter
std
sbb
or
scas
fistps
call
mov
imulb
cwtl
test
mov
adc
inc
sub
loop
mov
fwait
pushf
cmp
out
dec
sbb
data16
out
lock
sub
movsb
sbb
push
mov
dec
aad
xchg
outsl
lock
or
xor
ret
aam
xchg
adc
xchg
ret
test
add
mov
aaa
xor
insb
fstl
mov
lea
jno
jbe
scas
mov
mov
int
dec
jnp
sub
sbb
xor
outsl
xchg
adc
nop
mov
or
mov
shll
sub
popa
xchg
fists
mov
je
jmp
lret
sbb
repz
jle
jnp,pn
pop
es
aam
aas
mov
sbb
pop
pop
cmp
out
gs
movsb
mov
sbb
fisubrl
imul
sbb
xor
stos
adc
lret
cwtl
xchg
imul
adc
cld
sbb
leave
and
sbb
sub
cs
hlt
ja
cli
fs
lcall
pusha
cmp
bound
dec
stos
cld
int3
xor
in
pop
enter
sbb
adc
jge
ficoms
bound
add
in
test
jns
sbb
repnz
jne
inc
cmpsl
ds
and
cmp
test
int3
test
cmp
add
frstor
bound
jg
push
xlat
mov
in
lods
movl
fiaddl
xchg
cwtl
pop
push
lret
aaa
add
mov
dec
gs
hlt
lret
repnz
sbbb
mov
adc
push
mov
adc
xchg
call
dec
hlt
sbb
or
ljmp
cmp
cs
out
xor
sahf
insl
adc
je
push
push
fidivl
push
aaa
ret
out
push
repz
dec
cmpsl
in
push
or
add
mov
pop
arpl
mov
push
bound
push
dec
jnp
clc
pusha
jo
decl
xor
sbb
push
adc
fcoms
out
ffreep
cltd
cld
sub
mov
mov
dec
pop
jbe
dec
movsl
cmp
pop
jg
and
mov
inc
adc
shlb
add
sub
test
pop
movl
xlat
push
xchg
mov
inc
adc
in
mov
cmp
popf
scas
lock
addr16
cli
scas
pop
cmp
scas
and
nop
and
cmpl
outsb
enter
xor
mov
dec
xchg
sub
adc
cmpsb
lock
inc
pop
jle
lahf
in
or
jmp
mov
cld
jae
xchg
or
shrl
rcll
pop
xchg
fscale
addl
insb
fs
sub
dec
sub
test
xor
add
push
cmpsl
jecxz
stc
xchg
andnps
sbb
insb
push
sub
mov
inc
outsl
or
test
lds
pop
sub
xor
movsl
jns
lret
in
push
push
pop
sbbl
mov
sub
popf
jns
stos
inc
test
mov
cmp
inc
sahf
sub
daa
sub
jmp
rol
xchg
cmpsl
aad
dec
fwait
and
xor
jmp
pusha
bound
in
push
test
sub
pop
ss
mov
xor
dec
jne
int3
cs
jne
push
push
in
jne
cltd
lahf
cmpl
sub
adcl
std
gs
mov
mov
xchg
xor
fcomps
cmp
xor
mov
pop
sbb
out
dec
sarl
repz
and
scas
sub
es
arpl
cmpb
insl
lret
pop
sahf
adc
out
dec
cmp
insb
xor
inc
lcall
sbb
sbb
jecxz
jl
lea
xor
movsl
jmp
push
ret
push
jecxz
mov
mov
sbb
and
out
push
nop
pop
test
lahf
xchg
dec
js
mov
repz
add
jo
in
inc
inc
jae
sbb
loop
sti
lods
ss
mov
sahf
ja
jge
test
and
push
icebp
and
mov
push
popl
sub
and
rclb
das
push
int
and
xorb
inc
test
js
dec
pop
adc
mov
mov
fstp
cmpb
scas
cli
in
xchg
test
fdivl
mov
insl
jns
mov
push
pushf
mov
push
dec
gs
loope
loope
inc
xchg
dec
inc
shrb
stc
mov
out
jecxz
mov
cmpsl
push
outsl
cli
push
hlt
out
or
mov
ret
js
popf
cmc
inc
outsb
jbe
test
jb
sub
adc
fimuls
push
xorl
lahf
jae
pushf
gs
arpl
and
mov
pop
lret
jb
push
add
aaa
jle
mov
sub
push
mov
loopne
mov
dec
cs
jecxz
pop
add
pop
arpl
test
scas
pop
out
pop
sub
clc
inc
dec
js
add
cmp
mov
mov
xor
push
mov
inc
pop
cmpsl
or
adc
arpl
and
stos
inc
mov
rcrl
aas
sub
add
inc
mov
dec
dec
ret
xor
xor
mov
hlt
xchg
jae
data16
xchg
sub
or
dec
mov
scas
mov
xchg
jns
mov
testb
out
outsl
fucom
sub
stos
sbb
sti
lea
iret
leave
jmp
outsb
push
jne
roll
and
xchg
jle
inc
cltd
push
sbb
sbb
cmp
jmp
nop
ds
lea
sbb
mov
and
sbb
dec
leave
xchg
psadbw
push
add
pushf
inc
mov
mov
or
or
movsl
aaa
lea
xor
divb
dec
in
lcall
sahf
pop
mov
loopne
stos
in
push
add
int3
push
into
or
pushf
adc
fistps
fadd
shr
stos
sub
adc
push
cmp
jp
fiaddl
mov
mov
pushf
cld
ret
imul
jnp
es
stos
mov
mov
xlat
xchg
sbb
fcmovnb
dec
les
outsl
gs
arpl
in
xchg
xchg
ja
mov
bound
mov
cmp
aaa
cli
pop
in
push
push
push
jno
sarl
inc
and
sbbb
fistpl
adc
jnp
push
xor
addr16
xchg
jecxz
xchg
jne
lods
scas
cmp
and
xor
fcmovne
mov
and
mov
sub
mov
xchg
mov
mov
fidivl
stc
push
lods
xchg
addb
xchg
and
out
shr
notb
or
ret
adc
popf
push
cmp
rorl
adc
int
insl
xor
popa
inc
sub
inc
mov
jmp
cwtl
js
imul
cs
mov
dec
sub
inc
inc
mov
scas
roll
mov
pop
in
jp
jno
and
loopne
fwait
cmp
dec
repnz
lods
mulb
jbe
or
test
and
mov
inc
cmpsb
jns
and
mov
in
pop
repnz
lock
push
adc
jae
arpl
inc
rcll
push
jp
imul
arpl
test
push
dec
adc
in
mov
lret
int3
inc
mov
mov
aaa
icebp
mov
mov
push
imul
sbb
mov
jmp
movsb
in
stos
leave
cld
mov
shr
aad
cmp
scas
and
in
pop
out
or
repz
pop
mov
cmp
mov
xlat
dec
xor
out
push
inc
decl
insb
loope
mov
cltd
push
mov
andb
adc
push
pop
mov
jg
mov
mov
pop
mov
repz
push
mov
mov
push
sarb
insl
jmp
xchg
mov
std
out
add
xchg
aad
adc
mov
stos
loopne
sbb
pop
mov
cli
mov
add
jg
sti
test
jnp
loopne
sub
cs
jge
stos
fwait
loope
or
aad
insl
cmp
psraw
dec
pop
cmpsl
mov
hlt
mov
xchg
enter
inc
mov
aad
leave
scas
push
mov
pop
xchg
insl
stos
push
out
xchg
popa
xchg
adc
ret
icebp
and
pop
dec
hlt
cwtl
ja
cmp
into
ftst
jbe
jg
cmp
lock
cmp
loope
jecxz
push
xor
jp
hlt
js,pt
lret
push
call
data16
or
scas
mov
mov
mov
loope
mov
dec
sbb
movsb
fnstsw
xchg
push
mov
in
sahf
push
lea
push
push
imul
push
cmp
cmp
leave
scas
stos
xor
out
push
xor
mov
cltd
xor
jns
lcall
inc
aaa
cmp
outsl
mov
or
inc
scas
inc
push
in
push
roll
jge
jo
aaa
xlat
cmpsl
xor
xchg
jnp
mov
aam
xacquire
orb
jl
push
testl
daa
pop
std
sbb
lods
lods
mov
xor
stc
add
lock
mov
and
push
popf
mov
mov
push
sbb
mov
inc
push
xor
lret
je
jge
push
lret
subl
popf
mov
daa
sbb
jecxz
ret
mov
jno
in
cmp
push
stc
ret
nop
in
adc
fnstcw
xlat
xor
pop
jns
outsb
cmpsl
xor
popf
mov
mov
push
std
mov
jecxz
cmpsl
xchg
xchg
repnz
cmpsl
out
or
pop
and
and
movsl
xor
testb
push
xchg
xor
insb
popa
data16
sti
add
pop
jle
mov
xchg
mov
sbbl
xlat
xchg
or
push
sub
fistl
ficoms
loop
loopne
adc
pop
fistpl
sub
and
sbb
outsl
ds
inc
jmp
cmp
push
lcall
lods
jp
add
idivl
sbb
pusha
jns
shll
sbb
adc
push
andl
je
sbb
and
xor
mov
xchg
lcallw
cmpsl
cmpsb
js
les
insl
push
add
mov
ljmp
adc
in
mov
mov
mov
frstor
lea
adc
sahf
push
ds
pop
loopne
js
mov
jecxz
imulb
dec
shl
lret
or
cltd
jne
mov
stos
fstpl
xchg
adc
mov
sti
lods
sbb
sbb
outsl
dec
popa
xbegin
mov
std
or
fidivs
xchg
lods
and
sahf
subl
xchg
fisttpll
sub
dec
pop
fisttpl
mov
mov
fcmovu
rcrb
xor
nop
sub
gs
lahf
aad
or
push
lods
mov
xchg
int
fldl
hlt
imul
adc
cld
imulb
xchg
mov
aas
aaa
jb
imulb
test
push
xor
sub
mov
arpl
ljmp
in
add
mov
and
sbb
mov
pop
cwtl
shlb
xor
xchg
mov
mov
rcl
sahf
jg
sbb
and
push
cmpsl
fs
xchg
loope
ljmp
cmc
mov
and
add
cmp
lret
imul
sbb
and
rcr
add
je
xlat
add
sahf
outsb
cs
xchg
inc
mov
cmp
rolb
cli
aad
movsl
mov
xor
inc
aaa
cltd
dec
cs
out
cmovb
push
or
push
mov
in
jne
sti
pop
mov
lcall
pop
stos
ret
push
dec
cmpsl
das
in
mov
adc
xchg
ret
loope
movsl
xchg
cmpsb
cmp
pop
daa
mov
repz
test
aad
dec
insl
lods
out
je
clc
mov
popa
sbb
mov
mov
sbb
xchg
ret
xor
lods
inc
sbb
notb
stc
sub
popf
jmp
sbb
inc
lret
cli
push
jle
das
pop
aaa
and
nop
out
push
subl
mov
scas
cmp
repz
and
fisubs
mov
sarb
test
mov
lds
push
mov
das
into
andl
mov
faddl
out
push
data16
mov
xchg
sub
jae
popf
leave
pop
mov
pop
sahf
add
call
jnp
test
cmp
jae
mov
jo
lock
sbb
sub
clc
sbb
mov
and
sar
pop
test
mov
pop
push
addr16
push
in
rorl
pop
lret
cmp
adc
ret
icebp
jge
pop
lods
or
xor
sub
dec
xchg
inc
test
or
movb
pop
pop
gs
mov
orb
je
popf
xchg
adc
js
lahf
jne
loop
stos
mov
mov
testl
pop
jmp
and
cld
cmp
push
imull
mov
adc
cmp
loop
jecxz
lods
movsb
xchg
push
sti
imul
cmpsl
cmc
fdivl
cmp
adc
push
mov
aaa
pop
xlat
pop
lahf
lods
fsubr
cmp
test
loopne
das
pop
pop
push
and
je
pushf
mov
test
lods
push
mov
jno
xor
dec
in
insl
pop
je
inc
in
jge
jecxz
pop
mov
loope
and
mov
mov
movsb
iret
std
jmp
cmp
dec
pop
push
insb
push
test
sub
cmp
scas
mov
pop
cwtl
mov
pusha
lret
lcall
xor
lea
clc
hlt
fsts
pop
sti
scas
jae
jmp
push
sub
push
add
sbb
mov
sub
bound
aam
das
adc
mov
add
mov
push
orb
inc
jo
jmp
ret
or
iret
mov
xchg
test
xchg
rcll
xlat
incl
push
jle
int
inc
mov
dec
hlt
out
nop
sub
inc
dec
outsb
jno
adc
repnz
add
test
and
dec
loop
sarl
inc
loopne
jne
push
mov
mov
xchg
or
jne
sar
scas
iret
and
mov
inc
repnz
sti
sbb
mov
jl
aas
stos
and
stos
xchg
gs
inc
aad
lock
stos
cmp
mov
bound
mov
or
cltd
add
sar
push
ljmp
repnz
roll
push
popa
fldt
dec
and
popf
icebp
test
pop
inc
dec
cmpsb
in
pop
dec
cmpsb
mov
gs
imul
pop
rclb
fistpl
orl
popa
and
cmp
rcl
jmp
aad
or
mov
pop
cmpxchg
sarl
nop
add
mov
push
call
mov
push
outsb
loope
jo
sbb
mov
mov
movzwl
and
int3
jae
mov
pop
or
imull
test
js
lcall
orl
and
mov
hlt
and
xchg
push
in
dec
cmp
ds
addr16
in
cld
mov
mov
cmp
testb
inc
into
stc
loopne
imul
mov
outsl
mov
xchg
jbe
jns
cmp
leave
out
int3
adc
loopne
imul
sub
fmuls
mov
outsb
xchg
add
icebp
push
sub
test
mov
pusha
call
cmp
adc
rcrl
rclb
pop
popf
mov
sbb
push
and
fists
imul
xchg
cwtl
sbb
sbbb
inc
in
ljmp
mov
cld
lret
insl
and
push
daa
or
jbe
arpl
leave
imul
cmp
mulb
ret
adc
add
mov
xchg
or
mov
dec
dec
pop
add
add
jo
pop
cmp
std
lods
fcomps
hlt
icebp
mov
xor
sbb
rcr
push
xor
and
push
insb
repnz
jg
inc
loop
stos
clc
test
sbb
das
mov
clc
sub
mov
pop
dec
ljmp
sbbb
fwait
ds
xor
sbb
test
mov
xor
scas
les
aas
or
repz
out
jae
in
imul
sbb
mov
jle
cmp
pop
jle
loop
rorl
lret
jae
push
arpl
push
test
pop
mov
mov
popa
aaa
insb
ds
mov
lds
icebp
lret
cmp
push
mov
mov
pop
imull
cmpsl
testb
fs
fisubrs
inc
pop
adcb
xchg
sub
jno
data16
dec
cmp
js
jae
insl
cmp
mov
push
mov
sti
inc
sbb
stos
cs
js
pop
movsl
pop
lret
push
or
or
sbb
push
inc
lea
or
movsb
aad
into
jb
hlt
ss
ja
int3
push
aaa
enter
lods
fs
fstpt
iret
jmp
jo
enter
mov
xor
fldt
fcmove
mov
and
fcoml
pop
lahf
imul
lea
testb
or
push
cmp
in
jae
cmp
jae
in
mov
lret
add
jne
inc
pcmpgtw
pop
arpl
mov
lret
or
dec
pop
push
negl
xchg
jmp
js
cmp
cld
push
test
push
pushf
xlat
cmc
cmpsb
test
or
rol
cmp
pop
add
fwait
arpl
enter
or
pop
and
pop
rorb
push
ss
out
movsb
neg
fwait
push
dec
jae
aam
nop
add
or
fsubrs
pop
add
mov
cltd
sub
in
push
rcrb
dec
or
xchg
bound
imul
sbb
push
sbb
ds
out
pop
addr16
bound
push
cmp
jne
mov
mov
inc
pop
hlt
sbb
mov
dec
stos
clc
rclb
or
xor
fwait
xchg
out
notl
dec
jo
popf
roll
mov
das
insb
xor
mov
dec
icebp
lds
testb
aaa
sub
bound
mulb
sti
movsl
lods
mov
orb
jmp
or
faddl
xor
dec
cmp
scas
lret
sub
push
jb
lods
pop
xor
or
pop
out
lret
js
xchg
jmp
and
dec
and
out
shrb
lds
xchg
push
push
rolb
imul
ret
pop
sbb
fiadds
and
ret
xor
jp
sbb
sbb
test
and
stos
push
mov
jb
movlps
mov
jns
shlb
loop
sbb
push
push
in
xor
mov
cmc
ret
lahf
mov
push
fadds
aas
inc
cmpsb
clc
inc
adc
hlt
pop
or
rsm
dec
dec
je
pop
mov
insl
aam
inc
mov
iret
mov
pop
xor
in
fwait
mov
fwait
inc
jle
mov
push
fxam
inc
dec
movsl
fcompl
inc
push
lcall
xchg
repnz
lods
pop
test
xor
test
inc
lcall
xor
xchg
push
mov
popa
outsl
arpl
mov
cmp
out
xchg
jge
xor
xchg
jmp
inc
dec
cmp
out
inc
pop
out
shll
push
cmp
rol
mov
jnp
fsqrt
inc
stos
add
jmp
mov
pop
mov
movsb
int
lcall
orb
mov
mov
dec
mov
mov
jb
cmp
mov
push
jns
insl
xor
sub
xchg
inc
push
sti
sbb
les
mov
js
cmp
jbe
xchg
aam
sbb
mov
in
mov
fistps
mov
and
adc
into
or
sahf
imul
or
push
loope
and
jo
pop
jo
push
pop
cmpsl
pop
xor
mov
inc
sahf
cmpsb
lds
dec
mov
fmul
inc
mov
cwtl
mov
mov
add
imul
das
ja
ret
mull
popf
and
jbe
fnstsw
pop
and
sub
push
push
inc
test
adc
stos
mov
cmpsl
imul
mov
sub
push
mov
inc
push
jbe
xchg
sbb
sub
fwait
pop
push
iret
lahf
iret
call
jo
cwtl
loopne
frstor
mov
push
adc
mov
push
icebp
rcrl
lea
jmp
lret
adc
mov
jecxz
mov
ja
lods
dec
and
dec
inc
cli
mov
fucomip
nop
daa
lds
and
mov
aad
imul
dec
negb
cmp
lcall
fs
pop
jno
aas
mov
pop
aaa
push
xor
lods
jns
stos
test
cmp
sub
fistps
push
andb
cmc
adc
jnp
mov
inc
xor
xor
test
jno
daa
push
js
hlt
pop
sbb
in
push
inc
and
leave
push
imul
xchg
subl
adc
sub
sbb
sub
push
out
imul
cmc
test
outsb
les
add
cmpsl
fbld
cmp
mov
insb
mov
xor
and
fimuls
arpl
loope
mov
inc
sub
cld
arpl
jne
test
or
gs
xor
xor
js
adc
popa
js
mov
and
jb
push
fldenv
scas
jno
popa
repnz
or
lret
push
mov
les
lahf
mov
dec
out
add
inc
jge
jbe
cmp
sbbl
jbe
sahf
mov
scas
addr16
out
push
and
aas
jge
ficompl
bnd
repz
loop
pslld
or
xorl
shl
mov
sti
add
push
addr16
mov
mov
mov
ljmp
mov
mov
aad
dec
cli
lock
xor
or
xlat
xor
adc
xchg
mov
into
stos
pushf
cmp
xor
ss
imul
or
push
and
orb
and
icebp
or
arpl
fmull
mov
fldenv
cwtl
sbb
into
scas
add
imul
sub
mov
in
loop,pt
in
and
lret
mov
mov
jp
xorb
adc
nop
shlb
dec
popf
rcl
pop
inc
jecxz
dec
cwtl
xchg
push
pop
aam
push
xor
ja
fcomi
clc
fnsave
xchg
fistps
sbb
sahf
scas
push
pop
lahf
loope
aaa
test
inc
stos
mov
mov
sub
adcb
scas
cmovbe
sbb
das
adc
jns
mov
pop
rcll
xchg
push
loopne
mov
inc
ds
repz
sub
loop
data16
insl
outsl
xor
aad
adcb
sub
add
sbb
daa
inc
add
and
ljmp
ret
iret
rcll
subb
lods
bnd
fcomp
and
cs
addl
js
sahf
adc
add
orl
dec
and
popf
adc
dec
mov
cmp
or
mov
push
out
or
inc
mov
dec
inc
jno
lret
dec
mov
sti
movsb
sbb
test
mov
fidivs
xorl
push
lret
mov
mov
mov
cmpsl
pop
inc
mov
push
loop
xchg
xor
les
pop
test
sbb
inc
jo
mov
add
shll
xchg
out
inc
rcrb
mov
sbb
xchg
and
mov
mov
lods
xchg
mov
stos
std
in
je
jnp
pop
inc
add
add
lcall
or
cld
sub
ficomps
jb
jmp
std
sub
data16
fs
xchg
arpl
add
dec
cltd
aam
sbbb
xor
cwtl
or
and
cmp
int
std
pop
imul
imul
fildl
pslld
mov
repz
jo
aas
mov
mov
divl
push
dec
cld
xor
xchg
mov
shrl
lret
arpl
add
movsl
lock
mov
xchg
bound
mov
push
inc
outsb
fucomi
nop
cmp
mov
es
popa
daa
sub
inc
adc
dec
add
push
fnsave
jge
fnstsw
push
sahf
jle
fadds
lret
mov
int
push
cwtl
mov
pop
mov
pop
mov
dec
pop
in
sbb
pop
outsl
pop
xchg
or
loop
jnp
rcl
pusha
sahf
es
lahf
ror
adc
mov
pop
mov
inc
add
pushf
add
dec
pop
fisubrs
mov
shll
cs
cli
adc
add
iret
outsb
das
in
cmp
push
mov
and
repz
aam
xlat
cmpsl
inc
mull
andb
dec
sub
and
bound
js
data16
test
xchg
outsl
jbe
dec
and
sbb
out
ficompl
inc
push
dec
pop
cmp
add
incl
fistpll
out
inc
aad
ja
xchg
call
in
pop
int
xor
in
adc
xor
mov
pop
mov
add
xchg
movsb
dec
xchg
std
dec
xor
pop
loope
mov
inc
sbb
adc
mov
aaa
cli
push
hlt
or
out
inc
sbb
je
mov
jmp
add
imul
adc
adc
mov
movsl
sbb
push
lds
push
into
jge
and
iret
jno
add
in
fiaddl
popa
je
mov
lea
movsl
jle
jge
cli
jns
fdiv
dec
sub
mov
sub
push
inc
cmp
test
stos
aad
ret
int3
xor
add
push
mov
rclb
scas
mov
mov
ja
mov
bound
inc
icebp
in
aam
push
data16
mov
daa
pop
mov
xor
pushf
mov
int3
rcrl
dec
xorb
sub
pop
pop
mov
in
fs
test
loop
sbbl
adc
jp
lret
lahf
push
iret
cmc
lds
cmp
or
test
pop
movsb
leave
jo
pop
mov
mov
ret
lahf
and
test
jo
les
mov
mov
cld
mov
lea
cmp
ret
fcmovnu
dec
aad
movsl
push
jo
enter
jg
arpl
lret
sbbl
fs
push
cmp
jmp
mov
cmp
jle
sub
mov
loopne,pt
aam
in
enter
aaa
cmp
jb
add
inc
sahf
xchg
mov
rcr
lods
loop
jno
fadds
mov
dec
sbbb
mov
test
dec
ds
or
loop
ror
cmp
mov
mov
xchg
pop
jb
fs
push
stos
mov
mov
inc
and
ljmp
fcoml
popa
hlt
lock
and
test
imul
into
fdivr
push
test
out
inc
push
stos
cmpsb
divl
push
adcb
mov
or
mov
fwait
push
adc
xchg
push
xor
in
sub
and
pop
add
cmp
mov
aaa
rcll
ret
mov
outsb
popf
fs
mov
aam
push
out
loop
daa
out
out
stc
pushf
sti
cs
in
sahf
ljmp
fcomps
in
adc
cmpsb
je
ficoml
int3
adc
dec
clc
xchg
push
push
leave
and
leave
and
lods
sahf
sbb
outsb
imul
ds
fmull
frstor
pop
js
lret
cmpsb
or
sbb
das
or
mov
std
les
pop
fucomp
cmp
xchg
faddl
ja
loope
std
xor
movsb
jle
jmp
sahf
stos
js
adc
mov
js
push
imull
loopne
xor
addr16
push
out
popa
es
xor
outsb
mov
jno
test
lahf
xchg
xlat
popa
lods
scas
in
dec
sahf
jecxz
sub
and
in
sub
jnp
hlt
mov
jb,pn
fwait
cmp
mov
inc
call
jp
or
ret
je,pt
add
jo
pop
daa
popa
into
mov
aam
imul
xchg
dec
in
into
jecxz
cmp
push
mov
insl
clc
adc
sahf
push
push
addr16
test
inc
lods
outsb
pop
sbb
mov
adc
sbb
pop
adc
push
pop
in
in
xchg
fyl2x
adc
mov
mov
aaa
fsubl
cmpb
xchg
arpl
stos
cwtl
mov
or
hlt
cmp
xchg
push
mov
dec
ret
cmpsb
out
out
sarb
push
and
pop
mov
xchg
jmp
aad
xor
jae
push
and
adc
adc
xor
mov
loopne
cmp
and
out
or
cs
sub
outsb
xchg
lods
loope
push
adc
bound
adc
or
cmp
add
ret
insb
fistl
mov
outsb
xchg
push
xchg
cmp
call
mov
ljmp
hlt
inc
out
jae
out
sbb
ds
adc
in
lods
adc
nop
in
xor
dec
adc
pop
add
mov
cmp
sub
push
rclb
outsb
jmp
lahf
or
adc
clc
push
fisubl
iret
add
jge
or
xlat
mov
lahf
jno
ret
insb
mov
mov
cld
in
mov
imul
jp
cmp
lahf
pop
pop
push
jbe
sbb
sub
popa
scas
repz
in
ss
mov
inc
jmp
or
cmp
es
jg
mov
lahf
mov
pop
adc
lock
movsb
clc
dec
xchg
pop
add
in
push
into
cs
jne
mov
xchg
sub
ret
test
das
js
scas
xchg
xchg
lcall
add
mov
mov
or
inc
mov
ret
xor
pop
outsl
pop
jg
cmp
xchg
add
ret
mov
xchg
dec
adc
es
and
pop
inc
push
in
push
shrl
mov
hlt
jmp
sbb
dec
jns
mov
xchg
stc
sub
imul
adc
repnz
inc
inc
outsb
insb
fwait
mov
cwtl
mov
add
mov
cmpsl
jle
sbb
pop
jbe
movsl
jmp
adc
pop
xor
mov
adc
mov
dec
sbb
icebp
inc
add
cwtl
mov
dec
into
lods
push
popa
push
adc
sub
adc
mov
add
stos
push
xchg
xchg
push
out
jl
nop
xchg
dec
cmp
les
cmp
mov
cmpsb
cmp
bound
in
fistpl
rcl
push
xor
stos
sbb
negl
xchg
stos
dec
mov
mov
sub
jno
jno
pop
bound
cmpsb
xchg
mov
mov
maskmovq
divl
mov
leave
call
pop
stc
xchg
outsb
pop
jecxz
add
mov
in
and
fdiv
push
jb
add
out
shrl
data16
adc
fwait
adcl
rol
loop
lret
nop
jg
aaa
add
js
sbb
ljmp
mov
or
jnp
add
cld
mov
add
push
pop
fnstcw
push
adc
pop
insb
dec
or
jns
mov
and
ficomps
jge
jmp
les
aad
imul
ret
and
inc
andb
sbb
push
pop
dec
cmp
mov
push
mov
imul
push
xchg
add
test
insl
out
incl
icebp
sbb
xor
add
inc
enter
mov
ficoml
sbb
pushf
insb
xlat
pop
sbb
xchg
adcb
sti
mov
xchg
daa
cs
inc
mov
pop
mov
push
or
sahf
fwait
xor
jbe
fcmove
jge
push
testb
cmp
cld
adc
mov
dec
add
addb
ret
sbb
ss
sub
mov
jbe
push
arpl
out
xor
jge
test
nop
mov
lahf
lret
xorl
dec
dec
js
sbb
fistpl
incb
dec
js
or
dec
js
jb
nop
out
dec
cmp
sahf
lahf
mov
pop
addr16
xchg
push
ja
addr16
adc
xchg
cwtl
mov
lcall
das
cld
loope
or
mov
les
xor
xor
ds
mov
and
or
icebp
xchg
mov
test
arpl
pushf
cs
sbb
push
add
xor
ja
lds
call
test
sub
mov
test
jb
fisubs
or
ret
out
add
ja
femms
lods
loop
pusha
hlt
mov
notb
inc
mov
and
mov
mov
les
mov
cmp
nop
mov
pop
imul
loopne
jg
pop
aam
addb
fbstp
mov
sub
mov
cmp
ret
jmp
jb
add
data16
stos
out
xor
push
movl
jmp
and
aas
inc
or
adc
adcl
cmp
mov
shr
insl
xchg
mov
sbb
leave
cmpsb
push
mov
out
push
ja
xor
xchg
sub
cmp
mov
stos
js
inc
sub
sub
sbbl
or
push
push
xchg
movsl
loopne
adc
lods
stc
push
mov
addr16
repnz
xchg
push
xchg
stc
js
push
shll
pop
mov
mov
mov
push
adc
test
add
xlat
push
movsb
or
fimull
sub
or
inc
stos
fstpl
xor
xchg
int
outsl
fs
jb
xor
sub
add
lret
out
adc
das
cmp
adc
pop
xor
js
out
add
push
fcompl
sbb
test
imul
sbbl
or
shll
pop
jmp
out
into
xchg
xchg
cs
push
stos
or
and
ret
add
int3
jno
dec
lret
cli
pop
adc
outsb
adc
push
mov
or
mov
add
push
in
mov
out
or
lret
and
lahf
or
cmc
xor
xlat
or
insb
daa
movsb
sub
iret
cmpsb
or
xchg
out
mov
pop
aad
movsl
add
push
mov
pop
loope
sbb
in
ja
pop
jae
shll
pop
lods
and
test
in
jns
mov
push
ja
shrb
mov
mov
adc
cltd
bound
jbe
adc
pop
mov
xor
js
je
mov
leave
dec
xchg
xchg
sbb
xchg
dec
or
insb
push
dec
data16
das
xor
pop
mov
cmpsl
orb
mov
popf
xor
cmp
mov
outsl
mov
aad
int
inc
jge
push
jo
or
pop
xchg
mov
mov
sub
out
sbb
dec
mov
sub
or
cmpsb
aas
push
dec
stos
out
fldcw
or
shrb
bound
fs
icebp
int3
push
adc
xor
pop
out
pop
push
xchg
mov
cmp
nop
push
aad
outsl
arpl
icebp
lea
filds
into
mov
rolb
dec
rcrb
jne
ds
and
pusha
dec
jae
and
inc
daa
cmpsb
es
iret
and
jno
cmp
jo
sbb
or
cltd
in
jle
xchg
imul
xor
sbb
aam
mov
fnsave
inc
loopne
fs
in
lret
jle
imul
jge
jns
mov
or
test
lret
aas
and
pusha
shlb
mov
fdivr
mov
lcall
inc
arpl
sbb
insl
xor
xor
cltd
mov
fld
lea
lea
xchg
ret
lds
xchg
popf
and
xchg
insb
fcomps
push
mov
in
insb
cmp
in
adc
repz
loopne
shrb
mov
out
imul
sti
sahf
inc
jno
push
sub
imul
or
sbb
pushf
sahf
or
or
mov
aad
mov
mov
shlb
es
loop
pusha
or
inc
inc
inc
mov
sar
xchg
mov
in
xchg
sarb
clc
and
inc
mov
sbb
mov
mov
jge
loopne,pt
gs
jge
test
and
repnz
aaa
dec
imul
imul
jne
je
pop
addr16
mov
pushf
dec
and
adc
int3
aad
lahf
adc
jg
cmpl
xor
fcomps
inc
outsl
pop
add
fdivrs
std
cmpl
dec
out
dec
sub
mov
iret
xchg
lea
or
rorl
xor
aad
fbld
cmp
inc
cs
lahf
sub
cmp
push
mov
shl
gs
mov
jp
jecxz
jp
add
out
das
jo
cmc
xchg
mov
and
dec
mov
lods
xchg
mov
jae
sub
push
cmp
mov
imul
xchg
nop
les
adc
xchg
imul
das
ja
push
pop
ds
xor
sbb
mov
pop
scas
arpl
mov
jns
dec
jbe
shl
xor
cmpsb
push
lea
jo
enter
push
arpl
pusha
xchg
loopne
insl
mov
ror
insb
jno
fidivl
mov
stos
clc
divl
push
xchg
jbe
stos
filds
fidivrl
mov
cwtl
push
jnp
xor
jge
mov
sub
sub
scas
out
and
and
dec
test
add
cs
lret
imul
rcrl
outsl
ljmp
in
push
outsb
xchg
mov
fucomip
adc
ror
cmp
inc
inc
ds
push
xchg
ds
pop
aas
dec
jnp
lea
je
push
jmp
lcall
xlat
push
pop
enter
scas
scas
xor
sbb
test
lahf
movsl
pop
mov
add
push
test
fstpt
and
mov
ret
movsb
je
dec
aas
sbb
sahf
ss
js
loop
xchg
sub
dec
xlat
mov
and
fisubrl
popf
push
sbb
adc
xor
int3
daa
xor
int
scas
fisubl
pusha
das
mov
rcr
outsl
xor
mov
add
mov
adc
cmp
or
xchg
inc
outsb
jp,pn
outsl
decb
shrl
or
push
dec
insb
mov
sub
scas
cmp
shl
add
orb
enter
push
stos
dec
in
pop
pop
push
fdivrl
push
cld
add
fs
dec
rcll
mov
cmpsl
push
call
inc
je
sbb
icebp
mov
cmp
fisubl
adc
andb
lcall
in
mov
popa
cmp
fwait
cmpsb
xchg
addr16
rorl
pop
push
gs
mov
ljmp
push
or
out
mov
pop
xchg
xor
inc
outsb
fistps
mov
pop
mov
mov
jmp
or
mov
mov
xchg
lds
out
jne
ja
iret
sub
xor
sub
das
popf
and
push
mov
pop
cld
xchg
xlat
out
sub
xor
pop
pushf
arpl
sub
mov
cmpb
pop
aaa
jg,pn
pushf
sub
outsl
or
insl
or
ljmp
or
loope
cmc
shrl
jmp
push
push
rcll
popl
clc
and
mov
sub
cmc
pop
xchg
add
add
dec
push
pop
inc
ror
bound
pop
inc
decb
mov
add
push
cmpsb
test
inc
xchg
mov
loopne
jnp
add
fsubs
add
insl
bound
test
arpl
xchg
inc
insb
mov
mov
and
outsl
jle
inc
add
push
insb
add
loop
push
inc
lahf
adc
int3
stc
repz
push
ds
adc
hlt
mov
test
mov
insb
add
lret
inc
adcl
xor
pop
lret
xchg
imul
stc
adc
test
pop
mov
dec
out
lods
cmc
mov
mov
test
cli
sbb
or
cmp
mov
pop
aaa
gs
ret
mov
stos
lds
push
aaa
mov
in
pop
ja
sti
and
adc
clc
or
movsl
fdivs
xchg
pop
repz
xchg
inc
movsl
or
mov
mov
mov
mov
ficomps
ss
lds
shl
mov
sbb
xor
out
add
push
and
icebp
push
shlb
push
or
int
test
ret
or
xchg
divb
sub
and
fldt
push
pushf
daa
or
inc
xor
xor
fcompl
lea
dec
shl
rcrl
orb
jb
jb
es
scas
adc
xchg
ljmp
dec
int3
pop
fimull
sbb
dec
enter
sub
cmp
and
aaa
mov
mov
adc
popa
jmp
mov
xchg
mov
adc
mov
in
jp
icebp
fidivl
aaa
cs
cmpsb
push
clc
push
mov
addr16
skinit
xchg
cmp
ja
jb
push
es
mov
pop
inc
shrl
shll
adc
push
mov
stos
icebp
mov
ffreep
mov
iret
std
jbe
jge
imul
mov
inc
or
jmp
inc
jl
push
mov
mov
mov
jo
shlb
ja
push
mov
lahf
sahf
jg
gs
fwait
mov
sar
out
cmp
push
icebp
out
loop
xchg
pop
jmp
gs
aam
sub
push
jns
in
adc
pop
cmp
pop
cmp
and
ror
mov
je
push
rcll
jne
loop
fcomp
pop
jmp
lods
std
and
sub
cmp
or
in
adc
and
cmp
into
sbb
hlt
pop
and
dec
dec
ret
shrl
cltd
mov
shl
sub
push
pop
mov
sti
outsl
mulb
loop
or
push
and
lret
push
adc
test
scas
repnz
movsl
inc
adc
jo
jg
mov
or
loopne
sbb
lods
add
clc
cld
add
mov
aam
das
cmp
push
inc
adc
and
jns
bound
or
daa
adc
stc
pop
cmp
and
repnz
push
xor
leave
out
push
outsl
and
aas
or
jl
pop
ljmp
pop
fmull
add
dec
sbb
cmp
jbe
inc
inc
mov
lock
cmp
pushf
in
icebp
fidivs
mov
sbb
sarl
or
repz
cmp
test
daa
icebp
mov
pop
push
pop
ja
je
in
movsb
pusha
or
out
sarb
inc
stc
pop
and
insb
sbb
imul
jnp
lods
adc
mov
negb
jecxz
lods
jle
das
xchg
sar
sbb
bound
test
int3
mov
dec
push
movsb
jl
scas
push
dec
aad
pop
jo
xchg
push
cmp
adc
insb
add
mov
frstor
push
xchg
mov
insl
mov
fcompl
es
mov
cld
movsb
in
sbb
popa
sbb
push
push
mov
adc
arpl
insl
xchg
dec
ds
imul
push
pop
mulb
mov
push
loop
test
mov
decl
rorl
add
lcall
dec
lahf
arpl
push
lcall
push
push
sub
xor
pop
lahf
mov
cmp
orb
fdivrs
in
pop
cmp
push
div
arpl
pop
cli
ficoms
sti
insb
mov
inc
or
xlat
push
test
xor
inc
cmp
lcall
jbe
sbb
ret
scas
add
inc
call
cwtl
ljmp
push
add
pushf
jp
imull
pop
lock
sbb
dec
fsubrl
into
cmp
inc
jbe
adc
sub
pop
xor
push
das
cmp
fsubr
mov
mov
cmp
jo
rcr
icebp
mov
loop
dec
push
cmp
or
pop
test
xchg
fwait
sbb
fucomip
inc
pop
mov
jge
xor
pop
mov
in
cmp
and
cmpsb
dec
imul
sbb
arpl
mov
testl
sarl
sub
loop
jnp
mov
in
jbe
pop
idivb
in
cmp
je
pop
push
push
sbb
mov
xor
push
xchg
push
adc
mov
or
repz
mov
in
add
pop
pop
flds
inc
cwtl
mov
jbe
and
shrb
aas
mov
in
xbegin
pop
std
push
lods
fs
int
je
lods
sbb
adc
mov
loope
rorb
mov
adcb
rolb
push
test
mov
adc
cltd
add
ja
adc
push
lock
fldcw
mov
mov
inc
cmp
pop
test
cmc
rep
xchg
mov
mov
fcmovbe
jae
mov
pop
fcompl
es
jl
pop
and
aaa
out
and
inc
cmp
addr16
xlat
mov
sub
push
repnz
mov
jmp
shll
xchg
ss
rolb
call
adc
pop
stos
or
cli
scas
and
hlt
xchg
fidivrl
adc
mov
sbb
xchg
shlb
sub
test
pop
fbld
imul
add
lret
cmc
push
aas
jo
ret
sbb
sbb
push
xor
decl
push
inc
pop
fildl
lds
jecxz
mov
stos
ficomps
mov
les
aaa
loopne
pusha
in
sar
pop
hlt
or
inc
lret
loopne
jbe
imul
push
lods
shl
roll
loopne
and
pop
imul
je
xor
push
shll
test
cli
pushf
xor
cmp
in
push
add
sbb
mov
sbb
jmp
sub
and
lahf
stos
imul
rcll
jg
mov
jbe
sbbb
xchg
stos
jno
xor
fbstp
mov
pusha
jl
cmpsb
mov
enter
fmuls
sbb
jno
push
pusha
mov
hlt
xor
push
jg
nop
xor
test
bound
in
fcmovnb
fisubrs
add
jno
xchg
sbb
pop
jp
inc
fwait
cmc
mov
ficomps
stos
mov
xor
adc
pop
int3
mov
out
jb
adc
in
cmp
mov
add
lret
adc
aam
shll
cltd
push
das
loop
inc
daa
mov
mov
sarb
orl
ljmp
xor
cmp
and
pop
call
je
dec
clc
in
jle
fsub
sub
aam
push
mov
add
push
daa
push
mov
xor
aam
xor
scas
mov
jg
arpl
xor
daa
sbb
es
cs
mov
and
xlat
mov
outsl
adc
daa
inc
xlat
clc
cwtl
movsl
xlat
fsubl
hlt
mov
inc
dec
les
iret
sahf
dec
lock
in
add
nop
cmp
sti
pop
gs
movsl
aaa
mov
adc
ss
sbb
out
cld
sbb
arpl
int
sbb
jecxz
aas
cli
arpl
pop
int3
jmp
fcompl
stos
add
stos
iret
add
or
pop
mov
mov
or
mov
call
xor
mov
adc
cmp
push
cmp
mov
lahf
sub
sub
sahf
dec
pop
jbe
mov
push
mov
and
sti
cmp
or
nop
cmp
mov
nop
lds
daa
pop
repz
add
out
lock
inc
adc
mov
movsb
enter
sar
shl
leave
ret
cli
lods
test
xlat
enter
ljmp
push
icebp
cli
push
mov
leave
xor
mov
pop
fsubp
movsb
and
insl
mov
movsb
hlt
push
dec
mov
test
loop
int
pop
push
gs
xorl
subl
inc
mov
mov
mov
jne
mov
jne
mov
jns
mov
or
push
aam
push
dec
mov
mov
mov
pusha
daa
int3
fdivl
or
lds
sub
sub
jno
ds
push
add
sbb
add
fstl
out
loopne
jle
inc
sbb
hlt
and
cmp
out
jl
xchg
push
loope
pop
pushf
mov
jno
adc
mov
xchg
fidivs
sbb
repnz
call
jae
rolb
sbb
xchg
jp
pop
les
cmp
pushf
sub
mov
imull
popa
mov
xchg
scas
jle
mov
popa
sub
push
push
inc
adc
add
cltd
negl
lods
shrl
cld
js
mov
pop
mov
xchg
das
or
ljmp
pop
cmp
sbb
icebp
inc
outsb
sbb
adc
mov
lret
jmp
mov
xchg
mov
ficoml
xor
mov
adc
inc
cmp
cs
cs
and
fistpl
stos
loop
enter
in
shlb
repnz
add
and
add
sub
add
adc
jp
push
lahf
jb
stos
cmp
mov
mov
xor
sub
xchg
dec
fs
pop
inc
push
jae
pusha
cltd
pop
xchg
cld
sbb
loopne
lcall
lods
insl
jge
pushf
xor
into
push
cs
aam
or
jg
cmp
cmp
in
jbe
leave
jle
xchg
fadd
jae
aaa
push
popl
mov
jl
push
call
or
scas
xor
push
iret
divl
sbb
mov
ss
les
es
and
aas
mov
iret
test
lods
std
stos
lcall
or
daa
sarb
adc
mov
mov
lahf
hlt
adc
sub
icebp
pop
mulb
aad
mov
mov
in
xchg
fwait
or
popa
and
mov
add
scas
mov
push
xor
push
mov
lret
fst
cmp
jmp
pop
push
pop
jp
imul
mov
or
xchg
popa
into
gs
mov
cs
jbe
mov
lcall
cli
adc
test
fsubrl
imul
fs
and
or
jle
xchg
pop
mov
out
jno
mov
bound
mov
imul
jmp
mov
mov
dec
cmp
leave
loop
dec
int
cmpsl
xchg
in
in
adc
dec
push
push
jae
xchg
mull
sub
or
stos
out
dec
or
out
xchg
push
sub
pop
into
or
mov
pop
add
pop
inc
imul
jne
adc
mov
cmp
xchg
sub
pusha
or
loopne
scas
ficoms
in
inc
jbe
lea
ret
int
jp
mov
stos
jle
sbb
pop
dec
cmp
loope
mov
loop
push
xchg
push
lret
jmp
repnz
ds
lds
shl
das
sbb
xchg
pop
rol
cmp
inc
and
scas
and
mov
push
mov
js
jl
fdivrl
repnz
inc
hlt
aas
sbb
mov
pop
clc
cmpsb
add
bnd
jnp
fs
fdivs
inc
fistps
jmp
mov
cmpsl
imul
inc
loope
xor
push
lea
stos
ret
xchg
mov
fs
sti
lcall
cmp
and
pop
movl
mov
mov
leave
add
leave
aam
xchg
cltd
pop
popf
aas
sub
in
sbb
push
hlt
out
aam
mov
inc
mov
stos
int3
xor
cmp
or
jno
push
fdivp
aas
sub
xchg
push
push
push
and
les
int3
cmp
xchg
fildl
push
push
aas
mov
dec
push
mov
push
imul
cli
imul
xchg
mov
in
sti
iret
inc
adc
jo
lds
in
ss
push
fiaddl
sbb
inc
mov
xor
or
inc
outsb
mov
cltd
jo
fwait
mov
int3
aaa
fldt
test
and
out
test
cmpl
lock
repnz
ja
xchg
sbb
mov
xchg
jae
test
push
jge
call
imul
sub
mov
rcr
andl
or
push
pushf
out
push
addr16
add
outsl
xchg
je
out
out
xor
mov
pop
lods
in
outsb
ret
test
inc
cmp
leave
and
add
adc
adc
mov
faddl
cmp
sub
out
or
mov
js
leave
out
pop
jecxz
and
loope
xchg
or
loope
sbb
dec
test
ljmp
inc
mov
sub
shll
sbb
sbb
sbb
mov
leave
movsb
push
jbe
sub
lret
ja
ja
xchg
mov
rclb
pusha
loop
jno
mov
pop
in
cmp
lret
jmp
shll
sub
lahf
out
lcall
iret
mov
fsubr
dec
nop
es
cmp
das
jge
leave
add
loop
inc
xchg
or
outsl
notl
push
lret
rcll
push
add
mov
lret
mov
arpl
mov
popl
fadd
jg
lret
repz
fmul
ja
push
mov
test
sub
pop
enter
cld
adc
divl
lods
sti
mov
cmc
jge
sahf
lret
xchg
fwait
mov
cmp
sub
hlt
orl
pushf
fstps
outsb
xor
dec
scas
cld
mov
scas
add
out
ret
bound
bound
in
xchg
mov
lcall
or
outsl
hlt
int
call
shll
stos
sub
sub
aad
xchg
ds
sub
stc
pushf
std
mov
push
dec
lahf
pop
mov
and
dec
andl
add
dec
cld
loopne
xchg
daa
in
cmp
or
mov
dec
lods
fnstsw
pop
movsl
andl
das
sub
outsb
jle
xchg
stos
jp
in
mov
jmp
lahf
rolb
pop
jb
hlt
cld
daa
and
xchg
mov
sbb
dec
push
cmp
dec
mov
cmpsb
mov
push
and
push
fucom
rclb
enter
mov
or
jo
and
jl
stc
mov
push
out
mov
mov
mov
nop
into
mov
ret
iret
cmc
adc
inc
push
ljmp
std
dec
mov
mov
fadds
push
int
aaa
add
adc
sbb
sub
in
loop
and
push
xor
int
jmp
rclb
daa
xor
jo
bound
xchg
adc
mov
fistl
mov
adcl
mov
jae
xchg
mov
aam
mov
cmc
jge
je
jecxz
and
or
sub
cmpsb
icebp
ja
stos
dec
cwtl
inc
or
inc
pop
addr16
pcmpgtb
xchg
outsb
ret
add
mov
mov
jns
adc
push
out
leave
das
or
in
inc
das
jo
js
mov
mov
push
aad
jbe
cmp
call
into
dec
inc
cs
fstpt
daa
imul
sub
lret
addb
das
and
test
dec
jnp
stos
jo
idivl
dec
adc
in
mov
roll
lret
gs
xchg
xchg
stos
stos
adcl
jae
enter
lea
xlat
sub
push
mov
mov
mov
adc
mov
jmp
sahf
or
arpl
xchg
mov
int
sub
lret
push
arpl
add
insl
mov
insb
ja
dec
cmc
jl
xor
push
ret
out
sbb
mov
in
inc
xchg
lods
jnp
pop
jae
shll
inc
jmp
pop
mov
aaa
sti
push
cmp
add
jno
rcr
mov
jp
cltd
lea
sub
pop
hlt
sarb
rcl
mov
add
pushf
sbb
adc
outsb
pop
inc
js
cltd
outsb
cmp
mov
sbb
sub
out
sub
orb
jnp
lods
daa
cli
addl
dec
insl
es
lahf
lock
lods
sbb
stos
aam
hlt
in
dec
add
dec
and
insl
adc
loope
cli
repnz
data16
in
jno
in
inc
pop
pop
sub
nop
xchg
push
sub
push
inc
sbb
outsb
nop
imul
push
cmp
enter
jmp
push
jnp
sbb
nop
iret
insl
lahf
sub
lahf
cmp
xor
or
clc
punpckhbw
pushf
mov
xchg
pop
out
sub
sbb
clc
sarl
rorb
das
cmp
sub
and
xor
mov
and
cli
pop
lahf
mov
pop
fstpt
test
add
xchg
dec
or
fstl
adc
adc
into
cmc
insb
hlt
sub
xlat
jecxz
dec
movsl
xchg
out
pop
push
test
dec
mov
sti
lods
jp
and
arpl
jbe
pop
out
stos
imul
inc
pop
mov
xchg
shl
cs
pushf
xorl
cmc
jp
out
add
cwtl
lahf
mov
xor
es
subb
xor
stos
inc
pop
xadd
repnz
lcall
dec
xlat
test
dec
push
xor
mov
push
dec
sbb
cmpsl
adc
and
or
out
inc
decb
pop
loopne
inc
push
cmp
aas
mov
mov
sbb
or
das
outsl
add
jnp
jmp
rcll
xchg
lret
pop
iret
inc
adc
pop
mov
jbe
imul
repz
xchg
in
push
sub
sub
inc
mov
in
test
mov
jne
sbb
push
outsl
ss
xlat
cmpsb
mov
or
lods
test
dec
mov
pop
test
pop
mov
movaps
repz
or
adc
push
pop
movsl
rorl
popa
pop
mov
ljmp
inc
xor
mov
adc
int
lahf
hlt
in
push
mov
or
jae
mov
pop
gs
cmp
mov
sbb
imul
lret
xor
xchg
imul
mov
dec
add
dec
push
shrb
jno
and
mov
addl
fisubrs
faddl
cmpsl
enter
add
loop
bound
out
cld
loope
push
fs
ret
mov
mov
daa
mov
out
push
mov
push
imul
jae
pop
lods
mov
pop
mov
in
out
mov
or
jne
pop
rcr
std
push
mov
iret
cmpsb
sbb
dec
or
pop
push
and
inc
xchg
shlb
stos
push
pop
fcoms
xchg
mov
mov
jns
pop
and
and
cmp
mov
loope
xchg
jl
mov
ret
lcall
mov
iret
movsb
mov
mov
push
imul
sub
sub
push
rolb
lds
mov
dec
mov
mov
lret
les
cld
and
mov
and
mov
cmp
jmp
pop
incb
nop
and
in
jae
loope
push
das
in
les
pop
pop
pop
call
mov
mov
sbbb
pushf
ljmp
add
lret
and
cli
in
xor
cmp
mull
stc
jno
push
mov
lods
ja
ja
leave
gs
mov
push
std
xchg
into
dec
jno
cmpsl
stos
movsl
pusha
lahf
call
ficoml
sarl
mov
inc
mov
cmpsb
xchg
int3
out
fwait
sbb
mov
and
popf
push
mov
sbb
push
in
and
jmp
mov
aas
dec
push
mov
mov
push
jle
lock
outsb
loope
std
mov
push
hlt
bound
ljmp
inc
test
push
scas
loopne
dec
xor
cltd
sahf
int3
data16
shrb
mov
dec
jge
aad
lods
or
addl
stos
stc
sbb
btr
sbb
adc
or
jno
mov
pop
mov
mov
lods
pop
nop
dec
inc
test
fidivs
fs
pop
cmp
movsl
jne
add
cmc
ljmp
iretw
inc
mov
push
xlat
aam
mov
xchg
xchg
jge
cmpsb
fstp
pusha
and
fsts
in
sbb
repz
adc
cltd
sub
mov
lods
popf
mov
jg
into
lret
sub
insl
mov
or
adc
jnp
test
stc
test
int3
mov
lods
xlat
je
jp
mov
insl
movsb
sbb
sub
push
cs
fisubrl
ss
fs
xchg
mov
add
add
scas
fsubs
sbb
push
shr
hlt
insl
mov
arpl
add
pop
mov
and
xchg
std
lods
mov
stos
sub
outsl
or
adc
add
push
adc
cmp
dec
les
add
and
hlt
daa
mov
mov
je
iret
sti
shrl
sbb
inc
enter
cli
adc
push
ficoms
loope
or
shl
loope
pop
xor
or
cmp
popf
fldl
stos
clc
adc
imul
push
adc
cmp
movsbl
mov
pushl
mov
test
into
push
negb
repz
pop
dec
or
sub
xor
scas
inc
in
out
pushf
jg,pt
cmp
icebp
pop
mov
ss
and
jns
outsl
clc
jge
pusha
sbb
mov
cld
xchg
test
imul
ficoms
pop
imul
bound
fdivs
or
mov
pop
xor
adc
lea
cli
mov
sub
aaa
adc
xchg
lret
push
sub
cld
push
ds
cmp
pop
decl
xor
enter
cmpsb
cmp
stos
mov
xchg
cmp
add
ret
sub
or
ret
nop
leave
sbb
xchg
shrb
dec
mov
push
out
adc
daa
sub
jecxz
shl
xor
test
adc
push
jbe
fwait
addb
mov
cmp
xor
pop
cmpsb
add
push
cli
popf
out
push
call
jbe
xchg
inc
jle
fs
fwait
lahf
repnz
movsl
push
add
orb
pushl
mov
push
mov
das
inc
outsb
cli
ret
mov
jg
int
dec
add
into
clc
cs
out
cmc
repnz
and
pop
and
vmovntps
and
int3
jecxz
fisttps
ja
aam
fimuls
adc
ret
cwtl
fistpll
sbbl
pop
mov
scas
mov
mov
xchg
and
fldenv
mov
pop
shrl
sub
repnz
mov
mov
cld
rcl
mov
and
jnp
dec
mov
jp
cmp
mov
adc
cmp
sub
std
jae
mov
negl
fimuls
xor
test
and
mov
nop
mov
pop
ficomps
cli
jbe
repnz
adc
fcomps
lds
sbb
lods
mov
sbb
mov
ljmp
or
xor
lcall
jmp
iret
add
out
pop
ss
jp
jecxz
cmpsl
scas
call
jecxz
lret
aad
testl
fdivs
das
cltd
fmulp
stos
ja
mov
dec
cmc
in
jmp
jnp
push
test
roll
dec
imulb
mov
jmp
cmp
iret
je
cmp
mov
cmp
mov
enter
lea
xor
dec
fwait
rorl
fnsave
daa
or
outsb
push
mov
push
loopne
mov
sub
adc
push
test
shrb
fs
incl
aam
add
outsb
js
mov
repz
push
jmp
or
lret
incl
cmpb
leave
cmpsl
fidivs
dec
icebp
and
loopne
push
out
mov
cmpsl
push
insb
add
pop
xor
test
cmp
adc
add
fdivrs
sub
xchg
xchg
adc
movsl
addr16
nop
filds
movaps
add
int3
mov
fiadds
adc
jne
sub
outsl
arpl
movsl
fadds
int3
xchg
aam
sub
adc
mov
dec
jp
jp
jmp
inc
popa
ret
dec
jno
hlt
cmpsl
jae
cmp
adc
sub
mov
dec
sbb
xor
add
cmp
and
dec
sbb
jle
inc
ss
pop
inc
sbb
fimuls
mov
mov
iret
stos
loopne
fcoml
jb
mov
sbb
pop
jge
jns
rolb
pusha
nop
mov
add
sbb
mov
fsubrl
imul
std
inc
mov
std
mov
add
mov
sbb
mov
test
or
mov
out
sbb
mov
jle
in
cs
xor
jnp
inc
sub
xchg
aam
aas
jle
dec
es
in
mov
outsl
pop
pop
adcl
and
lahf
movsl
lds
pop
ja
loopne
leave
mov
cmpsb
mov
pop
push
test
paddusw
movsl
movsl
push
aaa
mov
xor
ja
pusha
jbe
xchg
sarl
in
jmp
dec
mov
stos
mov
aaa
psubsw
adc
xor
enter
pop
xchg
cmp
mov
stos
outsl
out
test
stc
aad
out
scas
sub
movsb
out
int3
jp
mov
jecxz
pusha
push
jne
int
insl
lcall
movsl
inc
dec
push
adc
pop
inc
lock
repnz
sub
xchg
cwtl
mov
insl
rcll
mov
mov
insb
cs
sbb
mov
shl
cmp
jnp
jae
dec
jle
aam
push
mov
mul
outsb
fisttpll
in
inc
test
pop
adc
mov
add
mov
pop
inc
mov
inc
mov
imul
cmp
setne
jg
addr16
jae
mov
adc
pop
bound
pop
cmp
out
pop
adcl
lahf
aad
sbb
cwtl
xchg
std
jne
xchg
sbb
cmp
daa
mov
repz
xchg
lock
adc
outsb
or
sbb
cs
es
aad
xor
xchg
inc
scas
dec
push
dec
movsb
popa
xor
gs
xchg
ds
andb
imul
mov
stc
xlat
das
ret
dec
cmp
jae
outsb
loop,pt
clc
out
incb
adc
aam
xor
scas
pusha
inc
call
fstps
jp
dec
jecxz
cmp
xchg
mov
popa
xchg
shll
loope
sub
push
dec
mov
test
lods
cmc
stos
fwait
push
fsubr
jle
rorl
dec
fwait
push
or
add
xor
lcall
call
xor
xchg
lds
enter
mov
in
xor
rolb
shr
or
xchg
fwait
in
push
cmpsl
jl
sahf
aas
push
insl
push
cmp
dec
imull
repz
sub
aam
cmp
add
cmp
jmp
mov
add
jge
mov
ret
clc
sbb
pop
ds
aas
in
addr16
movb
adc
sbb
lds
daa
pop
xchg
les
gs
mov
stc
fs
in
test
stc
cmc
in
push
sbb
fisubs
inc
bound
fcomps
or
je
mov
sbb
xchg
loop
fldt
cmp
xor
mov
push
sub
outsb
sti
mov
popa
mov
sti
mov
dec
rorb
adc
inc
test
xchg
jne
popa
rclb
push
shr
loop
xor
dec
dec
push
popf
fstps
out
push
pop
push
call
push
cmpsb
sbb
nop
jmp
and
xor
pop
test
pop
add
bound
mov
dec
outsb
mov
call
xlat
lods
test
loopne
sbb
push
lds
sub
lcall
and
jne
inc
mov
lock
jp
lcall
orl
add
cs
outsb
jp
fs
mov
pushf
fisttpl
iret
jnp
hlt
stc
pop
cli
ja
xlat
aad
jp
push
cmpsb
add
out
pop
pop
cmpb
pop
sub
cmp
pop
ja
or
addw
sub
mov
popl
mov
lods
push
push
sub
repz
aaa
pop
xchg
cmp
sbb
jmp
roll
nop
sbb
mov
xor
push
and
push
in
shl
add
xor
in
ss
cld
in
push
lds
ljmp
test
insb
adc
scas
lods
cmpsl
jne
andl
inc
scas
daa
pop
outsb
imul
out
stc
sbb
mov
mov
mov
repnz
pushf
into
xor
dec
lods
fdivs
paddq
sbb
in
or
gs
test
scas
jle
ljmp
dec
aaa
iret
or
setb
push
hlt
adc
insl
fwait
mov
cmp
sahf
push
jge
stos
push
sbb
lods
jecxz
xor
je
inc
scas
jae
xor
push
mov
pusha
ss
jecxz
dec
das
and
cwtl
pop
mov
jle
iret
push
fcompl
icebp
xchg
sarb
xchg
pop
out
ss
cmp
movsb
or
gs
repnz
add
xchg
outsb
or
xchg
xor
int
lock
dec
stos
popf
mov
rcl
mov
mov
jns,pn
add
sub
xchg
xchg
icebp
lods
push
jae
xor
scas
push
cmpsl
mov
and
mov
cs
pushf
cmc
push
inc
push
xor
outsb
mov
dec
out
mov
orl
xchg
or
int
lcall
daa
insl
mov
adc
inc
dec
mov
pop
cmp
xchg
jns
stos
adc
xor
pop
loop
and
ljmp
dec
leave
in
mov
sub
xchg
sub
int
xor
push
mov
jge
js
sub
lahf
sub
mov
and
in
pop
inc
repnz
sub
jle
and
fsubs
push
loopne
fs
lock
test
cmp
int
gs
sti
outsb
inc
push
mov
add
cld
cmp
daa
push
push
rorb
lcall
and
pushf
pop
shrl
sub
lret
add
mov
es
pusha
sti
clc
test
rorb
stos
and
push
call
dec
cmc
icebp
sbb
sub
dec
es
mov
sbb
pop
mov
mov
sub
xor
inc
inc
andl
mov
xchg
pop
dec
aaa
addr16
movsb
lret
aam
jo
hlt
mov
adc
mov
movsb
lock
inc
jo
xlat
sarl
jb
in
popf
xchg
mov
ret
adc
call
adc
lret
ljmp
in
lock
test
insb
cltd
in
test
jmp
cmp
push
sbb
pop
or
sbb
mov
or
ja
mov
popf
dec
test
std
mov
mov
add
or
dec
lcall
adc
inc
mov
inc
loope
xchg
and
enter
push
loope
xchg
mov
cmp
out
js
call
mov
jne
pop
jl
mov
xchg
movsb
and
cmc
rcrb
outsb
pop
inc
leave
sbb
mov
stos
roll
je
mov
leave
adc
push
dec
cmp
gs
xor
and
ss
mov
mov
mov
nop
xor
mov
cmp
ret
nop
and
or
mov
or
xor
addr16
push
popf
imul
cmp
sti
rcrb
loop
fldcw
scas
fnsave
in
lcall
std
fmul
insb
push
pop
fistpl
into
jno
sti
sub
imul
addb
mov
mov
out
lcall
dec
inc
push
jecxz
iret
mov
fs
loope
or
jne
ljmp
outsl
xchg
test
add
mov
aam
aad
lahf
sub
ret
popf
neg
mov
out
jle
pop
and
stos
push
jo
out
or
and
insl
jae
lods
loop
arpl
mov
cmp
inc
inc
aaa
inc
lcall
inc
nop
adc
push
mov
jae
hlt
out
loop
cmovs
mov
call
sbb
pusha
scas
mov
int
scas
mov
pop
mov
mov
pop
les
and
stos
xor
out
push
xor
fisttpl
xchg
sbb
push
js
mov
jae
loopne
popa
or
insl
rorl
cmpsb
cmp
negb
mov
push
add
fwait
repnz
add
dec
jmpw
or
stos
inc
xchg
divl
xchg
cmp
out
in
out
pop
jmp
in
int
adc
or
jg
imul
bound
push
hlt
sub
push
popf
push
xchg
push
cs
lock
mov
sbb
mov
stos
jmp
push
clc
inc
jmp
adc
out
adc
and
and
out
std
dec
fs
loope
ret
ljmp
mov
enter
rcrl
inc
js
inc
icebp
stos
adc
mov
xor
xor
cmp
popl
test
fnstsw
imul
adc
fs
adc
loopne
xor
fdivrs
add
jge
add
ret
popa
jmp
jne
pop
dec
pop
adc
repnz
mov
sahf
and
dec
sbb
insl
pushw
mov
ljmp
jnp
ficoml
js
lcall
fcomps
xor
xchg
nopl
int3
xchg
push
mov
xchg
sarb
adc
outsb
mov
mov
cli
addl
xlat
int3
push
add
les
mov
mov
int3
nop
xorl
popf
push
mov
test
adcb
call
ss
call
cld
mov
icebp
mov
data16
fisttpl
xchg
and
inc
imul
dec
pushf
das
call
ds
mov
xor
out
iret
aas
orl
inc
sub
mov
mov
in
dec
icebp
aas
sbb
mov
rol
insl
in
fsubs
sub
pusha
jno
ror
xchg
imul
in
loope
sub
pushf
add
sarl
insl
fs
lret
out
jl
repz
jo
std
loopne
jmp
sub
fwait
mov
or
xacquire
fists
loope
stos
cmpsb
add
inc
inc
mov
lret
push
xor
cmp
adc
adc
dec
lock
mov
test
mov
inc
dec
jnp
fistpl
les
inc
mov
mov
imul
lods
jbe
inc
xchg
adc
pop
stos
popf
push
sub
xor
in
cld
aad
push
inc
adc
loop
clc
mov
pop
push
pop
add
arpl
dec
pop
ds
in
xor
into
jecxz
mov
xchg
pop
cmp
pop
std
leave
mov
int3
imul
inc
push
loope
sub
fmull
jbe
cmpsb
inc
xchg
call
shl
decb
ss
movsb
xchg
or
clc
fidivl
push
cmp
fnstsw
sahf
or
outsl
outsl
sbb
mov
pushf
pusha
outsl
ja
adc
sub
cld
mov
in
lcall
mov
pusha
xchg
data16
out
sar
cmp
xor
lahf
in
sti
pop
adc
jmp
cltd
fwait
xor
mov
insl
sarl
shll
lds
scas
cli
adc
pop
mov
repnz
fildl
cld
push
ror
cmc
dec
mov
adc
push
stos
jge
mov
movsb
or
jo
sbb
pop
adc
movsb
aad
out
in
sbb
add
insb
sbb
clc
push
xor
xor
cld
mov
xorb
dec
push
sbb
sti
shl
fwait
push
dec
lods
mov
js
mov
cmp
sbb
xchg
or
jne
hlt
test
dec
nop
mov
pushf
mov
mov
sub
add
push
shll
bound
xchg
popa
sbb
mov
and
inc
mov
or
mov
imul
sbb
sti
pop
in
cmp
adc
in
nop
aam
mov
in
push
sub
pop
daa
sahf
pop
lcall
dec
jno
jle
addr16
and
ret
pop
rolb
jne
scas
ret
pop
popf
mov
adc
movsb
in
imul
sbb
nop
cmp
xchg
imull
and
add
lods
inc
jge
dec
insb
xchg
icebp
cs
add
add
aam
xchg
mov
stos
xchg
add
arpl
sbb
dec
aas
inc
add
push
mov
cmp
jle
fwait
mov
stos
sub
cmpl
enter
mov
ljmp
dec
fs
xor
test
negl
cli
mov
testb
fwait
jae
in
and
clc
jl
dec
popa
in
mov
nop
pop
ljmp
enter
jo
push
hlt
xor
repnz
scas
add
jbe
ret
jle
inc
pop
leave
or
sahf
hlt
dec
or
ss
jo
inc
dec
xchg
cmp
and
es
push
add
xor
clc
xchg
xor
popf
in
sbb
aaa
sbb
in
je
lods
mov
popa
sbb
adc
ss
divl
sub
outsb
gs
scas
stc
lods
adc
add
dec
inc
loop
push
sbb
pushf
outsl
pop
insl
dec
leave
jb
lods
aas
pop
loope
mov
icebp
inc
enter
inc
pop
or
paddsb
lods
xor
fcompl
mov
xchg
mov
lahf
pop
call
loop
gs
or
cmpsl
and
xchg
adc
mov
aad
daa
mov
xchg
out
mov
sbb
mov
sub
int3
xchg
ja
mov
pop
mov
int
mov
push
xchg
shrb
lods
cmp
xchg
int3
dec
adc
rcrb
jmp
adc
ret
push
sahf
insb
or
stos
pop
lret
xchg
push
aad
cmp
test
add
cmp
mov
push
clc
in
scas
scas
es
fistpl
sbb
jo
stos
cli
pop
sub
pop
cmp
xor
sub
add
movsl
fsub
pop
and
jnp
inc
push
les
mov
jg
pop
bound
aam
add
pop
imul
inc
xchg
aas
mov
inc
lahf
xor
xchg
xchg
cmp
push
add
cmp
repz
jno
sbb
xchg
leave
pop
pop
pop
nop
fbstp
mov
stos
cltd
xchg
pop
test
or
jl
jae,pn
push
sarl
pushf
xchg
adc
sbb
xor
lcall
sbb
out
inc
xchg
inc
sub
lods
rcrb
adc
or
lea
adc
mov
in
push
push
test
dec
aam
xor
xchg
lret
fdivr
cmpsb
out
dec
push
fcoms
mov
sahf
ret
enter
add
loope
mov
cmpsb
aad
ds
lcall
push
in
xor
fcomi
cmp
scas
std
pushl
sbb
inc
jnp
xchg
dec
or
repnz
push
imul
add
push
add
outsl
decb
cmc
mov
std
lahf
cli
sahf
xor
mov
into
xchg
repz
int3
jg
test
inc
mov
push
stos
subb
add
popa
out
pushf
rcr
mov
pop
out
cs
cmpsb
out
xchg
ucomiss
ss
lock
les
push
stos
outsl
dec
dec
sbb
jne
or
xor
lahf
loop
push
jp
int
push
jae
ja
pusha
adc
jo
push
dec
xchg
out
dec
loop
fwait
push
sbb
mov
inc
inc
push
lock
push
scas
sub
mov
sbb
imul
mov
pop
xor
adc
mov
fstps
hlt
cmc
rcll
or
add
dec
dec
mov
sbb
movaps
arpl
pop
lea
inc
pop
mov
mul
lcall
int3
out
js
push
jo
pop
out
das
xor
mov
in
inc
popa
push
insl
push
fwait
mov
cmpb
sahf
dec
jo
fldt
push
pop
rcll
movsb
sub
scas
icebp
mov
test
pushf
push
insb
mov
mov
pop
in
dec
jl
popf
mov
dec
or
xchg
inc
xchg
push
cli
loope
xchg
pop
inc
adc
and
adc
sahf
orl
xchg
xchg
pop
jbe
sub
jne,pn
pop
sbb
mov
mov
outsl
flds
adcb
cld
and
xlat
inc
xchg
inc
xchg
incb
lret
mov
push
loope
pop
inc
aad
push
mov
in
enter
test
cwtl
addr16
movsb
mov
hlt
mov
int3
movsl
decb
add
push
dec
cmc
pop
ret
out
adc
push
mov
loope
outsb
out
subl
push
mov
out
pop
pop
mov
cmp
adc
int3
sub
push
out
ss
cmp
jb
jp
cld
jmp
leave
sbb
outsb
loope
xor
inc
mov
stos
sbbb
aas
mov
mov
jle
cmp
imul
fcmovbe
stc
push
out
and
push
jne
mov
mov
mov
popf
call
stc
mov
lret
ret
ret
cmpb
aaa
sub
or
and
jae
lahf
ljmp
stos
test
and
push
mov
lret
pmaddwd
stc
jp
js
jne
gs
mov
in
popf
push
outsb
cmc
jnp
mov
sbb
pop
leave
jbe
push
dec
inc
mov
adc
jp
add
inc
mov
and
xchg
lahf
jg
jns
add
xor
popa
dec
mov
cli
adc
xchg
std
mov
gs
sub
shll
shr
pop
pop
or
shll
addl
stos
roll
xchg
jmp
fsubs
mov
cmp
pushf
jbe
push
divl
sarl
mov
xchg
sub
iret
mov
clc
jno
das
inc
mov
xor
mov
pop
fstl
inc
cld
movsl
popa
std
mov
enter
jnp
xchg
fidivl
mov
es
sub
push
nop
mov
pop
push
test
call
rcll
xchg
push
fstpt
mov
inc
cs
xchg
lods
mov
jl
jnp
mov
adc
sub
pop
mov
sub
icebp
pop
and
negl
iret
pop
js
jle
cmc
xchg
insl
fidivs
hlt
jo
in
cmp
xchg
cld
inc
jg
or
es
sub
xor
and
push
push
cmpsb
movsl
sbb
mov
cmp
xor
call
das
dec
cmp
mov
push
imul
lret
push
lds
das
and
in
outsb
cld
or
cmpsl
dec
inc
xchg
mov
mov
and
aad
bound
hlt
lods
sbb
xchg
mov
and
xchg
mov
std
lea
test
into
sar
and
dec
loope
adc
xchg
cmp
rorl
outsl
ret
dec
outsl
int
adc
mov
cli
dec
mov
mov
rclb
cmpsb
push
test
xchg
dec
ficoml
jecxz
push
sub
ret
fsubs
push
mov
in
outsb
push
add
mov
cwtl
mov
imul
lods
fists
mov
and
pop
and
add
test
jmp
in
ja
xor
popa
xor
dec
gs
push
push
cmp
rclb
fcom
hlt
xor
jle
rolb
mov
add
or
das
fildl
popf
pop
mov
icebp
hlt
mov
loope
pop
add
jecxz
les
test
fwait
lret
stc
into
pop
fisttps
lods
jle
xor
jmp
or
imul
push
in
das
cmp
dec
jnp
lret
dec
mov
jl
movsl
sahf
scas
cmp
scas
call
pop
mov
pop
mov
cmpsb
add
fnstenv
mov
into
movsl
loop
shlb
inc
fists
dec
mov
lea
inc
cmc
dec
nop
adc
repz
fcmovu
cld
push
iret
aaa
imul
sti
test
outsl
pop
mov
add
mov
sbbb
fldcw
mov
outsl
mov
jp
push
cmp
ljmp
test
jmp
pop
hlt
xchg
push
and
cmp
gs
shlb
std
lret
mov
push
mov
pop
or
enter
add
arpl
cmpsl
movntps
push
xchg
and
adc
push
xchg
dec
repz
fldl
mov
add
sysexit
dec
out
repnz
adc
mov
pop
cmpsb
loop
fsubrl
aaa
mov
ljmp
mov
jne
mov
insl
pop
add
cmp
add
and
shll
mov
stc
push
xor
iret
fs
add
scas
imul
push
push
std
adc
jge
pop
lds
imul
into
ja
ja
movl
inc
xor
aam
ljmp
push
mov
call
jge
mov
push
jnp
aad
ljmp
sbb
xorb
lods
xor
test
fnsave
mov
mov
loopne
insb
inc
mov
jl
pop
sub
cmc
fldcw
scas
and
push
daa
rolb
mov
mov
in
insb
pop
fiadds
dec
pop
fucom
orl
bound
jo
push
fidivl
sub
and
sub
sub
mov
scas
aad
clc
stos
gs
mov
rcl
lret
js
jge
loopne
andl
lock
push
sbb
jnp
mov
stos
subl
scas
mov
imul
mov
std
sub
pop
add
dec
pop
xor
hlt
nop
jge
cld
and
mov
lahf
mov
mov
jno
lods
adc
clc
add
stos
pop
push
xchg
xor
out
and
mov
sub
push
aaa
cmpsb
popa
fidivrs
cmp
cmpsl
icebp
test
add
aaa
mov
mov
and
fnstcw
scas
and
repz
sbbb
dec
push
or
mov
movsl
pop
mov
inc
rcrl
xchg
mov
jbe
stos
es
cmp
arpl
add
pop
rol
imul
add
mov
cmp
sbb
imulb
rcll
mov
xchg
shl
mov
jne
stc
mov
inc
pop
push
into
ja
in
fnstsw
pop
outsl
outsb
dec
dec
cmp
hlt
stos
clc
push
adc
push
loope
lret
or
xor
imulb
es
mov
and
jl
pop
imul
cld
inc
xor
sub
mov
imul
faddl
dec
lcall
cmc
imul
loopne
jnp
cmp
fs
push
test
dec
cltd
jg
iret
cmpsb
mov
xor
jge
das
aaa
or
repnz
addr16
xchg
fsts
leave
popa
mov
xchg
mov
jne
lret
cmp
sbb
mov
lods
cmp
outsb
out
mov
sbb
movsb
mov
xchg
jae
test
mov
cmp
adc
stos
and
push
xlat
xor
push
aas
add
dec
dec
mov
ss
fdivr
xor
jb
andb
test
mov
adc
or
pop
mov
xchg
and
jne
std
orl
add
lret
fnstsw
filds
ljmp
and
shl
int
stc
add
sub
cmp
test
push
dec
pop
push
imul
and
jae
je
jle
jecxz
iret
mov
int
mov
clc
mov
add
lods
mov
test
or
fwait
dec
xor
jl
push
lcall
inc
adc
jp
xchg
jge
data16
cmc
in
popf
subb
xchg
xor
lret
addl
out
dec
clc
or
hlt
xchg
mov
xor
call
pop
leave
outsb
mov
stos
pop
cli
insl
dec
mov
jns
mov
and
mov
sub
sub
ds
gs
cmp
repnz
mov
mov
xor
dec
shrb
clc
dec
xchg
out
jg
cmp
mov
into
jge
and
mov
popa
inc
mov
cmp
xlat
arpl
adc
cmp
pop
out
nopl
fcoms
aam
xlat
dec
push
pushf
pop
xor
rcrb
sub
out
pop
jnp
fistps
jl
sbb
sbb
and
fstps
xchg
filds
push
std
lods
sahf
fildl
xchg
xchg
adc
adc
lods
cmc
sbb
out
pop
and
pop
pushf
xor
inc
xchg
jne
jl
sti
incb
sub
jno
sub
outsl
mov
out
pop
mov
mov
loope
push
lret
mov
sbb
push
mov
sub
or
sub
pusha
and
decb
nop
ljmp
arpl
push
adc
dec
and
mov
fiaddl
mov
xor
insb
addr16
mov
int
int3
es
dec
lods
ret
push
mov
pop
fidivs
sub
push
call
xchg
xchg
aaa
xor
and
clc
dec
xor
sub
sar
ja
push
int
mov
pop
xchg
cmovo
nop
das
pop
arpl
pop
test
idiv
xor
mov
out
xchg
shrb
add
sbb
insl
setl
lret
les
lcall
cs
into
mov
xchg
ret
int3
filds
pop
fisubrl
mov
jl
jmp
push
arpl
and
bound
sbb
push
lods
stos
or
popa
cmpsl
lcall
push
push
adcl
and
lret
dec
icebp
adcb
cld
mul
fucomp
dec
sbb
mov
rcr
outsl
movsb
inc
gs
mov
adc
movsb
add
xchg
add
add
imul
pop
mov
pop
pusha
je
mov
outsl
pop
das
mov
out
push
test
loopne
pusha
dec
in
ljmp
jmp
int3
cld
stos
jmp
xchg
scas
mov
pop
push
mov
std
push
fadd
rcll
popf
xchg
outsl
fdivs
xchg
orb
ja
inc
shrb
xor
pusha
lcall
mov
and
ret
and
loop
xchg
cmpsl
cs
mov
stos
inc
fidivs
pop
cli
inc
daa
lock
pusha
ret
gs
mov
bound
add
jmp
push
inc
shlb
les
bound
in
sub
mov
mov
mov
out
mov
xchg
mov
mov
pop
dec
ss
out
repnz
ffree
fs
adc
adc
clc
xchg
dec
push
ja
imul
mov
gs
pop
mov
cwtl
and
cmp
out
cmc
xlat
sbb
imull
lcall
xchg
aaa
out
in
inc
jo
jnp
mov
das
pusha
dec
sub
lcall
mov
hlt
sub
lret
sub
cs
js
dec
imul
sub
pop
add
inc
jno
and
jo
repnz
jae
cmp
mov
xchg
cmp
int3
pushf
aad
insl
and
stc
cmp
mov
scas
test
sbb
mov
std
pop
popf
daa
les
xchg
fistpll
add
mov
lock
sar
mov
sbb
imul
in
js
or
ffreep
jge
rcr
movsl
mov
add
or
adc
mov
ret
dec
push
sub
adc
out
int
jg
das
scas
xor
cli
out
popf
and
pop
inc
add
stc
dec
idivl
pop
subb
fsts
pop
cmp
int3
or
lret
mov
bound
gs
sub
std
sbb
inc
push
mov
mov
mov
and
aaa
add
and
pusha
adc
shufps
dec
hlt
mov
xor
and
mov
adc
daa
mov
xchg
mov
fsts
pop
mov
and
pop
scas
fldcw
push
mov
test
sbb
icebp
pop
mov
dec
or
sbb
sub
xchg
imul
dec
sub
adc
outsb
into
or
jmp
xchg
es
adc
mov
imul
flds
mov
xchg
or
pop
lret
sbb
bound
stos
fdivr
lret
imul
pop
icebp
popf
xchg
sbb
js
jae
mov
jl
cmpsl
xchg
push
sbb
dec
push
push
ds
xor
xlat
adc
test
push
mov
lret
call
add
mul
adc
inc
sbb
ss
inc
xchg
xchg
mov
cmp
sub
jmp
xchg
mov
aas
dec
dec
and
lcall
lods
mov
inc
mov
faddl
subl
vcmppd
mov
cltd
enter
inc
xor
adc
jns
pusha
rcl
sbb
add
sub
jo
test
je
push
inc
mov
sbb
sbb
adc
pushf
push
aas
popa
xchg
test
stos
jnp
mov
cmp
xor
push
push
mov
add
and
cmp
hlt
xchg
std
push
push
testl
mov
jp
js
push
dec
repz
loopne
mov
cmp
arpl
push
cmpsl
cmpsl
fstpl
sbb
mov
xor
js
push
sarb
xchg
sub
xchg
das
fbstp
outsl
es
addr16
jge
cmp
test
ret
in
pop
les
jno
push
inc
out
popw
subl
loopne
pop
pop
sub
aas
xchg
stos
in
jno
inc
inc
rolb
lods
sahf
popf
push
rcll
sub
lds
mov
jae
lret
jbe
jp
add
mov
out
mov
iret
jge
js
cmp
jmp
outsb
push
sub
adc
inc
dec
push
cld
sub
and
hlt
cmp
fstp
push
xchg
and
inc
lahf
sub
cli
mov
mov
aas
xor
xor
jp
and
jp
xor
imul
fisttps
fsubl
loop
popf
mov
jno
add
ret
jmp
test
xorb
push
syscall
adc
cmpsl
adcl
or
call
addr16
lret
scas
int3
int3
push
jnp
icebp
outsl
out
adc
jl
cmpsb
cmp
push
jmp
dec
fdivrl
adc
cmpsl
jno
mov
insb
lods
jnp
inc
mov
mov
lahf
aaa
and
stos
lret
ret
cli
mov
inc
stos
mov
int
enter
mov
and
sahf
mov
ds
std
stc
mov
popa
repz
lahf
mov
ss
andl
push
addb
lret
cmpsl
mov
mov
sbb
je
fs
shll
mov
jge
in
in
daa
ret
add
xchg
sub
lea
jge
jl
inc
push
dec
icebp
sar
outsb
inc
test
ret
push
dec
aad
lret
lock
xor
pop
shll
adc
aaa
lea
cmp
and
and
dec
arpl
repnz
xlat
inc
lret
int
mov
xor
rclb
ja
sbb
adc
dec
shll
xor
jo
mov
sub
cwtl
push
or
jge
xchg
stos
jl
mov
cmp
das
mov
popf
xchg
aas
into
jl
pop
jp
jno
and
pop
cmp
dec
imul
rolb
das
pop
aas
addl
imul
cli
xchg
pop
shl
xor
test
sti
fwait
mov
aas
cwtd
xchg
adc
mov
push
jmp
jbe
adc
rclb
mov
mov
data16
or
movsb
fsubrp
outsb
fs
lods
jnp
inc
imul
les
and
cmp
jo
xchg
xchg
or
add
pusha
mov
popa
mov
sbb
push
test
in
int3
int3
add
mov
std
psubb
ja
scas
or
xor
inc
mov
call
xchg
mov
push
dec
leave
pop
cmp
sarb
inc
mov
ret
jge
or
insb
imul
pop
in
hlt
mov
test
scas
stos
sarb
repz
call
xlat
popf
push
jp
inc
mov
jb
cmpsl
orb
pop
out
push
scas
es
pop
mov
jg
enter
dec
sarl
push
aaa
int3
fmuls
aam
sbb
jmp
sbb
idivb
and
fidivs
in
or
ja
sarl
cmpb
movsl
ds
sbb
jae
add
out
out
adc
jns
fldenv
mov
jae
stos
xchg
mov
ja
sub
aas
push
mov
and
stc
decl
sub
mov
push
mov
push
cmp
mov
punpcklwd
mov
pop
ja
aaa
insb
popa
adc
xchg
mov
xor
je
leave
scas
mov
lds
inc
out
sbb
sub
cwtl
or
sbb
jne
jle
jae
adc
daa
sbb
xor
pop
test
in
clc
mov
repnz
daa
mov
inc
jge
mov
imul
sbb
xchg
dec
xchg
aad
jmp
faddl
unpckhps
call
adc
fcmovu
pop
std
mull
das
jns
scas
add
inc
fs
jp
test
mov
cli
xchg
jg
cmpsl
lea
test
lock
das
cmc
test
insl
rcr
inc
mov
ja
lret
int
ret
cwtl
imul
xor
pop
nop
mov
movsb
mov
mov
xor
insl
scas
enter
adc
cltd
imul
aaa
loope
repnz
xor
das
outsl
stc
lock
cmp
mov
not
xchg
mov
sbb
jb
mov
dec
das
cmpsb
int
jne
shufps
std
andb
movsb
xchg
xor
into
ja
outsl
fcomps
mov
in
lret
cmp
inc
jne
aas
lock
loopne
fldenv
test
sbb
fdivs
xor
cmp
es
dec
call
xchg
cmp
xor
clc
mov
push
jbe
out
cmp
out
mov
xor
pop
aam
lahf
inc
adc
sbb
mov
lahf
outsb
dec
shr
xchg
pop
fdivl
mov
push
jns
leave
xor
popf
in
mov
outsl
in
xchg
rolb
inc
dec
xlat
fildll
adc
hlt
xchg
sti
sbb
je
xor
or
mov
adc
dec
pushf
dec
push
mov
sbb
fwait
mov
sub
call
jp
adcb
inc
xor
leave
call
sub
rorl
loope
js
ja
fsts
into
xor
mov
xchg
aam
or
cmpsl
das
push
dec
adc
xchg
jp
mov
loopne
sub
insb
cmp
sarb
out
push
inc
bound
dec
outsb
inc
das
loopne
dec
xchg
pop
in
cmp
out
repz
rclb
mov
sbb
nop
es
rorl
pusha
jle
mov
arpl
push
cwtd
pop
out
cs
mov
nop
popf
mov
sub
cmp
gs
pop
cmp
or
test
add
lds
sbb
rcrl
bound
lds
pushf
jge
push
pop
lock
xchg
xchg
xchg
icebp
xor
fistl
pop
imul
mov
cmp
pop
sub
rcrb
and
inc
pop
popf
push
xor
mov
imul
dec
in
mov
xchg
fstpt
add
stc
test
inc
and
fs
lret
aam
and
push
add
shrb
es
mov
add
aam
pop
cltd
mov
mov
sbb
and
push
jl
aad
cld
gs
es
dec
push
lds
fnstsw
mov
pop
iret
int3
push
push
jle
fstpl
lock
adc
jne
sbb
mov
sbb
sbb
mov
arpl
and
loopne
mov
call
cmp
xchg
cwtl
jl
lcall
sub
lret
out
jle
clc
dec
push
mov
sbb
xchg
xchg
clc
mov
xlat
dec
ja
jno
mov
adc
push
mov
inc
mov
add
mov
or
repnz
test
jae
jns
push
test
dec
jb
popl
ficompl
dec
test
divb
adc
in
in
adc
imul
lods
dec
sarb
loopne
dec
call
insl
push
pusha
mov
stos
add
pop
das
out
mov
test
in
insl
and
arpl
lcall
shrl
pop
adc
adc
icebp
xor
mov
cmpsl
push
push
das
xchg
inc
shll
sub
leave
and
out
push
push
mov
pop
sbb
mov
mov
sub
mov
adc
adc
mov
aad
fiaddl
push
sub
pop
cmp
xchg
push
ret
add
clc
pop
xchg
jbe
dec
cmc
es
xchg
je
lock
loope
jo
movsl
js
fisttps
in
fisubs
nop
cmovns
nop
filds
and
dec
jb
push
cmpsb
popa
sbb
addl
sbb
add
iret
call
lods
in
popf
gs
fwait
iret
sti
int
gs
cmpl
fidivrs
movsb
les
mov
repz
mov
jno
test
ja
push
push
mulb
xor
gs
mov
mov
ljmp
sarl
loopne
mov
test
mov
jmp
pusha
xor
mov
movsl
pop
rcl
loopne
inc
sub
mov
sti
lods
jg
movsl
push
bound
or
sub
imul
je,pn
push
clc
or
ds
and
pop
jno
inc
push
push
les
mov
mov
xor
call
push
faddl
pusha
push
pop
lahf
repz
inc
sbb
xchg
les
scas
cmc
outsb
sbb
lcall
stos
mov
faddl
mov
mov
adc
mov
push
cmpsb
jl
dec
je
jno
cwtl
mov
mov
xor
int
aas
daa
fs
pusha
test
cmp
mov
pop
inc
sub
data16
xor
out
imul
popa
ror
sbb
jns
incb
lock
sbb
jo
loope
or
push
or
fistpll
dec
mov
test
fists
mov
mov
mov
out
mov
int3
iret
ljmp
orl
sbb
or
shrb
dec
jno
pop
push
and
xor
scas
mov
inc
fsubs
ficoml
jl
xchg
cmp
sbb
ss
xor
test
push
xchg
cmpsb
mov
mov
adc
adc
xchg
xor
push
push
or
call
xchg
mov
je
mov
cmp
and
je
aaa
stc
sub
div
icebp
mov
lods
insb
rorl
test
in
xchg
sub
out
iret
pushf
push
in
add
cmp
ds
outsl
xor
inc
add
mov
test
in
sub
repnz
xchg
jge
mov
je
repz
test
push
ja
in
adc
pop
cmpsb
xor
sbb
sub
mov
add
push
cmp
mov
mov
mov
shrb
pop
or
push
stos
out
xchg
push
cli
repnz
inc
inc
mov
fcom
and
sbb
cmc
orl
aad
arpl
inc
repnz
inc
movsb
js
mov
lds
gs
fs
cmp
jno
jns
loope
loopne
imul
nop
lea
cmp
cmp
jle
or
inc
jno
cmpsl
mov
xor
enter
test
cmpsl
es
dec
or
aaa
pop
xchg
into
pop
pop
mov
pop
pop
stos
adc
popf
test
loopne
rol
fwait
mov
rcll
xchg
adc
pop
or
ss
cltd
sub
fld
sarl
test
repnz
dec
fmuls
push
pop
cli
adc
cli
dec
cmpsb
xchg
cmp
cmp
out
mov
pop
sbb
sbb
or
xchg
stos
add
cmp
pop
cmp
lret
sbb
test
adc
sub
scas
lret
mov
or
and
mov
or
sbb
ja
cwtl
clc
test
subps
jno
lock
sub
lods
and
je
cltd
lock
dec
in
or
and
sahf
hlt
iret
mov
outsb
dec
shll
jg
loopne
gs
push
and
xchg
add
xorb
cltd
in
jbe
pop
in
push
push
inc
jnp
sub
jecxz
push
addl
iret
pop
dec
das
pop
and
or
lret
pop
mov
in
sbbb
jo
pop
inc
and
bound
add
fs
jp
cmpsl
inc
iret
sti
aaa
cmp
xor
cmp
cmp
aad
pop
jnp
mov
ds
pop
out
scas
loopne
cli
fnsave
in
and
xchg
or
testb
call
sub
fcmovnbe
outsb
jge
or
pop
movsl
sbb
and
jne
outsb
jge
pop
xchg
adc
out
aad
lods
stos
push
cmc
mov
push
xorl
pop
jo
test
mov
mov
outsb
sub
iret
shr
insb
inc
insl
add
outsl
mov
add
idivb
and
add
fistpll
into
fcoms
and
scas
jg
int
sub
add
cwtl
scas
ljmp
loopne
inc
jae
jge
cmc
movsl
pop
in
or
jle
inc
push
icebp
xchg
or
lahf
pop
inc
pop
pop
sti
stos
fwait
or
movsl
cwtl
rcr
mov
jo
das
sbb
loope
fisubrs
int3
sti
and
cmp
aam
dec
arpl
lahf
or
push
shr
adc
lds
jge
push
jo
adc
cltd
mov
sub
cmc
dec
jb
inc
ljmp
push
fstpt
stc
iret
xchg
push
adc
lahf
cmpsl
add
inc
jo
in
stos
cmp
mov
jae
fsubrp
pop
mov
lods
adcb
push
in
rcrb
outsb
repnz
mov
popa
std
fwait
cs
xor
aad
cli
mov
pusha
inc
test
loopne
cmp
mov
xor
lods
fs
adc
xchg
lea
sbb
dec
clc
xchg
loope,pn
repz
adc
repz
mov
xchg
mov
sub
pop
pusha
in
stos
add
imul
stc
int
fiadds
sbb
lds
xor
stc
sub
imul
ja
imul
add
loopne
mov
cmp
xchg
stos
je
enter
loope,pt
pop
stos
bound
jo
or
lahf
cli
mov
and
push
arpl
add
cmp
or
adc
mov
jle
fiadds
jecxz
rclb
and
stos
neg
push
call
mov
adc
mov
je
out
dec
loope
out
sbb
pusha
jns
filds
sbb
jnp
sbb
cmpl
lcall
lcall
popa
add
and
sbb
aam
fs
pop
add
aaa
rcr
repz
adc
js
dec
ss
lock
xchg
push
or
jle
mov
insb
and
or
movsl
lcall
ds
push
outsl
xor
cmp
add
subb
adc
das
out
dec
leave
jge
sub
loopne,pn
es
repz
loope
jmp
scas
imul
sarl
fcompl
bound
adc
lock
rolb
or
xchg
mov
mov
mov
dec
sbb
ret
dec
mov
repz
sbb
mov
mov
pop
mov
out
push
movsb
push
mov
sbb
hlt
and
rol
aaa
jge
jg
lods
xchg
push
add
sbb
fwait
pop
add
fs
ds
and
mov
movsb
or
pop
cmp
inc
jo
push
popf
mov
mov
pop
outsb
mov
push
imul
xchg
adc
mov
imul
in
mov
stc
xchg
push
pop
inc
les
call
and
repnz
or
push
pushf
add
pusha
pop
pop
stos
bound
or
je
movsl
add
test
es
inc
dec
push
and
addb
jmp
int3
aaa
dec
xor
mov
adcb
push
xchg
out
lcall
sbb
add
fdivp
ja
fisttpll
fbstp
mov
mov
cmpsb
pop
in
mov
dec
push
xchg
mov
out
in
xor
dec
inc
setns
or
rcr
test
xchg
outsb
ja
dec
ret
movsl
pop
sub
lods
mov
jns
loopne
jbe
or
fmulp
stos
inc
dec
push
add
inc
jnp
fcoms
ja
das
jbe
sbb
sub
mov
cltd
adc
jbe
in
jne
dec
scas
push
xchg
cltd
jge
data16
and
repz
test
add
hlt
push
das
dec
ljmp
aam
mov
xor
pop
lds
rolb
push
sub
xorb
orl
jge
pop
xchg
hlt
lods
mov
outsl
sub
rcrb
imul
mov
int
daa
dec
jno
sbb
pop
iret
fwait
xchg
je
jne
not
mov
dec
mov
lcall
insl
inc
repz
test
test
sbb
mov
loopne
push
out
cmpsb
std
or
rorl
repz
push
push
xchg
jge
das
jne
jne
int3
pop
data16
in
test
cmpsb
scas
pop
or
push
jecxz
jb
in
mov
lds
iret
pusha
mov
sub
les
dec
push
dec
ficomps
in
push
shrb
push
ret
mov
ret
xor
js
cld
test
in
ss
push
cmp
loop
xlat
sub
add
hlt
adc
shll
mov
ja
fldpi
dec
int3
gs
sub
in
mov
or
sbb
nop
dec
fistps
jb
arpl
mov
or
push
nopl
jge
or
dec
mov
fwait
xchg
gs
sbb
cwtl
or
bound
add
out
fadd
mov
scas
mov
xor
clc
int
pusha
rcll
and
mov
rcl
sbb
push
xchg
fs
clc
fidivrl
shll
dec
popf
fidivrs
add
xor
mov
mov
insl
or
and
dec
stc
ffree
mov
movq
stos
shrb
or
lock
sbb
ljmp
lea
push
idivb
popa
xor
sub
pop
pop
and
sbb
outsl
aas
rol
add
lea
jnp
cmp
jb
pop
pop
push
addb
or
cmp
aam
adc
loopne
icebp
jg
add
lods
ss
cmp
and
shrl
ljmp
mov
inc
daa
ss
adc
jmp
push
pop
ja
jle
movsl
jl
dec
lods
leave
pop
mov
mov
shrl
cmp
stos
bound
jne
cli
jbe
popa
xchg
movsl
inc
repz
mov
add
leave
sub
jl
mov
sbb
jne
mov
mov
mov
into
loope
xchg
mov
mov
xlat
mov
inc
cwtl
mov
jmp
into
das
push
add
xchg
or
pop
fmull
mov
fbstp
mov
add
mov
dec
fcmovnbe
add
ds
jge
fstpt
push
push
sahf
adc
pop
je
jl
xchg
sub
repz
sub
jp
movsl
push
xchg
mov
dec
mov
movsb
mov
xor
jno
je
xrelease
divb
fcoms
lahf
lahf
roll
inc
notl
xchg
subb
xchg
add
xor
add
cmp
je
pop
mov
fs
std
sub
inc
cmp
inc
fdiv
lods
xchg
movb
and
outsb
les
xor
je
inc
icebp
jmp
lret
adc
push
adc
test
jns
fcomp
shll
jecxz
test
andl
test
or
ss
les
inc
lds
or
fcoms
dec
mov
or
daa
cmp
xchg
jnp
jae
rcl
lock
inc
cmp
and
xchg
mov
xchg
je
xchg
imul
loope
add
icebp
push
push
adc
pusha
sbb
inc
xor
add
ljmp
movsl
jne
in
add
dec
cmp
repnz
dec
push
cmp
jnp
iret
and
das
movsb
jl
pop
daa
insl
iret
xchg
decb
subb
and
xor
cmp
sbb
sub
dec
adc
imul
mov
xchg
in
pop
rcrb
call
or
ja
divl
sub
mov
adc
popf
sarl
adc
inc
sbb
mov
or
lods
jns
outsb
push
cmp
and
xlat
mov
jne
into
fsubrp
movl
dec
cld
sahf
pop
enter
loope
out
in
pusha
cmc
cmpsl
out
addb
inc
sbb
mov
xchg
jp
popf
adc
dec
out
icebp
std
inc
call
push
mov
pop
mov
cmc
sti
cmp
mov
xor
push
sarb
std
sbb
mov
outsl
not
adc
mov
lods
and
pusha
sahf
jnp
cmp
pushf
and
and
mov
xchg
and
cmpsl
in
xchg
sti
decb
mov
push
push
out
cs
sub
mov
je
push
push
ret
sbbl
pop
fwait
andb
sbb
or
insb
insb
xchg
mov
push
xchg
lock
out
rcrl
dec
adc
mov
push
push
inc
ret
mov
inc
inc
hlt
pop
test
fidivrs
out
mov
fdivs
dec
stos
sub
hlt
adc
dec
js
mov
or
cwtl
scas
lahf
push
repnz
int3
not
inc
imul
filds
hlt
mov
add
or
iret
add
mov
mov
and
clc
pop
sub
or
push
movsl
mov
outsb
ficompl
push
cmc
inc
scas
jbe
testb
imul
ret
mov
filds
mov
add
out
pop
rcrl
jl
add
push
imul
mov
inc
pop
jns
mov
jns
adc
addr16
in
in
jnp
push
sub
pop
mov
xchg
pop
hlt
rorl
pop
outsl
inc
adc
sbb
loopne
or
jno
mov
xchg
out
push
xor
sar
pop
xchg
adcl
jp
movsl
ja
push
jle
add
pop
ljmp
cmp
scas
fsubr
and
insb
test
das
pop
xor
dec
xchg
ljmp
adc
imul
in
cmp
outsl
popf
sub
jo
xchg
cmp
xchg
movsl
mov
sub
std
clc
jno
mov
or
mov
in
mov
jae
mov
mov
fisttpl
popf
out
mov
sbb
xor
filds
sub
shl
push
mov
and
pop
sbb
push
cmpsl
inc
push
js
dec
jge
cmp
mov
fisubl
ljmp
mov
mov
inc
iret
in
stos
sbb
in
xchg
cmc
lods
add
mov
testb
inc
rorl
sbb
fwait
lea
sbb
cmc
inc
outsb
cltd
int
dec
rcr
jle
cmp
pop
mov
js
push
pop
les
xchg
and
popa
stos
push
into
jno
push
inc
jns
es
shll
mov
sbb
mov
repnz
push
push
jo
addl
roll
repz
aam
cmpsl
imul
push
out
fbld
bound
out
add
dec
movsb
pop
lods
rcll
pinsrw
mov
dec
mov
xor
jae
test
pop
fwait
test
pop
sbb
jo
imul
imul
xchg
div
xchg
xor
mov
add
jno
cmp
repnz
rcr
lea
pop
cmp
leave
mov
icebp
js
test
cmc
arpl
xlat
xlat
xor
or
and
add
push
adc
es
sar
inc
cs
pop
mov
fs
xor
lea
push
aad
repz
out
mov
mov
or
repz
and
mov
cli
icebp
sbb
outsl
cmpsl
sub
adc
daa
and
jbe
cmpsb
popf
and
mov
je
mov
or
aam
dec
in
arpl
xor
lahf
imul
popf
cmc
push
jecxz
mov
enter
scas
pop
add
add
and
popa
hlt
movsl
mov
in
or
jno
xchg
push
stc
shrl
inc
daa
cmp
adc
les
cltd
fwait
xor
mov
mov
dec
push
fildll
out
cwtl
or
inc
scas
fwait
test
pop
cmp
sahf
test
mov
xor
rcrl
imul
inc
mov
dec
repnz
jnp
jge,pn
sbb
push
and
fimuls
sahf
rol
mov
pop
mov
adc
or
adc
push
shlb
es
loope
jmp
outsl
out
push
pop
jg
mov
fidivs
inc
cmp
pop
mov
test
stos
xchg
fdiv
out
test
jno
out
ds
sub
int3
stc
jge
mov
jae
cmp
roll
insl
mov
and
hlt
ret
shrl
mov
and
pop
call
inc
cmp
sub
and
call
int3
pop
negb
add
mov
pop
setge
mov
pop
into
xchg
ljmp
fisttpl
push
lods
xor
xor
outsl
push
push
mov
xor
and
cmpsb
cmp
int3
pop
imull
push
xchg
push
outsb
movsb
jnp
mulb
inc
and
xor
ss
and
push
adcl
jnp
loope
pop
inc
xlat
test
mov
test
and
cs
lret
mov
mov
cs
mov
loope
outsb
cltd
inc
loopne
ficompl
xor
out
or
cmpsl
xor
leave
push
xor
in
cmp
mov
xor
pop
inc
mov
rcrb
pop
push
ljmp
test
jp
ljmp
mov
mov
int3
fcoms
mov
stos
mov
scas
and
in
ja
shlb
scas
xor
jmp
mov
dec
add
cli
cmpsl
fcmovb
sbb
sbbb
xchg
int
cs
call
and
ret
inc
jae
lea
fwait
imul
mov
cwtl
mov
lds
mov
loopne
mov
push
outsl
xor
push
dec
sbb
outsl
inc
nop
out
xchg
sub
dec
xor
and
rcrl
jb
add
inc
lcall
lret
insl
and
cmc
or
mov
and
test
jle,pn
jg
xor
mov
inc
popf
repnz
ds
nop
ror
inc
adc
sti
lods
fs
jb
or
popa
push
lods
cld
xor
in
daa
lahf
es
mov
mov
loopne
pusha
xchg
cmp
cmp
pop
inc
add
mov
gs
cli
mov
jns
enter
dec
pop
sahf
add
push
mov
stos
ret
fcomps
dec
dec
rorb
inc
mov
lea
lods
xor
adc
and
mov
pop
iret
push
mov
cmp
out
and
inc
xchg
mov
lcall
pop
aam
mov
scas
lret
std
leave
repnz
out
in
das
arpl
adc
lea
jno
imul
dec
push
add
out
or
jle
imul
mov
mov
and
mov
gs
or
pushf
stos
aam
cmp
lret
mov
sahf
fcmovu
push
mov
js
ficompl
shrl
xchg
popa
pop
adc
cs
ror
icebp
int3
arpl
adc
mov
rcl
mov
push
rcrb
cmc
test
xchg
loopne
in
out
outsl
insb
test
fnstcw
sbb
test
adc
add
jo
jb
or
mov
add
pusha
sarl
lcall
cmpsl
mov
scas
xchg
mov
xchg
xor
xchg
inc
mov
or
mov
std
jbe
ret
dec
outsb
jne
ucomiss
cmpsb
in
in
aad
xor
mov
mov
sar
pop
push
and
sbb
out
xchg
or
xchg
jge
fwait
xor
xor
inc
fiadds
pop
cmp
imul
and
jp
lahf
inc
cmp
scas
xor
nop
popf
mov
data16
jno
fisubrs
loop
and
mov
jmp
and
sahf
lret
push
mov
xchg
sbb
mov
cmpsl
test
scas
call
cmpsl
add
sbb
dec
lcall
dec
xlat
dec
sub
shl
cmp
inc
sahf
push
int3
insb
repz
movsb
cmp
sti
mov
cmc
repz
fs
cmp
push
aaa
xchg
pop
xor
lods
cltd
sbb
in
cmp
sub
mov
jg
rolb
jle
imul
jbe
ret
sbb
mov
sub
rcrb
insl
add
js
cli
sub
xchg
popa
adc
jp
mov
add
pusha
pop
jae
or
or
pusha
daa
or
push
xchg
mov
push
ss
inc
lcall
push
sub
mov
inc
ss
jl
mov
mov
fisttpll
les
pop
mov
insl
dec
pop
add
mov
xlat
push
ja
pop
jne
xchg
sahf
or
mov
out
or
sbb
setl
pushf
inc
imul
ds
popf
add
ud1
mov
ret
cmp
test
push
jmp
push
push
sbb
test
cmp
fwait
adc
mov
nop
mov
add
insl
jle
mov
jb
sbb
call
sub
or
and
ja
adc
call
cld
cwtl
insl
lret
sub
outsb
pop
mov
cmpsl
mov
pushf
call
sbb
mov
add
fs
test
dec
dec
call
or
stc
movsl
mov
jno
les
mov
xchg
lea
mov
mov
sub
test
xorb
faddl
loopne
cli
add
rcrl
push
cmp
fstpl
iret
mov
out
cmc
inc
and
cmc
and
or
mov
lea
stos
rorl
iret
xchg
xchg
sbb
je
movsb
test
out
imul
sub
mov
popf
clc
pop
cs
aas
pop
mov
and
pop
sub
rclb
popl
inc
outsl
call
dec
lret
jecxz
jge
xchg
loope
test
inc
inc
xchg
adc
lcall
push
mov
cmpsb
push
scas
dec
cmpsl
movsl
push
mov
jmp
dec
jae
out
insb
insl
pusha
lds
mov
cmp
mov
pop
fs
cmp
das
push
in
arpl
or
mov
mov
cmc
imul
dec
test
mov
mov
push
daa
mov
ds
and
push
aaa
xor
mov
pop
leave
stos
xor
dec
fstpl
aaa
jae
push
in
mov
out
shr
sbb
leave
push
xor
inc
sbb
adc
cmpb
sbb
jb
push
aam
popa
pop
jns
mov
push
es
jl
insb
nop
push
fimull
inc
xchg
shrb
push
pop
mov
outsb
fstps
and
xor
imul
dec
dec
jno
mov
sbb
push
aaa
cmpsl
fcom
fs
shlb
cmc
test
jo
rol
mov
cli
repnz
pop
mov
ret
cmpsb
pop
or
fnstenv
push
push
aaa
mov
das
icebp
or
mov
push
push
je
sbb
mov
loope
gs
mov
xor
jae
inc
mov
lea
add
stos
in
shr
icebp
cmp
lods
out
xchg
xchg
scas
push
loop
sub
xchg
inc
cmp
mov
mov
jg
push
fcomip
jae
or
mov
lock
fistpl
out
lahf
or
clc
sub
data16
add
push
jae
fcmove
sub
xor
or
les
js
inc
jl
xchg
jmp
or
inc
and
add
xor
xchg
cwtl
cwtl
cli
and
mov
repz
jecxz
sbb
jbe
imul
push
xor
xor
lcall
inc
xor
arpl
mov
jnp
aam
int3
xchg
arpl
lret
sbb
dec
cli
xor
shlb
call
out
pop
in
inc
icebp
icebp
inc
inc
pop
leave
out
mov
sbb
out
add
sarb
cmp
leave
rorb
xchg
mov
pop
or
push
xlat
icebp
dec
mov
and
xchg
iret
jne
or
and
push
dec
or
arpl
je
xor
cltd
das
fidivrl
roll
jmp
icebp
pop
lcall
in
sub
dec
setle
dec
xchg
jne
adc
iret
stos
xabort
imul
jb
mov
push
nop
mov
stos
fidivl
jo
push
and
push
push
data16
push
mov
jno
test
mov
xchg
jnp
in
push
cltd
test
and
movsb
or
mov
jno
ss
test
das
test
adc
clc
jmp
leave
fnstenv
in
cmpsl
push
sbb
xor
pop
out
mov
fiadds
lods
mov
push
mov
sbb
fxch
mov
mov
push
adc
js
jl
leave
repz
ljmp
cmp
pop
push
adc
sbb
loop
aam
sub
add
out
add
sub
rcll
mov
jp
pop
and
mov
push
outsb
lock
fwait
pop
mov
lods
outsb
and
imul
xor
outsb
test
add
pop
outsb
loopne
in
pop
cld
aaa
iret
pop
jg
cmp
lods
and
mov
mov
push
stos
pushf
loop
fiadds
ret
out
scas
xor
sarl
xor
arpl
in
daa
divl
mov
sub
shrl
mov
adc
je
movsb
movzwl
cmpsb
jmp
push
inc
out
ret
pop
adc
arpl
push
mov
jbe
adc
or
xchg
sahf
leave
add
mov
add
iret
aad
sbb
xor
std
adc
push
stos
jb
inc
push
and
roll
xor
inc
xchg
add
mov
orb
push
and
dec
shl
inc
jns
inc
cwtl
jmp
xchg
add
mov
insl
cmp
in
inc
fwait
dec
mov
das
ss
scas
xchg
xor
lds
push
xor
mov
bound
xchg
push
jle
or
and
mov
push
push
insb
bound
pop
test
clc
leave
nop
scas
xor
mov
sbbb
pop
roll
xchg
adc
int3
lret
mov
das
popa
lods
or
or
mov
dec
mov
loopne
std
mov
stos
cmpsl
xchg
mov
sub
cmp
mov
js
xor
jo
or
sbb
or
xchg
stos
push
sbb
push
lea
mov
adc
les
adc
dec
jb
xorl
movsl
mov
mov
test
popf
aaa
test
popf
push
fstps
xchg
mov
cmpsb
daa
sub
dec
call
or
jne
test
push
popf
and
mov
clc
and
mov
mov
and
dec
hlt
dec
sub
adc
xorb
js
mov
fucomip
xchg
jmp
clc
js
cwtl
xchg
mov
inc
mov
in
stc
ficoml
fwait
and
sub
cmp
push
jnp
adc
cltd
es
push
adc
push
repz
stc
popa
mov
inc
test
dec
aad
push
or
jg
push
stc
mov
lea
push
adc
sarb
inc
lcall
lcall
sbb
fcmovu
test
push
jo
nop
xchg
pop
sub
and
dec
sbb
sub
lret
pop
nop
mov
inc
lcall
fmuls
rcr
orb
mov
mov
ret
pop
test
je
sahf
push
push
test
rorl
mov
xorb
or
lea
mov
or
push
or
jb
leave
adc
bound
jge
push
mov
or
lds
mov
lock
sub
jne
or
nop
push
das
inc
push
mov
imul
sub
das
sbb
lds
imul
jg
jnp
sub
sub
negb
ret
or
cwtl
xchg
sbbb
shll
mov
cld
mov
test
xor
push
mov
lods
sub
fistpll
sub
cmpsl
sbb
xchg
push
push
enter
into
jmp
push
jbe
mov
out
push
sub
jnp
adc
push
xchg
subb
bnd
mov
imul
xor
push
lret
ja
inc
xor
and
testb
pop
jne
xor
inc
cmp
fldcw
adc
jne
mov
cmp
outsl
popf
fadds
jg
push
nop
mov
and
mov
mov
lahf
aaa
dec
add
mov
movsl
push
jg
pop
leave
push
lods
and
push
pushf
add
in
add
es
push
xor
fwait
mov
outsl
int3
cmp
out
sbb
fs
cld
pop
or
xor
lret
rcll
sbb
enter
test
rcl
and
cmp
cmp
lock
ret
daa
xchg
mov
add
push
data16
in
imul
sbb
push
stos
xchg
push
push
xchg
and
pusha
lahf
adc
cwtl
jge
jle
cmp
sub
insb
faddl
dec
in
mov
dec
mov
jb
ret
push
cmpsb
daa
dec
ret
cmp
mov
iret
or
shll
sti
cmpb
pushf
mov
inc
addl
in
inc
in
inc
repnz
sbb
push
ss
sub
mov
or
adc
imul
shll
int
test
dec
mov
cmp
adc
and
or
pop
daa
dec
adc
xor
cwtl
cwtl
or
rol
scas
cld
aam
out
aas
jmp
dec
push
cmp
lret
cmp
push
orb
dec
insb
sub
sarl
jmp
fildll
sub
pop
lods
incb
pop
pop
mov
or
pop
mov
inc
xor
push
mov
ss
push
lcall
sarl
sti
inc
cmpsl
mov
adc
jns
push
sbb
inc
mov
cmc
loop
js
pop
fidivrs
mov
out
sbb
sub
mov
ljmp
sahf
pop
ret
adc
dec
xor
xor
fs
or
lods
cmp
xchg
pop
test
shlb
lods
int
outsb
aaa
aam
in
popl
and
lods
mov
lea
cmpsl
ss
jno
in
adc
fwait
sub
mov
gs
fists
push
ds
push
dec
cmp
pop
inc
push
dec
dec
addb
cmp
cmp
jb
cmpsl
in
popa
or
divb
and
fisttps
test
mov
int
push
clc
clc
clc
fwait
push
sqrtps
out
or
jnp
rclb
out
cmp
and
ret
push
inc
xchg
sub
push
test
insb
sbb
repz
sbb
jno
sbbl
cld
clts
sbb
in
or
jae
mov
push
imul
int3
jl
dec
subb
stos
ljmp
mov
bound
dec
insb
lcall
cmp
fadds
or
mov
aam
fnop
and
outsl
jge
pop
repz
push
and
popa
nop
pop
insl
mov
scas
and
jno
cmp
mov
incl
push
lock
fiaddl
repz
ja
sbb
dec
jmp
cli
rcrl
test
daa
inc
dec
addr16
jne
sbb
daa
or
mov
sahf
sbb
out
pushf
fwait
inc
dec
lret
jbe
mov
imul
nop
jnp
mov
sbb
and
icebp
pcmpgtb
popf
adc
sbb
jbe
mov
fs
sub
and
sbb
sbb
jns
out
pop
mov
lods
push
or
push
xor
andl
or
pop
and
push
jne
sub
les
fiadds
int3
addr16
ret
jecxz
inc
cmpsb
test
jno
cs
sbb
pop
sub
inc
add
jmp
test
in
inc
adc
sub
and
xchg
push
push
dec
popa
sarb
aam
leave
xchg
sbb
test
xchg
in
cwtl
xor
and
push
xchg
icebp
push
orb
jae
je
aas
cmp
call
jns
std
jo
fisttps
pavgb
pop
lds
in
cmp
pop
mov
mov
mov
cld
pop
nop
test
pop
ljmp
ret
xor
sbb
dec
xlat
jbe
dec
dec
lea
adc
push
test
test
int3
fcoml
dec
xchg
xchg
push
mov
add
push
jne
lahf
ljmp
pushf
mov
arpl
lcall
insb
jnp
jge
dec
and
pop
test
jg
dec
adc
mov
aad
mov
aas
push
mulb
cmp
lcall
hlt
loope
sbbl
subl
mov
xor
pusha
stc
jle
sbb
incb
jecxz
or
inc
in
mov
xlat
fcoml
lea
cmc
jle
ss
imul
mov
iret
and
adc
mov
into
xchg
push
sub
in
push
mov
call
ffree
inc
pop
cwtl
add
mov
sbb
mov
jecxz
mov
sbb
push
pop
cmp
xor
cmpsl
fmul
sarl
arpl
xchg
shlb
in
push
test
dec
adc
and
adc
pop
xchg
push
imul
lcall
movsb
mov
and
pop
push
sbb
bound
pop
repnz
cli
shlb
push
pop
sbb
jmp
xchg
or
int3
movsl
jle
lods
sub
dec
sahf
cmp
push
shrl
jmp
inc
inc
xchg
xchg
mov
mov
mov
adc
outsb
xor
into
out
xor
pop
adc
cwtl
arpl
fists
popf
lret
sbb
fcomp
in
push
int
mov
mov
add
inc
jg
call
lea
lds
rcl
xor
xchg
xchg
jbe
push
sub
orl
sbb
sbb
mov
cli
popa
pop
lods
fmull
aam
dec
enter
xchg
insb
addr16
sahf
mov
frstor
sub
adc
je
data16
ljmp
xor
jo
cmp
xchg
fisubl
test
outsl
inc
xor
pop
scas
js
ljmp
pop
adc
pop
dec
dec
xor
mov
dec
jp
mov
push
daa
lock
int3
stos
jmp
jge
mov
lret
ffreep
lods
jmp
jmp
xchg
test
dec
jbe
pop
and
mov
pop
scas
or
dec
outsb
cmp
adc
rclb
xor
pop
test
in
ja
or
dec
in
insl
ljmp
ss
std
add
and
pop
xor
push
idiv
clc
add
sbb
adc
int3
mov
add
pushf
iret
cld
movsb
andb
jo
cwtl
sbb
mov
stos
sahf
jl
pop
add
dec
mov
mov
xor
jne
sub
in
imul
mov
sub
push
and
sbb
sub
lret
testl
icebp
mov
xchg
dec
rcrb
pop
fsubrs
lods
sub
les
push
arpl
xor
outsl
fildl
cmp
push
push
mov
dec
jecxz
es
cmp
dec
xchg
dec
repz
lock
dec
inc
repz
sahf
fnstsw
aad
call
push
mov
jecxz
and
lret
adc
pop
push
jp
pop
or
mov
dec
cwtl
dec
sarl
jae
xlat
cld
stc
jne
and
push
or
adc
and
movsb
inc
rcrb
movb
bound
push
inc
push
outsl
mov
jecxz
mov
inc
mov
jle
arpl
xor
mov
mov
imul
jge
imul
push
mov
pop
insb
loop
push
mov
cmp
push
push
push
xchg
xor
cmp
call
push
fidivl
mov
int
mov
daa
into
xor
and
dec
pop
ret
popa
xor
loope
jnp
jecxz
std
dec
dec
jl
mov
testl
xchg
and
sahf
enter
sub
insl
lret
pop
and
mov
adc
lcall
dec
pop
loop
lock
mov
cmpsl
test
mov
sbb
xchg
push
cmp
cmpsb
pop
leave
rorl
push
divl
hlt
add
mov
dec
loop
sub
sti
adc
shrb
inc
hlt
lods
adc
fisubrs
xchg
push
loop
fmulp
clc
jno
xchg
mov
dec
adcb
sub
mov
pop
xchg
and
rcrb
cmpsl
test
cmp
movsb
aam
sahf
jg
mov
push
loopne
and
rolb
mov
fsubrl
mov
fwait
mov
gs
mov
je
test
adc
movhlps
std
dec
mov
cwtl
stc
sbb
push
je
ret
ss
cmp
orb
and
and
repz
add
out
pop
movsb
in
add
movsl
sbb
pop
mov
jns
xor
and
jnp
mov
pop
jge
outsb
adc
movsb
mov
bound
fldcw
pop
dec
mov
ljmp
adc
dec
lods
push
lahf
fs
inc
push
adc
xchg
sbb
out
rcrb
adc
pop
sti
jecxz
pop
jl
scas
adc
enter
xchg
pop
jbe
xor
dec
lret
repnz
movsb
mov
call
jp
repz
xlat
jno
adcl
lea
out
fldenv
xchg
mov
repnz
push
lods
mov
insl
mov
loopne
icebp
cmp
add
daa
popa
hlt
jle
movsb
xchg
and
push
jle
jle
mov
add
pop
push
mov
andb
aas
fildl
pop
and
push
or
or
or
scas
mov
gs
orb
sub
fcmovnu
xchg
dec
popf
ljmp
mov
filds
push
adc
sti
iret
sub
mov
aad
movsl
mov
repz
mov
cmp
mov
call
in
mov
out
shll
cmpsb
push
jge
mov
je
jmp
pop
pop
mov
stos
inc
mov
cmp
and
xchg
push
scas
jecxz
push
scas
xor
jnp
cmp
insb
imul
xor
inc
add
xchg
sbb
adc
xor
xlat
rcrb
push
adc
rcrl
sub
adc
outsb
dec
mov
jo
mov
mov
out
push
lahf
sub
rcrb
aam
push
inc
lcall
push
inc
test
call
add
sbb
nop
dec
iret
jg
pop
out
mov
stos
xchg
add
fisttpl
pop
nop
cmp
mov
cmpsl
cli
mov
pop
outsb
xchg
mov
cmp
inc
xchg
cs
mov
jne
and
sbb
mov
mov
push
cli
scas
adc
dec
push
add
inc
cmpsl
rcrb
je
cmp
push
popf
mov
mov
jmp
add
call
jl
iret
dec
xchg
testb
daa
fsubr
int3
sub
dec
es
and
xor
and
jg
out
xchg
outsb
xchg
add
sbb
or
ret
das
mov
pop
add
dec
or
xchg
inc
call
lret
and
arpl
xor
adc
mov
add
loope
loope
adc
push
in
add
incb
outsb
cld
in
mov
xor
jmp
ss
sbb
incb
lds
fldenv
fbld
loop,pt
pop
sub
pop
push
ret
jle
shlb
lret
jle
out
xchg
test
sbb
fdivr
mov
ret
push
mov
dec
sbb
jne
or
or
sub
xlat
jmp
loop
sahf
cmp
nop
fldz
add
mov
shll
popa
imul
arpl
xchg
out
mov
pcmpgtb
jecxz
mov
inc
xor
add
jecxz
pop
or
mov
mov
xlat
clc
jg
mov
shlb
test
pop
pop
pop
lret
repnz
in
test
int3
mov
push
cmp
bound
or
mov
cld
mov
sbb
es
sbb
xchg
loope
mov
aaa
xlat
mov
mov
je
push
nop
dec
jp,pt
pusha
adc
popa
mov
icebp
dec
pop
icebp
xor
stos
push
sub
addl
sbb
inc
dec
es
sbb
cwtl
cmpsb
out
sahf
push
xchg
mov
mov
inc
call
jp
mov
out
jp
addr16
jle
xor
leave
dec
pushf
roll
sub
cmp
inc
xchg
and
into
pop
cs
mov
pop
jp
sbb
cmpsb
mov
movsb
jmp
or
mov
inc
and
cmp
push
jbe
pop
ret
sub
push
enter
stos
and
mov
stc
jno
sub
test
add
push
sahf
lret
dec
loopne
scas
std
sbb
into
movsb
sub
pop
xor
adc
xchg
lods
push
in
in
repnz
shll
add
loop
scas
insl
mov
jns
sub
inc
std
mov
jge
pop
mov
ficomps
mov
pop
jle
pusha
pop
fcomps
in
or
sub
lahf
xlat
and
push
dec
pop
fldenv
mov
mov
jbe
adc
jb
sti
sub
and
add
imul
mov
ret
call
mov
xlat
or
enter
arpl
rclb
enter
mov
mov
shlb
and
or
inc
mov
movsb
mov
roll
fsts
and
negb
jg
sbb
mov
push
jl
push
xchg
push
mov
fcomip
dec
test
or
sbb
xlat
mov
pop
jecxz
jl
das
add
add
cmp
xchg
cmc
dec
out
adc
cmp
pushf
push
pop
dec
enter
pop
add
in
mov
mov
inc
lcall
in
or
dec
hlt
mov
mov
pop
push
sbbb
sahf
pop
daa
sub
les
sahf
mov
push
dec
push
pop
pop
push
inc
roll
orl
gs
pushf
fsubs
pop
add
sbb
pushf
outsb
mov
sbb
scas
mov
cmpsb
dec
or
clc
mov
sbb
lods
and
loope
stos
jmp
dec
xchg
lret
or
sbb
cwtl
mov
sbb
int
jae
pushf
jae
sub
push
mov
xchg
popf
mov
dec
mov
loopne
adc
push
lahf
aas
cs
pop
mov
mov
mov
mov
inc
mov
xchg
pop
ds
mov
inc
cmpsb
seto
imul
imul
mov
or
fwait
lods
mov
cltd
rcl
pop
aad
pop
mov
lods
and
xor
loop
inc
popa
push
xchg
xor
jl
push
sub
clc
cli
shrl
call
sbb
int3
ja
sub
fildl
jbe
jae
subl
andb
arpl
enter
xchg
inc
sub
mov
sub
pop
mov
loope
mov
add
cld
dec
out
mov
inc
imul
mov
rorl
ljmp
xchg
fst
in
xchg
jno
pop
push
xchg
xor
mov
pop
enter
icebp
pop
sahf
xor
sahf
loop
outsb
mov
or
jbe
cli
mov
or
dec
cwtl
xor
shrl
mov
and
push
cld
add
mov
imul
xchg
push
and
xchg
xchg
test
xchg
popf
jno
pop
pop
das
dec
mov
xchg
mov
out
mov
fbstp
cmp
lahf
popa
lahf
js
gs
sub
cmpsb
sarb
adc
pop
jg
outsb
sub
and
mov
sbb
enter
sti
sub
push
mov
rol
sub
mov
data16
xchg
ret
mov
repnz
call
mov
xlat
stos
clc
mov
iret
repz
xor
rolb
jb
mov
js
cmp
sbb
jb
xchg
pop
mov
cmp
ja
jl
jecxz
push
sbb
out
into
jns
jns
dec
xor
mov
cmp
shrl
lock
pop
jle
mov
stc
loopne
jg
lcall
push
sbb
or
ret
lea
call
xchg
sbb
xchg
mov
subb
push
inc
sub
test
mov
jle
jns
mov
das
xchg
lock
adc
sar
pop
call
mov
jb
ret
lds
lret
jo
pop
test
jns
stc
xchg
jl
out
sub
mov
outsb
pop
adc
nop
cmc
inc
jno
je
fmuls
mov
adc
mov
and
pop
js
dec
dec
mov
daa
pop
cmp
aaa
outsl
into
imul
dec
pop
testb
jno
fwait
icebp
aaa
ret
shll
lahf
push
or
lock
dec
mov
add
mov
xchg
xchg
jecxz
ds
stos
jg
pop
adc
or
xor
sbb
rcl
and
jb
unpckhps
mov
mov
mov
adc
jns
xchg
lods
lret
push
popl
mov
inc
lret
mov
fildll
inc
jo
xchg
mov
cmp
mov
and
or
or
pusha
push
xor
mov
cmpl
jo
xor
cwtl
push
popf
stc
push
cmpsl
loope
and
jle
cli
mov
inc
adcl
jbe
inc
stos
push
arpl
cmp
sbb
jge
pop
fwait
popa
imul
xchg
nop
push
scas
dec
daa
in
add
inc
adc
xchg
rorb
gs
mov
jp
pop
mov
push
lcall
inc
and
pop
or
mov
push
mov
xchg
insl
push
mov
xchg
insl
pop
and
mov
movsl
scas
dec
pushf
sub
mov
mov
cwtl
jnp
xor
fistl
push
jno
mov
scas
push
std
mov
frstor
int
into
sbb
add
std
or
movsl
cmc
or
xor
push
mov
dec
imul
xchg
cmp
js
lods
cmc
insl
ds
dec
or
bound
ja
fmuls
ret
scas
cmp
idivl
sub
adc
sub
mov
fmulp
sbb
and
stos
jno
test
test
xchg
fsub
mov
out
jg
cmpsl
jg
sub
stc
or
ss
call
test
insl
ret
rorb
adcl
std
jbe
out
pop
ret
xlat
pushf
stc
aas
xchg
push
mov
popa
fs
fadd
pop
xchg
inc
mov
in
adc
xchg
inc
ss
jns
and
inc
aas
adc
push
mov
lea
sub
sub
imul
out
add
repnz
jae
out
aam
aaa
mov
jg
adc
sub
adc
pop
push
push
xchg
cmp
inc
test
fwait
cmc
adc
add
push
test
mov
les
or
xchg
out
fnstsw
jno
repz
adc
aaa
cmp
imul
or
inc
add
mov
pop
adc
outsb
mov
loopne
stc
inc
or
push
movsl
shlb
jnp
xor
enter
lret
xchg
push
jle
fwait
xor
ror
and
test
lret
push
xor
inc
out
inc
mov
mov
lods
cld
loop
je
test
mov
add
movsl
pop
popa
xor
or
fidivrl
dec
jno
mov
inc
clc
cmp
repnz
xor
hlt
in
dec
imul
push
sub
mull
enter
jae
xor
lea
xor
mov
cmpsl
hlt
movsl
das
push
inc
scas
push
pushf
shl
ljmp
or
push
bound
cmpl
test
hlt
ret
shl
xor
add
insl
xchg
gs
sbb
aaa
clc
or
inc
scas
fnstsw
push
sar
shlb
idivb
sbb
jle
dec
xchg
and
lret
xor
and
sbb
addl
sbb
sbb
add
and
shll
or
cmc
outsl
es
adc
call
pop
add
mov
leave
in
adc
daa
comiss
mov
or
outsl
or
test
mov
adc
scas
out
xchg
es
add
pusha
es
cli
mov
cld
sub
inc
nop
das
sbb
addl
pop
lods
std
mov
and
mov
jg
push
pushf
push
jecxz
add
in
sub
cmp
push
aas
adc
popa
shll
mov
ss
in
mov
xchg
iret
add
jle
xor
sbb
xchg
gs
xor
lea
xor
test
mov
cmp
and
sbb
cmpsb
or
sub
or
inc
and
inc
push
pop
mov
aad
gs
jo
mov
test
stos
lock
sbb
insl
add
fucomp
and
loope
aam
aad
push
cmpsl
sbb
rcr
movsb
enter
mov
ficoml
pusha
cmpsl
inc
or
mov
orb
xor
push
add
pop
xchg
push
xchg
sbb
stos
and
dec
aas
mov
mov
stos
pushf
xlat
out
and
cmp
and
std
fwait
repz
arpl
jecxz
add
push
jns
jmp
push
adc
cli
jno
and
cld
pusha
out
cmp
jno
mov
fisubrs
sub
push
push
in
leave
cwtl
xchg
in
loope
sub
xor
scas
hlt
cmp
movsl
jmp
cmp
clc
fidivrl
dec
test
push
rcll
mov
and
movsl
inc
sti
cwtl
jne
lods
clc
dec
push
dec
out
insb
shrl
call
sbb
inc
subl
pop
mov
jb
mov
push
sub
aad
decl
pop
scas
cld
mov
ret
mov
jg
test
push
sbb
into
iret
push
xchg
sub
std
adc
jne
std
in
fisubs
xlat
int3
fs
and
jne
addb
pextrw
xchg
test
orb
dec
inc
and
lea
ja
fs
ja
push
fbld
je
jg
fwait
push
nop
push
mov
cmc
lea
mov
cmp
inc
jp
sub
or
shrb
mov
fisttpl
mov
xor
xor
in
push
push
out
cmpsl
js
int3
push
dec
dec
das
outsb
rorb
loop
xchg
hlt
les
pusha
or
and
mov
sbb
push
push
shrb
cmp
jmp
cltd
jns
push
pop
push
sbb
inc
mov
adc
inc
xchg
xchg
jg
push
mov
lret
mov
jae
inc
fisttpll
outsl
cld
ficomps
push
rcll
jne
mov
xchg
mov
loop
clc
ds
and
pop
or
in
push
aas
push
pop
mov
lea
lds
or
and
int
test
mov
int
inc
in
lods
and
mov
insl
add
dec
out
andb
and
sub
dec
sub
jbe
sub
fdivl
xor
pop
aas
push
out
fwait
sub
mov
lds
adc
div
xchg
jle
mov
scas
adc
aam
push
in
lret
outsb
push
adc
mov
jl
scas
dec
cmc
imul
pop
pushf
sbb
repnz
hlt
repz
inc
sub
xchg
sarb
lods
test
cmp
pop
scas
cltd
pop
dec
add
cmp
dec
and
sub
jge
sub
xchg
cmpsb
mov
inc
and
mov
mov
lds
int
dec
ucomiss
mov
push
jmp
out
mov
imul
div
shlb
ljmp
lcall
ljmp
mov
adc
mov
test
testl
lods
jge
pop
inc
xor
xchg
scas
mov
out
dec
dec
sbb
pop
push
repz
jnp
test
hlt
std
adc
ljmp
call
iret
dec
pop
pop
filds
or
lret
push
cmpsb
mov
lahf
pop
inc
mov
and
arpl
out
mov
pop
push
jo
and
push
dec
xor
dec
sub
sti
dec
push
add
sub
mov
xchg
insl
adc
sub
pop
cmp
in
mov
add
xor
mov
xchg
andb
adc
lods
scas
fwait
mov
jno
xchg
test
inc
mov
xor
sub
dec
cltd
inc
xlat
add
repz
add
dec
icebp
inc
arpl
adc
pushf
fdivrl
cs
mov
out
inc
add
std
int
add
and
fldenv
and
push
clc
mov
adc
sti
hlt
scas
mov
scas
mov
push
fisubl
mov
xacquire
bound
pushf
in
mov
sub
stos
ljmp
stos
xor
in
or
push
into
mov
scas
sub
cmp
mov
xchg
mov
fnstcw
imull
lret
xchg
pushf
and
adc
dec
jmp
mov
sbb
int
fcmovnb
jbe
subb
cs
push
xor
dec
mov
cmp
mov
cmpsl
popa
jae
cli
add
mov
push
cmp
bound
clc
mov
imul
fdivl
imulb
push
inc
cli
pop
push
cmc
pop
mov
push
lock
subb
repnz
in
les
dec
in
and
jne
movsb
jae
xchg
loop
inc
or
sbb
aad
fidivrl
mov
or
ljmp
jnp
lods
dec
cli
mov
cmp
cmpsb
cmp
aad
cmp
xor
push
jae
sahf
jb
add
dec
shll
aas
lcall
add
sbb
and
shrb
outsb
mov
inc
mov
je
jne
or
sub
lret
lock
ret
fstpt
inc
es
pop
mov
add
mov
mov
cli
stc
mov
sbb
call
fs
mov
repz
add
div
rcrb
pop
pop
mov
jbe
push
jle
imulb
lods
sahf
jg
loopne
cli
outsl
inc
lods
pop
leave
rorb
xchg
mov
aad
sbb
fwait
cmp
cmpsb
mov
sbb
adc
out
lods
or
lods
sbb
repz
mov
mov
jo
repz
psubb
loope
sub
mov
xor
push
sbb
cli
leave
and
les
jae
jge
xchg
lcall
daa
push
mov
ds
je
leave
ret
sub
lock
xlat
push
mov
adc
or
jns
pop
in
cmpsb
xor
loopne
lds
adc
mov
and
pop
jae
fstpl
rcl
inc
ret
dec
sbb
daa
add
mov
sbb
lock
in
cmp
xor
enter
or
outsb
popa
lahf
in
mov
sbb
jmp
push
push
dec
sbb
push
add
push
inc
push
hlt
lds
and
add
aaa
cmp
stc
jmp
ljmp
jbe
xor
aam
loop
cmpsb
roll
cmp
ds
jmp
repz
loopne
cmp
pop
pop
xchg
xlat
mov
push
pusha
in
and
lds
mov
lret
push
xchg
xchg
fdivs
shll
aaa
push
outsb
into
mov
out
pop
push
inc
hlt
mov
inc
fisubs
jne
out
sti
fimuls
mov
lods
and
jg
xor
push
in
push
push
xlat
lock
adc
ljmp
jns
mov
inc
mov
sbb
popf
and
test
push
int
mov
dec
das
mov
xchg
aas
popf
ds
xor
aas
aas
rorb
cmp
jbe
fidivrl
aaa
lea
flds
stos
popa
and
adcl
jae
out
mov
stos
push
out
push
daa
jnp
mov
add
push
jne
jmp
iret
aam
call
ja
mov
xor
cs
sbb
mov
jg
cmp
push
push
stc
test
rcrl
lods
mov
aad
push
or
cld
dec
dec
add
fisttpl
in
lea
adcl
sbb
pop
add
aam
mov
popa
pop
lds
cmc
aaa
icebp
daa
xor
test
pusha
out
sbb
mov
or
push
pop
stos
or
cmpsl
test
leave
mov
into
mov
mov
nop
dec
fidivl
or
push
pop
push
lahf
ljmp
js
fmulp
pop
and
xor
jns
inc
lret
dec
not
repz
aas
sub
mov
push
pop
and
fcmovnbe
sub
add
jnp
inc
rorb
sub
pop
dec
sti
testl
mov
dec
cmp
inc
pop
fisttps
dec
test
mov
adc
xchg
loop
mov
add
imul
xchg
mov
pop
aas
inc
dec
jbe
sub
add
nop
dec
in
scas
xchg
fdivs
cmp
stos
movsl
adc
in
cmc
mov
cmpsl
xchg
dec
stos
cmp
jnp
addr16
hlt
adc
scas
call
ffree
adcb
mov
and
in
add
aas
or
pop
inc
jo
rep
push
pop
xchg
sbb
inc
gs
jle
sbb
push
pushf
scas
repz
cmpl
lds
cmp
aaa
in
mov
xchg
dec
mov
push
dec
outsl
lret
mov
in
ret
pop
pushf
push
adc
iret
and
jb
add
push
pushf
adc
enter
data16
jl
int3
repz
scas
push
call
jno
lds
mov
jnp
movsb
mov
mov
stos
inc
loope
mov
insl
fnstcw
and
xchg
inc
inc
cmpsl
out
push
mov
es
lahf
dec
cmpb
xchg
sub
mov
cld
movsb
sub
push
loope
push
jne
xor
and
lock
or
lcall
enter
xchg
sbb
or
push
movl
insl
lods
xor
movsb
movsl
or
shrl
adc
insb
pop
mov
add
out
ror
dec
ret
lahf
dec
scas
jmp
mov
into
es
push
cwtl
add
push
and
movsl
pop
dec
or
xor
inc
adc
into
mov
popf
into
cwtl
mov
fs
and
inc
push
jge
into
stos
sub
cmp
sti
inc
jbe
or
shlb
sbb
push
jae
push
xor
dec
adc
sbb
pop
pop
cmp
loope
pop
arpl
js
je
push
cmpsb
in
dec
cmp
add
shrb
mov
fs
stos
mov
shrb
mov
lods
pusha
and
fstps
movsl
pop
jnp
into
gs
add
adc
pop
popa
fwait
ss
adc
xchg
mov
clc
std
loop
dec
icebp
in
adc
push
cwtl
push
xchg
nop
dec
lea
je
mov
mov
mov
dec
sub
mov
sbb
cmp
test
xchg
dec
ficoml
rcl
insb
lea
pusha
pop
mov
xchg
mov
shlb
clc
adc
roll
or
and
loopne
mov
push
push
jg
out
inc
cmpsb
xor
lcall
cmpsb
and
je
popf
aas
adc
lahf
xor
mov
dec
push
jno
shll
mov
decb
xchg
mov
mov
jne
adc
addr16
imul
mov
dec
add
cs
cmpb
aaa
js
inc
in
jle
aad
das
mov
test
and
push
cmp
lds
imul
stc
les
stos
dec
imul
inc
test
jbe
and
das
xchg
add
mov
and
test
cmp
int3
addr16
bound
push
push
dec
sti
inc
lea
xchg
mov
in
lods
jo
das
inc
in
mov
mov
sub
notb
cs
loope
mov
mov
and
cmp
xor
xorl
leave
push
cmp
xor
xor
out
fnstsw
ds
inc
mov
jno
lds
stos
push
stos
mov
push
xchg
mov
fildl
lcall
leave
lret
cmp
lds
sarl
mov
push
lcall
cmp
out
or
sbb
jge
push
ds
shll
xchg
xor
fidivl
jl
sub
cmpsb
pop
push
push
pop
jo
enter
sub
mov
imul
sub
imul
push
adc
iret
daa
xchg
in
add
push
xor
pop
xchg
or
lss
icebp
push
xchg
mov
movsl
orps
cli
inc
adc
stc
push
or
leave
mov
lcall
mov
mov
test
ja
sbb
loope
inc
shrb
rorl
jle
inc
pop
add
pop
hlt
sbb
test
scas
insl
lcall
loope
sahf
xchg
pop
daa
inc
cld
sub
jo
sbb
mov
ret
and
popf
jl
mov
outsl
and
js
push
push
in
cmc
outsb
adc
adc
sbb
or
sti
pop
sbb
loopne
and
aas
orb
sbb
cmp
push
dec
stos
dec
push
add
iret
inc
bound
paddsw
in
fs
enter
xchg
inc
mov
xchg
mov
push
mov
inc
out
inc
pop
ret
imul
push
movsb
adc
mov
sahf
es
stos
pop
rclb
pusha
sbb
call
in
sub
or
loope
adc
lret
aad
mov
aas
push
repnz
inc
lods
fildll
dec
jb
fists
loopne
mov
or
hlt
sbb
xor
loop
pop
cmp
dec
cmp
mov
stos
mov
push
cmp
jae
lcall
push
mov
and
mov
mov
mov
sahf
jg
popa
jno
mov
mov
mov
cld
lahf
inc
leave
dec
inc
push
leave
dec
andb
xorl
push
test
stos
stos
push
push
mov
xchg
xchg
test
push
push
jg
inc
mov
xchg
jge
lds
ss
nop
inc
cmpsl
push
cs
rorl
push
sub
fisttpl
xorb
fimull
jp
inc
pop
pop
mov
jmp
add
rclb
xchg
in
je
sub
pop
jne
les
push
fnsave
or
enter
pop
es
xchg
mov
clc
xchg
scas
add
std
out
adc
pop
fisubl
add
push
cmp
inc
rsqrtps
xchg
repz
xor
jbe
mov
sub
cmpsl
mov
mov
leave
mov
imul
repz
mov
test
pop
frstor
scas
inc
dec
cmp
addr16
daa
jbe
sbb
inc
push
dec
stos
test
pop
xor
dec
mov
mov
enter
cmp
inc
in
icebp
mov
scas
add
icebp
or
in
aaa
or
arpl
js
xor
sbb
and
pop
mov
mov
sahf
mov
add
xchg
fidivs
fistpl
xchg
pop
sar
je
imul
cmp
cmp
adc
mov
xor
xor
mov
dec
dec
dec
orb
repnz
cmp
xor
out
roll
dec
fldcw
push
jl
scas
bound
add
ficompl
filds
push
mov
add
inc
out
sbbl
push
and
mov
fisubrl
sahf
inc
inc
mov
xchg
inc
stc
sbb
iret
pop
out
addb
adc
dec
fwait
pop
dec
push
fistl
test
es
inc
adc
mov
stos
mov
sahf
sbb
pop
adc
rolb
lock
mov
push
xchg
mov
mov
add
lods
sahf
pop
mov
add
or
mov
or
push
movsb
dec
mov
dec
xor
aam
rep
jge
int3
nop
nop
sbb
cltd
lds
sarl
mov
rcll
imul
adc
movsl
add
mov
pusha
ret
pop
jge
inc
mov
adc
mov
outsb
mov
sub
push
fisubs
lret
or
shrl
lods
cmc
dec
mov
or
es
xor
stc
mov
lret
jae
push
adc
andb
xchg
mov
imul
pop
pop
mov
in
mov
jno
dec
ja
xor
or
iret
push
enter
jle
loope
flds
mov
jp
stos
push
sbb
mov
ret
aad
repz
xor
xchg
push
sbb
xchg
lods
add
hlt
pop
imul
add
mov
adc
loopne
sbb
pop
lods
mov
int3
popf
int
mov
clc
imul
nop
aas
pop
inc
cmp
cmp
dec
mov
jae
xchg
test
or
jno
fsub
sbb
fsubl
fmull
popa
mov
fcomi
xor
sbb
push
aam
movsl
sti
ret
push
jge
inc
iret
ds
and
fs
iret
test
push
cmp
adc
cmpsl
push
push
cbtw
jmp
or
and
jnp
push
fsubl
fs
and
idiv
inc
in
movsl
andl
es
push
aaa
adc
inc
pop
dec
add
pop
fwait
popa
out
in
push
out
or
out
or
arpl
adc
divb
test
xorl
ret
pop
dec
add
mov
push
dec
xor
push
pop
sub
or
mov
fldl2t
testl
repz
or
addl
add
sub
in
mov
mov
out
clc
cld
inc
outsb
jbe
lret
pop
sbb
mov
cltd
pop
leave
idiv
push
cld
adcb
jl
rcll
add
lretw
jno
insb
mov
insl
xor
into
fildl
jb
arpl
nop
lods
sbb
mov
xor
adc
imul
lods
pop
adc
pop
out
cltd
repnz
into
cli
out
cltd
or
add
mov
and
jmp
add
jle
pushf
out
stos
lret
test
push
js
in
call
sub
jg
es
xor
pop
cltd
insl
out
or
push
mov
xchg
pop
mov
sub
inc
jo
mov
sbb
orb
mov
mov
stc
xor
mov
sub
lea
xlat
test
jo
sarb
push
test
rorb
pop
lret
inc
add
xor
cmp
mov
punpckldq
fsub
jae
jbe
test
sbb
loope
fisubrs
add
inc
inc
fsubrl
jne
sub
adc
adc
enter
fldenv
mov
je
jmp
sub
mov
dec
lods
daa
rcll
xor
dec
cmp
xchg
outsb
fwait
cmp
push
mov
xchg
nop
js
cmp
pushf
mov
and
jae
or
pop
push
adc
mov
sahf
loope
rolb
stos
mov
or
xchg
aaa
aaa
xchg
fimuls
flds
xlat
cmp
sbb
add
nop
inc
shrb
mov
insb
mov
sub
dec
mov
inc
dec
sbb
test
jo
xor
sub
and
add
outsb
mov
xchg
mov
pop
xor
scas
dec
pop
pop
sbb
sbb
cmc
imulb
cmp
cltd
cmp
sub
pop
push
mov
lret
lock
sub
jl
clc
mov
leave
incb
xchg
push
repnz
popf
xchg
aad
mov
push
fldenv
insb
jb
sbbl
rclb
or
jb
push
fimuls
jno
mov
sbb
xchg
jl
pusha
cli
pop
push
jp
repnz
scas
test
pop
enter
out
sbb
nop
aam
jge
mov
ljmp
sub
dec
adcb
xchg
push
lret
pop
dec
dec
mov
sbb
adc
iret
inc
add
arpl
mov
loop
pop
adc
push
call
jbe
sti
mov
das
pop
sbb
movsb
out
movsb
cmp
popf
dec
movsl
lahf
test
mov
repnz
adc
adc
aaa
mov
add
ret
mov
xchg
dec
idivb
ss
xchg
loop
mov
test
mov
xor
sti
xor
jmp
shrl
push
sbb
adc
outsb
or
daa
lock
lods
sub
sbb
subl
ret
lcall
enter
cmp
inc
or
mov
sub
in
test
xchg
jnp
movsl
jge
pushl
inc
ds
cmp
sub
dec
addr16
test
mull
loopne
cld
sub
mov
mov
test
xchg
mov
dec
mov
sub
aam
cltd
push
jb
lods
gs
loopne
test
xchg
jge
cmp
dec
call
scas
mov
rolb
lahf
cwtl
fldenv
insl
aad
cmp
jo
xchg
dec
push
xchg
cmp
mov
sahf
mov
or
pop
mov
adc
icebp
mov
sbb
mov
push
fwait
or
jmp
outsb
add
pop
repz
fucomi
mov
or
push
in
jns
out
or
outsl
data16
bound
imul
loop
fisttpll
fstpl
fcompl
xchg
add
aad
fbld
mov
testl
or
adc
cmp
shlb
jbe
or
push
lock
xor
sub
push
lods
xchg
bnd
fistl
insb
cwtl
xor
mov
dec
lods
cmp
lock
mov
adcb
shrl
lods
subl
out
cs
cmc
in
lods
or
and
pop
imul
orb
dec
add
mov
mov
push
jnp
rclb
out
fistps
and
mov
imul
inc
adc
push
movsb
gs
mov
sahf
cmc
sub
sub
inc
lret
ret
or
mov
and
pop
cmp
xchg
or
ret
in
xlat
mov
jl
jns
add
out
cmp
int
mov
test
mov
outsb
inc
fimull
adcl
inc
xchg
out
mov
add
inc
pusha
ret
add
sbb
out
sbb
xor
cmp
mov
dec
scas
fld
repnz
jp
rolb
add
mov
sbb
or
daa
or
jl
rorl
add
cmpsl
xor
mov
sub
cmp
arpl
test
les
pop
stc
mov
mov
popf
dec
insl
jp
out
and
test
clc
dec
rcl
push
add
xchg
add
lock
cld
js
xchg
inc
adc
jne
cmpl
pop
cmp
mov
push
stc
lea
and
add
mov
sub
es
stc
lock
subb
addr16
ret
dec
xor
lret
sub
loope
addr16
adc
jne
sub
fs
fsubrs
aad
mov
lret
insb
xor
popa
xchg
popa
sbb
daa
pop
rcrb
ret
mov
cmc
push
push
mov
mov
jb
test
scas
shlb
rol
adc
scas
int3
adc
es
outsb
mov
xlat
sbb
mov
xor
das
adc
mov
lock
sbb
push
xchg
out
imul
sbb
mov
mov
dec
lods
gs
insl
scas
inc
rcrl
mov
fstps
stc
add
lock
jl
xor
push
adc
push
pop
sbb
or
and
dec
push
scas
div
add
pop
mov
or
pop
pop
mov
in
add
mov
hlt
xor
movsb
loope
mov
andb
pop
in
pop
sub
cmp
inc
mov
aas
dec
sub
sahf
cmpsb
in
push
sbb
in
pop
sub
es
fs
and
cwtl
cmp
jne
adc
push
imul
fidivrl
mov
mov
ret
or
adc
insb
cmp
lods
leave
das
jb
negl
mov
pop
aas
inc
mov
subb
sti
aad
pop
loop
int
fdivrs
xchg
repz
xor
sub
leave
sub
add
mov
scas
test
push
divb
push
or
mov
lahf
adc
cmove
jmp
mov
inc
pop
loopne
loopne
or
and
inc
les
lret
push
xchg
mov
punpcklbw
daa
dec
mov
or
push
ret
insb
movb
scas
jmp
test
das
and
int
pop
test
ftst
gs
je
loope
adc
cmp
aad
add
ljmp
aas
xchg
adc
cld
pop
imul
test
jo
ds
jp
and
shll
mov
std
dec
mov
or
mov
mov
cld
mov
bound
pop
fcomip
lret
mov
pop
jp
mov
pop
pop
cmp
adc
ffree
xlat
fmull
pop
jmp
sbb
inc
scas
ljmp
xchg
xor
and
loop
imul
clc
mov
insl
clc
loope
daa
mov
aas
outsl
inc
movsb
mov
lahf
adc
add
pop
xor
sbb
daa
mov
arpl
es
addr16
mov
ljmp
fildll
mov
sbb
orl
nop
addl
outsl
ss
out
in
inc
cmp
pop
push
add
push
xchg
mov
out
mov
jne
mov
lods
aaa
push
push
sbb
mov
dec
lcall
inc
stos
xlat
xchg
or
and
mov
je
mov
add
pop
jns
stc
in
jns
vpaddusb
insb
pop
mov
daa
xor
xchg
jne
push
jmp
dec
pop
hlt
jp
xor
xchg
hlt
out
mov
sub
xchg
or
lret
adcl
iret
sub
fidivrl
mov
addr16
insl
aaa
push
idivl
mov
sub
inc
adcb
dec
xchg
ret
pop
jecxz
int
or
jne
mov
mov
or
dec
inc
pop
xchg
imul
or
cmp
lds
xor
dec
xor
mov
test
jns
out
call
ja
ret
insl
mov
sub
int
in
outsl
mov
fimuls
dec
push
movsl
hlt
int3
mov
inc
xor
daa
add
jnp
es
addr16
insl
cli
es
inc
mov
mov
popa
sbb
or
push
jne
repz
mov
lods
repnz
cmp
add
nop
inc
in
mov
jnp
mov
mov
shll
sub
adc
les
sbb
sbb
sbb
stc
dec
in
addl
in
cltd
jns
fildl
mov
push
call
sbb
aad
adc
jne
and
push
mov
mov
cli
xor
pop
out
add
cmpsl
push
loopne
add
out
rcl
push
stc
cmp
lahf
xchg
xchg
stos
push
into
jns
mov
push
push
jae
add
inc
test
pop
adc
cmpl
iret
div
rcl
xchg
dec
sub
rep
push
add
push
clc
and
mov
pop
push
das
or
stos
sti
sub
in
loop
sbb
push
push
leave
ljmp
jg
jg
jecxz
mov
int3
addb
js
cmp
hlt
inc
jecxz
or
pop
cli
xchg
sti
cmpb
pop
ds
and
pop
jns
in
add
scas
stos
xchg
cmp
in
and
push
insb
in
dec
ret
es
add
mov
pop
std
hlt
inc
adc
push
xor
mov
inc
icebp
movb
ds
cmp
call
lea
sbb
fsubrs
sub
nop
sbb
mov
ret
gs
call
and
out
repz
and
mov
sub
sub
into
jg
iret
pop
sbb
daa
insb
into
cld
and
test
ret
or
into
and
fistps
push
test
outsl
push
push
fldcw
shlb
xchg
pop
jge
pop
rcrl
aad
or
mov
jbe
push
insb
lock
mov
pusha
lret
js
ret
ss
dec
xchg
aam
nop
or
adc
shlb
pop
dec
xor
dec
push
mov
scas
in
sbb
arpl
mov
jbe
dec
adcb
mov
mov
cmpsl
pop
pop
fxch
lahf
mov
mov
icebp
lds
out
jge
mov
sub
mov
mov
lret
fneni(8087
mov
lods
cmc
call
jl
filds
fildl
popf
loop
jns
lret
or
push
dec
ja
stc
std
mov
cmpsb
sahf
fisubrl
xchg
dec
mov
arpl
aam
mov
lcall
outsl
mov
adc
xchg
inc
push
lret
push
std
inc
dec
ret
add
dec
sbb
lret
ror
sbbl
fsubr
imul
ljmp
cwtl
out
dec
dec
fwait
mov
stos
ret
imul
in
push
mov
test
in
cmp
aad
fwait
daa
bound
push
cs
add
outsl
and
mov
or
adc
cwtl
inc
aam
jo
sarb
mov
inc
mov
jb
cs
jecxz
lcall
popa
push
je
mov
into
lahf
mov
js
cwtl
or
pop
jmp
mov
jns
mov
cmp
mov
push
cmpsl
cli
popa
lock
ret
fisubrl
mov
xchg
sbb
sahf
push
jno
jl
mov
pushf
push
push
les
imul
scas
sub
rol
adc
jne
jno
test
push
in
ss
notb
lock
das
mov
mov
les
pop
xchg
adc
fistps
mov
sti
icebp
in
push
jns
mov
jecxz
mov
cwtl
sbb
loop
lock
dec
adc
and
dec
jmp
sti
jle
or
in
sbb
divl
xlat
movsl
hlt
add
pop
fcompl
xor
shrl
and
and
sub
imul
movsb
flds
dec
rorb
mov
out
out
pop
lock
pop
mov
sbb
aad
inc
outsl
ljmp
ss
pop
into
stos
mov
pop
fndisi(8087
in
mov
fldcw
xor
xorl
mov
sbb
push
jl
fisubrs
lods
mov
sbb
cmp
sarb
mov
mov
es
inc
pop
xchg
test
imul
test
xchg
ljmp
sub
call
cmp
jmp
lea
mov
iret
ja
push
ret
mov
jae
test
xchg
add
lcall
sub
xlat
mov
loope
mov
jnp
subb
stos
and
or
push
je
cmp
movsl
std
mov
push
popa
xchg
pop
out
xchg
test
sahf
sub
xor
in
pop
data16
popf
push
insb
push
aaa
mov
stc
test
and
mov
jp
xchg
adc
push
sub
arpl
stc
cltd
cmpl
and
xchg
push
aam
xchg
das
xchg
xor
fimull
outsl
inc
xchg
ss
cmpl
repnz
or
fcomps
inc
mov
dec
je
inc
dec
xor
dec
ss
push
das
add
int3
int3
push
sti
in
mov
or
inc
jmp
mov
dec
in
ret
ljmp
pop
cltd
mov
inc
addr16
cmp
mov
das
hlt
and
or
cmp
std
mov
cmp
cli
sbb
out
fs
rcr
jo
mov
sub
fnstsw
cwtl
mov
mov
and
dec
subl
and
outsb
call
int
aam
cmp
stos
outsl
cmp
mov
dec
popa
mov
pop
les
sbb
xor
mov
sub
test
fmul
xchg
rcrl
xchg
or
jp
test
hlt
movsb
adc
nop
or
and
popa
mov
stos
cmc
jmp
push
into
xchg
jb
or
push
xchg
ds
xor
push
cmpsb
mov
cmpsl
lods
imul
loop
xor
stc
mov
xchg
mov
jecxz
mov
outsl
xchg
scas
arpl
int
xchg
or
jl
iret
jp
int3
fsubs
push
cmp
frstor
loopne
xor
jae
add
inc
sub
xchg
mov
call
hlt
or
push
or
notl
inc
push
add
sarb
jne
scas
loop
or
std
loop
out
cmp
dec
mov
movsl
lea
xchg
call
xchg
sbb
das
mov
sub
js
shr
icebp
pusha
ljmp
int3
into
mov
sbbb
stos
sub
fcomps
and
jp
jo
movsl
adc
cwtl
push
sbb
add
es
movsb
jo
sbbb
and
sbb
lcall
jmp
inc
pop
jb
out
push
popa
jo
push
dec
mov
xchg
push
add
fbstp
jne
push
int
in
jo
fldcw
pusha
xchg
xchg
test
cltd
outsl
js
add
xor
mov
std
adc
in
mov
or
adc
test
push
jecxz
sub
stc
lds
scas
jg
repz
jo
push
sbb
cmp
dec
fisttpl
xchg
adc
dec
cmp
dec
mov
or
imul
inc
movsl
or
pop
insl
movsb
jecxz
in
mov
shrl
inc
inc
push
sbb
xchg
mov
stos
fistpl
cmc
test
and
mov
sbb
jp
hlt
xchg
sub
jbe
and
sbb
mov
and
inc
les
push
decb
orl
adc
adc
add
jne
in
xchg
mov
xchg
sbb
mov
addr16
pop
cmp
xor
mov
scas
in
lahf
pop
mov
scas
jl
inc
out
pop
popa
andb
xor
repz
lahf
jo
shll
rol
test
addr16
jp
je
sub
fildl
in
xor
gs
loope
dec
movsb
lcall
call
std
add
repnz
test
std
and
imull
push
jno
loop
loop
sbb
call
sub
dec
test
pop
jb
loop
inc
test
cmpsl
and
hlt
xor
push
push
adc
sbb
stos
andb
xlat
and
xor
cmp
add
ficoml
xchg
out
gs
cltd
scas
push
aad
or
jns
rcl
cmpl
lods
out
cmp
mov
add
ror
adc
insb
xor
je
idivb
dec
pop
xlat
sub
and
es
cmp
mov
adc
mov
cmp
or
addr16
mov
push
and
test
fimuls
or
mov
fcomps
add
sbb
jbe
dec
jnp
int3
and
in
in
stos
std
xor
andb
pop
call
hlt
fcoms
lret
dec
xchg
adc
lret
dec
cmpsl
xlat
call
cs
cmp
test
stc
int
xorb
repz
inc
adc
je
imulb
mov
loope
lock
into
pusha
clc
jle
fwait
pushl
testl
clc
loopne
xor
xchg
ljmp
mov
cmp
aaa
in
pop
cmpsl
push
or
xchg
inc
data16
add
lds
adc
sar
repz
add
sbb
mov
hlt
lods
inc
imul
popf
push
out
mov
mov
fcomip
mov
stos
les
sub
ss
dec
out
fnstsw
outsl
mov
cltd
shll
mov
sub
jp
lahf
test
push
repnz
push
rcrb
inc
and
es
mov
xor
hlt
std
enter
inc
outsb
sti
aam
lock
mov
inc
popf
mov
jp
ja
pop
addr16
push
rcll
add
or
cmpsb
mov
fmul
mov
pop
sbb
cltd
push
sub
outsb
mov
lahf
gs
imulb
pop
roll
xchg
push
sti
repz
xor
out
lods
insl
rorl
mov
push
fdivr
push
mov
pop
in
pop
or
nop
xor
popf
test
sarl
cmp
out
shrl
xchg
xor
ret
imul
hlt
imul
or
lds
mov
push
ds
pop
jmp
dec
div
inc
mov
test
adc
mov
flds
outsl
adc
or
insb
adc
fsubl
sub
sbbl
and
mov
imul
dec
data16
loope
inc
xor
jbe
jp
clc
mov
lds
int
ja
inc
in
xor
cltd
and
fidivs
popa
in
xchg
mov
dec
movsb
js
xor
xchg
jecxz
or
mov
test
xchg
lods
xchg
cs
fiadds
push
outsl
fbld
or
aas
mov
push
jp
je
mov
in
subl
adc
mull
xchg
xor
or
fwait
rorb
mov
arpl
xchg
adc
dec
mov
xlat
push
inc
xor
jns
bound
sub
cmp
jge
dec
mov
adc
ret
test
fcoml
push
in
xchg
or
dec
mov
cltd
fcoml
xor
lods
enter
adc
push
js
arpl
xor
imul
ffree
gs
js
xchg
xor
fstl
push
out
mov
jbe
and
jp
out
popl
scas
dec
push
mov
jo
jnp
cmp
mov
in
dec
jb
ss
aam
movsb
cmp
adc
outsl
repz
fsubr
sub
dec
add
aad
mov
push
mov
das
ja
imul
and
cmp
sti
fwait
pushf
mulb
popf
push
xchg
mov
nop
cmc
sbb
pop
loope
inc
stc
add
cmp
jge
dec
sub
into
das
mov
inc
lahf
daa
sub
call
fwait
mov
xchg
push
pop
sbb
or
mov
mov
add
push
addb
in
lock
sub
push
icebp
gs
subb
or
adc
aam
mov
adc
sbb
mov
adc
add
ja
addr16
repz
xchg
or
xchg
dec
cld
pop
xor
jns
or
pop
add
lret
movsb
or
xchg
outsb
xor
stc
imul
xchg
push
inc
push
lahf
dec
into
stc
dec
aas
mov
jl
in
dec
jnp
sbbl
inc
popa
andl
mov
mov
rcl
call
in
repz
movsl
fisubrl
cmc
xchg
pop
js
repnz
notb
xor
inc
and
cmpsl
add
loope
sbb
lock
xchg
pop
and
or
psrad
mov
icebp
xlat
mov
adc
data16
dec
xchg
mov
xorb
push
dec
xor
dec
pushf
cmc
stos
lock
shlb
sub
mov
inc
lcall
sub
mov
xchg
push
xchg
xchg
int3
aad
out
mov
or
out
ja
pop
mov
lea
fbld
cmp
jge
pop
jp
xchg
inc
jecxz
mov
dec
ja
scas
loop
add
dec
or
movsl
sahf
fistl
test
jns
fs
into
jle
xchg
sub
xor
ljmp
clc
xchg
andb
push
outsl
pop
outsb
xor
les
ficoms
rclb
xchg
jo
sub
stos
adc
dec
xchg
push
sbb
sbb
pop
mov
fnstenv
sbbb
mov
repnz
mov
js
jp
mov
mov
in
int3
les
aam
add
cmpsb
dec
in
ja
sbb
mov
pop
sub
mov
push
inc
out
movsl
dec
xor
xchg
dec
lds
pop
mov
faddl
cld
pushf
mov
mov
es
mov
xchg
push
mov
push
mov
into
xor
adc
mov
and
test
mov
das
mov
inc
sbb
and
cld
and
loopne
push
or
hlt
sahf
test
in
jmp
pop
out
sahf
iret
xor
jne
out
jae
aad
push
xor
je
jno
xchg
outsl
nop
push
jns
aam
add
and
fiadds
test
pop
test
add
test
pmaxsw
and
cld
decb
sub
mov
cmp
jl
lahf
dec
jl
xor
int3
cld
push
and
adc
arpl
push
shl
push
cmpsl
xchg
xchg
stos
mov
pop
pop
add
fidivs
adc
sub
inc
call
xor
into
cmpsl
inc
jae
je
aaa
jns
ljmp
std
jl
call
pop
xchg
mov
enter
push
push
hlt
push
inc
fnstcw
fwait
cmp
mov
mov
add
dec
andl
imul
out
xor
addb
imul
js
push
sbb
mov
mov
int
dec
lretw
add
or
push
movsb
int
jle
add
enter
mov
and
repnz
mov
xchg
nop
int3
outsl
aam
outsl
enter
loope
hlt
xchg
xor
sbb
jle
mov
dec
icebp
call
stos
add
out
pop
and
gs
inc
sub
jnp
mov
testb
jg
cmp
jae
inc
mov
pushf
mov
dec
and
les
and
popf
fadd
stos
xor
cmp
xlat
ljmp
pop
xor
andb
dec
jecxz
in
sbb
in
imul
ss
cmp
or
jl
lock
mov
dec
scas
jne
mov
jge
dec
jge
pop
test
cwtl
out
mov
xchg
loop
movsl
push
and
cmpb
add
ss
add
sub
sti
fwait
cmp
fiadds
into
cld
push
enter
test
es
add
mov
xchg
lcall
push
shrb
or
sbb
and
push
or
hlt
and
insl
inc
jmp
lret
arpl
cli
xchg
add
xchg
push
pusha
scas
test
push
mov
out
push
cmpsl
insl
xchg
inc
cmp
ljmp
jge
fcomp
pop
mov
inc
add
lret
test
dec
mov
lcall
scas
and
add
push
pop
jg
insl
scas
or
stos
mov
js
xchg
andl
and
popa
dec
rcll
mov
add
pop
lock
jge
rclb
mov
idivl
cmc
faddl
mov
cli
cmp
xchg
dec
ljmp
xor
sbb
lds
mov
repz
punpckhdq
adc
lcall
xchg
mov
and
adc
inc
xlat
adc
push
cmpsl
sub
les
pop
ret
mov
xchg
xor
mov
pusha
sbb
mov
call
push
call
pop
jg
mov
imulb
popa
cwtl
inc
pop
pushf
repnz
negb
inc
mov
ss
pop
inc
and
fdivrl
clc
stc
xchg
vmcall
add
push
add
inc
add
pushf
mov
and
mov
xor
daa
mov
fidivrl
push
mov
jg
mov
cmp
push
sbb
or
fnstenv
mov
add
adc
push
jmp
push
or
xchg
cmp
fsub
mov
call
subl
sbb
push
aam
fcompl
pop
icebp
xor
or
outsl
outsl
cmc
or
or
gs
pop
test
mov
xchg
cwtl
sub
movsb
and
shll
pop
iret
leave
pop
std
jl
lcall
pop
cltd
jmp
lods
cmpsl
std
pop
or
dec
ss
or
adc
adc
and
sub
sahf
adc
cmpsb
daa
push
xchg
imul
ret
arpl
lahf
sub
stos
nop
js
adc
jl
arpl
mov
sti
cli
dec
or
mov
push
dec
mov
fnstcw
inc
mov
dec
xchg
das
ret
sub
rorl
out
push
test
repz
xorb
fcoms
aas
lea
or
lods
xor
pop
int
jmp
arpl
mov
sbbb
jmp
cmp
jl
std
and
add
aam
rcrl
add
sarb
rcr
fisttpl
pop
mov
jp
sbb
imul
jp
or
jl
inc
cmp
pop
into
fildll
sub
or
aas
and
push
ret
xor
pop
inc
cld
mov
push
jge
and
dec
scas
maxps
pushf
ficomps
jecxz
inc
push
push
mov
loopne
and
push
clc
leave
mov
loop
sub
loopne
fnstsw
shrl
push
pop
pop
push
cmp
pop
mov
das
test
idivl
int
in
push
arpl
mov
es
shll
fisubrs
jle
repnz
sbb
roll
pop
cmp
cwtl
jg
sub
mov
mov
and
jb
sarl
add
xor
push
mov
lods
jp
scas
hlt
push
mov
mov
lret
xchg
and
jbe
cmp
cwtl
movsl
pop
rcll
xchg
jg
mov
into
sarl
aaa
mov
fnstenv
sub
lea
add
xor
push
insl
pop
loope
stos
out
add
or
mov
and
cmp
xchg
notb
xchg
jg
mov
or
and
mov
les
jge
and
sub
jno
jbe
jnp
push
aam
in
push
xor
jae
add
push
cmpb
fistl
pop
aam
mov
pop
cmp
mov
les
outsb
add
aaa
sbb
xlat
pop
pop
push
bound
insl
call
or
cmp
push
sahf
mov
outsb
ss
lock
push
adcb
enter
add
sbb
jmp
or
in
int
bound
mov
sarb
xchg
lahf
jbe
push
fldenv
aaa
inc
mov
dec
aad
outsb
inc
xchg
sbb
pop
dec
imull
and
or
addr16
mov
sbb
lret
dec
cmpsl
ss
jmp
add
roll
jnp
out
mov
es
cmp
enter
movsl
jg
imul
fnstenv
or
loopne
insb
mov
mov
loop
pop
aas
sub
inc
ret
in
xchg
xchg
jns
loope
push
mov
call
mov
fdivr
push
aas
nop
pop
pop
mov
xchg
lds
add
jle
lret
jnp
aam
xor
jnp
js
fiaddl
sub
jnp
pop
hlt
loop
push
jge
push
push
dec
mov
mov
jmp
adc
and
lcall
fcmovnu
fdivrl
dec
ljmp
ds
ljmp
xorl
outsl
push
sbbb
fldl
pop
sbbb
or
std
mov
pop
loop
lret
cmp
es
or
nop
xchg
aad
add
jo
insl
add
nop
ret
mov
insl
sub
je
jae
ja
push
sub
nop
adc
aad
mov
mov
dec
pop
and
lcall
push
mov
push
sub
test
xor
xchg
jo
adc
and
mov
fisubrs
pusha
mov
and
sbb
mov
clc
jmp
push
fs
es
xor
shll
mov
insb
cmp
xor
and
mov
into
inc
scas
jb
jmp
sbbl
jno
ljmp
loope
xlat
rcrb
or
test
xchg
xchg
enter
das
pop
mov
cmp
adc
xchg
pop
shrl
jno
aas
hlt
jb
insl
sbb
shrb
inc
fdivl
leave
xchg
mov
and
mov
mov
addr16
pushfw
xor
arpl
imul
adc
jnp
and
in
es
mov
push
fs
shrb
loopne
fstpl
inc
mov
and
sub
xchg
push
ffreep
lcall
call
movsb
and
inc
addr16
push
and
jnp
jns
mov
or
cmpsb
mov
add
jle
cmpsl
shl
xchg
dec
rcr
sti
pop
test
jecxz
jp
sub
jne
mov
sbb
dec
pushf
iret
jae
dec
inc
in
arpl
sbb
inc
mov
jb
lds
xchg
sub
lret
or
lods
lds
sbb
in
je
and
push
jb
in
fnsave
adc
and
push
inc
mov
shll
rorb
add
leave
pop
dec
outsl
popa
jmp
xchg
cmpsl
scas
xorl
out
sbb
jne
pushf
stos
idivl
push
stc
xchg
inc
loopne
sbb
mov
pop
ffree
fdivs
scas
out
cli
loopne
push
cli
aaa
test
les
andnps
cmpsb
outsb
pop
fidivrl
cmp
movsl
adc
mov
cmpsb
rcrb
jp
enter
mov
shrl
sub
gs
inc
lret
daa
aam
pop
fadd
push
scas
lea
mov
lds
or
jae
sbb
scas
jns
cmpb
pop
shr
stos
mov
rep
clc
lds
lods
xchg
adc
adc
dec
in
or
leave
test
xor
cs
jne
push
adc
scas
pop
test
int3
pop
jae
adc
std
or
mov
sbb
push
repz
int
mov
cmc
dec
and
js
mov
cmp
adcl
mov
sbb
test
mov
sbb
or
fisttpll
pop
sbb
outsl
js
in
in
and
lods
cmpl
test
mov
pop
push
ret
sbb
dec
test
mov
fdivrs
fdivrs
and
push
and
das
pushf
mov
int3
inc
xor
jmp
popf
mov
fcoml
shrb
lods
or
testb
shll
aaa
lret
cmpsb
hlt
mov
outsl
push
inc
dec
pop
ja
leave
divb
dec
push
xchg
rorb
adc
ds
cmc
jmp
sub
in
inc
ja
scas
dec
sbb
sbb
lea
cmp
inc
int3
out
adc
sbb
repz
subb
scas
mov
dec
add
test
enter
fsubl
pop
std
or
loopne
fdivrl
stos
in
inc
outsb
or
in
or
mov
add
xor
les
rcrl
mov
ss
add
loop
xchg
push
push
cmpb
imull
aas
fnstsw
pop
ds
cwtl
mov
mov
ret
pop
test
cwtl
test
ret
cld
mov
pop
adc
dec
cmp
outsb
jnp
int
push
xchg
scas
or
in
fs
pop
int
jbe
push
pop
movl
mov
mov
pop
adc
add
sbb
cmp
repz
xlat
cs
shr
shlb
dec
filds
jl
lds
pop
js
inc
or
sbb
adc
add
cmp
inc
lret
in
out
add
adc
sahf
les
sbb
adc
jae
call
inc
push
shll
sub
or
sahf
out
jo
and
mov
shrl
lahf
push
test
pop
clc
clc
aam
mov
cmp
lcall
inc
mov
xchg
or
insl
pop
sti
ret
lret
push
enter
jae
pop
xchg
adc
push
pop
adc
fdivrl
stos
lret
inc
xchg
stos
xorl
dec
ds
loop
cmp
and
notb
cmp
dec
mov
pop
bound
mov
sarb
cmc
mov
js
movsl
mov
pop
fwait
or
add
das
mov
ret
cmp
call
movhps
fwait
pushf
pop
xchg
inc
mov
lods
adc
or
mov
mov
loopne
dec
fiaddl
push
loop
pop
adcl
pop
clc
out
nop
add
cltd
dec
pop
sbb
cmp
or
pop
lds
sub
shrb
hlt
leave
test
ss
xchg
mov
icebp
jmp
lret
push
mov
popa
mov
out
orl
or
jne
popf
push
pop
inc
lock
inc
cmp
scas
adc
sbb
jns
pop
or
jno
repnz
lock
in
out
es
push
push
xchg
and
sti
push
in
daa
mov
lock
mov
mov
jecxz
test
es
dec
lds
xchg
sarb
bound
int
xchg
insb
and
arpl
xchg
push
sub
pop
jnp
ss
movsl
into
xchg
xor
mov
mov
push
loopne
and
jle
rcll
test
orl
mov
lret
ljmp
bound
stos
sub
cltd
dec
pushf
cmp
and
lret
loop
adc
adc
or
jo
sbb
sbb
cmp
jg
mov
out
out
sub
test
cwtl
lahf
fucomip
mov
ret
xchg
xchg
xor
push
leave
mov
jne
mov
adc
scas
cmp
ret
sub
negb
movsl
cmp
sub
sbb
dec
outsb
and
mov
std
cld
outsl
jmp
lods
push
add
xor
and
stos
insb
mov
xchg
sub
or
cmp
push
mov
dec
push
or
lds
sahf
scas
cltd
aaa
iret
mov
testl
mov
insb
insl
rcl
into
pop
shlb
mov
lods
sub
jl
xor
fabs
inc
sub
pop
xor
popaw
mov
out
mov
xor
inc
les
xor
shlb
inc
cmp
inc
mov
filds
ret
pop
aas
mov
mov
xchg
add
iret
fnstcw
rclb
lock
aaa
rcrl
test
and
scas
mov
pop
popa
xor
gs
mov
stc
pusha
cli
lea
lret
xchg
sub
stos
addr16
cli
les
fstl
ds
fnstenv
ret
stos
lret
ds
inc
pop
pusha
xchg
incl
bsr
sub
and
mov
jl
fwait
adcb
push
cli
test
cmp
mov
inc
jb
btr
sar
jo
push
arpl
adc
fmuls
roll
testl
dec
outsb
insl
add
mov
jbe
jl
iret
test
jg
mov
jb
pop
push
push
rclb
add
loopne,pn
je
or
ret
movsl
cmc
pop
fwait
stos
dec
add
fbstp
xchg
push
addr16
fwait
or
inc
mov
cmp
xchg
sbb
mov
jp
sbb
movsl
aam
pop
leave
mov
xorl
sub
pop
repz
jl
mov
in
imul
pop
popf
hlt
jae
pop
xchg
adc
mov
adc
shll
jnp
lds
mov
ret
adc
cmpsl
push
mov
inc
and
xchg
rorl
adcl
pusha
xor
and
jae
imul
sub
cmp
sarl
inc
or
aas
mov
xchg
xchg
flds
fucomp
jecxz
jae
pop
mov
and
add
ss
jp
pop
add
pop
in
testb
test
jae
nop
and
pop
cmp
mov
std
jle
fs
divb
pop
or
or
aam
mov
enter
mov
daa
shl
adc
jecxz
dec
sub
hlt
push
mov
ja
push
aad
cmp
mov
push
jg
movsl
push
jle
push
cmpsl
pop
out
call
int3
cmp
mov
or
and
jns
push
mov
mov
mov
inc
fdivs
mov
loop
and
cmp
cmc
add
cmp
ss
push
loop
or
sub
cld
and
ja
fwait
add
por
lods
xchg
cmp
jl
mov
mov
pop
dec
and
lret
imul
imul
stos
mov
pop
inc
insl
shl
cmp
rorb
repnz
outsb
testb
or
jmp
jg
cs
cmp
mov
fcoms
inc
addr16
xchg
ljmp
add
pop
xlat
dec
push
inc
and
push
inc
xchg
sbb
cltd
push
pushf
inc
push
jg
xchg
xchg
push
bound
cmp
mov
or
xchg
movsl
data16
push
arpl
sub
push
pop
test
ljmp
pop
sti
pop
mov
test
jmp
xor
rcrb
push
sbb
nop
cmp
aas
stos
jnp
or
and
jecxz
cmpsl
add
enter
int
dec
mov
loopne
lds
decb
and
and
pop
pop
rcrb
lcall
mov
add
outsl
adc
jno
jbe
test
mov
jp
jmp
pop
add
shll
push
push
bound
loope
lods
call
xchg
sub
push
dec
ds
sarl
add
js
hlt
pusha
pop
adc
sub
subb
sub
sub
add
inc
mov
orb
fimuls
jl
cld
add
cltd
cltd
hlt
and
test
lock
aad
xchg
sub
dec
int
scas
sub
fisubl
loop
mov
inc
in
lret
mov
xchg
xor
lock
enter
es
sub
jae
push
out
and
test
loope
fldcw
fistpll
cmp
mov
xor
xchg
push
or
ds
add
scas
push
xchg
std
les
les
xor
ja
test
pop
imul
test
andb
sbb
sarb
mov
rorb
mov
pop
jnp
pushf
mov
ljmp
mov
xor
movsl
pop
scas
out
lds
cmpsl
or
jns
lock
andb
outsb
test
sub
cmpsb
lret
dec
and
push
jge
push
cld
cmp
insb
xchg
imul
movsb
adc
roll
lret
xchg
dec
jne
fdivrs
mov
cmp
adc
test
push
hlt
dec
xchg
cld
pop
scas
lods
inc
pop
lock
fisubl
inc
xlat
popa
int
pop
dec
xchg
dec
mov
mov
testb
push
dec
int3
mulb
push
add
js
mov
mov
dec
shll
add
sar
scas
push
cwtl
test
scas
mov
ja
or
mov
push
xchg
and
dec
inc
adc
pop
lcall
ss
jmp
cli
dec
loop
push
mov
rolb
pop
lds
and
sahf
fistl
add
movsb
cmp
dec
dec
je
test
insb
das
xor
jge
rorl
add
cld
cmc
addr16
pop
rcll
push
mov
jp
iret
xor
repz
inc
mov
push
out
sbb
jne
mov
dec
inc
xchg
adc
push
inc
sbb
pop
push
sub
fdivrs
in
sti
jns
push
xchg
jne
mov
dec
inc
jbe
cmp
and
mov
cmp
and
or
cltd
enter
mov
mov
ficoml
clc
aas
fsubrl
in
sub
push
or
and
es
push
lds
fxch
sbb
outsl
sbb
mov
in
add
std
mov
push
xorb
adc
scas
lahf
pop
fdivs
adc
loop
mov
test
dec
sbb
lea
imul
xchg
push
ret
fimull
push
nop
daa
rcll
mov
fisttpl
subl
pop
or
repz
divl
add
stos
push
inc
cltd
and
stos
adc
popa
mov
in
or
sub
mov
pop
jo
cmp
and
and
mov
and
lods
sbb
loope
imul
mov
shlb
inc
je
loopw
fs
push
lods
jge
int3
and
lahf
adc
lret
repz
hlt
lods
dec
sub
data16
nop
and
jle
shll
js
xchg
add
sahf
pushf
lock
pop
cwtl
lcall
mov
mov
jae
dec
cmp
pop
sbb
incb
jl
outsb
inc
add
call
mov
iret
clc
xor
xchg
mov
cmp
pop
in
int
and
or
or
cltd
insb
imul
push
scas
loope
xchg
test
outsb
mov
pusha
jl
stos
pop
cmc
sub
cmc
fisubrs
push
jne
pop
adc
sbb
sbb
jbe
push
mov
xlat
or
xchg
cld
jne
inc
mov
lds
mov
ljmp
push
orb
fildll
pop
notl
jo
push
push
sub
adc
test
js
sarb
and
sbb
or
lds
xchg
inc
mul
fimuls
enter
inc
sub
insb
pop
push
pop
jne
loop
pop
jbe
clc
in
in
ja
gs
lcall
push
cli
shrb
cld
sub
dec
jb
pop
pop
gs
dec
jo,pn
pushf
out
and
xor
fs
sar
gs
jg
loope
pop
aas
xchg
sub
inc
dec
pop
push
push
mov
add
clc
dec
push
xchg
mov
sub
jno
jns
lret
push
loop
and
repnz
popl
in
push
push
cmpsb
mov
adc
rorb
repz
xchg
in
inc
cmp
subb
adc
shl
pop
xchg
inc
jno
xor
mov
fsubr
mov
mov
cmp
inc
and
sbb
and
fbstp
jne
push
test
jl
es
rcrb
scas
dec
jo
inc
popf
sub
adc
and
push
inc
sbb
bound
xchg
mov
push
out
lea
cmp
inc
call
fs
mov
test
aam
hlt
sub
push
ds
and
test
jp
in
dec
lods
cmp
std
je
adc
out
push
hlt
clc
jl
and
xor
xor
lcall
sub
lahf
push
insl
popf
dec
jge
cltd
call
insl
dec
dec
stos
and
mov
cmc
add
sbbb
cli
sarb
cmpsb
push
push
push
ret
fs
aaa
jne
je
stos
sub
movsl
orb
mov
pop
or
lcall
sbb
sti
nop
arpl
roll
scas
adc
push
pop
xor
sbb
fs
movsb
jnp
push
aas
out
repz
scas
lret
mov
arpl
subb
jnp
dec
push
xorb
mov
and
mov
ljmp
pop
cmpsb
pop
daa
pushf
push
repz
enter
pusha
enter
sbb
mov
cmp
dec
lcall
clc
outsl
cmp
pushf
sbb
xor
out
aam
jmp
shlb
add
repz
outsl
adc
cli
fs
insl
in
xchg
sub
adc
pop
jl
xlat
outsl
repnz
clc
stos
in
adc
xor
push
mov
sub
popa
jns
jo
shll
ja
cmp
or
mov
cmp
add
xor
jle
push
les
into
xchg
sti
mov
imul
fisttpll
xor
or
and
test
mov
cmpsl
cmp
xchg
dec
addr16
fwait
pop
push
and
test
sub
push
das
pop
push
arpl
addb
aam
daa
mov
insl
incl
ret
xchg
ficompl
add
adc
and
fstpt
imul
or
les
mov
inc
loop
adc
inc
fldl
std
dec
push
cmp
jmp
hlt
lahf
daa
aam
jmp
or
or
dec
push
xor
adc
ja
or
mov
int3
pop
negl
lret
xlat
cmp
paddusw
mov
mov
addr16
cltd
pop
pop
adcl
iret
and
push
cwtl
jae
sub
nop
mov
inc
jl
add
enter
lock
jbe
pop
pop
mov
movsb
or
ja
cs
ja
pop
test
lret
push
sahf
sub
std
mov
mov
mov
jecxz
jmp
pop
inc
and
dec
mov
cmp
js
xchg
lea
shll
add
dec
add
lea
jg
insl
xchg
cmp
std
or
data16
arpl
leave
cltd
in
stos
sub
jae
push
in
inc
push
movsb
call
enter
jecxz
out
int
pop
mov
int
inc
pop
inc
in
add
mov
mov
jmp
xchg
xchg
andl
ds
ja
jb
cmp
xchg
adc
or
sti
pusha
scas
and
into
xchg
xor
je
xor
call
pushf
sub
push
out
out
lcall
das
mov
mov
stc
adcb
or
push
pop
imul
and
and
inc
inc
pop
xchg
cmp
push
mov
cwtl
test
jle
dec
adc
enter
flds
xchg
sti
add
jb
les
dec
jp
jnp
xor
div
into
test
sbb
sub
push
mov
pop
sti
loopne
xchg
stc
shr
aaa
jg
dec
jecxz
leave
push
sbb
in
jl
mov
jmp
imul
dec
popf
jo
xchg
bound
mov
xchg
inc
lock
shl
and
cmpsl
lods
mov
cmp
jbe
adc
sub
dec
fadds
xchg
dec
outsl
andb
mov
and
xchg
fbstp
push
xchg
ss
and
xchg
xor
push
pusha
iret
sbb
orb
and
dec
rcrl
push
std
pop
mov
push
data16
fisttpl
stos
mov
inc
or
je
inc
js
jne
stos
inc
pusha
lea
lea
addr16
and
iret
loopne
test
aam
xor
repz
fwait
mov
mov
iret
xchg
jl
lret
shrl
mov
shrl
test
arpl
adc
cmc
pop
mov
sti
adc
push
test
cmp
rclb
pop
push
xchg
dec
adc
or
loop
push
dec
add
sbb
andl
jmp
dec
int
xor
push
push
ret
xor
std
popa
out
nop
sbb
push
add
iret
stos
pop
push
push
inc
pop
cmpl
sahf
bound
divl
push
adc
stos
jg
jns
outsb
add
rol
leave
nop
sahf
loop
call
sbb
mov
roll
packsswb
xchg
push
negl
dec
mov
mov
inc
push
cld
and
xor
push
lods
loopne
adc
dec
mov
xorb
add
push
push
stos
sub
xor
hlt
and
xchg
adc
adc
mov
jecxz
arpl
jmp
or
fistl
mov
pop
mov
jb
in
xchg
mov
lcall
xchg
cltd
jb
xchg
stos
rcrb
daa
jge
loopne
push
mov
popa
daa
or
sub
jp
jg
xor
cmp
mov
pop
call
ljmp
lcall
shll
test
in
push
lret
insl
mov
ret
fsub
pop
and
dec
push
cmp
pop
or
mov
scas
andb
dec
scas
das
adc
fsubl
stc
cmpl
inc
aad
inc
mov
sbb
mov
pop
outsl
cmp
inc
jge
stos
lods
xchg
dec
xchg
scas
aad
and
fidivrs
mov
aad
insb
mov
mov
add
pop
shl
popw
jecxz
mov
mov
push
popa
xor
sbb
inc
fisttpl
stos
sub
or
mov
rclb
xchg
inc
xchg
mov
fdivp
xlat
sub
mov
inc
aad
scas
out
rclb
or
das
scas
shl
jnp
cmp
out
cmpb
pushf
jo
push
pop
inc
fisttpl
and
mov
or
pop
sub
cs
nop
xor
or
inc
cmp
adc
adc
mov
pop
and
fcompl
cmp
dec
lods
or
jp
xchg
pusha
dec
sub
and
jo
clc
mov
mov
lret
mov
xor
pop
push
adc
int3
jne
dec
cmp
push
scas
and
imul
fcompl
ret
mov
adc
int3
pop
loopne
shl
sub
in
pushf
das
mov
add
loopne
aad
dec
cmpsl
mov
sbb
clc
dec
movsl
rcrl
jp
test
jnp
stos
or
in
and
xchg
pop
xchg
cld
movsl
rcr
loopne
incl
rcl
loopne
adc
fmul
inc
in
or
dec
rcr
and
imul
int
sahf
clc
pop
mov
sub
pop
lahf
sub
xchg
lret
inc
sub
sub
loop
inc
adc
push
lret
test
sbb
inc
insb
aaa
inc
sahf
bound
mov
sbb
les
jbe
xchg
in
mov
cmpsb
push
out
cmp
cs
lods
ja
dec
jl
pop
sub
cmc
cmp
dec
mov
fstps
dec
lods
and
out
ds
mov
movsl
cmc
das
pop
lret
jmp
and
xchg
test
add
int
lahf
idivb
xor
inc
out
test
test
fdiv
nop
dec
into
mov
xor
cmp
ficoms
sub
adc
adc
cmc
jne
push
cli
int3
push
rcrl
es
pop
test
xor
sbb
stos
stos
int
inc
pop
cmp
ds
xor
push
push
loopne
ljmp
movsb
in
adc
mov
push
fsubr
in
aas
sbbl
frstor
and
cs
aad
xchg
rorb
push
lods
mov
clc
shrb
pop
mov
lcall
vandnpd
mov
adc
adc
mov
cmp
jae
push
daa
imul
sub
mov
xor
mov
mov
adc
add
xlat
xlat
daa
iret
push
xor
xor
fisubs
mov
sbbb
bound
xor
jmp
adcl
sbb
pop
mov
leave
scas
adc
pusha
sbb
out
xor
aad
xor
xor
mov
add
and
bound
mov
notb
mov
mov
mov
fcmovu
dec
mov
cmp
push
cli
addr16
aam
pop
bound
lds
jo
jmp
adc
sub
cmpsl
pusha
rolb
push
dec
ret
add
and
xlat
jl
sbb
cld
mov
sub
outsl
xor
mov
rorb
mov
aas
rcr
imul
in
push
and
add
fldl
in
in
stc
jmp
out
xchg
inc
lret
jno
xlat
cmp
ja
out
outsb
sbb
mov
lret
and
or
push
mov
jp
or
mov
xchg
mov
or
int3
cmp
cmc
fistpll
aam
adc
aas
loope
mov
fdivr
loop
adc
pop
inc
sbb
mov
jbe
xor
push
dec
ds
push
xchg
ret
and
pop
push
cmp
std
push
es
sub
or
clc
aaa
scas
sub
data16
xchg
shl
mov
testb
insl
cmp
pop
sub
inc
fdivs
pop
movsb
fwait
mov
ljmp
adc
lods
sub
cs
out
mov
pop
pop
xchg
mov
sbb
dec
mov
or
add
lret
push
bound
dec
push
jl
adc
xor
pop
mov
cli
xchg
and
mov
stc
out
pop
clc
jne
outsb
das
push
add
xorl
and
test
mov
aaa
jno
lods
inc
mov
pop
lods
mov
lock
inc
insb
add
mov
shll
aad
jne
imul
dec
and
repnz
ret
rcll
pop
adc
iret
jmp
push
push
out
mov
les
ret
loope
pop
jmp
inc
mov
jg
scas
adc
mov
lods
call
pop
rol
xor
fistl
sbb
mov
sub
mov
cwtl
push
fwait
mov
nop
jge
ret
dec
sbb
push
jle
xor
bound
mov
xchg
cmp
rol
movsb
sbb
pop
scas
es
add
xchg
push
pop
int
mov
ret
adc
sbb
and
std
xor
aam
mov
xchg
sti
shl
fstps
cmp
pop
adc
mov
mov
out
push
sub
push
mov
repz
adc
cmpsb
push
lods
out
mov
cmp
dec
clc
cmc
int
xor
xchg
xor
sub
xchg
adc
mov
pop
out
out
jle
jnp
jmp
pop
pusha
mov
cld
fisttpl
notb
int3
jno
stos
mov
inc
call
aam
xchg
fsubl
sub
xchg
xor
pusha
mov
sub
sbb
sbb
test
iret
pop
pushf
into
push
push
lods
lea
adc
sub
dec
clc
pop
imull
sub
loop
fwait
daa
xorb
pushf
test
mov
lods
xor
outsl
push
add
sub
mov
pop
pusha
dec
test
rcrb
pop
or
xchg
cli
sti
add
mov
ffree
or
idivl
and
inc
cmpb
in
aaa
sub
jge
pop
test
pop
or
adc
out
enter
sub
sti
pop
mov
mov
fstpt
fcoms
add
push
pop
push
ja
addl
xor
ljmp
and
inc
or
es
lcall
and
addr16
clc
inc
or
rcrb
addr16
jp
imul
cmp
popf
mov
push
adc
test
mov
pusha
sbb
pop
in
icebp
mov
repz
add
mov
lcall
insl
or
sbb
sbb
mov
pop
dec
and
ja
push
sbb
jle
xchg
cmp
xchg
icebp
ss
cmp
or
rcr
pop
outsl
test
inc
xor
cmpsl
or
cmp
sbb
xchg
mov
les
cmpps
gs
andl
cli
iret
repnz
stos
rol
and
or
xchg
daa
push
out
clc
adc
bound
mov
sub
sbb
mov
xchg
mov
xor
mov
dec
ret
mov
xor
adc
outsb
nop
int3
lods
lret
mov
adc
pop
sub
pop
and
sub
jmp
push
insb
aas
js
movsb
sbb
sbb
cmp
jecxz
loope
in
lcall
lret
test
inc
add
or
rorb
pop
adc
sub
mov
push
jns
sub
orl
jo
mov
mov
mov
in
push
or
mov
push
mov
iret
ror
sub
push
aam
pop
pop
daa
inc
mov
pop
imul
fisubs
pusha
subl
ja
fists
xlat
aaa
inc
sub
add
ja
in
mov
push
xchg
or
outsl
sbb
sub
aam
cmp
les
or
ja
in
ljmp
pop
roll
push
add
pop
sbb
lock
pop
jle
mov
fcmovu
mov
pop
sar
arpl
cmp
cmp
push
cli
cmpsl
push
or
jle
int3
inc
out
std
cli
fldt
test
das
jo
mov
out
insb
and
push
cmp
sbb
outsl
or
das
and
adc
stos
xchg
xchg
int3
insl
mov
outsb
movb
dec
pop
mov
loopne
push
aad
outsl
in
push
push
jge
and
bound
mov
mov
jno
mov
cmc
mov
jmp
test
jne
icebp
inc
pop
pop
push
sub
cld
clc
stos
gs
stc
repz
push
adc
pop
out
aas
sub
and
mov
call
bound
imul
test
and
daa
bound
mov
out
mov
std
push
int
inc
pusha
xchg
dec
outsb
shlb
out
xchg
loope
leave
into
repnz
imul
insl
inc
cltd
inc
adc
hlt
fwait
mov
out
xchg
lds
jns
repz
lcall
cmpsb
faddl
xchg
pop
test
inc
lcall
fldenv
xor
stos
adc
jne
scas
jbe
lods
push
rcrl
inc
nop
inc
fcomps
out
dec
idivb
into
and
push
sbb
imul
mov
mov
mov
pop
je
dec
popf
dec
iret
lock
incb
gs
adc
push
aam
adc
dec
fs
dec
stos
dec
lock
mov
adc
sub
cmp
repz
push
popf
cmpsl
repnz
sub
dec
mov
cmpsl
sub
popa
addl
cmp
pop
movsl
xchg
cwtl
and
test
mov
xor
lret
add
cmp
inc
xchg
dec
and
add
scas
dec
add
adc
mov
outsl
popf
shll
add
jle
push
fmull
push
fidivrl
mov
out
aas
mov
dec
movsl
sti
leave
imull
mov
adc
or
pop
iret
fisttps
cmp
mov
xchg
fdivr
mov
jge
sbbb
je
cwtl
test
mov
std
jne
test
or
sbb
and
dec
js
xor
repz
and
mov
cmpsl
int
or
mov
or
lods
sbb
enter
sbb
data16
mov
mov
scas
fcmove
inc
ljmp
pushl
sahf
sub
cmp
in
sub
ss
xchg
test
push
enter
rcrl
les
and
int3
pop
jecxz
or
push
mov
pop
xor
jno
and
cs
inc
fistpll
cltd
pop
arpl
adc
into
jne
pop
dec
sahf
gs
ret
daa
and
insl
lds
bound
insb
mov
mov
jno
bnd
xor
gs
mov
int3
xor
or
mov
in
loope
fsubp
and
jmp
in
loope
mov
lcall
imul
iret
pop
adc
dec
daa
add
cmp
shll
dec
push
in
cmp
imull
xchg
stc
lods
jl
icebp
mov
cmp
mov
aad
xchg
jo
aam
mov
nop
add
rclb
mov
sub
cmp
pop
push
shll
shrl
movsb
or
stos
andl
pop
mov
sbb
cltd
cld
push
out
pop
mov
and
hlt
imul
cltd
jo
leave
sahf
add
js
aaa
xchg
fidivrl
xchg
push
dec
pushf
icebp
fdivl
sub
push
and
lahf
or
jne
mov
sbb
cmp
push
adc
test
cmp
rcl
iret
fcmovnu
lret
push
inc
pusha
jge
inc
jae
insb
int
and
jns
lahf
and
sti
mov
popf
dec
lods
cltd
xchg
outsl
adc
stos
out
jbe
pop
das
aad
cld
cltd
bound
pop
mov
push
mull
mov
or
ret
xor
mov
sub
push
fimull
in
cmp
xor
jmp
fwait
outsb
xchg
sbbl
push
mov
mov
out
xchg
cmpsl
cmp
aam
rolb
clc
out
ss
mov
xchg
jg
lret
sti
push
adc
mov
cwtl
test
jmp
aaa
pop
cmp
sbb
cmp
sub
mov
cmp
fprem
cmp
mov
push
adc
dec
sbb
mov
xor
inc
insl
idiv
jle
cmpsl
repz
fsts
mov
aad
dec
mov
sbb
lods
cmp
dec
pop
jns
push
shll
movsb
dec
xor
mov
fstl
pcmpeqb
sub
mov
xor
stos
pop
mov
loope
out
adc
cli
lea
fwait
xor
sub
mov
clc
mov
gs
outsl
inc
xchg
stos
fsubrp
mov
pop
dec
jp
out
rclb
cltd
push
imul
and
and
add
mov
sub
mov
out
push
out
add
mov
pop
mov
aad
jb
mov
je
mov
idivb
fisubl
xor
lock
and
jbe
push
mov
adc
cmp
push
cmp
stos
cmpsb
loop
inc
mov
sbb
scas
lea
sub
cmp
js
lea
fnsave
dec
xchg
pop
aad
xchg
lock
cmpsb
bound
jg
dec
addr16
push
aad
scas
bound
adc
xchg
add
ss
xorb
cmp
dec
outsb
xor
mov
iret
pop
mov
ret
fstpt
rcr
into
test
lret
adc
lret
xor
inc
inc
bnd
movsl
mov
pop
in
loope
shlb
std
and
scas
lods
les
test
scas
cmp
sub
push
les
addr16
out
push
jl
gs
aam
sbb
jmp
lods
jmp
stos
add
aas
rcrl
lret
cmpsl
imul
dec
jae
test
mov
out
faddl
repnz
jmp
stc
cld
sub
out
xchg
ss
dec
cmp
imul
push
inc
mov
jmp
iret
cwtl
test
fs
add
pop
pushl
dec
jmp
or
xor
aaa
mov
sub
lods
out
shl
and
jg
in
lea
pop
pop
cmp
dec
sbb
negl
xchg
adc
push
jne
jb
dec
jmp
es
dec
lahf
stos
shl
rol
idivl
jl
xchg
sub
icebp
push
pusha
xchg
sbb
in
mov
stc
outsl
scas
shll
adcl
or
lahf
push
jecxz
sbb
push
lea
je
stos
mov
mov
leave
xchg
cmp
pop
aam
out
inc
dec
add
daa
xor
push
mov
int
dec
lret
mov
das
pop
xor
cs
cmpsb
mov
xor
adc
stc
outsl
pop
cwtl
mov
mov
cmp
pop
scas
push
pop
ss
dec
mov
xchg
aas
aam
cli
xlat
mov
pop
outsb
fbld
rclb
pushf
dec
push
lods
sbb
sbb
pop
outsb
mov
sbb
shll
inc
lcall
jae
imul
jle
xor
cmp
out
stc
adc
xchg
inc
mov
subb
and
cltd
push
icebp
and
addr16
inc
jmp
js
mov
daa
in
fmuls
inc
cld
pop
cld
pushf
mov
mov
xchg
xor
xor
jnp
sub
cwtl
cmpsb
inc
and
jmp
add
and
adc
mov
cli
test
aam
sahf
repnz
andb
daa
inc
aad
add
cld
adc
and
jg
cmp
pop
ljmp
mov
mov
inc
cmp
adc
mov
test
icebp
adcb
sti
xor
ss
das
icebp
test
leave
movsl
sbb
faddp
das
pop
outsl
movsb
mov
roll
lock
sbb
or
lea
mov
mov
aas
xchg
pop
cmpsb
xchg
lds
push
imul
mov
ja
ret
mov
jmp
inc
mov
pop
leave
stc
out
inc
xor
or
adc
fmull
loopne
jg
lahf
xor
push
sbb
xchg
insb
inc
or
mov
sub
dec
xchg
adc
int3
add
test
mov
iret
add
jmp
ja
dec
popa
jbe
inc
pop
or
das
gs
jge
pop
aad
mov
pop
add
shll
les
insl
fsub
fimull
jns
xor
cmpsb
in
aad
adc
mov
dec
out
sbb
aam
addr16
and
push
inc
xchg
pusha
stos
aam
cmpsl
inc
mov
adc
pop
les
popa
sarl
cmp
pop
orb
loopne
xchg
dec
insb
xor
leave
adc
repz
fwait
into
insl
repz
push
stos
sub
stc
pusha
je
out
mov
cmp
pop
mov
push
stc
dec
mov
sub
popa
aad
push
fnstsw
cmp
pop
xor
pop
stos
data16
adc
clc
or
and
enter
push
push
into
sbb
fisttps
mov
cmpb
movsl
pop
movsb
pop
sub
mov
mov
pop
cmp
imull
sarl
mov
cmpsl
into
addr16
rorw
xchg
pop
fstps
mov
loope
or
repnz
pusha
add
fidivrl
lret
ret
mov
add
or
repnz
mov
sti
or
lock
mov
stos
call
fs
imul
or
jbe
sub
push
and
sub
mov
test
jle
push
xorb
mov
and
jno
or
inc
mov
call
push
pop
aam
fabs
lods
xor
mov
push
add
jge,pt
call
mov
test
adc
rorb
fisttps
movsb
and
xchg
add
mov
jmp
js
idivb
mov
sar
or
push
pop
dec
lea
ja
fistpl
pop
in
or
and
rcr
sub
push
lock
sub
jmp
xchg
or
imul
sti
imul
add
push
aaa
jmp
or
push
test
push
cmp
pop
repnz
xchg
fildll
inc
sub
repz
adcl
ss
dec
movsl
pop
scas
sbb
xchg
mov
aam
xor
xchg
xchg
xchg
mov
jno
cmp
xor
imul
rorb
int
sub
add
mov
stos
push
movsl
inc
sbb
push
xlat
xchg
ss
push
jno
aas
fimull
orl
movsl
inc
xchg
cmp
stc
ret
jb
mov
ret
rcr
aam
hlt
and
adc
sub
loope
dec
sbb
lahf
push
sub
fs
xchg
into
and
cmpsl
mov
sbb
pusha
lods
int
cmp
aaa
pop
and
fwait
lahf
and
mov
lcall
add
out
cmp
rolb
into
insb
fldt
adc
push
aam
dec
pop
and
popf
pop
mov
test
inc
jge
ja
sub
pushf
and
imul
and
or
cmp
pop
test
stos
mov
mov
jns
sbb
rorb
ja
cmpl
jge
insl
sbb
icebp
imul
sub
pop
shlb
insl
loop
fimuls
gs
outsl
mov
test
in
pop
adc
cwtl
cmp
mov
test
jecxz
adc
cli
inc
lcall
data16
dec
and
out
scas
sub
dec
xor
pop
mov
or
ss
jno
mov
negl
mov
mov
mov
leave
lock
lret
jmp
mov
negl
test
ja
setne
jo
sub
inc
daa
out
lret
sbb
inc
daa
bswap
movaps
cmp
or
push
ljmp
fwait
mov
popf
out
out
pop
jle
inc
push
lcall
add
pusha
push
inc
mov
testb
insb
jbe
adc
xlat
xchg
lods
lock
or
testl
js
mov
stos
push
fdivrs
mov
dec
adc
push
mov
inc
popa
or
fmul
ss
sbb
xor
cmc
mov
mov
mov
adc
scas
pop
jp
int3
movsl
fsub
arpl
es
dec
mov
or
xchg
scas
imul
mov
int3
jno
rorb
xchg
aaa
in
xchg
fidivrl
ss
sti
xor
test
xchg
jo
cmp
sbb
jo
push
in
or
testb
xchg
lods
call
es
push
sub
push
stos
add
aam
lods
push
fcompl
out
inc
pop
jp
mov
mov
test
mov
push
sub
pop
lods
fidivs
popf
or
into
aam
mov
and
mul
xor
cmpsb
pop
outsl
ficompl
add
mov
cmp
ljmp
mov
orl
push
lret
lret
cmp
int3
cltd
pop
lods
popa
push
shrl
pop
fcomps
lea
popa
push
aam
inc
jg
mov
movsl
mov
popf
push
jb
enter
enter
sbb
dec
sbb
push
pop
cmp
pop
idivb
push
insb
mov
cs
mov
pop
das
jmp
sbb
mov
insl
int
hlt
mov
sbb
sub
out
xor
and
hlt
cs
jecxz
cmp
mov
add
ljmp
and
out
jbe
pop
cwtl
mov
ss
cmp
push
or
mov
ljmp
mov
lock
sub
push
push
dec
mov
xchg
push
pusha
jmp
cmp
sahf
pop
sub
inc
lret
adc
mov
jmp
mov
inc
mov
loop
or
cs
cmpsl
subl
xor
lods
aas
shrl
lcall
imul
repnz
ret
pop
sbb
lods
jmp
sbb
out
cmpsl
outsl
add
xor
pop
in
out
pop
push
push
cmp
fisttpl
dec
push
cwtl
add
popf
cmp
adc
add
sbb
repz
pop
imul
notb
jmp
icebp
shrl
loop
std
fldenv
cmp
mov
lret
jne
xor
pop
lahf
cld
sbb
insl
cld
arpl
mov
testb
in
mov
cltd
mov
jmp
push
enter
sub
js
push
sub
sbb
and
nop
cmc
jmp
xchg
add
lcall
js
xchg
nop
ret
cmp
mov
js
ljmp
cs
cmp
cmpsb
mov
mov
insl
mov
sub
xor
rclb
inc
gs
inc
scas
mov
sub
jne
jns
sbb
mov
jmp
and
fwait
xor
je
cmpsl
je
adc
inc
in
sub
or
in
dec
sub
aad
mov
mov
ljmp
push
icebp
mov
frstor
adc
repnz
mov
orb
and
cwtl
xchg
sbb
sbb
mov
mov
mov
movsb
mov
cmp
jb
mov
adc
xor
and
and
mov
jle
adc
or
imul
mov
or
subb
ljmp
lret
mov
filds
mov
arpl
in
into
fidivrs
jp
jg
jnp
push
mov
stos
es
inc
xor
mov
xchg
cmp
imul
sub
pop
xorb
cli
das
fimuls
enter
pop
pop
ss
xchg
cwtl
out
mov
test
xor
adc
bound
andb
out
xor
ret
sahf
xchg
jl
jecxz
mov
inc
push
loopne
lods
pop
lret
xchg
addr16
inc
adc
mov
mov
mov
or
push
jge
cmp
xlat
inc
push
inc
jmp
and
addl
or
xchg
mov
sahf
fistps
sbb
dec
cmc
and
cmp
in
adc
sahf
std
xorb
adc
xor
and
fdivrl
mov
jnp
dec
aas
aad
dec
xor
test
movsl
lods
jmp
mov
dec
cld
aad
lods
js
adc
in
fnstcw
xchg
int3
push
sub
stc
dec
adc
sub
push
inc
and
push
int3
push
stos
inc
jne
or
shll
pop
add
out
cmp
mov
fsubp
mov
jb
dec
xor
sbb
icebp
mov
dec
mov
cmp
lahf
in
test
adc
std
sti
out
ja
mov
decl
lods
mov
int
mov
ja
xchg
lret
push
mull
out
push
and
sbb
adc
std
inc
lcall
add
jmp
into
setns
sbb
sub
imul
jp
jnp
xchg
mov
sub
mov
or
in
mov
jp
jge
shrl
pop
sti
les
jns
and
cmp
pushf
inc
pop
add
ret
andb
in
shll
dec
cld
push
cmp
aaa
inc
ss
stos
pusha
imul
mov
rorb
imul
stc
aad
cmp
repz
mov
fucom
iret
xor
sbb
cmp
ret
jle
sub
xchg
repnz
in
inc
push
pop
stos
ffree
out
dec
xchg
sarb
cs
lahf
fldl
imul
pop
pop
mov
jle
lcall
jns
push
icebp
mov
dec
inc
xchg
mov
xchg
lret
adc
push
cmpsl
call
mov
lock
into
icebp
sarb
out
pop
push
std
cmp
fwait
jg
cltd
out
and
dec
inc
ret
cwtl
cld
push
sub
xchg
jp
popf
ljmp
fdivs
decl
call
cmpsl
mov
inc
mov
loopne
idiv
shlb
or
jo
stc
clc
mov
ret
sub
lods
mov
jae
adc
cmp
dec
popf
test
popf
inc
add
ljmp
cmp
pop
cmpsb
subb
jo
pop
push
loop
popf
xor
push
mov
push
jbe
jmp
test
nop
pop
or
outsb
inc
push
mov
xchg
sub
add
push
fidivl
pop
hlt
and
scas
cmp
mov
jmp
dec
sbb
subl
loopne
inc
push
in
mov
jae
xchg
add
push
out
push
int
push
and
push
and
or
pop
outsl
or
dec
sti
cmp
scas
add
cmp
mov
aaa
cs
and
mov
daa
hlt
pop
fwait
push
and
dec
xchg
fisttpll
adcb
inc
sub
mov
loope
int
jns
adc
leave
dec
push
jmp
aaa
mov
repnz
xor
xor
jle
lock
inc
adc
dec
pushf
jne
pop
mov
adc
leave
push
sbb
in
js
or
insl
aas
add
xchg
fdivrl
insl
or
cmc
lcall
out
iret
lods
push
cmp
or
mov
cli
cmp
loope
iret
or
movsl
mov
std
jnp
dec
xor
in
jb
data16
in
jg
push
in
scas
sbb
fsubr
xlat
xchg
stc
enter
cltd
gs
pushf
int3
dec
adc
stos
and
xor
std
and
cmp
or
imul
lret
xchg
inc
das
sti
jg
jle
jbe
sbb
mov
cmp
std
ret
shlb
lcall
pop
fnstcw
fs
out
popa
xchg
addr16
push
lret
xorl
fimull
frstor
pop
or
mov
mov
lret
inc
stos
lahf
jnp
push
je
push
mov
mov
mov
adc
mov
idivl
mov
cmpl
in
inc
inc
nop
add
sbb
das
or
and
mov
inc
mov
std
add
shrl
mov
clc
cli
mov
int3
movsb
sahf
shl
movsb
in
test
lock
xchg
fnstenv
insl
dec
dec
out
test
loope
cmp
movsb
loop
insl
push
dec
iret
clc
call
ds
sbb
fstl
xchg
dec
cmp
stos
in
loope
mov
dec
mov
or
mov
loope
mov
dec
xchg
movsb
dec
orb
pushf
sub
mov
and
jg
mov
setne
push
test
mov
lods
inc
scas
xor
or
xchg
xor
mov
adc
add
adc
dec
sub
mov
xor
jo
and
call
mov
cmp
push
loop
mov
dec
fs
mov
xor
mov
lods
fdivs
mov
pop
or
and
jns
sbb
jae
adc
inc
lea
sub
rorb
cltd
test
jl
aad
mov
pop
cmp
sub
movsb
mov
repnz
leave
hlt
int
rclb
and
push
movsl
pop
imul
jno
mov
faddl
lret
movsb
pushl
test
movsl
std
xchg
inc
pop
sub
mov
int3
cwtl
sbb
mov
ljmp
add
sub
or
mov
lret
dec
mov
sbb
out
cs
adc
dec
mov
fisttpl
mov
jb
mov
pop
pop
into
aaa
xchg
into
jl
and
outsb
inc
mov
mov
popf
jge
imul
push
inc
adc
loope
jno
mov
repz
push
cmp
dec
or
xadd
outsl
mov
loope
aam
lock
lods
mov
or
push
jecxz
pop
dec
rorb
push
imul
inc
mov
ds
cmp
std
clc
negb
test
mov
out
mov
add
push
daa
pop
imul
js
add
jmp
cmpsb
cmpsl
adc
xchg
out
sbb
sbb
sahf
inc
mov
pop
in
and
dec
ret
mov
mov
pop
adc
ret
imul
and
lahf
xor
pop
or
mov
lcall
jne
sar
cmp
mov
add
enter
or
jae
fxsave
call
pop
mov
fnsave
mov
mov
mov
mov
pop
arpl
pushf
inc
shll
mov
out
dec
jns
popa
pop
test
fnstenv
ljmp
jp
or
pop
in
into
mov
xor
hlt
inc
xorb
aas
mov
cmpsb
dec
lods
sbb
cmpsb
icebp
sbb
imul
sub
inc
stc
cltd
repnz
xchg
ret
stos
dec
stos
test
lea
shlb
xor
adc
xchg
int3
fidivs
cmp
divb
repnz
pop
mulb
xor
lcall
or
push
adc
push
or
fsin
pop
jge
or
mov
adc
xlat
fdivp
sahf
das
push
in
unpckhps
dec
sub
and
cmpsb
jge,pt
lcall
lea
sbb
mov
cmp
in
xchg
fisttpll
push
imul
or
lahf
push
or
lods
out
ljmp
cmp
dec
jl
lds
jbe
mov
les
cmpsb
movsb
add
inc
mov
adc
in
jo
cmp
ja
push
arpl
push
xor
mov
into
dec
sub
inc
lods
out
xchg
inc
mov
push
xchg
sbb
jbe
mov
out
xor
mov
push
rcll
popf
sbb
adc
leave
push
mov
add
cld
fnstenv
andl
inc
mov
push
jmp
inc
loop
cmp
jg
test
add
mov
xchg
dec
or
jmp
fldt
cltd
loope
cs
sarl
negb
hlt
cltd
call
pop
jecxz
jmp
adc
inc
ss
cmpsb
aam
sbb
cmpl
jmp
pop
sahf
add
lret
leave
out
nop
adc
outsb
out
add
add
sti
aas
push
jl
popf
mov
sahf
pusha
fwait
outsl
xor
repnz
push
inc
mov
aas
sbb
jl
push
insl
clc
jg
cltd
lret
lahf
aaa
add
int3
and
enter
pop
fists
cmpsl
adc
cmp
test
mov
testl
shll
mov
popf
dec
cmpl
int
jmp
mov
xor
sub
or
ss
mov
shrb
mov
xchg
or
gs
and
scas
sbb
sbb
xchg
fisubs
leave
cmp
stos
inc
pop
ret
sti
repnz
cmp
push
ret
fisttpll
jno
cmp
lret
jecxz
pop
in
neg
jl
lock
int
sub
psrld
into
pop
stos
mov
jecxz
addl
jo
cmp
test
call
aad
pop
push
cli
loop
andb
dec
pop
test
push
mov
nop
mov
insl
or
sub
data16
or
pop
cwtl
adc
icebp
cmp
scas
pop
mov
adc
mov
adc
inc
cmp
and
test
aad
rcr
dec
mov
lds
dec
sub
push
in
and
test
sarb
ljmp
fiadds
nop
fsubrl
ret
fwait
xor
fucomip
push
bnd
arpl
out
les
inc
ror
push
cld
testb
inc
add
flds
mov
and
jmp
out
and
mov
test
cmc
and
test
xchg
push
xor
sub
into
pop
loope
xlat
cmp
or
mov
xchg
mov
jmp
sbb
push
mov
add
dec
int
aas
jo
or
xor
in
aam
int3
dec
cltd
shrl
push
add
pop
leave
out
pop
add
dec
lods
fs
dec
stos
test
mov
mov
and
and
out
push
push
jecxz
adc
dec
loop
xchg
xchg
repz
or
addr16
and
lcall
adc
jmp
loope
jns
les
test
mov
ss
sbb
jp
fldl
jae
stos
push
pop
xor
cld
in
dec
in
notb
xchg
pop
in
or
jbe
stos
pushf
sbb
push
sub
xor
rcrb
adc
sbb
ret
test
cmp
add
fisubrl
icebp
sahf
mov
or
xchg
inc
in
leave
js
fldcw
cmp
loop
sbb
inc
cmpsb
out
mov
inc
rol
sub
pushf
mov
fs
aaa
xchg
pop
mov
dec
cld
xlat
lret
mov
push
cli
xor
movsb
loop
ds
pushf
outsl
out
sahf
jno
lret
adc
inc
push
adc
js
pushf
sub
dec
rcrl
movsb
mov
and
ret
xor
imul
pop
xorl
call
dec
pop
out
sub
dec
cmp
std
loope
lds
lods
push
mov
aam
aaa
push
mov
xor
addb
dec
test
mov
mov
and
or
add
sub
mov
nop
lahf
es
cwtl
gs
cli
mov
dec
lods
lods
add
mov
mov
jle
mov
mov
std
lret
xorb
inc
fldenv
mov
scas
inc
jp
in
rorb
pushf
lea
xlat
xor
lahf
das
arpl
test
cmp
push
ja
iret
push
mov
adc
add
cmp
or
outsb
psubsb
mov
enter
lret
cmp
jecxz
xor
mov
push
jg
movd
sbb
cs
mov
fists
lea
pop
lahf
fwait
push
jae
insb
mov
jo
addr16
cmp
test
push
xchg
or
aas
out
xchg
cmp
inc
push
mov
fisttpll
shll
and
lock
push
add
jo
mov
fsubrl
jmp
mov
out
dec
int
out
and
inc
repz
and
sbb
push
in
mov
push
xchg
pop
push
and
push
pushf
jecxz
fildll
xchg
movsb
or
add
repnz
hlt
fsubl
jo
sub
js
xchg
inc
arpl
fdivs
cmp
or
xchg
lds
adc
shlb
fcom
mov
xchg
les
and
dec
lods
xor
fs
scas
rol
adc
mov
mov
mov
ficoms
mov
jecxz
aas
jae
cmpl
xchg
stos
sub
data16
pop
push
pop
cmp
popf
push
or
enter
daa
int3
leave
cli
js
mov
dec
imul
mov
popf
fldl
jnp
cmp
arpl
adcl
test
mov
sarb
and
daa
jecxz
imul
pop
pop
ja
dec
jno
adc
mov
outsl
shrb
cmp
mov
scas
push
int
mov
popf
xor
cmp
fs
cmp
cld
pop
pop
pop
push
mov
lret
loopne
sbb
jmp
sbb
xorb
cmp
lods
aad
and
jnp
mov
xchg
push
test
sti
imul
je
cli
sbb
sar
mov
scas
push
pop
pop
dec
cmp
popa
jno
sub
dec
sub
jecxz
fsts
daa
mov
or
sub
add
xchg
ret
mov
xor
arpl
xlat
sbb
outsl
out
add
xor
pop
mov
data16
jb
push
inc
push
inc
pop
push
scas
pop
push
mov
push
loope
push
in
cmp
mov
sub
mov
or
notl
pusha
jns
add
pop
movsb
fiaddl
mov
enter
pop
leave
mov
hlt
test
or
xchg
gs
int
int3
mov
and
mov
sbb
xchg
adc
push
and
scas
inc
gs
mov
and
adc
fstp
pop
out
popa
das
rol
inc
lahf
push
std
fwait
dec
rcrb
push
gs
test
mov
int3
push
add
cmp
mov
divl
out
repnz
leave
inc
lods
nop
and
shl
cmp
sbb
je
lods
icebp
les
xchg
inc
repnz
lock
xchg
mov
cmp
dec
cltd
sbb
sarl
dec
add
or
loope
push
call
jns
addr16
neg
push
pushf
push
lock
mov
jl
mov
lret
and
imul
mov
and
fsubrs
aad
mov
or
push
sbb
xor
js
call
and
sub
jmp
inc
out
or
lods
mov
cmc
in
mov
xchg
outsl
pop
mov
imul
sub
inc
mov
push
in
mov
mov
cmp
sub
nop
cmp
push
mov
lret
pop
stos
push
test
push
mov
push
jle
mov
xchg
test
int
imul
mov
xchg
cmp
test
movsb
inc
adc
movsbl
adc
shll
pop
scas
jno
xchg
addr16
movsl
push
inc
xorl
loope
dec
inc
push
cmpsb
sub
xor
xor
out
clc
sbb
decl
inc
cwtl
sbb
daa
mov
add
push
mov
into
fcoml
call
nop
push
std
mov
xchg
rcrb
testb
ret
mov
fdivl
and
cmp
mov
dec
rcrl
or
mov
shr
dec
and
inc
mov
and
lret
mov
fwait
stc
cld
xor
add
pop
pop
mov
ficompl
cmpsb
rorb
add
xchg
sbb
xchg
mov
add
lahf
jp
cwtl
pusha
mov
dec
add
sarl
popf
and
test
daa
int
mov
or
fdivrl
add
xor
dec
ja
mov
lret
mov
repnz
adc
leave
or
jnp,pn
repnz
jo
loopne
shrb
adc
scas
fnstenv
mov
mov
add
mov
cs
add
mov
push
push
lock
cmp
fcoms
pop
mov
dec
jb
pop
repz
enter
enter
dec
aam
js
rclb
loope
cmpsl
jb
into
mov
add
pop
sub
in
inc
jnp
adc
push
pop
add
cs
repz
scas
adc
jae
dec
ret
stc
sti
cld
pxor
arpl
adc
push
and
sub
add
or
push
sub
fistps
jl
rcll
inc
xchg
dec
push
test
js
jns
sub
sarb
and
jecxz
pop
sbb
call
xchg
mov
rorb
pop
cmp
push
gs
test
push
push
test
cmp
push
xor
pop
pop
mov
insl
fmuls
fisttps
xor
mov
ja
sub
sbbl
cwtl
clc
and
sbb
push
add
ja
dec
push
mov
and
rcll
out
adc
add
sbb
dec
aas
mov
push
and
fimuls
lcall
scas
pop
inc
lock
ja
ret
repnz
cs
ss
and
and
cmp
dec
push
jb
mov
jno
shll
jecxz
mov
les
scas
xor
xchg
aaa
mov
scas
mov
xor
mov
je
fdivrp
mov
sbb
sbb
in
das
hlt
fsubs
insl
mov
arpl
mov
jp
in
scas
mov
js
shll
fisttpl
lret
xor
imul
cmp
inc
xchg
sbb
fwait
loope
test
lea
insb
in
mov
imulb
mov
ja
pop
fdivrl
in
and
sub
ret
and
jo
insl
pop
jo
pop
lock
cld
xchg
sub
xchg
int3
int
push
sbb
mov
scas
outsl
pxor
mov
das
cmpsb
jbe
test
cmp
mov
push
cmp
pop
clc
decl
mov
mov
ret
adcl
inc
in
stc
out
inc
inc
xchg
daa
lods
add
inc
dec
cmp
faddp
test
repnz
mov
repz
and
jb
mov
mov
je
jb
inc
fbld
jge
aam
jbe
sub
repnz
test
jmp
cld
pop
scas
sbb
dec
das
dec
xor
je
cmc
or
movsb
sti
in
fiaddl
jnp
add
fdivrl
mov
dec
xchg
fiadds
cmpsl
dec
outsb
sbb
insb
jg
inc
jg
inc
out
out
mov
jge
sarl
adc
inc
sbb
adc
push
enter
cmc
shr
dec
cmp
fcoml
push
xchg
xchg
mov
addr16
shlb
jb
mov
movsl
xlat
mov
push
mov
aam
xchg
adc
andb
out
dec
adc
iret
cmp
movsb
and
add
and
and
lret
aaa
pop
inc
jne
mov
imul
mov
and
cmp
add
xchg
mull
lock
scas
int
add
adc
mov
rcll
lcall
out
lock
sahf
nop
lock
sbb
pop
into
mov
fistl
push
ljmp
xchg
mov
or
dec
scas
mov
add
out
sub
fiadds
outsb
sahf
fxsave
fmul
cmpb
mov
cmp
movb
cld
sahf
or
xchg
push
push
pop
test
aam
cs
cmc
mov
outsb
int
repz
inc
hlt
and
pop
or
frstor
inc
mov
mov
dec
roll
xchg
dec
into
cmp
inc
movsb
jbe
aas
fsubs
push
sub
pushf
inc
in
daa
mov
mov
mov
sub
dec
jns
xor
mov
mov
mov
pusha
dec
nop
lahf
imul
jge
lcall
add
push
or
dec
mov
enter
aaa
mov
jp
jnp
xor
fnstsw
lcall
xlat
pop
inc
out
xor
fdivrl
movsb
mov
jbe
mov
xchg
fs
bnd
sub
scas
ja
mov
imul
rcll
or
sbb
ret
jecxz
lea
loope
jle
mov
cmp
sti
push
aas
cmp
pop
push
mov
sub
outsl
inc
in
mov
nop
outsb
inc
or
cmp
mov
xchg
sub
xchg
sbb
loopne
mov
fadd
xchg
je
out
dec
push
sbb
add
inc
ret
xor
push
xor
cmp
sub
cli
test
cmp
out
test
xchg
lock
inc
dec
sub
shlb
out
stos
sbb
shrb
pop
sbb
idivb
sbb
mov
cmc
xor
sti
scas
sub
dec
sti
add
sbb
sub
cmp
xchg
cmp
dec
test
stos
cmp
mov
add
or
dec
cmp
in
call
negl
lret
movsb
sub
push
subb
movsb
repz
fcoml
xchg
xchg
ja
add
xor
pop
das
fisttps
cmp
lods
mov
add
and
xchg
enter
sub
xchg
xchg
xor
sub
pop
pop
fsin
adc
xor
loopne
fwait
sarb
roll
jge
add
jecxz
mov
xchg
in
out
cmp
and
pop
mov
mov
loop
xchg
jbe
jb
pop
and
loop
and
dec
cltd
ja
push
cmpsb
popa
es
mov
add
ss
cwtl
hlt
jle
sub
in
stos
cmpsb
scas
hlt
decb
mov
inc
outsl
test
add
leave
and
or
fucom
insb
out
jl
dec
xchg
outsb
jno
daa
push
scas
lods
sarb
cmp
cmp
mov
ljmp
loope
popa
gs
js
insl
outsb
or
add
xor
pop
add
movsb
out
xchg
pop
pop
dec
mul
movsl
lahf
pusha
icebp
test
addr16
fsubrs
add
jo
sub
inc
lock
clc
and
pusha
test
scas
imul
out
lea
and
repz
into
test
or
enter
out
nop
xchg
mov
inc
cmpsl
xor
push
movsb
fs
subl
xchg
mov
das
dec
xchg
sbb
loop
gs
push
sub
sbb
mov
pop
pop
rcl
jle
cltd
lret
sarl
xchg
mov
jbe
or
js
addr16
mov
je
arpl
xor
sbb
mov
sub
int
jmp
or
push
and
rcrb
mov
inc
sahf
add
jl
mov
test
xorl
fidivs
adc
adc
pop
sbb
daa
jl
mov
xor
xchg
roll
bswap
sub
enter
or
push
pop
pop
int
hlt
pushf
shr
mov
inc
outsb
loope
inc
mov
mov
cwtl
lock
cwtl
mov
imul
dec
cmp
pop
cld
pop
cltd
rcll
call
inc
in
in
xchg
call
inc
movsb
test
add
imul
sbb
cs
push
sahf
nop
stos
incb
aam
pusha
adc
rcrb
xchg
sub
lock
icebp
ret
test
push
mov
mov
test
test
mov
or
add
mov
xchg
lret
test
aam
adc
xor
inc
mov
data16
sub
push
sahf
xor
sarb
jg
lods
sub
cld
fwait
push
out
shll
dec
push
fwait
or
inc
mov
divb
dec
xchg
je
into
mov
mov
jns
dec
sti
pop
mov
in
xchg
rorb
cmp
mov
sarb
mov
xchg
insl
cmpb
aad
adc
je
icebp
jbe
pusha
ret
or
ja
imul
stc
push
stos
or
dec
jp
filds
cmp
jle
pop
clc
out
cld
pop
test
mov
mov
lahf
leave
gs
aas
jns
ja
int3
mov
ret
pop
mov
cltd
adc
fnstcw
pop
sti
push
icebp
add
repnz
fcmovnbe
mov
lret
mov
jbe
adc
dec
inc
sub
mov
mov
nop
sti
cltd
cmc
aaa
aas
add
stos
cmpsb
xchg
inc
jbe
push
fadds
xchg
stos
repz
mov
pushf
jecxz
dec
sbb
and
add
mov
mov
aad
aas
test
sub
lods
cmp
mov
test
inc
mov
adc
mov
outsl
push
cltd
and
ret
mov
ljmp
xchg
or
pusha
or
mov
test
scas
fst
aam
cmp
sbb
in
pop
invd
push
and
into
loop
movsl
mov
push
and
mov
add
fidivrl
les
inc
mov
dec
in
xchg
sbb
sbb
in
add
test
mov
movb
bound
cmc
lds
xchg
test
pop
xchg
or
xor
pop
add
add
mov
mov
call
enter
jp
xchg
xor
xchg
loopne
push
lcall
adcb
hlt
sub
cld
inc
outsl
cmpl
cmp
mov
in
inc
mov
cmp
lods
add
inc
lea
lret
stos
push
lods
mov
aad
jnp
jg
mov
rcrl
xor
mov
aas
test
dec
inc
jo
test
das
dec
jne
fadd
arpl
mov
ss
add
sub
rol
lahf
lea
dec
push
xor
call
cmp
dec
jecxz
adcb
mov
add
add
add
mov
sub
insl
notb
xlat
pop
xchg
push
loope
pop
in
pop
stos
cs
and
or
popa
out
push
cmp
in
mov
mov
xor
mov
loopne
sub
mov
xchg
xor
fbstp
inc
pop
sti
push
xor
je
adc
in
into
push
out
mov
inc
jo
push
pop
mov
pop
pop
in
es
push
jo
cmp
sub
ret
push
jns
int3
push
cmpsl
pop
push
icebp
adc
out
iret
int
xor
pop
lods
test
lret
push
dec
jmp
lahf
xor
xorb
movsl
mov
jg
sbb
sbbl
mov
loope
testb
pop
push
imul
mov
pop
gs
sub
mov
rorb
in
mov
rcr
jnp
push
and
stos
ret
sbb
mov
pop
addb
lea
xor
mov
pop
fsubrp
mov
popa
outsl
cmp
aad
fcmovbe
push
loopne
jmp
inc
inc
in
push
mov
pop
add
shrl
mulb
mov
cmp
sbb
lret
mov
outsb
popf
and
je
test
into
test
push
add
rorb
dec
loope
aas
stos
pop
and
dec
add
pop
jp
jae
xor
les
shrb
cli
stc
and
cmp
or
cmp
jge
adc
push
movsl
shll
aam
aam
inc
pop
shrl
sbbl
mov
mov
cltd
jge
add
mov
pop
cmp
test
clc
hlt
lret
mov
xor
push
or
icebp
sub
jecxz
adc
and
cmpsl
mov
add
mov
insb
xorb
xchg
mov
push
in
sbb
mov
hlt
ja
loop
xorb
leave
jb
mov
mov
lahf
and
pop
pushf
adc
lret
pop
jne
das
aam
jbe
addr16
mov
add
data16
inc
cmpsb
out
xor
pop
xchg
sbb
loop
xor
leave
stos
push
insb
lods
add
mov
sbb
inc
int3
xchg
cmpsl
cmp
shlb
in
into
int
fistpl
jnp
and
gs
inc
xchg
mov
xchg
int
mov
jge,pn
sub
rcr
mov
xchg
cmp
sub
ret
fwait
and
cmp
movsb
aaa
dec
pop
mov
xchg
adc
stos
out
push
daa
push
add
test
sti
fcmove
add
lcall
loope
mov
xchg
divb
jb
int3
jnp
in
push
pushf
fs
test
cltd
cmp
xchg
mov
in
subl
mov
cld
pop
clc
xchg
mov
push
mov
dec
ljmp
xchg
dec
xchg
push
leave
dec
jg
inc
popfw
test
dec
nop
leave
fldenv
mov
or
xchg
test
mov
push
test
push
sub
sub
filds
push
imul
lret
or
adc
andl
push
jmp
jmp
int
mov
clc
or
outsb
mov
test
add
cltd
jp
arpl
scas
jbe
cld
lods
cmp
push
or
adc
lock
and
push
jg
dec
pop
pop
sbb
nop
xchg
dec
jno
sub
leave
xor
fisubrs
mov
or
inc
call
movsb
sbb
push
jne
adc
jg
jo
xchg
mov
sbb
stos
dec
mov
xchg
sarl
mov
in
add
je
stos
leave
fidivs
jle
enter
jns
sbb
in
loopne
notb
lods
add
cs
mov
xchg
pop
stc
dec
jns
cld
mov
mov
add
mov
gs
out
dec
dec
push
jno
push
movsl
adc
aad
mov
sub
hlt
push
sbb
pop
dec
lahf
xchg
mov
xchg
adc
push
xorl
inc
jnp
xchg
rorl
mov
mov
sbb
mov
jge
xchg
and
fnstcw
add
sbb
arpl
rol
xor
xchg
in
mov
inc
test
jl
int3
popa
je
pop
cmc
daa
pop
cmp
inc
and
jno
pop
mov
pop
ret
fildll
add
sbb
cwtl
rcr
add
xchg
inc
pop
and
lods
out
out
xchg
pop
dec
or
jns,pt
test
mov
imul
adc
icebp
cmp
aas
in
lods
dec
push
sar
pusha
pop
daa
xlat
popf
scas
jbe
adc
mov
pop
inc
jbe
xor
rclb
loopne
dec
pop
inc
in
jno
mov
jo
xor
cmc
mov
popa
dec
call
mov
dec
icebp
jae
mov
in
or
adc
and
sbb
flds
fnsave
sbb
js
cmpsl
sub
jb
iret
xchg
sbb
gs
enter
fs
mov
pop
jecxz
jecxz
and
inc
iret
jp
cmp
lret
jmp
out
bound
loopne
dec
xlat
daa
adc
pushf
daa
icebp
pop
dec
cmp
xchg
xor
mov
std
push
push
ret
stos
lret
jp
dec
sbb
out
inc
xor
cmp
daa
stc
popa
cli
jno
enter
in
mov
mov
lea
pop
mov
mov
aad
mov
add
and
inc
stc
sub
ja
cmp
ret
leave
inc
pop
add
pushf
movlps
idivl
pop
dec
mov
cmp
and
repnz
dec
bswap
subl
test
jecxz
pop
outsb
dec
adc
fwait
lock
push
adc
adcb
dec
add
subb
cltd
dec
push
and
cmpsb
jg
adc
shlb
cmp
push
pop
inc
ds
arpl
dec
jno
mov
rorl
push
xchg
stc
out
mov
movsl
xor
jnp
dec
inc
xchg
push
aad
call
das
fwait
xor
adc
orl
icebp
jl
jle
jb
sub
xor
mov
psrlw
add
inc
xor
push
jnp
push
mov
out
dec
and
dec
cmpsb
cs
scas
cli
cmpsb
or
cltd
xchg
loope
mov
and
push
and
leave
adc
lahf
cmp
clc
sbb
mov
or
rcll
and
roll
jle
data16
std
ficoml
cmp
in
into
push
push
hlt
and
aas
cltd
lods
sub
or
push
call
mov
jo
imul
mov
push
xor
dec
clc
mov
imul
adc
push
fcmove
and
cmp
mov
mov
imul
or
xchg
cmp
xor
mov
push
imul
mov
jb
testb
movsl
iret
inc
lcall
inc
je
call
ja
and
push
push
lods
push
ja
movl
daa
rorb
sbb
cwtl
cmp
mov
popf
and
mov
jl
maskmovq
divl
lret
mov
mov
cmp
imul
sub
shl
adcl
and
sbb
aas
sbb
jnp
dec
cmp
jmp
mov
insb
mov
adc
movsb
jns
cltd
xchg
adc
jecxz
jg
cmp
and
lds
mov
pop
insb
adc
fdivrl
test
lds
subl
dec
dec
cmp
push
outsb
jmp
sbb
xor
test
cmp
add
adc
pop
lock
pop
scas
cmp
add
dec
rcrl
rolb
cmpsb
pop
inc
pusha
je
cmpsb
shlb
cmp
cli
inc
and
sbb
cmpsb
arpl
incb
dec
sbb
mov
mov
or
mov
in
movsb
lock
xchg
hlt
mov
xchg
dec
mov
fs
repnz
andl
pop
push
jle
cmp
popf
inc
cmp
subb
jp
sbb
mov
jo
lcall
mov
xor
sbb
pop
inc
outsl
imul
mov
popa
mov
gs
mov
hlt
pop
sbb
mov
or
adc
or
and
and
dec
xchg
sub
idivb
out
movsb
push
in
fidivl
je
and
cmp
aaa
fcmovne
xchg
test
pop
sbb
pop
push
jle
in
cmp
stc
stos
push
lcall
pop
punpcklwd
push
push
movsb
sahf
sti
into
sub
jg
mov
mov
xor
mov
sub
subl
call
adc
sbb
adc
pop
ljmp
ret
imul
ja
adc
add
mov
ljmp
pop
pop
cmp
xchg
subb
mov
sub
cmpsb
ja
negb
jb
iret
lret
ja
js
push
cltd
pop
insb
push
cmp
sti
outsb
pop
je
and
mov
stos
mov
fst
push
push
movsb
inc
inc
push
and
std
test
movnti
repz
inc
lock
mov
xor
push
adc
cli
and
push
mov
push
int3
les
repz
cld
or
scas
xchg
ror
sub
inc
ficoms
sbb
fidivrs
xchg
test
mov
push
mov
xor
adc
add
mov
mull
jg
inc
jp
lcall
jecxz
jmp
xchg
inc
sub
inc
testb
jae
dec
inc
adc
lret
jl
lret
mov
repnz
dec
inc
sub
and
or
aad
pushf
push
add
jb
leave
imul
rcl
sbb
cmpsb
js
inc
add
rcrl
fdivr
stos
sub
xchg
or
add
or
xchg
sbb
adc
and
cmpsl
xlat
xor
mov
lret
mov
jno
pop
and
movsb
push
or
rol
cmpsl
push
into
or
mov
roll
dec
andb
and
xchg
sub
xor
insl
or
testl
je
inc
cmp
sarl
mov
clc
add
jbe
stos
xlat
pushf
jl
xchg
sbb
insb
pop
in
stc
push
mov
sub
outsl
shl
lods
or
ds
cmp
mov
cmp
pop
cmpsb
aaa
out
pop
lcall
or
and
jns
xchg
cmp
and
mov
cmp
andb
repnz
movsl
xchg
fldcw
pop
dec
icebp
pushl
cmpsb
loope
scas
inc
std
das
mov
int
rclb
push
mov
test
pop
dec
int3
scas
adc
dec
adc
mov
movsl
dec
lea
stc
dec
in
std
add
in
clc
dec
enter
mov
insb
sahf
into
fisubl
adc
xorb
arpl
les
inc
adc
aas
test
outsl
dec
subl
jmp
push
iret
push
add
sub
test
or
mov
mov
cmp
mov
jnp
gs
out
arpl
movsl
sub
leave
stos
mov
insl
push
mov
mov
adc
sub
jne
fsubrs
adc
ss
test
pop
es
fadds
cwtl
rcll
cmc
mov
jle
cmpsl
mov
test
loopne
mov
pushf
inc
nop
cli
stos
sbb
pop
jbe
jb
nop
outsb
ret
stos
ret
out
inc
imul
mov
pusha
cld
or
jp
mov
and
jno
pop
cmpb
int
aas
imul
inc
jo
inc
xor
cwtl
ds
sbb
mull
xor
dec
divl
mov
std
jns
mov
xor
outsb
andb
rcl
pusha
push
pop
mov
scas
idivl
roll
cmp
ljmp
xor
fdivl
pushf
mov
loop
mov
cmpsl
out
dec
mov
mov
cmp
push
push
fstl
rolb
fsubr
test
stc
out
xchg
andb
dec
push
add
sub
outsl
fadds
insl
mov
iret
pop
cmpsl
push
xor
rorl
sub
lret
ret
popa
repnz
cmp
cmpl
ds
xor
lcall
mov
test
stc
add
nop
test
fwait
lods
pop
cmp
idivb
sub
cmc
aaa
les
xchg
sub
cmp
les
xchg
xlat
inc
xor
sbb
loope
pop
xlat
xchg
and
scas
push
sbb
add
fcmovnu
push
xchg
mov
rcll
sbb
sub
pop
mov
mov
pop
xor
andl
xchg
scas
push
gs
mov
repnz
jno
data16
and
fadds
sbb
or
mov
mov
aaa
push
mov
cmpsb
pop
arpl
xlat
pop
push
std
cmp
test
mov
shrl
pop
lahf
push
inc
out
push
mov
pop
add
div
add
adc
pushf
xchg
dec
adc
in
jmp
sub
inc
push
cltd
mov
xor
xchg
insl
jecxz
xor
cmpsb
lcall
or
fisubrl
mov
mov
xor
repnz
push
aad
inc
in
je
mov
into
inc
inc
test
and
cld
jns
lret
ss
xchg
push
dec
add
and
and
pop
xor
std
cld
mov
push
and
jecxz
adc
dec
sahf
ss
push
mov
mov
push
pop
sbb
lds
paddb
sahf
jne
jne
xchg
fdivl
shll
cmp
fwait
jo
ljmp
mov
inc
out
cwtl
and
cld
adc
mulb
pop
push
nop
fldenv
dec
mov
mov
mov
loop
jae
push
mov
mov
xchg
sbb
repnz
cli
fcomp
clc
ja
mov
lret
loop
stc
cmp
stos
xor
mov
stos
movsl
mov
or
mov
hlt
mov
pop
movsl
pop
mov
insl
and
jns
push
jmp
std
mov
bound
stc
add
push
icebp
jle
jbe
psubsw
pop
ss
ds
xor
mov
mov
hlt
stc
mov
xor
in
dec
movsl
lcall
lea
jle
xchg
sub
icebp
sbb
les
daa
dec
adc
adc
cmp
mov
xorb
filds
out
test
dec
clc
lds
cmp
js
pop
inc
fdivrl
nop
fstpl
xchg
mov
out
mov
aaa
inc
add
pop
rcr
push
ficompl
sub
js
test
pop
xorl
adc
or
mov
insb
mov
cmpsl
push
test
scas
mov
in
ds
add
jae
adcl
cmc
push
fisttpll
ss
roll
inc
test
sbb
add
pop
leave
hlt
icebp
mov
stos
pushf
ret
shrb
sbb
ret
nop
rcll
out
jmp
and
insb
dec
ss
mov
in
jmp
mov
dec
data16
loope
push
inc
ficoml
ret
lock
popa
sub
das
pop
jmp
sbb
out
push
jae
lret
or
out
inc
dec
push
mov
and
mov
cmp
mov
sub
fstl
pusha
jecxz
addb
xor
xchg
mov
dec
test
pop
mov
inc
pop
scas
dec
xor
cmc
xorl
das
adc
pop
and
in
aad
js
jo
lods
push
rolb
je
inc
or
xchg
xchg
xchg
movsl
mov
and
jnp
out
jecxz
jae
dec
seta
ds
mov
jecxz
pop
imul
lock
cld
xor
add
xchg
mov
mov
push
cmp
xchg
xchg
in
jae
sahf
nop
fwait
movsb
dec
and
pop
and
sti
or
in
xchg
push
fisubrl
dec
adcl
cmp
pusha
and
repz
pop
mov
inc
outsb
cmc
cmpsb
push
fstpl
xor
pop
mov
jmp
std
addr16
fistpll
mov
mov
outsw
loope
push
pusha
xchg
hlt
mov
mov
and
pusha
js
push
dec
xchg
jb
jg
jbe
frstpm(287
int3
test
sub
mov
das
mov
stos
icebp
aam
xchg
cli
mov
jne
push
ret
sub
dec
repnz
push
sahf
js
popf
jnp
andb
stos
mov
enter
inc
addb
xchg
xor
pop
pop
jo
mov
out
jno
add
push
ret
cwtl
mov
js
mov
outsl
inc
in
fwait
cmp
sub
ret
add
sbb
arpl
test
or
dec
xchg
mov
add
in
lahf
lcall
xchg
and
jbe
mov
out
xchg
mov
or
inc
fbstp
mul
mov
bound
lods
ret
mov
xchg
adc
mov
into
rorb
push
push
sbb
push
push
push
mov
mov
push
lods
cmp
faddl
pop
mov
in
stos
inc
dec
repz
out
pop
flds
pop
pavgb
loope
cmp
leave
xchg
push
dec
lea
push
lods
lock
roll
aas
aaa
ret
insb
sahf
jbe
out
jl
inc
cmc
jl
stos
add
scas
xor
repz
lds
aas
daa
mov
pop
jg
in
pushf
jmp
mov
push
insl
mov
add
aas
jge,pn
movsb
add
sbb
cmpsb
es
xchg
inc
jbe
fisttps
ret
jns
push
mov
jl
cld
xchg
ljmp
imul
aaa
shl
mov
mov
hlt
xor
xchg
pop
ja
ja
xor
pop
sub
xor
daa
mov
std
enter
ret
mov
roll
repz
pop
dec
add
adc
pop
or
jb
pop
xorl
sub
scas
cmp
out
shlb
or
in
cmpsl
fiaddl
xchg
out
int
test
pop
sbb
mov
sbb
dec
dec
addl
es
xor
mov
test
pop
in
int
cli
xor
jmp
lods
mulb
mov
cmp
dec
aad
cmp
jns
xor
xchg
push
mov
and
mov
jo
sti
sti
jle
inc
mov
push
pop
sub
aaa
mov
mov
outsb
jo
loope
sub
lods
sbb
mov
notl
dec
in
ss
mov
mov
inc
mov
push
dec
or
mov
and
loope
andb
arpl
lret
popa
xchg
into
ret
test
aaa
jp
std
dec
push
aaa
push
enter
loopne
orl
jnp
lcall
add
mov
sbb
jb
adc
jl
mov
fwait
mov
pop
push
dec
mov
pop
mov
notb
xchg
xor
sahf
or
out
cmp
repnz
das
sahf
jbe
mov
test
push
or
add
pop
ss
lds
in
leave
dec
daa
sbb
adcl
je
dec
mov
jge,pn
sub
jne
or
jo
outsl
lds
out
call
push
mov
adc
xor
sti
imul
out
xchg
arpl
mov
leave
xchg
cltd
and
sbb
cmp
sub
insb
loope
hlt
mov
cmp
repnz
sub
insl
mov
cmp
inc
push
mov
jb
je
mov
mov
lret
movsl
out
add
dec
aaa
and
fistl
cmp
das
mov
call
inc
vmovd
push
mov
mov
fistps
rcll
inc
push
sti
sbb
loope
jecxz
pop
lock
xchg
cwtl
enter
pop
shl
or
sti
add
xchg
pushf
xchg
mov
cmp
pop
cwtl
pushf
adc
ds
or
bound
lds
ss
sub
jmp
or
sarb
icebp
push
dec
test
xchg
arpl
in
je
fiadds
dec
call
inc
xchg
pop
xchg
in
jp
xor
andl
sbb
lods
aaa
repnz
movsl
test
cmp
sub
mov
movsb
and
addr16
cmc
mov
mov
repnz
fbld
push
leave
or
scas
or
ret
int
mov
ret
dec
xchg
pop
sarl
cmp
lea
scas
jle
movsb
mov
sbb
rcr
inc
adc
dec
adc
cmpsw
add
xchg
xchg
ja
call
inc
sbb
subl
jge
lock
insb
mov
xor
xchg
sub
adc
or
imul
iret
jp
data16
push
stos
push
lods
dec
jp
sub
mov
xchg
dec
stos
cmc
pop
xchg
mov
mov
xor
ds
xchg
mov
jnp
popf
xor
adc
fmull
push
adc
sub
jp
mov
push
adc
test
outsl
or
imulb
cmp
add
mov
popf
cmpsb
cmpsb
popw
xor
sbbb
out
mov
repnz
push
rcr
insl
mov
sbb
adc
clc
call
adc
xchg
sub
iret
cmpsl
cld
mov
cmp
addl
xchg
cltd
mov
scas
jb
xor
dec
addr16
inc
pop
adc
imul
and
bound
ret
jle
dec
sbbb
mov
lret
xor
arpl
popa
inc
mov
mov
rol
mov
cwtl
sbb
or
xor
cmpsl
add
fwait
jmp
jno
pop
repz
or
inc
xor
add
xor
mov
jecxz
jge
ljmp
lods
fidivs
aas
mov
arpl
int
jle
jecxz
repnz
push
jb
push
enter
xor
sub
sub
ret
mov
dec
inc
jp
cmp
mov
jnp
inc
sub
mov
daa
add
cmp
aad
mov
mov
jns
push
lods
push
add
jge
mov
pop
in
mov
xchg
imul
xchg
sub
mov
int3
scas
pop
mov
dec
mov
sbb
icebp
cwtl
clc
bound
stc
and
mov
inc
movq
les
or
sbb
dec
or
adcl
clc
pop
push
out
loope
cs
sbb
leave
scas
dec
lea
dec
pop
xor
xor
mov
or
aam
xchg
loope
jp
cmp
adc
aas
xor
mov
adc
test
cmc
pop
cld
leave
lret
aam
dec
pop
xrelease
ret
loopne
sahf
cmp
jle
mov
fwait
js
in
out
push
out
ljmp
lea
xor
gs
mov
call
dec
dec
bound
cmp
test
cmp
push
add
fs
rcl
sub
mov
jnp
shrb
xor
loopne
xchg
jl
cli
mov
punpcklbw
data16
adc
or
mov
divb
fwait
hlt
xchg
push
mov
sarl
fcoms
cmp
outsl
imul
pop
cwtl
call
and
mov
imul
lret
or
mov
out
aam
add
jg
add
push
xchg
test
mov
ljmp
repnz
lods
fsubr
and
inc
mov
out
and
into
cmp
hlt
fcomip
bound
imul
mov
push
pusha
adc
lahf
js
fdivrl
mov
xchg
sahf
push
insl
mov
xor
mov
inc
dec
shrl
js
mov
shll
movsl
xchg
push
imul
pop
rorb
or
insb
xor
push
jg
movhps
or
xchg
push
incb
mov
sub
test
ret
or
and
cmc
lods
popa
xor
push
jb
mov
ljmp
mov
arpl
aaa
jae
repz
mov
fwait
adc
fdivs
faddl
sti
or
aad
repnz
inc
or
aas
xchg
or
inc
mov
add
div
loopne
adc
push
leave
jle
or
adc
push
fistpll
movsb
stos
into
xchg
adc
sbb
aad
or
fdivrs
xchg
mov
push
and
jnp
jo
xchg
mov
jnp
int3
push
mov
and
mov
xchg
rcll
roll
das
mov
into
lcall
nop
sahf
pop
int3
repnz
push
loopne
fwait
shll
add
ds
pop
or
faddl
inc
jp
adc
or
aaa
cmp
push
mov
push
mov
les
or
out
xchg
or
xor
cwtl
mov
shlb
iret
int
xchg
je
inc
dec
popf
cmpsb
adc
shrl
xchg
mov
xlat
or
popa
or
dec
cmp
push
or
stc
shld
aas
push
cmp
dec
push
imul
jns
insb
pop
jp
inc
sub
roll
mov
ret
out
test
xchg
inc
gs
decl
jge
iret
insl
push
out
sub
inc
mov
and
inc
fwait
int
lods
mov
push
ds
es
rol
jp
mov
stc
and
nop
roll
xchg
repnz
ds
cmp
or
lret
nop
in
movsb
mov
pop
sub
loop
sbb
sub
inc
int
sahf
movsl
cmc
jge
sarb
in
jg
data16
inc
push
cmp
ja
lods
push
jno
cmpsl
sbb
in
fprem1
das
leave
xchg
mov
mov
loope
hlt
pop
mov
out
xor
ret
mov
mov
adc
icebp
icebp
fdivrl
lahf
mov
xchg
hlt
outsl
fnstenv
adc
inc
sbb
call
out
addr16
outsb
stos
jnp
mov
push
int3
mov
and
lcall
adc
test
mov
lahf
push
jmp
jmp
rcr
jecxz
mov
or
cs
es
push
mov
call
add
sbb
jg
push
xor
test
xchg
push
outsl
cltd
bound
push
mov
insl
rcll
push
loop
and
scas
add
inc
rorl
fsubr
shrb
mov
push
test
sub
int
mov
inc
into
and
pop
mov
sub
stos
jo
push
stos
into
xchg
pop
cmpsl
push
jg
inc
aas
add
and
mov
jnp
push
subb
cwtl
arpl
insb
fs
out
fdivs
xor
add
fisttpl
xchg
add
lock
int
push
inc
ret
pop
mov
cld
outsl
cmpsb
sti
pop
jge
jl
mov
or
icebp
mov
pushf
scas
stos
inc
dec
push
cmp
outsb
fs
lods
push
jnp
lock
and
mov
jae
mov
lods
sti
xor
cmpsb
and
add
or
loope
fimull
mov
sti
sti
loopne
push
fcoml
popa
outsb
or
rorb
sti
imul
jae
iret
testb
fcmove
or
nop
inc
add
xor
out
and
lret
ljmp
sub
jb
js
loopne
pop
sbb
leave
jnp
movsb
inc
xchg
dec
mov
loope
shlb
sbb
mov
inc
pop
jmp
rcl
stos
rclb
xchg
and
movb
xchg
loop
inc
jne
xchg
jg
sti
aad
mov
div
adc
int
cs
addl
and
inc
in
jne
and
push
pushf
mov
aaa
push
aam
fildll
icebp
inc
adc
push
add
push
inc
insl
sbb
stc
or
mov
clc
xchg
orb
lcall
movsl
popa
push
es
lcall
cmpsb
shll
push
mov
mulb
adc
fldpi
xor
mov
out
ret
or
ret
add
sbb
mov
cmp
jp
into
and
arpl
push
adc
lods
jg
shll
stos
repz
fidivs
out
xchg
or
xchg
cld
and
jp
lahf
in
xorb
mov
or
pusha
test
nop
mov
adc
loop
shl
add
aaa
ljmp
sub
dec
sub
xchg
arpl
sbb
mov
sub
xchg
fwait
push
mov
jecxz
dec
adc
dec
iret
mov
mov
lret
dec
inc
cmp
sub
mov
in
xor
pop
mov
mov
popf
xchg
lock
jg
mov
jno
scas
mov
cli
or
test
cld
jle
jae
dec
push
xchg
aaa
ret
in
or
xlat
lret
nopl
sub
cmp
clc
cmpsl
jbe
mov
sarl
or
push
add
cmc
jne
xchg
dec
xor
incl
out
and
loop
xchg
rcll
xchg
aaa
scas
cmp
test
and
adc
sbb
scas
pop
add
dec
adc
std
or
imul
bt
pop
lahf
mov
mov
stc
ja
jnp
mov
mov
jbe
iret
mov
xchg
dec
ds
xchg
push
arpl
sahf
test
lds
rcr
pop
lret
into
sbb
and
sahf
inc
stc
ror
ds
add
idivb
cmp
inc
jp
orl
jle
mov
enter
lahf
fldl2t
dec
inc
push
sub
sbb
scas
jno
dec
in
dec
push
movsb
rolb
sbb
xchg
cmp
adc
or
add
push
es
cmp
sarl
pop
xor
mov
pop
pop
or
lea
sbb
js
and
pushf
cmpsl
in
jns
dec
push
mov
dec
mov
les
xor
xchg
or
loopne
sbb
stos
sahf
push
in
sbb
and
mov
or
push
pop
js
lahf
stos
cwtl
hlt
js
mov
sbb
aas
fadd
shll
inc
pop
pop
push
jo
cwtl
add
mov
movzbl
imul
inc
dec
popa
or
insl
addr16
push
popa
jp
mov
xlat
jbe
aas
insl
scas
icebp
mov
and
jno
fdivr
adc
enter
inc
jecxz
arpl
xorb
test
ficoms
jle
adc
xchg
mov
xchg
mov
mov
sub
sub
pop
xchg
jmp
das
dec
testl
sub
jmp
push
inc
scas
mov
ret
xchg
lret
sub
aad
in
mov
rorb
lods
shlb
scas
call
nop
and
or
dec
add
pop
pop
and
push
in
cwtl
pop
pop
adc
add
icebp
push
xchg
mov
out
enter
jle
xor
xchg
ljmp
int
push
aam
xor
xchg
ja
test
lods
out
adc
mov
sbb
xchg
mov
and
in
inc
jecxz
outsl
int3
ds
notl
cmp
std
mov
testl
cli
leave
jns
pop
ljmp
adc
imul
and
dec
xlat
sub
or
jle
lock
movsl
pop
xor
xorl
mov
ffree
mov
jb
adc
imul
repz
loop
loope
sub
sub
mov
cli
fisubrl
xchg
mov
xor
jae
adc
xor
jb
adcb
addr16
dec
sbb
push
in
mov
cmc
adc
not
roll
mov
cld
in
ret
scas
int
divb
clc
pop
pushf
cmp
inc
xor
sarl
mov
dec
ror
cs
jbe
push
and
or
sub
and
or
gs
jae
sub
jge
xchg
loop
sbb
loop
inc
fidivl
nop
push
xchg
enter
xor
clc
rcrl
mov
xchg
cwtl
cmpl
adc
adc
jb
xchg
fcomps
repz
iret
insb
pop
jae
icebp
and
jae
cmpsl
jbe
cmp
cltd
jno
inc
mov
xor
dec
inc
ljmp
xchg
jp
arpl
jge
inc
mov
out
loop
xor
stos
xchg
movsl
or
hlt
adc
pop
pop
and
xlat
data16
and
lret
push
dec
add
lods
and
pop
mov
mov
and
jle
xor
xchg
mov
loope
and
add
cld
sub
jnp
insb
aas
scas
scas
js
add
push
aad
lret
fisttpll
push
add
adc
ret
pop
in
jp
filds
pop
loope
dec
xchg
aad
aaa
push
push
popf
outsl
clc
push
iret
pop
mov
test
ja
cmp
pop
fcomps
mov
sbb
dec
dec
outsl
movsl
hlt
sbb
cmp
les
test
add
add
sub
mov
rolb
mov
mov
sub
and
enter
sbb
mov
jp
mov
call
push
les
dec
cli
inc
cmpsl
sub
push
stos
pop
in
mov
rolb
and
call
cs
inc
inc
das
sub
sbb
call
mov
sub
movsb
test
mov
mov
xchg
adcl
jp
repz
pop
cmpsb
or
outsb
aaa
jmp
pusha
lret
push
jp
rcrl
aad
sbb
xchg
aam
cmc
loopne
xor
push
movsb
cmpsb
xor
pop
push
jnp
dec
jb
add
mov
je
ja
and
jl
adc
stos
out
push
fmuls
xor
pop
xor
ret
outsl
test
outsl
mov
out
mov
dec
push
imul
pop
adc
icebp
sub
xchg
mov
pop
adc
push
or
pop
popa
mov
or
jmp
mov
sahf
fists
int3
faddl
shrl
cmp
push
in
bound
outsb
les
jne
movsl
or
in
pop
sbb
es
add
out
mov
mov
mov
adc
inc
adc
xor
mov
mov
mov
mov
mov
dec
push
xorl
jo
mov
mov
push
push
xor
in
les
pop
daa
nop
push
test
mov
push
sbb
sub
and
jecxz
daa
jmp
mov
test
test
out
cmpsl
std
mov
jo,pt
cmpsb
mov
fs
call
push
add
sub
imul
sub
jp
mov
hlt
jmp
testb
loope
cmp
lods
mov
daa
fwait
orl
fildl
lea
cmp
fistps
cmovg
and
out
ja
add
jmp
mov
sub
adc
adc
push
das
xlat
mov
pop
xor
jmp
cwtl
imul
dec
xchg
adc
jecxz
adc
and
ficoml
nop
imul
cmpsl
cli
mov
lret
cmp
jae
mov
xchg
xchg
cmp
jl
arpl
mov
mov
sbb
fwait
jno
mov
jecxz
adc
mov
scas
outsb
cmp
outsl
into
mov
or
mov
mov
aam
lcall
outsl
dec
and
jle
popf
cmp
out
jo
inc
aas
mov
loop
and
je
add
mov
add
push
mov
push
xchg
cmp
cmp
insw
rcrb
sub
arpl
data16
aad
leave
inc
in
ret
roll
test
push
push
enter
lcall
outsb
lcall
call
mov
test
mov
arpl
cmp
mov
add
hlt
cmp
aam
push
inc
in
scas
lock
test
aad
and
cli
jo
fstpl
jae
push
sub
rclb
mov
mov
jb
aam
xchg
dec
jle
sbb
xchg
or
ja
mov
enter
pop
pop
pop
sarl
jl
fldt
or
mov
cli
arpl
cmpsl
lods
fimuls
sbb
mov
jno
pop
test
mov
fstl
aaa
int3
pop
push
cli
cld
daa
in
cld
lcall
imul
fldcw
aaa
mov
adc
lret
sub
xchg
fcoms
xchg
lods
movhps
add
pusha
inc
bound
add
in
mov
mov
mov
ficompl
cltd
ret
push
mov
mov
fs
adc
sbb
mov
scas
in
and
pop
bound
jge
fbstp
push
xchg
nop
adc
cmp
lahf
jb
xchg
push
pop
fisttpl
mov
or
push
sbbl
arpl
jno
jne
aas
into
repnz
mov
mov
out
lret
test
repz
cmp
or
xchg
fidivrs
jmp
lret
mov
ret
fwait
pushf
push
fs
cwtl
and
pushf
ss
sbb
push
fstpl
aas
mov
imul
sub
adc
in
leave
jbe
jno
jbe
cltd
cltd
mov
adc
ljmp
lahf
fsubr
mov
inc
xchg
loope
mov
jb
pop
sub
pop
mov
inc
ss
mov
cmpsl
inc
push
add
fsubrl
cmp
xlat
pop
insl
cmp
cli
and
loope
push
xchg
call
std
aaa
sub
pop
push
push
sbb
int
insb
cmc
jecxz
lret
pusha
ret
pop
insl
fnstenv
in
loope
pushf
mov
icebp
cli
and
add
xlat
and
add
aam
dec
xor
mov
lret
xchg
pop
lcall
jnp
push
imul
and
sbb
mov
sbb
call
pop
shrl
dec
inc
and
pop
and
ljmp
sub
test
ljmp
cmp
push
dec
cmc
jg
aad
ljmp
cmp
in
cmp
cmp
in
mov
fistpll
dec
hlt
inc
gs
test
push
stos
fs
xor
dec
jbe
pushf
mov
fnstcw
insl
pop
popa
sub
fsubp
in
xchg
js
mov
and
rorl
pop
dec
dec
pushf
mov
sub
mov
jp
out
insl
add
jle
inc
mov
lea
ds
mov
iret
jp
jmp
mov
xor
mov
aaa
add
fnstsw
je
xor
mov
inc
leave
mov
subl
xchg
cmp
pop
xor
mov
jo
dec
lods
pop
push
repz
inc
sti
cmpsl
inc
lret
imul
xorl
mov
xchg
mov
xor
roll
mov
dec
add
fidivrs
popf
xchg
ficoms
popa
mov
add
repnz
ret
dec
mov
rcrl
in
lock
movsb
lcall
into
imul
mov
outsl
stos
out
clc
fisttpl
es
hlt
ret
sub
movsl
mov
dec
push
dec
in
mov
mov
sti
mov
add
inc
sar
mov
pop
sub
mov
and
mov
shll
inc
mov
pop
sub
cmp
pop
sti
adc
push
data16
sub
dec
notb
subb
cld
das
mov
in
mov
adc
jmp
jae
dec
iret
add
repnz
fisttpl
out
pop
rcrl
inc
pop
sbb
and
int
cwtl
shll
mov
pop
mov
pop
pop
loope
sub
xor
mov
push
mov
bound
bswap
cli
and
inc
mov
mov
aas
mov
pop
je
lock
push
pusha
mov
shrl
hlt
fnsave
sbb
imul
adc
das
aad
inc
lods
sbb
jb
shll
mov
outsb
xchg
push
pop
jne
xchg
cmp
sbb
push
mov
shl
mull
xor
std
test
add
pop
xchg
dec
rclb
dec
out
cmp
jmp
or
push
stos
popf
cmp
sbb
mov
in
sar
popf
ret
push
and
or
test
mov
cltd
add
out
adc
test
lret
cld
sbb
push
cmp
mov
cli
loop
xor
push
sbb
mov
mov
and
xchg
cltd
mov
mov
test
mov
cli
fbstp
add
push
mov
out
in
jne
shrb
leave
xor
scas
push
test
shlb
cltd
stos
mov
pop
mov
dec
in
push
and
lods
mov
pop
adc
jl
subb
ret
clc
mov
mov
push
popa
lea
or
stos
mov
adc
lods
mov
and
fsubl
sub
adc
mov
sub
daa
jns
lret
or
add
xchg
push
inc
mov
sub
and
jae
inc
daa
push
jp
int
into
xor
out
jne
or
subl
loop
sbb
sbb
sbb
mov
mov
addb
pop
adc
push
loop
divb
dec
xorb
aaa
mov
or
push
push
sbb
imul
fdiv
lock
aad
and
inc
and
test
movsl
or
sbb
les
bound
inc
pop
inc
sbb
mov
scas
cmp
xor
mov
push
movsl
imul
test
fstpt
inc
add
cmpsb
fistps
cmp
push
repnz
mov
push
pop
stos
sub
test
movsl
outsl
bound
or
and
mov
dec
push
add
es
jmp
leave
mov
iret
jo
push
mov
aam
sbb
fsubs
repz
lcall
aad
test
xchg
cmp
push
or
leave
std
xor
xor
out
ss
cltd
jp
in
rcrl
insl
adc
mov
jecxz
lods
sub
add
mov
push
loop
cmp
pop
sbb
rorl
cmp
lds
adc
mov
inc
enter
pop
jp
sbb
aad
fsubrs
adc
movsl
mov
mov
stos
push
add
loope
loope
insb
mov
orb
daa
cld
cmp
cmp
inc
adc
adc
jecxz
aad
nop
icebp
in
and
and
sbb
xchg
dec
pop
push
insb
pop
push
and
cmpsw
movsl
loope
imul
mov
mov
and
push
or
pop
insl
or
jns
jle
cmp
nop
adc
jg
bound
mov
shll
les
into
push
enter
sbb
lret
test
push
cmc
into
push
loope
sahf
jecxz
movsl
mov
ds
shll
push
cmp
sub
jne
sub
mov
in
adc
in
jge
lods
cmp
ret
push
jge
sub
sbb
insb
push
pushf
sub
dec
push
mov
jne
shl
add
push
lahf
jp
test
push
jbe
nop
and
add
or
ror
jns
stos
je
lods
sbb
xor
sbb
pop
cmpsl
test
iret
mov
jae
and
mov
sbb
cmp
js
ljmp
dec
sti
lods
mov
dec
xchg
dec
sbb
xor
mov
dec
popf
pop
out
push
je
out
iret
jno
mov
ss
cld
inc
xlat
push
pushf
or
sub
mov
mov
mov
or
mov
pushf
fistpll
inc
or
push
into
ljmp
pop
repnz
or
mov
sbb
cld
sbb
scas
xor
fcoml
repnz
sub
in
ds
xchg
pop
lds
push
cli
mov
adc
pop
sub
stc
in
and
jno
mov
leave
cwtl
cmp
js
inc
jns
scas
inc
jle
andl
movsl
cltd
clc
lret
fnstcw
popf
testl
push
push
jp
push
jae
adc
lods
sbb
stos
les
out
pop
jae
pop
lret
cli
xlat
leave
or
or
arpl
ror
xor
rcrl
jle
jl
stos
xchg
mov
cmp
mov
xor
mov
xor
adcl
add
nop
jbe
test
call
mov
xor
int
out
adc
cmpsb
push
movzwl
or
inc
into
push
adc
cmpsb
bound
pop
rorl
or
ret
jns
jnp
loopne
add
and
inc
out
lds
mov
mov
mov
mov
pushf
es
fwait
mov
dec
arpl
loop
lock
repnz
pop
or
jno
pop
std
in
lods
movsb
xchg
ja
lock
mov
xor
insb
jge
mov
xchg
xchg
movsl
filds
popa
pop
cmp
jp
xlat
loope
pop
jnp
push
inc
mov
or
jo
gs
shll
jb
mov
sbb
cmp
or
sub
xor
outsl
shll
mov
cwtl
cmp
int
xor
and
inc
dec
xchg
jp
loope
hlt
pusha
arpl
pop
adc
lods
cmpsl
pushf
push
in
cmp
adc
imul
lcall
mov
and
inc
sahf
xchg
inc
xor
in
cmpsl
loopne
push
cmp
insl
cmp
shrb
or
xchg
xchg
cmc
jp
imul
mov
jg
jns
pop
repz
test
adc
xor
cwtl
mov
or
pop
dec
fcomp
xorb
scas
out
aas
push
cltd
out
pop
loop
bound
push
jg
dec
mov
pop
fs
fidivl
sbb
je
mov
popa
das
inc
add
rorl
sub
jbe
out
enter
addr16
cmc
orl
adc
mov
fs
ljmp
xchg
push
or
iret
dec
mov
mov
mov
repnz
sub
call
or
cmp
popa
jl
jnp
mov
adc
js
or
pop
add
adc
pop
push
mov
dec
push
test
and
sbbl
mov
mov
and
add
inc
out
sub
mulb
lahf
dec
push
sti
iret
shll
cmp
adc
xchg
push
adc
mov
leave
fnstenv
negb
cmp
mov
popa
xor
xchg
xchg
test
push
xor
ficomps
jge
loop
mov
std
push
mov
push
sti
mov
mov
mov
xchg
addb
add
clc
xor
outsl
ret
idivb
and
cmpsl
add
push
pop
scas
lret
out
or
inc
jl
inc
shrl
int3
sub
lock
popfw
xabort
jg
push
adc
pop
pop
leave
jae
jne
loop
xchg
ficoms
xor
adcb
mov
sub
mov
and
roll
sbb
add
and
cmp
hlt
nop
in
mov
sbb
imul
movsb
sarl
call
mov
pop
add
jbe
shl
in
fbld
mov
sub
adc
mov
adc
loope
test
jo
mov
add
popf
push
out
nop
hlt
lds
xchg
pop
outsb
repnz
fs
es
push
movb
jecxz
les
scas
and
sbb
add
stos
in
insb
test
cli
mov
sbb
stos
in
push
shrb
das
inc
out
push
icebp
popa
mov
or
push
jl
repnz
fisttpll
push
jecxz
movsl
sahf
daa
rcrb
adc
mov
jns
fs
fdivs
cwtl
lahf
sub
adc
pop
mov
sahf
cltd
push
xchg
add
sbb
mov
inc
pop
rorb
daa
and
call
insb
sbb
push
imul
dec
int3
out
pop
lret
sbb
imul
clc
cmpl
add
pop
stos
les
or
add
add
add
jmp
repz
mov
orl
mov
hlt
into
and
xchg
inc
popf
lret
pop
push
decl
push
ffreep
and
add
push
or
push
lods
xchg
stos
shlb
inc
push
and
shll
xchg
push
repz
xor
lahf
push
dec
pop
and
inc
and
mov
imul
bnd
lea
cmp
frstor
into
pop
in
push
test
mov
jae
sarb
imulb
jb
loop
mov
sub
enter
in
into
fcomp
pop
xchg
test
in
repz
ret
jmp
movsl
cmpb
shl
and
cs
pusha
leave
rorb
mov
or
imul
add
sahf
loope
inc
pop
and
out
xchg
movsl
xchg
into
pop
lea
gs
dec
sti
je
lods
lea
ja
add
dec
aaa
jp
xchg
jno
fsubrs
repnz
mov
pop
sub
stos
or
adc
fistl
bound
movsb
inc
lret
mov
push
arpl
push
inc
mov
push
xor
jg
sub
fcmovne
or
dec
nop
dec
repz
mov
push
popa
push
adc
sbb
cwtl
add
repnz
mov
out
push
xor
lret
outsb
push
dec
out
pop
aam
push
aam
loope
fstps
hlt
subb
push
and
xorb
pop
in
roll
or
enter
cmp
xchg
fsts
jns
xor
or
push
aas
cs
stc
and
xchg
scas
popf
mov
ljmp
xor
out
scas
sbb
or
cmp
testl
pop
incl
xchg
daa
imul
leave
inc
cmp
adc
jo
cwtl
pop
shlb
cmp
arpl
movsb
xchg
stos
mov
popa
aas
shl
test
mov
scas
addb
cld
mov
push
adc
repz
andb
mov
test
es
outsl
repnz
pusha
iret
xchg
add
jmp
les
cmp
xlat
lcall
add
adc
push
mov
and
and
sbb
jmp
dec
cs
sub
fbld
mov
xchg
inc
or
lods
aas
test
call
ret
push
push
insb
gs
pop
mov
mov
addr16
adc
fistpll
outsl
mov
stos
pop
mov
mov
add
loope
dec
and
mov
pop
dec
jae
sub
sbb
in
fisubs
mov
mov
cmpsb
push
xor
ret
repz
xchg
rcll
or
pop
jl
mov
in
ret
repz
sbb
fisttpl
lds
mov
adc
stc
push
or
mov
and
inc
adcl
ja
sbb
fs
fs
mov
addr16
fdivs
lcall
jmp
shlb
jl
out
shrl
inc
or
sti
jl
pop
out
movsl
fwait
in
mov
ret
or
push
scas
lods
inc
aad
pop
mov
jo
jno
mov
xchg
sahf
jge
ret
pushf
push
aad
mov
sbb
mov
lds
xchg
add
gs
mov
bound
je
imul
inc
jne
mov
fs
mov
mov
pop
shlb
fistl
cwtl
jge
nop
clc
and
jg
pushf
mov
leave
and
xchg
daa
jae
cwtl
add
jle
mov
sub
lret
repnz
pop
out
xchg
cmpsb
push
hlt
in
movsb
in
add
sbb
lret
mov
inc
fcoms
add
xchg
ret
int
or
cmp
dec
xchg
ja
inc
lea
idiv
xchg
inc
cmpsl
mov
fxam
rolb
rorb
ja
popf
jns
lea
call
insb
xor
push
mov
lcall
testb
scas
dec
mov
pop
outsb
outsl
push
jp
push
cltd
out
adc
jl
pop
addr16
dec
xor
dec
std
pop
testb
loopne
lret
mov
xchg
xchg
call
or
ret
pop
aas
sub
shr
push
stos
inc
jle
stos
out
shr
lock
imul
pop
and
cmp
mov
sahf
cmpsb
push
jbe
jmp
cmc
out
push
addr16
add
and
cmc
lahf
fiadds
fs
ja
dec
lea
popa
or
scas
rorb
aaa
mov
insl
cmp
call
and
cmp
dec
inc
les
ds
push
lret
jnp
sbb
rorb
icebp
scas
fcomps
and
mov
in
popf
sub
stc
aas
pop
xor
rol
inc
and
fnstsw
cld
sub
fwait
inc
ja
mov
add
mov
pop
test
push
sbb
mov
jp
int3
and
pop
pop
bound
pop
jbe
sub
nop
xchg
mov
test
imul
lods
cmp
in
sbb
js
loop
movsl
xchg
es
pop
icebp
cs
cmpsb
pop
push
adc
leave
push
out
xchg
mov
push
xor
fstps
mov
cmp
subl
testb
shrl
lods
addb
pop
jb
mov
cmp
xchg
ret
stos
inc
or
sbb
pop
shr
fdivs
push
pop
rolb
test
std
notb
add
sub
adc
dec
iret
push
sbb
fnsave
imul
leave
lock
mulb
stos
mov
xchg
adc
sbb
out
aas
cltd
outsl
inc
sub
repz
rcrb
fucomi
test
jle
lret
sub
sbb
sar
add
scas
lds
adc
scas
xor
pop
and
cltd
cmp
rep
xchg
popa
cli
or
shlw
test
dec
dec
mov
lcall
fistl
mov
shrl
mov
inc
popa
nop
adc
fisubrs
in
repnz
sahf
mov
insl
add
xchg
cwtl
xor
xchg
ret
clc
mov
mov
jp,pt
pop
cmpsl
xchg
xor
jae
pop
mov
int3
adc
xlat
pusha
cmpsl
mov
push
mov
or
fisubl
cmp
in
push
pusha
gs
mov
sahf
pop
out
jbe
xchg
out
aaa
je
into
fisttps
mov
xlat
cmp
cli
cmp
addr16
cmp
jg
fisubrl
das
lock
adc
mov
aas
mov
std
iret
idiv
fisubrl
fmul
or
stc
out
nop
lahf
dec
sub
movsl
cmp
cmp
pop
add
test
inc
sub
pop
fsts
scas
push
pop
sti
in
adc
and
into
cmp
pop
loop
lock
imul
cmp
xor
ja
cmp
add
and
pop
lea
push
adcl
testb
mov
std
inc
and
adc
fcompl
ret
pushf
loope
push
adc
xlat
pop
xor
mov
mov
xchg
xor
shll
or
hlt
popa
mov
and
ret
outsb
subl
fwait
inc
cmp
js
cmp
out
out
xor
and
add
in
in
frstor
xor
pop
or
mov
mov
cmp
pop
mov
cli
cs
adc
mov
lods
imul
iret
xor
mov
pop
xorl
jnp
and
or
sbb
test
in
dec
lahf
jnp
sub
xor
push
icebp
je
mov
or
loop
push
aas
sbb
out
in
loopne
scas
repnz
scas
fildl
push
pusha
xor
jle
aam
pcmpeqw
js
and
inc
jns
inc
loopne
fstpt
ret
loopne
out
ret
out
cmp
adc
repz
outsl
jmp
jbe
mov
sub
cmp
push
in
inc
int3
pop
inc
imul
push
jo
inc
test
mov
outsl
repz
out
bound
mov
imul
cld
lods
lahf
mov
popa
xchg
js
andb
loop
pop
or
test
sbb
mulb
or
mov
decb
xor
test
dec
repnz
lcall
mov
cmp
sbb
xor
mov
idivl
mov
rorb
and
data16
es
es
or
icebp
push
or
push
fistl
mov
adc
lds
and
pop
sbb
addl
mov
jg
fisttpl
mov
sti
push
pop
std
xor
in
cmpsb
cwtl
sbb
in
pop
into
xchg
addr16
mov
dec
popa
dec
movsl
push
inc
mov
and
adc
jmp
xchg
mov
jge
mov
cmp
mov
jg
pop
and
cmpsl
inc
pushf
cmp
aad
add
jo
add
cmp
mov
jno
ret
enter
mov
mov
sbb
inc
sarl
sub
in
jge
push
in
lds
add
mov
adc
push
das
aad
push
jo
sub
dec
fnstcw
std
push
mov
imul
imul
stos
imul
mov
fmul
in
das
popa
cmp
out
cld
je
inc
mov
addr16
mov
add
sbb
cmp
mov
scas
pop
jnp
jne
sub
into
push
mov
xchg
mov
pop
or
leave
ss
rorl
sub
cli
call
shrl
lcall
xchg
inc
fidivl
pop
sti
add
and
add
movsb
jae
das
dec
cmp
test
lea
dec
jle
aam
add
lret
dec
sti
lods
outsl
popf
and
pusha
inc
pop
add
hlt
rcrb
aas
jg
mov
sahf
sbb
xor
movsb
popf
jmp
outsl
subb
jl
mov
cmp
inc
jnp
sub
xor
addr16
or
jp
pop
xchg
adc
gs
loopne
mov
shrb
mov
or
jecxz
pusha
xchg
or
xor
data16
sahf
cs
out
and
and
aaa
xor
mov
jle
sbb
gs
and
dec
lcall
jne
cmp
dec
add
push
push
std
cmp
adc
jecxz
inc
es
add
jecxz
cwtl
insb
xchg
push
gs
and
sti
dec
mov
and
jne
ss
lret
loopne
loope
pop
jmp
mov
ret
stos
clc
mov
fisttpll
xor
mov
inc
cli
jns
call
mov
xchg
cmp
inc
push
push
imul
sbb
jle
fs
sbb
sarl
cld
push
push
test
or
test
jb
pop
dec
int3
mov
dec
and
mov
push
or
adc
lods
ljmp
sub
std
in
in
or
cmp
gs
dec
dec
repnz
inc
lods
inc
sbb
les
in
stos
and
pop
sti
xchg
outsl
mov
outsl
jb
jg
dec
add
addr16
mov
sbbl
cli
sub
test
ds
sub
mov
ds
jne
add
movl
mov
in
mov
fcmovb
sbb
xchg
mov
cwtl
dec
popf
xlat
sbb
mov
sub
ret
mov
ds
mov
xor
jnp
and
pushf
rorl
out
add
popf
xor
mov
push
push
adc
in
aaa
mov
in
das
cmp
shll
pop
fisubl
sub
dec
out
or
sbb
stc
inc
cld
loope
outsb
adc
jae
cmc
xor
mov
jbe
arpl
arpl
adc
sub
arpl
xor
pop
jne
sbb
rol
mov
and
ljmp
jmp
into
iret
xor
add
add
sub
scas
stc
sbb
and
movsb
push
and
inc
es
ja
adc
inc
test
push
push
sub
jp
gs
mov
pop
in
repnz
jb,pt
and
stc
repz
push
dec
sbb
fildll
push
loope
mov
xorl
fidivrs
dec
lock
daa
pop
jnp
add
push
hlt
adc
fists
bound
add
pusha
mov
add
shl
lcall
sbb
cmpl
les
fistl
add
mov
add
push
repz
jne
adc
push
mov
xchg
cltd
adc
push
mov
mov
dec
xchg
sub
add
mov
mov
jo
cmp
in
in
or
arpl
test
jge
lret
daa
mov
aad
inc
scas
adc
sub
jmp
push
xor
xchg
push
lods
sbb
gs
mov
sub
imul
maxps
adc
je
pop
ljmp
lret
scas
je
or
pop
dec
insb
insb
jno
mov
or
and
cmpsl
or
outsb
das
adc
jl
dec
jle
shlb
pop
dec
lret
fisubs
mov
cmp
stc
adc
jecxz
jmp
sub
adc
adc
test
in
pop
push
gs
xchg
mov
mov
cs
ljmp
sub
mov
add
dec
scas
aam
mov
imul
fldl
adc
test
mov
pop
test
fisubs
insl
and
xor
xchg
jmp
sub
sti
jo
jl
imul
test
add
mov
cld
mov
sbb
xchg
js
inc
and
or
adc
push
or
mov
xor
iret
aad
lcall
fimull
cmp
addr16
jg
fs
xchg
clc
mov
cmp
push
sbb
jns
xor
push
push
clc
sti
sbb
repz
lods
mov
push
jns
push
cmpsb
repz
add
aas
sub
push
inc
dec
ja
in
jl
std
iret
xor
and
pop
ret
aad
xor
inc
int
gs
xlat
test
fidivl
mov
popa
and
sbb
xor
fisttpl
std
lahf
or
jl
or
outsb
call
repnz
sub
insl
int3
mov
sub
cmpsl
les
decl
out
dec
jae
int
icebp
fldl
or
cmc
pop
std
insl
popa
add
lds
mov
add
inc
mov
fisubl
mov
lds
push
aaa
lds
pusha
aaa
or
lock
pop
aaa
out
clc
outsw
daa
jnp
cwtl
loope
aas
loope
pusha
adc
push
outsl
pop
sbb
cmc
sti
mov
bound
enter
push
sub
ficompl
dec
orps
mov
cmp
ds
popa
mov
out
dec
xchg
xor
test
out
addr16
pop
mov
aas
roll
mov
fwait
or
sbb
int
add
jb
ds
jno
jmp
and
sub
dec
cmp
arpl
outsb
inc
test
xchg
cmp
sbb
push
pop
inc
mov
test
pop
inc
dec
lret
mov
push
imul
xlat
loopne
push
or
ret
fdivr
negl
mulb
ss
outsb
aad
int3
roll
out
inc
pusha
xor
nop
pop
ret
inc
rolb
jle
shrb
xchg
mov
pop
push
pushf
xlat
aas
xchg
or
loopne
cwtl
cmpsl
or
and
mov
adc
lahf
jmp
das
popf
mov
cmp
jne
mov
jp
sbb
adc
out
dec
popl
ljmp
or
cmc
lea
dec
sti
push
xor
ret
cs
push
cmp
pusha
sub
repnz
mov
inc
loope
shll
pop
aam
xchg
pop
ja
stc
pusha
push
shrb
push
fstpl
inc
fisubl
movsl
pop
or
shlb
jae
pushf
push
rorl
rclb
ds
int3
rcl
jp
test
xor
sti
mov
cmpl
dec
andl
adc
inc
pop
push
and
dec
popa
push
xor
adc
jecxz
sub
loop,pn
addr16
idivl
sbb
push
movl
ret
dec
xchg
adc
mov
push
sub
adc
mov
adc
leave
arpl
insb
mov
jno
dec
adc
cmpsl
mov
je
pop
mov
mov
sub
and
mov
mov
or
push
ret
cmc
incl
sahf
push
sbb
mov
xor
dec
mov
out
inc
les
mov
negb
mov
xchg
add
stc
pushf
mov
sahf
sub
sbb
add
add
fsubp
push
lret
adc
sub
sahf
filds
jecxz
fimull
out
jns
leave
iret
xor
adc
inc
pop
pop
xchg
push
and
stos
or
xor
lds
adc
popf
xchg
outsb
rorl
mov
push
add
sub
enter
fs
fisttps
sbb
jle
push
lods
aas
ds
inc
leave
es
push
jmp
mov
in
mov
xchg
cmpsl
pop
fsubrl
mov
lea
sub
sbb
xorl
mov
in
inc
les
mov
fnstenv
mov
pop
in
add
jl
mov
imul
rol
dec
fisubrl
cld
push
arpl
push
ja
cmp
sahf
test
mov
sub
call
shl
dec
inc
pop
out
push
pop
xchg
mov
jl
cmpb
pop
xorb
rorb
bound
add
mov
insl
je
lret
pop
cld
dec
inc
test
push
pushf
pop
scas
insl
add
daa
mov
or
fwait
jne
scas
cmpsb
push
jns
add
movsl
add
inc
lret
push
xchg
negb
les
cmp
addr16
sub
jno
sub
scas
sub
fdivrs
sti
sub
insl
aam
ss
lret
loope
lods
cmp
les
xchg
gs
mov
adc
sbb
scas
sbbb
leave
pushf
enter
cmpsb
mov
jle
cltd
mov
loope
sub
hlt
nop
mov
jno
into
insl
pop
dec
divl
push
sbbb
scas
jo
lock
lret
ss
decl
mov
push
adc
jo
cmp
in
add
aam
jne
xchg
or
out
adc
pusha
mov
inc
into
fidivrl
dec
lahf
push
gs
or
scas
negb
or
mov
cld
lods
lret
cmp
in
insl
in
fwait
mov
push
std
mov
leave
sbb
negb
in
adc
jle
subl
mov
out
jo
sub
or
sahf
mov
mov
adc
fneni(8087
cmc
imul
stos
orb
or
cmp
cmp
xchg
or
sub
sbb
cmp
shrl
lea
out
mov
mov
jmp
mov
xchg
ja
jle
jge
adc
popa
or
daa
stc
xchg
cmp
call
mov
xchg
sub
jne
pop
pushf
mov
and
jl
rorl
inc
jb
dec
mov
mov
ds
sbb
addr16
test
lods
and
xchg
xor
pop
fnsetpm(287
and
xor
pop
jae
loope
sub
xchg
push
mov
xor
or
std
and
lcall
and
sub
add
jg
or
jo
into
and
adc
cltd
or
faddl
cwtl
inc
aam
loope
push
mov
pextrw
push
mov
jae
lods
mov
popa
or
xor
repnz
push
jle
cltd
dec
test
fimuls
cmp
mov
sbb
cmp
jnp
shrl
add
jae
mov
cld
mov
add
mov
sbb
cmp
sbb
stc
out
mov
push
mov
or
cmp
jbe
test
shr
dec
inc
faddl
jge
push
push
aad
enter
xor
xor
lcall
int3
mov
inc
sbb
out
jge
add
lods
dec
in
mov
sbb
test
imul
sbb
loopne
inc
cmp
daa
cmp
jg
jo
sti
andb
stos
xor
repnz
mov
mov
xchg
lcall
jmp
add
testl
loopne
add
pusha
loopne
mov
xchg
cmp
dec
pop
fnsave
adc
test
add
xor
push
movsl
mov
lds
xor
jmp
xchg
xchg
rorb
test
push
cmp
jge
inc
lahf
lcall
pop
div
jno
dec
jecxz
dec
xchg
adc
mov
ret
enter
push
aas
mov
testl
cs
pop
addl
shll
pusha
jg
test
and
mov
cmpsb
arpl
sub
out
push
std
lods
out
daa
pop
push
pop
adc
into
mov
shr
es
mov
xor
mov
sarl
inc
data16
xor
and
xchg
sbbl
cmp
pop
les
xchg
mov
add
mov
sbb
dec
adc
outsl
sar
xchg
dec
repz
sub
xor
mov
out
mov
fsts
mov
daa
inc
push
jmp
jno
ljmp
pop
lret
clc
mov
fadd
adc
inc
mov
lea
test
xor
push
dec
ss
loope
adc
dec
mov
jl
mov
ret
inc
cld
ret
sub
lds
sbb
or
inc
mov
sub
dec
inc
push
scas
loopne
iret
and
out
repz
lret
pop
outsb
lahf
jge
scas
aam
ror
and
lcall
cli
fs
faddl
and
lahf
or
inc
sbb
sub
stos
inc
das
cli
pusha
add
pushf
aad
call
cmpb
add
dec
cwtl
cmp
adcl
mov
or
add
call
xor
push
in
and
call
pop
xor
fistl
mov
arpl
and
push
mov
pcmpeqd
lds
jb
mov
les
adcl
ret
xchg
mov
loop
sbb
data16
inc
nop
cmp
pusha
jmp
and
adc
out
dec
addl
int
inc
sub
les
xor
fcompl
test
adc
popf
xor
out
jecxz
sbb
jo
cmpsl
adc
cmp
xchg
mov
add
lds
test
mov
enter
fsubl
jg
scas
xor
xor
mov
test
sub
dec
xchg
sbb
call
xchg
xchg
mov
stc
dec
mov
dec
mov
inc
pop
mov
push
xchg
xlat
es
cli
outsb
add
daa
dec
aam
pusha
jbe
in
add
pop
mov
outsb
movsb
dec
daa
in
rcll
or
xor
jl
pop
or
fs
xor
fisubrl
ja
loop
cmp
outsb
sbb
cmpsb
jno
mov
mov
out
push
inc
push
jmp
jl,pn
fstpt
inc
insb
stc
xor
xchg
loopne
scas
movsl
jo
mov
jg
jae
fmuls
mov
inc
dec
adcb
ret
jg
into
nop
push
push
push
sub
xchg
rorb
sub
aad
adc
jbe
rcll
fdivrl
mov
pop
movsl
addr16
test
shlb
or
shrb
shrb
fcom
dec
cmpb
test
xor
popa
mov
pop
out
xchg
scas
mov
adc
insl
js
mov
mov
jp
and
or
push
adc
push
lods
jae
mov
cld
mov
imul
jge
loope
pop
jns
or
fmuls
sahf
adc
cmp
addr16
imul
sti
pop
scas
out
ficoms
in
cli
inc
sub
xorb
jbe
rcll
out
pop
arpl
pop
mov
or
and
pop
mov
push
stc
lea
mov
rolb
stos
aam
push
rcll
jmp
push
enter
shll
out
lods
dec
xor
ljmp
popa
pop
jnp
mov
inc
xor
push
adc
lahf
into
mov
jle
mov
jnp
mov
shr
insb
pop
out
insb
xchg
ret
mov
je
sub
or
pop
jno
je
sahf
cmp
fdivr
sar
out
xlat
sub
in
ret
push
faddl
inc
push
adc
enter
in
pop
or
mov
nop
mov
pop
ret
adc
popf
fidivrl
sahf
outsl
pop
imul
xor
mov
inc
outsl
inc
pop
xchg
sahf
push
ror
cli
jg
inc
test
bound
sub
les
add
jp
sti
imul
jp
push
push
cmp
dec
fcmove
jmp
lds
jnp
mov
mov
jmp
repnz
rcll
and
cmpsl
pop
popa
pop
mov
xor
mov
xchg
jge
call
hlt
mov
and
out
filds
mov
push
cmpsb
xlat
inc
cwtl
and
frstpm(287
mov
daa
bound
aaa
filds
dec
add
sub
jbe
xchg
daa
aad
push
popf
divl
push
push
push
dec
lcall
icebp
addr16
sub
xor
mov
lret
push
jge
or
xchg
clc
ja
ds
mov
and
mov
adc
out
jl
imulb
paddsb
lret
add
adc
dec
clc
stos
gs
dec
jmp
js
pop
pop
mov
or
mov
cmp
cmp
jg
dec
xchg
aam
repz
push
insl
cmp
nop
imul
inc
push
fwait
aad
shrl
test
pop
mov
gs
mov
adc
stos
add
sbb
dec
xchg
push
add
xor
mov
mov
pop
gs
or
jl
enter
xor
pop
jmp
sbb
sub
fldcw
add
jnp
testl
mov
adc
pop
cmp
rorl
in
dec
sbb
push
out
mov
shrl
nop
inc
xchg
push
xchg
je
mov
test
pop
ss
or
mov
bound
mov
jge
mov
xor
incb
es
push
mov
test
loope
lods
lock
jecxz
fwait
in
dec
xor
pop
mov
rol
scas
aaa
lahf
xchg
js
dec
mov
mov
dec
pushf
inc
lret
mov
fs
call
mov
mov
mov
sub
psubusb
lods
adc
adc
out
mov
adc
in
mov
outsl
or
fisubs
test
stos
enter
push
push
xchg
jae
aas
pop
hlt
data16
add
push
stc
jnp
sub
add
push
add
jnp
or
lret
neg
adc
mov
scas
in
inc
mov
sub
and
adc
out
fmull
lret
lds
mov
stos
repz
insl
xchg
mov
subl
mov
lds
sbb
ret
fcomp
rcll
jge
aaa
outsl
daa
mov
icebp
lret
push
sub
outsl
mov
mov
fs
pop
xchg
xor
movsb
mov
lea
cwtl
lcall
mov
push
xor
cld
xor
mov
test
xchg
es
lods
in
and
aad
cmp
xchg
mulb
je
sbb
xchg
xchg
cmp
pop
inc
dec
stos
jp
pop
push
es
aam
pop
rcrb
inc
jo
dec
test
jbe
das
jne
pop
sbb
push
roll
movsl
and
or
pop
push
lret
int
scas
call
sarl
in
add
testb
mov
fcomps
add
push
or
fbstp
cmpl
pop
scas
mull
fwait
mov
and
sbb
dec
cli
jae
mov
inc
lods
js
aas
xlat
aas
and
jp
sbb
adc
dec
dec
movsw
addr16
out
std
in
dec
cmc
arpl
inc
xorl
pusha
stc
rcrb
or
push
push
stc
xor
sar
mov
hlt
lret
inc
sahf
pushf
jbe
fdivrl
xor
div
sub
insl
xchg
cmpsb
repz
mov
movsl
call
and
add
xor
pop
and
sbb
jae
pop
subl
mov
aaa
jge
or
adc
scas
ljmp
and
in
in
adc
jg
push
xchg
cmpsb
or
imul
int3
cmpsb
addb
mov
imul
sahf
xor
sub
or
sub
push
outsb
mov
jl
mov
mov
imul
mov
sbb
xchg
stos
ljmp
pusha
jg
pop
ja
aad
dec
lds
mov
jbe
add
mov
push
pop
fsubr
out
mov
inc
or
arpl
data16
bound
pop
inc
int
rorb
adc
jae
daa
pop
outsl
lock
jnp
aaa
adc
imul
dec
insl
jmp
mov
sbb
imul
ficoms
cmp
pushf
test
lcall
shrl
inc
leave
lret
mov
lds
xchg
pop
pop
cwtl
xor
orl
sbb
inc
loopne
push
stos
repz
jns
or
xchg
xor
seto
cmc
push
sbb
xchg
sub
nop
shll
jle
xor
lea
ret
mov
fsub
dec
sbb
mov
mov
mov
sbb
stos
rcr
mov
popf
mov
movl
mov
dec
cmpsl
xchg
jge
push
mov
push
pop
cmpsb
call
and
mov
mov
ret
movsb
popa
inc
movb
xor
or
add
fstpl
push
jnp
lcall
or
enter
ja
inc
adc
pop
notb
daa
xchg
fsubs
xor
inc
mov
inc
sarb
call
pop
and
sti
out
cmpsb
inc
xchg
cmp
enter
loop
out
ja
jo
adc
jmp
mov
adc
push
aam
sbb
xchg
out
dec
loope
inc
xchg
sub
fidivrl
std
pop
loope
push
or
xlat
xchg
and
ljmp
jecxz
or
bound
xchg
sbb
jo
inc
call
int
aaa
or
xchg
test
inc
mov
or
xchg
sub
repnz
shll
repnz
sub
test
pop
lock
pop
mov
gs
in
mov
mov
inc
in
jae
mov
dec
fldenv
xchg
inc
nop
mov
adc
jae
prefetch
lods
xchg
mov
fcmovne
lret
cmp
xchg
fwait
pop
jo
cmp
test
ljmp
icebp
test
and
pop
mov
clc
mov
add
jns
cmp
dec
rcll
scas
out
mov
scas
push
fs
es
lret
jle
daa
inc
aam
leave
in
push
cmp
repnz
cmpb
lea
jge
call
mov
add
mov
movsb
insl
sbb
dec
sub
pop
cmp
shlb
push
ja
scas
into
in
outsl
in
daa
jge
xchg
insb
sbb
pop
mov
mov
je
xor
dec
sbb
cld
fidivrs
insb
push
fs
and
ds
jbe
adc
jae
ss
cli
dec
or
and
mov
daa
out
lret
fnstenv
shrb
mov
outsl
hlt
xchg
cltd
negb
scas
adc
add
je
int3
mov
bound
adc
jnp
into
push
xor
jmp
outsl
inc
sub
stos
jecxz
sbb
push
add
mov
out
loopew
jl
xchg
mov
shll
pop
mov
mov
jns
rcl
sbb
lcall
push
rolb
int3
cmp
sbb
clc
cmpps
nop
xor
scas
lods
push
jmp
and
das
jl
mov
mov
pop
pop
bound
sbb
lret
cmpsl
outsl
sahf
fisubl
pusha
ficompl
fadd
xchg
or
cmpl
stos
les
push
fwait
sub
xor
sahf
xor
out
xor
jl
sarl
movsb
enter
repnz
cltd
inc
and
adc
adc
gs
sbb
shl
xor
lds
into
pop
mov
add
jnp
inc
iret
call
shll
and
push
mov
sbb
stos
push
or
push
cmpsl
sub
pop
in
push
cmpsb
dec
lock
xchg
pop
cmp
xor
int
xor
cmp
int
lds
nop
pop
fld
cmp
cmp
cli
ret
lahf
xchg
push
add
jp
push
aad
dec
xor
and
xor
sar
xlat
lods
pop
test
fcmovb
aaa
mov
repz
cmp
add
in
cli
fidivrs
sbb
nop
ds
xor
sub
ljmp
notl
adc
bound
mov
arpl
xorl
add
daa
test
repnz
pop
js
cmpsl
es
int3
push
jg
int
and
je
xchg
lds
out
mov
aas
sbb
cmp
push
in
jmp
adc
repnz
mov
fnstsw
pop
cmpb
popa
add
xchg
sahf
dec
and
bound
jl
out
test
das
jle
pop
sar
test
ljmp
push
sti
rorl
xchg
sub
mov
dec
cmp
aaa
dec
mov
pop
pop
sub
adc
mov
jl
jbe
cli
xor
nop
mov
fsubrl
cs
testb
dec
jp
and
bound
insl
pushl
lcall
mov
cmpb
enter
in
cmpsb
or
popf
sahf
add
xor
dec
cmc
imul
inc
mov
dec
outsl
mov
mov
mov
dec
data16
inc
mov
pop
fdivs
mov
jl
js
scas
cs
mov
add
jno
fistpl
enter
adc
mov
fimuls
jmp
lahf
jge
xchg
push
dec
add
adc
js
enter
jecxz
jb
add
mov
and
mov
out
movsb
ds
fwait
push
mov
dec
test
aam
stos
repz
jne
mov
daa
nop
pop
fimull
dec
dec
ret
jle
inc
pop
cmc
push
hlt
pop
out
mov
push
mov
and
xchg
sbb
mov
mov
jns
cld
loopne
xor
in
stos
mov
daa
loope
pop
mov
mov
int3
pusha
fstpt
jbe
xor
inc
shlb
rcll
mov
push
dec
push
mov
xorl
add
dec
or
int
add
dec
xchg
push
aas
push
bound
mov
cmp
shll
bound
inc
pop
pusha
lcall
mov
dec
pop
push
xor
pop
movsb
lods
sub
mov
repz
pop
mov
jnp
mov
stos
call
xor
push
add
mov
jle
mov
jns
ds
insl
cmpsb
mov
inc
pop
pop
adc
and
fmuls
and
lcall
pushf
push
jg
fchs
es
cmp
add
jecxz
sub
mov
cmp
test
fidivl
and
mov
ds
test
sub
outsl
pop
xchg
xor
jnp
hlt
xchg
rclb
mov
mov
sbb
pop
cmp
mov
mov
or
pop
or
addr16
xchg
add
scas
inc
js
popf
pop
insl
jb
insl
xor
repz
xor
ret
push
into
xor
push
jle
mov
xchg
xchg
outsl
dec
jl
mov
inc
xchg
or
inc
fcmovnu
push
mov
jb
mov
jns
mov
pop
in
add
fisubs
mov
sbb
iret
loope
jno
xchg
out
cmpsl
dec
in
dec
dec
pop
adc
jmp
add
inc
inc
popl
ja
shll
popa
mov
add
arpl
xor
cli
pop
sub
clc
push
call
dec
push
pop
test
mov
stos
add
xchg
push
sub
xchg
test
adc
add
jnp
cmp
cmp
addl
inc
and
scas
sub
jb
push
jmp
cmpb
pop
roll
or
pop
pop
pop
popf
notb
or
and
leave
out
pushf
and
in
adc
ss
lock
lcall
fisubrl
push
sub
test
mov
icebp
icebp
loop
mov
push
ljmp
add
ds
je
dec
lahf
adc
das
push
xchg
mov
cmpsb
sub
loope
sub
xor
pop
arpl
sub
leave
xor
push
repnz
sub
mov
or
subl
xor
inc
push
je
jnp
push
call
jmp
and
scas
push
das
aaa
add
push
adc
lock
enter
pop
cmp
jo
xchg
add
push
test
pop
int3
inc
push
ror
jp
add
out
add
stos
lahf
xor
and
test
mull
mov
sbb
movsl
int
fnsave
jle
and
pushf
popf
jno
adc
test
lock
dec
aam
jmp
iret
adc
in
or
cld
fcoms
in
xor
decl
and
scas
sbb
sahf
lds
ljmp
pop
sbb
cmp
nop
pop
xor
jnp
lahf
daa
pop
jbe
ficoml
clc
jnp
ficomps
clc
mov
or
outsl
mov
int
cld
cld
or
ret
xor
push
push
lcall
mov
add
and
mov
xchg
out
mov
xchg
scas
lock
jno
mov
ficoml
inc
ja
outsl
and
test
movsl
jg
stc
push
outsb
outsb
in
repnz
inc
mov
xor
enter
dec
icebp
sbb
aam
test
or
pusha
and
cmc
or
dec
ffree
hlt
inc
cmp
sti
mov
or
lret
inc
into
ja
xchg
scas
push
push
push
out
jbe
xor
imul
fldt
sbb
xor
movsb
xchg
out
pop
pop
cmpsl
add
leave
gs
cmp
dec
aas
pop
jmp
jbe
in
mov
push
das
and
xchg
aaa
stos
pop
cs
mov
insb
dec
pop
mov
arpl
xchg
outsb
test
add
cwtl
pop
xchg
cmp
pushf
cmp
gs
jge
lock
mov
push
push
inc
rep
lock
fwait
xor
pusha
lock
pop
lcall
dec
es
and
mulb
out
repnz
xchg
push
dec
mov
mov
jne
cmc
push
test
push
repnz
push
jle
int3
push
sti
sub
les
aas
out
insl
pop
lods
cmpsb
sbb
cmpsb
sbb
xchg
mov
adc
popf
push
shll
in
movsl
je
mov
lret
lock
lahf
dec
scas
dec
repnz
xor
dec
imul
pushf
add
pop
inc
in
popf
sub
push
push
nop
adc
push
pushf
scas
push
bswap
mov
jo
push
in
cld
dec
imull
push
xchg
iret
pop
popa
push
fs
stos
pop
jb
js
fisttpl
fistl
loop
sbb
inc
dec
and
fidivrs
std
or
or
icebp
lods
pop
icebp
sub
jno,pt
xchg
mov
xlat
ja
pop
push
cmp
sbb
push
or
imull
xor
pop
inc
adc
dec
lahf
outsb
jno
cmc
lcall
in
fisttpl
push
mov
dec
test
lods
cmp
push
out
xchg
cli
sub
mov
or
xchg
pop
out
nop
fimuls
push
cld
xor
les
stc
sub
insl
imul
cmp
pop
pushf
inc
in
in
negb
sti
dec
pop
es
fdivr
nop
insl
fisubl
mov
or
scas
sbb
fldl
lahf
jbe
icebp
aas
movaps
jbe
add
in
sub
lea
in
repz
inc
xchg
and
std
adc
loop
push
pop
in
outsb
add
pop
call
data16
cmp
pop
inc
pop
sub
mov
movsb
outsl
add
xor
cmpsl
mov
repnz
rolb
dec
add
bndldx
movsl
insl
inc
testl
pop
inc
adc
cmp
lret
fsubrs
push
rcr
inc
mov
xchg
aad
cmp
sbb
leave
inc
sti
stos
cltd
mov
mov
sbb
sub
lret
add
or
int
leave
out
lods
arpl
and
imul
jne
shlb
insl
js
enter
mov
dec
and
and
sub
lahf
lds
movsb
mov
jno
sbb
and
sti
fwait
inc
lods
mov
dec
clc
je
mov
mov
scas
push
mov
xchg
xchg
shld
add
sub
into
scas
pop
rclb
push
in
aam
mov
sub
in
push
adc
rorl
fmull
or
lahf
jb
or
or
or
in
push
adc
addl
daa
flds
adc
or
gs
jne
and
or
movsl
mov
arpl
and
lret
nop
adc
pop
in
mov
cmp
sbb
mulb
mov
jnp
in
cmp
add
adc
or
xchg
sub
and
cmp
insb
inc
scas
mov
sbb
adc
cmp
nop
inc
or
out
test
and
mov
dec
and
sub
dec
std
mov
fists
cld
push
sbb
fs
cmp
mov
inc
add
icebp
adc
inc
mov
in
into
jmp
mov
jl
popf
dec
add
pandn
pop
sbb
or
and
insl
jb
or
pusha
rorb
xchg
jge,pn
test
or
mov
jae
je
fndisi(8087
and
cwtl
xor
out
je
mov
pop
mov
fwait
push
xchg
rorl
add
popf
xchg
mov
hlt
lds
mov
je
or
cmp
dec
insb
lods
outsb
push
sbb
and
or
inc
into
out
jg
push
cs
mov
leave
into
sbb
filds
mov
xor
inc
je
pop
mov
shlb
cmp
iret
rclb
data16
xor
inc
ret
inc
mov
out
jnp
xlat
mov
sub
sub
in
jl
stc
insb
xor
inc
or
pop
add
xor
push
repz
push
lcall
cmp
sbb
inc
mov
fimull
call
mov
push
sahf
lret
in
ss
inc
sbb
fmull
std
sahf
adc
dec
test
or
pop
rolb
mov
push
int
fbld
lods
or
add
sti
add
sbb
push
repz
xor
lcall
xor
jb
and
sti
jp
cmpsl
mov
xchg
pop
inc
and
mov
cli
aad
fs
xchg
imul
repnz
xlat
inc
hlt
add
xchg
in
or
les
mov
cwtl
dec
je
xchg
xchg
xchg
adc
jno
addr16
and
mov
lcall
mov
mov
paddusw
xor
mov
or
xchg
adc
mov
jmp
lahf
xchg
lea
js
xlat
inc
jmp
jge
shl
mov
add
test
test
sub
inc
adc
rcrb
sarl
add
outsl
in
and
fmulp
and
inc
xchg
jg
jmp
leave
ljmp
push
les
xor
cmpsl
mov
shl
lds
mov
mov
adc
or
loop
xchg
mov
jbe
xlat
adc
bound
adc
sahf
push
xchg
jg
dec
sti
lret
cltd
loope
rolb
xor
addr16
cwtl
push
scas
rorb
xchg
xchg
or
xchg
mov
loope
fldt
std
mov
das
and
mov
adc
fcmovbe
in
sub
aaa
mov
f2xm1
pop
popa
inc
jae
push
data16
fs
mov
xchg
testb
mov
xor
xchg
sub
pop
sbb
inc
adc
into
jmp
adc
out
pop
loope
mov
pop
iret
sub
jbe
mov
aam
mov
enter
pop
out
jnp
xchg
ret
mov
sbb
outsb
jno
or
and
sbb
lods
jmp
loope
adc
mov
fiadds
xchg
and
push
test
fidivrs
add
std
sub
lods
insb
dec
sar
mov
add
push
add
inc
popf
hlt
loope
pop
clc
in
fistpl
mov
fld1
xchg
into
rcll
cltd
sti
fs
sahf
mov
push
jb
mov
out
sub
rorl
lods
lahf
mov
imul
adc
and
pushl
inc
pushf
stc
je
fidivl
and
sbb
xchg
daa
sbb
pop
cmp
dec
pop
inc
outsb
adc
sbb
push
nop
enter
int3
movsb
js
das
ljmp
ja
test
clc
fmul
jg
pusha
dec
jb
jmp
movsl
push
out
fwait
cmp
push
jmp
scas
outsb
sub
or
sbb
push
and
stos
jb
pop
add
fimuls
adc
cmpsb
ret
js
out
lods
cmp
push
rclb
test
andl
cs
add
dec
cld
adc
in
push
pop
repz
fsubr
add
jmp
push
fcomip
es
iret
xchg
jbe
or
push
mov
sbb
add
mov
cmp
adc
fimuls
bound
or
in
fdivs
int
or
or
lods
enter
or
and
loope
out
inc
aam
test
nop
lods
and
mov
jl
sbb
cmpsl
cli
arpl
in
xchg
push
cli
ret
movsb
cmp
sub
sbb
cmp
out
pop
lret
sarb
insl
outsl
dec
in
jg
jmp
js
xchg
and
xor
je
or
mov
mov
test
push
jnp
and
mov
jns
or
mov
ss
test
xchg
dec
cmp
push
rclb
jno
jge
cld
popf
sub
xor
aam
in
sbbb
mov
and
mov
push
je
es
loopne
shlb
pop
fisubrs
cmp
xor
jns
clc
adc
jbe
jo
mov
mov
inc
sbb
into
lret
cmp
and
je
sahf
ss
cwtl
shll
mov
pusha
cld
and
xor
fs
rcll
dec
mov
repnz
jnp
and
mov
cmp
orl
cmc
jg
mov
xchg
mov
mov
pop
inc
addl
dec
popf
out
or
movsb
jp
fstpl
pop
int
ds
cmp
fstpt
not
inc
sbb
scas
test
out
aas
mov
lret
mov
cmp
sbb
or
data16
xchg
std
stos
xor
das
gs
je
xchg
push
sub
pop
ds
enter
mov
insb
arpl
jge
addr16
cmpb
loopne
cs
lahf
cmp
or
nop
jl
fcoml
fnstsw
jl
lds
pop
adc
push
fisubl
lret
mov
push
push
sbb
sbb
jo
orl
pop
lahf
dec
pop
jg
sbbb
dec
xchg
add
rclb
sub
jmp
ret
xchg
sub
xchg
subl
push
mov
les
outsb
bound
adc
xor
cmp
jmp
sub
and
pmulhuw
lods
mov
and
pop
cld
xor
popa
lock
inc
or
jnp
cltd
cs
cmp
adc
sbb
incb
xchg
mov
sub
mov
and
dec
mov
sub
jecxz
das
mov
push
outsb
stos
sbb
sbbb
sub
gs
sub
sub
out
xchg
fcmove
adc
push
and
jge
jne
push
dec
nop
inc
notb
mov
jae
xor
mov
dec
outsb
into
mov
inc
call
cld
jge
pop
pushf
jnp
push
cltd
xor
xchg
lcall
mov
movsb
xchg
or
push
sub
test
mov
int3
daa
ss
aad
outsl
mov
jnp
sub
dec
cmp
inc
xchg
mov
popf
xorl
loope
cmp
clc
leave
fs
xchg
jg
sysret
fbstp
loopne
mov
loop
inc
and
out
loop
and
je
inc
xor
mov
mov
dec
mov
ljmp
notl
out
movsb
inc
shl
sbb
sahf
jb
pop
xor
add
or
loopne
stc
push
daa
stos
inc
cmp
aas
sti
mov
sub
pop
subb
sbb
sarl
or
sbb
mov
leave
mull
arpl
lcall
inc
sbb
inc
mov
pushf
lahf
mov
pop
mov
or
out
inc
loop
clc
test
adc
loop
add
fnstenv
add
push
loopne
pop
sbb
mov
testl
sub
outsl
nop
jg
sbb
loopne
add
popa
fiaddl
fbld
mov
cmp
repz
frstor
outsb
pop
mov
scas
mov
test
test
mov
out
jnp
pop
stos
addl
pushf
icebp
ret
dec
cmpsl
sbb
cmp
mov
sub
add
loope
fistl
pushf
pop
adc
adc
cmpsl
push
adc
cmp
pop
xorl
dec
test
and
outsl
add
push
inc
mov
pop
mov
jp
sbb
imul
loopne
sub
movsl
xchg
mov
scas
lock
test
divb
imul
sub
sub
mov
dec
ret
loopne
insl
or
push
pop
sbb
lret
jecxz
cmp
lahf
test
punpckhbw
decl
push
sti
mov
faddl
int
ja
xor
cld
add
int3
dec
mov
mov
xor
shl
movsl
addr16
xchg
loopne
and
testb
jo
jp
xor
dec
xchg
in
pop
out
jp
mov
aaa
sub
and
aaa
mov
mov
or
mov
in
jo
or
aad
adc
pop
loop
push
loop
test
jo
mov
xlat
gs
popf
add
cmp
fs
push
mov
sbb
adc
xchg
push
and
xchg
loopne
pop
icebp
inc
add
ret
jle
cli
inc
mov
xchg
add
push
mov
fst
and
lods
mov
pushf
mov
and
pop
sbb
cmpsl
outsb
call
push
loope
mov
ja
lcall
ljmp
jp
in
xchg
pop
roll
jmp
mov
insb
test
popf
pushf
and
cmpb
loopne
idivl
rcrb
jb
cmc
test
scas
imul
sbb
adc
jb
repnz
xor
jg
ficoml
mov
pop
addr16
mov
add
push
mov
fidivs
dec
icebp
mov
or
aaa
pop
cmc
insb
ss
inc
dec
fsubs
push
xchg
jb
adc
imul
dec
stos
aas
sbb
pusha
cmpl
sub
out
lock
fs
add
in
nop
sub
mov
fcmovnbe
mov
xchg
xchg
and
and
xchg
push
mov
add
je
push
inc
sub
dec
mov
xor
push
out
dec
popf
sar
inc
js
pop
sub
test
int
xor
testl
nop
push
lret
mov
dec
push
loope
dec
bound
lret
popa
mov
jbe
insb
jg
mov
pop
pop
cmpsl
insb
xor
test
xchg
or
jge
pusha
das
cmpl
xor
jl
mov
and
je
insb
xchg
push
shlb
stos
sbb
ss
test
jl
push
or
pop
adc
sarb
or
dec
xchg
push
aam
lods
mulb
sub
out
cltd
add
cmp
mov
les
hlt
mov
lock
inc
sar
fmul
sub
sub
aad
jns
push
mov
adc
shrl
leave
mov
int
sub
dec
xchg
sub
daa
cmc
call
out
lods
pop
pop
ficoml
movsb
scas
xor
pop
leave
icebp
jnp
dec
inc
mov
cmpsb
in
dec
mov
ret
push
sub
dec
jge
push
movsb
lock
add
jecxz
lock
sbbb
nop
stos
test
std
xchg
xchg
xchg
pushf
xchg
dec
cmpsb
mov
in
aas
fistl
mov
stos
or
decl
lahf
pusha
andb
and
and
sbb
bound
mul
push
ljmp
pop
rol
mov
pop
fwait
pop
stc
hlt
xchg
test
push
lcall
test
int3
scas
xor
adc
push
mov
push
xchg
cmpsb
sbb
adc
xor
jge
iret
popf
mov
cmpsb
dec
adc
sub
aas
in
jmp
lds
mov
fisubrs
add
push
pop
imul
std
shlb
jecxz
cmp
sbb
in
sub
pushf
lahf
scas
add
jge
push
hlt
cld
push
cwtl
test
pusha
adc
sahf
fimuls
xchg
push
cmp
lock
rolb
loop
lret
mov
push
stos
fsubrs
fistps
cmp
cmp
nop
mov
in
pusha
fs
in
and
push
xchg
inc
or
jnp
mov
inc
sub
dec
movsb
insb
fsts
adc
and
push
and
or
mov
mov
stos
add
fldenv
cmp
ret
aam
lds
xchg
enter
fsubrs
pusha
inc
sub
adcl
in
jns
div
imul
push
pop
dec
push
mov
xor
gs
cmp
out
rol
dec
dec
sub
repnz
hlt
pop
leave
or
mov
jae
stos
mov
inc
test
shl
out
and
sbb
and
shll
rolb
pushf
imul
pop
aad
or
jae
popf
xchg
inc
dec
or
mov
arpl
mov
add
sti
mov
xchg
push
pop
mov
cmp
std
int3
push
loope
pop
sub
sub
push
jl
push
adc
add
sub
xor
jecxz
adc
in
push
and
shl
cmp
adc
jg
sub
or
jne
push
arpl
insl
in
fmulp
mov
sahf
jle
adc
jnp
lcall
sub
mov
dec
push
push
ret
pop
xorb
cmp
mov
mov
or
or
repz
pop
cmp
jae
push
daa
mov
lea
xchg
stos
leave
adc
cmp
mov
fdivrl
cmp
and
fimull
cmp
cmpsb
mov
lock
mov
push
xchg
and
es
sub
rcll
std
xchg
movsl
dec
cmp
aaa
dec
lret
mov
xchg
xchg
add
and
pop
jecxz
rolb
int3
fidivl
in
jnp
or
and
xor
pop
and
cmp
stos
test
add
dec
cs
mov
jne
shrl
jge
loop
or
add
inc
push
sbb
in
arpl
jne
xchg
insb
xor
lods
push
insl
add
pushl
iret
sbb
adc
add
or
loopne
jmp
shlb
ljmp
mov
outsb
clc
jmp
sbb
sub
out
push
sub
and
imul
sahf
xlat
xlat
ljmp
adc
adc
jae
jbe
sub
pushf
mov
pushl
fdivrl
mov
inc
cli
cmp
mov
inc
stos
push
sub
out
lds
aad
gs
cmpsb
pushf
jl
xor
aaa
xchg
xchg
adc
js
nop
lea
movsl
les
add
pop
cmp
loop
movsb
sub
add
mov
push
push
dec
dec
sub
ret
and
sti
mov
add
pop
sub
cltd
adc
pusha
sub
ror
subl
out
add
dec
push
sbb
push
mov
icebp
cmp
sbb
test
into
adc
das
xchg
jbe
shl
mov
xlat
dec
mov
les
or
mov
jns
jnp
in
adcb
in
cmp
insb
mov
push
sub
sbb
loop
fmull
jns
xor
je
ds
add
jle
add
cmp
fistl
jno
mov
lea
dec
inc
xchg
lods
call
lcall
bound
ds
xchg
or
daa
outsl
and
sahf
jne
add
adc
outsb
cmp
into
and
lods
imul
dec
mov
add
icebp
cmpsl
imul
mov
popa
xchg
out
cs
dec
cmpl
push
and
out
xchg
mov
or
movsl
out
loopne
out
or
inc
inc
dec
pusha
push
call
push
aad
je
jae
adc
and
aas
push
in
mov
cli
push
sub
mov
out
sub
aas
cltd
movsb
daa
shrl
std
xchg
mov
std
ret
insl
dec
push
pushf
push
mov
sbb
jb
mov
inc
test
ljmp
int
popa
add
or
cmc
ret
mov
mov
dec
or
fcmovnb
out
xchg
cmp
ficoms
loop
or
mov
dec
inc
add
pop
pop
inc
dec
cwtl
cli
fs
test
mulb
xchg
xor
cli
test
mov
shl
pop
mov
xor
sarl
jge
lds
jns
sub
cs
jmp
pop
aaa
cwtl
loop
in
andb
cmpsb
or
push
repz
hlt
cmpsb
je
test
stos
jns
fists
cmp
sub
add
mov
in
mov
movsb
lahf
ret
scas
movl
jle
popl
sub
dec
pop
cmpsb
and
sub
sub
mov
out
mov
lahf
hlt
fs
fisubrs
add
rclb
mov
outsb
dec
inc
shlb
mov
inc
pop
xchg
loop
repz
arpl
mov
shrb
push
loop
cmpsb
ret
push
iret
out
cs
sub
fadds
pop
fadd
add
ss
aam
js
inc
jle
movsl
fbld
je
daa
mov
jecxz
popf
mov
dec
cmc
adc
xchg
ljmp
push
mov
sbb
mov
vpcmpeqd
cmp
outsb
fimuls
inc
sbb
adc
fistl
mov
dec
pop
xor
es
pop
inc
push
sar
sahf
stc
mov
outsl
jl
inc
mov
and
addr16
adc
adc
inc
jg
mov
cmc
mov
xor
sti
add
icebp
insl
sub
inc
xchg
and
xor
cmc
cmp
push
or
dec
push
popf
in
cmp
divl
fs
fwait
mov
mov
mov
loope
aas
jecxz
scas
imul
xchg
xchg
imul
inc
shlb
jo
loop
enter
inc
pop
dec
stos
lahf
loop
pop
test
jno
xor
jae
mov
imul
xchg
pop
cltd
mov
mov
ss
xchg
xor
in
mov
mov
lret
ds
sti
arpl
subb
sub
push
jo
cmp
mov
mov
test
fldenv
mov
ret
add
xchg
xchg
jno
adc
ja
xchg
int
cmp
adc
orl
jmp
inc
jp
in
notb
roll
push
push
xor
ljmp
inc
mov
add
enter
sub
leave
rolb
iret
lcall
cwtl
pop
inc
and
fs
or
shll
pop
testb
inc
pop
dec
jmp
sbbl
mov
cmpsl
divl
mov
pop
out
imul
cmpxchg
outsb
in
push
clc
ret
jo
dec
cs
xor
jbe
or
mov
lret
jl
jp
mov
xchg
sbb
lea
ds
incl
mov
and
fildll
and
int3
dec
aad
outsb
sbb
pop
ds
mov
mov
mov
pop
insb
pop
mov
outsb
fisubrs
test
jns
test
cmp
mov
xlat
outsl
mov
test
cwtl
stos
cld
lock
lret
or
test
lods
jne
shl
fbld
mov
shlb
sbb
xchg
cmp
adc
outsl
mov
leave
dec
test
mov
and
nop
lea
pop
dec
hlt
jle
popf
aam
sbb
jno
inc
inc
imul
cli
jnp
fwait
sti
and
popa
push
outsb
repnz
xchg
jp
dec
dec
dec
in
xlat
cmp
les
in
les
int3
scas
inc
outsl
jle
incb
adc
dec
pop
mov
repz
xchg
cld
pop
xchg
xlat
ret
push
push
dec
in
fcoms
ljmp
ficompl
cmp
lret
int3
ljmp
jbe
jp
adc
in
sub
mov
mov
addr16
bound
fs
push
mov
ds
dec
lods
clc
rol
pop
outsl
ljmp
cwtl
mov
inc
aam
add
mov
and
notl
mov
div
jmp
daa
push
mov
clc
mov
cwtl
push
jmp
leave
cmp
sbb
push
mov
insl
test
mov
clc
insl
int
in
sub
ret
test
jp
bound
and
and
out
stc
pop
cmp
lahf
jbe
mov
data16
cwtl
pushf
call
addr16
aaa
xchg
mov
xchg
lods
sub
insl
wbinvd
nop
psrld
mov
xor
jp
loopne
cmp
orb
jmp
inc
enter
lock
dec
ret
and
sahf
add
and
mov
rorl
adc
movsb
ds
in
push
mov
mov
add
xchg
sub
bound
push
pop
lods
aad
fistps
push
add
add
xchg
das
sbb
shrl
fwait
jnp
inc
dec
push
popf
loop
imul
sbb
lahf
out
xlat
nop
inc
push
insb
push
dec
mov
inc
push
pop
jo
sub
cld
dec
lcall
cmpsl
xchg
mov
js
xchg
sbb
xlat
int
into
into
mov
jbe
inc
jmp
and
lcall
icebp
stos
out
jg
jns
xor
stos
mov
mov
call
repnz
insb
sti
and
pop
xor
mov
fcmovnb
pushf
out
hlt
adc
jge
push
mov
pop
xchg
gs
sbb
sbb
call
mov
nop
lahf
push
xchg
std
xchg
lahf
sti
add
fnstsw
push
aad
movsl
fwait
and
inc
add
int3
dec
lds
sarl
std
fnstcw
pop
popf
sbb
sub
ss
dec
stos
cmpsb
fs
inc
addr16
vpunpckhdq
adc
aad
xor
insl
cmpsl
loope
pop
repnz
jo
movsb
jns
and
pop
hlt
mov
jmp
xchg
dec
out
daa
jl
popf
sbb
mov
mov
out
leave
pop
xchg
gs
xchg
xor
ljmp
imul
mov
xchg
pop
cmp
inc
xchg
aad
mov
and
inc
in
mov
jnp
js
out
pop
addr16
mov
or
ljmp
inc
mov
inc
arpl
cld
loope
imul
xchg
push
push
out
in
std
mov
sub
adc
data16
mov
push
inc
jns
sub
mov
xchg
pop
repz
cmpsb
sbb
jns
add
fstl
mov
xor
jl
scas
int3
xlat
push
popf
lret
xor
pop
xor
xchg
movsb
fcmove
movsb
shrl
or
fisubrl
lds
addr16
cwtl
adc
pop
push
fisttpl
mov
push
sbb
push
iret
pushf
mov
mov
adc
mov
repnz
jge
xor
imul
fcoms
dec
in
shl
lock
js
push
pop
out
xlat
mov
movsl
ds
sub
jbe
fmuls
stos
pop
mov
stc
mov
or
sub
jl
sub
test
mov
lea
pop
jmp
mov
outsb
mov
mov
jl
mov
fwait
push
lcall
les
fwait
dec
mov
xchg
movb
es
lret
mov
arpl
in
mov
test
icebp
test
jne
sbb
out
mov
add
fdivp
push
in
out
xor
pop
xor
adc
int3
or
xchg
pop
outsl
jo
dec
in
test
cmp
or
in
dec
jg
jp
scas
add
je
xchg
in
fnstsw
inc
cmp
faddl
imul
fiaddl
sahf
xchg
mov
mov
sub
scas
ror
enter
gs
sbb
lods
or
outsb
cmc
xchg
mov
aad
sti
cld
inc
xchg
cwtl
mov
sbb
and
std
pop
sub
push
iret
dec
xlat
pop
pop
lret
lret
sbb
je
lods
leave
data16
sbb
lea
ljmp
xorb
int
inc
aam
jecxz
sarb
das
outsl
loop
daa
inc
popf
push
mov
aam
daa
inc
cmp
cld
sahf
sbb
pop
adc
add
xorb
inc
faddp
add
addr16
sbb
fdivrl
sbb
aas
jae
loop
jge
std
adc
lcall
lods
faddl
push
nop
cmp
fisubs
movsb
dec
jge
cltd
sub
roll
fldt
jbe
and
test
inc
lea
mov
dec
dec
dec
arpl
mov
jl
inc
mov
pop
mov
into
mov
ja
aam
sahf
jmp
xchg
adc
insb
gs
and
test
out
aam
push
clc
jns
mov
cmpl
jecxz
mov
cld
mov
dec
sbb
int3
int3
and
xchg
popa
mov
mov
xchg
mov
inc
mov
mov
je
and
js
test
push
push
pushf
pop
jb
ljmp
add
test
and
test
pushf
mov
dec
mov
mov
and
and
lcall
fadds
and
repnz
ljmp
push
bound
mov
add
xchg
js
or
outsb
popa
fcomip
shr
mov
dec
fstps
icebp
and
cmp
jp
or
inc
fidivs
sarl
into
insb
mov
push
insl
pop
push
scas
add
xchg
dec
sahf
xchg
rcr
movsb
in
cmc
jmp
xchg
and
inc
xchg
scas
mov
loop
fnstenv
cmc
out
shlb
repz
jnp
in
xorl
shlb
and
out
sbb
in
mov
lods
out
pushl
or
pusha
sub
ss
call
mov
imul
pop
sub
sub
repz
sarb
xor
sbb
hlt
int3
fiadds
and
dec
or
sbb
dec
xchg
inc
mov
push
xchg
jne
or
jmp
sbb
ss
cs
jecxz
sti
lret
xchg
sub
pop
fistpl
scas
push
stos
ret
mov
js
dec
js
jecxz
and
xlat
daa
inc
ret
cmpsl
std
inc
or
leave
jmp
stos
sub
cmp
mov
test
out
and
push
fidivrl
dec
xchg
cwtl
inc
mov
xchg
dec
push
out
scas
or
push
scas
mov
shll
inc
pop
pusha
lods
mull
mov
push
mov
stc
or
shr
xor
mov
mov
pop
rcrl
inc
and
sub
mov
insl
ljmp
jle
ljmp
adc
inc
or
cmp
sub
cmpsb
mov
clc
pop
test
stos
std
cmp
lea
lret
mov
arpl
sahf
pop
cmp
inc
push
adc
mov
push
jb
mov
lcall
jne
aas
mov
cmp
or
call
cmp
cmp
out
fsubr
jno
adc
pop
aad
sub
mov
inc
sbb
jecxz
xor
cmp
xchg
loopne
inc
or
sti
insl
nop
std
clc
add
lods
mov
or
adc
sub
mov
leave
pop
iret
fildll
cmp
fdivrl
mov
stc
test
mov
and
sbb
add
out
imul
inc
dec
jb
xchg
dec
insb
cmp
xor
sbb
sti
pop
aaa
and
fs
lods
aad
loope
dec
mov
mov
fnstsw
in
setge
ss
pop
outsb
sti
xor
ja
stos
ss
mov
test
xchg
xchg
xchg
cmp
push
mov
out
mov
cmpsl
push
sub
ljmp
sub
roll
aaa
sbb
and
push
loope
iret
jecxz
imul
pop
and
cmovns
mov
pop
stos
or
jg
sub
mov
in
sub
cltd
xlat
mov
ds
test
dec
xor
cmp
fmuls
xchg
aaa
addr16
xor
and
xchg
subl
mov
mov
scas
roll
fcomps
fsubl
mov
loopne
movsl
push
in
xor
aas
cmc
rcll
pop
out
loope
addr16
out
pop
mov
adc
and
xchg
divb
sti
pop
or
and
mov
in
arpl
out
lods
movsb
inc
sub
mov
call
sub
shrl
es
xchg
dec
sub
ss
xor
mov
dec
mov
andl
test
fdivrs
aaa
add
das
mov
jmp
add
int3
jge
aaa
sub
mov
dec
imul
pop
cli
and
movsl
in
icebp
and
in
into
dec
popf
test
adc
sub
es
in
xor
ljmp
popf
jnp
add
inc
vpsubb
jg
xchg
xchg
shrl
es
pop
stc
mov
icebp
cmc
xor
mov
popf
xchg
fisubs
adc
inc
and
push
inc
repz
mov
test
xchg
pusha
and
dec
adc
cwtl
xchg
sbb
push
dec
or
or
fs
sub
mov
inc
aad
or
push
adc
lea
xchg
movsl
mov
sar
lret
cmp
pop
fildll
test
rclb
popa
test
std
dec
lods
push
cmpsb
pop
subb
movsb
mov
sarl
cs
scas
out
push
mov
pop
mov
out
lret
pushf
add
push
push
data16
rcr
push
out
fildl
push
cld
and
jl
dec
shlb
xchg
pop
frndint
push
dec
and
xchg
hlt
test
xor
push
sar
dec
fsub
mov
push
inc
test
je
inc
lea
cmpsb
dec
test
leave
popf
adc
popa
loopne
movsb
adc
mov
xchg
or
out
cs
pop
jg
push
out
push
nop
jns
cmpsb
dec
jp
in
shl
lds
sub
mov
cmp
pop
adcl
leave
imul
in
pop
or
inc
jb
fimull
int
and
test
test
xlat
pop
data16
pop
ja
cltd
lods
daa
arpl
cli
adc
loope
sub
jmp
xchg
and
adc
pop
push
pop
cmp
push
mov
inc
and
xchg
inc
iret
inc
cmp
aas
subb
lods
frstor
push
dec
movsb
cmp
pop
daa
mov
xchg
sbb
test
push
and
push
push
inc
or
movsl
iret
mov
jnp
xchg
loop
in
mov
cmpl
pop
mov
push
mov
imul
stc
fists
xorl
pop
dec
jg
mov
out
std
cld
xchg
mov
ds
jl
out
movsl
popa
push
push
imul
add
mov
push
push
adcl
xor
mov
in
inc
xchg
int
out
repz
push
jmp
imul
repnz
sub
mov
mov
bound
cmc
into
push
sub
shll
filds
and
cmp
xchg
int
and
cmp
xchg
icebp
out
adc
jbe
mov
dec
add
xor
adc
mov
push
cmpsl
and
pop
inc
push
test
xor
inc
jne
pop
cltd
mov
inc
ret
adc
lahf
mov
xchg
scas
repnz
jge
push
lahf
popf
pop
push
inc
jb
pop
cmpb
lcall
in
xlat
stos
cmp
pop
cld
xor
xor
jne
xchg
inc
lahf
out
bound
into
or
mov
xchg
push
lret
or
inc
and
pop
ja
xor
fistps
das
or
xchg
lods
mov
jnp
adc
dec
mov
scas
addl
xor
cmpsl
lret
pop
filds
sbb
test
addr16
scas
repnz
jns
adc
shll
mov
fs
jg
add
leave
outsl
jg
fists
fs
jbe
fucomp
mov
enter
stc
cwtl
push
jno
push
push
jae
idivb
push
mov
and
in
enter
mov
push
insl
pop
xchg
fimull
cltd
cmpsb
out
xor
jmp
fidivrs
testl
iret
push
or
push
add
push
and
cmp
addb
std
pop
mov
mov
lret
mov
adc
mov
inc
icebp
ja
xor
scas
movsl
mov
jnp
add
in
int3
repz
out
push
cmp
mov
adc
stc
inc
insb
fwait
dec
push
ss
out
out
sub
pop
mov
addb
lods
loop
add
std
or
sub
jne
cmc
mov
add
push
cmp
insl
and
sbb
xlat
lock
sbb
mov
es
mov
lcall
test
mov
dec
inc
out
jnp
add
enter
les
pop
or
add
loop
mov
lock
les
push
pop
insl
aaa
xchg
mov
add
in
shrl
xor
or
sbbb
pop
daa
subb
imul
add
mov
addr16
jae
rcll
or
or
push
xor
ja
sub
cwtl
or
int3
cmp
add
adc
cmp
lods
outsl
xchg
fisubs
sub
lock
mov
xchg
test
inc
cmp
shlb
ret
or
movsl
loope
push
test
inc
ret
ss
std
dec
shlb
push
movsl
push
xor
insb
test
mov
push
add
jbe
sub
mov
testl
jmp
pop
mov
test
jge
pop
dec
fdivr
add
dec
orl
cmp
ret
inc
and
inc
jecxz
leave
add
and
lret
cmpsl
dec
mov
andl
out
sbb
cli
sbb
mull
pusha
mov
jmp
mov
xchg
data16
add
sti
mov
push
inc
ret
hlt
jnp
loopne
aad
enter
inc
fbstp
xchg
test
cmp
dec
dec
sub
push
pop
cld
data16
lret
and
fldpi
ljmp
movsb
mov
jl
add
jbe
xchg
insb
stos
pop
imulb
sbb
push
adc
cli
lds
or
ja
test
ljmp
add
repnz
push
es
aam
pop
jl
stos
repnz
int
mov
cld
jbe
mov
pop
jmp
inc
jg
repz
jns
je
out
cld
and
sbb
popa
aas
das
ds
and
out
dec
stc
int
sub
loopne
sub
ffreep
add
sub
mov
push
fdivl
mov
pusha
mov
shl
mov
push
idiv
js
xlat
xchg
ret
add
mov
push
push
call
push
xchg
push
xchg
xchg
jmp
pop
out
sub
daa
push
add
loopne
mov
cmp
push
fldt
lret
in
xchg
dec
xor
jecxz
or
jmp
cmp
ss
stc
lods
lret
xor
loope
adc
fsubs
push
shrb
inc
movsl
and
jecxz
add
shlb
pop
cld
fsubrs
push
xor
and
mov
mov
cwtl
popa
or
shlb
lds
mov
std
cmpsl
lods
mov
sub
sub
es
or
es
push
sbb
in
pop
inc
ret
xchg
push
cmpsl
sub
dec
data16
mov
or
and
mov
cmp
adc
addr16
add
dec
xor
xchg
daa
mov
outsb
xchg
sub
mov
leave
mov
test
pop
mov
enter
mov
or
in
jg
jb
jbe
inc
inc
push
jb
push
push
pop
xor
xchg
pop
jnp
frstor
and
mov
add
insb
push
jbe
loopne
inc
cmp
fsubrl
cltd
aam
cld
xor
cld
test
enter
out
mov
fwait
rol
pusha
in
in
repz
test
push
xchg
out
fdivr
cli
fcomip
cmp
add
adc
out
inc
dec
xchg
int
test
clc
inc
sbb
adc
xor
repz
push
ret
lahf
inc
ret
sub
sbb
mov
rclb
les
lret
dec
inc
push
outsl
adc
xor
in
lret
xchg
jge
jne
and
jne
cmp
inc
pusha
sub
xchg
repz
je
data16
stc
lahf
popa
fdivrl
push
cltd
add
stos
xchg
adc
lret
scas
push
shlb
add
xchg
sbb
shlb
mov
jae
jp
cltd
popa
mov
int3
movsl
and
stos
lcall
or
xchg
pop
lods
pop
fcomip
cmp
sbbl
arpl
mov
pushf
xchg
mov
mov
add
xchg
enter
imul
out
add
or
insb
outsl
xchg
push
and
repnz
mov
les
arpl
jecxz
call
mov
or
outsb
push
push
xor
fists
icebp
test
aas
mov
inc
jnp
clc
mov
pop
int3
loopne
jle
adc
inc
je
adc
xor
xor
jne
loop
out
outsl
fucomi
in
daa
lcall
inc
insb
cwtl
movsb
add
stos
pop
adc
ds
filds
jo
push
andb
cld
jle
sbb
jbe
inc
jp
fidivl
sbb
and
cmp
lods
xchg
loopne
aad
xlat
hlt
push
cmp
insl
cmp
dec
cld
mov
fisubrl
repz
jmp
ljmp
cltd
dec
add
mov
jecxz
mov
mov
pop
sbb
lock
xor
dec
adc
aaa
sbb
pop
inc
cld
push
gs
jle
cli
mov
and
and
test
pop
mov
push
mov
xchg
mov
dec
push
andb
jp
shlb
mov
dec
and
mov
cmpsb
ds
mov
xor
mov
clc
mov
adc
xchg
in
jae
push
jecxz
das
in
add
lret
pusha
addl
imulb
mov
pusha
mov
icebp
cmp
jbe
scas
mov
jno
out
loop
cmpsl
xlat
test
cmpsl
ds
and
jne
pop
stc
or
aad
adc
rclb
call
or
push
cmp
out
cltd
push
pop
scas
fildl
in
sub
dec
cmp
andb
aad
cltd
lahf
mov
and
xchg
xchg
jl
imul
lcall
test
in
scas
mov
cmp
jns
hlt
ret
rcr
pushf
imul
dec
stc
mov
add
imul
mov
rcrl
lahf
jb
xor
xor
pop
fwait
push
mov
or
and
inc
rcrl
aad
mov
stos
cmpsl
xor
dec
ss
push
mov
push
push
fstpl
out
movsb
dec
or
insl
jg
int3
mov
dec
and
add
cmp
std
sub
inc
mov
addl
mov
mov
in
push
mov
dec
xlat
xchg
out
mov
aaa
jbe
int
pop
ret
sub
daa
sub
pop
mov
mov
repnz
mov
mov
in
inc
jl
push
jmp
cmp
aad
popf
or
scas
in
leave
mov
mov
or
jns
add
mov
dec
adc
mov
lcall
loop,pt
scas
pop
es
adc
in
dec
es
mov
xor
loopne
inc
popf
xchg
xor
outsb
lea
fmul
loop
lret
in
lods
dec
pop
adc
sarl
mov
dec
sbb
mov
popf
scas
scas
iret
int
test
lahf
loope
cmpsl
sahf
clc
or
jbe
sub
out
pushf
jp
sbb
cmc
das
sub
sbb
cli
pop
fnstcw
ljmp
jae
dec
loope
ret
popa
les
aas
mov
pop
outsl
sbb
sub
sbb
add
sahf
and
rorb
iret
inc
sbb
jmp
insb
lock
popf
or
mov
jae
jnp
cwtl
pusha
loop
pop
xor
and
sarb
pop
or
jecxz
dec
lcall
fcomps
shlb
push
daa
rorb
adc
mov
pop
cld
in
mov
pop
dec
pop
inc
jne,pn
mov
dec
jle
aas
jb
fstps
fidivrs
sbb
push
nop
xchg
lahf
mov
push
inc
dec
or
lahf
outsl
pop
gs
scas
les
out
cmp
jb
fnsave
or
inc
fmulp
lods
jb
out
adc
pusha
hlt
xchg
icebp
xchg
and
pop
lret
movsb
cs
or
and
mov
or
xchg
loope
adc
push
inc
stc
pop
fucompp
pop
std
push
rorl
push
sbb
mov
mov
and
call
stos
or
mov
aas
stos
xor
mull
imul
scas
sbb
iret
pop
add
lret
jge
je
enter
mov
dec
dec
into
dec
movsb
arpl
int3
cli
jb
sbb
testb
xchg
in
and
insl
rorl
and
call
push
pop
pop
aas
and
int3
sub
je
push
rol
xor
sbb
inc
pop
xor
jns
sbb
mov
out
pop
pop
and
addr16
test
das
inc
inc
jg
scas
ret
or
or
mov
out
jne
fcoms
jns
cmp
xlat
or
xor
lock
jmp
xchg
inc
je
fidivl
dec
or
jne
inc
ljmp
jb
lahf
cmpsl
pop
ds
jmp
mov
dec
xor
jp
sbb
cmp
int3
enter
cltd
les
lcall
xchg
je
pop
push
xchg
mov
push
and
loopne
xchg
xchg
cmp
sub
ss
stos
scas
cmp
push
rol
in
sbb
push
shr
ds
jb
xchg
mov
ret
clc
negl
subl
mov
jecxz
aaa
mov
std
mov
shr
xchg
out
mov
mov
fabs
xchg
and
jmp
inc
dec
popf
loop
mov
mov
daa
int
lods
in
psrad
rcr
cld
pop
outsb
push
icebp
enter
add
sar
sub
and
pop
lret
add
and
dec
push
lret
lcall
add
subb
hlt
or
push
sti
push
or
movb
hlt
lods
inc
cmpsb
mov
xchg
ja
push
push
pushf
push
pop
push
pop
jb
jno
arpl
and
hlt
sahf
cwtl
mov
mov
push
inc
sub
in
mov
leave
pop
push
aam
sbb
xor
add
adc
shrl
js
mov
sub
jp
ret
xchg
adc
jmp
out
mov
sbb
outsb
xor
or
roll
pop
mov
jmp
xchg
add
shrl
lock
cmp
cmp
sbb
pop
jne
or
or
inc
mov
lret
out
pusha
lods
jg
dec
fcoml
xor
inc
mov
add
dec
lock
sti
ret
add
add
icebp
sub
inc
cmp
push
mov
ror
addb
xchg
das
mov
shlb
fldt
cwtl
repnz
add
jns
cmp
pop
mov
mov
and
dec
mov
adc
pop
push
and
ljmp
jbe
pop
push
fisttps
in
dec
push
enterw
jno
orb
ret
add
mov
cmp
daa
mov
ljmp
xor
add
testb
fildll
in
adc
sub
xchg
mov
shl
es
jp
fcmove
lock
mov
jns
cltd
pop
sahf
mov
pop
stc
inc
loope
jb
loop
mov
and
test
pop
xchg
dec
mov
adc
xlat
cs
jl
cmp
mov
aas
movsl
pusha
sti
sti
fwait
push
dec
mov
mov
mov
sbb
push
dec
mov
and
dec
mov
shrl
push
bound
movsb
add
push
rorl
pop
pop
sub
inc
or
add
out
mov
or
inc
push
jl
in
or
sub
repz
mov
divb
xor
dec
test
add
int
mov
pop
push
adc
int
shl
inc
out
inc
xchg
movsb
dec
fimull
adc
addb
xchg
aad
push
mov
ficoms
call
cs
sub
pop
inc
testl
mov
mov
push
inc
sti
loopne
popa
jle
ret
mov
popf
add
push
jbe
and
aaa
cli
fistps
adc
shl
xchg
jle
mov
lea
xor
push
jae
dec
xchg
out
pushf
or
test
mov
and
xor
mov
cmp
vpmulhuw
call
movsb
mov
pop
fs
cmpsb
mov
cmp
mov
xor
mov
das
test
jp
subl
imul
popf
test
sahf
sbb
out
sbb
cmp
out
movsl
dec
fisttpll
hlt
shlb
pop
pop
ljmp
xor
aas
in
jmp
cld
sub
adc
push
jno
loope
inc
imul
inc
mov
leave
cmp
cld
sbb
xchg
andb
rcrb
sbb
mov
pop
in
add
ret
mov
inc
push
in
or
xor
data16
decl
push
mov
loope
xchg
mov
push
mov
sub
lock
mov
in
jnp
mov
sbb
jb
or
mov
xlat
push
sti
dec
ss
push
or
push
lcall
xchg
in
in
inc
fimull
or
cmpsb
out
into
dec
sub
jge
shrl
pop
mov
sub
push
test
mov
fnsave
arpl
xchg
pop
std
data16
push
pop
cmp
jp
dec
push
cwtl
dec
in
mov
inc
lea
mov
fst
mov
sbb
mov
pop
cs
jle
mov
jge
or
xchg
xor
xchg
fdivl
pop
mov
sbb
int3
mov
daa
daa
inc
sub
xchg
rorb
xchg
mov
lahf
mov
or
cmp
je
mov
into
std
lds
imul
pushl
push
in
pop
inc
int3
nop
xor
mov
xchg
lret
mov
lret
repnz
sub
dec
mov
stc
pop
xchg
push
int3
sti
cmc
xor
sub
sarl
sarl
dec
dec
rcrl
pop
shll
mov
hlt
sbb
cmpl
pop
lahf
decb
mov
popf
sahf
lods
inc
dec
inc
sub
stc
dec
pop
arpl
dec
push
out
jmp
jb
fisttps
and
mov
aam
pop
pop
push
and
adc
sbb
leave
jmp
xor
sub
aaa
sub
out
adc
jbe
mov
xchg
ficompl
mov
scas
push
in
out
cmp
dec
test
xchg
mov
cmp
jne
pop
js
push
lods
pop
or
xchg
rcrb
insb
sti
xchg
pop
in
hlt
rorl
mov
pop
daa
pop
add
mov
mov
das
das
sahf
loopne
stos
pusha
aad
loope
xor
and
mov
test
paddsw
mov
dec
dec
push
and
push
aas
mov
mov
sub
mov
rolb
push
xor
or
mov
pop
sub
lock
jge
mov
xorb
lods
push
aas
jnp
popf
andl
cmp
xor
push
loope
sub
sbb
gs
in
pop
hlt
inc
xchg
int
stos
inc
lret
popa
mov
add
pop
in
push
dec
cwtl
sbb
add
jb
and
push
inc
ss
mov
std
mov
mov
pop
imull
idiv
dec
add
pusha
fdivrl
xor
call
aaa
and
test
xchg
divl
call
lahf
fldenv
mov
push
idivb
dec
xor
sti
jg
push
add
mul
mov
incb
add
clc
pop
pop
jmp
push
call
xchg
mov
push
icebp
pop
push
jp
xchg
pop
repz
fwait
push
cmpsl
aaa
xchg
fsubl
negl
xor
pop
clc
pop
hlt
inc
sbbl
and
lahf
cs
ljmp
sbb
gs
xchg
add
ljmp
jno
fisubs
pop
cmpsl
rcrb
mov
popf
orl
adc
cmp
test
jle
test
fldl
jge
mov
fcmovnbe
repnz
ja
sbb
mov
xor
mov
mov
dec
cmc
pop
movsl
or
xor
jmp
pop
daa
icebp
sub
in
sub
orl
adc
mov
dec
jo
je
jmp
inc
dec
lret
sub
pop
aam
mov
bnd
test
out
and
jbe
jl
adcb
int3
add
popf
test
aas
imul
push
stos
or
inc
adc
loop
cmp
sbb
mov
cli
or
pop
sub
dec
mov
sub
hlt
nop
jbe
mov
jnp
add
rcll
adc
aam
lret
push
sti
push
cld
inc
or
push
xor
movsb
xchg
cwtl
cmp
dec
sub
cmp
sahf
scas
and
iret
dec
push
sbb
mov
sahf
addr16
insl
sbb
cld
jmp
xchg
cltd
outsl
ret
ret
push
movsb
jmp
xor
sbb
lret
in
decl
jae
push
inc
pop
ds
xchg
sarl
jbe
jnp
mov
jmp
pop
mov
aam
cltd
xchg
sbb
add
mov
pop
xor
cmp
push
mov
jmp
sbb
pop
adc
push
enter
hlt
xlat
jecxz
mov
inc
movsl
sub
pop
jnp
lods
push
inc
mov
loopne
fnstsw
mov
sti
push
jp
add
mov
iret
push
mov
push
add
data16
push
mov
adc
nop
dec
mov
frstor
xor
pop
mov
inc
int
popf
pop
mov
call
inc
aas
jne
icebp
dec
out
adc
ret
stos
pop
sbb
jnp
xor
cmp
pop
cmpsl
fsubrl
fwait
je
adc
fs
xchg
inc
ret
ss
mov
sar
xchg
mov
scas
icebp
sub
xchg
push
shll
sahf
sbb
sarl
pusha
jae
adc
mov
decl
pushf
push
add
insl
jmp
out
mov
sbb
cli
xchg
fdiv
lods
adc
adc
inc
sbb
call
xchg
daa
and
mov
movsb
pop
icebp
subb
cmp
sub
adc
outsl
xor
add
lcall
mov
je
push
pop
enter
jecxz
jl
sbb
int
rorb
movsl
ret
mov
or
sar
pop
ljmp
fwait
jnp
mov
lods
invd
test
imul
enter
mov
pushf
push
mov
mov
or
bound
daa
scas
push
jne
cmpsl
adc
pop
pop
out
imul
cld
out
mov
xchg
shl
sbb
mov
sbb
mov
out
enter
rcll
pop
inc
xor
fucomp
ret
xorl
xorb
out
sub
in
in
ret
pushf
inc
std
jmp
xor
stos
add
shr
es
jge
sub
mov
adc
mov
add
jmp
sbb
inc
or
inc
jne
or
mov
xchg
xchg
shrb
xchg
out
sub
addr16
icebp
lcall
cmp
xchg
out
jns
dec
push
push
mov
stc
dec
out
fcomps
sbb
xor
cld
ret
inc
xor
jp
nop
inc
pushf
sub
jle
inc
jmp
lods
mov
leave
out
stc
mov
repz
mov
and
leave
mov
test
inc
adc
in
sbb
mov
das
sbb
and
mov
int3
and
mov
dec
sbb
cltd
push
mov
shrb
nop
cltd
fstpl
mov
add
mov
mov
stos
lock
dec
dec
mov
stos
shll
push
addb
rorl
inc
pop
xchg
pushf
pop
sub
jecxz
popf
insb
sti
push
aas
leave
and
push
push
and
pop
test
xor
stc
mov
xchg
mov
cmpb
loope
fcmovnbe
dec
repnz
loopne
mov
push
jg
int
test
outsb
iret
aas
mov
or
insl
and
add
push
xor
fimuls
aaa
cmp
or
xor
jmp
mov
outsb
insb
jmp
inc
ror
add
pop
sbb
testl
pop
sub
push
and
ret
stos
in
mov
cltd
inc
int
inc
fstl
jg
adc
test
out
nop
sbbb
mov
ja
ficoms
inc
or
jno
dec
jmp
inc
mov
jo
mov
add
inc
mov
popf
add
or
aad
jle
mov
daa
mov
mov
add
daa
or
call
jae
les
mov
xchg
stos
xchg
nop
movsb
ret
int
dec
movsb
ds
arpl
adc
mov
xchg
popa
arpl
lret
xor
mov
cmc
dec
lods
jle
in
rclb
pop
in
test
pop
mov
push
mov
mov
pusha
fildl
pop
jle
sbb
pop
pop
mov
mov
cli
mov
mov
divl
insl
imulb
pop
sbbb
pop
xchg
int3
cmc
out
mov
cwtl
inc
add
inc
jo
jno
and
cs
xchg
jecxz
xchg
aam
or
cmpb
cmp
dec
adc
into
inc
or
push
mov
das
jne
decb
mov
popf
test
sub
cmp
push
adc
fs
add
jl
fcmovnu
shl
pop
out
jg
hlt
sbb
xor
add
cwtl
insb
cmpsl
je
dec
nop
lock
or
mov
xor
ds
arpl
jo
fidivrl
not
enter
cmpsl
bound
bound
mov
pushf
dec
sub
in
inc
inc
in
mov
mov
bound
xchg
add
inc
jecxz
mov
stos
cmp
pusha
adcb
and
lret
clc
das
stos
fadds
xchg
repnz
in
sarb
stos
pop
hlt
mov
popf
xor
push
pop
hlt
inc
dec
jge
mov
test
sub
fmull
dec
ror
push
mov
jb
fsubrl
call
fwait
lret
xor
nop
notl
push
jl
std
fsubp
pop
add
test
ret
mov
pop
or
shll
addr16
lods
cmp
popf
or
imul
daa
int
pop
dec
xchg
dec
ucomiss
stc
inc
cmpsb
mov
les
mov
leave
sti
pop
ror
scas
and
loopne
jne
fcos
cmp
jle
cwtl
out
cmp
dec
push
andb
nopl
insb
inc
cmp
xorl
and
in
lret
mov
in
fstps
and
adc
ret
jmp
mov
leave
test
add
repnz
lret
pop
pop
jae
ret
mov
stc
movsb
mov
arpl
in
adcb
xor
repnz
pop
mov
sub
stc
add
dec
mov
sub
int3
repz
je
iret
insb
sbb
push
dec
int
or
orb
int
sti
stc
out
mov
jmp
jno
xor
jl
mov
negb
jb
int3
inc
jmp
cmp
inc
fists
dec
pop
xchg
inc
out
in
mov
hlt
cld
and
inc
mov
adc
or
mov
daa
inc
andb
jecxz
push
call
rcll
dec
mov
dec
adc
push
xor
aaa
dec
add
out
sbb
push
in
sbb
out
loope
lods
sub
or
cmp
sub
inc
adc
sahf
mov
ss
adc
xchg
mov
adc
adc
and
insb
loope
push
jb
xor
cld
jg
mov
xor
push
pop
sub
clc
jae
add
nop
mov
inc
insb
cmc
aam
test
imul
aam
mov
js
cmpsl
in
stc
xor
cmp
test
mov
push
mov
into
pop
imul
int
sbb
dec
sub
inc
repz
enter
inc
lock
sbb
xchg
stos
fsubrs
aam
imul
cmc
cmpb
mov
ficompl
mov
sub
adc
pop
mov
xor
es
dec
or
addr16
and
fsubrl
pop
push
jae
sub
adc
lahf
or
xor
bound
or
cmp
add
les
xchg
mov
loop
in
jo
ds
push
bound
dec
sbb
lock
cmp
call
xlat
xchg
ss
loopne
jmp
sbb
mov
inc
mov
mov
mov
or
push
pop
pop
je
add
sbb
xor
jp
pop
pushf
leave
pop
push
pop
fmull
sub
adc
xchg
sub
jge
lock
xchg
jg
xchg
jne
clc
push
cs
jo
sbb
push
cs
out
xchg
bound
out
xchg
mov
mov
arpl
pusha
iret
cld
cmp
and
daa
negb
add
mov
jo
daa
orl
mov
inc
stos
jmp
aaa
shrb
cmpsb
jns
cmp
imul
mov
dec
xchg
hlt
fwait
icebp
icebp
cmc
lods
sbb
cs
sbb
les
pop
lret
xor
mov
call
push
std
pcmpgtw
inc
add
rcll
std
mov
mov
xor
push
push
push
add
jmp
push
pop
add
mov
shrl
int
xchg
arpl
xor
out
popl
dec
mov
sub
or
pop
cld
inc
mov
fcmovnb
mov
dec
mov
int
pop
ret
sarl
in
inc
loope
push
and
jnp
adc
jb
cwtl
popa
adc
daa
xor
inc
pusha
es
inc
jns
lods
push
test
scas
push
xor
jl
cmp
jge
cmp
ret
fmull
lds
cmpsb
scas
xorb
inc
push
lock
xor
cmp
jno
inc
pushl
fisubrl
mov
cmp
and
push
sahf
cmp
pusha
pusha
inc
addr16
and
add
sub
push
add
repnz
sbb
cli
xor
and
add
mov
fcompl
jnp
sub
jne
mov
outsl
lea
pop
mov
lods
mov
sub
in
in
adc
jae
cmp
mov
js
or
mov
jbe
dec
jle
cmc
mov
adc
sbb
jnp
cmp
mov
mov
push
sahf
stc
and
mov
xor
adc
mov
fmull
out
and
mov
push
or
xchg
pop
inc
push
das
cmp
xor
add
ret
mov
mov
push
clc
std
roll
push
mov
push
stos
sub
inc
test
push
jno
std
mov
divb
push
or
outsl
push
dec
pusha
xor
dec
push
test
xchg
orb
cld
insb
inc
popf
out
out
sarl
jno
das
or
dec
jae
mov
mov
rorl
inc
xchg
daa
fs
lea
pop
xlat
addr16
fisttps
jb
cmp
jle
sub
push
sub
in
xchg
int3
adc
jle
enter
push
push
frstor
xor
xor
mov
stc
in
sub
fcompl
jbe
orb
xchg
mov
out
test
hlt
adc
stos
gs
pushf
imul
xor
cmpsb
lahf
jnp
mov
jp
inc
loop
jmp
cmp
xchg
push
clc
mov
cli
and
in
cld
out
dec
lock
adc
cmp
adc
loopne
fcompl
add
call
pop
mov
rorl
sahf
pop
call
or
xorb
in
outsb
test
xor
stos
out
cmp
sub
sbb
lret
stos
xchg
xchg
das
mov
out
mov
mov
and
jbe
in
leave
repnz
int
sub
pop
inc
popf
or
lods
lea
rorl
jb
rorl
aam
mov
lret
sahf
mov
std
fisubs
movsl
mov
test
roll
das
mov
add
jnp
aaa
mov
scas
xor
mov
shr
ljmp
mov
cmp
inc
jo
pop
idivl
adc
lcall
lea
icebp
inc
mov
push
fs
mov
push
out
in
cmp
push
jg
dec
and
loope
les
ret
psubw
or
ret
dec
xor
mov
ds
test
xor
inc
adc
mov
movsl
fidivs
fiadds
andl
sbb
pop
push
sub
mov
pop
lea
hlt
pop
in
addl
sbb
inc
pop
jge
mov
jg
cmpsl
movsb
test
iret
jecxz
xchg
sub
mov
outsb
daa
push
in
nop
push
repnz
fsts
out
lds
dec
or
jp
pop
push
enter
mov
pop
push
cwtl
cld
in
sbb
push
cmpsb
stos
sub
jno
xchg
xor
stos
inc
rcrb
fwait
sbb
fwait
test
out
test
cmp
mov
jp
insl
lods
push
inc
add
sbb
ss
addr16
xlat
mov
lock
adc
aam
mov
cmpl
pop
cmp
xlat
ret
push
stos
cmpl
pop
fisttpl
fistps
add
add
in
push
pop
jne
jecxz
inc
sbb
popf
mov
mov
push
pop
xchg
je
mov
jne
into
mov
inc
xchg
lods
arpl
cli
into
push
mov
lea
mov
xchg
xchg
sub
loopne
mov
mov
cltd
in
lahf
daa
fidivl
cs
ret
xchg
add
lcall
inc
movsb
in
mov
mov
mov
cmc
mov
insb
cltd
stos
gs
clc
xor
mov
es
xor
sbb
call
push
xchg
fnsave
cmpsl
jno
cmpsb
mov
fcompl
cld
pop
xchg
mov
mov
add
fldl
fidivs
dec
pop
xchg
ja
clc
fdivrp
loope
mov
cmp
pop
mov
mov
or
imul
loope
dec
mov
cli
sbb
cs
and
orb
inc
push
jge
sub
push
sub
pop
pop
sti
fwait
movsl
call
idiv
inc
fnstenv
jae
or
dec
test
fsts
and
punpckhbw
cld
jecxz
call
or
dec
test
fsubrs
mov
imul
jnp
or
and
add
adc
test
lods
daa
into
outsl
pushf
push
pop
stos
idiv
xor
ja
insl
cld
dec
or
jae
addr16
sarb
xchg
enter
push
dec
mov
mov
push
scas
sub
aad
bswap
inc
js
push
in
xor
out
das
cmovs
fsub
cwtl
test
adc
inc
and
imul
test
dec
arpl
and
cmp
mov
and
and
mov
add
in
fsub
push
dec
lret
sbb
imul
movsl
mov
lock
ljmp
mov
pop
test
push
pop
movsb
comiss
adc
imul
insl
sub
test
int
out
pop
mov
adc
ss
dec
pop
cmp
and
mov
and
int3
mov
inc
ficompl
outsl
bound
icebp
mov
lock
inc
xchg
lahf
cmc
int
pop
mov
xchg
out
enter
lds
ret
push
cmp
js
adc
or
push
jle
cmc
rolb
or
cmp
fldcw
xor
mov
inc
jbe
lcall
xchg
dec
inc
outsl
dec
scas
aaa
js
scas
jmp
fcomp
sbb
push
and
in
jbe
rclb
cld
xorb
adc
adc
or
or
ljmp
aas
jo
and
inc
xlat
xor
addl
push
mov
mov
adc
negb
arpl
jl
in
inc
mov
xor
push
xchg
adcl
inc
ret
lds
roll
hlt
sbb
stc
test
mov
fisubrs
dec
pop
jb
lods
aad
sub
dec
add
addr16
pop
and
sub
or
js
cmpsb
stos
jecxz
mov
mov
mov
lret
sub
or
lret
adc
sub
lock
test
sbb
or
cmpsb
lods
aad
test
cmc
loopne
shll
rolb
sbb
push
push
sub
mov
dec
and
push
xor
loop
loop
movsb
out
faddl
out
movb
out
add
aam
outsb
lcall
inc
imul
hlt
cmp
aad
sub
leave
jecxz
repnz
cmpsl
xchg
or
sti
movsl
iret
ss
call
daa
cs
sub
or
ds
cmp
ja
std
dec
adc
push
inc
adc
lea
shll
sub
call
cmp
or
mov
int3
or
out
out
push
out
add
aaa
cmp
icebp
mov
sbb
mov
add
xchg
xchg
out
jno
push
sub
testb
popl
pop
mov
cwtl
test
xchg
mov
pop
jno
mov
dec
sahf
xlat
xchg
jle
add
pushf
and
cli
adcb
arpl
sbb
sub
and
add
pop
cmp
in
jbe
jne
aaa
xor
pop
lret
repz
divl
lahf
pop
adc
push
and
push
mov
mov
inc
loop
gs
push
fisubs
sbb
pop
dec
mov
gs
stos
fsubrl
daa
sbb
and
jnp
xor
cltd
enter
jne
inc
jmp
pop
inc
nop
jb
pop
punpcklwd
aad
movsl
stos
cmp
or
push
mov
test
mov
or
fdiv
repnz
add
lods
mov
loop
pop
add
sub
pushf
sub
mov
in
pop
cmpsl
ss
sbb
in
dec
mov
lret
jle
ret
repz
je
dec
flds
jae
je
popf
mov
jne
in
sub
out
cmp
icebp
fbld
jg
cmc
lcall
or
cmp
push
nop
xlat
cld
inc
mov
inc
hlt
fidivrs
andl
fwait
test
out
mov
les
inc
sbb
loopne
xlat
inc
addl
inc
popf
subl
lods
pop
push
aas
pop
dec
leave
in
fists
iret
xor
int3
shlb
mov
sub
scas
mov
imul
cmp
fldenv
mov
cmp
xchg
lock
push
fadd
cmp
lret
pushf
mov
pop
aaa
outsl
popa
nop
cmp
mov
sbb
adc
xchg
or
cmp
cmp
pop
and
xor
mov
xchg
jp
xchg
sbb
negb
and
insl
mov
mov
inc
sub
pop
pop
pop
push
push
out
lock
inc
sti
xchg
push
call
jae
mov
xchg
cs
std
mov
out
add
mov
add
mov
push
mov
ds
jae
mov
insb
xchg
ja
shll
or
or
sbb
inc
rcll
pop
add
dec
xchg
std
fimuls
icebp
add
mov
add
xor
cmpl
sahf
jl
or
ja
mov
pop
mov
and
jo
mov
inc
mov
sub
xchg
in
mov
shlb
aam
lret
mov
xor
repnz
sub
ret
outsb
sarb
roll
dec
stos
jl
mov
ficomps
cltd
mov
in
and
pushf
xchg
loopne
fcompl
in
call
outsl
shrb
shl
jle
sbb
dec
addb
dec
fstpl
mov
js
repz
mov
push
sahf
mov
dec
fisubrl
aad
loopne
sub
xor
insl
and
pop
jbe
adc
hlt
es
outsl
mov
sub
lods
mov
out
xor
push
icebp
jg
xlat
hlt
scas
in
adc
pop
in
and
jp
xor
dec
jne
cmp
pusha
ret
adcb
fsubrl
sti
pop
fcoml
push
cs
push
lret
outsb
sbb
push
testl
inc
insl
and
mov
sub
xchg
fdivl
lret
in
jbe
and
jb
in
pop
ljmp
jb
outsb
push
fstps
movsl
dec
bound
outsl
pop
adc
rcll
sahf
outsl
mov
ret
fwait
adc
in
and
sbb
shl
xchg
sub
stos
pop
js
or
das
xor
mov
je
imul
test
and
pusha
add
jle
aam
mov
mov
into
cli
sub
xchg
lret
push
or
jno
adc
dec
push
sub
xchg
mov
mov
push
sub
loope
repnz
lds
add
lods
aam
jg
sahf
xor
fsub
popf
pop
testb
leave
xor
and
add
imul
push
cltd
sti
sbb
mov
xor
sahf
icebp
stos
mov
push
shl
xchg
in
stos
imul
dec
sub
sbbb
mov
cld
cmpsb
sahf
test
cmc
and
sti
pusha
insl
mov
in
pop
in
fcmovbe
add
jmp
cmpsb
fistpll
mov
fwait
mov
das
cld
imul
cmpsb
adc
or
jbe
aam
fmull
test
mov
shrl
mov
into
inc
les
lods
lods
mov
pop
push
jge
dec
sbb
add
lods
push
inc
sub
dec
mov
popa
add
mov
dec
dec
xchg
fcomps
mov
stos
test
jmp
addb
decl
outsl
dec
jnp
nop
mov
in
mov
fisttps
stos
jmp
ret
mov
in
sbbl
loopne
jg
add
scas
adc
sub
out
mov
xor
mov
mov
mov
mov
leave
into
xlat
fistpl
sbb
adc
lret
pop
scas
mov
adc
xchg
push
sti
and
and
test
mov
cmp
data16
ss
ffree
inc
pop
inc
movsl
fisttpll
and
out
or
inc
jge
bound
fdivrl
ret
jl
xlat
scas
xor
pop
mov
push
cmp
cmp
pop
sub
xchg
cwtl
pop
xchg
and
adc
mov
aam
call
pop
push
push
inc
loope
popf
je
adc
push
adc
and
push
push
ja
ljmp
in
push
pushf
ja
jb
adc
or
push
xor
jle
dec
xor
sti
lcall
fwait
ret
cmp
mov
shl
or
push
mov
dec
insb
sbb
sarb
loopne
jno
pop
dec
leave
push
mov
loop
addr16
pop
int3
push
sub
push
xchg
test
xor
into
dec
jmp
scas
xchg
add
int3
or
popa
pop
mov
icebp
lea
insl
fwait
testb
nop
fiadds
sub
jo
rorb
out
cwtl
jae
xchg
pop
fiadds
cmpsl
xor
cmp
bt
jle
dec
dec
or
addl
out
test
loop
xchg
std
xor
pop
std
jae
ljmp
insl
pushf
mov
addr16
mov
and
inc
and
outsl
testl
bound
out
and
int
or
leave
and
adc
jbe
xchg
fcoms
xchg
repnz
adc
pop
call
pop
in
xor
xchg
cmp
jb
in
or
loope
add
subb
or
push
icebp
imul
call
and
test
push
push
mov
lahf
je
mov
pop
andl
and
ja
hlt
lea
enter
adc
mov
and
jle
arpl
lea
pop
sub
push
stos
addl
bound
cmp
nop
lds
ret
xor
xchg
cwtl
adc
std
imul
rcrb
out
inc
push
xchg
push
idivl
loop
cmpl
cltd
popa
ja
popf
cltd
lods
ret
sarl
sub
jo
into
sub
lahf
loop
sbb
cmp
leave
lods
xchg
test
mov
ret
mov
aaa
js
jno
xor
sub
xchg
or
mov
mov
dec
xchg
lods
push
mov
daa
out
mov
push
mov
mov
pop
and
or
and
in
int
insl
add
pop
in
lds
jbe
jecxz
aas
addr16
daa
daa
in
orl
xorl
dec
fdivl
cmp
cltd
or
sub
sbb
pop
xor
mov
imul
fucom
and
inc
inc
popa
orl
sub
sbb
cmp
arpl
out
mov
mov
mov
cltd
stc
mov
rol
mov
mov
int3
addr16
push
idivl
adc
dec
mov
popf
jmp
orb
mov
add
add
fisubrs
jo
dec
cs
xchg
push
js
incb
jl
out
pop
adcl
adc
ljmp
inc
mov
enter
stos
push
out
call
cmp
mov
add
sbb
scas
pop
decb
jge
imul
cmpsl
jo
jle
cmp
out
xchg
dec
sub
sub
push
outsb
in
lret
sbb
lds
sbb
push
push
es
push
cmp
repz
les
jns
jmp
and
sbb
xchg
aaa
and
repnz
scas
push
test
sub
push
les
mov
lcall
pop
fwait
inc
jmp
cmpb
roll
mov
xchg
lds
mov
push
add
cmp
dec
xchg
shll
sub
shr
dec
dec
adc
jle
lods
lock
push
xchg
cmp
data16
ss
and
xchg
cmp
sbb
mov
xlat
loop
stos
mov
std
mov
add
lods
inc
mov
mov
dec
call
jmp
dec
mov
adc
xor
cmp
loop
jmp
cmp
jg
xchg
and
iret
and
xor
add
and
aam
out
cmp
fwait
dec
dec
sub
xchg
mov
cmovnp
cmp
mov
ret
add
xchg
pop
mov
mov
mov
pop
and
cli
or
data16
leave
pushf
adc
stc
js
and
and
lahf
jbe
cmp
sbb
mov
lret
repz
cs
add
daa
int3
jle
cmp
ret
xchg
sbb
pop
stos
in
imulb
pop
adc
fdivr
mov
aas
jo
add
shll
add
cli
pop
inc
arpl
cmp
xorb
test
jmp
insb
shlb
pop
cmpsb
shl
push
pop
iret
dec
cmp
inc
add
jl
repnz
adc
adc
sbb
add
mov
sub
push
stos
sub
mov
stos
jl
in
or
xchg
cmpb
add
js
decb
xchg
lret
push
xlat
aad
test
rorl
daa
mov
and
jle
sahf
and
in
stc
jge
push
pop
aas
jl
add
ja
test
adc
inc
mov
mov
dec
push
jecxz
cmp
add
icebp
roll
jbe
adc
outsl
popf
mov
add
das
push
pop
pop
and
in
test
and
or
jbe
xor
call
lods
in
mov
lahf
dec
cmp
lock
imul
sahf
mov
repz
negl
hlt
out
fdivs
in
test
or
jg
lds
ret
stos
out
sub
lds
pusha
loopne
subl
cmp
lahf
sbbb
push
fdivs
icebp
xlat
je
mov
push
and
add
dec
movsb
dec
inc
mov
mov
and
lret
out
push
jae
xchg
cmp
xlat
out
jge
and
mov
sub
lahf
mov
das
icebp
jmp
cli
pop
push
push
inc
adc
orl
mov
pop
and
pushf
inc
sbb
and
add
xchg
pop
sar
lcall
mov
dec
fidivrl
jge
pop
mov
mov
cmp
movsl
jle
add
push
roll
jnp
lods
or
fimuls
notl
push
ret
xchg
jb
push
and
lea
orl
enter
sub
aaa
mov
mov
or
push
fstpt
adc
pop
cmp
sahf
jae
out
jo
inc
or
das
inc
insl
mov
xor
jp
daa
fmuls
int3
mov
mov
xor
xchg
shll
daa
sbb
xor
fsubrp
movsb
andl
fdivs
pop
scas
adc
mov
adc
inc
dec
jae
je
cwtl
mov
xchg
int
stos
js
pop
pop
iret
adc
fwait
in
and
pushf
mov
push
xlat
add
in
ret
mov
adc
sub
aad
jle
inc
fidivs
jecxz
dec
cmp
repnz
rorl
lock
add
rcrl
xchg
das
test
notb
mov
mov
inc
stos
mov
mov
fwait
dec
fisttps
pop
lret
pop
dec
jbe
mov
mov
rol
push
mulb
repz
sbb
in
popa
sub
add
pop
and
repnz
pop
dec
dec
jmp
scas
sub
and
sub
lods
iret
popa
iret
stos
adc
pusha
data16
push
js
cli
lea
in
xchg
sbb
pusha
roll
dec
push
add
push
hlt
and
pop
aad
lods
mov
jmp
enter
sub
addr16
jbe
pop
jns
xchg
cmpsl
mov
jae
cmp
aas
hlt
pop
add
movsb
xor
popf
scas
cltd
mov
mov
cmpl
or
dec
push
lods
mov
pop
shlb
jno
sub
lock
cld
xorb
or
arpl
popa
outsl
adc
lcall
xchg
popa
scas
adcl
stos
cmp
icebp
fnstcw
leave
in
jo
std
in
repnz
addl
stos
or
jp
sub
mov
js
insb
sub
xchg
jecxz
adc
lds
mov
pop
mov
push
rclb
mov
stos
mov
adcb
fcompl
ja
movsl
mov
jl
cmp
sbb
push
inc
sbb
ljmp
repnz
or
fs
iret
sub
sub
jne
push
inc
gs
movsb
sub
outsl
mull
push
pop
fwait
mov
mov
or
pop
rclb
add
adc
cmp
and
je
pop
add
push
sub
push
data16
outsl
shlb
aas
les
mov
icebp
jecxz
inc
bound
sbb
add
inc
pop
int3
mov
mov
outsl
sub
js
pop
outsl
repnz
mov
aad
mov
cmp
or
shlb
xchg
dec
aaa
xchg
insb
sbb
ds
mov
adc
jb
ljmp
js
pop
xor
addr16
lods
push
jno
jp
stos
dec
icebp
dec
mov
test
in
cmp
fnstenv
lods
or
orb
gs
or
mov
or
cld
sub
fadd
icebp
dec
imul
mov
xor
loop
sahf
pop
es
repnz
push
xchg
test
cwtl
test
iret
jnp
adc
mov
add
mov
int
out
push
jno
ds
aas
and
imul
out
and
adc
ss
xchg
mov
mov
aaa
or
test
xchg
cmc
lahf
add
and
lods
sbb
fistpl
pop
xchg
setge
mov
and
into
cmp
push
into
icebp
cmp
sbb
hlt
sbbl
ret
aam
mov
sti
sub
or
loopne
mov
or
or
mov
idivb
mov
dec
adcl
jl
leave
xor
cmp
cmp
in
mov
stos
push
mov
and
jg
inc
pop
shlb
test
lds
push
jge
cmp
pop
loope
jle
or
push
lods
pop
inc
mov
bound
sub
ret
mov
sbbb
imul
data16
nop
mov
push
lret
mov
pusha
push
rorb
imul
stos
test
sbb
xchg
pusha
ds
cli
mov
or
int
roll
pop
dec
les
xor
sbb
cmp
mov
sbb
pop
nop
push
add
cmp
out
xchg
cmpsl
inc
adc
sbb
ret
pop
jno
lret
aam
push
inc
call
stc
cmp
adc
xor
push
or
dec
cmp
sbb
shlb
inc
testl
dec
pusha
divl
sub
mov
jae
or
cltd
dec
mov
shrb
mov
pop
loope
sub
push
and
cmp
cmc
adc
jne
or
mov
inc
movb
test
mov
out
testl
adc
mov
mov
add
push
iret
jecxz
xchg
or
jns
adc
ret
mov
sahf
ss
cmp
push
inc
shrb
mov
mov
cld
jo
hlt
sbb
inc
or
shlb
shl
sbb
cmc
aam
xor
push
int3
push
jno
inc
mov
stos
xlat
aad
push
gs
mov
sbb
cmp
lds
inc
sub
jecxz
imul
cmpsb
jmp
int
gs
repz
or
or
mov
dec
jmp
pop
mov
mov
iret
push
xchg
inc
cli
dec
cs
fadds
cmc
xor
pop
push
je
pop
xor
add
push
jbe
pop
xorl
and
outsl
mov
inc
jae
out
mov
mov
mov
lahf
jmp
inc
jno
and
in
in
xchg
aas
xorb
fists
int3
xchg
or
mov
filds
mov
orb
out
mov
test
add
push
fwait
ja
loop
inc
nop
cmp
or
jmp
jp
js
rcr
scas
cld
fs
movsl
popf
push
jge
insl
sbb
out
xchg
jae
pop
imulb
dec
imulb
cmp
and
sub
xor
jno
ds
mov
loop
cmp
pop
es
add
push
jno
stos
xchg
jb
mov
jecxz
pop
mov
mov
dec
rol
ljmp
mov
lods
and
add
mov
pop
fnstenv
clc
jne
xor
xor
inc
jl
mov
adc
pushf
or
xlat
cmp
in
or
cli
fsubs
add
or
loopne
push
cli
pop
push
fisubrl
cld
add
pop
je
shrl
lcall
rcrl
icebp
add
fdivrl
inc
popa
mov
adcl
jbe
pop
xchg
dec
mov
push
mov
mov
lcall
das
in
daa
push
cmp
daa
fadds
sti
cmpsb
orb
jno
sbb
aad
call
push
sub
iret
shlb
repnz
sbb
orb
cmp
sti
add
or
fcoms
fnsave
lea
fs
pavgw
fdivr
ljmp
pop
jge,pn
mov
cmp
add
jno
leave
in
and
cld
daa
ja
inc
std
loop
mov
xchg
sub
sub
fldt
cmpsl
xor
mov
or
adc
or
push
shrl
ret
stos
dec
pop
dec
mov
fmulp
daa
add
jmp
testb
jae
loopne
ror
sahf
mov
pop
add
aad
mov
stos
gs
and
and
sub
mov
movsl
sub
sbb
and
pushf
imul
mov
inc
movsb
pop
cmpsb
mov
sbb
add
sbb
imul
push
push
push
hlt
mov
ret
xchg
jno
cmc
out
pop
addr16
dec
add
adc
loopne
insl
outsl
xchg
inc
xchg
xlat
cltd
jnp
or
push
scas
in
nop
mov
stos
repz
xchg
xor
addr16
dec
or
push
pop
cmpsb
arpl
dec
cmp
stc
mov
hlt
out
mov
jle
mov
lcall
xchg
mov
inc
inc
mov
scas
outsb
scas
and
leave
inc
stos
incl
sbbl
adc
pop
cmpsb
shlb
mov
inc
lods
jo
cmp
jns
pushf
cld
dec
push
cmpsb
adc
movsb
and
ljmp
fistps
dec
push
dec
lods
popa
or
enter
push
scas
pop
cltd
fwait
adc
gs
dec
jg
aas
imul
addb
mov
test
pushf
outsb
add
test
lcall
sahf
mov
push
sbb
jb
jecxz
sub
jns
dec
cmpsb
inc
shlb
push
add
xchg
imul
and
cli
sti
xlat
jnp
mov
ljmp
dec
lret
sub
and
or
sahf
jbe
mov
jp
mov
pop
data16
adc
or
jns
xlat
push
push
aam
jecxz
mov
insl
movsl
adc
pop
test
dec
movsb
pop
dec
ja
sahf
xchg
pop
call
rcl
mov
and
sub
or
test
shlb
sbb
mov
ret
addr16
insl
test
sub
push
sub
mov
jecxz
popa
sub
icebp
idiv
ss
mov
fisubs
aas
mov
mov
repnz
stc
cltd
fs
movsb
test
roll
inc
call
pushf
daa
test
outsl
xor
aas
sbb
xor
call
test
cld
or
push
fcmovne
cmpb
pop
fisttpll
mov
mov
mov
out
das
pop
xor
into
jnp
push
push
mov
xchg
inc
xor
mov
or
leave
aad
ret
sbb
mov
push
int
push
movsb
daa
enter
pop
bound
outsb
and
aas
xchg
movsb
cmp
inc
mov
and
scas
jl
pop
cmp
mov
icebp
aas
shrl
fistpl
and
adc
pop
adc
scas
xchg
test
popa
hlt
out
sub
lret
in
pushf
push
mov
leave
sub
xor
mov
out
xor
insl
xchg
ja
mov
push
sti
bnd
fldenv
int
cmp
cmp
dec
lock
mov
xor
adc
ds
mov
inc
mov
pop
push
shlb
mov
and
rolb
lahf
adc
sbb
push
mov
cmc
xchg
repnz
insb
orb
push
leave
add
xchg
add
mov
dec
cld
pushf
loopne
out
fdiv
lods
jns
inc
jge
push
popa
sub
mov
out
cli
sbbl
adc
lods
adc
dec
push
fbld
and
adc
orb
mov
loop
packsswb
cmc
jge
ficoml
std
xchg
dec
std
mov
mov
fnstenv
sub
lods
xchg
fnsave
push
push
jo
sub
imul
lea
es
jnp,pt
stos
aam
sub
lods
xchg
mov
sub
xchg
pop
adc
jl
push
outsl
inc
adc
mov
mov
sbb
jp
bound
push
push
clc
adcb
lcall
aas
push
out
pusha
sub
lcall
inc
push
push
test
incl
stos
cwtl
push
and
xchg
pop
cmp
add
dec
addr16
pop
xor
add
clc
lds
loopne
xor
sbb
loope
pop
lret
pushl
adc
addr16
inc
test
jns
pop
inc
adc
nop
and
sub
movsb
into
sbb
mov
fstpt
xadd
out
add
jp
outsb
sbb
je
cmp
rcrl
aas
push
push
cmpsb
sbb
xchg
ja
dec
mov
lds
mov
xchg
mov
es
aam
ficoms
shrl
in
and
int3
mov
pushf
adc
cmpb
adc
enterw
lcall
mov
cmpb
inc
ficoms
repz
ret
cmp
insl
insl
mov
and
sub
and
movsl
push
xchg
js
shll
dec
data16
and
pop
test
or
sarb
adc
sub
mov
mov
fistpl
lret
roll
mul
mov
sbb
cmp
lods
insb
lret
movsb
cli
or
dec
add
out
mov
or
pop
in
popa
cmp
mov
mov
mov
mov
xor
inc
das
mov
ss
sub
adc
imul
inc
lret
xchg
xchg
lock
jae
aad
and
roll
inc
testl
mov
push
jmp
loope
adc
test
jge
rcrb
or
cmpsl
inc
jns
stos
or
sub
outsl
mov
in
aaa
or
mov
sbb
add
xor
mov
or
sbb
cltd
mov
mov
int
cmp
and
mov
shll
adc
adc
pop
jb
sahf
int3
pushf
add
pop
xor
push
lds
jge
lcall
mov
pop
sbbb
js
cltd
stos
xchg
cmp
mov
and
lds
lea
cmp
lock
mov
fstpl
and
mov
jnp
inc
shlb
dec
in
ret
sub
and
push
jne
shrb
cmp
cs
add
jno
icebp
dec
jl
mov
dec
fsubl
ja
stc
push
dec
xchg
repz
push
stos
mov
dec
cltd
jmp
pop
lea
ss
scas
add
push
cmpsl
insl
and
or
cmp
out
mov
and
int
pop
stos
cmc
ja
inc
js
loop
out
inc
adc
clc
fsubl
xchg
dec
dec
sub
and
enter
and
inc
lock
sub
mulb
sbb
js
jno
adc
mov
psadbw
push
dec
mov
sbb
loop
pop
sub
mov
mov
call
in
or
scas
jg
inc
jno
jb
ret
jae
pop
mov
sub
pop
inc
aas
ja
loopne
add
xor
addr16
movsb
pushf
cli
loope
dec
and
bnd
xor
jns
ret
or
out
inc
push
aas
test
sub
pop
xchg
loope
mov
ret
cmp
mov
je
sub
adc
call
cmp
sbb
sbb
xor
fdivr
cmp
icebp
xor
or
dec
xchg
dec
rcll
or
push
jl
dec
mov
ret
mov
outsl
lods
adc
pop
mov
inc
invd
add
stos
inc
movsb
jnp
ret
popa
and
push
cmp
call
pop
inc
ljmp
dec
sbb
pusha
sbb
pop
mov
adc
mov
jmp
repnz
pop
sbb
fsubs
mov
pop
mov
cmc
fsub
mov
cmc
push
push
cmp
cmp
mov
pop
adc
jmp
rcrb
jbe
nop
rcrl
xor
leave
adc
sahf
inc
jbe
mov
dec
pop
or
fdivrl
cld
adc
movsl
sahf
inc
call
retw
stc
lcall
fmul
sub
xchg
add
sub
xlat
pop
mov
fisubs
sbb
pop
fcomp
jmp
or
adc
adc
dec
mov
lcall
mov
or
cmp
arpl
test
repz
out
clc
int3
jmp
cmp
dec
lods
dec
mov
in
jle
aam
xchg
fwait
adcl
mov
jne
push
aam
xchg
xor
addl
in
std
ja
sarl
mov
in
dec
ss
xchg
dec
insb
mov
sbb
push
popf
loopne
enter
or
mov
adc
in
push
xor
dec
loopne
sbbb
and
shrb
testb
jg
stos
mov
stc
pop
push
mov
pop
cmp
data16
fnstcw
lahf
call
sub
mov
pusha
fmuls
mov
ret
sub
fildl
add
clc
mov
call
push
out
xorb
pop
xchg
inc
divl
movsl
jnp
sahf
xchg
mov
insb
mov
insb
pop
push
test
and
and
testl
sarl
jne
dec
ss
cmp
insl
arpl
adc
aas
jg
daa
mov
push
or
pop
loop
dec
adc
aad
cmpsb
jmp
js
pop
into
pop
lock
mov
lcall
mov
fsts
push
lret
popf
xor
mov
loope
lods
subb
mov
add
stos
mov
mov
ss
dec
xorl
roll
fdivs
xchg
fcoml
in
xchg
mov
xchg
rcr
xchg
mov
push
sub
leave
rorb
jmp
adc
adcl
jno
int3
mov
gs
cs
out
aas
ljmp
cmp
dec
int
out
push
mov
int
pop
daa
out
loop
lea
xchg
add
or
sbb
movsb
push
jg
adc
push
fcmovnu
or
cmpsb
mov
mov
mov
or
sub
enter
sbb
mov
and
jmp
cltd
inc
mov
xchg
add
xor
pminsw
push
xchg
ret
rorl
loop
cltd
cmc
lcall
inc
sbb
push
jae
cmp
dec
cmp
adc
inc
fst
aad
jbe
es
cmpsl
out
loopne
shrb
fists
pop
aaa
mov
inc
daa
fstl
mov
imulb
inc
jmp
add
dec
and
into
lahf
adcb
mov
add
lock
inc
cld
call
push
cmp
jbe
sbb
mov
ret
cmpsb
out
xlat
mov
cmp
mov
jg
pop
fwait
aas
mov
out
out
in
xchg
loope
aad
pop
lahf
push
stc
fsts
jns
pop
mov
scas
ds
sti
imul
orb
jge
rcr
xchg
mov
jmp
shll
jp
jge
aad
sbb
xchg
xchg
scas
mov
aam
mov
pop
loope
stc
mov
and
ror
mov
pop
xor
arpl
outsl
mov
les
cmc
loopne
mov
sbb
fwait
cmp
adc
pop
repnz
mov
repz
shrb
cltd
leave
test
or
sbbl
cli
lahf
test
pop
and
nop
popa
sahf
sbb
lock
nop
mov
scas
pop
push
fsubl
fisubrs
sub
cmp
lret
sbb
inc
insl
sub
or
push
mull
fldenv
mov
inc
sbb
pop
movsl
imul
dec
arpl
sub
aaa
jo
xor
inc
adc
lahf
clc
clc
fnsetpm(287
jnp
xor
xchg
mov
push
xchg
or
out
jno
jo
mov
jne
dec
pop
out
pop
xchg
inc
inc
iret
push
jae
ljmp
in
rcr
inc
shlb
xchg
jmp
and
rorl
mov
loopne
xchg
xchg
xor
roll
pushf
cs
fidivl
lahf
imul
popf
xlat
pusha
sbb
add
fsubr
bnd
jmp
cmp
in
mov
test
mov
orb
push
call
aad
loop
leave
xchg
jl
jg
loope
push
lcall
out
das
aas
data16
push
mov
ficomps
fmul
fsubs
push
test
sub
movsb
bnd
neg
mov
inc
leave
cmpl
adc
nop
lds
cs
mov
push
inc
stos
dec
popf
add
sbb
repnz
jg
int
in
jmp
jecxz
xchg
add
rcrb
jae
xlat
sti
cltd
movsb
cld
stos
fcmove
cld
cmp
xor
add
pop
push
pop
dec
loopne
out
outsl
pop
call
cmpsl
xor
or
fs
xor
jge
call
xor
cmp
jne
adc
push
call
xchg
push
js
xorb
sbb
loop
mov
arpl
push
push
insl
pop
hlt
mov
arpl
fs
decb
fwait
dec
lods
sub
mull
fstpt
sahf
dec
jbe
pop
xor
gs
mov
outsb
jge
out
xor
mov
lcall
repnz
lds
ljmp
arpl
lock
add
test
xor
lea
cmp
loope
mov
push
movsb
and
loopne
cmp
adc
pop
stos
adc
loope
xlat
lea
lcall
mov
jno
sti
pop
xchg
pushf
jge
cmpsl
lods
idiv
add
cmpsb
mov
loop
adc
push
and
pop
sub
shlb
mov
daa
adc
mov
fs
out
cmp
pop
mov
popa
addr16
xor
push
out
hlt
or
popa
mov
pop
adc
mov
xchg
pop
divb
fstl
fwait
push
sub
call
jecxz
xchg
dec
jns
div
cmp
pop
fimuls
inc
jne
xchg
cwtl
xchg
fld
xchg
cmp
out
fdivs
dec
ja
mov
sub
xchg
push
sbb
pop
in
sti
push
test
jo
adc
gs
jae
jp
and
cmc
mov
xchg
inc
or
dec
mov
cld
mov
or
sbb
pop
pop
ja
aaa
and
and
notb
mov
lock
xor
hlt
test
pop
daa
stos
icebp
push
jae
pop
popf
jmp
xlat
xchg
adc
mul
lock
adc
sub
jns
fwait
pushf
icebp
mov
popf
sbb
pop
jns
sbb
add
mov
push
pop
sbb
ljmp
cmp
or
lock
and
clc
cmp
jp
shr
push
add
stc
jmp
sub
pop
loope
push
push
jae
add
mov
mov
out
pop
adc
jmp
adc
or
insb
cmp
in
lods
imul
das
jge
dec
lock
sbb
les
cmp
xchg
callw
inc
push
cs
and
inc
add
insb
push
mov
rcr
dec
push
add
fisttpl
rclb
cmc
in
dec
fs
lea
dec
xchg
jl
cwtl
push
inc
push
push
xlat
jecxz
jno
dec
xor
sbb
test
mov
enter
mov
fstl
cltd
add
or
scas
or
push
pop
mov
sub
dec
pop
adc
mov
popf
lahf
dec
ret
pop
inc
mov
mov
int3
or
cmp
xchg
insb
subb
inc
test
push
pop
adc
push
stos
ja
mov
mov
push
adc
arpl
mov
mov
je
testb
adcl
pop
cld
push
fdecstp
xchg
lcall
call
push
scas
div
aad
jmp
ljmp
in
lock
jo
in
std
mov
imul
cmp
and
pop
jl
fbstp
and
mov
push
sbb
xor
adcl
sub
and
adc
repnz
negl
jb
pop
pop
add
cmp
out
daa
cld
loope
ud1
pop
dec
add
xchg
out
rcr
add
xchg
push
leave
and
rclb
sbb
aas
mov
or
scas
in
repz
xchg
fnsave
xchg
pop
and
push
mov
mov
and
pop
lahf
xchg
xchg
sub
xchg
pop
call
ja
sbb
jecxz
addb
mov
mov
mov
into
imul
add
sahf
loope
cld
dec
fistl
push
add
sti
sub
lods
stos
push
mov
or
fwait
xlat
popf
mov
pop
xlat
mov
push
adc
adc
add
jge
add
mov
push
int
in
xor
lods
dec
dec
sub
mov
in
xchg
adc
repz
cli
test
xchg
mov
mov
jp
mov
mov
fcoml
mov
and
cmp
mov
fcmovb
mov
sbb
xchg
sub
mov
add
insl
fmull
mov
fnstcw
aas
ds
pop
pop
jecxz
push
in
fwait
cmc
aaa
mov
ljmp
xchg
jmp
xchg
cmp
imulb
dec
and
jnp
je
outsb
mov
and
push
sub
mov
lods
test
fists
fbstp
cmp
adc
pop
loopne
cmpsb
add
dec
test
out
xchg
sarl
dec
mov
sbb
dec
xlat
inc
xchg
mov
enter
xchg
inc
rcll
int3
jmp
repnz
jae
dec
dec
sub
cmp
cli
xor
mov
jae
xor
lock
mov
sbb
pop
dec
lret
mov
xor
imull
iret
jl
pop
jl
test
mov
sarl
movntq
mov
adc
pop
movsb
ficoml
mov
sbb
movsl
mov
pop
adc
sub
popf
inc
push
push
push
mov
sbb
and
cmpsl
shl
push
andl
in
frstor
sbb
dec
sbb
insl
mov
sbb
out
in
lods
loop
add
sbb
sbb
mov
imul
push
inc
gs
lcall
mov
dec
pop
jae
movsb
dec
repnz
daa
push
psubq
loope
in
scas
sub
xor
or
push
jle
cld
std
sbb
xor
nop
mov
dec
dec
iret
pop
mov
popf
in
add
lds
repnz
popa
sti
push
dec
cmovae
jbe
mov
lods
dec
movsb
jp
jns
mov
cmp
in
mov
dec
call
mov
sbb
clc
movsl
das
xor
cmp
inc
ficoml
pop
xchg
mov
loopne
dec
pop
sbbb
lods
imul
in
xlat
push
adc
jns
and
add
nop
xor
fs
inc
mov
jne
push
cmp
ss
out
mov
and
lods
repz
cmp
mov
mov
cld
cmpsb
mov
jge
mov
jp
or
jp
sahf
test
adc
pushf
push
mov
clc
clc
cmc
mov
sar
push
inc
dec
fs
and
mov
cmc
rclb
jb
jge
push
dec
xor
mov
loope
fldl
rol
mov
xchg
loopne
push
dec
add
ljmp
xchg
jp
mov
es
or
inc
stos
push
mov
xor
subb
movsb
out
push
xor
pushf
xor
leave
lods
cmp
and
cmpl
andl
cld
dec
imul
push
icebp
out
sub
popa
fidivs
and
xor
loopne
imul
adc
xor
cs
jnp
stos
jle
push
push
jne
mov
int
mov
cmp
out
test
push
cmpsl
int3
pop
jae
test
and
int3
hlt
lock
imul
mov
push
shrl
or
cmp
push
xor
cmp
mov
push
mov
gs
pop
jmp
add
movl
mov
adc
jo
stc
pop
cmp
adc
shlb
repz
jp
dec
jmp
cwtl
outsb
push
test
jnp
fwait
cltd
and
sbb
movsl
xchg
push
fiaddl
cmpsl
addl
jb
mov
mov
mov
decl
cmpl
pop
lods
xor
int
mov
fidivrs
sub
adc
xchg
andb
imul
mov
mov
fcmovb
scas
insl
shrl
dec
imul
add
lds
test
cmp
shl
xchg
bts
or
cmp
addr16
out
mov
fsubrs
andb
repnz
or
cmc
icebp
fidivs
sarb
mov
sbb
dec
pushf
lds
movsl
outsl
push
lret
or
enter
dec
mov
pop
fisttps
orl
ss
add
xor
sub
popf
movl
cwtl
or
lea
in
push
xchg
adc
sub
sub
sbb
xchg
outsb
add
xchg
fs
outsl
and
repnz
dec
mov
cmp
imul
adc
pop
add
adc
inc
js
ret
pop
scas
movsl
iret
out
mov
nop
lock
shlb
out
aas
inc
add
pop
inc
enter
push
lea
mov
jne
in
or
xchg
and
or
mov
xchg
loope
lods
sub
xchg
sub
dec
fldcw
sub
inc
jmp
mov
jbe
cli
loopne
sub
mov
das
cld
mov
into
and
sbb
inc
sub
mov
inc
jmp
jno
xchg
clc
lahf
adc
sub
xor
and
jmp
xor
add
in
fdivl
mov
pop
xchg
add
cmp
lock
jbe
or
imul
sub
iret
mov
fstpl
inc
sahf
pop
negl
arpl
mov
or
mov
mov
frstor
pop
cmc
jo
add
ficoml
sub
enter
xor
mov
lret
or
sub
int
xchg
mov
mov
xchg
dec
sbb
movsb
fildl
stc
dec
mov
imul
cmp
push
into
jno
mov
dec
data16
aad
dec
test
cli
push
lret
adc
into
jp,pt
dec
dec
inc
mov
jae
aam
inc
pop
imul
lea
add
mov
shrl
xor
imul
push
iret
cmp
adc
sub
sbb
jl
fimull
lock
cmp
or
adc
or
aas
and
push
cmp
jnp
cmp
cmpsb
cmp
adc
jmp
mov
lcall
dec
ficompl
mov
xchg
out
in
fisttps
aad
rcrb
xor
pop
mov
push
mov
mov
into
pop
pop
into
mov
pop
insb
rorl
es
jno
jb
mov
push
mov
xor
lea
or
jns
xor
add
cmpsb
sub
into
shll
xchg
test
jnp
xor
arpl
mov
inc
and
insl
or
and
aam
jnp
mov
pop
add
dec
sti
or
pop
xor
std
or
jns
pop
mov
add
cmp
jae
mov
fwait
jb
push
out
popa
cwtl
xor
push
repz
test
sbb
pop
in
lahf
sub
scas
jb
add
mov
andl
aaa
mov
cwtl
out
aas
lea
aas
xchg
xor
popa
enter
ljmp
sti
push
sub
push
sub
call
cmp
lea
push
lret
lock
and
scas
jp
cmpsl
ljmp
pop
js
pop
insb
adc
fiadds
ss
fcmovnu
pop
out
dec
dec
cmp
add
clc
scas
dec
aam
out
inc
cmp
sbbl
testb
sub
mov
cmp
adc
aad
push
mov
pop
aas
push
jp
cs
inc
jno
mov
out
clc
mov
lahf
mov
and
mov
inc
cli
push
popa
pop
popf
fldcw
push
stos
ret
jne
jns
cmp
mov
add
dec
fwait
in
mov
cld
push
push
cmp
enter
das
sub
mov
dec
mov
pop
in
push
mov
cmp
ss
cmp
nop
sbb
sub
sub
mov
push
lahf
sub
push
sub
fmull
sub
jl
mov
das
push
xlat
mov
xor
sahf
jne
and
sbb
nop
test
add
jmp
sub
mov
push
aam
push
mov
iret
sub
cmp
testb
mov
and
sbbl
jge,pn
movsl
fcmovnu
or
mov
dec
push
dec
push
adcl
gs
mov
jbe
incl
lcall
mov
stc
dec
sub
pop
sbb
cmpsb
xor
into
xchg
aas
sub
add
movsl
or
mov
adc
stc
mov
and
addr16
cli
inc
shll
aaa
fists
jne
jb
jns
leave
adc
js
hlt
jno
cmpsb
jae
xchg
push
push
mov
out
cmc
scas
aaa
loop
test
hlt
adc
push
mov
cmc
pop
into
jl
cli
test
daa
fwait
cmp
shrb
stc
mov
mov
jg
test
es
sub
adc
xchg
sub
jo
and
dec
push
mov
push
into
out
mov
fwait
xor
pop
jae
cmp
push
push
out
out
mov
or
pusha
repnz
push
jno
mov
js
cmp
xchg
push
rorb
int
push
fdivr
mov
int3
cmp
or
loop
shlb
inc
dec
sahf
test
es
push
fisttps
push
push
fwait
add
xlat
add
mov
bound
xchg
push
inc
lods
push
jmp
xlat
cwtl
xlat
jne
xorb
lock
fistl
mov
cmp
sbb
mov
adc
popf
popa
movsb
jbe
inc
daa
adc
add
mov
loope
cmpsb
nop
mov
stos
mov
jge
cmp
shrb
pand
gs
repz
cmp
out
sarb
xor
cmpsl
dec
lods
or
clc
js
dec
adc
dec
pop
xchg
or
cmp
inc
lret
mov
adc
fcomi
aam
scas
fs
and
xor
jae
or
and
sub
repnz
pop
jmp
jne
mov
add
aad
and
mov
add
add
sbb
aaa
xor
cmpb
push
mov
inc
mov
xor
cmp
shr
sub
pop
mov
pop
mov
leave
fs
outsb
cmpsb
pushf
cmp
movq
mov
insb
cltd
dec
rclb
pop
dec
xor
xor
sub
std
in
pushf
or
shr
dec
jb
subb
lret
ret
leave
and
mov
cmp
adc
push
in
adc
cmc
mov
test
mov
fstl
xchg
stos
jecxz
iret
pop
orb
jns
jg
push
addr16
or
cmpsb
outsb
xchg
insb
sarl
dec
pop
in
jae
mov
inc
push
sbb
fs
and
fsubrs
mov
cltd
insb
xchg
xchg
push
sbb
iret
push
and
std
sub
out
sub
gs
aad
ljmp
push
dec
cld
xchg
cmp
out
jge
dec
sbb
dec
mov
aam
rep
mov
rcrl
es
dec
rcr
fwait
movsb
shl
cld
mov
sbb
xchg
pop
cs
daa
add
push
add
les
lret
xchg
out
pop
mov
cmp
outsl
repnz
subb
addr16
mov
xchg
cld
sbb
outsb
shrl
xchg
mov
nop
push
sahf
inc
jmp
inc
mov
lahf
xor
xchg
stos
pop
xor
mov
out
and
scas
outsb
jcxz
sbb
mov
jge
dec
add
fwait
push
sbb
or
fwait
stos
es
ja
sti
icebp
mov
aaa
out
cli
out
push
cld
pushf
pusha
jo
cmp
add
sub
mov
cmc
pushf
dec
repz
push
xchg
inc
repnz
repnz
repz
out
stos
fsubr
loop
jecxz
imul
movsb
dec
shll
mov
mov
lcall
jg
movhps
popa
adc
mov
mov
inc
into
push
lea
ret
mov
cmp
cmc
pushf
loopne
dec
adc
fcoms
sti
jbe
dec
add
pop
xor
leave
aas
lods
js
shlb
xor
add
arpl
arpl
xchg
int3
lret
in
and
or
add
out
sub
xlat
stc
mov
dec
pop
lds
jnp
inc
ljmp
lods
lret
lock
pusha
adc
js
xor
cmp
stc
movsl
xor
inc
or
xchg
push
sahf
pop
and
mov
icebp
adc
xor
movsb
sub
ja
mov
dec
dec
insb
fmuls
jne
addr16
lds
adc
shrb
lods
dec
outsb
ja
scas
cmpsl
mov
adc
test
je
gs
pop
loop
sbb
rcll
pop
cmp
jecxz
repz
dec
adc
lods
jno
or
mov
lods
cmpb
inc
jecxz
test
nop
or
popa
mov
jg
aad
add
mov
dec
push
or
push
mov
jmp
push
mov
mov
repnz
sub
mov
xchg
jnp
dec
sub
jnp
lock
mov
iret
lret
jbe
jo,pn
ja
or
aam
sub
cli
and
repz
and
add
popa
jae
or
std
int3
fwait
mov
push
shlb
int
movsl
notl
pop
mov
sub
or
ror
mov
dec
add
stos
push
lock
push
sub
and
dec
lods
xor
call
addb
outsb
ficoml
push
adc
lea
add
inc
mov
jno
movsb
push
dec
loopne
test
data16
fnstcw
xchg
and
cli
mov
mov
fdivr
roll
push
jmp
inc
sbb
clc
adc
xor
movsl
pop
scas
orl
lahf
aas
push
daa
add
mov
cmp
mov
pop
adc
or
insl
xchg
dec
int
jg
or
add
xor
inc
cmp
aam
or
test
imul
pop
sbb
jmp
mov
xor
insb
ss
into
xor
sbb
add
movl
nop
mov
fdiv
iret
pop
cli
jnp
jno
pushf
or
aad
or
rorl
std
pop
jbe
jge
test
xor
inc
adc
leave
cmp
mov
notl
add
shlb
imul
fidivrl
xor
lock
push
test
mov
clc
testl
or
adc
adc
enter
call
stos
call
push
jmp
cltd
mov
btc
cmc
sub
and
sbb
cltd
adc
xchg
dec
lahf
pop
repz
imul
test
xchg
enter
add
add
cmpsl
orb
lock
sbbl
pop
pop
test
jecxz
test
mov
xor
aaa
add
mov
mov
rorl
jl
pop
add
mov
mov
dec
push
add
sub
mov
xor
movsl
or
mov
inc
and
shrb
dec
rorl
int3
xchg
aam
push
popf
outsl
xchg
sub
cmpsb
in
arpl
orl
and
dec
into
ja
loop
repz
ret
sub
cmpsb
adc
es
mov
sub
mov
fdiv
in
lds
cltd
insb
push
xchg
jle
std
push
push
pop
add
in
hlt
call
or
sbb
inc
and
clc
out
rcrl
jo
cmp
clc
sub
jmp
leave
pop
adc
jge
push
adc
mov
adc
mov
cli
fisubrl
push
ss
sub
lret
lea
adc
dec
stos
mov
in
pop
mov
push
iret
xchg
aam
mov
jnp
loopne
dec
and
scas
jnp
stos
mov
xchg
imul
xor
xor
add
xor
push
mov
or
dec
arpl
mov
cmp
sahf
jg
xor
mov
pop
mov
sar
cmp
mov
xchg
pusha
faddl
je
cmc
fcomps
push
inc
popf
setb
sub
cmp
xchg
and
stos
push
sbb
inc
xchg
scas
sub
loopne
lret
xchg
iret
jbe
mov
adc
ret
push
xor
and
pop
or
insb
inc
and
mov
cmp
cwtl
scas
adc
jge
fucom
es
shlb
out
jb
enter
push
inc
cmp
shrb
or
mov
or
es
dec
lock
out
jl
loopne
leave
push
outsb
test
adc
out
mov
sti
or
push
mov
xchg
add
xor
mov
mov
jp
cltd
mov
imul
in
aas
mov
mov
adc
rolb
mov
inc
jmp
lahf
jg
xchg
aad
cmp
insb
scas
or
inc
pop
mov
pushl
cmpb
xchg
sbb
mov
das
push
pop
sahf
rcrl
frstor
xchg
in
sahf
and
xor
mov
iret
int3
hlt
adc
imul
cmp
fisubrl
movsb
pop
and
jp
pop
data16
push
stos
scas
pop
or
sbb
jge
das
mov
pop
mov
xchg
movsl
int3
and
sbb
mov
or
pop
lret
sbb
add
mov
mov
lods
mov
push
add
jl
sbb
mov
jge
rorl
insl
es
cmp
mov
xor
fcoml
dec
xor
ja
jle
lods
pop
adc
mov
jmp
jecxz
push
lods
in
imul
dec
lahf
jb
icebp
insb
sub
jo
divl
add
push
sarb
jge
sub
test
jg
fadds
out
andl
incl
aad
leave
pop
add
adc
imul
mov
rcrl
pop
movsl
popl
jae
mov
xchg
shrl
call
dec
cmpsl
rorl
inc
ret
lret
mov
fnsave
es
mov
jae
into
jnp
movsb
adc
push
push
jecxz
outsl
cwtl
mov
test
movsl
arpl
cld
scas
cltd
add
lods
movsl
sub
mov
jmp
inc
mov
mov
xor
rep
push
fwait
xor
mov
ss
cmp
int3
add
lods
imul
add
push
or
adc
out
popf
jmp
dec
pusha
and
or
int3
pusha
inc
and
mov
fs
pop
adc
scas
push
aaa
xor
test
cli
rclb
dec
ss
lret
sahf
aad
scas
jns
int
inc
mov
mov
sbb
add
push
cmp
out
push
adc
test
push
dec
inc
xor
shrb
xor
outsl
mov
push
jl
xor
pop
xorb
mov
jo
adc
pop
pop
ficompl
mov
ret
loopne
xchg
add
mov
mov
lods
mov
pop
xchg
cs
gs
jns
xor
repz
subb
in
xor
and
and
test
adc
push
mov
ficompl
xchg
xchg
mov
cmp
fwait
sbbb
mov
hlt
fwait
xchg
shrl
push
fcompl
jp
aad
adcl
mov
mov
and
cmp
inc
mov
ret
push
frstor
ret
jecxz
mov
mov
sti
sub
mov
fisubrl
xchg
cmp
add
mov
pop
xor
filds
mov
push
and
js
out
push
ljmp
mul
pop
pop
xchg
push
mov
data16
mov
sub
inc
cmp
and
push
push
in
aas
mov
cmp
dec
repnz
mov
cmpsb
stc
fnstenv
push
fnsave
mov
dec
lret
popf
pop
xor
sbb
sti
fwait
pop
sub
int
fdivrp
dec
cli
mov
clc
out
push
mov
stos
push
ljmp
xor
jle
cmc
push
cmp
dec
lahf
sbb
jmp
repnz
imul
cld
and
mov
leave
xchg
sbb
mov
loopne
test
xor
push
sbb
aam
call
push
xor
nop
mov
push
aad
mov
movsl
outsb
fists
or
movsl
in
inc
xchg
outsl
xchg
jp
adc
jne
movb
pop
push
cwtl
push
mov
outsl
inc
fmuls
std
and
xor
in
add
sbb
cltd
ja
pop
or
xchg
repnz
lods
jae
adc
vmread
stos
sti
arpl
sub
or
hlt
out
push
jge
fidivl
and
adc
push
lods
in
and
add
mov
mov
cld
fwait
mov
and
popa
bound
daa
mov
notb
mov
int
fs
mov
enter
push
sbb
xor
lcall
xchg
stos
or
pop
je
xor
adc
lods
or
or
les
gs
faddl
ret
stc
xor
cmpsl
pop
cmp
sahf
mov
aam
aaa
lret
cmpsl
xor
adc
aaa
pop
lcall
mov
inc
repz
clc
dec
push
dec
aaa
shll
pushf
xchg
jo
subl
adc
push
in
rcll
pop
or
lcall
mov
sbb
add
cmp
pop
sub
inc
scas
mov
mov
sti
xchg
ficompl
xor
fnsave
cmp
adc
out
repnz
std
mov
aaa
mov
fsubrl
xor
lcall
outsb
sarl
xor
mov
negl
jne
in
ja
fisubrl
test
cmp
jle
fsts
test
out
movsb
loop
imul
push
fdivr
addb
xor
push
scas
iret
mov
ljmp
adc
shl
std
and
ret
lret
or
inc
dec
test
xor
mov
int
jecxz
cwtl
mov
pusha
out
outsb
or
hlt
aas
adc
adc
cmp
lcall
or
add
mov
cmp
rcll
nop
push
lcall
cltd
push
jb
push
add
adc
in
pop
es
push
and
jnp
xchg
mov
in
and
rcrl
notb
mov
lock
push
cmc
cld
outsb
sbb
mov
xchg
int3
test
repz
cmp
jnp
inc
lods
cwtl
jo
cmp
xor
adc
js
cli
xchg
mov
gs
ficoms
fcom
sbb
adc
rcrb
pop
hlt
xchg
out
in
dec
push
xchg
push
dec
inc
adc
nop
daa
cmpsb
and
scas
mov
mov
and
jmp
ds
inc
rcrb
repnz
out
cmpsl
out
daa
pop
into
in
push
xchg
test
arpl
aad
call
test
jg
and
lods
sbb
dec
mov
jmp
pop
cmpsb
add
cld
add
push
xchg
jb
dec
fistpl
call
push
mull
push
pushf
cmovb
dec
call
mov
push
lock
jns
popa
mov
add
mov
pop
mov
dec
jae
pop
pop
mov
sbb
jecxz
insl
and
fwait
sub
mov
adcb
cmpsl
xor
jb
mov
aas
mov
add
pusha
cmp
mov
mov
or
test
add
sub
mov
sbb
mov
inc
bound
dec
out
cmp
xchg
xlat
inc
out
dec
mov
daa
dec
jne
cmpsl
push
fucomp
add
je
pop
mov
lods
xchg
fs
xlat
iret
test
jo
push
xchg
jl
fwait
sbb
mov
push
lds
adc
jbe
inc
fcmovb
mov
iret
jnp
sub
test
jo
push
push
lods
jecxz
cmpsl
jbe
dec
outsl
nop
push
xor
lahf
inc
xor
jecxz
push
or
or
pop
fcmovb
int3
pop
icebp
cli
out
push
mov
fwait
or
jne
loope
push
jnp
sbb
mov
pop
mov
das
daa
jnp
mov
push
scas
fs
dec
sbb
dec
lea
ficomps
fidivrs
daa
mov
push
push
adc
sub
out
int3
movb
sarb
or
idiv
mov
inc
jb
std
jg
lahf
test
add
iret
lcall
insb
mov
pushf
insb
adc
daa
stc
or
enter
cmp
stos
dec
xchg
mov
imull
shrb
es
mov
fwait
scas
pushl
test
ja
das
mov
popf
stos
push
out
bound
jecxz
xor
push
stc
dec
mov
mov
fs
sets
mov
in
aas
mov
jnp
or
xor
push
and
sbb
cs
call
rolb
dec
lods
sarb
and
mov
aad
push
cmpsb
pop
repz
dec
cs
out
and
lret
ss
xchg
pop
jnp
outsb
movsl
dec
repnz
fisubrs
int3
push
and
add
jae
test
adc
lods
adc
ds
mov
pop
mov
je
inc
bound
sbb
dec
push
ret
xchg
and
nop
sub
push
cmp
pop
xor
cltd
mov
shlb
cmp
push
mov
sub
xor
inc
jl
fsubr
outsl
push
sub
lock
xor
jp
cmp
push
fidivs
rorl
xlat
dec
add
xchg
loop
sbb
xchg
add
push
jecxz
mov
std
shrl
call
test
xor
pusha
scas
and
sub
gs
lea
fdivs
cmpsb
or
mov
fsts
push
lock
inc
inc
push
jae
mov
sbb
stos
bound
aam
pop
fdivrl
mov
xchg
lcall
sbb
push
cmc
dec
sbb
jmp
inc
js
ljmp
pop
neg
push
pop
or
push
enter
pushf
sub
mov
out
movsl
jl
jp
sbb
dec
mov
push
cmp
jb
xchg
out
daa
std
cmp
in
mov
lret
movsl
daa
cwtl
add
xor
xchg
adc
jo
push
ficoms
cmp
inc
ror
int3
leave
or
shl
cmp
and
jge
negb
cmpsl
into
xchg
pop
push
mov
loope
out
clc
pop
sti
mov
mov
inc
and
orb
xor
fcmovne
inc
sahf
icebp
pop
add
sbb
inc
sub
adc
out
repnz
movsl
jnp
enter
adc
clc
call
dec
lock
fisttpl
insb
xor
arpl
jb
ljmp
xchg
outsl
cwtl
push
sbb
popf
cld
roll
mov
imul
jp
cmp
and
jecxz
outsl
xor
dec
mov
int
or
inc
push
iret
lods
inc
mov
xor
pop
insb
sub
jb
mov
mov
in
pop
pop
orb
mov
movsl
inc
pop
aaa
inc
add
or
xor
cmp
in
int3
cmp
sub
decl
adc
test
aas
add
popa
or
es
push
scas
pop
jbe
sti
sbbl
pop
mov
pushl
jb
lcall
imul
xchg
inc
pop
sbb
arpl
cltd
add
pusha
fwait
pop
sbb
test
jne
out
cltd
cli
icebp
ljmp
rorl
add
or
pop
add
mov
dec
sub
dec
adc
and
dec
neg
int
mov
imul
cmp
adc
jne
rorb
pop
mov
loop,pn
mov
mov
je
mov
mov
jecxz
mov
inc
cs
and
out
inc
imul
dec
insl
push
jmp
add
stc
sbb
sub
cs
xor
sbbl
int3
pushf
mov
mov
dec
and
and
shlb
arpl
inc
xchg
stc
mov
lret
fisttpl
xor
repz
insb
push
cmp
sbb
pop
add
pop
js
push
dec
sub
inc
push
jg
cwtl
and
push
mov
es
or
add
gs
shl
pop
sbb
adc
decl
outsl
into
bound
mov
iret
aam
cmp
daa
cs
sbb
mov
shll
scas
bnd
xchg
sbb
clc
jno
fsubp
push
and
pop
add
leave
lea
daa
or
insb
and
sti
fs
pop
sti
hlt
call
pop
jl
testl
stos
cld
or
loope
and
lock
lea
sti
stos
gs
mov
push
in
sarl
xor
mov
mov
jl
imul
popf
cli
mov
sub
mov
pop
push
inc
adc
cmp
data16
push
loope
sbb
in
lcall
icebp
xchg
inc
jecxz
into
xchg
fdivrl
sbb
push
roll
clc
push
mov
pop
pop
and
pop
pop
loope
iret
jne
mov
loope
iret
or
mov
lcall
add
or
add
xchg
mov
popa
pop
push
jp
xor
lret
dec
cli
test
add
sbb
adc
pop
in
aas
iret
inc
push
addb
lea
test
xchg
lahf
in
insl
mov
aas
insl
mov
lea
mov
aad
mulb
test
and
andl
insb
inc
adc
ret
xchg
repnz
mov
jl
mov
cmp
addr16
mov
cmp
rcll
ret
mov
orl
sahf
es
test
mov
icebp
xchg
loopne
dec
mov
xor
dec
out
std
adc
xchg
mov
addr16
inc
dec
lcall
stc
push
cwtl
inc
mov
cmp
loope
stc
and
and
inc
data16
or
mov
and
and
pop
loop
inc
add
mov
mov
sub
xchg
shl
mov
notl
sbb
inc
pop
mov
pusha
lods
jbe
das
sbb
int3
int
stc
mov
in
movsb
sub
add
or
pop
mov
stos
push
jg
cmc
mov
push
lds
loop
mov
aas
push
add
clc
leave
or
inc
cmc
loope
pop
ret
xor
sarl
pop
dec
cs
arpl
test
ret
test
test
xchg
cmc
imul
jno
cmpsl
add
sti
push
mov
sbb
divb
rclb
fildl
xor
mov
xor
adc
scas
xchg
repnz
leave
stos
pop
mov
adc
cmp
into
inc
dec
mov
out
dec
mov
mov
xor
dec
add
sahf
sbbl
lret
push
insb
mov
ja
cli
lds
les
mov
sti
shll
jae
imul
inc
arpl
cmp
das
test
mov
or
mov
xor
cmp
repz
pop
pop
mov
add
dec
mov
cs
jecxz
push
add
pop
test
stos
testl
int3
sbb
jmp
adc
shl
mov
mov
inc
inc
jae
insb
int
inc
push
fnstenv
cmp
movsl
mov
movsb
cli
push
jae
in
test
movsb
add
stos
pusha
dec
stos
fildl
cmc
jbe
das
mov
insb
cmc
lea
fidivrs
sbb
jnp
cwtl
fcmovnb
inc
cwtl
or
cwtl
xor
ret
movsb
les
inc
mov
movsl
inc
mov
loope
mov
shll
ss
or
lcall
jmp
push
push
rorl
mov
pushf
adc
or
mov
or
sbbb
or
shrb
mov
lahf
imul
and
mov
aad
rolb
pushf
push
fsubr
mov
pushw
jle
int
jecxz
das
xor
enter
mov
int3
pop
jg
mull
inc
cs
cmc
push
xchg
and
enter
int
clc
dec
push
out
cmc
or
jne
sbb
inc
das
lock
sbb
jmp
jne
out
int
ficomps
lahf
inc
ror
notl
lahf
loop
lret
xor
cmp
mov
gs
sub
add
lahf
cwtl
mov
andl
xor
add
clc
leave
sar
lea
push
jnp
xchg
sub
mov
sub
mov
push
fiaddl
fisttpll
cld
push
xor
jp
lret
jecxz
sub
sarb
stos
out
cmpsl
sub
ret
orl
stos
xchg
mov
mov
int3
in
push
push
cmp
dec
mov
cmpl
lret
adc
ret
and
test
push
xchg
mov
and
or
or
sti
lcall
outsl
popl
push
ja
lds
out
xlat
cmp
jae
xchg
aad
mov
cmp
mov
and
xchg
lds
or
outsl
mov
pop
pusha
daa
mov
inc
in
sahf
stos
loopne
cmp
dec
xor
xor
xchg
mov
pop
pop
adc
dec
jo
jge
sarl
je
stos
inc
or
gs
cmpsl
mov
shl
mov
lea
in
movsl
pushf
std
sub
xchg
sub
push
hlt
inc
fisttps
scas
bound
das
xchg
cmp
mov
in
inc
ret
push
xsave
shlb
sub
cmpsl
dec
push
mov
fsubrs
call
in
adc
and
das
push
les
rcl
cmp
fwait
dec
xchg
out
das
mov
push
jg
xchg
into
in
fistpll
mov
hlt
adc
mov
outsl
dec
push
xchg
outsl
ret
push
sbb
inc
imul
outsb
mov
mov
test
push
into
push
mov
jnp
cmc
jb
lret
andb
ror
lds
cmp
xor
lret
pop
sub
repz
jnp
in
es
cmp
dec
adc
lret
cs
enter
fneni(8087
dec
and
aad
negb
mov
in
mov
push
mov
pop
leave
cmp
lea
pop
jno
adc
inc
loopne
je
cmc
and
pop
into
stos
stos
xchg
gs
fwait
dec
xor
les
mov
jbe
pop
pop
adc
sahf
jb
push
int3
mov
jne
std
enter
adc
dec
sbb
add
or
mov
mov
push
add
in
mov
sbb
enter
sti
lahf
loopne
push
lahf
mov
inc
andl
cs
sbb
test
mov
out
sub
mov
adc
pushf
lock
js
or
ljmp
xchg
test
aas
out
or
push
pop
fwait
or
lds
les
mov
xchg
jp
and
add
inc
xchg
jno
push
stos
cld
jmp
cmp
mov
or
mov
xor
sarb
jp
idiv
jne
faddl
out
je
inc
and
or
aam
sub
add
add
and
loope
mov
insl
rorb
rclb
rcl
rorb
lahf
movsb
insl
pop
in
lret
push
sbb
jle
shlb
fninit
fcompl
push
mov
loope
adc
stc
mov
fidivrl
scas
dec
cmpsl
sbb
pusha
jp
dec
outsl
cmp
cli
or
popl
test
add
xor
leave
and
cmp
and
mov
cmp
bnd
mov
mov
icebp
inc
mov
pop
movsb
fiadds
mov
inc
mov
or
push
lds
fcomi
imulb
push
push
lds
add
lea
popf
inc
lea
xor
daa
jmp
mov
push
aaa
sbb
out
cmpsb
int
pop
inc
cmp
xor
mov
divb
and
sarl
stos
inc
xchg
sbb
cmpsl
loop
xchg
insw
fidivl
dec
mov
add
aad
cmp
push
or
imul
push
xor
xchg
aam
xor
jnp
sub
mov
jae
cmp
push
mov
in
imul
into
nop
mov
cmp
sbb
aaa
mov
fchs
mov
popa
mov
pop
hlt
popa
and
mov
out
sarl
mov
cmpl
adc
jns
push
mov
or
cwtl
or
xchg
jno
xor
divl
mov
push
lods
das
inc
mov
lods
rcrl
push
cmc
inc
xor
xchg
ficoml
jge
fcmovu
fisubl
push
test
clc
lret
aas
push
lods
mov
add
push
mov
sub
iret
and
inc
add
iret
test
clc
call
or
out
fnstsw
scas
out
mov
daa
mov
and
dec
movsl
dec
data16
test
sbb
cmp
mov
rorl
insl
insl
lahf
mov
das
xchg
ficoms
mov
test
adc
mov
mov
mov
cmp
push
xchg
mov
push
mov
cmp
xchg
add
cmpsb
pop
notb
arpl
mov
jmp
push
enter
pop
icebp
mov
popa
sub
lock
add
icebp
adc
out
ret
shll
pusha
cmp
sahf
push
stos
rcrb
inc
jns
jl
jg
adcb
mov
mov
dec
or
jp
scas
repz
pop
mov
xchg
bound
mov
in
enter
pop
mov
ret
rorb
mov
test
dec
add
pop
mov
mov
mov
xchg
outsl
sub
shll
push
mov
jno
jmp
jg
xlat
loop
aaa
scas
or
pushf
mov
and
leave
and
aam
scas
sub
test
insb
cmp
mov
xor
push
adc
int3
xchg
sbb
and
insl
insl
mov
and
mov
ret
mov
sub
insb
outsl
dec
cwtl
and
inc
lods
aad
mov
adc
or
ret
icebp
aas
out
pop
fstpt
push
jp
sub
adc
mov
mov
shl
or
fnsave
ret
xchg
psllq
or
jbe
mov
lds
xor
jns
nop
out
lret
cmp
aad
lret
dec
xchg
lods
loop
inc
xlat
in
sub
clc
stc
aad
mov
sub
in
addr16
xorl
das
das
ficompl
cmp
mov
xchg
popl
push
scas
call
pop
ljmp
test
add
subl
fdivrp
lea
push
mov
inc
insl
push
movsl
jno
pushf
les
mov
jp
mov
sbb
fldcw
dec
ljmp
lock
rorb
xor
push
mov
mov
jge
jne
jno
inc
mov
sbb
int
push
or
mov
dec
shrb
sti
mov
xor
mov
and
pop
inc
insl
mov
loop
test
ret
out
imul
jl
mov
ret
and
inc
dec
adcl
les
or
rolb
jle
mov
mov
add
adc
inc
daa
nop
cs
imul
and
xchg
fdivl
inc
call
aas
dec
push
hlt
xlat
adc
mov
out
push
mov
add
out
cmp
and
lahf
and
inc
rcrl
sarl
mov
xor
pop
dec
adc
mov
icebp
scas
ficomps
hlt
add
lock
cmp
fcomps
int3
sub
gs
int
aas
dec
fwait
cmpsb
out
sbb
xor
in
jecxz
ret
adc
or
repnz
cld
jmp
inc
cmpsb
insl
in
sbb
inc
mov
imul
or
mov
fwait
mov
mov
pop
cmp
leave
inc
ss
pop
lods
mov
mov
pusha
xchg
int3
fimuls
xchg
loope
rorl
fcomp
lret
xchg
mov
or
fnstcw
inc
cmpl
scas
sahf
pop
imul
leave
dec
xlat
je
pop
dec
dec
cs
or
sbb
lcall
sub
rolb
dec
imul
ret
push
fstp
xor
scas
push
les
inc
scas
arpl
cwtl
lock
cmp
mov
out
inc
sub
sahf
fildl
fs
push
lcall
inc
adc
push
mov
rcr
stc
add
pop
inc
inc
insl
out
stos
adc
cmp
mov
adc
sub
ret
hlt
and
xchg
pop
out
mov
addr16
and
scas
push
cmp
in
sub
sub
shl
mov
fs
scas
inc
push
scas
lods
pop
aam
call
ljmp
adc
jns
xchg
sahf
gs
inc
repnz
cwtl
xchg
scas
sahf
sub
sbb
jg
cmpsl
imul
pop
cmpsb
fwait
in
iret
aas
adc
das
or
push
sub
pop
dec
xor
pop
mov
pop
jne
push
test
or
pop
xchg
ret
push
enter
pop
dec
push
push
sbb
inc
pop
jmp
out
mov
sbb
mov
lret
aad
xlat
xorl
lret
inc
xchg
or
clc
push
mov
lea
fnstcw
je
lahf
xor
or
sbb
loope
xchg
add
sbb
mov
stos
lds
pop
notb
test
leave
mov
ret
mov
es
icebp
jp
and
loopne
in
adcl
xlat
popw
ret
pop
cwtl
jle
push
test
int3
gs
call
push
cwtl
loope
adc
arpl
sub
pusha
movsl
sbb
jbe
xor
push
pushf
xor
mov
pop
inc
adc
add
push
imul
in
sbb
jecxz
xor
test
bndldx
jmp
fistpll
fcomps
icebp
push
inc
jnp
push
fdivrs
jae
and
ds
fsubr
imul
je
pop
ljmp
pop
scas
lds
cmpsl
insb
mov
jns
push
cmp
add
push
lret
xchg
pop
repz
xchg
test
mov
inc
fsubs
subl
and
or
and
mov
or
push
add
cmp
das
nop
test
push
or
jecxz
mov
adc
leave
xchg
sbb
xchg
scas
test
aam
mov
cs
mov
jp
insb
addl
ljmp
add
es
sahf
lods
mov
xor
xor
or
fsub
inc
sub
inc
jb
rolb
aaa
xchg
jge
cltd
mov
lock
insb
stos
dec
or
sahf
cmp
xchg
pusha
sbb
sbb
adc
dec
sbb
insb
bound
faddl
mov
cmp
fwait
jbe
jne
sub
das
mov
add
mov
dec
and
pop
sbb
add
daa
bound
cltd
push
jp
jae
aas
dec
sarb
enter
dec
sahf
inc
or
mov
loope
push
imul
out
sub
or
lods
pop
stos
icebp
jne
mov
or
scas
testb
lock
mov
jmp
adc
fcomp
or
xor
cmpsl
xchg
mov
insl
add
cmc
enter
mov
add
xchg
push
and
loopne
mov
test
clc
jmp
int
fisubrs
mov
out
bound
and
push
mov
aam
mov
mov
mov
cmc
adc
jg
nop
test
stos
adc
inc
mov
pop
jbe
and
aas
inc
cmp
mov
cmp
cwtl
adc
mov
fisttpl
cmpsb
cwtl
xchg
add
lcall
hlt
jl
in
mov
dec
sub
mov
and
mov
push
in
mov
sub
xor
mov
movaps
xchg
inc
push
mov
sahf
stos
out
sub
or
das
dec
das
pop
dec
cmp
mov
mov
dec
cmp
inc
adc
pushf
xchg
or
in
add
fsubrl
movsb
jl
xchg
dec
or
call
cwtl
jle
dec
mov
adcl
push
arpl
outsb
xchg
push
js
pop
pop
pop
enter
test
stos
rcrb
cmpl
adc
sbb
aam
cmp
cmp
jo
pop
adc
mov
mov
mov
call
int
pop
jb
sbb
mov
xor
mov
adc
pop
aam
in
in
sub
fs
shlb
cmpsb
popa
jl
lcall
sub
inc
push
setl
outsl
push
sub
xor
cmp
xchg
jmp
push
add
xor
sub
or
or
hlt
cmp
fidivrl
add
lret
sti
or
cmc
adc
adc
jmp
cmovs
insb
push
pop
pop
fwait
div
mov
mov
vmread
popf
nop
sub
sub
xor
xchg
sbb
or
mov
in
pusha
mov
lahf
in
inc
adc
mov
sbb
sub
shrb
inc
cs
into
aam
pop
in
push
shr
lods
daa
adc
push
in
das
push
fneni(8087
jae
pop
in
mov
les
cs
mov
scas
jb
mov
out
jbe
push
jge
inc
adc
sub
repz
repnz
outsl
cmpl
add
xor
mov
fmuls
sub
inc
mov
scas
adc
dec
add
sbb
pop
jge
popa
mov
arpl
xchg
das
xor
andb
sub
dec
mov
dec
pop
mov
divb
movsl
dec
movsl
cmp
cld
xor
xor
filds
mov
cmp
int3
shrl
pop
or
cld
jb
jl
movsl
loope
mov
mov
ja
jno
push
cmp
cmp
insl
jecxz
xchg
scas
shlb
aam
or
loope
fcmovbe
inc
sahf
mov
fsts
inc
imul
adc
cs
shlb
les
leave
cltd
nop
popa
loop
cmp
ret
add
aam
fldenv
les
ljmp
out
js
arpl
cmpsb
pop
pop
or
lea
add
cltd
call
icebp
xor
in
fnstcw
push
ja
pop
push
movsb
sbb
popa
in
adc
mov
rolb
or
daa
fprem
ljmp
mov
cld
inc
sbb
nop
lock
daa
jle
ds
xchg
add
cmpsl
repz
in
adc
bound
popf
dec
fistpll
flds
xchg
sub
popf
imul
mov
sbb
mov
inc
or
popa
inc
loope
and
xor
xchg
push
nop
lea
test
bound
mov
xchg
pop
nop
pusha
adc
ret
push
push
iret
sbb
dec
and
ret
mov
jg
fwait
push
in
icebp
dec
fdivrl
iret
pop
cmp
ret
fldt
xor
push
stc
test
inc
mov
in
and
inc
mov
arpl
pushf
jmp
movsl
cmp
pop
xor
mov
hlt
andl
adc
mov
mov
movsb
and
sub
dec
aas
int
aaa
inc
add
clc
adc
push
lds
pop
cmp
jle
sbb
lea
push
fmulp
xchg
push
or
jp
push
xchg
lret
adc
out
mov
cmc
inc
inc
insl
xchg
push
dec
jne
repz
jo
test
out
mov
stc
inc
pop
cli
loope
jb
test
sbb
inc
popa
jnp
out
cld
les
push
cmp
and
push
jbe
mov
pop
mov
lret
add
addb
cltd
mov
mov
push
cltd
mov
or
mov
or
test
pop
xor
bound
xlat
and
ljmp
movsb
orl
cmp
loope
jg
test
mov
adc
loope
cmc
daa
cmpsb
outsl
lret
or
xor
cltd
scas
out
mov
rolw
and
or
cmp
mov
dec
repnz
jne
insl
repz
loope
hlt
mov
add
dec
stc
dec
icebp
jmp
push
test
jl
jl
sub
sti
stos
test
add
cmp
jmp
addr16
xor
mov
and
mov
std
mov
adcl
aas
xchg
adc
andb
lds
xor
mov
xor
jp
iret
jge
loopne
inc
jns
pop
clc
jge
xchg
pop
int3
clc
mov
pop
dec
loopne
ljmp
and
xchg
div
add
pushf
push
call
js
cmpsl
xor
cs
outsb
push
imul
jmp
adc
repnz
pop
pop
jmp
sbbl
xchg
push
into
orb
gs
out
push
add
xor
sbbl
adc
dec
movsb
jmp
mov
cmp
cli
xor
sub
cmp
mov
cmp
add
iret
loop
pop
repnz
mov
mov
mov
out
sbb
jno
xor
xchg
lahf
push
lcall
pop
xor
ficomps
loopne
pushf
or
or
and
cmp
pop
sahf
push
insb
shlb
add
add
pop
mov
loopne
icebp
stos
adc
mov
xor
xor
ficomps
imul
xor
jl
clc
pmaxub
shll
mov
ljmp
jge
repnz
inc
sbb
loop
test
out
or
xor
sti
pushf
in
add
push
cmp
das
mov
int3
in
jecxz
stos
lcall
inc
fistpll
aas
shl
fs
mov
pop
out
xor
mov
inc
popf
fmulp
stc
int
dec
or
jbe
mov
fs
jg
ljmp
sbb
int3
xchg
jecxz
or
sub
adc
cmpsl
scas
mov
cmp
dec
imul
add
xlat
subl
subl
push
das
sarb
push
xor
mov
inc
xor
pop
fldenv
outsl
scas
push
aam
sub
sub
test
inc
out
leave
aam
dec
add
mov
ret
popf
lcall
xchg
mov
adc
sbb
movsl
enter
in
adc
in
cmp
dec
sbb
jmp
mov
lds
adc
cltd
repz
iret
cmpsb
addps
ljmp
sbb
pushf
and
rol
jp
cmp
lds
ret
pop
sub
push
js
fldcw
jecxz
and
mov
bound
inc
or
mov
jbe
xor
xlat
xchg
inc
or
push
mov
or
imull
and
or
imul
repz
cmpsl
xchg
add
and
sbb
in
and
loope
or
add
std
jbe
xchg
jge
cltd
dec
or
push
sub
in
daa
cmp
mov
xchg
mov
sarb
pop
xchg
mov
daa
mov
arpl
mov
test
dec
xchg
pop
test
lahf
outsb
add
outsl
dec
test
outsl
mov
or
mull
and
jmp
pop
movsl
jmp
push
push
mov
inc
add
or
test
repz
and
or
cmp
movsb
and
and
call
dec
imul
push
scas
imul
nop
stc
fnsave
test
xchg
hlt
paddusw
jo
clc
ss
roll
rcl
and
pop
fs
mov
push
mov
cmpsb
sub
cmp
push
fdivrs
or
je
test
lcall
cmpsl
dec
pop
pop
xlat
pop
es
cmpsb
add
pop
or
pushf
aad
sbb
lahf
fisubl
xchg
jno
mov
pushf
mov
xor
add
and
scas
test
mov
and
lea
ss
popf
xchg
repnz
add
decl
and
out
xchg
in
sub
adc
testl
xchg
and
lods
frstor
cs
dec
sub
ja
adc
aad
or
push
aam
pop
push
xchg
popa
call
fcoml
or
mov
xchg
mov
das
xor
daa
mov
add
test
jne
js
cs
jge
xor
mov
add
cld
jb
dec
push
shll
lcall
pop
addr16
inc
sahf
xor
pop
fwait
ljmp
in
xor
in
or
ljmp
stc
setns
es
mov
mov
out
push
inc
adc
pop
ret
or
aad
jle
jmp
pop
xchg
and
mov
lcall
fs
and
imul
mov
stos
pusha
sbb
xchg
push
mov
sbb
lds
and
lret
adc
xchg
lods
cltd
cmpsb
dec
xchg
cmp
adc
insb
test
mov
clc
pop
setno
pop
maxps
xchg
test
jae
ss
cwtl
outsb
mov
push
or
ss
test
jo
sahf
data16
dec
push
cmp
je
rcrb
jbe
dec
inc
add
testl
shr
xor
or
mov
lcall
pop
fwait
roll
enter
jmp
sahf
jg
repnz
cmp
sub
out
jno
and
fwait
add
and
or
inc
and
loopne
cmp
fidivs
jecxz
into
repz
dec
push
dec
pop
push
js
pop
jmp
enter
xor
je
lret
mov
jbe
mov
mov
sbb
mov
sbb
xchg
mov
xor
add
mov
enter
push
lds
mov
clc
mov
int3
adc
adc
mov
es
xor
or
icebp
push
jle
sbbb
rcrl
call
out
sub
rcll
dec
es
imul
pop
dec
imull
mov
mov
fsubs
pusha
mov
sbb
dec
shll
adc
jo
add
fs
add
cmp
stc
add
cmp
mov
sarl
mov
fldenv
dec
jbe
sbb
sub
sarl
std
mov
xor
test
pop
fwait
cmpsb
aad
inc
in
and
dec
insl
cltd
andl
push
outsl
lret
push
lds
pop
test
popf
or
test
cmp
mov
or
adc
fcomps
loope
add
xchg
mov
out
sti
push
xchg
popf
sbb
and
jno
lret
mov
das
icebp
push
push
or
fwait
push
sub
dec
push
int3
into
daa
xchg
mov
jae
in
sbb
and
stos
loope
xchg
lock
mov
mov
mov
insl
mov
inc
pop
add
lahf
mov
jbe
stos
aam
lds
gs
cmpsb
lock
adc
xor
xchg
or
pusha
popa
adcl
inc
jo
mov
push
inc
adc
and
imul
push
gs
loope
stc
pop
sub
add
push
jl
dec
lahf
das
fcompl
addl
jbe
mov
jg
inc
loop
and
and
ss
jb
and
ss
out
jae
sub
enter
mov
pop
mov
nop
and
test
pushf
in
adc
xlat
jmp
xlat
cmp
adc
repz
xchg
mov
xchg
cmp
mov
adc
popa
xor
inc
je
mov
pxor
pushf
mov
xor
add
jg
mov
pop
in
inc
pop
xchg
rcrl
fsubs
or
push
cmp
xorl
mov
mov
inc
add
out
mov
push
mov
ds
movsb
mov
jb
mov
dec
jns
mov
imull
out
inc
and
dec
xchg
incb
dec
cli
addr16
subb
or
mov
loopne
jp
xor
pop
jo
and
stos
xor
fbstp
and
arpl
clc
clc
push
inc
std
sub
insb
rorb
push
pop
clc
push
adc
fyl2xp1
outsl
add
push
in
xchg
mov
subl
fwait
inc
add
lods
test
mov
xchg
lret
mov
cmp
jge
dec
xchg
xor
sbb
cmc
mov
insb
mov
stos
mov
xor
cmp
cmpsl
bnd
nop
mov
ljmp
mov
test
jbe
mov
push
mulb
inc
xabort
std
cmc
mov
in
addl
mov
mov
or
push
ds
pop
leave
and
hlt
int3
ret
push
pop
nop
cvtdq2ps
fildl
and
nop
dec
pop
push
dec
inc
push
cs
adc
adcl
fisttpll
jb
std
xor
cmc
das
out
jp
xchg
sahf
and
add
aaa
pop
daa
outsl
loope
mov
mov
cwtl
cmp
xlat
xor
cmp
out
fcmove
fxch
scas
mov
jns
pop
sti
fisubrs
jp
xor
int3
jns
fcoml
jge
fsubrl
mov
insb
pop
push
icebp
pop
int3
repz
das
mov
cmp
push
outsb
add
mov
adc
sub
cli
lahf
mov
inc
cmp
imul
jge
popf
cli
pop
out
into
or
and
ja
movsb
mov
int
scas
mov
iret
xor
add
push
sub
dec
ret
sbb
and
xor
dec
jp
daa
neg
out
dec
jl
rorl
mov
popf
lds
lcall
add
dec
clc
add
jo
fs
xchg
mov
fisubrl
mov
in
lods
sub
push
xor
and
leave
in
fsts
jp
or
or
scas
sahf
sub
xchg
inc
mov
bound
rolb
and
xchg
lock
cs
fsubs
dec
sti
xchg
and
xor
sub
and
push
subb
adc
mov
sbb
test
jecxz
mov
inc
andl
in
sub
xor
inc
dec
movsl
push
lcall
xchg
aas
mov
mov
pop
fdivs
xor
push
icebp
outsb
and
fs
and
or
xchg
in
sub
sbb
cwtl
pop
clc
push
es
jb
lds
dec
outsl
mov
into
mov
xchg
loop
test
add
arpl
cmp
mulb
mov
gs
mov
lahf
out
insb
lds
lcall
fwait
and
or
sbb
jnp
mov
cltd
jmp
inc
or
pop
sub
adc
sbb
xchg
and
in
test
outsb
dec
pop
out
subl
push
xchg
sarb
stos
adc
mov
push
push
inc
test
insb
and
in
push
imul
cmp
dec
hlt
cmc
push
cmp
into
pop
stos
int3
xchg
aam
sbbb
xchg
test
ret
push
jae
mov
sub
inc
cmpsl
inc
mov
cs
scas
and
mov
pop
divb
pop
imul
lea
cmp
icebp
insb
jmp
out
pop
test
loop
cmp
fmull
scas
cmp
pushf
outsl
pusha
jl
dec
stc
lcall
shlb
or
push
jno
outsl
or
inc
nop
shlb
into
mov
scas
adc
dec
add
imul
xchg
add
cmp
mov
xchg
lret
or
aad
mov
xor
out
daa
jecxz
movsl
lods
push
lret
popa
std
pop
lods
adc
in
adc
cmc
pusha
mov
das
rcl
into
shll
inc
and
mov
int
dec
dec
jo
lea
push
jp
int3
sbb
mov
pop
lret
xchg
jp
push
jnp
lods
add
cmpsl
dec
outsb
pop
pushf
and
adc
pop
call
mov
mov
lds
in
pop
or
cmp
xor
leave
sbb
out
mov
rcrl
aam
cmp
jns
ss
idivb
cmc
fwait
mov
mov
arpl
dec
inc
sub
clc
adc
dec
loope
test
test
dec
fsubr
loopne
mov
push
sahf
inc
popa
jno
mov
repnz
dec
jbe
pop
jle
ds
mov
jge
pop
xchg
mov
mov
sub
pop
mov
xor
add
pop
inc
sbb
push
push
jo
jge
scas
lcall
fwait
jecxz
sub
daa
cmp
mov
jae
iret
mov
enter
cwtl
cmpsl
cltd
or
inc
mov
cli
and
movl
stc
les
pop
mov
movsb
daa
cwtl
xchg
sub
jp
rclb
cmp
xchg
mov
aam
test
ljmp
out
mov
push
out
adc
inc
jmp
push
or
xor
repz
mov
lods
push
sub
inc
push
sub
jb
in
pushf
add
xchg
leave
sbb
lods
cmp
cmp
insl
push
and
and
jmp
add
pop
mov
lock
shrb
dec
mov
std
dec
push
lods
in
dec
lcall
mov
fwait
ljmp
xchg
pop
incb
mov
nop
sarl
sbb
cmpsl
and
stos
jns
xlat
filds
mov
mov
notb
lods
xor
jae
or
in
adc
mov
lods
fcoml
jmp
mov
test
aas
stos
add
pop
mov
pop
sbb
mov
mov
ja
fsubrl
sub
and
enter
inc
bound
sub
loop
flds
rolb
data16
jge
mov
loopne
inc
cmp
shrl
sub
push
mov
xchg
imul
lods
sub
fstl
in
xor
pop
cltd
and
in
xor
add
pop
jecxz
push
es
add
cmpb
inc
fnstenv
bound
and
inc
sub
mov
cmp
fdivrl
sub
into
ficomps
jno
mov
inc
sub
dec
pop
jp
and
subb
lds
inc
ret
cmp
push
mov
test
shll
js
cmp
rorb
jns
sub
mov
jo
inc
sub
imul
mov
fnstsw
adc
jne
sbb
adc
repz
mov
shll
lcall
aam
xor
test
outsl
ja
aas
sbb
push
sahf
or
psrlq
mov
mov
out
std
mov
fbld
or
cld
sbb
les
sub
lock
in
gs
or
add
lock
mov
mov
cmpsb
jbe
jmp
dec
mov
lahf
into
mov
das
sub
out
and
adc
scas
push
insl
das
sbb
inc
in
xchg
cmp
push
cmp
movsb
add
repz
adc
mov
fstl
inc
sub
add
fcmovne
xchg
popa
iret
dec
jae
jns
into
push
into
add
movsl
imul
mov
ret
pop
fdiv
push
and
stc
std
mov
cs
loopne
ret
xor
outsl
mov
dec
loope
mov
arpl
mov
int3
in
lcall
mov
jmp
stos
pusha
subb
cltd
jmp
xor
mov
insl
ror
mov
shl
push
and
cltd
sub
int3
fistpll
mov
jae
sbb
pop
movq
inc
cwtl
ficoml
push
std
sub
aam
xchg
sbb
fsubrp
mov
lods
in
inc
test
mov
and
cld
sbbl
cmpsl
pop
js
sub
adc
jno
xor
push
ret
pop
or
pop
xchg
xor
movl
and
add
fwait
inc
mov
lds
cmp
jle
out
es
fninit
test
pop
pop
jne
lea
subb
out
fwait
dec
push
lret
cmc
insl
cmp
mov
sbb
cmpsl
push
stos
xchg
sbb
sbb
pop
push
mov
sbb
stos
gs
add
fwait
dec
adc
sarl
xchg
insl
add
stos
and
jp
shrl
sbb
movsb
inc
xor
and
jno
add
jb
in
orl
pushf
mov
nop
dec
mov
sub
rep
imull
pop
sbb
psubw
int
repz
sbb
clc
sbb
test
mov
in
pushf
add
rorl
and
out
pop
pop
xchg
fcomps
stos
into
nop
iret
les
push
mov
dec
xchg
adc
adc
add
test
xchg
je
or
mov
fsubs
out
cmp
mov
inc
push
aam
sub
dec
ret
aaa
bound
jmp
int3
pop
iret
push
push
add
xchg
mov
jbe
jb
fidivl
push
stos
mov
or
sub
xor
fidivrs
sahf
inc
pop
mov
mov
addr16
inc
addr16
inc
xor
mov
pop
icebp
aad
aad
jno
movsl
push
jecxz
sub
jmp
xchg
scas
je
xor
leave
and
sub
inc
faddl
mov
mov
aas
sbb
fbld
call
mov
mov
shlb
xor
es
iret
jne
das
xchg
inc
fidivrl
les
jl
or
push
push
xor
sbbl
xchg
jmp
jb
pop
mov
mov
ret
shll
cli
pop
pusha
pop
push
or
xor
adc
inc
dec
gs
sahf
outsb
and
sbb
jl
hlt
hlt
sub
jb
xchg
jae
inc
fsubl
mov
mov
enter
xor
or
bound
ljmp
sbb
cmpl
enter
push
cmp
out
xchg
push
bound
and
ja
jno
sarl
ds
daa
gs
int3
xchg
sub
sub
test
ret
sub
mov
cmp
cmp
int
pusha
js
cmpsb
or
inc
mov
or
leave
pushf
ficoml
cmp
in
jle
sub
mov
mov
ficompl
sti
jno
aas
cmp
ret
lds
call
iret
cmp
sbb
push
pop
mov
sbb
or
fs
xor
push
dec
fs
adc
or
decb
sbbb
aad
or
xor
cs
divb
cmp
shl
in
inc
xchg
push
cmp
int3
dec
jns
lea
data16
mov
icebp
and
adc
fimuls
dec
loopne
dec
and
inc
flds
pop
aad
rclb
cmc
push
pop
clc
sbb
bound
sub
inc
das
ljmp
test
sbb
lea
sub
push
jo
push
pop
scas
push
push
movsb
pusha
sti
dec
fistl
ja
aas
jnp
dec
mov
hlt
adc
fbld
pop
dec
pop
xchg
mov
and
popa
fsubrp
imul
lds
mov
adcb
mov
inc
cs
movsl
test
xor
mov
mov
in
mov
and
dec
inc
lock
sarl
and
mov
xchg
sbb
dec
xchg
imul
xchg
pop
jp
mov
mov
popa
movsl
lock
add
xchg
add
or
jge
dec
je
dec
jecxz
xor
mov
xor
mov
or
adc
pop
jmp
leave
push
es
out
jge
xchg
movsl
orb
daa
sbb
mov
push
jp
into
ljmp
sbb
or
mov
aaa
dec
out
pop
mov
test
xchg
fistpl
sbb
gs
or
sbb
mov
test
adc
or
mov
and
pop
and
fsubrl
or
sbb
push
cmp
xchg
or
mov
mov
jb
add
sbb
rcl
lods
movsl
fcmovu
pop
and
sbb
arpl
sbb
pop
int3
in
mov
pop
scas
jne
xlat
std
repnz
pop
pop
push
das
xor
dec
shll
dec
test
xchg
mov
scas
inc
fld
mov
push
rcrl
lahf
inc
xlat
jmp
sub
scas
adc
mov
rorl
add
das
enter
mov
pop
dec
and
in
out
icebp
push
into
dec
mov
lret
out
mov
mov
insb
dec
sbb
cmpsb
jle
sub
or
cmp
addl
push
sub
or
mov
daa
mul
push
dec
xchg
adc
sub
pop
xchg
outsb
bound
jp
repnz
sti
repz
cmp
mov
mov
lahf
leave
adc
push
in
les
bound
pusha
cmpl
jne
and
push
insb
add
sbb
jo
aam
jmp
push
js
movsl
and
test
jo
in
dec
fmul
mov
popf
inc
and
test
fists
mov
sub
or
fdivrs
push
ret
das
fimuls
ret
test
and
add
int3
sbb
inc
data16
dec
lods
scas
mov
fsubl
mov
add
lcall
push
mov
lea
stc
cmp
in
fimull
pop
mov
scas
xor
js
scas
mov
xchg
mov
fsubrs
outsl
in
inc
jmp
inc
push
enter
push
sbb
jle
push
loop
jns
nop
push
test
pop
lret
or
in
shrb
sbbb
daa
addr16
cmp
mov
ret
loope
scas
in
xchg
xor
gs
mov
hlt
fwait
mov
movsb
fisubs
mov
data16
jb
lret
jae
cwtl
sub
cmp
jl
push
fsts
outsb
add
cmp
cmp
mov
cmc
imul
push
pop
inc
dec
mov
or
xor
add
xchg
insl
xchg
dec
sbb
mov
inc
push
test
rorl
shrb
adc
or
sahf
imul
scas
data16
jmp
push
xchg
sbb
fs
lahf
enter
pusha
mov
and
stc
incb
pusha
lods
sub
test
xchg
xor
sub
std
xchg
subb
fs
mov
push
cmp
cwtl
push
sbb
xchg
scas
mov
ja
push
pop
sbb
cwtl
push
out
aaa
pop
jns
stc
nop
sbb
adc
jmp
repnz
push
jbe
xor
fldenv
cmp
mov
dec
out
dec
test
scas
ds
movsl
mov
adc
mov
hlt
shrl
loopne
ss
mov
push
aad
ljmp
mov
test
adcl
movb
jl
push
or
pop
jae
pushf
movsl
mov
mov
push
addl
sti
xor
mov
mov
fdivrp
adc
and
pop
cmovne
lds
pop
push
das
inc
movsb
push
imul
sbb
repnz
or
ror
pusha
inc
lods
xchg
jb
xchg
mov
mov
xor
inc
xor
and
aam
lret
mov
imull
xchg
shlb
sub
jbe
outsb
sbb
add
rcrb
add
sarl
enter
mov
cmc
and
jp
xor
jmp
cmp
mov
push
or
inc
cmc
hlt
jmp
jg
test
mov
mov
and
in
mov
xlat
ss
sub
sbb
adc
daa
imul
xchg
cmp
js
lret
push
push
movsl
dec
jns
insb
scas
lea
mov
sbb
push
out
mov
cmp
push
mov
es
ds
sbbl
int
outsl
xchg
pop
or
pop
xchg
aad
push
or
aaa
out
addr16
pop
int
ret
mov
fs
leave
clc
subb
fmuls
mov
test
push
ret
mov
call
sub
enter
mov
aam
data16
mov
je
fwait
stos
fwait
inc
shlb
addr16
mov
fstp
cmpsl
adc
push
incb
add
mov
or
stos
fnsave
imulb
cmp
ret
dec
stc
inc
adcl
dec
jno
adc
push
arpl
sub
fstps
movsb
dec
pop
adc
ds
cmp
lods
cwtl
sub
fsubrl
adc
cwtl
sbb
movsl
enter
lods
mov
lret
movsb
out
inc
cmp
in
test
std
sub
fs
lock
push
icebp
mov
xchg
mov
test
into
and
ljmp
in
enter
mov
sub
lret
cmpsl
test
std
aam
test
push
xchg
sbb
fiaddl
cmc
xchg
sbb
das
enter
jmp
pminsw
xchg
fwait
out
sub
cmpsl
push
mov
imul
mov
mov
mov
imulb
pop
push
jecxz
jg
adc
fadds
jge
fcmovne
cmp
push
sub
xor
push
xchg
cld
in
movsb
mov
aam
mov
xchg
cmp
inc
in
jns
das
cmp
jl
loop
xchg
test
xchg
popa
dec
mov
jae
add
iret
inc
xchg
loopne
and
pusha
loopne
dec
sahf
mov
sub
mov
repnz
into
int3
or
lret
hlt
inc
add
jb
dec
stos
das
sti
inc
into
pop
pop
mov
movsl
iret
testl
mov
jnp
sbb
dec
enter
sbb
xchg
stos
pop
shrb
outsl
or
sbb
or
fisttps
push
scas
jo
mov
cmp
jne
imul
and
cmpsl
push
inc
stos
lods
xlat
repz
mov
testb
sub
sbb
xor
sub
in
sub
inc
inc
shrb
gs
aam
loopne
dec
mov
cmp
les
fcoml
popf
sub
ret
hlt
into
mov
leave
fsubp
insb
jno
pop
rcll
pop
sub
loope
insb
adc
enter
mov
and
xchg
pop
ficoms
stos
cmpsb
cmp
roll
push
or
inc
lahf
sub
xchg
add
out
fwait
sub
sbb
sub
lds
lahf
pop
jmp
mov
test
aam
push
in
dec
test
push
or
ret
mov
jnp
and
je
mov
cmp
adc
adc
out
dec
ret
inc
dec
mov
cmpsl
data16
ss
jge
add
mov
addr16
jmp
inc
sub
add
sbb
icebp
fcomps
lods
shl
out
pop
push
leave
cli
dec
xchg
and
outsl
push
lahf
lods
jmp
xchg
dec
and
dec
js
or
enter
idiv
sbb
aas
mov
xor
enter
and
adc
cmpsb
jb
mov
jge
mov
pop
cmp
cmp
mov
mov
mov
xlat
pop
jo
xor
push
add
xor
or
jb
or
push
pusha
insl
pop
fcoml
icebp
mov
jnp
enter
fld
xor
js
push
push
imul
sti
or
fisttpl
filds
mov
or
rclb
push
and
jg
outsl
mov
dec
and
aas
addr16
adc
lods
jae
sbb
fldenv
cmp
push
sar
inc
shll
mov
mov
shl
adc
lods
cltd
bound
add
test
mov
test
add
or
inc
push
push
pop
addr16
sbb
push
mov
into
mov
cmp
sbb
cld
out
xchg
push
les
adc
inc
fstp
je
push
std
pop
iret
xor
add
mov
xchg
pop
pusha
cmc
xor
sbb
push
xor
out
inc
ljmp
push
sbb
mov
inc
xor
leave
test
fbld
iret
inc
popf
pusha
js
or
dec
bswap
jg
mov
ss
clc
cmp
push
push
xor
lahf
xchg
js
xchg
push
push
lea
stos
inc
aas
hlt
mov
push
add
xchg
iret
test
int
mov
and
mov
stos
popf
repnz
or
jne
dec
push
mov
push
or
cmp
into
jmp
mov
or
mov
jp
lret
cmc
cltd
mov
adc
xor
or
xorb
mov
pusha
stc
cli
ret
jb
jge
pop
mov
add
mov
adc
add
sub
test
cmpsl
mull
xor
pop
je
pop
pop
push
decl
pop
sbb
stos
or
jae
lahf
push
in
cmpsl
int
mov
push
ja
and
push
ja
inc
fwait
cs
xor
push
add
lcall
mov
mov
adc
stos
push
scas
pop
adc
lods
and
sbb
push
lods
stos
test
mov
mov
push
mov
fs
arpl
adc
out
pop
daa
stos
cltd
or
outsb
aad
std
mov
lahf
xchg
mov
je
movsb
pop
dec
imul
mov
jb
nop
dec
jl
xor
frstor
xor
cmpsl
lods
stos
adc
das
clc
pusha
pop
and
jmp
lahf
mov
stos
into
aam
adc
out
je
frstor
cs
mov
or
jle
bound
cltd
xchg
fs
adc
adc
jbe
loop
cmpsb
or
xchg
lds
xchg
fildl
jmp
jbe
rclb
xchg
movsl
pop
dec
les
out
inc
dec
jg
dec
xor
lcall
rorb
out
push
jb
xchg
data16
jns
inc
movsl
dec
loope
rcrl
cmp
cmp
ret
and
leave
adc
push
cmp
pop
into
mov
sub
sti
mov
pop
adc
pop
push
mov
inc
scas
gs
popf
push
sbb
into
or
popf
jp
cmpsb
mov
pop
outsl
cmpsb
jnp
mov
ds
orl
inc
test
inc
scas
mov
mov
mov
jb
dec
loop
test
mov
out
sbb
fisubrl
aas
mov
and
xchg
push
inc
push
mov
bound
imul
and
leave
shl
sti
xchg
jb
lds
lahf
stc
imul
pop
mov
xor
sbb
leave
jmp
xor
or
lcall
clc
adc
dec
xlat
xlat
ret
and
jle
inc
lods
sbb
inc
xchg
xchg
push
clc
stc
hlt
push
adc
loop
jp
pushf
test
adc
xor
jmp
jno
mov
movsl
cmp
jmp
imul
or
int
xor
push
mov
inc
outsl
push
loopne
cmp
dec
cmp
jecxz
daa
xchg
pop
mov
jp
sbb
jae
dec
adc
mov
and
pop
ss
adc
fs
sbb
jecxz
xor
mov
pop
loopne
lret
adc
xor
sub
xchg
int3
test
les
xchg
imul
inc
cltd
inc
or
sub
clc
fsubl
cmp
loope
cmpsb
dec
and
stos
dec
sbb
cmp
jae
xchg
adc
sbb
sub
std
add
movsl
xor
inc
jne
fisubl
hlt
or
xchg
insb
lods
push
sub
pop
repnz
data16
imul
cld
lea
notl
pop
mov
gs
lods
mul
imul
fwait
imul
pslld
cmp
nopl
andl
mov
in
imul
xchg
mov
sub
cs
jno
stos
test
mov
xor
jle
and
push
test
inc
dec
mov
sub
loopne
leave
fadds
mov
inc
out
filds
test
jns
shlb
pop
dec
push
aam
pop
test
xor
sbb
outsl
shlb
adc
in
outsb
outsl
testl
dec
jno
fsts
mov
jle
mov
jp
pop
cmp
xlat
inc
out
xchg
fsubrl
push
jecxz
mov
cli
je
dec
int
stos
dec
and
repnz
sti
lret
cmpsb
inc
outsb
dec
push
inc
es
ss
push
xchg
sub
rcr
int3
ds
cmp
outsl
push
or
push
lcall
cmp
mov
nop
add
sarb
or
pop
js
xchg
or
out
aaa
push
jg
ret
mov
stc
jae
mov
xorb
or
xchg
test
mov
dec
and
jmp
stos
push
lds
push
int3
ljmp
scas
add
pushf
dec
int3
mov
dec
lret
sub
push
iret
out
inc
jg
cli
das
jg
adc
aaa
sub
data16
jnp
push
lock
cmp
bound
jp
ror
inc
shlb
test
fcompl
and
push
push
xchg
xor
cmpsb
mov
sbb
movsl
jmp
fcmovbe
in
or
mov
mov
mov
je
add
sti
pop
push
pop
stc
adc
jecxz
fucomip
mov
pop
cmpl
sbb
fiadds
jae
dec
add
jo
xchg
test
iret
daa
incl
mov
or
mov
outsl
mov
inc
mov
xlat
xchg
ja
aaa
and
mov
rclb
sbb
pop
adc
mov
push
in
movsl
sbb
or
xchg
out
ss
xchg
and
scas
xchg
gs
movsb
push
mov
jae
cmpsb
loope
push
jnp
iret
mov
xchg
xor
mov
mov
push
xchg
mov
loope
inc
inc
and
mov
jns
lret
lds
popf
sub
adc
jnp
repnz
loop
inc
mov
dec
mov
push
cltd
loopne
dec
mov
orl
fmulp
out
mov
out
movl
outsl
mov
in
adc
je
stos
insb
xchg
inc
cmpl
cltd
add
add
mov
push
mov
cmpsb
insb
dec
sarb
xchg
dec
bound
push
sub
es
stos
adc
fadd
lds
fistpl
push
pop
fistpl
aaa
pop
fimull
movsb
dec
lock
push
inc
lods
ja
cli
shl
pop
xchg
mov
imul
pop
fnsave
test
sub
adc
pushw
call
adc
mov
ss
pop
outsw
movb
dec
test
js
and
jae
inc
inc
test
cli
sub
xchg
call
pop
fwait
movsl
lods
push
lock
test
sahf
dec
out
xor
loop
int3
jns
call
testb
sub
cmp
jp
shl
and
test
in
cli
cltd
cwtl
in
or
fdivl
test
dec
mov
inc
add
cmpsb
aam
cmp
mov
je
add
xor
shll
xor
lret
inc
fists
lods
lock
sarb
pop
cmp
in
add
xchg
stc
jecxz
push
ss
pop
imul
and
out
pop
sbb
data16
mov
lahf
and
inc
cmp
push
lret
mov
fwait
and
div
inc
inc
dec
lcall
sub
out
repz
dec
pop
ret
jp
pop
xchg
and
add
xchg
clc
add
lcall
mov
inc
mov
lods
in
push
push
sbb
jl
xor
dec
or
mov
loop
push
je
js
adc
pusha
aas
pop
jo
movsl
pop
in
in
fists
mov
ds
ss
or
ret
je
lock
lock
push
dec
mov
nop
lods
add
adc
imul
jnp
js
dec
mov
stc
and
jnp
lds
std
mov
ficoms
insl
js
int3
repz
imull
mov
add
pop
rorb
sahf
xchg
dec
push
sub
fidivrs
cld
ss
cwtd
pop
or
mov
or
push
sub
shl
xchg
or
fwait
mov
pop
lods
sti
iret
xlat
ja
sub
sub
daa
insl
leave
dec
mov
mov
dec
pop
lret
push
stc
jne
push
fdivs
inc
jg
inc
xor
les
push
ret
adc
pushf
sub
mov
jmp
sbb
jle
xchg
add
in
or
pop
xchg
loopne
int
xchg
leave
push
pop
gs
or
in
inc
cmp
jmp
mov
jo
cmp
fists
scas
or
pop
call
sahf
int
in
cmpsl
lea
arpl
mov
imul
pop
lahf
cmpsb
sub
scas
pop
repnz
out
jo
mov
out
clc
xchg
dec
inc
mov
test
pusha
xor
stos
dec
mov
inc
add
mov
fcmove
lods
test
fwait
das
out
xlat
movsb
xor
ja
jnp
cbtw
sahf
pop
movsl
call
and
insb
cltd
cs
clc
call
dec
xor
mov
loopne
js
scas
and
push
and
daa
jge
push
cld
xchg
fs
out
and
mov
jbe
and
lds
xchg
das
jbe
mov
negl
add
jno
adcb
es
adc
pop
jno
fsubs
cmpsl
pushf
dec
fwait
addr16
pop
and
or
sbb
dec
orl
push
push
mov
jmp
push
cmp
push
pop
pop
fs
cmc
sbb
jp
aad
aaa
loop
sbb
lock
pushf
xor
cmp
mov
lfs
cmp
lret
lods
push
and
mov
std
dec
pop
repz
and
popa
jne
mov
pop
jge
fdivr
mov
xchg
in
lods
insl
xor
filds
daa
xchg
jb
xchg
fsubp
inc
xor
mov
add
lock
insl
mov
ficompl
cmp
pop
fs
call
jnp
jge
sbb
mov
cltd
xchg
pop
add
mov
jnp
testb
push
ficoml
cmpsb
jns
push
jg
jnp
stos
pop
adc
push
fisubrs
in
cmp
cs
aam
push
pop
fimull
sbb
data16
xchg
pop
jnp
cs
xor
addr16
mov
add
lds
scas
xor
incb
or
mov
je
ret
ljmp
popa
js
ret
mov
push
negl
and
sub
scas
mov
mov
cmc
mov
in
das
stos
pop
inc
inc
test
sub
jmp
push
fwait
sbb
daa
mov
rorb
addl
xor
sub
and
mov
movsl
scas
out
adc
insb
imul
mov
mov
inc
push
lea
cli
jae
cmp
mov
test
cwtl
and
xchg
sahf
ljmp
inc
stos
out
lods
nop
add
jmp
pusha
mov
add
xlat
imul
sbb
cmp
stos
gs
movsl
inc
jg
dec
js
push
in
popf
sub
inc
jno
ss
mov
iret
std
lock
cli
movswl
jmp
adc
cwtl
js
test
cmp
lret
scas
inc
pop
mov
mov
mov
push
mov
rorl
push
xlat
cs
mov
adc
loopne
xor
adc
lock
push
aam
cmc
mov
out
repz
imul
sbb
add
cmp
mov
orl
arpl
mov
dec
jge
xchg
ss
dec
test
mov
xchg
aas
xrelease
ffree
push
sbb
jno
add
fsubs
adc
pop
lds
daa
sahf
pop
dec
dec
cmc
loop
lods
sbb
xor
mov
sbb
mov
aad
in
call
pusha
sti
xlat
sub
clc
and
push
lret
ljmp
xchg
mov
mov
push
cltd
je
cli
pop
lret
addb
pop
sbb
add
inc
pop
xor
sub
mov
add
sub
push
insb
mov
divb
mov
fcmovbe
dec
or
sbb
xor
xchg
fsubr
sbb
out
daa
fnstcw
in
cmc
push
dec
jg
aam
es
loope
add
cld
jns,pn
cmc
xor
pop
sbb
xor
jb
loop
push
cmpsb
dec
movsb
repz
in
into
cmp
jb
sbb
mov
gs
out
pusha
ds
jg
lahf
sbb
lar
testb
leave
mov
mov
push
push
sbb
add
lcall
hlt
xchg
dec
mov
sub
lcall
stos
loop
popf
push
test
je
inc
ja
cmp
pop
mov
push
mov
mov
mov
adc
push
jle
rol
pop
out
sub
leave
repz
xor
cmp
fucomi
das
jnp
lock
daa
mov
imul
mov
sub
sbb
jg
gs
call
test
stos
cltd
insb
cmc
jg
ret
fisttps
pop
iret
loop
inc
pop
movsb
enter
push
adc
jge
out
daa
xor
and
daa
push
lods
cmp
sbb
fcmovnb
pop
insl
out
mov
or
mov
inc
aam
outsb
dec
sub
scas
lahf
xchg
pushf
flds
sub
aas
push
rolb
sbb
sbb
ficomps
imul
lods
testb
call
mov
jmp
push
fcmovnu
pop
sub
inc
lret
aaa
mov
ss
mov
mov
inc
or
out
lods
inc
add
aam
sub
jnp,pt
jmp
pop
popf
call
jns
das
leave
mov
imul
ja
lods
idivl
hlt
mov
or
sbb
inc
call
sub
dec
adc
loop
mov
add
jbe
iret
sub
test
mov
push
pop
adcb
fadds
subb
inc
and
lds
sahf
popf
iret
cli
stos
imul
popf
jg
push
push
adcb
cmp
stc
enter
xchg
cmp
push
insl
xchg
daa
mov
les
mov
stos
daa
inc
lret
add
hlt
add
stc
addr16
jae
jmp
enter
xor
es
sub
mov
xchg
adc
insb
stos
das
mov
cmpsl
push
fs
push
sub
shlb
ficompl
dec
xor
pusha
hlt
sbb
push
imul
shlb
call
pop
negl
mov
inc
in
lods
repnz
nop
fstp
cmpsl
inc
sahf
test
out
ret
scas
or
mov
je
cmc
pusha
dec
add
dec
scas
bound
lret
hlt
mov
mov
mov
nop
push
push
add
sub
dec
adc
fst
add
and
jb
cmpsl
popf
jp
out
adc
add
scas
pop
ret
insb
push
mov
jle
pop
lods
adc
jae
mov
arpl
push
push
mov
sub
and
cld
ret
dec
cmp
dec
push
jno
or
and
dec
add
mov
push
cs
add
nop
mov
cmc
stos
xchg
xchg
cmp
push
enter
jno
aam
sbb
mov
xor
inc
repnz
fiaddl
jb
push
pusha
dec
or
xlat
imul
dec
pop
cli
cmpsb
cli
int3
jb
ja
adc
iret
jb
xor
or
pop
lret
verr
cltd
jb
dec
mov
aam
inc
and
iret
popf
sub
xor
push
fdivrl
or
scas
inc
mov
pop
in
mov
fldenv
and
lahf
jb
das
jno
mov
scas
xor
orl
je
cld
jbe
ja
mov
push
cmp
lea
nop
sub
adc
push
jbe
je
mov
cmp
dec
aas
inc
repnz
dec
jne
cmpl
or
sbb
stos
nop
jns
dec
hlt
pop
mov
or
push
iret
out
mov
mov
bound
jnp
adc
out
mov
adc
pop
and
aaa
fs
xchg
repnz
mov
xor
push
scas
nop
repz
push
lds
ljmp
pop
sbb
divb
cmp
dec
ja
sahf
int
cmp
outsb
add
aam
notb
pushf
popf
dec
nop
and
fildl
add
testl
xor
and
pop
mov
shr
jmp
lea
frstor
dec
sub
dec
jecxz
andl
sub
loop
sti
aaa
xchg
xchg
push
sbb
xor
dec
addb
sub
xor
jp
imul
or
stc
test
cmp
sbb
xchg
xor
inc
xor
fistpll
dec
mov
xchg
add
sub
inc
adc
lea
das
mov
jle
daa
ret
dec
jo
icebp
dec
push
sub
insl
cmc
lahf
xor
clc
pushf
arpl
int
jp
in
in
addb
outsl
sub
decl
daa
loop
icebp
in
add
test
gs
or
pop
ja
cmpsb
sbb
xor
xchg
hlt
mov
lret
in
icebp
adc
sti
cmp
insb
and
icebp
xchg
xchg
mov
cmp
xchg
push
push
int
and
lcall
xchg
jnp
pushf
jmp
mov
mov
xor
jle
cmp
mov
mov
sbb
imul
cmp
push
enter
and
xchg
aas
daa
stos
add
cmpsl
push
insw
popf
cwtl
sub
loope
mov
mov
les
cmp
xchg
dec
rcrl
mov
add
imul
inc
sbb
arpl
jae
and
lods
xor
and
or
add
xor
push
shll
xchg
shl
mov
mov
jle
aad
sti
mov
out
mov
jb
mov
pop
jmp
dec
mov
int3
sbb
leave
fists
jae
aaa
push
test
cltd
rcrl
imul
jmp
mov
roll
or
mov
sub
xor
data16
outsl
inc
cmc
fwait
in
cwtl
lret
test
lcall
or
mov
testl
xchg
pop
fidivrl
lcall
xor
and
fs
mov
xchg
mov
sub
int
xchg
sbb
imul
pop
lcall
mov
jnp
push
ret
or
lahf
mov
fdivrp
daa
jns
mov
jecxz
test
test
fdivrs
lea
xchg
inc
repz
cmp
sarb
orb
xchg
push
fs
and
xor
push
mov
mov
ljmp
pop
pushf
add
cmpsb
jno
add
sbb
cmpsb
push
outsb
dec
inc
imulb
test
dec
subb
repz
repz
mov
lahf
mov
push
repz
xor
fldl
jmp
xor
aam
fbstp
std
push
xor
data16
icebp
std
jne
mov
iret
pop
mov
fistpll
out
jno
loopne
sbb
cld
jnp
dec
mov
aaa
insb
and
testb
dec
cmpsl
cmp
cs
xchg
xor
adc
cs
and
jns
add
push
pop
std
roll
in
mov
cwtl
mov
ret
cmp
les
fldpi
adc
jo
std
pusha
and
out
add
add
ret
and
stc
das
outsl
out
push
pop
in
sarl
jns
int3
pop
sbbb
fwait
in
dec
push
cmp
ret
dec
jge
insb
add
shrb
cmc
jnp
and
scas
push
ret
xchg
jo
dec
mov
dec
pop
sbb
loop
pop
fsubrl
ss
adc
dec
ja
dec
adc
icebp
mov
pusha
push
test
sbb
xor
mov
ror
jno
mov
push
lds
in
jnp
mov
xchg
aad
mov
lcall
shrb
shlb
inc
adc
fcomps
test
sub
push
pop
stos
pop
cs
add
in
jnp
cmpsl
aaa
xor
sub
sbb
pusha
mov
pminub
xchg
notl
xchg
xchg
adc
xchg
and
dec
jns
mov
arpl
pop
mov
aam
je
push
mov
cs
jle
jno
ret
push
and
aad
test
cmpsl
pop
popa
fs
push
pushf
es
jno
jmp
jecxz
lods
mov
repz
cmp
pushf
jb
les
push
lea
mov
fdivs
inc
lahf
movsb
pushf
dec
iret
in
cmp
cmp
outsb
int
jbe
jp
push
xor
pop
add
push
pop
cltd
and
mov
xchg
adc
stos
sbb
lds
sub
and
pop
add
add
lds
cmpl
add
dec
test
shr
arpl
xchg
mov
pop
jne
xor
mov
cmp
test
test
sub
adc
sbb
lods
inc
cld
dec
hlt
and
das
dec
mov
dec
aam
lcall
dec
dec
aam
mov
sbb
out
and
int
addr16
into
in
jge
lahf
imul
je
fcoml
data16
stc
mov
mov
scas
pop
inc
lret
or
jo
mov
xor
loop
sub
cmp
xchg
xchg
in
imul
or
cmpsb
mov
roll
das
pop
loope
dec
dec
outsl
lods
adc
jle
xor
pop
popa
sbb
cwtl
pop
aas
mov
dec
jae
nop
add
or
sub
sub
jecxz
sub
mov
push
inc
pop
mov
gs
ljmp
cmp
das
sub
scas
dec
mov
cs
lcall
jecxz
cmp
add
int3
faddl
pushf
aam
fisubrl
ja
ret
xchg
jge
notl
sub
jnp
mulb
insb
sahf
xchg
sbb
push
push
out
outsl
sti
push
push
add
inc
cmp
pop
popa
and
jb
js
cmp
sub
iret
dec
mov
sbb
nop
ret
and
xlat
inc
fistps
int
mov
in
mov
inc
out
inc
adc
mov
push
xchg
dec
stos
pushf
xor
add
data16
jbe
inc
stos
inc
je
mov
jno
or
arpl
mov
jmp
dec
mov
mov
ret
inc
lds
jo
push
xchg
push
movsl
fsubrp
aaa
shlb
insb
and
sbb
shlb
enter
or
gs
fxch
dec
mov
push
int3
pop
outsl
dec
adc
ljmp
inc
xor
ret
xchg
fstl
and
dec
mov
pushf
loop
dec
mov
int
or
addr16
inc
xchg
xchg
sbb
push
shl
dec
loopne
popf
xchg
cli
add
sbb
jmp
std
cmp
xchg
cli
jb
sbb
insb
adc
dec
lret
movsl
mov
fldt
into
data16
inc
add
xchg
std
or
cmc
dec
mov
aas
xchg
sub
xchg
pushf
pop
sub
jmp
adc
daa
fisubrl
mov
add
dec
xor
push
xor
mov
xchg
inc
pop
jecxz
push
sahf
test
lret
sub
xlat
adc
and
repz
mov
movsl
jle
mov
test
cwtl
xchg
aam
pop
mov
xchg
adc
fstpl
hlt
ret
movsb
iret
roll
dec
mov
jge
out
and
jbe
dec
fdivrl
cmp
cmp
aam
or
xchg
mov
push
ja
lea
ja
fldt
adc
mov
ss
or
add
xchg
test
or
push
mov
adc
pop
push
aad
add
aas
and
add
adc
insl
notl
mov
or
mov
insl
ret
mov
adc
jae
arpl
ret
imul
lea
xor
test
es
inc
shrb
sbb
xor
imul
mov
jmp
into
jnp
pop
in
stos
cwtl
dec
aad
pushf
push
gs
pop
int3
xchg
call
in
jge
jno
sbb
jbe
pop
daa
push
std
mov
mov
push
xlat
mov
sarl
push
stos
jo
add
mov
aaa
popa
lret
dec
jl
addl
jecxz
cli
or
lahf
mov
add
outsl
pop
jnp
shll
cmpsb
fidivl
scas
das
add
in
mov
mov
stos
aam
mov
cmp
xor
mov
je
movb
lahf
pusha
or
sub
movsb
push
adc
leave
loope
mov
into
jle
scas
decb
add
stc
pop
mov
mov
mov
mov
cmpsl
lret
dec
aas
ret
jp
in
fnsave
mov
mov
es
outsb
lds
daa
sub
mov
pop
push
pop
inc
das
aas
jge
mov
sahf
mov
inc
adc
fwait
and
jmp
rol
popa
or
push
shr
mov
iret
aam
ljmp
je
shlb
data16
mov
sbb
mov
pop
icebp
test
xor
push
cmp
and
mov
mov
jg
sahf
lret
jg
push
mov
jae
int3
out
dec
pusha
fimuls
mov
es
adc
lea
cmp
imul
push
xor
push
fldenv
daa
out
mov
fmuls
inc
and
mov
pusha
inc
ds
jmp
mov
xlat
in
dec
loopne
les
imul
and
cmpsl
dec
xor
adc
aas
inc
aas
scas
clc
adc
test
imul
mov
jl
std
jl
mov
mov
rclb
cmpsl
fcmovnb
push
pop
dec
and
into
ljmp
sti
icebp
outsl
mov
idivb
dec
nop
movsl
adc
mov
pop
cmpsl
cmp
les
rcrb
outsl
cmp
adcb
pop
leave
outsb
pop
fisttpll
or
jo
add
fimull
enter
dec
push
xlat
adc
sub
add
mov
outsb
ret
xchg
inc
es
movsl
mov
pop
dec
mov
xchg
jge
lcall
movsb
sub
pop
lods
js
stos
fsubp
mov
gs
pop
loop
or
add
fdivs
add
push
daa
gs
jmp
xchg
mov
mov
loop
pop
fists
test
mov
sub
into
out
lret
sbb
cmpsl
and
and
jle
in
lods
push
rcrl
mov
lods
xchg
mov
jge
xor
inc
test
loope
mov
dec
subb
and
int3
sub
or
cli
push
push
or
inc
fidivs
mov
xchg
mov
aas
int
je
jl
pop
ja
mov
test
mov
pushf
jg
mov
inc
test
lretw
clc
lock
push
into
lock
clc
push
jb
dec
push
cmpsl
stos
lods
or
pop
xor
or
xchg
inc
out
addr16
in
mov
in
xchg
push
mov
jbe
sbb
or
push
out
sub
sub
jae
test
push
popa
and
or
jge
xor
push
mov
sub
mov
inc
dec
ljmp
int3
push
aam
aas
dec
fwait
test
imul
mov
sub
hlt
aaa
mov
aam
and
sub
scas
test
pop
mov
shl
test
add
fwait
xor
mov
imul
cld
inc
jbe
mov
push
pop
call
popf
and
pop
movsl
xor
fmuls
mov
sahf
ret
adc
cmp
cmp
loope
in
test
test
cmp
mov
inc
fdivrl
cmp
outsb
mov
sbb
popa
nop
popa
iret
les
and
sarb
pop
call
xlat
outsl
arpl
mov
pop
jb
popa
pop
ret
divps
call
in
mov
and
xchg
adc
mov
cmp
bound
mov
int
stos
scas
adc
mov
dec
xchg
jecxz
andb
ret
or
mov
nop
mov
dec
adc
cwtl
xchg
add
dec
adc
push
or
cmp
js
push
sub
ds
lds
fwait
cltd
add
mov
mov
sbb
push
loopne
movsl
jmp
mov
mov
cmp
and
insb
jno
mov
data16
mov
int3
jbe
test
nop
fnstenv
xor
dec
cmp
add
push
gs
mov
test
out
cmc
adc
sub
mov
data16
neg
je
das
or
xchg
adc
arpl
sub
xlat
bound
cmpsl
call
test
mov
mov
outsl
jns
mov
loopne
gs
in
mov
mov
fisubrs
jb
and
and
out
cmp
mov
mov
adc
and
push
mov
nop
ret
jo
mov
cs
scas
mov
imul
lock
mov
out
mov
lahf
sbb
mov
fildl
mov
push
xor
imul
cs
mov
push
push
shll
shll
out
sbb
mov
push
jne
and
or
cli
fdivrs
cmp
jmp
insb
and
xorb
test
inc
pop
jbe
or
push
pop
mov
pop
push
dec
rolb
xchg
cli
loope
cmp
jmp
call
in
stc
cmpsb
lods
in
repnz
sarl
outsb
add
or
jo
outsl
jle
test
add
mov
cld
in
xchg
inc
mov
mov
icebp
or
xchg
pop
in
add
sbb
jmp
leave
es
xor
xor
mov
cmpsb
push
sub
xchg
xchg
scas
nop
inc
bound
mov
jno
lahf
add
pushl
push
xchg
outsl
xor
insw
scas
xor
push
mov
pop
loop
mov
popl
push
jne
sbb
imul
iret
lcall
dec
pop
in
push
xchg
sbb
adc
xor
pusha
jecxz
mov
sub
mov
sbb
dec
xor
dec
mov
lcall
mov
jp
cmpsb
mov
test
into
mov
push
in
int
stc
and
fbstp
lret
or
pusha
xchg
adc
push
clc
pushl
int
outsb
popa
js
outsl
push
adc
call
add
dec
push
pushf
push
repnz
bound
add
jecxz
inc
cld
outsb
xor
shrl
popf
scas
je
sub
xorb
mov
daa
push
inc
mov
jae
mov
loop
ficompl
inc
mov
into
test
jae
xchg
lahf
dec
in
dec
jge
xor
insb
push
mov
mov
jns
cmp
adc
popa
cmpb
inc
loopne
dec
sti
loop
into
push
push
aad
mov
or
loop
idiv
xor
lea
mov
add
sbb
cmp
add
pop
pop
js
fdivrs
out
cltd
adc
sahf
sub
pusha
js
in
loopne
inc
push
xchg
cmp
dec
dec
divl
push
jae
sbb
jno
leave
xchg
or
or
and
xchg
cmp
aas
js
int
lret
aas
mov
rcr
arpl
movsb
hlt
lret
xchg
lds
xchg
push
imul
hlt
push
cmp
or
mov
xchg
push
rorl
jp
test
push
jne
popa
fldcw
xchg
fmuls
test
mov
int3
dec
mov
test
push
add
and
push
int3
imulb
roll
in
outsb
scas
sub
and
loope
cmp
out
rcpps
mov
mov
push
dec
lods
in
je
mov
lods
inc
xchg
inc
icebp
sub
insb
les
ret
lds
fisubs
pop
push
xchg
outsl
jnp
lds
lahf
ss
aas
push
cwtl
mov
arpl
in
lods
pushf
mov
subb
sbb
aas
popf
paddsb
pop
jmp
idivb
or
xchg
xchg
push
mov
fidivl
sbb
cmp
xchg
sub
sbb
subl
gs
adc
mov
or
pop
adc
loop
xchg
ja
and
cltd
inc
mov
push
fs
xor
sbbb
cmpsl
fs
xor
adc
ja
pushf
jle
lcall
jnp
and
xchg
add
sbb
imul
frstor
lret
les
xchg
mov
fdivrs
mov
sbb
cmp
add
outsb
inc
or
cmp
es
xor
enter
lahf
inc
in
sti
or
mov
add
mov
outsb
movsl
fildl
jge
sbb
jecxz
inc
popf
cwtl
jl
or
jmp
and
mov
mov
lods
or
in
jnp
xchg
pop
clc
add
aas
lret
lock
or
scas
inc
stos
dec
or
ffreep
jo
outsl
bnd
or
jp
sub
pop
adc
jl
or
cwtl
bound
and
pop
pop
jo
xor
cli
outsb
mov
les
inc
dec
pushfw
mov
jae
xchg
aad
js
movsl
jp
and
decb
xlat
adc
cmp
mov
adc
dec
cld
add
sbb
xor
mov
jl
adc
cwtl
out
out
js
xor
fistps
test
push
mov
sbb
les
add
ds
mov
ret
and
test
fnstenv
lret
mov
scas
int
out
dec
cli
mov
inc
inc
xor
mov
add
add
lcall
xlat
pop
jbe
and
int
pop
out
dec
pusha
adc
rorl
inc
inc
adcb
loop
pop
mov
pop
push
fisubs
mov
push
jnp
fstpt
aad
jl
dec
enter
or
repz
sbb
sti
mov
repnz
xlat
int
pop
cmpsb
stos
mov
push
mov
push
mov
push
pop
dec
fmuls
cli
in
xor
or
aaa
jp
xchg
push
or
add
lods
movsl
pop
fistps
push
inc
mov
aam
dec
fadds
pop
push
dec
cmp
sahf
jmp
mov
pop
hlt
pop
or
pop
add
pop
add
out
or
push
shl
aas
rolb
pop
push
out
xor
xor
sub
stos
out
sti
xlat
pop
ret
in
and
inc
mov
flds
scas
xchg
repz
sub
mov
clc
daa
jne
mov
jo
xor
insb
inc
inc
pop
cltd
inc
mov
fwait
je
addr16
and
ds
lea
lahf
sbb
jg
jb
cmp
cmp
add
aaa
cmpsb
shl
repnz
cli
lods
ds
in
mov
dec
xchg
insl
mov
xor
inc
stc
push
fsincos
in
subl
and
add
popa
addr16
mov
mov
jae
adc
sbb
cli
popf
xor
add
dec
sub
fsubrl
pusha
in
imul
mov
rol
les
inc
inc
pop
cmp
push
jb
pusha
jbe
adc
pop
mov
test
sbb
sbb
mov
xchg
push
and
cmpsb
xchg
lret
xchg
out
or
ficoml
ret
rolb
cmp
data16
adc
out
aam
jl
or
mov
rcrl
xor
adc
sbb
out
sub
jbe
push
js
push
dec
mov
imul
jge
popf
dec
mov
lds
das
repz
stos
adc
aaa
movl
lds
pop
xor
jb
call
mov
imulb
xor
adc
mov
call
cmp
mov
lea
push
ror
nop
mov
pop
pop
push
push
rclb
fdivrl
loop
movsb
sub
dec
insb
add
add
mov
data16
lods
push
dec
scas
jnp
fsubrs
test
xchg
and
or
jmp
ljmp
or
call
mov
sbb
notb
jp
pop
sbb
pop
and
xchg
sbb
fdivs
adc
add
pop
cmp
clc
jmp
ret
push
sti
mov
lcall
push
fiaddl
insl
icebp
cld
lods
mov
sub
push
push
mov
mov
mov
sub
nop
mov
test
insl
mov
lds
sub
sbb
hlt
rcrb
arpl
mov
flds
xchg
mov
pop
xor
ficompl
cmp
mov
xchg
jb
jg
cmp
inc
movsb
mov
rcl
call
and
cli
sbb
and
outsb
xchg
dec
ror
sbb
stos
adc
mov
push
adc
popa
pop
pop
out
jae
mov
mulb
add
xor
adc
push
inc
dec
call
sbb
fldenv
cmp
fsubrp
hlt
and
inc
xchg
dec
ficoml
jl
lea
pop
xchg
popa
mov
dec
mov
inc
jg
addr16
pop
outsb
sub
repz
mov
mov
int
xor
mov
fwait
pop
mov
inc
lahf
push
and
jp
iret
cli
and
jmp
mov
dec
movsb
or
adc
cmp
jle
subb
jne
jmp
jbe
fbld
pop
mov
jmp
adc
add
xor
shlb
cmpsl
sub
inc
ret
mov
bound
dec
scas
bound
cmp
adc
push
lods
cmp
and
in
lock
mov
scas
cmp
sti
pop
sub
push
xchg
mov
cmp
add
nop
pop
adc
std
repnz
iret
stc
arpl
arpl
pop
pop
jnp
iret
push
pusha
pop
push
aad
insb
mov
dec
mov
cmpsl
leave
adc
jle
pusha
loope
orb
sbb
int
dec
enter
fwait
mov
or
scas
push
mov
dec
sub
jge
mov
or
addr16
adc
push
or
out
cs
hlt
push
cld
in
loope,pt
push
ja
dec
test
inc
and
mov
cmpb
xchg
mov
call
pop
dec
loop
add
xor
inc
add
leave
sub
inc
pop
popf
int3
sub
stc
push
es
shl
pop
ret
mov
dec
jnp
cmp
inc
mov
fcoms
mov
mov
jg
cmp
mov
jmp
push
outsl
inc
call
movsb
popa
ret
jmp
add
mov
mov
stos
dec
fisubrs
inc
in
add
leave
jnp
enter
in
mov
ret
adc
test
cmp
inc
mov
sub
loope
adc
std
sub
push
dec
sbb
sbb
xchg
loop
push
mov
adc
in
frstor
jmp
mov
or
repnz
cmp
or
mov
dec
jns
loopne
adc
cmc
mov
sarb
push
mov
pusha
pop
lock
mov
mov
int3
inc
sbb
fdivrs
jle
ljmp
adc
enter
movsb
dec
jae
cmp
push
sub
and
pop
in
js
lds
mov
pop
lods
repz
outsl
sahf
rorb
and
mov
fisubrs
lods
std
push
je
or
fnstenv
popf
out
pop
out
cmc
or
in
fdivp
test
out
or
or
jno
mov
push
ret
adc
imul
pop
popf
mov
dec
xchg
dec
adcl
cwtl
icebp
add
insb
hlt
in
arpl
pusha
insl
jbe
mov
push
lret
cmpsl
jecxz
or
mov
xor
ret
cmpsl
cmp
arpl
jns
mov
pop
jno
cmp
sub
sbb
cld
cld
loop
aas
das
daa
fwait
xchg
mov
jle
adc
in
loopne
bound
stc
mov
sub
ds
aaa
mov
pop
dec
and
idivl
fcompl
pop
or
in
sub
cwtl
enter
dec
idivb
add
aam
arpl
ja
stos
mov
jecxz
xor
addb
sub
ds
jl
jbe
xor
les
xor
test
insb
or
jp
fsubs
mov
or
imul
orb
sub
hlt
pop
enter
cwtl
push
data16
lret
xchg
ret
or
mov
hlt
inc
leave
pop
ss
inc
xor
xchg
or
add
add
in
fdivr
push
mov
sbb
into
lods
stos
pop
jne
mov
xor
push
popa
sbb
push
cs
sub
mov
movsl
pusha
roll
mov
clc
sub
test
ds
dec
inc
jp
les
sbb
pushf
push
sbb
aam
daa
sub
test
daa
das
dec
inc
idivb
jo
test
mov
int3
add
cmp
int
mov
cmp
dec
sbb
push
inc
cmp
lea
rcl
dec
xor
and
push
mov
adc
sub
mov
ja
sarl
outsl
mov
sbb
mov
ret
js
push
jne
xchg
or
lods
ret
mov
enter
add
xchg
pop
shll
push
xor
jae
in
xchg
imul
mov
xchg
popf
inc
in
sub
lret
pop
or
cwtl
push
or
mov
xchg
fcoms
cmp
gs
pop
daa
dec
stc
enter
cwtl
imul
cmp
aad
mov
sub
or
inc
data16
loop
add
push
inc
xor
movsb
hlt
lret
inc
pop
xchg
xchg
push
nop
sbb
roll
lea
xchg
ret
add
dec
aas
scas
out
int3
sbb
push
fcomps
xor
sub
cmp
mov
cmpsl
xor
test
paddusw
aam
mov
pusha
sub
pop
aam
xchg
push
cmpl
jle
dec
out
xchg
jb
ror
sbb
xchg
bound
push
stos
mov
sbb
mov
adc
dec
ljmp
cmc
arpl
jae
repz
push
fwait
push
push
add
pusha
cli
add
aas
jo
fld
add
aad
jae
iret
mov
ss
flds
xor
push
out
mov
subl
push
divl
mov
jge
cmp
inc
pop
jae,pt
xchg
cli
lea
loope
inc
mov
fiaddl
js
jl
adc
lods
mov
lahf
icebp
lea
add
sbb
jge
test
je
add
mov
test
ret
aaa
fnstsw
jb
mov
push
mov
or
in
in
jns
data16
call
jb
pop
jae
mov
lods
lret
inc
cmc
jo
jno
mov
scas
ret
test
mov
dec
je
iret
mov
mov
loopne
test
movsl
mov
adc
js
mov
in
cmc
pop
push
inc
mov
jb
xchg
push
les
and
dec
aam
jg
xchg
inc
pop
in
ljmp
jl
out
mov
lods
pop
gs
or
xor
push
adc
in
ja
jno
dec
sbbl
ljmp
aas
mov
mov
insl
mov
push
xchg
shrl
xor
mov
cmp
aad
or
cmp
jmp
pushf
lret
pop
nop
loopne,pt
or
and
dec
mov
cmp
xor
and
sub
paddw
or
stos
and
xchg
imul
lods
addr16
fisttps
call
cmpsb
testb
adc
pop
xor
push
fisubrl
call
cmp
jge
jp
sti
add
inc
sub
gs
stos
clc
add
xor
ljmp
add
fldt
jge
xor
sub
fisubs
jle
nop
xor
cmp
outsb
sahf
fs
pop
pop
cmpsl
call
push
inc
insb
mov
push
xor
out
jg
adc
push
mov
lock
daa
mov
xor
dec
lret
xor
or
pop
mov
xor
sub
sbb
inc
cld
fs
or
aaa
mov
lock
sarl
push
lcall
subl
mov
enter
das
push
dec
adc
int3
mov
and
andb
mov
lods
or
push
stos
pop
pop
fsubrp
fcomps
test
or
outsl
xor
bound
rorl
xlat
xchg
xchg
jae
in
sub
push
inc
jp
mov
dec
mov
jg
dec
inc
cmp
lds
out
mov
scas
cmpsb
jle
sbb
push
sbb
rcll
fstps
inc
pop
out
sub
lea
in
je
or
push
sbb
mov
jmp
lret
add
dec
pusha
loope
xor
xchg
addr16
dec
pop
movsl
add
dec
lahf
add
aas
mov
or
xchg
push
aas
lcall
addr16
xchg
sahf
inc
les
pop
pop
pop
insl
mov
call
sub
cmp
aad
lret
cmc
arpl
cmp
dec
dec
lahf
cmp
inc
ror
fisubl
push
cmp
loope
or
xchg
lahf
mov
mov
bound
add
les
out
lret
rclb
jne
adc
stos
mov
push
fdivl
out
ret
pop
push
push
jge
test
sbb
fsts
mov
cmp
testl
insb
mov
xchg
mov
jae
xchg
fcomps
and
sarl
fiadds
sub
xchg
xchg
inc
je
or
xor
inc
push
push
fs
rcr
push
add
dec
fisttpll
pop
jnp
in
xorl
mov
or
add
mov
adcl
cmp
sub
aas
mov
mov
pushf
jecxz
fildl
icebp
stc
in
sub
outsl
mov
xchg
sub
push
xchg
sbb
xchg
fimull
lock
or
movsb
pandn
pop
shll
js
jae
je
mov
into
inc
xchg
icebp
push
lcall
dec
jmp
mov
loopne
and
mov
popl
and
mov
orl
jo
outsl
fistpl
add
inc
lret
fdivrs
insl
xchg
fisubs
negb
cli
xchg
push
or
arpl
mov
sub
cmpsb
sbb
clc
xor
inc
scas
sub
cmp
or
shlb
add
jo
repz
cli
jle
icebp
inc
and
xor
lods
jno
sbb
mov
out
adc
rol
loope
pusha
push
fnsave
out
repz
and
pop
push
aas
mov
dec
mov
xchg
add
cld
scas
or
mov
ja
pop
into
mov
xor
fsubp
push
cld
test
mov
mov
and
xor
das
cmp
adc
dec
movsl
test
hlt
dec
arpl
push
addb
cmpsb
add
stos
mov
push
fisubl
in
xor
push
outsb
push
dec
xor
aaa
dec
jbe
int3
imul
sub
cmp
xorb
mov
loopne
enter
add
mov
lahf
adc
inc
sbbl
pop
sub
add
punpckhbw
cmpsl
stc
jmp
adc
add
mov
adc
dec
adc
in
loopne
popf
insl
xchg
xor
aad
inc
inc
sahf
arpl
or
cmp
sub
test
movb
add
lea
push
shll
cmp
lods
fs
subb
sti
sbb
push
ja
adcb
test
inc
mov
mov
lock
cmp
daa
rcr
add
mov
movd
mov
lds
fsubrs
jo
adc
fidivl
fbld
sub
cmc
test
jnp
insb
xchg
pusha
push
push
aas
inc
movsb
call
push
imul
sub
xor
dec
rcll
into
fdivl
jnp
push
inc
sub
dec
add
bound
rcll
sbb
or
add
repz
jno
gs
push
xor
lret
sbb
lods
movntps
movsb
addr16
xlat
addr16
mov
lcall
dec
in
popf
sti
adc
adc
jl
sbb
jle
cmp
fidivl
clc
inc
pop
mov
faddp
or
push
stos
mov
fdivs
testl
or
gs
in
inc
or
mulb
and
fcomps
cmp
push
fbld
lahf
lock
das
inc
or
mov
push
jne
pop
stos
movsl
mov
int3
xorl
cld
sbb
or
dec
jo
imul
inc
adc
pop
icebp
ljmp
adc
outsl
rol
add
mov
jnp
gs
jb
mov
and
adc
ljmp
or
repz
inc
push
ja
adc
jp
cli
mov
mov
repnz
jl
repnz
out
adc
mov
jns
ss
push
jl
sti
sarl
inc
push
mov
mov
xor
out
ja
daa
daa
mov
call
ret
push
cmp
nop
jno
lods
pop
and
fadd
popa
jmp
xchg
mov
ljmp
xchg
sti
cmp
fisubrl
sub
pusha
push
ret
mov
adc
push
adc
xor
insl
pop
ds
cmc
cld
movsb
push
jecxz
sbb
or
nop
jmp
ret
sub
cmp
sbb
push
jge
dec
jl
mov
xchg
pop
loopne
sub
xchg
push
dec
arpl
and
bound
jle
xchg
clc
pushl
fldcw
sbb
ret
add
mov
mov
push
mov
stc
or
insb
dec
pop
rorb
lret
xor
andb
ss
je
call
sub
inc
hlt
ret
out
jl
xor
test
aaa
mov
jp
inc
push
xchg
repnz
aam
rcll
xor
outsl
loopne
xor
adc
mov
push
lret
lds
je
popa
or
xchg
das
rorb
push
adc
mov
call
cmp
jle
push
std
ret
int
popf
in
movsb
inc
cmp
shl
cmp
dec
mov
or
mov
pushf
dec
insb
leave
movsb
mov
xor
jno
lcall
add
int
xchg
call
pop
mov
inc
outsb
xchg
push
shlb
lods
cld
clc
sbb
fs
sbb
stos
cmpsl
xchg
inc
mov
mov
sbb
push
mov
scas
outsl
fs
or
aam
inc
insb
sbb
jge
idiv
leave
sub
xorl
dec
add
jl
xor
add
xchg
rcrl
sub
mov
sbb
and
shll
mov
insb
cmp
xchg
rcrl
in
mov
rclb
out
or
mov
mov
adc
mov
mov
test
int3
xor
pop
insl
xor
inc
push
mov
scas
mov
sbb
adcl
test
xor
inc
jl
sbb
fcoml
pop
ja
ljmp
xor
push
mov
cli
pop
jmp
ret
push
sbb
or
cmp
pop
fiaddl
adc
popa
add
add
mov
sti
xchg
dec
xchg
out
cmpsl
loop
subl
jecxz
dec
mov
and
mov
mov
in
inc
push
and
test
movsl
nop
mov
popf
add
cmp
daa
inc
mov
push
xchg
push
push
nop
mov
sub
cmpsl
leave
pusha
mov
cmc
cmp
ljmp
call
ret
lods
in
inc
lds
lods
lods
es
shrb
test
mov
leave
adc
fildl
mov
jae
imul
dec
push
daa
xchg
iret
mov
or
movsl
cmp
pop
movsl
ret
cs
xchg
mov
vmwrite
std
adc
mov
inc
add
mov
sbb
fs
cmp
dec
loope
les
fistps
or
cmp
pop
frstor
fisubl
gs
xchg
test
rolb
popa
int
mov
jge
and
and
push
sarb
sub
insl
sbb
fldcw
and
inc
nop
add
sub
mov
sbbl
sbb
lods
or
jl
jmp
orl
inc
neg
in
cmp
aam
cmpsb
mov
lahf
movsb
mov
mov
mov
jae
push
mov
mov
dec
jns
cmpsl
cld
xlat
addl
dec
repz
cmp
dec
or
push
pop
scas
dec
or
lock
push
cmp
cltd
repnz
pop
out
aas
sub
and
pop
mov
mov
cld
in
pop
xorb
sbb
inc
and
pop
push
and
mov
sub
shl
sub
sbb
xor
xchg
movsb
xor
mulb
jnp
jae
stc
loope
stos
pop
mov
or
mov
push
aas
add
aas
into
cld
dec
into
je
test
pushf
das
pop
adc
pop
mov
enter
sbb
out
sub
sbb
and
lock
repz
sbb
dec
pop
sbb
push
xchg
popf
out
adc
inc
sbb
scas
popf
mov
and
push
mov
out
sbb
push
mov
fsts
adc
jge
dec
mov
xchg
mov
inc
xor
shll
mov
push
push
inc
pop
or
sub
mov
jne
inc
or
or
sub
cld
cmp
mov
in
cli
lret
bound
rcrl
in
cmpsl
cmpsb
stc
rolb
std
sub
adc
push
mov
and
mov
dec
dec
testl
bound
in
adc
dec
popl
aam
aaa
push
lods
stos
or
sbb
dec
mov
orl
dec
mov
pusha
lahf
sub
adc
fstpt
icebp
add
jp
adc
jb
adc
pop
lock
xor
jl
pmaddwd
into
cs
sub
pushl
shll
jne
push
data16
stos
fistpl
fucomi
sub
dec
ss
lcall
jp
push
adc
addr16
or
imul
xchg
pop
mov
test
aam
cmp
jmp
idivb
jne
dec
mov
int
loope
int
dec
loop
push
pop
lds
lahf
rcrl
jg
pop
in
jnp
cmpsb
gs
clc
mov
sbb
outsb
daa
jge
sub
dec
fdivrl
fwait
or
popa
es
xor
xchg
jns
js
subb
sbb
imul
and
and
sbb
cwtl
push
dec
pop
mov
mov
push
test
xchg
jle
sub
pop
ss
lods
fmulp
shlb
aam
inc
inc
movsb
in
inc
jp
mov
push
hlt
pop
xor
and
gs
jecxz
push
mov
mov
mov
jno
lahf
cmc
add
cmp
mov
stos
cmp
popf
dec
cmpsl
mov
daa
sbb
test
xor
pop
mov
dec
lods
sub
jne
cmovl
mov
adc
and
or
mov
stos
and
or
clc
mov
and
xor
pop
mov
add
mov
loopne
data16
jp
jnp
lahf
add
imul
add
out
scas
cmpl
sti
xor
inc
ja
push
imul
outsl
add
mov
xlat
xchg
les
outsb
pop
mov
cwtl
ljmp
jns
cmp
inc
iret
and
adcb
pop
ss
inc
push
enter
ds
insl
mov
mov
cli
fmul
fildll
adc
repz
dec
mov
gs
push
sub
scas
scas
hlt
xor
sbb
das
add
arpl
or
and
data16
outsb
je
scas
jecxz
sbb
adc
dec
mov
fidivrs
jge
je
mov
das
lret
inc
xlat
cld
pop
aaa
cmp
pop
and
fldl
push
jnp
scas
clc
je
add
fs
pop
jecxz
pop
dec
lret
jne
cmp
int3
jge
push
push
jae
sub
and
pop
push
lcall
and
lret
xor
movsb
sar
sbb
test
push
jbe
lods
out
divl
and
fninit
pusha
sahf
cld
add
aam
add
aaa
adc
jge
push
xor
aaa
test
sbb
rdmsr
cwtl
ja
jge
and
and
std
xor
xchg
imul
dec
pop
xchg
push
xchg
addr16
mov
mov
arpl
gs
clc
add
cwtl
fisubl
sub
in
adc
adc
insb
outsb
popl
dec
out
lahf
sbb
inc
call
bnd
mov
addl
gs
jle
loop
inc
jp
sahf
cmp
push
outsb
mov
cmpsl
or
pop
add
mov
adc
test
fldln2
and
push
loopne
push
call
pop
push
int3
jne
mov
pop
sbb
xchg
mov
jmp
das
mov
jmp
fmuls
push
cmp
sub
scas
mov
out
mov
mov
lds
cli
movsb
andl
xor
idiv
mov
sahf
sahf
gs
push
lock
stos
mov
cmp
dec
daa
or
out
ret
rcrb
push
adc
mov
add
mov
outsl
mov
mov
aas
stos
mov
mov
mov
outsb
cli
mov
or
push
add
nop
fs
pop
pop
imul
adc
xor
rcll
sbb
clc
jb
lcall
inc
add
out
jbe
or
orb
dec
xor
pop
mov
loop
jne
adc
and
and
mov
jno
jp
push
and
pop
lret
push
fldt
daa
add
cmpsb
into
jb
xlat
stc
sahf
xorl
fimull
in
pop
and
imul
xchg
lods
cmpsb
inc
xchg
nopl
sbb
push
or
sub
movl
jo
xchg
test
je
ja
and
sub
mov
stc
and
ret
xchg
adc
or
lea
test
popf
inc
je
jge
aaa
imul
stc
fldcw
jg
and
shlb
les
iret
test
sub
loop
pop
mov
pusha
outsl
lahf
fsubs
jle
inc
pusha
inc
test
mov
fucomip
and
or
add
pop
push
notl
xor
fisubs
mov
inc
cs
mov
lret
repz
jbe
pushf
test
add
ljmp
xor
xchg
call
push
dec
jge
mov
inc
movsb
and
add
jl
and
stos
mov
sti
lds
in
in
lds
int
roll
sub
xchg
mov
adc
psrld
push
and
mov
jno
lret
adcb
fimuls
js
icebp
pop
cmp
mov
or
popf
dec
pop
push
pop
aam
cs
aas
cmpsb
leave
nop
in
or
pop
mov
sub
jae
sar
inc
cmp
inc
push
inc
push
aam
loopne
outsb
dec
cmp
daa
cwtl
int
fndisi(8087
xchg
and
jo
xchg
jle
ljmp
fidivrs
add
aas
jge
roll
mov
outsb
mov
cwtl
scas
cltd
clc
clc
jmp
popf
add
xchg
dec
dec
adc
inc
inc
scas
in
rclb
xchg
mov
xchg
inc
dec
mov
push
addl
bound
pop
xchg
sub
or
sbb
int3
or
adc
jae
or
jl
daa
xor
das
push
lret
subl
sub
sub
cmp
sub
xlat
cwtl
and
in
aaa
mov
hlt
mov
cltd
movsl
sarb
int3
xorl
pop
data16
mov
rorb
jle
test
jmp
add
cmp
sub
sti
cmp
test
xor
xchg
and
add
cmp
call
mov
xchg
cmp
sti
pop
mov
mov
cwtl
iret
dec
and
add
xchg
shlb
clc
jno
or
clc
adc
dec
testb
jne
mov
inc
fildll
lret
pop
xchg
mov
lods
push
test
sub
push
jne
and
jl
pop
pop
sti
loop
inc
mov
repnz
inc
divl
inc
frstor
mov
hlt
mov
adc
mov
mov
ffree
cmc
lret
fdiv
inc
xchg
shll
pushf
xorb
sub
nop
and
pop
mov
jmp
jne
xor
sahf
or
rcrb
orb
sub
outsl
or
mov
rol
push
pop
out
loopne
mov
cmpsl
repz
nop
inc
mov
xchg
out
aam
and
inc
xchg
jno
iret
xor
xchg
mov
aaa
jmp
xchg
rorl
psubusb
pushf
inc
out
addr16
clc
jb
xor
enter
js
into
out
jbe
sbbb
into
push
nop
loopne
push
xor
cmp
fwait
adc
inc
push
xor
fsubr
push
mov
or
push
cwtl
push
leave
leave
out
out
and
popa
cmp
out
ret
mov
cs
fildl
fptan
lcall
stc
ret
adc
push
xchg
mov
xchg
rorb
cltd
xor
in
xor
cmpsb
loope
mov
repz
jp
scas
pop
ror
in
add
or
loope
add
mov
movsb
fistpll
mov
imul
rorl
add
lret
in
lret
adc
push
out
inc
mov
movb
pop
pop
cmp
cli
add
fs
test
jmp
inc
dec
mov
popa
mov
rorl
repz
xor
jmp
daa
pop
aam
les
notl
push
sbb
push
pop
in
cltd
aam
sbbb
sbb
mov
dec
imul
pop
inc
jae,pn
pmuludq
sub
nop
out
nop
les
jae
sbb
xor
mov
mov
inc
cmp
pushl
scas
push
push
cmp
daa
push
pop
lret
lods
or
cs
xchg
or
cli
repz
out
daa
push
out
and
push
xor
mov
repnz
loop
mov
scas
imul
xor
adc
rorl
dec
cmp
adc
lods
dec
dec
std
dec
rorb
out
mul
lahf
cmp
test
lret
call
cmp
std
scas
iret
xor
and
pop
cmc
bound
stos
jge
push
movsb
sub
sbb
imul
jmp
xchg
mov
popa
icebp
sbbb
movsb
pop
data16
iret
xchg
in
int
repz
lret
lret
ret
adc
xchg
cmp
dec
mov
test
enter
adc
js
stos
pop
inc
mov
fwait
outsl
pop
push
dec
mov
pusha
add
cmp
push
subb
ljmp
push
and
cld
lds
jecxz
and
mov
and
mov
mov
jmp
stc
mov
jle
jmp
rcll
mov
rcrl
push
push
in
aam
test
iret
cld
xor
adc
flds
aas
jb
insb
roll
jle
icebp
xchg
mov
xchg
mov
lock
mov
jbe
movsb
lret
aam
test
push
mov
xor
mov
test
stos
lcall
push
mov
push
dec
bound
and
dec
push
xchg
es
adc
mov
das
and
mov
shrb
insl
xchg
dec
sub
sbb
stos
xor
mov
je
add
mov
nop
sbbl
shll
or
leave
dec
clc
adc
add
ficomps
ss
mov
add
leave
lahf
add
jle
fiaddl
aam
and
add
subb
mov
jle
lock
in
adc
mov
lds
add
mull
fwait
adc
xchg
lcall
xor
loopne
lea
mov
or
popa
xor
mov
in
fwait
shll
mov
incl
pop
cmp
jns
fdivrs
je
push
and
shl
aas
in
ss
cltd
push
mov
or
add
xor
lds
insb
push
pop
cmp
mov
gs
fnstenv
jp
popa
dec
loope
add
out
mov
into
jmp
call
dec
sbb
orl
addr16
push
mov
dec
ljmp
test
in
inc
pusha
or
inc
stc
mov
xor
or
sub
sti
jne
stos
xchg
fwait
xchg
loopne
push
mov
dec
fidivs
cld
clc
mov
push
fidivl
les
adc
cmpsl
adc
adc
cli
mov
push
clc
mov
sbb
lret
das
jecxz
movl
test
sub
jge
out
fcomip
hlt
icebp
repnz
faddl
push
mov
jg
sbb
sbb
arpl
jno
in
fwait
xchg
mov
je
or
in
push
mov
nop
lea
pop
push
popa
push
lret
and
loop
or
adc
lock
fldenv
scas
jb
es
or
clc
push
lods
or
xchg
jno
dec
fwait
sbb
cmp
stos
fstpt
push
xlat
fdiv
push
pushl
xchg
or
shrl
ljmp
mov
mov
xchg
or
add
out
je
or
pop
gs
pop
test
sub
das
mov
or
jo
outsb
fcompl
sbb
aaa
pop
cmp
jnp
imul
pop
push
sti
insl
mov
mov
xor
and
js
jle
push
add
scas
mov
mov
jb
testl
jbe
add
and
mov
int3
imulb
dec
push
dec
outsb
ficompl
bound
or
out
mov
insb
and
cltd
push
and
or
scas
xchg
push
pushf
add
or
mov
mov
pushf
fstpl
dec
push
imul
cmp
cli
stos
mov
sub
inc
dec
pop
mov
hlt
mov
pop
or
sbb
ret
push
cmc
js
pop
scas
or
add
mov
out
aaa
mov
js
xchg
sbb
pop
ljmp
fisubs
repz
pusha
adc
push
bound
out
jp
fidivl
push
and
jmp
sbb
imul
dec
mov
pop
cmc
les
sbb
add
add
add
push
xchg
lahf
movsl
mov
test
fsubrl
ljmp
fwait
sar
fucomi
outsl
mov
cmp
inc
imul
gs
jb
xor
jne
pop
jne
lock
pop
fs
cmc
push
movsb
and
enter
sub
sbb
adc
push
mov
mov
mov
gs
xchg
call
jno
or
mov
adc
je
ljmp
in
cli
insl
jle
or
enter
scas
cltd
ret
xor
je,pn
lock
sbb
xchg
je
pop
cltd
ljmp
int3
cltd
and
jns
lcall
jl
or
fdivrp
mov
sahf
sbb
sti
ds
jbe
sub
out
jl
fcmovnu
outsb
out
fs
stos
xor
dec
in
jns
into
dec
lcall
inc
push
push
mov
jae
adc
push
insb
pop
cld
insl
faddl
xchg
test
lds
repz
rolb
fs
movsl
mov
shll
jge
xor
insl
nop
mov
popa
jb
imul
mov
mov
mov
call
add
mov
sbb
ds
sbb
xlat
ss
pushf
xlat
cld
sbb
ret
popf
jo
pop
add
fcomps
ja
push
je
fnstcw
fs
out
mov
mov
movsl
mull
mov
pop
xor
jmp
jle
xor
inc
xchg
repnz
inc
dec
cmp
fwait
cmp
les
xchg
pop
lods
pop
or
adc
mov
push
movsl
xor
fs
jl
popa
or
add
sub
fdivrl
xor
enter
rcll
cltd
and
cs
enter
cmpsb
in
mov
lret
mov
or
xchg
shlb
dec
imul
test
lret
cmpsb
xlat
mov
push
pushf
or
adc
dec
xchg
cs
mov
aas
out
popf
mov
cld
testb
movsl
pusha
or
push
sub
push
outsb
aad
addr16
loope
mov
addl
jp
loopne
jl
mov
jp
pop
adc
jno
inc
fs
mov
sbb
cmpsb
incb
or
jno
std
cld
mov
popf
daa
mov
mov
sbb
sub
loopne
shll
pop
jno
mov
xor
fsts
mov
loop
addl
movsb
pop
mov
dec
and
fsub
mov
dec
repnz
jae
fnstenv
pop
push
jp
jae
pop
iret
jp
mov
arpl
icebp
jne
and
fistps
fadds
adc
sbb
aam
xor
add
out
jp
je
pop
jecxz
jbe
iret
and
loop
add
arpl
add
jmp
out
pop
aam
loopne
add
dec
adc
xor
adc
rorb
out
mov
push
cmpsl
mov
adc
iret
cmp
push
dec
nop
jne
int3
cmp
pusha
push
loope
mov
cmpsb
sub
ficoms
mov
gs
outsl
push
test
dec
pop
leave
xchg
test
push
repnz
cld
xchg
pop
cmpsl
pop
loope
push
imulb
ficoms
fadds
cmp
inc
into
cmp
dec
jb
sub
sub
pop
movsb
ficoml
xchg
sbb
jl
addw
cmp
arpl
out
or
and
shll
dec
cmp
sbb
cmp
rolb
push
fisubl
dec
rclb
jmp
out
jp
pop
pop
mov
sbb
mov
in
pusha
jbe
mov
rorl
idivl
cmp
jg
jnp
mov
cmc
imul
dec
cmp
iret
int3
add
fwait
push
and
dec
push
mov
or
out
insb
fs
pop
outsb
mov
fst
push
sbb
or
adc
aad
leave
cmp
fsubrl
rcr
xor
sub
dec
sub
mov
loope
dec
lods
push
pop
aam
fsubs
sub
rorb
push
dec
pop
stc
mov
rolb
lea
jle
cmp
add
dec
mov
es
iret
xchg
loopnew
cmp
repnz
dec
scas
andb
xor
push
xor
xchg
or
xor
mov
cmp
pop
mov
aad
mov
xchg
pop
mov
xchg
pop
push
cmp
sti
leave
sub
and
jecxz
xchg
push
mov
lods
mov
mov
jecxz
pop
mov
dec
cmpsl
sbb
mov
movsb
shrl
sub
jp
add
mov
gs
sahf
ja
adc
aas
jo
bnd
les
inc
dec
jge
mov
cmp
add
or
mov
lods
int3
jnp
push
inc
fdivrs
leave
dec
dec
sub
loopne
in
push
add
jnp
pusha
jbe
add
in
xor
insb
xchg
shrb
sub
jnp
adc
mov
fisubrs
add
fstl
iret
test
add
xorb
and
lret
inc
adc
sub
push
in
jp
xor
into
pop
les
mov
lea
lods
adc
cmc
dec
xchg
xor
xchg
loop
or
cmp
xchg
mov
es
and
sub
dec
cmp
sbb
movsb
jb
lea
push
sbb
push
and
cmc
cmp
in
daa
xchg
jg
dec
dec
xor
mov
daa
or
mov
add
orb
scas
insb
ja
stc
xor
add
mov
or
out
adc
xor
sar
popf
pop
ss
xchg
out
lahf
push
adc
lret
repnz
ss
push
pop
mov
push
cmc
adc
dec
dec
scas
push
cltd
xchg
clc
movsb
loope
sti
das
fs
mov
andb
in
cmp
inc
aas
jecxz
movsl
fdivrp
or
lcall
std
mov
cmpsb
imul
ret
sahf
jb
icebp
push
push
mov
or
push
adc
inc
xchg
cwtl
mov
out
lret
imul
cld
push
push
mov
dec
sub
pop
mov
cld
test
push
adc
test
in
loop
into
loopne
sti
dec
cmp
pop
cmp
jo
sub
scas
cmp
adc
xchg
loopne
shll
in
clc
mov
test
dec
scas
push
add
inc
jmp
dec
push
lods
int
into
jl
insl
mul
lea
loop
mov
xor
mov
lock
dec
stc
sar
xor
pop
sbb
imul
xchg
shll
loop
insl
jg
call
out
adc
pop
enter
test
xchg
fisubs
xchg
std
je
jo
jo
insl
out
icebp
lcall
cmpl
cmp
lods
cld
lahf
scas
addr16
ud1
dec
mov
dec
daa
cmp
inc
iret
and
insl
sbb
sub
test
icebp
jne
lea
push
mov
push
or
and
cmpsl
call
popa
cmp
es
push
dec
dec
std
mov
js
fsts
cld
pushf
xor
sub
rclb
lds
pop
jecxz
in
xchg
and
push
enter
pop
cmp
stc
sbb
inc
out
lea
jl
in
lret
xor
xchg
fmull
jo
rcl
cmp
jo
les
std
dec
test
pop
daa
inc
or
arpl
mov
aad
imul
cmp
sbb
dec
inc
push
movsl
in
or
mov
std
out
mov
outsl
test
adc
sub
cmc
test
adc
push
and
out
leave
add
pop
xor
sbb
jle
sub
test
fcmovbe
dec
sbb
ds
jge
ss
jb
movsb
pop
mov
cmp
outsb
inc
pop
jl
pop
cmc
lahf
fnsave
mov
push
sbb
jns
ficoms
mov
sbb
adc
adc
mov
sahf
mov
mov
mov
enter
inc
std
mov
adc
lcall
sub
push
fs
lods
push
shrb
add
sub
mov
xor
pop
ja
movsb
mov
sti
fwait
ss
test
enter
enter
std
flds
adc
insl
mov
test
fstps
jmp
imul
jge
andb
fs
sbb
jo
std
or
roll
pop
add
push
xchg
enter
push
dec
xchg
cltd
xorl
pop
mov
dec
stos
aas
xchg
push
ret
fistps
jno
call
push
out
mov
xchg
test
cli
xchg
mov
and
sbb
jp
push
rolb
mov
cltd
sub
lcall
xor
pop
add
jno
addl
xor
test
cmp
clc
xchg
cmp
inc
mov
sarb
lahf
icebp
leave
mov
inc
xor
mov
fistl
test
outsb
popf
ja
xchg
adc
into
loop
pop
or
in
pop
xchg
or
sub
fs
pusha
inc
aam
iret
jb
fxch
mov
daa
pop
scas
lahf
pop
mov
cld
or
xor
lock
pushf
dec
mov
jns
cmp
jno
sti
mov
hlt
mov
sub
push
mov
lahf
stos
push
inc
pushf
insb
rclb
insb
loop
dec
push
cld
jne
shl
cli
pop
fucom
mov
add
lock
fisubs
dec
dec
sub
mov
add
ffree
push
cmp
insl
imul
push
shll
sbb
fwait
js
sahf
ret
push
call
cmp
jle
jge
aaa
mov
mull
sbb
outsb
lcall
mov
aas
cld
xchg
lods
jns
inc
lcall
shr
lods
and
jle
outsb
sbb
and
insl
mov
push
aas
jnp
mov
mov
pusha
dec
jb
push
fs
sti
decb
fcomp
pop
das
mov
clc
fistl
imul
push
enter
sbb
pop
jp
pushf
push
pop
add
pop
add
test
int
sub
xchg
enter
inc
stc
ds
das
jl
loopne
loopne
loope
and
nop
push
or
jmp
add
sbb
pop
push
int
pop
pop
shrb
ret
xor
mov
push
xchg
gs
testl
xchg
int3
sbb
subb
dec
adc
add
out
add
jl
pop
mov
mov
push
xor
cmp
scas
lods
inc
push
xchg
cmp
sub
pop
xchg
loop
or
imul
adc
or
pop
insb
aaa
push
int3
movsl
xorb
popa
pop
jns
or
lahf
xchg
mov
xor
lods
data16
pop
cli
xor
sahf
mov
push
xchg
inc
icebp
jno
aas
add
insl
mov
icebp
loope
int3
jp
shrl
inc
in
jae
ret
mov
xor
cltd
sbb
test
ja
push
clc
mov
mulb
or
jl
mov
pusha
push
dec
fwait
xlat
mov
cwtl
sbb
aas
popf
xchg
inc
sti
pop
mov
pop
jmp
sub
xchg
out
aaa
cli
and
sbbb
mov
push
xor
aaa
push
stc
and
in
sbb
cli
xorb
jl
cwtl
loop
inc
pop
or
dec
daa
fdivrs
sbb
mov
sahf
lods
or
mov
dec
inc
popf
lods
xor
adc
jbe
jp
dec
out
push
jo
das
cs
aad
ja
xchg
push
fwait
push
xor
sbb
mov
sub
push
pop
push
pop
arpl
cmpsb
test
jns
xor
repz
or
and
js
push
call
ror
jns
sti
mov
insb
xchg
popf
push
push
sahf
fucomp
add
adc
fwait
sub
mov
imul
shrb
mov
jne
into
adc
rolb
mov
add
sbb
xor
and
inc
jne
pop
xchg
repz
cmp
adc
inc
push
sbb
sbb
cwtl
sahf
lea
push
stos
imul
push
pop
push
push
stos
xor
outsb
lahf
pop
das
xor
and
ror
mov
rolb
cvtps2pd
pop
imul
mov
mov
inc
pop
add
mov
repnz
imul
aas
pushf
ja
sub
inc
sbb
into
out
orb
sahf
mov
mov
sbb
int
inc
sbb
shlb
mov
cmpsl
leave
xor
movsb
jmp
lret
clc
sbb
hlt
rep
and
sub
sub
and
fwait
movb
in
mov
fwait
addr16
leave
sbb
je
and
cmp
insl
les
inc
pop
js
mov
sub
cmp
incb
add
fwait
dec
jo
jnp
xor
sbbb
or
out
movl
cmp
rorb
mov
rcrb
insb
push
out
inc
lret
push
jns
cmp
jae
mov
or
stos
xor
lods
lock
dec
jne
aad
sbb
es
sahf
dec
aam
dec
mov
ja
aam
shlb
repnz
nop
mov
stos
lea
cwtl
ljmp
enter
into
loopne
add
push
pushf
add
int
cli
pop
dec
jp
test
out
in
insl
xor
int3
mov
xor
mov
pop
dec
mov
in
sbb
push
lods
add
sub
addb
xchg
fstpt
add
add
cmp
in
into
sti
dec
jo
pop
out
cmp
pop
mov
mov
and
xor
leave
adc
xchg
out
mov
shlb
mov
cwtl
lcall
mov
lods
test
cs
push
jnp
xor
dec
inc
les
xor
pop
fs
mov
push
xchg
ljmp
test
mov
inc
out
test
mov
jb
ret
out
add
loope
lret
mov
push
imul
rcrb
dec
fsin
jbe
js
dec
inc
mov
inc
pop
pop
psubb
or
xchg
icebp
mov
sbb
icebp
ja
push
dec
in
cld
mov
vunpcklps
jns
xchg
es
inc
dec
ficoms
inc
or
scas
out
pop
cmp
imul
mov
insb
repz
insl
push
mov
inc
mov
jae
int3
inc
or
cmp
movsl
mov
lods
in
or
in
test
mov
adc
pusha
jg
popa
xorl
fildl
mov
and
cmpsl
rol
push
mov
mov
push
aad
inc
mov
imulb
sub
sbb
push
mov
aad
mov
mov
pop
hlt
jecxz
cmp
add
inc
aas
jns
mov
pop
xchg
repz
mov
fcmovu
pop
movsb
pop
test
inc
mov
in
or
decb
stos
out
fcomp
mov
or
adc
repz
ja
ljmp
or
les
fsubrs
pop
inc
bound
outsb
rcrb
mov
stos
xchg
mov
jge
inc
jae
cmp
aam
test
adc
xor
fwait
xchg
xor
xorb
pop
push
cmpsb
loop
and
mov
ret
sti
and
out
out
sub
stos
xchg
in
cmp
insl
xchg
xchg
bound
xchg
jmp
jl
subb
icebp
push
cmp
fnstenv
mov
pushf
repz
xor
xchg
js
sbb
int
and
add
and
pop
xchg
push
shrb
mov
push
lahf
xorl
push
or
cwtl
inc
jmp
mov
inc
scas
add
ss
lods
pop
cli
out
mov
ss
pop
cmpsb
je
jno
ljmp
pop
and
std
pop
das
pop
mov
pop
fdivrl
pop
and
mov
xor
sbb
xor
lcall
xchg
push
outsb
test
lret
or
out
rcll
adc
mov
rcl
orb
dec
mov
and
add
test
movsl
cmp
test
xchg
mov
push
sahf
cmp
xlat
mov
push
jle
or
test
jns
adc
pop
mov
cld
fxch
add
inc
inc
mov
pusha
mov
mov
xchg
js
cmpsb
xchg
mov
jg
cmpsb
jo
fwait
mov
mov
mov
daa
or
xchg
inc
imul
addr16
sti
mov
cmpsl
out
rcrl
sub
popf
mov
jae
in
xchg
aaa
stc
aad
add
xchg
fwait
bound
cwtl
mov
test
inc
ret
mov
or
xor
sub
adc
sub
pop
push
test
inc
stos
sub
sbb
sub
adc
add
cmpsl
and
adcb
pop
sahf
enter
lahf
jg
adc
add
mov
fildl
jmp
mov
mov
loop
jp
in
stos
inc
cwtl
aam
std
stc
icebp
pop
mov
dec
or
push
push
dec
jp
and
dec
xchg
mov
stc
dec
cltd
or
sbb
sub
xor
xor
into
adc
xor
sbb
sti
xchg
xor
rcrb
inc
scas
sub
iret
push
dec
inc
ja
test
loope
arpl
jno
stos
stos
movsl
mov
xor
test
mov
ds
sbb
xchg
stc
add
test
inc
cli
jne
arpl
cmp
push
cli
push
cmp
lods
pop
mov
push
sbb
jle
or
test
pushf
push
inc
xor
icebp
sti
cmp
push
outsl
sbb
xchg
hlt
push
insb
jmp
dec
adc
and
mov
xchg
fsubl
pop
call
sub
mov
and
sub
jmp
in
xor
jmp
inc
movsb
xchg
push
mov
das
ret
pop
lret
inc
dec
cmpsb
in
hlt
test
test
mov
gs
lret
loop
mov
mov
cld
loop
aam
inc
sbb
inc
xor
test
mov
arpl
jo
stos
bound
fstpl
mov
mov
and
aaa
cli
test
aam
lahf
adc
stos
negl
sbb
call
imul
leave
sarl
lcall
pop
xchg
jg
pop
nop
or
adc
push
out
mov
test
pop
insb
inc
pop
jo
js
stc
mov
adc
xchg
lock
sbb
jp
into
push
in
mov
xor
push
or
push
stc
ret
popl
and
out
loopne
xchg
testb
cmp
add
or
shll
mov
and
int
stc
xchg
jecxz
rorb
cmp
lret
dec
into
mov
fcmovne
gs
fst
adc
xor
scas
mov
inc
imul
call
mov
out
push
pop
jo
imul
xchg
cwtl
inc
jge
push
xor
aad
jp
mov
xor
dec
jnp
mov
daa
jg
out
iret
pushw
mov
inc
ds
xchg
stos
cmpsb
dec
jmp
lret
sub
add
out
icebp
pusha
add
push
add
jg
sbb
adc
call
ds
jnp
adc
pop
pop
divb
dec
jbe
jo
push
mov
stos
test
outsl
aad
loope
add
dec
xchg
mov
popf
cli
mov
mov
lcall
arpl
mov
mov
ror
jp
popa
push
mov
popf
aas
dec
hlt
pop
or
test
mov
movsb
out
insl
insl
les
xlat
sti
ret
mov
xor
pop
mov
mov
cmc
pop
cltd
js
and
imul
test
mov
mov
ss
jge
mov
dec
pop
fdivp
dec
dec
xchg
jbe
sbb
hlt
flds
sub
pop
jnp
lret
stos
xor
dec
icebp
sbb
and
dec
add
out
out
test
and
jbe
pusha
out
jge
mov
cmp
arpl
jge
mov
and
mov
lcall
test
fs
nop
sbb
int3
sbb
xor
les
cmpsl
arpl
xlat
gs
fdivl
and
sbbb
add
dec
pop
cld
mov
mov
fsubs
lods
xor
fnstenv
sbb
cmc
orb
icebp
push
leave
shlb
lds
insb
xchg
xchg
xchg
jl
fistps
std
jle
add
xchg
dec
sbb
and
xor
adc
cwtl
mov
mov
jle
aam
mov
sbb
std
mov
inc
sti
scas
std
pop
jnp
mov
bound
cmp
mov
shlb
mov
dec
xchg
sub
inc
mov
lds
mov
pop
lret
dec
mov
mov
les
leave
into
xchg
enter
push
fmull
insb
insl
jmp
dec
sbb
es
or
or
popf
jle
xchg
dec
adc
xlat
icebp
mov
leave
inc
ds
adc
or
or
or
jbe
jns
je
mov
jo
jmp
or
sbb
je
mov
insb
testl
ret
sti
ret
lcall
addr16
xor
dec
adc
adc
lret
shlb
stos
lock
xchg
dec
pop
inc
jns
xchg
xor
fcmovbe
and
inc
por
sbb
je
cmp
mov
shl
andb
inc
dec
scas
cmpsl
icebp
adc
or
sarl
pop
jle
lret
aad
mov
cli
cmp
and
xchg
xor
xor
cmp
mov
in
outsb
adc
outsb
in
inc
insl
mov
inc
fs
xor
add
inc
cmp
jne
arpl
test
cmpsb
sub
pop
out
and
insb
jmp
negb
sti
and
adc
js
out
stos
loopne
mov
sub
mov
or
in
fimull
mov
fsubl
dec
in
out
xor
rol
idiv
xchg
imul
push
mov
clc
adc
or
enter
call
imul
jmp
jbe
or
mov
and
adc
xchg
pop
and
shll
sub
adc
push
push
jbe
mov
insl
dec
dec
and
nop
andb
add
mov
inc
pop
cmpsb
mov
jno
push
sub
pop
ret
xchg
in
and
cwtl
les
aaa
or
mov
jle
lret
imul
cmpsb
ljmp
iret
shlb
call
rorl
pop
stos
insb
mov
cmc
inc
lds
mov
repnz
faddl
dec
rorl
rcl
test
push
jne
push
dec
outsb
jmp
xchg
sahf
mov
dec
add
int3
mov
mov
idiv
push
inc
call
add
add
sti
hlt
flds
pop
repnz
mov
int3
in
je
repnz
mov
repz
sbb
add
xchg
dec
dec
cmp
sub
and
out
dec
lret
jl
xchg
pop
mov
fadds
mov
cmp
fcoms
lock
push
rcll
mov
fsub
push
dec
nop
insl
mov
push
adcl
lahf
jle
xlat
jp
cmp
sbb
mov
sbb
inc
in
mov
mov
imul
cltd
sbb
adc
mov
push
xchg
enter
fiadds
scas
hlt
nop
sub
push
shrl
xor
sub
aaa
leave
in
pop
bound
adc
mov
push
xor
movsl
pop
pop
mov
and
test
lock
cmp
pop
out
and
dec
in
popf
lret
stc
shr
mov
addr16
lahf
xchg
xchg
out
outsl
pop
cld
repnz
in
mov
xor
test
sub
aam
sub
movq
cmc
into
les
loope
mov
and
ror
inc
push
fdivrs
inc
push
xchg
jmp
adc
mov
test
cmc
xchg
pusha
in
lea
ja
fs
xchg
adc
mov
test
pop
pushf
add
or
cmp
cmp
out
pop
stos
test
cld
xchg
mov
pop
int
fisubrs
jp
jno
stos
or
adcl
in
cmp
sub
lea
das
leave
ret
in
dec
testb
xor
subb
ss
mov
fldt
xor
jno
xchg
jmp
inc
nop
into
fidivs
xor
int3
xor
sub
sbb
nop
jae
sbb
xchg
fldcw
jae
cmp
in
clc
add
xchg
adc
mov
hlt
inc
push
idiv
sub
inc
lea
sub
pop
fucom
jbe
inc
loope
mov
sbb
pushf
sbbl
fistl
sub
in
sti
in
inc
dec
out
mov
fsubl
iret
pop
mov
lds
adc
pop
stos
lds
in
pop
test
inc
inc
icebp
add
mov
hlt
mov
cmp
test
sbb
or
int
mov
mov
mov
push
push
ds
or
icebp
jno
pop
mov
rcr
int3
add
mov
insl
mov
push
je
mov
sbb
pop
inc
push
sbb
push
imull
cmp
outsb
pop
andps
iret
xchg
pop
xor
xchg
dec
cmp
adc
inc
aad
pop
add
add
cmp
insl
adcb
cmp
xchg
stc
std
sbb
sub
insb
xchg
stos
dec
dec
dec
js
psrld
push
jge
out
add
pop
pusha
mov
mov
pusha
int3
sti
pop
xchg
inc
cmc
ss
mov
xor
inc
inc
mov
daa
scas
pop
sti
aad
lcall
sub
sahf
add
stc
test
push
loope
dec
psubsb
add
jge
dec
mov
outsb
fdiv
or
sbb
mov
xor
loopne
enter
cmp
lcall
cmp
ds
leave
cmpsb
daa
xchg
sbb
mov
stc
fmul
mov
sbb
dec
lods
int3
les
sti
cld
bound
ret
sbb
or
mov
aaa
test
inc
jg
mov
mov
les
ss
and
or
or
push
cmpsl
mov
mov
addr16
out
xchg
sub
popf
ret
inc
xor
int3
jp
xor
jnp
lahf
test
dec
out
cmp
sti
int3
mov
cld
loope
dec
jp
sbb
inc
jne
add
pop
add
xchg
xor
jne
sbb
fwait
sbb
aas
shrb
je
dec
test
or
sahf
or
dec
aad
loope
xor
les
xor
pop
mov
mov
test
ds
mov
inc
clc
lds
fwait
sub
loop
adc
and
out
or
mov
adc
jne
outsl
lret
out
inc
les
add
push
fstpl
sahf
cmpsb
mov
gs
in
push
push
pusha
pusha
aad
push
inc
mov
shlb
stos
push
mov
leave
push
orb
aaa
xor
mov
or
movsl
mov
xorl
aas
notb
and
xchg
cmpsl
sub
cmp
je
and
rcrb
insb
or
push
adc
ja
imul
outsl
xchg
les
fstps
fldcw
push
dec
or
hlt
dec
loope
cs
jns
call
imul
popf
aam
mov
das
ss
and
cmp
cs
in
fwait
dec
mov
mov
xchg
es
xlat
or
movsl
je
xchg
dec
xor
jmp
addr16
xchg
mov
add
fstps
mov
add
dec
sbb
sub
ret
jbe
push
jg
sub
xchg
mov
hlt
adc
hlt
fwait
aas
pop
mov
xchg
xor
jns
mov
movsl
pop
scas
fimull
jnp
sbb
jle
sub
sub
out
xor
rcll
xchg
sbb
addr16
rorl
imul
roll
mov
sub
repnz
mov
xchg
xchg
scas
mov
outsl
data16
inc
loopne
jbe
test
add
mov
loope
mov
adc
xchg
fldenv
xchg
fcomps
gs
push
xor
je
mov
dec
cld
push
pop
adc
pop
in
xchg
pop
inc
mov
movsb
imul
xor
push
fsubrp
clc
std
sub
movsl
cmp
add
jmp
arpl
push
pop
sub
adc
push
ucomiss
mull
int3
adc
jne
sbb
das
in
push
out
vpshufd
or
popf
lods
xchg
lds
push
xor
cmp
jp
pop
pop
cli
negl
rclb
das
or
out
ret
cmp
insb
movsb
push
adc
inc
imul
arpl
mov
add
std
cmpsl
push
mov
ljmp
ja
pop
adc
or
movsl
iret
or
and
inc
aam
loop
insl
in
adc
in
sbb
add
xchg
lds
out
lds
or
fcompl
loop
cmp
es
push
in
fs
ficomps
dec
cmpsb
test
sub
xchg
adc
push
mov
xlat
cmc
sub
and
and
lret
jae
outsl
cmp
or
xsaveopt
inc
pushf
inc
stc
sbb
aad
mov
iret
push
aas
jae
lods
fsubrs
andl
iret
jecxz
aad
xchg
adc
clc
and
jnp
mov
mull
mov
pop
mov
cmp
int
mov
add
cs
or
mov
push
sub
les
gs
shll
jae
jle
push
mov
imul
jmp
xor
sub
cli
aas
into
imul
insb
pop
lret
lds
xchg
in
push
scas
mov
mov
jns
scas
mov
xor
sbbl
jns
push
ret
int3
push
insl
mov
push
or
mov
pusha
or
dec
gs
idiv
decb
jecxz
mov
in
add
pop
cmc
fs
sbbb
push
dec
pusha
jb
push
lods
je
rclb
mov
movsb
pop
iret
frstor
nop
cld
cltd
fcmovnbe
fsubrl
std
inc
pop
mov
mov
inc
jmp
and
dec
push
popa
daa
ret
inc
jle
and
daa
cmp
pop
les
sub
loope
push
fiadds
mov
adc
ret
inc
ds
int
ss
sbb
push
push
addr16
cmpsl
push
std
arpl
mov
add
inc
bts
jb
push
into
filds
inc
stc
imul
jb
pushf
lcall
dec
push
dec
jo
dec
mov
push
aad
xchg
push
or
and
movsl
xchg
dec
mov
mov
pop
lahf
dec
pop
rcr
dec
subb
and
dec
add
scas
or
loope
dec
add
bound
pop
and
push
or
adc
jno
in
into
cltd
sub
repz
insb
mulb
test
cli
rol
jl
pushf
ret
je
push
xor
xchg
sbb
inc
scas
stc
push
out
popf
mov
flds
std
mov
jno
xchg
mov
add
shlb
jo
push
pop
iret
mull
je
stos
les
or
inc
das
xor
lahf
cmpsb
adc
push
sbb
imul
subl
loope
xchg
add
fisubl
sbb
lahf
bound
mov
ds
mov
out
xchg
mov
insb
stos
pusha
outsb
mov
xlat
add
jb
pop
into
pusha
push
pop
dec
cld
and
push
pop
push
in
push
sbb
cmp
xchg
and
or
mov
mov
mov
ds
push
rcll
mov
je
xor
jge
cwtl
jno
cmpsb
push
insb
fdivs
cmpsl
jmp
jp
and
xchg
cwtl
test
add
pop
cmp
jmp
int
mov
jne
sub
sbb
popf
and
push
cmpsl
add
repnz
in
and
mov
cmp
mov
mov
in
lock
jge
pop
xchg
movsl
push
popa
push
cmp
sub
outsb
xor
mov
call
dec
hlt
push
jnp
push
addr16
add
cmpsl
popa
dec
or
inc
push
cmp
mov
aad
cmc
mov
mov
inc
dec
sbb
pop
movsb
notl
sbb
xchg
gs
mov
push
pop
loop,pn
sarb
jg
cmc
push
sbb
leave
and
stc
leave
jns
call
aam
mov
insl
and
push
mov
les
cltd
xchg
pop
enter
sub
cmp
inc
push
fstp
lret
push
out
idiv
mov
lods
mov
or
jle
adc
mov
cld
imul
and
xor
aaa
jbe
xchg
das
add
mov
or
in
or
mov
insb
sub
mov
movsb
xor
loopne
adc
int3
andb
ret
rcl
int
and
lods
push
lds
xor
xor
shll
das
or
aaa
loop
clc
mov
pop
cmc
stos
mov
jmp
pop
push
pop
sub
pop
insb
sbb
jmp
pusha
mov
mov
stc
mov
pop
test
mov
arpl
inc
mov
ja
insb
cmp
js
in
das
repnz
test
sarb
fldcw
mov
outsl
scas
pop
inc
push
mov
sbb
mov
dec
ja
jne
out
add
ja
or
addr16
rcll
mov
mov
mov
out
xchg
scas
stos
xchg
xchg
fs
sub
cmp
jg
in
ss
dec
fisttps
stc
ficoms
in
in
cmpb
cmc
shrl
rorb
push
or
mov
pushf
cmpsl
jle
stos
dec
mov
pop
ja
mov
push
push
sbb
sbb
adc
aam
sahf
sahf
pop
jge
push
or
sub
nop
jnp
jo
inc
in
pop
pushf
xchg
or
lcall
xor
add
mulb
pop
iret
mov
add
pushf
xchg
push
ljmp
ret
sbb
push
bound
sti
mov
pop
cmp
cmc
cmp
repnz
mov
mov
jae
filds
push
push
ds
xor
mov
lcall
data16
jnp
fsubs
mov
or
cmp
pop
and
add
xchg
insb
cmpsl
mov
dec
or
dec
mov
inc
stc
aaa
lock
sahf
mov
popa
sar
test
mov
mov
pushf
jecxz
stos
mov
insl
pop
cld
mov
imul
sub
xchg
aam
and
mov
xor
movsl
adc
mov
push
outsl
mov
popf
sbb
rorl
out
shlb
cmpsl
lret
push
xor
pusha
stc
loopne
mov
data16
xchg
lods
dec
icebp
std
adc
mov
lds
pop
mov
dec
xor
inc
push
call
cmpsb
push
jl
imul
in
and
xchg
movsl
add
es
imul
xchg
lret
jmp
mov
insb
mov
mov
push
lret
mov
rol
add
int
out
cmc
mov
mov
test
jno
mov
mov
adc
mov
daa
xchg
fwait
sub
stos
ret
xchg
jle
lret
jnp
test
mov
mov
add
dec
loop
or
pop
pop
sub
incb
mov
pop
sbb
and
mov
ret
mov
scas
nop
xchg
stos
xchg
cltd
cld
hlt
dec
out
mov
or
jnp
and
addr16
xor
push
movsb
inc
dec
push
testl
mov
cs
xchg
in
lcall
dec
mov
or
cmpsb
sub
and
jne
les
int3
insl
jnp
arpl
outsl
jne
dec
mov
leave
or
in
pop
sbb
adc
loopne
xchg
pop
dec
pop
leave
iret
lods
mov
cwtl
mov
cltd
mov
jl
pop
into
mov
adc
test
push
dec
adc
adc
pop
icebp
cmp
fsubp
sti
jge
inc
lahf
loop
mov
cmp
dec
inc
sub
xchg
adc
cmp
lods
inc
jg
loopne
adc
jb
or
int
cmp
jbe
push
cli
cmp
xor
xchg
sbb
add
rorl
and
ret
testl
mov
sub
add
stc
lcall
xchg
shll
pop
mov
insb
das
push
mov
lds
cs
sbb
mov
mov
push
data16
push
mov
in
sub
xor
pop
cs
mov
push
push
xchg
ss
jb
stos
xor
popf
add
dec
adc
in
add
cmpl
ficomps
imul
push
push
push
cmp
pop
add
cmpsb
shrb
fidivl
rclb
mov
mov
movsb
mov
push
cmpsb
cmc
cmc
loope
int
shrb
subl
mov
pop
lret
push
mov
pop
leave
sbb
sbb
stos
xchg
mov
loopne
je
js
in
mov
or
cld
sarl
push
pusha
shll
xchg
xchg
pop
jp
and
out
inc
enter
xchg
js
dec
insb
test
stos
add
add
repnz
dec
sbb
je
movsb
ss
jmp
movsb
or
pop
pop
pop
mov
add
and
push
inc
ret
add
jmp
jecxz
andb
lahf
clc
mov
add
sub
in
aas
mov
pop
andb
mov
out
lods
iret
add
lods
es
mov
cmp
addl
das
or
adc
mov
int
je
adcb
stos
inc
into
mov
movl
jmp
and
outsl
add
mov
lret
insb
mov
inc
rcrl
and
sbb
mov
and
mov
dec
jge
mov
outsb
rorl
stos
sti
fidivrs
or
push
xor
and
adc
inc
jae
pop
push
int3
cmpsl
cli
int
mov
cltd
xor
or
cmp
jl
jns
add
loop
in
pushf
mov
movsl
repz
aaa
pop
rolb
push
pop
pop
mov
dec
xchg
out
pop
jmp
pop
imul
push
add
push
pushf
pop
add
adc
nop
scas
fsubrp
popf
pop
mull
or
clc
ja
scas
sub
test
repz
add
shrl
xchg
inc
rcll
add
jl
into
or
jp
pusha
in
imul
dec
xor
and
lock
sti
xchg
gs
pop
ficoms
and
xchg
lods
stc
xchg
xchg
lret
mov
sub
fstl
dec
xor
mov
ret
aas
add
adc
ret
dec
out
pop
sbb
add
dec
lret
das
and
xchg
push
mov
ret
out
je
loope
fsubs
pop
dec
popa
jo
cs
and
xchg
jo
ljmp
mov
sbb
sbb
sbb
fwait
mov
push
jmp
lods
addr16
lea
add
cmpsb
dec
push
out
mov
dec
ja
imul
and
dec
add
mov
das
test
ret
cmp
int
xor
ja
mov
popf
push
call
stc
popa
sbb
stos
sub
ljmp
or
lcall
movsb
xchg
sbb
dec
mov
pop
cmp
dec
fsub
xchg
mov
dec
add
in
or
out
jl
out
lock
rorb
sub
int
iret
xor
sub
cmp
cmp
add
dec
outsl
ja
imul
sbb
clc
pop
sub
ror
popf
cmpb
add
in
das
pop
mov
idiv
outsb
fsts
adcb
xor
jl
bnd
push
xchg
mov
pop
pop
ljmp
mov
out
xor
jno
out
mov
mov
adc
sub
out
je
and
loop
and
sti
je
sub
mov
jg
mov
sarb
inc
into
sbb
stc
adc
lock
sahf
push
cltd
data16
inc
cld
jl
push
or
hlt
lret
std
or
loopne
sub
les
cltd
jmp
gs
push
imul
dec
loopne
orb
push
ret
adc
test
pop
jp
gs
mov
out
lods
inc
cmpsb
mov
pop
lahf
jbe
mov
mov
xchg
mov
std
adcb
leave
add
push
inc
jno
cmpsl
mov
sbb
repz
dec
xchg
sbb
addr16
push
sbb
dec
jbe
jnp
cmp
pop
cmp
testl
dec
ljmp
or
pop
cs
or
lods
mov
pop
repz
jmp
in
dec
push
jmp
sub
js
pop
aam
lret
movb
xor
ds
xchg
test
push
pop
mov
dec
icebp
cltd
and
mov
inc
jg
sub
nop
jb
aad
out
call
stos
shrl
add
xchg
lock
push
mov
or
idivb
mov
outsb
sbb
mov
aam
dec
jecxz
mov
jbe
imul
dec
icebp
int
and
in
lea
mov
flds
loop
mov
or
insb
jge
test
inc
in
scas
dec
mov
in
and
sub
or
jp
int3
mov
int
cmpsl
clc
in
mov
mov
jbe
sbb
test
or
push
mov
out
das
lds
jne
aaa
adc
insb
sbb
or
adc
sbb
addl
push
stos
dec
dec
mov
shl
sbb
adc
insl
mov
jg
test
cmpsl
sub
or
cs
adc
test
cmp
xor
adc
mov
xor
pop
iret
iret
dec
or
cmp
sbb
shll
lret
push
aam
mov
and
pop
xlat
push
mov
adc
jl
jmp
stc
sub
daa
ficoml
dec
sub
daa
mov
or
sub
popf
mov
dec
add
inc
lret
out
jecxz
leave
mov
frstor
cwtl
fimuls
jmp
lret
cltd
push
xchg
stc
imul
cmp
xchg
jbe
xchg
ficompl
cmp
sbb
xchg
stc
jb
mov
dec
mov
mov
mov
mov
fs
mov
mov
and
sbb
sbb
adc
jp
nop
scas
lods
sahf
fisubl
out
popf
jne
fistpll
and
sbb
aas
daa
loop
mov
and
jno
divl
or
ja
repnz
pop
push
sub
inc
mov
or
or
sbb
subb
fwait
inc
xchg
aaa
push
mov
pop
inc
push
and
xchg
push
fwait
cmp
xchg
fadd
pop
bound
dec
lcall
mov
ja
and
movsl
mov
test
jge
ret
or
pop
add
pop
pusha
sti
pop
clc
addb
xor
and
cwtl
or
push
test
je
xor
cwtl
xor
push
mov
gs
xor
cmp
clc
pushf
and
cs
xor
inc
addr16
mov
or
or
mov
pop
mov
or
push
sarl
sbb
sub
loop
loopne
jo
dec
js
movsb
push
mov
cmpsb
notb
mov
mov
push
int
cmpb
sub
jle
test
test
out
and
cld
addr16
or
and
or
inc
mov
sbb
inc
cltd
popf
mov
mov
sub
cs
add
pop
mov
pop
push
adc
push
shll
mov
imul
outsl
sbb
ficompl
in
jb
outsb
mov
xchg
mov
push
stos
movb
cmp
stos
lcall
cmpsb
xchg
mov
popa
xor
mov
in
iret
das
stos
movsb
movsb
jge
sub
push
cwtl
xlat
jmp
pop
ds
push
and
jns
jnp
popa
xor
outsl
xchg
sub
lahf
icebp
mov
and
pop
clc
or
jo
pop
test
ror
jo
insb
pusha
jne
repnz
mov
jl
fmul
orb
lret
cmc
cmp
xchg
push
cmpl
jmp
insb
xchg
mov
lods
mov
leave
std
pop
push
mov
sub
pop
fnsave
jb
xchg
mov
int
jns
push
rorl
xlat
fsubp
or
rorb
fmul
adc
mov
loopne
mov
ljmp
xchg
int3
cwtl
lock
mov
dec
push
pop
sub
dec
inc
test
push
imul
pop
dec
je
sbb
aad
mov
std
cmp
jae
jne
out
cmpsb
les
or
cltd
nop
mov
jae
icebp
push
test
and
xchg
shl
adc
adc
les
push
lods
or
mov
cmc
and
cwtl
arpl
stc
cmc
fsub
ja
decl
jmp
dec
fwait
and
mov
sbb
imul
xlat
xchg
imul
sub
adc
add
sbb
cmp
cmpl
sbb
push
pop
test
inc
popa
pop
or
arpl
repnz
xor
push
cs
loope
repnz
sub
repz
dec
mov
lods
xchg
fstpt
adc
mov
mov
lret
and
cmp
push
push
cmc
jp
mov
test
lret
push
jg
push
loop
pop
xor
pusha
out
out
outsb
loopne
call
and
test
test
cmpl
mov
mov
vfnmaddps
lcall
xchg
jns
xchg
insl
ret
xor
sbb
stos
mov
pop
loopne
push
add
mov
cmp
push
into
fnstcw
jae
call
es
pop
mov
adc
add
mov
jmp
or
das
ret
sub
aas
ds
int3
jbe
xor
adc
xchg
in
sbb
xchg
dec
lods
leave
pop
add
push
mov
xor
or
jecxz
mov
mov
push
pop
pop
incb
sub
cs
and
insl
jae
mov
addb
xchg
cmp
mov
js
test
jno
inc
outsl
or
xor
cld
in
adc
mov
sbb
in
cmpsl
movsl
lahf
sbb
aaa
mov
mov
and
stc
inc
mov
int
inc
fcoms
add
push
repz
ja
push
push
xchg
leave
pop
sub
pop
negb
mov
mov
lds
sub
push
mov
add
mov
not
arpl
leave
mov
scas
rclb
popf
inc
sbb
jb
nop
cmp
out
in
das
mov
loop
xchg
cmp
or
adc
adc
cmp
test
xor
in
push
or
arpl
add
pushf
mov
je
in
inc
inc
outsl
xor
xchg
jg
xchg
sbb
adc
repz
outsl
cmp
in
mov
xor
dec
mov
push
test
xor
jl
pop
cli
sbb
cmp
in
dec
pop
arpl
popa
rcr
sbbl
call
fnsave
push
idivb
ds
out
pushf
add
lock
pop
adc
and
or
dec
xchg
addr16
out
rol
out
shr
sbb
ror
lea
jmp
scas
or
stos
pop
inc
push
loopne
std
cmpb
xor
loope
jae
xor
vfrczps
mov
cli
int
push
and
jb
ficoms
bound
roll
ret
xor
call
mov
stc
xor
test
in
lsl
je
addl
orb
sub
ss
sbb
inc
or
inc
mov
hlt
lret
addr16
adc
xchg
int3
mov
js
xchg
aaa
mov
jne
dec
jl
mov
fildll
inc
push
add
mov
jbe
jo
sub
or
mov
xor
jg
jmp
push
sbbl
cli
repz
ds
das
pop
imul
imul
sti
mov
stos
dec
jp
xor
cmp
sub
and
movsb
das
cmpsl
cs
inc
inc
cltd
inc
adc
mov
cmp
xor
sub
and
bound
mov
testb
daa
icebp
cmpsl
stos
aam
push
outsb
bound
pop
jmp
out
sahf
xchg
nop
push
adc
inc
sub
call
loopne
cld
mov
adc
je
cmpsl
inc
es
mov
push
mov
dec
and
adc
movsl
xchg
pop
lea
inc
or
lea
add
scas
fidivrl
clc
jns
loopne
adc
cmp
dec
mov
in
mov
in
add
jp
ljmp
xchg
dec
std
push
jl
hlt
mov
xchg
dec
sahf
push
xor
jbe
jg
cmp
outsl
imul
fisubrs
add
jle
xor
mov
scas
cli
sub
adcl
nop
iret
mov
push
shll
mov
cs
pusha
scas
ja
add
jle
jne
aam
iret
enter
clc
hlt
push
cmc
mov
daa
repnz
call
xchg
dec
dec
sbb
jle
lret
les
cld
lock
fistpll
push
stos
cli
sbb
pushf
lret
call
out
lds
loopne
sahf
pop
xchg
lods
fldl
mov
scas
dec
add
lcall
adc
inc
ja
repz
jae
inc
je
ljmp
aam
insl
cli
in
imul
outsl
arpl
mov
lods
into
mov
lcall
mov
cmp
es
aaa
stc
pushf
sbbl
jmp
jns
aam
incl
or
push
xchg
daa
adc
xlat
add
ljmp
jns
std
and
out
rol
cs
mov
dec
cmc
cmpb
iret
and
in
fbstp
pop
jne
adc
int3
pop
dec
jl
lods
pop
xlat
xchg
rcrl
arpl
jl
mov
cmp
cwtl
ljmp
add
shll
push
fldenv
in
dec
push
loope
popa
add
inc
and
aas
jns
adc
mov
pop
filds
sbb
inc
pushf
loope
pop
jo
lret
popf
xchg
jo
add
das
lahf
cmc
and
sbb
xchg
sti
mov
incb
lods
xchg
sbb
test
js
and
push
xchg
fimuls
or
int3
ss
cs
fwait
dec
imul
sbb
rol
add
or
shll
out
lahf
jne
enter
cmp
jp
test
scas
adc
xchg
xor
movsl
mov
inc
add
pop
dec
jecxz
ds
in
fisttps
lea
jnp
adcl
mov
push
dec
mov
aas
nop
jnp
jb
bound
cmc
stos
or
xor
mov
enter
sbb
in
gs
psadbw
add
jg
leave
sub
xor
leave
repz
das
cmpsb
dec
mov
jg
out
dec
bound
test
xchg
nop
rcrb
bound
inc
mov
and
cmp
xor
xchg
add
aaa
cmp
jb
jbe
mov
aad
out
xor
out
scas
mov
xor
mov
pop
mov
lahf
int3
int
clc
das
andl
aam
in
add
adc
xchg
jnp
sarb
pop
ret
xchg
dec
jg
lods
mov
rclb
or
or
outsb
mov
push
jns
xchg
add
xor
jne
mov
testb
and
ljmp
fisubrs
inc
jo
push
or
mov
test
or
xor
outsb
pop
negb
insl
sub
test
out
movl
push
bound
rorl
mov
push
lret
hlt
scas
and
adc
gs
sbb
mov
adc
and
inc
std
push
addl
push
shll
fwait
cmp
sub
lahf
adc
test
cmpsb
and
mov
pop
imul
loopne
cltd
test
scas
imul
test
or
loop
cmp
gs
cmp
xlat
daa
es
and
jae
pop
mov
ljmp
mov
mov
sub
aad
ret
jle
add
add
inc
cs
and
mov
fmull
inc
insl
jae
sbb
jp
xchg
in
jae
repz
enter
test
popa
clc
fs
cmp
or
lea
fcoms
stc
push
addr16
ljmp
mov
rep
or
push
sub
rcr
dec
push
mov
push
push
jle
push
es
mov
imul
sub
cmp
and
scas
mov
mov
leave
mov
xchg
imul
cwtl
dec
orl
mov
mov
dec
jp
xchg
xchg
dec
pop
into
bound
arpl
jbe
mov
test
push
mov
aad
movl
data16
int3
aam
pusha
enter
dec
sbb
pop
test
dec
inc
inc
aam
jnp
popa
dec
in
jmp
mull
add
inc
xor
push
hlt
sbb
mov
cli
jne
in
mov
cld
push
and
dec
pop
loop
pop
mov
mov
js
mov
jge
jno
movl
cmp
loope
mov
mov
jne
inc
loopne
jb
and
mov
and
pop
lea
mov
pop
and
mov
or
les
popa
xor
sub
movsl
add
pop
xchg
push
pop
pop
pop
mov
adc
in
push
or
mov
jae
inc
aas
pop
and
mov
jnp
data16
pop
push
jne
loop
push
push
adc
jmp
push
fs
pop
ljmp
in
decb
pop
adcb
cmp
fidivs
icebp
cmp
jl
sti
mov
push
cmpsl
ja
in
in
push
or
jl
jae
push
icebp
out
test
imul
xchg
cmp
out
push
cmc
mov
sub
out
push
jl
mov
mov
test
fucomip
in
cltd
sub
cmp
int3
inc
dec
cmp
fildl
cltd
mov
mov
in
mov
out
gs
sbb
ret
and
jae
scas
outsl
sbb
mov
xchg
aam
arpl
or
ss
sbb
cli
lret
xchg
fs
test
mov
xor
mov
add
jp
sbb
popf
sbb
cmp
jecxz
mov
in
mov
cmp
add
lock
sub
xlat
je
dec
xchg
in
cs
and
pop
lods
in
lret
pop
imul
push
cs
mov
sbb
cs
push
inc
inc
jb
cltd
push
mov
pusha
lahf
daa
sub
adc
jno
mov
jno
push
imul
push
push
jle
sub
out
jnp
cwtl
mov
lods
repz
pop
das
ja
jns
outsb
aad
mov
test
dec
adc
inc
test
call
sub
push
out
or
popf
and
mov
cmp
cs
inc
ss
adc
jecxz
mov
xchg
adc
xor
sub
cmpl
sub
daa
ljmp
stos
mov
popf
je
fiadds
test
dec
jecxz
jp
and
ss
xor
imul
inc
shrl
inc
js
push
sahf
jmp
adc
mov
pop
insl
mov
fbstp
pop
push
dec
call
fidivrs
mov
sbb
add
xor
mov
cmp
ret
cli
xchg
imul
mov
mov
mov
aam
pop
call
stc
or
inc
into
rorl
mov
cmp
sbb
shr
jnp
sbb
fdiv
ja
adc
jno
or
dec
mov
into
cld
inc
xor
push
ljmp
sbb
ret
pusha
sub
fldcw
or
dec
inc
mov
lret
mov
mov
push
ljmp
outsb
inc
pop
popa
lret
lock
inc
daa
aas
arpl
xlat
mov
test
pusha
fistpl
test
enter
ficoms
mov
pop
mov
inc
or
inc
lock
hlt
int
sbb
aad
enter
popa
xchg
dec
fdivs
int
mov
hlt
cmp
push
or
incb
inc
cmc
push
cmpsb
outsb
lret
xchg
adc
pop
idivb
adc
mov
pop
testl
cmpsb
cmpsl
test
leave
xchg
cmpsb
xor
scas
mov
dec
out
jae
and
dec
jne
xchg
jne
cli
out
ret
mov
xchg
loope
push
pop
add
lea
push
fmull
sub
xchg
dec
scas
cmp
ret
pop
rorb
mov
add
mov
jge
nop
lods
pop
lahf
fnstsw
ret
inc
out
daa
add
mov
out
leave
cmc
inc
adc
clc
inc
sbb
xchg
orl
in
scas
mov
sub
jbe
or
stos
mov
cmp
xchg
insl
ret
push
jo
jmp
add
xor
cmc
sub
push
insb
or
mov
nop
repz
sbb
fwait
popf
fxch
in
jle
fs
addr16
mov
adc
mov
mov
xchg
popa
fwait
aad
iret
dec
out
jmp
mov
mov
jmp
push
adc
stc
dec
inc
pop
sar
adc
mov
add
imul
push
rolb
mov
add
fcomip
stos
cs
imul
jbe
pop
dec
addr16
mov
loope
in
xor
mov
mov
xor
shrb
lock
lds
fbstp
aas
xor
addr16
mov
rcr
cltd
xor
sbb
mov
and
cmc
into
xchg
push
or
jmp
push
xchg
push
sbb
shll
bound
and
push
adcb
test
out
adc
pop
inc
push
or
iret
jns
dec
cmc
test
xor
jge
mov
adc
push
xchg
inc
cmp
jp
imul
movsl
fmuls
xchg
repnz
ret
movsl
push
xor
pusha
cmp
fwait
nop
scas
repz
imul
outsl
outsl
int
cmp
push
fwait
xlat
push
insl
stos
jmp
jbe
dec
add
cmp
movsb
sbb
xchg
push
add
mov
jo
jmp
inc
mov
leave
mov
ljmp
iret
mov
outsb
jl,pn
mov
test
les
jmp
stc
pop
jo
cmp
mov
lds
push
loop
push
rclb
adc
mov
lcall
push
std
outsb
dec
outsl
dec
or
jmp
pop
call
jl
xlat
xchg
jle
mov
ret
mov
sarl
cmp
lret
mov
into
or
mov
xchg
or
sbb
jbe
cmc
jp
ficoml
into
jbe
in
aam
sub
nop
inc
lahf
pop
outsb
dec
ja
fsubl
decb
jb
sbb
insb
xor
loop
push
jae
sub
movsl
inc
adcb
out
fadds
lea
in
mov
cmp
push
inc
xchg
pop
fnstcw
loopne
fisubrs
cmc
push
push
fidivl
cmpsb
addr16
push
cmpsb
ja
enter
jo
es
insb
cmp
push
test
push
pushf
fmulp
loopne
enter
insl
mov
lods
test
ds
mov
or
jae
and
sub
and
cmp
pop
xor
cmpsb
daa
aam
mov
push
ret
shl
pop
cmp
mov
arpl
fwait
ror
xor
lcall
rclb
lret
out
imul
call
pop
xlat
bound
pushf
sbb
xor
stos
adc
sbb
sub
adc
dec
rcll
jns
rclb
mov
outsl
outsl
lea
test
pop
or
adcb
imul
or
pop
lcall
sarb
pop
ds
add
jecxz
jg
les
dec
std
push
fsubl
mov
scas
add
jg
pop
xor
bound
fildll
and
repz
and
call
cmp
repnz
mov
cmp
dec
lods
cmp
sbb
add
dec
das
xor
testb
inc
mov
add
mov
fsubrl
cmc
cmp
lods
mov
push
js
dec
mov
cmp
imul
popfw
lret
lods
sub
data16
cmp
sbb
jge
hlt
adc
dec
scas
xadd
jnp
pop
push
cmc
gs
push
lret
cmpsb
neg
sbb
xor
push
mov
cmp
jp
jb
and
mov
sbb
idivb
pop
mov
sub
xchg
inc
and
or
sub
aam
mov
cmp
popf
xlat
cli
into
sahf
ljmp
arpl
push
mov
das
lock
mov
jecxz
inc
out
mov
mov
sbb
jae
out
add
sbb
insl
mov
arpl
outsl
sar
sbb
mov
mov
aad
test
pop
mov
dec
fwait
shll
addb
fmul
inc
mov
push
movsl
or
jae
dec
push
add
movsl
push
mov
out
sbb
push
rcr
and
in
lcall
in
icebp
mov
sub
mov
or
or
mull
inc
jl
imul
add
stos
jno
and
je
add
sbb
add
sahf
call
xor
or
loopne
push
aaa
lcall
sub
test
test
daa
sar
les
loope
xchg
mov
pusha
stos
xchg
push
and
arpl
push
mov
ljmp
sub
mov
and
xchg
push
imul
dec
jle
loopne,pn
movsb
add
fisttpll
inc
push
mov
inc
stc
shrl
xchg
icebp
imull
fisttps
mov
aad
jnp
loope
push
sbb
push
pusha
dec
or
adc
dec
mov
inc
jg
test
push
dec
jge
mov
sbb
xchg
out
loop
pusha
leave
push
int
lock
lret
push
dec
and
outsl
das
les
jo
sbb
mov
jp
and
jno
mov
xor
xor
mov
clc
fstl
test
xorb
mov
mov
jno
inc
pop
pop
inc
xor
mov
sbb
push
call
pop
in
jbe
jmp
fists
mov
cmp
inc
stos
movsl
jo
cld
jbe
pop
mov
sub
stc
ljmp
aaa
mov
sbb
cs
sbb
aaa
xor
test
add
out
mov
in
pop
sub
xchg
out
cwtl
movsl
cli
add
fstpt
andb
pop
popf
outsl
dec
arpl
xchg
loop
test
xor
out
ret
cmpb
fcomp
hlt
jne
mov
and
cmc
jo
jp
nop
icebp
fcompl
es
fisubs
push
add
mov
shrb
mov
rol
lods
arpl
mov
std
clc
std
xor
xor
xchg
aaa
push
scas
mov
mov
fwait
icebp
icebp
jmp
lahf
pop
out
es
pop
das
test
jne
out
out
movsl
and
les
inc
pop
inc
dec
cmp
jo
mov
mov
stos
cmc
ror
push
fadd
sub
das
popa
jmp
inc
add
icebp
and
inc
jnp
mov
enter
jecxz
push
les
sbb
inc
inc
cmpsb
add
sahf
insl
dec
dec
clc
mov
push
js
andb
in
add
mov
xlat
enter
lock
insl
push
xchg
sbbl
popf
mov
pop
std
adc
pop
gs
fwait
add
jmp
insb
jmp
sti
push
lcall
flds
mov
insb
shl
fcompl
icebp
xchg
emms
lods
ja
jl
test
js
sub
push
es
int3
bound
andl
xlat
mov
xor
dec
push
lahf
cmp
jns
mov
push
xchg
sub
fwait
cmp
movsb
xor
lahf
jge
pop
push
pusha
out
push
xchg
rorb
adc
jb
cmp
popf
out
jb
imulb
pop
cwtl
std
mov
adc
nop
js
mov
lods
rcl
and
jns
cli
lods
jmp
stc
xor
jne
lock
or
push
xchg
xor
push
lret
cmp
ret
add
inc
cmpsb
movsb
xchg
add
jo
and
out
scas
mov
xor
adcb
arpl
out
hlt
sahf
aas
daa
lds
lock
rcrb
adcl
loop
scas
popa
shrb
pop
pop
lds
pushf
outsl
ret
push
cmp
cld
inc
mov
and
adc
or
mov
test
add
add
ficoms
xor
fs
aaa
adc
out
out
pusha
stos
or
adc
push
into
pop
sub
sub
cld
or
mov
mov
mov
stos
xor
stos
scas
adc
sbb
jl
pop
orb
cmpl
mov
cmp
int
rorl
mov
aam
adc
in
dec
fst
imul
sub
sub
orb
xchg
insl
inc
fiadds
test
jle
cli
xorb
cmp
sub
cwtl
xchg
in
or
and
inc
jp
aaa
pop
xchg
adc
mov
stc
in
push
add
or
dec
dec
in
int
cmp
in
dec
xlat
sbb
es
stos
imul
dec
sub
test
jp
js
ja
cmpsl
bound
xchg
js
cmp
daa
mov
cmpsb
les
sbb
push
loope
and
shrb
lret
test
pop
cltd
mov
xchg
fistps
jge
lods
fidivrl
sbb
arpl
xor
xchg
out
call
sahf
cli
xchg
clc
sbb
adc
cmp
shll
mov
push
mov
xor
sti
clc
add
inc
js
lcall
sub
inc
popf
push
mov
std
aas
arpl
repnz
mov
movl
jns
test
xor
pop
mov
or
test
fildl
rcrl
pop
nop
and
or
aas
cmpsb
aaa
hlt
jge
sub
inc
push
mov
cmp
aaa
je
clc
mov
hlt
in
fs
jl
push
in
test
xor
lcall
ret
mov
jmp
pop
testl
mov
xchg
repnz
fwait
aad
je
pop
out
icebp
xor
push
cmp
pop
dec
xchg
cmp
pop
outsb
cwtl
popa
pop
js
sarb
fwait
shll
xchg
or
or
cmpps
nop
lcall
mov
addr16
rol
lock
xor
lea
xor
push
sub
mov
pop
or
lds
pop
lea
idivb
aad
lods
xor
faddl
mul
push
sbb
setbe
push
in
loop
out
cmp
dec
cmpl
fwait
popa
dec
mov
leave
loope
mov
aas
das
and
xchg
add
mov
lret
mov
shrb
sbb
xor
and
add
je
push
iret
add
mov
jle
jmp
lret
mov
and
or
ds
movsl
ljmp
xchg
aas
lock
add
mov
push
mov
adc
rolb
mov
cld
cmp
mov
xor
stos
je
ret
cmp
faddl
or
scas
sbb
mov
sbb
insl
xor
pusha
mov
mul
aam
adc
pop
test
ljmp
push
or
dec
sbb
lret
add
ret
inc
or
sbb
ds
xchg
sti
data16
xchg
insl
cmp
pop
loopne
mov
add
sub
negb
lcall
add
or
cmpsl
cmpsb
outsb
test
dec
dec
pop
lods
fldl
mov
repz
mov
test
pusha
mov
pop
jo
iret
es
pop
int
lods
dec
imul
inc
mov
jne
adc
repnz
jecxz
repnz
mov
xor
inc
icebp
jae
outsb
js
int
xor
ss
push
icebp
dec
jge
int3
pop
pop
cld
into
call
push
sbb
inc
lock
sbb
mov
notb
cli
dec
call
add
dec
mov
jbe,pt
xor
dec
lret
cli
sbb
fdiv
mov
inc
and
jbe
orb
out
jnp
xchg
psubw
clc
call
test
cmp
icebp
mov
mov
out
aad
cmp
popf
sub
dec
fwait
subps
mov
ja
cwtl
hlt
or
inc
pop
jnp
and
je
js
cmp
pop
outsb
inc
cmpsl
dec
cmpsb
mov
inc
adc
sahf
inc
jp
push
sub
mov
scas
loopne
cwtl
or
imul
shrl
sarl
imul
ss
jg
mov
ret
pop
mov
cmc
pop
cmpsb
xlat
and
push
mov
sbb
pop
fsubrl
stos
pop
add
pop
dec
test
mov
xchg
sti
xchg
mov
or
cmp
ds
js
mov
push
mov
ljmp
push
dec
mov
mulb
inc
adc
jl
cmc
mov
sbb
or
ljmp
or
js
mov
cmpb
jb
ljmp
shll
xor
cltd
jb
hlt
movsb
sbb
gs
sahf
xchg
sar
testl
cs
in
lods
iret
sahf
fidivrs
inc
xchg
int3
cwtl
cli
jmp
aad
cmp
movsb
jmp
push
addl
mov
and
jge
loope
lcall
mov
mov
xchg
dec
sarb
stc
sbb
add
rolb
add
push
subl
insb
jmp
jbe
lods
add
addr16
insl
mov
cmp
imul
pop
gs
sbb
int
pop
jmp
xlat
push
stos
add
jae
ret
xchg
and
outsl
aam
push
or
leave
mov
jp
inc
mov
js
mov
push
xchg
xor
and
enter
out
fmuls
call
lea
cmp
cltd
and
fcomi
in
jge
mov
ror
fidivl
mov
pcmpgtd
scas
into
test
lea
sbb
repz
xchg
inc
pop
push
jo
xor
add
inc
fwait
dec
or
sub
xor
in
xor
mov
jge
insb
inc
pop
sahf
and
cmp
and
mov
mov
imul
int3
cmp
jo
popf
xchg
add
mov
stos
nop
inc
mov
fs
pop
adc
jo
mov
shll
fsubs
loopne
call
fstpl
inc
or
xchg
mov
ds
mov
scas
cltd
or
push
loop
popa
fnstcw
int
insb
loope
addl
in
pop
pop
ror
adc
sub
daa
push
push
bound
xchg
jbe
je
mov
mov
into
in
shlb
lea
or
push
loop
clc
mov
jmp
pop
xchg
shlb
jmp
add
ss
bnd
push
les
xchg
cs
loopne
fstl
nop
call
test
pop
addr16
xchg
loope
sbbb
pop
mov
shrl
xchg
pop
add
or
stos
cmp
mov
dec
lret
mov
hlt
int3
fstp
sarl
jg
pop
sti
mov
aaa
dec
test
dec
inc
push
inc
mov
or
mov
nop
lcall
mov
popa
shl
push
mov
or
mov
movsb
ss
in
mov
into
imul
lods
dec
pusha
mov
jbe
mov
jo
xchg
inc
sub
addr16
add
inc
push
data16
sub
scas
cld
outsb
cmpsb
push
cs
rorl
mov
das
lock
push
int
ja
fxam
or
and
adc
aaa
int
sub
mov
int
inc
inc
jmp
daa
sub
idiv
pop
lods
ret
sbb
xchg
add
push
and
test
mov
std
inc
jecxz
and
into
sti
xchg
adc
aas
jmp
pop
movsb
shll
repnz
sub
ja
sub
jo
xchg
fsubrs
mov
xlat
mov
push
ret
jp
ja
lret
imul
xchg
je
pop
dec
jns
lahf
pop
sbb
leave
add
call
push
roll
loope
xor
dec
jnp
fwait
dec
mov
xchg
cld
or
or
movsb
or
and
clc
add
sub
add
mov
cltd
jmp
mov
int
cwtl
xor
pop
pop
mov
dec
push
mov
mov
jno
arpl
pop
adc
xor
sub
shlb
lds
fiaddl
jg
arpl
mov
gs
sarb
mov
jnp
jno
popa
sti
xor
nop
cmp
faddl
fcmovne
lahf
setnp
xchg
arpl
jnp
out
inc
jbe
mov
jg
mov
mov
push
xorl
jno
sti
fmul
xor
rcr
out
jb
inc
pop
sbb
add
fwait
bound
jnp
pop
pop
sbb
jne
xor
decb
rolb
xor
ja
arpl
rol
in
jp
mov
push
popf
pop
push
scas
dec
mov
mov
push
test
pop
mov
outsb
call
add
xchg
loopne
call
dec
ret
mov
mov
fdivrl
mov
and
pop
icebp
xchg
and
sub
push
inc
or
jg
xor
cmc
jp
jmp
in
add
addl
or
xchg
cli
ja
ljmp
inc
push
js
add
ds
push
push
pop
jb
lret
jle
cwtl
inc
and
fisttps
test
and
add
jb
in
mov
fidivrs
hlt
jmp
push
push
test
push
andl
lea
jnp
fidivrs
pop
add
jns
movsl
fld
nop
xchg
in
ret
rdtsc
test
cs
movsl
mov
fwait
jge
and
xchg
enter
inc
sbb
add
xchg
ljmp
adc
sub
fstl
cmp
bound
mov
sarb
ret
fwait
loopne
cmp
mov
mov
mov
jmp
jge
xchg
cmpsl
hlt
push
push
cmp
stos
out
es
outsl
loop
mov
je
aad
pop
rolb
data16
aas
dec
inc
xchg
push
cld
ja
cli
add
repnz
or
sti
pusha
dec
xchg
mov
cmpsl
bound
jg
jle
scas
cmp
inc
mov
adc
push
xor
filds
dec
xchg
cld
cld
hlt
or
jnp
add
fiadds
mov
dec
add
jmp
in
mov
mov
mov
in
or
dec
ficoml
or
test
cmp
sbb
repz
pop
cmp
shl
in
cmp
fisubrl
sbb
arpl
aaa
loop
mov
jp
insb
mov
sub
lods
jo
sahf
adc
jmp
push
sub
stc
sub
arpl
pop
mov
int
mov
popa
ds
mov
jmp
ja
mov
adc
mul
movsb
loope
in
cli
loopne
jae
pop
mov
xchg
sbb
adc
mov
repnz
xchg
andl
pushf
push
imulb
mov
repz
jge
ljmp
lcall
jmp
push
mov
xchg
cmpsb
cmc
add
mov
jmp
pop
dec
xlat
cmpsb
mov
mov
adc
and
cmc
lock
ffree
add
ds
jo
imul
fimuls
mov
ja
cmp
es
leave
cmp
adc
cs
dec
ja
inc
lock
sbb
dec
es
cltd
imul
push
mov
scas
xchg
add
dec
cwtl
fidivrl
insb
sub
xlat
mov
cmpb
inc
xor
jge
lock
mov
or
pushl
fisubs
sbb
int
and
mov
enter
stos
cmpsb
test
loopne
push
cmpb
jecxz
lret
popf
or
icebp
sub
add
imul
jmp
stos
aad
rorl
xor
mov
cmp
cmpb
into
dec
sbb
xor
add
cld
xor
push
adc
cmp
mov
xor
inc
mov
out
js
pushf
pop
in
stos
gs
fcompl
addr16
testb
es
enter
mov
sub
or
test
mov
adc
or
popa
rcrb
xchg
inc
xor
out
outsl
pop
mov
bound
shll
jne
mov
daa
loop
imul
es
incl
lock
cmp
rcl
int3
or
insb
outsl
push
pushf
mov
mov
or
xchg
out
lock
pop
sbb
xlat
jle
test
sbb
mov
pop
rcr
mov
sbb
fsubs
jg
lret
add
ljmp
popf
jno
fcoms
pop
lods
scas
insb
lret
jne
xlat
xchg
xchg
dec
pushf
icebp
adc
mov
xchg
xlat
xchg
data16
or
loope
sub
jle
mov
dec
sub
call
fnstsw
xchg
add
dec
insb
jg
mov
clc
icebp
sbb
mov
push
cmpsl
push
pop
sti
ss
insb
cmpsl
je
add
andl
jne
aad
push
popf
and
mov
jb
aas
cwtl
mov
test
fs
or
mov
lret
stos
jns
ret
push
fucomip
shrb
push
cs
cld
and
xor
mov
or
xchg
or
inc
push
stos
fwait
aam
add
pushf
sub
sbb
shr
fistpll
arpl
out
pop
lea
pop
pop
cmp
sub
sub
mov
int3
inc
test
or
bound
mov
xchg
push
std
ds
dec
or
into
lods
push
ds
std
daa
addr16
xchg
je
push
jnp
xor
xor
pusha
cmpsl
andnps
sarb
pushf
popf
xor
mov
leave
dec
cli
leave
push
pop
pop
xor
outsb
stc
pop
out
lret
sub
xchg
mov
or
repnz
mov
leave
pop
test
outsb
adc
push
ret
mov
shl
mov
mov
sbb
xchg
mov
jae
inc
or
popf
mov
mov
ljmp
out
push
push
pop
or
or
mulb
push
and
pop
pusha
mov
dec
pop
push
icebp
add
cmpsb
out
mov
sub
or
and
and
das
jp
and
adc
xor
lods
or
in
ror
pop
and
inc
and
scas
mov
or
dec
xchg
pop
js
xchg
sbb
mov
mov
aad
adc
jae
cld
ljmp
mov
pop
xor
pop
movsl
hlt
jecxz
xor
data16
fwait
jb
loope
xchg
xor
loop
adc
xchg
pop
adc
das
jb
popf
sahf
push
mov
fs
call
xor
xor
cmp
jo
mov
mov
xor
fnstcw
sbb
sbb
adc
in
jl
add
insb
sub
dec
dec
push
clc
mull
mov
ljmp
sub
std
cld
sub
subl
mov
mov
adc
ret
mov
xchg
shrl
adc
lret
pop
dec
int3
mov
lock
and
ret
aas
sbb
imul
xchg
dec
jns
out
add
fistl
mov
cmp
xchg
xorl
jl
add
lahf
in
cli
and
push
in
xchg
ds
iret
xchg
jl
push
lcall
or
mov
mov
xor
mov
mov
cwtl
add
xchg
loop
sarb
push
fs
ret
clc
dec
movsl
or
stos
aam
lcall
stos
xchg
je
pop
mov
cmp
bound
push
pop
mov
and
sub
fsubrs
mov
mov
cmp
aad
ja
xlat
fnsave
jae
mov
xchg
pop
fcom
clc
fs
mov
out
aaa
inc
sub
add
xchg
fistpll
addl
lahf
push
ret
cmpsb
xchg
xor
cwtl
test
xchg
jnp
lea
jns
loop
xor
enter
aas
adc
pop
popf
push
cltd
mov
scas
adc
mov
adcb
mov
xor
movb
push
jecxz
es
in
cs
div
mov
and
into
mov
push
int
test
xchg
add
sbb
mov
adc
testl
push
sbb
cmp
incb
push
or
popf
pop
rcrl
add
rcrl
outsb
test
pop
mov
fnstenv
mov
out
daa
mov
stos
mov
and
xchg
aas
mov
and
lahf
jmp
lds
xchg
adc
out
cmp
lahf
fcmovnb
and
test
mov
fcomip
jae
jle
xor
push
mov
mov
sbb
data16
sbb
in
dec
adc
cltd
loope
cmpsl
mov
push
mov
mov
je
repz
addr16
push
loope
mov
je
mov
bound
mov
sub
std
sahf
fnstenv
test
dec
xchg
inc
rorl
sbbb
test
lcall
or
icebp
cmpl
xor
add
push
mov
push
mov
fs
mov
aaa
xor
mov
add
push
mov
ror
jecxz
mov
js
dec
adc
xchg
cwtl
subl
xchg
test
dec
stc
add
rol
and
rol
hlt
fwait
repnz
aad
jns
pushf
sahf
ds
mov
dec
mov
jno
popa
push
mov
push
in
adc
mov
movsb
and
inc
xchg
insb
sahf
or
aam
es
pop
adc
push
std
sbb
shlb
mov
loop
arpl
mov
cltd
xchg
jnp
dec
dec
mov
jno
fxch
jle
movsl
adcl
pop
adc
iret
pop
cmp
fmulp
jae
in
dec
mov
scas
mov
adc
push
pop
mov
dec
inc
and
push
jae
mov
es
lcall
jmp
mov
add
adc
push
xor
cmc
adc
pushf
incl
imul
jbe
add
pop
pusha
sbbb
fstps
mov
dec
test
mov
mov
cli
cmp
xor
sub
mov
orl
nop
fisubrs
jg
mov
or
popa
xchg
adc
mov
mov
cmpsl
inc
repnz
fmulp
jg
push
in
repnz
ljmp
cli
cwtl
cmpsl
and
push
scas
jl
lahf
add
fwait
xor
push
cmp
push
xchg
inc
cmp
call
adc
mov
aad
lods
push
cmp
repnz
lahf
xor
in
xor
mov
inc
mov
jb
push
stos
je
pop
push
xchg
sar
pop
outsl
movb
cmp
leave
lahf
popf
xchg
outsl
sti
dec
xor
and
mov
out
in
sub
mov
push
ljmp
daa
fcoml
xchg
push
cltd
aaa
and
pop
mov
adc
es
push
jno
lock
mov
sub
ja
mov
cmp
loope
mov
outsl
or
mov
fcomps
mov
out
insl
cld
ret
repnz
aad
pop
xor
mov
sub
daa
pop
ljmp
jns
push
js
cmp
out
lret
imul
push
lcall
je
and
push
cmp
gs
jo
lods
out
dec
ficompl
pop
repz
ja
mov
rep
insb
in
xor
sub
sub
inc
pop
pop
xchg
push
or
enter
xchg
outsl
mov
sbb
out
vmwrite
push
lds
sub
xor
pop
push
nop/reserved
mov
test
fldcw
aaa
inc
cld
mov
test
ljmp
icebp
je
jb
ds
enter
push
fidivrs
xor
call
adc
shll
pop
cwtl
sbb
mov
enter
xchg
dec
scas
popa
mov
test
into
imull
clc
jb
aad
fdivl
ljmp
mov
pop
mov
jbe
not
mov
mov
pop
cmpb
jp
rcrl
test
sub
ss
ficompl
inc
cmp
sub
gs
or
scas
pop
and
outsl
inc
repz
mov
mov
pop
cli
cmpsb
xor
add
inc
ljmp
jmp
lret
cmp
push
inc
ret
cmp
push
dec
in
xorb
out
mov
pop
fisubrl
mov
xor
mov
aam
xchg
jno,pt
jns
pop
xor
ret
stc
es
in
dec
lret
sbb
ja
addb
ss
mov
sbb
jle
scas
lea
in
mov
sub
mov
push
test
jo
push
cwtl
cmp
stc
clc
lahf
mov
or
push
sbb
push
out
push
sbb
and
pop
adc
aas
jg
cmp
mov
out
inc
adc
out
clc
pop
gs
mov
push
sbb
or
jl
jge
aas
fidivl
shl
shlb
xchg
dec
insl
lods
leave
popf
ficomps
arpl
adc
or
pop
ret
sub
cwtl
jge
push
nop
and
inc
nop
fwait
lods
xor
mov
or
sub
aad
aaa
pop
dec
adc
ret
arpl
inc
cs
sub
add
lea
pushf
cmp
or
out
sbb
ljmp
push
jg
gs
mov
fbld
mov
push
or
fmul
mov
lods
push
push
ret
scas
shll
in
xor
push
dec
test
or
or
imul
xchg
pop
mov
fiaddl
ds
mov
add
and
sub
imul
inc
lock
shll
xor
cs
lret
call
sbb
pop
les
add
movsl
xchg
inc
imul
movsb
jg
sub
pushf
inc
repnz
mov
cwtl
and
popa
bound
adc
mov
mov
addr16
outsl
arpl
sub
mov
sbb
push
into
outsb
pop
jecxz
and
dec
mov
inc
leave
or
mov
xchg
add
in
inc
pop
shll
cwtl
mov
out
pop
cwtl
ds
dec
jb
imul
pop
inc
fcomps
fiaddl
jae
pop
push
push
jbe
int3
jl
mov
cmp
jbe
stos
push
stc
add
jns
out
dec
fucomi
out
add
jns
scas
cld
jns
mov
shlb
sbb
xchg
push
sbb
sahf
and
divl
loope
inc
push
lcall
mov
cmp
test
into
jecxz
mov
pop
mov
insl
mov
mov
xchg
mov
out
jp
add
cmp
mov
cmpsl
ds
out
gs
dec
push
loop
lea
andb
ss
scas
insb
out
rcl
cmp
aam
add
ret
mov
cmpsb
ret
mov
sahf
pop
ljmp
lcall
jle
and
int3
adc
aam
xor
pop
adc
ficomps
fwait
daa
mulb
rcl
push
xor
arpl
sub
out
mov
jno
test
sub
rolb
outsl
xlat
loopne
daa
std
mov
test
cli
inc
dec
mov
cmpsb
push
arpl
mov
mov
jnp
popf
stc
xchg
adc
sahf
ljmp
inc
lock
jno
lahf
jmp
cmp
mov
inc
mov
std
gs
dec
rclb
fwait
cmp
push
xor
ja
or
sahf
inc
push
jns
cmp
push
addr16
cmc
cmp
scas
jle
cmp
jmp
inc
gs
pusha
aaa
xor
sarb
call
jnp
daa
pop
lods
int3
pop
cmpsl
sbb
imul
arpl
adc
fiaddl
xor
leave
inc
mov
and
jmp
mov
insl
sub
cmp
mov
dec
mulps
push
enter
cmp
jo
adcb
cwtl
xchg
push
sbb
mov
lock
int3
mov
jge
mov
sti
jg
shlb
push
jle
dec
popf
call
xchg
sub
test
scas
push
scas
jbe
in
fidivrs
dec
cmp
mov
ret
js
inc
ficompl
mov
pop
xor
adc
mov
jle
aam
pop
mov
das
ret
xchg
enter
scas
rclb
xchg
je
imul
in
stos
jne
ljmp
arpl
cltd
mov
outsb
in
loop
outsb
mov
int
repnz
fstp
lods
test
cmp
js
inc
pop
jno
je
pop
insl
call
pop
xor
sti
out
out
adc
xchg
push
lret
lods
cwtl
stc
xchg
scas
lock
movl
ret
movsl
fs
cmp
mov
es
pop
mov
inc
gs
pop
xor
push
xor
adc
dec
filds
mov
iret
jle
xor
jo
mov
cmp
mov
mov
nop
pop
push
decb
dec
mov
sbbl
push
minps
das
xchg
loope
sbb
mov
lahf
dec
and
adc
cmp
sarl
and
pop
mov
lcall
and
inc
rcll
mov
sbbl
push
xchg
fisttpll
out
out
and
loop
pop
jno
addr16
int3
out
jmp
sbb
aas
cltd
xor
iret
sahf
ljmp
cmp
ret
and
jl
std
and
lcall
pop
cmpsb
dec
bound
imul
fidivl
xor
je
mov
mov
inc
push
mov
pop
out
jecxz
or
stos
pop
mov
pop
xor
dec
xchg
imul
inc
fdiv
xlat
jle
popa
mov
dec
popf
push
and
mov
sub
cmc
and
and
sub
shlb
pop
hlt
aam
and
xlat
lea
insb
jne
sbb
jecxz
aas
sbb
inc
cmp
lret
mov
dec
xchg
sub
cld
add
mov
push
and
cmp
pop
mov
nopl
insl
pop
ljmp
and
inc
out
divl
xor
jp
inc
in
aas
rcrb
sarl
mov
test
call
mov
lds
sub
mov
mov
pmaddwd
loope
nop
fidivl
adc
cmpsl
dec
test
xor
mov
imul
cmpsb
pushl
popa
cld
mov
mov
cmp
and
fisubrl
std
jno
mov
nop
mov
pop
sti
aas
cmp
lcall
loopne
lret
test
adcl
iret
aaa
in
lret
cld
mov
test
fwait
jns
mov
or
pusha
push
icebp
adc
add
popf
lret
pop
adc
jge
in
in
icebp
pop
addr16
int3
scas
loop
sub
rcl
pop
mov
pushl
sub
and
cmp
daa
je
lods
or
mov
ficompl
out
add
push
jne
xor
dec
ljmp
add
fcmovne
pop
cld
ds
aad
mov
inc
rcll
rorl
xor
adc
jns
jno
ds
insb
sub
add
mov
mov
push
aaa
cmpsl
sub
dec
adc
sbb
xor
and
cmpsl
mov
addr16
adc
icebp
mov
sbb
ja
rol
push
adc
xchg
push
fadd
add
sbb
leave
or
shrl
mov
mov
ljmp
pop
es
mov
add
mov
rcr
inc
mov
orb
jmp
push
lods
cmp
imul
dec
cvtdq2ps
sahf
push
adc
ds
ss
jae
jbe
out
stc
mov
cmp
call
call
cmpsl
mov
rolb
loope
out
or
ja
sbbl
rorl
xchg
jl
cmpsb
lock
arpl
inc
js
sbb
shlb
sbb
cwtl
ffreep
sbb
jnp
and
or
adc
enter
clc
mov
aam
xchg
sub
js
xor
dec
pop
mov
dec
das
in
sarl
push
dec
inc
sti
aam
repnz
jnp
out
lsl
jp
fistps
in
jmp
lods
movsl
ljmp
repz
dec
decl
fs
jne
scas
mov
int
mov
lahf
mov
sub
enter
lcall
mov
inc
mov
add
and
or
rorb
loop
or
arpl
fnstsw
lcall
dec
push
stos
leave
lea
pop
rorl
mov
jns
push
cs
in
jnp
inc
stos
mov
adc
pop
adcl
add
pop
fwait
pop
stos
mov
inc
pop
lret
sbb
repnz
sbb
add
pop
jecxz
xchg
shrb
lea
push
cmp
and
test
mov
sub
lret
in
mov
lcall
fsts
pop
adc
and
adc
fs
je,pn
dec
les
orl
inc
neg
pop
in
pop
sbbl
mov
mov
pop
pop
or
xchg
or
adc
mov
stos
scas
jo
int3
fldl
test
cmc
pusha
xor
add
add
mov
in
pop
cs
fldl
xor
inc
dec
insb
int
mov
mov
sub
scas
xchg
std
inc
cmp
ljmp
in
jge
lea
jbe
mov
inc
cmpsb
or
scas
fcompl
negb
adc
gs
in
xor
test
leave
sub
xor
sti
pop
fisttpl
fcmovnb
and
test
dec
es
lret
fstps
sub
push
mov
adc
push
add
lret
cmpsb
dec
sbb
xor
or
aad
movsl
push
out
mov
adcl
fstpl
mov
in
movb
fcmove
push
int3
movl
mov
xchg
mov
lea
xor
scas
mov
dec
stos
pushf
xchg
mov
out
jp
popa
cmpsl
pop
inc
in
outsb
inc
movsb
mov
pop
scas
sarl
and
das
or
testb
or
xchg
sbb
xor
inc
mov
sbb
shll
add
test
imul
jmp
jle
mov
icebp
adc
jnp
fstps
mov
mov
push
push
or
pop
push
push
and
fsts
push
std
int
jle
mov
inc
add
aam
lock
xchg
and
pop
add
bsf
mov
inc
movsb
mov
js
movsb
ja
or
inc
xchg
xchg
adc
add
push
scas
addr16
pop
or
leave
out
aad
test
adc
repnz
inc
iret
jne
push
pusha
push
cmpsb
cmp
mov
pop
in
fimull
pop
cmc
loop
addb
push
movsb
sub
cs
pop
mov
xchg
dec
in
jg
fnstenv
sets
fistpll
mov
cwtl
mov
jg
rolb
xchg
loope
adc
loop
mov
pop
neg
add
dec
loopne
xchg
fmul
and
sbb
dec
sub
pusha
jl
bound
in
sarb
or
add
sub
popa
dec
popa
cmp
ss
sbb
ljmp
xchg
lods
mov
shll
add
push
add
mov
insb
mov
cmovo
dec
sub
aad
and
ret
add
aas
jae
test
push
push
jmp
sub
push
cmp
out
int3
cmp
stos
xor
mov
iret
mov
sarb
jmp
add
pop
jg
flds
pop
jmp
mov
daa
fs
fsub
push
xchg
sbbb
lcall
cmp
in
dec
cs
mov
xor
sub
ja
or
pop
hlt
out
pop
lock
out
pop
out
hlt
sub
ds
hlt
inc
rcl
xor
pushaw
cmpsl
jnp
mov
stos
pop
lahf
dec
mov
jg
inc
jle
loope
loope
out
stos
dec
mov
stc
pop
fxch
push
inc
mov
push
mov
fnclex
jle
je
jl
cmc
fistps
and
call
push
fisubrl
pop
cmpsb
into
mov
fs
lret
cmp
mov
and
cli
mov
sub
popa
pop
xchg
inc
add
sarb
sti
adc
into
data16
mov
xchg
inc
sub
mov
mov
lahf
mov
jecxz
inc
xor
rcr
clc
sti
outsb
xchg
sub
lret
shl
add
xchg
repz
rolb
mov
fidivrs
into
pop
sub
mov
enter
scas
int
mov
divb
call
xor
mov
jae
jbe
dec
mov
jp
xchg
stos
mov
popa
je
push
push
outsb
cmpb
js
mov
push
xchg
push
iret
sbb
mov
lea
ret
aas
dec
shlb
adc
xchg
dec
adc
dec
xchg
aaa
mov
pushf
jle
std
xchg
test
sahf
js
cmp
jne
cmpsb
scas
lahf
or
int3
sarl
mov
dec
mov
movsl
jmp
stos
imul
sub
pop
sub
mov
movsl
repnz
or
enter
and
sarb
xorl
sbb
icebp
scas
pop
pop
xchg
cld
xor
addl
push
mov
cs
mov
rorl
cmp
mov
pop
inc
lods
and
xlat
cmp
fists
xchg
pop
add
sub
pop
pop
test
daa
adc
lods
mov
int3
out
mov
sti
fimuls
cmc
cmp
jmp
adc
sub
int
test
dec
enter
mov
test
je
push
dec
nop
xchg
dec
and
mov
icebp
out
cmp
test
cmp
lods
add
lock
jecxz
inc
imulb
dec
out
and
or
mov
cmc
test
packuswb
dec
loop
lahf
sbb
mov
cmp
adc
and
dec
adc
std
dec
mov
add
push
mov
call
je
xor
repnz
vmread
arpl
mov
filds
mov
mov
jno
and
subb
fcom
adc
sbb
cmp
lcall
addb
addr16
repz
mov
cmc
into
jg
cmp
inc
inc
lds
sub
jno
push
pop
xor
ret
pop
lahf
dec
push
jle
inc
ret
pushf
pop
push
mov
insb
outsb
rol
sbb
inc
pop
mov
pushf
xchg
push
jo
inc
sahf
fadds
push
lods
cld
dec
adc
mov
dec
es
movsl
neg
jle
nop
cmp
xchg
and
and
sbb
jb
cmp
out
mov
push
or
dec
mov
pop
lds
cmpsl
ds
pop
mov
push
dec
inc
shll
dec
in
lret
idivb
scas
or
xlat
jb
int3
jnp
adc
mov
aad
inc
mov
jg
cmp
ss
stos
sub
mov
pop
mov
cmc
movsl
pop
out
push
sbb
in
pop
cwtl
gs
xchg
faddl
fcomps
dec
in
cmp
xchg
out
push
adc
adc
inc
mov
jae
mov
dec
fistps
daa
outsl
scas
idivb
pop
push
pushf
cmp
mov
gs
xlat
cmp
test
sbb
mov
xchg
lea
xchg
adc
adc
das
divb
sub
sbb
and
sub
into
cltd
aad
popf
sub
rcpps
aas
lea
xchg
mov
cwtl
push
mov
adc
outsb
sub
or
daa
cltd
pop
mov
les
xor
lock
clc
add
inc
iret
or
xor
push
loopne
aas
mov
sbb
fwait
jle
out
jo
dec
and
mov
inc
lret
or
data16
pop
ds
or
mov
fwait
orl
lea
cmpb
mov
sbb
scas
addr16
ret
int3
or
lret
out
sub
cld
push
or
dec
test
pop
adc
push
into
push
push
rcrb
movl
ljmp
subl
mov
pusha
insl
cli
adc
add
fmuls
outsb
data16
xor
jge
xor
dec
pop
dec
sub
stos
ds
popf
mov
push
inc
inc
xor
mov
xchg
mov
jo
mov
mov
jmp
pop
add
out
cwtl
or
shl
mov
loop
lock
out
in
pop
testl
stc
or
and
in
inc
aam
xchg
mov
cmp
mov
inc
jne
bound
mov
dec
not
dec
sub
movb
jb
mov
test
ret
pop
jp
mov
inc
leave
add
out
or
dec
ret
int
or
imul
aad
push
add
cmp
fidivs
push
xchg
inc
push
bound
or
negl
adc
lods
or
and
sbb
push
cmpsl
cmp
les
in
pop
ud0
in
cmc
xorl
shll
popf
loopne
push
or
in
add
imul
push
lcall
or
idivl
aaa
out
stc
sti
sub
add
lcall
cmpsb
jb
xchg
xchg
pop
movsb
bound
stos
adc
arpl
movsb
cmp
scas
aaa
subl
aas
in
call
out
pop
int
mov
ret
xchg
pushl
add
lahf
xor
scas
lret
mov
sbb
push
insb
sbb
test
icebp
jbe
adc
outsl
rorb
mov
xor
in
sbb
fcmovu
push
les
cmp
xchg
call
pop
and
push
rcrl
adc
orl
and
sub
inc
shrb
lock
or
push
jmp
addr16
gs
incl
dec
int3
in
mov
xor
int3
test
insb
add
insl
cltd
jae
rorl
mov
xor
pop
das
or
imul
ja
adc
stos
xchg
dec
mov
mov
sbb
std
popf
shlb
in
arpl
pop
repz
repz
mov
xchg
in
jle
fwait
std
into
inc
call
dec
and
jle
mov
fsts
fnstsw
pop
ljmp
inc
dec
sbb
jge
jp
and
mov
xchg
adc
test
ret
push
test
xor
fs
pop
pop
cmp
in
jns
pop
xchg
cmp
mov
xchg
fimuls
inc
push
arpl
insl
push
popa
add
inc
pop
pop
dec
pushf
negb
rol
xchg
std
or
lahf
mov
mov
jnp
sahf
pusha
and
jo
stc
movsl
lcall
or
pop
or
cmp
dec
pop
mov
mov
roll
fwait
xor
jae
cwtl
cli
ds
ja
dec
mov
inc
mov
inc
es
xorb
xor
cli
gs
mov
mov
jne
pop
mov
es
xlat
adc
insl
js
test
pop
movb
arpl
pop
outsl
test
add
pushf
push
sub
cmpsl
xchg
jo
mov
hlt
add
adc
outsb
lret
aam
dec
in
lret
sbb
mov
jbe
cmp
xchg
adc
pop
lods
jne
xchg
popf
inc
push
jbe
lods
xchg
sbb
xor
or
mov
jmp
incb
lods
fildl
pop
ljmp
cmp
out
aad
notb
pop
xor
lds
or
xchg
cmp
pusha
fidivrl
jg
pop
imul
and
push
xchg
lahf
test
cmp
shl
or
cmp
mov
mov
mov
xchg
pop
and
xlat
mov
jno
xor
movsl
stos
jecxz
addr16
sub
mov
mov
lea
jbe
sbb
fs
inc
jno,pn
pop
and
pop
mov
mov
pusha
leave
pop
ljmp
shrl
pop
test
mov
push
adc
inc
and
fldl
mov
loop
cld
dec
stc
aam
mov
mov
push
daa
mov
dec
into
int3
or
mov
dec
js
pop
fidivs
cmpsb
je
dec
shr
lahf
pop
adc
sbb
out
sub
ss
jge
push
cwtl
idivl
rcll
lret
adc
pavgb
and
or
int3
jno
mov
sbbl
sbb
jmp
add
adc
popa
mov
lea
xor
dec
adc
jmp
sub
stc
fistps
xor
mov
out
push
or
sub
mov
cs
lods
je
mov
jnp
jbe
aas
fdivrp
test
jl
xor
mov
in
xchg
sbb
cmp
sahf
lods
inc
aad
jne
jmp
push
out
repnz
call
outsl
mov
xlat
clc
mov
std
dec
cld
inc
mov
call
push
js
mov
xor
in
in
hlt
js
push
lods
int3
jmp
cltd
movsw
dec
or
add
and
jmp
jbe
push
xchg
push
sahf
mov
xchg
and
and
imull
mov
mov
sub
jle
mov
loopne
mov
repnz
sub
popf
pop
adc
xchg
pop
movsl
jno
popa
or
xor
mov
xchg
dec
inc
je
cmc
sub
push
fldl
fs
in
xor
mov
sbb
fistl
push
pop
out
push
ljmp
movsl
fstps
pop
fwait
pop
add
test
cmp
jle
xor
dec
mov
sbb
xlat
jecxz
lahf
in
mov
jns
jmp
mov
jge
push
adc
adc
jo
idivl
sub
add
sbb
jnp
add
aad
mov
cmp
jno
stc
adc
ljmp
fsts
aas
push
mov
loop
test
mov
test
cld
cmp
call
stos
cs
ficompl
aad
adc
push
cmp
test
mov
cmpsl
lahf
movsb
or
dec
xchg
imul
xchg
iret
pusha
scas
add
mov
adc
jle
loopne
jge
lahf
mov
pushf
in
in
adc
adc
std
pushf
jge
push
fwait
pop
imul
test
mov
scas
fcmovu
frstor
pop
test
push
divl
pop
nop
test
cld
mov
sarb
sbb
jno
aad
inc
test
aas
inc
iret
aam
rclb
push
inc
adc
xor
mov
mov
push
inc
aas
cltd
stos
sahf
aad
js
shrb
ja
push
and
xor
or
popf
adc
inc
movsb
mov
mov
jns
lock
sbb
add
or
gs
pop
add
cmpsl
jl
scas
arpl
xchg
adc
cs
or
inc
out
daa
sbb
cmp
addr16
jo
cmp
jnp
and
pop
xor
xor
outsl
lret
dec
cmp
test
out
add
cmp
cmc
jb
xchg
test
lcall
inc
mov
cld
imul
mov
ror
push
mov
out
adcb
jns
mov
and
popf
jae
mov
xcrypt-ofb
cmpsl
out
pushf
lock
leave
lods
push
lret
sbb
mov
inc
int
pop
mov
inc
add
out
ret
iret
inc
xor
mov
sub
imul
movsb
xlat
lds
add
cmp
mov
inc
in
sub
push
enter
rorb
pop
jecxz
and
fcoms
jmp
sbb
pop
sbb
stc
shlb
notl
popa
jecxz
xchg
add
or
insl
aaa
pop
pop
sub
pop
pop
test
stos
call
jbe
ljmp
mov
lods
jmp
inc
sub
push
loope
cmp
mov
into
xchg
sub
cmpsl
scas
hlt
imul
fs
stos
scas
ja
add
jnp
movsb
push
std
xor
pop
mov
repnz
orl
iret
cmc
xchg
imul
mov
or
push
je
mov
push
scas
dec
shlb
out
sub
notl
add
and
dec
aas
out
inc
mov
fwait
sbb
lock
inc
jp
sub
xchg
popf
jne,pt
pop
mov
xchg
ja
stos
daa
cmp
pop
fisubrl
les
xchg
cmp
rcll
sbb
push
push
icebp
mov
mov
mov
test
or
mov
cmp
pop
int3
lret
das
cmp
bound
movsl
mov
inc
xchg
fwait
es
sub
push
shll
loope
cld
test
lods
jbe
out
dec
or
mov
jecxz
mov
loope
les
and
pop
imul
sti
sarl
sbb
cwtl
test
out
fs
cs
outsb
mov
mov
repz
mov
xor
cli
sbb
outsl
arpl
mov
es
les
in
mov
in
ret
and
rcll
fdivl
es
mov
sbb
xchg
xor
fidivs
and
inc
jmp
inc
cs
or
and
push
fbld
icebp
dec
push
pop
pop
sub
cmpsl
push
insb
in
imul
inc
imul
bound
insb
lods
mov
sbbb
data16
sbb
pop
add
mov
xchg
daa
adc
lods
shrl
add
je
ja
jno
and
lret
into
fldenv
xor
imul
mov
cmp
xor
dec
fcompl
dec
clc
cmp
push
rorl
test
mov
dec
popa
jle
repz
sbb
subb
mov
cli
xchg
push
mov
cmp
fnsave
leave
inc
aad
jg
xor
mov
mull
push
arpl
lcall
out
pushf
or
cltd
jnp
in
mov
ds
pop
je
xchg
push
sbb
pop
xchg
psllw
xor
adc
in
mov
popf
pop
fwait
sarb
shl
cli
idivl
adc
inc
jnp
addr16
lret
les
sbb
sub
inc
mov
xchg
nop
and
inc
jmp
mov
cli
xchg
mov
ja
sbb
sub
mov
sub
mov
sub
adc
sbb
sub
insb
dec
adc
das
pop
mov
repnz
dec
dec
mov
jne
call
push
push
lahf
xor
adc
push
fidivl
and
ret
mov
mov
mov
or
fmul
lret
scas
repz
mov
mov
xlat
mov
cmp
out
test
lods
push
mov
fbstp
adc
pushf
jo
scas
aam
enter
xchg
inc
dec
inc
and
dec
mov
gs
cmp
jmp
mov
int3
aam
imul
adc
ds
scas
in
pop
lcall
lods
ret
pop
pop
sbbl
xor
cvtps2pd
pop
in
and
jb
push
push
sub
sarb
repz
mov
mov
pop
mov
xchg
jg
mov
xchg
pushf
dec
push
inc
movsb
fistl
push
lcall
int
and
mov
stos
test
mov
xchg
or
mov
cmpsb
icebp
pop
add
lock
cli
mov
add
daa
sub
mov
push
mov
jae
jno
jg
pusha
rol
iret
push
sets
sbb
sbb
scas
mov
mov
and
or
jbe
mov
push
leave
nop
xor
add
flds
fs
sub
adc
adc
les
bound
xchg
loope
js
pop
pop
fs
pop
test
push
pop
sbb
mov
insb
in
dec
dec
cmpsl
adc
jp
push
add
push
push
jecxz
or
sbb
ret
in
mov
lds
jne
xor
lods
adc
iret
sub
inc
js
orl
dec
insb
add
mov
cli
ret
sbb
push
repz
mov
xchg
push
sbb
fistps
fs
mov
lahf
xchg
jns
in
mov
ja
mov
sub
iret
push
mov
outsb
out
je
adc
adc
and
movsl
lods
das
lsl
or
mov
call
or
push
xor
sbb
gs
push
sub
mov
and
data16
adc
mov
shlb
mov
lret
and
stos
dec
dec
cwtl
xchg
movsb
stc
adc
repz
stos
sub
xchg
or
push
dec
xchg
push
es
decl
xchg
pop
inc
push
aam
dec
mov
add
push
scas
dec
adc
push
jnp
testl
lock
out
test
outsl
mov
int3
add
dec
or
ret
ja
sub
jmp
adc
pop
loop
daa
dec
test
cs
jmp
cmp
jmp
mov
dec
lahf
mov
les
lret
and
movsb
outsl
js
in
in
or
mov
jl
testb
inc
adc
adcl
add
fldcw
xchg
push
scas
mov
rcrl
mov
and
sbb
sahf
pop
add
push
jb
popa
sub
iret
insl
dec
xchg
xchg
arpl
stos
jmp
subb
scas
stos
pop
test
sbb
jns
cs
ret
push
mov
mov
lds
aaa
orl
dec
dec
fdivs
aad
out
xchg
ret
jae,pt
test
movsb
mov
popf
ret
mov
call
mov
dec
loopne
and
add
fcompl
lahf
cs
lods
add
xchg
and
push
andl
mov
notl
push
xchg
imul
mov
cmp
lds
inc
jl
in
push
xchg
mov
ja
fiaddl
fnstsw
jge
adc
outsl
push
mov
mov
das
fdivl
out
xor
cmp
push
sub
dec
out
js
adc
add
dec
stc
hlt
add
data16
sbb
enter
inc
test
rolb
sub
pop
mov
sub
rol
and
jns
fcmovne
xor
pop
pop
inc
adc
test
rol
in
mov
popf
and
lods
pop
fbld
mov
loop
andb
and
call
cmp
ljmp
push
rcrl
inc
mov
sbb
stos
es
mov
sbb
push
xchg
pop
test
cs
insl
rcll
push
dec
sti
ret
mov
cmp
add
sub
fsubrs
lods
mov
aaa
sbb
scas
sub
jne
out
xchg
into
aad
inc
sahf
data16
jg
push
adc
mov
clc
ja
pop
test
and
mov
andl
xchg
and
push
sahf
mov
pusha
cwtl
inc
je
js
sbb
inc
scas
cmp
xchg
pop
int3
inc
push
dec
test
sub
push
pop
adc
fwait
aaa
push
mov
enter
shll
out
mov
fwait
inc
push
aam
clc
add
push
scas
aad
fldt
ret
push
xchg
popf
ljmp
loopne
aad
ss
in
cmpsl
sbb
pop
add
push
hlt
mov
dec
mov
into
push
imul
lods
xchg
mov
or
daa
in
inc
fsts
mov
sub
xor
bound
xchg
dec
mov
push
enter
dec
cmc
imull
mov
test
imul
pop
xchg
shrb
mov
js
lahf
mov
xor
and
pushf
aad
cmc
ret
mov
push
push
cld
or
mov
pop
inc
call
lret
scas
sub
add
aam
jnp
jne
jb
jo
filds
sarl
outsb
hlt
adc
xchg
enter
negb
mov
cld
aad
out
and
adc
cmp
dec
mov
push
mov
movsb
add
mov
mov
mov
mov
pop
sub
jmp
jae
out
sub
mov
cmp
add
aad
xchg
and
ret
xor
outsb
and
mov
push
in
mov
shl
dec
out
sar
sbb
clc
push
stos
push
stos
push
or
dec
jb
inc
cltd
out
sbb
xchg
dec
repnz
in
shlb
dec
into
and
shl
mov
addr16
insl
jecxz
stc
push
lret
mov
movsb
loopne
cmp
test
mov
hlt
jge
dec
sub
inc
lds
cli
sub
adc
cmpsb
fwait
punpckhwd
into
cmc
in
xor
nop
decb
movsb
jecxz
les
mov
imul
mov
add
dec
inc
add
mov
pop
and
xchg
insb
repnz
pop
daa
inc
xchg
inc
loope
dec
xor
cmp
sbb
lahf
xchg
or
sub
jecxz
mov
aad
cmpsl
test
cwtl
cmc
adc
mov
outsl
cwtl
or
mov
pushf
cmp
mulb
mov
jno
sbbb
testb
mov
sbb
adc
fbstp
push
and
rcrb
xlat
in
pushf
mov
cmc
adc
or
push
div
js
jns
filds
and
aas
in
fistl
jae
int
dec
xor
lret
stc
or
xchg
ljmp
dec
test
xorb
cs
ret
xor
jno
lret
gs
cmpsl
sub
xor
jns
jl
cmpsb
mov
jne
push
movsb
pop
fwait
cmpsb
nop
pop
mov
and
movsb
out
jae
loopne
aam
xor
mov
sbbb
out
shlb
sub
mov
mov
adc
stos
xor
fiaddl
dec
ret
sub
mov
jns
repz
sub
push
push
mov
xchg
andl
inc
cmp
sbb
mov
xor
and
xchg
sarl
cltd
fsubrp
add
icebp
inc
fnstenv
cwtl
and
xor
sub
dec
xchg
mov
xchg
repz
xor
mov
movsb
jl
jl
xchg
hlt
jno
pop
inc
inc
insl
pop
pop
in
mov
enter
in
ljmp
call
sbb
adc
mov
mov
gs
insb
mov
mov
lret
in
aaa
sub
xchg
leave
push
push
fnstenv
out
sub
adc
int
jge
out
add
jg
ljmp
dec
jge
fwait
adc
push
jg
test
or
inc
outsb
adc
adc
jle
pop
cmp
add
or
fwait
mov
andl
rorb
stc
addb
and
iret
jns
lcall
loope
fxch
cwtl
lret
out
add
movsb
fbstp
hlt
xlat
adc
or
jb
in
xchg
adc
or
add
sbb
xor
inc
into
jmp
scas
clc
divl
cmpsb
test
int3
inc
jg
mov
ret
push
loopne
pop
lds
cmp
dec
stos
jbe
jmp
rcrl
inc
xor
push
sub
jo
pop
dec
cmp
sbb
test
pop
shr
adc
hlt
rolb
xchg
int
jb
mov
push
clc
int
popf
filds
inc
ret
pop
and
pop
cmp
push
cmpsb
xlat
sub
mov
xchg
shlb
loope
push
outsb
add
sub
cmp
mov
incl
rcll
push
insl
mov
daa
mov
das
cmp
jae
sub
lea
ficompl
inc
add
cmp
mov
in
inc
mov
adcl
int
or
stos
mov
jl
inc
jmp
dec
mov
sub
in
scas
rorb
cmp
test
mov
addb
mov
mov
scas
inc
mov
lcall
notb
pushl
mov
adc
sti
rcl
lret
pop
insb
xchg
jbe
outsl
push
fwait
popa
lret
sbb
mov
adc
repnz
pop
outsl
jl
jae
sbb
hlt
mov
imul
dec
xchg
xchg
aaa
push
pop
jl
sbb
ljmp
and
stos
enter
adc
add
push
arpl
mov
cmovae
rcrb
fwait
or
daa
jns
mov
mull
aam
movsl
aaa
ret
inc
push
in
inc
ja
pop
fwait
sub
call
xor
dec
pop
sub
or
call
xchg
int
movsb
lret
vunpcklps
mov
and
mov
xlat
ficoml
push
repnz
or
stc
movsl
les
insb
pop
inc
jmp
out
enter
mov
sbb
push
cmp
cmpsb
push
test
push
mov
in
xchg
and
push
xchg
sbb
pop
ss
stc
xor
xor
inc
or
daa
rolb
mov
in
mov
ljmp
jecxz
push
movsl
jo
adc
test
popf
subl
xor
adc
int
mov
mov
int3
mov
cmp
int
push
fstpt
cmp
xchg
cmp
negb
mov
mov
into
xchg
pop
jle
cltd
rclb
adc
and
jle
iret
inc
xlat
lock
bound
icebp
repnz
in
or
jne
or
in
push
call
repnz
out
std
das
insb
mov
dec
imul
mov
or
imul
ss
jns
cmp
jnp
outsb
fsubrl
clc
cmp
lods
fbstp
xor
cmp
stos
sarb
cmp
fstpl
or
call
push
clc
punpcklwd
push
call
std
add
adc
inc
loopne
push
add
sub
cmp
aas
cmp
dec
int3
push
mov
icebp
xchg
addr16
loopne
push
je
add
and
aaa
bound
gs
or
sahf
test
mov
fidivrs
mov
push
and
mov
push
jns
sbb
cmp
mov
cltd
nop
push
and
and
pop
cwtl
inc
repz
addr16
cmpsb
lea
xchg
sub
sbb
push
mov
aam
adc
add
or
jmp
add
ret
push
xor
sahf
mov
loop
sub
adc
jnp
cmp
insb
hlt
popa
fnstenv
xchg
and
xchg
push
push
fsubrs
and
loop
lcall
in
mov
out
repz
test
mov
andb
loopne
daa
lods
fildl
adc
test
shrl
popa
push
insb
insl
stc
lcall
cmp
in
nop
lret
adc
shll
mov
orl
push
adc
push
pop
xchg
add
dec
nop
xchg
aas
out
inc
cmc
and
adc
cmp
dec
addr16
or
test
xor
push
mov
jge
jl
lds
cmp
mov
das
dec
imul
ret
mov
mov
and
xchg
adc
cmpsb
es
dec
aad
pop
xchg
pop
and
add
ret
or
mov
inc
jnp
or
push
push
mov
repnz
imul
sbb
push
stos
lret
lds
mov
cmpb
mov
jg
rol
shlb
test
pop
cmp
mov
fcompl
in
mov
outsl
mov
and
dec
inc
mov
in
jae
add
loop
mov
mov
popf
sbb
xchg
jmp
das
mov
jo
daa
adc
imul
mov
mov
lret
pop
push
ret
jno
mov
iret
pop
mov
sbb
fwait
sub
inc
popa
jo
cmp
cltd
lret
mov
cwtl
add
inc
andl
push
sti
add
test
mov
scas
or
dec
test
fdivp
and
pop
sahf
adc
scas
add
test
and
push
repz
cmp
mov
xlat
js
dec
and
mov
xchg
ss
pop
and
mov
xor
popa
jmp
in
js
pop
xchg
push
and
xor
subb
jb
inc
xchg
aaa
loop
or
pop
fimuls
xchg
aaa
pop
nop
cmp
cmpsl
in
pushf
mov
xor
stc
outsb
fs
in
mov
jcxz
mov
stos
clc
jle
test
push
adc
mov
ss
aaa
cmc
cltd
jb
dec
enter
or
loop
out
flds
fldl
popa
sub
mov
sbb
sarl
adc
orl
push
aaa
inc
subb
stos
mov
fildl
cmp
stos
out
inc
insl
mov
lret
push
in
bound
test
push
call
xor
and
out
aad
fs
push
aad
xor
cmc
insl
lods
xor
cmp
adc
int
fsubrl
sbb
cwtl
lods
sbb
pop
rcl
mov
pop
xor
iret
sub
scas
push
dec
or
aaa
mov
cmp
sbb
jmp
pop
ja
xor
jecxz
in
aam
mul
enter
or
push
pop
xor
fidivs
shrd
mov
cmp
dec
fucomip
xchg
fs
dec
pop
mov
scas
xor
insb
xlat
push
adc
in
mov
mov
enter
mov
aas
pop
or
das
or
in
cmovns
or
enter
adc
mov
sub
jg
out
pushf
jo
inc
adc
cmpsb
mov
or
jne
ret
mov
mov
jo
dec
xor
and
sub
test
push
and
mov
push
xchg
aaa
xor
ss
jmp
out
mov
sub
test
or
pop
dec
test
pop
dec
les
lahf
push
adc
repnz
cmpl
mov
lock
xchg
sti
sarl
jns
inc
movsb
bound
mov
jmp
jae
cmp
or
push
cld
mov
push
or
mov
aas
idiv
push
mov
mov
mov
incb
inc
cmpsl
or
ljmp
cmp
sub
int
mov
mov
sti
xchg
dec
idivb
xor
rorb
and
lock
jnp
inc
insb
sub
and
cmpsb
push
cmp
pop
pop
sub
roll
xchg
and
dec
lods
test
test
outsb
xchg
repnz
dec
popa
push
jle
xor
pop
mov
push
jg
bound
daa
lcall
imul
xchg
inc
push
sub
push
jno
movsl
mov
or
insl
adc
aam
pop
or
movsl
in
inc
xchg
lret
jp
xchg
push
adc
stc
fwait
lahf
adc
loope
ret
cmp
sahf
xchg
cmp
ljmp
movsb
je
rol
dec
push
hlt
mov
push
repnz
mov
repz
out
mov
push
sub
sub
int
sbb
cmp
sti
movsl
sub
sub
mov
dec
jno
out
cmp
mov
jecxz
inc
scas
sbb
outsl
test
xchg
mov
pop
cmpsb
jno
cltd
cmp
repnz
movsl
inc
sbb
inc
xchg
push
movsl
shrb
adc
les
out
sub
adc
rcrl
outsb
lahf
ret
push
mov
pop
xor
fwait
mov
cld
xor
xor
das
shrl
rorl
inc
dec
js
lods
push
jmp
std
adc
mov
inc
repnz
sub
add
std
adc
lret
xchg
pop
ss
mov
mov
add
das
insl
in
pushl
mov
add
shr
adc
sbb
es
pop
mov
dec
sbb
sbb
dec
xchg
pushf
test
cmp
loop
rclb
ror
inc
push
fucomp
in
lahf
fldt
inc
fwait
xchg
push
add
insb
std
sbbb
popf
pushf
pop
out
subb
jbe
in
jb
dec
sahf
jne
mov
pop
sbb
dec
xor
lcall
not
mov
jecxz
push
sub
add
and
loopne
inc
mov
pop
dec
negb
xor
mov
scas
add
js
out
into
bound
lcall
aam
shrb
mov
fidivl
push
aas
pop
jmp
sahf
out
xor
ret
stos
mov
cmpsb
mov
cmc
out
jecxz
scas
int
mov
pop
push
outsb
push
xchg
gs
cltd
mov
ljmp
lret
xchg
test
jne
jnp
sbb
xlat
jmp
and
mov
imul
xlat
in
push
xor
leave
into
xor
mov
addl
xchg
xchg
test
inc
sub
mov
mov
jmp
pushf
scas
ja
jne
mov
mov
mov
mov
adc
lcall
das
cmp
pop
sub
in
sbbl
movsb
lea
xchg
add
in
loopne
ja
cwtl
lcall
push
outsl
cmp
ret
sbbl
lds
add
sub
ljmp
insl
jo
cmpsl
movsl
mov
lret
pop
add
mov
pop
nop
xchg
cmp
and
ss
das
ret
fimull
sub
int3
stos
inc
rorl
jb
or
push
lds
imul
xchg
arpl
pop
push
loopne
dec
das
xor
xchg
icebp
aam
lods
arpl
int3
push
stos
les
in
movups
mov
sbb
sub
es
mov
aad
loopne
addr16
add
xor
cs
ss
jnp
add
sbb
mov
jle
push
dec
push
pop
mov
fcomip
sbb
xchg
les
les
test
imul
mov
imul
shlb
ret
pushf
fxch
iret
addl
mov
sbb
push
fildll
loope
and
mov
in
mov
stos
add
sbb
sbb
jne
ret
xlat
sub
mov
pop
nop
add
adc
adcb
outsb
clc
bsr
add
gs
scas
mov
mov
pop
sub
mov
add
and
pop
cld
or
inc
pushf
bound
sti
push
cwtl
fisttpll
jmp
loopne
cmp
dec
in
push
mov
stos
test
pop
jno
xchg
fcomps
jecxz
jb
pop
and
pop
mov
and
je
icebp
push
insl
add
movsl
lret
inc
fcoms
sub
in
testb
xor
inc
je
je
es
ss
stc
test
fmul
enter
scas
add
push
dec
sub
push
nop
dec
mov
adc
dec
adc
sbb
xorb
inc
jbe
lods
popl
mov
cltd
lea
jbe
gs
pop
mov
in
mov
fs
test
outsl
mov
test
mov
mov
insl
mov
ljmp
xchg
ljmp
into
adc
popf
xchg
hlt
jg
mov
add
adc
mov
sbb
push
cmpsl
lds
xor
fstpt
test
pop
sti
jl
cwtl
popf
or
jge
jmp
dec
push
xor
inc
call
aas
jno
dec
mov
pop
jp
clc
push
popf
mov
xor
or
jge
ljmp
lods
fs
movl
cmp
iret
test
add
daa
out
or
sbb
mov
inc
push
and
adc
cmpsl
sub
fstl
in
xchg
jnp
aam
test
xchg
rclb
pop
xchg
sbb
or
mov
scas
add
push
dec
not
adc
mov
scas
adc
cmpsl
cs
jg
jg
or
testb
pop
movq
les
lcall
cwtl
cltd
stos
test
jno
scas
dec
add
or
shrl
pop
leave
sub
mov
lea
push
ja
xchg
cld
mov
rolb
std
ret
cmp
fs
jmp
mov
push
push
fdivrl
xchg
les
ds
jl
jne
jle
call
mov
mov
and
enter
mov
aad
inc
ret
int3
loop
bound
fistl
pop
je
ja
push
fcom
mov
jbe
movswl
jne
cmp
pop
nop
sub
pop
sahf
pop
cmp
cmc
xor
mov
pop
mov
mov
sahf
add
sub
dec
call
js
sbb
rorb
lock
cmc
push
add
inc
mov
mov
add
stos
adc
mov
stos
cmpl
mov
jb
mov
std
cwtl
push
ret
popa
cmp
dec
pop
into
outsl
mov
nop
iret
mov
lcall
icebp
or
sbb
cmp
test
test
sub
sbbl
fldl
test
pop
or
mov
sbb
xor
mov
shlb
push
lret
add
scas
fldln2
enter
cmp
std
sub
movl
xor
jns
shlb
icebp
sub
sub
mov
xchg
into
push
xor
aad
addb
push
or
sub
jae
and
sbbb
repz
fadds
dec
push
xchg
or
pop
lds
repnz
sub
cmpb
or
call
xor
pop
popf
ret
and
inc
pop
sbb
imul
ss
mov
mov
pusha
mov
int
and
lods
shlb
or
dec
cmpb
xor
cmc
dec
inc
or
sbb
xor
mov
mov
xor
sub
mov
push
enter
sti
test
inc
cs
cli
cltd
loop
data16
mov
adc
stos
nop
leave
test
ret
sbb
inc
scas
sub
cmpsb
rorb
and
aaa
out
jecxz
pop
inc
or
das
les
xchg
ljmp
jo
push
or
bound
cmp
movsb
lock
idiv
inc
add
cmp
imul
or
lret
call
das
sbb
inc
inc
inc
stos
sub
push
pusha
inc
jae
lret
push
fisubl
loope
cs
les
sbb
xchg
mov
sbbb
xor
aam
mov
mov
mov
inc
lods
movsb
jb
lods
mov
pop
hlt
fidivrl
push
mov
test
lret
and
dec
jns
hlt
or
int
jns
mov
or
xchg
push
cmp
shlb
push
outsb
mov
xlat
jg
imul
add
xchg
stc
cmp
leave
xchg
xchg
arpl
arpl
and
xor
sbbl
push
scas
popa
test
andb
test
push
push
ljmp
decb
mov
scas
jb
push
sbb
loopne
jo
loopne
lret
imul
cmp
xchg
xchg
cld
dec
insl
mov
repnz
mov
pop
rorl
xor
js
fildll
scas
cli
add
inc
mov
lretw
subb
and
aad
jne
dec
jnp
push
sar
adcb
jo
daa
fstps
xchg
int
add
inc
movsl
int3
push
mov
pushf
ss
and
push
inc
js
push
inc
mov
test
std
push
sti
mov
sahf
jno
filds
push
adc
fisttpll
fcom
add
jb
and
repz
sbb
ret
mull
outsl
inc
sbbb
pop
xlat
lcall
sar
jp
xchg
icebp
aaa
lds
jmp
ret
ret
shrl
pop
int
mov
loop
popa
add
aas
data16
pop
mov
flds
sub
jns
jmp
pop
push
aam
loopne
add
in
mov
bound
adc
push
mov
in
xor
mov
xchg
es
fnstenv
xchg
sbb
insb
mov
and
and
adc
xor
fldt
push
xlat
cmp
xchg
and
pop
sbb
sub
pop
es
jmp
xchg
or
xchg
mov
scas
fmull
es
mov
dec
fisttpl
loope
jecxz
cmc
les
dec
sub
mov
inc
xchg
orl
mov
adc
outsb
mov
daa
adc
jp
sahf
jo
subb
idivl
pop
mov
into
in
cs
and
xchg
in
xchg
in
or
mov
out
jmp
push
fsubr
popa
sahf
cmp
rclb
scas
mov
adc
or
xor
aaa
sbb
pop
popa
loopne
jo
test
pusha
test
xchg
xchg
pop
lods
ret
in
dec
jmp
inc
mov
fldcw
out
cld
stos
xchg
sub
fnstsw
ret
aam
mov
jns
jnp
cmp
push
out
sbb
or
lds
jb
out
inc
mov
push
cs
cmp
fstpt
addr16
xchg
iret
test
in
sub
mov
and
or
and
mov
shrb
inc
mov
push
into
bound
movsl
add
dec
push
xor
aas
jle
icebp
in
lods
add
cmp
add
adc
push
and
mov
cmpsb
loop
ljmp
fbstp
pushf
int
mov
hlt
mov
add
push
bound
mov
ret
pushf
xor
into
jb
leave
lods
out
lods
dec
mov
fwait
or
jbe
dec
js
lcall
stos
cmp
addr16
fwait
dec
fadds
divl
movsl
lock
fimull
jl
or
sub
add
cmpsl
aaa
fistpl
xchg
cmp
std
xchg
cmpsl
lods
sbb
fwait
cmp
ss
cmp
or
adc
cmp
xor
cmp
sbb
xchg
sub
das
int3
fwait
jo
mov
xchg
fwait
push
in
lods
pop
sub
test
adc
jo
ds
loop
cmp
std
or
pusha
imul
mov
out
loope
jne
pop
add
sti
fsubrs
pop
xchg
xor
inc
jo
sbb
mov
ljmp
shll
mov
jge
dec
ja
mov
xlat
adc
or
pop
push
je
mov
hlt
mov
in
imul
int
int
or
inc
mov
mov
les
call
stc
popa
fwait
lret
xor
dec
addb
xchg
and
push
mov
sbb
inc
xchg
or
fwait
dec
fld
sti
xchg
stc
or
in
dec
cld
pop
sbb
xor
push
cmp
inc
push
pop
push
test
iret
repnz
xlat
stos
mov
adc
push
mov
cmp
mov
mov
jns
and
jb
push
jnp
mov
mov
sbb
orl
cmpsl
aad
shr
dec
xchg
lahf
inc
dec
adc
sbb
dec
daa
jno
cmpsl
dec
divb
xchg
cmp
das
out
mov
rcr
sub
sbbb
mov
mov
pop
pop
sarl
sub
repnz
jg
in
mov
addr16
and
add
lods
inc
loopne
adc
movsl
out
jl
es
aad
xchg
inc
enter
sti
dec
lret
mov
lds
cmp
outsl
jnp
xchg
or
ja
movsl
test
fisttpl
mov
push
hlt
call
jmp
sbb
test
xchg
sub
outsb
cli
popw
arpl
pushf
mov
mov
mov
pop
xor
add
xor
sbb
push
or
sbb
pop
mov
push
sub
mov
inc
ja
jmp
xchg
ja
cmp
fbld
push
jbe
and
cmp
mov
daa
mov
shrb
sbb
nop
fnstsw
cwtl
push
mov
in
fdivrs
jo
addr16
jbe
push
fsubr
ss
orl
dec
int3
ja
xor
hlt
xchg
push
dec
movsl
sbb
test
dec
pop
pushf
push
in
xor
mov
insl
pop
scas
pop
jne
mov
stc
mov
add
and
mov
push
or
loopne
in
ljmp
mov
jmp
fucom
aam
sbb
push
insl
sti
xchg
xor
int
das
daa
pop
aaa
repz
jl
mov
cli
cwtl
push
fwait
scas
jne
loopne
in
das
jg
xor
adc
insl
retw
mov
ffree
mov
ret
and
fmuls
test
xlat
aas
popf
mov
adc
in
fwait
incl
dec
lea
cmc
dec
stc
push
and
mov
aam
outsl
xchg
loop
jecxz
cmpsb
or
push
dec
inc
mulb
in
mov
cltd
xor
or
mov
mov
out
or
xchg
cmp
sub
js
loopne
adc
scas
cmp
inc
xor
adc
cmpsb
pop
dec
icebp
cmp
in
into
sub
idivb
cli
sub
lret
pushf
das
adc
sahf
mov
xchg
ljmp
iret
or
jge
add
in
daa
imul
dec
cli
mov
mov
adc
push
cmp
push
fdivrl
jnp
inc
inc
imull
sbb
pushaw
int3
adc
hlt
loopne
pop
xchg
adc
push
pop
push
insb
sarl
es
std
pushf
aaa
pop
mov
mov
push
sub
out
xchg
pusha
fsts
xor
cmp
pop
cmpsb
jbe
ret
xor
mov
pop
cmpsl
xchg
inc
mov
mov
cmp
adc
imul
adc
push
sub
jb
push
cld
jns
pushf
dec
repz
xorb
mov
xor
mov
stos
imul
add
frstor
lods
and
movsl
insb
dec
shlb
hlt
fstps
inc
push
mov
jb
mov
dec
sarl
fimuls
mov
out
sub
add
mov
addr16
stc
pop
inc
out
lret
gs
aas
sub
out
movsb
lock
out
aas
inc
inc
aad
dec
lods
ss
xor
pop
lret
mov
call
stos
pop
mov
push
insb
inc
stos
inc
filds
fistl
std
dec
call
pop
repnz
and
push
add
sub
mov
lcall
xlat
in
call
mov
and
xor
sub
cmc
xchg
cmp
aas
in
jns
in
sbb
jp
pop
inc
push
loope
outsb
pop
jae
add
add
push
daa
subb
adc
lods
push
lea
mov
loope
out
bound
movsb
mov
data16
stos
mov
dec
push
fisttpl
sbb
fwait
pop
pop
out
push
ja
repz
mov
pop
xchg
icebp
mov
fldt
mov
and
and
sbb
dec
mov
add
shl
sti
cmpsb
cltd
out
inc
popa
hlt
out
enter
filds
add
jo
test
sbb
mov
mov
and
mov
repz
outsl
lcall
dec
ss
leave
inc
mov
or
jecxz
push
cwtl
push
sahf
out
insb
mov
out
sub
pop
lock
jl
mov
add
inc
stos
inc
xchg
ret
lods
and
mov
xchg
push
pusha
aas
pusha
sbb
mov
cmp
outsb
inc
xchg
push
add
stos
imul
lock
mov
jae
sub
pop
cmp
mov
xchg
xchg
cld
in
xor
je
inc
push
cmp
fsubrl
aad
movsl
sub
bound
and
test
cltd
pushf
bound
jb
push
push
aas
and
push
mov
out
cmp
adc
int
adc
adc
sbb
push
ja
push
mov
rorl
mov
jp
push
mov
aam
mov
adc
cs
jge
sbb
xor
xchg
and
mov
dec
pop
xor
jl
jnp
xlat
rcll
lods
inc
cs
lods
mov
xor
or
cs
push
add
xor
mov
into
adcb
fldt
std
aas
cmp
pop
cli
das
test
xor
aas
pop
lock
dec
into
mov
bnd
mov
push
pop
sub
inc
iret
and
fisubs
je
jg
mov
jg
test
jb
sbb
jmp
sub
icebp
shrb
test
push
std
pop
fistpl
cs
daa
icebp
mov
nop
add
push
sbb
pop
out
movsb
cmp
sub
popa
mov
jle
ret
adc
pop
in
addr16
lds
sbb
mov
cmp
push
mov
dec
mov
enter
aaa
add
jbe
xor
out
dec
popf
les
inc
movsb
dec
push
fdiv
in
sub
mov
insb
pop
sbb
daa
sbb
hlt
sub
std
jle
and
xor
push
push
bound
jle
fisttps
mov
cli
ja
add
mov
push
imul
ret
lods
icebp
imul
faddp
or
rcrl
dec
pop
mov
cmp
mov
lds
xor
cmp
dec
in
ljmp
les
hlt
mov
sahf
mov
or
or
add
and
jmp
stos
mov
push
pushf
fwait
mov
imul
test
mov
decl
jbe
adc
iret
mul
jae
and
mov
lcall
mov
enter
push
xor
inc
fdivl
les
add
mov
xchg
and
gs
iret
sahf
pop
fwait
jo
imul
enter
xchg
xchg
pop
push
cmpsl
or
dec
mov
loope
addb
and
cmpsb
std
push
clc
cmp
push
and
mov
lret
mov
fcmovnu
es
bound
dec
inc
cmp
popf
adc
andl
loope
out
mov
cld
and
cmp
cmpsl
or
jg
inc
cmp
lds
xor
leave
test
cmpsb
mov
test
rcrl
out
fnstcw
jns
xor
and
sbbl
imul
cmp
loop
das
lcall
adc
fistpll
xlat
cmpsb
pop
aas
push
dec
or
sub
xchg
xchg
das
fisubs
xchg
pop
jecxz
mov
iret
xlat
out
xor
loop
lock
ljmp
iret
shl
push
jb
das
cmp
bound
enter
pop
cmpsl
mov
mov
push
cltd
adc
mov
push
lcall
test
outsb
inc
mov
lcall
lods
and
add
push
mov
pop
cmp
xor
fsts
dec
mov
aaa
mov
out
or
sbb
cmp
aas
jmp
pop
pop
push
xchg
lret
or
into
lods
mov
mov
data16
es
aaa
mov
sbb
dec
push
mov
push
cmp
jns
sti
add
aas
hlt
fmull
jmp
fldenv
scas
shlb
sub
adc
test
sub
xor
pop
sub
rcll
rcl
lcall
ds
push
lods
shlb
fsubl
adcl
add
lods
jecxz
mov
outsb
xchg
cmp
sub
push
inc
rcll
xchg
mov
insl
lods
jle
adc
cmc
cltd
movb
add
or
add
rcl
inc
push
in
ret
sbb
sbb
scas
aam
xchg
testl
jp
pop
mov
test
xchg
mov
pop
push
jae
and
fstpt
dec
std
popf
or
icebp
add
dec
pop
outsl
or
rclb
push
outsb
dec
mov
hlt
mov
mov
imul
inc
loop
popa
imul
nop
sub
dec
aaa
mov
xor
and
addr16
push
dec
ja
push
rol
pop
fistps
loop
mov
pop
or
cmp
mov
test
jno
sbb
xchg
scas
daa
cmp
or
cmc
push
push
hlt
daa
outsl
push
daa
xchg
xchg
push
fimuls
into
loope
and
jge
mov
and
es
sbb
popf
fwait
int
out
mov
mov
out
sub
daa
repz
lock
aam
stos
imul
cmp
mov
hlt
clc
pop
clc
fwait
pop
add
std
fs
inc
push
sbb
add
ror
jge
ret
call
jg
fdivr
adc
arpl
out
xor
cli
adc
lods
out
dec
mov
mov
adc
sbb
imulb
push
ficompl
inc
push
cmc
mov
sarl
mov
repnz
ljmp
push
scas
cmc
push
adc
and
jb
pop
push
outsl
icebp
stos
aaa
sub
fdivl
jb
stc
ljmp
xchg
and
mov
mov
lret
push
shrl
lock
xor
cltd
jg
mov
int3
inc
mov
or
push
flds
dec
inc
idivl
pusha
sbb
mov
sub
mul
sub
scas
loopne
sub
inc
jge
cmp
lds
push
mov
repz
adc
ret
inc
xchg
divb
mov
mov
push
sbb
jbe
cmp
dec
out
rcll
ret
jle
push
xor
jge
cmp
pop
ljmp
jns
inc
mov
movsb
lcall
mov
rcr
mov
mov
fwait
mov
mov
dec
sbb
es
popl
xchg
jecxz
call
mov
in
fisttps
adc
inc
arpl
inc
pop
mov
xor
xchg
repz
mov
stos
cmpb
test
xlat
jns
idiv
xchg
push
sbb
push
mov
xchg
testl
push
jle
add
jp
pop
add
out
scas
pop
mov
dec
out
mov
adc
lret
or
loopne
mov
xchg
aas
and
push
or
mov
out
popf
push
lret
fs
cmp
test
mov
mov
xchg
int
push
sub
vunpckhps
aad
dec
cmp
insl
or
xlat
mov
xchg
mov
pushf
cwtl
mov
adc
mov
out
mov
jp
xor
push
stos
int3
sahf
xchg
sbb
pop
mov
inc
cwtl
lds
add
cwtl
xchg
mov
dec
lret
xchg
out
mov
add
mov
add
incb
push
or
mov
movsl
je
mov
add
das
mov
sbb
gs
popa
cmpsl
aas
out
push
subb
mov
or
sti
notb
add
push
add
lods
cpuid
icebp
add
xchg
rcr
pop
in
stc
mov
pop
mov
push
outsl
in
dec
mov
mov
aam
mov
mov
push
popf
or
add
push
pop
or
or
and
js
xchg
adc
or
inc
and
je
adc
pop
filds
lret
popl
imul
ret
jae
xorb
popa
leave
mov
scas
in
inc
mov
add
push
ss
imul
ret
mov
imul
fsubrp
in
lods
adc
jbe
mov
movsl
adc
cmp
ss
test
or
ret
xor
inc
out
dec
jmp
cltd
test
push
sarl
xchg
popa
fcoml
pop
cltd
clc
orb
out
pop
cs
sub
pushf
loop
mov
mov
pop
mov
imul
and
repnz
enter
repz
jle
cmc
pop
scas
insl
arpl
mov
test
mov
enter
dec
or
mov
insl
rcll
stos
rcr
std
inc
pop
hlt
in
push
sbb
adc
adc
sbb
inc
xchg
shl
sbb
in
xor
ds
mov
fbstp
pop
pop
mov
hlt
mov
jo
ret
movsb
sub
add
xchg
test
pop
push
push
inc
loop
arpl
sub
lret
mov
nop
out
jp
pop
outsb
stc
mov
cmp
or
sub
push
nop
testl
sub
jge
mov
xchg
in
fucomip
ret
and
mov
sub
rcrl
in
push
inc
inc
addr16
jle
fimull
mov
movl
ja
test
pop
roll
cmp
inc
xchg
enter
insl
insl
sarl
cld
push
adc
jnp
mov
icebp
push
push
dec
cltd
js
movsb
mov
lret
push
mov
cwtl
gs
adc
cmp
insl
push
movsb
bound
jb
mov
push
cmpsb
push
xchg
les
in
mov
fisubrs
jg
inc
cmc
dec
and
adc
lret
mov
push
dec
test
push
movsb
outsl
push
xor
and
adc
stos
js
not
cmc
cmpb
out
loop
jecxz
lcall
or
sub
mov
and
push
jne
mov
add
xchg
cmpl
push
test
stos
clc
nop
add
sbb
in
push
rcl
or
sub
push
xlat
xor
adc
adc
pop
mov
repnz
outsl
out
test
cmp
sti
orl
inc
adc
pop
jp
sbb
je
push
or
xor
push
mov
fdivs
jne
mov
push
mov
xchg
stc
xlat
icebp
stos
sahf
pop
cmpsb
lods
adc
sub
jns
in
test
mov
mov
ds
add
mov
stc
in
adcb
jo
sub
clc
rorb
sbb
dec
pop
cmp
popf
insl
mov
daa
iret
call
push
mov
pusha
rep
pusha
mov
xchg
repnz
jne
mov
xchg
sahf
lcall
push
or
insb
mov
mov
orl
lahf
addb
aam
pop
outsl
rcll
mov
cmpsl
ret
enter
jb
in
nop
pop
sub
or
fidivl
add
or
xor
fsubrl
and
rol
dec
faddl
outsl
shrl
lret
popf
loopne
shr
mov
xchg
imul
aaa
dec
subl
xchg
aad
push
daa
stos
sub
dec
adc
or
lds
out
mov
adc
bsr
pop
mov
hlt
icebp
stos
pop
cs
lock
popf
je
int3
add
jno
mov
xchg
and
sub
iret
int3
inc
mov
das
shrl
orl
and
cmp
jl
inc
xor
sub
adc
xchg
cmpsb
or
arpl
xor
std
clc
or
push
ret
sbb
push
out
push
add
popa
dec
jecxz
pop
into
push
xlat
xchg
mov
push
sbb
rol
cmp
dec
mov
je
movsb
jecxz
and
inc
push
push
xor
push
int3
movsl
sub
dec
mov
int
xchg
or
lods
cwtl
mov
xlat
daa
ret
into
icebp
das
push
ret
sbb
les
fadds
mov
add
sahf
fsubr
cmp
xchg
mov
outsl
mov
jmp
dec
cmp
jb
push
int
outsl
mov
shrl
lods
pop
sti
xor
movsl
mov
daa
js
rorb
inc
mov
lods
fnclex
mov
fwait
and
jo
xchg
repz
mov
push
int
dec
and
cmp
dec
or
divb
nop
pop
jno
adc
push
jno
adc
push
dec
jo
push
pop
and
push
js
imul
sub
roll
movsb
lahf
hlt
and
mov
fwait
push
lds
stc
lret
and
test
flds
in
dec
fxch
mov
sub
adcb
mov
jp
icebp
imul
aam
sub
iret
cs
mov
push
mov
test
inc
mov
inc
mov
mov
fisubrl
lahf
jo
bound
dec
xchg
push
idivb
or
pop
rcrb
es
sub
inc
in
adc
scas
mov
mov
sti
mov
ret
pushl
es
cld
pop
xor
loopne
shrl
divl
xchg
popa
pop
adc
mov
test
cs
sub
push
pop
add
icebp
jbe
repz
sub
push
add
mov
cltd
dec
jg
les
and
sub
lea
test
jo
or
hlt
scas
pop
pop
les
push
pop
pop
lods
aam
add
fdiv
cmp
xor
and
or
jecxz
cmp
cmp
sub
add
sbb
sbb
fdivrs
stc
enter
stos
inc
and
mov
adc
je
xor
pop
cmp
sbb
adc
mov
in
mov
adc
add
rcl
jp
into
xor
cmpsl
mov
mov
daa
inc
lret
lret
pushf
daa
fstpt
mov
mov
test
pop
adc
movsb
leave
cmc
inc
jmp
ja
es
xor
cmp
push
test
mov
mov
jo
jae
jo
mov
pop
lea
jns
in
inc
and
push
adc
fsubrp
nop
sahf
cmp
push
jbe
adc
insb
jge
test
xchg
das
ret
data16
xor
lret
stos
pop
fwait
aas
scas
cmp
es
mov
xlat
pop
lret
es
fistps
or
or
lret
imul
dec
cwtl
xchg
aam
xor
sbb
mov
mov
pop
cwtl
adc
or
lock
adc
add
dec
mov
movswl
stos
mov
mov
cmp
mov
icebp
add
or
pusha
and
add
scas
mov
add
xchg
mov
sub
sub
popf
rcl
imul
subb
pop
mov
xchg
and
adc
sub
imul
mov
lahf
push
cmp
out
cmp
push
adcl
jno
stos
adc
adc
jecxz
daa
mov
xor
sub
inc
fldl
add
ja
mov
xor
add
in
and
mov
clc
mov
cmpsl
inc
push
sub
pop
and
mov
loopne
xor
rol
arpl
cmpb
test
inc
inc
jnp
inc
ret
jg
mov
outsb
lret
daa
leave
mov
jg
xchg
cli
inc
lret
scas
mov
jno
inc
lods
cmp
pop
shll
jge
fs
inc
int
je
mov
sbb
popa
test
lahf
jp
sub
adc
cmpsl
mov
lods
mov
arpl
cmp
add
push
js
push
pop
adc
sbb
inc
fisubrl
pop
orb
xlat
in
fdivr
popf
std
xor
add
cmc
data16
add
xchg
cltd
pop
jg
or
dec
jecxz
xor
outsb
or
into
sub
mov
adc
jg
dec
add
out
mov
cmpxchg
mov
and
and
pop
and
adc
loope
in
test
in
and
fldt
jmp
mov
ret
jp
xchg
shrl
sub
clc
mov
mov
mov
sub
cli
push
fistl
cld
sbb
movsl
pop
pop
ja
mov
and
cmp
push
fcompl
inc
mov
cmp
test
out
cmp
loopne
xor
jb
sti
inc
sub
mov
es
xchg
and
jmp
test
jl
xor
sub
fs
aam
push
ds
std
into
cmp
jmp
xchg
mov
sub
lret
sub
dec
or
add
rolb
shrb
or
inc
add
into
rol
sbb
jo
jmp
pop
cmpsl
xor
push
aaa
in
push
cmovge
rsqrtps
mov
add
inc
push
nop
dec
das
xlat
mov
int3
ds
mov
pop
push
adc
imul
inc
int3
jne
sbb
mov
xchg
sub
sub
je
lret
adc
cmpsb
mov
shlb
fidivl
mov
outsb
pop
ss
or
inc
shlb
dec
outsb
hlt
divl
pushf
std
movsl
xchg
cmp
enter
sub
xchg
rolb
je
cmp
fstps
leave
cs
hlt
adc
or
adc
xor
and
cmc
mov
lods
dec
in
orl
sbb
pop
sbb
scas
leave
loope
rcll
mov
or
shlb
insl
xor
or
jne
sbbl
cmp
aaa
call
mov
ret
ja
fimuls
stos
bound
cld
mov
push
pop
pop
and
jae
sub
or
jmp
gs
call
cmp
lret
movsb
mov
xor
jno
cmpsl
push
imul
mov
dec
adc
xchg
push
cltd
pop
mov
sahf
xorl
pop
lahf
fisttpll
jns
xor
add
mov
sub
push
cld
pushf
std
loop
sub
sub
fscale
in
jae
clc
loop
cmpsl
stos
dec
out
cs
sub
mov
sub
incl
and
dec
dec
in
xchg
divl
mov
jne
pusha
ret
pop
aad
and
mov
jnp
or
mov
mov
push
mov
popf
repz
pop
iret
dec
jo
mov
sbb
adc
or
sbb
cmpl
cmp
add
out
cmpsl
xchg
xchg
ja
push
pop
mov
fistpl
ss
mov
xor
and
out
mov
inc
push
inc
cmp
jo
jbe
pusha
lods
pop
ret
jge
stos
lds
dec
add
ficoms
fnsave
fidivrs
imul
mov
mov
push
mov
bt
pusha
xlat
cmp
cwtl
out
and
mov
push
stc
pop
cmc
roll
adc
outsb
sbb
push
lock
es
out
or
pop
xlat
inc
or
cmp
int3
mov
mov
push
std
lods
shl
out
push
adcb
pop
les
cmpsl
dec
mov
jne
scas
adc
inc
push
xor
mov
mov
xlat
ror
pop
ffree
lret
ljmp
outsb
dec
scas
cmpb
sub
ret
roll
nop
les
jg
push
push
imul
inc
ret
xor
xor
stc
sub
and
es
rolb
test
rcrb
dec
pop
outsl
fsts
add
in
sub
and
sbb
test
pop
jmp
jp
pop
adc
jbe
or
lds
mov
sbb
sti
xchg
xor
push
out
lds
add
loope
jmp
jno
jp
dec
or
adc
and
jl
push
imul
in
popa
mov
mov
sti
fs
cmp
scas
nopl
push
rolb
mov
jle
adc
cmp
cmp
xchg
fsincos
rcl
xchg
aam
jmp
mov
sub
add
std
fisttpl
mov
pop
lea
push
pop
add
jmp
sti
out
frstor
popa
inc
movsl
adc
xor
pop
pop
adc
push
es
adcb
decl
xchg
mov
push
sbb
bound
int3
mov
movsl
std
adc
icebp
fiadds
cmpsl
cmp
movsb
pop
mov
ja
ljmp
xor
and
das
sahf
lcall
repnz
aas
stc
jp
add
jmp
loopne
das
jmp
int3
cld
jnp
adc
in
jmp
out
scas
std
xchg
push
push
nop
jle
sub
fdivrl
or
lret
sbbb
pusha
push
nop
dec
or
sti
rolb
notb
xor
pop
push
daa
xchg
mov
popa
aam
aam
lcall
cmp
lahf
fs
fmuls
xor
mov
xor
push
mov
pop
lret
je
push
popf
xor
dec
jmp
and
inc
push
xor
andl
inc
mov
mov
fbstp
imul
imul
cli
jecxz
sub
fidivs
je
fdivr
sbb
or
mov
push
mov
fldcw
arpl
mov
lods
mov
sbb
add
pushf
jl
fucomip
and
aam
stos
adc
pop
or
insl
int
daa
imul
inc
push
out
xor
mov
cwtl
lea
jne
cmpsl
jnp
dec
imul
sbb
mov
les
in
hlt
rcrb
sub
loope
sub
jnp
xchg
mov
out
out
push
push
movsb
push
mov
in
int3
repz
and
std
shld
incl
pop
push
scas
push
pop
lcall
lcall
fwait
out
cs
lock
enter
aam
mov
push
fildl
push
jmp
cli
inc
sub
inc
popa
pop
dec
imul
cmp
fwait
mov
xor
scas
pop
jle
sub
pop
and
int3
pop
jge
pop
rcll
mov
lds
mov
pop
mov
ljmp
test
lods
xor
cmc
xchg
fsub
call
fimuls
jns
dec
sub
addr16
pop
lods
inc
cmp
mov
or
mov
mov
push
xchg
jbe
dec
dec
adc
lock
push
call
mov
jl
add
sbb
jle
lret
jne
outsb
mov
into
aaa
mull
fld
aaa
xor
hlt
js
push
adc
jae
sbb
insb
div
xor
loop
loopne
addr16
cli
xchg
or
rolb
push
inc
in
aam
jle
add
sub
and
sbb
clc
call
pushf
jns
ljmp
sub
movsb
mov
cmp
fwait
sbb
out
ss
cwtl
fdivrl
loope
repnz
or
push
lock
add
fidivs
pop
loopne
jnp
sbb
mov
mov
jbe
dec
adc
repz
in
push
mov
sbb
je
aaa
jno
or
call
cmp
sbb
or
rep
add
lea
push
jo
xchg
xor
pop
repnz
jo
popf
out
mov
mov
push
inc
pop
and
jge
sbb
cwtl
aas
lods
sub
add
xor
subb
and
insl
inc
pop
lcall
dec
ret
negl
xchg
scas
fincstp
or
mov
sbb
std
test
pop
dec
inc
mov
lret
repz
mov
ret
shll
test
fnop
adc
cmpsl
cmpsb
xor
call
mov
inc
mov
lds
jmp
daa
push
notl
leave
sahf
pop
roll
shll
jo
clc
push
int
aam
adc
sbb
pop
bound
pop
xor
mov
ljmp
sbb
aam
pop
xchg
xchg
mov
loopne
nop
stos
arpl
cmc
ds
test
int
dec
xor
mov
flds
outsb
and
pop
sub
cmp
ret
xchg
push
sbb
ja
notl
push
and
jo
sbb
movsl
aam
mov
jge
fwait
scas
adc
cmp
imul
jge
push
shll
cmpsl
and
pop
push
mov
mov
cld
ror
push
repz
pop
rorl
outsb
fsubs
sbb
mov
lds
mov
fstpt
test
sahf
inc
std
dec
sbb
mov
mov
pop
pop
icebp
push
into
xor
mov
push
push
xchg
push
inc
xchg
xor
cmp
inc
cmc
xchg
xor
push
xor
jl
mov
outsb
cld
add
les
cli
fucomi
shll
and
stos
aas
sbb
lds
or
jp
call
fwait
call
roll
dec
js
add
jmpw
cmpsl
movsb
mov
mov
adc
imul
fnstcw
and
inc
mov
and
add
mov
loop
cmc
fstpt
cmpsl
xor
loop
jne
sub
loope
rolb
adc
add
jmp
gs
add
int
mov
cs
xor
test
iret
jno
jns
imul
inc
sti
shrb
and
mov
pop
jns
mov
cli
dec
lds
fwait
jle
cltd
addr16
movsb
sub
ss
aaa
cmpsb
loope
xor
xchg
or
mov
sub
pop
loop
adc
test
pushf
nop
frstor
pop
pop
das
mov
imul
dec
xchg
pop
inc
cmp
xchg
js
pop
inc
push
fldt
testl
mov
movsb
adc
sub
inc
pop
push
jno
insb
mov
out
sbb
xchg
mov
repnz
mov
sbb
dec
xchg
xchg
xlat
dec
repnz
jmp
jp
insb
cwtl
sarl
push
es
xchg
pop
insb
adc
sbb
and
das
dec
call
xor
sbb
les
nop
ret
out
fsubrs
pop
mov
push
xchg
jge
mov
icebp
inc
jg
and
push
push
int3
push
shr
mov
sub
in
rcr
push
mov
movsl
test
inc
out
sbb
cmc
push
pop
fwait
jmp
dec
call
or
mov
loopne
add
or
inc
inc
out
pusha
inc
jg
adc
fmuls
jb
xchg
or
clc
sub
shlb
imul
pop
outsl
sbb
shrb
mov
sub
test
or
cmp
mov
xorl
pop
ret
pop
adc
lret
fmulp
pop
stc
sub
sbb
push
cli
scas
in
mov
rcll
in
imul
pop
cmp
into
pop
pop
pop
or
pusha
jle
cmpsb
stc
sbb
dec
push
je
jg
cmpsb
sbb
mov
andl
aam
inc
push
mov
pop
div
lock
jno
lcall
jno
mov
loope
lods
les
inc
fistpll
fmuls
cmpb
mov
jge
and
ljmp
lret
hlt
mov
xchg
fs
lods
cmc
xor
xlat
fdivr
ficoms
xor
xchg
out
xorb
imul
sar
fwait
mov
pop
and
jne
xchg
mov
pop
sub
mov
xor
aam
add
aad
sub
popf
sub
xor
push
adc
sub
testl
cld
stos
faddl
pshufw
mov
adc
insl
repz
xchg
ficoms
mov
pop
nop
mov
gs
js
dec
lea
or
pop
or
orl
imul
shrl
mov
sub
into
mov
ret
sbb
mov
push
inc
imul
fcmovnb
fsubl
aas
iret
jb
aad
cmp
ljmp
in
push
ss
shll
mov
push
mov
or
gs
dec
ja
out
xor
dec
imul
mov
mov
movsb
pop
aaa
outsl
fdivrs
xorb
pop
xor
push
xor
outsb
arpl
nop
jnp
xchg
into
jnp
jle
in
test
sbb
jle
fdivs
xor
fidivs
mov
push
hlt
xchg
addr16
shll
cmp
push
dec
mov
sbbb
jns
mov
cmp
push
int3
addr16
mov
adc
xchg
pop
fs
faddl
mov
cmp
mov
cs
cwtl
sbb
call
scas
clc
movsl
ss
and
enter
push
inc
or
stos
mull
es
test
rclb
movsl
xchg
aaa
fimuls
cwtl
int
push
xor
add
cmpsl
inc
add
les
subl
into
jle
xrelease
inc
adc
icebp
loope
cmpsl
ret
lret
mov
fisubl
int3
test
mov
sub
and
dec
mov
jmp
mov
mov
inc
in
add
xor
cld
and
pop
or
scas
cs
and
fldenv
cs
cltd
and
js
cmc
jbe
mov
mov
and
lret
mov
xchg
test
cmp
loope
adc
mov
mov
fs
and
push
getsec
mov
mov
imul
xabort
mov
jl
mov
addr16
pop
mov
pop
sbb
stos
leave
in
cmp
das
bound
push
or
sub
jne
out
mov
mov
inc
sbb
xor
nop
loopne
dec
jl
dec
inc
repnz
leave
cmp
nop
cmpsl
inc
push
gs
dec
ret
lods
xorb
cmp
mov
popa
jmp
ret
inc
ljmp
add
ret
adc
hlt
cmp
int3
gs
push
dec
ret
mov
cmpsl
inc
das
shll
xor
and
imul
sub
mov
or
bound
ljmp
imul
inc
xchg
and
sbb
jo
xchg
outsb
insb
aaa
cmp
or
hlt
xor
or
addr16
roll
fwait
inc
adc
rorb
out
mov
mov
push
pop
mov
jg
movsb
add
iret
xchg
push
jns
fdivp
sbb
xor
mov
je
adc
iret
pop
loopne
imul
das
pop
sbb
mov
cmp
mov
in
mov
ljmp
mov
xchg
inc
jle
or
enter
cmp
out
ret
cmp
mov
cltd
add
jbe
pop
gs
sbb
adcb
pop
jle
sub
dec
gs
fdiv
repz
bswap
popa
xor
xor
pop
jg
nop
push
and
fldenv
ror
fwait
xor
sbb
punpckldq
ss
mov
sti
push
lcall
mov
call
mov
jno
ja
aas
adc
mov
push
cli
add
addr16
sahf
mov
pop
or
lock
repz
in
mov
loope
mov
insl
xlat
cmp
addr16
jp
addr16
add
push
std
jle
jae
mov
daa
dec
mov
ret
movsb
dec
cwtl
jmp
test
dec
stc
cmp
or
into
dec
inc
mov
loope
cs
and
lea
jnp
push
inc
int3
pop
pop
xor
mov
mov
stos
pop
lcall
nopl
xor
push
orb
mov
or
movsb
aaa
adc
xor
ja
pop
sbb
je
sub
icebp
pop
imul
decb
pop
mov
adc
and
dec
nop
rcll
jp
and
sub
stos
jle
aad
add
adc
leave
adc
pop
pusha
jl
or
std
stos
bound
push
loope
fmull
xor
data16
or
loopne
addr16
ljmp
bound
shlb
in
cmp
jne
movb
xchg
inc
stc
or
iret
sbb
push
pop
jb
es
sbb
cwtl
lock
mov
fmul
xchg
je
pop
shll
fimuls
xor
jle
and
jbe
adc
sub
xor
jp
sub
fisubs
mov
pusha
sti
shrl
int3
and
fistpl
aas
nop
leave
out
fdivs
fildll
jb
lret
add
fld1
inc
imul
fistps
out
mov
mov
push
cld
into
movsb
pop
test
push
jl
insb
sub
pop
daa
jae
dec
cmp
cltd
xchg
ljmp
ja
push
loope
pop
aam
lret
arpl
ss
test
addb
out
mov
inc
inc
hlt
mov
dec
xor
pusha
xlat
mov
cmpsb
jnp
aaa
push
mov
cld
or
pmulhw
cld
xchg
lret
jmp
sbb
mov
jo
mov
or
mov
xor
ljmp
scas
pop
lds
mov
cmp
addr16
add
push
cli
mov
insb
aam
push
pop
and
sbb
xchg
mov
xchg
mov
and
aas
inc
lahf
int
adc
rcll
xchg
mov
pusha
std
fwait
mov
int
mov
xchg
xchg
out
mov
dec
and
push
daa
inc
lods
xchg
orb
lods
dec
iret
xchg
in
dec
mov
or
into
lret
xchg
mov
xor
mov
xor
sub
hlt
jle
int3
push
test
mov
dec
loop
dec
cmp
xor
jnp
pop
in
add
or
or
out
movlps
call
into
lods
inc
cld
sbb
pop
mov
xchg
fsubrl
adc
test
mov
shll
xchg
pushf
pop
out
and
mov
std
adc
jbe
cmpl
cmp
aad
bound
clc
or
mov
je
imul
loopne
xchg
xchg
js
mov
pop
add
shlb
jmp
out
inc
pop
adc
push
fucompp
lret
adc
mov
push
mov
push
xchg
in
ret
notl
sbb
nop
adc
mov
out
js
stos
ficomps
and
inc
ret
jno
test
iret
mov
bound
mov
test
and
mov
jp
mov
push
rclb
mov
inc
mov
out
push
cmpsl
pop
scas
mov
icebp
subb
or
scas
inc
sbb
gs
in
loope
xor
ret
jno
and
mov
cwtl
outsl
push
cmp
movsb
add
jecxz
out
xor
fwait
movsb
mov
sbb
iret
ja
xorb
aaa
cmp
js
cli
inc
xchg
ljmp
cmpb
add
mov
adc
xor
ljmp
xor
pop
cmc
cmp
jl
push
ds
xchg
call
xlat
cmp
loop
push
les
sbb
pop
arpl
ficompl
sbb
subl
notb
add
or
mov
lds
daa
pop
repz
and
repnz
xchg
push
pop
movsb
icebp
addr16
into
imul
push
add
inc
hlt
sbb
dec
xlat
fimull
sbb
cmc
xchg
es
push
jle
mov
mov
or
lods
pop
jmp
rcl
adc
cmp
mov
mulb
add
dec
pop
cmc
add
inc
xchg
mov
push
add
je
pop
push
cmp
dec
sbb
or
pusha
jmp
mov
pusha
push
rcl
int3
cmc
sahf
mov
add
jne
jg
inc
ficoms
lret
jns
mov
movl
outsl
ljmp
imul
pop
mov
scas
cmp
sbb
ljmp
sbb
adc
out
pop
pop
jne,pt
minps
xchg
sbb
iret
arpl
jns
loopne
inc
mov
addr16
mov
call
jnp
stos
sbb
ret
pop
ds
sahf
out
xchg
mov
xchg
mov
sbb
xor
loop
adc
ds
xchg
or
and
ret
pop
adc
push
sbb
lods
ljmp
dec
inc
xchg
or
stos
xchg
sbb
cmp
or
test
ss
adcb
std
cmpsl
outsb
mov
in
mov
jb
out
add
fldl
mov
mov
es
mov
dec
insb
inc
cli
jnp
nop
mov
aaa
xchg
clc
fisubrs
xchg
gs
repz
inc
aaa
sub
cmp
or
lds
negb
jo
xlat
shrl
arpl
xchg
push
add
lea
mov
mov
xor
cmp
push
fildll
and
pop
rcrb
xchg
mov
pop
mov
pop
shll
lret
cmp
lock
enter
iret
addr16
hlt
xor
mov
movsb
dec
cmp
dec
dec
loop
mov
mov
frstor
insl
aas
cmp
push
mov
sbb
iret
adc
mov
cmp
cmp
or
and
cwtl
dec
inc
sahf
imul
cld
sub
xor
sub
nop
jmp
adc
mov
adc
popf
repnz
popf
test
ljmp
mov
call
into
jb
pop
adc
fidivl
and
pop
ret
test
jmp
pusha
ficoms
adc
dec
movb
pushf
adc
jg
movsb
test
add
fs
out
inc
xor
dec
imul
fistl
push
fidivl
icebp
lret
das
or
jecxz
loope
inc
and
mov
adc
loope
arpl
rorl
xchg
icebp
mov
je
mov
sti
adc
loope
cli
in
mov
inc
faddl
sbb
scas
fwait
inc
and
pop
pop
xchg
out
or
leave
test
xchg
loop
cmpsl
jp
lea
mov
adc
jb
add
test
enter
jl
leave
cmc
sbb
pop
add
ja
add
mov
outsl
das
add
sbb
rcrb
inc
xchg
pop
stos
add
pushf
in
std
mov
mov
mov
mov
loopne
xchg
arpl
jnp
daa
sti
mov
inc
and
cmp
sub
into
in
jo
dec
enter
popf
xor
scas
repnz
push
iret
dec
pop
mov
push
adc
fwait
out
mov
pop
mov
sub
xlat
mov
repnz
jmp
or
out
sahf
cmp
xor
add
mov
popf
je
cmp
dec
pop
scas
movsb
sbb
cmp
mov
je
repz
gs
int
std
inc
gs
in
xor
jno
sub
in
into
divl
push
xchg
lret
xchg
aam
xchg
mov
repnz
or
out
lret
fisubrl
pop
jb
in
enter
fmuls
mov
lods
leave
xor
xchg
in
dec
adc
mov
data16
xchg
push
les
test
push
push
and
xchg
clc
push
or
test
hlt
insb
push
jmp
mov
mov
adc
sbb
aad
mov
cmpsb
mov
jae
aam
mov
xchg
cmp
jno
xchg
cmpsl
pop
mov
xchg
jl
inc
pmaddwd
std
rcll
ja
repnz
mov
in
jmp
arpl
mov
or
push
dec
insl
dec
bound
sbb
call
cld
sbb
divl
xor
icebp
dec
aaa
xor
sub
mov
sub
jmp
push
stos
add
das
imul
or
jne
cmp
sub
mov
sub
ds
js
in
adc
inc
fst
aad
aad
push
xchg
add
sub
xchg
mov
inc
mov
mov
and
mov
inc
push
fstl
test
test
xchg
xor
jle
stc
hlt
xor
mov
jmp
cmp
int
shll
ja
inc
dec
scas
fldcw
xor
sub
add
xor
iret
dec
ja
sbb
imul
gs
push
push
lock
adc
popf
xor
das
pop
pop
fidivs
cltd
jne
hlt
iret
sub
lahf
adc
or
add
or
cmpsb
pop
test
and
pop
and
push
ror
jae
inc
cld
fs
xchg
lock
inc
push
ja
data16
cld
insb
push
dec
pusha
and
outsb
out
sarb
test
and
jnp
mov
sub
sahf
pop
ja
dec
and
sbb
fnstenv
lcall
xchg
clc
jb
xchg
mov
push
aaa
dec
jae
lret
lds
faddl
std
pop
xchg
inc
rorl
xchg
rcrl
push
and
ds
xor
repz
pop
fiadds
scas
test
aam
mov
jb
mov
xor
repz
fbstp
popf
add
xchg
test
sbb
mov
outsl
loop
jg
inc
lock
xchg
inc
or
mov
ret
decl
adc
clc
mov
fidivrs
out
insl
adc
add
in
pop
movsl
mov
outsb
inc
mov
lods
jp
pop
mov
or
pop
test
fs
iret
loope
mov
adc
mov
lds
xor
lea
dec
in
sbb
sub
pop
in
mov
repz
sbb
pushf
pop
cwtl
sbb
gs
mov
xchg
call
and
lcall
push
aam
fimull
adc
and
cwtl
mov
push
movaps
out
add
cmp
or
dec
ret
sub
push
loop
iret
fcomip
dec
lock
repz
mov
jg
xchg
addr16
xlat
pusha
aaa
dec
mov
mov
lock
jg
push
int
sbb
clc
xor
aas
ljmp
dec
mov
into
aam
loope
add
shll
in
es
gs
ja
mov
push
cmpsl
adc
mov
shrl
clc
in
xor
and
xchg
jbe
cmp
inc
dec
xchg
jmp
in
fadd
xchg
inc
leave
fdivl
ss
dec
testl
insb
sahf
xor
xor
lea
fdivrs
jmp
lds
mov
mov
stos
xlat
pop
pop
jecxz
cli
adc
popf
lods
les
push
ficoms
fdecstp
and
in
adcb
andb
jns
sbb
loop
jo
push
inc
test
and
xchg
mov
mov
mov
inc
in
test
mov
cltd
adc
inc
xchg
push
insb
xchg
daa
enter
xor
pop
lcall
lcall
jbe
mov
testl
jge
xchg
xchg
mov
xor
jl
nop
add
stc
ret
lods
or
in
jp
push
xchg
add
or
icebp
add
lahf
insb
pop
dec
rcrl
sub
sbb
jecxz
sub
daa
insl
inc
stc
test
xchg
arpl
inc
xchg
adc
jae
dec
dec
popa
aam
mov
jp
pushl
inc
pop
xchg
fwait
stos
dec
in
in
lcall
inc
in
push
cmp
or
or
pop
push
setno
ljmp
add
sub
and
jmp
pop
xchg
mov
sub
xor
dec
push
ljmp
xchg
sbb
outsl
cmpsb
popf
add
xchg
and
fistpl
cmp
negl
outsb
data16
aas
xchg
push
xlat
sub
test
in
in
dec
push
sub
jecxz
pop
adc
add
test
sbb
imul
insl
loop
and
inc
gs
add
inc
test
mov
fnstsw
nop
mov
pop
loope
ds
dec
call
and
mov
mov
fldenv
xor
xchg
or
push
mov
jbe
push
pop
mov
mov
pusha
push
add
sub
sbb
adc
rorl
xchg
daa
mov
push
jl
or
sub
mov
nop
rcll
lods
imul
subl
jae
test
cld
sbb
xor
and
inc
icebp
inc
push
or
pop
fwait
pop
sub
das
mov
orb
in
mov
pop
push
dec
dec
xor
mov
lods
icebp
ljmp
jne
lahf
pop
jb
sub
mov
out
dec
das
pmaxub
fs
out
push
jg
in
aaa
push
sar
stos
leave
push
push
xchg
xchg
sti
mov
jl
loop
fwait
inc
ret
mov
call
sbbb
jae
cmp
mov
or
test
and
mov
bound
pop
pop
sbb
shl
es
leave
insb
out
mov
push
scas
jge
adc
inc
lcall
add
mov
lods
cmp
mov
insb
lds
add
mov
sub
out
xchg
or
sub
adc
fwait
sti
fildll
popf
lret
xlat
dec
push
cmp
mov
mov
inc
add
dec
and
mov
mov
hlt
mov
mov
out
xor
daa
leave
push
movsl
lret
mov
popf
test
push
pop
jno
ljmp
xor
push
test
cmp
cmp
roll
xchg
dec
aas
rorl
jns
loope
movsl
lods
lcall
rclb
mov
rcrb
sub
and
add
aas
jb
shrb
xlat
addr16
mov
mov
cmp
inc
push
and
dec
cwtl
pusha
sbb
jns
xchg
inc
push
add
mov
and
cmp
in
and
cltd
pop
sub
sub
sub
mov
adc
sarb
daa
in
int3
pop
sarl
gs
enter
jp
inc
and
fs
adc
pushf
inc
leave
repz
test
adc
in
cmpsl
shrl
ja
mov
sub
lcall
lahf
or
and
push
imul
out
mov
pusha
add
push
cmc
in
adc
outsb
xchg
mov
pop
sub
addl
inc
sarl
cwtl
mov
pop
jg
fdivl
xor
xor
push
loope
imul
insb
test
jns
cmp
mov
rolb
pushf
jecxz
mov
dec
push
stos
icebp
cmp
pop
or
test
mov
mov
mov
cmp
xor
mov
or
les
repnz
push
repnz
push
inc
clc
in
pop
divl
loopne
lret
insb
out
in
and
cwtl
xorb
jno
insl
fwait
into
punpckldq
movsb
ret
test
mov
adc
je
pop
cwtl
fimuls
jg
test
nop
cld
xchg
sbb
sahf
mov
adcl
mov
mov
sub
aaa
xchg
ss
cli
sbb
lret
orl
push
nop
add
jle
xchg
into
loop
push
mov
pop
fs
jo
dec
cmp
cmpsl
insb
sbb
aas
add
sar
adc
aaa
mov
push
inc
xlat
sahf
out
adc
movzbl
cwtl
push
and
xor
iret
rclb
orb
mov
xor
fwait
lahf
mov
push
out
jno
lret
frstor
enter
jmp
cmp
rcr
call
mov
xorl
mov
scas
out
cld
scas
cmp
js
fdivl
lret
dec
fistps
pop
mov
dec
sbb
mov
je
fsubrs
xchg
mov
sbb
pop
mov
sti
cmp
jns
pop
mov
xchg
push
mov
mov
sbb
testb
ret
sbb
icebp
out
daa
cmp
ds
and
hlt
or
mov
inc
out
ficoms
cmp
xchg
xchg
jmp
cmc
in
jo
fcmovnu
mov
fidivs
sub
repnz
jo
je
push
nop
mov
sbb
lock
and
rcll
jb
jecxz
mov
inc
sbb
mov
xor
out
dec
cs
xchg
add
inc
test
mov
or
dec
lret
fnsave
ja
lret
mov
sbb
jno
shlb
iret
ficompl
es
push
std
cmp
xchg
movb
cs
cmp
cmp
ret
arpl
dec
notb
insb
add
in
cmp
xchg
pop
and
arpl
cmp
fisubs
repnz
gs
or
adc
jp
je
mov
or
shrb
mov
hlt
sub
push
adc
add
and
mov
mov
in
pushf
jecxz
mov
loope
push
adc
lahf
lret
insb
mov
sbb
insb
por
repnz
push
sbb
jecxz
mov
add
repz
aam
test
jne
loop
les
shlb
mov
cmpb
fistl
int
pushf
or
or
repz
inc
jmp
mov
jge
mov
lret
aad
cmpl
xchg
inc
push
jmp
or
in
or
jg
sbb
fs
cmp
icebp
jg
pop
rcrb
xor
jo
xor
and
arpl
inc
lret
into
push
loop
icebp
in
xchg
das
insl
cli
mov
loopne
add
mov
lods
and
outsb
push
pop
mov
cmc
lock
push
fnstcw
and
jp
push
test
insb
test
outsb
or
sub
jl
pusha
cmp
add
sbbb
pop
pop
lret
mov
pushf
jecxz
xchg
std
inc
cmpsl
nop
scas
popa
cmpb
lret
test
shl
je
cltd
jp
inc
xor
push
jne
pop
xor
pop
xchg
leave
inc
mov
sbb
and
popf
jg
dec
cld
cli
mov
imul
roll
jg
xchg
enter
lea
in
mov
lock
push
into
dec
inc
inc
jecxz
mov
les
mov
fildll
mov
lret
push
mov
repnz
add
fwait
and
cmpsl
xchg
adcl
ljmp
jg
jmp
push
lret
ss
filds
or
jg
icebp
and
lahf
lods
cmp
outsb
imul
in
inc
xchg
ss
cwtl
sub
idivb
inc
addr16
int3
sbb
xor
out
cmp
pop
and
stos
jne
xchg
hlt
xchg
mov
inc
int3
iret
clc
jno
sub
mov
pop
sub
daa
mov
es
xchg
xlat
les
lcall
xchg
dec
and
fcmovnu
sbb
lahf
adc
cld
inc
mov
insb
jo
mov
pop
clc
mov
lret
sti
out
icebp
je
roll
push
jne
ss
test
and
push
scas
mov
out
pop
lahf
xchg
out
mov
shlb
pop
es
es
inc
shrl
adc
cmpl
mov
cs
insl
das
das
inc
jg
xor
lahf
sbbl
jmp
push
lahf
jecxz
inc
add
je
adc
adc
mov
enter
cmp
mov
pop
add
push
lcall
andl
fcom
subl
bound
sub
adc
sbb
loope
stc
xor
cmp
xlat
jnp
insb
jmp
ds
adc
pushf
sbb
pop
mov
imul
push
push
xor
in
jne
xchg
inc
xor
call
addr16
jbe
pop
fwait
mov
lret
in
into
out
push
loop
loop
add
inc
test
xor
test
mov
mov
dec
push
test
mov
jl
rcll
insb
addb
push
adc
mov
add
add
xlat
fdivp
inc
imul
mov
repnz
testb
popa
push
cli
cltd
in
jmp
add
loopne
popf
and
rorb
cmpsl
xchg
xor
repnz
adc
add
je
popf
pop
xchg
pop
cs
adc
add
es
sbb
ret
push
movsl
icebp
fcompl
mov
out
lret
mov
aaa
add
aaa
enter
xchg
addl
out
lock
xor
cmp
aam
mov
cli
mov
cwtl
cmp
lcall
nop
mov
or
sbb
pop
int
inc
sar
mov
mov
add
pop
lock
fmull
add
shl
int3
dec
cmp
insb
pop
fsubr
les
jno
cmpsb
daa
negl
mov
sub
pop
or
xchg
mov
jo
cmc
fisttpl
pop
inc
push
adc
jecxz
cmpsl
fsubr
xchg
pop
pushf
sub
mov
xchg
sub
roll
sbb
fsub
fstpt
mov
jnp
mov
cli
mov
mov
jno
int3
faddp
test
int3
ss
daa
and
andb
sub
divl
cld
xchg
pop
push
mov
repz
dec
cmp
repnz
and
fcmovbe
mov
loope
add
movsb
outsl
mov
mov
test
pop
inc
movsl
jne
cmp
lock
xchg
pop
xchg
lods
bound
jno
jbe
pop
aas
in
jnp
daa
dec
int3
dec
int
out
imul
mov
add
lods
mov
xlat
lock
sub
xor
add
fcompl
out
test
call
push
lret
lret
push
faddp
cs
inc
adc
sbb
mov
add
xchg
rolb
arpl
or
sbb
push
add
jbe
shll
xchg
dec
inc
out
and
mov
stos
fldl
lods
mov
or
shll
loopne
jmp
jae
dec
cmp
pop
push
xchg
push
scas
aas
mov
sbb
pop
fstpt
imul
out
and
mov
xlat
cmpsb
popf
jno
jne
cmp
ucomiss
and
xor
fs
aam
leave
sti
cmp
cltd
leave
loop
add
lods
arpl
test
pop
pushf
movsb
js
mov
out
jecxz
add
shl
xor
aaa
clc
loopne
push
stos
repnz
push
je
cmp
out
cltd
push
or
pop
sbb
in
in
pop
xor
mov
mov
repnz
push
cs
faddp
je
into
or
add
mov
flds
jns
xor
mov
jmp
std
and
mov
push
xchg
pop
insl
dec
pop
and
mov
lock
lock
das
subb
orl
or
mov
mov
xchg
ret
stos
rorb
mov
cli
lods
loopne
popf
fdivs
adc
sub
jp
ret
cmp
repz
add
aam
push
mov
stos
mov
push
andb
xchg
fcmovnbe
jecxz
push
mov
cwtl
es
cmpl
icebp
dec
xor
aaa
ljmp
insb
bound
push
int
pop
mov
xchg
cltd
js
xchg
sahf
adcb
add
push
mov
dec
fs
ja
dec
push
mov
aas
sub
or
fnstcw
ficomps
outsb
xor
out
mov
xchg
sti
sbb
pop
orl
hlt
pop
repz
xchg
fcomps
std
test
sbb
mov
scas
shrl
dec
push
cmpsb
fcomps
imul
pusha
cmp
or
fiaddl
mov
push
push
lahf
cmpsb
stos
adc
mov
fistpll
int
sti
aas
dec
push
and
add
pop
jb
adc
bswap
jmp
pop
testl
int3
mov
xor
pushf
repnz
insb
aaa
test
and
xor
daa
ffreep
push
and
loopne
xor
push
mov
repnz
jle
jge
paddsb
pop
int3
ja
leave
cmpsl
shll
cmp
xor
ret
imul
mov
std
xchg
das
cmpsl
adc
and
pop
icebp
sbb
and
xchg
fiaddl
jp
repz
jno
fnsave
ret
cli
xor
add
pause
push
cmp
push
rorl
mov
daa
mov
pop
pop
out
add
or
mov
subb
sub
clc
imul
lret
aas
jbe
insl
adc
xchg
ss
inc
insl
cltd
mov
xchg
jl
das
sub
or
cmpsw
and
mov
mov
ret
sub
push
test
push
ljmp
and
ja
mov
cmp
sbb
push
add
dec
int
mov
sub
call
pusha
std
mov
dec
out
and
dec
sahf
scas
and
es
mov
add
pusha
lcall
fld
mov
mov
mov
mov
addb
xor
in
ror
push
aas
xor
inc
mov
cmp
popf
outsl
xchg
dec
inc
ficomps
inc
dec
push
test
mov
push
xor
cmp
mov
enter
mov
sbb
loope
lret
xor
mov
mov
addr16
dec
xchg
scas
ljmp
add
cmp
sarl
cmp
lret
mov
fmulp
sbb
loopne
nop
push
xor
mov
or
adc
movsl
jl
inc
cltd
fisubrl
faddp
add
mov
out
test
fildl
cmp
push
xchg
into
mov
es
pop
nop
jecxz
mov
jnp
lods
bound
add
push
test
daa
ljmp
insb
ret
mov
mov
mov
shr
ret
and
stos
ret
pop
in
insb
fcoms
arpl
jle
inc
adc
jb
mov
sahf
sbb
int
pusha
sbb
int
aaa
sub
shrl
dec
adc
mov
sub
mov
jge
in
stc
xchg
sub
cmpl
push
xlat
fdivr
in
jmp
push
or
mov
pop
shrb
lahf
ret
add
sbb
je
lds
inc
es
lret
sarb
and
sahf
mov
sbb
mov
xor
mov
cmp
bound
ss
mov
repz
imul
and
lods
clc
mov
loopne
gs
dec
inc
in
inc
add
adc
out
inc
xchg
cmc
inc
jmp
inc
add
mov
inc
and
mov
pop
gs
cmp
test
cmp
inc
sub
push
orl
add
mov
sbb
in
xor
sbb
push
xlat
dec
dec
mov
mov
loope
dec
into
mov
pushf
repnz
scas
push
nop
push
push
das
cmp
fwait
xchg
mov
adc
xchg
xor
adc
ljmp
ss
ja
inc
popf
icebp
out
loopne
push
sub
test
jno
pushl
sub
out
out
or
push
pushf
mov
out
wrmsr
cmp
cmp
lahf
pop
jmp
adc
xchg
push
or
movb
les
imul
mov
mov
lahf
mov
dec
cmp
aas
hlt
xor
lods
fcom
mov
scas
cmp
push
add
and
sti
mov
addr16
xor
jl
pusha
les
sbb
jmp
and
add
mov
out
mov
pop
mov
dec
and
popf
lahf
outsb
popa
aad
adc
sub
std
cmp
fdiv
inc
jmp
pop
pop
mov
int
lea
dec
insl
add
scas
push
jae
int
push
mov
xchg
or
jg
addl
xor
out
jmp
aad
add
bswap
sbb
shll
pop
stc
outsl
ljmp
lea
fstps
inc
or
out
popf
lods
jne
xchg
jo
xchg
aad
and
inc
fisubl
pop
dec
mov
scas
or
xor
adc
repz
inc
scas
pop
shrb
outsb
jno
push
xor
ss
rolb
icebp
dec
cltd
out
sti
sbb
repnz
lcall
cli
lds
dec
pop
lods
cs
mov
cmp
lock
dec
fucomi
out
cwtl
add
sbb
lret
adc
xor
cmp
or
cmp
adc
sub
cs
fs
mov
pop
mov
xor
cmp
sarl
xor
mov
int
cmp
pop
loope
push
lds
push
data16
xchg
insl
and
sti
xchg
sbb
adc
out
inc
test
into
xor
data16
mov
pcmpeqw
cld
loop
or
add
lea
cwtl
mulb
dec
cmpsl
xchg
dec
leave
sti
andps
rolb
fcoms
out
jae
add
push
mov
sub
inc
lods
dec
stos
pop
xor
fnsave
in
dec
sti
pop
sub
jns
mov
les
add
andl
ss
in
add
xchg
insl
pop
sbb
int
cmp
les
imul
js
or
outsb
inc
cmpsl
dec
ja
xlat
push
rcl
xorl
mov
mov
push
dec
imul
cwtl
mov
xchg
and
clc
cmp
iret
sbb
or
in
insb
mov
stos
dec
mov
sub
fnsave
mov
add
lds
mov
pop
push
int3
adc
adc
inc
pop
inc
and
addl
in
jbe
dec
pop
sbb
pop
pop
rorl
loope
inc
shl
pop
movb
cmc
push
cmova
stos
add
jl
je,pt
cmp
mov
nop
lcall
ret
mov
xor
cwtl
daa
jmp
test
xchg
popa
add
add
in
ds
test
sahf
inc
call
jg
or
imul
fstpt
pop
mov
add
or
xchg
and
fs
dec
fmul
pop
mov
push
push
push
xor
mov
sbbb
cmp
mov
and
xlat
testb
scas
clc
dec
std
jge
gs
stc
enterw
adc
cmpsl
dec
xchg
inc
in
mov
xchg
xchg
cmc
jo
repz
jle
gs
test
jmp
dec
or
leave
hlt
dec
sbb
jnp
idivl
aad
jno
mov
sbb
mov
popf
mov
outsl
mov
es
sub
ss
ds
sub
mov
stc
in
cmp
cld
push
and
rolb
jge
mov
lret
jge
jge
adc
xchg
pop
shlb
mov
or
cmp
mov
push
cltd
popa
mov
imul
sub
xor
enter
daa
dec
push
loop
lods
inc
sarl
test
xor
inc
inc
inc
aam
mov
js
push
insb
out
and
std
pusha
lods
mov
arpl
stos
push
sub
int3
and
int
dec
ljmp
test
jb
sub
mov
cltd
rorl
lea
and
jp,pt
nop
in
mov
pop
or
paddusw
movsl
xor
mov
lret
stc
pop
sbb
adc
mov
xor
lret
rorl
lret
daa
mov
je
dec
stc
into
push
sarb
loop
jecxz
into
push
pop
outsl
cmp
push
pop
aad
xchg
mov
pusha
or
fucomi
je
pop
cmp
leave
jnp
xchg
pop
and
iret
mov
or
lds
nop
or
jge
insb
mov
dec
int3
inc
cmp
add
sbb
jmp
jnp
sbb
pop
mov
xor
cwtl
scas
or
add
inc
enter
out
dec
jno
pop
pop
mov
insl
cmp
outsb
cmp
aam
popf
lock
popa
dec
adc
dec
out
adc
dec
fnclex
mov
je
and
lret
sub
test
mov
mov
in
cld
mov
out
jecxz
stc
nop
shll
repz
test
ret
jg
cmc
or
xchg
test
sub
ret
sti
lea
mov
adc
push
cltd
and
mov
fs
mov
loop
pop
mov
pop
jno
mov
pop
aas
add
mov
add
and
adc
cld
pop
mov
jmp
rorb
inc
out
jno
test
push
sarb
fs
mov
movsl
pop
jb
jmp
dec
push
jne
or
inc
dec
cmpsl
gs
ja
cmp
or
hlt
popf
dec
pop
mov
aad
bound
loopne
test
ret
in
cmpb
or
sti
in
xchg
sahf
es
fwait
xchg
inc
dec
ljmp
cmpsl
jns
push
sbbl
fildl
sahf
mov
push
idiv
je
xor
sti
idivl
mov
aas
push
les
ljmp
imul
mov
lea
ljmp
fldenv
jbe
add
fdivl
jle
scas
sbb
inc
out
sbb
xchg
jp
cmp
mov
testb
movb
pop
mov
std
pop
jp
fstpl
data16
xchg
mov
push
mov
test
mov
shrb
dec
inc
repz
lods
pop
fmulp
push
imul
fsubrs
pop
jns
rcll
mov
xchg
jg
clc
dec
bound
stos
add
adc
add
adc
mov
jmp
repnz
pop
mov
insb
out
cmp
cmp
int3
sbb
popf
add
mov
fdivr
lds
xchg
fsubs
fists
mov
xchg
sub
stos
rorb
pop
adc
mov
xchg
shrb
mov
inc
or
sbb
dec
call
push
and
iret
pusha
mov
pop
push
cs
hlt
mov
out
negl
divb
mov
sbb
in
pop
mov
push
jecxz
out
fstpl
scas
loop
outsl
adc
adc
daa
popf
push
jmp
fists
pushf
sub
or
xor
jae
cmp
enter
imul
xchg
adc
cmp
xor
out
std
popa
add
adc
mov
js
fs
add
popa
mov
loope
loope
sti
mov
mov
adc
cmp
enter
adc
sub
jne
cwtl
or
loope
lahf
jbe
inc
jns
cmpsl
sbb
mov
xchg
pop
sbb
mov
movsl
les
jno
jnp
ja
and
adc
outsl
lea
int
xor
xchg
jp
mov
cmpsb
and
mov
add
lods
aas
adc
ret
jg
inc
fdivrl
dec
push
jecxz
out
shrl
pop
insl
mov
mov
into
cmpl
add
aad
enter
rcrl
mov
jp
cmp
inc
sub
pop
cmpsb
xor
ja
ljmp
sub
cs
aam
xchg
sti
popf
mov
mov
sarl
fdivl
add
xorl
xchg
outsb
mov
ja
jae
jns
test
pop
shl
mov
xor
inc
movsl
push
das
lahf
sub
out
pop
nop
icebp
xor
rolb
aaa
jl
ret
and
pop
rolb
sbb
lcall
xchg
ljmp
int
pop
pop
xor
pop
sbbl
pushf
sti
shlb
xchg
mov
mulb
es
aas
mov
sub
inc
mov
loope
push
sub
bound
mov
xorb
std
test
nop
jmp
adcb
xor
jecxz
add
push
xchg
addr16
mov
mov
inc
lds
jne
jnp
dec
mov
icebp
and
adc
or
filds
sbb
xchg
xor
add
sub
cmp
jne
xor
lcall
test
ret
jecxz
cmp
dec
xor
cmp
imull
loop
cmp
jbe
mov
cld
test
pop
in
fmul
fisubs
xor
mov
stos
arpl
es
shl
out
testl
cli
call
add
sbb
add
pop
xchg
int
dec
stc
stc
pop
jmp
jl
repnz
jecxz
mov
negb
cmp
cmp
dec
mov
stc
jmp
pop
inc
pop
or
push
outsl
push
addr16
fwait
movsl
sub
shl
rorl
ud1
lret
add
shll
dec
mov
cld
jo
mov
jecxz
orl
xor
mov
cmp
pop
or
or
negl
mov
push
mov
lods
ja
pop
push
xor
lcall
adc
les
imul
rorb
aas
js
andb
and
jmp
xchg
lea
add
pop
cmp
push
insb
es
movsb
ud1
add
inc
loopne
and
fidivl
popf
test
push
sarl
or
dec
mov
push
in
scas
adc
pop
jns
loopne
push
aam
loopne
xor
adc
add
or
xor
add
lcall
aam
push
inc
xchg
sbb
mov
sahf
lahf
dec
bound
jg
aad
adcb
inc
adc
rorb
into
cmp
inc
mov
xor
or
jge
jnp
or
movsl
ja
or
push
pop
jae
ds
cmpsl
fwait
test
dec
add
ljmp
xchg
icebp
inc
inc
imul
push
je
and
mov
test
mov
data16
lods
aam
ja
xor
lret
pop
and
mov
sbb
sbb
jns
mov
movsb
lock
pushf
out
xor
add
sub
push
int3
decb
stc
nop
or
stc
and
imul
pusha
stos
mov
add
rcll
inc
incb
push
pop
clc
pop
cltd
lcall
jg
or
nop
mov
mov
mov
jmp
loopne
mov
inc
cmp
add
sub
inc
add
mov
lcall
aaa
push
push
and
add
and
inc
mov
test
cld
pop
push
jle
in
xor
jg
fdivr
shlb
pop
cmp
stos
jbe
or
mov
cmp
ficoml
mov
ljmp
add
ss
or
mov
mov
or
into
pop
pop
mov
xchg
sarb
aas
add
dec
pop
mov
sub
adc
popf
mov
aaa
xchg
inc
jecxz
pop
or
jbe
xchg
lock
xor
sub
insb
xor
test
outsl
jae
adc
push
sub
mov
mov
fdivrl
in
sub
sti
pop
push
in
pop
es
ja
insl
ljmp
movsl
imul
mov
adc
mov
clc
xor
fidivrl
mov
jle
inc
ljmp
stc
lret
adc
mov
add
mov
bound
adc
imul
push
or
lret
dec
je
arpl
imul
cmp
mov
pop
sti
scas
cmp
jge
fstps
and
rcll
pop
sahf
call
pop
jl
push
jb
ljmp
rcrl
shlb
cmp
jecxz
mov
or
loopne
mov
push
pushf
icebp
cwtl
dec
add
push
push
lret
pop
into
cmp
mov
xor
jnp
cmpsl
adc
stc
out
dec
outsl
lcall
xchg
sbb
call
push
and
out
ja
cmpsb
stc
popa
lock
cmpsl
mov
outsb
push
xchg
pop
loope
in
cltd
es
or
insb
jnp
int
js
bnd
repnz
pusha
popa
dec
sarb
pop
imul
mov
mov
push
inc
insl
push
cmp
xchg
cmp
xchg
mov
sbbb
fs
fmulp
mov
stos
pushf
es
xor
out
test
sub
and
icebp
xor
aad
fisttps
sub
jo
cmc
jo
in
stos
sub
inc
mov
adc
std
xchg
mov
push
std
fisttpll
cmp
outsb
iret
mov
adc
jmp
pop
ja
jle
xlat
ja
lret
mov
ficoms
and
mov
inc
push
sbbl
int
pop
lcall
or
aam
dec
or
jp
jg
xor
sahf
mov
orl
pminub
mov
or
sbb
fwait
xor
mov
mov
sbb
popa
testl
outsl
cmp
insb
inc
ret
cmpl
nop
repz
mov
orl
lods
jl
insl
mov
adc
popf
push
fiadds
insl
sub
imul
and
movsl
mov
mov
pop
insb
fdivl
add
sub
or
pop
stc
cmpsb
faddl
xor
sbb
add
filds
xor
mov
hlt
imul
pusha
ljmp
setae
xlat
cmc
xorl
and
mov
jns
shlb
lock
pop
xlat
push
mov
jnp
out
imul
or
out
in
pusha
pop
lcall
sbb
xchg
xor
insl
dec
testl
mov
jl
jns
inc
dec
cmp
js
daa
pop
push
lock
ds
cmp
shrl
fadd
inc
adc
fst
subb
call
imul
xor
sub
dec
sub
clc
fwait
xchg
clc
pop
xlat
lahf
sar
scas
pop
subl
inc
mov
xor
inc
lret
pop
sbb
push
and
cmpb
dec
and
mov
xor
add
pop
sbb
mov
lock
repnz
mov
mov
cli
mov
mov
pop
into
push
rcrw
push
imul
in
inc
dec
mov
addr16
repz
addr16
repz
mov
jns
push
in
cmp
dec
push
daa
pop
pusha
movsl
xor
je
lea
dec
push
decl
inc
xchg
loop
fidivs
dec
xchg
movsl
stos
dec
movsl
pop
inc
add
scas
sbbl
iret
cmpsl
jno
ljmp
pushf
pop
stc
sbb
add
xorb
sbb
mov
shrl
pop
mov
add
cmpsl
int
cld
ds
out
arpl
mov
fsubrs
arpl
rcll
movsl
mov
or
pop
adc
adc
adc
xchg
loop
fsubl
jmp
les
cli
adc
je
mov
cmpsl
test
cmp
pop
stos
and
mov
inc
jecxz
sub
aam
fsubrl
fcompl
stos
iret
call
mov
sbb
cltd
or
daa
or
out
adc
jmp
dec
xchg
dec
jo
orps
xchg
push
mov
push
loop
mov
test
sub
adc
loop
mov
lahf
int
jmp
jno
mov
push
sti
int
mov
mov
shlb
pop
loope
les
aam
lahf
or
or
or
cmp
jge
inc
iret
ds
mov
shlb
jge
jbe
xchg
dec
pusha
loopne
mov
mov
jnp
cmp
jne
and
int3
adc
dec
inc
addl
mov
xor
xchg
pcmpgtd
lock
jecxz
daa
mov
mov
lahf
sub
mov
sub
in
fs
or
sub
stc
lahf
jbe
mov
pusha
mov
shrl
ss
lods
mov
enter
push
stc
sbb
outsb
int3
mov
dec
jne
push
or
orl
mov
mov
cmp
cli
push
insb
imul
or
push
sbb
cmc
in
jp
push
mov
sbb
inc
sub
xchg
arpl
xor
mov
out
outsl
in
lret
aaa
push
cmp
mov
cmc
sub
xor
daa
pop
fs
add
pop
test
adc
scas
cmp
stos
icebp
push
cmpsb
aam
mov
lods
sub
jb
and
mov
inc
shl
pop
lea
add
push
sahf
data16
leave
xor
into
adc
lods
pop
call
lods
xchg
in
lahf
mov
mov
push
fbld
int3
sbb
pop
fsubr
inc
lcall
popf
stc
cli
jnp
push
scas
add
dec
testl
pop
jbe
iret
test
adc
outsb
gs
and
ret
jmp
push
fsubs
das
fcmovnbe
pop
push
testl
fistl
sbb
dec
add
dec
mov
jae
mov
mov
sahf
data16
sbb
or
cmp
jmp
js
mov
shlw
test
push
adc
fmul
ja,pn
jg
dec
das
lods
mov
add
int3
jl
dec
inc
andl
mov
cld
mov
mov
mov
dec
shlb
ret
addb
cmp
inc
adc
popf
dec
adc
dec
pop
lahf
jp
out
mov
fisubl
imul
sub
inc
imul
pop
popf
pop
jae
push
les
jb
and
and
lea
es
and
push
mov
daa
in
mov
test
ljmp
mov
mov
outsl
popa
mov
sub
mov
xor
sub
stc
addb
sub
bound
scas
add
lods
clc
fldt
repz
mov
sub
fistl
insb
lret
cmp
push
cmp
xchg
mov
movsl
dec
xor
mov
xor
cld
push
mov
mov
gs
inc
nop
stos
loop
aas
dec
mov
pop
shlb
jp
inc
scas
insb
push
lods
mov
mov
adc
and
jne
push
sub
cmpsb
xchg
enter
dec
mov
nop
ret
push
mov
xchg
and
movsl
js
and
insl
jae
fdivs
fdivl
in
in
push
fnstenv
movsl
fs
mov
xchg
loope
jle
aad
mov
mov
aaa
jns
pop
pusha
shlb
stc
push
enter
or
mov
shl
jbe
push
js
ja
mov
or
loop
and
loopne
xchg
inc
outsb
xorl
xchg
xor
test
inc
mov
imul
mov
inc
sbb
or
mov
mov
push
stos
jmp
or
ja
es
pop
int3
ja
inc
loopne
dec
and
int
push
dec
gs
cmpsb
cmp
inc
divl
in
inc
cs
sti
xchg
arpl
outsb
cmp
bound
enter
roll
jg
mov
xlat
xlat
jge
pop
jg
add
stc
xchg
das
xor
cs
in
push
test
out
imul
push
pusha
arpl
jno
aad
cmp
adc
cmp
pop
repz
sub
dec
dec
push
inc
jp
adc
rolb
mov
pop
sbb
ret
and
sbb
in
mov
push
push
xchg
and
imul
nop
xor
pop
daa
and
mov
stc
push
out
xor
mov
push
jp
pusha
test
inc
adc
push
mov
stc
push
insl
jl
sbb
sub
inc
lock
movsl
std
or
add
mov
enter
mov
in
fists
mov
jns
mov
mov
addr16
shlb
pop
arpl
ret
cmc
dec
loopne
sub
inc
pop
std
xchg
dec
in
or
std
test
js
pop
fsubr
and
and
push
sbb
fs
sbb
imul
sbb
push
xor
or
fbstp
cltd
adc
push
ljmp
or
bnd
enter
cs
sub
mov
xchg
lahf
iret
bound
popf
xlat
sbb
cmp
xlat
pop
add
or
andl
adc
xchg
int
mov
fs
xor
lds
mov
jae
jnp
nop
dec
push
shrb
rorb
sub
sub
adc
jns
adc
lret
sub
fcomps
mov
les
mov
leave
xchg
add
cli
push
jle
sbb
enter
cmp
loopne
mov
push
cmp
jnp
sub
pop
cmp
subl
mov
icebp
aam
push
xchg
adc
jbe
ds
jb
or
dec
dec
mov
mov
fdivs
mov
sub
dec
out
dec
mov
push
arpl
rcr
out
add
js
rol
leave
push
loopne
cmpl
push
das
mov
add
sub
sub
xchg
pop
mov
jno
add
cli
stos
adc
in
xchg
scas
fistl
xchg
outsb
inc
lds
cmp
inc
push
loope
test
jg,pt
and
sbb
fmuls
inc
push
arpl
dec
movsl
popf
aas
dec
xor
and
jecxz
push
mov
dec
xchg
out
mov
ja
xchg
jecxz
outsl
lock
push
or
pop
and
and
sahf
cli
or
adcl
inc
aaa
ljmp
fldpi
andl
movsb
lods
jb
push
in
mov
testl
mov
pop
xor
push
pop
xor
mov
ja
mov
or
sub
cwtl
fs
cltd
popa
clc
sub
hlt
nop
clc
push
pop
cmp
xchg
repz
adc
js
xchg
xor
cmp
daa
lret
imul
add
std
arpl
shlb
mov
ret
icebp
pop
fistl
jne
ret
jae
sbb
test
cs
shll
push
mov
ja
push
cmp
je
push
adc
lahf
push
xorb
and
stos
dec
pop
cld
mov
sbb
adc
push
pop
js
mov
xor
cmp
rcrb
roll
cltd
push
xor
push
out
lahf
xchg
rcr
ljmp
in
adcl
add
out
clc
inc
xor
jecxz
xchg
js
mov
pop
adc
xchg
loope,pt
fs
push
xor
ret
ret
mov
mov
mov
mov
mull
negl
imul
in
stc
fwait
push
sbb
pushf
cld
mov
dec
cmp
rcr
dec
sub
mov
fs
lret
mov
aad
xchg
cmp
mov
and
sti
or
inc
mov
fstps
mov
cmp
jo
pop
pop
jmp
push
rcr
mov
aaa
mov
lcall
add
mov
sahf
mov
arpl
arpl
dec
add
mov
mov
mov
andps
in
sbb
or
call
stos
inc
inc
dec
loope
push
repz
cmpsl
cmc
hlt
out
out
push
pop
adc
out
dec
fwait
mov
lods
add
invlpg
ss
jmp
fcoms
iret
xor
testl
in
jnp
and
pop
sahf
leave
mov
loop
jo
jg
jle
or
movsb
sbb
add
popa
pop
xlat
leave
or
xor
out
cmpsb
ret
xchg
movl
lcall
callw
fldenv
dec
clc
and
jo
adc
sahf
mov
in
jo
roll
into
inc
or
icebp
adc
js
mov
jbe
lods
push
sti
xchg
push
dec
pop
fst
and
in
add
pminub
dec
mov
mov
push
addr16
cltd
dec
jns
or
inc
mulb
loop
and
cwtl
adc
or
pop
or
jbe
sarb
mov
cli
add
ret
jne
mov
rcll
dec
ficompl
shl
dec
mov
test
das
imul
rclb
imul
test
ror
push
aaa
push
jbe
into
stos
lods
mov
xchg
cwtl
pop
cmp
inc
inc
je
insb
jo
push
adc
adc
push
loope
pop
xchg
add
in
outsl
icebp
xchg
in
ja
pop
jb
jnp
sub
add
add
xchg
test
mov
outsl
xor
mov
jb
rcll
pop
push
lods
sbb
and
aad
add
insl
loopne
fiadds
inc
xor
les
cmp
push
out
loope
mov
sbb
out
stc
mov
int3
mov
aam
jp
lahf
cmp
mov
adc
jmp
psrad
jno
sbb
lahf
es
je
sahf
sub
push
ret
add
mov
push
fs
insl
jmp
faddp
lock
mov
push
pop
ret
test
mov
mov
mov
push
pop
mov
xchg
daa
fcoml
or
es
push
arpl
or
sahf
add
mov
sub
dec
push
stos
jns
iret
push
cltd
sub
push
pop
loopne
fnop
aaa
js
cmp
pop
dec
xchg
xor
in
sub
lcall
add
aad
and
insb
mov
enter
pop
shl
lods
in
cmp
pop
out
repz
data16
out
or
lock
add
jns
shr
imul
adc
mov
lea
xchg
js
icebp
movsl
dec
xchg
testb
pop
maskmovq
negl
push
lahf
pop
sbb
sub
mov
add
iret
in
cmp
sub
xchg
xor
js
cmp
les
lock
jge
dec
sub
fnstenv
inc
pop
cmp
xchg
xchg
ret
fsts
enter
rcrb
mov
and
aaa
pop
mov
test
cmp
mov
or
test
mov
sti
inc
faddp
clc
addr16
in
push
aaa
inc
adc
in
and
sbbb
sahf
lods
mov
movsb
push
mov
bound
dec
mov
mov
sub
inc
mov
mov
out
or
or
mov
pop
lret
das
sub
adc
out
mov
je
mov
and
or
dec
insb
adc
sbb
scas
popf
push
mov
jmp
or
jnp
insl
mov
cmp
push
adc
lock
into
data16
add
mov
lahf
nop
pop
aaa
cli
mov
js
stc
pusha
cmp
mov
xchg
cmpsl
popa
prefetch
out
mov
jbe
jge
stos
mulb
jae
jne
nop
xchg
pop
inc
sbbb
cmpsb
cmp
jp
pushf
rcl
testb
adc
aam
pop
xchg
jmp
or
dec
icebp
leave
notl
jge
ss
xchg
scas
fnstcw
subl
xor
jae
xchg
inc
addr16
mov
movsb
add
xlat
outsl
adc
sahf
cmp
test
jnp
inc
cmpsl
pop
arpl
pop
frstor
mov
sbb
sub
fsubl
decb
ss
mov
mov
hlt
divl
je
sbbb
dec
and
sub
mov
jmp
sbb
jne
les
and
fsubrs
and
cmp
out
aad
loopne
outsb
mov
mov
mov
push
xchg
mov
and
daa
rolb
or
sbb
les
or
inc
inc
faddp
xchg
out
test
insb
rcl
stc
lret
push
mov
pmaxsw
xor
and
xor
fsubr
stos
into
nop
dec
stos
jmp
pusha
cmp
dec
push
fcompl
jbe
lods
aaa
movsb
mov
dec
pop
add
stos
scas
sti
jae
cmp
adc
daa
fists
and
mov
inc
pushf
roll
cmpl
mov
mov
pop
sahf
or
sub
lods
xchg
int
sbbb
mov
sbb
in
repnz
lods
adc
or
sub
rcll
popa
push
xchg
sub
mov
pop
xchg
lret
mov
push
mov
dec
cmp
daa
enter
in
adc
mov
sbb
in
xor
jecxz
xor
mov
mov
imulb
mov
mov
je
jb
cs
fwait
aas
mov
fcmovbe
icebp
xor
sti
sbb
imul
jns
cmp
push
iret
lock
sub
std
sbb
call
aas
les
insb
pop
ljmp
icebp
pusha
idivb
jnp
jecxz
pop
outsb
push
jmp
inc
insl
adc
shlb
out
xor
faddl
mov
int
js
into
repnz
popa
pop
mov
movsb
ret
or
mov
mov
lods
push
fstpt
std
adc
sub
ret
iret
xchg
xor
pushf
mov
sub
inc
push
mov
mov
push
pop
mov
push
mov
add
pop
dec
in
push
jmp
arpl
lock
popf
push
icebp
hlt
mov
push
dec
mov
adc
xchg
cmp
das
addb
pop
dec
mov
aam
push
push
aad
js
bound
mov
xlat
mov
dec
jg
pop
dec
and
fldenv
push
mov
data16
shlb
lock
mov
push
bsf
sub
lds
faddl
sub
cmp
sbb
pop
sbb
imul
add
dec
fldt
ja
int3
pop
out
xchg
or
xlat
dec
jg
hlt
rol
cs
cmp
inc
ljmp
orl
cmp
into
xchg
jle
mov
hlt
dec
jmp
xorl
and
cmp
push
push
push
xchg
jg
and
bound
cwtl
outsl
jne
lods
cmp
out
jge
fcompl
cmp
adc
test
mov
fsubr
fsubs
js
mov
mov
es
jns
xor
xor
roll
pop
sar
jg
and
or
add
mov
hlt
loope
jae
cmp
mov
jl
orl
jne
xor
lret
ss
lea
mov
mov
std
sti
cmpsb
sub
cmp
or
and
jmp
nop
lcall
iret
pusha
sbb
not
mov
bound
or
cld
gs
out
mov
mov
mov
xchg
or
pop
movsl
xor
in
mul
cmp
add
lahf
xchg
push
mov
outsb
dec
sbb
cmpl
mov
adc
movsl
push
incl
adc
fsubl
enter
nop
mov
sbb
lahf
loopne
and
adc
fcompl
cmp
cld
cltd
sbb
testl
ret
loopne
cli
sahf
mov
inc
push
rorb
lds
or
fldenv
ret
loopne
push
bound
cmp
test
ss
sub
iret
cld
insb
dec
scas
mov
or
lret
xor
mov
pop
push
ret
repz
xor
or
out
outsb
lds
push
pushl
mov
jno
jne
jg
inc
mov
dec
add
jb
mov
sub
rcll
push
mov
imul
mov
jb
sbb
jno
jbe
in
out
negb
divl
add
test
cmpsb
cld
dec
pop
fnsave
jns
sbb
ret
push
jbe
mov
insb
mov
out
lcall
cltd
mov
pushf
ss
mov
or
scas
mov
js
inc
cmp
pop
adc
shl
dec
and
js
push
int
cld
sub
je
dec
push
jbe
cli
mov
jg
mov
adc
popf
pop
sysret
out
fcoml
push
fldt
je
jg
movsl
sbb
push
adc
mov
loop
cmpsl
mov
insb
xchg
ss
xchg
lret
inc
jb
pop
stos
incl
mov
repz
cmpsl
sbb
sub
lds
or
adc
ret
dec
or
dec
mulb
mov
add
inc
ret
ss
mov
sar
call
rcll
jp
push
or
bnd
jnp
inc
mov
mov
sub
les
enter
data16
ss
arpl
push
je
mov
sub
pop
mov
jp
push
adc
or
cmp
popf
in
data16
imul
dec
xlat
xchg
aaa
cmp
sahf
push
aaa
sarb
jp
cmc
mov
dec
adc
stos
lcall
popf
popf
push
jb
test
adc
mov
fistpll
mov
sub
push
loop
scas
in
sbb
out
sub
inc
push
insl
cmc
add
and
pop
aas
jns
test
mov
lret
jb
out
sub
shrb
aas
sbb
psrlq
test
dec
fsub
inc
push
mov
outsb
aaa
dec
cmpsl
dec
lock
in
mov
inc
jb
hlt
and
mov
out
int
test
stos
cwtl
add
roll
mov
mov
shl
mov
repz
in
sti
testl
jge
jne
push
out
rol
xlat
inc
pop
lds
jo
lods
mov
iret
lahf
popl
jo
loopne
daa
pop
jmp
shl
in
testl
mov
lcall
mov
or
sub
xor
mov
jns
and
or
movsl
add
addr16
push
sbb
les
xor
sub
push
stc
ror
fcoml
mov
add
cmp
adc
lock
and
mov
xchg
cmp
xchg
jo
or
push
nop
cwtl
subl
mov
jne
cmp
test
xchg
mov
cltd
xchg
arpl
inc
and
loop
icebp
adc
push
pop
repz
outsl
call
sub
mov
or
cmp
out
add
mov
inc
out
and
sub
mov
pop
mov
std
dec
aam
cmp
mov
jl
mov
pop
and
push
enter
popa
cwtl
or
lds
sbb
pop
fistpl
lods
push
imul
jecxz
outsb
jne
test
sub
iret
mov
dec
xor
jecxz
add
add
mov
aaa
shr
out
pop
xchg
shlb
inc
orb
mov
inc
dec
jae
outsl
pop
lock
jmp
scas
or
sbb
pop
shrb
pop
insl
adc
and
and
cmc
int
fimull
cmpsl
sub
movb
faddl
mov
pop
or
cld
ljmp
fdivs
push
aas
jne
scas
rolb
xchg
xor
adc
insl
xor
adcb
xlat
addl
sub
out
sub
imul
mov
popa
test
cld
cs
sbbl
in
jmp
mov
in
loop
and
cmpsb
in
rolb
fld1
sub
mov
mov
mov
hlt
scas
inc
aaa
imul
push
call
incb
iret
sub
sub
inc
sahf
push
mov
pop
jmp
sbb
pop
cmpsb
push
insb
sub
and
in
mov
ljmp
jae
dec
rolb
test
mov
data16
jo
xchg
pushf
adc
hlt
jb
outsl
pop
adc
movsl
mov
mov
clc
adc
jl
ficoms
scas
fdiv
outsb
pop
fsts
adc
scas
dec
cmp
cmp
clc
xchg
jp
int3
or
push
enter
add
cmp
imul
stos
sbb
push
outsl
xchg
dec
xor
shlb
jg
sti
jp
sahf
add
movsb
arpl
pop
pop
int3
dec
and
add
inc
out
aad
popa
xor
fucomp
lds
faddl
mov
mov
inc
cmp
jbe
jnp
sbb
adc
test
aad
push
mov
pushf
lea
push
imul
fiadds
push
pop
xchg
fs
outsl
pop
pop
xchg
cld
pop
out
scas
mov
fcomps
fxch
fdivl
and
jno
sahf
mov
ret
xchg
adc
sti
andb
loop
addb
cmpsb
or
inc
pop
nop
in
ret
lods
popa
push
or
sub
lahf
inc
jmp
lret
dec
sahf
add
je
in
pop
inc
es
cmpsb
mov
xor
out
inc
lahf
rol
dec
pop
push
jl
or
fnstcw
inc
xor
neg
out
mov
cmp
aas
cmp
dec
loop
sub
inc
sub
stc
mov
push
incl
xchg
mov
sti
imul
mov
and
xor
push
and
xchg
or
inc
cmp
stos
jecxz
jge
xchg
mov
pushw
outsb
mov
sti
cmpsb
std
call
xor
addr16
adc
repnz
sub
and
add
fsubs
xchg
mov
nop
mov
xor
sub
ss
mov
ljmp
dec
adcl
jge
popf
rcr
sbb
pushf
mov
ds
jmp
cmp
test
and
hlt
pop
jne
xor
and
dec
mulb
xor
ja
gs
arpl
jnp
or
notl
or
xchg
daa
aas
or
testb
inc
movsl
incb
jmp
adc
or
push
or
lods
jg
out
cmp
rorl
fld
popf
add
inc
jmp
js
jnp
adc
cmp
js
sub
scas
mov
les
ds
aam
dec
push
push
and
cmp
idivl
mov
pop
shl
call
cltd
dec
dec
and
jmp
out
push
rcrb
icebp
popa
clc
fstp
or
pop
dec
cwtl
xor
add
mov
mov
out
and
push
mov
in
xchg
dec
and
lret
jnp
sahf
dec
pop
mov
leave
sub
mov
push
sbb
cs
adc
or
cs
xchg
iret
lahf
ljmp
or
pop
sbb
insl
cltd
add
pop
push
xor
test
stos
cmpsb
cltd
cmp
xchg
push
dec
and
cmp
xchg
jl
jle
fcoml
xchg
outsb
fiaddl
pop
mov
sub
xor
xchg
faddl
jnp
xchg
mov
push
jo
sti
push
xor
outsb
push
mov
dec
push
int
add
pop
jp
xchg
inc
outsb
int
push
clc
ja
push
jle
lret
dec
sbbb
xchg
subb
sub
cmpsl
mov
das
rcrb
xor
out
xchg
fcoms
in
xor
inc
scas
addr16
insb
mov
pusha
sbb
addl
fwait
orl
inc
mov
sbb
jne
cld
pop
or
push
mov
sbb
xchg
testl
lea
mov
cmp
int3
stos
xor
popl
xchg
js
inc
rcll
insb
inc
scas
inc
inc
jg
andb
test
pop
aaa
xchg
arpl
sub
movsb
lods
mov
sub
in
jmp
daa
cld
sbb
movsl
xor
imul
les
test
pushf
imul
push
jp
dec
add
add
lods
pusha
xor
jle
enter
subb
int3
loope
inc
xor
adc
loop
fcmove
xchg
daa
testb
rcrb
sahf
cmpsb
sbb
jg
dec
cmp
iret
out
push
dec
push
jae
mov
scas
ds
inc
sub
flds
mov
sub
decl
mov
xchg
pop
aad
test
add
jbe,pt
or
pop
les
sbb
nop
xchg
cmc
popf
outsb
jg
test
pop
inc
xor
jl
jle
adc
ficomps
arpl
adc
shl
cmp
les
xchg
sti
sbb
xorl
arpl
xchg
decl
mov
or
popf
or
or
push
popa
rolb
inc
inc
push
cmpsb
or
mov
cmc
lcall
mov
push
pusha
rorb
in
jb
cs
push
cmc
inc
jnp
push
and
ds
out
out
addr16
push
cmp
mov
sbb
nop
inc
fcmovnb
jno
inc
jae
inc
jns
cmp
xor
sahf
mov
loope
outsb
inc
mov
fs
sbb
cld
push
cmpsl
es
xchg
out
push
outsb
fildll
xchg
sub
clc
xor
xchg
inc
out
fildll
xor
js
dec
imul
mov
call
mov
mov
cmpsb
jnp
aaa
outsb
mov
inc
xchg
mov
mov
pop
cli
push
lods
ss
mov
mov
fsubs
jmp
dec
jno
ja
jns
dec
jl
das
jp
aad
icebp
sarb
sbb
inc
hlt
scas
test
std
jp
adc
fwait
xlat
xchg
loopne
in
xor
ficoms
and
sbb
div
adc
hlt
cld
push
loop
movsl
inc
mov
movsl
lret
fucom
jae
mov
xorl
rcrl
xor
cmp
subb
addr16
rolb
xor
add
call
push
xchg
or
adc
int3
outsl
orl
jle
das
ljmp
jle
mov
in
push
fldl
cmc
mov
add
test
adc
int
call
mov
bound
in
push
or
mov
cmp
xor
test
xchg
jmp
inc
call
and
mov
jae
js
push
nop
daa
dec
lods
repz
ja
xchg
lcall
adc
xchg
sbbl
test
clc
je
rcll
ss
int3
jnp
movd
nop
pop
fwait
adc
xchg
dec
bound
popf
push
arpl
lret
repnz
in
mov
mov
push
test
xchg
das
fmuls
push
fcoms
cmpsl
push
fidivs
mov
xchg
ja
loop
es
sbbl
xor
scas
dec
xlat
les
cmp
sub
mov
or
or
sbb
movsb
push
fcomps
iret
lods
aaa
cmp
add
add
dec
push
cmp
sub
jo
adc
sbb
pop
mov
int
mov
push
dec
dec
testb
add
push
lods
mov
push
xchg
clc
pop
popf
inc
mov
add
daa
sub
inc
sub
pop
jo
mov
sbb
rcrb
xchg
push
push
cs
mov
xchg
iret
jge
jge
and
pop
lock
or
aad
pop
add
outsl
test
ud1
mov
stc
dec
xchg
clc
fistps
dec
je
sbb
push
js
xlat
inc
icebp
xlat
push
scas
scas
popa
pusha
call
cmp
dec
mov
xor
adc
sub
pushf
pusha
fs
dec
out
push
aas
push
ss
lock
mov
ret
mov
pusha
xchg
hlt
popf
fsubrl
inc
enter
push
loope
and
cmc
out
jo
out
cmp
sarl
aam
lret
dec
pop
ds
cwtl
xchg
lea
mov
outsb
jae
stc
xlat
adc
mov
std
lret
repnz
pop
notl
and
popa
mov
mov
cmp
sub
mov
mov
stos
stc
movsl
add
adc
pop
mov
adc
adc
nop
push
xchg
sub
aaa
mov
push
out
icebp
jecxz
pop
in
dec
orl
enter
mov
lea
out
push
jecxz
dec
fdivs
shrb
xlat
dec
std
sbb
je
xor
jae
push
push
mov
ret
lcall
sub
jns
adc
mov
lds
push
das
in
aas
sub
idivb
sti
sub
mov
adcb
test
orb
mov
inc
clc
outsl
cmp
cmp
bound
adc
cmove
enter
adc
push
cmp
mov
les
mov
xchg
subl
push
mov
in
mov
inc
call
test
pop
in
repz
mov
mov
sbbl
and
or
xchg
xor
mov
mov
lret
and
xchg
mov
stos
lods
ds
aam
xorb
in
adc
jle
ret
jecxz
add
test
test
jns
jno
xchg
inc
jg
sti
cmc
scas
stc
xchg
adcl
xor
cwtl
and
in
int3
mov
rcrb
sarl
fistpl
adc
rcrl
test
scas
jge
sub
dec
or
lret
aad
push
mov
ss
pop
jbe
mov
sbb
es
cmp
mov
mov
dec
into
movsl
pushf
sub
push
test
xchg
xchg
in
push
mov
push
jg
mov
or
lret
jo
cmp
adc
or
or
adc
rorb
icebp
orl
inc
push
shrb
mov
pop
in
test
int3
sbbl
js
cmpsb
fsub
adc
bnd
push
xchg
lahf
jp
push
popa
lods
out
sub
or
xchg
cmp
mov
jle
push
jns
testb
out
int
js
mov
shl
xor
mov
idivl
add
js
pushf
lock
out
jnp
int3
push
scas
mov
jns
das
add
sahf
fs
fsubp
test
jg
and
jns
test
add
mov
xchg
pop
mov
cmp
ljmp
das
int3
sub
add
sub
jb
out
movsb
dec
sti
mov
cmpsl
adc
mov
in
imul
or
mov
std
std
mov
or
push
imul
jbe
imul
pop
jmp
loop
push
adc
stos
add
out
inc
inc
inc
pop
icebp
ljmp
aaa
test
outsb
jle
leave
mov
or
lahf
rclb
sbb
or
mov
jp
std
fnsave
dec
pusha
leave
push
jg
jmp
jns
jge
and
mov
into
insb
test
mov
std
enter
inc
fxch
stos
fisubrs
test
cmpsl
dec
inc
jge
fucomp
sbb
push
dec
je
mov
fimull
dec
in
outsl
fcoml
inc
pop
lds
and
aam
lahf
mov
test
pop
adc
pop
xlat
cmc
iret
jmp
push
push
xor
jle
int
push
cmp
lahf
inc
pushf
xchg
dec
pop
and
sbb
clc
and
outsb
cmp
inc
fsub
adc
inc
shl
or
dec
xchg
dec
call
push
and
mov
jns
xor
jmp
les
mov
xchg
jmp
dec
xlat
cwtl
ljmp
sub
jecxz
mov
and
mov
les
test
lahf
es
xchg
dec
pusha
and
imul
in
pop
mov
mov
push
sti
mov
cmp
in
cmp
ret
outsl
mov
inc
pop
dec
cmpsb
in
push
aad
enter
loope
aas
imul
lret
add
lock
lret
xchg
push
jmp
cmp
xchg
push
ss
add
xor
cmpsl
mov
test
mov
jge
lahf
dec
cmp
mov
rcl
and
loop
push
push
add
clc
mov
adc
aas
pop
outsl
je
jp
inc
or
mov
cmpsb
and
push
inc
mov
jno
and
sbb
xor
nop
inc
push
pop
dec
iret
adc
push
add
or
into
push
in
ds
cmpl
mov
fnsave
adc
into
clc
jge
and
dec
pop
jp
jp
lock
xchg
arpl
xchg
cld
adc
das
call
mov
aas
mov
add
mov
out
xchg
pop
daa
fiaddl
sbb
aas
es
or
adc
mov
inc
xchg
sbb
cmp
dec
or
inc
cmpsb
push
into
pushf
lock
fs
test
sbb
out
ret
mov
decl
scas
xchg
ficompl
ret
mov
add
push
into
shrl
fisubl
leave
mov
jne
cld
adc
shr
pop
lods
mov
cmp
or
enterw
xchg
mov
inc
stc
es
js
fs
fcmovb
pop
cli
and
lret
or
mov
pop
shrb
cli
je
pop
or
and
cltd
sbb
dec
pop
gs
xor
dec
push
push
mov
xlat
mov
in
sub
xchg
rcll
mov
cmpsb
aam
mov
xchg
ret
out
pop
push
ret
adc
idivl
mov
jae
dec
in
sar
add
push
push
ljmp
loop
stos
cwtl
stc
xchg
and
sbb
gs
inc
sbb
lock
fstpl
cmc
lods
sbb
es
add
rolb
dec
mov
or
jle
sub
sub
mov
mov
add
inc
lea
es
mov
jle
sbb
xlat
mov
push
inc
pop
insb
lret
adc
adc
lods
dec
imul
adc
mov
and
lock
icebp
mov
inc
or
mov
arpl
inc
add
mov
jae
pop
pop
mov
dec
cli
std
push
imulb
pusha
test
and
outsl
xchg
lods
enter
sub
mov
or
sbb
xor
cmp
dec
mov
xor
in
mov
add
mov
sbb
fidivrl
push
call
inc
lea
popf
xor
mov
arpl
sub
jp
dec
push
test
ja
scas
sub
mov
frstor
int3
xchg
dec
inc
xor
mov
cmpl
rep
js
add
insl
lods
je
lods
cmp
pop
add
pop
xor
nop
in
pop
mov
imul
lods
mov
sub
xchg
cmp
out
adc
push
mov
jge
test
or
call
rcll
jmp
mov
fldt
into
out
or
cmp
nop
fdivl
inc
sbb
das
jno
dec
jbe
cmp
inc
bound
test
aam
aad
movsb
jno
jno
hlt
insb
and
push
lret
xlat
sti
xor
movsl
xor
push
sbb
enter
hlt
test
add
sbb
leave
daa
idivb
mov
in
mov
and
aam
mov
insb
test
xacquire
xlat
lret
inc
addr16
out
scas
lea
push
jp
lock
out
daa
insl
cmc
decb
popf
cwtl
cmp
insb
xor
into
test
lods
mov
mov
sub
call
ret
cmc
movsb
fs
push
dec
xchg
or
aam
cmp
mov
dec
dec
push
test
dec
dec
inc
out
push
push
sbb
popl
outsb
sahf
test
mov
inc
inc
pop
call
mov
adc
pusha
push
ret
inc
sbb
insb
sub
jo
imul
jno
cmc
cltd
cmp
vcvtss2sd
out
div
leave
les
push
add
test
ret
adc
xchg
stos
into
negb
test
sbb
mov
sbb
fbld
outsl
dec
add
push
jmp
int3
jle
pop
out
jno
mov
mov
and
push
aam
sbbb
pop
push
or
lcall
psubsw
dec
icebp
adc
enter
mov
test
mov
jmp
pop
mov
ds
inc
inc
aaa
jl
stc
pop
push
pop
es
mov
ds
lods
dec
lods
pop
scas
out
sub
xor
xor
sbb
scas
pop
cld
mov
xchg
jne
int
pop
pop
ds
push
add
sbb
movsl
push
adc
aas
in
inc
add
lea
push
scas
dec
jns
sub
push
pop
je
inc
or
sar
rorl
dec
add
add
scas
ret
and
sub
out
in
jnp
test
push
xor
cltd
gs
mov
inc
and
dec
repz
push
popf
push
repnz
mov
xor
mov
ror
test
enter
mov
pop
mov
in
sti
rcr
mov
cmp
jnp
not
ja
outsl
xchg
roll
ja
out
or
cld
inc
out
push
cli
aad
sbb
pop
cmpl
mov
inc
jae
sbb
sbb
mov
ret
ret
jle
cmpsl
lcall
and
insb
jae
test
nop
adc
and
adc
jge
sbb
or
jbe
jnp
aam
add
adc
pop
push
jg
or
and
hlt
std
xchg
dec
mov
lcall
inc
xchg
adc
jg
cmp
hlt
cmpb
push
pop
cmp
in
mov
stos
lock
pop
adc
xchg
outsb
xor
arpl
rcll
push
subl
ret
in
aaa
ret
cmp
mov
push
es
incl
inc
sbb
mov
je
movsb
bound
pop
mov
xor
dec
imul
inc
jb
jle
into
sbb
sbb
scas
add
roll
pop
jl
leave
out
in
rorb
xchg
and
hlt
jl
cmp
xor
pop
mov
aad
enter
in
jmp
and
push
push
and
inc
addr16
push
ja
pop
or
cld
outsb
xchg
push
push
sti
xchg
divl
in
cld
mov
dec
jge
and
mov
ficoms
int3
jg
fcoml
gs
inc
push
inc
movsl
and
nop
xchg
xchg
jmp
jmp
and
fnstenv
pop
push
jge
and
xchg
mov
dec
xchg
pushf
cwtl
insb
test
mov
or
sub
in
loop
push
loop
push
leave
jne
stc
lods
adcb
dec
sub
mov
imul
pop
arpl
shr
fwait
pushf
cmp
add
sub
gs
shrb
leave
test
imul
push
xlat
jnp
mov
pop
out
mov
pop
arpl
and
pop
pop
push
add
loop
mov
jle
xchg
icebp
mov
and
lahf
dec
or
mov
jmp
sub
adc
cmp
jnp
fdiv
cmp
shr
loop
arpl
push
push
iret
jp
mov
push
rorb
fwait
leave
pop
dec
fstpt
or
mov
fwait
xchg
ficoml
push
stos
ret
fstl
xchg
in
xchg
mov
push
lahf
mov
and
lcall
stc
mov
push
inc
clc
dec
decl
push
mov
ds
xor
nop
pop
push
mov
xlat
pop
ljmp
xchg
mov
inc
and
xor
mov
sbb
push
shll
mov
sti
test
lea
jl
mov
lcall
jbe
rolb
frstor
insb
inc
xchg
jno
icebp
jno
adc
add
xor
cmp
pop
sbb
js
xchg
out
sbb
cmp
lret
xor
inc
jo
out
test
xchg
mov
xor
ljmp
pushf
xchg
sbb
movsb
setns
sbbl
insl
addr16
jp
push
or
in
adc
mov
popa
jmp
loope
movb
jnp
or
addr16
jp
enter
cmp
inc
pop
lahf
xorb
sub
push
out
jl
lret
mov
sbb
xlat
jnp
popf
rcrb
push
addr16
shlb
js
sub
sbb
daa
das
incl
fwait
xlat
enter
stos
push
push
lret
sub
cmpsl
testb
inc
or
push
mov
popl
in
test
sub
push
test
xchg
in
add
adc
sbb
sbb
cmp
test
loop
outsl
loop
lret
lcall
mov
dec
push
mov
xchg
jne
int3
jecxz
mov
pop
mov
repnz
jbe
inc
inc
mov
xlat
test
cmp
test
icebp
lret
dec
or
adc
mov
xor
hlt
into
jne
cmc
jge
popa
xchg
int3
out
js
movsl
push
fistps
xchg
dec
fldcw
js
adc
ret
mov
outsl
xchg
ror
pop
pop
in
pop
int3
cmp
inc
and
mov
ss
int3
lea
ds
push
cmp
pop
aam
daa
add
imul
sarb
data16
pop
pop
movsb
popa
aaa
lahf
ljmp
decb
push
mov
adc
jecxz
mov
dec
les
inc
in
out
je
fisubrs
cmp
call
push
pop
add
inc
push
clc
nop
nop
rolb
cmpl
jae
jno
inc
pop
fsubr
insb
in
add
popf
fadds
dec
sahf
dec
int
arpl
mov
fdivrs
out
dec
lcall
mov
dec
and
aad
xchg
fucom
and
mov
loopne
pop
pusha
stos
xchg
fadd
cmpsb
adc
stos
fimull
testb
ret
iret
dec
jb
mov
mov
sbb
lods
jno
or
sub
mov
mov
lret
pop
adc
ja
mov
adc
sbb
or
add
loope
mov
ds
andl
popf
adc
xor
rorl
jae
imul
sbb
and
into
push
add
cli
test
xchg
arpl
add
aam
mov
add
mov
sub
mov
pusha
jae
pop
out
push
pop
inc
mov
and
cli
ret
enter
addr16
daa
in
ret
sbb
mov
or
aas
out
fs
mov
mov
push
loop
pop
enter
mov
dec
mov
ds
loope
dec
lods
mov
rolb
test
add
sbb
lcall
jb
aad
aaa
loop
cmp
scas
ss
fucom
or
sub
push
shlb
ret
fcomip
dec
aas
std
push
jg
mov
cwtl
emms
inc
aas
arpl
sub
sbb
mov
call
inc
imul
cmp
xlat
sub
fisubs
mov
inc
push
pop
sbb
popf
pop
pushf
xchg
ror
mov
call
sbb
lret
mov
or
out
pop
mov
aaa
and
sub
fistps
push
jmp
xchg
fwait
cmp
adc
fstps
sub
out
mov
sahf
xchg
and
mov
shlb
jmp
and
shrb
and
adc
sbb
cmp
add
cmp
adc
jbe
dec
icebp
stc
push
pusha
cmpsb
dec
xchg
inc
out
mov
push
stc
decl
leave
out
xchg
cmp
ljmp
mov
xor
push
out
ret
dec
shll
or
int3
in
aaa
hlt
xchg
fs
dec
iret
adc
push
sub
pop
inc
pusha
dec
push
mov
lret
enter
imul
mov
push
shrl
fucom
xor
dec
fs
jp
lret
cmpsb
cmp
add
loop
sbb
popa
inc
mov
arpl
sahf
movsb
mov
xor
test
loope
fwait
lds
xadd
sbb
popa
push
jb
cltd
aas
mov
enter
jl
and
sbb
mov
pop
push
xchg
push
sub
jae
dec
clc
jg
jbe
sbb
pop
lds
jbe
aam
cmpsl
lods
clc
aaa
mov
and
mov
mov
aam
cmp
xor
jmp
and
or
mov
sbb
ss
insb
mov
lret
mov
and
cmpsb
and
sub
xchg
mov
ljmp
shll
addr16
outsb
addl
sti
test
jbe
sti
pop
scas
mov
push
lret
jl
das
mov
mov
cli
cmp
inc
mov
sbb
jl
hlt
fistl
jo
sahf
fxch
or
xor
stc
adc
push
push
xchg
xchg
xor
addl
rorl
addr16
pusha
lock
sub
shl
sbb
push
das
mov
adcl
test
cs
sbb
mov
in
add
out
outsb
cmpsb
mov
add
lea
stos
dec
out
adc
out
fisubl
or
pop
and
xorb
nop
aam
movsl
and
out
js
or
push
jecxz
lods
repnz
or
mov
and
ds
cmp
sbb
xor
insl
daa
mov
cmp
xor
aad
les
adc
repz
mov
inc
pop
push
gs
pop
adc
mov
push
xchg
int
mov
adc
adc
sub
mov
pop
fscale
dec
roll
inc
cmc
sub
in
fwait
mov
push
cmp
or
jle
pop
imul
leave
sbb
pop
inc
lcall
and
jae
fnsave
cmp
xchg
fwait
ja
test
call
arpl
in
insl
mov
mov
dec
std
xor
jmp
or
test
ljmp
dec
mov
inc
xchg
sahf
les
or
lock
inc
les
mov
cmc
push
mov
arpl
push
sub
jmp
mov
jns
rorl
mov
movsl
adc
inc
mov
ss
pop
aad
mov
jmp
enter
cmp
and
test
or
bound
jecxz
and
fs
or
xor
push
stos
mov
inc
jge
mov
popf
dec
mov
push
popf
push
lods
clc
push
sub
mov
jecxz
add
inc
push
out
jo
icebp
jnp
inc
push
data16
mov
mov
insb
and
aas
mov
movsl
adc
xchg
sbbb
imul
ss
pop
aam
insl
sti
push
addr16
adc
ljmp
andb
loop,pt
mov
jp
sub
cmp
ret
in
mov
adc
mov
scas
xchg
inc
insl
jnp
jb
out
xchg
shll
cltd
inc
push
ljmp
pop
xchg
aam
into
mov
dec
test
les
iret
mov
pop
mov
push
and
test
aas
add
outsb
fnstcw
and
repnz
sub
into
cmp
cmp
scas
pop
inc
jmp
clc
ja
in
enter
inc
lret
out
cmp
ljmp
arpl
mov
xor
add
and
inc
cli
gs
cwtl
pop
insb
mov
mov
outsl
outsb
out
push
jmp
adc
cwtl
sub
pop
cmpsl
mov
push
adc
rolb
xor
jnp
sub
sub
xor
lock
xor
sbb
test
rol
clc
mov
in
mov
fisubrl
clc
push
test
pusha
cmp
push
or
adc
jns
jecxz
scas
inc
or
jle
and
and
clc
ss
ss
inc
sub
add
imul
inc
js
inc
jbe
fldt
sbb
hlt
pushf
bound
fisttps
or
or
outsb
jo
xchg
frstor
xor
adc
clc
add
pop
jns
scas
dec
push
rorl
icebp
es
jne
pop
jmpw
jnp
sahf
arpl
mov
addr16
mov
out
loop
mov
or
popf
gs
rol
jo
mov
inc
mov
ja
inc
arpl
cmpsb
fs
clc
rcrb
test
ss
push
stos
cmp
xor
pop
clc
pop
testl
outsl
arpl
ja
pop
mov
push
outsb
pop
cmpsl
xchg
repnz
stos
fisttpll
outsl
dec
loop
dec
decb
ljmp
ljmp
mov
lock
ja
xor
js
jmp
subl
test
and
sub
sub
mov
fs
add
sbb
int3
cmp
jp
addr16
leave
add
test
adcl
jo
mov
xchg
push
add
setnp
into
and
push
ret
lret
add
sarb
xorb
jb
pop
or
mov
cmpsb
test
test
cmp
add
out
cs
pop
repnz
cltd
addr16
sbb
int
mov
lret
dec
and
lea
stos
pop
add
jo
jbe
pop
cmp
mov
inc
jnp
or
sub
cmp
add
jl
imul
nop
ret
dec
inc
dec
mov
fidivrs
es
aad
xchg
daa
mov
mov
in
les
mov
xor
imul
push
xchg
sub
aas
aaa
ds
in
in
mov
aad
jmp
mov
pop
mov
insb
hlt
fwait
cltd
xchg
cld
das
lahf
add
add
popa
xchg
sub
leave
fists
scas
fisubrl
repz
mov
sub
pushw
je
xchg
or
data16
xchg
push
sbb
in
cmp
xchg
push
mov
jbe
dec
sbb
pop
in
cmp
pushl
jae
fwait
dec
pushf
sbb
dec
movsl
push
xor
pop
mov
ffree
out
cld
push
cs
sbb
dec
pop
jp
int3
and
jne
xchg
imul
insl
jmp
ret
aad
lcall
mov
rcll
adc
sbb
mov
xchg
mov
jne
mull
cli
mov
mov
jb
sbb
sbb
test
cld
dec
jle
jbe
jp
cwtl
adc
and
push
fstpt
fiaddl
aas
dec
cs
lds
jl
dec
aam
xor
lcall
lret
jle
aas
popf
mov
fbstp
mov
xor
enter
std
mov
std
scas
adc
pop
jp
imul
sub
jg
add
jb
test
test
cwtl
mov
mov
sbbb
mov
mov
sub
inc
xor
xchg
out
xlat
push
or
pop
mov
pop
push
pop
shll
xchg
sub
cmpsb
jb
xlat
frstor
push
lahf
cmpsb
loopne
or
enter
xchg
push
rcll
xchg
jmp
int
dec
mov
or
into
dec
inc
pop
or
ret
dec
mov
add
sahf
dec
mov
xchg
hlt
aaa
xchg
out
pop
fsubs
clc
stos
cli
add
push
andl
cwtl
sub
sub
jecxz
push
leave
jp
jge
sbb
jbe
jl
and
mov
clc
and
gs
pop
repnz
xchg
mov
mov
push
jmp
xor
pop
push
push
lock
fstl
inc
clc
cmp
sub
add
icebp
xchg
popf
xchg
push
xchg
or
pop
imul
xor
std
orb
or
mov
pop
dec
xor
add
jp
test
add
xchg
pop
ja
out
or
sbb
test
xchg
mov
and
lret
and
sub
fcomps
es
pusha
add
jno
push
cmpsb
jmp
ja
jg
sub
xor
mov
push
xor
and
sbb
add
enter
sub
scas
rol
mov
pop
in
icebp
xchg
es
outsb
fldenv
xchg
insb
cmpsl
iret
ljmp
in
xor
in
pop
into
xor
test
repnz
push
es
xchg
fsubs
xchg
dec
push
add
fdivrl
mov
add
sti
lcall
lods
mov
push
aam
mov
sbb
cmp
mov
mov
std
dec
xchg
sub
inc
inc
push
pop
data16
pop
cmpsl
xor
xchg
repz
nop
xchg
pop
sub
mov
daa
xchg
lret
ds
pop
lods
adc
inc
hlt
push
dec
test
aaa
out
sub
jns
xchg
test
movsl
dec
fistpl
sub
loopne
pop
sbb
mov
movsb
jb
pop
jae
test
nop
push
lcall
lock
addr16
adc
mov
in
rcr
jns
ss
jmp
inc
mov
adc
mov
lahf
ret
movb
das
mov
cs
xor
mov
out
ljmp
sub
ljmp
out
sti
dec
xchg
fwait
and
adc
aam
push
outsb
adc
mov
and
xchg
jl
mov
nop
mov
cmpsb
jl
mov
lods
or
pop
sub
fimull
aad
dec
xchg
repnz
dec
mov
test
lds
mov
cmpsl
inc
xlat
and
push
cmp
add
xor
icebp
adc
add
mov
ljmp
xlat
mov
pop
mov
fstps
mov
shlb
sub
cwtl
out
cmc
adc
jmp
lcall
xor
sub
mov
popf
sub
notl
jne
jns
pop
push
push
xchg
aam
ljmp
jl
pop
aaa
add
add
and
sahf
pop
push
dec
push
mov
loope
sbb
push
repz
sub
scas
out
sbb
push
ficompl
push
jle
dec
adc
adc
gs
gs
repz
xchg
xchg
divb
pusha
inc
inc
ret
cmp
aad
retw
fwait
mov
sbb
movsl
xchg
lret
andl
fstps
xchg
sbb
dec
mov
push
adc
mov
mov
and
sbb
sti
dec
inc
fwait
out
fucom
sub
dec
and
sbb
cmp
movsb
inc
push
mov
pop
cmp
adc
out
mov
jae
fistpl
into
push
movsb
sbb
arpl
inc
dec
mov
icebp
in
mov
push
sub
and
or
sub
rcrb
mov
dec
and
inc
mov
dec
xchg
insl
xchg
addr16
lahf
mov
popa
fstl
fidivs
push
out
insb
mov
mov
mov
sub
push
pop
lea
push
sbb
aaa
push
xor
dec
cwtl
popf
dec
or
sub
mov
mov
add
dec
mov
outsb
xchg
fidivrs
pop
mov
add
mov
ret
jecxz
repnz
inc
xchg
pusha
fwait
lret
gs
lods
dec
cmp
adc
aaa
cmc
pop
dec
je
mov
mov
in
pop
flds
cmp
jp
push
test
inc
imul
cltd
sbb
mov
outsl
bound
and
fildll
loope
xchg
pop
sbb
imul
sarb
or
jbe
or
cmp
add
inc
cmpsb
or
shrb
mov
fwait
stos
push
cmp
and
pop
inc
pxor
inc
jne
mov
jecxz
mov
mov
insb
pop
insl
test
adc
mov
push
pop
dec
pop
jg
cmp
sbb
dec
push
mov
in
inc
pusha
add
jmp
xchg
push
add
sbb
lods
jmp
addl
orb
sbb
cwtl
pop
and
xchg
loopne
fmull
or
xchg
arpl
fisubl
or
add
loopne
cmpsl
sub
sahf
loopne
jne
addr16
and
dec
dec
movsl
lahf
and
sub
dec
cvtdq2ps
imul
rorl
lods
std
sbb
fwait
outsb
orl
insl
mov
pop
std
inc
cmp
inc
loopne
dec
jp
aaa
loope
inc
movsl
aad
out
mov
rolb
cmp
inc
js
or
cltd
xlat
ret
xor
aas
adc
outsl
rorb
lods
jp
idivb
aas
adc
fcompl
sahf
ret
mov
in
cmp
out
or
testl
xor
adc
out
inc
xchg
dec
and
les
push
cld
inc
pop
ret
xor
pop
xchg
adc
popa
popf
adc
dec
and
mov
or
pop
fs
loope
push
ret
ljmp
ret
jnp
sbb
dec
push
iret
int
js
call
adc
xchg
sbbb
inc
inc
xor
sub
jae
insb
jl
cld
dec
dec
xchg
sub
jb
push
push
decl
bound
mov
xchg
pop
sarb
cltd
stc
cmc
xor
add
pop
adc
and
xor
xchg
gs
sarb
cmpsl
xchg
add
dec
push
int
cmpsl
sbb
cmp
adc
pop
das
fsubrl
sbb
or
addl
add
sbb
jle
jns
xchg
lret
imul
jnp
les
or
popa
shll
jae
inc
jo
fcoml
test
cmpb
adc
pop
or
nop
dec
push
pop
loope
test
popa
pusha
out
shl
xchg
arpl
cmp
xchg
dec
jmp
pushf
add
dec
cmp
fsubl
jmp
outsl
or
je
push
loope
pop
dec
adc
xchg
mov
in
in
mov
iret
xchg
pop
inc
ds
dec
mov
in
out
imul
call
in
or
jge
inc
icebp
fwait
outsl
mov
xorl
in
in
out
addr16
lcall
testl
fmuls
imul
cld
cmp
pop
mov
loopne
jnp
aam
fs
in
int
sbb
popf
dec
jnp
pushl
and
mov
in
ss
pop
push
fcmovb
movsl
loope
sarb
aad
jbe
lock
push
push
xor
and
call
inc
add
and
or
cmp
loopne
dec
hlt
cmp
aas
inc
push
in
xor
pop
bound
jmp
enter
aad
mov
dec
xchg
repz
mov
inc
frstor
dec
pop
fidivrl
pop
outsb
sbb
adc
jg
or
cld
xchg
enter
sbb
pop
xchg
add
in
push
sbb
sahf
das
lock
clc
in
xor
and
jbe
cld
mov
fidivs
repz
push
inc
popa
testb
mov
lods
pop
pop
pop
sbb
aaa
shrl
int
sbb
ret
aaa
repz
pop
mov
jl
js
pop
loope
scas
js
jnp
mov
rcrl
ljmp
adc
cmpb
xchg
xlat
mov
repnz
fidivrl
sbb
das
cmp
add
sbb
mov
stos
pop
jb
jmp
cmpsl
rolb
pop
xchg
movsb
clc
in
iret
cld
cmp
shll
jne
nop
aas
aad
pop
mov
mov
or
cmp
sbb
test
fidivs
leave
inc
adc
xor
mov
jne
clc
push
fcoml
mov
addr16
rolb
pop
outsb
test
ja
and
mov
push
or
int3
cli
fstp
ds
add
in
imul
mov
or
mov
sbb
jne
int3
andb
lret
addr16
xor
inc
test
imul
cmpsb
push
test
ja
inc
add
pop
xor
dec
addr16
leave
leave
in
jg
das
jbe
xchg
aad
xchg
and
jle
and
xchg
adc
inc
xchg
out
sbb
mov
lret
sbb
aam
pop
push
out
scas
dec
nop
roll
and
stos
sahf
adc
or
push
jl
mov
push
cmp
es
jbe
fidivs
push
shll
lahf
jae
pushf
jo
pusha
jmp
push
or
mov
inc
mov
fisubs
cmp
cmpsb
out
sahf
int
push
jo
dec
dec
pop
cs
rcrl
pop
loop
sbb
sbb
inc
lret
mov
arpl
cmp
cmc
sub
dec
aad
jecxz
imul
jge
jno
mov
jbe
aas
pop
out
lcall
sbb
sub
mov
jbe
dec
ss
cmpsl
es
xlat
xor
push
push
pusha
jmp
add
aaa
pop
inc
sbb
push
pusha
lock
dec
add
add
cmp
or
and
fldl2e
push
scas
stc
mov
shll
cmc
adc
iret
push
mov
negb
xlat
iret
roll
cmp
sbb
daa
adc
iret
jo
cltd
hlt
lock
push
xor
sbb
dec
dec
jle
lds
jnp
rclb
insb
jbe
repz
mov
ja
pop
test
ret
mov
cmp
xchg
adc
add
stos
cmc
sub
into
movsb
gs
cmp
cmc
or
test
dec
out
shlb
ret
xchg
test
cmovns
mov
sahf
xor
repz
or
mov
jbe
pop
push
repz
xchg
cld
imul
cmpsb
lods
ret
daa
push
mov
pop
jmp
mov
mov
cli
mov
mov
dec
popf
cmp
enter
mov
icebp
sbb
jae
and
or
in
out
pusha
icebp
es
imul
sbb
mov
mov
sti
pushf
ja
sbb
mov
es
pop
shl
icebp
push
mov
cmp
das
cmp
repz
pushf
insb
add
arpl
out
pop
inc
pop
arpl
pop
xor
test
imul
push
rorl
js
lret
xchg
imul
outsb
jmp
pop
test
jl
sub
out
xor
sub
cld
insb
addl
enter
jge
imul
cmp
pop
outsb
aaa
adc
enter
shl
jae
enter
lea
test
mov
and
flds
int3
sub
mov
shl
negl
test
cmp
or
sti
out
xchg
nop
jne
cwtl
inc
mov
sub
out
cmp
imul
sbb
and
and
mov
adc
xchg
mov
pop
imul
out
cmp
inc
mulb
test
or
cmp
xchg
fildl
inc
sub
sub
add
sbb
out
mov
or
or
lods
jno
cmp
fstl
fcomps
cltd
sti
adc
xchg
push
scas
fistpll
jecxz
xchg
jg
lcall
adc
sti
fisubl
cld
or
in
pop
imul
cmc
mov
imul
lret
roll
cmp
adc
dec
mov
or
gs
jp
pop
mov
pop
cmpsb
bound
cmp
pop
jno
xor
test
sub
sbb
jnp
mov
mov
pop
jge
jnp
hlt
addl
mov
dec
xlat
sahf
add
stc
pushf
in
adcb
in
imul
call
add
adc
sub
cltd
push
les
cs
sub
dec
jecxz
loope,pt
subl
loope
popa
roll
incb
adc
push
scas
and
rorb
add
test
adc
loop
int
adc
jp
push
xor
jecxz
repz
std
mov
and
xchg
push
loopne
mov
xchg
xor
push
test
ficoms
push
sbb
xor
sub
fstps
mov
stos
jns
in
push
cli
shrl
js
xchg
pop
aad
data16
inc
xchg
std
push
mov
sub
xor
ss
sbb
imul
dec
dec
lret
xchg
aaa
je
or
icebp
cs
loope
push
out
push
pop
cli
mov
cmc
scas
pop
daa
fimull
inc
adc
jno
mov
cmpsb
sbb
mov
pop
ficompl
inc
fistps
imul
rcll
ja
jp
pop
cmc
pushf
inc
in
and
xchg
and
test
add
in
hlt
lret
push
in
mov
jae
pop
aas
dec
fistpll
mov
mov
pop
push
adc
mov
popf
mov
xor
adc
sub
test
les
sub
xchg
or
test
fildll
sbb
mov
adc
cmp
and
lret
dec
lods
loopne
fldcw
mov
sbb
sarb
loopne
mov
push
cmc
add
andb
imul
ds
jle
mov
into
aas
aaa
jmp
adc
xor
sbb
mov
jp
pop
or
pusha
fs
cmp
es
outsb
cmp
or
sti
inc
jae
nop
cmp
cwtl
or
lahf
sub
xchg
cli
sub
fwait
paddsw
icebp
out
rcll
mov
pop
jae
mov
mov
das
mov
cltd
pusha
xchg
bound
lcall
inc
sbb
xor
and
repz
mov
mov
dec
mov
scas
test
and
xor
rorl
mov
xchg
mov
iret
orb
pop
cmp
add
insl
inc
rclb
push
cmp
and
in
int3
mov
push
sub
loope
inc
rorb
daa
mov
cmpxchg
pop
pop
andb
out
lret
jo
pop
sbb
sub
nop
push
push
cvtps2pd
adcb
test
dec
inc
sbb
push
testb
mov
jno
mov
shlb
lea
iret
jmp
mov
inc
loope
outsl
stc
jecxz
xchg
sub
or
push
sub
pop
jp
cmp
fmuls
mov
mov
in
jg
mov
pop
loop
cmp
stc
xchg
push
jge
mov
sbb
push
lahf
hlt
cmp
cmp
mov
sub
aam
push
cltd
adc
mov
lcall
stos
jae
pop
mov
inc
into
inc
fwait
add
jg
pop
jb
fmuls
push
test
mov
pushf
fisttpl
cmp
xlat
pop
xlat
and
cmp
sub
in
repnz
or
adc
pop
dec
xchg
pop
cmp
xchg
dec
leave
xchg
xchg
fbld
xor
push
in
loope
jge
ror
insb
pop
jae
xchg
xchg
xor
and
cmp
movb
mov
aam
outsb
jp
push
mov
jae
scas
ljmp
push
loopne
divb
cs
mov
sbb
and
dec
xchg
js
pop
mov
add
mov
addr16
jae
sbbl
push
out
pop
pop
jo
ret
cmp
mov
cmpsl
ss
pushf
push
mov
mov
negl
push
fwait
pusha
mov
iret
leave
xor
aaa
test
dec
arpl
iret
or
shr
adc
mov
cmp
and
fs
push
ja
in
jo
ret
mov
mov
mov
sub
xchg
adc
xor
ret
icebp
xchg
jl
xchg
movsl
jmp
or
inc
scas
imul
xor
pop
gs
loope
add
push
std
xor
mov
aas
xchg
pop
shlb
mov
frndint
cs
mov
xor
sub
pop
mov
mov
sub
in
subb
or
subl
add
out
decb
add
xor
movsl
xchg
sbbb
call
cmc
and
inc
inc
loopne
sub
add
test
pop
and
xor
int3
iret
cmp
cli
imul
fbld
inc
rolb
shrl
mov
movsl
dec
mov
addr16
sti
xchg
mov
mov
in
sti
test
addr16
mov
popa
mov
add
pop
cmpsl
mov
jle
stos
push
ljmp
lahf
sbb
mov
xchg
rdtsc
test
mov
test
loopne
jo
push
fwait
arpl
pop
gs
and
sbb
repz
adc
fadds
lret
stos
inc
dec
sub
out
mov
in
iret
adc
fnsave
xchg
jle
bound
mov
mov
subb
adc
movsb
add
mov
jle
repnz
sti
lahf
icebp
fdivrl
mov
and
push
mov
fwait
stc
imul
cmp
add
outsl
std
xor
lcall
dec
pop
es
sarl
mov
repnz
hlt
push
fcmovnb
jbe,pt
jl
mov
test
cmp
lcall
fxch
mulb
xchg
xchg
nop
mov
xor
enter
fistl
movsl
fbld
jmp
insb
mov
lahf
sbb
mov
jmp
xor
push
push
cltd
insb
hlt
mov
or
loop
dec
mov
loopne
pop
stc
into
cmc
dec
mov
in
test
nop
jge
rcrb
add
ret
in
adc
repz
into
jmp
adc
mov
mov
dec
test
fcmovne
repz
sbb
leave
sbb
inc
xor
and
pop
xchg
aas
sbb
aad
insl
out
sub
pop
push
adc
cmp
jne
add
jge
pop
jmp
jo
sahf
dec
ja
jmp
xor
mov
xor
cmp
push
rcrl
inc
sahf
inc
push
arpl
repz
add
pop
xchg
popa
add
adc
shlb
adc
jo
je
mov
jg
inc
shrb
push
pop
movsb
rcr
shrb
loope
fadd
push
jg
or
ret
nop
das
pop
adc
loope
mov
enter
and
aam
loop
mov
pop
push
inc
push
mov
xchg
lahf
lea
sbb
paddsw
dec
sti
sub
inc
iret
mov
or
and
or
sbbl
std
pop
subb
je
sub
hlt
inc
repnz
xor
cld
xchg
jno
inc
sub
adc
test
loope
icebp
gs
sti
adc
xor
lret
adc
stos
enter
xor
cli
cmp
dec
outsb
lahf
push
sbb
stos
les
aad
das
fnstcw
clc
or
pop
jl
test
shll
icebp
xchg
mov
fists
xor
adc
and
pushf
dec
xlat
and
int3
sbbb
orb
mov
or
cmpsb
xor
mov
loope
jae
jne
jmp
xchg
xchg
cltd
xchg
xchg
cmp
nop
das
mov
xor
or
add
add
add
add
cmp
out
ret
push
jno
mov
or
xchg
pop
push
pop
test
rcr
ljmp
sub
hlt
cltd
test
inc
push
mov
aam
jmp
xchg
dec
insb
inc
in
or
leave
out
inc
ja
stos
arpl
or
add
mov
or
cld
popf
mov
fstl
xchg
cvttps2pi
or
mov
push
loope
mov
stc
mov
and
mov
daa
mov
nop
pop
ret
and
push
js
jmp
jns
adc
inc
add
adc
cmp
inc
pop
mov
and
imul
xchg
dec
cmp
jb
push
pop
fcmovb
pandn
in
ss
adc
push
pushf
insl
cmpsl
int3
inc
adc
sbbl
or
push
fdivr
in
xorl
sbb
pop
ret
pop
cmp
add
inc
mov
ret
xchg
enter
cs
xchg
mov
and
and
aaa
div
das
xor
sbb
mov
jb
jbe
insl
and
mov
lcall
xchg
push
aaa
movsl
lret
lods
hlt
xor
loopne
rolb
pop
or
aas
jmp
mov
xchg
daa
jg
cmpsb
inc
enter
mov
movsb
pop
jnp
add
arpl
mov
enter
inc
jg
adc
sub
push
pop
add
fiaddl
push
std
addr16
push
push
daa
dec
or
adc
mov
into
outsl
ret
and
imul
mov
push
pop
mov
add
mov
inc
add
loopne
bound
pop
fdiv
sub
ds
add
xor
leave
in
jns
fldcw
shll
fisubrs
xchg
push
outsl
mov
lret
stos
leave
jo
cmp
mov
jmp
mov
and
and
cmpsb
imul
push
into
stos
jg
dec
sti
dec
and
and
rcrb
and
jg
mov
aad
fdivs
jns
jecxz
sahf
push
mov
pop
sbb
xchg
fidivrl
fwait
clc
andb
mov
lods
scas
jb
push
popa
cmp
push
gs
aam
or
iret
mov
lahf
repnz
loope
lret
or
sbb
loopne
add
cmp
into
inc
shrb
aaa
aam
dec
pusha
imul
outsl
and
divl
loope
pop
mov
adc
dec
loopne,pn
mov
imul
mov
sbb
pop
push
imul
out
lea
jbe
cli
fists
sbb
xlat
ret
xchg
mov
dec
jbe
mov
cld
adc
cs
xchg
rep
jae
ret
jg
jae
jns
xchg
aaa
rclb
inc
icebp
stc
ljmp
dec
lock
icebp
rcrl
movsb
or
push
mov
out
sub
dec
out
in
and
cmp
icebp
jns
bnd
mov
push
popa
insl
fldl
sub
push
pop
sbb
adc
addr16
push
repz
push
sti
and
sub
aaa
jbe
repz
mov
inc
or
inc
push
orl
push
mov
and
xor
add
dec
lds
xchg
xor
pop
subl
jne
imul
xchg
dec
or
inc
or
xchg
cmp
in
in
adc
sar
jb
inc
mov
mov
dec
sbb
cmp
inc
cs
das
dec
loop
and
jle
fnstcw
cld
pop
call
iret
jmp
mov
and
aaa
sbb
mov
and
add
xchg
mov
push
dec
into
push
cmp
push
mov
mov
cmp
mov
aas
inc
inc
sbbb
push
mov
aaa
jne
cmpsb
jns
ds
mov
mov
fld
dec
ret
adc
aas
push
or
iret
sti
mov
xor
sti
jbe
adc
ror
stos
fdivs
sbb
mov
adc
adc
imul
dec
popa
mov
mov
pop
ficompl
dec
mov
arpl
neg
test
sub
jge
call
and
jp
add
sar
adc
mov
fs
in
jb
jnp
clc
xor
sub
and
push
mov
ror
movsb
pop
jp
sub
test
inc
imul
lret
push
adc
mov
mov
mov
mov
jbe
ds
test
shll
loopne
mov
sarl
pusha
ret
je
shrb
hlt
stos
mov
mov
adc
mov
and
pop
jle
xchg
pop
data16
sarb
xlat
popa
or
adc
test
loope
loop
add
or
push
jg
mov
lcall
loope
sbb
inc
rorl
and
lock
addr16
xor
jo
andb
lea
loopne
push
xor
inc
rol
push
mov
or
out
hlt
aaa
add
fstps
sbb
and
lea
push
or
lods
fiaddl
gs
aam
outsl
fdivs
int3
or
push
scas
cmp
out
and
xor
jmp
jmp
adc
sub
enter
imul
mov
adc
pop
mov
adc
dec
arpl
xchg
ss
and
jns
cmp
push
and
mov
dec
scas
mov
shr
or
and
test
mov
sub
cld
jmp
sub
dec
xor
add
mov
loope
xor
add
nop
outsl
notb
sbb
pop
lret
push
ret
pop
fwait
sub
dec
mov
lock
cmpsl
xchg
cltd
int
cmpsl
pop
data16
push
loopne
fwait
ljmp
mov
arpl
xor
push
ds
mov
or
inc
push
negl
lcall
mov
test
push
aaa
xchg
mov
xlat
and
mov
insb
lret
cmp
mov
repnz
xor
and
nop
push
push
addr16
mov
int3
jno
adc
bound
mov
ljmp
sbb
ret
xchg
xor
or
mov
inc
push
inc
dec
mov
into
pusha
pop
ljmp
xor
adc
cs
dec
lock
sbb
pop
insl
fistl
xchg
cmpsb
in
sub
lods
mov
imul
inc
pop
mov
outsb
xchg
in
inc
pop
notb
fs
push
add
inc
ret
call
fdiv
adc
jae
xchg
shll
sbb
aas
sub
leave
pop
out
sbb
adc
jle
jmp
in
addb
aam
test
kmovw
jb
fucomp
mov
imul
push
cmp
sub
scas
jge
xchg
jno
cmp
cmpsl
movsl
sbb
rorb
jp
jp
mov
clc
cltd
cmp
sub
outsb
mov
popf
xchg
dec
popa
mov
sbb
mov
aaa
clc
jne
jnp
dec
bound
je
xlat
mov
cmp
push
lret
sub
leave
es
mov
mov
cmp
cli
icebp
push
sbb
movups
sub
adc
pop
dec
shrd
addb
ror
adc
sar
push
inc
rolb
filds
dec
cmp
jno,pt
out
stos
lods
aas
pusha
xrelease
and
int3
pop
push
rcrb
iret
add
stos
adc
sub
je
lock
mov
cltd
pop
in
push
out
mov
insb
adcl
mov
or
cli
gs
xchg
fwait
dec
mov
in
outsb
rclb
add
jb
in
das
pushf
push
xchg
test
sahf
mov
pop
dec
mov
adc
jecxz
xor
cli
fucomi
sahf
cmp
imul
xorl
call
shlb
or
push
cmp
iret
push
push
negb
pop
loopne
xor
fs
hlt
mov
mov
add
push
in
repz
outsl
in
mulb
iret
lods
push
ljmp
pusha
rorb
dec
out
fwait
pop
add
lods
sti
push
out
dec
dec
sbb
mov
mov
mov
shrl
jle
mov
imul
ret
ds
mov
adcb
fdivl
test
mov
loop
adcb
ret
cmp
es
add
out
cmp
sbb
sub
lcall
lds
cli
sahf
and
mov
mov
mov
push
out
sub
dec
pop
mov
test
hlt
push
sbb
scas
pop
fidivl
adc
mov
sbb
lock
loop
xchg
cmp
adc
pop
iret
push
push
and
jge
mov
repnz
mov
sti
xchg
mov
imul
and
lods
adc
or
mov
stos
mov
mov
push
sbb
sub
cltd
mov
inc
sbb
int3
sub
and
lock
nop
mov
jg
popa
repnz
jo
and
cmp
mov
xor
mov
or
cld
fisubl
cmp
in
pop
aaa
dec
push
and
xchg
cmp
mov
add
cmp
jmp
push
or
out
xor
iret
push
int3
xchg
or
out
stos
inc
xlat
cmc
jp
sbb
int3
aad
popf
fsubp
jg
jg
add
pop
sub
jno
xchg
jp
mov
adc
js
adc
dec
mov
stos
and
das
ror
and
nop
popf
mulb
dec
stos
rorb
cwtl
jb
cmp
popa
push
cli
inc
sbb
movsl
pusha
xlat
and
add
fisubs
inc
add
lock
xlat
popf
xchg
mov
in
call
add
xchg
sub
iret
insl
mov
insb
out
std
lret
lods
mov
ds
jae
dec
xchg
xor
imul
pop
popa
in
cmpb
push
mov
adc
sbb
xchg
add
outsb
jl
or
add
inc
cmp
sbb
push
es
aad
repnz
sub
movsb
std
push
movb
notb
daa
fistl
pop
leave
scas
mov
add
scas
idivb
mov
movsb
pop
sub
sub
lcall
imul
daa
out
pop
sbb
lods
xor
jmp
sub
fcompl
mov
cmpsl
mov
in
in
mov
outsb
push
iret
stos
ljmp
loop
sahf
out
stos
sahf
in
xor
pop
push
push
adc
sub
fnsave
jns
push
rolb
sbb
aad
mov
aas
js
fwait
pop
inc
xchg
pop
fdivrp
sbbb
dec
xchg
sub
xchg
jbe
in
mov
enter
sbb
ja
ficoml
in
int
loopne
fsub
jo
lcall
add
inc
lret
fidivrs
or
push
jo
pop
lea
adc
vcvtdq2pd
test
push
jbe
sbb
lods
inc
frstor
mov
out
pop
xchg
stos
out
push
xchg
out
jle
mov
in
mov
in
jge
dec
cwtl
push
cmp
fstl
std
xchg
sbb
xor
mov
mov
xor
stos
in
mov
in
sub
aaa
lods
fsubr
sbb
test
outsb
je
sub
adc
mov
ret
test
scas
pop
pusha
push
and
jmp
or
lods
leave
jno
mov
daa
inc
push
xchg
insb
pushf
in
mov
lcall
insb
adcl
ret
bound
mov
mov
dec
in
mov
and
out
and
sub
xor
add
das
icebp
add
lds
dec
fisubs
shll
adc
loope
jnp
cwtl
fs
sbb
mov
testl
mov
mov
inc
outsb
or
sbb
xchg
or
sbb
push
int3
cld
mov
or
in
push
clc
xor
dec
inc
aaa
dec
jg
mov
int3
rcrl
mov
add
ret
cmpsb
mov
loope
push
push
adc
lret
loope
push
repz
loope
lds
js
mov
test
clc
aad
sub
movsb
lret
ret
xor
cmp
mov
jbe
lds
loop
and
orb
bound
mov
mov
cli
stos
xor
outsb
sbb
cmp
sbb
adc
stos
push
xchg
test
cmc
aaa
arpl
fidivrs
das
and
inc
lcall
xor
and
in
pop
mov
sbb
ds
movsl
pusha
mov
push
mov
js
ret
jno
int3
pop
dec
shrb
cmc
fldt
iret
dec
stos
dec
fstl
cmp
fsubl
adc
lret
or
sub
out
std
mov
pop
popf
xchg
xchg
xor
cmp
adc
loop
leave
push
icebp
jmp
imul
loope
jns
xor
dec
adc
or
dec
cltd
mov
push
push
xor
sub
sbb
in
cmp
repz
std
cmc
subb
pop
sub
mov
jge
loopne
or
dec
ret
nop
loope
movsl
arpl
rolb
add
or
xchg
dec
test
jne
push
loop
loop
fildll
loopne
ret
dec
jp
adc
push
sub
push
ret
inc
out
push
mov
mov
daa
into
fldl
js
cwtl
imul
daa
dec
inc
push
test
cmc
test
push
adc
bound
dec
fnstenv
add
frstor
pop
cmp
pop
pop
dec
inc
sub
xchg
leave
mov
rcrb
or
or
push
cmc
dec
fiaddl
pop
lods
hlt
push
jne
out
jmp
dec
push
testb
icebp
jg
push
outsl
fs
adc
lcall
sbb
shrb
icebp
lret
out
jecxz
pop
xlat
stos
rorl
xor
inc
mov
mov
cmp
cmp
and
inc
xchg
rcrl
push
add
mov
aam
dec
mov
out
sub
jno
sub
fisubrl
mov
push
pop
fwait
iret
adc
les
dec
lahf
je
adc
pop
enter
aas
xlat
dec
aam
fsubs
lods
jnp
jbe
and
jle
dec
pop
ficoms
int3
jns
ret
sti
mov
rolb
stos
lret
mov
scas
int
cwtl
ljmp
inc
mov
adc
shlb
mov
xor
les
fcmovnb
mov
in
or
or
gs
stc
rorb
je
or
dec
loop
mov
loopne
sub
fimull
adcl
rcll
outsb
cwtl
pop
xor
pop
jae
cmp
and
mov
test
jbe
es
or
mov
pop
jae
push
push
pop
dec
fisubrl
mov
pop
roll
sahf
jo
inc
xor
loopne
sarl
les
clc
inc
pushf
out
pop
mov
add
cmp
xchg
jle
pop
roll
or
mov
mov
mov
mov
push
sbb
divb
iret
pop
dec
test
int3
ret
repnz
push
jae
inc
rorb
mov
movsl
imul
inc
mov
cwtl
jno
notb
fdivs
in
fnstcw
cs
xchg
loopne
sub
repnz
fisttps
lahf
xchg
int
mov
dec
cmpsl
adc
sbb
cmpsl
hlt
pop
outsl
xchg
faddl
mov
das
mov
daa
ljmp
mov
insl
mov
insl
stos
sbb
je
je
fsubl
xchg
cwtl
xor
jns
cwtl
mov
sahf
dec
jg
sbb
cmp
cmp
cli
je
sarb
dec
jno
enter
loope
inc
pop
sub
sub
jnp
insb
loop
and
hlt
adc
ss
sbb
or
push
aam
movsb
ror
xchg
push
iret
push
adcl
imul
nop
add
test
pop
scas
push
addb
daa
pop
cmp
mov
pop
rcll
dec
add
out
test
jno
cli
scas
add
sbb
fsubl
sbb
mov
icebp
dec
and
rolb
mov
mov
xor
adc
test
loop
jne
add
mov
adc
sub
dec
pop
push
dec
or
div
pop
int3
sbb
inc
adc
adc
imul
lods
xor
push
xchg
clc
movsl
dec
int3
daa
push
sub
xor
or
jp
outsb
cmp
fwait
lret
inc
and
js
gs
mov
enter
mov
mov
lds
xchg
pop
outsb
je
add
mov
aas
mov
jl
xchg
enter
inc
cmc
inc
and
int
arpl
ss
pop
cmp
or
lods
adc
repz
dec
faddl
out
mov
outsb
ret
dec
add
mov
das
scas
xor
adcl
inc
push
fwait
hlt
scas
or
imul
dec
loopne
inc
cltd
mov
les
xchg
in
lods
ficomps
inc
mov
in
dec
iret
mov
cltd
push
xor
stc
rolb
int
outsl
mov
mov
adc
enter
push
inc
iret
and
mov
xor
shlb
mov
jno
inc
pushf
repnz
or
aaa
jl
xchg
push
inc
xchg
dec
ja
xorb
mov
imul
xor
and
fs
outsb
icebp
inc
inc
fdivl
push
andl
leave
cmpl
outsb
mov
lods
stc
add
xor
repnz
dec
xor
inc
pusha
xchg
lret
push
adc
sub
cmp
lock
add
jnp
mov
pushf
mov
ja
inc
shll
mov
sti
cld
call
imul
outsb
fs
icebp
push
sbb
sub
push
jnp
and
outsb
pop
les
xchg
pop
sti
out
cmc
ja
leave
adc
cmp
and
lret
lock
cmp
dec
jne
aad
cmc
sub
adc
in
mov
scas
sbb
cli
sti
xchg
jbe
xor
sahf
push
dec
xchg
jbe
inc
and
pop
mov
imul
xchg
mov
stos
push
inc
inc
loopne
jbe
je
sub
xor
jge
sub
pushf
adc
int
lea
aas
mov
push
ret
int
jae
ljmp
int3
je
lea
mov
in
fiaddl
fwait
cmp
push
rclb
lods
call
cmp
mov
sbb
xor
fs
dec
add
aas
jnp
jnp
adc
stc
rorb
cs
or
fisttps
mov
outsl
or
push
add
orps
leave
sub
negb
das
mov
xchg
inc
ficoms
push
jmp
or
insb
int3
sbb
mov
xchg
dec
inc
push
fcmovnb
repz
sub
pxor
xchg
inc
jp
shrl
inc
inc
call
sbb
inc
xchg
cmp
jbe
xor
xor
lret
aam
into
aam
xchg
sbb
and
out
test
cmp
ret
cmp
es
xchg
je
add
pusha
int3
lcall
gs
sahf
sti
jl
int3
add
push
loopne
inc
into
shlb
xchg
idivb
jg
jecxz
mov
mov
mov
cmp
adc
push
pop
dec
cmpsb
mov
mov
inc
jnp
adc
leave
jmp
aad
add
cld
mov
add
jp
lds
dec
insb
xlat
push
movsl
in
mov
sub
pusha
mov
pop
call
je
mov
jmp
imul
rorb
inc
stos
ss
sub
dec
jne
mov
jl
movsl
cmpsl
push
outsb
push
je
mov
xchg
xchg
sbb
add
icebp
imul
sub
mov
adc
xor
les
push
into
jmp
sbb
test
mov
cmp
fst
js
stc
stos
xor
clc
mov
aam
fsubrl
out
push
and
xor
repnz
in
test
loopne
mov
and
mov
mov
mov
scas
std
mov
cltd
pop
cli
cmp
addl
loop
push
icebp
jo
fwait
insb
aaa
jmp
cmc
push
push
push
xchg
jle
out
lods
inc
push
push
sub
dec
je
test
pop
jb
ret
pop
dec
imul
dec
ljmp
or
pop
xchg
or
add
pop
data16
repnz
mov
ds
mov
jmp
imul
ss
lods
push
punpckhbw
add
pusha
adc
stos
es
add
jno
jnp
mov
movsb
inc
lods
sbb
or
mulps
repz
dec
fistpll
push
or
iret
xchg
rclb
in
mov
lcall
inc
lock
xchg
push
xor
aam
mov
push
dec
incl
ficoms
jne
mov
push
pushl
jecxz
sub
jns
jg
fmull
add
cmp
sub
add
leave
fs
repnz
push
dec
sbb
jbe
jecxz
ljmp
mov
orl
loopne
ret
in
out
mov
in
or
cld
xchg
out
fistps
inc
push
mov
leave
fdivs
mov
mov
stos
sub
jae
push
pop
push
mov
xor
lods
cmp
xor
mov
ljmp
xchg
mov
insl
in
repz
add
jmp
push
pop
andb
xlat
pop
jge
shlb
sahf
cmpsl
xchg
popf
mov
int3
push
mov
jae
pop
mov
out
and
popa
push
xchg
shll
dec
ljmp
inc
mov
fidivl
into
gs
stos
cmp
adc
lds
inc
add
dec
stc
das
ljmp
mov
movsb
jle
dec
xor
push
jp
xchg
xor
cmp
pop
or
adc
pop
mov
add
mov
test
ljmp
cmp
mov
push
jbe
sbb
and
mov
fisubrs
popf
mov
mulb
jno
ror
sub
icebp
lods
xchg
lahf
or
cld
jecxz
xor
repz
sbb
shlb
scas
sahf
jb
jl
pusha
fstl
mov
cmpsb
push
cli
or
adc
and
shlb
cmp
mov
dec
insl
aaa
add
add
add
rol
jne
lea
push
cmp
and
adc
cmp
sub
test
xor
mov
mov
adc
xchg
int3
pop
jecxz
jnp
jp
cmpsb
fdivrl
adc
shll
subl
mov
out
pop
sbb
xor
int
lret
mov
rorb
add
xor
push
aad
cmp
lahf
push
mov
sbb
fistpll
mul
aas
or
shll
adc
into
add
addr16
ret
dec
sbb
dec
jg
jle
xchg
jge
jo
xchg
pop
cmc
in
lock
cltd
sub
js
xor
push
faddl
pop
mov
fisubs
add
mov
push
xchg
cs
pushf
add
sbb
movsl
cld
push
scas
dec
push
xor
dec
pop
cmc
mov
ja
inc
scas
lret
daa
pop
movsl
rcrl
mov
push
scas
push
dec
add
icebp
mov
test
mov
test
dec
pop
not
addl
jns
sbb
and
push
loope
pop
popf
cmp
mov
testb
int
sbb
jnp
sarb
shlb
cwtl
mov
sub
inc
mov
jl
stos
or
imul
aam
xlat
lods
jmp
int3
mov
xor
jp
test
lock
mov
fsubl
push
pop
and
mov
mov
outsl
add
mov
xor
ljmp
mov
dec
outsl
ja
jno
subl
mov
push
mov
test
cmc
nop
iret
cli
insl
xor
stos
pop
mov
mov
stos
inc
outsl
shrl
rcr
add
jae
lods
in
and
cmp
outsb
sahf
jg
pop
or
push
inc
add
push
push
push
pop
shl
ss
jl
testb
aam
aad
bound
pop
mov
xor
pop
insb
push
jae
dec
test
daa
shll
xor
ds
repz
dec
subl
pushf
mov
inc
jns
push
std
fists
test
decl
loop
push
jg
shl
jns
cltd
push
inc
leave
mov
shlb
lret
into
stc
or
push
cmp
and
or
in
xor
mov
or
dec
mov
fstl
sbb
cltd
sbb
ja
jmp
adc
add
jno
inc
or
xchg
stc
jecxz
mov
xor
into
mov
sbb
lcall
xchg
xchg
andl
or
popf
nop
and
out
mov
pushf
fbld
jo
rclb
dec
inc
adc
fcomp
scas
enter
push
jbe
movsb
push
mov
xchg
cmp
sahf
xchg
mov
jp
repnz
fcoms
pop
cli
stos
test
cltd
fidivrl
scas
mov
jp
and
das
sahf
pop
and
dec
mov
mov
add
and
cwtl
stos
scas
scas
lahf
cmpsb
inc
mov
push
pushf
inc
xor
lahf
movsb
fwait
movsl
xchg
sarb
inc
fists
sbb
scas
adc
mov
mov
inc
or
dec
jb
push
ss
inc
mov
loopne
pop
jbe
add
mov
int
jecxz
push
mov
imul
mov
adc
sub
les
insl
pop
lods
cmp
fstpt
out
inc
ljmp
inc
or
pop
ljmp
mov
aam
jb
lret
pop
mov
dec
jb
ljmp
pop
jb
scas
cs
jb
fdivs
inc
shrb
jge
out
adc
mov
out
lods
fcmovnu
ret
push
sbb
pop
sahf
lahf
xchg
imul
dec
in
sub
int
xor
pop
adcl
xor
fidivs
jnp
xor
cmc
push
xchg
jecxz
test
shrl
vcvtdq2ps
outsb
or
in
js
loopne
and
mov
cmp
mov
mov
ja
insb
push
cmpsb
nop
dec
mov
lods
jl
inc
xchg
bound
lods
lods
aaa
pop
mulb
add
sub
xor
sub
lea
sbbb
mov
sub
nop
movsb
mov
jl
mov
sub
lods
inc
into
inc
mov
adc
xchg
mov
sti
mov
hlt
ljmp
sub
and
fwait
pushf
ja
enter
and
lret
jnp
or
int
insl
inc
or
out
mov
cmp
frstor
cmpsl
iret
popa
aam
add
bound
stos
shrb
xchg
sbb
repz
mov
out
movsb
movsl
lds
and
loopne
xchg
push
cmp
mov
cs
mov
mov
outsb
xchg
fcmovnb
dec
cli
xchg
xchg
dec
pop
les
cmp
mov
and
jge
shrl
cmp
jmp
fdivl
push
movsl
and
cmpsl
std
movsl
daa
fstl
adc
addr16
scas
xor
dec
mov
pop
mov
call
hlt
pop
cmpxchg
pop
pop
push
mov
mov
jge
jnp
and
ljmp
faddp
pop
cmp
in
daa
cmc
bound
or
mov
cmpsb
mov
les
mov
jmp
rcrl
mov
mov
repnz
mov
xchg
sub
stos
inc
nop
scas
add
lods
pop
dec
push
adc
mov
shrl
scas
dec
lods
fcmovbe
push
movsb
stos
push
and
mov
xchg
fnstsw
movsb
gs
dec
cltd
fisubl
adc
inc
mov
insl
mov
mov
dec
mov
test
sbb
fistps
and
aas
ja
adc
jbe
cmp
in
xchg
lret
inc
xor
lret
stc
sbb
fsts
fimuls
lahf
int
cwtl
xor
out
pusha
into
fists
push
and
mov
cmp
fisttpll
xor
adc
sub
xor
inc
xchg
fidivrs
insl
xchg
shll
or
mov
stos
test
and
pop
hlt
mov
addr16
test
out
jmp
xlat
fsubrp
adc
ds
mulb
adc
xchg
js
ffreep
test
pusha
es
pop
sarb
das
mov
in
into
cmp
push
fdivr
sbbl
lods
lahf
or
fwait
xor
adc
sbb
fdivrp
sbb
enter
mov
inc
dec
dec
sbb
repz
fidivrs
dec
add
das
push
sti
xchg
je
jl
push
pop
sbb
pop
xor
inc
roll
andb
mov
xorl
and
loope
das
aam
pusha
out
repz
bound
jecxz
fisttpll
cld
push
hlt
pop
jmp
movsl
imul
xchg
pop
cmp
pop
mov
and
pop
inc
shlb
sub
mov
insb
xchg
or
jmp
or
inc
mov
sbb
dec
shlb
movsl
jl
pop
mov
pop
sbb
mov
mov
mov
mov
ret
cmpsb
in
fildll
fisttpl
aas
out
pop
cmovno
inc
je
nop
xor
mov
repnz
cmc
pop
icebp
cmp
xor
test
add
dec
fwait
pop
mov
mov
mov
inc
jo
in
aad
mov
pushf
and
push
scas
inc
inc
cmc
mov
xor
mov
adc
mov
cmc
int
cld
jns
hlt
inc
jb
cmp
lods
mov
rorl
ss
ja
ds
jmp
xchg
xchg
and
xchg
rol
out
rol
or
jnp
lock
xlat
sub
jno
stos
lods
repz
aam
cld
xchg
xchg
test
jle
sti
rolb
fs
fcom
in
lock
ja
shll
ds
jnp,pn
ds
jp
je
adc
jnp
inc
imul
inc
pop
add
lret
rorl
aas
xor
jnp
pop
aaa
sub
mov
inc
ret
lcall
or
fdivs
sub
hlt
inc
or
sbb
arpl
dec
in
in
or
sub
xchg
sub
push
fisubs
fildll
mov
xor
faddl
call
mov
pop
inc
fadds
push
std
adc
aas
jmp
push
sub
sbb
stc
sub
pusha
sti
pop
mov
mov
sarl
jbe
stos
sbb
rorl
sub
jle
inc
jg
and
push
pop
fimull
jb
xor
pop
inc
sub
dec
icebp
jae
xchg
sbb
sub
movsb
repnz
mov
roll
mov
hlt
notb
in
cmp
out
rorb
ss
lahf
out
in
push
dec
pop
pop
lret
test
xlat
xchg
mov
push
lock
nop
std
jb
push
scas
mov
in
iret
fwait
jne
sub
leave
ds
repz
mov
or
jns
lock
dec
inc
and
mov
push
clc
push
jp
test
movsl
pop
push
xchg
inc
dec
adc
aaa
dec
fisubs
add
pop
jo
movsb
movswl
xchg
adc
int
push
xchg
fwait
das
in
jl
inc
outsb
push
mov
mov
dec
bnd
pop
pop
jle
outsl
adc
lods
mov
sub
sub
sbb
aad
adc
pop
lds
out
popf
outsb
add
mov
xchg
and
pop
aas
fstpl
shll
fdivl
inc
jno
jle
push
and
loopne
out
out
pop
sub
sbb
and
mov
loop
pop
pushf
pusha
in
mov
int3
inc
insb
bswap
icebp
pop
dec
sub
xchg
cs
sbb
cmpsl
inc
idivb
add
insb
jae
loope
fstpl
adc
jno
movsl
std
ror
inc
fnsave
jecxz
mov
cmp
mov
sub
icebp
in
dec
fidivs
setl
cmpsl
arpl
fimuls
mov
xchg
lahf
enter
je
xchg
xor
push
insb
sahf
fnstcw
mov
aaa
loop
out
bound
bound
jnp,pn
mov
js
xor
push
jge
repnz
in
mov
movsl
inc
xor
pop
insb
push
inc
mov
push
mov
cmpsb
and
aad
pop
jmp
das
in
into
cmp
rorl
push
test
sahf
cmp
sahf
scas
inc
ja
fnstenv
mov
pop
bound
punpckhwd
and
xchg
lahf
dec
test
sbb
add
hlt
loop
and
daa
data16
mov
fwait
int3
mov
sub
test
icebp
lea
mov
cmp
sub
mov
sbb
inc
jb
das
movsb
push
push
insl
testl
xchg
arpl
inc
sarb
jg
pop
xor
pop
test
cmp
mov
das
orl
lahf
push
or
push
inc
cmpl
test
jne,pn
aas
mov
lcall
sub
push
xor
xchg
outsb
lock
push
push
iret
mov
jne
bound
cmp
pop
stc
mov
dec
sbb
pop
and
neg
and
cltd
popa
xorb
loope
popl
cmpsb
sub
fidivl
push
or
test
mov
cmp
xchg
rcrb
stos
mov
not
int
and
das
in
add
stc
loopne
lods
dec
mov
enter
cmp
fldcw
inc
idivl
xor
xor
mov
aam
bound
sub
js
fstpt
mov
xchg
loope
and
add
popf
push
push
test
or
cmc
shrb
ret
dec
cs
dec
sub
jmp
lock
scas
dec
aas
xchg
mov
mov
dec
ja
lret
ret
pusha
cmp
xor
andl
add
ffreep
mov
xor
fwait
shrl
mov
sahf
in
bound
fcoml
mov
mov
test
sbb
fdivs
xor
or
xor
push
inc
inc
int
nop
in
out
popf
cmp
xor
fisubs
scas
jmp
and
mov
cmpsb
insl
jnp
addr16
cmpb
rcr
loopne
lods
adc
xchg
sub
jl
mov
in
subb
inc
mov
xchg
xchg
pop
daa
mov
sbb
mov
repz
mov
nop
push
lea
dec
or
clc
jecxz
push
cmp
jmp
xor
stc
xchg
rorb
pusha
cmp
cmp
xchg
mov
dec
or
jmp
movsl
pop
lock
adc
pop
xchg
xchg
or
jl
mov
sub
sbb
scas
pop
mov
int3
nop
and
ror
or
jmp
push
test
popf
repnz
or
int
sbb
pop
xchg
fmuls
mov
fucomip
add
jecxz
and
sub
cmc
mov
aas
insl
out
lcall
jge
loope
dec
repnz
repz
xchg
xchg
sub
mov
hlt
shlb
stos
fs
lods
inc
push
movsl
pop
jl
mov
dec
pop
gs
push
cld
fldcw
cmpsl
test
mov
push
xchg
sbb
xor
sti
in
out
cld
ljmp
inc
and
push
add
jne
lds
fsubrs
xor
xor
scas
in
aaa
scas
hlt
ss
mov
inc
lds
arpl
out
je
aad
scas
imul
lods
in
push
pop
test
lahf
enter
mov
scas
add
sbb
cs
fstpt
pop
repz
and
jp
cmpsb
idivl
adc
add
pusha
mov
filds
xor
xchg
push
fcomps
out
xchg
add
cmpsl
adc
or
sub
push
xor
push
and
cli
les
imul
xor
orb
inc
or
xchg
jle
push
jae
mov
xor
jge
pop
into
cld
call
sub
inc
dec
or
in
cli
imul
xor
xor
lock
test
pusha
jmp
jnp,pt
sbb
xor
mov
push
test
popf
mov
dec
jnp
fcoms
faddp
mov
idiv
jmp
inc
push
mov
jg
fdiv
dec
push
xor
popf
jmp
std
shl
cmp
sbb
rclb
push
js
into
sbb
push
mov
push
mov
or
shrb
stc
fstpt
subl
outsb
js
or
ja
push
dec
push
dec
mov
xchg
and
je
jl
lret
out
mov
push
ror
push
insb
ficompl
lods
push
in
jl
idivb
inc
mov
sbb
cmp
pop
je
and
jecxz
arpl
clc
inc
sbb
daa
sub
mov
test
fnstsw
jg
jb
cld
lea
jl
idivl
push
stos
adc
fistpll
imull
mov
sbb
lcall
jae
mov
loopne
xor
stos
test
cmp
subb
call
jb
lods
adc
mov
cmp
lahf
loop
lods
mov
pop
and
inc
roll
dec
adc
pop
sub
faddp
mov
gs
cmpsl
mov
pop
lahf
mov
loope
sbb
clc
xor
hlt
addr16
push
adc
in
testl
and
mov
repnz
rolb
popf
mov
sbb
mov
cmc
mov
popa
fwait
les
mov
xlat
inc
rorl
notl
into
gs
sti
dec
adc
mov
or
mov
subl
and
addr16
jo
roll
repz
cmpsb
jae
mov
mov
enter
inc
int3
fistpl
pushf
sub
xor
jns
jecxz
out
or
sub
jecxz
mov
pop
sub
mov
pop
adc
sar
inc
fs
xchg
call
or
sub
adc
adc
and
dec
add
movsb
das
movsb
jno
cmp
iret
dec
repnz
imul
imulb
repnz
ret
cmp
les
popa
in
outsb
test
add
jecxz
mov
inc
mov
daa
fldenv
out
repz
enter
aam
cmp
inc
repz
cwtl
pusha
push
jmp
pop
jle
mov
cmp
dec
inc
xlat
in
hlt
fldenv
push
mov
int
loope
inc
dec
xchg
aad
repz
insl
adc
or
insb
in
cmp
out
std
adc
aaa
scas
inc
adc
xchg
sub
xchg
shrb
rorl
xor
fucomi
pop
xlat
xchg
cmp
mov
fldenv
mov
mov
inc
std
sahf
daa
out
mov
adc
lret
sub
cmc
sbb
fsts
rorl
pop
mov
mov
cmpsb
fsubs
in
out
push
inc
imul
inc
les
adc
insb
pusha
std
orb
fimull
nop
inc
and
xor
mov
xchg
cmp
cmp
ficoms
xor
mov
jge
shl
pop
xchg
lods
xor
inc
fimull
sub
ret
cmp
push
dec
pop
popa
pop
decl
mov
inc
iret
movsl
lea
and
mov
out
dec
mov
xlat
mov
mov
stc
and
sub
sbb
ds
in
mov
lret
or
push
cwtl
inc
push
test
movsl
jmp
jae
add
push
pop
mov
dec
and
sub
outsl
push
ss
push
or
fnstenv
and
in
ds
mov
mov
sbb
and
aas
xchg
std
xchg
gs
cltd
test
sbb
ret
adc
in
cmp
pop
lock
imull
mov
mov
rol
bound
inc
mov
or
sub
fwait
jp
sahf
or
outsl
ret
icebp
loopne
scas
iret
jge
lods
sub
in
out
and
scas
inc
sub
xor
jns
scas
in
hlt
lret
mov
pop
outsb
clc
sahf
and
cltd
mov
add
nop
ss
inc
inc
int
lret
jge
add
scas
sbb
aas
sub
clc
fcomip
imul
dec
pop
mov
dec
js
jo
movsl
adc
jp
in
outsb
scas
mov
xor
add
hlt
jns
ja
xor
mov
inc
inc
shl
aam
inc
xorb
hlt
popf
push
or
jbe
test
mov
xchg
dec
jae
and
xor
cltd
push
jns
leave
cmpsl
xor
pusha
pop
push
xchg
rep
pushf
fdivrs
stc
sub
pushf
mov
xor
xchg
cmp
fbstp
std
lcall
push
push
or
jmp
sub
xchg
pop
jp
and
inc
cmc
inc
and
or
xor
leave
push
gs
inc
cmp
shr
ss
cmc
jae
out
lretw
sub
mov
xchg
push
ljmp
stos
rcrl
push
jne
dec
xchg
pusha
cmp
or
cltd
inc
jnp
negb
std
fdivl
or
jg
addr16
std
data16
mov
cltd
mov
aad
xchg
inc
in
pop
in
imul
inc
mov
lods
repz
loope
test
dec
pop
mov
lret
adc
xchg
stos
push
ret
shlb
out
mov
xchg
fwait
add
cmp
xchg
scas
xchg
mov
or
jo
jns
mov
xor
cs
sub
or
mov
leave
push
mov
xlat
add
dec
repnz
and
sbb
mov
fs
aam
or
jbe
lret
out
jno
cwtl
movsl
inc
push
xor
daa
aaa
les
mov
xor
jmp
cld
mov
in
inc
fimull
stos
push
jge
aad
inc
sar
mov
int3
pop
add
ret
scas
mov
mov
sbb
ja
mov
lods
push
mov
clc
in
mov
lds
sub
jl
dec
adc
out
add
sub
dec
cs
push
xorl
cmpsb
xchg
je
imul
test
mov
nop
insl
xchg
xor
push
jp
sbb
jle
aaa
movl
aaa
inc
scas
mov
pushl
scas
ja
adc
das
insb
cmpsl
daa
js
leave
mov
xor
insb
ret
sub
call
add
push
in
add
push
xlat
mov
fiaddl
test
lods
jns
cld
aas
aad
xor
fdivl
stos
les
mov
out
sbb
or
not
cld
lret
cwtl
xlat
sti
jp
inc
pusha
clc
inc
dec
mov
mov
push
ficoms
out
or
popf
or
and
xacquire
cld
adc
add
jnp
mov
lret
sarl
dec
hlt
stc
sti
xchg
dec
dec
inc
mov
dec
ret
push
xor
arpl
jbe
add
movb
lret
addr16
sub
cmp
push
pop
push
sbb
out
sbb
cmp
insb
cs
rclb
insl
dec
bnd
sbb
mov
xor
adc
mov
xchg
ds
shll
mov
sbb
jne
sbb
cli
dec
popa
cmp
dec
fcmovne
jle
aaa
add
gs
pop
test
sbb
stc
lret
mov
stos
insl
fwait
pop
adc
mov
loope
in
cmp
cmp
jl
mov
push
gs
rolb
cld
popa
cmpsl
idiv
leave
lea
jb
popa
cld
or
sbb
cmpsb
sbb
dec
and
aam
sarb
or
inc
mov
xchg
cmc
inc
ret
xor
call
jle
jge
nop
push
fstl
rcrb
add
mov
arpl
test
mov
dec
rcl
dec
push
mov
sbb
mov
push
dec
out
inc
subb
lret
jge
scas
add
mov
or
xor
jbe
mov
mov
out
adc
enter
cli
popa
jo
scas
pop
sbb
aaa
push
push
pop
daa
mov
jmp
movsl
or
mov
in
xchg
xchg
cmp
shl
iret
arpl
or
jp
nop
rclb
outsb
sbb
les
adc
xor
xchg
push
inc
mov
or
in
push
mov
pop
testl
mov
sbb
scas
repnz
fistps
dec
lcall
imul
and
cmpsl
fdivrs
lcall
mov
add
mov
rcl
sbb
sbb
mov
xchg
and
xchg
pop
arpl
push
inc
cmp
imul
sbb
nop
movsb
or
jnp
pop
jne
pop
lcall
sbb
push
aam
xchg
mov
sbb
fdivrp
dec
inc
cwtl
mov
sahf
fwait
mov
daa
mov
inc
loopne
add
mov
sub
andb
inc
inc
mov
jl
dec
add
rorl
decb
in
cs
popf
or
popf
popa
jno
nop
cmpsb
jl
pusha
movsl
cmc
clc
ljmp
inc
cmp
scas
push
lods
loop
jno
push
bound
push
push
and
mov
jge
ret
xchg
jp
int3
pop
jne
mov
out
in
push
dec
sub
int3
pop
inc
adc
cwtl
shlb
inc
popa
cmp
pop
adc
imul
ds
mov
jnp
stc
push
xchg
test
xchg
clc
adc
mov
movsb
sar
jmp
aam
mov
bound
les
add
cmpsl
mov
mov
push
int3
jne
arpl
bound
sbb
or
add
cmp
and
inc
mov
mov
pop
int3
pop
loope
xchg
stos
stc
pop
and
jne
cltd
loop
inc
xchg
out
mov
mov
mov
fcomi
inc
dec
in
pusha
fistl
out
ficomps
rolb
push
pop
inc
loope
jecxz
loope
xchg
ss
aas
repnz
das
jns
xorb
ror
repz
popa
idivl
stos
jmp
outsl
mov
repz
test
or
xchg
cli
add
pop
add
cmp
mov
lret
jae
sbb
stc
rclb
dec
mov
imul
in
stos
sbbl
sbb
mov
dec
xchg
mov
in
or
or
mov
sub
sarb
loopne
movsb
jle
movsb
hlt
imul
inc
push
xchg
pop
fisubl
sbb
sbb
fisubs
arpl
filds
mov
movsl
inc
out
fldcw
sbb
ljmp
xor
inc
ja
adc
mov
out
dec
pop
mov
jns
je
imulb
pop
sbb
hlt
fwait
push
out
mov
dec
bound
sbb
lahf
arpl
jb
dec
sub
fidivrs
sbbb
pusha
jmp
lcall
dec
cltd
or
pop
scas
cmpsb
jp,pn
and
cmp
xor
mov
mov
lds
lds
movsb
cltd
xorl
icebp
fmull
sbb
add
ds
mov
stos
dec
sti
jmp
push
push
ret
pusha
orl
sbb
insl
in
cmpsb
sbb
mov
mov
lods
in
movsbl
push
lock
pop
jmp
in
jbe
xchg
xor
and
sti
or
es
mov
stos
ret
cmpsb
jo
enter
push
cltd
mov
xor
je
lock
leave
call
xor
push
packuswb
or
fmull
enter
inc
in
xchg
jecxz
mov
lret
in
aaa
adc
mov
lods
dec
in
jno
add
jecxz
bound
test
sbb
mov
mov
lods
pusha
push
popa
icebp
mov
jnp
pop
adc
or
subl
loope
inc
out
xchg
hlt
sbb
add
jecxz
aaa
outsl
xchg
push
pusha
xchg
sbb
dec
lss
or
test
xchg
push
cmpb
cmp
ret
ret
sub
xchg
insl
shlb
das
push
or
notb
rorb
sti
mov
in
mov
hlt
and
insl
outsb
repz
cmc
loop
imul
aaa
imul
lock
inc
adc
xchg
cld
js
or
dec
sti
repz
fsubrl
push
or
aas
inc
fildll
int
stos
out
loopne
inc
enter
aam
inc
in
inc
bound
mov
jns
adc
fdivrl
dec
push
adc
mov
aad
cmp
push
js
sbb
ret
enter
setle
or
sbb
insb
add
cwtl
shl
loopne
repz
stc
pop
inc
pop
add
mov
mov
sub
data16
xor
test
ret
outsl
scas
add
iret
push
popf
dec
push
mov
dec
add
xor
dec
mov
repz
cmp
push
jp
push
test
std
outsl
add
xor
or
fistpl
jo
jmp
inc
aas
pop
cmp
xor
mov
mov
iret
mov
stc
es
sbb
cli
mov
xchg
sahf
inc
or
int3
push
sub
cmp
fidivrs
daa
inc
popa
dec
mov
nop
push
in
loope
push
or
or
mov
rcll
lods
mov
adc
or
scas
in
add
rcll
push
inc
add
xor
xchg
cld
mov
add
mov
push
in
outsl
xchg
xchg
and
jle
mov
loopne
inc
sub
xchg
btc
test
mov
out
pop
jo
pop
xor
mov
decb
inc
mov
pop
leave
or
cli
lcall
cmpl
nop
scas
cmp
add
push
adc
sbbl
jno
int3
outsb
in
sub
lds
xchg
in
fs
pop
mov
les
mov
jge
jp
imul
add
icebp
cmpl
cmp
jo
rcr
lock
cmpb
icebp
or
fcoml
lcall
cmp
and
sub
sti
push
mov
in
pop
js
cmpl
lahf
cwtl
leave
push
and
xor
dec
mov
mov
das
imul
cmpsb
pusha
rolb
lcall
jp
ret
sbb
call
or
mov
jl
sbb
cmc
ss
lret
lock
xchg
sbb
scas
lods
inc
mov
jmp
mov
sub
stc
in
stc
fs
ljmp
push
add
mov
inc
mov
cmp
mov
xor
dec
je
adc
dec
push
adc
mov
inc
fimuls
push
mov
and
adc
iret
shl
aaa
sub
mov
cwtl
jnp
push
out
dec
js
testb
pop
jmp
rolb
popa
pop
cmp
orl
add
xor
ret
mov
in
in
push
lret
hlt
fistl
pop
xchg
dec
lahf
fildll
aad
pop
add
aad
push
sub
push
mov
xchg
sub
sub
outsb
push
and
fsts
mov
adc
xchg
add
shr
pop
jp
mov
mov
rorb
mov
dec
leave
or
add
mov
push
rorb
pop
and
cmpsb
ret
je
in
call
lods
repz
in
mov
inc
or
dec
cltd
push
ret
xchg
cwtl
add
jno
mov
xchg
out
or
leave
xlat
pop
test
xchg
js
xor
leave
push
adc
pop
test
push
aaa
aad
inc
and
orl
jb
add
imul
pop
ret
ret
sahf
adc
cmp
fidivl
std
test
push
in
xchg
std
ljmp
mov
add
xor
adc
sub
dec
jmp
push
daa
and
icebp
in
cli
out
mov
ljmp
jle
xchg
mov
jecxz
aam
mov
or
sarl
push
cwtl
push
add
cmp
repnz
lds
xchg
mov
vhaddpd
pushf
jecxz
jns
fbld
aad
ret
inc
mov
xchg
push
bound
push
adc
das
dec
xor
pop
popf
xchg
push
pop
push
mov
sbb
cmc
inc
xor
jne
ljmp
mov
test
inc
mov
fstpt
test
xchg
mov
int
or
testb
jge
andb
in
test
add
shlb
lret
push
xor
imul
cmp
into
mov
int3
sub
pop
dec
xchg
outsl
jno
dec
push
pop
add
les
pop
mov
ss
dec
pop
call
jge
les
sbb
sub
imul
inc
sub
stos
ja
ljmp
divb
fimull
fldcw
cltd
mov
nop
lods
add
aaa
sbb
add
dec
cmp
inc
and
push
loope
mov
rorb
sub
loope
jge
xor
mov
bound
and
adc
movsl
lret
dec
ljmp
mov
insl
push
andb
sahf
std
shl
mov
push
daa
aam
jne
mov
push
movb
push
lret
les
sbb
pop
inc
out
cli
push
xor
dec
outsb
movsb
fstpt
rcl
rolb
lret
stc
or
shll
cmp
mov
mov
jmp
sbb
cmp
js
pop
dec
mov
xor
leave
and
jbe
cmp
fistpll
inc
pop
pop
mov
mov
scas
popf
std
int3
sub
pop
cli
sub
in
fs
mov
popf
out
fisttpll
xor
xchg
push
mov
or
test
cmp
sbb
xchg
mov
nop
add
jl
stos
in
enter
xor
out
lods
cmp
mov
or
fdivl
lods
rcrl
push
jl
fiadds
cmpsl
lds
cmp
fdivrl
iret
mov
mov
out
xchg
lods
lock
mov
insl
and
mov
jbe
sub
push
sahf
cmp
jo
in
sbb
inc
bound
cmp
rol
pop
push
dec
mov
orl
mov
notb
adc
or
push
push
je
cmp
sub
push
pop
sbb
je
imul
mov
fidivrs
out
jl
ds
notl
sub
jl
cmpsb
and
out
mov
and
and
or
aas
adc
scas
and
stos
push
lods
dec
or
pop
jbe
clc
jl
pop
dec
or
test
cli
xchg
mov
push
sahf
sub
ds
dec
inc
pop
or
mov
or
les
cmp
push
ja
or
fsts
xor
adc
or
mov
push
out
mov
push
aaa
lret
loope
jo
ret
clc
pop
xchg
xchg
dec
adc
jns
bound
iret
mov
or
les
jge
add
push
gs
and
mov
lcall
insb
sti
subl
outsl
sub
inc
push
enter
mov
data16
and
or
mov
inc
sbbl
ret
sub
cli
out
stc
aaa
sbb
int3
sarb
test
cmp
data16
outsb
mov
cli
or
lock
pop
lods
jo
pop
jecxz
insl
movsl
insb
test
aam
pusha
mov
lds
jo
inc
and
xorb
andl
cmp
mov
push
leave
hlt
push
cmp
dec
jne
add
jmp
out
shlb
pop
push
loopne
popf
mov
mov
add
adc
in
inc
ljmp
into
xchg
shlb
push
scas
push
pop
hlt
inc
fimull
xor
inc
fs
push
icebp
jbe
push
jmp
cmpsb
pop
mov
jo
lcall
sahf
push
inc
push
repz
in
xchg
and
xor
int
inc
ljmp
cmp
into
dec
or
xor
push
cmpsl
sbb
jmp
sub
jmp
add
xor
xlat
xchg
xor
and
mov
push
mov
sbb
pop
shrb
add
int
pop
lahf
stos
mov
xor
in
test
sub
cmpb
popa
or
ds
mov
push
int3
frstor
jmp
push
push
test
xchg
xchg
push
xchg
dec
jbe
mov
cmp
mov
and
sahf
fst
mov
mov
iret
xor
insb
jne
cmp
popa
or
push
cltd
cmp
sbb
aad
shl
rcll
fisubrs
pop
xor
into
stc
mov
mov
pop
int3
xchg
pop
pop
fldcw
adc
and
in
iret
jmp
sub
sbb
xchg
mov
movsl
jecxz
sbbl
push
orw
and
mov
sbb
xchg
mov
lahf
fimuls
mov
xchg
cwtl
xlat
xchg
pop
jp
lret
xchg
xor
test
or
into
iret
pop
dec
ja
sub
add
popa
int3
aad
inc
sbb
adc
cwtl
add
and
mov
mov
and
ftst
cli
xchg
jne
xor
out
or
jbe
stos
addb
aad
gs
mov
mov
test
cmpsl
in
add
sub
inc
push
jnp
loopne
les
sbb
xor
mov
add
aad
shr
xor
jecxz
sti
ret
mov
xor
cmp
stos
dec
adc
imul
pop
xchg
xor
or
test
int3
cmpsl
testb
inc
cltd
stos
lret
push
test
sub
test
jl
es
stos
in
xor
push
arpl
aas
push
sub
ljmp
adc
add
pop
insb
jb
pop
sarb
push
ret
int3
aaa
je
add
mov
jno
push
mov
rclb
mov
test
jno
adc
push
or
pop
mov
sti
movaps
dec
fcompl
jb
imul
push
mov
mov
xchg
mov
outsb
mov
lahf
mov
dec
and
adc
insb
mov
xlat
fwait
wrmsr
sub
xor
push
mov
cmpsl
cmc
push
jmp
sub
mov
mov
mov
or
out
and
mov
xchg
jl
idivb
std
pushl
test
or
stc
gs
jmp
jl
cmpsl
popa
int
fwait
ljmp
inc
adc
and
adc
fs
je
or
movl
add
mov
out
mov
bound
movsl
fsubr
push
cmc
dec
inc
mov
jle
pusha
fisubs
int3
pop
stc
sub
push
sub
inc
repnz
in
xor
xchg
cmp
stos
aaa
sbb
pop
sbbl
jo
push
pop
push
mov
scas
or
outsl
ds
mov
inc
cmp
or
lcall
aad
cmpsb
cwtl
jno
inc
in
add
imul
pop
or
popa
rclb
mov
cmp
sub
hlt
and
mov
rcll
scas
stos
jecxz
sarb
pop
xchg
mov
or
add
jmp
mov
xchg
sub
dec
out
insl
pop
inc
sti
imul
mov
int
mov
rorl
inc
adc
add
clc
daa
cmc
cmpb
lods
adc
push
aad
hlt
call
jge
xor
sbb
sub
inc
inc
push
stos
cmpl
add
fcmovb
frstor
sbb
shrl
mov
popa
repz
jl
aad
push
xor
sbb
cmc
mov
adc
mov
adc
aaa
push
mov
stos
out
es
adc
dec
arpl
mov
mov
ljmp
sub
insb
inc
rcrb
push
mov
popf
ja
jge
xchg
or
mov
imul
jecxz
cmp
stos
and
and
in
push
orl
xchg
push
dec
mov
push
sti
fdivrl
xor
sahf
in
loopne
fs
sahf
push
sub
add
syscall
sub
iret
arpl
jg
mov
leave
add
sbb
int
aad
adc
gs
pop
cmp
shrb
rcr
movsl
xor
jecxz
mov
test
loop
nop
push
mov
add
jns
rorl
push
loop
cs
push
shlb
push
jb
loop
xlat
cwtl
pop
xorl
push
inc
adc
cmc
in
push
pop
stos
sub
jo
jbe
lds
sub
rcr
jae
pushf
das
mov
movsb
push
xchg
pushf
xchg
dec
scas
jnp
test
xchg
adc
jmp
cli
arpl
push
fstpl
mov
mov
pop
inc
cmp
mov
mov
lcall
pop
mov
push
cs
xlat
in
push
popf
hlt
mov
push
call
mov
ret
cmpl
and
push
je
sub
aas
adc
scas
adc
sbb
loop
pop
int3
mov
mov
add
xor
loop
mov
mov
sysenter
ljmp
dec
add
ss
mov
sub
pushf
dec
andl
jl
hlt
aad
mov
xchg
xor
sub
bound
sub
aad
arpl
or
jne
mov
mov
aaa
mov
adc
aad
mov
add
aas
mov
mov
mov
xchg
push
inc
fstps
iret
outsl
add
shl
addr16
scas
mov
dec
call
pushf
mov
fistpl
or
or
fsubrs
sub
sbb
dec
popf
and
lock
ss
mov
cmp
out
aad
out
and
ret
xlat
ret
mov
int
inc
add
imul
xchg
fldenv
inc
jnp
mov
out
test
jns
andl
lcall
into
iret
fdivrl
push
xbegin
insb
inc
adc
lahf
jnp
xor
popa
jp
out
in
movsb
cmp
inc
test
in
inc
push
sbb
sbb
jl
out
sub
jmp
xor
dec
mov
test
icebp
lahf
dec
sub
scas
out
xor
and
sbb
hlt
shrl
sarl
xchg
add
or
xor
lahf
jbe
fsubl
movsl
ficoms
rcrl
in
mov
jne
sub
jne
pop
mov
push
ret
and
fmull
icebp
ficomps
add
bound
or
inc
push
jb
dec
sahf
fdivr
ss
rcrb
xor
sbb
outsb
sub
lds
fnstcw
fildl
sahf
lcall
push
test
repnz
pusha
dec
jae
sub
dec
sbb
daa
adc
pop
aas
inc
inc
dec
jne
sub
lods
jl
hlt
addr16
pushf
cmp
imul
aam
dec
loop
lods
sub
inc
lods
into
jbe
xor
or
ja
inc
sub
sub
cmp
cmp
dec
repnz
mov
jo
pusha
mov
lods
dec
ss
sub
xor
and
in
mov
push
pop
and
dec
adc
cli
insl
iret
test
sub
mov
xchg
push
mov
inc
fiaddl
jp
rcrl
jne
or
mov
loopne
mov
dec
mov
sub
fisttpl
cmc
sbb
movsl
dec
xabort
xor
jle
jecxz
adc
es
sti
jecxz
sub
jp
mov
dec
lcall
mov
or
xor
push
xchg
dec
testl
cmp
data16
dec
inc
xchg
and
inc
fiaddl
xchg
scas
sub
mov
dec
cmpsl
dec
mov
sbb
stos
xchg
sub
gs
inc
xor
cltd
pop
imul
add
mov
jb
cmp
out
jo
inc
mov
fs
int3
jae
xchg
repnz
push
jne
stc
mov
lods
arpl
mov
adc
cli
mov
mov
xchg
mov
ja
add
aaa
sbb
repnz
xchg
nop
popw
aad
inc
aaa
lcall
test
mov
xchg
vorps
pop
fcom
or
std
das
pusha
fiaddl
std
xor
dec
cmp
or
ret
inc
jg
ret
or
inc
pop
sub
dec
inc
lods
jp
jg
cmpsl
push
int
fldcw
xchg
xchg
cmc
incb
call
pushf
ret
or
jo
cmc
aam
push
scas
dec
jmp
mov
lret
xor
lret
mov
fisubl
aam
sbb
enter
cltd
pop
loop
shlb
mov
loope
std
loop
push
pop
add
inc
int
testb
loope
and
repnz
sub
inc
inc
adcb
mov
sbb
mov
ljmp
addr16
ds
add
xor
cs
cmp
movsl
xchg
data16
repz
adc
fdivrl
xchg
push
sti
mov
adc
pop
lcall
mov
pop
inc
jbe
adc
jl
std
mov
jmp
mov
adc
icebp
outsl
cmc
xor
inc
mov
shlb
scas
add
mov
sarb
lock
test
push
mov
out
jno
out
arpl
jg
adc
push
xchg
rcll
lods
out
cmpsl
jmp
xchg
in
push
ret
sbb
scas
loope
sarl
adc
arpl
xor
and
xlat
and
stc
jp
loope
out
shl
idivb
ret
bound
test
out
and
cs
nop
adc
cmp
xchg
rclb
and
hlt
sub
outsb
jp
adc
push
and
dec
pushf
jl
enter
pop
jo
push
push
push
xchg
sub
into
inc
outsb
mov
popf
in
jp
fsubrl
gs
aad
xor
loope
mov
inc
sub
xor
loop
out
jbe
lret
pusha
lcall
gs
in
mov
and
in
insl
or
lahf
cmp
insl
mov
gs
int3
loopne
sbbb
inc
ja
mov
adc
dec
jne
outsl
jae
testb
daa
imul
out
scas
movsb
add
out
mov
cwtl
add
adc
call
xchg
mov
popf
and
xor
and
mov
mov
push
leave
adc
leave
lock
es
xchg
jle
jmp
imul
push
pop
rolb
leave
lcall
cmc
mov
das
loopne
sub
push
out
iret
cmp
cmp
xchg
out
inc
inc
call
xor
pusha
test
cwtl
loope
lret
and
imul
push
and
mov
xor
fildll
out
pop
ja
sub
stos
sub
sub
inc
int
push
sub
or
dec
arpl
xchg
mov
add
arpl
mov
addl
adc
mov
push
cmc
sbb
add
and
aad
cmp
fimuls
jns
mov
hlt
fbstp
int
test
push
sbb
dec
mov
cmp
lds
push
sbb
nop
rcrb
mov
xchg
xorb
inc
sar
aad
enter
inc
pop
and
test
adc
adc
sbb
pop
push
cmp
push
add
mov
pop
jl
in
push
dec
pop
or
dec
fisttpl
test
jnp
jae
les
data16
mov
jb
pop
adc
pop
ss
jg
or
test
mov
out
jbe
xchg
xor
xchg
out
ret
add
jb
mov
iret
outsl
xor
cs
jmp
mov
call
ja
pop
scas
or
movsl
cmpl
dec
inc
xor
fidivs
xlat
cmp
outsb
sub
jo
loopne
xchg
mov
mov
or
pause
data16
sub
push
in
into
aaa
daa
adc
jmp
mov
lea
fisubl
repnz
bound
mov
in
outsb
bound
aas
aam
rcrl
int
xor
push
loopne
push
xchg
daa
outsb
ljmp
in
out
enter
in
mov
jg
dec
push
sub
push
xor
lods
xchg
inc
out
cmp
add
es
fcmovb
push
div
adc
clc
adc
jecxz
out
stos
jo
xor
xlat
mov
or
pop
lock
add
add
jns
ljmp
rcrb
and
jb
push
push
sbb
and
lret
fdivs
mov
push
and
sbb
bound
loope
inc
lahf
ljmp
mov
pop
test
mov
call
fcoms
fdivs
dec
jno
and
test
add
jnp
mov
dec
mov
mov
mov
dec
lock
mov
arpl
jl
pop
adc
shl
je
lret
pushf
xlat
ret
pop
dec
test
adc
cltd
pop
jecxz
lds
cmpb
adc
icebp
mov
fcmove
xor
andl
roll
bound
push
inc
test
lcall
addr16
into
test
or
xchg
enter
jno
xchg
test
add
bound
xlat
ret
mov
loop
push
movsl
cmpsb
cli
jl
mov
add
mov
push
out
cmpsl
sbb
push
and
loopne
jmp
popa
jl
das
mov
push
jo
imul
add
xchg
pop
ds
js
repz
pop
xor
dec
mov
movsb
cmp
add
jno
fidivrl
mov
repz
notl
and
pop
pop
iret
loop
addr16
xor
mov
loopne
leave
xchg
xor
out
push
push
mov
and
mov
sbb
lock
push
cmpsb
out
negl
popa
lds
aas
push
fdivl
je
std
add
mov
xchg
push
cli
addb
pusha
inc
aaa
iret
icebp
scas
jns
dec
push
mov
arpl
ja
arpl
jb
mov
repz
sub
push
scas
loop
ja
cmp
test
jge
insb
cmp
inc
lods
jbe
or
insl
out
es
incb
xchg
xchg
inc
sub
imul
mov
out
std
out
push
sbb
cld
roll
shl
or
mov
loope
test
lcall
adcb
sar
jo
jp
dec
outsb
push
or
in
loop
js
fidivl
cmc
shlb
movaps
add
pop
mov
mov
mov
push
or
lock
insl
pop
adc
push
js
arpl
lods
iret
stc
call
mov
cwtl
mov
pop
lret
rorb
sbb
push
mov
sub
dec
push
jecxz
rcrb
call
sarb
sbb
pop
jecxz
pop
mov
dec
pop
je
mov
fnstcw
sub
jo
pop
insl
xlat
mov
pop
inc
pop
idivl
dec
mov
mov
stos
jb
dec
ret
mov
mov
jecxz
xor
filds
mov
cli
xor
out
lds
jbe
xor
and
sar
mov
out
adcb
popf
hlt
push
push
dec
shrl
mov
ret
dec
pop
mov
mov
mov
loop
rcrw
fsubr
outsl
loop
pop
ja
shrb
pop
sbb
push
mov
push
jmp
jae
addr16
call
and
out
or
xchg
js
push
popa
sbb
fnstsw
add
dec
adc
ret
jmp
mov
repz
sub
or
out
mov
cmp
push
and
pop
lods
loope
movsb
out
insl
push
dec
cmp
roll
sub
nop
add
xchg
sahf
mov
dec
cmp
fs
lock
shlb
aas
adc
push
xchg
mov
mov
mov
push
lods
mov
sbb
or
jle
xor
fcom
or
mov
pop
sub
mov
aam
cmc
stos
test
lods
out
les
lds
add
add
addr16
mov
xchg
leave
scas
imul
stos
inc
outsl
sbb
mov
mov
mov
fisubrl
dec
inc
mov
scas
jnp
mov
inc
je
add
mov
bound
lods
out
push
mov
movsb
loop
push
or
fcmovne
pop
das
pop
sub
addl
sbb
mov
jg
sbb
aaa
popa
push
adc
sbbl
leave
pop
sub
xchg
push
roll
sub
cmovp
pop
sub
jne
push
push
scas
inc
imul
ds
mov
xorl
imul
inc
jns
pop
cmp
insb
and
and
push
adc
cmp
test
adc
pop
xor
imul
imul
mov
mov
addb
addr16
xor
sahf
imul
ss
xor
xchg
pusha
jge
xor
xor
mov
aam
cmpb
test
icebp
insl
adc
pop
mov
mov
inc
je
pop
in
fwait
and
jl
push
in
add
ja
push
rolb
sbb
xcrypt-ctr
cmpsl
fistpll
mov
or
les
aas
adc
pop
jno
xchg
in
sub
push
cli
mov
inc
js
mov
and
xor
mov
cmpsb
xor
xor
test
ret
sub
sub
mov
push
out
mov
mov
mov
dec
in
cli
imul
and
xor
jno
cmp
xor
popf
cmpb
cmc
xchg
aas
mov
sub
pop
sbb
sti
lods
or
adc
mov
jno
pop
mov
bnd
sbb
sbb
and
xchg
gs
rclb
or
push
adc
jne
repnz
stos
mov
and
in
test
out
frstor
and
fs
and
repz
jp
sub
push
out
jae
cmovg
jge
cmpl
ss
insb
ror
loopne
cli
cld
test
cld
sub
xor
mov
outsb
jne
movsl
bound
lret
pushf
cmp
scas
fs
test
xchg
aaa
mov
and
push
adc
push
dec
lcall
mov
outsl
push
sbb
add
mov
pop
jmp
mov
hlt
mov
shll
sub
sub
sbb
push
mov
push
fwait
inc
sub
mov
or
clc
jecxz
jne
sub
dec
pop
test
mov
sub
mov
lods
incb
jp
mov
daa
inc
xor
inc
sub
clc
js
xor
fcomps
jnp
aam
pusha
leave
outsl
lret
aad
sti
daa
sub
mov
and
sbb
mov
in
and
jmp
jg
ss
xor
add
mov
cmpl
push
jp
xchg
push
test
sub
in
push
adc
scas
rcrl
mov
test
mov
pop
in
cmp
mov
jnp
std
dec
out
pop
push
cmp
cmp
lea
and
jns
cmc
out
icebp
paddw
daa
cltd
aaa
lcall
inc
xor
pop
out
adcb
call
iret
jge
add
pandn
xor
jp
sub
fmull
mov
popf
nop
xor
loope
cmp
aas
in
cmpsb
pop
mov
mov
xor
dec
dec
push
orb
or
push
aad
into
xchg
jle
jl
mov
cld
into
dec
sub
pop
mov
inc
jno
push
repz
sarl
shlb
inc
cmp
hlt
adc
addr16
pop
sub
sarl
mov
test
add
xor
loop
xchg
push
pusha
push
xchg
out
xor
out
add
gs
lods
in
sub
sub
rcll
adc
mov
test
ret
dec
std
sub
fistl
popa
cmpsb
dec
inc
dec
lods
lds
daa
lret
arpl
inc
mov
mov
dec
pushf
inc
pop
addl
xchg
fs
push
mov
cmpsl
stos
push
and
push
pop
mov
mov
mov
xchg
pop
mov
and
or
movaps
push
mov
je
int
int
dec
mov
add
jg
mov
mov
mov
int3
sbb
mov
insb
imul
adc
push
je
pop
xor
mov
xor
icebp
sbb
fwait
mov
add
rcr
mov
aad
or
inc
in
pop
in
addr16
mov
loop
sbb
mov
fsubl
mov
cmp
or
cmpb
mov
imul
jcxz
jmp
ret
enter
inc
adc
lahf
scas
mov
movsl
xchg
hlt
push
sub
mov
aad
ret
lock
dec
js
in
xor
iret
ror
in
pop
and
pop
dec
loop
mov
inc
cmp
pushf
push
push
inc
mov
sbb
mov
jge
cs
cmp
sbb
addr16
iret
cwtl
cwtl
in
lods
aad
enter
cmc
pop
leave
cmp
das
scas
ror
jl
adc
adc
sub
xor
cli
jno
das
scas
mov
inc
push
ret
notl
fstpt
icebp
in
inc
mov
sbb
lret
mov
add
mov
jo
push
sub
stos
mov
xchg
pinsrw
push
lahf
enter
xor
in
jbe
jae
lds
lret
cld
jae
lock
daa
movsl
xchg
nop
out
sub
adcb
cmp
mov
insl
outsb
fsubrs
loope
in
mov
out
add
sbb
mov
xor
scas
lcall
andl
pop
fildll
fcoml
cmp
sub
dec
adcb
mov
mov
mov
cmpsb
dec
push
pusha
or
shll
outsl
inc
mov
insl
clc
sbb
ret
sti
dec
mov
into
aaa
sbb
lcall
dec
lcall
xor
aas
mov
inc
inc
jmp
inc
pushf
push
mov
lea
lock
sub
xor
push
sbb
ret
push
xorb
loopne
ja
popa
aad
adc
push
mov
ljmp
mov
lret
divb
sbb
mov
pop
xchg
push
ja
dec
call
fs
cmp
mov
sbb
lods
adc
je
sbb
jo
mov
cmp
out
inc
pop
pop
push
aaa
mov
leave
adc
ret
nop
out
es
adc
mov
xchg
pop
daa
lds
into
dec
outsl
adc
pop
out
lea
lret
lock
clc
mov
insl
pop
sub
inc
fiadds
idiv
mov
loope
push
inc
xchg
jne
ds
das
clc
dec
mov
xchg
js
and
out
cmp
adc
inc
jo
scas
push
and
fiaddl
into
outsl
inc
adc
jb
push
add
xchg
dec
xor
inc
jmp
jno
xchg
add
jmp
ffreep
inc
std
fsubrs
adc
and
rorl
mov
xchg
or
cmp
mov
sti
aaa
imul
out
inc
ficomps
or
sar
decb
or
js
int3
shlb
sbb
int
into
fbstp
jo
cs
cs
imul
dec
int
popa
out
mov
xchg
shrb
fsubs
js
ret
mov
movsl
cltd
lods
mov
sarb
mov
mov
sbb
pushl
popa
inc
lahf
and
daa
aad
pushf
shll
adc
out
inc
add
mov
arpl
mov
ret
addr16
and
mov
lods
ret
mov
or
jmp
stc
adc
push
ret
pop
pushf
bound
js
cmp
inc
out
pop
mov
notb
mov
add
test
sub
fbstp
icebp
rcll
aaa
xor
mov
loopne
rol
and
xchg
mov
jb
fst
orl
and
gs
xor
aam
mov
call
mov
and
idivl
inc
adc
pop
mov
xor
mov
jb
in
mov
mov
jns
mov
ja
in
int3
fsubs
jo
mov
lret
push
push
in
xor
cmc
mov
jbe
push
push
aaa
or
repnz
xchg
cmp
inc
adc
or
jno
jns
mov
or
mov
hlt
nop
sbb
out
lock
int
mov
push
jne
and
push
adc
mov
push
ljmp
xchg
bswap
test
dec
pop
mov
imul
rorl
lods
push
and
cmp
dec
and
repnz
mov
cld
mov
lret
xchg
xor
es
incb
dec
push
mov
cs
jne
mov
push
fists
fdivrl
in
xor
jg
addl
jecxz
xlat
stos
mov
hlt
xlat
sub
aad
hlt
cmp
jp
xor
xchg
dec
test
or
fcoms
xchg
paddsb
fcmovne
cmpsl
sub
push
addr16
mov
or
push
stos
aaa
sahf
mov
xchg
jecxz
sahf
push
mov
fmuls
mov
clc
cmp
dec
aam
sbb
jg
inc
test
mov
sub
push
adc
js
scas
lret
mov
and
aas
xor
pop
push
nop
test
inc
aad
push
fdivrl
mov
hlt
out
into
xor
mov
sub
add
mov
xchg
fidivs
aas
push
mov
push
push
xchg
cmp
fs
inc
or
and
sub
fsubrs
xchg
jns
subl
js
jp
dec
sarl
push
cld
flds
cltd
jno
test
cmpsl
hlt
movsl
xor
lods
enter
push
mov
cmp
inc
inc
push
aad
jl
or
stos
fmull
out
xchg
in
push
push
je
pop
call
adc
mov
push
xchg
and
movl
sbb
push
xchg
or
scas
inc
inc
jge
rolb
scas
int
and
popf
mov
psrad
adc
jns
lock
dec
movsb
fadds
mull
icebp
fildl
paddsb
xor
push
push
int3
jb
ja
in
mov
inc
out
test
out
movsl
sahf
xchg
pop
push
or
mov
pop
sarl
dec
xorl
sahf
mov
dec
adc
je
ljmp
loopne
and
mov
imul
aam
decl
pop
or
mov
xchg
sub
ficompl
std
fsub
scas
push
pop
mov
or
fwait
ja
adc
enter
inc
mov
fs
sbb
outsb
mov
mov
das
sbb
in
lret
fsubr
jp
cmp
sub
imul
sarb
lret
int3
inc
lds
ret
out
movsl
dec
mov
fidivrs
ljmp
push
ds
xchg
rclb
mov
xlat
pop
or
rorl
adc
outsl
pop
cs
pop
xchg
movsb
call
mov
lods
jne
scas
lcall
ja
repz
cmp
cmp
inc
pop
xchg
and
sbb
into
rcll
subb
xlat
pop
test
pop
cmpl
enter
cmp
xor
arpl
xchg
inc
jno
xchg
mov
cmc
aad
mov
pop
mov
stc
pop
aam
jmp
xor
push
in
into
pop
ret
mov
xchg
xchg
in
icebp
std
lret
ret
and
lods
sub
or
cmp
aam
pop
dec
lods
mov
or
lcall
sub
loope
nop
cmp
out
outsl
lods
lds
mov
jae
mov
jmp
inc
das
ds
aad
mov
push
mov
pushf
mov
sbb
sub
xchg
jae
sub
xor
xor
push
mov
jecxz
jge
and
xchg
aaa
pop
sub
push
aam
pop
xor
aam
mov
nop
out
mov
jbe
and
and
lret
or
mov
inc
rorl
xor
ss
in
aas
es
lcall
mov
pop
mov
or
inc
outsb
sbbb
imul
icebp
add
repnz
lcall
fisubrl
iret
cli
fsubs
fistpl
push
sbb
push
insb
sub
lahf
jle
jle
icebp
xchg
clc
cmp
pop
outsl
mov
dec
les
mov
dec
adc
cli
jle
out
mov
insb
cmp
adc
sahf
inc
in
rol
push
psrad
jne
jnp
daa
pop
hlt
stos
dec
repnz
inc
movsb
daa
aad
pusha
iret
mov
cltd
push
aad
ss
mov
pop
adc
xchg
mov
push
and
fs
sahf
outsl
bound
adc
mov
or
mov
jmp
ja
pusha
mov
pushf
scas
push
lods
pop
push
jo
stos
jg
int
mov
imul
sahf
sub
add
sbb
shr
cmc
inc
imul
jbe
cmp
jns
inc
jmp
js
inc
repz
add
inc
mov
roll
mulb
rol
pop
xchg
data16
repz
lods
jle
popa
inc
jp
mov
lahf
jne
sbb
das
mov
cmpsl
dec
cmpsl
arpl
dec
inc
lods
push
int3
inc
rcl
mov
dec
mov
and
mov
int
popf
fidivrl
std
dec
lcall
mov
jnp
in
xorb
and
pop
adc
mov
jo
push
adc
add
gs
sti
add
lds
test
std
sub
mov
push
inc
cmp
jae
push
adc
cmp
mov
jmp
out
cmc
pusha
cmp
inc
push
mov
ds
add
sub
mov
jmp
ret
test
inc
fs
scas
mov
add
popa
sahf
fs
popf
jge
xchg
inc
xchg
add
std
mov
ljmp
push
in
mov
lods
jg
xchg
nop
scas
add
out
xchg
js
enter
jns
jo
inc
rolb
mov
push
popa
ljmp
stc
dec
out
add
xor
fucomi
cmpsl
pop
in
sub
sahf
cmc
mov
or
dec
andb
xchg
mov
ljmp
push
xorb
sahf
or
dec
test
sbb
sub
ret
sti
clc
loope
pusha
mov
cli
dec
ss
xchg
mov
rclb
push
cmpl
stos
xchg
xchg
hlt
test
mov
int
stc
outsb
lds
hlt
xchg
mov
out
cwtl
cmpsb
xorb
test
pop
aaa
pop
mov
sub
out
push
pop
adc
sub
nop
jg
lret
arpl
pop
in
bound
or
xor
jp
je
push
popa
sub
adc
push
or
fimull
repz
mov
push
push
xorl
lods
cmpsl
mov
adc
div
xchg
pop
mov
scas
xchg
xchg
subb
mov
pop
mov
data16
or
scas
dec
es
push
leave
nop
pusha
je
shlb
fwait
push
add
push
jmp
repnz
mov
in
inc
pop
stos
out
jmp
push
out
adc
mov
mov
add
iret
fistpl
mov
bound
ss
ret
test
addr16
sarb
sahf
imull
inc
fs
push
neg
imul
mov
into
fchs
repnz
int
loop
sub
dec
add
gs
insb
xchg
mov
mov
mov
push
lcall
add
pop
cmp
or
xchg
ds
js
xor
mov
rorl
or
sarb
das
mov
test
loopne
ds
cmp
ss
add
jmp
jp
and
shll
js
or
dec
pusha
mov
popl
out
mov
xchg
pop
pop
fdivrl
adc
test
negl
test
inc
pop
ret
xor
cmp
jg
ret
cmpsl
insl
ja
addr16
ret
inc
bound
push
sub
leave
mov
jmp
inc
lretw
push
xchg
imul
sti
lods
pusha
pushf
ret
imul
pop
inc
out
lcall
mov
pop
push
adc
and
push
or
jmp
jg
cwtl
xor
fmull
in
call
cmpb
push
or
pushl
les
or
popa
outsb
cmp
cltd
mov
xor
pop
xchg
jno
mov
mov
dec
push
mov
pop
pop
dec
adc
or
cwtl
cli
pusha
div
out
push
imul
or
hlt
pop
dec
mov
mov
repnz
push
xchg
sbb
stos
scas
test
ret
cltd
jle
jg
jg
test
in
push
add
dec
mov
mov
cs
lret
repz
adc
jno
or
adc
shlb
decl
push
xchg
addr16
adc
clc
nop
push
leave
int
dec
push
xchg
std
jae
fxam
inc
repnz
and
fistpl
mov
dec
ficoml
movsb
xor
mov
pushf
gs
insb
or
movsl
xchg
dec
daa
push
and
jb
and
push
test
fmull
das
lcall
jnp
outsb
ja
or
ffree
add
sbb
push
daa
mov
sub
xlat
enter
lds
jb
push
dec
out
lods
pop
xor
push
data16
clc
sub
push
test
mov
xchg
mov
sub
dec
ret
ret
cltd
adc
aas
jmp
stos
sbb
fnstsw
jmp
mov
icebp
hlt
sbb
fldenv
xchg
inc
add
sub
add
push
cmpsl
pop
mov
out
int3
adc
or
pop
mov
incb
xchg
test
cmp
negl
inc
cmpsl
xor
aam
pusha
rcrl
sub
xchg
outsl
ljmp
add
push
adc
jmp
js
jb
mov
cmpxchg
into
sbb
add
inc
iret
out
shrb
popa
mov
clc
loop
push
jecxz
fldcw
jmp
mov
in
xchg
mov
fnstcw
ss
test
ljmp
and
sbb
push
mov
mov
or
movsb
fidivs
daa
outsb
cltd
ljmp
sub
xor
lods
stos
xlat
sbb
int
pushf
popl
les
mull
jns
lods
mov
fdivrp
fsubrs
and
adc
scas
aam
jmp
lock
arpl
inc
inc
les
adc
insl
insb
int3
mov
ja
stc
clc
shrl
xchg
jne
or
cld
in
pusha
aas
in
and
shlb
bound
ljmp
pusha
int3
dec
jecxz
cmp
dec
jnp
push
rcll
pop
fidivrs
inc
std
jp
data16
xor
aad
aas
lds
xor
cmc
or
shrb
cmpsl
sub
and
pop
js
pop
lock
fisttps
pop
nop
cs
movsl
std
sbb
js
push
fwait
add
mov
add
outsb
aad
jp
and
cwtl
sti
loop
leave
xor
mov
inc
test
out
mov
sbb
lds
push
int
mov
jb
iret
xor
call
mov
inc
orb
je
cmp
pop
stos
cmp
adc
es
xchg
sub
dec
pop
lds
cmc
cmp
jecxz
stos
in
ficoms
push
stc
out
sbb
outsb
shl
lods
or
in
jle
dec
out
aas
add
or
sbb
add
aaa
jo
aas
addl
dec
inc
addr16
push
xchg
outsl
sbb
pusha
lahf
xchg
andl
stos
pop
and
sahf
iret
incl
adc
fistps
xchg
fcmovnu
stos
and
dec
mov
cmc
inc
adc
mov
lcall
mov
repz
icebp
cmpsb
js
mov
push
pop
lock
pop
test
fstpt
test
sub
push
mov
adc
and
xchg
fcoms
pop
add
movsb
xchg
mov
iret
call
pop
pop
int
out
push
push
fiadds
int
jge
shl
jo
daa
add
std
ret
dec
mov
imul
mov
add
push
int
push
lret
cltd
mov
shll
and
mov
mov
pushl
fsubp
mov
ret
xchg
clc
mov
cmpsb
push
out
ret
inc
insl
jmp
or
adc
cmp
pop
aaa
js
or
push
pop
scas
cmc
aad
inc
cmpsb
in
rol
mov
cmp
push
xchg
xor
imul
lock
sub
push
jo
xor
rol
sub
inc
pop
mov
sti
int3
pop
push
xor
xchg
pop
jg
inc
aaa
loopne
jg
cmpsb
dec
push
insb
cmp
mov
pop
push
push
outsb
pusha
adcl
filds
pop
jmp
and
in
pop
cmpsl
nop
mov
push
or
xlat
and
dec
repz
push
mov
fwait
call
loopne
xor
inc
in
lods
mov
fs
xor
add
mov
dec
inc
dec
pushf
movsb
jne
lret
icebp
adc
addr16
ftst
mov
data16
jbe
call
adc
pop
mov
movsb
jmp
cmp
aad
lret
inc
add
mov
movsb
jmp
dec
pop
pop
je
mov
enter
xor
mov
inc
ret
mov
sbb
inc
aad
loopne
popa
xor
stos
cwtl
ja
clc
aaa
mov
add
fsubrs
cmc
sar
pop
inc
lret
mov
ret
dec
pop
xchg
jge
loop
push
pop
out
push
addr16
fcmovb
stos
push
nopl
sub
aas
jl
pop
daa
xchg
cmp
dec
pop
mov
mov
mov
leave
pop
inc
dec
repnz
roll
repnz
mov
lret
and
mov
test
fscale
out
cmp
dec
add
push
dec
add
mov
stos
cmpsl
insb
stos
nop
and
and
mov
pop
ret
xor
sbbb
mov
idivb
mov
lds
mov
push
add
repnz
dec
push
fists
hlt
sub
ss
in
dec
int
mov
pop
pop
xor
bound
stos
repnz
pop
mov
lcall
jns
add
fistl
mov
arpl
and
cld
cli
cmp
jle
hlt
add
add
outsl
cmpl
addb
jecxz
das
push
movsb
adc
mov
mov
arpl
sbb
stos
sub
xchg
hlt
into
push
loopne
loop
inc
xor
push
mov
in
pminub
add
int
or
mov
xlat
fwait
cmp
into
fs
fldenv
pop
inc
and
mov
loop
lea
mov
dec
into
cmp
fcoms
out
popa
push
mov
ds
xor
loope
mov
jge
adc
mov
call
xchg
sbb
jmp
mov
dec
orl
or
outsl
test
mov
enter
push
mov
out
pop
xlat
test
mov
mov
rol
dec
adc
lds
and
push
clc
in
rorb
or
pop
fldcw
sub
jns
aad
mov
jns
mov
icebp
iret
and
add
popf
sbb
lock
mov
std
jmp
in
pop
and
std
lcall
adc
aam
or
mull
insl
test
inc
lret
sbb
fildl
add
jae
dec
testl
cmp
movsb
jmp
mov
xchg
jno
pop
call
jge
pop
push
xchg
out
movsb
sbb
loope
cwtl
aam
or
cmp
fidivs
cmp
mov
add
mov
sbb
push
xchg
pop
movb
iret
ret
mov
or
fcmovnu
sub
pop
cs
dec
sbb
lcall
bound
pop
add
in
and
loop
dec
inc
out
mov
repnz
dec
jecxz
into
loop
pop
push
mov
mov
filds
test
xor
mov
ret
lods
lea
icebp
push
out
cmp
mov
pop
pop
jno
and
jmp
push
jmp
push
lret
mov
mov
mov
jecxz
inc
bound
inc
jo
sub
jne
xchg
pushf
rolb
shl
iret
hlt
repnz
sbb
in
sbb
adc
test
sahf
addl
test
push
arpl
or
sbb
rolb
inc
xchg
xchg
in
into
add
ljmp
fnsave
lea
imul
sbb
cld
data16
push
shlb
and
pop
or
fsubr
das
repz
lret
jecxz
adc
loopne
outsl
push
aas
push
inc
adc
test
push
lret
cmp
sbb
adc
jno
imul
lock
push
scas
push
mov
xchg
int3
std
jecxz
rol
push
and
loopne
mov
inc
shll
adc
fstpt
or
mov
mov
cmp
add
mov
mov
xor
and
ficoml
hlt
ja
ss
in
and
xchg
sub
add
fisttpll
fisubrs
lock
pushf
jnp
fstpl
ds
scas
xor
jne
in
xchg
imul
inc
inc
dec
xchg
jae
lds
sbb
mov
stos
fdivrl
insb
pop
out
fbld
mov
mov
and
out
lock
mov
sbb
fidivl
aam
js
fldcw
cmpsb
jne
jb
and
dec
xchg
jl
test
loop
xchg
jnp
out
lahf
pop
stos
cmp
repz
fisttps
je
test
repz
dec
arpl
xlat
mov
mov
and
lret
pop
xchg
into
jnp
daa
les
or
pop
push
cwtl
sub
inc
aam
jge
xlat
mov
and
adc
scas
pop
cmc
sub
and
xchg
into
out
xor
xor
push
xchg
aaa
adc
inc
jle
cmp
push
ret
jnp
or
cmc
popf
ja
mov
or
sbb
mov
inc
jbe
bound
mov
cmp
pop
cltd
inc
mov
xchg
jmp
or
out
dec
jbe
test
adc
outsl
jp
out
icebp
in
pop
out
push
rorb
or
pop
add
jns
cmp
and
xor
lds
js
and
pop
or
and
pushf
adcb
iret
aaa
insl
add
inc
adc
icebp
aas
add
arpl
leave
iret
push
cmp
dec
mov
xchg
mov
sub
imul
into
jno
adc
loop
cmpsb
pop
mov
lret
jno
fsubs
cmp
popf
pushf
xor
mov
pop
pop
mov
mov
add
shr
mov
in
into
mov
stos
inc
pop
nop
xchg
out
push
sarb
cltd
pop
sahf
in
mov
mov
xchg
xor
jns
out
mov
mov
orb
aaa
sbb
rcll
push
into
sub
test
sbb
rorl
test
add
in
and
sub
mov
rcrb
adc
adc
fisubl
cmpsl
cmpsl
aas
xchg
jb
sti
das
sub
jmp
dec
xlat
adc
sbb
aad
test
fwait
into
add
jecxz
jnp
subl
add
rcrl
out
scas
in
out
hlt
mov
cmp
rol
adc
insb
jmp
imul
test
ss
sarl
popa
insl
movsl
sarl
xor
dec
xchg
add
pop
push
pop
in
fmull
shl
mov
filds
ficoml
test
push
loope
scas
std
mov
adc
push
jecxz
push
mov
sub
in
or
cs
cmp
mov
cmp
cwtl
xor
arpl
pop
out
idivl
xchg
push
push
rol
cwtl
pop
cmp
cmp
xchg
sub
mov
repz
ljmp
push
fs
cmpsb
adc
or
xchg
popa
add
je
out
pop
or
daa
add
fcmovnb
inc
lahf
into
inc
sub
pusha
ret
adc
jno
dec
inc
sbb
aas
scas
add
pusha
adcl
jno
repnz
jecxz
pop
xor
testb
xor
add
dec
bound
aam
cld
or
outsb
or
lret
fwait
icebp
sub
lcall
sti
xchg
xor
outsb
push
cmp
in
cwtl
push
mov
je
jp
push
mov
cmc
dec
mov
insb
fcmovnu
inc
imul
sbb
cmp
xchg
mov
jo
ljmp
scas
imul
icebp
xchg
sbb
call
xchg
cmc
lret
adc
jg
adc
mov
lods
outsl
sub
icebp
pusha
sar
inc
sub
test
mov
mov
out
push
in
pop
push
insb
roll
xchg
mov
iret
xchg
test
xchg
outsl
adc
cld
addr16
jae
fidivrs
push
and
mov
push
adc
rcrb
cmpsl
pop
rorb
jne
sub
jnp
push
push
cmpsl
je
rorb
push
into
outsb
mov
mull
lods
pop
push
cmpb
push
cmp
ret
cmp
sahf
ret
pop
jmp
dec
push
mov
jl
xchg
js
xor
xchg
mov
mov
pop
push
xchg
dec
inc
repnz
lods
mov
and
inc
adc
pop
xchg
or
int3
shrb
mov
add
sub
iret
out
out
std
push
xchg
imul
jo
xchg
cmp
pop
push
sahf
notl
xchg
push
andl
mov
sub
rclb
bswap
mov
mov
cmp
mov
pop
fdivs
xchg
xchg
in
out
dec
fisttpl
inc
push
sub
imul
push
mov
popa
sbb
shl
push
inc
cmp
xor
mov
sbb
ljmp
out
scas
push
fs
jmp
xor
pop
adc
out
sbb
adc
inc
jbe
and
ljmp
rorb
lret
ret
sub
ret
out
out
mov
mov
insl
push
in
add
and
inc
fsubl
pop
daa
outsl
je
xor
or
jbe
cld
jge
pop
arpl
xchg
and
hlt
pop
nop
cmp
lds
mov
insb
je
push
pop
lods
or
imul
mov
lods
or
bound
test
sbb
push
mov
mov
ss
xchg
pop
pop
xlat
mov
jnp
enter
lock
cmp
out
inc
mov
push
jp
out
js
sub
add
jns
pusha
imul
shrb
pop
pop
sbb
lret
ret
nop
and
dec
mov
add
pushf
and
add
scas
dec
rclb
mov
jmp
jns
bound
jns,pt
adc
hlt
xor
inc
lret
pop
jns
mov
inc
fistpl
xchg
mov
sbb
jmp
aaa
push
mov
or
push
fwait
pop
pop
add
xor
add
xchg
pop
test
loope
std
ja
xchg
ljmp
mov
daa
shll
lods
xchg
adc
cmp
andb
lods
mov
insl
fadd
pop
ljmp
push
xchg
sbb
jae,pn
and
cld
mov
mov
add
cmp
lcall
xchg
sarl
stos
rorl
dec
inc
movsl
jmp
push
stos
movsb
mov
into
repz
fildl
insb
sbb
inc
add
repz
aam
stos
popf
das
test
inc
aaa
aad
imul
outsl
leave
add
push
lea
and
sbb
xchg
mov
cmc
inc
cmpsl
cltd
mov
jecxz
enter
push
inc
sar
mov
cmp
push
mov
inc
xorb
fidivl
sub
ret
push
dec
std
cmpsb
pop
sub
cmp
jns
add
add
cmp
and
bound
xor
adc
fs
mov
scas
dec
jae
pop
and
xchg
push
je
pop
je
xor
cmp
fistpl
pop
mov
mov
jl
cmp
ret
xor
sbbb
mov
gs
dec
sub
mov
adc
mov
int3
mov
push
mov
pop
shlb
jnp
repnz
pop
mov
fsubp
fiadds
lret
or
dec
inc
aas
mov
jle
repnz
into
aaa
xor
mov
scas
int3
jbe
outsl
into
and
ffree
mov
ljmp
movsb
ficoms
pop
and
jne
mov
test
loopne
ds
dec
jecxz
shr
add
cmpsb
subb
mov
xor
jle
adc
fcom
js
mov
ret
sbb
add
addl
out
aaa
iret
sub
insb
test
rcr
movsl
in
cmp
fidivrs
push
stos
insb
lea
scas
xchg
shrl
and
jg
les
daa
popa
adc
xchg
or
add
fs
push
shufps
ret
xchg
xchg
sbb
aaa
mov
sbb
xchg
addr16
push
fadds
fsubrs
xor
push
xor
and
sti
inc
add
push
cli
or
mov
push
adc
push
dec
cmp
mov
sub
add
scas
mov
gs
mov
mov
add
sti
mov
cmpl
xor
cmp
or
es
bound
jbe
jne
repz
imul
mov
je
inc
dec
neg
mov
aas
pop
dec
or
mov
sub
sub
jg
aas
andl
mov
enter
movsb
push
pop
sub
fidivrs
cltd
push
aas
enter
push
push
xchg
out
cltd
stos
jp
inc
in
daa
jmp
mov
fisubl
out
subb
bound
sti
fwait
adc
and
rcll
xor
into
out
shrb
or
lcall
push
iret
out
adc
lock
sti
insl
sbb
mov
mov
push
adc
aam
xor
cltd
fdivs
out
mov
add
xor
pop
mov
cmc
pop
xchg
xchg
xchg
subl
dec
sub
mov
push
ja
fistpll
cmc
sahf
sti
mov
fcompl
movsl
xchg
or
enter
mov
xchg
mov
imul
xchg
cld
aam
iret
in
lea
faddp
paddsb
adc
fsubrs
dec
aas
sub
inc
pop
cmpsb
rorl
cmc
add
xor
dec
gs
sub
push
mov
jge
mov
ss
loope
mov
mov
scas
outsb
add
inc
cmp
loop
xor
fnstcw
push
movsb
imul
sub
repnz
mov
adc
fcmovne
insb
mov
cmpsb
mov
icebp
cli
adc
xchg
fs
int
dec
and
xorl
sbb
or
inc
push
adc
jp
fbstp
inc
pop
and
mov
and
mov
jle
cmc
lds
mov
pop
mov
in
roll
or
mov
add
into
scas
sbb
stos
mov
sub
in
daa
pop
test
test
push
mov
aad
ret
loop
dec
or
enter
shll
mov
adc
xchg
jnp
lock
out
enter
mov
cli
mov
pop
loop
stos
pop
inc
mov
cltd
lret
lahf
clc
lock
sub
rcrb
sub
dec
sub
inc
sbb
rcll
add
mov
stc
sub
out
enter
mov
add
xor
mov
mov
cli
cld
loop
cli
out
outsl
push
ljmp
fdivl
loop
sub
xchg
call
cmp
sbb
adc
pushf
mov
xchg
dec
pop
leave
fnstcw
sub
mov
push
cld
jge
rolb
sbb
and
loope
fistpll
test
ffree
jns
xor
xor
xchg
and
pop
pushf
jg
adc
mov
setge
cmpl
clc
dec
and
sbb
mov
xchg
xchg
pop
lret
enter
ret
or
loope
mov
ljmp
stos
xor
loop
cmp
mov
sahf
ljmp
in
pop
in
xchg
stos
repz
enter
xor
add
push
dec
lcall
loopne
adc
sub
lds
mov
xlat
add
mov
daa
lods
xchg
ret
mov
clc
pusha
call
addr16
fidivrl
adc
mov
adc
popa
jp
cmp
push
sarb
jmp
dec
or
dec
sub
cmp
cltd
xchg
push
pop
pop
jmp
or
add
out
cmp
push
mov
pop
loopne
sub
js
mov
xchg
push
insl
bnd
mov
jecxz
inc
pop
cmp
cwtl
adcb
or
repnz
in
outsl
arpl
inc
sahf
out
add
cwtl
jae
xchg
test
sbb
les
rcrb
push
cld
nop
mov
mov
add
enter
push
fnstsw
mov
pusha
xor
dec
icebp
shrb
fcoms
repnz
push
dec
cmpsb
push
push
repz
shrb
out
fistl
jne
cld
adc
pop
aad
cmp
imul
leave
test
push
dec
repz
or
mov
ret
je
loope
call
iret
repz
xchg
cmp
fdivrl
lods
push
push
lret
movsb
movd
mov
js
or
mov
add
adc
add
add
pop
mov
ret
lcall
dec
inc
pop
into
arpl
cmpsl
pop
rclb
jecxz
dec
push
fstpl
sub
arpl
cmc
and
fidivrl
loop
add
cltd
imul
and
push
insb
jno
dec
or
out
lea
es
imul
jg
and
mov
mov
fbstp
out
pop
roll
daa
out
sar
or
repnz
icebp
js
int
xchg
inc
mov
loope
push
imulb
lret
pop
divb
mov
or
mov
shll
sbb
cmp
mov
arpl
and
test
ss
loope
xor
pop
xchg
nop
mov
sar
xor
jno
rcl
aad
je
push
jl
pop
sbb
popa
outsl
mov
mov
add
cmp
repz
mov
ret
lock
outsl
push
push
pop
jmp
testl
xchg
dec
sbb
cld
jg
xor
xchg
inc
lcall
jno
ds
dec
xchg
call
call
pop
rcrl
mov
fnstsw
push
jg
sub
fldcw
push
std
aam
dec
lock
pop
dec
ds
test
dec
lret
add
xchg
mov
inc
stc
add
add
cmp
or
inc
addr16
add
jle
cli
adc
int3
lret
jmp
cs
push
adc
scas
sub
call
jg
cwtl
and
jl
pop
mov
shll
jp
mov
popf
mov
mov
lods
xor
ja
xchg
das
push
xchg
je
cwtl
mov
in
loop
or
sub
and
inc
aas
lea
xor
jb
sbb
popa
lahf
mov
scas
jne
jne
sub
sbb
cmpsl
addl
lock
movsl
stc
jmp
or
in
pop
cmp
sbb
jle
dec
outsb
jne
sub
push
in
addr16
sbb
cld
test
pop
sub
inc
sti
mov
push
sbb
xchg
fdivrl
aas
mov
mov
inc
push
lahf
xlat
daa
dec
lds
push
xchg
sub
insl
xchg
mov
sarb
dec
mov
mov
aad
add
xor
imul
mov
jecxz
cmpsb
je
mov
and
fsts
pop
ljmp
xchg
sub
stos
dec
jp
lds
mov
in
sbb
jae
jge
mov
jns
sub
mov
aam
jge
mov
push
dec
push
mov
pop
sbb
test
pop
dec
hlt
lsl
cs
xchg
fs
add
xor
mov
cwtl
repz
dec
sbb
xor
xchg
loopne
add
mov
or
pusha
test
out
in
daa
insl
std
in
repnz
pop
jp
push
push
pop
sbb
push
out
std
push
or
mov
adc
dec
add
lds
ret
push
roll
dec
imul
xlat
mov
pop
sahf
mov
std
out
mov
fimuls
jbe
clc
dec
popa
int3
jb
xchg
inc
adc
popa
inc
sub
push
in
icebp
push
imull
lock
scas
push
adc
and
and
mov
into
addb
mov
xchg
fs
js
add
mov
push
cmp
adc
adc
hlt
pop
test
jle
addps
in
fisubs
mov
xchg
test
das
stc
adc
fisubrs
adc
cwtl
mov
popa
sar
sbb
xchg
mov
push
add
loope
sbbb
pop
mov
mov
inc
push
repnz
and
cmp
and
mov
sub
or
pushf
repz
sti
bound
pop
push
insb
dec
sub
rol
js
subb
mov
pop
dec
or
jae
and
fcmovnu
jo
rcll
sub
out
mov
or
push
bound
and
fstps
sbb
imul
dec
in
jbe
jg
mov
fcmovnu
add
jl
daa
cmp
ror
fists
ret
mov
mov
cs
and
xchg
xor
out
insl
shlb
into
aad
push
push
idivb
test
scas
or
add
jae
pop
sub
mov
jb
sbb
mov
pop
lret
fiaddl
fldl
iret
data16
roll
and
rcrl
dec
sub
cmpsl
je
jae
aad
imulb
xchg
xchg
mov
filds
dec
int
cmp
dec
and
movsl
mov
inc
or
xor
add
lea
push
aad
jne
sub
mov
pop
mov
je
jae
push
pop
xchg
push
pop
xchg
imul
dec
arpl
ljmp
pushf
jge
imul
ljmp
aas
cmp
cltd
into
xchg
xor
dec
mov
cmp
mov
popf
and
push
xor
fists
jbe
into
adc
lahf
lock
aad
push
push
mov
es
sbb
or
adc
div
cmovno
jl
stos
mov
aam
in
fildll
xchg
or
add
std
idiv
out
mov
push
movsl
cmpsb
xor
push
xor
push
add
dec
imul
xor
mov
jg
pop
inc
add
loopne
int3
add
xor
xor
pop
nop
test
sbb
or
adcb
sbb
clc
cs
push
xor
dec
sub
fstl
not
inc
xchg
mov
es
mov
div
sarb
das
pop
push
mov
inc
dec
out
and
and
stos
lods
push
sub
cli
mov
outsl
pop
imul
movsl
cmp
sub
xchg
cmp
inc
push
mov
test
jae
push
adc
pop
shll
mov
popf
stc
bndstx
push
sub
xchg
sbb
psubusb
adc
mov
daa
mov
or
lds
pop
mov
pop
mov
or
sub
xchg
lcall
lret
fwait
ss
addr16
pop
mov
int3
inc
pop
xchg
lock
and
sub
xchg
xchg
sbb
or
cmpsb
ret
mov
out
and
lret
dec
adcl
lds
push
or
cmpb
hlt
sahf
jns
mov
test
push
jmp
out
lret
xor
and
add
push
bnd
mov
jle
or
aas
push
sub
push
and
adc
std
and
mov
mov
mov
or
mov
mov
adc
mov
notb
add
addb
cli
scas
shll
push
inc
rorl
mov
mov
out
in
mov
leave
stos
int3
pop
sub
mov
fistl
add
js
or
faddp
jle
lods
mov
fs
in
adc
orl
in
sbb
repnz
push
jns
mov
sarl
ret
sub
in
insl
cmp
pusha
ret
xor
stos
cmp
push
dec
sbb
lods
imul
mov
mov
xchg
sbbl
stos
adc
mov
idivb
dec
insl
cmpsl
shlb
jp
dec
jns
jae
mov
cltd
jecxz
xor
mov
movsl
call
dec
js
out
dec
cmp
inc
sbb
xorb
rorl
rorb
outsb
sbb
sbb
sbb
arpl
scas
fwait
lcall
out
sbb
inc
dec
bound
nop
jl
enter
and
inc
jne
mov
jl
lock
xor
jnp
inc
aaa
add
popf
pushf
in
aaa
ret
xchg
bound
add
or
dec
sbb
repnz
dec
and
divb
fsubrl
aas
inc
sub
insl
pop
sub
ficoms
pop
in
push
adc
push
imul
out
dec
popa
clc
jle
aam
pop
int
xor
push
pop
pop
pop
xchg
jl
mov
outsl
repz
pusha
in
nop
push
mov
add
xchg
dec
mov
xchg
gs
sbb
jo
dec
cmp
add
mov
dec
add
push
test
scas
dec
inc
fsubs
vminsd
pop
outsb
jb
cmp
pop
mov
sbb
aaa
sbb
mov
cmc
outsb
stos
mov
cltd
or
jp
xor
rcrb
inc
xchg
fs
push
jbe
pop
mov
fldl
jne
sub
jle
in
fdivl
dec
adc
jl
hlt
jae
mov
mov
sahf
popf
in
jns
inc
jo
dec
mov
dec
sub
push
mov
in
repnz
lret
xchg
js
jmp
cmp
dec
xchg
jmp
xchg
dec
call
mov
dec
sti
xchg
aas
test
lds
push
arpl
mov
test
mov
cmp
inc
mov
pop
sar
mov
ret
jnp
scas
cmp
sahf
stos
rorl
fidivs
mov
js
or
lahf
cmpsb
shr
pop
jae
jmp
jp
out
cmp
mov
scas
rcrl
sbb
jne
aaa
adc
push
cld
in
push
lods
xchg
stos
data16
orl
cmp
jge
inc
inc
add
pop
xlat
push
xchg
push
jge
adcb
je
aas
sarl
cwtl
cltd
lods
testb
insb
pop
repz
sub
mov
jnp
in
sub
in
and
mov
int
cmp
rcrl
mov
cwtl
lds
adc
pushf
mov
into
jno
call
jns
jbe
fwait
mov
jg
jns
out
push
call
sbb
or
ret
xchg
inc
mov
lret
loop
shlb
or
lock
inc
or
mov
jb,pt
int3
mov
jle
dec
and
dec
fimull
lods
mov
dec
mov
sbb
sbb
dec
sub
pop
rcrl
xchg
mov
push
rcrl
in
mov
jno
leave
nop
adcb
lahf
sti
frstor
test
adc
scas
test
mov
push
mov
loop
jnp
fstpl
xchg
fdivrl
aas
inc
lahf
into
decb
scas
loopne
bound
dec
push
xchg
int
cs
inc
fsubr
or
int3
int
orl
xchg
mov
roll
leave
jne
jle
test
mov
pop
shll
stc
xchg
call
xchg
push
push
xchg
cmp
inc
fisttps
iret
mov
cli
outsb
fcoms
push
pop
ret
sbbl
lock
adc
add
dec
negl
push
jns
or
into
and
arpl
jl
test
inc
rorb
push
jmp
xlat
adc
ret
add
nop
nop
leave
and
cs
mov
popf
rcll
xchg
cmp
pop
add
push
mov
cwtl
add
shl
fildl
sub
arpl
sbb
xchg
or
mov
mov
xor
pop
mov
mov
insb
jbe
mov
mov
sub
test
loop
dec
call
insl
mov
mov
int3
sbb
inc
pop
lods
gs
loopne
gs
inc
add
or
stc
xlat
movsb
fisubrl
xor
mov
repz
mov
cltd
inc
push
sub
insl
popa
mov
out
fidivrs
sbb
popf
test
dec
xor
jp
rcr
fldl
add
dec
add
xchg
out
loopne
xchg
test
push
inc
out
icebp
mov
mov
mov
aad
stos
xor
xlat
es
loope
invd
sub
adc
aad
sub
inc
fisubrl
jmp
add
or
decb
fldcw
xor
ret
lea
popa
cmpsl
or
into
repz
bound
cmp
pop
pop
fisttpl
dec
add
pop
out
dec
in
dec
ret
fs
inc
mov
loope
dec
js
arpl
and
xchg
ljmp
push
inc
and
ffreep
int
push
mov
test
pop
imul
mov
adc
xor
rclb
xor
or
test
inc
fbstp
push
sub
cmpsb
cli
push
fs
jmp
push
push
xor
and
cmp
lock
int
fiaddl
sub
add
insb
add
jae
add
pushf
jnp
jo
xchg
lods
xor
sub
leave
jmp
xor
fwait
adcb
loope
dec
mov
xchg
test
inc
jg
jb
xchg
iret
or
popa
mov
fwait
dec
mov
dec
scas
dec
mov
mov
mov
jno
inc
xchg
js
xor
pop
mov
ss
inc
mov
gs
cmp
je
mov
call
rorb
add
push
notb
xor
cld
ds
shlb
sub
mov
mov
mov
out
in
ret
lahf
fcompp
js
pop
pop
adc
cmp
push
cmp
fdivrs
jno
sbb
mov
popf
arpl
lahf
outsl
mov
je
pop
sbb
and
adc
xchg
shr
fcoml
cmp
lret
lcall
push
mov
in
test
jle
bound
push
sub
cmp
pop
repz
pop
push
lret
ret
sti
std
add
inc
mov
mov
xchg
lock
sbb
xor
pop
lock
lret
lods
pop
xlat
add
and
jbe
pop
mov
lock
testb
fsub
and
leave
push
hlt
or
inc
in
cmp
xor
jmp
push
fimuls
cmp
jns
sahf
jns
sub
ds
mov
into
add
add
popa
pop
sbb
jmp
test
adc
lods
out
adc
in
jmp
push
push
cs
mov
shr
lds
mov
add
stc
jae
incl
in
xchg
mov
idivw
pop
popf
dec
xchg
inc
push
pop
mov
icebp
and
test
out
mov
xchg
adc
xorb
add
stos
dec
lea
add
cltd
popl
scas
adc
popa
pushf
out
sbb
mov
shr
outsl
pop
faddl
jb
fldenv
dec
or
fldenv
or
pop
pop
xor
jno
inc
leave
and
add
popa
xchg
insl
loope
daa
and
xor
push
xor
lret
fs
sub
pop
es
jno
jo
mov
inc
aam
mov
ret
leave
in
and
insl
out
mov
push
pop
jae
cmpsl
jle
jp
daa
or
mov
dec
push
push
movsl
aas
stc
xor
in
push
mov
hlt
test
loope
xor
push
sti
rorb
xor
out
aaa
adc
stos
je
stc
and
stc
test
add
lods
inc
mov
cmpsb
mov
nop
sub
int3
or
outsl
mov
xchg
dec
insb
xor
roll
das
and
sbb
loope
stc
mov
cmc
cs
adc
cwtl
in
insl
cld
inc
mov
stos
nop
inc
sub
jbe
lds
xor
aas
sbb
add
push
mov
xchg
test
inc
sub
dec
jle
xchg
mov
in
popa
pop
inc
mov
in
mov
xor
ja
or
test
pop
jb
dec
into
orb
loope
jb
sbb
mov
sub
ficoms
test
add
fimuls
jne
inc
repz
or
sti
imul
add
mov
jae
jae
scas
ds
in
cld
jno
xor
sarb
out
enter
pop
mov
lea
cmc
mov
mov
loopne
pop
xchg
and
sub
mov
lahf
xor
test
jecxz
mov
or
imul
jp
jae
cmpsl
pop
and
adc
xchg
sub
add
mov
iret
mov
les
and
pushf
mov
test
push
daa
xchg
add
int
sahf
shl
insl
inc
cmp
pop
ss
sbb
ret
fwait
push
jp
ljmp
jg
or
push
adc
sub
out
jmp
add
stc
scas
mov
or
test
add
jbe
sarb
roll
mov
or
sarb
push
xchg
sahf
cld
jne
cld
add
xchg
jo
push
nop
clc
jmp
xlat
adc
push
lds
sahf
mov
inc
cs
sbb
xchg
cmc
push
dec
xchg
fdivr
mov
push
stos
mov
pop
adc
inc
push
inc
xor
ss
xchg
insb
cmpsl
aaa
adc
lods
pop
movsb
pop
call
fbld
push
pop
mov
xor
pop
icebp
adc
push
cwtl
sbbl
sbbb
ficomps
sub
jne
dec
mov
addl
mov
lahf
fnsave
adc
sbb
outsb
sub
ss
mov
and
xor
repz
ljmp
lret
jne
dec
fdivrl
cmp
arpl
inc
clc
inc
mov
xchg
enter
aaa
xor
push
inc
adc
in
add
xchg
sub
dec
push
sbb
aas
sar
daa
aas
ja
push
aam
test
jge
sub
jnp
incl
imul
or
push
loope
jl
adc
pop
push
xor
sbb
loopne
mov
sub
bound
dec
ss
xor
div
loop
enter
add
nop
mov
leave
pop
cmpb
mov
popf
xor
mov
cmpsb
jo
pusha
or
imul
ror
arpl
xor
xor
lret
movsb
pop
int3
dec
shl
dec
mov
mov
rcll
je
inc
imul
hlt
mov
rcr
cmpsb
inc
pop
pop
fcoms
mov
in
scas
sbb
lods
and
ljmp
xchg
aam
ljmp
fldt
xchg
or
movsb
into
dec
lret
and
data16
into
jmp
cmpsb
movsb
or
call
mov
jo
jns
jae
fcoms
out
inc
jmp
push
xor
xchg
xchg
xor
xlat
or
push
lret
mov
cwtl
int3
xor
notb
push
pop
push
ja
ror
mov
cmp
lods
xchg
shll
out
cmp
into
sub
imull
cmp
cltd
add
cs
popf
and
inc
adc
lea
lahf
mov
fistpll
rcrb
nop
ds
cmpsl
mov
xchg
pop
push
push
jl
push
pop
ret
dec
mov
cmp
andl
mov
test
nop
mov
repnz
xor
ljmp
jg
mov
ret
ret
fwait
and
sub
in
repnz
mov
loopne
mov
and
mov
jae
rolb
insb
lods
addr16
leave
and
data16
addr16
and
cmp
cmp
popa
jb
test
pop
dec
mov
pop
nop
cmp
lret
outsb
leave
jmp
cmp
mov
lods
rcll
ud1
mov
add
les
test
test
out
push
orl
pop
aam
mov
out
sbb
fmulp
fldl
subb
notb
or
sub
jno
mov
sti
lcall
add
or
hlt
fisttpl
lods
out
mov
das
xchg
ret
fstl
jbe
pop
aam
stos
les
sbbb
push
xchg
enter
pop
lock
push
enter
cmpsl
scas
jo
mov
clc
xor
iret
push
incb
mov
shrd
pop
push
mov
adc
jno
mov
insl
mov
insb
ds
lret
xor
shrb
mov
inc
cld
fimuls
pop
push
pop
fwait
jb
mov
aad
jl
mov
out
inc
cmp
in
cmpl
mov
test
and
test
nop
fnstcw
mov
xor
pop
inc
lds
push
loop
adc
mov
xor
push
int3
dec
jb
sbb
ret
sbb
mov
std
inc
lret
push
pop
add
and
sub
test
enter
lcall
push
jnp
enter
push
fmuls
ja
mov
movsl
js
aas
jp
adc
rolb
and
xor
mov
push
xlat
mov
fcoml
cld
mov
jo
sub
sub
adc
pop
cmp
in
adc
fucom
ret
mov
jmp
mov
inc
mov
mov
sbb
iret
jbe
jne
jl
je
sbb
push
leave
jecxz
mov
add
xchg
loop
outsb
ss
adc
mov
mov
pop
scas
test
dec
sub
or
lahf
inc
in
push
cmp
loop
bound
das
cs
out
cmp
dec
sbb
in
jno
pop
dec
and
pop
repnz
lock
push
mov
adc
jl
movsb
out
ret
aas
imul
cmpsl
pop
mov
fstpl
mov
pop
movsb
xor
pusha
fldt
sub
pop
sub
pusha
pop
adc
pop
dec
or
push
data16
sbb
aas
cmp
add
int3
cmc
mov
and
sbb
sbb
cmp
jmp
mov
pop
and
mov
cltd
xchg
mov
dec
xchg
ret
insl
xor
pop
outsb
mov
icebp
cmp
cs
int3
movsl
and
lds
sub
pop
cmpsb
xor
pop
jle
out
ret
xor
adc
jne
cli
loopne
cmpsb
mov
xchg
xchg
jmp
pushf
repz
js
sbbb
mov
xchg
jg
jno
fstps
push
ds
and
mov
sbbl
jns
sbb
shll
test
cmp
shll
or
fwait
sub
and
imul
sbb
push
sbb
int3
outsl
sub
xchg
aaa
jno
jg
pop
lret
push
ljmp
hlt
jo
add
lds
sahf
orl
mov
cld
scas
stc
cmp
sub
mov
mov
mov
lahf
push
loopne
cs
sti
jl
cs
xor
or
inc
mov
jmp
sub
mov
sbb
dec
pop
xor
push
aam
and
mov
testb
aas
jns
pop
xchg
in
jmp
scas
scas
mov
sub
rcl
fldt
push
into
in
push
push
jg
and
outsb
push
jle
pop
pop
jmp
nop
adcb
add
ja
inc
push
cmp
mov
and
aas
mov
push
lret
into
sarl
jecxz
xchg
inc
sbb
mov
cmpsl
mov
mov
inc
loope
mov
into
cmpb
mov
xrelease
jg
imul
fnstenv
imul
jle
fildl
pusha
outsb
icebp
rsqrtps
cmp
push
ljmp
or
mov
repz
jle
pop
out
adc
cmpsl
dec
sub
pop
xor
in
inc
inc
popa
pushl
or
int
bound
in
and
cmp
fistps
ret
jae
call
stc
xchg
jne
jl
stc
ret
sbb
push
sub
mov
call
cmp
int3
daa
hlt
mov
push
and
jbe
lods
ret
lods
repnz
cmp
popf
mov
cmpsl
mov
mov
dec
inc
pop
pop
nop
add
std
dec
push
rcl
sub
mov
test
mov
lret
dec
fsubr
lods
dec
fmul
mov
sahf
aad
shrb
xchg
jae
fs
scas
or
add
inc
pop
push
mov
sbb
push
pop
inc
test
arpl
addr16
mov
or
shr
lret
pop
rorl
mov
daa
lds
fdivrp
add
add
xor
fimuls
sub
inc
insl
outsl
mov
fwait
or
mov
mov
jbe
xchg
daa
lods
adc
ss
mov
movsl
cmp
pusha
pusha
mov
loopne
test
fadd
sub
sbb
nop
push
andb
pop
dec
test
mov
loope
movsl
shll
lret
popa
mov
sub
adc
popf
cmp
or
inc
lret
push
cs
test
dec
clc
mov
cmp
jbe
aaa
lahf
es
xchg
mov
cmpsb
out
mov
jno
lods
cmc
in
sbb
fiaddl
pop
fwait
icebp
inc
mov
ds
je
mov
push
outsb
lods
fldl
rcll
dec
or
inc
imul
lcall
shlb
jno
test
or
cwtl
inc
int
bound
scas
push
cltd
mov
outsl
or
les
jge
adc
fistpl
jne
cli
stos
insl
sarb
stc
mov
mov
push
fists
jne
mov
cltd
cmc
xchg
jnp
mov
outsl
xchg
jmp
fs
popl
sub
jp
cli
enter
jns
fimull
xlat
xor
pop
jle
ljmp
lods
adc
stos
out
adc
push
cltd
push
mov
or
push
clc
ret
cltd
add
cmpb
neg
push
or
mov
ds
orb
stc
ds
xor
xor
popf
mov
mov
cmp
cli
lret
push
rcr
push
push
xor
jnp
mov
xor
inc
sub
inc
cmp
outsl
test
sbb
lock
push
pushf
test
inc
cld
daa
adc
add
ret
in
adc
fisubs
add
xor
mov
loope
lahf
xchg
mov
jb
sbb
repnz
mov
daa
aaa
ja
cmp
ljmp
call
sahf
aad
movsb
inc
fstpt
loop
pop
xchg
shll
jp
cmc
cltd
jb
dec
ret
test
xor
mov
clc
decb
int
aad
lods
mov
dec
dec
outsb
and
cltd
les
add
add
repz
popl
mov
inc
wbinvd
inc
stos
sub
enter
push
adc
sbb
js
cmpsb
lds
mov
cwtl
or
ret
js
pusha
xchg
outsb
sbb
into
and
sbb
fistl
cmp
mov
dec
lret
push
cmpsl
fdivl
cld
dec
stos
mov
js
push
les
xchg
cltd
stos
adc
adc
jle
repz
push
dec
inc
dec
fnstenv
xchg
jo
aas
xchg
imul
out
ljmp
mov
popf
in
inc
pusha
sti
les
fsubs
xchg
fdivrp
js
inc
or
adc
sti
fwait
lahf
mov
sub
out
cmpsb
outsl
out
imul
cmp
pop
frstor
movsb
push
inc
xchg
xchg
les
movsl
jb
pop
cli
jb
stos
pop
mov
push
jp
push
inc
ljmp
pop
sahf
inc
fcomps
xchg
push
mov
cmp
mov
jmp
stos
nop
ss
push
lret
sbb
jl
fcoms
pop
jmp
movsb
push
pop
pop
lock
leave
pop
nop
or
shll
cltd
rcr
xorb
es
andl
and
cmp
incl
xchg
scas
xor
mov
sbbb
cmp
les
xor
cmpsb
scas
test
out
lahf
mov
xor
divl
scas
lahf
sbb
sbb
or
push
leave
jne
shll
xor
push
sub
lock
je
pop
out
arpl
mov
sahf
sbb
xor
sub
dec
push
loopne
inc
enter
rclb
insb
data16
stos
ljmp
rcl
xchg
and
andb
push
adc
push
xchg
push
inc
mov
repnz
cmp
and
adc
pop
pop
xchg
icebp
stos
push
adc
xor
jbe
pop
out
and
je
lret
pop
jp
testb
enter
mov
mov
sbb
add
pushf
and
sbb
in
dec
push
out
mov
sub
loope
lahf
out
push
push
sarl
push
mov
adc
xor
repnz
xchg
lods
mov
cli
dec
dec
push
xchg
insb
adc
repnz
and
stc
lock
dec
push
jmp
mov
jge
jns
mov
addb
add
ret
aas
mov
mov
aad
lahf
loopne
jl
imul
lcall
push
xchg
cmpsb
outsb
loopne
sub
loope
add
ja
dec
hlt
jge
cld
js
jmp
sub
enter
gs
bound
push
pop
mov
xor
mov
sbb
mov
mov
and
inc
and
xchg
out
lcall
add
jmp
xchg
rcr
mov
sbb
out
add
inc
jge
or
int3
ja
ja
jecxz
test
jle
pushf
and
or
movsl
mov
or
notl
xchg
sub
xchg
sbb
les
lcall
mov
test
test
pushf
mov
mov
test
int
push
jo
jg
stos
inc
pop
rcrl
test
scas
push
movsl
dec
lods
push
mov
lret
jecxz
mov
aam
jb
stc
mov
mov
aam
adc
rorb
mov
fcompl
sbb
push
add
fwait
leave
jae
cmpsl
jae
loopne
cmovl
dec
popa
into
les
xchg
mov
fnstenv
shrl
adc
pop
and
movsl
mov
frstor
lret
mov
xor
pop
or
outsb
sbbb
aaa
jge
repz
and
jp
aaa
or
cmc
sbb
sub
jns
in
xor
out
xchg
mov
jl
loope
lahf
mov
das
inc
jne
or
inc
adc
jge
cmp
inc
ljmp
stc
lret
xchg
push
mov
mov
insb
jle
cmpsb
xchg
notl
push
mov
mov
push
popf
arpl
or
xlat
daa
cmp
aaa
mov
adc
cmc
cwtl
fwait
jmp
dec
popf
lret
push
jns
decl
add
fs
add
or
xchg
push
not
fs
xchg
inc
jmp
push
fdivr
lret
roll
mov
sub
and
jb
push
subl
and
xor
mov
lock
cmp
nop
ja
in
mov
ficoml
arpl
cltd
es
jno
lcallw
or
jge
mov
cli
pop
cmp
and
lret
leave
adc
mov
nop
sar
out
push
out
es
adc
es
add
shr
jg
mov
pop
loope
fistps
xchg
and
mov
add
mov
sahf
jge
mov
ficoms
data16
aam
mov
xchg
mov
push
mov
jo
insl
inc
xchg
popa
adc
ljmp
mov
iret
out
loop
add
aaa
nop
xchg
pop
xchg
icebp
dec
scas
mov
cltd
lods
xor
sub
pop
mulb
inc
les
jb
jns
sub
imul
ds
data16
xor
jne
pop
js
outsl
xor
mov
sarb
fisttps
test
and
xchg
pop
ret
std
push
push
sub
push
test
inc
dec
sub
adc
pop
inc
in
lods
movsb
and
stos
leave
jo
cwtl
inc
das
in
mov
jge
js
xor
imul
nop
aaa
imul
leave
cmpsb
dec
call
pop
loope
xor
adc
psllw
pop
pop
mov
jmp
scas
xchg
in
imulb
sub
push
pushf
repz
sbbb
inc
fucomip
mov
push
xchg
or
lods
cmp
xchg
xchg
dec
movsl
push
sbb
je
pusha
xlat
push
push
jecxz
lcall
out
out
mov
ds
shrl
mov
jnp
and
pop
mov
add
push
mov
cmc
divb
mov
dec
rcrb
test
imul
pop
aam
mov
mov
out
jecxz
leave
push
fistpl
aam
fwait
sarb
fdivrl
xor
cmpsb
mov
ret
sub
push
jl
out
arpl
jl
cmc
cmp
cmp
fadd
pop
mov
ret
stos
aas
push
lods
cli
push
imul
or
push
push
mov
xchg
arpl
jg
sub
repz
add
nop
add
sub
adc
add
cmp
in
or
cmpsl
or
loop
add
ja
mov
outsb
jb
adc
sbb
nop
add
out
mov
and
xchg
sbb
addb
sub
std
adc
test
into
cmp
cmp
mov
cmp
clc
or
xor
in
nop
loope
ljmp
test
mov
popf
mov
add
add
movsb
pop
inc
ret
out
sti
fisubl
fs
call
pusha
mov
pop
arpl
and
dec
out
sbb
mov
fsubrp
inc
fisubrs
xor
cmc
out
sbb
mov
data16
int3
add
pusha
fwait
xchg
mov
addr16
xchg
movsl
sub
pop
mov
mov
and
shr
in
das
push
push
test
cmp
ss
scas
push
addr16
xchg
or
outsl
stos
push
ds
and
cmpsl
dec
je
xchg
or
ss
and
cmp
cmp
cmp
or
cltd
push
aam
and
jmp
jne
xor
aaa
repz
and
stc
dec
outsb
fstl
xlat
sbb
fists
mov
sbb
and
cmpsb
cmpb
dec
sahf
add
insb
mov
sbb
ljmp
pushf
cltd
lea
loopne
push
cmp
test
and
mov
pop
xchg
pop
sbb
add
pop
repz
cli
jle
fisttpll
das
stc
mov
jne
pushf
sahf
daa
lcall
stos
jb
inc
push
cli
data16
cmpsl
push
fdivrl
out
fisttpll
add
les
and
imul
rcrl
scas
cmc
pusha
sub
jmp
mov
xchg
xchg
insb
sub
fisubl
mov
lea
mov
sarb
xor
popa
fwait
rolb
cmovg
in
je
insl
ret
push
ret
lret
mov
mov
and
mov
mov
sbb
cs
lds
sub
in
fsubrp
cwtl
mov
shrb
xchg
or
subl
in
dec
mov
dec
insl
fldenv
nop
sahf
mov
data16
lock
in
pop
push
pop
inc
out
inc
test
arpl
es
xchg
inc
mov
repz
pop
push
cltd
ret
popa
xor
or
add
in
lds
ja
mov
movsl
push
cmp
clc
xor
stos
ds
jne
lds
popa
iret
ss
jae
jnp
test
dec
rol
repz
test
pop
pop
jg
add
addr16
ja
add
out
or
cmc
mov
orb
jecxz
pusha
test
jnp
cmp
inc
and
mov
fwait
mov
fwait
stos
pop
sbb
sbb
push
adc
stos
fwait
iret
test
sti
xlat
icebp
mov
fcoml
xorl
ds
cli
gs
mov
push
aam
ss
inc
cmp
dec
in
shll
mov
fbld
and
xor
clc
dec
gs
loopne
jge
ss
inc
lcall
les
jae
xchg
cmp
or
es
rcrb
stc
add
inc
adc
xchg
test
insb
not
mov
shll
mov
xlat
test
push
xor
inc
jo
mov
movsl
mov
jne
xorb
lods
mov
mov
cmc
jg
mov
push
in
in
adc
jne
adc
outsl
lock
shr
icebp
incl
mov
push
jns
xchg
and
sbb
movsl
sub
mov
jg
test
lea
inc
xchg
in
add
movswl
les
in
add
jmp
mov
fbstp
inc
cld
jne
loop
lahf
jl
mov
mov
sub
mov
pop
iret
orl
xchg
ret
aad
test
dec
xchg
cltd
cmp
and
int
and
shr
mov
xchg
imul
fs
movsb
xor
imul
sub
sbb
ret
pop
dec
dec
jo
pop
stos
dec
sti
pop
push
fucom
adc
out
jp
call
movsl
xor
repnz
aas
push
lock
cli
out
ljmp
lahf
std
clc
mov
mov
loopne
orb
out
pushf
test
pop
vpabsw
mov
sbb
imul
gs
cmc
dec
ret
sub
inc
cmp
pop
scas
and
xor
fwait
leave
shlb
in
ja
inc
std
add
cmp
push
test
outsb
pop
lods
pop
scas
call
mov
jp
test
loope
sahf
xchg
ja
outsb
aam
out
mov
pop
mov
scas
ja
cmp
mov
adc
pop
xor
sub
pop
cmpsl
dec
aaa
and
push
stos
mov
pusha
xchg
sub
pusha
icebp
xchg
dec
call
push
in
popa
add
xor
jns
sarl
imull
and
jno
jmp
cmp
fdivrs
cmp
ja
xchg
test
cs
jae
add
inc
leave
mov
cmp
mull
pushf
hlt
data16
dec
loope
call
repz
cli
dec
pop
mov
in
pop
and
cli
insb
mov
pusha
mov
sbb
sbb
stos
xorl
stos
add
mov
push
jne
outsl
adcb
jns
arpl
sbb
mov
imul
sub
lret
lahf
sarl
test
xor
push
cmpb
jo
insl
mov
xchg
mov
and
call
jno
lret
jle
fwait
outsl
xchg
mov
addr16
xor
out
adcb
test
push
rorb
push
std
imul
cmp
sub
jnp
cmpsl
mov
shrl
daa
cmpl
sahf
pop
mov
lea
pop
xchg
jecxz
adc
mov
mov
mov
popf
xor
jl
jle
pop
lock
repnz
cmpl
adc
cwtl
out
in
mov
jns
pop
mov
push
add
or
push
jg
cmp
sbb
je
add
test
xor
test
das
test
sbbl
and
std
jae
xchg
inc
dec
out
jecxz
loope
mov
insl
ss
addr16
rcr
jns
sub
test
test
or
mov
popa
fstpl
in
jae
dec
jg
insl
ljmp
lock
and
xchg
push
idiv
jge
add
lret
dec
adc
negl
iret
fs
or
in
setns
add
shlb
lret
lods
insl
je
ds
xchg
addr16
out
adc
mov
mov
add
dec
xor
dec
mov
jae
push
addr16
std
gs
fwait
mov
mov
push
ljmp
cmpsl
pop
seta
loope
loop
or
jp
xchg
movsl
add
test
scas
hlt
andb
dec
mov
je
jmp
dec
stos
or
mov
fsubs
mov
dec
fst
subl
or
dec
jmp
xchg
adc
mov
rorb
and
push
iret
or
mov
repnz
adc
aam
xchg
ficoms
xor
push
stc
sub
dec
mov
pop
out
jp
fisttps
stos
gs
bound
popa
pop
mov
std
jp
mov
inc
add
xor
mov
fdiv
adc
add
or
fcomp
xchg
pop
lahf
pop
mov
test
dec
loop
mov
cmc
test
movl
push
pop
add
jno
inc
gs
fcmovnbe
sub
cmp
stc
subl
loope
jl
popf
in
aam
sub
mov
jno
xor
xor
sahf
sbb
scas
xchg
xchg
pop
jns
addb
xadd
movb
sub
push
cmpsb
xor
lcall
frstor
mov
sbb
mov
movsl
jns
out
ljmp
cmovns
test
repnz
mov
in
cmpsl
xchg
jle
stc
pop
inc
xor
xchg
test
cwtl
cltd
pop
gs
mov
and
push
fisttpl
loop
icebp
movsl
outsl
testl
fs
xor
scas
mov
mov
cmc
lret
lahf
sub
imul
mov
xchg
aaa
dec
dec
cmpsl
sar
sub
scas
loop
loopne
inc
push
mov
xchg
outsl
jno
dec
mov
add
xor
cmp
popf
cmc
push
fcomps
inc
cmp
jle
mov
cmp
mov
adc
lret
aaa
leave
and
into
adc
xor
test
dec
popf
nop
jne
push
sbb
cmpsb
or
movsl
push
sub
lea
mov
test
fisttpl
out
sbb
and
jo
imull
fnstsw
xor
lock
cwtl
repz
rorl
push
ss
pop
or
sbb
jnp
xlat
sub
push
mov
sub
cmp
stc
sahf
dec
xchg
in
dec
pop
out
sbb
sbb
xchg
xor
add
mov
lods
pop
dec
xor
push
sub
lods
or
int3
mov
popa
mov
jecxz
hlt
sub
jno
mov
mull
push
cmpsl
pop
xchg
xchg
subl
push
fstl
es
in
dec
stos
cwtl
fnstenv
jo
xor
sbb
sub
rcr
movsb
loop
leave
lret
inc
dec
push
ja
mov
test
fmull
loop
sub
xchg
mov
cmc
cmp
jno
push
loopne
sahf
sub
sub
push
mov
insb
pop
push
std
popf
add
mov
mov
pop
and
sbb
adc
lret
cmp
and
stos
mov
pop
loopne
outsb
imul
adc
movsb
rcrb
sub
loop
or
sti
inc
mov
and
jecxz
rcr
add
je
jbe
sub
inc
jae
xor
lds
in
adc
in
sahf
cld
add
xor
mov
inc
mov
insb
inc
in
int3
pop
mov
sbb
fmuls
jo
sub
out
aaa
cld
mov
pop
xchg
leave
jae
add
loopne
in
add
push
mov
add
sub
mov
jmp
or
jns
mov
frstor
cmpsb
mov
xchg
mov
push
mov
in
roll
int
xor
test
insl
popa
add
test
xor
xor
test
mov
cmpsb
and
bound
dec
mov
xchg
jbe
dec
es
into
mov
rorl
ja
jns
cltd
ljmp
test
shlb
or
push
in
push
aad
movsl
inc
or
aam
popa
xchg
jmp
lods
lods
sahf
sbb
push
ds
stos
inc
in
lret
sub
xchg
icebp
and
sti
xor
cmp
enter
jmp
inc
scas
aad
js
fistl
addr16
sbb
or
jae
int
inc
pop
and
cmp
sarl
repz
xchg
pusha
sub
cmc
add
jno
adc
popf
int3
mov
xor
iret
fildll
outsb
lods
add
std
jmp
cmpsl
lds
add
mov
enter
or
sub
popf
sbb
pop
and
push
test
xor
rcl
or
pop
insl
xor
and
xchg
repz
lods
pop
sbb
mov
lock
jb
pop
in
popl
out
cld
fsubs
jno
dec
lods
rcll
jns
stos
add
rorb
xchg
dec
xorl
adc
pop
mov
cs
push
xor
mov
mov
xchg
out
adc
push
jnp
frstor
or
addl
cmpsl
out
xor
cmp
bound
sub
insl
sub
test
insw
fs
sub
insb
mov
fcomip
cmp
and
int3
addr16
int
pop
imul
test
xchg
cmpsl
das
popa
xchg
ss
popf
lods
pop
pop
inc
add
push
sarb
popa
lods
out
push
loope
xchg
rclb
pusha
or
das
pop
mov
test
jne
fdiv
out
mov
push
and
adc
mov
stc
mov
cmp
mov
les
fs
sar
je
loopne
icebp
popa
jmp
jne
dec
sbb
add
add
cmc
cmp
imul
fnstsw
adcb
or
call
icebp
xchg
pop
push
inc
cmp
sbb
pop
sbb
out
lcall
aam
dec
and
push
and
cmp
pusha
les
xor
add
pop
jp
jo
pop
imul
int
movsb
inc
lds
fstpt
add
shrb
lods
loop
leave
xchg
inc
in
push
mov
cld
arpl
pop
dec
xchg
push
adc
je
xchg
jns
ja
xor
jns
jbe
cs
stos
jne
popa
cmp
out
stos
movl
in
add
mov
aad
xchg
fsub
test
cmp
mulb
xor
sbb
jecxz
xchg
fidivrs
pop
cmpsl
pop
jae
iret
clc
fisttpll
sbb
add
mov
ja
popl
dec
mov
jnp
xchg
fwait
ret
das
and
mov
jp
aam
sub
add
addl
add
push
arpl
cmp
xor
jo
call
mov
pop
out
ret
cmp
or
mov
mov
adc
mov
mov
popa
mov
jno
icebp
nop
add
loop
sti
xchg
daa
push
movsl
xchg
xchg
lock
xor
cmpsl
pop
insl
mov
lods
cmp
enter
sub
ja
popf
jmp
mov
jne
movsl
cmp
sbb
aas
mov
lret
jbe
jle
jmp
fidivrs
mov
sbb
jmp
outsl
inc
or
mov
cmovbe
sub
dec
insb
add
jbe
cmp
scas
adc
lock
int3
mov
inc
push
lods
imul
xor
and
or
outsb
js
sub
addb
push
inc
popf
dec
cmp
xor
les
and
pop
lock
inc
xrelease
popf
inc
ljmp
ret
cmp
clc
clc
shll
inc
pop
dec
sbb
or
xchg
mov
icebp
push
imul
xor
xchg
dec
nop
and
fmull
and
push
push
fcomip
push
das
clc
mov
clc
int3
shlb
cmp
loop
daa
push
pop
ljmp
rolb
lock
das
fs
push
insb
notb
fnstsw
cmpsl
scas
outsb
cld
adc
fcoml
fists
inc
cmp
loop
imul
or
fwait
jnp
mov
adc
xchg
inc
addr16
mov
and
fists
add
loop
dec
bound
loopne
jo
in
or
subl
lds
sub
add
jns
ss
repnz
jo
jbe
dec
jmp
dec
js
les
stos
jbe
out
xchg
mov
lret
push
cmpl
xor
stos
and
in
sahf
loope
enter
out
fidivrs
sub
jb
data16
xor
push
subb
daa
repnz
or
add
mov
or
jns
call
fbstp
fcmovu
imul
das
push
sbb
lock
or
push
jbe
test
cmpsb
clc
jg
popf
and
fwait
cmpl
push
pop
push
push
ficomps
daa
stos
mov
sbb
push
cmp
shl
mov
inc
imulb
push
mov
mov
lret
jecxz
mov
xor
jno
dec
or
aam
cmp
rcrl
jb
stc
pop
aaa
sub
je
cmp
dec
jo
cld
clc
fwait
cmp
cmc
test
xlat
mov
lret
add
sti
mov
leave
push
outsl
test
adc
jno
mov
jecxz
fmull
shl
mov
add
in
xor
stos
and
mov
js
or
fimull
std
sahf
xchg
xchg
leave
imul
rorb
dec
pop
aam
lret
aad
or
adc
ret
mov
mov
push
sbb
ret
out
push
das
bswap
or
aad
cltd
fisubs
mov
lahf
mov
add
out
gs
data16
jle
xchg
and
mov
pop
dec
cmp
lret
inc
dec
sbb
pop
pop
aam
outsb
push
hlt
add
subb
push
jne
jns
cmpsl
mov
fbld
push
mov
add
push
arpl
roll
in
cltd
data16
loop
and
test
aam
sbb
xchg
cmp
aad
mov
inc
pop
mov
int
fsubrl
les
pop
sbb
in
inc
pop
xor
subb
mov
arpl
jno
std
sub
dec
xchg
push
and
shrb
inc
cmp
mov
sbb
xor
push
pusha
test
es
mov
insl
mov
pop
sarl
mov
adc
cltd
test
inc
or
cli
pop
push
pop
sahf
dec
out
daa
sub
lret
rcrb
push
in
lea
lret
sbb
rcrl
mov
fnstenv
cmp
xchg
jle
cld
mov
loop
xor
int
and
scas
arpl
test
add
dec
sub
adc
adc
sub
sub
mov
mov
pop
imul
lock
jp
fsubl
lea
lret
mov
add
cmp
xchg
cmp
rcrb
cld
je
fs
mov
popf
inc
push
loop
repnz
add
mov
aaa
push
add
cmp
push
call
sar
lcall
or
mov
jle
adc
inc
push
cld
shll
in
mov
mov
sti
add
adc
or
add
movsl
xchg
ret
sarl
adc
inc
and
stos
test
aas
add
fnsave
dec
neg
adc
or
sub
push
sbb
call
fisttpll
idivb
enter
outsl
ljmp
push
test
xchg
cwtl
mov
mov
cs
xchg
push
dec
xchg
aad
jp
push
lret
push
inc
inc
rorb
leave
sbb
loope
add
pop
sbb
das
sub
push
push
imul
pop
or
push
icebp
xor
aas
pop
push
push
mov
xchg
or
lods
ds
sub
mov
mov
push
int3
sub
inc
add
mov
cmp
inc
fnsave
sbb
pop
jbe
pop
and
into
sbbb
int
ds
fs
shr
push
fisttpl
imul
add
pop
add
sbb
adc
popa
ret
loop
mov
add
daa
pop
mov
loope
mov
pop
mov
fistpll
push
scas
ds
sbb
das
mov
mov
and
lret
jns
lds
data16
shrb
sub
jbe
inc
sahf
xor
inc
and
aas
stos
test
pop
incl
push
int
rcrl
or
jle
push
lret
stos
outsl
mov
lret
cmp
test
jp
scas
sub
cmp
insl
xorl
inc
push
xor
adc
inc
call
jp
loop
aaa
mov
adc
scas
decb
rcll
add
fwait
push
out
sahf
inc
inc
mov
cwtl
push
test
pushf
ljmp
mov
int3
push
xor
pop
mov
pop
xchg
and
fs
ss
addr16
pop
imul
sub
mov
rolb
cld
mov
mov
or
adc
insl
out
arpl
out
mov
sbb
hlt
mov
sub
and
lahf
sbb
pushf
addl
mov
jle
jg
bnd
mov
scas
cwtl
cli
pop
mov
mov
cwtl
mov
clc
movhlps
inc
xchg
add
adc
imul
std
xor
mov
sbb
push
fisubrl
aam
adcl
fldenv
ja
ja
sbb
bound
xchg
pop
push
test
xchg
sbb
jae
shlb
push
xor
fnstsw
stos
dec
sub
pop
sub
movsl
sbb
mov
adc
ret
adc
add
into
popa
testl
fsubrs
and
adc
lods
xor
adc
dec
add
push
test
mov
mov
and
es
iret
xchg
movsb
insb
sub
ss
dec
movsb
mov
test
popa
mov
push
xchg
and
inc
dec
mov
aaa
movsb
add
pop
fstpl
push
nop
pop
std
std
daa
repz
imul
in
lret
mov
out
icebp
xchg
mov
movl
cltd
in
fistps
test
jbe
scas
lods
lret
adc
hlt
and
cmp
int3
outsb
sbb
mov
pusha
ret
xor
leave
mov
mov
pop
mov
popa
inc
inc
outsl
ja
pop
push
jb
cmc
jmp
inc
popa
outsl
mov
add
mov
out
sub
mov
mov
cmc
cwtl
cmc
fwait
repz
addr16
push
hlt
in
out
sbb
cmpsb
jp
sar
push
xor
xor
xchg
or
fdivr
add
push
adc
in
xor
cmc
leave
inc
mov
push
xchg
push
xchg
mov
out
cltd
aas
sub
inc
push
xchg
xchg
jle
pop
jno
in
jg
jns
mov
mov
push
outsl
fcmovnbe
js
add
scas
cmp
pop
jne
mov
jnp
dec
or
sub
push
add
jmp
and
mov
repz
jmp
jle
xchg
andb
pop
ljmp
inc
push
fsts
mov
incl
dec
cli
xor
adc
dec
jle
pushl
cmc
mov
popf
mov
cmp
shrl
mov
dec
push
pop
inc
mov
pop
sbb
pop
ja
mov
insb
bound
mov
cwtl
adc
loopne
lea
int
pop
fisttpl
sub
sub
imul
push
pop
cmp
mov
hlt
adc
lods
sbb
dec
js
cltd
aaa
adc
in
in
ja
xchg
pop
sbb
negb
pop
sub
gs
loopne
sub
inc
jno
popf
fwait
mov
out
gs
enter
jo
sub
cmp
fdivrl
insb
jnp
je
aas
pop
dec
xchg
jge
insl
jne
pop
sub
jnp
sub
test
add
movsb
xchg
je
add
pop
sub
scas
sub
in
inc
ficomps
enter
add
inc
sarl
lds
arpl
xchg
scas
fmull
cmp
fsubl
xchg
and
cmc
fldl
ja
and
scas
jne
fdivrl
pslld
fstpt
aas
mov
insl
sbb
mov
cmp
stos
std
addb
push
ljmp
lahf
jo
mov
sbb
lret
push
mov
leave
sti
pop
sbb
push
fiadds
pop
icebp
or
enter
filds
sub
push
and
test
xlat
jge
adc
xchg
ss
mov
subb
loopne
jbe
pop
jl
shrb
mov
fcmovnbe
mov
sub
mov
push
lret
icebp
adc
xchg
mov
jae
leave
out
out
or
dec
mov
cmp
mov
jne
ja
rcll
out
fisttpll
xor
push
push
loope
jmp
add
in
mov
cmp
cmp
cmpb
stos
adcb
mov
stos
xlat
dec
push
test
loope
in
js
inc
int
cmp
or
jmp
ret
lcall
inc
and
imul
dec
mov
mov
mov
mov
int3
mov
pop
push
inc
cld
jno
pop
jl
xor
cmp
bswap
mov
add
pop
xchg
or
in
loop
pusha
dec
fwait
mov
mov
stos
sbb
xor
lea
scas
repnz
xchg
push
hlt
cltd
pop
mov
dec
sub
and
fbstp
cltd
and
mov
movsb
lret
clc
xchg
mov
lods
xchg
jne
outsb
ret
cltd
cld
pushf
loope
je
and
fwait
jge
in
test
xlat
jge
in
fists
das
cmc
mov
shrb
inc
outsb
clc
addr16
das
push
shrl
shrb
in
mov
push
push
test
or
imul
das
mov
xor
mov
movsb
or
cmp
dec
test
out
mov
push
outsb
push
loopne
pop
fisttps
and
push
das
push
xor
and
mov
int3
orl
jg
push
popa
xchg
jae
fsub
xchg
outsl
rcr
jl
fmull
jno
mov
movsb
xlat
mov
aaa
pop
adc
adc
xor
push
test
fnstcw
mov
push
xchg
or
rorl
fnstsw
mov
out
xchg
cld
mov
sub
mov
jne
popa
ret
pop
mov
movsl
sbb
gs
int
mov
add
pop
and
sbb
dec
outsl
ror
loope
loope
pop
jo
push
cmp
push
jecxz
nop
jecxz
and
aaa
dec
out
xor
out
xchg
pusha
repnz
jnp
je
add
test
sbb
rolb
movsl
cwtl
ss
lods
popf
fists
pop
addr16
aas
ds
imul
adc
cmpl
jae
or
sub
inc
pushf
lea
pop
xchg
pop
fs
sub
hlt
insb
adc
cmpsb
cmpsb
push
or
or
aas
fsub
add
les
pop
jo
lods
push
push
mov
fcom
popf
lret
ss
xlat
add
add
dec
js,pt
inc
shrb
insb
gs
jmp
aam
sbbb
dec
and
cs
in
sbb
lcall
sbb
sub
fsincos
aam
int3
insl
repz
sub
bound
or
loop
lcall
stos
imul
xchg
lods
les
movl
out
imul
cmp
rcl
or
pop
enter
sbb
and
sbb
mov
aam
cmp
add
neg
pushf
test
rorl
pop
loopne
mov
and
cmpsb
jl
insb
jecxz
popa
fwait
in
cli
xchg
pop
pop
add
lcall
ss
and
mov
pop
xchg
mov
push
cwtl
shufps
les
aaa
daa
roll
mov
pop
loopne
push
and
add
cmc
mov
mov
or
mov
push
sub
jmp
push
or
mov
sbb
inc
jg
addl
rcll
in
adc
xor
and
bound
mov
aaa
into
sub
or
sbb
xor
inc
xchg
mov
sti
and
mov
cmp
xlat
mov
sub
sub
dec
ret
and
xor
sbb
push
inc
cmp
and
or
push
stos
int3
push
stc
andb
repnz
mov
xchg
lcall
test
pop
aas
cmpsl
jb
adc
ffreep
cwtl
movsb
and
shll
adc
and
mov
cwtl
sbb
adc
repnz
das
aaa
stos
in
out
xchg
out
mov
cmpsl
mov
mov
shr
frstor
pushf
fcoms
fisttps
mov
shlb
sahf
ror
nop
ror
mov
rolb
popa
pop
adc
sub
in
out
test
rcl
imul
call
fadd
mov
pop
mov
repnz
add
insb
mov
mov
lret
pop
gs
mov
jb
in
inc
icebp
mov
mov
mov
add
lods
or
xor
mov
sub
jge
cltd
mov
sti
fdivl
inc
push
jmp
dec
add
xchg
inc
dec
lea
out
subb
mov
push
dec
and
and
sub
jns
shll
sbb
sbb
cli
and
jge
shll
jbe
lods
stos
cmc
out
mov
ret
add
add
push
enter
pusha
mov
pop
sbbb
mov
nop
mov
iret
arpl
movl
and
filds
xchg
in
mov
push
dec
aaa
loope
xchg
and
inc
stc
mov
daa
add
lods
add
loopne
pop
cmc
push
and
jge
daa
ds
cltd
inc
jecxz
jmp
fs
push
pushf
mov
mov
dec
push
xor
nop
sbb
inc
scas
fistpll
adc
dec
ss
pcmpeqb
ficoms
and
lret
cmp
mov
and
cmp
ja
cwtl
daa
out
fmull
push
jo
inc
ret
ljmp
ds
pop
test
les
mov
mov
call
cmc
int3
lcall
jbe
pusha
aam
push
xchg
cmpsb
jmp
inc
dec
xor
push
xchg
mov
pop
test
push
nop
je
cmp
call
or
in
lcall
push
sbb
jnp
and
cli
adc
push
xor
shrl
xchg
adc
fbstp
mov
imul
and
sti
std
push
xchg
mov
fildll
mov
cmp
xchg
clc
sub
popa
enter
push
xchg
mov
fs
adcl
orl
inc
lret
jns
cmpsb
inc
lahf
lret
and
add
and
mov
cmp
leave
inc
sahf
or
ds
in
int
xor
jbe
aam
daa
jns
test
dec
sbb
mov
cli
cs
xchg
fxtract
hlt
xor
xchg
push
xor
push
jnp
scas
sti
dec
addr16
pushf
fstps
out
not
popa
or
leave
call
and
xor
sub
sbb
or
popf
ljmp
lcall
shll
stos
push
movsb
out
rcrb
lcall
test
mov
ss
inc
xlat
stos
das
in
loop
mov
leave
scas
call
mov
xchg
sbb
mov
sub
inc
jmp
insl
test
icebp
scas
lcall
rcr
add
repz
xor
sar
sub
test
ficoml
test
fiaddl
fsubl
sub
fsubrp
inc
int3
imul
shlb
push
adc
into
mov
push
dec
jno
das
xchg
adc
push
jae
mull
shll
and
xor
fwait
mov
mov
ret
arpl
mov
jae
jecxz
push
xor
pop
int3
adc
mov
cmpsl
repz
sahf
xchg
mov
loope
aam
cmpsl
divl
pop
and
mov
iret
shrb
test
outsb
pop
ja
fisubl
bound
or
imull
jno
push
fnstenv
sub
dec
clc
pop
mov
pop
mov
jmp
jae
subl
cli
hlt
mov
xor
cmp
lret
jp
dec
lcall
jl
bound
mov
outsb
adc
lret
pop
fwait
popa
shl
jmp
sbb
cmp
mov
sub
leave
ja
mov
in
test
cmpb
cmp
movsb
inc
fisubrs
inc
imul
cwtl
fs
out
ret
fs
ljmp
in
fs
popf
cltd
icebp
sbb
dec
sub
popa
shl
dec
dec
and
lcall
sub
in
fildl
movsb
ss
pusha
mov
outsb
int
int3
insl
ja
jl
sahf
es
std
xchg
nop
cs
cld
pop
cmp
push
lods
mov
inc
fiaddl
fwait
xchg
aad
incb
mov
rorb
jae,pn
fsts
les
sbb
xchg
test
jle
jno
mov
pop
xchg
and
sub
insl
jl
jns
jns
lahf
or
adc
repz
pushf
stc
jns
out
imull
jg
lods
add
icebp
or
jnp
and
mov
pop
mov
adc
cmpsb
cmp
mov
decb
arpl
andb
ffree
mov
popf
jl
and
inc
xchg
cmpsb
push
cltd
shrb
jmp
add
jl
out
sub
shlb
outsl
jne
sbb
inc
inc
addr16
call
mov
pop
pop
mov
mov
mov
lds
pop
imul
loop
sahf
push
mov
sbb
push
mov
cld
jnp
and
sbb
je
rol
mov
xchg
jp
insb
or
movsl
xchg
pop
jle
sbb
mov
push
outsl
mov
xor
in
mov
enter
xlat
dec
mov
shrb
sbbb
mull
adc
out
cmc
imul
imul
mov
jecxz
cmp
dec
ret
hlt
mov
jle
sbb
iret
jne
popf
sub
add
fidivs
test
lods
jae
sti
pop
mov
sbb
pop
sahf
fsubp
das
orb
sbb
mov
mov
push
cmc
mov
out
jo
and
adc
mov
mov
icebp
icebp
cli
sbb
je
push
shll
adc
xchg
fsubrl
mov
out
cli
sbb
xor
test
push
divps
fsts
mov
scas
daa
in
loope
testb
mov
sbb
jg
lods
and
mov
daa
fistpl
out
lahf
sarb
sbb
jne
sti
pop
xchg
out
add
push
ficomps
test
int3
out
outsl
arpl
push
sub
cmp
fisubs
pop
cs
inc
cmp
push
pop
dec
ret
pop
lods
push
dec
jne
ficomps
cmpsb
jmp
int
xchg
mov
or
sub
scas
push
adc
fwait
movsl
fdivrs
std
faddl
xor
jb
outsl
out
in
fimull
cmp
xlat
dec
sub
push
mov
loopne
pop
adc
and
adc
push
sub
mov
movl
dec
das
or
pop
push
jbe
in
dec
inc
mov
pop
or
je
and
xor
addr16
add
rolb
sub
iret
mov
sahf
cmp
inc
aaa
daa
not
xor
xlat
lds
dec
or
adc
xchg
mov
pusha
insb
pop
fisubl
std
xchg
dec
ss
jge
leave
jge
ss
jmp
cwtl
jnp
add
mov
dec
outsl
scas
ja
cmpsb
test
cltd
stc
dec
inc
xor
and
popf
rorl
lret
lock
lcall
dec
ret
pushf
xchg
loop
pop
or
cmp
mov
fcomip
aaa
add
xor
cmp
push
out
mov
out
adc
lahf
pop
in
and
push
or
pushl
mov
push
add
mov
cmpsl
push
jecxz
loopne
lds
adc
mov
xchg
test
mov
push
imul
pop
mov
test
pop
int3
cwtl
pop
dec
jp
out
ja
rcll
and
sarl
js
xchg
cmp
mov
xor
popf
inc
outsb
push
sbb
aaa
loopne
gs
lock
sarl
xchg
cwtl
insl
push
sti
jno
mov
cmp
mov
dec
push
mov
out
fcoms
pop
stos
icebp
cmp
adc
mov
aas
mov
xchg
lret
lret
shl
ds
insl
scas
or
mov
leave
xchg
xor
mov
mov
sti
insb
fwait
mov
push
mov
fidivl
push
imul
movsb
xor
xchg
xor
add
ret
mov
mov
jns
cmc
out
dec
cld
mov
pop
push
out
xchg
adcb
mov
mov
mov
std
enter
xchg
ljmp
cld
xor
fs
cmpsb
and
dec
imul
or
push
lds
push
daa
pop
pop
push
lret
ljmp
cmpsb
arpl
and
dec
xlat
xchg
dec
pop
test
in
popa
inc
push
mov
inc
fbstp
sbb
pop
jbe
mov
mov
mov
and
adc
sti
ja
gs
call
pusha
stc
xlat
xor
ss
shl
xorl
jg
mov
xchg
adc
jmp
push
shll
fistpl
mov
inc
mov
sub
loop
pop
aas
icebp
or
pop
fs
jmp
add
jl
pop
mov
mov
mov
movsl
dec
sbb
adc
repnz
out
jb
test
mov
fwait
das
pop
cmc
mov
sbb
mov
mov
inc
pop
jecxz
jns
adc
inc
fiaddl
jnp
mov
sbb
popa
xor
xor
xchg
push
fisubs
jp
adc
movl
aad
mov
push
dec
and
sbb
mov
xchg
ret
insl
bound
fnsave
push
mov
mov
add
xor
arpl
out
xchg
sbb
popa
cmp
lcall
mov
fcmovnu
aam
adc
xchg
movsb
es
mov
mov
sub
inc
mov
sbb
adc
inc
pop
lahf
adc
dec
mov
es
cld
ret
sub
je
popa
cmpsl
add
sbb
pop
jne
mov
pop
stc
hlt
xchg
out
cmp
bound
mov
mov
inc
inc
jb
mov
add
aam
aas
and
xor
outsl
frstor
notb
push
stos
popa
addl
rcrl
shll
sbb
or
add
mov
clc
jns
out
mov
mov
dec
test
fsubrl
mov
test
jecxz
add
cmpsl
mov
pushf
jns
fwait
sub
xchg
mov
imul
int
neg
inc
xor
je
dec
call
out
insl
sbb
mov
imul
fwait
push
adc
enter
movsl
cmp
add
cs
cmpsb
insl
mov
xchg
leave
lahf
in
out
mov
ffree
cmp
sarb
dec
sub
imul
lret
sub
outsb
cmp
sub
mov
movsb
jne
mov
rcrl
push
push
icebp
mov
mov
push
pop
jnp
in
cmpsb
test
insl
jns
adc
lret
sub
jl
aas
test
mov
pop
imul
loope
data16
shl
mov
jmp
mov
push
das
scas
mov
pop
jbe
fstpl
insb
add
cmp
adc
lcall
push
or
bound
push
aaa
lahf
fsubl
sbbl
in
cltd
inc
gs
dec
ret
adc
loop
dec
mov
push
cmpb
push
out
dec
mov
movsb
inc
int
fwait
and
fnstcw
rorb
jl
orl
pop
lds
aas
rcrl
inc
mov
or
pushf
ss
stos
add
mov
jmp
adc
cld
imul
les
dec
pushf
ljmp
inc
psubsb
int3
inc
jmp
ficomps
aaa
adc
stos
fadd
fs
js
js
dec
jns
lods
cmpsl
rcll
jmp
and
mov
sub
mov
mov
or
out
out
icebp
dec
daa
mov
fcomp
push
mov
call
sbb
das
pop
mov
popa
pushf
add
js
ret
xchg
fisttpll
je
mov
faddl
cwtl
fsubrl
popa
sbb
hlt
jae
test
in
adc
adc
popl
inc
xor
andl
adcb
mov
adc
inc
filds
idivl
icebp
push
sbb
adc
mov
sbb
fistps
lods
mull
les
fucom
mov
aas
fistpll
jl
adc
or
xor
dec
das
sti
push
in
fcoms
jg
sbb
aad
int
pop
xchg
dec
or
sti
lods
inc
call
push
pop
fsubrl
insb
push
leave
ss
sub
in
arpl
mov
sbb
xchg
cmpsl
pop
inc
hlt
out
pop
inc
popa
mov
adc
cmpl
mov
stos
movsb
ja
jae
push
or
hlt
xor
ficomps
rcrl
repnz
inc
addb
dec
xchg
ret
fs
dec
cwtl
pop
sahf
xchg
and
mov
daa
stc
int3
mov
sub
lret
movsl
xor
mov
fstpl
aad
stos
loop
mov
jle
stc
push
push
jl
xchg
daa
cmp
into
mov
loope
out
nop
jo
sbb
pop
mov
xchg
call
clc
call
movsl
loope
jge
sbb
mov
mov
sarb
dec
int3
movsl
out
test
test
push
test
adc
dec
mov
pop
push
pushf
in
cmp
ret
into
hlt
cmp
adc
mov
sbb
lahf
lock
arpl
and
imul
imul
sbb
mov
loopne
pop
pop
lahf
ret
leave
add
imul
popf
je
jmp
xor
into
pushl
and
aas
jecxz
cmp
addr16
les
ljmp
test
fld
dec
xchg
std
cld
xchg
cld
jb
shll
xchg
es
dec
mov
xor
mov
ljmp
mov
sbb
sets
stos
test
orb
pop
sbb
leave
sub
jle
jp
popf
scas
cmpsl
add
sub
cwtl
mov
jmp
popf
test
cmp
jecxz
lret
inc
or
mov
inc
out
lea
push
arpl
add
dec
adc
ficomps
mov
sarb
in
inc
outsb
lock
pop
inc
mov
jo
repz
bound
push
and
in
mov
push
sbb
jns
icebp
sbb
repnz
add
xchg
insb
mov
cmpsb
mov
lods
sbb
mov
xchg
into
jb
push
fwait
addr16
and
pusha
sub
cli
cli
xchg
add
sbb
das
mov
lds
xor
pop
inc
adc
jne
mov
mov
sbb
inc
jge
mov
jnp
pop
les
adc
mov
and
pop
add
shlb
mov
pop
cmp
xchg
outsl
lds
cmp
sar
dec
dec
add
add
pop
cs
mov
jp
divb
repz
call
les
push
xchg
nop
xlat
testl
cmp
scas
cmpsb
aas
fisttps
insl
mov
adc
mov
sti
cmpb
xor
popf
dec
into
je
test
pop
imulb
arpl
lock
xor
jle
test
lret
push
sar
addr16
popf
xchg
sub
outsl
sbb
loope
xchg
sub
mov
ja
mov
jmp
addb
aad
shrb
outsb
push
mov
mov
xchg
mov
mov
repz
mov
jle
out
jle
cmp
pop
lret
addl
inc
mov
pop
movsl
jp
xchg
jno
cld
mov
inc
xor
outsl
lds
pop
add
jnp
ja
or
leave
push
sub
pop
stos
xchg
mov
jb
mov
lods
or
xor
jge
adc
test
fldt
add
popa
sahf
adc
or
xchg
cmp
jo
into
cmpsl
pop
push
std
int
dec
adc
adc
inc
sub
cli
sbb
hlt
sti
insl
stos
testl
out
adcl
rcrl
test
add
jnp
fistl
sarl
add
insb
pushf
or
testl
add
cmp
lds
push
mov
xchg
sarb
out
lods
gs
orl
adc
ds
clc
pop
andl
pop
jns
icebp
mov
sarl
test
and
fs
roll
mov
punpcklbw
xchg
mov
mov
pop
daa
mov
inc
mov
mov
inc
adc
shrb
iret
cmp
push
loope
lock
fidivrs
sbb
pop
push
sub
dec
xor
inc
or
scas
pop
mov
jne
and
scas
cmc
push
stos
lret
push
xlat
lods
rolb
dec
push
addl
sub
cmpsb
sub
fwait
aam
dec
xchg
dec
inc
jle
pusha
adc
pop
xor
dec
testl
mov
xchg
std
cmpl
cmpsb
push
sub
inc
pop
ret
jbe
jge
mov
mov
inc
push
inc
dec
xchg
imul
mov
in
add
dec
xor
call
mov
add
adc
xchg
push
sti
addl
dec
xor
push
int
shl
pop
shl
outsl
shlb
jge
mov
es
std
add
fs
push
jbe
into
mov
fcompp
loop
mov
mov
xchg
and
js
iret
lcall
scas
dec
pushl
sbb
xor
adc
cmpb
out
inc
test
push
xchg
data16
mov
sbbb
pop
ja
fcmovbe
in
in
and
jle
xchg
pop
outsl
out
mov
dec
or
and
and
push
cmp
movsb
jp
xchg
or
into
push
sbb
dec
icebp
and
aaa
shlb
fists
or
pop
jle
call
or
out
or
xchg
lcall
std
mov
dec
add
mov
movl
push
fcmovne
mov
push
xchg
movsl
in
pop
sbb
sub
in
out
sbb
fisttps
adc
mov
sbbb
jg
push
pop
pop
sti
lock
scas
sbb
dec
jns
mov
push
out
mov
or
and
int
add
outsl
stos
stos
mov
test
les
cmovs
mov
sub
js
xor
push
push
addr16
mov
jb
mov
fstl
mov
sbbl
mov
int
scas
dec
loop
je
mov
lcall
sbb
mov
jge
or
sub
shll
adc
dec
add
scas
loopne
cmp
pop
and
mov
add
movsl
xchg
loope
or
jmp
fs
sbbl
out
fldenv
dec
outsl
mov
inc
enter
push
push
lods
sub
aam
stos
addr16
lods
and
roll
cwtl
lcall
fdivl
popa
into
sub
xor
int
xchg
sub
add
sbb
pop
pop
mov
out
jne
icebp
jae
xlat
jp
xchg
push
in
fisttpl
sbb
sbb
cmp
push
movsl
ds
lret
adc
into
pop
ret
dec
xchg
hlt
pop
and
movsl
mov
push
jp
or
jbe
xor
das
sbb
pop
jb
rcl
jge
sub
cmp
xchg
rclb
insl
adc
cmp
xorl
pop
lds
imul
and
pusha
das
cmp
mov
dec
roll
out
inc
dec
push
cmc
stos
add
push
in
leave
movsl
inc
lahf
out
aas
xor
push
xor
xor
and
negl
push
iret
inc
ficoml
repnz
js
shll
loopne
jl
jb
mov
lcall
jns
mov
inc
js
addb
stc
dec
call
lods
xchg
incb
scas
jb
clc
jae
jo
les
push
dec
test
pop
rol
xor
in
imul
jo
lea
dec
inc
sub
fistpl
push
inc
xlat
es
cltd
sbb
mov
push
rcrb
and
or
js
cmp
pop
pop
xchg
and
pop
aad
push
and
and
js
xor
cmp
pop
imul
sti
sbb
stos
mov
roll
mov
push
call
mov
aad
loopne
pop
test
adc
dec
popf
jmp
leave
les
arpl
and
das
jbe
dec
sti
xchg
cmp
inc
insb
mov
cmp
and
fs
inc
lock
jmp
inc
jbe
and
je
into
push
mov
aad
xor
iret
xor
mov
pop
sti
lods
popf
lret
jg
xchg
cmp
adc
lods
sbb
push
and
xchg
orl
sbb
mov
pop
mov
subb
inc
lods
and
xchg
jmp
repz
xor
sub
pop
cmp
lahf
push
mull
ficoml
repnz
icebp
pop
or
mov
dec
in
outsb
ret
fnsave
mov
inc
xchg
rcrb
in
push
es
sub
adc
jo
fxch
je
pop
sahf
daa
cmpsl
daa
hlt
lcall
adc
das
sbb
push
mov
xchg
adc
fiadds
pop
push
or
cli
sahf
pop
int
aaa
sbb
mov
cltd
cli
icebp
repnz
out
out
mov
movsl
jmp
mov
jecxz
xor
pop
fcmovnu
js
mov
push
lret
mov
dec
sub
ja
mov
popf
pop
xor
test
pop
xor
inc
subl
cmp
xor
pop
sbb
dec
cmc
stos
loop
add
stos
imul
das
and
dec
iret
jbe
push
mov
jb
sti
jae
add
lods
xchg
dec
sbb
jmp
xchg
and
lcall
xchg
orl
cmc
mov
ss
jle
cltd
mov
rcll
dec
stos
mov
repnz
push
xor
mulb
inc
adc
add
in
mov
sbb
inc
sub
inc
ss
push
dec
pop
test
lcall
fdiv
mov
test
stos
push
test
je
int
test
cmp
and
int
mov
je
cmp
test
pop
cld
cmp
jge
jecxz
sub
adc
mov
mov
cld
sbb
decb
pushf
add
testl
sub
mov
pop
or
shlb
lods
popf
jns
fiaddl
cwtl
jb
jae
sahf
mov
fiaddl
push
insl
popf
dec
sub
mov
sub
jge
and
and
repnz
or
mov
cmp
scas
out
xchg
push
into
jp
push
push
mov
leave
pop
pop
pusha
mov
js
movsb
stos
roll
inc
in
mov
hlt
aaa
icebp
enter
lea
loopne
js
sub
sahf
cmpl
xchg
cmp
xor
stos
fcmovu
fmul
imul
adc
pop
je
int3
bound
mov
pop
jp
cld
xchg
inc
mov
mov
cmp
int3
push
mov
mov
add
adc
jbe
jge
and
enter
pop
push
insb
push
and
inc
mov
fidivs
fnstsw
enter
or
xor
jmp
and
cmp
jne
roll
test
push
mov
shlb
and
pop
sub
pop
je
mov
rcrb
dec
mov
or
mov
lea
xchg
pop
mov
testl
imul
and
xor
lods
imul
xchg
adc
loope
dec
mov
adc
and
add
jne
cltd
cwtl
in
jg
aas
jl
xchg
sub
push
scas
testb
mov
cmp
sub
dec
jmp
add
add
xor
mov
ret
loop
fistpll
inc
push
mov
lahf
dec
jne
sahf
inc
inc
fists
shr
cmp
fists
jbe
xchg
or
data16
xchg
adc
sarb
das
fstl
adc
aam
cltd
pop
iret
repz
aad
test
scas
mov
push
cwtl
add
pop
leave
sub
sbb
or
mov
jmp
not
cmp
dec
idivb
mov
fwait
aad
dec
mov
lret
jmp
inc
lahf
or
call
jno
inc
pop
dec
xor
sub
xchg
out
fsubl
xchg
push
mov
xorl
xchg
and
xor
pop
jge
jg
dec
push
dec
aad
cmp
xchg
xor
dec
sub
push
shrb
clc
mov
pop
outsl
mov
in
push
jg
shrb
dec
lcall
sub
rolb
in
cmp
push
out
jne
mov
jae
xchg
push
xor
outsl
outsb
cmp
test
mov
test
outsb
stc
or
dec
aaa
test
out
or
fistl
lods
mov
daa
insl
jg
sbb
fsubrl
and
dec
shll
aad
jle
rcrb
and
fisubrl
adc
sub
adcb
cmpsb
or
or
mov
pop
push
movsb
dec
mov
fdivr
and
xchg
stos
mov
sbb
es
jge
push
push
sbb
movsb
mov
xchg
dec
cld
sbb
js
cli
dec
shl
sub
push
sbb
out
aad
arpl
cmpsb
xor
push
fists
sub
or
add
pusha
push
jl
outsl
pusha
lds
shl
cmp
mov
and
ljmp
add
mov
sti
repz
mov
jno
sbb
fsubrs
dec
das
cmp
movsb
ret
jo
les
shlb
testb
add
stc
or
fwait
cmp
mov
dec
sbbl
sbb
data16
pop
jno
dec
sbb
add
flds
sbb
jp
pop
shlb
mov
pop
std
ljmp
pop
mov
dec
sub
inc
fadd
call
adc
shll
inc
mov
mov
test
fisttps
pop
clc
sbb
aaa
adc
test
adc
daa
stc
and
insb
pop
call
mov
and
or
sub
sbb
xlat
mov
push
mov
repnz
inc
adc
dec
ficomps
jg
or
mov
cmp
xchg
pop
icebp
jmp
push
mov
add
sbb
sub
jae
outsb
push
adc
daa
in
add
es
push
xchg
pop
mov
add
cld
mov
lods
outsb
fisubl
push
mov
xchg
mov
sbb
in
iret
add
sbb
mov
mov
test
ret
jle
xchg
inc
push
stc
add
das
push
cmc
shl
lods
dec
mulb
sbb
mov
dec
inc
outsb
add
pop
mov
jge
or
push
add
mov
sbb
adc
adc
insl
sti
sbb
pop
pop
jmp
jae
mov
pop
xor
cmp
dec
cmp
into
cld
and
push
dec
push
push
dec
repnz
adcb
mov
sub
fldcw
fwait
dec
sub
lea
loopne
arpl
or
xchg
jmp
xchg
rorl
aam
inc
xchg
mov
inc
jno
icebp
fwait
mov
mov
scas
and
jmp
mov
push
hlt
and
jb
inc
lods
stc
leave
adc
xor
lret
sbb
es
push
or
and
cmc
imull
mov
mov
xorl
mov
jge
cmp
mov
pop
fnstsw
loop
ljmp
adc
mov
shl
jmp
idivb
xchg
jg
jb
adc
dec
ret
dec
scas
sti
or
mov
xor
iret
jbe
dec
seto
dec
shld
jb
mov
fiaddl
mov
out
mov
test
push
outsl
mov
cli
test
cmp
mov
ljmp
scas
add
dec
push
jb
mov
add
inc
jl
cmp
int
mov
mov
mov
cmpsl
add
pop
ljmp
pmulhw
xor
outsb
push
ja
in
dec
sbb
loop
lods
dec
jo
adc
mov
mov
cwtl
shlb
lock
test
cwtl
jbe
adc
repz
fimull
or
out
sarl
lret
mov
mov
and
cmp
mov
mov
cwtl
jl
cmpsb
mov
arpl
arpl
sbb
pop
xlat
sahf
inc
or
dec
mov
pop
call
mov
inc
xchg
mov
mov
out
arpl
sub
jns
call
data16
sub
hlt
movsl
test
imul
pop
sahf
fbstp
or
push
xor
add
filds
or
sub
xlat
or
cmpsl
push
fldl
inc
orl
xchg
fmull
xor
imul
dec
rol
icebp
cwtl
sbb
jg
hlt
lods
and
xor
cmp
arpl
push
jecxz
shl
cld
push
xchg
xchg
jecxz
mov
ja
add
pop
jecxz
insb
mov
pop
cmpsb
imul
xor
sub
arpl
add
insb
xchg
sbb
push
shlb
mov
xchg
and
mov
lds
test
jp
dec
mov
and
mov
roll
lods
test
mov
xlat
or
xlat
mov
jmp
ficompl
sub
mov
fdivs
or
adc
xchg
cmp
int
stos
xchg
dec
pop
mov
nop
test
pop
or
lret
xorl
or
mov
and
data16
jnp
mov
adc
mov
in
test
adc
jecxz
je
mov
cmp
sub
adc
xor
mov
pop
jp
fucomp
ret
pop
or
sub
push
out
dec
pop
pop
and
dec
jnp
lock
jl
mov
out
push
jno
pop
daa
mov
jge
mov
repnz
push
test
jmp
dec
out
shr
mov
push
loope
pop
into
xchg
stos
jl
jecxz
je
std
fdivl
addb
add
loop
sbb
pop
xchg
or
sbb
or
dec
pop
push
loop
jbe
cmpsb
pop
inc
rorb
and
sub
pop
stos
ljmp
jnp
shll
sub
or
adc
inc
mov
dec
jecxz
data16
cmp
scas
data16
leave
cmp
pop
mov
mov
pusha
test
shl
mov
jle
sti
sub
iret
ds
lahf
outsb
lds
test
mov
shrl
fdivs
dec
in
movsb
and
fwait
lret
ljmp
and
sahf
inc
pop
sarl
das
xchg
dec
xchg
xchg
push
out
push
lock
popl
dec
push
push
mov
test
dec
lret
adc
clc
xorb
dec
and
mov
xchg
lods
sbb
insb
mov
dec
addr16
mov
push
inc
dec
mov
popf
sbb
subl
cwtl
scas
cmp
inc
cmp
mov
aas
jge
idivl
lret
stc
push
out
xchg
xchg
dec
out
push
or
scas
fidivrs
ss
stc
ret
loopne
ficomps
jecxz
mov
or
aad
rol
andl
mov
hlt
pop
and
push
pop
sti
ret
sbb
bound
decl
push
mov
pop
push
push
pop
mov
lret
sub
std
inc
dec
inc
mov
js
fwait
xchg
and
mov
mov
sbb
jae
push
fabs
pop
add
mov
testb
cmpl
push
stos
lea
int3
cmp
pop
mov
cmpsb
lret
adc
sbbl
xor
xor
shrb
pop
mov
cmp
cmpsb
pusha
fwait
outsl
enter
sbb
pop
add
pusha
push
rclb
push
enter
xchg
mov
push
loopne
not
insl
dec
mov
or
pop
cltd
dec
xchg
fcoms
ljmp
jo
mov
xchg
lea
scas
testb
notb
push
mov
hlt
test
lea
jae
das
lea
adc
in
push
ret
xor
pop
push
xorl
pushf
sub
hlt
rcr
add
sub
xor
enter
push
or
xchg
sbb
cld
aad
testb
loop
push
inc
test
fisubs
mov
inc
push
and
jp
scas
mov
push
jb
or
jbe
mov
call
popf
cmpsb
iret
jo
pop
call
mov
sar
jle
lret
sbb
mov
test
loopne
cli
jo
jecxz
movsb
sti
add
in
dec
nop
mov
adc
fmuls
int3
mov
and
push
enter
jne
jle
dec
loopne
cmp
or
xor
jl
mov
fidivs
adc
in
stos
fidivrl
lods
out
adc
ja
lods
out
add
push
das
fstl
iret
addb
or
jge
cwtl
push
jge
rcrb
xchg
jg
pop
mov
out
cltd
mulb
mov
mov
push
test
subl
mov
mov
push
push
dec
mov
xor
idivl
cmp
ljmp
inc
jg
inc
xchg
mov
jae
fldcw
and
out
jae
rcll
xor
sub
push
and
leave
add
push
adc
rcrb
dec
adc
mov
mov
jecxz
enter
inc
xchg
iret
xchg
out
adc
int
das
xchg
lahf
sbb
pop
hlt
xor
sbb
clc
inc
jnp
dec
cmp
or
rcll
sti
pop
js
insl
decb
xlat
xchg
jne
xchg
sub
daa
lea
xlat
mov
out
cmp
imul
es
mov
mov
pop
repnz
mov
aaa
sbb
movsb
xor
and
jo
outsb
xchg
xor
insl
mov
movsb
stos
pop
jl
add
or
jns
sub
mov
xorb
cmpsl
je
lret
jg
add
jp
jno
dec
sbb
xor
mov
filds
mov
lock
les
pop
stc
pop
mov
fs
sbb
loopne
push
ss
lahf
cltd
and
or
das
mov
and
addr16
faddp
or
nop
mov
repnz
out
inc
push
xor
and
push
test
mov
jne
out
mov
cmc
repnz
ds
sbb
ds
loopne
mov
orl
movsb
or
iret
cmpsb
mov
or
es
pop
xchg
add
jnp
rcl
sti
cld
inc
daa
mov
dec
xor
aam
cmp
ud2
clc
add
fimuls
addr16
stos
fs
int
cwtl
shl
jo
imul
imul
cs
stc
cmp
lds
arpl
in
out
fiadds
aad
insl
aas
inc
sahf
inc
fmull
jp
cld
or
ds
sub
mov
cmp
add
inc
jae
mov
cwtl
and
shll
mov
jecxz
mov
test
xlat
mov
stos
push
inc
and
cmp
call
cltd
lods
daa
in
pusha
push
stos
loope
loopne
imul
inc
and
je
or
repz
or
xchg
dec
scas
pop
add
push
fldcw
jge
popa
daa
push
xor
jnp
cmp
jge
mov
rorl
mov
xchg
scas
cmp
rorl
out
shlb
lods
lret
cmp
into
in
ja
dec
xchg
mov
scas
push
sub
push
jns
pop
cmpsb
dec
jno
mov
divb
paddb
dec
sti
xor
cmp
mov
mov
jne
ja
dec
je
cli
stc
iret
jg
and
pop
adc
push
jae
push
lret
cmc
int
mov
mov
sahf
pop
push
aas
push
pop
inc
rolb
mov
push
outsl
xchg
adc
mov
loope
mov
pop
push
mov
mov
adc
pop
ret
fbstp
mov
pop
nop
inc
pop
fnsave
imul
sub
aad
jl
dec
xchg
daa
int3
cmp
mov
aam
test
sub
scas
inc
xchg
rcrl
sbbl
adc
fyl2xp1
ss
add
mov
and
xor
sarl
sbb
in
outsl
sahf
mov
negl
mov
push
lods
pushf
aam
xchg
fmul
popf
sub
sub
pop
iret
adc
jns
ss
adc
mov
pop
dec
or
je
inc
mov
mov
enter
stc
and
sbb
mov
rcll
and
repnz
test
mov
in
sub
pop
popl
dec
stos
adc
sub
push
shr
cmpsl
sarb
cwtl
insb
push
cld
jp
roll
and
dec
fimull
pop
cs
loop
inc
outsb
out
enter
stos
mov
loop
pop
fmull
loop
mov
rcl
nop
mov
mov
inc
imul
push
and
enter
rep
mov
dec
and
mov
imulb
aas
xor
scas
and
loop
sbb
jno
repz
out
mov
je
fcom
pop
incl
stos
inc
pop
cmp
lods
dec
sbbb
xchg
jecxz
js
lods
sub
mov
push
mov
pushf
test
scas
aad
aas
or
sbb
je
mov
push
outsl
lea
inc
cli
inc
xor
inc
jp
movb
fs
and
mov
xchg
sub
add
shlb
in
fsubl
pop
xor
in
and
shrl
sbb
hlt
inc
sti
aaa
jae
pushf
adcl
repnz
das
xor
and
mov
jg
dec
xor
mov
xchg
adc
ja
xchg
xor
cwtl
loop
std
cmp
jnp
mov
and
ss
movsb
in
push
fcmovnu
movsb
cmp
jae
shrl
cmpsb
lret
popf
push
mov
cmp
cmp
out
sar
adc
in
cmp
mov
imul
and
addr16
jno
es
mov
xchg
mov
adc
sbb
add
push
cmp
mov
movsl
mov
pop
inc
inc
idivb
dec
ja
mov
call
mov
fstpt
push
in
sbb
sahf
sub
leave
nop
adc
fs
lret
rcrb
ret
in
and
scas
imul
or
imul
sbb
add
cmp
pusha
sbb
subl
pop
cmp
push
xchg
adc
cmp
mov
popf
ret
repz
cld
mov
ret
mov
sti
js
mov
pop
mov
addr16
pop
cwtl
flds
sbb
movl
inc
cwtl
in
pop
loopne
push
jmp
cmp
in
lret
negl
inc
cmp
aam
mov
sub
imul
mov
sub
sub
inc
push
mov
icebp
mov
mov
dec
mov
mov
mov
mov
clc
nop
ret
aad
and
mov
cmpsb
mov
scas
inc
fcmovne
xchg
mov
popf
movsl
pop
aas
push
push
movsb
pop
rcl
je
mov
mov
stos
fldenv
imul
push
mov
emms
mov
mov
xchg
pop
xor
aas
push
out
leave
add
insl
je
mov
repnz
roll
mov
jo
out
sbb
sub
mov
loope
dec
dec
pop
cmp
xorb
shrl
jno
into
and
stc
popa
mov
xchg
xchg
inc
jg
fadd
pushf
es
fs
outsl
sub
inc
or
fistpl
mov
xor
inc
test
jae
inc
fbld
int3
inc
adc
inc
jmp
in
mov
jne
xchg
outsb
iret
imul
loop
icebp
cmp
dec
adc
sbb
cltd
jmp
xor
pushf
jl
out
dec
cmp
and
shrb
mov
mov
adc
mov
rcr
test
lods
adc
loop
inc
jl
test
and
jle
cmp
jo
mov
mov
shrb
and
jle
add
cmp
outsb
xchg
or
cmp
dec
movsb
mov
inc
stos
push
inc
sub
sbb
inc
dec
mov
pushf
dec
cmp
mov
ds
add
dec
xor
adc
cmp
pop
sbb
dec
add
pop
or
mov
pop
mov
or
pop
std
lods
insb
push
daa
movsl
call
inc
inc
jmp
xor
std
xor
cmpsb
pusha
xchg
test
ret
mov
inc
xstore-rng
cmpsl
add
pop
out
mov
dec
mov
cmpsb
sbbl
rcrb
in
adc
jns
adc
mov
enter
idivl
test
jge
popf
out
adcl
out
or
mov
xor
ret
dec
lret
call
cmp
rcll
add
xchg
add
cmpsb
dec
lsl
push
push
gs
in
jb
cmp
pop
push
xchg
jecxz
int3
sahf
mov
popa
and
mov
push
cmp
dec
or
out
dec
test
jb
ret
mov
add
pusha
hlt
je
roll
je
dec
mov
cmc
lcall
pop
lods
inc
pop
sar
jmp
jnp
in
xor
sbb
adc
xchg
data16
fs
out
outsb
mov
mov
adc
fsubp
test
or
cmp
xor
xchg
ja
xor
inc
or
arpl
sti
push
addb
inc
dec
push
cmpsl
sbb
or
sub
imul
sbb
popf
and
pop
lcall
daa
mov
fmuls
enter
sarl
mov
data16
pop
mov
adc
and
and
xlat
clc
lea
fcomp
orb
int
mov
xor
jne
movsb
add
xchg
bound
xor
add
dec
ffreep
in
xchg
aaa
mov
and
decb
pop
xor
mov
xchg
movsl
loop
and
mov
sti
inc
push
lahf
sub
cltd
das
sub
test
sbb
adc
out
sub
daa
cltd
test
ret
leave
or
fs
push
ret
adc
xchg
mulb
and
jo
fisubs
add
adc
mov
mov
sub
inc
jmp
int3
icebp
cli
inc
push
jle
add
jae
aas
push
fisttpll
sub
sbb
add
iret
cmp
jbe
and
cmc
loope
jno
test
fisubs
nop
cmp
inc
arpl
cs
mov
iret
dec
rclb
dec
xor
in
mov
adc
arpl
bound
out
jne
pushf
or
sub
cld
into
in
add
inc
cwtl
jo
idivl
arpl
aaa
and
mov
ret
ljmp
dec
sbb
int3
sbb
sbb
into
dec
das
mov
inc
scas
adc
gs
dec
ret
dec
es
mov
pop
or
sbb
mov
mov
adc
pop
sbb
das
lcall
and
or
daa
jns
hlt
sbb
dec
and
popa
lods
xor
cmp
sub
ret
push
repz
daa
cs
test
adc
mov
jb
loop
mov
cmp
push
mov
xor
mov
mov
sub
and
cmp
sub
mov
sub
sbb
sub
imul
push
addr16
dec
sbb
call
mov
push
out
push
push
or
iret
sbb
mov
pop
leave
jo
sbb
rclb
shrl
adc
mov
ret
enter
mov
daa
loope
je
out
push
aaa
shll
push
out
pop
inc
cmp
jae
push
dec
mov
insl
jl
adc
mov
ss
pop
fadds
inc
inc
daa
lcall
or
jbe
in
dec
mov
xor
xchg
mov
jl
movsl
aas
pop
icebp
inc
scas
jmp
mov
lret
idivl
lahf
dec
cli
xchg
out
jne
mov
or
aad
adc
mov
push
inc
sub
dec
mov
ja
notb
out
cld
sub
cs
mov
rcrl
rorb
leave
and
xchg
inc
pop
or
aaa
cwtl
scas
xor
loopne
pop
xchg
cs
push
outsb
pop
insb
andb
faddp
popf
mov
xchg
mov
sub
popa
pop
push
lods
adc
push
adc
add
xchg
sti
das
xchg
mov
insb
push
add
pop
mov
jmp
cmpsl
in
repz
mov
stos
lcall
stc
sahf
mov
cs
imul
lret
xlat
out
outsb
and
lret
test
xor
mov
roll
cli
out
pop
pop
mov
movsb
stos
cmpxchg
popa
push
fistps
in
and
repnz
and
imul
and
incl
outsl
jbe
lds
jecxz
inc
mov
sbb
enter
pop
out
xchg
sbb
dec
sbb
sub
xor
test
pushf
jno
jae
mov
push
inc
call
jns
ret
lcall
out
pop
fs
cmp
iret
push
lock
mov
xlat
shl
aaa
sti
xchg
push
test
mov
andl
jbe
stos
repz
pushf
mov
test
rclb
faddl
into
fcoml
fdivrl
push
mov
cltd
nop
xchg
fwait
adc
push
inc
lret
jnp
or
repnz
jp
pop
dec
jg
mov
pop
dec
xchg
scas
push
or
mov
cmp
movsl
pop
in
imulb
out
mov
ficoml
or
repz
jecxz,pt
lock
adc
fisttpl
in
inc
push
aad
addr16
and
scas
mov
cmp
mov
aam
sti
shrb
jbe
or
mov
and
jl
push
add
mov
outsb
push
sbb
je
mov
mov
subl
jne
xchg
xchg
mov
mov
sub
fistpl
les
jge
jmp
dec
push
iret
aad
mov
xchg
xor
mov
int
fiadds
popa
cmc
scas
dec
rorb
mov
popf
pop
testb
jp
push
scas
scas
pop
cld
xor
pop
adc
inc
adc
pop
sti
mov
cmpsl
loope
or
ds
inc
sbb
shll
or
sarl
sub
and
dec
lret
push
mov
ss
jnp
js
xchg
mov
jo
sbb
test
in
rcrb
sti
outsb
stos
icebp
hlt
out
lods
mov
jmp
fists
imul
or
jp
sbb
cmpb
andb
jae
jmp
sbb
sbb
pop
test
lcall
stc
jnp
fidivs
repz
mov
pop
jb
addb
add
dec
dec
scas
call
jle
lret
sbb
lret
test
fists
push
aas
ror
lret
cmp
mov
stos
xchg
clc
dec
out
pop
fnsave
cmpsb
movsb
xor
insl
in
cmp
push
cmp
pop
mov
jae
adc
bound
dec
mov
sbb
pop
ret
pop
xchg
movsb
xchg
mov
in
inc
fimull
cmpsl
mov
out
je
mov
cltd
pop
jg
sbb
xchg
or
xchg
ss
shl
insl
xor
push
sub
pop
decl
cwtl
and
jp
or
adc
mov
jb
out
insb
mov
xor
mov
test
adc
ret
decl
sbb
inc
sub
xor
cmpsl
data16
add
push
fsubl
cmp
cltd
dec
iret
in
es
jns
dec
lods
vmulps
popa
sahf
mov
fcomip
mov
outsl
pop
xchg
push
pusha
sub
test
jg
mov
repz
mov
das
lods
movsb
and
imul
mov
pop
or
mov
lcall
imul
roll
daa
imul
push
mov
mov
lods
xchg
lods
mov
pop
inc
sub
lahf
stc
ljmp
mov
jecxz
fildl
movsl
and
push
mov
std
pop
fimull
sub
inc
rolb
and
inc
pop
icebp
ds
aam
cltd
fs
xchg
fcoml
pop
xor
push
mov
outsl
adc
push
shlb
adc
rorb
scas
into
bound
jp
or
mov
adc
les
aad
fsubr
inc
jmp
mov
dec
andl
mov
push
mov
mov
stc
sahf
sub
ffreep
into
sub
pop
cmp
sub
js
std
push
cmp
push
jb
mov
mov
jmp
cmc
cmpsl
data16
sbb
sarl
jbe
movsb
lretw
loope
aam
call
dec
mov
das
mov
sbb
call
xor
dec
sub
jecxz
sub
cmpsl
mov
sbb
inc
int
call
fistpll
push
mov
xchg
arpl
pop
icebp
xchg
push
xchg
out
sbb
js
mov
jo
aas
pop
sbb
lret
mov
ljmp
push
repnz
sbb
das
mov
cli
test
ficomps
mov
pusha
xor
insl
lods
ss
in
mov
insl
int
clc
cwtl
lahf
in
mov
shlb
rcll
jp
cmovp
jb
shll
cmp
cmp
test
out
lret
dec
cltd
test
fidivs
aad
jmp
lret
test
xlat
dec
das
xchg
sbb
add
pop
jp
xor
adc
subb
pop
scas
stc
jl
xor
cmp
sbb
rorl
mov
pop
or
mov
sub
add
pushf
xchg
shll
or
stc
dec
push
dec
mov
stos
dec
loope
jp
std
xchg
mov
pushf
les
adc
push
in
sub
mov
xor
ror
cmp
dec
cmp
mov
popf
in
sbb
nop
adc
sub
mov
ret
js
stos
testb
adc
pminub
insb
add
shll
pop
cli
adc
shlb
push
cmp
lcall
nop
add
inc
lret
xchg
inc
leave
loope
xor
or
mov
and
sti
jae
adc
notb
fs
push
pop
mov
icebp
push
jb
outsb
jns
imul
cltd
fisttps
mov
xor
pop
cmc
push
push
arpl
xor
in
icebp
push
cmpsb
mov
stc
adc
mov
cmp
ret
xchg
jle
fdivs
movsl
out
xlat
imul
add
dec
mov
stc
lret
jbe
jg
push
xor
das
fsub
imul
and
cmpb
insb
xchg
out
iret
push
add
push
rol
jmp
cld
and
cmpl
sbb
cmp
adc
push
cmp
xchg
jmp
jmp
popl
push
sbb
mov
dec
mov
call
add
outsb
sbb
xchg
sarb
decb
mov
sbb
push
and
stos
xor
movsb
mov
jmp
push
add
dec
sarb
lret
aaa
int
aas
fsubl
xchg
scas
imul
repz
or
sbb
arpl
fnsave
test
lods
cmp
insl
ds
insl
nop
cmp
adc
lea
cltd
xchg
mov
scas
call
fistpll
push
stc
rcll
lcall
xor
loopne
das
lret
lcall
xor
mov
pop
stc
mov
fsts
mov
push
adcb
push
sbb
daa
mov
addr16
pop
xchg
lret
jge
gs
mov
add
jbe
mov
cltd
stos
mul
mov
aas
out
les
mov
jo
dec
fcom
jae
out
mov
repnz
fwait
cmpsl
out
mov
sbbl
pop
mov
repnz
mov
dec
test
jle
test
lahf
add
lods
add
lret
arpl
pushf
movsl
inc
pop
sbb
div
loope
sahf
mul
dec
iret
pop
cmpb
push
cmp
enter
xor
lods
cmpsl
hlt
mov
jg
stos
loopne
push
adc
popa
xchg
dec
adc
inc
jmp
leave
xchg
push
mov
pop
hlt
adc
imul
pop
inc
icebp
add
mov
sbb
mul
xchg
hlt
adc
push
mov
cmp
inc
xchg
mov
pop
subb
fldt
ret
int
cli
aam
pop
inc
push
mov
es
loopne
push
jo
pop
and
jns
std
scas
pop
xor
jmp
addr16
mov
pop
cmc
fisubrl
mov
rorb
push
arpl
inc
stos
mov
cmc
adc
inc
ja
pop
leave
mov
call
shll
jno
call
cltd
es
inc
rolb
stc
xor
das
lahf
cmpsl
xchg
push
and
lods
dec
into
fistpll
int3
lods
das
add
aas
bnd
push
dec
cmp
bound
or
lret
inc
cmp
lcall
jo
dec
dec
and
addr16
jge
pop
jne
push
sbb
adc
aam
push
push
stos
sub
mov
mov
sahf
aad
test
push
mov
test
pop
jae
nop
imul
or
xchg
jle
mov
push
and
dec
shll
es
sbb
xor
add
xchg
fildl
lock
xor
ss
sub
push
push
ljmp
xlat
movsb
sub
push
out
xor
pushf
ret
lcall
jp
xchg
xor
pop
jmp
adc
add
test
in
in
or
jmp
lock
pop
pushf
sysret
mov
dec
call
insb
cmp
cmp
mov
pop
jecxz
or
int
sbb
xchg
dec
adc
pop
popf
call
xchg
out
incl
enter
push
js
xor
popa
push
mov
aaa
mov
fwait
dec
imul
and
in
mov
and
testb
jl
fildl
mov
aad
ret
pop
and
lret
pop
outsl
nop
xor
stc
imul
and
mov
hlt
leave
data16
ret
and
arpl
and
imul
push
push
mov
add
cmp
add
or
and
or
data16
repz
les
std
mov
fnstenv
into
and
pop
testb
fmuls
mov
lret
fistpl
imul
mov
xchg
mov
adc
loop
push
lods
jge
xchg
lds
out
mov
outsb
leave
ret
sbb
sti
mov
rcll
out
hlt
jl
inc
cmp
ljmp
and
iret
repnz
push
aas
out
fidivs
sbb
xchg
sub
in
push
stos
test
xchg
outsl
adc
scas
popf
push
cld
outsb
rorb
fstps
pop
mov
movsl
jl
leave
sub
sbb
sub
insb
sub
dec
or
or
dec
xchg
adc
xchg
adc
pop
aam
mov
mov
sarb
xchg
jae
pop
dec
or
pop
xor
aam
test
mov
lods
sbb
in
pop
testb
in
jp
jns
jg
aad
ret
cmc
or
movsl
data16
lahf
inc
xor
xor
mov
push
sahf
adc
pop
jl
hlt
cmp
mov
test
cs
adc
cmp
aaa
cmp
push
sahf
test
std
jmp
jb
add
adc
lret
mov
add
loopne
repz
shl
std
jne
in
xchg
cmp
out
movsl
fsubrl
sub
ljmp
sbb
repz
mov
mov
mov
inc
pop
sub
xlat
xchg
sub
jno
xchg
or
out
push
jge
repz
addr16
mov
ljmp
pop
or
ret
adc
loopne
mov
mov
pop
pop
lret
xchg
dec
enter
out
stos
fsubp
nop
sub
repnz
or
xchg
out
mov
ja
cli
cmp
negl
ja
adc
clc
mov
push
ret
or
popf
xchg
cltd
icebp
jne
out
adc
out
inc
xchg
cwtl
idivl
sbb
out
push
bound
adc
xchg
mov
stos
aas
insb
rcrl
loope
mov
xchg
xchg
mov
jmp
push
ret
mov
call
pop
mov
inc
test
mov
cwtl
inc
add
fs
test
dec
aad
cltd
sahf
lret
stos
idivl
adc
mov
jecxz
pop
cmpl
add
inc
sub
rcr
mov
je
cmpsb
jo
mov
mov
jo
out
push
push
fldcw
lock
icebp
mov
sbb
xchg
pushf
cld
inc
popl
insb
xor
and
in
cmc
in
arpl
jle
jbe
mov
dec
shl
negb
test
mov
int
insl
inc
inc
mov
mov
xor
cltd
mov
push
xchg
jnp
outsb
xor
dec
add
out
rorl
imul
scas
lods
js
idiv
out
fstps
adc
enter
fnstcw
mov
or
adc
hlt
imul
js
mov
jge
enter
jo
outsb
movsl
add
add
sub
loopne
iret
daa
pop
nop
enter
pop
sbb
xlat
add
rol
jns
sbb
fsubs
push
clc
pusha
ss
sbb
and
sbb
out
testb
in
aad
mov
sub
or
cmc
test
jbe
in
push
cld
cmp
push
mov
into
aam
adc
push
mov
sub
push
fistpll
sbb
adc
xlat
out
push
push
cmpsb
sbb
mov
xchg
adc
in
fiaddl
call
cmc
lods
lcall
insb
or
cmp
stc
push
push
mov
or
cmpsb
adc
aaa
jecxz
aaa
loope
jo
xchg
les
cmp
jb
loop
inc
in
cld
and
insl
sti
frstor
cwtl
mov
idiv
movsb
jbe
mov
cli
adc
popa
mov
leave
popa
ret
jg
and
scas
leave
cmp
adc
js
call
imul
lock
adc
dec
xchg
lcall
adc
inc
dec
inc
mov
jo
inc
add
testb
push
dec
lahf
adc
scas
insb
ja
cmp
xor
call
and
rcrw
je
cmp
lcall
inc
test
loope
aas
je
jl
inc
and
add
rcrb
adc
call
xor
lds
pop
mov
int
pop
jbe
jmp
pop
sti
mov
mov
mov
xor
dec
ret
mov
push
std
adc
push
loop
dec
adc
test
add
movsb
adc
notb
ffree
or
out
inc
leave
cltd
push
jecxz
mov
loope
cmp
or
xor
cmpsb
cli
mov
ret
icebp
mov
inc
pushf
adc
gs
sub
loopne
call
cmp
xchg
push
mov
stc
dec
pop
mov
cmpsl
out
lds
dec
ds
dec
push
xchg
mov
xor
lahf
stos
shlb
imul
inc
sub
ss
dec
divl
add
dec
ret
insl
adc
dec
frstor
popf
cwtl
or
push
jnp
jb
shll
int3
push
out
int3
hlt
cld
movsl
js
push
add
lds
insl
pop
js
or
lock
jae
stos
bound
test
rcl
aaa
fwait
imul
arpl
and
jbe
pop
pop
and
jns
xchg
sub
fwait
mov
cmp
imul
xchg
sbb
mov
pop
jp
adc
popl
adc
sbb
and
nop
aad
or
xchg
jns
jnp
test
fisubs
dec
pop
int3
add
iret
xlat
pop
pop
pop
mov
xchg
jecxz
outsb
cmc
loop
lods
dec
push
or
call
cmp
jl
popa
fs
sti
fldenv
cli
and
push
inc
mov
and
stc
mov
push
xor
pop
xlat
ljmp
dec
xor
repnz
in
pusha
lods
add
xor
push
ret
sbb
jl
xlat
mov
adc
push
fidivs
sbb
push
push
in
les
sbb
push
loop
aas
fnsave
jle
in
cmpsb
adc
add
lock
sbb
loopne
lock
sub
mov
sub
adc
adc
ret
fcompl
in
call
test
jg
mov
lock
hlt
sbb
in
roll
incb
cmp
test
loope
pop
cmp
xchg
jecxz
inc
xchg
mov
ljmp
shrb
arpl
inc
push
dec
xlat
adc
xor
xor
loopne
xchg
push
mov
aam
ret
insb
ds
out
cmp
or
dec
sub
jp,pn
rorl
lods
mov
imul
and
out
xchg
adcb
cmp
bound
jg
dec
mov
pop
xchg
xchg
or
in
jne
test
imul
add
push
mov
shlb
and
inc
addl
out
fcmovb
rcrl
loope
arpl
inc
shll
cmp
imul
inc
popa
bound
test
iret
ss
pushf
xor
cmp
cmp
push
add
jae
insb
popf
sti
sub
sub
pop
aas
mov
mov
test
adc
movsb
dec
adc
sub
mov
data16
add
xlat
lods
lods
loop
pop
jmp
dec
arpl
outsb
pop
test
fldenv
sbb
stos
push
xchg
pop
sti
mov
cmovl
xchg
mov
inc
push
pop
fucom
push
jo
repz
sub
adc
add
sbb
das
adc
add
pushf
sbb
sbb
negl
daa
icebp
sbb
push
ret
adc
faddl
fdivrl
add
fstl
int3
clc
xor
and
js
sbb
add
jecxz
adcb
mov
in
jp
sub
mov
das
mov
aad
mov
add
repnz
stc
rcll
push
pop
cmc
push
mov
adc
inc
adc
jp
daa
insb
mov
or
mov
loopne
add
loope
iret
or
movsl
ficomps
int
fwait
stc
push
mov
push
mov
dec
mov
int3
push
dec
cmpsl
loope
lcall
push
enter
xor
fwait
adc
andl
adc
pop
push
and
sub
mov
fildll
jb
and
push
xchg
lods
roll
dec
mov
xchg
shlb
lret
mov
es
or
and
mov
fildl
pop
xorl
xor
push
cmp
pop
aad
lret
xchg
xlat
xchg
sub
inc
dec
hlt
aam
add
push
push
fyl2xp1
bound
dec
pop
movsl
sub
mov
or
jmp
adcl
imul
sbb
mov
mov
dec
daa
xchg
repnz
lods
mov
push
pusha
push
in
mov
pop
jnp
lds
mov
outsb
push
dec
ss
out
mov
mov
xchg
push
xchg
inc
fs
lret
pop
and
sahf
and
sub
repz
lods
es
out
in
mov
adcb
mov
cmpsl
sub
test
and
and
mov
je
and
pop
pusha
mov
or
ja
mov
out
pop
dec
gs
out
das
addb
push
xchg
mov
mov
bound
add
fcomp
insl
popf
in
xchg
dec
fsubrs
inc
pop
lds
in
insb
or
scas
sub
inc
jns
lods
sub
loopne
jmp
mov
out
mov
mov
jge
push
loop
outsl
mov
and
testl
pop
pop
add
sbb
mov
lds
loopne
lods
hlt
addr16
push
ret
out
icebp
js
jo
mov
aam
xchg
dec
sub
xor
add
fbld
push
jecxz
loope
jmp
mov
push
jecxz
sti
adcl
sahf
rcll
mov
mov
pushf
mov
mov
test
cli
cld
xlat
mov
mov
xor
jg
inc
push
mov
movl
pop
data16
inc
push
fcoml
add
sbb
clc
lods
and
push
out
hlt
mov
aaa
test
dec
mov
sbb
addr16
jmp
lods
jo
lcall
push
xlat
ljmp
popa
xchg
adc
clc
cmp
arpl
ja
add
jo
fistps
or
fimuls
mov
mov
mov
dec
out
out
cld
dec
mov
mov
cmp
rcl
leave
and
mov
push
adc
lret
test
xor
push
mov
int
shll
mov
jae
xchg
dec
pop
cld
ficoms
mov
mov
xor
mov
je
stc
xor
imul
cmp
xlat
push
mov
mov
andl
sub
insl
mov
dec
mov
outsw
repnz
pop
mov
rolb
mov
clc
mov
mov
in
or
into
sub
sbb
sbb
into
and
and
inc
mov
fdivs
test
icebp
jno
mov
mov
dec
jecxz
js
shll
scas
in
lods
pop
pushl
pop
or
stos
fucomip
aaa
mov
mov
jcxz
shrl
pop
sbb
sbb
jp
jp
push
ret
or
mov
insl
add
or
xchg
sti
and
loopne
and
mov
push
cmp
lahf
ret
cmp
jecxz
scas
dec
pushf
nop
xchg
cmp
sub
mov
les
lds
fdivl
pushf
sbb
lcall
adc
test
mov
je
xchg
nop
shll
mov
pop
or
cmpsb
pusha
dec
test
sbb
mov
inc
inc
push
movsb
pushf
jecxz,pn
stos
rorl
dec
mov
gs
sub
push
push
xchg
or
scas
loopne
clc
hlt
rolb
xchg
sbb
std
sarb
pop
xchg
cwtl
and
and
rcrl
repz
and
data16
imul
adc
in
pop
out
out
repnz
mov
xor
cmpsb
clc
cmp
imul
and
sarl
sub
shll
bound
bound
lds
pop
fisttps
jg
repnz
std
push
and
jg
push
adc
xor
fsubl
push
inc
xchg
and
std
jecxz
pop
outsb
inc
out
sub
fadds
sub
fwait
dec
fcmovb
jbe
xchg
push
mov
movsl
xchg
sahf
mov
cli
mov
push
and
iret
sbb
sub
push
push
sub
sbb
std
lock
in
ljmp
push
movsl
fildll
inc
dec
mov
mov
mov
and
xchg
shlb
aaa
cmp
ljmp
inc
data16
int
int3
sub
call
test
or
out
push
cmp
lcall
lcall
pop
mov
jl
xchg
adc
sbb
leave
call
push
jo
mov
inc
mov
push
add
xchg
mov
cmp
and
cmpsl
outsb
fcoml
sbb
lea
aad
cmc
inc
popf
mov
push
sbb
dec
mov
cmp
aaa
mov
data16
push
mov
sub
mov
movsl
cmp
jo
sub
sbbl
sbb
dec
scas
jmp
jmp
jmp
jge
sub
push
jge
icebp
mov
je
or
push
cmp
leave
or
xchg
add
test
push
adc
xorb
loopne
ret
pop
jae
pop
pop
inc
mov
loopne
loopne
jg
sub
gs
xchg
xchg
repnz
jne
xorl
add
lea
mov
push
jo
and
inc
movsb
and
loope
hlt
mov
xchg
cmp
mov
xchg
in
push
dec
inc
cli
mov
icebp
outsb
outsl
lret
mov
cmpsb
decl
cld
rorb
clc
rorb
movsl
mov
xchg
xor
fcmovb
sarb
inc
cmpl
fstps
push
ficoml
xor
or
push
stc
test
adc
shrl
fidivl
enter
push
outsb
or
pusha
inc
daa
add
mov
aas
push
dec
mov
aaa
in
mov
or
inc
push
mov
out
in
fnsave
mov
sub
lret
xor
hlt
outsb
ret
and
adc
mov
pop
mov
cmpsb
aas
lret
xor
insl
inc
into
orb
mov
rcll
fisubrs
pushaw
fcmovbe
cmc
mov
sub
hlt
lret
rolb
lds
pop
imul
add
imul
sub
pop
andb
test
xchg
fadds
loopne
push
outsl
testl
mov
popf
sbb
pop
pop
out
insl
leave
and
fmull
mov
test
lahf
dec
nopl
inc
or
xor
jmp
inc
jg
aas
jb
mov
mov
push
mov
mov
insb
pop
nop
inc
or
fsubs
xchg
xchg
cmp
pop
lock
cwtl
pop
adc
mov
mov
test
aaa
shr
xchg
inc
jae
div
js
dec
lea
lahf
imul
jbe
and
add
lcall
xor
inc
ljmp
dec
xor
adc
ret
cmp
adc
add
pushf
fdivl
mov
sarl
adc
cs
jbe
popa
jo
add
fs
scas
dec
mov
cmp
pop
bound
int3
mov
push
aam
cmpsl
leave
xchg
inc
pop
jge
roll
sub
sub
or
movsb
pop
stc
mov
out
inc
imul
and
insl
ja
adc
sbb
aaa
lds
shlb
mov
sub
jle
mov
mov
enterw
lea
test
add
add
adc
imul
cmpsl
sti
cmc
popf
jne
pusha
sti
cld
sahf
pusha
jb
scas
fldl
nop
divps
imul
std
and
in
sbb
insl
pop
lahf
xor
jge
das
mov
sub
push
sbb
rcl
mov
and
insl
push
pop
push
cwtl
pop
gs
sarl
repnz
jo
mov
movsb
adc
sub
add
mov
iret
sbb
pusha
popa
dec
pop
fldl
lods
jbe
in
xor
scas
loopne
xchg
js
in
push
andl
enter
pop
push
rclb
xchg
cmp
aaa
fstl
fsubl
gs
bound
fs
insl
movsb
adc
sbb
xor
lds
push
push
sub
js
adc
mov
xchg
jp
or
push
or
mov
hlt
sub
call
mov
mov
mov
out
imul
rolb
adc
mov
jne
sub
jae
addr16
cmp
aas
jle
cmpsb
es
mov
inc
mov
dec
imull
nop
mov
in
mov
aas
mov
add
sub
jmp
or
cmpsl
pop
push
aam
mov
pop
sbb
and
inc
movsb
jbe
popa
pop
sbb
dec
lahf
aad
filds
jp
add
sti
mul
pop
push
push
cmp
xchg
das
lcall
sub
fisttpl
xor
inc
xchg
pop
lahf
fidivl
pop
fldt
orl
incb
mov
push
nop
seta
outsl
fs
jne
loop
fisttps
sbb
jae
dec
xchg
sbbl
push
xchg
aas
inc
push
xchg
jb
xor
pusha
cmc
inc
jnp
in
jmp
dec
or
sbb
sub
sbb
scas
mul
add
rolb
not
call
jge
fs
dec
add
pop
aam
push
ret
mov
mov
int3
mov
in
mov
loop
loop
shrl
push
and
fs
iret
or
sbb
mov
subl
adc
jbe
repz
fnsave
add
xchg
ret
adc
movsl
push
pop
gs
sbb
clc
pop
xchg
adc
xor
outsl
out
jecxz
mov
ret
xchg
sbb
pop
lock
out
popf
mov
mov
sbb
stos
in
pop
daa
hlt
jne
mov
adc
stos
sub
cmp
pop
add
idivb
inc
faddl
inc
daa
or
sbb
mov
ss
out
cmc
push
in
xor
inc
in
and
dec
cmp
or
or
push
adc
adc
mov
dec
xchg
jmp
repz
inc
push
lcall
jl
mov
dec
movsl
popa
or
adc
add
and
xchg
adc
adc
jle
pushf
mov
xchg
xor
and
hlt
mov
cli
pop
push
and
stos
ret
add
orl
mov
pop
add
int
negb
jne
mov
sub
je
call
inc
bound
imul
negl
xchg
xchg
fisubrs
popf
movsl
add
clc
pop
ret
and
jne
ja
dec
sub
mov
and
pop
xor
xor
inc
mov
fbld
cmp
or
scas
das
in
inc
shrb
lret
adc
mov
cltd
or
mov
jge
test
pop
cmp
and
ret
rorb
cli
sub
mov
and
aaa
stc
add
lcall
sbb
mov
fs
xor
and
mov
dec
and
or
ret
dec
movsb
pop
cmpb
jb
fcomps
or
mov
lods
mov
dec
push
pop
lret
adc
xchg
mov
push
lods
cmpsl
in
push
dec
cwtl
scas
ret
jnp
or
mov
movsb
test
jo
jmp
xchg
xchg
or
mov
aad
stc
push
leave
sbb
sbb
fstps
add
ljmp
stc
push
hlt
out
xlat
popf
push
ret
call
mov
insl
and
rorl
and
inc
das
iret
aad
mov
xchg
stc
mov
fnsave
int3
and
out
jno
xor
jb
sbb
clc
cltd
fs
pop
jnp
push
rcll
out
xor
jmp
pushl
sbb
jmp
div
xor
rcll
sub
cmp
jecxz
add
jae
or
popa
cmp
lret
jae
sahf
pop
leave
adc
cmp
mov
insb
push
lahf
stos
loopne
dec
sti
aaa
mov
lahf
mov
add
mov
mov
fdivrs
inc
inc
jp
lea
lcall
add
push
mov
dec
xchg
and
adc
sti
in
cmp
lods
sub
testb
lahf
push
jbe
inc
xchg
sbb
hlt
xor
sub
add
js
cmp
cwtl
pushf
push
mov
in
xor
push
adc
outsl
lgdtl
mov
jns
add
lret
shr
test
loope
lret
mov
es
jl
fsubrl
sub
xchg
aad
iret
mov
adcb
inc
add
ret
and
push
and
sbb
jne
xor
js
shll
adc
addr16
xor
test
fwait
mov
in
inc
into
ja
jnp
jl
push
mov
jns
test
jo
aas
sahf
cmpl
hlt
insl
mov
xchg
mov
and
loopne
pop
xor
sbb
add
xchg
out
lahf
inc
fisubl
mov
and
or
mov
or
dec
pop
sbb
push
enter
insl
jb
jo
bound
popa
and
mov
andnps
jecxz
jne
pop
dec
sub
push
stos
mov
mov
rorb
xlat
xchg
push
nop
cmp
shll
inc
repz
sbb
jns
xor
fidivrl
add
dec
dec
add
enter
mov
add
add
inc
xchg
xchg
xchg
stos
mov
in
in
cmp
mov
push
movsb
or
cmc
bound
je
cmc
push
bound
test
push
rcrl
adc
test
jnp
aas
mov
cmp
adc
ret
cmp
stos
push
cmp
xlat
mov
fs
repz
mov
pop
ljmp
cltd
scas
push
jne
cmp
out
fildl
sbb
adc
js
icebp
imul
loope
data16
ljmp
xlat
push
inc
pop
push
testl
fsubrs
mov
dec
aam
push
shl
push
inc
clc
pop
mov
ds
dec
addr16
bswap
cwtl
popf
pop
ret
scas
test
mov
dec
sub
aam
les
push
jp
pop
daa
pop
movswl
test
ret
in
xchg
cmc
das
out
xchg
lds
in
or
cli
inc
sbb
addl
adc
cli
sar
sub
and
cltd
push
or
jbe
inc
cmp
dec
cmp
push
jl
dec
ret
out
mov
int
xchg
daa
jnp
mov
enter
xor
fcomip
push
add
ja
dec
xor
inc
xchg
lahf
orb
icebp
std
mov
mull
fcoms
and
sti
or
das
cmp
dec
mov
jne
shll
xchg
sbb
popf
adc
mov
shl
inc
xchg
repz
mov
xchg
lret
adc
hlt
sbb
push
test
imul
sar
movsb
lock
fadd
lret
mov
add
mull
inc
jnp
ja
xlat
cmp
dec
aad
bound
xor
sahf
jmp
inc
mov
adc
jnp
out
sahf
adcl
ret
out
add
adc
pop
mov
mov
mov
pop
in
ljmp
push
push
test
jmp
sub
into
push
sub
ds
lock
inc
cmp
sbb
test
inc
inc
notl
cmp
addr16
mov
ds
push
sbb
pop
push
and
std
outsb
sbb
cmpsb
mov
and
xchg
sbb
js
call
addr16
orl
sub
xchg
xchg
loop
packuswb
data16
jle
cmp
add
pop
pop
sahf
cli
mov
pop
add
daa
cmpsl
sub
std
mov
push
and
aaa
ja
into
fistpl
lcall
add
negl
pop
cmp
adc
jge
sbb
and
mov
pop
add
jbe
icebp
jecxz
in
sub
sbb
lcall
xorl
lods
or
es
pushf
loop
and
mov
inc
stos
xor
inc
inc
test
rol
in
in
sbb
mov
xor
pop
int
fwait
imul
mov
and
cmp
je
jmp
mov
repnz
push
cmpsl
subl
dec
bound
and
push
sub
mov
cmc
arpl
sar
sub
imulb
add
jp
loop
jne
shr
sbb
adc
cmpsl
sub
mov
xor
das
pop
mov
adc
xchg
std
ja
mov
fnsave
and
test
adc
ret
jne
lea
rcll
pop
and
repnz
aas
and
int3
out
xchg
xchg
sbb
mov
lds
into
in
test
fs
dec
daa
cltd
ret
sbb
enter
cmp
xor
fildll
loop
push
cld
push
lock
fsub
call
xchg
sub
cwtl
add
xchg
pop
sbb
aad
cltd
lods
pop
orl
inc
movlps
lret
movsl
xchg
jo
scas
nop
mov
pop
add
lea
push
xchg
ja
pop
push
sbb
mov
xor
movsbl
mov
dec
adcl
les
loop
repz
pop
sbb
adc
aam
mov
mov
rcrb
inc
das
or
inc
daa
jmp
ficomps
cmp
jbe
mov
dec
add
cld
aad
arpl
mov
gs
lock
addr16
xchg
dec
aas
or
push
or
insl
je
clc
add
mov
jge
int
xchg
into
cmp
pop
mov
cmc
xor
dec
push
movsb
out
call
dec
fwait
ret
stos
sbb
and
call
mov
dec
inc
cmp
enter
subb
and
mov
fwait
mov
mov
fisubrl
ja
mov
push
int
rorl
movsb
mov
dec
dec
clc
in
pushf
inc
in
mov
xor
les
jmp
mov
pusha
inc
xchg
push
insl
cmp
cmpsl
push
loope
add
or
ja
xchg
push
and
loop
cmp
outsb
scas
mov
jmp
mov
and
jmp
jb
aam
jecxz
ficompl
data16
clc
clc
mov
jae
imul
imul
cmp
stos
ds
inc
dec
mov
sub
jae
iret
xlat
sbb
movsl
cmpsb
pop
stos
mov
mov
test
fisttps
and
jmp
cmp
jp
and
mov
jns
pusha
mov
negb
xchg
adc
inc
sub
xchg
push
aad
jmp
mov
adc
lock
lods
add
aad
jecxz
sbb
rcll
cltd
aaa
in
out
pop
lcall
xchg
mov
loope
cli
and
mulb
je
imul
popa
fxch
idivb
sbb
loope
cmp
jg
push
mov
cmc
xchg
movsb
inc
xlat
lock
stos
rclb
pushf
int3
xor
in
mov
mov
inc
mov
xchg
inc
mov
push
out
notl
stos
push
daa
loop
lods
aam
jns
pop
cmc
loopne
lods
xor
cmp
sub
sahf
sbb
mov
mov
adc
mov
sarl
dec
push
daa
push
dec
imul
inc
sti
fdivrl
add
cmp
call
lock
out
or
shlb
cmp
jnp
jl
loope
incl
push
mov
add
popf
fcmovnb
lea
push
push
out
das
or
mov
dec
xor
repnz
jo
mov
aam
stos
jle
fwait
imul
lret
xchg
imul
push
jb
das
sub
push
jns
push
aam
ja
das
mov
add
js
lcall
in
test
das
push
inc
cmp
pop
out
scas
int3
std
jp
mov
xchg
inc
in
cmp
loopne
xchg
push
imul
scas
and
cmpsl
outsl
dec
pop
push
push
js
das
stc
xchg
js
sbb
xchg
fwait
ljmp
mov
mov
ja
mov
aaa
sbb
or
push
add
cmpsl
out
cwtl
cltd
push
icebp
xchg
add
xlat
pusha
outsl
pop
lock
adc
adc
icebp
lret
jae
test
in
shl
mov
push
test
mov
pop
add
push
mov
push
push
test
xorl
sbb
inc
call
jnp
sti
dec
add
mov
dec
cmp
stos
add
inc
aas
fstpt
xchg
pop
mov
es
aad
mov
outsb
cmc
stc
jo
mov
mov
dec
dec
pop
mov
jmp
cmc
cmpb
lahf
ret
add
outsb
pop
mov
std
mov
inc
stc
cmp
mov
test
popl
cli
aad
cmpsb
es
jge
jns
inc
mov
xor
out
leave
mov
ret
fdivs
or
sub
inc
jp
lods
xchg
xor
out
lret
mov
push
fdiv
push
xchg
loop
and
sbb
aaa
hlt
jle
xchg
adc
test
shr
jo
cmp
sbb
push
mov
iret
mov
cmc
xchg
fdivp
push
mov
cmpsb
test
add
add
out
sbbb
adc
dec
test
pop
mov
aam
in
fisttps
mov
adc
filds
or
sbbl
cmpl
mov
and
lods
loopne
inc
mov
dec
in
ljmp
add
mov
shlb
mov
sbb
into
je
pop
pop
fidivs
pop
mov
stos
jno
rcrb
push
push
cli
push
mov
scas
scas
and
jecxz
mov
jl
pop
dec
jle
cmp
psrlq
dec
mov
rclb
loope
pushf
fnstenv
sahf
les
test
push
or
icebp
jg
xchg
arpl
dec
sub
mov
fldenv
mov
xlat
push
add
inc
ljmp
mov
cmp
push
addr16
lahf
icebp
cltd
mov
pusha
push
cmpsb
lods
mov
xor
cwtl
add
pusha
cmpsb
lds
push
pop
mov
xlat
ss
insl
scas
xor
cld
jle
test
xchg
in
shrb
insl
mov
std
pop
sbb
test
aaa
aam
lret
in
pushf
lock
sub
sub
pop
ret
push
cmp
or
iret
jne
nop
sarl
daa
and
xchg
adc
adc
add
cmpb
popf
inc
js
or
popf
fwait
sbb
cmpsb
xor
fld1
and
nop
adc
and
sbb
or
call
fistps
and
sbb
pandn
push
mov
jnp
adc
mov
inc
jge
dec
or
xorl
fnstenv
into
sub
push
test
pop
and
push
dec
decl
add
pop
xor
inc
dec
or
xchg
mov
add
xchg
adc
lds
mov
mov
rol
mov
into
fsts
dec
test
sarl
push
xor
stos
dec
das
push
xchg
pusha
icebp
adcb
aam
sarl
cld
pop
or
into
or
mov
into
sbb
outsl
test
pusha
sbb
test
adc
push
arpl
xor
xchg
add
or
inc
fstpl
mov
mov
addl
repz
xchg
xchg
loop
sarb
push
rcll
pop
das
gs
ret
and
sbb
mov
faddl
es
pop
popa
out
stc
out
out
lock
pop
xchg
lock
sbb
into
sub
iret
jo
pop
ficompl
imul
pop
lcall
xor
scas
dec
jmp
inc
movsb
mov
xchg
adc
sarb
mov
mov
jne
push
xor
outsl
or
lret
js
jne
xor
push
mov
imul
inc
sbb
jno
and
adc
lods
push
aad
sub
and
fnstsw
divl
sub
test
fcoms
inc
dec
or
dec
pop
add
addr16
icebp
adc
cmpb
inc
out
mov
clc
pop
sbb
pop
gs
fwait
orl
dec
adc
andb
adc
sbb
imul
in
sbb
rorl
divb
lock
sub
dec
dec
and
insb
dec
out
bound
test
addb
sbb
pop
aam
xor
fwait
lods
sbb
push
push
pop
das
xor
jecxz
icebp
pop
push
and
fmull
dec
push
dec
mov
xor
fs
ja
int
stc
sbb
daa
fistps
sbb
cmp
cmp
cmc
outsb
pop
sarb
into
push
ret
ret
adc
test
repz
jns
pop
test
data16
jl
iret
test
and
mov
sbb
outsl
mov
bound
or
mov
mov
push
and
shrl
mov
inc
mov
sbb
js
ret
adc
aaa
and
imul
jnp
ret
enter
arpl
aam
mov
lahf
nop
adc
les
mov
mov
and
sahf
fs
pop
sti
aaa
into
and
cmp
mov
xor
mov
pop
je
mov
mov
dec
sub
xchg
cmpsl
inc
sbb
aad
fs
push
icebp
xor
fstpl
add
sbb
scas
sbb
movsb
mov
jge
mov
in
sbb
jo
mov
fucomp
mov
xchg
pop
sub
inc
in
add
push
jl
scas
pop
dec
mov
jno
hlt
pop
insb
insl
inc
in
lds
fbstp
repz
imul
jecxz
mov
inc
mov
fisubs
icebp
loopne
insl
sarb
pop
loope
lods
jp
push
cli
or
shll
inc
ss
fld
xchg
insl
addb
out
out
nop
clc
cmp
in
and
adc
sub
dec
mov
xchg
mov
clc
mov
inc
jecxz
adc
cwtl
psrlw
scas
test
movsb
sbb
sbb
sub
adc
dec
ficompl
sub
sub
jg
mov
insb
jb
dec
sub
xor
dec
and
mov
fs
icebp
cmp
cs
clc
daa
jp
ja
mov
addb
cmp
enter
pop
mov
repz
insl
mov
loope
pop
dec
add
in
shl
test
mov
mov
inc
add
push
mov
sub
push
push
jo
push
daa
loopne
mov
ss
bound
adc
cmpl
outsl
cmp
stc
and
movsb
push
pop
cli
adc
out
loope
adc
xor
fdivl
in
pop
nop
sub
ds
repnz
mov
insb
jmp
gs
pop
aas
cbtw
int3
iret
lock
popa
icebp
vcvttsd2si
in
push
imul
out
push
pop
push
push
or
sub
cld
cmp
mov
adc
xchg
mov
mov
fbstp
cwtl
sub
cltd
mov
bound
nop
inc
pushf
imul
lea
mov
push
test
xchg
testb
daa
das
cmp
inc
add
imul
mov
xlat
das
push
fs
aas
mov
cwtl
mov
adc
lds
add
cmp
adcl
ss
fsubl
fmull
test
cmp
ljmp
ja
jmp
sbb
repz
xchg
and
cmp
dec
ds
xor
scas
pop
pop
lea
js
leave
jb
jns
mov
nop
lods
inc
repz
loop
fisttpl
xchg
jo
ja
jnp
mov
mov
sub
rcrl
or
jp
pop
cmpsl
mov
stos
roll
outsl
mov
rorw
out
push
data16
and
mov
and
mov
sub
lock
add
dec
pop
out
jecxz
sahf
jg
clc
test
pop
rolb
xor
mov
ds
pop
xlat
mov
and
pop
push
cmp
cmc
sti
int3
pop
out
mov
jge
test
and
mov
test
inc
mov
fldt
sub
mov
je
ljmp
mov
push
jp
sub
addr16
aad
xchg
int
cld
loopne
fdivs
sbb
jbe
xchg
mov
push
hlt
mov
lea
cmp
sbb
loope
es
nop
add
cmp
adc
imul
fiaddl
fwait
xchg
jecxz
imul
mov
mov
sbb
mov
popa
xor
sbb
mov
push
cmp
push
mov
push
cwtl
add
xlat
scas
stc
jg
push
mov
idivb
ja
push
mov
ds
inc
rclb
mov
fsubrl
aam
and
mov
add
outsb
add
or
popa
or
fldenv
sbbb
dec
imul
je
sub
insb
cwtl
sub
shr
add
push
cli
mov
mov
test
cmp
xchg
test
cmpsb
rcrb
jno
mov
sub
mov
sub
scas
sub
movsb
dec
jnp
jmp
sbbb
test
sbb
add
movsb
pusha
push
jae
adc
sbb
push
mov
add
push
in
js
stos
mov
inc
cmp
mov
lea
dec
add
inc
lahf
movsl
adcl
xchg
shrl
cmp
fmulp
insl
sub
or
and
sbb
dec
sbb
xchg
sbb
xchg
fmulp
out
push
fldt
dec
pop
lret
or
popf
je
cwtl
mov
jnp
mov
mov
popa
adc
jge
stos
sub
stc
adc
inc
pop
jmp
push
mov
dec
mov
es
icebp
mov
cmp
gs
mov
sub
or
push
or
std
ret
cmp
ffree
pop
sub
repnz
push
pop
cmpsl
iret
sete
aad
or
shlb
sub
shrl
shlb
push
fidivrl
inc
mov
mov
mov
addr16
jae
push
stos
sub
ds
ja
dec
loop
or
adc
negb
inc
shl
push
fwait
scas
add
idivb
int3
mov
imul
mov
fmull
jne
pop
loop
push
add
and
jg
mov
jb
iret
roll
pop
sbb
sti
mov
mov
pop
lock
cmp
mov
pop
out
movsb
orl
das
int3
imul
pop
sub
bnd
rolb
out
sub
shr
cmp
iret
cmp
ret
xchg
xchg
mov
popl
shrl
dec
dec
les
fdivrs
pmovmskb
enter
lods
jl
jecxz
xor
dec
lret
pop
ja
in
mov
jge
mov
cmp
mov
psllw
setle
dec
cmc
xor
inc
xor
mov
test
lret
ds
nop
out
or
outsb
xor
or
incb
xchg
rcl
lret
clc
lods
fmuls
mov
push
jmp
lods
sahf
xchg
cmc
jl
add
sbb
rorl
adc
push
fmul
sti
out
lret
popa
sub
mov
repz
stos
pushf
xchg
ret
ljmp
jge
mov
fsts
push
jl
addr16
push
add
push
pushf
push
push
mov
or
aas
push
cmp
pop
xorb
or
mov
es
sti
xor
mov
pop
lret
es
mov
xor
daa
into
gs
push
inc
inc
adc
jnp
mov
jbe
pop
mov
adc
xchg
add
movsb
bnd
dec
adc
fwait
or
and
testb
insl
xchg
sbb
dec
jnp
mov
mov
jae
mov
test
and
out
xorb
lcall
jo
adc
dec
pop
pop
xchg
or
dec
lret
andl
test
dec
in
adc
sbb
push
loopne
call
mov
mov
cmp
not
cwtl
inc
adc
pop
dec
push
mov
mov
pop
and
dec
pushf
cmp
inc
inc
adc
cltd
fmuls
and
jecxz
test
inc
and
sub
push
test
sub
lcall
insb
daa
neg
dec
std
dec
push
lahf
iret
dec
ror
adc
or
call
lds
test
push
dec
insb
out
pop
ja
daa
jne
imul
mov
in
gs
sti
jg
notb
movsl
push
shl
out
out
mov
mov
fistpl
ror
mov
rcrb
or
mov
mov
inc
in
insl
fisttps
mov
imul
pop
inc
jp
mov
les
leave
mov
mov
jmp
pop
push
mov
notb
fldenv
stos
ret
cltd
mov
call
enter
aam
test
repz
in
jecxz
push
push
cmpsb
lcall
dec
test
xchg
lea
or
out
jb
mov
push
sbb
mov
scas
or
ljmp
adc
stos
in
sbb
outsl
movsl
sbb
stos
nop
cltd
in
mov
push
pop
xlat
movsb
adc
push
inc
jmp
pop
push
xor
inc
addl
sub
addr16
ret
push
stos
jae
push
rolb
cmpsl
push
fcmovnb
ja
cmp
sub
inc
test
mov
gs
sub
jb
loopne
into
leave
jno
jg
ds
out
inc
hlt
shl
imul
out
push
jns
daa
adc
push
inc
rolb
push
xor
movsb
insb
scas
add
in
dec
out
jmp
mov
je
mov
int
les
fcomip
xor
jmp
pop
out
fadds
scas
clc
and
mov
cld
jge
mov
cmp
adc
call
gs
cmpsb
mov
push
ret
test
add
xchg
int
sbb
cs
fsubl
xor
shrb
lock
mov
xchg
pop
push
lcall
int
sbb
iret
js
or
dec
or
out
aam
cmp
mov
outsb
js
cmpsl
aam
mov
mov
lret
fisttpll
ret
add
jns
shrb
mov
je
addb
out
lahf
add
repnz
cwtl
mov
popf
inc
xchg
mov
das
mov
mov
sbb
cmpsl
jecxz,pn
mov
int3
stos
pop
push
fstl
add
xchg
push
jle
in
xchg
fistps
xor
mov
out
or
lret
lods
ss
movsb
mov
loope
push
jns
push
sub
aas
fdivl
mov
outsb
jnp
vaesenc
sbb
push
xor
cs
scas
es
cli
stc
leave
push
and
hlt
mov
mov
sub
cs
xor
sbb
sbbl
lahf
jp
sti
aad
mov
fcmovu
aaa
sub
cli
icebp
ficoms
out
sbb
stos
mov
mov
mov
inc
sbb
repnz
addr16
cs
pop
jmp
lods
clc
jbe
or
fs
js
cmpsl
sbb
lds
or
jecxz
lea
movsb
nop
cwtl
sbb
pop
mov
loopne
dec
inc
in
fs
fisubrl
mov
pop
push
xor
cs
fwait
dec
xchg
mov
sbb
xchg
dec
js
add
or
enter
push
inc
sub
push
pop
fs
lcall
stos
dec
pusha
andl
and
jno
rclb
xor
mulb
sbb
mov
and
lods
cli
sarl
sub
addr16
mov
sbb
subb
aas
das
push
jg
xchg
aas
loope
add
mov
fcmovb
ja
es
in
xchg
in
icebp
dec
pop
aam
push
sub
lods
jle
xor
jbe
jl
iret
push
lahf
movsl
out
rol
push
cmpsl
insl
cmpsl
sar
cmpsb
in
test
aam
mov
cmp
push
shll
sub
push
mov
fisttpl
movsl
mov
nop
jg
and
xchg
int3
out
and
pop
jle
fwait
sub
gs
scas
xor
sub
sub
mov
mov
loop
ficoml
xchg
cmp
cmp
iret
xor
sub
inc
mov
mov
mov
out
adc
mov
xor
lods
daa
in
pop
outsl
xchg
popf
dec
push
and
repnz
js
clc
cld
test
xor
cmp
xorb
mov
jge
inc
fs
jmp
pop
lahf
lret
insb
pop
inc
jl
data16
pop
xchg
sub
xchg
and
rcll
xor
cmpsb
cli
lcall
jmp
lds
js
ja
adc
mov
aas
mov
out
cmp
xchg
inc
cld
xchg
sub
aaa
jmp
sub
cwtl
rcrb
lahf
cmp
mov
mov
shrw
adc
int3
add
or
arpl
mov
inc
mov
into
jne
pusha
mov
cs
jb
sarl
pop
shrd
inc
xorb
fcompl
mov
add
sar
jg
cwtl
out
mov
jne
sbb
mov
fldt
aam
rcrb
mov
push
inc
lret
out
inc
mov
mov
pop
cmp
shrb
out
dec
sbb
stos
enter
xor
mov
test
ds
ljmp
sbb
cmp
or
testl
push
jmp
mov
popa
jg
or
aad
cmp
inc
daa
pusha
and
adc
xor
bound
adc
fsubp
dec
add
or
xlat
movsb
push
pop
mov
das
addb
ja
sub
mov
stc
xchg
add
lods
push
push
bound
pop
lcall
cwtl
pushf
stc
inc
pop
sub
stos
imul
daa
or
lret
iret
daa
mov
clc
je
testl
dec
jp
xchg
dec
jmp
cltd
xchg
and
sbb
movsb
aad
lods
loopne
cmp
pusha
in
outsb
out
clc
pop
filds
mov
mov
les
dec
mov
ret
clc
divb
test
push
jno
sbb
xchg
inc
inc
mov
out
lods
pop
test
jne
incb
jae
aam
add
inc
mov
jge
insl
stos
push
js
jns
lods
sbb
cs
pushf
flds
cmpsl
pop
xchg
mov
sbb
sub
dec
xor
inc
cmp
daa
shll
jmp
out
repnz
xchg
in
es
push
loope
jne
subb
cmp
push
jmp
mov
sahf
xchg
sub
xchg
cmp
cltd
movsb
push
mov
repz
ret
out
push
mov
outsl
mov
das
sub
sub
sub
outsl
idivb
leave
lea
sub
aad
das
stc
in
rol
lret
repz
push
mov
hlt
movsb
pop
cmp
aaa
cwtl
daa
and
or
inc
ja
out
lock
faddl
ret
int
nop
xor
lock
pop
lods
mov
lods
mov
mov
xchg
scas
jne
jmp
loop
in
pusha
ja
dec
daa
stos
xlat
fxtract
cmp
and
aas
test
imul
push
jbe
pop
lret
mov
jno
xchg
mov
mov
add
addb
hlt
mov
jecxz
jb
bound
into
push
xor
into
or
jl
sar
adc
push
mov
dec
cltd
sbb
rclb
std
insl
rcl
jo
push
jmp
inc
and
cmc
cwtl
mov
movsl
orb
cmp
sbbb
out
fdiv
lcall
pop
nop
pop
push
mov
aad
ja
lcall
cli
jo
test
cld
cmc
in
imul
cmp
outsb
test
sti
jne
push
push
xor
fidivl
leave
adc
mov
sahf
fildl
add
mov
les
gs
xchg
cmp
popf
loope
rorl
and
nop
xlat
or
sti
loop
sub
loope
loopne
test
push
add
test
cs
push
movl
fdivr
cltd
rorl
or
push
push
add
cs
in
dec
add
test
dec
adc
xchg
jb
push
push
jns
or
cmp
mov
push
mov
mov
daa
push
cmp
iret
sbb
sbb
mov
push
fmull
or
shlb
repz
push
decl
dec
jnp
and
push
ds
xchg
int
ret
test
cmpsl
sbb
xchg
mov
sahf
adc
movsl
fwait
cmpsl
shll
ret
mov
jecxz
cmpsb
mov
cmp
mov
stos
push
test
xchg
mov
and
xor
and
cmp
pop
mov
enter
dec
pop
cwtl
jb
in
adc
add
leave
inc
mov
leave
mov
pop
cmc
scas
pop
cltd
cmp
jae,pn
adc
dec
lods
pop
mov
push
sub
test
cmp
mov
stos
bound
inc
jno
scas
add
sub
mov
les
xchg
je
orb
mov
mov
sub
lcall
adc
dec
cmpsb
push
sub
cmp
and
add
insb
mov
aam
arpl
add
stos
adc
mov
ds
ret
push
ds
add
in
cs
xor
sbb
cmp
inc
fcompl
xor
jo
sub
push
lock
cmp
xorb
mov
pop
push
cli
test
dec
pop
gs
pop
or
fdivrp
lret
test
xor
push
rorl
sbb
or
js
std
mov
xor
mov
pop
jbe
xchg
jmp
sti
insb
addr16
xchg
lods
xchg
cmp
lretw
mov
mov
pop
test
pop
sub
cs
bound
js
mov
out
test
es
stos
dec
loopne
fwait
cmp
xor
or
jae
int
lret
dec
ja
test
lods
mov
or
fildl
in
outsl
or
sarb
loope
testb
inc
xchg
pop
adc
add
int
icebp
xchg
pop
movsb
repnz
dec
loopne
sbb
xor
xchg
push
rsm
flds
nop
jg
mov
shll
or
xchg
je
xchg
pusha
add
jb
sub
or
inc
data16
cmp
push
fstpl
mov
subl
dec
adc
jl
daa
fdivrl
std
stos
add
xchg
inc
insb
out
fsubl
scas
jno
add
mov
lahf
mov
adc
pop
xchg
cmpl
lret
ret
iret
paddd
pushf
push
fsin
fnsave
or
jmp
jo
jno
or
repz
mov
test
sbb
lds
adc
sar
push
inc
outsl
mov
sbb
ficoms
mov
pop
push
test
in
sub
pushf
clc
popa
std
leave
adc
bnd
int
mov
push
or
dec
sub
popa
hlt
aaa
lret
xchg
mov
inc
mov
test
ret
dec
xchg
out
in
dec
pop
adc
pop
test
cmp
dec
fisubrs
out
bnd
adc
ret
mov
add
pusha
xor
enter
pop
inc
xlat
sbb
sahf
add
inc
lcall
por
arpl
cwtl
imul
mov
inc
add
ds
sahf
xchg
in
sub
into
aad
test
faddl
lcall
mov
jb
dec
cmpsl
test
push
dec
test
jecxz
fstpt
add
push
push
mov
mov
scas
daa
dec
or
sarl
push
testb
mov
fwait
push
sub
adc
ljmp
enter
adc
xchg
mull
inc
jle
pop
jne
stos
mov
jne
xor
jns
insl
dec
cmpsb
or
lock
cmpb
out
pop
outsb
sbb
inc
pop
dec
call
adc
and
sbb
cmp
test
push
pop
push
inc
sbb
lea
jae
pop
mov
repnz
lea
mov
imul
adc
mov
adc
push
lret
mov
ds
fnstcw
fstp
and
push
jp
ja
popf
xchg
dec
lods
clc
lock
cmc
orl
xor
bound
lret
xor
fsubl
icebp
xor
mov
lods
movsl
xor
push
sbb
sbb
repz
aam
xor
and
insb
mov
jecxz
mov
xor
mov
shlb
scas
dec
repz
fsts
push
inc
inc
mov
or
inc
lods
rcll
aas
mov
push
sub
push
xchg
scas
mov
adc
sbb
push
cli
pushl
xlat
jl
repnz
mov
mov
mov
pushf
fistl
pop
stc
add
shl
add
aaa
stos
add
scas
jle
es
pop
dec
mov
add
xchg
mov
fcmove
xchg
jns
shl
cwtl
cltd
xor
jmp
push
dec
insb
adc
ljmp
mov
cmp
mov
cltd
push
sub
arpl
jns
inc
cmp
mov
lcall
add
xchg
xchg
push
push
enter
shlb
sti
shrl
lds
push
sub
jg
and
mov
aam
inc
std
mov
pop
cltd
mov
mov
enter
sbb
daa
sbb
cmp
pop
jbe
pushf
add
or
cltd
push
shrl
xchg
cs
ss
dec
lret
outsb
out
ljmp
nop
hlt
enter
scas
add
mov
sub
fwait
mov
cmp
pop
js
dec
pusha
add
ja
pushf
movsb
pop
xor
clc
lock
inc
or
jmp
cltd
hlt
bound
movsb
add
xor
outsl
and
int3
add
cmp
mov
mov
push
adc
sbbl
pop
xor
stos
push
adc
cli
iret
mov
xor
loope
xchg
xor
mov
loopne
xchg
sbb
nop
lds
xchg
shrl
shlb
cmp
push
pushf
push
xorl
rcrl
orl
inc
cld
and
cmc
fimuls
dec
dec
mov
arpl
jne
mull
adcb
sub
adc
repz
test
xchg
jnp
add
dec
mov
lahf
cltd
into
in
aaa
jb
andb
cs
ret
mov
adc
push
jb
pop
add
repnz
cli
enter
add
mov
mov
pop
mov
imul
pop
orl
ret
out
out
xchg
ror
mov
addb
or
cmp
xor
decb
cld
adcb
insl
imul
mov
adc
hlt
cmp
stc
shlb
jge
js
dec
cmp
xchg
xor
sbb
sbb
dec
or
lret
out
lods
pop
add
push
adc
test
mov
data16
mov
mov
test
sahf
sti
dec
pop
mov
aas
xchg
arpl
ret
cmpsl
mov
adc
fiadds
lret
es
lahf
call
jbe
sub
mov
add
mov
xor
xor
cmp
hlt
test
xchg
repz
hlt
loope
out
mov
cmp
pop
jge
lahf
mov
sbb
out
sub
cwtl
stos
mov
test
jl
lea
popa
push
ja
push
mov
fs
inc
add
mov
mov
ja
ficoms
sub
pop
mov
addr16
mov
enter
mov
cmpsb
mov
lock
pop
rolb
xlat
mov
clc
imul
mov
sbbl
xchg
movsl
add
inc
sub
or
jno
call
inc
rcl
je
and
push
clc
mov
mov
cltd
aam
mov
mov
inc
out
dec
inc
mov
inc
ret
mov
insb
add
int
out
mov
mov
insl
lea
inc
into
jae
mov
loop
or
pop
xchg
int3
sub
mov
outsl
adc
neg
lea
repz
cmp
pop
mov
lds
and
fwait
inc
mov
stc
cld
and
jns
jge
and
inc
cmp
xor
xor
xor
push
dec
push
fwait
pusha
cmp
dec
cmp
mov
mov
lock
mov
mov
mov
outsl
dec
pop
cmp
ss
ret
movsb
xchg
popa
int
sbb
fsub
push
push
jle
test
out
adc
es
inc
pushl
cmc
jge
daa
insb
xchg
pop
xchg
sbb
pop
das
push
scas
mov
femms
mov
je
js
jns
or
inc
xchg
outsb
dec
xchg
push
sti
jne
pop
xchg
mov
stos
inc
xchg
daa
fnstenv
aaa
ljmp
mov
add
ljmp
inc
loop
icebp
push
aas
test
lea
or
jne
add
adc
test
fsubl
ss
sahf
push
ss
jno
scas
lret
pop
jbe
pop
add
jae
out
rcl
pop
or
xor
int
jl
dec
inc
cwtl
xlat
mov
xchg
movsl
add
jnp
push
jecxz
add
fists
out
mov
int3
sub
popf
rcr
xchg
cmp
and
lea
repz
and
loopne
fcompl
int
or
cmpb
pop
pop
pop
mov
insb
xor
jo
ljmp
iret
inc
rolb
lahf
clc
shl
xchg
and
cmp
cmp
lods
gs
faddl
inc
jl
jge
mov
shrb
out
xchg
sub
or
xchg
mov
test
data16
lods
aaa
adc
mov
inc
dec
scas
ret
addr16
xor
sub
xchg
inc
ror
jno
in
aaa
lods
fstpl
xlat
pop
ja
cmp
fdivrs
idiv
fiadds
sahf
lods
sahf
ror
adc
xor
lods
xchg
jmp
divb
or
or
pop
cwtl
outsl
mov
test
jbe
std
test
inc
icebp
jno
mov
xchg
data16
in
test
scas
inc
and
jnp
push
out
pushf
jmp
push
int3
add
daa
push
pop
dec
insl
nop
xor
fadds
sbb
sub
pop
fcmovnu
leave
outsl
das
adc
rcrl
or
scas
repz
or
inc
xchg
xor
pop
jae
or
fimull
out
mov
xor
cmp
push
out
rcrl
inc
fisubl
push
dec
xor
bound
test
cli
jo
out
jns
and
movsl
or
xchg
mov
jne
mov
sbb
jp
repnz
cli
push
cmpsb
jb
addr16
test
fidivl
mov
pop
aas
and
xchg
mov
cltd
sbb
jg
ja
jnp
push
daa
jle
pop
xchg
xchg
add
addr16
mov
xchg
shrl
inc
int3
test
movsl
fisttps
inc
jo
loope
movsb
cmc
repz
pushf
shlb
jg
add
mov
xorb
subb
js
das
mov
jno
lcall
sti
mov
fwait
das
fcmovb
daa
pop
insb
inc
movsb
repnz
adc
fcompl
and
mov
sbb
shrl
jne
mov
xchg
dec
test
sub
rolb
mov
pop
aas
mov
push
cmp
mov
mov
fstl
xchg
daa
ss
push
pop
rsm
mov
jge
ss
shll
int3
xor
mov
cld
jo
xchg
or
mov
int
popf
ja
cmpsl
or
les
lret
mov
or
xor
lcall
cmp
imul
int3
out
imul
les
jmp
cmp
andb
push
and
mov
xor
sbb
divb
pop
adc
popf
push
fwait
inc
leave
call
in
cmpsb
push
push
aas
out
lods
shlb
bound
adc
dec
lret
adc
sbb
fdivr
push
xchg
jbe
ds
hlt
pop
xlat
or
int
pop
push
dec
dec
xorps
subb
std
aad
imul
and
insl
fldl
sarl
test
adc
sbb
sub
fisubl
out
cmp
lock
pop
mov
cmp
loop
incb
test
and
push
clc
sbb
push
or
push
cmp
push
ficoml
aad
stos
int3
pop
bound
adc
cmp
adc
loop
push
sub
mov
icebp
or
sbb
mov
jae
mov
cmp
sbb
ja
cmp
sahf
repnz
add
mov
sbb
es
cmc
cmpb
xor
adc
xor
add
repz
movsb
jmp
test
pushf
jl
mov
sub
sbb
imul
inc
ret
or
cs
mov
mov
adc
fcmovnb
or
xchg
add
fwait
nop
xchg
int3
ja
clc
insb
or
cmc
into
cwtl
lahf
ja
xor
aam
add
stos
in
xor
lcall
cmp
arpl
ljmp
xchg
rol
add
in
popa
sbb
jbe
pusha
rcr
fwait
or
jae
dec
fnstcw
adc
cld
movl
pushf
pop
mov
ja
mov
cltd
cs
scas
lret
insb
cmpsb
fwait
repnz
sahf
repz
out
inc
mov
popf
out
xchg
and
sbb
xor
stc
cmc
lret
and
leave
iret
aad
xchg
loopne
or
xor
mov
out
mov
ficomps
sbb
inc
mov
leave
mov
jge
adc
add
pushw
cmp
nop
add
and
rcll
test
sub
ret
adc
pop
insl
rol
call
jns
nop
push
jmp
pushf
movsb
jl
mov
sub
sbb
push
push
loope
out
mov
sub
mov
mov
addps
add
ss
dec
sbb
outsb
in
jl
stos
xor
shll
mov
jo
fdivs
pushf
fidivrl
inc
or
outsb
or
orb
dec
je
pop
pop
pushl
inc
adc
repnz
out
xchg
jle
movsb
sti
sbb
adc
ljmp
insl
fwait
arpl
jecxz
in
cld
pop
aaa
mov
xchg
stc
scas
andb
sub
inc
cwtl
sbb
lahf
adc
lea
or
pusha
adc
mov
mov
stc
jnp
adc
lea
mov
clc
inc
xchg
cmp
or
in
cmp
clc
scas
in
xlat
inc
xor
sarl
cmc
cmpsl
popa
aas
inc
loop
add
cmp
cmp
xlat
pop
push
fisttpll
in
andb
pop
lahf
stc
scas
lods
js
scas
scas
cmp
pop
cmpsb
pop
mov
pop
cmp
movsb
pop
xor
and
mov
repnz
sub
push
into
sub
divl
and
adc
aad
es
pop
sub
mov
outsl
insl
push
daa
mov
sub
dec
push
cmp
icebp
lret
inc
lahf
sbb
popa
es
push
dec
in
scas
adc
mov
mov
pusha
xchg
and
cli
fsubl
or
pop
xchg
xchg
pop
stc
jo
lods
jnp
jl
xor
cs
and
cmpsl
inc
xchg
lret
xor
rorl
test
cmpsl
loope
loopne
rolb
or
xchg
dec
cmp
mov
sbb
adc
dec
xor
mov
jae
and
fwait
repnz
jmp
mov
add
sub
int3
inc
outsl
inc
sub
xor
or
mov
mov
jl
xchg
test
pop
leave
lahf
bound
push
adcb
sub
dec
push
pop
adc
pop
stos
mov
adc
adc
mov
xor
pop
into
cmc
xchg
popa
clc
jbe
imul
in
je
xchg
pop
out
jne
jle
xchg
imul
int3
mov
inc
dec
outsb
mov
loopne
xchg
inc
dec
mov
into
mov
mov
add
lret
clc
in
shlb
add
mov
cli
xchg
movsw
inc
or
mov
and
into
lret
sub
jecxz
cmpsb
lods
in
sbb
mov
icebp
adc
lcall
jnp
sub
xor
pop
push
sub
popf
push
clc
fnsave
sub
cli
pop
push
mov
dec
mov
mov
mov
mov
ficoms
jne
mov
lret
push
sahf
sub
mov
out
into
jecxz
xor
mov
subl
lea
stos
ret
popa
sbb
jp
ljmp
int
std
xor
testb
add
lcall
bound
pop
pushf
jo
jmp
faddl
imul
rcl
ret
push
jmp
xchg
data16
insb
call
aaa
ljmp
jecxz
fistps
add
jb
cli
je
adc
leave
mov
out
mov
sahf
cmp
cltd
data16
sbb
in
hlt
clc
mov
xchg
cmp
dec
mov
xchg
jnp
popf
ret
clc
mov
cmpsl
mov
mov
aaa
jo
push
std
loop
ret
rcrl
xor
pop
mov
scas
sub
das
jle
std
jne
stos
push
xor
adc
scas
pop
in
int
inc
inc
mov
mov
push
push
push
jb
dec
out
pop
movl
mov
orl
stc
dec
rorl
jno
das
fisttps
jns
cmp
mov
add
jns
push
leave
leave
add
rclb
dec
sbb
or
cmp
loope
cmp
push
decl
sbb
sub
les
and
pop
sub
arpl
mov
or
subl
ljmp
lods
fwait
std
cmp
lock
xor
add
jbe
jns
lret
push
pop
xchg
sub
dec
mov
inc
ret
dec
cmpsl
sbb
mov
jge
jmp
inc
or
mov
mov
add
pop
dec
movsl
mov
dec
xchg
or
imul
inc
and
vaddsd
add
xchg
dec
jns
xor
sti
popa
push
iret
jb
adc
jg
xorps
sysret
lods
lds
add
add
inc
loop
scas
xor
lods
mov
mov
in
fldcw
shrl
and
pop
push
jmp
jne
adc
xchg
sbb
jmp
test
or
or
jo
fnstsw
jns
ljmp
push
adc
les
xor
cld
dec
xchg
iret
adc
inc
sbb
loope
fmuls
mov
dec
in
ja
xor
pusha
sar
mov
lods
pop
int
jle
mov
addb
inc
ss
push
push
push
adc
pop
jae
and
loop
fs
jecxz
push
loop
or
lods
jecxz
stos
out
jns
mov
cmc
xchg
and
fwait
test
inc
jbe
cmp
orl
jmp
xor
and
adc
popa
popf
pop
dec
icebp
pop
or
lea
dec
cmc
push
out
mov
lock
add
test
mov
pop
int3
push
adc
jge
push
dec
movsb
push
push
sbb
xchg
fstpl
and
cs
sub
inc
lds
repz
push
fxch
mov
push
ret
ljmp
ds
into
cwtl
fadds
cmp
mov
aas
subb
mov
movsl
xor
jae
gs
pop
jo
and
xchg
inc
mov
in
sahf
add
cli
imul
imul
mov
cmp
xchg
and
add
add
jns
orb
mov
sub
inc
cmp
imul
sahf
push
fisubs
je
cmpsl
in
or
adc
pop
mov
mov
je
dec
pop
push
fxch
jp
adc
pop
xchg
jl
faddl
or
popf
sahf
js
dec
push
scas
jae
mov
add
aad
mov
adc
jl
jge
bound
xchg
mov
push
outsb
pop
data16
sbb
insl
pushl
rorb
ljmp
push
inc
cmp
mov
mov
sub
xor
inc
lods
call
jnp
xlat
cmp
mov
mov
xchg
shlb
pop
pop
adc
mov
popf
fwait
push
cmp
ja
ret
pop
stc
les
out
xor
cltd
mov
lods
ss
dec
inc
imul
and
imul
fs
push
sub
pop
fstpl
rolb
pop
enter
adc
jnp
outsb
loop
or
push
jmp
adc
outsl
jns
test
test
cmp
clc
sub
add
and
test
mov
lret
and
dec
mov
cmp
adc
mov
stos
iret
cmpsl
js
jb
insl
xlat
nop
lock
out
sbb
inc
in
or
cmp
lea
jo
inc
sbb
sub
push
dec
cmp
dec
adc
out
repz
arpl
fnsave
pop
dec
adc
inc
cld
adc
in
push
xor
jge
sbb
xchg
mov
das
jge
push
loope
rorb
out
mov
movsl
ja
fdivrl
andb
je
das
repz
ret
dec
js
andl
repz
pushf
das
dec
enter
sbb
pop
pushf
pop
enter
out
test
cmpsl
iret
sbb
flds
add
xor
xchg
pop
je
es
nop
mov
xchg
adc
cwtl
fsubrs
call
scas
sbb
xor
imul
jp
jmp
or
fs
and
je
dec
sahf
mov
ss
fldenv
push
adc
ja
movsl
push
lds
add
inc
jge
pop
icebp
leave
pop
insl
addr16
call
mov
cmc
push
xchg
mov
xor
mov
jg
mov
scas
xor
mov
pop
ljmp
cmp
es
dec
scas
lea
push
or
cmp
push
sbbb
rcrl
mov
ljmp
call
enter
ja
mov
xchg
cwtl
lcall
or
inc
jb
sbb
pop
mov
cmp
adc
add
icebp
cmp
add
push
xchg
mov
mov
testl
sub
mov
or
mov
or
mov
pop
push
xor
jno
rclb
test
jp
adc
and
pop
fcomps
fisubs
popf
cmp
subb
mov
pop
int3
in
or
lret
xlat
enter
pop
pop
andl
or
out
and
scas
sbb
xor
mov
dec
fistpll
mov
xchg
and
inc
insb
ret
movl
mov
mov
mov
scas
and
pop
push
pop
or
mov
aad
mov
scas
push
adc
outsb
sbb
cmp
clc
andb
cltd
sbb
lret
mov
je
cmpsl
daa
ret
lret
mov
xor
jmp
jbe
ret
frstor
repz
loope
out
jns
movsb
outsb
fisttpll
sbb
mov
fcoml
and
push
and
jo
mov
sbb
push
out
fldcw
dec
imul
dec
jle
scas
int
out
xor
cwtl
divb
sub
pop
lret
loopne
ja
out
sub
mov
sbb
push
mov
xchg
jo
mov
popa
enter
push
cmp
lcall
test
xchg
call
mov
xlat
leave
cmp
bound
xchg
mov
sbb
xor
negb
jae
jle
sahf
imul
pop
jl
addr16
add
out
dec
inc
test
hlt
cmpsl
aad
test
out
mov
outsb
and
xor
mov
mov
jg
xor
or
dec
stc
sti
lods
mov
cmp
popa
push
add
loop
or
mov
inc
dec
sarl
icebp
mov
imul
stos
popa
cltd
ret
icebp
dec
push
adc
xchg
and
sbb
jo
inc
inc
in
dec
ret
out
ret
xor
gs
lea
push
shl
xchg
mov
movsb
xchg
gs
jg
push
pop
stc
test
incl
dec
mov
and
imul
lahf
adc
jno
adc
xchg
roll
pop
xchg
lds
and
rcrl
sbb
mov
mov
jecxz
mov
xchg
pop
stos
es
outsb
in
hlt
ss
lock
fildll
mov
sbb
adc
in
cmpsl
add
adc
jmp
fwait
mov
ja
mov
cmpsl
adc
jbe
stos
bswap
xlat
out
pop
jge
aam
add
popf
mov
les
and
rcrl
xchg
mov
sbb
fsubs
sbb
mov
sub
pop
fs
movsl
push
movsb
jb
sahf
sbbl
les
mov
out
popf
mov
xchg
dec
jp
js
push
insb
mov
in
insl
lcall
xor
movsb
stos
mov
std
xor
movsb
adc
lods
pop
das
hlt
pop
adc
scas
imul
fsubl
push
sarb
inc
rolb
or
sbb
filds
movb
add
stc
xchg
out
or
cld
mov
call
push
cli
jo
xchg
sub
ja
mov
jmp
push
imul
inc
or
pop
push
ror
js
sti
and
stc
pop
fmuls
fsubrs
aas
jne
test
lret
mov
cmpsb
add
mov
lret
mov
fimuls
mov
fwait
outsb
aam
into
ret
pop
cmp
sub
xor
cmp
stos
insb
push
xchg
ja
nop
aam
pop
js
fstps
adc
stos
dec
xchg
repz
in
push
int
ds
add
andb
addr16
fld
aaa
addr16
aas
mov
dec
jge
mov
stos
xor
adc
adc
js
mov
pop
imul
sub
sbb
in
fs
lock
and
mov
iret
mov
stos
fldenv
fwait
icebp
repz
lea
xchg
leave
jge
jnp
lea
mov
fdivp
lret
lods
mov
rcrl
inc
dec
add
ficoms
mov
mov
push
mov
pop
ficompl
into
lds
pop
fdivrp
nop
sub
sub
cmpsb
xchg
jnp
stc
and
inc
push
sti
addr16
aad
popf
push
mov
shll
shrb
hlt
cwtl
add
push
mov
jnp
dec
mov
je
mov
std
pop
xchg
imul
sub
dec
dec
addr16
sub
sub
cld
lods
aad
icebp
push
icebp
adc
mov
and
fsubrl
orl
rorl
xor
cmp
adc
xchg
shll
mov
movsb
test
out
aaa
cmpsl
mov
mov
repnz
inc
cmp
ficoml
daa
loope
cmc
mov
lcall
rorb
test
call
test
loopne
sub
lahf
in
mov
lods
fildl
jae
lds
push
mov
jnp
int3
jmp
scas
inc
lahf
call
jmp
je
lea
xchg
add
cltd
pop
test
sbb
loopne
jmp
mov
sbb
aas
pop
fisttps
sbb
mov
jecxz
mov
dec
inc
push
imul
out
pop
mov
adc
push
mov
and
cmpsb
jo
jae
inc
push
incl
cltd
loop
or
lods
inc
es
push
pop
inc
jne
lahf
jb
sub
jl
movl
xor
lds
fsub
lods
adc
jbe
decl
pop
adc
and
sbb
lods
fs
bound
push
mov
xor
sbb
inc
jp
and
test
inc
push
sbb
out
in
cli
mov
mov
xchg
es
dec
mov
test
add
aam
xchg
aad
jmp
rcll
cwtl
sub
mov
mov
out
adc
mov
lahf
adc
mov
add
sbb
shr
dec
loopne
leave
pop
jo
negb
out
or
jne
imul
cmpl
mov
loope
movsl
int3
mov
or
lea
adc
mov
aam
mov
inc
dec
movsl
add
xor
mov
movsb
mov
imul
and
shll
xchg
fnstcw
or
adc
push
sti
cwtl
std
pop
jmp
shrl
push
mov
and
pop
push
or
add
rorl
or
push
aam
xor
lcall
data16
cmc
sub
adcb
and
cmp
push
movsl
and
adc
jmp
pop
push
sub
xchg
cvtps2pi
mov
jle
pop
mov
adc
xor
lret
jmp
fisubrl
lret
lods
mov
inc
data16
mov
dec
adc
lcall
shl
pop
add
push
sti
sbb
jge
lds
outsb
sti
icebp
mov
insl
fnstenv
sbb
and
jbe
xor
push
push
cmpsl
ret
ficoml
lock
push
hlt
stos
ret
sbb
popf
imul
pop
adc
popf
hlt
jl
pop
in
push
fdiv
inc
rol
imul
idivb
push
aam
insb
cmp
mov
mov
inc
out
sub
adc
lcall
sbb
cmp
xor
aas
dec
into
mov
mov
and
sub
cli
dec
jmp
stc
xchg
ret
pop
js
adc
aaa
or
mov
push
mov
addr16
dec
or
sbb
cs
jmp
in
pop
call
loopne
int
pop
adcl
lock
push
roll
cltd
loopne
add
subl
jecxz
iret
ret
inc
mov
pop
dec
testb
or
cmc
push
andb
push
cmc
and
xor
xchg
xor
pop
ret
in
mov
out
or
hlt
shl
sub
lahf
mov
mov
pop
out
inc
push
xchg
xchg
pop
or
or
mov
jnp
pop
jnp
jle
scas
sbb
add
xor
ror
mov
mov
icebp
outsb
mov
paddusb
imul
mov
rcrl
inc
sub
dec
xchg
pop
out
arpl
shll
and
sub
xor
mov
xor
add
mov
cwtl
mov
jae
sbb
fcmovnu
xchg
pop
sbb
popl
dec
test
in
nop
ljmp
and
lcall
sbb
insb
dec
and
xor
push
sarb
inc
rorb
add
jl
jbe
in
mov
jnp
xor
or
jmp
jns
lcall
mov
adc
mov
int3
jnp
xor
fadds
mov
mov
mov
hlt
mov
xlat
adc
test
dec
int
inc
dec
nop
jecxz
test
std
cmpsl
pop
sbb
jp
adc
in
jle
pusha
fldl
lcall
cmp
mov
cmpsl
arpl
lahf
js
pop
jnp
mov
scas
sahf
cmp
mov
cmpsb
push
or
pop
sub
adc
adc
cmpl
pop
aam
push
lahf
push
or
cmp
lret
mov
pushf
arpl
test
std
jno
int3
jbe
es
push
mov
ret
and
loop
cmpsb
enter
push
ljmp
loop
sub
inc
repnz
clc
notb
dec
add
jmp
cld
jo
adc
sub
mov
add
test
pop
sub
adc
add
mov
adc
in
adc
fsts
shll
add
shl
jno
insl
cltd
pop
pop
cli
mov
or
pop
mov
fdivrp
and
xchg
or
cmp
lds
xchg
sahf
cmp
mov
pop
js
dec
fisubl
xchg
pop
shlb
xor
mov
in
push
mov
and
dec
ljmp
jne
push
into
mov
sahf
mov
std
xor
shld
rcrb
arpl
xchg
and
int
sub
inc
shlb
mov
loope
out
in
pop
xor
mov
mov
nop
push
out
lock
sbb
cmp
mov
adc
ljmp
mov
mov
aaa
dec
fcomps
and
mov
or
iret
stc
repz
mov
sti
xchg
xchg
xor
push
js
add
pop
sub
popa
dec
hlt
jb
xor
in
sub
jg
nop
mov
xchg
call
add
dec
push
fists
mov
pushf
mov
mov
scas
dec
insl
mov
sub
call
iret
push
daa
lret
popf
dec
imul
xor
ret
bound
add
test
repz
cmp
test
xchg
jns
ja
repz
lahf
sub
imul
add
cmc
shll
xor
jmp
stc
mov
mov
pushf
inc
adc
fucomp
push
rorb
test
aaa
jge
in
lret
fistl
push
sub
xor
or
andl
xor
shll
aas
inc
in
cmp
loope
inc
pop
pop
addr16
lods
inc
inc
mov
mov
les
push
push
mov
lods
xchg
jb
mov
jne
xchg
jo
das
push
orl
mov
add
pop
mov
mov
idivb
cld
roll
xor
push
or
leave
into
fpatan
enter
aad
mov
ficoml
mov
add
loop
push
xchg
or
or
cmc
xchg
sbb
or
leave
lods
xchg
cmp
mov
shlb
imul
nop
lods
insl
xor
fnstcw
test
mov
out
jmp
loope
add
enter
lret
sbb
or
xchg
outsl
cmpsl
add
sub
es
daa
jge
fisubrl
jo
cmc
or
push
jne
jne
push
xchg
xlat
inc
pop
cmpb
test
xor
cmp
cmpsl
lahf
mov
push
and
dec
mov
pop
sbb
sub
mov
imulb
mov
sbb
add
cmp
push
sub
cmp
out
sahf
push
dec
imul
xchg
adc
fadds
out
out
cld
fs
pop
lods
push
mov
and
cmp
aas
pop
mov
and
paddw
roll
and
es
in
pop
jae
mov
addr16
dec
sub
data16
popf
mov
jl
and
lods
push
xchg
jle
xor
or
movsl
andl
mov
pop
scas
insl
jno
scas
loopne
ror
xlat
fcomi
xchg
ret
add
mov
aad
aaa
cmp
pop
lods
jae
imul
cld
mov
sub
cmpsl
orl
and
add
sbbb
add
mov
add
xchg
call
fwait
hlt
xchg
adc
inc
inc
aaa
xchg
add
dec
fwait
out
scas
add
mov
ljmp
fadd
shr
or
lds
insb
scas
lock
ja
lcall
fwait
mov
inc
jns
pop
outsb
ret
shl
and
mov
fistpll
lock
mov
cmp
jl
dec
push
mov
outsb
dec
hlt
dec
pop
push
inc
cwtl
popl
repnz
push
cld
loopne
int
xor
lret
scas
loope
outsl
add
lret
shrl
sub
mov
call
scas
cmpsl
inc
add
clc
cmp
pop
popl
xor
inc
push
lods
and
outsb
mov
iret
cmp
pop
push
mov
push
movsl
insl
push
push
xor
out
callw
add
scas
xchg
and
sub
xchg
cmp
pushf
test
icebp
dec
or
ja
cld
xchg
sysret
ret
movsb
jle
scas
or
cmp
push
in
dec
into
pop
cmp
fldt
cs
roll
push
pop
push
sbb
pop
rcl
jnp
mov
cmp
mov
popf
mov
cmp
pop
std
push
pop
aas
imul
cmp
jmp
mov
lcall
mov
and
push
mov
rcll
sub
scas
arpl
fadds
or
test
outsb
add
or
adc
mov
in
pop
and
movsl
jle
mov
pop
and
xchg
mov
lods
daa
aam
add
in
std
dec
and
mov
arpl
ljmp
push
mov
repnz
jle
aam
popf
nop
add
adc
enter
test
and
dec
sub
jp
ss
pop
xchg
fistps
mov
test
push
ljmp
sub
gs
inc
mov
sbb
fimull
mov
or
cmp
clc
cmp
into
mov
movsl
push
jo
out
ljmp
orb
push
pop
jp
in
out
sub
inc
push
xchg
jnp
in
out
popa
sbb
fldcw
mov
std
sub
aam
jno
xchg
fs
mov
leavew
les
into
cmc
inc
lahf
add
xlat
add
repnz
inc
jns
push
lods
xor
mov
rorl
add
sbb
dec
add
mov
push
aas
cmpsl
sbb
pop
cmp
inc
cmp
das
push
pushf
sbb
push
lods
hlt
pop
js
cmpsb
mov
dec
xor
loope
cmp
mov
jg
add
and
mov
push
sub
jns
jge
mov
jnp
stos
mov
daa
jbe
push
aam
xlat
scas
mov
dec
enter
inc
int
out
sbb
popa
xchg
loop
aas
pop
or
dec
mov
pushf
adc
fsubrs
sub
dec
dec
std
sbb
movsl
dec
push
adc
jbe
aad
or
out
cmp
repz
test
int
cwtl
pusha
push
out
pop
jnp
shlb
scas
int3
push
mov
jb
stos
or
in
dec
push
and
adc
sbb
imul
inc
mov
mov
push
push
push
push
sahf
js
das
ret
loope
or
mov
pusha
jae
in
pmaxsw
cli
inc
jg
sbb
xchg
loop
sbb
push
cmp
clc
sti
inc
sbb
xor
scas
aas
pop
pop
ret
cld
jbe
mov
sub
pop
jnp
aad
xchg
out
les
ret
add
inc
jp
inc
push
cmp
mov
inc
adc
push
cmpb
sbb
fstl
dec
pop
lret
loope
stc
xchg
jae
add
into
push
mov
sti
ret
leave
jbe
add
sub
xchg
lea
ficompl
iret
rorb
push
pusha
mov
xchg
sub
and
add
and
mov
mov
mov
insb
iret
dec
jl
adc
cltd
aam
add
test
lods
cmp
cli
push
bound
ret
xchg
pop
repnz
cmp
repnz
mov
insb
and
int
and
sbb
popf
pop
and
xor
xchg
push
pop
adc
lock
mov
fildl
rol
jmp
lcall
idiv
push
lret
out
lahf
jl
mov
push
inc
pop
aaa
movsb
mov
and
movsb
pop
addr16
fwait
jl
je
and
mov
lods
lods
test
xor
or
call
gs
adc
movsb
mov
repnz
xchg
ja
fiaddl
fwait
pop
ficomps
sbbl
andb
in
pop
ret
jl
push
mov
or
mov
es
sbb
test
int3
jg
pop
dec
repnz
push
xchg
loopw
ds
mov
shl
stc
xor
sbb
jne
pop
in
mov
dec
push
mov
sbb
xchg
inc
xor
adc
mov
and
test
in
jbe
sti
dec
test
lahf
and
clc
addr16
adc
faddl
mov
imul
icebp
clc
xor
adc
xor
add
enter
in
mov
xor
xor
je
js
add
test
out
out
rolb
mov
popl
xchg
mov
iret
shlb
fistl
cltd
fdivrp
jb
add
stos
mov
cli
test
arpl
stos
leave
sbb
fnsave
call
cld
mov
jecxz
add
xor
out
dec
sbb
loopne
xor
addr16
scas
ret
sti
mov
dec
mov
test
dec
pop
stc
mov
jge
ljmp
repnz
int3
lret
jno
sbb
dec
sub
pop
mov
cmp
sub
mov
aaa
pop
int
dec
test
pop
sbb
test
aam
sub
outsl
mov
dec
lret
lret
lock
pop
push
cs
bound
outsl
sub
and
sub
packuswb
lahf
sub
adc
jae
mov
xchg
cmp
sbb
arpl
clc
in
and
jnp
jae
mov
ret
fwait
pop
sbb
movq
lods
mov
fistps
stos
fildl
push
inc
mov
lahf
pop
mov
into
sbb
jmp
inc
jp
outsl
mov
push
scas
repnz
bound
vorps
mov
dec
test
pushf
pop
sub
call
xchg
add
pop
fmull
pop
adc
pop
out
adc
gs
shll
sti
adc
mov
push
stc
movsb
cmpsl
orl
sub
mov
int3
in
sbb
cltd
inc
aad
lock
bound
pop
and
mov
push
dec
pop
adc
lcall
bound
out
pop
sbb
mov
cmp
lods
mov
lcall
add
lcall
mov
mov
out
mov
xor
fs
hlt
fstps
popa
mov
push
xchg
test
loope
sbb
dec
fadds
iret
xchg
test
std
xor
bound
pop
inc
test
add
mov
in
sub
lret
iret
jnp
cwtl
daa
add
push
out
mov
in
das
adc
pop
and
stos
outsl
repnz
adc
sbb
sarb
lret
jns
je
pop
dec
stos
xorb
and
push
cmp
enter
xor
enter
int
sub
sbb
mov
sbb
cmp
dec
jnp
divb
pop
xchg
inc
bound
int3
add
out
sbb
je
ret
pop
test
or
sbb
pop
push
test
imul
xchg
das
or
icebp
fisttpll
xchg
js
lret
sub
imul
mov
pushf
jo
mov
or
xchg
sar
pop
xchg
insl
pop
ret
xchg
jmp
push
push
je
and
mov
or
mulb
stc
fisttpl
mov
movsb
stc
js
mov
xchg
das
clc
or
mov
push
sahf
lds
or
add
push
loopne
cmp
pusha
sub
jmp
pop
pop
inc
inc
arpl
loopne
jl
je
sbbb
fnsave
cmp
test
es
xlat
inc
fisttps
lret
mov
sub
jmp
ficoms
divb
xor
aaa
adc
or
data16
mov
dec
divl
pop
hlt
xor
rcrb
stc
ljmp
lods
hlt
mov
mov
inc
inc
add
lret
popa
xchg
jl
pusha
sahf
mov
dec
hlt
lcall
inc
or
cltd
aam
xchg
nop
add
shll
fucomi
inc
ljmp
aas
int
scas
dec
dec
cmpsb
pop
bound
mov
data16
mov
repnz
scas
add
popa
in
mov
inc
push
sbbb
or
mov
mov
je
std
pop
loop
into
shll
jno
clc
inc
cmp
cmp
dec
leave
pop
icebp
add
sbbl
xor
fdivl
mov
aam
clc
loop
int
mov
cmp
pop
lock
emms
jns
cmp
xor
cmp
fs
test
inc
cmp
dec
xchg
imul
int
inc
iret
lock
out
jl
lcall
xchg
cmp
xor
cs
arpl
xchg
pop
lahf
add
das
jp
jns
add
repnz
dec
stos
add
outsl
negl
xor
sub
mov
ret
inc
push
jecxz
sub
lods
xchg
sub
pop
sub
adc
jb
fdiv
mov
arpl
orb
mov
out
das
sub
mov
inc
ss
mov
loop
std
movsl
mov
xlat
or
lret
test
add
push
pusha
ret
mov
pop
mov
push
out
hlt
aas
dec
mov
loopne
inc
cmpsb
xor
mov
or
insl
xor
and
dec
pop
jo
cmpsl
xlat
fnstsw
mov
cs
imul
lahf
outsl
je
inc
pop
push
jo
ss
adc
jle
fwait
clc
cmp
jg
outsb
scas
adc
stc
push
inc
imul
sbb
mov
mov
enter
mov
pop
jge
out
pushf
xchg
and
popf
dec
add
xlat
mov
add
cmpsb
add
add
xchg
cmc
rorb
mov
push
xchg
lcall
pop
loope
jg
call
xchg
sub
sbb
add
test
pop
jae
out
nop
imul
lcall
testl
xchg
xchg
sub
sbb
rclb
mov
and
jbe
mov
or
xchg
lock
xchg
cmp
ret
scas
adc
and
mov
dec
shlb
jmp
movsb
in
and
xlat
cmc
cmp
jbe
popf
dec
pusha
add
sub
imul
out
inc
push
sbb
clc
inc
daa
inc
sahf
mov
add
cwtl
lods
outsl
jnp
out
bound
jmp
push
cltd
sub
adc
test
sbbl
test
movsl
xor
ret
jl
push
and
and
cmp
and
dec
clc
cmp
and
lcall
imul
mov
dec
scas
shrl
outsl
mulb
ja
push
nop
push
or
mulb
lods
mov
jp
mov
fisubrs
inc
lods
add
dec
jmp
mov
push
pop
iret
nop
mov
movsl
sbb
ficomps
adc
xchg
and
inc
and
xchg
fwait
sbb
push
ja
arpl
rclb
pop
sub
sbb
push
inc
pop
mov
inc
mov
push
mov
add
scas
cli
lret
scas
arpl
ja
sahf
aad
cmp
popa
vmovdqu
inc
std
lahf
lods
push
jmp
mov
cld
sub
shll
pop
test
hlt
in
jmp
fnstsw
out
jno
sub
mov
jnp
sti
fwait
cs
inc
lea
add
out
dec
push
adc
sbb
inc
shll
loop
lds
mov
sarl
pop
mov
iret
adc
sar
sub
es
mov
lods
inc
jp
pop
or
xchg
sti
mov
hlt
dec
lahf
cmp
stc
cmpsb
xchg
mov
outsl
add
or
mov
mov
cmpsb
xlat
int3
das
sub
js
push
js
fcmove
pop
push
fndisi(8087
imul
fwait
js
or
adc
mov
xor
inc
popa
fsubl
loope
fwait
pushf
jge
add
xchg
into
cmc
outsb
mov
push
and
aas
sbb
mov
cmp
ljmp
stos
inc
xchg
mov
flds
lcall
mov
xor
sub
xor
xchg
lock
dec
inc
or
loopne
add
jno
mov
testb
mov
je
enter
ret
rol
mov
inc
test
das
std
imul
testl
inc
xchg
mov
or
sub
sub
je
mov
jnp
fisubs
pop
in
sahf
femms
mov
pavgb
and
sbb
outsb
jb
pop
lds
in
pop
pop
adc
inc
aas
int3
pop
dec
xchg
test
out
pop
add
pusha
jo
fucomp
repnz
pop
dec
inc
push
rorb
pop
jmp
and
outsl
aad
xor
test
push
sti
mov
adc
rcll
fwait
push
jge
out
fisubrs
enter
fiaddl
dec
pop
xor
xor
daa
orl
dec
nop
cmp
cmpsl
cmpsb
sbb
lret
jnp
aas
add
bound
out
ss
mov
push
add
jecxz
sbb
xor
inc
int
int3
add
enter
mov
imul
mov
je
add
inc
movsl
cltd
sbb
push
imul
inc
dec
add
mov
mov
iret
lcall
pop
xchg
pop
int3
loope
out
sbb
adc
fiadds
cmp
jns
ljmp
mov
xor
adc
sub
pop
cli
dec
pop
sub
icebp
movsl
jmp
jp
subl
xchg
mov
test
in
cmp
mov
popf
int
fildll
inc
out
pop
inc
cltd
pop
or
add
sbb
icebp
out
mov
shll
ficoml
cmp
cmp
hlt
lds
and
sub
mov
xchg
mov
test
mov
pusha
mov
fists
in
insl
or
aad
lret
int
pop
movsl
and
shll
cmpsb
lock
push
push
sbb
lahf
sub
aad
test
jo
xchg
fimuls
mov
add
stc
pop
rorl
mov
je
add
add
xchg
cmpsb
pop
repz
mov
dec
int3
cmp
mov
int3
das
sbb
dec
in
xor
roll
add
cmpsb
mov
iret
insb
lds
push
and
push
loop
enter
es
mov
xchg
xor
ljmp
arpl
lods
adc
cmpsl
ss
ret
xor
push
xor
out
pop
add
int
jb
sahf
filds
xchg
arpl
pushf
adc
or
and
xlat
cmp
sub
cmp
jne
lahf
in
mov
mov
adc
mov
xor
das
inc
cwtl
loop
or
xor
clc
cmp
mov
jne
push
out
pop
popf
pusha
dec
mov
test
pop
push
pushf
mov
and
mov
loopne
aam
stc
lret
xor
call
imul
sbb
clc
xor
fwait
popf
and
push
fs
lret
and
or
daa
cwtl
push
jo
popa
icebp
xchg
push
testb
mov
divb
arpl
fwait
rorb
push
mov
and
cwtl
and
dec
aaa
inc
and
js
dec
push
pop
inc
fstpt
in
inc
rcrb
fimuls
dec
mov
jo
jge
loopne
stc
xchg
fists
enter
mov
jp
out
dec
add
pop
dec
mov
mov
push
pop
or
aad
ds
inc
lret
push
pop
test
or
push
push
dec
data16
xorb
pushf
ja
faddl
cwtl
xchg
and
sub
shll
adc
inc
das
arpl
pusha
sub
xor
cli
push
repnz
pop
insl
xor
mov
insb
mov
add
fidivrs
movsb
jne
out
jmp
xchg
or
fwait
inc
cltd
jnp
cmp
fidivl
cmpb
movsb
popf
inc
rorl
mov
cli
push
test
or
imul
xor
pop
pop
pop
int
test
jne
push
shrl
adc
and
ds
dec
int3
out
inc
xchg
inc
mov
cmpsb
add
ljmp
stos
sbb
mov
lret
cmp
mov
xchg
repz
clc
and
popa
adc
movsb
add
in
ss
inc
mov
or
daa
in
mov
sub
out
add
cltd
push
dec
pushf
lea
mov
xchg
push
sbb
cltd
lea
push
andl
adc
pushf
lock
ss
cwtl
lea
and
push
stos
les
imul
jp
xlat
add
lcall
mov
dec
mov
xor
cld
int3
test
in
stos
push
flds
in
ja
jae
dec
dec
dec
jo
loope
mov
jecxz
push
cmp
push
mov
aaa
daa
loop
mov
rclb
cli
fstp
mov
jb
and
icebp
enter
adc
mov
or
mov
jne
mov
inc
daa
test
push
test
out
xchg
dec
cmpb
repz
and
test
push
xchg
mov
push
mov
jp
test
int3
push
cld
stos
dec
sub
add
ja
negl
jbe
mov
ljmp
gs
ret
cmp
adc
dec
in
mov
xor
xchg
enter
out
lret
out
mov
sarb
ret
es
das
sti
roll
xchg
mov
adc
and
sbb
bound
or
fs
movsl
cltd
jo
sbb
ljmp
xor
shrl
mov
jae
cmp
push
nop
in
sbb
jne
dec
sbb
ret
div
aas
sbb
loop
sbb
lahf
jg
xchg
sub
xchg
js
inc
add
add
sbb
int3
aas
test
and
mov
jae
mov
dec
gs
add
xchg
jp
jg
enter
mov
loop
mov
jp
push
lock
lods
xchg
iret
mov
xchg
pop
push
sub
sbb
shrb
jmp
dec
pop
aad
test
jno
insl
jne
out
or
push
icebp
push
fisubl
jno
mov
gs
push
cmpl
test
fwait
cmp
icebp
jb
cltd
jno
lahf
and
loope
jo
and
xor
mov
push
test
js
sti
mov
aam
sbbb
add
popf
xor
xor
pop
jbe
and
push
scas
mov
loop
loop
push
adc
mov
push
cmp
cmpsl
flds
jns
pop
inc
dec
shlb
jmp
dec
scas
fs
and
mov
sahf
std
xchg
mov
orb
adc
popf
inc
mov
pop
jbe
mov
or
and
mov
mov
jge
test
xor
insb
xor
sub
xor
repz
repz
sub
pop
scas
outsb
jb
mov
lret
rclb
jg
push
jb
mov
ret
std
add
jge
dec
in
push
cmpb
mov
rorb
fstpt
jnp
lock
mov
cmp
xor
call
inc
in
push
inc
cltd
data16
lock
sbb
dec
cwtl
sbb
pop
inc
int3
sub
add
clc
mov
mull
flds
cmpb
cmp
rolb
jns
aas
inc
jae
popa
nop
popa
pop
mov
and
fwait
aas
cli
push
cmpsl
xchg
jns
bound
ljmp
nop
clc
loop
in
mov
jb
mov
test
pop
cmpsl
fcompl
xlat
insl
inc
divb
sub
dec
test
enter
sbb
lods
inc
and
pop
cltd
scas
xchg
xchg
in
jle
xchg
sub
cmp
sub
in
xchg
xor
nop
movsl
icebp
movsb
scas
pop
mov
sbb
fiadds
icebp
sub
adc
sahf
sub
mov
dec
mov
out
sbb
popf
loope
test
test
shrb
dec
push
mov
mov
pop
xchg
ret
add
xchg
pop
xchg
mov
jg
pusha
mov
out
and
hlt
test
pop
data16
les
shr
pop
xchg
fs
ljmp
outsl
ret
cltd
xor
test
int3
mov
xlat
lods
xchg
mov
cmpsb
adc
add
push
dec
push
mov
cwtl
sub
or
aaa
push
sarw
daa
mov
test
dec
test
push
rcrb
aaa
sti
mov
adc
in
jp
into
mov
jmp
and
mov
pop
push
inc
mov
mov
fistpl
in
ljmp
in
or
cmp
sbb
fisubrl
dec
stos
push
mov
jp
ret
xor
pop
clc
fimull
and
add
cmp
jae
mov
xor
fidivl
jecxz
cmp
sub
and
lock
loop
pop
imul
dec
mov
push
arpl
xor
decb
sbb
dec
push
xchg
cltd
add
cmp
xchg
test
jne
cmc
jns
push
lcall
mov
addr16
shl
lret
mov
xorl
adc
adc
es
cmp
cmpsl
enter
jp
std
rorl
mov
adcl
add
push
shll
daa
test
out
pop
jmp
sbb
aaa
jae
push
mov
into
and
xchg
and
fwait
repnz
insb
aad
cmpsb
pushf
scas
inc
jl
and
add
rcl
imul
stc
cmpsb
sbb
push
and
mov
adc
pop
fiaddl
jecxz
test
es
push
enter
xchg
sub
pop
bound
mov
ficompl
nop
shll
jg
bnd
fwait
add
dec
andb
popa
pop
stos
pusha
aaa
mov
mov
fstpt
pop
push
arpl
mov
and
sbb
out
loope
pop
dec
addr16
xchg
sub
int
or
pop
mov
stos
jge
imul
or
pop
testl
lds
adc
loop
bound
sub
mov
xchg
imul
cwtl
sahf
sbb
xchg
movsb
push
add
fwait
adc
jo
repnz
mov
stos
fucomip
push
pop
arpl
sbb
aaa
jecxz
jecxz
or
mov
pushf
xlat
adc
xchg
adc
out
jmp
popa
jne
xor
xor
mov
fwait
pop
popa
sbb
inc
test
lods
into
pop
push
mov
imul
clc
fldl
mov
hlt
xor
out
popf
mov
push
aam
subl
add
ret
sub
push
nop
pop
movsb
or
cmp
decb
and
xchg
test
cmp
mul
pop
ret
mov
fsub
pop
dec
adc
or
aaa
xchg
xchg
sub
loop
cli
jl
cld
cmc
idivb
xor
sub
mov
or
cli
nop
movsl
or
inc
or
ja
inc
in
shlb
sub
pop
xor
xor
sbb
loop
adc
xchg
add
in
pop
mov
out
mov
xor
icebp
adc
cli
mov
xor
int
lahf
int
movsb
call
sub
push
jne
sbb
cmp
imul
mov
jge
aas
push
mov
rsqrtps
es
enter
loopne
daa
repz
cmp
aam
loopne
dec
xchg
testb
cmpb
cmp
mov
sbb
pop
adc
fwait
pop
cmp
and
push
rol
lods
icebp
mov
jae
test
mov
xor
push
mov
test
sbb
xor
daa
ret
push
lods
andb
int3
mov
push
adc
mov
mov
add
fsub
out
pop
scas
xor
push
xor
out
outsl
pop
sbb
pusha
adc
outsb
push
es
inc
sbb
sub
mov
adc
mov
stc
cltd
push
test
mov
nop
mov
sarl
dec
icebp
scas
push
xchg
cwtl
test
push
adc
cmp
scas
xor
mov
push
push
and
mov
sub
in
aaa
sub
popf
aas
adc
inc
addr16
mov
xchg
inc
mov
enter
imul
repz
ja
sub
cmp
out
mov
push
pop
sarl
in
adc
xchg
scas
sub
push
adcb
notb
mov
dec
in
mov
add
das
mov
xchg
call
int3
stc
std
push
add
orb
cmp
sahf
jmp
stos
nop
mov
adc
sbb
cmpsl
xchg
push
ljmp
repz
dec
mov
jmp
jbe
in
jno
pop
jecxz
aas
adc
jns
sub
xchg
mov
and
fs
push
or
jnp
jle
push
or
mov
and
jmp
sti
cmp
ss
xor
dec
stc
mov
insb
roll
xor
rcl
lret
xor
sahf
pop
aaa
das
stos
jno
pop
and
mov
popf
call
or
or
inc
clc
iret
ds
imul
adc
jns
mov
or
jb
adc
push
imull
sub
pop
cwtl
rolb
or
idivl
jecxz
mov
aaa
test
in
mov
imul
sub
add
aas
aad
xlat
mov
insl
inc
mov
xchg
mov
jb
mov
push
adc
out
gs
popf
aaa
dec
lock
ficoml
popf
aad
je
push
mov
bound
push
xchg
aam
xchg
mov
adc
push
ja
outsb
cmp
jmp
icebp
or
jo
out
adc
stos
inc
sbb
push
add
add
sbb
cmp
ds
movsb
lret
mov
push
and
inc
imul
xchg
ljmp
in
xchg
pop
cmpsb
stc
cs
add
xchg
push
sarb
mov
inc
lock
jp
ja
loop
pop
or
mov
pop
in
lea
mov
fdivr
pop
xchg
xor
ss
dec
movsl
stc
lods
xchg
pusha
icebp
xchg
notb
and
xchg
sub
fiadds
aaa
pop
pop
sti
movsl
leave
insb
jmp
and
xchg
jp
nop
pushf
and
xchg
orb
xchg
outsl
into
mov
daa
and
xchg
add
jo
and
in
into
incb
iret
call
arpl
xor
movsl
pop
movsb
inc
sbb
test
mov
scas
js
je
ret
jns
inc
adc
popf
push
jnp
fcomps
les
mov
fucomip
cmp
cli
icebp
mov
cmpsl
in
scas
sbbb
test
or
sbb
popa
adc
sbb
out
cmp
leave
add
xchg
enter
or
std
nop
pop
mov
cmpl
xchg
pop
out
mov
mov
cmp
add
std
xchg
pop
orb
push
pop
sbb
pusha
cmp
sub
xchg
js
std
add
int
cmp
sub
dec
mov
sahf
rcrb
mov
cmpsl
mov
rolb
xchg
pop
sub
xchg
pop
fidivs
jp
movsl
and
add
aas
int3
cltd
gs
ljmp
ret
xchg
push
jnp
xchg
sub
call
hlt
push
xchg
jge
inc
jnp
pop
insl
scas
sbb
sub
insb
out
dec
sub
inc
pop
clc
notb
jge
jnp
lds
xchg
sub
jg
es
sbb
and
pushf
ret
cwtl
popa
in
push
shl
enter
adc
cmp
insb
adc
and
cltd
push
ret
sub
and
lods
jae,pn
popa
rcrl
pop
xlat
fbld
popf
jge
sbb
out
xor
pop
pusha
mov
mov
push
int3
jl
sti
fimuls
jge
sub
insl
sbb
jne
sarl
loope
enter
push
lds
popa
ljmp
popa
sbb
int3
scas
out
sarb
call
adc
daa
in
call
jne
push
mov
jg
mov
fsubs
stos
test
rclb
inc
popf
dec
stos
je
loope
aad
mov
mov
out
jae
mov
dec
lret
jge
xchg
push
cmp
lods
adc
pop
in
mov
jp
lods
dec
outsl
cmp
and
in
mov
pop
cmp
dec
test
in
cmc
out
mov
fdivrp
add
js
push
xchg
lcall
in
push
out
sbb
adc
outsl
dec
pop
inc
xlat
popf
dec
out
push
gs
test
xchg
mov
mov
jb
pop
jecxz
lods
xchg
ss
inc
mov
xorb
mov
mov
adc
mov
fldl
mov
leave
fists
inc
fcomp
ficomps
jmp
sti
jecxz
pop
aaa
out
add
dec
imul
mov
or
bound
and
xor
dec
mov
xor
pop
and
fisubrl
fnstsw
pop
xchg
xchg
and
aas
sub
cltd
loopne
cld
pop
pop
pop
popa
push
fldcw
jle
or
gs
xchg
adc
and
mov
lea
imulb
mov
aas
out
ljmp
in
xlat
loopne
sti
pop
out
xchg
adcl
jmp
repz
dec
cwtl
adc
mov
fwait
sub
inc
imul
out
dec
pusha
scas
lret
lock
mov
mov
out
jns
call
lock
cmpsl
in
push
jnp
push
mov
pop
sub
and
js
dec
mov
adc
ret
sbb
pop
inc
in
js
mov
xor
mov
mov
adc
jle
or
xor
rcl
lcall
inc
inc
pop
cld
push
bound
in
adcb
add
mov
fdiv
xor
loope
push
addr16
push
pop
lods
sbbb
pop
push
iret
xchg
fsubrl
jno
rorb
pop
xchg
aaa
cmpsl
mov
fcompl
adc
push
in
cmp
imul
jae
leave
and
leave
jo
cmpb
ret
jp
or
mov
sbb
adc
daa
loopne
jg
push
int3
ljmp
pop
dec
pop
scas
sub
xchg
mov
in
sbb
insl
lret
rcll
sarl
pop
mov
pop
and
aad
mov
ds
cmp
shl
mov
ret
lds
lods
bound
scas
pusha
push
adc
loop
xchg
sti
and
sti
scas
jp
xchg
in
call
fistps
ljmp
sbb
pop
xor
lahf
add
leave
push
mov
test
mov
lods
fisttpl
lret
rcrb
sahf
dec
lds
clc
xor
test
pushf
mov
orb
mov
cli
mov
mov
cld
fidivl
adc
ret
leave
jecxz
mov
push
xor
jnp
and
gs
dec
cmp
addr16
pop
or
or
sub
jp
icebp
and
lods
cld
pop
jo
sub
mov
mov
xor
popa
dec
jg
je
jmp
inc
push
adc
add
scas
stos
and
in
insb
cmp
pop
insl
jge
and
mov
mov
popa
aaa
fdiv
ss
adc
xor
pop
mov
mov
shrb
dec
cmp
push
mov
jb
push
mov
pusha
loopne
mov
xchg
jecxz
scas
mov
jle
ljmp
and
inc
xor
pop
aas
lret
pusha
sub
xor
data16
and
ret
xlat
inc
jns
orb
pop
pushl
mov
shr
pop
sbb
jmp
clc
outsl
xchg
insb
add
out
mov
insb
test
sbb
insb
jb
arpl
loope
xchg
or
mov
aaa
bound
stc
or
mov
fidivs
pusha
out
sbbb
inc
cltd
mov
cmp
lret
sbb
xor
add
enter
mov
mov
lods
xor
rolb
cmp
shll
mov
mov
jne
jnp
subb
xchg
pop
cli
or
or
mov
mov
aam
sbb
aam
and
and
pop
in
cltd
in
loope
sub
sbb
pop
dec
addr16
jl
push
dec
mov
cmpsl
aas
loope
daa
into
leave
dec
sbb
mov
xchg
mov
cmp
movsbl
pushf
lret
sub
or
inc
jbe
mov
enter
xor
jg
cmp
and
sbb
fwait
movsl
gs
adc
imul
cmc
inc
cmp
call
jp
pop
mov
or
outsl
ja
and
daa
pop
ffree
std
sarl
mov
sub
push
inc
fcompl
orb
ret
insb
mov
subl
mov
arpl
mull
xor
daa
push
popf
mov
rcrb
pop
sub
movsl
jg
sub
mov
adc
push
sub
movsb
outsl
sar
fldcw
add
mov
xchg
push
cmp
mov
cwtl
and
scas
dec
out
out
sbb
imul
jnp
xchg
mov
mov
jno
sbb
bound
clc
ret
push
jo
push
or
cmovo
in
scas
out
pop
hlt
push
mov
rcrb
push
movsb
sub
jecxz
test
aas
and
lods
leave
mov
inc
xchg
mov
incb
mov
leave
inc
lds
movsl
push
mov
sbb
addr16
ljmp
or
mov
popa
mov
cmp
int3
push
pop
mov
mov
fsubs
xchg
mov
inc
pusha
jnp
jmp
je
sahf
mov
lock
pop
mov
das
jne
icebp
add
dec
cmp
loop
int3
stos
xor
filds
icebp
cmp
mov
jno
push
adc
jge
sub
mov
lods
faddl
mov
xchg
mov
pop
test
popf
in
lds
xor
mov
jp
push
ja
enter
inc
insb
dec
cmp
and
stos
mov
mov
and
aas
lock
adc
fwait
rcl
push
ror
cld
loope
mov
cmpsb
imul
mov
in
adc
inc
mov
clc
ljmp
ficoms
lods
aam
xchg
sbb
aas
rcrb
xor
js
std
lods
lods
sbb
data16
js
xchg
cmpsl
outsl
and
aam
mov
xor
je
outsb
scas
add
test
cmp
sarb
test
cmpsl
ret
inc
cmp
pushf
cmp
mov
mov
stos
inc
mov
aad
repz
mov
inc
cmc
movsl
leave
sbb
sti
pop
icebp
test
dec
mov
inc
iret
loop
cmp
xor
jg
imul
mov
mov
stos
std
push
jp
jno
jg
int
mov
mov
rcl
mov
scas
jae
jp
inc
das
stos
dec
inc
mov
imul
cmp
adc
inc
mov
dec
xor
jmp
push
and
jbe
mov
dec
mov
cmpsb
roll
xor
stos
in
and
mov
push
xchg
mov
inc
sti
cmp
mov
xchg
lock
dec
out
popa
jle
xchg
add
mov
outsb
or
fldcw
movsl
push
dec
push
push
sbb
sbb
xor
push
dec
mov
xor
imul
call
mov
loop
es
add
mov
add
adc
jo
or
push
xchg
xor
aaa
leave
lcall
mov
rclb
or
pop
fnstenv
mov
sbb
rcrl
lret
sub
inc
enter
insb
inc
jne
adc
aas
nop
std
mov
xor
inc
cmpsb
sbb
mov
sub
mov
jmp
hlt
mov
lods
sub
add
ds
arpl
addl
in
pop
jno
lret
fldcw
rep
leave
fnstsw
nop
lcall
cmp
inc
shll
pop
push
xchg
es
adc
insl
outsl
adc
xchg
testl
cwtl
popa
pop
jno
adc
xchg
jo
mov
and
lret
pop
mov
sub
xchg
gs
mov
jb
jae
iret
neg
outsb
mov
or
jle
cmp
idivl
test
push
imul
xor
and
pop
js
mov
or
repnz
mov
jmp
xchg
jbe
cmp
adc
sahf
push
rcll
ljmp
push
or
push
dec
cmpsl
pusha
add
inc
and
test
cltd
imull
push
test
into
ja
add
and
pop
add
inc
sub
jp
jle
push
aam
xlat
sub
sbb
pop
leave
cmp
in
jl
sub
or
out
xor
cmp
les
inc
cwtl
out
js
cwtl
jne
inc
pushf
fidivs
mov
sub
cmp
arpl
inc
add
xchg
fwait
daa
sbb
pushl
dec
inc
xor
inc
cli
cmc
arpl
or
jg
out
push
sahf
pop
out
std
mov
daa
cld
lods
pop
fbstp
bound
sub
test
and
mov
push
cmp
inc
in
mov
js
sub
inc
or
es
sbb
xorl
loop
add
pop
dec
mov
jno
xor
jmp
int3
pop
sbb
pop
loope
sub
xor
shll
cmc
repz
inc
mov
or
add
cmp
push
add
cs
sbb
popl
jae
pop
enter
test
subb
and
mov
stos
sbb
add
std
ret
sbb
test
jmp
add
cli
mov
pop
pop
outsl
cltd
insl
iret
scas
stos
xlat
cltd
fistps
or
aas
movsl
in
dec
ss
pop
mov
mov
fwait
jmp
cld
ljmp
cmpsb
mov
addb
adcb
notb
out
les
popa
ds
enter
cwtl
shlb
inc
mov
mov
shlb
jg
xor
mov
push
jecxz
mov
dec
xchg
mov
popf
jl
fwait
jg
lcall
mov
js
pop
sahf
xchg
lcall
push
add
mov
add
push
push
je
adcb
adc
je
pop
xor
pop
test
cmp
adc
cld
stos
aaa
icebp
adc
dec
test
jae
fildl
pop
jmp
cmpl
lea
shr
dec
xor
mov
hlt
lret
cltd
loope
sub
jge
int3
fcomps
pop
lret
sub
xor
push
inc
mov
or
mov
clc
mov
vminpd
aaa
or
jb
dec
dec
pop
cmpsb
cmp
inc
ja
push
in
xchg
push
push
sar
inc
sub
dec
mov
sti
aad
push
lcall
jae
dec
filds
test
les
shrb
lcall
lret
test
pop
push
outsl
fisttpll
inc
inc
or
cmc
out
mov
jmp
stos
int
ja
mov
ljmp
out
sbb
arpl
cltd
lods
jle
in
jecxz
jl
pushf
test
mov
pop
mov
or
nop
or
xchg
movsl
lahf
jmp
or
push
out
cli
es
mov
and
cmp
call
push
mov
or
cmc
loope
dec
scas
cmp
mov
jbe
aaa
pop
pop
sub
imul
push
loope
jl
sbb
adc
test
hlt
cmp
xchg
mov
or
mov
cmpsb
mov
xchg
adc
inc
add
std
pop
xchg
cltd
jle
sbb
es
lock
negl
and
push
test
test
push
idivl
pop
dec
out
into
mov
out
add
lret
sahf
inc
sbbl
fs
and
mov
push
aad
pop
sub
or
sub
js
mov
daa
mov
jo
and
add
pop
ljmp
dec
ljmp
jno
add
add
int
add
out
test
mov
scas
pusha
adc
cmp
cmp
xor
js
push
and
fs
dec
out
inc
or
pushf
stos
adc
dec
cmpsb
faddl
dec
or
test
xor
mov
sub
add
mov
lcall
mov
addr16
cmpsb
adc
clc
lea
int3
push
iret
pop
push
js
jmp
push
je
inc
and
xchg
punpcklwd
fiadds
jmp
mov
xor
add
cmp
pop
xor
dec
add
clc
mov
xor
scas
stos
mov
out
data16
iret
xor
push
push
xor
adc
add
addb
inc
sub
adc
aam
push
loopne
mov
inc
into
xor
jbe
mov
js
and
sub
subl
in
gs
and
scas
outsl
or
ss
jo
lret
xor
sub
pop
std
fwait
dec
test
in
popa
rolb
movsl
rolb
cmp
ss
stc
aad
push
xlat
movsl
or
sub
loope
decb
cmp
lahf
adc
loopne
dec
test
rcll
sub
lods
fmull
push
cmp
iret
aad
subl
int3
cmc
ret
ja
scas
xor
inc
push
cmp
jnp
xchg
stos
mov
negb
andl
jmp
push
outsl
cmpsl
js
add
push
xchg
int3
add
ds
jmp
jecxz
mov
mov
lods
call
cmc
pop
gs
inc
jno
jg
dec
icebp
inc
int
mov
dec
mov
xlat
in
adc
dec
das
jmp
fcompl
pop
daa
add
repnz
es
nop
iret
loop
mov
push
xchg
jmp
jge
into
adc
xor
aaa
push
push
std
cld
jnp
outsb
xchg
jp
stc
pop
jnp
xchg
xchg
fdivl
fcoms
add
pop
scas
xchg
fwait
in
nop
pop
mov
stc
xor
jp
jnp
decl
mov
test
fldenv
mov
mov
loop
testl
fcompl
fwait
inc
imul
cmc
nop
add
inc
jg
test
insl
jo
int
mov
fidivl
pop
in
pop
xchg
mov
cwtl
xor
xor
cmp
loope
push
xchg
mov
mov
outsl
sub
push
sbb
movsl
mov
cmc
push
ja
call
out
daa
into
test
jns
or
daa
push
xchg
pop
jl
and
call
es
outsl
and
in
scas
gs
divl
inc
lcall
mov
mov
cli
fwait
es
mov
insl
loop
sbb
shlb
loop
std
xchg
add
xor
jecxz
cwtl
lret
fisubrs
or
mov
push
das
repnz
xchg
mov
aas
int
aad
inc
pop
shlb
addb
bound
mov
jmp
sbb
sub
repnz
xchg
insl
cmp
mov
mov
inc
movsb
imul
lcall
sbb
push
pop
clc
lods
in
dec
dec
das
gs
ret
int
rolb
mov
outsl
les
icebp
jne
adc
jnp
sub
cmp
mov
mov
push
mov
mov
push
fwait
xor
ret
test
adc
jg
cwtl
push
cmp
icebp
hlt
pop
xor
and
arpl
daa
jg
cmp
mov
pop
cmp
adc
cmp
and
inc
addr16
push
movsb
daa
or
scas
fwait
inc
mov
mov
clc
test
sahf
outsl
test
shll
iret
sub
int
into
in
jp
sbb
xor
or
scas
clc
mov
ja
loopne,pn
mov
js
fsubr
movsb
pop
rorl
fistpll
out
mov
adc
sbb
mov
shlb
or
xor
outsl
les
faddp
pop
dec
mov
or
xchg
aam
jl
aam
inc
cwtl
mov
mov
insl
idivl
lahf
or
shlb
inc
sbb
dec
and
call
sahf
inc
jmp
out
dec
ljmp
mov
xchg
xchg
cmpsl
test
mov
int
mov
jp
ret
lods
fsubr
mov
jnp
jl
adcb
stos
adcb
push
js
mov
pushf
jecxz
out
xchg
cmp
int
je
pop
push
pop
icebp
add
lods
xor
pop
cmp
imul
lcall
shr
and
mov
dec
and
outsb
sub
push
jmp
and
pop
cmpsl
pop
adc
mov
in
xor
ljmp
in
stos
push
inc
sarb
xchg
cmp
gs
rcpps
and
xchg
mov
cmpsl
xchg
std
lahf
pop
jge
inc
nop
xchg
add
das
xchg
push
loope
mov
lods
hlt
add
test
cltd
pop
cmp
inc
and
imul
test
roll
jle
jns
clc
xor
int
cmp
ds
adc
lret
cmp
jge
add
inc
mov
sub
shrl
inc
in
mov
test
push
loope
lahf
and
ljmp
sahf
mov
xchg
fcmove
arpl
cwtl
pop
or
fadd
pop
ficompl
push
mov
lock
cmpsl
test
ror
shlb
mov
cmpsb
lahf
and
add
mov
imul
pop
test
xor
lods
inc
lcall
nop
aad
dec
cwtl
push
test
add
je
bswap
push
adc
out
pop
add
mov
lods
jo
xor
sahf
push
test
and
sbb
aas
mov
ret
pop
mov
jmp
pop
lahf
mov
arpl
sbb
add
adcl
stos
adc
inc
std
add
xchg
ds
mov
cmp
cmpsl
lahf
push
push
push
sti
stc
fisttpl
ja
push
adc
fwait
pusha
hlt
pop
cmp
iret
stos
mov
sub
push
sahf
cmpsb
out
icebp
shll
mov
pop
mov
test
jae
ficompl
and
outsb
mov
jp
push
daa
sbbb
ljmp
add
cmp
mov
ret
mov
mov
sarb
ja
adc
popf
mov
and
out
sbb
mov
adc
cmpsl
ja
mov
and
adc
leave
hlt
popa
out
mov
sub
ljmp
pushf
add
inc
xchg
lods
arpl
mov
add
sbb
lods
push
jne
repnz
mov
lods
je
adc
int
or
xor
into
call
data16
xor
inc
mov
cmp
xchg
popf
ds
pop
cltd
in
scas
lock
dec
cld
xor
mov
sbb
lcall
notl
pop
sub
pusha
lods
mov
js
insl
jnp
test
sbb
jmp
mov
or
inc
sahf
adcb
mov
movsl
lds
add
fwait
push
mov
lret
sbb
fistps
and
dec
and
hlt
shrb
adcb
inc
lds
out
pop
push
add
shrb
in
mov
mov
mov
inc
int
and
xor
jge
xchg
adc
push
repnz
and
xchg
push
jae
adc
cmpsl
stc
jecxz
and
dec
ds
mov
std
lods
arpl
movsb
pop
repz
xchg
xlat
mov
lds
jl
inc
sub
loope
sarb
out
repnz
fidivs
mov
dec
add
adc
cmp
pop
repnz
fsin
push
sub
sti
cmc
mov
stc
flds
xor
scas
inc
add
sbb
daa
dec
xor
xor
xchg
sti
and
push
cmp
cmpl
pop
clc
loopne
sub
movsb
aaa
ds
out
sub
mov
test
loop
daa
adc
cmpsl
scas
push
hlt
mov
inc
cmp
test
xchg
jae
jno
fimuls
stos
fmul
test
xor
jg
call
repz
pop
mov
adc
je,pn
hlt
adc
loopne
dec
data16
mov
ja
or
xor
stc
sahf
push
movsl
imul
shlb
sub
gs
loop
cmpsl
inc
sub
in
pop
arpl
rcll
iret
push
mov
jns
nop
and
dec
sbb
lahf
repz
int
mov
jae
add
mov
or
mov
rclb
test
in
push
jmp
add
sub
add
in
int
adc
fwait
insl
rcr
test
mov
push
add
aas
mov
mov
xchg
adc
sbb
mov
rcrb
jo
jecxz
inc
iret
adc
mov
pushf
cmpsb
dec
std
mov
push
stos
cld
das
xchg
lock
loopne
pop
and
mov
push
inc
xor
mov
lahf
in
pop
mov
out
fistpl
pushf
add
mov
push
aas
cmpsb
mov
sbb
xchg
xlat
incb
xlat
js
add
movsl
pop
xlat
inc
out
jp
sbb
cltd
push
aad
popa
sub
add
push
xchg
and
sbb
push
xchg
ret
jb,pn
cmp
shrl
jge
inc
sub
sub
das
mov
ret
insl
nop
icebp
cli
xor
fldenv
mov
cmp
push
mov
or
fnsave
test
ja
mov
sub
mov
push
xchg
jno
movsl
pusha
xchg
in
fmul
push
adc
push
jae
mov
xchg
push
scas
je
hlt
pop
pushf
test
lock
daa
or
pop
enter
mull
jno
icebp
push
push
sub
inc
shrl
cmp
cmc
popf
outsb
jge
cltd
xchg
push
jbe
cmp
mov
pop
cmp
and
push
das
jecxz
xor
fstpt
dec
cltd
xchg
int3
and
sub
hlt
mov
mov
xchg
xchg
mov
pop
cmp
push
and
adc
in
mov
sub
or
mov
out
mov
dec
sub
xor
mov
nop
stos
leave
or
cmpsl
popf
out
arpl
pop
fidivrl
mov
xor
push
sbb
mov
arpl
xchg
stc
xchg
out
mov
mov
pop
fcmovnb
aaa
mov
add
daa
pop
jge
stos
mov
sbb
xorl
insl
adc
push
loop
fistps
sbb
pusha
pop
mov
pop
out
in
imul
xlat
mov
or
xor
xchg
cmp
in
loope
adc
xchg
inc
aaa
pop
inc
jmp
sbb
insb
dec
cmpl
fnstsw
dec
sbbb
mov
int
lcall
push
xchg
xor
rcl
lds
fs
nop
jmp
cwtl
lods
push
jae
add
jns
mov
sub
cmc
rorl
nop
mov
enter
cmp
enter
popa
lret
adc
xchg
push
mov
fsubp
inc
inc
xchg
xchg
insb
mov
xchg
dec
bndstx
cmpsl
add
jecxz
or
int
clc
inc
cld
dec
aam
stos
clc
test
lea
insl
lret
add
dec
fcomps
iret
pop
mov
push
scas
filds
pop
loope
iret
popf
or
adc
sub
repnz
cmp
xor
xchg
divl
lea
popf
repz
lods
movsb
orl
hlt
or
ret
rcl
sbb
mov
cmp
subb
popf
mov
pop
movsb
mov
jmp
fwait
stos
leave
xchg
repnz
mov
push
jnp
adc
mov
pushf
ljmp
jnp
pop
lret
adcb
dec
cltd
dec
aad
outsb
sarl
icebp
push
cmp
int3
inc
cmp
out
js
and
cwtl
inc
jne
jnp
imull
mov
add
mov
jle
fwait
sahf
push
mov
push
mov
lret
ret
cld
lret
push
jg
dec
jne
cli
movsl
lock
int
mov
and
iret
adc
repnz
sbb
mov
cli
mov
iret
or
jae
addb
scas
out
stc
out
scas
mov
inc
fmul
rolb
xlat
out
push
rorl
sahf
lahf
and
cld
sti
repnz
je
scas
int
shl
add
lahf
mov
cltd
sbb
adc
push
insl
in
push
ja
aas
pusha
dec
aad
push
mov
mov
add
scas
shrl
push
xor
cmc
mov
mov
sub
mov
adc
loopne
ret
ss
mov
pop
aaa
sub
add
pop
or
mov
jmp
out
push
pop
dec
rclb
jle
mov
mov
int
cmpsb
aas
add
jbe
or
scas
lret
cwtl
cmpsb
mov
push
sbb
add
sbb
in
dec
xchg
mov
testb
dec
dec
in
mov
pop
cmp
lahf
xor
cltd
inc
or
pop
stos
std
inc
push
addl
dec
jge
xor
out
mov
ss
xchg
jmp
pop
shlb
lods
fisttps
out
push
ja
adcl
cmp
stos
cltd
and
iret
add
xor
insl
push
inc
mov
mov
je
sub
dec
mov
daa
nop
mov
lods
and
jmp
mov
enter
int
xchg
sbb
add
adc
rol
xchg
xchg
imul
cmpsb
sbb
hlt
sahf
nop
fs
mov
dec
push
sub
xchg
sbb
xchg
pop
std
scas
scas
nop
lahf
loop
shlb
and
mov
xor
mov
xor
push
adc
stos
movsb
pop
mov
bound
adcl
push
loope
sub
clc
dec
outsb
inc
dec
sbb
lods
xchg
pop
arpl
pop
test
test
test
ja
xchg
cwtl
je
xor
cmc
dec
jo
aas
je
mov
push
imul
into
add
adc
iret
dec
gs
mov
cli
fisttpll
dec
lcall
int
fnsave
mov
push
xchg
ret
out
pop
bound
mov
insb
stc
sub
push
sub
sbb
push
cs
mov
mov
int3
or
push
jne
cmc
dec
test
and
rcr
dec
push
pop
lret
movb
leave
adc
lahf
sbb
xchg
movsl
iret
push
je
les
xchg
es
out
cmp
sbb
enter
sbb
pop
enter
cmpsl
test
stos
fsubl
push
imul
shlb
inc
movsl
test
in
imul
dec
dec
out
mov
rcll
xor
xor
js
loop
in
sbb
lods
int3
mov
loopne
pop
repnz
cmc
xlat
cmp
xchg
jmp
push
stos
inc
cmpsl
mov
jne
enterw
les
push
out
cmp
adc
loope
in
or
jns
pop
mov
pop
gs
mov
or
insb
fiadds
orl
cmpsl
call
lods
ss
mov
lods
ficoml
and
imul
xor
std
lahf
popf
jb
ret
rclb
cmc
sub
xchg
xlat
pusha
negl
mov
cli
inc
loop
es
cld
jno
inc
fs
outsb
dec
xchg
imul
call
push
repz
push
mov
pushw
push
sub
aaa
adc
mov
scas
mov
in
loop
mov
in
or
sub
mov
and
sbb
fwait
sub
dec
scas
inc
push
out
popa
mov
mov
stos
insl
dec
add
pop
out
push
mov
sub
push
test
roll
addr16
in
outsb
jecxz
outsl
cltd
push
jp
push
cmp
mov
movsb
xor
jmp
idivb
sbbl
test
mov
mov
sbb
std
rolb
jno
cld
rcll
push
scas
test
int3
sbb
ss
addr16
or
lret
sub
xchg
jne
fstpl
lods
popl
xor
int3
cmpsl
mov
cmp
and
pop
push
mov
pop
fisttpll
out
lds
iret
push
and
push
dec
xchg
jge
add
fstps
and
mov
pop
je
nop
cmp
mov
cmc
pop
push
popf
push
mov
pop
dec
sti
inc
mov
daa
lcall
movsl
cmp
imul
incb
les
push
mov
ret
jp
mov
js
call
mov
nop
out
rcrb
mov
imul
movnti
ja
out
cltd
dec
pop
ja
ja
test
and
push
out
mov
sti
stos
movsb
movsb
out
or
mov
test
cmp
push
sub
sub
mov
rol
loopne
mov
sbb
repz
inc
shlb
test
les
imul
in
add
sbb
stos
adcb
add
fdivrs
push
pop
test
push
popa
ss
push
jno
push
add
cs
cltd
or
cmp
bound
jnp
mov
out
data16
scas
cltd
into
sub
out
and
cli
cmp
or
pop
ds
jmp
les
mov
pop
and
insb
fs
rcr
and
push
push
lock
out
sbb
in
fildll
int
fwait
sti
daa
pop
aas
rorl
fcmovu
jmp
repz
and
inc
jns
aas
movsb
pushf
ljmp
and
push
mov
dec
push
repz
sbb
cmc
rcl
loop
pop
cli
cltd
push
jp
add
mov
dec
hlt
hlt
rol
mov
int3
mov
scas
movsb
pop
jne
push
push
xor
sbb
mov
xor
cmc
xchg
in
nop
xchg
stos
xchg
xlat
dec
cmp
push
test
test
aam
scas
mov
out
adcb
sbb
lahf
clc
icebp
arpl
lret
sub
adc
ja
ja
lods
ds
sub
xor
adc
into
fsubs
bound
fdivp
push
lea
das
repnz
scas
lret
aam
lahf
jnp
das
xchg
imul
inc
sbb
adc
mov
cmpsl
mov
push
imul
pushf
iret
jg
jns
mov
leave
sti
daa
nop
xchg
pop
cwtl
mov
mov
ret
cli
ja
ret
mov
mov
out
pusha
neg
fadd
mov
cmp
cmp
jno
xchg
cmp
push
sahf
mov
rcr
mov
add
popa
imul
movsb
mov
ds
orl
std
cwtl
mov
or
cmp
dec
add
xchg
pop
aad
or
lcall
rcll
mov
ljmp
sbb
cmpsl
dec
imul
notb
sar
add
daa
jns
imul
pop
sti
sub
sub
lods
addr16
xchg
pop
xor
or
xchg
jge
outsl
mov
sub
cmpsb
or
jnp
mov
mov
dec
cs
aaa
xchg
sub
cmp
cmp
mov
and
hlt
xchg
sub
jnp
xchg
dec
adcl
pop
test
int
cmp
sbb
rcll
lods
jbe
sub
push
pop
ficomps
lahf
outsb
add
and
jne
ret
or
and
rcrb
cmpsl
sbb
jg
cltd
sub
lods
sbb
fs
test
push
mov
xor
mov
int3
insb
inc
imul
adc
cmp
push
inc
outsl
dec
mov
scas
sbb
int3
inc
aaa
cmp
mov
jle
out
cmp
or
and
jl
inc
or
sti
jbe
mov
push
cld
sbb
adcl
xor
xor
enter
hlt
jmp
xchg
lock
sbb
sub
fistl
mov
lret
inc
test
adcl
movsb
mov
mov
fsubs
add
stos
sti
psubsb
inc
add
data16
sbb
jne
sarl
repz
push
leave
mov
and
cmp
mov
insl
xchg
dec
mov
pusha
test
icebp
fildll
daa
fcoml
lret
pop
loope
ljmp
call
adc
lret
xchg
xor
outsl
sub
js
cli
pop
fsubl
sti
cld
jae
jg
mov
into
lods
inc
int
lcall
ret
outsl
push
push
loopne
sbb
pusha
outsb
pop
pop
sbb
fcoml
xor
ds
jecxz
jl
xchg
jg
fisubrs
sbb
mov
adc
fisubl
inc
xor
dec
rcr
sarl
mov
adc
outsb
push
sbb
sarb
out
adc
shrb
mov
inc
inc
xor
cmp
sbb
sub
ret
std
xor
scas
cmp
dec
jl
frstor
pop
push
cld
stos
cmp
jns
mov
lahf
jp
mov
sbb
cmp
dec
nop
test
pushf
mov
sub
pushf
stc
jp
pop
ret
xchg
push
dec
ljmp
lock
xchg
mov
pop
ja,pt
lcall
mov
pop
mov
xor
xchg
cmp
faddp
push
push
mov
stos
push
in
je
rorl
loop
or
sub
movsl
jb
test
mov
xor
repz
xchg
mov
nop
shll
pop
shll
aad
aaa
aam
jge
cmp
daa
and
aad
jmp
xchg
insb
mov
enter
out
in
jbe
popf
test
mov
add
loopne
jne
sbb
mov
mov
mov
out
jae
sti
daa
cmc
pushf
es
xlat
lahf
lds
neg
scas
mov
xchg
push
mov
mov
jbe
ss
loop
cmpsb
mov
lds
xor
or
orb
lahf
js
in
pop
and
test
clc
loop
subl
dec
imul
add
ret
pop
inc
cmp
subl
das
cwtl
lods
les
data16
pop
push
insb
push
cmp
dec
fmull
mov
jnp
jge
push
jl
sbb
je
das
repnz
inc
fcoms
pop
loope
xor
fsubl
sub
addr16
push
hlt
fwait
add
in
int3
lahf
pop
popa
or
imul
aas
movsl
inc
bound
addr16
mov
mov
int3
mov
xchg
fiadds
imul
sbb
xchg
mov
cmp
lahf
mov
or
sbb
or
jle
pop
jne
repz
fs
fmulp
mov
push
arpl
mov
push
sbbb
pop
daa
dec
cmp
je
jbe
leave
je
in
imul
lock
mov
orl
xchg
shrl
push
nop
xchg
repnz
outsl
fwait
shl
pusha
cmp
icebp
sbb
ja
movsl
gs
adc
mov
push
bound
ljmp
cmp
hlt
stos
cmp
mov
sub
insl
pop
and
leave
mov
jns
loope
test
pusha
cs
lds
push
iret
mov
sub
lds
test
push
and
pop
xchg
mull
jmp
and
lea
lret
aas
mov
or
or
or
jne
jecxz
sti
sub
xor
jp
lahf
stos
xor
test
das
jns
jnp,pn
mov
pop
mov
cmp
fwait
xchg
pop
icebp
cmp
arpl
push
push
les
jl
repz
xchg
test
push
jns
movsl
sbb
jns
cmpsb
jmp
inc
aam
pop
mov
outsb
push
mov
add
xchg
insl
shrl
mov
subl
stos
loop
xor
push
sub
inc
dec
push
cmc
clc
movsb
sbb
adc
dec
pop
mov
rclb
pop
jecxz
lods
sbb
out
out
lret
sub
inc
cmp
es
into
mov
dec
gs
jecxz
cmp
xor
push
inc
pop
hlt
jle
xor
push
sarb
inc
inc
cld
cmp
fnstcw
dec
and
jl
sbb
add
cmp
lcall
add
rcrb
nop
add
xchg
addr16
enter
insl
imul
mov
mov
pop
cmpsl
jmp
into
rorl
pop
mov
call
pop
cmp
in
fs
xor
ja
pushf
jae
or
adcl
mov
std
outsb
adc
xorb
push
movsb
mov
add
mov
add
ljmp
dec
jne
int3
xchg
inc
dec
mov
xchg
loope
cmc
out
mov
sub
mov
mov
movsl
or
stc
fadds
insb
add
out
pop
call
dec
roll
pop
push
fidivl
mov
pushf
ficoml
andl
push
inc
call
imul
xchg
test
jne
in
rclb
test
movl
aam
out
mov
lods
jge
enter
rcr
stos
and
dec
int3
sub
in
gs
pusha
pop
sbb
sbb
outsl
arpl
ficoml
xchg
mov
mov
dec
jmp
mov
add
mov
or
add
push
leave
aad
addl
sbb
sbb
or
aad
mov
daa
push
loop
push
ja
jbe
jno
sub
mov
inc
or
sub
or
mov
pushf
adc
shl
xchg
stos
shr
ljmp
arpl
and
sub
push
adc
pop
add
push
movsb
ret
mov
int
repz
inc
ret
sub
adc
mov
add
test
xor
jmp
lret
cmp
inc
fcmovnbe
jle
xor
pusha
mov
stos
inc
cmp
mov
adc
dec
int3
fnsaves
int3
jno
fildll
shlb
jb
dec
fiadds
cmp
sbb
mov
jo
jg
mov
xchg
fdiv
rclb
xor
push
cmp
in
ret
paddsb
pushf
and
jno
fisttpl
xchg
add
xchg
test
xchg
push
xor
and
dec
sahf
mov
mov
cvtdq2ps
add
mov
insb
mov
jl
ja
xchg
scas
mov
ljmp
es
add
and
mov
insl
and
xor
xchg
fistpl
mov
lea
iret
sbb
cmp
ret
in
sahf
xchg
mov
popf
adc
lcall
push
cltd
mov
push
std
repnz
cmc
jecxz
dec
stc
test
sub
mov
cmpl
push
gs
cwtl
jae
or
sarl
in
pop
sahf
xor
dec
adc
aam
inc
sbb
into
lss
dec
sarl
cld
cli
es
pop
xchg
fsubrs
pop
or
leave
add
jb
xchg
mov
mov
mov
and
notl
xchg
fidivrs
fisubs
adc
mov
dec
ret
sarl
cmp
lds
cmove
dec
push
mov
or
shrl
or
out
sub
mov
add
xor
pop
dec
mov
xor
mov
test
push
popa
mov
lcall
push
inc
jno
push
rorb
cli
inc
jns
cmc
push
jg
add
aam
in
int3
cmp
out
loop
mov
add
cld
dec
push
inc
jnp
jp
jb
dec
adc
orl
mov
xchg
cmp
fisubrl
mov
stos
adc
cmpsl
pusha
in
dec
sbb
cld
int
mov
out
mov
dec
repz
and
push
adc
and
cli
arpl
push
push
or
out
push
iret
subb
add
inc
out
pop
adc
jg
das
hlt
ja
stos
mov
mov
outsb
add
jle
mov
xchg
cmpsl
pop
xor
dec
leave
fisttps
mov
mov
loopne
cmpsl
pop
mov
xor
jle
scas
xchg
hlt
or
inc
or
xor
dec
mov
push
sbb
divb
cmpsl
call
dec
cmp
mov
stos
and
outsl
jb
dec
addb
pop
test
dec
inc
js
out
mov
or
jecxz
addr16
repnz
pop
adc
neg
push
outsb
xlat
jb
loopne
ss
push
shrl
push
rcrl
mov
leave
jns
and
jno
fwait
sahf
xchg
mulb
dec
xchg
sahf
js
mov
pusha
or
push
pop
cmc
push
or
cmc
gs
sbb
push
stos
lahf
mov
adc
jne
ficoms
cwtl
jle
adc
insb
xchg
jno
imul
xchg
mov
mov
lret
loopne
aas
stos
stc
and
inc
jbe
repz
or
push
mov
push
mov
push
rorb
sbb
je
pop
repnz
cmp
xor
add
stc
add
inc
call
jno
push
fs
pop
mov
lret
scas
push
cmp
push
sbb
jmp
lods
pop
xorl
mov
xor
clc
xchg
gs
xchg
test
jns
aam
jl
fwait
or
sahf
xchg
stos
lcall
xchg
add
jne
xlat
outsb
inc
mov
pop
insb
cmp
out
inc
outsb
jg
nop
stc
dec
xchg
les
sbb
out
aaa
das
test
inc
addl
push
xchg
ja
pop
inc
mov
and
mov
aad
pop
idiv
lret
mov
inc
test
or
test
les
or
push
mov
xor
cmp
mov
sti
imul
mov
cmp
lods
gs
dec
mov
lcall
mov
fisubrs
sbb
scas
xchg
dec
repz
mov
lods
and
fwait
mov
stc
add
push
inc
aas
adc
outsl
jb
jp
inc
bnd
xlat
push
in
out
jmp
cld
in
inc
aad
xor
jmp
pop
add
ja
pusha
fdiv
adc
lret
hlt
jmp
scas
pop
dec
mov
pop
test
push
mov
ss
xor
sub
push
sbb
cld
lods
xchg
xchg
hlt
sarl
dec
cmc
jl
inc
mov
loop
in
mov
sbb
loope
sbb
fldenv
stc
es
inc
jno
insb
pop
into
add
cmp
xorb
dec
sbb
push
cmc
xchg
stos
in
in
sub
pop
push
lret
push
cmp
out
clc
bound
sub
sbb
dec
add
outsb
adc
je
and
stc
add
inc
mov
mov
xchg
shll
out
jle
adc
mov
or
pusha
push
int
and
outsb
imul
jo
add
test
daa
inc
xor
and
call
cmp
lods
sbb
pop
xchg
in
test
insb
js
sbb
out
mov
pop
cmp
jp
pop
add
cmpsb
lock
in
or
mov
dec
orb
or
pusha
daa
loop
jne
cmp
stos
lret
out
repz
cmp
or
es
pop
add
leave
mov
addl
cmpsl
push
or
in
cmp
mov
cmovns
sub
adc
push
mov
aam
pop
push
dec
ret
xlat
cmp
sti
lea
fsub
loope
fisubs
pop
insl
adc
ljmp
or
pop
adc
out
and
scas
movsb
int3
add
mov
mov
cld
arpl
shll
pop
test
pop
mov
clc
sbb
pop
mov
lds
mov
insb
iret
pop
repz
int
stos
fcmovne
mov
or
push
mov
jg
aaa
movsb
push
scas
sub
inc
inc
psubusb
adc
add
cltd
pop
adc
stos
sbb
mov
cmp
std
rcrb
vpsubusb
cmp
lds
in
scas
mov
sbb
pop
cli
jb
xor
dec
jb
int
out
cmc
les
mov
dec
jecxz
outsl
xlat
iret
les
popf
or
out
lea
enter
pop
mov
mov
mov
jge
pop
lods
ret
dec
stos
mov
aam
in
mov
pushl
std
scas
testl
in
xchg
in
lret
shrl
add
shlb
repnz
and
inc
or
fmull
dec
or
cmc
xchg
push
movsb
inc
pop
sbb
ss
dec
mov
jge
test
lods
cmp
jno
xchg
push
stos
adc
push
xor
jns
or
sbb
iret
stc
test
mov
inc
xor
clc
sbb
stc
sbb
mov
mov
ljmp
stos
jo
jp
test
lcall
cmpsb
add
jae
dec
sub
and
cld
sbb
shlb
mov
jnp
daa
mov
int
pop
dec
pushl
movsb
dec
xor
imulb
daa
lods
cmp
sub
movsl
sahf
and
imul
push
lock
mov
in
rolb
push
push
xchg
cmp
adc
into
fnstenv
cmpl
pop
pop
pop
or
test
pushw
push
hlt
ljmp
int3
mov
inc
push
jns
xchg
add
mov
and
pop
add
cld
dec
mov
faddl
jo
xchg
ficoml
jmp
sbb
stos
rcll
scas
add
enter
leave
or
mov
mov
outsl
xchg
pop
imul
lcall
inc
mov
mov
fwait
lods
pop
xchg
and
and
or
test
inc
ds
and
aad
add
add
inc
sbb
shrb
imul
xlat
cmp
ret
setp
shll
gs
test
mov
jecxz
stc
hlt
sub
adc
inc
pop
pop
and
or
xchg
mov
adc
push
testb
xchg
mov
insb
jnp
cmp
pop
jecxz
jae
or
repnz
jle
std
xchg
imul
cmpsb
xchg
hlt
xchg
outsb
mov
jae
jg
pusha
or
push
ds
pop
mov
pop
sbb
fisubrl
insl
xchg
xchg
pusha
xchg
in
test
mov
popf
cli
pop
xchg
je
xor
movsl
sub
push
inc
mov
jle
std
in
testl
and
ret
inc
mov
mov
pop
xor
adc
push
push
shll
ret
aam
add
bound
clc
stos
lea
ss
shl
inc
mov
mov
dec
insb
inc
test
imul
fs
es
or
fldcw
and
test
jnp
pop
fprem1
and
aas
and
sbb
push
pop
bound
xchg
test
popa
push
mov
mov
push
or
mov
movsb
mov
lahf
jge
sbb
cwtl
mov
cmpsl
mov
lods
rorl
dec
xchg
and
movzbl
int3
adc
cli
lahf
ljmp
pop
sti
fildl
test
je
loop
insb
ljmp
loopne
push
push
add
push
mov
mov
int3
jo
or
test
fmuls
jmp
leave
mov
jno
inc
pop
push
lcall
jb
add
and
dec
xor
xchg
push
inc
mov
xor
or
movl
movsl
dec
xchg
jae
and
dec
mov
cmc
ja
pop
repnz
ja
jg
jno
popa
rclb
inc
lock
adc
or
mov
cld
jmp
ljmp
pop
aas
cmp
add
add
push
shl
xchg
subb
mov
pop
mov
insb
sub
rcll
mov
pop
cs
adc
cwtl
fildll
testb
or
sti
push
daa
xor
inc
daa
dec
mov
cmp
mov
push
in
movl
xchg
stos
mov
add
or
stos
pop
icebp
pop
aam
loop
sub
aas
xor
ss
mov
mov
icebp
cmp
mov
imul
dec
ds
add
test
dec
pop
test
mov
cmc
pop
das
xor
icebp
inc
xchg
xor
mov
pop
sar
sub
pushf
rcrb
rol
scas
xchg
fldt
and
cmp
fsubrs
ss
pop
rcr
mov
ja
pop
mov
jge
mov
mov
xor
dec
inc
mov
les
sbb
xchg
ret
jecxz
movb
lret
mov
push
in
js
push
mov
mov
int3
insl
rorl
add
or
xacquire
loope
ss
xor
popa
xchg
push
sti
cltd
xchg
testl
shll
movsb
rcrb
or
and
jle
mov
sub
nop
rolb
je
aad
ud1
and
hlt
lock
adc
les
jb
insl
adc
movsb
mov
lret
out
addr16
mov
add
mov
aaa
jb
ficoml
xor
shl
mov
or
stc
xchg
loope
push
shrb
inc
data16
or
xchg
mov
mov
imulb
jge
xlat
cltd
cmpsb
xchg
mov
scas
lock
jmp
pusha
arpl
xchg
ficoms
push
insb
jo
or
mov
or
lcall
sbb
xchg
mov
and
mov
or
adc
insl
andb
leave
cmp
mov
scas
cmp
and
out
add
fwait
jl
enter
mov
aam
stos
leave
jge
sub
fsubl
iret
sub
test
push
mov
in
test
fstpl
fimull
jge
pop
rorl
punpcklbw
xor
add
cld
adc
js
adcb
mov
dec
gs
mov
cmp
pushf
das
imull
scas
inc
push
xlat
add
aaa
mov
arpl
pop
ss
dec
das
cmp
cld
lods
xchg
lahf
test
aad
das
negl
cmp
in
cld
std
mov
pusha
mov
push
test
xchg
jle
sub
negb
pop
push
sarb
lahf
cmp
pop
jmp
jno
ss
fldenv
leave
rolb
popa
push
pop
in
aam
gs
push
int
push
mov
pop
push
sub
inc
cmp
add
stos
jno
outsb
mov
jl
test
xchg
and
and
pop
mov
push
lcall
push
cwtl
rorl
push
mov
int3
xchg
hlt
cmp
jnp
insl
stos
mov
lret
fidivrs
loope
data16
jmp
cli
imul
shrb
pop
mov
inc
movsl
xchg
add
lea
xchg
lea
hlt
mov
adcl
jae
cmp
iret
cmp
mov
dec
inc
inc
cs
cltd
cli
dec
jbe
or
in
int
xor
dec
and
gs
int
pop
lods
decl
sbb
or
test
fidivrs
fdivr
lods
aad
push
cmp
popl
aam
mov
nop
cmp
loop
pop
fucomp
add
mov
xchg
loope
xor
in
mov
dec
xorl
jno,pt
mov
adc
dec
nopl
sbb
jae
leave
sub
xchg
push
push
inc
dec
outsl
xchg
or
and
xchg
ss
cld
or
lock
je
xchg
cli
or
insb
cwtl
les
std
sbb
stos
repz
push
in
jne
mov
jl
loopne
repnz
push
xor
insb
arpl
ss
jp
leave
repz
xor
nop
insl
in
jne
stos
pop
sbb
in
lahf
jle
mov
sbb
rcrb
xchg
mov
dec
cwtl
push
and
popf
push
jns
xor
dec
pop
xor
lcall
or
arpl
push
dec
lods
sub
call
aam
lds
mov
mov
mov
in
add
jecxz
mov
sbb
negl
dec
iret
sub
pop
gs
mov
mov
push
mov
hlt
popf
sbb
inc
sahf
out
mov
lret
movsl
cmpsl
icebp
aaa
mul
test
shrb
sub
sub
lods
or
nop
jmp
and
sbb
fdivrl
mov
mov
in
rcl
imul
xorl
xchg
in
cmpsl
pushf
je
aad
add
jp
mov
adc
xor
or
clc
xor
dec
and
ficoms
add
adc
inc
sbb
add
hlt
dec
orl
mov
mov
popf
dec
sbb
enter
sub
sahf
loopne
fistps
icebp
jp
insb
mull
fidivrl
repnz
add
lods
in
fwait
ljmp
ret
pop
bound
repz
mov
xchg
test
adc
gs
add
and
inc
mov
repz
jecxz
lcall
stos
cmp
stos
add
stos
sbb
and
push
cs
frstor
insb
jbe
dec
ss
mov
jecxz
push
fwait
lock
mov
insb
cmp
jae
mov
jmp
fcomi
jg
pop
fistpll
xorl
adc
mov
scas
stc
jbe
pushf
push
mov
pop
nop
add
notb
lret
dec
jne
lea
jnp
popf
pop
adc
and
lea
fcoml
out
push
pop
mov
mov
sbb
sub
js
rclb
sbb
mov
loope
sbb
sar
imul
out
test
rcrl
mov
xchg
imul
or
mov
xor
nop
push
js
lds
js
pop
jle
jge
mov
test
push
hlt
cli
jae
pop
inc
add
lock
or
cmpsl
jbe
into
xor
adc
mov
adc
cmp
aaa
push
shl
lcall
pop
jb
push
fstpt
hlt
and
push
call
cmp
test
sbb
xchg
loop
testb
shlb
mov
jp
scas
jecxz
nop
ljmp
lods
ret
sub
jp
iret
insl
clc
jg
pop
icebp
int3
mov
mov
xchg
and
mov
rcr
aam
mov
push
sub
push
stos
leave
cld
pop
mov
stc
inc
movq
dec
in
imul
cld
mov
insb
mov
pop
sbb
pushf
pop
xchg
mov
imul
inc
mov
pop
rolb
addr16
push
mov
scas
mov
mov
rorb
push
shrb
mov
lods
inc
rcll
lret
or
push
xor
dec
nop
insb
mov
sbb
aas
nop
jecxz
sbb
ja
es
push
fdivs
pop
inc
cmp
scas
push
inc
std
in
ljmp
stos
pop
xor
test
adc
jle
push
aam
das
test
jl
push
pop
mov
pop
and
jb
push
subb
inc
in
add
test
push
pop
ret
pop
fwait
pop
pop
rorl
xor
mov
hlt
dec
in
icebp
push
push
push
xlat
cmp
nop
pop
loope
cmpb
lcall
mov
cmpl
cmp
int3
push
faddl
in
movsb
ficoml
rorl
js
mov
cmp
sub
push
cmp
xchg
gs
lods
lds
test
cld
mov
ret
popa
pop
test
cmp
or
dec
push
out
sbb
js
lahf
fisubl
cmpsb
jnp
dec
jmp
in
cmp
out
or
gs
push
ss
jbe
inc
mov
sbb
mov
dec
xor
mov
pop
xchg
mov
dec
dec
lock
xchg
idivl
dec
jecxz
stos
mov
out
repnz
dec
inc
std
into
xchg
aaa
cmpsl
orb
push
push
pop
sub
jno
sub
ss
inc
mov
repnz
mov
mov
xor
or
loop
and
adc
cmp
out
adc
inc
push
outsl
aad
sub
popf
xlat
icebp
push
add
lock
mov
mov
mov
fdivrs
cmc
mov
push
std
xor
fidivrs
repz
jno
or
jg
add
push
mov
out
lret
mov
imul
cwtl
jge
fsts
pop
xor
lods
stos
dec
sbb
and
pop
stos
rcrb
negb
xchg
jge
fdivs
mov
jecxz
fwait
pop
xor
jb
sbb
push
or
add
js
cltd
cmpsb
xorb
xchg
in
ret
int3
cwtl
push
push
into
shr
gs
or
push
stos
pop
inc
xchg
iret
imul
jo
vshufpd
sub
adc
pop
and
sub
xor
ret
push
inc
sahf
push
fnstenv
or
dec
mov
imul
inc
ljmp
push
dec
jle
inc
mov
fldl
jge
jle
faddl
outsl
subb
add
ds
cmp
xchg
sbb
inc
cltd
sahf
jb
cwtl
insb
test
stos
outsl
sub
test
inc
sub
test
inc
ds
and
xor
sarb
ss
push
adc
ja
cmpsl
test
jnp
sti
push
mov
mov
ret
xchg
in
ret
loope
jnp
mov
sahf
xor
mov
arpl
cmp
mov
sbb
push
xchg
test
gs
mov
ss
xchg
addr16
xorb
jb
dec
inc
xchg
mov
mov
pop
adc
jbe
loope
xor
sub
ficompl
ret
pop
mov
imulb
and
xor
mov
push
fsubs
jle
cld
xchg
fnsave
or
aaa
xchg
lret
insb
inc
loope
push
push
insb
in
push
cs
mov
insb
aas
pop
xchg
in
mov
mov
sub
int3
sbb
out
pusha
lcall
jp
sub
cld
cmp
mov
push
or
punpcklbw
xor
push
ds
aad
mov
iret
cmp
insb
cltd
outsl
sub
mov
sbb
ret
push
sbb
js
aas
or
leave
lcall
repnz
mov
arpl
add
fistps
add
lods
lds
movb
xchg
lods
ljmp
lret
mov
ret
cmpsl
cs
push
push
jle
fisttpl
lods
jnp
add
jmp
idivb
and
imul
or
cmp
add
pop
mov
dec
add
push
lock
xor
decb
sub
lock
scas
mov
push
xchg
les
lods
pop
cmp
push
cmpsb
push
jge
push
fwait
xchg
xor
and
ja
push
push
sbb
test
xchg
and
cmp
jle
xchg
fidivrs
dec
mov
das
movsb
mov
pushf
inc
or
sbb
xchg
js
popf
fcomps
inc
xchg
push
cmp
addr16
jge
mov
sbb
xor
inc
int3
mov
mov
movsb
decl
mov
mov
shll
xchg
in
mov
popa
or
cltd
fidivs
jmp
inc
imul
stos
mov
popf
mov
jbe
push
out
cmp
mov
cld
jno
mov
dec
xchg
push
cs
add
dec
popf
lcall
pop
adc
inc
xchg
sbb
push
mov
dec
mov
cwtl
jae
scas
or
xor
adc
sub
cmp
mov
or
mov
outsl
fadds
lret
mov
clc
inc
push
cmp
or
mov
out
repnz
scas
fimuls
xchg
push
test
in
test
andl
add
into
and
mov
rcrb
dec
ja
stc
outsb
jl
inc
insb
rclb
js
ret
test
push
loope
cltd
mov
call
sbb
sub
dec
inc
test
test
or
pop
add
sbb
mov
pop
push
out
lock
dec
cmpsl
je
and
pop
lret
sbb
xor
jbe
adc
aas
imul
pop
mov
pop
hlt
stos
push
pop
jns
cmp
scas
loope
xor
jb
or
pop
push
out
call
shlb
add
popf
inc
push
aad
xor
push
xchg
rcl
inc
int
popf
imul
inc
sbb
loopnew
popf
and
sbb
dec
cs
push
mov
mov
stos
sub
int3
fldenv
add
shlb
dec
sbb
sub
and
jmp
lods
pop
mov
imul
aam
push
lret
xchg
out
aam
ficoml
outsl
sahf
or
mov
or
sub
mov
adc
cmc
ljmp
mov
fisttpll
add
dec
out
ret
or
sbb
lcall
stos
cli
pop
dec
mov
inc
repz
xchg
add
xchg
outsb
lret
mov
imul
aas
inc
ja
fcompl
scas
dec
rolb
ljmp
aad
push
leave
fpatan
fs
push
adc
roll
xchg
aaa
hlt
sub
push
and
fistps
jne
dec
xchg
pop
add
or
xchg
xchg
mov
pop
push
mov
jmp
repnz
pop
in
inc
sub
inc
or
cmc
jnp
das
xchg
dec
lahf
cs
js
pop
insb
cmp
pop
psubq
sbb
push
cmpsb
notb
mov
jnp
mov
xchg
daa
jo
push
mov
rcrb
insb
sbb
mov
enter
dec
push
and
adc
lock
push
int
mov
mov
push
xchg
xor
push
xchg
lcall
cmpsb
push
jle
cltd
adc
repz
data16
mov
das
negl
fisubl
arpl
icebp
push
or
pushl
sub
imul
lret
lahf
ja
xchg
mov
enter
stos
cmp
sub
cmp
stc
add
movsb
cltd
aaa
dec
adc
mov
push
lret
pop
push
es
or
and
fiaddl
ljmp
push
mov
jl
stc
mov
jl
loopne
shl
and
push
loope
mov
fidivl
jo
dec
cmpb
pop
sbb
jae
xchg
mov
cmp
clc
test
enter
clc
sbb
or
dec
out
sbb
dec
test
lcall
sub
add
xchg
jns
lock
fbstp
outsb
or
dec
popa
jp
imul
stos
cmp
cmp
rcrb
jae
outsb
add
insb
hlt
repnz
sub
sub
xchg
js
call
or
mov
ljmp
pop
ret
aam
or
mov
jns
fs
inc
xchg
bound
push
clc
les
push
mov
arpl
pop
loope
insb
xrelease
sbb
xchg
jo
loopne
mov
test
pop
adc
leave
push
lahf
sbb
xchg
in
scas
fs
pop
jnp
sub
mov
daa
or
out
dec
ret
orl
jle
jae
jne
lret
xor
loopne
xor
fs
test
or
imul
jl
pop
dec
in
mov
sbb
inc
insl
add
imul
push
add
sbb
mov
dec
push
pop
les
fidivl
mov
mov
fsubr
mov
xchg
lods
nop
loope
push
xlat
clc
push
adc
xchg
xchg
xor
shr
hlt
test
sub
jge
xchg
add
lds
pop
mov
test
je
push
ret
cmpsb
fwait
jns
rcrb
xchg
ja
xchg
outsb
pop
fisttpl
roll
inc
push
test
sbb
jo
mov
lea
jecxz
imul
mov
not
hlt
cmp
jo
mov
fcmovne
in
and
sbb
cmc
mov
in
test
pop
fwait
and
adc
cltd
mov
inc
dec
div
loopne
xchg
insb
loopne
jnp
cltd
loop
add
add
lret
ret
js
out
out
and
arpl
out
mov
cmpb
dec
scas
cltd
push
mov
cs
rorb
lcall
int3
lea
test
inc
pop
mov
repnz
jge
repz
push
jge
ja
dec
jbe
jmp
and
fsubrl
pop
cmpsb
xchg
fisubrs
es
xchg
xchg
lods
pop
dec
mov
add
mov
jo
mov
enter
xor
in
cmpsb
jg
xchg
nop
pushf
das
movsl
add
jo
test
shl
jl
add
fs
insl
lds
push
xor
nop
pop
jp
mov
insl
mov
out
or
pop
das
cli
adc
call
imul
rolb
scas
ljmp
sub
shlb
mov
add
xor
mov
push
aam
and
mov
sti
leave
lcall
ja
mov
imul
out
in
popf
scas
lahf
dec
cmp
fistl
mov
jo
adc
mov
mov
pushw
mov
cs
out
xchg
outsl
mov
stc
out
xchg
pop
loop
in
lahf
sub
or
lcall
loopne
adc
pop
push
jg
jge
out
xor
jnp
adc
pop
jge
dec
cli
ja
xor
cwtl
mov
jg
sahf
mov
jmp
and
lret
and
nop
sbb
cmp
in
aam
test
mov
mov
mov
in
lcall
in
jo
fcomip
sbb
dec
adc
outsl
adc
and
or
dec
arpl
jp
movsl
movsl
fcoml
mov
sub
mov
sti
cmp
pop
and
sti
mulb
adc
repz
test
inc
dec
pop
jne
jnp
xor
decb
subb
push
mov
aam
sbb
test
mov
sbb
loop
orl
out
dec
add
add
aas
mov
movsl
xchg
ret
popf
cli
loope
icebp
xchg
cmp
popf
rolb
aam
mov
or
lret
dec
jne
dec
jbe
adc
loopne
xor
mov
pushf
and
pop
add
enter
xchg
push
sahf
add
push
push
push
pop
jbe
orl
add
and
dec
pop
xchg
in
push
rcl
cmp
lods
fwait
lods
mov
sub
aad
inc
incl
in
lcall
dec
popf
fwait
jg
add
mov
inc
andb
lds
ljmp
xor
rcl
xchg
rcr
repz
push
cmpsb
add
cmc
outsl
outsl
cs
pusha
mov
cwtl
mov
shlb
scas
xchg
lea
push
out
clc
lods
add
leave
aas
cmp
mov
dec
mov
xor
ret
add
sbb
lea
imul
imul
dec
add
popa
jl
fdivrp
cmpsl
push
cld
pushfw
ficoms
or
adcb
xchg
and
dec
mov
int
repz
xor
sub
inc
fstps
cmp
sub
cmp
dec
inc
cmp
ja
adc
bound
xchg
xor
aam
lret
adc
ljmpw
xchg
loop
xchg
add
and
lret
mov
cmpsb
add
or
cmp
xchg
loop
outsb
addr16
sahf
mov
in
pop
iret
mov
repnz
pop
es
sbbl
push
xor
fsts
lock
add
ret
xchg
xlat
loope
sti
popa
in
jp
xchg
inc
and
movsl
insl
jg
ret
popa
inc
movsb
mov
mov
inc
fisubs
jge
inc
lcall
std
popf
leave
jl
out
rolb
inc
sbb
sahf
jns
in
sub
out
mov
repz
mov
iret
stc
dec
ds
movsb
lods
add
movsb
js
add
fwait
mov
jle
add
pop
stos
mov
shr
jns
sahf
js
cmp
mov
and
ss
aaa
cmpsl
ret
hlt
push
into
fstps
icebp
mov
int
test
add
leave
mov
cmpsl
cmpsl
gs
icebp
fucom
bound
filds
mov
adc
hlt
mov
sub
fs
shlb
pop
add
pop
lds
push
ret
sub
ljmp
testb
lret
js
pop
iret
popa
shll
ds
adc
imul
addl
jo
lret
push
shrb
xorl
pushf
movsl
add
enter
inc
xor
imul
push
bound
dec
jns
push
cmp
sub
stos
repnz
dec
addl
into
mov
test
xchg
cli
push
mov
repnz
dec
enter
push
addr16
mov
pop
sti
cmp
adc
scas
mov
push
dec
sahf
bound
ja
cld
outsl
icebp
sbb
xchg
out
jbe
jb
icebp
mov
fldl
div
inc
mov
inc
pop
nop
clc
jb
xchg
jae
xor
mov
jno
mov
mov
jl
enter
cmp
stos
nop
mov
movsl
jge
xor
scas
in
movsl
mov
mov
xor
lods
xchg
dec
lea
mov
pop
rorb
movsb
or
fcmove
sbb
pusha
pop
jae
push
fistpl
jle
pop
mov
loopne
hlt
fnstsw
icebp
mov
test
scas
lods
fmull
rolb
mov
inc
cmp
fisubs
sbb
ret
dec
les
scas
popf
sub
add
mov
je
scas
xor
sbb
xchg
inc
add
mov
xlat
ss
jnp
push
pop
dec
add
lcall
fisubrl
jb
jo
jmp
mov
aas
fldl
lcall
sahf
and
gs
loop
stos
ret
jmp
xlat
ljmp
add
sbb
jns
xchg
adc
outsb
mov
test
dec
dec
ds
cmpsb
je
imul
inc
fdivrs
xor
dec
jp
inc
imul
sti
mov
adc
or
sub
cmp
es
adc
movsb
adc
dec
in
inc
inc
add
add
inc
pop
mov
mov
std
hlt
inc
aaa
ret
jns
mov
pop
inc
xchg
mov
rclb
jns
std
jge
popf
xlat
inc
sbb
sahf
push
push
aam
jecxz
pop
adc
push
int
in
mov
xchg
shlb
inc
mov
pushf
xchg
mov
mov
mov
adc
jge
insl
mov
les
jp
sbb
xor
imul
jo
inc
xchg
xchg
sub
pop
mov
mov
dec
imul
fiaddl
adc
into
popf
mov
nop
or
pop
fcoml
icebp
popl
aaa
push
lcall
adc
test
xor
ret
subb
rorl
cwtl
inc
cli
fwait
xor
test
jl
stos
add
stc
fdiv
iret
shlb
push
jbe
mov
cmpl
xchg
enter
sbb
fwait
fimull
mov
and
adc
cmpsb
and
xchg
rcll
add
push
push
sub
push
ret
jbe
jle
cli
xor
mov
jbe
jb
sbb
push
cld
add
sub
sub
sbb
adc
push
inc
popa
xor
sbb
mov
adc
sar
cmpsb
mov
pop
repz
fs
jle
push
adc
shrl
icebp
jle
ret
sbb
orb
mov
dec
push
int
cmp
mov
mul
pop
shl
sar
mov
add
cli
adc
femms
xlat
insl
xchg
lock
push
inc
adc
fcmovnu
dec
push
jno
data16
lock
mov
lret
jmp
inc
jecxz
sbb
int3
cmc
repnz
insl
int
in
pop
lret
daa
pop
push
aad
dec
popl
sub
out
pop
jle
xchg
push
push
xor
pop
es
mov
pop
sub
mov
push
xchg
loop
jae
xchg
add
mov
pop
fcomi
and
mov
and
dec
and
push
adc
dec
cli
stos
add
inc
xor
cli
mov
rorl
mov
mov
sub
jo
scas
testl
test
sub
jp
add
xchg
es
arpl
rcr
test
sub
ror
aad
aam
test
lsl
rcrb
addb
sbb
push
jle
hlt
in
add
and
pop
fcmovb
loope
inc
arpl
out
inc
pop
inc
bswap
and
popa
sub
das
mov
test
mov
mov
int3
int
in
jecxz
or
pusha
sbb
sbb
push
sahf
leave
mov
test
mov
add
idivl
mov
push
aas
cmc
push
mov
push
xor
or
and
ds
push
xor
cmp
dec
add
lock
push
mov
ja
out
je
cmp
mov
mov
bound
sbb
fdivrs
into
and
insl
pop
out
mov
pop
stc
xor
iret
loopne
mov
repnz
sbb
cmp
cmp
and
lods
in
push
idivl
popf
addr16
cli
fcmove
mov
pop
add
jge
jl
fs
pop
int3
fdivs
stos
dec
rcrb
mov
xlat
mov
in
ss
jae
call
jno
add
adc
fstpl
cs
fwait
cmp
lcall
out
add
mov
daa
add
dec
pop
in
pop
sbb
rcrb
sbb
and
call
negb
in
imul
mov
cmp
outsb
sbb
or
pop
ret
lret
subb
jl
cmpsl
adc
daa
stc
pop
mov
mov
das
js
inc
jle
sub
sub
sbb
cmp
push
adc
rcl
pop
jno
lds
mov
test
in
repnz
sbb
add
dec
add
pop
jb
jnp
and
mov
pop
sahf
cltd
cmp
and
imul
imul
loopne
xchg
inc
rclb
xor
cmp
jp
rcrb
pusha
loope
xor
and
outsb
aas
pusha
xchg
pop
insb
outsl
jno
lds
mov
mov
and
jmp
cmpsb
xor
push
loopne
sbb
stos
fsubrs
stos
xor
jmp
jbe
add
inc
into
mov
jmp
gs
xchg
inc
out
xchg
xchg
mov
pushf
negb
orb
xor
or
push
aas
std
mov
fcmovne
adc
jne
sub
lea
mov
or
iret
movsb
push
lret
pusha
ja
lock
mov
inc
adc
lds
mov
movsb
sahf
cltd
data16
xchg
dec
stos
leave
mov
inc
stc
dec
dec
xorl
push
les
inc
xor
pop
sub
and
xchg
in
dec
movsl
lcall
repz
arpl
loope
aam
jno
popf
cld
xchg
mov
je
push
test
cmp
or
out
shll
cmc
add
ja
sbb
clc
jge
and
data16
pop
daa
shll
xchg
xchg
xlat
bound
mov
mov
add
add
out
mov
mov
outsl
lock
dec
cmpsl
xor
test
fldenv
sub
stc
fcoml
arpl
push
sbb
stos
imul
out
mov
xchg
pop
in
mov
sub
fsubl
xor
jle
addr16
das
inc
pop
push
push
gs
popf
jns
add
ss
sbb
sbbb
push
fcomp
scas
negb
lods
cmpsb
out
push
adc
mov
jmp
outsl
ret
repnz
xchg
pop
sub
xor
movsl
inc
xor
lcall
pop
cmpsb
pushf
xchg
inc
sub
mov
xor
inc
push
adc
inc
push
and
shrl
xchg
das
aaa
clc
add
fs
imul
movsl
enter
fidivs
int
push
or
int3
out
insl
pop
fcomp
mov
stc
sbb
shrb
inc
add
mov
lahf
cmp
pop
outsl
stos
mov
jae
ret
sbb
aam
jno
pop
pop
xchg
aas
xor
outsb
push
cwtl
lds
movsb
mov
in
jg
or
dec
icebp
enter
mov
adc
cli
and
nop
lea
dec
dec
or
idivl
xchg
inc
sbb
pop
aas
leave
adc
pop
scas
push
xchg
ror
jns
adc
cmpsb
in
fcoms
push
pop
fsts
xlat
inc
lcall
dec
sub
mov
inc
push
mov
mov
and
mov
xchg
fstpl
stos
push
xchg
xchg
mov
dec
rclb
push
rcr
aam
jo
inc
mov
add
dec
mov
test
out
imul
pop
mov
ffreep
ds
das
sti
add
clc
add
outsb
jne
add
lods
lret
das
std
nop
xor
xchg
fnstcw
scas
ret
mov
xchg
ficoms
sub
cwtl
mov
sbb
push
add
add
imul
pop
fs
xor
dec
cmc
cmpsl
test
stos
rclb
int
mov
shll
shrb
jno
fsts
dec
fistpl
add
or
ljmp
imul
loopne
add
pop
divl
add
jge
das
mov
mov
roll
mov
mov
ds
adc
ficoms
int
and
and
fidivl
mov
sub
sbbb
mov
lds
adc
aas
outsb
push
fwait
and
fs
jns
in
out
push
in
pop
adc
jl
jbe
into
movsl
jmp
test
arpl
mov
mov
dec
mov
xchg
mov
repz
pop
or
lret
aaa
xchg
or
daa
out
cmpsl
cltd
add
cwtl
outsb
and
mov
mov
arpl
pushf
dec
test
aam
roll
andl
icebp
lock
dec
cld
mov
push
adc
repnz
les
hlt
int3
and
jecxz
push
hlt
icebp
test
cmp
in
rcrl
fistl
fcmovnu
or
lahf
mov
ficompl
imul
hlt
mov
push
insl
xor
adc
cld
stc
push
xchg
jecxz
or
cmpl
pop
pusha
pop
pop
popa
push
cmp
xchg
out
dec
jbe
mov
dec
mov
repnz
sti
xchg
xor
cmp
xlat
addr16
scas
and
add
lahf
popf
sbb
pop
lods
movsb
and
sub
imul
add
and
lahf
pop
jae
xchg
lock
mov
scas
add
pop
mov
dec
cmp
pop
cmp
mov
loop
lods
addl
insb
adc
leave
and
mov
aaa
pop
jne
inc
gs
popf
insl
shrl
enter
lret
or
movsb
cmp
inc
mov
mov
adc
stos
dec
sub
xchg
in
ljmp
bound
paddb
cmp
jb
pop
sbb
mov
and
clc
in
imull
sub
mov
ret
enter
lods
fimuls
add
ret
pop
call
mov
cmpsl
jle
and
and
push
or
out
cmp
notl
jmp
popf
movsb
or
stos
push
push
sarb
lock
and
mov
popf
unpcklps
push
aas
movl
or
aad
sti
push
adc
pop
daa
ss
fwait
add
adcb
sti
pop
sub
fbstp
inc
mov
out
jo
mov
cltd
add
scas
and
xor
ja
popa
fwait
pop
push
cmp
or
lcall
imul
sbb
fnsave
mov
fstl
dec
shll
mov
mov
inc
data16
jmp
xchg
mov
fmuls
sub
or
dec
or
dec
scas
pop
pop
mov
push
pop
xchg
nop
xchg
adc
sub
sub
cmpsl
sbb
loope,pt
dec
adc
xchg
cmp
mov
scas
and
inc
mov
test
pop
ret
ret
and
push
inc
dec
dec
sub
shll
mov
mov
lods
cli
cs
sub
fstl
fdivrs
xor
push
lcall
sub
lods
xor
cmp
pop
jo
and
jge
mov
test
test
mov
pop
lret
add
add
lahf
xlat
sub
lock
xchg
mov
loope
add
jl
pop
lock
pushf
pop
jns
adc
stc
lcall
push
cmp
pop
icebp
add
add
cld
jb
add
addr16
push
dec
inc
xor
cmp
push
sbb
out
push
shlb
out
popf
or
es
jmp
fldcw
rcl
jae
and
pop
idivl
push
mov
shrl
add
scas
or
sub
mov
mov
adc
movsl
mov
cmpsl
fistpl
jecxz
stos
movsb
cmc
mul
xor
add
stos
or
fildl
dec
dec
mov
sub
xor
inc
mov
outsb
xchg
lcall
jge
test
stos
gs
aaa
xchg
pop
out
pop
sub
cmp
sub
dec
jle
xchg
imul
outsl
inc
add
xchg
dec
sbb
cmp
jne
mov
mov
les
jecxz
adc
fsts
sbb
lcall
mov
mov
mov
xor
out
icebp
dec
push
mov
scas
dec
dec
in
sub
lret
sub
dec
lds
iret
cmp
and
push
jp
xor
push
call
mov
jne
das
jb
adc
jg
movsl
negb
and
les
mov
sarb
loope
cld
nop
push
push
mov
jnp
xchg
pop
cmp
push
aam
dec
test
lds
or
mov
or
or
sub
sub
mov
push
jbe
unpcklps
scas
xchg
pop
idivl
call
mov
stos
add
adc
cwtl
cmpb
jg
repz
out
push
inc
and
jg
pop
loopne
mov
push
and
ror
aam
push
ficoms
je
push
add
subl
in
dec
cld
aad
mov
mov
imul
mov
ret
mov
in
mov
cwtl
xchg
push
push
add
popf
std
inc
inc
xchg
cmp
lds
mov
fstpt
sub
and
push
cmp
ja
clc
out
clc
or
lods
and
pop
call
xchg
jo
pop
mov
mov
xchg
adc
pusha
jge
add
jg
sub
cli
pop
xor
pop
lods
inc
out
popf
les
popf
pop
shlb
mov
or
mov
jle
jo
jnp
sub
pop
push
test
addr16
cli
push
mov
test
aas
arpl
in
mov
jae
xchg
sbb
jns
test
mov
int3
adc
call
mov
nop
jmp
mov
lret
xchg
push
sub
std
add
push
mov
negb
out
dec
add
test
mov
cmp
mov
xchg
fnsave
fnstenv
mov
push
or
shl
pusha
sub
fwait
and
add
mov
xchg
out
scas
jp
nop
lods
in
sub
push
push
add
mov
out
lcall
movsl
int
add
clc
cmc
push
popf
and
out
fdiv
daa
std
fsts
or
out
pop
mov
incl
sti
sub
scas
xor
adc
movsb
lahf
or
out
pop
roll
test
xchg
mov
jns
sbb
push
pushf
outsb
inc
jp
pushf
adc
cmpb
scas
adc
push
scas
jge
ds
sub
push
mov
addr16
pop
mov
adc
lret
test
pop
add
push
pop
lock
ds
popl
enter
mov
cwtl
aaa
xchg
xor
adc
mov
sbb
das
xor
repnz
fdivr
popf
fsubs
lods
dec
xchg
inc
lods
je
lods
xchg
rcll
stos
mov
mov
pop
push
xchg
cmc
push
or
in
push
out
insl
adc
push
imul
clc
aad
insl
sarb
repz
jae
ja
jmp
push
bound
xchg
push
ss
cmpsb
add
dec
inc
pop
add
xchg
add
push
movb
jbe
dec
scas
jmp
lods
xchg
or
add
jnp
cmp
ror
sub
cmp
popa
sbb
sbb
push
test
sub
dec
bound
mov
lret
xchg
insb
adc
inc
inc
pop
js
xor
int
test
not
push
es
sbb
push
out
mull
repz
xchg
pop
cld
mov
xchg
push
iret
sub
cmp
add
mov
icebp
insb
inc
subps
out
loopne
push
lds
mov
lret
and
cmpsb
push
iret
inc
adc
xchg
pop
lcall
popf
push
cltd
out
and
dec
fisttpl
ret
push
sbb
pop
inc
jmp
imulb
sub
imul
jbe
mov
fistpll
pushf
icebp
das
inc
cmp
adc
mov
es
repnz
clc
insl
mov
clc
es
ret
or
test
pop
mov
lds
fdivs
push
lcall
dec
xor
pop
jl
xchg
adc
add
adc
mov
pop
jmp
sti
push
mov
cltd
stc
xor
adc
mov
in
loop
mov
aad
mov
and
xor
cmp
cmp
std
aam
lcall
pushf
sbbl
test
xor
sub
sub
js
cltd
lret
mov
push
sahf
jbe
std
mov
or
xor
mov
xchg
icebp
subl
test
jno
mov
jbe
pop
xchg
rol
and
ss
cmp
fmul
cmpsb
int
jecxz
fnsave
jb
sub
ret
ret
ficomps
popf
js
mov
test
push
idivl
dec
push
test
xchg
dec
xchg
stc
imul
jne
xchg
aaa
sbb
xchg
cli
push
jbe
pusha
outsb
cmp
mov
and
xchg
fldt
pusha
inc
add
imul
jno
sbb
negb
shlb
push
xchg
repnz
and
inc
in
sub
ss
push
icebp
or
andl
rcrb
sub
cwtl
mov
cs
pop
cmp
inc
push
push
lock
aam
adc
jbe
nop
cmp
int
test
sub
xor
adc
cmpsb
test
push
dec
sbb
sub
pop
mov
add
cmc
int
data16
iret
mov
cs
mov
xchg
jns
adc
dec
rcrb
repnz
pcmpgtd
pop
and
sub
js
adc
xchg
push
adc
jbe
addr16
repz
push
jg
jae
mov
inc
test
mov
xor
sbb
shrb
aam
mov
fsubrs
lea
dec
fmul
inc
mov
add
outsl
xor
rol
cmp
push
out
dec
mov
inc
lret
pop
jb
or
sbb
jge
popa
or
push
clc
out
mov
jo
push
js
aas
mov
aaa
rol
add
test
mov
sbb
sbb
fstl
dec
call
push
inc
cmp
sti
outsb
xchg
cmp
rcrl
mov
scas
jecxz
dec
dec
cwtl
lods
ss
pop
sub
lock
xor
add
pop
mov
mov
divl
scas
jg
push
jmp
xchg
sbb
scas
in
aas
dec
cli
rorb
dec
fcomps
cwtl
inc
xchg
or
outsl
mov
push
fwait
xor
dec
inc
dec
les
test
in
sub
cmp
cld
lods
popf
dec
je
pop
sti
and
xchg
sti
lcall
xchg
mov
movsb
ljmp
xor
xchg
in
xor
mov
add
out
repz
xor
iret
push
jns
sbbl
and
test
lods
cs
pop
add
stos
xchg
loope
stos
inc
and
jmp
lcall
loopne
cmp
xchg
pushf
xchg
xor
dec
jb
ret
call
sbb
test
hlt
mov
cld
fimull
rol
xchg
cmp
lahf
cwtl
pusha
call
daa
js
mov
jno
mov
xchg
bnd
push
mov
mov
adc
mov
stos
jbe
addl
cli
sub
popf
mov
addb
inc
cld
mov
mov
jae
xor
in
mov
push
or
mov
in
filds
jmp
push
jg
loop
jnp
imul
rorl
arpl
inc
stc
repnz
jmp
aam
in
ret
or
data16
dec
movsl
xchg
decb
sbb
test
sub
lret
loop
pop
or
mov
push
fistl
shlb
aam
cmpsb
mov
pop
xor
divb
aad
shll
fdivs
cmpsb
inc
bound
inc
ja
push
jecxz
inc
dec
mov
aad
pop
inc
mov
test
jns
mov
and
jbe
mov
js
fldt
lds
push
sbb
inc
cld
icebp
stos
loop
insl
add
ds
ss
xchg
jno
mov
movsl
mov
cmp
sarb
add
add
sbb
add
loop
inc
ss
adc
inc
or
ret
dec
fsubs
sub
stos
ss
call
add
jb
into
inc
pop
es
cmpsb
pop
mov
cmpsl
std
popa
mov
adc
in
out
pop
dec
in
cmp
mov
sub
xchg
inc
mov
in
sbb
pop
and
into
jb
ljmp
test
ret
push
mov
jge
fwait
xchg
sub
xchg
push
inc
pushf
cli
sbb
cmp
push
sub
or
pop
call
lahf
push
cmpsb
xchg
cmp
imul
in
out
addl
das
xchg
sub
arpl
pop
mov
and
sbb
dec
sub
pop
fbstp
mov
xchg
pop
es
xor
mov
rolb
mov
ljmp
out
and
pop
jnp
cmc
push
adc
dec
xor
inc
adc
mov
add
xchg
adc
test
je
test
jl
mov
xor
mov
les
mul
pop
jge
fnstsw
mov
jo
std
mov
inc
nop
lret
lcall
arpl
bound
andb
dec
mov
cs
lods
lock
int3
imull
mov
mov
das
je
fiadds
or
dec
add
and
lock
jns
push
fdivp
jne
pop
imul
flds
cwtl
out
stos
push
fnsave
pop
mov
ljmp
inc
jecxz
pusha
imul
cmpl
xchg
jbe
daa
outsl
ljmp
lea
int
mov
lret
mov
pop
stos
xor
inc
mov
or
cmpsb
ret
mov
fiadds
lods
aam
in
cld
mov
movsl
movsb
push
xor
or
subl
out
dec
and
mov
outsb
sbb
mov
pop
adc
add
push
pushf
push
out
mov
cmp
push
cmpsl
mov
dec
pushl
out
call
jp
inc
push
loope
les
push
cs
or
push
or
pop
lcall
pop
xor
xchg
fsubrl
enter
inc
cmpsb
xor
lock
insl
mov
and
out
lahf
cmp
jge
or
mov
xor
movsl
adc
int3
inc
pop
xchg
add
push
push
jle
sbb
push
cli
push
jp
cmp
xor
and
ss
dec
push
pop
add
je
xchg
fdivp
ss
repnz
test
jecxz
or
and
xchg
jb
inc
or
dec
mov
leave
and
clc
jle,pt
mov
sbb
jns
js
jns
in
fcomps
daa
pop
popf
cmp
push
push
jp
jge
adc
adc
cmp
pop
and
jo
fistl
xchg
cmp
sub
xor
imul
push
sbbb
or
and
mov
rol
faddl
pusha
stos
lds
int3
sub
gs
inc
orb
aas
rcrb
xor
pop
mov
clc
inc
dec
imul
or
mov
sti
inc
xchg
das
cld
ret
inc
nop
mov
cltd
cmp
dec
mov
stc
and
sub
shl
jg
ret
das
outsb
cwtl
xchg
into
and
add
jg
cmp
dec
inc
fs
mov
jnp
xor
dec
lret
lret
cld
push
jl
sbb
mov
stc
push
fsubr
add
adc
adc
inc
insl
popa
push
jg
pusha
in
mov
dec
popf
outsb
dec
xlat
jle
cmp
fmull
push
inc
insb
push
xchg
shlb
inc
ss
xor
roll
pop
pop
das
xorl
push
or
push
mov
subb
scas
out
hlt
xchg
jmp
js
fistl
add
imul
add
cmp
loop
mov
mov
jnp
bound
add
or
xor
add
loope
outsb
cld
into
cmp
in
cmp
pop
cmpb
lcall
daa
add
mov
stos
cmp
pusha
push
stos
rorl
in
cld
aas
mov
ja
sahf
mov
test
lret
jle
es
into
sub
stos
scas
punpcklbw
xchg
xor
pop
std
jmp
orb
cmp
gs
fs
lret
aad
jle
pop
inc
mov
xchg
sbb
fisubrs
jecxz
repz
inc
jle
xchg
fisttps
fisubrl
jno
sbb
cld
jge
sbb
xchg
sahf
daa
test
rcrl
dec
push
nop
popa
and
xor
popl
imul
iret
mov
mov
cmpsl
inc
mov
and
sbb
mov
jbe
movsb
lods
add
mov
fprem
inc
xor
xchg
xchg
mov
sub
adc
pop
lret
mov
mov
cwtl
fs
data16
jp
stc
popf
into
mov
mov
negb
fidivl
sub
xor
jle
packsswb
leave
sub
mov
decb
dec
enter
cmpsl
or
lcall
mov
xchg
jnp
jmp
adc
or
je
add
ljmp
jae
add
icebp
xor
jg
mov
ret
fldt
rcr
adc
xchg
mov
shlb
andl
or
je
inc
inc
sarb
mov
lea
mov
ja
or
in
adc
int
fiadds
pop
jmp
loope
pop
xorb
xchg
jno
inc
out
inc
in
jne
push
dec
pop
dec
pop
mov
cmp
mov
mov
es
mov
inc
sbb
sbb
fcmovne
stc
inc
sbb
les
and
js
in
enter
pop
cmpsb
cmp
test
push
dec
inc
pop
jne
jp
leave
lock
mov
push
jb
ficompl
push
cmp
fisubs
sbb
lcall
inc
int3
adc
popf
jne
fists
pop
jo
sbb
imull
xchg
cs
xchg
sub
in
add
lret
pop
jae
fildl
xor
mov
cmpb
mov
mov
gs
xchg
adc
mov
mov
aad
or
hlt
add
enter
push
sub
test
jno
std
fistps
push
sub
xchg
in
fstpt
jecxz
rcrb
jnp
out
mov
xor
stos
xor
cltd
movsl
ljmp
cs
jae
mov
psubb
add
dec
aaa
f2xm1
outsb
in
in
or
push
int3
in
cmp
addr16
sti
pop
inc
ljmp
call
xchg
imul
cld
pusha
push
jle
mov
ja
outsl
and
xchg
fldenv
add
jnp
outsb
mov
lret
jne
and
mov
movsb
jl
loope
repnz
push
mov
shr
js
orl
divb
sbb
jbe
ficompl
daa
leave
rorl
daa
add
dec
xchg
mov
insb
add
incl
out
lret
pusha
ljmp
jns
sub
out
mov
push
cwtl
jns
push
sub
test
sub
mov
push
push
jb
jge
mov
jmp
in
sub
mov
xchg
imul
lret
pop
shlb
pushf
jo
jns
jg
dec
bnd
jle
pop
data16
scas
push
xor
fs
sbb
jp
sub
sub
xor
pop
out
int
aaa
jmp
icebp
aaa
mov
xchg
sbb
insb
mov
dec
fsubr
imull
inc
and
sarl
jno
and
jecxz
jl
or
outsb
insb
jne
xor
in
dec
xlat
fisubs
in
bound
dec
into
or
popf
mov
cmc
out
pop
mov
loopne
ljmp
jmp
pop
in
sbb
push
and
jl
inc
icebp
mov
xchg
gs
or
movl
xchg
jne
bound
fldt
inc
mov
fcoml
adc
mov
xor
jmp
shlb
inc
add
xchg
mov
push
mov
cmpsb
ret
ror
fs
popa
xor
xlat
lods
rclb
dec
sub
mov
leave
xchg
fwait
in
jo
ljmp
xchg
push
in
cmp
pop
add
fstpl
lea
or
fists
and
fsubr
pop
popf
sbb
ret
nop
ficoms
sub
push
sbb
mov
pop
xchg
adc
pop
adc
dec
inc
mov
push
shlb
jb
or
xchg
sub
xor
pusha
or
pop
mov
cmpsl
sub
sbb
gs
divl
push
jo
jb
jnp
cmp
dec
cwtl
sbb
push
dec
xor
subb
jae
xor
push
inc
cmc
into
testb
jbe
test
sbb
gs
adc
xor
add
pop
pushf
xor
add
pushf
sti
pop
mov
out
sub
lahf
xchg
push
jb
shl
hlt
xchg
mov
jae
lret
fwait
lea
iret
jb
aas
pop
push
fldl
inc
sub
mov
cs
lahf
push
scas
push
and
ss
jg
out
cmp
enter
bound
jbe
ret
mov
mov
jmp
rol
sub
fistpl
repz
insl
lahf
xor
std
mov
clc
inc
and
dec
mov
cmp
aad
add
fidivl
or
mov
movsl
jbe
fsub
ret
dec
daa
cmp
mov
gs
jbe
rcrl
or
aad
xor
jns
inc
test
out
and
sahf
xchg
push
aad
xor
push
inc
or
pop
cld
imul
push
das
in
add
cli
adc
pop
jl
cmp
or
push
sub
mov
jno
cmp
ret
inc
add
sub
cmp
pop
adc
pop
aas
xchg
sbb
fwait
inc
cmpsl
sbb
rorl
outsl
inc
insl
push
lahf
inc
cmp
adc
inc
ljmp
mov
jnp
outsb
js
push
dec
int
fnstcw
mov
insl
sarl
adc
mov
jno
test
movsb
stc
pop
movzwl
daa
pop
push
mov
lcall
mov
das
adc
loop
add
fistpl
shr
cmp
jmp
lods
xor
roll
ljmp
cmpsl
add
scas
nop
cmp
hlt
sub
lods
sahf
mov
dec
mov
mov
sbb
pushf
scas
fidivl
push
adc
push
out
fwait
cmp
lret
and
rcrl
mov
rclb
inc
add
xchg
je
and
cld
nop
cs
push
inc
fistpll
dec
ds
pop
jno
push
pop
cmp
bound
into
fsts
xor
cmp
fstpt
jle
mov
sub
cmpsl
adcb
pop
test
sbb
aam
ret
rcrl
aad
das
subb
or
mov
lcall
rorl
sbb
or
movsb
popf
gs
sub
push
pop
xlat
loope
push
inc
dec
ds
dec
mov
fsubrl
jp
enter
mov
mov
aam
jbe
rcl
sahf
popf
das
ret
xor
jp
cmp
mov
xor
lret
xchg
mov
enter
movb
sarl
pop
sub
push
lret
jns
push
icebp
pop
pop
in
lret
and
orl
dec
dec
ja
leave
push
imul
push
rorl
cmp
cli
das
jl
mov
icebp
mov
sbb
loop
mov
adcb
out
fld
or
test
add
pop
xchg
push
push
cmp
mov
and
jb
mov
pop
mov
lods
pop
push
dec
in
stos
xor
stos
mov
enter
pushf
cmp
dec
push
mov
int
cld
pop
sbb
imul
fldenv
fldcw
out
jb
nop
fisubrl
jg
dec
out
fists
in
repz
push
stc
adc
mov
out
inc
addl
sub
nop
cmc
rorb
in
jmp
repz
adc
inc
and
jnp
fstps
outsl
xlat
icebp
test
sub
mov
icebp
dec
lock
jge
and
enter
lcall
or
push
xor
add
xchg
jbe
pop
dec
std
adc
es
mulb
inc
adc
adc
pop
out
push
movsb
cmc
jo
mov
and
idivb
add
shrl
pushf
inc
fs
daa
xchg
xchg
mov
mov
jmp
insl
mov
das
mov
mov
dec
jnp
frstor
call
dec
add
rcl
and
cmpsl
mov
insl
and
movsl
push
mov
sub
sbb
fiaddl
lock
dec
aam
xchg
jb
dec
sbb
pop
stc
mov
cmp
out
insb
or
and
mov
push
sbb
inc
out
adc
jecxz
sbb
je
dec
in
add
push
jne
pop
sub
xchg
xabort
pop
mov
fdivrs
sub
in
loope
push
jg
je
scas
add
lret
nop
or
outsb
mov
in
inc
test
fnstsw
adc
sub
jb
psrlq
das
je
xor
lods
in
ds
test
test
xchg
jecxz
loope
mov
movsb
scas
xchg
es
sub
popf
sub
shlb
and
stos
imulb
inc
insb
ret
mov
xorl
fbld
rsqrtps
cmp
in
mov
mov
mov
aad
mov
fucomip
pop
jmp
inc
je
std
insb
push
push
pusha
popl
or
scas
imul
decb
jae
or
pop
pop
lret
cmc
call
nop
jle
test
outsb
in
js
sarb
ret
out
mov
ja
jmp
jl
xchg
shlb
data16
out
das
jne
add
ror
push
adc
or
clc
mov
or
insb
movsb
dec
jo
shl
mov
xchg
movb
xor
outsb
aam
fsubs
xchg
aaa
js
push
xchg
in
stos
xchg
mov
clc
fstpt
cmp
mov
mov
push
cmp
add
fwait
mov
fwait
imul
sahf
mov
testb
popa
scas
movsb
movsb
sub
int
and
or
mov
addr16
pop
test
or
pop
mov
stc
fiadds
mov
or
xchg
cs
push
mov
mov
mov
gs
adc
push
std
push
mov
mov
js
out
cmpl
fisttpll
popf
aas
nop
inc
sahf
insl
cli
xchg
loop
test
outsl
xchg
and
test
out
adc
mov
push
iret
mov
aaa
insl
or
mov
add
inc
aam
xchg
pop
jecxz
sub
pop
out
lcall
jne
std
add
and
push
cs
ficompl
or
xor
mov
pop
or
push
leave
mov
sbb
or
imulb
mov
sub
in
in
mov
sar
into
add
in
cli
mov
mov
push
inc
fisttpl
in
jg
je
dec
jp
cmpsb
in
push
es
data16
add
xlat
xorb
test
sub
sbb
leave
addr16
lea
les
aaa
cmp
test
sbb
test
fwait
mov
inc
nop
sti
call
adc
and
xchg
sub
jne
or
sar
inc
xchg
jbe
xchg
mov
lock
fucomip
sbb
inc
and
in
icebp
fwait
imul
aam
js
or
xchg
sahf
pop
pop
cwtl
xor
lock
rclb
fiaddl
adc
scas
push
pop
xor
mov
divl
shrl
fs
rolb
call
popf
nop
mov
pop
rcrb
mov
and
mov
mov
ss
jp
repnz
push
mov
cmp
push
dec
scas
cmpsl
dec
push
jg
push
push
rolb
jo
mov
add
fdivrl
mov
dec
dec
fcoml
shll
cmp
dec
ljmp
dec
fisttps
and
sbb
mov
mov
out
jmp
inc
mov
push
and
sub
lret
mov
les
mov
adc
sti
int3
fisubl
test
sbb
fwait
pusha
aaa
hlt
adc
mov
in
or
mov
and
xor
mov
inc
dec
push
popf
mov
mov
or
rcll
shlb
mov
lret
mov
add
jo
mov
pop
cli
in
sub
ds
cld
or
sbb
sub
or
or
paddw
les
dec
insb
or
popf
lret
mov
in
jmp
jg
sub
or
stos
add
cmpsb
xor
xchg
repnz
lods
lcall
out
shlb
or
lods
xor
mov
or
les
jne
push
adc
adc
and
lret
mov
ret
xor
or
stos
testb
mov
xchg
xor
ss
dec
ljmp
adc
add
imul
std
js
or
adc
and
pop
jnp
cld
xor
cmpsb
daa
sub
lock
subl
lret
xchg
jnp
mov
andl
into
cmp
mov
sbb
mov
aad
mov
out
mov
inc
cltd
jle
pushf
js
dec
stc
mov
pop
das
adc
lock
cmc
sbbb
mov
sahf
pop
sbb
inc
fldt
mov
or
jecxz
pushl
icebp
and
test
push
xor
das
xchg
fmulp
das
aam
pop
imul
jp
add
imul
dec
jns
test
insl
or
daa
push
hlt
add
and
std
ret
roll
and
add
iret
ss
loope
fsubrs
xor
jbe
cmpsl
insl
aaa
in
in
cli
mov
jg
ret
jns
daa
aaa
inc
insb
cs
adc
mov
jg
xchg
into
mov
and
lods
jp
je
mov
adc
and
jg
mov
adc
sbb
mov
cwtl
pop
movsl
fimull
nop
daa
dec
mov
add
dec
sub
jb
and
xchg
cs
inc
pop
imul
fwait
lea
insl
stos
xorl
cmp
inc
dec
cmp
mov
mov
xor
push
ds
out
pop
pop
dec
mov
daa
int
mov
add
xchg
xchg
cltd
loopne
or
popl
push
sahf
push
mov
fistps
dec
pushf
pop
pusha
sbb
inc
push
call
ret
dec
mov
lods
xchg
int
and
or
test
add
mov
arpl
std
mov
or
xor
inc
fstp
sub
popf
les
and
arpl
and
addb
je
imul
mov
outsl
adc
aas
fcomip
aas
sub
cmp
jae
jnp
repz
fadds
stc
pop
push
in
add
imull
ja
test
mov
movsb
lods
call
loop
add
mov
pop
ror
jle
lods
xchg
fcoml
pop
inc
jno
sub
and
mov
or
sarb
lods
scas
sub
sub
push
pop
out
jb
sub
mov
mov
sarl
loope
fdivrl
sti
adc
leave
jae
int3
aad
mov
xor
push
sbb
imul
hlt
andb
lcall
test
mov
xchg
add
fnsave
and
in
shl
inc
int
mov
insl
lds
jne
cltd
fcomp
xor
dec
outsb
lock
cs
or
lods
les
inc
bound
sbb
fisttps
xlat
icebp
ja
mov
mov
mov
mov
mov
js
or
fbld
or
mov
xchg
sbb
shll
add
jns
hlt
mov
adc
adc
jno
add
add
test
push
orl
push
scas
sub
pop
or
jp,pn
xlat
xchg
leave
mov
in
cld
mov
jp
mov
sub
xor
jle
pop
push
psubusb
sub
mov
dec
hlt
aas
cwtl
retw
mov
ja
addr16
fsubrl
outsl
and
sbb
inc
cs
or
mov
ds
mov
pop
imul
bound
outsl
arpl
and
pop
loopne
inc
xor
adc
arpl
mov
xchg
jno
imul
cmp
rolb
lods
cmp
or
hlt
jnp
add
push
les
cmp
jmp
test
cld
pop
mov
cwtl
out
loope
mov
cmc
rcrb
cmp
inc
inc
mov
mov
dec
insb
xor
pop
push
jg
stos
pop
jnp
xchg
repz
xor
loopne
push
sbb
pushf
push
nop
xor
fucomp
sub
lods
and
rorl
adc
mov
xchg
imul
faddl
std
loope
lds
js
bound
int3
dec
xchg
xchg
pop
or
sub
rcll
rolb
or
sub
pop
sub
xor
das
inc
and
in
inc
cmpsl
mov
sbb
inc
pushl
in
out
loope
mov
adc
stos
add
adc
mov
jmp
push
repnz
dec
int
jbe
addr16
ret
xchg
int
or
xor
sub
and
lcall
dec
loop
lret
mov
mov
sub
rcrl
mov
popf
mov
sub
push
daa
rclb
xlat
test
out
pushf
bound
inc
dec
xlat
fidivs
mov
jp
in
movsb
addr16
lods
clc
xlat
jmp
lcall
test
dec
jbe
and
push
add
and
pop
stos
movsb
jmp
lods
mov
fisttps
bound
dec
loope
mov
mov
out
addr16
push
pop
and
orb
pusha
ud2
adc
mov
test
lahf
sub
add
popa
jg
out
mov
mov
fidivs
inc
out
jne
and
pop
and
pop
jge
ret
mov
out
dec
jge
sub
rorl
push
mov
jl
icebp
pop
cs
and
sub
xor
mov
mov
jbe
stc
push
adc
cli
sarb
aaa
fistpll
pop
cmc
popa
inc
add
jg
inc
pop
xor
add
int
xchg
sub
into
jb
add
add
je
sub
js
pop
push
in
out
lds
mov
xor
dec
leave
sub
bound
xor
pop
jnp
imul
add
push
sbb
inc
fildll
sub
out
mov
inc
jp
mov
enter
das
rorl
pop
jecxz
pop
jp
sub
sub
or
cmp
push
jbe
push
mov
xor
sbb
jb
mov
push
insb
loope
jo
into
ja
loop
cmp
push
jb
jp
and
mov
inc
xchg
xchg
adc
mov
mov
mov
cmpsb
push
cmp
add
push
fbstp
add
inc
jle
mov
arpl
shll
dec
cmp
add
sbb
mov
hlt
xor
ja
mov
aaa
cltd
or
lock
jmp
test
insl
pop
divl
test
jns
stc
and
icebp
jo
push
sub
movsl
cmp
add
in
lcall
jmp
pop
mov
fistpll
adc
mov
or
add
and
sar
push
or
jb
push
jle
negl
fdivp
inc
xchg
and
mov
xor
ja
or
pop
push
std
loopne
xchg
fbld
adcl
adc
aad
mov
xlat
push
push
mov
negb
push
xchg
jmp
cmpsl
cmp
and
mov
aad
xor
jmp
pop
pop
jecxz
inc
xchg
fwait
sub
mov
insb
test
loope
mov
mov
outsl
mov
pop
rolb
cmpsb
fs
pop
push
inc
shld
inc
inc
mov
test
adc
out
dec
inc
rorb
inc
adc
ja
cmp
cmpsl
add
fsubl
or
mov
sahf
ds
mov
cmc
pop
hlt
cmp
test
fwait
mov
or
mov
daa
dec
xchg
push
decb
negb
mov
and
add
mov
dec
popf
mov
loope
ljmp
xchg
xorb
fstpl
sbb
jbe
cmp
xchg
bound
loopne
xor
imul
pop
inc
aam
clc
cmpsb
sbb
fcomps
loopne
sarl
and
push
ja
push
adc
push
jmp
sub
pop
and
mov
add
dec
inc
lcall
loop
cmpsl
adc
js
js
nop
flds
inc
popf
loopne
jo
into
mov
mov
adc
add
int
je
inc
sbb
xorb
pop
jno
lock
ficomps
test
jge
mov
cli
notl
in
push
loope
vmptrld
sub
fisttps
lret
je
test
add
lret
inc
add
je
mov
and
jl
dec
xchg
xlat
aas
out
push
fcmovbe
cltd
fistps
lcall
andps
imul
pop
imul
arpl
mov
mov
adc
ljmp
ficoms
sbb
sbb
test
mov
pop
test
cmp
inc
dec
xor
rol
out
outsb
sub
inc
dec
loopne
out
and
in
jne
or
cld
sbb
out
pop
adc
sub
sub
cmpsb
cwtl
out
sub
jmp
cmp
dec
mov
xor
test
mov
xor
xor
dec
rcrb
push
cmp
jnp
pop
aaa
loope
insb
inc
adc
add
iret
fcmovnb
push
outsl
push
dec
sbb
mov
andl
sub
mov
in
xchg
push
outsl
sbb
adcb
pop
cmpsl
add
fsubrl
gs
fisttps
sti
sub
xchg
in
or
div
xchg
pop
les
fs
lret
aaa
cmpsl
mov
jl
or
mov
fwait
ss
fisttpll
lret
inc
pop
mov
adc
pop
stos
pop
scas
loopne
xchg
popf
test
jnp
xor
addr16
sbb
inc
and
adc
popf
js
in
sbb
rcr
add
aaa
in
lds
add
in
aaa
mov
sub
rol
push
sub
sbb
lea
pop
inc
xchg
or
push
imull
mov
inc
out
mov
ficoms
push
dec
repz
cmp
in
cmpsb
icebp
jg
das
aam
mov
inc
add
mov
ljmp
aaa
sbb
data16
dec
inc
stos
je
xor
in
cmp
and
mov
xchg
cmp
cmpsb
out
push
movsl
imul
inc
mov
push
ss
out
in
pop
inc
mov
sti
aas
mov
loope
mov
lods
push
gs
push
xchg
lock
gs
mov
mov
mov
movsb
or
nop
mov
in
sbb
pop
pop
pop
insl
rcll
je
pop
xchg
and
adc
pop
pushf
jb
ret
pusha
sti
lock
jp
mov
add
xor
sub
pop
xchg
movsbl
fstpl
or
xchg
jo
dec
xor
mov
xchg
in
popa
xchg
mov
sub
loope
pop
mov
dec
adc
lock
in
mov
cld
fbstp
push
bnd
aam
fsubl
idiv
fwait
mov
pop
add
cmp
ljmp
pop
cmpsl
dec
test
inc
enter
and
xor
lock
pmullw
inc
xchg
call
xlat
inc
rol
xchg
dec
leave
xchg
pop
inc
lahf
sbbb
push
and
cmp
mov
shlb
je
dec
loope
sbb
mov
adc
int3
push
dec
andb
lea
fs
add
inc
test
repnz
mov
mov
pop
inc
loopne
daa
fptan
mov
lods
aad
mov
jnp
mov
mov
xchg
repnz
jbe
jnp
outsb
xor
das
rorb
scas
push
outsb
fadd
mov
push
mov
or
aas
scas
aaa
pop
das
fbld
mov
lods
sbb
adc
loopne
and
cmpsb
enter
add
shrb
sbb
fs
sub
dec
jns
shrb
lret
fnstenv
inc
dec
and
sub
pop
jg
cmp
sub
xchg
leave
fidivs
push
adc
bswap
mov
ret
and
and
push
xchg
in
xchg
cmp
mov
sub
inc
stos
xor
mov
sub
int3
push
clc
repz
xchg
xchg
sub
cmc
daa
orb
lahf
cmp
int
enter
shrb
jb
or
hlt
mov
xchg
dec
stos
xchg
xor
inc
mov
std
loopne
std
xchg
pop
xor
fisubrl
mov
aas
ja
cmp
mov
push
push
jbe
lods
aam
xchg
mov
and
test
pushf
les
in
push
pop
mov
dec
rcll
lea
scas
lods
call
push
aas
inc
repz
rcl
xchg
aam
gs
out
ret
jnp
icebp
movl
jb
andb
jno
mov
negl
pop
popa
pop
test
and
das
in
das
mov
cmp
push
imul
mov
add
or
lcall
xor
ficompl
icebp
inc
mov
sub
add
push
xchg
cmpsl
mov
add
sarl
cmpsb
xchg
mov
popa
mov
pop
sbb
clc
jnp
mov
sti
jb
outsl
mov
test
das
jne
sbb
mov
inc
dec
std
rcll
bound
push
imul
daa
xchg
sub
pop
sub
fcmovnu
int
jp
cli
jb
shlb
xchg
and
stos
cmp
dec
addb
pop
ficomps
fimull
adc
mov
sbb
fwait
in
jae
negl
mov
int3
loopne
jno
dec
test
movsl
nopl
push
test
in
xchg
cmp
pop
out
dec
inc
inc
mov
push
or
mov
add
inc
cli
mov
pushf
ja
lock
lret
in
jle
mov
xor
add
test
cmp
test
xor
cmp
aas
lcall
add
xor
in
cli
sub
test
and
imulb
push
pop
xor
or
ja
cmp
xor
popa
sti
stos
std
or
ss
mov
inc
scas
lret
rorb
cmc
dec
and
adc
mov
into
pushf
push
xchg
enter
fldcw
outsl
sar
push
inc
pusha
inc
sti
into
sbb
add
pop
lret
inc
pop
cmp
jecxz
shl
inc
lods
movsb
in
jae
and
clc
jle
adc
adc
ret
or
pushf
pop
xchg
sti
ja
loope
inc
pushf
add
loop
cld
push
sub
cltd
mov
inc
xor
and
scas
mov
sbb
dec
jbe
dec
pop
dec
test
or
inc
lds
or
lock
pop
xlat
lods
repz
jno
les
stos
xor
sbb
lcall
jb
pop
inc
mov
out
aas
les
in
mov
or
lret
test
adc
sarl
call
adc
cmp
mov
mov
jecxz
push
inc
adc
or
je
outsl
and
clc
dec
mov
xchg
cmc
cmp
out
mov
push
push
fnstsw
aaa
ret
clc
outsb
rcr
xchg
cli
movsb
cli
scas
rcrb
mov
lcall
pop
push
add
mov
int
cmp
mov
add
insl
push
call
or
cmp
mov
dec
xchg
adc
imul
mov
sbb
push
les
int
mov
jno
jg
xlat
push
js
xchg
sub
pop
jmp
lret
xchg
dec
test
sahf
loop
andl
jg
ja
aas
lods
pushf
xchg
fdivrp
gs
daa
fsubs
cltd
outsb
leave
call
andl
ss
xchg
jmp
pop
inc
jae
loope
mov
pop
jmp
loope
fidivs
pop
xchg
or
pop
pop
cmp
sub
jo
sub
and
xor
or
dec
mov
stc
jbe
xor
and
imulb
cmp
cmp
je
inc
repnz
mov
or
mov
sub
test
cmp
jp
fldenv
and
push
adc
and
and
cmpsl
jb
repz
outsl
add
jp
and
repz
and
cmp
bound
xchg
lahf
insb
pop
sub
mov
mov
scas
push
jbe
mov
jno
mov
add
lahf
push
mov
jp
pop
out
sahf
push
daa
enter
dec
pop
jb
sbb
rcl
stc
mov
ret
or
pop
and
push
ret
mov
out
xlat
daa
int3
mov
or
push
mov
push
xchg
iret
and
daa
mull
push
out
outsl
mov
add
push
mov
and
pusha
and
mov
cmpsl
fwait
add
es
mov
arpl
xor
pop
add
addl
test
ret
in
mov
lcall
fsub
push
es
leave
es
mov
addb
add
negb
and
push
mov
in
out
aas
sbb
outsb
mov
mov
imul
push
imul
add
aad
jbe
sbb
loop
fstl
lret
stos
rcl
leave
fbld
push
rolb
and
mov
xchg
icebp
cmpl
cmpsb
dec
ja
pop
lahf
loopne
and
lock
xchg
mov
xlat
test
imul
mov
rcrb
shll
or
jnp
cld
xchg
pop
and
fs
xchg
imul
xchg
push
stc
sbb
jecxz
adc
xchg
test
jb
dec
movsb
mov
scas
dec
and
scas
dec
jnp
cmp
mov
mov
dec
push
data16
fcmovb
inc
test
ficompl
cmp
aam
into
jmp
mov
or
mov
xchg
mov
add
psubd
adc
xlat
subb
insl
mov
mov
fs
mov
cld
jno
pop
pop
insl
enter
xchg
adc
jo
sbb
push
jb
sahf
mov
push
in
sub
movl
cmp
lret
cld
ud2
push
aam
jns
and
pop
icebp
dec
push
xchg
inc
jb
mov
ja
push
and
push
inc
jl
inc
adc
adcb
dec
add
pop
repz
dec
push
jns
inc
dec
jno
jle
in
sub
aam
dec
pop
pop
pop
int
mov
popa
jb
and
aas
iret
push
rorl
pop
cmp
or
pushf
cmp
and
inc
mov
mov
push
test
xor
ljmp
cs
push
imul
jle
sub
std
pop
xchg
push
dec
dec
lahf
les
lods
popl
pop
mov
fwait
push
inc
clc
popf
mov
daa
cmp
stc
rep
mov
inc
cmp
cmp
and
or
bound
xchg
fsubrp
sbb
xor
outsl
sbb
mov
mov
pushf
dec
jae
cmpl
imul
xor
cwtl
enter
jle
adc
test
ret
xor
mov
push
imul
mov
and
inc
dec
fcmove
mov
xbegin
adc
test
popa
insl
sahf
dec
lret
repz
out
sbb
repnz
enter
dec
repnz
out
subb
cltd
mov
sub
lret
mov
loope
or
popf
mov
bound
cmp
pop
ss
inc
jecxz
cmpsl
bound
fldcw
test
add
stos
loopne
daa
jmp
outsb
je
sbb
and
enter
xor
push
push
sub
sbb
shl
out
push
sbb
jne
out
and
push
jg
sar
or
cwtl
push
test
push
ret
dec
outsb
pusha
dec
xchg
cli
adc
adc
mov
inc
icebp
lcall
lock
xchg
in
imulb
sbb
lods
pop
es
mov
lret
dec
sbb
test
or
sbb
ret
add
test
sub
mov
popf
jp
push
cmpsl
in
lds
lret
push
mov
push
lods
mov
ljmp
ljmp
das
push
fldl
xchg
jae
adc
insb
ret
pop
push
inc
aas
ret
xchg
sub
incl
mov
cmp
push
test
enter
inc
outsl
sbb
jl
aad
popa
scas
sbb
negl
xchg
mov
xor
movsl
hlt
or
jp
popf
push
popl
jne
cmp
lcall
cld
or
adc
push
push
mov
inc
stc
adcl
jne
inc
pop
mov
add
or
jns
aad
xchg
sub
fmuls
in
push
lcall
fucom
in
sahf
xchg
or
and
popa
pushf
lahf
sub
add
daa
jnp
inc
adc
add
fisttpl
dec
xor
adc
out
loope
cs
push
sub
js
popf
int
add
xchg
cmp
jecxz
prefetchnta
in
rorb
adc
pop
xor
int
dec
mov
test
mov
rcll
dec
pushf
lock
jle
xchg
jns
mov
cmpsl
incb
pushf
inc
lret
icebp
jle
aad
movsl
ja
mov
data16
mov
dec
mov
push
imul
dec
sub
mov
xor
fisubs
out
stos
push
pushf
jns
jge
scas
cmp
push
dec
test
xchg
jge
test
dec
aas
cmp
mov
cwtl
aaa
cld
sub
mov
cmc
sti
jl
out
sbb
and
mov
icebp
push
scas
sti
mov
addl
or
aaa
loope
mov
cmpsb
frstor
push
add
dec
sahf
aas
addr16
sarl
leave
ret
pop
clc
dec
into
adc
pop
stc
pusha
mov
xor
pop
and
cwtl
mov
decl
scas
dec
ljmp
in
inc
push
jo
jmp
test
mov
jge
andl
fisubs
xchg
aad
adc
aas
cld
int3
enter
inc
outsl
shrl
daa
mov
mov
pop
xchg
inc
sbb
icebp
sub
or
xchg
pusha
fs
ss
hlt
jg
cmpsl
daa
js
sbb
mov
and
popa
mov
inc
test
cmpsb
int3
fstl
test
push
loop
lds
dec
mov
lcall
lret
xor
jmp
mov
shl
leave
shl
call
mov
xchg
mov
and
ficomps
fiadds
fadd
cmc
add
fiaddl
orb
xor
jl
push
mov
nop
pop
pop
sbb
out
pop
adc
inc
adc
xrstor
fwait
mov
lea
les
sbb
jg
loope
int3
data16
and
or
repz
addb
movsl
push
cs
adcl
cs
dec
cmp
addr16
pop
lahf
dec
arpl
int3
inc
jg
mov
jg
push
xlat
js
pop
stc
ficoml
mov
mov
imul
inc
push
hlt
cmpsl
jns
sti
mov
xor
outsl
sub
out
or
test
sbb
idiv
repz
jl
int
fnstsw
cmc
adc
fistl
pop
sbb
inc
dec
adc
push
loopne
mov
push
add
sub
leave
orb
aam
dec
dec
stc
insl
fidivl
repz
lds
push
jp
xor
or
fbstp
xchg
jnp
pop
fnstenv
inc
insl
in
push
outsb
pushf
cmp
jae
push
mov
mov
idiv
scas
popa
mov
in
mov
sub
arpl
cltd
push
pop
mov
sbb
popf
dec
int3
mov
mov
stos
dec
loope
and
or
sub
es
lahf
cmp
inc
sub
pusha
lcall
ljmp
add
pop
xchg
test
loopne
mov
add
rcl
fstpt
jno
addr16
insl
xchg
sahf
mov
test
xlat
dec
fwait
cld
xor
aas
movsl
push
mov
pop
push
mov
push
stos
mov
fiaddl
pop
jbe
ljmp
cmp
addl
lret
adcb
stos
aam
dec
mov
adc
ret
and
jb
enter
xchg
adc
inc
mov
test
xlat
mov
add
imul
cmp
loopne
sahf
mov
add
adcb
fcoms
jmp
inc
xor
cli
or
jne
sbb
pop
push
test
cmp
add
and
lcall
cmp
mov
mov
pop
or
ret
dec
jbe
xlat
daa
or
hlt
push
enter
mov
icebp
dec
sbb
movsb
push
stos
xchg
imul
jbe
jmp
jne
ljmp
or
cmp
inc
dec
shrb
cmp
lret
shr
test
pop
mov
stos
ljmp
das
inc
adcl
push
je
cmc
push
pop
rolb
inc
ret
outsb
push
jge
and
call
aad
sarb
xorl
and
fstps
in
add
or
ss
mov
or
rorl
xlat
xchg
pusha
pop
popf
test
cmp
insl
out
inc
and
fldcw
lahf
pushf
mov
push
add
mov
push
scas
popf
mov
xor
jne
ljmp
in
out
xor
js
aad
cmc
dec
jae
xchg
mov
cs
cltd
movsl
adc
dec
sub
imul
notb
std
pop
mov
and
sub
outsl
hlt
sub
loopne
add
cmpsl
mov
aaa
sbb
roll
dec
xchg
dec
xchg
sbb
jecxz
imul
out
dec
scas
repz
push
sarl
xchg
xchg
mov
out
and
movsb
ror
sbb
outsb
push
sbb
jae
mov
dec
addb
lcall
adc
sub
and
mov
jne
jle
nop
sahf
sbb
jge
idivb
xor
cwtl
adc
bound
xor
aaa
mov
shr
push
sub
mov
sub
jmp
mov
fucomi
sarb
addr16
push
lock
cmp
jle
sub
inc
and
fbstp
inc
addb
mov
loop
pushf
cmp
mov
mov
mov
in
xor
daa
std
add
orl
push
in
sub
test
loop
xchg
popf
in
mov
and
out
sub
jge
push
jo
xchg
and
xchg
test
loope
imul
mov
sub
sub
stos
or
or
mov
pop
sahf
inc
jge
unpckhps
push
mov
dec
aas
roll
ficoml
loope
add
fwait
jns
test
lea
mov
sbb
sbb
xchg
sbb
cld
clc
aam
movmskps
and
gs
sub
xor
dec
je
test
add
ror
mov
mov
mov
inc
sub
out
rcl
push
xor
pop
adc
mov
sub
dec
lret
clc
pop
xor
ds
and
adc
das
mov
sahf
nop
ds
faddl
mov
add
lret
mov
sub
imul
add
xor
push
das
clc
insb
bnd
cs
dec
data16
ficoml
int
popf
mulb
rclb
rcrl
lcall
fidivrs
cmp
int
adc
icebp
fmuls
les
leave
adc
ljmp
addr16
cmp
arpl
mov
lret
notl
or
dec
cmp
mov
bound
in
aas
and
lea
cld
cmp
inc
icebp
push
mov
inc
mov
and
push
mov
adc
mov
adc
xchg
fistps
jp
push
mov
fistl
mov
enter
xchg
movsl
push
xor
into
inc
cwtl
pop
push
adc
std
aaa
arpl
fsubs
add
xchg
std
decl
jmp
nop
movsb
cmc
lock
repnz
xor
xchg
call
in
dec
lods
xchg
addl
into
push
sti
cmp
mov
mov
pop
jg
cld
or
mov
mov
dec
cmp
movsb
dec
or
xchg
pop
sbb
mov
fwait
popa
adc
cmc
inc
mov
fwait
stc
aam
mov
mov
mov
dec
scas
inc
cmp
or
movsb
hlt
adc
jbe
cld
lret
dec
jnp
jns
xchg
popf
test
pusha
jb
xor
and
icebp
or
add
daa
sub
cmc
rorl
fcomps
sub
ss
and
insb
or
fucom
stos
out
sarb
mov
or
push
scas
data16
pop
xchg
sub
and
jo
in
xchg
push
fcmove
push
pavgb
push
jmp
xor
fadd
mov
mov
sub
jb
loopne
cmpsb
mov
lods
ss
rcrl
sub
cs
mov
mov
mov
jle
lcall
sti
data16
aam
dec
sub
push
inc
cmp
into
ja
sub
outsb
adc
loopne
jecxz
adc
insb
popa
cwtl
insl
sub
lret
movsb
dec
jne
lahf
icebp
push
popa
pushf
dec
cmp
mov
cmp
sbb
cmpl
insb
inc
and
cmp
jl,pn
repnz
push
aad
adc
pop
jne
push
mov
sti
aas
mov
mov
push
ret
lds
jmp
add
movsl
or
arpl
js
mov
sti
sbb
and
xor
out
scas
ret
popf
push
add
out
inc
cmpsb
mov
adc
sub
pop
js
stos
cmp
lods
cmp
rcll
jo
gs
adc
or
pop
lahf
adc
fldl
sbb
push
and
or
xchg
lahf
sbb
jp
daa
push
fsts
push
ret
mov
mov
fcmovnbe
pop
shrb
rclb
mov
jo
push
stos
push
les
scas
movsb
loopne
pop
adc
xchg
mov
push
lret
out
fcomp
ss
repz
cmp
jno
stc
and
pop
test
repz
push
rcrl
test
and
imul
cld
pop
stos
rcrb
cmp
dec
cs
mov
push
int
pop
adc
mov
push
test
sbbl
pop
mov
sbb
gs
fsub
movsb
inc
xchg
lock
es
repz
and
add
push
fsubs
xor
xchg
ja
sbbl
jbe
clc
xchg
push
jecxz
cltd
mov
mov
fwait
cs
or
push
jno
and
push
icebp
in
mov
xor
arpl
in
fwait
inc
xchg
pop
sub
push
or
aaa
popf
daa
pop
dec
and
test
mov
or
daa
jno
mov
adc
jle
popa
jne
push
cmpsb
cmp
daa
cmp
sbb
ficoms
scas
adc
int3
fistpl
cmp
pop
loop
cmp
std
lock
mov
mov
mov
clc
popl
push
scas
xchg
shl
in
add
lcall
or
hlt
insb
flds
loope
nop
lods
mov
push
call
or
xor
test
lea
mov
imul
dec
add
pop
subb
les
in
jae
int3
ret
jle
jae
dec
out
mov
push
imulb
das
mov
add
aaa
or
sbb
jmp
notl
or
aad
movl
inc
add
je
subl
and
int3
mov
test
leave
jns
mov
xchg
adc
jle
mov
inc
jns
in
mov
das
repz
movsb
xor
xchg
cmp
pushf
aad
daa
xchg
jl
lcall
ds
push
pop
pop
ss
and
sbb
adc
or
add
push
mov
das
xlat
mov
lret
ret
ds
faddl
lahf
fwait
xor
sub
xor
popa
or
sbb
cltd
and
sub
in
xchg
ret
xor
mov
mov
fnsave
add
test
dec
mov
and
lret
fiadds
lock
rcrl
mov
into
xor
in
cmp
lcall
int
inc
test
mov
cmp
stc
out
push
shr
es
cwtl
dec
daa
add
scas
js
sahf
cmc
pop
push
cmp
cmp
mov
mov
hlt
test
push
loop
rorl
fiadds
xor
xlat
lahf
pop
shl
fistpl
cmp
push
imul
cmpsb
add
jp
add
dec
jecxz
xor
mov
stc
add
mov
jecxz
push
mov
inc
sbb
out
cmp
dec
push
inc
inc
in
sti
cmp
xchg
lcall
imul
outsb
cli
iret
flds
sbb
jno
insl
cli
lahf
or
mov
data16
push
jg
sbb
push
cltd
call
sub
jb
popf
aam
push
addr16
mov
out
push
xor
cli
mov
cmpsb
adc
sub
pop
cmp
push
push
fwait
or
iret
push
xchg
enter
fsub
pop
imul
and
aam
mov
mov
xchg
mov
aam
mov
leave
xchg
sahf
mov
mov
dec
int
int
lret
mov
xlat
push
mov
jge
std
hlt
cmp
out
sub
pop
mov
pop
sub
add
and
sbb
sbb
loope
dec
loope
in
or
pop
cmp
stc
dec
push
add
xchg
and
mov
lret
sub
in
xor
mov
clc
and
dec
inc
cmpsl
cwtl
and
in
push
dec
xor
cmp
jecxz
jae
shr
out
push
mov
xchg
inc
outsb
mov
stos
lods
inc
xchg
inc
lods
mov
push
inc
add
fldt
pop
push
int
repz
dec
xor
or
mov
stos
cmp
enter
les
insb
sti
pop
sub
gs
dec
xor
mov
les
jne
and
jecxz
js
jno
scas
scas
rorb
dec
pop
push
test
addl
enter
jmp
mov
cmp
ret
xorb
xchg
sub
dec
test
xchg
test
sahf
xorb
in
into
jnp
bnd
cmp
add
push
cmpsl
xor
aaa
xorl
aad
cmp
iret
lds
stos
push
scas
pop
in
xor
jecxz
ret
insl
cmpsl
push
xchg
dec
inc
fbld
push
xor
inc
jmp
mov
mov
lods
inc
mov
not
mov
inc
add
xchg
pop
push
add
pop
sub
add
bound
lret
movsl
xchg
stos
aad
imul
in
mov
sti
loopne
jns
addl
pop
gs
cmp
xor
inc
mov
repnz
pop
imul
add
sbb
push
div
test
push
xor
mov
pop
pop
insl
mov
cmp
aad
sbb
sahf
aas
cli
mov
cmp
loopne
xlat
inc
mov
iret
mov
inc
xor
mov
inc
test
divl
inc
jp
xor
fwait
aam
sub
sahf
xchg
pop
rol
pop
push
dec
jg
roll
rolb
sbb
xchg
insl
scas
popf
sbb
ja
insb
divb
repz
push
icebp
clc
pop
inc
test
jnp
mov
cld
outsl
xchg
jmp
fidivs
pusha
lcall
cmpsb
push
lods
cmpsl
push
insb
mul
test
notl
mov
fwait
or
adc
mov
bound
dec
gs
inc
int
es
cmp
sti
lds
loopne
lret
or
sbb
ret
mov
dec
cmp
les
popf
fsts
push
mov
test
lods
in
push
les
and
jle
mov
jbe
dec
nop
scas
rorl
mov
enter
pop
cltd
dec
sub
mov
xchg
cmc
pop
mov
cwtl
sub
fdivp
decl
push
andb
in
addr16
fmul
mov
pushf
sub
push
adc
pop
imulb
dec
shll
cmp
mov
inc
scas
pminub
nop
inc
popf
je
push
dec
std
inc
cmp
mov
inc
loopne
out
sbb
movsl
ljmp
mov
mov
lods
popa
arpl
leave
push
test
dec
aam
in
ret
mov
ja
or
add
fimuls
movsl
js
iret
out
dec
out
shll
stos
nop
shlb
push
orl
pop
xor
daa
push
sub
push
sub
filds
out
mov
out
lds
cmpsb
xchg
aaa
pop
pop
pop
inc
in
aas
loope
jb
loopne
repz
cmpsb
push
sbb
nop
ret
test
idiv
gs
jle
notl
push
fnstenv
repnz
in
mov
add
sbb
mov
std
loope
aaa
js
test
repz
cmovs
jnp,pt
data16
adcl
jmp
pop
jecxz
in
mov
shl
mov
and
jne
mov
and
push
sub
lds
loope
divl
hlt
sahf
scas
loope
sbbb
popf
pop
mov
cmpsb
mov
gs
dec
xor
jmp
fsubs
pop
and
lcall
push
test
sbb
je
les
pop
pop
dec
dec
sarb
jae
jne
rcrl
movsb
imul
mov
pop
sbb
mov
js
aad
pop
loop
inc
fisubrs
ds
cmp
sub
cmp
aad
mov
loopne
sbbb
mov
divb
roll
outsb
ss
inc
std
int
adc
or
sbb
frstor
push
or
jmp
mov
daa
sarl
and
lods
fisubrs
add
mov
xorb
ret
cmc
movsl
aad
and
ljmp
aam
sti
sbbl
in
push
adc
shll
icebp
jno
add
shrl
testl
or
lock
lds
mov
stos
dec
add
adc
mov
jp
iret
and
add
jecxz
adc
stos
add
mov
into
dec
aad
push
push
mov
sub
add
movq
inc
insb
into
mov
dec
mov
pop
add
into
js
fsubs
lods
mov
aas
jp
push
dec
enter
cmp
sub
mov
jbe
aam
subb
and
test
arpl
cmp
mov
arpl
sbb
lret
xchg
dec
push
jb
jae
sbb
mov
lret
icebp
shrb
dec
or
push
pop
add
rorb
aas
jbe
jmp
or
mov
std
and
stc
aas
and
leave
fwait
test
dec
jecxz
sub
clc
icebp
ljmp
pop
sbb
adc
stc
push
loopne
jg
mov
jg
jl
xor
movsl
mov
icebp
loope
xor
outsb
cmp
popf
mov
sub
out
adc
cmp
ljmp
ret
or
int3
jl
iret
mov
mov
popa
lahf
push
test
pop
add
dec
and
es
gs
ss
pop
imul
lret
push
cs
hlt
repz
mov
imul
imul
pusha
in
adc
in
pop
mov
pushf
push
cwtl
scas
pop
into
fisubrl
rcrb
in
xchg
ficompl
shll
inc
test
mov
inc
fwait
adcb
cmp
jecxz
rorl
push
shlb
rorl
lahf
sub
shrl
mov
lods
cmp
mov
xchg
mov
xchg
mov
pop
lea
cld
imul
movl
sbb
mov
xchg
hlt
mov
fstpl
stos
mov
inc
jp
sbb
pop
ret
mov
adc
int3
rorl
aam
pop
jp
push
xlat
test
add
xor
or
js
push
and
push
dec
pop
into
or
lds
push
mov
pop
adc
jne
in
push
xor
loope
sbb
sub
cmp
inc
fwait
leave
out
pop
xchg
mov
xchg
lods
mov
insb
sbb
pop
sbb
inc
cmpsb
dec
cmp
xchg
mov
jp
cmp
or
and
movsl
ja
out
inc
stos
frstor
ja
aas
dec
add
jae
repnz
mov
lods
cmpsb
dec
sbb
sub
cli
sahf
repz
mov
movsb
jae
mov
out
and
inc
clc
xchg
insb
int
addr16
dec
dec
cmp
cmp
xor
mov
sbb
sub
sti
sub
push
ss
int3
mov
das
test
push
push
mull
sub
js
cmp
pop
xchg
mul
ja
shr
shrb
push
into
aaa
outsl
lods
test
bound
icebp
push
mov
and
cmp
jb
cmc
inc
hlt
mov
xlat
hlt
jno
jno
bound
enter
jne
addr16
push
or
dec
aas
jmp
test
xchg
lahf
push
cmpsb
and
fildl
ds
icebp
lock
and
mov
or
mov
xlat
jb
pop
addr16
push
xchg
inc
in
stos
or
jp
pop
and
sub
repnz
shl
add
sbb
or
jge
xor
pushf
lret
test
jg
paddq
pop
sti
outsb
nop
mov
fwait
sub
shrb
pop
add
aam
or
mov
pop
insb
adc
pop
mov
pop
mov
or
les
pop
fwait
pop
je
insb
and
sub
in
clc
mov
popf
or
rol
insl
test
mov
xor
pop
fs
lods
jbe
adc
shlb
scas
gs
dec
dec
cmp
mov
xchg
jbe
arpl
xchg
sahf
push
out
ljmp
xor
or
negb
mov
sub
xchg
dec
cmpsb
leave
dec
jle
out
sub
insl
inc
jns
push
popa
push
popf
and
jle
dec
fcompl
push
jo
adc
cli
pop
cmpsb
and
pop
imul
bswap
enter
ljmp
pop
dec
pop
sub
outsl
stc
es
frstor
cli
js
call
mov
cmp
bnd
cli
xor
inc
test
inc
clc
fcomps
xchg
jecxz
push
jl
mov
or
cmp
popf
ss
or
cmp
inc
cmp
out
data16
add
in
pop
addl
xor
arpl
les
xchg
xor
fbstp
push
ret
inc
enter
xchg
cli
outsb
lds
and
popa
xchg
shrl
popf
xor
mov
mov
and
leave
add
pop
or
pop
and
xchg
xchg
inc
mov
aam
mov
lahf
rcr
xor
test
mov
mov
jnp
lods
insl
addr16
lods
mov
jmp
loopne
pushf
push
fildl
and
sub
add
cmc
sub
jmp
fdiv
mov
mov
mov
insb
pop
leave
repz
inc
or
arpl
xor
outsb
or
aad
popf
outsb
in
lods
jbe
lahf
in
stos
pop
repnz
xchg
imul
inc
mov
push
test
lret
mov
inc
push
mov
sarb
ds
add
lds
xor
popa
fisubs
cli
hlt
icebp
pushf
cmp
mov
and
adcl
dec
pop
push
pop
stos
adcw
or
mov
mov
fucomp
lret
jns
and
jae
or
imul
pop
jb
ret
das
fnsave
push
push
ss
popf
ret
mov
stos
push
inc
add
movsl
pushw
sub
dec
and
lahf
les
mov
sbb
or
ret
push
dec
sbb
aaa
xchg
inc
or
push
cmpsl
ja
loop
loopne
inc
cmp
fdivs
mov
sarl
cwtl
cmp
mov
and
sarl
pop
test
lock
lods
mov
icebp
lret
movsb
push
lock
push
add
xchg
aad
xor
xchg
imul
xchg
mov
jg
mov
adcb
and
cmp
push
xchg
push
hlt
loope
lahf
inc
jmp
pop
shll
js
sbb
xchg
lret
add
rsm
xchg
aad
push
fnstenv
add
or
lock
xchg
pop
flds
shrl
lea
and
outsl
cmpsb
add
cmp
mov
dec
xor
cld
cltd
addl
jns
push
push
xor
xor
hlt
sahf
outsb
ja
cmpsb
mov
stos
repnz
enter
imul
or
int
cs
sahf
jmp
fidivl
or
dec
mov
loop
add
popf
xchg
std
mov
int
outsl
cmpsl
or
cs
lods
mov
aam
pop
xchg
push
push
xlat
mov
fidivrs
inc
mov
jne
les
loopne
dec
iret
mov
jnp
inc
mov
into
mov
push
cltd
dec
or
xor
shl
lahf
jb
fstpl
in
imul
cld
movsl
les
popf
xchg
and
xor
cmp
fidivrl
lret
push
mov
and
aad
xchg
stos
pop
jmp
mov
sbb
xchg
jl
movsl
fdivr
lahf
mov
pop
pop
jns
in
dec
sub
inc
out
aas
add
add
xchg
insb
stos
fwait
out
and
into
testl
int
dec
adc
dec
sub
lret
lret
jnp
and
out
inc
js
mov
mov
lds
aam
jb
adc
into
sbb
cmp
js
fsubrl
inc
push
jne
cmp
sbb
and
jle
insb
lret
in
enter
push
jp
dec
ja
mov
testl
sub
cmp
gs
inc
out
dec
add
pop
mov
jmp
insb
xadd
mov
dec
fisubrs
push
xchg
fcompl
fs
or
ret
out
int
push
loop
outsb
mov
call
lret
fisubs
sub
sbb
add
shrb
mov
jo
bound
sti
jb
ds
insl
data16
push
sub
lcall
imul
adc
or
push
das
xor
add
xchg
add
gs
inc
jbe
push
in
cmp
and
add
out
jno
cmpsb
mov
bound
adc
dec
ss
stos
jmp
push
fstl
insb
push
cld
fcoml
jl
in
mov
imul
sbb
shlb
or
int3
jecxz
icebp
call
scas
jecxz
dec
adc
cld
pop
aad
or
pop
sub
test
adc
les
mov
loopne
push
and
adc
dec
jno
mov
sub
adc
push
mov
mov
xchg
shl
and
inc
packuswb
inc
xchg
push
dec
jb
call
dec
sbb
in
xor
loop
push
test
jg
in
xor
gs
mov
or
mov
in
jge
pushf
jae
int3
mov
and
call
std
inc
mov
inc
pop
xchg
dec
pop
sbb
cmp
adc
dec
ljmp
jmp
test
fs
add
xchg
or
mov
jns
mov
xchg
xor
xchg
cs
jno
pop
das
push
sbb
jmp
jecxz
hlt
rcrl
cmpsb
adcl
push
test
jno
aas
int
imull
das
push
mov
add
jne
push
fisttpl
inc
cmp
pushf
lahf
sub
add
pusha
cmc
dec
cmpl
dec
ja
xchg
mov
xor
push
pop
mov
shll
lds
arpl
or
and
out
or
cmp
jno
sub
mov
das
and
outsw
jl
outsl
mov
mov
mov
mov
and
fnstsw
imul
inc
xchg
and
fidivs
xlat
daa
int
mov
scas
ficompl
call
dec
mov
cmp
mov
notb
pop
inc
mov
leave
cli
ret
loope
mov
out
rcll
sub
xchg
movsb
push
das
inc
lcall
pop
js
out
add
sbb
jbe
fwait
jbe
xchg
and
fstl
cs
mov
imul
popa
mov
sarl
xchg
mov
add
mov
xchg
mov
or
xchg
clc
mov
and
jmp
insb
pop
dec
outsl
adc
fistps
jbe
es
sub
xor
aad
jnp
add
jno
lret
mov
or
outsl
sbb
xchg
inc
inc
sbb
and
ret
nop
sbbb
sbb
cmp
mov
pop
popa
xchg
sub
mov
push
cli
lret
jbe
sub
mov
mov
andb
sahf
and
lea
fnstenv
call
mov
mov
sub
test
flds
add
sbb
repnz
inc
das
das
push
fsubs
shlb
mov
out
mov
insl
cmc
loope
and
sbb
push
imul
sbb
ss
push
loopne
xchg
out
dec
dec
sub
adc
rolb
movd
push
push
xor
push
pop
jmp
scas
dec
cmpsl
insl
mov
cltd
scas
in
sub
stc
adc
or
mov
pop
roll
aaa
push
and
ljmp
jnp
daa
hlt
testb
pop
sarl
mov
dec
add
mov
scas
int
enter
shlb
xchg
insl
insb
andb
std
imul
fimull
test
pusha
dec
mov
das
outsl
pop
dec
outsl
dec
out
fcmovnb
repz
xchg
imul
fs
xlat
xchg
jge
out
inc
adc
lahf
std
sahf
jae
dec
and
cmp
dec
mov
dec
jl
rol
cmp
xor
inc
iret
sbb
dec
test
stos
push
cltd
scas
xchg
push
adc
jnp
into
inc
int
or
or
push
test
inc
jo
mov
test
ret
subl
cmpsb
xor
das
inc
adc
fisttps
adc
dec
arpl
and
xchg
sub
xchg
imul
outsl
pop
or
movsb
ret
mov
das
fbld
ds
mov
xor
das
testl
dec
cli
sbb
repz
ror
mov
jb
jbe
mov
sub
test
mov
dec
xor
pop
out
mov
fmull
popf
popa
addr16
dec
lods
lahf
inc
inc
in
arpl
mov
loopne
jmp
xlat
hlt
add
push
inc
jecxz
sub
mov
repnz
std
push
mov
dec
cltd
lahf
mov
and
mov
aad
cmpsb
cltd
arpl
sbb
pop
lock
add
mov
mov
out
xchg
test
inc
roll
loope
or
mov
xchg
pusha
insl
cmc
adc
push
and
dec
pop
imul
jmp
and
push
fsts
mov
mov
lea
mov
daa
out
xchg
lahf
lret
decb
and
ja
arpl
sbb
ljmp
leave
inc
pop
out
push
out
cltd
jg
cld
xlat
test
push
ds
and
repz
lret
out
push
push
in
cmp
or
adc
pop
adc
adc
xchg
xor
iret
fs
mov
lcall
mov
jmp
adc
pop
scas
fbld
pop
add
popf
xchg
jb
push
push
lods
outsb
inc
outsl
rcrb
test
xchg
lea
std
push
lds
mov
fs
push
in
or
ja
mov
jo
shl
pop
xchg
cli
or
cmpsb
test
cld
pand
pop
mov
inc
mov
add
cs
lcall
psrad
stos
mov
and
outsl
es
shr
popa
xor
repnz
in
test
push
outsl
xor
jbe
sub
loope
shrb
insl
stos
pusha
cld
or
mov
call
pop
stos
arpl
stos
in
lds
inc
repz
js
mov
mov
cmp
mov
mov
pop
les
pop
sub
and
sub
fbld
push
test
xchg
dec
pop
cltd
inc
and
and
cld
push
scas
repnz
mov
sbb
mov
sub
lret
add
ljmp
test
in
in
dec
fdivrs
xor
je
ja
mov
insl
xor
stc
aaa
test
faddp
sbb
cmp
mov
xchg
push
inc
xlat
or
std
jno
lcall
daa
daa
mov
sbbl
ss
xor
aad
jmp
subb
lock
mov
testb
ss
pop
jecxz
mov
lret
and
mov
pop
and
fldl
lahf
ss
dec
or
loop
jge
sub
mov
pushf
stc
idivb
xchg
cmc
or
nop
mov
xor
add
andl
repnz
mov
js
adc
push
pop
push
loopne
outsl
gs
sub
dec
or
add
lahf
mov
repz
pop
jecxz
pop
popa
add
in
rolb
std
insb
pop
idivb
cmp
inc
daa
out
jmp
mov
dec
push
xchg
mov
stos
xchg
inc
adc
outsb
xorl
in
jle
enter
inc
andb
int3
xchg
mov
fsubl
cmc
inc
pushf
test
jg
push
pop
pop
sub
jns
sbb
iret
aas
jl
sti
mov
push
sbb
test
xchg
xchg
repz
xchg
xchg
sub
dec
scas
pop
icebp
pop
pop
or
xchg
push
push
xor
lret
push
jl
sbb
mov
xor
adc
mov
dec
sbb
addl
addb
das
mov
sub
stc
jnp
xchg
adc
pop
cmp
lcall
xrelease
scas
push
xchg
mov
cmp
outsl
fdivr
arpl
and
mov
mov
xor
xchg
movsl
test
inc
out
or
gs
mov
lock
add
push
pop
cmpsb
dec
and
data16
loopne
fs
sbb
sarb
dec
pop
cmc
mov
lret
add
movb
lret
addl
push
pop
lret
sbb
daa
dec
push
in
ljmp
jno
dec
jno
xchg
test
cld
jp
cmc
idivb
mov
cmpsb
mov
test
and
add
sub
fwait
push
sbb
ja
cli
mov
icebp
scas
jmp
test
insb
int
mov
jae
in
sti
insl
mov
or
addb
xchg
sbb
xchg
cmp
jmp
mov
in
pop
and
xchg
movsl
sbb
mov
adc
in
popf
fistpl
out
iret
ljmp
jne
mov
pop
out
test
adc
jl
add
xchg
dec
jnp
loopne
orl
shll
pop
pop
cmpsb
or
push
jbe
sbb
pushf
gs
xor
shlb
jp
mov
push
lods
dec
adc
dec
jbe
mov
sub
jae
dec
fwait
std
dec
out
nop
test
jge
out
or
out
lret
lret
js
adc
cmp
inc
test
mov
and
js
sbb
or
out
mov
push
addl
xchg
shll
shrl
push
imul
call
outsl
addr16
jecxz
mov
mov
in
arpl
inc
mov
jl
cmp
or
push
fmull
ja
stos
jne
lea
lods
mov
stos
cmpsl
pop
movsb
test
idivl
jg
or
ljmp
mov
and
addl
movsl
inc
loop
js
arpl
push
sbb
xchg
iret
fs
aad
pusha
rclb
push
stos
std
jnp
mov
popf
inc
cmovb
adc
lods
std
pop
fcoms
in
mov
sbb
cltd
cmp
ds
mov
or
cs
cmpb
inc
xlat
les
xchg
or
xchg
in
sbb
cmp
sbb
and
inc
dec
data16
mov
push
and
sub
out
sub
adc
push
jmp
mov
jle
xchg
push
dec
js
mov
repz
lret
dec
and
xor
insb
into
in
fdivrl
or
aaa
xor
push
jnp
adc
jmp
jnp
andb
xor
andl
pop
xchg
jle
ja
cmpsb
movsl
and
movsl
xchg
jb
mov
je
fcmovnu
arpl
insb
out
fwait
adc
mov
mov
scas
gs
pop
or
mov
adc
aam
ja
jbe
jno
or
test
pop
gs
movsl
ret
iret
push
sbb
mov
rcll
sar
pop
add
push
testb
mov
pop
loopne
dec
cmp
inc
mov
push
sbb
cmp
movd
jl
sahf
outsl
fs
insl
dec
add
iret
push
in
push
dec
sub
stos
fmull
call
dec
mov
adc
cmp
xchg
leave
popa
repz
mov
scas
movsl
ret
cmpsl
adc
scas
aas
mov
xchg
shlb
xchg
dec
and
dec
icebp
testl
mov
mov
rcl
ljmp
sbb
out
mov
movsb
xchg
xchg
fistps
mov
sub
hlt
adc
xor
cmpsb
xor
insb
xor
adc
ljmp
mov
ficoml
aad
sub
mov
mov
jno
sahf
dec
popf
lret
inc
cmp
scas
sahf
mov
dec
icebp
sti
mov
dec
mov
test
mov
xchg
pop
lods
mov
dec
mov
pop
orb
xchg
pop
in
or
out
adc
adc
ret
and
add
ret
jge
decb
stc
and
dec
sub
dec
jnp
popa
mov
mov
sbb
fwait
sbb
lea
adc
popf
shrb
inc
gs
mov
jl
add
pusha
pop
dec
ds
sarl
cmc
mov
mov
sar
xchg
clc
mov
and
push
xchg
ss
cmp
stos
aas
xchg
pushl
jae
mov
and
lcall
mov
push
pop
sub
inc
stos
cmp
xor
outsl
in
mov
cmc
adc
mov
xor
xchg
push
jmp
or
insb
jge
dec
aas
push
mov
in
mov
cmp
imul
ret
xchg
mov
push
jae
out
and
outsl
xchg
xor
sbb
push
stos
in
int3
xchg
out
mov
push
loopne
sub
adc
mov
int
repnz
movsb
lcall
std
cmpsl
xor
lea
sub
jae
cmp
adc
xchg
mov
popa
xchg
mov
out
jge
xor
out
clc
sbb
push
push
js
mov
mov
out
pop
dec
mov
dec
sbb
cmp
insb
inc
repnz
inc
inc
sub
add
les
fisttpl
mov
xchg
push
addr16
pop
popf
and
push
sbbl
cmpsl
hlt
mov
jno
loop
mov
pop
lret
or
xor
rcrl
repz
arpl
loop
enter
inc
lahf
lods
push
shll
pusha
dec
ss
inc
in
mov
fcoms
mov
jb
inc
mov
mov
jl
lods
rclb
dec
fdivl
jmp
mov
scas
cmpsl
dec
jae
xor
jle
jbe
data16
cwtl
stos
fstpl
xchg
inc
sbb
and
inc
mov
inc
push
add
xchg
fsubrs
adc
mov
xchg
jl
mov
cmp
adc
lds
push
push
fistl
cmpsb
jae
movb
and
and
jl
sbbl
dec
movsl
jp
out
inc
xchg
cmp
add
pop
testl
push
pop
dec
mov
dec
enter
out
or
ss
cmp
xchg
or
daa
subb
pop
sahf
push
inc
pusha
push
loop
mov
jne
push
mov
push
mov
mulb
pusha
in
lods
mov
inc
cmp
jbe
jns
cli
aaa
lods
movsl
fsubs
xor
cmp
sbb
jl
mov
loope
lret
pop
sub
ficoms
bnd
movsl
lods
in
cmp
push
int
or
jle
jp
shll
and
adc
and
mov
fnsave
push
adc
dec
dec
ds
or
jae
dec
das
sbb
sbb
cmp
xor
mov
mov
es
test
push
in
and
loope
js
arpl
pop
or
xchg
cmp
jmp
lret
insl
ja
and
cmp
lds
sbbb
mov
outsl
or
ds
aaa
imul
fdivl
pop
and
jl
lock
inc
test
mov
jb
loope
mov
pushf
jbe
push
cld
scas
and
in
mov
dec
mov
gs
xlat
ret
dec
jnp
mov
inc
mov
jno
in
shll
inc
adc
jb
dec
std
fstpt
popf
jl
je
xchg
daa
mov
xor
and
loop
lock
shll
add
into
roll
adc
repz
movsl
pop
lahf
imul
jl
shll
xchg
add
lods
mov
inc
inc
test
jle
push
adc
sbbb
or
mov
cwtl
xor
mov
shrl
movsl
adc
insl
mov
xchg
xor
sbb
or
xchg
lock
xchg
inc
sarl
shll
std
mov
ss
jo
xor
push
and
test
out
add
mov
dec
cmp
aam
inc
outsb
add
push
jne
test
adc
in
lcall
mov
sub
sbbb
mov
filds
jo
inc
xchg
fdivrl
xlat
xchg
cmp
popa
sub
pop
mov
fs
mov
out
stos
fnstenv
fidivrl
mov
mov
lahf
imul
xchg
pop
or
les
stos
mov
jne
lret
mov
scas
dec
jmp
cmc
xchg
mov
fcmovnb
cld
jbe
imul
pop
xchg
inc
insl
jg
push
xor
popl
sahf
out
or
mov
xchg
or
inc
push
jp
cmp
xor
shrl
mov
test
out
push
pusha
cmpsb
out
or
mov
enter
xchg
jnp
orl
rcrl
xor
sarl
das
push
mov
lea
addr16
sahf
xchg
fsubrs
ljmp
xor
jp
ret
aam
jle
xadd
pop
in
bound
fwait
loope
jge
sbbl
sti
sbb
xchg
xor
cmp
sbb
xchg
bound
pop
mov
movsl
loopne
mov
pop
out
add
fisubl
loope
arpl
fnstsw
pop
cwtl
jne
adc
js
push
outsb
xor
jno
push
pop
nop
adc
add
jbe
lds
sub
mov
outsl
cwtl
lret
in
and
or
dec
mov
dec
xlat
jecxz
ss
jne
addr16
popa
dec
xor
faddp
push
jae
push
lods
fcmovnbe
push
inc
loopne
xchg
leave
add
in
push
sti
sbb
fstpl
mov
mov
mov
ss
cmpsb
mov
cld
outsb
push
fs
inc
imul
inc
pushf
out
scas
dec
mov
add
cmp
inc
test
jle
pop
jmp
mov
outsb
push
lds
mov
test
fwait
and
loopne
imul
sbb
pop
sbb
in
push
test
pop
stc
fs
shlb
testl
push
mov
jecxz
call
jns
int3
in
js
jae
addr16
in
fmul
dec
movsb
jge
push
sbb
cld
out
mov
addl
dec
mov
dec
es
je
inc
jae
xor
pushf
mov
xchg
repz
inc
and
xchg
pop
cmp
jo
orl
mov
lea
inc
pop
adc
jecxz
jbe
jge
mov
sti
in
daa
dec
mov
dec
mov
sbb
cmp
nop
ds
mov
fsts
pop
jb
dec
pushl
test
data16
popa
cmp
mov
mov
jl
out
sahf
or
mov
lods
lahf
stos
cmp
or
mov
jp
push
add
jno
or
mov
push
idivl
jb
fidivrs
or
mov
adc
filds
sub
addr16
int
jne
ss
xor
hlt
test
sub
cli
xor
imul
cmp
ja
jge
and
mov
sbb
cs
loop
add
push
or
or
cwtl
and
pop
jno
fnstsw
subl
sub
xchg
movsb
pop
out
jmp
cmpsl
cmpsb
clc
jmp
popa
push
mov
sbb
cld
cmp
push
push
pop
cmp
lret
inc
aad
scas
xor
test
scas
jbe
fwait
addb
xchg
jp
int3
push
iret
or
repz
add
fcmovnbe
in
jbe
ja
xchg
mov
shrl
call
hlt
daa
sub
or
into
loope
sub
and
sarb
ljmp
dec
rcrb
popf
js
pushf
xor
lods
outsb
push
cli
lods
inc
xor
daa
cltd
lret
pop
cmpsl
iret
mov
fsubl
push
pop
je
leave
ljmp
movsb
fstpt
or
dec
xor
cmp
rcr
dec
pop
sub
add
push
shll
stos
sbb
xchg
sub
mov
gs
pop
sub
inc
pop
inc
push
ss
push
inc
inc
enter
push
outsl
sbb
and
lret
stos
filds
jo
out
inc
divb
pop
mov
ret
jecxz
in
dec
stc
mov
pop
daa
insb
shll
rorb
xchg
adc
xchg
jb
rorb
xchg
int3
xchg
fimull
sarb
xlat
or
rcrl
xor
jp
faddl
pop
cmp
arpl
movsl
dec
aas
je
lods
outsl
mov
sarl
int3
pop
jecxz
rcrb
mov
sbb
lahf
sbb
stos
add
mov
cmp
jmp
mov
jns
dec
inc
nop
lret
adc
les
jae
dec
stc
mov
test
out
push
mov
arpl
mov
mov
mov
out
gs
sahf
insl
int3
rorb
sub
jge
mov
sbb
mov
out
ds
mov
add
jne
sarb
sub
xchg
fstpl
roll
shrl
cltd
scas
rcll
pop
fcmovnbe
or
rclb
sbb
cmpsl
cs
xchg
stos
fdivs
idiv
pop
cmp
int3
mov
mov
repnz
cmp
mov
pusha
repnz
sbb
hlt
fcomip
pop
mov
pushf
cwtl
fstps
push
jle
int
dec
jns
test
out
add
mov
lahf
imulb
add
std
in
sbb
jge
lret
sbb
jmp
push
xchg
lret
xchg
and
pop
movsl
call
dec
dec
jle
jae
shl
negl
lock
sbb
push
xorl
xor
fmull
sub
mov
sub
mov
dec
mov
ret
andb
sub
sub
mov
test
inc
cwtl
cmp
hlt
in
add
adc
nop
sub
adc
aas
insl
shll
cmp
icebp
out
mov
inc
push
cmpb
lods
mov
jge
adc
ds
ret
filds
cmp
mov
mov
push
mov
std
mov
lret
adc
outsl
lret
mov
icebp
add
dec
mov
int3
and
movsl
dec
jp
test
mov
insb
xor
imul
repnz
mov
add
push
out
repz
dec
dec
aas
push
hlt
add
sub
test
pop
movsb
inc
cmp
mov
dec
xor
je
into
pop
cli
shrl
xorb
repnz
dec
pop
or
cmp
test
jmp
inc
test
test
or
ret
jmp
and
pop
adc
cmp
inc
sahf
stos
mov
sbb
mulb
cmc
pop
jmp
mov
or
enter
outsl
cmp
cltd
pop
outsl
sbbb
push
mov
mov
push
sub
popf
jo
insl
es
sub
add
adc
enter
cmp
loop
pop
inc
cli
jbe
dec
mov
outsb
pop
outsl
sarl
cld
int3
mov
dec
jbe
mov
cmp
or
push
add
mov
std
jge
dec
mov
mov
mov
or
dec
sahf
mov
fs
repz
pop
out
cmp
rolb
jl
jmp
mov
das
mov
xchg
pop
inc
cli
pushf
inc
sbb
add
je
dec
enter
add
mov
negb
jp
stc
out
mov
add
mov
mov
dec
sti
test
icebp
add
mov
stos
popa
mov
sbb
xor
mov
iret
lock
into
cmpsl
sbb
push
xchg
bt
dec
aam
mov
mov
out
pop
repz
test
push
fdivl
aaa
fdivl
pop
sti
out
cmp
jmp
scas
push
in
or
jmp
xchg
fdivl
xchg
test
andb
clc
sti
cmc
mov
mov
push
cmc
sti
mov
mov
xor
xchg
inc
or
in
das
jo
outsb
sub
jl
cmp
movsl
cmc
sub
data16
jg
or
pop
ds
fwait
and
fildll
sbb
pop
scas
xchg
inc
in
std
aad
iret
push
addb
xor
sbb
add
adc
ret
cmp
enter
cmp
pushl
movl
pop
push
jg
lods
aas
add
jne
xor
jmp
mov
add
sub
mov
xor
insb
jp
leave
adc
sub
stos
fisubs
sub
jmp
inc
or
jne
fmuls
rolb
or
aam
scas
push
mov
mov
sub
add
notb
cmp
rorb
imul
mov
je
xchg
cmp
sbb
into
mov
pop
jae
sub
ret
lahf
jae
jns
or
add
or
lock
inc
pop
mov
cmpsl
ret
push
cmc
dec
fisubrl
mov
pop
or
lods
or
jle
push
mov
movsl
xor
jo
bound
mov
aad
or
push
push
dec
fcoms
inc
xor
data16
pop
addb
xor
jle
push
adc
jns
xchg
sbb
ljmp
orb
or
nop
fnstcw
imul
dec
or
sbbb
mov
xchg
lods
mov
dec
pop
xchg
xor
jmp
bound
xchg
arpl
inc
stc
fldcw
outsb
ret
pusha
add
sahf
jl
roll
inc
in
add
push
data16
or
addr16
popf
adc
pop
push
sahf
adc
into
dec
xor
cld
mov
push
icebp
jno
and
xchg
mov
ds
or
or
adc
xchg
jne
imul
call
xor
pop
rcrb
inc
call
insb
cmp
andl
sub
loopne
xchg
aaa
or
xor
jecxz
or
fistpll
std
stos
xor
jp
ror
xchg
nop
pop
enter
rcrl
bnd
xorb
clc
negl
dec
popa
sti
mov
mov
mov
sbbb
mov
es
adc
cmp
xor
clc
mov
adc
clc
xor
cmpsb
sub
cmp
repnz
pop
js
dec
push
pop
ss
shrb
and
jecxz
fsubs
mov
xchg
out
icebp
subl
push
mov
sub
loope
outsl
stos
xor
jnp
test
adc
fdivs
ss
mov
sub
pushf
lea
and
mov
or
les
cmc
xchg
divb
sub
inc
mov
jbe
cs
inc
dec
mov
dec
sarb
addr16
aam
es
ljmp
rorl
and
mov
int
sbb
outsb
out
sbb
cld
call
sub
add
push
stos
ja
sub
and
xchg
and
lret
addr16
and
xchg
mov
lea
sub
mov
pop
mov
sbb
ret
sub
and
in
sahf
push
stos
loope
or
xchg
push
inc
popl
inc
sbb
mov
nop
pop
push
xchg
fmull
mov
or
xlat
mov
cmpsl
call
push
enter
jnp
fstp
imul
jle
sbb
test
imull
dec
mov
stc
xacquire
xchg
iret
ljmp
and
sub
cmp
sub
cmp
jg
lret
push
pop
sub
push
inc
fadds
sbb
sbb
jmp
sbb
push
or
lock
bound
repz
pop
mov
cltd
inc
push
testl
mov
mov
lods
jl
outsl
test
jmp
fsubrs
iret
test
shll
dec
cwtl
movsl
orl
lret
repz
xor
mov
sbb
jns
xor
pop
sti
push
arpl
test
fwait
mov
icebp
push
repnz
sbb
adc
loopne
jl
pushf
push
incb
xchg
cmp
jno
xor
mov
mov
aad
popa
out
dec
pusha
lods
xor
xchg
ja
jl
imul
add
push
addb
xor
lret
repnz
pop
mov
jmp
enter
out
daa
arpl
lods
mov
cmpsl
dec
jne
xorl
fwait
cmp
aas
scas
xchg
call
jns
push
pop
cmp
sbb
call
not
lcall
imul
jno
cmpsl
adc
mov
shll
cmp
cmp
inc
jg
cmpsb
mov
stc
dec
shl
mov
dec
lock
xchg
pop
sbb
mov
cwtl
lock
xor
push
sub
test
les
pop
mov
add
xlat
mov
xchg
bound
mov
mov
fwait
fs
shrb
push
sbb
xor
es
sub
out
test
insb
repz
pop
mov
in
mov
test
enter
test
xor
movsl
pop
jle
iret
inc
inc
sub
cmp
jge
in
je
not
aas
or
sub
inc
dec
mov
pushf
inc
addb
pop
add
sbb
lret
iret
dec
ret
mov
std
xchg
int
cli
ja
les
xchg
xchg
push
cmc
mov
xchg
mov
xor
cmp
rorl
sti
divl
pop
inc
cld
add
fwait
xchg
loope
rorl
hlt
pop
inc
jecxz
and
dec
xchg
jp
mov
inc
mulb
pop
popa
mov
adc
lock
leave
dec
add
jl
dec
lock
mov
sub
jmp
enter
aaa
push
movsl
add
enter
test
mov
imul
sbb
inc
hlt
mov
adc
lea
je
lret
rorb
jbe
push
push
xchg
rcr
dec
rorb
jne
sbb
jge
ficoms
push
pushf
dec
arpl
inc
pop
pop
aas
xchg
pop
insl
sar
cmc
pop
mov
daa
xor
jo
mov
fnstenv
pusha
mov
sahf
jne
dec
xor
pop
pop
xor
dec
push
daa
aaa
mov
push
push
mov
pusha
subl
in
and
inc
in
ds
loopne
and
arpl
fadds
rcr
ret
pop
xor
fidivl
mov
cmp
mov
inc
xor
enter
sbb
imul
dec
hlt
inc
insb
adc
jge
pop
ret
sbb
into
mov
mov
dec
inc
std
push
gs
inc
inc
pop
mov
insb
mov
enter
jb
sub
rdmsr
das
cli
ljmp
int3
in
aas
insb
test
sti
sbb
and
scas
jno
leave
arpl
pop
scas
mov
or
and
jp
mov
das
jne
test
fwait
mov
orb
pop
hlt
aaa
loopne
mov
cmpsl
and
lock
fsubrs
ljmp
dec
jle
pop
add
mov
and
mov
xor
cli
stos
dec
sar
jge
fcmovnb
push
js
xchg
mov
fmuls
shl
scas
shll
cmp
cmp
and
mov
ljmp
gs
mov
adc
inc
adc
cmp
notl
addl
inc
push
or
mov
int3
push
and
mov
inc
test
pop
scas
shrl
icebp
cmc
outsl
in
lahf
aam
pop
xchg
pop
ret
rolb
stos
hlt
add
cmp
push
fwait
je
enter
ret
sti
cmp
jnp
fidivl
jg
adc
mov
out
mov
pop
lods
mov
pushf
clc
mov
xchg
lods
or
adc
loope
ja
fsubl
in
inc
sub
rcll
mov
lods
jne
push
sahf
jbe
and
push
aam
sbb
fs
jno
mov
in
xchg
clc
fildl
xchg
movsl
es
int3
shlb
pop
inc
loopne
loop
adc
out
xchg
aaa
pushf
inc
push
xchg
jne
adc
jle
jmp
fidivl
fiadds
push
xchg
inc
dec
cmpsl
aaa
jle
pop
daa
test
add
fld
add
xchg
stos
inc
shll
test
mov
mov
or
repz
inc
adc
mov
mov
in
lea
mov
inc
popa
loop
push
mov
xor
movsb
mov
xor
int3
test
add
push
sahf
out
data16
sbb
mov
xchg
repnz
sub
arpl
pop
clc
sub
adc
movsl
sbb
adc
pop
stos
push
ss
xor
and
xchg
aad
xor
sbb
mov
addl
iret
jl
out
xlat
sarb
add
test
sahf
cld
inc
add
loope
push
ljmp
and
mov
bound
push
mov
cmp
jl
dec
daa
cmpsl
and
pop
out
xchg
and
ss
lret
call
inc
mov
add
daa
pop
out
lods
push
mulb
mov
dec
xchg
jge
mov
sbb
lcall
add
inc
sub
shlb
fcmovnbe
imul
cmpsl
inc
je
rcl
pop
fs
and
jo
lahf
push
jae
xor
out
mov
jns
push
imul
cld
js
cmp
fcmovne
push
lretw
sub
rorb
or
adc
jns
dec
and
outsb
cmpsl
and
xorl
movsb
jns
pushf
xchg
xchg
addl
mull
loop
adc
lret
popa
jp
push
clc
xchg
mov
push
or
cmp
ret
mov
fsubrs
ja
inc
and
fidivl
imul
cmpsb
mov
mov
and
lret
fistl
outsl
enter
out
jmp
imul
jbe
inc
test
add
push
not
jnp
repz
je
or
and
jae
jbe
adc
add
or
popa
and
sub
add
and
stos
dec
jge
int3
mov
in
pushf
push
sub
pushf
sbb
xor
je
push
push
addr16
jmp
add
mov
xchg
mov
push
sbb
jbe
sub
lahf
cmp
mov
jp
mov
or
gs
dec
dec
mov
lods
stc
insb
out
push
in
cmp
push
add
and
loopne
cwtl
jmp
clc
sbb
add
sahf
mov
insb
push
lahf
icebp
jle
add
push
adc
push
je
insb
ljmp
push
add
push
jno
filds
sbb
movsl
push
or
sbb
mov
clc
sbb
std
pop
sbb
jmp
int3
jnp
test
mov
adc
or
pop
mov
pop
jmp
dec
add
outsb
pop
cltd
aam
and
xchg
adc
mov
sahf
mov
mov
add
mov
test
repnz
stos
jo
push
insl
nop
pusha
jle
outsl
pop
out
push
or
sub
mov
pop
dec
xchg
mov
int3
xchg
mov
enter
sti
cmp
or
and
sub
sub
mov
sbb
xchg
aad
adc
xchg
fsubl
or
mov
pop
dec
sub
xor
scas
lahf
cmp
sbb
pusha
xor
xor
fildl
sahf
fnsave
xchg
mov
dec
jns
shll
add
push
inc
mov
cmpl
out
popf
jnp
mov
ficompl
inc
mov
mov
or
pop
js
aad
sbbb
jg
or
sbb
jl
mov
dec
int3
xchg
testl
mov
xchg
pop
lahf
das
adc
dec
mov
mov
ljmp
int
adc
cmp
cmp
into
inc
adc
pop
cmp
cs
inc
loop
ret
cmpsl
bound
in
ret
lcall
jp
pop
cmp
scas
out
and
ficompl
int
cs
leave
test
mov
add
in
mov
data16
js
pop
sahf
int3
pop
adc
sub
incb
cwtl
pop
jmp
xor
mov
shlb
dec
sbb
mov
outsb
pop
leave
sbb
and
xlat
stc
pop
std
fs
scas
xchg
loope
lahf
inc
xor
jno
xchg
fs
cmpsb
mov
mov
jbe
sbb
cli
mov
icebp
xor
jmp
mov
pop
mov
adc
mov
xor
pop
jno
jecxz
cmp
jecxz
xor
decl
outsl
mov
xchg
mov
lea
xchg
scas
and
ljmp
insl
push
ficompl
xchg
xchg
mov
sbb
je
sbb
dec
jae
mov
fcmovbe
push
pop
lcall
out
mov
jle
pop
out
fimull
and
or
xchg
xchg
xchg
push
push
xchg
or
std
call
add
jnp
jmp
adc
and
mov
sbb
nop
xor
and
jl
xchg
in
xchg
and
ja
cmp
mov
scas
adc
sub
and
dec
and
js
mov
gs
iret
arpl
push
xor
rol
jg
int3
pop
mov
pop
push
mov
icebp
mov
aaa
loopne
test
dec
adc
stos
sub
mov
jno
movsb
aas
sar
lcall
aaa
int
mov
xchg
pop
jne
dec
jno
inc
ljmp
pop
jle
adc
imul
cmp
cs
adc
rcrl
dec
adc
and
or
repz
popa
mov
xchg
nop
in
repz
mov
ret
hlt
ljmp
pop
cltd
test
xchg
out
xchg
test
xchg
fucomi
adc
sbb
or
mov
mov
add
nop
dec
adc
inc
cmp
pop
xchg
mov
fists
lret
mov
cli
out
push
push
into
cmp
in
movsb
loop
les
pop
mov
or
jp
mov
lahf
leave
dec
test
mov
push
fs
mov
and
stc
cmp
or
pop
hlt
add
pushf
mov
mov
movsl
push
add
scas
adc
scas
xor
or
sahf
xchg
dec
ja
dec
xchg
jae
cmp
sti
outsb
arpl
xchg
inc
filds
dec
jl
push
pop
jl
push
push
adc
lods
mov
pop
sub
mov
cmc
dec
stos
cld
jle
jge
mov
inc
popa
inc
lcall
mov
hlt
imul
push
xchg
add
xchg
sahf
mov
pop
cmp
loope
scas
add
inc
dec
inc
aas
push
es
xor
xor
xchg
xchg
out
shll
sbb
mov
jg
or
xor
xor
js
mov
fs
icebp
push
adc
gs
popa
and
xchg
movsl
sahf
out
les
mov
mov
pop
adc
jns
pushw
pop
adc
mov
in
stos
aad
fsubs
jle
movsb
jne
lret
cmpsl
ficoms
xchg
pusha
mov
push
iret
xor
imul
dec
lahf
ljmp
xchg
das
in
adc
rcl
mov
and
inc
mov
sub
rcrb
pop
mov
pop
pop
pop
pop
rclb
pop
dec
and
lret
cmp
in
xor
addb
pop
xor
scas
test
fisubrs
loope
stc
es
dec
hlt
xchg
or
enter
mov
adc
les
jp
ljmp
incl
pop
lds
enter
daa
outsl
jno
popa
xchg
pop
hlt
adc
mov
movl
xor
iret
ja
rcll
or
std
add
rorl
cmp
and
sbb
add
mov
adc
or
enter
mov
sbb
push
js
call
in
push
aad
mov
gs
xchg
test
mov
iret
sub
fidivs
ret
test
out
adc
int3
mov
sti
nop
xor
sti
or
test
mov
sbb
dec
pushf
aam
push
jne
xlat
xchg
sub
inc
adc
dec
mov
pop
lods
xor
repnz
int
lahf
xlat
out
in
aam
pusha
mov
xor
das
cmc
mov
and
mov
pop
mov
rcl
iret
mov
push
jnp
cmp
daa
loop
inc
or
insl
and
lods
test
pop
ret
xor
aaa
mov
mov
nop
lea
andb
aaa
repnz
ficompl
out
pusha
pop
xchg
shll
in
mov
adc
daa
pop
loop
pop
aaa
shl
fildll
xor
in
insl
test
cmp
cmpl
int3
test
and
push
pusha
imul
mov
call
xchg
xor
movsl
jnp
sub
or
cltd
in
out
loopne
and
sbb
mov
mov
out
fsubl
xor
fnstsw
popa
dec
fisubs
lods
xchg
sub
xchg
out
iret
adc
sub
jb
mov
pop
movsb
mov
iret
into
add
push
rorl
cmp
or
ret
lea
es
int
jmp
mov
jae
sbb
cltd
aam
inc
jge
pop
arpl
repnz
push
mov
movsb
dec
mov
sbb
push
pop
jle
scas
stc
push
sti
iret
rolb
add
ljmp
jnp
orb
mov
mov
popf
movsb
jmp
stos
or
ficomps
lret
fwait
push
loope
pop
mov
add
adc
sbb
scas
lods
adc
ret
or
sahf
movsl
jne
or
movsb
clc
sti
stos
pop
xchg
pop
rclb
lods
popa
xor
cmc
pusha
cmp
adc
xchg
loopne
loopne
mov
mov
sbb
push
movsb
fcomps
inc
lock
dec
sub
scas
push
movsl
adc
mov
inc
and
and
fadds
cwtl
insb
out
jne
sub
ja
or
push
adc
filds
mov
cmpsl
loope
jl
rcrl
adc
cltd
les
repnz
mov
sub
jae
xor
fwait
mov
push
in
jp
loope
adc
push
into
popf
lds
stos
add
movsl
insl
dec
notl
or
sub
push
mov
cli
dec
sub
je
dec
mov
int
cltd
mov
call
hlt
pop
cwtl
or
mov
inc
test
mov
nop
ret
sbb
mov
jns
in
push
into
cs
testl
pop
lea
jecxz
sbb
mov
mov
mov
or
fmulp
dec
cmp
mov
dec
in
call
test
jmp
dec
and
aas
cmpsl
or
por
inc
in
push
push
xor
ficoms
add
pop
jbe
push
mov
push
in
stos
mov
insl
xor
stos
in
jno
outsl
out
pop
aad
xor
sbb
pop
imull
lds
movsb
lahf
fcompl
insb
push
xor
cmpsb
dec
test
fmull
mov
cld
xchg
pushf
jne
mov
dec
adc
lds
call
fsts
adcb
jns
mov
lock
mov
pusha
jo
adc
pop
pusha
bound
sbb
test
out
jno
push
lret
and
fwait
leave
outsb
cmp
into
pop
pop
testl
ja
test
jl
pop
push
sbb
cmp
mov
pop
inc
sbb
stos
or
or
or
cli
cmpsb
adc
stos
jl
lds
cmp
adc
ret
cltd
mov
xor
test
sbb
rcrb
mov
xchg
cmc
sub
cmpb
test
add
repz
cmpsb
insb
cs
pop
ja
jecxz
repnz
dec
jno
jle
rolb
sahf
mov
xchg
mov
arpl
std
xor
stos
insb
adc
out
mov
sub
ret
iret
in
dec
lock
xchg
in
add
aam
dec
or
lret
cmp
stos
jns
fidivl
insb
xchg
popa
out
push
mov
rolb
jle
addr16
jnp
inc
add
mov
or
clc
sub
repz
adc
cmp
cmp
aad
cmp
enter
jns
loopne
into
sbb
nop
lods
sub
sbb
insl
into
push
or
add
inc
cli
xchg
mov
push
mov
jnp
mov
xchg
inc
mov
add
mov
loopne
call
sbb
xchg
inc
subl
cmp
lods
cmp
push
lcall
pop
sar
xchg
sbb
mov
pop
push
scas
nop
ret
and
lcallw
sbb
mov
cltd
mov
jecxz
mov
mov
iret
data16
dec
mov
inc
jecxz
or
pop
dec
lcall
dec
fiaddl
cmp
push
fdivl
sahf
sub
aad
jb
sub
lcall
sbb
cs
punpcklwd
push
xor
faddl
sub
mov
inc
das
sti
xchg
push
inc
cltd
int3
jge
mov
lods
clc
fiadds
mov
in
or
aad
repnz
adc
pop
testl
jae
pop
or
outsl
fistpll
ljmp
das
push
and
sbb
push
sbb
adc
sub
push
out
dec
push
lahf
cmp
xlat
cmp
sub
es
ret
enter
xchg
xor
cli
mov
pop
testb
loop
lahf
and
jmp
jge
pop
fcomps
pop
cmp
mov
mov
xor
ret
pushl
ficompl
add
inc
xor
push
nop
lea
test
out
or
inc
into
or
in
into
and
idivb
fldcw
add
loop
adc
stos
sarb
sub
arpl
sbb
inc
in
dec
xor
adc
or
pop
or
mov
shrl
jbe
sub
loope
test
shr
pop
add
jmp
adc
subb
ja
es
pop
cld
xor
adc
mov
adc
jp
test
or
in
popf
inc
rcrl
jg
xor
add
inc
jge
mov
mov
imul
enter
testb
sub
and
cmp
mov
insl
fnsave
cwtl
xchg
pop
js
cwtl
or
in
stos
sbb
aas
std
or
xchg
and
sbb
lret
sar
mov
stos
lods
pop
mov
cmp
add
add
pusha
movsl
dec
mov
jno
and
icebp
mov
dec
lods
xchg
dec
fisttps
xor
push
int
test
test
cmp
adc
rcrl
mov
lods
fwait
mov
dec
xchg
lods
call
adc
sub
pop
mov
ret
jle
loop
add
outsl
ja
aam
jae
rorl
fwait
jmp
or
fcomps
and
rcll
cmp
out
dec
fnop
in
cli
sti
jle
inc
xchg
pop
mov
inc
inc
jmp
jmp
inc
push
cmc
arpl
push
adc
add
mov
pop
and
adc
mov
ficompl
inc
or
jb
les
mov
frstor
add
sub
push
mov
dec
sbb
repz
mov
shll
push
pop
jp
stos
add
adc
cld
enter
xor
ror
push
dec
cmpsb
pushf
imul
lahf
testl
mov
xor
lea
mov
cwtl
aas
lcall
pop
sub
rolb
mov
and
hlt
dec
or
call
mov
mov
ret
repz
sbb
pop
mov
lahf
sub
mov
ss
movaps
ret
in
and
adc
out
mov
or
shl
cs
push
mov
jno
dec
les
fs
cmpsl
sub
push
push
sbbl
inc
in
sahf
divl
push
add
jg
out
push
jbe
rcl
jo
ljmp
hlt
inc
ss
add
or
out
and
inc
imul
icebp
adc
in
and
inc
incb
pop
aam
in
push
stos
test
clc
and
pop
mov
fs
aam
jge
sub
imul
fcmovne
fisubrs
cmp
or
lods
inc
icebp
xor
pushf
in
loopne
imul
icebp
mov
or
les
fstps
add
xchg
divb
jo
fdivrl
cwtl
popf
jb
push
fsubrl
jns
dec
xchg
scas
lret
in
bound
hlt
pop
lahf
pop
xchg
mov
fwait
das
sbb
outsl
sub
push
dec
pop
pop
daa
sbb
jb
xor
popf
dec
sub
outsb
sti
pop
psrlw
lds
mov
xor
scas
or
lds
or
mov
in
push
push
shrl
or
mov
jbe
nop
loopne
fisttpll
sub
mov
mov
imull
mov
mov
popa
push
dec
lock
outsb
inc
int
movsl
clc
mov
xchg
in
xor
inc
sub
mov
pop
sub
test
xor
mov
stos
cmp
push
push
mov
sbb
push
xchg
or
lods
pop
adc
and
dec
lahf
out
cmp
repnz
jle
cmpsb
js
adc
dec
pushf
je
lods
dec
addl
loope
and
adc
jmp
sub
and
sbb
xchg
popa
popa
add
fucomp
pop
xchg
add
or
loop
cmp
out
dec
mov
jae
scas
lret
out
mov
jae
push
test
sub
adc
and
shr
mov
and
lahf
add
fisubl
or
ficoml
pop
adc
in
cld
out
xorb
ret
lods
dec
out
vshufps
xor
arpl
sub
shlb
mov
pushf
lret
lret
jle
xor
and
std
jo
push
xchg
xchg
pop
inc
add
mov
fdivp
ret
inc
pop
fists
and
dec
adc
fsubrs
xor
push
mov
je
mov
and
test
jbe
cmpsb
jecxz
jecxz
push
push
lock
inc
inc
push
aas
cli
lds
cli
movsl
out
movsl
shr
and
and
ja
mov
aad
inc
into
test
adc
fwait
jg
in
aam
fimuls
sub
mov
mov
movsl
pop
push
or
shlb
sarl
sbb
push
xchg
sub
mov
pop
scas
bound
hlt
push
cmpsb
mov
in
and
call
testl
xchg
or
jmp
lret
into
xchg
out
push
sbbl
fldcw
les
adc
idivl
xchg
bound
pop
add
repnz
and
addr16
inc
inc
out
shll
jp
mov
aaa
repz
xor
dec
dec
add
pop
aad
xlat
hlt
fiaddl
insb
out
mov
xchg
mov
daa
inc
xchg
push
lahf
mov
and
mov
mov
jmp
sub
xchg
divb
sub
hlt
je
mov
imul
mov
cmp
or
cs
icebp
gs
xor
imul
inc
mov
cmpsl
cmp
push
xor
adc
loopne
cmp
decl
roll
dec
outsb
xchg
push
mov
dec
stos
dec
cld
rorb
xor
mov
xchg
iret
mov
mov
out
stos
cmp
pop
ja
push
add
jae
xor
xor
loopne
xor
mov
sbb
js
enter
add
mov
mov
sbb
mov
mov
cmp
mov
sbbb
push
mov
xchg
pop
mov
fldl
pop
xchg
fildll
je
xlat
mov
sar
jo
add
adcb
mov
arpl
mov
jb
mov
aam
or
sbb
outsl
into
and
out
pop
fdivs
ss
pop
cmpsl
fstpl
enter
jecxz
stos
loop
sub
ss
push
xlat
inc
adcb
lret
mov
dec
xchg
icebp
mov
xchg
mov
fmull
iret
shlb
and
test
xor
in
js
nop
adc
xlat
add
fdiv
leavew
ds
dec
in
das
pop
mov
adc
pop
ret
jmp
fidivrl
adc
or
shl
scas
int3
lea
cwtd
aaa
imul
pop
dec
fs
movsb
aam
scas
adc
scas
fnstenv
mov
scas
sub
lcall
mov
insl
rclb
imul
push
pushf
jle
insl
fisubrl
mov
mov
inc
cmp
mov
rcr
in
mov
mov
sbb
daa
iret
inc
push
adc
push
daa
push
xor
mov
and
ret
inc
aaa
cmp
dec
inc
mov
jg
aas
sbb
sti
push
fucomi
insl
xlat
mov
jo
or
cmp
outsb
cltd
mov
pop
jb
fs
pop
xor
lahf
repz
push
sbb
push
xchg
mov
int3
mov
les
in
pushf
inc
and
or
ret
pause
icebp
mulb
jl
push
lods
cli
sub
stc
xor
imul
xor
inc
or
xor
dec
push
insb
jae
cmpb
or
mov
je
imul
add
ret
js
mov
push
jbe
sti
push
jno
adc
cmp
mov
mov
xchg
mov
dec
pop
pop
push
mov
pop
lret
mov
push
cmc
xor
outsl
lret
push
outsb
icebp
sahf
adcl
icebp
mov
cld
int
push
jle
mov
imul
sahf
mov
xchg
inc
int
lds
in
mov
jns
fwait
out
mov
sbb
das
adc
mov
out
js
xor
mov
popa
rcr
mov
mov
push
jl
sub
stos
lea
pop
mov
outsl
push
out
sarb
inc
test
and
ret
add
push
mov
xchg
push
sahf
push
xor
scas
pop
out
in
jl
mov
cwtl
jbe
mov
sbb
adc
xchg
or
mov
push
mov
lret
ror
push
xchg
ja
xchg
cmp
insb
leave
xor
data16
push
dec
or
xchg
fwait
xor
enter
repz
fldl
aam
or
data16
test
push
cld
neg
cmp
mov
inc
flds
jmp
xchg
in
out
inc
cmpl
pop
pop
fldt
and
shll
dec
inc
aaa
mov
fldenv
push
push
or
sub
inc
sysenter
add
push
pop
rorl
add
xor
adc
xchg
out
pop
insb
xchg
cltd
dec
push
mov
sub
nop
mov
imul
sti
enter
xlat
xor
and
aad
ret
pop
test
dec
sub
jbe
mov
sub
pop
xchg
popa
sub
movsl
jo
cmp
jbe
pop
inc
or
or
aad
fistl
or
insb
jno
push
test
adc
adc
fld
insl
sub
out
push
sub
cmp
popa
push
sbb
inc
inc
ja
gs
mov
bound
pushf
cmc
mov
adc
dec
mov
cli
loop
inc
jne
mov
or
mov
fisubrl
xchg
pop
insl
sub
jnp
dec
loopne
lods
les
push
mov
inc
in
sub
jb
hlt
into
ja
insl
and
ret
movl
stos
mov
and
mov
pop
jae
add
cmp
push
cli
ljmp
cmp
cmp
fdivl
out
call
movsb
push
out
or
scas
fbld
shr
repz
jbe
cmp
clc
xor
sti
lcall
xchg
or
mov
mov
push
mov
push
cwtl
popf
and
mov
test
mov
pop
js
push
and
jle
jmp
adc
mov
dec
add
mov
xor
fld
mov
mov
dec
push
push
push
push
stos
push
xor
jmp
andl
mov
loopne
pop
xchg
xchg
pop
cld
das
mov
lods
lods
sub
stc
adc
hlt
xor
mov
test
jb
sub
fidivrs
and
ret
inc
test
hlt
inc
divl
or
pushf
into
jno
push
nop
cmp
push
cmpsl
icebp
popf
lcall
icebp
jo
pop
mov
int
sahf
ficomps
jno
nop
scas
fwait
movsl
xchg
faddp
push
or
mov
fnstcw
cmc
lret
rorb
jae
leave
imul
push
int3
dec
aam
movntq
out
dec
in
jl
mov
sub
jmp
and
popa
jo
filds
inc
scas
repnz
scas
mov
aad
and
xor
push
pusha
fidivrl
sbb
push
xchg
rclb
repz
mov
xchg
mov
mov
les
inc
push
out
adc
shll
mov
mov
imul
cmp
cmpsl
push
stos
mov
insb
rcl
lods
add
sahf
jne
data16
mov
push
push
int
out
aas
stos
mov
mov
int
add
adc
xchg
stos
adc
xor
jno
xor
test
mov
iret
loop
or
jo
mov
xor
clc
aam
dec
ja
push
repnz
mov
pop
ds
dec
arpl
adc
push
cli
bound
push
jge
mov
jns
std
add
xchg
xchg
dec
les
divb
and
xor
addl
push
test
int
rclb
repnz
test
lds
out
pop
pop
movsl
push
or
cmpsb
xchg
push
push
mov
stc
push
jb
pop
mov
push
nop
icebp
int3
les
add
sub
imul
std
push
aaa
jo
fcoms
push
pop
in
adc
sbb
into
adc
jno
cld
ss
call
popa
out
call
addl
pusha
lods
jmp
in
leave
sub
dec
dec
movd
jmp
add
jge
jbe
xchg
divps
xchg
ss
and
mov
xchg
imulb
outsb
inc
lods
insb
sbb
jecxz
mov
pusha
push
daa
bound
add
xchg
repz
xchg
movb
repnz
addr16
testb
fsubr
pop
pushf
je
sbb
mov
pop
imul
nop
movb
sbb
xchg
mov
subl
inc
xchg
insb
ret
addr16
dec
mov
dec
cmp
add
and
fmull
arpl
and
shll
pfrsqit1
mov
xchg
mov
add
inc
clc
in
sbb
das
push
les
xor
or
nop
push
mov
jno
shr
rcrb
inc
fldcw
stos
fcomps
sbb
push
sub
and
cli
lods
mov
pop
fcmovnb
lcall
movzbl
test
sub
xchg
xchg
cmp
cmp
lcall
jl
and
jg
lret
mov
stc
dec
sti
shrb
push
in
jo
cmpsl
xor
ficompl
dec
cmp
mov
mov
es
sbb
loope
jno
loop
add
mulb
ja
in
je
inc
xchg
and
cmp
outsb
addr16
hlt
push
xor
inc
ja
jb
adc
addr16
xlat
or
push
fbld
js
xchg
lods
pop
jmp
out
rcl
xchg
in
lcall
enter
push
inc
xlat
and
dec
pop
movsl
add
push
pusha
pop
scas
aad
add
sbb
pop
jae
mov
or
in
imul
dec
sbb
daa
xor
adc
jbe
pusha
addl
fs
incb
mov
mov
lret
mov
pop
lods
roll
mov
lods
daa
or
xchg
int
cwtl
das
push
xor
dec
enter
mov
pushf
xor
pop
cmpsl
jb
insb
into
pop
das
or
inc
dec
sub
ret
into
push
mov
or
mov
and
sub
icebp
fsubs
adc
xchg
mov
data16
andb
sahf
dec
fbstp
ja
fisubs
in
jecxz
into
dec
sti
mov
popa
addr16
or
add
pop
jns
notb
sbb
push
xor
xor
cmp
outsl
out
fmull
mov
jge
xor
sub
ljmp
pop
movntps
or
aam
into
ss
xlat
dec
ljmp
addl
push
sbb
adc
ficoms
mov
inc
in
pop
push
add
imul
dec
cmpsl
add
push
aad
ret
subb
adc
push
and
jno
sub
lods
ds
push
arpl
dec
fnstcw
adc
xor
cmc
jge
and
loop
fbstp
sbb
xlat
pop
dec
out
in
xchg
or
cmp
aam
jl
loope
sbb
and
ljmp
and
dec
pushf
popf
insb
imul
es
xchg
adcb
mov
aaa
scas
jg
jle
sbb
jp
test
push
pop
mov
sbb
mov
fdivrs
pop
jbe
mov
lret
adcl
mov
scas
aam
mov
lea
out
add
inc
dec
cmpsl
xor
inc
pop
push
and
jnp
or
push
dec
das
push
sahf
cmp
scas
sbb
movsl
cld
repnz
mov
imul
jge
sbb
ljmp
cmp
mov
ljmp
sub
push
in
push
sub
mov
pop
mov
fs
xor
outsl
addb
rorb
pop
rcll
xor
sub
call
ret
mov
rolb
mov
sahf
sbb
add
adc
fsubrl
xchg
adc
jo
jo
nop
cwtl
cmpsb
cmc
add
lods
dec
add
cwtl
imul
lret
dec
add
jmp
xor
push
loop
into
out
lret
fiadds
jne
push
dec
mov
xchg
xchg
sbb
imul
jb
shl
jbe
stc
cmp
add
sbb
gs
cld
fs
mov
outsb
int3
test
add
cmp
scas
loopne
es
pop
sbb
into
scas
fdivs
leave
daa
mov
lods
inc
movsl
xlat
cmp
int3
rcr
lret
orl
lret
pop
mov
das
and
jmp
or
ficoml
inc
lret
pusha
lret
pop
mov
loop
nop
cmp
mov
filds
pop
jo
pop
addl
test
nop
cwtl
push
dec
mov
push
sub
jecxz
pop
and
stos
cmpsb
mov
divl
lods
jle
jl
int3
xorl
inc
xchg
mov
inc
mov
test
imul
inc
lcall
xor
fpatan
pop
pop
call
dec
bound
lahf
out
test
jb
ror
maskmovq
divl
pop
stos
int
mov
inc
mov
iret
call
cltd
movl
inc
mov
das
int3
jle
and
jns
insl
dec
shll
and
xor
and
inc
cmp
ljmp
push
das
push
xchg
cmpsb
add
and
jo
repz
bound
sub
mov
cli
cld
out
pop
aam
pop
stos
sub
and
in
push
pop
loop
jbe
inc
nop
mov
scas
and
lret
mov
aam
mov
cmpsl
sub
jecxz
push
faddl
dec
sbb
addr16
jmp
pop
dec
sub
cmp
lds
cmp
xchg
icebp
sarl
mov
sub
fstpl
call
je
pop
das
sbb
and
and
mov
iret
mov
jle
in
and
sbb
push
pop
sarl
movsl
push
fimull
dec
mov
add
fcmovnu
adc
jb
push
xor
shrl
clc
fwait
xor
xor
xchg
mov
lcall
add
jbe
sub
push
jno
testl
ror
loop
popa
lock
cmp
sbb
ja
jge
cli
sub
int
shlb
enter
jg
or
cmpb
lea
xor
ret
les
jnp
mov
mov
sbbb
fistps
pop
hlt
add
mov
mov
mov
pop
data16
push
bound
test
sub
mov
push
adc
mov
push
in
je
das
jb
flds
push
jo
ljmp
in
cwtl
ljmp
inc
insb
adc
stc
xchg
dec
cmpsb
lahf
adc
out
jmp
and
in
imul
call
imul
lret
jae
cltd
dec
inc
inc
and
dec
jp
and
orl
inc
shll
scas
es
imul
popf
test
mov
fnstcw
test
lahf
mov
repnz
stc
mov
inc
jno
jmp
push
jp
mov
pusha
fistps
fbstp
inc
jmp
add
sub
neg
lds
dec
sarb
loope
data16
int3
xchg
mov
mov
rolb
dec
test
jmp
jo
imul
add
mov
xor
ret
iret
fs
cltd
stc
leave
cmpsl
sbbb
repz
int3
pop
scas
fsubl
inc
inc
ss
mov
les
xor
xlat
or
or
xor
xchg
clc
imul
lds
fidivrs
aam
xchg
mov
pop
in
adc
stos
sbb
push
iret
pusha
xor
fnsave
das
cld
movb
nop
and
hlt
and
faddp
addb
jns
in
mov
movsl
push
pop
sbb
jmpw
ret
jecxz
mov
sbbb
push
sahf
insl
dec
xor
jmp
mov
vpermt2b
aad
xchg
inc
loop
test
mulb
adc
fcom
pusha
dec
dec
repz
dec
fidivrs
out
adcl
std
jmp
pop
fs
scas
cltd
mov
pop
imul
sti
jae
sbb
mov
lock
imul
cmp
gs
into
pop
dec
sub
mov
or
cmp
jb
test
cmpsb
andl
out
pop
push
adc
xchg
lret
mov
sbb
jae
mov
mov
out
jge
mov
or
jae
or
or
sub
push
out
fs
mov
cli
scas
inc
subl
mov
sbb
shll
or
mov
addb
test
stos
push
jmp
jle
fs
hlt
pop
push
mov
mov
call
repnz
push
push
xchg
xchg
cmc
into
imul
outsl
jecxz
jae
les
xorl
stos
mov
daa
lahf
push
sbb
sub
add
jp
scas
and
loopne
ljmp
pusha
jp
and
jae
loop
cwtl
pop
or
pop
adc
aad
imul
push
addb
mov
inc
dec
test
or
cli
mov
inc
movsl
and
xchg
sti
xor
fsubp
mul
adc
pop
jnp
fsubrl
add
fbstp
jp
nop
adc
sub
push
xchg
cmp
xchg
mov
sti
fisttpll
out
out
jmp
push
test
inc
push
sbb
adc
ds
ror
outsb
popf
aaa
xchg
adc
int
mov
pcmpeqb
or
or
xor
sbb
sti
cmc
scas
mov
xor
je
dec
setne
jl
js
pop
pop
push
inc
sub
bound
cmpsb
lds
mov
into
clc
push
mov
enter
push
call
inc
cmp
pop
outsb
push
and
in
or
mov
mov
add
dec
cmpsb
pop
int
aaa
stc
mov
xor
push
jbe
mov
xchg
std
and
xor
int3
cmp
cmp
mov
push
inc
repz
sbb
ja
int3
inc
and
lcall
ja
out
lahf
cmpb
adc
xchg
hlt
sub
push
jno
push
xor
repz
ja
mov
push
pop
adc
flds
iret
or
pop
xchg
pop
test
in
xor
pop
mov
jg
sbbb
stos
fadds
jns
rcrl
incl
jne
inc
inc
sub
mov
dec
mov
adc
loope
inc
jecxz
cmp
shl
loopne
je
es
pop
dec
and
fildll
frstor
testb
call
or
sub
add
fstps
test
pop
xor
push
inc
push
xchg
jg
push
insl
sub
jb
jmp
push
call
xchg
fsubl
pusha
xor
rcll
scas
jp
cmp
xchg
push
adc
iret
xor
pushf
mov
or
cld
pop
xor
dec
inc
mov
push
add
mov
decl
imul
cltd
notb
stc
lds
loop
dec
xchg
mov
inc
and
enter
loop
movsl
mov
pop
das
pop
mov
inc
pop
int3
mov
ds
push
mov
mov
cbtw
dec
and
sti
xor
jecxz
nop
mov
das
aaa
mov
or
xor
scas
jl
dec
shr
or
std
into
mov
sahf
xor
push
nop
aad
movsb
jmp
adc
lret
es
ret
cli
enter
sbb
cld
rcl
out
outsl
das
cmp
pop
scas
jbe
in
mov
mov
push
sbb
ss
ja
lds
cmp
pushw
sbb
shrl
leave
jno
inc
dec
insl
lret
xor
pop
andb
mov
in
adc
and
insb
mov
fsts
das
fisttpll
push
cwtl
inc
add
dec
push
add
insb
mov
orl
cmc
mov
mov
xchg
cs
or
aas
lar
int
cmpsb
push
and
push
lock
xchg
and
lea
out
icebp
roll
mov
fcomps
inc
xchg
inc
add
mov
xor
push
mov
dec
sbb
ret
sahf
inc
mov
fldl
stc
pusha
aaa
jb
repnz
jno
out
ficomps
test
jo
fs
stc
imul
mov
cmp
sbb
insb
rorb
pop
ss
ss
orl
jnp
xor
sub
pop
push
inc
scas
imul
enter
add
cli
into
les
cmpsb
push
dec
inc
in
pop
lods
les
cwtl
adc
dec
cmpsb
mov
imul
jne
jno,pt
out
repz
leave
xor
stc
push
lcall
jbe
add
xor
insl
or
cltd
fldl
hlt
dec
and
loope
jae
aam
xor
arpl
popa
imul
call
xor
mov
dec
mov
lea
ret
mov
sub
pushf
push
cld
push
lret
loopne
lret
mov
int3
jmp
mov
pop
aam
cmp
movb
jns
popa
out
data16
xchg
addr16
sub
aam
jecxz
push
in
jg
sub
inc
sub
test
daa
fidivs
cmc
cs
sbb
ret
and
inc
and
in
cmp
cmp
cwtl
xor
repnz
mov
add
aaa
mov
xchg
push
sub
adc
or
pop
or
sbb
filds
cmc
mov
mov
dec
fstps
and
fisttpll
sub
lea
dec
imul
shr
xchg
inc
das
pop
outsl
stc
pusha
sbb
adc
addr16
jg
icebp
test
sbbb
push
test
out
movsb
adc
loope
or
jle
mov
inc
ret
adc
inc
pop
hlt
negl
pop
lahf
jg
cli
inc
andl
ljmp
or
lret
mov
pop
xor
or
jns
push
xor
std
mov
pop
pop
sub
lds
stc
std
or
test
xchg
mov
sbb
and
ss
push
mov
jmp
lahf
jp
xchg
xor
flds
pop
xchg
adc
ss
cmp
repnz
pusha
mov
xor
es
inc
fcoms
push
xchg
add
push
jo
dec
xchg
jae
sbb
adc
pop
les
ja
fidivrl
es
fidivrs
out
adc
cmp
test
lahf
mov
xor
lock
jbe
ljmp
and
cmpsl
insl
push
mov
mov
mov
inc
inc
mov
inc
sbb
cmp
lret
sbb
pushf
sub
les
jb,pn
mov
lea
nop
inc
dec
jmp
out
cmp
insb
jmp
pusha
jge
xor
aad
dec
loopne
jge
aam
cmp
jp
pusha
push
and
push
ret
test
iret
xchg
test
addr16
stos
rcrl
ret
dec
in
clc
fldt
sub
sub
mov
roll
fnstcw
push
sti
jmp
xchg
orl
sub
out
stos
ret
arpl
pushf
mov
cli
jle
sbbb
cmc
xor
mov
xchg
add
mov
int3
int3
shrl
cmp
cmc
jo
lock
loopne
aam
es
sub
inc
pop
imul
or
push
aad
fdivl
jge
scas
sbb
hlt
sub
out
mov
cs
fnstcw
fwait
pop
mov
jp
dec
in
mov
sti
pop
dec
mov
outsl
dec
lods
inc
jp
loope
imul
add
shlb
int
xor
sarb
xor
cmp
mov
sub
call
pop
bound
cmp
push
push
add
loope
scas
fimull
das
decl
stos
das
fcmovu
push
insl
inc
testb
jecxz
inc
adcl
mov
sbb
bnd
fwait
mov
sub
arpl
mov
cmp
jo
jns
jle
das
push
or
adc
rcrb
jecxz
es
dec
or
and
inc
sbb
push
xchg
xchg
imul
jmp
jmp
pop
mov
frstor
mov
xchg
push
fwait
sub
arpl
mov
sbb
movsb
stos
push
sbb
inc
loop
jne
xchg
decl
mov
rorb
aad
adc
pop
in
imul
adc
push
sbb
add
mov
repz
pop
mov
outsb
adc
sbb
push
mov
add
fwait
mov
mov
cmpsl
mov
jb
mov
lds
outsl
or
xor
jne
sti
gs
push
aad
mov
dec
mov
or
inc
stc
push
rclb
push
adc
loope
movsl
push
push
and
fs
push
rcrl
gs
lcall
dec
dec
test
xchg
pop
mov
pop
mov
daa
setle
inc
movsl
jo
sahf
movsl
sub
popf
sub
mov
jecxz
fisttpll
sbbb
push
ret
sarb
sbb
xor
pusha
cli
mov
pop
iret
outsl
or
sbb
scas
mov
mov
sarl
sbb
sbb
stc
inc
or
call
jb
aad
sbb
mov
push
aad
mov
sti
and
mov
test
lret
mov
or
lcall
pop
loop
xchg
mov
sbb
mov
fnstcw
mov
incl
loopne
jp
lods
mov
xchg
push
iret
or
push
es
loop
mov
clc
adc
jne
xor
dec
in
mov
jg
dec
sub
lret
idivl
stos
dec
push
add
push
adc
je
sbb
pop
dec
outsl
icebp
cld
into
adc
pushf
cli
push
push
xchg
cltd
and
sub
inc
and
add
not
or
push
inc
mov
das
movsb
mov
push
cmp
es
popa
lods
jge
or
ss
pop
jb
pop
rorb
push
mov
je
or
mov
pop
mov
mov
or
adc
cmp
lock
add
or
cmp
adc
test
fistl
sub
xor
inc
jns
push
push
icebp
jg
mov
movsl
jmp
dec
inc
dec
inc
jle
call
repnz
out
mov
or
mov
mov
push
jbe
push
sarb
test
imul
or
lds
jl
sub
jge
and
pop
idiv
dec
add
test
sbbb
cltd
pusha
es
jp
loope
mov
mov
pusha
adcb
dec
push
imul
lret
pop
lret
ret
ss
bound
push
mov
mov
push
hlt
das
mov
lcall
adc
lcall
xchg
pop
lods
outsl
xor
pop
ficomps
fs
jl
pop
lret
loopne
mov
fwait
paddsb
lea
jmp
lods
movsb
inc
push
pop
mov
push
test
mov
mov
nop
loop
loop
bsf
imul
cmp
push
mov
das
jb
mov
fcoms
test
sbb
ss
push
mov
add
fdivp
hlt
and
ss
mov
jo
popa
sub
movsl
frstor
add
mov
inc
pop
xor
pop
jnp,pn
movsl
fxch
and
push
dec
fwait
icebp
movsl
shrb
cli
fnstsw
nop
add
jb
push
stos
loop
aam
cmpsb
mov
jmp
jg
adc
jo
xor
pop
nop
jnp
xchg
int3
cmp
dec
sbb
adc
mov
cs
add
in
clc
push
mov
jno
or
mov
adc
dec
stos
arpl
ret
lret
and
fldcw
add
jp
into
dec
mov
hlt
mov
addr16
dec
pusha
in
xor
not
dec
dec
mull
sbb
fldt
inc
ret
xor
adc
lcall
add
popf
mov
nop
xchg
dec
mov
xor
mov
lret
xchg
xchg
jmp
dec
fadds
cmove
sub
sub
and
push
sbb
sbb
lahf
cmp
in
pop
jb
sbb
scas
test
addr16
inc
lret
insb
mov
mov
adc
dec
iret
push
or
stos
inc
mov
and
das
push
add
fst
fucomi
sub
mov
popf
xor
add
inc
scas
popf
cmp
inc
mov
aad
pusha
fs
cltd
dec
ret
sub
mov
repnz
dec
jae
imulb
push
push
push
mov
or
mov
pop
int
and
or
js
xchg
mov
xchg
cmpl
xchg
push
mov
push
jae
adc
add
jb
sub
les
andb
and
jae
test
cmp
push
sbb
or
or
mov
fstpl
mov
je
leave
or
xor
into
push
pop
sbb
fs
shlb
sub
xor
aam
das
repz
fucomp
mov
adc
or
in
test
inc
in
jno
adc
aas
sbb
xchg
leave
adc
test
daa
and
dec
aaa
jge
testl
icebp
imul
aaa
push
pop
sbb
adc
stos
gs
es
into
push
xor
and
xchg
jbe
mov
mov
stc
mov
mov
inc
call
adc
mov
xchg
call
push
scas
dec
sub
cmp
cmc
adc
jl
jp
loope
add
xor
stos
mov
mov
sub
cli
adc
out
int
pop
pusha
cmp
sbb
lods
cli
lds
call
lret
sub
notl
imul
xchg
push
mov
je
inc
mov
dec
jb
jl
and
loopne
xor
mov
repnz
xchg
aam
push
dec
sbb
pop
push
enter
mov
adc
lahf
rclb
orl
xor
jno
lock
push
push
push
cmp
rorl
sub
or
stos
mov
adc
into
decl
ljmp
jl
cmp
jbe
cmp
cld
das
pushl
int3
push
and
pop
xor
bound
int
stos
dec
cltd
movsl
fimuls
mov
push
push
loope
or
pop
inc
or
frstor
jmp
sahf
fcoml
mov
add
aad
cmp
push
fstps
aad
cmp
adc
arpl
pop
cmp
mov
jge
enter
inc
mov
imul
pop
inc
push
pushf
sbb
shrl
negl
rolb
mov
or
test
add
int
jnp
call
and
or
inc
je
xor
push
cmpsl
movsl
ljmp
xor
dec
dec
icebp
inc
orb
pop
dec
jle
pop
ja
dec
mov
push
xchg
adc
rep
fcomps
sub
call
shll
rcrb
mov
scas
test
in
jg
jge
push
mov
sbb
dec
imul
dec
add
pop
xorl
popf
or
jl
push
lea
fwait
in
ret
mov
mov
insl
jecxz
pop
adc
add
rcrl
and
mov
sbb
xchg
mov
in
mov
fisubs
dec
sub
dec
in
out
inc
adc
jl
jle
leave
jbe
shl
scas
stc
ret
mov
pop
xchg
sub
in
sbb
sbb
add
test
loop
sbbb
dec
lock
add
sbb
ficoml
jno
pop
shr
lret
add
ficoml
pop
mov
ljmp
insl
into
jp
push
inc
mov
test
sti
xchg
inc
jge
inc
scas
xchg
mov
movsb
xchg
cwtl
push
fldcw
pop
push
adc
rcrl
adc
cmp
jg
mov
mov
stos
enter
xor
cmp
pop
cmpl
mov
dec
cld
xlat
in
scas
cmp
je
into
add
std
mov
mov
inc
lcall
or
push
pop
jmp
xor
cmpsl
adc
mov
call
js
inc
pop
in
aam
dec
test
pushf
insl
add
jno
xchg
inc
shl
imul
int3
xchg
lods
xor
xchg
imul
xor
sbb
xor
ss
icebp
lods
add
arpl
les
int3
test
cmpsl
insb
mov
fstpl
mov
scas
ja
or
std
adc
or
cmp
std
into
xor
pusha
fnstcw
fdivrp
and
add
or
sarl
jns
subb
into
sbb
pop
xor
cli
cltd
je
in
out
roll
or
aad
inc
and
test
jecxz
int
push
sub
adc
shr
in
mov
pop
sub
scas
fs
inc
jbe
outsb
testl
push
xor
mov
cmp
pusha
mov
scas
mov
stos
mov
adc
jns
lods
into
faddl
sahf
inc
mov
push
iret
push
lea
jae
adc
push
mov
shl
inc
lods
sbb
aad
imul
fdivrl
add
or
aas
ja
mov
loope
push
mov
adc
push
add
imul
pop
push
mov
mov
fs
lock
movsb
bound
ret
js
scas
or
sbb
std
ss
adc
sbb
cmpsb
xor
leave
call
lock
inc
cmp
pop
pop
inc
test
pop
ja
jl
in
cmpsl
xchg
enter
and
xchg
inc
sbb
adc
sub
xor
iret
cwtl
jg
xlat
jns
lock
adc
aaa
push
or
mov
jge
jno
out
mov
cltd
loop
cmp
inc
xchg
mov
or
push
jecxz
mov
stos
fmull
mov
in
adc
jae
out
dec
push
mull
aaa
test
mov
cmp
test
xchg
dec
movsb
cmc
stos
push
out
imul
repz
sub
call
sub
call
dec
fstps
pop
inc
enter
mov
insb
mov
pop
nop
push
repz
push
push
adc
sub
mov
xchg
jo
sub
dec
bound
cs
xor
lock
loop
mov
xchg
or
inc
aad
dec
dec
dec
mov
daa
or
aas
xchg
push
mov
jmp
adc
lcall
push
and
cmp
mov
into
dec
popf
jns
rcr
stos
xchg
lahf
pop
enter
movsl
sbb
mov
out
loope
fsubs
jl
jmp
push
pop
les
pop
scas
sbb
jmp
pop
adc
fnstcw
or
or
mov
addr16
mov
xchg
mov
ret
ret
imul
cmp
or
sub
rcrl
leave
addr16
and
cmp
adc
bound
ljmp
ret
push
sar
clc
mov
arpl
sub
hlt
mov
push
inc
pop
popa
out
xchg
pop
push
shrb
imul
pop
lock
insl
jnp
in
xor
adc
sarb
imul
sbb
bound
das
jnp
pop
mov
sbb
shll
cmpsl
rclb
jb
cmp
rol
popf
loope
jecxz
imul
lock
jl
data16
bound
xor
ds
out
cltd
adc
pop
repz
int3
lods
push
je
ljmp
pusha
adc
jl
dec
mov
pop
aam
or
jns
fnstenv
mov
dec
mov
cmp
mov
mov
test
iret
xchg
fmull
dec
and
fcmovbe
cs
das
es
jbe
repnz
test
repnz
loope
jnp
sbb
inc
push
push
ror
sub
scas
das
mov
cmp
jecxz
pop
xchg
cld
popf
mov
aas
cmp
dec
sbb
clc
cmp
xlat
mov
xlat
repz
inc
dec
and
lock
mov
xlat
stc
xchg
add
jo
mov
push
sti
fstpl
add
push
ficoms
lea
out
cwtl
aam
mov
fs
or
add
ret
in
fsubs
fimull
add
pop
dec
mov
push
dec
add
sbb
cli
cltd
jecxz
mov
stos
push
inc
push
dec
fsubrs
lret
adc
sbb
incb
sbb
in
mov
add
ret
and
out
or
test
test
jns
pop
mov
fs
dec
and
ret
lahf
movsb
adc
int
stos
repnz
sub
shll
rolb
cli
mov
xchg
movsl
out
jo
jb
jno
or
xlat
dec
xchg
daa
xchg
gs
jne
add
pop
mov
icebp
sbb
insl
movsb
jnp
mov
mov
stos
or
jle
loop
mov
adc
jno
sti
sub
cmp
shll
inc
nop
mov
imul
fildll
loopne
iret
hlt
insl
push
hlt
cwtl
jmp
in
and
mov
insl
jno
ja
pop
mov
mov
fdivrs
fisubs
or
xchg
mov
aad
sarl
cmpsb
jmp
loopne
inc
jp
pop
add
adc
jae
fstl
lods
add
sub
loopne
push
cld
stc
test
mulb
jg
push
lret
mov
mov
mov
push
stc
jmp
mov
popa
dec
sub
int
into
ss
dec
cld
sti
mov
fimull
testl
adc
push
mov
sbb
js
rcr
jnp
inc
xor
pop
xchg
add
push
or
das
inc
cmp
ret
cmpsb
aad
inc
fxch
int
or
push
pop
outsl
push
leave
sub
jno
in
out
xor
sarb
movsb
mov
ljmp
fcmovne
lret
sub
xchg
lock
out
int3
dec
jmp
mov
and
sub
mov
inc
mov
cltd
or
push
or
add
push
cmc
loopne
repz
adc
pop
push
or
mov
sbb
and
mov
sub
sahf
jmp
popa
xor
jbe
mov
dec
aas
xchg
int3
incb
dec
mov
xor
and
push
cmp
lods
mov
cmpsb
cld
mov
icebp
xchg
scas
jl
clc
mov
or
cs
lds
cli
jns
jmp
and
aam
rorb
or
push
inc
sbb
ret
fldenv
scas
in
loope
xchg
stos
pop
icebp
fdivl
out
inc
dec
xor
mov
loop
push
movsb
sbb
mov
sbb
outsb
dec
mov
adc
adc
push
pop
mov
dec
add
ja
xor
addr16
fs
addr16
inc
daa
mov
xor
loopne
sub
fcomps
loope
cmp
add
xor
jnp
mov
jge
jl
sub
jnp
sub
out
in
lods
mov
sbb
mov
adc
xor
xchg
sub
stc
adc
dec
loope
mov
insl
cmpsl
dec
or
fcomi
pushf
jns
cmp
pop
loopne
mov
mov
pop
sub
mov
xchg
jo
ret
cwtl
movsb
loopne
xor
or
push
inc
adc
inc
cwtl
loop
in
xor
in
cmp
out
insl
mov
adc
mov
mov
dec
pop
mov
les
xchg
in
push
add
popf
lods
jecxz
sbb
ss
or
imul
push
jmp
add
aaa
scas
xor
sbb
stos
test
icebp
imul
fmull
adc
call
stc
or
jmp
aaa
outsl
pop
inc
inc
movsl
shrl
sub
cmc
in
adc
arpl
pushf
sbb
pop
mov
jge
inc
mov
add
fists
test
enter
loopne
les
cli
es
fldenv
stos
inc
push
and
mov
rol
cli
mov
nop
in
out
loope
xchg
sub
pop
mov
arpl
shl
lods
imul
inc
or
mov
xchg
adc
adc
sarb
cmc
in
dec
xchg
dec
leave
mov
fstpl
and
push
pop
testl
adc
and
rclb
scas
inc
gs
xchg
xchg
sahf
adc
mov
icebp
ret
cmp
push
mov
add
cs
leave
mov
and
adc
repz
xchg
mov
pop
adcb
mul
add
cmp
outsb
aad
push
xor
orl
out
add
cli
addr16
push
jl
cmp
clc
cltd
jmp
xchg
mov
bound
std
sub
lds
leave
push
and
flds
insb
loop
mov
add
jb
pop
pop
cltd
sbb
lods
adc
push
mov
add
xchg
mov
sub
or
mov
js
xor
pop
insl
or
jne
cltd
mov
jno
cli
je
pop
dec
sub
pop
xor
jbe
jg
jle,pn
lahf
xor
jns
dec
add
lds
scas
mov
mov
xor
pusha
sub
and
mov
lods
std
loopne
xchg
add
popa
mov
push
push
jl
cmc
push
test
sar
movsl
jae
sbb
push
enter
fidivs
out
icebp
pushf
pop
pushf
out
dec
jae
leave
xchg
push
adc
icebp
add
jb
shll
fdivp
and
orb
and
mov
loopne
cmp
rcrb
xor
cmp
clc
jge
xlat
ret
data16
and
mov
mov
fnstenv
int
loope
out
clc
and
cld
mov
imul
in
pop
xchg
xlat
pop
out
fs
ljmp
test
aad
out
sarl
adc
mov
shlb
repnz
ret
repnz
jp
je
cs
idivb
cmp
adc
push
jno
jo
outsl
aas
or
xor
repnz
outsl
adc
jmp
mov
or
mov
mov
jmp
push
mov
and
aam
cmpb
movsb
push
sbb
cs
push
dec
lahf
mov
mov
fisubrl
jg
sub
insl
loope
ret
repz
sbbb
adc
movsb
jle
imul
cmpsl
inc
jo
aam
cmpsb
mov
rorb
cld
jl
mov
push
insb
enter
adc
mov
call
cltd
inc
dec
mov
cmp
cwtl
jno
cmc
loop
add
mov
jl
jg
je,pn
in
sbb
negb
xor
add
lock
icebp
cltd
sub
test
shr
lock
push
outsl
or
sbb
aam
mov
mov
pop
std
xchg
xlat
insl
mov
mov
sbb
mov
adc
out
jg
roll
mov
push
xor
xor
adcb
loope
out
jecxz
jns
clc
cmp
test
add
aaa
mov
sti
jl
mov
mov
dec
rorl
jbe
mov
rcrb
mov
push
pushf
insb
mov
mov
sbb
sbb
arpl
xor
repnz
xor
int
sbb
push
or
and
or
movsb
nop
test
mov
repnz
pop
xchg
fwait
movsl
add
sbb
imul
mov
sbb
in
hlt
jbe
push
cmpsb
or
pop
fs
dec
sbb
mov
insb
add
mov
lods
into
mov
sarl
dec
mov
pop
and
inc
scas
lods
shl
mov
loopne
mov
mov
hlt
xchg
stos
add
adc
jo
pop
int
mov
xor
jo
sub
sbb
hlt
xor
pushf
mov
mov
jns
inc
adc
xchg
fimuls
sub
sub
sub
adc
xchg
js
jmp
adc
mov
imul
test
cmpsl
std
mov
mov
cld
cmp
add
xor
jb
mov
movsb
repz
fwait
push
xchg
stos
adc
dec
and
jne
mov
aaa
and
scas
xchg
test
cmpsb
rorl
jne
or
idivb
insl
popf
int3
sub
pop
lds
fucom
out
jmp
adc
mov
aas
inc
add
push
sbb
je
cs
push
pop
mov
push
call
cwtl
in
pop
sub
dec
sti
pop
push
out
or
aas
lods
push
jns
les
repz
pop
insb
add
sub
icebp
lret
cmpsb
insb
or
mov
es
jmp
leave
jp
hlt
sbb
xor
jns
lds
jae
xchg
push
or
cli
das
hlt
inc
dec
mov
subl
cltd
xor
pop
stc
inc
mov
or
popa
call
mov
inc
or
imul
sub
cmp
xchg
xor
push
dec
jp
cmp
sbb
mov
xor
insl
sti
xor
mov
lcall
mov
ljmp
pop
inc
xchg
jne
mov
negb
fldcw
mov
push
inc
test
mov
rclb
outsb
adc
or
jge
aam
mov
lock
lds
push
subb
push
aam
push
and
mov
nop
mov
xchg
jne
arpl
jecxz
xor
sbb
mov
pop
mov
arpl
fsubrl
or
pop
fcmovbe
sub
mov
xlat
push
pop
bound
dec
inc
pop
stos
adcb
ds
nop
sbb
mov
jge
sbb
nop
aas
pop
xchg
popa
ljmp
popa
pop
push
stos
sub
xchg
cli
push
fdivrl
or
mov
in
jle
xchg
sbb
mov
cmpsb
mov
cmp
inc
sub
sbb
xor
cmpsb
sbb
int3
lret
sub
push
and
ret
cmp
rep
dec
xlat
mov
jae
sub
cmpsb
ficoms
addr16
adc
addb
push
xchg
push
into
add
and
ja
cmpsl
cli
push
shlb
push
aad
xchg
dec
dec
pushf
movsl
addr16
inc
inc
jb
adc
add
and
mov
cmpb
mov
jg
stc
and
xor
xor
outsb
das
out
les
out
or
in
stos
and
icebp
sbb
rorb
mov
push
pushf
mov
int3
and
cmp
in
adc
pop
daa
loopne
push
or
xor
dec
bound
rorl
sbb
dec
sub
dec
add
movsb
negl
xlat
lock
pop
ror
scas
xor
xor
repnz
jp
lods
push
jg
fisubrs
imul
xor
out
scas
andb
inc
mov
push
das
and
test
insl
cmc
pop
mov
dec
out
enter
push
push
cmp
fldl
ss
sub
ret
fidivl
aaa
adc
lahf
pop
mov
lods
pop
dec
inc
xchg
int
imul
pop
addl
xor
dec
bound
pop
std
mulb
push
cli
sahf
add
adc
mov
lds
lods
fcomi
int3
leave
test
test
repnz
inc
jbe
orl
xor
into
aaa
push
push
mov
lock
mov
into
inc
xchg
imul
fidivs
test
roll
ljmp
addr16
pop
fistps
sbb
orl
sbb
sti
add
jmp
and
add
and
mov
push
ss
sub
jecxz
inc
sbb
jo
dec
and
jg
dec
jmp
mov
call
testl
jb
xchg
sbb
das
mov
and
xor
out
pusha
dec
in
sub
mov
pusha
add
sub
mov
decb
dec
add
xchg
adc
insb
jbe
mov
ds
ret
test
pop
xchg
xchg
fbld
xchg
out
out
in
inc
sub
cmp
movsb
jp
es
xlat
ja
xor
gs
xchg
lret
sub
cltd
int
pop
lret
daa
lock
and
adc
adc
mov
fcmovu
mov
data16
sbb
mov
xlat
movsb
inc
dec
test
loop
mov
int3
pusha
aaa
insb
cltd
pusha
sahf
sbb
cs
adc
xchg
xchg
sarb
ror
dec
sbb
jnp
pop
and
test
inc
push
push
cs
mov
jbe
sahf
jne
out
inc
pop
call
cmpsb
stc
mov
pop
mov
and
cwtl
loop
and
clc
adc
imul
sub
test
pop
cmp
scas
sbb
test
fndisi(8087
test
and
popf
pusha
movsl
and
inc
jmp
cmp
sub
hlt
xlat
dec
imul
xlat
push
outsl
cmp
cmp
ljmp
in
lcall
cmp
cmp
les
sub
outsl
mov
jmp
dec
mov
popa
xchg
fs
in
idiv
fildll
outsl
mov
popf
pushf
pop
jnp
sbb
in
sahf
push
sbb
xchg
jmp
fstps
data16
clc
mov
lea
nop
out
or
pop
movsl
out
push
fisubs
cmp
cld
cmpsl
xchg
psubq
xor
ret
iret
pusha
cmpsb
outsl
lret
and
in
scas
mov
sbb
push
cmp
into
adc
jl
adc
sbb
mov
das
or
adc
xor
adc
aad
sub
lret
pop
jns
repnz
insb
pop
or
cmp
out
das
ficompl
xor
inc
fcomp
imul
imul
shlb
movsl
int3
stos
imul
pop
ds
out
rclb
xchg
fstpl
outsb
adc
ds
dec
sbb
xchg
rclb
gs
xor
mov
xor
or
int
addr16
sub
add
mov
sbb
inc
push
sbb
hlt
ret
pop
fnsave
cmpb
popf
cltd
test
rorl
mov
and
insl
sarb
notl
std
sub
loop
lgs
cmp
pop
pop
mov
stos
test
aad
xchg
xor
call
shll
xchg
add
in
rol
fstpt
movsl
sub
push
addb
add
jnp
or
mov
sti
mov
mov
stc
sbb
inc
pop
cmpsb
test
sbb
sbb
push
movsb
push
inc
push
cmc
add
mov
xchg
insb
or
rorb
inc
stos
inc
lcall
jmp
xor
mov
sarl
pusha
and
push
inc
orb
add
lret
roll
pop
jnp
mov
jbe
jnp
ret
sahf
xchg
cmpsl
movsb
pop
and
imul
mov
xchg
into
ja
or
std
repnz
pop
pushf
mov
nop
xchg
pop
sbb
subl
pop
jne
push
cmpsb
insl
jb
jne
cld
in
insl
lret
add
test
call
jb
dec
mov
mov
and
xor
outsb
cmp
test
adc
adc
into
dec
mov
cltd
call
cmpsl
faddl
into
push
into
loope
lods
popf
add
ror
ja
repz
aaa
cmp
jg
jae
cmp
pop
stc
fcoml
mov
mov
xor
or
not
jl
shll
ja
imulb
stos
add
dec
xor
and
lret
in
inc
push
pop
cmpsb
inc
and
mov
out
pop
aad
insb
xchg
lock
fimuls
mov
jmp
ljmp
pop
lds
movsl
fsubs
jbe
pop
jle
sbb
add
call
jo
lcall
out
lock
add
xchg
cmp
sbb
push
inc
add
int
cmp
or
mov
pop
outsl
adc
xor
clc
ret
jno
pop
push
pop
xor
or
mov
icebp
rcrb
lods
mov
jp
cmpl
mov
and
decl
xchg
not
in
mov
dec
sbb
jns
outsl
fsubrl
dec
arpl
sub
sub
add
into
xchg
dec
dec
cmc
sbb
int
stos
test
xchg
test
sti
add
mov
int3
out
xchg
test
and
add
sub
xor
aam
xchg
mov
push
jecxz
popf
and
test
sbb
mov
adc
incb
dec
loop
or
sub
fnop
cs
sbb
mov
mov
jne
or
mov
out
xchg
shrl
mov
xchg
pushl
xchg
pop
fstp
mov
xchg
movsl
aaa
push
in
xchg
adc
test
mov
jnp
subl
inc
pop
sub
outsl
jno
sub
mov
push
or
popa
push
lret
xor
aam
shll
cmp
aas
jecxz
stos
mov
mov
lret
jp
or
jp
int3
leave
dec
shlb
mov
or
xor
sub
or
dec
ror
int
pop
arpl
lcall
cmp
add
xchg
lds
aaa
loope
xor
popa
dec
adc
pop
test
inc
cmpsb
fwait
dec
in
xchg
xchg
sets
push
mov
ds
mov
pop
dec
or
sti
dec
or
jo
inc
push
dec
and
fs
inc
push
fsubl
lahf
push
repz
into
inc
mulb
cld
scas
adc
and
jmp
outsb
lret
jb
movsl
cli
es
js
out
mov
sub
mull
jne
adc
je
fbstp
jbe
test
dec
icebp
inc
stos
fidivrl
cmp
xchg
dec
xchg
jb
dec
jmp
cmpb
ds
outsb
push
push
push
loope
and
movsl
push
mov
sub
mov
jecxz
imul
loop
bound
sub
nop
push
inc
dec
mov
rolb
xchg
or
sub
xlat
cmp
push
pop
push
adc
push
cmc
mov
xchg
add
xor
mov
cmpsl
addr16
sub
leave
enter
xchg
cmpsb
call
cmp
aad
inc
imul
sbb
xor
imull
daa
lds
rcll
cmpsb
xor
insb
mov
jae
mov
test
jnp
test
sub
ja
sub
bnd
outsb
pop
imul
jp
test
insl
mov
xlat
dec
pop
pop
adc
leave
mov
incl
ja
jns
pop
jle
sbb
jge
and
dec
orb
xlat
lods
mov
mov
add
mov
aad
lcall
mov
sbb
pusha
call
and
and
cmc
and
fisubrs
jmp
repnz
jmp
mov
stc
xchg
jle
jae
aaa
cmp
adc
cmp
jge
bound
xor
jbe
cmp
loopne
imulb
in
sbb
cmpsb
clc
btr
jb
sbb
and
push
sbb
dec
in
sbb
mov
push
inc
sbb
ja
xchg
push
inc
sbb
cwtl
xor
scas
and
mov
mov
js
arpl
in
cmp
sub
out
mov
cmp
cmp
int3
mov
fidivs
fisubrl
mov
xchg
xchg
idivb
sub
jbe
xchg
js
leave
xor
nop
gs
and
data16
std
outsl
stos
out
les
xchg
jnp
outsl
xor
loop
iret
and
shll
into
cmp
inc
mov
icebp
mov
call
jae
fprem1
and
and
push
call
mov
sub
mov
cmp
lock
push
cltd
mov
push
pop
scas
sbb
sarl
arpl
out
cmc
jl
jge
jne
inc
cmc
pop
and
call
xchg
loop
mov
cmp
jb
pop
adc
out
decb
sub
cmpsl
shl
ja
imull
cmp
aas
mov
sub
mov
icebp
mov
or
sbb
repz
push
and
pop
fs
js
pusha
lea
inc
jecxz
and
cli
cmc
ljmp
pop
cmp
fdivrl
popf
dec
or
iret
mov
pop
mov
and
pusha
push
sbbl
and
pop
sub
mov
pop
jl
pop
push
jb
xchg
pushf
popf
movsl
fstl
dec
ror
pusha
mov
push
and
pusha
dec
lods
mov
and
ret
repz
xor
lea
sub
xchg
stc
push
mov
aad
movl
sbb
imul
and
ljmp
lods
rclb
xor
and
mov
inc
inc
xchg
cmp
sbb
out
xor
xor
jne
adc
xor
and
inc
fsubrs
loope
mov
jb
xchg
xchg
inc
dec
pop
scas
sbb
jb
jmp
scas
cmc
je
mov
push
std
fisttpl
pusha
cmpsl
test
lar
dec
in
xor
add
loope
jno
cmp
push
push
inc
addr16
xor
sbb
stos
push
popa
mov
pusha
pop
sub
dec
in
out
cmpsb
mov
subl
dec
cld
loope
sbb
stos
lret
mov
add
fldt
pusha
inc
jle
sbb
sub
xchg
rcrl
lret
into
pop
lds
out
aam
je
scas
movsl
ret
ja
sub
xchg
ljmp
lret
call
jnp
jmp
cmp
sub
cmp
sbb
cmp
sbb
adcl
rol
dec
and
in
repnz
sti
xor
inc
andl
jecxz
es
ret
insb
push
xchg
cmp
gs
xchg
lea
ds
jno
aam
dec
pop
in
adc
sbb
mov
add
es
sub
sahf
pop
xor
xor
cmp
push
out
pop
hlt
and
pusha
in
sbb
lahf
fmul
jae
sub
adc
mov
jae
sti
cmp
lahf
or
push
test
movsl
popa
mov
mov
add
sarb
and
mov
ret
fdivl
dec
xchg
adc
adc
inc
dec
inc
dec
ret
enter
xchg
or
rcrb
ss
sbb
js
les
sbb
out
or
mov
sub
dec
cmpsb
out
jnp
and
mov
arpl
dec
rclb
jle
divl
and
sbb
test
fiadds
jp
sub
jecxz
cwtl
lods
or
or
imul
movsl
movsb
bound
dec
mov
in
push
ss
inc
jge
andb
cmpsl
inc
sbb
or
add
jg
mov
jmp
add
mov
insb
mov
mov
cltd
or
mov
add
in
stos
clc
les
test
push
inc
cmpsl
cmpsl
mov
nop
xor
xchg
mov
insb
pusha
cld
ljmp
xor
bound
outsl
dec
jb
and
aaa
fldt
imul
daa
rcrl
leave
mov
adc
xor
loopne
mov
ret
loop
imul
mov
mov
pop
xor
mov
es
xor
icebp
lds
or
subb
xor
xlat
ss
xchg
jns
les
cmpsl
inc
call
test
out
cwtl
push
sbb
clts
shld
jp
in
sbb
je
or
jno
mov
notb
cli
cltd
test
sub
jg
lret
jle
push
push
mov
dec
lret
lock
je
mov
orb
sub
sbb
push
pop
sbb
cmp
imul
js
mov
xor
mov
sbb
imul
or
mov
fisttpl
shl
ljmp
shrl
add
sub
sub
fnsave
je
and
dec
mov
ficoms
inc
ret
and
pop
scas
std
dec
sbb
inc
add
sbb
pop
jno
sbb
shrb
inc
int3
in
nop
cmp
fisubl
fmull
sub
cmp
xchg
jge
dec
cli
inc
pop
in
mov
lds
dec
mov
mov
cwtl
pop
bound
jmp
cmp
sahf
aas
add
ljmp
mov
rcll
test
sub
into
fbld
cmpsl
add
pushf
les
xor
out
ret
mull
mov
lods
cs
pop
cmp
jne
mov
movsl
mov
out
sub
push
sbb
and
not
push
ljmp
mov
insb
jne
pop
es
pop
in
shrl
hlt
lret
in
call
arpl
mov
or
scas
push
pop
in
addl
push
jnp
test
fiadds
pusha
sbb
pop
mov
test
loope
popf
pop
into
aas
cmp
xchg
out
lahf
dec
fdivr
loopne
dec
mov
lods
jnp
push
outsb
sbb
ficoms
xor
movsl
fmul
or
push
xchg
xor
dec
push
pop
ffreep
stos
addl
and
aad
pop
out
sar
dec
jb
loop
pop
mov
push
ss
mov
rcll
dec
sbb
jnp
arpl
cmp
add
inc
and
push
cmp
les
and
mov
mov
in
push
leave
loop
sub
push
lret
stos
xor
pop
sbb
les
mov
push
sbb
fldt
repz
call
pop
jp
out
cmpsb
inc
cmpsb
mov
push
dec
or
mov
call
push
add
dec
shlb
fwait
dec
pop
pushf
xchg
sbb
sub
rclb
jne
adc
scas
mov
inc
mov
pop
push
sub
sbb
mov
cmp
push
test
jg
fs
stos
push
pop
adc
dec
mov
lock
mov
mov
les
push
fs
mov
stos
xchg
sub
jne
outsb
cmp
jecxz
pop
cmpsl
je
lcall
in
test
jno
addb
fbld
jp
push
mov
mov
push
xor
xchg
pushf
jne
pop
or
out
mov
sbb
mov
xchg
in
testb
stc
popf
insb
dec
mov
or
xor
mov
dec
cmp
add
adc
sbb
jne
nop
add
xor
into
and
mul
add
xchg
xor
jne
std
dec
mov
movsl
not
inc
das
or
pop
xchg
pushf
lods
jle
cmp
inc
cmp
push
icebp
loopne
cmpsb
loop
shlb
addr16
lcall
lods
and
fcompl
pop
test
sub
lret
mov
jnp
pop
mov
js
sub
add
push
rcll
icebp
pop
adc
xchg
xor
mov
adc
cmpl
jmp
rep
pop
das
mov
jl
cmp
ffree
ret
add
fsubr
push
test
sub
call
and
mov
inc
sub
out
push
lds
es
icebp
insl
lds
stos
jecxz
shlb
push
jl
xor
nop
aad
stos
fiaddl
out
das
int3
outsl
fsubr
fsubrs
dec
lret
jns
push
cmp
mov
mov
xor
push
xchg
sbb
xchg
cmpsb
ficomps
xor
movsl
mov
mov
jns
xchg
jns
push
or
mov
lcall
test
sbb
scas
cmpsb
es
sub
jl
inc
xor
test
mov
xchg
push
cmpsl
mov
movsl
pop
adc
xchg
sub
bound
mov
das
clc
mov
cmp
lock
repnz
mov
into
xor
cwtl
or
dec
ret
jae
pop
jno
shlb
daa
pop
inc
lcall
push
clc
mov
lods
mov
push
pop
inc
out
movsb
or
aad
sbb
cwtl
cmp
out
sub
ja
and
sub
jbe
push
stc
mov
js
shl
push
sub
shlb
sub
ss
push
outsl
push
add
fists
fsubs
rorl
mov
pop
fs
jns
loop
mov
lret
das
add
jo
xchg
movsb
clc
stos
jbe
xchg
icebp
cmpl
or
out
imul
xchg
push
movlps
mov
sbb
into
sub
test
add
jbe
pop
iret
icebp
pop
inc
jae
pop
imul
adc
jae
and
aam
js
add
cmp
iret
cmpsl
xor
mov
jne
fdivrp
shll
out
mov
cld
and
mov
popa
je
pop
out
scas
test
mov
leave
mov
jg
jne
adc
dec
in
arpl
sbb
or
ljmp
in
testb
jbe
loope
add
mov
pop
hlt
adc
sbb
pop
in
or
ficompl
xchg
lret
int
dec
and
push
arpl
das
jmp
ficoml
icebp
es
loope
jg
sahf
cmc
movsl
mov
xor
scas
pop
dec
adc
add
test
pusha
lock
xorl
inc
or
jl
outsl
ljmp
and
cltd
lods
mov
or
or
sbb
data16
dec
test
int
xchg
xor
ret
jl
jo
jp
xlat
lea
push
push
push
mov
mov
push
or
inc
rolb
push
add
sbb
int3
fldt
cmp
lods
mov
in
add
fldcw
stos
fisttpl
sbb
popf
xchg
mov
xchg
cmpsl
cs
xor
pop
jbe
xchg
sub
cmp
stc
jl
pop
aas
mov
and
movb
jge
sarl
pop
repnz
or
jns
mov
pop
sbb
loope
mov
mov
arpl
jb
or
jo
pop
xchg
mov
enter
ljmp
adc
aaa
ds
movsl
leave
push
lods
jp
mov
cmpsb
adc
pusha
pop
shrl
lea
stc
and
out
lds
ss
xchg
dec
lds
ret
xor
lret
adc
insl
lock
lcall
loopne
subb
pop
into
stos
jb
mov
movsl
mov
lock
cld
push
aam
xchg
loop
andl
stos
mov
rorb
or
sarb
test
cmp
add
push
push
add
into
adc
cld
stos
mov
ds
cmp
lcall
sbb
popa
je
popa
and
cmp
shrl
fdivr
pop
push
ds
aad
mov
popa
jmp
cwtl
mov
pusha
mov
insb
xchg
sbb
inc
movl
pop
and
sub
repnz
popa
scas
pop
jbe
shll
jb
mov
xchg
adc
lret
mov
sahf
fistpl
cmp
pop
sbb
out
jae
in
mov
push
dec
push
outsl
out
das
dec
incl
rolb
shll
or
add
adc
ljmp
movsl
mov
scas
pop
sub
mov
lahf
scas
fnstcw
in
cld
push
or
pop
inc
jne
sub
pop
cwtl
inc
push
cmp
fwait
ds
lret
add
cltd
movsl
xchg
bound
mov
call
pushf
cmp
xor
jns
cmc
lcall
sub
mov
ljmp
or
movsl
mov
jne
aam
aad
sahf
loope
shll
push
fs
lret
mov
jne
xchg
bound
scas
mov
cwtl
nop
je
test
jo
mov
cmpsl
shrb
dec
or
mov
mov
insb
stc
push
xor
out
cmpsb
cmp
jmp
mov
lea
jb
xor
fwait
movsb
push
shrb
sub
int3
insb
js
pop
lods
fwait
xor
mov
lock
or
mov
fiaddl
sub
mov
cmp
ss
inc
mov
out
jne
sti
out
aaa
mov
inc
sahf
mov
fs
cmp
mov
cld
inc
mov
dec
push
mov
mov
rorl
aam
jno
add
mov
sahf
sub
outsb
jo
je
out
cmp
arpl
xchg
mov
mov
mov
cmp
sub
out
stos
add
ds
in
jg
movsb
push
sbb
mov
lcall
pop
fildll
xchg
mov
adc
cmp
mov
mov
ljmp
lods
pop
cmp
mov
lcall
das
lret
bound
and
fs
xor
adc
ret
sub
dec
push
and
add
out
popl
enter
sub
out
jle
jp
sti
mov
sbb
cmpsb
movsb
fldl
repnz
xchg
mov
cli
mov
pop
imul
rol
lcall
xchg
mov
mov
aam
nop
notl
movsl
js
lret
scas
movsb
or
dec
int
lods
hlt
adc
or
pop
arpl
mov
in
out
sub
stos
dec
daa
ss
adc
sbb
ds
test
adc
push
sbb
xor
adc
xchg
jne
inc
adc
xchg
movsl
arpl
jbe
jns
push
mov
lahf
jecxz
push
lock
jno
out
imul
movb
popf
push
and
sub
cmp
fcompl
out
add
nop
out
fiaddl
aaa
in
mov
clc
pop
fcmovbe
inc
jge
js
or
sbb
insb
mov
nop
cmp
lcall
jge
add
cs
shld
sub
xchg
imul
mov
cmp
mov
ljmp
into
jnp
shl
mov
dec
adc
add
fisubl
mov
mov
clc
out
inc
pop
inc
xchg
lcall
pusha
fsubp
mov
fsubp
xchg
ss
push
fisubrl
sbb
sbb
insl
cmp
daa
mov
notl
ljmp
push
xchg
jg
pop
sub
jle
jo
sbb
repnz
jb
lea
mov
sub
ficomps
inc
imul
inc
xor
dec
pop
call
lcall
les
mov
mov
mov
fsubs
mov
mov
shlb
push
arpl
jp
mov
leave
jno
pop
add
xor
xchg
movsl
and
pop
repnz
cld
fistpll
cmp
pop
stos
xlat
lret
push
pop
inc
rcl
notb
stc
add
sbb
cs
loope
lret
imull
sbb
enter
add
stc
cmp
xchg
arpl
ficoml
xchg
fsubrs
mov
mov
inc
push
push
rorl
inc
in
mov
shll
add
dec
or
sbb
and
inc
sbb
rorb
add
movsl
fcoml
jmp
push
shll
daa
call
sahf
mov
cli
fstl
mov
jnp
fsubrl
movl
movsb
lods
arpl
stc
cmpsb
jne
hlt
cmp
add
pop
push
add
ss
outsl
cli
cmp
test
sbb
fisubl
lcall
je
sti
loopne
std
xchg
jle
push
pusha
bound
test
mov
mov
jne
mov
push
outsb
adc
and
mov
mov
push
and
aad
je
pop
sbb
cmovnp
aaa
jae
xchg
andl
cmp
insb
xchg
and
inc
ds
inc
js
mov
sub
les
sub
arpl
pop
call
scas
mov
cmp
imul
add
cltd
sub
sub
in
add
jl
inc
dec
pop
test
inc
frstor
fwait
ja
jge
lahf
cmp
jp
and
adcl
sbb
sub
lcall
aam
or
xor
in
decl
add
fbstp
lock
repz
mov
ljmp
stos
lcall
xor
and
mov
pop
in
incl
jle
push
addr16
push
sti
aas
je
gs
iret
sbb
mov
pop
adc
push
push
push
mov
inc
rorb
push
scas
cltd
jl
repnz
adc
fidivrl
mov
test
lock
fldt
mov
jmp
sub
cld
daa
scas
lcall
sub
into
pop
and
test
lret
addb
jno
push
sahf
pop
aaa
lea
hlt
stos
rcll
jnp
or
jmp
movsb
aam
gs
jge
out
int
mov
push
idiv
mov
mov
ljmp
mov
cs
aam
popf
xchg
mov
lahf
mov
fdivrp
add
pop
dec
pop
lods
fisttps
imul
loope
or
lcall
insb
in
or
mov
xor
dec
pop
in
mov
inc
test
imul
testl
pushf
nop
pop
mov
lock
adc
mov
cmc
jle
jmp
xchg
ljmp
inc
sahf
xor
ljmp
xchg
mov
dec
jmp
movl
fistps
cmpsb
jg
mov
repnz
and
mov
inc
cmpsb
xor
into
sub
outsl
lods
mov
add
xor
inc
test
cmp
popa
add
xor
inc
daa
xchg
sarb
je
cmp
loop
or
inc
clc
xlat
push
push
push
push
sar
cmc
cwtl
lahf
movsb
mov
nop
out
mov
aad
faddl
imul
int3
insl
cmc
stc
mov
mov
fsub
int
fdivrs
inc
mov
loope
bound
in
adc
ret
ds
jae
push
pop
scas
idivl
out
lea
mov
or
dec
loopne
push
addl
jl
xchg
push
mov
imulb
adc
mov
popf
cmp
add
jmp
sub
popa
jns
test
mov
dec
jo
fs
inc
fucomp
sbb
popa
pop
arpl
jnp
lock
sub
repz
sbb
popf
jae
mov
add
mov
pop
fdivrs
xchg
and
push
pop
push
or
add
mov
and
lret
arpl
inc
lods
xchg
xor
insb
xorb
cmpsb
push
fstpt
push
js
in
cmp
movsl
lret
out
mov
aas
cmc
cmp
stc
lcall
jecxz
jp
push
mov
or
jg
mov
mov
dec
inc
imul
subb
cwtl
test
mov
pusha
loopne
push
rclb
sub
dec
mov
pop
xor
fsubrl
mov
add
cmp
add
pop
lcall
pop
outsl
dec
pop
into
fwait
xchg
add
sub
fldt
out
or
xor
and
xor
popa
add
dec
cmp
xchg
lret
cmpsl
push
sbb
sub
jmp
cmpsb
dec
movsl
sub
mov
sub
mov
xor
fcomps
sub
sub
addr16
call
das
bound
icebp
popa
and
dec
arpl
dec
dec
sub
fsubrs
inc
mov
xchg
lahf
jl
jne
jge
out
xor
scas
adc
lods
push
idivl
ljmp
xchg
sub
push
add
or
fsubl
add
add
das
movsl
daa
inc
adc
fsubrs
fadd
cmc
push
cmp
outsb
or
test
cmpsb
scas
push
leave
mov
jmp
sub
imul
loope
popf
pop
and
out
dec
loop
incl
loope
push
rcrb
aam
and
shll
or
mov
mov
mov
es
lcall
notb
pop
xchg
aam
shll
lods
cmp
jb
jl
sub
icebp
cmpsl
jmp
jge
pop
leave
dec
hlt
stos
in
cmp
xchg
dec
cs
mov
mov
and
int3
sbb
add
jle
es
mov
inc
sub
xchg
sub
dec
mov
cs
ret
mov
xor
add
mov
or
out
cmc
fscale
sbb
lcall
sub
jno
into
test
add
rol
dec
push
roll
dec
cmpsb
mov
call
jbe
imul
pop
sbb
xlat
jg
test
mov
and
nop
test
push
push
mov
repnz
mov
sahf
dec
adc
stc
sub
jae
push
adc
xor
pop
sub
jge
mov
add
mov
in
adc
cltd
or
out
out
jmp
nop
inc
xchg
push
jns
and
and
mov
pusha
leave
call
or
mov
loope
imul
xlat
jmp
xchg
cmp
insl
mov
fidivl
mov
jle
lds
jge
add
out
rcl
mov
cmc
mov
pop
call
cltd
mov
dec
mov
daa
pop
out
or
xor
add
jge
xchg
pop
inc
sarl
xor
pop
sub
jge
cmp
aam
push
in
mov
fsub
scas
mov
or
inc
dec
cwtl
scas
adc
shrl
push
dec
and
adc
jo
rcll
and
rol
cmp
aam
sub
or
jns
mov
loope
cmpsl
insl
dec
mov
xor
mov
cmpsb
lret
call
mov
mov
jno
les
or
dec
fdivrs
iret
mov
movsl
int
mov
imul
pop
push
mov
dec
push
sbb
xchg
lret
lea
lds
xchg
lds
paddusb
fstpl
lahf
cltd
cmpsb
pop
movsl
lods
lret
sbb
pop
sbb
movsb
or
test
sub
testl
pop
loope
adc
shlb
cmp
inc
cmc
cmpsl
dec
cmp
mov
mov
xchg
and
iret
push
ret
add
leave
out
lods
gs
lret
fwait
xor
sub
or
popa
mull
sub
adc
test
into
xchg
in
pushl
pop
mov
xor
test
dec
add
mov
enter
sbbl
add
idivl
dec
jp
pop
sbb
adc
fistpll
test
pushf
inc
gs
mov
popa
rcr
in
repz
popa
sbb
inc
pop
in
outsb
or
push
mov
loopne
leave
xchg
lcall
lea
fwait
xchg
and
mov
push
fistpll
sahf
ss
sbb
lods
sbb
sub
pop
sahf
call
sbb
push
inc
xor
xor
out
clflush
sub
lret
dec
xorb
shll
sub
and
test
or
jb
lds
jecxz
pop
iret
dec
in
test
sub
xor
pop
pusha
popf
aam
popf
mov
cmpsl
fldcw
repz
adc
cmp
subb
mov
sub
sub
movsb
adc
lahf
jecxz
jmp
loop
sub
icebp
mov
and
out
sub
sti
repz
scas
lods
out
or
fs
lcall
mov
out
jmp
push
add
ja
test
leave
mov
mov
jo
aaa
outsl
mov
in
rcll
push
fcoms
imulb
rcrb
push
insl
outsl
xor
addr16
jg
lock
mov
mov
cltd
xchg
lock
test
fs
lret
push
popa
xchg
loopne
pusha
in
clc
inc
dec
xor
imul
jne
adc
xor
rcll
data16
inc
mov
and
jo
pop
insl
push
pop
add
hlt
mov
dec
add
jle
xor
ret
cli
sbb
and
aad
aaa
outsb
pop
test
xchg
jmp
xchg
hlt
jbe
jne
cld
or
loope
pop
push
repz
inc
cld
stos
push
sub
pushf
sahf
cli
out
or
pop
jo
addr16
in
or
lea
icebp
and
in
cmpsl
add
pop
pop
mov
fisubrs
and
xchg
jmp
mov
inc
cmc
cld
lds
sti
nop
mov
xor
sbb
add
aam
jb
sarb
out
test
loop
sub
adc
push
and
sub
lret
cmpsl
mov
mov
fiadds
push
dec
cld
dec
jns
imul
shll
in
pop
jecxz
lods
popa
pop
xchg
jno
push
fimuls
mov
shrb
shr
addr16
scas
adc
inc
fldl
sub
cmp
mov
jp
fs
pop
pop
cmp
das
fldlg2
imul
subb
daa
negb
addr16
mov
movsb
xor
mov
sbb
and
sub
cmp
or
mov
inc
fsubs
jb
sbb
sbb
xlat
or
adc
outsl
in
mov
filds
int3
or
push
pop
sub
leave
fiaddl
insl
xchg
rol
fmuls
sub
push
jge
fstl
loop
pushf
ss
jo
mov
add
mov
sbb
xchg
xchg
and
pop
lods
xor
insb
jg
notb
scas
int3
ret
mov
outsl
push
mov
mov
add
pop
push
inc
fstpl
rclb
and
fidivrs
mov
rcrb
inc
nop
loope
xchg
push
and
push
fstps
outsl
inc
pushf
hlt
cltd
lret
sbb
or
mov
stc
lahf
icebp
bound
movsl
push
xchg
xor
sarl
and
fistl
push
rcrb
imul
xchg
inc
jmp
mov
test
jns
push
out
sub
stos
xor
fs
xchg
imul
lods
cmp
lods
enter
stc
jl
shll
js
cmpsl
dec
or
in
test
pop
pop
push
gs
sbb
inc
lret
or
pop
fwait
push
in
icebp
sti
pop
mov
adc
push
dec
push
sub
out
add
mov
fisttps
mov
pop
stos
das
mov
mov
mov
rcll
test
or
test
mov
bswap
imul
mov
cmp
xchg
and
bound
pop
adc
jb
popf
stos
push
mov
test
insl
sub
je
or
hlt
sub
sub
push
enter
add
ss
adc
mov
xor
lea
ja
and
pop
out
cltd
in
imul
jmp
mov
aaa
pop
in
xor
and
inc
xor
mov
inc
bndstx
in
loop
xor
adc
repnz
fs
push
shrl
xchg
cwtl
aam
movsl
loopne
jg
xor
test
leave
aaa
pop
jns
fists
fcompl
pop
xor
emms
jns
adc
in
jmp
outsb
or
cmp
or
fmuls
inc
sbb
mov
in
pop
aad
enter
and
sarl
out
jp
dec
lods
je
sub
outsb
fsubrl
mov
mov
jo
out
mov
push
mulb
arpl
ret
xchg
mov
jb
insb
adc
xchg
lods
fildll
mov
push
mov
scas
mov
insl
push
sar
mov
ja
add
adc
aaa
ja
loope
icebp
fidivs
enter
xchg
push
mov
inc
mov
mov
xchg
mov
push
lods
xor
adc
inc
xchg
imul
sbbb
aad
orb
test
push
push
sbb
xchg
xor
icebp
push
dec
mov
dec
dec
jmp
xlat
push
jmp
or
popf
mov
xchg
mov
inc
mov
cmp
sbb
push
mull
popl
xchg
inc
sahf
cltd
dec
rcll
out
das
add
loope
hlt
sub
add
pop
fwait
jno
stc
iret
sbb
cmp
mov
popa
gs
std
cli
dec
ds
mov
outsl
into
adcl
mov
enter
stc
nop
jmp
add
xor
jmp
pop
cmc
loope
stos
and
aas
sbb
pop
cs
push
push
mov
mov
xchg
add
mov
xchg
or
sbb
sarl
fdivs
cmpb
int3
outsb
cmpsb
mov
jo
icebp
enter
mov
aad
fnstsw
xchg
rcll
mov
xchg
subl
test
dec
fisubl
in
dec
pop
push
push
add
sub
push
outsb
les
inc
jp
push
enter
testb
mov
pop
cli
pop
iret
mov
jb
daa
jnp
mov
mov
adc
mov
dec
mov
mov
dec
push
sub
xor
cs
jp
mov
nop
cmove
dec
outsl
test
out
fdivrl
adc
lods
inc
jmp
dec
out
ja
movsb
pop
cmp
mov
fisubrs
pop
rcrl
jb
push
pushf
inc
lcall
mov
xlat
outsw
repnz
lds
pop
test
and
fnstsw
das
cmp
fimull
sub
dec
jmp
cmp
inc
mov
fucom
jp
jp
insb
into
jmp
jecxz
in
ja
movlhps
sbb
mov
mov
xchg
cmp
nop
push
pop
mov
and
mov
xchg
fsubrs
in
pop
xlat
mov
and
and
adc
test
inc
ror
inc
dec
pop
in
scas
mov
movsl
lods
imull
nop
xchg
les
cmpsl
sbb
cmp
in
xchg
shr
dec
mov
inc
jae
icebp
outsb
mov
mov
scas
and
roll
das
out
push
icebp
dec
rcll
adcb
ds
cmc
mov
adc
jp
mov
jmp
cmc
decl
add
cld
or
lahf
mov
pusha
mov
shlb
mov
add
sub
mov
cmpsl
jp
add
jecxz
xchg
cmp
and
fnstcw
mov
daa
pusha
mov
daa
sbb
push
arpl
mov
and
jg
jns
pushf
cwtl
test
and
mov
mov
lds
hlt
adc
mov
mov
dec
jo
lock
lret
xor
xchg
and
repz
outsl
aas
in
insb
push
int3
shll
mov
mov
pusha
mov
test
mov
jne
mov
aad
gs
cli
imul
sub
adc
add
addr16
enter
sub
rorb
mov
in
stos
push
and
jo
ret
repnz
jns
shl
lcall
push
push
mov
shl
xor
jge
pop
outsl
xor
mov
hlt
outsb
bound
nop
leave
mov
cmp
dec
dec
das
out
cmpsl
pop
xor
dec
and
pushf
insl
xchg
or
lea
ret
or
fwait
jae
cmpsl
scas
in
jne
or
arpl
in
inc
fdivrs
xchg
adc
dec
int
adc
cmpsb
inc
adc
cmp
push
leave
jno
push
mov
cmp
jno
or
mov
pop
xchg
inc
movsl
aaa
inc
add
push
nop
sti
lret
jno
in
aas
movsb
lea
int3
xchg
adc
jnp
out
sbb
cltd
pop
or
or
mov
xchg
sub
pop
mov
sarl
fidivrs
add
inc
mov
pop
dec
sbb
or
aad
sub
in
inc
xchg
test
jbe
cmp
lock
ja
xlat
cmp
fcompl
pop
or
addb
sub
or
dec
test
ficomps
stc
xor
sub
pop
shlb
sbb
dec
mov
jl
mov
stc
jg
sbb
jecxz
lahf
push
or
aam
std
xor
stc
lcall
pop
inc
lret
and
clc
adc
sti
dec
or
mov
leave
mov
jge
adc
inc
nop
ficoml
and
pop
jne
and
or
loop
cmpsb
pushf
lahf
jno
xchg
jnp
mov
aad
pop
inc
std
mov
xchg
jl
in
push
push
sbb
and
sbb
dec
aaa
shlb
push
mov
xchg
stc
pop
jne
inc
cmc
loop
inc
dec
or
cmpsb
lahf
pop
sub
dec
jae
xchg
mov
xor
js
dec
push
dec
sbb
test
fs
mov
push
jno
test
repz
xor
ret
pop
xchg
push
add
mov
xor
adc
addr16
mov
and
cmp
cmp
in
sub
or
sub
cld
pop
mov
xor
enter
or
ret
jle
sub
add
sahf
cmp
hlt
imul
push
call
stc
fsubp
arpl
stos
insb
sbbb
push
pop
pusha
std
push
sub
out
stos
xchg
inc
jbe
jmp
dec
loop,pn
hlt
inc
cmp
pop
shrl
pusha
fsubrs
ret
scas
mov
or
pop
imul
dec
in
sti
outsb
hlt
push
enter
popf
xchg
inc
inc
call
movsl
fistpll
or
out
jmp
faddl
mov
cs
stc
popa
dec
fucomip
push
lret
sbb
pop
fadds
sbbl
popf
shrb
xchg
and
int
aad
std
adc
lea
mov
inc
aam
xchg
aam
int
mov
xchg
push
cmpb
call
adc
jge
inc
mov
repz
dec
dec
scas
pop
movsl
addr16
repz
fadd
test
jb
mov
out
xchg
fmull
jg
sahf
sub
inc
mov
mov
or
mov
outsb
ja
mov
jne
aas
je
fs
loope
jmp
bnd
or
adc
pop
pop
pop
push
fnstsw
mov
rorl
movsl
adc
outsl
popa
push
xor
inc
clc
fs
pop
mov
cmp
fcomp
mov
cmp
sahf
jnp,pt
mov
and
or
outsl
rcll
movsl
sub
ja
jmp
add
xchg
xchg
popa
inc
cld
jnp
cmc
cmc
xor
xchg
xchg
xor
dec
cmp
sub
ret
out
cs
frstor
rcrb
aam
repnz
xor
fsubr
rorb
sti
pop
sub
gs
xor
sahf
push
dec
mov
out
jl
mov
mov
xchg
inc
das
mov
test
dec
lret
jbe
lods
stos
movsb
mov
pop
pop
das
insb
aaa
pop
test
test
sbb
jge
mov
push
pusha
fs
fistpll
jle
es
enter
sub
add
push
aad
out
or
arpl
xchg
sub
andb
popa
xchg
push
into
sub
add
lods
pop
jl
popl
mov
jns
movsl
adc
sbb
jge
cmp
lcall
and
cld
xor
mov
add
jb
inc
inc
jne
pusha
testb
xor
lods
jb
aad
adc
loop
orl
ret
movd
scas
jnp
loopne
and
out
cwtl
xor
imul
in
pop
in
cli
fst
cmc
fidivl
mov
mov
sbb
mov
xchg
mov
cmp
daa
movsb
mov
lods
mov
daa
data16
cmp
cltd
or
mov
repz
dec
imul
mov
clc
movsl
xchg
jle
mov
inc
push
insl
mov
push
cmp
test
insl
call
outsb
ret
mov
mov
sub
outsb
xchg
push
pusha
mov
cltd
xchg
call
xchg
add
lods
xor
push
ljmp
sub
add
mov
cmp
sub
mov
jge
xchg
add
stos
mov
cwtl
jle
push
sbb
insl
jmp
jge
jp
mov
dec
cmpsl
clc
popf
mov
aad
pop
bound
inc
jns
mov
pop
daa
in
mov
scas
mov
insb
popa
into
and
icebp
cwtl
xor
mulb
ss
rcll
push
movsl
push
mov
mov
inc
in
negl
xchg
xor
lahf
imul
arpl
push
dec
test
pop
icebp
dec
test
jle
push
push
sahf
subl
cmc
sahf
adc
popa
sub
test
les
fs
xchg
xchg
push
stos
into
inc
inc
jae
cmp
fsubrs
ds
icebp
scas
or
xor
cmpl
mov
add
xor
inc
push
add
incl
xchg
push
xchg
mov
dec
hlt
add
cmpsb
outsb
sbb
mov
pop
addl
aam
fmul
jne
jb
mov
push
rorl
insb
adc
add
dec
loope
popa
repnz
add
mov
fnstcw
icebp
js
ljmp
jl
je
sub
cli
das
mov
cmp
inc
insb
orb
and
das
mov
xor
lret
mov
mov
repz
cmpsl
pop
push
imul
sub
fcmovb
mov
sbb
stc
cmp
push
push
sbb
inc
in
xchg
loope
pop
jnp
outsl
fsts
cwtl
daa
iret
ss
jae
or
fisttpll
mov
repnz
mov
lds
test
lds
fiaddl
in
adc
cs
adc
add
sarb
lcall
lods
mov
sub
aam
push
sub
bndstx
cmpsl
sub
cmpsb
adc
pop
or
jo
pop
jl
enter
push
jns
hlt
cmp
and
repnz
stos
push
shl
fadds
ret
dec
xchg
dec
stos
dec
inc
mov
jle
cmp
dec
pop
lgs
les
aad
cmc
xchg
in
xchg
push
ja
movsb
and
test
xor
lcall
pusha
daa
loope
icebp
or
cmpsb
adc
lods
sti
clc
movsb
pop
js
loop
mov
pop
jle
outsb
and
mov
mov
adc
mov
cld
inc
dec
clc
ja
cmpsb
adc
ret
sti
dec
mov
jns
aad
jl
leave
sti
push
roll
jle
iret
stos
out
fldlg2
stos
xchg
push
xchg
iret
pop
shlb
jp
dec
ret
inc
inc
dec
imul
or
lock
imul
mov
mov
mov
and
or
stc
and
xlat
adc
ss
xor
fnstcw
iret
test
dec
add
mov
dec
in
mov
and
and
cmp
or
xchg
outsb
popf
push
mov
loopne
xchg
aad
and
mov
je
cld
xchg
js
fcoml
and
lret
mov
loope
lret
test
adcb
xor
mov
cmp
cmp
jecxz
dec
test
ret
outsb
pop
addr16
cld
pop
mov
add
inc
rol
ja
faddl
cld
stos
fdivrs
push
pop
aam
leave
xor
in
scas
jo
and
jp
mov
in
inc
push
stc
mov
ds
mov
xbegin
movsb
push
xchg
xchg
xor
idivl
test
fadds
ljmp
jne
mov
adc
into
dec
lahf
mov
or
ret
xorb
mov
out
or
cmp
loopne
inc
push
lret
aas
push
mov
lret
fidivs
xchg
push
mov
pop
xor
sbb
cmp
or
sbb
fisubrl
fimull
pop
aaa
jl
pop
xor
scas
jne
mulb
dec
stos
push
cmpsl
popf
dec
pop
dec
add
mov
sar
mov
push
loope
out
jg
dec
imul
imul
stos
mov
or
std
movsb
push
add
insl
nop
je
out
push
out
pop
pusha
fsubp
loopne
filds
idiv
pop
sub
cwtl
add
mov
jle
push
ret
outsl
xlat
pusha
mov
mov
push
sub
or
mull
cmp
dec
rcrl
arpl
imul
adc
clc
fnstcw
mov
std
jnp
push
xchg
or
cmpsb
sub
and
inc
sub
cmpsb
dec
cltd
jl
loop
les
adc
rorl
bound
lock
add
lock
jg
cld
adc
mov
fisubs
xchg
mov
push
out
jle
push
loopne
add
mov
test
jbe
mov
addr16
sti
inc
cmp
in
add
sub
adc
xor
and
out
stos
dec
outsl
jecxz
cmp
mov
sub
call
mov
or
mov
jo
cli
jl
and
push
cmp
adc
dec
nop
adc
movsl
imull
xchg
mov
or
int
fisttps
xlat
daa
adc
mov
mov
mov
xchg
dec
out
shll
out
ret
or
mov
add
mov
jl
and
lea
sub
xchg
loopne
cmp
jmp
mov
test
pop
lods
mov
sbb
and
pop
pop
test
aaa
stos
adc
or
dec
int3
cmp
outsb
inc
loop
xchg
call
pop
aas
ffree
add
cmp
mov
adc
adc
push
add
outsb
in
test
ja
sub
repnz
dec
ja
sbb
stc
mov
xlat
fidivl
test
xchg
sysret
fadds
lcall
push
push
ss
or
xchg
dec
xchg
add
loop
xlat
shll
sahf
lret
sub
ret
pop
test
aam
in
pop
jne
jg
out
lds
mov
outsb
cli
xchg
xor
or
cld
xchg
add
mov
ljmp
mov
mov
pop
jb
jnp
outsb
push
ret
aam
into
out
lahf
fisttpl
out
mov
test
push
inc
ret
xchg
jl
mov
sub
into
repnz
call
flds
idivl
ljmp
test
or
sbb
rcll
xchg
sub
or
lcall
jl
mov
jo
sbb
dec
jne
mov
scas
dec
loopne
repz
dec
lahf
aaa
aaa
lret
dec
and
jmp
jne
fwait
pushf
push
xlat
pop
sbb
push
pop
ja
mov
and
xor
add
cmp
jbe
adc
mov
pop
pushf
in
out
adcb
std
and
shl
test
dec
dec
cmp
pop
sbb
cmp
push
mov
pop
inc
cltd
shr
fstps
sub
mov
sti
mov
repnz
mov
mov
push
push
ljmp
pop
mov
stos
insl
pop
arpl
rcl
in
les
xchg
into
add
mul
shr
ss
inc
fisttpl
fsubrl
daa
ret
sahf
test
add
push
jp
shll
jp
push
jge
loopne
inc
and
aaa
loope
xor
ficomps
dec
movsb
addr16
insl
sub
xor
ds
addr16
adc
push
and
inc
cld
sbb
imul
push
stos
mov
xor
and
pop
loope
jl
cmp
sbb
jo
mov
dec
push
jp
ds
lods
xchg
xchg
fwait
nop
or
in
daa
xor
jo
lcall
mov
mov
jbe,pn
mov
scas
ljmp
and
dec
dec
dec
mov
pop
fwait
stc
mov
test
fisubs
add
or
inc
shrb
loop
inc
nop
shll
sbb
dec
imull
outsb
idivl
xchg
adc
jae
sbb
sti
sub
and
xchg
inc
mov
aaa
aam
cwtl
popf
mov
repnz
mov
ret
and
jns
jne
lods
inc
test
andb
jge
jp
aas
in
gs
sbb
cltd
subb
mov
divl
ret
shrl
mov
jle
pop
ds
add
jns
popa
pop
sbb
and
movsl
mov
xchg
add
sti
xor
fidivrs
sbb
shll
outsl
clc
leave
and
mov
ljmp
or
pop
aad
subb
sbb
cmc
call
mov
mov
and
mov
mov
test
xlat
push
and
adc
xor
cmp
mov
out
clc
pop
daa
divb
mov
jo
add
xchg
out
inc
jge
inc
or
jno
xchg
or
and
int
jg
mov
jo
xor
stos
addr16
fisttpll
or
dec
arpl
neg
mov
nop
jecxz
fwait
aas
jmp
mov
dec
stos
dec
push
and
neg
xchg
lea
push
add
xchg
stc
ss
insb
xchg
add
push
repnz
std
stos
scas
daa
xchg
mov
ror
imul
mov
mov
lahf
jl
insl
outsb
mov
clc
gs
mov
es
pop
mov
das
sbb
cmpsb
or
xor
movsb
mov
add
push
in
pop
add
lods
sub
cmp
push
insl
lret
sub
in
ljmp
mov
push
fmuls
mov
nop
xor
mov
dec
repz
stos
sub
mov
adc
hlt
out
jle
loope
repnz
jecxz
xor
andb
add
test
pop
loopne
lods
jl
mov
leave
into
movsl
insl
pop
dec
enter
imul
mov
jo
cmp
dec
pop
add
and
inc
outsl
fwait
call
pop
mov
enter
jne
sbb
fwait
inc
inc
hlt
jae
push
xchg
test
je
push
xor
push
cmpl
mov
dec
push
sub
sbb
xor
in
adcb
adc
pop
xor
test
clc
xchg
lock
loope
xor
stc
pop
cmp
mov
cmp
fidivl
jae
push
dec
and
js
lcall
add
push
cmp
in
movsb
or
sar
sub
loopne
es
push
cmpsb
inc
clc
add
pop
add
dec
adc
test
aas
cmp
loopne
or
nop
push
mov
ret
xchg
xchg
xchg
mov
jl
shlb
inc
jg
xlat
adc
add
pop
movsl
sbb
cmp
xchg
push
sub
push
into
cli
xchg
xchg
mov
lods
mov
lret
pmulhw
or
pusha
adc
popa
jb
cmp
movsl
test
sub
mov
and
popa
popf
gs
xchg
popf
push
jge
lret
out
insl
inc
add
scas
ret
jnp
rcrb
cmp
test
xor
mov
fsubp
test
movsb
and
pusha
aam
sbb
sbb
aas
repz
pop
test
adcl
xchg
in
fwait
cmp
jmp
cmp
fmul
sub
pop
cltd
gs
lds
jmp
dec
xchg
cmp
imull
cli
pushl
xor
adc
clc
ljmp
add
testl
pop
sti
add
les
mov
pushf
outsl
cwtl
xchg
jg
sub
pop
test
rcr
cmp
test
fdivrs
pusha
xchg
pop
inc
jo
cmp
shlb
inc
movsb
xchg
jnp
xchg
fidivl
mov
fucomp
pop
jle
sbb
xor
cmpsb
sbb
enter
add
shrl
js
fucomp
adc
ficoml
cmp
sbb
fcomps
fcmove
notl
xchg
movsl
iret
cmc
push
mov
loopne
lcall
add
pop
sbbl
aaa
test
xchg
xlat
rcll
ds
movsl
clc
add
mov
jmp
arpl
call
sti
pop
shl
and
sbb
sbb
mov
mov
jno
rcll
int3
iret
int3
inc
dec
stos
int
add
xlat
xchg
jle
and
test
add
scas
mov
xor
pop
fcompl
daa
icebp
test
jbe
inc
mov
loopne
jnp
push
push
std
fmull
mov
lcall
sub
stc
cmpl
jbe
dec
jge
jmp
mov
arpl
add
push
fistpll
std
adc
pop
cmpsl
test
pop
enter
out
and
lcall
bound
lds
push
mov
fs
jb
add
xchg
push
jge
xchg
sbb
sub
stc
outsb
hlt
sbb
cmpsb
inc
lods
out
xchg
jmp
decb
cmovge
decl
mov
mov
idivl
cmp
std
dec
mov
fdivr
cmp
jmp
jecxz
outsb
lcall
xor
out
dec
loop
je
mov
cmpsl
push
cmpsl
sub
mov
lea
loop
rorl
andb
cmpb
arpl
rcll
push
push
cmpb
mov
fisttpll
adc
push
imul
mov
or
in
adc
xor
pop
dec
jge
call
and
bound
scas
add
sub
je
mov
enter
push
inc
mov
push
clc
jmp
xor
and
jg
mov
fadd
test
pop
or
jl
subb
dec
lock
mov
jle
jp
movsl
loopne
cwtl
dec
jns
ljmp
lock
or
hlt
dec
cmc
jns
mov
sbb
sub
mov
adc
outsb
mov
std
sti
ret
shrb
mov
inc
repz
iret
xchg
into
repz
xchg
push
adc
sbb
ljmp
call
out
sbb
pop
dec
aas
inc
movsb
sub
pop
outsb
loop
mov
mov
daa
xchg
pushf
mov
mov
and
add
pop
icebp
stos
fmull
aam
rolb
pop
xchg
das
sbb
iret
mov
dec
dec
and
jecxz
and
jecxz
rcr
lods
lea
mov
mov
xchg
push
in
into
sbb
inc
stos
pop
sbb
jbe
mov
rorl
lcall
int3
arpl
andl
daa
ljmp
arpl
push
nop
fs
loope
mov
imul
add
mov
outsb
adc
add
adc
imul
mov
in
inc
add
jle
ljmp
outsl
pop
jmp
add
pop
loopne,pn
lcall
mov
xlat
push
rcrb
sbb
cmc
lcall
add
pop
dec
cmp
sbb
or
and
pusha
js
xchg
xlat
and
dec
ljmp
ljmp
stc
sti
les
mov
adc
mov
sbb
fisttpll
loop
mov
xchg
js
add
adc
pop
lods
sbb
mov
je
mov
out
xchg
dec
fldlg2
dec
into
bound
leave
fstpl
leave
jmp
fcomps
movsl
adc
xchg
cli
loopne
add
pop
sbb
repnz
push
leave
out
push
dec
jbe
sbb
scas
mov
push
icebp
or
mov
cmp
add
or
sub
and
stos
sub
jg
push
notb
add
das
andb
movsb
insb
icebp
sub
jg
sub
dec
push
mov
testl
in
loopne
sti
sarb
xchg
jo
pop
sub
cmpl
pop
add
inc
push
mov
lret
mov
sbb
and
in
movsb
dec
fwait
gs
ja
mov
test
notl
shl
dec
xchg
flds
notl
lds
js
aas
outsb
pop
fcomip
xor
pop
out
jbe
orb
dec
rcrl
lock
sti
add
popf
inc
inc
xchg
mov
xchg
divl
cmpsb
dec
iret
cmp
mov
out
je
xchg
out
fsubrs
int3
and
xchg
mov
mov
cmp
inc
sbb
mov
sbb
jge
fstpt
pop
sbb
add
mov
cld
or
out
mov
adc
pop
shrl
fdivl
lods
lret
loop
sarb
add
das
sahf
cld
fisttpll
aad
sub
mov
sub
fsubr
in
sahf
mov
xor
cmpsb
popf
gs
jbe
leave
push
jge
pop
xchg
cmp
fstpl
xlat
ljmp
scas
gs
mov
lds
mov
mov
filds
cmp
push
out
jns
scas
dec
dec
jnp
xchg
lcall
arpl
outsb
cs
insl
mov
jmp
xchg
jl
mov
dec
int
loop
lock
inc
in
shll
insl
mov
repnz
mov
lds
scas
xor
sbb
insb
lcall
jmp
xlat
cmp
rolb
push
xlat
sar
in
xor
test
ror
cmp
je
inc
fsubrl
adcb
scas
mov
push
jmp
loopne
aas
bound
dec
popl
fisubrs
cmp
pop
ficoms
je
icebp
loop
mov
int3
jle
insb
lahf
inc
xchg
test
andb
jae
push
scas
push
mov
pop
rclb
test
push
sbb
adcb
out
in
pusha
movsl
or
jl
jo
out
xchg
or
shll
add
test
xchg
mov
daa
flds
les
jmp
bound
cli
pusha
xchg
neg
pextrw
xchg
mov
and
rorb
add
cli
cmpsb
push
adc
and
xor
hlt
jo
xchg
xchg
pop
jmp
jae
into
mov
dec
ror
iret
fmul
mov
xor
cmp
iret
jmp
loop
popf
sub
add
iret
fmuls
mov
sub
push
outsb
mov
cltd
or
stos
or
lods
outsl
fwait
jge
mov
ds
mov
repz
add
in
fld
scas
scas
imul
decb
popa
push
dec
insb
call
or
pop
xor
mov
inc
dec
jmp
inc
add
add
mov
jp
sbb
xor
push
imulb
les
inc
jmp
push
fs
sbb
mov
or
outsb
sub
lret
jbe
push
in
mov
push
jmp
adc
jns
aas
and
testb
out
lds
cltd
adcb
mov
inc
jmp
pop
xor
imul
and
ljmp
mov
cli
js
rorb
push
aad
sbb
rcll
mov
xchg
into
mov
bnd
cmp
outsb
or
mov
pop
inc
mov
out
mov
pop
dec
inc
push
xor
xchg
xchg
ja
pop
cli
jno
or
insb
addr16
pop
lods
pop
loope
jnp
scas
ja
or
xchg
lea
xchg
inc
push
push
jmp
or
xor
jg
adc
mov
xor
pop
or
fdivrl
sarb
push
xchg
aam
xor
add
mov
dec
ret
mov
dec
lahf
cmp
cmpsl
mov
in
lahf
stos
test
fnstsw
out
pusha
or
fsts
jb
inc
clc
leave
sarl
movsb
out
jnp
dec
cltd
adc
lret
in
out
mov
add
and
jecxz
leave
push
push
dec
sbb
aad
push
lahf
loop
dec
cmpsb
test
rclb
adc
mov
xor
sti
mov
push
xchg
pusha
arpl
mov
add
aam
cmp
mov
jb
jecxz
jo
shrb
fsub
data16
sub
adc
call
push
loope
mov
ds
mov
lock
popa
idiv
push
addr16
adc
mov
add
test
pop
scas
lds
inc
jbe
mov
in
test
sbbl
push
dec
movsl
jecxz
jno
in
out
jge
jnp
mov
mov
aaa
rorl
xchg
mov
inc
cmp
test
sbb
ss
out
popf
lcall
xor
frstor
jmp
jg
jae
add
xchg
adc
jg
xchg
xchg
fists
add
in
or
sahf
dec
dec
mov
clc
sub
cmp
xchg
sbb
xor
out
pop
sbb
mov
sub
ret
fimull
xor
mov
orb
mov
loope
jns
jno
inc
add
fists
lahf
xor
xor
dec
and
test
jo
pop
lahf
ja
popf
pop
dec
jb
call
pushf
adc
in
sub
lods
subl
in
add
sbb
imul
or
and
xlat
fs
mov
sub
ret
aad
arpl
cmp
inc
jb
mov
cltd
loopne
ret
mov
cmp
out
orl
cmp
xor
cltd
pop
data16
push
es
xchg
adc
jge
call
xchg
sbb
jg
rclw
pushf
dec
push
cmp
add
aas
std
pop
popf
sar
bound
fcoms
xor
cmpsl
jns
mov
mov
mov
test
xorb
sbb
pop
add
fwait
pop
mov
push
add
jp
mov
or
lds
lea
hlt
shl
outsb
fistpll
and
or
aam
sbb
jnp
repnz
enter
pop
cmpsb
mov
xor
adc
shl
hlt
pop
push
cmp
lcall
fnstcw
sbb
mov
cmp
or
cmpsb
cmp
xor
pop
or
mov
movl
jno
mov
push
cwtl
push
mov
stc
or
lret
aaa
sahf
ss
loopne
jae
test
popa
inc
hlt
imul
out
repnz
jae
aaa
mov
aas
stos
or
push
xor
mov
inc
test
xchg
into
int
jb
xchg
subb
add
fmull
lahf
push
int
cmp
js
popf
inc
movsb
lods
dec
insb
xchg
adc
adc
sbb
iret
and
jno
xor
add
dec
roll
jecxz
jns
int
ljmp
xlat
dec
xor
iret
outsb
add
imul
or
mov
mov
dec
fmull
pushf
adc
mov
jno
cs
dec
mov
outsl
add
dec
in
dec
test
mov
inc
shl
mov
call
or
in
dec
incb
int
or
jbe
push
cmp
movsb
ds
or
adc
xor
rorl
into
adc
movsl
repnz
popa
movsl
xchg
shrb
pop
jnp
xor
jbe
gs
mov
inc
add
sbb
in
and
mov
arpl
mov
jmp
dec
and
out
xchg
lds
adc
repnz
pop
movsb
pop
mov
out
push
xchg
jns
add
and
jnp
adc
mov
sbb
xchg
fisttpll
shrb
nop
mov
sub
ret
xchg
or
adc
addl
es
sbb
sbb
push
imul
cmp
push
rcll
in
fs
hlt
out
test
scas
icebp
lahf
outsb
push
sarl
adc
push
addb
mov
insb
pushf
push
inc
mov
cmp
mov
adcb
mov
stos
mov
push
sti
imulb
call
shlb
cmp
shlb
out
inc
bound
test
je
enter
mov
jbe
jl
fists
in
mov
out
test
xchg
data16
jle
cwtl
das
mov
fcompl
ficompl
pop
adc
in
inc
popf
lock
rcrb
push
sub
adc
int
cs
out
pop
and
jbe
xchg
lret
fsubrp
dec
sahf
xor
cmp
outsl
cmc
in
and
mov
push
pusha
mov
pop
shlb
shrb
xchg
push
fstp
push
out
cli
pop
test
jmp
dec
push
mov
stos
xchg
shl
mov
xor
fidivrl
push
cltd
cmp
jo
lea
sub
repnz
pop
fwait
or
mov
or
mov
call
pushf
fcoms
test
sbb
and
pop
stos
push
mulb
or
cs
mov
js
sbb
ds
shll
cltd
shl
aad
mov
inc
or
int
xchg
rcrb
xchg
push
sahf
repnz
adc
adc
adc
push
jbe
mov
mov
dec
mov
daa
gs
ret
lock
mov
dec
mov
add
xor
je
iret
test
int3
rcr
ds
sbb
int3
dec
movsb
jle
in
mov
sbbb
sub
push
pop
xrelease
into
push
jp
add
lds
negl
mov
dec
loopne
in
dec
icebp
stos
pop
inc
std
out
pop
cmp
mov
stc
xchg
mov
xchg
pushf
pushf
mov
hlt
lock
test
xlat
fmul
mov
dec
paddd
bound
add
aaa
fnstenv
jnp
inc
xchg
add
icebp
xor
arpl
mov
and
addr16
into
or
inc
cmpsb
cmpsl
xchg
sub
aaa
mov
pusha
or
adc
insb
jbe
rorb
mov
aaa
add
xor
and
dec
and
bound
pop
ljmp
xor
adc
push
mov
repz
test
jb
and
insl
lahf
hlt
cmp
dec
scas
fldl
loopne
lods
cmp
push
dec
mov
xor
pop
xor
ret
js
or
mov
pop
das
mov
int3
adc
clc
aam
xchg
test
pop
push
ror
ja
ljmp
xor
lds
xchg
lret
sahf
cmp
leave
pop
mov
push
xor
int3
fwait
and
popa
in
push
stc
push
pop
sahf
cwtl
jnp
movsb
ds
nop
std
movsl
test
xor
stos
or
inc
rcr
iret
das
lods
in
fwait
decb
loope
mov
call
movsl
repnz
xor
sbb
push
jne
mov
lods
dec
movsb
jmp
mov
sti
popf
mov
dec
mov
iret
mov
test
cmp
aaa
test
repz
jb
dec
inc
mov
pop
gs
or
add
mov
cmpsl
mov
roll
in
xor
mov
adc
mov
add
dec
lock
scas
js
arpl
adc
aaa
insb
lock
mov
mov
push
add
loop
pop
xor
sub
jne
pop
pushf
jle
adc
hlt
lcall
xor
insb
shl
push
jle
add
and
mulb
mov
adc
fsub
mov
or
fsincos
shlb
out
ja
icebp
sub
xchg
test
negl
jmp
cwtl
mov
out
inc
mov
jecxz
push
jge
pushf
sbb
inc
or
mov
jnp
mov
sub
push
addr16
in
sbbl
push
cli
inc
dec
test
add
rorl
xor
sbb
fldt
fucom
xor
pusha
push
stc
loopne
xor
out
sbb
cmpsb
add
out
icebp
lret
out
mov
or
in
or
aam
dec
add
fsubrs
das
jge
cmpxchg
dec
jecxz
xor
mov
clc
lret
into
cmc
jb
movl
xchg
adc
dec
test
add
xchg
pop
icebp
lods
sbb
sbb
sbb
mov
push
loope
inc
mov
jb
repnz
js
xchg
fs
mov
inc
rorb
lods
push
dec
in
mov
jg
sub
ret
xchg
sub
ljmp
stc
push
pop
and
pop
sbb
xor
std
dec
imul
int
gs
in
lret
clc
lods
jle
inc
repnz
add
pop
push
push
iret
or
nop
lods
pop
mov
jge
jbe
push
sub
or
xchg
pusha
lods
mov
fldz
add
imul
jbe
repnz
add
dec
loope
xchg
ds
int3
xor
push
in
fiaddl
adc
or
mov
popa
inc
adc
mov
mov
out
fcomps
test
ljmp
nop
or
cmovno
in
mov
loop
add
or
sbb
jmp
sbb
inc
dec
sbb
xor
add
mov
mov
xchg
dec
sbb
mov
out
xchg
out
mov
repnz
loope
insb
movsl
jl
popf
mov
xchg
shrl
in
xor
je
icebp
sbb
in
sbb
loop
mov
jb
jnp
decb
jno
add
inc
ljmp
shll
fists
dec
inc
adc
loop
loopne
in
xor
idivl
bound
outsl
cmp
ss
or
sub
push
pop
jmp
sub
jne
addr16
and
xchg
rorl
insb
pop
cwtl
out
scas
push
sub
mov
ljmp
pushf
sbbb
fidivrs
out
add
mov
rcll
out
jp
cmpsb
lds
xchg
inc
std
insb
sbb
sbb
adc
loop
xor
xor
or
sbb
mov
xor
cmp
dec
popf
jg
hlt
push
adc
inc
dec
mov
imul
rcrl
xchg
aaa
int3
inc
jecxz
mov
lods
jge
mov
aas
push
pop
jbe
movsl
mov
fst
sbb
xchg
lds
sbb
and
leave
adcl
or
pop
insb
test
xor
jp
add
js
fsts
xlat
xor
aad
sbbl
jns
ret
push
jecxz
jmp
adc
sub
mov
mov
xor
mov
movsl
outsb
lcall
movsb
int3
sbb
mov
dec
dec
insb
push
sub
std
xchg
cmp
sub
imul
push
jnp
sbb
jo
js
pusha
mov
cli
ljmp
daa
mov
clc
cmc
fdivl
sbb
jne
mov
gs
leave
xchg
push
and
jl
nop
lock
out
push
xchg
imul
int3
or
fisubrl
out
jae
xor
cltd
dec
and
pop
lds
xchg
cmpsl
lods
push
je
incb
or
xor
sub
addr16
cmpsb
cwtl
out
pop
mov
cmpsb
xchg
xchg
mov
add
arpl
dec
mov
sbb
push
dec
push
repz
adc
dec
and
sub
mov
dec
inc
pop
sub
fs
inc
sub
ret
je
sbb
add
fnstsw
jp
jecxz
xchg
push
xor
and
mov
scas
cmpsl
insl
mov
faddl
dec
jl
insl
aam
or
xchg
lods
mov
out
arpl
inc
hlt
xor
repz
xchg
sti
call
lret
bound
adc
sbb
push
out
test
fsub
xchg
std
sbb
cmp
mov
fisubl
pop
outsl
sub
cmp
xchg
mov
test
out
or
in
jo
pusha
mov
pop
xor
sbb
in
clc
mov
nop
insb
test
cwtl
loope
shl
pop
pop
add
test
jno
push
xchg
pop
mov
rcll
push
push
mov
call
test
add
pop
imul
adcl
push
nop
sahf
inc
mov
mov
test
xchg
sbb
inc
cmp
mov
adc
inc
loop
cmpsl
cmpsl
xor
xor
icebp
inc
sbb
xlat
cltd
test
in
xor
mov
jmp
jno
lds
je
adc
jns
dec
movsl
lods
push
decb
mov
ljmp
lds
shlb
fldt
shlb
sbbb
sbb
jne
mov
jp
das
pop
xchg
test
push
test
pop
into
sub
jmp
mov
mov
dec
repz
push
add
xchg
in
pop
jb
xor
lods
inc
enter
jae
sahf
push
and
sub
xor
pusha
and
inc
fmul
icebp
outsl
push
lea
mov
pop
lcall
cmp
cmp
iret
mov
insb
mov
stos
out
and
in
outsb
repz
lret
ljmp
adc
leave
lahf
lahf
imulb
pop
push
lea
shll
addb
les
inc
repnz
mov
and
push
xor
inc
cmp
fsubrs
test
rcrb
int3
sarb
xchg
jb
and
or
lahf
scas
test
lods
lcall
cmp
add
jae
fwait
aaa
mov
bound
mov
or
jno
ja
test
inc
sbb
mov
fdivrl
popw
xchg
add
les
xor
dec
mov
xchg
filds
leave
mov
stos
ljmp
mov
decb
decl
adc
mov
mov
sbb
inc
sub
ss
hlt
mov
push
adc
cltd
cs
mov
iret
loopne
mov
test
arpl
xor
mov
sub
fbstp
mov
add
or
mov
les
push
fs
dec
xlat
sbb
sub
pop
lds
pop
push
popf
sub
out
shr
inc
mov
xchg
iret
xchg
andl
in
adc
outsb
jmp
ret
mov
and
shld
inc
dec
in
add
inc
jecxz
jecxz
popl
repnz
into
cld
xor
and
loope
adc
ds
push
cmp
jmp
inc
push
push
aad
leave
sub
in
mov
pop
mov
aas
mov
mov
inc
mov
fwait
fwait
pop
jb
decb
mov
xor
nop
dec
xchg
jne
xchg
pop
sbb
bswap
scas
aam
sahf
addl
or
inc
or
in
pop
xor
fistpl
stos
rclb
int
subb
aad
lods
add
cmp
xor
dec
in
and
mov
lahf
jmp
repz
xor
mov
mov
gs
lea
mov
pusha
sar
or
sarb
jno
pop
xchg
mov
jb
or
mov
call
test
xchg
xchg
fistl
and
sahf
rolb
pop
xchg
icebp
jb
jbe
mov
ljmp
outsb
mov
dec
ds
push
test
and
and
pop
les
cmpsb
jecxz
clc
sub
clc
xor
loop
mov
ss
dec
shrl
pushf
mov
sti
fstpl
xchg
cmp
nop
jl
loop
and
add
sbb
pop
cld
aad
or
addr16
ret
inc
lcall
pusha
insb
mov
rcr
pop
cmp
pslld
pop
incl
sub
push
sbb
mov
stos
negb
jl
jg
scas
adc
sti
push
lock
ret
mov
orl
and
es
pop
mov
mov
or
imul
mov
pop
add
jb
fstpl
les
jnp
inc
ja
scas
push
cmc
cmc
mov
inc
mov
pop
push
insb
push
cltd
mov
xor
jno
mov
test
pop
adc
mov
mulb
hlt
cmpsb
jbe
or
jnp
push
in
push
arpl
int3
mov
pop
jg
je
test
imul
test
enter
movsb
cltd
fdiv
inc
or
das
pop
rclb
jno
adc
stos
call
push
pop
xchg
xchg
push
fdiv
test
je
jno
jnp
fwait
and
fs
push
add
test
icebp
xchg
fcmove
mov
push
das
pop
or
pop
pop
bound
sbb
sbb
daa
movsb
cmp
add
xor
sbb
lahf
push
pop
loope
nop
ss
push
sti
cmp
jecxz
mov
sbb
insl
jnp
pop
sbb
xchg
stc
and
mov
xchg
jmp
lahf
push
outsb
mov
ret
stos
leave
or
push
test
sbb
dec
and
pusha
push
push
fdivl
add
ds
xchg
cmpsl
pop
fisttps
xchg
mov
in
testl
iret
jle
int
icebp
xchg
daa
cmpsl
data16
sahf
pop
outsl
mov
dec
xor
subl
xlat
shr
dec
imul
jb
mov
xlat
jp
int3
ss
push
sub
aad
inc
fidivl
sbb
mov
arpl
mov
out
in
rorl
add
sub
jge
ss
xchg
jb
inc
adc
dec
dec
xchg
sub
stos
xor
xor
std
fsubrs
mov
cmc
sub
adc
pop
fiaddl
stos
cmp
mov
inc
outsb
cwtl
outsb
mov
fidivrs
out
call
mov
dec
cmp
rorb
mov
jmp
or
or
add
inc
lock
xor
sbb
dec
nop
repz
pusha
fst
cwtl
push
lods
enter
sub
fs
inc
cmpeqps
cmp
push
mov
shrl
aam
dec
adc
cmp
dec
js
aaa
pop
add
in
or
inc
jnp
xchg
test
cmc
lahf
dec
aaa
pop
sub
inc
pushf
push
lock
jge
dec
dec
mov
cwtl
push
sub
in
sbb
jo
cmp
clc
outsb
mov
out
mov
mov
sbb
leave
pop
sbb
and
out
in
pmaxsw
xchg
sub
es
das
jae
ret
mov
out
push
mov
repz
pop
pop
jge
lods
ss
jne
sbb
sahf
jp
wbinvd
pushf
jmp
jecxz
add
pop
loop
inc
jp
jno
les
jns
scas
in
js,pn
sub
pushf
sbb
das
dec
mov
hlt
fwait
out
add
mov
pop
repz
sbb
mov
outsb
fldl
xor
mov
or
inc
pop
iret
popf
mov
jae
push
es
push
sub
call
adc
xchg
pop
mov
scas
cmpsl
jmp
pop
xor
xor
pop
in
mov
test
sub
add
inc
xlat
sarb
mov
xor
into
das
mov
rep
mov
pop
pop
movsb
and
or
lea
jbe
subb
cwtl
add
cmpsb
hlt
push
mov
sub
sub
push
enter
mov
jle
shll
cmp
sbb
adc
sti
xchg
and
aas
mov
lods
in
popl
enter
xor
or
mov
dec
dec
jno
es
pop
sub
lock
imul
out
push
adc
lret
xchg
xor
fdivl
sub
jne
pop
arpl
xchg
rol
mov
xchg
hlt
mov
aad
add
daa
call
clc
mov
dec
adc
xchg
movsl
sti
inc
mov
adc
ret
test
pop
imul
out
vpmacsdd
pop
push
insb
hlt
mov
sahf
movw
cmp
mov
mov
push
cmc
xor
jmp
jno
ss
push
sub
cs
mov
sbb
jb
xchg
push
movl
sti
test
pop
enter
or
fwait
xor
xor
data16
inc
mov
aad
pop
mov
xor
movsbl
in
jmp
cmc
mov
cmp
into
insl
incb
add
repnz
xchg
dec
xor
jmp
iret
xchg
out
dec
jno
rcrl
lret
shrb
dec
or
aad
lods
call
push
sbb
pop
xor
orb
inc
bound
xlat
or
mov
and
add
ret
pop
sub
sub
mov
add
push
test
and
adc
nop
pop
push
dec
fsubrs
fwait
fwait
mov
xor
in
into
in
xor
ja
sub
fldt
pop
mov
or
sbb
sahf
shl
xchg
dec
mov
das
lods
xchg
das
mov
xor
pop
jne
js
pop
dec
int
test
adc
mov
pop
and
dec
inc
fnclex
insb
cmp
jnp
bnd
jl
push
cmpsb
cmp
mov
inc
movl
add
nop
fists
mov
js
daa
mov
and
and
subl
in
sub
push
imul
dec
mov
iret
push
fsubp
adc
jbe
xor
sbbb
mov
je
xchg
push
or
aas
inc
outsb
inc
pop
xor
xchg
jb
js
xchg
pop
push
cld
xor
mov
gs
jle
push
jae
aaa
xchg
int3
and
and
jns
sahf
mov
push
cltd
or
test
daa
fsubs
cmpl
or
lret
nop
push
adc
std
cwtl
std
lahf
pushf
test
in
cmp
fistps
mov
leave
call
out
cwtl
cmpsb
inc
dec
mov
dec
add
jns
or
in
jecxz
or
add
ficoml
mov
adc
decb
in
pop
pop
cs
dec
xor
enter
jbe
rcll
fcom
decl
outsb
push
pushf
in
aas
icebp
stos
das
push
cmpsl
adc
or
sub
pop
mov
mov
in
pop
lea
cmp
ficoml
leave
xlat
gs
dec
pushf
mov
out
dec
mov
je
pushf
xor
shl
das
aad
jne
pop
stos
aas
mov
push
mov
pushf
imul
sarl
add
mov
test
insb
fists
inc
push
xchg
mov
aaa
inc
addr16
fwait
mov
jl
fs
pop
sub
xchg
gs
and
push
call
push
fcoml
dec
insl
cmp
push
sbb
pushf
or
push
das
pop
jno
pushf
xor
mov
nop
in
fucom
icebp
inc
xor
les
fdivs
scas
loopne
mov
xor
pop
repz
xchg
mov
cld
fidivrs
add
dec
jne
clc
mov
out
adc
pop
rcrl
xchg
cwtl
push
cmp
test
call
cld
adc
aaa
fimuls
jp
sbbb
sahf
push
jle
push
adc
inc
and
repz
mov
sahf
mov
sarl
dec
cmp
push
movsb
int3
into
rcll
lahf
loopne
dec
jne
lret
push
fcomps
mov
int
mov
sti
in
test
js
aam
push
mov
xchg
mulb
xor
inc
mov
aas
mov
mov
push
in
mov
cli
mov
push
insb
movsb
ret
in
rolb
mov
cltd
push
fists
pop
mov
xchg
daa
popf
and
mov
dec
iret
and
insw
out
jo
or
cmp
xchg
gs
pop
add
mov
loop
mov
mov
in
mov
cld
push
js
sub
pop
xor
sbb
cmp
cmpsb
das
adc
adc
cltd
dec
adc
inc
dec
in
cmp
outsl
xchg
push
xchg
or
xchg
out
leave
ja
shrb
popa
out
fldcw
mov
xchg
mov
mov
mov
aad
xorl
fildll
cmp
sub
call
jae
hlt
test
adc
adc
mov
adc
mov
xor
or
dec
dec
xchg
add
ds
pop
test
mov
cmp
nop
call
in
and
jp
rorl
insl
cld
fidivrs
sahf
out
jnp
fdivl
inc
cmp
inc
lret
out
scas
sbb
jl
stc
xchg
sbb
mov
push
lods
dec
nop
inc
xorb
aam
sarl
rolb
dec
mov
xor
adc
sub
xor
int3
aad
jnp
lock
clc
push
jmp
lods
fwait
mov
xchg
leave
sbb
or
mov
fcomp
cmp
pop
outsl
sbb
adc
mov
push
mov
scas
pop
jne
xchg
aad
sub
in
cs
mov
jle
or
add
push
cwtl
push
scas
in
pop
aad
pop
inc
or
out
mov
in
sub
rcll
jbe
jge
and
cmp
lret
out
sub
lock
and
xor
popf
push
ja
jb
mov
cwtl
int3
inc
inc
or
stos
push
mov
mov
in
jl
int
push
out
mov
push
dec
jb
js
lahf
mov
imul
in
pop
icebp
and
push
mov
pushf
add
into
mov
jbe
sub
loop
shlb
xchg
call
shlb
fsubrs
push
mov
xchg
or
sbb
inc
out
dec
sub
lahf
movsl
sub
add
bound
xor
lahf
ret
ret
test
and
xchg
jmp
pusha
inc
enter
incb
cmp
pop
fsubr
fdivr
test
sbb
mov
inc
gs
cltd
daa
fisttpl
fmuls
out
test
out
test
pop
cmp
icebp
lahf
sub
mov
outsl
mov
or
ret
inc
loopne
jmp
push
mov
bound
mov
or
test
popf
sub
dec
insb
sahf
cmp
call
inc
test
dec
aad
push
test
in
mov
outsb
and
mov
clc
mov
xchg
lea
int3
or
addl
sbb
push
jne
adc
loope
int
and
rcr
insl
push
mov
test
lcall
movsl
xchg
imul
inc
insb
inc
subb
outsl
and
movsl
outsl
shll
stos
mov
or
pop
inc
inc
inc
out
test
call
add
loop
fsts
cmp
aas
fstps
xlat
or
sub
lock
test
repnz
icebp
ds
test
sbb
adc
std
test
xlat
inc
cmp
cmp
and
sti
mov
xor
sarl
scas
jp
hlt
out
xor
pushf
and
das
fisubl
push
in
addr16
mov
imul
inc
loop
das
orb
jns
mov
jne
jg
dec
insb
push
dec
shll
stos
mov
xor
lcall
aad
imul
xchg
or
mov
bound
int
mov
dec
stos
cld
sub
nop
push
shlb
xchg
push
out
ljmp
lret
inc
shrb
push
lds
mov
test
jno
jmp
and
addl
pop
ljmp
lods
ret
ret
pop
faddp
roll
inc
dec
add
andl
mov
les
sub
mov
ja
dec
sbb
xchg
dec
mov
test
scas
shrl
cmc
push
arpl
ss
js
rcll
cs
enter
xchg
shl
in
xor
in
sahf
push
loopne
push
or
sbb
pop
loopne
shll
cmp
imul
cmp
pusha
repz
lahf
push
mov
hlt
push
lahf
insb
mov
mov
sub
dec
and
fisttps
addr16
in
mov
jb
sbb
pop
mov
int3
xchg
or
sub
nop
int
sub
incb
jmp
jge
lds
fdiv
out
sub
test
pop
fwait
xchg
xor
aas
push
adc
push
cmp
fidivs
arpl
or
xchg
das
ss
sti
xchg
sub
pop
stc
jecxz
fnsave
adc
jb
adc
dec
pop
jbe
xor
mov
into
xchg
aaa
cmp
sub
and
cmp
and
sub
adc
roll
dec
dec
daa
cmpsb
pop
mov
fcoml
and
fcomps
fstps
push
data16
cmp
test
lcall
fxch
ja
repnz
lock
imul
sbb
or
rclb
loopne
push
add
enter
bsf
push
fwait
mov
jne
mov
ret
movsb
in
lock
aam
imul
or
inc
dec
lret
pop
insb
ljmp
push
pop
mov
and
push
ss
push
and
roll
push
jp
or
nop
adc
fimull
or
cltd
mov
push
cmc
dec
adc
adc
in
push
es
mov
cmp
faddp
test
lret
xor
insb
popf
out
pop
into
and
cmp
dec
lcall
xchg
call
pop
xchg
push
push
daa
mov
pop
xchg
xor
adc
push
lea
pusha
sti
jo
push
aas
loope
in
out
jno
sub
cmp
popf
nop
or
sbb
mov
inc
rclb
lods
xlat
fimull
inc
ss
insb
dec
cltd
xchg
sbb
es
mov
inc
pusha
insb
sbb
and
movsb
cltd
jb
sbb
or
or
ja
pusha
repz
xor
mov
inc
or
pop
loop
push
int
les
adc
mov
lret
outsb
or
sbb
pop
mov
mov
sbbb
xor
leave
sti
push
pop
andl
sahf
mov
xchg
sbb
mov
mov
ds
pop
leave
fbstp
sarl
pop
fwait
or
pop
add
sti
pop
shlb
xchg
pop
popf
clc
inc
aad
lret
add
cs
push
inc
cmc
out
cmpl
mov
outsl
out
in
cmpsl
xchg
mov
mov
mov
stos
ret
sub
xchg
lds
add
xorl
add
ret
lret
insl
jnp
addr16
ljmp
mov
jnp
xchg
and
inc
out
jne
fildl
inc
add
mov
mov
pop
fisttpll
nop
fdivl
je
push
fcoml
adc
andb
fnstsw
imul
popf
in
callw
lcall
push
cmpb
adc
bound
movsb
mov
pop
cmovno
push
sbb
mov
jae
or
sbb
daa
sbb
sbb
sbb
mov
lahf
jl
ljmp
sub
jno
daa
sub
mov
mov
lahf
add
subb
jecxz
adc
cmp
addr16
add
pop
mov
lret
or
pusha
jle
sbb
push
add
cmpsl
ficompl
pop
shrl
ss
nop
add
xchg
push
jbe
mov
pop
shlb
xor
sbb
dec
push
mov
mov
push
add
shll
mov
adc
mov
ret
push
iret
ftst
pop
arpl
sbb
push
or
loopne
je
outsb
int
push
mov
jle
cmpsb
and
and
repz
pop
pcmpeqd
xor
gs
js
std
nop
or
leave
popa
scas
in
mov
push
lods
out
shll
or
mov
test
cmc
in
scas
mov
pop
insb
adc
movsb
sub
and
push
mov
sar
xchg
js
xchg
xor
mov
xchg
mov
mov
aaa
ret
nop
movhps
adc
test
sbb
outsl
sahf
mov
fs
mov
add
or
or
loope
inc
sub
sub
push
sub
inc
push
mov
dec
mov
xor
fs
or
push
push
cltd
lret
rorb
cld
pop
push
loop
push
xchg
test
jb
inc
jl
mov
in
inc
pop
pop
movsl
cli
mov
std
fmul
mov
mov
cmp
mov
pop
cmc
push
push
lods
sub
ret
out
enter
mov
insb
faddl
movsb
add
mov
push
and
pusha
pop
push
addb
inc
ljmp
popa
or
jle
bound
popf
cmpsl
and
xor
cmp
cmp
cmpsl
xchg
jp
jns
lds
out
mov
inc
inc
sbb
rorl
mov
mov
int3
sbb
loopne
xchg
loop
fmulp
arpl
call
lcall
je
and
cmp
xor
test
out
add
call
out
xor
mov
popa
lcall
jmp
pop
push
lds
dec
dec
stos
loopne
mov
cmp
sub
pop
fsub
test
add
pop
cmpsl
xchg
xchg
jbe
pop
xchg
lods
std
pusha
jecxz
in
pop
dec
sub
out
scas
mov
sub
sub
sub
add
or
rcrb
push
fucom
adc
lds
nop
adc
addr16
shlb
lods
adc
push
test
sub
lods
fldt
add
xor
cld
cmp
mov
arpl
add
xchg
cmp
push
outsl
fsts
pop
inc
clc
push
jns
mov
xchg
add
jecxz,pn
dec
sbb
mov
or
mov
cwtl
clc
and
jmp
lcall
xor
mov
jno
cmp
inc
bound
sbb
nop
or
test
in
imul
xchg
adc
test
inc
adcb
faddl
testb
in
iret
adc
pop
xchg
xchg
inc
in
fmul
addr16
pushw
jge
movsb
sarb
mov
dec
mov
cld
out
sbb
lea
lods
jbe
sbbl
adc
sub
sub
xor
xor
arpl
jns
subb
adc
mov
not
pop
mov
inc
sub
test
mul
dec
arpl
mov
adc
inc
xor
roll
sbb
cld
pushf
test
movsl
add
cvtpi2ps
test
xor
js
inc
icebp
and
adc
movsb
push
jl
lret
jp
ror
fimull
and
lods
mov
data16
fninit
or
loop
jp
jg
xchg
add
mov
lret
mov
pop
ja
lahf
imul
sbb
xchg
xchg
mov
in
filds
jae
lahf
add
es
pop
push
sub
or
xchg
lock
xor
fldt
xor
cmp
std
cwtl
popa
dec
shlb
mov
dec
jae
lods
addb
add
cmp
scas
cmc
xchg
and
lret
mov
int3
sahf
das
sbb
scas
jp
shll
xlat
pop
jne
scas
cmp
add
imul
jno
push
jle
xor
je
jecxz
in
test
and
es
cmp
add
arpl
arpl
mov
adc
inc
je
shlb
add
cld
sti
aad
pop
ret
scas
jecxz
aam
lret
adc
in
fcoms
mov
add
push
leave
push
mov
pop
test
or
mov
movsl
in
inc
pop
add
sbb
mov
ljmp
lods
subl
in
daa
mov
mov
add
dec
lea
outsb
sti
pop
scas
xchg
insb
fstps
aas
and
pop
jbe
adc
movsb
insb
lret
scas
add
sub
xchg
repz
add
dec
and
xor
or
mov
fwait
lret
in
dec
cli
mov
pop
dec
mov
push
sub
cli
std
fucomi
inc
or
mov
daa
add
push
and
and
pop
cmp
xor
test
xor
xchg
jns
in
sti
cltd
push
xchg
and
sbbb
and
dec
test
xchg
loop
or
stc
mov
cmp
pop
incl
imul
mov
mov
inc
mov
add
sahf
stos
fidivrs
pusha
aad
jb
in
pop
fstps
jnp
ljmp
pop
test
mov
push
mov
icebp
and
push
imul
adc
lods
iret
xchg
stos
jne
popl
inc
clc
or
mov
or
push
movsl
es
push
int
xchg
jnp
cmp
call
xor
add
insb
imul
xorb
call
pop
cmp
in
inc
mov
iret
dec
lock
mov
lds
mov
hlt
bsf
xor
arpl
in
xorl
push
outsb
shll
daa
test
mov
ficoms
into
jl
adc
addr16
push
cmp
test
in
cltd
pop
imul
dec
push
push
and
mov
push
push
pop
shl
jecxz
dec
sub
or
repnz
mov
mov
push
addr16
inc
test
rcrl
cmp
mov
cltd
push
dec
jb
push
xor
push
xor
iret
xchg
adc
fildl
sti
add
rclb
jl
mov
mov
fidivrs
iret
push
xlat
jp
in
xchg
insb
hlt
add
addl
shlb
addl
jno
jns
xorl
jp
shll
mov
les
movsb
nop
inc
sbb
dec
scas
das
leave
push
or
adc
out
jbe
fildll
enter
lock
xchg
push
repz
pushf
repnz
arpl
pop
leave
mov
mov
sbb
stos
shlb
pop
fimull
xor
adc
js
jge
jns
inc
aam
sti
pop
push
or
xchg
stc
cmp
fidivrs
not
and
nop
push
adc
orb
daa
inc
add
rorb
out
mov
std
popf
rcr
imul
jle
xor
or
adc
ret
lret
ds
jge
pop
sub
arpl
mov
jp
das
pop
sbb
adcl
and
cmpsl
pushf
pop
outsl
pop
xchg
add
jns
fimull
adc
outsb
pop
daa
add
adc
test
aad
cs
mov
dec
push
cmc
daa
fs
jae
clc
sbb
jae
push
push
xchg
mov
pop
in
testb
push
repnz
sbb
and
xchg
push
pop
fimuls
clc
xor
mov
cmp
xchg
cwtl
out
imul
or
push
xchg
pop
xchg
add
mov
in
lahf
repnz
movsl
stc
sahf
stc
mov
add
pushf
pop
divl
inc
jbe
adc
addr16
xor
addb
rsqrtps
mov
or
sbb
flds
in
mov
out
lea
or
mov
xchg
add
shlb
stc
add
test
test
jl
lret
adc
loop
adc
add
push
mov
sub
and
and
inc
aad
mov
scas
daa
fmul
loop
cmp
ret
gs
dec
leave
rorl
adc
imul
enter
mov
stc
shrl
cmp
ss
fisubrl
aam
push
cmp
xchg
mov
pop
xor
jp
mov
fs
xchg
out
imul
xor
std
je
jno
fisttpll
push
mov
scas
cwtl
sahf
ret
jb
movsl
mov
dec
add
stos
in
sub
pop
cltd
scas
sti
mov
jecxz
fs
sub
mulb
sbb
mov
xchg
movsl
mov
cmc
icebp
subb
or
je
xchg
adc
dec
cltd
call
push
jmp
fstpt
push
push
fisttpl
mov
fisttpll
fnstenv
and
push
jno
rolb
leave
in
insl
shl
pop
adc
pop
mov
icebp
int3
jo
dec
jne
pusha
sti
cmpsb
notb
or
daa
out
mov
lret
add
hlt
jno
xor
loopne
xchg
mov
leave
mov
insl
ret
inc
pop
push
lret
adc
jp
pop
idivl
xor
lret
incb
and
pusha
leave
push
and
sub
cs
call
ss
mov
lods
lock
inc
fldcw
fisubrs
sub
in
aad
mov
cmp
rcrb
push
push
mov
filds
push
stc
sbb
and
cwtl
xchg
xlat
xor
xor
mov
call
call
jl
mov
repz
lods
cmp
dec
jbe
fisttps
decl
insl
aam
adc
pop
xor
dec
stos
mov
mov
mov
dec
push
or
pushf
lahf
mov
outsb
mov
xorb
pop
cli
mov
cmp
out
popf
je
dec
call
or
fiaddl
xor
repz
and
mov
cmpsb
sbb
push
fimuls
mull
mov
test
je
add
or
mov
add
hlt
ficoml
stc
andl
and
sbb
fcoml
xchg
out
pusha
in
setbe
bswap
mov
int3
cltd
sbb
pop
mov
sub
insb
inc
and
mov
inc
test
xor
fsubrs
fsubl
jmp
dec
nop
adc
fs
cmp
push
mov
out
cmp
add
mov
mov
sub
jae
xor
hlt
and
push
shll
or
cmp
pop
lret
pop
fidivrs
sahf
xchg
fmuls
iret
in
mov
imul
ja
jo
dec
clc
je
sbb
sub
das
cli
loope
in
or
adc
adc
pop
adc
stos
aam
mov
cmpl
aas
add
push
inc
int
or
cmp
lret
pushf
mov
pop
mov
push
xchg
imul
sub
inc
cmc
xor
call
and
mov
mov
cs
jle
xchg
das
push
cmpsb
inc
adcl
cmpsb
faddp
mov
test
inc
rclb
push
mov
mov
dec
loop
cmpsb
add
and
mov
jg
or
dec
pop
push
or
test
jp
push
scas
daa
scas
mov
push
ss
sbb
inc
dec
mov
call
push
fxch
xchg
xchg
rcrl
cmp
sti
nop
imul
cmp
clc
loope
push
fwait
cmp
inc
inc
clc
sbb
into
mov
lods
pop
out
and
mov
cmp
push
pop
push
and
daa
inc
pop
sbb
push
aam
or
mov
or
sbb
cltd
outsl
push
mov
cmp
mov
out
push
mov
mov
aad
mov
decl
xor
fs
insl
cmp
and
inc
jle
jb
xchg
xchg
loop
mov
out
push
and
scas
lods
mov
dec
mov
cmp
xchg
pop
cltd
dec
mov
inc
mov
clc
adcb
das
fisttps
mov
xchg
mov
into
push
pop
sbb
mov
je
std
mov
fists
or
cld
mov
mov
test
sub
push
jae
cmp
or
sbb
sub
push
outsb
stos
enter
repz
lcall
or
ljmp
mov
adc
or
ja
shrl
dec
mov
testb
inc
das
incb
jno
mov
ds
mov
andb
out
lea
add
jb
adc
add
loop
out
push
mov
cld
insb
aaa
add
xor
ja
out
xchg
xlat
in
dec
aaa
aad
xor
mov
or
push
addl
jo
mov
cwtl
outsl
pop
dec
mov
lahf
push
and
insb
and
xchg
add
insl
cltd
fwait
cmp
xlat
cwtl
jge
cs
push
cwtl
cmpsl
bound
mov
les
gs
pop
or
adc
inc
fwait
das
inc
dec
sub
lret
frstor
xor
lret
sub
jbe
les
std
in
jns
arpl
aam
sbb
adc
xor
sarb
pop
sbb
pop
test
xor
ss
fisttps
jmp
and
dec
dec
xor
in
lods
test
mov
mov
push
adc
mov
fbld
cmc
orb
fs
adc
ret
mov
cmpsl
test
inc
adc
clc
jne
cmc
mov
push
cvttps2pi
mov
ljmp
cmp
shrl
dec
sub
sbb
into
and
mov
imul
sahf
lcall
scas
inc
fisubrs
inc
es
clc
pop
xor
in
pop
mov
push
or
lods
jp
inc
outsl
aam
cld
cmp
mov
cmc
daa
aad
sub
xor
dec
pop
sub
and
adc
cmpsl
and
cld
mov
or
icebp
inc
adc
clc
mov
or
or
inc
or
mov
pop
mov
jecxz
mov
or
test
sub
inc
movsb
dec
mov
pop
lret
ja
sbb
popa
loopne
mov
clc
outsl
inc
inc
sub
cwtl
inc
into
adc
mov
clc
inc
pop
push
ret
xchg
popf
adc
mov
cmp
cmpsb
and
xor
push
movsb
cltd
in
out
lcall
push
out
pop
pop
test
ffreep
pop
or
aam
sbb
out
or
gs
shll
leave
pop
in
add
mov
cmpsb
mov
adc
aad
or
pop
xor
out
mov
out
dec
out
dec
mov
cmpl
or
mov
jae
scas
or
lret
fisubrs
aaa
push
xchg
adc
and
mov
add
cmpsl
adc
in
mov
inc
test
rorl
cmp
add
mov
sub
iret
fsub
fdivrs
inc
lock
pusha
or
fstpt
dec
push
or
mov
stc
mulb
call
jb
and
scas
adc
sbb
arpl
dec
sub
sbb
inc
lods
lods
js
fmulp
sbb
in
or
mov
or
dec
dec
sub
int3
aaa
roll
imulb
mov
jmp
mov
fxch
jmp
mov
dec
mov
xchg
adc
and
inc
xchg
pusha
dec
jge
lret
mov
and
gs
lahf
ret
inc
ds
in
xchg
sbb
pop
cwtl
repnz
mov
lret
lret
mov
les
in
xchg
fadd
or
pushf
call
clc
jge
push
in
or
stos
outsb
rorb
popa
or
test
sub
mov
std
inc
outsb
andl
xor
dec
int3
cwtl
rol
fs
pop
test
push
movsb
and
mov
jns
cmc
inc
aaa
xor
in
aas
jg
jp
cmp
cmp
std
mov
cld
mov
add
sub
shrl
push
cltd
fs
ljmp
int
lods
inc
inc
mov
adc
adc
mov
mov
mov
mov
jnp
xchg
test
fisttpll
push
movsl
sbb
sub
shlb
xor
test
pop
mov
in
push
fsub
sub
cmp
stc
dec
jne
sub
sub
pop
test
xor
dec
movsl
loope
cmpsl
lahf
sbb
fs
call
mov
data16
mov
fwait
cld
sub
sbb
add
push
or
jmp
inc
out
rolb
and
inc
mov
dec
shlb
popl
addl
cwtl
xchg
andl
pop
test
pop
jb
cmp
jp
cld
insl
adc
push
or
fsubrs
pop
loopne
cwtl
ljmp
rol
jp
sti
shlb
adc
lret
fistpll
inc
aam
fs
stos
aam
add
scas
push
mov
jno
jnp
sarb
jle
xor
fcomps
add
push
or
xchg
bound
lahf
pop
mov
outsl
test
xchg
insl
push
out
mov
push
adc
enter
adc
mov
push
out
mov
cmp
xchg
sbbb
sarb
lock
jl
hlt
rorb
aad
test
cmpsl
in
popa
lret
icebp
push
cld
scas
notb
mov
mov
mov
sbb
and
add
jecxz
icebp
js
ret
pop
pop
and
aas
imul
aam
add
adcb
jge
sar
in
testb
xchg
and
sbb
mov
adc
inc
sub
jne
das
adc
mov
inc
call
push
aas
cmp
sub
add
push
and
js
pop
dec
or
dec
idiv
cmp
or
adc
jecxz
rol
in
push
jae
xor
data16
pop
sub
negb
ljmp
xchg
sub
test
std
inc
ret
inc
setge
push
mov
xchg
add
roll
mov
sub
rcrl
xchg
pop
cwtl
sbb
inc
insl
mov
dec
xor
jne
jnp
mov
in
and
cmp
fdivrl
pop
fld
in
int
int3
clc
inc
push
pusha
cwtl
adc
sbb
pop
and
mov
mov
insl
or
mov
or
pop
or
iret
test
sbb
pop
xor
enter
loopne
icebp
dec
sbb
xor
out
repz
or
pop
mov
cltd
jns
add
cs
das
fnstcw
cmp
or
jmp
int
inc
lea
mov
xor
or
cmpsl
sbb
inc
jae
xchg
call
in
cld
cmc
mov
xor
mov
inc
jl
adc
js
pop
mov
and
mov
in
xchg
in
jo
mov
in
cmp
mov
cmp
cmpsb
divb
rcll
and
addr16
rorl
mov
lods
clc
test
jne
jnp
in
addr16
imul
mov
cmpsl
jl
sahf
push
mov
std
adc
adc
testb
adc
jg
or
dec
add
add
cmpl
inc
push
lahf
mov
lcall
xor
scas
lds
adc
pop
fildl
sub
jns
ja
or
fwait
fs
inc
lret
inc
loop
scas
mov
in
mov
ficoml
cmp
sub
out
stos
push
les
cmpsb
in
lret
and
scas
cltd
xchg
mov
push
dec
sub
sbb
divl
scas
in
jne
test
xor
sahf
das
inc
push
xchg
add
sub
push
mov
mov
jmp
and
cld
imulb
push
pop
test
fs
sar
das
jp
test
mov
aam
fisubrl
adc
cltd
pop
inc
or
jp
jle
test
adc
inc
xchg
aad
insb
cmp
xchg
sbb
or
xchg
std
inc
and
push
movsl
xchg
rcrl
inc
movsl
enter
xor
aad
sub
nop
jl
ds
xor
sti
xor
jo
push
mov
mov
xor
jmp
mov
sbb
in
dec
lret
dec
and
jno
nop
push
loope
dec
dec
mov
xor
pop
es
div
in
push
pop
fs
hlt
mov
scas
leave
or
push
inc
jmp
or
xchg
loop
mov
xchg
clc
adc
jecxz
es
dec
loope
cmp
es
push
pop
inc
adc
push
mulb
sbb
mov
jl
cmp
pop
daa
xor
or
stos
out
jo
icebp
pop
repnz
sbb
cmp
cwtl
push
inc
jp
mov
dec
push
fsts
mov
sub
aaa
jg
jge
mov
mov
in
sub
xchg
lcall
pop
insb
cmp
outsl
adc
push
lcall
push
mov
push
mov
stc
lds
lret
push
dec
mov
jl
pop
das
std
cmc
mov
movl
pusha
cmp
and
in
add
push
xor
jne
cmpsb
pop
sub
enter
cmpsl
mov
jne
push
call
push
popa
cli
pop
nop
daa
mov
mov
fsubs
ljmp
bnd
jle
sbb
fdivp
pushf
push
popa
imul
add
out
imul
mov
inc
fnclex
sub
rorl
scas
inc
int
scas
pusha
sub
dec
rolb
gs
xchg
jp
lods
test
sbb
adcl
lods
inc
loop
xchg
lea
in
sbb
inc
add
jne
pop
xchg
mov
scas
jne
mov
jb
jmp
jne
sub
sbbb
cmp
into
out
lret
xchg
mov
xchg
fs
xor
out
adc
movsl
cli
and
push
mov
mov
ss
cwtl
adcb
pop
adc
xchg
lret
add
cmp
lret
mov
or
arpl
or
je
mov
and
clc
sbb
cmp
lahf
xchg
mov
jnp
mov
cltd
cltd
aas
pop
test
and
mov
xchg
test
ficomps
fbstp
popa
lock
xchg
mov
mov
movsl
or
test
ret
in
xor
cmp
popf
cmp
mov
shrb
insb
xchg
mov
movsb
dec
sbb
inc
stos
mov
push
add
dec
sub
cmpl
push
mov
data16
sub
fsubrp
je
jbe
lret
fidivl
pop
imul
mov
mov
jbe
mov
sarl
faddl
mov
mov
jnp
xchg
add
cmp
pop
xor
push
jl
lods
dec
stos
jb
jmp
xchg
push
jbe
cwtl
push
xor
mov
pop
jo
add
jns
push
sub
mov
dec
das
out
pop
push
out
fstpt
inc
or
rcll
push
test
mov
gs
adc
leave
and
movsl
out
aam
rol
xchg
subl
call
push
faddl
out
hlt
in
dec
push
pusha
int3
lds
pop
sbb
test
out
push
add
repz
dec
jb
cld
xchg
loope
sub
data16
sbb
push
dec
mov
or
enter
cmp
into
jne
rsm
cmp
push
fwait
and
fadd
sbbl
cmp
inc
out
ret
or
call
scas
cs
sub
cmp
int3
ret
sub
push
data16
or
add
dec
add
stos
nop
xor
cmp
jbe
pop
call
popa
sub
test
xchg
int3
jo
push
addl
dec
cmp
shl
cmc
add
fs
xchg
jno
cld
xor
inc
movsl
xchg
jmp
popl
pushf
imul
shrl
clc
add
pop
and
push
pop
mov
push
sub
adc
push
cmpsl
jae
xchg
sub
in
jp
clc
xchg
in
imul
leave
mov
sub
mov
pop
mov
add
mov
outsb
mov
jecxz
mov
xor
cmp
jmp
xchg
sbb
outsl
mov
add
fadds
mov
ja
pop
inc
adc
dec
push
repz
add
dec
jns
popf
out
dec
push
add
outsb
lea
or
in
bound
jge
sahf
inc
fwait
cmp
jbe
xchg
jno
rcll
in
aad
adcl
jnp
push
repnz
ficomps
loope
jbe
xchg
jbe
insl
imul
mov
repnz
pop
cwtl
mov
iret
pusha
or
fcompl
or
insl
mov
pop
add
adc
nop
das
cmp
inc
testb
ffree
mov
mov
jp
mov
popf
push
andb
pop
inc
xor
inc
pop
movsl
pop
jl
ss
in
push
push
fwait
pop
push
daa
lods
xlat
dec
mov
lret
push
xchg
push
xchg
lea
push
pusha
cmp
add
pop
mov
mov
arpl
dec
popf
jbe
loope
cmpsl
adcl
ficompl
in
aam
inc
dec
icebp
sbbl
rclb
dec
cmp
notb
mov
fs
out
mov
dec
fistpll
xor
pop
cmp
jno
mov
insl
push
aad
xor
cmp
mov
cmpb
loope
orl
dec
or
sub
mov
inc
and
jno
push
dec
sbb
push
bound
in
xor
fistpll
xor
lahf
neg
sbb
dec
mov
into
test
inc
adc
cmp
clc
mov
xor
loop
icebp
sarb
pop
gs
repz
iret
popa
cmpl
pop
mov
push
daa
sahf
xchg
daa
repnz
xchg
or
js
jp
cmpl
scas
push
ds
dec
test
js
push
repnz
ss
flds
mov
test
lret
fldcw
ficomps
adc
loop
jmp
rorb
add
lods
lret
mov
movl
push
sar
add
push
mov
cld
repnz
fnstsw
setbe
stc
or
lods
mov
push
mov
add
mov
jl
rcrl
aas
arpl
rclb
push
sub
cmp
cmc
inc
inc
bound
cmp
jecxz
fucompp
jge
sub
inc
jbe
cltd
pop
lea
xor
mov
pop
lahf
adc
stc
adc
jl
addr16
push
fsubl
jnp
xor
arpl
xchg
xor
mov
cmpsb
cltd
mov
cld
xor
cltd
sub
pop
push
in
mov
insb
mov
scas
loope
sahf
add
jg
push
sbb
add
sahf
dec
fsubrs
jl
sbb
dec
scas
test
or
push
push
adc
adc
arpl
lock
das
xorb
cmp
faddl
out
mov
cmovnp
loope
jo
xchg
mov
sbb
xor
dec
or
cmc
xor
mov
aam
fstpl
test
adc
sti
sub
cmpb
addl
loopne
mov
repz
xchg
imul
pusha
pop
sbb
cld
lock
fmuls
lret
mov
push
inc
fsts
sub
xor
pop
outsb
sub
aas
pop
or
sbb
xchg
ljmp
jb
stos
adc
sub
test
ret
inc
add
jg
add
jmp
and
xchg
dec
js
rcrb
shrl
or
push
jbe
jno
and
mov
inc
sbb
enter
sbb
pushw
xor
mov
cmpsl
mov
dec
and
std
adc
stc
lock
xor
std
sub
xor
shll
arpl
push
outsl
inc
cmp
push
jbe
int
pop
mov
fsubs
sbb
cli
jbe
data16
insl
pop
movsl
and
scas
add
sbb
lret
adc
nop
pusha
pop
loopne
sahf
ret
mov
mov
js
ds
cmp
lea
test
bound
inc
push
mov
cmpb
stos
mull
dec
sub
and
sahf
outsl
pop
aam
out
add
dec
dec
insl
orb
dec
int3
fisttpll
xor
pusha
pop
arpl
out
aam
jmp
xchg
mov
js
cmp
lret
adc
xor
test
addr16
add
fidivl
mov
mov
pusha
jne
mov
xor
push
popa
iret
jle
push
inc
add
jnp
shlb
inc
arpl
or
loope
inc
pop
in
jmp
lcall
pop
lret
or
fdivs
push
gs
stos
je
orb
jecxz
inc
rcll
fstps
ja
iret
lds
mov
movsb
popa
scas
jmp
jp
andb
mov
mov
rcrl
shl
gs
testl
loope
fst
pop
ss
stos
xchg
jp
adc
mov
scas
ret
arpl
jbe
jb
iret
insb
rcr
mov
push
lcall
clc
stos
cmp
xor
dec
mov
nop
and
sbb
adc
inc
aaa
sub
fcoms
adc
aaa
leave
cmp
pusha
mov
sub
dec
imul
cmc
cmc
in
into
xchg
jno
out
adc
or
adc
add
cs
rorl
cmpsl
jge
fistpll
into
or
adc
mov
adc
movsb
imul
mov
mov
loop
fldcw
jns
and
ret
or
shlb
std
mov
leave
pop
lahf
push
ret
jle
jo
mov
pop
int3
sbb
dec
into
sbb
push
sbb
add
dec
ret
stos
pop
mov
dec
xchg
push
lods
jmp
pop
jb
cmc
dec
adcl
push
loop
adc
add
add
cmp
leave
jmp
xchg
xor
mov
cmpl
lcall
xorb
push
lret
arpl
in
shrb
adc
mov
push
ret
push
daa
enter
push
and
push
xor
loopne
inc
dec
es
inc
dec
insl
scas
mov
fidivrl
rclb
incb
pop
lds
into
movsb
jnp
add
imul
mov
aas
add
add
test
add
loope
mov
movsb
and
aam
inc
sarb
gs
pop
shlb
clc
test
cltd
fwait
loopne
jl
inc
sbb
push
and
adc
movsl
push
sbb
mov
push
aad
pop
pop
cmp
movsl
adc
mov
fs
sub
xchg
lea
movsb
fidivl
inc
shrb
mov
mov
outsl
rorb
inc
bound
cs
dec
daa
adc
loope
leave
or
pop
pop
xchg
ja
addr16
dec
push
or
pushf
fstl
jge
jl
in
roll
frstor
mov
jbe
xor
ftst
sub
or
xor
ret
cmpsl
repnz
fwait
xchg
mov
cmpsl
sahf
loope
mov
hlt
lcall
lea
xor
js
std
test
scas
mov
xchg
imul
cmp
lret
stos
jo
outsl
mov
xchg
daa
xor
xchg
daa
push
arpl
int
stc
add
xor
jno
sub
bound
cwtl
jmp
mov
sub
lds
pop
movsb
arpl
cmp
mov
fistl
sbb
sbb
rorb
aam
out
cmp
pop
loop
repz
xchg
jge
outsb
mov
push
pop
xor
sti
pop
stc
bound
je
pop
mov
xor
inc
movsb
push
ret
fsubrs
add
ds
adcb
fwait
pop
push
outsl
cwtl
icebp
scas
out
sub
mov
negl
mov
cmc
jmp
lods
xchg
lods
nop
sbb
add
adc
mov
sbb
insl
push
mov
sbb
into
inc
dec
cli
aad
je
mov
adc
adc
in
call
aaa
lcallw
mov
and
add
add
in
xor
in
mov
mov
and
cmp
shl
or
hlt
addr16
sbb
adc
ret
fists
jl
jmp
mov
into
fdivrl
fildl
flds
jge
arpl
gs
inc
mov
and
mov
icebp
mov
push
mov
inc
push
mov
sub
lea
adc
popa
fptan
push
stos
sbb
or
sub
iret
cmp
in
das
pop
xor
xchg
popf
mov
xchg
add
addr16
cltd
outsl
fwait
pop
dec
loop
js
arpl
sbb
aas
cltd
loop
mul
mov
cmp
inc
dec
sarl
xchg
xchg
pop
out
push
icebp
in
test
sbb
sbb
lds
clc
lahf
inc
scas
cwtl
arpl
es
data16
sbb
sub
jle
push
xor
stos
dec
das
mov
cmpsb
cmp
push
xchg
inc
sbbb
adc
dec
lcall
cmp
inc
pushf
jae
daa
jg
fiadds
test
aaa
fs
out
or
xlat
lret
xor
cmc
add
in
pusha
cmpsb
shl
dec
pop
pop
adc
mov
push
jo
add
xchg
pop
adc
ret
ds
ja,pt
dec
mov
ret
mov
popa
iret
shrl
and
add
nop
leave
lock
mov
dec
pusha
mov
fs
sbb
pop
popf
sbb
push
leave
lahf
in
push
fs
mov
push
ss
pop
nop
sbb
mov
mov
lahf
test
jb
pushf
pushw
nop
out
lahf
mov
inc
jb
dec
sahf
imul
dec
adcb
sarb
testb
fistpll
jne
xchg
adc
inc
push
xlat
std
jge
and
ja
in
enter
lock
xor
jno
imulb
cwtl
inc
icebp
mov
test
out
data16
stc
jp
ljmp
insb
inc
mov
cmp
ss
loope
lea
aas
lods
xchg
mov
clc
inc
loope
dec
ret
cs
loopne
mov
cmp
xlat
hlt
or
inc
in
mov
adc
sbb
outsl
push
fstpl
lcall
and
test
and
rcrb
testl
shlb
inc
hlt
rcrb
loop
or
sub
mov
rolb
daa
das
movsl
pop
pusha
movsl
fcomps
mov
xchg
out
aaa
adc
mov
jg
std
dec
push
aaa
inc
inc
lods
xchg
dec
ret
sbb
sub
je
or
pop
adc
sbb
clc
push
sub
mov
mov
add
insl
sbb
in
cmp
or
in
stos
inc
out
fstps
sub
mov
orl
inc
xor
and
iret
jnp
inc
xor
mov
cmp
dec
psubb
das
andb
mov
ret
daa
xor
out
mov
pop
pop
inc
xchg
pop
xor
notl
lods
daa
jmp
outsb
sub
lods
pop
push
jae
mov
andb
nop
adc
cwtl
fisubrs
cltd
cmc
incb
mov
mov
mov
out
inc
insb
ret
add
jmp
pop
es
std
push
cmp
addr16
movsb
call
dec
pop
fs
jecxz
pop
jbe
roll
cmpsb
pushf
push
xor
inc
mov
movl
adc
sbb
ffreep
gs
fsts
fstpt
outsb
sub
xchg
inc
cld
push
mov
das
shrl
and
dec
daa
cmc
jbe
andb
popf
xor
loop
inc
ret
test
shl
jg
sub
push
dec
rclb
jnp
pop
pop
jne
xor
pop
mov
fwait
mov
in
pusha
filds
mov
cmp
jae
std
fnstenv
shl
pop
dec
push
test
mov
pushl
fisttps
mov
loopne
lahf
sbb
ror
js
or
ljmp
mov
rorb
mov
and
jg
roll
nop
int
push
push
xchg
mov
loope
ror
insb
push
jns
es
mov
and
push
mov
in
xlat
loopne
xchg
out
jle
add
pop
in
leave
icebp
or
jmp
mov
inc
add
push
rcl
lret
sub
cmpl
lea
in
fwait
lods
and
loop
into
mov
rorb
pop
jg
fs
sub
pop
or
cmp
lods
xchg
insb
hlt
shr
push
mov
xor
mov
mov
cmpsl
inc
aad
xor
insl
stos
les
arpl
pop
jl
es
jns
enter
mov
outsl
neg
enter
movl
cmp
ja
cmp
jae
in
add
lea
sbb
faddl
jb
adc
jnp
add
xor
cmc
inc
mov
ret
cli
lret
cmp
xor
jb
cmp
xor
pop
fdiv
push
out
call
inc
xorl
clc
mov
pop
push
jno
jns
cmc
stc
inc
or
pop
out
pop
cmpsl
sbb
movsl
fstps
mov
repnz
in
jge
popl
and
or
andl
fs
stos
popa
and
sbb
push
ja
adc
aaa
inc
mov
mov
pop
or
ja
or
adc
dec
pop
repnz
xor
inc
mov
jb
xchg
out
mov
push
fdivl
iret
adc
dec
xchg
lods
push
lret
push
mull
inc
cld
adc
je
jg
adc
in
test
mov
pusha
and
xchg
cmp
mov
loope
jmp
stos
test
jbe
cs
fildl
inc
mov
jne
xchg
loopne
lods
hlt
stos
sar
repz
fildll
mov
jle
bound
dec
sub
xchg
adc
out
call
inc
cmpsl
fstpt
in
push
xchg
in
out
adc
gs
jecxz
lret
jge
aam
xchg
mov
or
mov
cmpb
es
mov
push
inc
inc
dec
faddl
inc
call
jbe
ds
sbb
out
jg
call
imul
add
xor
imul
inc
ds
pop
lods
cwtl
mov
lea
int3
sbb
ret
or
sbb
mov
jg
mov
aas
mov
out
mov
push
dec
scas
sbb
dec
jp
sub
mov
data16
bound
iret
movsl
inc
cltd
adc
xchg
daa
pop
cwtl
jl
in
neg
push
int
and
jmp
push
outsl
xor
inc
into
xchg
push
pop
iret
inc
and
jp
gs
sbb
adc
xchg
cmp
pop
nop
inc
push
fldenv
add
sbb
daa
iret
imulb
xchg
xchg
pusha
rdmsr
push
icebp
push
mov
add
add
ss
cwtl
jle
or
call
cmpsl
cmp
clc
popf
not
shlb
sti
in
inc
iret
lods
je
sti
pop
mov
pop
movsl
leave
pop
adc
jb
mov
jne
mov
adc
addr16
or
mov
pop
ljmp
mov
je
inc
mov
xor
mov
nop
mov
adc
sub
stc
daa
mov
lods
mov
ljmp
iret
inc
inc
loopne
sbb
loopne
sti
and
jb
mov
xchg
loope
enter
pop
dec
fs
sbb
pop
les
movsb
aas
std
ret
or
lea
sbb
pop
mov
lods
jp
mov
mov
adc
pop
push
arpl
push
insb
test
cmp
xchg
pop
aaa
test
je
pop
cmp
fdivp
test
and
fwait
push
jmp
jns
je
fisubs
xchg
pop
push
shrb
jae
xchg
popf
aad
aas
and
pop
test
lcall
add
sti
pop
push
inc
add
sbb
imul
or
xor
int
dec
stc
fdivrp
push
mov
pop
adc
sub
xchg
in
sarl
int3
out
cli
xor
out
xor
int
lea
push
mov
mulps
pop
or
sub
aam
push
lea
xchg
and
xor
mov
push
dec
sbb
inc
dec
xchg
sub
loop
pop
loop
and
imul
lcall
xchg
fucomp
leave
mov
inc
cmp
adc
add
jno
jecxz
enter
mov
nop
insb
rolb
jg
enter
in
dec
pop
jne
int
inc
mov
sbb
ficoml
pop
andb
pop
std
lods
xchg
les
bound
cmc
fdivl
fwait
mov
adc
adc
jb
cmc
pusha
push
repz
mov
iret
ret
cmp
mov
xor
sbb
jle
mov
mov
in
cmpl
xchg
jl
lea
sub
or
inc
cmc
ficomps
enter
aaa
sub
sti
imul
sahf
lret
or
pop
je
mov
loope
mov
inc
or
mov
push
loope
jg
push
sub
enter
fisubs
sub
push
push
ds
mov
iret
sti
mov
mov
inc
mov
mov
sub
add
clc
in
inc
or
in
jecxz
je
jmp
rcll
sbb
sbb
add
and
jp
stos
incb
pushf
sbb
fldt
movsb
ss
scas
lock
ret
roll
mov
add
mov
rcll
repnz
popf
sbb
dec
or
outsb
jo
pop
xor
cmpb
inc
outsb
loope
rcrb
test
and
pop
fstpt
fwait
in
mov
cmp
sbb
insl
and
bsf
std
mov
sbb
test
add
xchg
mov
nop
inc
cld
xchg
pop
subb
outsl
push
dec
jmp
fiadds
sub
xor
xor
in
add
imul
pop
sub
sub
fmull
adc
or
inc
cmp
mov
pop
mov
aad
stc
rcrb
rclb
lds
xor
outsl
loope
adc
xchg
add
mov
outsl
inc
out
push
fdivp
sub
push
xlat
iret
mov
cmp
or
int
addl
fcompl
bound
xor
rorl
mov
lea
sbb
mov
dec
mov
jne
fs
adc
sub
imul
xchg
jno
cltd
jae
rcrl
push
mov
sahf
ds
fs
cmp
bswap
add
bound
mov
xlat
add
std
andb
rcll
adc
std
pop
filds
jo
xor
adc
int
ret
pop
xor
hlt
ljmp
mov
adc
vpcmov
scas
push
cmp
mov
leave
aas
scas
pop
in
pop
pop
mov
pop
push
fmuls
lret
and
or
xchg
xor
jmp
insl
stos
xor
les
push
sub
mov
aad
xchg
xorb
mov
jnp
aam
lahf
push
cs
xor
jg
js
mov
in
sbbb
ss
into
cmp
cld
lds
push
clc
inc
arpl
pop
aas
aam
pusha
mov
jecxz
and
sub
add
cmpsb
xchg
fstpt
mov
mov
dec
test
mov
iret
std
mov
rolb
test
fnstcw
jb
daa
cmp
cmp
inc
lret
imul
xchg
dec
imul
gs
sub
stos
daa
jns
lcall
call
mov
out
push
dec
das
jnp
cmp
hlt
into
mov
mov
ficoms
lods
cmp
push
enter
push
mov
dec
xor
aaa
les
notb
ja
ficomps
adc
adc
xor
sbb
lret
jno
push
enter
sub
add
repnz
xchg
ljmp
lahf
cwtl
repnz
imul
jg
out
clc
cmpsl
push
lahf
js
and
bound
pop
mov
add
sbb
shl
pop
xor
push
push
mov
or
stc
pop
or
add
lods
jecxz
inc
inc
lods
jne
sahf
sub
das
sahf
dec
jb
sub
xchg
inc
mov
xchg
outsl
mov
imul
mov
mov
and
dec
or
cltd
call
adc
xchg
mov
pop
loopne
ret
inc
push
icebp
cmpsb
cli
stc
mov
jno
sub
es
push
add
jmp
mov
lods
ss
out
sub
sub
jno
push
add
jl
shlb
roll
cld
xchg
sub
add
dec
in
add
cmpsl
mov
add
mov
and
leave
adc
ja
pusha
xchg
xchg
outsl
push
js
and
pop
sub
dec
push
pop
adcb
arpl
adc
ret
mov
out
imul
test
and
dec
shlb
in
cmp
fdivrl
lret
out
fildll
andb
call
push
pushf
sub
or
out
insl
jl
dec
lds
jle
and
test
dec
call
js
insb
fisttpll
mov
jno
imul
dec
and
aad
es
push
adc
gs
inc
xchg
mov
stos
push
sbb
mov
test
cmpsl
and
sub
mov
push
mov
and
fwait
and
push
adc
and
jle
jl
and
push
pop
cli
loopne
add
shr
adcl
cmpsl
movsb
out
aad
out
movsb
insb
pop
stc
sub
pop
pop
sub
sub
sbb
ret
or
mov
icebp
data16
mov
fisubs
push
mov
xchg
xchg
gs
cmp
je
leave
add
push
inc
and
arpl
fnsave
cmc
dec
mov
lock
shl
repnz
fwait
inc
dec
pop
ljmp
pusha
pop
cwtl
rolb
test
sahf
mov
mov
mov
movsb
insl
jge
sbb
adc
daa
adcb
inc
xor
sub
icebp
xchg
std
aam
leave
push
sti
in
sahf
ja
aas
mov
js
fmull
pop
sahf
add
pop
push
push
loop
or
cmp
and
inc
aaa
sub
pusha
xchg
jbe
daa
push
cli
adc
sub
das
loope
xor
sahf
addr16
cli
dec
mov
add
adc
roll
sub
in
cmp
mov
push
pop
mov
cmp
add
in
adc
dec
push
pop
in
fwait
ret
dec
mov
sbb
and
inc
je
das
stc
jl
in
pusha
mov
cmpsl
cs
testb
xchg
xchg
movsl
push
scas
xor
loopne
and
jmp
fsub
jg
or
iret
cmpsl
ficompl
sub
dec
pop
ret
dec
mov
sahf
into
ss
cmp
outsl
push
aaa
xor
test
jnp
add
xlat
inc
inc
scas
inc
adc
test
jae
mov
in
iret
dec
leave
xor
push
test
xchg
pop
xchg
pop
inc
incb
push
ds
clc
aas
movsb
shrl
add
push
fldl
jmp
sbb
mov
push
and
lds
jg
lods
das
xlat
mov
jnp
add
dec
cmp
dec
stc
dec
adc
xchg
andb
cmp
jecxz
cltd
out
mov
bound
imul
sub
xor
movsb
adc
out
repnz
adc
test
mov
flds
lret
lea
clc
sbb
enter
mov
mov
ror
aas
fnsave
test
adcl
push
or
leave
mov
inc
es
dec
inc
mov
mov
push
loop
or
add
fiadds
nop
outsb
xchg
xor
sub
gs
pop
ret
sahf
jno
push
push
jno
mov
cmpsl
mov
xor
xor
inc
cmc
nop
dec
jge
mov
fimuls
aam
jl
push
mov
inc
scas
jmp
shrb
jns
jge
dec
in
mov
push
je
sahf
add
lcall
sti
movb
jno
stos
lcall
or
adc
mov
loopne
lret
pushf
dec
insl
dec
out
fbstp
and
das
pop
mov
std
push
into
outsb
sub
outsb
std
pop
or
xorl
dec
fwait
leave
ficoml
gs
mov
push
dec
aas
les
addb
lahf
adcl
lret
test
sbb
or
lret
lods
pop
mov
test
sar
push
sbb
mov
cmp
movl
push
inc
mov
pop
sahf
ss
aam
daa
pop
push
int
std
int
lcall
xor
mov
or
and
lcall
test
add
icebp
fisttpl
popl
push
in
pop
int3
mov
flds
mov
scas
and
and
insl
adc
pop
mov
mov
mov
add
movsl
add
fidivs
pop
sub
mov
into
add
cwtl
das
mov
into
aaa
or
fsubl
fmuls
rorl
fcoms
leave
loopne
in
or
outsb
aaa
pop
loop
pop
lock
lock
inc
aaa
in
push
or
imul
ds
mov
dec
inc
bound
pop
mov
push
repz
mov
add
leave
lock
je
js
insl
mov
ljmp
and
xchg
mov
and
aad
imulb
out
xchg
mov
mov
mov
sbb
inc
popf
and
jnp
jnp
sbb
clc
negl
in
jge
add
je
pop
lahf
mov
and
or
ret
int3
shl
into
dec
adc
and
push
mov
inc
leave
or
je
fldcw
repnz
aaa
insb
add
dec
sub
or
xchg
mov
mov
popa
sub
fucomp
jo
lods
mov
cmp
push
adc
lahf
jmp
mov
push
outsl
shrl
sti
das
outsl
lds
push
cmp
aas
add
fwait
sbb
psllq
fsubs
lea
repnz
push
adc
xor
inc
outsl
cmp
push
push
jmp
jmp
fisubl
daa
fwait
mov
lret
jae
and
xchg
out
cmc
jb
mov
jbe
inc
dec
mov
and
notb
cmp
lea
int3
rol
cmp
in
in
jle
or
pop
mov
jns
push
ljmp
shr
sub
sub
fnstenv
into
mov
sbb
sub
jnp
mov
out
mov
jecxz
inc
cmp
mov
ds
in
shlb
mov
mov
push
mov
int3
xor
mov
xor
fs
rclb
aaa
fistl
jl
mov
push
fiadds
lds
scas
push
mov
cmp
pop
sub
jmp
push
call
mov
in
notb
jl
sbb
jno
jge
xchg
outsb
insl
adc
sti
push
xchg
fwait
aaa
or
into
adc
pop
xchg
xchg
mov
outsb
xchg
arpl
test
call
or
cld
sub
arpl
ds
stos
mov
addr16
dec
in
in
mov
lcall
mov
mov
into
or
ficoms
mov
jns
mov
pop
loop
cltd
inc
push
sbb
enter
call
add
xor
pop
pop
mov
out
int
dec
sub
dec
cltd
push
jmp
pop
pop
fwait
movsb
dec
dec
pop
test
jg
sarb
sysret
pusha
mov
xor
mov
jg
aam
adc
pop
jae
fidivrs
mov
push
push
pop
dec
out
cmp
repz
pop
dec
adc
jae
cwtl
dec
lret
mov
add
mov
repz
xchg
adc
in
imul
mov
cmp
cltd
mov
or
push
lret
sarl
mov
mov
aad
sub
icebp
cmp
lret
cld
inc
mov
cmpsb
lods
mov
nop
mov
xchg
pop
pop
push
add
add
sub
mov
push
jecxz
pop
stos
adc
out
inc
inc
push
out
adc
in
jb
mov
adc
lahf
es
pop
sbb
leave
fistps
nop
bound
mov
aam
sbb
pushf
mov
inc
iret
mov
gs
fdivs
xchg
add
sub
pop
out
in
lds
mov
scas
outsb
jo
fimull
mov
sahf
mov
in
cmp
shlb
push
addb
jl,pt
cmp
jno
inc
fwait
neg
dec
test
test
push
fs
int
dec
icebp
subl
aad
imul
adc
push
test
push
aad
call
outsl
cmp
cmp
mov
fs
hlt
call
add
jp
jmp
adc
enter
or
rorl
je
fisttpll
sub
popf
fidivrl
dec
mov
mov
sub
inc
dec
inc
add
mov
pop
lahf
or
out
lods
mov
clc
out
loope
out
shll
js
iret
lea
movsb
mov
loop
or
adc
gs
sbb
sbbl
push
sahf
shr
into
cli
cmp
mov
lods
mov
mov
sbb
adc
mov
sbb
push
dec
clc
pop
or
es
mov
cs
movsb
dec
sub
dec
dec
lret
clc
fstl
dec
push
mov
cmpsb
lds
xchg
shl
or
aaa
nop
out
and
push
and
mov
int
rcll
imul
add
lock
cli
out
adc
pop
mov
sub
test
vpcmpgtd
gs
fildll
push
enter
push
and
push
mov
mov
popa
sbbl
pop
insb
in
mov
cmp
xor
sti
lret
push
sub
push
mov
jb
pop
int
sub
aam
inc
bound
mov
outsl
jae
jmp
daa
dec
cmc
scas
push
mov
jno
sub
xchg
pop
dec
jae
and
ljmp
pop
rclb
or
and
jmp
add
sub
repnz
and
enter
or
test
ret
mov
out
fwait
inc
mov
nop
xorl
lret
cmp
dec
shrb
push
pop
imul
data16
and
into
xor
es
mov
push
mov
subl
je
jne
jle
and
negb
insl
in
xor
and
cmp
shll
mov
loop
ss
scas
push
ds
cmp
inc
popa
inc
in
mov
testb
sub
mov
outsb
test
inc
jmp
lods
pop
icebp
cli
inc
lea
ficompl
lock
sub
push
add
scas
xchg
sahf
rolb
mov
ret
dec
imul
or
lcall
std
loopne
cs
jo
and
push
into
mov
cmp
mov
xor
pop
mov
repnz
cmp
or
pop
jo
mov
add
adc
pushf
mov
repnz
sub
xchg
mov
sub
in
cmp
out
or
jbe
adc
add
or
test
movsb
shlb
add
pop
mov
ja
test
out
pushf
cwtl
push
je
sub
pusha
xor
pop
icebp
mov
mov
pop
lock
insl
xor
fidivrl
in
mov
or
dec
mov
sub
push
cmovns
pop
or
jo
sub
xchg
rcll
mov
test
xor
cmp
push
stc
out
fcom
sahf
mov
insl
lods
outsb
adc
push
push
scas
cmpsl
or
sahf
mov
cmp
dec
xor
xchg
mov
and
sub
jb
adc
mov
lds
push
dec
add
mov
jo
daa
dec
daa
dec
sbb
insb
adc
test
fistl
pop
adc
fbstp
aam
and
scas
andl
mov
outsb
lds
decb
inc
xor
mov
push
neg
xchg
int3
pop
add
arpl
xor
mov
loop
sub
test
adc
push
inc
sbb
push
jge
sub
dec
mov
add
popa
pusha
lods
dec
test
fstl
push
daa
push
push
dec
imul
mov
test
jl
inc
jae
test
inc
add
xor
xlat
aaa
stos
enter
xchg
mov
daa
les
stc
mov
lret
xchg
xor
sbb
cmc
cltd
negb
out
das
push
shrb
push
addr16
push
or
rorb
cmpxchg
cltd
sarl
pop
aad
mov
lea
adc
flds
lods
shr
cwtl
cmp
xchg
in
sub
into
movsb
push
inc
ret
fs
aad
dec
movsl
jb
push
xchg
adc
std
jne
ds
fnstenv
jnp
xor
mov
cld
test
dec
push
push
lock
cmp
cmp
dec
push
jo
pushf
mov
push
jl
mov
push
outsb
jb
inc
in
mov
aam
jg
jb
repnz
inc
push
mov
jg
ret
mov
or
add
xor
jp
mov
jns
test
pop
mov
push
push
fwait
mov
xor
popf
pop
or
shlb
jge
pop
inc
or
dec
repnz
stc
loop
leave
loopne
cmp
push
bound
mov
push
cmp
scas
mov
mov
mov
jle
cmp
sbb
pop
sbb
sbb
adc
add
inc
pop
lea
out
int3
jno
dec
push
adc
pop
ljmp
fmul
jnp
dec
ja
and
cmp
mov
push
push
rorb
addl
scas
movsl
mov
pop
cmp
fcoml
mov
inc
xchg
jp
cmp
aad
stc
xchg
femms
cltd
loope
sub
cmp
test
xor
mov
out
sub
shll
dec
adc
mov
outsb
cmp
push
testl
xchg
sub
push
add
push
outsb
cltd
stc
or
mov
shrb
fwait
addl
xchg
ljmp
loope
sbb
sub
dec
xor
movsl
ret
mov
xor
or
cmpsb
loope
push
xchg
jp
inc
int3
xor
stos
pop
jmp
arpl
je
push
sub
add
mov
in
loop
sub
xor
pop
push
jae
popf
mov
aad
enter
sub
dec
push
popf
and
pushf
mov
addl
pop
stos
mov
sub
notb
sbb
add
adc
shr
pushf
add
ret
stos
insb
sbb
das
lret
movsl
mov
adc
orl
and
arpl
mov
and
pop
xchg
movsb
or
jp
pushf
enter
mov
ds
cmp
pop
push
inc
stc
or
aaa
pop
in
xor
pop
sub
or
ficompl
mov
roll
iret
xchg
pop
pushl
rorb
push
sbb
mov
sub
xlat
repz
push
cmp
adc
and
lret
dec
adc
mov
pop
mov
xchg
mov
add
test
aad
xor
stc
stos
inc
in
ja
movsl
mov
jns
jnp
mov
nop
shlb
xor
cmpsl
addr16
lret
daa
inc
lods
rcll
adc
push
mov
ficomps
out
dec
clc
push
aam
stos
mov
jnp
sub
call
loop
lds
rol
dec
xchg
out
fsubl
loopne
jp
aaa
adc
push
sbb
add
mov
and
test
popf
xchg
dec
dec
sbb
imul
popf
sub
shl
xor
pusha
sbb
jecxz
sub
pusha
rolb
fstl
mov
aaa
sti
jo
ret
pop
hlt
xlat
cmp
jae
add
push
mov
dec
and
lods
add
xchg
push
lea
adc
lea
xlat
sub
loop
shll
cmpsb
aam
xchg
add
pop
das
popf
mov
das
ja
mov
addr16
and
dec
testl
mov
push
lret
jbe
bound
outsl
cmp
or
xchg
fpatan
xchg
mov
es
mov
andb
adc
fdivr
sbb
shrb
inc
addb
add
mov
ds
in
jmp
andb
popf
aaa
and
pop
stos
add
dec
pop
dec
add
cltd
pop
mov
shrb
movsl
sbb
or
fisttpl
or
aad
xchg
push
fwait
or
or
xchg
cmp
fwait
pop
xchg
pushl
jg
out
popf
out
hlt
fcomps
out
cltd
jns
dec
xchg
ret
in
sbb
not
xchg
jns
movsl
lret
adcb
shrb
mov
push
push
imul
cmp
mov
loop
lds
stos
adc
enter
jge
ja
inc
mov
add
dec
inc
xor
sbb
ljmp
sub
pop
mov
push
add
das
lods
push
dec
subl
fidivrl
inc
inc
sbb
in
jmp
or
jmp
pop
dec
ss
ret
push
fbld
loope
rcrb
das
lret
mov
mov
loop
cmp
xchg
ror
inc
aas
xchg
hlt
jg
inc
or
es
in
stos
stos
or
imul
or
xchg
dec
jle
or
inc
and
push
pushf
lcall
out
adc
push
test
xchg
jbe
je
adc
repz
fs
hlt
inc
dec
movsl
loop
lods
pushf
dec
pop
xor
stos
cmp
les
cmp
cli
test
insb
pushf
sub
jp
sbb
mov
stos
add
lock
es
xchg
es
xor
pop
mov
adc
fdivs
xor
stc
movsl
enter
scas
arpl
dec
aas
aam
pop
imul
pop
inc
xor
fildl
out
xchg
push
mov
xchg
mov
test
ja
sub
lods
test
icebp
inc
sbb
inc
jnp
mov
xchg
movsl
cmp
mov
mov
cwtl
adcb
test
ja
lds
lods
insl
addr16
adc
lods
inc
scas
gs
jbe
or
xchg
lret
aaa
push
test
sub
dec
pop
aam
mov
pop
test
lods
lahf
pop
inc
out
mov
negb
test
cltd
push
cmpsl
sti
test
pop
repz
push
stos
int3
es
test
rcl
aas
orb
cwtl
mov
inc
jg
xchg
mov
xor
nop
lock
xchg
xchg
jg
push
add
pushf
cmp
jb
xor
push
mov
or
mov
or
cmpsl
inc
pop
mov
sbbl
jle
pop
push
cmp
push
xchg
daa
das
xor
jo
dec
xchg
jnp
mov
scas
enter
lret
pop
sbbb
cmc
cmc
push
loopne
cmp
dec
jecxz
mov
lods
jmp
stc
fldt
nop
stos
mov
stc
and
and
cmp
adc
or
dec
out
aas
test
lea
out
cmp
xchg
jmp
pop
test
push
add
add
push
in
dec
fldt
scas
testl
das
xor
iret
insb
sti
bnd
or
hlt
lahf
inc
adc
jl
push
sub
out
sbb
sub
inc
mov
ds
lea
mov
sahf
gs
dec
subb
jg
repnz
mov
popa
and
aad
sti
stos
push
mov
movsl
cli
xor
mov
aad
testb
lock
jne
aam
adc
je
cmp
pusha
pop
fdivrl
mov
cmc
jge
ret
adc
xchg
iret
mov
popa
nop
popf
mov
or
xor
leave
lret
push
xor
shl
popa
bound
mov
push
sahf
pop
mov
mov
rol
dec
in
xchg
xor
and
lret
test
mov
xor
aaa
cld
dec
out
out
cmpsb
pop
arpl
and
aas
mov
or
jecxz
lcall
and
js
fisubl
sbb
and
and
xchg
xchg
mov
test
jnp
mov
addr16
cmp
dec
jnp
sub
xor
and
dec
cmp
or
bound
dec
stc
int
and
cmpsl
mov
cli
jnp
call
jns
pop
or
dec
push
cmp
int
cmpsl
adc
pop
lahf
dec
dec
cmp
lret
lods
xor
sahf
mov
loopne
stos
popf
in
lock
insb
mov
arpl
int3
push
pop
insb
push
cmp
out
inc
cmpsl
inc
rcr
xchg
dec
test
xchg
sahf
mov
dec
pop
js
push
sarl
xor
and
and
out
ja
dec
out
dec
fs
mov
dec
addr16
fists
imul
push
ljmp
adc
push
xchg
insb
gs
movsb
fidivrs
mov
inc
cmp
mov
adc
loopne
and
sub
lods
jge
addr16
cmp
sub
inc
sarb
popa
pop
testb
add
popa
idiv
fld
hlt
jge
and
cmp
xchg
dec
fsubrs
ret
rolb
inc
fnstsw
mov
pusha
mov
out
js
mov
xorb
sub
dec
test
jg
mov
loope
adc
sbb
in
out
adc
xor
popf
inc
lret
nop
fs
mov
sub
jno
inc
pop
mov
and
xchg
add
sub
pushf
inc
adc
inc
int
or
mov
pop
or
aas
add
sbb
je
xorb
xchg
cmp
fcmovnu
sahf
or
jge
dec
push
or
mov
mov
mov
and
ss
jp
mov
out
movsb
in
pusha
dec
fidivrs
add
mov
pushf
icebp
movsl
scas
sbb
in
in
push
jbe
in
sbb
sub
inc
jge
push
add
ljmp
and
cwtl
jl
fistpll
fiaddl
stos
lret
ds
mov
dec
or
call
push
in
lods
jecxz
dec
andb
add
fistps
jg
xor
cmp
cld
es
dec
test
cmpsl
xchg
xor
and
jp
jmp
push
gs
arpl
cmp
fistl
push
fdivl
jecxz
or
icebp
jle
fs
dec
sub
jno
adc
jae
inc
int
loop
call
and
mov
xor
aam
sbb
or
mov
or
cli
dec
push
pusha
push
ja
jl
insb
push
cmpsl
inc
test
mov
dec
sub
sbb
jbe
jp
sub
stos
adc
iret
push
jle
sbb
xor
outsl
and
ja
jnp
lret
std
xchg
add
test
rcll
movsb
inc
add
or
adc
into
dec
mov
movsl
jbe
adc
scas
insl
and
aam
ret
mov
and
scas
cmp
sub
shll
call
push
and
fs
andb
pusha
das
stos
enter
sub
cmp
aam
pushf
test
arpl
test
cs
inc
xor
popf
sub
mov
adc
int3
out
insl
jle
xchg
push
lds
jmp
cs
mov
leave
mov
aad
shl
add
jg
aaa
dec
jg
adcl
fistps
cmp
push
pop
outsl
test
out
out
pushf
pushf
cmp
jne
into
sbb
xchg
mov
mov
popf
rcrb
mov
add
add
repnz
or
jne
push
pop
pop
jl
stc
dec
ja
in
mov
lcall
sub
mov
int3
adc
mulb
dec
mov
sahf
aad
mov
mov
shlb
xor
movb
inc
pop
movsl
xor
adc
mov
daa
cmc
xchg
xor
hlt
into
mov
sub
mov
mov
sbb
mov
in
icebp
aad
jbe
mov
add
sbb
dec
mov
in
data16
pop
daa
inc
ret
rorb
xor
pop
mov
mov
mov
mov
inc
mov
cs
jge
shlb
lcall
divb
dec
push
adc
fwait
shrb
xchg
in
add
pop
jno
mov
js
mov
adc
fistps
sbb
in
dec
ljmp
inc
jns
xchg
or
dec
ret
xchg
fsts
mov
jno
cltd
call
rcrl
sub
rorb
xchg
inc
push
or
iret
jne
inc
jo
pop
cmp
mov
in
inc
mov
mov
xlat
rorl
mov
enter
sub
mov
fwait
push
cmp
pop
js
jne
xchg
int3
dec
and
fidivrs
imull
push
lcall
pop
cmc
jl
mov
push
adc
sub
pop
and
rolb
and
jbe
mov
dec
nop
fidivs
inc
and
pop
ljmp
mov
cmc
jns
push
imull
adc
add
sbb
iret
inc
xor
iret
cltd
shrl
xchg
sub
add
inc
repz
push
push
andl
cli
add
test
push
ffreep
orl
roll
test
mulb
je
mov
ret
aam
jo
pushf
xor
add
push
mov
outsb
mov
push
fwait
jge
push
in
test
fidivs
repz
rcr
mov
adc
rcrb
shr
push
js
xchg
or
aas
insb
dec
test
adc
std
xchg
mov
repnz
pushw
add
pop
imul
in
call
mov
cli
pop
mov
fwait
aam
xchg
jmp
test
sahf
mov
cmp
lods
mov
mov
mov
and
jne
mov
xchg
jg
in
cmp
int3
aaa
out
dec
loop
rcrl
xor
jne
push
cmpl
cmpsl
imul
jb
sbbl
scas
xchg
jno
inc
out
stc
jae
inc
mov
cmp
fistl
adc
jl
pop
mov
inc
or
add
mov
add
stos
xor
mov
loopne
add
cld
cli
mov
xchg
pop
cmpsl
in
in
jp
ljmp
sti
jne
add
cmpsb
mov
jecxz
inc
xchg
add
jecxz
icebp
sti
sbb
mov
push
dec
and
cmp
repz
dec
mov
dec
movsl
out
out
mov
mov
cwtl
xlat
pop
xlat
shr
or
ja
ret
pop
mov
addl
mov
test
xor
jns
xor
jne
popf
aas
sub
xchg
and
das
scas
sbb
notrack
aas
sub
nop
push
lea
int
and
and
std
leave
cmpb
mov
cld
insb
jl
repz
add
xor
push
sti
pop
les
cltd
xchg
aad
call
fs
test
imul
xchg
jne
and
jae
mov
cmpsb
arpl
mov
pushl
loopne
nop
sub
aad
out
adc
or
fsubr
mov
or
jb
jne
shlb
dec
sub
sbb
je
xor
fdivrs
lahf
mov
out
sbb
inc
mov
cmp
add
or
ljmp
nop
movsl
sbb
fldcw
adc
loope
adc
in
jg
scas
lret
sbb
popa
push
fs
cmp
mov
dec
lds
add
lahf
fldenv
push
loop
mov
shlb
nop
dec
pop
ret
dec
adc
xchg
fwait
ja
pop
jnp
movsb
stos
jl
pop
dec
lea
mov
mov
fdivr
and
cmc
mov
dec
rcrb
fcmovne
dec
add
sub
mov
mov
fisubrs
inc
push
push
jmp
jns
aad
xchg
popf
jbe
or
es
xchg
mov
shlb
sarb
sub
xor
jne
out
xchg
cmp
or
mov
rolb
pop
popf
lahf
sbb
and
mov
aaa
push
je
out
push
lcall
cwtl
push
jae
cmp
pop
je
or
xchg
aas
add
lahf
cmp
sahf
inc
fmulp
cli
negb
jne
pop
int3
push
pop
lret
push
jbe
testl
pop
aad
add
je
ljmp
adc
pop
fidivrl
popf
add
cmp
xchg
movb
jo
std
xchg
outsl
adc
add
push
dec
xor
xorb
sbb
sbb
adc
cmp
xchg
or
mov
imul
push
stos
mov
lret
popa
lcall
sbb
loope
cmp
aad
mov
popa
ret
int
fwait
or
repnz
cmpsb
int
pusha
jbe
jnp
jns
mov
pop
stos
nop
cmp
in
sti
cmp
dec
xor
repnz
data16
sub
sbb
lahf
pop
jmp
mov
iret
push
cmp
mov
pop
lret
pop
fcomp
movsl
fsubs
orb
mov
mov
movsb
movsb
fidivs
jo
or
add
jns
push
in
cld
pop
mov
push
push
ja
adc
lods
mov
int3
cmc
jge
out
mov
jne
cmp
ds
jge
sub
or
sti
xor
mov
cs
ljmp
mov
adc
insl
fsubs
lods
out
jp
sub
push
inc
fnstsw
jle
cwtl
push
xrelease
push
fsts
add
daa
les
fxch
adc
push
sbb
dec
popf
sbb
xlat
jecxz
sub
mov
enter
pop
nop
fdivrs
shlb
jge
or
inc
pop
in
popf
pop
pop
jle
pushf
mov
sbb
dec
fdivs
jb
push
cmp
mov
hlt
mov
lock
or
iret
and
stos
test
outsl
inc
clc
mov
mov
sahf
xchg
cli
fdivrl
mov
or
cmp
jbe
mov
movsl
call
jle
cmc
mul
fistps
sti
mov
jmp
cmp
pop
jns
inc
cld
jp
jge
jg
inc
jo
adcb
das
popa
jmp
rorl
imul
push
dec
lds
jns
jbe
or
mov
xor
jno
in
mov
or
int
js
in
mov
xchg
add
cli
mov
ds
icebp
mov
loop
int
mov
sbb
inc
mov
and
jmp
push
pop
test
fidivrl
jl
push
imul
test
or
scas
mov
clc
arpl
repz
mov
negl
enter
test
rcrl
pop
stc
xor
pop
lock
mov
mov
mov
mov
ret
ret
add
cmpsl
cmp
cmpsl
negl
adc
or
es
jno
loop
pop
aad
test
mov
sub
sub
xchg
insl
xchg
add
xlat
inc
or
cltd
xor
mov
je
rcrl
and
cwtl
sub
adc
xlat
movsl
dec
cmpsb
inc
imul
xor
mov
adc
pop
mov
inc
sbb
call
jnp
into
js
out
fdivr
inc
es
push
hlt
out
push
les
xchg
icebp
idivl
daa
loopne
out
pusha
or
repnz
mov
mov
je
or
xor
push
jle
push
and
push
xchg
mov
sbb
insl
sbb
mov
adc
jecxz
cltd
or
in
jge
pop
pop
mov
xor
sbb
jecxz
mov
or
into
in
sub
pop
push
xor
or
idiv
mov
pushf
inc
cmpb
fnsave
sbb
je
int3
call
fnstsw
add
push
lcall
dec
mov
push
setne
leave
mov
dec
sbb
adc
stc
and
and
nop
mov
and
sbb
jle
inc
es
xchg
int
inc
scas
hlt
push
jmp
xchg
test
add
or
cmp
aas
dec
orl
dec
int3
push
cwtl
push
sahf
mov
inc
dec
jmp
pop
push
jns
hlt
hlt
daa
std
xlat
shl
pop
dec
iret
adc
inc
jnp
jb
in
mov
jns
idivb
xchg
sbb
pop
xor
cmp
sub
xor
cmpsl
sbb
add
push
pop
pop
enter
mov
ret
ds
sti
sbb
adc
sub
pushf
fisttpl
xor
lahf
dec
sarl
loop
ds
sub
xchg
push
in
daa
out
sarl
or
mov
push
aad
into
mov
ret
fcomp
enter
mov
inc
xchg
js
or
inc
dec
shll
xchg
mov
jle
sub
adc
mov
fisubs
sub
lret
adc
mov
das
pop
mov
repnz
adc
repz
sub
repz
sbb
cmp
add
jg
shl
mov
fisttpl
jns
repnz
jg
mov
clc
pop
mov
fldl
shlb
and
push
pop
sub
addb
inc
jmp
mov
dec
jp
mov
sub
or
cmp
mov
push
cs
mov
xor
sub
fs
outsl
mov
xchg
jbe
add
mov
xor
inc
out
outsb
mov
inc
shl
mov
sbb
cmp
stc
divb
outsl
pop
sbb
enter
mov
aas
jge
mov
loop
adc
xor
xchg
imul
sub
mov
adc
xchg
xor
adc
out
rolb
or
scas
add
or
add
loop
sbb
pop
lods
lea
mov
xor
mov
int3
ljmp
mov
nopl
leave
xchg
lods
mov
xchg
mov
arpl
in
rol
int3
ficompl
dec
xor
aad
stos
inc
mov
int
aas
pop
aas
jbe
mov
insl
arpl
add
cmp
inc
lcall
sbb
rcr
sbb
lcall
fistps
imulb
mov
popf
push
or
pop
push
add
cmp
imul
repz
loope
mov
cmp
mov
and
inc
jmp
add
cltd
or
lcall
jg
mov
jl
push
pop
and
jo
loopne
in
idivl
jns
enter
cltd
mov
into
adc
push
aaa
ljmp
inc
add
cmpl
push
xor
incl
gs
dec
lods
lret
scas
dec
cmpsb
inc
je
fsubrs
out
testb
test
loope
jmp
fistpl
and
test
stc
lea
xchg
int3
pop
into
data16
sahf
cmp
aam
stc
adc
sub
jbe
out
aaa
in
adc
inc
mov
mov
popa
xor
push
stos
repz
add
xchg
out
xchg
jbe
mov
inc
cmpsb
pop
xor
les
ljmp
aam
pop
xchg
js
add
daa
jl
pop
lcall
int3
ljmp
cli
sbb
mov
pop
jb
adc
fidivrl
adc
and
jae
push
in
mov
push
or
sbb
lods
mov
sbbb
movl
out
lahf
out
ds
xor
xor
in
repz
mov
lds
lret
or
inc
cwtl
imul
or
ljmp
cmp
adc
adc
mov
xrelease
pop
cli
add
out
xor
movsb
icebp
outsb
adc
adc
xchg
lods
pusha
adc
sub
int3
cli
fdivr
cmp
mov
pushl
test
or
and
sbb
cmc
dec
adc
jnp
sbb
push
and
mov
mov
pop
add
test
sub
cmp
pop
stos
sbb
js
lea
or
enter
scas
push
cwtl
inc
ror
lret
fisubrs
sub
xor
lret
ss
orb
pop
mov
mov
or
add
mov
xchg
and
mov
dec
test
xor
imul
cs
mov
mov
imul
or
das
dec
shrl
mov
test
xorl
jge
hlt
in
mulb
sar
sub
jns
push
mov
cwtl
add
cwtl
mov
pop
outsl
cltd
shll
lock
out
std
aaa
mov
xchg
pop
mov
add
and
mov
cmp
in
or
aaa
enter
and
in
fmulp
shrl
sbb
xchg
pop
mov
pop
ret
pop
push
or
add
cmp
movsl
jnp
pushf
add
or
mov
rcl
mov
cmpsl
xor
mov
std
sar
dec
stc
fmuls
ss
rclb
pop
push
pushf
push
dec
ds
test
xor
push
les
shrb
inc
in
sub
repz
fldcw
inc
mul
fdivl
stos
and
into
mov
mov
arpl
pop
andl
test
push
add
jns
fs
or
pop
inc
shr
jb
mov
rclb
xlat
jge
into
testl
bound
add
mov
xchg
clc
fadd
xlat
inc
pop
sub
sbb
dec
nopl
inc
int
cmp
getsec
push
imul
sbb
aad
dec
imul
or
jns
int3
mov
adc
or
xorb
mov
int3
in
mov
mov
push
imul
add
dec
jnp
add
out
or
or
mov
pop
insb
xchg
xchg
sbb
mov
aad
inc
jp
xchg
push
cmp
sarb
cmp
xor
and
das
xchg
gs
ss
sub
clc
fimuls
or
xor
jno
and
popa
add
mov
sti
test
mov
jecxz
mov
sahf
inc
mov
dec
clc
frstor
cmp
aam
or
dec
sbb
sub
mov
xchg
pusha
mov
bound
jl
push
outsb
pop
iret
in
frstor
jle
outsl
sbb
out
jns
push
inc
jp
stc
sarl
push
or
enter
movsl
pop
cmp
ret
stos
movsl
es
fstl
lock
ror
mov
int3
lahf
aad
xor
adc
xchg
sbb
adc
push
adc
mov
adc
pop
enter
or
ljmp
lds
pushf
lahf
mov
push
jp
dec
lods
aas
xor
ja
popf
or
or
rolb
push
aam
cwtl
mov
jae
pusha
out
xor
xchg
push
or
pusha
add
add
out
nop
cmp
lcall
push
loopne
dec
lahf
insl
xor
mov
adc
mov
inc
popf
in
gs
mov
lods
cmp
mov
adc
inc
in
inc
popf
clc
mov
jp
cld
fildll
nop
loopne
xor
xchg
sub
sub
mov
jb
jb
add
and
lds
insb
xlat
jle
dec
pop
imulb
pop
dec
cli
add
call
popa
lret
push
xor
fidivl
xor
push
xor
or
aam
or
and
xor
inc
mov
adc
mov
fwait
sbb
dec
or
jbe
jbe
out
aad
outsb
stc
fisubrl
xchg
inc
pop
lahf
sub
aas
je
mov
sub
test
sub
push
pop
cmp
inc
adc
add
push
dec
xor
or
pand
stc
subl
leave
lock
jo
sbb
or
jle
mov
inc
sbb
pop
popf
incb
cmp
dec
stos
loopne
movsb
icebp
clc
sti
pop
jne
dec
jo
fisttps
test
add
jmp
push
mov
mov
inc
xor
lods
enter
pop
cmp
push
test
xorb
dec
xchg
mov
ljmp
in
adc
bnd
ret
clc
fcmovnu
sub
out
mov
rclb
lret
stos
in
test
push
sub
xor
cmp
iret
jge
jae
lods
mov
inc
mov
fildll
into
bound
jg
dec
mov
dec
outsb
mov
subl
xchg
and
mov
sub
stc
aas
add
mov
pop
xchg
ret
aas
mov
xlat
sbb
fimuls
jle
pop
scas
repnz
int3
negb
int
insb
arpl
lea
lock
cmp
aam
fcmovnb
ret
test
cmpsl
test
testl
shll
popa
cmp
inc
jecxz
sub
enter
sbb
loope
js
xchg
sahf
or
aas
mov
enter
ds
adc
lcall
dec
xchg
addl
cmp
sub
cmc
jne
shlb
push
xchg
daa
loopne
push
add
mov
sti
roll
mov
push
cs
outsl
pop
sub
and
bound
cs
jp
push
jmp
push
lock
xor
or
movsl
sarb
adc
shll
fwait
fs
imul
sbb
inc
xchg
mov
or
aaa
xchg
xchg
dec
mov
daa
lds
xor
jb
out
cmp
out
cwtl
push
push
fs
mov
pop
and
gs
arpl
pop
icebp
sbb
pushf
mov
lret
sub
inc
nop
leave
call
jo
bound
dec
inc
mov
sbb
fadds
call
jle
call
rolb
pop
hlt
pop
cmc
add
js
adc
add
jmp
adc
inc
enter
sbb
dec
push
pop
cmp
and
dec
outsb
pop
shl
imul
adcb
outsb
in
adc
pushf
hlt
sbb
dec
fsubrs
lods
ret
push
xchg
sub
sarb
cmc
je
addr16
and
sub
cmp
and
ss
incl
dec
inc
adc
jbe
cmp
shlb
and
mov
sub
clc
addr16
test
or
or
adc
push
xchg
adc
jae
or
pop
cli
push
mov
and
sbb
test
dec
adc
scas
daa
sub
pop
mov
cmp
sbb
jl
loopne
sbb
test
mov
xor
and
out
lcall
popa
xchg
pop
addr16
ret
mov
stos
fldt
add
pushf
or
adc
pop
jo
mov
adc
div
dec
push
inc
mov
fcoml
or
inc
outsb
pop
mov
sub
inc
js
cltd
or
cmpsl
dec
xor
cmp
fstp
fwait
pop
adc
sarb
sub
cmpsb
xor
push
jb
loop
adc
lods
sbb
jne
xchg
push
hlt
test
clc
mov
jmp
or
inc
rcrl
sarb
sub
divb
xor
dec
add
lret
aad
pop
out
repnz
int3
xor
les
push
sbb
push
out
jbe
mov
js
mov
lret
les
clc
sbb
pop
mov
or
cltd
loop
gs
xchg
adc
push
sbb
hlt
mov
shlb
push
push
scas
sti
icebp
pop
std
aam
bound
out
mov
mov
sub
nop
aad
imul
and
lock
push
lds
adc
iret
xchg
cld
jno
cmp
cli
popa
and
cmc
inc
sahf
inc
dec
add
enter
xchg
push
and
xchg
push
testl
pop
aaa
aam
mov
sub
xor
aas
mov
adc
scas
out
push
mov
xlat
mov
cli
andl
dec
gs
sbb
or
cmp
cld
fbld
ret
in
mov
mov
scas
out
cmpsl
out
loopne
scas
dec
pop
jae
ljmp
push
sarl
out
cs
out
cmc
cmpl
bound
addb
adc
stos
pop
mov
daa
js
jge
inc
sbb
and
jbe
adc
das
lds
xor
fstpt
jmp
push
out
xchg
push
adc
sub
scas
add
mov
mulb
fs
fdivl
mov
aaa
andb
dec
pop
pop
add
or
mov
aam
xchg
or
xchg
push
movsl
sbb
daa
jb
jecxz,pn
test
loope
or
dec
mov
inc
dec
pusha
adc
dec
aad
rcrl
ljmp
daa
add
or
sub
sbb
je
ret
stos
lea
cltd
adc
sahf
sub
inc
ret
mov
mov
push
pop
imul
xor
ret
xchg
sub
out
mov
dec
sbb
lods
lds
rolb
pop
sub
or
lods
loope
xchg
xlat
aad
aad
aam
push
aaa
push
mov
sbb
and
dec
imul
sbb
popf
lahf
cwtl
jno
outsb
shlb
mov
cmp
or
aad
xor
mov
outsl
dec
test
test
dec
test
and
sbb
arpl
push
dec
in
mov
fisubs
mov
xchg
sti
xchg
sbb
bound
aam
pop
pop
add
test
add
mov
out
test
pop
stos
xor
movsb
and
imul
mov
sti
outsb
daa
lcall
in
dec
mov
cld
fcmovbe
xchg
shll
cmpsl
not
push
in
loope
outsb
cmp
dec
jbe
dec
cli
pop
xor
lahf
pop
movsb
aaa
sub
mov
dec
jge
push
jp
sub
aaa
lret
push
movsl
sbbl
mov
ss
popf
jno
jp
cltd
ljmp
cmp
in
adc
add
or
dec
repnz
arpl
outsl
movsb
lock
push
sbb
sti
jo
xchg
and
inc
add
out
rcl
push
enter
leave
add
in
or
aad
mov
mov
in
cmp
cmp
lahf
inc
push
or
jmp
pop
in
sub
mov
xor
loop
stos
push
stc
cmpsl
or
sub
in
jno
inc
jnp
or
jmp
daa
mov
test
mov
xor
fiadds
add
xorl
stos
jbe
mov
fcomps
or
cmc
mov
mov
sbb
out
cltd
sub
outsl
pop
push
in
sbbl
jne
add
addr16
repnz
lret
push
outsl
lcall
xchg
mov
or
mov
je
flds
lods
aaa
sahf
ljmp
push
nop
aaa
push
movl
in
cmp
repnz
push
push
clc
inc
and
stos
adc
add
mov
enter
or
pushf
out
js
lea
push
pop
jl
or
push
adc
shl
dec
pop
add
dec
dec
mov
int
test
faddl
mov
mov
mov
cmp
cs
xrelease
inc
scas
mov
out
cmpsl
pop
or
jl
repz
add
stos
cmp
leave
test
inc
scas
test
or
or
mov
xchg
xchg
clc
adc
jge
test
push
push
pop
mov
clc
es
arpl
dec
jae
xor
out
int3
pop
push
arpl
inc
fisttps
and
mov
jp
sbb
adc
in
adc
fstpt
add
inc
cmpsl
push
dec
sahf
inc
imul
push
or
fprem1
daa
sub
adc
inc
ror
and
jle
mov
das
add
pusha
nop
fucomip
xor
mov
xor
sub
jp
mov
loope
loop
fwait
sbb
xchg
xchg
adc
fimull
fnsave
inc
sti
xchg
lods
push
in
push
imulb
dec
mov
ret
movsb
cmpsb
xchg
sbb
xchg
mov
loopne
loop
add
jns,pn
popa
andl
push
cmp
pop
andps
mov
leave
sbbl
jmp
xchg
mov
fs
jg
mov
shl
scas
xor
xlat
pop
cmp
fisttps
in
xor
sub
dec
test
imulb
mov
sbb
in
ds
call
stos
lods
lods
xchg
mov
aam
adc
fadd
xor
or
ret
iret
adc
xchg
cmpsl
cmp
sub
lods
inc
aaa
sbb
dec
sub
xor
sub
or
xchg
inc
mov
stc
sbb
xchg
fisubrl
fnstsw
add
or
push
jg
test
dec
lahf
test
fnsave
cld
inc
add
outsl
jno
leave
std
mov
call
lods
test
jne
push
call
repnz
cmp
dec
cmpsb
sbb
loope
int3
jae
idivl
shl
addl
cmp
idivb
jl
mov
aas
ret
pop
mov
cmp
inc
mov
enter
into
push
lea
loope
enter
insl
icebp
mov
jle
sbb
mov
iret
arpl
pop
into
xor
lods
ds
clc
or
cmpsb
xor
stc
sbb
loope
std
jge
jmp
gs
xor
insl
jle
push
dec
add
movsb
dec
mov
cltd
data16
cmp
fisttps
shll
adc
test
mov
xchg
pop
out
dec
dec
pop
test
in
insl
jg
fcompl
addr16
push
stos
xchg
aaa
add
inc
xchg
and
cmp
push
add
in
fsub
mov
orl
inc
xor
cmp
pop
jg
movsl
push
xor
xor
lds
xchg
je
sub
and
out
popf
cmp
push
or
and
scas
xor
pop
mov
in
or
mov
sti
subb
mov
sbb
and
cmp
xchg
cmpb
loop
mov
add
loope
jno
imul
pusha
enter
sbb
or
imul
adc
cmp
icebp
mov
je
mov
sbb
xchg
and
and
mov
sbbl
or
inc
insl
pop
lcall
xor
mov
xchg
fwait
and
int3
sbb
mov
pop
push
mov
or
sbb
pop
addr16
inc
pop
xor
hlt
gs
sbb
pop
scas
lods
pop
mov
outsb
xchg
sahf
pop
xor
mov
faddl
inc
std
cmp
inc
scas
leave
rcrl
jno
xchg
push
hlt
div
mov
incl
dec
popa
lcall
notl
inc
cmp
mov
push
xchg
ljmp
fisubs
pop
inc
add
std
movsb
stos
clc
jne
ljmp
mov
mov
jp
leave
cltd
cmc
mov
ror
jbe
xchg
jg
imul
lods
rcrl
popf
xchg
mov
cmp
js
jae
push
pop
mov
xlat
ret
or
fldcw
pop
dec
jmp
add
mov
pop
data16
jno
arpl
sbb
xchg
stos
sbb
idivb
inc
xor
add
push
insl
ret
pusha
popf
pop
data16
inc
cld
xchg
subb
dec
pop
inc
jg
xor
cmp
or
lods
insl
pushf
imul
add
sbb
lock
neg
aaa
and
mov
sub
loop
mov
mov
loope
out
addr16
pushf
ljmp
fiadds
jmp
popa
jl
mov
xor
jle
mov
pusha
cmp
inc
mov
xchg
cmpsl
pop
divl
add
xchg
ret
addb
inc
mov
out
in
push
sbb
sub
sti
xor
pop
xor
enter
cs
shlb
cs
stc
cli
icebp
cmp
scas
fidivrs
xchg
je
je
jne
leave
das
or
fidivrl
push
or
pusha
mov
in
xchg
push
icebp
imul
ret
pop
jp
movsl
sub
jns
lahf
sbb
cmp
jg
jno
cmc
push
icebp
outsl
cmc
sbb
stc
inc
movsb
outsb
push
movb
in
sub
inc
cmp
incb
lret
jnp
repz
xchg
cmp
call
ficompl
out
pop
nop
sbb
push
xor
in
scas
cwtl
mov
hlt
mov
push
das
scas
xchg
adc
cltd
sbb
cmp
rorb
sbb
ds
data16
push
pusha
fldl
aaa
test
imul
mov
iret
push
xchg
cmp
lds
loope
sub
xchg
mov
nop
push
js
shll
push
jnp
inc
mov
mov
xchg
xchg
adc
in
movsl
pop
mov
arpl
fsub
push
mulb
outsb
das
loop
popa
hlt
pushf
shl
cmc
cmp
xchg
jl
xchg
push
fxch
or
std
sub
test
pop
inc
scas
push
adc
mov
adc
xor
test
dec
adcb
js
push
cmp
add
pop
mov
fistps
loope
or
add
xchg
jmp
jmp
les
jg
mov
daa
xchg
sbb
inc
cli
push
out
sbbb
je,pn
jb
push
stos
rorl
cmpsl
in
adc
push
jg
stos
in
push
mov
fsubs
scas
pop
js
js
subb
mov
fiaddl
imul
pop
popl
fwait
mov
repnz
lds
notl
and
and
loope
subl
cmp
and
adc
lret
arpl
jne
xor
dec
adc
dec
lods
inc
push
xorb
inc
mov
in
push
mov
mov
inc
jmp
sarb
std
lds
push
in
jmp
dec
popf
sbb
jp
mov
xor
cmp
fldt
jmp
xor
shll
push
mov
enter
xor
out
dec
outsb
test
adc
aad
xchg
and
cmp
fs
cmpsl
pushf
adc
mov
andl
or
nop
dec
push
add
test
pop
out
imul
and
lods
dec
mov
repnz
mov
fxch
and
dec
aaa
or
pop
sbb
rcrl
hlt
dec
adc
and
mov
jns
push
ljmp
sub
bound
or
clc
scas
pop
ja,pn
mov
dec
addr16
mov
sub
jle
sbb
inc
xchg
adc
jmp
iret
xor
movsl
loop
stos
add
xchg
lea
fdivrs
stos
int3
movsl
adcl
int3
inc
mov
enter
ja
mov
mov
adc
jb
ljmp
pop
add
xor
fldl
fcompl
sahf
insl
jecxz
pop
dec
mov
je
daa
sbb
sub
dec
pop
rcll
or
rol
dec
xchg
dec
scas
lea
stos
and
fcomp
xor
or
mov
pop
inc
fwait
mov
xorl
xor
add
std
xor
stos
fs
pop
aad
adc
or
lock
mov
mov
ss
sbb
cmpsl
and
push
mov
xchg
inc
out
loop
mov
xchg
ficoml
pop
inc
arpl
dec
repnz
jl
cmpsb
adc
xor
ret
add
fnstenv
aaa
aam
sbb
inc
push
add
xchg
dec
repz
xchg
ret
sbb
sarb
negl
std
ficompl
push
lock
stos
mov
mov
fwait
jb
fstp
mov
mov
daa
js
adc
bswap
fadds
sub
icebp
loop
shll
into
adc
add
int
imul
mov
es
sub
sti
dec
sub
add
inc
ret
call
jp
jno
pop
push
jp
rcrb
aad
and
or
sub
fcompp
or
fidivs
movl
sbb
sbb
cli
jge
xor
dec
xchg
je
mov
xor
adc
jae
mov
faddp
in
xchg
adc
jle
or
push
inc
shlb
aam
jbe
inc
sarb
sub
jmp
insb
aam
call
adc
ret
and
fiaddl
mov
jne
add
shrb
outsb
in
mov
jl
mov
adc
lea
cmp
clc
clc
add
mov
shrl
fldl
test
mov
xor
lret
or
dec
call
pop
scas
pop
push
int3
sub
pushf
divl
xor
jno
add
hlt
adc
imul
lcall
adc
in
or
loope
push
ret
cltd
inc
push
into
mov
popf
les
fwait
push
jns
cmp
inc
clc
adc
mov
pusha
and
fs
or
jnp
cmp
pop
mov
xor
push
lahf
shll
cwtl
fwait
push
push
test
repz
ja
xchg
mov
sbb
inc
test
dec
daa
pop
mov
xchg
pop
out
lock
orb
in
std
aam
inc
pushf
push
movsb
jle
or
mov
nop
repnz
push
mov
pop
add
test
or
jne
notb
jmp
mov
pop
fistpll
pop
in
stc
or
sub
std
inc
add
dec
xchg
out
jecxz
cmpsl
push
out
jg
mov
or
inc
add
mov
push
xchg
test
pop
sbb
push
lds
inc
out
popf
xchg
dec
jbe
inc
mov
jge
cmpsl
push
push
iret
enter
and
call
ror
xchg
cmp
push
inc
jecxz
mov
mov
shlb
aad
inc
loope
dec
add
push
sbb
test
fcoml
negb
mov
mov
test
lea
jne
out
leave
pop
or
cmp
sub
sub
jno
sub
cmp
cmp
pusha
jbe
pop
aam
insb
int
mov
adc
xchg
test
or
fisttps
in
sbbb
or
das
mov
lret
out
ficompl
lea
pop
xor
inc
or
add
mov
cs
push
ret
aad
xor
hlt
ret
movsb
push
jp
xor
cli
push
repnz
mov
and
inc
cmp
popf
imul
rol
or
mov
push
dec
fcmovu
and
cltd
movsb
push
cmp
and
jae
loop
stos
int3
shr
add
das
push
add
enter
dec
stos
push
mov
adc
cmpsl
fld
fsubrl
cltd
in
test
loop
js
or
cmp
mov
stos
jnp
or
cs
shr
jne
pop
repz
hlt
and
jecxz
pop
lahf
ret
dec
es
movsl
rcpps
and
mov
and
dec
mov
mov
scas
pop
fmull
int
mov
ja
jo
out
xchg
xchg
mov
xorb
push
out
sub
pusha
jns
popf
inc
jge
sbb
dec
push
mov
sbb
sub
xchg
mov
mov
pushf
lods
pop
pop
lock
inc
cmp
add
pop
mov
test
std
cmp
and
pop
stos
test
pop
cli
popf
xor
pop
pop
or
cmpsb
mov
leave
inc
xor
mov
ljmp
inc
mov
cmp
aam
pop
lret
mov
push
xor
ret
les
aaa
subl
dec
sub
jecxz
fistpl
imul
cmp
adcb
adc
xor
sti
inc
aas
es
into
add
in
push
inc
sbb
shl
sbb
sbbl
dec
pop
cmpsl
fiadds
repnz
mov
jb
sbb
sub
push
push
inc
push
jmp
cmp
lret
dec
sti
dec
in
sbb
test
sub
hlt
mov
pushf
pop
lea
outsl
xor
repnz
js
dec
sub
les
mov
push
inc
std
pusha
fidivs
ljmp
js
sbb
insb
push
sbb
xchg
mov
cmp
stos
push
xlat
jge
loopne
mov
dec
enter
out
packuswb
rcrb
xchg
decb
outsl
stos
mov
pop
adc
shll
outsl
std
jg
sub
push
fidivrl
push
mov
adc
mov
pop
aas
call
cmpl
inc
sahf
iret
cmpsb
add
lock
mov
ss
shlb
push
fcmovne
push
dec
loopew
lock
cmp
cmp
xchg
push
std
push
adc
test
and
into
xchg
mov
stos
and
aam
das
dec
xchg
lcall
mov
cmp
mov
ljmp
dec
inc
pop
aam
cs
cmp
stos
jle
mov
push
inc
mov
mov
shr
je
jnp
mov
jl
rcrb
or
call
jecxz
pop
in
test
hlt
adc
repz
mov
popa
lret
push
test
dec
out
divl
lahf
sub
nop
rclb
dec
shrb
ss
pushf
mov
dec
aad
lcall
call
divb
sar
sub
subb
mov
cli
sti
inc
stc
cmp
scas
fisttpl
stos
xor
jnp
sbbb
jmp
adc
in
pop
iret
pop
fdivr
mov
push
loope
in
icebp
outsl
or
cld
es
lds
int3
outsl
xor
pop
or
sarl
shlb
ds
gs
sub
push
lods
and
pop
jno
shll
dec
sbb
fcoms
sub
imul
pushf
scas
push
test
add
popf
stos
rclb
mov
pop
jo
scas
push
mov
add
or
xchg
fistps
imul
pop
lcall
imul
xchg
aad
dec
jp
incl
jno
adc
rorb
cmpsb
repnz
inc
pop
push
pop
movsb
xlat
xchg
lds
in
mull
adc
pop
dec
sti
insb
pop
jle
int
mov
adc
stc
or
aam
je
and
out
mov
ss
in
jno
aad
cmp
mov
mov
push
inc
jnp
pop
pop
movsb
movsl
pop
xlat
mov
fwait
cs
or
mov
lods
jne
js
fdivr
push
cmp
aaa
faddl
sbb
push
nop
xor
jbe
stos
xor
hlt
mov
scas
push
inc
call
dec
push
sbb
cli
push
jae
std
addb
add
aad
outsb
or
hlt
xchg
mov
cmp
cmpsb
test
mov
mov
outsb
lahf
bound
sub
sub
mov
pop
xorl
loop
mov
mov
pop
insb
xor
or
mov
push
or
jl
lret
scas
and
dec
notl
adc
pop
sub
cmp
xchg
adc
outsb
not
jb
clc
sbb
shl
sub
dec
push
repz
roll
sbb
mov
sahf
lss
popf
ds
adc
mov
pop
or
imul
inc
pop
ss
pop
jno
inc
popa
dec
adc
pushf
mov
cmpsb
rclb
mov
repz
push
iret
xlat
adc
push
adc
sbbl
dec
mov
inc
add
dec
ja
pop
stos
adc
mov
call
cwtl
push
sub
mov
xor
cmp
add
or
inc
push
stc
les
adc
les
xchg
jb
mov
mov
insl
mov
xchg
fsubs
fiadds
dec
xchg
andb
loop
sub
jb
jle
sti
pop
js
in
sub
mov
je
jmp
inc
sub
call
xchg
add
push
or
clc
out
shlb
add
push
das
addr16
fcoml
push
in
jmp
scas
pop
add
mov
jbe
sub
jg
lcall
pop
xor
mov
loop
add
outsl
lgdtl
pop
dec
push
or
scas
stos
add
clc
imul
rorl
mov
pop
and
cmp
out
sub
cld
repz
mov
ja
enter
adc
test
roll
adcb
lods
je
xlat
xor
cmp
jns
jae
loop
push
push
sbb
mov
lret
iret
inc
sbb
repnz
test
addb
jne
jns
ds
push
ret
dec
mov
mov
xchg
icebp
mov
nop
cmp
test
xchg
push
bound
popa
pop
movd
sbbl
add
es
adc
cmp
rorb
mov
adc
mov
rcl
push
cmp
outsl
add
arpl
ds
inc
pop
add
xchg
or
mov
mov
mov
or
push
pop
test
mov
movsl
dec
mov
sbb
ret
inc
outsl
inc
call
sti
and
sbb
sbb
cld
cmp
xor
mov
test
lcall
add
cli
jnp
add
cwtl
mov
lods
shlb
fs
test
add
adc
ds
ja
mov
lea
mov
mov
adc
pop
and
sub
cmp
lods
jg
pop
into
insl
jp
sub
ret
lret
cmpb
dec
and
rcrl
inc
xlat
mov
mov
fs
inc
ffree
test
in
mov
leave
sub
mov
enter
xor
jg,pn
jle
cmp
fmuls
sub
ret
sub
pop
js
jno
xlat
aam
ja
out
or
cmp
mov
pop
and
jecxz
push
ja
jecxz
scas
jp
loop
push
movsb
mov
mov
mov
jbe
xor
dec
mov
es
das
gs
xor
int3
rcrl
push
pop
idivb
decb
sub
push
push
loop
pop
les
das
fidivrs
mov
inc
and
mov
syscall
sbb
mov
hlt
sub
jp
dec
mov
incl
xor
xor
stc
xor
jns
loopne
add
lds
sub
cli
cmpps
insb
ljmp
jp
xor
bound
aaa
adc
adc
jno,pt
cmp
scas
shlb
dec
adc
lea
add
and
lcall
xchg
pop
cmp
jl
ficoml
mov
ret
pop
mov
jno
xchg
pusha
dec
gs
int
mov
xchg
pop
xchg
sub
mov
stos
mov
loopne
leave
jmp
pop
int3
cmp
lods
jno
cmp
fmul
cmp
lds
inc
mov
mov
lea
lcall
es
jnp
adc
xor
push
adcl
jecxz
into
enter
adc
cmp
or
push
sahf
adc
arpl
xor
jnp
push
sbb
adc
push
jnp
test
cmc
fld
inc
lods
clc
js
add
push
imul
dec
push
shlb
jbe
xchg
flds
and
pop
push
jno
insl
insl
mov
inc
ret
arpl
inc
fimuls
repnz
fwait
mov
or
mov
mov
fwait
xor
cltd
inc
out
push
cmpsb
sbb
pop
out
add
mov
pop
lock
push
dec
pand
scas
and
cld
aam
ds
dec
test
mov
fsubrl
lock
adcl
out
lds
xlat
jo
lds
or
push
aas
cmc
push
stos
fldl
xchg
or
jne
subb
sbb
jmp
cmp
scas
and
por
ror
or
fildll
dec
pop
pop
inc
mov
xchg
sub
aaa
adc
sub
aad
push
dec
push
aas
sub
arpl
dec
sbb
push
pop
cmp
aam
clc
xchg
cs
pusha
sbb
incl
imul
add
mov
cwtl
and
mov
popf
mov
test
out
mov
xchg
mov
ret
sub
cmc
ja
pop
push
mov
xchg
lds
and
shrb
push
jecxz,pn
scas
pop
add
cld
pop
dec
les
arpl
adcb
pop
clc
daa
adc
inc
aam
sub
or
or
popf
je
xchg
push
xorb
mov
add
pusha
imul
lret
gs
xor
ret
and
es
sub
pop
pusha
dec
mov
es
into
xor
or
pushf
stc
push
int3
out
mov
notb
pop
gs
int
push
jns
int3
ss
clc
adc
hlt
pop
dec
cli
sub
in
arpl
adcb
xchg
add
mov
cltd
push
jle
pop
sbb
mov
mov
pushf
mov
int3
stos
sbb
arpl
jmp
xchg
dec
arpl
and
outsl
pop
pop
lods
inc
das
ds
and
or
fnsave
mov
or
into
pop
ss
stc
ret
ja
loope
shr
jecxz
inc
adc
add
push
xchg
dec
popa
fmul
dec
or
sub
aas
xchg
push
scas
insl
jg
fmuls
add
std
in
adc
icebp
cmp
pop
shl
loope
push
pop
and
insb
inc
scas
sub
lods
ficoms
or
das
leave
jb
push
daa
mov
mov
push
outsl
inc
mov
inc
jns
or
mov
aam
push
mov
inc
lcall
dec
jbe
mov
ficomps
add
test
pop
xor
mov
out
in
test
gs
in
lahf
in
jne
gs
gs
daa
mul
int3
or
xchg
mov
xor
and
jle
mov
vorps
in
faddl
pop
mov
inc
inc
dec
xor
and
lock
xor
enter
das
adc
test
insb
xchg
or
stos
jae
sub
daa
inc
and
xor
adc
push
ss
mov
mov
adc
sub
adc
sub
and
mov
aas
and
adc
xor
fisttps
adc
adc
sbb
popa
mov
pop
movswl
test
test
cli
mov
jg
decl
inc
aad
int3
xor
xchg
sub
xchg
push
loope
fsubr
out
movsb
dec
jb
imul
arpl
dec
nop
in
mov
mov
sahf
sbb
sub
nop
xorl
jbe
xor
sbb
aaa
mov
rcrb
push
gs
xlat
dec
jecxz
cmpsb
aaa
add
mov
hlt
popfw
ficoml
xor
aaa
and
mov
loop
test
repz
cmp
je
push
adc
sub
mov
fidivrs
sub
pop
cli
inc
cmc
inc
dec
sub
into
fwait
jo
cmp
sub
inc
fildl
cmc
inc
xor
pop
popa
push
pop
cs
test
xchg
pusha
pop
pop
dec
cmpsb
cmp
cmp
inc
in
xchg
mov
xor
lret
xor
fdivrp
mov
xchg
push
or
xor
fistps
clc
sbb
sarl
cmp
outsl
adc
dec
mov
icebp
inc
outsl
stos
cwtl
sbb
inc
jne
adc
fxch
dec
outsl
arpl
dec
outsl
mov
ficoms
sbb
iret
inc
cld
jae
push
and
jmp
mov
sbb
mov
xor
xlat
movsl
sti
mov
adc
insl
js
leave
pop
adc
clc
sub
insl
fidivrs
fcoms
fcoml
mov
mul
nop
jp
mov
xchg
je
hlt
mov
dec
or
mov
push
mov
dec
out
pop
mov
and
xchg
adc
out
popa
movsl
xlat
inc
and
loop
dec
roll
push
mov
imul
add
adc
inc
jp
mov
dec
cmp
cld
push
jge
cmp
jge
scas
fwait
push
lea
or
inc
fwait
sub
xchg
or
adc
push
movsl
push
push
xchg
mov
sub
inc
push
lds
fnstenv
mov
pop
mov
fistpll
jbe
pop
ss
sbb
push
dec
in
je
pop
pop
call
sahf
enter
push
adc
adc
aas
pop
mov
test
mov
fsubs
fmull
sbbl
mov
pop
dec
lret
test
add
inc
pop
xchg
movsb
iret
add
inc
test
lret
pop
stos
pop
subb
sbb
testb
xchg
ret
loope,pn
pop
inc
xchg
fisubrl
ja
push
mov
or
sarb
adc
fnsave
call
adc
movsl
sub
jbe
jb
test
mov
inc
mov
mov
inc
inc
xchg
sub
scas
mov
xchg
outsb
or
push
add
ljmp
sub
xor
xchg
int3
or
jae
xchg
and
in
std
cwtl
xor
dec
mov
push
loope
ret
mov
add
mov
mov
enter
sub
inc
fsubl
inc
push
loope
shrb
cmc
sub
data16
adc
xor
rorl
push
and
mov
fcomps
leave
inc
xchg
xorb
mov
xchg
jge
pop
jmp
fstp
cltd
int
jnp
data16
cmp
jae
dec
repnz
popf
sub
neg
ficoms
mov
shlb
push
mov
inc
cltd
xor
cmp
sbb
xchg
mov
stc
jnp
mov
xchg
adc
mov
lds
lods
pop
popf
inc
stc
xor
cmc
cs
add
jg
pop
test
scas
mov
pop
sbbl
jns
sub
call
push
push
arpl
pushf
xchg
ret
adc
aas
bound
or
jb
into
push
in
cs
mov
das
lock
clc
adc
pop
popf
push
lcall
lret
repnz
iret
enter
mov
jp
sbb
dec
out
or
jmp
into
out
ret
shr
mov
push
popf
mov
lret
push
neg
xchg
fldcw
pushw
in
testl
mov
mov
cmc
or
popa
enter
ret
jb
pop
in
mov
outsl
pop
push
xchg
pushf
mov
cmpsb
xor
sub
or
mov
and
mov
mov
dec
pop
cmpl
sbb
divb
adc
mov
rcrb
idivl
xchg
stc
add
shlb
dec
pop
movsb
outsl
xchg
and
loopne
loopne
cltd
fwait
push
es
leave
lret
rcl
mov
adc
jl
or
adc
mul
pop
push
mov
subl
aas
jge
fdivrl
jecxz
std
pop
aaa
sbb
dec
mov
adc
sti
inc
sub
mov
cmpsb
mov
dec
lret
adc
dec
aad
xor
gs
cmc
mov
dec
pop
jl
inc
jae
mov
dec
cmp
repz
call
jno
dec
arpl
and
add
xorb
xchg
push
repz
and
mov
adc
je
mov
sbb
ljmp
sbb
pop
xor
test
out
movsl
pop
inc
xor
inc
inc
sub
ret
cli
adc
in
cmp
pop
hlt
mov
xchg
daa
lods
test
or
bound
cmp
pop
jp
imul
inc
sub
dec
adc
xchg
aas
pop
push
inc
jl
inc
mov
add
les
outsl
mov
xor
pop
into
out
adc
mov
dec
lahf
add
dec
mov
mov
inc
jo
add
sub
movl
dec
adc
out
dec
cli
movsl
or
scas
xchg
les
xlat
jg
sbb
jp
dec
mov
jle
jp
hlt
mov
ja
cmp
mov
cwtl
cmp
out
fisubl
or
mov
iret
jbe
loop
cmpsb
mov
or
pusha
lahf
movsb
enter
mov
cmpb
sub
mov
lret
xchg
adc
out
scas
lret
lea
jge
xor
orl
add
pop
push
fidivrs
popf
mov
subl
dec
push
xor
jae
addr16
mov
mov
xor
je
enter
mov
test
test
xchg
leave
loope
mov
add
xchg
cld
inc
mov
pop
jge
pop
jle
int3
add
lds
cmp
pop
fwait
mov
mov
inc
into
lods
inc
inc
repnz
jo
or
sub
sub
add
outsl
shlb
lret
jp
mov
dec
mov
lods
nop
mov
movsb
in
pusha
or
push
jp
je
push
stos
call
in
in
jo
mov
out
sbb
data16
mov
jp
sahf
mov
mov
push
hlt
adc
ficoms
cmp
mov
outsl
cmpl
ret
push
ret
repnz
lcall
push
insb
sbb
mov
daa
push
xchg
and
cmp
jg
loop
inc
je
leave
aaa
mov
aad
mov
jmp
mov
cmp
mov
out
std
xor
sub
stc
add
je
std
cmpl
cmp
movsl
xchg
pop
insb
lods
xchg
sub
mov
fsubl
in
xor
clc
jp
testb
and
lock
lahf
fidivrs
insl
add
in
clc
inc
or
jno
ret
push
ret
or
repz
test
jno
test
in
push
cs
je
test
sub
mov
mov
mov
cwtl
lock
push
add
add
mov
cmpsl
push
lret
jae
push
enter
mov
cltd
fisttpl
call
rcr
lods
inc
xchg
push
enter
cmp
aad
insl
cmp
imul
sbb
xor
adc
push
pop
or
ljmp
mov
pushf
sbb
out
sti
add
mov
mov
mov
add
insb
iret
ljmp
sahf
pop
xor
icebp
inc
daa
mov
loopne
mov
adc
jecxz
pop
fcomp
scas
jae
hlt
sbbb
cmp
fld
jg
pop
data16
mov
pop
jmp
xor
xor
leave
out
cmpsb
jge
fisttpl
cmc
ret
bound
std
aam
add
push
mov
orb
pop
jnp
nop
adc
mov
fwait
and
mov
push
and
xchg
in
sub
insb
mov
leave
repz
int
jecxz
inc
int3
sub
xchg
sbb
inc
les
mov
xor
into
cwtl
add
adc
ss
mov
bound
mov
push
imul
stos
clc
xor
adc
or
pop
out
cmp
int
out
xchg
mov
pop
aas
es
jecxz
lcall
mov
ss
xchg
mov
scas
in
sbb
dec
pushf
push
iret
push
push
out
inc
out
pop
addr16
add
adc
clc
aaa
push
adc
push
scas
pop
sti
out
cltd
icebp
mov
or
sbb
nop
dec
xor
ss
mov
cmp
in
mov
sub
out
std
add
add
popa
pushf
ret
dec
int3
lret
insl
out
fisttpl
dec
dec
lahf
pop
xchg
sub
adc
sub
mov
push
mov
fmulp
cmpl
imul
push
xchg
push
pop
sahf
imul
ss
push
xor
and
inc
in
mov
repz
test
out
in
cmc
das
pusha
jns
add
xlat
xor
movl
pop
mov
sti
mov
inc
dec
lret
sub
lock
cwtl
sub
dec
or
xor
lret
cmc
pop
loop
and
sbb
pop
xchg
push
mov
outsl
fdivr
adc
pop
mov
int
inc
sbb
shll
mov
sbb
cs
dec
jne
mov
jg
nop
int
jp
mov
or
jle
adc
cmc
cmp
inc
mov
clc
push
into
sbbb
push
push
or
int3
ja
sbb
nop
push
enter
sahf
cwtl
popf
lcall
les
ror
daa
jmp
xor
cwtl
lcall
sub
adc
push
adc
jno
xor
adcl
lcall
inc
pop
jo
push
fsubs
jno
xor
cmp
and
popf
lods
fs
test
nop
adc
aas
jg
fdivs
clc
cld
and
rol
mov
xor
xor
xchg
xor
jns
add
push
in
adc
stc
xor
sbb
stos
adc
mov
mov
pop
mov
scas
lea
aaa
rorb
ret
jl
inc
push
in
mov
xchg
out
andl
and
mov
xor
add
fdivrp
int
daa
and
dec
mov
sub
fwait
dec
icebp
out
pop
imul
inc
aaa
cmc
in
cmpb
mov
add
xor
pop
jae
jecxz
lret
xchg
imul
adc
jne
push
in
cmpb
dec
repnz
cmp
divb
push
mov
xchg
jle
push
cmc
adc
or
pop
mov
and
nop
in
sahf
sbb
sub
dec
or
bound
cmp
jle
call
xor
imul
adcl
cwtl
adc
jp
cmp
arpl
xor
data16
insb
int3
jo
pop
xchg
adc
or
sub
mov
arpl
xchg
and
pusha
push
lods
sub
sahf
sbb
or
test
mov
jb
and
sbb
aad
add
arpl
xchg
pop
imul
enter
mov
jnp
fadd
push
mov
xchg
sahf
add
stc
adc
cli
repz
in
ret
bound
mov
test
jp
pop
aas
lock
lea
leave
or
out
imulb
addr16
mov
aaa
cld
pop
out
inc
js
sub
mov
shll
push
inc
cli
sbb
cltd
push
cmpsl
aas
aam
sbb
or
adc
jg
daa
mov
sub
aam
scas
push
or
pop
scas
ficoms
mov
rcrb
je
adc
or
or
adc
xchg
stos
jnp
into
jo
or
movsb
aam
test
jnp
jle
sbb
lret
sub
lods
mov
mov
mov
test
jnp
jnp
ret
ret
and
xor
sub
es
incb
test
clc
jne
es
adc
fistpll
addr16
cmp
bound
mov
das
push
xor
or
aas
adcl
inc
mov
push
sbb
in
rcl
inc
je
cld
pushf
mov
popa
aad
pop
push
cmp
fs
mov
mov
mov
adc
outsb
pop
xchg
aam
je
xchg
lahf
pop
shll
dec
sub
jae
in
fistpl
icebp
popa
cwtl
inc
and
rorl
dec
lock
hlt
imul
inc
fbld
mulb
pop
add
repnz
mov
jg
mov
bound
mov
push
inc
sub
and
sbb
mov
daa
pushf
mov
sti
ljmp
jno
stos
inc
aam
and
cmp
push
mov
int
xlat
inc
sub
aas
jg
xor
lock
sahf
test
xor
ljmp
cltd
adc
inc
push
cmp
mov
dec
cmp
pop
push
stos
out
pop
pop
lahf
lcall
xchg
inc
cld
addb
mov
mov
jo
mov
xchg
jle
xor
fcompl
out
mov
and
cmpsb
addb
xor
push
pop
imul
loope
or
iret
rol
out
add
lcall
jge
adc
sbb
popf
push
fimuls
push
mov
xchg
xchg
adc
dec
aas
jg
push
mov
adc
dec
mov
fnstcw
pop
dec
xchg
mov
ss
decb
fs
std
iret
fmull
xchg
out
fcmovu
or
fxch
add
mov
in
jbe
inc
jns
pop
xor
gs
dec
repnz
jge
int3
std
push
imul
testb
xchg
jmp
jnp
mov
adc
xchg
shll
cmp
inc
int
jl
ret
inc
mov
stos
cmp
movsl
stos
mov
lods
loopne
or
pop
shlb
mov
jnp
pop
ret
cwtl
pushf
jl
push
lods
bound
jecxz
cmp
mov
xor
cs
or
enter
or
out
ret
and
and
dec
mov
sub
mov
xlat
mov
sbb
cltd
outsl
leave
dec
mov
mov
lcall
in
push
hlt
mov
dec
outsl
lcall
push
lds
stc
les
adc
lds
sahf
subb
add
inc
mov
iret
jl
mov
cmp
xor
mov
xlat
pushf
dec
inc
mov
dec
jb
cmpsb
gs
and
stos
mov
lock
inc
inc
lret
and
add
xchg
jne
popa
andb
roll
xlat
xchg
dec
sbb
subl
adc
pop
add
call
pop
lods
shll
mov
and
scas
sbb
aad
loopne
jb
rol
push
add
int
jnp
xchg
push
dec
std
lods
push
sarb
adc
adc
test
push
data16
sbb
loopne
mov
shlb
add
mov
sbb
out
out
clc
ret
fs
clc
xor
xchg
hlt
sub
rep
and
mov
bound
popa
inc
and
lock
movsb
cld
push
das
cmpxchg
out
adc
mov
pop
and
cmp
hlt
mov
daa
dec
xchg
and
jne
in
add
cmp
das
dec
adc
inc
daa
cltd
ja
add
jb
test
push
xor
cmpsl
jno
clc
dec
enter
std
lods
xor
xchg
xchg
pop
or
xlat
loope
cmp
out
mov
sub
daa
cs
lret
orl
inc
enter
mov
xchg
pop
cmpsb
dec
popf
mov
movsl
xchg
divb
imul
jno
inc
xor
cld
jb
jno
leave
shll
stos
mov
cmp
neg
clc
shl
mov
roll
ret
sbb
mov
mov
xor
sbb
iret
xchg
stos
aas
mov
adc
cli
sbb
push
dec
push
mov
fs
adc
idivl
and
es
fnstenv
and
add
mov
daa
fadd
lret
div
pop
jge
insl
mov
lods
aam
xor
xchg
es
outsb
ja
or
sub
repnz
rorb
cmp
or
loop
dec
push
loopne
jne
mov
repnz
loope
add
cld
dec
push
or
insb
cmp
and
sub
daa
popf
out
mov
subl
jp
in
xchg
mov
and
sub
mov
and
ret
fisttps
mov
sub
push
mov
movsb
pop
sbb
xor
mov
jne
dec
lcall
enter
aam
push
in
hlt
push
rclb
dec
jbe
jl
std
push
cs
stc
fwait
hlt
and
mov
mov
inc
sbb
jb
pop
pop
xchg
push
jl
or
je
cmc
adc
repz
popf
sub
dec
ret
adc
pop
mov
rol
sbb
outsb
xchg
push
xchg
cmp
outsb
dec
xor
mov
mov
sbb
sahf
pop
pop
and
dec
mov
test
add
cmp
inc
lcall
push
std
cli
mul
cmp
in
cmp
stc
or
fcompl
and
dec
scas
pop
call
mov
andb
mov
xchg
and
xchg
push
adc
inc
dec
push
mov
movsl
jg
mov
popf
jge
jb
loop
xchg
mov
dec
dec
pop
clc
shll
dec
jbe
ret
icebp
push
xchg
and
fldl
or
sub
pop
sbb
lea
jo
rcll
pop
in
popa
jmp
mov
adc
into
lods
test
outsl
pop
xor
addb
stc
repz
test
loop
sti
pushf
adc
popf
sahf
je
sub
lock
dec
sbb
mov
push
loope
sub
add
testb
push
push
fstpl
das
out
outsb
daa
cmpsb
add
insb
aam
xor
dec
jl
out
adc
mov
dec
adc
sbb
je
and
test
nop
sbb
stos
or
pusha
add
jmp
inc
sahf
dec
sub
adc
std
fs
cmp
xor
movsl
int3
mov
mov
and
dec
fwait
and
mov
leave
daa
sub
ja
mov
out
mov
adc
iret
lret
jmp
lahf
out
movsb
adc
xchg
xlat
iret
out
add
add
inc
lods
jg
dec
jno
add
fiaddl
divb
xor
inc
jno
mov
mov
fnstsw
add
loop
add
inc
addl
xchg
and
aaa
jmp
and
mov
mov
dec
fsts
in
add
xor
outsb
inc
xchg
inc
xor
sub
xchg
jb
loope
outsl
inc
mov
and
loope
dec
fcoml
push
cs
adc
int
adc
je
insl
jne
xor
ret
cmpsl
into
xorl
lock
fwait
mov
push
xchg
mov
fisubrl
ljmp
lea
in
cli
faddl
lods
inc
sbb
loop
repnz
sti
cmc
xor
mov
ds
adc
mov
call
movsl
in
xchg
in
addr16
pop
push
icebp
mov
test
cmp
aad
pop
sarb
lcall
jae
inc
loop
aad
jbe
lret
inc
or
das
xchg
push
iret
mov
mov
and
sub
push
cli
jbe
cmp
push
imul
ret
out
and
int
add
pop
clc
sbb
lret
fnstenv
or
push
test
rolb
inc
xlat
jno
xchg
cltd
aaa
cmp
add
mov
push
stos
xchg
pop
mov
std
jae
mov
cmp
and
adc
mov
dec
fildll
inc
arpl
into
ljmp
loop
mov
or
mov
and
out
mov
inc
in
push
inc
jp
sbb
ficoms
jno
xchg
dec
add
ficoms
aas
rcr
hlt
xor
jnp
test
andb
or
fcmovnu
pop
dec
push
test
mov
inc
adc
inc
cltd
sub
test
js
and
and
in
xchg
push
scas
fdivl
or
shll
scas
int3
mov
pop
rclb
sub
xchg
repnz
addr16
call
xor
push
adc
add
sahf
lods
mov
cmpsl
mov
int
mov
mov
xchg
gs
sbb
fcmovbe
mov
mov
mov
testb
xchg
testb
ret
enter
mov
aam
sar
pusha
cmpsb
sub
movsb
out
adc
sbb
fcom
rol
les
mov
pop
adc
mov
aaa
dec
xor
pop
jge
cmp
mov
add
or
test
push
clc
outsb
test
out
pusha
fsubl
inc
push
mov
in
or
mov
sahf
adc
fiaddl
movsl
in
pop
movl
cmc
or
mov
push
int3
sub
add
jecxz
lret
add
xchg
clc
ret
or
sarb
sub
cmpsl
jae
sbb
sbb
icebp
and
ret
add
and
add
decb
sbb
or
mov
sbb
cltd
xchg
test
xlat
ljmp
lret
sbb
mov
stos
cmpsl
ret
popa
rorl
mov
xchg
cmpsl
lea
jno
cmp
test
into
inc
pop
xchg
ja
jle
mov
pop
mov
insl
mov
cmp
stc
stc
mull
lods
jb
sbb
bound
int
or
js
addb
adc
pop
stc
enter
xchg
shlb
or
mov
mov
pop
pop
push
movsl
fcmovb
iret
gs
ret
xchg
std
sbb
repnz
dec
int3
mov
leave
outsb
into
leave
psubusw
jle
out
enter
sti
jecxz
divb
adc
and
arpl
mov
call
mov
inc
xor
push
call
cwtl
cld
xchg
inc
movsb
dec
sahf
test
jle
add
xlat
adc
push
sub
or
xor
icebp
lods
pop
pusha
lock
jp
jnp
push
cmc
adc
mov
cld
aam
push
pop
or
fdivl
pop
ds
aas
xchg
ret
lahf
jp
ja
xor
push
insl
dec
fstpl
cmp
clc
iret
enter
cltd
dec
and
mov
fwait
iret
pop
sbbl
and
addb
push
in
rcrb
pusha
and
int
mov
sub
xchg
cmpsb
ret
bound
aam
lock
jmp
mov
xchg
adc
loope
dec
fldt
mov
fildll
lds
inc
insb
adc
stos
aad
push
push
fisttpl
mov
dec
loop
push
dec
sub
pop
clc
pop
mov
and
rolb
roll
stc
pop
or
xor
and
incl
pop
or
xor
loop
xor
cmpsw
add
mov
ret
push
stos
das
rolb
sub
adcb
insb
pushf
loop
push
adcl
fdivrs
into
push
jmp
jno
loopne
ja
mov
mov
shl
daa
add
push
shr
jp
hlt
xor
lods
fwait
aas
dec
cs
cmp
cli
mov
testl
push
scas
aam
and
inc
cmp
lods
flds
insb
jge
push
pop
mov
mov
stos
icebp
outsl
bnd
js
lea
mov
nop
inc
and
xor
lcall
mov
sbb
push
push
in
es
stos
fcmove
rolb
out
xchg
jns
pop
xchg
jnp
test
out
lcall
sub
xor
dec
scas
mov
add
in
sub
idiv
insb
fdivrl
pop
andb
jne
pop
jae
clc
cmp
dec
icebp
fimull
hlt
inc
mov
pop
ret
push
mov
pushf
in
jnp
inc
setbe
rcrl
sub
dec
or
lcall
gs
lret
jns
jno
ljmp
sub
xchg
push
or
jns
mov
push
pop
mov
lahf
inc
repnz
into
pop
aad
pop
push
pop
mov
les
popf
ss
adc
pop
imul
bswap
sbb
js
add
call
mov
imul
shld
dec
jb
inc
mov
xorb
mov
cs
lahf
movsl
push
or
sbb
das
xor
out
in
arpl
jmp
test
in
out
push
iret
or
rolb
sub
iret
cmp
jno
aas
sub
xor
inc
inc
jmp
sbb
pop
test
test
imul
lret
push
lahf
lret
ja
imul
fs
test
popa
push
cmpsl
jl
sbb
and
xchg
dec
mov
loope
mov
sti
shl
pop
pusha
cmp
out
sbb
lods
xchg
icebp
cmp
outsl
insb
sub
sub
addb
dec
mov
xor
jmp
inc
in
mov
rolb
sbb
fwait
cmpsl
sbb
stos
test
jns
movsl
cmpsl
aam
test
and
icebp
jmp
stos
in
dec
aaa
xor
leave
pop
and
mov
mov
popa
adcl
lret
push
aas
or
add
faddl
jnp
cld
mov
cmpsl
ret
adc
aaa
fcomps
mov
aad
stos
mov
fincstp
jl
push
jp
mov
daa
sbb
adc
fdivrl
mov
imul
and
inc
pushf
mov
xchg
xchg
push
mov
pop
test
xlat
pop
mov
mov
sbbb
xchg
mov
mov
xlat
enter
jge
or
gs
xor
loope
jecxz
imul
xchg
ficompl
int
fsubrs
das
add
andl
sub
jmp
les
ret
nop
data16
cmp
hlt
std
pop
cmpl
xor
ja
sahf
mov
scas
mov
rorb
cmc
test
aam
inc
ss
jbe
mov
roll
push
or
push
dec
dec
xchg
jne
dec
mulb
or
xchg
aaa
lea
insl
call
xchg
loope
leave
das
add
mov
jns
outsb
outsl
roll
ret
push
ja
sti
xchg
pop
sub
inc
mov
insl
aas
fisttpl
xor
int3
add
or
pop
hlt
movsl
mov
mov
push
sahf
inc
and
xor
or
mov
inc
or
aas
fcom
pop
mov
push
ret
int3
lea
stc
add
sub
inc
test
add
rcll
test
sbbl
dec
cmpsb
xorl
pusha
inc
mov
pop
inc
pushf
adc
cli
cmp
mov
add
fldl
lds
mov
sbb
mov
les
or
ss
pushf
mov
andps
aad
cmc
or
jae
or
test
mov
jp
out
test
out
and
loope
lods
movsl
or
push
mov
push
imul
xchg
mov
xchg
sub
fldt
adc
es
push
js
jae
cmp
aaa
hlt
inc
data16
inc
ljmp
lds
inc
dec
sarb
xorb
aas
cmc
mov
sahf
mov
xor
dec
or
xchg
shl
ficoms
filds
jno
ret
dec
inc
xor
lahf
sbb
into
xor
xchg
add
push
notl
subb
jae
test
sbb
inc
xor
ret
sbb
mov
loope
aad
lret
jmp
jecxz
sub
lret
lods
mov
outsb
out
sub
push
rcl
dec
push
clc
fwait
dec
jp
rol
and
dec
jg
lea
add
rcr
lds
insb
scas
xchg
jge
mov
idivl
and
dec
imul
fmulp
shlb
shlb
into
out
mov
mov
ficomps
jmp
sbb
push
cmp
lea
pop
or
inc
les
mov
adc
jb
and
and
insb
stos
cmp
xacquire
aas
adc
lret
les
mov
adc
inc
jne
jge
ret
lods
inc
jp
sbb
dec
out
xchg
sbb
lret
fcoms
add
add
mov
loop
mov
mov
lds
jecxz
inc
in
add
pop
ja
fistl
xchg
xor
icebp
mov
outsl
aaa
push
mov
lods
add
push
cmp
movsb
sbb
add
sub
and
inc
icebp
sti
data16
xchg
dec
sub
outsb
add
out
xchg
js
das
ja
push
int
scas
lods
sbb
adc
pop
mov
xchg
pop
repz
xor
cltd
lret
pop
xor
out
jns
add
scas
lahf
inc
push
mov
dec
iret
sahf
outsb
in
sbb
aad
and
sahf
repz
negb
test
aas
jg
xchg
int3
ss
xlat
mov
jne
call
jns
and
cwtl
repz
cmpl
xchg
inc
out
inc
xchg
das
fcomp
mov
sbb
ss
in
popf
dec
fwait
add
xchg
cli
inc
hlt
lea
sbb
cli
mov
cs
sbb
lret
xor
dec
add
mov
xlat
andl
add
stos
nop
xchg
adc
shll
add
push
lret
ljmp
jo
xor
cli
ja
xor
push
out
stos
add
sbb
inc
lds
dec
pop
mov
scas
sbb
inc
dec
movsl
out
mov
xchg
stos
mov
adc
sbb
jo
das
dec
sahf
cltd
fistpll
push
push
fmuls
js
mov
ret
pop
cmp
ja
mov
movsb
mov
insb
andl
mov
fxch
enter
stos
push
int
pop
outsb
into
in
and
repz
addb
popa
negl
dec
enter
cld
scas
cmp
push
inc
js
dec
dec
mov
or
xlat
push
adc
fstpl
std
das
pop
dec
in
xchg
in
xchg
sbb
push
jnp
xor
loop
incb
sub
repnz
mov
sbb
cli
mov
gs
lds
sbb
and
subl
out
add
in
sbb
imul
aam
cmc
adc
jb
mov
rcrb
pop
outsl
and
push
sahf
inc
cmp
dec
mov
mov
push
push
mov
jnp
roll
pop
inc
in
loopne
das
adc
jbe
jns
cli
std
cld
dec
cmpsb
rcr
xchg
data16
sbb
lock
inc
sarb
xchg
mov
xchg
les
div
aad
or
jmp
sub
cmpxchg
adc
xlat
pop
inc
ljmp
arpl
int3
mov
xchg
xchg
ror
test
imul
push
imul
nop
mov
dec
loope
inc
aaa
imul
aas
adc
inc
mov
jb
int
pop
mov
les
dec
inc
mov
pop
arpl
dec
xor
xor
inc
cmp
xor
jge
rcrb
xor
enter
and
or
aaa
cmp
aad
inc
fildll
sahf
iret
adc
shlb
lds
shrl
scas
xor
stc
in
inc
mov
cld
sub
inc
pop
imul
add
cld
imul
mov
push
arpl
mov
pop
sbb
sti
cmp
sbb
pop
hlt
clc
mov
clc
jle
fbstp
ror
or
lret
out
or
call
mov
cmpsb
mov
jno
push
pop
pop
cld
sbb
imull
mov
push
push
add
jns
sahf
in
jbe
ret
mov
xchg
repnz
xchg
pop
out
cmpsl
aaa
sbb
mov
xor
ja
movsb
movsb
inc
mov
fcom
mov
sahf
pop
ljmp
jg
mov
lahf
mov
pop
xchg
leave
inc
push
push
filds
inc
sbb
jge
shrl
mov
push
outsb
jl
push
fdivs
std
push
or
shlb
fistpl
xlat
and
ret
movsb
jl
mov
dec
pusha
inc
add
xor
insl
dec
dec
push
cmp
fistps
adc
push
loop
mov
test
fdivs
pop
imul
rorl
mov
and
imul
adc
cmpsb
sub
mov
adc
mov
cmpsl
ljmp
rcrl
testb
push
add
push
jge
sahf
cmp
cltd
popf
dec
fwait
pause
int3
pop
stc
cmp
scas
adc
mov
dec
in
lret
and
push
sub
mov
or
push
push
rclb
data16
adc
mov
mov
jae
insl
lock
push
sub
push
sub
push
insb
inc
ja
lods
and
push
jno
cs
daa
sub
ds
add
test
shll
push
js
push
push
fidivrs
cld
jo
scas
xchg
arpl
inc
push
mov
cmp
les
or
dec
xchg
xchg
inc
dec
mov
xchg
jb
clc
stos
adc
xchg
dec
pop
add
mov
stc
js
mov
rorl
push
rolb
xchg
mov
mov
shlb
popa
dec
add
push
mov
pushl
or
cmp
testl
fldenv
sub
lods
lahf
push
push
out
mov
dec
dec
mov
insl
insl
in
int3
out
shlb
nop
int3
aad
arpl
and
pop
test
cli
or
sub
cmpsl
xchg
leave
xor
iret
jl
jo
xor
mov
sbb
fcoms
mov
in
cmp
out
cmpsb
loop
adc
negl
sub
jo
adc
pop
pop
cmp
or
sbb
pop
inc
pop
in
or
shlb
jno
pop
push
jbe
int
pop
lods
pop
sub
dec
pop
xor
dec
popa
pop
push
mov
dec
rcrb
xchg
std
sub
mov
enter
fwait
sbb
cmp
test
push
mov
sbb
inc
pop
xor
adc
out
bound
sub
mov
add
fistl
mov
pop
subl
dec
mov
rorl
data16
fistl
out
jle
sub
insl
test
or
rorl
push
popf
aas
fs
add
sbb
ljmp
dec
int3
mov
lods
dec
mov
enter
mov
lods
cld
lret
test
out
xchg
pop
rorb
insb
or
add
in
scas
cld
mov
das
pop
push
pop
aaa
movsb
lret
or
mov
pop
mov
add
jae
int3
dec
jl
sbb
sti
cli
popf
push
lods
mov
lcall
jmp
aas
aaa
int3
adc
sahf
mov
or
aam
clc
inc
subb
mov
pop
sahf
cmpsl
es
int3
fidivrl
nop
push
cmp
fwait
xchg
iret
jl
adc
pop
jns
lds
inc
testl
scas
stos
int
mov
add
add
and
cld
and
int
mov
pop
popa
push
sarl
sub
pop
add
rolb
pusha
rclb
add
push
push
push
or
cld
mov
cmp
out
adc
jmp
nop
push
loope
mov
stos
faddp
mov
dec
pop
sahf
roll
xor
jle
leave
sbb
fdivl
push
into
out
cmp
pop
or
jle
push
sbb
test
sarb
ljmp
cwtl
cmp
push
pop
je
or
ljmp
mov
in
insl
jns
pop
add
loope
pop
adc
inc
test
mov
ffreep
scas
fdivrs
mov
mov
xchg
push
push
and
lods
clc
sub
call
inc
js
ljmp
dec
icebp
mov
xor
inc
xlat
and
and
call
mov
dec
lods
icebp
dec
lret
js
cli
adc
dec
rorl
and
test
pushf
dec
pop
stc
jge
push
add
adc
cmp
fstpt
mov
hlt
add
fidivrl
test
stc
inc
in
dec
hlt
fidivl
cwtl
cld
sub
outsl
out
cmc
xor
adc
mov
jg
fwait
and
push
push
sti
adc
lods
sub
dec
jnp
adc
std
les
mov
jae
add
lahf
jg
or
pop
jb
shll
fwait
push
int3
inc
cwtl
shll
call
orl
fwait
mov
cmp
loopne
pop
ja
movsl
loopne
insl
cmp
mov
inc
jmp
or
fbld
adc
mov
aas
dec
cmp
inc
in
lods
test
repz
loopne
mov
or
xor
andb
jno
push
insb
push
pushf
jge
xchg
aas
xlat
push
or
icebp
pop
popa
jno
xchg
aam
adc
ficomps
pushl
pop
andb
mov
out
stc
pop
stos
ret
mov
sbb
inc
pop
stc
mov
pop
xchg
lret
fnsave
ljmp
in
ja
nop
push
rorl
xor
fsubs
or
fnstenv
shll
fwait
pop
push
pop
sbb
mov
iret
and
or
sbb
sub
cmp
movsl
lahf
hlt
jno
dec
fmull
dec
inc
mov
enter
inc
out
jecxz
sahf
cltd
push
add
icebp
dec
adc
cmpb
sbb
push
inc
movl
mov
dec
lret
imul
cmpsl
jg
into
jecxz
xor
loopne
or
mov
ficoml
add
adc
ljmp
mov
push
cli
push
sub
xor
addr16
pop
leave
adc
js
inc
lds
mov
pusha
xor
pushf
shll
adc
lea
nop
aaa
pop
icebp
jl
ljmp
movsb
xchg
fnsave
mov
das
xor
push
iret
ret
mov
mov
xor
jbe
xor
mull
clc
inc
ss
insb
lret
jne
push
mov
xchg
fsubrl
icebp
sbb
mov
push
push
fbld
jge
stc
movsb
or
outsl
insb
rorl
add
cli
push
cmc
pop
popf
adc
mov
daa
in
out
int
pop
icebp
bound
pop
in
dec
sbb
test
jmp
popf
jo
je
pop
gs
data16
xor
adc
shr
xchg
aaa
pop
adc
jb
and
mov
je
add
jecxz
leave
pop
sti
clc
daa
ljmp
sbb
mov
cmp
cmpb
popa
sub
mov
push
and
clc
insl
popf
jb
and
pop
mov
rolb
inc
push
add
out
daa
push
imulb
mov
test
in
adc
xchg
inc
lret
push
ror
mov
push
lds
fldenv
outsb
fidivs
sub
add
or
test
movsl
inc
inc
adc
inc
dec
icebp
jge
sahf
in
repnz
xchg
ret
mov
in
stc
xchg
dec
sbb
mov
mov
int3
push
movsb
clc
pop
sub
xchg
imul
push
stc
mov
jnp
pop
popa
mov
cmc
in
repnz
or
pusha
mov
sub
add
jecxz
das
push
mov
int3
popf
cltd
sub
xchg
int
cld
ret
scas
mov
dec
adc
cmp
int
sbb
add
rclb
std
leave
jo
mov
jo
sbb
jbe
clc
mov
adc
pop
xlat
addb
paddb
lock
test
mov
sahf
push
outsb
xor
add
dec
push
sbb
mov
cmc
mov
pop
pop
or
cmpb
cmp
lret
test
fildll
sbb
dec
sub
movsb
cmpsl
into
pop
outsb
sub
in
rcrl
pop
inc
movsb
push
mov
pop
sti
outsl
fidivrl
jp
inc
xchg
loope
and
mov
lahf
pushl
and
gs
push
push
lahf
popf
in
popa
pop
push
fadd
cld
ficomps
dec
lret
and
xor
mov
testl
icebp
pop
aad
or
and
jb
cli
pop
and
jg
cmc
notl
cmc
adc
test
stc
add
ja
cmc
mov
std
gs
sbb
xchg
test
sub
mov
aas
std
pop
into
jmp
lods
flds
and
into
mov
pop
enter
insl
push
jne
sbb
and
dec
push
lds
iret
inc
flds
xchg
sub
fldl
ret
rorb
pop
mov
dec
push
push
popa
xor
mov
adc
dec
rcrl
or
ret
subl
jmp
jns
pushf
bound
popa
push
les
mov
outsb
add
sub
mov
cmp
pop
nop
sbb
push
ret
push
xchg
adc
sub
fwait
lods
mov
test
jl
out
repz
jp
enter
nop
xchg
or
sbb
mov
aaa
call
jb
add
stos
icebp
in
popf
mov
inc
inc
stos
xchg
jb
add
mov
pop
add
in
je
out
arpl
mov
movsl
ja
dec
adc
je
emms
aad
mov
cwtl
add
aas
cmp
sub
cmp
adc
imul
cs
cmp
mov
cmp
jb
mov
xchg
sbb
or
das
fcomp
xchg
mov
pop
rcll
jl
pop
repz
aas
fnstcw
adc
int
inc
insl
or
push
call
aad
and
mov
shll
pop
and
insb
ja
outsb
jmp
sti
mov
out
loope
jns
ror
xor
pop
adcb
xchg
dec
push
or
jle
cmp
out
stos
lcall
mov
popf
pop
add
test
jecxz
repnz
dec
mov
sarb
inc
ficoml
loope
jge
jb
shrl
jae
xor
xor
lahf
nop
outsl
sub
mov
cli
pop
mov
push
rcrb
pop
andb
inc
ds
cmpb
rolb
pop
ja
jb
lcall
js
sbb
iret
xchg
and
push
sub
pop
or
mov
in
xor
cmp
sub
cmp
arpl
gs
jno
jmp
dec
sbb
cmpsl
cltd
cld
dec
repz
xchg
rolb
daa
push
ds
movsl
jns
push
rol
add
inc
or
outsb
gs
mov
xorb
in
push
mov
cmp
xorl
iret
imul
adc
es
test
jle
insb
xor
cltd
ret
or
or
mov
xchg
adc
test
mov
mov
loopne
daa
mov
sbb
xchg
stc
push
ljmp
jae
add
rcrl
cmp
inc
cs
iret
push
cmp
push
stc
popf
lret
fdivl
adc
fistpll
loop
fsubs
ljmp
lock
mov
cltd
cmp
mov
sub
push
push
mov
scas
mov
pop
adcb
mov
mov
out
scas
mov
mov
iret
mov
out
jecxz
test
push
out
cwtl
int
mov
mov
push
fildl
sbb
ret
mov
imul
push
add
adc
fdivr
adc
or
loop
or
mov
lcall
je
pop
es
sbb
sub
aaa
mov
push
rclb
shl
rcrb
mov
test
cmpsb
and
xor
fwait
push
aam
adc
pushw
cmp
nop
or
cld
aam
cmpsl
xchg
arpl
xchg
cld
jbe
hlt
adc
add
lret
repz
lock
hlt
aad
test
sub
pusha
out
out
orl
cmp
sub
and
pop
dec
adc
jge
mov
test
jno
jge
inc
sub
pop
inc
rcr
add
pop
push
xor
inc
test
inc
popf
cli
fstpt
pop
sub
mov
insl
mov
pop
repz
cmp
add
mov
push
xlat
xor
jmp
fildl
mov
fldenv
fwait
outsl
fstps
inc
ss
stc
data16
call
sub
movsl
ja
and
mov
stos
or
outsl
push
in
ss
inc
adc
mov
sbb
decb
clc
xchg
pop
push
mov
in
lds
loop
jnp
cwtl
jl
test
ljmp
jb
fucomp
les
add
outsl
pop
in
cmove
popa
fsubs
dec
adc
lods
mov
test
or
loop
cwtl
shlb
pushf
subb
pop
sbb
dec
stc
repnz
cwtl
aas
outsl
into
in
push
sbb
pop
xlat
adc
test
jle
xchg
scas
test
xor
movsb
mov
ljmp
sbb
dec
lock
fnsave
sbbl
fwait
call
lods
inc
mov
sub
push
sub
mov
test
adc
add
mov
icebp
dec
das
aas
inc
orb
adc
mov
mov
xor
clc
outsl
nop
add
adc
push
mov
mov
test
into
jbe
lahf
cli
sbb
mov
in
push
and
adc
aas
pushf
outsl
jbe
and
cmpsb
or
test
push
ret
inc
pop
scas
lret
push
int3
pop
jno
jmp
xchg
scas
ret
xor
dec
test
shrb
mov
cmp
lods
sbb
mov
jno
iret
mov
insl
add
jo
cmp
inc
inc
ret
adc
cmp
sub
jbe
and
out
das
ret
rcrb
imul
shrl
loop
into
jne
jo
lea
mov
std
cmp
mov
xor
cwtl
mov
add
in
std
and
incb
mov
xor
es
cmpsl
push
dec
movsl
dec
scas
cmp
sub
test
test
lds
popa
xor
mov
out
sub
lcall
flds
je
and
dec
pop
lcall
xlat
add
lahf
push
jnp
xchg
fdivr
js
das
cmp
sub
popf
addr16
ret
lds
dec
aad
insl
hlt
enter
dec
sbb
in
push
into
sub
ss
push
fbld
arpl
mov
mov
bnd
push
and
enter
iret
push
imul
push
pushf
xorb
jg
stc
mov
cld
mov
lock
xchg
ss
out
repz
cmp
stos
data16
xchg
jmp
leave
and
inc
xchg
iret
aam
pushf
jl
jge
inc
scas
rclb
insb
lds
xor
pop
add
jo
mov
inc
aam
or
xor
mov
add
sahf
xor
sbb
nop
sub
mov
into
popf
xlat
lds
cmp
adc
pop
sahf
pop
mov
lret
adc
mov
jg
jg
jmp
enter
mov
insl
divb
sub
enter
dec
mov
shrl
jecxz
in
lods
mov
lock
mov
aam
mov
cmp
cmp
mov
and
dec
ljmp
aaa
or
mov
mov
imul
and
mov
outsb
push
fadd
stc
cmp
rcll
push
or
xor
mov
mov
test
push
das
jbe
lock
sbb
call
cmp
push
movsb
pop
dec
dec
add
das
jmp
xchg
add
loope
dec
ljmp
rorl
adc
sub
fiadds
pop
lret
popf
inc
pusha
xchg
inc
aas
jno
stos
mov
add
movsb
push
mov
xor
push
mov
out
bound
cld
lock
out
das
pushf
push
sbb
cmp
mov
or
push
popa
movsb
xchg
jne
jns
cmc
add
leave
pop
adc
in
lret
pop
lods
iret
inc
xor
repnz
pop
loopne
add
lock
jle
mov
sub
inc
cld
lahf
jb
popa
add
clc
or
jnp
icebp
arpl
or
mov
cmpsl
das
filds
pop
pop
daa
loope
rolb
ss
mov
imul
fwait
and
es
pop
mov
xchg
shll
bound
jnp
inc
ret
fildl
push
insb
loope
or
orb
cmp
add
rorl
jnp
mov
xor
inc
mov
lea
out
fisubrl
cmp
pop
push
sbb
mov
fcmovnu
add
icebp
add
jg
mov
adc
xchg
add
jno
mov
adc
dec
pusha
lea
test
sub
jg
aad
dec
adc
fcmovnbe
lret
ret
inc
repnz
sub
sbb
push
push
fwait
clc
out
ss
into
pop
sub
cmpl
sbb
xor
add
addr16
rcr
xchg
test
mov
inc
pop
adc
jbe
adc
xor
or
stos
jo
mov
add
xlat
das
lock
lds
xchg
mov
in
lcall
dec
pop
gs
xchg
mov
je
and
imul
aam
addb
xchg
outsb
adc
adc
in
xlat
add
sbb
xchg
mov
icebp
mov
out
nop
adc
aam
fwait
mov
and
fsts
mov
cmp
test
mov
pop
jge
ret
shr
popa
lods
mov
mov
dec
scas
jl
mov
xor
mov
aad
es
jle
popf
cmp
leave
inc
sub
inc
cmpsl
clc
sbb
push
cli
and
fcmovbe
sbbl
dec
sbb
ds
inc
sbb
dec
call
sbb
jmpw
shlb
jge
adc
adc
mov
adc
outsl
inc
adc
sbb
xor
jae
int3
mov
pushf
fnstsw
icebp
mov
int3
sbbl
mov
push
adc
pop
fldenv
mov
imull
outsl
flds
sub
add
ss
push
scas
and
ret
cmp
lea
into
add
push
push
mov
adc
dec
or
fcmovnb
mov
es
inc
and
xchg
or
mov
mov
es
ficompl
sub
stos
adc
mov
sbb
inc
cmpsb
imul
aad
jecxz
fdivrs
sub
mov
subl
sbb
dec
mov
push
rorb
cmpsb
aas
sbb
scas
mov
shl
pop
mov
pop
nop
mov
cltd
xlat
mov
pop
loop
pop
push
cmc
addr16
and
cli
ss
or
jns
mov
neg
ja
dec
lret
add
inc
out
or
xchg
aam
adc
sbb
mov
iret
iret
bound
xchg
aam
sub
pop
stc
insl
jnp
cmp
mov
scas
ja
dec
loope
push
aas
xchg
repnz
mov
aam
fdivl
adc
fdivrs
sub
dec
cld
xor
scas
mov
idivb
outsb
or
aas
pop
and
cmpsl
cli
mov
cmp
xchg
lock
pop
push
dec
xchg
pop
mov
mov
pop
stos
ljmp
xor
add
jl
fidivrs
pop
mov
call
fmuls
ret
arpl
ret
xor
jbe
lret
fmull
xchg
int3
mov
mov
je
xor
outsb
into
test
pop
nop
pop
aam
bound
pop
push
sbb
mov
mov
imull
mov
mov
push
mov
in
or
je
es
xchg
and
je
adc
pop
jo,pn
shl
jb
popa
ret
outsl
outsb
and
jb
or
mov
add
cmp
mov
fidivl
add
inc
mov
xor
loope
jo
out
mov
popf
adc
gs
inc
mov
imul
dec
mov
mov
adc
sbbb
les
sub
and
sbb
mov
jle
orb
mov
push
inc
adc
mov
dec
in
mov
push
sbb
int3
stos
inc
insb
and
dec
xor
mov
add
sahf
faddl
mov
loopne
sbbb
add
pushf
pushf
int
movsl
mov
repz
in
and
pop
test
loope
push
flds
out
add
aam
xor
cmp
jmp
outsb
push
xchg
fs
sbb
int3
inc
cmp
jmp
out
sub
jp
jb
xor
hlt
repnz
push
and
xchg
daa
in
inc
lcall
lods
or
add
sub
cmp
mov
ds
in
das
hlt
ja
scas
aaa
ret
add
jle
add
mov
push
orb
dec
lds
gs
pop
sbb
rcrb
pop
pop
xor
jmp
adc
inc
es
sbb
stos
call
fwait
xor
inc
int3
add
dec
mov
dec
mov
push
jb
mov
mov
adc
push
cmp
test
and
or
out
inc
push
push
cmc
aas
dec
stos
rorb
out
xchg
fs
fsubp
pshufw
les
clc
and
cmc
dec
push
call
push
cmp
inc
dec
dec
cmp
lods
rol
dec
mov
int3
push
adcl
pop
insl
pop
xchg
rcll
mov
sub
rolb
or
xor
or
stos
pop
mov
jp
or
call
cmpsl
dec
mov
sub
pop
add
inc
or
or
ds
sbb
test
insl
in
test
negb
mov
ja
or
rolb
aam
sub
in
fildl
scas
mov
xchg
cltd
mov
cld
mov
loope
mov
jne
cli
push
mov
clc
dec
xor
insb
jle
iret
fsubl
out
lahf
push
mov
sahf
fwait
rclb
and
imul
std
ja
and
push
bound
mov
xchg
mov
lods
sbb
fldcw
out
mov
xor
pop
mov
mov
and
shrb
ja
pop
int
ss
xor
adc
mov
cld
sub
call
jne
iret
in
dec
or
fwait
pop
call
in
xchg
addl
imul
xchg
mov
or
xlat
push
push
dec
xor
pushf
dec
movsl
jns
cmp
xchg
push
inc
or
inc
fldt
mov
iret
xchg
pop
and
inc
xlat
pop
adcl
andl
mov
dec
cmc
xor
ret
cld
dec
pop
fbstp
mov
ljmp
xor
sarl
pop
mov
push
mov
aaa
ror
push
mov
inc
pop
mov
testl
xlat
push
loope
push
push
cmp
pushf
jns
push
lea
loopne
pop
dec
nop
xor
pop
jg
cwtl
ds
inc
test
jno
mov
xchg
in
movb
xlat
out
pop
mov
int
adc
lods
inc
pop
scas
sbb
or
mov
div
inc
sbb
jmp
ret
pop
pop
or
sbb
dec
adcl
jmp
mov
sub
stc
sbb
ljmp
idivb
movsb
sbb
xchg
cmp
add
int3
push
or
lret
out
gs
jns
push
cwtl
das
test
dec
lahf
es
jbe
pop
xchg
loopne
cmpsb
xor
dec
xchg
mov
jl
lret
stos
addr16
jecxz
pusha
mov
push
dec
or
in
sub
push
adcb
adc
xor
int
cmp
out
sub
xor
cwtl
aad
stos
cli
and
and
pop
loope
jns
pop
fisubs
add
mov
push
inc
adc
rclb
pop
xchg
test
out
into
push
mov
jno
jmp
sbb
mov
dec
aad
sub
xor
pop
sahf
mov
cmp
test
ret
jne
xchg
mov
add
ret
or
mov
std
je
lock
decb
fwait
mov
in
jne
int
adc
mov
sti
imul
jno
jle
push
xchg
out
or
scas
pop
inc
pop
add
and
xchg
inc
xor
mov
push
je
cmpsl
jecxz
sbb
ret
add
shlb
mov
repnz
lea
mov
and
aaa
sbb
inc
push
or
cmp
cmp
push
inc
inc
and
ret
xchg
clc
mov
pop
inc
lahf
out
mov
mov
ret
xlat
repnz
scas
bound
mov
loopne
xchg
xorl
xchg
pop
in
push
adc
xorl
outsl
test
in
sub
sbb
in
sbb
es
aaa
or
adcl
xchg
cmp
sub
ss
test
xchg
mov
cmp
daa
mov
insb
das
lock
fmulp
dec
push
jmp
addr16
testl
out
push
add
xchg
mov
xchg
mov
cltd
das
scas
push
mov
mov
cld
cmp
repz
imul
mov
scas
fnstenv
pop
fisttpl
mov
loope
dec
mov
inc
fldenv
inc
enter
movsb
xor
mov
andl
js
pop
pushl
mov
lret
push
fimull
cltd
mov
adc
fwait
and
stc
ljmp
jle
xor
cwtl
ret
repnz
fwait
sub
pop
cmc
pop
fldenv
add
aas
ja
sarb
clc
stos
mov
xchg
push
dec
insb
aad
aaa
ds
dec
cmp
push
mov
pop
mov
clc
rcr
gs
leave
les
pop
xor
pop
notl
stc
out
sub
sbb
mov
icebp
das
or
mov
dec
inc
push
cmp
data16
insl
cmp
fistl
stos
cmp
int
in
frstor
das
dec
push
xchg
popf
test
sub
pop
lahf
sbb
mov
incb
xor
imul
pusha
inc
fildl
dec
or
xor
popl
call
pop
test
mov
pop
in
mov
add
dec
mov
xchg
lret
inc
mov
adc
jne
adc
xorl
out
inc
out
adc
xor
cli
mov
or
cmp
mov
sahf
lock
fmull
cmp
mov
in
lods
cmp
fmuls
sti
into
pop
adc
in
mov
stos
and
pop
test
sbb
mov
faddl
movsl
cmpsb
adc
ficoml
adc
bound
js
sbb
jmp
sub
mov
cmpsb
ja
test
mov
jl
add
addr16
in
mov
movsl
sahf
je
pusha
dec
push
xchg
shrb
xor
pop
outsb
or
call
lcall
or
xor
sub
pop
dec
cmp
and
movsb
cltd
fwait
test
stos
sbb
pop
outsl
mov
test
mov
jne
cmpsb
jo
pop
pop
cmp
cmpsl
xlat
and
jmp
cmp
js
sbb
jecxz
jl
xor
inc
mov
cli
ret
int3
push
mov
cli
cmc
xor
jl
jnp
aas
test
std
or
mov
dec
mov
cmp
xor
into
ljmp
int3
inc
sub
and
cld
ror
les
xor
or
sub
fisttpl
fsubl
fwait
sub
sub
out
mov
jnp
jmp
shlb
dec
shlb
and
or
and
lods
sti
mov
lcall
imul
or
sbb
aaa
pop
add
sbb
cmp
adc
in
adc
lcall
test
cmpsb
sarl
cmp
bound
data16
add
int
pop
cwtl
sbb
mov
dec
int3
mov
arpl
aam
pcmpeqw
cmp
dec
push
add
jl
ss
and
pusha
add
mov
jl
faddl
mov
cmpsl
sbb
mov
and
push
fiaddl
dec
stc
mov
jmp
pop
push
jmp
std
push
jl
pop
add
xchg
push
sbb
rcl
in
in
push
mov
mov
lea
or
inc
xchg
lea
sbb
mov
js
test
pop
cmp
pop
xor
sub
hlt
mov
adc
adc
outsl
shll
and
or
lret
aas
in
xchg
ret
and
fiaddl
subb
add
fadds
push
loop
xchg
repz
push
lret
jmp
clc
out
xlat
ja
adc
pop
testl
mov
pop
rcrl
push
nop
sbb
jae
add
enter
loope
jnp
add
or
xchg
adc
popa
call
insb
fimuls
aam
push
inc
test
ja
mov
lret
adc
xchg
push
rcll
int
cmp
aam
pop
ljmp
add
and
push
inc
mov
cmpsb
ja
mov
aam
cld
xor
fldcw
mov
call
add
pop
hlt
outsl
cmovae
xchg
loopne
pop
das
lret
rcr
lock
in
lret
aas
aaa
cmp
daa
orl
test
adc
in
test
jnp
adc
pusha
rorl
stos
das
xor
xchg
shll
jecxz
jge
ss
push
jmp
push
and
jl
sub
scas
lods
outsb
cmp
sti
js
sub
out
inc
nop
pop
mov
gs
mov
aaa
mov
xor
jo
jmp
mov
sbb
call
ljmp
jl
mov
rcl
ret
mov
mov
call
and
jae
call
xchg
icebp
cmp
jecxz
les
and
sbb
cmp
test
mov
shld
xchg
or
cs
rep
adc
test
cmp
sbb
inc
ljmp
clc
fnstcw
jl
lcall
push
mov
notl
jecxz
mov
mov
xor
stos
dec
inc
xchg
adc
ret
mov
paddw
jae
xor
popf
movsb
dec
and
mov
mov
mov
mov
scas
mov
test
subl
in
push
data16
jmp
mov
mov
pop
pop
mov
dec
sahf
push
outsb
lods
dec
icebp
ret
ret
mov
dec
push
call
pusha
xor
fsubs
pop
or
inc
stc
jae
mov
movsl
cwtl
icebp
adc
mov
popf
jge
push
sub
add
mov
sub
rcrl
pop
ss
add
sub
cmpb
js
jge
mov
adc
xlat
aad
push
popa
and
movaps
adc
dec
mov
jne
ljmp
xchg
ja
inc
lcall
push
aas
add
flds
add
pop
jecxz
cld
jl
inc
pop
enter
cmpsl
ja
sub
stos
inc
ret
cmp
jnp
scas
and
mov
pusha
or
pop
xchg
insl
sbb
lds
sub
stc
inc
enter
or
mov
jmp
mov
lret
mov
sbb
pop
gs
pop
enter
push
add
mov
scas
mov
sbb
mov
data16
aam
movsb
sbb
lds
bound
out
test
adc
pop
orb
fisttpll
clc
nop
mov
and
jp
mov
sbb
fisubrl
cs
jno
stos
pop
add
lods
je
enter
aaa
inc
rcl
jns
popf
lds
outsl
loopne
sbb
std
cmp
lods
mov
push
mull
xchg
mov
adc
cmpsl
sti
or
inc
adc
sub
fstp
xor
loop
fbstp
inc
sahf
outsl
repnz
bound
mov
out
lret
int
imul
and
inc
cwtl
fimull
push
inc
mov
mov
repz
loop
mov
mov
jp
mov
iret
adc
or
push
mov
push
xchg
icebp
lods
dec
in
negl
ret
and
or
fcom
fwait
addb
pop
add
les
aam
xchg
lret
cmp
inc
and
adc
adc
test
int
daa
mov
data16
pop
sgdtl
or
inc
xchg
call
xor
mov
jmp
inc
sbb
or
jg
adc
arpl
push
jne
out
into
fsubrs
and
lahf
gs
cld
test
mov
add
cmpsl
push
jbe
aaa
nop
fisubl
fmuls
mov
sbb
jae
mov
mov
insl
jmp
fstpt
in
mov
mov
cwtl
int
add
dec
mov
jns
nop
fdivrs
add
or
jae
leave
inc
mov
dec
pop
adc
mov
aad
lret
pop
repnz
mov
ss
adc
push
push
enter
mov
popf
clc
scas
push
jl
adc
or
pop
pop
push
fldt
jecxz
in
mov
stos
mov
and
ja
fs
mov
xchg
scas
sub
pop
and
rcll
sti
aaa
iret
pop
sbb
push
mov
pop
cli
sub
aad
mov
gs
lcall
push
popf
icebp
out
ja
popa
mov
aaa
fdiv
sub
jl
push
fsts
dec
jg
pop
and
pop
jae
xchg
add
cmc
test
push
mov
aas
ret
xchg
stos
xor
stos
popf
jns
or
dec
xor
pop
add
xchg
addr16
sbb
add
mov
in
das
in
js
sarl
popf
push
sahf
xchg
loop
popa
push
or
ret
xor
lods
jo
mov
dec
mov
out
cmp
jae
je,pt
jo
jno
cmc
xor
testl
inc
xchg
pop
out
idiv
lret
pop
pop
or
jg
and
push
cs
dec
ja
and
stc
addr16
mov
test
inc
inc
into
and
fdivs
and
hlt
cmpsl
addb
mulb
jae
add
stc
xchg
stc
push
shll
push
subl
fldenv
lret
jecxz
repz
push
ror
and
movsb
inc
adc
push
cmp
or
outsl
mov
add
adc
or
mov
xor
gs
push
inc
call
inc
sub
leave
sbb
cld
ja
pusha
lahf
out
sub
push
jnp
push
dec
dec
dec
add
cwtl
xchg
cmp
xor
dec
test
jg
pop
decb
sbb
popa
mov
sub
jo
jmp
sti
shll
and
sbb
mov
pop
dec
dec
jb
pop
push
or
call
push
aaa
jbe
movswl
inc
movsb
outsb
icebp
lahf
sub
testb
push
std
ret
mov
cmp
inc
add
add
mov
lock
stos
insl
rorb
dec
mov
pop
out
fucomi
idivb
ljmp
mov
xlat
pop
jnp
sub
aas
xchg
fdivl
pop
pushf
xor
push
push
fs
mov
rorl
dec
shlb
sbb
add
stc
jecxz
sub
and
pushf
xchg
adc
cmp
or
ret
lcall
xchg
xchg
xor
and
jge
xchg
inc
dec
mov
dec
cmpsb
sub
xor
imul
fistpll
xchg
roll
mov
add
mov
and
pushf
cli
pop
fwait
cli
leave
fisttps
je
sub
out
arpl
jo
dec
xchg
shl
push
push
fildll
xchg
push
dec
jbe
movzwl
jnp
in
jo
negl
pusha
jp
jbe
jbe
aas
dec
jmp
sbb
into
sahf
sbb
sbb
sbb
lret
add
mov
mov
sti
cmc
sahf
mov
div
xchg
shl
shll
js
ss
repnz
pushf
lahf
out
or
sahf
cmpsb
fstpt
adc
in
call
jnp
sub
in
pop
testb
sbb
scas
xchg
fistps
xchg
je
sbb
nop
push
xchg
mov
mov
lds
lods
cwtl
out
data16
dec
mov
std
mov
pop
dec
mov
in
sbb
in
out
mov
xchg
inc
loop
inc
sbb
lret
and
add
xor
or
sub
es
jmp
push
sarb
imul
fwait
push
negb
adc
add
outsl
dec
loopne
stos
sbb
call
fs
pop
xor
cwtl
repz
cmp
insl
jl
inc
mov
xor
or
jl
mov
xchg
jo
cmp
mov
je
mov
mull
add
pop
push
xor
ret
pop
in
in
jns
rorb
xchg
daa
outsl
xchg
and
in
aas
subb
pop
fists
fbld
nop
mov
clc
dec
xchg
imul
out
push
push
out
bound
dec
clc
call
sahf
mov
les
loopne
test
push
shll
mov
addb
add
adc
bound
lret
or
inc
and
xchg
adc
popl
push
add
inc
dec
out
lods
fiadds
gs
pop
xchg
mov
leave
popf
and
nop
scas
roll
call
jb
sbb
psraw
xchg
cwtl
mov
fs
lods
push
push
mov
sub
cmpsl
cs
lret
xchg
jle
jmp
mov
bound
dec
cltd
rcrb
mov
push
aam
in
mov
mov
xchg
inc
lods
xor
cmpsb
out
cld
inc
sbb
xor
clc
pop
pop
fisttpl
int3
adc
pop
pop
and
ss
cltd
loope
mov
or
fldcw
adc
popa
aad
mov
scas
lret
lret
sahf
js
addl
pop
cmp
icebp
sub
adc
adc
loop
mov
loop
or
inc
into
cwtl
add
sub
adc
mov
fidivrs
add
ret
es
cmp
test
push
cmpsb
repz
mov
and
sub
dec
cltd
fwait
cli
xchg
shrl
jne
js
dec
sti
loop
pop
lds
inc
adc
mov
cmp
xor
iret
in
sub
mov
pusha
and
rol
inc
pop
sbb
lahf
out
cli
cmp
mov
movsb
dec
pop
inc
imul
inc
add
rolb
xchg
cmc
in
imul
pop
dec
out
test
inc
xchg
inc
push
dec
rorb
int
push
xlat
sbb
imul
ja
cli
pop
lods
and
sub
rclb
repz
insb
mov
xchg
or
lahf
mov
enter
ds
fildl
or
push
icebp
ss
adc
jae
xchg
mov
pushf
stos
xor
mov
pop
mov
outsl
sarl
xchg
push
fldenv
xor
decb
mov
lods
outsl
lahf
cltd
or
push
notl
dec
add
ret
fbstp
test
aam
lahf
xor
into
pop
shl
or
push
add
jmp
adc
mov
xchg
dec
xchg
ret
sbb
fists
push
sbb
inc
loop
mov
inc
sti
mov
add
mov
adc
xchg
in
das
fbstp
mov
xor
cmc
dec
dec
ljmp
fwait
jg
ss
or
aad
rcl
cmp
jmp
clc
jle
xchg
dec
dec
add
mov
or
aas
sbb
sbb
cmp
pushf
aas
adc
aaa
add
adc
jnp
rcrl
mov
addr16
loop
in
xchg
jp
lret
pop
les
xor
lods
mov
push
add
idivl
sub
inc
adc
insl
cmp
outsl
mov
mov
mov
loope
lods
pop
fwait
sbb
mov
xlat
inc
jecxz
pop
loopne
inc
cmp
xor
mov
xchg
cld
sti
test
mov
les
xor
adc
leave
aad
mov
sbb
fcoms
popf
jbe
testb
incb
inc
or
add
or
gs
push
loope
out
imul
mov
std
push
push
imul
aad
and
stos
sub
sub
sub
lods
sbb
mov
fsubs
ss
mov
cmp
sahf
inc
add
in
aad
sbb
imul
xchg
out
test
into
adc
sub
addl
lahf
subl
sarl
orb
mov
and
cmp
sub
xchg
jno
mov
or
ror
push
pop
pop
or
stos
icebp
lds
imul
and
adc
loop
std
sub
movsl
sbb
rcrb
jmp
insl
fnstcw
and
stos
mov
cmc
outsb
cli
add
mov
push
and
lret
dec
inc
cli
fildll
bound
rorb
fwait
xchg
dec
inc
xchg
imul
sbb
jb
test
icebp
push
mov
add
loope
sub
mul
jp
jb
outsb
out
adc
xchg
cwtl
xchg
push
psllq
imul
lret
out
mov
cli
xchg
push
in
and
mov
adcl
popa
xchg
cmp
push
xchg
dec
lahf
pop
jns
pop
test
sbb
ret
fistl
rcrb
push
fwait
mov
pop
mov
scas
gs
pop
jns
test
mov
and
jbe
das
imul
jne
test
mov
add
sbb
movsb
decl
sbb
out
outsb
xchg
jbe
dec
push
push
or
or
lds
sbbl
pop
popa
fisubrs
push
ja
cld
loopne
loope
lock
adc
and
call
clc
sub
movsb
outsl
pushf
mov
out
mov
xlat
insb
fcmovnu
jg
out
or
cmp
or
movl
sub
in
shll
push
push
cltd
mov
sbb
mov
shl
adcl
add
shrb
add
sbb
pusha
mov
push
out
jnp
out
cmpsb
push
mov
test
pop
pop
scas
call
std
bound
xor
in
js
mov
or
xor
sbb
negl
in
outsl
jb
add
repz
xchg
jb
jbe
cmc
in
cmp
int3
sub
lods
add
ret
mov
fnstenv
mov
mov
mov
imul
xor
jb
adcb
mov
xlat
movsb
fcomps
sbb
test
rol
cli
loope
or
divl
iret
or
mov
push
rep
ficoml
test
ret
pop
sub
pushf
fninit
rorl
jne
mov
xor
ja
stos
out
std
inc
sahf
in
out
and
cmpsl
add
xlat
pop
sub
out
add
rclb
loopne
pop
aas
add
sahf
push
fcomp
repz
mov
cmp
jmp
and
aaa
ljmp
jge
and
xchg
or
cmp
cmpsl
rorl
inc
fs
hlt
insb
xor
xor
cs
lahf
xchg
mov
push
cmc
movsl
mov
xor
int
call
rorb
jl
int3
push
push
inc
ret
test
push
jg
loop
push
je
pushl
js
xor
mov
push
int3
jne
stos
sbb
jns
test
aaa
lret
xor
pop
sub
mov
outsb
or
jp
cmp
nop
pusha
xor
adc
mov
fbld
and
inc
push
cltd
std
aad
sub
inc
pop
or
dec
push
and
int
popa
repnz
data16
loopne
mov
adc
mov
jnp
xor
jl
or
mov
imul
or
sub
pop
fwait
daa
repnz
xor
stos
arpl
ret
inc
scas
pop
lds
enter
fidivl
cld
loope
sbb
xor
jns
test
dec
fisubrl
mov
sbb
push
lret
leave
or
push
push
jecxz
ds
pop
add
adc
or
xor
inc
jnp
adc
dec
mov
jge
das
lret
jp
pop
fsubl
sbb
mov
cltd
shrl
push
fs
test
or
mov
add
test
es
adc
dec
pop
dec
adc
or
mov
bound
jae
mov
xchg
pop
cmc
mov
pop
rol
xchg
outsb
xor
in
mov
xchg
aas
dec
or
push
mov
pop
cmp
les
mov
pop
pop
fldenv
ficoms
and
inc
inc
in
dec
or
pop
push
push
mov
sub
lahf
push
jno
jmp
js
sarl
das
pushf
adc
mov
xlat
arpl
loop
inc
psadbw
adc
jp
daa
pop
repnz
movsb
je
lret
mov
pop
or
mov
push
stos
add
pop
gs
insb
imul
xorb
pushf
faddl
pop
jnp
es
add
clc
loop
mov
mov
fisubs
and
ret
scas
jne
sbb
sbb
mov
ja
stos
negl
shlb
scas
push
stos
test
sbb
mov
test
xlat
jne
jno
add
sub
das
inc
push
sti
stos
add
jmp
sbb
outsl
xchg
out
cmpsl
pop
aaa
ljmp
inc
push
pop
pop
push
cld
aaa
loopne
mov
sbbb
cmpsb
xchg
imul
iret
or
test
ret
popa
ficomps
pop
pop
es
xchg
xor
xchg
add
sarb
sbb
sub
cmp
dec
xchg
clc
fs
mov
sbb
into
cli
dec
dec
ljmp
mov
xor
sub
xor
cmp
cli
mov
xlat
leave
dec
cmpsl
inc
adc
loopne
xchg
mov
dec
rol
mov
mov
adc
es
push
adc
clc
jno
xlat
cmp
jbe
mov
or
movsl
divl
sub
inc
ja
adc
mov
loopne
xor
dec
stos
mov
popa
shlb
cmp
lea
jno
cwtl
repz
hlt
mov
jl
mov
cld
sahf
adc
fdivr
ss
xadd
lea
pop
pop
mov
cmp
pop
xlat
cli
dec
mov
pop
into
test
jo
pop
and
enter
sahf
adc
mov
hlt
jbe
mov
xchg
mov
pushf
jne
push
jbe
push
lea
arpl
fnstcw
jno
dec
add
lods
test
add
push
jecxz
dec
add
jnp
nop
mov
fstp
fadds
pop
lcall
push
jl
pop
pop
dec
xor
flds
ds
add
adc
cld
push
push
fs
icebp
fisubrl
xor
jle
cmpsl
jmp
add
xchg
push
cmovb
mov
mov
xorl
pmovmskb
dec
inc
in
push
loopne
cltd
add
cld
repz
mov
pop
xchg
in
inc
mov
std
leave
sbb
daa
mov
setp
int
int
xorl
notb
lahf
push
sbb
testb
aas
nop
mov
cmpsl
inc
pandn
arpl
and
pop
xchg
fs
neg
pop
enter
outsb
pop
movsl
lock
cltd
stos
je
xchg
sbb
movsb
loop
in
out
add
ret
sbb
jnp
pop
inc
sub
mov
xchg
fiaddl
mov
les
pop
ror
cmpsb
and
inc
sbb
cmp
pushw
mov
mov
lret
pop
inc
and
sub
xor
sbb
sub
mov
adc
jnp
dec
popf
scas
mov
ja
jmp
ja
out
xchg
scas
xlat
cmp
jmp
lock
fisubrl
pop
inc
adc
inc
out
xor
rorl
xchg
adc
mov
add
movl
and
push
dec
inc
mov
push
jo
frstor
xchg
adc
mov
jnp
dec
mov
std
movsb
inc
pop
mov
aam
add
shll
jo
cmc
mov
mov
cmp
push
fidivl
ja
sbb
movsb
xchg
xchg
int
add
xchg
das
mov
ljmp
fs
fidivrl
mov
repnz
cmp
andb
int3
daa
adc
pushf
sbb
insl
cmp
call
pop
aaa
iret
out
hlt
mov
dec
cmp
lds
fisubrs
mov
dec
inc
inc
and
fadd
inc
cs
mov
mov
sbb
sbb
push
pop
dec
std
add
sub
and
mov
gs
mov
stos
aas
lea
xor
adcb
icebp
bound
leave
pop
sbb
in
jp
push
cs
xchg
scas
xchg
or
sbb
sbbl
in
aas
cli
std
in
xor
in
sarb
mov
jbe
js
pop
add
cmp
andl
mov
cs
inc
fcoml
sbb
dec
pop
jp
ret
lods
pusha
lock
lods
lds
loop
stc
mov
popf
sarb
pop
cmc
push
cmc
popf
mov
xchg
fcompl
push
mov
pop
das
dec
outsl
test
mov
int
shr
push
add
mov
jno
insl
inc
pushf
call
pop
dec
xchg
mov
jbe
jge
loope
or
imul
loopne
ret
sbb
cmp
cmp
push
dec
movd
mov
test
and
ret
mov
and
test
push
retw
or
xlat
mov
cltd
sbb
mov
sbb
and
test
sbb
or
xchg
jae
jnp
jb
ds
push
bound
and
mov
movsl
dec
aaa
sbb
out
call
test
xor
sub
dec
dec
in
jns
mulb
sahf
sete
loopne
xlat
sbb
pop
push
pop
mov
pop
pop
orb
fistpll
dec
mov
push
stc
adc
lea
stos
mov
push
push
bound
cltd
mov
add
pop
jo
movsb
sbb
xchg
xchg
xchg
adc
mov
pop
cmpsb
popa
dec
add
mov
movsl
fs
test
popf
fistps
data16
das
stos
ds
adcl
or
leave
imul
jecxz
and
jae
cli
push
xchg
push
cmp
nop
lods
cld
push
mov
or
cld
ret
push
or
ja
outsb
jmp
les
fiaddl
test
or
gs
sbb
int3
pop
jnp
cli
testb
mov
jno
bound
popa
fldenv
clc
mov
ret
push
lds
mov
pop
stos
jp
shlb
adc
push
js
imul
or
lea
pop
mov
rclb
stc
pop
scas
lds
ja
inc
fwait
cmpsb
mov
int
jp
lock
sahf
arpl
stos
pop
cwtl
sub
rcrb
fwait
loop
mov
push
aam
xchg
lea
fucomip
es
les
push
int
cmpsb
shr
out
imull
mov
inc
out
pushf
jns
out
sar
rclb
movsb
and
lahf
jmp
push
and
xchg
fnsave
scas
cs
aaa
pop
adc
insl
cmp
xor
sti
cli
cmp
adc
pop
rcrb
xor
sbb
sub
mov
fidivl
jmp
push
mov
and
loopne
sub
mov
xchg
sarl
xor
rclb
jo
mov
sub
ds
sub
adc
xchg
inc
inc
sub
jp
xor
pop
test
mov
adc
ss
xlat
mov
mov
je
data16
stc
subl
pop
fcoms
outsl
insl
xchg
cwtl
push
popf
jp
dec
push
shr
push
inc
popw
mov
mov
pushf
sub
adc
loop
inc
mov
adc
fs
lds
xlat
out
sbb
stos
rolb
push
imul
mov
push
and
sub
pop
fs
icebp
test
sbb
xor
pop
je
sbb
pop
stc
add
sbb
ret
xlat
xor
jbe
ds
lret
cmp
xchg
xor
xor
jmp
mov
mov
repnz
adc
mov
fbstp
insl
mov
into
addb
xor
and
lret
mov
outsl
bound
in
dec
xlat
adc
inc
mov
lret
mov
xor
sub
cmp
hlt
ftst
rorb
roll
cmpsb
lcall
add
mov
jmp
push
mov
add
aaa
mov
jo
cs
jge
shl
or
out
xor
ret
or
arpl
lods
lods
je
popa
lods
fwait
mov
pusha
pop
push
and
mov
cmc
cmp
push
int
lods
nop
mov
mov
mov
repnz
ret
mov
xchg
aaa
hlt
rcrb
xlat
ds
pop
add
inc
ljmp
add
xchg
cltd
cmp
lahf
and
arpl
inc
sub
cld
insl
gs
popf
inc
xchg
test
enter
lret
jmp
jb
ljmp
movsb
in
xchg
pusha
sub
clc
into
jle
push
and
sub
inc
add
add
xor
in
dec
push
idivb
mov
stos
data16
call
sub
ljmp
ja
pop
int
and
push
jl
jge
in
decb
pop
cltd
mov
mov
inc
popf
fdivrp
lcall
jno
or
negb
pop
lret
push
test
lods
shl
xchg
clc
or
flds
dec
cmp
dec
out
mov
rorl
jo
clc
xor
dec
arpl
push
sub
add
shll
out
sbb
mov
test
push
inc
out
rorl
test
mov
out
data16
pop
stos
xchg
mov
int
adc
sbb
notl
xor
adc
lods
cltd
inc
out
mov
dec
xchg
fidivrs
and
imul
add
add
scas
inc
push
jg
idivb
xor
shll
sbbb
shlb
mov
mov
push
rorb
xlat
pusha
pop
jne
cmp
leave
or
push
jle
cmc
xchg
cmp
push
je
push
mov
add
gs
movsl
cs
or
inc
xchg
shrb
stos
pop
push
xor
fnstsw
cmp
stc
add
lock
push
pop
push
adc
add
dec
rorb
or
jo
or
and
or
mov
or
fmuls
stos
pushl
push
or
pop
sub
push
mov
bnd
add
in
push
addr16
cmpsl
repz
jge
repnz
icebp
xor
or
sub
cmp
aaa
lea
dec
mov
push
push
dec
dec
shlb
out
bound
popf
rolb
loope
push
or
stc
xchg
cmpsl
inc
inc
and
imul
sbb
scas
pop
adc
sbb
popf
and
jne
dec
inc
push
xchg
cli
cmp
stos
pop
mov
out
mov
or
push
xor
ret
push
jl
clc
push
ret
mov
fxch
aad
mov
lcall
sub
out
dec
bnd
xchg
shlb
sub
ret
leave
mov
inc
push
and
stos
jb
xor
and
int3
mov
or
test
xchg
stos
cmp
stc
sub
stos
lea
sub
mov
lahf
cmp
loop
adcl
cli
test
pusha
in
push
or
test
xor
hlt
loope
adc
pop
xor
in
imulb
scas
repnz
mov
xchg
bswap
fwait
and
je
xchg
loope
mov
loope
jno
pop
xchg
sub
add
xchg
orl
mov
xor
test
test
push
out
or
sbb
push
dec
scas
lock
jbe
gs
in
test
push
fcmovnbe
mov
add
pop
inc
fnsave
ljmp
in
aaa
or
mov
xchg
popf
bound
pop
ss
cmpb
or
out
insb
push
stos
test
fcomps
call
cli
das
jl
lock
out
nop
add
ficoms
dec
test
push
xchg
jne
push
and
leave
nop
aam
dec
pop
pop
push
pop
add
xor
sub
aad
or
xor
dec
in
int3
pushf
cmp
imul
adc
inc
adc
loop
insb
push
mov
and
xchg
push
mov
dec
outsl
mov
adc
sub
out
in
jmp
repz
push
je
sbb
jge
pop
je
aad
mov
sahf
sarb
aam
xlat
lahf
mov
int
push
sub
int
nop
nop
mov
fs
pop
divl
pop
popl
into
sti
out
dec
jp
lods
cmc
dec
shrl
adc
imul
push
inc
std
scas
loop
adc
mov
js
mov
cmc
stos
aaa
rcrl
out
mov
or
xor
fwait
add
ja
dec
mov
pop
loope
repz
mov
ds
mov
test
mov
cmpsl
mov
sub
xor
lods
dec
shrl
in
hlt
mov
pushf
or
jno,pt
xchg
mov
push
ljmp
test
sbbb
cmp
mov
jns
aam
repz
ljmp
fadds
add
dec
add
je
ror
cmp
xor
adc
aas
dec
and
loop
rorl
in
data16
dec
sub
aad
xchg
addr16
shll
aas
sarb
aam
sub
add
ljmp
leave
int3
push
lock
insb
xor
jb
into
in
adc
xchg
dec
movsb
inc
adc
lcall
jno
xchg
xorb
movsl
xchg
insl
adc
xchg
dec
jecxz
push
in
or
push
and
out
gs
push
xlat
push
pop
jb
lcall
shrl
jle
or
sbbb
sti
enter
xchg
ret
or
loop
or
cltd
mov
mov
stc
scas
fcompl
stos
les
pop
jo
stos
xchg
pop
call
pop
insl
inc
maxps
in
sub
dec
adc
movsl
sub
mov
push
gs
and
gs
cmpsl
das
adc
pop
xchg
out
in
pop
insl
enter
inc
in
test
pop
popa
das
jle
in
xchg
mov
pushf
cmpsl
mov
cmp
pop
and
push
add
aas
fidivl
hlt
jbe
scas
pop
add
xchg
lret
cmpl
push
mov
rolb
pminsw
add
fimuls
hlt
mov
in
mov
lds
mov
rorb
push
mov
sbb
out
push
mov
sub
lret
call
lods
inc
mov
pop
js
mov
sub
push
ss
and
push
mov
jne
ljmp
or
cmpsb
ficoms
jns
movsb
inc
add
mov
adc
loopne
clc
add
lock
mov
or
add
in
popa
fnsave
sub
jl
jae
and
cmp
ljmp
mov
in
xor
or
lea
test
and
or
sti
std
test
mov
lcall
and
lods
lahf
push
es
xchg
dec
xor
std
test
lahf
add
sahf
stc
les
jecxz
lret
lods
js
dec
std
xchg
sub
aad
mulb
leave
or
bound
lds
repnz
jmp
jns
add
add
jo
std
dec
outsl
shll
mov
inc
dec
xchg
mov
jne
mov
sub
lods
cmp
and
jg
mov
mov
rcrl
iret
pop
adc
pop
lock
and
push
int
xor
mov
adc
mov
dec
mov
mov
out
lcall
out
pusha
in
int
insl
or
daa
xor
fdivl
ljmp
sub
mov
dec
jns
xchg
dec
enter
mov
insb
sub
pop
test
push
fstp
in
mov
mov
lods
imul
sbb
es
jge
std
cmp
xlat
leave
push
adc
loope
stc
xchg
fs
test
mov
mov
xor
push
popa
push
pop
fisubrl
addr16
pop
cmp
test
add
cli
or
outsb
test
sub
cmp
insb
mov
jae
jecxz
cmpsb
in
adc
movsb
add
in
popa
lret
inc
inc
in
sbb
bound
add
mov
out
cli
in
stc
pusha
stos
xchg
lods
push
mov
pusha
stos
mov
adc
fwait
sub
popa
and
pop
pop
jle
in
mov
cltd
int3
ja
ja
adc
sbb
in
sub
scas
sbb
and
add
and
into
adc
dec
sub
mov
and
ja
jp
punpckldq
sub
scas
mov
sub
mov
pop
lret
or
ja
mov
shrl
dec
push
mov
out
adc
popa
jecxz
xchg
mov
test
or
xchg
fistpl
repnz
stos
stos
stos
ficompl
sub
adc
icebp
inc
into
ja
and
aam
push
add
pop
rolb
inc
pushf
scas
pop
popf
inc
or
lret
mov
mov
aas
mov
jmp
repz
adc
mov
fmull
jbe
lret
mov
outsb
cmp
add
dec
es
imul
in
js
dec
orb
mov
movb
sub
sbb
scas
mov
mov
sub
leave
add
adc
rorl
mov
insl
push
outsb
enter
sub
adcl
xlat
insb
mov
adc
jge
xchg
sub
out
adc
test
inc
mov
pusha
sarb
xchg
mov
and
pusha
sti
mov
into
iret
daa
mov
inc
shr
pop
add
stos
sahf
inc
xchg
mov
sti
add
jp
cmp
aaa
jae
jmp
cld
add
fidivl
cli
and
xchg
jmp
sub
bound
lds
jl
and
in
in
test
add
lods
lret
enter
in
iret
xor
lcall
ret
mov
or
decl
ret
dec
mov
cli
test
xlat
push
mov
push
xor
mov
or
push
out
nop
mov
add
jnp
and
cmc
xor
mov
push
dec
or
xlat
mov
outsl
cmp
pop
mov
mov
xor
xchg
imul
stos
jg
xchg
fnstsw
adc
lret
neg
imul
sbb
lea
fcompl
aad
idivb
and
insb
mull
fwait
push
imul
shl
aad
rclb
out
mov
sub
dec
adcb
test
pop
xor
jo
dec
stos
cmp
leave
mov
and
scas
ljmp
imul
add
cmp
dec
adc
mov
idiv
dec
dec
sbb
subl
rep
xor
mov
or
jbe
popf
mov
ljmp
js
xchg
jns
ljmp
or
or
cmp
mov
sbb
std
pop
cmc
sarb
orb
adc
scas
rcl
pop
popf
stos
fists
and
movsl
mov
dec
fsubl
mov
movsb
lret
jg
xchg
lods
pop
cli
aas
lock
sub
lds
add
mov
add
ja
xchg
push
xorb
mov
mov
int
std
je
mov
fidivl
call
mov
mov
repz
jle
popa
xor
into
adc
inc
int
pusha
test
push
jp
aad
pop
or
jb
sub
sbb
cmp
mov
mov
jb
clc
mov
fwait
pop
sbb
jecxz
dec
pop
push
dec
and
lea
lret
cmp
shll
das
jge
cld
int
sbb
jno
adc
inc
inc
arpl
pop
in
mov
pop
adc
xor
push
jecxz
loope
std
sub
ja
sub
dec
xchg
leave
xchg
jmp
cmpsb
pop
cmc
das
loope
test
lods
dec
cmp
lods
cmp
fsubrs
or
lret
xchg
jb
stos
inc
mov
and
ss
shlb
mov
dec
cs
faddl
test
insl
mov
adc
sarl
movl
test
adc
mov
and
imul
imul
jne
std
add
aaa
inc
neg
mov
xor
push
xchg
dec
rcrl
push
xchg
lret
push
cmpsl
fistpl
sub
push
push
fimull
in
enter
mov
mov
pusha
cli
loope
ja
divb
adc
mov
mov
dec
lock
mov
out
jp
push
adc
adc
sbb
push
or
lret
stc
sbb
push
sahf
inc
mov
outsl
jl
cmp
cmpsl
mov
jmp
cld
dec
or
rolb
aas
pop
das
nop
clc
out
cs
imul
xchg
dec
fcoms
scas
test
pop
popf
popa
fwait
ljmp
aam
cmp
jmp
sub
jns
leave
aad
icebp
mov
jno
cmc
sarl
sarl
mov
cmp
ja
out
aam
mov
into
mov
out
inc
add
ljmp
jp
push
sbb
xor
inc
xchg
loopne
jmp
loop
jmp
loop
bound
testb
xor
int
xchg
adc
xor
clc
mov
pop
mov
scas
mov
mov
pop
dec
pop
xchg
addr16
push
sub
mov
pushf
and
xchg
sbb
sub
or
movsl
cwtl
xor
fsub
jmp
sti
out
sbb
in
out
sbb
cs
push
fidivrl
pop
fists
pop
leave
in
jns
leave
fwait
shlb
sbb
outsl
cmp
pop
mov
test
add
test
out
sub
inc
and
ss
cmp
lret
fisubs
test
sub
sbb
pop
add
in
sbbl
ljmp
cld
jae
aaa
lcall
sub
add
inc
cmc
pop
cli
dec
jo
and
arpl
fstps
push
loopne
pop
ja
scas
imul
outsb
adc
rolb
cmp
jmp
xchg
or
jnp
dec
ljmp
and
mov
negb
pop
push
scas
add
jo
pop
jne
in
mov
enter
and
sbb
xor
sbb
lods
test
push
out
xor
xchg
pop
inc
xchg
pop
xor
xor
xlat
mov
xchg
add
and
jg
dec
jmp
repz
repnz
push
dec
cmpsb
jle
mov
cmp
out
xchg
jp
test
pop
movsb
arpl
xchg
and
xlat
mov
pop
inc
mov
cmp
and
out
daa
and
jmp
lcall
jbe
sub
mov
dec
xchg
fnop
pop
loopne
in
sub
pusha
add
push
jbe,pn
das
xchg
jnp
jle
mov
pop
sbb
dec
xchg
aas
jl
cli
shlb
fsubr
incl
add
push
mov
loopne
icebp
sbb
cmpb
pop
and
mov
or
sub
mov
shlb
mov
lahf
or
daa
lret
inc
hlt
sbb
mov
jb
cmp
mov
xchg
cmc
leave
cmpl
jae
lods
adc
inc
adcb
rcrl
cwtl
pop
pushf
sbb
inc
cmpsb
aaa
int
dec
bound
gs
test
cmpsl
push
bound
mov
or
leave
shll
sbb
fwait
jg
mov
out
jp
fists
jno
xorb
add
inc
push
sbb
inc
adc
fmull
adc
popl
js
mov
xchg
mov
push
stos
inc
andb
cwtl
sahf
imul
sub
insl
mov
test
sbb
cmpsb
shll
pusha
aaa
adc
push
or
inc
insb
in
jbe
mov
lcall
pop
sbb
andb
sub
cmc
ss
jmp
imul
xor
and
data16
daa
jbe
and
dec
shlb
inc
dec
test
or
out
add
and
xchg
sub
cmp
cmp
push
mov
stos
adc
mov
and
out
repz
add
fmuls
fbld
pushf
cmpl
jne
adc
icebp
popf
jno
das
fs
out
rorb
loopne
test
shrl
jbe
rol
rorl
dec
add
mov
jmp
scas
jns
pop
xor
roll
mov
je
pop
sbb
xchg
std
and
nop
xchg
mov
adc
hlt
cmp
arpl
jmp
repz
push
dec
in
jo
sub
sbb
ds
sahf
dec
lcall
and
fs
push
in
inc
out
cmc
mov
mov
jno
test
mov
scas
sub
push
mov
into
push
fiaddl
dec
mov
push
ret
hlt
cli
cmp
fisubl
xorl
adc
adcb
xor
mov
xor
ss
and
xor
icebp
pop
mov
pop
jnp
fsts
pop
xor
test
sub
mov
fs
xchg
mov
rclb
fldt
outsb
jno
in
movsb
popa
fiadds
js
insl
mov
or
test
mov
cwtl
lds
rorl
rcl
das
xchg
cmpsl
das
xchg
jbe
mov
ret
mov
call
ljmp
sti
fstsw
movsl
add
stos
test
add
adc
ds
scas
inc
stos
sbb
out
lcall
loopne
push
in
in
mov
sbb
or
cltd
gs
cli
jle
sbb
push
jno
hlt
push
shl
push
dec
rclb
daa
inc
int3
push
and
adcb
cmp
inc
mov
fbstp
lods
fiadds
and
cwtl
in
adc
outsb
ret
fimull
in
sbb
jp
push
add
push
dec
xchg
int
pop
rolb
int
fidivrs
pusha
xchg
xlat
mov
test
and
jns
mov
and
xchg
int3
pop
repnz
or
dec
push
hlt
dec
vcmpps
pop
popa
inc
mov
aas
enter
adc
mov
cmc
popf
fwait
call
jecxz
add
sbb
in
xchg
out
push
pop
pop
sti
cld
jg
rorl
pushf
scas
sar
pop
sub
cltd
sbb
push
cmp
jle
je
jae
lret
les
mov
addr16
xchg
xor
fsubrs
andb
cmp
dec
cli
mov
test
rolb
mov
jns
imul
cmpl
xor
mov
jg
push
mov
dec
ret
iret
movsb
in
cmp
das
in
stos
in
or
sbb
add
ss
or
in
imul
adc
xchg
adcl
test
fnstcw
lods
mov
decl
add
cmp
fstpl
ret
pop
call
stos
pop
or
fisubrl
sahf
pusha
scas
ds
shl
popf
mov
mov
and
insb
and
dec
ret
xchg
dec
das
mov
aaa
mov
in
and
lea
cltd
push
int
dec
lcall
lret
movsb
xchg
sarb
popf
in
icebp
jmp
lock
mov
aad
and
cmpsb
xchg
add
cli
add
sbb
lahf
cmpsl
aaa
leave
and
lods
mov
stos
sub
cmpb
lret
test
xchg
ja
rol
mov
jns
push
nop
js
dec
into
cmp
xchg
mov
pusha
mov
sarl
mov
xchg
mov
hlt
mov
call
mov
cmpsl
call
mov
popf
or
adc
push
je
lods
popf
xchg
sbb
cwtl
icebp
dec
or
popa
pushf
imul
lret
mov
insl
sub
mov
sbb
ror
jg
push
insb
add
cltd
push
cmp
enter
add
push
popf
mov
sub
sub
adc
xchg
push
push
ror
pop
aam
call
es
into
sub
lea
inc
pop
pop
mov
test
pop
adc
dec
pop
mov
enter
push
adc
shl
mov
xchg
jmp
into
dec
rorl
mov
jl
bound
idivl
out
mov
mov
xchg
repz
dec
cltd
pop
inc
pop
or
add
jbe
inc
cld
or
aaa
cs
stos
cltd
xchg
push
jne
inc
sub
add
pop
sahf
adc
scas
cmp
ljmp
cwtl
in
pop
sub
pop
pop
jbe
add
jl
arpl
js
scas
movsb
inc
cs
push
sub
jp
sbb
mov
dec
fwait
inc
pop
push
hlt
pop
add
cs
jg
cs
pop
pushf
xor
pop
push
cli
fidivrl
sbb
pop
into
clc
inc
inc
fcoms
mov
xor
cmp
mov
mov
ljmp
std
cli
arpl
xor
or
shlb
sbb
and
int3
orb
jnp
push
movsl
lret
jl
mov
push
cwtl
lret
mov
repnz
jae
cltd
outsl
inc
ja
aas
repz
xchg
stos
mov
sbb
fcompl
stos
loop
filds
mov
fbld
sbb
xchg
ffreep
pusha
or
clc
fnsave
sub
shl
std
cmp
test
sbbl
mov
data16
aaa
in
inc
lahf
jae
divb
ds
dec
jns
sub
and
inc
jnp
jle
adc
cmp
sbb
and
mov
mov
inc
shl
rcr
iret
xchg
imul
out
lret
sbb
aaa
insb
adc
icebp
cmp
outsb
push
test
imul
jne
loope
js
mov
pop
out
pop
addr16
addr16
adc
outsb
faddl
test
and
stc
push
pushf
xlat
mov
jg
mov
out
test
cltd
fwait
pop
scas
sbb
add
and
dec
pop
scas
sbb
fs
dec
mov
notl
imul
xchg
es
and
inc
cmp
add
dec
aas
stos
in
das
dec
pushf
jl
mov
inc
cmp
loop
mov
out
pop
pop
lock
insl
sub
gs
sub
ja
pop
push
addr16
mov
notl
push
outsb
sbb
mov
dec
fstps
repnz
jle
jns
or
arpl
mov
call
and
imul
jns
icebp
imul
pop
push
lea
hlt
xlat
sbb
or
cltd
popl
sbb
push
xchg
sub
or
scas
inc
aas
stos
outsl
lods
cmpsl
cmc
or
cmpsb
xor
inc
movsl
jmp
dec
and
dec
mov
cmp
cli
inc
mov
cmc
mov
mov
test
mov
xor
dec
cmpl
call
scas
xorl
mov
fldt
xor
dec
fisubl
cmp
or
push
sub
add
fucom
jecxz
xor
push
addr16
ds
push
call
push
mov
push
and
sbbb
movsb
repnz
push
xchg
push
adc
cmp
inc
sub
fistl
cli
lock
cmp
int3
inc
and
stc
xor
or
sub
or
cmp
mov
pop
adc
mov
lret
push
xlat
add
loope
xlat
mov
mov
cmpsb
pop
cmc
and
push
js
insb
repz
and
notl
cmp
sarb
cmpsl
lret
enter
movups
adc
cli
adc
shll
aas
dec
pop
int
insl
xchg
insb
push
mov
gs
mov
and
adc
dec
inc
cwtl
lea
outsb
add
cmpsb
pop
into
cmp
or
mov
mov
sti
mov
sbbl
jle
ror
imul
fnsave
fcoml
fcoml
test
lcall
out
int3
mov
rclb
and
pop
je
out
cmp
and
xchg
dec
adc
pop
mov
xchg
pushf
adc
inc
or
adc
mov
or
xchg
neg
jp
and
mov
push
stos
sub
mov
mov
subb
cmp
dec
and
ja
inc
adcb
out
icebp
mov
in
popf
mov
and
xor
pop
rclb
out
jne
ljmp
nop
imul
xchg
cs
mov
fildl
das
xor
into
into
fmuls
dec
cld
adc
adcl
das
or
jge
and
icebp
mov
in
rcr
mov
add
jo
pop
in
mov
cmpsb
outsl
mov
xchg
cmpsb
mov
out
inc
adc
xlat
sub
or
and
xorb
stos
in
mov
leave
cmpsb
jbe
int3
and
adc
orl
mov
filds
leave
pushf
in
dec
push
inc
mov
addr16
cmp
repnz
pushf
loope
mov
sbb
dec
mov
jne
dec
mov
rcrb
js
test
add
rorl
stc
daa
mov
jae
jmp
mov
cli
insb
pop
add
movsb
dec
xchg
xchg
mov
mov
jnp
mov
repz
push
xlat
mov
shll
lods
inc
lret
cmp
test
dec
xchg
push
pop
mov
shll
pop
fs
call
dec
lock
push
dec
mov
imul
xor
sub
dec
test
xchg
sbb
lcall
stos
mov
aam
jmp
and
sub
ret
bound
mov
sbb
push
daa
and
xchg
lret
push
add
push
addr16
sub
pop
fidivrs
sub
adc
test
jmp
test
adc
cld
mulb
dec
pusha
fxch
or
inc
in
je
pusha
dec
push
popa
insl
mov
adc
adc
iret
aaa
mov
ljmp
cmp
adc
fisubs
icebp
pop
enterw
mov
inc
repz
test
ja
mov
lahf
das
mov
pop
dec
sub
sbb
jecxz
adc
in
cmovbe
pop
je
in
imul
xchg
ja
and
mov
enter
aaa
or
cmpsb
xor
sbb
cmp
adc
dec
sub
idivl
pop
mov
jl
and
or
adc
lret
push
jl
xchg
mov
cli
dec
jno
iret
pushf
mov
sbb
inc
push
jmp
mov
outsl
adc
lea
fiadds
je
and
pusha
mov
or
ret
sbb
bound
cmp
lods
pop
mov
int
xchg
repz
xchg
sub
cli
mov
add
dec
adc
push
pop
cs
addl
out
and
rcll
sub
cmp
ja
adc
mov
fnsave
cli
fnsave
sub
xor
test
out
in
cmp
and
jb
in
mov
mov
imul
jne
adc
sub
push
outsb
pop
sub
cmp
rcrl
testl
inc
lods
or
push
out
xor
imull
mov
mov
icebp
dec
cmp
ja
cmp
push
addr16
mov
testl
loop
fwait
mov
and
cmp
mulb
add
xor
loopne
pop
xor
jmp
enter
andb
insb
push
or
lock
add
pushf
and
call
lods
lcall
sub
xchg
cld
mov
das
sbb
fs
or
inc
jne
aam
aad
outsl
fdiv
adc
push
fstpt
dec
mov
movsl
arpl
mov
leave
jbe
inc
jnp
fists
push
xchg
adc
clc
insl
mov
push
ret
add
cwtl
push
or
ss
fcoml
cwtl
push
int
xor
orl
repz
xchg
jns
int
xchg
aaa
ss
xor
insl
sti
ret
or
cmp
add
inc
add
xchg
iret
lret
pusha
push
aad
cmpb
jno
mov
dec
ret
mov
leave
sub
or
movsb
add
mov
subb
lods
outsb
ffree
rol
in
mov
mov
sub
popf
add
xor
lods
pop
imul
cvtps2pd
pop
and
imul
fneni(8087
xor
fldt
xchg
testb
jle
inc
push
lret
dec
movsb
ss
sahf
xor
dec
int
iret
test
lds
outsb
mov
dec
or
fildl
lret
popf
mov
int3
pop
inc
push
loop
push
cmp
out
std
cli
add
lods
js
add
xor
roll
or
xor
mov
xchg
or
push
fdivl
sub
sbb
scas
jecxz
xchg
jmp
jo
xchg
sub
mov
cmc
cmc
dec
lret
fidivl
xor
insl
mov
lahf
loopne
mull
mov
xsha1
cmpsb
or
rolb
iret
cmp
adcl
mov
mov
insb
lds
sbb
xchg
lcall
sub
inc
jmp
sbb
cvttps2pi
mov
lahf
test
subb
jo
pop
stc
adc
xchg
nop
xchg
add
scas
mov
loop
jns
pop
adc
push
pop
inc
popa
sbbb
stos
aas
pop
jb
sub
push
push
ret
jne
add
mov
jae
fs
mov
pop
sub
fbstp
inc
pop
clc
test
lods
mov
aam
hlt
adc
push
out
data16
xchg
push
outsb
push
int
mov
sbb
shl
push
in
outsl
lret
ja
jmp
mov
cwtl
test
leave
into
addb
push
cwtl
xchg
mov
inc
and
adc
ret
outsb
pusha
xchg
push
push
add
popa
push
push
lods
sbb
orl
hlt
add
cmp
divl
addb
jmp
aas
jbe
mov
cs
cmp
fs
gs
dec
repnz
push
test
xchg
adc
push
add
addr16
push
push
push
jo
pop
jecxz
pop
js
rclb
xchg
jge
sbb
fwait
lds
push
pop
mov
cltd
or
cli
jmp
lcall
xchg
sub
pop
stc
lret
nop
and
decl
xorb
fstps
das
push
call
in
mov
popf
mov
insb
mov
lret
fwait
in
ja
fdivrl
icebp
das
mov
insb
pop
stc
cltd
fstl
jecxz
gs
mov
aaa
or
and
pop
repnz
shlb
and
ror
fadds
lock
lahf
mov
subl
into
sbb
dec
into
inc
xor
ret
rcrb
pushl
std
cltd
data16
call
dec
xor
iret
push
cld
cltd
xor
dec
imul
lcall
aad
or
inc
mov
in
xor
cltd
xchg
xor
imul
insb
test
aad
push
sub
nop
fcoms
arpl
mov
es
sbb
inc
push
push
dec
stc
dec
mov
enter
dec
loope
lds
out
outsb
add
gs
mov
notl
push
shll
out
cmpsl
or
mov
adc
sti
aad
ja
cmpsb
mov
icebp
pop
push
testb
in
mov
mov
fcmovnbe
inc
cmp
jne
jl
outsb
xor
stos
stc
dec
leave
mov
cld
pusha
cs
rcrb
movsb
mov
dec
mov
dec
inc
inc
adc
and
and
data16
repz
jge
lahf
and
stos
xchg
loope
rcl
jo
adc
mov
mov
mov
pop
jp
inc
clc
outsb
pop
dec
popf
lahf
insl
xchg
push
cmp
inc
dec
in
push
ffreep
inc
sub
mov
jecxz
push
mov
inc
push
mov
movb
pop
inc
cmp
outsl
sbb
cmpsl
adc
xchg
mov
push
daa
or
fists
jae
fs
adc
jne
adc
incb
mov
incl
mov
add
and
ds
inc
pushf
inc
out
or
dec
fistps
xchg
push
sarb
cmp
fstpl
jmp
cmp
mov
xchg
pop
or
jbe
cmp
inc
pmuludq
daa
movb
dec
mov
lcall
jno
xchg
push
inc
das
les
stos
pop
jo
cmp
gs
fstps
xor
shrb
jge
jge
cmp
es
test
mov
lods
sahf
mov
lcall
lcall
lahf
cmpl
ret
loope
mov
scas
mov
stos
ljmp
lea
ljmp
adc
push
iret
popa
pop
gs
int
popa
xlat
dec
xor
xchg
frstor
or
mov
mov
lahf
ljmp
loopne
and
daa
xor
inc
shl
cmp
pushf
add
mov
mov
jle
call
arpl
sbb
jno
inc
cld
mov
jae
lock
aaa
daa
rcl
cwtl
int3
push
out
pop
xchg
cmp
fdivrl
inc
sbb
lcall
rcrl
rolb
not
inc
sbb
rcrl
pop
loope
jno
and
pop
mov
push
push
mov
mov
stos
or
outsl
ss
fildl
repz
or
test
ja
or
mov
insl
addr16
fistps
gs
xor
movsl
xor
push
hlt
mov
xor
insl
repz
and
adc
sahf
jno
and
aam
pop
dec
adc
lock
fists
lds
sbb
add
inc
mov
jbe
push
mov
mov
popa
adc
cmp
xor
mov
sub
xor
mov
jecxz
loopne
pop
jbe
daa
jbe
xchg
je
scas
push
jne
or
mov
and
xor
fwait
cmp
sbb
ret
jae
bound
add
and
dec
mov
mov
inc
aad
scas
fldcw
negl
aam
out
lret
in
inc
into
dec
outsb
mov
sub
push
sti
and
mov
stc
dec
cwtl
add
xor
fsubrs
mov
sbbb
insl
mov
iret
leave
data16
xchg
mov
push
arpl
hlt
cmpsb
scas
adc
cltd
popf
stos
mov
sbb
jmp
cmp
out
sub
andl
nop
sbb
inc
mov
push
andb
int3
rcr
aaa
pop
xor
clc
pop
or
mov
loope
and
fdivs
inc
sub
cli
es
in
sahf
cwtl
sbb
push
pop
outsb
inc
out
mov
fldl2t
pop
jmp
icebp
iret
fisttps
cmc
leave
test
inc
ret
sbb
sub
dec
fmul
pushf
push
dec
fsubs
xor
jl
inc
jbe
mov
cmp
scas
and
ret
je
push
lret
scas
sbb
data16
jne
cli
push
int3
pop
cwtl
cltd
pop
cmp
mov
arpl
test
into
sarl
imul
cld
clc
std
mov
adc
mov
add
ja
mov
mov
mov
pop
lret
xor
add
jp
addl
mov
jl,pt
adc
mov
push
adc
outsb
push
cmp
out
ljmp
and
lss
mov
or
add
in
xchg
jmp
cwtl
xor
push
pop
pop
cmpsb
add
cmp
andb
push
adc
jge
out
clc
xchg
repnz
or
sbb
cmp
dec
adc
jo
call
shlb
insb
orb
sbb
dec
jae
sbb
stos
sbb
mov
jecxz
dec
sahf
sub
xchg
push
xchg
sbb
jge
xor
imul
cwtl
ja
add
shr
insb
fnstsw
pop
add
aaa
inc
daa
ret
jmp
fiaddl
add
and
movsl
sub
addr16
outsb
mov
mov
shl
pop
push
inc
sub
in
es
mov
scas
cmc
rclb
stc
testb
mov
mov
lret
clc
jg
jp
fsts
lock
cmc
add
clc
sbb
fnstsw
lcall
sbb
lods
push
pop
mov
add
mov
mov
or
adc
inc
mov
mov
ss
int3
fwait
pop
movsl
jge
pop
or
loopne
cld
mov
inc
xchg
in
mov
cmp
int
lds
add
vprotw
mov
call
scas
insl
fildl
jae
insl
jae
scas
in
out
cli
adc
call
push
add
or
shll
xor
add
insb
inc
test
and
call
shll
jecxz
add
or
inc
enter
fucomp
stos
or
adc
pop
sub
test
std
and
adc
jmp
mov
mov
inc
lds
xor
or
ja
imul
aad
inc
imul
jnp
add
and
stos
mov
jbe
inc
xchg
lret
popl
xlat
ljmp
roll
ja
or
or
out
push
dec
or
lret
hlt
int3
pop
clc
das
shll
mov
ljmp
xchg
adc
jmp
ret
add
shlb
cmpb
insb
fs
jno
loop
adcb
shrb
aad
xor
or
lahf
xor
adc
dec
pop
fldl
jp
scas
xor
inc
add
test
sub
test
xchg
lods
fcoms
imul
lods
or
inc
push
fnsave
xlat
repz
lods
fisubrl
push
ret
neg
rsqrtps
insl
mov
mov
in
pop
fwait
orl
mov
cmpsb
imul
or
pusha
shl
faddl
mov
inc
mov
mov
inc
pop
js
test
adc
mov
sbb
inc
scas
inc
mov
sbb
adc
arpl
xchg
dec
mov
dec
jnp
adc
inc
ss
test
dec
dec
stos
aad
sbb
rolb
cld
add
addr16
sbb
xchg
sbb
jno
movsl
movsb
mov
push
aam
pop
push
out
mov
and
dec
or
out
cmp
jns
pop
loope
punpcklwd
add
cli
in
jnp
pushf
add
ret
pop
cltd
sahf
enter
pop
pop
push
out
imul
popa
cmpsb
loope
hlt
popa
jo
sbb
xchg
out
insl
mov
test
les
and
and
insb
rcl
xor
push
inc
aas
mov
outsl
adc
inc
sbb
dec
ss
icebp
popf
movsl
mov
xchg
and
aaa
xor
add
mov
pop
sbb
insl
clc
cld
sub
or
imul
fs
fldcw
or
ja
out
push
inc
jl
iret
fists
and
xchg
adc
mov
dec
add
fldcw
pop
add
mov
lock
test
js
mov
into
cmp
lds
dec
loop
dec
adc
jge
xor
add
mov
sub
shrb
test
or
adc
loope
adc
lock
or
jge
jge
mov
xchg
sbb
pop
xchg
push
xchg
rcrb
fnstcw
mov
xchg
icebp
sti
push
cmp
shll
inc
adc
xchg
jg
xchg
inc
pop
and
xchg
lea
dec
add
lea
scas
and
aaa
jl
lahf
ss
mov
addr16
rcr
pop
or
cwtl
cmpsb
jge
lahf
mov
insl
aaa
inc
and
jle
lods
js
je
nop
imul
push
push
jecxz
mov
jge
mov
leave
inc
pusha
aam
ljmp
sbb
test
xchg
shll
mov
sbb
call
addr16
lds
lahf
xor
outsb
enter
jnp
dec
sbb
mov
ret
inc
jmp
jle
insl
pop
ret
cli
xor
arpl
fidivl
out
fmuls
mov
je
mov
xorb
mov
int3
mov
push
and
cltd
not
popf
sti
sub
js
inc
popf
cltd
or
iret
xor
add
shll
test
mov
and
test
jmp
cltd
cld
jbe
sbb
icebp
movsb
adc
out
movsb
jbe
push
cwtl
pop
and
stos
inc
add
mov
in
sarl
aaa
inc
or
mov
mov
lret
sahf
insb
clc
jmp
dec
idivl
or
jae
inc
push
jp
inc
sub
mov
mov
xor
frstor
cmp
inc
sahf
pop
dec
arpl
fs
pop
mov
stos
or
cmp
lods
ss
sub
movl
pop
loope
cmp
sbb
mov
mov
mov
and
xchg
push
push
shl
lods
mov
sub
das
add
cmp
in
or
enter
addl
mov
dec
pop
ds
jmp
movl
xchg
dec
cs
bound
imul
sahf
lods
dec
pop
mov
xchg
call
cs
lret
xchg
xchg
inc
cmp
in
push
outsb
ljmp
int
imul
xchg
xchg
fadds
sti
push
int3
outsb
or
aas
xor
outsl
and
push
sahf
sbb
jo
lds
and
inc
inc
cwtl
loopne
aam
dec
fwait
popf
mov
inc
daa
std
jge
mov
xor
incl
popa
sahf
mov
andb
into
pop
orl
cmp
push
loope
push
or
stc
sbb
push
mov
mov
and
mov
sahf
rcl
popf
cld
sbb
add
add
and
mov
xchg
jp
adc
ds
pop
pop
jge
pop
loope
aaa
mov
mov
jae
xor
inc
out
rorl
mov
loop
jne
icebp
sbb
testl
mov
push
lea
std
addb
ljmp
cmp
cmc
cmp
nop
jno
fstl
cmp
arpl
jb
pop
jo
mov
test
in
jge
jnp
aam
cmpsl
jp
test
cld
imul
xchg
pushl
jecxz
dec
cmp
and
add
xor
fs
in
jns
fcoms
fidivrl
or
nop
xor
lods
push
popf
lods
hlt
outsl
push
inc
iret
aas
shll
fsts
jae
mov
adc
outsb
inc
or
cmp
cmp
mov
inc
sub
and
fnstsw
add
imulb
lds
mov
and
lods
scas
push
shll
lea
mov
notb
xchg
rcrl
pop
jo
add
push
mov
negl
jo
cli
jge
mov
push
loopne
pop
add
jecxz
push
call
jb
sti
ljmp
stc
mov
ja
inc
push
lret
testl
bound
iret
sbb
nop
pop
lret
cmpsb
fadds
jmp
pop
ja
lds
fs
mov
pop
test
adc
and
xchg
data16
mov
ret
lcall
add
imul
imul
nop
and
adc
xor
and
enter
out
mov
inc
mov
jge
push
mov
aaa
sbb
and
sub
out
dec
lods
lock
push
mov
cmp
dec
cmp
inc
jb
insb
lea
inc
ficoms
sti
mov
jp
push
pushf
leave
imul
mov
jge
xor
gs
ds
pop
outsl
jle
push
shrl
sbb
stc
or
loope
mov
ss
in
andb
inc
jmp
ds
cld
push
movsl
cld
adc
xor
repnz
je
in
adc
dec
clc
sbb
pusha
sub
int3
jge
das
into
and
cwtl
nop
or
pusha
jle
pop
push
dec
xchg
jbe
in
and
sbb
lcall
push
cmp
mov
add
dec
cmc
sbb
jle
sub
add
lock
fwait
sbb
dec
dec
test
hlt
int
addb
xor
fs
and
push
inc
pop
sbb
and
je
or
das
sbb
test
pop
cmpsb
shrl
fs
aaa
mov
push
mov
cmp
sub
lret
out
xor
pop
mov
push
sub
stc
mov
add
and
jge
and
fisubrl
push
loope
mov
movsb
js
ret
mov
sub
or
push
gs
insl
xchg
movsl
fs
lret
js
xor
and
cwtl
int3
mov
cmpl
push
clc
aad
clc
mov
xchg
mov
cmp
or
fs
int
in
mov
nop
lahf
push
and
xchg
cmpsl
jp
sarl
sub
movsb
ret
sub
sbb
lret
dec
out
in
call
int
in
jne
sbb
gs
pushf
push
adc
pop
adc
gs
and
cmpsl
int3
mov
rolb
and
dec
or
repz
ret
in
xchg
or
scas
ljmp
xchg
add
sbb
jl
mov
pop
loop
add
lds
das
testb
aad
pop
ljmp
push
adc
ljmp
mov
mov
int
inc
mov
out
mov
xchg
push
pushl
cmpsb
xchg
ljmp
fnstenv
ss
mov
mov
pop
call
inc
push
mov
in
fiaddl
vpaddsw
push
dec
xchg
add
fldt
cmp
movl
dec
decl
and
loopne
notb
jo
add
fwait
stos
je
or
into
jae
xchg
jg
sbb
popf
add
push
stos
jb
adc
out
mov
sub
mov
adc
xchg
xor
std
and
mov
push
addr16
dec
pop
mov
mov
mov
xchg
xchg
mov
add
mov
popf
in
fstpt
inc
out
mov
call
mov
inc
mov
ja
loope
in
repnz
aaa
shrl
daa
fcmovnb
add
sub
jno
mov
in
jns
test
pusha
out
cmp
sbb
mov
lods
test
cmp
cmp
push
mov
or
imul
push
mov
mov
imul
cwtl
xor
in
push
ljmp
pop
inc
and
sbb
lcall
fsubr
lcall
lcall
scas
lret
jecxz
pop
test
outsl
xchg
adc
xor
loope
shll
mov
inc
jecxz
das
cld
push
cmovb
mov
jbe
into
sbb
sub
bound
les
stc
lret
dec
scas
add
mov
mov
popf
lock
jnp
xchg
mov
push
jp
subb
loop
dec
fwait
mov
testl
hlt
add
adc
and
cmp
addr16
loop
mov
xor
xchg
and
lcall
shlb
inc
and
lods
cmpsb
mov
sub
fildll
jae
ja
xor
mov
sub
xchg
xor
mov
adc
ret
sub
icebp
add
neg
xchg
je
and
jle
inc
add
mov
repz
pushf
and
cmp
pushf
daa
adc
pop
notb
mov
cmp
in
mov
mov
pop
fistps
add
jecxz
int3
xchg
adc
cs
repz
xchg
cmc
jle
sbb
xlat
jb
popa
xchg
or
mov
fstpl
push
and
in
in
ret
or
es
imul
mov
mov
sbb
mov
xchg
mov
jno
add
sahf
loope
pop
gs
mov
push
jg
mov
push
add
and
loop
inc
in
test
mov
aad
jp
mov
xchg
int3
sub
adc
xlat
inc
mov
sar
imul
mov
mov
xor
fidivs
push
or
add
movsl
or
gs
ss
stos
cltd
mov
push
cmpsb
stos
fiaddl
sub
hlt
inc
jnp
pushl
fsubl
mov
or
out
or
inc
jns
xor
ret
push
mov
loope
xor
loop
sti
leave
cmpsb
sub
loope
or
std
xor
aas
xor
sarl
std
aaa
xor
add
test
fimuls
sti
gs
mulb
jne
out
test
push
push
pop
and
mov
mov
xchg
negb
xchg
imul
addr16
daa
pop
ret
cmp
lcall
cmp
mov
sub
push
mov
idivl
pop
adc
mov
outsl
test
lock
imul
jbe
xchg
andb
mov
lods
and
xor
repnz
and
mov
repz
dec
ret
dec
or
cmpsb
sub
lock
and
ret
cltd
add
call
pop
hlt
xorb
enter
xor
ss
xchg
scas
outsl
divb
and
lods
mov
in
jmp
ss
jg
je
cmp
push
imul
fucomp
les
push
sub
bound
clc
sub
out
mov
and
cmp
test
stos
fs
shrl
in
lret
xchg
stc
dec
and
shr
jno
jmp
mov
mov
inc
sub
xor
push
idivb
pop
push
rcrl
repz
insb
xchg
daa
add
std
add
es
scas
push
lods
xchg
popf
clc
nop
fwait
mov
xor
out
or
ss
cwtl
and
pop
xor
pushf
lods
jl
pop
pop
imul
or
in
sbb
rcrb
sahf
ss
pop
xor
xrelease
xchg
jg
mov
test
mov
mov
mov
es
mov
fimull
jae
adc
adc
adc
je
mov
nop
aaa
popa
fdivrl
inc
loopne
pop
pop
mov
dec
mov
mov
jecxz
int
out
adcl
inc
icebp
imul
pop
imul
imul
nop
scas
fsub
std
rolb
stos
adc
enter
out
jno
rcr
popa
addw
xor
and
repz
lods
hlt
dec
cmc
std
or
jb
mov
and
push
push
push
cli
jl
jo
sahf
cli
and
push
dec
cmc
mov
mov
int
stc
movsl
stc
es
mov
sub
sub
pop
or
add
les
mov
ljmp
outsl
mov
add
and
mov
sti
stos
push
push
gs
xor
lds
pop
mov
es
xor
add
aas
sbb
sub
jl
imul
test
cmpsb
lock
mov
ja
mov
inc
dec
stos
adc
test
mov
nop
enter
pop
test
jp
jno
or
in
pop
ss
jl
inc
int
out
lret
cmc
mov
or
or
and
out
lret
lock
cld
test
push
ss
dec
add
pop
xchg
mov
cmp
cli
loop
les
xor
test
stos
cmp
in
cli
enter
incl
or
lret
in
test
dec
data16
sub
rcr
and
lock
push
aad
sbb
sbbl
inc
mov
arpl
lcall
add
xchg
fists
rcrl
dec
or
cltd
sbb
xor
rcl
mov
and
jl
cld
adc
popf
scas
lret
ret
xlat
inc
cmp
dec
xchg
xchg
inc
sub
je
jb
adc
jge
outsb
aam
mov
into
add
int
and
lret
fistl
mov
adc
xchg
addr16
sahf
jecxz
addr16
mov
loope
push
rcrl
xchg
test
dec
mov
psadbw
ljmp
lock
mov
loop
or
mov
mov
pop
adc
adc
loop
rcl
enter
shlb
iret
mov
pop
mov
xor
ss
dec
jbe
hlt
fdivrl
cmpsl
and
mov
loopne
popf
pop
jns
in
push
out
jg
mov
das
cltd
push
mov
mov
les
sbb
inc
mov
je
lods
add
sbb
inc
or
int
mov
iret
ds
xor
or
aas
push
loop
push
xchg
dec
loop
jb
aam
inc
sbb
mov
cmpsb
mov
imul
ja
adc
xor
mov
rolb
addr16
rcll
test
adc
mov
pop
push
test
js
add
fwait
cmpsb
sbb
fs
mov
jne
add
pop
xchg
xlat
je
pushf
sbb
daa
and
jle
aam
neg
xchg
fistpll
inc
je
out
daa
cmpl
lods
fs
or
jecxz
dec
je
adc
adc
or
or
sub
lods
adc
and
pop
cmpsl
pop
ret
aad
jns
cmc
inc
sbb
xchg
rcrb
lods
mov
ret
pushf
jns
sbb
xorl
daa
and
push
pop
pop
fwait
das
pop
add
or
mov
fld
lcall
cwtl
sub
jecxz
mov
repnz
mov
sbb
and
xor
jnp
cmpsl
sbb
xchg
mov
cltd
es
frstor
out
add
mov
pusha
fbld
cld
mov
mov
pop
xor
fwait
add
in
push
cmpsl
mul
mov
mov
dec
les
mov
push
inc
jecxz
pop
lds
fs
mov
popa
cmpsl
jmp
mov
jno
mov
add
filds
push
rcrb
push
sbb
xchg
inc
xchg
gs
lahf
jecxz
jno
dec
mov
add
pop
mov
fcoms
push
inc
mov
xchg
cmp
pop
mov
jne
push
imul
int3
dec
adc
popa
cmc
movb
addr16
push
lods
int3
aaa
mov
lods
cmp
xchg
loope
cmc
xorl
inc
in
fucomip
mov
push
and
mov
imul
pusha
mov
cmpsb
arpl
mov
jl
push
mov
sub
popf
es
aad
mov
push
dec
dec
cld
push
adc
jg
jno
int3
lahf
push
mov
push
inc
subb
inc
in
das
mov
sub
mov
inc
and
icebp
cmp
dec
mov
test
push
outsl
sbb
add
mov
push
test
lea
daa
lods
pop
xor
es
mov
mov
rol
insl
test
or
xor
and
aam
aas
pusha
push
push
or
push
data16
adc
mov
jns
cli
push
add
mov
push
add
dec
adc
lock
test
shlb
push
cmpsl
loope
pop
add
inc
fwait
ret
fisubrs
loope
data16
not
adc
mov
arpl
in
mov
lahf
mov
icebp
xlat
imul
test
dec
sahf
jecxz
std
xlat
lods
and
mov
xor
insl
insl
ss
das
xchg
fs
movb
push
add
xlat
loop
cwtl
cmc
xor
sub
lret
inc
sub
rol
lock
jmp
dec
xor
shlb
aad
pop
sub
xchg
pop
inc
xchg
nop
scas
stc
test
cmp
in
xor
clc
aam
call
jl
fimull
and
nop
adc
or
fidivs
dec
pop
dec
mov
xchg
pop
xor
movsb
in
or
cwtl
dec
xorl
int3
out
sbb
call
mov
mov
and
movsl
mov
les
cmp
shr
js
add
sahf
sub
sti
int3
jp
mov
sahf
push
scas
ret
aas
push
mov
mov
add
and
lret
push
lock
inc
fs
enter
cli
rcl
xchg
mov
fcomip
pop
ja
add
fistps
fnstcw
mov
inc
jle
ss
push
aaa
add
dec
or
pop
lods
mov
mov
cmp
mov
int3
hlt
pop
adc
mov
adc
lea
mov
mov
adc
cmp
lods
insb
or
rol
mov
mov
insl
icebp
or
push
sub
jg
jp
and
arpl
mov
insb
rorl
inc
push
jmp
cwtl
mov
scas
es
mov
ja
jb
mov
mov
cmp
dec
sbb
push
int
or
sahf
inc
mov
repz
dec
int3
enter
pop
cltd
or
and
repnz
dec
loop
fldl
das
pushf
jbe
stos
out
cs
mov
repz
test
test
pop
leave
stos
adc
icebp
mov
jno
cmp
lahf
dec
fwait
xchg
mov
outsb
lock
sbb
sbb
sbb
js
ret
ss
and
aad
stc
fnstcw
fimuls
test
jmp
cmp
lcall
je
daa
repnz
adc
adc
pop
add
jge
in
loopne
add
sbb
adc
xchg
push
and
imul
xor
sbb
lret
and
movsb
push
pop
add
addb
dec
mov
inc
shrl
les
sbb
les
xlat
xor
inc
repz
adc
adc
icebp
std
cs
push
clc
pop
adc
or
jbe
cmpsb
adc
push
jle
or
repnz
and
call
pusha
test
leave
stos
stos
mov
clc
mov
jae
xchg
add
mov
inc
dec
pop
in
loopne
xor
adc
scas
and
push
xchg
and
mov
arpl
jmp
out
xor
andb
pop
adc
xor
xor
xchg
test
loope
pop
fdivs
mov
pop
mov
dec
in
mov
insb
mov
movsl
repz
cmp
lods
mov
fadds
mov
lea
ljmp
push
push
dec
adc
ffree
dec
push
cwtl
push
and
sub
movsl
lcall
aas
cmp
jbe
push
js
pusha
push
mov
shrl
xchg
push
enter
sar
lret
lcall
mov
repz
and
rol
inc
nop
cmp
repz
adcl
mov
pushf
cs
and
repnz
cmpsl
fstl
mov
push
je
inc
ret
push
movsl
test
inc
push
into
xchg
sub
out
or
aad
fcoms
mov
adc
dec
sti
jmp
fidivl
mov
push
add
mov
mov
or
outsb
nop
push
adc
lods
pop
mov
and
out
lock
jmp
in
out
push
repnz
pop
xchg
in
aad
sbb
outsb
ret
sahf
sub
add
adc
loope
lret
daa
sbb
mov
mov
jbe
sbb
cmp
cmp
xchg
xor
icebp
pop
repz
test
lahf
addr16
lds
sub
lea
stos
aas
imul
outsb
mov
cmpsb
aam
ja
inc
or
cmpsb
clc
scas
jno
add
pop
cmp
mov
test
mov
dec
ds
pop
cmpsb
test
cmpsb
in
and
xor
fldcw
cmp
dec
xchg
mov
add
dec
test
cmpsl
adc
mov
and
jnp
pop
and
inc
jne
add
fistpl
mov
cmpsl
jecxz
sub
std
out
add
jmp
pop
push
add
mov
aas
iret
pop
inc
pop
jb
or
in
rol
xchg
fisttpll
out
in
adc
out
repnz
arpl
cs
dec
adc
aam
ljmp
add
cld
ret
push
test
push
imul
mulb
nop
push
dec
add
stc
test
scas
and
jge
pop
std
lods
lret
data16
stos
out
add
mov
fsub
mov
adc
cmpsl
sti
in
inc
arpl
int3
or
sub
lock
mov
sti
lds
imul
lods
rorl
add
cmp
cmpb
mov
and
stos
push
jecxz
test
cmc
cmp
pop
cmp
enter
lret
into
popf
jae
cmp
popf
test
daa
inc
fildl
mov
dec
adc
inc
push
movsl
jp
jg
and
outsb
sar
arpl
std
out
call
loop
xchg
leave
enter
repz
pop
and
jne
lahf
push
sbb
or
repnz
push
jmp
pop
leave
xor
jl
cltd
test
and
sbb
jae
lds
cld
xchg
jno
out
rclb
pop
icebp
sbb
cmpsl
clc
push
mov
jp
adc
test
push
sub
inc
inc
enter
mov
aad
test
push
subl
cmpsb
fwait
imul
or
pushw
int3
xor
repz
mov
shrb
ja
jno
mov
mov
push
imul
mulb
sbb
and
les
out
push
stos
out
movsl
dec
dec
out
pop
dec
test
adc
loope
test
lahf
mov
aam
enter
dec
mov
test
mov
mov
arpl
xor
sbbl
jmp
jnp
daa
sbb
fdivrs
xchg
fwait
je
out
gs
arpl
cmpsb
xchg
mov
push
push
out
xchg
and
adc
scas
push
mov
sub
lret
adc
mov
stc
sbb
push
xchg
daa
sub
xor
lcall
inc
add
pop
push
hlt
pusha
mov
addr16
adc
sbb
xor
jge
lret
push
push
aam
sbb
adc
sub
lods
mov
mov
int3
mov
in
inc
sti
aaa
jne
jb
pop
pusha
leave
push
jmp
scas
in
push
jmp
imul
xchg
lods
test
hlt
in
ret
sbb
enter
add
aas
mov
jo
sbb
cmp
fidivrl
test
in
cmp
or
inc
movsb
ja
out
cltd
push
sbb
inc
mov
mov
je
ficoml
push
movsl
pushf
adc
push
and
jno
pusha
add
mov
in
jp
dec
cs
xchg
or
jbe
push
jmp
fcomip
shl
test
adc
jo
mov
xor
push
or
jae
movsb
add
dec
mov
aas
in
lret
fistpl
sbb
ret
ret
or
add
dec
sbb
inc
mov
movsb
jmp
enter
fadds
aam
sub
stc
andb
das
lcall
cmpsl
test
fsubs
dec
sbb
lret
aad
pavgb
mov
bound
dec
mov
mov
cwtl
push
jecxz
sti
adc
or
jg
loopne
es
scas
pop
pop
arpl
add
divl
sub
cmp
imul
sbb
and
cld
mov
inc
cli
sahf
dec
pushl
icebp
sti
inc
push
mov
pop
paddusb
mov
std
adc
lahf
std
repz
pop
pop
inc
adc
xor
fs
add
or
fbstp
jle
bound
dec
mov
int3
pushf
outsb
lods
mov
inc
icebp
ds
shll
inc
add
mov
add
add
sub
mov
pop
lret
sbb
pop
dec
sbb
jae
inc
and
fwait
jno
gs
and
pop
aaa
scas
mov
imul
insb
mov
sti
jb
inc
insl
dec
adc
sbb
incl
setno
data16
aad
jle
scas
xor
adc
xchg
inc
ss
mov
jno
test
fildl
imul
jge
cld
test
fwait
pop
mov
gs
mov
xlat
xchg
idivl
inc
fbstp
xchg
mov
inc
sub
int3
out
pop
cld
or
clc
xchg
fnsave
sbb
ss
dec
ret
scas
xchg
xchg
xchg
push
loopne
mov
mov
loopne
clc
xor
cmpl
pop
loop
rcr
leave
pop
mov
dec
and
mov
jb
sbb
cmp
add
mov
adc
inc
imul
shr
xor
insb
adc
dec
xor
cmp
push
rcll
pop
add
pop
push
mov
jno
or
mov
adc
iret
mov
or
scas
rclb
add
cs
popa
mulb
ret
aad
fmull
mov
or
push
jns
and
sbb
mov
stos
idivb
mov
push
jmp
sub
dec
sub
pop
fidivrl
sbb
movsb
lods
mov
popa
push
sbb
pop
or
push
mov
mov
or
repz
movb
cltd
mov
mov
or
sbb
test
mov
mov
cmp
sbb
lods
and
sbb
mov
pop
out
lods
push
mov
or
xchg
cmp
addr16
dec
cmp
cmp
icebp
sub
jne
nop
lods
leave
aaa
or
and
sub
xchg
int
ret
pop
sti
das
adc
sub
xor
mov
and
enter
ret
pop
shrb
jle
aam
xchg
ljmp
xor
fadds
in
cld
dec
and
pop
es
pop
mov
add
lret
mov
jg
in
jle
sub
push
xchg
adc
jbe
jp
pop
es
in
mov
cmpsb
inc
mov
aas
out
adc
out
cmc
or
popf
fists
jp
cld
cmpsl
aad
or
sub
add
cld
mov
xchg
mov
or
daa
adc
mov
fnstsw
add
in
decb
int3
movsb
jo
mov
popl
sub
hlt
push
mov
jmp
mov
cmpsb
test
or
outsl
aam
decb
mov
mov
sbb
jbe
inc
in
std
push
lahf
add
mov
pop
jp
xchg
add
mov
movsb
loope
add
mov
mov
cmp
pop
cmc
fnsave
mov
cmpsl
movsl
dec
and
xchg
or
and
dec
jecxz
cmp
andl
test
out
mov
jno
loop
sub
jge
xor
filds
repz
cmp
insl
xor
mov
push
stos
and
push
jl
loop
ret
dec
subl
xchg
loope
mov
sahf
inc
int
test
or
sub
push
movb
lea
fwait
cmc
loopne
and
pop
mov
sahf
popf
dec
pop
outsb
adc
pop
int
std
ret
mov
stos
push
shll
pop
add
shlb
leave
jge
add
repnz
cmp
notl
cmpsb
shll
xchg
mov
lcall
addr16
lret
xchg
push
push
adc
adc
jmp
mov
pop
push
pop
movsl
xor
xlat
fisubrl
or
adcl
and
adc
test
repnz
push
nop
lock
je
stos
mov
loopne
ret
enter
jo
add
or
push
push
mov
nop
insb
cltd
lahf
push
fiaddl
ficompl
loop
shll
cwtl
xchg
adc
jns
lods
lcall
dec
pop
imul
aaa
insb
sub
arpl
pop
ljmp
jb
out
roll
in
xchg
dec
hlt
xor
test
dec
fucomp
jno
inc
push
mov
hlt
mov
sti
dec
addr16
addr16
inc
and
sti
outsb
cltd
in
shll
lds
push
test
test
cmp
sub
cmp
lods
mov
or
xchg
ljmp
mov
movsl
mov
inc
cltd
testb
loope
jg
mov
and
inc
jbe
dec
and
data16
in
push
pop
out
xchg
cmc
data16
mov
aad
call
lret
je
or
dec
jmp
adc
mov
cli
add
pop
fstl
repz
std
sarb
sti
in
call
mov
cmpsb
pop
inc
das
mov
mov
loopne
loopne
adc
and
out
jnp
jno
pmulhuw
sbbb
outsb
mov
inc
pop
xchg
inc
sbb
outsl
out
cmp
psubsw
daa
mov
mov
cmpsl
dec
jno
fadd
mov
faddl
mov
rolb
scas
push
and
loop
mov
and
mov
inc
mov
jne
mov
lcall
leave
test
jbe
xchg
mov
push
lcall
stc
xor
push
call
xor
fsubl
adc
mov
cltd
mov
decl
jmp
mov
outsb
adc
xor
cmp
mov
scas
mov
sub
hlt
cld
andl
xchg
pushf
enter
jns
pop
push
int3
and
iret
imul
mov
mov
mov
bound
or
xor
jecxz
push
loop
push
mov
stc
in
fimull
shr
lea
shll
jecxz
es
out
enter
pop
fs
mov
into
sub
pop
mov
or
loopne
pop
push
adc
mov
pop
into
lcall
sbbl
movsl
pop
pop
add
fsts
loope
xor
push
push
adc
jae
add
xchg
scas
cwtl
lcall
jecxz
xor
int3
pop
stc
test
jp
loop
test
sbb
repnz
cmpsl
int
pop
mov
sub
push
mov
fprem
inc
cmp
outsl
mov
repnz
jecxz
push
adc
rcrb
mov
repz
gs
jecxz
les
sbbb
leave
movsl
in
cltd
repz
jmp
movsb
addl
inc
dec
cld
xor
or
les
mov
in
in
ret
xchg
mov
stc
add
popa
xor
arpl
jp
xor
aas
aad
clc
push
jae
pop
loope
in
mov
sbb
fcom
jmp
sub
scas
fnstsw
xchg
pop
push
cld
add
pop
and
ds
or
dec
popf
mov
es
push
or
es
and
cmp
cmc
push
aas
and
jp
popa
jbe
outsb
and
daa
cs
arpl
sbb
into
sahf
ret
inc
pop
jl
int3
gs
add
lods
dec
jnp
push
xor
cmpsl
and
aad
push
loopne
iret
sub
sbb
add
jg
mov
ss
sub
lds
or
cld
push
xchg
test
xchg
and
push
jl
js
shll
addb
jns
push
call
sub
sub
and
out
cmp
xor
test
mov
mov
or
popa
outsb
inc
push
dec
int3
pop
jns
arpl
or
mov
ret
ret
daa
outsb
xchg
mov
imul
jl
and
push
add
test
addr16
adc
loope
sbb
lods
lret
xchg
iret
pop
sti
xor
jo
testb
nop
pop
sbb
popa
and
push
rcll
xor
mov
jbe
dec
lea
push
mov
lret
stos
xlat
mov
cmp
pop
pop
sub
jae
push
ret
xchg
repz
xchg
and
xor
mov
mov
jge
mov
lods
bound
xchg
ret
cmc
push
mov
mov
jg
jecxz
lds
adc
aad
jno
push
int
mov
push
cmp
jbe
inc
pop
das
sbb
shll
fbld
mov
mov
movb
push
inc
popa
jge
mov
insl
addr16
pushf
imul
stos
xchg
jbe
push
int3
jnp
inc
add
adc
adc
into
push
test
xor
push
mov
cltd
dec
imul
rorb
push
into
loope
sub
add
stc
lods
pop
dec
cmp
jmp
push
jmp
test
pop
out
out
aad
daa
add
testb
mov
idivl
sub
jne
sub
cmp
push
or
push
or
xchg
pusha
push
jecxz
dec
test
pushf
call
jne
les
std
xchg
xor
add
jmp
incb
enter
aaa
fimull
jo
add
or
pop
cmpl
lds
mov
aaa
pop
pushf
pushf
ret
add
push
xchg
scas
cmp
jp
fldt
xor
and
lcall
fsubr
les
and
ret
push
push
mov
mov
xchg
sbb
out
lods
jge
sbb
xor
mov
fidivrs
adc
mov
jecxz
sub
andl
push
jle
add
mov
hlt
pop
cltd
adc
idiv
jo
adc
jmp
mov
and
mov
imul
call
outsl
cmpl
sub
or
clc
xchg
es
mov
les
sbb
cli
add
jge
xchg
fimuls
and
repz
cld
pop
jecxz
pushf
pop
and
and
aam
xchg
das
xchg
incl
sbb
test
in
in
mov
mov
lret
flds
out
mov
dec
test
rclb
inc
test
insb
sub
mov
adc
sarb
mov
icebp
cmp
popf
sbb
xor
dec
mov
popf
sarl
inc
test
loope
std
add
add
bound
popa
mov
mov
and
fwait
aad
jns
lods
lods
test
push
mov
and
out
push
lahf
push
test
inc
fs
mov
cmp
lret
sbb
fs
out
aaa
iret
add
inc
in
addb
or
push
dec
add
jg
cli
inc
jp
add
mov
test
stos
sahf
stc
cmp
js
or
loop
xchg
sbb
pop
sahf
fidivrs
testl
mov
adc
fstps
jo
inc
jbe
cmp
mov
loope
jne
dec
mov
pop
mov
sub
mov
lret
imul
sarl
pop
cmp
je
repz
xchg
xor
sbb
nop
lods
xor
add
sbb
xor
xor
inc
insb
notl
enterw
es
pushf
jp
push
push
jne
push
push
mov
pop
sbb
push
and
mov
push
out
out
mov
push
stos
mov
jg
repz
or
pop
push
lods
mov
xor
negb
cld
cs
cmp
mov
je
push
mov
insl
adc
xchg
test
ljmp
jns
hlt
xchg
push
mov
jne
add
xchg
imul
test
and
pop
loop
daa
xor
or
mov
sbb
clc
adc
fwait
out
loope
lods
sub
call
repz
ja
ja
xchg
into
pop
push
in
das
inc
jmp
add
pop
enter
js,pn
jno
inc
je
movsl
ljmp
mov
add
ss
mov
dec
jne
lcall
mov
sub
inc
mov
daa
sar
xchg
popl
cmpsb
lahf
call
or
push
outsb
shll
or
scas
std
inc
scas
js
addr16
je
jl
cmp
lock
mov
imul
aas
test
filds
and
sbb
mov
push
lock
cmp
or
push
cmc
sbb
or
shll
xchg
stos
inc
jo
dec
jno
cmp
xor
and
out
push
movsl
jns
fs
ss
sub
lret
xor
jae
xor
jp
inc
outsb
test
es
mov
add
and
mov
adc
cmp
inc
bound
cmp
mov
jle
lds
mov
stc
test
loope
icebp
fistl
and
xchg
lea
lret
fwait
lret
fisubrl
in
pusha
pop
sbb
js
rorb
aam
pop
vprotb
sub
fildll
or
popa
cltd
cmp
add
nop
and
push
pop
movsb
das
pusha
or
fimuls
push
jg
pop
pop
cmpsl
mov
clc
shrb
testb
repnz
call
pop
out
js
call
lods
pop
sbb
cltd
or
jge
mul
cwtl
mov
cld
aaa
inc
sbb
into
inc
push
std
and
xor
in
or
xchg
fs
mov
cwtl
jno
pop
scas
repz
daa
shlb
sbb
and
in
shll
insb
inc
mov
movsl
xchg
lods
mov
imul
jmp
jmp
sbb
sub
xchg
sbb
loope
xchg
xchg
aad
cli
out
sbb
popa
mov
jo
mov
sub
fsubrl
outsl
cmpsb
adc
sub
popa
insl
ret
dec
or
xor
icebp
and
lcall
adc
loope
jecxz
lahf
fdivrl
jne
pop
inc
call
jge
movsb
sub
out
sub
jnp
pop
ror
sub
mov
sarl
adcl
data16
add
aas
jmp
mov
out
inc
in
and
inc
inc
inc
pop
mov
jae
xchg
not
cld
repz
jbe
and
lret
inc
cmpsb
cmp
sub
pop
hlt
push
dec
or
ret
fucomip
add
jbe
lcall
sub
or
mov
mov
push
mov
stos
hlt
stos
jbe
xchg
lret
lcall
das
pop
das
aad
push
fcoms
cmp
lretw
mov
je
sti
int
les
out
or
sbb
xchg
jmp
sahf
fisttpl
jg
std
pop
add
gs
data16
sub
in
and
jae
xor
and
sub
incb
mov
bound
lock
aaa
mov
pop
pop
inc
sarb
xchg
daa
jmp
jecxz
sub
or
mov
cmovno
and
xor
lds
shrb
jns
xchg
lea
push
push
sbb
pop
outsl
or
or
dec
mov
sbb
adc
in
pop
xor
jle
cmp
sbb
icebp
divl
push
inc
flds
sub
mov
aaa
aam
push
push
sub
std
ret
mov
dec
xchg
push
test
xchg
nop
cmp
imul
mov
push
fwait
jmp
stos
outsb
push
adc
cli
insl
jnp
push
repz
inc
mov
pop
push
imul
imul
int3
inc
dec
cmp
add
rorb
push
sarl
mov
pop
cmp
dec
aas
ret
cmp
loop
faddl
mov
les
lods
add
or
popa
mov
iret
ret
jp
icebp
jno
pusha
push
and
test
mov
into
ffree
jmp
and
and
adc
cltd
xor
pop
add
xchg
mov
sbb
jbe
not
add
sub
rorl
dec
aaa
enter
adc
sbb
popa
add
xlat
scas
mov
ficomps
xorl
dec
aad
addl
dec
sbb
shlb
xchg
lahf
mov
sbb
rol
imul
jns
push
inc
dec
jecxz
push
imul
test
movsl
test
mov
movl
pop
sub
mov
mov
movsb
stos
and
jecxz
xchg
pop
sub
sahf
movsb
cmp
popf
xchg
fisubrs
pop
jbe
push
out
push
mov
jnp
cmp
pusha
rclb
lods
inc
popa
stos
lahf
aaa
inc
mov
fs
mov
int3
jecxz
dec
dec
jle
add
cmp
outsb
sbb
push
xlat
push
shl
and
cltd
xor
cmp
dec
loopne
rcll
fsubrs
lock
mov
rcrb
mov
leave
scas
xchg
insl
shll
mov
stc
dec
pop
cli
xchg
cmp
fldt
pop
pop
jge
jb
jb
dec
ret
sub
lret
movsl
push
mov
test
jl
inc
insl
cld
cltd
or
pop
adc
gs
outsb
mov
cmp
sbb
pop
arpl
push
stos
in
sub
mov
pop
push
leave
sub
or
dec
push
int
cmp
adc
or
dec
sub
bnd
sahf
mov
xchg
mov
fstps
xor
jnp
jb
sub
add
frstor
mov
fldenv
pusha
push
and
shrl
out
jmp
std
push
and
gs
stos
lds
scas
loop
in
gs
xlat
pop
inc
jle
mov
push
cmp
add
in
daa
cli
lods
pop
sbb
pop
repnz
cmp
cli
ret
push
mov
outsb
rorl
ljmp
jo
outsb
and
or
pop
out
mov
xor
cmova
pcmpeqw
cmp
or
mov
jl
cmp
push
mov
loopne
jl
and
xor
mov
sarb
fwait
stc
add
sahf
add
jp
mov
addb
shll
call
in
mov
mov
xchg
ss
scas
orl
and
sub
mov
sbb
scas
pop
ljmp
int3
fnstsw
cli
stos
addl
outsl
fdecstp
adc
outsb
add
movsb
xchg
lret
fisubl
sti
push
mov
xchg
test
nop
movl
sub
mov
inc
xor
push
add
outsb
ja
fwait
sbb
sbb
mov
push
rcr
cld
cmp
pop
pop
fwait
or
dec
aas
adc
mov
adc
clc
movsb
ja
in
mov
in
daa
bound
dec
push
dec
mov
fisttps
popf
mov
inc
or
cmc
stc
les
aaa
sub
lcall
push
shrl
arpl
xchg
gs
mov
sub
mov
in
cmp
xchg
or
negl
cs
push
cltd
enter
cmp
xchg
inc
insl
es
sub
rclb
lcall
in
add
in
into
jae
xchg
call
sbb
daa
push
xchg
aaa
imul
push
cmc
ror
sti
or
loope
fsubr
popa
inc
mov
or
xor
xchg
pop
push
or
mov
in
fnstcw
sti
sbb
dec
clc
repz
fisubs
pop
repz
jmp
sub
dec
cmp
in
lcall
push
loop
adcl
adc
loop
push
stos
movsl
imul
sbb
xchg
inc
mov
imul
jmp
jmp
into
mov
mov
add
fsubl
mov
cmp
and
dec
or
push
push
inc
or
sbb
sbb
xlat
cmpsl
andb
sbb
add
fistpll
fsts
decb
mov
lahf
jle
jae
fisubl
aas
pop
or
ret
mov
loop
xchg
adc
inc
loopne
add
lahf
in
out
enter
cmovb
mov
sbb
mov
xlat
popf
mov
out
cmc
lahf
stc
mov
inc
das
jge
add
mov
or
sbb
outsl
orb
dec
sbb
push
add
leave
push
insl
mov
and
mov
mov
xchg
mov
cmpsl
mov
in
aas
push
loopne
leave
cmpsb
push
addb
mov
movsb
or
pop
scas
iret
adc
outsl
xor
int3
ja
push
outsl
inc
jmp
arpl
mov
inc
ja
sbb
jno
xchg
subb
rorb
scas
or
xor
cmpsb
icebp
mov
push
popa
xchg
cli
xchg
cs
xor
lret
mov
and
out
sbb
aam
enter
shr
sbb
jmp
add
popf
test
inc
cmp
icebp
loopne
dec
xchg
push
in
adc
stc
dec
fldt
addb
pop
fadds
and
add
fidivrl
ss
loop
stos
ret
and
js
movl
repz
pop
cli
and
jmp
outsl
and
loopne
out
and
adc
inc
aad
dec
adc
push
mov
mov
leave
push
pop
push
data16
es
icebp
jne
ret
fnstsw
pop
mov
scas
mov
ret
cmpsb
aad
lret
dec
loop
push
cmp
out
rep
jne
sub
xchg
mov
push
add
sub
sub
jmp
lahf
jne
lods
data16
mov
or
mov
mov
add
jbe
mov
pop
stc
dec
inc
fiaddl
xor
pop
rorl
cmpsb
sub
jb
arpl
xchg
inc
sbb
sbb
mov
fcom
repnz
mov
test
cld
mov
and
push
jl
mov
negb
cltd
std
cmp
rcrb
mov
push
inc
xchg
adc
imull
fimuls
cmp
jne
imul
data16
pop
inc
sbb
add
push
push
mov
dec
movb
mov
pop
xlat
mov
jg
in
call
pop
flds
shl
mov
jno
cmpsl
dec
hlt
loopne
mov
inc
daa
jnp
test
ror
mov
sti
outsl
xor
movsb
xor
aam
clc
push
aam
sti
xchg
xchg
mov
push
popf
in
mov
andl
xchg
out
fisttpl
out
adc
mov
mov
ljmp
inc
enter
scas
xchg
loope
lret
mov
mov
add
cmp
fldl
repz
popf
es
mov
sub
mov
push
loop
call
inc
or
cltd
pop
ss
lret
in
repz
pop
mov
sub
mov
mov
dec
arpl
inc
es
xchg
addr16
xor
test
and
lcall
and
sbbl
lahf
shll
outsb
test
jne
push
mov
out
sbb
fistl
add
mov
inc
cmc
dec
xchg
lret
xchg
outsb
inc
mov
cmpsb
test
in
sub
adc
push
add
lcall
and
pop
push
mov
das
int3
aad
pop
fs
lock
ds
ficompl
xchg
repz
pop
jb
sbb
jbe
mov
add
cmp
cmp
stos
data16
xchg
imul
adc
movsl
sub
loope
jns
and
push
shr
leave
jp
popa
jbe
aaa
cld
dec
test
sbb
popa
push
lea
lcall
icebp
pop
movsl
add
iret
cmpsl
jg
inc
je
inc
lahf
out
in
fistpl
sbb
sbb
dec
pop
testb
movsb
add
pop
sub
adc
lods
pop
sub
out
or
dec
pop
xorb
push
dec
fs
roll
movl
and
xor
push
sub
push
mov
fucom
mov
pop
lock
je
popf
aas
in
aam
mov
lcall
mov
fs
mov
les
sbb
out
pop
push
xchg
mov
mov
mov
cmpsl
mov
adc
and
jb
incb
daa
fdivp
dec
cld
movsb
lods
or
mov
repz
js
adc
mov
sub
cmp
push
inc
test
push
inc
data16
or
inc
sbb
jbe
or
push
call
movl
mov
jle
cld
pushf
xchg
xor
gs
hlt
dec
push
insb
stc
les
lea
and
dec
pusha
cs
ljmp
and
shll
inc
ret
lock
cmp
push
inc
in
xorb
xchg
mov
cld
or
fdivrp
cmpsb
xchg
mov
jle
test
rcl
sbb
cmp
xchg
sub
es
xor
and
pop
lahf
mov
fnsave
lahf
xchg
cmp
jno
sub
add
inc
jbe
mov
mov
in
push
pop
jmp
or
adc
out
incl
jno
or
dec
clc
ss
mov
add
mov
ljmp
mov
mov
lock
pop
sbb
orb
sub
xor
loopne
jmp
sub
and
enter
dec
iret
lret
sub
in
mov
into
cltd
cmp
mov
add
imul
sbb
ljmp
inc
andl
enter
cmc
jns
clc
out
xor
mov
nop
aam
imul
fstpl
mov
rclb
mov
inc
push
cmp
inc
add
or
out
sub
xchg
push
cmp
lea
mov
xchg
dec
fwait
test
dec
and
je
push
mov
negl
loope
cltd
adc
or
pop
movsb
dec
es
hlt
into
push
mov
test
insb
mov
mov
mov
test
mov
cmp
into
mov
pop
lcall
dec
mov
pop
pushf
inc
mov
jge
xor
dec
mov
or
adc
repnz
lock
push
push
mov
mov
ficoml
pop
lcall
icebp
cmp
call
cli
add
insb
rol
push
incb
xchg
add
mov
out
lahf
aad
jge
and
and
fwait
sahf
mov
dec
mov
loopne
pop
test
lods
js
mov
mov
lods
or
lods
test
iret
inc
inc
cmp
in
stc
loope
cltd
int
cltd
mov
int
adc
mov
pushf
xor
mov
or
mov
fsubrl
call
pop
ret
mov
xor
lods
sbb
jns
arpl
push
jne
stc
test
sbb
jl
ja
lods
loopne
ja
cli
lods
aam
mov
ljmp
lcall
mov
mov
icebp
jge
ds
into
ret
cmp
jne
sub
mov
xlat
pop
mov
gs
jg
data16
imul
lods
pop
push
in
xchg
bound
test
in
mov
inc
cld
jno
xchg
lahf
pop
adc
dec
hlt
sbb
inc
or
jb
add
and
cmpsb
mov
into
data16
mov
sahf
imul
jns
fdivrp
pop
inc
xchg
push
cmp
push
lcall
mov
sbb
mov
clc
shl
sarb
mov
inc
sarb
xor
push
adc
out
setle
testl
ss
out
shll
jmp
cli
lret
hlt
mov
xor
jo
xor
sub
mov
or
int3
pushf
lock
addr16
xor
insl
adc
sbb
xor
push
mov
loopne
inc
push
push
xor
inc
adc
and
mov
iret
in
in
pop
xchg
ljmp
or
lcall
jg
das
insl
cmp
daa
shrl
loopne
add
mov
lahf
pusha
repz
inc
jge
jne
jp
mov
insb
orl
sbb
rolb
popa
xorb
out
inc
jne
lods
int3
add
sbb
inc
clc
lahf
push
outsl
sbb
xor
push
or
fnstenv
add
mov
mov
in
mov
jg
mov
mov
mov
out
int3
add
push
sub
lea
les
pop
inc
inc
fcomps
dec
fnstenv
mov
ret
xchg
sbb
dec
mov
mov
je
iret
dec
cmp
sub
adc
adc
jmp
inc
stos
or
jb
aam
or
jno
xchg
in
push
mov
test
sbb
leave
fsubs
add
mov
or
das
popl
mov
mov
nop
jns
idivb
gs
into
jae
test
out
add
lcall
cli
in
inc
xchg
inc
negl
sti
fs
jno
cmp
jbe
cmp
xchg
ja
lea
insl
pusha
push
xchg
cli
xchg
hlt
lret
mov
cmp
enter
xlat
int
das
mov
mov
mov
in
dec
mov
dec
push
aaa
insb
xor
sbb
fidivl
mov
lds
jae
push
movsb
adc
loope
test
cwtl
xor
mov
mov
lret
imul
test
jno
mov
aas
int3
js
clc
test
js
sbbb
jns
or
roll
and
mov
jmp
daa
pop
in
mov
inc
pmuludq
jnp
push
xchg
xchg
add
dec
xor
dec
pop
push
lea
or
loopne
mov
cmp
lahf
mov
jmp
aad
pop
icebp
in
rcr
outsl
jecxz
mov
mov
aas
cld
ror
and
call
mov
sub
fcomps
xor
scas
sbb
pop
sarb
repnz
or
cmp
add
sub
xor
xor
popf
mov
inc
fsubrl
clc
cmp
sub
outsl
stos
out
fisttps
fadd
jae
repnz
xchg
mov
outsb
dec
or
dec
or
xlat
xor
test
test
lret
adc
orl
aam
pop
xor
in
pop
cltd
pop
jo
or
and
bound
repz
and
fadds
popa
and
repz
cli
and
push
rcrb
fistpl
push
xlat
cmp
cmp
mov
dec
out
jge
and
cmp
sahf
rcll
bound
rcl
out
call
pop
inc
test
ret
xchg
imul
sub
cwtl
cmpsb
and
stos
nop
adc
stos
insl
push
lods
outsl
sbb
jns
add
jns
push
mov
adc
push
mov
adc
imul
cld
scas
repz
jg
xchg
xorl
fsubrs
jae
or
into
push
adc
js
xchg
pop
out
and
sbb
out
pop
into
aas
adc
xchg
std
cltd
sbb
bound
mov
add
fneni(8087
jb
sub
test
mov
push
enter
dec
mov
sbb
icebp
jecxz
les
in
mov
hlt
sub
in
shlb
incb
add
stos
shl
test
and
jle
inc
ljmp
addb
insb
adc
leave
jbe
mov
xchg
divb
stc
cld
inc
out
and
cmp
test
inc
lock
call
adc
and
out
xchg
sub
xchg
fst
mov
jne
mov
xor
inc
fcmovnb
and
mov
mov
lcall
scas
jne
mov
add
mov
cltd
lret
icebp
popa
dec
out
sbb
lret
dec
mov
push
or
scas
jb
add
rclb
xor
mov
test
out
popf
xchg
aas
divb
lods
xchg
shrl
push
xchg
add
jle
and
cmp
mov
dec
xor
push
mov
scas
andl
pop
lret
xor
scas
in
cmpsl
jb
pushf
xor
xlat
lea
stc
pop
mov
ret
mov
outsb
cmp
leave
mov
fsubrl
cmpsb
mov
mov
int
xchg
cmpsb
mov
add
inc
bswap
mov
je
jno
fs
push
inc
pop
or
xorl
pop
cwtl
sub
mov
inc
dec
xor
aam
dec
and
outsl
cli
clc
repz
mov
and
adc
mov
push
iret
das
and
mov
mov
mov
test
cs
lock
insb
roll
lret
push
shll
in
lcall
test
mov
sub
inc
cmpsl
movl
fs
movsb
fcmovbe
fidivrl
mov
addr16
stc
icebp
dec
adc
repz
mov
cmpsb
fldt
xor
ljmp
push
fstpt
and
stos
adc
test
or
loope
and
shlb
sub
dec
add
stc
shr
jle
lods
in
mov
cmpsl
stos
cmp
add
jb
cmp
pop
jne
adc
push
adc
sbb
inc
popa
dec
fidivl
lea
rol
test
xchg
lock
or
ds
leave
xchg
lahf
inc
shlb
loop
jbe
ja
scas
loope
loop
outsb
hlt
imul
lock
dec
mov
pushf
insb
aaa
jo
cmp
nop
add
adc
shrb
and
jbe
jno
gs
repnz
pop
out
add
or
lods
mov
into
enter
jnp
push
add
in
je
inc
data16
cmp
jmp
jmp
popf
mov
pop
fs
sbb
pop
xor
sbb
pop
mov
mov
xor
sti
orb
jp
pop
adc
repz
iret
mov
repz
daa
outsb
orb
lea
dec
scas
lds
mov
nop
sbb
arpl
pop
inc
imul
mov
mov
shrl
xor
into
fs
in
sbb
cmpsb
jb
clc
les
cmpb
mov
subl
popa
in
imul
xchg
daa
outsl
xchg
xchg
cmp
in
out
push
mov
add
jmp
testb
mov
sbb
mov
push
mov
mov
lret
pushf
inc
test
mov
jno
xchg
or
xor
popa
mov
aam
and
addr16
mov
icebp
inc
incl
insl
loop
xor
push
mov
inc
cmp
add
fdivrl
mov
xchg
int
cmpb
mov
mov
cmp
outsb
or
rcll
and
xchg
push
or
cltd
dec
je
movsl
mov
xor
sub
mov
aas
pop
movl
iret
int
sti
test
pop
sbbb
mov
pop
rclb
jns
daa
jle
push
repnz
leave
frstor
and
pop
mov
sbb
pop
jno
jnp
dec
cwtl
imull
jns
idivl
mov
aaa
and
cmp
mov
add
adc
out
push
push
fwait
mov
xchg
or
icebp
out
in
je
ret
push
xchg
jle
aam
lahf
push
sbb
mov
inc
cmpxchg
jns
ret
test
and
in
jp
js
sbb
push
or
mov
push
mov
and
orl
divb
fs
or
lret
lea
gs
lea
loopne
outsl
pop
out
cmp
mov
jmp
add
test
ficomps
mov
cmc
dec
adc
dec
icebp
daa
inc
std
loop
les
mov
ficompl
jmp
fs
and
xchg
fistps
stos
mov
movsl
jmp
push
sbb
dec
enter
jbe
add
xor
pusha
sub
dec
lock
lods
test
adc
daa
dec
jnp
lods
mov
pop
dec
jp
pop
in
xor
mov
push
fdivl
mov
and
sub
dec
push
cmp
or
sbb
dec
xor
and
test
imul
icebp
pop
shl
bound
sub
cmp
xlat
mov
es
adc
pop
sub
mov
popf
add
cmp
daa
idivl
out
cmc
xor
add
sub
clc
mov
sahf
push
imul
ss
jge
xor
repz
fldt
stos
stos
scas
sub
adc
cwtl
cmp
adc
fisubs
cmp
and
mov
pop
cltd
xchg
cmp
xchg
adcl
mov
jbe
dec
push
adc
jne
xor
sub
adc
daa
jg
scas
pop
popf
dec
cli
mov
pop
sar
popf
fwait
xchg
pop
push
stos
fldenv
add
mov
jle
lods
mov
xchg
mov
ret
lds
push
js
xlat
divl
cwtl
jge
dec
or
sarl
cwtl
mov
xchg
xor
sub
cmp
jg
pop
mov
xor
rolb
cld
lret
mov
mov
arpl
add
adc
out
mov
add
mov
scas
test
and
xchg
sarl
jmp
mov
outsl
xchg
pushf
jge
loope
fisttpll
clc
cmpsb
jno
adc
sbb
xor
cmp
movsl
xchg
pop
insb
mov
outsb
inc
test
xchg
rol
js
xor
lods
in
or
shl
mov
and
or
mov
test
ret
testl
push
inc
aam
mov
add
mov
hlt
sbb
mov
cwtl
and
xlat
or
popf
mov
cs
xor
rcrb
insl
shrl
sub
cmpsl
movl
mov
add
add
cld
xlat
andb
xor
sbb
and
mov
sub
sbb
adc
aaa
loope
sbb
out
mov
lea
mov
inc
jne
mov
push
outsb
mov
out
fcoms
clc
dec
xchg
std
pop
mov
pop
das
cmpsb
adc
cmc
inc
cmp
jl
aam
imul
orb
in
cmc
out
pop
mov
sbb
mov
iret
jnp
clc
out
or
inc
mov
gs
insl
cmpb
adc
jge
shrb
push
push
stos
and
mov
es
mov
sahf
add
sub
outsb
and
jmp
into
or
adc
loope
ja
mov
fdiv
push
push
mov
in
and
fdivr
xchg
pop
scas
pop
cmc
gs
in
push
mov
lret
dec
add
int3
dec
add
shrl
sbb
xchg
jmp
mov
adc
push
xchg
cmp
mov
rcl
jg
movsl
iret
mov
mov
jb
mov
mov
std
jb
xchg
hlt
add
cmc
arpl
pop
cmp
iret
pop
mov
in
daa
add
ja
jmp
loopne
mov
lahf
or
pop
andl
cmp
mov
dec
mov
sbb
iret
gs
imul
push
aam
in
mov
adcl
scas
jmp
add
inc
mov
mov
aaa
and
push
out
cmp
cmpsb
rcr
sub
roll
test
out
xor
aas
cmp
dec
cld
pop
jae
and
in
icebp
adc
mov
lock
adc
test
sbb
pop
cmp
sar
pop
push
loop
aam
sbb
mov
cmp
mov
popa
mov
jecxz
pop
cmpsl
insl
mov
mov
fwait
inc
xchg
cltd
setl
std
sub
adc
movsl
sub
in
fsubs
push
and
jmp
pop
sbb
sbb
sbb
test
int3
syscall
jl
lea
scas
dec
xchg
sahf
inc
adc
and
insb
jg
fisubl
mov
cmp
lcall
xchg
mov
dec
mov
and
ds
xchg
sarb
std
mov
pop
mov
mov
or
mov
push
dec
jns
jno
sbb
ret
lret
adc
daa
add
neg
loop
inc
aas
addr16
mov
push
pop
stos
pop
mov
jno
ret
cmp
call
push
xchg
icebp
rcr
mov
enter
addr16
sub
xchg
adcl
sub
or
js
mov
cmc
xchg
rcrl
cmpsb
ss
loope
movsl
sahf
mov
arpl
cmp
and
test
stos
sbb
xchg
fidivrl
add
cmp
push
jge
mov
daa
decl
cmp
ret
dec
add
stos
bound
xor
or
call
mov
lret
sub
kxnorw
inc
mov
out
jb
shrb
stos
jl
push
aad
test
repz
push
ljmp
cld
cmp
ja
lret
jp
repz
xchg
and
inc
std
das
js
scas
jb
mov
fsts
xlat
cmp
pop
sub
cmp
mov
sahf
loopne
arpl
mov
xchg
and
in
add
andl
jno
leave
dec
data16
xor
lock
mov
ficoms
dec
push
mov
inc
aam
pop
xchg
mov
mov
mov
add
in
xchg
xorb
subb
or
and
cmpsl
push
xor
ficomps
testl
mov
call
adcl
out
xchg
cmc
add
popl
sbb
mov
int3
dec
repz
add
and
inc
push
push
nop
out
lahf
mov
nop
and
movsb
sbb
adc
push
xchg
movl
cmp
mov
and
test
nop
aas
and
xchg
shrb
aam
push
repnz
pop
xchg
jo
lcall
xor
and
out
fadds
insl
sbb
ljmp
sbb
ss
push
sbb
out
xor
clc
push
sub
jecxz
sbb
icebp
shll
xor
mov
dec
jle
cmpsl
loopne
and
cwtl
mov
sbb
shl
or
push
inc
jp
add
lock
adc
cld
iret
imul
aaa
pop
repnz
je
push
sub
lock
xchg
lods
and
cltd
inc
adc
test
lahf
push
in
sti
and
sbb
int
xchg
pop
jb
cmp
pop
fbld
jge
les
xor
jno
cli
pusha
mov
daa
jno
nop
pusha
push
addl
loopne
push
lods
pop
cs
or
push
push
pop
adc
js
mov
mov
sub
lea
mov
add
testb
inc
xchg
sbb
mov
lock
or
fmulp
add
xor
jmpw
nop
cmp
jno
outsl
sarl
or
je
aas
pop
pop
shll
hlt
lea
xor
lods
mov
xor
or
cld
ds
scas
aad
inc
leave
xchg
ficoms
xchg
insl
xor
push
xor
int3
arpl
or
push
call
push
imul
dec
push
and
inc
fstp
out
in
je
outsb
popf
fwait
sahf
fcomi
push
das
xor
lods
bound
in
mov
fcmovnb
cs
dec
xchg
and
mov
into
jmp
movl
movsb
outsl
fnsave
test
ja
inc
fs
fwait
mov
fisubrl
das
mov
sbb
cmpsb
adcl
mov
push
pop
jbe
adc
dec
xor
sub
push
pop
dec
cltd
lret
in
test
fnsave
lcall
dec
mov
xchg
sub
push
mov
sbb
aad
cmp
cmp
jecxz
dec
pop
add
dec
ret
jl
adc
scas
or
xlat
iret
sub
sahf
xor
and
bnd
cmp
movq
adc
and
fimull
inc
js
in
jle
push
lcall
mov
out
sbb
lcall
lods
mov
push
cmc
insb
aam
repz
sub
ret
dec
aaa
repnz
sub
push
movsb
jb
pop
pop
lods
notb
cwtl
ror
ffreep
xor
lret
lods
loopne
or
sbb
cmp
fs
xor
fucomip
inc
movhps
xchg
cmp
lcall
shrb
pop
adc
insl
jmp
je
xorl
rcrl
inc
mull
cmp
lahf
xor
jns
xchg
nop
and
pop
sbb
xchg
sbb
jno
mov
dec
jle
movsl
xor
push
sub
add
aaa
jno
sub
inc
adcl
in
push
or
xchg
sub
out
mov
mov
and
mov
jno
inc
enter
xchg
loopne
das
nop
adc
in
imul
inc
fdivr
mov
push
cmp
out
out
popa
mov
or
xchg
sbb
mov
or
mov
mov
add
xor
inc
lret
sub
pop
pop
inc
xor
out
sar
mov
mov
push
inc
int3
add
addr16
icebp
xor
outsb
mov
mov
mov
cmpsl
fs
fwait
mov
out
and
mov
andl
inc
cwtl
push
push
sbb
or
jnp
movsl
adc
cmp
and
clc
scas
dec
int3
push
jne
push
iret
aaa
jno
aas
jae
jnp
stc
sbb
stos
jne
sbb
or
dec
orb
xchg
or
flds
mov
xchg
in
sub
push
out
and
mov
pop
fmull
mov
in
sbb
aam
sub
sbb
pop
mov
jecxz
mov
imul
xchg
dec
inc
pusha
jmp
in
mov
lret
outsb
pop
cmpsb
icebp
mov
add
push
shl
lea
jp
insb
movsb
addr16
and
xchg
insl
lock
or
push
mov
and
lods
test
pop
pop
mov
stc
adc
lcall
popa
jge
pop
fsubp
repz
lcall
or
in
mov
inc
sbb
lret
jle
ret
xchg
dec
lods
test
mov
addr16
jne
or
mov
xchg
xor
inc
mov
dec
mov
adc
divb
cli
mov
es
mov
mov
xor
popa
hlt
daa
mov
or
ds
popf
cmp
inc
ret
jecxz
cmp
shrl
sub
xor
ret
adc
out
cli
lcall
ljmp
jl
inc
shl
mov
mov
imul
fidivs
shl
sbb
sar
mov
inc
mov
add
shll
emms
in
and
adc
mov
into
dec
ret
pop
ss
mov
adc
pop
test
ljmp
jecxz
loopne
inc
sbb
mov
dec
inc
adc
pop
jmp
test
push
daa
bound
aas
push
inc
addr16
cli
inc
loop
repz
loop
xor
ret
loope
nop
pop
lds
popf
repnz
mov
pop
mov
sub
cmp
enter
sti
xchg
jp
jae
in
and
clc
in
in
rcl
pop
pop
jnp
sub
mov
adc
mov
xorb
mov
adc
repz
adc
xchg
insl
addr16
scas
fistpll
push
shlb
inc
push
and
in
sbb
out
push
or
call
fsubrl
ret
or
mov
push
in
es
mov
dec
pop
cmpsb
inc
dec
cltd
mov
adc
jp
ds
outsl
sub
and
jle
lods
test
das
sbb
xor
test
xlat
stos
aaa
dec
lahf
push
fucomi
enter
inc
aaa
arpl
and
daa
lret
or
inc
sbb
rcl
mov
cmp
scas
fs
sub
out
dec
xor
mov
add
mov
lea
push
and
repz
jge
imul
int3
movsl
mov
fsubrp
pop
lret
pop
adc
sbb
fcoml
pop
lea
sub
lea
enter
mov
bound
add
lods
xor
mov
in
das
int
insb
xchg
mov
jbe
push
jo
and
pop
ljmp
pushf
clc
mov
mov
out
or
das
push
lods
inc
cltd
push
mov
pop
mov
or
imul
add
mov
inc
cmp
fdivs
aad
movsb
in
sub
aam
dec
scas
icebp
push
cmp
test
outsl
sbb
or
inc
cmpxchg8b
enter
or
out
mov
clc
xchg
fdivl
icebp
xor
xchg
inc
jge
mull
push
add
sub
inc
es
cmpl
xchg
or
sbb
mov
iret
dec
sub
int
push
or
add
cmpsl
xor
xor
sub
out
pushf
imul
add
mov
into
out
adc
iret
out
xchg
cmpsl
mov
push
and
and
mov
sub
int
mov
jl
jp
push
cmp
in
dec
sbb
jbe
fs
xor
call
lret
inc
add
sbb
cmpsl
dec
cmp
adc
xchg
lock
mov
ficoml
mov
nop
enter
mov
sahf
fadd
test
sbb
cltd
lcall
inc
jne
gs
mov
dec
pop
dec
dec
jbe
pusha
aaa
jb
bound
repz
sbb
dec
sbb
gs
push
or
lahf
iret
mov
fcmovb
dec
mov
jno
aaa
movsb
repnz
dec
sbb
jbe
inc
jae
adc
andb
inc
sub
sbb
or
inc
test
addr16
repnz
scas
aam
data16
ds
into
pop
sbb
adc
cmp
imul
scas
pop
mov
mov
jbe
or
icebp
add
addr16
push
mulb
fwait
repnz
mov
dec
fldcw
pop
xchg
xchg
inc
call
xlat
pop
ret
faddp
sub
pop
push
popa
push
pop
insl
adc
int
adc
mov
negl
push
sbb
push
scas
cmp
xor
daa
add
inc
mov
pop
enter
and
rcrb
lds
jbe
jmp
cmpsl
add
dec
stos
outsl
xor
cmpsb
shll
cmp
cmpsb
push
jns
into
jnp
out
outsl
out
call
cltd
or
add
add
fnstcw
and
es
scas
push
pop
lret
iret
and
orl
lcall
push
adc
push
rcll
bound
push
loopne
leave
out
scas
and
adc
mov
pushf
rcrb
inc
imul
cmpsb
dec
in
addr16
and
jecxz
pop
out
xchg
cmp
mov
int
inc
roll
subl
xchg
sbb
popf
aam
mov
push
js
scas
or
sbb
nop
pop
add
scas
ficoml
and
dec
cs
fcoms
mov
jecxz
lea
xor
adc
mov
jo
mov
ret
iret
pop
out
arpl
jae
fmuls
lret
cwtl
xor
setno
inc
xchg
popa
xchg
les
sbb
ljmp
jecxz
int
and
int3
fisttpll
into
testb
mov
mov
and
or
xchg
push
das
inc
test
inc
add
add
jmp
ljmp
xchg
cs
sub
loopne
int
jmp
dec
sbb
dec
lret
jg
int
jbe
out
test
inc
stos
mov
sub
pop
outsl
xor
and
mov
call
fildll
into
xchg
lcall
push
mov
xchg
pop
nop
jg
sub
xorb
xchg
dec
ret
into
inc
push
lret
mov
aaa
and
fidivrl
in
in
jp
cmp
push
xor
sub
sub
gs
cld
cld
mov
mov
mov
or
mov
xchg
data16
xor
leave
sti
sbb
mov
shrl
sahf
movsb
xor
fwait
mov
mov
inc
call
mov
imul
pop
insb
add
jecxz
adc
mov
xlat
sub
fwait
inc
cmp
test
aas
outsl
xor
out
sbb
aaa
fldt
leave
fstpl
pusha
mov
dec
adc
insl
fistps
ss
js
cli
mov
pop
mov
pop
xchg
test
int3
push
imul
mov
cmp
sarb
mov
xor
adc
repz
mov
and
outsb
loope
or
push
push
sub
cmp
sbb
outsb
mov
adc
cld
jmp
fisubs
mov
mov
out
mov
test
repz
or
stos
cs
and
pusha
or
fbld
bound
or
fsts
xor
push
inc
imul
jne
xchg
adc
rorb
and
jge
jnp
mov
pop
inc
inc
jp
adcb
mov
xchg
popa
add
addr16
push
test
je
mov
int3
iret
aaa
mov
mov
testl
lret
mov
pop
jo
loop
mov
rorl
mov
or
cmp
sub
push
inc
outsl
mov
imul
xchg
mov
or
addr16
fimull
cltd
xchg
pop
and
loopne
mov
imul
inc
mov
sbb
jne
lock
cmpsl
shll
push
loop
movb
ret
call
adc
in
subl
dec
xor
out
pop
iret
cltd
adc
mov
push
jmp
iret
imul
jne
aad
mov
jecxz
xchg
pushf
sbb
xor
rcrl
movsb
add
sbb
jb
cltd
adc
adc
ja
jge
jb
jmp
iret
cli
pop
dec
aam
cltd
add
xor
sbb
orl
xor
mov
and
dec
pushf
sub
xchg
imul
aas
xchg
mov
cmc
hlt
mov
mov
adc
dec
mov
sbb
ss
mov
jnp
inc
lret
jb
inc
mov
mov
stos
shlb
xor
fisttpl
mov
test
mov
xchg
out
add
sbb
jmp
idivl
jo
sahf
jnp
jbe
xchg
mov
fadds
mov
test
pop
lods
nop
cmpsl
sub
addr16
and
shr
fwait
imull
xlat
jle
shll
add
mov
call
adc
mov
aad
fdiv
jg
mov
inc
std
push
inc
pusha
outsb
and
cmpsb
mov
dec
fists
out
testb
add
stos
jb
fimuls
xor
adc
mov
mov
jg
jle
out
and
sub
outsb
mov
outsl
lds
outsl
jo
scas
push
or
imul
loopne
push
shl
or
or
inc
jb
mov
fstpl
fidivrl
push
fcoml
movsb
pop
xor
sbb
xchg
call
data16
lods
mov
and
lods
cmpsl
out
inc
in
sub
xor
xchg
pop
data16
mov
adc
lcall
jns
in
mov
xor
push
xchg
inc
subl
mov
out
cld
xlat
dec
fs
xchg
mov
idivl
xor
mov
js
or
and
mov
insl
fsubrs
iret
push
orl
push
out
out
sbb
je
aaa
mov
dec
add
inc
push
popf
mov
outsl
fbld
imul
sub
sbb
retw
mov
aas
adc
mov
or
ret
push
ja
jle
ja
mov
mov
lret
jno
ja
shr
cld
std
stos
lods
pusha
mov
jl
gs
mov
in
jno
xchg
cmp
lds
xlat
cmp
pop
pop
outsl
loop
cld
fadds
add
enter
les
xchg
insl
mov
inc
mull
adc
mov
cmp
xor
stc
in
cmp
sub
xchg
cs
fimull
xor
shl
xchg
jo
dec
xor
loopne
popa
jg
testb
adc
or
sub
mov
xor
int
repnz
ss
sub
adc
sub
ret
int
incl
jmp
mov
pop
sti
shlb
mov
cmp
cltd
leave
and
repnz
push
xchg
mov
repnz
adc
shrl
add
jnp
adc
popf
int3
or
repnz
lcall
ret
hlt
ja
insl
or
loope
pop
icebp
subb
cmp
lret
scas
mov
addr16
loopne
mov
xor
cwtl
fstpl
push
adc
mov
pop
ljmp
imul
pusha
dec
mov
sarl
push
sbb
les
xchg
and
int
jb
mov
xchg
add
sub
push
dec
bound
inc
xor
jae
mov
lock
mov
int3
fbstp
xlat
and
jmp
and
mov
ss
cmp
and
add
std
mov
mov
call
cmpsb
int3
jp
mov
lret
dec
xor
or
mov
and
inc
dec
mov
push
and
and
jbe
xchg
test
jmp
pop
sbb
cmp
mov
inc
test
dec
cld
mov
mov
outsb
cmp
mov
mov
mov
mov
xchg
add
test
imull
dec
pushf
sub
jmp
fistl
pusha
xlat
andl
add
jecxz
test
call
ljmp
test
in
mov
test
out
xchg
mov
sub
mov
ss
mov
ret
mov
push
and
lahf
data16
and
or
mov
xchg
rclb
loopne
ffree
call
fwait
das
push
das
shr
clc
out
mov
mov
and
mov
test
dec
sbb
out
or
fildl
leave
shlb
or
in
pusha
daa
std
ljmp
sub
iret
in
xchg
mov
push
push
xor
roll
jno
shr
mov
push
sub
or
in
outsb
jns
lock
mov
adc
inc
leave
in
or
cmp
ret
stos
xor
repnz
jge
pop
mov
jne
filds
jno
push
loope
clc
pop
scas
jb
fwait
into
dec
mov
gs
xchg
or
fdivr
jle
adc
push
add
add
mov
je
out
insb
lods
hlt
shl
rol
xchg
xchg
lahf
mov
js
push
cltd
jbe
jmp
mov
into
mov
fadds
cmc
adc
movmskps
and
pusha
mov
cmp
sub
adc
mov
shrl
inc
mov
sub
and
cwtl
rcrb
mov
mov
xchg
insl
aad
lcall
insl
mov
ds
ljmp
adcb
popa
dec
cwtl
adc
je
in
pop
movb
cmp
cmp
outsb
cwtl
mov
fwait
xchg
nop
les
dec
dec
shlb
movsl
stos
hlt
outsb
add
inc
pop
loopne
pop
and
push
jae
cmpsb
mov
jmp
dec
int3
out
out
cld
pop
add
adc
int3
mov
into
in
pop
sub
lea
test
adc
lds
inc
mov
mov
insl
pop
mov
inc
cmpsl
inc
lods
jno
cmp
mov
jno
mov
into
jno
mov
push
cmp
sub
xchg
xor
and
shr
sub
xchg
jle
daa
mov
mov
or
push
pop
and
adc
xchg
orb
push
mov
mov
ffree
not
mov
sub
nop
fxch
rorb
call
inc
into
mov
mov
iret
movsl
jb
or
inc
int
xor
ror
mov
jns
or
pop
out
sub
int3
mov
inc
out
insl
mov
or
cwtl
ret
push
jl
cmp
out
jae
lret
xchg
pop
je
xchg
or
xorl
dec
dec
push
fsubrs
mov
out
jo
cmp
icebp
and
or
and
fstpl
out
xor
arpl
and
xor
cmp
mov
repz
aaa
loop
clc
pop
fbld
gs
cmpl
inc
arpl
push
mov
dec
push
push
mov
inc
sub
jo
push
pop
loopne
test
mov
test
ret
fmull
dec
push
mov
jmp
ss
pop
in
fsubp
sbb
int3
jmp
test
sub
hlt
mov
je
push
loop
arpl
sub
pushf
xchg
xchg
mov
movsb
xchg
loop
sub
loopne
pop
lds
pop
into
or
sti
fdiv
sbb
push
mov
std
dec
pop
jae
int3
sbb
push
lock
pop
dec
stos
add
ret
push
mov
aaa
sbb
fwait
out
jne
nopl
mov
push
lret
sub
loopne
and
ds
jg
fwait
test
pop
mov
mov
fsubl
xchg
push
arpl
xlat
fsubs
inc
cmp
addr16
movsb
call
sub
xor
dec
jns
cmp
xchg
pusha
xchg
std
sbb
dec
inc
dec
mov
pop
pop
xchg
movsb
insl
rclb
enter
sub
nop
pop
js
push
or
je
mov
xor
mov
fwait
xchg
iret
in
daa
inc
sar
add
or
aad
stc
hlt
idivb
inc
arpl
fstpt
or
sub
cmpsl
xchg
inc
or
adc
xor
dec
push
mov
es
outsb
ljmp
or
jmp
or
adc
pop
cld
nop
or
mov
or
aad
dec
mov
out
es
or
xor
pop
stc
jno
sbb
cmpsb
pusha
ds
push
repz
push
cmp
pop
jg
mov
pop
jb
xor
add
jno
push
cli
std
mov
les
ja
adc
int3
mov
fimuls
loopne
and
ljmp
sbbb
push
ja
outsl
and
dec
insl
daa
popa
jns
lock
push
jg
mov
xlat
arpl
ljmp
add
pop
idivl
xor
push
and
out
das
sub
push
lds
lret
jo
inc
jp
ljmp
push
xchg
in
cmp
out
add
fidivl
nop
mov
arpl
xor
pop
xor
loop
mov
sbb
sti
xchg
nop
movsb
std
mov
pop
test
xchg
es
dec
andl
js
aas
xchg
rorb
or
jb
icebp
mov
xchg
push
test
cmc
inc
repz
mov
pop
adc
sbb
shrb
sbb
jno
fstl
pop
pop
dec
lds
out
mov
jae
mull
popa
arpl
aaa
stos
dec
mov
dec
data16
sbb
cli
adc
scas
iret
sbb
stos
adc
inc
mov
aaa
xchg
xor
sar
insl
push
aam
pop
in
sub
out
shlb
imul
out
ret
ret
loopne
fisttpl
mov
outsb
adc
mov
repnz
loopne
xorl
mov
xchg
pusha
jno
std
cmc
sbb
stos
push
inc
or
loope
jge
in
enter
jo
push
push
inc
jae
ja
mulb
and
ret
aas
sbb
jmpw
cmp
push
and
sti
fsubl
mov
sub
dec
sahf
js
mov
mov
pop
int
mov
add
mov
push
jno
insl
and
bt
fwait
push
in
shl
in
xor
clc
mov
cmc
mov
arpl
sbb
xor
iret
dec
sub
or
mov
repz
xchg
insl
push
and
test
mov
jle
mov
jnp
stos
leave
rcrb
sub
sub
sti
xchg
out
pushf
inc
test
push
loopne
pop
ss
test
jno
adc
iret
inc
cmc
sub
sbb
rcl
test
jns
jp
push
mov
cmp
xchg
xchg
bound
jbe
shll
adc
cmp
push
mov
pop
cltd
std
xor
push
rol
out
push
cmp
imul
jae
mov
inc
shll
adc
in
push
inc
jbe
adc
xchg
cltd
aam
mov
test
cmp
imulb
and
sbb
js
mov
jbe
stos
sbb
repz
xor
xor
push
and
clc
es
data16
xor
pop
ja
stos
jno
addr16
pop
cmpsl
fldl
sar
and
lcall
sti
int3
lock
pop
fcmovnbe
push
sahf
fsubl
fists
sarl
pop
adcb
popf
cs
xor
mov
jmp
aas
mov
lock
jecxz
jb
fcmovu
mov
cmp
jns
mov
sbb
in
cltd
pop
jno
clc
out
sbb
into
jmp
add
mov
or
hlt
fs
insb
stos
add
inc
stos
push
add
adc
jecxz
cmpsl
aad
cmpsl
pop
cmp
popa
aad
cs
in
dec
lds
xchg
cltd
lret
ljmp
dec
pop
stos
into
mov
mov
mov
dec
xchg
leave
add
pop
addr16
pusha
pop
and
gs
fs
out
shlb
add
icebp
pushf
lcall
out
jmp
repz
pop
es
push
gs
mov
int
cmp
add
lock
cmp
scas
cmp
pop
lock
inc
in
leave
dec
mov
or
out
sbb
das
loop
sbb
pushf
mov
dec
adc
vmptrld
pop
adc
add
mov
in
and
xchg
mov
lods
stos
cmpsl
pop
mov
and
mov
pusha
cli
mov
or
punpckhdq
sti
push
sbb
cli
data16
hlt
leave
addr16
cmp
or
jnp
test
iret
mov
mov
in
aad
arpl
dec
adc
push
mov
fldt
inc
fcoms
sbb
in
sbb
pop
pop
pop
mov
jbe
inc
ds
adc
jae
cltd
dec
int3
ficoml
mov
test
add
loop
inc
jge
imul
add
jp
cli
push
icebp
fnstcw
push
movsb
inc
icebp
add
std
subl
icebp
mov
ret
pusha
adc
popa
into
fdivl
jecxz
sbb
dec
aam
nop
xchg
int
inc
mov
mov
sarl
out
inc
dec
xchg
adc
or
outsb
dec
pop
jecxz
pop
or
lret
in
cmp
pop
or
ja
lahf
xchg
sub
repz
lahf
loopne
in
xchg
ret
sub
and
cmpsb
push
sub
enter
insl
inc
push
push
imul
pop
mov
and
aad
js
mov
pusha
and
loope
mov
andl
shlb
cmp
data16
pop
insb
or
xchg
push
fwait
and
jae
mov
dec
divl
lods
les
adc
shlb
mov
addl
lea
jo
adc
cli
push
or
popa
popa
std
or
mov
ljmp
push
rol
fistps
sub
jno
and
test
pop
jg
orl
loope
lds
and
jne
dec
popa
insb
mov
ja
sub
andl
loop
mov
out
aas
mov
divps
cmp
adcb
or
dec
push
gs
sub
loopne
imul
sti
push
xchg
jae
sbb
mov
pop
mov
xchg
or
out
das
pop
or
sbb
xor
pop
outsl
test
mov
inc
and
xchg
sbb
cwtl
daa
clc
fldt
into
mov
xchg
or
jl
out
pop
push
push
push
popa
popf
repz
mov
out
out
out
iret
out
jl
jl
rorl
testb
pushf
add
stos
jbe
loope
iret
sub
je
adc
push
and
cltd
mov
mov
aad
movsl
xchg
push
mov
in
mov
cmp
mov
push
jmp
repz
adcl
es
sahf
dec
shl
dec
push
test
scas
std
pop
add
sbb
or
fbstp
test
inc
stos
lods
andb
fnsave
shrb
arpl
add
idivl
dec
fdivp
aam
lods
xchg
fstps
push
cmp
scas
cld
lock
rorb
sar
test
push
mov
ljmp
mov
inc
adc
shr
mov
aaa
push
les
cs
xchg
pop
popl
or
popf
ja
clc
insl
mov
fsubr
popa
inc
scas
stos
outsb
push
loopne
out
inc
pop
xchg
dec
cwtl
sbb
lea
insb
jg
or
cmpsb
js
cwtl
push
dec
pop
sbb
xchg
scas
movsl
mov
subb
fisttpl
cli
xchg
jne
mov
into
imulb
je
add
xor
out
adc
test
mov
mov
popf
orb
and
inc
outsl
xchg
xor
nop
rcl
xor
mov
mov
aaa
jge
jb
roll
mov
jecxz
and
sbb
bnd
scas
mov
sbb
mov
loope
pop
test
bound
sti
or
xchg
imul
and
jle
xchg
sbb
stc
std
push
push
dec
inc
cwtl
or
inc
push
xor
sbb
and
movb
cwtl
shrb
push
outsb
mov
xchg
pop
jbe
pop
mov
test
mov
sahf
xchg
xchg
in
push
xor
rclb
mov
clc
loop
push
and
jno
clc
out
lret
adc
cmp
mov
jno
jne
scas
stos
or
imulb
push
mov
sbb
mov
bound
jp
jmp
in
movsl
mov
sub
scas
mov
loopne
sbbb
or
mov
mov
ljmp
sbb
jecxz
mov
lcall
pop
notl
xchg
popa
dec
cltd
sahf
mov
int3
inc
jecxz
and
loope
xchg
cmpsb
stos
nop
pop
or
xchg
cmpsl
dec
mov
movnti
into
rcll
and
sahf
es
jns
fcompl
pop
lods
decb
jno
lahf
in
or
divl
xchg
sbb
addr16
jmp
mov
or
enter
inc
jg
jbe
fldt
xchg
or
leave
dec
fs
sbb
jns
sbb
jl
repnz
movsb
lods
xchg
or
cltd
fldl
fdivs
jb
loopne
xlat
ret
outsl
pop
sub
jns
iret
clc
mov
add
adc
test
movsl
cld
jae
cmpsl
cmp
sbb
or
std
cmp
or
clc
ficomps
add
sti
addr16
ljmp
add
mov
es
xlat
das
cmp
pop
pusha
cli
add
pop
push
inc
ret
loop
ja
imul
cmp
sub
es
fcoml
mov
outsl
pop
outsb
push
cli
mov
ret
mov
inc
xor
lock
adc
test
inc
icebp
mov
jmp
inc
mov
ret
ror
test
imul
loope
pop
popa
iret
mov
sbb
iret
xchg
into
mov
insl
mov
sbb
jns
and
std
or
in
adc
repz
jo
adc
aad
cmp
mov
in
xorl
pop
lods
adc
daa
add
sbbl
push
and
mov
jmp
push
push
add
stos
std
in
inc
mov
mov
faddl
cmpsl
stos
into
jns
test
and
cwtl
lcall
dec
stos
mov
cmp
mov
cltd
int
push
fcoms
jp
add
pusha
lret
cmp
outsb
xchg
ret
mov
arpl
fisttps
push
fstps
add
xor
jae
mov
bound
pop
dec
and
add
mov
ss
mov
cmpsb
sub
test
dec
mov
jmp
sbb
sahf
push
shrl
fmulp
test
lock
fisttpll
insl
out
cli
popf
loopne
lcall
shrl
push
cs
mov
repz
shll
xchg
cmp
insl
jno
pop
jg
inc
xor
sub
outsb
jns
pop
and
jmp
mov
cwtl
imul
push
inc
xchg
push
dec
hlt
bound
cmp
clc
mov
mov
and
fwait
in
gs
clc
cmp
xchg
pop
test
xchg
idivb
or
dec
clc
mov
mov
pop
mov
pop
pop
pop
insl
mov
jl
xor
or
leave
bound
push
pop
pop
pop
idiv
mov
add
jb
sub
std
mov
xchg
or
daa
lcall
aaa
scas
and
gs
sub
lcall
mov
or
sub
dec
pop
les
outsb
and
dec
ja
cmp
xchg
mov
sbb
js
xchg
fsin
and
or
xchg
insl
mov
push
outsl
aam
imul
mov
xchg
adc
xchg
adc
cltd
xor
ja
lea
popa
xchg
mov
arpl
mov
sub
jecxz
mov
imul
xchg
shl
js
push
sub
mulb
cmp
int3
adcb
fs
ret
js
add
gs
push
je
adc
xor
aad
shrl
or
test
push
sub
adc
scas
jp
push
dec
dec
push
push
inc
addb
xchg
xchg
jno
jbe
cwtl
pop
inc
adc
decl
jmp
jle,pt
jmp
fidivl
scas
cmp
dec
and
mov
lret
fwait
sti
inc
cwtl
idivl
jnp
in
addr16
dec
jne
data16
mov
mov
push
jp
xor
out
push
cwtl
jp
jno
add
xor
jo
and
mov
adc
lods
popf
cmp
movsl
inc
cmpsb
push
pop
cmpsl
sub
pop
cmp
cmp
stc
jp
out
lahf
cli
mov
outsl
mov
mov
in
jne
flds
sub
nop
mov
cmp
inc
and
xchg
xchg
in
fsts
xchg
pop
pop
adc
mov
xchg
fistpl
xchg
push
fldlg2
push
pop
out
mov
loopne
dec
lret
loope
in
pop
sbb
add
adc
sub
inc
orl
cmp
dec
sub
pop
orl
pop
sbb
cmp
xor
jle
bound
popf
shr
cmc
xchg
aad
sbb
cmp
mov
mov
xchg
pop
lock
pop
jnp
mov
mov
psadbw
sbb
dec
jg
leave
mov
clc
mov
sub
inc
std
sub
notl
mov
jb
pop
loop
adcl
sbb
lret
mov
mov
out
jo
mov
movsl
xchg
xchg
xchg
ret
or
dec
lea
xor
xor
lret
push
adc
cmp
cwtl
inc
int
pusha
mov
lods
ds
mov
pusha
sub
jl
pop
in
and
fmuls
outsl
or
dec
xlat
jbe
pop
and
shl
xchg
jbe
in
lahf
es
xchg
outsl
scas
mov
arpl
addr16
push
xchg
cmc
inc
out
adc
int3
ret
inc
nop
xchg
xor
cmp
pop
cmc
xchg
cs
xchg
dec
and
pop
dec
push
and
loopne
adc
and
cmpsl
pop
out
ds
jo
xor
fxch
and
lret
jmp
ret
sbb
adc
ss
loopne
or
pop
in
xchg
jmp
int
dec
xor
adc
pop
jmp
jmp
add
jnp
lds
cmpsl
popf
adc
stos
scas
pop
pusha
in
scas
sbb
push
jl
adc
scas
mov
int
sbbl
sub
vpmulhuw
mov
add
mov
lret
jns
jecxz
inc
lahf
xor
sbb
or
jg
iret
xchg
pop
xchg
or
addr16
call
mulps
sti
shl
adc
nop
insl
ss
or
mov
lds
dec
inc
mov
or
add
mov
sbb
and
cmpsb
iret
adc
fbld
aaa
leave
mov
xor
lods
mov
pop
mov
push
les
ret
ret
hlt
cmp
push
push
pop
mov
aam
stc
jp
or
xor
jge
xor
nop
insb
jecxz
mov
dec
push
ss
fidivl
pop
cmp
mov
test
aaa
and
scas
es
dec
ficoml
add
cwtl
ljmp
test
xor
cmp
gs
jge
hlt
mov
xchg
mov
jns
cwtl
or
and
mov
dec
nop
and
inc
mov
lods
fisubrs
xor
cmp
insb
jne
ret
in
aas
mov
int3
fcomps
cwtl
sub
loope
mov
add
mov
das
in
sub
pop
int
mov
dec
int
filds
cmpsl
sub
add
jecxz
add
into
pop
adc
js,pn
mov
movl
inc
pop
insl
icebp
pop
mov
jb
push
andl
mov
xor
jmp
or
rcll
frstor
in
dec
cmp
scas
dec
mov
add
mov
repnz
push
mov
pop
out
notb
sbb
xchg
cmpsl
push
inc
inc
jp
aas
sbb
dec
cmp
mov
xlat
or
xor
sarl
dec
es
add
test
je
xchg
cmc
cmp
push
add
inc
xor
add
cltd
inc
or
aaa
adcl
xor
aam
stc
outsb
fnsave
lcall
ja
push
fistpll
xchg
push
xor
mov
push
mov
mov
sbb
mov
mov
lods
in
xchg
jl
in
testl
and
mov
mov
fisubrl
js
push
or
jl
mov
pop
icebp
ds
mov
and
fdivrl
jmp
push
adcl
out
inc
inc
jne
adc
daa
xchg
les
mov
outsl
dec
cmp
cmpsl
mov
xchg
into
js
jle
les
clc
inc
jge
xchg
ret
ret
add
dec
add
sbb
loope
jg
adc
mov
mov
aam
lods
mov
pop
cmp
outsb
inc
call
loopne
cs
adc
mov
jecxz
icebp
fisttps
in
jp
cmp
or
das
push
lea
cmp
sar
xor
mov
icebp
cmp
dec
and
mov
in
lock
push
sub
mov
movsb
aaa
idiv
cli
stos
mov
popl
mov
sub
js
fstl
dec
jmp
sti
xor
push
dec
pop
les
iret
je
loope
push
xchg
dec
mov
rolb
sbb
mov
lret
lock
cmpl
testl
and
ss
inc
cltd
xorb
cmpsl
loopne
pop
das
and
test
or
jp
xor
mov
imul
mov
ljmp
icebp
rcll
cmp
mov
in
cmp
add
jecxz
push
sub
mov
pop
popa
sub
sbb
rcr
bound
hlt
cmp
stos
nop
or
and
std
and
cmp
jl
rcrb
enter
outsl
mov
jecxz
mov
mov
jle
jge
xchg
xchg
xchg
sub
xchg
mov
push
jnp
xchg
jbe
in
test
push
dec
lcall
iret
xchg
jo
pusha
sahf
add
ret
mov
test
xor
fadds
cltd
jg
mov
js
mov
out
or
stc
loope
cmpsb
fcomi
test
out
adc
adc
jecxz
xchg
add
scas
xchg
cmp
imul
jl
mov
gs
jmp
xchg
inc
or
adc
mull
and
out
adc
mov
out
mov
xchg
enter
or
out
arpl
dec
cmp
mov
test
push
out
mov
cmc
xchg
leave
pusha
repnz
jl
sub
sbb
pop
call
fisubrl
sub
sub
hlt
popf
mov
lea
inc
repz
cmp
xor
cli
out
jle
add
mov
inc
aad
cmpl
add
mov
and
xchg
mov
xchg
mov
adc
rcrb
xchg
jle
pop
push
rcrb
mov
jnp
jnp
mov
inc
jbe
test
mov
mov
dec
or
dec
dec
out
xor
sbb
xchg
pmaxsw
pop
lret
out
out
inc
jp
pop
je
sub
inc
int3
jne
dec
mov
sbb
lds
jmp
fs
jno
push
out
fisttps
test
cs
mov
jb
mov
inc
pop
add
stos
jmp
and
out
stos
out
inc
shlb
cmp
mov
dec
push
xor
shlb
push
movsl
dec
mov
icebp
adc
mov
adc
sub
cmp
xrelease
xor
pop
jno
mov
jg
das
dec
mull
mov
cmp
sbb
ss
push
xchg
in
in
mov
aad
jp
ret
push
adcb
mov
mov
dec
or
stos
jae
jb
sti
mov
inc
or
dec
mov
pop
inc
cld
sahf
pop
ret
repnz
ror
lret
loopne
add
incl
xchg
adc
cmpsl
test
fistps
mov
inc
repnz
jno
mulb
outsb
nop
sub
push
sbb
adc
push
stos
add
jmp
inc
mov
fwait
sub
cmp
mov
fmuls
ja
sbb
pop
mov
ret
mov
lea
loop
cmpsl
lock
and
div
or
add
xchg
lods
sarb
lret
testb
mov
mov
xchg
xor
stos
jno
cwtl
mov
push
ficompl
in
xchg
test
mov
les
pop
dec
push
mov
jge
xor
mov
imulb
mov
cmp
les
cmp
out
add
add
out
xor
jmp
adc
push
data16
jg
and
xor
cmp
mov
loope
aas
in
mov
out
push
cmp
mov
lcall
push
sar
mov
cmp
sbb
dec
test
pop
xlat
rclb
mov
adc
shrb
pop
stos
stos
fldl
mov
jecxz
test
add
test
imul
adc
loopne
cmovbe
sbb
dec
sarb
inc
fdivl
mov
movsb
cs
loope
cmpsb
xchg
icebp
jl
xor
pop
push
inc
and
pop
sub
cwtl
xchg
or
or
xlat
mov
mov
xchg
cld
sub
sbb
sub
int3
jo
data16
int
shl
inc
pop
dec
orb
loope
jp,pn
sbb
push
inc
pop
and
notb
dec
push
sbb
inc
sarb
or
xchg
push
inc
mov
movsb
fisttpl
dec
ds
and
imul
cmp
loope
sub
xchg
fmull
addr16
pushf
shl
cltd
push
push
mov
pop
call
div
push
les
mov
aad
test
cli
and
outsl
idivl
fidivrl
xor
mov
and
mov
adc
sahf
mov
arpl
es
xchg
int3
jo
jge
scas
and
leave
std
pop
ja
and
jne
sti
imulb
sbb
and
mov
mov
nop
aaa
bound
mov
jecxz
add
pop
sbb
mov
pop
outsl
pop
pop
mov
mov
jl
mov
cmc
lret
repz
and
addr16
cmpsb
pop
imul
aam
or
outsb
repz
and
xchg
jp
clc
shl
inc
loope
push
dec
mov
push
add
cmp
aam
xor
xchg
test
in
pop
mov
insb
sbb
mov
in
in
dec
loop
aad
xlat
mov
pusha
mov
xor
scas
jg
loope
mov
rcl
in
enter
xchg
sbb
insb
mov
and
xlat
out
dec
lahf
mov
pop
fcoms
cmp
cltd
lea
pushf
shl
gs
sahf
lds
xchg
fcompl
lea
xchg
adc
rol
cmp
mov
pop
push
notl
cmp
xor
or
xor
jg
imul
cltd
push
push
mov
jmp
sub
imul
mov
xor
jecxz
or
sti
jg
and
mov
icebp
lods
sbb
mov
shrb
and
jge
mov
gs
inc
push
loope
repz
outsb
adc
jo
ljmp
mov
push
rcrl
sub
mov
inc
or
sbb
push
dec
fdiv
sti
packsswb
popa
movsl
icebp
mov
push
cmp
sub
dec
mov
sbb
push
push
xchg
push
out
dec
pop
and
cld
jne
jl
imulb
jb
ja
dec
cmp
xchg
das
push
cmc
loope
shrl
insb
jbe
js
and
ljmp
inc
push
aaa
lret
fldlg2
fwait
mov
jne
xchg
pop
sbb
adc
sbbb
lcall
testb
xor
stc
mov
jl
jl
loopne
notl
leave
pop
fwait
and
es
enter
test
push
scas
lcall
mov
gs
cmp
sbb
addl
lahf
mov
aam
jg
inc
dec
push
xchg
js
xor
jns,pn
or
mov
xor
sbb
lea
xor
xor
xor
in
scas
cmp
adc
pop
sbb
out
fcomip
cmc
mov
or
mov
push
lahf
mov
in
cmp
mov
mov
fidivl
es
xchg
jg
negl
xchg
dec
popa
mov
fisubs
ret
push
ja
iret
ret
mov
pop
loope
cli
je
add
leave
popf
cmc
fsubrp
mov
mov
lahf
insb
pop
jo
addr16
sbb
lea
push
popa
adc
push
mov
loope
jg
sbb
fsubrs
mov
jp
pop
sub
cs
mov
push
xor
xchg
mov
xchg
sub
push
sub
insb
imul
mov
inc
test
fcoml
pop
sbb
add
pop
push
lods
sub
add
out
cmp
or
or
ja
filds
sub
sbb
repnz
test
aad
cmp
lret
cmp
jmp
adc
mov
add
jl
jl
dec
mov
scas
bound
fcompl
adc
subl
jp
pop
mov
xchg
out
cs
jp
popf
verr
mov
sub
and
mov
xchg
addr16
enter
xchg
sarl
dec
std
data16
or
insl
mov
je
outsl
setns
mov
inc
fldenv
insl
xlat
arpl
sbb
push
sbb
lahf
lods
cmp
loope
dec
pop
mov
sub
add
or
jle
in
or
mov
xchg
repz
lds
mov
mov
pop
sahf
mov
lea
cmp
mov
xchg
les
cld
mov
imul
cltd
popf
jae
mov
add
lea
movsb
jmp
les
cltd
add
addb
movsl
sahf
xchg
or
aas
stos
xchg
add
add
dec
pop
aas
mov
loope
xchg
pusha
mov
bound
pop
or
add
fdiv
jp
ljmp
pop
ficomps
lret
cli
jb
inc
and
push
add
sbb
movsl
dec
fldln2
insl
in
pop
adc
nop
pop
lret
or
push
cs
cmp
ror
mov
mov
xchg
popl
cld
movsb
outsl
and
fldenv
sti
ret
pop
push
cmp
xor
stos
push
aam
gs
xorl
push
push
test
jp
xor
int3
dec
imulb
mov
sub
cmpb
dec
dec
cli
imul
cmp
nop
mov
mov
cmc
or
cmp
jl
mov
xchg
mov
inc
pop
ss
sbb
cmc
xchg
pusha
xchg
xchg
enter
mov
dec
arpl
push
sbb
fadd
mov
ret
ljmp
in
addr16
cs
gs
xchg
xor
out
push
pusha
cmc
aaa
out
push
jb
repnz
out
xor
jmp
cwtl
dec
jge
ret
inc
test
lret
divb
mov
test
pop
push
lret
xchg
subb
out
xlat
ficomps
in
cmp
xchg
push
inc
jb
std
mov
fistps
testb
jp
sub
xor
shll
inc
int3
pushf
push
dec
fidivrs
ds
je
xlat
in
fcoms
jmp
push
cmc
jno
rclb
insl
sub
cmp
add
aaa
mov
mov
lock
in
adc
jl
cmp
dec
cmp
xrelease
int3
or
pusha
aas
mov
pop
or
pop
into
fists
fidivs
add
mov
jg
addr16
stos
loopew
mov
test
aas
mov
mov
data16
xchg
test
push
adc
jno
out
leave
fsubr
jmp
jns
xchg
mov
lahf
pop
xchg
leave
jns
and
pushf
mov
xlat
jecxz
push
mov
mov
dec
test
lcall
mov
js
into
je
mov
aam
lock
cmpsl
ret
popa
push
adc
int3
push
adc
and
shrb
sbb
mov
stos
subb
xor
xchg
not
jmp
add
sbb
xor
pop
push
or
adc
xor
pusha
out
aas
in
rorb
adc
add
mov
or
sbb
inc
fstpt
cli
add
inc
dec
dec
jmp
testl
outsb
inc
jns
sar
lret
and
outsl
pusha
sti
sbb
lcall
jp
cmc
pop
push
insl
xchg
leave
and
sbb
inc
add
mov
inc
pop
lcall
sbb
outsb
or
incl
jecxz
and
sub
fimull
insl
mov
mov
scas
add
pop
pop
jp
rclb
inc
stc
repz
adc
cmpsl
mov
jns
leave
pop
mov
push
push
inc
mov
xor
mov
cmp
in
lcall
jbe
insl
push
push
xchg
pop
inc
cmc
push
mov
aaa
sub
or
fisttps
out
idivl
ja
dec
pop
int
and
sbb
mov
mov
loope
mov
repz
fsubrs
roll
mov
dec
pop
xchg
aad
mov
ret
jl
movsb
fstps
and
mov
leave
jmp
pop
arpl
push
jge
pop
stos
testl
popa
popa
sahf
fbld
add
xchg
jae
cwtl
adc
mov
fcmovnbe
imul
rcl
adc
cmp
dec
dec
adc
jge
rolb
cltd
xchg
in
cmpsb
ja
sub
xchg
and
adc
push
daa
out
jo
fdivr
push
cmp
fstl
mov
and
push
adc
iret
addb
mov
inc
mov
cltd
out
push
cmpsl
test
xor
loop
popf
lahf
insl
push
bound
test
cmpsb
jmp
outsl
mov
movsb
dec
mov
jbe
cld
fcmovu
je
sub
pop
dec
add
ret
sti
mov
and
cwtl
mov
cmpsb
cmp
mov
fnstsw
movsb
push
xor
sub
pop
addr16
aaa
arpl
or
movsl
cmp
out
jle
ret
push
jge
test
jmp
cmp
in
gs
jns
jb
lea
push
jmp
pushf
sbb
inc
loope
arpl
sahf
aad
jge
inc
mov
push
inc
or
and
lods
cli
mov
popa
lods
shr
fisttps
cmpsb
or
or
or
in
or
dec
or
leave
cs
shlb
lret
out
movsb
push
nop
ja
cmc
and
xchg
dec
jecxz
xor
adc
clc
and
les
sbb
aas
stos
mov
sub
pop
inc
mov
out
or
sarl
mov
sub
fs
mov
in
add
int3
js
jmp
mov
xchg
aaa
push
fwait
push
rcll
addr16
aad
cmp
mov
pop
adc
adc
neg
mov
movsb
adc
xchg
loop
add
hlt
cli
test
mov
xlat
sbb
push
mov
mov
mov
lods
repnz
movsl
xorb
cmpsl
sub
or
aas
jl
xor
cmpsl
jns
popa
loopne
mov
mov
cmp
jg
adc
lea
psrld
fidivrl
xchg
jl
jbe
lcall
jmp
mov
ffree
fst
mov
ret
aam
xchg
push
out
push
sub
sub
int3
sub
sti
jp
rclb
mov
pop
sbb
jp
xor
pop
add
fsubr
test
les
je
mov
sub
icebp
test
mov
out
mov
cmp
xlat
mov
or
add
push
mov
push
jp
bound
push
dec
pop
pop
or
fs
xchg
imul
into
xchg
shlb
into
sub
jno
inc
cmpsl
aad
daa
popf
adc
jecxz
ss
imul
cld
mov
stos
add
adc
icebp
xchg
aad
test
loope
fs
lahf
sbbl
and
test
xchg
movl
call
cmp
outsl
les
adc
lahf
inc
sub
dec
inc
aam
les
test
pop
fdivs
or
push
dec
xchg
mov
jl
in
push
arpl
xchg
stc
hlt
ret
push
clc
inc
nop
sub
push
xor
or
xchg
lods
out
dec
sbb
imulb
mov
jne
pop
mov
aaa
subb
ret
mov
fcom
test
loopne
out
sbb
int
sbb
and
test
jecxz
lret
test
jb
push
rol
or
xor
xchg
into
dec
push
pop
imulb
push
sbb
imul
mov
aas
mov
repz
in
test
jb
mov
push
dec
pop
mov
das
sub
cltd
xor
add
nop
or
iret
out
repnz
loop
lret
arpl
xor
gs
shrl
push
andl
sahf
or
or
es
lods
pmulhuw
jae
test
adc
inc
sbb
xchg
je
lret
call
dec
dec
push
push
pop
imul
dec
aad
pusha
jecxz
ds
adc
cld
sbb
inc
gs
push
clc
stos
test
cmp
sarb
mov
jns
cwtl
add
mov
fs
or
insb
icebp
sub
inc
push
cld
mov
cmp
jl
shll
adc
cmp
dec
lret
scas
fiadds
sub
jge
andl
movsl
lods
into
in
into
inc
add
push
fwait
sar
pop
pushl
lods
push
jne
int3
mov
adc
push
push
push
call
mov
pop
test
lahf
leave
xchg
add
add
aas
jns
fdivl
pop
pusha
nop
push
insb
sbb
ds
mov
push
loop
in
aaa
pop
test
mov
push
addr16
pop
insb
mov
xor
cltd
cli
jb
xor
fwait
aad
lret
push
inc
jecxz
add
pusha
or
inc
pop
jo
fbld
mov
pop
ret
push
test
loopne
pop
xor
ja
xor
xchg
addl
push
cmp
cmp
enter
sub
pop
mov
xchg
mov
in
xchg
je
xorl
int
adc
movsl
out
jbe
and
push
int
das
mov
out
sbb
aam
aaa
sahf
decb
lea
in
add
sbb
test
xchg
ds
jle
mov
mov
or
sbb
enter
popa
nop
mov
testl
inc
mov
leave
adc
clc
in
call
pop
arpl
push
rcl
add
jne
sahf
cmpsl
or
js
das
mov
and
pop
loop
cwtl
pop
jecxz
shlb
pop
insb
pushw
ss
or
push
mov
jne
xchg
lahf
push
mov
js
cmp
push
xor
daa
and
test
adc
xchg
test
push
cli
push
add
or
fdivrl
lret
inc
outsb
inc
xlat
push
test
insb
sbb
aam
dec
jns
outsb
jb
pop
and
test
adc
lret
fwait
daa
push
and
repz
cmc
in
sahf
push
roll
mov
sahf
notl
cmc
jne
das
lret
lock
lds
cld
bound
mov
inc
mov
insl
jne
mov
in
repnz
jecxz
fisttps
adc
jl
sbb
pushf
cmp
mov
inc
xor
lahf
mov
test
lock
filds
lea
push
sbb
sbb
inc
leave
jl
in
jl
and
icebp
xor
adc
call
jp
xchg
int3
int
sub
into
pop
mov
xchg
outsb
mov
dec
imul
adc
push
cltd
shlb
mov
cmpsl
xor
enter
pop
mov
pop
stc
fidivrs
adc
aas
pop
shlb
std
xchg
xor
inc
mov
icebp
loopne
push
adc
sub
in
add
cmp
clc
pusha
or
iret
dec
fnstenv
call
pop
sub
mov
jp
ljmp
loop
insb
or
leave
andl
inc
iret
iret
and
mov
nop
sub
adc
mov
sbb
mov
jbe
dec
lcall
fincstp
jge
dec
pop
aam
fsubl
sub
jne
iret
xor
and
data16
xor
js
sub
mov
jnp
push
popf
jae
fsubrs
sbb
xchg
sub
int
cld
jmp
pop
pop
in
rcrb
call
xor
ret
sbb
xor
cmp
and
testb
push
mov
ja
or
aaa
mov
cmpsl
hlt
xchg
sbb
fwait
mov
adc
mov
xlat
push
xor
inc
pop
fidivl
jg
das
inc
pop
sub
jae
pop
mov
pop
fadds
fisubrl
mov
out
xchg
pop
xor
stc
aam
jle
int
jnp
sbb
outsb
push
nop
dec
push
sub
jg
out
jns
daa
fiaddl
mov
adcl
pop
testl
stc
loop
cmp
addr16
mov
stos
fs
sub
push
push
mov
enter
cmp
xchg
or
aaa
cld
xor
mov
sub
loopne
adc
int3
mov
je
adc
push
jl
lret
xchg
outsb
fcoms
fdivl
insl
pop
add
jbe
xlat
pop
sbb
or
loopne
aaa
shl
repz
push
inc
loopne
xchg
sahf
lahf
lock
lcall
lret
loope
out
outsl
mov
loopne
enter
and
jmp
sub
mov
adc
sbb
out
sub
jno
jnp
mov
and
loop
cmp
and
dec
mov
rorl
fadds
sub
dec
mov
adc
mov
repz
mov
add
dec
add
je
jg
repz
mov
mov
jg
push
dec
sbb
mov
aaa
repnz
inc
xor
jmp
lret
mov
lea
iret
sbb
aad
scas
lods
ja
inc
and
jg
and
jnp
inc
test
cmp
icebp
ds
and
outsl
add
mov
adc
pop
cs
clc
ss
into
or
jae
sub
and
or
cmpl
fiaddl
sbb
call
add
lret
xor
or
and
mov
add
jl,pn
pop
add
lcall
das
cmp
jecxz
jne
addr16
inc
enter
insb
mov
int
add
jae
mov
stos
inc
jecxz
jle
scas
pop
dec
xchg
stc
xor
or
lret
mov
shrb
cwtl
mov
hlt
mov
jne
inc
leave
mov
ss
and
add
movsb
mov
xchg
jmp
jge
popf
pop
mov
adc
mov
xor
mov
mov
and
or
jg
cmp
inc
pop
push
push
add
ss
aam
fiadds
lret
mov
or
lret
mov
mov
mov
mov
aaa
push
mov
pop
pop
lds
out
add
notl
inc
test
or
xchg
mov
das
divl
dec
push
sub
ja,pt
add
push
mov
in
jnp
lea
inc
mov
cld
fistps
dec
dec
pop
ja
pop
mov
sbb
lea
out
xchg
cmp
fnsave
sbbl
fwait
es
sub
sbb
imul
xor
pusha
xor
and
pop
push
and
outsl
es
pop
mov
adc
pop
fdivp
cltd
fimull
ret
xchg
sbb
shl
call
mov
psrlw
push
clc
jg
pop
scas
push
lods
lcall
cmp
adc
push
cmp
dec
cld
pop
mov
mov
adcb
sti
jl
mov
pop
test
pop
pop
rcrl
repnz
and
or
cmp
push
cmp
or
jbe
add
xor
ret
pop
es
insb
sub
popf
bound
nop
lret
call
or
call
mov
lods
adc
cmpsl
rcr
pop
mov
lret
loopne
adc
dec
fidivl
scas
aam
fisttpll
lcall
cs
sahf
mov
mov
pop
lods
daa
jp
dec
leave
dec
add
js
mov
sub
shrb
notl
xor
insb
push
jge
test
pop
adc
loope
dec
sub
xor
pop
sbb
in
jp
jo
xor
mov
addr16
lret
sub
call
lret
sbb
fldenv
mov
in
test
inc
cmpsb
dec
sub
scas
loopne
scas
and
insl
fldenv
aam
mov
fnstcw
cmp
call
and
ja
and
and
leave
jecxz
inc
mov
dec
push
out
fisubrs
sbb
imul
ucomiss
fwait
cli
cmp
shlb
jecxz
adcl
ret
inc
jle
iret
nop
and
movsb
fmull
aam
daa
pop
jecxz
mov
jge
lds
or
out
xor
cmpsl
decb
insb
aam
in
ljmp
mov
mov
mov
cltd
pop
dec
addr16
mov
or
imul
repnz
cmc
imul
push
leave
call
out
mov
fdivrp
into
testb
sub
jg
lods
in
mov
lds
adcl
adc
insb
std
pop
adc
dec
adc
jmp
ja
clc
arpl
out
mov
push
shl
jl
pop
je
pop
xor
xor
mov
rorb
hlt
imulb
add
add
loop
mov
pop
mov
call
repnz
xchg
mov
test
out
ret
adc
inc
sub
aam
imul
xchg
les
shlb
in
fs
lcall
repz
shll
xchg
repnz
mov
and
in
sbb
xlat
jmp
sub
scas
jo
jge
or
andl
sbb
lods
sahf
es
lods
imul
in
cmp
inc
insl
mov
cli
xor
add
xchg
scas
sub
push
push
mov
std
shrb
xchg
divb
sub
dec
gs
addr16
push
pop
lock
rcll
scas
ja
loopne
cmp
xchg
jg
nop
xchg
loope
pop
pop
loop
aad
xchg
xchg
xchg
dec
jge
pop
lea
sub
dec
sub
popf
jo
mov
sbb
test
lds
xchg
in
push
cmp
pop
mov
cmp
shrl
xchg
mov
ljmp
push
and
xor
clc
leave
pop
dec
inc
pusha
ja
xor
es
ds
out
xor
insl
std
scas
and
mov
jp
jle
sbb
mov
jne
push
or
test
mov
jecxz
inc
lahf
rcr
ja
movsl
pop
inc
inc
fwait
cld
fisttpll
inc
add
repz
cmp
call
push
xor
inc
sahf
xor
ss
add
ljmp
xchg
arpl
sbb
inc
jbe
les
movsl
inc
fdivr
sti
jnp
in
cs
ljmp
aam
ror
add
ficomps
and
or
fwait
sbbb
mov
xor
cmp
and
mov
in
mov
and
sti
cs
shll
sbb
inc
xchg
or
cmp
and
gs
push
sbb
dec
std
repz
dec
lahf
push
pop
pop
cmp
add
in
shlb
sbb
mov
dec
call
sub
dec
test
mov
loopne
rorl
dec
dec
ljmp
jle
in
idiv
adc
out
fildll
scas
cmp
or
sti
push
outsl
dec
rcrb
rclb
fsts
push
add
in
jg
jb
icebp
xor
test
fistps
pop
bound
andl
jb
std
dec
mov
adc
cmp
mov
lret
dec
dec
push
add
into
je
cwtl
sub
out
icebp
cmc
dec
ss
mov
lea
aad
ss
jo
fistps
push
sbb
mov
call
push
jp
or
ljmp
lahf
or
jb
sahf
dec
adc
jg
adc
and
mov
shrl
add
cs
mov
mov
jmp
jb
mov
xchg
iret
fcompl
sbb
pusha
jae
test
out
repz
mov
push
dec
out
xor
lds
mov
push
das
fbld
push
test
sti
daa
jns
mov
js
in
sub
dec
cmp
sbb
mov
cmp
or
addb
or
add
add
stos
lds
loop
popf
das
sbb
jmp
imull
bound
add
int3
or
jmp
aam
push
bt
stos
xchg
jmp
cwtl
lods
and
adc
call
cmp
ljmp
xchg
aad
sub
or
in
std
sbb
mov
enter
enter
xchg
jg
adc
leave
sub
out
mov
push
pop
dec
scas
lock
test
xchg
out
jnp
in
sbb
loop
mov
lcall
mov
or
notb
cwtl
mov
orl
cli
pusha
andl
lock
outsl
lods
jb
in
in
adcl
xchg
xlat
fidivrs
out
xor
popf
mov
jmp
jg
stos
movsb
leave
lods
std
sbb
test
pop
movsb
gs
pop
or
cmpsb
repnz
sub
cmpsl
add
shrb
lea
xchg
shrl
xchg
push
addr16
fldl
adc
push
cmp
ljmp
fnstenv
jbe
lahf
dec
sbb
push
pop
stc
div
hlt
jnp
test
mov
and
sub
loop
mov
fisubs
add
gs
movsl
mov
dec
pop
shl
adc
ja
divb
inc
dec
adc
cmp
xchg
insl
pop
sub
loopne
and
adc
addr16
cmp
pop
dec
cmp
test
outsb
adc
add
arpl
popa
mov
ror
or
data16
mov
xor
add
imul
and
or
cmp
dec
stos
gs
fsubrs
adc
jno
pop
mov
dec
push
test
mov
sbb
fs
lret
inc
mov
mov
jne
cmpsb
and
dec
imul
int
cld
pop
scas
nop
lock
fstps
xchg
test
add
cmpsl
jl
mov
cmpxchg
xor
loopne
lds
cwtl
fwait
xor
shlb
jb
fisttpll
fisubrl
and
jo
repz
ss
jb
aam
fdivrs
mov
xchg
shlb
xchg
iret
xor
fsubl
orl
dec
bswap
add
mov
test
dec
ret
ret
repnz
mov
sarb
and
fmuls
adc
into
jns
cmc
lea
mov
xchg
mov
mov
push
lds
dec
push
mull
arpl
aas
xor
pop
cmp
mov
sbb
lret
or
push
inc
shl
inc
arpl
inc
js
ljmp
xchg
mov
aam
or
mov
adc
lret
mov
dec
ret
mov
lret
pop
mov
cmc
popa
fstps
cli
mov
cmp
pop
add
scas
testb
jl
pop
cmp
pop
bound
test
xchg
fdivr
pop
cmp
cmp
mov
shlb
ret
inc
jno,pt
cwtl
mov
xor
mov
popa
pusha
or
aaa
pop
test
cli
jno
xchg
or
addr16
imul
and
inc
jmp
ror
leave
fldcw
pop
mov
out
lea
push
mov
push
sbb
xor
test
ss
out
add
aas
js
adc
cmc
popa
outsl
aam
scas
mov
cmp
pop
xor
xchg
rep
sub
bound
into
sub
popf
dec
std
push
ds
pop
test
mov
push
cmpsb
fmulp
inc
push
pop
jle
cld
sbb
cmc
in
jno
in
cs
fsubrl
cmc
pop
adc
or
and
inc
xor
nop
add
js
and
mov
mov
adc
ds
jmp
arpl
into
out
in
and
mov
dec
push
sti
mov
jno
dec
push
inc
xchg
dec
lahf
xchg
mov
jno
cmc
xchg
xchg
inc
cld
dec
sbb
jle
or
in
jge
mov
std
and
xchg
and
mov
push
arpl
stos
testl
cmpsb
and
add
mov
test
rolb
pop
inc
cmpsb
popa
out
dec
lcall
ljmp
cld
xchg
idivl
scas
push
icebp
push
jo
sub
or
lds
nop
jl
les
repnz
xorl
ljmp
mov
inc
push
cs
aad
lea
pop
loopne
adc
mov
mov
fstl
lret
test
mov
mov
stos
in
clc
daa
fadds
push
jmp
cmp
insb
shrl
and
stos
dec
out
xchg
or
sbb
or
sbbl
movsb
adcb
in
cs
mov
call
aam
add
lods
movsb
xchg
rorl
or
push
mov
mov
mov
aaa
outsl
cmpsl
lock
mov
xchg
sarb
mov
lret
daa
push
es
aaa
stos
add
stos
aas
cmp
stc
test
scas
ja
push
xchg
mov
or
and
out
rclb
jae
mov
imul
sbb
call
fidivs
repnz
gs
arpl
cwtl
dec
inc
and
dec
and
sub
ret
jne
push
dec
fstpt
mov
jg
sbb
cld
jecxz
jnp
or
add
xor
jg
cmp
sbb
pop
ret
inc
ljmp
add
frstor
int3
ljmp
mov
push
cmpsl
add
mov
fstp
lcall
add
je
pushw
dec
jl
dec
mov
dec
jmp
insl
mov
lahf
sti
push
or
loopne,pn
stc
loopne
push
mov
scas
sbb
ljmp
or
or
dec
hlt
hlt
fldl2t
mov
call
outsl
fmul
aaa
jb
xchg
add
inc
es
jmp
push
ret
jo
mov
bound
dec
enter
mov
inc
addr16
xor
pop
lcall
testb
out
aaa
push
inc
imul
test
mov
shr
fdivs
test
sahf
or
loop
sbb
mov
fs
fisubl
imul
outsl
pop
outsl
lahf
cmpb
int3
adc
neg
imul
pop
pop
inc
push
sub
dec
mov
inc
mov
sub
fimuls
push
pusha
xor
and
std
inc
test
xor
or
cmp
jg
les
jnp
test
test
shll
or
lcall
or
mov
arpl
mov
mov
jmp
push
mov
lea
es
push
cmc
jg
add
mov
push
jnp
andnps
jno
mov
fmull
in
stos
dec
pushf
mov
subl
adc
add
mov
sub
nop
lods
xchg
lcall
sub
test
iret
xchg
test
or
mov
prefetcht0
notb
popf
out
loopne
add
mov
pop
ja
bnd
mov
addb
test
pop
sub
push
jbe
imul
fidivrs
mov
jmp
and
xor
idivl
jg
lcall
imul
mov
or
inc
lcall
dec
fstps
cmp
mov
adc
cmp
ja
pop
cmp
mov
xchg
in
gs
pop
das
in
mov
mov
xchg
add
sbb
sbb
sub
mov
in
pop
xchg
addl
jae
cmc
pushf
cmpsb
mov
and
bound
cmp
mov
daa
fcoms
cmpsb
insb
push
fistpll
insl
js
mov
mov
xor
je
lret
rcr
sub
jnp
insl
out
push
fcom
jb
xchg
xchg
movsl
mov
sbb
xor
in
in
jne
xchg
jmp
push
mov
pop
mov
dec
mov
addr16
add
sti
lahf
js
cltd
jmp
mov
sar
js
pop
out
shll
movsl
notrack
jno
and
sbb
add
call
into
sbb
int3
test
dec
cli
test
mov
into
aam
and
lods
shrb
cmpb
sbb
push
cld
mov
fidivl
scas
xor
je
push
cmpsl
jns
jno
push
dec
pusha
xor
dec
enter
inc
jbe
popa
push
cltd
hlt
mov
adc
push
leave
inc
mov
xchg
push
sub
add
mov
or
in
or
sub
add
test
jns
xor
daa
lret
lods
xor
stos
rolb
insb
js
jp
mov
cmp
in
cmpsb
and
rorb
xor
out
add
dec
and
loopne
cmpsl
mov
lods
shr
lahf
movsl
nop
std
lea
out
test
add
lods
and
fimull
cmp
pop
andb
bound
aam
mov
or
rcrl
arpl
ljmp
jmp
imul
cltd
out
mov
pushf
inc
or
and
mov
adc
pop
aaa
push
dec
test
loope
fisubl
cmpb
or
mov
add
or
pop
inc
mov
mov
or
pop
sbb
inc
fwait
dec
pop
outsb
adcb
mov
pop
aaa
jmp
cmp
sbb
into
jne
aas
and
lahf
jg
mov
xchg
mov
mov
cmpsb
mov
out
cmc
mov
lret
xchg
xorl
xor
inc
jle
mov
mov
or
add
sub
pop
fisttps
leave
aaa
jmp
sbb
adc
lea
sub
dec
scas
sbb
aam
or
nopl
outsl
fcompl
test
add
jno
clc
push
cmp
push
or
xchg
fsubrl
pop
test
adc
xchg
js
push
adc
push
add
mov
stc
testb
sbb
add
movsl
xor
dec
add
adcb
add
test
ret
add
outsl
push
bound
mov
push
das
fstpt
jae
jmp
jb
dec
inc
jmp
shr
adc
std
rorb
xchg
add
icebp
js
inc
insb
fldl
inc
mov
lret
test
pop
inc
adc
sub
mov
cmp
xor
sbb
nop
push
in
fisubrl
je
xchg
lods
jae
mov
adc
movsl
xchg
pop
iret
or
add
push
mov
pop
jg
mov
dec
push
imul
ja
or
jp
pop
mov
out
cli
sub
xchg
jo
out
std
xchg
push
pop
lret
stos
inc
pop
adc
movsl
xchg
push
scas
dec
push
stc
pushf
xchg
cmpsb
sub
popa
and
aaa
sbb
les
sbb
test
mov
out
repz
sbb
fisubrs
jbe
outsb
dec
jp
mov
push
imul
popa
repz
xor
and
push
sbb
push
sbbb
mov
aad
mov
xor
ficompl
or
jae
mov
jp
pop
dec
push
push
mov
inc
pop
lods
jae
imull
test
mov
std
mov
or
in
sti
xchg
std
sahf
fimuls
out
cwtl
ror
fstpl
cmp
stos
cmp
xchg
loope
ljmp
xchg
pop
js
fistps
lods
shll
inc
add
push
mov
xor
mov
inc
adc
adc
addl
fwait
jge
popf
sub
mov
xchg
data16
out
dec
mov
and
pop
dec
shrl
jno
cmpsl
xor
mov
inc
outsb
inc
aam
loope
enter
adc
test
mov
cwtl
push
into
insb
xlat
or
adc
push
xor
cmpsl
sarl
cs
pop
jae
scas
in
cmp
fnsave
xor
and
lods
js
mov
cwtl
ret
or
pop
xor
sub
and
pop
out
nop
daa
enter
xchg
xor
out
addb
js
sbb
xor
out
popa
pop
adc
dec
orl
outsb
mov
xchg
sub
sub
movsb
repnz
xchg
stos
mov
sub
push
and
cmp
icebp
pop
xchg
ss
out
dec
mov
adc
cmpl
repz
fsubrl
call
sahf
push
icebp
mov
stc
mov
inc
pop
sbb
into
sbb
jmp
les
dec
or
mov
mov
adc
lock
mov
roll
daa
bsr
mov
mov
add
ja
and
addr16
stc
mov
rolb
ss
lock
pop
mov
or
sbb
leave
insb
mov
xor
add
push
xor
adc
ficoms
or
push
into
out
repz
shlb
arpl
add
test
aas
in
lods
mov
scas
imul
inc
sub
bndldx
jle
ljmp
scas
dec
inc
xchg
xor
les
sahf
gs
cwtl
add
shll
mov
adc
fwait
pop
dec
sar
cltd
imull
lock
cmpl
inc
inc
mov
xlat
or
imul
mov
aad
adc
sbb
out
mov
lods
and
mov
shrb
rorl
dec
sbb
jmp
test
adc
fisubs
daa
add
xchg
xor
jae
aad
in
push
mov
and
cltd
mov
xchg
dec
mov
cmp
sbb
xlat
cmp
out
add
je
repnz
ret
aaa
lahf
out
sar
jno
mov
or
sbb
add
inc
dec
pop
in
mov
inc
and
jbe
push
push
push
or
sbb
mov
mov
les
xor
dec
nop
ret
adc
xchg
repnz
push
lret
ss
xor
sbb
xor
xor
decl
push
sub
cmp
roll
mov
clc
mov
adcb
xor
insl
orl
mov
sub
shll
cmpsl
fidivl
mov
lods
pusha
movsb
mov
test
adc
pop
push
pop
and
into
push
arpl
add
adc
jns
adc
pop
jle
in
dec
sbb
popa
loope
addr16
addb
mov
jae
xchg
inc
mov
iret
jnp
incb
xchg
aaa
push
movsl
gs
adc
mov
jae
ja
aas
aam
cld
jg
stos
gs
xor
pop
sbb
stos
insb
sti
sbb
mov
imul
or
sbb
jno
mov
adc
adc
dec
mov
pop
repz
call
push
mov
pop
in
add
add
or
jo
jae
mov
mov
movsb
or
cmp
in
lock
ret
pop
or
xchg
push
mov
push
push
lcall
sbb
cmp
ja
fisubrs
pop
jno
cmp
dec
sub
mov
pop
pop
not
repz
push
cmc
push
mov
and
or
sbb
push
test
xlat
jno
xchg
cli
jae
pop
jl
cli
loope
dec
call
mov
fsubs
pop
push
mov
cmp
add
adc
data16
in
xor
daa
test
pop
imul
sti
cmp
fdivr
movsl
sti
mov
mov
aaa
push
jg
lds
and
scas
adc
jl
lcall
mov
sbb
sbb
dec
lcall
pop
repz
sbb
fildl
jecxz
ret
push
loope
rcll
int3
pop
pusha
jg
xlat
jno
xchg
jae
jo
cmc
lds
cmp
sbb
js
scas
or
fs
clc
pop
and
mov
inc
pop
adc
xor
cmp
jbe
push
fwait
pop
push
aas
in
pop
xchg
cmp
mov
aas
pop
pop
insl
in
sbb
sbb
mov
leave
sti
ret
jecxz
sub
sti
xchg
or
stos
je
ret
sbb
inc
es
les
fldcw
test
pop
push
xchg
add
jo
sar
gs
sbb
fsubrs
xor
pop
std
mov
aad
pop
fs
lods
cld
add
dec
mov
rcr
push
cmp
mov
push
cs
mov
imul
push
leave
jge
ljmp
movsl
or
pushl
mov
mov
sbb
lcall
lock
sbb
ret
int3
pop
jne
push
mov
daa
int
and
gs
insb
push
leave
pop
push
jne
add
je
adc
clc
push
dec
lahf
mov
xchg
jmp
add
pop
test
add
mov
popf
out
sbb
dec
xor
mov
lods
push
sub
ss
mov
lods
push
out
cmp
xor
daa
aad
or
xor
xchg
jmp
mov
fwait
out
xchg
les
jno
push
pop
xchg
sub
or
movsb
mov
leave
or
iret
or
sbbl
jp
add
xchg
mov
pop
and
push
add
or
scas
mov
cmp
inc
add
lods
dec
xchg
mov
push
xchg
sbb
arpl
pop
sbb
cmpsl
clc
xlat
and
add
fxch
cmp
test
cmp
dec
jne
or
mov
pusha
outsb
rorl
push
push
adc
or
pop
xchg
sahf
xchg
sbb
rorb
test
or
inc
imul
push
ss
test
lret
mov
cmp
cmp
mov
cmpsb
ja
cmp
push
test
jmp
sar
lods
lock
sahf
test
xor
stos
push
mov
push
loopne
shlb
call
xchg
mov
icebp
cwtl
popa
xchg
mov
cld
lds
xor
dec
cwtl
inc
or
mov
imulb
mov
leave
add
int
es
ret
pop
test
mov
fildll
lods
loope
psrlw
mov
pop
cld
dec
std
xchg
sub
mov
dec
in
inc
adc
inc
mov
idiv
add
adc
movsl
pop
and
cltd
pop
pop
fdivl
cs
jns
mov
cmp
nop
push
pushf
pop
into
scas
fnstenv
push
cmp
shll
push
xchg
nop
push
dec
mov
iret
mov
dec
cmpl
sbb
add
je
lock
mov
fs
test
lock
jecxz
dec
mov
xor
pusha
sub
mov
jae
add
cmp
sub
les
jl
dec
xchg
cmp
xchg
mov
aad
loop
aam
cmp
push
sub
sbb
xor
dec
and
lock
addr16
rcll
and
lret
push
sbb
cltd
scas
mov
jbe
ficoms
enter
mov
leave
imul
fldl
mov
hlt
sbb
jae
sbbl
dec
stos
daa
fs
jecxz
mov
cmp
cmc
xlat
xor
pop
mov
mov
rep
mov
add
mov
dec
xor
loop
les
sub
stc
cmpsb
sti
stc
dec
hlt
xlat
fistl
movsl
stc
mov
imul
jne
dec
lahf
push
dec
sbb
jb
xchg
jns
cs
or
fstpt
pop
sti
ret
pop
push
fisubs
sub
out
add
pop
xor
dec
cmp
sub
mov
lea
insl
mov
xlat
cli
mov
frstor
add
mov
lcall
lods
lret
fmull
outsl
or
mov
out
mov
and
mov
cmp
sbb
dec
icebp
and
gs
jae
punpckhbw
sub
lods
test
mov
orl
lea
inc
inc
aad
ss
and
or
fcoms
mov
xchg
cwtl
or
fwait
ljmp
pushf
shrb
add
stos
orb
shrb
loop
adc
lds
mov
sbb
jge
sarl
mov
push
xchg
dec
sbb
add
push
add
shlb
test
stos
aaa
add
pusha
push
mov
and
mov
fwait
cli
lods
rolb
or
fldenv
mov
xchg
mov
in
pop
push
mov
imul
xor
out
shlb
mov
rep
ljmp
sub
push
lds
adc
imul
xlat
jge
dec
sbb
aad
xchg
call
arpl
fbld
fcmovb
repnz
jns
xor
mov
sbb
jns
outsl
xchg
sub
add
dec
data16
pop
add
push
mov
cmpsl
sbb
jbe
ret
add
sub
mov
aad
lods
push
dec
arpl
inc
lret
xchg
fisttps
cmp
sbb
cmpsb
xor
pop
sub
add
rcrl
enter
subl
jge
lret
addl
test
and
inc
aad
push
ja
dec
sub
jecxz
int
mov
pop
mov
xor
xchg
rorb
out
or
iret
sub
das
xchg
js,pn
pop
and
loop
push
leave
pop
loop
in
jb
cmp
push
out
cmp
and
xchg
push
into
inc
sub
pop
add
mov
and
sub
mov
js
stc
je
scas
and
rcrl
enter
gs
gs
int3
lods
lock
pop
fmull
push
or
jne
rcrl
cmp
movsb
inc
xchg
lods
and
inc
fldcw
lds
cmp
pop
sti
adc
and
in
mov
shlb
enter
fcmove
stc
pusha
push
jae
xlat
scas
jecxz
inc
enter
outsb
inc
add
push
push
fbstp
test
sbb
mov
std
movd
fnsave
jl,pn
int
aas
out
mov
adc
inc
fsubs
fistps
push
mov
jg
clc
call
pop
jge
or
jmp
jmp
imul
pop
push
insl
and
dec
repz
add
stos
jae
cmp
lds
sbb
std
insl
jno
adc
std
jg
xor
lcall
sub
xor
into
inc
imul
inc
xor
scas
lds
mov
sahf
push
xchg
add
into
pop
out
cmp
das
clc
adc
xor
cltd
push
xor
xchg
inc
cmp
stos
scas
jmp
lds
sbb
bndldx
pop
clc
rorl
and
mov
imul
add
jbe
pop
int
or
mov
dec
sub
mov
xchg
shlb
adc
mov
add
rcll
jl
flds
repnz
mov
pop
enter
mov
pop
les
insl
ljmp
out
xchg
xlat
mov
push
xor
inc
lret
push
mov
push
pop
mov
mov
add
or
push
lea
loope
popa
enter
ret
popf
in
xchg
shlb
push
addr16
pop
imul
mov
push
cmp
ljmp
jle
sub
sub
push
mov
xchg
mov
and
pop
nop
out
mov
dec
cmp
sahf
cmpsb
dec
jae
mov
lcall
pop
in
jg
idivb
sub
jl
cmp
cmp
push
cmp
inc
mov
cld
xchg
out
in
cmp
adcb
sbb
mov
loop
insl
push
xchg
negl
push
imull
repz
ffree
sub
lods
popf
push
das
bound
adc
jns
imul
fsubl
dec
in
rcll
pushf
mov
and
xchg
ljmp
cmpsb
test
rcll
push
pop
pop
xchg
xor
data16
loopne
loopne
pusha
or
push
ljmp
popf
sbb
xor
addr16
cwtl
sbbl
pusha
pop
je
lret
push
and
sub
inc
inc
push
pop
sub
ret
mov
jmp
xor
push
addr16
xchg
fstl
and
ljmp
add
rorb
jno
lock
inc
mov
add
mov
mov
mov
addr16
pop
inc
mov
cld
out
pop
pop
pop
mov
jecxz
js
in
cltd
sbb
jns
test
mov
outsb
sub
adc
lea
ror
pusha
mov
cmp
stos
bound
xor
mov
mov
dec
dec
mov
cli
scas
arpl
jmp
int
xchg
sub
gs
cltd
add
aad
mov
cmpsl
xor
xlat
roll
sbb
lret
xor
movsb
mov
pop
adc
mov
stc
jmp
call
cmp
daa
or
in
rcll
sbb
pop
jae
out
push
pop
lret
push
cmp
in
push
leave
ror
cwtl
cs
loope
fwait
push
scas
mov
cld
nop
inc
jae
lret
push
inc
or
mov
adc
jecxz
pop
cltd
sti
push
jb
xchg
add
or
xchg
inc
push
js
aaa
jp
add
scas
nop
cltd
xchg
enter
dec
leave
add
sbb
dec
sub
jb
mov
or
arpl
adcb
jb
or
xor
mov
sub
pop
jecxz
fsubrs
out
test
adc
es
clc
push
hlt
ficoms
dec
jmp
pop
pop
ja
push
xorl
sbb
adc
pop
fnstsw
xor
pop
shll
popf
mov
cmc
cmp
jmp
dec
insb
dec
or
pop
insl
aam
mov
lds
mov
mov
std
xchg
mov
lods
push
outsl
push
nop
sahf
xor
lock
out
cld
rolb
lea
xchg
push
add
stos
adc
inc
loop
insb
movsl
into
sbb
jae
jb
xchg
sub
lret
xchg
pop
jnp
imul
pop
out
mov
in
add
mov
jb
adc
aaa
iret
jmp
adc
add
xchg
xchg
test
sahf
dec
std
loop
in
arpl
dec
sbb
loopne
es
mov
xor
sbb
std
pop
push
push
pop
ljmp
shll
lahf
or
push
dec
rolb
mov
jg
cs
or
dec
cmp
xchg
loopne
inc
jo
mov
xchg
js
arpl
ret
xchg
xchg
out
in
fwait
aaa
loopne
cmp
or
test
cmp
xchg
and
fimull
adc
cmc
addb
cmpsl
daa
mov
xor
mov
bound
aad
jge
mov
in
pusha
or
pop
adc
out
adc
insb
jge
aam
je
xor
jno
bnd
std
sti
shll
mov
inc
xchg
out
scas
lods
pop
int3
loopne
hlt
subl
in
out
xchg
adc
xorl
cmp
fnstcw
out
add
lods
enter
push
lds
shll
dec
push
jp
pop
and
push
adcl
and
pop
std
stos
jne
imul
in
or
push
outsb
jnp
ljmp
das
dec
movsb
inc
jno
add
push
xchg
mov
and
in
jnp
ficomps
pop
xor
mov
repz
dec
movsb
xor
xchg
setge
mov
int3
mov
cmpsb
mov
popf
out
cld
or
and
aam
mov
pop
and
ss
ja
ss
repz
scas
mov
lret
mov
mov
roll
fdivs
mov
jmp
jl
jg
insl
es
shl
jae
cmp
cmp
jecxz
and
lret
adc
adc
je
add
xchg
mov
std
xor
rcr
popa
add
push
add
jbe
cwtl
outsb
xor
mov
or
sbb
repz
das
or
fwait
push
pop
dec
sbb
aaa
ret
sbb
sbb
fisubs
outsb
loope
push
mov
sub
xchg
jno
lret
inc
and
jb
mov
xor
jnp
mov
mov
adc
pushf
or
sbb
js
push
std
clc
pop
jb
sub
cmp
push
mov
movsb
aam
enter
pop
test
lock
or
iret
fbstp
mov
dec
loopne
sub
add
or
mov
dec
outsl
mov
fwait
dec
adc
xor
inc
sbb
jo
inc
sub
icebp
lods
dec
push
cwtl
add
fdivs
mov
dec
jmp
rolb
dec
inc
push
pop
mov
xlat
mov
push
push
cwtl
shlb
addr16
xor
nop
mov
int3
inc
mov
dec
dec
mov
sub
lock
cs
adc
adc
pushf
xor
rcrb
mov
dec
outsb
and
hlt
sub
jl
mov
xor
ja
or
mov
shll
xor
loop
inc
sti
adc
jecxz
aam
mov
mov
jo
mov
pop
pop
xor
adc
sub
push
sub
xor
icebp
sub
fldcw
fsubr
in
push
push
insl
push
sub
sarb
pop
imul
sbb
pop
shlb
hlt
xchg
add
pop
xorl
into
xchg
sub
loope
cmp
xchg
mov
add
repnz
fdivl
imulb
in
pop
jmp
fsubrl
jle
pop
xchg
stos
mov
pop
or
pop
scas
mov
out
sub
jmp
rcr
lahf
daa
sbb
jl
aaa
fucomp
scas
inc
cmp
loope
adc
ret
cwtl
and
outsb
pop
or
std
pop
je
rolb
push
mov
xor
or
xchg
cmp
iret
or
xchg
mov
add
xchg
push
aas
push
icebp
nop
ja
mov
mov
push
mov
mov
sbb
push
lods
inc
gs
fidivrs
roll
js
dec
stos
mov
jo
pop
stos
movsb
sub
dec
jl
push
or
push
fwait
add
jae
test
ss
insb
cmp
dec
dec
inc
jns
cmp
call
xor
mov
cmc
xchg
flds
sahf
cmp
mov
insl
jl
in
add
jbe
pop
gs
insl
cmp
and
xchg
test
test
push
mov
sbb
lcall
xlat
imul
mov
jns
adc
push
fnstenv
ljmp
int3
cmp
xor
cld
cmp
dec
adc
inc
cltd
dec
mov
pop
mov
and
fsubr
data16
gs
in
aas
enter
mov
sbb
cmc
cs
in
sbb
and
loopne
cmpsb
mov
adc
inc
lea
test
ss
and
cmp
and
ljmp
and
xlat
pop
leave
cmp
enter
popa
sbb
add
cwtl
cmpsb
xor
sbb
pop
sub
lahf
cltd
fisubs
dec
and
cmc
rol
xor
aam
inc
xchg
or
and
sarl
repnz
lods
dec
scas
xchg
cltd
mov
outsl
shlb
std
or
push
xor
test
add
outsb
push
fisubrs
mov
cmp
pop
ret
pop
cmp
popa
xchg
mov
mov
outsl
push
sbb
mov
rcr
and
adc
mov
pusha
push
push
in
or
or
and
pop
jp
xlat
xchg
lods
jmp
cwtl
stos
sbb
push
imul
sbb
inc
jecxz
out
or
int3
push
aaa
ret
add
loope
add
or
loop
xchg
and
in
cwtl
pop
lretw
mov
lock
and
js
ljmp
in
in
dec
mov
outsb
stos
sub
dec
push
popf
test
mov
lret
sub
scas
insl
mov
mov
out
mov
ljmp
out
cmp
test
pop
ret
push
sbb
ret
out
mov
repnz
mov
or
inc
sbb
xor
ret
icebp
jmp
out
xchg
fildl
lods
sub
in
adc
test
add
xlat
cltd
pushf
add
inc
cld
adc
ficoml
cmp
and
dec
iret
shlb
sahf
adc
xor
mov
push
lods
xor
mov
in
dec
stos
pop
ffree
mov
mov
push
call
insl
in
outsb
push
pop
mov
in
jae
push
sub
mov
cs
cli
aaa
lds
mov
js
xor
fucomp
outsb
sub
mov
in
fcmovb
jne
in
mov
mov
and
mov
and
lret
outsb
jns
mulb
mov
mov
std
aaa
out
int3
push
cli
dec
mov
in
add
insl
jmp
imul
cld
pop
movsl
mov
jecxz
xchg
xchg
adc
sub
lret
push
lret
jmp
lcall
mov
sub
xchg
shll
mov
mov
sub
mov
or
push
inc
les
aaa
sar
out
cmp
jns
xor
aad
std
pop
xor
sub
jp
bound
lret
imul
ljmp
ficoms
aas
ljmp
fwait
cmc
shlb
insl
mov
mov
xchg
add
mov
rorl
xor
dec
rolb
mov
xor
mov
or
cmp
ffreep
jp
xchg
imul
mov
dec
inc
sub
jg
rorl
pop
mov
popf
pop
sbb
flds
popa
and
sub
aaa
popa
xchg
lea
dec
scas
xchg
or
cmpsl
insl
push
in
insb
jns
ds
jmp
mov
pusha
loopne
push
mov
jo
dec
push
ret
lods
stos
inc
neg
mov
xchg
pop
push
pop
dec
stos
add
icebp
mov
jl
cltd
mov
sbb
shlb
in
and
les
inc
les
inc
rcrb
rcll
xor
ss
addb
cmc
je
xchg
add
into
mov
xchg
cmp
int
inc
daa
scas
test
pop
pop
enter
cmc
and
pop
jmp
push
xchg
insl
subb
sbb
push
pusha
repnz
jbe
loop
adc
inc
or
sub
js
xor
fstpt
cmpsl
add
sbb
adc
or
push
add
in
into
adc
dec
je
out
es
xor
fstp
or
in
insl
sub
mov
cmp
popa
pop
clc
sub
cltd
push
mov
adc
out
pushf
ja
pop
jno
or
inc
in
arpl
daa
xchg
fidivrs
cmp
popa
and
cwtl
jl
fcoml
mov
mov
clc
das
sbb
in
sbb
mov
popf
push
icebp
jl
push
sub
daa
cmp
jns
dec
jae
lea
dec
cmp
aas
sub
daa
inc
and
jge
ja
fwait
stos
nop
cmp
sahf
outsb
mov
jnp
ja
xor
faddl
xor
insb
cwtl
lds
in
cmp
jno
pop
add
sbb
lcall
pushf
inc
mov
test
stc
cmp
jns
fistps
sub
loop
in
xorb
movsl
xchg
and
test
or
push
xchg
popa
or
mov
repz
xor
sub
xor
in
call
mov
push
ss
addr16
and
das
mov
iret
lods
jns
fisttpll
mov
int3
mov
mov
dec
sub
xorl
xor
mov
dec
mov
xor
loop
dec
push
in
or
ss
sbb
add
inc
pushf
push
test
xor
adc
cmpb
xchg
ja
push
inc
cwtl
and
jns
xchg
xchg
push
jbe
inc
sysexit
lods
mov
and
push
fsubl
mov
rcrl
mov
call
aad
mov
sbbl
lods
pop
xchg
into
loope
sbb
mov
pushf
inc
xchg
and
pop
mov
andl
imul
mov
out
add
jl
cmpsb
mov
dec
popf
adc
in
jbe
push
into
cmp
call
cltd
iret
mov
pop
addr16
in
clc
pop
add
jb
jns
ja
loop
loopne
movsl
sahf
into
stc
aad
outsb
or
les
scas
enter
lods
mov
cmpsl
mov
and
mov
dec
pop
movsb
jno
mov
fcoms
lea
mov
mov
push
shrb
repnz
sti
add
hlt
into
jl
and
jl
or
sub
and
fs
imul
negl
lcall
mov
cltd
or
ds
int
mov
mov
cs
pushf
push
dec
stc
push
inc
out
inc
add
in
movsb
daa
jbe
and
int3
out
sbb
adcl
add
adc
inc
popa
mov
and
in
inc
add
mov
cld
inc
jae
fs
subl
xor
cmp
xor
pop
inc
insl
lods
and
mov
xchg
xchg
into
mov
pusha
sub
and
nop
or
inc
mov
sub
or
pop
mov
push
test
cli
loope
scas
bound
mov
push
or
adc
aam
jnp
out
jbe
adc
shrl
fcoml
repz
dec
and
lret
xor
addb
or
add
xchg
xchg
sbb
ja
xchg
add
mov
jae
mov
cmp
out
pusha
xor
imul
stc
notl
dec
fsubs
iret
jl
jmp
call
inc
loopne
mov
pop
sbb
outsb
jmp
add
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
mov
and
popf
xor
sbb
jae
mov
adcb
xor
aad
sbb
daa
ror
sub
mov
insb
mov
insb
scas
mov
xor
pop
mov
mov
out
inc
js
push
mov
faddl
xchg
mov
push
dec
inc
jmp
xchg
add
jmp
ds
fsubl
mov
in
in
sub
or
repz
testb
dec
or
xchg
lret
jno
push
and
cmp
jp
jl
fwait
push
fldenv
cmpsb
xchg
clc
mov
imul
sbb
shr
mov
dec
push
daa
push
insl
clc
push
push
push
mov
inc
andl
ljmp
adc
jbe
mov
pop
ss
lods
leave
in
lds
add
lret
inc
sbb
cmp
xor
pop
inc
dec
dec
imul
mov
cld
mov
cmp
push
xor
popa
add
mov
adc
leave
movsl
add
iret
nop
test
add
mov
or
mov
push
movsl
in
lret
and
insl
xchg
es
mov
sarl
push
inc
cld
fstl
pop
repz
lret
cli
out
xor
xchg
cmp
cli
push
jg
adc
jbe
sub
into
repnz
inc
imul
jmp
in
idiv
sub
push
dec
je
movsl
and
leave
push
or
sbb
dec
pop
jecxz
adc
mov
in
dec
mov
xor
aam
fiadds
xchg
jecxz
or
mov
and
stos
jb
pop
loop
test
push
shlb
pop
and
fildl
stc
or
mov
daa
or
dec
jp
cwtl
mov
repnz
sbb
ss
cltd
fstpl
push
xrelease
outsl
mov
mul
or
pop
popa
fildll
sub
jle
cmp
jl
and
push
lods
fmuls
hlt
or
icebp
jne
loopne
iret
test
icebp
shr
in
fnsave
push
add
call
cwtl
jnp
stos
into
jno
xchg
and
mov
add
loopne
xor
jmp
test
imul
or
sbb
pop
and
sbb
in
jl
shrb
repz
jmp
xor
push
inc
pop
push
xor
push
inc
mov
call
notb
gs
hlt
inc
pop
enter
xchg
test
out
push
and
shll
push
jo
movsb
stc
dec
add
scas
jno
mov
fistpl
dec
data16
inc
fistpl
dec
push
pop
xor
rclb
je
or
mov
aas
rcll
sbb
iret
xchg
mov
pop
cmp
mov
jecxz
iret
scas
jp
xchg
scas
ja
lods
aad
sti
into
bound
stc
sahf
mov
shll
jge
cmpb
dec
stos
dec
lock
int
sub
cltd
insl
lahf
cmp
das
nop
push
ss
data16
cld
mov
sub
adc
or
mov
dec
xorl
mov
add
jmp
dec
clc
pop
out
and
stos
mov
movsb
aas
ja
lock
mov
xchg
pop
jle
scas
fbstp
pusha
pop
add
mov
sbb
push
jnp,pn
pop
out
ret
adc
dec
hlt
stos
sub
addr16
arpl
mov
xchg
sub
jg
sub
jnp
int3
icebp
or
mov
aam
in
stos
jl
mov
daa
push
add
mov
adc
fidivs
sti
test
ret
inc
fidivs
xor
dec
insl
sarb
pop
adc
mov
aad
out
mov
les
mov
push
jge
mov
lods
andl
push
push
xchg
loopne
add
imul
push
sub
sbb
aam
mov
pop
and
push
push
cmp
faddl
pop
hlt
jle
push
push
cld
cld
push
jne
cmp
data16
mov
out
or
ja
xchg
or
xor
and
sahf
sarb
xchg
adc
inc
dec
hlt
sub
fdivs
repz
mov
insl
jo
loop
lods
xor
dec
aam
ret
jo
dec
mov
sub
nop
cltd
clc
dec
sub
daa
lahf
mov
shrb
sub
test
mov
push
rcll
sub
adc
fwait
sub
inc
mov
mov
pushf
xchg
aam
inc
out
nop
xlat
dec
jmp
sub
loop
mov
stos
cmc
and
dec
push
dec
xor
popf
arpl
mov
sbb
sub
dec
ret
mov
lret
out
inc
stc
ds
insb
inc
lods
jno
int
xor
icebp
dec
xchg
sahf
lahf
dec
inc
outsb
sbb
pop
sahf
in
imul
jnp
jne
or
xor
jns
out
xchg
rolb
dec
out
mov
mov
add
jmp
jmp
mov
in
sbb
and
call
jl
pop
cmpsl
mov
mov
sbbl
push
sub
lret
add
mov
insw
stos
cmc
in
dec
pushf
jmp
divl
adc
dec
int3
sbb
arpl
and
and
and
adc
popf
cmp
xor
lea
cmp
lcall
dec
testb
add
imul
xor
sbb
mull
fsts
push
push
idivl
xchg
dec
loopne
lea
shll
mov
cli
movsl
jg
pop
faddp
lret
pushf
mov
jge
push
rcr
into
popf
and
jp
cmc
lcall
fidivl
jl
push
or
mov
es
jge
adc
inc
adc
mov
pop
inc
movsb
mov
jg
je
adc
xchg
ja
push
xor
clc
popa
sub
push
aam
testl
inc
push
cmpsl
movsb
jnp
adc
xchg
lods
push
adc
jne,pt
xor
cltd
jae
in
mov
das
test
push
movb
dec
pop
loope
and
pop
icebp
cltd
sub
jb
cmp
add
bound
or
or
push
jns
lods
pop
in
pop
mov
pushw
xchg
lods
notb
cli
dec
inc
mov
xor
mov
test
jne
push
imul
xchg
mov
xchg
sbb
scas
call
sub
insb
stos
sahf
icebp
push
ret
mov
jne
add
out
xchg
fstpl
pop
push
hlt
ret
xchg
fldcw
sbb
cmpsl
xchg
or
mov
push
sahf
mov
xor
push
fstl
rclb
inc
pop
sbb
adc
es
ret
pushf
mov
pop
loope
sbb
inc
pop
mov
pop
jmp
fidivrs
incb
jecxz
add
sub
xchg
mov
sbbb
popf
les
or
jae
mov
mov
sub
jle
arpl
sub
inc
xchg
lret
mov
sbb
mov
daa
sub
fwait
out
ds
mov
xchg
add
or
iret
pop
insl
outsb
dec
or
cs
pusha
mov
xlat
sbbl
cmpsl
adc
xchg
sub
test
jb
sub
adc
mov
imul
mov
ja
xor
fs
and
aad
inc
sbb
cltd
inc
mov
pop
jbe
sbb
fldt
insl
push
pop
push
inc
sti
sahf
outsb
cltd
les
xchg
int3
cli
scas
pop
repnz
sarl
pop
mov
aam
lods
adc
xor
and
sbb
popa
cmp
dec
add
cmp
or
dec
push
push
mov
add
imul
jb
ret
in
xrelease
shll
or
push
adc
mov
sub
loop
mov
mov
mov
test
xchg
jg
cli
lock
add
push
adc
ja
pop
sbb
push
hlt
push
jno
cltd
sub
mov
or
pop
adc
fcmovu
jg
sub
add
inc
inc
add
mov
andl
sbb
lds
insb
pop
jp
sub
mov
fstp
hlt
loopne
dec
inc
push
mov
arpl
inc
jp
lea
adc
push
and
add
xor
lods
mov
es
inc
mov
push
jge
ror
rorb
mov
aad
push
xlat
fs
push
mov
xor
pusha
add
add
stos
stc
or
ret
cmp
mov
je
jle
inc
es
and
scas
sub
jle
dec
sub
push
fadds
adc
mov
push
mov
fiadds
into
push
or
add
mov
pop
and
add
or
mov
xchg
or
add
cwtl
std
adc
in
arpl
cmp
sbb
mov
xchg
xor
jmp
pusha
xchg
lcall
jo
addr16
enter
dec
ret
test
push
and
in
lods
mov
into
sbbb
loope
push
es
enter
add
adc
subl
jnp
inc
adc
arpl
fstpt
dec
mov
mov
dec
arpl
fcmovnbe
cmp
xlat
adc
or
xor
jbe
push
pop
mov
iret
and
sub
outsb
testl
scas
xchg
xor
or
adc
and
rep
mov
hlt
outsb
push
lds
subb
lahf
repnz
inc
cld
sub
jmp
mov
mov
dec
mov
enter
ljmp
mov
pop
inc
or
insb
or
fiadds
xor
xor
mov
push
or
insl
ficoml
aaa
daa
lods
out
add
pop
cmp
pop
sbb
dec
loop
adc
pop
sbb
pop
dec
jg
rcrl
inc
jl
push
inc
in
xchg
push
mov
repnz
add
sbb
mov
std
insl
jmp
fwait
add
dec
push
jo
shrl
adc
mov
inc
jmp
xchg
lods
xlat
mov
fstps
inc
sbb
jbe
cli
inc
shll
mov
in
add
dec
outsl
dec
jnp
test
pop
or
cs
popa
mov
ret
pop
mov
sub
inc
mov
xchg
or
cmpsl
mov
sar
addr16
cmp
push
lret
fdivs
mov
xlat
cli
xor
adcb
stc
ljmp
fadds
mov
aad
movsb
lahf
mov
push
pop
mov
insl
lds
push
aaa
imull
xor
popa
inc
inc
les
out
xor
fldt
cmp
sbb
mov
cmc
outsb
and
cltd
enter
push
and
sbb
jge
insb
cmp
fimuls
popa
mov
xchg
fisubs
xor
aas
add
mov
dec
sar
pop
mov
xor
aad
mov
adc
in
mov
insl
ret
sub
shll
inc
cli
pop
fisubrl
mov
cmp
pushf
stc
mov
insl
lods
sub
mov
mov
scas
dec
xchg
les
rolb
and
pop
pop
dec
sarl
mov
out
adc
sti
ror
btc
lds
movsb
das
je
loop
sbb
shrl
shrb
push
jnp
or
aas
rorl
sti
mov
fcmovnb
pop
and
push
push
pop
loopne
mov
in
push
pop
xor
fidivl
bound
and
pop
loope
mov
jge
push
inc
jmp
pop
and
or
push
leave
lahf
das
rorl
test
out
fstpl
and
adc
mov
ret
orl
or
test
cmp
ja
pushf
cwtl
adc
outsl
pop
pop
xchg
je
mov
add
daa
arpl
test
inc
pop
xlat
clc
push
repz
fwait
jecxz
sub
icebp
int3
cwtl
aas
daa
mov
xchg
enter
and
and
and
mov
popa
std
fldenv
icebp
xor
mov
shll
sbb
xor
arpl
push
jle
mov
mov
fnstsw
mov
push
xlat
jno
pushf
cmp
jnp
and
movsb
dec
mov
lcall
sub
and
push
mov
or
js
xchg
lret
pop
out
ds
rcrb
mov
pusha
into
rorl
test
nop
dec
push
lods
bound
std
dec
jp
xchg
repnz
jle
pop
mov
xchg
ljmp
pop
lods
inc
jmp
jo
jo
loope
and
xor
sub
fisubrs
inc
inc
or
mov
adc
les
repz
fdivrs
mov
sub
rolb
jns
jge
jae
mov
dec
mov
repz
xor
popa
fwait
push
mov
pop
imull
fs
pop
sub
int
sbb
jno
sub
cwtl
mov
or
jae
cmp
pop
ret
imul
js
aas
xlat
push
push
nop
clc
sbb
fimull
sahf
mov
cltd
fimuls
mov
rclb
cmp
negb
inc
sub
adcl
icebp
xor
xchg
fldl
shll
testb
test
pop
not
mov
push
mov
sub
xor
xchg
lock
je
sub
insb
mov
cmp
push
lcall
test
mov
les
xor
cwtl
pop
inc
inc
lret
leave
xchg
into
lahf
aam
cmp
fbld
mov
in
adc
push
sti
int3
pop
lock
shlb
push
cmp
lret
mov
adc
inc
mov
test
xorl
je
or
jbe
leave
adc
jnp
sub
jmp
mov
jge
dec
insb
leave
shlb
das
loopne
push
lret
and
jge
and
test
cmpsb
mov
pop
mov
push
cltd
add
clc
out
je
incl
cmpsb
dec
and
dec
push
pop
pushf
or
lea
popa
in
fisubrl
out
fptan
cs
and
nop
aam
jbe
ret
mov
inc
call
lahf
cmp
jmp
aad
xchg
loope
addr16
cwtl
push
add
fcompl
iret
mov
adc
pushf
fwait
mov
out
negb
mov
pop
dec
frstor
xor
int
pop
fcoms
cli
mov
jmp
out
mov
xor
cmp
ret
es
fistpll
sbb
pop
ret
push
xchg
out
adc
cmp
test
jp
int3
ljmp
push
arpl
in
popa
push
int3
fcmovnu
cmp
mov
pop
sub
insl
jp
jnp
adcb
jmp
movsl
jl
xchg
jo
inc
jne
adc
pop
scas
push
add
aas
add
arpl
mov
sub
in
rcrl
cmc
and
les
pushf
shll
popa
xchg
add
insb
aas
xor
sbb
fdivs
add
fwait
inc
or
cwtl
mov
jb
aaa
push
inc
stc
test
xchg
sub
mov
sahf
sti
inc
push
cmp
pop
lock
and
and
and
scas
push
fwait
sub
and
dec
xor
div
lret
lcall
push
cmc
push
loop
or
arpl
das
test
fwait
xchg
add
jge
pop
fwait
lods
adc
icebp
sbb
ja
mov
mov
xchg
loopne
sbb
lcall
enter
cmp
ljmp
pop
movsb
dec
mov
adc
ja
inc
lods
mov
xor
dec
hlt
sbb
out
outsl
test
shl
shrb
cmp
outsl
adc
int3
insl
xor
imull
jb
test
sahf
shl
in
dec
jle
xchg
xchg
push
lahf
xchg
or
xlat
inc
in
out
add
fdivp
stos
sub
jle
pop
or
js
out
ficoms
or
loop
sub
jle
lcall
rolb
sbbb
pop
push
sub
cs
pop
sbb
fs
jb
or
mov
in
js
stos
sub
jmp
sub
xor
inc
cmc
orl
jmp
arpl
test
es
push
push
sbb
call
std
jl
sbb
test
les
mov
ljmp
add
popf
cmp
cmpsl
clc
cmp
rolb
loop
cmp
sub
aas
push
push
mov
aad
out
mov
mov
sub
shl
pop
stos
push
mov
bswap
add
rcrl
lods
adc
xchg
cmp
jb
inc
imul
cmp
mov
push
ret
sti
adc
jo
ss
or
mov
sub
inc
mov
adc
mov
rcl
repnz
or
sub
push
sbb
xchg
ja
data16
in
ret
and
dec
nop
or
jns
iret
mov
loope
lret
sbb
lods
add
shrb
jl
and
jle
or
es
xchg
ss
cmpsl
loopne
aas
push
mov
movsl
push
fimuls
xchg
pop
add
addr16
add
pop
cmc
aad
shll
lods
lret
sbb
sahf
cmc
scas
lock
mov
mov
dec
popw
jge
or
push
fsubrl
jge
inc
sti
inc
and
xor
cmp
es
push
jbe
mov
test
cmpl
push
dec
subb
inc
dec
push
push
mov
xor
push
cwtl
sbb
stc
stos
lcall
jg
add
add
idivb
shlb
push
cmp
mov
xlat
pushf
dec
sbb
out
mov
mov
pop
xchg
jb
movsl
mov
and
dec
fidivrs
pop
mov
adc
push
xor
jo
gs
sahf
pop
adcb
aad
push
inc
xchg
xorl
jne
cmp
mov
mov
test
mov
out
adc
jo
scas
xor
lea
sbb
out
fstpt
loopne
and
mov
push
cli
ds
outsl
test
fscale
test
dec
jne
jg
add
fwait
push
dec
pop
and
test
sbb
mov
cmpl
push
loopne
test
cmc
movsl
dec
jg
push
inc
sbb
jp
addl
and
mov
jmp
add
rol
stos
jnp
and
sub
and
roll
sub
adc
fldenv
data16
xchg
jge
cld
cmp
sub
lcall
cmp
mov
ss
fxch
pop
cmp
xor
lret
sub
pop
adc
andl
xchg
repz
addb
out
int
mov
std
cmpsb
in
adc
pop
cmpsl
xchg
fsubr
test
rorl
pop
repz
fistpll
mov
push
ljmp
pop
out
push
push
vsubps
add
sub
pop
je
gs
mov
mov
push
and
lcall
add
pop
pop
stc
dec
rcr
adc
jge
outsb
fwait
bound
into
in
scas
mov
fiaddl
out
push
pop
pop
cmpl
test
adc
jne
adc
sub
fisubs
pop
out
pop
mov
hlt
pop
xor
pop
dec
jae
or
repz
cmp
cmp
loopne
xor
xlat
test
sti
push
stos
xchg
cmp
fcmovb
mov
rcr
mov
stc
sub
pop
nop
push
sub
mov
out
loope
mov
aaa
sbb
pushf
mov
shrl
dec
jecxz
xor
cli
ret
mov
test
cltd
aas
dec
cld
ja
ja
test
sub
fmull
and
in
testb
or
adc
js
mov
scas
jmp
and
insl
xor
rcrb
lret
jne
jno
rcll
xchg
sbb
mov
out
mov
or
imul
clc
xor
pop
or
mov
fisttpll
test
test
dec
aas
adc
or
xchg
mov
hlt
add
lods
cmp
lcall
sbb
inc
aaa
movb
pusha
jp
mov
in
in
dec
cmp
dec
les
mov
outsb
shrb
push
ja
xorl
in
adc
jg,pn
mov
lahf
aaa
sub
or
fstpl
sti
mov
out
jmp
mov
mov
test
rclb
fcoml
scas
clc
inc
push
addr16
mov
repnz
xchg
dec
pop
xor
push
cmp
movsb
loope
test
arpl
mov
push
xchg
les
push
stos
pop
push
mov
cli
andb
in
jmp
scas
clc
or
cli
fyl2xp1
lods
outsb
mov
xchg
pop
xchg
rcrb
pop
add
mov
sti
mov
hlt
repnz
cmp
add
xor
add
cmc
orb
ret
mov
gs
mov
fidivl
adc
ljmp
or
ds
repnz
enter
and
stos
sarb
jmp
adcl
shrb
pop
mov
lods
or
pop
mov
or
je
inc
std
jg
cmc
mov
push
mov
mov
lds
or
inc
repz
scas
sbb
xchg
fnsave
stos
std
test
out
fbstp
adc
adc
int3
xchg
adc
jo
jp
lcall
iret
inc
cmpsb
pop
movsl
pop
cli
arpl
sub
mov
mov
je
or
inc
or
jns
stos
adc
jmp
loope
loop
push
je
or
jmp
ret
cs
out
es
sub
mov
mov
das
sub
ss
cmp
push
subl
loope
or
jp
push
insl
inc
rclb
ljmp
pop
mov
xchg
add
jns
cmc
lea
stos
imul
sbb
pop
lret
fistl
xorl
xchg
cmp
xchg
sbb
jge
popf
icebp
and
xlat
pop
mov
mov
push
mov
mov
cmpsb
sub
fdivrs
lea
mov
sbb
xor
inc
pushf
jno
sar
and
adc
xor
push
xor
pop
xchg
ljmp
mov
int3
push
sub
mov
cmc
movsb
loopne
subb
cli
xorb
cmp
xor
cmp
imul
adc
out
icebp
push
jg
test
pop
ds
cltd
adc
popf
loopne
lock
lret
lcall
je
cli
arpl
and
or
sub
gs
add
add
sub
unpcklps
xchg
dec
pop
inc
ss
addl
pop
add
pop
pushw
pop
movsb
js
push
mov
sub
pop
out
fists
jmp
repnz
arpl
es
clc
cmp
xchg
and
outsl
mov
call
aaa
in
int3
dec
cmp
cmpsb
dec
pop
lds
lret
insl
scas
ds
jbe
cmp
add
mov
push
test
push
xor
into
cmpsb
mov
mov
xchg
add
add
dec
pusha
adcb
and
dec
sbb
jmp
ret
push
and
jb
sub
ds
pop
mov
cmpsb
aas
add
insl
cs
popa
clc
dec
andb
inc
push
mov
sbb
imul
test
fstps
xchg
mov
in
gs
mov
mov
cmc
cmp
loope
fsubrs
xchg
fs
push
adc
out
int
out
ja
sahf
adc
orl
pop
aad
cmp
xchg
xchg
inc
sub
pushf
dec
xlat
pusha
sub
inc
vmwrite
push
ss
cmp
jge
mov
repnz
push
dec
sub
call
adc
js
cmp
jle
pop
repz
and
stos
faddl
int
insl
jecxz
lcall
mov
mov
cmp
cs
cwtl
fs
dec
shl
inc
loopne
xchg
push
or
and
dec
cwtl
je
aad
int3
add
fisttps
int3
leave
lret
inc
loopne
icebp
jb
popa
fstps
leave
pop
fnstcw
jne
inc
sub
jg
xchg
stos
loop
imul
jge
stc
test
and
mov
push
imul
in
cmc
inc
loopne
add
mov
leave
insb
or
fwait
rcrl
cmpl
inc
clc
dec
jb
adc
daa
ds
sbb
mov
rol
cmp
jle
mov
mov
push
aad
push
lds
cld
cmp
fwait
jecxz
test
mov
stc
jg
testb
out
fldenv
outsl
pop
popa
sub
or
arpl
lahf
xchg
sub
imulb
xchg
outsl
mov
mov
lods
fdivs
movsb
dec
test
imul
popf
xlat
je
add
and
push
jle
test
fwait
pop
and
lcall
mov
addr16
sbb
fcmovb
scas
out
mov
and
adc
cltd
mov
dec
mov
and
push
leave
sbb
jmp
add
add
inc
or
xchg
adcb
and
pop
xor
adc
fbld
insb
inc
adc
sub
popf
sbb
cmp
xor
adc
sbb
jae
das
dec
into
jmp
mov
cmpsl
xchg
hlt
xchg
mov
inc
add
inc
pop
push
jmp
cltd
adc
sbb
sbb
outsl
jo
jl
mov
sub
test
xchg
jns
repz
mov
push
mov
sar
add
xlat
mov
arpl
hlt
push
xchg
loope
push
mov
pop
repnz
mov
xchg
jo
jg
outsl
inc
insl
fisubrs
aaa
movsb
inc
aad
jp
xchg
jno
sbb
iret
add
and
dec
insl
pop
lea
pop
push
or
mov
dec
loope
add
in
adc
cmp
xchg
imul
les
fucomi
mov
bound
ret
fiadds
push
in
mov
jle
mov
sub
adc
cmpsb
rol
cld
dec
aaa
adc
cmp
shrl
dec
or
jge
int
ret
jecxz
xlat
popf
cmp
push
loopne
repnz
ret
add
xor
lock
mov
xchg
add
add
nop
fildll
into
mov
inc
push
and
push
jecxz
or
push
ljmp
es
fists
ret
popf
aad
jns
and
mov
scas
add
loope
arpl
push
xchg
push
sub
xor
ret
or
mov
or
sbb
sbb
rol
xchg
sbb
mov
shrb
int3
adc
test
ret
mov
cmp
lret
xchg
mov
sub
or
je
jb
test
fidivs
lret
mov
call
clc
pop
jmp
pop
cmp
push
xchg
push
std
ds
dec
fcomps
ret
mov
lods
mov
stos
push
add
mov
push
lret
test
scas
popa
cmp
sarl
stc
mov
mov
mov
aam
inc
pop
dec
repz
xchg
stc
mov
mov
push
enter
cmp
xor
dec
in
add
and
movl
fisubrs
lea
add
lods
in
fstl
inc
mov
and
insl
push
stc
adc
test
xor
sti
adc
in
sarb
jae
in
cmpl
inc
mov
stc
icebp
cltd
jge
add
scas
scas
xlat
jle
inc
pop
outsb
inc
into
aas
push
fldenv
mov
inc
pop
xor
push
test
pop
dec
xchg
pop
push
rep
pushf
inc
mov
mov
rclb
push
les
dec
or
cmpsb
ljmp
out
pop
mov
testl
insl
cmp
push
xor
cmp
ss
push
sti
push
and
fmull
dec
xchg
push
inc
popw
cmp
sub
arpl
dec
sti
dec
add
cmc
idivb
jle
xor
clc
js
push
mov
inc
cwtl
or
pop
int3
cmpsl
and
ficoml
mov
mov
pop
insl
mov
outsb
jae
cld
adc
shll
mov
jns
push
fwait
cmpsb
xor
scas
loope
frstor
pop
hlt
fbstp
jae
insl
xor
pop
cld
and
adc
pusha
add
mov
leave
add
adc
inc
push
mov
cmp
dec
mov
jno
jg
iret
push
in
outsb
dec
stc
int
scas
mov
arpl
cli
xchg
xchg
xchg
je
sub
xor
or
jl
and
push
je
ret
mov
ret
xor
in
pop
jnp
sbb
daa
in
jle
inc
loopne
div
lcall
adc
data16
sub
fadd
ds
dec
sub
adc
dec
add
mov
sbb
push
add
mov
or
mov
xor
sub
push
sub
jb
shlb
jo
sub
xchg
jle
outsl
or
cli
push
and
call
push
inc
xchg
jp
mov
in
and
or
cltd
or
test
pushf
aas
push
or
jecxz
addr16
mov
es
stc
adc
loop
or
popl
js
inc
add
ret
push
adc
les
and
outsl
sub
in
test
pop
out
cmp
mov
loopne
or
xchg
hlt
repnz
push
in
cltd
lahf
sbb
xor
arpl
gs
jnp
sbb
pop
and
xor
cld
js
sbb
and
rorb
xchg
adcl
mov
sti
aam
cmp
jbe
ret
lcall
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
shll
hlt
in
mov
