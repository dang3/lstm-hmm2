add
dec
and
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
pop
pop
ret
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
call
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
mov
mov
call
andl
push
mov
lea
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
mov
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
xor
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
sub
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
cmp
je
cmp
je
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
push
call
mov
add
jbe
mov
add
jmp
add
loopne
lret
push
leave
add
add
mov
add
cli
stc
add
in
add
push
push
push
push
lea
push
push
push
call
mov
fiaddl
jno
lock
add
add
stos
icebp
test
pop
lods
out
mov
pushf
testb
mov
lods
add
jmp
mov
add
add
data16
xchg
jbe
int3
mov
jnp
jno
mov
fstpl
mov
in
call
popl
push
push
push
lea
push
call
add
add
out
mov
add
add
add
mov
xchg
mov
lods
jnp
mov
iret
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
lods
jmp
fs
shl
add
out
cld
mov
popa
add
push
imul
in
sub
pop
push
push
push
push
call
xchg
rcl
add
add
repnz
add
add
xchg
hlt
jge
insb
add
add
rcll
add
mov
add
arpl
add
lock
lcall
mov
add
push
push
push
lea
push
push
push
call
lret
add
sahf
add
call
xchg
jle
lcall
jmp
add
add
lea
add
add
scas
repnz
add
jb
mov
int
add
pop
adcb
popl
mov
add
jp
push
negb
sub
pop
push
push
push
push
push
push
push
call
add
jmp
add
add
add
add
jnp
testl
push
je
shrl
add
jne
test
add
cwtl
add
add
in
call
add
push
push
lea
push
push
push
push
call
add
clc
add
xchg
in
lods
add
add
mov
push
sahf
add
add
add
fisubl
pop
lods
shll
push
rolb
arpl
add
leave
push
push
add
mov
sahf
sub
pop
jmp
push
lea
push
lea
push
push
push
push
call
mov
test
les
into
shl
add
rolb
add
movl
les
lods
add
int
cli
mov
cli
add
int3
add
call
ret
push
push
push
lea
push
call
andb
jecxz
add
add
xlat
sti
data16
add
je
or
lds
add
test
add
hlt
jecxz
lds
push
add
popf
jae
sub
pop
mov
push
push
push
push
push
lea
push
call
add
push
les
int3
jge
arpl
add
stc
ja
add
lods
bound
aam
cltd
out
fs
in
fwait
xchg
pop
rolb
sti
idiv
add
add
in
call
mov
push
push
push
lea
push
push
push
push
push
call
add
add
push
add
movl
add
mov
test
roll
out
add
stos
mov
add
add
mov
add
fsubs
lcall
pop
in
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
fdivr
subb
add
add
add
mov
add
into
mov
add
fwait
add
add
mov
add
add
add
pop
add
leave
sti
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
call
icebp
cwtl
icebp
add
add
jp
imul
push
scas
add
add
add
in
gs
pushf
add
pop
movsl
add
rcll
add
add
lds
in
call
dec
add
mov
push
push
push
call
lcall
scas
push
in
stos
add
add
incb
mov
addr16
fimuls
add
add
xchg
mov
ljmp
add
int3
add
mov
add
add
push
add
add
jp
cwtl
movsb
fildl
clc
imul
push
xchg
addb
add
lcall
sbb
push
push
push
call
add
add
pop
add
gs
add
ja
add
jecxz
test
out
add
js
in
popa
add
lcall
les
add
push
push
ror
push
or
inc
add
not
add
shr
rol
sub
ror
pop
sub
rol
xor
pop
push
push
lea
push
push
push
call
xor
clc
add
mov
aam
pushf
add
cmp
add
xchg
add
mov
je
cmpsb
add
cmc
add
rcrl
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
stos
add
add
leave
shll
add
add
mov
jle
cltd
add
add
add
sahf
add
mov
add
test
add
add
add
mov
cltd
pop
stos
lods
cmpsl
ja
int3
mov
aam
add
ficompl
xchg
xchg
add
lea
add
pop
mov
add
aaa
pop
add
mov
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
add
xchg
push
testl
pop
xchg
mov
add
add
push
jne
add
mov
ljmp
loopne
mov
add
testl
jmp
add
jo
clc
out
add
jecxz
push
jl
add
outsl
sub
pop
movl
lea
push
push
push
push
push
call
pop
xchg
addl
pop
add
jno
mov
ficompl
jo
add
mov
add
lock
add
pusha
add
jp
cmpsb
add
int3
mov
pop
mov
add
lahf
scas
jge
iret
jge
lret
xchg
add
lds
jl
add
push
adcb
add
mov
lcall
push
push
call
test
test
scas
imul
add
add
out
out
add
add
cmpsb
loop
subb
add
add
fiadds
stos
cli
mov
mov
scas
mov
add
mov
clc
add
popf
sub
pop
pushl
push
push
push
push
push
call
push
sahf
fiadds
xchg
add
mov
jo
ljmp
pop
stos
int3
je
fldcw
cmp
add
push
add
add
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
add
test
lret
mov
add
add
jne
in
add
pusha
out
jae
add
add
add
add
ret
add
jns
cmc
pop
xchg
test
add
negl
hlt
cli
add
lods
pop
jo
in
fcomps
jne
push
lea
push
push
push
call
jns
ljmp
push
pushf
add
imul
add
add
add
xchg
jecxz
xchg
jb
arpl
add
add
add
in
aad
sub
pop
pushl
push
push
push
push
push
call
popf
add
stc
pop
sahf
add
loopne
fdivp
cmpsb
add
add
add
in
mov
jecxz
arpl
add
jmp
lcall
add
rolb
mov
outsb
cmp
add
cmpsl
mov
push
pop
add
rol
sub
shl
not
sub
shr
sub
pop
sub
rol
xor
pop
push
lea
push
push
push
push
push
push
push
call
push
add
add
push
jno
add
add
add
in
push
fbstp
add
mov
xor
add
icebp
insb
shlb
add
mov
jecxz
mov
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
sahf
nop
xchg
out
add
add
iret
add
hlt
add
add
add
mov
ja
add
push
jns
xchg
stc
shrb
mov
test
pushf
mov
lcall
add
mov
sub
pop
call
push
push
push
not
ror
push
xor
add
shl
shl
sub
add
sub
pop
ror
sub
dec
pop
push
push
push
push
push
push
push
push
call
lea
add
add
ljmp
push
cld
add
push
fwait
add
bound
cwtl
mov
cmp
lahf
add
insb
add
loopne
push
push
push
lea
push
push
push
push
push
call
lds
add
add
add
jnp
mov
add
add
add
scas
mov
into
add
pop
xchg
cltd
add
push
mov
lock
add
in
xchg
addr16
mov
ja
add
add
jbe
add
pop
call
mov
push
push
push
push
lea
push
call
scas
roll
add
faddl
test
xchg
mov
add
pop
in
fstl
pop
add
pop
lods
lods
lahf
movl
call
push
push
lea
push
lea
push
lea
push
push
call
stos
xchg
repnz
add
mov
add
pop
repnz
mov
xchg
jbe
add
add
add
mov
pop
gs
mov
add
add
lcall
push
xchg
pop
add
add
add
faddl
lds
in
icebp
jae
add
mov
in
lcall
push
lea
push
push
push
push
push
push
push
call
add
add
fadds
xchg
jp
mov
lods
scas
cltd
add
push
mov
pop
cld
add
into
clc
push
mov
add
cmpsb
movb
mov
add
push
mov
add
add
add
rorb
jmp
push
add
mov
jle
mov
add
add
loopne
in
loopne
lcall
pop
hlt
push
lea
push
push
push
push
push
call
add
add
add
lds
add
add
add
data16
add
enter
jmp
add
push
add
cld
into
add
add
add
mov
add
outsl
test
outsl
add
imul
push
mov
popa
lret
add
add
push
jp
add
lcall
pop
in
add
push
push
push
push
push
push
call
add
add
out
mov
jno
insb
add
add
les
add
add
add
add
xchg
add
add
add
lcall
ret
cmp
add
jno
adc
nop
ljmp
push
call
in
add
gs
icebp
add
test
add
add
mov
ljmp
add
add
cltd
push
rclb
xchg
jp
add
fbstp
add
jge
cmpsl
add
add
add
add
add
add
push
add
pop
sub
pop
add
push
push
push
call
xlat
add
jp
mov
loope
add
lods
mov
add
add
js
icebp
pop
add
rolb
testl
js
add
mov
movsb
add
xchg
add
filds
add
call
mov
add
fists
add
jl
in
clc
pop
mov
xor
push
push
push
call
add
rcll
add
aad
mov
xchg
lods
cltd
test
mov
popa
shrb
xchg
test
add
add
arpl
jle
add
jo
gs
lock
add
xchg
into
jp
movl
in
hlt
lcall
lock
push
push
push
lea
push
push
push
push
push
push
push
call
popa
lcall
xchg
add
pop
add
in
push
xchg
add
lods
andb
push
cli
add
dec
add
xor
adc
inc
js
push
lea
push
call
insb
stos
lea
xchg
add
repnz
stos
sti
add
add
pusha
add
mov
movl
add
add
jge
shr
in
lock
lcall
or
push
push
push
push
lea
push
push
call
test
add
mov
add
mov
data16
add
add
ljmp
add
lcall
les
add
push
push
push
push
call
filds
add
jmp
pop
les
jno
lods
cwtl
insb
add
push
xchg
add
leave
repnz
mov
add
out
add
add
add
pop
add
fistpl
movl
add
scas
add
fldcw
add
add
sahf
add
add
lcall
push
push
call
mov
add
add
mov
fldl
movsl
loopne
loop
add
add
cmpsl
mov
mov
add
out
mov
add
jp
pop
add
xchg
add
ret
push
loop
add
add
test
repnz
mov
roll
inc
or
adc
lea
push
push
push
push
call
aad
add
cmc
push
mov
mov
push
jmp
stc
pop
push
add
mov
add
loop
fadds
in
out
add
add
xchg
enter
mov
int3
loope
out
jbe
add
add
add
bound
stos
pop
add
mov
add
add
add
add
sub
push
push
push
push
push
push
push
push
push
call
fcmovbe
add
mov
add
add
andl
pop
xchg
push
test
cli
jno
add
push
add
in
loopne
into
add
add
in
pop
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
call
add
add
out
add
add
add
iret
movsb
add
in
pushf
add
loop
fisttpll
enter
jnp
pop
add
push
test
ljmp
movsb
push
push
call
lods
cmc
mov
cli
add
add
add
fwait
pop
movsl
add
in
add
pop
add
add
add
add
in
clc
pop
pop
mov
push
push
push
push
push
call
mov
ljmp
add
mov
add
std
gs
gs
add
push
add
add
add
add
jae
imull
scas
addb
popf
pop
add
stc
mov
add
add
jl
add
faddl
add
add
fnsave
out
add
mov
add
add
push
push
push
push
lea
push
lea
push
push
push
call
pop
int3
loope
fwait
test
lods
incb
xchg
add
rol
pop
add
pop
out
int
call
mov
imul
pop
mov
add
pushf
add
cld
add
add
jnp
add
ret
cmp
add
jno
adc
or
dec
add
add
idiv
fiadds
loop
cmpsb
add
mov
jge
scas
pop
add
add
enter
add
add
jmp
push
fildll
jecxz
add
add
orl
add
add
aad
add
mov
xor
push
push
push
push
push
push
push
push
lea
push
call
add
add
sahf
iret
fsubl
add
test
add
orw
cli
mov
add
add
sub
pop
add
push
lea
push
push
lea
push
lea
push
push
lea
push
call
test
ja
clc
add
filds
push
xchg
add
add
out
add
add
jbe
stos
add
lret
imul
loope
add
xchg
fs
add
in
add
add
add
shlb
fs
mov
mov
push
push
push
call
push
add
add
in
add
int3
jl
add
mov
test
sarl
clc
add
ja
add
in
clc
pop
xor
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
ja
add
push
imul
add
popf
sti
add
std
add
stc
add
fnsetpm(287
nop
outsl
test
js
xchg
xlat
incb
add
loop
add
les
push
push
push
push
push
push
call
mov
pop
add
add
jge
add
mov
add
xchg
flds
aam
add
shll
add
add
add
scas
add
add
add
add
add
add
testb
jne
out
cmp
aad
sub
pop
mov
xor
push
push
push
push
call
push
mov
add
add
add
add
lret
xorl
lret
loop
mov
cltd
add
xorb
clc
stos
add
pop
add
fwait
fs
xchg
add
add
add
cmc
add
addb
add
mov
jecxz
cwtl
add
sub
pop
add
push
push
push
call
add
add
loope
add
add
je
add
mov
xchg
lret
mov
add
mov
jno
add
add
mov
std
test
movl
mov
aad
ja
sub
pop
add
mov
push
push
add
add
inc
shl
push
or
not
add
add
sub
add
pop
shl
pop
push
lea
push
push
call
push
jns
add
test
mov
icebp
add
fwait
imul
call
lods
add
in
lahf
add
mov
addb
in
hlt
lcall
jne
call
push
push
push
push
push
lea
push
lea
push
call
add
add
add
mov
jae
popf
add
cwtl
mov
jns
xchg
outsl
cli
add
scas
push
jae
add
mov
mov
add
add
enter
in
in
lcall
add
ds
or
push
shr
push
or
not
add
sub
add
sub
xor
pop
shr
shr
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
into
xchg
int
bound
add
andl
js
outsl
cltd
sti
mov
fcmovu
addb
out
test
jb
add
mov
popf
cld
push
fcmovnb
xchg
add
sahf
fldln2
jne
mov
push
fwait
push
push
add
jmp
add
cwtl
lds
fdivr
lcall
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
repnz
aad
add
mov
add
xchg
add
add
scas
pop
lods
add
add
mov
add
fdivr
lcall
add
xor
mov
pop
push
push
push
call
add
jb
cmc
add
add
add
xchg
add
mov
mov
add
add
pop
add
add
add
add
add
imul
stos
add
xlat
add
add
push
push
add
jae
add
xchg
les
mov
add
xchg
add
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
mov
xchg
movsl
imul
mov
sahf
add
cmc
add
add
push
fidivrl
add
fcomps
clc
push
push
push
push
call
hlt
add
scas
mov
lret
cltd
rol
add
mov
add
sti
add
add
add
add
add
mov
adcl
rorl
add
add
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
stos
add
jns
pop
add
xlat
popl
add
pop
flds
call
je
mov
lcall
add
cwtl
mov
add
loope
fdivp
addr16
xchg
nop
sub
pop
push
push
push
push
call
add
mov
scas
pop
add
add
add
add
add
mov
add
cli
add
pop
cld
in
lret
xchg
add
add
add
mov
add
adc
add
xchg
xchg
pop
add
repnz
pop
mov
push
push
push
call
add
add
add
je
insb
add
lock
mov
cld
add
jbe
shll
int
pop
add
pushf
jno
jge
jae
add
mov
add
xchg
imul
fisubrs
add
jmp
nop
xlat
scas
mov
mov
cli
pushf
faddl
aam
in
hlt
pop
add
push
push
call
outsl
stos
mov
add
add
pop
pusha
add
add
sub
add
add
add
into
insb
add
movsl
arpl
add
add
add
mov
scas
lea
jno
mov
add
add
push
add
sub
pop
add
add
push
sub
not
shr
pop
mov
xor
push
lea
push
push
push
push
push
lea
push
push
push
call
push
mov
std
add
add
clc
idivl
ja
add
icebp
int
xchg
shll
mov
fwait
xchg
movsb
add
stos
mov
mov
add
leave
je
std
add
add
xlat
lcall
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
push
loope
int3
repnz
add
add
bound
std
add
fst
int
ja
add
loopne
mov
xor
push
push
push
push
lea
push
push
push
push
call
mov
enter
add
add
mov
pushf
scas
add
pop
add
add
mov
add
mov
push
add
pop
add
mov
xchg
loope
imul
add
lret
add
push
jbe
mov
push
in
loopne
add
pop
push
shr
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
sub
add
lea
xchg
add
add
add
pop
rcl
int
add
mov
pop
push
add
flds
add
sub
pop
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
scas
add
add
fimuls
pop
ja
add
add
int
andb
jno
out
lcall
je
xchg
pop
add
mov
add
add
push
xchg
add
in
mov
pop
add
push
ror
xor
not
pop
rep
push
inc
add
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
call
add
add
test
mov
cli
out
rorl
add
add
nop
movl
add
add
lock
add
in
in
or
je
push
shr
pop
mov
xor
push
shr
not
xor
pop
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
lds
add
add
sti
add
in
popf
mov
cwtl
push
out
add
pop
cmpsb
scas
add
out
add
xchg
jns
mov
add
icebp
pop
xchg
lcall
adc
push
push
push
push
lea
push
push
push
call
js
add
mov
xchg
fwait
rolb
add
popl
hlt
lcall
push
add
test
sti
jnp
addb
add
xchg
loopne
cmpsl
lahf
add
add
in
add
bound
mov
jle
add
xlat
add
hlt
jbe
add
mov
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
xchg
bound
aam
out
cli
xchg
add
add
add
fnsave
mov
add
test
out
rolb
jbe
add
add
lcall
repnz
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
jnp
imul
roll
out
shll
in
ljmp
push
add
jmp
enter
add
add
add
xchg
add
push
test
hlt
add
jae
add
test
insb
add
scas
mov
gs
mov
mov
loopne
push
mov
push
push
push
lea
push
push
push
push
call
fucomp
out
imul
pushf
pop
fimull
add
mov
test
std
loopne
add
pop
les
xlat
add
add
rol
int3
add
xchg
iret
push
test
mov
movsb
push
add
aad
add
jae
fisubs
pop
xor
push
push
lea
push
call
incb
lds
jl
mov
sti
add
jbe
hlt
int
iret
pop
add
mov
add
add
add
pop
push
in
cmpsl
jne
cwtl
add
add
add
std
add
lock
stc
faddl
frstor
scas
iret
arpl
outsl
add
addb
add
pop
add
push
inc
add
pop
add
push
add
pop
pop
rep
push
lea
push
lea
push
push
push
lea
push
push
call
add
movl
add
sahf
mov
add
imul
add
iret
lret
call
mov
push
mov
jbe
push
sbbw
xchg
icebp
mov
sub
pop
mov
xor
push
push
push
push
push
lea
push
push
call
mov
arpl
jp
cli
add
push
push
jae
mov
les
jae
add
mov
in
repnz
mov
add
mov
add
sti
mov
add
mov
jne
shll
in
loop
shlb
sub
pop
or
je
push
lea
pop
mov
push
push
push
lea
push
push
call
add
test
aam
shll
jb
mov
jmp
xorl
fldl
jmp
xchg
xchg
add
add
addb
lret
cmpsb
sarb
cwtl
add
int
push
mov
loope
add
add
push
cmc
add
addr16
add
add
sub
push
push
lea
push
push
push
push
push
lea
push
call
hlt
push
jmp
aam
xchg
fildl
pop
add
push
clc
std
add
fsubs
mov
sbbb
lock
fmulp
push
add
leave
cwtl
mov
add
mov
push
add
add
lcall
movb
add
push
push
lea
push
push
push
push
push
push
call
cmpsl
iret
pop
loopne
add
leave
mov
imul
add
fcmovu
rolb
add
popf
jecxz
pop
scas
pop
add
jno
add
rep
push
push
call
lock
xchg
sti
sahf
add
add
enter
mov
pop
push
mov
jmp
mov
rclb
sahf
movsl
cld
cld
repnz
into
rcr
mov
pop
pop
push
push
push
or
inc
add
sub
lea
shl
pop
rol
pop
push
inc
pop
pop
push
push
push
push
lea
push
call
jne
mov
pushf
imul
mov
add
into
mov
jbe
add
add
test
mov
in
push
add
xchg
add
lods
push
xchg
push
xchg
jb
insb
jae
mov
test
mov
sub
pop
mov
mov
push
lea
push
push
push
push
call
roll
add
pop
pushf
pop
add
cmpsb
into
add
call
test
add
je
add
add
add
out
stos
ret
pop
rcll
pop
faddl
add
mov
popa
add
in
les
add
push
loop
add
add
mov
jmp
push
push
call
add
add
add
add
sahf
mov
add
mov
add
mov
add
mov
mov
add
test
andl
cwtl
sub
pop
push
mov
push
push
push
push
push
push
push
call
jns
rcrb
mov
je
lock
ljmp
add
add
add
test
add
add
mov
xchg
jmp
out
add
add
push
not
add
pop
push
push
push
push
push
push
call
fldenv
add
add
popf
lods
push
add
add
rcll
add
int3
push
pop
movsb
fistpll
add
lock
push
push
shr
add
rol
pop
push
push
sub
add
pop
mov
pop
push
push
call
mov
mov
fldl
cld
add
jnp
pop
add
add
add
cmpsl
mov
add
add
add
scas
cmpsl
pop
mov
stos
lret
add
xchg
leave
sub
pop
pop
push
push
push
push
push
push
push
push
call
clc
ficomps
add
addb
push
add
int3
add
imul
add
mov
mov
pop
adc
leave
iret
aad
test
add
add
lcall
pop
push
shr
dec
ror
dec
pop
leave
ret
push
lea
add
lea
shl
pop
push
push
lea
push
push
call
test
add
mov
jb
mov
jge
add
nop
jbe
mov
ja
add
scas
jecxz
xchg
data16
aam
add
add
testb
add
lcall
in
push
dec
lea
pop
add
push
push
ror
pop
push
push
push
push
call
loopne
add
add
pop
push
je
add
jmp
aad
scas
in
add
add
idivb
mov
aad
add
outsl
xchg
lret
add
int
add
add
push
add
jns
push
add
lcall
push
push
push
push
push
push
push
call
add
add
add
lods
mov
movl
fidivrl
add
mov
mov
add
movsb
add
out
add
out
add
add
add
mov
popl
push
mov
push
movl
push
push
push
push
push
push
push
push
push
call
add
xchg
add
add
jb
add
imul
pop
roll
xchg
pop
in
int3
test
aad
add
sub
pop
addl
push
ror
pop
test
je
push
lea
push
push
call
xlat
add
fdivs
add
pop
fcoml
push
xchg
jnp
mov
mov
icebp
rorl
add
test
add
stos
add
sahf
fucomip
add
xchg
lods
hlt
mov
std
add
out
outsl
hlt
js
cltd
arpl
add
jb
xorl
out
add
andb
in
hlt
pop
mov
push
add
xor
pop
pop
push
sub
xor
rol
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
mov
pushf
fimuls
repnz
xchg
mov
add
nop
popf
push
jge
mov
rolb
pusha
jle
mov
mov
xchg
pop
sub
pop
pop
leave
push
lea
push
call
loopne
mov
test
jbe
cld
cwtl
add
add
add
add
mov
mov
addb
faddl
icebp
add
cwtl
jb
add
add
mov
add
hlt
add
add
push
jae
pushf
add
add
add
clc
lcall
add
push
ror
rol
lea
rol
pop
push
push
not
dec
xor
pop
mov
push
sub
dec
pop
add
push
push
lea
push
push
push
call
add
add
fdivrl
push
jbe
sarl
fnstsw
mov
add
add
add
pop
ret
into
imul
add
add
enter
nop
jmp
in
in
pop
push
push
push
dec
add
pop
push
push
pop
push
push
push
push
push
call
add
cld
lret
mov
popf
call
lods
jle
fchs
pop
add
mov
mov
les
xchg
iret
push
lahf
roll
mov
scas
add
fadds
add
add
cmc
add
add
shrb
add
xchg
mov
lcall
inc
cld
add
add
push
push
push
lea
push
push
push
push
push
push
push
call
hlt
test
add
add
add
mov
add
jle
jnp
add
mov
pop
cmpl
add
add
jne
lret
push
add
cli
add
fisttpl
add
add
rolb
pop
push
add
out
lods
mov
add
pop
cwtl
jle
imul
or
push
sub
shr
pop
push
push
ror
pop
call
push
push
push
push
push
call
out
xchg
add
add
add
add
add
add
adc
add
test
mov
movsl
jne
add
add
add
leave
mov
add
fwait
pop
xchg
mov
add
sub
pop
mov
push
ror
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
call
add
xchg
idivb
fdivrp
pop
add
add
in
les
add
pop
lock
add
addr16
xchg
lds
imul
lcall
call
lret
add
lea
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
sub
movsb
lahf
add
gs
add
add
lds
mov
int3
add
fildl
add
add
imul
test
mov
push
pop
add
add
ficomps
ret
mov
into
flds
add
fistl
into
fisubrl
add
sub
pop
call
push
ror
pop
cmpl
jne
pop
push
inc
pop
pop
pop
push
shl
pop
pop
push
dec
not
pop
leave
push
inc
pop
ret
push
add
shl
shr
pop
push
push
lea
push
lea
push
lea
push
call
rolb
jo
xchg
jmp
add
xchg
add
add
addr16
ja
lock
push
add
add
add
scas
add
mov
add
add
in
add
imul
ficoms
movl
sub
pop
mov
add
push
lea
push
push
lea
push
call
arpl
add
add
add
add
add
add
stos
stc
call
add
int3
lea
test
imul
fnstcw
test
lcall
push
ror
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
fnsave
nop
jge
add
ret
add
pop
mov
mov
call
add
ljmp
leave
jge
mov
add
jmp
add
rclb
movsb
out
jbe
cmpsb
mov
in
lcall
push
push
push
push
lea
push
call
lods
mov
loope
pop
enter
jb
lcall
divb
pop
add
sahf
add
mov
jns
add
stos
les
push
add
mov
faddl
mul
repnz
pop
mov
mov
add
ficoml
pop
jmp
sub
pop
push
push
push
push
call
pop
add
xchg
add
lahf
popa
add
add
add
add
xchg
loopne
add
pop
hlt
pop
add
mov
jecxz
sub
pop
movl
push
push
lea
push
push
lea
push
push
call
add
mov
mov
add
add
movsb
xchg
mov
mov
mov
stc
stos
cmpsl
add
mov
pusha
add
pop
mov
jecxz
scas
add
cmc
add
add
jl
in
add
mov
pop
mull
mov
int3
cld
ja
fucom
add
jb
pop
add
lcall
add
mov
push
call
shl
out
cwtl
add
jne
scas
mov
add
jbe
add
data16
add
add
xchg
pop
add
xchg
loopne
lcall
add
out
cld
jle
add
rolb
in
add
mov
push
jae
icebp
add
add
add
add
int
add
pop
call
push
ror
pop
push
push
shl
shr
pop
call
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
cmpsb
mov
add
add
iret
add
jns
push
add
fists
add
add
mov
add
lcall
insl
cld
add
test
call
pop
adc
call
add
add
add
add
jp
add
pop
add
mov
lea
mov
mov
add
movb
add
test
add
stc
add
mov
add
js
add
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
test
je
mov
ret
add
mov
xchg
clc
enter
add
jnp
clc
fimuls
add
lcall
add
add
addb
lea
push
push
push
push
lea
push
push
push
call
add
add
add
jp
add
data16
enter
push
add
imul
mov
add
add
mov
jl
cld
pop
jle
add
pushf
test
popa
add
cmpsl
add
add
mov
in
loopne
pop
push
not
inc
pop
pop
leave
push
push
call
add
mov
je
add
loope
add
mov
sar
rcll
jmp
test
rol
js
xchg
arpl
test
int
add
push
jbe
iret
add
mov
mov
sub
pop
ret
push
push
lea
push
push
push
push
call
add
add
jnp
jp
push
pop
hlt
add
fadds
testl
cltd
pop
add
enter
add
lret
add
shll
jp
sub
pop
mov
add
push
push
push
lea
push
push
push
push
push
call
lret
insb
fcmovnbe
test
add
scas
add
add
mov
movl
add
jl
into
jmp
sti
enter
sahf
xchg
iret
add
mov
add
mov
jecxz
add
add
add
add
push
add
add
add
mov
in
loopne
lcall
push
push
lea
push
push
lea
push
push
push
call
shlb
stos
jb
add
add
call
sar
mov
push
add
add
jp
data16
repnz
pop
push
push
push
sub
pop
mov
lea
push
xor
shr
pop
sub
push
sub
pop
mov
shr
push
add
pop
add
mov
push
add
rol
xor
pop
mov
add
push
push
push
lea
push
push
call
add
fs
pop
add
add
lds
add
add
je
icebp
orl
xlat
add
insb
push
mov
add
flds
fldlg2
lret
jae
mov
imul
add
in
pop
add
push
push
push
push
push
push
call
add
add
arpl
loope
leave
addl
call
arpl
add
pusha
add
out
add
jns
jp
add
sub
pop
mov
push
push
push
push
push
call
jmp
fs
add
nop
pushf
pop
imul
mov
xchg
cmc
push
lea
fwait
cmpsl
add
add
fwait
add
mov
sarl
shl
cwtl
popf
mov
into
add
add
jno
pop
loopne
mov
pop
jns
add
nop
nop
nop
nop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
add
mov
sahf
movsl
add
push
add
add
mov
add
add
add
in
addl
gs
gs
test
push
xlat
faddl
xchg
add
push
fisubs
clc
loop
add
mov
xchg
push
add
fildl
mov
cld
add
lcall
pop
outsl
jne
cmp
jne
push
lea
pop
mov
push
lea
shl
pop
movl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mull
sti
in
cmpl
add
mov
clc
add
add
add
lods
add
add
iret
add
clc
add
in
add
add
ficoms
int
std
sub
pop
jmp
push
push
call
push
add
add
filds
jb
stos
test
test
imul
add
add
add
add
int3
add
mov
mov
stos
add
fsincos
je
lcall
roll
imul
add
mov
add
lock
roll
add
lcall
inc
cld
push
inc
dec
pop
mov
push
push
push
push
push
push
call
add
add
add
mov
popa
add
mov
loope
add
pushf
add
lea
add
js
add
lcall
ljmp
pop
add
add
jmp
add
add
jmp
push
add
pop
mov
push
lea
pop
mov
cmp
jne
push
push
push
lea
push
lea
push
push
push
push
call
add
loop
jmp
mov
add
add
add
jnp
xchg
add
add
cmc
add
ja
jns
add
out
mov
jb
jae
insb
leave
jmp
lock
add
add
stos
testl
add
enter
jae
mov
in
loopne
mov
movl
push
push
call
mov
add
add
add
add
jle
mov
pop
stc
add
loopne
jae
xchg
sti
add
add
in
clc
lcall
orb
push
ror
pop
mov
push
xor
rol
not
pop
cmpw
jne
mov
push
add
sub
not
sub
pop
movl
push
lea
push
push
push
lea
push
push
push
call
mov
add
stos
add
jecxz
mov
add
push
mov
jmp
shlb
loopne
fnstenv
add
ror
add
xchg
add
xchg
cwtl
scas
pop
roll
xorl
jo
in
in
jmp
push
push
push
push
lea
push
push
push
push
push
lea
push
call
addl
loopne
imul
iret
add
add
gs
in
movb
pusha
popa
lock
xchg
lock
jmp
add
cwtl
lea
mov
add
add
addl
andb
pop
mov
add
sub
pop
pushl
push
rol
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
stos
mov
in
add
addb
add
add
jle
lcall
add
add
pop
add
fwait
in
sub
pop
mov
mov
push
push
push
push
lea
push
call
jno
or
hlt
add
aad
add
ljmp
add
add
push
add
je
les
addr16
add
add
in
iret
add
addb
add
mov
add
add
fldt
cmc
js
add
idivl
push
lock
rolb
arpl
jns
sub
pop
mov
push
push
add
push
or
not
add
sub
sub
ror
pop
rol
sub
pop
push
pop
push
push
push
push
lea
push
push
push
push
call
out
rolb
int3
add
rol
aam
jge
add
add
add
movsb
jne
lock
jmp
call
outsl
movsl
lahf
add
int
fwait
pop
mov
add
add
add
add
add
add
nop
scas
fsubrp
pop
add
add
jno
push
icebp
mov
mov
in
call
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
testl
add
jle
je
add
roll
add
push
xlat
add
mov
loopne
fisubs
fistpll
rolb
imul
add
add
jge
pop
add
mov
add
add
mov
mov
ljmp
add
fldz
ret
out
add
push
push
shl
push
or
inc
add
sub
not
inc
sub
xor
pop
inc
inc
rol
pop
push
add
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
xlat
xchg
mov
add
pop
fidivrs
add
xchg
negl
pop
mov
imul
xor
add
out
ret
push
or
add
jmp
ljmp
rolb
rol
sub
shr
sub
pop
add
not
rol
pop
push
sub
pop
push
push
xor
xor
pop
call
cmpl
je
push
push
xor
push
push
pop
add
shr
dec
sub
xor
rol
pop
not
dec
shr
pop
push
shl
add
lea
lea
pop
push
push
lea
push
call
faddl
stos
pusha
pop
add
add
push
add
ljmp
push
fs
push
mov
push
loope
add
add
mov
jns
jge
add
add
pop
add
add
sahf
add
add
insb
jo
andl
div
jmp
in
clc
lcall
cwtl
xor
add
bound
add
add
add
add
push
push
add
add
lahf
push
xchg
popf
sti
push
mov
pop
add
call
add
gs
mov
add
add
hlt
lahf
jne
mov
lahf
add
mov
add
xchg
cmpsl
add
sub
pop
cmpl
je
push
push
push
sub
add
add
sub
sub
pop
add
sub
sub
pop
push
push
push
lea
push
push
push
push
call
movsl
lods
stc
add
add
add
add
add
scas
add
scas
mov
cmc
aam
fidivrs
add
add
add
lods
sahf
push
popa
adc
mov
add
movl
fs
add
scas
add
add
out
lods
cmpsb
movsb
mov
lcall
call
push
not
add
ror
pop
cmpl
je
push
push
shl
push
and
add
sub
sub
xor
inc
shl
pop
dec
shl
pop
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
imul
pop
sbbb
xchg
add
add
add
add
in
js
mov
in
add
add
fsincos
add
add
add
in
pop
add
mov
jmp
rcll
std
xchg
jo
push
and
shlb
add
push
push
lea
push
push
call
add
mov
gs
mov
jge
pop
cwtl
xchg
cmpsb
movsl
data16
add
add
mov
add
add
sub
pop
call
push
inc
pop
cmpl
je
push
push
push
push
pop
add
sub
pop
not
pop
push
shr
shl
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
jge
xchg
lret
mov
imul
add
data16
add
andl
out
rcrl
cmpsl
int
aad
mov
pop
add
add
add
test
in
fdivr
lcall
int3
add
push
sub
pop
cmpl
je
push
push
shl
push
xor
add
xor
sub
lea
add
pop
inc
shl
dec
pop
push
push
lea
push
call
sbbl
xchg
xchg
add
roll
add
nop
test
lahf
roll
rol
subb
add
xchg
scas
mov
add
mov
stos
cmpsb
cltd
push
lcall
mov
stos
add
pop
xchg
add
lea
lods
push
cltd
out
imull
sub
pop
push
push
add
inc
pop
call
push
sub
add
add
pop
cmpl
je
push
push
sub
shl
push
or
inc
add
inc
shr
sub
add
ror
rol
shl
pop
inc
sub
xor
pop
push
not
lea
lea
pop
push
push
shr
sub
pop
call
cmpl
je
push
push
ror
push
or
not
add
sub
sub
add
pop
xor
xor
dec
pop
push
ror
add
not
sub
pop
push
call
push
shl
dec
pop
cmpl
je
push
push
push
sub
add
shl
sub
sub
xor
pop
add
shr
add
pop
push
push
lea
push
lea
push
call
pop
cmpsl
rolb
bound
add
in
push
add
mov
lret
add
leave
imul
cmpsl
js
iret
out
add
pop
add
clc
fwait
add
clc
rcrb
add
add
mov
push
jp
fwait
mov
mov
add
lds
lcall
call
push
push
push
lea
push
lea
push
push
call
mov
add
sub
add
icebp
add
add
xchg
arpl
popa
sarb
stc
xchg
add
filds
add
mov
add
lret
add
addl
add
xlat
xchg
in
popf
fiadds
outsl
cmc
sti
scas
addb
test
leave
les
lods
addl
add
cltd
xchg
gs
pop
cmpl
je
push
push
sub
not
sub
push
push
pop
add
lea
xor
shl
sub
ror
sub
add
pop
pop
push
push
push
push
push
push
call
fiadds
out
stc
mov
fistps
cli
test
fldenv
shlb
stc
mov
sahf
push
add
xchg
cmc
jne
cltd
pop
add
pusha
add
add
cmpsl
add
rolb
shr
sub
pop
push
call
push
push
push
push
lea
push
call
leave
add
jge
xchg
add
xchg
mov
add
mov
into
scas
addr16
add
add
mov
popa
mov
add
add
jl
movsb
lret
lahf
add
xchg
add
add
add
js
jmp
les
je
push
push
inc
sub
push
or
not
add
sub
sub
sub
lea
pop
add
pop
push
push
push
push
push
push
push
push
push
push
call
jl
add
add
icebp
add
push
cmpsb
popf
add
xchg
add
in
mov
sti
pop
mov
std
sub
pop
push
push
add
add
shr
sub
pop
call
cmpl
jne
push
push
push
push
push
push
push
call
add
filds
push
add
mov
add
add
filds
push
jno
xchg
add
pop
in
jo
testb
pop
add
add
pop
add
xlat
aad
cmp
jo
call
add
clc
jb
add
mov
sub
pop
mov
push
push
push
call
push
faddl
jbe
ja
out
cmpsl
add
rol
push
pop
jmp
add
jecxz
add
cwtl
pop
add
add
sub
pop
movl
push
inc
shr
dec
pop
jmp
xor
push
xor
lea
pop
pop
pop
push
lea
push
lea
push
call
xchg
js
mov
lcall
add
add
mov
add
add
cmc
add
push
push
popf
jl
movsl
jge
add
add
cli
imul
pop
imul
xchg
addl
pop
test
add
mov
jp
jle
add
add
in
add
add
add
fistl
hlt
lcall
pop
push
shr
shr
pop
leave
push
push
lea
push
push
push
push
call
arpl
add
add
add
into
add
add
test
add
in
stos
addl
add
mov
in
mov
leave
loope
push
mov
lret
call
ret
push
push
lea
push
push
push
lea
push
push
push
call
add
cmc
jnp
loop
mov
add
add
outsl
add
add
add
add
mov
add
les
aad
arpl
jno
ret
shlb
sti
mov
icebp
cltd
sahf
add
mov
or
loop
in
loopne
push
mov
push
add
add
shl
pop
add
push
sub
rol
sub
pop
cmpl
jne
push
push
dec
push
and
add
not
xor
sub
inc
pop
lea
sub
pop
push
sub
pop
pushl
push
shr
ror
dec
pop
call
push
push
push
push
push
call
add
into
mov
into
add
add
add
into
addb
add
xchg
rolb
js
add
add
hlt
lahf
popl
lahf
jno
add
imulb
lcall
call
push
push
push
push
push
call
add
add
add
mov
xlat
out
add
push
mov
add
add
fwait
test
lret
aad
loope
cli
add
add
addr16
add
add
add
fstps
out
notb
nop
add
xchg
xchg
fcmovbe
add
add
mov
stc
add
add
hlt
add
lcall
push
sbb
add
test
add
push
pop
cmpl
jne
mov
push
sub
pop
call
ret
push
rol
pop
jmp
push
lea
push
push
lea
push
push
lea
push
push
push
call
jns
in
push
add
mov
add
addl
imul
lock
add
fmuls
arpl
nop
add
lcall
jge
add
test
add
push
push
ror
push
push
pop
add
shl
xor
sub
shl
ror
inc
pop
dec
rol
add
rol
pop
push
push
push
call
mov
pushf
add
mov
aad
add
xchg
pop
in
add
pop
imul
ror
jmp
testb
test
aad
leave
in
lods
out
fistps
add
addl
add
fdivs
cltd
mov
mov
add
add
movb
int
in
hlt
lcall
jne
push
lea
push
lea
push
push
push
push
push
call
add
add
push
movb
data16
mov
shll
fcomp
jp
add
add
bound
sub
pop
call
push
shl
pop
push
call
push
push
call
add
add
fnstcw
add
push
cli
movsl
push
cmc
mov
mov
data16
jo
adc
lods
add
fildl
add
add
add
cmc
cld
add
mov
test
add
add
out
jnp
jge
add
add
hlt
int
add
popa
sub
pop
jmp
cmpl
jne
push
push
lea
push
lea
push
push
push
push
call
add
mov
test
fldl
xchg
add
add
add
popf
mov
add
jp
imul
push
out
jecxz
pushf
fadds
mov
sub
pop
mov
push
push
call
pushf
add
mov
mov
mov
add
jnp
mov
mov
add
add
add
add
push
add
add
jno
movsb
lahf
add
std
mov
lcall
add
add
push
push
push
add
shr
push
sub
add
rol
rol
sub
rol
add
pop
inc
pop
push
push
push
call
idivb
add
add
mov
add
add
add
add
push
out
mov
add
add
add
add
in
add
add
add
mul
test
hlt
lcall
jne
push
lea
push
call
scas
ljmp
pop
in
jne
add
add
out
jge
pop
movsl
aam
xchg
add
test
pop
mov
add
in
clc
pop
call
call
push
push
shr
push
or
inc
add
inc
shr
shr
sub
shl
pop
sub
shr
pop
push
lea
push
push
call
lea
xchg
pushf
xchg
lret
test
into
push
add
mov
add
into
fwait
push
out
add
mull
xchg
add
mov
add
andb
shlb
ret
in
hlt
lcall
jne
call
push
sub
pop
call
push
push
inc
sub
push
or
inc
add
dec
add
ror
lea
sub
pop
shl
pop
push
push
push
push
lea
push
push
push
push
call
add
add
mov
mov
fiadds
xchg
add
add
in
add
xchg
add
add
add
cwtl
fs
fidivrs
add
sahf
fildl
add
add
mov
add
add
add
repnz
rolb
sarl
ror
pop
push
or
add
push
lods
jne
aad
in
loopne
pushl
push
add
pop
call
push
push
lea
push
call
lea
pop
add
xchg
icebp
add
push
add
addb
add
add
addr16
xchg
cmp
lret
fadds
into
add
ficoms
cmpl
out
popl
jo
addl
jge
add
sahf
out
add
je
fistl
popa
fs
sub
pop
call
push
push
dec
push
and
add
dec
shr
sub
xor
add
add
pop
shl
ror
not
pop
push
pop
pushl
push
shr
shl
pop
call
call
push
push
add
push
or
not
add
add
sub
sub
sub
shr
rol
xor
pop
xor
add
pop
push
sub
shl
not
pop
pushl
call
push
shl
pop
call
push
push
dec
sub
add
push
or
inc
add
shr
ror
sub
inc
ror
ror
pop
add
add
lea
pop
push
add
pop
pushl
push
dec
rol
pop
call
push
push
push
lea
push
push
push
call
int
add
mov
loop
mov
add
add
add
add
mov
pusha
pushf
sahf
loopne
gs
pushf
scas
into
jnp
lea
test
add
add
test
mov
add
lcall
shrb
mov
pop
push
inc
add
push
and
add
not
xor
sub
rol
pop
not
pop
push
push
push
lea
push
push
push
push
lea
push
call
xlat
add
xchg
add
add
cmc
ret
loopne
jge
push
add
test
mov
stos
cld
add
popf
add
dec
ret
data16
testb
in
loopne
pushl
push
ror
xor
rol
pop
call
push
not
add
add
pop
call
push
push
add
sub
ror
shl
push
xor
add
shr
add
sub
not
pop
sub
ror
pop
push
shl
add
pop
pushl
call
push
lea
push
call
add
lods
add
addb
xlat
enter
hlt
pop
add
jmp
add
lock
xchg
add
xchg
int3
mov
mov
cwtl
pop
ja
jb
jle
data16
shrb
jne
or
leave
fmull
lret
push
rolb
add
iret
sub
shr
sub
shl
shl
sub
xor
pop
lea
dec
pop
push
rol
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
mov
add
jo
add
add
rol
pop
mov
add
add
fdivl
addl
call
lods
testb
icebp
mov
pop
add
movl
xchg
in
int3
add
add
add
add
lea
add
faddl
mov
add
fistpl
add
call
push
push
not
push
push
pop
add
add
sub
shr
pop
shl
shr
add
pop
push
ror
lea
pop
pushl
call
push
not
sub
sub
pop
lea
push
push
push
push
lea
push
lea
push
call
mov
stos
push
mov
out
ret
int
push
imul
add
icebp
arpl
add
imul
stc
add
mov
mov
mov
fidivl
pop
add
fiadds
sbb
sub
pop
push
push
sub
ror
shr
pop
call
push
push
rol
push
or
inc
add
add
lea
sub
xor
pop
rol
shr
sub
not
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
fs
mul
push
xchg
add
andb
testl
add
shlb
add
jmp
add
jne
push
xor
pop
call
push
pop
call
push
push
dec
push
or
not
add
add
sub
add
pop
lea
sub
pop
push
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
sti
jne
push
iret
add
mov
movsb
add
mov
int3
add
jge
mov
ljmp
in
add
loopne
mov
int
xchg
scas
jae
mov
add
add
stos
mov
nop
add
mov
rclb
in
fdivr
lcall
aam
add
push
shl
rol
pop
call
push
push
rol
lea
lea
shl
push
and
add
sub
shr
ror
dec
pop
not
pop
push
push
push
push
call
add
faddl
test
scas
insb
cmpsl
ja
mov
mov
add
add
add
shl
add
add
add
add
add
add
cmc
add
add
add
icebp
ljmp
pop
cmpsb
add
xchg
jns
leave
add
mov
lret
push
add
add
sub
pop
pushl
push
push
push
push
lea
push
call
add
mov
in
add
cmpsl
add
add
push
cmpsb
add
mov
add
add
stos
fcom
loopne
in
in
lcall
out
add
push
inc
pop
call
push
push
shr
dec
push
xor
add
rol
shl
add
shl
sub
pop
inc
sub
ror
pop
push
rol
ror
shr
dec
pop
pushl
push
lea
push
push
push
call
filds
add
xchg
ret
clc
mov
push
pushf
ljmp
xchg
add
mov
add
loop
cli
jb
cld
pusha
stos
mov
add
rolb
add
in
add
add
int3
sub
pop
call
push
push
rol
dec
push
and
add
lea
lea
sub
shr
add
dec
pop
sub
sub
dec
pop
push
push
add
shl
push
or
inc
add
add
sub
ror
pop
add
shr
rol
pop
push
lea
push
lea
push
call
xchg
add
add
mov
add
add
lea
fistpll
aam
mov
out
mov
fadds
add
shrl
out
loopne
add
mov
rclb
sub
pop
call
push
add
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
stc
cmpsb
add
mov
lahf
jmp
mov
jno
xchg
sahf
clc
add
add
scas
jns
add
add
jae
pop
mov
icebp
add
lret
sub
pop
dec
jne
call
push
push
inc
push
sub
add
dec
dec
sub
dec
dec
sub
pop
sub
shl
pop
push
lea
push
push
push
push
lea
push
push
push
call
jmp
pop
loope
add
ror
add
add
repnz
pop
add
pop
xchg
add
add
mov
in
loopne
lcall
jne
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
test
flds
pop
add
add
test
rol
add
scas
mov
add
add
add
test
add
add
add
add
add
add
popf
add
test
mov
and
add
push
not
add
pop
push
push
push
push
call
pop
mov
add
out
stc
jmp
mov
cmc
xchg
add
lea
lea
addr16
pop
loope
add
add
cmc
lahf
cwtl
add
mov
roll
pop
add
stos
xchg
mov
mov
popa
lea
lcall
sarb
push
push
sub
push
sub
add
lea
sub
xor
sub
sub
xor
not
lea
pop
inc
ror
pop
push
inc
sub
pop
pushl
call
push
add
pop
lea
push
push
not
rol
pop
push
push
push
push
push
call
call
cmpsb
cmpsb
int
add
add
jo
add
add
into
roll
out
add
add
add
add
popa
add
push
add
add
add
add
add
test
add
std
stos
jnp
push
cltd
add
mov
imul
sub
pop
push
push
sub
inc
pop
call
push
add
pop
lea
push
push
shl
push
or
not
add
sub
inc
ror
rol
pop
sub
pop
push
push
call
push
add
incb
ja
add
add
addb
sarl
pushf
add
add
add
aam
jae
loopne
test
fistps
roll
mov
add
add
add
popf
add
add
lock
add
lcall
jne
push
push
push
push
push
call
add
arpl
add
add
mov
add
push
andb
cmpb
in
xorl
mov
mov
jne
imul
stc
add
int
mov
sub
pop
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
add
add
loop
pop
lock
xchg
xchg
pusha
hlt
mov
lock
add
add
add
leave
add
mov
jne
stc
jns
loopne
test
flds
push
add
add
pop
add
mov
add
lcall
push
rol
lea
dec
sub
pop
call
push
push
xor
add
add
rol
push
sub
add
lea
sub
not
shl
add
inc
pop
xor
not
not
not
pop
push
lea
push
call
nop
fmul
add
roll
xchg
push
mov
movb
add
call
mov
add
add
int
add
mov
stos
mov
cld
add
add
scas
xchg
add
clc
lcall
jne
push
sub
add
pop
call
push
inc
xor
pop
call
push
xor
lea
pop
mov
push
lea
push
push
push
call
iret
int
add
cld
stc
add
outsl
add
xchg
incb
push
push
add
add
mov
jmp
add
out
sarl
out
add
push
add
lcall
in
mov
addl
add
pop
rcl
add
add
add
mov
in
lock
lcall
pushf
and
ljmp
in
mov
shl
inc
push
push
pop
add
inc
ror
dec
sub
xor
pop
rol
pop
push
add
dec
add
pop
pushl
push
push
push
push
push
push
push
push
call
iret
movsl
add
mov
outsl
add
add
add
add
mov
imul
add
jae
mov
iret
bound
rol
jae
in
loopne
lcall
popf
adc
add
inc
fwait
fwait
pop
push
push
push
lea
push
push
push
call
mov
mov
icebp
add
add
mov
mov
jecxz
add
add
add
xchg
lret
icebp
jmp
roll
add
out
add
add
add
lcall
add
push
push
lea
push
push
push
push
push
push
call
jp
add
iret
xorb
add
lock
int3
mov
add
lods
mov
and
mov
fadds
fs
jne
add
iret
cld
add
pop
push
add
mov
add
movsb
mov
add
add
into
mov
cmpsb
mov
loopne
sub
pop
push
push
pop
push
push
ror
pop
push
push
inc
add
shl
pop
pushl
push
push
lea
sub
push
and
add
not
sub
rol
sub
sub
dec
pop
add
pop
push
lea
push
push
push
push
call
add
add
xchg
imul
jge
addl
lcall
add
imul
add
roll
in
in
lcall
push
rol
add
add
pop
call
push
push
add
push
xor
add
shl
sub
add
pop
sub
sub
not
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
loope
add
in
jns
jbe
cmpsl
pop
add
mov
ja
add
lds
mov
into
mov
add
cmpsl
xchg
add
add
add
jl
xchg
rolb
xchg
lcall
add
xchg
add
fwait
incb
add
mov
add
add
scas
push
add
add
ljmp
pushl
call
push
push
push
push
call
add
je
in
int3
add
add
js
add
test
add
add
add
bound
add
sub
pop
push
push
xor
xor
sub
lea
pop
call
push
push
add
rol
push
sub
add
shr
add
xor
sub
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
movsl
add
add
add
imul
jno
add
mov
add
fldl
add
add
pusha
add
xchg
add
add
sub
pop
pushl
push
push
push
call
push
popa
pop
jno
add
fldcw
scas
popa
add
in
lahf
lret
add
add
fldt
add
jno
mov
movsl
scas
jge
add
add
mov
pop
fninit
add
in
hlt
lcall
cmp
add
call
push
push
lea
push
push
push
push
push
push
call
out
add
add
add
pop
lock
movsb
mov
shlb
add
je
rcl
add
imul
fildll
roll
loope
add
js
fsts
add
mov
jbe
roll
add
add
in
pushf
add
add
in
loopne
lcall
out
add
add
add
add
push
dec
pop
mov
push
rol
sub
pop
jmp
push
push
rol
lea
push
and
add
shr
sub
sub
sub
rol
inc
pop
ror
shl
pop
push
dec
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
lea
push
call
hlt
cld
add
add
rcl
jno
mov
add
push
int
add
add
clc
add
add
add
cli
aad
mov
loop
add
loope
push
mov
test
in
mov
add
jb
insb
stos
lcall
test
mov
add
add
add
sub
pop
call
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
cltd
lock
data16
push
mov
pop
add
out
imul
jp
add
add
cwtl
enter
movsb
cmpsl
add
push
insb
add
push
pop
sub
pop
call
push
push
shl
shl
push
or
inc
add
sub
sub
not
shr
pop
sub
not
dec
pop
push
xor
sub
shl
pop
pushl
push
xor
inc
add
pop
call
push
push
push
push
lea
push
push
call
rcll
fadds
push
test
add
cmpsb
mov
mov
add
push
mov
gs
add
bound
rolb
add
lock
mov
in
lods
movsb
add
add
fldl
mov
sub
pop
call
leave
push
push
push
push
push
push
call
add
add
add
jb
add
aad
add
add
mov
mov
sbbl
push
push
ja
lret
jp
add
mov
add
jmp
mov
mov
mov
rolb
add
mov
movl
add
add
std
stos
js
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
pop
gs
iret
add
push
jbe
aam
clc
insb
ret
add
add
jbe
addr16
rorb
lcall
loop
mov
pop
add
test
add
add
add
mov
sub
pop
pop
push
dec
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
jae
addb
add
xchg
arpl
add
jl
add
shll
mov
add
rclb
addb
shll
cmpsl
jae
test
add
jmp
scas
xchg
add
ret
lret
filds
rclb
push
push
push
lea
push
lea
push
push
push
call
add
imul
out
loope
add
add
add
sti
scas
add
mov
add
stc
test
add
ffreep
lods
out
mov
add
add
push
sub
dec
pop
ret
leave
push
push
push
push
lea
push
lea
push
push
call
add
scas
call
repnz
pusha
out
stos
xchg
mov
add
test
data16
add
add
add
jae
add
leave
cmpsl
add
add
add
mov
add
rolb
add
sub
pop
ret
push
push
add
not
not
pop
mov
cmpl
jne
push
push
push
push
call
add
imul
add
add
add
into
repnz
add
mov
ret
ret
xchg
loopne
cmc
int
add
add
add
pop
jne
add
add
mov
add
add
push
jl
arpl
mov
addb
xchg
sub
pop
mov
jmp
push
xor
inc
pop
mov
and
push
shr
lea
pop
xor
push
add
shr
inc
pop
xor
push
not
pop
add
xor
push
inc
ror
shl
pop
dec
sub
push
dec
add
ror
inc
pop
jmp
push
not
shr
sub
pop
sub
push
pop
pushl
pop
push
add
rol
pop
sub
cmp
jne
push
push
push
call
xchg
add
add
stc
out
mov
mov
add
add
add
outsl
mov
les
add
jb
les
add
add
movsb
add
lcall
enter
pop
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
shll
jmp
add
add
ja
add
jbe
add
movsl
int
add
insb
mov
add
add
add
and
add
mov
sub
pop
sub
push
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
fldl
add
add
add
add
rorb
mov
pop
mov
add
xorb
add
lcall
jmp
lea
rol
shl
pop
sub
push
push
lea
push
lea
push
push
push
push
lea
push
call
fdivr
stos
aad
lahf
jns
mov
jmp
xchg
add
add
add
push
data16
int
sub
pop
pushl
pop
push
push
lea
push
call
imul
mov
fwait
add
mov
pop
test
lods
add
cwtl
add
roll
mov
add
add
add
out
add
cmpsb
out
mov
add
add
add
mov
jo
movsl
in
push
jns
in
hlt
lcall
jmp
incl
add
push
push
lea
push
lea
push
push
push
call
push
add
repnz
mov
frstor
add
add
cli
mov
add
cli
movb
mov
add
push
xlat
xchg
add
push
add
pop
sub
push
inc
dec
shl
rol
pop
cmp
jne
leave
push
add
lea
pop
ret
push
lea
push
push
push
push
push
call
scas
mov
pop
add
in
add
out
add
add
imul
push
cld
mov
push
add
add
mov
lods
scas
jne
lock
scas
lahf
xchg
gs
in
add
ret
cltd
add
add
rcrl
fs
lock
iret
mov
lcall
push
shl
not
pop
mov
push
shr
not
shl
pop
add
push
add
inc
shl
pop
push
push
inc
pop
push
push
push
push
call
add
add
add
addr16
add
mov
jns
pop
fistpll
add
addr16
xchg
movsl
add
mov
enter
cmpsl
js
jmp
add
jp
add
in
hlt
lcall
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
push
push
add
add
mov
add
mov
add
add
add
fidivs
add
not
add
add
aad
add
leave
add
ja
add
sub
pop
push
push
sub
not
dec
pop
mov
push
add
pop
lea
push
add
pop
sub
push
sub
dec
not
not
pop
mov
shr
push
lea
push
call
out
pop
add
movl
add
add
sti
add
xchg
mov
mov
pusha
add
lret
push
loop
lea
test
sub
pop
add
push
add
pop
mov
push
push
push
push
push
lea
push
call
add
add
add
cmpsl
add
add
mov
leave
push
in
add
enter
add
add
xchg
lret
jmp
add
push
sub
pop
add
mov
push
push
push
push
lea
push
call
add
add
test
push
add
push
add
int3
movsl
mov
pushf
mov
aad
ret
arpl
add
arpl
add
add
add
hlt
add
mov
add
mov
cmpsb
mov
mov
mov
call
in
in
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
mov
out
jmp
add
jle
add
jo
add
xchg
add
add
add
add
push
ja
mov
repnz
jmp
ja
add
add
push
add
sub
pop
xor
mov
push
not
sub
sub
shl
pop
and
push
push
call
xchg
add
push
pop
mov
pop
jns
add
sti
add
add
add
in
add
divb
add
in
clc
pop
rol
push
push
push
push
push
push
push
push
call
add
mov
add
add
lahf
mov
add
add
out
je
cli
lods
addb
mov
add
add
xchg
push
add
pop
push
imul
add
add
arpl
add
testl
lcall
rolb
add
pop
xor
inc
push
push
push
push
push
push
push
lea
push
call
jnp
fiaddl
jl
add
in
add
cwtl
add
lds
add
pusha
push
add
add
icebp
pusha
add
add
add
mov
enter
add
add
lahf
movsl
add
add
jp
push
add
cmp
jne
add
push
shl
pop
cmp
je
push
push
push
lea
push
call
add
test
cwtl
jno
pop
ja
xchg
add
add
mov
hlt
mov
cmc
movsl
mov
bound
cmpsl
neg
scas
add
add
in
popl
add
jne
in
lock
add
push
push
call
rolb
rclb
add
add
add
lahf
jo
jl
bound
jno
fsubs
add
enter
add
scas
add
add
add
add
aam
add
jmp
out
lods
je
jle
leave
sahf
add
add
add
add
sub
pop
cmpl
jne
push
shl
shl
pop
xor
pop
push
push
lea
push
push
push
push
push
call
notb
call
cltd
stc
in
repnz
push
add
movsb
rolb
ljmp
loopne
add
mov
data16
xchg
jmp
out
ficoms
sub
pop
pop
push
push
push
lea
push
lea
push
call
imul
pop
ja
fwait
lock
add
out
hlt
mov
add
enter
add
pop
je
mov
ljmp
lods
add
incb
addb
add
or
add
in
in
lcall
push
add
not
inc
pop
pop
push
lea
push
push
push
push
push
call
add
lcall
lret
out
mov
lcall
xchg
mov
je
add
mov
lea
neg
xlat
add
fxch
enter
add
add
lret
add
loope
xchg
jbe
repnz
fiaddl
cmc
scas
add
add
in
stc
jp
in
call
xor
push
push
push
push
push
push
push
call
add
fwait
add
roll
add
fiadds
xchg
add
incb
mov
xchg
mov
add
add
cmpsb
add
add
lcall
push
dec
pop
ret
mov
push
lea
push
call
jp
add
add
out
add
jae
push
pop
cld
add
push
add
add
fwait
imul
fiadds
add
add
mov
fwait
add
jmp
jae
je
jge
add
arpl
add
push
or
loopne
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
loope
in
out
add
stc
roll
add
jl
stos
out
pop
mov
aam
leave
stos
xchg
add
andl
and
iret
clc
out
fwait
add
add
add
out
in
fdivr
lcall
mulb
push
inc
pop
pop
call
push
sub
sub
pop
push
call
push
add
pop
xor
pop
push
lea
push
push
push
push
push
push
push
call
lret
add
sarl
mov
add
faddl
add
xchg
call
mov
js
xorb
mov
add
add
mov
in
loopne
lcall
pop
push
push
push
call
add
add
mov
add
loope
js
std
add
fwait
add
jmp
jmp
xchg
mov
add
xorl
pushf
add
movb
mov
ret
jne
add
push
add
sub
pop
pop
push
rol
add
add
dec
pop
pop
push
add
dec
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
mov
test
add
add
add
add
enter
mov
movsl
aad
mov
mov
ljmp
imul
add
mov
xchg
roll
mov
add
push
add
add
sahf
add
add
fiaddl
cli
sub
pop
push
mov
push
lea
sub
pop
add
push
push
push
push
lea
push
push
lea
push
call
movsl
add
test
add
add
add
test
add
xchg
faddl
mov
test
fcmovnb
add
outsl
push
add
int
pop
lcall
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
add
stc
add
add
cmpb
push
add
stos
mov
mov
xchg
add
xchg
add
pushf
mov
leave
aam
sub
pop
push
push
push
push
push
push
push
push
call
mov
add
add
add
hlt
sahf
divl
mov
in
lds
mov
add
add
les
add
jge
addr16
cmpsb
add
sarb
loope
in
scas
add
add
fdivs
sub
pop
push
mov
push
shr
sub
sub
pop
push
pop
push
rol
add
rol
dec
pop
lea
push
push
call
xchg
orb
mov
jae
add
add
xlat
add
mov
insb
rolb
mov
jmp
mov
add
movb
xchg
add
add
jp
lahf
aad
leave
add
hlt
aam
add
add
cli
add
add
lret
outsl
add
clc
pop
sub
mov
push
push
push
push
push
push
push
push
call
mov
add
add
mov
loopne
jns
in
pusha
test
sbbb
add
jmp
mov
popa
add
ficompl
call
shll
add
aad
int
cld
rolb
add
add
rolb
sub
pop
shr
push
push
lea
push
push
push
push
push
push
push
call
xlat
add
add
add
add
fcom
mov
add
mov
add
pop
xchg
add
add
mov
add
fsub
add
fdivr
lcall
ficoml
dec
adcl
add
add
add
jecxz
jmp
xchg
bound
add
add
scas
insb
iret
into
imul
lock
add
add
in
mov
jge
in
in
add
sub
pop
mov
add
push
add
add
pop
pushl
push
add
pop
popl
mov
push
add
pop
add
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
pop
add
xchg
add
add
add
add
xchg
xchg
loope
mov
add
add
xchg
add
add
cmpsb
sub
pop
lea
push
lea
push
push
push
push
push
push
push
call
rclb
add
mov
popa
add
lret
mov
add
add
add
test
add
add
mov
add
fldl
add
xchg
popl
add
fs
add
mov
pop
add
add
xchg
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
in
push
ljmp
popf
mov
lds
add
add
test
addb
add
add
mov
add
add
test
ret
push
add
add
mov
mov
imul
jmp
add
add
add
cli
mov
ret
fdivr
lcall
rcll
xchg
xor
jmp
nopl
ljmp
lahf
mov
add
push
mov
add
mov
enter
mov
add
add
xchg
subb
xchg
xchg
add
stos
arpl
jo
add
add
in
roll
addl
loopne
pop
scas
add
add
lcall
rclb
rol
not
pop
rol
push
push
call
in
xchg
addb
filds
loopne
lea
data16
jge
pusha
add
jo
cltd
push
add
lcall
push
push
push
push
push
push
push
push
push
push
call
ja
add
cmpsl
fnstsw
lods
add
add
add
lds
stos
add
scas
lret
pop
in
lods
outsl
add
jp
mov
push
add
pop
mov
std
add
lahf
gs
mov
add
add
jnp
in
fcomps
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
bound
loopne
add
add
jae
out
repnz
add
add
jle
add
add
mov
leave
ljmp
fs
sahf
pop
xchg
add
add
test
out
xchg
add
push
negb
shr
in
fdivr
lcall
add
and
mov
fsts
push
call
fisubrs
add
push
jmp
xchg
add
add
lea
add
add
lahf
mov
pop
add
fcoml
add
add
int
je
add
fldcw
in
in
pop
nop
nop
push
lea
push
push
push
lea
push
push
push
call
add
ljmp
xchg
notb
fwait
xchg
loopne
clc
sti
imul
add
add
gs
add
add
movb
std
js
jne
sub
pop
inc
nop
push
lea
push
push
push
push
push
push
push
call
in
add
pop
in
add
mov
push
add
mov
add
cld
add
add
push
fiaddl
enter
in
add
loope
clc
add
cmpsl
jae
iret
mov
in
loopne
lcall
push
inc
shl
sub
pop
cmpb
jne
push
lea
push
call
add
jmp
std
out
add
jbe
cld
mov
mov
mov
push
int3
add
jmp
add
mov
ret
add
ja
add
call
std
stos
shr
fcmovnbe
ja
in
stos
mov
sub
pop
add
nop
push
push
lea
push
lea
push
push
lea
push
push
push
call
scas
leave
mov
loop
add
pop
add
add
iret
cmpsl
add
cltd
roll
add
mov
arpl
add
loop
add
xchg
jmp
mov
loopne
lcall
push
push
push
call
push
insb
jns
fwait
mov
mov
add
filds
add
add
fildl
flds
fcmovb
add
add
in
test
add
mov
stos
mov
imul
add
int3
add
add
push
xchg
add
sahf
add
int
jne
xlat
push
ljmp
iret
add
cmpsl
mov
out
sub
pop
cmp
je
nop
push
push
push
call
jmp
add
add
mov
scas
cli
leave
cwtl
add
gs
pusha
filds
out
std
pusha
push
xchg
pop
faddl
cltd
xchg
les
inc
push
push
push
push
lea
push
push
push
lea
push
push
push
call
js
pusha
fisttpll
xchg
jle
rolb
mov
lods
add
icebp
add
rcll
pusha
add
cltd
bound
je
cmpsb
scas
add
add
jns
add
in
mov
mov
fadds
lock
add
loopne
ffreep
add
fmulp
call
out
cmpsb
imul
in
fcomps
nop
push
push
push
call
ror
lock
jl
pop
stc
add
add
sarl
add
js
add
fldl
fistps
add
lea
add
sub
pop
cmp
jb
push
lea
push
push
call
add
pop
pop
xorl
addl
pop
add
lea
add
add
add
mov
rolb
add
add
insb
mov
popf
aam
ret
add
jle
add
sub
pop
xor
push
inc
sub
sub
pop
jmp
mov
push
push
lea
push
push
push
call
add
imul
add
add
add
fnstenv
icebp
addl
jge
loopne
js
jl
add
add
jb
ja
pop
scas
add
aam
mov
movsb
add
add
add
add
lcall
rorl
mov
jb
lea
push
push
push
lea
push
push
push
call
mov
lret
add
xlat
jle
add
add
fldl
add
mov
test
add
add
rolb
movsl
std
add
fiadds
add
add
add
add
mov
jne
add
add
scas
mov
pop
mov
add
push
shl
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
leave
andb
add
xchg
stos
mov
push
shr
add
mov
pushf
enter
add
loope
add
cwtl
add
enter
add
push
mov
faddl
xlat
sub
pop
xor
xor
push
push
push
call
jmp
add
mov
add
ret
add
jge
add
movsl
add
clc
mov
cli
imul
mov
add
addl
add
shlb
popl
add
hlt
lcall
loope
push
push
lea
push
push
push
lea
push
call
xchg
add
mov
in
xlat
cmpl
addr16
mov
xchg
stc
jnp
andl
add
fstpl
enter
sahf
out
mov
add
add
jbe
lahf
xchg
js
xchg
gs
jle
mov
rorb
add
stos
clc
add
sub
pop
xor
push
not
pop
shl
xor
push
push
lea
push
lea
push
push
call
lret
jl
xlat
jo
add
mov
fstps
add
mov
aam
movsl
add
pop
mov
add
in
in
pop
shl
push
ror
rol
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
add
test
push
pop
iret
mov
xchg
addb
add
in
lcall
lret
notb
add
xchg
add
in
int
xchg
aam
add
cmc
data16
mov
add
push
ror
lea
inc
add
pop
pop
push
push
push
push
push
call
data16
add
add
jae
pushf
push
addl
add
add
popa
add
testb
cld
stos
mov
add
add
call
shlb
add
mov
gs
aad
in
lods
hlt
ja
mov
loopne
into
jge
add
mov
out
stc
jb
xchg
push
add
add
add
lcall
push
add
rol
shr
pop
pop
push
push
push
lea
push
push
push
call
addl
imul
jne
add
add
imul
imul
loop
add
add
add
xchg
push
add
jp
add
pushf
add
sub
pop
pop
leave
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
sub
add
xchg
lcall
cld
test
nop
loop
add
add
pop
add
push
mov
rolb
add
ja
add
mov
pop
iret
add
add
rolb
mov
add
test
aam
ja
pop
jmp
mov
add
or
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
jo
add
into
add
lcall
push
add
xchg
add
push
push
add
xchg
stos
iret
add
mov
add
jno
aad
add
add
les
fcmove
jmp
repnz
imulb
in
fdivr
lcall
push
push
push
push
push
push
push
call
rolb
lret
les
add
jmp
mov
add
add
fcmove
filds
xchg
imul
in
add
xchg
mov
lcall
in
push
push
dec
dec
inc
lea
pop
push
push
dec
add
add
pop
push
push
push
inc
pop
mov
push
add
inc
add
pop
mov
push
lea
push
push
push
call
imul
mov
test
cli
roll
cli
add
mov
add
add
pop
imul
pop
test
add
fs
pop
mov
loope
in
lock
mov
test
je
push
lea
dec
pop
mov
push
push
push
push
push
lea
push
push
push
call
jge
jne
lods
add
je
out
aam
scas
push
lods
add
add
mov
push
lret
nop
add
jmp
add
add
add
jmp
push
fxam
add
add
lcall
testb
pop
push
add
push
rol
pop
mov
mov
push
shr
sub
shl
pop
mov
inc
push
lea
push
lea
push
call
fsubrs
add
hlt
xchg
add
loopne
mov
add
arpl
out
lret
add
loope
test
lods
jmp
add
fstl
add
outsl
int
add
mov
filds
fnstenv
add
mov
jns
hlt
add
lret
fildl
rorb
test
add
add
adc
push
lea
push
call
addr16
outsl
stc
mov
stc
xchg
lret
add
add
add
stos
leave
add
loopne
jp
add
neg
cmc
test
add
add
add
add
add
jp
loop
in
in
pop
test
je
mov
push
push
push
lea
push
push
push
push
call
jl
add
insb
js
push
scas
xchg
hlt
cmpsb
add
add
fisubrl
stos
add
add
std
add
mov
mov
lods
mov
add
jp
sub
pop
inc
push
push
push
push
push
lea
push
call
lret
jp
leave
out
int
pusha
mov
add
add
popf
jge
cld
add
add
les
xchg
in
add
iret
mov
add
movsl
fdivrs
add
int
in
faddl
sub
pop
cmp
je
test
jne
push
not
inc
pop
xor
push
push
push
call
add
mov
mov
in
add
add
add
lods
roll
test
add
jo
iret
jge
xchg
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
pop
clc
add
mov
jecxz
mov
jno
add
jo
mov
jnp
add
data16
clc
add
ffreep
mov
add
mov
clc
add
rcl
mov
addr16
add
out
std
xchg
add
lcall
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
insb
clc
add
jmp
movsb
add
add
add
mov
add
mov
push
add
orl
std
data16
out
cli
pop
lahf
jl
add
add
lcall
pop
arpl
add
lcall
leave
push
push
lea
push
push
lea
push
push
call
add
mov
add
stos
add
add
mov
add
add
add
ror
ja
jp
mov
pusha
lret
pop
lods
add
add
add
fists
cmc
mov
add
in
add
mov
fucomi
ror
mov
xlat
leave
cmpb
ret
xchg
jp
add
add
in
call
ret
push
lea
add
dec
add
pop
mov
inc
push
not
pop
cmp
jne
push
push
push
push
push
call
in
mov
mov
pop
add
mov
lods
lahf
fprem
popf
add
add
add
add
push
add
in
in
pop
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
add
lret
test
pop
mov
mov
cmc
mov
add
pop
mov
mov
push
push
push
call
js
add
mov
mov
push
fxch
xchg
mov
add
nop
lds
add
mov
lcall
in
test
add
mov
push
push
push
call
mov
repnz
fcoml
add
mov
add
jo
clc
mov
rcr
jo
add
mov
mov
pop
popa
lret
jecxz
add
push
add
add
lcall
movb
loopne
test
call
fs
push
push
push
call
out
add
in
lcall
popf
cld
add
add
add
lahf
lds
cmpsl
stos
add
je
lock
add
roll
out
pop
xchg
in
add
fs
cwtl
add
add
jmp
in
add
pop
clc
scas
mov
pop
add
add
mov
lods
hlt
test
in
call
push
inc
pop
test
je
push
push
call
clc
add
jns
mov
mov
add
add
add
pop
jne
pop
add
add
shlb
add
add
mov
test
pusha
add
incw
adc
add
add
add
rcr
add
add
jbe
add
into
add
test
lock
mov
insb
movl
jo
imul
xchg
popa
add
movsb
xchg
std
enter
mov
mov
hlt
pop
add
add
add
xchg
lea
loopne
test
call
out
xor
pop
jmp
xor
push
shl
rol
pop
pop
push
push
push
lea
push
call
iret
mov
add
jnp
add
jmp
arpl
add
add
test
add
mov
xlat
add
call
push
popf
lea
add
add
cld
sub
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
pop
add
push
add
gs
add
arpl
jne
rolb
enter
popl
lea
jb
mov
popa
stos
push
add
test
add
loope
rclb
jle
sub
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
loope
add
add
out
add
movl
xchg
add
into
pop
push
test
fildl
pushf
ja
add
lods
push
add
mov
ja
fldl
leave
push
push
push
lea
push
push
call
jne
aam
add
add
add
jecxz
in
add
cmc
pop
add
xchg
rolb
add
add
lcall
or
push
lea
inc
sub
dec
pop
lea
push
shr
not
add
pop
pop
pop
push
shl
pop
pop
push
push
push
call
popa
test
add
pop
add
test
rorb
mov
pop
out
add
in
jne
add
fucomp
loop
movsb
lcall
push
sub
pop
pop
leave
push
lea
push
call
xlat
mov
add
pop
icebp
push
out
popf
jnp
pusha
mov
add
add
gs
add
stos
push
mov
add
mov
mov
cmc
fldl
or
push
rol
shl
sub
pop
mov
pop
push
push
lea
push
call
fistpll
add
add
sti
xchg
add
jmp
add
add
jo
int
mov
cltd
lret
jle
xlat
jno
cmpsb
int3
xchg
add
out
xlat
imul
mov
les
add
mov
lahf
add
test
lcall
pop
push
sub
not
rol
xor
pop
pop
leave
push
push
lea
push
push
push
lea
push
call
mov
add
flds
add
cltd
add
add
scas
add
add
fsubl
add
add
add
lcall
jbe
iret
add
roll
jnp
add
mov
add
cmpsb
lods
add
add
ret
mov
jb
sub
pop
ret
xor
cmp
rorb
xor
adc
and
adc
cmp
sub
cmp
mov
cmp
xor
adc
jb
adc
add
add
or
pop
js
cmpsb
pop
dec
pop
data16
out
orb
imul
sub
sub
and
jmp
es
adc
mov
bnd
sub
jae
test
and
popl
ss
mov
test
add
ja
mov
aam
cmp
dec
ljmp
repz
imulb
adc
out
and
aas
cmp
mov
adcb
push
movsb
mov
scas
adc
nop
push
outsb
pop
mov
movsl
cmpl
pop
push
push
pop
mov
out
mov
pop
dec
div
fsub
xchg
or
cmp
xchg
or
pop
jmp
inc
adc
js
fnsave
int3
insb
daa
iret
in
and
imul
loope
icebp
cmc
add
loopne
call
dec
add
add
pop
cmp
mov
jl
cmp
aad
mov
mov
int
std
cs
inc
ja
sti
scas
repnz
sub
int3
xchg
push
dec
in
rcl
lcall
xchg
mov
cmpsl
in
inc
fstpl
pop
xor
arpl
ret
divl
jg
dec
inc
sti
add
sbb
stos
xchg
inc
mov
fwait
std
aad
movsl
push
lods
push
fsubrl
push
fadd
mov
movsb
xchg
enter
xor
xchg
push
ljmp
dec
test
test
xchg
pop
js
cmp
xchg
jns
adc
les
inc
mov
push
cmp
in
movsb
sbb
mov
push
xchg
mov
pop
es
ret
das
je
mov
test
movsl
arpl
mov
or
or
lea
sub
push
jp
mov
cmp
lods
add
mov
outsl
pop
stc
repz
mov
jle
rcrb
inc
adcl
cmp
repz
rcrb
sar
insl
xchg
nop
dec
mov
loope
dec
dec
lods
xor
sub
xchg
cmp
xchg
xchg
sbb
int3
nop
cmp
pop
out
cmp
out
push
push
push
dec
fwait
cmc
sbb
push
leave
fwait
gs
daa
pushf
lret
sub
push
dec
out
and
cmp
push
or
and
jno
push
jg
pop
cli
mov
stos
inc
icebp
nop
sub
jmp
pop
test
jnp
mov
push
das
lods
test
push
pop
mov
xchg
enter
cmp
addb
and
push
push
pop
cmp
jge
out
ss
sahf
sub
das
pop
incl
lcall
addb
push
mov
jne
out
sbb
xor
loopne
jae,pn
aas
dec
gs
adc
add
push
and
stos
xor
je
test
int3
pusha
lahf
cmp
mov
cmpb
mov
and
jge
rcr
jmp
mov
mov
daa
pop
and
into
pusha
xchg
test
sub
in
add
mov
inc
and
mov
xor
push
lret
in
out
sub
cltd
in
xor
loope
mov
or
insl
or
and
fstl
fidivrs
fwait
xor
adc
cwtl
xchg
outsb
shlb
xchg
xor
mov
adc
inc
lahf
and
xor
lret
xor
cltd
rol
jg
dec
stc
pop
aas
roll
and
bound
adc
xchg
int
je
jecxz
sub
dec
jle
iret
divl
icebp
pop
or
xchg
icebp
or
fsubs
xor
enter
cmp
push
push
lcall
insl
xor
add
mov
loopne
sbb
push
out
out
push
push
jle
jmp
jbe
sbb
mov
xor
sbb
fnsave
inc
or
ret
mov
fidivrl
jecxz
adc
sbb
mov
adc
orl
mov
out
push
jb
cmp
inc
push
daa
lods
adc
mov
outsb
out
jb
mov
pushl
jmp
je
mov
shr
negb
lahf
sbb
push
or
imul
popf
mov
jbe
pusha
pop
mov
push
sbb
fptan
rol
fcoml
sarb
movl
mov
hlt
and
xorl
into
loope
fadd
gs
jmpw
je
std
push
dec
loope
fisubs
js
xchg
pop
add
add
add
pop
cld
repnz
mov
push
fistps
test
pop
push
aad
ja
shrl
into
mov
mov
sbb
and
push
lods
lods
mov
cmp
call
out
mull
dec
adc
xor
lea
rclb
scas
pop
ss
insl
jl
rcll
sbb
and
sti
and
inc
jge
call
enter
jb
cmpsl
les
jecxz
out
jmp
movsl
mov
ja
leave
pushf
loope
std
cmovae
add
mov
xor
sub
jle,pt
xor
test
xor
dec
loopne
imul
in
and
fs
test
mov
xchg
popa
data16
dec
lods
mov
dec
loopne
dec
xchg
xchg
adc
cmp
loopne
xchg
sahf
int
sbb
loope
pushf
mov
adc
dec
xchg
inc
or
loopne
insl
pop
push
add
out
adc
popf
inc
js
inc
lcall
int3
add
dec
pop
mov
repnz
lret
xor
push
and
std
dec
inc
call
jg
mov
lahf
test
imul
lcall
inc
test
sbb
test
in
pushf
pop
xlat
addr16
imul
or
adc
or
cmp
out
test
adc
cmp
cmp
orl
lret
fcomip
lods
adc
ret
pop
idiv
or
xor
andl
loopne
jno
clc
cli
or
roll
adc
sbb
outsl
xor
add
in
push
outsl
xchg
int3
lods
insl
pop
nop
lret
sub
mov
lods
jecxz
in
sbb
push
jmp
mov
int
imul
in
jp
insl
push
iret
mov
inc
xor
clc
lods
sub
sub
mov
aas
and
cmp
xchg
cwtl
xorb
in
mov
or
sub
dec
pop
outsl
pop
and
cmp
dec
push
cmpsb
and
xchg
enter
iret
out
les
gs
hlt
sarl
or
mov
movsl
mov
in
icebp
cmp
jp
cmp
outsb
pop
mov
hlt
mov
jmp
jl
mov
cmp
nop
xor
repnz
cmc
scas
dec
and
pop
pop
sbb
add
add
jle
dec
sarb
mov
frstor
test
jb
jp
push
jbe
dec
xchg
mov
stos
test
xor
pop
fldenv
mov
jae
push
xchg
inc
add
sub
cmp
push
loop
stc
ss
les
call
xlat
pop
stos
dec
aaa
call
mov
imul
mov
mov
cmp
or
add
dec
push
add
dec
icebp
pusha
out
jl
adc
scas
outsl
sahf
nop
shll
cmp
dec
add
mov
in
or
adc
shlb
loopne
jbe
notl
sbb
mov
cmp
and
iret
mov
pushf
mov
mov
ss
mov
repz
cmp
mov
pop
sbb
jg
mov
push
cmp
leave
adc
cld
and
or
inc
mov
out
mov
sub
mov
mov
xchg
fstl
pop
roll
cltd
jae
sbb
lret
call
aad
mov
jo
lahf
xchg
mov
incb
xlat
mov
lock
insb
or
xchg
push
dec
mov
adc
es
es
adc
test
les
rorb
mov
subl
mov
testb
xchg
mov
pop
mov
popa
cmp
je
jmp
adcb
mov
jmp
and
mov
mov
adc
sbb
setns
addl
mov
popa
std
fmul
aas
cmp
sub
lods
add
and
mov
push
xor
dec
mov
out
xor
pop
cmp
mov
push
cld
mov
je
or
fdivrl
in
popf
mov
shl
jno
movsl
pop
rclb
xchg
loop
fcmovnbe
lcall
mov
add
mov
sub
push
sahf
push
sbbb
fistl
cmova
or
out
cld
lods
fsub
pop
sbb
clc
inc
test
mov
sub
test
push
shrb
or
js
push
ret
inc
or
mov
mov
cld
and
cmp
stc
insb
mov
and
stc
gs
ja
add
add
stc
test
sbb
arpl
adc
mov
pusha
mov
jmp
sub
fildll
lods
adc
ficompl
fiaddl
je
jns
out
push
ret
and
mov
pusha
push
sbb
fsubp
and
sub
push
push
rol
popa
and
mov
fisubs
ffree
cmpsl
xchg
pop
or
sbb
xchg
mov
dec
add
es
out
stc
aas
jbe
push
pop
sbb
sub
movsb
lret
fwait
mov
mov
or
pop
enter
or
xchg
xor
fistpll
mov
jmp
pop
test
inc
and
push
sbb
in
jae,pn
movsl
popa
flds
jns
adc
lcall
lahf
les
pop
daa
mov
hlt
xor
mov
test
xchg
popf
mov
sub
lret
mov
inc
mov
add
cmc
xchg
test
pop
sbb
or
xchg
adc
inc
ror
inc
add
ret
dec
pop
repz
xchg
add
dec
adc
dec
sub
cmp
sarl
dec
inc
mov
inc
and
and
shlb
push
push
lods
movsl
insl
sub
push
into
outsb
loope
mov
ret
or
pop
popf
xchg
add
mov
dec
push
adc
pop
aad
pusha
ret
cmp
dec
mov
pushw
das
xor
sub
mov
lahf
mov
imulb
xor
xchg
popf
je
cmpsb
aad
mov
mov
mov
mov
les
sub
xchg
sar
lcall
adc
mov
std
inc
mov
and
mov
sti
pop
arpl
pop
out
jp
scas
into
lock
xchg
and
cwtl
pusha
pop
shll
lcall
pop
or
movsl
cmc
jmp
add
shrl
out
mov
aad
push
mov
pop
call
xchg
stos
insb
scas
lock
pop
mov
inc
cmp
jp
push
or
incb
inc
icebp
jne
cwtl
cmp
movsb
jmp
adc
jb
sbb
loop
lds
mov
loopne
mov
fsubl
loopne
shll
adc
inc
mov
jno
cs
sahf
cmpsb
movsb
fwait
adc
dec
jb
sbb
andb
sub
fsubrs
mov
sub
lret
cmovns
enter
into
xchg
outsl
add
xor
movsl
js
dec
or
mov
push
int3
lret
push
mov
jae
xchg
jmp
out
je
faddl
flds
or
hlt
jmp
xor
imul
psrlq
repz
mov
imul
daa
aaa
jmp
xor
sbb
jp
push
sbb
shlb
clc
cmp
push
cli
ja
lcall
xor
popf
fistps
shrl
jb
mov
cmpsb
popa
or
and
xchg
dec
cmp
das
mov
and
ss
testl
stos
mov
xchg
pop
iret
mov
stc
insl
push
les
ret
inc
or
mov
pop
scas
bound
push
cmp
or
pushf
enter
jbe
add
test
xchg
daa
adc
push
mov
adc
mulb
je
test
js
cltd
cmp
and
lahf
xchg
pop
scas
xchg
push
rcrb
adc
andl
insb
pop
push
lods
lea
cltd
mov
push
or
stos
cwtl
or
jg
roll
xchg
inc
sub
fucomip
mov
xlat
js
inc
dec
sbb
es
inc
test
call
inc
int
inc
xchg
scas
ret
mov
inc
cmpsb
ljmp
sar
je
dec
in
ja
add
jns
push
iret
sbb
cmp
xchg
ret
and
das
mov
mov
mov
stos
pop
cmc
xor
add
jmp
nop
mov
ret
adc
mov
ret
fbld
cmc
ljmp
jne
jge
cld
inc
xor
mov
mov
out
pop
ja
inc
mov
push
fsubrp
lods
jb
mov
gs
and
shrb
pop
fistps
lods
scas
adc
xchg
insb
out
mov
mov
adc
icebp
push
lcall
ljmp
and
roll
adc
cmc
jns,pt
push
adc
fisubs
lock
jl
or
jbe
mov
add
xchg
add
inc
lahf
outsl
sub
in
cld
mov
stos
aad
int3
std
cmp
mov
inc
mov
sub
inc
insl
ss
push
sub
fstpt
fstpt
aad
test
sahf
xchg
xchg
movsl
push
movsl
mov
sbb
adc
pop
aas
fisubrs
and
adc
cmp
ds
push
shlb
jg
je
jle
subb
jno
or
or
push
dec
in
mov
jle
push
mov
pop
mov
dec
call
je
lahf
push
fistps
mov
dec
movsl
fnstenv
xor
or
mov
cmp
cmpsb
stos
ds
rcrl
mov
pop
idiv
sub
inc
cmc
test
aas
xchg
pusha
and
sub
dec
test
fcmovnbe
inc
inc
out
push
outsb
pop
outsl
pushw
mov
push
fwait
xchg
xor
mov
pop
es
addr16
or
cmpsb
das
loop
mov
or
pop
push
jns
and
mov
sahf
test
clc
mov
mov
subl
stc
lahf
aam
imul
push
leave
sub
ficompl
push
inc
xor
loopne
and
sub
testb
jno
sbb
cld
lock
int3
cmp
push
cmp
out
fnstsw
rcll
push
insl
sbb
ja
add
pop
adc
add
ret
imul
add
ja
add
xchg
mov
inc
out
mov
shll
jae
mov
add
cltd
pop
mov
jp
push
xchg
mov
push
test
lods
xchg
loope
fs
dec
sbb
xchg
je
subb
jmp
sub
push
and
mov
cmp
mov
stos
ds
std
cmc
stos
mov
push
lahf
cmp
xchg
adc
out
pop
or
jnp
xchg
jbe
iret
jo
add
repz
inc
loopne
add
lahf
pop
popa
jo
xchg
adc
lahf
sub
cwtl
inc
push
xchg
mov
lret
ljmp
and
insb
icebp
mov
xchg
arpl
mov
dec
push
fwait
mov
xor
test
add
jge
scas
sbb
subl
js
leave
add
adc
lock
hlt
adc
push
inc
or
icebp
xchg
push
inc
mov
mov
xor
pop
pop
arpl
loope
cmp
lock
out
dec
inc
lds
in
int
enter
or
pushf
addr16
sbb
xlat
fs
inc
psubb
ja
xor
mov
jmp
ljmp
and
nop
icebp
cmp
sub
jo
pop
mov
call
pop
orl
pusha
ljmp
add
adcb
xchg
xchg
sbb
test
orl
mov
inc
popa
or
mov
fyl2x
sub
adc
jg
adcl
in
xchg
lahf
mov
in
cmpsb
ds
cmp
mov
sbb
and
test
dec
movsb
and
mov
cmc
push
cmpsl
filds
ficoms
mov
jnp
inc
pop
ds
lods
fildl
jle
cmc
inc
xchg
int
push
pusha
push
dec
push
faddl
jmp
push
lret
cmp
mov
mov
imul
repz
testl
icebp
mov
mov
je
scas
xor
pushf
push
adc
and
xchg
dec
inc
rcll
push
or
sub
jmp
inc
fnstenv
jno
into
data16
or
imul
das
pop
push
inc
xchg
into
mov
out
enter
rcrl
fs
jle
adc
subb
mov
or
cltd
data16
xchg
inc
call
pop
cld
cmp
in
sub
cmpb
fs
fsubl
add
out
mov
lcall
adc
in
sbb
fs
or
lcall
ffree
xor
xchg
in
subb
and
mov
push
jge
das
fsts
cmc
mov
cli
jne
push
cmp
fsubrs
adc
icebp
push
adcb
push
jbe
sbb
stos
jl
std
popa
stc
xor
shrb
ljmp
sub
ja
loop
std
leave
stos
jno
pop
int
cwtl
inc
push
push
jle
lret
adc
mov
jns
mov
inc
pop
pop
mov
sbb
fidivrl
out
push
mov
xor
lret
clc
in
fcmove
adc
in
pop
ret
inc
mov
mov
lea
mov
push
add
mov
ljmp
inc
cmpsb
lods
pop
and
orl
cs
mov
xchg
rcrl
xchg
gs
jae
dec
inc
stos
addl
mov
nop
xchg
or
mov
xchg
pop
loop
sbb
jl
cmp
iret
push
test
shll
in
cmp
outsb
ret
cli
mov
lea
mov
mov
nop
sti
vprotw
and
jbe
push
or
cmpsl
into
hlt
iret
inc
adc
inc
add
mov
mov
mov
out
ljmp
daa
pcmpeqd
test
add
mov
adc
sub
nop
inc
or
jno
push
iret
aas
xor
jb
fcomp
mov
popa
imull
adc
lods
sbb
inc
push
add
js
adcb
ja
arpl
call
cli
pop
cmc
adc
xchg
xchg
test
or
fwait
dec
push
push
push
rolb
lea
lret
lods
es
inc
pop
fcompl
lahf
call
fucomi
aad
fs
xchg
push
lock
adcl
jecxz
xor
mov
jge
aaa
pushf
sub
lcall
and
pushf
pop
inc
enter
add
fs
imul
stc
lret
and
adc
inc
jo
fisubl
test
dec
jecxz
lds
lret
lret
cmp
rcl
adc
mov
sbb
xorb
lahf
mov
orl
nop
dec
and
and
push
pop
imulb
push
lods
mov
bound
hlt
push
data16
or
jle
ljmp
mov
rorl
fs
cmp
cmp
ljmp
aad
pop
xor
pop
jns
xchg
cs
inc
fsub
mov
xor
outsl
mov
pop
outsb
dec
sub
dec
lret
test
fs
push
mov
mov
lods
imul
mov
shr
out
xor
xor
add
dec
adcb
scas
sub
aaa
mov
jp
push
push
mov
or
or
pop
mov
cmpsl
loop
push
test
mov
xchg
cmp
jle
mov
mov
mov
clc
mov
sub
hlt
out
notb
loopne
jp
frstor
sbb
fcmove
and
mov
pop
inc
int
cmp
push
dec
xor
enter
aas
jl
outsl
pop
xor
xchg
fldcw
and
test
test
mov
fisubs
or
clc
mov
mov
out
mov
jp
add
fdiv
sub
and
rorl
mov
and
gs
dec
aam
xor
mov
jg
mov
pop
negb
sbb
adc
adc
inc
xchg
iret
sarb
shrl
js
insb
mov
mov
jbe
sbb
rolb
push
jo
mov
fdivl
mov
jae
in
dec
xchg
inc
pushf
into
jge
pop
mov
cmc
dec
inc
lds
adc
testl
cli
push
lods
in
mov
dec
adc
in
mov
sub
push
mov
sbb
aas
in
pop
mov
and
es
xchg
sub
lahf
sub
in
xor
aas
adcl
pop
push
sub
ljmp
adc
andnps
jmp
mov
push
ja
pop
dec
rcl
cmp
insl
sbbb
mov
jns
sbb
adc
inc
test
jns
lods
lret
mov
and
testb
lret
pusha
dec
jle
and
adc
neg
push
sub
mov
mov
sbb
in
mov
das
movsb
popa
mov
add
je
xchg
loopne
call
sub
xor
lcall
mov
mov
and
call
idivl
test
ds
stos
dec
pushf
or
sub
imul
xchg
xchg
or
aaa
mov
push
in
mov
faddl
push
pop
mov
popl
fisttps
testl
fidivl
jle
xor
jmp
outsb
leave
or
es
arpl
and
sbb
icebp
popa
lcall
and
repnz
pop
sahf
aad
pop
jae
loopne,pn
ffree
pop
sub
out
orl
mov
mov
pop
test
jbe
loopne
adc
jnp
sbb
cwtl
or
bound
orl
cmpsl
cmp
add
lret
or
daa
sub
mov
push
dec
imul
jae
dec
push
dec
shl
shrb
iret
jne
sbb
sahf
xor
sarb
xorb
sub
inc
fstp
aam
test
jo
push
out
bound
push
xchg
stc
fisubrl
cmpsb
test
leave
add
xchg
pop
sub
or
mov
mov
inc
and
std
test
xor
push
adc
nop
jno
daa
inc
das
and
loope
mov
xorb
sti
mov
and
pop
cmpsb
icebp
sbb
mov
out
arpl
add
shl
popa
in
movsb
add
stos
pushf
fisttpl
or
and
inc
xor
pop
or
push
cmovnp
lcall
inc
ret
outsb
cmp
dec
sub
iret
dec
dec
cmp
dec
pop
push
pop
and
xchg
testb
addl
mov
adc
mov
out
faddl
sbb
push
xor
repz
in
push
xchg
sbb
pop
pop
js
sub
jnp
ja
addb
jl
xor
leave
jle
fidivrl
adc
inc
mov
fs
cltd
mov
cmpsl
and
data16
dec
repz
add
adc
test
enter
jmp
jne
sbb
sbb
cmp
and
xchg
lods
and
sbb
mov
xor
dec
mov
pop
nop
rolb
mov
test
push
ret
pop
cmp
mov
mov
pushf
cmpsb
mov
hlt
call
mov
les
enter
sahf
mov
mov
ret
mov
cmp
int
inc
push
dec
or
mov
mov
mov
cs
cmp
jge
enter
jg
adc
sti
stc
fisttps
lcall
xchg
and
mov
orb
xchg
or
sbb
stos
ret
cmpsl
iret
mov
jge
arpl
sarb
xchg
push
sbb
xchg
xchg
jb
fdivrl
add
push
bound
push
adc
mov
jno
divl
pop
jne
xchg
xchg
and
cmp
jae
mov
dec
mov
stc
pop
es
stos
lock
or
imul
push
inc
jl,pt
insb
pinsrw
sbb
sbbb
ret
scas
and
adc
xor
dec
adc
sub
mov
lods
pushf
cmp
dec
out
jns
or
sbb
push
cmp
sub
in
push
jae
jmp
and
mov
popl
out
dec
ds
xor
arpl
pop
in
jns
push
ss
movsb
das
iret
push
repz
pushf
sahf
cmp
adc
dec
xor
fdiv
pop
jo
mov
xor
lret
sub
add
shlb
pop
fildl
ret
addr16
xor
scas
mov
adc
loope
sub
popf
inc
pusha
fs
insb
test
test
icebp
sahf
mov
addr16
fcompl
cmp
popf
xor
int3
test
push
mov
fstpt
xchg
loope
clc
jmp
clc
pop
lods
push
push
loop
cmp
mov
sbb
and
dec
mov
clc
cmp
out
arpl
jle
insl
cmp
loopne
dec
sti
cmp
pop
stos
mov
lods
and
je
iret
stos
push
adc
and
fdivrl
xor
dec
and
mov
gs
and
mov
pop
cmpsb
xlat
call
cmpsb
roll
sbb
test
push
and
mov
pushf
daa
movsl
adc
ljmp
jo
and
out
fwait
loopne
push
adc
sbb
pop
pop
xchg
pop
mov
fcoms
iret
push
and
movsb
or
ss
icebp
adc
cli
push
js
jmp
lods
mov
or
fmull
movsb
lods
dec
push
aas
cltd
je
push
jo
in
mov
addr16
enter
dec
xchg
mov
std
mov
adc
bound
cli
push
mov
clc
ds
sarb
mov
sub
sub
leave
jbe
mov
jae
jmp
mov
sbb
loope
dec
jge
fsubrp
push
adc
fiadds
dec
inc
and
cs
inc
dec
mov
clc
and
pop
push
add
push
cmc
inc
adc
ljmp
add
movsb
sbb
mov
out
mov
add
orb
lahf
mov
dec
cmp
in
push
in
imul
sub
stos
psllw
rorb
sbb
dec
inc
xchg
dec
xchg
loop
lods
cmp
rorb
jb
shl
pop
mov
popf
pushf
add
gs
test
insb
sbb
inc
or
jns
sub
sbbl
xor
xchg
cmpsb
lods
ficoml
and
dec
mov
pusha
movsb
mov
shlb
test
insb
xor
ljmp
cli
test
icebp
inc
add
loopne
ja
rcll
push
and
jecxz
adc
out
pusha
repz
cwtl
mov
xchg
lock
and
adcl
inc
mov
jge
sbb
cmc
jae
js
dec
cli
mov
and
sbb
inc
pop
sti
xchg
xor
fxtract
add
ja
or
addr16
sub
lds
xor
adc
pop
cmp
scas
cld
inc
cs
mov
sub
push
mov
mov
shlb
pop
cmp
in
shr
add
pop
ja
clc
lea
sub
cmpsb
jg
je
fsub
jl
inc
rol
add
test
stc
sahf
jmp
outsb
cmp
xchg
mov
xchg
jp
mov
outsb
mov
cmp
roll
mov
push
sub
pop
mov
fstps
sub
es
inc
arpl
data16
fsubl
push
ja
adc
ret
lcall
leave
pop
daa
cmpsl
arpl
pop
inc
xlat
loop
decl
jbe
inc
and
rcrl
push
leave
mov
inc
jo
outsb
sub
mov
pushf
out
jmp
xchg
push
mov
xchg
pop
or
dec
shrb
jp
xchg
jecxz
daa
fstl
fs
daa
lahf
and
cltd
xchg
jl
pop
in
adc
out
popf
mov
xor
dec
test
fnstsw
xchg
mov
xlat
insl
and
mov
pop
scas
adc
mov
mov
xchg
into
negb
xchg
ss
cmp
jge
loop
mov
pop
fcoms
mov
or
mov
js
sarb
out
aas
xor
aad
sbb
sbb
sbb
xchg
out
pop
addb
out
xor
xor
or
popf
push
xchg
fstpt
sub
adc
in
xorb
fdivrs
lahf
mov
aad
mov
sub
aas
sbb
sub
mov
pop
mov
cld
add
or
popf
mov
test
pop
cmp
push
addr16
lcall
dec
mov
jae
or
push
push
mov
and
pop
jmp
jns
push
cmp
gs
push
add
into
cmpsl
push
fistpl
sub
cmp
add
hlt
cld
pop
or
inc
enter
xchg
sbb
add
jg
jecxz
out
or
ds
xchg
stc
and
loope
ds
adc
xchg
je
mov
insb
jo
push
dec
lea
cmpsl
or
mov
in
sub
movsl
push
push
rclb
mov
frstor
cmpsl
in
mov
xor
jle
hlt
xchg
jo
pop
test
xor
mov
roll
bound
adc
push
cmpsb
xchg
cmp
jle
inc
xchg
ffreep
nop
loop
insb
aad
iret
int
roll
cmp
in
test
or
jb
push
scas
ficoml
outsl
pop
pop
mov
push
pushf
fcompl
out
push
add
or
popa
jno
sub
xor
fldln2
addr16
nop
scas
jne
insb
fcoml
fidivs
cs
and
shrl
into
loope
inc
lock
xor
into
rcll
adc
adc
cwtl
fwait
or
popa
enter
gs
ds
sbb
dec
addl
out
xchg
rolb
adc
xor
aam
jb
dec
or
mov
es
pop
cmp
push
into
fistl
cmp
test
xchg
jns
test
cltd
sbb
sahf
leave
dec
lret
sub
nop
jecxz
and
or
ficoml
cwtl
inc
aaa
scas
mov
push
mov
sbb
fwait
imul
dec
cmpsb
ret
jecxz
sbb
dec
xor
add
sbb
or
fiadds
fsts
repz
sbb
aaa
xchg
xor
jmp
aad
or
lret
lock
dec
mov
out
jbe
inc
mov
mov
lret
xor
popf
jb
dec
decb
cli
iret
xchg
pop
bound
sbb
mov
push
mul
cmp
mov
pop
xchg
and
pop
sub
push
mov
cmp
clc
push
icebp
iret
cmp
sahf
xor
push
fsubs
push
push
sahf
add
movsl
jecxz
push
add
lock
mov
orl
inc
push
adc
and
fsts
nop
sub
jno
jbe
mov
push
push
pushf
jle
and
xlat
popa
mov
aad
jg
sub
push
pushl
pop
jp
and
ljmp
pop
out
jge
call
dec
jne
repnz
xchg
imul
mov
insb
std
push
sub
push
loop
adc
cmpb
sub
lgs
jmp
jg
inc
xchg
mov
popf
jno
mov
mov
lods
loop
jle
sbb
sbb
lcall
add
push
movsb
dec
push
shrb
loopne
add
call
shll
sbb
pop
es
stc
adc
cltd
decb
or
scas
inc
cmp
stos
ficompl
sub
fs
scas
and
sub
lods
mov
ja
mov
imul
lahf
jge
insb
stc
push
cmpsl
xchg
inc
sub
addr16
iret
test
or
sub
out
out
repz
and
mov
js
and
mov
pushf
jns
xchg
cmp
adc
inc
adc
sub
scas
add
sub
shl
sarl
testb
ret
push
xor
lods
adcb
cmp
testb
dec
nop
push
cmpsl
cmp
addr16
dec
les
xor
inc
mov
enter
lods
mov
adc
ret
pop
fdivrp
xchg
xchg
xor
mov
add
lods
mov
xor
mov
mov
mov
add
jno
ficomps
cmpsl
in
in
add
jo
xor
shll
bound
mov
outsl
or
stc
jmp
loop
sub
mov
sbb
cmp
jo
adc
xorb
xchg
pop
pushf
out
fld
out
and
add
and
clc
fisttpl
cld
push
and
clc
mov
push
lret
ljmp
xchg
lea
out
jmp
lret
in
mov
inc
insl
mov
sub
scas
jne,pn
add
divb
repnz
out
push
jnp
imul
sbb
cwtl
lds
add
or
outsl
mov
lods
pop
mov
outsl
pop
inc
push
mov
pusha
jmp
add
inc
aaa
sub
out
addr16
xlat
push
in
sbb
mov
mov
cmpsl
ds
jne
dec
movl
pop
pop
sub
or
jmp
std
lods
push
xchg
pop
lds
enter
jg
and
enter
sub
dec
sbb
cld
or
arpl
dec
mov
loopne
adc
dec
adc
ljmp
cmpsb
test
cmpsb
xchg
mov
xchg
lret
pop
ret
fcom
xor
fcoml
divb
push
pusha
sbb
adc
addr16
add
loopne
inc
ret
pop
ja
push
jecxz
mov
or
rcll
sbb
mov
xor
ret
xchg
cmp
rol
dec
js
jnp
out
adc
adc
lret
and
mov
cmpsb
in
xor
jo
push
fwait
lcall
sub
mov
inc
mov
mov
or
addr16
test
insl
arpl
mov
fsubrl
stos
aam
imul
scas
mov
out
hlt
adc
int
mov
mov
add
stos
rcl
push
dec
in
sarl
aad
in
sub
in
add
ja
xor
mov
or
push
cmp
ds
fsub
mov
vpmullw
push
inc
mov
je
fwait
mov
add
adc
inc
pop
push
call
xchg
or
sbb
xchg
ret
movsb
mov
mov
movsb
les
jle
sbb
xchg
out
data16
pop
insl
pop
xor
xchg
xor
sub
ret
out
notl
fidivrl
push
mov
cmp
ds
ret
cwtl
cwtl
xchg
cmp
test
cwtl
movsl
ret
mov
repnz
stos
jns
ss
pop
rorl
inc
fstpt
push
fsubrl
lock
pop
jge
xchg
and
out
dec
push
popa
es
sub
icebp
clc
and
lahf
inc
enter
ja
int3
into
pop
clc
jb
sahf
inc
cltd
mov
insb
data16
imul
rorb
jnp
add
push
bound
jb
icebp
ljmp
push
in
jno
mov
push
pop
stc
clc
and
lods
jnp
test
rorb
test
xchg
fdivl
cmp
mov
je
jle
push
inc
and
fmulp
mov
cmpsb
icebp
mov
xchg
std
xor
lret
sbb
in
push
adc
clc
xor
fcompl
add
add
out
mov
dec
testl
and
or
jl
xor
in
scas
inc
clc
cmp
mov
insl
mov
in
imul
push
xchg
ss
lea
lret
push
sub
fiadds
ret
nop
push
gs
aaa
iret
pusha
es
mov
sarb
call
push
sahf
mov
mov
loopne
icebp
sahf
ss
pop
cmp
cmpsb
ja
sarb
mov
xor
xor
jae
xchg
into
into
mov
jmp
or
jle
jmp
lahf
lcall
xor
and
jnp
jmp
mov
scas
aaa
xlat
leave
xor
xchg
mov
movsb
fwait
push
decb
and
inc
jb
ljmp
push
xchg
imul
rorl
pop
lret
mov
ret
ffreep
ret
mov
jb
lcall
dec
test
arpl
ret
test
imulb
hlt
repnz
dec
adc
in
lret
addb
rolb
stc
adc
pop
mov
hlt
fdivrs
in
bound
hlt
les
and
add
ss
mov
xor
bound
cld
adc
orb
shl
xor
outsl
clc
stos
jmp
jns
sbb
pop
stc
sub
cmc
sbb
in
addr16
jl
jmp
cmpsb
repnz
adc
xor
scas
adc
cld
test
popa
loopne
in
out
in
je
test
xorb
sbb
push
add
mov
add
pop
xchg
inc
pushf
shlb
icebp
add
jnp
lcall
jl
pop
mov
outsb
dec
int3
inc
cmp
icebp
lret
rcl
lret
adcb
dec
push
cmp
jno
popf
jnp
jmp
movsl
add
xchg
lock
adc
fidivrl
mov
pop
and
mov
jge
mov
adc
mov
sub
cli
mov
fnstenv
cmp
popf
mov
cwtl
in
add
xor
cmp
pusha
into
in
subl
pop
shl
mov
repz
fldcw
add
ret
dec
cmp
shll
stc
loopne
xor
mov
adcl
xchg
lcall
call
inc
imul
pop
cld
inc
pop
cmp
sub
mov
inc
add
adc
les
adc
mov
sbbb
sbb
inc
adcb
mov
incl
int3
mulb
ljmp
mov
mov
xchg
or
arpl
lcall
mov
sbb
fiadds
push
and
sbb
repz
jno
fnstsw
ljmp
mov
sbb
lret
and
xchg
loopne
in
jp
fdivs
fisttpl
pop
daa
push
push
xor
jb
je
inc
fistpll
pop
push
fld
fnstenv
aaa
int
shlb
xchg
dec
enter
adc
jg
sub
mov
inc
mov
push
dec
mov
dec
push
mov
daa
xchg
test
add
cmpsb
hlt
sbb
push
pop
adc
sub
xchg
jo
int
xchg
xlat
jno
pop
mov
push
pop
xor
sub
push
scas
mov
popa
outsb
jne
mov
push
popf
xchg
ljmp
sub
mov
dec
push
jle
sbb
dec
jg
sti
shl
xchg
mov
popf
insb
popf
cwtl
ds
mov
adc
sbb
insb
adcl
mov
adc
and
adc
sub
fcmovu
push
imul
sub
xor
addr16
cltd
icebp
add
mov
add
mov
inc
out
adc
dec
fcomps
jmp
cvtpi2ps
mov
mov
lret
int3
mov
jg
mov
ret
mov
aaa
and
sub
jle
out
and
xchg
stos
cltd
arpl
inc
cwtl
rcl
sub
rcl
mov
mov
mov
lret
shlb
fbstp
inc
push
lea
out
jo
stos
xchg
enter
scas
mov
fisttpl
or
incl
stc
lcall
push
or
jmp
push
pushf
in
cli
mov
dec
and
js
and
int
in
sub
sarb
or
pop
ret
xchg
push
inc
cmpb
adc
sbb
lret
adc
sbb
daa
xor
mov
jle
mov
push
cmp
iret
mov
jl
pop
hlt
mov
push
std
mov
or
jb
cmp
dec
jl
cli
repnz
jge
movsl
mov
ret
mov
scas
iret
mov
aad
push
mov
xchg
sub
push
add
in
ljmp
lahf
dec
cld
inc
xlat
mov
hlt
notl
mov
loopne
dec
sub
sbb
lods
dec
cli
popa
shll
jne
aad
dec
stos
mov
lahf
sbb
xor
ds
out
decl
outsb
ret
inc
sbbb
inc
mov
nop
mov
cmc
adc
insb
rolb
insl
shlb
jg
jb
sbb
push
or
out
popa
adcl
xchg
je
out
pop
aaa
xor
shll
cmpsl
inc
sbb
xchg
sub
cltd
cmpsl
cs
std
leave
sub
xchg
sahf
ljmp
orl
ret
jp,pn
mov
data16
pop
inc
je
loop
or
in
fwait
xlat
mov
inc
dec
xor
ret
cs
inc
pop
daa
lds
std
xorl
xchg
fcmovnb
dec
inc
jmp
mov
add
sbb
stc
scas
jns
stos
call
std
ds
fs
pop
out
pop
imul
inc
push
outsb
cmc
sbb
lret
mov
xchg
cs
or
pop
lahf
je
pop
add
push
lcall
inc
push
adc
xlat
leave
ficoms
lock
adc
daa
fscale
xor
add
sahf
pop
bnd
jmp
imul
cmp
push
fsubl
and
test
xchg
cmpsl
push
sahf
add
mov
mov
rol
push
pop
xchg
dec
mov
imul
add
imul
cld
in
mov
loop
adc
jo
leave
movsb
cwtl
enter
sbbb
xorb
cmc
jle
cmp
jg
dec
js
mov
inc
xchg
jmp
push
push
mov
and
out
xchg
je
pop
into
shlb
jecxz
xor
mov
repz
adc
pop
pop
repnz
sub
add
jg
es
inc
adc
pushf
cmpsl
sarb
push
cmpsb
mov
adc
jne
inc
push
insl
jge
cmp
pop
aas
adc
movsb
push
or
loope
shrl
pop
out
inc
jge
ljmp
dec
shlb
sub
fimull
lret
seto
test
jp
mov
and
mov
insb
dec
inc
cmc
inc
or
adc
hlt
call
xor
dec
out
jg
fcmove
sahf
adc
push
add
jo
mov
adc
ljmp
repz
or
ficompl
jmp
add
pop
pop
loopne
movsl
es
arpl
mov
sub
mov
push
cmp
scas
mov
sub
pop
out
add
aas
in
movsl
mov
jae
jno
je
or
into
cmp
psrld
push
sti
xchg
and
insl
cltd
outsb
sbbb
sbb
ficoml
out
and
mov
test
das
xor
cmp
jle
sub
dec
ljmp
xor
imul
adc
clc
std
xor
inc
mov
cmp
imul
cmp
add
call
mulb
cltd
in
es
mov
mov
add
cli
fisubl
leave
jns
stos
in
jmp
negl
mov
sbb
jp
xor
or
pop
mov
mov
mov
call
popf
fwait
cmp
mov
dec
or
jb
stc
ficoml
mov
aas
xchg
loopne
push
pop
mov
stos
and
push
mov
mov
push
pusha
je
sub
daa
jmp
push
scas
in
daa
mov
dec
sbb
pop
pushf
push
mov
push
fstp
hlt
push
jnp
mov
lea
adc
xchg
loope
cmp
inc
jge
ss
sub
pop
pop
les
imul
aas
xor
mov
xor
jmp
sub
outsb
std
fidivs
mov
outsl
call
mov
in
cmp
xlat
daa
xchg
sti
movl
push
in
out
sub
in
mov
sahf
mov
push
dec
decb
insb
fsubrl
pop
mov
inc
mov
cmpsb
sti
sub
std
ljmp
shrl
mov
adc
jne
aam
clc
push
jmp
dec
inc
ret
xchg
and
ljmp
mov
neg
mov
ret
or
dec
test
sar
sub
add
cld
insb
mov
jle
shrb
aaa
xor
int
add
push
loopne
mov
daa
jl
inc
push
push
push
or
insl
adc
sub
or
cltd
push
inc
shll
js
and
pop
out
dec
cmp
inc
pop
mov
lret
jb
fistpll
xchg
add
inc
mov
mov
fcomi
mov
sub
mov
leave
mov
imulb
xor
adc
sub
inc
xchg
jb
ja
and
insb
push
mov
testb
stos
les
iret
out
dec
mov
ljmp
mov
push
orps
int
adc
pop
aaa
cmp
adc
dec
jge
jge
jp
and
sbb
stos
or
scas
sub
bound
arpl
lea
in
loopne
adc
cmc
xlat
sbbl
outsb
leave
add
dec
jl
jns
subb
aaa
push
out
lret
out
in
adc
dec
push
mov
or
ljmp
push
xor
xor
push
pop
adc
inc
stos
out
xchg
mov
pop
and
mov
push
popa
int3
pop
rcl
inc
jle
cld
push
call
std
pop
pop
push
pop
mov
rcll
pop
mov
repnz
loopne
pushf
out
imul
and
dec
inc
mov
pop
pop
pop
aas
test
repnz
xor
cmp
jns
mov
mov
jp
int3
sahf
test
xchg
imul
gs
or
mov
adc
mov
inc
jg
mov
clc
test
mov
aaa
push
lcall
add
out
jg
pop
clc
pop
mov
in
mov
xor
pushf
and
js
js
dec
xchg
mov
mov
mov
add
popf
outsl
fidivs
dec
cmp
sahf
gs
out
popa
repz
mov
sbbl
push
aam
jae
xchg
push
mov
mov
pop
cltd
daa
nop
mov
es
cmp
xor
sbb
aad
xchg
dec
mov
or
mov
dec
pop
les
stc
nop
jbe
pop
xchg
lahf
jge
popa
jg
dec
fnstcw
mov
fisubrl
push
push
and
add
ret
mov
rcll
insl
fwait
es
outsb
mov
jno
lea
inc
mov
outsl
xchg
jmp
shlb
daa
xchg
sub
leave
cwtl
jns
lret
pop
adc
cmp
lods
sahf
scas
push
pop
inc
mov
aad
xchg
jno
into
xchg
and
sbb
in
xor
into
in
dec
sahf
in
test
lds
imull
loope
inc
mov
enter
negb
pop
fwait
pop
cltd
nop
inc
dec
dec
xor
dec
mov
mov
push
or
call
and
push
inc
in
fistpl
sub
mov
sub
mov
dec
out
push
into
inc
pusha
cmp
cmpsl
jp
cmp
push
lret
or
popa
push
cmp
cmp
sub
std
xchg
in
insl
test
push
pop
push
out
mov
test
adc
xchg
je
mov
jecxz
dec
sbb
dec
cmp
mov
popf
mov
mov
sbb
cmp
or
xchg
jg
test
push
test
push
test
xchg
movsl
loop
lods
repz
cmp
jg
xchg
push
test
push
cli
xchg
mov
fcmovbe
mov
call
movsl
pop
and
mov
testb
jle
dec
fs
xor
and
sub
pop
sbb
sbb
outsb
adcl
mov
cmpsb
sbb
test
mov
or
push
rdtsc
mov
jb
cmp
cltd
call
adc
outsb
dec
cmp
stos
push
xchg
test
out
insb
cmp
pop
rcrl
fimuls
mov
mov
adc
outsl
mov
adc
leave
adc
mov
mov
lcall
mov
ds
sbb
xor
mov
inc
pop
or
aas
cmp
add
add
repnz
cli
aad
lods
int
cmp
xchg
xor
sbb
imul
dec
mov
sbb
sub
out
sub
stos
and
es
mov
js
insb
mov
shl
and
inc
xchg
sbb
sahf
mov
jb
jo
add
add
into
insl
aas
xor
jne
inc
or
dec
data16
sbb
sbb
out
jno
jns
mov
out
incl
fsts
daa
outsb
add
dec
div
lods
mov
sahf
mov
imul
insb
push
outsl
lock
inc
mov
movsl
xor
xchg
add
add
jb
jg
or
and
roll
movsl
pop
cs
mull
fprem1
and
es
jb
in
mov
and
dec
or
mov
adc
jo
or
insl
fisubrl
pop
push
popa
addr16
shl
sbb
inc
lea
fmul
adc
jne
test
push
idivl
cmp
test
in
adc
mov
pop
std
cld
loop
into
les
mov
lds
sti
movsb
sbb
pop
cmpsb
mov
mov
jnp
scas
pop
les
or
add
xchg
xlat
cmp
and
std
fcmovnbe
inc
rorb
adc
test
in
pop
add
cld
inc
pop
stos
push
and
jge
mov
mov
std
and
sti
adc
mov
imul
pushf
pop
pop
jbe
in
xor
mov
add
cmp
xor
xlat
fnsave
sub
xchg
mov
cmpsb
movsl
jle
xchg
iret
sbb
insl
mov
or
mov
leave
ficoms
or
es
inc
adc
rorb
movsb
sbb
mov
repnz
sbb
xchg
push
cli
in
xchg
push
and
iret
pop
or
xor
enter
insl
cmp
daa
enter
rolb
mov
xor
mov
push
sub
xor
lret
lret
fld
inc
xor
jecxz
fnstcw
cmp
mov
cpuid
pop
and
aam
and
xchg
and
mov
mov
sbbl
cwtl
aam
in
sub
loop
push
pop
xchg
les
adc
dec
push
or
sbb
lret
xor
aas
inc
popf
sub
lock
jnp
aad
loop
mov
int
dec
scas
dec
stos
sbb
enter
arpl
test
or
stc
xchg
dec
xor
les
jbe
inc
loopne
call
jl
fdivrs
aaa
xor
rol
mov
lock
dec
imulb
xor
scas
mov
mov
daa
fildl
mov
jg
cmp
dec
or
js
ror
in
jle
or
xor
divl
push
push
mov
jle
mov
xchg
mov
mov
push
inc
sbb
xchg
fists
mov
pop
pop
mov
xor
cmp
cli
fdivrp
and
and
fildl
iret
movl
push
repz
es
mov
mov
cmp
ret
jo
sub
hlt
sub
push
sbb
inc
add
sbbb
mov
pop
leave
aam
cmpsb
in
push
test
add
jo
dec
mov
inc
call
rcrb
cli
nop
mov
jbe
repz
or
in
mov
cs
das
or
xchg
mov
popf
add
mov
mov
sub
insb
pop
jp
push
lea
xchg
xchg
mov
fwait
xchg
cltd
push
adc
lret
jge
xlat
pop
and
mov
mov
sbb
sub
shlb
inc
inc
or
imul
xor
das
jecxz
pop
ss
xchg
add
jge
or
push
pop
cwtl
dec
jne
mov
aaa
lret
sub
dec
cmovg
jno
add
in
shrb
lcall
in
rcll
lret
sahf
mov
in
push
lock
mov
lahf
rorl
sub
loop
es
pop
pop
jmp
xchg
rorb
addr16
mov
sti
rcll
fisubrs
mov
orb
cli
shlb
inc
xchg
daa
pop
xlat
sbb
sar
mov
mov
xor
sahf
adc
and
fwait
push
cld
mov
mov
popa
mov
cltd
xor
lahf
outsl
fsts
aad
int3
in
scas
dec
das
sbbb
imul
or
test
mov
pusha
out
mov
add
pop
dec
out
scas
fs
mov
sub
lret
xorb
aaa
push
xchg
add
je
cmpsl
int3
fisttpll
sahf
call
movsl
xchg
into
mov
lods
sbb
popf
mov
inc
inc
aaa
mov
fnstenv
and
sar
cmp
inc
cmpsb
aas
adc
nop
mov
cmp
test
and
imul
movsl
arpl
adc
stos
pop
xchg
mov
cmp
jl
mov
pop
add
shll
mov
pop
sub
xlat
clc
daa
icebp
pop
cmp
clts
shll
lahf
arpl
js
jno
push
sahf
mov
lcall
test
insl
aad
sbbl
fcomps
icebp
or
adc
sub
scas
ror
jne
inc
lret
sbb
mov
lds
pop
outsl
test
mov
mov
bound
mov
jnp
fwait
and
stos
popl
xor
out
sub
ret
fistps
rolb
les
icebp
cmp
repnz
push
sbb
push
rcrb
push
jp
scas
xchg
mov
cmp
stos
je
mov
addr16
out
cld
add
mov
add
icebp
ds
std
cmpsl
mov
mov
lods
fiadds
cmp
jno
lahf
std
sub
pop
pop
xchg
fldl
out
sahf
int
mov
mov
repz
jecxz
pop
int
int3
stos
out
repnz
subb
mov
es
cld
lods
add
in
or
insl
clc
xchg
cmpb
mov
ror
sbb
sub
jmp
jne
pop
lock
test
inc
mov
cltd
lock
xor
jbe
lret
addr16
adc
xor
mov
mov
je
jne
or
cltd
std
and
mov
mov
push
or
test
test
fsubs
cmp
and
cmpb
push
cwtl
dec
cli
or
lahf
sbbl
js
pop
lret
addr16
sbb
inc
aad
cmp
pop
or
add
repz
xor
push
sub
scas
cmp
push
cld
jbe
pop
andnps
add
loopne
mov
pop
dec
stos
fdivs
push
cwtl
mov
dec
xor
cmpb
mov
insb
pop
add
lods
idiv
cld
xor
jp
sbb
das
dec
imul
les
xchg
adc
push
mov
and
jno
ss
in
fistpl
call
mov
test
sub
sarb
dec
insl
scas
ljmp
pop
dec
xor
sbb
push
lods
mov
mov
jnp
or
test
add
jno
lahf
mov
fisubrs
mov
test
mov
push
push
js
mov
dec
or
cltd
sub
loope
sbb
es
add
stos
xor
mov
lret
and
mov
scas
ljmp
iret
sbb
shl
or
pusha
out
ret
jnp
add
dec
push
mov
bound
test
dec
mov
shl
lods
push
enter
addr16
and
sbb
lcall
mov
xor
mov
test
adc
fadds
inc
mov
jp
pop
mov
stos
xor
add
int
flds
out
movsb
leave
xor
idivl
lds
fwait
xchg
jp
pusha
rclb
dec
inc
cs
sahf
jmp
rcrb
insl
stos
mov
clc
inc
sub
mov
mov
jb
adc
or
pop
inc
in
scas
enter
rol
mov
sub
inc
fdivrs
arpl
push
test
pusha
xchg
hlt
sub
jo
cli
cmpsb
int3
inc
jb
cmpsl
sbb
arpl
mov
sub
or
test
xor
shrb
pop
inc
out
mov
movl
xchg
retw
in
stos
enter
xor
imul
cmp
std
rcrb
pop
add
push
cwtl
sub
add
cmp
jle
push
xchg
clc
sbb
add
mov
mov
adc
push
xor
mov
popa
outsl
test
xor
cmc
sti
cmp
imull
mov
repz
mov
inc
test
data16
fimuls
mov
xchg
jmp
xchg
cld
xchg
jmp
cld
add
adc
lods
and
add
je
cmp
or
hlt
fs
pop
int3
xlat
mov
sbb
mov
es
add
test
out
xchg
push
es
lret
mov
sbb
test
ficomps
scas
ss
and
pop
xchg
add
test
popf
cmp
shll
add
push
lret
gs
push
sub
fstpt
pushl
fwait
cmp
mov
int3
fimull
and
push
xchg
imul
subl
dec
sub
mov
out
repnz
push
lret
pop
and
mov
inc
fucom
inc
clc
mov
xorl
pop
xor
adc
push
stc
xchg
dec
jne,pn
sbb
shrl
je
xchg
in
iret
sbb
dec
arpl
push
int3
inc
stc
int3
adc
adc
mov
cmp
idivl
jge
push
gs
mov
lods
loopne
or
test
dec
enter
aad
dec
or
sub
inc
xchg
popf
cmc
fisttpl
icebp
sub
xchg
mov
out
inc
xor
cmp
lds
cmp
xor
mov
fildll
sub
jns
ss
jo
lcall
add
mov
mov
and
pop
divl
clc
aam
cld
test
sub
lcall
dec
adc
div
mov
adc
xchg
pop
push
push
inc
jle
popa
or
push
shlb
aam
push
push
popa
gs
cmpsl
cs
sub
data16
sub
push
xchg
push
outsb
push
mov
lsl
pushf
cltd
scas
mov
cmc
mov
mov
push
sar
in
popf
or
loope
or
cmp
jno
mov
sub
rcrl
iret
addr16
lock
pop
outsb
jp
push
push
push
push
jbe
out
or
inc
cmp
push
xchg
jne
add
das
xchg
movsb
lds
pop
push
in
mov
push
add
fwait
testb
cmp
sbb
lock
arpl
and
jmp
test
mov
push
test
lret
out
push
sahf
adc
pop
sbb
jge
imul
push
popf
xchg
pop
popa
push
mov
push
shll
cmp
and
add
cmpsl
ret
jp
and
aad
xlat
sahf
pop
popf
jnp
icebp
mov
mov
jg
push
shr
cltd
pusha
dec
fcompl
mov
push
fsts
iret
pop
xchg
in
lods
dec
test
xchg
fucom
cmpsl
inc
sbb
push
lahf
jnp
cmc
adc
jge
dec
mov
mov
mov
sbb
pusha
fildll
ljmp
subb
add
mov
lret
mov
cmp
push
dec
fistl
nop
imul
or
mov
mov
das
xor
or
cmpsb
or
insl
mov
xchg
inc
inc
sub
ljmp
rcll
add
inc
repnz
aas
jne
pop
adc
in
repnz
cmp
scas
jp
mov
sbb
bswap
aas
xor
fisttpll
repnz
sub
call
ret
je
pushf
xor
test
xchg
or
ja
xchg
test
mov
cmp
inc
jle
lods
jne
push
and
fs
insl
sahf
in
mov
lea
push
cmc
pop
dec
xor
xchg
decb
cmpsb
mov
fstps
fisubl
sub
sub
cli
mov
int3
iret
jecxz
rcrb
imul
cmp
jge
test
sbb
mov
jl
int
push
stos
push
adc
mov
or
inc
decb
clc
sbb
ficoml
icebp
stos
dec
push
and
add
clc
mov
enter
inc
loope
stos
xor
insb
mov
in
pop
xor
dec
sarb
and
into
jle
daa
test
jns
imull
cld
mov
jnp
cmpsb
pop
add
add
roll
mov
ss
lret
inc
test
bound
xchg
aam
and
insb
ret
jp
jp
mov
int
imul
mov
cs
scas
add
cli
cwtl
cmp
mov
iret
pop
dec
cmc
popf
jns
pop
mov
push
test
rolb
movsb
jle
movsl
push
or
mov
pop
inc
sub
stos
jne
aas
mov
xlat
sub
stos
mov
adc
fidivs
lock
out
imul
popa
jne
cmp
testl
outsb
fcoml
adc
repnz
js
jbe
jno
mov
cltd
mov
arpl
neg
mov
aam
mov
fs
sub
adc
int
mov
dec
shr
out
ss
shrb
cmpsl
sub
bound
sub
and
sbb
stc
mov
push
iret
jmp
rcl
lcall
pop
fs
jb
inc
andb
xchg
dec
xchg
outsl
and
xor
mov
imul
xchg
testb
mov
je
incb
sbb
pop
cs
fcmovu
jne
scas
sub
ja
js
pushf
pop
sub
cmpsb
pop
mov
adc
mov
sahf
xorb
imul
stos
and
and
je
jno
jbe
cmpsb
inc
mov
imul
xor
cmc
pop
or
lock
mov
lret
ljmp
lds
add
xchg
and
mov
mov
enter
xlat
push
mov
mov
lahf
mov
add
outsb
jae
scas
xchg
lock
in
mov
pushf
jl
cmp
mov
cmp
insb
shll
sarb
ret
xchg
aaa
mov
xchg
pop
pop
dec
int3
test
push
leave
adcb
fldt
or
adc
ja
stos
jne
insb
scas
in
sbb
mov
lret
pop
inc
xor
pop
sarl
push
pushf
inc
push
add
dec
jbe
cmp
cmpsl
dec
jnp
outsb
or
cmp
inc
mov
xor
or
nop
mov
xorl
fcmovnu
test
cmp
sub
xacquire
xor
push
ja
shlb
pop
dec
popa
or
sub
jb
aam
mov
cmp
insb
cmovbe
repnz
fistps
mov
pop
das
cld
ds
in
adc
fimuls
pop
or
sub
sbb
insb
repz
repnz
mov
int3
ret
jge
loop
sbb
rolb
adc
add
mov
cmp
sub
mov
fiadds
sbb
in
cli
jo
cld
xor
and
lret
fnclex
mov
in
and
adc
icebp
push
lods
fwait
das
lock
sbb
arpl
aad
inc
jecxz
loope
int3
add
enter
mov
cld
test
aaa
xchg
lcall
dec
insb
insl
into
add
push
xchg
lods
xchg
es
inc
jb
sub
aas
xchg
popa
mov
fsubs
ljmp
jno
pop
sub
adc
lock
popf
mov
outsb
sub
je
orl
repz
mov
mov
jle
aaa
ret
rcr
adcb
ds
mov
ds
add
int3
cltd
scas
jns
or
xlat
push
push
in
inc
inc
daa
lds
call
push
xor
mov
jbe
push
stos
adc
xor
iret
cmp
cmpsb
addr16
lcall
mov
outsb
les
outsb
pop
lahf
add
and
dec
jae
jns
or
mov
and
mov
outsb
and
mov
insl
sbb
pop
adc
mov
mov
push
add
loope
jmp
pop
scas
movb
mov
lahf
fiaddl
sbb
fscale
and
mov
ljmp
lods
dec
mov
adc
dec
je
data16
scas
mov
xchg
mov
and
int
mov
push
push
jb
add
xor
mov
sti
mov
add
outsb
push
inc
sub
or
and
xchg
push
mov
adc
xchg
push
adc
jno
fists
push
add
cmp
ds
inc
stc
adc
filds
mov
xchg
sarb
mov
in
mov
cmc
adc
mov
outsl
std
xor
sahf
adc
add
sarb
lcall
sbb
xor
pushf
or
inc
mov
ret
out
ds
inc
or
cmpsb
dec
jb
loope
or
pop
hlt
in
jge
mov
xor
popa
data16
or
xchg
cmp
or
imul
or
sbb
cwtl
repnz
shlb
aam
sub
pop
ret
lods
ret
insl
test
xor
cmp
add
adc
fbstp
sub
stos
repz
enter
fstps
and
adc
rol
cltd
mov
add
es
xchg
test
lret
or
adc
loopne
popa
imull
push
push
test
fidivl
je
addr16
sub
cld
std
leave
out
add
mov
sarl
push
adc
mov
sbb
aas
push
pop
loop
push
fistl
jecxz
fdivr
add
pushf
vpsraw
jmp
jg
xor
jo
jle
pop
fs
aas
lea
lds
repnz
adc
sbb
or
ficoml
and
lock
fnstsw
enter
xor
jl
mov
ror
pop
jg
es
aad
xor
ret
ds
in
cmp
xchg
jb
adc
jl
adc
int
int3
pop
dec
pop
jecxz
sti
pop
and
adc
cld
cmp
cmpsl
js
or
imul
fwait
jbe
dec
int
cmpb
pop
and
xor
and
push
xchg
sbb
sbb
test
test
push
or
repz
pushf
mov
dec
mov
popf
popl
lretw
sub
aaa
test
stos
cwtl
inc
idiv
push
in
sub
fcomp
xchg
cmpsb
sbb
setbe
pmullw
dec
dec
out
mov
mov
in
pop
mov
or
jecxz
sbb
shrb
or
mov
inc
xor
inc
push
jecxz
inc
xor
addr16
jge
mov
add
jmp
stc
into
dec
and
inc
jle
adc
cmpb
cmc
cmpsl
ja
je
jo
or
lcall
mov
std
test
adc
xor
mov
shl
adc
jl
or
test
loop
nop
ficompl
xchg
xor
mov
fadds
mov
enter
xor
push
jg
sti
push
jo
fsubs
stos
insb
and
dec
jne
cmp
ja
or
jmp
xchg
xchg
std
int3
jmp
aaa
divl
dec
mov
fxch
add
adc
mov
testl
push
adc
je
jecxz
les
mov
or
les
iret
stos
mov
adc
orl
insl
adc
xchg
ljmp
mov
add
data16
mov
inc
sbb
pop
clc
or
je
ds
sub
bswap
imul
nop
mov
adc
jns
std
push
xor
sub
lahf
xor
loope
mov
push
dec
push
cli
mov
aam
int3
push
mov
stos
scas
addl
jp
leave
scas
sarl
mov
pop
add
int3
fldt
cmp
ljmp
shll
or
cmp
in
cmp
loop
cmp
outsl
jno
sub
insl
pop
add
push
or
push
movsb
ja
addl
xlat
imul
movsb
call
mov
ficomps
cltd
xchg
fistpll
aas
outsb
sbbb
xor
jge
add
mov
dec
cmp
add
and
jecxz
sub
aaa
mov
in
sbb
mov
adc
cmp
inc
pushl
mov
cs
mov
nop
sahf
xchg
in
add
pop
jne
xchg
or
cmp
fsts
pushf
fildll
aad
and
arpl
jmp
insb
je
stos
pushf
jo
cmpsl
insb
mov
mov
xor
adcl
test
sub
fbstp
dec
in
mov
xor
out
inc
xchg
adc
adc
xchg
push
rorb
dec
in
cmp
cli
dec
insl
mov
lods
jg
or
jle
inc
daa
int
js,pt
insb
and
insl
sub
lods
xor
or
flds
cmp
mov
and
gs
sub
lea
insb
imul
insb
sahf
das
lds
mov
js
lret
jnp
cmp
and
out
mov
jmp
es
enter
and
fcoms
fld
xchg
rcrb
dec
push
in
mov
cmpsl
mov
icebp
cmp
adc
mov
leave
jbe
jae
sub
mov
or
add
mov
scas
lahf
adc
jae
test
push
push
push
call
pusha
sbb
dec
pop
jl
test
into
jb
or
aas
stos
int
in
cmpsl
cltd
enter
lret
jmp
or
push
lods
push
dec
pop
cmp
inc
aam
and
fisttpl
mov
lods
popa
imul
frstor
mov
jae
mov
mov
xchg
sub
cwtl
jnp
pop
mov
pop
sahf
out
jno
mov
outsb
fs
dec
or
in
mov
fs
mov
mov
outsb
ds
std
leave
xchg
pop
std
ja
add
dec
mov
stc
mov
aam
fwait
aas
pop
psrad
push
xor
imul
scas
mov
mov
mov
out
inc
mov
std
stos
call
xchg
mov
push
in
repnz
or
mov
add
insb
sbb
aaa
jnp
insl
and
shll
lds
lcall
popa
pop
sbb
and
pop
repz
pushf
loop
arpl
jle
popf
adc
mov
xchg
push
int
sahf
stos
punpckhwd
xchg
cwtl
or
aad
push
xor
mov
jecxz
adc
sbb
sarl
pop
dec
adc
andb
jl
inc
push
sbb
out
pop
mov
cld
pop
cmp
and
and
pop
das
xchg
mov
xchg
rorb
aam
pop
jp
lret
push
push
stos
or
pusha
pop
lea
inc
aam
mov
dec
xor
lea
shll
or
xchg
dec
mov
cmp
std
insb
push
jle
mov
les
imul
and
ljmp
outsl
xchg
pop
insb
xchg
out
dec
data16
xchg
adc
and
lea
sbb
mov
push
adc
or
loope
push
add
push
in
ljmp
and
and
popa
loop
arpl
push
cmp
sbb
jns
lds
popa
push
ret
jnp
lret
push
out
cmc
mov
jns
test
dec
fldcw
mov
pop
mov
fisttpll
stos
pop
mov
xchg
repz
shll
sub
and
fbstp
sub
mov
aas
cld
dec
mov
xchg
movsl
cltd
and
mov
imul
outsl
xchg
mov
lock
je
ret
sbbb
pop
and
jne
shlb
push
add
push
adc
pop
roll
dec
push
jnp
push
fdivrs
push
scas
rorl
lods
lds
sbb
es
xor
mov
add
shrb
jne
cli
pop
jo
scas
lcall
pop
inc
xchg
jnp
mov
mov
and
sub
fisttpll
test
lods
lods
clc
mov
mov
xchg
lods
arpl
dec
inc
and
push
add
xchg
xchg
ljmp
test
add
nop
int
sub
lds
fmull
push
cmp
pop
or
xor
loope
jl
push
addl
mov
xchg
cwtl
out
jmp
mov
push
notb
not
fsubrs
orl
dec
decb
stc
les
mov
stc
into
mov
push
cwtl
xor
cmpsl
clc
xchg
rorl
les
push
jge
and
sbb
dec
xchg
mov
xchg
jge
es
push
and
pushf
mov
push
cmp
mov
pop
iret
icebp
in
cmp
es
ljmp
mov
mov
xor
inc
sub
ja
mov
mov
lock
adc
lock
sub
addr16
std
jb
push
xchg
push
jns
sbb
fwait
jp
sub
sub
and
leave
stos
pop
sub
inc
pop
nop
jle
jb
cmpsb
push
xchg
cmp
jp
data16
dec
loope
jo
or
shrb
rcll
repz
add
mov
pop
pop
adc
sti
push
pusha
mov
jbe
jmp
divb
mov
pop
ljmp
call
jo
pop
mov
pop
sti
je
jmp
inc
lods
gs
nop
adc
ret
sbb
jbe
cli
icebp
subb
push
mov
aaa
mov
pop
stos
xchg
sub
jbe
movsb
insb
jmp
or
adc
fisubrl
in
xchg
aad
addb
sbb
daa
dec
fwait
mov
pop
jp
xchg
sbb
ffree
test
setne
mov
andb
mov
mov
sahf
pushf
adc
repz
ljmp
movsl
mov
or
das
cmpl
adc
js
adc
xchg
xchg
daa
or
je
cmp
or
outsb
repnz
dec
mov
pop
out
daa
inc
mov
inc
outsl
jb
in
mov
mov
stos
xchg
jg
push
imul
pop
mov
add
push
sbb
fcmovb
shl
psrad
jns
movsl
out
out
or
adc
ja
add
inc
rcll
js
ja
movsl
sub
mov
mov
nop
push
ja
pop
jnp
mov
std
xlat
xchg
out
jo
cld
or
add
sub
pop
mov
mov
xor
lret
mov
adc
imull
repz
cmp
or
sti
sbbb
inc
jg
sub
dec
nop
js
mov
fdivrs
xchg
jae
addb
or
and
dec
cmp
and
mov
jne
lods
movsb
outsb
cmp
pop
jmp
cmpsl
aam
jle
jmp
pop
push
mov
or
ffree
jp
insb
inc
lahf
adc
jecxz
sub
mov
cmpsl
push
lock
shlb
in
sahf
rcrb
andb
ret
roll
mov
test
stc
pop
gs
call
into
jae
imul
sbbb
pop
xor
shll
out
mov
add
lahf
inc
test
add
jae
mov
ret
mov
inc
adc
mov
dec
push
push
xchg
xchg
push
jg
jae
xor
fists
popa
data16
sahf
scas
push
fsub
loope
fstpt
aam
stc
gs
pop
rol
xchg
lret
loope
in
mov
outsl
es
nopl
push
es
or
dec
sub
repz
mov
adc
adcl
add
loope
cs
sbb
mov
and
iret
mov
popf
pop
or
sti
sub
inc
xchg
mov
inc
push
call
mov
jg
push
jo
xor
lods
ljmp
mov
cmp
sbb
aad
inc
pop
xor
mov
mov
push
lahf
push
jo
push
ja
lods
cltd
movsl
or
sti
or
mov
pop
ss
adc
sarl
ret
lods
lea
sbb
mov
sti
aad
mov
arpl
push
lods
outsl
bound
roll
andb
mov
sbb
xor
inc
xor
in
jnp
and
push
shrl
shrl
sbb
xchg
test
and
test
mov
data16
jbe
jle
add
cmpsb
mov
xchg
xchg
sarb
hlt
jo
inc
push
cmp
loopne
cmpsl
frstor
jge
inc
mov
or
stc
insl
pop
add
inc
in
or
shll
cli
mov
adc
sbb
ret
or
ds
mov
jo
push
xlat
aas
insl
cwtl
mov
in
inc
pop
cmpsl
rcll
push
add
test
sahf
jae
repnz
add
and
sub
pop
xor
jge
xchg
add
lret
dec
scas
xchg
jae
add
jnp
rolb
adc
lods
push
and
iret
shll
mov
sahf
add
inc
mov
imulb
idivl
mov
int
dec
mov
and
sub
xorb
dec
xor
aam
push
or
push
or
test
aas
inc
mov
test
stos
sub
mov
push
sub
sti
mov
js
xchg
mov
loope
and
mov
mov
popf
push
fmulp
cmp
lods
and
outsb
sub
iret
xchg
ds
mov
xchg
movsb
test
in
xorb
pop
loopne
dec
inc
jns
fdivrs
cld
test
dec
sub
int
xchg
pop
cmp
xor
vucomiss
sbb
mov
push
pop
loope
cmp
aaa
inc
cmp
mov
push
insl
ffreep
adc
mov
adc
leave
xchg
push
or
lock
sbb
or
sbb
or
xor
int
xor
xchg
arpl
aaa
mov
dec
sbb
mov
repnz
divb
sub
and
pop
add
pop
jno
cmp
ja
imul
stos
lea
cmp
pusha
jb
mov
je
loope
js
cmp
mov
inc
or
loope
push
xchg
adc
pop
idivb
lods
sub
jbe
push
movsb
pop
ds
jmp
fwait
and
add
jg
inc
mov
test
notl
std
addr16
inc
lods
adc
fwait
outsb
pop
leave
cmp
sub
mov
sbb
movsl
or
lret
sbb
pop
shlb
and
xchg
or
pushf
or
movsb
mov
movsb
stos
or
mov
pmuludq
add
push
jmp
sahf
pop
rcrb
mov
add
jne
test
sar
inc
pop
jno
mov
imul
decl
dec
loop
lds
cmpsl
inc
sbbl
mov
sldt
cmp
or
hlt
sahf
cmp
loop
aam
add
mov
xchg
adc
mov
aad
popf
jecxz,pn
inc
cld
and
mov
adc
sub
jp
jle
jg
sbb
push
add
sbb
xchg
scas
mov
loope
outsb
repnz
xchg
pop
mov
mov
movsb
subb
add
cmp
mov
dec
popf
test
mov
mov
jae
mov
lcall
ljmp
xchg
stos
jp
inc
sahf
mov
pop
scas
add
out
pop
adc
daa
mov
out
xor
int
lahf
sbb
jb
decl
mov
cmp
mov
arpl
sub
popf
ret
or
fwait
mov
jmp
mov
test
jecxz
stos
dec
pop
adc
shl
sub
push
dec
fnstenv
fs
adc
mov
add
scas
int
fsts
jae
in
cmp
xchg
daa
push
in
xor
repnz
in
xlat
imul
arpl
mov
cmp
cmp
pusha
sub
mov
xor
or
into
sarb
pushf
cltd
push
scas
mov
in
cmpsl
jo
call
mov
outsl
add
loope
mov
mov
mov
scas
fisubrl
cmp
movsb
push
mov
jecxz
jnp
cwtl
pop
jl
das
jns
cmpsb
mov
enter
cmp
enterw
das
xor
mov
push
dec
fists
pop
mov
iret
into
mov
xchg
subb
push
xor
mov
rol
pop
mov
adc
dec
stc
lea
loopne
lret
mov
scas
cmp
lods
in
dec
push
xchg
int3
adc
adc
leave
test
movsb
push
pop
mov
add
loopne
xor
insb
pop
dec
push
xchg
jno
push
popf
repnz
popf
and
jp
mov
mov
stos
mov
and
subb
inc
xchg
push
outsb
dec
les
into
ret
rcrl
mov
out
add
std
add
cmp
cmp
inc
loopne
out
out
or
pushf
mov
imul
movsl
insb
xchg
cld
shrb
xchg
push
mov
sbb
push
dec
add
xorl
inc
add
xor
push
ret
popf
inc
mov
and
negb
or
inc
aas
mov
mov
arpl
ret
nop
insl
mov
jmp
inc
dec
cmp
std
push
adc
shll
ror
pop
scas
cmpsb
inc
add
outsb
pop
push
dec
push
dec
jae
movsl
stos
sbb
xchg
lds
arpl
xor
and
out
pop
stos
or
adc
fucomi
in
repnz
mov
push
lock
roll
mov
ljmp
es
or
fwait
movsl
out
lahf
hlt
push
lods
cmp
jbe
pop
mov
lret
idivl
mov
daa
fs
push
popf
xchg
imul
fiaddl
xor
or
out
imul
mov
mov
push
ss
push
enter
pop
xor
mov
add
jle
gs
insl
ja
push
lods
loope
ja
add
aad
cmp
sub
sti
add
mov
adc
mov
adc
jg
ffreep
ja
sub
stos
cmp
xchg
dec
inc
xchg
lret
and
dec
subl
jge
cs
and
repnz
or
jge
cmp
lahf
mov
sbb
mov
shll
push
fwait
inc
inc
push
fimull
inc
test
jne
xchg
xchg
shrb
daa
adc
mov
xchg
push
pusha
mov
stos
nop
jle
mul
scas
test
sub
clc
dec
or
push
push
icebp
cmp
inc
mov
mov
into
bound
rclb
enter
outsl
sub
adc
enter
clc
pop
flds
sub
ficompl
jbe
das
xchg
sarl
icebp
sub
lret
xchg
lahf
cmp
ret
xor
dec
cmp
dec
jns
push
pop
shlb
sub
sarl
mov
mov
pop
dec
sbb
and
seto
cmp
enter
pop
pushf
enter
sbb
sbb
cmp
imul
insl
mov
adc
cld
ret
xchg
pop
cwtl
pop
fmull
pop
andl
xchg
mov
jl
inc
and
outsl
xor
sbb
jle
fadds
inc
cmpsb
imul
fldt
jns
xor
jbe
rol
popa
fiadds
push
je
shll
adc
pop
xchg
jne
imul
stos
or
test
fisttpll
jae
jno
outsb
ds
cs
out
repnz
or
cwtl
fs
leave
sub
pop
jmp
sub
cmc
in
xor
gs
loope
int3
popf
iret
outsl
dec
andb
hlt
int
sub
es
lods
test
mov
jo,pt
mov
sbb
sbb
mov
xor
mov
inc
popl
loope
arpl
call
shrb
pop
scas
stc
mov
and
cmpsb
cmp
js
xorl
pop
inc
stos
imul
data16
pop
sub
mov
ds
rclb
push
mov
shll
mov
and
in
inc
js
sub
shll
xor
jp
lret
and
flds
jns
into
repz
jbe
pop
nop
mov
pcmpeqb
cwtl
cli
jb
dec
fs
mov
ds
pop
xchg
adc
mov
dec
xor
inc
jb
lods
xchg
ficompl
lahf
or
push
dec
mov
xchg
ss
popf
es
in
jp
insl
jne
leave
xchg
xchg
mov
cmp
xchg
mov
and
push
mov
xchg
outsl
xchg
add
push
bound
aas
jbe
mov
or
stos
mov
mov
aam
sbb
dec
sub
adc
scas
jne
cmc
mov
push
inc
mov
mov
jae
aad
lret
cmp
and
xor
addr16
mov
mov
dec
hlt
movsl
nop
inc
imul
cmp
test
test
mov
mov
lds
out
jae
and
pop
fwait
sbb
push
xchg
adc
push
bound
sub
cli
sbb
dec
fwait
rcll
inc
cmp
int3
xor
sbb
mov
lret
xor
test
cmpsb
add
mov
cmpsl
imulb
loopne
fwait
cmp
adc
sahf
iret
fdiv
jmp
in
mov
mov
shll
push
shlb
push
lret
dec
cs
sub
test
std
or
jb
ds
push
mov
sub
cmp
sbb
mov
js
cld
cmp
mov
inc
ret
or
dec
jns
sahf
test
hlt
scas
cmp
mov
inc
pop
pop
mov
in
jp
out
pushf
jno
mov
insl
mov
in
imul
cld
xchg
xor
mov
xchg
cltd
inc
into
popa
aam
subb
enter
pusha
fnstcw
xlat
xchg
inc
sub
cmp
xchg
or
pop
xchg
cmp
shll
pusha
sahf
jno
xor
test
xchg
mov
rorb
addb
push
das
fwait
ror
or
mov
loope
shl
hlt
cld
mov
cs
shrl
jle
mov
dec
imul
sbb
xor
mov
lds
xchg
stc
push
mov
sbb
rol
loope
xchg
aam
add
in
and
mov
inc
loopne
rcrl
aaa
and
mov
outsb
pop
fistpll
sub
xlat
mov
mov
aad
int
and
fistpll
adc
jmp
xchg
dec
mov
addl
fs
rorb
hlt
mov
xchg
test
adc
loopne
mov
popf
imull
push
sbb
cwtl
mov
mov
in
cltd
hlt
fmul
in
int
jle
or
xor
fwait
jg
adc
mov
in
lods
in
loopne
push
into
jge
xchg
das
xchg
cmpb
add
outsl
cmpsb
shlb
mov
pusha
sahf
push
bound
push
mov
xor
add
sbb
inc
icebp
cld
data16
jbe
je
mov
jg
rorl
aad
das
pop
aas
int3
js
adc
push
hlt
add
cmp
aam
pop
cmp
in
lds
std
xchg
jl
mov
sub
int3
in
popa
les
lock
cmp
or
stos
lret
inc
fcoms
sub
mov
mov
add
push
jae
and
out
test
mov
mov
pop
xchg
push
out
rcrl
movl
loope
xor
sbb
sbb
mov
dec
sbb
aas
je
mov
or
shll
xlat
scas
adc
xchg
rcrb
fldenv
mov
cwtl
ds
cmc
cmp
and
test
mov
cmpsl
addl
sbbb
push
aas
sub
int3
outsl
loope
ret
dec
mov
lds
cmp
xor
andb
sub
jmp
movsl
imul
sahf
aam
sub
dec
gs
and
dec
daa
in
jle
in
push
mov
cltd
sbb
inc
sahf
add
lcall
jne
test
push
lock
jnp
xchg
sub
cli
mov
popa
dec
and
lods
inc
std
int3
stos
in
repnz
repz
mov
pop
jns
xchg
pop
mov
out
sbb
adc
hlt
jbe
out
je
cwtl
test
movsl
fsubrs
pop
sbb
lds
jecxz
stc
adc
cli
xchg
mov
jns
dec
cmp
popa
mov
mov
test
sbb
filds
xlat
mov
pop
bound
push
xor
mov
imul
out
lcall
fwait
sbb
pop
jne
loop
and
and
sub
push
cmp
push
push
int3
xchg
fs
mov
xor
loope
sbb
sti
aam
cmp
fwait
add
js
pop
mov
push
xchg
insl
sbb
cmpsb
iret
rcrl
sbb
mov
cmpsb
cmp
loop
test
jb
or
jle
pop
mov
in
jge
and
jmp
inc
mov
mov
das
push
dec
jg
cmp
testl
pop
insb
movsl
loop
fcmovu
or
inc
pop
dec
sbb
gs
mov
dec
subl
repnz
dec
std
dec
push
pop
test
call
inc
push
adc
lea
adc
sub
fstpl
mov
xorb
pushf
dec
cmp
imul
mov
dec
cmpsl
movsb
mov
iret
push
mov
mov
xchg
xor
mov
imull
mov
add
mov
js
xchg
mov
jg
pop
push
test
jae
adc
push
push
dec
insl
stos
cmp
ds
pop
or
sbb
nopl
out
xchg
mov
mov
inc
cwtl
xchg
les
outsl
cwtl
sarb
or
aaa
pop
inc
inc
jge
aad
hlt
xor
xchg
js
ja
popa
and
or
mov
in
sbb
dec
js
lea
mov
sub
and
dec
xchg
enter
movsl
pushl
or
lret
mov
mov
jo
nop
push
subb
mov
icebp
or
add
push
adc
aad
scas
mov
out
push
insw
lcall
lods
fwait
mov
cli
arpl
mov
xchg
pop
loope
jns
add
pop
inc
repnz
jo
fs
imulb
cli
nop
sub
loope
test
push
sbb
arpl
aam
add
ret
xchg
std
mov
lods
insb
push
sub
xor
mov
test
mov
rcll
movsl
pusha
inc
jo
insb
xchg
int3
sbb
imul
xchg
insl
inc
cmp
dec
push
in
push
lahf
push
pusha
out
xor
stos
jns
xlat
push
in
enter
out
das
loopne
fldenv
loope
add
jbe
cwtl
imul
fsubrl
push
mov
rorl
test
mov
push
mov
pop
add
xlat
cmpsb
mov
cltd
xor
pop
fsubl
movsl
in
pop
cmp
rclb
inc
adc
sub
inc
adc
ds
movl
mov
mov
fwait
nop
xor
jb
sarl
cmp
out
int
sarl
sbb
iret
cmp
ss
cld
js
jno
mov
into
cwtl
mov
rclb
jl
jne
push
stos
icebp
add
stos
shl
mov
not
outsl
inc
xor
lret
ljmp
mov
add
packsswb
adc
push
jmp
dec
rcrb
jae
push
mov
jle
aad
daa
add
xchg
fwait
push
mov
fstl
stos
andl
pop
xchg
dec
rclb
mov
mov
push
dec
addr16
and
nop
sarb
test
shr
push
cmc
mov
movsl
in
iret
push
sbb
cli
dec
mov
in
cmp
shl
scas
sub
cmp
push
imul
call
pop
outsb
lahf
popaw
sub
icebp
lret
and
adc
inc
cmp
cmp
loopne
xchg
fdivr
push
push
in
cmp
push
or
mov
sub
jmp
imul
jae
and
mov
fwait
inc
sti
je
addl
xchg
adcl
xor
or
mov
mov
ss
pop
sub
and
aam
call
stos
lret
fsubrl
fs
add
sub
iret
xchg
dec
ret
inc
xchg
inc
adc
mov
cmpsl
nop
clc
xchg
mov
jge
mov
and
sbb
jbe
rcrb
cmp
ljmp
push
adc
dec
or
std
or
adc
mov
inc
js
cmp
sbb
jb
loop
add
out
push
loop
fs
out
xlat
jae
ret
divb
in
adc
ljmp
and
mov
ljmp
cmpsl
and
inc
subl
cmpl
mov
inc
jns
dec
gs
clc
out
push
mov
push
or
dec
mov
adc
out
push
icebp
adc
lcall
push
pop
fs
popa
pop
or
mov
pop
dec
das
sahf
movsl
mov
into
fiadds
pop
in
js
jbe,pn
adc
test
cmp
jmp
fidivl
outsb
mov
sbb
repz
inc
sub
pop
mov
xchg
aad
insl
jns
cmp
imul
std
inc
pop
test
mov
xchg
enter
imul
dec
lea
out
xor
ret
xchg
xchg
mov
and
and
dec
out
or
dec
mov
stos
hlt
sbb
xor
outsl
ficoml
fwait
jnp
dec
jmp
fisttps
pop
fsubrp
fdivl
int3
aaa
xchg
xlat
mov
popl
call
sbb
pop
inc
js
mov
xor
and
xchg
stc
pop
fisubl
pop
outsl
and
dec
scas
outsb
imul
aaa
push
cmc
roll
loope
mov
addr16
xchg
and
test
mov
mov
shll
adc
xor
sub
pop
inc
add
out
adc
adc
adc
sbb
sub
stos
xchg
and
stos
es
and
popa
jmp
jecxz
test
or
lods
jge
mov
dec
jl
xor
cmc
sub
sub
stos
add
out
xchg
add
dec
int
cmp
sub
push
lahf
pop
add
pop
lret
or
adc
dec
sub
hlt
push
nop
jg
sbb
stc
dec
das
and
xchg
cld
call
fisttpl
jns
mov
or
pusha
xor
inc
pop
dec
adc
or
lock
movsb
lods
push
dec
outsl
dec
push
hlt
jmp
push
xchg
ret
dec
insl
stos
int3
cmp
loop
mov
sti
fsubrl
ss
dec
fildll
xor
xor
sub
push
movsb
mov
inc
push
mov
aaa
lcall
fidivrs
call
mov
push
xchg
cld
mov
lods
vpmaddwd
stos
daa
cmp
das
xchg
push
inc
ljmp
loope
aam
jmp
sub
lahf
push
inc
mov
popa
add
sbb
sbb
cmp
je
push
lock
jae
xor
jns
sub
mov
stos
dec
movsl
pusha
sub
or
bound
mov
data16
scas
pop
mov
cli
push
cmp
lds
xchg
jns
adc
shrl
jmp
mov
lret
shlb
lret
cmp
cmpsl
cld
jp
xlat
arpl
jl
lea
js,pt
push
mov
mov
pop
fwait
std
movsb
subl
insb
loope
pop
mov
les
clc
cltd
outsl
mov
shr
lods
push
fisttpll
fwait
push
inc
movsl
push
lds
icebp
xchg
and
loopne
pop
mov
inc
cmp
sub
add
test
add
es
cmpsb
into
mov
loopne
scas
sub
into
cli
add
push
dec
push
sti
or
out
fs
repnz
jae
enter
xor
enter
pop
pop
inc
jb
test
mov
dec
push
lahf
push
stos
cs
ret
imul
adc
sbb
and
setle
stc
aam
stos
jae
es
cmp
outsl
popf
cmp
xor
cmc
stos
sti
jns
out
cmp
xchg
fld
xchg
push
pop
fldl
sbb
lods
add
fstp
inc
test
dec
stos
adc
or
mov
pop
popa
sbbl
repz
int
mov
repnz
lret
gs
mov
cmp
push
popf
mov
and
xor
inc
cmp
ret
call
shrb
adc
inc
loop
dec
mov
xor
mov
lds
roll
push
enter
imul
pop
xchg
sbb
sbb
test
push
mov
push
cmp
pusha
ja
loopne
xor
repz
or
dec
xor
test
cmpsb
mov
repnz
xor
fwait
and
or
lods
jnp
pusha
mov
insb
or
movd
mov
push
pop
xorb
xor
jmp
int3
stos
int3
rcrl
and
mov
sub
jecxz
or
add
dec
mov
repnz
jae
mov
gs
inc
test
xor
xchg
int
aam
add
insl
scas
jne
icebp
add
mov
inc
pop
cmc
rorb
xchg
shl
jmp
pushf
xchg
cmp
cmpsb
imul
repz
push
fldln2
pop
sub
repz
and
ss
or
and
lahf
enter
les
add
or
dec
nop
add
pop
cmc
outsb
and
out
lret
and
xor
nop
out
ja
lea
clc
add
fcomps
push
xorb
xchg
sub
or
xchg
dec
jb
or
cwtl
xchg
mov
arpl
sarl
stos
cmp
pushf
movl
xchg
mov
mov
cmp
imul
mov
popf
jnp
out
enter
push
cwtl
out
jno
mov
bnd
iret
pusha
hlt
mov
pop
mov
jge
inc
lret
and
pusha
adc
adc
fidivs
jb
xor
jb
xchg
movsb
dec
adc
ja
repz
adc
iret
xlat
lods
iret
xchg
mov
leave
adc
mov
inc
mov
jmp
loopne
xchg
or
call
ret
mov
and
fmulp
mov
sub
shrb
repnz
push
xor
aad
shlb
sbb
enter
mov
out
rcr
jl
xchg
xchg
sub
out
adc
cmpsl
jbe
scas
push
push
ret
loope
xor
cmp
pop
pop
cs
inc
iret
icebp
inc
add
xchg
push
movsb
jp
push
mov
addr16
out
rorb
ljmp
shlb
incb
sbb
sbb
das
mov
cltd
add
imull
mov
popf
shll
movsb
push
cmc
cwtl
jmp
adc
mov
inc
ss
push
jl
pushf
test
lock
lock
push
and
aas
adc
imul
inc
xchg
jge
jnp
add
cmp
xchg
xchg
rorb
imull
jnp
ss
out
dec
in
sub
inc
inc
mov
icebp
imul
add
popf
or
mov
push
je
in
xlat
insb
aaa
insb
sahf
pop
mul
push
mov
xor
add
mov
xchg
mov
dec
add
les
loope
daa
int
jmp
gs
mov
int
jcxz
adc
adc
xor
loopne
adc
daa
sbb
clc
cmc
clc
xchg
ja
outsl
lock
mov
jne
jbe
insl
leave
pop
push
sbb
push
mov
add
push
out
adc
jb
dec
fucomip
or
ret
jnp
nop
mov
jb
xor
jge
jl
cmp
cmp
jne
dec
imul
adc
addl
or
or
jp
cmp
out
lods
int
push
adc
imul
push
fwait
ss
add
xor
cmp
in
sbbl
mov
into
ret
and
sti
sbb
test
int
les
jle
sub
mov
dec
repnz
sub
cli
cmp
cs
shll
mov
lods
sbb
movsb
mov
mov
iret
cli
or
sbb
sbb
das
emms
mov
dec
push
mov
xchg
sti
push
pusha
in
test
scas
lret
xchg
push
add
mov
adc
mov
sbb
jecxz
and
xchg
cmovo
mov
test
fldenv
push
pop
mov
inc
dec
jmp
pop
flds
or
mov
mov
loop
jo
adc
fs
xor
inc
jae
sub
dec
push
xchg
sub
inc
pusha
das
icebp
and
negb
add
inc
sbb
int3
ljmp
xlat
js
and
popf
icebp
aad
loope
loop
xchg
cltd
add
iret
mov
xchg
lea
push
in
roll
xor
sbb
ficomps
jmp
cmp
push
fwait
mov
push
adc
test
shlb
push
shlb
mov
xchg
into
push
sbb
dec
cltd
mov
adc
pop
test
outsb
xchg
dec
movsb
movsl
in
xor
push
jg
outsb
lcall
push
in
aad
cmp
cmp
dec
dec
aam
dec
rorl
xor
rcr
xchg
rcl
adc
sbb
jbe
out
cmpl
mov
in
mov
nop
dec
add
mov
repz
inc
cmp
je
cmp
mov
lret
or
inc
imul
insl
push
mov
gs
gs
inc
dec
rcl
lods
daa
jecxz
push
jl
cmp
xorl
mov
loope
rcl
aam
push
mov
jp
lahf
mov
mov
mov
mov
cmp
ljmp
sub
test
push
add
cli
sub
icebp
in
push
lds
ja
lods
mov
into
sbb
pop
jle
jo
movsl
jle
aaa
push
xchg
jl
mov
in
inc
rolb
xchg
add
mov
imul
mov
fs
sbb
aaa
mov
ds
jmp
insb
mov
sub
bound
fadd
fadd
push
or
ret
add
sub
or
pop
sub
ret
push
sti
jno
popl
orl
mov
ljmp
test
popf
stc
sub
push
ja
dec
in
dec
cmpsl
stos
jl
js
fiadds
mov
sbb
lods
aaa
mov
mov
enter
push
xor
divl
ss
mov
or
pop
push
jae
xchg
pusha
cmp
icebp
scas
xor
ficoms
sbb
sbb
gs
mov
xorl
pusha
inc
stos
cmp
mov
cmp
data16
push
jle
dec
mov
push
iret
jl
push
xchg
jae
ja
cltd
jecxz
enter
mov
and
stos
inc
push
xor
cmp
cmovne
lds
pop
adc
pop
into
insb
lret
pop
jge
inc
xor
repnz
xchg
xchg
pop
pop
jno
loopne
daa
nop
aad
sbb
mov
outsb
cmp
fnstcw
push
pop
push
lea
out
inc
mov
test
adc
int3
lods
push
roll
add
add
ret
loop
pop
xor
fdivl
test
push
scas
mov
pop
movsl
pop
imul
jl
inc
fildl
inc
jae
hlt
xor
push
test
les
mov
aas
imul
adc
push
jbe
cli
mov
les
add
inc
push
int
movsb
fstpt
imull
loopne
jp
repnz
pop
xlat
out
test
pop
push
and
pop
popf
scas
push
xchg
stc
lock
cmp
or
jb
adc
imul
adc
inc
adc
out
divl
dec
xor
repz
sub
add
in
idivl
inc
in
aam
push
xchg
dec
or
bound
stc
out
ror
inc
sbbb
mov
out
fcompl
dec
fld
lds
popf
repz
dec
ljmp
daa
inc
lock
iret
ret
aam
imul
push
imul
out
sbb
and
adc
sub
ljmp
das
sub
cs
testl
xchg
mov
push
cmp
rcr
adc
leave
cli
fneni(8087
cmpsb
gs
cmpb
rcrl
cmp
jp
shrl
push
xor
pop
mov
lds
test
add
add
pop
outsl
xor
stc
inc
lods
push
fisttpl
or
mov
cmp
lods
mov
cmp
push
stc
adc
pop
ss
cwtl
ss
jo
sub
push
punpckhbw
dec
in
lods
xchg
das
enter
dec
cmp
lods
sti
push
stos
scas
mov
xchg
mov
out
pop
fidivrl
sbb
inc
out
xlat
das
add
out
out
lret
jnp
in
add
lahf
adc
fldcw
dec
rcll
into
push
aam
jge
into
pusha
jno
nop
sbb
in
lahf
or
insb
push
mov
sub
and
loope
mov
add
enter
inc
lds
or
pop
test
loopne
mov
mov
and
mov
int3
xchg
jae
dec
and
mov
cwtl
xchg
stos
lock
adc
stos
sub
sub
mov
push
jo
lods
mov
int3
aam
dec
in
lcall
into
mov
outsb
jno
xchg
clc
xor
push
je
adc
pop
xchg
sbb
aad
stos
add
in
loope
mov
stos
daa
pop
xor
pop
and
and
imul
mov
pop
scas
xchg
lcall
fimull
into
dec
sub
adc
jg
sub
xor
sarl
push
mov
das
mov
out
imul
icebp
xchg
js
scas
lret
lods
imul
push
fwait
sbb
or
cli
insb
repnz
xchg
jg
xlat
mov
loope
xchg
ljmp
xchg
aam
popf
pushf
jg
jmp
pop
cmc
add
push
add
leave
pop
lea
xchg
sbb
dec
loope
nop
pop
cwtl
inc
out
mov
int3
popf
push
sub
pop
dec
fwait
push
popf
addr16
xchg
clc
or
dec
in
push
jl
mov
sub
and
jo
pop
cmpsl
ljmp
neg
cmpl
sti
inc
push
cmp
call
pop
add
jge
and
addr16
ret
fsubl
hlt
out
test
mov
xchg
test
mov
push
cmp
jp
cs
fistps
jl
dec
popf
rol
mov
mov
sbb
cltd
xchg
lret
cs
push
rcpps
sub
dec
cmpsl
xchg
add
cmc
xchg
push
popf
jg
dec
jnp
xchg
sbb
repnz
add
out
sub
imul
das
cmp
xchg
lods
rcl
test
loope
mov
testl
mov
in
and
sbb
pop
pushf
loopne
inc
and
jnp
mov
ss
in
lock
fsubr
idivb
push
cmpsl
jl
jle
aaa
orb
or
sub
or
std
mov
pop
xchg
into
inc
fidivrs
inc
push
mov
lahf
mov
jmp
mov
fiadds
imul
mov
scas
jns
repnz
jne
jl
push
inc
jb
mov
aad
dec
inc
cmp
in
pop
vpunpckhwd
mov
arpl
xchg
outsl
enter
pop
jmp
xor
call
xchg
jo
lods
sahf
leave
mov
mov
jbe
in
insb
cwtl
xor
push
lods
nop
fsubs
ljmp
adc
push
pop
test
jmp
out
and
inc
lret
adc
in
push
pshufw
xor
mov
stos
pop
and
add
pop
lods
or
push
mov
dec
push
js
or
cmp
inc
outsb
xchg
mov
ret
push
das
mov
mov
xor
lods
sbb
ja
iret
cmc
xchg
out
cmp
stos
ja
ret
mov
shrl
push
iret
pop
cmpsl
cltd
int
movsl
inc
pop
out
inc
mov
iret
out
enter
mov
and
fnstcw
add
fildl
sub
cmpsb
or
mull
iret
jnp
xchg
ret
jl
xchg
aad
int
mov
cmp
jle
lea
call
ret
and
and
sbb
push
xchg
lret
dec
clc
inc
cmp
xor
sub
push
sub
dec
mov
mov
mov
mov
mov
push
loop
inc
inc
dec
xor
cmpsb
out
and
in
ja
test
cmpsl
outsl
lods
mov
sbb
int3
daa
cmpsb
jl
mov
mov
aas
mov
push
mov
call
movsb
lahf
sbbb
or
mov
cmc
sub
cltd
frstor
pop
push
mov
pop
push
int3
xor
movsl
dec
stos
sub
add
mov
sbb
inc
lret
rcrb
int3
stos
loop
loope
xchg
mov
dec
cmp
mov
outsl
insb
sti
or
fwait
push
inc
loop
outsb
inc
or
xchg
cld
jbe
scas
int
lods
mov
mov
and
out
lds
mov
mov
xor
cmp
dec
ror
xchg
cld
xor
push
fisubrs
pusha
pop
mov
jnp
sub
fwait
ror
imul
in
clc
inc
fisttpll
fld
mov
mov
adc
je
inc
xchg
or
sbb
xchg
cmp
lock
add
shlb
sub
divb
push
fs
scas
mov
out
sbb
adc
out
xchg
lock
inc
mov
repnz
or
cmp
ret
pop
inc
fnstcw
fdivl
pop
stc
push
in
cmpsb
test
xchg
imul
lds
pushf
or
mov
push
pop
stc
icebp
xchg
sub
xchg
pop
push
adc
mov
mov
popf
xchg
push
out
sub
inc
pop
lock
nop
push
subl
sub
adc
mov
mov
cmp
adc
ret
insl
xchg
scas
outsb
js
inc
dec
int
in
sti
cmpsb
outsb
adc
mov
into
pusha
pop
aad
in
inc
aam
mov
in
lods
sbb
xchg
pop
cmpb
test
std
sub
cmc
shll
popf
xor
lea
and
lahf
or
js
aam
and
mov
fnstcw
xchg
dec
aad
jno
lahf
cli
and
xchg
xor
jecxz
movsb
les
or
repnz
and
pop
mov
inc
decl
adc
popf
sbb
out
in
and
aaa
clc
es
cli
sbb
adc
cmc
inc
push
pushfw
sub
cmp
daa
test
ret
shl
inc
inc
ja
mov
lret
fnstcw
xchg
out
mov
sub
inc
or
out
jl
or
pusha
test
jecxz
xchg
pop
mov
sarl
or
movsb
pop
enter
std
aam
bnd
fwait
loopne
adc
insl
sbb
insb
shrl
into
xor
xor
test
test
jge
xchg
xor
je
push
cli
shr
jecxz
scas
scas
punpcklbw
repnz
push
push
push
and
push
pop
jle
jns
xchg
or
lods
les
mov
lret
rorl
mov
cmp
mov
mov
mov
push
mov
out
inc
ljmp
adc
mov
popa
int
mov
sub
xchg
adc
mov
pop
lahf
adc
xor
jbe
rcrl
jge
sub
sar
xor
arpl
mov
push
lea
out
js
lcall
jp
pop
push
mov
sbb
pop
xchg
cmp
jl
xor
mov
lock
js
aam
dec
sbb
or
mov
mov
push
push
jl,pn
cs
pop
mov
or
test
iret
cmp
jmp
jge
dec
or
pop
pusha
inc
pop
rcrb
mov
or
mov
dec
inc
cmp
add
das
lods
test
dec
add
in
sbb
cmpsl
hlt
aad
xor
push
xchg
cmc
cmp
add
pop
xor
or
sbb
nop
popa
jp
cmp
xor
iret
mov
fwait
or
shrb
gs
das
xchg
or
imul
mov
aad
mov
loope
cmc
fisttpl
mov
cwtl
xchg
pop
adcl
inc
stos
cmc
mov
or
js
or
xor
xchg
lahf
or
std
int3
scas
scas
aaa
jecxz
repz
into
xor
inc
sbb
pop
push
push
enter
cs
pop
xor
cmp
mov
fs
cli
movsb
mov
sbb
fsub
jmp
xchg
cmp
mov
sub
out
ret
push
push
sub
lods
daa
jecxz
ja
dec
sbb
sbb
sahf
hlt
mov
xor
imul
mov
dec
pop
shlb
data16
jno
inc
dec
fisttps
xadd
adc
mov
loope
ljmp
pop
mov
fmuls
fnstsw
iretw
dec
mov
cmp
clc
mov
mov
pop
scas
ja
call
sub
lock
push
jo
pop
fldt
dec
sbb
xor
shlb
js
push
inc
sub
xor
ja
roll
shl
pop
push
mov
mov
mov
icebp
push
cmp
ret
loope
jb
mov
xchg
mov
dec
inc
call
int
adc
xchg
insl
jmp
lods
inc
fiadds
add
mov
mov
cmpsb
jge
adc
sub
pushf
mov
out
vmovaps
cmpsl
mov
fwait
and
clc
loop
cmp
rcll
jo
cmpsb
das
adc
mov
jns
out
adc
jmp
jl
mov
lcall
jb
jl
adc
jg
in
in
js
adc
rcr
sbb
adc
mov
pop
fcoms
push
jno
xchg
mov
test
out
out
xchg
xchg
fwait
push
jmp
stc
mov
loope
inc
scas
push
das
aam
sti
and
push
into
adc
jmp
out
sbb
into
xchg
pop
rcll
out
cli
mov
icebp
iret
je
icebp
push
mov
dec
ja
or
xchg
int3
arpl
lret
adc
sbb
stos
lret
mulb
gs
pop
jns
sbb
fucomi
cmp
clc
lfs
sbb
mov
fidivs
mov
out
xor
jge
cmp
or
and
stos
mov
negl
loope
das
inc
loope
rclb
shld
sub
es
cmc
lods
add
scas
pcmpeqw
js
mov
dec
lods
push
mov
fs
movl
clc
pop
in
jne
mov
ss
addr16
xchg
aam
dec
ljmp
or
in
addl
arpl
inc
je
test
addr16
inc
cwtl
fisubrs
aam
mov
test
lret
insb
fisttps
push
dec
retw
xchg
adc
outsl
add
push
sti
push
inc
pop
xor
pop
gs
mov
addb
fcmovnbe
sbb
pop
push
push
mov
lret
loop
into
add
jp
sub
inc
jle
xchg
sub
xor
rcl
mov
insl
sub
and
pop
xor
cli
adc
sbb
in
mov
movsb
cmp
jge
cli
xor
scas
aas
loope
lcall
mov
shl
outsl
ret
cwtl
lods
xchg
and
cmp
dec
es
mov
into
es
dec
sbb
insl
jo
mov
out
fistps
push
mov
dec
or
mov
jle
cmpsb
leave
mov
insl
xchg
std
stos
pop
fsubrl
cmp
cmpxchg
scas
and
push
xchg
das
adc
pusha
sbb
arpl
push
ret
shlb
mov
xchg
in
in
pop
jecxz
xchg
loop
xchg
cmp
xor
loopne
popa
mov
cmp
ficompl
xchg
pop
mov
lds
test
test
or
es
ss
mov
push
mov
adc
pop
jo
push
push
or
push
xchg
and
cld
test
cld
cmpsl
lods
lods
imul
dec
sub
addr16
mov
mov
jno
stos
int3
push
sub
sahf
sti
cmp
jg
xchg
cld
fisubrs
push
mov
out
jnp
add
pop
test
or
pop
outsl
cli
hlt
push
pusha
push
insb
pop
xchg
loop
sub
mov
xor
insb
nop
inc
lea
cmp
adc
mov
pop
fxtract
pop
nop
shrb
inc
enter
dec
scas
pop
shl
xor
add
ds
sbb
push
ljmp
jne
cs
jge
push
add
mov
enter
and
xchg
cmp
lock
lods
mov
cs
fistl
adc
enter
cmp
shrb
js
jecxz
shll
repz
pop
pop
sub
cli
inc
ljmp
stc
hlt
jbe
adc
jmp
cltd
add
cltd
xchg
add
rclb
jo
aaa
sub
negl
sbbl
ja
mov
int
sbb
lods
ljmp
push
sti
push
jb
outsl
rolb
push
inc
adc
imul
les
adcb
pop
mov
jb
sbb
pusha
sub
mov
lods
out
jecxz
xchg
aad
lahf
adc
andb
psrlq
adc
sub
inc
jg
jnp
push
jl
mov
sbb
imul
mov
or
std
mov
lret
mov
les
out
cmp
jbe
dec
mov
sub
mov
add
call
inc
sub
mov
lock
call
ja
push
or
dec
fildl
jo
iret
add
cmp
sub
mov
nop
popf
outsl
xor
repz
jecxz,pt
add
mov
pusha
outsl
jo
in
mov
and
dec
mov
sbb
add
cmp
sub
mov
jo
pop
fmuls
push
ret
es
cmpsb
lret
jae
pop
jecxz
aad
div
insb
insb
jl
pusha
imul
add
movsl
dec
flds
pushf
mov
fwait
aas
aam
xchg
aaa
mov
sti
jle
sub
dec
add
pusha
lods
inc
add
sub
iret
push
aas
xchg
iret
in
mov
inc
adc
and
cmp
sar
shrl
xor
mov
insb
pusha
in
inc
cmp
inc
sub
outsl
inc
jmp
jge
cmp
std
in
pop
lret
test
sub
stc
push
push
ret
dec
cmp
out
or
push
pop
push
insb
aaa
mov
repz
mov
in
pop
adc
cmpsb
gs
jmp
fnstcw
cmc
lret
mov
push
cmpsl
lods
lret
inc
xor
sahf
andb
mov
dec
jnp
das
bound
fdivs
lcall
lret
inc
dec
js
and
lret
push
cmp
jg
sbbb
xchg
gs
cltd
lahf
adcb
push
fwait
mov
mov
push
or
out
es
ljmp
xlat
jne
icebp
push
sbb
cmc
xchg
xor
ret
data16
leave
mov
sahf
out
popf
popa
dec
sub
mov
in
fwait
sub
adc
mov
ret
mov
sbb
push
inc
push
xchg
or
or
lds
aaa
mov
fidivrl
jo
mov
and
mov
in
sti
shrb
mov
inc
dec
nop
addl
dec
sub
lods
lock
mov
jno
popf
fwait
mov
lods
pop
pop
jle
jmp
movsl
push
insb
insb
rol
jle
xor
leave
push
jecxz
mov
jae
jns
cmp
dec
inc
push
sbb
mov
push
dec
repz
les
push
lods
pop
sbb
dec
lea
push
cmpsl
xor
paddb
push
loopne
jle
ret
mul
imul
xchg
sbb
rorl
imul
test
mov
mov
aam
repnz
mov
movsb
add
mov
inc
push
mov
roll
inc
arpl
mov
out
fisubl
add
lods
cmpsl
sbb
cwtl
jae
mov
loope
mov
mov
cltd
sub
adc
iret
leave
cmp
gs
popfw
mov
nop
je
loopne
adc
dec
adc
jge
jns
cmc
mov
or
nop
push
dec
inc
inc
sbb
xor
inc
and
jl
movsl
rorb
out
fsubrl
scas
sub
mov
or
jg
xor
xchg
stos
mov
inc
and
es
jecxz
cmp
cmp
fcmovb
dec
arpl
sbbl
lahf
xchg
ret
in
cmp
sbb
ret
push
mov
xchg
push
mov
lods
mov
fcoml
cltd
lret
cmc
cmp
xchg
fldl
xor
mov
mov
jg
mov
xchg
sub
fmuls
ss
jg
inc
jp
mov
dec
scas
sti
add
mov
stos
jmp
loopne
fisttpl
mov
add
cmc
xchg
lea
or
or
insb
and
int3
mov
sbb
xlat
add
es
cmp
mov
dec
mov
xchg
lret
shlb
xlat
mov
pushf
sbb
push
dec
int3
adc
fiaddl
fsubrl
pop
jmp
roll
add
xchg
mov
shll
jle
push
cmp
hlt
pop
sbb
jle
aas
lods
xchg
jecxz
mov
cmp
add
loop
jnp
jg
dec
daa
popf
mov
sub
push
mov
push
jp
add
leave
call
clc
cmp
push
shll
sub
sub
imul
fbld
mov
sub
sbb
stc
into
lret
je
stos
pop
xchg
icebp
pop
jne
xor
cmp
mov
cmp
into
rorl
enter
push
mov
xchg
roll
sti
cmp
std
mov
mov
xchg
add
sbb
cmpb
mov
jmp
mov
jo
mov
mov
loope
adc
mov
sub
mov
inc
xchg
jbe
in
adc
js
outsl
push
scas
mov
nop
sti
pop
lds
jns
shrb
fadds
mov
lods
int
cmp
leave
xor
loop
push
daa
imul
ss
push
add
jmp
or
dec
add
fisubs
out
movsl
inc
xchg
inc
out
repnz
std
stos
pop
loopne
aam
mov
cs
mov
mov
cmp
mov
mov
aaa
les
lds
ss
sub
fimuls
cmp
push
cmp
push
xchg
mov
or
add
dec
in
incb
pop
pop
add
cmp
pop
jnp
pop
popa
aaa
sbb
outsb
mov
sahf
push
mov
xchg
cmc
mov
lods
rcl
stos
and
jg
push
into
and
sahf
push
xor
lret
add
push
mov
js
and
jge
repnz
std
ljmp
jmp
pop
addl
pop
xor
cwtl
mov
sub
pop
insl
fildll
push
xorb
jle
jg
shll
push
das
ret
and
jns
push
and
mov
mov
out
adc
notb
je
in
test
mov
in
dec
movsl
sbb
jne
ljmp
sub
loope
shlb
les
xor
pop
fldenv
add
add
scas
and
push
xlat
mov
std
stos
xchg
cmpsb
add
sbb
cmc
shll
sti
add
leave
loopne
jle
adc
cmp
dec
xor
dec
in
xchg
inc
or
mov
leave
inc
xor
ja
add
gs
movsl
mov
or
jmp
popa
dec
cli
test
xlat
xor
jne
outsb
ret
push
call
mov
adc
dec
imul
cmpb
jge
mov
subb
mov
test
jne
or
mov
dec
sti
fwait
inc
pop
pop
lret
push
scas
dec
xorl
js
pop
pop
std
mov
stos
jecxz
mov
jmp
cmp
xor
mov
fstps
lcall
cmp
mov
mov
stos
add
or
adc
pop
divl
out
mov
stos
test
push
jae
stos
inc
lahf
sbb
outsl
and
iret
cmp
adc
push
inc
fistps
add
movsb
or
ljmp
outsb
push
sarb
cmp
enter
mov
xor
cmp
movsb
fisttpll
xchg
stc
push
movsl
mov
stc
into
cmp
test
andl
add
jns
test
xchg
push
sarb
sarl
movsb
sbb
imul
loop
sub
inc
ds
xchg
ret
inc
mov
mov
shrb
mov
and
adc
lahf
inc
mov
cmp
aaa
popa
pop
hlt
bound
mov
sub
xchg
insb
outsb
push
jecxz
cmp
dec
addl
push
fucomp
out
rorb
xchg
cld
das
push
mov
push
pushf
daa
popf
orb
and
mov
dec
pop
out
or
mov
or
jbe
sub
aaa
int
insl
pop
sbb
and
pop
push
cmp
mov
lea
jecxz
dec
mov
cmp
rcr
hlt
in
rolb
std
xchg
js
mov
mov
xor
push
nop
cltd
xchg
pop
cmp
sbb
fnstenv
int3
pop
cmpsl
cmpsl
orb
lahf
loopne
mov
lea
mov
xor
lcall
insb
or
cmpsl
pop
daa
dec
xor
imul
rclb
in
sub
pop
sarb
inc
in
push
dec
aam
mov
loopne
daa
icebp
into
hlt
and
cmp
sbb
xorl
push
or
addl
insb
jnp
push
repnz
cltd
and
aaa
into
mov
adc
cmp
aam
flds
jae
cwtl
cwtl
rcr
add
popa
arpl
inc
adc
jp
imul
push
jae
mov
aad
call
cltd
aas
or
xlat
mov
dec
mov
or
pop
sti
in
in
out
sbb
mov
loope
jne
xor
mov
xor
jbe
dec
fiaddl
sub
int
cli
mov
mov
jb
lcall
lret
ds
dec
inc
adc
mov
xorb
fiaddl
mov
mov
mov
xchg
push
repnz
inc
std
sbb
in
push
push
add
nop
xchg
add
cwtl
dec
add
bound
xchg
pop
sub
dec
dec
xchg
pop
fmuls
inc
shrb
add
cmp
or
sub
ja
into
popl
inc
test
mov
sub
sti
push
jnp
clc
pop
lds
mov
inc
and
notb
cli
leave
jo
add
ljmp
or
jo
scas
mov
data16
adc
cmp
jecxz
clc
lret
incb
ja
cmc
mov
ficoms
sbb
adc
call
pop
iret
xchg
or
sub
pop
cmp
push
xor
pop
imul
stos
add
cltd
fistpll
sub
pop
mov
ljmp
xchg
out
mov
mov
or
sub
bound
lods
ljmp
nop
js
cld
daa
int3
mov
in
iret
jns
sub
loopne
push
xorb
js
loope
mov
flds
xor
xchg
jge
mov
sbb
xchg
push
inc
cli
and
or
outsb
add
loopne
nop
pop
dec
xchg
roll
mov
movsb
aaa
ficompl
mov
aad
nop
sarb
into
ficomps
cmp
push
or
push
add
mov
nop
and
sbb
push
inc
cltd
mov
xchg
fs
push
dec
addr16
shl
adc
pop
jmp
push
movsb
shlb
jmp
movsb
cmc
out
fstpl
dec
mov
xor
lahf
ud1
aas
push
repnz
sbb
ljmp
push
pop
scas
jge
cltd
popf
mov
pop
repz
loope
push
pop
pop
movsb
insb
jb
add
movsl
push
adc
fucomi
add
iret
insb
or
shr
std
cld
js
and
iret
pushf
xor
idivl
and
dec
pusha
cld
adc
aas
es
xchg
test
or
or
and
stos
test
dec
mov
test
nop
repnz
orb
test
push
jle
ficompl
gs
xchg
dec
xor
inc
mov
je
lods
xchg
or
sub
cld
popa
push
test
sub
mov
dec
inc
inc
and
mov
mov
sahf
jmp
add
pop
inc
cmpsb
adc
pop
repz
adc
jg
shlb
pop
cmpsl
insb
cmc
sarl
lds
popa
sbb
or
inc
daa
sub
jmp
jecxz
iret
std
jnp
xlat
out
and
jmp
push
xchg
enter
loop
out
push
and
lahf
iret
dec
adc
sbb
cmovne
jmp
mov
test
sub
dec
test
cmpsl
test
push
sub
or
push
push
lea
sub
mov
mov
dec
lods
int3
in
mov
jo
loopne
lahf
xchg
xchg
cmpsl
cld
bound
les
and
cld
inc
and
adc
xor
mov
dec
lahf
push
mov
imul
xor
cmp
lods
jne
or
inc
stos
xchg
pop
push
lea
ror
incb
and
stos
cwtl
fwait
rorl
scas
in
push
loope
inc
sbb
jo
lds
hlt
jnp
movsb
imul
mov
stc
arpl
or
push
inc
add
sbb
pop
jb
in
sbb
nop
jmp
cmp
mov
pop
dec
sbb
or
in
pop
int3
shl
add
push
ja
negl
mov
add
mov
mov
dec
mov
out
jb
sbb
shlb
mov
lods
jnp
xlat
push
pop
call
movsb
dec
dec
mov
rorl
icebp
es
stos
outsl
cwtl
pop
jmp
and
pop
sub
mov
cmpsb
push
test
imul
subl
lret
fistpll
mov
cs
pushl
push
xchg
shrb
sbb
dec
cmp
aad
xor
pop
sub
add
xchg
imul
out
outsb
or
imulb
mul
add
mov
int
jbe
xor
pop
jns
cld
fisubs
mov
sub
sbb
sub
scas
data16
call
mov
inc
fs
sahf
cmp
cmp
rcll
insl
jl
out
mov
cltd
inc
fnstenv
loop
fmuls
adc
jne
jecxz
jl
add
popa
insl
xchg
fcomps
fsubrl
icebp
push
mov
fs
mov
outsb
mov
inc
cwtl
sbb
jmp
adc
ret
or
nop
call
mov
lods
shlb
adc
enter
inc
inc
cmp
sub
outsl
mov
out
leave
lret
xchg
jno
xor
pop
mov
idivb
mov
pusha
ljmp
je
push
in
inc
stos
jp
loopne
mov
mov
lret
pop
clc
mov
push
mov
in
stc
push
arpl
mov
lock
insl
aaa
adc
jae
fnstcw
adc
lahf
das
jno
dec
jae
jg
push
in
adc
sub
push
mov
pop
lahf
xchg
xor
push
xchg
adc
inc
adcl
imul
rorl
pop
adc
xchg
mov
mov
lret
and
jp
nop
or
fisubs
rcl
dec
jae
addb
rcll
xlat
and
sbb
lock
cmpb
fnstsw
push
lods
fs
sub
icebp
push
push
fisttpl
stos
shrb
cmp
sti
jnp
add
fwait
loope
xchg
sub
clc
cmp
aaa
add
pop
xorl
sahf
iret
inc
push
fwait
jg
xchg
cmp
ret
lock
cmp
jle
sarb
inc
sbb
out
jg
mov
cmpsl
ds
jecxz
aad
lret
or
pop
push
mov
cmp
xchg
pop
xchg
adc
loopne
adc
lret
cmpsl
push
outsl
in
in
ss
inc
imul
outsl
imul
int3
sub
adc
inc
pop
enter
fcom
addl
push
scas
js
jae
xchg
into
and
mov
imul
mov
dec
cmp
cmc
ds
out
int
out
mov
or
cli
xchg
add
mov
adc
sub
cmp
hlt
cmp
add
pop
mov
fwait
or
in
xchg
in
enter
cmovl
cld
stos
xorl
jp
cmc
xorb
xchg
inc
loope
xor
add
and
divl
push
in
call
sbb
inc
filds
in
popf
mov
dec
mov
mov
repnz
stc
mov
js
ss
call
rcl
sbb
push
sbb
test
dec
fscale
adc
add
push
or
jb
mov
mov
aam
clc
mov
int3
jae
aaa
lods
inc
xor
pop
or
sub
cmp
jo
push
mov
mov
xor
int3
lret
cmp
xchg
stos
lcall
xlat
call
arpl
jnp
jmp
or
push
add
ss
xor
push
xor
cmp
or
xor
xchg
sub
dec
in
jb
iret
rorb
jae
shr
aas
jg
add
or
fisttps
imul
adc
sahf
xchg
mov
imul
loope
in
insb
pop
mov
clc
fisttps
sbb
cmpsb
mov
xchg
and
int3
outsb
loopne
xor
hlt
dec
adc
cmp
xor
adc
lcall
movsb
icebp
xlat
in
dec
out
stos
stc
out
push
dec
hlt
das
in
lret
ret
or
dec
add
inc
cmp
jb
xchg
sbb
push
inc
inc
aaa
out
ret
adc
pop
cmpsl
fiaddl
adc
lods
je
xlat
shrl
jno
push
mov
loope
into
divl
dec
pop
jb
mov
int
dec
adc
cs
sub
je
add
xchg
sbb
and
dec
lahf
mov
js
xchg
jne
popl
mov
rcrl
inc
mov
mov
ja,pt
mov
jecxz
pusha
int
int
inc
adc
mov
repnz
pop
xabort
out
lock
stos
pop
jp
mov
in
cmpsb
pop
lods
fs
jl
mov
push
inc
iret
cwtl
out
lcall
mov
roll
pop
and
push
inc
sbb
sarl
pop
lds
popa
outsb
cmpb
aam
and
cwtl
or
add
adc
dec
sbb
xor
insb
xchg
aas
stc
std
dec
imul
sub
das
jo
stos
ja
sarl
pop
add
mov
testb
lahf
jmp
mov
inc
ret
push
jle
dec
sub
movb
pop
cmp
or
into
dec
sub
lds
es
lea
insl
lock
dec
xchg
jmp
push
jge
mov
and
popa
mov
push
jnp
mov
lea
sbb
jbe
addr16
mov
ret
xadd
nop
mov
out
push
xchg
mov
loopne
mov
xchg
repz
rcll
jmp
loope
icebp
sbb
and
clc
mov
sbb
test
xchg
sahf
ljmp
jae
gs
jp
mov
test
add
aaa
nop
mov
sbb
das
dec
xchg
subl
int
loopne
push
sub
call
dec
orb
xor
and
lods
or
xchg
dec
mov
lret
mov
push
scas
jmp
jns
pop
iret
inc
mov
jb
pop
out
clc
repz
mov
push
cltd
sub
pop
and
insb
jmp
ja
shrb
mov
movsl
mov
ss
mov
jnp
jne
aam
fadds
aam
cmp
jp
bound
or
pop
shll
sbb
jne
stc
cltd
xor
loope
hlt
fwait
push
and
shlb
bound
xor
sbb
call
aam
push
mov
outsb
lock
or
mov
dec
push
mov
xchg
push
lret
mov
adc
ja
sti
out
arpl
cmpsb
sub
jo
test
mov
jge
push
cwtl
xchg
mulb
cld
cld
and
jg
xor
lods
ljmp
cmp
gs
cwtl
mov
jns
outsl
and
sar
add
pusha
push
clc
out
in
cmp
repnz
shll
out
cmp
es
sbb
je
mov
fxtract
js
lret
jno
jle
push
dec
rorl
cmc
push
fstl
int
inc
or
cmp
fsubs
lahf
out
fidivl
or
bound
addr16
mov
mov
mov
and
hlt
jns
lods
sahf
nop
mov
xchg
adc
add
and
pop
pop
push
mov
fstl
mov
adc
sub
sbb
adc
enter
push
psubq
mov
shlb
sub
mov
out
pusha
mov
cmpsl
sbb
pop
or
out
mov
mov
stc
jnp
sbb
jle
movsb
or
loopne
mov
xlat
xchg
mov
mov
xchg
int
xchg
stc
xor
lret
inc
je
lds
pop
mov
xchg
mov
inc
ss
test
xchg
cltd
mov
iret
sbb
cmpsb
pusha
sub
add
xor
stc
lods
adc
loopne
add
xchg
rolb
outsl
or
int3
mov
mov
cmp
scas
test
dec
fcmovbe
cmc
out
loopne
mov
sub
mov
cs
add
insl
mov
sbbb
adc
sbb
jbe
pop
add
sbbb
sub
cmp
stos
jbe
es
jae
ffreep
cmp
loop
add
test
mov
out
sti
jmp
jo
data16
inc
adc
popf
movsl
popl
xor
test
dec
inc
cmp
and
xchg
popa
addr16
or
jg
mov
fsub
icebp
pop
cwtl
mov
add
push
inc
sub
lock
mov
jp
fs
imul
fimull
xor
les
loope
loopne
pusha
aaa
xchg
fmull
clc
dec
js
gs
fdivs
dec
lea
dec
je
ret
add
in
sahf
repnz
out
xchg
add
daa
test
fxch
in
cmp
ljmp
push
js
sbb
ja
mov
mov
xor
adc
mov
into
dec
push
ret
xor
push
pop
xor
mov
xchg
lock
ds
xchg
cwtl
daa
add
xchg
adc
mov
fimull
bound
and
lock
enter
sarl
insb
adc
mov
mov
push
cmc
pop
xor
nop
ret
filds
int3
xchg
or
mulb
mov
movl
push
rolb
shlb
stos
insl
pop
jmp
cmp
add
lahf
js
cld
push
mov
ret
loop
movsb
je
and
test
mov
xchg
loopne
scas
sub
flds
popf
aas
bnd
das
in
xor
arpl
test
leave
fcomi
xchg
sub
jl
leave
fwait
push
and
cmp
inc
jbe
lods
mov
mov
insl
mov
fsubrs
pusha
pop
aam
stos
shll
xchg
in
push
push
cmp
movsl
xchg
jl
in
dec
sbb
inc
pop
xlat
sbb
imul
sbb
pop
mov
cld
sbb
pop
leave
aas
mov
gs
mov
loope
push
fsubr
adc
les
int
pop
ja
dec
mov
call
lahf
and
jne
jae
pop
cmp
hlt
pop
mov
into
test
lods
or
mov
cltd
fs
inc
xor
jmp
fidivs
or
repz
pop
mov
adc
pushf
inc
ljmp
outsl
in
jne
shrb
es
add
lret
in
imulb
gs
add
repnz
adcl
gs
sub
jns
jae
aaa
sbb
jmp
shll
fstpl
mov
int3
jmp
push
add
push
mov
push
mov
push
and
pop
ret
in
test
push
adc
xchg
stos
push
push
sbb
push
imul
cli
mov
cmpsl
sti
jmp
cmp
cmp
loopne
sbb
add
pusha
mov
fcmove
mov
lahf
shlb
lea
add
loopne
nop
and
push
sub
jg
push
arpl
aaa
fcomps
adc
mov
cmc
fcomip
lds
aam
sbb
call
xor
xchg
cmp
push
in
mov
jle
push
inc
fisubrl
dec
aas
cmp
jle
cmp
mov
mov
mov
inc
in
fcoml
arpl
push
push
cmc
movl
lahf
and
push
stc
add
test
mov
movb
cs
popa
jnp
in
dec
dec
and
cmp
xor
or
cmp
xchg
in
loope
hlt
popf
int3
xchg
dec
push
jle
loopne
inc
add
pop
mov
or
mov
fcomip
rcrl
and
push
dec
and
and
mov
jne
xchg
cmp
bound
mov
xor
fimuls
lea
dec
mov
push
xor
fs
xor
or
jp
aas
test
outsb
xchg
mov
mov
cmp
and
out
fcoml
cmc
pop
push
repz
inc
frstor
jl
cmp
stos
pop
fmull
add
sbb
hlt
pushf
inc
or
outsl
pop
nop
mov
shlb
daa
xchg
and
sub
pop
xor
int3
ja
scas
rcrl
rorl
dec
ja,pt
or
lea
sbb
movsl
jp
je
aas
fldt
int
cltd
testl
push
dec
push
mov
mov
cs
lock
lahf
push
pop
nop
out
mov
cli
loop
cmc
mov
cmp
xor
push
jle
sbb
in
mov
jae
adc
ljmp
lds
je
adc
lahf
and
mov
mov
push
mov
lret
mov
rolb
adc
pop
sarl
popf
movq
pop
cli
fisttpl
push
mov
cmpsb
cltd
lcall
aam
and
jns
cmp
sbb
in
jg
dec
add
mov
stos
arpl
stos
lcall
int
and
jecxz
sbb
add
rcrb
adc
xor
jnp
in
lods
and
cld
dec
cwtl
mov
mov
repz
sub
push
sub
fwait
aad
ss
pop
popf
jge
shll
ret
imull
add
mov
mov
enter
mov
mov
and
inc
adc
add
adcb
andb
jge
sbb
xchg
fisubrl
mov
int3
fimuls
mov
mov
hlt
mov
imul
jecxz
lea
arpl
cmp
stc
jmp
or
lcall
mov
xor
leave
popa
mov
xchg
int3
shll
int3
push
sbb
mov
mov
loopne
mov
cmp
cmp
xor
into
dec
sub
cmpsl
mov
mov
cwtl
dec
les
loopne
lock
xchg
fistpll
sub
mov
cli
nop
or
les
jne
adc
loop,pt
inc
push
xchg
push
lahf
movsl
popa
hlt
shl
and
scas
mov
adc
xor
cmp
out
call
psadbw
adc
aaa
fldcw
or
mov
cs
test
fstpt
jp
and
rcrl
ja
icebp
repz
popa
add
cmpb
ja
pop
sbb
jo
mov
push
mov
movsl
lods
mov
inc
mov
lret
mov
lcall
and
sbb
push
insb
roll
dec
mov
mov
and
xor
add
jp
add
xchg
xor
insl
repz
add
and
fs
dec
xor
pop
pop
sbb
fdivs
add
pop
inc
bound
leave
or
pop
jg
dec
and
pop
mov
test
je
cmp
jl
idiv
clc
mov
imul
out
inc
out
cvttps2pi
sbb
and
push
push
out
mov
fmul
scas
sbb
pop
xchg
pop
mov
jb
xlat
mov
lret
push
mov
mov
push
mov
xor
cld
arpl
leave
cmp
std
rorl
push
push
jns
sub
push
mov
jno
mov
xchg
adc
push
xchg
pop
or
aaa
mov
mov
and
push
sbb
cmp
cmp
push
inc
std
xchg
je
shrl
ljmp
ret
cld
mov
jmp
push
popa
aam
sub
and
xor
call
hlt
loop
push
dec
ss
push
fiadds
ss
mov
sahf
mov
xchg
xorb
test
leave
les
xor
or
mov
js
xchg
test
xor
test
out
leave
cltd
lret
add
xor
mov
iret
mov
fs
xchg
xor
lock
fistps
dec
fucomip
mov
aas
aas
or
mov
test
sub
xor
mov
js
fidivl
jl
aaa
fwait
int
test
dec
inc
mov
ss
or
lea
bound
or
lret
adc
jnp
test
je
xchg
add
outsb
aam
lcall
dec
cmp
aaa
xchg
std
mov
inc
cmp
iret
rcll
testb
inc
add
fcomi
sub
jl
inc
lock
decb
jbe
in
xchg
fwait
mov
in
sub
lahf
frstor
jae
lea
sub
pop
adc
dec
jge
and
das
cmc
xor
pusha
xchg
xor
push
pop
into
ss
insl
bound
ljmp
movsl
sbb
push
sbb
or
mov
loop
bound
sarb
dec
das
aas
jp
xchg
xchg
cmpsb
xor
mov
jge
mov
or
jnp
lods
push
xor
xchg
call
bound
popa
subb
ljmp
sub
xlat
repz
in
mov
test
push
ficoml
push
mov
push
imul
xchg
rcl
imul
adc
sub
jno
nop
adc
es
mov
pushf
rorl
pop
sub
aad
sti
adc
lcall
and
in
cmp
jl
in
pop
inc
outsb
sbb
test
aam
clc
fs
push
push
dec
enter
push
data16
lock
pop
aam
and
hlt
or
leave
mov
jl
mov
adc
jns
and
dec
fnstenv
aad
cmp
push
cmc
mov
dec
popf
push
mov
dec
push
push
icebp
rcll
or
jl
pop
xor
dec
xchg
test
in
les
outsl
mov
popf
jmp
push
inc
push
dec
fdiv
xor
sub
sub
push
add
sub
dec
mov
dec
jg
and
cmp
faddp
movsl
add
cmp
in
inc
xchg
dec
xchg
aad
daa
dec
inc
xchg
in
loopne
pop
inc
pop
leave
mov
int3
ljmp
inc
ss
inc
xor
shl
hlt
push
ss
xchg
pop
fidivl
repnz
lea
daa
adc
out
fsubrs
lea
adc
fldl
sti
xor
or
hlt
xchg
leave
mov
adc
rclb
adc
stos
push
or
mov
pop
stos
mov
xchg
rclb
sub
jp
jne
and
push
adc
dec
negb
ret
icebp
jge
cmp
mov
pop
pop
dec
loop
xchg
xchg
scas
loop
pop
push
iret
push
popf
jge
xor
hlt
jmp
cmp
scas
jl
xor
iret
inc
jmp
fucompp
mov
das
push
adcb
inc
cmp
int3
sub
pop
cli
dec
cltd
mov
xorl
les
xchg
xor
repnz
add
mov
sbb
aaa
add
or
cmp
idivl
addr16
in
mov
dec
dec
int
add
xor
scas
lock
mov
pop
add
push
mov
mov
mov
and
loope
xlat
out
mov
frstor
jecxz
movsl
mov
inc
mov
and
adc
cld
outsl
fcoms
sbb
pop
js
int3
in
add
in
jl
les
pop
in
sub
sbbb
jns
gs
mov
icebp
ret
push
outsb
sub
sub
inc
and
xchg
sbb
into
mov
sahf
in
inc
jno
ds
cwtl
jl
jl
mov
in
cmp
outsl
sbb
mov
aam
adcb
fnstenv
sbb
ss
fnsave
sub
xor
repnz
adcl
and
pop
test
inc
mov
out
data16
test
adc
sub
dec
je
mov
and
cmc
sbbb
in
lret
not
and
jp
mov
mov
mov
hlt
mov
inc
lahf
ds
jp
stos
push
sub
jbe
push
les
or
in
dec
mov
shlb
push
hlt
testl
mov
xchg
mov
or
add
popa
push
fists
les
ds
outsb
leave
xor
test
cltd
cld
mov
sbb
cmp
mov
movsl
jns
in
jbe
je
clc
adc
aam
inc
mov
test
add
push
shrl
ljmp
sub
loopne
dec
lahf
movsb
pop
iret
xor
imul
ficoml
out
cmpl
lret
out
out
rdmsr
push
or
mov
inc
pop
cli
mov
xadd
cmp
pop
add
mov
ja
enter
es
push
and
push
mov
pop
pop
mov
ljmp
push
loop
xor
stos
xlat
in
rol
mov
mov
mov
mov
mov
js
lret
and
and
push
daa
stos
xchg
push
movaps
push
movsl
aad
mov
add
stc
xchg
stos
fs
pop
mov
pop
push
adc
push
faddl
mov
jae
mov
mov
ds
dec
movsb
ja
aad
imul
sub
cmc
push
out
xchg
push
inc
cmp
cmp
leave
sbbb
inc
jp
dec
addr16
mov
out
and
jecxz
cmp
add
jge
mov
les
lea
sbb
or
fsubl
icebp
lea
jne
mov
test
and
jp
jns
cld
xorl
out
aam
sub
lods
test
dec
sub
mov
mov
dec
push
adc
xlat
push
repz
fbld
aam
outsl
mov
xor
adc
inc
lods
outsb
jl
scas
loopne
pop
sbbb
outsl
mov
fstpt
sub
inc
sbb
mov
mov
sbb
xor
mov
repz
add
add
add
push
xchg
cmc
push
iret
daa
push
push
fldl2t
gs
stos
repz
mov
and
xchg
jno
inc
movsl
outsb
dec
xchg
mov
shrl
jns
fldt
adc
mov
mov
mov
sub
add
mov
lcall
pop
test
sbb
ret
push
aad
sbb
aas
out
inc
xor
adc
mov
sbb
lea
dec
pop
lods
mov
cli
mov
pop
dec
pusha
xor
xor
cld
mov
insl
pop
mov
lahf
jecxz
cld
rol
sub
pop
mov
cmpsl
sub
int
dec
mov
cmp
add
ja
pop
inc
in
insl
ss
out
mov
bnd
adc
mov
xchg
add
sub
xor
movsb
dec
mov
lods
xchg
mov
pop
mov
dec
push
call
fs
mov
sub
cmp
sbb
cs
fbstp
mov
decb
cmp
out
lret
ja
mov
inc
rol
pop
daa
cmp
scas
outsl
bound
mov
cmp
jmp
jl
clc
rcrl
sti
and
loope
cwtl
sbb
sbb
inc
decl
xchg
jmp
out
pop
pop
sub
xchg
loop
lret
inc
dec
ret
inc
pop
outsb
mov
out
in
addr16
inc
je
mov
aaa
mov
movl
aad
inc
or
jae
push
mov
dec
shr
enter
nop
ds
fs
lcall
fsubrl
daa
cmp
loope
repnz
mov
arpl
sti
xor
sbb
mov
dec
jmp
push
mull
pop
aaa
test
scas
insl
jmp
or
mov
ljmp
hlt
inc
adc
xchg
or
jle
dec
mov
test
xor
shlb
add
out
pop
sarl
les
pop
testb
orb
daa
adc
and
cld
stc
mov
scas
out
lds
fisubs
dec
fimuls
cmp
jle
mov
inc
xor
adc
dec
mov
je
imul
test
jbe
stos
movsb
xor
push
scas
xchg
imul
xor
xchg
lods
push
ss
lret
add
pop
jge,pt
mov
rolb
xor
scas
cmp
sbb
inc
mov
gs
or
loopne
sbb
pop
js
xchg
cmc
cmpsb
jge
pop
rorb
inc
add
fstpl
cli
pop
repnz
push
nop
mov
jne
cmc
aam
loopne
stc
lret
pop
push
out
lcall
movsb
add
mov
out
aas
shl
int
pop
push
and
mov
sbb
out
mov
pop
das
mov
data16
jecxz
sub
call
out
dec
lret
mov
sbb
outsb
adc
in
mull
xchg
mov
cmc
push
jb
test
push
sbb
jp
pop
lea
nop
shll
adcb
cmpsl
leave
rcl
jnp
push
cltd
mov
shr
xchg
mov
push
or
mov
xadd
movsb
sbb
dec
inc
mov
jo
mov
add
add
aad
xchg
dec
push
jge
add
negb
mov
fstps
mov
push
int
jge
pop
cmpsl
xor
mov
aas
stos
popa
nop
lea
fcom
pusha
aas
fdivs
les
mov
test
outsb
das
xchg
es
pop
xchg
fstpl
mov
in
cld
call
mov
aam
test
fdivrs
add
imul
pop
icebp
enter
add
jl
mov
cwtl
sbb
aam
cmp
cwtl
dec
mov
ja
hlt
or
and
ljmp
add
mov
repz
add
jge
cli
fimull
mov
and
inc
fstl
std
ja
pop
imul
push
fwait
jnp
popa
pop
jle
mov
fldz
push
fidivrs
push
arpl
pop
or
dec
subb
sbb
dec
sbb
fisubrl
das
fistpl
jo
test
xchg
aad
mov
xor
mov
xor
lock
repz
iret
push
adc
jp
add
xor
loop
jae
jp
in
inc
int
and
push
cmpb
icebp
inc
pop
lods
xchg
je
fsubl
fistl
sub
mov
insb
jmp
push
imul
or
and
xor
sbb
mov
cmpsb
in
int3
jmp
ficompl
pop
jg
push
adc
mov
ja
imul
hlt
movsl
sbb
jae
xchg
cmpsb
xchg
xor
outsb
jae
lods
sub
pop
and
adc
pop
jne,pt
cmp
aaa
xchg
sub
cmpsb
ds
mov
mov
and
pop
mulb
movsl
aad
cmpb
or
sbb
lods
push
dec
lret
xor
and
and
xor
sub
test
outsl
push
cwtl
jl
setle
jl
sub
xchg
push
movsb
arpl
ret
ret
leave
xor
sarl
jno
jmp
out
call
lods
xor
xor
pop
jmp
jmp
mov
add
adc
lods
xchg
fimull
cmpsb
add
ja
inc
aam
mov
mov
cli
inc
out
mov
inc
push
lds
mov
jns
xchg
mov
inc
lahf
cmp
pushf
loope
shrb
imul
push
jo
xor
lret
outsb
fwait
jae
shlb
out
xchg
push
loopne
dec
sbb
or
jg
cmp
inc
cmp
pop
ret
mov
add
push
test
in
loopne
xor
jae
pushf
rol
lock
das
add
pop
mov
rorl
mov
ret
aas
rcrl
mov
ss
pop
cltd
icebp
icebp
bound
and
js
jo
xchg
and
bound
mov
sbb
repz
pop
repz
movsb
icebp
jmp
xchg
adc
mov
or
stos
inc
je
cwtl
rorb
add
sbbb
clc
push
pop
xchg
pop
iret
mov
movsl
add
popa
stc
jle
mov
fistpl
in
xor
orb
int3
cmp
adc
or
jbe
insb
lea
jmp
mov
xor
rclb
testl
xlat
out
jae
lret
stos
int3
sbb
add
aaa
xor
fistpll
pushf
cld
daa
add
imul
fdivrl
cmpb
mov
jne
mov
paddusb
and
lds
xchg
push
mov
lret
rol
dec
pop
jle
xorb
pop
sub
dec
push
push
inc
nop
lcall
mov
arpl
jno
ds
lahf
je
pop
lods
xchg
icebp
xor
stos
pop
clc
lea
pop
jge
movsl
push
push
inc
push
aam
lret
mov
or
loop
cmp
mov
sahf
fistl
cwtl
inc
lahf
add
inc
add
inc
mov
pop
push
jmp
mov
xchg
push
dec
fst
and
jle
js
sbb
lret
or
test
push
pushf
movsl
adc
push
mov
mov
jae
lock
jb
punpckldq
popa
adcl
dec
std
subl
cmp
in
icebp
rcrb
pop
test
sbb
cmp
cmp
fisttps
push
xchg
cmp
das
in
cmpsl
inc
xor
add
scas
jnp
mov
push
jbe
fcoms
add
mov
sbb
jmp
push
inc
test
jge
mov
aaa
inc
lods
sbb
sbb
jnp
scas
lea
pushf
add
stc
or
xor
loop
adc
insl
mov
xchg
gs
mov
out
in
and
cmp
add
daa
imul
pop
pushf
sub
jp
lock
loopne
cltd
lods
add
loop
leave
bnd
dec
insb
inc
dec
repnz
adc
flds
push
mov
sub
ja
xchg
loope
inc
dec
sbb
push
jnp
mov
xlat
sbb
lock
cmpb
cli
cmpb
pop
pop
mov
mov
dec
cs
push
inc
xchg
inc
dec
loope
inc
int3
mov
imul
jecxz
out
dec
ret
shrl
mov
in
cltd
pop
out
insl
push
cmpl
xchg
roll
je
dec
dec
push
fwait
and
xchg
faddp
daa
ja
xorb
enter
call
movsb
jb
shl
xor
adc
mov
sub
cmp
xor
xor
add
jne
out
mov
lcall
stos
imul
es
jle
lret
lret
data16
push
popa
ja
mov
xor
pusha
sbb
sbb
fs
sbb
popf
push
enter
jmp
cmp
insl
scas
out
adc
test
pop
cmp
jb
pop
mov
dec
and
cltd
mov
data16
cmp
jno
lods
aaa
fs
mov
clc
xor
xor
frstor
pop
xabort
adc
and
popa
mov
sahf
mov
add
and
sub
sub
ret
pop
inc
jmp
fdivl
scas
loop
arpl
mov
cmc
jbe
into
insb
scas
jle
fidivs
and
rolb
dec
sub
lds
mov
enter
adc
add
mov
cmpb
dec
in
push
es
loopne
mov
cmpb
cmp
inc
mov
xor
jne
pop
inc
int
cmp
pop
xor
and
fistl
lcall
pop
or
inc
pop
cmp
mov
out
pop
xor
dec
sbb
mov
fnsave
rcrb
pop
sbb
les
mov
adc
in
in
pop
pusha
push
cmp
xor
cli
mov
mov
sbb
jb
int
mov
test
mov
lahf
dec
sub
sbb
stos
xchg
fldl
clc
jo
mov
pop
push
jp
dec
cwtl
xor
cli
cmp
cmpsl
dec
insl
mov
cmp
dec
lods
sub
dec
pop
mov
push
outsl
adc
adc
xchg
push
mov
push
movsl
out
push
add
pop
jo
mov
sbb
mov
dec
jp
rcrb
cmp
pop
imul
out
outsb
push
mov
sub
push
mov
jae
inc
lods
cwtl
pop
fstpl
inc
mov
fidivrl
push
pop
std
lahf
ss
mov
scas
jl
fdivl
jecxz
pop
js
pop
test
jno
mov
test
mov
sub
adc
cmp
pop
push
cmp
ror
jo
addr16
mov
les
cwtl
insl
jmp
and
add
lret
loop
sbb
push
inc
ss
dec
pushf
sbb
repnz
filds
sub
shr
dec
push
mulb
adc
pop
dec
loopne
fisttpll
out
lahf
xchg
fisubs
and
xchg
mov
fcoml
or
add
mov
sbb
mov
push
inc
not
jmp
jecxz
push
roll
rorl
ret
mov
fmull
aad
shll
pop
cmp
xor
fs
add
mov
pop
pop
xchg
mov
clc
dec
stos
orb
sahf
loope
nop
lahf
dec
fists
fwait
inc
in
jecxz
cmp
mov
and
sub
int3
push
notl
outsl
mov
pop
mov
loopne
stos
aad
mov
mov
xchg
xchg
aad
loopne
mov
outsb
or
ret
aam
add
add
cmp
inc
lods
ret
js
push
and
in
sub
pop
mov
push
cld
jl
fbstp
je
pop
test
jl
mov
mov
or
pusha
jmp
cltd
add
mov
or
ret
jne
mov
movsb
int
fbld
dec
popa
in
sbb
jmp
pop
cld
mov
sti
and
pop
loopne
jg,pt
cmp
outsl
repnz
movsl
sub
jns
sbb
lahf
fiaddl
mov
shr
js
mov
xchg
repnz
fistpl
popf
ljmp
leave
cmc
ljmp
test
fildll
inc
add
inc
call
cmpb
adc
sbb
icebp
scas
mov
pop
sub
rol
out
or
inc
pop
xor
sti
inc
aam
cmp
xchg
inc
xchg
cmp
sbb
push
out
in
cld
jne
int
lods
sbb
subl
inc
movsb
ss
xchg
push
repz
sbbb
daa
cmp
pop
data16
ds
xor
shr
iret
stos
push
and
call
arpl
inc
jb
lret
add
mov
xor
adc
or
loop
idivb
lods
aad
pop
mov
ret
xchg
mov
push
std
pop
cmpl
and
out
xor
outsl
mov
call
in
jle
sbb
mov
push
xchg
out
loop
loope
dec
lock
jecxz
mov
inc
sbb
pop
mov
je
push
or
pop
out
pushf
pop
jp
mov
push
xchg
sub
dec
rorb
sbbl
mov
xor
imul
jp
movsb
dec
test
ret
ds
add
mov
push
iret
pusha
repnz
repz
mov
mov
pop
mov
push
inc
ret
hlt
mov
pop
movsb
push
push
cmp
pop
sbb
fdivl
out
call
in
je
mov
aad
bound
test
fwait
repz
daa
pop
dec
loop
js
fcmovnu
adc
adc
aam
std
mulb
lea
cmpsb
cmp
insb
in
xchg
mov
faddl
outsl
xor
jg
mov
push
jnp
andl
push
out
ret
cwtl
lock
pop
mov
es
into
test
scas
loope
outsl
jae
mov
jge
or
pusha
mov
add
jnp
shl
das
lcall
push
fcoms
mov
ljmp
adcl
xor
xor
xor
nop
pop
and
xor
pop
test
inc
lods
xor
aad
jg
dec
cmp
ret
aad
xor
adc
pop
mov
sahf
out
fimuls
loopne
aad
loop
out
jle
sbbl
push
jns
inc
int3
or
gs
push
mov
pushf
pop
xchg
out
jle
jb
and
pop
shl
cltd
mov
or
scas
pop
dec
mov
iret
sub
fcoms
lret
xchg
cmpsl
or
push
popf
xchg
cli
xor
mov
and
or
jo
add
xor
and
pop
inc
mov
add
adc
jnp
pop
inc
stos
pavgw
call
and
jmp
jbe
xor
pop
mov
mov
dec
data16
mov
xor
and
mov
scas
int3
push
mov
loope
inc
mov
fs
push
jmp
leave
and
xor
popa
sub
test
lea
sub
fisubrs
hlt
cmc
int
fmuls
ja
enter
and
add
push
ret
loope
push
lods
lret
iret
insl
pop
imul
psubb
xchg
sub
ret
stc
pop
lds
add
repnz
fnstsw
shll
or
es
cmp
xor
cmpsl
add
cwtl
mov
xchg
popf
std
inc
mov
aam
xchg
mov
sbb
pop
inc
dec
cmpsb
xor
ret
xchg
mov
mov
or
in
adc
lock
jecxz
inc
repz
cmp
or
add
sahf
cmpsb
jae
push
and
out
mov
int
mov
cli
sbb
mov
mov
ds
adc
cltd
je
push
call
sbb
fs
jmp
adc
fidivs
jle
cmc
pushf
stc
fists
pop
xchg
and
pop
push
shr
inc
loop
sub
mov
add
lds
mov
cmc
jge
icebp
jl
push
decl
jecxz
push
stc
into
adc
push
icebp
mov
imul
in
jo
int
js
or
mov
hlt
ja
mov
lods
xor
aaa
jno
lea
pop
iret
cmp
jp
shll
xchg
movb
jmp
push
jl
in
fildll
and
and
mov
adc
mov
and
pop
rcrl
cld
add
divb
loopne
adc
push
adc
out
sub
mov
push
in
mov
sub
cmp
cli
movsl
sbb
jno
xchg
xor
fwait
cmp
sti
cmp
rcll
cmp
movsl
test
cmpb
out
rorb
leave
sbb
dec
cmp
pop
and
push
jecxz
pop
scas
lahf
adc
addr16
mov
dec
pop
cmpsb
sbb
ss
cmp
imul
repz
adc
sub
xor
add
adc
lcall
sbb
lock
lock
adc
lea
mov
nop
mov
hlt
test
sbb
insb
popf
mov
or
inc
cmpsb
pop
push
in
jecxz
les
filds
ffreep
push
stos
cmp
push
stos
jmp
mov
aaa
arpl
adc
sbb
dec
pop
ret
mov
cmpsb
add
jle
jmp
les
cmpsb
andb
in
daa
xchg
or
jae
stos
ja
push
sub
and
cmpl
or
ficoms
sbb
idivb
outsb
inc
add
shlb
shll
add
sub
lret
xor
mov
es
das
test
sarl
into
and
nop
repz
incl
loopne
mov
fadd
xchg
jmp
movsb
daa
and
xor
xor
popf
jge
int
ret
test
mov
fsubrl
iret
leave
inc
jl
mov
push
popf
andl
jmp
andb
loop
out
jnp
mov
fdivrl
out
sbb
xchg
sbbl
sbb
push
jnp
into
mov
icebp
mov
push
pop
xchg
and
pop
jmp
mov
cmp
test
mov
or
dec
adc
stos
cmp
je
insl
lcall
out
cwtl
lock
dec
jle
mov
lods
into
push
dec
out
mov
shl
pop
push
or
adc
sub
mov
xchg
inc
ret
mov
sub
lds
inc
or
ljmp
mov
pop
jmp
ds
nop
sbb
ljmp
jns
adc
xchg
xor
dec
mov
adc
mov
psubq
aad
lahf
insb
xorl
cmp
push
mov
xchg
push
das
lea
hlt
mov
mov
jno
or
xor
and
ret
clc
and
xchg
ljmp
or
pop
test
into
mov
sar
xchg
imul
mov
ljmp
loope
ds
add
cld
mov
pop
adc
mov
pop
add
lahf
sbb
mov
daa
fwait
mov
inc
in
scas
inc
sub
out
sbb
xlat
ljmp
sbb
divb
or
cmp
daa
mov
cmp
jg
loopne
cmp
and
mov
xor
in
jae
frstor
movsb
sbb
iret
pop
arpl
mov
shr
cmp
cmc
sbb
or
fwait
test
mov
mov
hlt
shrb
cwtl
cmpsb
int3
push
pop
add
ja
ljmp
rol
mov
push
enter
sub
aad
and
je
pusha
mov
pop
pop
push
sub
test
pusha
fs
inc
xchg
and
pop
out
ljmp
in
add
shlb
and
jl
mov
or
test
iret
xchg
fcompl
jl
mov
repz
cld
add
adc
cmpsl
sbb
std
lods
js
pop
std
pop
adc
mov
jnp
divb
lods
mov
ljmp
dec
dec
mov
idivl
ja
popf
push
cmp
popa
lock
pop
in
jnp
loope
or
imulb
cmp
insl
mov
add
jle
mov
cmpsb
mov
push
adc
int3
scas
inc
in
mov
jmp
in
dec
popf
dec
adc
fcmovne
and
dec
mov
aas
xchg
xor
mov
std
adc
adc
mov
cmpsb
fisttps
sahf
in
push
mov
aas
call
adc
leave
and
and
cmpsb
xor
int3
adc
pop
mov
in
or
jae
mov
sub
mov
sarb
dec
inc
fnstcw
inc
jne
xchg
push
add
adc
faddl
es
sub
jae
jne
mov
adc
mov
jge
pop
mov
xchg
mov
dec
or
dec
add
and
pop
jae
data16
inc
add
outsl
xlat
das
fsubrs
jmp
movsb
mov
add
in
mov
nop
rep
js
cmp
addr16
aas
push
mov
inc
pop
rol
mov
loope
cli
or
insb
movsb
outsl
inc
mov
es
lods
cmp
fsubr
stos
add
mov
push
sbb
or
mov
ficomps
lods
ja
sub
mov
push
pop
mov
adc
jge
addl
loope
sarb
xchg
push
dec
jp
or
mov
icebp
mov
push
popf
pop
dec
adc
push
in
pop
jge
test
rcrb
outsb
jl
shll
jg
mov
cli
mov
mov
popf
in
sarl
movsbl
lea
add
shl
pushf
sbb
lods
add
lea
neg
in
out
pop
xor
adc
xor
les
pop
xchg
dec
lods
out
cli
push
in
mov
push
sarb
jle
mov
mov
or
scas
mov
dec
out
stos
sbb
ja
out
pop
jb
xchg
out
leave
lea
fstps
sub
xchg
xlat
sbbb
xchg
xchg
xchg
mov
mov
push
adc
xchg
push
sbbb
mov
sub
pop
je
dec
mov
lock
add
xchg
addl
dec
inc
mov
inc
gs
xchg
ja
inc
aas
mov
xchg
pop
iret
jp
push
mov
aas
bound
pop
in
int
pop
in
psubb
pop
and
out
shlb
and
cmpsb
pop
negb
nop
nop
mov
ret
mov
adcl
push
inc
movsb
xor
fistpll
roll
add
dec
cmp
dec
xor
cmpsl
sub
cltd
sbb
jge
icebp
fildll
push
hlt
jb
call
aaa
cmp
jg
shl
popa
andl
movsl
push
mov
xor
cmpl
inc
xor
cmc
xlat
sbb
shrd
das
in
add
pop
mov
inc
mov
js
mov
inc
fistpl
lods
mov
fcoml
and
cltd
mov
outsl
divl
sub
mov
jo
outsl
jae
inc
cld
enter
mov
jns
faddp
js
sbb
xchg
xor
repnz
fwait
leave
fwait
dec
out
pavgb
push
int3
pop
inc
pop
in
jo
pusha
add
es
mov
ds
sar
pop
adc
jbe
jbe
push
cmp
push
test
in
std
lods
test
pop
inc
push
mov
xchg
or
cld
cli
pop
jbe
je
pop
lea
xor
rcl
xor
test
push
jo
mov
out
pop
ljmp
or
xor
add
dec
mov
mov
fnsave
outsl
mov
and
imul
jo
lcallw
repnz
add
add
shl
in
xchg
outsl
push
inc
adcb
push
pushl
cmpsl
xchg
fwait
insl
mov
sub
shld
sub
xchg
dec
jp
fwait
movsl
mov
push
xchg
out
xchg
cmpsb
xor
jb
sti
pop
sub
lods
scas
mov
mov
xor
cs
mov
test
fidivrl
xor
aas
loope
aad
mov
or
rclb
mov
cmp
xlat
pop
js
xor
adc
roll
xor
test
fmuls
push
inc
hlt
xchg
cld
leave
mov
rolb
bound
shlb
sbb
add
adc
adcl
xchg
inc
test
imul
xor
jl
sub
sahf
xchg
push
push
mov
add
mov
sbb
inc
shll
iret
lods
or
sarl
popf
push
orl
mov
push
gs
filds
mov
gs
push
pop
mov
sbb
imul
adc
sub
sbb
andl
and
xlat
mov
outsl
adc
sbb
adc
inc
call
out
adc
call
jle
inc
loopne
sbb
cmp
neg
push
fdivr
out
sar
mov
xor
inc
or
sbb
loop
xchg
insb
adc
leave
movsl
test
xchg
das
mov
adc
xor
shl
aas
pop
sub
mov
decl
inc
mov
mov
jo
xchg
inc
adc
cmp
cmp
iret
ss
pop
into
cmp
push
and
and
jp
mov
fidivl
cs
xlat
mov
jae
mov
rcl
xchg
xor
or
dec
xchg
repz
loopne
dec
sub
inc
xchg
xor
xchg
insl
or
je
popf
xchg
nop
adc
jb
test
aad
sti
imul
aad
into
adc
orl
cmc
stos
loop
inc
xor
fists
iret
xchg
sahf
cmpsb
repnz
fimull
fwait
and
imul
dec
movsl
jl
push
daa
adc
sti
push
sub
jmp
jnp
std
mov
mov
mov
movsb
or
push
push
sub
icebp
sbb
jmp
ret
xor
cmp
push
loop
cli
jp
xchg
mov
cmp
fstps
cmp
aas
dec
sbb
jg
jo
lret
nop
scas
mov
or
sub
pushl
mov
inc
xor
dec
movsl
mov
cs
jp
outsl
fs
gs
lret
dec
or
stc
shrl
shlb
sbb
hlt
sub
lods
dec
aam
push
cmpsl
dec
add
shlb
lea
test
movsb
dec
jnp
icebp
xchg
fimull
jo
mov
jnp
mov
xor
pop
iret
test
inc
adc
dec
xchg
jne
mov
sahf
mov
js
dec
add
hlt
lock
cmp
xchg
xchg
fsubrl
pop
test
in
jo
mov
outsl
jb
inc
lahf
fildl
fistpll
or
ss
popa
data16
mov
lea
mov
popa
nop
addl
pop
test
pop
pop
push
mov
add
push
mov
dec
lods
add
dec
inc
mov
mov
or
add
pop
xor
leave
leave
push
jnp
movsl
fwait
adc
push
jnp
add
mov
repnz
imul
xor
repz
dec
mov
loopne
es
push
mov
xchg
mov
cmp
xchg
jae
ljmp
pop
push
adc
sub
in
gs
scas
mov
lret
aad
mov
add
in
daa
mov
adc
dec
push
xchg
dec
pop
or
scas
cmc
pop
mov
out
hlt
leave
sub
jmp
add
mov
inc
aad
mov
in
sbbb
out
cmp
jno
lcall
sahf
mov
mov
pusha
bound
xor
mov
sub
mov
cmp
pop
fistpl
inc
inc
adc
loope
xor
enter
inc
mov
xor
and
movl
inc
es
andl
xchg
out
cli
fmul
int3
xor
stc
cmpsb
xor
mov
pop
dec
mov
mov
flds
mov
mov
mov
jp
pop
inc
roll
push
adc
mov
add
stos
mov
sub
in
and
mov
mov
dec
test
or
cmp
xchg
dec
iret
or
add
cld
lcall
aad
pusha
mov
stos
mov
test
xor
imul
mov
mov
lods
jmp
out
cmp
mov
push
in
adc
pop
test
and
fs
adc
fldenv
ret
push
out
mov
sti
je
mov
xorl
push
fistpl
je
out
out
in
leave
loopne
sub
sub
shll
ret
sbb
mov
and
ljmp
add
ljmp
faddl
in
mov
or
hlt
inc
cwtl
mov
fbstp
mov
nop
orl
cmp
out
and
sahf
adc
subl
mov
xchg
mov
cmp
mov
subl
inc
jle
cmp
std
mov
xchg
xchg
adc
pop
hlt
outsl
dec
sbb
fistl
add
xor
cmpsl
lret
push
sub
mov
sbb
pop
mov
mov
bound
push
test
adc
push
mov
xchg
imul
test
int3
xchg
movsl
add
loopnew
popa
imul
adc
bound
cli
jno
and
imul
outsb
unpckhps
mov
adc
jmp
mov
jbe
xor
cs
cmp
inc
pop
shll
scas
cmp
dec
cmp
rcrb
in
ljmp
fidivrs
push
insb
repnz
add
dec
and
in
mov
push
loope
jnp
mov
add
or
xlat
movsl
pop
shlb
call
shl
repz
adc
mov
dec
or
jecxz
xchg
stos
jg
pop
out
and
hlt
mov
adc
stos
gs
filds
in
add
and
fisubl
cmp
xchg
xor
cmp
or
test
xor
cmp
aad
fidivrs
mov
pop
mov
bnd
push
mov
repnz
jne
dec
inc
lret
and
sbb
xchg
push
outsb
les
pop
mov
mov
cvtpi2ps
out
leave
pop
and
mov
std
mov
int3
test
lds
fmul
in
add
dec
into
mov
sbb
jp
fstps
or
sub
sub
jns
dec
lcall
pop
pop
insb
xchg
adc
fimuls
cld
insb
ja
pop
jg
add
xor
and
divb
inc
sbb
arpl
add
sub
call
in
pop
mov
iret
sub
iret
dec
addr16
xchg
cmp
adc
pop
mov
popf
in
out
das
xor
mov
and
std
int
xchg
ja
add
mov
xchg
jno
jnp
jno
add
push
mov
dec
mov
and
or
and
ljmp
push
call
inc
les
jge
jle
test
shll
dec
mov
mov
pop
cmp
iret
stc
int3
cltd
cmp
ljmp
cmc
cli
push
xchg
rclb
xlat
in
jo
int
into
xchg
mov
lret
cs
daa
adc
sub
lret
add
fdivs
add
xor
and
and
add
inc
popa
pop
xchg
movsl
out
roll
stc
jno
lahf
mov
xchg
cs
jle
and
mov
jae
mov
mov
iret
mov
outsl
test
hlt
and
pop
inc
cmp
mov
nop
jno
nop
pop
inc
aas
add
xchg
sbb
pop
xor
fs
jmp
fidivrs
lods
leave
pushf
mov
sbb
psllq
movsl
adc
mov
xor
test
sahf
shlb
imul
cmp
mov
sub
lret
and
outsl
sub
jmp
imul
adc
lret
mov
and
pop
and
rcl
aad
push
out
jle
aam
je
pop
mov
xorb
or
fisttpll
mov
mov
jl
fsubr
push
movsb
jne
sbb
stos
mov
sub
test
cmpsl
or
lret
stos
lret
sub
mov
jmp
push
scas
ljmp
fsub
out
mov
repz
daa
or
xchg
jbe
rep
movsb
mov
and
in
std
push
les
aaa
adc
inc
hlt
and
das
or
add
mov
pop
push
mov
mov
test
movsl
nop
pop
insl
dec
pop
cmp
xlat
mov
hlt
loopne
mov
jns
aaa
sbb
xorb
stos
cmp
inc
sub
fwait
push
dec
inc
into
push
push
sub
fs
test
jo
sti
push
sub
xlat
or
ds
ficoms
mov
jl
add
sbb
mov
jne
decb
inc
in
add
mov
mov
and
xor
jl
pop
out
xchg
push
popa
mov
mov
adc
adc
push
xchg
dec
lods
jno
out
stc
and
es
enter
xchg
jbe
add
jbe
addb
mov
push
or
inc
sbb
lcall
cmp
or
xchg
push
leave
pop
and
sbb
ret
lods
in
pop
inc
iret
cli
mov
orb
testl
enter
jo
push
ds
out
gs
mov
mov
sbb
inc
push
cmc
les
movsl
mov
ljmp
mov
stc
mov
sbb
push
mov
jmp
sub
and
inc
push
xor
pop
dec
jns
rcrb
jle
and
cmp
sti
xor
adc
lock
ffree
test
pop
inc
movsb
push
into
inc
call
jbe
ljmp
cmpl
sub
pop
das
mov
mov
in
cmc
mov
sbb
inc
inc
cmp
ljmp
int3
cmp
fwait
jmp
cmp
repnz
mov
lret
inc
jb
idivb
scas
pop
aad
pop
mov
jo
push
dec
cltd
es
mov
xchg
clc
push
loop
push
push
fildll
scas
pop
or
insb
bound
adc
mov
inc
js
pop
popa
push
mov
xor
popf
push
mov
pop
fisttpll
jp
mov
mov
ss
bound
das
int3
pop
xchg
in
call
fwait
sub
movsl
push
ljmp
add
adc
test
xchg
orb
pop
fidivrs
jne
cmpl
punpcklbw
jbe
gs
inc
or
movsb
xor
ror
mov
lods
jecxz
loope
adc
cmp
xchg
call
push
popa
lods
dec
les
loop
pop
pop
loopne
jg
and
cli
pop
push
jle
xorb
adc
adc
in
xor
sub
inc
pushf
sarb
movsl
loope
testb
jl
cmp
inc
mov
sti
das
aam
in
mov
xlat
or
push
imul
gs
out
cmpsb
sub
jbe
jle
push
or
insb
jno
pusha
movsb
adc
or
add
mov
jb
add
imul
mov
hlt
in
mov
pop
out
decl
aas
push
popa
xchg
mov
xor
xor
mov
adc
imulb
out
fsubs
fcompl
stos
in
movsl
and
sbbl
jge
stc
xor
pop
inc
frstor
stc
out
leave
push
mov
push
insb
pop
adc
je
enter
inc
dec
out
jg
stos
add
out
push
dec
cwtl
and
mov
insb
mov
add
jecxz
jle
ficoms
mov
std
outsb
and
push
imul
repz
xchg
pop
mov
inc
popa
sbb
or
cld
mov
stos
xchg
pop
scas
mov
inc
inc
insl
fldl
scas
into
fcoms
jo
loopne
insb
or
or
inc
lods
pop
mov
imulb
mov
xchg
xchg
dec
cwtl
mov
fiadds
lds
dec
pop
aad
mov
je
jbe
stos
ret
fistpl
stc
rorb
stos
dec
leave
inc
pop
pop
or
shl
rorl
pop
lods
out
add
mov
mov
push
xchg
repz
dec
jns
pmuludq
js
and
sbb
test
dec
movsb
dec
xchg
int3
add
fstpl
lret
or
andb
test
adc
aaa
cltd
sahf
mov
les
out
adc
rcll
push
pop
jno
andl
aam
jg
inc
cmc
int
pop
mov
xor
ds
loop
push
testb
lea
xchg
jbe
and
cmc
dec
mov
and
xchg
in
xor
push
sti
push
jmp
aam
xor
inc
fcmovnb
adc
xor
jmp
pand
out
fldcw
xchg
jne
std
imul
mov
adc
cmc
mov
inc
or
dec
icebp
or
mov
mov
sub
inc
or
pop
jmp
inc
jae
lods
ror
mov
int
xor
scas
movsl
shll
mov
and
dec
push
dec
xchg
movsb
xchg
jno
dec
out
mov
inc
adc
dec
scas
fdivrs
sahf
sub
xor
jnp
pushf
addr16
push
dec
inc
jne
sti
inc
loop
inc
cmp
repz
daa
jg
mov
xchg
inc
fisttpll
shll
mov
xchg
insb
pop
adc
sub
dec
lret
scas
je
sahf
popa
test
or
mov
in
push
sub
js
cmp
mov
sar
pop
stc
pop
dec
mov
sahf
imulb
cmp
pop
cmp
lret
cmp
xchg
cmp
or
call
jae
push
jmp
sub
ja
std
in
pusha
mov
jb
in
dec
scas
imul
and
mov
or
enter
insb
and
stos
cmp
bnd
test
mov
mov
jp
test
inc
sbb
pop
nop
jno
popa
pusha
push
mov
ret
enter
shrl
cld
inc
ret
sbb
scas
mov
enter
rcl
scas
xor
push
stc
popa
jne
adc
cmp
sarb
stos
or
jnp
jne
or
mov
xor
shlb
mov
call
aaa
mov
ret
aam
jae
dec
push
cmp
mov
sub
pop
xchg
out
jns
mov
mov
ret
or
push
mov
cwtl
lahf
sbb
shl
mov
adc
jge
lret
pop
mov
addr16
andb
or
cmpl
lret
ljmp
sub
fsubl
in
fdivr
mov
push
iret
add
loopne
xlat
iret
push
mov
fdivrs
lahf
mov
jo
cld
dec
movsb
add
das
sbb
imul
jmp
sbb
xchg
test
jno
mov
lea
aam
jl
loope
dec
dec
mov
icebp
pop
ret
pop
mov
int3
dec
sbb
rorb
lahf
imul
jae
jns
sbb
xchg
dec
mov
jne
mov
cli
inc
cs
lahf
ret
jle
aaa
mov
mov
loopne
mov
psubq
popl
jb
clc
jmp
roll
jnp
push
popf
mov
test
cmpl
mov
ret
loop
pop
lahf
cltd
jge
sti
shrb
push
jno
xlat
or
in
lret
xchg
mov
push
add
jne
sbb
push
cmp
dec
ds
xchg
jg
and
mov
inc
test
and
jb
cmpsb
xor
fxch
dec
fsubr
stos
lock
les
and
xchg
aaa
movb
jo
test
nop
mov
aad
out
lock
add
aam
aaa
cli
and
xor
mov
outsl
cmpsb
ret
mov
dec
xor
fsubr
cmpl
pop
jmp
or
bound
jl
hlt
xchg
adc
lret
mov
sahf
in
xchg
or
nop
add
xor
pop
je
push
adc
insb
push
mov
pop
xor
lods
and
dec
xchg
fcompl
cmp
xor
add
inc
outsb
cltd
ljmp
fiadds
mov
jmp
jmp
out
aaa
sub
jb
lret
pop
jne
pop
sbb
and
pusha
and
movb
cltd
adc
sbb
sbb
imul
push
adc
mov
push
mov
lret
inc
cmc
push
xor
ret
repnz
aam
aas
add
decl
pop
out
aad
jbe
add
push
cmp
mov
inc
cli
adc
mov
sti
jo
pop
out
ret
lcall
xor
or
ficoms
sbbb
adc
cmc
lret
rorb
mov
dec
mov
push
push
or
ror
inc
and
or
iret
mov
iret
movsb
aad
test
test
lahf
xor
mov
mov
pop
pop
mov
hlt
push
in
mov
dec
or
or
lret
sbb
sub
in
push
divb
repnz
push
cld
orb
aas
sub
xor
add
adc
and
add
call
std
dec
xchg
cmp
dec
cmp
push
shrb
dec
incl
pop
jae
fs
cmp
mov
xor
inc
in
adc
cmp
enter
js
imul
cmp
dec
popf
push
lret
jecxz
mov
pop
cs
inc
pop
mov
imul
add
test
jae
pop
inc
and
mov
push
subb
testl
mov
test
cs
cmp
push
subb
lret
rcrb
out
push
xor
sub
jae
cmp
daa
or
loope
cli
jge
fs
je
jmp
rorb
cmp
stc
or
bound
fiaddl
movsl
adc
ret
rcl
addr16
mov
arpl
and
inc
pop
popa
push
or
nop
sbb
jno
gs
fidivs
sub
adc
or
add
cmp
or
lcall
sahf
scas
sub
mov
lods
dec
hlt
cli
pushf
adc
pop
andb
dec
repnz
cmpsl
aad
jmp
test
xor
loop
std
mov
jae
lret
call
cs
scas
popf
aas
test
cltd
ds
inc
mov
faddl
out
test
test
in
cmpsb
pop
jno
popa
mov
int3
or
movsl
in
adc
and
addl
cld
sbb
adc
fdivrs
movl
xor
out
aas
push
int
sti
fcmovnb
cld
mov
gs
rcll
or
lds
cli
data16
mov
mov
xchg
pop
in
arpl
rsm
jae
xchg
insl
mov
outsl
mov
mov
jbe
mov
or
enter
push
pusha
or
mov
es
clc
data16
les
or
cld
adc
mov
mov
lcall
das
push
jp
addl
pop
xchg
hlt
push
outsl
int3
xor
movsb
mov
clc
sbb
push
pushf
add
das
cmpsb
push
adc
pop
adcl
pop
pushf
mov
or
xor
push
pushl
xor
sahf
xor
mov
dec
flds
jge
pop
pop
pop
seto
loop
dec
cmp
lcall
jmp
adc
mov
jb
lds
pop
ret
mov
sub
xchg
mov
jmp
cmp
xchg
imul
cmp
or
in
xchg
and
push
rorl
hlt
jae
xlat
pop
lcall
xchg
jae
and
ret
popf
add
adc
leave
inc
test
pop
push
mov
sarb
in
ror
sbb
pop
shlb
sub
loope
rcll
js
rolb
pop
stos
xor
pop
imul
xor
jmp
jecxz
jle
movsl
int
mov
js
mov
lcall
mov
cli
aam
push
dec
xor
push
jle
add
jo
neg
out
lahf
ja
xchg
in
cs
xchg
icebp
xchg
mov
xchg
lahf
jno
jmp
mov
outsl
push
lds
and
into
mov
dec
je
inc
jecxz
ljmp
out
jecxz
jno
lock
lahf
jp
sub
repz
sub
pop
mov
in
or
pusha
add
sbb
in
inc
das
xchg
add
fs
mov
push
ret
xchg
sub
push
sti
aas
inc
inc
add
or
dec
test
cmp
mov
clc
out
movsb
ss
rcll
mov
add
pop
xor
jecxz
fdiv
xor
test
clc
lods
lds
and
cmpsl
mov
or
jo
jo
jl
inc
pusha
sub
mov
xchg
adc
dec
xchg
jns
mov
ficomps
lods
test
aaa
cld
adc
mov
jmp
in
xor
test
mov
jp
xor
test
fwait
cltd
outsl
jne
push
adc
fistpl
ret
or
loopne
push
cmp
in
movsl
jo
pop
and
in
loopne
lahf
lock
cs
movsl
push
popf
mov
dec
mov
test
popf
inc
fs
cmp
lret
sahf
out
push
mov
cmp
dec
mov
dec
adc
xor
lcall
repz
push
inc
push
in
int3
pop
mov
test
xchg
adc
pop
gs
sub
cmp
mov
xchg
xor
clc
shl
adc
outsb
jbe
inc
lds
jge
or
xor
xor
out
out
iret
test
popa
addr16
sbb
int3
push
jb
push
xchg
mov
cltd
hlt
pop
xor
je
mov
mov
mov
jnp
ljmp
jp
or
outsb
xchg
and
fidivl
or
or
test
popa
push
std
dec
cltd
sub
push
xlat
shrb
fidivrl
mov
mov
dec
ret
mov
shlb
adc
jmp
inc
mov
repz
push
mov
mov
mov
sub
or
mov
xchg
and
jno
xlat
jecxz
aam
fsts
inc
mov
lretw
add
pusha
repz
cld
shlb
repz
test
stos
popa
push
inc
push
jne
jne
mov
ljmp
cwtl
xchg
cmp
cmp
inc
mov
popf
xchg
jnp
outsb
and
mov
cmp
out
int3
mov
mov
rorl
int3
lret
mov
aas
sahf
pop
jb
xchg
in
ror
mov
pop
stos
int
jo
cli
sbbl
lcall
fidivrl
or
and
cwtl
lret
add
stos
dec
and
dec
and
jecxz
and
shll
sbb
sbb
pop
pop
jmp
sub
mov
dec
xlat
xlat
push
mov
push
pop
jmp
push
adc
sbb
shrl
loopne
mov
mov
inc
addr16
sbb
or
dec
cmp
fchs
mov
lds
mov
adc
call
fsubrs
lret
xchg
icebp
xor
sub
jbe
mov
in
lods
cmp
or
mov
and
negb
shll
pusha
jno
pop
out
sub
pop
pop
jns
sbb
orb
pushf
test
adc
lret
dec
push
sarb
xor
fs
inc
xchg
add
sbb
xchg
cs
je
out
cmp
aas
add
ret
adcl
jno
pop
push
sbb
inc
mov
xor
mov
outsb
xorb
outsb
push
fwait
pop
xor
loope
adc
mov
imull
mov
lds
clc
dec
nop
and
cltd
jns
int
push
jp
or
sahf
mov
call
cmp
inc
movsb
sbb
test
push
mov
dec
mov
jl
jecxz
xchg
test
xor
mov
adc
popa
ss
call
dec
and
cmp
hlt
jp
xor
and
icebp
mov
add
adc
jmp
int3
push
daa
push
mov
pop
fisttpll
enter
movsb
sub
fsubrp
loope
mov
xchg
pop
xor
rol
xor
das
stc
inc
je
int3
nop
pusha
or
jns
push
lret
aam
popa
loop
lcall
inc
inc
or
mov
dec
mov
jns,pn
cmp
push
sbb
or
ljmp
in
imul
xchg
or
mov
add
shl
pop
mov
imul
cmp
ds
sub
dec
repz
jmp
xor
mov
and
or
mov
xor
add
dec
std
ja
cld
sti
fwait
cmpsb
dec
imul
inc
insb
pop
adc
mov
sbb
xchg
sbb
sbb
xchg
pop
jecxz
loope
in
std
mov
in
das
sbb
jnp
dec
gs
test
pop
xchg
push
clc
sti
cmp
test
mov
cmpl
insl
xchg
call
adcb
mov
pop
ret
cwtl
jns
and
sbb
push
lods
aam
js
or
popa
mov
jl
fs
pushf
or
adc
xor
fcoms
adc
or
fiadds
rcll
add
out
aaa
adc
clc
adc
jle
jle
xchg
in
das
xchg
sub
mov
adc
out
pushl
fisttpl
fidivrs
inc
mov
psrld
fidivrs
pusha
fbld
mov
cmp
dec
fists
jne
mov
xor
sub
daa
or
add
aas
out
sti
xor
jle
in
jge
das
lcall
out
pop
push
dec
cmp
mov
sbb
jne
clc
lret
mov
pushf
ficompl
push
js
push
sbb
cmp
pop
out
mov
jnp
pop
shrb
push
pop
add
jmp
insb
jmp
mov
bt
bound
xor
push
mul
push
popf
gs
add
aam
jmp
mov
mov
in
mov
xor
icebp
mov
pop
xchg
in
mov
xorb
hlt
daa
leave
rclb
cmpsb
ror
add
out
xor
ret
lahf
cmpsl
fwait
rcrl
int3
xchg
jge
xchg
arpl
xchg
mov
aaa
jo
test
stos
pushf
add
fistpl
lahf
inc
roll
lcall
and
mov
mov
jo
inc
adc
push
cmp
ja
loopne
jmp
out
jl
mov
mov
jmp
pop
ja
imul
or
add
adc
shrb
rorb
leave
fisttpl
xchg
sub
push
enter
mov
add
mov
inc
push
push
sub
movsl
adcl
xchg
xchg
fidivrs
imul
mov
adc
jns
mov
gs
loopne
rorb
push
pop
sbb
sbb
bound
nop
dec
push
adc
xchg
inc
dec
inc
ret
inc
fwait
ficoms
loopne
sub
jnp
stos
bound
movl
repnz
push
jb
and
adc
inc
cmpl
mov
push
xorb
push
iret
push
mov
loop
mov
pop
push
push
dec
or
sbb
jmp
fstpl
jl
stos
push
push
push
sbb
jge
xor
mov
inc
xchg
fcoms
incl
arpl
cli
cmp
inc
shl
sub
ret
lahf
inc
sub
push
repnz
divl
xor
mov
loop
jns
outsb
inc
aas
sub
fistpll
mov
adc
lret
jae
sbb
daa
decl
iret
xor
push
loop
scas
out
cmp
cmpsb
mov
enter
pop
jne
xchg
jae
pop
in
push
cmc
or
in
movsl
test
sbb
andb
bound
decb
mov
out
loope
notl
mov
sbb
xor
pop
mov
int
divb
cli
jg
xor
add
incb
repz
int3
outsl
xchg
shrl
cmp
jl
movsb
inc
mov
je
cmp
test
cmp
push
push
lcall
mov
std
jns
pop
pop
cmp
inc
in
je
stc
pop
int
jg
test
sub
mov
pop
fbstp
leave
mov
addr16
mov
adc
dec
out
movsl
xor
lea
pop
or
cmpsb
jbe
loope
cmp
rcrl
mov
push
pusha
inc
mov
xchg
and
repz
and
repnz
xchg
scas
xchg
rcrb
int3
jmp
stc
imul
and
push
mov
fldl2t
fistps
cltd
mov
mov
mov
daa
scas
fisubrs
dec
int
xor
fildll
jae
je
inc
test
in
mov
mov
mov
adc
adc
lcall
hlt
add
mov
int3
xchg
outsb
js
mov
mov
scas
mov
xchg
pop
adc
lods
dec
or
xchg
ss
mov
jmp
jb
out
call
les
fmull
sbb
xor
jge
jo
sub
cmpsb
push
mov
adc
and
cmp
insl
xor
testb
loope
daa
adc
mov
mov
sahf
jno
inc
sahf
adc
jmp
iret
mov
xlat
lret
stos
cmpsl
lret
fcmovne
mov
cmpsb
out
mov
inc
fcompl
jno
jo
push
push
int3
repnz
pop
dec
jg
dec
icebp
cli
lret
pop
insb
push
mov
testb
pop
sbb
out
adc
gs
sub
push
jno
mov
jge
outsl
or
arpl
pop
xchg
push
inc
shrl
lods
cli
sub
sub
rorl
loope
test
mov
idivl
popl
int3
nop
xchg
and
fs
imul
hlt
call
fmull
and
jo
cmovb
sbb
jo
jl
data16
push
sarb
jg
repnz
push
xchg
and
jne
or
fs
add
call
pop
mov
cmp
out
push
xor
rolb
imul
insl
mov
jl
inc
mov
xor
sub
pminsw
lods
movsl
inc
lods
jge
adc
mov
mov
push
cmc
mov
mov
mov
push
xchg
flds
mov
pop
fstl
fsub
mov
stos
sub
mov
adc
sahf
mov
xchg
add
int3
push
stc
pop
test
push
loop
and
movsl
pop
loope
mov
sbb
jo
jno
vmovq
mov
int
paddq
push
repz
inc
sbb
popf
fildl
lods
push
or
push
inc
xchg
popf
mov
adcl
cltd
arpl
lods
add
or
cli
xchg
aas
mov
cmp
or
add
inc
xchg
and
call
scas
jb
cmp
sbbl
sbb
je
std
fstl
lahf
test
roll
push
jg
call
mov
mov
in
xchg
sub
jge
icebp
ret
add
add
sbb
bound
orb
mov
mov
add
and
dec
test
out
mov
mov
jo
adc
ss
scas
dec
pop
loop
push
movsl
fnstsw
out
push
iret
lods
out
pop
sbbl
out
xchg
push
xor
popa
cmp
sbb
xor
adc
add
loopne
mov
sbb
or
bound
xchg
xchg
data16
push
and
push
gs
sub
mov
xor
and
stos
xchg
cld
insb
mov
test
sbb
pop
dec
xor
inc
xor
inc
dec
jge
aam
cmpsb
xchg
xor
fisubl
ds
loop
mov
shrl
cmpsb
sahf
lea
mov
repnz
jl
mov
mov
sub
and
cmp
imul
cmp
dec
push
xor
cmp
sub
or
packuswb
rcll
or
mov
orl
leave
add
lahf
and
ret
js
insl
pop
mov
xor
push
cwtl
cmp
adcb
xchg
dec
jge
jnp
lret
ret
pop
mov
push
adc
std
fs
in
test
pop
xchg
in
sahf
add
stos
imulb
lock
xchg
in
fcoml
and
jle
das
lea
sbb
or
stos
repnz
dec
mov
stos
in
outsl
mov
js
lock
in
test
push
cltd
add
mov
aaa
cmc
add
sub
adc
push
movsl
aam
outsb
cmp
dec
and
lods
pop
data16
mov
push
push
pop
inc
imul
rorl
cld
fstpt
cs
jmp
test
ds
mov
gs
testb
sub
leave
repnz
mov
mov
fistl
mov
jmp
out
push
cmp
mov
push
out
cltd
vmovss
gs
push
mov
push
pop
out
mov
rcll
mov
add
cmp
addb
jb
adc
push
out
adc
into
stos
push
cmp
popf
fs
mov
push
ds
jb
sbb
aas
bndstx
cwtl
pop
movsl
cmc
cmp
loop
pop
test
mov
dec
mov
inc
pusha
and
sub
xor
insl
bound
mov
ss
pop
mov
sbb
ret
scas
pop
test
sbb
mov
mov
jnp
pusha
cmc
mov
mov
addr16
mov
add
jle
fisubs
pop
or
adc
ja
aaa
jbe
sub
or
add
test
cltd
fmul
sub
es
add
push
int3
xchg
mov
test
push
push
aaa
mov
push
mov
sbb
iret
out
mov
lock
sub
pop
popa
aaa
jns
ss
subl
or
xlat
sbb
fidivl
repnz
jns
push
jno
jp
test
std
mov
das
mov
push
mov
insl
scas
xor
or
xor
cmp
pop
js
test
xor
inc
jp
ret
pop
lret
pop
js
in
int3
call
imul
xchg
enter
sbb
dec
pop
push
add
sbb
mov
das
mov
mov
sbb
sarl
dec
jae
jbe
cmpsl
es
mov
int3
mov
mov
dec
sbb
lret
movsb
mov
inc
xchg
adc
fldcw
out
lahf
xor
adc
cmp
repnz
iret
sub
push
xchg
mov
arpl
inc
popa
xchg
scas
or
cmp
push
jle
popa
jge
xchg
jns
data16
or
mov
lods
lds
maxps
cld
cmp
call
leave
mov
sarb
pop
xchg
inc
sbb
push
lods
data16
in
fdivrl
jmp
pusha
into
push
pop
mov
jmp
mov
sbb
pop
mov
cmp
cwtl
xor
mov
adc
mov
enter
mov
inc
pushf
ja
xchg
sub
out
xchg
and
cmp
cmp
mov
jge
out
adc
lret
cmp
cmpsl
sub
hlt
jno
xor
test
lds
jmp
test
sbb
pop
pop
addr16
sbbl
notl
and
mov
mov
cld
sub
hlt
xor
push
fcoms
cmp
add
outsb
lods
xchg
pop
adc
fs
sarl
inc
fists
sub
outsl
fs
mov
inc
outsl
loop
out
insb
or
pop
pop
in
cli
sub
push
mov
xor
pop
je
mov
pusha
pop
and
add
pop
ds
and
mul
loop
sahf
mov
mov
xchg
pop
or
cmp
mov
cmp
xor
cltd
loop
push
jnp
inc
in
movsl
mov
inc
dec
add
push
addr16
es
es
cmp
mov
leave
push
adcl
push
or
in
ljmp
pop
imulb
les
cltd
scas
test
push
mov
cmc
andb
out
pop
mov
push
test
data16
cwtl
sub
dec
xor
adcb
xchg
data16
dec
mov
xor
jl
shr
jne
es
ds
lds
rorl
ret
std
das
dec
cs
push
jp
int
cmp
add
aam
lcall
fucom
inc
or
xor
leave
mov
mov
lods
enter
cmp
mov
jg
daa
loope
inc
sbb
xorb
fimull
movsl
inc
enterw
inc
pop
imul
dec
or
and
push
push
ja
lea
loop
in
stos
shlb
mov
sarb
pop
dec
jmp
or
adc
sub
dec
jae
sahf
ds
jo
sahf
pop
mov
sbb
jbe
sbb
movsl
jb
dec
cs
sbb
push
or
add
mov
pop
mov
rorb
add
pop
rclb
into
adc
jle
jle
cmp
inc
xor
pop
js
push
xchg
ds
cltd
xor
repz
subb
insb
sbb
add
jge
jno
lock
jmp
movsb
or
test
outsl
jecxz
lock
xchg
mov
mov
jno
mov
sti
test
ljmp
mov
pop
mov
cmc
mov
repz
xchg
cs
cmp
push
sbb
test
mov
ret
sar
cmpsl
sub
stos
xchg
jne
clc
cmp
nop
inc
js
mov
stc
xchg
ja
lret
lods
dec
adc
pop
call
mov
mov
fcmovnbe
mov
xchg
push
test
pop
jl
lods
xchg
push
std
int
lds
mov
xchg
push
in
ret
mov
dec
out
jno
sbb
mov
jecxz
xchg
in
jnp
pop
lahf
jno
xor
push
dec
xor
scas
sub
ficompl
je
pop
add
pop
ret
into
shlb
mov
lret
movsl
shrb
aam
or
aam
push
mov
aaa
adc
inc
add
shlb
repnz
mov
popf
pop
cld
add
or
inc
sti
test
mov
xchg
jo
xor
add
mov
jno
adc
sbb
mov
addb
pop
mov
sbb
sbb
shl
rol
add
std
sbb
test
cmpsl
push
popf
nop
dec
fidivrl
mov
dec
pop
in
pop
movsl
push
dec
outsb
ljmp
pop
push
pop
cmpsb
push
or
mov
clc
mov
clc
aas
mov
cmc
jmp
dec
rcrl
or
lods
out
and
inc
xchg
mov
cmp
sar
adc
call
in
cmc
mov
and
push
inc
sahf
mul
daa
mull
and
popf
popf
mov
test
movsb
popa
cld
xchg
push
lds
in
jbe
inc
sbb
orb
loopne
adc
push
xlat
adc
daa
xchg
mov
or
or
adc
rorl
sbb
leave
cmc
movsb
call
mov
xchg
ja
ficoml
je
push
dec
enter
add
and
jne
pop
cmp
or
hlt
outsl
jo
adc
push
push
xchg
xchg
int3
lods
xor
pop
mov
test
cmpsb
adc
inc
jmp
pop
sub
jns
dec
add
lahf
add
outsl
adcl
or
repz
mov
mov
out
xor
xchg
xor
push
jbe
push
cmp
aam
scas
mov
popf
pusha
push
scas
mov
test
mov
cmp
psubusw
xchg
popf
inc
cmpsb
sub
xor
mov
adc
and
int
xlat
mov
daa
jbe
push
cwtl
cltd
orb
adc
loop
dec
cmp
sub
push
fimuls
pop
test
arpl
sub
shlb
out
ss
sbb
push
adc
iret
mov
xlat
ljmp
cmp
imul
and
imul
stc
and
push
add
lods
icebp
subl
negl
rcr
aaa
mov
mov
mov
cmc
mov
sbb
mov
out
rcr
adc
cld
insl
arpl
inc
test
xchg
push
dec
cltd
pop
pusha
inc
mov
jo
fwait
sahf
dec
push
mov
shll
and
mov
adc
aam
test
mov
out
testl
sbbl
push
imul
xlat
mov
das
popf
and
lods
xchg
adc
mov
insb
and
mov
lret
imul
mov
fldenv
lret
cmp
dec
loop
sbb
add
test
cmpsb
dec
decl
mov
andl
aaa
adc
cltd
ss
and
sbb
insl
add
bound
pop
xchg
repnz
and
and
int
aas
les
xor
sub
mov
data16
jne
mov
jecxz
mov
movsl
add
data16
dec
ljmp
and
push
jnp
xchg
xor
dec
scas
sub
stos
cwtl
loope
test
icebp
jle
cmp
jns
arpl
and
enter
cmp
mov
orb
into
or
daa
in
in
jp
sub
jb
pop
jmp
pop
out
sbb
imul
cmp
lahf
adc
xchg
popf
cli
xchg
sub
xchg
hlt
sarb
divb
fdivrl
cli
sbb
xchg
xchg
je
pop
add
mov
mov
movsb
jne
mov
pop
cmpsb
out
fists
mov
mov
popf
or
or
daa
inc
out
inc
bndldx
jo
into
ja
jl
dec
arpl
lods
in
dec
cmp
jnp
ds
mov
dec
test
inc
test
out
in
aas
scas
sbb
push
loope
sahf
lret
aad
lret
mov
pop
cmp
fbld
inc
fnstcw
outsb
xor
mov
cld
in
pop
push
and
mov
jmp
sub
insl
jl
shrl
shlw
std
jge
push
stos
ltr
dec
add
jmp
cvttps2pi
cli
rolb
or
inc
push
movsl
add
movsb
jae
fcmovnb
jg
dec
jae
stc
fucom
sbbb
xchg
adc
sahf
addr16
cld
bound
xchg
out
sbb
imul
pop
lock
jnp
adc
popa
mov
out
mov
into
addr16
in
fwait
loope
leave
push
push
fdivrs
fimuls
pop
cmp
dec
push
testl
jecxz
call
out
ja
inc
cmp
cmp
stc
ret
repz
xor
and
inc
cltd
sbb
lret
or
inc
iret
mov
cmpl
adc
sbb
jb
sbbl
test
pop
ss
repz
inc
gs
mov
mov
fstps
mov
stc
inc
in
lahf
movsl
jmp
in
mov
lods
test
mov
fwait
xlat
sub
pop
dec
jmp
sbb
shll
adc
nop
test
pop
xchg
test
nop
adc
stos
pop
jecxz
int
sub
daa
mov
es
jno
mov
ds
lcall
xchg
cltd
paddw
pop
js
pushf
add
test
or
ret
les
fstpl
push
stos
sub
faddl
hlt
mov
adc
call
push
sarl
lahf
jle
mov
xor
je
les
xchg
mov
mov
add
mov
xchg
lret
imul
test
mov
xchg
ret
xchg
xor
xor
xchg
iret
mov
cmc
fs
cwtl
mov
pop
inc
out
decb
fsub
je
adc
add
pushf
cmp
icebp
shlb
in
sub
sbb
cmp
mov
push
jo
std
mov
push
xchg
pop
and
pop
and
cmp
or
in
mov
inc
test
push
mov
js
fnstenv
and
push
add
push
jbe
outsl
push
xchg
scas
stos
jo
mov
pop
rcll
cwtl
xchg
cmpps
push
pop
daa
mov
adc
ret
xor
sbb
mov
cmpsb
adc
pop
add
mov
xchg
outsb
mov
push
shrb
or
mov
fistpll
hlt
push
adc
lret
jecxz
jns
cmpsl
aam
push
jg
or
mov
bound
outsb
jo
push
or
sub
jge
adc
push
in
and
out
fwait
xor
int3
add
xchg
jp
xchg
jl
xchg
xor
jp
push
jmp
adc
mov
call
add
push
movl
outsl
insl
mov
pop
stos
ret
fldenv
push
loop
test
and
test
xchg
mov
mov
fwait
xor
sub
sub
stc
adc
aaa
rclb
ja
ljmp
movsb
sahf
sbbb
cmpsl
das
sub
push
jnp
filds
xchg
mov
out
mov
sti
xchg
outsl
push
outsl
jp
xchg
ret
cli
adc
push
add
inc
pop
xchg
addr16
and
fwait
adc
jne
outsb
mov
xor
inc
stc
push
fwait
adc
push
adc
iret
mov
mov
stos
ret
dec
xchg
add
and
dec
pop
inc
mov
push
out
shl
jbe
xor
push
mov
and
mov
fwait
jns
lods
sub
xchg
pop
push
ret
insl
pop
pop
fsubrs
or
js
sub
iret
sub
and
repz
sub
push
daa
pop
addr16
push
and
mov
sti
xlat
mov
insb
mov
mov
jno
pop
test
fwait
mov
divl
mov
dec
mul
xlat
xor
and
mov
mov
pop
ret
inc
test
jmp
add
add
inc
lods
pop
fsubp
sub
dec
insb
neg
fstp
mov
das
sub
jbe
jb
mov
das
cmpl
test
addl
jl
xor
push
ret
dec
jne
dec
jl
jge
ja
mov
add
je
mov
push
in
sbb
rcrl
stc
dec
mov
leave
and
or
xchg
test
pop
sbbl
adc
std
lret
adc
adc
mov
cmp
sti
inc
inc
out
jl
mov
jmp
test
add
inc
cmp
imul
and
push
roll
add
sub
mov
mov
xchg
pop
pop
add
inc
insl
outsb
push
xor
push
dec
inc
pop
mov
dec
sahf
lahf
sahf
cs
mov
clc
outsl
or
xchg
inc
dec
cmc
sarb
inc
hlt
xchg
dec
clc
mov
and
test
xchg
out
push
iret
xor
pusha
test
fnstsw
pop
mov
fwait
jecxz
out
repz
mov
ret
fwait
in
dec
incl
xchg
pop
xchg
out
cmp
push
clc
hlt
adc
fbstp
rcrl
mov
sti
in
in
mov
loope
mov
in
jb
mov
ljmp
sbb
jo
out
shlb
rorl
sbb
mov
mov
mov
iret
lea
mov
or
cmp
popa
imul
xlat
and
lret
std
cmp
out
fcomip
repz
and
leave
pop
data16
popa
jg
ljmp
out
pop
in
jb
dec
and
pop
fistps
daa
insb
cltd
pop
adc
add
mov
push
and
push
lds
pop
fmuls
nop
ficoms
ficoms
add
push
add
jmp
cmp
jne
pusha
int3
xchg
popa
shlb
popa
jo,pt
mov
fisubs
leave
pop
dec
pop
cld
shrl
adc
frstor
loope
or
jnp
adc
repz
inc
adc
das
in
push
into
mov
mov
mov
clc
mov
xchg
push
dec
mov
icebp
in
icebp
xchg
and
mov
and
adc
add
xchg
xchg
mov
add
fidivrl
sub
fwait
xchg
fisttpll
ja
shrb
push
testb
leave
jecxz
mov
psrld
cmp
pop
adc
rcrl
loop
pop
cmpsb
insb
push
test
dec
jmp
xchg
inc
xchg
jb
pushf
push
mov
aad
sub
xchg
xlat
popf
stos
pop
xchg
cwtl
and
popf
stos
cmp
mov
lds
xor
xchg
xor
scas
cwtl
mov
sub
shrb
rcl
jnp
dec
data16
ds
mov
fidivs
idivl
or
shrl
rcll
enter
ret
test
mov
inc
inc
arpl
add
pop
insb
and
and
lret
mov
jns
aas
mov
jle
mov
scas
sbb
add
add
pop
aad
stos
into
or
sbb
stos
loop
int3
ds
ss
dec
inc
jecxz
stos
mov
jno
xor
lcall
movsb
mov
pop
jg
pop
cmp
fxch
sub
repnz
popa
pop
lock
popa
xchg
adc
xor
stc
scas
adc
lcall
sbb
add
sbb
mov
cmp
dec
ja
jns
inc
enter
or
or
sbb
mov
js
mov
mov
cmpsl
jl
ret
int
subl
sub
shrb
cli
pushf
ret
mov
xor
mov
ret
cmp
push
jp
arpl
in
into
xor
out
lods
in
shll
lods
das
stc
fnstenv
push
adcl
fcomp
out
or
dec
lods
cmp
push
mov
aam
pop
cmc
and
test
xor
in
aad
or
or
test
xchg
inc
mov
shrb
std
inc
ret
loop
lds
mov
iret
cmpl
inc
shrl
push
loopne
mov
fcoml
mov
jno
fsubr
div
int
mov
mov
mov
sbb
jmp
add
mov
sarb
cmp
inc
shll
ja
into
jae
mov
pop
jl
add
mov
imul
mov
fwait
and
sqrtps
arpl
cmp
add
xor
cmp
data16
cmp
mov
fsubs
jecxz
pop
mov
pop
mov
dec
stos
cmp
cltd
jns
rorb
pop
call
add
cmc
mov
mov
jne
inc
je
cmpsb
sub
loope
repnz
loopne
add
mov
xchg
mov
inc
cmpsb
pop
xchg
xlat
sbbb
or
in
movsl
sbb
adc
mov
jo
in
mov
notb
xor
enter
push
insl
into
adc
jl
xor
les
jns
inc
xchg
enter
or
pop
dec
mov
inc
ja
movb
jno
cwtl
mov
cli
inc
sahf
sbb
push
sbb
cld
or
fs
xchg
push
mov
inc
std
mov
daa
jge
ret
xor
cmp
inc
imul
mov
push
out
pop
cmc
sub
aaa
inc
nop
adc
lods
imul
aaa
add
push
sbb
lea
and
in
lock
pop
bnd
or
add
add
xchg
lcall
int3
fwait
adc
inc
jg
mov
xor
xchg
lock
xchg
int3
incb
pop
cmpl
subb
cli
in
aas
push
fwait
xchg
ja
xchg
clc
sarb
mov
mov
cmpsb
xchg
arpl
aaa
rcl
les
aas
push
dec
cmp
aas
cmp
mov
repnz
or
push
and
add
mov
mov
add
jbe
push
test
arpl
push
cwtl
mov
popf
jb
xor
push
push
das
xchg
aad
lret
pop
inc
add
in
loop
pushf
test
inc
mov
into
xor
jecxz
loopew
scas
sub
andl
mov
imul
mov
test
popa
pop
and
or
sbbl
test
mov
sbb
aas
jnp
fstps
es
mov
xchg
aas
sbb
jb
jp
shll
pushf
push
push
xor
pop
cltd
imul
jne
and
xchg
mov
test
sar
xor
outsl
out
mov
xchg
mov
jb
push
jne
rolb
pusha
jmp
jecxz
out
iret
sub
inc
jb
or
sarl
es
xchg
xor
cmpl
cs
sti
push
and
mov
cmp
xchg
inc
loop
aad
xchg
lahf
cs
mov
nop
fstl
iret
into
jnp
jmp
xor
sbb
mov
xchg
cmp
dec
ret
scas
cmp
lds
cmp
lcall
aaa
cld
jp
or
in
lds
xor
lea
gs
int
xor
xchg
sub
add
pop
xlat
push
add
mov
xor
fstpl
jmp
lahf
fsubrp
or
cwtl
aad
add
jmp
aaa
inc
fidivl
sub
clc
fnstenv
cmp
test
inc
dec
or
aad
cltd
notl
inc
or
sbb
adc
rcrb
pop
mov
inc
inc
add
adc
mov
pop
inc
mov
loop
sarb
loopne
imul
das
imul
cmp
xchg
mov
es
test
push
or
ljmp
or
scas
cwtl
in
test
stos
pop
dec
or
aam
jl
mov
cs
das
add
addr16
lea
test
hlt
push
dec
pushf
inc
daa
sub
test
mov
add
xchg
mov
cmp
sub
add
or
cs
jmp
test
sbb
dec
insb
sar
data16
push
cwtl
movsb
jno
aad
bound
in
repz
test
movd
push
sub
ss
adc
dec
lret
mov
mov
pop
out
scas
mov
cmp
aas
sbb
je
xchg
add
sub
inc
pop
out
addr16
mov
jle
jecxz
cltd
rcll
adc
and
mov
call
ja
pop
cmp
dec
push
scas
icebp
divl
adc
lea
sahf
cmc
sbb
ret
lcall
push
xlat
ja
jo
xchg
add
out
push
mov
popa
shl
jmp
int
adc
mov
lds
inc
mov
lcall
inc
sbb
loopne
pop
xchg
mov
pop
pop
or
loope
add
addr16
push
xor
mov
inc
jmp
xchg
inc
mov
pop
stos
movsb
add
movsb
mov
mov
dec
arpl
xchg
inc
out
sbb
ja
in
add
jle
fnstsw
dec
mov
shll
cwtl
fidivs
div
cmp
jne
scas
push
mov
jge
out
int3
lret
mov
and
push
push
insl
out
or
inc
in
fdivs
cmpsb
ss
ficomps
and
std
mov
movsl
jecxz
jecxz
mov
jmp
xchg
in
sti
xchg
cli
ret
jno
shll
icebp
outsb
gs
js
rolb
cwtl
jl
xchg
xchg
sbb
sub
pop
sbb
xchg
addb
pushf
push
jns
lahf
daa
ljmp
adc
les
int3
pop
lods
int
add
push
aad
loope
push
ret
push
add
jecxz
cwtl
sub
mov
mov
xchg
test
lret
hlt
or
in
mov
mov
sub
xor
ror
shll
dec
xor
xchg
mov
aam
sub
mov
movsb
dec
xchg
lods
sbb
insl
sbb
aas
shlb
xor
cmp
inc
testl
cwtl
push
mov
enter
or
lret
lret
sub
adc
xchg
add
xchg
dec
bound
leave
jmp
pop
cmp
cmp
call
push
roll
sbb
fldz
lds
in
leave
adc
cmpsl
mov
lods
outsl
mov
cmp
jmp
add
in
xor
decl
gs
repnz
xlat
mov
jo
out
imul
ds
sub
mov
int
gs
jmp
push
push
cmp
xor
rorl
sbb
ljmp
or
mov
xchg
roll
cltd
cltd
jg
sub
std
cmp
mov
and
push
adc
cmp
mov
push
out
push
in
cmp
cmp
mov
xor
fwait
inc
cltd
inc
enter
xchg
mov
mov
pop
imul
inc
pushf
dec
mov
test
imul
stos
or
mov
je
or
mov
adc
or
add
aam
fs
adc
sub
mov
insl
ret
and
pop
xchg
add
sub
daa
sti
mov
hlt
cmp
add
movsb
ljmp
loop
orl
add
enter
sub
stc
jl
or
or
cwtl
mov
dec
mov
push
sarb
jns
push
pop
pop
outsb
xor
aaa
and
pushf
popa
arpl
lret
imul
inc
fstpl
sub
gs
inc
mov
mov
xchg
ret
mov
cld
pop
pop
pop
xor
cmp
jnp
hlt
cwtl
sbb
ret
push
dec
outsb
add
stos
xor
aad
stc
mov
jmp
notb
xchg
adc
test
cmp
mov
lcall
cmpb
in
in
call
ds
inc
jae,pt
mov
leave
scas
pop
pushf
sbb
fwait
pop
out
das
xchg
scas
cld
inc
repnz
icebp
inc
add
dec
inc
inc
jns
cld
cmpsl
call
ds
inc
popl
call
jb
jb
roll
mov
mov
stos
add
cmpsl
jb
test
or
adc
in
int
ficoml
sub
scas
test
outsb
inc
in
arpl
pop
es
test
sbb
or
cmpsb
mov
into
clc
addl
cld
inc
mov
pop
sub
jmp
pop
nop
dec
mov
out
sub
fdivr
sub
mov
mov
je
addr16
jae
gs
test
push
sbbb
or
mov
mov
movsb
push
push
sub
cld
adc
sbbb
inc
arpl
fimull
mov
aaa
fadd
and
cli
mov
mov
jae
jne
sub
pop
or
fimuls
inc
dec
pop
fwait
push
pop
cli
and
in
adc
and
aas
je
adc
or
jmp
shll
test
dec
mov
shll
push
ror
inc
xchg
test
icebp
and
pop
sti
fisttps
lods
jbe
lret
lea
mov
out
or
mov
xor
test
clc
aad
and
gs
xchg
int3
cmp
clc
cmpsb
jbe
lods
int
rcll
jbe
test
pop
xchg
push
jo
imul
sub
dec
sbbb
xchg
mov
adc
pop
xchg
scas
ds
fs
add
stos
outsl
pop
int
dec
fprem
les
data16
sub
movsb
xchg
cmp
mov
and
inc
push
ret
daa
repnz
mov
sub
cmp
out
mov
xchg
in
pop
sub
hlt
jb
imul
pop
inc
add
jle
lea
push
pop
push
mov
out
jne
and
xorl
jge
mov
testl
aaa
sub
sarl
das
out
and
lret
jle
push
mov
cmp
sar
fadd
cmp
cmpsl
adc
js
movsb
andl
je
test
add
inc
inc
insl
out
xchg
sbbl
orb
and
imul
call
jmp
adc
imul
mov
inc
pushf
lods
mov
int
mov
mov
sub
lea
orl
adc
rcr
ljmp
xchg
xchg
out
cmpsl
test
pop
sbb
stos
pop
mov
or
adc
ljmp
jno
das
mov
pop
daa
push
xchg
dec
out
push
dec
lret
push
cs
stc
xchg
call
cmp
sub
popw
add
sbb
inc
aam
push
daa
cmp
int3
push
mov
fcomps
pushf
ss
push
pop
inc
outsb
dec
addb
mov
pusha
mov
mov
call
daa
idivl
xor
adc
repnz
and
das
inc
ja
aas
jno
icebp
push
insb
fildl
mov
es
jge
xchg
mov
lock
mov
xchg
dec
pusha
sub
mov
dec
out
cmp
js
jns
mov
xlat
and
popa
or
and
and
jecxz
movsl
arpl
xor
fisttpl
push
inc
sbb
cmp
inc
jno
andb
dec
cmp
adc
push
inc
jge
jmp
cmp
sbbl
and
or
test
push
push
cmp
xor
push
movsl
mov
fsubl
sbb
int
push
mov
push
lahf
mov
mov
pop
sbb
push
jno
gs
push
push
xchg
imul
push
pushf
das
addl
xor
mov
sahf
mov
push
inc
push
mov
mov
gs
lret
push
adc
xchg
out
cmpsb
adc
pop
push
cmc
sbb
pop
loope
mov
mov
stos
mov
out
lret
loopne
dec
scas
mov
mov
pop
std
popa
cs
jae
ds
mov
jecxz
add
inc
pop
add
pop
push
std
or
sbbb
and
arpl
sbb
mov
or
neg
jbe
adc
cmp
pop
push
mov
sub
test
out
lods
imul
mov
push
addr16
pop
loope
sbb
mov
fisttpll
mov
pop
or
push
jg
jo
fisubl
cmpsl
es
push
nop
sub
xor
add
push
sarl
mov
int3
mov
negb
outsb
push
inc
pop
out
inc
dec
pop
xor
fucomi
in
mov
push
cmpsl
pop
hlt
xchg
add
sbb
xchg
inc
das
iret
jle
mov
ficoms
push
inc
xchg
jno
mov
pop
sbb
fstps
pop
xorb
loop
daa
inc
push
idivl
es
sbb
push
stc
xchg
jno
in
cli
pop
adc
movsb
mov
scas
cmp
xor
mov
mov
sub
adc
push
sbb
add
test
notl
mov
push
xchg
lea
dec
inc
mov
dec
mov
lea
jmp
lods
insl
or
pop
or
iret
mov
inc
and
jne
push
xchg
inc
mov
out
je
into
imull
cmc
add
and
jo
je
cmpsl
pop
out
cmpsl
movsl
shlb
pop
and
aad
adc
add
add
mov
xor
lea
ficoml
xor
and
xor
call
dec
icebp
jge
aam
pop
push
inc
fistpl
outsl
test
jmp
insb
loop
ds
or
popf
cmp
out
lock
outsb
pop
mov
adc
test
pop
mov
pop
out
andl
sbb
sahf
mov
jecxz
cltd
xchg
sbb
pop
cmp
pop
repnz
xchg
sub
or
jbe
sub
push
adc
jp
mov
sub
xchg
or
in
out
cli
fwait
mov
adc
and
aaa
bound
dec
push
ret
ret
movsl
adc
sub
mov
loopne
repz
cmp
sbb
negl
xchg
jne
cmp
lahf
repz
aad
std
sbb
lahf
sahf
addr16
inc
add
stos
adc
lahf
inc
add
jno
pop
ret
dec
es
fists
push
stc
cmp
das
daa
cmpsl
les
cmp
mov
dec
enter
mov
dec
pop
fisubs
addr16
push
add
call
dec
pop
pop
jge
push
xor
ret
cs
jp
pop
sub
cmp
add
cmp
mov
jnp
xchg
out
inc
jg
std
fidivs
into
call
imul
mov
loop
xchg
pop
push
adc
ds
cld
popl
jge
fsts
outsl
or
pop
imul
mov
sbb
jecxz,pn
add
movsl
loop
cmpsb
sub
popl
xlat
cs
xchg
cltd
and
add
aam
pop
popf
into
scas
idiv
add
pop
or
out
lcall
nop
ss
xchg
test
push
mov
sbb
sbb
inc
sbb
adc
insl
mov
adc
call
or
fwait
std
adc
loop
sub
pop
dec
lods
and
jmp
das
shr
stc
mov
rclb
jns
lret
xlat
cmp
scas
xchg
notb
xchg
sub
and
push
pop
in
ja
fcmove
mov
pop
dec
std
cmp
lcall
jmp
or
jl
ds
mov
in
mov
sbb
inc
lahf
inc
adc
enter
js
or
fs
push
adc
adc
int3
xchg
xchg
out
sbb
rol
cli
aaa
jb
rcrl
add
pop
pop
mov
dec
ja
or
adc
adc
pop
arpl
xor
xchg
inc
xchg
pushf
cmp
jle
sub
pop
pop
jp
sub
popa
mov
pop
insb
lcall
add
dec
or
cltd
cmpsb
setb
stos
cmp
ret
cmpsl
mov
cli
rorl
jmp
mov
inc
scas
aas
mov
pop
into
pop
jge
adc
jl
adc
lcall
xchg
xlat
xchg
sub
jns
insb
sbb
iret
jl
fsubrp
lret
and
add
pop
aad
push
outsl
mov
cwtl
es
cmc
push
pop
jnp
leave
pop
test
mov
mov
fcompl
call
ljmp
jne
jbe
ljmp
lcall
mov
xor
and
xor
dec
inc
stos
je
sub
cwtl
mov
adc
aaa
push
lret
xchg
sahf
ret
cmp
fsubrs
mov
cmp
push
aad
jbe
cmp
and
xchg
sub
out
jbe
mov
sub
mul
mov
outsl
sub
fsts
mov
lods
out
out
push
aaa
test
dec
sub
jne
jne
pop
in
sbb
pop
pop
int3
ficomps
int3
iret
lea
js
hlt
jo
and
inc
outsb
rolb
and
mov
addr16
dec
imul
jl
adc
xchg
fnstcw
adc
iret
pusha
add
hlt
push
push
lcall
mov
mov
inc
lods
jno
jbe
sbb
mov
sub
pop
jg
pushw
shlb
cmp
repnz
shl
dec
sub
data16
sahf
popf
shrl
enter
fisubrs
nop
insb
dec
mov
mov
ret
sbbl
in
xorb
dec
and
repz
neg
xchg
and
push
cmpsb
sub
fsubl
lcall
jbe
sbb
xchg
inc
shrl
sbb
sub
das
hlt
adc
add
dec
out
pop
push
lods
push
inc
jmp
mov
ret
dec
or
inc
mov
mov
repnz
cmp
cmpsb
out
dec
jle
xchg
jbe
pushf
mov
std
fs
cli
fdivrs
cmpsl
mov
push
jne
and
inc
or
mov
xchg
cs
arpl
fidivrs
jmp
and
cs
xchg
dec
xchg
pop
xchg
cmp
sub
jno
and
xchg
gs
mov
dec
cld
xchg
mov
lret
stos
divl
inc
shrl
mov
sahf
xor
mov
cmp
mov
mov
mov
add
lret
adc
xlat
into
out
or
popf
test
aas
xchg
jnp
roll
mov
jmp
ficoml
dec
int
push
js
enter
cmpsl
enter
adc
icebp
out
pusha
movb
les
xchg
das
movsb
loope
mov
jg
add
or
jno
shl
inc
cld
out
call
and
clc
pop
xlat
ret
fdivrl
dec
lahf
push
lock
stos
ror
sbb
sbb
lods
jp
jmp
into
shrb
push
scas
add
leave
cmpsl
cmp
sub
mov
popa
adc
call
pop
mov
jge
jge
int
or
mov
or
lret
dec
mov
push
ret
mov
int
cmpsb
cmp
and
jno
mov
mov
jl
repnz
in
inc
out
les
jp
sbb
call
push
dec
mov
mov
out
add
and
xchg
cmp
sarl
sahf
nop
mov
clc
push
gs
push
clc
mov
jb
pusha
add
xor
mov
sarl
pop
jne,pt
sbb
jmp
outsl
fucomp
mov
cmp
adc
andl
jmp
xchg
lock
scas
push
test
mov
enter
cmc
jl
das
mov
flds
mov
enter
xchg
rclb
inc
xor
or
repz
fstpl
xor
xchg
push
fisttps
jl
xchg
lods
xor
cld
hlt
inc
sbb
push
cwtl
xchg
add
add
shll
mov
les
test
gs
aad
mov
sub
or
scas
inc
jmp
ja
in
xor
and
test
rol
pop
cmc
iret
out
inc
hlt
sbb
iret
imul
mov
lds
lock
les
inc
out
xchg
inc
jno
pop
add
lock
xorb
jmp
pop
pop
pushf
jae
rcl
sub
push
out
cmovnp
mov
leave
mov
sub
add
add
push
popf
lods
mov
lret
cs
sub
xchg
inc
dec
subb
pop
test
je
lods
outsb
push
cmp
xor
fiadds
dec
cmp
cli
bound
mov
cmpl
xchg
out
mov
or
adc
adc
outsb
lcall
mov
cmpl
adc
lret
mov
pop
int3
fwait
jae
jle
pop
push
inc
jmp
mov
mov
stos
and
inc
fisubrl
push
sub
inc
out
stos
test
lock
movsb
ja
xchg
inc
pushf
aad
ret
hlt
or
out
icebp
pop
dec
int
adc
sub
jmp
es
push
andb
pop
mov
sub
rolb
scas
sarb
adc
ds
lea
and
and
cmpsb
outsl
mov
roll
je
loope
lods
call
ljmp
mov
dec
aas
pop
test
jp
test
shl
mov
div
mov
iret
jbe
fldt
cli
and
sarl
notb
xchg
adc
sbb
mov
jp
in
xchg
fs
ds
data16
sar
daa
pop
push
jle
outsl
push
fnsave
dec
jno
pop
mov
xchg
inc
ja
cli
das
pop
pop
repz
pop
pop
movsb
fdivr
fmuls
inc
lahf
sub
inc
stc
or
dec
cwtl
rclb
and
out
scas
arpl
icebp
fcoml
scas
inc
jns
movsl
add
sub
shl
imul
add
rcrb
mov
xchg
adc
jno
jge
mov
jno
sub
aaa
mov
cmp
sbb
mov
clc
loop
xor
mov
pop
jae
inc
fdiv
xor
pop
push
push
cs
sahf
outsl
aaa
ret
fwait
cmp
inc
cmp
into
cs
imul
adc
xchg
aad
jecxz
ret
loopne
dec
cmpl
fistps
pop
aas
ds
movsl
ss
mov
jbe
pop
stc
ror
into
jnp
cmpsl
lret
jecxz
mov
push
mov
int3
sub
sbb
shrl
in
movhps
imul
into
xchg
imul
mov
enterw
cld
mov
pop
loopne
and
out
fmuls
inc
cmc
sub
rcrb
cs
pop
xchg
cld
negb
clc
pop
mov
in
sbb
out
stc
bound
leave
outsb
rclb
adc
cltd
mov
es
nop
sub
popa
push
pop
jl
push
andb
inc
ret
fistpll
sub
orps
lds
loope
in
mov
aad
stos
lcall
test
cmpsb
push
pop
arpl
in
mov
pop
out
jmp
jle
jnp
push
cmp
jne
or
jecxz
jp
dec
mov
out
dec
addr16
mov
or
or
mov
scas
lods
dec
xchg
xchg
scas
fsubrs
adc
lret
jle
adc
dec
in
and
add
movsl
mov
scas
leave
mov
xchg
pop
pop
es
scas
sbb
hlt
add
push
inc
lret
fcmovu
mov
clc
sbb
and
sbb
loope
cmpsl
fisubrl
sbb
call
and
push
hlt
imul
movsl
ret
inc
push
sahf
pop
icebp
and
mov
xor
cmpsb
push
arpl
xchg
sub
sbb
sub
ds
hlt
cmp
inc
les
or
jmp
roll
test
jmp
outsb
push
cmc
scas
xorb
xchg
nop
jo
add
bound
femms
jb
lods
rol
fcompp
mov
cmp
lret
ret
fisubrl
adc
pop
in
out
cmpsb
repz
cmpsb
sub
inc
in
xor
mov
xchg
out
lea
mov
popf
mov
or
mov
sbb
cmp
lock
pop
vpinsrw
test
pop
fnstcw
out
in
out
sbb
sub
pop
jb
pusha
lds
or
jnp
adc
shlb
dec
test
std
cmp
mov
sub
or
dec
adc
xchg
mov
daa
push
imul
not
mov
fcomps
add
inc
cmpsb
ret
stos
dec
mov
ljmp
popf
hlt
pop
add
insb
push
andb
sbb
test
mov
rcr
dec
loopne
push
cmpsb
hlt
fcoms
cmp
inc
dec
lock
cwtl
es
inc
test
pusha
fbstp
cli
add
mov
xchg
sub
test
cmpsb
pushf
mov
rcrl
icebp
in
xlat
xor
gs
adc
add
daa
sbb
popf
cmp
pop
fdiv
mov
stos
cmp
xchg
xor
mov
insb
xlat
add
jmp
out
rclb
out
andl
or
repz
pop
jmp
sub
jl
es
repz
add
movl
fisttpl
xor
push
mov
cld
sbb
rorb
jmp
pop
clc
mov
test
das
xlat
inc
in
jae
mov
int
adc
mov
xor
mov
mov
sysret
fst
adc
je
mov
repz
jnp
std
sbb
es
rol
jge
inc
pop
mov
fcomi
fcoms
dec
mov
shll
lcall
lock
xor
mov
neg
pop
jle
mov
add
mov
out
mov
cld
dec
int3
outsb
stos
out
mov
orl
and
xor
iret
cmpsl
xchg
fcoms
jg
mov
pop
lcall
push
adc
adc
ret
push
jo
xchg
sahf
popf
push
stc
iret
push
test
pop
or
adc
rcll
outsb
cmp
add
xchg
sbbl
aas
sbb
xchg
mov
push
sbb
or
inc
pop
jnp
push
adc
lret
push
cmpsb
dec
add
sti
cli
std
fs
dec
cmp
xor
mul
gs
cmp
pop
jl
das
lods
pop
gs
loop
inc
xchg
ja
iret
add
cmc
cmp
xor
out
insl
push
stc
and
test
push
cwtl
mov
add
pop
testl
rolb
lahf
pop
xchg
orl
cmp
popf
js
jp
rcrb
sub
push
rolb
fwait
nop
stos
dec
cmp
xor
xchg
push
mov
push
mov
inc
lret
mov
push
stc
xchg
jmp
xchg
push
xor
enter
jmp
lds
jg
ffreep
lock
jl
fsubl
add
aas
divl
fadds
push
inc
inc
lcall
out
sub
iret
or
pop
ret
out
jg
fsub
bound
lahf
push
or
or
in
nop
mov
mov
mov
out
inc
add
lret
ljmp
mov
decl
pushf
add
mov
in
loope
sub
jnp
inc
adc
dec
mov
or
push
mov
mov
mov
push
cmp
test
in
xlat
mov
pop
test
jl
notb
loop
jmp
add
push
es
mov
or
add
repnz
add
sub
cltd
add
out
daa
xor
into
fistps
mov
into
pushf
daa
aaa
pop
inc
mov
or
xchg
sub
lds
js
ficompl
mov
and
push
hlt
cmp
sbb
pop
mov
inc
sbb
and
shl
seta
call
push
and
xchg
gs
rcrl
push
sbb
lock
out
jno
jge
outsb
xchg
test
inc
xchg
imul
xor
dec
ss
ror
je
in
jne
xchg
xor
jb
xor
lahf
rsqrtps
adc
es
incb
push
stos
sbb
icebp
iret
cmp
outsb
or
je
out
and
jl
xchg
loopne
mov
cld
or
sbbl
inc
xchg
sbb
pop
push
rorb
sbb
xor
imul
add
test
push
adc
dec
mov
arpl
dec
add
ljmp
movsl
lea
imul
or
sbb
out
in
mov
movsl
sub
add
lea
ret
js
sub
xor
insb
pop
repz
aas
js
or
or
adc
test
jne
scas
jo
pop
dec
lock
add
push
cmpsl
mov
ljmp
insl
rolb
mov
sub
jle
cmp
cli
lea
les
stos
xchg
stc
fiaddl
xchg
mov
test
jge
mov
inc
add
push
push
stc
data16
test
fadd
rolb
xchg
addl
jmp
cmpsb
jmp
sub
jmp
push
adc
jns
lahf
btsl
adc
adc
rcl
out
je
scas
push
mov
popf
add
pop
pop
rorb
rol
sub
jnp
mov
and
xchg
out
clc
sarb
rorb
xchg
xchg
sbb
imul
inc
dec
add
pop
sti
pop
idivl
ja
lods
aad
je
test
sbb
in
clc
or
jnp
sub
mov
push
out
and
adc
cmp
xor
enter
push
addb
popf
jne
jp
mov
xlat
imul
test
out
mov
xchg
cmp
ficomps
add
in
cmpsl
arpl
lock
lret
or
sub
pop
test
add
stos
mov
lss
arpl
fmul
or
lea
leave
inc
cmp
mov
dec
push
in
mov
aas
subb
mov
cmpsb
jl
leave
mov
shrl
loope
rolb
fldenv
out
xchg
and
dec
push
adc
pop
fisubrl
xchg
movsb
jle
add
das
dec
pusha
inc
enter
out
sbb
pop
push
inc
insb
test
cs
enter
mov
push
call
mov
outsl
fisubs
fwait
cli
mov
and
es
mov
xchg
loopne
ret
arpl
stc
sarl
jnp
push
sbb
mov
jmp
cltd
into
mov
cmp
mov
jnp
sub
movb
adc
mov
int
jmp
jle
xorl
jge
mov
xor
cmp
xchg
mov
pop
imul
fdivrl
pop
jmp
or
insl
out
addr16
push
arpl
adc
mov
fiadds
fdivs
adc
inc
fisttpl
rorb
rol
add
outsb
std
cld
sub
mov
aad
insl
lock
pop
jo
cmp
or
pusha
ljmp
sub
mov
sub
addr16
mov
mov
mov
popa
out
insb
ret
xor
add
lds
lock
pop
sub
add
movsb
and
sbb
into
add
sub
in
mulb
std
stos
xor
xchg
leave
pop
pop
dec
jecxz
lds
dec
xlat
lds
and
in
mov
cmpl
inc
les
add
iret
lcall
push
ja
aas
or
mov
adc
mov
sbbb
call
or
mov
lock
cmpsb
aaa
push
xor
into
clc
pop
push
imul
dec
inc
sbb
mov
push
test
jb
leave
inc
inc
out
mov
adc
mov
aaa
mov
add
xor
cmp
enter
push
in
test
mov
lea
push
sub
xlat
inc
mov
cli
adc
lret
adc
sbb
xchg
fcomip
bound
jb
int
jmp
mov
fildll
add
lcall
or
mov
int3
xor
dec
or
pop
call
insl
xchg
into
dec
imul
xchg
shll
add
and
repnz
jno
cs
jbe
arpl
ljmp
jo
adc
sbb
add
fxch
mov
inc
cmc
mov
and
int3
mov
mov
fnstenv
xchg
pop
outsb
ret
pop
xchg
and
push
push
test
mov
mov
aaa
xor
dec
dec
sbbb
or
jl
jb
sub
int3
sub
add
mov
pop
aaa
push
sub
sub
xchg
es
pop
lcall
add
sbb
or
and
and
lahf
ficompl
mov
sbb
push
xor
fcoml
ja
push
jmp
rolb
push
push
pop
clc
xchg
dec
dec
daa
orb
dec
jo
inc
shlb
and
and
clc
movsb
dec
popa
hlt
jl
js
and
jns
push
jmp
fidivl
jns
dec
fstpt
lock
nop
pushf
icebp
mov
clc
push
push
test
outsb
ss
shlb
out
mov
sbb
xor
push
fistpll
outsb
js
insl
call
mov
jmp
aaa
cmp
lds
sub
add
mov
imul
scas
dec
jae
sbb
dec
into
adc
imul
add
lahf
pop
xlat
xchg
subb
xor
add
test
fldl
lret
nop
popf
cmp
add
cli
lods
rolb
jge
jnp
fcomp
mov
push
pop
adc
ret
and
into
sbb
sub
in
cmp
or
iret
loope
div
inc
cltd
sub
out
inc
jecxz
pop
loope
fdivl
aas
into
xor
arpl
lods
sbb
ficoms
adc
and
sahf
pop
add
mov
test
xor
pushf
xchg
mov
fs
pushf
stc
sub
mov
mov
sbb
dec
nop
jno
sub
xlat
daa
rclb
gs
or
les
icebp
jo
loop
mov
push
std
pop
neg
xor
clc
cltd
adc
mov
mov
and
fsub
pop
cmp
pop
mov
fildll
pop
xchg
xor
push
sbb
dec
jl
mov
and
sub
add
and
jne
outsl
xchg
fcoml
lret
fimull
pushf
xchg
ja
pushl
dec
cmp
cmp
lcall
xor
xorb
xorb
cmp
fisttpl
fcomps
pop
ret
and
mov
cmp
mov
test
mov
xchg
pop
int
test
pop
jecxz
lahf
sbb
pop
pop
nop
mov
ret
cmp
out
sarl
mov
fnstcw
into
pusha
pop
inc
mov
sub
pop
aam
push
pop
int
jp
sbb
cmpsb
adc
repz
icebp
add
lea
mov
fadd
clc
push
jmp
pop
inc
dec
sbb
push
loopne
xor
loopne
jmp
fildll
push
adc
or
jp
out
ret
or
mov
repnz
mov
sub
std
adc
mov
xor
out
pop
mov
ds
jb
test
pusha
in
push
pop
out
int3
inc
inc
aam
pop
cmpsl
repz
xchg
jae
xlat
in
cmp
ss
flds
cs
fcoml
in
and
repnz
test
xchg
add
ret
cwtl
push
dec
test
pop
pop
pop
jge
aam
insl
rcr
shrb
rolb
pop
xchg
jnp
cmp
and
or
cmpsl
insb
fwait
cmp
sub
jp
fcoml
inc
sti
sbbl
xor
and
adc
mov
in
pushf
insl
in
add
lret
addr16
js
inc
dec
fsubrs
pop
mov
jp
cmp
xchg
fsubrs
adcl
xor
loopne
aas
lcall
push
push
ss
xor
jo
add
or
xchg
lea
cmp
sbb
fisubs
lcall
mov
mov
sbb
popf
or
dec
rolb
cmp
and
xor
pop
call
pop
mov
lcall
inc
jbe
repz
jecxz
loopne
and
rcrl
or
test
les
in
fwait
divb
pop
in
mov
jmp
mov
cs
mov
push
lcall
lahf
pop
cmpsb
add
lods
mov
jns
or
rcl
popf
cmpsl
mov
add
inc
enter
add
xor
inc
call
and
jle
ja
pop
enter
loope
and
pop
popf
mov
test
xchg
xchg
add
icebp
scas
cwtl
mov
out
cmp
push
cli
pop
cli
pop
sbb
push
xchg
loope
pop
sbb
push
cmp
sub
imul
fistps
insl
jae
daa
jbe
rcr
lcall
cmp
outsb
das
test
and
rolb
sbb
outsl
addr16
mov
and
in
addr16
mov
mov
cmc
jnp
jae
jl
inc
push
loopne
adc
jg
pop
sti
in
and
jl
test
mov
dec
mov
call
ds
pusha
in
or
orb
pop
push
fiaddl
fisttpl
and
cmp
subb
scas
cmpsl
int
lea
lods
cltd
pop
cmp
daa
inc
mov
or
cwtl
mov
andb
push
lods
adc
cmp
ss
xchg
in
pop
loop
pop
lods
lret
mov
arpl
pop
lock
mov
mov
cltd
mov
mov
cmp
add
aam
pop
lods
add
mov
int3
arpl
adc
insb
testb
mov
push
lret
les
mov
int
dec
movsl
push
or
dec
adc
dec
pop
insb
mov
mov
push
cmp
shlb
mov
cmpsb
push
pop
mov
dec
add
sbb
imul
inc
or
arpl
fs
mov
subb
mov
add
xorb
fidivs
scas
pusha
jl
mov
cmpl
pop
cmp
fdivrl
test
out
dec
inc
pop
or
test
ror
jg
jg
mov
hlt
inc
cmp
test
pop
in
sbb
inc
and
pop
sbb
sub
adcl
popf
inc
jge
jmp
cwtl
xor
inc
dec
fs
leave
push
add
in
mov
loop
pop
out
ficoml
inc
mov
push
pop
cmp
xor
dec
push
mov
stos
scas
ss
sub
movsl
pop
sbb
dec
clc
push
je
or
pop
add
xchg
push
pusha
mov
test
xchg
push
js
ljmp
mov
mov
call
push
pop
dec
inc
dec
xchg
stos
and
fldcw
mov
mov
in
lahf
mov
inc
sbb
addb
pop
pushl
pop
push
btr
mov
std
mov
rcl
in
sbb
cmp
push
dec
shrl
stos
mov
std
cmc
dec
mov
push
xor
pop
dec
xor
imul
int3
adc
mov
dec
shrb
je
jne
ljmp
sub
hlt
push
cmp
or
pop
mulb
mov
push
outsb
jne
ret
add
push
and
pop
loopne
push
pop
or
lret
cmp
push
dec
aas
xchg
stc
fwait
xchg
pop
mov
test
dec
int
xchg
push
addr16
test
dec
fwait
lret
fwait
sbb
negb
out
dec
jl
fildll
cld
adc
sbb
xor
mov
dec
das
mov
icebp
fistl
adc
sbb
fldl
inc
cmp
xor
mov
repz
push
lods
or
imul
das
ja
mov
sarl
fsubrp
bound
xchg
and
jge
mov
pop
testl
cmp
cli
pusha
push
mov
xchg
dec
and
push
sbb
mov
stc
rcll
loop
roll
jbe
popa
inc
in
xor
and
lret
add
cmc
je
or
lahf
lret
sbb
int
cmpsl
loope
jnp
sarb
rep
mov
dec
sbb
pop
jb
insb
xchg
fstps
jo
mov
push
mov
divl
popf
xorl
clc
das
stc
rorb
push
add
sbb
pushf
or
stos
inc
ja
rorb
mov
nop
push
loope
or
out
dec
xchg
push
sbb
arpl
add
ret
add
add
mov
loop
pop
jae
and
xchg
xchg
int
repz
cmp
mull
int
loope
fs
into
dec
cmpsl
sbb
sti
inc
mov
repnz
cmp
dec
pushf
mov
pop
sub
pop
divl
test
inc
dec
lret
push
pop
adc
jmp
out
in
aaa
sarb
movsb
dec
popf
xor
ljmp
popf
jg
sub
mov
mov
enter
jo
icebp
mov
push
jmp
push
test
out
hlt
pop
pushf
mov
fimull
loop
mov
xchg
sub
or
push
jle
sub
sbb
mov
inc
ret
bound
int
shrl
pop
nop
fwait
imul
les
mov
enter
xor
mov
mov
shl
lret
jmp
in
sub
out
rolb
insl
lret
xchg
lret
add
mov
jmp
test
or
jb
xor
lods
mov
sub
lea
push
cmp
jnp
pop
sub
mov
in
imul
xchg
adc
bound
mov
pop
mov
mov
and
in
adc
cmpb
scas
cmpxchg
push
and
sub
into
jb
mov
adc
push
or
shrl
jg
aaa
ljmp
mov
out
dec
xor
popl
mov
and
outsb
punpckhdq
and
mov
cmp
mov
out
xor
mov
out
movsb
jne
fisttpll
cmpsb
pop
scas
dec
ds
jno
sbb
mov
push
cmp
xor
enter
pop
ss
cwtl
push
rcl
and
cmpsb
mov
xchg
adc
xchg
pop
fldcw
outsb
test
mov
clc
pop
or
out
pop
push
dec
mov
adc
adc
lea
adc
push
mov
adc
inc
iret
mov
push
mov
mov
lds
arpl
popf
into
aaa
adc
insb
pop
arpl
pop
and
loopne
push
fcoms
add
popa
sbb
lahf
push
sbb
jo
stos
cwtl
repz
and
incb
ja
jp
jl
push
mov
pop
andb
ds
mov
rol
unpcklps
dec
mov
pop
mov
pop
std
imul
cs
stos
in
out
adc
push
xchg
cmp
imul
mov
add
test
js
icebp
cwtl
ss
int3
test
push
mov
pop
inc
ljmp
mov
lret
loope
test
iret
test
mov
push
int
cmc
notb
out
cmpsl
mov
loop
xchg
rclb
xchg
dec
sub
lock
shlb
cmpsb
lcall
push
scas
xchg
cli
js
push
xor
xor
mov
inc
jns
int3
imul
jns
lock
out
push
push
ret
pushf
ds
and
cmp
jns
and
ja
out
push
mov
arpl
xlat
mov
xorl
xchg
lea
or
lods
and
fidivs
arpl
dec
fcomps
jp
mov
push
or
loope
das
in
sbb
xlat
inc
out
movsl
add
aaa
in
imulb
pop
xchg
cwtl
adc
xlat
inc
and
cmpsl
push
ss
fnstsw
pop
adcl
pop
mov
cmp
in
imul
dec
jl
xchg
std
sbb
add
nop
or
xor
mov
dec
lea
stos
out
mov
bound
push
push
or
mov
clc
popf
faddl
adc
cld
and
jb
xchg
mov
mov
inc
bound
lea
mov
dec
or
add
je
jmp
fstps
mov
insl
mov
fldenv
in
xor
mov
ret
mov
dec
mov
int
cmp
out
xor
test
mov
sub
int
push
lds
and
cli
push
clc
data16
in
icebp
inc
cmpsb
out
jo
dec
push
sub
mov
loope
adcl
into
dec
mov
and
jg
mov
jns
int
mov
sbb
bound
or
mov
mov
inc
sub
xor
mov
rclb
sub
jbe
inc
adc
je
rol
ljmp
enter
mov
fwait
clc
sub
mov
push
addr16
and
xchg
cmc
adcl
cmp
stc
mov
pop
imul
sub
fisubrl
lret
jo
add
mov
push
ret
cmpsl
cmpsl
sbb
and
push
adc
and
inc
jno
jg
mov
mov
mov
xor
mov
and
xlat
dec
iret
insb
rolb
jp
sub
xchg
sub
dec
cwtl
mov
inc
fwait
push
out
pop
movsb
jo
in
int3
and
divl
mov
ret
jno
push
ficoms
sub
push
imul
pop
sbb
xor
push
and
push
sub
daa
movsb
in
inc
mov
inc
pushf
adc
add
xor
mov
push
xlat
bound
inc
push
loope
sub
cmpsl
dec
ret
xor
push
int
jge
ja
adc
repnz
mov
and
les
divl
xor
mov
insb
push
pop
xchg
popa
sti
in
inc
enter
pop
pop
xor
pop
and
mov
mov
fdivrs
or
inc
pop
push
add
mov
xor
cvtpi2ps
test
repz
inc
jp
jge
movsl
fdivrl
cli
add
inc
or
sub
xchg
adc
orl
sbb
mov
jbe
je
mov
mov
inc
and
push
lcall
fisttps
dec
movsl
pop
cli
insl
sbb
jae
mov
mov
cmc
ficompl
pop
xchg
mov
aaa
ficoml
pusha
das
jge
test
jae
in
stos
mov
push
das
pop
aam
aaa
add
jno
out
push
fisttpl
cmp
dec
shr
ret
inc
cld
pushf
aas
loop
daa
mov
inc
inc
sbb
leave
aas
push
enter
cmpb
jns
mov
mov
inc
fs
xor
je
clc
xor
sbb
into
push
pop
popa
outsb
jns
fstl
fidivl
cmp
push
jge
jo
addr16
vpunpckhbw
loope
push
daa
movsb
test
adc
shlb
rol
mov
xchg
mov
sub
sbb
or
inc
dec
pop
xor
push
pop
inc
and
adc
mov
jbe
lcall
decb
out
dec
into
out
mov
sbb
imul
ljmp
or
fbld
div
dec
and
out
dec
gs
and
dec
shll
daa
pop
mov
aam
push
das
and
dec
push
dec
xor
jne
stos
sub
sahf
cmpsb
je
cmpl
cmp
out
sbb
mov
stos
out
fistpll
adc
add
dec
es
mov
nop
loope
and
in
push
sbb
les
mov
push
add
lock
clc
pusha
aaa
sbb
fs
sbb
cmp
imul
cmp
mov
fmull
pop
pop
jmp
pop
sbb
popl
repz
sub
jb
or
adc
push
jl
adcl
call
out
out
lock
jbe
mov
fs
push
insb
xor
incl
ret
lcall
inc
gs
arpl
and
push
mov
xor
add
aad
mov
mov
pop
or
dec
stos
dec
inc
or
lcall
cwtl
push
in
loopne
xchg
int3
int3
ss
push
aam
popa
push
lcall
ljmp
mov
fs
sub
sub
cmp
popf
mov
xor
loop
cmpb
mov
adc
inc
inc
jecxz
lds
test
push
mov
jnp
jnp
fldcw
jb
fnstsw
lock
xor
mov
test
mov
push
add
push
lret
aam
mov
and
sbb
add
xchg
inc
mov
popa
repz
das
dec
mov
enter
sub
push
pop
xor
xor
mov
and
lods
xchg
andl
and
sbb
mov
cs
inc
mov
sti
push
test
imul
sbb
inc
xor
fnstcw
fadd
nopl
orl
fsts
or
and
adc
aaa
ret
cmc
decb
popf
push
sub
sbb
xor
push
sbbb
sti
into
mov
shlb
scas
into
ljmp
out
push
lret
test
mov
mov
cmp
jmp
pop
subl
shlb
ret
dec
push
inc
and
in
mov
xchg
imul
rorl
sub
loop
xor
ss
bound
push
fisttpl
add
mov
fs
aaa
jnp
cmp
cmpsl
flds
test
shlb
fnstsw
dec
sbb
mov
into
push
imul
test
cmc
dec
mov
insb
jp
cld
add
lahf
int3
jno
daa
xchg
push
gs
push
xchg
shlb
dec
or
loop
data16
mov
mov
out
cmc
das
clc
xlat
aas
cs
and
cli
xchg
arpl
loope
movsl
fidivs
cmp
pop
popa
sbb
jmp
stc
mov
sahf
add
jecxz
ficomps
or
adc
mov
xchg
fiaddl
mov
cs
xchg
jl
pusha
call
push
mov
aaa
cmp
mov
cltd
push
add
adc
imul
dec
movsl
add
adc
fcompl
dec
orb
mov
cwtl
es
jae
cmp
dec
mov
mov
inc
mov
scas
or
test
sar
fdivl
xor
lcall
rcrb
sbb
ss
or
mov
iret
mov
call
jmp
loopne
xor
fisubl
aas
and
and
or
call
push
mov
xor
es
loope
test
xor
sti
mov
sbb
hlt
adc
imul
jbe
push
imul
pop
lahf
imul
ret
push
jecxz
xor
pop
xchg
mov
mov
ret
sbb
xchg
icebp
mov
and
cmp
add
in
pop
adc
stos
bnd
xor
dec
bound
gs
es
jno
jb
or
or
push
popa
insl
pop
push
push
xchg
addb
sub
mov
xchg
repz
test
imul
xchg
and
mov
mov
rorb
clc
sub
push
adc
mov
jne
adc
mov
push
das
xorl
ja
out
out
sub
inc
or
lods
stc
mov
cmp
jl
fs
xchg
je
push
cmpsb
sbb
xchg
test
outsb
das
or
sbb
rcrl
in
and
loopne
pop
imulb
shrl
jnp
cmp
pop
or
jle
leave
push
loop
in
and
pushf
outsb
inc
inc
push
push
mov
outsb
popa
sti
addr16
repnz
pop
into
and
xor
imul
repnz
lods
mov
pusha
cmp
xor
xor
inc
xor
rorl
or
cli
daa
sahf
stc
xor
cld
push
stos
mov
xlat
aam
sub
push
jb
jo
lock
cmp
sbb
int3
stos
and
inc
xor
push
xchg
js
pop
fldl
shll
mov
and
sub
jbe
sub
subl
mov
loope
adc
into
sbb
sbb
sahf
xchg
mov
jg
in
orl
add
add
in
xor
sub
imul
aaa
cmc
sbb
jmp
mov
or
test
and
call
das
ja
jmp
sub
xchg
inc
popf
rol
xor
sub
push
cmp
js
repnz
iret
xchg
adc
jbe
lcall
and
or
xchg
fsub
add
mov
dec
push
movsl
call
les
imul
push
dec
std
mov
sti
decl
push
mov
ss
jne
jg
lret
insb
or
inc
cltd
pop
vmovlps
and
mov
sbb
ret
dec
popa
mov
cmpsl
fcompl
cmpsb
jg
pop
stos
popa
mov
cmp
sub
and
cmp
sbb
push
ja
lea
cld
mov
push
mov
and
add
ljmp
aaa
flds
mov
sbb
imull
xor
jb
and
push
sbb
xchg
sbb
nopl
repnz
es
fs
rorl
cmp
inc
add
ss
clc
arpl
shrl
int3
xor
mov
sti
clc
mov
or
push
cmp
dec
popa
clc
or
mov
mov
ljmp
push
jp,pt
sub
mov
in
aas
sub
xor
push
push
xor
pop
cmpsl
lock
out
sbb
loope
sahf
movsl
cmp
ficomps
mov
and
stc
jmp
sbb
lret
ret
ja
aas
in
cmpsb
cmpsl
iret
nop
mov
xor
repz
mov
inc
stos
pop
outsb
lret
push
push
push
loope
outsb
fldenv
add
movsb
pop
insb
enter
pop
stc
ret
enter
stc
fcmovne
jne
cs
jne
inc
mov
stos
in
dec
lods
cmpl
lods
ret
test
mov
movsb
xor
xchg
ja
xchg
cmp
roll
or
jecxz
ljmp
xchg
call
push
xor
add
fcom
cmp
popa
incl
sub
lock
das
jl
pop
out
xor
pop
jge
add
push
pusha
adc
dec
adc
cwtl
cld
jb
or
lret
xchg
cli
mov
pusha
in
cmp
push
mov
xchg
stos
jge
sub
xor
in
insb
fdivrl
jo
inc
inc
adc
inc
mov
push
mov
mov
fs
cmp
addl
rclb
lret
jp
pop
rorl
mov
sub
inc
lock
ds
add
jmp
jle
cmp
dec
out
sbb
cmpsl
inc
mov
jge
call
insb
scas
or
shl
mov
testl
aam
xchg
mov
fildll
jae
imulb
fcompl
frstor
cmp
das
sub
cvtps2pi
mov
or
dec
cmp
fsub
jnp
jecxz
fcompl
cmp
ljmp
xlat
test
adc
mov
jno
and
adc
lret
int
xchg
pop
pop
and
test
dec
lods
jge
push
xor
push
lret
add
shll
pop
pusha
xor
jns
and
pop
mov
fwait
dec
jp
testb
mov
call
sti
mulb
js
inc
ret
xor
imul
loop
xchg
hlt
jge
xchg
stos
sub
mov
test
insb
xor
cld
xchg
lahf
push
fildl
cltd
fcmovnu
ficoms
int3
mov
movsl
and
scas
mov
lock
fcomps
adc
leave
sub
insl
add
inc
data16
ds
sbb
dec
fnstenv
xchg
pop
push
lcall
jne
mov
and
mov
shll
and
push
subl
dec
addl
adc
lea
sub
cmp
sub
ds
std
mov
mov
fnstenv
mov
scas
sbb
pop
aad
xchg
in
aaa
test
rcr
sbb
stos
test
lret
daa
into
ret
mov
test
cld
sbb
shrl
ret
adc
add
pop
in
lret
mov
cmp
xchg
dec
popa
adc
cld
jg
popf
sub
outsb
jno
loop
and
adc
mov
mov
mov
fildll
ret
jecxz
or
movzwl
ja
push
xor
dec
cltd
test
xchg
fwait
and
inc
outsb
mov
fcmovnb
adc
mov
jmp
pusha
imull
mov
push
sbb
bound
jne
fwait
test
xor
aad
je
test
cmp
mov
shlb
push
or
xor
pop
dec
push
repnz
fsubrs
pop
int3
orl
mov
xor
jmp
icebp
in
icebp
pop
fldcw
shlb
aas
inc
mov
sbbl
cwtl
xchg
pop
dec
pop
push
lods
or
aam
fstps
cs
push
insb
sti
rolb
pop
cli
stos
lea
daa
push
jnp
xchg
xorl
xchg
cmp
inc
jo
mov
or
add
in
es
fwait
mov
mov
pop
out
int3
aad
sar
inc
push
jge
aas
jge
movsb
popf
push
ja
stc
and
sbb
push
xlat
mov
pushf
not
dec
push
test
fdiv
out
xlat
ret
jge
test
sub
inc
cmpb
sahf
cs
pop
lods
pop
mov
imul
cmp
cmc
jecxz
and
jmp
cli
mov
jbe
popa
pop
add
shlb
lret
insl
add
cmpsl
loopne
cmp
shl
sub
outsl
inc
mov
outsb
mov
shll
push
icebp
pop
cmp
test
sti
adc
dec
flds
ds
sub
mov
repnz
movsl
inc
xchg
pop
shlb
and
add
jp
cmp
dec
inc
pop
jne
hlt
mov
pop
mov
jmp
push
push
pop
adc
pop
in
packsswb
mov
sbb
sub
jnp
inc
jns
stos
stos
out
insl
dec
inc
xor
inc
inc
mov
push
ficompl
sar
int3
dec
mov
add
cmp
mov
dec
add
push
fcomip
sub
fiaddl
jbe
jne
mov
push
mov
dec
les
pop
fidivrl
jecxz
daa
or
in
std
lcall
jae
rcrl
notl
jo
lret
in
and
repnz
out
fildl
imul
sahf
out
pop
push
ret
shll
mov
mov
adcb
fdivrs
fs
movsb
out
jge
jno
xor
mov
or
les
sbb
sahf
jge
mov
imul
mov
jmp
push
repz
adc
lock
je
popa
add
jle
fwait
dec
dec
pusha
xchg
in
pop
adc
scas
mov
adc
enter
add
in
inc
xchg
jge
and
lahf
xchg
mov
dec
in
dec
dec
jno
mov
cmpsb
lea
sti
leave
gs
xlat
cmp
fsub
cs
push
scas
or
fwait
jae
dec
adc
mov
push
lret
fprem1
push
jmp
ffree
pop
xor
cmp
jne
ds
loop
shlb
stos
js
in
sar
lea
arpl
push
add
and
inc
aaa
mov
pop
adc
mov
lea
lret
xchg
test
xor
add
sub
repnz
into
push
xor
cmp
ljmp
xor
subb
int
mov
cs
jns
je
dec
data16
inc
pop
add
add
mov
add
mov
push
sub
out
xor
pop
data16
sbb
mov
js
or
and
lret
loop
mov
popf
sarl
pop
push
cwtl
lods
popa
add
insl
adc
mov
adc
in
pop
leave
push
xor
test
sub
nop
imul
ja
pushf
sbb
aaa
test
mov
into
push
and
in
or
mov
sbb
sahf
inc
test
inc
jge
add
inc
adc
cmc
and
shlb
jae
ret
lcall
dec
cmp
pusha
adc
movsl
shrl
icebp
mov
dec
jne
jnp
xchg
or
inc
arpl
sbb
xchg
jg
aaa
xor
inc
mov
jbe
mov
lret
jbe
pop
or
mov
test
xor
fldenv
out
push
int3
jl
call
std
pop
call
pop
adc
jo
and
sti
add
and
and
pop
xor
sahf
and
mov
xchg
stos
adc
daa
fistpll
fisubrl
inc
cmc
test
jnp
mov
adc
cmp
sarb
mov
cmp
add
xlat
std
jmp
mov
and
or
xor
stos
scas
cs
sarl
enter
lods
fidivrl
leave
test
push
stos
adc
stos
pop
data16
popf
hlt
js
dec
jns
imul
iret
das
jb
insb
push
xchg
std
leave
repnz
test
insl
sahf
into
push
push
ret
in
aam
les
pop
pop
scas
pop
subl
push
lock
ret
add
out
inc
lcall
lahf
mov
fs
cmovp
sub
push
mov
mov
clc
jnp
shl
xor
inc
mov
xor
fdivrp
rolb
mov
xor
in
repnz
sahf
mov
sbb
pop
fs
mov
cwtl
adc
jb
cmp
cmp
subps
adc
cmp
fst
xor
cmp
es
cltd
mov
sub
mov
movl
int
orl
xchg
fcomi
xor
xlat
call
cmp
mov
fsubs
and
ret
xlat
jb
jb
jl
jb
rcr
adc
and
or
xchg
add
dec
jae
movsl
pop
mov
push
das
popf
sbb
push
notb
xchg
lret
push
mov
jp
and
ss
std
ret
lret
or
rolb
aad
aas
and
sub
les
shlb
test
or
jns
or
inc
adc
lds
jge
lahf
jae
dec
mov
lds
cwtl
out
jp
jnp
and
jle
inc
cmpsb
stos
mov
clc
cmp
fsubrs
insb
push
lea
mov
aam
test
cmp
ss
inc
mov
imul
jns
outsb
mov
pop
mov
push
push
jae
push
leave
jnp
xchg
fadds
cmpsl
int
sbb
notb
or
in
cltd
out
pushf
icebp
fnstenv
dec
fildl
ljmp
inc
jno
inc
adc
cli
fwait
lret
aaa
mov
and
sub
mov
pop
sbb
inc
lret
adc
push
ficomps
aad
popa
sbb
and
stos
jae
pop
repz
data16
cwtl
loopne
sub
sub
mov
movmskps
inc
inc
sbb
cwtl
pop
loopne
cmp
je
and
int
pop
xorl
inc
push
inc
jl
pop
rcrl
lret
fildl
insl
add
push
jp
imul
mov
xlat
jp
xchg
sbb
pop
int
aad
movsb
and
mov
jmp
mov
int3
add
loop
mov
xchg
pop
pop
pop
decl
xorl
lahf
jp
es
cwtl
add
xlat
and
daa
jno
adc
mov
dec
lds
dec
sbb
adc
jae
and
loope
ret
adc
ljmp
shrb
xchg
xorb
sbb
mov
pop
pop
mov
jmp
xor
jno
push
jno
inc
mov
cld
jb
ret
out
xchg
out
xor
dec
lret
xor
pop
gs
outsb
xor
cltd
in
hlt
inc
jbe
mov
in
rcrl
or
jbe
rcl
repnz
push
mov
les
pop
jne
and
mov
cmp
repz
jbe
shrb
mov
cmp
aad
je
mov
pop
or
aam
scas
in
push
cmc
jne
mov
add
mov
sbb
add
jnp
fnstsw
pop
clc
js
jmp
sbb
cld
aad
jno
mov
aas
testb
cmp
roll
outsl
es
call
fnstenv
pop
inc
daa
gs
mov
dec
lods
dec
out
mov
pop
jb
push
pop
xchg
adc
idivl
aas
lret
call
repnz
inc
cmp
inc
loope
stos
pop
cld
mov
je
lret
mov
sbb
pop
cwtl
push
add
jp
mov
pop
mov
pop
xchg
mov
insb
push
sub
add
push
aam
imul
movsb
jecxz
pop
scas
es
fildl
fdivrs
test
outsb
bound
stos
pop
leave
jl
lahf
fs
mov
insl
outsl
fiaddl
mov
ds
inc
inc
jb
lea
push
mov
or
int
test
xchg
enter
pushf
jge
inc
cltd
mov
push
clc
mov
je
gs
sub
jl
andb
sbb
or
jne
scas
std
jno
xor
enter
andl
js,pn
dec
shr
and
pop
sub
or
and
aas
jbe
mov
call
jl
sbb
add
daa
in
xor
and
adc
out
aas
std
xor
mov
cwtl
outsl
adc
pop
idiv
je
mov
xchg
imul
in
and
pop
arpl
pop
pop
sub
outsb
out
scas
mov
jo
inc
push
imulb
cmp
scas
inc
push
mov
aaa
outsb
sbb
add
cmpb
aam
dec
clc
cltd
and
add
push
lods
loop
mov
mov
das
scas
out
aam
dec
inc
add
pushf
xchg
jnp
adc
adc
mov
daa
add
hlt
jno
ffreep
test
mov
insb
push
dec
add
push
fmul
inc
mov
sbb
adc
xchg
xchg
in
ljmp
jmp
or
add
loop
lahf
push
xchg
shrb
pop
or
push
sbb
pop
push
aas
lcall
or
dec
adc
daa
mov
jne
popf
dec
lock
mov
lret
or
jg
adc
adc
xchg
pop
data16
int
pop
lea
push
test
pop
xor
xchg
jge
stc
in
call
xor
adc
dec
pushf
in
add
cltd
push
fwait
insl
js
fcom
and
ret
in
and
adc
pusha
pop
es
mov
dec
inc
mov
dec
lds
pop
pop
jg
fldcw
cmp
data16
sbb
sbb
jae
js
ljmp
cmpsb
mov
pop
cmpb
mov
cmp
add
test
test
push
jecxz
shr
mov
jbe
lods
stc
decb
pop
xchg
jge
cmp
mov
hlt
add
push
cmp
icebp
and
outsl
nop
aaa
push
out
scas
push
scas
shrb
lret
enter
lret
rcrb
push
inc
dec
hlt
hlt
scas
insl
push
push
stc
jg
leave
rorb
adc
fbld
in
mov
cmp
not
pop
sub
in
pop
insb
in
mov
sub
jmp
mov
xor
shll
push
arpl
cmp
outsb
cmpsl
sub
outsl
pop
and
inc
out
mov
ja
jg
xchg
lods
lret
jge
fcompl
jne
insl
leave
ss
aaa
fsubs
push
rcll
imul
xlat
fisubl
arpl
daa
sub
into
fmulp
aas
sub
jp
iret
icebp
ljmp
sbb
inc
inc
loop
popa
jo
cmc
or
cmp
popf
dec
add
lret
mov
xchg
xor
jecxz
dec
inc
roll
push
lret
jle
out
loop
mov
stos
hlt
dec
pop
lods
push
jb
xlat
jae
xchg
dec
pop
jne
or
pop
pusha
adc
scas
aaa
adc
aad
out
notl
pop
in
push
xchg
add
cvtps2pi
mov
jnp
aad
lock
jo
mov
mov
inc
xchg
shr
mov
or
iret
mov
int
xor
add
mov
push
shll
daa
pop
cltd
dec
sahf
aam
fnstsw
stos
cld
lea
scas
test
add
pop
rorb
inc
jns
test
rorb
subb
loope
sub
push
jno
xchg
xchg
sbb
mov
mov
icebp
adc
int3
push
push
jmp
out
push
inc
mov
xchg
mov
mov
pop
xorb
arpl
xchg
cwtl
lds
push
mov
in
or
inc
push
mov
movsb
movsl
in
cmc
insl
hlt
out
into
dec
iret
mov
lea
popf
into
stc
sub
mov
sbb
mov
test
mov
xchg
fnstenv
pop
outsb
insb
icebp
xchg
jae
loope
pop
popf
mov
inc
lea
imul
cs
adc
mov
push
xor
repnz
arpl
mov
in
repz
and
lret
pop
call
outsb
pop
ljmp
aas
and
sahf
das
shlb
and
mov
aam
sahf
and
pushf
add
test
mov
in
inc
je
js
xchg
jmp
mov
jns
cwtl
mov
popa
xchg
xchg
push
mov
sub
mov
push
push
xor
sbb
test
imul
xchg
mov
add
mov
cld
aas
adc
lds
jg
mov
pop
cwtl
push
sub
jecxz
cmp
repnz
fucomip
fadds
add
xor
pusha
xchg
xor
sub
mov
ss
sbb
addr16
and
xchg
rcrl
in
aas
or
insb
fidivl
les
dec
xchg
call
je
std
inc
mov
add
cmp
daa
outsb
cmpl
jns
mov
xchg
clc
pop
ret
test
push
daa
cmp
mov
sub
xchg
xchg
rclb
inc
sub
xchg
xor
dec
sub
insl
xchg
mov
cmp
mov
ljmp
jp
jbe
cli
jge
jns
leave
xlat
dec
mov
pop
jne
mov
leave
call
shlb
into
fdivrl
stc
data16
cmpsl
or
popa
inc
mov
aaa
movsb
jl
push
xchg
push
and
bound
in
cmpb
xor
jbe
cld
xchg
aad
and
mov
inc
sbb
pop
jmp
dec
xchg
or
lretw
xlat
lret
hlt
push
mov
outsl
cmp
inc
and
ja
add
out
add
in
mov
push
gs
cli
lcall
sub
inc
std
pop
ja
insb
fistps
jmp
lahf
push
out
test
test
jl
sbb
mov
hlt
cmp
jp
dec
out
imul
sbb
jecxz
pop
mov
cli
in
aaa
xor
mov
int
mov
adc
int
sbb
xor
inc
pushf
popa
test
jne
in
das
int
data16
mov
push
mov
rcl
fld1
sbb
cmc
xchg
pop
push
adc
fdivs
lcall
cli
rcrb
jl,pn
and
adc
or
and
repnz
cltd
popf
hlt
aas
ficoms
xchg
xor
mov
push
popf
cld
xchg
das
mov
pushw
mov
aam
push
jae
lods
xchg
sahf
mov
out
idivb
sbb
test
mov
adc
mov
push
fisubl
faddp
xchg
popa
loopne
fwait
enter
bound
lods
xchg
add
das
xor
mov
fsubs
jae
cwtl
addb
mov
ret
repnz
aas
mov
shlb
pop
fsubl
shll
and
cmp
cmp
mov
flds
sarb
mov
shll
adc
stos
popa
inc
lret
call
loop
loop
mov
dec
add
push
jno
xchg
leave
add
fisubrs
push
and
jb
and
bound
fistps
mov
aad
or
pop
and
inc
retw
int
cltd
repz
adc
xchg
dec
outsl
jle
sub
or
mov
mov
lcall
cwtl
andb
jo
rcll
negl
fwait
icebp
ficoml
es
shr
lods
stc
mov
fnstenv
jbe
into
sbb
jno
cmpsl
mov
xor
aas
cs
nop
pop
sub
aam
fdivl
stc
push
cltd
sar
xchg
lahf
pushf
and
clc
outsl
dec
cli
sub
mov
xor
xor
xor
lret
mov
mov
pop
cmp
xchg
js
cmc
and
sub
xchg
or
mov
inc
pop
inc
idivl
jge
int
outsw
push
cmp
aam
sbb
aas
xor
icebp
sbb
xchg
cmpl
dec
bound
sbb
ss
pop
imul
jns
je
loopne
or
lahf
jp
arpl
xchg
push
or
mov
cmp
xchg
jae
rcll
jbe
fs
fmull
sub
add
test
jge
test
je
push
fbld
out
push
test
scas
ret
jb
mov
movsb
or
mov
add
movsl
cs
cwtl
mov
pop
mov
aaa
cmp
sahf
daa
pop
bound
cmp
dec
bound
fcmovnbe
and
xor
mov
add
xor
push
pop
mov
or
test
jb
jo
mov
loope
ret
push
ja
sahf
sub
mov
sbb
inc
clc
imul
jne
je
push
mov
repz
pop
sub
adc
push
das
jmp
adc
sar
outsb
mov
rolb
pop
mov
push
or
sbb
add
movsl
loop
jecxz
les
add
sbb
xor
xor
pop
cmp
cmc
mov
push
jg
sub
inc
or
mov
mov
aas
pop
enter
sbb
pusha
aas
fimuls
addr16
push
add
dec
xchg
loop
cmc
jmp
cmpsb
lahf
movsl
fsubp
in
mov
outsl
push
xchg
inc
lahf
jne
mov
shr
mov
loope
nop
aas
xor
arpl
cmp
loop
xor
pop
push
fstl
loopne
sbb
divl
push
push
push
faddl
dec
mov
jns
sub
mov
mov
in
cmp
jmp
push
dec
popf
repz
sub
or
jecxz
ret
repz
push
pop
je
leave
into
es
mov
mov
stos
xor
lcall
fldenv
mov
scas
sub
xchg
lret
fdivs
das
fiadds
cmp
pop
jg
into
jge
out
stos
ret
out
cltd
out
jge
pop
mov
aas
xchg
xlat
int
mov
aam
mov
adcl
jecxz
lds
add
mov
lcall
inc
insb
int
adc
sbb
out
cld
cmc
loopne
add
cmpsb
movsl
sbbb
mov
scas
jb
inc
cmc
sbb
xor
loope
sbb
loope
sbb
mov
cmp
xchg
cmc
stc
adc
sub
imul
lcall
sbb
mov
xor
fbstp
out
call
fidivrs
push
clc
dec
jp
and
push
xor
jno
loope
sub
add
mul
test
cltd
mov
mov
fwait
cmpsl
xor
aam
pushf
inc
xor
scas
adc
in
mov
stos
push
or
je
xchg
dec
or
jb
pop
pop
aas
cld
bnd
stos
ljmp
repnz
enter
sub
into
or
xchg
inc
push
inc
cltd
movsb
and
je
scas
mov
leave
sbb
std
pop
or
scas
int3
mov
cmp
mov
add
ljmp
movsl
push
cmp
rol
xchg
pop
and
dec
adc
pop
fbld
xchg
jbe
mov
push
push
mov
sbb
pop
repnz
ret
mov
inc
stos
jnp
mov
sbb
ret
push
ljmp
loopne
ljmp
and
lcall
in
cmp
jl
mov
sti
lock
int
pop
pop
shrb
mov
enter
mov
xor
fs
cmp
and
jg
ss
clc
addr16
cli
push
fsub
icebp
aas
andl
andl
pop
xchg
into
lods
mov
and
pop
mov
pop
test
or
rorb
loop
es
mov
mov
sub
les
mov
in
das
sbb
icebp
cltd
sub
pop
scas
movb
cmpsl
or
inc
sbb
add
jae
pop
and
xchg
cmc
shrl
fistpll
push
test
in
into
xchg
ss
pop
jo
add
repz
adc
push
jle
shl
pop
xchg
dec
scas
sbb
into
imull
mov
fwait
pop
fcomps
sbb
xor
add
mov
cmp
vhsubpd
dec
int3
test
or
notb
xor
cmpsb
outsl
mov
fs
lahf
mov
mov
inc
cli
add
xor
iret
sub
loopne
mov
mov
dec
inc
test
in
rol
xor
sbb
sahf
ds
aad
sub
sub
sbb
push
adc
cwtl
dec
lods
or
cmc
in
into
aaa
inc
clc
or
dec
aaa
mov
add
aad
mov
popf
add
fwait
addr16
test
mov
scas
and
in
icebp
imul
inc
stos
fwait
test
mov
add
cmp
dec
add
cs
or
sub
pusha
je
repz
mov
das
ja
pop
std
jno
jp
jmp
in
lahf
dec
test
adcl
je
out
das
push
aam
mov
int
xchg
daa
rolb
or
mov
aas
fildll
push
jb
xor
xor
and
sbb
iret
mov
les
stos
test
pusha
fcoml
push
ret
movsb
mov
push
iret
mov
insb
mov
es
adc
rcll
mov
xor
imul
jmp
jb
inc
rsm
fidivrl
inc
jl
sub
testb
fsts
cld
jmp
sub
subl
fistl
jns
push
push
out
jecxz
bnd
jle
lods
mov
int3
adc
inc
into
sub
subb
sarl
int3
std
insl
cmp
fidivrl
dec
mov
aam
adc
les
push
xchg
dec
jmp
mov
in
and
push
xchg
mov
inc
push
and
mov
lret
push
xchg
int3
enter
insb
mov
repnz
add
mov
movsl
outsl
sbb
out
or
add
pop
mov
sar
int
lods
lods
test
sub
inc
clc
aas
testl
pop
outsl
test
sub
xchg
shrl
test
xor
xor
call
loop
ja
outsl
in
sub
mov
js
sub
out
lock
aaa
xlat
inc
ret
pop
cmp
pop
inc
jmp
mov
enter
ljmp
dec
into
lea
cmpl
jnp
cmc
clc
or
push
arpl
mov
lock
jle
jb
or
out
cmpsl
clc
stos
dec
sub
jmp
loope
dec
mov
mov
push
pop
or
and
roll
jmp
mov
test
mov
enter
inc
cmpsl
fdivrs
mov
push
fistl
pop
aam
andl
sarl
lock
pop
sarl
shlb
xchg
jp
sub
jnp
ret
adc
aam
in
adc
mov
nop
addr16
rorb
add
outsb
imul
push
pop
xchg
insb
outsl
clc
mov
test
divb
jmp
xor
mov
fmul
outsb
cmp
mov
fisttps
push
xchg
pushf
cmp
inc
cmp
push
push
icebp
jg
dec
jg
cld
pop
xchg
aas
std
cwtl
cld
in
dec
sub
call
or
inc
mov
pop
add
push
or
in
fdivr
mov
jl
mov
and
ficompl
push
adc
ss
sbb
lods
adc
mov
push
inc
jp
add
fcom
fs
xchg
cmpsl
imul
ja
pop
out
sbbb
mov
dec
gs
fmul
mov
test
ja
int
ljmp
mov
fcmovb
push
xor
mov
push
xchg
push
test
mov
xchg
mov
or
aas
jae
cmp
sbb
pop
popa
jl
mov
xorb
mov
lahf
sbbl
sbb
pop
inc
loop
aad
lret
pushf
sbb
mov
mov
int
inc
loopne
rorl
aas
xchg
out
mov
mov
cmp
fwait
ret
dec
adc
lds
sbb
shrl
or
xchg
and
sbb
pop
out
cmp
rclb
jp
mov
push
push
xor
dec
adc
jbe
jle
popa
adc
outsb
adc
into
or
pop
mov
pop
push
inc
or
xchg
mov
aad
aam
pop
jne
ret
insb
ds
loop
iret
rcrb
sbb
jbe
and
movsl
and
lods
dec
imul
jae
mov
loope
int3
fs
xchg
out
xlat
add
call
cmp
sub
mov
leave
in
xchg
and
mov
pushf
push
add
in
jo
inc
repnz
mov
pop
pop
xchg
or
std
popa
aaa
push
cs
xsave
sbb
imulb
push
in
movsb
pop
mov
scas
loopne
in
or
xor
nop
cmpsl
adc
cmp
add
mov
scas
daa
shlb
cmp
fsubs
shll
or
add
sti
aad
cmp
lcall
int
mov
int
adc
imul
pop
jl
addr16
sub
jns
sbb
mull
sub
inc
hlt
or
pop
out
add
inc
push
xchg
enter
dec
cwtl
mov
movsb
pop
in
dec
pop
rolb
push
jne
add
nop
cmp
cmp
mov
dec
sbb
bound
mov
pop
js
out
arpl
mov
or
repnz
pop
dec
inc
fdivrl
mov
mov
lahf
rcl
or
aam
arpl
push
and
sahf
dec
xor
pusha
pushf
push
mov
mov
into
mov
pop
xor
lea
dec
in
jl
push
cmp
lahf
bndstx
push
mov
out
xor
or
pusha
in
jne
sar
mov
stos
lret
mov
hlt
sub
repnz
jmp
cmp
pop
mov
call
je
push
mov
aas
addr16
adc
sbb
gs
ljmp
stos
pop
hlt
jecxz
xchg
or
fs
mov
dec
out
nop
pop
data16
ret
jp
sbb
in
das
dec
repnz
sysexit
sbb
ljmp
xor
lcall
xorl
adc
jecxz
daa
dec
lcall
mov
hlt
fcmovnu
rclb
cmp
push
jbe
inc
insl
leave
icebp
test
mov
xor
pop
mov
outsl
cmpsl
pop
sti
addl
jnp
jnp
adc
inc
adc
xor
or
dec
mov
lods
jmp
mov
les
xchg
and
cmp
ja
mov
das
addl
into
in
pop
jge
notb
adc
lock
mov
pop
jo
les
stc
pop
push
mov
test
dec
jbe
hlt
mov
adc
xor
jns
out
ret
or
mov
mov
and
add
fbstp
sarl
mov
mov
loopne
dec
dec
adc
xor
nop
or
cmp
nop
mov
fisubrl
int
mov
push
js
fcoms
test
mov
into
sub
dec
daa
mov
dec
fistpl
pop
add
jbe
repnz
adc
push
sbb
cwtl
inc
push
mov
enter
das
aas
mov
mov
jnp
xchg
pop
out
mov
notb
xor
xor
into
mov
inc
cli
out
and
mov
jno
rclb
add
inc
jo
fdivr
pop
cmp
sbb
insl
enter
adc
pop
jmp
enter
loopne
fstl
pop
xchg
shrl
mov
shrl
cmp
outsb
push
es
and
dec
xor
or
mov
ja
xor
daa
insl
popf
ss
cmpsl
aam
mov
mov
and
fadd
fstl
cmp
xchg
mov
lcall
pop
jo
mov
fwait
jge
adc
or
push
stc
das
ja
scas
shrb
push
testl
mov
addr16
lea
sub
jmp
in
adc
sub
and
mov
je
xchg
cmp
cld
lods
xchg
and
aaa
push
pop
rcrb
int3
add
jnp
les
aas
pop
push
push
mov
dec
mov
ds
cmp
fisubl
lret
push
dec
adc
stos
repnz
cmpsl
les
out
jnp
pop
pop
mov
or
jae
mov
sub
xchg
sbb
push
mov
dec
scas
xchg
mov
insb
pop
std
sbb
jb
sbb
and
loop
nop
adc
ss
cld
fists
cmp
out
dec
aam
sahf
mov
cmp
js
je
out
stos
icebp
into
xchg
repnz
fsubl
imul
adc
jne
jb
add
lcall
js
dec
mov
pop
inc
cmpsb
enter
test
lcall
cmpsb
jg
mov
stos
xor
inc
push
mov
jno
lret
les
cld
in
fsqrt
cld
subb
movsb
jnp
add
fistl
xchg
rcr
shrb
sarl
cmc
fdivs
fs
hlt
aas
cs
sti
dec
mov
inc
test
or
fwait
cmp
xor
jmp
jb
mov
inc
mov
add
rep
or
sub
es
imul
pop
lds
add
xchg
inc
sub
pop
mov
pusha
pop
add
and
xchg
dec
sbb
stc
mov
mov
sub
mov
pop
xchg
cwtl
cmpl
sub
ret
xor
xor
ror
xchg
lret
mov
xchg
divl
xchg
ss
popa
xchg
outsl
clc
push
movsb
icebp
and
orb
sub
fnstenv
adc
and
or
xor
scas
mov
insb
xchg
adc
pop
cmpsl
adc
or
dec
dec
pop
xor
scas
fisttpl
lock
leave
mov
xchg
jge
push
pop
lods
out
repz
mov
testb
cmpsl
add
lahf
loop
js
inc
fs
stos
jp
rcr
adc
and
pushf
adc
jp
and
cltd
mov
or
cltd
push
push
lea
sub
cwtl
es
jmp
scas
repz
shrl
fucomi
add
fs
mov
or
pusha
adc
adc
outsb
or
outsl
loopne
dec
fcomps
ss
add
aaa
aas
ja
pushf
ss
arpl
ljmp
mov
mov
icebp
jg
repnz
fwait
sub
or
pop
sbb
ds
out
fidivs
adc
fs
scas
jecxz
int
sub
pop
fisubrs
mov
cwtl
pop
test
add
and
test
testb
test
mov
sarl
dec
js
jbe
fwait
add
sbb
dec
dec
and
adc
jns
imul
add
daa
repz
adc
repnz
in
mov
add
call
sbb
xchg
dec
jae
cwtl
test
repnz
xor
popf
jmp
test
stos
ja
scas
cmp
push
lret
xchg
sbb
mov
fdivs
int
fwait
cmp
lods
push
sub
je
xchg
lret
inc
cmc
pop
mov
dec
mov
mov
lret
ljmp
pop
jle
mov
cmp
clc
cli
push
jno
xor
scas
lods
bnd
xchg
xor
pushf
fistpl
es
lock
lret
adc
outsl
scas
adc
dec
imul
adc
dec
ret
push
ljmp
pop
pop
or
in
repnz
push
rcll
mov
pop
icebp
andb
cwtl
mov
cmp
fsubrs
sbb
popa
or
mulb
dec
dec
jle
sbb
in
jns
subl
scas
pop
les
popl
mov
popf
xor
xor
cmp
outsb
ret
lret
xor
jg
mov
and
dec
pop
adc
mov
arpl
fcoms
in
dec
divl
out
stos
xchg
mov
test
mov
stos
lret
lahf
or
loopne
shlb
dec
and
mov
dec
dec
sbb
scas
int3
fnstsw
idivl
clc
pushw
xor
iret
adcb
mov
mov
xor
adc
cwtl
lcall
sbb
add
jb
jnp
int3
in
pop
rcrl
inc
mov
cmp
cs
aaa
mov
pop
xorb
fwait
lret
push
dec
insl
mov
rcr
nop
mov
test
aaa
add
xor
xor
shrl
dec
cmp
mov
xchg
popf
and
mov
cli
mov
es
mov
mov
mov
imul
inc
push
enter
enter
data16
add
aaa
in
loope
mov
rolb
test
adc
mov
xchg
sbb
outsb
push
addr16
mov
scas
inc
aas
inc
mov
cmp
rcrl
sub
cltd
lock
xlat
repnz
fstps
test
add
jns
inc
nop
jae
aad
repnz
mov
sub
lods
pushf
push
sub
ret
test
mov
sti
cmp
push
lea
fldcw
add
imul
cs
jmp
lss
negl
or
or
out
xor
inc
imul
sub
or
jnp
mov
lret
cmp
das
je
lods
gs
insl
xlat
mov
inc
ret
and
mov
pop
das
in
cmc
scas
js
mov
dec
fildl
je
loope
addb
cmp
push
jl
pop
bound
pop
std
and
xlat
aaa
test
inc
arpl
jnp
add
cmp
cmp
repz
jg
mov
mov
jg
cmp
je
popf
ss
fistl
push
jne
rcrl
fisubl
testb
dec
and
scas
jnp
xor
pop
mov
adc
ds
jno
adcb
xor
mov
cltd
xchg
jp
jo
pop
sbb
pop
sub
movsb
inc
pop
jl
add
pushf
and
mov
xor
stos
adcb
cmpl
or
ss
test
into
lahf
push
mov
mov
push
shlb
pop
cmpsl
xchg
mov
push
cld
sahf
shll
and
int3
xor
rcrb
dec
popa
xchg
mov
loopne
sbb
ja
pusha
xchg
jmp
jnp
lcall
jl
adc
pop
fwait
jecxz
push
in
fcoms
xchg
int
pop
shlb
adc
inc
loopne
sbb
lcall
imul
pop
hlt
mov
dec
jmp
bnd
negl
mov
push
rolb
adc
inc
clc
fbld
rcr
ljmp
ret
sub
icebp
sub
pop
es
sbb
mov
popl
sbb
push
mov
loop
push
imul
shrb
push
and
pop
repnz
in
cmp
mov
aam
in
xchg
in
mov
dec
mov
xchg
pushf
frstor
and
outsl
out
dec
push
dec
scas
jmp
xor
xchg
adc
and
lock
push
out
mov
roll
or
adcl
and
test
xor
mov
sub
push
and
idivl
test
test
incl
add
adc
insl
cmovp
inc
loope
mov
and
les
je
pop
pop
lods
xor
bound
inc
dec
cmpsb
cmpsb
ret
or
push
push
mov
cmpsb
orb
and
sbb
xor
mov
sar
das
xchg
add
xor
shlb
andl
lret
or
jmp
push
loopne
xchg
cmp
pushf
fsubr
inc
pop
pop
insb
adcl
add
mov
sub
mov
or
pop
popf
inc
cmp
dec
add
pop
std
mov
out
insl
cli
outsl
stos
lret
insb
cmpsl
dec
and
xchg
cwtl
add
mov
jmp
lods
cmpsb
testl
push
test
and
pop
push
xor
stos
clc
push
or
mov
mov
push
xchg
push
fisttpll
dec
popl
negb
lea
je
xor
or
mov
inc
adc
mov
call
movsb
data16
mov
out
inc
pop
repz
mov
lods
pop
out
or
push
jb
inc
push
popa
lahf
aam
push
fdivrs
stos
jnp
xorl
pop
jb
add
aam
leave
or
negb
andl
cmp
dec
stos
jg
or
in
sbb
jne
inc
imul
push
xor
sbb
and
pop
je
pop
pop
mov
mov
lds
in
mov
cmp
push
iret
aad
in
int
mov
pop
or
sti
and
test
adc
cmpsl
pop
jle
repnz
push
mov
fistps
loop
mov
js
mov
cmp
imul
xchg
scas
pop
mov
filds
lea
test
ds
cmc
int
and
aaa
cmp
cmp
mov
popf
mov
mov
jg
repz
cmc
inc
cld
fsubrp
pushf
int3
nopl
ds
jbe
lret
icebp
mov
jne
fs
ljmp
popf
data16
pop
cmp
ljmp
lea
popf
xor
test
and
xchg
sub
or
outsl
sbb
fwait
mov
sub
cli
or
fdivs
movl
dec
add
out
rcll
or
cmp
lods
scas
addl
push
dec
mov
cmp
std
orb
mov
fnstenv
xchg
aas
iret
sbb
jecxz
mov
xchg
sbb
out
sti
mov
in
daa
jmp
mov
add
xchg
lds
mov
ror
jp
aam
daa
test
pop
inc
xchg
mov
xor
ss
sub
testb
lods
xor
push
div
lea
pop
pop
mov
jne
outsl
movsbl
popa
push
push
ljmp
and
fildll
pop
stos
arpl
cmp
cmp
mov
and
and
ficoms
push
xchg
push
rcrl
psubusw
pushf
mov
cmpl
adc
xchg
add
push
add
cmpsl
adc
pop
mov
subl
jle
jle
jmp
mov
mov
arpl
mov
pusha
sub
pushf
ror
call
pop
sbb
repz
jge
sbb
lods
jno
dec
dec
cwtl
mov
xchg
mov
sbb
addr16
mov
push
adc
and
loopne
jle
pop
ficomps
fdivr
push
sbbl
cmp
test
repz
cmp
pop
lret
and
pushf
xor
bound
xor
dec
stos
lods
mov
add
imulb
scas
fadd
lock
aaa
stos
fsubrl
and
in
mov
lock
movsl
xor
mov
xlat
fwait
mov
mov
roll
pop
in
dec
leave
popf
jle
mov
cmpsl
sbb
xchg
mov
pop
in
ret
inc
xor
outsb
in
push
mov
aas
or
repz
xchg
add
pop
sti
cmp
out
or
push
popa
add
push
push
aad
or
xchg
cmc
ja
sub
cmp
mov
clc
pop
pop
out
mov
repz
fstl
push
sti
sahf
cmpsl
fisubrs
jmp
dec
cwtl
mov
lds
rcll
mov
les
pop
xchg
rcrb
pop
push
test
test
jge
aaa
cmpsl
push
popa
adcb
repnz
out
int
movsl
lcall
or
fwait
or
outsl
mov
xor
mov
nop
imulb
pop
mov
lods
cmc
mov
inc
fistpl
outsl
push
into
xchg
xor
fstpt
mov
test
sbb
arpl
lock
sti
add
dec
sar
pop
adc
sub
outsb
fidivl
xor
movsb
int
adc
fistpll
rcrl
scas
and
mov
jl
pop
fs
mov
add
rcrl
and
gs
mov
dec
inc
rcrb
xor
cld
cmpl
mov
pushf
sub
cmc
mov
xor
stos
mov
pushl
cmp
jp
sbb
push
loopne
dec
mov
or
sahf
vpsadbw
mov
inc
in
dec
call
jb
hlt
xchg
inc
push
jp
enter
or
pop
flds
jle
mov
in
lds
js
scas
daa
jmp
clc
into
ljmp
fadd
cld
add
fists
test
les
cli
mov
movsb
xor
in
loop
jno
push
lea
arpl
pop
std
bound
sub
inc
hlt
shrl
add
loopne
push
pop
cwtl
movsb
and
scas
sti
xchg
and
dec
sub
mov
stc
in
popa
jae
aaa
pop
cmpsb
and
insb
add
xchg
push
sub
jo
lods
cmp
lret
fidivrl
fldl
mov
popf
cwtl
aad
and
testl
cmp
call
sbb
rcll
adc
or
out
inc
in
in
xchg
sti
mov
inc
ret
cld
adc
dec
sbb
stc
and
lcall
xchg
in
and
bound
pop
pop
gs
mov
sahf
stos
xor
add
lds
fwait
mov
sti
xchg
xlat
ficoms
loope
xor
mov
je
cmc
addr16
in
jl
out
xchg
test
std
sbb
lcall
aam
mov
jns
push
xor
xor
xchg
lds
imul
fimull
mov
xchg
mov
hlt
test
pushf
test
aaa
push
cld
and
lock
mov
mov
inc
mov
jb
fistps
hlt
adc
mov
inc
rorl
mov
inc
repnz
lret
insl
mov
repnz
bound
test
cli
in
mov
jge
scas
adc
xor
pop
push
ret
enter
call
jmp
push
cmp
les
xchg
pop
xchg
mov
out
push
mov
jno
dec
cmpsl
inc
push
das
add
fistl
test
push
fidivrl
fmull
cmc
pop
push
sbb
enter
pop
jae
mov
sbb
lods
xchg
dec
notb
fcmovbe
mov
xchg
mov
lds
push
fwait
dec
add
cld
jae
or
ja
in
mov
mov
fnstcw
adc
in
filds
dec
sar
or
push
mov
mov
into
push
iret
popf
mov
xchg
pop
gs
aad
xchg
out
stos
ds
or
sbb
in
mov
mov
xchg
pop
loopne
nop
lock
pop
daa
sub
stc
xchg
ficompl
push
sarb
aad
std
xlat
scas
xchg
mov
test
jnp
sti
test
push
in
xchg
and
xor
or
adc
ljmp
xchg
mov
icebp
es
das
jae
adc
mov
pop
mov
sbb
push
xlat
and
xor
dec
xchg
mov
in
push
or
hlt
loope
jmp
push
adc
inc
or
daa
pusha
add
imul
stc
dec
bound
sti
cmp
test
jge
bound
dec
mov
pop
shlb
loope
movsb
xlat
lds
int
xor
inc
pop
or
outsl
imul
ret
pop
sub
sbb
add
dec
je
mov
dec
jle
xchg
arpl
xchg
and
pop
xchg
jo
jno
cld
cmp
aaa
repnz
mov
xor
lds
mov
int3
pop
mov
out
pusha
xchg
inc
adc
xchg
jecxz
mov
ret
mov
add
and
pop
xor
scas
popf
in
iret
xchg
pop
inc
inc
insb
fs
mov
imul
adc
mov
jmp
stos
inc
mov
insb
mov
and
push
adc
jae
fs
mov
pop
jge
cltd
jle
mov
out
mov
notl
push
sbb
sbb
stos
lcall
pop
add
adc
add
mov
shl
stc
dec
outsl
fisttps
iret
je
pop
xlat
cli
mull
icebp
arpl
popa
sub
mov
fisubrs
jg
inc
jo
mov
mov
xchg
dec
mov
int
push
add
cltd
sbb
testb
sbb
or
and
lret
and
test
imul
int
shrl
and
xchg
cmp
out
adc
das
mov
and
mov
outsb
rorb
mov
insl
shrb
out
pop
sbb
jno
and
pop
in
dec
insl
xor
pop
daa
sti
xchg
in
out
ljmp
loop
xchg
rorb
stos
sbb
outsb
xor
push
inc
pop
adc
das
in
js
addr16
sbb
mov
lcall
jns
mov
dec
into
movsl
cwtl
sbb
call
adc
mov
insb
stos
sbb
dec
xchg
out
sbb
inc
test
iret
mov
xchg
inc
lods
lcall
jmp
fs
mov
ffree
imul
cmp
int3
jp
ret
add
int3
adc
dec
jns
push
in
add
mov
shrl
lods
mov
fsubrs
ret
sbb
bound
lret
mov
test
inc
cmc
roll
inc
ret
adc
mov
cld
test
lea
cmp
ljmp
fnstcw
sub
add
ret
push
je
inc
and
gs
jne
fisttpll
xor
je
fwait
or
or
and
fimull
lods
jl
aaa
ret
mov
cmp
inc
ret
adcb
mov
fldcw
sarb
mov
dec
or
dec
pop
gs
pushf
test
stos
add
push
and
gs
fsub
mov
daa
int3
or
cmc
jge
stc
imull
jbe
loope
xchg
shrb
adcl
mov
mov
sbb
adc
xor
pop
or
movsl
loope
into
shl
popf
lcall
inc
bound
adc
mov
push
dec
outsl
out
sub
adc
loope
sub
fnsave
dec
jb
mov
mov
cmp
sub
xlat
mov
jns
lcall
fs
pop
imul
andl
test
jo
push
pop
decl
out
mov
cmp
in
xor
push
pop
sub
fsubrp
sub
dec
adc
jmp
daa
jge
shrl
xor
jge
jb
sub
in
scas
int
and
mov
out
movzbl
add
mov
adc
aas
xor
vmwrite
pop
enter
jp
repz
movsl
cs
cmp
sbb
adc
cltd
pushf
test
jg
push
mov
cmpsb
cmpsb
sbb
popf
leave
sub
loopne
push
ja
lcall
out
ss
mov
das
push
pop
push
mov
sub
cltd
inc
cmp
cmp
aad
mov
out
stos
push
xor
lcall
movsl
dec
rcll
mov
lret
stos
cmpl
scas
mov
dec
cmp
mov
jns
or
jb
ss
stos
std
jge
sbb
pop
pop
sbbl
sub
fisubrs
data16
mov
mov
add
clc
and
mov
test
xchg
fcoms
and
repz
sub
cmpsl
sub
sbbl
adc
daa
dec
add
jnp
cmpsb
jle
repnz
jge
sti
or
mov
cld
popf
or
imul
out
adc
jae
aam
xchg
mov
cmp
lea
out
mov
aaa
sahf
js
stos
xchg
xchg
dec
mov
cmp
add
repz
mov
insb
and
jmp
int3
inc
fbstp
aas
pop
sahf
sbb
jne
and
or
loop
jno
pop
lcall
and
dec
mov
mov
mov
xorl
std
sar
mov
les
sbb
repnz
out
or
cmp
sbb
or
or
call
stos
lret
pop
xchg
daa
and
imul
sahf
jne
xchg
inc
out
shlb
and
inc
stos
fs
add
cmp
lods
lcall
gs
pop
jb
xchg
sbbb
leave
or
pop
in
flds
or
clc
or
cmp
inc
les
push
pop
push
inc
or
dec
ret
lock
shll
fdivrp
dec
fbstp
sub
test
nop
mov
insb
push
cli
shlb
out
sbb
jp
mov
mov
fs
shlb
movsl
lds
arpl
stc
lahf
jg
or
sub
xchg
or
jb
push
lea
repz
or
popa
ret
inc
xor
pop
jae
popf
cmp
add
push
mov
push
adc
daa
arpl
fdivrl
ljmp
flds
inc
adc
cmp
mov
sbb
lcall
cltd
inc
cmpsb
sbb
cmpsb
scas
mov
movsl
jo
bswap
push
and
pop
inc
lock
cmpsb
mov
and
inc
or
cli
pop
out
and
pop
push
mov
ret
push
jae
cmc
es
lock
xchg
mov
xor
xor
add
mov
lret
jl
dec
fnstsw
jmp
add
cmp
sub
lods
jne
xorl
xor
jp
adc
lret
in
dec
rcr
adc
lds
std
xchg
cmp
dec
shl
lret
mov
push
dec
add
xchg
xor
in
ljmp
cmovnp
ds
sub
mov
xor
sbb
and
add
daa
outsl
xchg
dec
aad
sti
cmc
pop
xor
adc
sbb
sbb
jno
jbe
pop
subl
jle
push
xor
jg
inc
or
or
cmc
addr16
ret
push
cli
sbb
cmp
xchg
ja
sbb
pop
or
push
arpl
sub
push
js
pop
push
aaa
xor
mov
inc
inc
repz
adc
cmp
dec
loope
jl
or
aas
out
nop
mov
cmp
xchg
or
mov
jae
sbb
leave
xchg
adc
push
mov
sub
in
or
jmp
cmc
sub
cmpsb
mov
fsubrl
inc
fdivrs
push
je
int
xchg
out
and
out
mov
aas
cmp
and
jp
insl
lret
jns
in
xor
paddb
je
pushf
sar
sahf
jge
not
or
dec
fs
jno
in
add
movsl
sub
neg
jnp
sub
sbb
xor
cmpsb
or
push
rolb
pop
stos
adc
mov
xor
xor
adc
push
daa
rcrb
cmp
notl
push
loopne
notb
fistpl
lahf
andnps
push
cld
add
cmp
mov
xchg
loop
mov
xchg
das
push
ss
sarb
rorb
xchg
ret
pop
cs
inc
inc
mov
dec
repz
frstor
ss
jns
cmp
popf
leave
and
imul
loopne
mov
push
hlt
fld
push
aas
inc
jmp
pop
xor
add
jecxz
dec
stc
hlt
bswap
test
jecxz
dec
xchg
setl
addb
aaa
repz
pushf
xchg
push
or
fldl
push
inc
mov
stc
fucomi
mov
jmp
xor
leave
ret
cmp
or
push
xor
mov
jns
int3
inc
fwait
mov
shlb
add
cmp
jo
inc
cld
dec
adc
push
adc
lret
aaa
enter
into
and
jg
les
mov
add
push
xchg
ds
and
cmpsl
pop
add
inc
stos
adcb
jmp
jl
adcl
pop
jmp
addl
dec
sub
or
sub
lods
pushf
jg
imul
add
jmp
xchg
insb
inc
cwtl
sub
mov
mov
data16
fidivrs
ja
rorl
test
adc
xchg
outsl
ss
dec
sbb
add
rorb
rcrl
icebp
fimuls
dec
cltd
insl
mov
cmp
stos
fisttpl
mov
ja
int3
inc
cmp
test
or
adc
sbb
push
mov
test
cmp
jg
pop
push
sbb
xor
xchg
mov
jge
das
inc
imul
cmp
dec
outsl
sub
fsubr
aam
mov
sbbl
mov
bnd
cs
lahf
lods
jne
xlat
dec
sub
jbe
push
inc
jg
push
fnop
out
xor
pop
or
mov
jno
sbb
mov
dec
insb
ret
in
mov
ljmp
fnstcw
loop
inc
pop
push
mov
or
cmp
add
aam
cmc
lret
jp
sbb
ja
mov
and
out
pop
out
les
lock
xchg
or
or
hlt
push
xor
jecxz
jmp
scas
sbb
mov
cltd
adc
les
out
fdivl
lahf
jno
xor
mov
loopne
nop
hlt
icebp
inc
and
push
jo
jbe
xchg
out
mov
inc
scas
sub
in
jmp
shlb
cld
ds
scas
add
push
jb
cmp
outsl
xchg
sarl
testl
rol
pop
rolb
dec
and
sbb
push
sbb
lcall
adc
pop
stos
call
jg
jae
lcall
jo
aam
add
sub
xor
and
mov
or
orb
in
in
pop
movsl
push
call
adc
mov
adc
xlat
aas
cwtl
mov
inc
pop
out
jns
ret
ss
inc
mov
aaa
loope
scas
push
leave
into
sti
adc
mov
mov
sar
fimull
inc
sub
cld
mov
ret
push
and
mov
out
xchg
dec
and
pop
cli
bound
push
lea
or
subl
or
sbb
jo
push
iret
cmp
or
sbb
push
xchg
mov
roll
xchg
es
icebp
aaa
mov
pop
mov
mov
sbb
adc
jno
dec
jnp
and
fisubl
sub
cmc
mov
in
aaa
nop
gs
mov
int3
mov
pop
outsl
push
jne
push
sti
pop
pop
ret
cmp
xchg
dec
xchg
shll
xor
mov
push
sbb
call
push
cmpsb
adcl
daa
and
les
lods
mov
nop
mov
push
dec
push
faddl
mov
gs
mov
xor
sub
sbb
jb
adc
cs
jae
dec
stc
fcoml
loopne
pop
shrb
jg
in
adc
nop
cmc
ffreep
aad
enter
or
cwtl
xchg
adc
sbb
push
popa
dec
jmp
test
leave
push
sbb
mov
or
pop
jmp
xor
adc
rcrb
mov
push
add
dec
movsl
jne
divl
sbb
aas
inc
ret
and
jb,pn
lret
or
aaa
cmp
ja
xlat
jle
fcom
adc
mov
jl
xor
dec
les
fmul
xor
dec
movsl
sub
jmp
lds
push
daa
roll
inc
sti
or
int
rclb
sar
imull
jno
mov
addl
sbb
sbb
mov
rcr
insl
xor
hlt
sbb
jnp
inc
or
xlat
sahf
lock
cmp
mov
dec
cmpsb
enter
push
inc
xchg
aam
mov
jb
aas
out
shl
dec
outsl
push
inc
xchg
cmpsb
push
push
adc
pop
icebp
add
pop
enter
pop
repnz
insl
xchg
iret
sbb
jae
out
xchg
jns
cmpsb
lock
inc
jge
loope
stos
inc
ss
fdiv
cld
lahf
mov
clc
ja
jae
ljmp
lea
outsb
repnz
and
xchg
mov
rol
enter
dec
rcrb
rorb
sbb
sub
add
mov
push
lods
push
xor
movsl
mov
pop
pusha
mov
sbb
in
jne
mov
into
lods
jno
ds
jmp
inc
stos
or
xchg
push
or
push
cmp
sahf
sub
mov
fnsave
xchg
sub
bound
mov
clc
lea
popa
pop
lea
sub
jmp
jp
jb
sbb
out
and
or
in
test
roll
inc
xor
sub
inc
js
xor
sbb
dec
clc
les
and
pusha
or
cmp
jbe
aaa
cmp
scas
negb
repnz
mov
dec
and
adc
and
mov
mov
cmp
and
dec
pushf
jmp
jecxz
mov
fldcw
int3
int
cwtl
pop
xor
mov
test
push
inc
sbb
in
clc
adc
jae
popa
fmull
data16
in
mov
scas
pop
inc
les
dec
cmpsb
lods
or
nop
xor
insl
popf
cmp
arpl
add
inc
fsincos
or
xor
lahf
leave
and
adc
mov
or
sub
out
clc
mov
sub
aas
sub
idivb
out
inc
je
sub
lods
ret
xor
ss
add
aad
lahf
xchg
mov
push
lcall
cmp
arpl
xor
adc
xchg
imul
fidivs
push
nop
lds
loope
push
push
daa
mov
push
xor
fmuls
xchg
xchg
rolb
jne
jns
sub
rorb
orb
cmp
adc
pop
subl
rclb
jne
sub
clc
sub
xorl
lds
lcall
cmp
add
fsts
cli
cmp
and
mov
sub
fbstp
into
and
test
jp
mov
leave
sbbb
dec
loopne
adc
mov
xor
cli
popf
mov
aam
dec
mov
xchg
pop
push
lret
clc
jns
sub
fucom
rcl
loope
and
mov
xor
inc
lret
aam
shlb
sbb
stc
into
sub
adcb
stos
cmc
movsl
in
cs
xor
mov
hlt
test
and
mov
test
cmp
sub
jmp
xor
lods
cmp
push
iret
adc
pop
or
and
js
test
push
movsl
imul
fcoml
dec
dec
repnz
cmp
decb
lea
frstor
jne
fs
cmp
je
pop
inc
addr16
ja
fwait
cmc
popa
into
loopne
imul
cld
xor
jno
shrl
ds
jo
xor
mov
jecxz
fmul
andl
sahf
xchg
xchg
in
xchg
jmp
or
or
push
test
inc
mov
inc
jmp
in
ror
imul
push
hlt
and
cltd
jge
mov
sbb
stc
inc
mov
sbb
scas
dec
iret
lea
or
inc
andb
lcall
jl
sahf
add
mov
or
jno
inc
imul
sub
enter
xchg
mov
mov
push
je
ja
hlt
ss
daa
sahf
xchg
push
and
sub
ds
dec
arpl
ds
iret
cmp
cmp
mov
hlt
stc
mov
cmpsl
jl
outsl
jb
pop
mov
repnz
add
ss
rorl
jmp
jns
xchg
loope
mov
mov
sarl
stos
shrb
or
out
push
scas
or
and
sbb
adc
or
xlat
cwtl
add
aaa
mov
pop
cs
or
and
cmp
jmp
lods
mov
mov
sub
mov
aad
lods
fmull
and
in
cli
imul
rcr
sub
mov
adc
loopne
jmp
dec
test
lcall
sbb
sbb
xor
iret
jne
orb
mov
add
mov
andb
mov
mov
jp
xor
leave
mov
xchg
pusha
inc
and
inc
aam
cltd
dec
imulb
aaa
cmpb
addr16
adc
mov
inc
cs
mov
loopne
repnz
cmp
add
mov
dec
shlb
add
adc
mov
andl
cmp
xchg
out
lock
inc
jmp
and
mov
pop
pop
push
push
iret
andb
sbb
cld
add
lcall
push
pop
popa
dec
jp
pop
int3
xchg
dec
dec
in
jecxz
lea
test
pop
scas
insb
sbb
mov
addr16
push
add
xchg
mov
in
fwait
das
push
fcoml
pop
adc
outsl
xor
cmc
mov
adc
insb
je
sub
sahf
outsl
addr16
inc
orb
mov
loop
dec
xor
push
dec
in
je
aaa
mov
sub
lock
test
out
pusha
mov
inc
sbb
push
mov
xchg
mov
dec
add
aaa
std
cld
mov
sub
jns
iret
cltd
lea
lock
fisttps
repz
iret
js
jnp
shl
and
xor
data16
mov
push
xor
in
dec
sub
std
pop
or
les
push
stos
ficomps
jns
mov
xor
add
addl
sbb
jns
cs
loopne
mov
add
dec
icebp
ja
insb
inc
add
add
imul
adc
push
dec
ds
cmp
test
fsubrl
inc
cs
add
xlat
fwait
add
pop
push
das
lods
ljmp
inc
fists
push
sahf
mov
jp
and
repnz
pop
mov
lock
imul
ds
xchg
and
scas
or
fisubl
in
mov
in
sti
icebp
mov
jno
ja
fisubs
push
cwtl
out
push
jge
add
sub
adc
scas
in
jp
pop
sbb
sbb
dec
mulb
and
sbb
loopne
popa
cmpsb
jbe
push
jmp
fldenv
sub
int3
loop
sub
loop
nop
sub
enter
stc
nop
mov
adc
in
inc
les
dec
jb
push
repz
nop
jb
jne
mov
inc
jp
jb
cmc
jnp
jp
sub
ret
push
dec
cmp
sbb
out
subl
mov
adcb
jle
mov
lods
hlt
movsl
pop
jns
xchg
xor
ret
shrb
inc
xor
or
adc
ret
shll
jns
dec
int
cmp
gs
nop
mov
lcall
xor
add
inc
popa
mov
fnstenv
lock
sub
rcl
jl
pop
cwtl
sti
scas
testl
cmp
test
cwtl
cmpsl
sbb
cmp
cld
icebp
and
or
adc
call
dec
push
aas
xchg
out
pushf
xchg
pushf
js
xor
sbb
pop
repnz
lret
pop
xchg
fdivs
pop
push
mov
mov
leave
jne
es
ds
adc
loop
jge
mov
cmp
sub
xchg
jo
in
add
mov
xchg
add
inc
sbb
add
cltd
cmpb
divl
sarb
lods
mov
scas
pop
mov
jmp
lahf
inc
shr
pop
cltd
jbe
imul
ljmp
dec
enter
ficoms
xchg
pushf
orl
pop
xchg
movsl
in
mov
push
xchg
bound
add
lahf
divsd
sub
mov
ds
add
fs
xor
cwtl
mov
in
movsl
insb
lods
mov
popa
xchg
int3
mov
adc
dec
xor
mov
int
dec
ljmp
jns
dec
aam
popa
sbb
push
and
push
ds
push
sub
sbb
cmp
mov
test
jecxz
xchg
push
mov
das
cltd
outsl
cmpsb
push
insb
repz
stos
repnz
sbb
cmpsb
mov
arpl
xor
addr16
inc
sub
cmp
fmul
fdiv
xor
cmp
movsb
insl
sub
lret
call
notb
jg
dec
imul
push
lcall
add
and
mov
add
sarl
sbb
pop
or
mov
jb
mulb
or
pop
push
pop
mov
dec
pop
jle
pushf
inc
test
movsb
int3
mov
xchg
movsl
loope
pop
jecxz
aas
jge
pmulhuw
dec
out
dec
xchg
iretw
ljmp
xor
or
dec
rorl
les
jge
repz
sarb
bound
repz
add
fs
and
push
jns
dec
fwait
jecxz
mov
xchg
outsl
xchg
push
cmp
in
inc
mov
mov
cmc
dec
stos
fs
mov
cmp
fimuls
dec
add
movb
fnstcw
in
lcall
cmpsl
mov
jmp
loop
gs
enter
aam
jecxz
test
and
fsubs
jg
ds
dec
cmpl
push
push
repz
loop
das
addr16
inc
ljmp
fmul
add
out
mov
push
loope
pop
je
dec
or
repz
and
ja
jge
pop
divb
popf
ret
arpl
lea
sbb
int3
push
mov
dec
xorb
flds
dec
out
outsb
or
sbb
push
loope
and
mov
inc
jl
ret
jns
fidivs
xchg
js
int
and
push
outsl
sub
in
ljmp
xchg
xor
add
imul
and
shlb
dec
mov
xchg
hlt
xchg
jno
xchg
or
jle
xor
inc
lds
stos
decl
popa
and
mov
push
sbb
adc
dec
arpl
or
sahf
gs
jne
pop
cmpsl
push
xor
les
dec
insb
mov
pop
dec
jmp
xor
sub
pop
push
dec
mov
xor
popf
adc
repnz
mov
fidivrs
pop
xor
and
sub
push
xor
adc
push
sbb
or
sbb
jno
xchg
cwtl
movb
push
mov
sbb
and
ds
shlb
les
movsb
dec
add
out
mov
in
xlat
pop
and
cvtps2pd
stos
pusha
mov
stc
fimuls
and
shlb
jecxz
add
lock
inc
mov
mov
int
das
push
lret
sub
fdivr
movsl
fildll
rcr
dec
mov
in
test
and
scas
pop
cltd
lock
inc
frstor
mov
fs
xlat
push
inc
pop
subl
pop
and
lret
adc
cmpsl
sbb
mov
mov
mov
sahf
out
shlb
rorl
and
push
out
and
pushf
ret
out
addr16
inc
fwait
cmp
push
subb
push
out
jo
mov
in
add
int
fstpt
cmp
mov
sarb
fldenv
mov
jg
cs
out
into
int3
dec
adc
faddl
sub
xchg
xor
lret
dec
sbb
add
fsub
repnz
lds
aaa
jmp
ja
dec
test
sub
mov
and
push
or
push
test
inc
stos
enter
js
adc
xor
aas
das
jo
sub
xor
jge
hlt
push
inc
pop
in
test
inc
xor
push
push
dec
lds
jg
shlb
test
rclb
fistpl
or
dec
ss
mov
mov
inc
loop
mov
dec
push
xorl
ret
mov
mov
fs
out
sbb
pop
lds
mov
movsl
movzbl
push
shlb
jecxz
gs
pop
push
push
rcrb
cmpsl
xor
inc
scas
push
sub
or
in
sbb
xor
pusha
or
adc
jnp
pop
push
sub
movsl
sarb
cld
scas
inc
jle
mov
repnz
outsl
andb
into
enter
xorl
out
xchg
out
out
push
sbbl
adc
addr16
enter
mov
push
pushf
cmc
js
push
sub
mov
outsl
pop
sub
call
jnp
push
arpl
dec
sbb
adcl
jb
jg
scas
aaa
adc
notb
mov
inc
mov
jbe
xor
sbb
subl
pop
add
adc
rcr
fnsave
mov
push
idivb
jp
subl
call
iret
sbb
add
add
xlat
aam
fnstsw
test
lret
inc
jmp
pop
dec
sbb
cld
xchg
dec
pop
push
shll
jno
xorb
xchg
sbb
loope
adc
pop
xchg
in
dec
cwtl
pop
pop
dec
lcall
imul
ds
xor
cmp
mov
fdivrl
sahf
push
lea
cmp
cwtl
in
lock
adc
jns
push
pxor
jle
push
pop
mov
sar
xor
insb
jne
lcall
cltd
add
pop
mov
add
xor
scas
xor
mov
push
psllw
mov
jmp
lods
fcoml
mov
jbe
mov
sub
lock
cwtl
aaa
adc
adc
xchg
jg
jl
bound
xor
adc
mov
insb
dec
call
or
pop
sarb
push
sbb
aad
paddusw
mov
cmp
pushf
adc
inc
cs
outsb
mov
data16
dec
in
push
hlt
mov
inc
fisttpll
xor
jb
loop
ret
ret
scas
mov
repz
mov
add
sub
stc
xchg
insl
sub
inc
test
pop
jae
jecxz
cmp
mov
loop
test
fidivl
pop
lret
jnp
pushf
pop
add
xor
rolb
scas
push
mov
jne
out
idiv
cmp
ljmp
jnp
xchg
pop
cmp
or
popa
mov
sbb
pop
inc
es
sti
sub
imul
xchg
dec
pop
xor
mov
adc
or
cmpsl
out
cs
std
mov
and
and
xchg
adc
cltd
movsb
push
frstor
xor
mov
cli
or
fmull
popa
imul
push
cmp
leave
roll
lahf
ds
adc
xchg
mov
xor
dec
mov
sub
movsb
aas
dec
lret
out
xchg
pop
dec
inc
jbe
stos
xlat
mov
pop
mov
mov
lock
push
into
fiadds
pop
leave
jbe
push
cld
ljmp
fld
pop
inc
jle
cmc
lds
iret
sub
dec
xchg
mov
mov
out
test
imul
dec
push
and
add
pop
jecxz
popa
xor
xchg
jbe
xchg
pusha
iret
in
push
mov
cld
dec
xor
or
xchg
call
xor
cs
jns
sbb
xchg
sbb
or
and
fnstenv
jl
ret
loop
mull
dec
inc
push
fdiv
call
pop
ljmp
rcrl
pop
pop
jmp
push
pop
jae
push
push
dec
cltd
and
push
pop
ret
adc
mov
mov
movsl
xor
sbb
test
loopne
outsl
mov
roll
lock
jae
or
cmpsl
jo
or
add
mov
xor
inc
xchg
inc
inc
fsubrl
fimuls
stc
popa
adcl
cmpsl
adc
loopne
sub
icebp
jo
sarb
sbb
cli
fdivrs
cmp
test
mov
cmp
mov
imul
cmp
shll
mov
outsl
dec
sub
fnstsw
pop
and
int3
in
inc
inc
and
clc
hlt
mov
add
and
sub
xchg
and
xlat
or
dec
dec
rorl
andb
mov
sbb
inc
test
fistl
add
mov
stc
ljmp
xchg
movsb
iret
cmp
jg
cli
mov
fidivs
sub
push
hlt
push
xor
sarl
mov
mov
std
jg
cmp
int
xchg
fmull
les
and
cltd
sub
jge
ret
cmpsl
and
arpl
adc
fdivrs
or
negl
pop
mov
jno
das
xchg
pop
cmp
xor
lret
adc
insb
pop
loopne
popf
pop
stos
push
or
xchg
mov
push
add
cmp
cmp
inc
sbb
enter
aas
pop
jnp
loope
inc
fmul
cld
mov
pusha
test
adc
inc
adc
jp
xchg
xlat
imul
dec
in
movsb
cs
popf
cli
popf
ret
ret
jnp
sbb
and
mov
mov
gs
in
xor
je
jmp
sar
iret
jbe
ljmp
jecxz
jp
enter
mov
xor
jbe
dec
jp
dec
pop
inc
dec
fidivl
push
lods
sub
repnz
inc
fbld
dec
cld
das
popa
jo
ret
adc
mov
sub
shll
xor
imul
xor
sbb
data16
ss
sub
dec
push
cmp
lea
mov
pop
incl
push
add
jecxz
pop
std
xchg
call
or
pop
loopne
enter
int
dec
addr16
repz
test
push
lahf
imul
xchg
pop
mov
mov
sete
mov
mov
out
sub
mov
ret
or
ljmp
pmullw
mov
pop
out
xchg
cltd
std
adc
rcrl
hlt
jb
loopne
ss
and
xor
hlt
xchg
mov
sbb
mov
in
jbe
pop
scas
sahf
jno
jne,pt
cmp
mov
inc
or
jbe
cmp
cmpsb
inc
outsb
insl
ret
jecxz
push
and
loope
jns
xchg
insb
sbb
jno
rcrl
jnp
cmp
dec
outsb
and
rol
sub
xchg
das
repz
aaa
scas
stos
les
ja
stos
aad
jbe
addr16
cmp
sub
fidivrl
outsl
imul
mov
xchg
pop
mov
cmpsl
or
lods
jle
iret
pop
mov
xchg
mov
mov
dec
inc
sub
stc
rcr
push
pop
int3
mov
stos
sub
xchg
bound
add
rclb
cwtl
jge
or
out
addr16
lds
jnp
in
cmp
subl
nop
pop
fnstenv
jae
dec
and
std
movsb
mov
cmc
daa
mov
addr16
mov
pushf
das
jae
cmp
or
and
xchg
mov
mov
mov
xchg
loop
pop
and
add
stos
imul
sub
neg
and
mov
int3
shrl
out
mov
test
sub
pop
leave
es
cli
xor
add
or
add
add
jae
cmp
je
imul
mov
mov
in
push
in
jle
int3
loopne
in
mov
ja
dec
xchg
add
in
cmp
dec
xchg
xchg
movsl
movsl
sub
xlat
out
stos
loope
pop
jecxz
jbe
push
mov
mov
cmp
or
pop
mov
cld
xor
cmp
cmc
arpl
idiv
or
or
sub
bound
mov
push
dec
mov
cmp
xor
insb
jbe
std
cmp
push
shlb
sbb
enter
mov
lahf
and
push
cmp
je
std
or
dec
pushf
lret
clc
jg
pusha
pop
pop
pop
shrl
ret
xor
inc
movsl
int
inc
xor
ja
aad
sbb
jae
repnz
or
sub
jge
add
stc
ficoml
or
daa
insl
mov
int3
mov
inc
xlat
push
lods
pusha
movsb
mov
xchg
sbb
sahf
or
jle
in
lea
sbb
cmp
adc
test
adc
xchg
xor
lock
cld
pushf
inc
scas
out
into
hlt
sbb
jno
cmp
mov
cmp
pop
xchg
and
dec
dec
mov
sub
ja,pn
jp
inc
fwait
sub
dec
dec
pop
lret
xchg
loope
cmp
cmpsb
ds
pusha
pop
mov
loop
cmp
sbb
inc
pop
add
jle
outsb
imul
pop
cli
icebp
movsl
lea
in
xor
xor
xchg
or
mov
or
xchg
pop
dec
adc
call
jecxz
add
cli
loop
cli
cmpsl
lods
mov
adc
lock
mov
scas
std
and
add
popf
pop
pop
dec
lods
jb
lods
dec
xchg
inc
ss
mov
aam
test
int
jno
xchg
adc
or
sub
in
inc
mov
pop
pop
je
mov
inc
push
enter
xor
push
and
adc
adcb
rorl
mov
inc
xor
nop
dec
and
jno
jnp
or
pop
mov
xchg
jo
lret
aaa
push
bound
scas
addl
pop
push
dec
fs
js
push
xor
mov
and
daa
mov
and
movhps
sub
dec
dec
add
jp
mov
mov
cmp
add
or
popf
sahf
cmp
jmp
stc
stos
pop
lea
cmp
pop
daa
push
adc
ja
pop
sub
ret
aad
sbb
sub
aad
adcl
andl
xor
xchg
xor
roll
xchg
inc
cmp
dec
pop
daa
jle
pushf
mov
push
lock
sub
mov
outsb
push
ror
out
xchg
push
cmp
arpl
movsb
shrb
rcrl
in
nop
xor
add
fists
inc
mov
cmp
repnz
imulb
movl
cmp
xlat
inc
outsl
lahf
adc
aam
insl
stos
rolb
xchg
dec
jno
xorb
mov
neg
sub
bound
sub
sbb
xchg
cmpl
lret
cltd
lcall
mov
xchg
pop
inc
jo
xchg
cmovae
push
mov
or
sbb
mov
sub
in
fwait
sbbl
and
pop
sbb
sbb
stos
das
cmp
xchg
mov
aad
and
jmp
add
push
fnstenv
vpsrlw
cmp
mov
inc
push
and
pushf
jl
or
cmp
jne
adc
fcmovnu
push
mov
cmp
jl
dec
popf
jne
or
push
push
or
aam
jmp
xlat
sahf
fdivrl
mov
mov
dec
add
lret
out
clc
int3
out
jae
jmp
mov
mov
in
jp
xchg
cwtl
out
jnp
pop
scas
or
sbb
xchg
shrb
jle
xor
movsl
js
nop
mov
mov
inc
xchg
pop
inc
inc
and
xor
test
cwtl
jb
dec
imul
pop
ret
imul
cmp
stos
dec
andb
lods
jle
push
dec
or
jle
movsb
loop
scas
lock
inc
outsb
xor
xor
inc
mov
rcll
aam
mov
repnz
inc
hlt
mov
movsl
xorl
sbb
cmp
lret
mov
inc
into
jns
xlat
sar
enter
lods
dec
aad
add
icebp
mov
pop
fadds
int3
dec
add
xchg
xlat
outsl
pushf
ficoml
push
mov
xchg
or
aas
xlat
inc
push
and
out
inc
mov
inc
ja
outsb
ds
mov
jno
insl
add
inc
in
fmuls
sub
popa
xor
jns
sti
clc
mov
and
push
adc
pop
mov
out
aaa
push
and
rcrb
and
sbb
arpl
pop
cmovle
bound
mov
and
push
enter
fwait
scas
pop
or
fildll
cwtl
test
icebp
dec
push
jl
loope
outsl
cwtl
xchg
pop
les
inc
fstpl
jl
dec
jge
mov
xor
push
sub
shrb
push
push
mov
cmp
stos
and
shrb
enter
pop
push
mov
xchg
xchg
mov
jl
xlat
jb
jbe
adc
xor
xor
test
repnz
sub
jecxz
mov
shll
jnp
jo
add
out
cmp
out
mov
xchg
cmp
mov
int
pop
and
cs
xor
jb
jnp
data16
lea
ja
ret
add
dec
push
aas
loope
out
inc
les
mov
fnstenv
les
cmpsl
lock
mov
jecxz
ret
call
loope
mov
push
cmpsl
xchg
or
andl
rcll
xor
fwait
jg
xor
sub
mov
inc
or
cli
stos
fidivl
filds
popa
sub
test
dec
mov
shlb
repz
mov
sbb
push
and
cmp
and
sbb
mov
shrb
popa
sub
adc
out
cs
aam
mov
es
fsts
jl
mov
sub
xchg
mov
test
inc
mov
cmp
fs
ret
sbb
and
or
rol
mov
dec
jmp
js
sub
inc
icebp
lret
nop
cmp
mov
mov
pushf
imul
ja
outsb
sbbb
mov
xor
mov
rcl
push
adc
dec
outsl
xchg
mov
pop
inc
daa
pop
icebp
movsl
xor
xchg
stc
pushf
sub
inc
xor
cmc
testb
bound
sub
aas
dec
mov
mov
bnd
jbe
sub
iret
cli
add
pushf
and
jl
mov
and
or
aam
ret
out
fldl2e
repnz
popf
jecxz
push
jnp
rolb
fcomps
xor
mov
mov
xchg
inc
test
movntq
out
filds
sahf
pop
jno
icebp
dec
sbb
pop
xchg
adc
xchg
cmp
and
lret
xor
push
sub
fisubl
sub
cmp
stos
inc
mov
push
mov
pop
push
pushf
cmpsb
dec
std
imul
cli
cwtl
xor
mov
inc
adc
cmp
xor
xchg
mov
imul
es
test
sbb
add
jno
sbb
lea
loopne
stos
cs
pop
sub
adc
int
hlt
pop
fld
jns
dec
sbb
dec
sub
adc
dec
fistps
pushf
jnp
inc
lock
push
or
dec
sbb
lret
mov
gs
std
mov
call
mov
mov
ljmp
sbb
sbb
gs
in
pop
jns
jno
jge
in
dec
mov
pop
xchg
mov
mov
xchg
pop
imul
pop
fcoml
mov
and
sbb
mov
add
cmp
xchg
xor
mov
mov
adcl
xchg
pop
nop
mov
and
in
nop
inc
roll
loope
std
shll
icebp
or
xor
mov
xchg
int
fcmovbe
mov
test
jbe
sahf
pop
scas
dec
push
inc
rorb
inc
jnp
filds
bound
rcrb
mov
sarl
jg
shlb
sub
out
pop
test
dec
mov
sub
inc
loopne
shld
jo
push
ret
cwtl
jp
arpl
scas
inc
or
mov
ret
notb
mov
mov
sbb
bound
push
out
test
lock
int
insl
and
lret
loope
in
cmp
or
jmp
xchg
shll
in
jecxz
cmp
or
adc
lods
jns
rclb
and
dec
push
or
dec
sbb
lcall
sbb
int3
mov
repnz
fsubrp
stc
je
dec
xchg
adc
shrl
enter
loopne
pop
test
test
mov
adc
out
add
js
sub
jae
jo
mov
fdiv
pop
xchg
fs
ret
iret
sub
lods
in
xor
and
mov
and
aam
xor
js
aad
call
lods
ds
sti
enter
gs
inc
stos
mov
sbb
dec
adc
test
push
lret
ja
cmp
lahf
add
repnz
jmp
inc
aad
imull
cltd
and
cmp
ficoms
in
sub
stos
pop
sub
xlat
imul
xchg
movsb
insl
push
add
mov
pop
xorb
jle
insl
jg
in
sub
arpl
cmp
in
sub
and
iret
mov
popa
mov
lods
mov
cmpsl
jo
in
dec
and
insb
push
jg
das
push
jmp
popa
dec
lahf
mov
adc
adc
stos
test
or
loopne
dec
fiadds
adc
add
into
jbe
jmp
ds
test
jmp
stos
jp
cmc
pop
das
hlt
mov
inc
mov
mov
jae
subb
pop
adc
sub
mov
jle
sbb
pop
mov
adc
xor
pop
fwait
lahf
add
mov
sbb
dec
add
cmp
push
leave
lcall
stos
enter
test
pop
cmp
lahf
cs
into
mov
fsts
jbe
xchg
adc
push
stc
and
jg
pop
jbe
rcrb
call
imul
out
mov
xor
fdiv
les
cmpsb
dec
scas
mov
loop
jne
jp
mov
sbb
in
neg
fdivrp
cli
ret
inc
inc
repz
frstor
inc
adc
fisttpl
dec
int3
lcall
or
aaa
and
jg
test
popa
daa
stos
loope
jmp
xor
xor
push
clc
bound
mov
mov
test
and
lahf
test
rcl
pushl
pushf
lods
fisubl
and
jg
jno
mov
mov
je
dec
xlat
xchg
and
ret
movsl
jo
sbb
ret
sbb
clc
negl
scas
dec
nop
pop
call
push
mov
jg
xchg
lahf
mov
repnz
mov
jmp
or
wrmsr
push
mov
xor
adc
add
adc
inc
or
les
out
mov
or
or
jg
sub
nop
adc
adc
pusha
jmp
push
and
stos
out
imul
mov
stos
adc
xchg
push
mov
aas
jb
mov
ja
push
mov
sbb
add
outsb
cltd
mov
sbb
xchg
or
or
insb
jnp
lsl
jp
pop
scas
aad
pop
stos
leave
xchg
push
sub
repnz
daa
lea
inc
xchg
or
push
push
repnz
or
add
cmp
ret
dec
ret
lods
mov
mov
add
fsubrp
icebp
jns
mov
xchg
dec
dec
pop
je
mov
sub
lcall
pop
fisttps
mov
lcall
test
mov
inc
andl
xor
sub
push
ficoml
loop
pop
pop
xchg
pop
xlat
js
push
inc
mov
sub
mov
ss
add
add
cli
aaa
lea
aas
push
cld
mov
jecxz
and
pop
jmp
inc
rcl
and
xlat
jl
outsb
out
stc
stos
add
ja
leave
or
adc
lea
daa
rcr
xor
inc
out
jo
cmp
fsubs
inc
fcmovb
push
adc
push
rcrb
pop
stc
push
mov
gs
mov
add
movsl
xor
dec
int3
adc
push
xor
adc
jge
xor
or
mov
cmp
into
ja
mov
push
jle
imul
daa
rcrb
int3
sub
pop
es
ljmp
pop
lds
in
mov
std
bound
or
adc
jb
mov
leave
stos
test
pop
push
loope
add
shrl
stos
cmp
mov
dec
sbbb
mov
push
xor
stos
pop
das
scas
add
lods
loop
inc
push
mov
jl
shr
sub
add
push
cmpsb
pop
in
add
adc
dec
mov
pusha
arpl
lock
dec
shlb
fs
xchg
and
lods
rolb
je
jne
and
call
lcall
shlb
leave
into
stc
aad
xor
fcmovu
leave
pop
xchg
test
sar
xchg
aam
fldl
js
jecxz
xchg
clc
xor
sbb
dec
xchg
xor
dec
ret
adc
test
jnp
xchg
push
in
mov
push
aam
fsubs
xlat
mov
jge
adc
dec
jbe
push
and
mov
inc
xor
test
dec
or
sbb
xchg
cmp
or
negb
js
test
fmul
inc
cmp
push
inc
or
ja
and
cld
ss
pop
scas
add
cli
jmp
push
test
inc
or
add
sbbl
and
or
push
mov
insl
push
jge
jbe
ja
mov
aas
lcall
pop
push
and
sub
dec
adc
xlat
ss
push
pop
xor
xor
test
fwait
adc
xor
dec
cmp
outsb
push
jbe
repz
fsubl
ficompl
mov
mov
lods
pop
enter
mov
fstl
outsb
xchg
out
dec
ja
or
push
sbb
in
icebp
push
insb
in
movsb
xor
sub
pop
stc
push
sub
mov
stos
dec
inc
push
mov
fnstsw
sub
and
pop
xchg
adc
adc
jge
inc
scas
xchg
sbb
js
dec
jp
popf
int3
cwtl
int
std
ss
push
mov
xchg
jne
jp
data16
sahf
or
pop
dec
or
mov
add
lret
popf
daa
push
xor
test
xchg
pushl
stos
addr16
mov
test
loopne
pop
loopne
loope
aam
test
imul
xchg
sbb
push
mov
dec
es
sbb
movsb
bound
sbb
add
scas
gs
and
lret
xor
adc
ja
pop
mov
mov
push
jne
xchg
fs
mov
pop
lcall
push
mov
cmp
hlt
movsb
and
sbb
sub
mov
hlt
sahf
and
jge
int3
fdivrl
mov
push
movsl
cmpsl
adc
inc
push
mov
add
and
std
clc
mov
push
pusha
xor
scas
dec
pop
mov
or
jl
adc
lds
and
or
inc
mov
das
push
add
aas
mov
gs
movsb
movsb
aam
jae
jmp
xchg
mov
shlb
stc
and
sub
or
hlt
sbb
pop
sbb
aam
or
adc
aad
in
add
outsb
aam
imul
iret
fs
out
inc
cmp
loop
adc
mov
jecxz
sbb
xor
repnz
aaa
or
mov
pop
sub
pop
imul
cmp
jo
in
add
out
fwait
nop
add
dec
rorb
adc
xor
pop
mov
mov
or
data16
lret
xor
mov
inc
cmc
cld
xor
cmc
fst
in
push
lods
and
fidivrl
mov
mov
mov
scas
jbe
imul
test
mov
fiaddl
push
push
out
push
loop
jae
dec
and
xor
test
dec
addr16
jnp
popa
std
push
xchg
ficoms
xchg
jp
pop
mov
pop
mov
aaa
sbb
cs
dec
inc
ja
nop
repnz
and
jno
mov
mov
fs
fwait
sbb
enter
jecxz
xchg
push
xor
loopne
xchg
dec
push
lods
fcompl
dec
mov
fucomi
jnp
jecxz
fadd
ljmp
cmpsl
lock
jbe
cs
out
sub
mov
cltd
inc
adc
sub
ret
fldt
out
ffreep
icebp
in
jne
dec
mov
fdivrp
pop
jp
fstps
loope
arpl
jmp
pop
pop
jge
andl
mov
test
cmp
jo
xlat
lcall
adc
xor
mov
pushw
adc
test
mov
inc
arpl
push
adc
mov
cs
xor
inc
and
jp
push
dec
inc
mov
ret
xchg
into
pusha
push
mov
outsb
sbb
inc
and
lahf
push
push
roll
xor
or
stos
xchg
mov
aam
fdivrp
call
bound
mov
mov
inc
sbb
mov
jle
pushf
int3
stc
inc
xchg
in
cmp
in
mov
iret
int
enter
sbb
mov
cmp
scas
or
and
sub
cld
inc
out
add
xchg
hlt
mov
das
int3
xchg
add
gs
popa
ss
lcall
ljmp
stos
push
sahf
cld
pushl
mov
test
push
lahf
nop
dec
fdivp
xchg
mov
add
movsb
data16
aad
mov
jmp
pop
dec
push
fucom
push
out
adc
inc
sub
roll
negl
and
enter
xchg
icebp
outsl
dec
push
hlt
jne
xlat
mov
push
out
pop
mov
mov
pop
subb
les
pusha
pop
sbb
xchg
adc
lret
cmp
nop
push
repz
test
xor
sti
jecxz
mov
jae
xchg
add
pop
add
loop
dec
push
sahf
test
jmp
or
ror
cmp
mov
addr16
outsb
sti
xor
pop
push
pop
mov
fld
cmp
fdivrl
xchg
das
xchg
push
mov
cmp
pop
lock
imul
pop
jmp
in
jge
or
ljmp
pop
icebp
lcall
xchg
cli
mov
or
jmp
roll
rorl
imulb
out
sti
adc
dec
lea
nop
loopne
fs
aam
jl
jecxz
and
outsb
push
jle
and
sub
push
push
icebp
iret
pusha
lds
les
xor
lret
inc
add
aad
data16
xchg
inc
jl
push
lret
mov
push
push
ror
xchg
idivl
mov
xlat
test
jmp
dec
dec
jns
xor
cmp
into
adc
lcall
xchg
js
out
add
push
ja
mov
andl
push
ficompl
pusha
add
sbb
mov
addr16
inc
pop
dec
clc
les
fsubl
inc
push
aam
out
xchg
pop
lds
fstp
xlat
test
sti
sbb
push
sahf
shrl
stos
popf
popa
cli
lahf
mov
pop
push
imul
mov
cmp
scas
shlb
sub
sub
insl
dec
insl
cld
out
ss
inc
sub
xor
mov
mov
das
loop
cmp
mov
mov
fdivrs
sub
test
loope
xor
aad
xchg
add
push
lahf
xor
dec
shr
push
ljmp
push
pushf
out
or
mov
cmpsb
push
xor
cs
icebp
popf
out
fisttps
dec
sbb
sub
and
inc
xchg
ja
and
mov
sbb
nop
outsb
sub
sbb
jle
fsubl
xchg
inc
add
jns
loope
ja
or
sub
cmp
lock
mov
add
dec
mov
pop
sub
xchg
pop
stos
xor
xor
jnp
aaa
mov
inc
popf
shll
xor
hlt
push
lahf
xchg
pop
sub
hlt
mov
testb
ret
sti
pusha
in
cli
push
bound
gs
into
fidivrs
sub
popf
lods
add
sarl
pop
lods
push
mov
cmp
adc
and
add
and
or
pop
sub
imul
and
adc
js
arpl
ret
adc
shll
xor
mov
jnp
fadd
xchg
cld
adc
in
adc
aas
insb
scas
inc
insl
int3
fisttps
dec
out
inc
xor
add
addb
mov
inc
pushf
scas
xchg
dec
sbb
or
and
cmpsb
jmp
mov
mov
jl
and
push
and
out
cmp
sbb
adc
xlat
ret
xor
shlb
insl
in
andb
dec
fstl
enter
xchg
icebp
mov
testb
sub
adc
xor
mov
scas
cltd
xlat
push
xlat
ds
dec
es
lcall
and
inc
dec
in
xorb
xchg
int
adc
jle
das
imul
popa
lock
pusha
inc
fs
repnz
outsb
fdivrs
insl
add
pop
cld
cvtdq2ps
xor
movb
inc
add
aaa
cmp
jnp
jecxz
sbb
sbb
imul
sub
in
fld1
pop
loope
mov
mov
mov
mov
enter
fidivl
hlt
xchg
inc
inc
lock
cmp
test
add
push
repnz
push
and
cltd
rorb
sub
sbbl
xchg
out
mov
xlat
shl
mov
mov
adc
lods
xorl
xchg
and
enter
push
jbe
and
push
in
in
int3
mov
mov
loop
and
in
jl
xor
mov
test
push
std
roll
lods
mov
inc
inc
ret
mov
shlb
cmp
aad
adc
pop
dec
sub
das
add
dec
ret
mov
mov
daa
cmp
and
pop
push
cld
rorl
add
stos
mov
and
xchg
call
dec
xor
in
lods
push
int3
ret
pop
aas
xchg
add
jmp
cmp
mov
das
pushf
sbb
popl
ljmp
xor
arpl
sarl
out
ljmp
or
jmp
or
dec
pop
xlat
js
ds
sbb
xor
aam
mov
push
pop
je
sarl
adc
cli
out
inc
cmp
fwait
out
ret
mov
rep
xchg
stc
ret
jle
inc
xchg
cmpsl
leave
jle
push
adc
and
sarb
scas
jno
push
arpl
jae
mov
mov
pop
mov
int3
adc
aad
cmp
add
mov
mov
inc
sti
jg
inc
lods
out
aaa
mov
outsl
fstl
adcb
scas
cli
int3
ss
xchg
xchg
dec
mov
jp
inc
into
fadds
push
xchg
push
sbb
jp
mov
testb
cli
into
mov
in
xor
icebp
dec
xchg
jns
scas
xchg
ret
dec
outsl
mov
shl
push
xor
inc
popa
xor
mov
cmp
rolb
ja
lahf
lock
mov
pop
or
lahf
mov
mov
cmp
adc
add
inc
sub
and
scas
dec
cmp
mov
std
pop
loope
xchg
jle
xor
fstp
lea
mov
pop
out
mov
push
mov
or
aad
fdivrs
stc
fnstcw
mov
mov
setge
cwtl
mov
roll
cmp
enter
movsb
add
mov
adc
jnp
cmp
and
pushf
and
inc
test
xchg
movsb
jmp
adc
outsb
into
dec
pop
jae
stc
pop
mov
cwtl
or
sub
mov
test
es
and
lret
cmpsl
in
mov
ret
mov
cmp
inc
rolb
push
ja
icebp
xchg
cmpsb
filds
out
sbbl
jnp
xor
ds
sub
lods
sub
sub
inc
ret
movsl
fisubs
cmp
and
nop
and
paddb
cmp
jno
and
add
pop
xor
dec
ss
push
lods
enter
cmpb
push
or
scas
mov
rorl
jmp
ja
inc
sub
int3
lret
les
loop
sub
dec
std
pop
aam
out
lret
sbb
inc
add
nop
push
sub
jnp
loop
popf
inc
insl
js
mov
mov
aam
push
mov
sub
lods
add
js
repnz
int3
inc
sti
lret
cld
mov
xor
xchg
add
pushf
mov
xchg
jl
xchg
cld
icebp
push
jo
stc
push
sbb
leave
inc
jmp
aaa
pop
stc
daa
jne
ret
mov
push
sbbb
ret
data16
repnz
mov
xchg
aaa
fs
mov
mov
mov
and
fwait
push
cmp
loopne
xor
sbb
sub
and
mov
or
imull
fcoml
add
fs
fistpl
data16
sub
lea
sub
fldt
adcl
push
pop
xlat
movsl
add
xchg
lret
and
mov
test
jnp
mov
mov
inc
les
mov
pusha
popa
cmp
rorb
loope
lea
ds
push
mov
jnp
or
cltd
xor
andl
mov
mov
push
aas
fwait
mov
cmpl
inc
cmp
roll
xorb
fisttps
sbb
sbb
inc
sub
scas
jno
aad
mov
adc
add
in
insb
loopne
addr16
push
adc
subb
and
stos
call
mov
xchg
pop
cmp
sub
jne
lods
sbb
jne
shrb
add
fdivl
pop
or
push
out
cmp
push
outsl
push
sbb
push
int3
gs
jbe
dec
mov
sahf
arpl
jo
push
test
and
movsb
mov
xchg
loope
fdecstp
cmpsl
xor
aas
out
insl
adc
pop
fcmovne
adc
dec
jg
rcll
push
out
sti
mov
mov
andb
push
sahf
add
dec
into
pop
mov
xchg
dec
cmp
paddsb
mov
pop
mov
sub
outsl
es
insb
mov
js
or
stos
mov
and
scas
enter
dec
mov
mov
shrb
sub
lds
lds
sub
jmp
insl
dec
movsb
inc
jne
adc
jbe
repz
cmp
mov
or
test
jnp
fldt
stos
loope
pop
jo
pop
cs
add
or
sub
call
dec
xor
popa
sbb
adc
sub
dec
nop
adc
or
fdiv
jne
ja
sbb
pushf
dec
andl
pop
and
movsb
sbb
inc
jns
adc
scas
hlt
pop
stos
insb
call
xchg
cltd
mov
mov
add
lahf
pop
pop
sbb
movsl
inc
enter
sbb
adc
sbb
ret
inc
push
add
sbb
mov
sti
imulb
or
lods
push
aas
inc
xor
or
jmp
jmp
das
cmpsl
lahf
in
addl
pop
lret
test
in
adc
jne
shl
sti
es
cmpsb
scas
jle
movnti
mov
sub
mov
in
inc
cmp
cmpsb
push
loop
push
ret
xor
push
mov
xchg
and
inc
enter
cmp
jbe
ss
jmp
jecxz
addr16
outsb
sub
test
popa
into
xor
sub
mov
cmp
and
jmp
inc
pop
cld
in
jmp
loopne
lods
dec
faddl
loope
xchg
push
mov
sub
scas
cmpsb
xor
scas
mov
xor
mov
insb
out
jp
test
lret
out
fs
rcl
pop
in
cmp
xorb
addb
sub
stos
test
mov
cwtl
mull
mov
pop
into
pop
xor
xchg
push
loopne
repnz
dec
jnp
repnz
adc
stos
mov
pop
mov
imul
popf
and
push
je
inc
into
xor
or
aad
pop
mov
mov
or
fistpll
popa
xchg
sbb
insb
xor
mov
fdivp
gs
add
shlb
cld
fidivs
jns
push
sub
cmp
notl
outsb
xlat
mov
sub
inc
inc
insb
fcom
ja
stos
inc
lods
xchg
push
stc
outsl
mov
das
mov
mov
arpl
rol
sbb
shl
and
dec
cwtl
jae
mov
xchg
imul
dec
stos
mov
add
je
sub
lret
loop
sti
in
aaa
mov
int
scas
adcl
cmc
popa
in
inc
pop
add
inc
jge
test
sbb
in
push
adc
jecxz
mov
aas
mov
loopne
repz
js
dec
out
push
shll
mov
out
mov
icebp
aaa
inc
sbb
clc
mov
jge
and
ret
mov
inc
fxch
andb
pop
add
push
leave
into
sbb
cmp
movsl
dec
out
ret
mov
ret
mov
hlt
loop
je
push
cwtl
pop
cs
xlat
pop
test
push
mov
data16
in
sub
test
push
fwait
movsl
cmpsb
shrb
fiadds
mov
dec
imul
jl
ja
jb
pop
inc
mov
dec
pop
xor
daa
icebp
lcall
enter
mov
mov
pop
insl
or
adc
inc
inc
or
push
faddl
out
scas
into
add
and
fistpl
cld
inc
push
mov
cmp
sub
repnz
mov
movsl
mov
aas
or
shrb
push
dec
pop
mov
sbb
mov
cmp
sub
pop
loop
je
and
jge
enter
pop
movsl
fwait
das
add
sub
push
data16
push
add
enter
fwait
pop
push
test
ret
int3
bound
out
roll
lret
add
jbe
dec
dec
mov
jp
loopne
sbb
xor
mov
das
add
rcr
adc
jmp
lods
stc
push
jnp
sub
insl
xor
outsb
cmp
xchg
lds
popa
add
ret
jmp
shll
rcrl
int3
xchg
cltd
rcrb
movsl
push
xlat
sub
or
clc
xor
ja
and
add
xchg
cmp
in
das
hlt
ja
or
push
add
aas
fidivrl
xlat
cmpsb
cmc
jb
mov
xlat
lods
inc
mov
mov
inc
jge
aad
ja
mov
or
iret
loop
jecxz
inc
sti
jl
lcall
scas
jo
dec
cmpsb
stos
add
nop
call
xor
mov
lahf
data16
xchg
movsb
mov
in
scas
cmp
mov
cld
fdiv
jo
lret
test
dec
stc
xchg
lret
rorb
mov
dec
dec
arpl
lcall
sub
mov
aaa
add
out
mov
outsb
xlat
inc
daa
mov
jg
xor
incl
loope
pushf
sbb
imulb
push
cmp
mov
js
push
aaa
ss
adcl
pop
scas
sbb
cmp
popa
mov
insl
cmp
lret
icebp
xor
xor
jns
lcall
cmp
rcrl
adc
loop
cmp
inc
mov
mov
sbb
pop
pop
add
pushf
loopne
cmc
mov
cmpb
jl
fists
dec
and
test
xorl
push
push
mov
andl
repnz
push
or
clc
sub
cmp
scas
xchg
push
mov
fsubrs
cmpsb
xorb
jo
inc
imulb
and
loopne
std
mov
sub
sbb
lret
stos
les
mov
xchg
popf
in
lock
imul
inc
push
add
mov
mov
xor
in
leave
fldcw
inc
cld
add
adc
imul
ret
cmpsl
enter
rorb
pop
cmp
xchg
and
adc
mov
lds
mov
out
pop
dec
mov
dec
into
ds
notl
aad
xchg
inc
test
imul
xchg
cs
inc
loope
out
push
lock
stc
xor
push
nop
lods
aam
call
cmp
inc
jle
sbb
and
cmpsl
cmpsb
jecxz
adcb
lds
jge
fbstp
lock
test
iret
mov
into
push
mov
sub
arpl
or
fistps
pop
push
sbb
pop
cmp
insl
jmp
or
add
shlb
repnz
sub
inc
adc
idiv
ret
es
mov
jmp
sbb
cmp
sub
push
jb
bound
cmp
fbld
out
roll
iret
push
mov
push
ficoml
dec
bound
jle
and
pop
push
dec
orl
jne
xlat
xchg
dec
jnp
in
inc
pop
mov
cmpsb
push
xchg
ss
out
push
mov
pusha
test
mov
cmc
pop
pop
imull
xor
repz
clc
orl
daa
and
insl
das
dec
lret
and
std
int3
clc
and
jecxz
xor
addr16
mov
daa
adc
dec
cmp
into
lods
popa
push
loope
stos
mov
enter
inc
out
pusha
dec
lgs
jle
inc
cmp
iret
cltd
je
jmp
repnz
or
cmpsl
lcall
jecxz
and
std
setp
enter
aas
jae
adc
sbb
aaa
lret
inc
dec
nop
add
xor
jb
lcall
xchg
call
jno
clc
and
inc
rorb
loope
aaa
and
cmp
outsl
idivl
xchg
inc
lcall
lcall
push
nop
jge
push
inc
jo
lahf
mov
cmp
into
dec
fsubrs
dec
clc
xchg
aam
ret
dec
adc
out
stos
sbb
jmp
cltd
rcrb
into
add
in
mov
dec
add
mov
test
pop
int3
or
or
std
sbb
test
mov
rcrl
scas
lods
xor
jo
nop
jno
stc
aam
jg
enter
inc
stos
jnp
xor
mov
pop
sub
repnz
cmpsb
iret
mov
dec
lods
jg
enter
jg
pop
mov
out
or
fimull
adc
icebp
adc
mov
push
sahf
mov
lods
push
decl
jno
addr16
fdivs
or
repnz
mov
jecxz
mov
stos
in
or
in
hlt
fst
jae
popf
lods
test
into
in
mov
ret
cmc
pop
sarb
leave
sub
call
shlb
pop
push
mov
adc
lds
jno
into
mov
ror
sbb
mov
push
jnp
outsl
mov
test
test
inc
pop
pop
mov
mov
pop
mov
les
add
adc
jle
fisubrs
mov
rclb
sub
clc
gs
pop
call
jp
mov
mov
bnd
adc
insl
dec
cli
mov
stc
sbb
push
mov
add
mov
mov
xchg
dec
sbb
mov
ljmp
out
cmp
fwait
or
daa
jmp
jno
adc
negb
sbb
push
lea
mov
std
int3
pusha
add
je
fcmovbe
mov
je
inc
shlb
mov
adc
adc
and
addr16
mov
popf
cmpsb
cli
push
pop
pop
add
clc
sbb
adc
mov
pop
loopne
lcall
jle
dec
aas
inc
xchg
mov
fwait
sbb
arpl
mov
cmp
jecxz
test
in
pop
mov
or
inc
sbb
mov
mov
lret
xchg
pop
mov
pushf
aaa
adc
mov
pop
mov
or
fwait
sub
pop
inc
mov
mov
imul
mov
dec
add
enter
jge
xchg
sub
rcl
xorl
cmc
insl
mov
or
aam
mov
inc
xchg
shrb
stos
aas
pop
pop
lret
lret
push
and
sbb
and
push
mov
vucomisd
push
jg
lcall
inc
xorl
or
sub
cwtl
fimull
cmpsb
jle
shll
add
mov
sbb
mov
jmp
stc
add
sbb
sbb
cmp
rcrl
mov
cmp
aam
xchg
inc
mov
mov
push
xorb
test
nop
dec
cmp
adc
or
add
adc
movsl
repz
dec
dec
test
add
insl
or
dec
mov
add
gs
push
loopne
push
inc
test
les
jle
push
aas
mov
dec
test
xor
adc
add
mov
int
mov
jl
enter
or
gs
or
pop
add
mov
jecxz
bound
or
test
sarl
fwait
int
adc
ss
sbb
pop
or
jo
idivl
inc
push
xchg
sub
or
arpl
ret
cmp
scas
aaa
pop
pop
jns
arpl
xlat
add
into
xchg
fs
scas
andl
stc
popf
jecxz
pop
sub
pop
andb
mov
cmp
repnz
lock
in
cmp
add
stos
fcmovbe
add
sbb
sbb
cmp
mov
adc
xchg
push
cmp
in
xchg
into
fstl
mov
fnstcw
out
rcrl
xchg
test
ret
cmp
aas
fistl
and
push
sub
or
popa
aaa
js
xor
adc
or
lcall
jb
outsb
aas
test
xor
leave
testb
subb
push
fstpt
cld
sbb
push
xchg
addr16
sahf
in
repz
or
shll
cmp
and
push
bound
cs
aam
rcrb
xor
les
sub
fisttps
dec
in
or
cld
lods
adcb
dec
cmp
pop
mov
in
ret
dec
idivl
pop
or
sbb
stc
stc
or
movsb
mov
xchg
rorl
lcall
mov
in
and
inc
gs
xlat
addr16
fstpt
and
push
jb
out
inc
test
int3
in
push
dec
adc
add
mov
and
jno
ficomps
jl
and
mov
gs
mov
push
test
imul
cltd
cmpl
mov
jb
and
stos
add
je
lods
jg
mov
xor
leave
ret
mov
xor
push
add
xor
inc
dec
std
cltd
jp
iret
jo
idivb
mov
cwtl
cmpsl
cli
adc
movsl
aas
lods
aam
and
sub
out
das
jg,pt
mov
enter
mov
ljmp
cmp
mov
xchg
add
mov
pop
xchg
hlt
inc
jmp
dec
pop
sbb
mov
test
mull
sbb
pop
pop
push
ja
xor
popa
cmpsb
mov
int
ljmp
and
insb
inc
mov
add
into
add
mov
lret
popw
jb
dec
pop
sysret
lock
xor
fidivrs
or
out
std
popf
lods
je
xchg
push
xchg
push
sbb
data16
inc
mov
sarl
jae
in
arpl
test
and
adc
mov
dec
or
into
nop
das
mov
cmp
jbe
xor
add
mov
not
xor
xchg
lahf
add
cs
pop
pop
xchg
sbb
stos
test
shl
ljmp
ss
scas
sub
lahf
rcrb
inc
and
pop
mov
rorl
ja
out
sahf
roll
mov
and
movsb
xlat
inc
ret
repz
int3
and
stos
mov
xor
push
sbb
daa
ds
pop
adc
and
lret
sub
inc
sub
ja
leave
aas
pop
mov
ljmp
or
inc
add
test
mov
cmp
ds
dec
in
inc
adc
ljmp
es
nop
fcomps
xchg
sbb
gs
mov
dec
jns
scas
repz
and
mov
test
jg
mov
pushf
outsl
pop
or
testb
cmp
std
loopne
fnstsw
pop
je
call
fwait
sbb
pusha
and
insb
stos
lret
mov
fdivrs
iret
fnstenv
flds
jo
jecxz
mov
outsb
jg
gs
xor
mov
cld
rcr
pop
sbb
mov
or
push
mov
xor
mov
cld
adc
lods
mov
push
lods
and
jne
xchg
lret
or
addr16
jmp
push
leave
xchg
mov
or
ret
out
cmp
jo
jns
jmp
in
ljmp
jne
sub
xchg
out
push
mov
pushf
add
mov
je
cmpsb
mov
stc
cmp
sbb
pop
sbb
daa
dec
mov
xor
pusha
call
jb
push
sbb
xchg
sbb
rcl
adc
dec
add
loope
pop
dec
cmp
in
outsb
nop
sbb
cmp
cli
loope
js
add
aaa
pop
jb
mov
pushf
aaa
std
xlat
loop
daa
leave
mov
adc
jle
jle,pt
cmp
or
call
xchg
jbe
aas
jg
loop
pop
cmp
inc
sbb
sub
cmp
adc
xor
mov
stc
sbb
es
inc
sub
mov
inc
repnz
cmp
mov
push
adc
out
scas
out
jg
aad
icebp
mov
adc
aaa
mov
jg
mov
adc
adc
ret
aaa
mov
and
pop
cmpb
or
mov
rclb
cmp
or
xchg
int
cld
outsb
xchg
es
daa
call
mov
add
fcompl
stos
inc
sbb
cli
shlb
sbb
sbb
xor
scas
sbb
out
das
cld
ljmp
stos
mov
lret
add
popa
iret
sub
push
push
adc
inc
sub
mov
dec
inc
repnz
insb
adc
jo
insl
les
and
jg
int
pop
rcrb
xor
insl
cmp
out
sub
ljmp
push
cli
shlb
iret
std
xchg
imul
pop
rclb
pop
jecxz
icebp
mov
fs
out
shlb
add
add
jmp
dec
insl
sub
loopne
ja
push
cwtl
dec
pop
push
xchg
xor
pop
daa
push
xchg
arpl
lods
inc
sti
xor
mov
sub
fcomps
push
pop
test
mov
jecxz
lock
in
pusha
push
aaa
repz
push
add
push
stos
dec
or
jns
sub
sarb
ljmp
adcl
addr16
xor
jnp
or
lea
xchg
out
mov
adc
pop
pop
in
scas
add
loopne
add
test
sub
pop
insb
pop
adc
pop
mov
loop
out
in
out
test
jns
cmp
cs
jmp
mov
sbb
add
in
push
fimuls
loope
push
pop
mov
mov
and
dec
addr16
jo
push
ret
pop
or
cmpsb
cltd
test
fstp
js
push
jns
sub
js
addb
pop
mov
fdivrl
arpl
out
or
imul
ret
ret
xor
in
arpl
in
cmc
xchg
scas
inc
sbb
inc
stos
fs
mov
mov
add
fidivrs
int3
outsb
cmp
lret
out
das
sub
or
movsl
add
mov
dec
pushf
loop
mov
popf
add
sbbl
test
in
add
and
pop
mov
mov
jnp
test
jecxz
movsl
push
adc
into
pop
gs
cwtl
leave
ja
cwtl
lods
add
push
in
fmull
pop
jnp
cmp
mov
outsb
fwait
xchg
idivl
and
cltd
jnp
or
rcrl
dec
pusha
and
xchg
inc
mov
add
cmpsl
lret
jnp
inc
cmpsl
jle
pop
subl
dec
inc
push
push
ds
sbb
aad
push
jb
add
mov
hlt
jb
mov
out
cmp
push
xchg
sahf
xchg
xchg
jb
lret
xchg
pop
cld
or
in
rorl
xor
out
repz
pop
jge
mov
pop
dec
adc
xchg
outsb
or
gs
gs
mov
fimull
and
sub
adc
sbb
das
cmp
xchg
or
je
push
sbb
xorl
lds
adc
dec
add
testl
mov
sahf
inc
sbb
mov
aaa
je
ficomps
jne
scas
orl
gs
jmp
jg
leave
dec
scas
or
cmc
scas
mov
sbb
xor
jge
pop
jmp
adc
mov
repnz
clc
rorb
sbb
mov
jge
pusha
ficoml
mov
pop
sub
shll
and
ds
stos
adc
shll
rorb
mov
mov
jecxz
bound
into
in
fdivs
dec
push
xor
or
shlb
in
adc
lcall
pop
cwtl
aas
sub
push
dec
mov
jo
subl
add
or
shl
pusha
in
ja
sub
xor
iret
lret
shlb
ja
into
neg
cld
sub
add
push
dec
aaa
push
pop
xchg
lret
mov
repz
push
adc
adc
pop
sub
sarl
imul
xchg
mov
xchg
nop
scas
jae,pn
pop
fwait
movsb
popa
out
test
filds
xchg
sub
mov
jae
lahf
xor
sbb
push
adc
flds
push
mov
pop
in
jno
orl
xchg
cmp
fimull
int3
or
push
lods
pop
stos
enter
or
out
outsl
mov
push
dec
jg
sbbb
sub
pop
pop
inc
adc
dec
cltd
mov
les
pop
loopne
mov
les
inc
pop
mov
jbe
cmovb
out
aam
pop
xchg
lds
pusha
add
daa
cmp
js
std
pushl
jne
daa
mov
jno
push
mov
shll
in
push
mov
enter
loop
dec
jecxz
mov
push
loopne
cltd
insb
iret
call
das
add
or
cmp
and
hlt
pop
dec
dec
and
dec
and
fcoms
mov
mov
lods
aaa
loop
cmp
out
pop
xchg
aad
test
xlat
sbb
ss
lds
cvtdq2ps
mov
aad
add
fsts
and
in
pop
or
inc
mov
in
mov
mov
jl
and
aaa
push
inc
adc
sbb
add
push
in
adc
gs
and
xor
outsb
xchg
out
cmp
jge
shrb
jp
lcall
xchg
imul
push
jne
iret
mov
stos
test
jmp
and
push
adc
dec
mov
es
xchg
xlat
arpl
les
jmp
push
or
out
dec
lret
xchg
int3
mov
cmpsb
or
mov
in
inc
repnz
push
setle
mov
xchg
add
mov
adc
push
mov
pop
popf
pop
movb
es
dec
dec
xchg
leave
ds
pop
nop
jb
mov
in
mov
ja
loope
test
adc
es
pop
sti
sbb
fs
lcall
dec
mov
mov
sub
not
repz
aam
and
clc
cmp
iret
test
mov
loope
push
fdivrs
imul
push
out
mov
jbe
cli
inc
movsb
mov
mov
dec
adc
pop
mov
xor
sbb
pushl
dec
mov
bound
movsl
call
push
push
adc
test
scas
pop
fwait
inc
adc
fcomps
daa
repz
lcall
iret
sarl
jne
add
mov
xor
shr
nop
mov
testl
outsl
dec
hlt
cmp
push
iret
xchg
sarl
mov
xchg
sub
scas
loop
aam
and
add
add
lcall
stos
add
jle
cmpsb
sub
fsubl
ljmp
jne
aas
mov
dec
push
pushf
mov
popfw
jne
js
cmp
mov
ljmp
adc
adc
mov
mov
jle
dec
mov
jmp
jae
mov
movsl
ret
test
pushf
lea
mov
popl
test
and
inc
or
jge
jb
mov
test
js
push
xchg
imul
cs
pop
ret
mov
ja
sub
imul
mov
cmc
mov
ja
cmp
test
sub
imul
les
loop
xchg
push
dec
sub
add
ret
mov
ljmp
dec
pop
and
test
fstps
jbe
and
nop
add
aas
into
ds
stc
jns
out
pop
es
fs
repnz
hlt
popf
mov
icebp
mov
mov
pmovmskb
xlat
mov
scas
mov
lret
lods
inc
fs
jno
mov
add
adc
jg
out
jbe
in
cwtl
and
add
imulb
mov
push
iret
es
add
inc
subl
inc
fdiv
lcall
or
iret
push
jno
outsl
fidivs
pop
xchg
inc
iret
adc
cltd
xor
inc
dec
dec
daa
frndint
int3
push
adc
cmovnp
pop
lahf
sbb
andl
adc
xorl
jp
arpl
sbb
pop
dec
into
je
lret
ljmp
in
xchg
push
or
fwait
mov
mov
cmp
ret
fisubs
icebp
popa
xlat
and
pop
aas
test
in
in
dec
ljmp
cwtl
dec
and
hlt
ljmp
scas
daa
fisubrs
push
xchg
inc
jmp
ja
out
or
add
fidivrl
shrb
aas
loopne
sub
cmpsl
sub
and
sbb
add
bound
bound
testl
insl
jp
fistpl
sub
pop
add
in
jle
adc
fistpl
inc
psubsb
lods
gs
test
lds
mov
inc
je
call
and
pop
push
cmpsb
push
push
xchg
and
sbb
jp
shrl
adc
inc
stos
add
je
cmc
ljmp
imul
sbb
movsb
cmpsl
sub
cmpsb
sarl
xchg
add
cmpsl
popf
arpl
sub
int
jns
gs
sbb
add
cmp
inc
add
dec
inc
jae
xchg
aaa
scas
shlb
xchg
mov
dec
jg
pusha
fimuls
sbb
add
and
mov
sub
std
cs
sub
mov
je
mov
mov
fidivs
cmc
dec
xor
ret
test
pusha
cmpsb
push
xchg
movsl
cmpsl
lret
add
lods
call
dec
sbb
inc
lds
adc
inc
mov
cltd
into
fmulp
std
in
jne,pt
test
psubw
push
gs
push
lret
fildll
movsl
insl
out
fistl
cmc
jno
inc
cmpsl
xorl
add
cmpb
aad
xchg
icebp
ja
lahf
data16
mov
inc
jnp
imul
xchg
sbb
subl
outsl
stc
in
call
clc
mov
loop
cltd
dec
arpl
cld
xchg
add
andb
mov
inc
inc
jg
es
sti
xor
mov
push
in
clc
and
xor
mov
imul
pop
inc
aas
xlat
jg
pushf
lret
shr
les
jp
mov
sahf
xor
push
jb
cmp
mov
pop
arpl
push
jb
adc
fstl
adc
mov
lock
pop
enter
popf
ss
add
loopne
lods
lods
mov
lahf
lret
lret
arpl
divb
repz
je
repz
mov
movsl
mov
push
cmpsb
lahf
push
insl
stos
sub
jnp
push
iret
add
and
imul
mov
cltd
and
enter
cmpsb
sub
mov
or
push
je
sub
mov
ret
movsb
call
rcl
xchg
cwtl
daa
inc
xor
dec
mov
jle
scas
test
div
mov
mov
std
ret
jg
mov
jg
xor
jl
and
jmp
sbb
jmp
mov
jmp
cli
cmc
dec
lods
xor
stos
mov
lods
pop
shlb
subl
mov
dec
in
and
adc
add
jno
scas
jo
push
into
icebp
sbb
jle
mov
repnz
repz
inc
ret
mov
xchg
cmp
call
jecxz
jb
mov
dec
shl
aaa
and
xchg
push
lock
aam
lcall
mov
sub
adc
pushl
out
jg
mov
cmpsb
xor
adc
pop
adc
mov
pop
jae
stos
adc
inc
mov
or
popa
mov
das
outsl
add
pop
arpl
xchg
cmp
out
mov
push
movsl
cmc
jmp
rclb
dec
sahf
inc
jge
fiaddl
movsb
stos
sub
mov
push
movsb
jle
fsubrl
shl
repz
sub
add
jnp
fwait
sub
cltd
mov
cld
jbe
mov
inc
fdiv
lcall
sub
cmp
stc
test
pushf
jnp
sahf
ds
fs
insl
or
jne
or
xchg
inc
adc
mov
stc
loope
xchg
in
in
and
jmp
and
or
fwait
or
dec
xchg
jle
cmc
dec
sbb
popf
dec
fbld
shrl
dec
aas
mov
int3
cmp
mov
fstpl
inc
aad
out
and
xchg
ret
sbb
faddl
sbb
mov
add
jb
ror
outsl
inc
push
cmp
xor
or
bswap
roll
sbb
addl
push
aaa
inc
and
pop
lret
mov
mov
xchg
jge
or
push
jecxz
cmp
nop
push
loope
aas
and
adc
scas
shrl
imul
cld
add
add
cltd
push
push
pop
mov
xor
rcrb
outsl
mov
ret
lret
xchg
adc
mov
cmpl
push
jno
loop
push
test
call
mov
add
test
out
aam
iret
cmp
sub
imul
negl
aas
jno
movsb
mov
jmp
movsl
data16
ret
imull
je
mov
cmp
push
insb
adc
int3
push
arpl
lock
in
cs
call
ja
jbe
inc
cs
shl
xor
push
xor
mov
inc
lret
sbb
xchg
movsl
cmpsl
inc
jp
in
lods
inc
adc
push
addr16
into
xor
js,pn
mov
push
int3
add
std
std
call
or
aas
push
xor
mov
xchg
xchg
shlb
in
mov
fcmove
mov
xchg
xor
das
push
mov
push
pop
cmpsb
out
sbb
push
sub
sbb
xlat
daa
hlt
and
stos
xchg
lock
push
xchg
out
test
cmpl
loopne
lods
idivb
test
xor
add
jae
or
ljmp
stos
dec
sbb
jle
xchg
inc
in
mov
sbb
in
insb
jne
push
jp
or
jb
push
loopne
and
or
inc
sub
rorb
popl
sbb
xchg
push
movsb
jle
addr16
or
lcall
sub
xchg
dec
in
les
fstpt
imul
mov
dec
dec
push
mov
rorl
dec
mov
sbb
cwtl
xchg
cmc
lods
out
iret
inc
and
je
push
jle
stos
outsb
pop
aaa
inc
subl
fnsave
jae
fisubl
add
inc
push
push
call
fwait
jge
popa
or
pop
iret
lock
in
push
insl
lcall
jns
leave
out
mov
xor
mov
mov
rolb
mov
pop
pop
inc
inc
cmpsb
movsl
jl
mov
push
daa
jp
dec
sub
mov
sub
pop
mov
xchg
mov
mov
rcll
lret
or
xchg
mov
sub
sub
out
jno
popa
fidivl
out
dec
mov
mov
stos
jae
sub
or
jnp
mov
jecxz
loopne
inc
les
mov
shlb
shrl
fiadds
mov
mov
jl
mov
out
clc
sub
insb
movsl
loop
and
push
push
movsb
adc
popl
adc
add
xchg
pop
ret
adc
daa
push
mov
orb
repnz
cmp
int3
inc
ja
sbb
mov
scas
inc
mov
mov
inc
rorb
into
jbe
adc
inc
mov
xchg
push
movsl
jb
js
add
push
inc
aaa
roll
inc
bound
xlat
and
iret
bound
adc
loopne
scas
xchg
cmpsb
inc
cmp
insb
decb
iret
or
dec
mov
mov
inc
sbb
mov
aam
jb
xlat
add
mov
sbb
pop
fs
adc
cmp
out
mov
fistpl
mov
and
into
pop
jne
stos
hlt
inc
jo
mov
push
inc
mov
dec
mov
pop
insb
or
lock
in
pusha
outsl
mov
int
fisubl
fcomps
lret
sub
push
push
decl
cld
ret
sub
push
lock
mov
jno
aas
mov
adc
not
call
in
jecxz
jo
push
sbb
repnz
cmp
ljmp
xor
mov
iret
mov
mov
jp
fdivl
pusha
jmp
pop
lods
jp
ret
adc
pop
dec
jnp
jmp
cltd
or
mov
lret
insb
leave
push
mov
cltd
mov
push
inc
dec
xchg
xchg
mov
cmp
cltd
add
push
jl
push
lahf
roll
inc
out
les
outsb
jbe
popa
jbe
cmp
pop
xchg
sub
sbb
jl
push
pushf
add
jne
sub
push
and
dec
push
loope
imul
mov
roll
cmp
xchg
cmp
mov
push
ret
fsubs
fdivrl
repnz
ret
js
jbe
lods
jo
sub
xor
enter
jmp
nop
dec
jb
mov
ljmp
add
mov
sub
inc
clc
jae
shlb
sub
ret
mov
xchg
and
dec
int
sbb
in
sub
in
stos
out
lods
insb
dec
push
sub
pusha
dec
repz
inc
insl
fisubrl
xchg
sbb
or
out
xchg
cmp
stc
push
pop
imul
aad
cmp
mov
pushf
data16
pop
rcrl
in
mov
int
or
js
fiaddl
or
out
negl
ret
xor
nop
repz
loopne
cld
orb
out
sbb
mov
lret
jecxz
adc
adc
cmp
inc
fcmovnu
cmp
das
cmp
mov
ficomps
xor
mov
mov
daa
pop
inc
mov
aam
fcmovbe
cmpsl
sub
cmp
or
cmp
lods
and
mov
test
les
xchg
sbb
pop
mov
cs
xor
icebp
or
outsb
loopne
pop
orb
pop
push
xchg
or
fldenv
jnp
stos
jbe
int
addl
add
or
test
aam
or
pop
push
push
xor
mov
xchg
mov
ja
mov
or
stos
insb
cmp
push
push
lods
mov
push
repz
sub
movsbl
push
repz
rcr
pop
jnp
jmp
icebp
lea
inc
jmp
ljmp
rcr
int3
in
and
dec
mov
jecxz
imul
jp
fwait
call
cwtl
sbb
xor
cwtl
dec
pop
mov
lods
testb
mov
jge
pop
movsl
cs
dec
add
gs
nop
test
pop
prefetch
fwait
push
jmp
insb
mov
cmc
mov
aaa
or
pop
mov
xor
or
inc
mov
int3
iret
xchg
jne
scas
fsubrl
mov
out
enter
cwtl
jp
rcll
or
inc
adc
push
push
mov
push
and
in
sbb
inc
lret
sub
mov
push
sbb
mov
pop
add
divl
push
pop
inc
dec
insl
mov
arpl
push
andl
xchg
push
and
lcall
sub
mov
mov
pop
mov
subl
sub
mov
inc
imul
sbb
pop
inc
incb
mov
dec
lret
or
mov
int3
push
xchg
arpl
adc
mov
sbb
sub
push
clc
adc
mov
jle
sub
cs
pop
mov
out
cli
inc
es
sub
mov
stc
pop
test
cmp
js
xor
fdiv
jns
xor
hlt
js
dec
nop
das
pop
mov
aad
or
push
movsb
dec
aam
push
add
dec
lahf
aad
ss
in
add
lret
xchg
nop
cmpsl
scas
add
sbb
lahf
je
jno
scas
dec
loop
or
das
dec
jo
xchg
jae
or
and
jbe
enter
jle
pop
mov
cmp
call
xchg
ss
clc
push
lea
xor
out
add
test
insl
dec
cmp
aad
mov
push
ja
outsl
push
out
fdivs
insb
xlat
and
int
cltd
pop
xor
mov
dec
movsl
pop
push
mov
in
xlat
fisttpl
shrb
or
cld
popl
or
adc
lahf
sarb
or
arpl
sbb
lods
loop
mov
push
adc
leave
jl
cmpsb
inc
out
lods
mov
stos
or
orb
aad
lcall
lret
sarb
add
shl
add
stos
jp
shll
popa
roll
mov
je
pop
cmp
arpl
cmp
pop
add
fstpl
iret
test
shr
jecxz
aam
decl
add
push
add
sbb
jmp
rcll
pop
stos
sti
sub
adc
inc
mov
pop
loope
nop
les
inc
popa
mov
pusha
push
and
stos
xorl
inc
push
xor
popl
add
out
scas
lds
mov
loop
push
mov
movsl
scas
xor
insb
inc
mov
mov
fiadds
pop
movsb
mov
stc
outsl
mov
rcrb
int
sub
hlt
in
js
insl
sbb
xor
sub
pop
scas
enter
sti
ja
fisubrl
ror
xor
mov
pop
add
dec
push
fldl
fwait
cltd
mov
adc
shl
bound
dec
insl
lods
adcl
xchg
mov
pop
jle
xor
fwait
mov
bnd
adc
add
fwait
mov
test
test
xor
push
nop
cmp
stc
das
xor
rorb
cmp
out
cltd
in
cmpsb
popa
and
xchg
add
jecxz
dec
push
roll
inc
adc
shlb
sub
xchg
push
jbe
in
pop
fmull
arpl
mov
andb
test
shll
or
pop
out
in
sbb
jne
ja
jns
push
cmp
pop
and
shrb
xchg
push
jle
adc
popf
sbb
jecxz
push
fldcw
lds
mov
out
mov
mov
imul
in
sub
aas
test
sti
dec
xchg
jp
aaa
inc
inc
loope
stos
jmp
stc
je
popf
cwtl
mov
test
int
data16
dec
adc
jb
sbb
shl
sbb
push
sbb
outsl
aas
jle
xchg
int3
cmp
daa
xor
push
cmp
mov
into
jecxz
into
xor
xor
xchg
adcb
add
push
fldln2
xor
pop
loopne
xchg
enter
jno
xor
dec
stos
std
mov
test
fdivrl
ja
xor
dec
pop
cs
xchg
xchg
cli
std
cmp
into
mov
lea
sti
adc
arpl
test
sahf
fcmovbe
into
test
and
rcr
pop
xor
mov
enter
and
and
in
sbb
add
xor
sub
lds
push
pusha
js
in
xchg
xorb
and
dec
and
mov
mov
cmpsb
popfw
push
jb
mov
dec
xchg
lock
xor
movsl
enter
mov
sbb
xchg
sbb
scas
mov
add
stc
inc
dec
mov
xchg
aam
es
insl
sbb
xchg
pop
jo
add
int
sbb
ds
cmc
shl
jne
push
push
ljmp
sub
gs
inc
inc
repz
dec
out
push
idivb
lock
lods
inc
mov
iret
jo
leave
sbb
inc
shlb
adc
xacquire
sub
imul
push
sbb
mov
sbbb
call
lock
lock
jae
push
lcall
push
jmp
jae
inc
xchg
std
adc
xchg
add
clc
dec
outsb
xor
cs
repz
fdivl
test
add
in
mov
xchg
cld
lds
and
cmp
pop
fwait
xorb
leave
xchg
popa
clc
int3
mov
jns
push
xor
push
cli
cltd
shrb
into
xchg
jbe
scas
hlt
test
dec
imul
or
pop
dec
gs
dec
jo
push
adc
xchg
das
pop
mov
add
data16
clc
imul
pop
repnz
pop
movsl
cmc
cmp
in
pusha
enter
jecxz
shrl
or
mov
push
aam
add
dec
cmp
cs
inc
cmp
loopne
mov
adc
cmp
jmp
stc
in
loopne
shl
jmp
adc
lcall
cmp
push
mov
js
push
test
insb
inc
dec
push
sahf
jge
pushf
dec
fbld
xor
fmul
jp
dec
loope
pop
pushf
fcmovbe
lds
sahf
mov
add
imul
sahf
mov
push
movb
out
xor
jo
jmp
mov
jg
popa
rol
adc
scas
sarb
cmpl
dec
jp
and
inc
pop
sbb
dec
shrb
into
pusha
mov
mov
mov
pop
out
adc
add
cmp
sbb
fdivs
scas
test
adc
jo
mov
sahf
cwtl
xor
lcall
sub
mov
clc
outsb
cmc
adc
mov
sbb
cmpsb
lcall
aas
mov
fistpl
sbbl
stc
pop
rcl
push
xlat
fucomp
fbstp
mov
mov
fsubrl
fcom
and
mov
and
cmp
dec
jg
std
addr16
inc
idivl
add
pop
jp
insl
fcoml
fdivs
cmp
push
and
inc
mov
sti
mov
or
mov
pop
push
iret
es
mov
mov
add
out
dec
jo
bound
les
xchg
dec
fdivs
push
and
inc
jne
cmc
mulps
mov
adc
mov
pop
aad
push
jae
xchg
pop
gs
mov
cmpl
push
lcall
loopne
adc
sbb
or
pop
mov
out
pop
jmp
pusha
cwtl
int3
mov
repnz
cmp
fistl
cltd
jecxz
xchg
scas
pop
mov
cmc
fcmovbe
lret
nop
mov
push
ror
orb
popf
and
inc
aad
scas
pop
sbb
js
jb
cs
lds
test
mov
jb
jae
mov
insb
repz
sbb
dec
xchg
inc
dec
mov
sub
and
mov
mov
lcall
mov
insl
jb
lret
sub
mov
xchg
scas
pop
push
cmpsl
mov
xchg
mov
pop
dec
les
pop
adc
cmp
mov
leave
popa
inc
mov
sahf
nop
sub
outsb
adc
jb
ljmp
out
enter
push
cld
pop
insl
jmp
outsb
push
mov
push
mov
iret
or
shl
call
es
push
test
lret
mov
mov
mov
gs
mov
xchg
fstps
gs
neg
sbb
repz
fldcw
les
cli
cmpsb
inc
pushf
pop
dec
leave
mov
xchg
fwait
xchg
mov
in
jo
jo
lahf
wrmsr
sub
sub
jl
inc
cld
mov
aas
dec
xor
out
lret
adc
pop
cld
cmp
pop
lock
push
or
daa
mov
jno
hlt
xor
into
pop
outsl
sbb
cmp
mov
fdivrl
das
popf
pop
jmp
mov
adc
in
inc
or
imul
pushf
xchg
mov
and
popa
adc
imul
scas
sbb
dec
xchg
xor
pushf
orl
cmp
adc
push
aam
xchg
pushf
push
lsl
mov
cmp
mov
popf
dec
outsl
adc
je
lock
popf
lahf
ja
lds
jg
cmp
loopne
cmp
xchg
lahf
xchg
and
xchg
dec
or
out
add
sub
iret
sub
cmpsb
orl
xor
jmp
or
push
mov
inc
and
sbb
push
mov
adcb
sbb
sbb
jge
flds
fstps
jmp
ficoml
cld
mov
mov
mov
jbe
loopne
outsl
adc
mov
icebp
add
mov
sub
pop
xor
xchg
out
lods
scas
je
dec
int3
inc
jg
dec
inc
loopne
or
in
inc
xchg
hlt
sbb
pop
dec
into
xchg
xchg
outsl
loopne
fs
pusha
test
sbb
outsl
and
jge
or
fsubs
inc
adc
mov
stc
and
sub
lcall
xor
inc
in
jle
bound
pop
pop
loop
add
movsl
add
fistpl
push
cmpsb
fadds
sbb
adc
cmp
push
pop
rolb
xchg
repz
inc
mov
hlt
dec
adc
fcomps
dec
cmp
mov
cld
aas
push
pushf
fnstsw
push
pop
gs
and
call
fstpt
xchg
es
leave
xor
mov
push
mov
popa
and
and
inc
fmul
adc
adc
adc
lahf
frstor
inc
leave
sbb
pop
movsl
subl
pop
xchg
dec
outsb
or
ja
in
mov
stc
into
dec
jae
and
cmp
cmp
ret
scas
into
outsl
sub
rclb
mov
mov
in
sarl
aaa
insl
add
test
xchg
pop
pop
outsb
jo
add
hlt
daa
pop
loope
pop
push
adc
ljmp
xchg
cmpsb
mov
call
xchg
jg
xchg
and
icebp
jnp
outsb
adc
imul
cmp
movsb
test
movsb
shll
jmp
sbb
lock
add
pop
ja
dec
add
sahf
mov
mov
adc
insl
sahf
fsub
mov
ret
jmp
loopne
pop
std
inc
inc
dec
cmp
inc
or
mov
mov
push
arpl
cmpsb
test
add
js
xor
lods
js
out
mov
and
int
mov
sub
notb
test
aad
pop
incl
jle
dec
xrelease
insl
xor
jg
lods
and
jp
sub
xchg
insl
imul
movb
leave
xor
mov
repnz
xor
xor
icebp
aaa
or
sub
aaa
jo
inc
push
xor
pop
scas
mov
std
mov
push
and
xlat
call
loope
cmpb
mov
mov
add
popf
movsl
mov
jecxz
xor
mov
xor
xor
cmpsb
push
mov
and
gs
cmp
sub
stos
imull
mov
pushf
insl
and
sbb
daa
inc
or
daa
mov
cmc
xor
out
test
insb
test
jmp
dec
fidivrl
inc
mov
aad
std
push
mov
jnp
push
cld
cwtl
data16
push
lock
fisttps
lcall
lea
sahf
popa
sbb
aam
mov
mov
cmp
inc
xchg
adc
dec
loop
inc
sbb
xchg
aam
out
out
bound
iret
ret
adc
mov
sbb
gs
sbb
jg
stos
in
xchg
xchg
xor
pop
das
mov
mov
in
adc
sub
dec
add
adc
aam
bound
pop
pop
cmp
test
mov
mov
dec
fcmovnb
xor
adc
ret
int3
jg
cli
jno
xchg
inc
sub
arpl
push
gs
rolb
xchg
mov
jnp
rorl
add
push
mov
push
mov
pusha
dec
add
dec
sbb
xor
jo
adc
in
or
stos
pop
movsl
sub
inc
call
orl
mov
or
adc
cmp
add
in
insl
in
ret
xchg
pop
in
cmp
lret
mov
inc
xchg
js
jae
pop
fdiv
jp
mov
xor
pop
mov
ds
inc
lds
pop
mov
mov
mov
dec
xchg
jge
repnz
sub
inc
xor
lret
sbb
mov
int
dec
inc
xchg
fiadds
pop
mov
cltd
and
mov
pop
and
flds
test
repnz
jbe
in
sub
jge
imul
xor
inc
test
dec
dec
push
inc
clc
or
push
rorb
frstor
cmp
scas
ret
ds
lahf
test
cmpsl
xor
outsl
pop
inc
push
repnz
mov
sahf
mov
sbb
mov
in
lcall
ret
scas
inc
lods
pop
stos
rcr
push
roll
sbb
and
repz
mov
addl
or
pop
jl
dec
out
jge
mov
cmp
aam
inc
out
inc
push
stos
cmp
or
lock
xor
adc
cld
jno
xor
data16
mov
out
andl
pop
adc
mov
mov
aaa
adc
adc
or
cld
mov
test
popa
aad
inc
pop
test
jo
sahf
stos
push
mov
cmpsl
jae
cmp
dec
dec
push
pop
pushf
jle
in
inc
mov
into
xchg
in
jb
pop
leave
adc
mov
data16
inc
fbld
jge
and
outsb
out
movsb
int
cmp
jp
notl
rcl
test
cmpsb
mov
movsl
cmp
inc
add
push
jp
mov
xorl
add
loope
sti
movsb
shll
imul
sbb
insb
add
mov
xor
hlt
mov
cmc
lea
mov
inc
imul
jp
bound
mov
enter
int3
mov
imul
lds
fdivl
shrb
push
std
jb
call
cmp
mov
js
lock
or
xor
data16
jb
inc
ds
int3
lret
aam
mov
mov
push
aad
in
pop
ror
fcoml
fwait
test
pop
aaa
inc
push
sbb
incl
out
pop
dec
sub
lcall
jo
pop
dec
in
into
cmp
fistps
insl
mov
shll
cmp
cld
add
inc
notl
mov
in
leave
addr16
sub
or
push
pop
xchg
add
inc
in
push
scas
sbb
push
inc
xor
sub
fistpl
testb
or
push
int
pop
or
ficompl
sub
fdivs
xacquire
pop
stc
lret
lret
adc
ds
sub
mov
sbb
pushf
daa
push
add
mov
sahf
aam
pop
stc
or
push
ljmp
aas
sbb
ss
loope
inc
sbb
add
gs
jae
rcrb
mov
cmc
cmp
jae
fldt
imul
repz
add
pop
repz
mov
xchg
addl
btr
notb
push
mov
add
inc
mov
enter
push
imull
push
addl
sbbl
dec
movsl
iret
sahf
inc
test
mov
stos
add
jecxz
jl
test
mov
mov
vmovd
ljmp
cwtl
cwtl
adc
dec
mov
testl
arpl
lock
fwait
pop
inc
clc
call
xor
sub
outsl
popa
scas
lahf
xchg
rolb
mov
jge
add
mov
xor
fucomp
in
sub
les
xor
test
repz
ffree
adc
inc
sub
repnz
xor
mov
ja
and
jecxz
jae
or
mov
xchg
in
xor
dec
stc
mov
cltd
mov
sti
icebp
stos
xchg
dec
inc
jg
xchg
mov
pop
and
or
leave
popf
or
outsb
xor
xchg
mov
cwtl
icebp
dec
popf
rclb
outsb
into
rclb
mov
in
movsl
loope
mov
aaa
into
loop
cli
out
cmp
fdivr
push
in
shl
dec
xchg
pop
push
sbb
sti
xor
sarb
pushf
das
push
aaa
xchg
fdivs
lret
enter
add
popf
xchg
push
xchg
pop
movsb
cmp
icebp
lcall
inc
xor
jp
lahf
andb
hlt
dec
test
add
mov
out
aas
dec
push
fstpl
push
insb
test
movsb
sti
loope
scas
xchg
ljmp
jl
add
jno
xor
pop
jne
les
mov
das
repnz
lods
jno
stos
mov
inc
mov
dec
sub
mov
jl
sub
sub
sub
jle
mov
add
lds
pop
leave
xchg
out
cwtl
push
adc
pop
xchg
or
ret
jno
in
mov
adc
movsl
dec
mov
outsb
xchg
outsl
sub
rolb
popl
fistpll
jmp
aas
or
out
nop
cmp
test
jl
loopne
push
cs
xchg
push
pop
aam
pop
and
add
jge
push
mov
xchg
sbb
mov
mov
cs
dec
lock
inc
xor
mov
add
jmp
pop
inc
or
icebp
pop
popf
xchg
movsl
add
mov
mov
in
push
jns
mov
test
xchg
xchg
jns
push
mov
lret
loopne
ds
mov
fisttps
pushf
hlt
sahf
pop
data16
sti
mov
sub
aaa
std
mov
out
pushf
dec
xchg
lahf
in
push
sbbl
arpl
mov
addb
fildl
xchg
jmp
into
jmp
imul
jmpw
test
cmpsl
cmc
lds
add
pop
js
sub
sti
pop
mov
xlat
and
shll
pop
stc
sbb
popf
mov
sbb
pop
aam
xchg
jp
jl
lock
xor
sti
movsl
or
pop
push
test
mov
xchg
inc
lret
pop
mov
lea
fdivl
add
cmp
xchg
in
fldl
movl
fmuls
or
inc
in
jae
sbb
mov
loope
sub
aaa
sub
push
mov
andl
push
popa
jbe
mov
pop
push
and
out
das
inc
outsl
das
cmp
icebp
fbld
es
rolb
pop
push
ljmp
loopne
mov
cli
ds
dec
sbb
nop
push
rcll
push
jnp
popf
jmp
jns
stos
les
repnz
adc
loopne
adc
mov
cmp
mov
pop
sarl
sub
xchg
fsubrl
rclb
leave
popa
pop
sarl
das
add
outsb
and
jp
dec
mov
sub
mov
mov
cmp
movsl
rcrl
sbb
push
mov
xchg
fadds
popf
les
aad
pop
pop
dec
rorb
xchg
jg
js
or
push
cltd
inc
or
push
pop
push
pusha
fidivrl
and
loop
cld
bound
xchg
aaa
mov
icebp
sbb
enter
scas
out
mov
dec
dec
xchg
push
mov
mov
sti
jnp
fisubl
adc
sub
mov
sbb
push
out
das
push
xor
inc
cwtl
test
cmp
and
insl
or
mov
clc
xor
popf
xchg
pop
jmp
sbb
movsb
jae
outsl
add
call
lcall
test
mov
xchg
stc
fidivl
fldt
sub
divl
pop
pop
pop
xor
push
lods
stos
pop
pop
and
outsb
mov
je
daa
loope
xlat
xchg
pop
aas
cmp
and
fwait
mov
testl
dec
add
inc
add
mov
shrb
push
dec
mov
add
push
aad
adc
test
imul
pop
in
xorl
and
jp
pop
sub
push
sub
push
pushf
jne
into
stos
dec
or
xor
dec
xchg
xor
inc
cli
outsb
aam
xor
xchg
cmpsl
stc
jge
scas
adc
xchg
pop
xchg
fadds
int
sub
scas
add
mov
idiv
xchg
jle
lods
test
mov
mov
adc
mov
std
mov
sub
sub
aas
push
test
lea
mov
jbe
pop
mov
sti
xor
mov
dec
inc
xchg
hlt
jp
adcb
addl
cltd
cltd
jp
mov
loope
out
xchg
fildll
scas
xor
sub
aad
inc
adc
je
pop
fs
mov
lret
push
imul
cld
dec
sub
sbb
roll
mov
push
mov
mov
lea
mov
or
xchg
mov
adc
pusha
pop
lea
or
pop
mov
pop
daa
adc
lret
jne
out
jmp
ret
jo
mov
dec
in
xor
inc
int3
push
mov
scas
les
xor
push
push
out
jno
mov
sub
adc
inc
rcr
mov
push
and
mov
xchg
inc
sub
fsubl
orb
xchg
cmpsb
xlat
jno
jnp
lret
push
std
cmp
push
adc
and
and
sub
gs
xchg
mov
cwtl
dec
icebp
out
in
ds
ljmp
int3
jecxz
cmp
movsb
sub
stos
fwait
aad
xor
icebp
clc
sti
push
xchg
std
test
sub
jno
dec
and
in
pop
lret
sub
dec
out
sarb
sbb
xor
in
dec
sbb
rcrb
stos
rep
pop
cmp
adc
ret
xlat
ljmp
sub
gs
adc
outsl
xchg
mov
pop
cmpl
gs
pushf
and
insb
ja
shrb
or
mov
out
lcall
int
mov
xor
je
dec
sbb
xor
xchg
sbbb
cmp
jo
inc
nop
lea
mov
aaa
orl
jns
or
lret
lcall
dec
push
int3
test
ja
adc
add
inc
push
fidivs
jnp
test
jno
ret
xor
out
enterw
rcrb
pop
push
pop
xor
or
fildll
jg
call
daa
cmc
fwait
push
in
in
and
adc
stc
mov
or
aaa
mov
xor
mov
jp
lea
lock
movb
pop
rcr
jb
mov
inc
out
mov
imull
push
outsb
mov
ljmp
test
mov
xchg
push
cmp
iret
xchg
cmp
aam
push
xchg
dec
movsl
add
ret
push
jge
out
add
xchg
aaa
adc
xchg
out
xor
push
mov
xchg
mov
push
or
loopne
xchg
fwait
sahf
sub
xchg
push
in
mov
jle
lea
cmp
push
aas
jb
pusha
ret
lea
mov
loopne
sbb
sub
pushf
outsb
mov
add
lds
es
shlb
push
inc
nop
mov
shll
adc
mov
fwait
mov
adc
sahf
aad
xchg
mov
cs
fmuls
lds
stos
cmpsl
out
inc
sbbb
jnp
jg
icebp
shrb
adc
jae
popa
test
cmpsb
jecxz
cwtl
cli
xor
push
clc
stc
loope
lret
and
add
sbb
jmp
push
repz
or
xchg
jmp
ljmp
lret
test
fnstsw
fistps
dec
adc
cltd
push
fsubrp
pop
jge
and
cs
fimuls
dec
lods
shll
ret
stos
xor
or
dec
cmp
mov
int
xchg
repz
bound
add
dec
mov
cli
fadds
cltd
test
push
fucomi
fwait
sbb
push
inc
daa
insb
test
scas
enter
rorl
call
sbb
fwait
in
data16
xor
mov
mov
mov
cmp
fimuls
test
pop
xor
popa
lock
mov
mov
repz
mov
mov
add
sbb
pop
or
mov
lret
sbb
jb
jle
lret
test
xorb
rol
enter
add
and
movsb
sbb
add
add
sbb
cltd
scas
les
dec
frstor
mov
jle
mov
lock
mov
cmpl
movsb
sub
pop
cmpsb
mov
push
xor
pop
aaa
sub
push
pop
and
push
lds
sub
mov
pop
lock
fadd
and
fst
sub
mov
mov
xchg
lods
push
out
nop
pop
push
push
out
and
jnp
std
enter
push
movsb
mov
sub
mov
js
or
pop
aad
test
pop
mov
pop
out
xchg
dec
mov
inc
xor
aas
and
lock
pop
or
sub
decb
jne
aam
jecxz
push
cli
cmp
lods
mov
xchg
mov
xchg
div
daa
sbb
mov
loope
xlat
add
mov
leave
pop
dec
scas
adc
cmp
ficomps
arpl
adc
push
xor
push
imul
push
sti
inc
int3
lods
sbb
lock
mov
ret
mov
stos
pop
xor
mov
cmp
dec
daa
out
mov
lods
or
roll
push
addr16
rcrl
stc
push
ret
mov
loope
lods
mov
adc
mov
mov
xchg
sahf
shl
dec
jae
test
xchg
mov
sbb
sub
test
pushf
cltd
loopne
mov
pop
test
push
xor
test
ss
adc
mov
jno
scas
add
pop
xor
sbb
and
mov
lods
sbb
inc
insl
popa
xchg
mov
in
sbb
cwtl
cmp
adc
fs
inc
jb
shll
sub
test
add
add
dec
and
idivb
mov
rol
jmp
stos
inc
sbbl
mov
ret
ss
rcl
cwtl
std
out
add
call
jecxz
scas
mov
jmp
push
test
adc
test
adc
xchg
dec
das
rcll
jp
pop
out
cmpsl
jno
lds
xchg
inc
mov
push
cmp
addb
pop
outsl
cld
xchg
sahf
sbb
jecxz
lahf
std
cmp
add
arpl
das
or
mov
insb
aad
pop
pop
add
push
dec
mov
scas
cmp
mov
repnz
xor
cmpsl
outsl
sbb
jno
enter
testl
out
cmp
inc
adc
jbe
lock
imul
sbb
aam
and
mov
shlb
inc
leave
ja
mov
xchg
adc
adc
mov
fisubrs
stos
out
add
std
clc
sbb
adc
jae
mov
dec
cmpsl
push
into
sbbl
or
mov
jnp
push
scas
push
push
lret
add
rcl
movsb
loop
xchg
xchg
lds
jnp
cltd
inc
arpl
fwait
hlt
movsb
xor
mov
mov
int
mov
outsl
fsubs
sub
cltd
push
fsubr
ret
mov
jno
lret
or
cld
punpckldq
xchg
add
data16
cli
jo
loopne
popf
ret
adc
add
push
adc
cltd
pushf
outsw
pop
mov
push
fldl
addr16
outsb
sbb
cwtl
pushf
mov
sbb
sbb
ret
aad
inc
movsl
jnp
dec
and
adc
xor
mov
mov
into
cmp
cmpsl
mov
js
aam
call
nop
xor
cmpsb
push
les
cmc
pop
xchg
cmpsb
cs
fs
mov
xlat
mov
sbb
in
sub
leave
jmp
nop
test
mov
test
nop
push
rclb
jns
xor
jp
add
xchg
pop
sbb
mov
or
cmp
dec
stos
sahf
mov
frstor
jmp
je
and
xor
fimuls
cmp
push
arpl
incl
insb
loope
stos
xchg
and
dec
push
insl
pop
stos
je
in
in
gs
and
in
in
add
pop
test
cmp
mov
sub
inc
push
dec
push
cli
sub
inc
aaa
jb
in
cs
hlt
pushl
loope
mov
lret
push
std
into
ljmp
rcrl
loope
xchg
insb
push
add
popf
sbb
je
push
rcrb
xor
je
add
data16
pop
lret
adc
repz
pop
sbb
pop
mov
mov
jge
and
pop
sbb
push
xor
dec
ds
jbe
jno
ja
adc
xor
fnstenv
sti
bound
das
jmp
jle
mov
jo
shrl
mov
stos
mov
insb
sbb
out
std
repz
ds
loop
and
scas
ret
add
xchg
push
xor
dec
dec
push
push
push
xchg
stos
mov
pop
enter
nop
pop
push
cld
lea
mull
jl
das
ds
pop
stc
and
sahf
popa
stc
insl
imul
hlt
jge
fwait
inc
push
pop
test
icebp
and
cmp
sub
insl
pop
jle
icebp
adc
ret
sbb
push
add
and
sbb
das
xchg
inc
push
negb
mov
sub
jns
jno
lds
outsl
imul
cmc
cmovno
lods
jle
minps
sahf
fsts
xchg
movsb
and
mov
jmp
or
inc
in
push
lret
dec
movsl
xor
jecxz
dec
dec
inc
vsqrtpd
cmp
ret
and
mov
ret
arpl
jg
movsb
adc
dec
pop
testl
lret
jns
out
test
sbb
fldt
mov
cmpsb
mov
pushf
dec
ret
fists
arpl
sbb
push
addr16
sbb
jge
inc
jno
sub
ds
aaa
lahf
xstore-rng
cmpsl
inc
fldenv
sbb
sahf
mov
jo
push
sub
testl
xor
daa
or
pop
jbe
sub
jno
push
dec
inc
mov
cwtl
inc
push
data16
jle
lahf
jp
ja
mov
outsl
js
push
cmc
mov
fwait
outsb
fwait
sahf
js
cli
adc
push
pop
out
mov
xor
mov
shll
idivb
xchg
inc
aas
shl
push
adc
mov
mov
rolb
cmpsb
and
pop
jmp
jo
leave
jl
lea
imul
sub
rorl
sub
cmp
jl
add
inc
sahf
aaa
and
pop
fstpt
cmpsb
sbb
lcall
outsb
push
js
xchg
and
sbb
push
mov
fcmovnbe
jb
xchg
jecxz
pop
adc
test
test
je
outsl
and
jb
mov
xor
sar
mov
jl
call
inc
sub
enter
lret
mov
xchg
adc
push
mov
dec
sbb
aas
dec
rcrl
mov
mov
add
fimuls
mov
cmp
xchg
das
cmp
mov
xchg
lock
or
cmp
push
push
mov
mov
dec
out
fwait
or
push
jmp
dec
stc
imul
dec
mov
pushl
push
sub
aaa
inc
je
fwait
sbb
pop
fcmove
lds
in
sub
push
or
cmp
pop
pop
inc
decl
std
cmp
adc
stos
mov
mov
mov
jbe
adc
jecxz
fxch
and
test
push
arpl
ds
in
mov
movsl
mov
mov
pop
or
insb
scas
push
xor
jo
sub
xchg
jg
cmc
mov
stos
inc
push
inc
cmc
test
test
pop
outsl
add
push
cmp
sbb
pusha
push
ret
imul
aam
jb
js
mov
cmp
cmp
movsl
inc
mov
ds
enter
movsb
cmp
insl
rcr
shlb
dec
out
mov
imul
int3
xor
mov
push
mov
or
roll
mov
adc
sbb
test
enter
jns
inc
pop
leave
add
xor
xchg
or
inc
fwait
aas
aas
loope
jg
xchg
sub
out
dec
subb
push
movsb
add
sub
cmpsb
push
sbb
outsl
push
add
out
jmp
dec
stos
call
inc
imul
shl
std
outsb
cwtl
add
and
out
adc
pop
lahf
xor
pop
lcall
add
jle
ss
mov
vrsqrtps
mov
cmp
je
jb
and
or
fsubr
outsl
mov
cld
imul
mov
mov
xchg
cmp
fmull
push
test
movsb
dec
inc
xchg
les
pop
je
imul
movsb
push
aas
shrl
mov
fwait
xorl
mov
xor
cmp
scas
adc
fs
push
data16
sub
sub
add
cmp
mov
and
sahf
xor
add
sbb
mov
or
loop
ficompl
incb
int3
jmp
clc
or
dec
lahf
push
cmp
das
pop
add
rol
lods
data16
scas
adc
jbe
jp
popf
pop
add
leave
jb
lea
pop
dec
push
push
mov
outsb
stos
jne
add
inc
repnz
lods
pushf
shrb
jne
or
xchg
clc
xlat
lods
mov
jg
sbb
mov
mov
gs
and
out
pop
cld
cmp
pusha
push
subl
cmp
mov
out
pop
insl
pushf
ret
test
fcmovnu
outsb
jmp
cltd
out
mov
cmp
or
and
push
mov
sub
pop
cmp
mov
mov
jo
sbb
or
iret
xchg
sub
pusha
mov
lret
in
mov
cld
fimull
mov
iret
adc
push
pop
ret
ret
in
nop
leave
nop
pop
adc
xchg
cli
mov
out
jmp
stos
pusha
loope
pop
sub
pop
in
jae
fwait
mov
cltd
inc
push
pop
xchg
insl
xor
or
sbb
xor
dec
jnp
sbb
or
bound
jl
add
push
cli
add
pop
pop
jne
rorl
aam
pop
add
pusha
inc
iret
inc
pop
jno
mov
cmpsl
pop
loopne
inc
cld
xchg
das
pop
jecxz
jno
inc
cmp
dec
xchg
in
cmp
cwtl
add
les
sbb
xor
push
sbb
sbbb
enter
push
mov
testb
loope
jne
mull
push
sti
addr16
inc
and
mov
jbe
cmp
imul
call
in
cmp
lods
cmp
dec
or
imul
mov
cmp
mov
mov
ret
and
mov
shrb
xchg
mov
cmc
repnz
loope
ret
pop
faddl
adc
loopne
outsl
push
mov
xor
pop
sti
mov
pop
ljmp
jo
lret
jno
xor
mov
dec
iret
imul
imul
mov
arpl
cs
mov
addr16
and
je
scas
jg
cmp
jge
aad
jg
mov
lea
mov
ljmp
inc
sbb
jle
pop
sub
test
xchg
adc
sbb
jecxz
push
adc
xchg
test
int
jg
sbb
aaa
push
int3
arpl
je
gs
shl
inc
or
cld
push
enter
mov
or
pop
imul
test
out
cwtl
test
inc
sub
sub
cmp
xchg
or
xchg
mov
call
jo
ficomps
add
test
mov
sbb
sbb
cmc
cmp
mov
imulb
scas
adc
lahf
rcrl
add
xchg
loope
push
pop
jecxz
arpl
dec
push
aam
mov
sti
and
inc
repnz
mov
test
xor
dec
push
lahf
cmp
imul
sub
and
push
jb
adc
lea
pop
inc
mov
and
fldcw
cmp
sbb
gs
movsl
adc
int3
jecxz
mov
rclb
pushf
pusha
icebp
mov
in
cmp
aas
sub
fildll
andb
repnz
cmp
test
ds
shlb
sub
dec
sbb
sbb
push
outsl
push
adc
and
popa
xor
dec
cmp
xchg
dec
dec
daa
out
negl
fiaddl
push
and
inc
push
divb
cmp
sbb
rclb
lods
hlt
inc
call
hlt
and
stos
int
cmc
mov
push
cmp
adc
mov
pop
sti
fcmove
mov
pop
out
cli
nop
xchg
icebp
xor
jle,pn
mov
adc
xchg
mov
cli
push
sub
shl
sbb
test
mov
fistpll
out
imul
or
sti
loop
sub
aam
mov
sahf
and
mov
sbb
jbe
es
test
or
mov
pop
sub
sbb
mov
push
arpl
xor
sbb
mov
das
repz
popa
mov
aaa
pop
outsb
das
adc
mov
inc
sub
pop
mov
pop
je
fidivrl
popf
out
dec
mov
test
mov
mov
fnstcw
inc
jne
add
mov
xchg
mov
fidivs
push
jno
ficoms
lea
pop
push
jecxz
scas
adc
sub
mov
jbe
push
ficompl
in
popa
sbb
xor
push
leave
mov
push
stc
cmp
dec
outsl
sub
jnp
test
shrb
xchg
pushf
mov
or
sbb
inc
insb
cld
stos
sbb
add
xchg
or
sbb
pxor
mov
dec
test
ficompl
decl
cwtl
mov
push
inc
fdivrl
xor
loop
sub
push
and
jmp
cli
jg
out
jo
xchg
bswap
icebp
jmp
aaa
gs
cmp
mov
shll
bound
ja
scas
roll
mov
fs
xchg
or
jbe
out
mov
mov
mov
sbb
int
fwait
jne
adc
pop
pop
aad
jle
mov
inc
pop
mov
aas
testl
dec
push
inc
scas
dec
mov
mov
ret
popa
mov
orl
cli
push
lahf
push
lret
mov
jge
xchg
test
mov
psrld
push
mov
inc
inc
sbb
sub
pop
jne
sub
dec
push
adc
loope
push
repnz
lret
or
lcall
push
bound
sub
adc
in
xchg
cltd
sbb
icebp
adc
rorl
mov
or
popf
xor
in
imul
sub
push
push
push
push
push
scas
adc
out
rclb
inc
scas
push
inc
outsl
jmp
out
test
popa
ret
test
mov
sub
xchg
out
ror
push
sub
pop
and
test
and
lods
jle
or
jg
sbb
mov
mov
cmp
sbb
shlb
dec
fldt
push
outsb
lret
stos
mov
push
cmpsb
cs
xchg
inc
lea
outsb
dec
stos
and
ds
cmc
mov
cmp
insl
daa
pop
push
out
mov
aad
scas
test
rcrl
sbb
inc
rcrb
pop
and
shrl
adc
cmp
jle
xchg
cmp
mov
sbb
inc
push
loopne
xchg
stc
roll
les
cmp
fs
stos
fs
in
js
mov
pop
idivb
fcmovnb
mov
xchg
das
xchg
cs
jg
lock
je
xor
xchg
les
out
and
push
popa
rclb
cmc
fstps
into
jle
dec
test
pop
push
in
movsl
jg
mov
xor
fs
nop
loope
stos
fldl
mov
insb
mov
movsl
hlt
cltd
cld
ljmp
addb
and
fstpt
push
mov
jg
adc
cmp
call
inc
lds
xchg
stc
or
lds
and
push
and
fldt
test
inc
insl
sbbl
fsubrs
fidivs
adc
and
movsb
mov
pushf
aas
mov
pop
push
xchg
jge,pt
ja
cld
dec
or
fisttpl
push
xlat
test
lahf
jno
and
in
sbb
dec
push
jge
mov
inc
inc
pop
lds
xor
cwtl
add
or
inc
push
enter
mov
xchg
mov
into
xchg
pop
rorl
pop
dec
adc
adc
js
fstpt
arpl
add
lock
cmpsl
add
rclb
mov
int
je
inc
test
loop
mov
xchg
xor
mov
mov
mov
aad
data16
pop
push
push
rorl
xchg
jp
cmp
dec
cwtl
lock
cmp
cmp
adc
stc
mov
sbb
jmp
add
mov
and
sub
inc
push
sbb
pop
mov
push
pop
lods
fcoms
xchg
and
sub
in
push
pop
test
add
mov
and
and
mov
jne
fldt
jmp
xchg
mov
scas
out
or
outsl
fsubrp
cmp
dec
sbb
rolb
push
and
push
nop
cld
mov
xchg
stc
popa
push
iret
jbe
popf
jb
notl
and
sub
mov
and
in
inc
insb
stc
fwait
mov
or
jmp
mov
enter
pop
push
mov
sbb
icebp
adc
int3
mov
test
jb
xchg
inc
sub
ds
inc
jge
sub
std
xchg
jae
mov
and
sub
jbe
lea
call
add
inc
mov
jns
test
dec
mov
xor
enter
lea
sub
out
std
hlt
xchg
xchg
sub
cmp
mov
mov
in
or
sbb
movsl
sub
jl
je
gs
in
bound
out
jl
imul
leave
fstp
rorl
xor
mov
ds
stos
cmp
add
and
sbb
sbb
xchg
add
or
clc
jg
mov
dec
push
cmp
rcl
popa
mov
stos
fsubp
dec
xlat
xor
subb
add
push
inc
and
push
dec
or
cmc
pop
mov
outsb
jnp
dec
add
sbb
add
lds
mov
movsb
mov
lods
push
dec
psubusw
in
push
jns
imul
mov
push
mov
sbb
mov
xchg
inc
sub
shrl
jle
push
lds
mov
stc
leave
mov
adc
dec
bound
movsb
in
loope
or
outsb
ret
cmpsb
pop
adc
mov
cmc
mov
scas
insl
push
aas
jb
inc
das
rclb
sahf
stc
shl
xchg
pop
pop
inc
sahf
pop
bound
cmp
cmp
mov
daa
cwtl
rorl
dec
add
cmp
or
les
mov
pop
cmpsl
scas
mov
into
js
popf
push
popf
push
lahf
or
adc
and
adc
cmp
lods
andb
loopne
fildl
lods
jae
xlat
sbb
cltd
lret
in
rcl
ficomps
dec
push
mov
and
sub
adc
sbb
leave
clc
pop
int
mov
and
cmp
push
cmp
lea
in
or
fidivs
bound
push
jl
push
jecxz
lds
out
jle
pop
or
cmp
ss
aam
inc
mov
leave
push
lods
push
imul
mov
sbb
movsb
xlat
push
adc
gs
testb
icebp
lock
adc
mul
nop
mov
jnp
lea
cmp
jmp
sub
mov
fdivs
fmuls
idivl
mull
mov
movsl
adc
les
xchg
shll
fstpt
sarb
jno
xor
cmp
outsl
lcall
in
stos
jl
jl
sub
lods
xchg
jecxz
or
test
je
int3
mov
mov
sbb
fiaddl
cltd
jmp
in
inc
mov
ds
sub
mov
lods
stc
jbe
mov
pop
or
shrl
dec
jb
jb
in
mov
jbe
scas
pop
lock
gs
sti
cmp
xchg
out
out
fldcw
cltd
add
cmp
aas
jne
push
adc
fistl
jo
push
inc
movsl
pop
stc
fistl
push
ja
cld
syscall
mov
xchg
push
pop
or
fs
mov
pop
push
xor
inc
xchg
adc
call
scas
sbb
push
mov
ja
mov
lock
cmc
adc
sbb
mov
or
xchg
lahf
cmp
pop
push
outsb
sbb
push
and
mov
xchg
gs
xchg
inc
cmp
push
mov
mov
hlt
lret
movsl
outsl
stos
jp
jecxz
xor
int
lret
pop
pusha
mov
stos
imul
push
jno
mov
aaa
ds
jl
stos
pop
sbb
push
addr16
shrb
jecxz
jg
pusha
xchg
sub
lret
inc
in
inc
scas
xchg
xchg
lock
mov
sub
cmp
dec
pop
lds
add
pop
push
sbb
in
data16
lret
dec
xor
push
daa
inc
mov
inc
mov
dec
in
jne
jmp
clc
dec
bound
pop
mov
arpl
sahf
imul
inc
mov
inc
test
test
adc
in
cmp
rcrb
mov
push
xor
push
mov
outsl
mov
movsl
enter
jmp
mov
insl
ficompl
sub
push
or
shlw
mov
aas
into
adc
cli
jl
sub
cli
add
xchg
adc
je
nop
jb
ja
stc
jns
rorl
add
and
push
je,pt
scas
cltd
inc
adc
fwait
ds
stos
xor
adc
enter
sub
mov
seto
rcrl
push
sub
jecxz
dec
idivb
lock
dec
test
xchg
or
mov
out
fisubrl
mov
mov
add
jno
push
or
outsl
lret
pop
mov
adc
test
mov
fstps
mov
mov
cmc
rcrl
loopne
jmp
imul
add
hlt
pop
mov
sub
in
daa
xorl
jns
and
jecxz
cmp
jecxz
xor
imulb
fbstp
cli
mov
push
mov
out
dec
xor
pop
shl
push
ret
add
pop
push
add
lods
test
mov
jmp
test
cmpsl
mov
stos
xchg
stc
push
rcl
xor
out
loope
int
int
pop
cmc
and
pop
jnp
and
jge
pop
inc
popa
clc
loopne
dec
pop
mov
int3
push
mov
dec
dec
insl
inc
stos
aas
ds
cmp
ljmp
mov
xor
adc
mull
dec
mov
jg
daa
jb
ret
cmc
mov
mov
addr16
mov
std
mov
lret
clc
cs
fucom
push
jb
xchg
sub
sub
xor
mov
xchg
mulb
shll
push
in
test
cmp
stc
push
dec
cmp
leave
and
fcomps
or
cmp
jecxz
cmpsb
inc
mov
lock
and
push
test
xor
das
jne
add
mov
mov
negb
scas
and
fucomp
push
lcall
daa
add
xchg
add
fstpl
lods
daa
mov
adc
jno
xchg
js
jno
arpl
adc
imul
jbe
mov
idiv
push
sub
jmp
jmp
arpl
dec
in
fidivrl
imul
cmp
xchg
adc
xchg
cli
push
add
popa
and
xor
xchg
daa
xor
push
lea
jb
popa
lret
push
clc
aad
les
jge
out
mov
lcall
push
cmp
ret
cli
xor
jo
in
outsb
aaa
loop
sbb
fcmovb
add
push
cmp
ss
call
mov
stc
push
mov
stc
mov
js
or
jbe
adcb
out
xor
test
adc
cmp
faddl
rorl
sarl
and
xchg
fsubr
popf
fucom
inc
xor
pop
dec
xchg
cmp
and
pop
jae
repz
adc
inc
sbb
push
xor
push
ja
or
lcall
pop
mov
push
in
inc
inc
pusha
ljmp
xor
push
xor
and
stos
aas
repz
lods
adc
imul
rorl
lahf
in
adc
and
lret
mov
push
pusha
rcrb
adc
cmpsb
xor
popa
sbb
push
pop
mull
adc
call
pop
movsb
les
cmpsb
xor
mov
negb
test
mov
add
ret
xchg
lock
pop
gs
jle
jnp
mov
jb
push
and
imul
cmc
and
xlat
out
pop
push
imul
push
mov
jmp
repnz
shll
addb
mov
add
fcomp
int3
dec
or
enter
dec
shll
jne
and
jmp
sbb
jb
mov
xor
jp
sbb
sub
cmp
sub
aaa
popf
mov
mov
addl
jecxz
inc
lret
ret
inc
fnstenv
test
cltd
sub
xor
notl
ret
push
or
ret
sahf
jecxz
dec
lahf
test
mov
add
in
adc
clc
and
mov
jnp
cmp
jnp
push
inc
in
push
pop
push
pop
push
jecxz,pn
sbb
enter
jae
popa
pushf
aam
jb
pop
test
jo
xchg
lea
nop
jmp
mov
leave
cwtl
enter
rorb
push
pop
sbb
fs
test
insl
push
mov
push
enter
mov
ret
add
mov
push
arpl
cmp
lahf
imul
add
add
sti
daa
inc
enter
add
cmp
in
dec
rorl
push
jbe
imul
es
and
scas
and
adc
lcall
jbe
divb
movsl
adc
xor
rcrb
sub
add
ja
shlb
scas
cld
jnp
out
movsl
pop
shl
add
jmp
out
lret
leave
sub
mov
out
in
inc
std
push
sub
fistpl
cmp
hlt
xor
loop
inc
pop
inc
adc
jnp
pusha
nop
jnp
call
stos
xchg
scas
rcrb
imul
dec
addb
and
pop
and
jmp
adc
imull
repz
mov
daa
cmpsb
fdivp
sub
ret
inc
mov
test
mov
shll
mov
ficomps
sub
pop
mov
jp
or
sub
movsl
movsb
out
sub
fcomi
rcll
add
pop
mov
call
push
or
xchg
arpl
das
add
lcall
cs
stos
push
pop
inc
repz
mov
mov
test
xchg
popf
fnsave
inc
lods
insb
inc
jmp
push
in
idiv
inc
aas
adc
xlat
jnp
and
jecxz
test
lock
fwait
jp
sahf
stc
scas
xorl
ja
mov
in
fadds
mov
xor
mov
mov
pop
dec
sbb
and
adc
inc
fisubrl
imul
inc
aaa
clc
test
adc
add
lds
add
ret
mov
pushf
inc
lock
rolb
nop
pop
adc
sub
int
cs
sbb
lock
jp
leave
lea
mov
add
jmp
inc
lods
inc
scas
mov
adc
pop
int3
cmp
push
ret
cltd
movsl
and
mov
aas
push
xor
test
inc
pop
and
xchg
adc
inc
sub
icebp
rolb
bound
pop
stos
insl
sub
xor
aas
data16
pop
pop
and
pop
clc
and
test
cmp
push
jb
rcrb
mov
lods
jg
push
mov
dec
push
subl
sbb
test
add
add
rcll
and
mov
adc
ret
inc
shr
cli
sahf
cmp
inc
jecxz
in
sbb
xchg
xor
or
ja
add
out
xchg
pop
fwait
jo
les
in
mov
filds
add
cmpsl
shll
dec
popfw
icebp
fistps
fcmovnu
lea
cmp
jecxz
or
lods
sbb
bound
add
fbstp
add
loope
clc
xchg
dec
stos
sbb
leave
cltd
out
jno
enter
lret
cmpsl
into
pop
mov
push
mov
or
enter
xchg
pandn
nop
or
xor
addr16
sbb
arpl
jp
adc
sub
xor
xor
xchg
pop
mov
notb
stos
js
pop
lcall
lds
jp
or
fldt
mov
aad
loop
jnp
cmp
addr16
pop
orb
lcall
pop
das
fstpl
stc
sub
test
cs
popa
push
ljmp
xchg
lahf
ret
xchg
and
rcr
out
mov
jb
popa
lret
push
mov
imul
cmp
out
fcomps
rclb
pop
testb
out
arpl
fists
inc
movsl
or
push
adc
ret
cld
out
jmp
jne
js
lret
jmp
ds
sub
idiv
mov
pop
loop
pop
sub
mov
adc
lret
xchg
cmp
pop
sbb
inc
movsl
and
push
pop
xor
stos
hlt
stc
xchg
cmp
movsb
gs
jge
xor
mov
sub
inc
mov
lock
outsl
seto
xor
das
fwait
add
ljmp
jecxz
js
dec
popf
lds
pop
push
sarb
int3
test
lcall
pop
test
stos
xchg
pop
shll
mov
divl
add
fldenv
rol
rorb
push
fisubs
pushf
lock
arpl
xlat
xchg
inc
dec
nop
les
popa
enter
and
cmpsb
mov
arpl
lret
sub
shr
sbb
xchg
cs
dec
jb
xor
adc
mov
dec
loop
scas
ret
scas
mov
push
jbe
hlt
lcall
sub
scas
in
push
mov
sub
xor
mov
jp
lahf
mov
daa
and
or
lock
fisttps
mov
adc
adc
imul
jl
or
mov
stc
adc
mov
xor
jne
ret
sahf
mov
mov
inc
xchg
adc
jge
arpl
cwtl
sbb
rcl
mov
xor
push
dec
or
mov
sub
out
test
or
rclb
hlt
in
ftst
aaa
pinsrw
ljmp
imul
ret
dec
fdiv
stc
rolb
fdiv
addl
js
xor
add
mov
popa
movsl
push
out
repnz
cmpsb
fisubl
xor
loop
pop
movsb
mov
xchg
push
loop
mov
imul
and
aaa
out
sub
imul
mov
push
pop
sbb
loopne
fdivrl
outsl
pushf
pop
mov
add
mov
adc
nop
mov
or
jae
push
and
jle
pop
popa
inc
mov
or
mov
stc
nop
push
cmp
adc
xor
popa
dec
cmc
sub
cli
xor
imul
jb
cwtl
fnstsw
mov
adc
jbe
scas
ljmp
xor
loopne
sbb
jge
mov
aas
dec
sbb
aam
test
dec
inc
push
int
and
in
mov
and
add
inc
int
pop
clc
scas
dec
out
aam
and
mov
dec
jecxz
loopne
inc
inc
fadd
loop
lcall
add
and
xor
insl
pop
nop
mov
sub
adc
ror
shrl
xor
inc
xchg
pop
sbb
xchg
ljmp
xchg
lods
jno
popf
push
mov
or
xor
idivl
sarb
or
js
and
rolb
jae
adc
push
mov
or
xchg
shl
test
out
dec
xchg
cmp
lock
and
lods
stos
dec
push
mov
fsubs
les
add
fs
mov
adc
add
stos
add
in
addr16
add
lahf
mov
inc
lock
adcl
inc
loop
adcl
dec
outsl
outsb
ret
cwtl
cmpl
jp
andl
pop
xor
repz
pop
dec
test
hlt
xor
sub
dec
hlt
lds
dec
scas
sub
ljmp
mov
cmp
sub
jg
jno
jle
clc
cmp
out
inc
repz
xchg
aam
cli
or
in
inc
xlat
cmp
mov
movsb
sahf
sbb
dec
out
clc
outsb
enter
mov
popa
add
cmp
fsubl
and
clc
test
mov
mov
mov
ljmp
rclb
xchg
imul
dec
jle
mov
cwtl
inc
out
ljmp
fs
clc
mov
ja
fidivrl
inc
dec
js
and
or
push
xlat
jbe
sbb
jno
ret
lods
cmpsl
nop
cmp
loopne
in
ret
mov
nop
dec
stos
add
into
je
jno
inc
push
cltd
ret
test
xor
sbbb
sbb
popa
jmp
xor
dec
aad
hlt
sbb
repz
cmp
out
ljmp
je
xor
inc
add
and
ss
testl
imul
mov
sub
cmp
pop
xchg
add
pop
stos
sbbb
shll
or
in
out
mov
rcll
mov
mov
push
ret
mov
inc
push
xor
dec
hlt
popa
push
ficoml
xor
mov
insb
dec
mov
into
jb
mov
rclb
pushf
loopne
push
insl
inc
sahf
call
test
push
or
mov
jo
mov
dec
dec
push
xor
pushf
pop
repnz
xchg
test
pop
xchg
xor
cltd
pop
loopne
sbb
jecxz
pop
mov
add
cld
xchg
pop
push
mov
popa
add
fsts
insl
ficoms
sahf
shll
sahf
adc
ja
outsl
mov
outsb
insb
adc
xchg
adc
lods
sub
out
lea
pop
or
adc
repz
and
je
pop
mov
call
gs
ljmp
data16
in
add
repz
adc
or
dec
lds
and
lods
cmp
cmpsl
loopne
sbb
inc
jb
or
ficomps
push
xorb
aaa
add
add
sahf
sbb
xchg
pop
enter
lock
jnp
mov
dec
push
lcall
ljmp
jp
jbe
mov
lods
inc
push
cwtl
aas
pop
pushl
xchg
gs
mov
xchg
je
add
test
mov
pushf
dec
lds
ret
scas
pop
dec
test
dec
or
xchg
xor
pop
cwtl
inc
xor
lahf
cmp
adc
add
adc
nop
loop
neg
sbb
adc
icebp
and
mov
lods
call
dec
aad
jo
outsb
add
rorl
stc
mov
adc
xor
jecxz
testl
out
dec
pop
in
jae
cmp
pop
jae
pop
jns
mov
test
xor
leave
pop
mov
es
lahf
roll
lret
ret
cmp
sbb
lret
cld
mov
dec
jmp
cmc
adc
pop
jecxz
nop
pop
daa
stos
fisubrs
jle
syscall
inc
mov
add
push
aam
jb
mov
add
or
and
sbb
mov
mov
jb
pop
sbb
jp
or
fildll
inc
pushf
daa
pop
sbb
and
jb
pop
mov
push
popa
mov
or
sbb
xchg
sbb
movsl
cmp
insb
movsb
aad
lcall
jle
repnz
data16
mov
stos
cmp
xor
jno
push
adc
pop
mov
xor
add
repz
mov
mov
mov
ret
jne
dec
stos
fucomp
cmp
dec
cmpsl
dec
or
adc
jo
and
loope
movsl
hlt
sbb
or
mov
and
xchg
xchg
xlat
mov
pop
mov
scas
mov
imul
xchg
sub
mov
movsb
test
inc
add
jnp
mov
or
mov
rorl
cmp
mov
and
test
addr16
loopne
fimuls
ret
adc
sub
xchg
scas
and
decb
push
jb
arpl
push
jae
cmc
fwait
es
loopne
cs
cmp
out
insl
mov
add
pop
out
pop
dec
adc
insb
or
sbb
mov
call
in
decb
adc
xor
jl
je
mov
or
pop
in
xor
jecxz
jno
add
xchg
arpl
inc
stc
out
jle
jbe
jbe
ljmp
mov
les
rcrb
shr
or
aam
mov
clc
jl
je
aad
pop
test
fs
adc
pop
dec
stos
ficoml
movsl
mov
mov
insb
sarl
int3
loop
and
mov
stos
divl
adc
into
sub
in
lahf
das
and
movsb
pushf
pop
test
push
fwait
jmp
test
and
sbb
mov
repz
inc
movsl
int3
clc
fs
cld
rorl
xor
imul
xor
loope
insb
dec
popa
daa
ss
fmuls
insl
je
mov
or
inc
mov
stos
aad
das
xor
xor
nop
out
cmp
loopne
movsb
stos
inc
ret
adc
jmp
xor
test
sub
xor
into
and
les
xchg
adc
xchg
dec
mov
jecxz
xchg
add
rolb
pop
filds
fmull
ficoml
mov
mov
mov
jns
or
js
rorb
out
in
jo
iret
mov
or
bound
or
add
jg
test
jne
insl
or
lea
cltd
call
jle
mov
push
pusha
lret
xchg
jg
push
mov
out
xchg
push
test
inc
mov
mov
inc
cmp
leave
mov
cmp
lock
popa
xchg
imul
mov
inc
scas
fbld
aam
icebp
int3
cltd
int
dec
or
inc
subb
rol
je
loope
pop
jl
ja
mov
dec
cmpsb
push
fnstenv
daa
mov
xchg
jns
mov
mov
pop
aaa
mov
mov
dec
testl
in
mov
push
add
push
xchg
xchg
add
xchg
pop
test
gs
cli
pushf
sub
aad
xchg
outsb
cs
xor
clc
mov
movsl
addl
pop
add
sub
out
push
adc
in
cmpsb
lds
adc
pop
dec
jmp
lods
xchg
arpl
dec
sub
jl
ret
leave
ret
pop
inc
lret
push
jl
sub
cli
dec
stc
scas
test
add
pop
lods
roll
test
mov
push
ljmp
into
push
push
push
int3
push
jmp
cmp
adc
xor
xlat
inc
into
cmp
nop
cmp
stos
xchg
sbb
ret
inc
sbb
xlat
js
mov
adc
pop
xlat
push
jo
lods
xor
outsl
mov
add
rcll
mov
cmp
cld
fwait
lret
lahf
stos
test
outsb
daa
nop
dec
test
jge
push
daa
icebp
mov
pop
int3
pop
shll
mov
xsaves
add
pop
mov
or
push
and
fisubrl
mov
jae
sub
or
or
sbbb
pop
cld
xchg
lods
jnp
testl
hlt
nop
dec
xor
sbb
push
jmp
pop
imul
push
gs
mov
test
or
jge
xchg
mov
ror
dec
cmp
daa
les
add
cmpsl
xchg
adc
cmpsb
or
jbe,pt
inc
and
xchg
cmp
pop
loopne
mov
nop
add
xchg
insl
and
ss
adc
dec
inc
js
jne
pop
out
loope
outsl
adc
xchg
mov
add
lods
sbb
fcoml
xor
jp
cmp
arpl
vpmadcswd
dec
xor
inc
xchg
jbe
push
inc
jbe
outsl
mov
dec
pop
cmpsl
add
cmc
xlat
push
dec
out
loopne
dec
fisubrl
push
and
pushf
leave
jo
xor
push
in
sbb
ss
sbb
mov
adc
mov
insl
pushf
nop
sbb
fsubl
mov
mov
cltd
sbb
orb
jp
push
stc
mov
ret
jmp
xor
repz
out
inc
mov
xor
std
push
xchg
lds
xlat
inc
xchg
mov
fwait
lock
or
push
dec
pop
mov
movsb
mov
rcrl
push
daa
cmpb
mov
insb
dec
jno
sbb
leave
adc
fdivp
ret
xchg
mov
faddl
test
or
imul
sub
mov
aam
lock
cmp
adc
lcall
dec
adc
int3
sarl
sbb
mov
dec
push
cmpsl
ss
out
sahf
xchg
xchg
repz
shrb
pushf
adc
xor
mov
jae,pn
pop
arpl
movq
gs
dec
sbb
jns
pusha
and
repnz
xchg
mov
stos
cmp
lock
popa
mov
into
jae
int
imul
mov
addr16
mov
stc
popf
adc
push
xchg
dec
or
and
push
mov
jle
repnz
scas
or
sti
scas
add
ss
add
cld
addr16
aaa
mov
cmpsb
pop
in
mov
popa
sbb
aas
decl
es
jmp
paddb
mov
mov
mov
dec
inc
adc
loopne
mov
and
pushf
xchg
mov
jne
bound
adc
rcrb
sbb
aam
adc
lods
rclb
stos
mov
jne
lock
aam
xlat
aad
jnp
pusha
or
out
push
mov
orb
mov
pop
push
in
pop
and
mov
add
or
add
leave
mov
fs
in
xor
mov
rorb
mov
sbb
push
cmc
sbb
inc
mov
push
mov
adc
ret
jbe
je
imul
ja
adc
jl
xchg
int3
inc
rol
push
testl
mov
aad
fsubs
cmpl
ljmp
mov
orl
loop
pop
push
sub
mov
out
lahf
arpl
gs
push
mov
nop
cli
enter
int
xchg
ret
sbbb
pusha
inc
lret
and
imul
or
mov
sbb
scas
fiaddl
test
insb
push
push
lock
jae
fisubrl
loopne
test
fstl
mov
pop
adc
leave
jge
sahf
mov
lods
sahf
addps
jae
nop
dec
dec
sbb
push
push
aas
arpl
cwtl
stc
push
xchg
mov
fdivrs
sbb
xchg
jge
test
mov
or
and
xchg
lods
xchg
cmpsl
ss
int
pop
add
imul
lods
fmull
lea
fidivs
push
add
dec
shlb
mov
ss
stos
jle
hlt
xor
and
mov
imull
lcall
push
xchg
andl
pop
jno
les
test
jbe
icebp
jno
cmp
cli
xor
and
add
decl
adc
fistps
enter
inc
mov
ret
push
jmp
sbb
imul
inc
adc
leave
call
icebp
loop
mov
dec
adc
pop
sub
cwtl
dec
std
stos
sbb
outsb
mov
fdivrl
sub
xchg
jno
ret
add
icebp
movsl
mov
cli
ja
je
sub
and
push
imul
mov
cmp
cmp
inc
orl
mov
loopne
rcl
aad
jns
insb
adc
cmc
das
xlat
mov
pop
lds
into
push
and
push
mov
sbb
jbe
out
js
xchg
pop
js
or
fcompl
iret
stc
mov
cmp
fiaddl
pop
sarl
jl
pop
pop
sub
add
push
out
iret
dec
mov
jecxz
push
gs
mov
outsl
loopne
dec
inc
mov
call
imul
test
dec
jns,pn
mov
stos
jl
cmpsb
push
inc
dec
outsl
lcall
pop
xchg
or
jne
inc
push
mov
sbb
adc
mov
and
cmpsb
push
mov
and
ja
insb
jp
mov
push
xchg
jl
cld
outsl
or
sub
cld
xchg
cmp
stos
cli
jns
sar
pop
cmp
xchg
xlat
fildll
jno
test
pop
inc
dec
mov
je
stc
ljmpw
mov
sbb
or
or
out
out
mov
or
fldt
xor
xorl
mov
lret
clc
cwtl
xchg
addl
loopne
sub
cmp
das
cmp
mov
or
adc
cld
xor
loop
jle
push
mov
pop
mov
adc
push
fabs
cmp
divl
pop
imul
xchg
push
pop
xchg
arpl
repz
mov
sbb
imul
je
jne
jle
outsl
sbb
aad
mov
pop
imul
push
lret
xchg
xor
cmp
pop
xchg
ret
lahf
fsubrs
cmp
xor
ret
enter
inc
mov
xchg
iret
lock
imul
es
es
incl
xchg
sub
ret
insl
push
test
int
inc
sub
pop
pop
push
fwait
mov
jp
or
addr16
mov
adc
push
sahf
fisubrl
jle
pop
mov
test
insb
lea
add
adc
xor
rcrl
jnp
inc
stc
xchg
mov
scas
std
pop
push
push
es
push
mov
lods
mov
leave
scas
jnp
out
fldpi
cmpsb
cmp
mov
jno
pusha
dec
fucomp
mov
cli
call
aam
push
or
lcall
inc
cli
dec
int
ljmp
pop
divl
dec
test
rcrl
mov
push
pusha
jg
lods
and
imul
dec
sti
js
dec
xor
pop
mov
fdivs
fimull
cmpsb
and
sti
adc
out
movsb
je
jl,pn
mov
xor
sahf
mov
js
loop
cltd
pop
fsubl
es
mov
sub
cmpl
stos
mov
inc
std
insl
and
lcall
xor
into
xchg
dec
jp
or
adc
sub
sbb
pushf
jbe,pt
add
loopne
scas
jmp
and
shrb
mov
cmp
lcall
cmp
std
push
mov
push
nop
aam
pop
pop
mov
pmulhw
movsl
xor
cltd
and
sub
in
xor
lret
mov
sbb
xor
jge
xchg
adc
orb
arpl
mov
dec
lods
cmp
jmp
push
sbb
inc
dec
mov
sub
and
jno
xor
mov
jg
and
dec
xchg
sbb
push
in
out
xor
mov
jnp
mov
add
sbb
sarb
pop
pop
ds
stos
stos
push
lods
enter
pop
mov
dec
loope
mov
pop
jb
add
aaa
clc
mov
shll
cwtl
pop
shlb
inc
sub
mov
push
jmp
dec
loopne
imul
fsts
adc
add
xchg
fidivrs
sbb
movsb
orb
jp
mov
cld
push
adc
fs
ficomps
mov
mov
popa
fisubrs
je
jne
decb
test
cs
hlt
xor
insl
negb
mov
xchg
test
scas
mov
cld
seta
inc
and
out
mov
imul
jb
jnp
add
cmp
jne
je
mov
pop
fisubl
add
lret
fnsave
or
std
enter
push
mov
mov
pcmpgtb
pop
out
adc
add
das
mov
xor
push
xchg
das
xor
push
fidivs
mov
sub
shll
dec
xchg
mov
mov
or
roll
loope
test
cmp
dec
nop
push
pusha
out
and
aad
enter
jp
xchg
fimull
nop
mov
pop
addb
aaa
add
stos
sahf
cmpsb
mov
pop
icebp
adc
dec
mov
pop
xor
sbb
adc
loop
sub
mov
shlb
je
notb
movb
loopne
or
les
cmp
cld
jmp
dec
dec
repnz
enter
and
pop
adc
add
pop
mov
je
or
loopne
xchg
push
fucomp
add
lahf
mov
pop
xor
lock
outsb
das
fs
or
out
or
popf
outsl
sbb
movsb
cmp
adcl
lds
pushf
mov
les
cmp
mov
out
inc
sbb
adc
sub
ret
movsb
jle
or
push
adc
enter
lret
xchg
sahf
fs
sbb
xor
mov
and
inc
mov
sub
pop
mov
xorps
test
sub
aas
mov
iret
sbb
aam
mov
jge
dec
mov
cli
inc
mov
xlat
imul
jle
jns
mov
xchg
mov
inc
pusha
pop
mov
push
dec
fwait
dec
sub
xor
lods
pop
std
dec
cltd
cwtl
inc
adc
lahf
jno
mov
mov
xor
std
xor
adc
scas
cmpsb
mov
mov
sub
sbb
and
aas
es
lcall
inc
in
sbbb
mov
aaa
aas
aam
repz
mov
outsb
add
cli
xchg
rep
cmp
pushf
sbb
ds
ds
std
jg
xchg
or
cmpb
inc
fnstenv
clc
adc
cmp
fcoml
add
outsb
pusha
outsb
mov
cmp
lock
scas
jle
pop
mov
in
cmp
stc
out
in
icebp
sahf
dec
add
inc
cmp
lock
pusha
rolb
jle
mov
or
mov
sbb
adc
lcall
xchg
mov
stc
or
adc
jo
sub
jmp
mov
in
movhps
loop
arpl
or
mov
or
dec
mov
cmpsb
aad
jp
push
sbb
push
inc
stos
aam
imul
adc
adc
xchg
loopne
out
jbe
inc
bound
dec
mov
and
dec
jp
pop
and
movsl
xlat
mov
mov
dec
dec
cmp
shrl
pop
lahf
mov
sub
insl
jg
mov
lret
or
sub
pushf
sub
jecxz
shlb
xchg
mov
dec
data16
or
mov
cmpsb
mov
mov
xor
push
std
adc
cmp
pop
push
push
fidivl
pop
aam
mov
stos
jl
dec
pusha
jl
cmc
push
or
enter
lods
pop
in
mov
aaa
lods
pop
mov
js
pop
cmp
mov
mov
ja
pop
push
pop
pcmpgtw
lret
or
addr16
lea
jl
fisubrl
out
nop
iret
xchg
inc
jge
mov
rorl
adc
cmpsl
repz
jg
jp
rcrb
jae
cmp
and
xchg
hlt
push
jge
push
xchg
or
shll
leave
enter
add
dec
xlat
mov
or
xor
jbe
pop
sub
sub
and
loop
mov
das
cld
mov
and
sub
out
pop
mov
pop
dec
in
xchg
add
cmc
stos
jge
jo
stos
jle
mov
fbstp
xchg
adc
orb
frndint
test
mov
jmp
stos
loopne
inc
icebp
dec
popf
cwtl
jl
jns
ja
add
lahf
xor
imul
sub
jg
push
sub
outsb
or
cmc
cmp
in
mov
fsub
pop
ljmp
mov
jno
mov
ss
dec
negb
aam
out
cltd
ret
sbb
xchg
sarl
into
dec
push
pop
out
xchg
hlt
xor
add
inc
xchg
mov
mov
incb
andb
data16
stos
aaa
pop
xchg
insb
mov
ljmp
loopne
fcompl
xor
icebp
jmp
out
ret
push
add
adc
bound
push
mov
xor
pop
nop
out
jnp
sub
hlt
xor
sub
mov
insl
movsl
lock
ret
cmpsb
jl
mov
fcmovnu
dec
leave
pop
dec
xchg
mov
mov
cmp
insl
mov
scas
cmpsl
movsl
loope
sub
or
jl
and
xchg
add
mov
maskmovq
sbb
xchg
mov
dec
add
or
aad
gs
and
or
dec
movsb
mov
iret
add
lds
imul
mov
push
sbb
jge
lret
push
ret
js
fcmovnbe
popf
mov
add
pop
cmp
stc
xchg
js
xchg
out
in
stc
push
test
push
fadds
or
sub
lods
std
popf
mov
mov
add
cmp
movsl
lret
movsl
cmp
push
cmp
xchg
push
inc
aam
sbb
xor
int3
shrb
stos
pop
sub
sbb
and
lcall
xchg
push
ds
rorb
xchg
dec
stc
mov
jne
mov
jge
daa
lcall
fs
mov
fistps
or
mov
or
cwtl
lea
out
test
pop
int3
mov
xchg
mov
sbb
push
xor
jb
je
cli
mov
in
imul
mov
call
mov
dec
andb
nop
pop
int
out
lods
sbb
sbb
nop
sbb
cs
filds
lahf
decb
fstpl
notl
dec
lods
and
push
xchg
fs
sub
aad
lds
shrl
mov
mov
sbb
stos
cmp
cwtl
in
dec
les
hlt
jle
cwtl
or
jle
test
addr16
and
mov
jns
insl
mov
pop
pop
insl
and
scas
push
cli
push
jae
out
cmp
scas
mov
jne
cmc
dec
cmp
icebp
sbb
adc
mov
and
or
shrb
test
stc
dec
int3
imul
jbe
mov
hlt
jl
mov
cs
mov
rcrl
mov
pop
cltd
sahf
cmpsb
xorb
cli
pop
mov
xchg
sub
punpckldq
lds
mov
inc
jno
adc
in
sbb
add
jmp
push
or
sti
xor
pop
stos
add
adc
mov
clc
sub
cmp
nop
jne
jno
dec
arpl
iret
mov
outsl
fcompl
push
lea
xlat
mov
dec
jle
mov
mov
test
fnstcw
sbbl
or
or
push
rcr
adc
lea
dec
cmp
das
cmpsb
shl
frstor
arpl
ja
push
lea
ljmp
insb
add
icebp
movl
mulb
lret
jo
popf
push
lret
ret
pushf
xchg
fildll
and
jmp
call
shrl
data16
xchg
mov
outsl
dec
stos
mov
cmp
mov
fnstcw
dec
shl
sbb
or
aaa
jnp
lcall
stos
ficoms
ds
push
jecxz
inc
lcall
cld
xchg
gs
mov
mov
or
test
bound
sahf
add
mov
xor
bound
jp
repnz
ja
dec
ret
push
daa
sub
fs
pop
repz
xchg
sbb
cwtl
or
imul
shlb
jle
push
sub
cmp
aad
out
cmp
insl
ret
pop
jge
sbb
adc
push
fidivl
data16
out
fcompl
mov
fbstp
xlat
fcomi
cmp
lea
scas
push
icebp
mov
stc
lcall
cwtl
dec
add
or
mov
mov
bound
jle
sahf
xorb
mov
or
aam
mov
ror
arpl
xlat
push
rolb
repnz
loopne
xor
test
add
iret
cltd
push
je
mov
lret
xor
mov
shrb
cmp
cmpsl
into
add
scas
sbb
stos
dec
and
test
prefetcht2
jle
sbb
out
mov
std
jns
mov
jp
adc
push
xchg
ljmp
fidivrs
mov
xlat
out
mov
sub
or
hlt
dec
push
push
imul
loopne
out
dec
jb
jle
pop
or
cmc
loop
cmp
test
xor
mov
rclb
pop
pop
mov
xchg
int3
loop
mulb
je
popf
add
dec
mov
push
xchg
sub
jne
xor
loopne
in
out
repnz
dec
dec
sbb
push
dec
std
sbb
inc
cmp
mov
nop
jne
cmp
push
push
mov
movsb
jl
int3
xchg
pop
sub
imul
test
xchg
dec
popa
add
xchg
daa
adc
cmp
mov
scas
sub
mov
xchg
out
dec
lds
inc
cld
fwait
scas
mov
xchg
cmp
jns
rorl
pushf
testl
push
sbb
mov
push
inc
comiss
push
push
aam
sub
fwait
pushf
xchg
add
aam
jb
and
movsl
idivl
test
xchg
jg
jl
jbe
or
adc
jb
add
sub
cmc
mov
mov
sub
pop
shll
lcall
cli
daa
movsl
pop
mov
hlt
add
ds
jnp
fcmovbe
mov
xorl
push
inc
inc
icebp
mov
in
mov
hlt
sbbb
inc
cmp
adc
insl
jle
enter
jecxz
jnp
sbb
jbe
aad
jecxz
inc
jb
mov
inc
sbb
push
in
inc
add
sbb
clc
popf
sbb
add
xchg
inc
aaa
pop
daa
mov
sar
lds
clc
enter
dec
data16
repnz
pop
je
inc
movsl
inc
adc
jmp
cs
loope
inc
icebp
mov
add
add
inc
xor
mov
and
testl
imul
sub
inc
xchg
mov
stos
jmp
xor
xchg
cmp
lds
rolb
lcall
roll
test
bswap
mov
adc
adc
adc
test
pop
jl
cmpl
div
sahf
scas
dec
ja
xchg
cwtl
adcl
lods
and
push
lock
dec
or
fidivl
cld
test
xor
aam
pop
lock
adc
push
hlt
pushf
test
mov
add
push
cmp
push
sarb
popa
es
test
xor
loop
pop
add
lret
into
dec
icebp
loop
jb
jo
mov
mov
jp
xchg
cs
xchg
rcll
rcll
fistps
ret
loop
bound
stos
pop
scas
pop
xor
xor
inc
push
xchg
jmp
popw
out
das
or
loope
imul
cmp
inc
sub
or
cmp
adc
sahf
mov
sub
inc
dec
mov
repnz
and
xor
mov
jne
push
dec
dec
das
lahf
push
repz
cmp
pop
fimull
mov
dec
cmp
add
shl
dec
cmpsl
call
lea
std
xchg
icebp
pop
mov
xor
mov
pop
xor
ret
lahf
in
or
fcoms
mov
mov
in
cmpsl
and
int3
inc
xchg
sarl
inc
cltd
insb
add
leave
imul
xor
pop
ret
arpl
jo
and
cmpsb
hlt
fistl
ds
add
xor
and
push
jae
xchg
daa
pushf
js
push
cmc
and
pop
lret
push
jle
in
ret
mov
mov
les
pop
mov
in
enter
outsl
je
and
stos
adc
pop
mov
adc
in
sarb
cmp
push
push
xor
in
mov
mov
mov
pop
mov
pop
add
mov
xchg
imul
insb
adc
ds
sti
xchg
loope
jns
mov
in
pop
inc
leave
adc
nop
lahf
add
leave
das
cmp
xchg
sub
rol
sub
stos
xchg
hlt
and
repz
addr16
pop
mov
in
fstpl
pop
dec
sahf
jno
filds
jne
mov
nop
xchg
mov
mov
adc
cwtl
xchg
xchg
lea
clc
das
gs
xchg
xchg
fs
fs
fmull
pop
mov
data16
cmp
bound
idiv
pop
sbb
fadds
scas
insl
gs
lds
cmpsl
mov
dec
pop
cmc
push
out
xlat
cli
fcmovnb
jge
scas
inc
adc
ljmp
lahf
aas
dec
or
rcrl
fsubr
test
leave
mov
shlb
out
inc
jne
clc
lret
xor
push
xor
push
mov
mov
scas
roll
orl
mov
and
mov
in
addr16
dec
aaa
cmpsl
scas
loop
mov
int3
cmp
insl
test
mov
sub
mov
ss
sarb
or
xor
pushf
push
icebp
or
sbb
rorl
adc
sub
jne
pop
pop
les
xor
gs
data16
aam
sbb
loopne
cwtl
test
inc
push
push
dec
movsb
add
add
fnstenv
inc
sti
add
push
xor
ret
cs
mov
mov
add
mov
les
sub
mov
pop
mov
jle
jmp
or
push
fnstcw
push
cmp
cmp
ficompl
dec
aad
ret
cwtl
icebp
push
push
mov
jne
dec
lahf
or
sti
test
sbb
and
pop
jo
cmp
sbb
or
dec
dec
mov
xor
push
and
sbb
xor
fistpll
pop
add
lret
lahf
out
lds
or
jae
repnz
pop
or
mov
mov
test
das
lods
mov
lahf
outsb
inc
add
inc
pop
arpl
pop
aas
add
repz
cmpl
jns
int
pop
popa
test
jg
ss
cmpsb
shlb
mov
stos
outsb
push
xchg
xchg
je
lods
dec
lods
sarl
sbb
data16
fwait
jo
lahf
add
in
sahf
push
sbb
jmp
icebp
cmpsb
add
add
test
inc
add
pop
in
das
cli
sub
test
movsb
je
xchg
xor
imul
scas
xchg
aaa
dec
inc
stc
addr16
mov
stos
xchg
add
xchg
push
sbb
add
leave
and
stc
add
scas
lret
ja
adc
aaa
mov
push
in
gs
stos
in
cmp
dec
pop
out
add
mov
xor
mov
pop
testb
xchg
pop
and
push
out
mov
aad
pusha
xor
test
and
adc
mov
out
push
fstpl
push
js
scas
rcll
aas
xlat
xor
cld
adc
push
xlat
pusha
sbb
xchg
outsl
ljmp
push
scas
or
ret
dec
cmpsb
push
ss
das
arpl
jl,pt
mov
mov
jae
mov
shrl
mov
repz
sub
jge
sbb
test
jmp
popa
cs
add
push
inc
mov
mov
pop
addb
mov
pop
push
mov
in
xor
gs
cmp
leave
cmp
scas
sbb
repz
ret
sti
mov
ret
movsb
jle
adc
imul
loope,pn
mov
pop
lcall
push
inc
mov
inc
stc
movups
pushf
inc
icebp
xchg
in
pop
sahf
jmp
inc
adc
inc
adc
addr16
popa
lods
pop
push
cmp
mov
ljmp
out
icebp
mov
mov
mov
inc
ret
imul
cmp
and
mov
push
add
dec
testl
inc
mov
sti
mov
test
es
push
aad
xlat
mov
rorl
stos
mov
jnp
sti
xor
mov
mov
or
mov
cmp
test
lods
push
cmp
mov
faddl
adc
cltd
es
sahf
repz
sbb
lods
shll
pop
fsubr
ja
sbb
popf
push
stos
loope
mov
lods
adc
mov
inc
push
cmp
mov
bound
enter
add
or
lods
inc
ror
sub
scas
test
stos
pop
fcmove
aam
lods
imul
jle
enter
outsb
xor
sbb
out
rclb
adc
je
data16
cmpl
mov
push
or
mov
xchg
in
shl
mov
xchg
jmp
and
inc
cs
push
or
sub
inc
and
sub
mov
mov
popf
adc
int3
jle
iret
das
shll
or
pop
sbb
jge
lea
xchg
inc
mov
add
xchg
add
cmp
xchg
xchg
jbe
xor
mov
jmp
jg
and
subl
movsb
into
mov
dec
ljmp
xchg
fwait
or
mov
arpl
ljmp
outsb
ss
jae
jge
sbb
sub
xor
negb
push
mov
clc
sbb
icebp
xchg
scas
dec
add
dec
lahf
sub
int
push
mov
mov
xchg
xchg
cmp
lcall
push
or
rcrl
sub
mov
enter
lret
mov
adc
sahf
stc
lahf
sbb
data16
xchg
or
push
mov
xor
out
aaa
jns
repz
popf
scas
repz
test
mov
lcall
stos
or
movsl
ret
es
nop
mov
push
leave
test
data16
bound
fadd
push
pop
movsl
push
push
int3
inc
mov
xchg
stc
xchg
or
stc
icebp
lock
fisubs
aaa
sub
stos
xchg
inc
adc
xchg
or
add
cmp
or
popaw
sbb
and
daa
push
jp
in
scas
lods
pop
test
mov
cld
and
ret
cmp
add
cmpb
std
mov
sbb
aam
int
pusha
mov
iret
mov
ljmp
out
and
aaa
lahf
push
mov
xor
addr16
cmc
push
daa
or
cld
outsl
pop
push
pusha
daa
mov
daa
push
jg
cmp
repnz
mov
and
add
xor
xor
fsts
xchg
aad
sbb
dec
push
mov
fsubs
cli
insl
pushf
je
bound
adc
dec
lcall
sbb
aad
mov
data16
push
incl
in
and
jg
cmp
dec
cmp
sbbb
sbb
mov
popf
or
cwtl
mov
mov
xor
gs
daa
pop
movsb
xchg
sbb
dec
mov
or
cmp
dec
mov
add
out
mov
popa
xlat
mov
sub
push
in
mov
cli
add
ss
xchg
mov
cmp
pop
enter
push
cmp
stc
scas
cmp
stos
mov
cld
jnp
pop
jne
popa
test
mov
mov
pop
pusha
popa
xor
jne
xchg
push
les
dec
out
addr16
repz
and
mov
push
test
dec
in
jecxz
cmp
jp,pn
jl
iret
sub
das
in
movsb
push
sub
xor
loopne
js
aam
pop
add
subl
push
addr16
sahf
push
jmp
movsl
sub
sub
sahf
call
sbb
inc
adc
pop
test
repz
daa
mov
jge
dec
ds
or
int
dec
jmp
loop
and
jnp
push
fs
mov
imul
push
clc
aaa
daa
lock
sub
lods
pop
mov
lods
cmpsb
fstps
mov
subb
and
dec
mov
imul
int3
or
imul
mov
sbb
in
xor
movsb
cmc
xchg
inc
jnp
cli
xchg
cwtl
cwtl
push
or
enter
out
fstpt
enterw
sbb
xchg
jns
lods
int
mov
xchg
cmp
imul
mov
cmc
jmp
lret
add
and
int3
pusha
xchg
cltd
icebp
call
mov
ds
mov
sbb
push
pusha
dec
call
fisubl
cmc
jle
jmp
loope
scas
mov
pop
rcrl
or
jg
ret
cmp
nop
jns
inc
int3
arpl
jns
std
pop
shlb
push
mov
sahf
out
aam
and
ficompl
mov
in
lahf
mov
mov
ficoml
in
inc
add
mov
or
call
ds
xorb
xchg
outsb
mov
pop
push
nop
jb
xor
test
cmp
nop
dec
add
pop
xchg
mul
out
push
aaa
mov
xor
dec
sbb
mov
int3
in
mov
stos
mov
mov
aam
ds
sbb
bound
imul
iret
dec
mov
inc
int
inc
sub
popf
divl
je
out
scas
shll
push
push
test
pop
std
std
jl
ja
xchg
lods
pop
pop
enter
clc
dec
jl
mov
fcomps
sbb
cld
stc
and
dec
es
sub
mov
shll
adc
and
adc
sub
pop
add
sahf
pop
mov
or
or
mov
cmpsb
outsl
xchg
mull
jmp
testl
lahf
dec
addb
mov
push
add
mov
aas
mov
xchg
cmp
das
jo
lret
jg
mov
push
sbb
xor
sti
xchg
xorb
cltd
xchg
fmuls
loopne
mov
and
pop
adc
jl
test
cli
pusha
add
cmp
and
ffree
add
test
or
gs
jns
xor
stos
lds
imul
sbb
repz
addr16
rcll
bound
scas
pop
mov
xor
push
cmpl
dec
sub
repz
mov
and
repnz
dec
jp
test
rorl
xor
ljmp
push
in
mov
rolb
mov
inc
inc
mov
push
lret
shll
jns
lods
imul
lods
fimuls
mov
out
das
and
pop
inc
loopne
jle
mov
out
xchg
outsl
jecxz
sbb
push
and
jb
lea
bound
xchg
jbe
dec
shrl
pop
push
jae
rclb
mov
nop
fcmovnb
addb
xchg
sub
jbe
daa
xor
sbb
xchg
xchg
movsl
and
dec
jbe
mov
jns
and
dec
fadd
lcall
dec
out
addr16
or
popa
mov
test
cmp
js
mov
mov
xchg
notl
mov
mov
or
or
push
sbb
xor
cmp
fidivs
mov
pop
jno
mov
mov
aaa
add
inc
sub
add
cmp
in
aad
xchg
test
out
scas
out
cltd
in
mov
lock
test
sbb
stos
mov
mov
mov
mov
mov
sub
in
push
out
outsl
ret
sbb
jb
subl
dec
fmull
cltd
out
push
out
mov
xchg
repnz
call
in
and
mov
jnp
subb
out
mov
mov
movsb
popf
or
or
mov
mov
lods
xchg
inc
and
movsl
push
fsubrs
testb
addb
mov
xchg
xchg
pop
bound
mov
aam
or
mov
inc
fsubrs
dec
mov
or
das
pop
loopne
jns
mov
cmp
andl
pop
or
js
aas
xchg
pop
or
dec
mov
jp
out
cmp
jo
lods
mov
dec
xlat
push
adc
sbbl
jns
lea
inc
push
or
dec
lods
int
cmp
arpl
pop
lcall
int
cmp
stc
jne
out
push
xlat
push
xor
xor
movsl
in
pop
xor
jp
push
lret
hlt
inc
push
push
loop
aad
shll
call
mov
mov
clc
mov
int
mov
add
lds
les
lahf
adc
ja
and
loop
gs
or
ds
or
clc
or
inc
xor
mov
out
aaa
jb
test
out
subb
push
les
pop
nop
cmp
pusha
fs
test
mov
jbe
inc
jns
mov
xlat
add
cmp
lock
sub
jecxz
pop
outsl
shll
lret
outsl
faddp
daa
out
jno
fstps
pop
test
dec
inc
mov
cmp
and
cmp
pusha
bnd
dec
jle
inc
popa
jno
mov
sbb
or
push
or
pop
shll
fs
xchg
push
adc
mov
bound
aad
push
je
fmull
lret
loopne
rcrl
mov
clc
cld
sbb
ja
movsb
push
fstpt
push
adc
xchg
in
push
sbb
ljmp
inc
push
dec
pusha
mov
and
pop
jl
xchg
sub
push
sub
xchg
call
sahf
adc
adc
add
movsb
pop
and
mov
testb
subl
in
sarl
add
xor
cwtl
rorb
pop
push
jbe
mov
insl
and
or
outsl
inc
and
add
xchg
loope
lret
pop
xchg
shll
and
mov
loope
scas
mov
loope
pusha
loopne
clc
lds
jp
mov
dec
or
ljmp
xorb
xchg
or
cltd
cltd
sbb
test
mov
fildl
pushf
js
femms
insb
sub
add
dec
pushf
dec
clc
cmp
sub
mov
mov
imul
cmpsl
inc
inc
fs
cltd
pop
inc
mov
adc
leave
repz
pop
and
das
add
pushf
cmp
and
inc
mov
int3
loopne
rcrb
pop
xchg
pop
mov
mov
arpl
pop
push
clc
sub
xor
mov
pop
movsl
mov
in
mov
addb
push
xor
fisttpl
mov
inc
mov
negl
pop
and
pop
fldcw
mov
jecxz
addr16
std
adc
iret
sub
test
mov
aas
ret
arpl
mov
int3
xor
xchg
cmpl
pushl
push
pop
aas
dec
rcr
mov
mov
and
and
shll
aam
xchg
insl
mov
leave
mov
xchg
sti
into
xor
aas
and
inc
lds
sbb
sarl
add
pop
push
mov
stos
int
jb
sbb
mov
xlat
sahf
cmp
clc
pop
xchg
sbb
fldenv
cltd
jmp
mov
fidivrs
xor
cmpl
inc
fistpll
in
jecxz
sub
xor
xchg
sbb
out
test
loope
jp
nop
pop
push
cmc
ja
inc
ja
shlb
sub
out
pop
mov
paddusw
cltd
sbb
cmpsb
inc
aas
sub
add
stos
stos
mov
outsl
inc
mov
cwtl
pop
sub
ret
inc
jns
xchg
ds
mov
in
xchg
jae
roll
dec
call
repnz
or
std
mov
pusha
cmp
in
sub
and
sbb
bound
ficompl
pcmpgtw
push
mov
jmp
nop
repnz
lds
rcrl
popa
lea
cmp
subl
xchg
clc
mov
pavgw
shlb
xor
outsb
shll
in
popa
xchg
add
fcomps
js
mov
sti
xor
fiadds
add
sub
xchg
sbb
dec
mov
dec
xchg
sub
mov
out
icebp
sub
push
push
out
mov
mov
jmp
add
je
mov
dec
dec
cmp
dec
cs
pop
dec
fbstp
adc
mov
xchg
fbld
gs
and
mov
cmp
jg
push
frstor
lcall
pusha
fidivrl
inc
arpl
cld
pop
jns
fnstsw
cld
mov
sbb
xor
sbb
mov
mov
adc
bound
mov
add
ljmp
xchg
mov
sbb
ret
mov
lcall
inc
jo
and
mov
in
sbb
sub
int3
push
push
mov
in
adc
loop
mov
jns
ss
loopne
scas
mov
in
movl
add
sub
in
loopne
hlt
xchg
mov
cmp
cmp
dec
mov
fwait
insl
pop
mov
aam
xchg
and
and
ss
fst
jle
inc
mov
ljmp
jmp
adc
xchg
xchg
nop
cld
pushf
lea
mov
out
mov
mov
imull
xchg
fiadds
xor
mov
lahf
ds
dec
xchg
xchg
dec
inc
jae
shlb
call
das
push
rcrb
pop
push
mov
dec
leave
or
sbb
mov
and
xchg
dec
popa
in
add
cmc
imul
or
outsl
sbb
jbe
mov
aaa
add
pop
dec
rorb
fstl
cmpsb
and
push
aas
sbb
loop
sbb
dec
outsl
push
and
xor
shll
inc
mov
mov
dec
adc
pop
into
ret
jb
negb
xor
jmp
lret
out
jns
add
push
stc
add
mov
shll
aad
orl
lret
fiadds
jno
lahf
ret
or
jecxz
je
xor
fcomp
aad
leave
push
out
popf
xchg
add
stc
loope
mov
jo
aad
sbb
test
push
out
xchg
mov
addb
xor
xor
and
popa
sub
pushf
fstpt
popf
xor
mov
pop
mov
add
pop
mov
dec
jl
xlat
cld
test
jno
inc
adc
imul
aam
test
xlat
xor
lahf
mov
adc
pop
jbe
sbb
inc
inc
xor
pop
sti
subb
aas
mov
cmp
lods
xchg
orl
pop
and
push
inc
push
inc
cmp
pushf
pop
mov
movsl
je
in
ja
mov
ja
scas
push
mov
scas
repnz
mov
push
jnp
inc
adc
fsubrl
mov
mov
and
xlat
cmp
mov
push
test
cltd
movsb
movsl
dec
out
sbb
jle
mov
fs
mov
clc
addr16
fstpl
ja
xor
fsubrl
decb
aas
xor
mov
movsl
loop
push
inc
push
movsb
xor
shl
lcall
fsts
insl
push
adc
fwait
into
xchg
lods
pop
pop
bnd
lds
mov
aad
outsb
rolb
mov
xlat
pusha
inc
gs
jle
in
mov
fsts
sub
inc
xor
std
dec
mov
mov
andb
flds
or
or
ret
push
cmp
mov
add
je
fwait
add
inc
xor
push
rol
fwait
mov
pop
mov
aad
mov
push
fs
repz
mov
mov
jp
jg
jl
or
aam
xor
je
int3
pop
dec
test
push
pop
fiadds
adc
fprem
icebp
insl
dec
mov
cmp
jnp
aas
dec
lret
add
ljmp
cmp
insl
mov
stc
sub
xor
dec
lret
push
cmp
lods
mov
adc
ret
int3
mov
popa
test
je
xchg
and
je
repz
pop
outsl
popl
jecxz
mov
or
mov
mov
mov
test
in
loop
jge
mov
icebp
daa
mov
pop
or
jb
jp
and
dec
add
mov
push
ret
repz
pop
add
jne
lods
push
arpl
and
sbb
dec
shll
cltd
or
outsl
push
fisubrs
fs
sub
push
xchg
aam
pop
mov
cmp
stos
add
orl
test
sub
or
add
or
mov
pop
in
jle
inc
jl
cwtl
xor
ret
inc
lea
out
push
aas
dec
cs
jne
or
cmc
pop
lock
mov
pop
add
cmpb
cmpsl
ljmp
mov
dec
adc
sub
orb
test
mov
jae
sbb
dec
loope
xor
popa
push
jae
dec
fildll
fcoms
movsl
fists
and
mov
adc
sbb
inc
pop
aas
pop
fistl
xor
mov
lret
ja
ljmp
push
aas
jnp
lcall
lahf
and
sub
subl
popf
das
in
mov
pop
pop
lods
loop
mov
lea
cmp
setae
in
push
pop
inc
pop
je
inc
xlat
sbb
and
cmp
pop
pop
call
cmp
xor
mov
mov
les
cmc
pop
xchg
stos
sti
xor
ret
scas
cmpsb
adc
push
mov
mov
lods
insl
sbb
enter
gs
rcr
addr16
leave
mov
lds
std
mov
sub
push
shr
enter
dec
and
jge
pop
rcrl
cmp
test
pop
stc
fidivrs
mov
dec
adc
rol
inc
sbb
push
cmp
dec
adc
ss
pop
jg
test
jns
jge
jno
sub
xor
push
int3
imul
cli
or
into
mov
pop
scas
and
mov
out
loopne
and
xchg
dec
xchg
fsubs
shll
sub
mov
shll
cmp
cmp
mov
jo
inc
notb
ret
js
jl
cmp
pop
pushf
lea
mov
mov
jg
pop
movsb
testl
imul
dec
push
jge
mov
lahf
iret
pop
in
mov
repnz
cltd
in
ret
dec
stc
push
cltd
add
fnstcw
test
sub
clc
icebp
sub
xchg
xor
xor
inc
adc
inc
arpl
fidivrl
ds
pushf
arpl
stos
jns
inc
test
rclb
ret
outsb
ja
pop
jno
mov
cmp
push
rcrl
in
js
leave
sar
pop
jle
enter
sahf
sub
mov
nop
js
xor
stc
fbstp
xor
inc
ror
jno
jo
lret
adc
call
pop
adc
loope
mov
jmp
mov
cmp
inc
popa
cltd
mov
and
xchg
and
jp
ljmp
into
adc
daa
push
jge
adc
imul
nop
aam
das
and
jae
push
ret
je
xor
negl
dec
sub
push
sub
pushf
jge
cmp
push
cmp
or
orb
jbe
ljmp
cmp
add
jg
pop
mov
shl
pop
faddl
mov
jg
pop
xchg
or
imul
dec
shlb
add
and
push
or
movsl
rcrl
jl
loopne
daa
notl
shll
add
enter
gs
idivb
lahf
dec
jnp
rcll
add
lea
ds
insl
jecxz
push
pop
cmp
orb
cwtl
popf
mov
push
pop
jmp
sbb
dec
pushf
ret
pop
pop
cmp
lds
xchg
mov
and
pop
ffree
adc
movl
cmc
bnd
cs
mov
stc
jns
adc
push
enter
ficomps
sub
inc
mov
rcrb
pop
add
jns
xchg
in
out
and
jle
mov
add
sub
xor
call
icebp
test
push
push
cwtl
icebp
inc
xchg
push
push
mul
std
mov
jbe
cmp
xor
dec
mov
mov
in
dec
or
fcom
out
ja
jp
mov
push
cmc
jle
cwtd
fs
add
sub
movsl
insl
sbb
ds
xor
frstor
jbe
jge
xor
adc
xor
xor
iret
xchg
sub
and
lds
add
jo
jbe
mov
push
das
cli
jg
fwait
test
test
xchg
adc
stos
sbb
jne
mov
cmp
jno
jle
jo
rcr
jb
lods
sahf
negb
repz
mov
stos
fiadds
mov
xchg
push
daa
mov
xor
cmp
je
je
xlat
xchg
imul
jp
inc
or
test
mov
andl
and
lock
jle
lods
dec
pop
or
jg
dec
xchg
inc
data16
lret
iret
aaa
aaa
test
movsl
aad
mov
pusha
cmp
shr
shr
ljmp
mov
enter
mov
or
push
test
push
xorb
pop
pop
add
aas
sub
inc
cmp
mov
cmp
inc
mov
rorl
xchg
scas
add
sub
ficoms
das
imul
sahf
or
mov
dec
cltd
loopne
and
cmp
dec
fldt
mov
mov
add
cmpsl
cltd
xchg
fnsave
mov
in
sub
jp
push
daa
push
aas
adc
les
inc
inc
mov
pushf
lret
test
add
and
jae
jo
push
pop
push
in
xchg
subl
cs
pop
movsl
and
insb
sub
call
mov
je
aad
sbb
push
pop
sbb
movsb
idiv
or
xchg
insb
sub
push
pop
das
cld
xchg
in
mov
or
imul
rorl
outsl
inc
mov
push
pop
enter
cmp
jle
pop
mov
xor
or
mov
repz
sar
frstor
or
ret
iret
test
in
sub
test
lea
lea
mov
xor
js
mov
inc
push
icebp
dec
fcompl
fldt
es
test
popa
bound
cld
lahf
mov
and
push
xchg
xor
dec
pop
sbb
into
ja
xor
mov
dec
int3
gs
cmpsl
fwait
in
leave
sub
sub
xchg
or
mov
out
test
and
lods
sub
jecxz
fdivrp
push
inc
adc
add
add
jae
into
mov
fdivrl
xor
lods
dec
add
iret
jnp
ja
add
rorb
fisttpll
inc
leave
subl
mov
mov
or
rorb
sarl
lock
xchg
fiaddl
push
pushf
adc
in
sbb
xchg
dec
mov
inc
push
inc
jecxz
jns
xor
xchg
mov
cli
and
xchg
aas
rcr
mov
fldl
gs
cmp
or
ffreep
bound
mov
pop
jne
out
std
orl
nop
imul
cmp
add
mov
xor
cltd
lods
fwait
rolb
loop
mov
push
mov
mov
fwait
xor
or
push
shl
es
add
andb
xchg
jno
add
ds
jns
and
sub
rcll
arpl
xchg
scas
iret
sub
dec
cmp
lahf
inc
sbb
sbb
outsl
and
push
daa
mov
aam
cmc
and
sub
shll
fcmovb
mov
cmp
jae
add
add
daa
mov
sub
add
mov
dec
sbb
mov
and
dec
add
pusha
shlb
push
cs
test
push
lahf
xchg
pop
daa
in
cmpsl
dec
aam
xor
inc
sbb
pop
ljmp
aam
stos
mov
adc
add
scas
inc
int3
mov
fisubrs
imul
das
sbb
sub
cmpsl
sarl
push
pop
testb
xchg
lret
sbb
jmp
xlat
fwait
and
pop
mov
shlb
int
push
je
movsb
aaa
add
and
loop
pop
xor
pushf
in
jnp
adcl
add
andl
adc
jae
mov
or
sbb
cmp
adc
stc
jo
inc
or
pusha
jmp
cld
push
xor
xor
rcll
rorb
aam
jo
mov
fisttpll
or
mov
lods
loop
mov
adc
adc
outsb
push
pop
sbb
mov
daa
bound
mov
add
pusha
sub
int3
xor
jle
imul
movsb
adc
pop
sbb
movsb
adc
ret
pop
dec
xor
loope
aaa
push
int3
mov
xor
js
fnstsw
es
xchg
mov
xor
repz
add
jo
pop
jge
jmp
stos
out
pop
dec
pop
lcall
push
and
hlt
jg
sahf
stos
test
push
insl
pop
cmp
movsl
lea
pop
dec
or
mov
cltd
bound
pop
mov
adc
xor
mov
xchg
adc
cmp
lds
inc
mov
hlt
cmpsb
jns
leave
inc
add
jne
loopne
shl
or
mov
pop
dec
lahf
sub
fidivrl
sub
push
iret
mov
adc
mov
push
inc
sbb
adc
leave
test
idivl
test
sbb
mov
scas
dec
daa
js
arpl
mov
cmpsl
imul
imul
pop
rorl
sbb
mov
or
lret
imul
cmpsb
inc
iret
xor
mov
sbb
cmpsl
nop
popf
or
addl
fwait
pusha
add
jnp
mov
add
jmp
lock
pop
and
add
imul
xorb
add
icebp
mov
add
push
jae
cmc
int
xchg
or
sub
leave
sub
out
and
mov
imul
adc
mov
and
pop
fdivs
lods
sahf
dec
cli
and
cmp
je
push
aas
mov
xchg
or
out
push
insl
inc
dec
adc
sub
lret
fsubs
addb
mov
xor
cmp
xor
repnz
push
dec
movsl
lods
and
mov
loopw
fcomip
cmp
sub
sub
popf
out
je
js
faddl
xchg
push
lret
push
fxch
push
subb
jecxz
xchg
pop
out
or
push
cwtl
push
cmpsl
sbb
lret
imul
lret
cmp
ret
lods
mov
jle
and
pop
push
cmp
jbe
inc
mov
std
inc
xor
lret
pop
cmp
xor
xchg
or
sbb
neg
data16
jle
loop
stc
push
sbb
popl
push
push
inc
push
mov
xchg
out
sbbb
dec
je
xchg
popa
test
mov
mov
repnz
pop
pop
inc
fwait
stos
jo
lock
shll
add
insb
and
cwtl
and
pop
test
sub
pop
jne
lods
inc
sti
test
xchg
xchg
aas
loop
push
lea
in
cmp
mov
outsl
in
test
push
popf
mov
add
inc
jo
push
add
jb
xor
jbe
test
mov
or
dec
es
or
ljmp
jge
mov
ss
je
dec
adc
into
pop
ficompl
inc
sbb
fcompl
std
aam
pop
incb
test
pop
adc
fwait
or
sbb
popf
mov
jnp
mov
loope
lahf
sub
mov
sbb
xchg
xchg
cld
mov
call
jg
jae
in
mov
addl
cmp
in
push
aaa
je
sbb
xchg
or
add
mov
loop
fwait
repz
or
mov
into
push
cmc
nop
data16
and
pop
xor
fnstsw
sub
ret
aas
vpmovm2w
inc
shrb
bound
push
lcall
movl
jl
push
xchg
shr
xchg
hlt
cmp
mov
notl
jp
test
pop
loope
mov
mov
cmp
inc
popa
daa
and
shrb
pop
pop
sub
pop
cmp
out
jne
cmp
push
adc
gs
pop
push
pop
shrb
mov
insl
mov
lods
or
insb
movsb
dec
clc
jbe
into
loop
in
mov
jb
sbbl
sub
dec
arpl
adc
dec
dec
daa
jns
int3
cmp
sbb
test
mov
cmp
xor
jno
ret
jle
icebp
cmpsl
cmc
popa
iret
aad
repz
call
adc
pop
sbb
adc
mov
inc
lock
mov
adc
and
push
mov
clc
cmpsb
xor
lret
pop
in
rorl
mov
loopne
mov
mov
xor
fsub
nop
aad
outsl
je
outsl
add
je
cmp
mov
and
int3
test
adcl
mov
and
and
or
fistpll
cltd
in
add
push
jle
jne
call
cmp
pop
adc
aad
cmp
jno
insl
or
add
sub
jecxz
nop
ljmp
in
out
in
es
rcrl
xchg
adc
out
xchg
inc
sahf
add
out
jg
imul
sbb
push
add
inc
jmp
clc
mov
jmp
pop
insl
cmp
mov
imul
adc
push
stos
fnstsw
arpl
xlat
leave
pop
inc
pop
or
stos
stos
or
push
mov
fstps
inc
inc
jp
jbe
test
inc
cltd
mov
or
or
loop,pt
jo
rcrl
imul
test
mov
icebp
adc
jnp
addr16
dec
inc
xlat
dec
adc
je
xchg
aam
pushf
roll
loope,pn
mov
test
nop
iret
mov
mov
cmc
xchg
jge
mov
dec
xor
mov
test
icebp
cmovl
lods
mov
nop
mov
push
mov
inc
xor
cmp
xor
jl
loop
xchg
je
mov
sbb
iret
ljmp
inc
stc
test
shrb
ss
inc
dec
fiadds
xchg
mov
idivb
js
test
int
or
mov
mov
pop
fisubrl
dec
fdivrs
fcmovbe
ds
push
and
enter
and
jae
jge
sbb
hlt
sbb
xlat
leave
and
inc
dec
xlat
push
mov
ret
fsubrs
inc
xlat
ret
pop
mov
jns
add
test
add
shll
iret
mov
gs
andb
push
idiv
jo
mov
mov
push
sub
jo
mov
movsb
nop
les
push
mov
or
loop
pushf
or
fwait
pushf
sbb
out
inc
push
sbb
roll
push
cltd
mov
xchg
inc
daa
in
jb
popa
xchg
fs
pop
xchg
mov
cmp
fisubrs
jnp
mov
mov
sbb
xchg
ja
cltd
lods
pusha
sbb
cwtl
jno
test
jbe
inc
mov
pop
outsb
xor
sbb
pop
add
xor
and
cmp
add
leave
inc
dec
xchg
add
sbb
cltd
jg
ret
sbb
dec
push
and
add
jmp
test
aas
ja
mov
andl
stc
xorb
dec
repnz
xlat
ja
mov
stos
scas
nopl
and
das
dec
sbb
lret
xor
dec
adc
inc
add
mov
andb
rolb
add
lock
and
int
in
push
fisubs
fsubrl
and
outsb
adc
cmp
scas
sub
jno
inc
sti
cltd
orl
xor
insb
bswap
leave
cmp
cmpsb
adc
imul
ds
iret
sub
mov
pop
jno
jnp
mov
push
int
xor
xchg
push
xchg
xchg
push
mov
push
xorl
ret
cmpsl
dec
jmp
inc
or
lea
stos
je
int3
ds
cmp
jo
xor
xchg
cmpsb
lock
es
fwait
push
out
or
das
adc
xor
enter
mov
sub
jae
ljmp
push
fmulp
leave
clc
mov
dec
mov
lret
mov
mov
cmpsl
mov
enter
xchg
push
jl
sub
cmp
xchg
outsl
dec
xor
xlat
and
or
jecxz
add
inc
pop
mov
cmp
sub
push
rcrb
aaa
xchg
mov
testl
sub
in
sub
mov
mov
xchg
cmp
xchg
sbb
data16
sbb
scas
mov
dec
or
and
sub
sub
xlat
dec
mov
cltd
pop
jmp
enter
mov
inc
cmc
shr
mov
cmp
test
movsb
xchg
jb
insl
cmp
fwait
mov
dec
rcl
pop
xchg
mov
subl
imulb
xorb
clc
xchg
sub
mov
lcall
icebp
sub
xor
out
je
dec
movsb
or
test
mov
and
int3
repz
scas
idivl
fldl
nop
cltd
fcomi
orl
jbe
adc
inc
xchg
imul
movsl
lahf
inc
ljmp
mov
pop
std
jae
rsqrtps
inc
pop
mov
jle
and
cmpsb
sbb
ljmp
mov
mov
rcrl
in
mov
sub
jae
dec
dec
lret
jb
inc
pop
sbb
scas
fisttpll
adc
xchg
add
gs
jbe
mov
fidivs
mov
mov
fbld
aad
push
xor
mov
test
repnz
hlt
and
fwait
cmp
push
test
nop
test
add
insl
int3
xor
add
jmp
rolb
jle
shl
pushf
xchg
notb
daa
dec
shrb
ret
lock
mov
jl
fisttpll
pop
aas
mov
inc
xchg
je
dec
push
xchg
daa
jmp
mov
add
clc
js
loope
inc
outsb
stos
lods
scas
sub
add
popa
adc
call
inc
lret
test
cli
int
jecxz
ret
movsb
pop
xor
dec
lods
daa
test
jl
xor
stc
ds
rcrl
dec
sub
popa
movsl
push
lahf
and
lcall
lahf
or
push
and
out
jae
test
xchg
fwait
jmp
in
aad
and
ret
sbb
in
mov
fsts
testl
shl
shll
or
cld
dec
inc
movsl
decb
je
leave
push
les
and
imul
push
or
out
lcall
adc
repnz
scas
jg
cltd
mov
sbb
push
sbb
data16
in
lcall
test
cmp
pop
dec
mov
lcall
mov
pop
xlat
cli
and
mov
xor
addr16
test
out
jmp
gs
mov
adc
imul
dec
adc
ja
xor
sbb
jno
test
sub
cs
loop
and
adc
sbb
or
jns
arpl
jecxz
call
dec
sub
adc
nop
leave
and
mov
loopne
ret
mov
dec
es
mov
out
sbb
pop
std
fdivs
add
adc
btc
mov
pop
pop
call
xchg
scas
gs
mov
adc
into
mov
dec
mov
sub
pop
xchg
stos
out
or
jg
jg
cltd
stos
mov
pop
mov
clc
push
je,pn
sub
xor
inc
loope
mov
int
movsb
xchg
cmp
cwtl
enter
jmp
push
hlt
out
sti
push
pop
dec
sub
out
fistps
inc
pop
loope
dec
sub
adc
shll
shrb
pop
andl
push
scas
pop
lods
mov
imul
aam
cmpsb
out
or
and
out
adc
mov
fidivrs
jo
leave
mov
mov
pop
sbb
sub
mov
inc
mov
mov
insl
push
sbb
mov
daa
test
add
sbb
pusha
or
sub
cld
xchg
pop
pop
pusha
or
dec
push
fs
sub
xor
xchg
pop
or
or
sub
jmp
pop
cmp
and
mov
arpl
inc
jne
cmpsl
inc
lea
cmp
inc
push
sahf
outsl
jns
push
xor
and
push
jbe
movsl
adc
jne
pop
mov
or
fwait
cltd
mov
movsl
js
jo
cmp
adc
sub
cltd
mov
lods
mov
iret
aaa
xlat
mov
jmp
jne
dec
vunpcklps
cli
test
cmp
stos
pop
push
ljmp
rcl
jae
nop
sbb
int3
mov
jl
addr16
inc
cmp
fmull
in
dec
cs
pushf
popa
mov
sbb
fadds
mov
mov
jecxz
fwait
fwait
lock
or
or
lods
mov
jno
dec
mov
scas
inc
jae
sub
adc
in
stc
jle
push
clc
div
jge
cmp
iret
inc
fs
ficomps
scas
daa
out
xor
aas
repnz
jnp
cli
or
inc
sub
sbb
das
sbb
mov
rorb
and
lea
andb
outsl
mov
outsl
inc
mov
fstpt
and
call
adc
pusha
dec
xchg
loope
leave
sub
in
or
jne
jb
jae
fstps
jnp
inc
and
daa
shrb
xor
es
push
dec
xchg
imul
nop
lret
fdivrl
jno
je
sbb
jg
test
cli
ja
dec
and
daa
ret
das
fdivl
mov
sub
jmp
notl
imul
jmp
adc
test
mov
pop
jo
nop
test
lock
call
sarl
cmovs
pop
stos
mov
xchg
lea
loop
aad
sbb
xor
out
inc
sub
adc
or
vmwrite
push
iret
sbb
mov
pushf
xor
imul
mov
mov
out
popa
in
pusha
lea
shll
pop
mov
adc
cmc
fsubs
inc
jae
add
or
sahf
mov
xor
mov
shrb
sbb
and
jp
inc
outsb
xchg
jp
add
mov
cs
xor
push
push
stc
pop
jnp
cmpsb
add
or
les
cmpl
mov
add
push
sub
fcomps
cmp
sbb
sub
jle
dec
or
insl
mov
dec
int
inc
adc
push
dec
xor
shll
mov
dec
xchg
in
lcall
rclb
stc
ja
insb
adc
adc
popa
add
test
rcrl
rcr
mov
sub
jbe
add
imul
adc
test
je
sbb
pop
movsb
loope
enter
mov
or
sub
mov
sbb
pop
cmp
add
dec
dec
outsl
rep
int3
xchg
push
mov
add
xor
cmp
inc
jmp
xor
hlt
mov
call
mov
movsl
dec
and
pushf
add
jmp
pop
push
xchg
mov
inc
sbb
jp
jno
adc
inc
dec
icebp
cmp
leave
or
call
jl
jbe
sub
iret
sti
mov
sti
jns
pop
pop
mov
bound
insb
ss
push
test
jnp
dec
mov
push
in
pop
ja
xchg
mov
fwait
je
sbb
sub
xor
movntps
ficoml
adc
cmpsl
leave
aas
mov
insl
mov
mov
aas
lahf
ret
or
inc
inc
mov
push
jno
jg
aam
pushf
cmpsb
jmp
cwtl
test
aad
mov
nop
jg
imul
ret
movsb
push
fimull
iret
das
rolb
pop
adc
ja
arpl
push
jbe
mov
lahf
ret
iret
das
stc
mov
pop
rcrl
repnz
in
and
aad
cltd
pop
into
pmaddwd
jp
sar
or
cli
test
pop
lahf
adc
pop
aas
xchg
pop
sbb
fdivrs
mov
stos
mov
mov
or
sarb
mov
dec
cmp
leave
lods
insb
in
aam
pop
jnp
push
mov
jo
fisubs
int
push
xchg
lock
aad
xor
dec
jno
mov
test
jp
adc
in
call
sub
add
stos
mov
insl
pop
jp
jg
jle
push
cli
dec
pop
xor
popa
mov
sahf
neg
pop
adc
dec
stos
mov
jnp
jl
sub
xchg
in
xor
pop
fwait
mov
ret
sbb
decb
not
xlat
mov
push
aam
or
xchg
mov
lcall
dec
test
add
ss
xor
repz
sbb
xchg
stos
cs
adc
mov
xor
pop
inc
stos
pop
ret
xchg
push
stc
mov
int
push
aaa
dec
adc
out
sbb
jb
inc
rcll
adc
sbb
notb
add
jmp
es
fwait
inc
js
xor
mov
inc
sbb
cmp
pushf
repz
or
xor
cwtl
sbb
pop
out
mov
cmpsb
dec
lods
sbb
dec
cmpsb
mov
imulb
jno
ror
lea
stos
lods
enter
cltd
mov
cmp
cltd
inc
mov
mov
xchg
lds
lods
insb
leave
mov
fwait
jns
scas
or
add
mov
cli
mov
and
push
insb
push
cltd
and
popf
or
xor
nop
jmp
dec
dec
mov
inc
and
les
mov
push
call
mov
dec
mov
sub
loopne
mov
mov
sbb
dec
jo
setl
test
xor
out
leave
pop
xchg
xchg
mov
push
add
inc
hlt
and
pushf
leave
test
push
dec
push
mov
or
pop
or
in
iret
filds
insb
pop
rclb
lods
xchg
push
shrb
push
in
mov
testb
or
ljmp
loop
shll
das
mov
movsl
das
pushf
cltd
add
xor
rcr
mov
cmp
popa
push
loope
cli
mov
sahf
stos
es
stos
xchg
sarb
mov
mov
mov
aad
out
sbb
test
mov
sahf
mov
dec
frstor
enter
lahf
pop
push
test
outsl
fisttps
cld
out
jae
ljmp
sbb
in
outsb
pop
or
imul
push
inc
popa
mov
mov
xor
sbb
lock
loop
push
and
xor
xor
popf
loope
and
cmp
or
push
je
jg
daa
aam
imul
test
pop
adc
in
aas
sub
in
mov
jbe
ficompl
xor
repnz
test
xchg
mov
jne
xor
arpl
ja
gs
xchg
loopne
shll
cmp
sub
pusha
sbb
les
test
cmp
decb
dec
lcall
shrb
ljmp
pop
stos
je
fisttpll
inc
imul
and
dec
int
ffreep
fldl
daa
iret
mov
add
fidivrl
ja
push
add
dec
ret
stc
push
sti
jnp
dec
xchg
sbb
ret
test
adc
push
push
cs
and
and
in
jg
loopne
stos
xor
jae
call
lret
cli
loop
mov
popa
mov
add
cli
movl
push
sarl
fs
testl
mov
mov
push
and
fldln2
cmc
aas
pushf
ds
inc
dec
sub
rcrb
scas
inc
inc
xchg
sbb
xchg
adc
addr16
fcmovb
adc
xor
sub
add
bound
mov
inc
xchg
push
pop
jns
push
jo
mov
lcall
scas
pop
mov
mov
jnp
shl
inc
rolb
or
xchg
decl
insb
cltd
push
pop
lcall
add
mov
dec
xorl
imul
mov
in
sub
mov
dec
lret
aam
push
nop
ja
sub
lods
cs
std
cmp
shl
or
jne
add
iret
fwait
rol
movsl
mov
inc
add
pop
dec
aad
subb
xchg
insb
lahf
pop
dec
pop
fidivrs
xchg
xchg
mov
cmpsb
dec
sti
or
inc
xchg
iret
sbb
inc
push
add
jge
scas
pop
add
xorl
pop
data16
push
mov
ja
jecxz
adc
cmpsb
push
sarl
fwait
inc
mov
aam
cmp
popl
jg
in
sub
dec
dec
xor
sub
les
icebp
and
dec
sub
out
sti
cld
sbb
mov
scas
orl
pop
sbb
cmpsl
fcmovbe
call
mov
enter
mov
xchg
jmp
mov
sbb
and
scas
nop
sbb
stos
pop
adc
sbb
cmpsl
mov
inc
jg
pop
into
jle
cltd
sub
cmc
and
xlat
fsubr
jae
push
jp
push
cmp
sub
hlt
mov
repz
faddl
sbbb
pop
lret
sbb
jge
push
leave
fldcw
das
xchg
dec
xchg
pop
sbb
sbb
test
ret
mov
mov
shl
dec
les
xor
add
insb
fldenv
xor
pushf
mov
jmp
negl
lds
jmp
and
xchg
addr16
std
xchg
stos
sbb
sub
fstpt
frstor
inc
out
sub
sub
testl
push
sarb
or
sbb
xor
sbb
add
mov
clc
add
popa
mov
sub
pop
pop
popf
fbld
pop
pop
negb
enter
lcall
fisubrl
add
fimull
cli
and
push
lock
cmc
arpl
lods
xchg
cltd
pushf
sahf
gs
pop
xchg
mov
scas
pop
sbb
cs
in
cmp
xor
jl
dec
daa
das
icebp
fists
aas
stos
cmpb
mov
mov
pusha
xor
ds
leave
ja
xchg
xchg
stos
sbb
add
in
jno
jl
cmpsw
mov
add
xor
jp
popa
lock
xor
mov
mov
das
add
jecxz
testl
dec
jmp
repz
mov
add
sub
mov
movsb
cmp
jecxz
lods
adc
mov
clc
mov
xchg
push
adc
pushf
stos
mov
insl
pop
xchg
dec
imul
sbb
aaa
lea
or
add
das
mov
push
fsubs
mov
out
out
xor
repnz
xor
out
arpl
cmp
adc
divl
jne
dec
jb
xor
insb
adc
loopne
push
push
ds
das
subl
mov
pop
jne
dec
cli
clc
test
rol
mov
xor
jb
mov
int3
jbe
loope
ljmp
ljmp
addl
inc
loopne
icebp
or
or
xchg
jne
lea
mov
test
daa
cmp
pop
or
mov
lahf
jae
loopne
xchg
cmp
rcr
shr
adc
or
cmp
mov
cmp
jo
test
movsl
push
push
std
push
mov
push
daa
dec
clc
xor
loope
sub
ds
mov
xchg
pop
mov
fcmovbe
sub
xchg
mov
xor
lahf
ss
stos
mov
mov
dec
cld
xchg
pop
fadds
dec
loope
in
sbb
sbb
ljmp
fistps
push
xchg
jnp
sub
mov
lea
or
lret
push
xchg
mov
shrl
loope
sahf
loope
mov
or
xchg
xchg
sahf
dec
xchg
jge
popa
xor
into
loop
jae
sub
addl
dec
fstl
inc
int3
pop
or
mov
mov
push
sub
in
push
jmp
shrb
dec
lods
stc
or
jmp
lods
fxch
cmpsb
add
fs
mov
int3
imul
scas
repz
dec
xchg
test
out
push
test
sub
roll
xor
dec
mov
dec
adcl
sub
jb
inc
aas
xchg
jb
popf
in
in
jae
sti
xor
fsts
gs
dec
cld
add
imul
jg
daa
xor
enter
je
xchg
mov
loop
inc
popa
push
xor
adc
or
adc
out
mov
mov
sub
mov
dec
pop
dec
fs
repnz
pop
pushf
jecxz
test
sub
in
cld
mov
cwtl
sar
mov
sub
jl
adc
or
jns
xor
test
dec
sub
sbb
mov
cli
incb
cld
cmp
cld
xor
lret
push
test
cmpl
test
mov
fwait
pop
ret
dec
pop
jo
mov
mov
sbb
decl
aad
and
ficomps
jmp
cwtl
bound
xchg
ret
pop
mov
shr
repz
or
sti
ja
in
inc
xchg
scas
in
mov
cmp
xor
mov
xor
and
inc
stos
loopne
cld
xor
aaa
mov
leave
rol
lret
inc
mov
adc
fwait
push
sbb
ret
lret
cmp
shrb
shrb
aaa
xchg
in
std
dec
jne
dec
repnz
cs
jae
and
dec
dec
sbb
imul
in
test
pop
sbb
xchg
test
outsl
pop
xchg
xchg
mov
aaa
popf
and
mov
xor
fldt
xor
sub
idivb
jle
int
sar
adc
mov
mov
enter
xor
mov
xor
shlb
xchg
imul
enter
mov
dec
mov
cmpsb
scas
pop
ljmp
and
xor
dec
test
adc
push
xchg
les
mov
jle
aad
cmpsb
rcrl
and
adcb
pop
mov
fwait
sbb
cmp
push
adc
xlat
cmp
push
pop
mov
mov
fwait
call
jp
pop
jmp
movsb
nop
jno
adc
mov
push
sbb
cmp
mov
ja
iret
push
testb
je
cli
push
sbbl
mov
fnstcw
imul
cltd
fwait
jmp
mov
xchg
sahf
pop
mov
scas
mov
inc
aam
out
inc
inc
xor
icebp
xor
xchg
std
pop
shl
inc
sarb
orl
mov
and
in
aas
dec
out
xlat
adc
push
pop
and
aam
dec
inc
out
push
mov
jp
addr16
rolb
mov
cli
jbe
addr16
daa
dec
dec
cltd
xchg
testl
test
xlat
sbb
and
mov
push
xor
cmp
sarb
or
pushf
dec
fwait
scas
or
dec
xchg
mov
jnp
fiaddl
jle
rolb
lret
movsl
insb
in
or
jae
test
mov
lock
push
mov
push
sub
loope
sub
or
mov
sarb
dec
ret
clc
xor
adc
mov
mov
mov
xorb
fcompl
gs
daa
mov
and
lret
dec
mov
mov
lods
cltd
aam
mov
fsubrs
fs
cmpsb
sub
sbb
loopne
ret
or
xchg
jnp
adc
pushf
movsb
and
jnp
dec
jne
mov
int3
movnti
mov
popf
cmp
xchg
aas
dec
jle
test
test
imul
mov
testb
call
out
xchg
cmpb
dec
dec
pop
daa
mov
test
outsb
aad
adcl
ljmp
push
pop
mov
cmp
jge
test
pushf
mov
xchg
movsl
pusha
ret
es
jmp
sub
sbb
test
sbb
sub
jge
xchg
sahf
cmpsb
divb
jnp
ljmp
mov
sahf
in
fstps
imul
sub
pop
or
loopne
add
mov
and
ret
int3
jp
repz
ret
rcrl
inc
cmpsl
imulb
js
jg
adc
pop
lds
pop
mov
mov
outsl
xchg
stc
push
pop
outsl
push
dec
push
andl
cmp
inc
icebp
dec
mov
mov
jae
cmp
cmp
adc
pusha
xchg
dec
or
jnp
bound
in
mov
data16
out
push
xchg
aas
adc
xlat
fdivr
pop
inc
into
and
push
loopne
pop
jnp
mov
popf
into
sub
mov
imul
push
insl
ss
xchg
inc
pop
push
jg
orl
push
icebp
icebp
or
dec
sti
xchg
clc
inc
test
mul
mov
test
sarb
adc
cmpsl
cld
lcall
cmc
lock
shrb
pop
mov
mov
shlb
pop
out
dec
dec
push
cmp
loope
jae
jbe
push
outsb
xchg
xor
push
mov
adc
sub
dec
jno
jp
mov
push
pop
pushf
cmp
sbb
xchg
sar
pop
pop
rcrb
movsl
cmpsl
mov
fs
mov
jle
jge
push
popa
arpl
adc
neg
call
negl
dec
mov
movsb
orl
cmc
mov
mov
inc
test
push
mov
jl
and
jecxz
jle
jae
loopne
and
mov
jnp
stos
xlat
add
xchg
inc
fldt
pop
jmp
dec
imul
xor
dec
into
dec
jns
jmp
out
cwtl
ds
pop
jmp
mov
push
xor
or
adcl
xchg
fnsave
xor
in
add
push
inc
insb
jge
pushf
inc
sbb
enter
or
jmp
inc
aam
jl
xor
inc
push
rorb
stos
in
push
mov
dec
inc
mov
jle
pusha
lock
bound
loopne
mov
mov
xlat
cmp
js
call
sbb
sub
mov
popa
arpl
and
jo
and
xor
insb
jnp
jb
mov
or
add
add
inc
cmp
sbb
icebp
and
inc
xchg
fdivl
sbb
test
push
stos
xchg
test
inc
int
js
insb
ljmp
and
push
shll
mov
mov
subl
dec
in
pop
aam
orb
imull
and
sub
adc
mov
insl
sub
jecxz
repnz
lds
test
inc
pusha
cmp
mov
cmpsl
insl
mov
mov
movsb
cwtl
hlt
lret
mov
jno
xor
and
movsb
and
movsb
int
outsb
lahf
test
jp
fldt
fwait
sti
push
add
mov
loope
inc
aam
pop
or
inc
xrelease
das
cmc
fstps
ja
dec
xchg
mov
clc
jb
loopne
cmp
repnz
adc
loop
push
add
mov
ret
jmp
pop
fisubrs
sub
sbb
sbb
test
add
push
decl
push
push
notl
fstpt
loopne
dec
test
xor
ret
shll
pop
pusha
jne
pop
fwait
xchg
shll
in
add
stos
movsb
dec
xor
ss
icebp
in
sub
and
sbb
xchg
test
mov
or
jo
mov
inc
mov
mov
movsb
int
dec
sbb
rcll
mov
fnsave
test
jns
ret
push
es
or
jno
xor
inc
orl
mov
fcoms
add
pop
das
fisttpll
sub
aam
pop
and
into
and
ffreep
mov
divl
daa
cmpsl
adc
sti
mov
mov
mov
xor
mov
mov
push
test
loop
mov
lahf
fsubp
inc
push
pop
sub
inc
lcall
cmc
or
stos
pop
xchg
cli
cli
adc
loop
mov
insb
arpl
arpl
sbb
out
and
push
adc
sarl
je
add
negb
arpl
psubb
cld
jmp
loop
jmp
stc
mov
pop
fmull
in
repz
sbb
negb
test
ret
in
ljmp
lcall
add
sub
or
add
aaa
out
xchg
mov
ja
or
out
push
sub
pop
add
sub
inc
jle
jb
cld
mov
jno
repnz
dec
cmc
int3
push
aam
movsb
push
js
fnstsw
xor
ret
mov
jne
xchg
pusha
call
pop
mov
xor
clc
cmc
and
mov
lds
outsb
outsl
xchg
arpl
negb
sub
js
push
mov
xchg
inc
rorl
mov
or
sbb
arpl
xchg
popl
sub
mov
lods
jg
push
aam
mov
outsl
not
sahf
pop
add
inc
push
inc
scas
sbb
call
mov
push
cwtl
xchg
fidivl
insl
mov
movsb
rcrb
repnz
insb
xchg
add
mov
xchg
aaa
cmp
ret
insl
pop
sub
stos
adc
pop
inc
jle
outsl
movsl
jl
cmp
movsb
clc
popa
mov
xor
pushf
ljmp
push
jmp
int3
jmp
aas
dec
xchg
mov
dec
and
add
xor
ret
hlt
push
mov
ret
cli
add
jb
inc
xor
cmp
outsl
mov
jp
xlat
mov
cmp
fidivrs
test
rcrb
hlt
fwait
mov
out
jecxz
test
push
test
stos
int
fildll
or
push
lahf
sti
push
xor
shl
das
inc
test
push
cmp
in
push
adc
jbe
pusha
mov
pop
mov
add
xchg
movsl
mov
mov
fdivrl
ja
je
jno
lret
orb
gs
dec
mov
scas
ss
cmp
mov
lods
sbb
push
insl
test
jmp
cs
outsl
ds
jb
lds
mov
sub
sar
push
sub
dec
pop
leave
pop
int3
std
xchg
xlat
adc
push
jecxz
xor
clc
leave
lcall
sti
push
inc
roll
icebp
je
sub
movsb
aam
push
scas
repz
mov
testb
jp
sbb
hlt
lret
movsl
repz
inc
fiaddl
sarl
aas
or
jns
mov
addr16
fadds
pop
in
adc
pop
imul
sarl
lods
jnp
xor
jmp
inc
push
fidivrl
pop
out
cmpsb
sarb
mov
adc
inc
dec
or
add
cmc
enter
imul
jbe
cmp
dec
xchg
mov
and
dec
aas
mov
cld
add
pushl
fdiv
pop
cmp
sbb
sbb
add
icebp
jae
out
xchg
leave
add
aaa
xor
and
movsb
dec
mov
xchg
mov
adc
int3
cmpsl
or
xlat
test
jmp
jl
pushf
xchg
cmpsl
arpl
or
jb
jge
xchg
or
adc
cmp
xchg
ljmp
mov
imull
hlt
xlat
mov
out
arpl
lcall
mov
ds
test
mov
fcmovnu
mov
sub
hlt
cli
or
lret
imul
popa
lods
pusha
inc
jno
iret
or
out
nop
cmp
movsl
cmp
jno
hlt
fwait
mov
ss
lret
jp
fimuls
inc
notl
sub
fsubl
cwtl
stos
into
out
lret
jl
jo
mov
out
push
pop
fcomps
lret
pop
dec
std
pusha
frstor
lcall
or
add
xor
push
or
mov
ret
out
inc
lret
pop
in
stos
xchg
mov
or
adc
dec
and
adc
adc
sbb
jmp
cwtl
fs
out
ret
daa
lea
lods
xor
into
ret
push
mov
fwait
mov
jbe
popa
pushf
idivl
sub
loope
popa
sub
dec
out
mov
and
push
add
mov
mov
orb
popa
in
fldl
mov
mov
cmpsl
cltd
jg
enter
arpl
cmp
cs
sub
shlb
xchg
arpl
lea
lret
loopne
add
mov
aam
test
sbb
rcr
popa
ja
fwait
xor
pop
in
adc
mov
out
push
mov
fwait
mov
loope
lret
xor
int3
xchg
cmp
dec
setbe
inc
inc
mov
cwtl
push
add
test
or
sarl
popa
iret
out
test
dec
cmc
outsb
ret
mov
in
fidivl
jle
lds
je
mov
cmpsb
jle
inc
loop
push
sub
cs
jg
icebp
mov
cmc
shl
push
imulb
lcall
xor
loope
mov
and
out
aas
std
aad
mov
fdivs
int
xchg
stos
jns
shrb
jle
ljmp
push
pop
jle
pop
xor
xchg
xchg
pop
addr16
sahf
mov
mov
popa
jge
adc
popf
fdivrs
iret
sub
pop
jno
pop
jns
cmp
cmpsl
ficoms
into
pop
mov
fwait
add
sti
add
pop
inc
jnp
jne
push
jl
xlat
cld
mov
xchg
iret
xchg
dec
loopne
stos
jp
shlb
push
jl
inc
dec
cs
inc
rcll
mov
xchg
mov
subb
xor
fcomps
cs
daa
jmp
fsubrl
sub
lea
xchg
lea
and
push
xor
adc
mov
xor
imull
punpckhbw
dec
cs
call
aam
add
push
aas
mov
ficomps
lret
jp
test
rcll
loopne
pushw
ljmp
lret
sahf
shll
pusha
push
push
shlb
xlat
inc
jns
cmp
rolb
inc
and
or
push
cmc
sbb
sub
xor
jp
mov
mov
decl
cmpsl
sbb
pop
ljmp
loopne
pop
pop
stos
pop
pushf
pop
ds
sarb
adc
mov
mov
scas
xor
mov
fwait
mov
pop
loopne
rcrb
sbb
xor
xlat
movsb
sbb
adc
addr16
xchg
out
pop
push
cmp
add
or
mov
lock
inc
xor
in
cmpsl
fldcw
fs
pop
std
mov
lret
shl
sbb
mov
idivl
jge
adc
dec
jns
fmull
dec
or
mov
adc
dec
repnz
push
push
push
les
icebp
mov
pop
sahf
inc
outsl
mov
add
pop
sbb
xchg
and
xchg
aad
addb
and
mov
pop
xor
repz
jb
loop
sub
sub
pop
iret
stos
imul
cmpsb
jge
push
in
repnz
mov
out
or
dec
or
ret
pop
popa
push
cmpsl
pop
adc
mov
jbe
sbb
mov
scas
icebp
in
xchg
outsl
imul
movb
mov
xor
mov
push
push
xchg
mov
dec
popa
jbe
xchg
stos
cmpsb
cltd
mov
mov
das
xchg
loope
pop
in
push
cltd
lret
imul
addr16
dec
cmpsb
bound
das
dec
mov
mov
loopne
sti
jne
nop
jno
std
xor
int
pop
jmp
pop
fdivrl
sub
popaw
mov
xchg
sbb
ficompl
push
mov
hlt
out
sub
cltd
cmp
imul
lret
push
fmul
je
in
pop
or
dec
xlat
je
lahf
adc
cwtl
xchg
add
pop
ret
repnz
xchg
test
mov
jmp
sti
mov
mov
lods
mov
adc
and
xorb
adc
push
arpl
lds
int3
into
mov
cltd
push
pop
out
jo
stos
adc
pop
cmpsb
inc
sbb
sbb
lea
cs
dec
stos
jbe
fwait
out
repz
push
insb
xor
pusha
cltd
adc
mov
and
std
jnp
inc
dec
insb
loope
push
lds
jle
mov
mov
orb
les
negl
enter
xchg
ja
ja
in
testl
cmp
mov
sub
addr16
insb
outsl
xor
movsl
push
dec
aam
bound
xbegin
and
paddb
cmpsb
rol
gs
adc
sub
mov
xor
inc
loope
scas
xchg
in
lcall
enter
ror
adc
mov
add
xchg
jmp
mov
stos
imul
xor
sub
shrl
dec
movl
or
push
shr
pop
xchg
or
movsl
fisubrl
outsb
mov
mov
inc
cld
sub
div
leave
add
jg
loope
dec
cltd
enter
push
lods
in
scas
push
insb
sbb
roll
push
push
daa
jmp
jns
cltd
jne
aas
and
movsb
roll
mov
ffree
aam
jne
jns
cmp
daa
add
or
adc
mov
arpl
imul
mov
sarl
addr16
rclb
movsb
stos
xchg
pushf
ljmp
sub
cmovnp
into
out
ret
mov
adc
in
mov
test
frstor
in
mov
mov
cmp
xlat
xchg
ret
fnstcw
cli
cmp
mov
scas
cmpsl
pop
les
aam
sub
mov
mov
jp
push
sbb
push
stos
inc
xchg
xchg
sti
xor
push
out
outsb
iret
nop
scas
sub
sub
fimuls
inc
xchg
lea
pusha
inc
and
enter
stos
pop
cwtl
std
ret
pop
repnz
int3
fdivs
pop
ss
call
shll
scas
xor
adc
outsb
movsb
lods
add
fsubp
out
push
jns
or
push
gs
loop
push
stos
sbb
enter
inc
cmc
jno
dec
sbb
scas
inc
cmpsb
jb
add
cmp
xor
dec
leave
dec
adc
in
aaa
aaa
outsb
pop
push
mov
add
into
les
lret
loope
xchg
pop
or
jne
ret
push
mov
pop
mov
sub
iret
pushf
aaa
into
push
movsb
mov
add
lds
lret
jecxz
inc
mov
faddp
cmpsb
popf
popa
xchg
call
je
in
xchg
jno
repnz
out
cmc
adc
and
dec
lahf
test
outsl
enter
rol
xchg
sub
mov
or
pop
push
pop
xor
jl
out
add
mov
mov
outsb
xchg
bound
inc
out
outsb
insb
popf
add
lds
cmp
lret
jnp
ds
sbb
push
andb
mov
iret
stc
sbb
push
mov
mulb
lahf
add
push
loope
inc
arpl
in
jge
scas
push
pop
int3
xchg
cs
clc
and
inc
rcrl
cmp
mov
adc
mov
cmp
and
inc
loop
mov
cmp
sarl
pop
int3
stos
adc
mov
shrb
addl
movsl
jae
pop
jb
add
cltd
push
mov
mov
sbb
ja
push
xchg
jge
adc
inc
jne
rcll
adc
lea
adc
popf
dec
clc
jae
xor
jge
lahf
arpl
ret
mov
dec
rcr
jnp
push
cmp
inc
jo
and
xchg
push
stos
jae
xor
dec
fs
xchg
dec
push
add
xchg
sub
sbb
and
insb
repnz
arpl
xchg
or
push
or
pop
sahf
sub
mov
test
fs
xor
cmc
loope
sahf
xor
shrb
fstpt
pop
cli
mov
scas
cmpsl
mov
imulb
push
lods
dec
loop
jl
repz
insb
pop
inc
mov
xchg
dec
inc
push
subl
outsl
insl
lahf
lahf
dec
and
mov
and
gs
mov
addr16
lea
xchg
cmp
ret
lret
fs
mov
and
loopne
xchg
pop
ds
xchg
icebp
ret
pop
aas
jge
cmp
repz
cmpsl
pop
mov
xchg
jecxz
outsl
mov
data16
daa
movsb
jp
and
mov
sub
test
inc
cmpb
push
or
jle
es
xor
sub
push
xor
imul
jg
in
push
add
mov
dec
dec
nop
cwtl
lods
mov
insb
cld
sbb
xor
addb
cld
dec
repz
cli
nop
sbb
jno
ret
nop
mov
jns
cmp
or
test
push
or
pop
repnz
pusha
clc
stc
lock
pop
rcll
jle
rcrl
jecxz
das
jne
test
sub
adcb
pop
mov
addr16
sub
lea
push
aas
or
inc
pusha
das
rorb
or
sub
adc
push
inc
xchg
fs
cmp
fs
mov
and
sbb
lods
mov
sbb
lahf
xchg
push
scas
xor
dec
mov
out
mov
fsubl
xor
jns
xor
push
mov
xor
xchg
adc
xchg
lcall
out
test
scas
cld
inc
fcmovbe
jnp
fistl
das
test
outsl
dec
std
mov
ret
cmpsb
jp
or
sub
sub
aas
ds
pop
out
rclb
ss
jl
inc
je
sub
add
xor
pop
xchg
div
xor
repz
pop
aaa
cmpsl
leave
fwait
sbb
xchg
outsb
les
jecxz
les
in
or
sbb
jb
jnp
pop
dec
xchg
shrl
call
xchg
fsubs
cmp
mov
rol
int3
inc
mov
sub
mov
das
and
scas
inc
xchg
and
mov
inc
inc
pushf
adc
adc
decl
push
mov
loope
inc
inc
aad
jl
lahf
inc
push
out
mov
push
and
xchg
ljmp
push
jnp
lret
inc
xor
lcall
inc
add
push
loop
ss
test
cli
sarl
cmp
push
imul
sbb
gs
push
es
push
ret
push
out
push
iret
lcall
imul
in
pop
stos
nop
mov
push
mov
sub
jns
inc
jg
jmp
or
and
pusha
sbb
cmp
jae
dec
push
scas
xor
mov
or
das
enter
iret
xchg
mov
cmp
iret
fsts
jno
les
xchg
lods
dec
xorb
or
xor
pop
mov
sub
fcom
clc
int3
xchg
in
clc
subb
mov
or
rolb
cmpsb
inc
imul
cli
lods
mov
lcall
mov
lret
add
inc
mov
leave
testl
xor
enter
pop
fcompl
xor
mov
xchg
addr16
loop
jae
mov
or
mov
ret
inc
inc
jmp
aad
shll
add
aad
std
mov
xor
vcvttpd2dqy
or
in
and
test
aaa
xchg
fcmovne
cmp
imul
dec
add
and
rcll
arpl
mov
sub
gs
loop
inc
inc
adc
lcall
psrad
dec
jno
xor
lret
xchg
ja
jnp
dec
cmpsl
xchg
loope
push
enter
scas
dec
daa
lods
nop
cwtl
ret
mov
out
mov
movsb
inc
je
dec
popf
idivl
pop
out
mov
sbb
cltd
cmpsb
inc
addl
aaa
xor
filds
mov
and
dec
xchg
xchg
ror
adc
mov
pop
sub
mov
dec
and
aad
xor
xchg
test
inc
in
sub
fisttpl
in
mov
popf
cwtl
or
cld
add
and
or
mov
int
imul
or
cmc
adc
cmp
in
out
addr16
rol
xchg
add
or
loop
aam
out
cmp
or
xor
mov
dec
lods
in
push
jo
ds
je
mov
inc
fnstenv
out
push
test
and
in
inc
cmp
lods
cltd
add
or
cmpsb
xchg
adc
das
cmp
out
inc
mov
sbb
stos
iret
jl
in
sbbl
js
pop
sub
andl
cs
pop
or
pop
push
push
jns
movsl
cs
xor
mov
push
xchg
xchg
add
jecxz
arpl
cmc
imul
cmpsb
inc
xchg
adc
out
push
xor
sti
cmpsb
add
out
sarb
jb
in
mov
insb
pop
inc
clc
mov
mov
pop
scas
and
inc
mov
dec
dec
shlb
lds
adc
dec
and
xor
jno
mov
lret
jge
add
test
js
das
sbb
dec
pop
stc
xchg
int3
nop
call
pop
adc
jecxz
popa
xor
push
dec
mov
pop
inc
out
movsl
jno
iret
mov
jnp
mov
imul
push
test
sbb
add
es
cli
dec
repnz
scas
push
out
pusha
mov
enter
sti
fwait
push
mov
pop
jg
jecxz
jb
inc
data16
pop
jge
cwtl
daa
imul
xlat
loope
mov
jo
mov
dec
add
push
test
adc
mov
and
push
fidivs
mov
pop
dec
dec
imul
or
es
mov
add
lahf
xchg
cs
je
ss
and
sbb
out
xchg
sub
jmp
xchg
inc
test
dec
movsl
mov
jge
out
lahf
out
hlt
xor
js
mov
repz
int
js
inc
mov
mov
mov
xor
das
lds
sub
mov
mov
in
xor
and
mov
mov
adc
iret
clc
mov
sbb
sbb
rorl
sub
fnstcw
and
sbb
mov
outsl
inc
mov
test
push
mov
inc
mov
imul
or
shll
arpl
or
or
push
push
imul
xchg
push
out
ficompl
repz
popa
pusha
std
repnz
pop
xor
jne
mov
test
cltd
pop
jmp
adc
insl
xor
push
jle
dec
je
adc
jb
lea
add
out
test
push
mov
mov
fidivl
jo
shll
push
pop
scas
es
and
sbb
pusha
sub
popf
push
in
inc
mov
xchg
sub
jmp
xchg
sub
and
add
outsb
sub
mov
jg
in
fldl
cmp
imul
mov
loopne
mov
mov
sbb
add
lcall
and
ljmp
jecxz
xor
jno
sbb
pop
cld
jl
xchg
push
les
sub
xor
pop
out
jb
std
xchg
rcr
int3
mov
sbb
fwait
adc
push
cmc
mov
xor
sub
loope
fwait
jecxz
xchg
mov
push
mov
outsl
mov
ja
sahf
leave
pop
jge
xchg
orl
mov
imul
pop
pop
les
addr16
xchg
xchg
cmp
das
jbe
pop
call
out
sub
push
lret
and
sub
out
xchg
sub
mov
dec
jo
jns
jbe
cs
inc
and
ret
movhps
jo
cmpl
das
int
loop
or
pop
lea
inc
out
xor
add
sub
sti
xchg
and
xor
cwtl
xchg
mov
leave
iret
int
in
lret
pop
int3
sub
out
and
fcomp
mov
fildl
stos
lret
idivb
or
xor
cmc
adcb
mov
xchg
outsl
mov
mull
mov
sub
loopne
and
xchg
jle
or
setae
mov
adc
sub
or
push
xchg
jnp
and
mov
inc
fisttps
lea
popf
testl
sbb
pop
mov
jl
lahf
cmpsl
aaa
jp
std
out
scas
aam
cltd
adcb
stos
pop
and
inc
dec
sub
and
fldenv
testb
xor
xor
push
jmp
pop
pop
dec
pmullw
or
xor
cmp
push
lret
and
jbe
cmp
or
iret
aaa
inc
xchg
xor
loopne
or
xchg
mov
mov
mov
test
lods
mov
mov
in
add
loop
imul
stc
mov
dec
add
sbb
sbb
push
enter
mov
xchg
pop
pop
push
daa
filds
sbb
xor
aam
movsl
cmp
insl
xor
xor
std
fiaddl
imul
lods
mov
pop
sbb
inc
lock
cwtl
sub
lahf
pop
sbb
sbb
lcall
imul
adc
mov
xchg
or
leave
cwtl
test
lcall
pop
push
mov
sub
ds
cmp
pusha
push
aaa
decb
rcll
cs
popl
scas
dec
jno
lods
push
out
lahf
push
push
sarl
pushf
jne
mov
jne
fsubrl
jae
stos
pusha
scas
cmp
xor
adc
enter
dec
pop
xor
cmp
insb
add
adc
inc
jne
sub
test
add
push
fwait
fs
in
cmp
popa
add
pop
scas
data16
sahf
push
je
and
adc
das
in
clc
sbb
cmp
jg
and
lret
stos
or
mov
pop
cmc
into
push
adc
mov
push
lods
mov
mov
mov
std
out
adc
adc
frstor
ja
inc
jns
jp
mov
scas
out
push
loop
xchg
pop
and
push
and
inc
pop
dec
and
lea
and
repnz
ss
sahf
sbb
popa
repz
stc
inc
push
mov
pop
test
loope
cs
mov
roll
int3
jbe
js
or
dec
test
and
mov
push
std
mov
jp
xchg
mov
movsl
xchg
sub
push
push
bound
clc
mov
xchg
mov
out
mov
lret
mov
cmp
dec
push
sbb
and
inc
cmp
daa
loopne
jb
mov
int3
pop
pop
pop
lds
int
cmp
ss
stos
jle
popf
pop
roll
or
jmp
mov
push
pop
int3
shlb
add
add
out
cmpsb
aad
int3
xchg
clc
scas
push
adc
icebp
loopne
or
cs
gs
loop
outsb
mov
dec
fmull
shlb
fadds
xchg
sti
xor
adc
loop
popa
int3
jle
mov
jae
and
arpl
ror
rcrb
mov
adc
jecxz
ljmp
fwait
mov
out
shl
cli
loopne
xor
and
mov
int
mov
push
stos
mov
test
mov
add
out
add
inc
mov
pop
pop
cmc
sub
dec
sub
xlat
xchg
jmp
repnz
or
add
pop
mov
lahf
js
fldl
push
fistpll
cwtl
jnp
rcrb
xor
cli
lea
inc
and
or
imul
cmp
addr16
std
cwtl
aam
rorb
pusha
mov
jnp
shl
test
xor
test
push
jns
sahf
add
cltd
adc
les
mov
cmp
fisubrs
and
cmpsb
lea
daa
popf
sub
and
fwait
inc
xchg
rcrb
cmp
pop
mov
cwtl
lods
dec
lahf
mov
sbb
hlt
jnp
repz
rcrl
cli
clc
and
lods
imul
jb
inc
xchg
rorl
xchg
adc
cltd
lahf
inc
imul
pop
lods
sub
sub
ss
mov
push
mov
mull
sbb
in
cmp
cmp
sub
and
cwtl
mov
sbb
out
pop
mov
mov
mov
push
out
jl
and
ret
roll
adc
xchg
inc
sbbb
mov
pop
xor
pushf
imul
mov
inc
out
subb
mov
ss
cli
inc
pop
jbe
xchg
add
fisttpl
mov
mov
lods
in
es
imulb
bswap
fidivl
scas
or
scas
test
std
xor
adc
arpl
and
sbb
push
jne
lods
enter
imul
leave
xor
jl
fildll
popa
mov
rorb
ljmp
sub
sbb
loopne
aas
fnstcw
mov
or
xchg
push
fwait
mov
mov
ja
enter
xor
mov
sbb
mov
or
mov
inc
pop
or
fwait
jp
loopne
in
mov
dec
popf
push
in
sub
inc
scas
mov
cmp
stc
stc
stos
add
fwait
sarb
fs
push
cmp
push
lods
imul
out
mov
fistps
cwtl
cld
std
sbb
inc
sub
lock
xor
pop
loopne
sbb
push
dec
in
fwait
cmpsb
lret
movsb
in
adc
or
fwait
jmp
mov
fildll
cltd
push
ret
jne
push
leave
std
push
and
push
cmp
pop
push
daa
lods
inc
out
nop
ljmp
orl
mov
jae
mov
xorb
push
and
fistl
adc
sahf
pusha
pop
out
jge
sbb
fadds
ss
cld
aam
jns
adc
ja
or
pop
fs
das
hlt
mov
sti
out
inc
jns
or
int
xor
into
in
fucomp
sub
push
outsb
insb
dec
sub
xchg
jecxz
cs
lods
mov
roll
xchg
sahf
jl
jae
outsl
in
sub
jl
cmovbe
scas
mov
lea
int
es
gs
rorb
push
iret
iret
or
jge
push
aaa
movsb
sbb
jb
dec
mov
pop
mov
cmp
pushf
popa
inc
or
popf
push
jbe
mov
icebp
aad
mov
push
jno
insb
or
and
sbb
stos
mov
cltd
push
int
sub
int3
xchg
inc
stos
fcomps
jg
jae
xchg
mov
push
fisttps
stos
movsl
xor
daa
aaa
cmpb
mov
push
mov
pop
xchg
add
cmp
insl
sub
pop
mov
test
inc
xchg
in
cmp
push
push
and
aad
cmp
and
and
loop
jp
mov
dec
sar
cmp
mov
cmp
ret
or
out
shl
mov
cmp
mov
or
and
jg
mov
xor
dec
aad
pushf
push
jmp
or
test
push
dec
loope
cmp
push
lods
push
dec
lret
pop
and
hlt
int3
mov
cmp
sahf
adc
push
iret
repnz
fs
loopne
sbb
push
and
orl
fldcw
mov
xor
aas
outsb
arpl
xor
dec
sti
pop
xor
jecxz
clc
dec
push
andb
jl
ja
jecxz
or
push
sub
out
cwtl
decb
mov
sbb
xor
push
and
xchg
gs
jge
push
adc
adc
inc
sbb
into
iret
jl
outsb
scas
hlt
xor
xor
mov
mov
xor
push
jmp
or
test
pop
fistl
ret
add
mov
xor
or
mov
mov
inc
jge
lret
loop
dec
xor
jl
add
push
and
loope
mov
icebp
mov
cmp
out
or
jb
push
orl
nop
mov
mov
sub
mov
mov
jmp
pop
fistps
inc
sysenter
sub
xor
sub
dec
cmp
xchg
jne
jmp
jecxz
inc
fmull
or
les
and
cmpsl
mov
ds
push
stos
bound
out
rolb
mov
sahf
mov
add
push
arpl
daa
mov
adc
je
sbbb
xor
icebp
std
test
icebp
pushf
mov
test
stos
xchg
xor
push
mov
rcll
mov
call
into
lahf
sub
xchg
sar
add
aaa
repnz
adc
cmpl
cmpsb
cmpsl
lods
dec
add
dec
stos
cld
in
mov
in
jmp
inc
stos
call
jbe
insb
in
pop
cli
jge
mov
cmp
mov
pop
mov
pop
movsb
es
adc
fsubp
rorl
pop
fbstp
mov
scas
scas
jns
cmp
dec
xorb
dec
inc
push
outsl
push
jle
pop
sbb
imul
loope
mov
push
mov
or
test
daa
cmpsl
in
idivb
pop
mov
jne
add
lods
pop
insb
std
imul
add
jecxz
mov
fs
and
cmpsb
pusha
xchg
lock
fs
adc
sub
and
mov
arpl
mov
mov
dec
lods
imul
ljmp
in
cs
inc
xchg
pop
sub
aaa
ljmp
adc
arpl
lret
idivl
add
cli
jae
cmp
aam
jg
push
push
push
les
or
fbld
xor
fs
scas
hlt
cli
jae
rcrl
adc
movsb
sub
pop
cmpsb
cld
xor
cli
popf
gs
cmp
xor
aam
in
sti
loopne
add
dec
or
outsb
loopne
lahf
sbb
fmul
sbb
std
in
movb
push
push
dec
movsb
cmp
pusha
mov
aaa
mov
mov
push
fisttps
and
loopne
clc
sub
xchg
push
stos
fdivs
hlt
pop
cmc
loope
push
mov
mov
insl
add
loope
dec
adc
pop
mov
fs
inc
movsb
dec
fistl
mov
jne
inc
out
push
xchg
xchg
pop
sarl
or
push
jle
imul
xor
mov
shlb
sub
add
shlb
sub
int3
sbb
xchg
fldt
add
jns
jle
add
aam
int
pop
in
sbb
jnp
fnstsw
mov
out
pop
lahf
out
ja
add
add
or
sahf
or
xchg
enter
cmpsl
sub
cld
seto
fs
cld
push
pop
push
popf
mov
jp
imul
jle
xor
and
mov
or
int
ja
and
imul
dec
test
lcall
popa
iret
loope
int
subl
scas
sti
fwait
pop
jmp
mov
in
mov
xchg
and
xor
addr16
adc
pop
das
addr16
mov
int
lods
pop
repnz
push
pop
cmpsl
push
aas
sbb
clc
mov
jno
test
fmull
shrb
jo
aad
fdivs
and
dec
pushf
out
es
enter
jae
andnps
jne
cmp
xor
mov
shl
jns
jnp
lret
cmp
add
pop
sub
and
push
fwait
aaa
daa
jl
xchg
sub
xor
cmp
sub
pop
icebp
fxch
add
sti
adc
inc
sub
mov
pusha
inc
sbb
pop
lret
sbb
inc
mov
or
jle
arpl
or
push
cmp
out
icebp
clc
subl
push
rolb
leave
popa
fistpll
mov
adc
add
pop
ds
adc
xor
adc
xchg
ljmp
pop
xchg
or
mov
lcall
jp
stos
sbb
sub
inc
or
aas
push
scas
pop
and
xchg
cmp
push
or
xor
enter
lods
mov
xchg
jmp
mov
xor
inc
in
insl
dec
loop
in
mov
and
adc
xor
fisubs
xor
lods
or
jnp
fwait
xchg
cmpl
mov
pop
lret
mov
fwait
in
dec
mov
es
lahf
inc
aas
mov
cmp
push
cmc
loop
insl
mov
out
rorb
dec
sbb
aas
sub
dec
mov
int3
stos
or
mov
jecxz
cltd
lret
dec
mov
scas
fcom
mov
insl
les
lret
dec
lcall
ss
cmp
add
loop
adc
or
jp
pusha
addr16
push
rcrb
scas
insb
sbb
jb
jo
test
mov
int3
jns
scas
and
push
mov
loop
mov
adc
mov
or
pop
push
xor
call
fwait
cmp
adc
andb
push
xchg
sbb
lods
data16
rcrb
sub
filds
ds
adc
insl
lods
dec
addr16
add
xor
into
dec
repz
pop
cmp
out
cs
mov
inc
das
jle
push
xor
loope
ret
dec
push
repz
push
mov
mov
stos
rolb
xor
push
mov
xor
insb
mov
push
xlat
inc
sbb
ljmp
dec
enter
fcmove
lods
jne
gs
aas
and
push
pop
mov
divl
mov
fildl
and
and
xchg
std
out
out
jl
push
leave
mov
or
xchg
inc
std
mov
inc
pop
jle
ret
add
sbb
sub
pop
stos
lret
adc
sub
sbb
imull
dec
loope
mov
mov
mov
sub
and
icebp
movsb
into
pusha
adc
lds
jmp
mov
jl
cwtl
push
icebp
mov
jmp
inc
repz
or
xor
or
push
mov
lods
cmpsl
pop
xchg
mov
call
push
cmp
mov
lods
or
insb
cltd
dec
xchg
cmp
lcall
clc
movsl
jo
and
pushf
push
adc
orb
icebp
out
pushf
push
iret
mov
mov
imul
xchg
jecxz
mov
pop
insl
push
cmp
adc
push
in
in
jbe
arpl
stos
adc
imul
pop
fsubl
inc
mov
pop
data16
lret
fdiv
sbb
outsb
insb
mov
dec
mov
inc
orl
or
ljmp
jecxz
pop
jne
add
fmul
xchg
dec
iret
xlat
and
jno
fcmovb
test
aas
scas
dec
push
add
dec
sbb
sub
sub
add
cmpsb
dec
shrl
push
cmp
mov
or
cmovo
test
and
das
int3
or
outsb
or
aad
pop
mov
pop
sub
jo
sub
push
xchg
ss
adc
stc
maskmovq
ror
sub
lods
mov
dec
push
test
xchg
add
pop
xchg
adc
jecxz
cli
cmp
or
mov
pop
orl
mov
testl
notb
outsb
sub
or
pushf
test
jns
cmc
test
jl
or
lds
outsb
fistpl
inc
test
sbb
dec
dec
sbb
xor
lret
sbbb
shll
and
lods
out
jecxz
pop
dec
xor
std
scas
jle
sbb
cltd
push
int
ret
add
clc
jl
push
or
fwait
xlat
dec
mulb
inc
jae
adcb
inc
inc
shrl
test
lret
stc
and
repnz
xchg
cmp
movsl
or
orb
lods
xchg
insb
mov
les
movsb
addl
aas
movsl
frstor
cmp
or
mov
into
mov
ret
xor
test
inc
mov
lcall
incb
or
sbb
sbb
push
es
mov
mov
aaa
and
lahf
and
loopne
sub
xchg
dec
adcb
loope
dec
push
imul
adc
xchg
movd
or
testl
xor
mov
push
aam
jmp
cmpsb
repz
jno
test
cmp
sbb
adc
sbb
repnz
adc
sub
mov
stc
push
push
dec
add
sbb
loope
std
out
and
sbb
pop
push
push
cmc
addr16
stos
addr16
sbb
rol
cmc
imulb
push
or
sub
cs
mov
adcb
rolb
cmp
out
stos
or
xchg
bound
jae
aas
lea
cmp
xchg
mov
mul
sbb
jmp
jbe
inc
dec
cmc
add
inc
jns
imul
add
sbb
xchg
mov
mov
sub
mov
sub
in
xchg
decb
repnz
jge
nop
aam
popf
lds
imul
cltd
and
jecxz
fistpll
insb
mov
jge
mov
rcrb
xor
aad
inc
clc
xor
add
addl
orl
sbb
sub
sub
cmp
mov
xchg
sbb
in
ljmp
xchg
pop
inc
std
movsb
icebp
imul
cld
pop
inc
shlb
lea
aad
ss
pop
popf
jbe
xchg
xchg
out
jl
mov
sbb
xor
insl
into
sbb
repnz
inc
cmc
jl
and
dec
fucomi
dec
int3
xor
popf
fwait
jo
jns
cli
inc
push
inc
mov
pop
call
rcrb
popf
aad
xor
addr16
lods
xchg
mov
js
and
outsl
frstor
jb
dec
aam
insl
sarb
loopne
jnp
out
dec
lds
mov
ret
xor
inc
mov
aaa
enter
adc
iret
jae
es
mul
test
xchg
sbb
mov
xchg
lret
or
sarl
push
xor
mov
pop
cld
push
mov
jle
jb
push
aam
dec
pop
push
les
lcall
movsb
xlat
mov
lock
aam
ljmp
sbb
call
pop
push
cmp
and
movsb
lcall
or
push
xor
insl
nop
adc
pop
inc
ret
add
sbb
xchg
xor
adc
sub
mov
lret
into
xchg
in
or
cwtl
movsb
inc
aam
inc
jge
cmc
fs
ficomps
repz
scas
cld
and
shlb
sub
ret
aam
fstps
pop
jl
jmp
mov
mov
fsub
in
pop
insb
sbb
shrb
fcoml
fldcw
out
mov
push
cmp
std
pop
test
call
mov
test
pushf
and
dec
sbb
test
lahf
aaa
in
cli
shll
dec
push
jno
mov
push
test
fstpt
mov
dec
or
into
loopne
push
mov
xchg
sbb
push
jbe
das
iret
jge
cli
stc
sub
in
push
call
dec
jne
in
fbld
mov
out
or
outsb
call
jns
xchg
std
and
les
leave
cmp
mov
inc
pop
in
pop
testl
dec
pop
xchg
push
push
push
pushf
icebp
cmp
lock
sbb
cmp
repnz
outsb
jmp
dec
outsl
or
xlat
xor
notl
inc
sub
mov
mov
cmpsl
enter
push
sub
xchg
push
cs
in
stc
sub
sub
out
jno
cmp
cmpsb
testl
push
push
popa
popf
pop
sbb
insl
inc
jecxz
xchg
rclb
or
pop
shrl
loope
out
idiv
xor
outsb
mov
xlat
popf
imul
popf
jo
pop
fdivp
adc
jno
inc
cwtl
and
mov
nop
push
xchg
bound
xlat
mov
fmuls
push
lock
mov
inc
adc
mov
cmp
xor
cli
jbe
lods
or
nop
push
push
pusha
out
mov
movsb
in
not
stos
adc
xchg
mov
push
lret
ficoml
adc
repnz
add
cmp
push
pop
pop
push
mov
adc
pop
add
push
adc
mov
das
cmp
loop
stos
ja
rcrl
hlt
mov
jno
jle
dec
stc
mov
imul
add
dec
jecxz
mov
push
outsb
cmp
cli
outsl
pop
in
pop
xor
sub
push
int3
aam
inc
daa
lret
adc
cltd
outsb
in
jge
jg
or
sahf
sti
pop
dec
loop
push
ficoml
push
imul
out
or
mov
push
fildl
xlat
mov
add
sbb
pop
jge
sub
mov
aas
outsb
or
stos
and
ds
daa
sbb
xor
jmp
test
push
nop
cs
stos
stos
repnz
pop
fstpt
and
or
push
add
sbb
or
les
add
jnp
cmp
jg
rorl
mov
dec
cltd
call
jge
mov
xchg
inc
insb
testb
lret
mov
xchg
mov
push
testb
pop
int3
sub
pop
sbb
mov
pop
stos
outsb
fstl
int
jns
jbe
sahf
pop
fcomp
xor
add
stos
jp
or
sub
mov
or
popa
pop
sbb
xchg
or
ret
or
das
xchg
cltd
cmp
fdivl
push
sub
xor
addr16
xchg
sbb
mov
outsb
popa
mov
cmp
cmp
cmpsl
pop
pop
arpl
aad
rorl
push
ret
push
movsl
cmp
das
movsb
xor
clc
mov
sub
incl
es
stos
scas
orb
adc
es
roll
rclb
cmp
pop
nop
and
mov
pushf
loop
and
data16
out
add
push
stos
outsl
and
mov
pop
pop
repz
aaa
fisttpl
cmp
pop
cmp
popa
sub
nop
imul
nop
mov
and
push
or
dec
push
test
xchg
test
xor
loope
std
f2xm1
popf
ret
dec
xchg
fsubrs
leave
stc
aas
orl
xchg
out
cmp
out
sahf
xor
mov
sahf
inc
fwait
cmpsb
and
cmp
dec
fwait
jle
testl
in
mov
js
das
rcrb
jg
mov
pop
mov
in
pop
and
daa
cmpsl
mull
cmp
xor
sbb
aam
add
outsl
pop
fisubrl
imul
pxor
mov
repnz
or
stc
inc
sbb
push
leave
aaa
stc
jl
mov
cmp
scas
loopne
or
jnp
notl
popf
inc
xchg
push
aaa
mov
lds
ja
cmp
xor
insl
js
add
inc
cmp
lock
mov
repnz
push
and
jae
dec
jno
outsb
mov
dec
je
cmp
push
push
into
jmp
xchg
xor
or
pop
jbe
repz
push
adc
out
out
in
mov
or
lods
and
mov
out
jb
hlt
stc
xchg
js
ss
sub
inc
and
push
add
sbb
fwait
je
in
arpl
push
cmp
pop
ret
stos
imul
cmp
jl
jmp
je
inc
adc
imul
or
imul
and
and
pop
xchg
mov
sub
mov
cwtl
mull
adc
dec
jo
test
je
mov
movsl
outsl
inc
test
and
cmp
lea
fnstsw
das
enter
dec
jecxz
inc
in
test
and
dec
lahf
cld
push
cli
fucomp
push
int
outsb
sbb
sub
pop
xor
mov
cs
mov
jno
add
pushf
fiaddl
mov
lods
out
sub
cmpsl
sbb
iret
sub
jecxz
push
dec
add
out
xchg
adc
push
fsubp
xor
push
iret
or
inc
push
aam
repz
lods
incl
pop
movsl
pop
sbb
and
dec
cltd
push
aad
mov
fwait
lods
mov
outsb
cltd
dec
jnp
adc
mov
fs
cmc
and
stc
inc
out
imulb
aaa
add
movl
shll
nop
out
bound
js
into
stos
sbb
mov
xor
push
je
movsl
aas
imul
inc
and
pop
fnstenv
push
pop
fs
ljmp
fldl
in
in
sub
and
idivb
out
loope
test
dec
cmp
xchg
add
dec
or
and
xchg
or
testl
sub
mov
lods
push
mov
push
pop
mov
dec
test
ret
mov
push
stc
dec
mov
scas
mov
out
pop
mov
pop
and
push
nop
scas
loope
mov
pop
jnp
jg
xchg
adc
insl
pop
ficoms
cmpsl
jp
lea
data16
outsl
xchg
sub
outsl
push
data16
sbb
jnp
and
or
sbb
mov
inc
sbb
int3
mov
pop
jae
mov
dec
mov
cs
and
pop
xor
outsl
jl
jp
lcall
popa
and
mov
mov
lods
decb
jb
xchg
jg
fimull
pop
shlb
pop
xlat
out
repz
data16
dec
fnstcw
pusha
cli
add
xchg
bound
xchg
insb
pop
in
push
aas
jbe
decb
das
pusha
jecxz
add
sub
mov
fcomps
inc
scas
lret
out
bound
aaa
mov
andb
sbb
lret
cmp
lret
sbb
dec
cmpsl
add
sub
ret
mov
xchg
dec
jmp
inc
xchg
stos
sbb
in
in
sub
scas
std
inc
push
add
pop
mov
inc
sbb
jno
mov
in
add
es
ljmp
mov
sbb
call
in
test
clc
and
movsl
mov
rorb
lahf
aas
dec
mov
mov
hlt
jbe
mov
popf
dec
std
pop
inc
xchg
mov
and
push
cmp
and
xchg
inc
test
cmp
lods
mov
lods
mov
cmp
call
pop
mov
jo
add
rdpmc
jecxz
fisubs
lret
mov
sub
inc
ficomps
in
jle
sbb
dec
push
mov
dec
xchg
xor
pop
ds
repnz
push
shrl
xorb
or
in
dec
push
lahf
cmp
push
loopne
arpl
push
xor
pop
fs
jp
movsl
push
gs
test
insb
out
movsl
daa
negb
out
mov
popa
clc
ja
add
out
push
sbb
loop
mov
xchg
loope
push
jg
loop,pn
sub
xadd
sub
aam
sarl
xchg
mov
or
popf
or
jne
lds
mov
xor
mov
or
lcall
adc
test
jg
stos
push
pop
shlb
std
push
fidivs
fistps
addr16
ret
xchg
push
arpl
mov
sti
push
xchg
imul
push
pop
and
cmp
lea
adc
cld
insb
insl
inc
xor
inc
fidivrl
jle
push
jecxz
roll
dec
jmp
pop
inc
shll
fwait
dec
mov
xchg
les
inc
test
mov
leave
inc
pusha
jp
scas
pop
push
and
mov
addr16
les
pop
aaa
adc
mov
sub
jnp
loope
lahf
cld
shlb
and
xor
dec
or
pop
jl
sbb
test
mov
lahf
mov
jo
rcrl
dec
ret
fidivs
adc
jl
cmpsl
ret
lcall
xor
sbb
mov
jl
xchg
sbb
lea
pushf
jle
fstl
into
mov
testb
cmp
or
jp
jle
sbb
inc
pop
sti
out
aad
cmp
stos
inc
outsl
sbb
push
mov
dec
addr16
inc
cli
xchg
shlb
filds
ja
pop
nop
and
cltd
lods
mov
adc
movsl
lret
das
rcll
stos
loop
push
je
xor
hlt
add
lods
add
and
lea
test
xchg
fbld
pop
scas
jno
orb
divb
add
add
xlat
sub
mov
scas
in
lretw
dec
loop
ret
test
stos
loope
mov
in
repnz
cmp
lock
fstpt
fs
cmp
pop
fs
mov
iret
stc
cmpl
dec
iret
cmpsl
pop
mov
ret
dec
orl
adc
mov
mov
lcall
mov
jl
iret
ret
call
andl
aad
xor
test
dec
mov
stos
aaa
int
loop
add
out
test
pop
mov
aad
lret
ret
pop
add
mov
ljmp
jecxz
jle
loope
in
scas
jg
inc
mov
add
sub
fstpt
fisttpll
or
sub
jmp
jl
hlt
addb
negb
mov
jns
inc
sub
lahf
mov
jmp
pop
icebp
mov
imul
jge
arpl
pop
pop
mov
adc
jge
mov
push
push
cwtl
hlt
popa
fists
lods
sbb
sarb
mov
iret
add
pop
fstpt
sbb
into
pushl
jo
hlt
xor
bound
mov
fimuls
cltd
arpl
sbb
mov
mov
sub
pop
adc
out
fnsave
das
lds
pop
lret
outsl
xchg
fprem1
aaa
insb
bound
sub
mov
addl
je
aaa
ret
cmp
jb
das
or
xor
xchg
in
jecxz
out
sahf
jns
dec
lods
jns
fsubrs
mov
push
aas
outsl
data16
pop
push
loope
test
xor
cmc
loopne
sbb
inc
mov
fidivl
pop
cmc
lret
ss
dec
jns
mov
sarb
dec
sub
xor
scas
out
sbb
scas
mov
dec
lods
and
cmpsb
bound
aad
out
cmp
subl
jns
mov
xchg
ja
or
ss
add
mov
adc
pop
inc
adc
icebp
mov
movsb
stc
cmp
add
cwtl
mov
push
adc
leave
jg
fdivrs
cmp
call
in
adc
jno
and
xchg
sti
sti
cmp
rclb
shlb
popf
lahf
pop
pop
push
aaa
into
jb
fcmovnb
test
add
roll
insb
in
sarb
and
push
mov
inc
inc
xchg
mov
push
shl
mov
repz
or
lahf
cltd
mov
test
or
cmp
mov
pop
cmp
adc
sub
stos
js
sbb
add
sbb
repz
jae
repnz
insb
xor
xor
rorl
mov
js
and
inc
mov
jle
bound
lea
fiadds
sub
rcrl
clc
ret
dec
and
push
lods
stc
adc
ss
fistl
addl
adc
mov
int
adc
jl
es
mov
jnp
les
mov
jno
jmp
mov
inc
in
in
dec
sarb
mov
and
and
adc
enter
xor
int3
loope
aam
inc
stos
dec
and
imul
cmp
movsb
fists
fidivrl
add
jno
pop
dec
enter
add
mov
lcall
xor
and
push
sbb
ret
sbb
stos
and
or
arpl
lret
cld
mov
pop
cmp
and
jmp
jne
lahf
stos
dec
out
arpl
cs
mov
or
jae
lods
pop
idivb
ret
dec
push
jbe
fisubs
mov
test
enter
push
push
or
jl
bextr
adc
rcr
push
pop
dec
xchg
jmp
ljmp
test
divb
jno
pop
lret
add
ljmp
ffree
test
mov
adc
xchg
xor
cmp
divl
jne
iret
sahf
cmp
and
or
mov
stc
aad
and
pop
jmp
dec
jmp
movsl
push
jb
pop
out
push
popf
insb
sbb
pop
rorb
xor
push
xchg
iret
xchg
xor
daa
mov
out
scas
cmc
jl
push
repnz
cmc
inc
cmpsl
pop
mov
clc
out
ss
cmpsl
dec
or
mov
jnp
std
jo
pop
jp
dec
dec
data16
adc
subb
mov
jno
cs
sub
dec
fsubs
sbb
movsl
or
mov
adc
cmp
xorb
and
das
test
ret
and
xchg
inc
inc
stos
mov
mov
xchg
pop
sbb
mov
xchg
lea
in
aaa
push
test
add
push
push
adc
imul
mov
mov
dec
and
push
pop
or
lahf
mov
or
adc
and
in
data16
mov
push
rorb
mov
stc
leave
add
mov
popf
scas
sbb
push
pop
das
add
into
cmp
out
sbb
cli
pop
out
push
in
lret
dec
mov
int
mov
jnp
out
or
dec
adc
inc
inc
into
mov
icebp
in
xlat
pop
and
pop
lock
cmpsl
fwait
mov
and
insl
mov
adc
xor
push
das
push
push
inc
fisubrs
adcb
lea
push
stc
mov
mov
mov
stc
ret
in
mov
cmp
cli
sti
inc
xchg
mov
cmpsb
lahf
sub
jns
push
lods
pop
imul
fstps
les
jg
repnz
sahf
adc
shll
mov
inc
push
or
les
mov
