ret
int
add
add
call
add
add
push
pop
add
sbb
ljmp
stos
mov
mov
push
int
and
shlb
test
or
enter
xchg
push
int
jne
sbb
leave
mov
ds
imull
and
push
int
in
mov
inc
and
pop
mov
in
mov
sldt
add
hlt
mov
addb
dec
adc
mov
dec
add
lret
add
add
out
add
push
cli
add
push
cld
pop
lcall
arpl
dec
lds
or
inc
in
sbb
mov
lods
jp
call
sbb
inc
dec
add
adcl
push
int3
xchg
add
add
popf
std
mov
push
enter
into
sarl
stos
add
adc
into
roll
inc
clc
dec
shrl
decb
std
inc
aam
add
ret
xchg
in
pop
mov
add
sub
fcoms
rcr
jns
and
cmp
add
sub
pop
test
or
pop
jg
cmp
in
xchg
add
add
jg
sbb
inc
inc
add
inc
add
jge
inc
inc
add
pop
add
add
rorl
pop
add
std
shl
insl
rol
fnstsw
les
and
add
or
add
movsb
jp
clc
mov
adc
dec
icebp
das
icebp
xchg
addb
add
test
inc
add
xchg
movsl
aaa
dec
loop
jge
inc
inc
add
add
jp
les
mov
ds
add
add
mov
inc
add
enter
adc
xchg
loop
test
faddl
jge
inc
inc
add
add
mov
and
sahf
jmp
cli
std
sub
jbe
sub
jle
sub
lock
jmp
jg
das
jecxz
wrmsr
in
add
sti
jecxz
xor
test
aas
cmc
mov
inc
jecxz
inc
dec
cmc
mov
cmp
jne
sti
aaa
mov
std
aas
in
jp
dec
or
mov
cli
in
std
aas
and
and
cld
sub
mov
inc
cli
mov
inc
loope
inc
cmp
mov
cmp
jne
inc
add
inc
sti
add
xor
mov
cs
cli
ljmp
sti
loope
inc
sub
outsl
idivl
add
jmp
cli
in
jp
sti
in
idiv
sub
jmp
jns
aas
in
lock
out
mov
sti
sub
inc
pop
cs
sub
mov
cs
inc
in
ds
sub
cmp
mov
add
jbe,pn
cmp
imulb
inc
cmp
incl
idivb
loop
add
incl
sti
inc
and
xor
and
and
incb
incl
das
in
add
aas
in
stc
inc
in
push
or
jp
inc
cli
jge
cli
and
cld
sub
iret
bound
mov
shlb
jb
push
sbb
bound
std
add
mov
and
sahf
pop
xacquire
divb
mov
jmp
popf
stc
out
pop
cmp
cwtl
xor
jle
sahf
pop
daa
call
cltd
flds
adc
mov
shll
lahf
pop
mov
rorl
sub
bound
mov
pop
sbb
fnsave
imul
mov
int
cs
aad
xorl
add
pushf
icebp
testl
add
mov
xchg
rorl
mov
roll
sbb
bound
js
divb
jae
mov
dec
mov
jae
and
mov
mov
shlb
fcmovb
xchg
inc
pop
in
sbb
jae
pop
ret
xor
insb
mov
push
addr16
xchg
inc
pop
cmpsb
xlat
out
push
mulb
mov
rclb
stos
inc
popa
ret
loope
bound
incl
xor
data16
sbb
dec
ljmp
out
stc
mov
stc
sbb
dec
rcll
incl
div
test
xchg
ret
add
bound
daa
sbb
or
bound
dec
clc
cmp
pop
sbb
fstpl
jnp
dec
shll
dec
mov
call
loop
dec
andb
repz
inc
bound
add
stos
jg
or
xor
push
pop
pusha
pop
mov
lds
insb
or
or
test
mov
out
push
jb
flds
adc
scas
out
push
and
shll
jae
loope
add
jno
or
jp
dec
shll
and
pop
je
bound
dec
pop
clc
testb
fldcw
ja
inc
dec
shll
ja
inc
or
pushf
and
add
es
inc
push
repnz
rcl
cmp
push
mov
sub
aad
xor
and
jae
xchg
and
jae
clc
testb
adc
lahf
push
insb
mov
push
cld
testb
pop
mov
jae
lock
clc
pop
out
divb
clc
ret
mov
or
pusha
jp
mov
sbb
imul
ret
mov
or
lcall
push
sbb
adc
pop
outsb
mov
enter
xchg
bound
leave
shlb
dec
pop
mulb
mov
xor
bound
jg
fdiv
mov
cmc
and
push
and
or
add
ja
mov
mov
cmp
loope
icebp
je
insb
push
mov
stc
add
in
fwait
mov
scas
pop
sbb
int
outsb
pop
rcrl
jmp
push
jmp
pop
sbb
gs
pop
and
push
rcrb
fsubl
das
fstpt
fsubs
pop
in
movl
push
adc
movsl
add
insb
xor
int
out
jp
jno
insb
mov
dec
lock
xlat
push
arpl
dec
rorb
and
sbb
fcoms
jne
insb
inc
outsb
mov
fsubs
cmpsl
mov
sub
lods
push
insb
mov
and
xor
xor
jl
pusha
mov
dec
mov
inc
adc
push
inc
inc
jae
add
pop
pusha
inc
xchg
and
lahf
cli
mov
lea
mov
cmp
iret
adc
scas
pop
push
and
scas
pop
sbb
int
dec
cmp
add
mov
arpl
dec
shl
cmc
movl
sub
gs
push
jp
popf
cli
jg
mov
cmp
cli
fadds
inc
shll
pop
leave
add
xchg
pop
sbb
xor
dec
rcr
jg
shll
jle
cwtl
mov
dec
lock
mov
shl
and
fwait
data16
pop
sbb
test
mov
pop
sbb
mov
pop
sub
scas
mov
adc
sbb
xlat
in
movl
xor
cmc
es
add
pop
fsubs
and
jbe
inc
dec
or
and
add
addr16
jmp
shll
push
fst
pop
inc
pop
sbb
cmpsb
pop
hlt
push
jmp
sub
xchg
pop
mov
or
lds
mov
sbb
sbb
or
stc
add
sbb
sbb
into
data16
or
jae
bound
nop
out
mov
in
pop
push
mov
push
inc
jae
popf
mov
sub
fcomi
sub
jae
cmp
push
add
jmp
das
imul
addl
data16
lahf
pop
dec
jecxz
add
incl
xchg
je
jge
punpckhwd
or
sbb
test
cmp
push
mov
jns
scas
adc
mov
in
cmp
int
mov
adc
mov
bound
jae
xchg
mov
dec
adc
fidivrl
mov
adc
popf
popa
jnp
sub
adcb
sbb
mov
or
adc
push
xor
nop
mov
sbb
pop
lods
lds
sbb
push
xchg
or
push
mov
shlb
mov
pop
xlat
mov
adc
jbe
cmp
dec
dec
in
ret
jne
xor
xchg
mov
frstor
fwait
dec
jno
sub
jno
mov
jb
xor
push
aam
jg
sbb
sub
movsb
cmp
out
icebp
out
bound
xor
insl
test
jne
aam
mov
push
xchg
test
daa
lods
inc
push
pushf
push
lret
pusha
adc
or
dec
ljmp
adc
inc
mov
mov
push
pop
rcrl
or
and
pop
shrb
icebp
in
and
cmc
mov
mov
jne
jmp
and
jb
dec
push
stc
aad
push
outsl
rcll
xchg
push
movsb
xor
push
aad
iret
stc
jmp
leave
push
jnp
imul
inc
shr
sbb
cmc
jbe
fidivrl
aaa
out
int
mov
hlt
in
popa
pop
adc
pop
pop
cmpsb
push
fiadds
icebp
fisubl
lea
pop
arpl
repz
in
iret
sub
pop
movsb
dec
shlb
ds
pusha
unpcklps
mov
pop
and
inc
xlat
xor
in
jbe
pop
push
cmp
loope
mov
xor
xchg
inc
xor
leave
daa
pop
jecxz
and
imul
pop
movl
pop
lods
jl
pusha
das
cmp
mov
fnsave
push
adc
movsl
mul
adc
mov
add
lds
push
arpl
xchg
and
pusha
das
dec
movsb
jp
mov
and
pop
or
jg
pop
dec
dec
xchg
sti
sbb
xlat
sbb
mov
cmp
fmuls
cmovp
jecxz
cmp
pop
or
and
push
cwtl
or
lods
jecxz
rcl
clc
fisubl
inc
daa
call
pop
xor
fdivl
or
lcall
outsl
sbb
and
xlat
sbb
mov
xchg
out
pop
insl
add
das
mov
pop
nop
mov
add
or
xchg
push
or
dec
popa
sahf
pop
push
out
lods
aam
sbb
loopne
cmp
pop
jns
aam
xlat
cmc
es
test
iret
adc
sub
or
sbb
popa
cmp
sbb
xchg
pop
adc
push
sbb
mov
ret
jl
addr16
loope
sbb
mov
xchg
inc
mov
mov
or
sub
cltd
push
lahf
repz
mov
pusha
fwait
arpl
fsubl
xlat
sti
or
adc
fmull
fildll
out
xlat
mov
mov
repz
sbb
shll
dec
inc
ret
push
or
daa
sbb
add
inc
lret
clc
mov
and
dec
mov
sbb
push
es
dec
addr16
leave
pandn
push
test
cmp
pop
xlat
cmp
add
jns
adc
xchg
imul
in
shlb
dec
je
fsts
push
mov
cld
or
mov
ret
mov
dec
push
movsl
jge
sub
je
xor
ss
es
sbb
aas
es
pop
and
xchg
pcmpgtw
add
sbb
mov
das
or
dec
es
mov
and
mov
cs
bextr
pop
or
xchg
push
cld
mov
sti
mov
pop
or
jb
repz
or
inc
mov
mov
sub
jmp
scas
loop
repz
loope
xchg
fistps
mov
or
pop
cmc
pop
mov
mov
mov
in
xchg
or
fsts
xor
mov
mov
mov
pop
mov
xchg
iret
pop
push
dec
sub
sub
fstps
aam
xchg
sbb
push
xor
mov
addr16
fs
xchg
fimuls
push
add
mov
cmp
sbb
stc
mov
scas
pop
dec
sbb
jp
push
test
scas
fnstcw
xchg
subb
cmpsb
mov
pop
gs
jecxz
dec
xlat
rcll
push
sbbb
dec
xchg
mulb
inc
xor
cli
xlat
adc
xchg
idivb
xchg
ret
xchg
mov
inc
adc
or
mov
jno
sub
dec
jb
inc
mov
or
in
aaa
test
in
mov
fdivrs
fdivrp
ds
clc
pxor
dec
sti
jmp
mov
push
dec
push
inc
sbb
cmp
cld
les
iret
jg
cmp
enter
mov
test
movsl
dec
loope
sub
loope
insb
mov
mov
push
xor
aaa
xchg
data16
pop
push
push
fistl
cmpsb
mov
mov
ds
movsb
sti
aaa
stc
inc
pop
out
aam
jne
mov
dec
push
scas
add
ss
add
fcomps
adc
xchg
xor
cs
in
mov
xor
aad
mov
jns
adc
aad
cs
fwait
mov
sbb
add
lahf
ficoml
decl
push
mov
loop
cmp
add
sub
push
js
frstor
add
in
mov
enter
mov
mov
ja
dec
mov
negb
jp
inc
dec
hlt
mov
fstps
and
mov
scas
imul
enter
dec
xchg
adc
inc
xlat
loope
pop
pop
push
mov
leave
movsl
cmp
das
dec
daa
sbb
push
scas
into
mov
rdtsc
test
push
pminub
pop
push
dec
add
xor
sub
and
cli
rclb
addr16
dec
fistps
push
sub
cmp
lock
push
mov
sbb
push
cld
xorb
mov
inc
dec
mov
sbb
mov
inc
mov
jbe
nop
pop
and
push
dec
jns
push
popf
das
pop
sub
inc
push
xor
lcall
mov
pop
cmp
hlt
jae
leave
test
mov
mov
popa
outsb
in
stos
xchg
fmul
jno
inc
pop
iret
push
out
ret
pop
fs
sahf
ficoms
sub
sub
fwait
out
mov
pxor
int
and
pusha
or
cmp
and
aad
std
add
dec
push
andl
ret
leave
out
xor
fldcw
xchg
mov
push
out
iret
sbb
mov
add
adc
test
ja
push
jle
pop
subl
fisubs
xchg
test
divl
cli
push
pop
lret
divb
mov
insb
sub
pop
or
pop
out
lods
je
lret
xchg
jecxz
push
adc
dec
pop
stos
mov
aas
push
mov
mov
or
rcl
lock
inc
mov
cmp
data16
mov
sbb
dec
cltd
jne
stos
sub
loopne
lea
movsb
add
mov
hlt
inc
imul
sar
es
call
aam
das
inc
cs
jbe
jecxz
stos
add
pop
xchg
push
cld
adc
jbe
neg
dec
fwait
xor
in
lret
lods
in
inc
xchg
int
push
sbb
fmul
aad
sbb
in
enter
jg
in
mov
fldenvs
push
push
les
pushl
test
test
push
lahf
je
sub
imul
cld
mov
push
xchg
dec
mov
ficoms
and
test
out
dec
iret
cmpsb
repnz
popf
cld
cld
sbb
iret
sub
push
cmp
loopne
cmovo
pop
xor
mov
shrb
push
lock
leave
loope
jns
in
out
test
jecxz
jnp
int3
mov
inc
xor
pop
mov
xor
jl
sub
xchg
sub
stc
movsb
stos
outsl
push
mov
pop
pop
and
movsb
pop
jb
xor
xor
cmpsl
int3
aad
scas
cmp
and
xor
pop
mov
ja
aad
and
mov
scas
repz
cmpsb
fisubl
test
out
xor
test
cltd
push
dec
inc
inc
and
push
movsl
in
pop
jae
xchg
sarb
out
inc
or
sub
stc
syscall
lret
cld
jle
daa
mov
pop
test
cmp
xlat
jecxz
js
sbbl
adc
aas
jg
loop
push
out
in
pop
gs
sbb
xlat
lods
out
xchg
jl
cmc
hlt
push
pop
inc
das
shlb
popf
adc
int3
incb
iret
pop
mov
mov
lds
push
repz
sub
inc
adc
push
test
mov
dec
imul
clc
or
xchg
xor
test
xor
lea
leave
push
lahf
sub
ret
adc
xchg
ffree
add
mov
jae
pop
lea
dec
push
imul
sbb
or
daa
xor
and
pop
test
mov
test
xlat
pop
jb
dec
mov
js
out
int
inc
dec
add
orb
cmpsb
shl
dec
push
push
stos
lods
arpl
xor
inc
jb
je
les
sub
xchg
sahf
adc
or
test
sbb
rorl
mov
push
xor
lret
mov
add
test
addr16
add
scas
ds
repz
loope
sbb
cmc
push
dec
or
and
das
lea
mov
lea
inc
jno
lods
jle
xor
add
rcll
xor
daa
out
aam
or
dec
fwait
out
test
adc
xchg
aam
jbe
rcrb
xchg
mov
or
ljmp
dec
sti
pop
jecxz
sbb
cmp
out
ficomps
add
lock
push
push
adc
iret
daa
mov
fucomi
push
sbb
inc
mov
ja
popa
cli
push
sahf
shll
push
lds
xor
mulb
mov
ljmp
cmpsb
mov
in
push
jnp
fildl
into
rcr
jecxz
fadds
lahf
stos
cmpsl
pop
outsl
cmpsb
mov
fidivs
jl
cmp
cmpsb
stos
pushf
imulb
jge
pop
adc
subb
lds
sub
fldt
mov
stc
pusha
call
lods
mov
daa
add
fbstp
cltd
enter
out
sub
xchg
ds
sbb
mov
sub
aam
lds
xchg
push
pop
pop
and
push
loop
sub
sbb
adc
or
mov
imul
out
or
xchg
mov
pop
sub
daa
shr
xor
aam
notl
sbb
popa
sub
push
test
loopne
and
lret
nop
popa
dec
or
pop
and
dec
sbb
pop
rorl
fdiv
jmp
fidivrs
jno
arpl
imul
fsubrs
jmp
cli
fisttpll
in
xchg
mov
pop
push
in
call
adc
js
jbe
pop
iret
adc
insb
icebp
test
mov
or
cli
daa
aas
push
jne
and
add
sub
cmp
call
adc
push
xchg
loop
add
loop
pusha
js
inc
js
daa
mov
jp
or
add
insb
lcall
sub
add
insl
cmp
cmc
lahf
dec
fucom
insl
or
out
js
loop
shr
mov
sub
mov
adc
pop
or
push
inc
inc
jne
and
xchg
sub
repnz
das
push
pop
and
mov
addr16
sub
repz
jmp
jge
clc
sub
xor
daa
mov
jmp
fisubl
dec
bound
mov
data16
cmp
sbb
ret
jecxz
and
push
aad
ret
int3
es
add
dec
fwait
mov
lds
cmp
xor
and
mov
and
pop
jp
ret
clc
notb
dec
fsubs
jecxz
loop
or
and
jno
clc
je
std
adc
pop
adc
pop
or
jmp
repnz
outsl
in
lds
pusha
and
xchg
xor
pop
or
sbb
push
xchg
cmp
mov
sbb
xor
rcrb
mov
outsb
mov
pop
sbb
dec
movsl
sbb
lret
fbld
jne
mov
invd
xchg
lcall
lahf
dec
shll
fwait
pop
xor
ja
popw
fs
and
sbb
daa
mov
xchg
add
test
inc
xchg
and
ja
das
cwtl
mov
out
mov
or
in
and
xor
push
inc
movsb
pop
dec
scas
fildl
sub
idivb
pop
fidivrs
shrb
push
in
add
push
dec
scas
shlb
stc
les
fiaddl
add
loop
jno
xchg
mov
pop
push
mov
je
sbb
add
xchg
mov
and
dec
mov
and
popf
mov
loope
ljmp
pop
out
loop
or
data16
fs
popf
sbb
pusha
xchg
loope
xchg
pushf
push
out
pusha
sbb
xor
xor
push
insl
and
cmpb
faddl
mov
fcompl
mov
rcrl
adc
xchg
aad
mov
imul
or
vrsqrtss
xchg
cmc
scas
xchg
or
mov
pusha
jg
xchg
inc
mov
lods
and
xlat
movsl
popa
push
or
shr
mov
inc
ds
sub
fdivl
stos
aas
sub
xchg
fcom
or
mov
pop
xor
out
sbb
push
cmp
lds
fs
pop
or
jecxz
scas
push
xor
cmpl
mov
fld
call
fisttpll
daa
mov
xchg
sahf
pusha
or
fidivrs
dec
aas
testl
cwtl
cld
mov
das
inc
xor
adc
int3
sahf
fnsave
jbe
xor
xchg
in
test
out
divb
lret
leave
hlt
hlt
leave
mov
out
or
stc
add
ja
dec
rcr
add
sub
outsb
jae
ror
mov
or
test
daa
mov
inc
pop
push
mov
inc
mov
daa
adc
pop
inc
xor
neg
add
daa
inc
add
ret
popf
rolb
fdivl
pop
fidivl
pop
xor
fistpll
mov
add
sbb
scas
out
outsl
cmpsb
inc
test
loopne
testb
adc
mov
sbb
lods
aaa
mov
xchg
sbb
stc
jecxz
nop
sbb
insb
mov
mov
dec
pusha
jecxz
sub
mov
mov
es
aam
dec
sahf
cmpsl
adc
cld
adc
arpl
and
or
stos
push
and
xor
iret
frstor
aas
scas
cmpsb
jb
fs
int3
loope
xsaves
mov
loope
push
popf
xor
pop
cli
cmp
lods
pop
loop
sbb
add
arpl
jns
enter
and
pop
rol
imul
cmp
jbe
clc
lret
push
xchg
ret
fs
and
push
fstpt
cltd
mov
add
addb
loope
and
add
scas
or
sbbb
mov
es
imul
cmp
lea
add
jmp
lock
push
xor
in
adc
stos
and
lock
out
or
adc
inc
xor
in
cmp
cmc
mov
pop
pop
das
adc
mov
mov
lock
pop
dec
xchg
leave
pop
insb
subb
xlat
outsb
inc
adc
jp
or
jle
aas
aas
stc
hlt
push
test
lea
fisttpl
xchg
mov
xchg
popl
xor
sub
loop
lds
loop
ja
push
clc
dec
cmovo
notb
repz
push
pop
aad
ljmp
inc
pop
or
lds
mov
and
xor
xchg
fistpll
sti
fidivs
jle
sbb
pop
sbbb
mov
push
or
pop
imul
or
pop
aam
lahf
or
jno
enter
arpl
lret
mov
fistps
inc
nop
cs
lods
pop
push
aam
inc
jle
inc
icebp
int3
iret
pop
push
xor
and
push
bnd
push
dec
xchg
and
inc
aas
pop
mov
fsubrl
into
enter
mov
gs
mov
out
push
pop
ljmp
fstps
pop
add
es
lods
lods
pop
xchg
in
push
ret
xor
push
out
push
ret
xchg
call
adc
pop
and
adc
dec
inc
les
cmc
cltd
inc
mov
sbb
cmc
jge
pop
sarb
jmp
stc
fsubs
dec
out
cld
add
mov
popa
ret
shrb
testb
mov
add
jnp
or
sub
mov
pop
mov
rcr
inc
stos
push
loopne
inc
mov
add
sbb
mov
les
cltd
mov
dec
lret
nop
mull
inc
push
ljmp
popf
fcompl
inc
xchg
pop
push
mov
jge
pop
imul
testb
lods
cli
out
xchg
fldcw
or
outsb
popf
ja
outsl
sbb
cmp
dec
xchg
sub
mov
inc
sbb
push
ljmp
jbe
loope
pop
scas
rorb
enter
cmp
imul
loope
aas
in
and
cmp
repnz
or
pop
mov
in
je
add
das
and
and
mov
cli
cli
mov
lahf
ret
cmc
imulb
imul
fisubrl
push
cmp
pusha
push
cmp
fbstp
fidivrl
leave
and
xchg
dec
or
dec
and
test
mov
sbb
ljmp
push
pop
jne
mov
ljmp
ror
aaa
fnstcw
add
repz
notb
dec
xchg
or
adc
loopne
inc
popl
call
sub
aad
adc
imul
pop
mov
adc
dec
or
stos
inc
ret
or
stos
inc
leave
mov
dec
push
sti
jecxz
xchg
xchg
xor
pop
mov
loope
fadd
scas
pop
and
ds
js
nop
scas
xchg
push
push
cmp
cmp
sbb
test
imul
stc
mov
sub
out
inc
sbb
fsts
aas
pop
sub
add
inc
mov
inc
or
mov
lds
sbb
cli
jp
mov
mov
mov
sarb
xchg
ss
adc
rclb
pop
dec
nop
mov
ret
mov
xlat
or
notl
mov
daa
fucom
fdivrl
adc
loopne
or
int3
dec
mov
push
and
or
xchg
push
lods
push
lea
pop
iret
lock
jge
ljmp
adc
inc
shll
insb
push
lcall
push
mov
adc
sbb
incb
xlat
test
sbb
xchg
fidivrs
jge
cltd
or
lea
add
je
xor
push
sahf
enter
insb
jle
pop
sbb
ja
movsl
pop
adcb
xor
inc
sub
dec
jns
sahf
int
and
sbb
js
aad
inc
pop
stos
in
add
dec
and
and
pop
lods
pop
fisubrl
mov
or
test
fldt
and
jo
dec
outsb
sub
test
xor
negl
mov
stos
push
cli
or
sbbl
push
mov
cltd
xchg
or
dec
dec
pop
aad
pop
dec
fisubs
out
mov
stos
fsubr
sbb
cmpsb
add
popf
stc
sub
in
push
pop
cltd
inc
mov
inc
idivb
iret
jecxz
dec
sbb
jb
pusha
daa
iret
push
nop
mov
pop
or
je
test
ljmp
xchg
arpl
mov
jbe
outsb
hlt
ss
cmpsl
pop
jp
lods
push
sbb
sub
or
pop
inc
jle
cli
cmp
cmc
pop
sbb
pop
dec
out
xlat
gs
lcall
repz
push
dec
std
xor
pop
in
and
push
nop
pop
sbb
shlb
insl
pop
aad
call
sbbl
xor
jae
scas
in
lahf
lods
inc
lods
fisttpll
loope
mov
scas
xchg
call
popa
outsb
mov
dec
sub
mov
mov
cmp
pop
sbb
inc
xchg
imul
test
or
cwtl
fcomps
inc
sub
pusha
and
sbb
mov
fs
adc
pop
test
push
lods
xchg
sub
xchg
das
rcrb
xor
sbb
notb
test
popa
test
push
fwait
mov
gs
data16
bound
and
xor
jne
pop
jns
mov
enter
cmp
mov
and
mov
leave
mov
fwait
data16
sahf
jbe
iret
mov
xchg
pop
scas
nop
cwtl
mov
pop
mov
cmp
xchg
out
mov
sbb
je
ret
stc
pop
push
dec
inc
push
inc
repnz
idiv
add
clc
sub
mov
and
inc
mov
cltd
pop
lahf
lret
add
inc
pop
call
jmp
pusha
push
jmp
outsb
mov
mov
cmc
out
addr16
dec
ret
jo
test
or
sub
sub
add
mov
cmp
movsb
sbb
repnz
push
lods
call
add
mov
out
rcrl
xor
mov
dec
xchg
ja
and
mov
loope
outsl
mov
dec
cli
cmp
call
outsl
pop
les
push
xor
popa
call
sbb
cli
mov
inc
std
dec
lahf
mov
sti
jb
cmp
mov
inc
xor
jae
xor
imul
sbb
push
andl
in
push
stos
add
loope
jp
adc
jmp
mov
mov
push
jl
flds
imul
dec
mov
and
ds
mov
insl
lahf
das
addb
inc
scas
jae
pop
adc
lret
push
dec
sbb
imul
outsb
subb
push
adc
lahf
sub
mov
jae
add
xchg
andb
fisttps
mov
dec
xor
and
xor
nop
cltd
lcall
je
sub
movsl
ror
sub
dec
js
fbld
bound
nopl
pop
nop
sbb
mov
negl
das
sbb
test
push
mov
or
int
xor
push
xchg
inc
jmp
inc
sub
dec
jns
and
int
arpl
daa
es
dec
sub
roll
sbb
lea
sub
cmp
cmp
add
mov
gs
adc
inc
mov
xchg
inc
int
cld
inc
push
xor
mov
and
sub
and
dec
pusha
testb
rcrl
imul
push
out
sbb
jmp
vaesdec
lahf
push
jns
or
int3
sub
test
cmc
int3
leave
or
dec
or
dec
xlat
dec
sar
push
out
push
mul
jno
aas
enter
sbb
icebp
ja
cmpsl
mov
pop
mov
daa
fisubl
jae
xor
and
sub
xchg
outsb
inc
add
push
jmp
fisubs
push
dec
imul
aaa
pop
or
loope
adc
or
and
cwtl
jp
and
loopne
jns
rorl
lea
add
ljmp
adc
sbb
rcrb
lcall
add
dec
negl
adc
pushl
add
dec
add
add
and
dec
iret
xchg
sbb
xchg
jg
pusha
pop
idivb
int3
int
sub
push
push
inc
sub
mov
xchg
push
movsl
xchg
push
xor
xchg
sbb
ja
in
je
icebp
cli
jo
mov
loop
aad
lea
test
pushf
push
aam
lcall
imul
mov
pop
fwait
aad
negb
xchg
test
pop
sbb
mov
movsb
inc
aad
lcall
cmc
lret
jbe
addr16
shlb
ret
stos
jl
pusha
push
stc
ds
jno
lods
pop
inc
mov
arpl
fwait
cmp
or
jecxz
inc
xor
ficompl
test
dec
push
lret
adc
sub
enter
adc
or
pop
test
rorb
addr16
pop
fisubrl
in
cli
and
inc
inc
pop
sbb
xchg
fwait
idivb
xor
push
loop
and
inc
rcr
insb
jg
dec
fildll
jae
popf
jo
fcoml
xchg
dec
jo
jbe
mov
cmc
push
mov
test
lock
or
aad
outsl
out
sub
pusha
sbb
ljmp
sbb
clc
sahf
mov
xlat
aaa
in
sub
jmp
mov
nop
stos
in
lret
xor
popa
mov
in
mov
dec
cmp
xchg
xor
or
adc
adc
in
xchg
xor
sarl
jns
push
das
mov
and
enter
aam
fldt
add
pusha
sub
rorb
out
add
inc
sub
xlat
bound
ljmp
and
xchg
inc
sbb
lahf
movsb
outsl
mov
sbb
mov
and
push
popf
jmp
mov
mov
pop
int
test
or
out
mov
push
loop
push
repnz
push
push
inc
dec
and
inc
pusha
fcomip
or
ja
popf
push
loope
shll
int3
lahf
mov
hlt
inc
xchg
add
mov
adc
adc
push
mov
sbb
push
cmp
mov
ror
or
fsubl
movsb
stos
jnp
xchg
lcall
sarl
mov
arpl
pop
sbb
push
fdivrs
mov
out
inc
sbb
pop
dec
fsubrl
sbb
jmp
stos
stc
fnsave
fbstp
loope
icebp
cli
scas
push
pop
out
dec
movb
or
clc
pop
xchg
pop
aad
lahf
sbb
push
cmp
fucomp
out
pop
aam
daa
popa
push
add
fistl
and
dec
andl
loop
push
andl
mov
push
outsl
jbe
mov
test
cwtl
ljmp
push
mov
outsl
inc
add
jno
mov
adcl
add
scas
fistpll
test
and
lahf
andb
mov
push
jle
cmc
aaa
xchg
popf
fists
dec
loope
adc
sub
dec
or
outsb
push
jecxz
sahf
push
sub
test
pop
xchg
sbbl
cmc
insl
adc
cli
mov
iret
xor
push
addr16
dec
jmp
sbb
cmpb
stos
sahf
popf
fcmovnb
jns
in
stos
sahf
cmp
das
in
stc
rcr
xor
clc
sbb
sbb
ljmp
adc
lods
sbb
fistpl
pop
leave
in
ja
and
mov
ja
iret
pop
rorb
pop
std
pop
inc
popa
xchg
sub
mov
int
jmp
ja
cmp
jnp,pt
jno
pop
sahf
cmp
in
xor
cmpsb
out
hlt
pop
jbe
hlt
popl
push
sub
pop
fwait
mov
notl
pop
xchg
ljmp
mov
cmc
lock
xchg
clc
mov
nop
mov
push
js
loope
cltd
cmc
mov
jae
cld
stos
mov
and
inc
lea
cmovp
mov
mov
mov
pusha
cmp
jb
jnp
loopne
out
pop
jns
sbb
ret
jg
das
lods
pop
in
cmp
pop
cmp
jo
or
out
xorb
incl
xchg
lret
push
mov
push
jmp
pushl
imul
jmp
xchg
clc
pop
sbb
lock
or
mov
or
lods
xchg
ror
push
addr16
rclb
adc
and
jae
push
div
mov
adc
lahf
xchg
adc
getsec
inc
sub
jno
mov
jnp
xor
loopne
inc
push
sub
pop
inc
jbe
xchg
inc
bound
and
sti
mov
movsb
roll
in
jns
mov
gs
sub
rorl
lcall
mov
push
ret
pusha
adc
pop
daa
vaddps
add
ror
sbb
loop
leave
pop
in
mov
and
insl
fsub
jle
cld
inc
jp
shll
stc
mov
call
cs
inc
push
mov
or
pushf
sbb
pcmpgtw
cld
adc
in
and
in
ret
pop
dec
adc
xchg
repz
pop
and
push
jns
pop
add
clc
mov
xchg
stos
and
push
adc
fstpl
arpl
dec
andl
adc
jge
ss
pop
push
or
jl
loope
sbbl
ds
xchg
out
cmp
or
sub
xor
fs
jmp
adc
sbb
call
push
leave
pusha
cmpsb
pop
pop
pop
outsb
or
cli
cli
pop
xor
ret
aas
xchg
stos
pusha
sub
pop
sub
dec
outsl
out
mov
inc
mov
loope
mov
adc
cmpsl
or
testb
lock
xchg
mov
aam
jle
pop
xlat
lock
pop
fisttps
leave
adc
faddp
test
fsubrs
js
fcomip
fbstp
nop
and
mov
pusha
inc
or
stos
xorl
mov
fstpl
repz
cmp
es
inc
pop
cmc
push
cmp
and
jge
arpl
cmp
and
dec
inc
insl
push
test
adc
pop
pop
lods
add
jp
xor
sub
push
popa
lds
add
push
sbb
pop
iret
push
mov
pop
jae
addr16
sub
orl
stos
stos
adc
ret
scas
jo
dec
std
ds
lret
adc
out
iret
and
cmpsb
mov
js
jmp
adc
addr16
and
sbb
add
pop
mov
push
inc
adc
inc
lret
cmc
lret
dec
adc
sbb
and
loop
sbb
bound
pop
lods
cltd
cmpsl
mov
cmp
lds
fwait
inc
roll
std
xor
jns
nop
loopne
adc
je
xchg
xchg
push
hlt
cmp
loop
pop
jns
xchg
mov
jg
mov
adc
cltd
or
push
and
sub
sbb
dec
lret
inc
push
sahf
ds
orb
inc
inc
icebp
es
mov
jmp
jecxz
push
push
insb
push
cmp
mov
in
fs
pop
std
jp
and
dec
stc
sbb
and
and
rorb
push
jae
dec
daa
push
mov
in
lock
mov
xor
mov
std
push
push
daa
and
pop
pop
push
pop
pushf
outsl
xchg
fwait
push
sub
pop
dec
mov
or
pop
cmp
jae
fcompl
bound
pop
nop
call
cmc
or
sub
imul
pop
nop
testl
ss
push
bound
decl
pop
xchg
xor
loope
sub
sub
fistpl
loope
sahf
pop
pop
in
cli
ret
ror
xorl
and
call
mov
arpl
add
ds
mov
fwait
out
lea
pusha
sahf
ss
subb
inc
push
jmp
inc
in
cmp
adc
adc
mov
xchg
add
mov
fwait
out
into
sbb
sub
ss
mov
fiadds
jp
xchg
mov
pause
dec
cmpl
add
lret
lcall
in
movsb
and
cltd
rcll
daa
movsl
test
lcall
jecxz
and
add
or
cltd
in
xchg
stos
xchg
adc
sub
or
dec
ret
push
out
or
lcall
sti
jns
or
or
scas
sbb
decl
sbb
fs
flds
cmp
jmp
into
xchg
and
into
pop
jae
iret
dec
adc
imul
in
cmpw
ja
push
out
fnstsw
and
push
pop
add
ds
gs
aam
arpl
sbb
inc
leave
mov
icebp
lods
jge
adc
jle
mov
push
cltd
adc
test
dec
mov
inc
addb
xlat
add
jnp
into
data16
scas
subb
out
dec
dec
sbb
mov
mov
mov
jns
rcr
out
addr16
lahf
in
and
imul
dec
scas
adc
jae
outsl
insl
pop
lahf
mov
jge
lret
popa
movsl
xchg
pop
mov
pop
daa
dec
jne
cmp
out
or
push
lea
loopne
imul
in
xchg
inc
pop
aam
data16
fisubrl
push
mov
xchg
mov
push
add
enter
loope
int3
or
and
ss
pop
ret
ss
inc
push
xchg
cmp
imul
in
dec
cmp
push
ljmp
or
inc
outsl
mov
mov
test
jl
push
dec
xchg
cli
je
loop
inc
lods
loopne
mov
dec
addr16
cmp
xchg
sub
jmp
popa
es
call
movsb
daa
add
adc
enter
cmp
mov
xor
ret
movl
lret
mov
push
je
mov
mov
aad
int3
mov
int
and
inc
cld
clc
pop
fdivs
xchg
les
push
dec
jb
enter
les
loopne
xchg
dec
add
jge
lds
fidivl
mov
aaa
adc
stos
jl
pusha
pop
mov
cmp
adc
sbb
jae
repz
stc
mov
mov
sub
and
out
fbstp
mov
push
leave
cmpsl
push
and
pop
insl
xchg
mov
push
inc
jle
xchg
or
out
push
ret
insb
lds
popf
scas
push
daa
mov
dec
sub
mov
cs
and
mov
adc
push
lcall
popf
cli
into
push
or
xchg
pushw
int3
cmp
ret
dec
mov
or
scas
inc
aaa
bndstx
enter
ret
rolb
popa
inc
fwait
cmp
push
sbb
xchg
rol
add
mov
notb
clc
pop
and
fsubr
iret
adc
dec
or
test
scas
adc
xor
xchg
push
cmpb
pop
add
stos
add
jle
shr
jmp
inc
pop
leave
lds
mov
nop
mov
outsl
les
pop
mov
test
lods
inc
repz
inc
fiadds
jle
movsb
nop
inc
xlat
in
vsqrtpd
rorl
int
inc
mov
adc
mov
xor
adc
fucomip
hlt
mov
gs
xchg
mov
mov
lret
inc
mov
sub
fimuls
int
xor
mulb
add
adc
sub
push
in
aaa
stc
loopne
push
or
mov
enter
cmp
fcoml
adc
pop
push
and
inc
and
jmp
loope
gs
dec
xor
pop
lds
push
and
fwait
addr16
lcall
pop
adc
mov
fidivrl
dec
lret
repnz
icebp
ret
push
addr16
std
aam
aaa
es
xor
ss
shrl
dec
pop
les
cld
call
jne
ret
mov
mov
inc
movsb
mov
ss
xor
scas
pop
pusha
pop
mov
add
popa
fidivrl
cs
mov
add
pop
nop
nop
call
lock
mov
fs
adc
mov
das
loope
pop
mov
test
pop
fidivrs
push
dec
sbb
cmc
cmp
mov
hlt
xor
mov
ds
icebp
stc
cmp
push
je
repnz
in
fsubl
xchg
or
jg
mov
sub
cmovno
mulb
repnz
lret
in
mov
mov
adc
dec
push
mov
sbb
push
pop
out
icebp
call
testb
push
sti
mov
addr16
loope
inc
pop
js
fildll
lock
sub
addr16
out
pop
jecxz
pop
ficompl
xchg
and
push
loope
daa
icebp
rorb
pop
ds
push
and
push
cmp
in
adc
xor
in
aas
out
decb
mov
repnz
pop
mov
pop
imull
mov
jecxz
pop
stc
mov
jp
gs
or
movsl
call
or
in
sahf
out
adc
ljmp
push
xchg
push
shrb
setge
adc
rcrl
xchg
or
loop
pop
test
push
xor
js
adc
ror
daa
and
imul
popa
fsts
xchg
cmp
dec
test
inc
loop
lock
xlat
mov
cmp
data16
sbb
push
fwait
pop
and
out
mov
lret
pop
jecxz
jl
test
adc
pop
mov
xor
pop
sub
xchg
jae
movups
movsb
or
das
dec
sbb
in
jae
push
loopne
add
fwait
pop
stos
ja
fwait
and
lret
pop
cmp
cltd
mov
sbb
rclb
dec
jne
sahf
in
jo
call
outsl
lcall
ret
lock
lret
sub
das
dec
negl
jmp
mov
loope
jecxz
add
dec
xor
mov
test
jmp
lds
sbb
push
push
and
loopne
out
xchg
movsb
sbb
mov
sbb
mov
test
sbb
fisttpl
nop
xlat
sub
sahf
pop
movl
loopne
cmp
adc
mov
push
xchg
add
lret
mov
cmpsl
lret
iret
test
sub
push
fdivrp
mov
aad
mov
mov
lahf
mov
test
movsb
std
or
movsl
mov
jle
push
push
filds
sub
lds
insb
jns
mov
je
mov
adc
or
pop
ret
adc
enter
nop
mov
push
pop
aas
ret
pop
inc
dec
test
rclb
jecxz
out
lock
dec
cmp
and
sbb
jae
clc
iret
jle
or
push
sti
mov
mov
lea
dec
add
gs
sar
fs
and
in
jo
divb
mov
lret
and
pop
fistps
inc
leave
add
cmpb
or
lock
fs
pop
out
data16
jp
ficoms
push
aad
cli
push
mov
lcall
dec
fcomps
xor
clc
shlb
add
jnp
shll
inc
bound
packssdw
aaa
arpl
jmp
push
nop
add
out
shlb
xor
cmp
out
pop
or
or
lcall
enter
inc
xor
sti
mov
mov
in
xchg
imul
cmp
addr16
pop
nop
mov
mov
jecxz
js
int
inc
adc
lcall
stos
sbb
mov
cmp
fisttps
and
in
pop
fdivr
incb
sbb
push
dec
lock
or
or
gs
aas
sbbl
dec
sub
popa
dec
push
fistl
xor
jg
dec
aaa
push
das
pop
ja
push
adc
dec
daa
inc
cs
jbe
movsb
int3
out
xor
mov
cmpsl
pop
in
leave
sarb
imul
das
divl
sbb
inc
cli
popw
fisttpll
imul
int3
pop
xchg
enter
popf
cmp
sub
nop
and
dec
adc
lss
xchg
mov
cs
ss
dec
scas
push
add
mov
adc
daa
mov
and
ljmp
xchg
clc
and
cmp
dec
add
scas
dec
cs
sub
es
ja
dec
mov
ret
mov
xlat
or
cwtl
fiaddl
leave
fidivrl
sbb
int
dec
fsubs
leave
ret
data16
push
and
push
cli
aad
sbb
pushl
lahf
mov
pop
pop
adc
fs
push
stos
mov
enter
lcall
loope
pusha
push
stos
sti
aam
push
je
rcr
mov
in
clc
fbld
jno
mov
pushl
es
cs
push
xor
mov
push
jns
lea
cmp
xor
loop
push
push
lods
daa
push
jle
pop
xchg
popf
adc
sub
subb
cltd
popf
pusha
mov
pop
push
add
adc
or
sub
insl
or
sub
or
leave
mov
mov
addr16
sub
nop
and
in
testb
push
push
jns
stos
mov
mov
sbb
insl
jb
push
dec
lcall
in
jne
arpl
or
inc
add
call
pop
or
xor
inc
add
jle
jle
pop
or
and
xchg
or
xchg
stos
jmp
mov
dec
lahf
sbb
xor
cmc
sti
and
push
out
ret
or
pop
fadds
or
mull
icebp
mov
adc
xor
sub
loope
pop
adc
inc
rcll
xchg
imul
xchg
filds
jmp
rcl
pushl
pop
dec
icebp
inc
lcall
dec
mov
out
js
inc
call
push
push
shlb
mov
add
imul
pop
push
inc
inc
jb
fsubrs
pop
push
mov
daa
sub
push
inc
adc
jp
iret
mov
adc
ljmp
xchg
pop
cmp
mov
filds
dec
in
movsb
dec
mov
lret
cld
mov
gs
push
or
pop
stc
inc
cltd
adc
dec
bound
lahf
inc
cmp
sti
push
adc
jbe
mov
fprem
cmp
gs
jl
inc
fistps
arpl
xor
ljmp
roll
push
popl
stos
adc
push
pusha
out
scas
cmc
cmp
mov
push
and
pop
inc
dec
fiadds
mov
lcall
stos
push
int3
fcomp
adc
and
or
rorl
inc
jae
icebp
xchg
jbe
mov
jp
xor
push
dec
fs
sub
push
ficoms
or
leave
cmp
ficomps
dec
ds
stc
es
ds
and
sub
xchg
xor
inc
jge
pop
in
in
cli
scas
ljmp
mov
outsb
outsl
xor
jnp
bound
sbb
mov
xor
daa
and
das
sbb
xor
and
xor
cmp
les
mov
sub
dec
sbb
rcrb
lods
in
mov
arpl
in
jmp
outsl
fwait
cmp
or
adc
or
lahf
je
xchg
jmp
test
xchg
push
and
sti
inc
xchg
repz
shlb
sub
xchg
jbe
hlt
fwait
test
push
in
fsubrs
sbb
push
dec
ret
sar
loopne
push
mov
gs
push
ss
jge
je
mov
mov
stos
or
addr16
test
lret
xchg
in
xor
or
sub
data16
and
sub
mov
push
or
stos
sbb
das
shlb
xor
std
sbb
bound
sub
cmpsl
out
add
movsb
stc
or
sbb
outsl
sbb
and
test
and
xchg
ja
cmpsl
fwait
xchg
daa
jbe
ds
test
jae
sar
outsl
pop
sbb
xor
stos
and
popa
test
xorl
pop
push
scas
clc
xadd
outsl
inc
pop
cmp
clc
and
cmc
inc
cmp
inc
jl
int3
mov
iret
sti
or
jle
test
sbb
int3
es
lods
mov
add
dec
aas
lods
pop
aaa
pop
mov
repz
fldl
cmp
mov
or
push
sub
push
push
dec
mov
ret
push
xor
cmpl
addl
adc
adc
jmpw
jmp
lock
xlat
outsb
sbb
std
add
lea
bound
sbb
mov
mov
xchg
dec
lds
push
xchg
or
xor
adc
sti
or
inc
cld
push
ljmp
in
ror
idiv
dec
or
jp
ja
stos
stos
lods
icebp
add
adc
inc
push
cmp
push
xlat
int
into
clc
js
mov
push
ja
pop
mov
and
pop
insl
lea
xchg
in
test
and
loope
sti
dec
test
push
ret
data16
cmp
loop
lahf
push
jge
lret
ret
orb
repz
mov
push
pop
in
inc
sub
aas
arpl
pusha
aam
scas
outsb
cli
popf
mov
sahf
shlb
cwtl
lcall
inc
inc
pop
push
sahf
cmp
xchg
mov
imul
pop
test
movsb
fldl
push
cmp
mov
cmp
fisttpll
inc
enter
mov
inc
mov
aad
daa
aas
enter
test
call
stos
sub
call
popf
and
push
data16
js
xchg
lods
and
and
dec
and
mov
out
and
sbb
fsub
push
je
dec
and
loopne
cwtl
frstor
scas
loopne
adc
insb
xchg
rol
and
jge
mov
icebp
jnp
lret
mov
dec
test
jmp
push
push
enter
test
and
sub
adc
test
fst
outsl
cli
push
fisubrl
fmuls
push
cmp
scas
stos
repz
xor
cld
icebp
into
nop
add
aaa
nop
inc
xlat
sbb
pop
dec
lret
addr16
mov
sbb
mov
jb
push
fistps
sbb
add
in
into
xchg
pop
je
dec
fisubrl
ret
pop
and
sub
and
push
or
xor
inc
inc
mov
and
sbb
in
into
enter
sbb
cmc
aas
adc
add
push
add
stc
mov
movsb
js
jge
sti
fistpll
rcrb
pop
and
ljmp
aad
mov
jge
mov
leave
or
push
arpl
lahf
mov
out
jl
inc
int3
sbb
cmp
cmp
gs
jbe
in
ret
cltd
pop
mov
pushf
imul
or
mov
push
call
loope
push
dec
jmp
xchg
dec
mov
mov
dec
lock
and
xlat
push
mov
loop
sub
inc
push
in
enter
xchg
call
fs
addr16
iret
dec
cltd
jl
imul
das
shl
mov
mov
inc
adc
out
bt
sbb
pop
in
pop
push
lretw
lds
lcall
mov
out
mov
jo
cmp
fnsave
or
out
xor
out
xchg
add
xlat
sub
adc
cmpsb
push
xchg
push
aas
cmc
movsb
jnp
faddp
mov
sub
sbb
shll
sbb
push
pop
jb
mov
xchg
pop
push
stc
or
adc
loop
ret
pop
push
xchg
das
push
fldl
mov
add
mov
iret
fisubl
dec
pop
int
lock
adc
inc
inc
add
push
bound
imul
cmp
push
mov
daa
sbb
pop
cmc
es
das
loope
sub
popf
roll
adc
xor
and
in
je
or
gs
or
pop
fisubl
or
sbb
cmc
mov
inc
adc
xor
pushf
pop
lret
sub
push
pop
inc
aaa
adcb
sub
in
xchg
or
mov
xchg
xor
push
pop
inc
andl
vpsraw
dec
scas
fldt
ret
push
jno
ret
jne
push
mov
adc
and
ss
mov
std
xchg
or
mov
inc
or
ret
pop
mov
jmp
sbb
sbb
stc
push
iretw
loope
push
pop
pop
pop
sub
xlat
dec
jmp
lcall
sbb
mov
push
push
adc
test
or
push
push
push
loopne
adc
cmpsl
push
sahf
jb
mov
jp
and
test
out
and
mov
call
push
sbb
pop
push
xchg
fisttpl
mov
mov
add
inc
fstpt
sbb
loopne
xor
inc
xchg
sbb
xchg
insb
pop
sarb
int
push
jle
mov
dec
repnz
jnp
leave
pop
lret
cmpsl
nop
rolb
inc
push
add
mov
stc
cwtl
and
pop
sub
mov
std
xchg
pop
xchg
loop
xor
pop
or
push
cmp
pop
jmp
stc
mov
rolb
pop
pop
sar
in
mov
xchg
pop
or
mov
aas
cwtl
cmp
aaa
pop
dec
jecxz
sbb
adc
jno
std
mov
cmp
icebp
jmp
xchg
inc
dec
pop
jbe
loopne
jbe
repnz
jb
inc
jae
cmp
gs
sub
dec
arpl
ja
out
and
out
jae
pop
das
and
and
mov
out
inc
mov
cwtl
lods
add
dec
inc
adc
fistpl
in
or
sbb
sti
lcall
shrl
stos
sbb
aaa
sbb
xor
jge
push
jns
xchg
push
xchg
pusha
mov
mov
out
cmp
pop
in
and
fwait
outsl
cmp
xchg
and
daa
push
aaa
adc
jg
in
or
or
xor
and
dec
pop
jbe
inc
sub
sub
cwtl
pop
adc
jno
inc
outsb
cmp
ret
adc
test
push
int3
aaa
std
aam
aas
ljmp
or
pop
sbb
pushf
shll
in
ljmp
adc
mov
stos
jnp
cmpsb
int
sbb
stc
push
adc
rcrl
pop
out
pop
sub
pop
push
inc
movsb
jl
mov
mov
adc
pop
push
jle
mov
es
mov
jbe
inc
call
ja
jae
xchg
sbbb
popf
mov
mov
xchg
repnz
jns
or
cs
or
ficoml
movsl
dec
sub
and
push
adc
jo
gs
sub
push
push
fisttpl
imul
lock
mov
pop
xor
push
outsb
sbb
jne
into
add
dec
test
add
push
test
pop
fcoml
pop
mov
pop
xor
pop
mov
xor
loope
stmxcsr
lods
andl
push
loopne
inc
call
push
mov
jecxz
pusha
pop
xor
nop
outsb
shl
pop
pmulhw
or
mov
fistpll
iret
dec
jg
dec
aaa
leave
cltd
sub
add
sbb
inc
outsb
mov
loopne
dec
icebp
sbb
push
and
repnz
or
lcall
shr
shrb
insl
gs
in
cmp
mov
and
xchg
in
cmp
hlt
ds
cmc
call
and
sub
adc
mov
or
into
repnz
xor
add
xor
fldl
cmp
pop
push
pop
repnz
movsb
cmc
dec
dec
xchg
jns
cltd
push
out
or
and
push
stc
jmp
pop
nop
cmc
dec
pushf
repz
jg
mov
in
mov
xchg
jle
xchg
sbb
jnp
mov
daa
stc
ljmp
repnz
aad
mov
es
pop
xor
fbstp
sub
pop
aaa
xchg
jle
add
inc
loopne
std
ss
lret
fisubrs
daa
cmpsl
or
push
iret
or
fistpll
cltd
imul
imul
sbb
ja
push
lcall
xchg
xchg
out
dec
iret
stc
push
ficoms
shrl
mov
push
jbe
test
divps
adc
jae
jnp
dec
fiaddl
or
repnz
adc
scas
and
pop
pop
adc
add
sahf
and
out
add
test
daa
out
pop
add
sbb
inc
icebp
mov
divb
mov
inc
les
fwait
dec
out
sbb
fldcw
lds
dec
mov
fs
pop
bound
ret
sbb
loope
sahf
cmp
leave
or
jnp
sub
or
or
mov
cmpsl
mov
or
mov
cmc
xchg
test
push
add
clc
sub
cmp
and
lcall
xchg
push
pop
sub
add
inc
das
daa
pop
mov
cmp
lods
in
movsl
adc
sbb
lods
or
push
xor
insb
sub
pop
mov
aas
aam
in
fisubrl
imul
xchg
ss
data16
cwtd
fimuls
movsb
sbb
push
popf
adcl
out
es
pop
and
cmc
xchg
pop
ds
inc
mull
xchg
inc
lahf
push
inc
xchg
outsb
and
stos
cld
mov
or
scas
jl
enter
lret
lcall
and
ja
loop
inc
inc
mov
mov
dec
fs
jne
mov
repnz
xchg
push
push
pop
ret
out
and
jl
les
mov
adc
mov
xorb
mov
test
mov
fstl
and
inc
out
outsb
sbb
pop
dec
jno
ficoms
popf
in
repz
insl
leave
stos
mov
mov
cld
imul
sahf
push
jno
push
sbb
pop
or
cli
cmp
rcrw
xor
jl
adc
flds
xlat
cwtl
inc
adc
jmp
cs
rclb
xchg
repz
cwtl
fstl
cld
adc
sbb
loope
in
push
and
sbb
test
aas
or
fisttps
sbb
addr16
fs
push
mov
sub
scas
inc
fisubrl
insl
aas
shll
sbb
adc
sbb
out
repnz
lret
in
or
negb
test
mov
sub
xchg
fs
lret
cli
rcl
jl
mov
inc
push
leave
insl
push
cmp
xor
mov
in
and
arpl
lahf
jmp
add
pop
mov
jge
loopne
lea
jns
cmpsl
mov
push
dec
inc
dec
inc
add
rorb
mov
fldt
or
and
imull
sbb
or
inc
xchg
test
pusha
push
jle
xchg
js
mov
cwtl
stc
mov
repnz
popa
and
pop
mov
jmp
fcmovu
test
loope
push
out
inc
xchg
arpl
in
add
lds
clc
cmp
pusha
lds
hlt
loop
mov
cmp
loop
cmp
fstl
or
push
add
fstpl
shll
xor
mov
inc
imul
pop
dec
jae
jecxz
aam
inc
dec
stc
pop
pushf
jae
dec
lahf
mov
movsb
pusha
mov
add
popf
or
inc
dec
inc
and
outsb
idivb
das
and
xor
rcl
in
xor
jecxz
rclb
dec
hlt
int3
xchg
imul
xchg
cwtl
adc
push
push
arpl
lods
pop
push
jbe
mov
fadds
adc
loopne
sbb
inc
das
add
pusha
ret
push
push
mov
cmp
mov
outsl
enter
or
fs
out
mov
popf
xor
mov
arpl
jp
pop
mov
adc
and
stos
dec
aaa
int3
cltd
dec
scas
ljmp
andl
sbb
or
into
push
in
mov
push
push
lods
add
dec
cmpsl
jp
aas
fwait
jg
and
cmp
jno
mov
inc
adc
aas
or
fldcw
mov
dec
mov
xchg
rcrl
cmp
mov
pop
lahf
pop
ss
pop
sbb
rolb
nop
cmp
pop
adc
cltd
dec
xchg
push
dec
rcll
sbb
xchg
mov
int
sbb
adc
icebp
call
or
push
push
pop
add
cli
xchg
xchg
xchg
sub
div
cmp
iret
or
push
xor
mull
out
pop
fs
push
mov
push
sub
popf
sub
or
cmp
xchg
repz
stos
inc
fs
xchg
cmpsl
and
xor
or
frstor
xor
pop
pop
lahf
cmp
and
add
xchg
push
lret
mov
pop
popf
add
flds
push
rclb
movsb
sbb
push
pop
lea
xchg
ja
push
xor
adc
sbb
xchg
roll
pop
xor
test
lcall
fsts
cli
jb
iret
dec
add
jo
and
stos
and
inc
and
dec
jae
outsl
push
mov
fisubrl
dec
stc
mov
sbb
clc
dec
jae
jmp
pop
adc
mov
inc
xlat
mov
insl
and
add
sbb
das
movsb
je
je
jae
xchg
sti
push
mov
pop
pop
pop
mov
and
in
mov
popa
adc
std
movups
loopne
push
jno
sbb
gs
pop
cs
sub
or
iret
ds
lds
mov
jmp
mov
inc
cs
pop
xorb
dec
shrl
mov
push
and
mov
push
outsl
lret
clc
in
test
pop
leave
lret
mov
in
push
inc
inc
xchg
ret
daa
adc
rorb
mov
adc
cmpsb
outsl
pop
movsb
push
cltd
jp
cli
xchg
pop
cmp
push
mov
ss
xchg
cmp
inc
push
lahf
and
fcoms
fwait
and
jae
or
lret
push
fnstenv
cld
clc
mov
pop
and
cmc
test
xchg
lret
ret
test
shlb
xor
push
fisttpll
nop
xchg
rep
inc
negl
jo
dec
pop
movsb
icebp
lcall
test
shll
jno
push
dec
popl
outsl
mov
lret
insb
jl
inc
sub
mov
cwtl
cmpsb
mov
clc
pop
inc
mov
adc
xor
daa
mov
pop
lea
faddl
mov
xlat
mov
roll
out
lea
jle
dec
sbb
sub
rcr
sub
gs
mov
cmp
pusha
add
scas
and
stc
pop
jle
or
and
fs
push
inc
test
adc
cmpsl
std
cmp
mov
shl
jne
add
in
subb
outsb
pop
bound
lcall
push
push
and
sarl
inc
mov
popf
loop,pn
lahf
and
dec
mov
movsl
in
jg
jo
test
mov
push
and
stc
mov
push
lea
movsl
and
test
cmp
fs
cmp
fs
inc
push
sbb
pusha
lahf
rol
unpcklps
cltd
arpl
cmpsb
sbb
scas
cmp
inc
in
xlat
fs
and
mov
inc
lcall
loope
mov
push
pop
pop
jmp
adc
lods
adc
sbb
sbb
lods
pop
rorl
cmpsb
fdivrs
pop
inc
xor
jb
adc
imul
shll
out
push
mov
inc
mov
out
and
sub
ret
outsb
xor
repz
fwait
jns
int
andl
inc
psubsb
mov
xchg
pop
inc
movsl
cmp
fwait
cmpsb
jns
popa
adcb
pusha
inc
repnz
stc
and
out
xchg
adc
loopne
fcompl
cmp
mov
sahf
rcll
ljmp
lds
jle
push
leave
adc
sbb
xchg
xchg
or
inc
cmp
gs
mov
imul
xchg
pop
addl
adc
xor
les
adc
pop
mov
pop
test
or
sub
outsb
mov
push
push
pop
repz
jbe
pop
pop
push
xchg
test
in
sbb
mov
sbb
stos
fidivs
adc
aas
mov
into
iret
mov
pop
les
outsl
sbb
icebp
popa
out
cld
aad
mov
lret
mov
sub
push
call
aad
es
sub
and
sti
dec
or
stc
call
repnz
pop
inc
mov
push
rcrl
sbb
push
js
pop
imul
jle
pop
sub
sub
std
sub
rcrb
sub
cltd
pop
xacquire
adc
cmpsb
loop
nop
jne
mov
adc
repnz
push
repz
lods
push
popf
lret
sub
mov
daa
mov
sbb
push
adc
mov
int
dec
bnd
aad
push
fnstsw
dec
mov
gs
cmp
in
cmp
lds
xor
repnz
mov
xchg
pusha
pop
sbb
dec
pop
int
pop
inc
lds
dec
mov
movsb
stc
or
cmp
push
adc
push
psrad
and
xor
lock
in
xor
shll
mov
fisttpll
xchg
sbb
dec
mov
js
pop
adc
mov
pushf
pop
in
cmc
adc
pop
iret
aas
lcall
push
pop
push
fbld
cmc
call
jle
jmp
je
es
clc
sub
jmp
loope
int3
xlat
notb
das
iret
in
ljmp
lahf
pop
push
pop
adc
pushf
cmc
enter
cmp
lcall
jmp
cs
stc
push
pop
test
cmp
inc
lahf
cwtl
inc
aaa
xchg
mov
push
add
ljmp
xchg
in
movsb
add
adc
shlb
sbbl
dec
xlat
or
sub
mov
add
ficoms
hlt
lea
sbb
movsl
dec
repnz
push
pushf
xor
fadds
xorl
or
mov
ret
push
jns
imul
fcoms
push
sub
aas
xchg
fs
and
bound
ret
int3
adc
test
lods
cmp
cmp
imul
push
icebp
sbb
jno
loop
push
insb
jecxz
nop
cmc
sub
and
xor
fmuls
xor
in
push
mov
and
sbb
jg
adc
loope
repz
sbb
mov
or
and
pushf
mov
mov
adc
xchg
mov
sub
iret
int3
out
call
js
xchg
rcll
mov
cmp
sub
add
ja
rcr
push
add
sub
mov
stos
pop
loop
or
adc
sbb
pop
lcall
mov
testb
xchg
xchg
mov
rorl
lods
test
insb
push
mov
inc
outsl
sub
out
cmp
dec
dec
inc
stos
hlt
sbb
pop
push
sbb
xchg
int3
mov
or
sbbb
cmpl
int
ret
xor
lcall
cld
ficomps
fwait
mov
push
mov
test
jne
lods
jecxz
addr16
test
das
insl
cmp
test
andb
adc
sbb
xor
jnp
pop
sbb
ljmp
sub
dec
js
push
enter
jle
in
repnz
sbb
inc
jmp
das
pusha
and
daa
dec
orl
cli
iret
iret
mov
or
and
fnstenv
xor
int3
mov
pushf
cmpsb
fcompl
dec
nop
mov
dec
pusha
ret
fs
cmp
add
jne
sub
cmc
inc
je
push
call
mov
mov
leave
xchg
stc
add
shl
mov
lret
pop
cmova
xchg
repnz
push
jp
xchg
jp
mov
imul
inc
pop
movsb
adc
sbb
mov
mov
fmull
pop
mov
loop
mov
aas
sbb
out
es
xor
test
push
xor
jg
mov
sbb
dec
rclb
jecxz
xchg
push
bound
sub
sub
test
test
aam
stos
dec
ret
int
sbb
fidivrl
out
mov
popa
add
cli
in
xor
push
cld
fwait
adc
xchg
negl
ljmp
cmc
dec
push
or
js
js
push
int3
cltd
scas
dec
jbe
hlt
in
cs
push
test
in
jb
cli
mov
inc
pop
fidivl
and
xchg
cld
and
in
or
and
es
dec
fsts
aas
ret
jmp
inc
test
aas
dec
sbb
sub
shrl
inc
movsb
fprem1
movsb
and
pop
repnz
push
daa
push
jecxz
out
adc
jmp
shll
add
cmp
clc
cmpsb
lret
mov
pop
dec
and
fisubl
xor
ret
jg
pushf
cld
pop
xchg
push
test
mov
pop
fnsave
pop
movsl
push
cmp
sub
push
dec
fwait
mov
adc
pop
pop
xchg
push
mov
inc
fists
in
rcl
and
or
cmpsb
insl
rolb
mov
pop
mov
jge
es
push
mov
int
shll
jmp
or
int3
loop
mov
and
fs
sbbl
jne
xor
out
fiadds
pop
test
or
pop
leave
scas
add
daa
adc
adc
repz
pop
xlat
sub
xchg
int
out
adc
mov
mov
or
daa
test
fbstp
mov
fidivl
js
push
inc
aaa
movsl
add
sbb
imulw
adc
push
pop
rcrb
fcmovnu
loop
fidivl
or
cmp
cmpsl
add
jp
out
inc
sub
ja
xor
mov
repz
dec
test
mov
cmp
stos
mov
ljmp
xor
stos
xor
or
test
pop
xlat
cs
sub
sub
ret
inc
dec
mov
pop
or
in
leave
aaa
mov
shr
sbb
mov
mov
mov
fdivl
pop
inc
fwait
and
jp
out
xchg
icebp
lcall
jnp
mov
test
push
leave
adc
sbb
sti
sahf
inc
rcrl
dec
js
lods
adc
cmp
cli
push
or
xlat
dec
push
dec
insb
xor
mov
and
and
sub
push
xor
pop
push
mov
push
jbe
mov
loopne
jmp
ds
xor
pusha
pop
jnp
aaa
pop
jno
js
cs
dec
lret
mov
hlt
and
popa
test
pop
add
adc
out
cmpsb
and
cmp
and
push
mov
mov
inc
ds
xor
shlb
xchg
xchg
rcr
vpcomw
pusha
xor
mov
push
or
and
pop
or
pop
lcall
das
mov
push
jbe
sahf
adc
push
in
popf
dec
cmpsl
test
shl
cmp
imul
jecxz
cmp
aam
mov
mov
mov
js
push
mov
mov
mov
add
push
test
fsubs
sbb
popf
jae
jecxz
ret
push
mov
jbe
addl
aaa
pop
adc
mov
ret
and
into
maskmovq
notl
pop
pop
fnsave
andl
cmp
pop
pop
imul
rcl
mov
out
jne
daa
mov
iret
fwait
add
idivb
mov
sub
xor
adc
mov
xor
mov
add
pushf
or
xor
pop
or
loopne
and
and
cmc
es
mov
mov
pop
adc
jmp
movb
lods
pop
mov
pop
mov
jle
jge
out
test
pushf
sti
push
enter
dec
dec
inc
adc
xlat
sbb
sub
pop
add
mov
add
fwait
mov
and
xchg
fisubl
fwait
jmp
movsl
je
sub
je
pop
sbb
test
movsb
sti
mov
xchg
add
inc
stc
pusha
cli
popl
push
cltd
or
push
cmp
push
stos
cmp
iret
add
sub
lods
push
mov
or
int
push
add
idiv
lock
das
mov
ja
lods
cli
jmp
in
cmpsl
hlt
mov
inc
pop
mov
aam
push
mov
clc
mov
xchg
pop
xorb
clc
dec
pop
cs
jmp
lret
and
xchg
in
xchg
lret
nop
or
sti
inc
in
mov
negl
adc
pop
jno
loop
push
or
xchg
loop
repnz
or
insl
jo
pop
push
lcall
pop
xchg
push
adc
cmp
adc
sbb
inc
mov
or
ja
in
push
push
adc
sbb
stc
arpl
inc
mov
lock
test
out
sarb
shlb
mov
shrl
iret
popf
aas
or
pop
sbb
push
loopne
sbb
lea
sbb
sub
mov
add
push
push
das
mov
jnp
pop
sbb
lds
add
call
int
push
jno
jns
jg
mov
or
in
add
and
stos
jge
sbb
add
sub
and
icebp
andb
mov
outsb
sbb
adc
adc
and
inc
xchg
lret
lds
mov
clc
hlt
insb
ds
dec
scas
enter
shll
clc
xchg
jbe
jge
gs
pop
cmp
dec
jge
adc
push
not
frstor
push
adc
pop
dec
mov
imul
jg
xorb
jbe
ret
cmp
dec
dec
xchg
pop
movsb
jmp
loope
dec
cmp
fiaddl
add
repnz
dec
cwtl
mov
dec
insl
jnp
insl
leave
dec
decl
push
dec
inc
loopne
jg
mov
adc
aam
fnstenv
push
or
lods
ss
pusha
mov
lds
xchg
cmpsb
loopne
insl
cmpsl
cltd
je
mov
inc
push
mov
jl
add
and
cld
cltd
pop
fsts
xchg
pop
xor
ja
lds
cmp
mov
mov
stos
dec
in
out
mov
js
or
aaa
mov
cmc
repz
addr16
push
das
fst
push
lds
es
jl
aad
push
das
add
inc
clc
pop
stc
inc
aam
pop
push
and
rol
movsl
ljmp
jbe
arpl
in
and
cmp
inc
fists
pusha
jnp
or
in
mov
mov
shlb
pusha
add
inc
pop
or
ret
xchg
sbb
repnz
mov
sub
pop
mov
pushw
xchg
lret
mov
and
imul
insl
xchg
aaa
or
inc
std
js
jp
js
mul
sub
pop
andl
mov
pusha
pop
cli
in
push
cmp
pusha
add
jl
jle
or
rcrl
xchg
outsb
cltd
hlt
imul
add
pop
test
push
stc
icebp
jecxz
sub
jle
push
rol
mov
xchg
cmc
and
rcrb
shlb
xchg
stos
or
push
shll
mov
pushf
pop
lods
mov
movsl
pop
mov
negb
stc
sarb
imul
pop
cmp
stos
rcrl
pushf
cwtl
shl
push
insb
gs
lret
push
and
ret
scas
mov
pop
or
hlt
sub
loop
sub
add
pop
das
in
sub
sbb
ds
lods
mov
int
dec
sbb
int
or
hlt
hlt
sub
ret
sub
loope
sbb
ljmp
dec
push
imul
iret
decl
xor
cmp
pop
lret
push
int
in
inc
mov
jp
pop
movl
dec
popf
bound
in
push
dec
outsl
out
lods
fstl
xchg
or
out
stos
loope
sub
imul
jge
xchg
aas
test
xchg
jne
aad
in
outsb
enter
cli
xor
arpl
xchg
stos
divl
inc
xchg
push
ficoml
or
int
subb
jg
rcr
out
adc
push
add
aam
cmpsb
scas
in
sbb
cmp
or
jg
pop
pop
inc
adc
sbb
ds
xchg
mov
push
cmp
outsb
xchg
push
or
test
rclb
add
fildl
fdivrl
push
and
outsb
addb
je
adc
jle
hlt
lahf
xchg
fadds
daa
rclw
test
adc
hlt
cld
out
push
or
movsb
or
xor
fwait
pop
mov
xor
jl
jns
sbb
jno
push
push
dec
push
stos
loop,pt
mov
sub
gs
xchg
rorl
lcall
repz
mov
jecxz
push
inc
fstps
adc
insb
cs
adc
jl
insb
adc
dec
xor
push
aas
addr16
scas
lods
sub
cmpsl
jo
sbb
pop
subb
les
aas
sbb
lahf
and
xlat
in
and
loopne
xchg
sub
gs
jns
jmp
js
jns
ds
pop
xchg
ret
rcrl
inc
ret
jne
mov
out
stc
mov
sub
inc
pop
push
and
in
lock
cli
pop
jbe
inc
cmpsl
int
hlt
mov
pop
jne
sbb
lret
push
xor
mov
cmp
mul
cmp
sbb
push
or
mov
pop
sbb
cmp
das
or
adc
ds
repz
mov
dec
out
lret
int
push
insb
add
hlt
daa
inc
leave
aam
jbe
push
lds
mov
cmp
shl
popa
xor
and
cmpsb
mov
jbe
gs
or
jp
inc
scas
push
jns
push
stos
sti
mov
inc
adc
outsb
mov
mov
stc
lea
xor
cs
pop
ret
xor
or
adc
jge
add
shr
mov
xlat
inc
enter
push
notl
and
stc
fimull
cmpsb
xchg
ds
lea
fldenv
push
and
pop
mov
cmp
pushf
dec
inc
int
pop
ret
in
mov
jp
out
sbb
lret
mov
popa
inc
adc
test
mull
cs
mov
pop
jl
sub
push
movsb
nop
mov
push
daa
and
ja
das
fisubrs
and
rcrl
dec
inc
cmp
fiaddl
mov
mov
jne
mov
mov
add
sbb
faddl
pop
cs
popa
cmpsl
add
daa
cs
imul
pop
cwtl
mov
pop
mov
mov
pop
xor
jmp
pop
lds
lcall
inc
sbb
mov
je
and
pop
sti
stos
aam
sub
adc
or
out
cltd
clc
mov
notl
pop
xchg
push
jb
call
push
push
adc
push
jns
and
pop
pop
xor
mov
in
mov
pushf
xchg
mov
or
fwait
adc
mov
and
stos
push
imul
jp
dec
push
cmp
jge
adc
orl
fldcw
pop
add
pop
push
es
sub
fwait
sahf
xchg
fcomps
in
xor
cmp
sahf
jmp
mov
pop
insb
dec
jae
sarb
push
sbb
lods
stos
sub
fistpll
mov
stos
lds
mov
imul
imul
negb
add
out
cmc
lock
pop
mov
adc
mov
lret
adc
pop
pop
stc
mov
dec
sub
fcmovbe
push
movsl
adc
ret
test
mov
and
cli
fmuls
push
scas
push
ret
pop
pop
pop
xchg
adc
pop
lret
sbb
mov
popf
popf
xchg
mov
pop
mov
jbe
cmp
xor
jne
lock
cmp
cmc
gs
sti
pop
pop
jge
mov
mov
and
leave
dec
sbb
fnstenv
xchg
inc
das
dec
stos
gs
sub
mov
xchg
insl
lds
scas
repnz
sub
mov
call
dec
and
leave
dec
and
inc
adc
xor
popf
mov
push
imul
mov
push
pop
jp
xchg
dec
mov
cld
or
inc
xchg
pop
sub
and
mov
fstps
sarb
jae
pop
mov
test
sbb
xchg
push
pop
add
mov
push
call
jno
or
or
mov
sbb
and
dec
mov
pop
jecxz
fldt
sub
int
mov
mov
add
mov
out
add
and
and
daa
push
push
dec
push
cmp
js
dec
bnd
cli
push
or
xchg
xor
push
sarl
cmp
pop
jno
repnz
or
popa
xchg
jecxz
mov
lahf
in
hlt
stos
cmpsb
imul
pop
push
ljmp
sbb
sahf
xorl
icebp
push
lock
jl
push
jl
pop
fdivrp
add
jmp
push
dec
daa
stc
adc
or
xchg
out
fdivs
mov
or
xchg
roll
cmp
in
xor
loop
pop
in
xchg
sbb
cld
dec
dec
adc
popf
andb
fldcw
push
sub
cli
mov
or
in
lds
cmpsl
pop
cmp
jo
in
cmpsl
adc
sahf
sbb
lret
sub
stos
dec
sbb
sarb
outsb
stos
jle
inc
pop
lds
xchg
cmp
es
ret
dec
test
lea
and
jg
pop
pop
sbb
movsb
xchg
jb
test
inc
pop
xchg
pop
add
outsl
testb
cld
pop
sbb
popa
icebp
sbb
pop
ret
cmc
repnz
push
dec
mov
mov
pop
rolb
mov
xor
ror
jmp
aaa
das
jle
cmpsl
mov
pop
sbb
mov
sbb
lods
sub
adc
or
fmuls
ret
and
pusha
add
xchg
pop
aam
push
pop
cld
and
repz
jne
out
mov
sarl
loop
pop
push
int
cs
daa
scas
mov
shrb
cmp
cmpsl
sub
int
xchg
sti
test
or
pop
call
mov
lods
stos
inc
ja
out
cmc
push
jbe
es
fidivrl
dec
inc
mov
cmp
int
inc
adc
fs
popf
xor
ja
cld
cmp
pop
or
or
push
mov
in
and
sbb
xchg
leave
out
cltd
mov
int
aas
sahf
aam
shrb
in
push
cld
jecxz
and
push
adc
dec
sti
jp
in
inc
aas
pop
repnz
xchg
out
push
mov
sahf
or
sub
pop
arpl
xchg
lahf
mov
pop
and
pop
add
stos
lahf
ficoms
jg
xor
sbb
aas
cmpsb
inc
in
fcmovne
sbb
test
push
movsl
stos
xchg
mov
lahf
jne
hlt
push
mov
jmp
ds
movl
rcll
and
popf
jmp
push
int3
addr16
mov
push
sub
ljmp
std
inc
cmp
test
aaa
mov
arpl
addr16
sub
cmp
fildll
or
mov
jmp
scas
mov
sbb
cld
dec
add
xchg
xor
mov
push
pop
xchg
pop
cwtl
into
xlat
jb
jl
xchg
stos
sub
das
sub
mov
inc
mov
mov
popa
ja
and
inc
std
mov
mov
mov
dec
lds
fldenv
jmp
cmp
push
pop
sbb
cmpb
daa
cmp
ficomps
iret
bound
push
mov
mov
inc
ja
dec
lcall
addr16
xor
jecxz
repnz
xchg
into
pop
mov
push
jl
rclb
inc
mov
sti
add
ret
and
xchg
push
cltd
es
fsts
iret
frstor
jecxz
mov
xchg
stos
adc
mov
sarb
xor
inc
fnstsw
or
scas
lahf
jns
inc
jns
shlb
test
jp
iret
leave
inc
pop
out
push
lods
loopne
rcll
ss
imul
sub
cwtl
jnp
cmp
aas
and
ljmp
pop
fs
push
sub
sbb
fimull
in
jo
jg
pop
sti
cld
xchg
adc
imul
push
pop
lods
adc
pusha
iret
cmp
pop
push
xor
stc
or
adc
mov
stc
insb
test
add
jp
jp
push
jg
jecxz
bnd
mov
push
push
push
lock
es
push
mov
pusha
or
sub
pop
movntps
and
popa
and
pop
mov
mov
dec
and
popa
fsts
insl
push
cmp
xchg
push
inc
fisubl
inc
inc
push
cltd
ret
cmc
jns
aas
jmp
or
outsb
mov
mov
mov
arpl
xor
adc
lock
pop
loopne
fisubrl
adc
rol
pop
iret
cmp
xchg
dec
pop
popa
sub
inc
xor
mov
and
mov
int
shll
scas
sbb
test
cmpsl
pusha
imul
xor
daa
mov
xchg
add
pop
imul
mov
inc
sbb
std
andb
bound
lds
inc
sub
inc
std
or
pop
mov
pop
adc
shll
mull
shll
loope
xor
loope
dec
mov
jl
fstp
stos
or
inc
push
or
pop
pop
jle
adc
sbb
push
movsb
xchg
fists
mov
addr16
mov
fcmovu
pop
hlt
jle
daa
aad
push
and
fbstp
call
cltd
push
mov
scas
add
test
lahf
pusha
popa
inc
jg
inc
rcr
xor
daa
mov
aad
jno
sbbl
into
xor
sbb
aad
and
pop
pop
movsb
inc
fistps
mov
xor
mov
iret
int
lods
ljmp
testb
or
fwait
or
push
and
fdivp
hlt
cwtl
fimull
rclb
push
sub
xchg
shll
scas
mov
stos
pop
fstpl
or
scas
cs
add
inc
mov
imul
stc
add
dec
mov
sub
outsb
mov
arpl
ret
jns
or
bound
xor
es
dec
pop
out
std
es
pop
das
pusha
cmp
push
lahf
shl
xor
test
pop
dec
idivl
pop
or
sbb
pop
popf
sbb
dec
sub
or
add
ljmp
inc
out
std
sbb
jnp
sub
xor
dec
xor
cmc
xchg
in
inc
shrl
out
cmp
xor
xor
mov
insl
enter
pop
dec
stos
and
and
gs
dec
xchg
pop
pop
sahf
loop
call
fucom
push
pop
inc
sbb
in
pop
fidivl
adc
jecxz
loope
mov
xor
mov
mov
and
xor
clc
ljmp
popa
test
into
inc
cs
xchg
es
aam
xor
shlb
leave
mov
add
fdivrl
adc
xchg
jne
loopne
sbb
es
inc
mov
sub
sub
lret
popa
mov
mov
xor
cmpsb
mov
sub
mov
sub
mov
sub
mov
sub
mov
das
shlb
and
sbb
pop
ret
and
push
cmp
xor
sbb
frstor
scas
cs
pop
das
fsts
mov
push
dec
sarb
xchg
out
clc
into
xchg
int
lds
push
shrl
or
and
add
push
pop
jle
inc
daa
daa
scas
fldenv
mov
sar
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
push
nop
nop
nop
push
push
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
push
nop
nop
call
nop
sub
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
push
nop
push
nop
nop
nop
nop
nop
push
nop
nop
nop
push
nop
nop
call
nop
nop
nop
nop
nop
add
nop
nop
nop
mov
nop
nop
nop
mov
nop
nop
nop
nop
nop
shr
nop
nop
nop
jmp
nop
nop
nop
nop
nop
lods
nop
nop
nop
nop
nop
add
xor
nop
nop
mov
nop
nop
nop
dec
nop
je
nop
nop
jmp
nop
nop
nop
pop
nop
nop
nop
pop
nop
nop
pop
nop
nop
jmp
