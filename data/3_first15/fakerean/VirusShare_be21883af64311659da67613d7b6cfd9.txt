je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
pop
pop
ret
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
call
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
mov
mov
call
andl
push
mov
lea
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
mov
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rorb
xchg
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
punpckhdq
mov
sub
add
mov
mov
push
add
add
scas
add
stos
add
add
add
add
icebp
mov
mov
sub
push
mov
add
push
push
lea
push
lea
push
push
call
ljmp
addb
xchg
cmc
add
mov
add
xor
add
add
mov
push
ja
loop
push
mov
xlat
movsb
jbe
sahf
iret
add
add
lea
add
add
clc
in
lds
add
lahf
push
lret
add
jmp
push
sub
pop
popl
push
push
lea
push
push
lea
push
call
mov
add
add
add
add
mov
add
add
fwait
add
xchg
into
fsub
add
mov
in
in
lcall
push
push
push
push
push
call
movb
add
jo
add
movb
add
rclb
add
add
mov
in
je
add
insb
pop
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
lahf
add
add
into
aam
mov
popa
add
test
add
ljmp
add
movsl
fcomi
pop
xchg
add
xchg
mov
adc
cwtl
add
mov
mov
add
lret
movsb
add
add
insb
pusha
push
mov
xchg
add
mov
data16
jmp
sub
pop
push
push
lea
push
push
call
jbe
popf
add
mov
stc
push
lret
add
stc
add
add
mov
mov
jmp
jne
outsl
add
add
jmp
bnd
add
stos
addb
pop
add
in
pop
lcall
subl
out
xchg
testl
rolb
pushf
add
add
sub
pop
call
push
push
push
lea
push
push
call
push
lods
fwait
jge
sti
add
add
test
xchg
repnz
add
add
push
add
add
sub
pop
call
jmp
push
push
call
add
add
mov
into
add
add
mov
outsl
xchg
mov
add
push
std
jbe
add
cmpsl
mov
xor
bound
add
jle
mov
add
les
sub
pop
ret
push
push
push
push
push
push
push
lea
push
call
pusha
pop
add
mov
add
push
mov
xchg
add
lea
stos
add
std
cld
popa
enter
add
lret
rolb
hlt
mov
push
push
push
lea
push
push
push
push
push
push
push
call
aad
movsb
push
add
push
jbe
add
pushf
addl
xchg
jp
mov
add
mov
add
fldenv
add
sub
pop
add
push
push
lea
push
push
push
call
jno
fwait
add
test
push
call
rolb
add
xchg
add
add
add
lock
add
add
mov
pop
lret
jge
sarl
into
mov
imul
add
mov
lcall
fistps
in
in
lcall
ret
add
add
push
lea
push
push
lea
push
push
lea
push
push
call
add
mov
add
pop
pop
mov
add
cwtl
xorb
xchg
add
add
add
add
push
filds
data16
ja
add
mov
filds
sub
pop
add
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
test
mov
jecxz
add
pushf
push
jge
add
flds
cld
add
add
jae
ret
addl
push
mov
mov
jmp
sub
pop
mov
push
push
push
lea
push
push
push
call
mov
clc
add
add
add
rcrb
arpl
add
flds
shlb
shll
mov
fs
add
push
imul
add
mov
add
mov
xchg
add
sbb
push
lea
push
push
call
in
ljmp
jge
mov
hlt
add
leave
insb
jae
arpl
cltd
add
push
add
add
add
hlt
lcall
les
add
push
push
sub
push
or
not
add
ror
not
ror
sub
ror
sub
pop
sub
pop
push
push
push
push
push
push
push
call
add
add
add
jmp
rolb
jle
filds
add
add
stos
leave
xchg
out
aam
xchg
add
lods
add
imul
push
add
add
jne
mov
sub
pop
pushl
call
push
lea
push
push
call
add
jmp
pop
add
rcrb
add
roll
ret
add
add
pop
mov
add
shl
scas
sub
pop
mov
push
push
push
push
push
call
add
addl
pusha
add
xchg
out
fdiv
flds
add
push
out
add
add
add
mov
add
push
scas
add
add
je
pop
add
lcall
inc
call
push
push
push
push
push
push
call
add
fadd
mov
mov
enter
add
loope
jmp
add
xlat
out
fwait
add
add
push
pop
add
add
roll
lcall
inc
call
push
push
push
call
mov
add
add
pop
add
add
mov
ror
lods
add
mov
lock
xchg
ret
jl
into
add
test
add
loopne
sub
pop
push
pushl
push
lea
push
push
lea
push
push
lea
push
push
call
add
jo
add
xchg
lock
add
jns
mov
nop
shrl
add
into
mov
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
cmc
mov
mov
lock
mov
add
stos
lds
add
fcoms
jno
out
add
neg
add
pushf
mov
jle
imul
add
add
add
leave
clc
push
add
add
int3
leave
add
int
rolb
jge
add
add
xchg
adc
add
push
push
push
lea
push
lea
push
push
lea
push
call
pop
add
call
addl
jge
mov
mov
add
cmpsl
add
faddl
cli
repnz
xchg
add
add
in
aam
add
mov
add
add
ljmp
mov
in
in
lcall
jne
push
push
call
jb
jmp
add
add
add
bnd
push
add
movb
add
add
idiv
add
fildll
push
add
in
mov
mov
jp
xchg
add
rolb
push
popl
push
add
roll
testb
mov
mov
call
sti
imul
push
push
push
call
cmc
repnz
add
mov
jl
into
rol
ror
add
xchg
lds
into
mov
jns
add
ficoms
repnz
test
sbbl
hlt
add
movsl
fidivs
add
in
add
add
lods
xlat
add
repnz
pop
call
push
push
rol
xor
push
and
add
rol
add
lea
sub
pop
not
lea
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
push
stos
add
add
add
add
pushf
mov
sti
into
add
pop
add
xchg
add
add
add
sbbb
add
add
add
fdivr
lcall
jne
push
push
push
push
call
xchg
add
cmp
loope
xchg
mov
add
add
add
xchg
add
aad
into
int3
in
sub
mov
jo
mov
xchg
add
add
add
add
mov
add
hlt
push
add
mov
add
lcall
stos
add
push
push
push
add
push
push
pop
add
not
shr
sub
pop
shr
shl
sub
add
pop
push
push
call
loopne
add
mov
pop
add
bound
leave
add
add
add
add
mov
push
jp
add
movsl
add
add
add
jb
cwtl
add
into
scas
leave
ja
mov
call
in
clc
lcall
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
lds
mov
add
add
faddl
xchg
push
pop
fadds
add
out
stos
ret
mov
mov
enter
add
add
add
mov
add
mov
mov
test
mov
add
cwtl
add
add
lcall
add
rclb
and
pop
mov
push
push
call
xchg
in
add
add
add
ficoml
int3
stos
mov
cmpsl
add
add
pop
add
aad
jbe
jb
add
aam
fucomi
cmc
sbbb
add
xchg
add
incb
add
cmpsb
push
ror
add
mov
add
roll
mov
in
lock
lcall
clc
push
push
push
push
push
lea
push
push
push
push
push
call
add
out
add
ljmp
subl
add
add
add
add
add
lea
iret
mov
out
jnp
add
lcall
push
push
push
push
push
push
push
push
call
add
mov
add
fsubp
movb
mov
add
popf
jnp
push
add
add
add
imul
lret
add
les
add
mov
add
pop
add
in
shr
add
mov
add
add
repnz
push
add
xlat
loope
lea
lock
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
in
add
addl
add
jecxz
add
cmc
add
pop
rolb
pop
add
add
push
xchg
clc
xchg
int
mov
icebp
add
mov
jecxz
out
in
add
cwtl
bound
add
imul
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
popf
clc
add
add
add
push
add
jbe
add
add
addl
testb
pusha
add
pop
in
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
inc
lds
xchg
add
add
mov
push
jle
add
add
push
int
jecxz
add
mov
je
add
add
jp
cmc
mov
add
add
mov
add
add
add
addb
add
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
and
aam
outsl
add
jnp
cltd
add
jbe
arpl
adc
pop
jecxz
add
cld
add
add
lret
mov
add
repnz
mov
mov
adcl
filds
fwait
add
int3
add
pop
pop
add
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
cmpsb
cli
mov
xchg
add
lods
add
mov
pop
fisttps
fdivrp
roll
out
arpl
pop
add
add
add
mov
aam
data16
outsl
jns
mov
cmpsb
jge
scas
movsb
push
add
add
add
jo
stc
cmpsl
clc
js
jne
jecxz
mov
stc
sub
pop
mov
xor
push
lea
push
push
call
add
lret
lea
add
xchg
xchg
stc
mov
add
mov
cmpsb
roll
jle
out
cmpsl
add
add
pop
mov
enter
popf
loopne
imul
lahf
add
mov
add
cli
fldl
pop
add
push
push
push
call
add
aam
popf
nop
pushf
ja
fwait
add
add
add
mov
jbe
roll
add
mov
mov
lcall
inc
or
or
dec
push
push
push
lea
push
push
call
jno
add
add
pop
mov
mov
mov
mov
add
lret
mov
pop
and
lock
add
push
test
arpl
add
lcall
add
mov
add
pop
insb
scas
sub
pop
xor
push
push
push
lea
push
push
push
push
lea
push
call
xchg
mov
jl
add
insb
push
cli
add
imul
lock
cmc
jge
add
movsb
add
in
loopne
add
push
push
call
jp
mov
mov
int
nop
jge
add
add
sarb
shrl
add
cmpsb
add
add
add
jle
lods
mov
add
add
add
lret
add
lcall
lock
push
lea
push
push
push
push
push
lea
push
call
out
in
jno
bound
mov
add
add
test
pop
push
mov
jns
movsl
add
lock
insb
xchg
jno
stc
add
test
xchg
mov
mov
mov
add
in
loopne
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
call
loop
loopne
add
int3
add
add
add
cli
jae
mov
add
xchg
xchg
mov
addl
addr16
scas
mov
into
mov
push
add
add
shlb
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
mov
lock
fistpll
push
add
mov
add
add
add
mov
add
imul
add
add
add
add
je
push
rolb
xchg
in
out
out
cld
mov
aad
add
push
add
imul
lcall
inc
or
or
aad
add
inc
add
add
add
sbbb
cmc
testl
fadds
mov
lea
sbbl
sti
xchg
scas
mov
test
in
hlt
add
add
lret
int3
in
jp
add
add
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
out
add
add
add
mov
cmpsl
add
add
jmp
into
mov
cwtl
xchg
xchg
cld
outsl
add
sub
pop
add
push
push
call
mov
add
pop
add
mov
enter
cmpsb
add
mov
add
add
add
add
add
mov
add
add
add
fcomip
std
fiaddl
jge
fwait
push
testb
ret
sub
pop
sub
pop
push
lea
push
push
push
push
push
push
call
push
rolb
cwtl
push
call
mov
push
mov
addl
loopne
mov
add
arpl
jnp
mov
add
push
push
add
add
push
out
xchg
in
add
push
adc
addl
gs
nop
into
xchg
add
scas
add
andl
popl
add
in
rep
pop
push
push
call
sti
add
mov
add
add
add
into
jae
add
cmpsl
stos
add
add
int3
in
mov
lcall
pop
mov
push
push
push
push
push
push
push
push
push
push
call
movsb
add
add
lahf
sti
scas
xchg
mov
ror
imul
testb
add
pop
add
stos
mov
sti
pop
in
add
lock
pop
cmc
add
pop
add
cli
xchg
add
lock
sub
pop
add
add
push
lea
push
push
lea
push
lea
push
push
push
call
aad
in
mov
fistpll
mov
fsubrl
add
in
xchg
add
int
push
add
add
add
iret
sub
pop
add
mov
xor
push
push
call
pop
out
add
add
pop
sarb
add
add
add
arpl
add
add
push
add
add
add
lods
test
jge
add
test
mov
roll
add
mov
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
fadds
popf
push
lods
mov
add
icebp
add
add
add
add
add
pop
add
arpl
add
xchg
out
loopne
add
add
fcmovu
mov
pop
add
add
add
test
xchg
hlt
xlat
push
enter
in
fdivr
lcall
adc
push
push
push
push
push
push
push
lea
push
lea
push
push
call
into
iret
add
add
fildll
push
add
add
pop
mov
popa
jnp
int
add
in
add
shl
add
stc
add
add
test
add
test
xlat
ja
add
cwtl
les
test
mov
jp
fs
mov
les
add
push
push
lea
push
push
push
lea
push
push
call
add
test
add
add
add
int3
pop
add
add
cmpsb
mov
add
sub
pop
mov
push
push
push
push
call
add
lods
in
cltd
add
in
out
xchg
push
ret
add
mov
pushf
xchg
add
add
fs
mov
pop
test
std
add
sti
add
add
pop
jge
add
shl
add
clc
add
pop
lret
pop
leave
jp
cwtl
mov
loope
xchg
sub
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
jb
lods
push
andl
lahf
outsl
repnz
lret
mov
imul
jae
push
add
add
rcrl
add
mov
insb
add
add
add
addr16
ret
in
fdivr
lcall
les
push
push
lea
push
push
call
lods
arpl
insb
add
jmp
clc
add
jmp
add
shl
add
popa
mov
in
test
cltd
enter
rcrb
add
add
cmc
push
repnz
loope
aad
imul
jno
add
icebp
add
jne
xchg
mov
test
add
ret
sbb
jno
push
push
push
call
mov
jo
add
push
xchg
lds
rcr
clc
icebp
add
add
add
pushf
add
mov
lcall
arpl
jo
cli
mov
rorl
stos
push
dec
add
push
and
add
dec
shl
shr
sub
add
sub
shr
pop
add
dec
dec
ror
pop
push
lea
push
push
call
gs
rolb
rclb
push
add
add
add
mov
test
leave
add
add
lahf
mov
out
mov
pop
loopne
xlat
add
lods
repnz
mov
rolb
jno
sub
pop
pushl
push
lea
push
push
push
push
call
add
loopne
adcb
mov
fsubrl
lea
add
add
pop
add
push
add
pop
add
cmpsl
test
test
pop
std
jecxz
mov
ret
add
mov
xchg
add
mov
lcall
sbb
push
push
push
push
push
call
iret
push
pop
fs
lret
shrb
add
push
js
add
jns
insb
add
xlat
arpl
adcl
lret
roll
add
push
loopne
sub
mov
mov
add
add
add
add
cltd
sub
pop
push
push
push
add
push
or
not
add
sub
shr
xor
pop
xor
shl
add
pop
push
pop
push
push
push
push
lea
push
push
lea
push
call
add
jo
add
lcall
hlt
push
ja
xchg
rolb
iret
add
ja
add
add
add
loopne
add
add
mov
cli
imul
pop
cli
mov
sarb
add
add
rcrb
add
stc
ficomps
mov
test
sub
pop
call
push
push
call
enter
mov
add
jae
jecxz
sbbb
add
jns
movb
add
push
jge
add
add
xchg
test
jnp
jmp
loop
jmp
mov
in
clc
pop
mov
push
push
push
lea
push
call
cli
cmpl
mov
jmp
jne
scas
js
in
loope
add
add
mov
out
roll
aad
jmp
mov
out
enter
mov
in
lock
push
push
push
push
push
push
push
call
add
js
jnp
scas
add
je
add
add
xchg
add
add
add
add
add
add
add
add
add
lods
lret
in
loopne
mov
mov
fcmovbe
pop
fsub
add
add
add
loop
add
out
add
push
lea
push
lea
push
call
fnstsw
add
add
out
add
mov
push
cmpsb
test
jecxz
xchg
jae
cwtl
push
add
cli
add
add
insb
add
in
hlt
pop
mov
add
push
add
dec
inc
pop
add
add
push
shr
pop
mov
xor
push
add
sub
inc
pop
add
push
add
sub
lea
shr
pop
push
push
sub
sub
sub
sub
pop
mov
xor
push
push
call
rcr
add
loop
mov
mov
add
push
imul
add
pop
lds
repnz
xchg
loopne
add
hlt
jl
je
add
jecxz
add
add
in
add
in
add
add
xchg
add
push
add
sub
pop
add
push
sub
pop
pop
push
push
push
push
push
push
push
push
call
idiv
cwtl
add
add
ret
add
add
add
arpl
add
cltd
add
adcb
add
add
add
jmp
mov
out
mov
push
enter
addr16
add
dec
and
mov
rol
inc
shl
pop
rep
mov
push
push
push
push
push
call
jae
jmp
add
test
pusha
pop
add
add
add
insb
add
hlt
mov
add
sahf
ficoms
add
aam
rolb
xchg
jb
mov
add
jp
add
add
add
mov
gs
add
add
push
add
test
add
jnp
add
mov
add
lcall
or
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
add
mov
fildl
mov
xchg
add
push
mov
add
jmp
hlt
cmpsb
lahf
add
filds
sub
add
std
mov
mov
add
add
mov
icebp
add
add
mov
fmul
mov
out
lret
in
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
test
add
mov
add
xchg
pushf
in
call
add
add
iret
ror
add
aam
add
add
movsb
pop
jmp
add
lds
loope
add
addb
aam
xchg
add
jl
mov
lods
sti
fdivrs
add
push
jae
sub
pop
or
je
push
lea
push
push
push
push
push
push
call
push
lret
add
add
shrl
add
add
mov
mov
add
mov
rcrb
lret
mov
lret
sub
pop
mov
xor
push
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
fdivrs
mov
add
add
lret
add
cld
xchg
xchg
mov
mov
lret
jbe
add
add
xchg
iret
mov
rolb
adc
push
push
push
push
push
lea
push
push
lea
push
call
add
jp
arpl
std
addb
add
add
add
add
je
insb
ror
stc
ror
add
jne
jge
arpl
add
in
loopne
lcall
les
push
lea
push
push
call
lret
add
add
xchg
add
ret
push
push
add
add
movl
lret
add
add
add
loopew
lret
jns
sub
pop
add
add
push
pop
push
mov
xor
push
xor
shr
not
inc
pop
add
push
pop
pop
push
add
xor
pop
rep
push
shl
pop
mov
push
push
push
call
add
in
jl
ljmp
addr16
je
lcall
pop
jp
push
in
jne
arpl
fiadds
cltd
add
stc
mov
add
add
add
filds
addr16
push
add
mov
imul
add
sub
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
jb
int3
repnz
cld
mov
loope
scas
jb
icebp
add
mov
cli
movl
mov
data16
add
add
out
lret
data16
mov
pop
add
std
mov
fxch
iret
sub
pop
add
push
push
lea
push
call
add
int
mov
imul
mov
add
les
popa
add
add
roll
add
add
movsl
popa
add
scas
add
fwait
push
add
int3
add
add
imul
popl
mov
add
add
jne
cltd
mov
leave
add
push
add
jecxz
add
lret
add
add
std
ja
jo
in
hlt
lcall
leave
je
mov
push
rol
pop
add
push
rol
pop
add
push
dec
pop
rep
push
add
lea
pop
pop
push
push
add
lea
not
push
or
not
add
shl
sub
shl
sub
inc
ror
pop
lea
not
rol
pop
push
lea
add
inc
pop
pop
push
lea
push
push
call
add
pusha
insb
jno
add
roll
repnz
aam
out
xchg
popa
ret
iret
mov
out
add
add
cmc
mov
cmpsb
add
stos
add
add
sub
pop
mov
mov
push
dec
pop
mov
jmp
push
lea
push
push
push
lea
push
push
push
call
fcomps
add
mov
add
jp
add
icebp
add
bound
fs
jb
out
add
add
add
xchg
add
fstl
mov
mov
in
in
lcall
mov
push
lea
push
call
add
push
add
add
mov
jne
add
add
lods
imul
movsl
mov
arpl
data16
sub
pop
add
push
push
lea
push
call
fisubrl
jns
mov
add
add
add
push
add
add
add
leave
add
jbe
add
mov
sub
pop
push
push
push
lea
push
push
call
add
sarb
ja
andl
jno
lock
lcall
icebp
add
loope
popa
push
add
add
xchg
add
add
fstpl
lcall
push
push
push
push
push
push
call
repnz
test
mov
pop
into
scas
mov
add
add
jmp
jae
mov
rcr
add
repnz
add
mov
in
lods
jecxz
add
pop
jmp
push
aam
lcall
lea
rcll
loope
add
lcall
push
push
lea
push
lea
push
push
push
push
push
push
push
call
stos
add
std
movsl
fiadds
in
mov
in
mov
add
add
cmpsl
rcrb
add
sahf
jno
mov
pop
ljmp
inc
cld
push
lea
dec
pop
pop
pop
push
pop
pop
push
sub
xor
pop
pop
leave
push
push
lea
push
lea
push
push
push
call
xchg
add
add
add
cwtl
jl
cmpsb
test
mov
add
add
add
add
mov
add
add
mov
testl
add
jo
jno
incb
mov
fucomip
xchg
cli
popa
jge
add
les
flds
mov
add
add
stc
jmp
add
lcall
or
push
shr
rol
sub
pop
push
push
not
lea
xor
pop
mov
add
push
lea
push
push
push
push
push
lea
push
push
call
jmp
in
cmc
jne
add
add
add
roll
add
roll
mov
lcall
pop
sahf
push
add
andl
add
add
mov
jb
into
push
bound
push
push
push
push
push
push
push
push
push
push
call
gs
add
add
xchg
ret
js
roll
rolb
ret
add
add
add
add
mov
neg
stos
mov
add
add
xlat
fisubl
rolb
loopne
add
jne
pop
imul
fdivrs
push
test
add
push
sub
sub
lea
pop
push
push
push
push
lea
push
push
push
call
les
xchg
bound
iret
add
lods
int
add
add
push
std
add
push
add
clc
iret
add
mov
ret
leave
loop
mov
sub
pop
push
push
add
ror
rol
pop
movl
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
xchg
jge
add
add
jne
mov
lcall
push
pop
jnp
push
add
in
add
mov
stos
call
add
add
insb
add
add
hlt
movsb
push
push
add
mov
je
mov
push
jae
bound
inc
clc
call
popf
and
dec
lea
push
lea
push
push
lea
push
push
push
call
cmpsb
js
add
jle
add
popf
test
mov
add
add
gs
adcl
je
jecxz
test
shrb
lcall
rorb
out
add
add
mov
lea
push
push
push
lea
push
lea
push
call
nop
addr16
rolb
rolb
add
add
out
add
add
mov
add
add
pop
add
add
roll
push
bound
jnp
add
jge
popf
repnz
add
addb
lods
sub
pop
mov
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
lds
add
add
cmpsb
add
add
leave
mov
fildl
je
add
in
add
sahf
mov
add
js
bound
push
add
leave
add
jmp
lea
add
subb
push
add
outsl
add
add
aad
cmpsl
add
lcall
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
pusha
test
mov
add
add
jno
mov
loope
add
pop
ljmp
jb
gs
add
jnp
add
cmpl
ror
add
fdivr
lcall
push
push
lea
push
push
push
push
lea
push
call
add
add
in
lret
add
mov
add
rcll
icebp
scas
add
lods
add
mov
add
push
sub
dec
pop
leave
push
lea
push
push
push
call
add
cwtl
outsl
mov
sahf
add
add
pop
nop
in
in
ret
out
idiv
fiadds
push
out
add
jle
add
movb
rcll
repnz
add
add
std
add
jl
add
add
popa
pop
add
add
mov
pop
pop
add
lds
in
lock
lcall
add
push
push
push
push
lea
push
push
push
call
add
lds
pop
mov
lahf
add
add
mov
jnp
cltd
add
pop
mov
andb
movsb
movsb
mov
test
add
xlat
add
jb
loope
in
call
mov
push
inc
pop
add
push
lea
pop
push
push
pop
push
push
push
ror
pop
push
push
push
lea
push
push
call
add
pop
add
add
aam
push
mov
add
roll
addb
push
push
cwtl
bound
add
add
jl
add
add
sub
pop
testl
push
xor
xor
ror
pop
addl
push
pop
push
push
push
push
push
call
lahf
add
add
lods
add
sti
aam
cmpsb
lret
push
mov
sti
add
add
jns
add
add
add
cld
push
add
add
ja
mov
in
cmpsb
call
pop
sahf
aad
popl
rorl
add
lcall
insl
cli
call
out
shl
ror
sub
pop
mov
push
lea
push
lea
push
lea
push
push
call
add
add
xchg
nop
lcall
add
aad
mov
xlat
xlat
andb
add
jbe
mov
in
add
cld
insb
mov
add
mov
add
xchg
jbe
rolb
mov
mov
loop
xchg
mov
pushf
add
add
add
sub
pop
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
add
mov
jb
pop
out
add
add
add
push
mov
in
mov
cwtl
loop
mov
mov
add
add
pop
test
js
mov
movsl
roll
push
push
add
jns
add
jge
add
sub
pop
push
call
push
rol
pop
cmpl
jne
pop
push
lea
push
push
lea
push
call
ror
jns
add
mov
imul
cld
addl
add
add
fiadds
lcall
add
xchg
push
movb
hlt
imul
xchg
add
add
ficomps
in
add
add
mov
testl
mov
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
call
add
add
add
mov
mov
xchg
pop
pop
add
add
add
movsl
add
add
mov
xchg
mov
mov
add
in
les
add
fistpll
lcall
in
in
pop
leave
push
inc
shl
shr
rol
pop
ret
push
push
lea
push
lea
push
push
push
call
test
in
std
add
add
xchg
xchg
pop
incb
rolb
rcrl
pop
popa
movsb
imul
jae
out
mov
cwtl
add
test
in
call
push
lea
push
push
push
push
call
mov
cli
add
cwtl
outsl
add
add
data16
mov
add
jmp
stos
xchg
add
mov
aam
xlat
lahf
mov
testl
add
sbbl
pop
add
push
lea
push
push
push
call
add
int3
ljmp
int
mov
fwait
movsb
push
loop
out
repnz
popa
add
stc
pushf
xchg
mov
sti
mov
jmp
incb
aam
lret
rcr
mov
popf
add
push
add
jb
gs
data16
lods
cltd
fldl
push
add
cltd
loop
sub
pop
push
push
ror
pop
push
push
push
push
push
push
push
push
push
push
push
call
xchg
push
push
jne
addl
add
mov
add
add
add
sahf
add
faddl
insb
add
shrl
out
in
lret
aad
pusha
sub
pop
push
push
push
dec
xor
pop
movl
push
shl
pop
push
push
dec
add
xor
pop
call
push
push
sub
add
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
add
pop
add
out
mov
cmpsl
jnp
add
push
add
pop
jle
or
lahf
xchg
dec
add
add
mov
jp
add
mov
add
add
jmp
shrb
mov
in
fdivr
lcall
insl
cld
add
test
call
fstpl
push
add
pop
pop
push
add
pop
pop
push
push
lea
push
push
lea
push
call
add
xchg
lret
fadds
test
add
roll
je
mov
rcrb
add
aad
stc
arpl
in
pop
pop
push
not
pop
leave
ret
push
push
push
lea
push
lea
push
push
push
call
filds
iret
ficoml
add
add
out
fldl
add
imul
add
cmc
cld
add
pop
add
add
add
pop
add
std
push
mov
add
imul
leave
push
sahf
push
clc
push
je
sub
pop
push
push
add
lea
pop
mov
add
push
push
push
lea
push
push
push
push
push
push
call
leave
add
roll
nop
aad
cmpsb
mov
popa
loope
repnz
jle
add
push
sahf
add
shll
iret
rolb
idivl
into
pop
sbbl
add
lcall
push
push
push
call
add
in
add
jmp
popa
add
push
pushf
mov
ret
add
sahf
jno
add
add
add
sub
add
jb
imul
add
lret
aad
add
add
pop
test
fmuls
add
add
roll
addb
sub
pop
push
push
push
lea
dec
pop
push
push
push
dec
dec
xor
push
or
inc
add
not
lea
dec
sub
add
dec
shr
lea
pop
pop
push
not
xor
pop
pushl
push
push
push
push
push
push
lea
push
call
cli
fidivl
fnstcw
add
add
cltd
add
cmpsl
add
aad
fisubrs
mov
mov
std
neg
lods
add
xchg
sahf
add
pop
jns
cmc
add
add
add
pop
call
push
add
sub
sub
pop
call
push
push
add
xor
shr
push
push
pop
add
inc
xor
inc
sub
add
sub
lea
pop
shr
dec
pop
push
push
push
push
push
push
call
push
loopne
add
add
loope
mov
cmpsl
cld
out
ja
add
mov
push
mov
pop
fisubs
add
xorl
add
lds
xchg
pushf
rolb
mov
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
mov
add
rorl
add
add
repnz
mov
add
in
in
fcomps
cmpl
push
push
sub
add
push
and
add
shl
sub
sub
sub
rol
shr
inc
pop
ror
not
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
cmpsb
add
mov
out
fldl
add
pop
stos
add
add
shll
clc
add
mov
add
jne
call
push
sub
sub
pop
call
push
push
inc
shr
push
push
pop
add
shl
lea
sub
dec
xor
pop
ror
lea
add
pop
push
not
xor
pop
pushl
push
shr
pop
call
push
sub
pop
call
push
push
ror
push
or
inc
add
xor
shr
inc
sub
xor
add
dec
shr
pop
not
sub
add
pop
push
rol
ror
inc
pop
pushl
call
push
lea
pop
call
push
push
shl
push
sub
add
add
sub
lea
inc
pop
not
not
pop
push
not
inc
dec
pop
pushl
push
add
sub
pop
call
push
sub
xor
pop
call
push
push
add
push
push
pop
add
sub
sub
sub
sub
pop
shr
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
jmp
add
add
mov
pop
cld
add
test
add
pop
cli
fiadds
add
std
mov
push
add
add
in
in
lcall
jne
call
push
sub
lea
xor
shl
pop
call
push
push
shl
push
or
inc
add
inc
sub
shr
inc
pop
sub
not
pop
push
push
push
push
push
call
add
shrl
add
mov
mov
mov
xchg
jb
hlt
lret
add
mov
add
push
movsl
in
scas
ljmp
push
subb
add
add
notb
sub
pop
pushl
call
push
pop
call
push
push
push
push
push
push
push
push
push
push
call
test
xchg
pop
jl
aam
mov
add
js
jbe
int3
in
add
mov
pop
add
leave
jp
add
add
mov
cli
mov
add
roll
cld
add
add
push
push
lcall
inc
or
inc
cmp
lea
push
call
xlat
add
jp
jo
add
imul
xchg
add
fs
add
mov
add
hlt
out
add
mov
mov
add
int
mov
jns
push
add
cmc
push
add
jl
add
add
lcall
call
sbb
call
pop
add
push
xor
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
add
add
imul
scas
fdivl
fstp
add
ficompl
aam
enter
cwtl
add
faddl
mov
add
add
add
scas
add
add
iret
add
add
ret
add
add
sub
pop
mov
push
lea
not
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
aam
add
les
pop
flds
add
mov
add
add
add
add
add
scas
add
add
je
outsl
insb
add
sub
pop
add
mov
push
xor
add
sub
pop
mov
cmp
jne
push
push
lea
push
lea
push
push
push
push
call
add
pop
add
add
pop
in
fildl
mov
add
outsl
mulb
add
add
add
pop
mov
loopne
add
lcall
mov
add
jbe
mov
pop
xchg
lcall
cwtl
fadds
add
jne
push
push
push
call
add
mov
test
mov
gs
jp
aam
jecxz
out
xlat
shll
add
pushf
outsl
lds
into
add
out
fwait
add
add
fucomip
add
in
clc
push
ficompl
mov
add
cltd
sub
pop
mov
movl
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
arpl
push
mov
scas
xchg
add
lea
add
lds
fildl
cmpsl
push
push
fs
scas
jae
add
in
jmp
fnstenv
in
add
jecxz
sti
add
je
loope
add
add
mov
xlat
int
add
jbe
mov
fs
fcomps
in
fdivr
lcall
mov
add
mov
push
push
push
lea
push
push
lea
push
lea
push
call
lock
push
outsl
loopne
jae
call
int3
cwtl
add
shll
add
lea
jecxz
add
xchg
add
xchg
add
push
add
aad
test
push
add
out
add
shr
std
cmc
test
scas
add
js
mov
add
sub
pop
mov
sub
jne
push
shr
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
push
jnp
out
add
outsl
mov
iret
movsl
lret
pop
fs
test
add
pushf
out
lods
lret
xlat
lods
add
cmpsl
lods
push
mov
push
imul
add
mov
add
add
add
add
add
add
jmp
push
sub
dec
pop
mov
push
push
push
lea
push
call
int
mov
mov
loope
outsl
xchg
add
loop
int3
scas
out
pop
add
xchg
add
in
mov
mov
popf
mov
pushfw
jge
mov
cli
roll
imul
lcall
lcall
nop
mov
add
cmp
jne
push
add
pop
mov
push
ror
add
xor
add
pop
movl
push
not
pop
jmp
push
ror
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
pop
push
add
jecxz
scas
add
les
jo
add
mov
aad
add
push
add
lods
sub
pop
cmpw
jne
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
cltd
xlat
int
xchg
add
imul
add
lret
icebp
xlat
add
push
lock
add
sahf
mov
mov
rclb
clc
mov
int
add
lcall
add
push
push
push
call
mov
popl
add
add
jae
mov
mov
popa
jmp
add
add
jle
les
cwtl
add
xchg
push
stos
insb
push
mov
add
in
imulb
out
loop
fldln2
push
add
sub
pop
jmp
pushl
push
shl
shr
pop
pop
push
lea
push
push
push
lea
push
push
push
call
lret
add
mov
add
add
into
addl
enter
add
add
add
mov
jle
mov
add
add
mov
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
push
lcall
add
add
push
add
add
jb
icebp
add
mov
jo
ret
push
xchg
mov
pushf
fsubrp
jns
mov
mov
rolb
sti
add
fdivr
lcall
inc
sbb
lea
push
call
pop
lret
jbe
mull
add
add
add
add
lock
shl
add
test
addl
xchg
add
jns
popa
add
in
add
popf
mov
fldl
add
jmp
cmc
add
add
popa
add
push
in
mov
cmc
js
jle
add
mov
mov
sub
pop
mov
push
push
ror
add
add
push
or
not
add
lea
rol
shr
sub
add
pop
ror
shr
shr
dec
pop
push
push
call
add
pushf
fistpll
pop
jb
pop
call
add
add
call
push
in
fsts
in
clc
pop
push
push
lea
push
push
push
push
push
push
call
jp
add
add
ret
addl
push
in
add
add
pop
add
hlt
mov
lcall
add
add
testl
xchg
shlb
add
mov
mov
cltd
add
mov
add
add
add
add
mov
lcall
pop
xor
add
push
ds
lea
pop
cmpl
je
push
push
push
and
add
shl
rol
inc
sub
inc
sub
ror
pop
pop
push
add
add
sub
pop
push
push
lea
pop
call
push
lea
pop
cmpl
je
push
push
add
add
dec
xor
push
and
add
add
sub
inc
sub
shr
not
lea
ror
pop
shr
pop
push
push
call
sar
add
ret
loopne
add
add
ret
ret
add
push
lcall
jo
test
jle
xlat
mov
push
pop
xchg
add
mov
cmc
movl
add
jno
aad
aad
push
popa
scas
add
test
cli
int3
movsl
add
call
push
shl
ror
add
xor
pop
cmpl
je
push
push
inc
push
or
not
add
sub
sub
not
shr
pop
inc
dec
pop
push
push
call
mov
lea
fadd
mov
out
add
jge
add
fldl
fmul
add
add
push
lods
add
icebp
in
arpl
xorl
iret
mov
hlt
add
mov
add
add
jge
imul
add
cwtl
mov
fdivs
add
push
push
shl
shr
ror
pop
call
push
ror
not
pop
cmpl
je
push
push
shl
push
or
inc
add
xor
ror
add
sub
shl
pop
add
not
pop
push
sub
add
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
add
add
add
testl
insb
add
pusha
mov
in
ljmp
xchg
hlt
out
jecxz
bound
add
mov
mov
aad
repnz
jecxz
add
cmpsl
add
add
add
add
in
fdivr
lcall
cmp
rol
je
push
push
rol
not
inc
push
or
inc
add
add
lea
sub
add
pop
inc
shr
not
pop
push
dec
shr
inc
pop
push
push
xor
sub
pop
call
cmpl
je
push
push
xor
push
and
add
sub
not
pop
sub
inc
sub
pop
push
push
push
push
push
push
push
call
clc
add
jo
add
mov
add
bound
add
mov
enter
stos
hlt
mov
add
add
pop
add
imulb
jp
in
in
push
call
push
xor
shl
pop
cmpl
je
push
push
inc
push
or
inc
add
dec
rol
sub
not
shl
pop
shl
add
sub
pop
push
shl
lea
pop
push
call
push
xor
rol
pop
cmpl
je
push
push
shl
ror
add
push
and
add
shr
lea
sub
add
pop
xor
add
rol
pop
push
push
push
push
push
push
lea
push
push
call
stos
xchg
icebp
call
add
add
add
in
add
add
xchg
xchg
add
in
addb
add
addl
add
add
ret
icebp
test
push
add
add
xchg
aam
lahf
cld
std
add
test
shlb
lods
mov
mov
xchg
add
lret
mov
in
loopne
push
push
push
push
push
call
cwtl
mov
jns
add
xchg
add
push
call
add
mov
je
pushf
in
sub
pop
call
push
push
call
mov
pushf
jp
sbb
xchg
jns
pusha
add
roll
movsl
pop
pop
lcall
jo
add
add
add
add
loope
mov
add
add
add
mov
addl
clc
add
jno
add
add
xchg
clc
add
sti
add
add
mov
push
add
cmp
rol
je
push
push
lea
not
xor
push
xor
add
sub
sub
inc
sub
shl
add
pop
sub
not
not
not
pop
push
push
push
push
push
push
lea
push
call
mov
incb
loope
ja
popf
loope
movsb
fbstp
scas
mov
leave
pop
xchg
jmp
mov
add
fildl
lcall
push
xor
add
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
lahf
lea
shll
lahf
mov
add
enter
add
cli
gs
mov
icebp
outsl
xchg
mov
mov
sahf
leave
bound
sub
pop
cmpl
je
push
push
shl
not
sub
push
and
add
inc
sub
sub
pop
not
add
pop
push
lea
pop
push
push
push
push
push
push
push
call
add
lods
test
lds
add
xchg
add
ljmp
push
add
mov
add
xchg
jns
incb
add
mov
fcompl
jnp
lds
add
mov
add
lcall
mov
add
and
dec
pop
push
push
push
call
aam
add
add
mov
push
push
add
add
add
fstps
outsl
pop
push
out
test
lcall
lcall
js
xor
ret
test
add
add
mov
fnstenv
fstl
leave
add
add
sub
not
pop
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
call
jmp
add
enter
add
push
mov
imul
pop
lods
jb
jmp
add
add
addl
in
faddl
push
out
add
pop
add
into
add
add
mov
mov
nop
in
add
add
rol
xchg
mov
add
in
fdivr
lcall
push
push
push
push
push
push
call
leave
add
rclb
loop
add
add
mov
add
ret
mov
jns
stos
add
add
jl
bound
mov
fs
add
add
mov
cwtl
push
out
add
hlt
xchg
pushf
roll
xchg
sub
pop
call
cmpl
je
push
push
add
add
push
xor
add
dec
add
dec
sub
not
add
pop
shl
pop
push
push
push
push
push
push
lea
push
call
mov
add
jns
add
mov
mov
out
cltd
sahf
stc
add
add
add
shrb
rcr
int3
xchg
test
jne
push
fldl2e
cli
sbbb
push
add
movsb
rolb
bound
add
xchg
add
incb
add
add
add
movb
sub
add
clc
add
pop
cmpl
jne
push
rol
pop
mov
push
shl
ror
ror
pop
movl
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
ja
popa
pop
jle
stos
add
push
mov
subb
rclb
jle
stos
add
mov
add
mov
pop
add
in
fdivr
lcall
pop
add
add
rclb
ds
pop
push
add
pop
pop
push
push
push
push
call
loopne
jnp
add
mov
add
add
lods
sti
add
jo
neg
xchg
rol
mov
js
mov
add
stc
jle
add
jne
push
mov
add
push
pop
cltd
sub
pop
pop
pop
push
push
lea
push
push
push
push
call
cmc
fnsave
in
sahf
add
add
mov
add
add
add
push
jnp
mov
add
add
call
add
push
push
shr
add
pop
mov
push
shl
sub
sub
pop
add
cmpl
jne
push
push
xor
push
sub
add
sub
rol
sub
inc
pop
shl
shr
rol
shr
pop
push
dec
pop
pushl
push
add
pop
call
push
pop
push
push
push
push
call
adc
jns
fwait
clc
add
add
insb
shl
aad
add
add
add
add
push
repnz
testb
push
sub
pop
call
push
lea
pop
jmp
push
sub
inc
xor
pop
cmpl
jne
mov
push
push
push
call
movsb
xchg
out
mov
popf
add
add
cld
add
jmp
mov
fbld
imul
xchg
add
push
movsb
add
push
mov
cmpsb
sub
pop
call
push
push
call
add
in
add
push
into
jp
jge
pushf
add
add
data16
arpl
arpl
test
xchg
add
pop
add
mov
jae
loop
pop
add
sub
pop
ret
push
push
call
pop
ret
jp
fildl
mov
roll
bound
push
push
add
add
add
mov
lcall
sbb
add
mov
js
inc
jecxz
push
lea
push
lea
push
lea
push
lea
push
push
call
cmc
add
nop
add
add
add
std
lcall
push
add
jecxz
add
add
push
imul
jne
je
add
lahf
mov
in
loopne
lcall
jge
add
test
add
push
push
shr
inc
add
push
or
not
add
ror
dec
sub
rol
sub
inc
pop
dec
pop
push
pop
pushl
push
push
push
push
lea
push
call
add
mov
mov
icebp
add
add
add
jge
pop
add
add
rcrl
cmp
scas
je
add
mov
sub
mov
scas
in
call
cli
in
push
test
add
lret
in
in
pop
call
push
add
add
pop
push
push
shl
add
not
pop
call
push
push
push
push
push
lea
push
push
push
call
add
mov
filds
add
les
imul
add
icebp
sti
stc
add
push
mov
add
fldl
add
ljmp
mov
pop
int3
push
push
add
loopne
rolb
aad
push
add
mov
add
in
loopne
lcall
out
add
push
push
call
pop
fcmovbe
add
pusha
add
add
notb
add
shr
add
ret
add
in
clc
lcall
jge
add
test
add
cmpl
jne
push
push
lea
push
lea
push
push
lea
push
push
call
sub
les
jno
filds
mov
pop
jge
add
add
add
pop
add
pushf
add
mov
add
stos
add
scas
imul
add
stos
add
outsl
fildl
add
add
mov
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
add
jle
push
push
jne
mov
add
rcrl
add
stos
ror
add
jae
pop
cwtl
loopne
sub
pop
push
push
shl
pop
call
push
push
rol
lea
lea
push
or
inc
add
sub
inc
lea
sub
ror
sub
sub
pop
shl
dec
shr
pop
push
sub
sub
shl
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
outsl
xchg
jl
add
repnz
xchg
cmpsl
add
stc
testb
add
mov
loope
test
jle
movsl
test
add
add
out
add
data16
add
add
xchg
jns
mov
pop
push
add
es
add
negb
shrb
mov
outsb
push
push
pop
add
shr
sub
add
pop
sub
pop
push
sub
dec
not
pop
pushl
push
not
sub
not
pop
call
push
push
push
lea
push
push
push
push
push
call
xchg
or
mov
add
ja
imul
mov
mov
add
faddl
in
add
xchg
xchg
in
adc
add
add
scas
loope
add
add
nop
mov
int3
add
add
add
ret
add
push
mov
in
loopne
call
push
push
not
lea
not
xor
push
xor
add
shl
dec
sub
lea
inc
sub
pop
sub
shl
add
pop
push
xor
pop
pushl
push
push
push
call
add
rorl
repnz
pop
rolb
data16
add
popf
xchg
hlt
push
ja
shll
add
test
add
add
add
add
cld
add
add
add
mov
in
loopne
add
add
mov
mov
push
pushf
mov
mov
sub
pop
call
call
push
push
xor
push
and
add
inc
shl
sub
sub
lea
rol
pop
inc
pop
push
push
push
push
lea
push
push
push
push
push
push
call
mull
push
popa
add
mov
ljmp
rolb
jb
xchg
jns
add
fs
add
jno
add
add
jmp
cmc
mov
add
imul
xlat
mov
push
lds
mov
push
in
fdivr
lcall
jne
push
push
push
push
push
lea
push
push
push
call
loopne
loopne
lods
xabort
add
mov
push
mov
xchg
jecxz
add
add
test
imul
add
add
add
pop
loope
jo
add
lahf
enter
mov
add
js
jae
add
xchg
xchg
add
js
sub
pop
call
push
push
push
push
call
add
add
jae
loop
outsl
add
add
roll
mov
mov
fidivrs
add
push
add
mov
lock
aam
add
clc
std
add
fdivrp
add
push
add
fs
lods
lahf
scas
add
lcall
shrb
and
push
shr
push
sub
add
not
shr
sub
sub
dec
xor
pop
not
ror
shr
sub
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
fistps
add
jo
int
mov
mov
fidivl
add
xchg
mov
add
enter
ror
add
add
jo
lds
xchg
incb
jne
push
push
call
stos
xchg
add
xchg
xchg
add
lods
mov
out
add
xchg
loop
add
jecxz
outsl
add
pop
testb
xchg
add
stc
add
mov
push
add
imul
add
jne
fdivr
outsl
leave
ficoms
add
lahf
jl
add
hlt
mov
add
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
lcall
add
not
add
add
add
cmpsl
add
clc
faddl
add
mov
lret
subb
popf
add
lret
pop
jnp
jnp
faddl
jecxz
cmc
fildl
faddl
cld
mov
lcall
shrb
adc
ror
push
or
not
add
add
add
add
rol
sub
sub
add
inc
dec
pop
sub
not
lea
sub
pop
push
pop
pushl
push
push
push
push
push
call
fcoml
arpl
add
add
pop
mov
add
jnp
add
enter
pusha
xchg
aad
fsts
fsubl
call
add
lock
add
add
js
jmp
lcall
pop
icebp
add
je
add
fst
popf
add
mov
in
pop
call
push
sub
sub
pop
call
push
push
add
ror
push
push
pop
add
rol
dec
ror
sub
xor
inc
pop
ror
sub
inc
rol
pop
push
lea
push
push
push
push
call
jbe
cmc
testb
add
add
test
lcall
jo
add
jo
testb
jo
in
roll
add
add
add
add
add
push
add
add
mov
in
lcall
jne
push
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
add
rcll
test
add
bound
add
xchg
add
add
enter
sbbb
jl
add
enter
roll
add
add
jbe
cltd
add
add
shrb
xchg
jns
push
lea
push
sub
add
add
add
sub
sub
dec
pop
add
xor
pop
push
push
push
push
push
call
add
cmpsb
add
cmp
add
lcall
cwtl
jp
add
add
shr
pop
push
int
out
mov
jno
out
fmuls
rolb
call
lcall
jne
call
push
ror
inc
pop
call
push
push
push
push
pop
add
ror
sub
add
not
lea
xor
pop
not
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
outsl
add
add
jns
add
jo
mov
jecxz
jno
sbb
movsl
clc
enter
fcomps
add
pop
bound
add
sub
pop
pushl
call
push
ror
add
sub
pop
call
push
push
not
sub
sub
push
and
add
shl
xor
sub
not
add
pop
not
pop
push
push
push
push
push
push
push
push
call
xchg
jne
push
add
add
int3
ret
test
ja
lods
clc
lret
out
pushf
addl
add
add
imul
clc
add
add
push
add
in
les
add
addb
roll
cmc
add
mov
lcall
lcall
jne
push
inc
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
flds
testl
add
add
add
add
cld
icebp
in
imull
pop
pop
adc
add
rol
mov
add
lock
aam
add
pop
add
std
mov
icebp
pushf
test
mov
in
fdivr
lcall
pushf
and
call
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
add
movsb
add
add
mov
add
add
cli
add
add
call
add
push
loop
fs
fwait
add
add
mov
aam
cmpsl
add
add
add
aad
ret
fdivr
lcall
shrb
test
decl
lret
incl
ret
dec
sub
add
stc
xor
sub
rol
pop
add
add
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
clc
add
testl
stc
mov
add
filds
call
cld
fldt
aam
cltd
mov
sub
pop
pushl
push
lea
push
call
lret
push
add
mov
pop
add
add
lea
mov
andb
out
add
mov
arpl
cld
js
add
jae
add
add
sub
pop
call
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
cmpsb
push
gs
test
add
add
add
in
pop
push
mov
add
add
add
iret
jle
insb
push
loopne
aad
out
add
int
add
mov
out
in
add
faddl
add
mov
fnstenv
add
pop
call
push
push
shl
push
or
not
add
shr
lea
sub
dec
rol
pop
lea
sub
pop
push
push
push
push
push
call
mov
add
add
mov
cmpsl
add
add
adc
lds
mov
add
mov
mov
mov
stc
lahf
add
jmp
add
mov
cmpsl
cwtl
add
lock
imul
into
jo
add
mov
add
add
sub
pop
pushl
push
xor
lea
pop
call
call
push
push
inc
lea
lea
push
xor
add
lea
lea
sub
lea
sub
lea
rol
shr
rol
pop
dec
pop
push
sub
ror
add
pop
pushl
call
push
push
push
push
push
push
push
push
call
jne
add
std
add
call
add
jle
int
lret
out
add
add
add
out
add
lods
pop
pusha
ja
mov
add
push
add
stos
xchg
out
add
lcall
shrb
dec
mov
push
ror
push
and
add
inc
rol
sub
dec
inc
inc
pop
sub
xor
sub
inc
pop
push
dec
xor
pop
pushl
push
xor
dec
pop
call
push
push
dec
push
push
pop
add
shl
sub
shl
pop
lea
not
shr
shr
pop
push
push
ror
rol
inc
xor
push
xor
add
add
sub
sub
sub
shl
pop
add
lea
pop
push
lea
push
call
add
add
insb
add
enter
mov
xchg
add
mov
loope
add
mov
into
testl
add
lcall
rclb
mov
scas
sbb
xor
push
push
call
popa
xchg
shll
lock
rcrl
shrl
add
add
cltd
in
call
add
jmp
lret
cmc
add
icebp
lock
int3
sub
pop
pop
dec
jne
push
dec
add
pop
call
push
push
push
lea
push
push
push
push
call
mov
add
add
mov
push
push
jecxz
add
add
add
test
add
leave
jge
add
xchg
add
into
mov
push
ljmp
scas
cwtl
lods
add
aad
imull
mov
mov
lcall
iret
cld
out
lahf
add
hlt
in
stos
add
add
add
add
int
push
rol
rol
ror
pop
lea
push
push
sub
shl
add
push
and
add
sub
sub
rol
add
lea
pop
shl
sub
pop
push
push
lea
push
push
push
lea
push
push
push
call
imul
outsl
add
loopne
push
leave
cmc
add
fcompl
loope
add
and
mov
add
in
les
hlt
mov
add
jne
cmpsb
iret
test
add
imul
jbe
into
add
add
add
mov
lcall
jne
call
push
shr
rol
pop
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
add
test
js
rolb
add
add
xchg
cmc
push
pop
into
ja
add
mov
add
mull
mov
repnz
add
add
xchg
jne
pop
add
add
add
push
add
lcall
shrb
push
push
push
xor
lea
lea
sub
push
or
not
add
sub
shr
ror
sub
xor
xor
pop
not
not
ror
pop
push
push
push
push
push
push
call
mov
lret
ljmp
loopne
add
ljmp
add
leave
xchg
test
add
pop
add
add
add
jbe
mov
add
add
add
add
add
add
add
loopne
add
loop
add
add
cltd
sub
pop
pushl
push
push
push
push
call
popa
lea
add
add
xlat
xchg
cwtl
add
add
push
stos
ljmp
cmc
pop
mov
mov
roll
mov
add
sub
lea
add
add
add
add
push
mov
call
push
rol
pop
call
mov
push
xor
pop
lea
push
push
rol
sub
lea
dec
push
or
inc
add
add
add
sub
shl
ror
pop
dec
ror
inc
sub
pop
push
lea
push
push
lea
push
push
call
popa
imul
add
aad
cmp
add
add
xchg
loope
jae
add
sbb
add
add
in
add
pop
add
in
shr
in
add
jl
insb
mov
push
add
jle
rcl
add
stc
xchg
fdivrs
add
xchg
sub
pop
pushl
push
push
call
add
add
out
scas
repnz
add
add
jne
add
hlt
fists
lret
ja
lahf
add
data16
mov
jbe
xchg
add
imul
add
cwtl
mov
movsl
movsl
je
mov
mov
in
mov
in
clc
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jl
in
add
repnz
mov
int
push
add
pusha
add
ja
add
add
add
add
lcall
lcall
add
push
push
push
call
mov
aam
testl
add
pop
jb
rcr
add
andl
js
in
mov
add
add
scas
xchg
add
add
mov
clc
pop
push
push
dec
pop
push
push
dec
rol
pop
pushl
push
push
ror
xor
push
xor
add
add
sub
ror
sub
add
pop
not
sub
pop
push
dec
sub
sub
add
pop
push
call
push
push
add
dec
push
push
pop
add
add
xor
sub
dec
rol
shr
pop
add
dec
pop
push
lea
push
push
call
jge
sti
add
fldl
out
lahf
jl
xorl
add
xlat
add
movsl
pop
xchg
lds
pop
add
push
cli
add
add
scas
push
test
mov
addl
addl
add
in
hlt
lcall
jne
push
xor
sub
pop
call
push
add
pop
push
call
push
push
shl
push
and
add
xor
rol
dec
xor
sub
shl
sub
pop
pop
push
shr
add
pop
pushl
push
push
push
push
lea
push
push
push
call
add
cmpsb
add
pop
mov
xchg
cmc
add
jo
push
add
add
popf
mov
add
add
add
add
push
add
jns
pop
mov
idivl
jmp
rcll
add
stc
add
pop
sub
pop
call
push
not
inc
add
pop
call
pushl
push
lea
push
push
push
lea
push
push
push
push
call
mov
lret
add
add
mov
jno
add
add
push
enter
test
jl
add
cld
add
add
jl
gs
jnp
mov
jmp
sub
pop
mov
jmp
push
push
not
inc
lea
push
or
inc
add
lea
not
shl
sub
dec
pop
shr
pop
push
not
pop
pushl
push
ror
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
sti
add
add
fwait
add
sti
add
add
into
ljmp
xchg
mov
push
addb
mov
fldl
mov
aam
repnz
push
mov
fcomps
add
shrb
xchg
xlat
push
sub
push
sub
add
rol
inc
not
sub
xor
inc
not
shl
pop
shr
inc
pop
push
not
pop
pushl
push
sub
add
lea
pop
call
push
ror
dec
shl
pop
push
call
push
push
push
lea
push
push
push
push
lea
push
call
lahf
add
push
xchg
add
add
add
sahf
add
xchg
add
pop
add
rolb
add
scas
add
aad
cwtl
push
arpl
add
cmpsb
add
sub
pop
leave
push
lea
push
lea
push
call
xchg
mov
sarb
roll
cmpsl
lcall
add
hlt
mov
add
stc
idivl
mov
pop
jmp
add
add
call
testb
jnp
hlt
add
insb
outsl
mov
add
lcall
les
push
push
push
push
call
aad
test
add
pop
add
add
add
gs
pushf
adcb
scas
loope
xchg
loop
fdivrl
fwait
add
mov
in
lock
lcall
push
rol
pop
pop
push
rol
xor
pop
pop
xor
push
shl
ror
pop
inc
ret
push
dec
xor
sub
add
pop
leave
ret
push
shl
inc
lea
pop
push
mov
push
lea
push
push
call
js
gs
add
mov
jl
xchg
add
mov
lea
mov
add
test
push
cwtl
pop
jne
add
je
add
add
jnp
in
roll
add
leave
into
add
iret
add
out
add
jns
push
pop
sub
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
insb
mov
pop
jbe
pop
mov
add
mov
add
xchg
hlt
mov
xchg
mov
add
pop
add
out
add
push
push
jbe
cld
sti
xchg
add
add
mov
add
add
sub
pop
mov
jmp
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
sarb
add
lods
mov
lods
xchg
push
pop
add
cmpsb
fdivr
add
push
add
add
fadds
jbe
add
add
in
add
mov
push
lods
add
add
roll
data16
fcomps
inc
or
push
push
push
call
lods
into
lret
mov
in
add
mov
fildl
add
roll
lea
pop
jecxz
add
pop
test
add
and
push
push
push
push
push
call
addr16
lods
popf
jno
lahf
stos
xchg
push
xchg
add
ret
jge
mov
fnstenv
add
add
add
add
add
mov
add
leave
push
sub
rol
pop
xor
push
dec
pop
add
push
add
sub
pop
xor
push
lea
push
push
push
push
push
push
push
call
add
add
add
popf
add
mul
jns
add
into
idivb
add
push
add
loopne
dec
sub
push
push
call
int
push
add
pop
add
add
stos
add
addb
cld
add
push
ja
sbbb
test
pushf
cmpsl
add
icebp
roll
clc
fiadds
add
clc
mov
add
stos
mov
test
imul
in
clc
lcall
xchg
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
jecxz
add
pop
xchg
icebp
add
add
fadds
add
add
test
fwait
add
iret
cmpsl
mov
add
loopne
jmp
xchg
jb
mov
loopne
sub
push
pop
pushl
push
dec
lea
pop
pop
push
add
pop
sub
push
xor
add
shr
pop
cmp
jne
mov
push
rol
shr
pop
lea
push
add
pop
sub
push
lea
push
push
push
push
call
xchg
bound
js
pop
push
add
add
jge
add
addr16
mov
mov
hlt
shll
add
enter
add
fisubl
xchg
pop
add
enter
sarl
test
add
push
pusha
add
or
roll
pop
shr
push
rol
sub
pop
add
push
push
push
lea
push
call
xchg
add
pop
std
nop
xchg
fwait
stos
imul
jae
cld
add
push
add
add
stos
xchg
ret
push
mov
mov
lcall
jmp
push
lea
push
push
push
push
lea
push
call
cld
fwait
push
jo
add
loope
push
add
mov
mov
scas
test
add
add
cmpsb
movl
add
add
pop
pop
push
lea
pop
shr
push
lea
push
push
push
push
call
imul
push
add
mov
add
xchg
add
push
mov
add
mov
mov
fwait
add
mov
xchg
lret
jb
leave
movsl
xchg
lock
add
add
cltd
xchg
sti
add
xchg
jl
xlat
in
ljmp
add
add
loope
incl
add
lea
push
push
push
lea
push
lea
push
lea
push
push
call
leave
out
add
add
add
add
addb
add
enter
add
add
mov
add
fcompl
jmp
cmp
jne
push
ror
xor
lea
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
roll
mov
add
xchg
aad
add
add
add
mov
mov
push
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
push
pop
add
rolb
add
test
add
add
add
xchg
outsl
jbe
mov
add
add
add
out
mov
fsts
jl
add
xlat
push
add
popf
add
fadds
in
push
push
push
lea
push
lea
push
call
lahf
lea
pushw
jmp
add
mov
add
push
sahf
mov
mov
add
cwtl
flds
jle
cwtl
add
mov
add
pop
hlt
add
sahf
add
mov
cmpsb
cmpsb
sub
pop
add
push
ror
pop
push
push
push
inc
add
pop
push
push
rol
shr
pop
push
push
sub
xor
inc
lea
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
filds
add
add
add
div
add
jecxz
mov
movsb
add
lret
add
scas
scas
add
add
xchg
mov
add
sub
pop
mov
lea
push
pop
sub
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
add
lock
add
add
add
add
add
pusha
add
push
add
add
mov
int3
push
faddl
mov
mov
add
fcomps
adc
ljmp
pop
add
push
lea
push
push
call
adcl
add
jno
add
int3
loop
add
cld
add
add
lcall
push
ja
rolb
xchg
pusha
add
mov
fs
in
hlt
lcall
fwait
addb
add
pop
or
lea
push
push
call
cmpsl
lcall
add
add
imul
inc
rolb
roll
xchg
add
mov
add
add
push
add
leave
movsl
add
add
add
jne
push
fiadds
push
bound
jmp
in
add
pop
hlt
add
add
add
std
roll
add
cwtl
add
mov
sub
pop
mov
add
push
inc
pop
xor
mov
push
lea
shr
shl
pop
and
push
not
shl
pop
rol
push
not
lea
dec
pop
rol
xor
push
push
push
push
call
mov
add
add
add
fadds
ficoml
mov
xchg
add
xchg
imul
out
sar
add
add
add
add
add
addl
xchg
int3
add
xchg
add
add
jae
stos
add
add
in
lock
inc
push
push
push
push
push
push
call
jle
add
jb
mov
add
fadds
add
add
pop
test
jne
jl
add
popf
jp
add
add
jmp
test
lret
add
lock
add
jb
stos
mov
add
loop
add
shlb
stc
jecxz
add
in
call
cmpb
jne
push
pop
add
cmp
je
push
push
push
push
push
push
push
push
call
push
xchg
je
add
pushf
add
push
xchg
xchg
push
mov
xchg
mov
add
add
lahf
mov
add
jmp
push
add
lods
pop
xlat
mov
lcall
ret
adc
jnp
add
test
push
lea
push
push
push
lea
push
call
mov
mulb
add
gs
add
push
mov
add
fildl
pop
into
stc
xchg
mov
lcall
jmp
in
add
mov
call
ror
pop
pop
pop
push
push
push
call
jb
jmp
mov
js
add
add
clc
imul
add
pop
pop
flds
lret
add
insb
movsl
push
xchg
add
mov
rorl
add
push
mov
stos
add
add
add
xchg
add
add
scas
je
cld
add
push
popf
jmp
push
stos
add
mov
xchg
out
sub
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
push
add
xorb
xlat
add
xchg
add
xchg
add
add
add
mov
mov
fidivrs
pop
add
loope
add
add
jns
popa
add
jle
loope
std
lret
mov
fcompl
pop
push
rol
rol
pop
leave
push
push
lea
push
push
push
push
call
mov
add
icebp
add
icebp
add
outsl
mov
lock
ror
cltd
mov
gs
xchg
lcall
or
push
push
push
call
add
rcr
cld
fdiv
mov
into
popf
mov
add
fs
filds
mov
shlb
mov
stos
addl
stos
cltd
test
js
sahf
enter
push
int3
fadds
jo
stc
icebp
add
pop
pop
cwtl
shrb
add
jno
cld
push
leave
add
cld
std
add
int3
add
stc
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
outsl
pop
fldt
mov
add
je
jmp
test
add
cwtl
lahf
enter
add
mov
int3
mov
pop
aad
add
hlt
fistpll
mov
push
push
in
add
xchg
add
add
test
addr16
sub
pop
add
push
ror
add
shl
pop
mov
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
call
ret
lds
jnp
pop
add
pushf
jbe
popa
add
add
scas
push
mov
stos
add
jmp
fcmovne
add
add
adcb
pop
mull
push
lea
dec
pop
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
incb
add
int3
jne
cwtl
add
lods
add
add
add
xchg
lea
shl
add
push
add
pop
fnstcw
add
addr16
sub
pop
push
push
ror
sub
shl
shl
pop
call
push
add
shr
pop
xor
push
lea
push
push
call
hlt
push
add
mov
add
jb
push
fbstp
mov
xchg
jmp
outsl
xchg
add
add
jno
add
mov
outsl
in
add
add
mov
lds
push
add
in
sub
pop
pop
push
xor
shr
pop
pop
push
xor
pop
pop
pop
push
dec
inc
add
pop
pop
push
pop
leave
push
push
lea
push
push
call
popa
add
hlt
int
insb
add
mov
add
add
arpl
out
clc
nop
add
sub
pop
ret
push
push
pop
mov
add
push
push
call
mov
int3
insb
jno
test
jle
ret
add
mov
xchg
into
stc
add
jle
stos
mov
int3
jnp
add
movsb
scas
pop
sub
pop
push
push
push
sub
sub
rol
not
pop
push
push
push
push
push
push
call
add
add
add
stos
add
roll
add
fsubr
lret
add
cwtl
cmpsb
add
push
add
add
mov
xchg
iret
imul
add
mov
outsl
test
arpl
add
add
add
popa
mov
xchg
mov
lock
lcall
pop
or
push
push
push
push
push
push
push
call
add
jl
add
mov
sahf
sahf
pushf
add
fwait
add
test
add
mov
test
mov
iret
push
mov
push
mov
add
add
add
test
mov
add
mov
addl
pop
pop
lea
push
sub
pop
sub
push
push
push
push
push
push
push
call
enter
enter
mov
xorl
jb
add
les
pop
xchg
add
add
ficompl
mov
int3
add
mov
jge
add
movsl
sahf
add
push
jno
push
pop
mov
mov
add
pop
add
pop
add
sub
pop
mov
shr
push
push
push
push
push
call
int
xchg
add
test
add
test
add
mov
cmc
add
jmp
add
push
xchg
add
sub
pop
add
push
push
push
call
fsubl
int
jmp
add
add
fdiv
add
push
mov
add
faddl
xchg
xchg
add
add
enter
enter
push
in
add
in
add
pop
cld
add
add
iret
jo
cli
mov
sub
pop
mov
add
push
lea
push
push
call
icebp
gs
shlb
leave
add
fcoms
shll
add
flds
add
roll
jae
push
inc
lea
pop
popl
mov
push
push
lea
push
lea
push
call
push
aad
add
add
fistpl
cmpsb
je
hlt
jno
arpl
roll
arpl
push
add
add
push
stc
cld
mov
mov
in
lock
lcall
stc
push
lea
push
push
push
push
lea
push
push
call
add
imul
jae
sarl
add
callw
pop
add
cltd
push
add
stos
add
add
clc
add
notb
ds
call
add
filds
js
nop
mov
in
add
fildl
mov
xchg
test
pop
pop
mov
jmp
in
mov
imul
fmulp
out
mov
add
add
sti
loope
test
lods
mov
add
je
jb
cltd
arpl
sub
pop
lea
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
test
add
add
addl
lcall
popa
add
add
add
sub
pop
mov
push
push
push
push
call
push
add
std
jmp
mov
mov
add
mov
add
mov
faddl
imul
push
push
movsl
add
add
mov
addb
arpl
sarb
out
pop
add
movsl
push
add
imul
fsubrl
lahf
add
jge
in
add
idivl
push
lods
ja
cwtl
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
add
pushf
add
mov
push
lea
imul
add
add
popl
jmp
add
ficomps
add
testl
mov
add
rolb
add
out
xchg
pushf
add
sub
pop
xor
push
push
push
call
std
outsl
xchg
add
add
push
loop
int3
add
out
jle
add
leave
out
into
pop
mov
out
xlat
push
aam
enter
je
add
or
add
lret
aad
add
mov
fwait
add
add
ljmp
pushf
ret
into
mov
lcall
rolb
push
lea
push
call
add
add
jge
mov
add
test
push
andb
add
orl
mov
cmpsb
add
stos
cmc
call
pop
mov
add
mov
movsb
jbe
add
add
add
push
sub
pop
nop
push
push
lea
push
push
push
push
push
push
call
add
add
not
add
shlb
add
test
xlat
in
test
add
add
add
ljmp
cld
add
add
add
add
add
jmp
add
add
loope
add
add
aad
add
roll
pushf
add
mov
int
fbld
loopne
lcall
push
push
call
lods
mov
iret
loope
push
add
loopne
scas
pop
xchg
in
in
add
add
repnz
add
add
mov
add
add
add
fists
adcb
add
add
add
clc
lcall
add
nop
push
rol
ror
sub
pop
nop
inc
push
add
not
pop
nop
push
push
push
call
add
test
push
add
subl
add
enter
add
divl
mov
fsubs
add
imul
lcall
push
lea
push
push
push
push
push
call
hlt
hlt
jno
stc
movl
mov
add
sarl
sahf
add
mov
test
add
fs
mov
jp
scas
xchg
imul
mov
add
sub
pop
cmpb
jne
push
dec
pop
add
push
shl
xor
pop
nop
nop
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
add
test
mov
add
enter
add
stc
pop
stos
incb
in
add
jp
mov
test
cli
add
jae
add
pop
cmp
je
nop
push
push
push
push
push
push
call
aam
data16
test
xorl
add
add
shll
loope
test
addl
call
sub
pop
nop
inc
push
push
push
push
lea
push
lea
push
push
call
movsb
lods
add
add
fcmovbe
xchg
push
jae
add
roll
movsb
imul
push
stos
ja
add
add
add
push
add
fiaddl
fsubp
add
fistpll
add
lcall
push
ror
pop
nop
push
lea
push
lea
push
push
push
push
call
cli
add
ret
mov
add
cmc
mov
in
add
movl
add
add
add
add
lret
add
out
add
andb
pop
nop
add
add
cmc
jb
add
in
sub
pop
cmp
jb
push
xor
pop
xor
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
mov
add
lods
aad
mov
cmpsb
add
pusha
add
rcr
add
lea
mov
add
adc
add
push
inc
sub
rol
pop
mov
push
inc
lea
pop
add
push
lea
push
call
mov
xchg
stos
add
fildl
add
push
jl
cmpsb
add
add
int3
lods
mov
add
mov
add
mov
call
pop
movzwl
push
dec
lea
pop
mov
add
push
add
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
pop
add
data16
add
add
test
popf
add
test
mov
xchg
add
arpl
lcall
add
add
nop
pop
leave
add
repnz
add
add
lcall
leave
push
add
pop
xor
push
lea
push
push
call
mov
add
call
jle
mov
popa
add
popa
test
xlat
cld
shll
push
xchg
mov
add
add
fsubs
into
add
cmc
add
mov
filds
addb
stc
push
add
add
mov
in
xchg
lcall
loope
xor
push
sub
lea
sub
sub
pop
shl
push
push
call
test
push
scas
mov
add
jl
jmp
or
mov
add
add
add
aad
sahf
data16
xchg
add
lea
add
xchg
jno
scas
push
push
int
add
les
pop
add
decb
sub
pop
xor
shl
push
xor
pop
xor
push
lea
push
push
call
mov
add
mov
jge
xchg
add
add
out
push
add
push
add
adcl
add
enter
pop
lahf
movb
add
aam
xchg
mov
mov
pop
mov
scas
aam
insb
mov
andl
shl
fnstenv
jecxz
loopne
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
call
add
pop
add
add
out
cmpsb
in
add
icebp
add
mov
repnz
mov
jmp
xchg
mov
lahf
add
fadds
pop
add
push
push
call
rcll
test
add
mov
lret
pop
loopne
push
fildll
stos
fadds
cld
ja
push
hlt
lds
mov
fwait
add
pusha
stc
call
add
leave
push
add
push
add
fs
mov
fwait
add
out
mov
mov
in
add
mov
add
lcall
pop
push
xor
lea
shr
pop
pop
push
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
pop
js
fadds
add
add
lock
jge
add
movsb
mov
data16
push
ficoml
add
add
mov
cmpsl
push
sub
pop
leave
ret
push
push
call
add
add
arpl
mov
mov
pop
add
add
sarl
mov
mov
lcall
add
mov
add
int3
addr16
add
add
add
add
add
movsl
xchg
sub
pop
push
push
lea
pop
mov
push
inc
sub
inc
pop
push
push
push
ror
add
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
push
add
push
jb
aad
fwait
add
push
add
lock
add
push
xchg
testb
add
mov
add
idivl
in
fdivr
lcall
push
add
pop
mov
push
push
call
fiadds
add
add
les
xchg
mov
pop
add
imul
add
push
movsb
jo
push
jp
mov
in
shl
add
push
add
mov
push
add
add
add
vdivps
add
add
add
mov
xchg
mov
sub
pop
mov
push
push
push
push
push
call
in
add
lahf
test
insb
int3
mov
add
cmpsl
cmpsb
out
add
cltd
add
add
add
push
add
add
push
outsl
add
flds
imul
scas
mov
fldl
in
add
push
fcmovnb
out
shrl
add
add
jge
test
je
push
push
call
add
add
mov
neg
loop
test
mov
add
add
scas
add
add
add
jbe
cmpsl
add
rcr
add
rol
mov
add
mov
add
nop
push
mov
clc
lcall
jno
test
je
push
pop
mov
mov
push
push
push
push
push
push
push
push
call
add
mov
pop
cmpsb
cld
add
add
lods
flds
pop
add
adcl
jo
add
add
aad
enter
xchg
xlat
cli
add
lds
stos
sub
pop
mov
push
push
push
push
push
push
call
mov
test
lea
loope
xchg
hlt
push
mov
stos
iret
imull
pop
add
add
jae
xchg
rolb
add
sub
lahf
mov
aam
add
jl
scas
push
jle
sarl
push
in
in
scas
add
cmc
add
xchg
add
imul
mov
pop
pop
out
add
add
sub
pop
inc
push
not
pop
cmp
je
push
inc
add
pop
test
je
push
push
push
push
push
push
push
push
call
jle
lret
push
lcall
add
add
movsl
sti
pop
iret
mov
add
iret
add
xchg
pop
popf
fxam
add
add
add
jge
push
ret
xorl
add
roll
scas
pushf
add
add
pop
les
sub
pop
mov
push
sub
pop
inc
push
lea
push
lea
push
push
push
push
call
add
pop
add
lret
add
jnp
addb
lahf
add
add
push
jp
stc
mov
cli
leave
jb
lcall
je
test
jne
push
push
push
push
push
push
push
call
xchg
jns
add
add
test
add
mov
addr16
add
add
xchg
add
push
add
js
jno
sub
pop
xor
pop
push
push
push
call
test
cmc
push
movsl
push
add
add
add
xchg
loopne
mov
test
add
add
add
xchg
add
mov
mov
pop
push
scas
add
add
movsl
loop
add
xchg
cmc
popf
mov
subb
hlt
pop
pop
pop
push
lea
push
lea
push
push
call
mov
add
ror
int3
lock
js
sahf
pop
lea
roll
add
pop
faddl
add
add
loop
cwtl
mov
loopne
push
add
cltd
add
rcrl
cmpsl
enter
in
lock
pop
push
ror
dec
pop
leave
ret
push
push
call
push
lea
add
mov
filds
je
jbe
add
enter
fnstsw
ret
add
mov
pop
xchg
add
pop
cmc
add
mov
add
fstl
in
jns
mov
mov
stos
frstor
pop
mov
add
xchg
add
add
ja
sbb
lcall
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
test
in
add
add
add
mov
loop
lcall
pusha
in
jne
pop
movsb
lret
sarl
add
xchg
stos
add
add
push
sub
pop
inc
cmp
jne
push
xor
shl
shr
pop
lea
push
inc
pop
mov
test
je
push
shl
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
call
add
sti
in
jbe
add
scas
add
imul
xchg
add
add
mov
pop
mov
icebp
imul
fadds
cmpsb
stos
add
add
add
add
push
imul
add
jge
leave
add
pusha
add
add
add
lcall
movb
loopne
test
push
push
lea
push
push
push
push
call
shlb
lock
add
add
out
pop
add
lock
mov
mov
add
add
fldenv
add
pop
add
mov
push
mov
scas
cmc
mov
add
stos
add
pop
mov
test
je
push
add
xor
pop
mov
push
add
ror
add
xor
pop
add
push
push
push
lea
push
push
lea
push
push
push
call
jae
stos
add
add
add
xchg
jae
in
call
add
movsb
mov
jle
lods
add
jbe
lods
jp
mov
loopne
test
shr
rol
pop
jmp
push
push
push
push
push
push
push
push
call
incb
rcr
not
ror
add
add
pop
stc
mov
loop
addr16
fiaddl
add
add
std
jmp
add
mov
pop
add
les
std
add
movsb
add
scas
add
rclb
lea
pop
pop
push
not
sub
pop
pop
push
add
add
lea
shr
pop
pop
push
rol
pop
pop
leave
push
push
lea
push
push
push
call
add
mov
jbe
add
mov
add
cmc
add
imul
xchg
add
push
xchg
mov
jp
jl
stos
add
hlt
add
mov
add
sahf
push
push
add
add
add
enter
add
mov
lcall
or
push
push
push
push
push
lea
push
push
push
push
call
add
sti
clc
arpl
add
scas
aad
xchg
imul
lahf
movl
add
jmp
mov
push
out
sti
pop
loopne
popl
add
add
add
add
jo
roll
sub
pop
lea
pop
push
shl
lea
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
clc
add
pop
neg
push
mov
add
add
xchg
add
lret
rolb
aam
loop
lods
rol
add
mov
in
add
push
add
add
testb
add
mov
out
mov
aad
pusha
push
add
jno
add
sub
pop
pop
push
inc
sub
pop
pop
leave
push
add
xor
inc
inc
pop
ret
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
add
cmpb
je
loop
ret
insb
add
test
out
cmpsl
lahf
enter
clc
add
test
mov
aam
jns
jmp
jb
sub
pop
pop
pop
push
sub
shr
add
inc
pop
pop
push
add
ror
add
pop
pop
push
shr
rol
xor
pop
leave
ret
cmp
leave
mov
xor
mov
mov
mov
loope
mov
loope
mov
ret
test
pop
lret
xchg
lret
or
mov
mov
add
add
stc
inc
cs
aad
into
dec
aad
shll
pop
cli
lock
sub
rorb
cld
fdivrl
pop
adc
push
jl
jg
inc
imul
xchg
movsb
ljmp
mov
int3
inc
cmc
shr
adc
push
inc
inc
mov
mov
cli
lret
adcl
ret
cmp
cmp
or
mov
xchg
pop
inc
pop
out
dec
je
movsb
cmpsl
clc
ljmp
mov
into
lods
test
in
xor
lods
in
fsubs
bound
loopne
pop
jns
sub
fucom
adc
inc
and
jge
movsb
pop
jl
add
leave
add
mov
cld
push
adc
repz
mov
cli
out
jp
and
cmpsb
mov
add
pushf
inc
sbb
scas
pop
or
out
fidivrl
mov
cld
push
mov
rcrb
dec
icebp
test
mov
dec
es
rorb
out
fwait
aad
cwtl
adc
lretw
cs
int
push
out
mov
cld
daa
add
pop
outsl
or
mul
xchg
cmpsb
in
dec
test
ljmp
shll
das
mov
ret
pop
repz
jns
adc
pop
shll
loopne
sahf
adc
fsubs
test
xchg
fstl
arpl
mov
xchg
shrl
push
js
push
or
cmp
jno
or
jbe
xchg
or
adc
push
mov
lods
cmp
sub
pop
test
aaa
xchg
or
jae
jle
into
fiadds
sub
out
pop
repnz
aam
rclb
and
push
cmp
call
mov
fidivl
movsl
cli
lock
push
fmul
add
and
and
js
xor
pop
cmpsl
shr
or
jge
scas
loope
push
outsl
lret
rolb
jo
mov
movsl
aad
mov
pop
xchg
inc
mov
popa
mov
ret
mov
icebp
stc
ja
popa
dec
sahf
loop
ljmp
push
jge
pop
dec
inc
xor
out
add
push
mov
sbb
dec
pop
movsl
push
xor
insl
xor
sbb
sub
xchg
jno
call
repnz
inc
xchg
pop
fs
cltd
sti
call
and
sub
sub
in
sub
aam
dec
je
sahf
and
sub
adc
repnz
divl
gs
cmpsl
mov
mov
inc
or
lcall
movsb
xchg
pop
pop
xor
cmpsl
and
sub
or
and
mov
xabort
jne
inc
xchg
inc
ss
sbb
std
cwtl
test
mov
inc
addr16
loop
fdivrl
adc
pop
fcompl
mov
jle
cmp
cwtl
les
repz
jbe
mov
popf
xchg
sbb
rcr
inc
test
cmp
daa
loope
jecxz
jmp
mov
inc
imul
push
out
das
or
sbb
addr16
sbb
pusha
enter
push
xchg
daa
pop
sbb
fsts
movsl
xor
mov
into
mov
adc
or
xchg
jg
xchg
jp
dec
push
in
pop
or
dec
bound
add
jb
cli
dec
pop
imul
das
dec
inc
out
cmp
in
add
call
xor
mov
mov
mov
sarb
sub
nopl
jle
scas
push
fidivrs
and
test
pop
rcr
bound
jmp
fsubrl
jno
out
mov
lcall
mov
mov
push
out
lea
pop
cmp
ror
pop
jae
stos
lods
sti
mul
pop
out
mov
rcll
repnz
push
ja
dec
out
out
daa
imul
mov
dec
dec
jmp
dec
or
lock
inc
loopne
xchg
cmp
and
insb
inc
mov
lcall
mov
leave
inc
cwtl
push
nop
and
cltd
adc
test
ljmp
cmp
lods
push
jo
cmp
or
roll
mov
inc
inc
sbb
mov
or
cwtl
pop
nop
dec
in
jmp
push
aam
pusha
ss
jo
xchg
addr16
dec
push
das
jne
pop
jmp
cmp
pop
and
mov
ret
int
fldcw
push
cmpsl
xlat
and
lds
inc
ficomps
dec
inc
test
dec
adc
add
loope
aas
push
mov
fsubrs
adc
mov
in
cmp
in
inc
loop
fdivrp
mov
dec
push
ljmp
cmpb
data16
mov
lea
pop
adc
out
xchg
invd
imul
imul
mov
andb
xor
xor
mov
or
cmp
mov
jne
push
lea
outsb
xor
mov
ret
mov
fstpl
shll
sub
jb
jbe
and
push
xchg
imul
sbb
push
xor
push
lret
jge
push
std
pop
stos
fidivrs
fldl
inc
mov
les
push
mov
aad
lea
adc
cltd
hlt
std
add
jae
push
movsb
adc
mov
sarl
fiadds
leave
cmovge
xchg
and
pop
jge
pop
push
push
mov
adc
popa
sub
scas
lods
out
add
int3
bound
dec
xlat
addl
mov
push
mov
shrl
xchg
dec
mov
pop
sbb
into
jb
pop
add
int
in
ljmp
inc
mov
cmpsl
lock
push
jb
adc
lea
mov
clc
imul
mov
sbb
outsl
sahf
jmp
dec
mov
filds
cmp
in
cwtl
push
sub
arpl
daa
mov
xchg
pop
jg
dec
in
xchg
ret
movsb
and
adc
in
mov
rol
fstl
sarl
inc
test
mov
bound
pop
inc
push
or
rcl
or
sbb
mov
jmp
and
adc
sub
mov
icebp
mov
lds
imul
push
sbb
jns
jnp
xorl
mov
cmp
aaa
xchg
out
or
push
xchg
or
sbb
sbb
add
jae
xlat
addr16
mov
fimuls
xlat
pop
mov
push
and
ss
xor
xchg
cld
add
fwait
mov
sub
lcall
cwtl
vmovdqu
jnp
fdivs
les
imul
stos
iret
push
leave
add
nop
ja
inc
xchg
xor
negb
lds
inc
out
pusha
je
insb
cmpl
mov
xchg
jo
inc
outsb
and
mov
sbb
inc
mov
pop
mov
pop
xor
lret
xor
sahf
pop
hlt
sbb
in
xor
sbb
testb
jno
push
or
lea
std
adc
int3
bound
inc
clc
ja
lock
mov
cmc
icebp
loope
cmp
xchg
xor
jmp
xor
fsts
pop
jg
push
test
xchg
je
das
jb
ficoms
fcoml
test
mov
sub
out
mov
pop
mov
in
mov
or
and
stos
inc
outsb
into
sub
cs
ret
loopne
cmp
or
pandn
fs
add
jne
popf
mov
fstpl
jae
adc
mov
xchg
inc
sbb
aam
cltd
pop
add
loop
mov
xor
fcoml
inc
push
pop
lret
inc
add
scas
xchg
dec
sub
inc
dec
mov
insl
int3
test
outsl
or
and
cmp
ret
lods
lret
and
pop
add
outsb
mov
stc
pop
aas
cmp
repnz
cmpsl
sbbb
jne
loope
jecxz
cmp
and
lods
shrl
es
inc
dec
pop
xor
sub
and
ja
jge
into
inc
sbb
test
cmp
add
bound
cmp
lcall
push
les
scas
mov
dec
mov
jmp
sub
fldenv
mov
popf
xchg
inc
loope
fs
mov
dec
rorb
xlat
in
test
inc
cwtl
or
mov
daa
shll
cs
xchg
sub
push
ficoml
in
dec
cmp
xchg
fiaddl
rol
push
ret
in
sub
adc
adc
imul
xchg
ret
cmpsl
and
jbe
mov
mov
shrb
push
mov
push
outsb
sarl
mov
sbb
fdivrs
lods
cld
lret
mov
cmp
cmpsl
shlb
in
add
cmc
jl
dec
mov
scas
test
call
sbb
aas
loop
or
lea
push
cmpsb
call
add
add
repnz
inc
ljmp
jns
inc
pop
sahf
rcll
push
inc
ffree
dec
fimuls
out
sbb
mov
test
repz
ror
adc
jne
and
popf
pusha
jae
add
xor
jb
sub
cld
xchg
out
or
repnz
test
movsb
andl
add
sahf
aas
fcoml
into
pop
jp
mov
enter
adc
inc
sbb
outsl
push
xor
movsb
pop
xchg
mov
stos
subl
int
cld
jno
xor
outsb
int3
in
in
je
inc
mov
lret
mov
dec
test
pop
mov
cmp
icebp
insb
mov
mov
and
jb
fimull
push
cmpsl
loope
push
adc
les
cmpsb
jecxz
push
pop
inc
lock
dec
iret
jp
cmp
in
fcompl
push
cs
sbb
and
repnz
lcall
jle
sub
movsb
lds
int3
jp
in
xchg
cmp
js
mov
cmp
test
xchg
mov
es
mov
in
jmp
in
out
inc
addr16
shrb
lret
iret
lods
leave
add
sbb
xor
jne
jmp
or
mov
int
cmp
fstl
sarl
fwait
sub
scas
dec
add
aam
call
dec
sti
popf
fistpl
mov
xchg
and
repnz
adc
pop
cmp
mov
push
adcb
stc
adc
pop
push
pop
adc
mov
add
sarl
orl
test
xchg
add
mov
add
sub
mov
fwait
fwait
adc
sahf
xchg
mov
cwtl
mov
cmpsl
imul
sbb
mov
ficoml
jae
xor
dec
inc
clc
inc
stos
mov
fwait
dec
and
popf
jg
js
dec
ret
and
loope
aam
jmp
and
cmp
idivb
fmull
xor
push
add
fmuls
outsb
xor
inc
loopne
add
mov
and
mov
cmp
xor
push
roll
xchg
dec
adc
dec
inc
sub
fdivs
inc
mov
lods
andl
dec
jp
adc
ds
dec
jb
push
sbb
daa
mov
cmpsl
cmpsl
jno
fcoms
sbb
push
and
or
lcall
push
mov
cmpsl
and
xor
pop
fdivs
mov
repnz
ss
adc
loop
fsts
mov
sub
cmp
into
or
shll
sbb
push
sbb
and
cld
aaa
aaa
je
in
cmpsl
in
fwait
jb
mov
push
xchg
sbb
lock
roll
inc
jo
je
sub
jmp
lret
cmpsb
lds
push
movsl
rolb
popa
sbb
dec
rcr
test
xchg
fcmovu
push
sub
xchg
mov
jle
or
pop
repnz
outsb
adc
jbe
adc
or
push
push
xchg
mov
xchg
dec
idiv
int
aad
clc
dec
xor
mov
push
pop
popf
fisttpll
pop
sbbl
push
dec
out
push
jo
cmpsl
xor
sub
popa
imul
dec
clc
add
pop
std
jne
pop
test
add
cmp
out
fwait
cmp
movl
clc
loop
fsubr
xchg
jnp
xchg
clc
sub
cltd
jnp
popf
roll
pop
cmp
leave
push
clc
inc
mov
adc
cmpsb
xor
lods
xchg
insl
xacquire
push
sbb
inc
pusha
jo
push
pop
mov
les
jmp
lods
and
adc
sbb
and
push
xor
test
hlt
mov
xchg
sub
jo
jle
rcrl
test
lret
inc
ss
dec
fxch
mov
or
inc
ds
inc
cmp
scas
stc
mov
jnp
sbb
dec
mov
cld
sub
jbe
ss
add
or
lock
xor
push
xor
sub
pushf
bound
adc
nop
lahf
cmpb
fisubs
stc
fldenv
and
sbb
and
jnp
xor
inc
hlt
ja
xor
flds
mov
ret
fdivrs
xchg
push
mov
mov
scas
mov
das
stos
and
lret
test
adc
inc
and
push
cmp
in
in
xchg
in
dec
inc
push
in
clc
out
pop
pop
pop
adc
mov
adcl
pop
mov
mov
dec
loopne
jge
and
pop
mov
iret
xor
lea
ret
push
jl
insb
sub
xchg
inc
xchg
jbe
xchg
lods
push
into
fsts
adc
cmp
out
into
dec
push
fs
pop
test
ficoms
adc
xor
leave
out
stc
sbb
test
or
insl
pushf
mov
pop
adc
das
xchg
loopne
dec
xchg
rolb
inc
pop
sbb
divl
push
or
push
dec
sahf
push
lret
sub
pusha
xchg
cmpsl
pop
inc
and
add
xchg
popa
lret
xorl
out
mov
lods
stos
test
jge
repz
mov
nop
scas
xchg
sbb
sub
mov
dec
dec
xchg
add
jns
jmp
jmp
inc
fisubs
repnz
sbb
mov
mov
xchg
cmpsl
push
test
outsb
mov
js
dec
add
xchg
mov
mov
sub
pop
mov
call
aas
ficomps
xchg
test
cwtl
je
in
stos
shrb
sbb
adc
add
movsl
addb
cmp
xchg
pop
mov
inc
adc
push
mov
ficoms
arpl
jns
sbb
push
pop
sbb
cmp
data16
rcrl
dec
leave
clc
es
mov
mov
js
stos
xor
add
xor
or
push
xor
dec
xorb
dec
or
xor
in
popa
mov
pushf
dec
test
test
shll
inc
dec
mov
aad
je
fdivrl
xchg
enter
stc
or
xchg
jae
lods
dec
rcll
cltd
adc
je
lock
shrb
xor
xchg
cltd
shll
jp
les
inc
cmp
orb
pushf
mov
push
cmp
dec
dec
sbb
pusha
fdivr
jnp
jno
imul
adc
jbe
loopne
loopne
push
mov
and
pop
cmp
cltd
out
sub
and
std
sub
sbb
loop,pt
pop
adc
dec
mov
rclb
sub
adc
pushf
mov
nop
xor
loop
es
add
mov
sar
push
mov
jnp
ljmp
dec
add
xchg
sub
push
imul
jmp
pop
lret
addr16
pop
dec
fcomps
adc
sub
xchg
xor
jo
adc
pop
icebp
hlt
push
mov
mov
int
lea
nop
in
lahf
inc
or
lds
out
mov
pop
mov
mov
pusha
bound
xor
aam
cmp
jnp
xor
mov
mov
faddl
cwtl
mov
shll
frstor
cmp
adc
lret
jmp
lods
and
xlat
lahf
xchg
sbb
inc
jae
cmp
mov
or
xchg
pusha
push
or
cmp
push
xchg
adcb
or
int3
adc
ds
nop
stc
add
pop
rclb
outsl
loopne
sahf
mov
ficoml
std
sbb
mov
jl
popa
xchg
pop
repz
inc
mov
arpl
push
rcrl
loope
mov
mov
cmp
pop
int
push
sub
mov
sub
cwtl
sahf
into
inc
mov
dec
or
daa
sub
es
fbld
out
js
push
xchg
leave
test
mov
jo
out
jne
ja
fists
pop
fdivrs
dec
lea
stos
cmp
into
lods
push
gs
push
aaa
cmp
cmp
mov
mov
jecxz
std
cmp
je
sub
out
testl
daa
jnp
enter
data16
add
cld
ret
xchg
or
fsub
xorb
in
cld
dec
into
pop
dec
mov
jo
adc
movsb
mov
jge
jno
mov
lret
mov
mov
push
mov
out
lock
jo
mov
sahf
xor
popa
adc
dec
orl
jae
cs
pop
test
sbb
dec
add
pusha
cmc
and
jg
jle
les
sub
jb
inc
jecxz
std
mov
mov
inc
fwait
popf
xchg
scas
push
out
sti
adc
adc
jmp
js
mov
ret
sub
icebp
cmp
mov
or
enter
aam
and
iret
aam
mov
lcall
aaa
and
setp
js
jecxz
in
orb
das
jnp
push
aas
rolb
mov
insb
cmpsl
inc
xchg
sub
add
int
inc
fnstenv
int3
inc
scas
add
shll
rcrl
mov
sub
add
xor
imul
and
mov
aam
test
cmp
icebp
pop
lds
mov
adc
das
push
movsl
push
sahf
shl
inc
pop
stos
add
test
sub
pop
add
hlt
add
or
push
adc
or
addr16
ss
pushf
cmp
cltd
cwtl
mov
jnp
adc
jno
ja
jp
outsb
mov
push
mov
negl
sahf
ret
cmp
mov
fwait
or
and
sbb
jp
sahf
adc
mov
addr16
mov
push
cli
push
mov
int
cmp
stc
pop
test
leave
jl
enter
pop
jnp
shll
nop
sbb
jb
fisubl
sbb
or
cmp
adc
aas
or
push
fstpl
jecxz
sub
and
mov
in
xchg
rol
cwtl
loope
dec
dec
mov
test
inc
shll
pop
fisttps
bound
push
hlt
bound
cmp
xor
xchg
mov
jge
jo
aad
xor
pop
je
lahf
adc
rcl
pop
in
popf
fldenv
cld
jg
fwait
loope
in
xor
sbb
fildl
lea
jmp
stc
xor
jg
or
mov
adc
sbb
push
inc
adc
and
add
jg
shl
fmull
cmpsl
icebp
mov
imul
popa
or
xchg
dec
pop
sub
adc
push
mov
mov
fadds
inc
movsl
ss
scas
adc
aas
inc
les
in
jg
fmulp
sbb
fmul
adc
incl
push
ror
imul
jle
cmp
in
rcl
mov
ds
xchg
xchg
popl
xchg
cmpsb
fwait
pop
sbb
insb
sub
or
jne
push
sub
sbb
mov
mov
or
jae
hlt
nop
pop
int3
add
mov
int
pop
jbe
in
jmp
mov
jle
movsl
xor
push
test
aad
xchg
into
mov
cmpl
mov
sti
sub
and
pop
call
mov
ds
rcrl
xor
xchg
daa
fistpll
push
pop
into
push
arpl
jno
and
adc
fstps
iret
cmp
decl
frstor
packsswb
lock
and
inc
mov
cmpsl
push
movsb
pop
inc
sbb
inc
lds
cmp
adc
in
lods
ficoml
xor
sbb
ror
cltd
in
xlat
dec
orl
insb
ljmp
pop
mov
aad
call
andb
mov
sti
cmpsb
dec
cmpsl
mov
xlat
sahf
popa
mov
mov
cmc
push
out
push
mov
mov
jae
or
mov
xchg
pushf
dec
xchg
xor
shrl
inc
dec
mov
incl
mov
into
aas
addl
jbe
jne
or
ljmp
sbb
aad
negl
xchg
scas
cmp
jb
mov
push
pop
mov
int3
insl
gs
push
call
jmp
cli
jge
lcall
sbb
or
ficomps
lahf
adc
push
subl
mov
lds
out
cmpsb
das
or
addl
push
push
jne
outsb
sub
dec
call
push
pushf
push
int3
clc
inc
add
add
add
xor
bound
xchg
cltd
cli
adc
test
and
and
lret
je
pop
je
negb
mov
or
fsubrl
ficompl
aas
fldenv
mull
test
cmpsl
in
lods
xchg
pushf
in
ss
mov
sub
divb
fnstenv
out
adc
sub
or
add
frstor
and
dec
cmp
xor
pop
ja
pusha
pop
cltd
lods
sbb
inc
mov
and
push
adc
jo
lea
daa
sbb
jns
push
leave
fbld
inc
xorb
jns
rcll
cmp
test
insl
shrb
movsb
notb
xor
cli
out
sbb
ret
mov
mov
ret
cs
mov
in
daa
jbe
pop
push
je
adc
test
sbb
sbb
and
nop
push
gs
pop
xchg
mov
fsubs
or
sar
js
cmp
mov
enter
ret
out
out
and
fidivrl
push
dec
daa
clc
mov
sbb
jge
imulb
adc
jo
jnp
lods
fs
mov
imul
aam
sub
inc
and
mov
push
ret
mov
fidivrs
test
push
out
push
jae
cli
arpl
push
mov
inc
inc
mov
iret
fmuls
or
sub
incl
aaa
mov
pop
loope
inc
push
jle
jge
adc
lea
cwtl
mov
dec
aaa
sub
add
inc
xor
inc
xor
mov
xchg
cmc
adc
ljmp
dec
jecxz
or
or
cmp
insb
movsb
cs
sub
inc
or
and
repnz
xchg
push
cwtl
rcrl
inc
or
pushf
pop
mov
dec
mov
incb
mov
popa
mov
mov
adc
mov
rolb
notb
xchg
sahf
gs
data16
xlat
mov
or
xchg
mov
add
jns
dec
ret
push
std
adc
popl
cmp
pop
into
sub
push
test
and
dec
int3
inc
jmp
mov
jmp
adc
mov
or
rdpmc
sub
xor
jne
ja
sbb
adcb
sub
adc
dec
mov
inc
sub
scas
inc
ret
hlt
add
push
sub
or
lret
adc
sbb
aas
repnz
call
cmp
push
mov
stos
daa
cmp
jno
test
sbb
not
hlt
imul
loopne
push
push
sub
test
jecxz
imul
sar
jb
cmpsl
test
push
loopne
lahf
lahf
add
mov
xchg
and
mov
sub
pop
adc
fiaddl
dec
or
mov
loope
and
mov
add
lock
iret
test
aad
icebp
fstpl
jne
lds
cld
xlat
mov
xchg
fwait
dec
mov
outsb
mov
pop
ljmp
lret
add
addr16
inc
jns
imul
cli
repz
movups
fisubrs
dec
cmp
mov
cwtl
add
jg
lds
jl
mov
sti
push
push
outsb
jb
hlt
push
inc
test
or
lock
fldenv
in
xchg
cs
sub
mov
test
pop
std
adc
fsubs
popf
mov
aas
push
adc
cld
jo
leave
aas
shl
mov
dec
pop
mov
mov
adc
mov
or
or
and
ja
jae
sbb
mov
mov
fildl
sarl
or
xchg
jmp
or
dec
fsubrl
add
hlt
dec
pop
in
ja
enter
add
test
mov
and
add
fwait
repz
fisubrl
insb
and
add
adc
cmp
jle
push
mov
mov
bound
sbb
add
popa
hlt
xchg
mov
lret
test
out
fcmovb
and
cmp
mov
call
inc
add
inc
das
sub
pop
rclb
pop
cli
ja
add
lods
shll
mov
stos
clc
cli
sahf
mov
lods
stc
jo
mov
das
mov
cwtl
ret
dec
fistps
scas
jmp
dec
and
fldenv
xor
outsl
cld
dec
add
or
lods
popa
jl
stos
out
inc
sub
icebp
push
pop
adc
push
insb
scas
jnp
and
nop
dec
pop
mov
push
shlb
popa
mov
cmc
xchg
loop
cmpsl
sub
loope
popf
inc
sti
mov
add
rorb
cmp
pop
xchg
iret
add
fwait
testb
dec
push
out
pop
aaa
jmp
int
iret
mov
mov
scas
cmp
xchg
imul
push
aas
jno
fs
push
cmpsb
pushf
sbb
leave
arpl
dec
outsl
dec
mov
pop
int3
inc
aas
mov
insb
pop
xchg
xchg
or
or
rcl
call
adc
xchg
adc
test
call
push
lcall
lret
dec
iret
arpl
inc
out
dec
lods
xchg
movsl
cmp
cwtl
fisubrl
sbb
inc
pop
jg
pop
jge
rclw
aas
xchg
inc
mov
cmc
mov
repz
enter
loope
or
pop
ds
iret
dec
out
pop
mov
add
push
sbb
pop
xchg
xor
mov
in
mov
inc
push
repnz
pop
adc
push
mov
out
or
stos
fmuls
mov
insb
sahf
leave
in
add
jne
or
sub
cmp
dec
cmc
faddl
fidivrl
add
or
jecxz
pop
mov
mov
idivl
and
sbb
dec
sub
fcmovnbe
push
and
jnp
sub
loopne
inc
dec
cmp
cmp
inc
pusha
xchg
jo
jl
in
push
data16
xchg
addr16
pop
cmp
dec
cli
test
sbb
ja
jp
sub
pop
lahf
xchg
fidivl
mov
mov
stos
xchg
in
scas
fidivl
rol
mov
dec
mov
pushf
mov
sbb
or
pop
dec
xchg
mov
and
ret
popf
data16
rolb
or
loop
or
xor
xchg
in
jbe
cltd
or
rorl
mov
mov
ret
faddl
xchg
test
aad
pop
popa
addl
xchg
cmp
fiadds
lods
mov
movsb
xchg
xchg
scas
mov
cmp
sub
jno
cmp
outsb
mov
push
add
shlb
aam
jmp
cmpsl
adc
scas
dec
adc
sti
sub
aas
je
dec
push
cli
mov
mov
int
pop
imul
fidivrl
mov
sbb
sbb
lock
ds
jmp
popf
xchg
lock
gs
sti
inc
adc
jbe
std
xrelease
lcall
cwtl
cmp
jae
adc
mov
push
je
and
xchg
scas
insl
fwait
xchg
xor
repnz
mov
xor
adc
push
into
icebp
ljmp
adc
sar
cli
test
clc
pop
push
dec
fistps
lds
imul
leave
sbb
jns
dec
pop
insb
add
in
add
push
fs
dec
fidivs
test
in
in
mov
sub
xchg
mov
pop
mov
cs
into
jge
xor
add
jo
mov
lahf
sub
push
lods
push
aaa
mov
pop
out
and
dec
dec
rclb
push
in
mov
fistpl
loope
loopne
addr16
cmp
sbb
test
xchg
aas
mov
stos
out
subb
imul
lods
out
inc
or
daa
inc
fistl
dec
bound
insl
loopne,pn
fimull
mov
xchg
cmpl
stos
cld
fidivrs
popf
nop
jge
jo
bound
lret
mov
push
sahf
add
and
pop
cmc
das
das
sbb
mov
fstl
pushf
outsl
iret
lods
inc
loope
test
cmp
push
sti
push
jbe
aad
jb
movsl
shl
or
mov
cmp
icebp
stos
in
ds
push
jle
insl
insb
call
cmpsb
sbb
mov
loope
ljmp
shlb
mov
or
pop
cmp
stos
add
mov
push
out
mov
add
mov
pop
sbb
stc
jb
movsb
orl
xchg
lret
fiaddl
ljmp
fnstcw
outsb
dec
pop
clc
call
test
inc
and
xchg
ja
xchg
cmp
fld
fsubs
xchg
test
or
mov
push
arpl
aad
dec
inc
ss
loop,pt
or
adc
mov
mov
sub
jecxz
inc
stos
shlb
inc
xabort
and
lcall
outsl
negl
fisubl
xchg
jmp
jne
adc
dec
inc
mov
dec
jl
adc
lret
push
xor
popl
jecxz
adc
je
cmp
cli
mov
in
mov
bound
pop
leave
and
adc
cmp
xchg
ljmp
nop
addr16
sbb
and
inc
sbb
test
outsb
mov
popf
lods
cltd
or
imul
jnp
call
inc
push
mov
mov
jp
clc
mov
jg
mov
mov
push
dec
xorb
jmp
ror
add
xchg
and
adc
shlb
addr16
pop
int3
adc
mov
call
call
movsl
and
leave
sbb
scas
mov
inc
rcr
pop
add
filds
pop
pop
sbb
mov
lea
xchg
cld
sahf
push
ret
shrl
scas
xchg
dec
ret
jg
and
out
test
push
pop
sbb
scas
ljmp
pop
fdivrl
add
out
cmp
push
and
in
hlt
in
push
dec
push
push
add
pop
dec
stc
cmpsb
xchg
hlt
in
xlat
movsb
push
dec
mov
out
imul
push
or
sbb
jno
add
push
lock
xor
stc
movsl
sbb
dec
push
test
out
fidivrs
mov
push
and
bound
jnp
in
rcll
in
movsb
sbbb
dec
mov
test
xchg
test
insb
mov
or
cmp
aas
dec
xchg
imul
lcall
jnp
scas
loope
dec
jg
cmc
xchg
in
fidivs
push
lahf
and
insl
sbb
aad
daa
in
jecxz
test
out
sbb
lea
pushf
or
mov
imul
dec
aad
jp
stos
enter
cmp
cmpsl
sub
lea
pushf
lds
lods
shl
mov
sti
inc
adc
and
ret
and
out
mov
scas
jle
mov
lea
cltd
lret
ficoms
scas
stos
adc
cmp
cmpsb
daa
cmpsb
push
lock
aam
test
pop
mov
xchg
sub
mov
fsts
mov
inc
jecxz
daa
arpl
out
lds
negb
jns
into
add
testl
orb
in
adc
xchg
addr16
adc
shl
lds
pop
jp
call
sub
cmp
xchg
xchg
sarb
fstpt
sub
push
push
testb
pop
ret
mov
push
les
into
and
dec
adc
push
or
jbe
push
mov
jb
loop
cmp
lods
popa
jnp
movsl
aad
add
adc
push
mov
add
out
scas
repz
jo
cmpsl
out
mov
and
and
xchg
mov
in
int
pop
dec
je
loope
orl
imul
ja
imul
mov
imul
and
pop
jge
imul
mov
je
or
lods
dec
mov
push
pop
mov
cmp
into
add
mov
mov
imul
test
shl
inc
scas
cmp
or
mov
jge
rorb
iret
js
lret
ss
imul
dec
pop
lods
cmp
push
dec
jnp
lret
inc
xor
push
js
push
shlb
ja
add
lahf
push
cmpsl
fidivl
sbb
aaa
xor
ljmp
mov
inc
stos
mov
bound
xchg
jl
outsl
test
js
add
hlt
xchg
loop
call
out
in
and
sub
or
ret
in
ss
push
andl
lea
shlb
into
jbe
adc
cmp
dec
jb
in
xor
mov
mov
dec
enter
movsb
ret
enter
shrl
adc
mov
je
adc
gs
or
int
sbb
inc
aaa
mov
sbb
cmp
mov
push
lock
outsb
inc
xchg
lods
pop
xor
add
dec
mov
movsb
mov
and
fldcw
into
inc
jg
inc
adc
xor
lods
xchg
and
mov
jmp
jg
fs
aas
and
mov
test
mov
mov
cmp
lahf
dec
sub
daa
xchg
scas
jmp
lahf
stc
mov
mov
jne
jne
in
decl
jmp
push
sbb
sbb
fs
arpl
arpl
stos
and
push
sub
daa
popa
jne
imul
mov
mov
xchg
ret
sub
adc
repz
sbb
into
dec
or
fldenv
and
sbb
fwait
push
lea
xor
add
dec
or
and
xchg
dec
xchg
or
aam
je
scas
xchg
std
push
fisttps
inc
mov
sti
and
mov
cmp
mov
jp
cmp
push
pushf
addr16
mov
add
or
outsl
ds
xor
pop
mov
jge
pop
push
out
movsl
imul
mov
popf
sub
adcb
fnstsw
sub
aad
lret
xchg
and
xor
test
shlb
pop
insb
pop
cmp
test
mov
and
stos
fstpl
cmp
pushl
movsb
hlt
pop
rcl
xchg
xor
xchg
fnstenv
jl
cmpsb
adc
mov
pushf
fisttpll
or
cmp
icebp
mov
push
popa
pop
mov
mov
mov
and
out
mov
push
out
dec
add
mov
cmp
mov
inc
and
pop
jmp
jp
inc
out
dec
mov
out
fdivs
hlt
shlb
sbb
jmp
push
or
pushl
lods
imul
jnp
lods
jmp
jmp
pop
or
rcll
mov
pop
mov
mov
jl
push
imul
sub
fnstsw
xor
sbb
add
and
mov
sub
push
jne
les
mov
test
cmp
aam
ret
fdivl
sti
jmp
addr16
and
dec
mov
inc
push
jge
push
mov
das
arpl
inc
xchg
jb
mov
xchg
lcall
mov
pop
pop
cmpsb
push
cmp
xchg
shrb
popa
leave
or
jo
loope
jae
or
mov
xlat
adcb
add
jo,pn
jl
lret
xchg
das
xor
push
mov
mov
and
test
or
jne
cmpsb
ret
cmpsl
test
mov
loopne
stos
out
jmp
dec
test
fmul
arpl
jns
xor
mov
adc
cmpsl
jne,pt
daa
pop
ror
xor
jl
push
jge
es
mov
icebp
sub
or
adc
add
xchg
or
push
dec
add
ret
pusha
and
mov
xor
fcmovnb
loop
dec
and
in
repnz
or
testb
sub
jmp
scas
mov
add
scas
aaa
ds
xchg
leave
int3
sub
insb
mov
mov
pop
or
pop
add
fiadds
mov
mov
dec
push
int3
inc
mov
test
cmp
fwait
mov
cmp
mov
shlb
enter
mov
add
movaps
sub
dec
inc
stc
cmp
mov
in
mov
or
xchg
inc
mov
pop
jns
in
jb
jg
ljmp
pushf
adc
push
lds
mov
adc
mov
pop
pop
inc
cltd
shrb
loop
sub
lret
cwtl
inc
mov
cmpsl
dec
stc
repz
mov
jnp
imul
xchg
movsb
pusha
dec
movsb
mov
inc
gs
int
mov
mov
in
cld
xchg
or
push
lcall
loop
ds
xchg
inc
add
jnp
fisttpl
or
aam
pushf
mov
mov
mov
movsl
push
jmp
mov
insl
addb
test
iret
jno
out
sbb
pushf
inc
cltd
loope
test
jae
orb
loope
lods
movsl
adc
push
int3
ja
jo
scas
outsb
shll
orb
mov
insb
call
dec
stos
adc
mov
or
ss
push
adc
pushf
add
mov
leave
stos
inc
aas
daa
pop
jmp
lret
inc
mov
pop
sti
mov
mov
mov
popa
lods
inc
shrl
xor
mov
adc
dec
inc
into
cmp
cmpl
jp
mov
jmp
loope
push
or
pop
sub
push
mov
pop
lcall
popa
es
xor
or
out
mov
push
outsl
in
jbe
lods
push
xlat
inc
shlb
pop
into
push
xchg
dec
into
out
je
cmp
add
bound
mov
loop
rolb
stc
enter
cltd
fstpl
mov
inc
mov
imul
inc
adc
mov
xlat
outsl
movsl
sbbb
xchg
push
mov
imul
jle
dec
int3
adc
cwtl
aad
jge
mov
lods
pop
sbb
sub
sbb
xchg
pop
and
dec
sbb
push
fs
insb
jle
leave
jae
repnz
dec
scas
fsubr
sub
push
jnp
andb
and
shrl
bound
jno
adc
imul
mov
hlt
pop
fs
ret
call
pop
popf
sarb
mov
sbb
mov
jb
jp
sarl
mov
and
pop
stc
inc
sub
xchg
inc
sub
rcr
pop
aam
mov
dec
push
jne
enter
cmpsb
aam
popa
lods
outsb
sub
nop
dec
or
sub
mov
push
arpl
cmp
shlb
imul
enter
pop
sarw
dec
dec
mov
xlat
lods
xor
and
insb
fisttpll
movsl
push
xor
xor
add
sbb
enter
inc
aad
or
in
and
leave
hlt
test
inc
sub
dec
roll
jecxz
cld
sbb
pop
mov
jecxz
test
rcl
shrb
sbb
jp
cli
mov
ss
xchg
loope
into
and
push
mov
imull
shrl
std
mov
push
stos
and
jbe
sub
mov
pop
stos
in
fwait
cmc
shll
dec
inc
jmp
push
pop
inc
rorb
movsl
test
arpl
jbe
jns
jno
out
xchg
xchg
adcb
movsl
dec
inc
cwtl
fwait
mov
cmp
ja
shll
adc
dec
sub
mov
sub
or
jne
xchg
add
outsl
mov
roll
and
or
stos
aam
mov
adc
sahf
scas
bound
push
mov
sbb
pop
cli
loop
mov
je
fcomps
or
push
std
inc
fld
incb
xchg
push
das
or
movl
out
jl
in
dec
shl
lods
cmp
sbb
nopl
test
dec
icebp
out
jl
inc
test
xchg
add
fdivrl
out
inc
inc
add
fbstp
adc
xchg
scas
test
pop
mov
repz
dec
mov
adc
pushf
adc
adc
xchg
push
mov
sarl
jge
ficompl
jmp
repnz
ret
hlt
mov
inc
mov
aad
icebp
mov
repz
and
mov
dec
sub
aad
pop
mov
xchg
mov
dec
sbb
arpl
lock
cwtl
dec
out
test
lds
push
mov
call
dec
push
ds
cmpsb
test
call
jg
enter
lahf
into
in
jno
repnz
jp
jno
cli
rol
aad
jno
mov
lds
out
cmc
mov
jnp
ds
mov
iret
xchg
fistpll
jae
jo
inc
adc
add
inc
roll
sub
je
je
jge
in
pop
into
and
ss
jl
pop
movsb
scas
dec
push
mov
imull
jg
push
dec
addr16
repz
mov
push
ret
pop
rcrb
and
orl
and
add
xchg
adc
ss
fisttps
jae
jg
insl
mov
jl
xlat
cmp
out
outsl
pop
xchg
int
andb
pushf
or
inc
std
lahf
cs
outsb
pop
lds
fnstenv
lcall
cli
pop
cmp
icebp
mov
bound
gs
sbb
inc
push
xchg
mov
enter
out
mov
icebp
lahf
aad
fistps
imul
jp
xor
pop
push
movlps
dec
out
aas
push
loop
xchg
inc
mov
jg
adc
cmp
test
outsl
sbb
stc
mov
and
cmc
xchg
jecxz
and
xor
call
jae
xchg
insl
dec
push
add
mov
mov
jbe
jecxz
hlt
xchg
es
dec
sub
sbb
mov
insb
repnz
mov
jl
sub
cmp
push
push
leave
mov
mov
insb
push
pushf
sub
daa
cs
in
pushf
xchg
mov
jp
add
dec
leave
pop
xchg
adc
ds
popw
pop
dec
ja
sbb
test
push
sbb
mov
or
xor
or
mov
jnp
or
out
and
movsb
jns
data16
clc
adc
and
mov
fwait
int3
xor
xor
mov
push
push
notb
jns
xchg
testb
daa
push
lods
test
loopne
jo
push
and
xchg
mov
push
adc
int
inc
dec
or
mov
insl
adc
inc
xchg
ss
push
or
shll
jg
addl
or
and
push
mov
sub
lret
iret
fisttps
inc
adc
cmpsl
ficomps
imul
lea
cmpsl
mov
in
mov
cmp
mov
mov
push
jmp
dec
pop
and
cltd
sbb
aas
test
xor
xchg
xlat
es
pushf
sub
ss
out
in
adc
dec
lahf
adc
outsb
or
shll
subl
testb
pop
test
cmp
lahf
lahf
lds
stos
lea
ss
inc
aam
add
cmpl
jle
mov
jg
cmp
adc
push
out
das
jne
fsubs
lahf
xchg
pop
fstps
cli
pop
jle
mov
cmp
daa
mov
ds
add
and
popf
addl
push
sbb
in
add
frstor
jno
jecxz
mov
je
icebp
std
outsl
xor
mov
insl
enter
icebp
cmc
notl
ss
adc
adc
inc
leave
inc
sub
mov
adc
dec
pop
xorb
jge
jno,pt
dec
hlt
stos
jg
insl
add
mov
push
insb
jecxz
jne
jle
lods
push
popa
mov
and
fldl
sbb
cmpsb
or
xor
imull
repz
mov
icebp
cmp
filds
inc
cmp
xchg
cwtl
bound
mov
sbb
add
jl
sarb
ficoml
in
mov
loope
test
dec
pop
jae
jno,pn
inc
enter
iret
inc
dec
mov
dec
std
out
pusha
in
mul
call
cmpsb
or
dec
add
xorb
cmp
lret
lods
out
or
add
jp
xchg
mov
xchg
call
loop
inc
mull
add
sahf
add
aas
inc
mov
adc
adc
xchg
jb
push
jbe
pop
lods
scas
sub
push
insb
or
andl
clc
and
movsl
test
and
stos
shll
and
scas
adc
dec
sarb
jbe,pn
loopne
lahf
mov
in
xor
mov
sbb
sub
ljmp
dec
cmpsb
xor
add
ficompl
jmp
dec
lods
mov
loop
sbb
xor
cwtl
dec
repnz
sbb
outsb
inc
xor
nop
sub
lcall
jnp
mov
pop
test
dec
int3
or
mov
gs
mov
xchg
sub
jp
cltd
pop
cmp
pop
je
movsl
add
ja
mov
shlb
pop
cmp
das
scas
in
mov
inc
pop
sbb
cwtl
sub
xor
int3
ret
xor
aas
lret
xchg
insb
cli
leave
pop
loopne
shrl
adc
sbb
inc
shr
mov
jle
or
inc
and
xchg
jmp
cmp
cmp
jl
inc
ret
jmp
mov
out
and
pop
movsb
adc
mov
mov
js
jo
out
sti
pop
push
and
pop
shlb
mov
js
subl
test
pop
mov
dec
xchg
mov
loopne
adc
sbb
lcallw
movsb
ficomps
xor
mov
aas
cmp
addb
ds
ds
loop
or
add
nop
pop
in
clc
sub
inc
xchg
bound
loopne
mov
aaa
lret
sub
shll
ficoms
xor
outsb
jae
std
mov
lret
shrl
popf
pop
fnstcw
inc
xor
xchg
xchg
outsl
pop
mov
out
or
fsubl
test
jle
push
push
mov
push
or
push
lods
jl
mov
mov
adc
add
push
std
lods
dec
push
cmp
jne,pn
dec
mov
sarb
jne
add
hlt
jae
and
cmp
xchg
sub
mov
xchg
pop
pop
pushf
dec
loop
cld
lds
jg
lods
push
nop
fcoms
cld
jb
jmp
movsb
inc
daa
in
rorb
push
sbb
adc
dec
mov
out
cmp
inc
js
sahf
fs
mov
jnp
dec
int
mov
sub
add
xchg
loope
lods
test
sahf
imul
mov
mov
inc
cmpsb
lret
clc
ds
cmpsl
pop
fstl
in
push
rcr
cs
ret
or
cmpsb
scas
xchg
push
dec
push
rcl
sarb
mov
or
sbbb
sub
sub
insb
adc
xor
push
cmpsb
pop
pop
int
psllq
mov
mov
mov
mov
mov
repnz
inc
fmuls
adc
cmp
mov
jl
sbb
sbb
nop
inc
andl
sbbb
push
cwtl
faddl
or
mov
addb
pop
sbb
inc
or
cwtl
cmc
mov
jb
jmp
sub
in
daa
add
mov
popf
rol
icebp
hlt
pop
xchg
add
loopne
add
dec
adc
ret
jns
mov
idiv
sbb
cs
pop
xchg
lret
ljmp
sbb
fld
or
aas
loopne
xchg
fcomi
mov
loop
ja
divl
clc
adc
in
test
jne
fbld
cmp
mov
jecxz
cmp
cmp
fimuls
cmpsl
fbstp
outsl
cmp
jae
add
xor
into
sub
and
sbb
cwtl
fnsave
inc
jg
xor
mov
push
mov
fwait
jle
push
fstp
inc
loope,pt
imul
add
in
push
daa
jno
add
repz
jae
aaa
arpl
push
addl
icebp
xor
mov
jbe
mov
and
aam
sub
and
jne
mov
sbb
add
add
push
insb
fisubl
sub
test
and
mov
xchg
jl
sti
negb
jno
je
in
movsb
fsubrs
jmp
xor
inc
pop
lea
cltd
cmp
xor
out
xor
sbb
neg
mov
or
jmp
pop
je
jns
or
out
es
pop
sub
enter
xlat
loop
cmp
pop
out
mov
mov
add
lods
sub
jb
ret
test
mov
cld
je
cmp
popa
xchg
hlt
pop
dec
in
sbb
xor
pop
divl
mov
clc
mov
xchg
and
mov
outsl
inc
lcall
inc
push
add
xchg
mov
or
ret
jecxz
jbe
lret
mov
lods
jecxz
lret
adc
sub
dec
sbb
mov
ja
xchg
or
mov
cmp
shlb
xor
mov
mov
xchg
mov
cmp
nop
pop
push
inc
bound
ret
adc
in
stc
lock
in
inc
xor
dec
xchg
pop
add
push
movsb
lds
cmp
push
mov
out
outsl
jge
jecxz
arpl
out
in
stc
cmp
js
sti
ror
push
adc
es
loope
xchg
xchg
jg
mov
jp
out
mov
mov
andl
test
mov
mov
pop
mov
roll
push
stos
push
mov
mov
sub
adc
pop
arpl
jns
out
mov
out
dec
xlat
mov
xor
bound
mov
loopne
pop
xlat
aad
loopne
popa
fcmovbe
das
fisubl
clc
inc
lea
in
xlat
cmpsl
mov
iret
inc
ss
scas
fstpl
xchg
xchg
ds
ret
inc
adc
mov
push
push
push
fcomps
adc
mov
out
fdivrs
in
mov
pop
cmp
ret
orb
test
dec
push
mov
nop
pop
lds
pop
test
lahf
xor
adc
push
cmpb
mov
mov
sbb
scas
or
mov
call
popa
mov
pop
test
mov
xor
negb
push
and
sbb
xchg
outsb
sub
sahf
lret
js
push
ret
xor
mov
and
mov
jp
and
xchg
sub
outsb
pop
or
jnp
aad
in
mov
popa
fcmovu
ffreep
sarb
outsl
mov
nop
xchg
cmp
push
sbb
in
xor
dec
pushf
lahf
test
popf
dec
sbb
add
int
mov
popa
pop
push
rcl
xchg
mov
xorl
shll
and
or
and
ja
xchg
sbb
shl
dec
std
inc
orb
fildl
in
mov
repnz
dec
jbe
mov
sbb
aaa
cmpl
dec
lcall
addr16
lcall
mov
xlat
in
mov
and
inc
das
push
cmp
setb
xor
jno
pop
xor
mov
maskmovq
testl
add
jle
stos
adcl
in
hlt
lret
push
movsl
cs
iret
stos
lcall
cwtl
movsl
lahf
sub
ja
mov
sub
fstpt
xor
scas
dec
in
mov
cmc
bound
mov
and
shl
xchg
jbe
dec
mov
sbb
add
add
sub
add
stos
xor
fwait
jne
or
push
and
inc
push
dec
pop
addr16
mov
push
shrb
adc
call
pop
inc
sbb
inc
push
ret
insb
stos
mov
xlat
xlat
insl
and
sub
jne
inc
xor
cmp
inc
rcll
cli
out
repnz
outsb
in
aaa
out
pop
sub
sahf
call
scas
pop
sub
push
fimull
pushf
mov
out
xor
pop
push
repz
repnz
xchg
cltd
jbe
leave
dec
cmpsb
xor
into
and
pop
ficompl
insl
lock
mov
outsb
movsb
mov
xor
test
into
pop
jb
xor
push
push
cmpsb
inc
jl
push
dec
inc
push
jl
lods
fisttpl
ljmp
mov
popa
lahf
shlb
sbb
pop
xor
lock
jle
mov
lds
mov
xor
adc
movsl
in
negl
mov
cmp
outsb
call
ret
sub
push
dec
popa
leave
inc
mov
inc
repz
pop
xchg
pushf
and
outsl
out
jo
or
mov
mov
iret
jmp
mov
out
ljmp
dec
and
lods
push
shll
imul
cbtw
aam
mov
jp
mov
cmpsb
mov
sub
ret
mov
lea
sub
mov
mov
mov
jle
cwtl
dec
pop
fiadds
aam
adc
or
or
test
cmc
add
out
stos
insb
sbb
hlt
xchg
jp
pop
rorb
and
iret
daa
jne
cmp
mov
shll
cmpb
out
pop
mov
inc
push
add
xchg
xlat
mov
imul
cmpsb
adc
or
roll
mov
orl
int3
xchg
cbtw
lcall
push
fwait
sbb
lahf
fisttps
ds
push
jge
jne
xchg
jae
and
test
mov
jbe
adc
jmp
pop
js
rcrl
dec
in
repnz
lock
fdivs
mov
popa
bnd
sub
out
ds
pop
stos
mov
inc
jecxz
push
push
pop
mov
jo
insl
das
shrl
and
lods
test
lcall
das
jnp
aad
sbb
mov
jnp
mov
and
jp
cwtl
pop
sbb
mov
outsl
push
dec
test
xor
out
pop
repnz
jb
call
ret
pop
pusha
ds
xor
pop
xchg
mov
mov
xchg
decl
mov
mov
sub
and
inc
xor
pop
dec
xor
hlt
add
dec
cmpsb
xorb
sub
std
mov
addr16
pusha
sbb
inc
or
stos
dec
xchg
cltd
nop
xor
movsb
js
outsb
mov
jae
scas
inc
cwtl
pop
and
pushf
lods
in
mov
in
cmp
aad
push
cmp
and
mov
mov
loop
ret
dec
xor
dec
jmp
mov
scas
push
clc
xchg
add
push
cs
aas
push
pop
xor
outsb
mov
mov
dec
xchg
mov
pop
rclb
dec
enter
cmc
dec
pop
dec
jo,pn
out
mov
xor
imul
sub
mov
js
fldenv
mov
roll
mov
popa
jbe
lock
mov
inc
testl
xchg
sub
adc
roll
cwtl
add
and
jno
mov
xlat
push
mov
adc
ss
std
sbb
xchg
cmp
iret
dec
or
das
jns
lds
out
jle
mov
and
sub
fisttpll
repz
ja
rcr
xchg
ret
dec
lcall
bound
aas
cmpsb
jne
iret
lea
or
adc
into
enter
xor
push
jnp
mov
mov
mov
push
jae
cmp
sarl
fldcw
incl
cmp
aaa
dec
daa
cmp
adc
add
into
adc
jecxz
ss
cmp
jp
out
jae
dec
inc
in
aaa
fistpll
movb
dec
add
or
jle
dec
inc
lahf
xchg
xchg
inc
xchg
repz
mov
push
mov
loopne
push
sarb
int
lock
mov
rolb
sbb
pop
cmpsb
mov
icebp
rolb
push
sub
inc
test
mov
mov
or
sbb
inc
add
bound
call
dec
and
inc
and
int3
loope
in
xchg
mov
fwait
andb
ret
push
sbb
mov
xor
jb
pop
xor
push
int3
sarl
lcall
pop
jo
in
test
inc
sbb
out
nop
jge
lods
pop
nop
cmp
and
loop
jb
das
or
nop
or
test
into
cmp
ret
pop
insl
sti
mov
push
mov
addl
in
sbb
popl
jmp
sti
test
pop
xor
mov
lods
rep
addr16
cmp
lea
or
pop
push
pop
lret
xor
test
xchg
cmp
push
sti
ret
pop
shl
mov
xor
fidivrl
mov
dec
daa
mov
lds
pop
mov
mov
cmpl
dec
in
sub
mov
jecxz
out
into
stc
jo
and
mov
sub
aaa
push
sbb
xor
insb
cmp
imull
cli
mov
sarl
popa
inc
cmpsl
jg
xchg
test
mov
in
je
jmp
dec
loopne
ret
sbb
cmpsl
mov
stc
scas
mov
sub
int
mov
pop
adc
sbb
cmc
in
xlat
cmp
jmp
mov
mov
sahf
add
jne
fs
push
and
sti
push
mov
and
rorb
mov
rolb
mov
mov
cmp
sub
jge
aad
orb
fs
divb
and
outsl
add
push
add
pop
fdivs
push
jbe
xchg
call
inc
mulb
shlb
aam
sti
hlt
popf
dec
popf
clc
fs
pop
xor
pop
cmp
repnz
test
xor
in
add
lods
xlat
loop
lods
push
adc
mov
es
jmp
int
xchg
divb
add
adc
sub
dec
jg
xorl
fst
xor
aaa
ret
cmp
adc
out
cltd
mov
aas
outsl
add
sbb
cmp
jb
das
ret
and
and
jb
cmpsb
ret
mov
pop
xor
mov
or
loope
mulb
in
mov
mov
mov
jne
push
add
xchg
mov
int3
movsl
sub
stc
in
push
dec
shlb
fsubp
xor
push
mov
lret
fmuls
jns
sub
in
inc
pop
inc
lods
mov
pop
cltd
xchg
adc
fwait
mov
data16
mov
mov
fsubrl
test
cmp
enter
dec
or
inc
outsb
out
jne
stos
fistl
cmpsb
lds
popf
adcl
out
adc
jno
sarl
ljmp
pop
fwait
daa
fnstcw
xchg
mov
loopne
inc
rcrw
fldenv
sub
fsubl
jmp
jl
jge
in
inc
push
out
jmp
xlat
mov
xchg
cmp
add
scas
sub
popa
and
stos
out
jae
push
fldcw
in
mov
lock
dec
inc
dec
xor
out
out
and
into
js
lahf
out
sub
loopne
in
inc
cmp
push
and
inc
inc
rcr
xchg
in
arpl
pop
je
mov
push
sub
cmp
ja
imul
fistpll
ljmp
adc
push
cmc
jbe
cli
mov
sti
je
pop
mov
or
into
fsubp
sub
inc
mov
mov
pop
adc
add
push
jnp
cmp
test
jb
fsubr
mov
adc
pusha
fs
and
mov
mov
mov
nop
cmp
push
push
jbe
fmull
sbb
xchg
test
mov
xchg
ds
and
push
jle
in
mov
jns
pop
loope
push
lahf
es
and
repz
sbb
and
fdivr
lret
xor
ret
sbb
pushf
test
outsb
bound
or
xor
or
xchg
out
sub
lods
fcmovnbe
or
cmp
xchg
test
imul
adcb
ljmp
mov
adc
or
push
cmp
xor
adc
cmpsb
inc
aad
fildl
xor
mov
mov
and
inc
and
enter
and
mov
fistpl
test
add
sub
lods
xchg
inc
jecxz
lds
push
add
pop
nop
cmpsl
imul
mov
orl
daa
call
mov
and
dec
fcmovne
std
inc
lahf
test
sbb
or
dec
sub
outsb
mov
sub
pop
jmp
push
movsl
popf
inc
lea
inc
repnz
shlb
push
mov
in
or
mov
aad
and
dec
pop
pushw
icebp
je
test
mov
call
loop
pop
repnz
push
inc
adc
sbb
arpl
je
fs
insl
inc
sub
adc
sub
icebp
pop
dec
and
aad
mov
jl
inc
dec
sahf
xor
stc
dec
loop
cwtl
adc
adc
insl
out
sbb
fs
or
ret
sub
stc
mov
mov
add
pushf
lods
pop
pop
jns
mov
es
mov
mov
pop
leave
shlb
or
mov
sbb
into
jb
sarl
or
rcrb
add
pop
xchg
loopne
cmovnp
sub
or
cmp
or
mov
mov
cwtl
xchg
hlt
mov
ja
jmp
inc
adc
push
mov
scas
cmpsl
pop
fs
mov
mov
cmpsl
sub
outsb
pop
fldl
loop
mov
in
dec
icebp
jo
data16
int
adc
jo
lods
cmp
lcall
pop
and
ficoml
jne
mov
fmulp
lret
jns
out
cmp
jecxz
leave
arpl
out
push
call
aad
push
adc
fstp
inc
mov
pop
mov
cli
adc
adc
and
push
add
xchg
repnz
cmp
ret
cmp
pop
mov
xor
add
sub
sbb
add
and
mov
fcompl
or
jp
fiaddl
enter
std
mov
push
dec
sbb
js
sub
pop
fdivl
sub
push
les
pop
pop
pop
cmp
dec
leave
xor
mov
aam
repz
dec
movsl
add
adc
mov
std
leave
cltd
sbbl
cmp
das
adc
imul
mov
mov
dec
daa
xchg
stos
and
jbe
loope
cltd
sub
outsb
test
pop
shll
rorl
sbb
fwait
pop
insl
ds
ja
insl
sbb
sbb
xchg
push
dec
ret
stc
cmp
jb
jb
mov
push
mov
mov
pop
lds
sub
mov
pusha
inc
call
aaa
scas
lods
sbb
aad
lods
add
test
je
mov
inc
and
iret
adc
mov
push
imul
pop
mov
rcl
dec
add
push
pop
lds
rcr
lret
pop
xchg
icebp
sub
dec
add
sub
jmp
movsl
movsl
push
lods
inc
jno
xchg
cld
repnz
aas
xchg
mov
sbb
scas
push
add
rorl
jns
jge
cmp
mov
fldcw
ljmp
dec
jg
das
mov
lret
inc
or
dec
js
inc
cmp
push
sbb
popf
push
cmp
sub
mov
sub
or
cmpsb
sbb
or
inc
repnz
xchg
call
adc
ljmp
fstl
pushl
mov
mov
mov
xorl
test
dec
in
mov
mov
or
lret
add
ror
xor
sarl
orb
popf
pop
pusha
sahf
xor
mov
out
xor
jg
inc
adc
dec
cltd
inc
loopne
inc
int3
and
xlat
rorb
sub
dec
dec
pop
test
aam
inc
mov
xchg
insb
pop
or
add
push
and
add
nop
jmp
adc
sbb
lahf
push
jge
xor
das
out
add
repnz
in
rcl
adc
fsubs
push
sub
and
loop
sbb
push
in
jne
stos
mov
jne
sub
lcall
imul
lcall
inc
inc
xor
jns
out
mov
cwtl
inc
mov
push
mov
jge
idivb
insl
xor
mov
pop
sub
jnp
mov
mov
pop
out
or
in
fcompl
js
sub
push
ss
push
scas
popa
sbb
cmp
mov
dec
dec
or
adc
add
adc
jo
pop
xlat
and
cld
jae
movsb
insb
cmp
pop
sub
call
dec
push
sub
mov
and
xchg
outsl
pop
xor
or
ror
mov
stc
nop
or
sub
icebp
les
and
dec
push
out
push
imul
add
mov
fsubs
ret
mov
in
in
push
test
cmp
jecxz
jmp
neg
mov
hlt
adc
rcrb
mov
out
fwait
repnz
outsl
sub
or
mov
add
jbe
inc
stos
sbb
ja
dec
mov
inc
cmp
test
pop
xrelease
outsb
les
shlb
sbb
mov
ret
aad
cmpsl
cmc
aam
sub
jmp
hlt
in
pop
or
lret
mov
int
fwait
add
punpcklwd
mov
or
mov
hlt
dec
out
mov
push
clc
call
stos
test
mov
call
sub
fwait
pusha
and
sbb
sbb
hlt
mov
mov
insb
subl
outsb
jno
fnstsw
in
imul
shlb
add
je
push
and
inc
mov
clc
js
pop
aaa
dec
jmp
inc
xor
lahf
cltd
jbe
pushl
xor
clc
xchg
ret
ja
dec
adc
pop
mov
sub
in
xchg
in
adc
cmp
or
xor
jae
cs
adc
les
shll
jo
inc
les
aam
and
sub
mov
sub
sbbb
xchg
mov
xchg
cld
push
fwait
inc
push
cli
jb
mov
sbb
pop
es
in
push
imul
xorb
mov
jle
or
icebp
popf
test
xchg
dec
jb
sbb
inc
mov
cmp
dec
push
fsubr
and
out
push
xchg
pop
mov
add
mov
popa
pop
stos
mov
push
jmp
int3
sti
xchg
pop
aam
testb
or
sub
xchg
mov
cmovns
or
push
inc
mov
inc
mov
pop
xor
fdivrl
jmp
mov
xchg
fsubp
loope
in
adc
std
scas
movsl
sbb
je
hlt
push
cmpsb
dec
fwait
dec
test
mov
adc
addr16
pop
cmpsb
mov
scas
pop
mov
div
stos
dec
or
push
add
ret
add
lret
daa
dec
lret
dec
test
scas
nop
loope
popa
decb
pop
mov
and
jecxz
sar
repz
or
fisubrl
outsb
pop
xor
mov
dec
jno
lret
push
add
stos
sub
rolb
outsb
inc
test
mov
mov
rol
cmp
xor
ss
inc
mov
fwait
imul
xchg
push
stc
in
std
add
or
xor
pop
cwtl
mov
mov
sahf
jle
adc
jl
sti
shrb
sub
lods
jmp
push
jge
jo
shlb
jle
sbb
mov
jp
dec
shr
fcompl
in
ljmp
push
pop
sub
fneni(8087
sbb
dec
pop
push
add
or
cmp
lret
mov
data16
stc
clc
pusha
mov
jp
and
sbb
dec
push
jno
xor
inc
dec
dec
jb
sbb
and
dec
mov
jecxz
jnp
sub
cli
cmpsl
push
dec
push
mov
inc
mov
js
roll
jl
xchg
and
jns
sub
cltd
sub
insb
negb
add
jb
mov
mov
pop
inc
enter
mov
ljmp
mov
inc
jle
pop
neg
jg
jg
es
jo
sbb
pop
idivl
fstpt
xchg
mov
cmp
in
je
lahf
rcll
inc
jl
cli
push
xor
ss
or
inc
push
add
arpl
pop
jecxz
adc
lock
aas
sahf
and
scas
test
xchg
sbb
cmp
lcall
mov
stos
cltd
lret
inc
out
inc
pop
mov
jae
pop
ret
popf
nop
ja
inc
in
aam
mov
andl
adc
inc
push
and
lock
push
xchg
jno
lcall
test
pop
jns
in
out
cld
and
push
sub
mov
fistl
jo
ds
inc
jmp
pushf
mov
adc
and
out
arpl
push
and
int3
mov
pop
and
fs
data16
insb
mov
or
jb
lods
fists
sti
push
jmp
cs
sarb
loopne
loopne
repnz
inc
mov
add
movsb
addr16
pusha
pop
mov
pop
adc
push
ret
sub
mov
insb
mov
ret
lds
call
cltd
mov
repnz
gs
std
int3
or
or
mov
add
arpl
inc
add
adc
jb
ret
dec
jecxz
add
xlat
lods
sub
cld
sahf
cmp
test
movsl
cmpl
xchg
sahf
jns
and
cmp
int3
clc
mov
mov
daa
mov
jb
jg
add
aaa
xor
rcl
ret
inc
cmpsl
push
pop
shll
leave
cmp
dec
int
mov
andl
xor
lods
cmc
xchg
bound
xor
cld
mov
cmp
push
negl
sub
fisubrl
dec
test
jle
aaa
cmp
insl
push
jo
mov
or
or
jae
out
loopne
and
jp
repz
shlb
add
or
movsb
lock
jns
mov
lret
je
popf
dec
sbb
lret
into
fnop
xor
push
das
add
xor
out
arpl
clc
xor
jle
ret
lcall
push
jl
fwait
subl
and
sub
inc
lds
mov
ret
jmp
adc
pop
das
push
cvtps2pi
push
je
out
push
stc
sub
inc
dec
cmp
adc
mov
jg
sbb
adc
adc
das
aaa
hlt
mov
aaa
cltd
dec
cs
pop
sbb
stos
fcompl
jg
xchg
imul
pop
cmpsl
adc
js
cltd
out
addr16
sub
inc
sub
test
push
ret
gs
inc
mov
int
out
std
cli
push
loopne
cmc
inc
add
mov
js
mov
stos
push
cmpsl
je
and
bound
inc
aad
dec
mov
pusha
dec
mul
movsl
lcall
pop
dec
enter
fcmove
popa
fwait
xor
cmp
xlat
out
mov
cld
shll
cmp
movsl
mov
daa
inc
in
pop
inc
inc
lret
stos
xchg
loope
push
rclb
ffreep
jle
nopl
push
mov
lret
inc
xchg
mov
rcl
out
mov
test
and
decb
roll
jl
mov
fwait
dec
sub
ret
orb
xchg
and
or
push
in
sub
negb
pop
push
shrl
hlt
int3
mov
jno
jl
std
insl
pop
jg
add
pop
mov
fsubrs
inc
movsb
pushf
adc
aad
je
daa
cmp
or
roll
div
mov
rcr
shl
pop
int3
push
addl
dec
stos
negb
pop
and
fucomip
test
cmovne
cwtl
rcr
pop
fwait
sbb
dec
sbb
inc
mov
jnp
mov
outsb
or
icebp
jg
push
les
cld
mov
iret
scas
xor
sbb
stc
std
aaa
and
or
mov
hlt
nop
sub
aaa
sbbb
test
popa
jle
divb
push
pop
shlb
mov
add
stos
movsb
xchg
in
sbb
cltd
test
mov
shlb
lret
push
cmp
cmp
ja
lret
add
lea
inc
cltd
sbb
out
sbb
jmp
pop
jns
add
adc
lcall
clc
mov
or
mov
popa
mov
jbe
jecxz
in
xor
mov
adc
enter
icebp
notl
mov
scas
and
add
scas
mov
punpcklwd
fsubrl
pop
hlt
inc
mov
notb
lock
iret
call
jp
pop
cli
lcall
cld
dec
cwtl
insb
fs
js
cmp
push
mov
lods
stos
xchg
ret
push
cmp
xor
loop
sbbb
inc
cmp
jbe
int3
fistps
dec
ficomps
ja
enter
xchg
jne
shrb
xor
mov
push
sub
scas
inc
adc
dec
ja
sub
enter
rcl
sub
jo
outsb
sub
ljmp
or
lea
cmpsl
setp
sub
jecxz
xchg
call
jns
and
push
insl
test
std
push
mov
repz
xlat
test
lods
pop
out
je
mov
faddl
push
mov
and
cli
mov
sub
imul
jb
mov
shll
decb
fldl
add
std
arpl
or
add
pusha
inc
sub
sub
add
add
push
and
mov
test
adc
movsb
or
test
mov
mov
in
cs
dec
pop
rcll
mov
ret
outsl
cmp
mov
fcmovb
std
aam
lret
pop
push
lret
in
jle
nop
push
cld
jae
dec
gs
cmpsb
clc
and
xchg
push
in
pop
js
dec
pop
call
scas
repnz
lods
daa
out
or
push
lds
in
xchg
nop
fidivs
and
test
mov
jg
arpl
imul
out
mov
lret
xchg
shrl
inc
cld
adc
adc
and
push
into
enter
jge
test
pop
dec
jg
cmp
jmp
icebp
mov
sub
shlb
or
adc
cmp
lahf
inc
mov
sbb
cmpsb
leave
dec
mov
lret
push
int
push
arpl
adc
mov
mov
pop
pop
push
xor
dec
sub
adc
push
fsubrp
sbb
mov
dec
cmp
or
insb
pop
push
xchg
xchg
ret
mov
adc
dec
fstpl
push
pop
es
inc
mov
data16
xchg
pop
mov
jnp
prefetchw
loope
sarl
jge
xchg
jno
inc
and
fs
jmp
inc
xchg
adc
aam
cmp
cltd
mov
sbb
xchg
lea
push
jns
push
test
mov
out
mov
pop
neg
enter
stc
icebp
cltd
pop
mov
ja
mov
fdivl
outsb
mov
push
mov
or
stc
cwtl
outsl
mov
push
shll
addr16
xchg
hlt
cs
pop
mov
insb
repnz
adc
stos
push
sub
lods
fcmovbe
cli
inc
adc
mov
adc
mov
mov
pop
xchg
jne
lcall
sub
or
sbb
sub
push
sub
sbb
dec
dec
movsl
out
bound
mov
mov
out
lcall
rclb
push
and
xchg
and
mov
pop
ss
mov
pop
add
stos
insb
negb
xchg
into
pop
and
cmp
mov
adc
jl
add
std
jl
sbb
jg
pop
lahf
or
inc
sub
aas
push
das
xchg
cli
jge
xor
jl
mov
pop
dec
jmp
hlt
push
push
rcrb
cmp
aad
mov
fiaddl
pop
mov
pop
push
or
xchg
sbbl
sub
js
loope
negb
hlt
mov
xchg
sub
pusha
cmp
scas
mov
xor
ljmp
sub
cmc
pop
sub
cmpsl
inc
stos
push
inc
ret
xchg
mov
or
or
inc
jl
pop
mov
pop
push
dec
xchg
sti
je
scas
xor
mov
rcr
mov
xchg
shrl
test
ret
in
or
sub
loopne
jbe
jns
mov
mov
and
mulb
rcll
aas
clc
dec
or
pop
sbb
dec
xchg
pop
push
or
das
js
rclb
addr16
outsl
in
push
outsb
push
rcll
insb
jne
inc
mov
imul
pop
inc
insb
cwtl
sub
fwait
pop
mov
cmc
lcall
icebp
loopne
and
add
adc
lahf
scas
mov
adc
icebp
pop
js
mov
jle
lods
jge
cmp
xor
inc
mov
mov
scas
movsb
shr
je
sub
mov
dec
push
adc
out
into
jle
into
push
int
cmp
lcall
xchg
xor
scas
jmp
lret
pusha
xchg
and
jge
add
jmp
push
xchg
inc
mov
stos
jl
mov
mov
pop
mov
clc
sbb
sub
inc
push
shr
out
push
mov
test
lods
cld
lahf
mov
cmp
cli
inc
stos
sbb
xor
cld
not
jns
lods
fisubrs
jns
mov
pop
jmp
sbb
pop
pop
clc
xor
hlt
test
pop
jbe
add
scas
sahf
jns
jl
sub
cmp
fcmovne
lret
push
test
inc
int
ja
test
popa
jmp
cmp
push
cltd
adc
push
xchg
or
out
add
push
xor
arpl
cltd
push
test
mov
sub
int
mov
mov
jg
insl
aad
sub
cmp
adcl
jp
iret
mov
gs
filds
jp
ds
mov
scas
fs
cmpsl
and
daa
shrb
jne
push
xchg
push
mov
xor
cmpsb
negb
and
scas
mov
adc
imulb
rcll
push
faddl
mov
adc
leave
lods
push
mov
andl
aaa
adc
es
ret
xlat
faddl
test
push
addr16
jmp
cmpsl
sub
mov
dec
fldcw
insl
enter
js
jnp
icebp
fldcw
jnp
adc
lds
pop
mov
scas
cli
xchg
adc
pop
in
mov
xchg
daa
push
xor
test
icebp
push
and
dec
sub
jne
pop
call
cmc
xor
push
push
test
ljmp
outsb
dec
xchg
repnz
xchg
popa
sbb
add
aam
jge
cmp
das
dec
ljmp
out
mov
aaa
cmp
cmp
xor
push
xchg
sbb
jmp
movsl
or
inc
into
inc
sub
in
xchg
adc
pop
or
inc
cmp
sbb
sbb
hlt
and
jmp
dec
xor
and
js
sbb
cmpsl
and
jge
sbb
in
je
sbb
sbb
clc
into
loop
pop
jmp
scas
cmp
pop
shll
add
push
push
fisttpl
or
cmc
pusha
scas
je,pt
mov
sbb
mov
cmpsb
ret
das
call
cld
xor
les
xchg
arpl
or
adc
lahf
nop
lds
in
mov
sub
call
xor
pop
fdivrl
shll
in
std
cmpsb
repnz
jns
push
out
sti
xchg
jne
xor
add
bound
loope
push
out
add
cmp
pop
out
into
pop
jmp
imul
push
inc
les
ffreep
aaa
xor
mov
pop
bound
mov
out
cmp
int3
mov
jb
sub
std
push
bound
mov
dec
dec
scas
push
inc
scas
les
or
jle
xorb
rorb
xchg
outsb
mov
pop
cmp
out
lret
lods
push
jo
push
mov
mov
mov
rorb
xor
rolb
and
cmp
fistpl
pushf
cmp
loopne
cmp
adc
adc
fidivrl
hlt
inc
pop
mov
mulb
push
cmp
out
push
pop
imulb
outsl
int
lret
push
jge
dec
dec
lret
push
stos
sbb
ja
test
jge
xor
xchg
mov
mov
jne
mov
and
inc
loopne
inc
out
mov
xchg
test
scas
aam
movsb
pop
fistpll
push
cmp
mov
insl
sbb
mov
idiv
pushf
mov
mov
xchg
test
mov
mov
rcrl
in
adcl
fimull
and
mov
sub
mov
leave
mov
mov
sub
xchg
mov
ja
aas
mov
and
sarl
inc
mov
mov
push
outsl
or
cltd
neg
fdivs
and
mov
jmp
aas
jno
push
scas
outsb
jne
and
jge
decb
lock
or
ljmp
scas
jb
and
mov
xchg
mov
add
mov
mov
loope
sub
sub
xor
aas
mov
jecxz
mov
mov
int3
pop
jae
xchg
aaa
dec
aad
lods
jbe
hlt
faddl
rclb
adc
call
jl
dec
out
shrb
loopne
dec
sub
mov
and
lret
ror
int
sar
aaa
sbb
dec
aaa
adc
mov
pusha
pop
in
out
cwtl
xchg
sbb
call
int3
sbb
sbb
frstor
je
jecxz
repnz
in
pop
cmp
xchg
jae
sub
jne
sbb
sub
data16
pop
loop
test
pop
adc
imul
in
add
shl
add
outsl
orb
fists
jne
jne
fdivrs
adc
fsubrs
rorb
pop
dec
dec
mov
adc
jecxz
test
cld
and
jae
fsubrs
pop
cmp
sub
fdivrs
ss
in
int
jmp
popa
xchg
insl
or
dec
and
stc
pop
mov
xlat
aam
hlt
pop
fmuls
add
jecxz
cmp
and
mov
mov
ja
adc
nop
jae
sbb
jmp
fwait
das
ja,pt
out
xchg
jae
sbbb
cli
jecxz
lock
sub
lds
mov
js
mov
jbe
jle
inc
mov
sub
mov
nop
or
pop
mov
cmpsb
push
cs
cmp
pop
icebp
loope
sub
sbb
sbb
push
mov
out
out
mov
popf
daa
imul
nop
jo
movsb
sub
cs
mov
ret
jmp
ret
add
jns
mov
fcoml
cmp
mov
mov
imul
push
dec
adc
sbb
push
xorb
adc
pop
fcomip
negb
push
fs
loope
pop
into
xlat
icebp
gs
mov
mov
fstpt
orl
cli
dec
in
xor
or
pop
sbb
ret
cmc
mov
cltd
push
icebp
sub
ljmp
daa
mov
sbb
repz
cmp
inc
mov
lahf
xor
addb
cmp
pop
mov
int
testb
pop
pop
testb
add
mov
loope
insl
stos
xchg
jmp
sti
add
pop
and
scas
jne
jmp
in
mov
and
or
in
push
jmp
sub
sub
jnp
lods
sub
xlat
iret
cmp
pop
mov
dec
in
sub
or
pop
add
ljmp
jae
in
cmp
mov
mov
lods
mov
in
scas
mov
dec
adc
ss
xchg
adc
aam
fmull
push
mov
push
jecxz
js
or
in
jne
adc
fs
iret
sub
jne
add
jno
inc
cmp
lretw
inc
inc
mov
dec
out
pop
pop
fisubl
fidivl
jp
aaa
mov
aam
popf
loope
fldt
ffreep
test
sarl
leave
inc
iret
dec
pop
out
cmp
add
cltd
test
out
cmp
out
and
icebp
inc
sub
inc
push
adc
sub
adc
in
loop
inc
xor
enter
aaa
outsb
fdivrl
lret
mov
cmp
scas
sub
fbld
stos
xchg
mov
xchg
rolb
dec
cmp
cmc
pop
popf
mov
shrl
pop
mov
mov
push
and
shrl
cmpsb
ja
jge
xchg
dec
xor
or
test
mov
idivb
push
or
test
cmp
sbb
stos
jge
imul
and
sub
repnz
jecxz
xor
imul
cmp
bt
clc
sub
dec
push
aaa
bnd
or
in
sti
loop
or
jns
or
add
push
pop
or
cli
rcrb
mov
mov
call
sub
mov
dec
add
xor
cmp
jo
in
add
jb
out
add
adc
shr
pop
sti
insb
lods
movsb
lcall
adc
hlt
sarb
push
int3
add
sbb
push
out
inc
andb
xchg
dec
test
push
mov
outsl
or
jg
ss
jmp
xchg
jle
pop
add
mov
xchg
xchg
mov
sbb
xchg
cmp
push
aad
lods
lods
popf
pop
rep
cmpb
ljmp
outsb
movsb
les
inc
xchg
push
add
jge
jg
es
fcom
mov
pop
sub
movsl
pushl
jae
push
ds
or
push
mov
and
scas
cmpsb
dec
xor
outsl
xor
icebp
push
rolb
in
push
xor
test
xchg
insl
stos
jns
sbb
addb
add
scas
dec
divb
and
sbb
mov
sbbb
dec
push
xchg
fisttpl
push
inc
rcll
or
lahf
call
jne
ja
jle
push
xor
imul
jo
adc
inc
jl
xor
pop
seta
ror
push
dec
pop
fwait
jmp
xchg
inc
pushf
sub
ljmp
bound
pusha
stc
adc
sbb
popf
adc
xorb
fidivl
push
push
shlb
and
inc
and
in
shll
roll
sbb
or
mov
packuswb
lahf
xchg
add
flds
es
test
movsb
jb
arpl
dec
jb
movb
jp
jmp
jg
push
and
add
icebp
movsl
jg
ds
lret
arpl
jbe
add
inc
mov
inc
pushf
push
stos
add
jbe
or
scas
mul
jnp
cmp
test
xchg
popa
or
mov
mov
roll
call
addr16
jmp
mov
in
stc
neg
fcmovu
iret
in
lahf
test
shlb
inc
aad
sbb
mov
jb
outsb
sarb
lods
lock
test
inc
ret
nop
push
xor
pop
dec
push
xor
movsl
hlt
rcrl
scas
or
pop
adcb
pop
cmp
and
sub
or
pop
pusha
add
sub
sub
pop
cld
adc
cmp
mov
lcall
call
es
and
addr16
rorl
mov
push
dec
cmpsl
out
loop
sbb
sahf
mov
out
push
scas
cli
mov
pop
fistl
in
fxch
mov
insl
sbb
dec
inc
cmpsb
mov
andb
fst
iret
outsl
mov
dec
push
loopne
sub
mov
movsl
repnz
je
mov
outsl
pop
movsl
cmp
fisubs
sub
lock
cwtl
movsb
push
outsl
xor
xchg
and
jl
sbb
mulps
or
out
xchg
cmc
mov
insl
data16
mov
mov
test
or
shll
jns
xchg
les
mov
ss
lds
xchg
mov
clc
imul
push
sahf
gs
push
imul
nop
mov
sahf
push
fisubs
outsb
cmp
cmp
js
add
add
mov
repz
imul
ret
inc
test
sub
into
sub
jecxz
nop
xor
shr
std
xor
or
fcoml
ret
mov
inc
add
push
adc
ja
cmp
pop
adc
jmp
shrb
outsl
dec
jle
jb
fdivl
imul
and
outsl
sbb
or
mov
mov
mov
stos
jno
xchg
push
gs
jns
mov
jmp
pop
imul
movsb
sub
and
iret
pop
push
aas
pusha
xchg
push
jmp
scas
fidivl
xor
push
cmp
xchg
imul
inc
orb
lea
outsb
adc
jl
fwait
and
jmp
mov
sub
int
movsl
insb
push
shll
mov
stc
mov
nop
cmp
andb
das
test
sub
lods
repz
jno
call
bswap
hlt
mov
xchg
inc
loope
pop
rep
xchg
adc
jl
jb
lods
sub
push
mov
lcall
sub
rorb
adc
mov
mov
lahf
gs
jno
cmpsl
call
pop
data16
aas
dec
mov
ret
and
ret
dec
mov
stc
mov
inc
in
sbb
sti
push
jecxz
adc
lret
sahf
or
test
sbb
lahf
cltd
popf
xor
shlb
outsl
arpl
inc
push
pop
or
sub
sub
dec
sbb
out
mov
xor
stos
mov
cmp
pop
or
push
mov
push
jbe
and
popa
pop
test
clc
xor
cmp
dec
shlb
rcl
hlt
and
imul
out
shrb
xchg
push
inc
stos
push
jge
out
test
pop
mov
cmp
jo
imul
or
dec
jecxz
btr
in
sbb
in
push
shll
outsb
jp
mov
or
add
loopne
dec
adc
inc
gs
mov
movl
xchg
stos
push
subl
cmpb
mov
pop
and
adcl
push
in
jo
lahf
jno
mov
mov
imul
bound
fistps
xchg
arpl
cmp
cmp
pop
xchg
ss
por
outsl
movsb
mov
addr16
sbb
pop
imul
addr16
sub
mov
xor
in
lds
sbbb
mov
sahf
and
mov
mov
pop
or
loopne
mov
xorb
mov
sub
lret
push
pushf
mov
hlt
les
stos
push
mov
sub
in
jae
inc
fimuls
mov
pop
lock
loopne
cmp
pop
popf
iret
cmp
xor
xchg
out
test
pop
push
loop
bound
cli
movsb
loop
iret
in
adc
jns
xor
xchg
inc
pop
xchg
add
insl
push
jl
lods
add
xlat
test
push
ret
cmp
mov
cmp
mov
sbb
aad
cmp
in
subl
or
mov
mov
dec
scas
orb
lea
push
inc
out
cmc
sub
cwtl
mov
cmpsb
call
dec
mov
neg
psadbw
aas
out
std
iret
int3
enter
lods
sti
or
and
repnz
ret
out
in
push
nop
loope
ror
sar
push
int
arpl
cmc
jns
lret
xchg
aaa
inc
out
cmpsl
jle
in
xchg
fadds
inc
and
loope
dec
mov
rcll
scas
xor
jb
jb
movsl
bound
fstpl
insl
adcl
les
jl
loope
imul
or
mov
shlb
jnp
jle
mov
fstl
push
push
mov
mov
scas
les
sbb
scas
xchg
mov
xchg
add
arpl
add
sub
std
sti
out
mov
push
stc
in
fbld
daa
or
sub
dec
aas
pop
mov
sahf
popa
loope
mov
rep
and
xchg
cmc
movsb
addr16
mov
inc
and
pop
jmp
dec
xchg
insl
aam
cmpsl
jle
inc
cmc
xchg
jb
mov
movsb
pop
jl
lods
in
sarl
orl
push
stos
pop
mov
dec
addl
int
cmc
ljmp
pusha
xchg
push
dec
pop
cmp
mov
cmp
mov
lret
fwait
pop
push
fidivrs
sub
lret
andl
cmpsl
insb
add
xor
ljmp
loope
je
lds
rolb
iret
movsb
shll
and
mov
adc
xchg
xor
sub
or
test
jae
push
sti
sub
xor
cmp
add
rcr
icebp
jns
mov
push
ds
mov
testl
loop
mov
adc
lods
xor
fisttpl
lahf
loope
push
out
repz
scas
jno
cmpsl
pushf
sahf
jp
xor
movsl
mov
clc
mov
cmpsl
sti
mov
idiv
inc
xchg
jne
mov
pop
lods
inc
add
cmp
xor
dec
hlt
cwtl
and
shrl
subb
push
xchg
or
push
sub
rcrl
xchg
dec
insb
fs
mov
dec
and
ret
inc
mov
into
inc
outsl
imul
pop
mov
inc
push
sbb
pop
mov
and
into
jae
push
push
jb
stos
mov
pop
clc
sub
ljmp
icebp
push
scas
jns
push
imulb
shlb
sarl
xchg
movsb
test
mov
repz
dec
mov
pop
xor
jecxz
sarl
sub
out
xchg
cmc
sbb
int
inc
inc
mov
test
push
xlat
jp
sub
add
and
scas
scas
mov
pop
fisubrl
xor
cld
mov
iret
insl
xor
scas
xor
pop
xchg
dec
adc
mov
popf
rcrb
sbb
push
repnz
add
nop
adc
mov
mov
pop
movsb
pop
mov
out
cli
mov
test
or
ret
and
jl
dec
xchg
in
lcall
mov
loop
lods
sbb
push
shrl
arpl
pop
in
lds
ljmp
sub
fwait
fs
jae
add
nop
mov
mov
sbb
repz
inc
xlat
xchg
in
call
xchg
sbb
repz
popf
xchg
vmread
cmp
inc
outsb
enter
leave
sub
je
js
adc
inc
fists
shl
dec
mov
pop
mov
outsl
xchg
mov
out
and
pop
xchg
shll
gs
je
out
unpckhps
pop
jne
mov
ret
jne
dec
cmp
das
aas
inc
cmp
add
add
lret
cmpsb
pop
sbb
xlat
fcoms
jae
mov
pop
dec
pop
pop
movsb
sbb
stc
and
jg
ds
pop
pop
mov
dec
lret
dec
cmc
and
dec
cld
sub
inc
jno
fs
test
cmpsl
movsb
flds
dec
mov
addr16
pop
cmpsl
hlt
call
xor
neg
or
les
fisttpl
push
sbb
cltd
or
popf
sub
call
loop
mov
insl
push
jb
mov
cmp
lods
mov
push
test
cmp
fwait
dec
loop
dec
jns
fwait
mov
daa
insl
ja
adc
fadds
mov
inc
in
cmpsb
sbb
push
push
xor
adc
lret
or
popa
or
cmpsb
mov
pop
stc
sbb
das
pop
mov
andl
pop
es
mov
loopne
mov
jl
mov
and
imul
add
negl
push
dec
lcall
mov
sbb
push
sub
push
push
mov
test
push
mov
shl
and
jns
add
mov
hlt
jle
rorb
lea
push
sar
inc
mov
fmuls
das
jg
mov
imul
imul
mov
stos
push
iret
pop
xchg
sahf
cmp
xor
adc
adc
sub
hlt
and
dec
pop
add
sbb
lret
jge
ret
cmp
mov
mov
mov
testl
mov
sti
jl
push
int
adc
add
js
test
pop
and
fldl
mov
xor
cltd
inc
fsts
lock
pop
mov
lret
fists
in
mov
sti
lret
dec
xchg
ds
testb
xchg
fnstcw
lock
push
dec
dec
leave
ss
pushf
mov
scas
xor
sarl
fcmovnu
jmp
in
test
les
in
and
jg
adc
cmp
pop
fcmovnbe
add
sbb
in
out
fwait
ret
jecxz
xchg
loopne
pop
fs
or
ds
cwtl
push
push
push
cmp
dec
iret
insb
das
xor
push
adc
movsb
xorb
insl
or
arpl
in
sbb
repnz
ss
add
add
je
shl
add
out
jb
stc
mov
das
mov
push
mov
daa
xlat
pop
jecxz
push
xorl
xor
xchg
mov
inc
sub
mov
enter
jns
sub
mov
sarl
and
lods
xor
xchg
xchg
xor
hlt
orb
push
addr16
cwtl
sbb
lcall
sarl
mov
fwait
clc
adc
daa
dec
lock
pop
cmc
xchg
movsb
and
into
dec
movsl
mov
punpcklbw
frstor
lea
jno
push
jmp
outsl
std
jl
jae
cmp
mov
sahf
mov
dec
lods
stos
ret
loopne
in
xchg
push
popa
stos
add
jbe
popa
call
shlb
or
mov
cmp
push
pop
sbb
mov
mov
dec
in
inc
call
insl
add
mov
fldt
sbb
mov
dec
loop
mov
xor
test
jb
pop
subb
cmpsl
xchg
cmp
fstl
outsb
jno
push
jo
or
mov
dec
shll
mov
fwait
push
scas
push
add
or
pop
rorb
aas
enter
push
jp
mov
fldl
mov
inc
nop
mov
xchg
push
repnz
mov
loope
fwait
push
ss
and
xchg
mov
stc
test
mov
das
xchg
cs
mov
popa
lea
add
push
lds
jge
jmp
pop
fucom
ret
jmp
pop
sub
xchg
and
pushf
sbb
daa
jae
jl
repnz
outsb
mov
jnp
in
fwait
enter
add
clc
daa
test
out
lea
cmp
dec
mov
mov
adc
lds
inc
inc
sub
push
addr16
cwtl
fnstsw
enter
cmp
sti
or
divl
and
sahf
dec
insb
xchg
cli
idivb
pop
mov
xor
hlt
and
mov
rol
add
outsl
in
repz
push
test
dec
mov
push
push
xchg
fs
lods
cmp
xor
pusha
or
xor
lods
sbb
xor
dec
je
clc
mov
and
pop
std
xchg
ja
cwtl
jb
mov
push
jno
in
mov
cmp
or
out
rcrb
add
dec
and
lcall
jle
dec
insb
arpl
push
or
and
push
es
cmp
mov
xchg
in
popa
mov
push
js
adc
nop
and
mov
jo
shl
or
lret
shl
jmp
add
push
and
inc
mov
fsts
pop
push
js
iret
mov
pop
orl
xchg
out
push
xor
test
loope
rcr
mov
mov
mov
movsl
mov
sub
jno
jbe
adc
shrb
shlb
jnp
jp
xchg
inc
mov
mov
or
cmova
xlat
mov
ret
xchg
sub
xor
mov
adc
inc
sub
and
inc
js
sub
cmc
shrb
or
ds
cmp
cmp
mov
aas
fs
sub
mov
sti
test
push
in
in
or
insl
imul
es
mov
adc
cmp
pop
in
je
or
cli
aas
lret
or
mov
sbb
fsts
cmc
inc
xor
xchg
sub
aam
ja
pushf
inc
jle
mov
lock
lods
jle
lret
or
inc
imul
scas
or
xor
and
dec
mov
push
insl
pop
or
push
rcrb
sub
je
or
shlb
ljmp
rorl
outsb
imul
add
and
pop
adcl
adc
lds
pop
aam
xchg
pop
inc
and
sti
cmp
repnz
popf
insb
es
iret
scas
addb
mov
xchg
jnp
jmp
jo
icebp
test
loop
outsl
xor
test
sbb
add
mov
cs
in
pop
xor
out
lret
sub
pop
outsb
jl
imul
or
mov
out
dec
mov
mov
add
push
orb
fmuls
in
xchg
out
out
add
and
mov
sub
mov
cmp
xchg
push
jp
stc
mov
leave
mov
outsl
stos
jg
adc
xor
out
or
sub
pop
xchg
call
sbb
mov
push
lahf
aaa
iret
lret
jmp
and
mov
sbb
xor
rcl
inc
nop
jbe
adc
add
add
addr16
push
sbb
in
movsb
fiadds
inc
sub
loop
xorl
jns
sbb
mul
pop
in
mov
sub
imul
jae
out
inc
sub
and
test
mov
ljmp
xchg
pop
lret
push
pop
pop
jne
jb
sub
dec
fstl
in
test
dec
in
ja
jle
cwtl
shlb
cli
mov
imul
or
adc
add
fsubs
scas
add
adc
or
mov
rorl
or
add
and
mov
push
lahf
mov
push
sbbb
push
mov
rcll
popa
inc
xor
inc
sbb
sarb
lahf
and
data16
cmp
loopne
in
push
inc
xchg
mov
or
int3
mov
xor
push
sub
lock
and
imull
pushf
jecxz
push
cmp
or
sub
or
mov
es
jo
mov
jo
pusha
mov
je
arpl
imul
arpl
mov
push
dec
in
hlt
mov
adc
sub
cmp
xor
adc
cmp
xor
js
mov
jnp
cs
leave
add
aas
lods
inc
sbb
xchg
dec
imul
mov
pop
mov
and
jno
add
mov
sahf
xchg
pop
jno
dec
loop
dec
xlat
pop
lods
dec
sub
dec
aam
data16
sub
and
xchg
roll
jnp
and
inc
adc
mov
inc
and
je
mov
jg
push
xor
insl
flds
push
sahf
push
jns
addr16
mov
stc
sub
outsl
clc
fldcw
aaa
pop
faddl
mov
shlb
mov
insl
popf
mov
xchg
pop
leave
loope
fisttps
push
test
movsl
jg
sbb
sub
cmp
sti
pop
jle
xchg
andb
pop
cs
rcrl
pop
push
popa
dec
mov
cmp
inc
dec
lds
pushf
sbb
in
shl
sub
xor
mov
out
dec
lods
lods
mov
pop
lds
out
push
ret
test
shll
cld
testb
out
pop
and
and
or
xchg
ds
mov
mov
xor
es
jp
or
mov
and
or
stos
jne
and
push
fwait
mov
fdivrs
sahf
dec
cmpl
test
test
add
pop
hlt
ss
cmp
cmp
leave
test
mov
inc
int
iret
outsl
jmp
pop
jno
adcl
xor
outsl
push
mov
je
add
pusha
cltd
aam
pop
xchg
sti
pop
pop
mov
adc
cmpsb
dec
pop
dec
cmpsl
aas
sub
es
enter
mov
mov
xor
stc
test
mov
into
mov
push
daa
sub
cltd
loop
shll
dec
int
aaa
jns
aam
or
pop
pop
in
stos
insl
sub
test
popa
or
cs
ret
insb
movsl
movsb
std
dec
iret
jno
cld
not
negl
push
mov
sub
inc
cs
fimull
sahf
scas
push
jecxz
ss
mov
sbb
pop
inc
mov
cmpsl
lods
sub
cs
cmp
mov
pusha
inc
hlt
pop
pushf
into
rclb
pop
pusha
dec
mov
add
jne
jp
ret
pop
insl
ljmp
cltd
je
mov
out
stos
movsl
ds
and
inc
sbb
stos
or
mov
sti
push
out
insb
imul
ds
in
sbb
sub
sbb
aas
int3
lret
sbb
mov
clc
dec
and
inc
stos
xchg
push
in
rorb
sbb
into
scas
mov
push
sbb
push
mov
jno
mov
mov
sbb
repnz
xchg
push
lret
ret
mov
sub
cmp
mov
into
ljmp
inc
lock
aam
xor
hlt
jb
jo
repnz
mov
std
getsec
mov
imul
mov
lods
sahf
ret
pop
gs
scas
loop
xchg
addb
and
fsubrs
adc
ljmp
pusha
negb
add
jae
xor
pusha
mov
ret
in
adc
test
push
std
out
dec
leave
xor
out
xchg
aad
pop
and
sti
into
je
call
adc
int
in
repz
xor
sbb
inc
cli
add
add
stc
in
int3
aad
scas
cmp
fildll
adc
imul
push
or
popl
test
test
lret
scas
pop
pop
mov
iret
in
fisubl
incl
test
test
pop
xchg
enter
ljmp
mov
aam
or
sub
les
sub
mov
sub
mov
xchg
pop
xor
insl
out
mov
int
sbbb
mov
jp
cmp
rclb
movb
stos
push
rcrl
inc
dec
inc
lret
ds
rcrb
fxch
adc
sub
jmp
xor
adc
mov
inc
mov
iret
mov
icebp
adc
test
pop
and
and
sbb
add
in
pusha
and
mov
xchg
xlat
mov
movsl
or
adc
push
out
mov
mov
ljmp
std
imul
test
shll
pop
incb
cmp
xchg
mov
aas
es
int
enter
sbb
push
ss
xor
pop
pop
call
scas
cltd
std
pusha
push
in
imul
and
sbbl
xchg
and
add
clc
xchg
xchg
call
inc
mov
mov
xchg
and
pushf
gs
rcrl
jp
or
or
arpl
rcrb
mov
pop
mov
or
xlat
cmp
fneni(8087
sbbb
sub
divb
in
jecxz
mov
or
int3
cmp
xlat
pushf
lods
push
lahf
fcmovnbe
addr16
inc
jecxz
xchg
jnp
fs
add
fiaddl
dec
sbb
sar
pop
sbbb
dec
cwtl
sbb
mov
pop
insb
ss
bound
push
lds
aam
enter
sbb
loopne
out
fnop
jae
dec
jge
xor
dec
daa
cmp
pop
std
mov
mov
je
pop
repnz
inc
movsl
sub
lods
out
jmp
popf
lret
test
xlat
lods
loopne
icebp
iret
sbb
xor
jmp
add
aad
adc
pop
sub
imul
in
push
pop
gs
aaa
enter
mov
lea
ss
pop
push
and
adc
aaa
inc
test
add
pop
out
daa
cmp
add
sti
and
inc
mov
sub
cli
sbb
testl
lods
add
mov
dec
inc
adc
fists
loopne
and
in
sub
jp
cli
sub
or
nop
push
cs
or
mov
mov
dec
mov
out
pop
mov
fisubs
inc
cld
ljmp
iret
out
loop
and
out
lret
adc
js
and
mov
add
adc
push
mov
mov
imul
movsb
cmpb
out
add
push
lods
out
or
test
clc
mov
mov
mov
pushf
adc
or
mov
sbb
in
cmpb
mov
jo
fst
int3
xchg
mov
hlt
test
push
dec
cld
in
es
dec
cwtl
aad
sti
inc
in
xchg
sbb
mov
orl
xchg
incl
test
lds
adc
cs
and
cmp
int3
add
jl
xchg
clc
sahf
test
jp
cmp
sbb
sub
dec
cmpsl
jns
or
cmp
jne
aad
bound
scas
out
out
stos
mov
fistpl
and
adc
sbb
xchg
mov
jae
adc
and
outsb
pop
mov
cmp
pop
lods
mov
jno
roll
pop
or
xor
sbb
jp
cmp
out
scas
dec
imul
xchg
aas
push
xchg
aaa
or
dec
movsb
outsl
xchg
std
sbb
mov
idivb
lds
jl
jl
xchg
outsl
icebp
sahf
add
jp
mov
sbb
and
pop
ret
movsb
jns
mov
lods
insb
dec
dec
mov
or
push
ret
mov
daa
mov
mov
lret
push
sbb
xor
cmpsb
rcr
js
test
pop
sub
mov
push
stc
popf
idivl
cmp
mov
add
pushf
xchg
jmp
jne
inc
negl
mov
push
pop
xchg
mov
mov
sti
sub
jl
mov
add
aaa
jp
mov
leave
or
sub
push
addl
mov
sbb
sbb
xlat
and
bound
xchg
movsb
loopne
sbb
or
sub
imul
xchg
enter
sbb
pop
lea
cwtl
push
jnp
outsb
push
stc
shlb
add
lock
insb
push
or
mov
hlt
pop
sub
jle
jo
jl
sahf
inc
mov
cwtl
je
test
mov
sub
dec
jg
cmp
pushf
xor
pop
jo
shlb
push
jno
das
mov
mov
add
call
push
cld
mov
cs
xlat
mov
lret
test
test
xor
push
mov
mov
inc
cmpsb
cmp
jle
jmp
push
sbb
mov
jmp
xchg
clc
dec
xchg
push
fwait
jo
out
push
adc
adc
dec
pop
sbbl
push
sub
adc
push
sub
pop
icebp
cmp
lret
jg
xor
cmp
cmp
cs
std
pop
das
add
mov
pop
mov
imul
imul
sub
cmp
sbb
sub
fidivs
int3
pop
les
bound
mov
outsl
push
pop
lahf
subb
mov
aad
and
lock
or
xor
jb
insl
mov
aaa
mov
sub
pop
std
mov
adc
aam
repz
pushw
mov
sbb
sti
icebp
in
jmp
fwait
sbb
lcall
and
inc
sub
sub
rolb
outsb
sti
cli
inc
inc
sbb
adc
lcall
push
xchg
pop
fdivrs
insl
or
mov
or
int3
pop
push
jbe
pop
inc
pop
add
adc
sub
imul
dec
icebp
mov
cmp
or
jp
pop
mov
cmp
push
dec
js
xchg
into
cwtl
mov
mov
scas
cmp
dec
xchg
push
decb
out
adc
icebp
inc
pop
insl
xchg
test
or
mov
cs
out
add
mov
xor
out
push
jae
in
pusha
xchg
in
in
or
shll
jb
lods
outsl
and
mov
add
add
fcomps
test
out
fcomp
adc
sti
fidivrl
push
cmp
cltd
dec
sahf
pusha
pop
add
push
dec
lods
or
xor
clc
jg
mov
dec
mov
test
pop
mov
test
xchg
sbb
fimuls
adc
lds
pusha
jb
mov
jnp,pt
mov
sub
fcompl
loop
or
std
jg
cwtl
pop
and
pop
xchg
push
jnp
sahf
and
and
test
sarl
add
mov
adc
std
xchg
and
fstl
mov
pop
stos
or
idivl
aam
adc
add
out
adc
mov
cmpsb
int
add
fwait
and
or
lock
nop
pop
out
pop
mov
xchg
mov
jnp
aad
mov
inc
lea
adc
hlt
and
test
and
pop
lods
hlt
sbbl
test
in
dec
or
dec
popf
lock
push
cmp
jg
add
or
dec
dec
pop
int3
jne
aad
sbb
lds
xor
fldt
ja
jno
adc
ja
inc
imul
aas
mov
add
sbb
clc
cs
push
scas
test
mov
shlb
pop
push
or
imul
xor
ret
mov
in
pop
fadds
rol
aaa
int3
mov
and
shlb
mov
mov
fs
adc
inc
lods
pop
mov
mov
sarl
cmpsb
or
xor
pop
sbb
imul
push
filds
xchg
repnz
repnz
shl
mov
jecxz
loope
pop
pop
sbb
pop
cwtl
jmp
repnz
cmc
aad
push
pop
xchg
fisubrl
rorl
jns
fstps
addr16
sti
and
push
test
aas
dec
js
mov
mov
js
rorb
test
or
sbb
sahf
mov
mov
gs
jl
cmp
cmc
dec
cmc
fisubrs
into
pop
sbb
pop
adcb
jg
pop
push
adc
sbb
int
fisubrl
mov
call
jbe
mov
jl
inc
cmp
cli
int3
mov
add
jg
es
mov
aam
sbb
or
popf
cli
dec
out
incl
je
js
mov
int3
call
or
adc
add
xor
scas
add
outsl
mov
pop
stc
xchg
dec
jo
lret
bound
jb
popf
xchg
inc
pop
mov
dec
pusha
mov
loop
stc
lcall
aam
shlb
mov
mov
lret
xor
jb
mov
xchg
or
xor
test
ret
stc
in
sahf
movsb
pop
mov
sub
inc
xchg
test
stc
add
or
stos
mov
mov
and
xchg
cmpsl
les
jp
mov
das
jb
xadd
bound
mov
xchg
mov
pushf
jne
mov
dec
out
fidivs
cmc
idivb
mov
mov
inc
arpl
cmpb
js
sub
cmp
shl
test
stos
inc
or
or
and
or
mov
lea
cmpsl
fs
aas
mov
gs
ss
sbb
sbb
aam
iret
repnz
mov
mull
dec
dec
push
jne
push
xor
fistpll
pop
xor
xor
mov
roll
mulb
pop
cltd
xorl
sbb
lahf
pop
movsl
push
addr16
fldenv
jbe
scas
cltd
mov
ljmp
dec
cmp
call
es
jne
cmc
jg
les
enter
psrad
aaa
sti
out
insl
stos
bound
out
xor
pop
fsts
cltd
roll
ss
push
stos
insb
inc
xor
notb
ret
mov
or
ja
out
sub
rcl
lock
int
out
dec
xchg
cmp
mov
mov
push
push
daa
outsb
sbb
mov
or
mov
xchg
push
dec
xor
jecxz
movsl
popa
add
or
and
adc
in
rolb
and
and
popl
xor
pop
int
xchg
cld
mov
cmp
imul
ja
dec
je
sbb
sub
cmp
fwait
sub
inc
sub
mov
jmp
test
popf
cmp
push
or
and
add
pushf
in
ds
out
inc
and
sub
fsubrs
and
pop
jp
jge
mov
and
jp
inc
adc
adc
popa
jb
jecxz
inc
push
cmp
push
imul
js
pop
pcmpeqb
stc
out
dec
stos
in
lods
jmp
mov
std
add
jle
es
je
or
cwtl
inc
scas
mov
cmp
outsb
push
data16
fs
xchg
add
addr16
inc
in
push
mov
outsl
rclb
add
js
mov
pop
push
mov
pop
mov
bound
jle
ja
lea
pushf
sbb
pop
xor
imul
shlb
xorl
aas
dec
sub
stos
xchg
push
mov
mov
sub
movsbl
fisubl
scas
inc
stos
aam
mov
xor
pushf
cmp
mov
inc
cmpsl
xchg
je
xchg
pushf
int
ror
mov
push
push
add
scas
into
and
cmp
movsb
xor
push
sarb
add
popf
add
out
and
adc
pusha
cmp
dec
mov
in
stos
push
nop
mov
test
fidivs
mov
adc
mov
fildl
sbb
xchg
push
mov
xor
adc
cmpsl
dec
lods
mov
cltd
mov
dec
fcoms
dec
adc
or
out
mov
ds
pop
dec
cmp
fsubl
js
cli
fs
add
ret
push
jmp
cmpl
dec
xor
mov
mov
dec
out
lret
mov
icebp
loopne
in
jp
cli
push
or
push
jae
pop
fcmovb
ss
mov
icebp
pop
mov
leave
jg
push
mov
je
pop
lock
xor
cmp
cltd
cmp
sahf
pop
mov
loop
rorl
daa
cmp
add
dec
fnsave
mov
cmp
aad
inc
mov
lahf
mov
mov
xor
int3
or
xchg
fcmovne
popa
je
add
xchg
jle
inc
inc
dec
xchg
or
adc
arpl
push
les
dec
mov
and
and
fcoml
and
cmc
es
imul
or
mov
hlt
ljmp
xchg
add
fmuls
pop
mov
xchg
addb
addr16
cmp
pushf
test
sub
or
cld
shr
aam
xor
data16
and
dec
pop
inc
push
clc
cli
dec
mov
lds
push
mov
push
and
dec
aam
jle
mov
ret
dec
jmp
push
ljmp
push
cwtl
mov
sub
lret
lcall
sbb
push
fisubrl
pusha
xchg
inc
and
push
aad
dec
push
jbe
pushf
roll
lea
sbb
movsb
dec
mov
sub
cmp
iret
push
adc
push
push
xor
push
push
pop
cmp
push
lods
and
stos
test
dec
mov
pushf
fadds
add
inc
xchg
or
fwait
mov
mov
xlat
push
jo
cltd
and
xor
lea
mov
add
insl
xchg
xchg
mov
lods
pop
cmp
or
test
xor
cmc
nop
inc
imul
aam
sbb
push
cmc
jecxz
lock
rolb
cmp
sbb
push
std
bound
jle
ss
loopne
inc
inc
daa
inc
movsb
jns
sub
jbe
mov
lods
outsb
push
sbb
mov
rolb
fsubl
xchg
or
sbbl
pushf
jae
sbbl
or
cld
call
sbb
dec
mov
dec
push
sub
daa
lods
sub
add
stos
add
xor
sbb
xor
dec
adc
out
ffreep
mov
xor
pop
out
ja
and
inc
idivb
jae
test
pop
loope
inc
add
cmp
js
test
out
or
ficompl
mov
std
push
loope
das
insb
js
enter
cmp
popa
outsb
jno
push
lds
mov
sub
pusha
out
aaa
xlat
repz
mov
fildl
cld
addr16
add
out
push
mov
lret
movsb
and
or
enter
rcrb
daa
pop
imul
data16
pop
shrl
jb
push
jns
test
inc
and
add
push
mov
push
push
adc
iret
adc
or
sbb
adc
aad
das
or
out
aaa
arpl
and
inc
push
xor
adc
dec
and
fcomi
arpl
clc
repnz
insl
outsl
xchg
stos
leave
push
jnp
xchg
mov
addb
cmc
aaa
inc
sub
out
or
fsubs
mov
and
adc
loop
js
mov
nop
mov
test
xchg
cwtl
inc
out
hlt
popa
repz
mov
xor
cld
push
sti
cmpsl
insl
subl
mov
lcall
inc
jle
ljmp
sub
pop
and
push
iret
or
loopne
pop
cmp
ds
inc
sub
fldcw
xchg
adc
push
dec
in
adc
jge
cmp
loope
repz
jg
clc
imul
stc
cmp
cld
loop
shlb
int
aad
mov
dec
in
stos
cmp
aam
push
fs
and
pop
aaa
jmp
lock
ja
lcall
or
dec
cmp
dec
data16
hlt
cmpsb
jo
push
pop
push
xor
cmp
pop
fadds
sub
xchg
or
movl
ljmp
out
ds
push
loopne
pop
push
jne
or
push
cmpsl
or
pop
movsl
repnz
jecxz
cmp
je
hlt
mov
xchg
cld
call
mov
ficompl
loop
enter
in
push
stos
or
fisttpll
leave
jp
movsl
cmp
ljmp
adc
bound
ljmp
sarb
call
jp
mov
xchg
test
cmp
ds
sub
xor
lret
xor
fisttpll
aam
ror
pop
mov
shll
inc
mov
mov
in
cld
cwtl
rorb
cmp
test
xchg
fmull
movsl
jbe
xchg
shll
inc
or
es
cmp
lcall
cmp
cmp
rcr
adc
jl
daa
xchg
add
cltd
mov
lahf
lock
cmc
mov
leave
mov
lea
stos
sbb
push
neg
mov
jo
and
out
std
es
cltd
std
icebp
call
rclb
loope
sbb
push
and
mov
or
jge
test
int3
shll
cmp
loopne,pt
and
jo
push
mov
or
pop
dec
mov
xchg
jne
clc
xchg
fadds
push
xor
and
and
jo
lods
gs
pop
sub
push
in
sbb
dec
stc
mov
icebp
sub
orb
loopne
push
adc
mov
popa
addr16
push
and
cmc
mov
cmp
sub
cli
js
fwait
data16
fistl
out
std
lahf
loop
pop
mov
pop
cld
fldt
jl
add
mov
inc
addr16
xchg
cmpsb
sbb
jp
jns
xchg
mov
xor
sub
loop
inc
adc
std
stos
jbe
loopne
cmp
mov
and
inc
enter
fucom
in
push
outsl
out
cs
mov
je
and
or
dec
inc
loope
rep
loop
inc
add
icebp
sub
pushf
cmp
xor
dec
fidivrs
cli
jp
enter
movsl
add
test
or
into
jbe
or
dec
cmp
repz
lahf
out
sub
lods
sbb
inc
sahf
push
or
cmp
and
rcrl
outsb
inc
sub
pusha
pop
sbb
push
js
lcall
lret
mov
mov
out
dec
cs
sbb
sbb
dec
jmp
jmp
addr16
es
cld
in
lahf
push
scas
daa
stos
mov
bound
jne
out
add
cmp
sbb
cmp
mov
pushf
into
hlt
mov
adc
divl
inc
push
push
movsl
push
sbb
xchg
sbb
mov
shlb
push
daa
idivl
push
adc
cmp
adc
xor
dec
mov
jp
mov
imul
icebp
push
jb
insb
rcll
jbe
jecxz
sbb
hlt
es
insl
loopne
push
inc
adc
pop
xor
mov
jne
aad
xchg
inc
xor
xchg
imul
clc
add
cs
sbb
mov
xor
fistpll
ret
scas
jge
aam
fisubrs
xchg
push
sub
js
add
adc
mull
mov
adc
or
cmp
rcr
nop
mov
push
lock
dec
movsl
lock
jns
or
out
push
and
push
fistps
sti
pushf
insl
add
adc
push
adc
pop
mov
xchg
mov
jg
pushf
xchg
push
dec
push
shr
sub
sbb
lds
adc
or
and
jbe
imul
and
mov
stc
or
decl
inc
ror
movl
pop
ja
pop
notl
xchg
pop
pop
inc
lock
mov
sbb
lret
or
ret
test
or
dec
pop
gs
jle
xchg
pop
xchg
pop
fildll
dec
mov
ds
adc
mov
mov
jle
mov
repz
pop
je
cmp
mull
std
lcall
test
inc
mov
jae
xchg
clc
lret
in
shl
add
mov
stc
mov
xor
mov
mov
mov
ret
mov
xor
sub
imul
dec
dec
mov
mov
pushf
ja
cmc
mov
cs
outsb
jbe
imul
push
loopne
add
push
mov
pop
fxch
sbb
add
cmp
repz
pop
inc
aaa
mov
cltd
mov
movsl
rorb
cmp
sub
push
cmp
and
ds
inc
jnp
dec
adc
dec
sti
dec
sub
das
mov
dec
idiv
sahf
mov
lods
xor
mov
cmp
inc
add
pop
outsl
sub
and
pop
cmpsl
xchg
mov
outsl
push
cmp
int3
loopne
scas
sbb
push
mov
sbb
pop
mov
and
xchg
push
in
out
cld
icebp
daa
add
mov
pop
call
jecxz
pop
jbe
insl
mov
dec
std
inc
or
cmp
aam
push
faddl
pop
or
xor
loopne
jmp
cmp
push
inc
lcall
dec
insb
fwait
test
loope
mov
out
push
xchg
inc
mov
out
fsubs
cmp
mov
scas
inc
add
xor
sbb
incb
or
icebp
sti
aad
sbb
dec
mov
lret
push
arpl
add
hlt
xchg
lds
cwtd
scas
inc
mov
movsl
popa
cwtl
mov
xor
pushf
jbe
sub
cmp
int3
xchg
sbb
lcall
test
or
sub
adcb
mov
scas
dec
in
mov
mov
push
adc
sub
es
clc
std
scas
inc
int3
mov
loop
xchg
into
cwtl
add
jl
dec
dec
push
mov
and
cli
xchg
dec
inc
xchg
mov
or
jb
mov
adc
sub
or
mov
xor
mov
add
mov
loop
push
outsb
aad
bswap
aaa
add
mov
xchg
push
stc
mov
shll
xor
in
jmp
bnd
scas
sbb
jno
icebp
sarl
daa
inc
sar
jecxz
andb
mov
push
and
addr16
pop
sub
cmpsb
jle
aaa
dec
scas
das
mov
mov
rcr
iret
dec
mov
dec
mov
adc
lcall
pop
fsubrl
dec
out
dec
pusha
popa
jmp
fucompp
cmpl
push
test
adc
bound
xchg
rorl
shlb
es
dec
lods
jg
and
loope
pusha
jae
mov
das
inc
pushl
xor
ljmp
and
xchg
pop
js
add
fildll
adc
or
xchg
test
push
sub
movsb
out
scas
pop
or
ss
mov
inc
dec
ret
cmp
inc
test
xorb
inc
orl
push
mov
or
inc
insl
gs
xchg
add
lret
repz
and
xor
fcoml
lds
and
inc
mov
hlt
ja
xchg
jne
sbb
or
mov
add
sbb
mov
call
aaa
adc
imul
sahf
dec
fwait
mov
xor
fisubrs
in
lcall
or
outsl
ds
pusha
es
int
call
mov
pushf
ficomps
sbb
movsb
ss
repnz
mov
mov
pop
add
lcall
dec
mov
pop
popf
daa
out
test
mov
pop
fdivs
mov
xlat
into
pop
mov
push
add
aam
addl
xor
xchg
pop
xchg
rorb
push
sub
cmp
xchg
jmp
cmp
out
jo
test
mov
xchg
push
mov
aaa
in
xchg
bound
mov
mov
push
pop
sub
add
inc
aas
mov
xor
cltd
mov
jge
insl
push
lea
or
lret
int3
mov
jmp
xchg
jmp
popa
clc
jne
xor
xor
lea
add
pop
mov
popf
fisttpl
xchg
repnz
ret
ja
fisubrs
pop
and
push
nop
sub
popf
xor
mov
out
mov
pop
jae
insl
push
mov
mov
shl
xchg
jo
movsb
pop
push
stos
inc
ret
xchg
push
xlat
imul
fimull
cmpsb
dec
out
ficomps
or
imul
xchg
insl
subb
repnz
and
inc
jp
sub
sub
dec
or
push
and
dec
iret
add
iret
pop
mov
fdivs
repz
sub
cmp
jns
repnz
xchg
loop
jne
jne
lds
jnp
or
ljmp
xchg
outsb
rclb
push
iret
addl
or
and
hlt
pop
xchg
adc
pop
jp
inc
push
xchg
shrl
xor
xor
loopne
loop
push
cwtl
out
jg
es
sbb
sbbl
test
in
je
enter
insl
jecxz
dec
inc
sub
xchg
jb
push
cs
insb
scas
mov
mov
sbb
xchg
dec
decb
data16
push
xchg
cwtl
mov
xor
ss
shll
jno
jbe
mov
cmp
adc
dec
js
fisubs
sub
stc
jmp
int3
aad
push
shl
cmpsl
stos
xor
or
shll
sub
pop
sub
add
cmp
mov
enter
push
xchg
movsb
or
lea
out
xor
int3
lcall
xlat
stc
test
add
hlt
push
or
imul
and
fcoml
adc
test
xchg
nop
add
dec
stc
movsb
movsl
sbbb
xchg
mov
pusha
push
dec
lret
movsb
xor
cmp
stos
add
test
inc
test
fisttpl
xor
xor
popf
sub
fwait
leave
sbb
mov
inc
cltd
add
mov
dec
ret
and
or
ret
xchg
movsb
movsb
cmp
cmpsb
ret
sub
xchg
bound
dec
movsb
cli
inc
aaa
in
xchg
sub
mov
mov
rcrb
push
pop
sub
lret
adc
xchg
cmc
xlat
adc
mov
shr
sub
push
pop
push
stos
inc
test
and
mov
je
cmp
jns
outsl
push
aas
dec
mov
pop
shll
popf
inc
mov
add
xor
lods
pop
adc
push
push
inc
xor
xor
pusha
rol
lods
js
cmp
jbe
mov
sub
mov
sub
inc
pop
jp
repz
cld
out
pop
or
flds
addb
int3
sub
in
dec
push
jp
lds
cltd
pop
sub
mov
outsb
push
dec
jg
decb
daa
hlt
mov
pop
push
idivl
sub
stos
aad
and
jb
xlat
les
pushf
ds
cmpsl
inc
leave
mov
xchg
and
orl
call
dec
ja
out
xchg
cmc
repz
call
sti
int3
adc
xchg
push
sbb
mov
iret
add
xchg
add
push
mov
loopne
lret
xor
push
sub
stos
outsb
pop
push
sbb
mov
jle
loope
fsubrl
add
addb
lods
xchg
fsubrs
shll
mov
xchg
cmp
pusha
das
xchg
mov
inc
mov
sahf
scas
adc
xchg
mov
inc
sub
stos
cmc
lcall
mov
loope
xchg
scas
or
jmp
xor
mov
into
sti
in
out
xchg
repz
out
pushf
cmpb
lods
or
ja
es
call
jp
or
push
mov
ffreep
in
test
outsl
fincstp
imul
gs
push
mov
jns
xchg
out
stc
jg
bound
punpcklbw
shll
out
jae
push
jg
sbb
pop
push
xor
pop
push
jo
inc
mov
mov
addl
fistl
in
cld
adc
mov
scas
aam
insl
pushf
jl
mov
lahf
out
mov
repnz
mov
mov
cmp
pop
loope
xchg
sub
xchg
mov
mov
out
cs
dec
cmp
repz
mov
jp
jge
sahf
fsubr
mov
add
or
bound
lods
add
jne
stos
push
pop
loope
mov
push
jo
xchg
lea
xor
dec
or
aad
adc
mov
adc
stos
dec
cmp
dec
jg
adc
fdivr
add
das
inc
adc
jmp
push
xlat
inc
leave
add
cli
sbb
and
je
or
dec
cmp
lret
jae
ljmp
sbb
icebp
xchg
xor
out
xchg
popa
inc
or
or
or
shlb
add
in
sub
fnsave
mov
mov
clc
xchg
push
sbb
push
cmp
or
and
in
fisttpl
fisubl
mov
ret
lahf
jb
ds
xor
pop
ror
push
inc
cmc
cmp
cmp
andb
mov
adc
stos
adc
mov
mov
mov
out
je
scas
inc
xor
jo
std
in
xor
fdivr
incl
jg
jmp
mov
imul
mov
popa
or
mov
les
mov
adcb
pusha
roll
ss
or
test
sti
cmc
test
movsl
in
push
popa
int
incl
push
or
dec
fwait
mov
jno
sbb
js
sti
push
das
mov
jne
and
xlat
das
mov
mov
push
adc
jl
push
or
mov
std
jno
cmp
in
ljmp
pop
iret
fbld
inc
jb
addr16
negl
sbb
cs
add
lods
fldcw
in
scas
inc
setae
and
jecxz
mov
shrl
shl
mov
add
pop
mov
mov
mov
xlat
les
rclb
and
lcall
outsl
and
pop
mov
jns
mov
outsb
xchg
pop
lret
dec
aas
inc
sarl
xor
jnp
movsb
cld
ljmp
and
ja
int
test
push
ss
or
lcall
out
mov
gs
mov
fsubrs
fwait
aam
inc
push
mov
aam
popa
sbb
or
mov
pop
in
dec
call
movsb
or
movsb
lds
mov
pop
push
arpl
xchg
dec
jo
lret
xchg
ret
fiaddl
jbe
arpl
jnp
jp
and
fs
adc
adc
out
or
mov
sbb
jg,pn
lock
cwtl
push
add
outsb
cmp
scas
clc
mov
cmp
dec
icebp
fcomip
ja
negl
popf
pop
imul
jno
push
icebp
push
jp
fistl
gs
insl
divb
test
jge
ja
imul
xchg
dec
fprem1
fldcw
subl
test
subl
sub
insl
lods
dec
xchg
or
inc
stos
lret
test
add
scas
es
xchg
sbb
pop
insb
add
ret
inc
hlt
or
ficompl
add
cmc
lret
mov
mov
and
nop
cld
xor
lret
outsb
push
jl
rorb
mov
push
es
pop
add
andb
cmp
mov
pop
or
mov
cs
testl
ljmp
jmp
inc
cmp
dec
add
add
gs
push
loope
xor
incb
dec
dec
jns
push
loopne
stos
mov
dec
insl
add
aas
or
cmp
out
pop
sbb
adc
adc
push
mov
jo
dec
cld
fsubl
adc
sub
mov
lock
scas
pop
pop
cmp
cmp
cmpsb
or
cwtl
push
int3
jecxz
sbb
lods
fsub
into
fadds
mov
in
mov
sbb
sub
jno
xlat
add
sbb
enter
push
sub
pop
test
lea
stc
push
je
jae
js
cmpsl
sub
ret
and
ss
push
adcb
cltd
add
push
push
enter
gs
sbb
loopne
inc
jmp
test
out
cmpsl
mov
enter
push
popa
sub
fsubrs
ds
ja
jle
pop
sub
inc
jo
scas
xor
lahf
mov
cmp
fwait
push
in
jp
or
mov
jl
cmpsb
fisttpll
into
lods
and
inc
jb
mov
sbb
inc
sbb
add
add
jg
jmp
setnp
sub
pop
mov
out
mov
fwait
jne
mov
mov
inc
push
adc
lock
and
cmp
outsl
jb
mov
out
adcb
xchg
jecxz
push
loop
jb
sahf
data16
inc
jae
sbb
dec
loop
aas
rcl
das
lea
mov
xchg
loop
xor
pop
xchg
xchg
jl
mov
aad
lock
dec
mov
lea
pop
add
pop
sahf
stc
js
pop
sub
or
mov
dec
cmp
cmp
out
or
dec
stc
mov
jo
mov
dec
ja
jecxz
repnz
ret
cltd
rcrb
lret
pop
sahf
cs
dec
mov
add
repnz
jmp
add
repnz
jno
mov
mov
arpl
jne
std
gs
jle
mov
or
jle
imul
xor
mov
aad
adc
push
aas
leave
out
mov
dec
rclb
ja
bound
je
ffreep
pop
out
aas
cld
mov
aaa
adc
pusha
mov
aad
push
adc
lods
sub
adc
push
sarb
shl
xchg
push
pushf
test
pop
inc
push
or
leave
sbb
push
inc
dec
cli
mov
jbe
xchg
divl
mov
dec
xchg
xor
insl
mov
testb
push
push
jge
out
sbb
mulb
jbe
fucom
imul
lret
jge
add
inc
in
or
add
stos
das
mov
test
shll
and
adc
outsb
leave
and
repnz
cmpsl
or
add
mov
inc
xchg
mov
jl
out
mov
xchg
cmpsb
jnp
fldenv
sub
addr16
fiaddl
mov
add
lret
test
mov
sar
fwait
sbb
push
mov
sub
add
xchg
out
cld
in
out
dec
and
mov
std
sub
hlt
lret
das
cli
imul
jmp
jbe
pushf
int3
sbb
mov
add
das
pop
out
lret
dec
in
ljmp
adc
cld
aam
and
cltd
inc
jns
rcl
xchg
test
je
sub
test
adc
jl
cmp
push
in
inc
int3
push
add
mov
lcall
insl
add
mov
sub
nop
enter
pop
xlat
xor
aaa
sti
mov
pcmpeqw
stos
pop
fwait
cltd
jne
pop
mov
xchg
cmpsl
dec
and
andl
mov
shl
sbb
adc
xor
xchg
std
mov
cmp
push
dec
or
std
mov
adc
cmp
icebp
sub
sub
aad
scas
test
push
xlat
repnz
out
popf
cld
in
ss
mov
cmp
xchg
lcall
pop
jp
ror
stos
out
clc
in
out
xor
call
repnz
and
and
std
stos
mov
mov
jp
test
push
leave
lcall
dec
lcall
jp
sbb
dec
pop
mov
push
call
pop
pushf
mov
add
push
xor
xorl
pop
xor
mov
add
imul
aas
test
into
lret
xor
out
lcall
or
or
aam
mov
lret
xlat
sub
stos
adc
cmpsb
push
inc
xchg
shlb
popa
call
adc
mov
add
pop
cwtl
xchg
roll
fwait
cmpsb
stc
lods
enter
out
cmp
sub
mov
and
cli
repz
pop
or
dec
push
push
jecxz
lds
pop
enter
divb
outsb
cmp
std
loope
jmp
xor
int
in
clc
pop
sbb
mov
pop
cwtl
sbb
lret
or
cltd
sti
add
and
jp
cmp
dec
aam
xchg
negl
test
adc
mov
inc
jle
inc
test
js
pushf
pushf
pop
dec
inc
cs
sub
ficompl
mov
jle
stos
xchg
xchg
dec
ss
or
inc
outsl
insl
lock
scas
aaa
inc
fcoml
inc
push
pop
and
lock
sbb
add
mov
arpl
mov
in
test
dec
cmc
cwtl
cmc
mov
jl
dec
mov
add
fistpll
inc
or
hlt
sub
pushf
adc
push
inc
fsqrt
xor
push
cmc
sub
enter
mov
jae
jne
jns
add
jle
mov
shll
jnp
movsl
inc
in
adc
lcall
repnz
ret
in
test
mov
movsl
jns
rcl
pop
imul
inc
mov
sbb
inc
insb
mov
adc
jmp
sub
lret
bound
dec
mov
pop
scas
xchg
outsb
fisttps
jle
ds
pop
mov
add
inc
mov
dec
sbb
pop
add
xchg
jmp
popa
push
sbb
jg
pop
cmpl
push
aam
stos
adc
mov
fidivrl
sbb
inc
sbb
xor
mov
jge
orl
and
xchg
in
push
fiadds
mov
mov
mov
mov
inc
mov
pop
cmc
ds
xor
jle
lods
inc
push
pop
js
ret
mov
pushf
pop
sbb
xor
jnp
stos
fcomps
xchg
inc
adc
sbb
mov
lock
addr16
jno
jge
xor
xor
aaa
pop
jns
movsb
mov
push
cli
and
xchg
inc
xor
add
cmpsb
in
dec
cli
rcrb
test
mov
pop
scas
jecxz
je
jb
pop
repnz
xchg
or
mov
cmp
and
cmpsb
out
ror
xchg
fistpl
and
fcomip
ds
mov
test
ljmp
jecxz
clc
pop
sbb
cwtl
call
lret
add
dec
pop
fdivrl
inc
unpckhps
leave
jecxz
adc
and
in
mov
test
adc
das
lock
sub
xor
insl
idivb
pushf
xchg
inc
and
sub
out
repnz
dec
cmp
jnp
in
aad
aam
jmp
push
aad
movsl
sbb
pop
cmp
call
es
push
jl
test
xchg
pop
mov
push
jg
pop
das
fidivrl
jno
mov
shrb
jmp
adc
dec
push
je
sub
dec
fstl
sarb
outsb
sbb
or
mov
cs
enter
sbb
loope
test
pop
sarl
shlb
clc
pop
shlb
fdivr
ret
cs
mov
inc
fwait
sbb
cmp
lock
sbb
push
cmp
pop
pop
aam
mov
mov
jp
push
xor
out
dec
je
pop
mov
sub
pop
sbb
cmpsl
push
jno
in
jecxz
cli
adc
or
jle
push
adc
xchg
outsl
jae
bound
jnp
subl
negb
sbb
das
cltd
fsubrl
lods
fidivl
popf
jp
int
lret
sbb
cmp
rcrb
mov
scas
jne
sub
aas
in
icebp
jle
xor
mov
push
sub
data16
pop
rcll
push
mov
ret
stos
xchg
pushf
jmp
push
jecxz
loope
enter
rcl
ljmp
mulb
push
cld
idiv
push
das
gs
mov
ss
and
outsb
clc
sub
nop
push
fbld
push
adc
mov
xor
into
ljmp
cmp
lods
outsl
aad
sbb
insl
mov
out
cmp
shll
mov
int
jle
test
sahf
out
pop
pop
inc
push
stc
sti
cld
dec
movsb
outsb
xchg
jp
mov
adc
ret
xchg
and
rolb
stos
and
sub
fdivrs
cltd
sbb
rcrl
mov
cmp
xchg
ror
cmpsb
cli
cmc
fsts
jo
jp
test
xchg
shlb
fisttpll
ss
mov
rcll
aam
enter
stc
sbb
push
lods
lret
popa
cltd
cmp
rcl
pop
adcl
jb
in
mov
call
pushf
cwtl
mov
lret
inc
les
test
dec
leave
sti
jb
enter
std
shll
out
mov
int3
cli
repz
sub
cmpsl
jl
adc
mov
inc
or
ficompl
adc
in
jg
in
scas
mov
aam
dec
lock
mov
or
inc
xchg
ljmp
or
pusha
add
aad
insb
sarl
push
daa
fs
cmpb
out
mov
adc
adc
ret
cwtl
je
sbb
mulb
adc
pop
cmp
test
into
cmp
std
adc
push
outsb
js
dec
sub
fildl
mov
sub
adc
lret
in
fsubrl
sub
popa
cmp
add
psubq
add
inc
imul
cmp
adc
bound
cltd
or
outsl
mov
sbb
cld
push
mov
lret
pop
popa
mov
xor
rorb
adc
adc
out
movsl
fcmovnu
dec
push
adc
and
jnp
sbb
loop
in
stos
push
cmc
dec
and
cmp
test
lahf
nop
insl
mov
fucomp
clc
nop
xorb
xchg
xor
pop
mov
scas
loopne
push
add
jne
pushf
ret
fldt
push
cmc
sub
ds
adc
jo
lea
clc
addr16
test
aam
xchg
jmp
ret
das
rorb
loopne
std
jl
xor
push
sahf
lods
test
xlat
lods
clc
dec
mov
push
dec
mov
addr16
xor
iret
mov
pop
mov
cli
mov
xlat
rcrl
fsubl
mov
mov
pop
cmp
outsb
mov
xchg
add
jp
aas
mov
mov
cltd
popf
or
into
aad
pop
and
cmp
xorl
movsb
jbe
xchg
sub
je
lret
lcall
mov
shl
jo
pop
pop
sub
xchg
jno
push
fistpl
dec
inc
loopne
mov
mov
loop
fwait
rcll
outsb
scas
or
push
push
stc
pushf
cltd
mov
mov
xchg
push
mov
insb
jae
xchg
jge
daa
cs
out
rcl
aas
push
dec
cld
cwtl
or
xchg
push
addr16
mov
sub
out
inc
lcall
mov
out
popf
roll
sub
in
insl
fimull
mov
cmp
lret
dec
shlw
out
lret
xchg
ret
loopne
jg
jns
inc
fimuls
pop
push
jmp
lret
xchg
cmc
fwait
jbe
imul
adc
mov
mov
xchg
add
mov
lcall
stos
adc
incl
add
mov
push
jp
out
repnz
or
pusha
sub
daa
xchg
inc
rcrl
xor
loop
stos
xchg
push
xor
sbb
inc
mov
icebp
outsl
sarb
sbb
xchg
das
mov
outsl
push
shrb
jmp
imul
xchg
sbb
das
in
sti
fs
mov
int3
push
sbb
add
mov
pop
push
xorl
xchg
imull
outsl
mov
aad
sub
insl
dec
adc
cmp
ja
mov
sar
add
xchg
xor
ret
gs
loop
in
roll
fisubrs
or
mov
lret
jnp
mov
and
jg
sti
inc
adc
rorb
subl
hlt
out
fcmovnu
jns
mov
sbb
data16
aam
cmp
xchg
push
or
jp
pop
add
add
xchg
fiadds
or
mov
popa
outsb
iret
push
sub
add
testb
adc
fadd
lcall
lea
test
inc
in
adc
fidivl
inc
pop
adc
aas
popf
data16
pop
in
inc
addl
fidivrl
addb
jle
lea
cltd
or
movsb
rcrl
filds
inc
inc
stos
shrl
push
and
xchg
movsl
sub
popf
add
dec
push
push
pushf
arpl
lret
fcmovnu
mov
xor
pop
aad
daa
into
repnz
std
ljmp
cmp
jmp
or
cmp
mov
lods
movsb
lods
xchg
sub
in
and
add
lds
mov
push
push
jp
lock
xchg
add
pop
sbb
insb
push
cmc
jno
adcb
mov
push
mov
shll
rcrb
push
sub
and
movb
loop
clc
cmp
fimull
xchg
movsb
notb
mov
lods
fsub
roll
sbb
push
sub
stos
scas
sub
bnd
push
fstps
lds
cli
bound
xchg
sar
jne
sub
add
sub
ret
pop
fld1
adc
sbb
lds
aaa
xor
cmc
jle
iret
gs
pop
aaa
and
out
lret
cmp
stos
pop
adc
pop
and
outsl
pop
dec
or
xchg
push
popf
dec
arpl
cmp
ret
dec
xor
js
inc
addl
jg
and
mov
ret
inc
inc
or
adc
sbb
add
insb
xorl
lahf
out
out
mov
or
and
pop
mov
or
mov
pop
jbe
and
mov
mov
xor
decl
and
jg
cmpsl
loope
pop
ja
mov
mov
xor
lock
mov
stos
push
rcr
shl
out
inc
inc
aaa
es
and
mov
and
pop
ljmp
mov
xchg
ret
addr16
sbb
mov
push
adc
pop
xchg
scas
add
cmp
call
shll
or
cmp
dec
xor
jmp
popa
pop
sub
test
cmpsb
add
add
inc
cmc
pop
lock
out
add
repnz
sbb
xchg
jecxz
sahf
mov
scas
shl
or
jns
xchg
add
and
cld
cmp
dec
cmp
loopne
inc
int3
pop
rcr
loope
sbb
or
pop
in
repnz
fistpll
popf
and
mov
mov
in
dec
add
loope
mov
enter
popf
mov
or
xor
cltd
jp
sbb
outsl
fdivl
hlt
push
mov
je
imul
dec
and
pop
mov
jo
enter
lds
xchg
xchg
jne
mov
mov
adc
inc
in
push
js
adc
lret
es
pop
scas
daa
mov
inc
add
adc
fs
pop
xchg
leave
daa
xchg
pop
xchg
clc
xlat
daa
sbbl
aas
pop
and
inc
xchg
cltd
jp
jmp
xor
idivb
mov
mov
xchg
cmp
push
sarl
dec
js
xor
cs
add
insb
adc
cmp
scas
mov
and
jecxz
fadd
clc
imul
or
cltd
mov
xor
insb
int
mov
lcall
push
imull
int
imul
jns
ret
add
gs
lret
divb
fmuls
mov
xlat
xchg
mov
pop
and
sahf
mov
loope
mov
test
daa
enter
js
loope
clc
xchg
xchg
mov
or
cmp
mov
outsb
push
popf
aam
sub
dec
xorb
adc
ja
and
lret
mov
int
inc
cmp
jmp
xchg
pcmpeqw
loopne
push
sub
je
mov
test
push
xor
mov
mov
dec
pop
jg
popw
rorb
insl
out
outsl
xchg
sbbl
push
cmpsl
sbb
iret
lahf
addr16
inc
dec
lahf
jl
stc
add
pop
mov
adc
rdpmc
testl
popl
je
jne
dec
bound
pop
mov
dec
das
xor
mov
xchg
sub
fisubrl
shl
cmp
movsl
insb
push
ret
clc
jbe
ficomps
test
mov
add
cmpl
sbb
aad
decb
out
sbb
cmp
cmp
or
fdivl
loope
xchg
das
test
cwtl
and
or
dec
mov
out
dec
push
gs
jae
jo
or
das
movsl
pop
movsl
stc
ret
sub
xor
push
out
add
xchg
lea
cli
push
mov
dec
mov
sub
imul
xchg
fidivrl
add
xor
dec
adc
cmp
sub
sbb
pop
xchg
jle
mov
push
xor
xorl
mov
xor
inc
js
and
or
cmc
or
mov
psubsw
pop
jbe
jno
fldt
out
rclb
in
cmpsb
dec
jno
movsl
and
xor
sbb
pop
pop
dec
mov
sbb
lcall
int3
bound
mov
movsl
in
dec
scas
adc
mov
ret
aam
mov
jmp
lds
lock
mulb
stos
loop
add
imul
das
not
dec
imul
addb
sarb
inc
xchg
cmp
jmp
push
aaa
jl
scas
inc
fwait
insb
ds
jle,pt
inc
dec
iret
aaa
adc
or
icebp
test
sti
jnp
add
nop
aad
out
sub
inc
hlt
aaa
lods
sbb
sbb
adc
arpl
in
mov
dec
pusha
push
inc
xlat
inc
mov
dec
jge
jl
out
dec
cld
dec
les
push
movsl
aas
or
test
scas
test
inc
xchg
rcrb
pop
inc
fistps
adc
xchg
bound
sub
loopne
jmp
scas
dec
lret
jnp
loope
clc
xchg
nop
les
mov
lock
out
cmp
outsw
add
mov
ss
cmp
push
mov
outsb
movsb
pop
jbe
inc
add
xchg
inc
xor
lods
sbb
lds
or
cmp
mov
mov
adc
pushf
jle
mov
cltd
push
xor
sbb
sub
jae
xor
aam
pop
inc
inc
xchg
or
fisubs
xchg
daa
shlb
std
push
out
mov
or
inc
cmp
mov
jno
hlt
scas
out
pop
pop
je
push
inc
test
imul
pop
jmp
jle
dec
addr16
xor
sbb
add
shll
insb
or
loop
jmp
out
jge
addr16
orl
xor
test
jge
ficoml
xchg
mov
leave
or
jae
lods
cli
cwtl
xor
xchg
and
test
and
out
mov
dec
adc
mov
rcr
sarl
adc
aam
mov
inc
xchg
daa
mov
adc
pop
xchg
ss
mov
fnstsw
pop
xor
push
jnp
iret
mov
add
mov
adc
fidivs
test
test
xchg
mov
in
xchg
fwait
sub
xor
sub
xchg
pusha
pop
daa
shrl
mov
enter
stc
push
movsl
lret
xchg
add
xor
loop
movsb
and
fcmovnbe
xor
push
push
cmp
loopne
lcall
dec
mov
xor
push
or
test
scas
shl
and
pop
fwait
mov
je
lock
mov
cmp
inc
push
xor
push
cmpsb
cwtl
cmp
subl
out
mov
xchg
inc
pop
mov
dec
test
xchg
xchg
leave
mov
pop
jg
mov
dec
add
test
mov
and
dec
add
imul
adc
push
mov
xchg
fs
push
xchg
mov
xchg
dec
ret
push
pop
xchg
loope
push
fdiv
mov
fnsave
je
cwtl
mov
loopne
dec
dec
push
or
scas
movsl
lock
sub
jp
xchg
inc
aaa
adc
xor
sub
cs
or
dec
sub
sbb
or
loope
notb
mov
mov
arpl
jge
test
test
adc
push
dec
incb
dec
dec
daa
pop
push
rclb
outsb
jge
mov
outsb
mov
cmp
jae
jbe
push
sar
outsl
mov
andl
outsb
mov
mov
sbb
sbb
mov
popa
xor
mov
mov
into
inc
push
push
nop
out
scas
sti
push
dec
lods
stos
jmp
jmp
add
sti
ret
idivb
arpl
xor
notl
mov
add
mov
push
rorl
mov
scas
jg
out
mov
ljmp
shll
dec
in
cli
push
mov
lahf
sbb
out
add
je
testl
pop
dec
dec
mov
aam
in
or
mov
cli
push
test
bound
cmp
lock
xlat
in
fbstp
gs
sub
inc
shl
sbb
sub
xor
push
clc
hlt
hlt
add
xchg
adc
dec
sbb
or
add
cmp
lock
dec
push
adcb
mov
and
sub
sahf
cmp
jb
daa
data16
mov
sub
jmp
pop
and
jecxz
xchg
jae
aas
sti
stc
in
adc
ret
lods
adc
imul
cli
sbbb
pushf
xor
movsb
xor
loopne
lods
scas
into
divl
fimull
cmp
lods
movsb
pop
cmp
movl
aaa
fcomi
andb
and
sub
test
xchg
mov
pop
cmp
mov
shl
test
mov
rcr
mov
repz
movsb
mov
testl
setns
adc
or
iret
sbb
dec
jmp
fucomip
sub
shl
xchg
push
rcl
incb
outsb
mov
aam
test
loop
addb
add
ds
imul
lret
lahf
xchg
nop
in
pop
insl
add
dec
in
roll
in
movsl
sub
add
sbbb
cmp
ret
or
enter
sahf
daa
loope
call
aaa
mov
call
xor
jnp
inc
das
movsb
add
or
mov
in
cltd
sbb
push
aad
lret
ret
push
jo
fldl
es
mov
cmp
cmpsl
out
enter
outsb
push
iret
jne
push
imul
add
push
dec
test
fwait
js
dec
lcall
add
cmpsl
push
lcall
mov
daa
ljmp
popa
aaa
outsb
orl
inc
adc
push
xchg
dec
push
jae
ret
or
dec
mov
sti
arpl
shrl
scas
arpl
into
pop
pop
xchg
mov
popf
xchg
adc
lret
xchg
or
jo
in
sub
popf
push
shll
xchg
lock
xor
ficoml
test
shrl
insb
sbb
hlt
adc
inc
nop
rolb
inc
popa
cmp
nop
mov
push
jecxz
sbb
and
mov
outsb
dec
cwtl
stc
push
fdivrp
outsl
ficomps
imul
fstl
jge
pushf
shl
ret
psubusb
in
enter
in
xor
lret
dec
mov
xor
ja
aam
push
icebp
test
mov
push
mov
and
add
test
lods
mov
movsl
daa
fwait
xchg
pop
daa
mov
xchg
sbbb
loope
sbb
lds
dec
sub
nop
inc
test
lods
enter
cmp
or
push
notl
bnd
dec
fwait
cmpsl
arpl
ficompl
dec
inc
adc
adc
ja
lods
jge
mov
mov
sub
nop
mov
call
outsl
pop
dec
jnp
arpl
enter
leave
sub
lods
jne
ficoml
stos
sub
cmp
jge
bound
add
int
xor
xor
push
in
sbb
jns
addl
pop
int3
mov
mov
cmpsl
dec
inc
fcom
aaa
cmp
aam
cltd
paddb
test
adc
inc
dec
or
outsl
in
adc
dec
mov
imul
in
mov
shl
inc
in
lods
aam
out
or
out
cmp
stos
push
stos
adc
sbb
inc
lret
aas
fimull
in
sub
sti
repnz
sub
dec
sub
or
jno
mov
jno
lret
pusha
outsl
mov
aas
inc
fbld
xor
or
pop
push
popf
adc
push
shl
lret
jns
test
dec
movsb
dec
push
iret
into
sbb
push
push
xlat
xor
dec
addr16
fists
add
icebp
xlat
cmpsl
shr
sbb
jns
repnz
pop
inc
and
and
rcr
jns
dec
inc
ljmp
insl
shl
aam
pop
ljmp
and
xchg
dec
rcll
pop
mov
leave
xchg
push
andb
lds
fs
loope
jns
jmp
pop
loope
ficoml
fidivrs
cltd
stc
popa
mov
out
jns
cld
mov
mov
out
lret
adc
cmpsb
mov
push
cmpsl
jne
and
sbb
jg
popf
out
sub
pop
cmp
xchg
and
dec
es
sub
or
xchg
xchg
pop
xchg
std
xor
lret
loope
push
jecxz
popf
xor
ds
nop
cli
mov
andnps
xor
cld
mov
sub
iret
faddl
and
and
mov
mov
cmpl
sub
dec
test
add
adc
jl
test
jnp
cmp
mov
sti
sub
cmp
or
or
sbb
pushw
and
mov
sarl
pop
sahf
shll
lds
push
sbb
fisttpl
test
test
pop
aaa
int
sub
js
jne
cmp
sub
mov
push
leave
push
jo
cmp
fscale
cmp
inc
and
movsl
sbbb
inc
jecxz
jno
ret
lret
cmpsb
out
loop
sub
mov
xor
sbb
popf
xchg
xor
mov
inc
test
pop
or
mov
out
leave
adc
scas
stos
mov
cmc
add
dec
enter
pop
hlt
fcmove
jb
mov
pop
push
jmp
mov
push
and
mov
pop
jns
outsl
xorb
sub
mov
fstps
push
dec
jmp
inc
icebp
cld
push
fnsave
clc
int
pop
in
push
insb
mov
icebp
jae
fs
into
and
nop
jns
movsl
xchg
mov
ret
lcall
popl
cmp
jb
xchg
or
cmpsb
dec
jge
sbb
nop
mov
int
call
xchg
mov
out
loope
lcall
fwait
mov
jns
mov
test
imul
call
mov
cmpsb
xchg
adc
push
xor
mov
adc
jecxz
xor
outsl
sub
adc
lahf
gs
cmp
lods
mov
insl
push
ljmp
nop
xlat
les
add
cli
xor
lret
mulb
scas
push
test
imul
ds
sti
mov
outsb
inc
cmp
pop
outsl
sbb
inc
push
repz
push
hlt
popf
lret
dec
sarl
lahf
and
mov
jo
test
ficompl
jl
out
dec
pop
mov
mov
jge
lret
or
clc
test
test
inc
addr16
imul
xor
and
insl
int3
inc
push
mov
mov
sbb
push
cs
andl
ljmp
sti
jb
pop
mov
test
ja
sbb
pop
pop
rorl
into
movsb
mov
test
aam
push
and
dec
sbb
in
loop
pusha
cltd
push
in
mov
pop
and
js
mov
out
push
pop
lahf
cmpsb
inc
push
inc
cmpsl
pop
cmp
mov
push
jbe
pop
xchg
ljmp
hlt
stos
les
nop
xor
lds
in
mov
or
mov
movsb
cmp
cmc
pop
jns
mov
push
pop
or
cmp
iret
jo
fmuls
add
les
mov
mov
sub
std
loop
push
stos
cmp
adc
jmp
call
cmpb
xchg
dec
push
xchg
push
mov
daa
loope
std
mov
jge
mov
jge
sub
lea
xor
mov
sbb
orb
adc
pop
stos
push
loop
js
ret
call
data16
push
xchg
or
xor
xchg
push
or
xchg
lret
push
jle
push
in
pop
dec
dec
out
mov
ret
push
xor
enter
inc
gs
pop
jno
mov
fisubrs
ds
xchg
pushf
jne
loop
je
mov
xlat
sahf
cmp
sub
mov
jecxz
or
push
adc
icebp
pop
jp
shll
xchg
xor
jno
movsb
mov
andl
and
mov
cmp
ss
fsubl
neg
jecxz
sbb
push
xor
dec
in
fcomip
and
icebp
xor
aad
outsb
lods
cmp
leave
sbb
aaa
jmp
in
xor
push
ds
movsb
mov
div
mov
gs
and
xor
aam
lods
popa
and
repz
inc
and
cmp
lcall
or
daa
lock
jno
movsl
lds
scas
pop
shll
adc
or
mov
dec
xchg
adc
stc
fwait
sbb
cmp
test
cli
lcall
adc
lds
test
cmp
shrb
sbb
iret
jge
add
xchg
movsl
push
jg
ljmp
bound
loopne
mov
pop
cwtl
cmpsb
inc
lds
sbb
mov
sub
cmp
dec
jnp
out
test
sbb
pop
push
cmp
add
fmul
js
pusha
push
dec
adc
test
pop
imul
mov
jae
or
shll
push
in
mov
rcr
out
sti
test
push
sbb
cmp
cwtl
dec
rcr
arpl
nop
xchg
push
pop
insl
sar
and
in
iret
sub
faddp
and
jb
ds
sbb
into
aas
dec
enter
call
push
out
js
adc
jb
scas
insl
aaa
mov
push
movsl
cwtl
ret
or
inc
adc
shlb
mov
aam
outsb
lds
mov
int
cmpsl
pop
or
inc
and
jmp
out
outsb
dec
test
mov
push
mov
mov
lods
pop
out
add
add
pop
cmp
mov
xor
push
mov
stos
aam
cmpsl
mov
mov
divb
mov
je
je
cltd
mov
aam
jae
mov
push
sbb
xchg
jbe
out
das
cmpsl
or
add
sbb
add
adc
adc
aas
pop
loopne
daa
adc
push
enter
in
popf
and
inc
mov
and
mov
push
shll
mov
cmpsb
das
in
fneni(8087
jo
dec
fs
push
mov
xor
int3
pop
pop
negb
in
inc
in
sub
adcb
cmpsl
adc
pop
fwait
sti
jbe
sbb
push
lahf
sub
xor
mov
fdivs
lods
dec
int
fs
cmp
mov
mov
fwait
cmp
stos
xor
xchg
xchg
fs
and
es
test
insl
pop
js
mov
inc
inc
repnz
loopne
movsb
mov
test
xchg
mov
stc
data16
xor
mov
mov
dec
xor
sbb
mov
pop
cmpsb
adc
fst
lock
xor
xchg
inc
stos
lods
mov
mov
pand
pusha
in
cmp
je
shrl
orl
push
pop
dec
and
repz
adc
imull
test
rcl
pusha
mov
dec
adc
popa
jb
leave
push
push
sub
insl
mov
js
cmc
pop
mov
loop
movsb
cmp
fldenv
out
out
mov
sti
rorb
xchg
jne
shll
inc
cmp
fs
cltd
in
outsl
mov
push
dec
sbbl
or
dec
into
insb
inc
or
repnz
cmpsl
stc
jne
aaa
dec
cmc
mov
loope
sub
in
push
push
popf
rorl
pop
cmp
fldt
or
adc
jae
out
stc
push
arpl
pop
lock
xchg
cltd
add
pop
push
ljmp
shlb
les
sub
jle
push
movsl
ljmp
stc
es
sub
andb
hlt
or
in
fsubr
notl
dec
enter
add
xchg
mov
fstpl
ljmp
xor
xor
dec
in
xor
cmp
hlt
inc
adc
fdivs
arpl
cli
pop
ja
sub
popf
dec
or
dec
adc
loope
cwtl
cmp
cmp
mov
mov
sahf
inc
push
adc
mov
scas
cwtl
mov
xchg
mov
cmp
mov
fdivrl
jg
push
adc
sub
xchg
arpl
ror
ja
into
arpl
xor
in
xor
add
push
fisubrl
dec
pop
mov
enter
inc
push
addb
push
shlb
xchg
into
loop
xchg
mov
sti
or
aad
xchg
mov
ds
aaa
outsb
das
adc
sbb
fcompl
fdivrl
mov
xchg
mov
or
inc
sub
jbe
inc
cwtl
fnstsw
nop
add
in
popa
cmp
and
out
xchg
push
es
and
or
mov
mov
cmp
stc
fcmove
adc
jns
push
insb
and
xor
cmp
jge
jp
dec
and
mov
sbb
jl
ret
daa
and
cmp
std
fstps
aad
jb
loopne
out
faddl
inc
cmp
bound
std
sub
sub
pushf
gs
mov
mov
cmp
jg
add
mov
fsubrs
out
push
ss
cmpb
push
mov
dec
inc
popf
imul
test
lods
mov
jns
xor
sub
cmp
inc
add
mov
aad
cmp
dec
jp
ljmp
fnsave
dec
fimuls
loope
lods
lock
loope
std
shll
mov
sbb
mov
scas
sbb
xchg
divl
pushf
cmp
xor
adc
push
scas
out
jbe
mov
add
dec
pop
push
jnp
bound
bound
jg
std
cmpsl
jb
fmul
addr16
ret
add
mov
cmp
dec
dec
push
das
add
xor
addr16
fimuls
mov
pop
jg
cwtl
xor
shrb
mov
mov
inc
mov
std
aad
fistl
repz
iret
mov
push
sub
sub
adc
cmp
lcall
ret
xchg
adc
push
test
jb
aam
pop
fbstp
push
int
mov
pop
add
cmp
mov
call
jnp
ds
xor
inc
push
sub
cmp
push
mov
imul
cmp
push
mov
inc
aaa
pushf
cmp
idivb
or
stos
movsl
leave
daa
push
js
into
hlt
fiadds
mov
cmp
jo
fdivrs
in
add
sti
faddl
int
mov
stos
lret
lcall
fistpl
insb
cmpsb
adc
inc
lret
out
gs
es
js
leave
fimuls
mov
cs
imul
fdivl
lea
lahf
repz
xchg
xchg
mov
pusha
vmovlpd
test
dec
xor
out
inc
mov
sbb
movsl
dec
mov
sahf
rorb
pop
test
xlat
movsl
dec
dec
or
lds
xlat
leave
ret
ficompl
or
outsb
mov
mov
fwait
or
mov
fists
cmp
sbb
arpl
loopne
fsubl
and
jno
pushf
pop
mov
jnp
inc
sub
lret
mov
inc
inc
xchg
mov
jnp
mov
cltd
stos
test
pop
roll
fldl
rcrb
mov
in
inc
ret
add
nop
fbld
cwtl
add
and
cmp
bnd
mov
cmp
mov
mov
xorb
push
mov
push
dec
test
test
fsubl
sahf
push
cmpsl
sub
mov
dec
mov
sbb
push
fnsave
cmp
pop
decb
xchg
xchg
lret
add
lds
cwtl
sub
cwtl
icebp
sti
or
gs
mov
xchg
jmp
out
lods
shrb
push
mov
cmp
sar
and
leave
fldt
cmp
push
pop
jmp
jge
fstpl
sahf
push
add
xchg
bound
push
and
xor
jp
sub
pushf
jl
cli
arpl
lock
xchg
imul
push
jmp
inc
inc
imul
inc
gs
mov
faddl
movsb
pop
incl
add
mov
inc
rorb
pop
adc
in
mov
cli
lods
cld
mov
and
cs
cltd
notb
xchg
jl
lock
mov
fadds
ds
pop
insb
push
cltd
test
push
xor
cs
xchg
push
cmp
sbb
pop
dec
jl
es
es
imulb
sbb
adc
dec
loopne
std
push
icebp
scas
xor
into
shl
fstl
or
ljmp
and
push
cmpsl
rcrb
xchg
test
jmp
jge
mov
add
or
mov
lods
push
cmpsb
aaa
in
out
or
ret
cli
fucomip
dec
xlat
xchg
mov
add
les
fstpl
test
xchg
push
jmp
outsl
sbb
cmpl
push
mov
sbb
xor
daa
sub
lcall
fcoml
xlat
lea
add
jmp
divl
add
adc
pop
push
xor
and
dec
jns
cmp
jmp
bound
inc
mov
lret
dec
cmp
aam
push
inc
sti
adc
sbb
cmp
movsl
out
dec
pop
cmp
test
jp
sbb
fcomp
adc
shlb
jge
out
lea
in
xorb
mov
mov
inc
dec
xchg
testl
loop
inc
mov
pop
add
inc
ss
jl
test
cmpb
adc
mov
divb
ret
les
pusha
sbb
stos
adc
xlat
insl
mov
inc
in
mov
dec
call
jmp
mov
into
pop
xchg
sub
fldl
jae
movsl
arpl
cwtl
mov
repnz
and
sub
mov
push
cltd
popa
stc
mov
push
clc
add
push
fsts
xor
sub
mov
sti
int3
cmp
in
xchg
xor
mov
mov
cmc
bound
pop
xor
cmp
cmp
decb
adc
xchg
mov
sbb
sbb
xchg
push
pusha
mov
add
jnp
scas
fwait
cli
inc
jae
sbb
lea
inc
push
addr16
push
rcll
and
xchg
mov
mov
add
and
loope
adc
xchg
in
testb
add
roll
aam
mov
pop
pushf
shl
add
push
sbb
repz
pop
shr
out
dec
lods
cmp
jmp
mov
or
scas
fsubr
pop
loope
xchg
fsubl
push
aam
jg
pop
inc
aam
std
popf
icebp
push
maxps
mov
dec
push
cmp
xchg
jmp
mov
add
xlat
inc
je
inc
cmp
mov
xor
xchg
shll
adc
pop
push
add
lret
push
cmp
es
jge
add
in
sbb
loopne
add
sbb
sub
das
mov
addr16
xor
cmp
je
scas
andl
xor
and
mov
add
cli
cmp
stc
cmpsl
mov
leave
out
and
add
xchg
cmp
pop
mov
push
pop
outsl
pop
jns
fsubs
mov
jg
loopne
inc
int
xor
pop
or
mov
xchg
pop
mov
pop
dec
fnstcw
add
imul
call
add
test
mov
sub
add
mov
mov
cmpsb
jle
dec
push
repnz
xchg
jmp
cld
cmp
xchg
shlb
pop
addl
inc
ljmp
cmp
lods
fwait
pop
stos
sbb
in
outsb
stc
fisubrs
nop
jge
inc
xor
sti
sahf
sti
mov
rolb
iret
daa
xchg
mov
or
aad
test
mov
or
or
scas
pop
shll
dec
icebp
add
and
jl
aam
adc
mov
jnp
pusha
insl
and
stos
jbe
test
sub
jecxz
pop
mov
dec
mov
movsb
or
scas
sub
daa
inc
fs
xchg
push
dec
icebp
cmp
out
inc
adc
cmc
mov
or
push
loopne
xor
jmp
sbb
test
lcall
nop
push
out
stos
adc
into
cmp
pop
sarb
jp
xor
nop
fistps
jl
call
inc
mov
pop
jle
aad
dec
xor
movsl
cs
decb
rol
dec
aas
int3
mov
xchg
nop
imul
pop
or
orl
shll
stos
add
or
xchg
or
vmovupd
adc
xor
jle
jb
out
adc
jb
pop
shrb
add
pop
add
pop
js
jmp
jg
fs
test
jmp
cmp
or
lahf
cmp
cld
lods
popf
addr16
mov
xchg
dec
daa
dec
out
xchg
pop
push
jns
or
js
or
in
cmp
psubsb
push
out
jge
int3
aas
int3
or
or
cli
mov
sub
xchg
ret
nop
pusha
repz
sbb
mov
leave
pop
xchg
mov
mov
sub
mov
adcl
push
arpl
es
in
add
sub
pop
mov
test
push
or
call
jg
je
sub
cld
xor
in
adc
jmp
lret
pop
mov
sbb
add
mov
daa
push
mov
repz
loope
pop
inc
mov
mov
xlat
adc
popa
or
and
sbb
fbld
pop
pop
dec
ret
fnsave
jae
out
enter
adc
sub
les
arpl
jecxz
inc
add
repz
test
sbb
push
mov
cmpsb
cmp
mov
jns
mov
bound
imul
jecxz
imul
aas
cmp
fdivs
xchg
add
es
inc
jb
xchg
mov
shr
adc
adc
ja
out
stos
dec
jo
test
sbb
in
dec
pop
mov
imul
lods
inc
or
add
aad
dec
cmp
movsb
repz
mov
iret
popa
mov
xor
test
pusha
mov
into
mov
ficoms
fwait
pop
jo
jae
sbb
dec
inc
scas
xchg
int3
rorl
cmpsl
inc
or
rcrl
mov
aas
add
xor
lahf
dec
loope
dec
testl
xorl
sub
jge
cmpsb
and
jno
jmp
push
int
aad
ljmp
fnstsw
not
fildll
dec
adc
inc
push
cmc
adc
test
sbb
inc
sbb
ret
cmp
jae
pop
scas
inc
mov
adc
xchg
fstps
or
inc
jecxz
adc
pushf
or
mov
mov
lds
sbb
cmp
xchg
jnp
fsubrs
cmpb
xchg
fidivrs
lret
cmp
adc
inc
and
mov
inc
push
das
aam
cwtl
jle
aaa
push
push
jbe
lret
int
lods
ficoms
mov
int3
jnp
dec
gs
filds
in
jo
jge
gs
mov
add
mov
popf
pop
mov
mov
stc
mov
jne
mov
pop
cmp
jl
xchg
pop
sti
iret
mov
xor
mov
pop
lods
orb
aaa
dec
pushf
test
test
jl
out
fsubl
jno
inc
add
dec
repnz
mov
dec
or
loope
or
stc
pop
test
test
outsb
push
push
lret
mov
test
lcall
sbb
sub
sub
mov
pop
push
cmp
mov
xchg
xchg
xchg
xor
dec
out
sub
xchg
je
dec
test
xchg
js
fimull
bound
dec
xor
mov
nop
lods
jle
fsubs
mov
push
cmp
xchg
adc
or
test
xchg
popa
mov
mov
add
ljmp
inc
mov
aam
push
inc
add
outsb
xchg
sti
mov
cmp
inc
xchg
xchg
stc
adc
insb
inc
sbbl
addl
push
movsb
testb
out
ljmp
dec
or
mov
push
out
mov
jns
sbb
add
fcoms
pop
sti
jp
mov
jno
sub
lret
add
jo
xchg
jns
addr16
pop
push
dec
rdtsc
fwait
sub
loop
sbb
pushf
cmc
mov
addr16
adc
mov
or
insl
loope
jmp
or
test
cmp
mov
es
xchg
fstpt
jecxz
jecxz
fbld
sbb
xor
je
fmulp
pushf
jg
les
push
idivb
lret
or
mov
and
adc
mov
jae
ja
jl
gs
push
mov
test
mov
dec
inc
out
push
and
xchg
mov
and
div
jae
test
mov
xor
pop
cmp
and
jmp
cmp
pmuludq
or
insb
js
xchg
push
add
sub
in
es
sub
mov
mov
pop
mov
das
out
add
inc
insb
jb
and
rorb
aaa
xchg
xor
or
fldenv
clc
out
outsb
lea
or
mov
pop
nop
std
sub
cs
mov
push
push
jae
mov
jmp
cltd
repz
jp
bound
lret
iret
sbb
in
mov
mov
mov
inc
sub
fadds
divl
sbb
ficomps
sbb
mov
adc
enter
ljmp
cmpb
adc
aaa
mov
sti
push
int
out
push
inc
nop
xchg
dec
or
mov
in
cmp
idiv
and
pop
fcmovnb
test
pop
push
dec
push
ret
inc
add
sbb
mov
in
outsl
movsb
aaa
or
jb
pop
xor
xor
sbb
loopne
inc
ja
add
adc
inc
xlat
mov
cmp
push
std
and
adc
push
inc
loopne
lcall
xor
jl
or
push
mov
aad
cmp
icebp
inc
inc
aad
loope
sub
jb
leave
hlt
jae
pop
in
pushl
in
or
cltd
xor
rclb
in
add
lret
cmp
sbb
cmp
pop
mov
arpl
ljmp
add
loopne
inc
mov
and
and
lock
or
add
lea
fstpt
sbb
cmp
popf
add
add
je
mov
and
ljmp
sahf
and
insl
loopne
mov
mov
icebp
dec
inc
leave
pop
cwtl
xchg
push
lods
inc
dec
or
roll
lahf
loopne
rol
add
adc
test
add
push
rcrb
mov
arpl
sbbl
out
cmp
sub
pop
adc
dec
push
inc
loopne
test
sti
or
das
inc
lret
or
cvtps2pd
inc
cmp
cmpsl
cs
mov
add
jo
out
dec
push
mov
xchg
js
mov
dec
out
jecxz
jns
mov
and
xor
sbb
fcmovnbe
push
outsb
jp
push
iret
mov
int3
imul
jbe
rcl
call
inc
sbb
adc
neg
jnp
ljmp
cmp
mov
pusha
rorb
mov
push
mov
add
mov
loope
xor
imul
mov
xor
jno
sarb
add
inc
jle
cmp
mov
push
sahf
movsb
push
sbb
aaa
test
cmp
scas
mov
aas
es
dec
imul
mov
insl
xchg
call
ds
or
fmul
aam
add
outsl
std
and
sarb
mov
and
scas
mov
push
xchg
scas
addl
stc
cmp
push
leave
ja
mov
or
push
loope
pop
or
sub
or
sub
leave
das
popa
in
mov
or
adc
push
das
sbb
fcoms
cmp
jae
xchg
pop
sbb
fidivs
push
les
rcrb
cmc
bound
daa
cmp
pop
hlt
inc
fld
cs
in
mov
jns
mov
ljmp
scas
push
sbb
sbb
sbb
adc
xchg
xchg
testl
or
adc
or
cmpsb
xchg
aam
call
insw
hlt
and
push
test
lods
insl
loope
adc
jmp
and
jecxz
cwtl
dec
lods
jae
and
vmaxpd
and
sbb
and
ret
pop
pop
xchg
pop
mov
add
aas
imul
sbb
clc
inc
add
xchg
lods
movsb
out
jae
mov
add
mov
imul
in
sub
mov
cmp
shrb
in
sub
cmp
jle
sahf
jb
insl
sbb
rolb
jbe
sub
xchg
fistpl
dec
aaa
mov
std
mov
inc
mov
imul
imul
sub
test
sbb
outsl
xor
sti
test
jmp
jo
lods
add
pop
mov
ja
jo
dec
mov
shrb
out
movsl
jo
icebp
negb
out
adc
mov
test
daa
ficomps
cmpsw
scas
pushf
and
jbe
jl
add
movsb
call
sub
imul
inc
mov
iret
jo
enter
fdivl
push
imul
lret
xlat
xchg
imul
out
xchg
mov
sahf
call
mov
shlb
mov
jo
add
insb
mov
cmpsl
sub
mov
mov
rcl
mov
leave
nop
jle
mov
adc
xor
xor
mov
mov
mov
inc
cmp
mov
xchg
mov
xchg
pop
in
ret
sub
imul
jl
push
dec
jbe
xorl
les
rolb
jb
push
inc
push
lods
mov
mov
jp
and
mov
xchg
mov
pop
mov
pop
push
xchg
shlb
lock
insl
fidivrs
int3
imul
cmpsl
cmpb
add
jmp
jmp
pop
stos
xor
rclb
pop
jnp
cmp
imul
adc
dec
pop
xor
sbb
cmp
hlt
xchg
dec
cmp
ret
gs
jmp
cmp
pop
sub
test
push
out
xchg
pop
add
es
jae
jp
mov
icebp
xchg
add
arpl
dec
stos
sarl
mov
pop
mov
xor
pop
xchg
out
mov
mov
jge
or
xor
mov
inc
pop
insb
sub
push
sbb
mov
loopne
lods
push
pop
addr16
cmp
imul
aas
pop
ret
fistpl
aas
shll
xchg
popf
xor
jnp
dec
or
ret
jno
je
xchg
outsl
jge
iret
add
xor
dec
adc
xlat
mov
pop
das
push
int3
cli
xor
sarl
fimuls
dec
addl
xchg
mov
stos
fdivrs
xorl
xor
and
pop
jmp
jnp
in
mov
je
xor
mov
push
sub
popa
scas
inc
loopne
mov
enter
mov
cmp
orl
mov
in
addr16
cmp
adc
wrmsr
stc
push
fsubrs
hlt
jl
pop
gs
and
adc
gs
scas
scas
xor
shll
add
pop
adc
clc
cmpsb
clc
movsb
cwtl
cmpsb
lea
imul
aas
fisubs
popa
notl
bound
cmpsl
ficoms
pop
add
nop
lret
jl
inc
and
test
mov
mov
jo
lret
sub
insb
cmc
out
shr
sbb
jle
mov
sarb
push
xchg
pop
rorl
mov
outsl
in
push
pop
mov
pop
sub
mov
pop
and
and
sub
popf
jo
outsb
std
clc
into
fisttpl
pop
popf
movl
cmp
mov
or
enter
stos
das
nop
mov
fnstsw
xor
jle
lock
jbe
cmp
xor
testl
pop
icebp
lods
lods
mov
xlat
adcl
les
mov
pop
inc
iret
daa
roll
arpl
mov
int
enter
fiadds
addr16
ss
stos
movsl
mov
pop
lock
xchg
ja
mov
data16
fmull
jmp
pop
jb
mov
jg
subl
or
xchg
push
push
rolb
lods
iret
adc
jle
mov
mov
mov
sbb
fsubs
adc
daa
flds
mov
in
jne
dec
and
pop
jmp
dec
in
rclb
sbb
pusha
jne
int3
inc
das
ljmp
add
andl
mov
decb
in
test
inc
out
icebp
pushf
or
in
fsts
cmp
ficoms
imul
outsb
aas
jg
aas
adc
lcall
cmpsb
test
pop
ffreep
das
push
cmp
add
xchg
mov
mov
int3
lods
enter
xchg
fdivl
imul
add
mov
xor
outsl
imul
lods
movsb
js
inc
nop
repnz
sub
sub
xchg
sbb
jb,pn
xor
push
mov
jo
data16
inc
xchg
xchg
iret
push
jb
dec
add
and
pop
push
adc
rol
shl
cwtl
ja
push
dec
in
adc
inc
fwait
or
adcl
sub
or
add
push
je
stos
xor
push
and
ret
xlat
pusha
jno
cmp
test
mov
popf
loopne
cwtl
outsl
pusha
pop
sbb
jns
imul
or
push
and
ljmp
push
outsl
sahf
or
and
cs
mov
les
sbb
scas
jl
inc
test
sbb
mov
jb
cmp
add
and
fldenv
fisubs
mov
mov
xor
jp
cld
test
adc
out
nop
sub
repz
insb
inc
jmp
dec
xor
call
push
and
push
loope
mov
pop
cs
addr16
cmp
hlt
dec
icebp
stos
pop
arpl
mov
jae
mov
inc
sti
jmp
and
fcomp
scas
jp
fwait
mov
fwait
add
sbbl
ja
adc
mov
dec
call
sub
or
push
icebp
sub
pop
lods
mov
xchg
faddl
fstpl
lahf
xchg
adc
cmp
aaa
jecxz
test
test
push
mov
ja
pop
mov
ljmp
daa
jge
mov
nop
dec
test
dec
xchg
std
aaa
push
mov
je
dec
ret
lods
xor
add
or
sbb
mov
in
in
movsb
popa
cmp
cmp
and
push
inc
aam
xor
or
mov
mov
add
push
xor
imul
lods
mov
mov
pop
and
fstl
xchg
pop
test
dec
andl
aam
cmp
dec
orl
jp
adc
push
xor
push
mov
xor
sub
shrd
dec
xchg
insl
rolb
daa
gs
mov
in
sub
sub
aam
insb
insl
mov
aas
xchg
imul
mov
aaa
mov
lret
pop
hlt
adc
pop
insl
push
mov
hlt
outsl
aad
xor
test
mov
mov
cmp
lret
jnp
mov
mov
movsl
loopne
test
shlb
sub
cmpb
addr16
mov
hlt
movsb
scas
ret
pop
xor
imul
sbb
sub
mov
insb
push
repz
xchg
lods
stc
adc
shr
out
inc
inc
stos
xchg
dec
gs
mov
int
inc
sub
xchg
ret
add
or
loop
jecxz
out
and
cmc
aas
aam
mov
jl
push
jnp
pop
jle
lcall
daa
loope
inc
rsqrtps
push
mov
addb
sti
leavew
jb
xchg
or
hlt
dec
xor
enter
shlb
jl
pop
movsl
push
jl
sbb
add
adc
or
add
xchg
jl
mov
ret
lock
push
int
or
mov
in
loope
dec
mov
dec
movsl
adc
out
dec
sub
ljmp
leave
dec
nop
out
xor
in
and
add
or
dec
cmp
or
testb
adc
roll
cmpsl
and
lods
insb
jl
mov
pop
sub
jo
mov
mov
out
xchg
inc
push
int
and
out
adc
push
jl
sub
out
or
adc
sub
and
bound
mov
out
ljmp
lock
outsl
sbb
insl
xchg
push
gs
daa
sub
rcrl
jnp
fs
or
fs
cmp
leave
fcomps
mov
or
or
dec
and
xor
daa
lcall
mov
and
roll
into
push
repnz
inc
push
sbb
pop
jmp
adc
adc
adc
add
orl
mov
adc
pushl
push
mov
add
lret
and
iret
push
aam
shlb
outsb
push
loopne
movsl
inc
inc
xchg
aas
rcll
pop
cwtl
dec
xchg
pop
stos
or
inc
ljmp
xchg
into
sub
xor
das
pop
out
popa
dec
adc
les
scas
mov
and
in
out
mov
xchg
pop
jg
cmp
inc
das
cli
mov
into
xchg
push
inc
into
sbb
mov
pop
test
adc
in
pop
push
mov
ficoml
loopne
dec
data16
ss
mov
ret
jle
cmp
add
test
cmpsl
mov
lret
out
data16
lock
or
iret
call
out
jge
sahf
dec
imul
daa
jae
call
jmp
ljmp
sbb
or
adc
ja
push
xchg
lea
imul
add
adc
xlat
push
ficoms
dec
shll
mov
adc
cmpsb
or
sarl
dec
fcmove
daa
and
push
push
das
mov
inc
in
jecxz
pop
xor
jmp
ss
daa
jg
push
mov
outsb
push
xchg
pop
jne
sub
xchg
push
cmp
cld
fsubs
sub
or
jnp
shlb
js
or
mov
jae
scas
imul
out
adc
popf
mov
bound
xchg
lret
cmp
popf
sub
pop
inc
adc
or
and
xlat
icebp
xlat
and
stc
jmp
sub
sub
push
mov
push
jecxz
lahf
imul
loop
mov
adc
mov
sbb
loop
xchg
sbb
mov
or
in
dec
mov
dec
scas
pop
bound
sub
lcall
sub
and
sbb
fimuls
rcll
shrl
aam
lea
mov
xlat
stos
mov
xchg
pop
cmpsb
lret
movsl
inc
jge
pop
pop
pusha
rclb
push
push
addr16
enter
pop
xor
pop
lock
roll
add
lods
das
clc
and
fildl
pop
mov
stos
jmp
pop
cs
insl
cmp
jge
xor
repnz
fsts
les
dec
les
xchg
arpl
adcl
inc
aam
bound
jg
push
cltd
mov
xchg
cmpsb
int3
dec
arpl
inc
pop
mov
sti
xchg
sarl
pop
xchg
cwtl
jbe
inc
jo
shl
sbb
lds
fdivrs
aaa
jg
lret
inc
fs
dec
pop
mov
mov
lods
fwait
adcb
iret
nop
in
out
sbb
movsl
orb
outsb
fwait
xchg
icebp
hlt
je
jmp
xor
fwait
or
int
pop
xchg
mov
mov
lock
add
push
mov
pop
add
iret
inc
es
mov
pop
pop
mov
mov
repz
or
pushf
mov
xchg
dec
push
mov
int3
ret
icebp
cwtl
and
xchg
xchg
out
sub
mov
cmc
add
pop
and
sub
aam
jns
or
cli
adc
adc
icebp
dec
in
ljmp
jno
loop
test
cld
push
sub
sub
sbb
jmp
cmp
mov
fsub
cs
xchg
push
push
cmp
inc
and
add
xchg
pusha
and
jmp
xor
insb
fisttpll
xor
add
mov
mov
jmp
call
dec
xor
cli
mov
xchg
stc
jno
andb
mov
adc
sub
push
pushf
or
mov
imul
add
add
cltd
fs
lds
fistpl
mov
xchg
push
inc
test
mov
sti
std
arpl
push
std
adc
cltd
push
adc
mov
push
imul
aad
pop
in
nop
orl
inc
test
inc
out
sbb
add
les
sahf
push
jnp
flds
jne
jno
jle
push
mov
fcoms
lcall
inc
cli
push
inc
mov
mov
testl
push
push
popf
lret
fcoms
in
lret
mov
push
sbb
pop
pop
and
nop
dec
data16
fadds
in
xor
sti
call
stos
pop
add
sbb
push
jg
sbb
adc
hlt
stos
mov
push
inc
sub
outsl
mov
xor
mov
loop
fcmovnbe
dec
cs
aas
aam
and
cmc
inc
std
adc
mov
shrl
sbb
xchg
adc
fisttps
inc
movsl
push
push
imul
sti
cmpps
addr16
shrl
ds
nop
pop
mov
or
or
hlt
data16
pop
inc
sarl
ss
pop
mov
jo
loopne
mov
aam
jne
push
dec
pop
dec
lods
repz
fstl
pusha
and
and
fld
push
out
movsl
add
js
and
mov
dec
imul
addb
jmp
mov
ficompl
xchg
lods
adc
cltd
jne
jno
gs
and
arpl
cmp
xor
lcall
enter
jb
mov
cmp
imul
push
hlt
iret
gs
pushf
sub
mov
push
mov
jbe
in
mov
sbbb
js
sbb
push
jecxz
lods
pop
negb
in
lods
popa
ja
adc
jl
mov
andl
ror
xchg
adcb
cmp
stos
int3
sbb
xchg
aam
ja
pop
leave
popf
lock
sub
fsubl
cbtw
int3
icebp
sub
pop
movsb
inc
jbe
aad
jg
dec
ljmp
addr16
mov
mov
adc
imul
adc
push
ljmp
pop
dec
mov
in
and
mov
dec
aad
sbb
xchg
aam
mov
cmc
xor
and
push
jnp
fs
das
stc
popa
lahf
mov
push
int3
sub
xor
icebp
daa
push
inc
in
cmpsl
inc
fwait
popf
xor
mov
or
add
cmpsb
mov
scas
int
mov
adc
lea
sbb
lahf
fcoms
xor
out
sahf
clc
inc
dec
xchg
aas
cmpsl
mov
insl
repz
mov
jbe
inc
push
and
lods
mov
imul
mov
pushf
push
lret
push
xorl
add
inc
ror
push
push
and
ja
cmpl
jns
nop
and
jle
mov
pop
sub
or
das
jge
sbb
cltd
fsts
mov
pop
test
roll
jae
lods
xorb
subb
adc
pop
or
fs
daa
test
xchg
sti
xchg
pop
out
jo
dec
dec
dec
clc
xor
das
aam
jge
pop
ja
orb
lahf
imul
sub
add
adc
cmp
stc
lods
aam
cltd
cmpsb
or
mov
mov
xchg
mov
mov
dec
push
sub
mov
push
negl
mov
inc
pusha
mov
dec
fadds
xchg
daa
mov
fcmove
mov
mov
xchg
push
gs
addl
and
adc
sarl
ss
dec
pop
sahf
mov
setl
in
in
add
mov
testl
addr16
push
push
pop
inc
mov
or
or
lods
in
aaa
mov
pop
inc
fdivrl
jge
insl
ja
sub
out
hlt
jo
ja
sarl
mov
jmp
and
negb
jb
in
lods
xlat
push
mov
addl
aas
xor
jae
test
pop
mov
outsl
mov
outsb
dec
aad
sub
sbb
xchg
mulb
inc
testb
jecxz
ret
xchg
lcall
dec
adc
push
lret
rorl
xor
int3
aad
push
aad
fstps
rcr
xor
aam
jo
and
push
mov
adc
jp
int
ljmp
sbb
mov
movsb
cld
dec
jb
mov
dec
add
outsb
or
iret
test
xor
push
lahf
push
loop
push
mov
jno
sub
pop
cmpsl
lock
int
xchg
out
imul
lods
fsubrl
insl
notl
xchg
imul
ljmp
mov
mov
leave
mov
jb
movsl
pop
mov
cmp
stos
sbb
sub
xchg
in
xor
or
popa
sbbl
test
inc
xchg
mov
lds
sbb
xchg
jp
jb
or
sub
adc
and
or
lods
lahf
push
pop
addr16
sub
sub
popf
adc
lods
inc
inc
iret
cmp
mov
pop
or
loop
mov
enter
repz
hlt
icebp
hlt
fisubrl
repnz
mov
fildl
daa
js
lahf
or
mov
and
inc
out
in
lcall
fwait
mov
and
jno
bound
add
jmp
sti
mov
pop
fists
fs
xchg
push
mov
cmpsb
cmp
mov
cmp
cmp
in
insb
or
pop
ja
fs
mov
push
jbe
lea
ds
and
cmp
push
or
ja
nop
cwtl
pop
outsb
mov
repnz
push
adc
cld
lock
adc
popf
and
jmp
dec
bound
dec
pushf
stos
mov
and
cmpsb
std
sbb
rorl
add
mov
std
push
insb
or
clc
outsl
push
lret
mov
and
or
sbb
xchg
aaa
xor
jae
movsb
xchg
jmp
pop
push
pop
push
xor
xor
cwtl
mov
pop
cmpsl
xchg
cwtl
loopne
jmp
xor
testb
ds
jbe
inc
in
or
lods
dec
pop
jg
add
and
push
cltd
push
aaa
insl
and
popf
sub
cld
call
cmc
in
fstps
cmp
insb
icebp
ss
sub
xlat
add
xor
popa
fisubs
lahf
mov
out
out
dec
sbb
lahf
push
faddp
out
psllw
adc
fisubl
lea
mov
xchg
push
cs
pop
adc
sbb
inc
sub
dec
push
cmp
push
mov
test
imul
roll
sahf
sub
sub
jb
in
loopne
fnstcw
mov
movsb
fadds
cltd
inc
cmc
push
mov
clc
jae
ljmp
xchg
pop
push
push
add
aam
cmp
and
and
mov
jge
cmp
adc
dec
sbb
fmulp
xor
scas
pop
fisttps
addr16
sbbb
les
repnz
addl
aas
mov
push
stos
jecxz
ss
push
inc
mov
mov
int3
sahf
sub
push
cmp
xor
sarl
xchg
sbb
push
add
xchg
push
inc
arpl
sbb
xchg
repz
sahf
cli
insb
sub
lods
stos
mov
std
xlat
adc
cmp
add
xlat
cmp
mov
sbb
scas
inc
loopne
stos
dec
dec
js
adc
imul
dec
inc
xor
mov
arpl
pop
adc
out
and
xor
mov
inc
xlat
in
sar
xchg
mulb
movsb
mov
lahf
inc
inc
xchg
jle
test
cmp
pop
mov
and
mov
mov
cmp
or
repz
leave
mov
inc
hlt
or
into
push
imul
out
into
dec
sti
mulb
pop
nop
lods
mov
int3
dec
stos
sbb
outsb
xchg
push
inc
cltd
fists
pop
int3
push
into
inc
sti
je
xchg
cmpb
cmpsb
sub
sub
xor
pushw
lret
out
out
add
xchg
lds
stc
sub
leave
adc
jl
mov
dec
rorl
jo
es
addl
frstor
outsb
cmpsb
popa
push
daa
sbb
inc
or
xor
lcall
pop
jp
imulb
and
xchg
sbb
in
xchg
mov
dec
fdivrs
subb
cld
data16
push
ljmp
adc
fwait
testl
loop
out
clc
test
hlt
out
pop
jmp
xchg
jns
mov
out
fcoml
pop
push
sub
data16
das
ja
mov
lret
in
insb
xor
dec
push
mov
nop
mov
sbb
mov
fstl
jg
sbb
mov
lcall
and
add
into
adc
jg
mov
jb
test
mov
out
mov
cmp
rorb
lret
das
mov
or
mov
jge
lock
xchg
sub
dec
sbb
enter
ljmp
mov
xor
out
arpl
sbb
lret
in
shll
lahf
jnp
lock
lock
mov
xor
lods
rorb
push
xchg
mov
mov
pop
adc
push
or
sbb
mov
cmp
das
cwtl
lcall
mov
hlt
sarb
push
lods
fiaddl
mov
pushf
cmpsl
xchg
imul
push
repz
sub
adc
pop
xchg
pop
mov
movsb
pop
pushf
imul
push
test
cmp
ljmp
stos
pcmpeqb
jne
dec
int
sbb
rcr
push
pop
mov
lcall
pop
push
cmp
ja
testb
dec
je
rcrb
neg
or
push
add
es
lods
sbb
movsl
adcl
and
and
iret
push
outsb
or
notl
xor
or
push
and
in
sbb
adc
into
imul
iret
out
iret
mov
mov
jb
xor
insl
into
adc
sbb
mov
lods
jle
out
scas
lret
lret
ret
xor
cmpsl
mov
xor
push
dec
lret
into
shll
or
stos
or
std
notl
xchg
dec
popa
and
gs
test
nop
shlb
inc
push
stos
insb
or
test
loopne
mov
pushl
gs
call
lahf
pop
sbb
mov
ficomps
cli
adc
mov
lods
cpuid
cmp
mov
push
sarl
xor
and
cmpsb
lock
out
mov
add
jnp
pop
out
outsl
repnz
aas
test
lods
das
idivl
imul
mov
add
and
push
imul
popf
nop
jbe
sbb
call
inc
adcl
rorb
mov
lret
fisttpl
mov
imul
dec
jp
or
push
push
in
and
iret
push
push
pop
inc
cmpsb
or
xchg
cmp
movsl
xor
ljmp
adc
je
xchg
sarb
in
mov
mov
repnz
or
aad
call
nop
cld
insl
or
mov
dec
arpl
lock
cmc
or
add
fwait
in
push
mov
ljmp
sbb
or
out
out
cmpsb
icebp
loope
add
or
inc
xor
lds
jae
mov
and
in
gs
js
mov
sub
inc
sub
xor
pop
lret
ss
pop
adc
add
sbb
out
test
iret
fnop
add
pop
dec
xchg
inc
sub
ret
sbb
sbb
push
jae
movsb
test
sbb
mov
sbb
jns
loope
addl
lcall
push
mov
leave
push
outsl
adc
or
je
popl
jp
jl
xchg
or
sub
pop
pushf
mov
mov
stc
jmp
and
mov
fwait
sbb
fistpll
clc
xor
dec
mov
fldt
stos
pop
xlat
jge
subb
push
lret
aaa
mov
rcrb
add
adcb
push
and
pop
add
ret
add
mov
push
into
xor
sbbl
sub
out
gs
ljmp
ficoms
mov
add
ret
pop
jmp
rorl
jl
fcoms
popf
xorb
push
mov
leave
adc
aam
adcb
fildll
mov
mov
daa
leave
ds
dec
loope
xchg
jbe
sbb
sub
ds
or
out
dec
or
enter
loope
pop
int3
mov
orl
data16
dec
mov
gs
subl
mov
enter
roll
jge
imulb
mov
dec
les
stos
movsb
xchg
jp
aad
js
dec
lahf
dec
and
mov
lock
fmul
push
xorb
or
imulb
out
cmc
repz
leave
inc
imulb
aam
aam
or
adc
pop
mov
scas
mov
xor
cmp
pop
insb
cli
add
push
mov
mov
les
cmpsb
faddl
dec
add
out
push
xchg
ljmp
mov
push
std
mov
cmp
mov
data16
sub
decl
add
dec
leave
xchg
std
ja
sbb
fmulp
inc
add
rorb
cld
mov
pop
jns
mov
inc
inc
out
or
pop
xchg
fists
jns
push
popa
loopne
orl
xchg
mov
cmp
dec
cwtl
adc
rcll
out
test
push
sub
fisttpll
cmpsl
shr
stos
pop
jnp
outsl
call
das
cmc
xchg
jns
add
xchg
es
jns
fidivl
add
pushf
sbb
mov
cmovg
adc
or
fsubr
mov
and
mov
add
daa
and
sbb
into
sub
std
mov
int3
xor
loop
push
mov
and
add
in
or
jno
sbb
adc
push
push
sahf
sarl
cmp
pop
scas
pop
xor
add
pop
xor
fwait
adc
ret
adc
jne
push
aad
xor
aas
sbb
cwtl
mov
loopne
or
cmp
pushf
jne
adc
test
in
loopne
dec
mov
dec
loopne
lcall
jne
out
pop
pop
ficompl
sub
jge
push
mov
incl
sub
xor
mov
adc
pop
mov
dec
inc
shl
push
mov
xchg
and
call
repnz
pop
jmp
pop
xchg
mov
xorb
push
xor
inc
jno
xchg
mov
sbb
jae
pop
push
xchg
pop
adc
shrb
jl
dec
adc
mov
push
fs
movzbl
ss
cwtl
repz
ja
mov
jb
sub
dec
shl
cmp
std
and
cmp
aam
jbe,pn
pop
dec
xchg
loope
jns
pop
loopne
push
fdivs
mov
scas
dec
icebp
stos
adc
and
out
jl
ljmp
jnp
fimull
adc
lods
mov
xlat
fldt
jno
dec
out
ret
push
mov
callw
sub
pop
mov
inc
xchg
cmpsb
lret
add
mov
shld
adc
and
insl
hlt
add
shr
mov
or
clc
fsubs
cmp
dec
sti
jnp
pop
push
es
fldcw
jge
in
inc
pop
dec
or
xor
rclb
aam
jp
out
sub
out
or
push
push
fisubrs
loopne
outsb
and
mov
inc
push
mov
xor
ret
adc
add
in
xchg
sub
jp
dec
andb
push
xchg
mov
xchg
jle
xor
ret
movsb
push
sbb
mov
lods
je
test
pop
out
and
fimull
pop
je
fwait
adc
ja
repnz
or
clc
xor
cltd
xor
rcr
sub
in
cs
arpl
adc
and
xchg
les
js
mov
fisubrl
pop
fmull
mov
aam
mov
jecxz
lcall
daa
jge
fs
xchg
sbb
shlb
icebp
mov
and
sarb
xchg
lods
sbb
push
pop
mov
xchg
jle
inc
pop
pop
mov
ret
lods
imul
sbb
mov
xchg
mov
push
mov
push
iret
cs
negb
and
mov
dec
inc
rorb
rorl
mov
pop
rorb
in
push
fmull
mov
lahf
outsl
sbb
enter
adc
cmp
push
add
inc
test
sub
add
btc
pop
dec
scas
std
sti
push
mov
fsubrs
outsl
into
jno
mov
orb
pushf
pop
popf
add
out
roll
cs
sbb
repnz
shl
xor
repnz
sub
js
sbb
in
xchg
add
and
dec
jge
jae
ss
xor
sbb
adc
adc
cmp
inc
mov
adc
pushf
cmpsb
movsl
orl
js
inc
or
xor
into
cld
pop
lret
push
je
enter
and
and
jle
mov
mov
in
jno
idivl
or
pop
inc
inc
mov
bnd
icebp
dec
clc
xchg
test
cmpsl
push
mov
xchg
je
lds
js
push
mov
sbb
stos
and
inc
ss
cmp
aaa
cltd
popf
pop
xchg
in
xchg
jae
out
icebp
fistpll
xchg
sti
xor
fwait
xchg
repnz
test
div
pop
cmc
sub
push
push
cmc
sbb
sub
fisttps
xchg
jb
mov
loope
jle
push
dec
insb
repz
push
lea
lods
cmp
push
pop
and
aas
and
push
fwait
cmp
add
xchg
dec
sub
daa
cli
loop
cmp
add
xchg
scas
xchg
pusha
add
int3
push
push
rcll
xor
xchg
divb
lods
pushf
push
xor
shll
aad
or
outsb
dec
scas
inc
lret
push
inc
adc
jp
mov
mov
bswap
add
dec
push
aad
dec
xchg
subb
push
pop
xchg
test
cmc
dec
sub
lcall
imul
insb
pop
loop
pop
sub
lcall
xor
pop
push
mov
pmaxsw
rorl
inc
std
in
mov
loopne
xor
int3
or
sbb
push
test
xchg
inc
cmp
cmp
add
dec
pop
divb
in
inc
mov
sbb
add
and
int3
imul
ret
adc
loope
cmp
je
nop
fcomps
nop
js
sub
imul
test
into
inc
fmul
dec
lahf
or
ljmp
outsb
push
adc
imull
and
or
bound
jns
fcomps
js
jmp
clc
inc
test
je
jp
push
in
rcll
nop
xorb
mov
daa
mov
shlb
arpl
sub
iret
inc
enter
movl
dec
ljmp
push
dec
lcall
sbbb
inc
xor
xchg
mov
test
or
xchg
fnstsw
cmp
cmp
psubsw
fs
rcll
cmpsb
cmp
push
sub
and
pop
or
cmc
xchg
gs
je
ja
in
test
insl
loopne
or
xchg
mov
jnp
scas
shrl
in
mov
insb
mov
xchg
inc
cld
cmpb
push
and
mov
dec
jbe
push
xor
inc
loope
push
cs
mov
cli
inc
xor
push
and
ljmp
pop
push
lock
or
shll
pop
shlb
repz
out
sti
or
outsl
jmp
lea
dec
clc
inc
sbb
sbb
xchg
push
es
rorb
pop
clc
push
cmpsb
fldt
jg
xor
push
and
push
in
ljmp
adc
rcll
shll
push
shrl
cmp
fsubr
pop
fsubs
xchg
loope
daa
jmp
repz
jle
dec
imul
xor
mov
lods
xor
mov
add
mov
stc
xchg
lret
pop
jb
or
dec
push
andl
sbb
or
xlat
aad
aam
sbb
pop
out
mov
fildl
lods
and
sbb
sub
push
fwait
mov
pop
lcall
xchg
inc
mov
lcall
cmpsl
or
dec
roll
sbb
sti
nop
sbb
add
pusha
cmp
mov
rcll
aam
pop
ss
clc
icebp
push
mov
repnz
imul
shlb
mov
xchg
xlat
gs
mov
pop
and
cmc
fstpl
sbb
pop
lret
jp
xchg
mov
popf
push
out
cmpsb
xor
lahf
mov
dec
sub
in
call
and
loop
lock
leave
add
or
jo
pop
aam
add
aam
push
lcall
or
cmp
loopne
imul
xor
push
bound
je
ret
in
add
mov
sub
enter
sub
adc
mov
push
cmp
int
repz
dec
pop
hlt
dec
xchg
ficoms
inc
push
fisubl
dec
pop
mov
xchg
jmp
andb
dec
mov
inc
icebp
pop
repnz
lea
mov
cmpb
std
iret
or
nop
push
jae
jbe
add
mov
jecxz
stos
pop
pop
sub
jge
ss
sub
xchg
sbb
push
inc
and
xchg
push
call
mov
push
cmp
jno
cmp
faddl
divl
xchg
ss
in
and
xchg
mov
pop
fwait
test
adc
inc
mov
adc
clc
push
daa
loopne
out
xor
popf
mov
cmp
mov
mov
or
push
leave
lock
jae
out
cmp
inc
in
xor
outsb
cmp
add
jmp
faddl
jnp
sub
pop
mov
aaa
sti
int
adc
dec
mov
sbb
les
shll
sti
mov
stc
les
test
push
mov
mov
movsl
pop
inc
test
or
clc
adc
aas
mov
in
mov
inc
shr
and
sub
push
add
aad
cli
push
and
pushf
pop
sub
and
jne
inc
dec
dec
out
sbb
jbe
hlt
clc
cmpsb
fimuls
and
clc
add
inc
add
mov
mov
mov
imul
and
xchg
fbld
repnz
lret
and
out
lret
xchg
mov
in
and
push
adc
mov
mov
pop
jge
pop
jne
pop
shr
in
jle
das
test
jno
incb
dec
xchg
mov
lds
ljmp
mov
sub
fmuls
dec
pop
fsubr
or
std
dec
jge
add
cmp
ret
xor
popa
repnz
inc
stc
and
pop
in
push
in
pop
adc
dec
fnstcw
sub
arpl
testb
mov
xlat
push
scas
int
test
fwait
cli
test
add
mov
lods
xor
mov
jns
call
std
lret
push
or
pop
push
movsl
push
fiadds
dec
testl
xor
ds
stc
push
inc
mov
inc
test
in
pop
and
jne
mov
pop
or
inc
loop
or
xchg
push
add
pusha
cltd
inc
push
mov
mov
fdivl
cmpsb
in
pop
popa
pop
cmp
das
mov
mull
cmpl
lock
leave
sbb
scas
push
data16
add
fucomi
pop
or
les
fadd
inc
xchg
xchg
adc
adc
mov
jp
fdivs
fimuls
pop
arpl
mov
xchg
movsb
cmpsb
imul
fdivr
ret
sbb
stos
repnz
in
jge
pop
bound
rcll
je
dec
out
adc
xchg
xchg
ja
vpaddd
scas
sub
jl
ss
add
lea
mov
out
and
mov
or
mov
pmaxsw
lcall
stc
sbb
xor
sub
mov
aad
jl
mov
mov
jle
insl
loopne
jmp
cs
xchg
mov
enter
es
add
add
sub
add
rolb
add
push
adc
das
fs
cmp
mov
mov
ss
mov
pop
insl
sub
or
aas
adc
inc
cmp
adc
lea
sbb
lea
fwait
and
rcl
xchg
lock
cwtl
cmp
stos
xchg
jl
and
cld
test
xor
hlt
xor
dec
je
push
cmp
push
popf
les
sar
arpl
add
ret
or
int
lock
shrl
mov
aam
cwtl
ljmp
mov
xor
xchg
pusha
jg
mov
sbb
xor
in
jg
aad
push
dec
push
jge
in
sbb
push
cld
call
push
out
test
sahf
lea
add
insl
data16
ds
add
xor
xor
mov
push
loope
push
push
repnz
xlat
jno
and
popa
test
cmp
adc
or
adc
imulb
mov
ja
repnz
add
and
xorb
in
mov
mov
negb
je
out
adc
pop
orl
adc
pop
ja
loope,pt
stos
lods
sbb
roll
xchg
xlat
sbb
outsl
loope
cmp
mov
ret
mov
mov
mov
dec
push
popf
sarb
sub
mov
xchg
mov
cmc
add
aad
andl
cld
jl
or
xlat
js
cmp
shl
jnp
js
cs
roll
jnp
loopne
push
sbb
lcall
stos
cwtl
lods
dec
movq
add
icebp
mov
xor
out
out
rcl
dec
sahf
jnp
pop
jne
out
dec
jmp
or
cmp
and
mov
push
or
ret
sbb
out
lret
das
ljmp
pop
inc
je
imul
testb
and
or
mov
mov
add
mov
aas
pushf
lret
hlt
sub
sub
jecxz
aas
rorb
inc
cmp
je
sbb
fldcw
mov
lret
add
cli
dec
push
fists
aad
jbe
xor
jno
mov
sar
adc
testb
sbb
xchg
and
pop
jb
xchg
lock
push
cmp
jmp
mov
into
stos
pop
cld
pop
aad
mov
inc
mov
scas
sti
jp
and
lock
mov
leave
xor
mov
cmpsl
xchg
aad
cmp
sub
inc
sbb
sbb
stos
adc
jne
cmpsl
jns
aam
push
repz
scas
ret
adcb
mull
jae
xchg
push
push
data16
sti
cld
xor
push
pop
push
jno
mov
pop
addl
jbe
in
aas
mov
dec
iret
clc
ss
cld
sbb
pusha
mov
imul
or
cmp
in
jl
pop
adc
icebp
mov
push
clc
aam
shll
mov
fisubl
std
sub
lret
jno
mov
pusha
or
cld
cmpsb
gs
sub
jne
sbb
pop
nop
jge
enter
inc
sbb
iret
pop
add
and
mov
sub
add
xor
add
out
cltd
inc
arpl
xchg
int
movsl
inc
imul
loope
outsl
test
mov
push
ficomps
js
push
sbb
push
ficomps
popa
nop
push
fsubrl
inc
into
iret
inc
sbb
inc
xchg
jo
loop
lock
mov
push
ds
adc
cmpsb
jae
ljmp
mov
arpl
ret
std
in
out
int
int
loope
or
push
lds
ret
mov
jb
mov
mov
sub
add
std
dec
dec
test
or
test
cs
adc
imul
pusha
in
mov
push
xlat
xchg
jbe
xchg
mov
aaa
std
addr16
fdivr
out
cmc
cmc
leave
hlt
push
out
xchg
cmp
mov
add
cmc
push
leave
arpl
mov
mov
repz
aad
jns
pushf
jae
pop
mov
and
stos
dec
loopew
std
add
sub
pop
into
push
push
inc
fmull
nop
xor
pop
xor
sub
pop
cmp
jp
jl
dec
jge
inc
stos
orb
loop
mov
xchg
sti
jno
cmp
mov
xor
cli
sub
jmp
repnz
mov
je
add
jmp
mov
mov
cmp
lret
in
mov
sub
rcr
pop
call
fisubrs
fstp
mov
popf
dec
cmp
jp
sbb
pop
xchg
cltd
push
or
mov
int
movsl
test
and
push
jle
dec
sub
call
scas
xchg
jno
jp
pushf
dec
leave
out
scas
mov
or
shlb
mov
xchg
jecxz
insl
adc
lea
dec
in
pop
mov
sbb
push
jb
in
push
fnstcw
je
mov
pop
clc
xchg
aaa
mov
ffreep
in
rol
call
mov
dec
or
enter
add
xchg
adc
add
bound
out
push
fisubs
lret
cmp
sbb
mov
movsb
mov
test
mov
or
add
test
lds
xchg
int3
sbb
pop
out
cmpsb
sbb
out
mov
cmpl
rclb
mov
nop
inc
push
cmp
sub
rcrb
out
movsl
mov
or
cli
push
in
xchg
popf
sbb
daa
jl
mov
sub
dec
mov
and
push
mov
fs
and
out
jne
sahf
in
je
out
inc
rcrl
dec
daa
pmaxsw
jge
cwtl
xorl
mov
sub
or
sub
mov
jb
dec
and
icebp
sub
sbb
inc
jbe
std
notb
cld
jecxz
mov
rorb
mov
out
movsb
jge
rclb
nop
out
mov
xor
fs
movsb
icebp
sbb
inc
xchg
out
fsub
inc
mov
cmp
jo
mov
xchg
pop
addr16
dec
mov
mov
sbb
sub
orb
push
push
repnz
clc
shlb
dec
cmpb
xchg
daa
dec
int
and
dec
jge
sar
sbb
jmp
mov
dec
fstl
pop
push
fldcw
jg
push
call
in
sahf
lea
jg
insl
test
xor
movsb
scas
mov
pop
test
popa
test
lcall
sbb
mov
flds
inc
cmpsb
enter
sbbl
gs
lret
jmp
inc
xchg
jb
clc
out
loope
bound
mov
and
ja
push
cli
xlat
or
cmc
fisubrs
sbb
movsb
mov
rcrl
mov
ss
loopne
xchg
cmp
jne
out
iret
push
sar
and
cmpsb
pop
inc
sahf
cltd
xchg
shlb
fucomi
imul
pushf
dec
cmp
sub
jmp
sub
lret
notl
lret
inc
pop
pop
push
cmp
and
adc
or
add
mov
je
and
jg
cmp
cmp
in
pop
mov
outsb
mov
xor
mov
and
shrb
pushf
xor
lcall
ja
pop
xlat
hlt
add
out
sahf
enter
enter
sub
sahf
out
lahf
xor
arpl
ds
pushf
fdivl
push
add
jg
filds
mov
adc
jne
clc
add
pop
adc
jg
neg
fadds
ficoms
sahf
xchg
fistpl
lret
cli
or
dec
test
and
jge
out
inc
cmp
inc
sub
xor
and
sbb
mov
push
out
push
aas
add
jnp
shl
or
jl
sbb
mov
pop
sbb
jecxz
scas
mov
int3
jge
jecxz
mov
sahf
sbb
push
in
lock
mov
fnsave
jle
inc
push
dec
cmpsb
jns
das
push
add
sbb
add
cmp
cmpsb
aaa
jne
dec
sbb
lock
pusha
in
inc
aad
pop
push
adc
out
adc
out
mov
test
mov
ret
mov
sbb
fs
dec
in
jmp
push
xchg
push
lcall
lret
out
test
mov
mov
or
dec
and
mov
inc
data16
rcr
add
iret
mull
out
daa
movl
push
ret
xchg
out
je
push
adc
xchg
pop
mov
adc
rorl
inc
and
pop
adc
mov
je
mov
xor
jg
jbe
push
pop
push
jnp
repz
js
hlt
add
inc
mov
int3
nop
cmp
aam
pop
sbb
or
mov
into
stos
imul
push
sbb
inc
jo
cs
xchg
ror
mov
dec
fabs
outsl
mov
jp
das
xor
and
sub
addr16
xchg
cmc
xchg
insb
push
rcrl
xor
xchg
loopne
jmp
xor
xor
clc
xchg
lds
add
mov
ficomps
arpl
ret
dec
test
fsts
ret
js
aas
popa
sub
pop
scas
push
je
mov
xor
lods
cmp
xchg
pop
cwtl
insl
daa
jp
mov
out
ds
iret
inc
lods
rcrl
pop
push
in
pop
jbe
divl
in
in
and
add
inc
dec
call
ret
push
lea
mov
loopne
testl
and
jnp
pusha
cltd
dec
addr16
mov
inc
pop
ja
in
arpl
or
cmc
dec
sbb
mov
jmp
shr
subl
ja
push
scas
adc
push
and
iret
mov
clc
xor
lret
cmp
fbld
adc
outsl
or
hlt
dec
xchg
jno
xor
sub
sti
bound
dec
scas
lret
adcb
mov
pop
cmp
pop
lcall
mov
jae
outsl
rorb
pop
andl
push
cld
and
sbb
fs
ret
call
pop
cmp
les
fsubrp
mov
sub
stc
loopne
mov
scas
mov
shlb
adc
loop
mov
call
xor
xchg
or
add
inc
mov
mov
xchg
ret
inc
jo
addr16
lret
shll
adc
mov
and
or
pop
das
cli
ss
xchg
jb
pop
xor
fdivs
aaa
repnz
adc
mov
jl
xchg
std
loop
sti
jne
fistps
mov
fistps
outsl
loop
xchg
sbb
mov
movsl
sub
pop
or
inc
ds
inc
cmpsl
sub
mov
fcoms
fstl
push
add
shl
nop
inc
adc
push
xor
mov
cli
cmpsl
fldl
je
push
pusha
loopne
mov
fs
fs
inc
cmpsb
sub
imul
iret
or
push
pop
into
sbb
mov
xchg
repnz
sub
ret
cmp
inc
rolb
mov
xchg
dec
mov
sarb
pop
addb
sub
mov
ss
push
sbb
js
pusha
mov
xchg
add
inc
jbe
sub
bound
inc
js
enter
xchg
inc
sbb
call
dec
test
sub
adc
in
ret
stos
test
xchg
add
xchg
cmp
rcrb
mov
and
ret
fistpl
xchg
or
and
mov
add
xor
lret
xchg
cmpsl
or
push
out
xchg
or
xchg
or
push
xor
out
scas
pop
jnp
cmpl
in
xchg
decl
loopne
addl
mov
repnz
xchg
mov
cmp
add
xchg
lock
imul
sub
insb
push
mov
lcall
jg
mov
mov
loopne
push
sbb
mov
lret
aaa
or
fisubrs
cmp
rolb
movups
sarl
and
pop
add
add
push
fildl
jl
jmp
pop
and
shll
dec
frstpm(287
push
stos
pop
fsubp
in
adc
xchg
ret
test
cmp
mov
dec
mov
sti
add
pop
psubusb
ret
repnz
movsb
int
std
xor
push
pop
fwait
mov
dec
add
sbbb
and
cmp
sbb
jp
sub
aaa
movb
rorb
dec
shlb
popf
fisttps
mov
or
pop
ss
aam
and
mov
inc
int3
adc
sub
test
scas
test
ds
pop
jnp
icebp
andb
fistpl
inc
fldl
lds
aam
loopne
xchg
jl
in
fisubrl
mov
cmp
cmp
push
imul
shll
leavew
sub
iret
push
pop
popa
jmp
sbb
sti
pop
xchg
addl
in
mov
call
add
mov
mulb
or
les
negl
std
imul
movsl
sbb
lock
mov
push
addr16
ds
dec
sbb
mov
add
or
push
inc
xor
xchg
into
notl
jns
add
or
mov
test
or
lret
arpl
rcr
add
pop
cmpsb
je
imul
out
and
fisttpll
test
xchg
mov
mov
pop
adc
and
movsl
aad
lahf
out
lahf
push
adc
push
sub
mov
mov
dec
insl
loopne
dec
or
push
shrb
rcrl
fwait
mov
dec
cmp
xchg
add
loope
pop
cmpsl
sub
je
sar
jno
rclb
filds
ror
jle
inc
sbb
xchg
popf
dec
jns
pop
mov
test
sahf
cmc
mov
cmp
sbb
dec
testb
stc
dec
ljmp
mov
decb
and
pop
pop
add
jns
mov
dec
rol
cmc
fdivrp
test
mov
hlt
jge
in
stc
imul
lret
insb
inc
push
pop
outsl
jmp
pusha
les
mov
jns
addr16
sbb
ret
or
loope
dec
mov
fdivs
mov
scas
push
stos
pop
inc
and
pop
and
sahf
sti
inc
mov
push
cmp
xchg
jns
iret
xlat
or
std
arpl
add
rcrb
cmp
daa
fimull
movsl
enter
lret
lcall
mov
mov
lcall
andb
sub
call
stos
nop
ds
loopne
adc
leave
and
adc
ljmp
movsb
lea
sbbl
cmpsb
sar
test
lret
fmull
repnz
inc
adc
mov
in
mov
cli
stc
push
pushf
es
lcall
push
pop
hlt
scas
mov
movsl
rcll
cwtl
mov
fisubl
std
fsubl
sbb
lods
jge
outsb
enter
jecxz
cltd
xchg
jbe
ds
leave
jo
jae
clc
imul
cwtl
sbb
lahf
adc
jno
mov
and
mov
cmpb
movsl
add
iret
into
cmc
out
test
and
add
mov
mov
cmp
popf
mov
inc
xchg
lret
decl
repnz
and
push
jmp
mov
mov
dec
cmc
pushf
mov
adc
add
stos
inc
dec
push
andl
mov
lods
enter
sbb
or
cmp
in
insl
loop
push
adc
jge
inc
outsb
test
or
arpl
loop
stc
addr16
or
xchg
pop
cmp
jno
stos
loope
sub
or
negl
aaa
mov
mov
sbb
sbb
push
int
jbe
stos
dec
gs
inc
add
inc
jns
pop
add
in
dec
jge
xor
data16
mov
jb
mov
pusha
push
inc
inc
add
pop
mov
icebp
xchg
ds
dec
inc
fcoml
jo
jne
fstps
jp
pop
stc
fcmovnbe
pop
stos
sub
mov
das
pushf
jecxz
cmp
popf
jmp
repz
int
xor
outsb
mov
lods
testb
or
cli
or
jecxz
cmp
sub
adc
pushf
push
test
push
add
out
pop
xchg
lds
inc
cmpsb
aam
leave
mov
mov
mov
xchg
inc
mov
clc
pop
std
test
jg
pushf
rclb
rolb
xchg
imul
jge
cmpsl
xchg
pop
mov
jl
xchg
test
push
nop
jns
ljmp
pop
fiadds
dec
les
loope
inc
movsb
cld
xor
dec
lea
add
sub
adc
lahf
mov
xor
fnstenv
dec
mov
outsl
lcall
jecxz
loopne
int
popa
dec
inc
mov
xchg
adc
inc
pop
test
xchg
add
aam
xor
cmc
add
rcll
dec
xchg
mov
xlat
shll
push
dec
aam
imul
out
out
iret
fs
lds
sbb
aas
inc
xchg
daa
jge
addr16
push
jge
adc
jbe
leave
jae
sahf
cmp
cmp
and
inc
dec
popa
xchg
stc
cmp
mov
lret
sub
push
sarl
call
inc
loop
pop
stc
inc
idivb
into
sub
arpl
dec
inc
mov
pushf
sti
jb
sub
mov
mov
cltd
in
aas
cmp
push
push
rclb
xor
sub
sub
mov
cld
jg
daa
push
orb
mov
test
sub
push
sbb
out
repz
scas
add
icebp
xlat
call
mov
ss
xor
pop
repnz
outsl
mov
ret
loopne
xchg
mov
jecxz
in
pop
xchg
pop
dec
adc
xchg
push
pop
sub
clc
fcmovu
in
out
mov
or
repz
sbb
pop
sub
enter
sti
dec
inc
push
sbb
push
mov
lods
push
mov
cmp
aas
ret
xchg
mov
xlat
test
sub
les
add
fistpl
push
dec
dec
inc
je
or
adc
jne
lods
dec
push
cmp
xchg
push
mov
and
mov
xor
xor
ret
fdivs
xor
es
and
push
pop
into
nop
add
cmp
inc
push
leave
movsb
push
push
mov
jmp
add
hlt
sahf
lret
ljmp
or
push
lea
cmpb
jo
pop
or
pop
mov
dec
inc
les
cld
dec
or
mov
shlb
mov
cmp
popa
xchg
mov
push
insb
imul
mov
scas
mov
fadd
fdivs
out
outsl
fsubrs
push
push
cli
and
push
xor
movsl
xor
add
aad
sti
in
pop
and
jecxz
cmp
addr16
mov
pusha
aas
pop
test
lahf
jno
mov
xor
xchg
pusha
or
inc
inc
loope
push
mov
mov
mov
adc
or
testl
cmp
cltd
or
in
shlb
sbb
sub
mov
mov
mov
xchg
stos
push
xor
iret
adc
imulb
mov
pop
mov
pusha
add
ror
cltd
fdivr
imul
xor
xchg
in
int
inc
mov
cmc
in
push
adcb
xchg
arpl
repnz
mov
test
add
or
and
addl
or
repnz
sbbl
scas
fs
les
pop
inc
xor
mov
xlat
inc
xchg
sbb
repz
loope
mov
add
jecxz
outsb
lahf
lock
insb
clc
scas
mov
rcrl
xor
fimull
int3
fcmovne
or
lock
cs
mov
loop
sub
imul
xchg
and
cltd
push
ljmp
clc
jle
std
dec
adc
and
mov
test
cs
cmp
cmp
dec
and
sub
pop
leave
jo
pop
lods
test
push
daa
sub
mov
lret
adc
or
nop
aad
push
inc
in
add
jmp
lret
mov
mov
ljmp
push
popf
arpl
int3
ror
out
inc
push
adc
out
ds
xor
mov
xor
cmc
mov
xor
sahf
or
mov
mov
pop
and
push
xchg
mov
adc
add
fcomps
inc
ss
jne
ss
in
cmp
hlt
out
adc
xchg
pop
or
ljmp
or
cli
cltd
sbb
incb
loopne
in
adc
inc
xor
adc
popf
add
cltd
mov
ffreep
sub
lahf
jnp
inc
repnz
add
mov
xchg
cs
int
les
dec
xor
sub
cmp
push
push
jo
mov
popf
xchg
mov
xchg
imul
enter
xor
and
cmp
mov
idivl
cmpsl
ret
dec
push
jp
dec
xor
push
pop
popa
add
add
imul
push
add
adc
mov
xor
cmc
pop
jae
fbstp
outsb
movsb
push
fistpll
out
out
shlb
jnp
es
sarb
sahf
and
dec
jae
pop
lret
icebp
xchg
pop
push
bound
or
xchg
fcmovbe
jecxz
sti
les
cmp
push
jmp
insb
mov
out
dec
push
push
xchg
jae
xor
inc
ds
push
push
movsl
les
jmp
testb
pop
jmp
cwtl
lds
addl
inc
mov
add
cmp
mov
and
push
adc
jle
cmp
jnp
pop
xchg
int3
jne
dec
out
and
stos
fstp
out
outsl
lods
pop
mov
and
xor
aas
std
out
int
cmp
sti
jg
aaa
mov
int
mov
fldenv
das
push
sahf
je
out
mov
lahf
jnp
vcvtss2si
or
inc
lea
leave
scas
inc
pop
ljmp
jl
and
add
mov
enter
push
inc
cltd
rcrb
xchg
jg
adc
rcl
lods
mov
add
mov
push
inc
fbld
in
in
sub
rcrl
sub
ja
out
shrl
test
jae
lods
xlat
pop
dec
cmpsl
test
cmp
mov
pop
dec
testb
out
rcrb
aaa
ss
adc
fwait
aaa
orb
es
stos
and
mov
stos
jne
mov
fmull
lods
pop
mov
push
pop
dec
jbe
fdivr
rcll
push
loopne
cmpsl
aam
fld
in
popa
shlb
hlt
out
inc
aam
pop
or
lahf
xor
pop
inc
mov
sub
icebp
ret
es
sub
data16
mov
cmc
adc
dec
pop
xor
pop
insl
cmp
nop
popa
lods
popf
test
adc
iret
mov
push
insb
mov
jno
es
fnstsw
dec
rsqrtps
dec
cmp
sbbl
les
add
daa
ljmp
xor
incb
les
inc
inc
mov
pusha
rolb
lcall
cs
repz
addr16
fisubl
xor
mov
mov
fs
xchg
xor
pop
push
xor
ja
mov
dec
out
or
shll
mov
scas
push
sarb
pop
jne
inc
das
bound
mov
xchg
jl
cmp
add
jl
push
mov
mov
fidivrl
add
dec
jns
mov
bound
arpl
xchg
xorb
mov
xchg
jnp
rcrb
stos
fisubrs
push
in
push
mov
push
addb
sbb
push
sahf
xor
jecxz
div
cmp
push
into
in
test
lret
adc
inc
in
loop
out
sub
scas
jbe
adc
test
popf
mov
jno
xor
add
push
loop
cmp
stc
push
or
push
jne
filds
push
xchg
je
into
pushf
nop
sbb
mov
inc
push
scas
cmpsb
inc
pop
cmp
hlt
push
adc
and
xlat
or
inc
repz
lods
dec
push
ds
repz
adc
imull
sub
cld
mul
ret
adc
xor
lds
mov
das
pushf
push
cmp
or
cltd
sbb
sub
fists
out
out
sub
cmp
loope
inc
inc
rorl
inc
int
ss
dec
cmpsb
hlt
pop
push
push
aas
test
adc
imul
mov
push
jne
inc
inc
push
andb
test
push
push
fucomi
sbb
in
or
lret
dec
sbb
xchg
rolb
pop
out
fldcw
mov
or
ja
cmc
jecxz
sahf
imul
sbb
and
js
repz
pushl
loopne
push
in
xchg
and
ja
mull
push
jge
bound
jns
daa
ret
push
add
je
daa
movsb
pop
push
pmuludq
jne
or
data16
lcall
push
loopne
leave
pop
mov
xchg
pop
loop
lret
fidivs
lahf
inc
cmp
cmovp
std
cmp
cmc
pop
sub
pop
aaa
loopne
mov
shrl
data16
mov
cmp
imul
jae
push
insl
test
sub
xor
mov
cmp
fsubs
and
rcll
es
cmp
xorl
adc
push
test
inc
pop
add
mov
mov
mov
ficoml
push
insb
cmpsl
xchg
push
push
dec
and
jge
xlat
mov
rorb
in
cld
fwait
cmpsb
outsb
adc
adc
insl
mov
jmp
or
into
stos
addr16
lcall
out
push
mov
cmp
dec
fisubl
hlt
aam
sbb
adc
ret
testl
xchg
jge
pop
mov
hlt
fsubrs
vmovaps
push
popf
cmp
shl
outsl
pop
insb
into
push
ds
xor
adcl
lods
mov
mov
jo
addr16
shlb
jns
add
jnp
mov
mov
pop
addr16
dec
aam
fmulp
stc
loope
sbb
pushf
pop
or
fdivs
cwtl
cmp
and
lret
mov
adc
push
mov
pop
dec
out
js
rcl
xor
xlat
add
lahf
mov
mov
test
mov
jae
pop
ret
outsl
ds
sub
push
inc
xor
or
or
add
leave
pop
adc
push
cmp
std
pop
mov
nop
clc
xchg
js
insb
mov
pop
cmpl
ds
loope
push
push
rclb
hlt
pusha
gs
das
cmp
or
jmp
jg
xor
and
test
out
sub
push
inc
lahf
lea
push
cmp
add
out
jo
dec
leave
lods
dec
out
lret
je
cmp
adc
stos
xchg
out
push
pop
mov
inc
popa
in
inc
push
adc
cmp
inc
jo
test
icebp
lea
push
push
repz
lock
into
cltd
cmpsl
stc
pop
popf
lcall
out
aaa
push
xlat
sti
jecxz
int3
les
cmc
test
sbb
inc
roll
lcall
jo
je
adc
add
cmp
aas
pop
rcl
xchg
jg,pn
fnstenv
mov
inc
cmp
jbe
jmp
test
mov
std
dec
lahf
cltd
outsb
andb
aas
sahf
enter
gs
lea
push
mov
push
fimull
or
in
pushf
push
out
jbe
jne
shll
mov
pop
add
iret
dec
out
xchg
jle
ret
mov
lods
imul
cmp
fistpl
cs
imul
add
repnz
neg
sahf
bound
outsl
lds
and
sahf
cmp
fdivrl
and
scas
repnz
movb
fidivl
add
iret
xor
dec
dec
and
lock
stc
and
pop
insl
repz
add
ds
xor
addl
mov
pop
iret
jl
dec
pop
lret
js
sub
push
test
or
mov
in
sub
pop
xor
je
jbe
add
add
arpl
das
and
add
iret
adc
jle
jge
stos
iret
lcall
xor
pop
lret
or
push
dec
ss
inc
cmp
cmp
sahf
inc
cli
sbb
add
add
xor
xlat
xchg
sbb
xor
lods
lock
jae
push
mov
or
and
dec
test
mov
pop
into
rorb
push
icebp
cmpsl
cmp
les
fwait
sarl
scas
inc
lods
pop
movsb
push
sbb
imulb
mov
and
dec
aas
pop
xor
hlt
inc
push
cmc
sub
test
pushf
add
in
mov
pop
adc
jb
pushf
outsl
imul
mov
xchg
mov
mov
xorb
out
ss
inc
loope
sub
aas
xor
and
sti
add
ret
sub
imul
sbb
pop
fbld
xchg
das
add
xor
sbb
add
mov
pop
out
push
xchg
cmp
inc
mov
stos
push
pop
sbb
fstp
adc
movsb
fstps
mov
stos
add
pop
outsb
xor
dec
xchg
dec
iret
xchg
cmp
lods
dec
movsl
mov
js
das
popf
and
cmp
jp
mov
pop
sbb
inc
push
in
imul
repnz
pop
stc
adc
or
lods
es
and
in
xor
jno
inc
push
cld
icebp
push
xor
sbb
push
test
ret
inc
jns
mov
fnstenv
sbb
sub
or
ss
imul
stc
pop
lcall
cmp
add
lcall
negl
pop
adc
inc
push
scas
jp
cmp
push
or
repnz
fucomi
jbe
adc
lcall
and
push
sbb
inc
lea
clc
roll
out
jnp
xor
sub
push
rcrl
xor
adc
call
xchg
cmp
push
sbb
fdivl
icebp
imul
lcall
insb
imul
jo
mov
add
and
enter
popf
std
insb
xlat
lock
xchg
int
inc
rorl
ret
je
pop
cs
out
xor
lods
jb
lods
fstpl
jmp
cmp
loope
call
push
test
sub
add
xchg
aad
adcl
pushf
mov
add
call
cmp
pop
addl
stc
push
adc
or
mov
sub
pop
out
js
addr16
jg
out
xchg
rcl
cmc
outsl
adc
fidivrs
adc
ljmp
sti
push
es
int3
loop
or
aaa
add
ss
fwait
jno
outsl
into
dec
inc
mov
adc
loope
cmp
push
pushf
sbb
mov
dec
outsl
div
movl
cmc
daa
cmc
out
iret
jno
lock
push
or
fs
mov
fcomps
jge
gs
cmp
aam
mov
sbb
jp
sub
pop
rolb
fbld
mov
add
cmpsl
test
aaa
mov
inc
inc
xor
pop
lret
mov
dec
adc
rorb
jne
movsb
pop
push
outsl
loopne
cmp
rolb
movsb
and
jb
mov
xchg
inc
pop
mov
mov
pop
xor
cmp
iret
pop
lods
mov
lahf
pushf
mov
loopne
hlt
jecxz
push
or
outsl
rcl
in
xlat
out
ja
pop
push
out
pop
lret
add
rcrl
adcb
imul
movsb
or
pusha
xchg
sub
ret
out
jp
mov
mov
xchg
pusha
out
mov
cli
movl
xor
xor
es
inc
mov
inc
pushl
sbb
pop
ficompl
jl
mov
sub
mov
mov
or
inc
in
dec
jbe
gs
mov
push
xchg
pop
mov
add
pop
call
inc
int3
mov
add
push
sub
adc
cmpsb
rorl
arpl
das
xchg
rcrl
cmp
mov
sub
imul
add
jno
repz
and
sub
inc
pop
lahf
lds
aaa
jo
push
imul
push
out
call
xchg
rorb
popa
and
cmc
lock
push
mov
mov
call
sub
leave
mov
xchg
cltd
xorb
jae
icebp
lods
jecxz
gs
fs
cld
pop
cmp
outsb
pop
or
pushf
pop
in
adcl
push
js
sub
loope
ja
mov
push
imul
jp
push
xchg
push
sti
sahf
outsl
sub
pop
and
mov
mov
dec
mov
and
insb
sbb
shl
mov
xchg
xchg
mov
xchg
mov
fldenv
fcoml
adc
mov
cltd
jns
mov
lret
mov
and
loopne
xchg
jl
jecxz
pop
add
xlat
sub
xchg
pop
movsl
std
aam
subl
mov
cmpsb
add
jb
adcl
mov
frstor
cmp
gs
inc
popa
out
xchg
out
push
stc
insl
xor
jnp
xchg
cmpsl
loop
insb
mov
xchg
iret
adc
ficoml
cmp
lret
inc
int
scas
scas
fadds
outsb
in
mov
cvttps2pi
pushf
sbb
cmp
insb
sub
dec
push
test
sub
daa
push
sub
jo
bound
hlt
sbb
push
inc
lock
push
aas
pop
mov
pushf
adc
sub
dec
xchg
loope
sti
cltd
repnz
mull
inc
pop
mov
lcall
adc
inc
insl
ficomps
rcrb
sti
orl
int
out
out
add
loop
pop
xor
outsb
pop
lea
push
enter
fcmovu
inc
inc
push
loop
mov
les
adc
inc
orl
fmulp
repz
mov
add
or
mov
outsb
mov
gs
add
xor
lahf
inc
adc
popf
and
ja
cmp
jb
push
mov
jl
out
and
out
testl
xchg
or
jp
pop
scas
jmp
nop
nop
sbb
lret
test
les
pop
sti
mov
cli
loopne
xor
jne
mov
mov
call
cmpsl
mov
and
mov
testl
push
lcall
mov
jmp
stos
lahf
test
movsl
cmp
xlat
fwait
jne
lods
popf
mov
aas
mov
mov
daa
test
jae
rcll
sbb
push
das
pop
les
enter
daa
cld
sbb
push
inc
jno
ret
push
movsb
lcall
int
repz
or
mov
xchg
mov
repz
dec
cli
pushl
imul
outsb
movsb
jmp
or
scas
shrb
repnz
dec
in
push
pop
cld
cmp
data16
clc
sar
xchg
pop
int3
pop
popf
dec
sti
js
sub
ret
arpl
sahf
pop
nop
lock
cmp
dec
jae
pop
inc
ja
je
jae
in
mov
or
xor
cs
aaa
jecxz
popa
lahf
divl
adc
mov
cwtl
lods
mov
out
orl
pop
xor
arpl
mov
jbe
stos
pop
in
pop
ud2
imulb
and
and
push
jmp
and
or
xor
aaa
leave
xchg
aas
push
dec
orl
jecxz
inc
and
divb
mov
dec
sahf
xchg
test
das
scas
mov
out
in
adc
xor
in
sub
sbb
adc
andb
mov
js
xor
adc
jl
jle
adcb
into
and
mov
sahf
xor
shrl
jae
push
cld
mov
jb
sub
mov
in
and
and
xor
inc
pop
cwtl
shlb
ret
pop
aam
or
out
repnz
cmpsl
inc
out
pop
lds
or
push
cmp
dec
pop
mov
push
push
mov
hlt
xchg
test
fwait
aaa
loop
aas
pop
js
push
sbb
mov
das
lds
inc
cmp
sar
out
mov
leave
mov
jns
push
mov
sbb
xchg
cmp
cltd
inc
dec
fcompl
int3
dec
pop
jmp
loope
not
xor
push
mov
cmp
push
push
leave
sub
imul
pusha
test
mov
fistpll
push
pop
push
into
jo
incl
test
ret
pop
hlt
or
xchg
idivl
les
jne
xlat
mov
jmp
enter
mov
popa
decb
mov
pop
cltd
push
popf
and
into
xchg
es
testb
mov
cmp
jno
stos
fldt
popa
push
sbb
jg
jle
lahf
int3
xchg
lods
push
push
hlt
inc
ret
test
dec
or
data16
movsl
rorl
stos
ficomps
push
out
inc
and
sub
fdivrl
sub
inc
mov
test
xchg
xor
mov
js
jb
xchg
mov
mov
jns
inc
outsl
and
adc
dec
cwtl
mov
sub
jmp
cmp
mov
jmp
adc
nop
in
inc
push
cltd
inc
int
jne
mov
enter
out
mov
les
rep
or
out
lahf
outsl
push
or
lea
dec
sbb
clc
and
push
pop
pusha
jle
scas
xchg
dec
add
insl
jb
add
xor
adc
cltd
push
sbb
mov
ret
mov
mov
jp
jmp
imul
lcall
push
mov
jne
clc
test
xor
hlt
scas
add
push
push
lods
add
jmp
xlat
mov
in
pusha
stos
push
mov
std
sub
or
xchg
fcoms
in
inc
sub
test
sub
test
loop
in
ja
test
icebp
lahf
shrb
fcomps
xlat
repz
movsl
cmp
xchg
inc
fcomps
push
ret
fldenv
aaa
inc
inc
adc
clc
jecxz
jmp
sbb
stos
testl
fimuls
lret
or
arpl
adc
sarl
sarl
in
and
loope
sahf
sbb
jmp
or
cmpl
cmp
mov
pop
and
invd
jo
cli
aas
mov
cmpsl
cmp
rcrb
movsl
cmpsb
push
or
movsb
jno
xor
mov
fldl
loop
jge
test
add
xchg
repnz
subl
dec
sarb
out
mov
loop
scas
scas
inc
sbb
and
jns
mov
fnstcw
subb
std
repz
cmp
jl
push
pushl
jno
adc
add
sub
mov
pop
pop
pop
movsb
jge
stos
pop
int
inc
enter
ficoml
int3
push
jmp
sar
inc
lock
jl
dec
mov
out
sti
jbe
adc
adc
add
js
test
push
repz
jnp
mov
inc
jle
adc
cli
jbe
in
imul
add
ljmp
stos
add
loopne
jl
lock
cmpsb
mov
push
popa
pop
xchg
and
adc
clc
imul
push
or
jnp
xor
out
cmp
jl
out
cmp
jg
fcmovne
cmpsb
daa
in
cli
inc
dec
push
fisubl
pop
mov
adc
loop
jno
std
or
ficomps
inc
push
or
cmc
sbb
pop
xchg
cmp
add
lods
pop
aaa
cwtl
imul
rorb
lret
mov
repnz
push
out
arpl
in
inc
outsl
dec
divl
pushf
sbb
fdivr
sbbb
outsb
addr16
sbb
sarl
jae
out
leave
pop
add
adc
stos
lods
sub
aas
lock
mov
sbb
cmc
inc
mov
xor
xchg
ret
push
and
js
out
mov
push
ljmp
and
xchg
adc
push
cmp
or
fst
lret
sub
into
xor
mov
insb
push
pop
iret
andb
cli
mov
imul
cmpsb
xlat
in
pop
xor
and
mov
xchg
mov
aad
ret
aas
les
leave
pop
jns
pop
outsb
ljmp
out
mov
cmc
fnstcw
sbb
add
jecxz
aam
imul
mov
daa
dec
pusha
fs
insb
cmp
cmp
dec
jp
jns
pushl
mov
sti
mov
stos
cmpsb
aad
xor
pusha
and
nop
mov
dec
lret
xchg
push
jecxz
mov
sbb
mov
mov
xchg
or
xchg
test
lock
clc
insl
xor
rorb
and
add
mov
pop
rol
push
fistpll
das
aam
xchg
jbe
dec
push
jle
in
cwtl
repnz
sub
ljmp
pop
out
dec
pop
imul
or
arpl
dec
mov
mov
inc
jge
fwait
and
inc
sarb
aaa
inc
mov
in
xchg
shll
inc
pop
aam
scas
cmp
clc
mov
push
and
sub
stc
inc
shlb
mov
shll
jmp
pop
push
cs
enter
and
in
rcrb
xchg
adc
pop
jb
xorl
imul
jle
mov
xchg
jno
jle
jno
jns
sub
cmp
jo
mov
scas
cmpsl
repnz
mov
fnsave
dec
push
frstor
enter
mov
add
int
xchg
addr16
mov
call
jb
jne
repnz
dec
in
adc
shrl
fistps
fildl
push
or
sbb
aad
cwtl
std
xor
sub
popf
dec
sub
xor
jmp
test
faddp
fcomp
mov
mov
dec
sub
outsb
jb
scas
inc
aad
sub
jge
push
adc
push
mov
insb
repnz
je
cs
push
mov
fwait
and
shl
pop
in
pop
dec
js
test
addb
sbb
in
cltd
sub
fwait
ja
idivb
xor
imul
cmp
roll
out
mov
xor
jl
dec
push
out
cwtl
dec
imul
mov
daa
adc
cmp
pop
mov
adc
sbb
xor
add
mov
aam
dec
rorl
ss
arpl
xor
jp
mov
sub
setg
or
adc
fcmove
jle
ljmp
sahf
inc
jns
dec
mov
aad
fistpl
jp
add
clc
sbb
arpl
mov
push
nop
test
insb
lods
adc
add
mov
jbe
dec
mov
xorl
bound
and
fdivrs
fadd
mov
sahf
je
in
inc
mov
aas
ljmp
xchg
test
cmp
ret
dec
xor
ss
adc
loop
imull
mov
notb
pop
or
inc
mov
subl
xchg
shrl
cltd
jns
dec
lahf
mov
dec
and
les
repnz
repnz
mov
jns
adcl
stos
push
movl
fisttpl
test
fldcw
jnp
adc
sub
adc
lcall
xor
sub
cmp
loop
es
sub
cmp
ds
and
inc
out
outsl
and
bound
pop
lcall
lret
push
roll
xchg
aaa
gs
stos
popa
dec
mov
xchg
cmp
std
das
enter
adc
movsb
mov
jb
pop
and
sub
or
fwait
sub
xchg
popf
es
ret
aam
sub
dec
sub
inc
mov
mov
scas
add
inc
mov
jmp
mov
pop
jle
push
aad
pop
dec
mov
addb
sub
gs
fidivl
or
shr
out
test
int
int3
dec
aaa
jl
xor
adc
xor
jp
push
push
ss
push
notl
pop
rcrl
mov
or
and
inc
fwait
test
fs
sub
movsl
adc
jae
inc
xchg
jno
dec
ret
push
mov
xchg
xchg
mov
aaa
into
mov
lahf
loope
aad
xor
into
mov
cmp
pop
push
lods
inc
outsb
cwtl
loope
mov
add
out
adc
cs
dec
out
daa
in
call
test
loope
cmp
mov
mov
insl
bound
push
cmp
scas
adc
and
enter
dec
and
pop
movsb
shrb
ss
inc
jle
lret
dec
movsb
cmp
pushf
out
clc
aam
loope
jo
loope
xchg
aaa
out
inc
or
push
cli
loopne,pt
gs
not
popa
test
jecxz
xor
xchg
and
jnp
stos
ret
fs
push
add
pop
mov
add
pop
shll
push
cld
scas
inc
xchg
xlat
and
repnz
adc
jmp
outsl
rorb
xchg
loope
mov
inc
mov
jecxz
decb
repz
in
test
jmp
cmpsb
clc
adc
adc
cmp
sub
sbb
rorl
adc
pop
addr16
jns
roll
fmull
inc
cmp
pop
inc
pushl
inc
pop
jecxz
pushf
sbb
fcmovnbe
sarb
push
das
add
mov
and
ds
aas
iret
sarl
sub
and
lea
das
mulb
imulb
sub
or
fdivrs
push
js
inc
in
idivl
add
andl
push
mov
arpl
pop
fiadds
mov
divb
test
popa
mov
mov
xor
and
clc
xchg
mov
lcall
jle
push
xor
xchg
imul
dec
pop
imul
scas
cmpl
xchg
cli
jge
fisttpl
sarb
sub
cmp
rcr
or
insl
and
mov
sbb
mov
cltd
sbb
bound
adc
push
dec
dec
mov
std
gs
add
arpl
xor
outsl
inc
cmp
ss
lock
jmp
mov
pop
rorl
inc
xchg
adc
pop
pop
xchg
mov
dec
hlt
pop
inc
sbb
push
dec
ss
xor
mov
sahf
mov
cs
test
rol
rcrl
xchg
out
roll
pop
inc
fs
and
pop
mov
das
add
mov
jle
adc
scas
adc
mov
lret
mov
repnz
arpl
mov
jne
lcall
lods
divb
cmp
iret
fcmovnbe
adc
add
pop
or
pop
mov
jo
pop
cltd
jb
jbe
mov
out
xor
insl
sti
fisttpl
mov
stos
adc
inc
pusha
scas
fwait
ds
jo
push
jmp
push
and
daa
repnz
mov
mov
jbe
and
sbb
adc
call
fnstenv
sahf
fstpt
shll
mov
clc
pop
push
enter
inc
jecxz
lret
les
mov
inc
flds
inc
or
sbb
sahf
test
mov
cs
les
movsb
out
int
addps
loopne
jge
xlat
rcr
dec
mov
ficomps
repz
cmp
cli
test
xlat
mov
fld
std
mov
adcb
sub
mov
stos
mov
call
lea
js
or
int3
cmp
cmp
cltd
jne
xchg
sahf
pusha
xchg
sti
add
mov
pop
inc
out
or
sbb
jl
pop
je
into
stc
loope
mov
pop
xor
pusha
cmpsl
jecxz
lret
push
nop
sub
scas
cwtl
jns
sbb
jmp
aaa
cmpsb
mov
mov
or
cmc
cmp
jb
ret
cmc
dec
movsl
ret
sbbb
dec
fidivrl
inc
scas
or
dec
or
sub
adc
sbb
outsl
popf
loopne
hlt
int3
call
das
add
and
pushf
shlb
iret
or
sbb
filds
jbe
fsub
pop
pop
jecxz
adc
inc
pop
adcl
insl
popa
subb
sbb
hlt
aaa
xchg
ficomps
or
xor
jle
cmp
lcall
ljmp
out
dec
sub
sub
inc
dec
inc
pop
dec
in
lahf
cmp
add
fnstsw
push
pusha
inc
add
cmp
test
jp
adc
adc
repz
mov
cmc
sub
js
int3
or
sbb
sbb
jp
jb
xor
cs
jge
addr16
and
push
out
jg
push
bound
scas
xor
add
lret
dec
push
jne
or
jecxz
movsb
xchg
lret
lret
jge
inc
cli
addr16
dec
and
adc
add
in
add
iret
aad
and
cmp
loope
and
cmp
fldt
outsl
mov
dec
out
cmpsl
add
sbb
push
pop
and
nop
sub
fdivrl
jge
fadd
adc
in
fimuls
mov
cmp
push
inc
mov
jbe
fdivl
jne
mov
sub
mov
pop
push
lods
call
in
inc
push
bound
ja
shl
fs
cmp
lret
inc
push
frstor
fwait
adc
jno
lea
out
ficomps
add
test
mov
fwait
jmp
inc
dec
xchg
aam
or
lret
mov
or
add
repnz
xchg
mov
jbe
mov
jns
daa
fsts
pushf
or
test
test
cmp
mov
push
mov
sbb
out
insl
push
jp
mov
or
jns
pop
lods
inc
push
bound
cmpsl
lret
es
xor
mov
fisttpll
test
shlb
loop
test
nop
mov
dec
dec
iret
push
pop
insl
jmp
xchg
xor
mov
sbb
jmp
jbe
jo
xor
pop
out
push
and
out
fsubr
xchg
decb
popf
mov
loopne
fcmove
sbb
cmp
stos
mov
sbb
bound
cmpsl
push
push
mov
dec
pop
insb
xchg
cmp
and
inc
repz
push
pushf
mov
dec
das
mov
loop
hlt
and
push
lea
dec
subps
into
mov
sub
push
ja
shrb
ficomps
xchg
sbb
ljmp
mov
fbld
jmp
mov
push
dec
xor
sub
jge
mov
into
adc
stos
mov
xor
lock
xlat
push
ss
push
mov
sub
xor
xchg
sbb
or
and
xchg
dec
fnstcw
push
sbb
fstpt
enter
mov
aaa
iret
fnsave
shlb
adc
xor
int
fucomp
sbb
add
shrl
cmc
test
xor
jne
mov
dec
push
in
sbb
inc
add
xchg
and
cmp
aam
push
cs
test
lods
adc
in
mov
inc
ds
icebp
inc
cmpb
xchg
and
aam
mov
or
popa
sub
loopne
push
pop
rcrb
test
pop
fimull
inc
arpl
dec
loopne
pop
jge
popl
aas
test
sbb
sbb
iret
mov
cld
or
dec
ljmp
push
cli
cmpsb
lds
and
sarl
jle
add
cmpsl
xor
adc
shrb
cltd
xchg
scas
insb
icebp
xchg
cmpsl
dec
js
fs
jecxz
add
test
insl
mov
stos
ljmp
push
inc
inc
cmpb
lcall
jle
in
nop
add
mov
les
xchg
je
xor
jl
lret
cld
rol
mov
xchg
rcrl
leave
loop
in
ljmp
cmc
imul
jge
and
push
jmp
lods
mov
jno
add
adc
sbb
inc
ret
loopne
or
pop
jae
gs
sbbl
mov
ja
and
jge
into
hlt
testb
and
mov
loope
cltd
hlt
divl
call
rcll
mov
or
lret
bound
jmp
mov
fistpl
out
sarb
in
pop
cmp
not
push
add
dec
adcb
mov
xchg
in
out
adc
sub
repz
sbb
adc
push
roll
cmpsb
insb
cmp
or
dec
mov
cmp
sbb
push
daa
adc
in
sbb
lcall
push
pop
inc
stc
mov
add
clc
jo
push
loopne
jne
int3
lods
lods
mov
xchg
inc
mov
js
test
dec
mov
sub
imul
hlt
mov
jno
mov
loopne
ja
pusha
out
pop
std
arpl
mov
leave
je
jbe
sbb
mov
xor
mov
fidivl
jno
add
jmp
aam
stos
dec
in
cld
inc
das
sarl
test
dec
jnp,pt
shl
inc
inc
cmp
cld
scas
mov
jae
loope
dec
mov
sbb
lret
bound
push
sbb
leave
ret
add
mov
cmp
cs
daa
test
aad
push
xor
xchg
inc
mov
pusha
daa
push
push
mov
loopne
out
add
mov
andl
mov
push
cld
adc
mov
adc
mov
lcall
jns
sbb
test
push
jg
out
repz
add
arpl
mov
dec
sbb
push
sbb
aaa
xor
shrb
popa
movsb
mov
push
repnz
mov
adc
inc
pop
les
mov
xchg
notb
ljmp
daa
cmp
stos
mov
repz
subb
out
rorb
les
mov
sti
sahf
jbe
call
aaa
lahf
adc
mov
and
pop
add
mov
push
test
adcl
in
test
xchg
xor
rorb
mov
sbb
lods
or
or
and
lret
sub
xchg
lea
add
jp
lea
arpl
push
in
mov
dec
out
std
ret
xchg
inc
inc
sbb
pop
dec
push
cmpsb
dec
inc
pop
mov
lret
in
lcall
idiv
xor
lods
pop
scas
and
outsb
and
pop
mov
daa
outsl
test
or
push
lret
and
mov
inc
jb
jmp
sub
outsb
sarb
or
shll
jp
cli
subl
mov
movsl
lods
and
jb
gs
lods
je
jp
test
mov
int
pop
popa
jmp
rorl
ds
pop
jge
cmpb
gs
xchg
sbb
push
das
jae
stc
xor
ja
outsb
pushf
sub
dec
scas
and
ds
cltd
aaa
dec
sarb
mov
xor
in
xor
in
xor
xlat
cmp
push
or
xchg
lods
dec
movsb
jg
adc
xor
push
xchg
data16
pop
stc
adc
sbbb
rol
stos
les
test
xor
loopne
fcoms
xorb
xchg
push
lahf
fstl
inc
dec
xlat
adc
xchg
xor
adc
cmp
lods
dec
cmp
outsb
lods
lea
fdivrs
mov
mov
fadds
and
mov
mov
dec
dec
and
out
outsb
xor
dec
pop
mov
push
loop
xlat
xchg
call
shll
xbegin
inc
shll
ficomps
jne
lahf
insb
sahf
sti
pop
jns
fld
mov
push
in
jl
mov
xor
xchg
rcll
pop
mov
inc
mov
xchg
arpl
dec
pusha
xor
jge
addl
mov
pop
fidivrs
mov
or
das
dec
rcll
addr16
js
push
out
mov
mov
sub
adc
adc
mov
xchg
hlt
cmp
or
repz
aam
xor
stos
pop
popa
push
mov
jb
out
and
push
les
cs
ljmp
mov
dec
cmc
int
or
dec
in
mov
in
lods
fstps
daa
outsb
loopne
stos
test
jmp
lock
add
push
add
xor
std
mov
or
sarl
inc
jg
mov
sar
into
dec
adc
pop
lds
lahf
push
xchg
pop
xchg
jecxz
popa
shlb
test
xchg
mov
sbb
xlat
outsb
dec
sahf
sbb
call
dec
pop
xchg
out
ds
push
ds
sti
mov
dec
mov
jno
sti
dec
jl
push
jae
xor
outsb
out
shlb
xchg
cmp
loope
jmp
mov
out
ror
out
or
sbb
jmp
mov
and
out
inc
iret
push
int3
or
cmp
xchg
and
loopne
cmp
mov
push
mov
push
les
sti
enter
mov
cmp
xchg
daa
cmpsb
dec
sub
cmp
xchg
sahf
out
sub
inc
lock
mov
jecxz
pop
mov
fimuls
daa
sti
faddl
arpl
adcl
cmp
aas
outsb
or
adc
repnz
and
in
imull
cltd
leave
sbb
jno
sbb
call
push
loope
mov
mov
mov
stos
mov
push
jns
dec
lret
cmpsl
movsb
hlt
jle
das
mov
pop
fisubl
into
jl
int
fwait
lds
aam
fsubs
lret
jb
lods
adc
jle
pop
and
pop
add
inc
movsl
stos
ja
sub
sbb
sbb
add
insb
aad
stos
push
mov
test
outsl
xchg
dec
outsb
jb
jae
pusha
dec
cmpsb
iret
pop
cmpl
adc
sbbl
clc
xor
xchg
ds
adc
push
xor
pop
and
push
mov
je
adc
lock
add
inc
push
and
cmp
stc
adc
mov
std
sub
arpl
cltd
aaa
addb
imul
hlt
sub
imul
adc
sbb
sub
push
sub
cmpsl
je
loop
les
imul
jp
js
mov
xor
in
push
shr
mov
into
cmp
or
out
mov
push
pop
dec
mov
mov
es
sub
push
imul
insl
js
scas
push
mov
mov
cwtl
fs
imul
iret
mov
and
js
jp
outsb
mov
into
mov
xor
pop
pop
push
and
imul
mov
sub
into
loopne
lods
xor
pop
insl
mov
jg
sub
filds
push
bound
stos
jp
inc
cwtl
mov
sub
jp
rcrb
ja
addr16
addr16
adc
xchg
or
movsb
aas
les
cwtl
adc
out
movsl
add
mov
sub
mov
nop
sub
frstor
inc
icebp
mov
sbb
sbb
xor
jb
xor
sbb
dec
shrb
testl
push
sbb
push
fnclex
int
in
leave
jle
dec
add
jp
sbb
fs
stc
call
push
bnd
fsubl
pop
add
iret
daa
mov
pop
mov
popa
test
or
adc
les
adc
out
or
add
mov
or
xchg
mov
ss
test
call
in
sahf
xor
jp
enter
and
push
or
fprem1
push
lcall
in
mov
mov
loope
mov
and
jb
mov
fdivl
mov
movsl
ja
repnz
xchg
jne
sbb
mov
std
scas
mov
jno
jne
loopne
push
pop
mov
negb
sbb
ljmp
mov
das
sahf
xchg
std
hlt
or
sub
out
icebp
add
stc
jbe
fistpl
sbb
mov
push
push
pushf
pusha
stos
ss
pop
movl
mov
adc
rorl
ljmp
jb
out
sub
cmpsb
iret
mov
inc
sub
mov
aaa
dec
push
clc
cld
adc
int3
mov
test
mov
and
mov
cmp
clc
push
incl
add
jle
cwtl
cmp
push
pop
shrb
inc
push
jg
cmc
mov
popa
adc
sub
ja
pushf
push
mov
cmp
mov
movsl
pop
and
mov
pop
mov
dec
or
cmp
shlb
or
mov
pop
adc
add
ss
mov
jle
xchg
cmpsl
out
jae
pop
xchg
pusha
jno
sub
sub
hlt
mov
inc
mov
cmpsb
addr16
in
lock
jnp
cltd
jecxz
xchg
xchg
cltd
sbb
add
ret
loopne
and
xchg
insl
pushf
cmp
repz
scas
jecxz
jg
or
orb
data16
jb
pop
xor
pop
mov
inc
loope
gs
stos
xor
and
aad
repz
mov
int
jnp
jbe
adc
sbb
mov
notl
pusha
xor
jl
push
pushf
adc
imul
cs
mov
sbb
xlat
sub
jno
add
jp
std
iret
mov
dec
std
aam
dec
pop
inc
outsl
fadds
xor
adc
adcl
cmp
push
push
lods
arpl
test
pop
rol
jp
sti
icebp
lods
rol
xchg
scas
jmp
xorb
mov
push
lods
push
mov
jp
mov
shrl
mov
adc
dec
add
dec
ud0
sbb
test
call
loop
cmp
pop
dec
inc
mov
loope
jnp
jno
xchg
es
imul
out
sub
lock
jb
repz
xchg
mov
jmp
xlat
cmpsl
lret
jle
pop
mov
push
fadd
fwait
pusha
scas
mov
sbb
cmpsl
loope
scas
add
mov
jo
lcall
in
jno
in
pop
aad
jae
subl
jg
mov
movsb
jb
imul
dec
and
mov
xor
push
int3
fiadds
mov
lret
xchg
sarb
enter
xchg
cmpsb
dec
outsl
mov
aad
cli
stc
pusha
and
int3
popf
outsb
jp
cmpsl
vcvtpd2dqy
mov
fsts
sbbb
and
lret
ficoml
push
shrl
xorb
in
jle
cs
js
in
and
add
jne
repz
scas
shrl
insl
add
push
outsb
dec
pop
ljmp
push
int3
xchg
and
lret
fildl
or
ret
and
adc
jle
pop
mull
ficoml
xor
push
xchg
movsl
or
pop
cmp
cmpsb
push
in
jo
lods
fidivs
adc
shll
cmpsb
inc
push
fcomps
inc
imul
cmc
lock
xor
sub
add
sub
insb
xchg
repnz
lahf
out
sub
xor
int
dec
int
rolb
or
fcomip
popa
stos
ficoml
pusha
pop
mov
inc
aaa
mov
pusha
ss
xor
mov
inc
out
popa
jmp
aas
mov
test
jge
std
cmp
jo
mov
mov
movsl
sbb
mov
adc
mov
jbe
ss
stos
mov
cmp
lahf
fnstcw
mov
jno
out
loope
inc
loope
lret
in
xchg
sbb
mov
pop
movsl
out
test
mov
pop
xlat
mov
adc
pop
daa
jle
sub
in
add
inc
jo
divb
push
mov
jge
into
mov
sbb
jb
dec
dec
mov
jnp
xor
icebp
xor
add
pop
push
ljmp
movsb
mov
sbb
aam
mov
sbb
mov
pusha
in
gs
js
xchg
dec
mov
adc
push
clc
or
or
icebp
data16
cmp
std
or
data16
popf
test
in
clc
idivb
lahf
pushf
rcrl
cmp
rcr
jl
inc
dec
cli
push
jge
iret
ret
mov
lahf
pop
loope
lods
dec
cmp
loope
movsl
push
lret
scas
jp
mov
mov
data16
mov
jae
cld
cmpsb
test
shrb
imulb
xor
adc
mov
cwtl
pop
jno
push
pop
adc
xlat
out
icebp
sarl
scas
aaa
jge
or
aaa
inc
das
jmp
in
aad
xchg
aam
addr16
adc
fisubs
mov
inc
mov
cmp
aam
leave
mov
insb
sbb
adc
aaa
lahf
repnz
sbb
mov
adc
mov
ja
aam
bound
outsl
sub
inc
cli
push
in
sub
or
mov
scas
subl
dec
test
pop
jo
jle
sahf
andb
mov
insl
mov
out
mov
and
cmpsb
cmc
cld
inc
loopne
mov
adc
dec
imul
cmp
ret
inc
fcomps
std
bound
xchg
mov
stos
inc
mov
sar
in
out
fwait
test
adc
rolb
or
add
mov
mov
in
xchg
movsl
fisttpl
lahf
cmp
mov
inc
dec
ja
jo
xchg
cwtl
scas
or
push
scas
cmp
and
leave
inc
jno
xor
pop
xchg
outsl
subl
mov
cmp
mov
test
cld
jae
adc
ljmp
sub
sbb
or
lret
je
xlat
or
insb
inc
sbb
adc
int3
leave
bound
lahf
mov
push
inc
dec
lret
mov
out
sahf
jae
xchg
pop
lahf
rorb
or
pop
inc
out
arpl
sbb
cmpsl
and
movsl
and
popa
xchg
rorb
popf
inc
pop
push
mov
mov
fbld
push
mov
ret
pop
aas
cmpb
inc
mov
push
cmpsl
pop
cmp
test
inc
fidivl
es
imul
add
movsb
inc
sub
movsl
int3
sub
adc
fisttps
ret
add
inc
ljmp
pop
jne
or
imul
mov
insl
push
xrelease
js
mov
shlb
in
and
pop
and
jns
dec
jae
scas
hlt
mov
adc
outsb
add
ja
dec
inc
je
dec
cmp
gs
mov
or
clc
xchg
cld
jle
mov
push
ret
insl
out
xor
mov
fwait
outsl
aaa
cwtl
cmp
stos
add
or
rclb
xchg
cmp
pop
xlat
jp
sbb
push
and
xor
lcall
sarb
and
adc
xor
jmp
cli
mov
push
mov
cmp
iret
daa
or
insb
xchg
lret
es
adc
sub
daa
repz
std
popa
xlat
or
mov
dec
xchg
shrb
xchg
jbe
or
cmp
lahf
pop
or
xchg
mov
and
fdivl
imul
add
idivl
call
jo
fstps
mov
ficomps
stos
leave
cmp
lret
cmc
sub
imul
jbe
adc
cmp
or
xchg
sahf
pop
xchg
xor
in
sarl
cmpsl
leave
dec
sti
lcall
add
inc
cmp
push
iret
push
mov
sti
gs
push
test
jmp
pusha
or
stc
bound
adc
add
mov
outsl
jbe
xchg
fwait
ljmp
aas
test
sahf
movb
cld
or
jecxz
pop
jo
cmpb
clc
pop
mov
enter
insb
lds
enter
sbb
cmpsl
jge
cmpsb
mov
dec
addb
jp
lods
inc
mov
push
push
test
hlt
push
and
pop
idiv
or
xor
std
pcmpgtb
mov
mov
mov
imul
jns
dec
in
and
hlt
push
pop
idivb
stos
outsl
xchg
xor
scas
jb
out
cmp
outsb
xor
dec
je
sub
dec
adc
jge
adc
je
and
inc
repz
inc
sbb
xchg
sub
addb
pop
adc
lock
movsl
bnd
jge
xchg
aas
mov
or
cmp
pop
out
movsl
loop
or
dec
enter
gs
icebp
leave
bound
and
std
mov
xor
aaa
push
mov
push
mov
sbb
jns
mov
sarb
push
cmpl
inc
sub
orb
aaa
lods
out
js
lret
test
test
and
push
jb
sbb
das
fwait
imul
push
sbb
fldl
data16
cmpb
push
daa
adc
aas
mov
int
push
dec
xor
pop
ja
push
cltd
loope
pop
sti
mov
cmp
push
icebp
xor
iret
sbb
bound
fcomps
fdivs
fcomps
leave
sub
cmp
sub
sub
lcall
cli
fsubrl
or
mulb
sub
jg
pop
and
xorb
jmp
and
lods
jp
inc
cmp
mov
in
dec
sub
sub
movsl
les
lock
jnp
adc
mov
iret
cmp
repnz
jg
mov
push
les
sbb
ret
or
dec
inc
int
cmc
and
loop
push
push
arpl
jbe
mov
lds
jp
xchg
sbb
aas
add
fnstenv
dec
sarb
and
push
stos
fisttps
aam
andl
pop
insb
push
sbb
push
clc
jl
cs
loop
aad
adc
or
add
push
ficompl
dec
sub
sbb
jbe
sbbl
in
mov
daa
mov
sbb
jl
or
jge
jbe
fs
mov
stc
mov
stos
out
or
pop
jge
repnz
xchg
idivl
test
and
das
fwait
test
pop
jl
lods
add
imul
and
je
iret
cmp
ret
sbb
lret
into
push
loope
cmp
hlt
cmp
mov
ljmp
int3
cmpsl
aad
in
movsl
jp
mov
loop
sysret
inc
inc
mov
push
push
popf
mov
pop
addr16
fldt
ss
adc
dec
int
cmp
adc
cmp
adc
jle
inc
inc
out
arpl
xchg
and
ret
lds
cltd
inc
sub
mov
ret
sbb
sti
rcl
dec
jle
data16
dec
add
filds
sbb
out
scas
jmp
push
xchg
fninit
jae
negb
sub
data16
je
aam
xor
lock
inc
or
in
xor
dec
fsts
cwtl
mov
fiaddl
jmp
loop
sub
push
jnp
fmull
pop
or
stc
insb
repnz
fcmovbe
stc
xchg
pop
add
adc
xlat
imulb
pmuludq
insl
xchg
loopne
adc
jne
mov
outsb
jecxz
lods
or
jl
fstps
cwtl
mov
mov
out
sahf
fldt
leave
inc
jmp
rcl
cmp
inc
push
mov
sbb
das
mov
and
lret
inc
out
xor
xchg
sub
mov
jmp
ja
lcall
lahf
loopne
cmp
push
stc
dec
insb
cmp
dec
pop
pop
pop
out
lds
aas
out
js
das
sbb
sbb
and
lock
and
shlb
lahf
cltd
push
cmp
push
jl
shrb
ret
dec
push
pop
aas
sbb
sbb
clc
in
and
mov
decb
ret
or
mov
inc
bound
outsl
mov
jp
mov
out
sbb
ljmp
adc
and
aam
lods
stos
mov
mov
lods
sarb
or
inc
loopne
pop
arpl
jl
test
fcompl
xor
test
xchg
movsl
addr16
inc
aad
insl
dec
pop
gs
fisttpl
sbb
popa
cmp
in
fisttpl
fwait
lcall
mov
outsb
ror
stos
in
test
test
or
out
xor
or
icebp
sbb
mov
js
stos
aas
xchg
out
push
data16
push
sub
into
lea
das
mov
sub
inc
ljmp
dec
mov
sbb
arpl
cld
js
push
xor
ret
loope
ja
daa
fdivrl
pop
cld
lods
pop
xchg
ficompl
repz
push
pop
mov
push
jns
xchg
test
repz
filds
jle
in
movsb
js
fisttpl
popf
aad
push
ljmp
fidivrl
mov
ret
and
aam
mov
test
cwtl
xchg
and
jae
sub
and
ret
push
out
ret
inc
sahf
aam
xor
xchg
push
into
sbb
daa
ljmp
insb
es
test
cmp
mov
fs
sub
xchg
movsb
push
jne
adc
js
cmp
and
ds
out
sub
fisttps
popf
shll
lcall
mov
push
inc
les
clc
shrb
jmp
pop
sbb
in
sbb
push
shll
sbb
nop
mov
mov
lret
mov
or
push
js
ret
add
mov
movsb
ret
jno
push
jo
add
div
ljmp
cmp
xchg
or
sub
or
xchg
ljmp
ss
xlat
pop
mov
repnz
cmp
xor
adc
and
xchg
fwait
mov
sti
xchg
sub
fdiv
out
bound
inc
ds
push
mov
cmc
loopne
pop
jp
mov
mov
jg
jbe
inc
sub
icebp
mov
xchg
push
xchg
jle
adc
cs
scas
mov
shrl
or
cwtl
lret
sbb
mov
data16
add
repnz
xchg
andl
push
adc
cmp
aam
or
fstps
lahf
xchg
outsb
divb
or
mov
out
or
subl
scas
enter
int3
push
test
shr
imull
adc
xor
mov
push
mov
pop
scas
loopne
call
icebp
addl
int3
stc
inc
xchg
jecxz
adc
icebp
jge
js
shl
mov
outsl
mov
scas
add
imul
enter
pop
inc
pop
push
loope
jne
lock
dec
adc
dec
psrld
adc
movsb
jge
call
into
daa
mov
push
mov
ds
out
cltd
lea
testb
jle
fidivs
pushf
xchg
inc
movsb
outsl
push
rclb
fldln2
out
sbb
std
xor
xor
sub
outsw
in
ror
jae
xlat
and
mov
dec
mov
jne
lea
inc
push
pop
je
cltd
shrl
dec
sub
xor
jo
mov
and
icebp
pop
mov
push
and
jmp
jg
fbstp
shll
sub
testl
in
nop
js
jmp
xor
mov
xchg
xchg
fcmovb
fbstp
or
ja
inc
xchg
jnp
pop
popa
xor
mov
in
int3
sti
mov
rclb
imul
mov
imul
pop
xor
lcall
subb
and
pop
xchg
ret
sub
shl
mov
mov
pop
or
ja
jg
int
outsb
jne
call
ret
insl
stos
jnp
insb
cmp
out
add
cwtl
stos
ss
fucomip
pop
out
mov
sbb
stos
inc
or
jl
add
jo
mov
in
lcall
frstor
push
sbb
fistpl
push
test
shll
mov
sti
scas
aas
sbb
cmp
movsb
xlat
adc
inc
sbbl
in
or
and
fistpll
xchg
shl
hlt
sub
mov
cli
lock
adc
sbb
movsb
clc
cmp
inc
jo
jecxz
ja
aam
mov
in
neg
cmp
loope
test
pop
aaa
dec
pop
fisttpll
cwtl
add
lret
xor
lods
pop
ret
aaa
jp
cmc
xlat
sahf
fidivs
int
mov
cmp
sar
lods
mov
stc
repz
pop
mov
insl
add
sub
dec
cmpsb
pusha
addr16
mov
popf
outsb
cmp
sti
xchg
xor
and
sbb
add
in
stc
dec
divps
lahf
add
push
push
movb
ret
sbb
mov
inc
test
lcall
xchg
iret
inc
ljmp
stos
mov
sbb
loope
xorl
shll
sub
xor
dec
jb
je
sbb
sti
mov
enter
fisubl
outsb
lahf
movsl
rorb
dec
pop
push
and
ja
or
lahf
clc
jo
sbb
pop
jbe
sub
mov
bound
jbe
mov
xchg
mov
push
gs
push
lds
or
add
fstpl
sbb
adc
sbb
aad
push
je
idivl
mov
inc
jecxz
loopne
xchg
cmp
out
sub
sbb
data16
sahf
pop
repz
cld
stos
cmp
jg
adc
test
out
sbb
outsl
pop
in
movsb
and
sub
xchg
inc
and
mov
mov
nop
dec
adc
insb
mov
sbb
dec
mov
add
lret
cmp
xchg
std
adc
add
mov
mov
jns
loop
loope
adc
mov
mov
mov
inc
add
dec
xchg
jb
loopne
jl
and
mov
xchg
in
das
xor
fstps
sub
lea
inc
ss
sub
push
xchg
lods
ja
popf
xor
and
xchg
cmp
mov
outsl
mov
cmpsl
jnp
add
xchg
loope
xor
adc
mov
arpl
mov
call
ret
sahf
add
cmp
push
add
mov
xor
xchg
setbe
cmp
subl
mov
incl
in
ret
add
loopne
add
xchg
xchg
mov
or
je
in
xchg
jae
jb
dec
test
push
jecxz
cmp
mov
pop
push
adc
cmp
add
inc
lods
sbb
sub
inc
inc
stos
sbb
stos
mov
mov
iret
andl
popf
lahf
arpl
or
jnp
repnz
fsubrl
jmp
pop
sti
inc
pop
rcll
out
fistl
sub
test
jbe
jnp
imul
cmp
and
adc
cmpsl
adc
lcall
dec
cltd
cwtl
movsb
int
inc
loop
mov
jg
dec
out
fs
lahf
adc
lret
lahf
mov
adc
xchg
xchg
pop
mov
mov
cmp
mov
das
loopne
mov
outsb
sti
hlt
jns
add
scas
int3
mov
xor
push
or
pop
jnp
jno
loop
jle
push
mov
mov
xchg
es
shl
in
add
pop
movsb
xchg
fs
sub
pop
pop
insl
xchg
std
inc
jbe
aam
test
xor
mov
dec
add
mov
mov
call
popl
out
movsl
cmp
arpl
adc
jns
lahf
xor
outsb
call
sar
dec
sbb
pop
and
cltd
aas
in
pop
jl
mov
xlat
into
inc
push
mov
xchg
and
sbb
addr16
shrl
rolb
outsb
lret
not
mov
scas
adc
dec
xor
mov
cmp
call
testb
iret
ss
jg
scas
xor
or
movb
into
call
adc
call
xchg
outsb
or
push
clc
mov
adc
es
scas
mov
jne
lcall
xor
fcomp
mov
push
dec
negl
push
std
or
inc
mov
outsb
repnz
imul
js
or
cs
add
ljmp
pop
bound
test
cmpsb
xchg
cli
cmpsl
mov
leave
cmp
jno
inc
popf
mov
pushf
push
jp
inc
scas
sbb
scas
add
adc
mov
movsl
xor
sti
fisttpll
xchg
fmulp
cmp
cmpl
les
pop
inc
sub
sar
and
popf
dec
test
mov
dec
jmp
push
mov
push
and
sbb
sbb
adc
xchg
lods
inc
sub
xorl
pop
inc
pop
mov
add
mov
lds
popa
jo
cmp
out
fidivs
pop
sub
notb
dec
push
mov
xor
xchg
inc
xlat
xor
lahf
and
mov
movsb
dec
ffree
test
xor
data16
rcrl
sub
dec
add
dec
push
cmp
daa
pop
add
aad
call
sub
out
fiaddl
jl
iret
fstps
jp
jne
ljmp
sub
fdivl
ret
cmp
in
inc
rolb
shll
mov
scas
xlat
xor
aad
pop
mov
enter
sbb
mov
fwait
mov
or
out
push
shlb
jne
lods
and
mov
cmpsl
xchg
xchg
cs
int
push
lahf
jmp
inc
jecxz
jecxz
dec
lods
pop
clc
aad
loop
lods
xchg
mov
lahf
faddl
ja
cmc
pop
out
adc
pop
mov
xor
xor
push
mov
out
dec
xchg
mov
test
enter
sub
inc
sbb
outsb
shrd
jns
test
xchg
push
addr16
test
pop
or
mov
hlt
xchg
push
sbb
call
gs
sahf
adc
jp
or
xchg
or
loopne
iret
sbb
mov
add
pop
sbb
dec
mov
xchg
push
sub
mov
sarb
shrl
nop
add
lea
or
push
mov
aam
push
adc
push
movsb
jns
jmp
ret
or
ss
cvttps2pi
push
fsubrs
adcl
cwtl
dec
ret
xlat
out
clc
mov
fdivl
or
scas
outsl
into
xchg
or
sar
push
add
push
xor
add
push
aaa
insb
aaa
add
xchg
dec
orb
popa
xchg
loopne
push
adc
push
fwait
fs
add
cmpsl
mov
repnz
xor
sub
ds
cmp
aaa
shl
repnz
push
jbe
xchg
or
and
movsl
xor
mov
dec
dec
data16
push
arpl
push
mov
lds
push
or
fmul
xchg
sub
xor
dec
inc
lock
mov
lahf
jmp
add
and
in
mov
insb
dec
mov
dec
test
mov
push
mov
lods
mov
adc
push
outsb
notl
call
lock
andb
dec
nop
fadds
in
mov
push
add
inc
inc
ds
push
jnp
aas
add
scas
cmp
in
cmp
xor
mov
mov
es
shlb
fistpl
daa
push
xchg
rolb
std
call
int
sbb
lret
cltd
lcall
popf
push
iret
adc
adc
adc
add
adc
popa
mov
sbb
ljmp
jmp
jmp
push
in
in
stc
jg
aaa
sub
jmp
notb
mov
jae
imul
dec
mov
add
or
dec
cwtl
mov
cmp
ljmp
push
inc
or
mov
daa
sub
repnz
test
repz
mov
jb
adc
and
iret
pop
dec
mov
xchg
cs
or
xchg
mov
sbb
imul
add
sahf
jnp
sbb
fnstcw
xchg
mov
sbb
mov
mov
mov
subl
mov
dec
js
popf
push
xchg
adc
xchg
cmp
ja
fsubrp
mov
iret
mov
movsb
jg
stc
pop
xchg
fdivs
hlt
sub
jo
and
sbb
xor
mov
sti
movsl
push
cld
push
push
jl
test
cwtl
jno
lcall
mov
jecxz
scas
dec
push
iret
inc
repz
outsb
js
xchg
xchg
xchg
xor
cmc
mov
xchg
cmp
shrl
mov
stos
cmp
iret
jbe
sarl
ss
aaa
jl
mov
xor
test
repz
xchg
mov
loopne
push
popa
out
adc
jbe
mov
icebp
pop
imul
sbb
jae
les
fdivl
repz
out
push
dec
push
es
repnz
pushf
pop
mov
mov
fistps
push
mov
lock
arpl
cli
adcb
paddsw
je
loopne
rclb
jmp
mov
iret
shrb
arpl
jne
scas
fwait
jns
mov
bnd
dec
jmp
and
xor
mov
push
and
into
add
popf
and
adc
dec
inc
fwait
xor
push
mov
and
pusha
into
int
xchg
dec
int
or
mov
jb
jle
ljmp
cld
inc
xor
push
cs
push
lods
imull
andl
in
mov
cmp
adc
cmc
add
mov
mov
adcb
push
repnz
call
es
adc
and
movsb
xor
mov
addr16
clc
scas
mov
add
mov
inc
out
movsb
sub
push
jl
sbb
mov
xor
sub
xchg
cmpb
sarl
loope
data16
cmp
es
stos
push
dec
arpl
or
fisubl
inc
dec
sub
sti
mov
loope
sbb
js
cs
add
mov
jns
stos
movsl
and
fsubrs
push
rorb
cmp
pop
out
push
movsb
pusha
xor
dec
in
push
fmuls
ret
mov
imul
lock
ds
rorb
repnz
and
jbe
das
mov
add
mov
js
sub
and
lcall
arpl
xor
mov
subb
hlt
mov
dec
mov
fcompl
into
add
push
lea
jecxz
leave
clc
in
xor
repz
add
cmp
mov
in
xor
insl
cmpsl
test
push
mov
push
out
add
mov
ss
aam
inc
lcall
adc
loopne
xchg
push
mov
sbb
xchg
sub
mov
ljmp
mov
shlb
lods
push
mov
inc
sbb
pop
pop
jns
lods
in
xchg
jle
sbb
loop
ja
movsb
aaa
xchg
sbb
ds
clc
scas
xchg
stos
sub
daa
mov
imul
aaa
out
gs
sub
int3
shrl
push
or
cli
iret
lock
aam
out
mov
jae
push
adc
ret
xchg
jg
pop
sti
pop
mov
push
data16
jb
lahf
sub
cmp
dec
sub
sahf
and
orl
aad
push
dec
mov
imull
sbb
mov
dec
xchg
aaa
pop
sbb
repz
pop
sbb
insb
insb
or
or
pop
andb
ja
mov
test
mov
add
notl
pop
sbb
mov
and
mov
in
xor
lahf
jb
test
subb
cli
push
or
adc
and
sub
jecxz
iret
push
in
pop
add
dec
add
dec
dec
push
sbb
mov
lret
insb
add
or
lahf
fistl
orl
xor
sub
cmp
xchg
mov
adc
mov
loopne
and
pushf
pop
cmpsl
or
xor
adc
xchg
out
sub
cmp
push
iret
dec
mov
mov
cmp
or
scas
cmovae
ror
sbb
sub
push
and
mov
hlt
jecxz
gs
pusha
cld
xchg
xor
xchg
out
xor
pop
sub
into
push
dec
hlt
jle
pushf
mov
add
bound
repnz
mov
fnstsw
jbe
ljmp
dec
add
mov
call
jmp
jno
xchg
dec
or
imul
jg
ret
mov
cmpsb
adc
mov
mov
cmpsl
movsl
xchg
ljmp
addr16
and
ret
pop
lods
aad
call
and
xchg
jp
lock
imul
xor
nop
jp
mov
bound
cmp
adc
cmp
cwtl
jmp
sbb
cmc
and
jbe
and
mov
ja
mov
or
mov
addr16
cmp
fwait
cmp
sahf
pop
out
daa
cmp
arpl
xor
adc
mov
popa
lahf
and
out
pop
cmp
and
daa
xchg
pop
push
idivl
cmc
jg
dec
push
stos
mov
or
push
mov
enter
cmc
aas
imulb
scas
jge
mov
jo
or
mov
imul
sub
aaa
jnp
xchg
add
aad
push
pop
sti
jnp
imul
out
push
add
in
movsl
rcll
aas
lea
jmp
pop
icebp
test
mov
fidivs
lret
add
jle
roll
outsb
sub
push
xor
xchg
xchg
filds
add
fstps
xor
sahf
mov
dec
add
adc
sub
dec
sbb
ret
fiadds
mov
cmp
cmpsb
sub
das
add
jmp
int3
arpl
jns
mov
out
ja
pop
es
out
hlt
out
and
jg
cmp
sbb
and
movsl
adc
movsl
sbb
popa
jge
push
das
aas
pop
push
test
xchg
mov
out
mov
in
mov
xor
pop
jns
rcl
int
pop
jge
lcall
ficompl
or
push
sti
or
das
mov
and
aad
mov
fldenv
and
cmpsl
bnd
mov
dec
inc
out
sbb
sbb
std
inc
or
mov
jle
sbb
xchg
and
stos
rorb
dec
scas
adc
mov
adc
repnz
mov
push
outsl
arpl
sub
mov
imul
mov
jge
inc
repz
jmp
inc
sbb
ss
sub
mov
sub
jmp
and
jge
pop
cmp
ret
das
clc
call
aad
jge,pn
mov
in
loope
cli
mov
lds
lcall
imul
mov
andl
mov
or
push
push
jno
popf
xor
or
or
and
insl
pushf
mov
jge
sub
xorb
cmp
dec
cs
bound
ds
mov
out
cltd
or
xchg
sbb
sub
sub
out
outsl
lret
jnp
mov
mov
aad
or
hlt
clc
sahf
cmc
call
xchg
imul
bound
rcrl
test
test
xchg
stos
loop
fsts
push
mov
mov
xor
fnstsw
mov
sub
mov
jp
les
divl
lcall
fs
mov
out
xchg
mov
out
push
mov
pop
inc
outsb
ds
lret
aad
inc
ljmp
adc
jnp
mov
sbbb
sub
decb
pop
pop
aad
into
sbb
push
jnp
fmull
orb
jle
xor
call
mov
bound
sahf
aad
mov
xor
les
mov
or
push
stc
inc
clc
pop
push
or
add
sarl
pop
and
fcomps
bound
mov
daa
sbb
hlt
fucomip
ret
push
psraw
insl
xchg
dec
add
inc
push
push
sub
mov
inc
or
psllq
sub
pop
dec
xlat
pop
and
popa
in
data16
sbb
push
pop
jne
insb
dec
cmc
stc
jae
mov
mov
inc
or
pop
adc
iret
pop
pop
push
andl
lds
rcr
inc
inc
mov
inc
pop
pop
fldl2t
rcr
setns
adc
icebp
and
push
cmp
stos
or
addr16
sub
adc
pop
xor
cmp
adc
insl
ret
incb
dec
lret
mov
aaa
in
outsl
sbb
sub
mov
jecxz
aam
inc
xor
rcrl
push
popf
stos
adc
mov
test
rclb
mov
mov
icebp
movsb
mov
cmp
push
cmp
nop
adc
mov
inc
or
cmpsb
lret
movsl
push
or
in
dec
dec
push
or
in
mov
in
xor
scas
hlt
fists
mov
in
mov
das
push
out
pop
lret
xchg
movsb
pop
xor
xchg
js
out
mov
add
sahf
xchg
xchg
mov
insl
das
pop
cli
push
and
add
lcall
lds
cltd
add
mov
sbb
cmp
lret
xchg
insl
outsl
addr16
xchg
imul
pop
pop
xor
ss
ljmp
shll
int
enter
lret
jne
es
adc
iret
push
jns
inc
push
jle
push
push
push
inc
mov
or
cld
les
push
mov
mov
mov
sbb
scas
mov
sbb
fwait
ljmp
stos
orl
mov
and
jno
pop
pop
adc
cmc
insl
inc
ret
xor
sarl
cltd
gs
in
out
push
lods
mov
cmp
clc
mov
pop
or
adc
test
xchg
clc
mov
int
pop
xorl
mov
je
orb
inc
push
dec
cmpsb
push
mov
lret
rolb
cmpb
inc
dec
aam
pop
push
mov
mov
out
dec
push
mov
fcom
mov
pusha
jbe
pop
or
incl
es
in
cmpsb
mov
adc
lods
sbb
xor
sub
mov
arpl
adc
aad
xchg
in
xchg
into
sub
mov
into
cmp
push
rcl
insb
pusha
lea
push
sbbb
xor
aad
sahf
lret
in
fwait
clc
outsl
cmp
dec
lea
lds
negb
push
mov
jecxz
jb
dec
aam
insl
xor
lcall
ficomps
jecxz
push
imull
es
clc
adc
jno
std
std
repz
lahf
nop
mov
push
cs
cmp
mov
loop
dec
rcrl
mov
sti
out
mov
mov
sub
cwtl
mov
jno
scas
daa
mov
stc
sub
mov
and
imul
popa
adc
arpl
mull
jle
and
ret
push
mov
pop
aas
mov
xchg
or
xchg
add
subl
jno
xchg
dec
and
sub
pop
sub
push
test
frstor
mov
xorl
sbb
nop
sbb
mov
icebp
cmpsl
dec
jnp
int3
push
or
cmp
ret
mov
adc
push
pop
clc
push
add
cwtl
loopne
pushf
pop
addb
je
inc
movsl
mov
jb
fldenv
andl
enter
ja
inc
fsubr
leave
ljmp
popa
xchg
or
and
subl
out
mov
clc
inc
pop
add
pop
add
and
es
fsubl
inc
pop
push
test
sbb
popa
ret
xor
out
jno
pop
dec
out
repz
xor
popa
add
mov
stos
dec
or
repnz
jbe
sbb
pop
js
popf
mov
jle
push
push
jg
dec
dec
repz
fsub
jae
loope
pop
mov
and
movsl
inc
into
popf
mov
xor
clc
js
push
lods
aas
xchg
test
mov
scas
addr16
daa
mov
mov
movsl
xchg
mov
aas
or
add
push
sub
pop
inc
jle,pn
xchg
ficoms
lret
jae
push
jp
pop
clc
insl
push
jae
push
xor
dec
or
and
sbb
gs
cmpsb
mov
pushf
rolb
jge
int
icebp
xor
dec
in
fdiv
imull
in
inc
jbe
xor
push
add
cmp
push
aam
scas
ljmp
stos
mov
aaa
and
cmp
fstl
cmp
mov
jns
mov
sahf
in
out
adc
inc
mov
add
outsb
pop
pushf
bound
pop
iret
jne
xor
dec
repnz
fisttpl
imul
lahf
outsb
cmpb
jb
pop
hlt
mov
dec
inc
jg
push
mov
mov
cmp
fdiv
sub
and
cmpsl
jno
xchg
ret
enter
mov
fsts
sti
inc
pop
in
jne
les
lcall
ds
mov
xor
cmp
inc
cmpsl
push
push
test
xchg
adc
out
lea
stc
cwtl
mov
xor
push
cmp
inc
fisubrs
adc
sbb
out
cwtl
inc
push
and
inc
pop
cli
mov
xchg
subb
lods
add
mov
stos
iret
cs
inc
mov
in
cli
xor
push
stos
pop
stos
cmp
ret
adc
cli
orb
jnp
fists
sbb
mov
pop
xchg
xchg
jne
dec
mov
jmp
inc
out
xchg
adc
mulb
mov
sbb
pushf
aam
or
in
ja
mov
jecxz
sbbb
or
loope
hlt
inc
jecxz
incb
push
fcoml
mov
ja
mov
ds
push
xor
pop
xor
shl
fldt
xchg
iret
loop
push
shlb
add
sub
shrl
mov
lods
xor
popa
or
mov
clc
push
add
cs
jnp
mov
or
dec
cli
jmp
lret
imul
pop
mov
movsb
imull
mov
xchg
lret
jecxz
jnp
aaa
mov
push
test
pop
imul
jno
movsl
push
ffree
xchg
in
cmpsl
pop
sub
cmovne
ss
aad
push
out
xor
inc
inc
jnp
mov
mov
mov
in
loop
mov
test
lcall
or
cmp
fwait
fs
hlt
adc
xor
test
dec
or
xchg
test
mov
ret
add
mov
imul
je
jb
lods
and
es
fwait
and
mov
movsb
jo
popa
int
les
jno
subb
and
adc
xor
sbbl
mov
je
cwtl
xchg
popf
pop
xchg
xchg
xlat
ret
jmp
lret
and
jp
jns
jmp
icebp
mov
xchg
scas
aas
lcall
pop
cmp
cmpsb
or
sarl
push
pop
inc
cmc
es
jbe
add
out
jae
and
add
nop
and
push
repz
leave
fdivrs
cli
imull
sub
push
int
sbb
cmp
imul
pusha
dec
cwtl
xchg
subl
cmpl
mov
xlat
and
fistps
ror
ja
fmull
insb
lock
sub
mov
add
jecxz
pop
add
xor
gs
es
ficomps
inc
xchg
shll
xchg
ja
pushf
adc
mov
dec
daa
cmp
hlt
icebp
add
call
sub
scas
push
jbe
cmp
std
outsl
dec
mov
mov
addr16
ret
ret
lock
in
or
cmp
outsb
repnz
push
cmp
pusha
cmc
jno
jne
adc
cmp
fwait
sbb
and
out
iret
push
jnp
pop
sbb
adc
rolb
hlt
sbbb
in
lret
mov
sbb
sbb
shll
and
bound
ret
push
mov
rolb
inc
aam
cmpl
cmpsb
pusha
movsl
in
xor
mov
out
das
mov
add
xor
add
repnz
push
xorl
pop
mov
loopne
in
das
lods
rol
sbb
and
roll
jb
xor
pop
jo
cmp
sbb
fildl
cmc
cwtl
lea
mov
stos
test
fstp
adc
shll
inc
call
or
cli
pop
and
in
jns
xchg
mov
xchg
test
mov
repz
outsb
std
jne
dec
popa
ljmp
test
xchg
mov
shrb
xchg
je
fucomp
div
into
or
test
clc
push
push
cmp
adc
dec
cmp
or
insb
addr16
std
xchg
cmp
int
mov
pop
xor
and
sub
mov
or
xchg
pop
aad
add
in
lods
cmp
imul
addr16
pop
imul
sub
sbb
cs
stos
add
ds
imul
arpl
push
mov
inc
int3
stc
dec
push
push
aam
add
sub
enter
sbb
sbb
outsl
shlb
imul
movsl
in
pop
stos
push
mov
push
adc
and
push
mov
mov
cmp
inc
sarb
xor
aas
scas
jmp
cmp
sbb
inc
mov
mov
jne
xchg
inc
lock
push
push
outsl
mov
dec
movsl
pop
sarb
mov
sbb
mov
pop
sub
stc
pop
xlat
xor
filds
or
scas
jne
sub
ret
adcl
xchg
xor
sub
testl
cld
or
shrb
inc
addl
out
jecxz
and
lahf
inc
stc
loop
inc
arpl
pop
ja
dec
testb
or
out
cmp
adc
fwait
mov
add
out
subl
and
jp
mov
in
adc
ljmp
idivl
sub
jae
cmp
mov
pop
fldenv
call
sub
das
mov
lcall
lret
test
xchg
dec
adc
cmp
loop
add
cld
imul
mov
push
pop
push
or
je
iret
push
sub
mov
add
aaa
mov
popf
bound
negb
push
dec
add
add
jne
lods
xchg
sub
xchg
std
pop
es
insl
inc
addr16
mov
lret
and
push
inc
mov
pop
mov
mov
js
xor
call
xor
mov
int
xchg
inc
mov
addr16
inc
ja
pop
scas
push
mov
dec
ret
xor
and
mov
jo
mov
in
cld
cmp
addr16
pushl
sbb
out
inc
pusha
mov
enter
dec
pusha
stos
aam
xor
hlt
pop
sub
cltd
cmp
sub
mov
xor
push
sub
and
adc
daa
test
mov
out
stc
jecxz
and
lret
rcrb
xchg
mov
rcr
push
and
int3
xchg
mov
adc
cld
inc
xchg
sbb
js
or
mov
dec
sbb
push
aas
xor
pop
pop
mov
xchg
xlat
sti
std
jecxz
add
rcrl
cs
mov
into
xchg
sarb
dec
ljmp
lahf
mov
inc
push
push
inc
bnd
dec
cmp
aam
xor
xor
pop
mov
or
mov
inc
rcll
xchg
jmp
fwait
and
add
movsl
push
test
ret
icebp
pusha
cmc
add
or
lret
std
xchg
and
mov
pop
test
dec
iret
dec
movsl
in
test
pop
js
jnp
cmp
jns
imul
add
fwait
and
sub
mov
sahf
aad
enter
or
mov
jp
in
adc
xor
push
fisubrs
pop
xlat
int
fisubrl
scas
sbb
mov
sbb
fs
mov
aas
mov
fmulp
mov
mov
sbb
jae
mov
aaa
jno
dec
and
sub
pushf
mov
cmc
push
pop
gs
shll
std
inc
pop
lods
mov
xchg
dec
jmp
movsl
out
in
push
lret
xchg
xchg
es
sub
push
aas
mov
mov
jecxz
les
adc
stos
pop
add
dec
or
mov
stc
imul
mov
dec
ret
add
fwait
mov
dec
jp,pt
outsb
stos
dec
in
sbb
jl
outsb
xchg
mov
adc
mov
cld
mov
std
mov
push
js
js
xchg
fcompl
mov
shll
mov
adc
sub
inc
cld
mov
pop
cmpsb
pop
aaa
pushf
sarl
fists
mov
imul
lcall
das
xorl
arpl
cmp
push
mov
xchg
aad
mov
jnp
stc
cwtl
stos
outsb
rcl
adc
arpl
pop
ja
lret
cmp
test
sbb
lahf
xlat
sti
xchg
sbb
mov
popa
mov
aad
je
push
adc
cmp
fists
stos
push
inc
or
adc
sbb
jg
mov
js
rcrb
lret
push
popa
add
jno
mov
adc
xor
adc
hlt
jbe
mov
mov
xlat
mov
data16
adc
push
jge
ret
lret
insl
push
sub
fbld
mov
xor
ret
shll
mov
mov
cs
sbb
out
lahf
mov
mov
aas
sbb
or
push
mov
sbb
mov
data16
adc
inc
rcll
ja
adc
lea
orl
inc
pop
pop
jns
scas
mov
enter
das
jg
jnp
notb
fadds
gs
es
mov
ja
adc
cmp
jl
imul
aad
test
xor
cld
push
lds
fnstsw
outsb
cltd
or
xchg
sbb
push
test
subb
dec
sub
loop
idivb
dec
push
jno
pushf
push
das
fsubr
stos
lods
lcall
push
mov
mov
inc
test
or
sub
jb
and
sub
xchg
and
insb
xor
inc
clc
xchg
adcb
ret
mov
jno
dec
orb
dec
popf
push
pusha
fisttpl
pop
push
je
inc
cmpsl
jns
imul
cs
sbb
outsb
fcompl
adc
repnz
int
imul
cli
jmp
xor
mov
xchg
mov
add
sub
fldl
test
sbb
cltd
shll
cmp
fldt
push
add
xchg
and
or
push
xlat
push
jns
sbb
icebp
push
push
outsb
fcoms
sub
sahf
inc
cmp
out
into
popa
sahf
and
push
lods
adc
mov
sbb
js
cmp
imul
and
cli
pop
mov
dec
fmuls
loope
sbb
sbb
mov
push
push
lahf
test
lea
iret
add
movsb
mov
adc
test
jge
cmpsl
cmpsb
sub
cld
inc
out
add
in
sahf
jle
test
inc
pop
clc
add
ret
gs
int
pusha
sbb
mov
addr16
cmp
imul
pop
push
add
out
roll
mov
sub
push
in
rorl
enter
lret
inc
pop
les
jecxz
leave
xchg
pop
aam
call
push
mov
imul
mov
aad
dec
add
lret
jg
cmp
fsub
ror
mov
lahf
movsb
aam
shll
push
lods
cmp
call
pop
iret
fisubl
cmp
in
xchg
fldenv
iret
pop
xchg
sub
ljmp
sub
jbe
cmp
lret
mov
stos
fs
jmp
xchg
daa
add
or
pop
hlt
mov
push
repz
in
jo
cmp
adc
les
lock
jecxz
lods
mov
inc
inc
mov
jbe
test
inc
out
int
mov
mov
add
cld
testb
sub
xlat
repz
fdivl
cmpb
mov
xchg
and
mulb
mov
fs
out
loope
push
pop
jo
adc
cmp
cltd
cmpsb
dec
imul
pop
jge
incl
add
std
jns
fnstenv
mov
movsl
ljmp
aam
cmp
dec
xor
or
jno
fdivp
xchg
xchg
shrl
lret
imull
scas
cld
pop
arpl
loopne
leave
sub
pop
push
inc
cli
dec
imul
movsl
movb
mov
scas
addr16
push
loop
stos
mov
inc
sbb
mov
pop
xor
sbb
fildll
jmp
push
loop
xor
repnz
mov
mov
xor
inc
xchg
andb
push
ljmp
flds
inc
outsl
movsl
and
push
aam
rcll
imul
mov
adc
popa
cmp
cmp
dec
adc
scas
push
pop
dec
pop
cwtl
mov
aaa
jo
inc
lds
and
stos
fs
out
and
sbb
aam
sbb
and
bnd
sahf
fiadds
or
cmp
jb
fs
sub
popa
mov
add
pop
das
add
daa
push
cli
jb
stos
loop
rcrl
outsb
sbb
adc
lock
xor
jp
or
mov
call
lret
in
arpl
fisubl
in
xchg
cwtl
lret
dec
dec
out
or
inc
jno
sti
jecxz
ficoms
ljmp
fcmove
jecxz
das
jge
insb
xchg
sahf
jbe
enter
fnstcw
pop
repz
push
lods
stos
push
sti
cmp
mov
lret
pop
clc
push
jmp
daa
and
inc
jnp
mov
jb
dec
stos
or
ret
fcoms
xlat
jecxz
insb
ret
loopne
sbb
nop
scas
lds
dec
out
pop
ljmp
jmp
aas
aam
popa
daa
cltd
add
cmp
lahf
fistl
pop
and
and
fstpt
fs
repz
xor
lcall
or
je
jae
xor
cmp
inc
aam
je
push
pop
cmpsb
repnz
lock
into
out
jecxz
stos
add
sahf
jp
or
insb
sub
push
pop
pop
mov
sub
xlat
cmp
cli
cli
ror
push
rorb
xor
sarl
mov
sar
jae
push
push
sbb
das
repz
rcrb
mov
sbb
dec
dec
mov
jae
adcl
lahf
shlb
loopne
loope
xor
jg
daa
mov
jg
or
ljmp
dec
sbb
or
popa
loop
sub
push
les
cld
jg
cmp
int
ret
aas
std
bound
bound
push
inc
ljmp
loope
or
mov
add
outsl
int
mov
mov
les
inc
cmpsb
frstor
addr16
push
jne
and
jne
lds
es
jo
cmp
fucomp
or
add
in
mov
xor
pop
test
repnz
mov
popa
std
mov
mov
and
mov
pop
mov
and
rcrb
aas
add
int
xlat
add
push
stos
mov
add
sub
adc
push
sbb
mov
mov
imull
aas
pushf
in
pop
jle
out
push
cmp
stos
fadds
xchg
fldenv
test
scas
dec
jb
popa
and
aaa
sub
push
mov
cmpsl
mov
fldt
cvtdq2ps
push
es
mov
hlt
jno
lds
jb
out
daa
xchg
call
jne
lret
imul
pop
adc
lods
xlat
push
mov
pop
les
or
dec
test
sub
inc
xor
hlt
pop
sbb
mov
inc
pusha
cmp
inc
fnstcw
xchg
lods
dec
sub
and
push
movsl
xchg
jns
xor
es
js
mov
in
shl
xchg
jmp
add
dec
mov
push
dec
stc
or
add
scas
add
push
sbb
cmp
cmp
leave
lods
loop
and
push
imul
rolb
test
push
cmp
loop
mov
xchg
jmp
pop
lahf
mov
lea
lock
test
out
daa
mov
and
push
sbb
lahf
fisubs
stc
in
mov
jbe
stc
loope
nop
mov
inc
pop
in
scas
mov
ror
mov
sub
jns
test
stos
or
lcall
mov
xchg
xchg
cmpb
out
dec
push
sbb
mov
out
add
shlb
jae
inc
dec
xchg
rolb
push
addr16
jbe
push
sti
dec
xchg
mov
insl
cmpsl
jmp
mov
mov
out
xchg
adc
sbb
cmp
adc
push
movl
xor
jne
clc
jge
ja
sbb
sub
dec
aas
pusha
mov
or
icebp
jge
std
sub
push
add
sbb
add
rolb
xchg
pop
pushf
xor
xor
movsl
sub
adc
adc
pop
and
cmp
fcmove
jl
pop
mov
sbb
xor
jge
punpckhbw
jb
cmp
shlb
popf
xchg
stc
and
mov
loopne
ret
data16
std
xor
iret
or
pushf
dec
push
jmp
push
sub
add
lock
xchg
mov
adc
cmpl
pop
inc
inc
push
frstor
xor
cld
and
cmp
fldcw
fcmovu
fbld
xor
xor
and
and
inc
loop
mov
push
xchg
xchg
clc
mov
arpl
push
mov
fsubl
dec
movsb
jb
sbb
fidivrs
xlat
sbb
mov
fiadds
lds
pop
mov
sbb
jg
jbe
jns
js
test
scas
and
xchg
int3
mov
and
std
push
mov
inc
sub
jecxz
cwtl
shrl
pop
or
add
scas
sbb
pop
inc
mov
push
sub
xor
cli
sub
or
mov
lods
mov
inc
into
push
ljmp
mov
mov
sub
mov
pop
xor
lahf
mov
and
imul
jmp
lret
iret
xchg
aad
and
mov
gs
or
daa
push
xlat
rcrb
push
xchg
out
and
push
push
sbb
mov
in
popa
lods
fnstenv
inc
or
lds
push
sub
pop
bound
in
int
mov
popf
mov
movsl
xchg
fwait
aam
loop
add
repnz
out
push
pop
push
sub
ds
mov
out
adc
cmp
imul
mov
xlat
out
cmp
jg
sub
pop
rol
ja
sub
mov
out
fldt
outsb
xor
bnd
aaa
enter
sub
stos
hlt
cltd
or
data16
int3
xor
sahf
add
jle
add
fstpl
jl
test
sarl
enter
test
insl
cmp
inc
call
cmovae
inc
outsb
push
sbb
js
or
test
mov
repz
mov
dec
mov
aad
pop
dec
mov
outsb
jge
push
dec
or
repz
divb
pop
adc
cli
adc
and
stos
imul
jge
xchg
out
les
leave
and
push
fs
dec
ret
inc
sbb
pop
or
and
adc
int3
fdiv
xchg
test
pusha
add
or
jns
jbe
and
pop
test
sbb
add
mov
ljmp
push
jecxz
mov
cmpsl
std
push
lret
jnp
mov
divl
sub
shlb
mov
inc
stos
or
pop
test
lods
mov
cli
mov
xchg
push
pop
es
movsb
lock
mov
inc
inc
pop
mov
lcall
jecxz
adc
out
shrb
add
mov
fsubrp
mov
sub
fwait
and
les
mov
cmpsb
xchg
mov
testb
lock
or
mov
pop
mov
xor
das
add
ret
cmpsl
cmp
movsl
inc
mov
add
sbb
cmp
mov
push
mov
push
sub
dec
out
push
and
push
stos
cmp
test
insl
push
shll
test
out
repnz
ficoms
and
iret
xchg
pushf
add
and
jb
rcrb
insl
and
out
inc
mov
jl
mov
lahf
repz
rcrl
repnz
orb
faddp
pop
and
sarb
pop
frstor
xor
and
lock
mov
jnp
xor
sbb
xchg
mov
pop
jbe
mov
push
ret
loop
aas
bnd
xor
movsl
pusha
outsb
pop
push
inc
mov
mov
loopne
fcomps
push
jmp
push
clc
ja
mov
sbb
adc
sahf
out
add
shll
lcall
js
push
rcrb
std
lods
stos
sbb
pop
mov
add
mov
pop
je
pop
and
or
xor
out
xchg
sub
cmc
hlt
inc
in
fwait
notb
stc
fdivl
stc
mov
out
inc
xchg
stc
popa
cmpsl
and
dec
jb
fprem
not
add
mov
sbb
inc
pop
lcall
cmp
mov
mov
add
xchg
flds
test
lcall
pop
and
jnp
scas
aas
aam
pop
imul
lcall
jmp
cld
lret
pop
xchg
push
fstpt
into
inc
push
or
adc
fmull
inc
hlt
mov
sbb
lea
movsl
lods
lret
mov
inc
or
jns
fdivrl
sbb
and
ja
scas
daa
rcl
push
add
aas
cmp
add
in
je
add
lods
mov
add
xlat
cmp
rolb
cmp
push
mov
lds
mov
cmp
pop
xchg
sbb
insl
lret
fdivl
lahf
subb
mov
outsb
push
xlat
push
sbb
dec
int
push
dec
mov
cmp
push
xor
popf
sub
icebp
in
xor
mov
add
popf
out
and
pop
js
outsl
or
inc
xchg
movd
fidivrs
outsb
negl
adc
call
sub
and
lret
iret
inc
dec
notl
sbb
ja
jp
xor
push
repnz
pop
stos
or
xor
cmp
and
dec
mov
outsb
xor
int3
into
push
mov
stos
push
ss
inc
push
or
add
cmp
fiaddl
lods
sahf
or
ss
cmc
std
pop
mov
jp
mov
xlat
cmp
enter
lahf
push
shl
xor
iret
sbb
mov
mov
adc
dec
pop
inc
inc
pop
mov
inc
test
sub
lret
dec
mov
dec
aad
sarb
dec
mov
in
clc
jp
aas
sbb
out
cmp
gs
inc
data16
adc
ss
sbb
jnp
movsl
lods
daa
mov
cmp
and
popa
push
sti
ss
cmp
add
popf
insl
sbb
mov
bound
mov
ds
mov
sbb
cld
lret
xchg
xchg
out
rorl
xchg
lea
xchg
in
movsl
js
pop
mov
imul
clc
in
in
lret
jg
xchg
cmp
dec
cwtl
jae
dec
mov
jo
out
mov
shlb
mov
ret
fs
or
sbb
mov
xor
daa
mov
sub
rorb
mov
cmp
test
stc
push
mov
shr
adc
xor
push
mov
shll
cmp
jbe
cmp
xor
xchg
or
adc
cmp
loope
icebp
test
or
lock
aaa
sbb
mov
es
sub
cwtl
lock
adc
popa
popf
test
enter
data16
int
sti
pushf
cld
ret
pop
sub
push
hlt
cmp
popf
subl
imulb
and
loop
nop
cmp
mov
loopne
sbb
jne
in
scas
leave
aam
or
mov
loope
movsl
jecxz
ss
inc
mov
or
sbb
mov
jmp
mov
or
aad
mov
xlat
fidivs
test
push
ds
push
in
jmp
lret
mov
and
paddw
scas
fwait
add
out
pop
mov
adc
sahf
mov
pop
push
xor
outsl
jae
add
sub
and
sbb
mov
adcb
out
add
or
out
sub
add
add
push
pop
mov
jge
ss
mov
out
rorl
in
add
leave
decb
cmp
xlat
sub
sbb
mov
push
lock
or
xchg
adc
inc
int
std
movsb
push
mov
or
pop
in
inc
out
loop
inc
dec
rcrb
testb
ljmp
pop
sbb
xchg
loopne
dec
fcomip
movsl
and
loope
cwtl
jnp
in
lea
rorl
pusha
jmp
stc
xor
popf
fisubl
adc
orb
jp
pushf
int
stc
sbb
xchg
mov
fcom
lret
scas
xor
ljmp
in
dec
cmp
arpl
mov
push
fs
jl
push
decl
mov
adc
jbe
sub
outsl
lret
add
imul
mov
dec
jne
movl
jp
jae
jno
insl
nop
aam
lea
les
lock
mov
add
xchg
mov
push
dec
cmpsb
xchg
mov
inc
push
push
cmc
scas
mov
enter
fs
fmulp
fwait
out
mov
push
mov
pop
xor
scas
out
xor
inc
mov
push
inc
fldcw
mov
cmp
mov
or
out
in
push
and
sarl
out
and
cmp
fdiv
add
sub
mov
dec
mov
cltd
push
jg
xchg
xor
fdivl
pop
int
jle
dec
rclb
or
inc
mov
cmp
push
pop
or
jae
movsl
loope
mov
jae
push
ds
jno
push
leave
out
adc
jb
std
movsb
aad
in
loope
and
insb
and
add
in
jne
mov
adc
mov
adc
xor
dec
test
fisubs
fstpl
mov
inc
out
test
cwtl
jle
ror
or
push
mov
stos
gs
dec
dec
enter
fistl
movsb
mov
icebp
fwait
xor
mul
incb
adc
clc
sub
enter
dec
cs
jle
das
dec
jge
sbb
fsubrp
mov
lea
mov
push
cmc
aaa
dec
mov
test
inc
push
stc
cmp
pop
push
jge
fimull
jnp
popa
js
mov
cmpsb
das
xor
mov
fcmovne
xor
inc
mov
out
scas
mov
call
push
cli
mov
in
ss
cmpsl
das
push
daa
xor
add
ss
push
mov
mov
xor
mov
mov
iret
cmpsb
inc
adc
push
aad
enter
ret
xor
iret
clc
ss
popf
ds
push
ljmp
jbe
es
and
pushf
lea
mov
movsl
sub
xchg
scas
fisubrs
mov
scas
loop
cmp
mov
movsb
insl
lahf
mov
test
jb
pushl
dec
loope
hlt
insl
mov
fmuls
inc
pop
movsl
stos
scas
jg
xlat
or
iret
dec
stos
cs
mov
in
das
or
jge
int
xchg
cmp
add
xchg
pop
std
and
lods
outsl
mov
jae
mov
or
gs
mov
or
roll
std
popf
inc
outsb
jecxz
jle
or
xor
hlt
or
mov
imul
adc
out
push
jo
sbb
inc
xchg
add
inc
or
inc
fld
jbe
lock
push
xchg
rcrb
cld
jecxz
adc
mov
test
sub
or
js
mov
mov
push
mov
shrb
dec
rcll
les
jno
adc
mov
shrb
or
adc
out
xchg
sbb
inc
mov
and
ret
xchg
push
jnp
test
push
adcl
xor
std
fst
popa
xorb
sub
enter
sub
mov
dec
sahf
cmpsl
mov
imul
pushf
jne
gs
mov
shrb
push
jle
jns
bound
mov
pushf
addb
loope
mov
data16
push
lret
dec
cmc
xor
and
fldl2t
jge
call
mov
cmp
dec
fstps
stc
cmp
cld
arpl
cmp
pop
xor
stc
in
testl
dec
xchg
add
mov
jecxz
movsl
jo
mov
dec
push
xchg
or
dec
test
and
lret
sub
in
insb
ja
mov
fsubl
es
scas
inc
cmp
cmp
jns
in
sub
add
aas
adc
stc
rolb
mov
outsb
push
mov
punpckhdq
outsb
in
adc
xorb
loop
xor
bound
les
rclb
inc
jb
mov
fadds
bound
scas
test
adc
inc
add
loope
adc
aad
mov
jns
repnz
and
pop
or
arpl
cmp
or
in
xchg
push
xor
jne
cmp
test
daa
xor
in
std
in
push
inc
in
sbbl
lea
or
jb
inc
sbb
lret
cli
lock
lods
shll
cwtl
test
sbb
lock
or
frstor
int3
inc
jmp
lds
aas
clc
push
dec
lods
lods
xchg
fmuls
fildll
cmp
or
cmp
push
iret
xchg
mov
xor
xlat
test
lods
jp
jp
pop
sbb
jge
fsubl
xor
mov
add
push
mov
and
insl
jge
sbb
js
push
scas
push
adc
out
pushf
cli
dec
and
fcomps
std
sub
hlt
mov
lret
fwait
xchg
test
sub
lcall
jns
xchg
movsl
notl
fwait
rcll
lods
jecxz
jmp
imulb
mov
cli
inc
test
mov
cmp
sub
jnp
cmpsl
push
and
addr16
mov
jl
cwtl
fnsave
cmc
mov
aaa
sub
test
bound
mov
mov
testb
ss
mov
popa
ja
rclb
sub
push
rclb
hlt
mov
sub
mov
loopne
shrl
mov
or
push
and
push
jmp
and
and
data16
pop
jl
stos
sub
jge
sbb
dec
push
jge
inc
xor
and
or
mov
add
cltd
fdivr
test
cld
sub
aas
imul
mov
mov
add
out
call
jae,pt
imul
orl
shlb
orl
imul
inc
inc
pop
mov
sbb
js
mov
out
fcoms
mov
divb
outsl
mov
cld
jmp
test
dec
lret
cli
jg
add
xor
std
ljmp
lock
or
push
xor
cmpsb
addr16
add
mov
mov
xchg
stos
addb
cmp
popa
repnz
push
sbb
cmpl
lods
sti
ss
push
xor
and
in
pop
xchg
jae
push
fcomip
shrb
in
test
je
mov
pop
cltd
sub
sbb
xchg
addr16
fmull
test
jmp
ljmp
adc
mov
sbb
enter
adc
cmpl
pushl
mov
movsl
movsl
pop
in
decb
mov
rclb
dec
movsl
xor
cld
cld
mov
jnp
adcl
xchg
cltd
icebp
rclb
shl
int
xchg
sub
inc
sbb
mov
lahf
insl
dec
jg
loopne
adc
iret
movsl
aam
mov
es
aaa
ja
mov
cmp
jo
outsl
adc
sub
mov
outsb
repz
and
sti
mov
arpl
mov
sub
sub
jl
out
or
lret
pop
mov
and
pushf
xor
sub
add
loopne
adc
mov
jmp
xchg
jno
cmpsl
cmp
jb
enter
adc
pop
jle
lods
mov
cld
cmpsl
mov
lods
push
hlt
pushf
xlat
bound
mov
dec
ret
adc
mov
pop
mov
iret
xor
sbb
andl
pop
push
das
jnp
shr
ret
xchg
rorb
pop
mov
and
xor
sub
sbbb
nop
add
pop
cmpl
loop
mov
das
pop
dec
or
fmuls
lods
mov
sti
sub
nop
iret
popf
xor
jmp
jge
mov
movsl
add
lea
mov
dec
je
ds
imull
enter
jno
cmp
aam
imul
nop
clc
es
lret
cwtl
fs
jle
inc
jg
sbb
mov
mov
scas
cli
mov
pushl
jp
les
or
jb
cmp
mov
pop
jbe
shrb
and
inc
xor
cmp
enter
bound
push
cmc
mov
mov
lods
fistl
sbb
in
aad
in
adc
test
popa
lds
imul
ja
sub
daa
sbbb
lea
pop
sbbb
push
es
cmc
les
int
add
fstl
loope
fs
in
inc
mov
jg
call
ljmp
mov
hlt
outsl
ja
loopne
mov
mov
mov
push
lret
addl
pop
dec
dec
jnp
pop
aad
xchg
mov
insb
rclb
out
xchg
js
and
xor
fisttpl
in
aad
repnz
xchg
and
movsb
in
push
aad
in
aam
in
insb
or
loopne
cmp
inc
mov
pop
and
aam
jge
cltd
cmp
cmc
shll
out
mov
pop
fisubrs
jmp
outsb
mov
mov
sbb
mov
jne
not
mov
push
sti
popf
add
inc
cmp
decl
enter
rclb
hlt
mov
cmp
cmp
add
test
gs
inc
rcrl
ret
cmpsb
sub
jbe
sub
test
add
inc
push
mov
cmp
and
fwait
or
sbbl
in
lods
mov
jmp
mov
rorb
jg
cmc
or
dec
inc
inc
sub
pop
pop
sbb
sub
jo
lea
cmp
or
add
push
jns
sub
xchg
jae
daa
lds
inc
aaa
pop
imul
cmc
mov
xlat
popf
data16
repz
push
sbb
pop
into
jo
xchg
fcmovnb
push
out
jno
call
test
xchg
das
sbb
xchg
sub
pop
dec
pop
mov
or
mov
scas
or
inc
inc
mov
mov
bswap
cmp
mov
test
dec
inc
jo
push
pop
outsl
mov
lea
enter
lahf
jno
cmp
cwtl
sbb
cmpsl
jp
addr16
dec
push
inc
rcrb
lods
dec
push
inc
push
add
ja
add
fidivl
clc
push
lods
pop
mov
ret
mov
ret
sub
rcrb
dec
mov
ljmp
div
data16
jp
pop
aad
shl
pop
pop
out
sarl
pop
jns
sahf
cmp
cmpsl
shrl
xlat
fsubr
pcmpeqw
pop
mov
mov
push
lea
ds
test
ret
cld
jnp
pop
add
add
popa
rcll
aam
mov
xor
lret
cld
insb
movsb
call
mov
shr
dec
xchg
sub
gs
xor
push
stc
mov
push
dec
push
mov
pop
push
add
mov
filds
in
pop
stos
or
lcall
adc
aad
pop
int
lcall
add
inc
add
push
cs
sbb
push
rcll
dec
clc
adc
call
or
pop
add
cmp
out
test
cmp
mov
lds
jnp
hlt
mov
lahf
and
push
mov
int
jbe
xor
push
pop
jo
dec
xchg
cli
dec
nop
sbb
ret
lcall
xchg
arpl
sub
push
mov
inc
pusha
hlt
fstpl
scas
cmc
in
stc
sti
mov
mov
sti
imul
mov
cmc
je
lods
data16
mov
test
and
dec
add
stc
lds
imull
out
jo
adc
jmp
sub
jmp
in
cmp
mov
mov
or
scas
mov
inc
in
mov
jnp
cli
inc
add
in
movsb
push
cmp
push
pop
push
cli
add
inc
cli
jns
or
push
mull
inc
insb
stc
add
push
jg
faddp
daa
xor
pop
jo
out
sbb
cld
lahf
xor
hlt
outsb
dec
fcmovbe
xchg
stc
jae
xchg
sbb
inc
xchg
and
xchg
shlb
jno
xor
add
add
jg
loop
push
jecxz
rolb
outsl
sbb
jo
add
ret
and
loope
sahf
ja
jp
data16
rorl
xchg
stc
sarb
aam
dec
sbb
fisubs
andb
sub
sbb
dec
out
mov
push
lock
inc
pop
and
shl
mov
pop
mov
daa
jg
ljmp
pop
xor
in
push
cmc
xchg
repz
movsl
push
test
mov
cld
test
cmp
fsubl
in
cmp
push
pop
test
mov
iret
push
mov
scas
repnz
or
lcall
pop
repz
mov
xchg
mov
mov
push
mov
jbe
outsl
mov
insl
loopne
lret
mov
and
push
sub
je
clc
pop
dec
sti
push
pop
cmpsl
mov
xchg
pop
js
sub
in
orl
rcll
icebp
out
sti
rcll
push
inc
push
rcl
mov
leave
stc
insb
pop
cmp
shll
sahf
adc
jmp
xlat
mov
mov
ret
mov
jae
cmp
pop
pop
clc
popf
in
jecxz
lahf
ds
jbe
sbbb
fidivrl
mov
jns
dec
mov
mov
dec
std
sub
mov
movsl
scas
or
sti
adc
cld
test
adcb
xlat
mov
add
cs
inc
xchg
ret
daa
add
bound
ror
stos
pop
int
pop
lods
loop
push
push
daa
clc
and
xlat
xor
insb
lds
leave
aas
dec
js
das
pop
lods
fiadds
fcomp
imul
mov
cmpsb
sbbl
add
incb
inc
mov
ljmp
dec
xor
insl
mov
mov
add
sub
imull
cltd
mov
ret
jmp
scas
pop
sbb
movsl
mulb
fstl
jge
pop
fcmovnb
xchg
sbb
int3
aaa
repnz
lds
mov
sbb
test
mov
loope
mov
or
lea
imull
mov
cld
dec
pop
mov
push
pop
jo
inc
test
popa
mov
sbb
xchg
sahf
fadds
jbe
hlt
shlw
into
gs
inc
dec
fs
adc
sbb
dec
fsubr
std
fisttpll
sub
test
test
pop
in
xor
test
cs
add
pop
fldcw
sahf
out
mov
push
int3
sub
mov
push
sub
out
int
xor
and
dec
cmp
pop
pushf
push
push
lret
aad
cmp
sub
lea
rorl
les
ret
mov
cmc
cmp
fcomps
or
pushf
ja
fcomp
push
xor
in
xor
mov
out
lock
push
decl
outsl
scas
sbb
call
out
and
das
jg
and
bound
xchg
daa
inc
lcall
loop
pop
xchg
fimuls
push
inc
and
xor
mov
jo
aad
std
sti
into
and
imul
je
xor
jne
mov
fwait
jae
lret
pop
ja
sbb
bound
loope
mov
push
inc
lcall
leave
js
sub
insb
dec
popa
das
cs
jmp
ljmp
sub
dec
fimuls
pop
rcpps
push
dec
pop
lahf
jecxz
dec
nop
mov
daa
dec
dec
rorb
aad
pop
aas
mulb
out
pop
inc
pop
lock
notb
data16
xchg
xor
sub
js
xchg
fs
mov
mov
mov
cli
mov
fwait
jmp
movsl
int
add
cs
push
cmpsl
pushf
out
cmp
inc
add
rcr
jmp
mov
shll
adc
mov
xor
fnsave
jle
inc
aad
scas
mov
repnz
mov
mov
mov
mov
cmpsl
sbb
pusha
and
mov
loopne
scas
xchg
bnd
mov
or
into
nop
xor
xchg
pop
mov
shr
mov
das
push
add
jbe
iret
and
mov
cmpsb
test
pop
xchg
fdivl
cmpl
loop
jae
mov
and
call
int
dec
mov
roll
test
sbb
mov
test
decl
cmp
pop
push
addr16
gs
mov
out
adc
inc
pop
add
inc
or
cld
mov
mov
pop
add
and
in
xor
incb
inc
mov
mov
inc
and
fidivrs
cwtl
mov
iret
mov
dec
mov
aad
xor
xchg
mov
and
cmp
sub
cmp
in
mov
cmp
pop
outsl
das
mov
cmp
imul
cmp
dec
fs
pop
or
rorl
mov
xchg
scas
push
rcrl
fcoml
add
in
cmpsl
test
mov
pop
inc
dec
scas
cmp
outsb
sub
xor
jo
jne
int3
mov
in
in
out
popa
xchg
subl
stos
add
pop
xlat
shlb
pop
push
mov
xor
out
push
into
jb
ss
fstpl
push
lret
sbb
inc
dec
cmp
adc
sahf
adc
jne
pavgw
xchg
inc
inc
adc
cmp
adc
jae
stos
or
ljmp
sbb
xor
inc
mov
mov
xchg
fidivl
ret
push
cmpsl
push
mov
out
ret
add
xor
xor
xor
and
mov
add
outsb
testl
xlat
icebp
lret
js
imul
dec
or
out
jl
mov
ljmp
leave
mov
repz
and
cld
adc
mov
sbb
scas
push
aaa
jp
shrl
sbbb
mov
mov
sub
leave
mov
ja
jo
ret
fisttpl
xchg
jle
leave
jne
or
jp
fcom
fsubrs
dec
jne
outsl
adc
rcll
test
pop
das
mov
popf
mov
mov
mov
enter
hlt
dec
out
testb
pop
data16
mov
xchg
in
pop
mov
sub
xchg
aas
sub
movsb
xor
push
or
mov
ret
sub
cld
insl
lods
lods
fdivr
xor
sub
xor
mov
fbld
xchg
pop
frstor
jecxz
adc
inc
lahf
sbb
ret
push
sbb
xchg
outsl
xor
gs
cmpsl
jl
pop
arpl
push
test
ds
xchg
and
fisubs
cmp
pop
popf
push
outsl
sub
adc
mov
inc
sbb
lea
lcall
inc
rclb
aas
xchg
push
push
rcpps
loope
test
ror
sarl
add
or
shrb
flds
push
ss
jo
jno
inc
les
cltd
icebp
lods
int
mov
iret
std
lcall
mov
push
cli
xchg
scas
or
jg
cmp
jbe
dec
sub
push
sti
addr16
dec
insl
xor
xchg
and
in
mov
lods
jo
lods
mov
mov
and
or
jp
in
dec
inc
data16
in
and
cli
adc
inc
mov
mov
mov
jns
pop
sbb
sub
ja
js
test
es
fs
dec
fmull
insl
inc
pop
movsb
fs
ds
push
cmpsb
dec
lahf
addr16
mov
add
jae
xor
lock
inc
mov
lret
sti
or
mov
cmp
pusha
popf
andb
push
push
mov
or
pusha
xor
popa
stos
ret
and
gs
cmpsb
and
dec
push
ds
dec
dec
pop
xchg
cmc
jmp
imul
jb
mov
xchg
jnp
test
adc
aaa
jae
iret
cli
and
js
push
mov
xchg
scas
and
push
mov
dec
lods
popa
or
aad
mov
stos
cmp
test
in
les
cmpsb
bound
cmpsl
ja
sbb
aas
ds
js
sti
out
imul
sub
ljmp
in
fsubrs
mov
call
push
jnp
jl
jecxz
mov
jne
ja
push
arpl
call
jmp
sub
push
fidivs
adcb
push
dec
inc
lret
and
scas
cmp
mov
jmp
inc
adc
jb
repz
sarl
xor
inc
outsb
xchg
scas
mov
stc
fcmovnb
test
inc
xchg
pushf
mov
pop
jns
sti
pop
mov
pop
add
mov
repz
dec
xor
scas
or
outsb
shr
push
push
cmp
repnz
xchg
push
cmp
daa
and
push
jmp
in
jbe
mov
mov
xchg
jns
sbbb
sub
test
fwait
popa
and
aaa
dec
pop
adcl
in
or
xor
cmp
sbb
in
push
loope
mov
xor
jae
xor
cwtl
lock
in
aaa
std
adc
outsl
push
aaa
dec
push
sbb
dec
jl
inc
or
and
sub
push
cli
add
aad
bound
or
mov
push
in
in
push
mov
adc
scas
push
push
enter
mov
test
insl
or
pop
iret
mov
sbb
jb
jb
xchg
outsb
cld
addb
inc
into
enter
in
les
inc
lret
add
pop
adc
in
out
lret
jecxz
test
cmpsl
jnp
daa
lret
mov
xchg
inc
adc
js
push
loopne
jns
xchg
push
jae
ja
push
mov
push
movsb
sbb
icebp
rcrb
xchg
loopne
xlat
sti
or
pop
xchg
cmp
push
cltd
add
lahf
add
cli
push
mov
and
inc
bsf
jbe
pop
sbb
and
fucomip
jg
push
rorl
pop
negl
mov
clc
jl
arpl
cmpsb
rcrb
mov
popl
lret
cmp
loope
xchg
xchg
dec
sar
pop
inc
sub
push
popf
mov
mov
cmc
add
je
pusha
paddb
xor
cltd
push
aas
mov
andb
adc
lcall
stos
push
mov
mov
mov
mov
jb
adc
add
sub
adc
cmp
mov
or
in
push
jp
test
add
popa
ret
shrl
rcr
in
push
pop
mov
data16
jno
popa
leave
pop
pop
jb
cmp
stc
xchg
inc
jnp
insb
xor
int3
push
lods
cmc
or
in
mov
jbe
push
lcall
sub
push
iret
pop
arpl
mov
nop
or
xlat
jbe
cmpsb
ret
push
jbe
lret
mov
pop
ficomps
push
mov
data16
sbb
test
aam
cmp
into
lcall
loopne
icebp
testb
jae
bound
loopne
movsb
lahf
mov
std
icebp
mov
insb
test
sahf
negl
add
cwtl
jl
pop
mov
aaa
xchg
push
leave
iret
inc
sbb
jne
fcomps
xchg
mov
inc
dec
lahf
inc
shlb
decb
insl
test
cmp
aaa
mov
in
and
pop
xorb
mov
int3
push
into
int
out
sub
sahf
sbb
imul
and
and
es
pop
mov
sub
pop
or
inc
lds
cmpsb
int3
fimuls
std
testl
scas
xor
scas
in
mov
dec
inc
fnstcw
xor
out
and
dec
and
xchg
mov
arpl
mov
or
mov
inc
adc
por
in
cmp
inc
into
js
xchg
les
daa
inc
push
mov
outsl
jbe
mov
jmp
pushf
push
xorb
push
lea
dec
inc
mov
leave
pop
out
cmp
push
fiadds
adc
mov
das
push
insl
rorl
xchg
aas
gs
pop
mov
lret
clc
cwtl
rcl
aaa
xchg
aad
xor
aaa
xchg
sub
sbb
pop
aam
jmp
lds
push
jl
or
iret
jecxz
mov
dec
rorb
inc
push
lods
aas
pop
icebp
test
cmp
les
aas
inc
insb
lret
cltd
jl
in
sbb
dec
frstor
sti
in
jle
mov
sbb
les
dec
mov
cld
cmp
test
movsl
lock
xchg
fdivs
dec
loop
lret
pop
mov
mov
mov
jb
add
daa
dec
call
outsb
add
jne
sbbb
scas
adc
insl
jae
and
sbbl
bound
lea
cs
pmuludq
jmp
cmpsb
jb
mov
test
pop
test
push
movsl
stos
das
xchg
fstpl
sbb
imull
mov
or
pop
jecxz
cmp
jmp
in
lods
arpl
cmpl
sbb
mov
lret
xlat
cmpsb
jbe
ja
sub
sbb
clc
mov
adcl
insl
mov
inc
push
pop
sub
ljmp
dec
push
cltd
sbb
pop
jns
mov
enter
sub
lahf
leave
test
test
lahf
scas
cmp
fs
vpaddusw
divb
in
cwtl
mov
ss
inc
cmp
add
cmp
sahf
ret
sub
mov
jae
add
mov
rol
je
mov
add
dec
subl
cli
push
invd
mov
ja
jge
shrl
popf
out
ljmp
stos
repz
ds
in
fldcw
jo
fistpll
adc
mov
mov
pop
mov
add
sub
pop
mov
in
dec
mov
cli
xchg
nop
sbb
push
fdivs
call
outsb
adc
xchg
icebp
mov
sbb
push
pushf
xchg
std
inc
mov
pop
jg
xor
std
les
mov
aad
lret
mov
test
xor
add
mov
es
inc
push
and
mov
sub
xchg
lods
inc
mov
rdmsr
mov
cmpsb
int3
push
sub
pop
mov
adc
and
rorb
push
xor
mov
and
shrl
push
mov
mov
into
or
add
pop
fistpll
rcr
add
sarl
push
and
mov
jnp
xchg
xchg
pop
clc
jl
aaa
add
jle
pop
xor
subb
out
imul
xchg
std
rcl
lcall
lea
ret
add
push
dec
ret
or
ficoml
cld
xchg
clc
mov
and
sbb
fs
mov
mov
roll
lds
pop
jne
loope
adc
push
lahf
mov
push
sub
std
stos
sahf
sub
add
testl
fimull
ss
mov
stos
pop
mov
addr16
outsl
sbb
std
jnp
sbb
add
push
sbb
push
iret
call
inc
sub
pusha
outsb
mov
loope
jb
fs
and
iret
int
xchg
xor
mov
sahf
xchg
dec
jp
cmp
fdivl
or
and
cld
sub
std
or
outsl
dec
dec
jae
test
mov
mov
imul
dec
mov
sub
xor
or
iret
cmp
into
outsl
mov
sbb
fwait
mov
cwtl
rcr
ljmp
adc
shrl
dec
and
adc
in
bound
es
pushf
or
loop
jbe
call
pop
or
aaa
fisubrl
jle
fisubrs
cltd
out
push
out
out
es
scas
mov
xchg
pop
xchg
xchg
ljmp
hlt
fwait
xlat
and
xor
pop
mov
push
inc
dec
test
mov
cmp
pop
repz
jmp
xchg
jmp
inc
sbb
insl
in
xchg
rcr
popf
sbb
push
xchg
sub
std
inc
inc
daa
fs
inc
xchg
ffreep
addr16
sub
movsl
fildl
mov
dec
int3
or
aad
and
push
fwait
lahf
lea
pop
test
push
fists
insl
jl
mov
inc
pushl
repnz
popa
icebp
testb
pop
inc
push
cmp
mov
jne
or
fadds
pop
ror
nop
and
push
add
lahf
ret
fisubs
mulb
or
cmp
rorb
out
cmpsb
mov
sbb
pusha
dec
fdivr
push
xlat
test
cmpxchg
pop
jb
cmpsb
test
jo
or
jecxz
adc
mov
lds
fisubrl
out
pop
fisubrl
call
movsb
lea
cs
inc
popa
sub
fs
push
leave
xor
sbb
xlat
out
test
int
andb
lock
sub
cmp
jns
cs
std
and
jp
mov
and
mov
mov
push
aaa
loop
or
xchg
mov
jb
mov
xor
in
or
test
out
icebp
fbstp
xchg
sbb
sbb
sbb
aad
lods
clc
repnz
jecxz
jno
loope
dec
push
loop
inc
push
xchg
adc
xchg
mov
pop
mov
je
cmp
sbb
in
mov
hlt
repnz
ja
push
or
mov
and
repnz
inc
mov
pushf
lock
mov
into
inc
and
dec
pop
pop
incb
or
mov
xor
sub
into
sbb
lret
jecxz
mov
outsb
into
jnp
repnz
inc
ljmp
xor
jl
inc
scas
iret
mov
scas
test
test
xchg
push
xchg
out
sbb
or
sahf
popf
add
adcl
flds
fcmovu
orb
fstp
ds
stos
sbb
fisubrs
dec
xchg
dec
and
mov
jbe
mov
or
add
in
loop
shrb
leave
cmp
add
dec
imul
cmpsb
repnz
and
int
gs
imul
sbb
xor
push
es
xor
jbe
gs
jbe
popf
xchg
or
dec
test
xchg
sub
fcmovnb
mov
push
push
pop
adc
lea
int
xor
add
xchg
fs
dec
lahf
jb
aas
lret
pop
sbb
cli
mov
push
cmp
mov
adc
inc
sub
mov
sub
lock
iret
push
push
lret
cmpsl
mov
lcall
push
jg
movsl
sub
cmpsl
loopne
cmpsb
loope
push
test
and
add
cmp
loope
out
cld
jg
sub
imul
sub
out
out
aad
fdivrs
add
jg
jl
in
test
inc
iret
cmpsl
popf
fucomp
add
insb
shrb
jp
pop
dec
lret
lahf
shll
enter
sbb
mov
xlat
mov
test
loope
jne
mov
aas
in
sbb
pop
cli
mov
fstl
jle
pop
inc
jp
xchg
pop
lods
mov
xchg
and
cmp
push
pop
mov
lods
les
loop
pop
add
aaa
pop
clc
dec
mov
adc
fisttpll
loop
xchg
ret
jae
shlb
dec
negl
sub
sbb
pop
push
dec
sahf
sub
cmp
sub
inc
sbb
into
or
sub
nop
ret
xchg
pop
xchg
pushl
mov
sub
cmpsb
aad
adc
cmp
cmp
xor
das
popa
pop
xor
inc
hlt
dec
repz
scas
ret
cmp
mov
xor
inc
in
out
jmp
mov
or
cmp
and
pop
rcl
mov
push
push
jl
push
neg
push
cmpsb
mov
xchg
aad
imul
inc
and
addr16
mov
ljmp
aam
cmp
cmp
subb
lea
loop
popw
dec
cmpsl
mov
nop
mov
cmpsb
sub
cmp
and
adc
jbe
popf
mov
mov
outsl
lcall
or
lcall
aas
leave
ss
out
push
xor
mov
sbb
test
xor
and
outsl
cmp
inc
mov
xor
push
jae
push
bnd
jns
shl
jl
sbb
movsw
adc
cwtl
push
push
inc
push
lods
and
pop
gs
loope
cmpsl
jbe
fisttpll
push
push
loopne
lods
icebp
xlat
fisubrl
sub
xchg
shr
xchg
mov
pop
jg
xor
repnz
mov
jo
insl
inc
xchg
sarb
adc
mov
mov
negb
push
out
xchg
xchg
lret
fucom
ret
aas
mov
ss
jge
data16
scas
dec
cmp
loop
shll
xchg
inc
outsl
mov
enter
sub
test
sub
sub
mov
sbb
ret
mov
inc
xor
ljmp
adc
and
xor
fcomp
push
cmp
push
popf
stos
into
dec
and
dec
mov
ja
mov
push
adc
insl
insl
cld
pop
xor
aam
inc
mov
inc
mov
lcall
scas
fnsave
mov
addl
pop
pop
lcall
mov
fistps
inc
dec
push
cs
xchg
xchg
xor
and
and
mov
add
js
inc
cmp
out
cs
jb
xlat
sub
arpl
adc
xorb
push
mov
loopne
mov
out
sbb
dec
loopne
rorb
inc
aad
and
je
pop
sti
adc
test
adc
xchg
push
scas
xchg
testb
jg
pop
out
sbb
jne
out
or
fistpll
sbb
outsb
loope
mov
rclb
mov
pop
mov
push
mov
cmp
push
xor
lods
cmp
inc
jp
cli
shll
or
push
xchg
jns
in
sub
cmc
jecxz
add
xchg
push
insl
inc
sub
int3
sbb
and
dec
push
dec
jno
mov
loope
std
repz
adc
int3
rcl
sbb
movsl
imulb
push
out
jle
add
cmp
inc
or
mov
hlt
shll
es
xchg
ror
push
jecxz
jmp
xlat
aaa
out
inc
enter
movsb
push
mov
cmc
mov
in
rcrb
jno
cmp
dec
shl
mov
call
ja
dec
daa
in
ljmp
das
outsb
sub
xchg
inc
je
repz
enter
fmuls
hlt
into
pop
ja
xchg
out
aas
mov
iret
aad
shl
cs
fcoms
cli
into
aam
std
adc
inc
sub
pop
cltd
push
fstl
arpl
icebp
sbb
shlb
push
and
into
mov
negb
adc
and
test
cmpsb
ror
mov
ficompl
in
jecxz
jle
push
xchg
iret
mov
mov
xlat
outsl
or
bound
popf
fs
mov
cmp
cmc
ja
and
mov
std
push
hlt
sbb
pop
and
mov
sub
leave
xchg
mulb
movsbl
push
and
sub
inc
jl
clc
sub
shll
int
sub
fdivr
adc
cltd
dec
mov
xchg
pop
cmp
imul
or
adc
pop
or
sbb
pushf
inc
sbb
pop
lock
pushf
dec
dec
cmp
es
cmp
xchg
ret
cmp
into
loop
inc
in
xlat
adc
xchg
enter
push
pop
int
aas
vshufps
lds
adc
cld
xchg
lahf
fildll
mov
jmp
sbb
inc
test
aam
and
loope
inc
fbstp
nop
inc
jle
push
popa
inc
ja
clc
push
loop
mov
leave
cmpsb
rolb
push
mov
sbb
aas
inc
xor
or
or
mov
out
imul
sbb
scas
mov
movsl
xchg
xchg
sub
fisttpl
adc
and
jae
mov
lock
int
insb
and
pop
rolb
push
xchg
mov
push
mov
pop
cwtl
or
scas
loop
sbb
mov
scas
cmpsb
fcoml
aad
xor
xchg
or
pop
movsl
xor
adc
aam
sub
and
xor
mov
jne
mov
xchg
push
xchg
sub
mov
lods
mov
xchg
jns
aam
cwtl
mov
pop
jnp
ret
outsb
and
pop
sub
test
mov
inc
push
cwtl
and
and
sti
fadd
loope
les
arpl
push
pop
add
mov
ret
lss
add
mov
or
fnstenv
arpl
cs
adc
pop
cmp
in
dec
inc
cld
data16
shrb
std
pop
negl
nop
movsb
cmpl
in
mov
xor
dec
cmp
or
add
mov
mov
testb
enter
andl
stos
addb
fistpll
es
andb
cmp
push
scas
jne
and
cwtl
push
shr
aaa
lret
div
mov
jmp
dec
and
stc
loopne
jge
int
mov
and
lret
dec
in
and
jnp
insb
jae
or
xor
jecxz
das
xlat
stc
ret
or
lods
pusha
pop
mov
out
mov
xchg
cld
lods
lock
cmp
dec
push
jo
hlt
les
imul
push
test
xor
sbb
lahf
in
imul
adc
or
aaa
stos
sti
shl
or
fsubl
pop
jecxz
outsb
xlat
cwtl
out
dec
neg
insl
mov
jb
rclb
xor
test
cmp
enter
lea
or
mov
sbb
xchg
setno
mov
pop
fstpl
leave
mov
mov
and
xor
in
xchg
mov
je
lods
jle
mov
aam
call
sbb
adc
sbb
adc
je
jae
insb
test
sub
jecxz
xchg
and
fcomps
lret
mov
shrb
pop
jle
lcall
jp
add
dec
jno
push
mov
test
mov
gs
lretw
push
dec
mov
les
push
push
imul
addr16
imul
insl
addr16
mov
xchg
fwait
adc
xchg
xor
and
cli
fsubrs
shlb
stc
rcrl
adc
jg
rorl
jnp
mov
lods
popl
inc
lret
mov
add
inc
jae
push
outsl
lgs
push
mov
imul
nop
ss
cmp
lods
mov
in
cltd
mov
and
loopne
add
push
addl
jo
pushf
les
dec
sub
stc
aam
xor
lods
insb
cmp
push
aam
jmpw
push
push
push
mov
paddq
stos
and
shl
and
xorl
sub
and
pop
mov
aas
out
adc
xchg
inc
addr16
sub
adc
hlt
ret
and
lcall
push
repnz
pop
neg
sarl
lahf
fdivl
es
jne
and
lcall
mov
xchg
or
jp
mov
icebp
mov
aam
cmp
scas
add
jae
fidivrs
outsl
mov
dec
movsb
in
adc
sti
inc
sbb
loop
insl
jb
fisubl
inc
lock
jecxz
cld
popf
jecxz
sbb
jbe
jno
int
xlat
enter
nop
or
xchg
das
aad
xor
nop
pop
xor
pop
xor
pop
test
and
inc
jo
call
mov
jnp
pop
iret
enter
dec
lods
inc
xchg
inc
loopne
pop
loopne
lret
add
or
gs
xor
pop
jbe
lock
clc
int
push
ret
mov
rorb
loop
lcall
add
repz
fwait
mov
push
jp
sub
lea
js
fiadds
sarl
pop
dec
je
fldt
das
nop
pop
or
adc
pop
sbb
imulb
in
inc
rcll
js
loope
cld
xchg
mov
aad
sub
cld
jg
push
cltd
add
lds
pusha
add
pop
jle
shrb
push
ds
and
les
aam
scas
and
mov
mov
adcb
mov
mov
in
cltd
into
xor
inc
ljmp
aas
cmp
xor
inc
cmp
cwtl
aad
adc
imul
xor
loopne
cmp
fidivrl
or
fdivr
jmp
xchg
popa
inc
int3
repz
mov
inc
add
mov
and
iret
call
jae
shr
add
mov
mull
mov
and
adc
xor
cmp
stos
jae
cmpsl
sub
mov
outsb
pop
or
mov
popa
enter
aas
les
adc
and
fnsave
xor
cmp
sub
clc
xor
outsb
mov
in
push
and
pop
xchg
stos
into
push
lret
fcompl
mov
inc
imul
mul
mov
sahf
stc
lret
lahf
outsb
mov
repnz
fisttpl
std
iret
or
push
sti
and
xchg
cmp
push
mov
ja
inc
xchg
arpl
lcall
jecxz
push
jmp
xor
shrb
mov
test
inc
cli
je
add
add
mov
and
mov
push
ds
xchg
iret
push
push
in
jnp
push
popa
sahf
adc
dec
in
or
xchg
xchg
xchg
pop
push
push
loop
outsb
imul
lcall
shlb
add
out
xlat
xor
andb
addr16
or
inc
dec
mov
mov
add
filds
in
jbe
jp
jno
out
ret
xlat
sub
or
dec
and
mov
cwtl
pushf
rclb
xor
xchg
adc
imul
push
bound
daa
ret
cmpsb
aas
out
sti
fbstp
outsb
push
mov
push
les
stos
daa
aaa
filds
sbb
imul
divb
xor
xor
sbb
adc
lds
xor
lock
movsb
pushf
cmc
pop
call
dec
push
add
fwait
lahf
addw
dec
xor
cs
orb
sbb
nop
stos
jg
cmpsb
imul
cmp
pop
lret
andl
and
or
adc
pop
jge
cmp
sbb
mov
aaa
call
inc
mov
jg
sbb
arpl
nop
arpl
lahf
shl
ficompl
jmp
cmpsb
mov
jnp
in
movsb
loopne
mov
xchg
mov
sbb
push
cltd
ss
cltd
push
adc
rol
ss
sbbb
jns
and
adc
nop
inc
xor
sahf
jp
pop
mov
cmp
or
arpl
sbb
mov
fidivs
lods
mov
bound
fwait
hlt
mov
push
push
pop
popf
inc
sub
leave
lea
loop
imul
pop
aam
fidivl
imul
sbb
push
pop
jp
push
mov
stos
pusha
cld
dec
xchg
sbb
xchg
fs
jbe
adc
adc
loope
insb
shlb
ss
sbb
mov
and
or
cmp
mov
stc
fcmove
pop
decb
sub
pusha
mov
imul
subl
fmull
lret
sub
add
fscale
push
fwait
mov
pop
sahf
xchg
sub
xor
mov
enter
xchg
and
push
ffreep
icebp
sub
lea
mov
mov
cmpsl
sub
scas
xchg
loope
jnp
roll
xchg
xlat
ss
outsl
rorl
ret
sarl
test
nop
les
jecxz
xor
sbb
sub
push
sub
mov
negl
idivl
xchg
mov
mov
xchg
popf
push
cli
in
and
out
rolb
xor
test
mov
punpckldq
ret
daa
fs
sub
in
or
iret
loop
lock
ret
loop
pusha
cmp
push
pop
int3
rcl
loop
pop
std
mov
jnp
addr16
lret
fistpll
ret
iret
cmc
loop
shl
iret
xchg
mov
and
orl
or
bnd
cltd
push
mov
cmp
jmp
pop
sub
insl
or
sarb
jno
push
mov
and
cmp
cli
hlt
fisubl
jae
fs
xchg
push
ss
stos
inc
sbb
jns
nop
mov
dec
jbe
es
hlt
int3
movsb
mov
iret
xor
ds
sarb
aad
int3
inc
mov
leave
jmp
sub
popa
neg
push
hlt
jmp
mov
adc
in
and
push
or
xor
cli
cmp
cmpsl
and
push
or
jle
or
in
cltd
ds
dec
dec
pop
ret
sarb
pop
or
xor
nop
xchg
scas
pop
or
pusha
or
mov
xchg
adc
pop
xchg
aam
icebp
or
jmp
xchg
add
add
ret
daa
xchg
arpl
add
add
ss
rol
psubd
mov
cli
ds
sbb
cmc
sub
decb
sbb
ds
imul
inc
ja
inc
imul
in
fwait
outsb
cs
je
pop
push
imul
jg
jmp
pop
shrl
push
add
adc
or
xchg
test
lret
rcrl
jmp
jo
int3
adc
dec
push
dec
adc
and
cmp
js
mov
iret
test
add
cmpsl
jg
scas
push
dec
arpl
lods
insl
repz
das
pop
or
loop
mov
cmp
out
into
sahf
pop
les
xchg
mov
nop
popf
or
xor
es
cmpsl
pop
xchg
nop
popf
add
adc
and
cmp
cli
cmp
push
pop
inc
sub
ror
pop
jp
jno
add
sub
or
jo
das
mov
popf
out
je
sti
push
xor
sbb
sbb
into
sub
jmp
or
aas
sahf
sub
push
push
loopne
and
fsts
dec
jns
sbb
dec
mov
cli
aad
outsl
mov
cmp
pop
xchg
imull
addl
inc
aaa
and
ret
or
xor
xor
sbb
push
out
js
lods
inc
popa
push
dec
ljmp
inc
mov
mov
cmp
xchg
jnp
test
int
or
push
ficoml
fnstcw
push
cmp
dec
dec
dec
cmpb
lret
loope
bound
scas
jmp
xchg
imul
mov
jmp
push
test
idivl
fisttps
jae
sub
jns
nop
push
popf
cmpsb
ds
ret
xor
inc
mov
mov
daa
lret
or
lods
ljmp
pop
and
out
ror
pusha
std
aas
mov
jmp
xchg
nop
aad
rorb
add
lods
or
in
lods
xchg
lock
or
or
sub
xchg
iret
jae
jg
sub
scas
ficoml
addr16
lods
es
mov
inc
fdivl
add
xor
cmpsl
pop
xor
out
mov
dec
sub
or
or
addr16
adc
rorb
pop
roll
adc
xchg
mov
cvtpi2ps
ss
mov
push
loope
mov
mov
sbb
loope
icebp
ljmp
and
jge
les
insb
popa
xor
mov
sub
dec
adc
xchg
or
mov
or
or
add
xor
icebp
mov
pop
add
addr16
dec
sub
arpl
inc
push
cld
jbe
mov
test
add
xchg
mov
inc
addr16
jno
repz
and
fmul
jo
cmp
cmp
sbb
das
sub
repz
std
cmp
xchg
mov
push
jno
mov
mov
outsb
push
fnstenv
inc
cmp
push
sub
icebp
enter
cmp
sub
mov
in
xor
mov
sub
pusha
lds
inc
xor
xchg
mov
add
flds
out
outsl
lret
inc
dec
push
icebp
jb
mov
scas
testb
daa
fs
sbb
fistpl
rorl
mov
jecxz
inc
rcrl
xchg
jmp
mov
repnz
ds
push
shrl
or
mov
sbb
sub
xor
test
daa
ret
sub
mov
bnd
sub
outsl
pushf
pop
rorb
push
test
xor
jp
imul
xorb
repz
mov
cmp
sti
mov
add
and
add
inc
jg
in
or
mov
insb
inc
getsec
scas
sbb
jle
clc
or
lea
mov
cltd
ljmp
mov
xchg
stos
jne
sub
sub
adc
cmpsl
mov
lods
push
push
add
inc
je
adc
inc
outsb
push
fnsave
call
call
dec
mov
pop
lods
jmp
mov
pop
stc
cmp
movsl
adc
sbb
daa
fbld
addb
inc
mov
aam
jbe
test
cld
sarb
or
test
arpl
movsb
cmp
pop
mov
outsl
mov
push
mov
sarl
sarl
out
pop
push
lods
fs
loopne
daa
daa
dec
pop
xor
jg
inc
mov
scas
lahf
fcomi
adc
leave
in
data16
pusha
cmpsb
xchg
pusha
inc
cmc
mov
and
xor
cmpb
inc
inc
add
add
outsl
out
mov
xchg
lock
xor
mov
out
lods
pushf
mov
sub
flds
push
cli
cmp
shrl
dec
movl
or
das
jno
iret
jp
out
mov
jns,pt
xchg
sub
jp
scas
fisttpl
push
out
insb
loop
mov
loopne
fidivrs
out
test
xchg
cmp
out
mov
lods
in
int3
xchg
lahf
in
fs
ficomps
mov
movsb
mov
mov
mov
lcall
mov
iret
pusha
ds
in
jnp
ret
jle
das
cmp
in
inc
jmp
es
std
mov
push
sub
dec
fimull
lea
sub
std
lods
sbb
in
imul
in
mov
leave
dec
scas
in
test
xchg
add
sti
aad
and
mov
shrb
mov
cmpsl
push
pop
mov
adc
jns
mov
fmulp
gs
add
xor
adc
mov
sarb
dec
jo
mov
inc
mov
pop
ds
ljmp
stos
movsb
pop
cmp
or
mov
lcall
jne
call
push
and
out
add
adc
push
dec
fdivl
mov
mov
sbb
ja
sbb
jnp
pop
loopne
push
inc
push
lds
adc
lret
stos
fstpl
mov
mov
mov
aaa
pop
pop
pushf
ja
sti
ficoms
jb
lea
cwtl
pop
jno
inc
ficoml
jle
push
and
lret
lea
cltd
shll
cs
das
test
xchg
jno
jae
fsub
addb
ja
mov
dec
icebp
and
clc
clc
lret
sub
jnp
es
xor
shlb
and
inc
daa
xchg
shrb
icebp
jl
popf
fdivrl
add
aam
aaa
push
es
cld
xlat
inc
sbb
hlt
dec
cmp
aam
jg
inc
dec
mov
ss
dec
mov
push
imul
lds
js
jo
filds
dec
stos
push
outsl
mov
out
cmp
mov
gs
mov
jecxz
push
das
flds
add
push
sbb
and
push
xor
movsb
add
and
daa
shrl
xor
xchg
gs
mov
xchg
jno
adc
pushf
jae
mov
aam
mov
jg
push
repnz
adc
jo
sbb
imull
and
inc
pop
test
sbb
mov
lock
loop,pn
nop
testb
adc
cwtl
das
lock
add
popf
jecxz
dec
int
xlat
and
aad
stc
mov
data16
lret
jp
dec
fistps
mov
pop
scas
js
pop
jnp
int
adc
out
stos
cmc
adc
jl
sbb
push
es
push
push
fwait
dec
pop
or
lret
pop
leave
or
sub
sub
push
ja
cmp
fildl
and
mov
cmp
data16
mov
test
cmc
cs
push
in
mov
inc
mov
lea
in
rcrl
push
fistpll
pop
lods
push
cs
fdivrp
rclb
push
cmc
cmp
dec
jns
cmp
pop
xlat
out
mov
xchg
test
repnz
insb
dec
fisttps
mov
out
mov
mov
clc
ficomps
test
test
in
fisubrl
inc
sub
rcl
xchg
out
and
mov
or
xchg
jp
aam
cwtl
hlt
push
cld
outsb
cmp
inc
dec
into
add
mov
mov
sbb
jecxz
out
int3
mov
imul
lret
jp
add
sbb
int3
push
jmp
cmpsl
sbb
rcrl
cmpsl
dec
mov
insb
out
push
outsb
rorb
or
stc
lret
and
loopne
fs
mov
mov
into
aaa
lahf
data16
pushf
lahf
adc
xchg
xchg
mov
in
je
js
cwtl
lea
je
jp
imull
sbb
repz
or
inc
push
idiv
insb
pop
andl
mov
cs
ret
xchg
sub
cld
sbb
ss
mov
mov
stos
sbb
cld
or
mov
sub
sbb
rorl
ret
aaa
jp
fwait
insb
sub
cltd
dec
imul
scas
adc
pop
sarb
sub
mov
mov
clc
int
test
add
dec
in
repz
add
ss
mov
mov
mov
xchg
jg
mov
js
mov
cwtl
and
add
mov
bound
mov
xor
movsl
scas
cwtl
and
rol
adc
dec
fwait
lods
add
jnp
repz
rorl
cmpsl
cwtl
push
pop
adc
mov
xchg
mov
shrb
or
xchg
lods
stos
bnd
mov
fisubrl
pushf
notb
xor
pop
sub
xor
arpl
sbb
enter
mov
sub
loope
inc
arpl
adc
and
push
push
std
je
or
mov
insl
into
sub
jmp
xchg
jp
sbb
mov
insb
push
inc
push
mov
fs
jl
push
mov
std
outsb
sub
adc
movl
shrb
push
in
addl
add
push
or
mov
mov
inc
inc
push
mov
add
stos
insl
fisubl
cli
std
xchg
cmp
push
jge
push
dec
scas
icebp
jl
aaa
loope
ret
loopne
arpl
scas
js
out
mov
push
jecxz
add
lahf
mov
stos
mov
sub
and
pushf
jl
xor
gs
cmc
idivl
jp
ret
cs
sbb
andb
jno
out
repz
aad
lock
mov
push
xchg
lock
push
addl
fcmove
sbb
mov
sub
mov
pop
inc
jnp
mov
cli
sti
js
repz
dec
mov
test
xor
dec
lea
stc
subb
fnstenv
leave
xchg
mov
mov
daa
xor
leave
insb
sahf
movsb
push
popa
mov
test
mov
mov
and
or
xchg
xchg
stos
into
loop
scas
test
jge
sub
cmp
fistpll
cwtl
sub
sbb
ja
les
add
stc
cltd
pop
sbb
push
push
cmp
xor
mov
loope
outsl
mov
es
jmp
ds
jo
jp
out
das
jne
into
daa
cmpsb
mov
fildl
xchg
and
addr16
fldt
andl
mov
daa
lret
xor
mov
leave
push
dec
test
or
dec
lock
mov
rcl
loop
add
loop
arpl
xor
dec
sbb
add
fsubl
mov
mov
imul
mov
test
push
sbb
in
add
push
movsl
std
or
js
popa
lret
test
xchg
sbb
mov
mov
fwait
dec
sahf
sub
mov
rcll
jecxz
dec
jecxz
int3
jo
clc
xchg
lahf
mov
hlt
movsl
xchg
jo
push
sbb
out
or
pop
sub
pop
fdiv
mov
inc
and
mov
enter
aas
stc
gs
int
sbb
scas
xchg
rcr
push
test
inc
adc
adc
cmp
push
adc
mov
lods
call
fstpl
xor
movsb
clc
sub
jns
mov
mov
adc
in
shl
lret
pop
int3
add
shrb
aaa
lods
cwtl
adc
popf
pop
mov
dec
in
js
cmp
jns
jnp
jbe
push
pop
xchg
mov
fiadds
outsl
leave
cmp
and
in
dec
in
jno
ja
lods
or
add
or
test
sub
lods
push
int
inc
jg
inc
loop
out
lahf
ret
imul
mov
push
or
jbe
movsl
xor
fidivs
mov
mov
imul
and
dec
rcr
sti
out
sbb
inc
push
pop
sub
bnd
scas
xlat
xorl
and
mov
mov
subl
inc
stc
stc
clc
aam
sbb
pop
adc
jbe
push
cli
mov
xchg
or
xor
icebp
dec
add
in
les
mov
cmc
jne
push
xchg
jbe
mov
and
sub
call
enter
jge
cmpsl
loopne
in
mov
imul
lret
adc
jg
mov
xchg
pop
or
fwait
repz
lea
lahf
or
test
push
add
lock
push
movl
call
into
xor
lea
dec
and
ja
xor
mov
movsl
mov
inc
push
adc
and
push
sarb
mov
cli
mov
mov
and
fdivl
xor
scas
cmp
test
fs
xchg
loope
mov
jecxz
mov
sub
pop
cmp
sub
sub
xchg
cmpsb
hlt
mov
sbbb
pop
push
test
jbe
imul
mov
adc
jo
pushf
dec
mov
out
and
jbe
movsb
imul
sbb
in
mov
sbb
out
lret
fs
stc
dec
and
mov
cs
pusha
repz
fidivl
call
ffreep
xchg
adc
and
imul
sbb
mov
push
push
pop
mov
popa
loopne
sub
cmc
out
aad
test
cmp
adcl
push
sbb
into
inc
xor
addr16
pop
jae
push
aas
scas
cmp
mov
je
mov
mov
mov
adc
nop
test
or
ja
dec
iret
fs
bound
in
cld
sub
xchg
loop
mov
dec
push
jbe
cmc
jp
pop
fimull
dec
jo
push
insb
mov
inc
cmp
mov
addr16
xor
cltd
add
fldenv
inc
jno
sub
fwait
push
loopne
mov
mov
mov
pop
inc
stc
int
icebp
push
jmp
mov
stos
sub
fisubrl
sub
mov
into
xchg
hlt
xchg
lea
xor
pop
std
mov
or
cwtl
adc
rclb
lret
mov
stos
into
jle
and
lock
outsl
xlat
adc
xor
cwtl
or
xor
dec
inc
xchg
clc
mov
jg
imul
sbb
outsb
fsubl
inc
xor
mov
lahf
push
dec
fnstcw
insb
cmpsl
std
inc
pop
clc
mov
test
js
sbb
icebp
repz
insb
outsb
stos
cmp
out
xchg
test
je
ja
dec
jmp
stos
adc
adc
js
push
mov
sub
push
pop
jp
pop
icebp
pop
mov
in
mov
out
adc
xchg
pop
leave
mov
cmp
mov
jne
cmp
push
push
dec
inc
or
cmpsl
imul
test
jo
sub
push
dec
push
mov
lret
adc
sub
jecxz
cmp
fistpll
sbb
loope
push
or
rcll
dec
loope
idivl
mov
addr16
sub
push
mov
pop
mov
and
hlt
xor
int3
test
cmp
add
mov
mov
ret
fwait
inc
mov
push
fs
aaa
lret
add
jge
mov
nop
ret
mov
mov
fisttps
xchg
and
xlat
movsb
pop
jne
repz
sub
sub
or
jl
pop
adc
dec
jno
and
mov
dec
inc
jno
and
std
add
mov
mov
call
in
xor
push
xchg
hlt
push
outsl
push
or
sub
fmull
pop
push
mov
sbb
movsl
ret
movsl
notl
lret
pop
push
sqrtps
fnstsw
inc
xor
cmpsb
leave
pop
mov
in
jbe
in
xchg
push
mov
pop
mov
bound
ret
imul
pop
iret
and
adc
pusha
or
test
pop
cli
jo
and
inc
and
pop
fidivl
mov
or
sbb
dec
nop
xchg
cmc
movsb
mov
stos
mov
ret
sub
aaa
pusha
in
mov
dec
es
in
jg
xchg
faddp
cmp
xor
call
cmp
call
pop
movsb
pop
orl
xor
shrb
sub
ret
gs
fs
lcall
pop
enter
dec
and
inc
mov
sbb
adc
pop
sbb
std
xor
xchg
mov
mov
les
pop
push
rorl
cmp
adc
sub
add
adc
inc
inc
mov
lcall
adc
fnstcw
mov
andl
jo
cltd
xchg
sub
lahf
js
fadds
fs
shll
jbe
pop
sbb
cld
in
loopne
in
adc
je
xor
outsl
xchg
pusha
gs
movsb
sbbl
lock
or
cmp
pop
aam
xor
fsubl
mov
jnp
fistpll
mov
add
mov
cmp
fidivl
ds
pop
inc
inc
pmullw
sub
lds
sub
mov
cmpsb
push
or
sbb
stos
out
cmpl
mov
sub
clc
mov
mov
ret
dec
call
ljmp
xchg
pop
xor
lods
lret
sub
aas
dec
gs
sahf
mov
je
pusha
pop
js
movsl
fwait
out
pop
in
ljmp
lret
sub
adc
fwait
xchg
mov
pusha
cltd
push
iret
push
lea
shl
sbb
mov
test
and
push
cmp
xchg
ficomps
insl
adc
ja
jb
imul
dec
and
fwait
stos
fimuls
xorl
outsl
or
jmp
sti
ret
fisttpll
sbb
inc
ficoms
shlb
outsb
out
sbb
das
mov
scas
sti
lahf
orb
sbb
imul
pop
aaa
cmp
xchg
and
sub
fldt
or
dec
mov
dec
sub
out
xchg
mov
sahf
sub
iret
nop
ret
jge
pop
into
test
pop
xchg
jno
push
xchg
movsb
sbb
cmp
pop
cltd
mov
dec
ds
lret
lret
and
arpl
mov
mov
inc
sbb
out
gs
stc
loop
je
pop
fcomp
cltd
test
scas
xor
push
lahf
or
sbb
popf
fwait
cmpsb
or
pop
jp
inc
addr16
lret
lahf
or
stc
mov
stc
sbb
cmpsl
pop
ret
outsl
jmp
or
xor
scas
dec
frstor
jle
popa
mov
adc
jg
insb
stos
popa
pop
faddl
cmpb
loopne
and
scas
push
pop
inc
popa
mov
cld
xchg
call
insl
dec
fwait
std
and
in
shrb
leave
int3
lea
shr
outsb
xor
rol
jle
inc
daa
push
cmp
mov
in
arpl
imul
xchg
mov
arpl
fxam
pop
mov
mov
sub
call
adc
sub
mov
aaa
test
scas
decb
add
icebp
dec
lret
fcoml
sub
push
sbb
add
aam
int
inc
arpl
mov
xor
cmp
enter
push
xchg
shlb
movsb
sbb
pusha
sti
fstl
sbb
ret
sbb
cmp
push
mull
outsb
sbb
jbe
clc
mov
sbb
push
cli
arpl
lods
les
negl
sub
ret
xchg
jmp
aaa
jg
fimull
push
fildll
xchg
add
inc
jle
aas
mov
insl
out
ja
sub
push
pop
xadd
pop
iret
flds
repz
test
rep
xchg
into
lds
stc
pusha
or
xchg
imul
enter
mov
imul
cmp
inc
jecxz
or
bound
and
movsl
mov
dec
loope
mov
ret
mov
das
je
adc
pusha
jns
ja
bound
and
push
or
or
mov
adc
push
push
pop
negb
fsubrl
mov
rorb
into
loop
test
mov
jns
mov
jo
push
or
movsl
mov
arpl
sbb
jecxz
into
lret
cwtl
ss
mov
pop
mov
lea
or
mov
data16
fwait
sbb
dec
pop
push
jo
out
clc
pop
pop
data16
outsb
stos
movsb
cmp
int3
sti
imul
dec
lret
mov
insb
mov
jno
scas
sti
insl
hlt
lods
adc
and
frstor
dec
out
pusha
xor
ror
jbe
fimull
adc
push
mov
sbb
loop
f2xm1
mov
sbb
scas
jbe
aas
add
sub
xchg
pop
cltd
lret
loope
push
jb
mov
shrb
jns
mov
and
cmp
das
sub
je
in
iret
dec
cmp
cmp
jge
decb
mov
je
cwtl
lret
lret
dec
inc
jl
dec
lahf
inc
inc
jmp
cmpb
shr
in
out
cld
add
mov
jg
xor
imul
in
mov
inc
ret
js
cmpsb
push
dec
pop
je
push
push
jge
outsl
pop
fndisi(8087
dec
std
jb
adc
and
pop
jae
add
mov
aad
insl
addr16
push
dec
cwtl
repnz
and
out
sbb
lahf
sub
loope
mov
push
sub
xlat
cmp
mov
int
inc
dec
roll
mov
int
jnp
sub
mov
inc
adc
lahf
mov
xchg
add
cmp
xlat
or
out
pop
pop
hlt
fisubl
fisubl
sahf
stos
inc
cmpsl
sub
cmp
bound
mov
jno
sbb
jmp
dec
jbe
data16
out
out
or
lret
dec
fldl
testl
sbb
jp
sbb
dec
push
sub
adc
movsb
and
mov
aas
les
mov
mov
jge
mov
xorl
mov
mov
shlb
popa
sarl
and
ret
push
shlb
aad
subl
and
mov
inc
mov
ret
popf
sarw
inc
pop
movsl
je
sbb
int3
adc
xchg
and
in
mov
out
mov
repz
cwtl
push
shrl
fs
push
cmp
arpl
cwtl
and
test
je
data16
xchg
jnp
cmp
loope
js
test
xchg
fiadds
xchg
sub
jp
push
xchg
movsl
lods
xchg
push
pop
jp
ds
popf
xchg
pop
adc
jge
test
loopne
sub
add
pop
loop
sub
lods
call
call
push
in
pop
clc
sub
and
pop
adc
or
test
jb
cmp
filds
repz
pushf
popl
mov
cmp
lahf
ret
mov
pop
or
in
cmp
insl
inc
fmul
mov
aam
adc
inc
adc
push
mov
fldenv
std
inc
int3
ret
sbb
push
pop
jp
insl
or
mov
repz
mov
out
mov
pop
xor
jge
shrb
shlb
mov
xor
push
xor
cmpsb
std
or
out
dec
jnp
jne
lret
inc
push
fdivl
dec
cmp
mov
mov
and
pop
mov
fcmovbe
xor
bound
sub
insl
fistpll
fmuls
pop
aad
bound
loope
pushf
mov
mov
push
or
jp
imul
sbb
test
xor
icebp
and
or
cwtl
cmc
add
and
repnz
sbb
adc
aaa
movsb
jae
xchg
inc
lods
push
push
mov
fbld
xchg
imul
ja
test
lods
and
pop
dec
pop
add
ds
std
sub
dec
iret
jo
cmpl
test
ljmp
push
repnz
inc
xor
xor
imulb
popf
push
insb
mov
cmp
pop
sub
imul
stc
fwait
std
and
fiadds
add
push
push
imulb
imul
hlt
jno
subb
pop
popa
adcb
add
loop
stc
mov
dec
jo
push
jle
mov
hlt
lea
cmp
cmpsl
nop
mov
cmp
dec
xlat
into
pop
fwait
dec
push
stos
sahf
xchg
add
iret
pop
cmpsb
and
std
pop
xor
roll
push
adc
jb
lahf
addr16
push
ljmp
int3
jnp
push
mov
sarl
adc
sbb
pushf
ss
inc
xchg
mov
in
shll
test
cmpsl
dec
fdiv
xchg
push
push
lret
jno
sbb
popa
sub
dec
popa
sub
outsb
push
jo
int3
xchg
imul
stos
sbb
jnp
jle
sbb
push
sub
bound
adc
jle
in
insb
cmp
mov
mov
cltd
and
ret
xlat
nop
mov
pop
aas
jns
push
test
mov
pushf
test
dec
icebp
arpl
push
and
inc
mov
and
out
ja
ss
inc
dec
incb
test
push
cmp
or
testl
stos
aas
push
mov
and
frstor
popf
sbb
xchg
fsubs
popf
jmp
and
je
int3
cmc
push
scas
mov
fisttpll
cltd
mov
lcall
adc
xor
subb
rcll
mov
add
inc
repnz
inc
das
or
mov
mov
ljmp
mov
jp
fnstenv
lock
xor
ret
ljmp
sbb
or
pop
pop
ret
inc
scas
pop
lds
int
xchg
fwait
les
test
outsb
add
and
mov
and
cmpsl
sahf
inc
pushf
test
movsl
sub
es
jmp
adc
xlat
out
or
imul
mov
add
mov
or
in
cmp
or
int
stc
xchg
fldl
in
cmp
dec
daa
pop
fbld
outsl
mov
sbb
insb
pop
dec
jae
inc
loop
xchg
stc
dec
shl
jbe
mov
adc
push
cwtl
lds
in
or
and
rcl
daa
jns
jne
aaa
xchg
xchg
cmp
mov
fisttpl
popf
es
repz
xor
scas
push
aam
mov
mov
sub
and
or
or
testl
sub
int
adc
mov
lods
repnz
pushf
xchg
daa
je
sub
fs
dec
jecxz
pop
lcall
adc
jl
imul
ret
loopne
scas
rol
pushf
hlt
in
lds
cmp
pop
jle
test
cld
shlb
insb
pop
mov
inc
and
in
adc
loop
jb
sub
inc
pop
inc
xchg
cmp
mov
and
out
imul
sub
fwait
outsl
into
pop
mov
stos
add
ret
test
fxtract
ss
imul
loopne
test
xor
loopne
in
mov
movsb
xor
in
hlt
movsb
dec
sub
out
ljmp
push
je
cmc
jb
dec
insl
lock
in
pop
and
addl
push
mov
push
adc
mov
jmp
aaa
pop
adc
sub
fidivs
decb
mov
arpl
fistps
or
hlt
pop
pop
push
lds
mov
lea
pop
lret
cmp
iret
fs
loopne
lahf
fsts
les
or
sbb
popf
into
das
cmpsb
ljmp
dec
jecxz
pop
sbb
fwait
jne
sbb
out
add
add
scas
add
int3
in
push
mov
inc
or
cwtl
adc
xor
adc
adc
jne
scas
push
mov
cmp
push
add
jg
ret
xchg
jno
subb
les
fdivr
mov
out
aam
inc
stos
fldenv
in
lcall
mov
das
or
fidivs
mov
dec
mov
sbb
sbb
dec
push
outsl
mov
loop
pop
cmp
jae
call
push
sti
xchg
cmpsl
popa
popa
repnz
rcrb
insl
inc
push
fistl
inc
pop
je
rcrb
and
in
add
rcrl
out
bound
adc
jno
cs
add
out
popf
cmp
repz
inc
xchg
push
cwtl
int
mov
sbb
mov
test
aam
cld
sbb
rep
stc
jl
nop
push
inc
dec
gs
xor
fisttpll
jl
sbb
ja
push
lock
mov
add
pop
pushf
repz
insb
jnp
gs
and
and
jo
sbb
push
cmc
mov
in
ret
test
pop
and
out
push
xor
cld
jnp
scas
adc
pop
lret
xor
mulps
push
sub
xchg
sub
rcrb
cmp
jnp
cmp
in
inc
pushf
repnz
adc
push
andb
rolb
sub
and
jmp
and
mov
adc
push
dec
fisttpll
jb
inc
push
add
jle,pn
xchg
jns
int
mov
mov
sub
insl
and
rorb
mov
out
shlb
push
out
shrb
out
scas
xor
clc
mov
ret
enter
sbb
xor
mov
sbb
repz
test
add
adc
inc
loopne
stos
xchg
jmp
loop
les
xchg
in
and
sbb
or
hlt
int
mov
mov
and
fcomps
mov
popa
sub
dec
mov
xor
lret
or
xor
pop
sbb
sub
jmp
ret
mov
popf
out
out
sub
lahf
repz
ljmp
shll
push
fisttpl
jmp
and
dec
stc
jmp
hlt
pop
push
pop
shrl
mov
and
cld
stos
push
aad
js
pop
or
jg
adc
pop
aas
push
dec
xchg
adc
ret
cld
outsl
negb
lds
and
inc
push
pop
inc
and
sub
dec
lahf
aas
jmp
cld
xchg
fists
xor
mov
sbb
imul
or
push
in
mov
test
fstpt
imul
jae
and
repnz
dec
lcall
fnsaves
or
movsl
mov
lods
push
iret
rclb
mov
leave
mov
pop
mov
out
lret
mov
sub
inc
cltd
sbb
mov
out
push
jns
and
jmp
iret
xlat
rcl
cwtl
cmp
aam
test
fsubp
testl
ds
sbb
xor
fistps
in
ret
mov
and
mov
dec
mov
sub
sbb
jo
jge
jmp
pop
shrl
mov
jns
sbb
mov
jp
scas
cmp
dec
movsl
adc
push
lods
popf
adc
stos
and
addr16
cmc
push
inc
sub
inc
sbb
sbb
unpcklps
xchg
sbb
outsb
adc
leave
inc
adc
leave
fstps
insb
rolb
sub
pop
sahf
cld
ja
adc
movsl
sub
loopne
cmpsl
xchg
cld
xchg
mov
pop
sub
js
push
test
loope
lds
lds
loop
fildll
xor
in
add
sahf
xchg
dec
jno
push
movsl
xchg
fimuls
shlb
and
pop
adc
cmp
in
pop
sub
out
rclb
jnp
jmp
scas
imul
xchg
testl
out
mov
jmp
jmp
jl
aad
push
jno
jbe
popf
data16
in
test
sbb
out
push
sbb
clc
int
stos
jecxz
cli
insl
ret
cltd
fsubl
inc
add
xor
mov
mov
jl
aaa
out
imul
enter
adc
mov
lahf
lds
mov
mov
rorl
mov
and
jmp
lcall
and
jb
dec
jne
xor
xor
xor
in
into
addl
sub
push
fimull
icebp
mov
dec
mov
mov
sub
jb
sub
inc
int
pop
inc
cmp
aam
sub
insl
pop
add
outsl
jg
ja
fbld
push
stos
shrl
testl
xor
mov
pop
cmp
mov
dec
mov
mov
inc
xor
mov
pmaxub
push
clc
or
in
ss
ja
mov
ss
hlt
cmp
out
push
aas
push
jae
or
mov
in
sbb
xchg
repnz
xlat
idivl
ja
jecxz
lcall
fdivl
dec
cmpsl
fmuls
fisubs
repnz
lock
pushf
lcall
jne
dec
gs
scas
iret
movsb
cltd
xor
mov
fimull
or
cli
sbb
sbb
pop
jle
imul
lock
and
and
jb
js
aas
filds
scas
push
jns
jl
fdivrl
xchg
xor
mov
imulb
xor
xchg
popa
xchg
add
fsubrs
movsl
ss
std
sbb
and
arpl
mov
push
dec
test
pop
and
xor
das
jg
push
add
lock
mov
rclb
push
icebp
cmp
lods
movsb
test
mov
jb
in
jmp
pop
arpl
icebp
es
rcrb
jp
aas
cmc
mov
dec
add
mov
cmp
test
fistl
aad
push
inc
adc
cwtl
shrb
jno
int
xor
add
lds
testl
xor
in
push
xor
jg
mov
adc
mov
mov
mov
dec
sub
cmp
into
daa
aaa
addb
notl
mov
sub
bnd
lcall
sbb
dec
out
test
shlb
es
mov
pop
sbb
jecxz
lock
cmp
cmp
mov
mov
push
fcomp
cmc
mov
add
sbb
out
sahf
and
rorb
hlt
sbb
xchg
test
and
and
pop
xchg
notl
pop
push
jbe
jno
or
mov
mov
xchg
cli
mov
in
sti
addr16
cld
ret
shlb
rcrb
shlb
test
jp
push
aam
xchg
xor
incl
push
in
cmp
jo
iret
cltd
mov
push
les
in
sbb
mov
mov
movsl
outsl
add
std
leave
mov
call
cmp
in
jg
je
mov
xchg
xchg
mov
dec
adc
adc
add
mov
inc
push
mov
dec
dec
out
int
roll
mov
xor
loope
imul
shl
ss
push
je
nop
push
mov
or
jmp
pop
pop
subl
jecxz
xchg
leave
inc
inc
icebp
jnp
xor
push
addr16
inc
out
rcrb
lret
or
sbb
sub
sbb
ljmp
outsb
sub
mov
xchg
seto
loopw
or
test
pusha
push
in
fs
cltd
ret
xor
scas
mov
rolb
push
jmp
ret
fcomp
mov
mov
push
lds
pushf
push
pop
ja
cmpsl
jecxz
sarb
lcall
push
xchg
sbb
jo
movsb
mov
scas
fnstcw
out
xlat
sti
or
mov
ds
notb
jb
cwtl
leave
outsl
sbb
fsubr
adc
push
popf
xor
outsb
mov
xchg
and
dec
push
sbb
test
dec
jns
cmc
cwtl
inc
cmp
add
mov
sti
jnp
ror
psubusw
nop
rolb
or
sbb
ds
pop
data16
push
or
push
fsubrl
sbb
sbb
testl
sbb
arpl
pop
test
fildl
xor
dec
jp
shll
xchg
mov
mov
dec
or
adc
xchg
movsb
andl
shl
adc
shrb
push
aam
push
movsb
and
ss
jae
test
dec
cmpsb
rorb
or
sbb
add
xchg
out
je
rcr
push
mov
push
push
adc
dec
sbb
inc
and
leave
sub
stos
sarl
push
into
das
push
rcrb
clc
push
and
fidivl
test
out
push
push
lds
pop
lods
mov
mov
je
je
xchg
push
andb
cmpsb
adc
dec
pop
pusha
sbb
es
cmpsl
scas
ficompl
aaa
dec
sbb
push
in
stos
or
jno
hlt
clc
jnp
lods
mov
or
mov
fs
push
jb
pop
das
divl
inc
jg
jl
pop
push
mov
popa
stos
je
scas
or
mov
fwait
jecxz
loopne
out
cmp
mov
nop
ret
in
repnz
add
adc
iret
and
insb
rcrb
nop
pop
xor
and
xchg
cmp
movsl
adc
adcb
adc
inc
in
dec
fisubl
add
ds
jae
add
sbb
shlb
loope
jl
sub
mov
arpl
jne
cmpsb
das
push
insl
pusha
push
cmp
test
mov
cs
les
je
nop
popa
adc
sbb
fsubrs
mov
dec
xchg
addr16
lahf
fcmovnbe
cwtl
stos
test
icebp
test
xor
push
stos
adc
xor
push
sub
xor
popf
cmp
repnz
xchg
push
outsb
pop
int3
dec
and
mov
enter
or
fs
rcrl
int
aaa
lea
fstpt
lods
das
adc
add
scas
cmpsl
xchg
mov
out
xchg
aam
xchg
jb
lds
xor
ss
inc
mov
push
or
rorl
or
push
arpl
adc
mov
xor
xor
or
ds
clc
mov
jmp
shlb
hlt
cmp
test
sub
stc
or
xchg
call
je
sbb
pop
jp
mov
repz
fsts
pop
leave
push
and
dec
inc
aas
mov
ffreep
inc
mov
jne
adc
negl
jge
cmpsl
inc
add
sbb
int
test
mov
pop
out
push
fs
mov
adc
dec
xor
lahf
repz
les
inc
xchg
dec
sbb
and
jbe
adc
ffreep
sub
pop
fsubs
pop
insb
xchg
fidivl
sub
std
pop
push
and
mov
sub
cld
push
jp
dec
sub
mov
and
xor
xchg
bnd
lods
jno
push
and
dec
test
insb
into
repnz
les
cltd
xor
add
incl
pop
repnz
pop
mov
jmp
mov
call
cli
mov
jmp
loope
rcrb
jp
push
scas
mov
mov
push
pushf
lds
and
inc
shrl
push
in
dec
xchg
sbb
mov
aam
or
mov
lods
movsl
mov
insb
rol
push
mov
and
jle
loope
fists
sahf
test
movsb
int3
xchg
push
popa
outsb
movsb
stos
and
iret
dec
mov
jo
jp
dec
add
jb
xor
fiadds
test
xchg
pushf
ds
int3
inc
ds
fcompl
pop
sbb
inc
sahf
repz
jne
das
adc
lahf
sbb
icebp
das
cmp
adc
movsb
pop
xlat
xchg
scas
push
and
sub
mov
jge
cld
das
mov
jmp
hlt
jno
jle
jnp
mov
jle
roll
inc
stc
popf
and
mov
cmp
dec
not
push
sub
insb
mov
push
les
daa
insb
lock
std
push
sub
xor
in
ljmp
push
xchg
jg
sub
fisttps
mov
mov
shl
andl
mov
jmp
jnp
rcr
sbb
gs
js
adc
les
cmpl
mov
inc
push
mov
popa
mov
mov
xchg
mov
or
mov
outsb
out
jbe
mov
sbbl
sahf
sti
jge
mov
add
mov
push
pop
mov
jns
rclb
test
or
frstor
cwtl
jae
out
push
test
inc
stos
xchg
add
ja
mov
pop
push
imul
or
mov
dec
mov
shlb
rcrl
xchg
push
push
or
ret
jl
int3
push
jnp
out
adc
xchg
sub
jmp
xchg
into
cmp
sbb
rclb
xor
push
rorl
stos
lret
dec
xchg
out
mov
sahf
out
loopne
push
xor
mov
mov
lcall
nop
pop
addb
lahf
fst
and
dec
int3
push
in
cmp
push
fadds
incl
add
aam
pop
mov
mov
in
xor
dec
and
stc
scas
notb
adc
scas
mov
cmp
jo
inc
jmp
xchg
loope
xor
repnz
ret
adc
aam
pop
push
pop
and
push
pushf
imulb
jno
rcl
xchg
inc
cli
cmp
mov
sub
dec
repnz
jb
insb
in
sahf
adc
gs
xchg
push
daa
outsb
or
sub
rcrl
or
mov
mov
mov
mov
jge
mov
push
sti
mov
sbb
inc
jl
test
pop
fistps
mov
inc
cs
outsl
aad
sub
sbb
lret
pop
add
lods
nop
mov
push
out
mov
adc
test
mov
rcll
xor
mov
inc
loopne
pop
inc
mov
add
lcall
xchg
shrl
mov
mov
ficoms
pop
jle
js
sbb
bound
mov
add
mov
ret
xlat
out
mov
in
rcl
lds
and
mov
xor
test
test
popa
push
popa
loope
adc
cs
adc
sub
mov
nop
cmc
pop
sbb
icebp
test
stos
out
inc
andb
insb
incb
lcall
jge
push
xchg
mov
mov
push
add
mov
cs
mov
in
xchg
xor
inc
addr16
jns
test
pop
les
mov
outsb
inc
ret
xchg
jnp
sub
pop
mov
ror
jno
movb
and
fistl
loop
popf
out
and
test
aam
pop
sbb
shlb
jns
pop
mov
out
sbb
push
js
and
call
insb
xor
xchg
jmp
out
inc
jl
test
lock
fimuls
rol
shr
hlt
sbb
sbb
cmp
or
pop
shrw
add
adc
cltd
jle
or
iret
and
mov
xor
lock
repz
shlb
push
aaa
sub
ja
fbstp
inc
xchg
jb
daa
testb
mov
jmp
xor
jns
xor
inc
jb
and
jne
roll
jmp
sub
stc
rolb
ret
bndldx
jb
pop
pop
js
jge
aas
sbb
jge
popa
rclb
ja
inc
mov
jle
add
int
ljmp
dec
movsb
mov
pop
or
xchg
testb
pop
inc
mov
lret
jne
movsl
aas
add
cmpb
jbe
fidivrl
mov
imul
leave
or
daa
lods
arpl
mov
jae
inc
jecxz
lea
cmpsl
push
add
or
fsubl
add
fcoml
mov
cmp
add
cmpsl
ds
sahf
rorl
sahf
pop
xor
mov
inc
je
push
inc
into
dec
dec
xchg
push
das
or
or
dec
cmp
mov
out
lret
jno
mov
and
std
xchg
dec
icebp
shlb
mov
pop
mov
add
stos
dec
or
or
icebp
add
mov
pusha
aam
sub
lods
cmpl
loop
negl
outsl
mov
fistpll
jle
daa
xchg
mov
and
mov
lods
int
pop
xchg
bound
inc
pop
sbb
cmpsl
lea
mov
daa
adc
jge
stos
dec
in
mov
loopne
mov
cld
roll
andb
fmull
xchg
in
pop
stos
xchg
xor
jle
mov
out
mov
test
mov
insb
jle
popf
pop
push
ficoml
adc
add
stos
mov
js
into
repnz
adc
lods
push
lods
xlat
cli
inc
mov
or
cli
or
movsb
lret
dec
sahf
mov
test
les
push
sbb
inc
outsb
push
cmp
clc
loope
pop
mov
stc
xchg
mov
adc
xor
jae
fwait
mov
sub
and
push
scas
push
xor
mov
push
inc
push
shrl
sub
xlat
cmp
popf
insl
mov
lret
pop
shrl
inc
adc
aad
into
fdivrl
dec
push
loope
ja
iret
scas
mov
repnz
js
jns
imul
arpl
sub
fsubrs
cmp
aam
or
xchg
or
insl
jmp
fldl2t
andl
imul
ds
lcall
pop
outsb
stos
cmp
int
dec
xchg
shll
sub
jp
adc
and
addl
xor
aaa
pop
xchg
mov
inc
mov
rcl
mov
lods
or
loop
adc
push
iret
outsl
fptan
xlat
jo
fistpll
adc
pop
jp
and
scas
insl
loope
daa
mov
scas
push
dec
cmpl
sub
lret
push
or
imul
fidivl
cmp
arpl
jmp
test
out
adc
shlb
enter
mov
mov
inc
xchg
jns
jns
or
dec
jl
aas
push
jg
gs
pusha
call
sbb
jle
ss
stc
add
dec
dec
js
pop
je
push
lock
push
mov
sbbb
dec
push
rolb
dec
aas
sub
push
cmp
test
pop
ror
dec
out
imul
outsb
dec
mov
lcall
xchg
pop
arpl
sahf
dec
add
add
ljmp
cmpsb
sahf
push
imul
popf
or
idiv
push
pop
sahf
add
lcall
pop
adc
mov
add
sbb
pushl
imul
aam
out
ret
adc
aas
or
xchg
idivb
out
pop
sahf
pop
imul
dec
es
push
lret
adc
ror
fstps
lds
mov
lahf
fwait
mul
je
mov
lret
pop
mov
scas
or
jmp
mov
jo
mov
xchg
xor
sub
andb
adc
mov
sbb
decl
sar
xor
fsubrl
inc
add
loop
jne
mov
lret
andb
pop
testl
xor
or
mov
dec
adc
mov
xchg
mov
adc
mov
lea
repnz
or
nop
mov
push
shll
inc
mov
loopne
push
and
dec
jns
fiadds
jecxz
push
inc
imul
push
scas
mov
loopne
push
das
cmp
sarl
js
cmp
outsb
inc
pushf
lods
gs
seta
inc
xchg
xor
jg
jl
out
enter
lahf
sub
mov
lret
ret
or
or
ficoms
lods
jbe
shrb
cld
test
in
add
dec
out
leave
hlt
sbb
jmp
xor
cmpsb
arpl
rcrb
mov
movb
and
xor
mov
push
or
mov
jg
mov
movsl
gs
push
xchg
sbb
pushf
mov
jecxz
jge
loop
int3
loopne
jecxz
push
mov
pop
and
push
je
push
fldcw
sbb
mov
inc
push
aaa
cmp
cmp
movsb
cmpsb
das
das
pop
pop
mov
push
fmuls
test
mov
js
stos
imul
push
repnz
mov
ljmp
ja
repnz
daa
xchg
push
or
ret
pushf
mov
adc
cwtl
pop
push
mov
jg
sub
fisttps
mov
xor
sti
dec
fnstsw
dec
jg
jg
stc
jmp
mov
sbb
and
inc
daa
sbb
pop
sbb
test
lahf
popf
sarb
mov
daa
hlt
out
fsub
lock
mov
jb
xor
xor
enter
loopne
loopne
fwait
pop
lods
mov
cmp
loop
sbb
int
sbb
dec
test
in
mov
adc
js
addl
orl
push
fcmovnu
std
xchg
cmpsb
adc
call
mov
dec
les
xlat
mov
jno
gs
in
mov
push
gs
les
xor
daa
aam
and
mov
sub
xlat
scas
inc
inc
jl
mov
dec
dec
dec
lea
aaa
pop
iret
pop
lock
loopne
dec
or
sub
sub
mov
icebp
adc
add
or
sub
ficomps
or
inc
sbb
in
adc
push
scas
aam
out
in
jg
push
cmp
mov
inc
ret
xor
gs
push
xchg
pop
mov
in
cld
xor
add
sbb
js
insb
insb
repnz
xor
pop
push
sub
das
andl
xchg
adc
mov
popf
daa
out
cmp
sbbl
rcrb
jo
in
sub
pop
jecxz
mov
push
push
in
mov
sub
mov
xor
jae
dec
aaa
or
dec
pop
scas
dec
jle
inc
movsb
in
sbb
push
sub
insl
jb
dec
xor
jns
dec
js
int3
idivb
push
ret
pop
or
fwait
jb
jle
fwait
out
mov
mov
sarb
cmp
sbb
xchg
stc
adcl
jb,pn
rol
push
lods
jge
adc
mov
mov
mov
sbbl
iret
mov
jle
add
dec
fistpll
in
sbb
xor
dec
inc
jb
sbb
dec
mov
cmp
test
notl
insb
repnz
test
repnz
xor
and
jae
test
jae
and
into
dec
and
cmp
rclb
pop
xchg
insb
xchg
in
pop
cld
push
inc
jbe
imul
add
rcrb
push
adc
in
adcl
add
dec
and
jb
jmp
in
jmp
fwait
mov
mov
hlt
jnp
adc
pop
test
loop
mov
mov
dec
pop
scas
pop
adcb
cmp
ficomps
mov
and
inc
imul
or
mov
insl
xchg
push
dec
xor
xchg
mov
jae
fnstsw
shr
push
push
ret
rorb
and
dec
xchg
call
daa
cmpsb
jnp
clc
test
aas
xor
xorb
les
mov
jb
les
sbb
jle
cmpb
pop
cs
std
pushl
xchg
xchg
cmpsb
in
dec
xchg
dec
cmc
or
in
or
or
and
jnp
jno
movsl
adc
xchg
push
pop
rorl
movsb
pushf
movsb
mov
lahf
aam
xchg
xchg
push
repz
shlb
daa
jne
leave
outsl
daa
mov
push
out
mul
mov
xchg
lret
cs
mov
dec
test
jns
clc
add
mov
lahf
enter
rolb
fwait
repnz
aad
xchg
mov
xor
in
cld
sahf
mov
sub
inc
into
mov
aas
pop
sbb
jno
mov
lret
rolb
lahf
out
pushf
or
dec
lret
test
pop
push
not
sbb
xchg
cmp
push
nop
jmp
enter
cltd
sub
ja
dec
cmp
jae
mov
pop
mov
leave
cmp
push
test
xor
lret
and
pop
xor
jnp
fwait
ljmp
stos
sbb
jb
jmp
push
lods
addb
rol
pop
or
les
std
xchg
rcrl
or
stos
lock
add
jno
ss
mov
out
icebp
rcr
jge
inc
jp
xchg
fmull
cwtl
call
mov
mov
pop
into
stc
pusha
pop
xchg
and
js
xchg
cmp
or
push
or
repnz
push
xor
pusha
sbb
push
xchg
mov
ja
stos
adc
sti
jmp
pop
les
push
dec
push
arpl
xor
adc
pop
inc
pop
push
ret
daa
pop
dec
push
mov
mov
daa
out
cwtl
cs
nop
imul
lods
push
dec
jo
push
rcrl
cltd
fdivl
ret
sbb
sub
mov
lcall
jmp
push
inc
scas
ljmp
scas
inc
int
dec
dec
lds
sti
pushf
cmpsb
xor
dec
movsl
push
scas
sub
cs
cmc
fbld
aaa
inc
repz
enter
push
jns
mov
cmp
xchg
mov
pop
inc
sub
pop
jo
jge
and
jb
or
pushf
movb
cltd
pop
push
sub
clc
dec
lods
leave
mov
cmc
push
mov
sahf
adc
adc
xchg
push
cmpsl
mov
pop
mov
cltd
ret
xor
aas
add
imul
inc
jp
mov
ret
outsl
insl
mov
dec
addr16
rorb
xchg
stc
loop
movsb
mov
sbb
jle
dec
xor
js
test
push
xor
pusha
dec
pop
outsb
pop
jbe
dec
cmp
mov
into
xchg
sub
sbb
pop
mov
dec
xchg
lock
add
shll
add
pop
xchg
sub
pop
lock
mov
push
sub
into
fisubrs
xchg
or
cmp
jae
fiadds
vcvtdq2pd
mov
stc
std
leave
adc
mov
clc
cmp
mov
push
leave
js
icebp
pusha
hlt
mov
adc
xor
rolb
loop
shlb
int
popf
lret
mov
adc
das
xchg
adcl
pop
xor
int
push
add
call
adc
add
repnz
rorl
sub
ret
cltd
stc
xor
divb
push
xor
sbb
push
sub
fstps
movsl
jno
inc
dec
shl
mov
dec
push
mov
enter
lcall
cwtl
imul
jl
in
fsubs
xor
mov
hlt
ss
add
cmp
mov
fwait
mov
xor
sbb
or
pop
mov
dec
push
iret
nop
in
scas
es
out
in
shlb
daa
mov
in
les
jmp
bound
pop
mov
icebp
daa
dec
lds
in
cmp
and
mov
insb
and
adc
mov
cmpsb
movsl
xor
xor
stos
call
ss
in
inc
sarl
out
jnp
mov
cmp
call
xor
fnsave
and
mov
sub
xchg
into
fs
jb
jecxz
sbb
rolb
fucomi
jo
mov
in
out
jp
lcall
and
aas
cmp
cmpsl
xorb
sub
mov
mov
ljmp
fisttps
mov
add
mov
or
xchg
fwait
xchg
push
pop
fbld
sti
push
dec
push
shll
push
clc
bnd
mov
xchg
dec
and
inc
push
adcb
xchg
iret
jg
out
mov
pop
cli
add
add
mov
jne
int
insb
pop
mov
pop
movsl
sbb
pop
and
aaa
aad
jle
mov
or
add
xorps
ss
clc
pop
out
cmc
imul
push
int
stos
push
inc
enter
mov
xchg
out
mov
cmpsl
sbb
inc
in
dec
inc
fsts
repnz
jno
pop
pop
mov
mov
lret
shlb
xchg
mov
xchg
sti
jnp
push
push
cltd
xor
cmpsb
cwtl
cmpsl
imul
and
push
xchg
mov
stos
in
mov
loopne
push
jecxz
scas
inc
cs
adc
or
adc
das
ret
push
ficoml
sbb
push
pusha
sub
out
pcmpeqb
aaa
aam
sbb
add
jg
mov
shlb
mov
pop
ret
call
es
lcall
cld
outsb
shlb
mov
xor
jge
mov
adc
leave
fldt
inc
fcomip
std
shrl
lea
jo
ret
mov
adc
xor
cli
shr
adc
lret
add
mov
jle
nop
cmp
xor
fstl
or
loop
jg
clc
fwait
pop
imul
mov
xchg
and
dec
jnp
push
mov
xor
ret
xor
dec
nop
adcl
outsb
leave
loop
outsl
sub
xchg
icebp
inc
add
loop
sbb
lret
hlt
sbb
hlt
popa
and
cwtl
cmpsl
std
adc
and
loope
stos
lahf
cmc
xor
sbb
jmp
jns
je
ljmp
outsb
lfs
out
pop
andl
js
push
mov
xchg
int3
shlb
js
fcoml
fsubs
mov
jl
mov
dec
push
mov
pusha
or
stos
es
or
es
ss
loope
xlat
daa
jo
enter
sub
int
mov
lods
adc
jnp
inc
fisubrs
test
out
int
jmp
and
aaa
inc
lock
cld
pop
nop
mov
inc
bound
inc
mov
xchg
dec
adc
iret
pop
nop
sbb
sti
mov
ljmp
jg
adc
add
cmp
xchg
mov
xor
pop
cwtl
fistpl
push
inc
in
pusha
int3
mov
leave
enter
in
and
fwait
jecxz
push
pop
cmp
icebp
int
rcll
mov
xor
shrb
mov
xor
mov
xchg
push
dec
icebp
cs
out
adc
sub
dec
push
add
aaa
inc
repz
lods
mov
hlt
push
cmp
imul
and
push
mov
jecxz
in
lret
stos
jg
push
sbb
daa
xchg
ljmp
rorb
sub
gs
adc
mov
ja
fidivrs
pop
xchg
xor
inc
add
ljmp
mov
jle
pop
fstps
addr16
es
pop
repz
sbb
jge
in
mov
mov
int3
and
push
int
fldcw
in
jnp
dec
fldl
scas
xchg
cmp
xchg
add
add
or
mov
roll
add
push
dec
add
outsb
je
ds
adc
outsl
inc
ret
xor
sub
add
jg
pop
jl
aaa
add
sub
cmp
pop
pop
pop
pop
in
or
add
sbb
pop
es
mov
pop
imul
push
jnp
pop
push
ljmp
jns
push
out
lret
cmp
and
xchg
jl
or
cmp
fwait
jp
popa
dec
inc
jge
pop
cmp
stc
out
sub
and
jle
adc
fnstenv
xchg
data16
movsl
mov
cmp
or
mov
shrb
xlat
lods
cmc
inc
cli
adc
mov
in
add
pop
pop
mov
xor
pop
inc
shlb
cli
fcompl
in
cltd
out
push
outsb
cmp
loopne
xchg
leave
jno
jnp
cld
sti
ret
push
ss
ss
mov
jge
icebp
add
and
cmpsb
addb
enter
rcrl
mov
push
dec
shlb
cmpb
insb
shll
cmpsb
sahf
test
test
outsl
adc
add
es
mov
leave
cmpsl
xchg
cmpsl
test
or
jbe
sbb
popa
mov
push
loopne
adc
lock
fsubrs
jno
dec
adc
out
mov
pop
xchg
inc
xchg
push
cli
mov
pop
inc
stc
and
xchg
mov
push
fwait
shl
arpl
push
jo
rcrl
mov
jg
jns
xor
inc
shlb
fwait
xlat
jno
jae
pop
pop
lods
into
outsl
imul
inc
in
sbb
cli
add
adc
push
xor
adc
mov
clc
outsb
jns
pop
mov
pop
ds
cmp
mov
push
cmp
fs
popl
pop
ljmp
xor
mov
in
sbb
adc
xchg
mov
xchg
iret
out
fsubl
das
movsl
and
dec
or
xor
mov
cmp
stos
push
loop
sub
jne
pop
cmp
outsb
aaa
cmpsl
rcll
fdivr
inc
call
xchg
subl
test
fadds
fldl
pusha
lret
pop
push
jmp
aas
ja
mulb
call
cmp
je
lahf
add
test
ret
adc
dec
call
cld
adc
fadds
iret
pop
aam
loop
div
clc
in
adc
adc
and
pop
ret
push
pop
xor
xlat
daa
popa
mov
sti
enter
popa
jb
xor
ret
test
jmp
outsl
icebp
mov
push
mov
cmpsb
sub
mov
shlb
pop
out
or
aas
sbbl
insl
sbb
xor
daa
bound
jge
aad
mov
insb
sub
sub
push
aas
incb
push
pop
es
jg
pop
push
loopne
inc
xorb
sbb
or
repnz
xchg
xor
dec
lahf
gs
int3
test
sub
iret
in
xor
adc
andl
sub
xor
push
idivb
cltd
inc
imul
clc
push
mov
cs
adc
pusha
cmp
in
sub
mov
addl
jmp
loopne
addr16
jmp
test
push
mov
xchg
mov
mov
cltd
insl
pop
imul
into
inc
shl
movsl
push
sub
pop
cs
sbb
fabs
jne
adc
aad
insl
imul
xor
int
push
inc
out
jne
dec
fmul
repz
xor
adcb
mov
add
je
xchg
jge
mov
xchg
mov
xchg
xchg
int3
add
jmp
mov
cli
or
mov
out
fwait
add
lgs
inc
inc
fcoml
pop
test
add
xor
inc
mov
js
cmp
repz
push
mov
dec
mov
dec
cmp
and
inc
repz
adcb
mov
aas
lret
arpl
fs
adc
mov
xlat
int3
nop
std
jle
cmp
nop
sub
test
adc
xor
repnz
jge
dec
xchg
add
scas
pop
movsb
popa
mov
adc
jmp
mov
push
inc
inc
xor
pushf
adc
jnp
push
das
cmp
addl
test
add
aas
out
aas
push
in
rcll
aam
mov
xor
or
in
into
shlb
mov
mov
jae
xchg
pushf
in
ja
imul
and
stos
adc
fisubs
xor
sti
arpl
loopne
add
push
mov
xlat
xchg
or
and
adc
mov
push
lods
ss
insb
adc
push
jbe
lods
xor
icebp
fistl
sbb
pop
and
out
adc
inc
and
mov
push
sbb
lea
std
or
test
xchg
sub
mov
lds
adcb
icebp
mov
and
sti
mov
stos
pushf
push
add
rol
stos
out
mov
inc
jae
add
or
scas
push
test
scas
call
aad
lods
inc
cmp
in
dec
xor
in
adcl
pusha
ret
loopne
inc
loope
shld
mov
inc
shll
jns
stos
ds
repz
gs
ljmp
mov
stos
lahf
cmp
jl
jns
sub
cmp
jmp
repnz
push
test
jle
xchg
pop
pop
mov
sub
mov
dec
sarl
stos
push
pop
cmc
jno
pop
repnz
mov
adc
clc
imul
gs
iret
jo
cmp
and
mov
xchg
xor
cld
cmp
mov
jbe
fwait
push
movsl
pop
xchg
mov
test
xchg
mov
lods
popa
lcall
jmp
xchg
int
stos
jmp
jmp
lahf
scas
pop
ret
addr16
icebp
out
sub
xchg
repz
inc
lcall
mov
xor
inc
xor
cmp
mov
outsb
vpsrad
xor
mov
jne
jg
sub
adc
add
int3
xchg
sub
mov
and
jle
dec
and
sbb
dec
imul
xor
adc
in
in
scas
fstpt
mov
out
add
inc
hlt
mov
pop
mov
or
mov
lods
and
jecxz
mov
out
ret
sub
xlat
push
popf
dec
sub
out
in
pop
les
loopne
xor
sti
cltd
or
jb
mov
jb
punpckldq
pusha
sahf
repz
js
addr16
dec
mov
out
test
jmp
and
out
xchg
mov
dec
push
mov
jbe
jecxz
push
subl
loop
js
fiadds
ljmp
pop
dec
popf
adc
push
inc
mov
rcrb
add
dec
cmp
sbb
loope
jmp
cmp
je
lds
les
and
xlat
and
sbb
xor
sbb
aas
stos
in
sbb
int
in
aas
int
xchg
adc
xor
pop
rclb
mov
in
pop
icebp
sarl
push
in
push
icebp
jg
std
cmp
push
sbbl
popa
std
inc
in
lds
cvtps2pi
adc
add
pop
into
cmpsb
call
cmp
ss
and
xor
dec
mov
mov
and
xchg
lret
lcall
pop
lret
jbe
jo
and
mov
jg
stos
jl
fnstenv
dec
or
push
shll
pop
fsubl
push
divl
and
cmp
xchg
lock
vpaddusb
fimull
mov
mov
push
aam
xor
inc
sub
rol
mov
loop
hlt
add
mov
movsl
ljmp
xor
jae
loopne
or
addr16
or
cltd
and
xor
shrl
test
sub
mov
adc
push
push
inc
sub
das
mov
and
sub
jl
rcrl
mov
jmp
dec
ret
cmpsb
mov
mov
ror
xor
adc
jbe
std
mov
loope
or
mov
andl
arpl
jecxz
aad
sbb
lcall
or
sbb
jmp
pop
add
inc
ljmp
pushf
addb
jbe
sub
mov
xchg
cmp
mov
jno
or
stos
scas
or
pop
push
xor
and
arpl
dec
aaa
push
fisttps
sub
bound
or
xor
add
cmp
imul
xor
push
cmp
sub
sbb
rcl
inc
pop
test
push
popf
mov
fdiv
or
ljmp
fs
and
cld
jo
pop
arpl
cmpb
lock
dec
cmp
push
jmp
xor
mov
test
into
adc
xchg
xchg
int3
outsb
dec
push
sbb
add
adc
inc
mov
dec
sub
sbb
jo
push
pop
lcall
ds
adc
adc
fadds
mov
dec
inc
cmp
lds
push
enter
stc
loop
int3
mov
mov
mov
loop
mov
xor
and
fs
xor
sbb
sbb
add
aam
lock
add
mov
push
repz
push
pop
xchg
pusha
mov
xor
xlat
idivb
dec
push
push
sub
in
and
inc
push
mov
add
repnz
xchg
popf
in
rorb
add
popa
cltd
inc
or
mov
call
cli
outsl
or
xor
add
mov
jp
loope
popa
mov
push
add
jp
test
push
das
mov
shlb
movsb
shlb
fstpt
dec
outsl
jle
jnp
xor
jle
aad
inc
loope
mov
push
and
sahf
mov
test
aaa
jmp
pusha
sti
or
sbb
ljmp
rcl
xor
dec
pop
iret
lahf
xor
cmp
cmp
xor
jge
mull
sub
in
cli
nop
inc
xchg
mov
jns
lods
push
and
jle
pushf
push
rcll
pusha
dec
push
stos
jbe
push
addr16
lret
lret
mov
shrl
xchg
ret
outsl
rep
adc
sub
cwtl
divb
sub
ja
test
enter
rcrb
fs
dec
xchg
mov
dec
or
jmp
pop
inc
out
pmulhuw
out
adc
jmp
fdivrs
out
jle
jg
call
cmpsb
mov
lahf
push
insl
add
imul
shl
mov
push
cmpsl
cltd
scas
ljmp
push
ss
and
mov
mov
cltd
pop
adcb
fs
fiaddl
std
xchg
shll
xor
mov
out
vsubss
lods
idivl
add
outsl
inc
pop
add
test
inc
xchg
cwtl
fwait
dec
inc
lret
push
fcoml
outsl
std
bound
add
inc
loop
ficoml
jae
add
xchg
jle
ficompl
xchg
gs
popa
ret
mov
pusha
daa
loop
adc
int3
mov
test
adc
add
scas
dec
test
es
or
int3
insl
xchg
int
mov
mov
stc
mov
out
xchg
jp
mov
adc
jns
cmc
shlb
les
xchg
ss
jo
mov
pop
andl
scas
xor
mov
ret
repnz
mov
cmc
push
mov
out
addr16
mov
int3
sbb
pop
js
test
pop
loope
leave
into
pop
adcl
movb
adc
aam
ret
jecxz
jp
push
mov
pop
mov
outsl
stc
dec
jp
xor
sbb
pop
push
xor
push
mov
ljmp
mov
xchg
pushf
std
dec
push
mov
loope
jl
jmp
mov
push
inc
jno
bound
cmc
or
in
dec
jmp
xchg
jae
iret
pop
mov
loopne
pop
mov
sahf
in
mov
xchg
sti
lea
inc
in
sub
pop
mov
jecxz
into
movsb
movsl
inc
pause
cmp
rorl
fdivrs
test
add
imul
dec
mov
shrl
pop
iret
sub
push
divb
inc
insb
add
xchg
cmp
jns
mov
sbbb
adc
sarl
pop
add
int3
mov
and
jmp
inc
xor
push
inc
jge
mov
aaa
test
push
push
and
push
xor
dec
movsl
adc
insl
jg
sub
mov
shll
int
xchg
lcall
sbb
cmp
push
or
pushf
jbe
sub
add
push
mov
testb
nop
shlb
icebp
std
or
aaa
hlt
and
aas
out
rcr
xchg
pop
and
shl
cmc
mov
cmp
mov
insb
out
xchg
lret
xchg
jge
mov
push
shll
int3
ljmp
pop
push
lods
mov
jl
xor
lahf
cmpsl
hlt
popa
add
subb
push
stos
dec
sbb
dec
clc
nop
xchg
aaa
adc
and
sub
pushl
cltd
jmp
sbb
inc
orl
or
mov
popa
xchg
sub
adc
sbb
xchg
adc
int
daa
cmp
adc
popa
cmp
sbb
xor
fistpll
and
das
nop
pop
mov
je
inc
jae
scas
ljmp
std
clc
dec
shll
inc
sub
push
std
fs
insb
filds
jp
sbb
sbb
add
jno
adcb
rclb
ja
pop
or
mov
das
push
loope
mov
stos
idivl
add
test
xchg
or
scas
nop
js
xor
shrb
dec
out
xchg
cs
cwtl
cmpsl
sahf
imul
mov
in
aam
ret
push
xor
sbbb
mov
fiadds
stos
add
dec
mov
out
bound
ret
lods
mov
aad
and
mov
mov
and
xor
jmp
repz
push
cli
mov
cmp
jne
int3
filds
movb
inc
loopne
adc
jbe
sub
pop
inc
push
stc
rorb
js
ret
add
push
inc
dec
add
cmp
scas
dec
push
sub
adc
add
out
mov
movsl
shr
imull
data16
movsb
ret
lcall
das
cmc
cmp
xchg
xor
add
fs
xchg
cld
jmp
and
mov
push
mov
mov
or
loope
js
jae
mov
cmpsb
outsb
inc
dec
aas
scas
pusha
mov
ss
gs
mov
aad
push
out
fiaddl
ss
aad
outsb
mov
aam
add
and
subl
xchg
clc
outsl
sti
cmp
mov
jp
or
mov
push
pop
xor
push
xor
outsb
cmp
out
dec
int3
fs
arpl
repnz
cmp
mov
cwtl
mov
sub
mov
lods
stos
fcmovne
mov
repnz
pushf
fmul
lret
adc
sbb
and
lcall
cmpb
ss
add
mov
aaa
jb
xchg
inc
sub
decl
divb
or
sbb
jb
xor
xchg
lcall
in
push
pushf
es
loopne
outsl
les
cmp
pushf
inc
pop
fabs
mov
ret
faddl
inc
gs
mov
stos
sub
push
xor
fdivr
mov
int3
inc
sub
dec
into
sub
pop
sti
dec
jmp
and
push
insl
rcl
and
out
jno
pop
add
cmp
mov
or
pop
jae
ss
cmp
mov
or
ljmp
and
or
push
call
rcr
pop
pop
jecxz
or
sub
pop
fldcw
incl
cld
scas
inc
aas
jns
xor
out
shl
push
outsb
cmpsl
and
testl
or
cmp
sub
fidivl
shll
add
dec
je
push
mov
or
add
mov
push
repnz
add
loope
jp
sbb
and
clc
xor
loop
inc
inc
outsl
dec
lods
jl
jmp
call
inc
xchg
ret
pop
fsub
mov
push
cs
mov
mov
add
test
jb
and
scas
mov
cs
and
sti
push
je
add
loope
fists
push
sub
enter
je
pushf
xchg
sbb
lea
adc
leave
addb
std
mov
sbb
scas
loop
pop
je
jne
loopne
imul
ljmp
or
sbb
pop
movsl
jl
adc
push
push
in
into
and
push
lods
or
pop
mov
das
cli
jmp
ja
mov
pushf
dec
or
sbb
xorl
mov
sbb
enter
cmpsb
add
outsb
stc
mov
pop
mov
sbb
iret
push
js
mov
cmpsl
jne
adc
adc
lret
fs
xchg
es
icebp
int
adc
mov
fdivrl
or
mov
cmp
cmp
popf
xor
xchg
mov
xlat
fmuls
mov
dec
xchg
movsl
aad
js
cmp
nop
jns
test
orb
lret
cmpsb
push
xor
nop
inc
fnstsw
xchg
inc
out
lret
movsb
lahf
push
adc
xchg
gs
xchg
mov
mov
in
lret
or
sbb
flds
subb
mov
xchg
mov
dec
xlat
out
and
jg
add
xchg
movsb
addr16
pop
repnz
add
inc
cmp
neg
sub
pop
mov
int
or
ljmp
push
cmp
or
xor
in
dec
bound
lods
mov
repnz
es
jp
xrelease
imul
lret
push
mov
test
mov
pop
dec
cmp
jno
pop
mov
push
cmp
adc
jp
aas
mov
jo
in
jl
iret
nop
or
dec
nop
jo
jg
cmp
lret
cmp
out
lock
aam
fdivl
test
fs
sub
inc
or
mov
fwait
mov
xor
pop
in
out
sbb
or
dec
dec
in
in
pop
mov
and
lods
cmp
jae
popf
dec
push
dec
sub
lea
fadds
or
insb
jge
dec
pop
push
mov
imul
lods
fs
xchg
push
mov
fadd
add
cmp
ss
test
rolb
test
mov
jl
cmp
push
push
enter
inc
iret
sar
mov
pop
pop
mov
sub
fcmovnb
popf
aas
addr16
fisubrs
xor
pushf
mov
add
pop
jecxz
loop
add
or
test
and
push
movsb
insb
jb
out
pop
mov
mov
dec
imulb
mov
sub
std
mov
rcll
cmp
cmp
repz
jbe
fcmovnu
lods
outsl
lahf
sub
push
xlat
sub
push
dec
cmp
das
je
data16
aad
lret
mov
push
push
mov
leave
push
out
daa
fisttpll
ret
xor
push
push
sbb
mov
mov
push
imull
pop
dec
js
cmp
fs
test
push
cltd
lods
mov
push
xchg
cmp
loope
mov
pop
outsl
stos
xchg
add
imul
mov
loopne
xor
sbbb
fisubrs
mov
mov
in
xchg
xchg
das
inc
jge
push
xchg
cli
loopne
inc
add
mov
pop
jge
mov
cmp
mov
push
lock
xchg
mov
jmp
mov
or
popf
sahf
add
and
sbb
mov
add
insb
shl
sub
push
pop
movsl
xor
ljmp
bound
scas
xor
sbb
imul
jb
and
jae
ja
stc
sbb
icebp
jno
inc
xlat
mov
push
push
and
sub
mov
js
jge
addr16
cmp
int3
adc
stc
cmp
popf
sub
pop
fiaddl
mov
push
pop
or
inc
inc
test
sub
xor
dec
addr16
sub
loopne
mov
mov
xor
movsl
pop
scas
in
inc
push
pop
ret
xor
jmp
rol
adcb
test
push
outsb
lea
into
call
ds
pop
sub
dec
add
mov
inc
in
es
mov
loop
and
stos
icebp
pop
sahf
testb
push
nop
mov
aad
fmull
mov
cmp
xchg
fists
mov
rcll
insb
les
ljmp
ret
shll
sub
out
push
stc
xchg
mov
jae
outsl
and
pusha
ficompl
push
xor
push
sbb
into
dec
rorl
add
subb
loopne
xchg
lock
negb
add
pop
push
or
xchg
mov
aaa
sti
cmpsl
lods
ds
sub
rorb
jae
xadd
gs
push
or
mov
and
add
imul
xor
push
mov
or
std
cltd
push
or
testb
xor
lcall
loop
push
addr16
pop
xor
sbb
add
jo
mov
xchg
mov
lahf
push
ds
out
mov
cmp
xchg
fwait
ja
ss
loopne
movsb
enter
mov
pusha
cmp
pop
subb
ljmp
ficomps
and
out
or
push
bound
cmp
or
adc
pop
mov
pop
mov
pop
mov
ret
sti
or
inc
add
cmpsl
leave
jle
xor
les
mov
mov
xchg
inc
aam
addb
ja
xchg
sahf
sahf
fists
pop
jecxz
roll
mov
icebp
pop
test
and
rorl
lret
mov
clc
xor
stos
pop
sbb
push
adc
inc
push
jno
les
add
adc
pop
dec
cmp
test
adc
push
adc
sbb
test
xor
push
hlt
jge
xchg
dec
and
dec
stos
mov
stos
bound
repz
or
dec
cli
add
sub
sahf
sub
stos
cmp
jmp
in
mov
and
fwait
shrl
and
mov
push
sbb
cmp
fdivr
test
mov
out
iret
mov
addr16
fiadds
movsl
xchg
add
in
inc
pop
mov
pusha
cmp
pushf
lret
xlat
mov
and
xchg
adc
mov
pop
sub
sub
lds
pop
xor
out
sbb
pop
and
rolb
inc
push
sub
movsl
or
loope
clc
repz
shlb
xor
out
or
sbb
pop
cmp
or
sbb
lret
sbb
popa
inc
out
dec
jp
icebp
dec
shl
sub
jo
cmp
lds
popa
loop
jbe
dec
popa
adc
push
cmp
data16
jno
pop
dec
jecxz
dec
inc
xlat
out
or
add
mov
shr
push
or
cmp
dec
adc
mov
jle
imul
and
add
stos
call
xchg
mov
pop
imul
xor
pop
out
inc
lods
mov
sub
pop
je
mov
sbbb
sub
add
je
lahf
rol
jle
cs
fcompl
repz
clc
push
fmuls
repz
pop
dec
xchg
inc
dec
out
mov
and
add
mov
insb
sti
pop
or
push
or
mov
mov
jnp
test
in
adc
push
and
mov
popa
scas
pop
add
lcall
cmc
push
adc
shlb
dec
inc
or
push
pop
imul
xor
xor
ficoml
mov
frstor
add
out
and
cmp
ret
push
shlb
insl
pushf
xor
inc
stos
mov
int3
and
insb
mov
cmp
xchg
inc
cs
xor
mov
xchg
and
icebp
pop
dec
mov
hlt
imul
inc
mov
jg
fbstp
jne
sti
add
mov
add
mov
test
dec
jmp
lret
rsm
mov
inc
repz
ret
inc
sub
push
jle
es
sarl
pop
mov
dec
nop
ds
imul
cltd
jno
mov
fcmovne
cltd
sbb
cmc
scas
or
xor
sub
add
int3
mov
faddl
or
daa
add
xor
pop
lahf
js
pop
mov
cmp
sahf
or
insb
add
arpl
jmp
mov
jns
push
fistps
aam
jo
sbb
out
mov
push
out
mov
mov
sub
movsl
dec
xor
mov
repz
push
cli
and
cmp
pop
aad
adc
jp
insb
adc
jecxz
call
sti
mov
daa
inc
cld
insl
xorl
and
xor
and
cmp
ss
add
xor
daa
mov
add
stos
outsl
sub
outsb
pusha
enter
sbb
test
inc
rcrb
xor
xchg
mov
mov
sti
jne
loop
mov
movsl
into
xchg
and
les
out
inc
dec
out
lods
es
lods
mov
inc
push
push
outsb
out
fsubrp
fsubr
sub
repnz
mov
mov
and
test
cmp
sbb
mov
dec
mov
cmp
in
rcl
cmp
inc
stos
add
jns
test
or
jge
push
std
cmp
dec
in
xchg
mov
roll
push
fst
std
lods
push
ss
inc
ja
lock
aam
xorb
cmp
jp
sahf
xlat
push
dec
mov
cmp
jnp
fs
adc
mov
push
xchg
call
js,pt
inc
fucomi
ret
push
pop
sbb
xchg
xor
sti
cmpsb
stc
mov
cmpsl
pop
fistpll
mov
cmpsl
push
aaa
push
jecxz
into
xchg
imul
js
data16
cmc
xor
clc
mov
xor
movsl
mov
or
xchg
xor
je
cltd
sub
icebp
fwait
scas
cmp
xorb
test
add
jae
imul
xor
test
sbb
mov
dec
mov
inc
movsl
jmp
lea
sub
mov
stos
jmp
xchg
arpl
jno
mov
lods
jp
fst
mov
push
imul
hlt
lea
lods
in
jp
icebp
out
jecxz
outsb
push
push
popf
inc
push
imul
pop
xchg
mov
push
lods
sahf
jbe
push
jbe
mov
clc
or
mov
mov
test
lcall
dec
dec
push
cmp
push
scas
outsb
fsubl
enter
cmp
jns
inc
cmp
aaa
test
sub
decb
loope
int
inc
xor
cltd
cmp
xchg
jmp
fwait
pop
pop
push
jge
push
pushf
cli
lods
fnstcw
sbb
dec
scas
push
xchg
int3
jnp
mov
or
outsb
popa
movsb
aaa
lock
xchg
insl
jge
andl
mov
mov
or
dec
push
cmc
mov
jecxz
aad
imul
xchg
pop
ss
sbb
xchg
lahf
cmp
int3
scas
in
fimull
mov
out
pushf
jne
aad
mov
jb
xor
sbb
cmp
daa
mov
pslld
mov
icebp
imul
out
ljmp
adc
sbb
and
add
dec
cmc
out
shlb
imul
mov
mov
mov
pop
push
xor
adc
mov
mov
arpl
push
push
xchg
bound
in
lcall
hlt
lahf
mov
shll
jne
test
dec
or
imul
lods
icebp
ror
sbb
xor
xchg
andb
js
lret
push
ljmp
xchg
hlt
mov
mov
int
xlat
jp
xor
lods
ds
push
ss
fimull
mov
lods
sti
in
push
std
lock
stc
cmp
nop
lret
sti
loop
dec
inc
pop
repnz
fisubrs
or
hlt
ljmp
and
dec
sarl
adc
mov
shl
xor
xor
mov
and
lahf
mov
jecxz
and
aam
xchg
push
inc
bound
mov
pop
imul
adc
pop
loop
push
aam
xchg
xchg
mov
mov
cli
ret
dec
negb
loopne
adc
ds
mov
jbe
lret
jns
dec
es
xor
cmpsb
cmpsl
cmp
and
and
xor
xor
jecxz
popl
leave
xlat
pushl
int3
mov
sbbb
cmp
add
mov
rorb
adc
dec
adc
push
mov
mov
lea
in
daa
pop
mov
dec
xchg
jb
xchg
aas
mov
and
xor
mov
lret
in
rcr
pop
rcrl
jle
fisttpll
shrb
icebp
push
out
inc
cmp
mov
lret
in
cld
mov
xchg
sub
and
mov
lret
lea
pop
inc
and
in
dec
test
or
adc
sbb
sbb
insl
punpckhwd
adc
mov
sub
sbb
out
mov
es
adc
jne
retw
mull
lret
jg
mov
pop
shlb
inc
add
in
pminub
test
clc
pop
adc
cmp
test
outsb
popf
mov
enter
loope
mov
mov
jg
mov
insb
jge
fwait
push
insb
inc
xchg
xchg
mov
mov
pushf
xchg
jo
and
mov
insb
push
imul
out
add
inc
xlat
add
jnp
add
ret
ucomiss
fwait
mov
outsl
fldenv
addb
andb
xchg
dec
cmp
sub
leave
adc
push
fsubs
or
fs
hlt
xor
daa
dec
movsl
jmp
jno
push
sub
sbb
and
xchg
cmp
mov
or
loope
inc
dec
bswap
lret
push
adc
mov
cmp
pop
jp
ror
ds
lahf
jp
std
jo
cmp
lcall
ds
dec
lods
divl
jnp
movb
or
inc
xlat
je
mov
mov
aas
mov
stos
cltd
andb
adc
mov
mov
add
in
repnz
div
pop
adc
fst
jge
or
imul
clc
add
stos
rcl
out
jo
cmp
jne
insl
lods
xor
add
test
std
ret
xchg
or
lds
mov
xor
cmp
jns
jbe
push
ds
imul
lods
cmp
cmp
pop
pop
movsb
test
xchg
xor
mov
jnp
clc
push
enter
imul
fsts
mov
jge
lea
scas
nop
mov
mov
xor
imulb
pop
std
sub
or
cltd
ss
out
and
jle
push
push
xchg
jl
rclb
repnz
jmp
mov
add
inc
mov
vxorps
jle
loope
pop
mov
sub
pop
and
call
enter
lahf
xlat
or
push
pop
clc
hlt
pop
inc
ret
mov
pusha
mov
pop
or
dec
call
int3
stos
pop
xor
jmp
jg
imul
inc
fisttps
imul
test
mov
sbb
add
outsl
adc
sub
cmpsb
out
dec
push
aas
mov
jne
mov
xchg
or
imul
and
mov
stos
jmp
scas
ljmp
ss
push
push
les
dec
jecxz
mov
cld
and
and
jno
sbb
or
mov
xor
into
aam
movsl
cltd
sub
adc
add
out
dec
dec
push
inc
pop
lods
mov
mov
sub
scas
adc
fisubrl
jcxz
aaa
sar
incb
movsb
pop
jmp
lahf
cltd
imul
out
mov
jp
jae
jmp
repnz
ficoms
mov
xor
sub
jge
outsb
push
or
lret
pusha
or
mov
aad
pop
push
stc
lret
push
lret
mov
fsubs
lods
hlt
insb
test
in
cwtl
add
jno
repz
stos
pop
dec
loopne
sti
fdivr
mov
and
inc
fmull
in
or
jg
insb
or
hlt
fisttps
adc
and
js
or
or
jp
sub
cwtl
push
jns
out
or
mov
loope
mov
es
iret
cmpsb
inc
pop
xchg
mov
enter
inc
repnz
jnp
push
pop
jp
leave
in
in
jg
dec
jg
mov
dec
nop
ljmp
jns
dec
add
mov
hlt
pop
in
sub
push
gs
pop
jecxz
loop
sub
jae
add
loopne
jbe
inc
push
imul
sub
xchg
sbb
lret
movsb
call
int
pusha
mov
rolb
xchg
sub
xchg
cmp
or
push
pop
fcompl
cmp
sub
test
xor
or
int
sbb
mov
push
inc
push
repnz
fwait
pop
add
dec
jmp
xchg
std
ficoml
ret
aas
stc
jg
dec
xchg
insb
dec
or
ror
pop
movsl
insl
inc
mov
je
dec
xchg
outsl
lods
lcall
xor
xor
pop
mov
arpl
push
lds
outsl
das
int
pusha
mov
das
flds
mov
mov
mov
bsr
outsl
in
js
pop
lahf
popa
cmp
pop
mov
movsl
cmp
pop
hlt
push
inc
mov
stc
cmpsb
ss
mov
or
sub
lcall
mov
lea
cli
aam
adcl
jl
ret
mov
fstpl
pop
scas
sub
push
imul
jnp
cwtl
daa
fmull
mull
inc
repz
sahf
fildl
rol
icebp
mov
int
or
or
dec
xchg
dec
pop
loopne
rol
pop
icebp
jne
adc
popa
sbb
mov
test
xchg
and
mov
addr16
stos
lahf
ss
pop
inc
xchg
lods
lea
adc
jp
mov
cltd
ficoml
push
mov
or
sbbb
mull
addr16
fs
cltd
mov
fs
cltd
mov
or
sbb
fists
jp
adc
adc
and
mov
movsb
jmp
cmp
xchg
push
push
or
lods
data16
jbe
pop
mov
cmp
cmp
stc
push
mov
imulb
mul
or
decb
sahf
jp
out
mov
xor
pop
in
jmp
cmpl
sbb
add
xchg
ret
cmp
push
jns
fidivrl
xor
dec
sahf
inc
push
cltd
jae
and
cmpsl
movsb
repnz
cltd
std
in
dec
lds
sub
int
leave
xchg
mov
add
push
ljmp
fdivs
hlt
in
push
in
pop
cmp
mov
lret
shrl
lret
rcrl
adc
mov
ficompl
hlt
push
pushf
jns
and
adc
arpl
ret
movsb
es
push
adc
cmp
mov
xor
and
or
xchg
inc
ds
adc
addb
int3
test
jle
dec
xor
and
adc
out
sbb
insb
hlt
cmp
sbb
mov
test
push
inc
test
scas
sbb
fdivs
fsubl
mov
out
mov
iret
push
cwtl
testl
out
xchg
lea
jae
cmp
cli
pop
xchg
and
pop
stc
sub
xchg
adc
jo
and
or
or
push
adc
xor
jnp
push
sub
mov
out
rolb
cmp
jns
sub
mov
mov
aaa
mov
lock
mov
sbb
cmp
cmp
dec
and
inc
sbb
sbb
jl
outsb
mov
data16
xor
seta
int3
cld
enter
in
xor
xchg
mov
out
sub
cmpb
aaa
lea
movsb
test
add
repz
inc
jmp
ja
stos
popf
xor
cltd
xchg
mov
push
mov
sub
and
mov
ret
dec
cmpsl
roll
fnsave
data16
fsubp
push
xchg
ljmp
adc
xchg
pushf
addr16
cmpsb
mov
push
push
mov
shlb
stos
mov
mov
loopne
aam
outsl
je
fsubrp
jle
add
pusha
push
daa
cwtl
jle
enter
mov
adc
pop
sbb
lods
leave
stos
aas
add
sarl
push
mov
sbb
add
fwait
stc
imul
jg
mov
roll
add
sahf
into
push
mov
xchg
adc
shrb
jns
and
pushf
adc
decb
scas
int
mov
sbbb
sarl
dec
and
int
xlat
loop
dec
xchg
push
lret
mov
xchg
cs
mov
adc
push
jle
ljmp
lcall
aad
mov
lods
or
adc
jb
push
or
stos
in
inc
sbb
add
outsb
and
fnstsw
and
jnp
psubusb
dec
dec
int
push
push
push
repnz
aas
xor
lea
dec
push
lods
add
add
gs
lret
dec
xor
sub
add
pushf
xlat
cmpsl
jge
sarb
adc
lods
int
push
mov
mov
fisttps
popa
jb
xor
xchg
cli
xor
pop
sub
in
push
xchg
fwait
popa
inc
mov
xor
lcall
xchg
push
lock
pop
adc
imul
inc
mov
lret
mov
bound
in
ds
and
mov
out
ss
aam
inc
mov
lret
or
push
mov
aaa
pop
leave
mov
push
mov
in
test
popf
add
lahf
dec
pop
fidivrs
int
call
xchg
fs
lds
imul
das
ds
cmc
sub
adc
test
lret
dec
push
ret
ficomps
mov
mov
sub
ja
jo
xlat
xchg
sbb
lock
or
es
sub
lea
dec
test
push
sbb
cmc
push
fdivs
dec
es
scas
mov
lahf
jns
xchg
dec
lahf
outsb
cmp
scas
xor
push
jmp
movsb
jb
mov
jge
jmp
mov
test
aam
scas
and
push
daa
mov
adc
js
bound
in
lahf
pop
mov
dec
sbb
sbb
fldt
enter
or
loope,pt
insl
adc
cwtl
clc
bound
mov
mov
sub
xchg
insb
mov
out
clc
jbe
pop
je
enter
aas
out
call
sbb
repz
popa
add
sbb
pop
rcl
xor
xchg
std
inc
jp
inc
push
ffree
lods
rclb
stc
pop
ja
add
fcmovnu
ret
jne
aam
repz
jbe
pop
sahf
cmp
cmp
inc
cltd
shrb
or
imul
aad
mov
mov
and
fldenv
pop
pop
popf
mov
or
pop
lods
or
mov
sub
cmp
stc
push
adc
test
lcall
cmpsb
push
mov
aam
inc
int
xchg
xor
mov
add
pop
mov
in
sub
adc
inc
dec
into
push
add
sub
mov
cmp
mov
pop
sbb
aam
mov
sbb
test
mov
idiv
mov
mov
xchg
sbb
iret
mov
shll
dec
insb
movsb
cmp
fldcw
xorl
jae
clc
rcll
insl
xchg
loopne
pusha
std
xor
cmp
xchg
xchg
lods
mov
scas
push
imul
stc
jb
push
arpl
jo
mov
sbb
subb
sub
testl
sub
jmp
add
fsubrs
sbb
repz
cld
dec
jle
mov
cmp
dec
lret
or
clc
push
mov
ljmp
out
pop
xchg
test
adc
adc
push
dec
mov
adc
adc
push
mov
xchg
xor
in
cltd
loop
cmpsl
das
jg
pusha
sbb
int3
bound
push
in
movsb
in
and
jbe
daa
sub
and
loopne
adc
fistpll
fstpl
adc
std
xchg
push
daa
adc
dec
mov
outsb
pop
int
out
jno
bound
dec
cli
xchg
jbe
scas
lds
mov
fwait
xchg
mov
les
xchg
cld
xor
sub
fbstp
fisttpll
fs
stos
jno
push
and
mov
push
loop
ret
into
imul
dec
adc
jno
jmp
jnp
sbb
into
mov
adc
jae
mov
lahf
jg
add
and
add
faddp
sub
cmp
push
insb
std
jns
fwait
mov
popf
mov
cwtl
or
je
sub
pop
sub
jb
outsb
mov
je
sbb
sbb
mov
popa
scas
fcomps
aam
adc
mov
repz
sbb
inc
cs
rolb
mov
inc
jp
inc
mov
cmp
shlb
push
push
out
push
push
mov
subl
dec
test
sub
push
cmpsb
cmpsb
fneni(8087
push
int
subb
leave
xor
or
enter
fadd
in
jecxz
insl
sub
es
or
mov
jge
mov
or
jbe
adc
sbb
pop
fdivrl
add
mov
lcall
adc
mov
fimuls
sub
adc
cmp
mov
xlat
ror
call
rorl
popl
scas
jl
dec
cmp
dec
push
cmc
mov
js
outsl
rorb
outsb
xchg
and
daa
sbb
dec
iret
cltd
mov
sti
int3
dec
dec
loopne
or
cmp
jnp
mov
jmp
ds
jnp
rolb
sub
xchg
icebp
rcll
pop
cmp
push
sub
push
outsb
dec
in
pop
repz
xchg
cmp
cwtl
push
mov
mov
arpl
iret
pushf
mov
push
pop
cmp
outsb
fwait
or
mov
xlat
sub
dec
xchg
jns
push
push
and
xor
shrl
push
outsl
out
aad
daa
mov
lcall
or
cmp
jp
adc
insb
cli
inc
fstl
mov
xorb
adc
inc
repz
in
les
repnz
fxch
stos
cmp
shl
dec
insl
or
jl
inc
pop
or
jb
ljmp
daa
xor
inc
dec
xchg
cmp
adc
movsl
js
cmpsl
aaa
pop
adc
in
cmp
aaa
and
push
add
and
or
je
sti
cmpl
jo
sub
or
mov
push
mov
cld
fnstenv
stos
jnp
dec
inc
in
test
aam
aam
sbbl
inc
push
xchg
dec
add
movsl
shll
cmp
lea
imul
pop
into
fidivrs
ljmp
out
lds
mov
dec
sub
sub
push
insb
push
xor
sbb
in
sub
aam
idivb
aaa
cmp
xchg
ss
lods
xchg
mov
lcall
mov
mov
pop
dec
jmp
mov
test
push
pop
and
xchg
les
dec
rcl
mov
rcrl
ljmp
repz
jmp
aaa
push
insb
mov
pop
test
loopne
jg
mov
cltd
push
insb
xor
mov
dec
xchg
lret
jle
out
xchg
int
stos
jecxz
cmpsb
or
add
xchg
insl
cwtl
cmpsb
loop
ror
or
or
fs
jbe
and
test
push
js
pop
or
jle
mov
les
fwait
mov
ror
dec
push
xchg
xchg
inc
lods
stos
addb
add
out
cltd
and
fildll
mov
push
mov
or
sahf
in
inc
movsl
int
stos
add
in
in
jnp
fsub
cmp
mov
aad
xchg
aas
or
inc
pop
push
jne
mov
pop
cmpsb
rcl
pop
sbb
mov
xlat
jae
jbe
psubw
cld
and
mov
adc
add
bound
call
sbb
lock
in
or
mov
mov
or
adc
jne
xchg
rorb
pop
stos
and
lret
popa
lea
int
fs
dec
int3
ror
mov
push
stos
push
enter
xchg
pop
imul
call
mov
add
add
leave
push
xchg
pusha
test
mov
test
movsb
add
sub
dec
jno
stos
lcall
jl
fistps
push
xor
dec
pop
xor
push
dec
push
push
addr16
xchg
std
adc
ds
push
xchg
push
sti
clc
cmc
pop
xchg
mov
add
mov
ret
adc
sub
scas
insl
sti
sub
fistps
push
dec
and
pop
jge
pop
sbb
hlt
loope
les
ljmp
sbb
fs
add
jb
ret
adc
adc
cmp
pushf
int
ds
pop
notl
ljmp
mov
xor
jp
jl
and
cmp
jae
and
mov
xor
cmp
call
lahf
or
and
popa
jns
movsl
daa
or
mov
jge
pop
pop
push
les
mov
pop
pop
xchg
push
push
mov
sbb
es
adc
sbb
or
into
hlt
mov
arpl
and
xchg
aam
mov
mov
pop
ret
sbb
push
hlt
push
fimull
rcrb
sub
lods
aam
xor
movsl
lahf
jno
int
sbb
pushf
sub
hlt
stc
cmpsb
mov
xchg
pop
jl
dec
aad
mov
cwtl
test
push
adc
xchg
sahf
fwait
add
sbb
stc
push
adc
jns
mov
frstor
out
scas
cmp
cmpsb
pop
push
fildll
add
mov
ljmp
mov
push
adc
dec
movsb
adc
icebp
mov
inc
in
cmc
pop
test
sbb
or
inc
jg
push
cmpsb
jb
cmpsl
ljmp
adc
je
sbb
or
icebp
insl
push
mov
std
setnp
nop
popf
mov
adc
fdivrs
jne
jnp
ljmp
or
fldenv
repnz
lret
cmp
push
ja
adc
inc
ljmp
or
leave
inc
cmp
lcall
sub
inc
cmc
mov
mov
push
pminsw
in
test
cli
pop
sbb
loope
ds
mov
mov
loope
xchg
mov
jb
adc
dec
add
push
jae
data16
test
pop
or
or
fwait
gs
outsl
sbb
lods
jecxz
add
stos
outsl
xchg
data16
push
or
repz
xor
adc
arpl
xlat
aam
xor
and
push
cmc
in
out
adc
lahf
ret
loope
fildl
mov
sub
orb
mov
scas
sahf
and
sbb
daa
and
push
adc
jno
insb
cs
or
js
mov
xor
mov
aas
rcrb
sahf
add
cmp
js
push
pop
cmc
mov
push
push
out
cltd
shll
mov
or
mov
push
ss
pop
sub
add
imul
shlb
call
outsl
xchg
sahf
mov
icebp
mov
lods
xchg
push
insl
out
add
fstps
cmc
aas
and
xor
xchg
inc
and
and
cmp
adc
shl
jmp
addr16
xchg
ffree
aad
fisubs
ja
adc
adc
xchg
jb
insb
jae
jg
call
test
dec
push
dec
mov
fadd
add
jge
xlat
je
push
sbb
stos
dec
xchg
leave
xchg
imul
mov
mov
shl
inc
adc
js
mov
loope
das
imul
ret
rorb
jecxz
imul
cmc
cmp
cmpsl
shll
inc
lret
cmc
bound
pop
dec
cli
scas
fucomip
add
mov
adc
fbld
adc
or
leave
jnp
dec
jp
test
and
push
push
adc
popf
mov
rcr
jo
xor
imul
or
xlat
andb
lods
cmp
mov
negl
je
push
enter
sbb
hlt
lea
iret
mov
push
xchg
pop
mov
rcrl
nop
pop
into
jbe,pn
add
add
filds
mov
mov
mov
fcmovne
int
adc
lahf
add
pop
sub
jnp
adc
pop
xchg
mov
sub
dec
pop
scas
mov
pop
xorb
add
outsl
pushf
push
xor
jmp
or
sti
and
xchg
dec
and
out
in
bound
shl
test
stc
movsl
dec
stos
and
js
adc
mov
cmp
push
mov
lret
mov
mov
mov
and
icebp
sarl
xchg
movsl
out
popa
xchg
pop
cmc
sbb
inc
insb
mov
push
mov
leave
jo
xchg
add
inc
div
jp
dec
div
jnp
push
popa
adc
inc
ds
xchg
jo
ds
cmpsb
xchg
pusha
pushf
movsb
cmp
clc
call
dec
mov
fsub
dec
cmp
xlat
gs
push
cmp
pop
push
xchg
insb
pop
xchg
mov
sbb
sub
into
push
imul
inc
mov
xor
test
xchg
mov
pop
sub
rcrb
jb
sub
out
insl
mov
pusha
dec
xchg
shlb
popf
push
xor
cwtl
mov
xor
pop
xchg
std
pushf
jne
movsl
or
cmpsl
ja
ds
scas
in
xor
aas
cmpsb
pop
adc
sub
or
test
xchg
adc
das
fwait
mov
sub
mov
jb
lock
cmpsb
xchg
outsb
in
lock
daa
repnz
sub
sti
inc
ret
add
out
ret
movsl
orl
sbb
int
insl
outsl
aas
jle
shl
fldt
repz
ljmp
sahf
jno
insb
pop
test
inc
es
jae
jmp
inc
in
push
sbb
fcompl
lea
loopne
sbbl
or
sub
ds
negb
sbb
pop
loop
aas
or
andl
pop
inc
mov
in
pop
fsubr
lret
push
bound
leave
push
and
jmp
mov
xchg
out
popf
shll
jmp
xchg
and
fs
cli
shlb
sub
and
sbb
lock
pop
add
or
lea
and
test
sbb
xchg
pop
lret
lods
aad
ds
ja
sbb
lock
mov
inc
sahf
pop
subl
fidivrl
cltd
pop
rcrb
repnz
push
cmp
lret
test
in
pop
cmp
orl
loopne
das
push
sbb
adc
mov
xor
movsl
sub
adc
mov
xchg
shrl
pop
leave
sub
mov
mov
xor
mov
cmc
fcmovnb
dec
jg
fdiv
xor
jb
sbb
test
or
aad
mov
push
inc
sbb
sub
lock
push
push
xor
jmp
stos
inc
stos
jnp
mov
and
push
xchg
jno
popa
mov
mov
jle
ljmp
gs
mov
fidivs
and
mov
cld
and
imul
sub
loope
sbb
xchg
in
fidivs
leave
adc
xor
cmc
fisttpll
cwtl
mov
shl
popf
lret
sub
push
push
cmpsb
cmp
ret
mov
sar
push
fildll
repnz
push
mov
mov
jmp
into
bound
jle
test
dec
and
add
lcall
jmp
es
ficompl
sub
fdiv
nop
in
incl
or
sar
cmp
popa
and
push
adc
push
add
dec
aad
or
add
and
mov
sti
dec
out
pop
cmc
adc
fisubrl
or
cwtl
cmp
lret
sti
lock
add
xor
fcoml
push
scas
in
pop
inc
data16
mov
mov
mov
scas
adc
pushf
sub
test
cmc
dec
pop
lods
push
pop
and
pop
mov
xor
mov
dec
push
inc
inc
outsl
adc
fstpl
dec
sub
arpl
dec
test
out
test
push
ret
push
inc
mov
int3
in
das
jle
ds
daa
and
mov
pop
test
or
push
xchg
imul
call
scas
cli
push
add
push
jne
inc
push
adc
stos
mov
sbb
adc
mov
lock
jne
dec
push
mov
icebp
mov
pop
lds
insl
pop
push
cmp
int3
roll
pop
dec
mov
mov
andl
pop
sub
jae
cmp
push
or
dec
push
mov
sti
cmp
jmp
outsb
jge
stos
adc
pop
jecxz
sarl
dec
add
adc
sub
pop
mov
push
shll
test
push
mov
push
rcrl
rcrl
enter
hlt
jae
out
jbe
or
push
jb
testb
push
cld
dec
pop
lea
cltd
xchg
stos
movb
cltd
lret
fsubs
cmp
inc
fwait
jl
inc
aam
insl
pop
add
xor
cmp
lahf
movsl
enter
jne
adc
imul
popf
push
or
daa
inc
jne
insb
jl
adc
sahf
loopne
cmp
dec
out
push
xchg
pop
mov
mov
leave
push
imul
push
cmp
pop
cmp
mov
test
outsl
test
xor
jns
pusha
push
je
cmpsl
sar
pop
pushf
adc
add
xor
cmp
fs
xchg
movsl
iret
fisubs
fcomi
adc
xchg
ret
mov
jbe
mov
xor
mov
mov
mov
call
lock
insb
jne
mov
pop
pop
sub
pop
scas
mov
ret
nop
sbb
inc
sub
movsb
jg
cltd
sub
xor
data16
je
fists
lea
test
sub
ss
cmc
cmpsl
aas
push
imul
popa
test
dec
pop
loope
dec
cli
out
das
pop
dec
stc
mov
add
adc
iret
sub
sub
xchg
push
jmp
fs
fsubrp
jae
mov
ret
pop
test
cs
out
test
not
out
add
adcl
sbbl
sub
xor
dec
dec
jbe
or
insb
movsb
add
xchg
jge
mov
shr
pmaxub
inc
push
faddp
jne
aas
cmp
sub
xchg
sbbl
pop
test
add
add
jg
aas
imul
stc
lahf
mov
popa
enter
sub
push
xchg
xchg
add
in
arpl
scas
aad
out
mov
cmp
rolb
or
lcall
sbb
and
loopne
lcall
icebp
jl
negb
hlt
sahf
push
outsb
adc
and
into
xor
fucom
lret
movsb
out
dec
in
mov
lods
loope
fistpll
clc
xchg
imul
cmp
nop
and
jmp
cmp
sbb
fimuls
flds
jae
lods
aad
repnz
push
in
sbb
xlat
mov
mov
lock
les
adc
imul
jp
jno
jg
jp
clc
pusha
jle
test
xchg
scas
jno
mov
repz
sbb
outsl
mov
pop
xchg
sbb
xor
test
jo
add
repnz
movsl
outsb
mov
js
out
lret
ret
movsl
push
dec
mov
mov
mov
dec
mov
mov
shrb
pusha
repz
sbb
mov
rorl
xchg
popa
mov
jbe
pop
cmp
jno
and
imul
pop
roll
sub
mov
out
mov
daa
mov
xlat
or
mov
xor
mov
imul
faddp
test
and
pop
push
test
cs
fs
loop
push
into
cmc
add
xorl
lods
jb
inc
movsl
xchg
insb
shll
scas
or
mov
or
mov
dec
loope
pop
push
dec
mov
mov
add
push
jbe
dec
mov
bound
pop
and
lds
xchg
dec
lds
cli
bnd
cmp
in
std
and
push
fadds
fiadds
jecxz
ja
or
addr16
mov
fst
in
movsb
rcl
jmp
imul
mov
jge
cwtl
jl
outsl
sub
rorb
push
adc
or
mov
loopne
dec
movsl
push
xor
xlat
out
call
int
lret
push
jo
das
or
cli
sbb
jo
pop
cwtl
pop
lret
aam
mov
adc
and
cmp
or
mov
adc
int
xor
loope
mov
dec
fiadds
jp
lcall
outsb
sub
inc
rorb
es
lcall
adc
int3
cmovne
popf
popl
arpl
mov
outsb
cli
out
test
out
in
stos
aad
xor
mov
jae
leave
mov
cmpps
jo
mov
jb
movsl
inc
aaa
sbb
in
mov
add
sbb
cmp
mov
pop
fst
fdivs
and
inc
notl
lods
jae
adc
fiaddl
jl
xchg
xlat
sub
sub
push
mov
pushf
aaa
imul
lock
dec
cmpl
movsl
fdivl
bound
lret
xchg
les
push
fdivrl
inc
cmpsb
in
adc
jo
or
sbbl
fisubrs
pop
xchg
sahf
lods
addr16
dec
push
fwait
mov
insl
mov
mov
cmp
xor
pop
jae
fisubs
test
lods
les
ret
loopne
lret
push
jge
int3
mov
mov
stos
ja
js
cmp
dec
xchg
cmp
jecxz
or
sub
loope
or
mov
mov
xchg
inc
cltd
inc
icebp
pushf
adc
add
inc
inc
mov
cmp
and
loop
gs
cli
xchg
and
mov
cmp
mov
lea
sbb
push
add
stos
scas
push
xor
scas
mov
add
adc
lods
adc
ret
fwait
mov
mov
mov
movsb
sub
and
jae
daa
jg
xchg
inc
cmpsl
insb
out
push
or
mov
push
sbb
lock
bound
xchg
repz
ljmp
jo
xchg
pop
jne
addl
lods
arpl
jne
pop
add
repz
cli
hlt
imul
or
xchg
std
ret
mov
jns
push
in
stc
sub
jmp
inc
outsl
sbb
adc
mov
mov
test
sbb
xchg
mov
jle
sub
adc
push
cmpsb
push
mov
sbb
mov
sbb
push
and
mov
pop
adc
aam
sbb
adc
aas
ja
lret
imul
jmp
int3
orb
lahf
cltd
inc
sbb
push
sbbb
shl
imul
pushf
push
pop
pop
outsb
in
mov
push
sub
adc
mov
int3
and
insl
mov
fs
push
sbb
dec
mov
cmpb
sub
add
and
xchg
int3
cmp
leave
xor
dec
mov
sbb
out
or
fdivrs
fidivs
testl
inc
sbb
mov
cmp
cmpsl
fnsave
iret
jmp
fildll
add
inc
xor
pushf
mov
sub
mov
and
aas
popf
and
mov
mov
xacquire
xchg
mov
lahf
imul
aas
fucom
outsl
xlat
out
scas
dec
mov
push
push
ret
call
add
lahf
mov
cli
adc
pop
xchg
sub
jmp
dec
lret
pop
xor
aam
xchg
mov
popl
inc
shr
mov
sbb
outsb
jmp
xlat
repnz
cmp
sbb
bnd
xor
mov
push
inc
sahf
xchg
jmp
inc
xor
out
jns
push
mov
xor
shrb
gs
outsl
sub
ret
mov
cmc
cmpsb
cwtl
lret
mov
xor
test
sub
push
cmp
arpl
xchg
dec
xor
xor
xchg
jl,pn
test
inc
leave
aam
lret
jl
cld
daa
popf
cmp
xor
negl
xor
jmp
mov
fisttps
fnstenv
inc
jne
test
dec
int3
mov
adc
das
jbe
pop
lret
outsb
add
loopne
clc
jecxz
adc
sbb
xrelease
or
insb
arpl
xor
or
inc
and
cmp
dec
jbe
sbbl
sub
negl
inc
or
sbb
adc
pop
imul
arpl
rolb
pop
test
arpl
push
loop
sbb
sub
jnp
addb
scas
repnz
cltd
xchg
cmp
jecxz
hlt
cmp
mov
and
jne
shr
gs
jmp
jecxz
push
sub
push
es
lock
jo
dec
in
sub
insl
or
stc
in
sub
inc
cmp
pop
nop
outsl
cli
pop
add
xchg
or
jp
sub
hlt
fs
pop
mov
jo
mov
inc
outsl
in
add
cld
ret
mov
jp
jb
ljmp
pop
lahf
cmp
inc
test
push
mov
incb
mov
lods
outsl
es
push
cs
shll
in
cmc
jb
jnp
insb
fdivr
xchg
outsb
mov
call
push
and
jns
fs
xchg
loop
or
push
nop
cmc
adc
jmp
scas
cmp
push
adc
mov
or
or
les
or
pop
not
sub
xchg
adc
in
setno
add
mov
cmp
pop
subb
cmc
cwtl
push
cltd
in
mov
dec
std
jnp
mov
mov
fdivrl
mov
mov
pop
push
cmp
push
sub
jge
loopne
lea
add
aas
mov
mov
or
repz
push
fstl
dec
movsb
in
loope
and
dec
neg
or
out
mov
repz
sbb
xchg
ror
push
inc
mov
xchg
dec
loopne
lods
sub
mov
add
cmp
stos
stos
test
jecxz
scas
aam
imul
cmpsl
sub
rorl
or
repz
int
add
in
outsb
xchg
sub
sbb
jns
ss
jg
aaa
fnstsw
out
insl
iret
ficoml
hlt
hlt
fildl
and
push
inc
imul
call
mov
push
movsl
push
loope
and
dec
mov
popf
adc
sub
cmp
lods
inc
adc
jecxz
pop
mov
sbb
inc
pop
int3
jl
pop
mov
enter
cmp
add
clc
push
pop
and
jns
jge
add
cmpsb
sbb
jmp
lret
jmp
popa
inc
cwtl
pop
push
adc
insl
mov
and
rcll
loop
scas
fs
xorb
int
xchg
or
lods
inc
pop
sub
in
shrl
cmp
addr16
sbb
mov
mov
dec
inc
fdiv
inc
dec
cltd
jecxz
test
ss
sub
repz
and
addl
in
fisubs
ror
cmpsl
xchg
les
push
push
imul
insb
xchg
jmp
sub
jo
sbb
xchg
sbb
jno
xlat
push
mov
loopne
out
sub
xor
add
push
mov
lret
jnp
cmp
sti
cwtl
lods
pop
shrl
ret
xor
adc
aas
mov
test
fs
and
out
xor
shl
nop
and
call
inc
in
lea
call
jo
dec
test
add
sbb
fdivrl
and
pop
lahf
pop
cli
das
cmp
loop
outsl
in
mov
mov
cltd
ret
cmp
and
xchg
mov
sbb
lds
xor
mov
test
dec
and
or
push
sub
fs
stc
push
out
sbb
pop
stos
cmp
jae
sub
aas
sub
rol
das
push
cmc
mov
jnp
and
mov
adc
jns
and
mov
call
mov
jo
mov
or
adc
aad
mov
push
xchg
repnz
mov
testl
mov
cmp
push
filds
jecxz
xchg
ja
insb
xor
mov
jnp
fldcw
daa
test
aad
mov
cwtl
fisubrl
mov
mov
cmp
fsub
push
lcall
adc
mov
pop
popf
into
mov
ss
cmpsl
or
dec
aaa
pop
mov
dec
mov
or
sub
test
adc
pop
xor
mov
add
out
movl
inc
out
mov
jmp
mov
out
sub
add
movsb
jo
sahf
nop
add
outsl
cli
sub
mov
ljmp
sbb
shlb
fstl
xlat
push
ficompl
or
fnstcw
cmp
push
sbb
leave
stc
loope
addl
or
inc
sbb
or
and
mov
incb
sub
mov
jmp
test
loopne
cmc
js
mov
std
pop
adc
loopne
lcall
int3
iret
sahf
cltd
pop
jb
scas
or
lock
sarb
or
jae
rcr
jnp
cmp
fbstp
xor
in
cwtl
hlt
dec
scas
arpl
or
jecxz
sbb
cs
xchg
scas
dec
pushf
sub
pop
lret
outsb
je
test
das
jbe
mov
sub
mov
add
inc
inc
mov
jae
push
mov
cmp
pop
test
fwait
scas
jg
push
inc
adc
ficomps
jno
mov
sub
das
jg
xchg
dec
sbb
fildl
pop
sub
fimuls
mov
sub
jno
add
sbb
pusha
fisttps
mov
leave
cwtl
pop
xchg
imulb
jl
cmp
enter
adc
jnp
sub
adc
cmp
inc
clc
pop
pusha
test
or
test
addr16
sahf
iret
inc
shll
and
push
scas
mov
or
push
jl
into
xchg
inc
xchg
push
mov
stos
dec
dec
lock
mov
outsl
std
enter
mov
or
sub
adc
mov
mov
jnp
jecxz
push
movsl
push
outsb
arpl
popf
push
popf
test
xchg
shrb
cmc
xor
cli
sub
push
adc
out
or
stos
xorb
dec
mov
icebp
test
pop
mov
out
fisttps
arpl
jns
and
mov
stos
push
stos
test
mov
jo
mov
movl
ficoml
aam
pop
pop
jae
xor
jl
dec
testl
int3
pop
cmp
pushf
aam
sbbl
xlat
mov
push
icebp
push
mov
jmp
jae
ret
add
aaa
ljmp
sbb
push
sti
in
jns
insb
mov
or
pusha
fisttps
add
or
cmp
rcl
mov
mov
lahf
inc
ljmp
lods
adc
stos
sbb
imul
inc
jge
lcall
js
insb
mov
and
cmp
test
xchg
add
gs
push
pop
inc
aaa
mov
fcoms
int
je
sbb
loope
fcoms
arpl
lods
test
aam
popa
adc
jle
mov
cmpxchg
enter
inc
cmp
push
sarb
scas
or
aad
cmc
xchg
xchg
lea
mov
dec
push
lods
and
test
and
sarl
xchg
mov
mov
in
in
fisttpll
jne
int3
jno
mov
jno
insl
fnstenv
ljmp
push
pop
xchg
mov
fstpl
dec
jns
jo
aad
outsb
stos
dec
mov
sub
repz
test
in
xor
imul
std
jb
sbb
jp
loop
push
insl
imul
adc
test
dec
xchg
adc
imul
ficomps
mov
xchg
mov
bound
xchg
cmp
iret
pop
mov
pop
hlt
pop
roll
dec
xchg
pop
xchg
ja
jns
mov
mov
push
out
mov
xor
test
cmc
jmp
movsb
jns
fwait
test
outsl
adc
xorb
and
and
dec
lock
push
cmovnp
jmp
test
insb
notl
mov
dec
scas
adc
adc
sub
adc
idivl
push
push
repnz
sbb
or
cmp
adc
movsb
insb
xchg
lea
repnz
adcb
or
das
aas
cmpsb
lods
push
and
sub
sbb
adc
pop
cltd
push
pop
sub
cmp
mov
jb
mov
pop
call
pop
popf
cmp
xor
movsl
dec
insl
mov
adc
pushf
push
addl
jp
xor
aaa
push
hlt
xor
jg
add
sub
movsl
mov
and
mov
test
inc
shrl
fcomps
negl
lahf
inc
or
sbb
fwait
pop
sub
loop
cwtl
inc
dec
mov
pop
bound
aad
push
lahf
sbb
inc
std
dec
push
mov
xchg
add
lods
mov
xchg
sub
ret
lds
leave
sub
adc
fidivrl
fbstp
sub
push
mov
and
insl
jb
outsl
jmp
mov
push
or
mov
push
push
inc
gs
xor
push
mov
rorl
jae
sar
leave
mov
add
cs
pop
outsb
and
xchg
mov
pop
or
sbb
lock
fwait
adc
loopne
xchg
aam
lea
imul
xchg
mov
xor
mov
cli
jg
vpsubsb
sar
int3
inc
pop
xchg
push
cmp
pop
mov
jns
sti
aad
cmp
es
roll
lea
jae
add
push
xor
mov
push
and
out
pop
daa
lcall
xchg
jmp
dec
mov
mov
test
icebp
cld
lds
mov
ret
sbb
mov
dec
repnz
test
jbe
inc
cmp
adc
push
sbb
mov
dec
and
lods
std
inc
push
int3
sbb
lret
pop
mov
push
test
jle
jl
cli
mov
cmpsb
shlb
mov
lcall
loopne
ss
fnstsw
jp
mov
nop
repz
mov
mov
repnz
cmp
jno
add
dec
js
cmp
in
jns
daa
cmp
out
or
sbb
add
pusha
mov
pop
in
mov
mov
mov
jg
add
pcmpgtd
sbb
roll
adc
sbb
mov
dec
not
clc
pushf
outsb
and
loope
sub
mov
dec
dec
test
lods
add
outsl
mov
pusha
jmp
and
lcall
in
loop
mov
xchg
or
testl
aam
in
jo
notl
dec
sub
cmp
cmc
adc
mov
and
outsl
jl
mov
clc
jae
push
sub
push
dec
add
mov
inc
scas
outsl
int3
adcl
test
sub
dec
mov
and
lahf
mov
lock
fldl
mov
dec
sbb
jge
sbb
ret
inc
mov
pop
ficomps
or
cli
mov
out
testl
mov
sbb
mov
dec
mov
mov
jns
shll
loop
xor
add
sbb
xor
int3
jle
push
jnp
pop
rcll
dec
ja
scas
ficoml
push
fidivl
and
fisubrl
out
fstps
js
xchg
test
push
js
and
add
sub
pop
and
sbb
sub
sub
fistps
loope
lods
jp
out
or
mov
roll
push
pop
cmpsl
stc
jmp
scas
inc
inc
mov
cmpsl
jne
pop
aam
in
or
mov
sbb
sub
aad
ja
sbb
pop
in
jbe
enter
pop
adc
and
xlat
add
into
cs
jns
in
je
loope
add
call
pop
aaa
mov
aad
out
ret
pop
or
dec
mov
fcompl
outsb
fisubl
push
or
into
outsl
aaa
pop
loope
cmp
fadds
loope
sbb
std
sbb
mov
sbb
xchg
stos
mov
cmp
loopne
xor
cmpl
cwtl
jp
pop
arpl
idivl
sub
inc
loop
pop
push
rcl
mov
notl
xlat
jnp
mov
shrb
stc
pop
fs
add
cmpsl
jmp
orb
mov
leave
ret
adc
push
aam
jge
test
sub
das
add
adc
pop
and
push
jl
dec
add
mov
add
adc
jl
rcr
lret
cmp
xchg
cs
or
pop
sub
pop
std
sbb
push
fs
xor
daa
add
stos
and
pop
imul
cmc
ret
pop
xchg
popa
jle
dec
cmpsb
std
insl
inc
test
xchg
fmull
and
cmp
cmp
in
mov
and
cli
adc
pop
gs
mov
add
xor
sti
sub
shlb
xor
in
pop
loopne
aas
sub
leave
jle
adc
stos
loopne
mov
aaa
icebp
mov
mov
xor
mov
loope
subl
jne
push
subl
mov
lods
pop
xor
lock
push
sbb
fstpl
xor
pop
arpl
adc
sub
jnp
es
jb
sarl
out
and
mov
leave
sub
enter
or
push
pop
inc
aas
js
mov
mov
in
adc
ljmp
loop
subl
popa
push
and
fwait
je
negl
push
test
jmp
rcl
add
popf
imul
adc
inc
jmp
adcb
sub
int
xchg
gs
cmp
pushf
push
test
mov
das
jnp
pop
lds
in
mov
push
mov
fidivrs
cld
push
add
adc
sbb
inc
mov
fnstcw
xor
push
sub
imul
cmp
jno
arpl
mov
leave
and
pop
dec
pop
lahf
gs
cmc
rcll
push
jbe
sub
xadd
andl
shll
int3
pop
adc
mov
jp
jecxz
cmp
mov
fldt
and
pop
test
pop
sbb
cld
add
sub
add
bswap
mov
mov
ret
cwtl
jnp
lret
int3
lahf
imul
xchg
sahf
xchg
pop
mov
sbb
bound
daa
dec
and
stos
nop
dec
push
jge
pop
jle
jo
les
mov
lahf
mov
xchg
lahf
inc
stc
xchg
es
mov
push
es
fwait
addb
push
std
mov
push
inc
inc
cmpsb
xor
ret
ja
sbb
lds
jae
push
and
jo
push
call
dec
sbb
leave
xlat
imul
jne
cmp
and
mov
jae
sub
jno
loopne,pn
or
push
dec
fiaddl
push
dec
clc
sub
add
test
gs
rolb
ss
lret
rorl
push
negb
pop
inc
je
push
sbb
lret
sti
ds
mov
pop
jecxz
push
data16
mov
mov
and
dec
push
out
mov
mov
test
out
outsb
push
out
sub
mov
bound
jnp
cmc
std
lea
lcall
adc
sub
insl
add
insb
sti
adc
mov
mov
push
and
pop
sbb
or
shrb
dec
es
xchg
fadds
je
cwtl
cmp
mov
lret
jb
popf
aaa
inc
add
inc
inc
mov
clc
xchg
das
test
cmpsl
ret
inc
jb
cmp
stc
lods
or
pop
dec
add
sub
jns
fwait
xchg
into
clc
cmpsl
inc
pop
stos
or
mov
pop
fs
mov
aas
cwtl
dec
inc
in
jmp
dec
jmp
test
pop
popa
fiaddl
push
add
xchg
dec
cmp
sbb
mov
loope
or
or
out
cmp
jbe
pop
jno
and
les
out
je
in
push
fcomi
jl
dec
or
test
fstcw
sahf
mov
imul
sbb
dec
xor
cmpsl
fcoml
fcmovb
dec
icebp
cli
dec
cmp
adc
sub
clc
fucomi
popa
idiv
mov
lret
lahf
mov
or
push
sub
push
outsb
xlat
and
popa
inc
sbb
rcrb
jbe
sbb
xchg
pop
adc
add
push
adc
jge
test
cwtl
jl
mov
jno
xor
jge
scas
ror
xchg
xor
lret
pop
mov
ret
mov
mov
je
cli
jnp
int
jle
fstpt
lods
adc
insb
push
jb
add
loopne
adc
das
mov
lods
ret
call
ret
sbb
mov
mov
jae
in
xor
dec
push
pop
pop
lock
add
es
and
mov
mov
enter
popa
jo
or
push
movsl
sub
push
cli
cmp
rolb
dec
sub
dec
push
repnz
or
and
jbe
xor
adc
leave
hlt
adc
scas
push
mov
aad
movsl
xchg
mov
and
cmp
dec
jg
movsl
xor
rolb
adc
aam
jmp
xlat
inc
jp
rorl
aaa
pop
lock
into
inc
inc
mov
ficompl
jge
in
push
pop
sub
mov
push
loop
repz
pop
test
call
push
dec
xchg
in
imul
cmp
loopne
bound
push
imul
push
repz
xlat
fidivrs
dec
mov
lods
or
mov
faddl
sub
and
xchg
and
fwait
adc
or
cmp
ds
pop
fs
daa
aam
sbb
movsb
fsubrl
inc
sbb
mov
sub
andb
jg
or
sbb
cltd
insb
mov
cmp
js
idiv
int3
xchg
es
sub
aas
and
inc
mov
push
insl
pop
dec
sbb
dec
mov
mov
sub
mov
mov
es
pop
imul
lcall
scas
mov
pop
sbb
cld
addr16
jne
imul
jne
adc
sti
repnz
cmp
mov
frstor
jne
fidivrs
aaa
mov
jge
movl
adc
mull
cld
shll
or
add
test
dec
cmpsb
and
das
xchg
shl
and
mov
stos
xor
pop
push
xlat
aas
hlt
pusha
cmp
incl
imul
adc
adc
mov
inc
push
jno
int3
jns
cmp
sahf
dec
sub
push
sub
stos
imulb
push
lock
inc
incl
mov
ror
aad
mov
iret
in
pushf
lds
jmp
out
inc
inc
mov
mov
mov
les
popa
pushf
lods
lret
in
pop
loop
cli
jnp
or
dec
sbb
gs
mov
nop
add
jl
or
push
sub
shll
or
js
sti
adcl
sub
xor
adc
lcall
push
xor
xchg
add
mov
dec
or
scas
cwtl
xchg
out
hlt
cltd
mov
mov
stos
xor
in
daa
cmp
in
jo
add
add
add
clc
test
addb
js
test
dec
shl
adc
push
cmpsb
imul
adc
scas
adc
lret
xchg
ljmp
mov
out
punpckhbw
mov
loopne
out
jmp
pusha
inc
xchg
outsb
pop
stc
push
xor
in
dec
sub
or
xchg
cmp
mov
mov
idivl
int
add
lea
jecxz
repnz
les
xchg
mov
sarl
pop
ljmp
clc
sti
push
xchg
test
xchg
fwait
test
jl
xchg
cmp
out
or
stos
stos
jge
pop
in
add
outsb
mov
fisubs
in
jne
idivl
lret
call
jecxz
add
jle
rolb
loope
mov
push
jmp
xorb
dec
add
or
gs
ja
leave
les
out
dec
cmpsb
and
and
add
fnstcw
mov
mov
adc
mov
fxch
jecxz
or
push
jb
adc
jge
xchg
inc
cmp
jecxz
xchg
or
rorl
and
cli
xchg
lcall
andb
mov
dec
cli
xchg
repz
xchg
add
xor
and
push
ud1
mov
test
sahf
ror
mov
rcrl
pop
dec
xor
pop
inc
mov
jge
test
outsl
xorl
ds
cmp
cld
sbb
jecxz
mov
jno
fimuls
sahf
ss
loopne
fwait
and
data16
scas
push
sbb
arpl
and
push
movsb
pop
push
out
out
pop
add
push
int3
outsb
stos
push
push
and
jmp
push
iret
ja
jne
cmpsl
loopne
cmp
iret
lock
jl
mov
push
mov
fimuls
xor
and
dec
push
mov
cmp
lds
insl
divb
je
mov
xor
mov
push
lock
mov
fsubrs
lret
test
jg
aad
scas
imul
ljmp
pushf
out
mov
jle
xchg
xlat
leave
pop
mov
inc
in
jecxz
cld
jns
xchg
and
sbb
movl
ret
mov
mov
sub
in
stc
popf
adc
adc
jae
dec
or
inc
int
cmp
fsts
test
mov
cld
std
mov
pop
dec
lahf
and
imul
add
pushf
stc
inc
out
pop
dec
aaa
xor
jmp
pop
cmp
movsl
lcall
cld
daa
loopne
mov
and
cmp
iret
aaa
out
jmp
lahf
cmpsl
jp
test
movsl
adc
mov
out
subb
xor
dec
cld
stos
or
pusha
ss
mov
insb
pop
mov
cmp
mov
jg
mov
shrb
cmp
mov
outsl
stc
lret
out
xchg
adc
pop
push
pushf
nop
cmp
lret
sbb
andb
sub
add
xor
adc
arpl
inc
fidivrs
ja
jb
or
lds
insb
imul
filds
jb
mov
in
cmp
dec
dec
jl
xor
sub
les
add
out
jle
push
pusha
mov
loope
or
sub
push
sbb
xlat
dec
sub
sarl
addr16
das
shrb
scas
push
fisubl
pop
fwait
cs
cmpsl
insl
push
popa
sti
cld
addl
add
movsb
adc
out
pop
loope
mov
xchg
fsubrs
pop
push
xor
sbb
jmp
push
mov
out
lock
bound
sbb
pushf
out
inc
ds
test
xchg
sbb
mov
movsl
not
push
cmc
xchg
mov
push
cmp
fcmovbe
shlb
cld
mov
jae
dec
decb
jno
in
dec
pop
mov
and
call
lods
fstps
xor
sti
aam
and
mov
ds
jp
jl,pt
or
push
pusha
xor
cmp
cmp
xchg
jecxz
push
or
mov
out
dec
inc
test
push
daa
jb
bound
mov
and
mov
mov
or
ret
sbb
and
jb
add
outsl
jge
push
xor
push
jecxz
xchg
and
cmpsl
mov
fwait
sub
sub
jno
push
insl
mov
adc
cmp
mov
dec
movsb
loopne
adc
add
mov
das
pop
stos
outsb
je
sub
pop
sub
insl
icebp
cwtl
enter
xchg
xchg
adc
cmp
movsl
or
and
daa
mov
sarb
test
std
pusha
lock
pop
dec
outsb
add
pop
jb
add
movsl
test
add
xchg
mov
lods
mov
mov
inc
pop
dec
and
dec
loopne
testl
imul
arpl
and
roll
sub
aas
push
les
pop
mov
call
lret
cltd
or
repnz
sub
into
jecxz
out
add
sbb
adc
xor
icebp
cmp
pushf
sub
in
shll
es
sub
dec
sahf
lcall
cwtl
shll
test
xchg
pop
or
dec
mov
push
pop
cwtl
mov
fildl
mov
xchg
test
imul
movsb
xchg
jecxz
dec
loopne
sub
or
jnp
sbb
mov
inc
aaa
pop
inc
sbb
jne
mov
sbb
subb
loop
subl
dec
rcr
call
pop
insb
orl
jg
push
mov
ficoml
cltd
mov
pop
shll
adc
cmp
pop
add
jns
dec
sub
jp
jecxz
sbb
xor
sub
aad
leave
lret
sahf
jno
fs
pop
push
xor
mov
repnz
push
in
cmp
in
hlt
cmp
je
mov
in
jae
mov
inc
adc
aaa
aaa
test
mov
add
push
sbb
insl
inc
repnz
negb
fidivl
jp
xor
notb
pop
cmc
imul
leave
outsb
xchg
mov
inc
push
adc
mov
rcll
mov
mov
jp
xlat
mull
pop
sub
mov
lret
inc
push
sub
pusha
enter
enter
xor
mov
adc
out
mov
and
xor
ja
mov
adcl
lret
sbb
mov
mov
sub
adc
inc
arpl
add
cli
sbb
push
jno
mov
pushf
mov
ret
out
pushf
jb
xchg
comiss
xor
loop
xlat
movsb
cmp
jle
fwait
mov
push
sub
mov
inc
dec
adc
shrb
sti
inc
scas
mov
inc
les
ljmp
nop
es
mov
imul
rcll
add
cmp
cmc
scas
int
loopne
mov
jmp
mov
dec
popa
pop
inc
mov
pop
movsl
mov
mov
inc
sub
cld
xor
mov
lcall
stc
out
xchg
pop
cmpsb
xor
xor
icebp
aad
subl
sti
cltd
mov
repnz
inc
xchg
dec
stos
sbb
pop
push
sbb
mov
jbe
das
cmp
mov
flds
in
je
adc
inc
pop
sbb
mov
fdivrp
inc
push
lods
loop
pop
and
sub
xchg
ljmp
mov
xor
movsb
sbb
stos
int
stc
mov
clc
jns
inc
scas
jg
std
jns
jne
dec
lahf
cmp
fcoml
daa
loopne
and
fsub
push
or
xorb
dec
mov
pushf
xchg
inc
pushl
xchg
push
hlt
pop
xchg
std
bound
adc
inc
sbb
jno
lea
sbb
pop
lea
xchg
sbb
out
out
and
or
loopne
inc
subl
pop
inc
les
cmp
in
cmp
xor
sub
popa
fwait
iret
cli
dec
arpl
xor
lods
out
fsubs
jne
jno
out
mov
imul
dec
aad
and
and
sbb
push
outsb
or
out
xchg
fcompl
lcall
aas
or
sbb
into
insb
xlat
das
mov
arpl
arpl
repnz
mov
pop
js
in
sahf
jne
inc
xchg
mov
push
dec
or
dec
call
cmp
pop
inc
fistps
fisttpll
dec
jge
enter
inc
repz
or
insb
into
sub
sahf
mov
adc
int3
xchg
movsl
sub
mov
clc
add
int
mov
popf
cmp
mov
mov
inc
jmp
adc
popf
cmc
or
mov
push
mov
or
mov
or
xchg
mov
divl
cmc
ret
mov
cmp
mov
xchg
lahf
icebp
dec
in
dec
outsb
cmp
int
pop
inc
dec
ds
das
mov
rclb
pop
leave
pusha
jns
inc
test
outsb
std
dec
mov
adc
into
imul
sbb
aad
rcrl
add
dec
sub
mov
shlb
jns
fs
adc
ret
and
cmp
inc
cmp
into
push
cwtl
lret
and
mov
sbb
and
roll
jmp
xor
pop
mov
andl
xchg
outsb
inc
jmp
mov
add
dec
shrl
lods
dec
dec
push
adc
push
inc
push
aam
adc
xor
dec
dec
rcrl
out
fdivl
ja
sub
je
js
push
mov
pop
xchg
pop
mov
sub
mov
lret
mov
pop
mov
bound
mov
dec
push
mov
mov
inc
adc
xchg
sbb
out
push
aas
mov
ss
dec
adc
cwtl
dec
sbbl
loope
or
shll
cli
loopne
cmpsb
sub
mov
mov
fsubrs
pop
scas
dec
mov
xchg
mov
and
adc
loopne
addr16
ja
adc
push
xchg
push
insl
std
push
outsb
mov
shl
icebp
adc
xchg
lods
bnd
test
out
clc
pop
push
lock
rclb
and
or
movsb
cmp
pop
xor
lock
repnz
test
pop
call
add
aaa
jo
xchg
push
aas
dec
lea
push
shll
dec
push
jb
int
or
mov
int3
clc
or
adcl
hlt
aad
mov
add
sub
in
arpl
loop
cmp
mov
out
icebp
int
xchg
les
ret
jl
out
push
inc
jno
leave
pop
idivl
jecxz
jnp
cmp
inc
pop
pop
jbe
or
mov
inc
cmpsl
scas
jle
jbe
adc
cmpsb
xor
ret
cld
mov
aam
lea
jge
and
lock
sub
bound
push
xor
pop
cmp
loope
push
mov
add
aaa
ljmp
cmp
shr
fisubl
mov
mov
decl
add
push
popa
inc
mul
test
dec
and
inc
ss
aaa
insb
pop
jmp
call
sub
cmp
jmp
push
dec
xchg
cmp
adc
dec
fsubrs
add
sbb
sahf
ret
or
in
cltd
ss
ret
aaa
push
std
add
sbb
pop
call
dec
mov
jb
xor
rorl
or
pushf
xor
mov
or
ret
dec
cmp
ret
movsb
es
sbb
lods
inc
int
cmpsb
out
xor
fiaddl
dec
fbstp
fcoml
int
jg
insl
mov
rcr
shrb
test
and
sbb
sbb
xorl
bnd
ficoms
xchg
push
decb
lret
push
mov
fisttps
repnz
inc
or
jne
jp
movsl
push
mov
popf
shrb
repz
jge
cmp
mov
sub
fcompl
push
mov
das
int3
pop
loopne
ds
jp
popf
cmpsb
inc
jno
faddl
or
xchg
dec
ja
dec
addr16
jo
roll
xchg
mov
add
jg
negb
mov
imul
xor
loopne
mov
mov
ret
shrl
arpl
sub
sbb
inc
mov
sbb
dec
add
xor
adc
daa
adc
cmc
rcrb
sbbb
or
in
into
mov
sti
mov
mov
or
pop
stos
jp
mov
xchg
jle
or
xor
cmpsl
sti
xchg
cld
mov
xchg
mov
or
jecxz
out
mov
out
movb
mov
out
fadd
and
addl
shll
inc
cmp
sarl
sub
mov
hlt
and
or
inc
idiv
cmp
mov
sbb
call
pop
jb
push
mov
es
xorb
aas
sbb
push
sub
fldenv
cmc
pushf
inc
pop
mov
fwait
adc
es
cld
gs
push
push
pop
ret
jg
sub
sub
out
ljmp
jns
outsb
jge
repnz
faddp
xor
jo
cld
and
stos
stos
pop
test
loopne
push
dec
lods
push
or
push
sahf
ljmp
or
dec
sbb
pop
rcll
dec
and
jne
pop
pop
mov
cwtd
xor
pop
mov
sbb
mov
into
insb
pop
icebp
cmp
add
push
cmpsl
cmp
movsl
dec
jl
hlt
add
and
pop
shll
pusha
dec
lds
negl
pop
sarb
fmuls
jbe
jp
lcall
cmp
xchg
inc
mov
lret
jp
xchg
in
mov
pushf
or
dec
mov
xor
popa
ret
dec
imul
push
cmc
inc
int3
bound
adc
sarl
sub
or
xchg
lahf
sub
aaa
movsb
or
jb
stos
les
fisubs
add
rcll
pop
pop
ljmp
xor
pop
sbb
push
xchg
pop
sub
xor
push
loop
in
push
cmp
jmp
inc
add
das
xorl
and
es
nop
fbstp
xor
sbb
jecxz
repnz
es
cmp
pop
and
rorb
ja
mov
scas
sub
gs
add
cmp
stos
xchg
or
cmp
outsl
push
sbb
mov
lds
ja
std
imul
test
dec
jl
sbb
sbb
mov
pop
popf
ss
es
push
jmp
mov
ljmp
in
dec
ret
and
enterw
test
or
pop
or
repz
adc
jg
enter
pop
pop
aaa
sub
mov
ds
push
xlat
dec
out
dec
popa
dec
mov
movsl
test
imul
lea
xchg
adc
mov
out
add
outsl
sbb
popa
push
mov
fisttpll
and
aaa
bound
vrcpss
jmp
arpl
cld
std
pusha
mov
in
negb
ret
push
stos
pop
in
and
movsb
sbb
inc
ds
js
arpl
les
lret
xchg
stos
jmp
icebp
jo
sub
adc
push
shl
adc
cmp
jl
cmp
rolb
inc
out
test
cld
dec
inc
inc
movsl
adc
xchg
nop
jp
add
ficoms
paddusb
cmp
pop
push
andb
adc
jecxz
cltd
xchg
xlat
gs
and
cmpsl
mov
psllw
jae
push
add
orl
lea
xchg
iret
ret
jno
sbb
loop
pop
fdivr
sub
pop
out
lods
imul
cltd
jb
jo
mov
lock
dec
in
in
cmpsl
pop
xchg
mov
adc
rolb
icebp
sbbb
jne
je
fiadds
push
nop
shlb
push
in
popa
mov
fistpl
pop
test
jno
les
sarb
mov
cmp
push
dec
js
sbb
add
repz
sub
movsl
sub
ja
loope
iret
popf
cs
mov
inc
add
sbb
ficomps
cwtl
mov
enter
pop
bound
push
dec
cmp
xor
xchg
sbb
add
aad
xor
repz
mov
jbe
fwait
and
push
ss
sub
insb
sub
adc
jne
mov
cltd
popa
jb
or
add
mov
sti
aad
add
inc
ss
push
cmc
dec
cs
arpl
mov
fldenv
stos
jge
fstpt
pop
xor
adc
repnz
aas
pop
jmp
mov
inc
cmc
cmpsl
mov
out
les
rcll
inc
push
push
mov
enter
shr
inc
or
call
lcall
ret
mov
cmp
loopne
mov
adc
xchg
stc
sub
insb
mov
cmpsb
cmpb
movsl
movlps
push
adc
aas
repz
aaa
or
out
shlb
mov
fsts
out
jno
or
pop
pushf
mov
mov
push
xor
stos
test
out
outsb
push
movsl
cmpsb
rcl
push
adc
and
add
out
int3
in
aad
mov
or
in
sub
fstps
lods
int3
into
lahf
pop
pop
fst
cmp
cltd
scas
aam
jne
mov
nop
pop
fmuls
sub
shlb
mov
and
jo
stos
push
sub
cmpsb
insb
int3
xor
add
rcrl
sbb
xor
nop
in
jno
test
push
testb
sub
pop
stos
sub
push
jp
test
pop
cli
jae
pop
pop
push
cmp
out
xchg
orb
pop
cmp
xchg
sar
cli
push
xchg
add
push
lret
cmp
cmp
sub
jge
dec
or
scas
cmpsb
stc
in
adc
xchg
adc
fcompl
cmp
xchg
testb
inc
lcall
dec
push
fdivrs
sbbb
rcll
jae
int3
fsubrs
cwtl
xchg
imul
add
jmp
push
lods
loope
mov
imul
sbb
xchg
test
xlat
lret
add
xchg
testl
ret
xchg
xor
push
add
mov
scas
rclb
or
not
out
sub
mov
sbb
lret
mov
jg
aam
pop
and
inc
jp
repz
imul
or
sbbb
push
xchg
xchg
adc
add
aad
pop
call
fwait
jno
mov
ret
cmc
inc
mov
push
fld
dec
xchg
shll
pushf
cwtl
int
les
add
pop
dec
add
lea
pushl
fistpll
mov
movzbl
mov
xchg
and
push
mov
pop
pop
push
sub
mov
jno
xchg
test
or
mov
outsb
pop
enter
mov
dec
sub
dec
xchg
int
cmpsb
ret
clc
push
sbb
jl
inc
xor
push
adc
sbb
mov
fs
or
dec
dec
std
xlat
xor
imul
lock
add
test
adc
cmp
and
pop
sub
xchg
sti
jns
cmp
lret
in
insl
addr16
mov
or
mov
arpl
xor
and
push
inc
mov
pop
cmp
hlt
das
int3
jmp
in
sbb
mov
xor
cltd
test
inc
xchg
inc
xor
xchg
push
pop
and
leave
out
clc
in
sbb
cmp
jne
mov
scas
add
loope
dec
mov
pop
push
lods
sub
mov
mov
jno
push
cld
int3
popf
lea
mov
push
mov
adc
push
arpl
or
push
adc
test
enter
sbb
cmpsb
rclb
mov
and
scas
xchg
daa
stos
popf
xor
mov
popa
mov
outsl
andb
dec
pop
mov
mov
dec
sahf
std
pop
mov
adcl
dec
out
loop
add
lret
pop
push
push
lods
mov
or
sub
xor
xor
mov
mov
inc
push
subb
mov
cmpsb
adc
push
notl
dec
pop
pusha
rorl
cltd
inc
push
mov
mov
int
jmp
sbbb
or
in
aam
sahf
outsl
inc
lahf
mov
fcoml
jno
sbb
out
ss
sbb
push
stos
sub
cmpl
jo
lret
out
cmp
mov
inc
mov
mov
rcll
xchg
xchg
mov
repz
stos
clc
fincstp
and
repnz
xor
mov
daa
sbb
iret
sbb
lea
lods
in
cmc
ja
shr
out
fisubrl
in
arpl
cmp
rcrl
sub
cmp
pop
xchg
jecxz
adc
push
test
sbb
shr
iret
add
insb
inc
mov
cmpsl
mov
pop
daa
test
rorb
loope
jp
out
cmp
hlt
mov
mov
jno
inc
jno
out
and
push
rorb
fistpl
and
push
in
test
cmovbe
lea
jb
das
inc
adc
dec
sbb
out
insb
out
lcall
das
jo
inc
and
or
leave
mov
cmc
xchg
cmpsb
lahf
sti
movsb
or
rorl
inc
clc
sub
inc
fstpl
inc
add
pop
or
xor
sbb
push
inc
push
std
call
and
and
jae
sahf
loope
inc
data16
pusha
inc
cli
negl
testl
sti
sbb
fidivrl
fdivl
jmp
jae
inc
lock
cmp
scas
adc
insl
mov
fildl
ret
fs
xor
adc
xchg
ljmp
mov
insb
inc
sbb
sub
push
flds
into
int
jecxz
out
push
inc
push
xlat
sbb
fcoms
and
and
sbb
xchg
fwait
mov
mov
out
add
mov
in
push
dec
inc
test
aas
mov
add
and
insl
repz
push
std
lea
sbb
dec
dec
test
pop
push
xor
scas
sbb
sub
mov
xchg
fimull
cmp
jle
sub
jle
inc
add
and
in
rcr
xchg
adc
cmp
sub
adc
into
fimull
das
xchg
sbb
push
sbb
addl
adc
cli
push
jno
lock
cmp
je
and
icebp
ljmp
into
inc
iret
pop
mov
out
push
or
cmp
mov
adc
dec
or
xlat
jge
ret
imul
sbb
jo
popf
jmp
ja
xor
loop
dec
xchg
popa
push
push
inc
mov
loop
cld
cmp
dec
nop
lea
dec
ror
leave
or
pop
jnp
insl
mov
cmpl
adc
movsb
xor
push
in
jbe
hlt
sub
or
pop
mov
mov
and
daa
mov
add
shrl
mov
cmp
aaa
ds
mov
xor
or
mov
sbb
addr16
mov
inc
push
data16
pop
cltd
inc
sub
sar
iret
push
mulb
push
fwait
cmovs
add
pop
out
jbe
sbb
lea
ljmp
addr16
cmp
subb
repz
loope
andl
movsl
sahf
jmp
pop
mov
mov
sbb
rol
adc
and
call
dec
inc
dec
movsl
mov
pop
jbe
nop
or
cmpsb
test
int
shll
js
mov
hlt
mov
xchg
xchg
xor
push
scas
mov
not
or
and
out
mov
xchg
adc
pop
cmc
push
imul
imul
imul
cmp
lret
pop
inc
xchg
adc
jmp
mov
inc
sub
jge
lar
test
neg
addr16
inc
fstl
sbb
bound
cmpsl
les
shll
or
cmpb
xchg
cmp
mov
push
adc
outsl
mov
mov
setle
push
aaa
sbb
mov
imul
adc
jg
lret
mov
icebp
xchg
cmp
shl
gs
xchg
jmp
int3
inc
shll
in
push
imul
mov
xlat
push
shl
mov
popf
insb
insl
and
mulb
fnstsw
mov
mov
xor
jge
test
jp
mov
int3
pop
cmp
cmpsb
add
lods
xor
jns
adc
inc
push
aas
lods
clc
addr16
outsb
punpckldq
or
cmpb
adc
enter
in
jbe
sbb
sub
sub
and
lea
insl
sub
enter
push
ss
mov
mov
xchg
pop
into
arpl
sub
shll
dec
push
xorl
in
jnp
pop
in
es
jge
and
or
stos
in
mov
sbb
lods
ret
sbbb
mov
jno
jbe
add
or
lock
or
daa
mov
test
incb
insl
jg
jecxz
xor
loope
sti
mov
cmc
push
or
nop
test
iret
sbb
fnsave
cmp
pop
adc
jb
cmpsb
jne
sub
lret
stc
push
andl
stos
sbb
fiaddl
mov
mov
je
aaa
mov
movsl
push
cli
sahf
jmp
stos
das
or
pop
adc
cld
and
xchg
mov
jl
push
out
test
and
add
adc
push
rcrl
adc
out
test
mov
pushf
and
and
sub
xchg
test
mov
ret
enter
cmp
lock
add
xchg
addb
inc
pop
std
out
cmp
mov
rcr
fcomi
iret
outsl
leave
les
and
idiv
dec
xchg
in
out
out
mov
mov
dec
push
xchg
mov
jge
mov
dec
fwait
dec
and
out
mov
hlt
push
and
dec
inc
or
mov
out
mov
ss
ficomps
call
xchg
adc
mov
sbb
je
sub
add
dec
ljmp
aad
int3
clc
mov
mov
dec
rolb
scas
in
test
aas
cmp
pop
loopne
sub
pop
outsl
mov
rclb
push
jae
dec
out
dec
iret
repz
scas
push
in
fdivs
aam
inc
lock
mov
sbb
add
cld
cs
or
fiaddl
fwait
daa
push
mov
lahf
jbe
icebp
jecxz
xchg
imul
cltd
sahf
mov
adcl
icebp
sbb
test
lret
pop
mov
leave
xchg
std
es
pop
jl
test
inc
mov
inc
loope
or
push
movsb
fsubrs
cmp
mov
ja
adcl
xchg
mov
fldcw
in
jmp
inc
dec
idivb
sbb
dec
ss
push
insb
cmp
jae
fldl
inc
pop
fistl
and
iret
stc
ds
jae
ss
sahf
cmp
or
int3
xchg
popa
xchg
or
mov
imulb
es
loopne
icebp
fdivs
cld
adc
sub
enter
jbe
fwait
add
lock
hlt
jno
push
es
sub
adc
inc
mov
inc
shll
fs
xchg
and
mov
dec
sar
fnstenv
js
or
or
popf
mov
sub
fs
xchg
jbe
jbe
sbb
orb
push
cvttps2pi
and
mov
inc
push
inc
sbb
and
cmpsl
in
pop
sbb
lds
sbb
ret
dec
movsl
mov
repnz
mov
stos
jo
in
sbb
jae
scas
cmp
mov
cmp
mov
inc
in
and
shl
mov
dec
in
rol
mov
popa
add
movsl
xchg
fdivs
mov
call
pop
jns
push
cmp
nop
cmp
addr16
in
fldt
xchg
mov
mov
icebp
out
mov
inc
add
in
sahf
push
sub
push
inc
in
int3
jecxz
and
adc
aaa
lret
stos
or
stos
and
insl
lods
lret
les
popl
mov
movsl
or
imul
jmp
arpl
inc
std
call
test
mov
or
add
fbld
mov
dec
fsubrl
loopne
fs
xchg
stc
es
sub
mov
jbe
sahf
cmp
cltd
adc
mov
inc
lea
daa
push
cmp
ficomps
inc
mov
pop
movsl
unpckhps
sub
mov
testl
mov
jae
jmp
daa
dec
out
sbb
mov
imul
xchg
stos
add
ret
in
inc
pop
outsl
mov
push
ds
mov
mov
lods
shlb
es
push
cmpsb
ds
nop
or
xor
pop
cmc
jbe
adcb
push
loopne
sbb
nop
in
push
dec
imul
lcall
loope
adc
pop
jns
mov
xchg
sub
popa
decb
adc
xchg
stc
fxrstor
aas
movsb
mov
push
pop
ja
push
cltd
jge
roll
fcomps
mov
jae
loop
or
adc
jge
shlb
aad
add
iret
daa
lods
inc
or
mov
push
mov
add
test
in
xor
mov
adc
xchg
push
adc
lahf
fldenv
std
pop
sbb
lods
jae
fisttpll
and
mov
mov
scas
jnp
and
sub
dec
loop
and
mov
sub
and
jp
rcrb
loopne
adc
jge
out
sub
inc
lds
xor
repz
js
cmp
les
adc
xor
lcall
push
loopne
sar
push
and
or
dec
movl
jno
sti
rcll
jp
fnstenv
mov
jp
mov
mov
mov
jns
inc
sub
out
repz
lea
pop
push
mov
popa
cli
xor
pop
fcoms
mov
bound
xchg
pop
mov
or
js
inc
pop
bound
or
data16
cld
ds
sub
mov
jg
cmp
je
xchg
les
out
int3
inc
lahf
pop
adc
sbb
mov
inc
out
les
cmp
loope
sahf
test
or
test
insl
xchg
int3
and
divb
testb
jae
sub
stos
dec
aaa
mov
lea
mov
test
push
push
dec
mov
pop
jecxz
jae
pop
popl
mov
hlt
ret
inc
cmc
leave
mov
in
inc
cmpsl
lods
mov
xchg
fwait
jmp
fimull
dec
or
adc
pop
add
data16
aam
mov
dec
lock
cli
mull
pop
sahf
cmp
xor
or
and
xchg
leave
in
pushf
mov
xor
hlt
insb
add
adc
adc
loope
lods
cmp
jl
mov
lds
mov
addr16
mov
pop
das
pop
jae
and
enter
cltd
xchg
inc
inc
sub
jg
jnp
push
sub
dec
push
stos
repnz
leave
xchg
sbb
jb
sbb
repnz
inc
test
lods
lds
nop
mov
es
and
mov
loop
sbb
imul
mov
inc
jg
pop
sbb
sub
xor
xor
pop
popa
mov
mov
addr16
cltd
inc
push
repz
cmpsl
xchg
pushf
cmp
jbe
inc
out
xchg
imul
xor
or
fdiv
mov
fisttps
sub
lahf
jg
stos
out
jge
lods
cmp
pand
push
adc
dec
push
out
mov
in
rcll
mov
push
adc
add
jecxz
enter
test
mov
lods
jo
lret
test
sub
std
aad
pop
sub
push
fwait
xor
xchg
push
ficoml
jns
mov
jg
inc
outsl
addr16
mov
lret
sub
push
sbb
jns
pop
leave
mov
test
hlt
jmp
movsb
jecxz
jl
out
movsl
mov
adc
add
mov
rcrb
iret
add
sbb
aad
sbb
or
sbb
stos
data16
lret
loope
push
inc
jns
sbb
jp
daa
aas
sbb
daa
cli
jnp
stc
ss
jns
pop
or
icebp
inc
jb
xchg
push
in
push
fcoml
insl
lcall
add
push
nop
aad
sub
mov
push
lods
adc
jno
mov
in
gs
sbb
mov
or
sub
movsb
std
lock
outsl
pop
pop
xchg
jae,pt
popl
sbb
mov
gs
rcr
bnd
mov
jge
fs
jbe
cltd
lea
shrl
aas
jno
mov
lds
insb
inc
or
aam
in
out
xor
push
xchg
mov
mov
xor
aad
jmp
adc
push
jge
xlat
test
push
jg
xchg
sbb
aas
inc
inc
mov
popf
jle
mov
icebp
cmpsl
and
inc
mov
cmp
xchg
and
sbb
in
push
jmp
dec
jnp
dec
jp
outsl
mov
mov
mov
leave
push
inc
xlat
add
sub
push
sbb
in
movsb
sub
daa
addr16
jl
shlb
stc
movb
sub
stos
arpl
and
out
jnp
pop
mov
fistpll
cld
inc
and
dec
pushf
inc
mov
dec
mull
xor
les
cmc
int3
or
enter
lods
jle
int3
or
bound
dec
add
arpl
jb
gs
xor
lock
jne
push
enter
clc
pop
popf
adc
icebp
xchg
popa
test
push
dec
fsubrs
imul
in
shlb
pop
loop
mov
xor
lods
out
xor
cld
adc
gs
sub
dec
xlat
pop
sti
push
sub
ljmp
mov
loope
push
push
xchg
lods
pop
sti
into
orl
jge
sub
push
popl
lds
fbstp
mov
push
jl
push
and
mov
cli
sub
imul
aas
hlt
insb
popf
cwtl
push
cmpsl
gs
out
fbstp
xchg
sbb
icebp
mov
xchg
out
stos
jo
mov
dec
add
sbbl
inc
nop
jge
cmp
jle
das
mov
push
sbb
mov
sub
cmc
mov
out
sbb
cltd
push
movsb
pop
pop
adc
enter
js
xor
repz
lods
jge
dec
loop
mov
imul
int3
ds
test
cmp
sahf
outsl
int3
jg
or
inc
inc
in
sbb
popa
jge
xchg
inc
inc
lds
out
out
mov
test
and
and
cmp
sbb
jns
out
mov
les
mov
and
pop
sti
jmp
sti
data16
xchg
push
das
sbb
jns
push
push
dec
push
fstps
addr16
dec
sti
or
leave
in
out
pop
mov
aad
insb
sub
mov
inc
dec
xor
mov
fucomip
jge
jmp
stos
push
outsl
mov
jns
pop
fistpll
dec
fwait
pushf
inc
mov
enter
dec
hlt
pop
dec
and
and
add
push
pop
xchg
int3
mov
mov
xlat
mov
shlb
or
popf
call
fdivrs
movsl
scas
nop
push
xlat
aas
nop
dec
mul
test
jns
push
mov
gs
mov
inc
inc
push
incl
into
inc
aaa
add
push
adc
sahf
pop
hlt
cmp
in
cwtl
dec
mov
mov
push
lods
jns
or
fbstp
pop
inc
pop
cmpsb
jno
es
sub
rol
xor
and
test
adc
in
jns
popa
sub
or
mov
mov
mov
shl
rclb
popf
dec
sub
xlat
out
scas
hlt
jmp
jb
sahf
mov
lods
enter
mov
int3
out
mov
mov
out
xor
outsl
cmp
dec
test
insb
add
inc
outsb
dec
sahf
insb
adc
jmp
dec
imul
popa
mov
bndstx
cmp
inc
ja
mov
sahf
fs
push
xchg
popa
mov
lods
push
testl
addr16
cmp
xorb
cmp
imul
addb
lock
sbb
mov
add
leave
iret
int
scas
jmp
dec
stos
scas
xlat
fnstenv
jp
icebp
mov
rclb
popa
add
cmp
and
mov
push
dec
movsl
pop
adc
xchg
das
and
gs
ss
jmp
nop
das
leave
pop
stos
ds
sub
les
inc
adc
insl
nop
loop
call
lods
movsb
mov
jo
mov
jmp
lock
inc
mov
jg
pop
or
cmpsb
aaa
cmp
jns
pusha
inc
mov
cmp
incl
xor
or
mov
aad
loop
cmp
jo
jp
test
jns
mov
xor
mov
pop
mov
cwtl
xor
push
xor
ss
mov
out
adc
xor
clc
inc
cmpsl
arpl
outsb
dec
mov
div
nop
push
jae
push
repnz
jp
cmp
mov
outsl
ss
push
in
mov
hlt
mov
in
xor
pop
les
sbbl
out
enter
xchg
xchg
add
sub
pop
mov
popa
add
push
sti
mov
ljmp
and
movb
out
negb
pop
mov
test
dec
dec
and
lahf
and
xchg
fsubs
xchg
jae
push
mov
dec
lock
out
inc
dec
sti
pusha
push
fwait
scas
aad
test
fwait
out
lods
dec
sti
int3
jae
mov
je
sbb
inc
pop
test
dec
or
adc
push
es
xor
clc
aas
cs
jmp
fcmovb
lock
sbb
cwtl
jp
test
addb
jbe
dec
mov
cmp
cmp
movsl
fstpt
out
pop
int
imul
inc
sbb
jne
dec
popfw
xchg
add
push
bound
sub
call
inc
lea
out
idivb
movsb
pop
pushf
xlat
jbe
test
and
push
inc
pop
add
cmp
je
adcb
inc
mov
pop
add
and
jmp
ss
loopne
into
and
jecxz
fiadds
lock
push
insl
adc
mov
lcall
inc
stos
jns
jmp
pop
mov
adc
aad
stc
pop
mov
in
mov
dec
dec
dec
adc
mov
inc
or
add
adcl
loopne
cwtl
arpl
int
jle
int3
inc
jle
add
jl
inc
stos
adc
cld
sub
outsb
rolb
hlt
test
add
les
sub
cmpl
std
mov
out
xlat
in
push
dec
pop
mov
xlat
rcl
into
push
mov
jnp
test
mov
lea
scas
fists
lds
jbe
fildll
inc
or
and
fmuls
mov
ds
jmp
inc
js
shrb
xlat
in
add
fwait
std
or
mov
add
aas
pop
mov
cmp
adc
and
emms
push
mov
mov
xor
fwait
iret
xchg
xchg
or
jb
jbe
xchg
in
jle
and
lods
push
or
add
jb
dec
pop
adc
dec
mov
jno
mov
lea
jle
pop
push
out
cwtl
cmp
pop
mov
test
in
ret
dec
inc
add
cltd
xor
loopne
dec
pop
mov
js
sub
je
iret
sbb
rorl
or
movsb
faddp
les
jp
fs
mov
in
xchg
mov
jge
and
sbbb
imul
in
mov
inc
jnp
sub
cltd
lcall
pushf
sbb
mov
in
sbb
aaa
adc
loopne
inc
enter
shl
xor
stc
jge
js
inc
insb
jo
mov
jo
fwait
test
hlt
ljmp
nop
pop
int
mov
push
into
fldl
and
mov
jnp
sbb
sbb
arpl
pop
adc
pop
push
mov
sbb
movsb
xchg
lahf
xor
sbb
mov
nop
jb
cmpsb
pop
dec
lahf
pop
addb
ds
jg
cltd
lods
or
jmp
cmp
hlt
mov
out
mov
push
jb
stc
fdivl
je
gs
pop
cli
rorl
stos
dec
pop
sub
cli
mov
repz
aad
cli
ret
xchg
mov
repnz
and
aas
rorb
cmc
sti
mov
xor
daa
mov
mov
push
pop
bound
rcrl
or
mov
or
or
mov
out
dec
cmpsl
pop
scas
xor
addr16
jp
and
iret
pop
add
fsubr
arpl
and
repz
sub
clc
sbb
jmp
and
stos
fistpll
lds
fcmovbe
idivb
sub
subb
mov
xor
scas
mov
pop
push
jo
in
into
nop
jnp
lea
mov
or
rorl
pop
scas
or
jg
clc
push
pop
mov
cmp
idiv
mov
shl
add
mov
ljmp
mov
out
div
adc
inc
mov
mov
mov
add
imul
adc
mov
cltd
daa
xchg
ss
push
stc
call
sbb
repnz
std
pop
aad
stc
lret
leave
mov
jnp
pop
adc
push
dec
mov
cli
lea
cmpsb
inc
out
jmp
and
scas
xchg
in
mov
cwtl
loop
ljmp
dec
into
outsl
sbb
loope
push
xchg
das
mov
movd
gs
lcall
or
cmp
sti
inc
or
inc
pop
popf
imul
fistps
mov
jno
or
loopne
push
mov
dec
ror
popf
add
loopne
add
pop
add
mov
iret
xchg
add
mov
leave
aam
mov
loope
xchg
lahf
sahf
lods
mov
push
mov
jae
mov
and
dec
mov
or
jp
add
adc
mov
loop
iret
mov
xchg
xchg
out
xchg
es
mov
inc
push
mov
mov
popl
test
jmp
cmp
inc
leave
les
pop
js
inc
aaa
clc
jecxz
mov
and
jle
mov
mov
mov
xor
xor
lret
mov
in
dec
ja
add
jg
aad
pop
mov
or
sbb
pusha
xor
cmp
mov
mov
js
dec
lds
call
loopne
and
in
out
mov
mov
push
test
lock
sbb
cmp
push
push
popl
xor
pop
pop
loope
adc
mov
mov
imul
sbb
and
mov
adc
mov
jle
push
and
call
push
stos
mov
inc
cmpsb
jle
popa
jnp
mov
mov
incb
insl
and
mov
adc
jmp
ret
fiadds
sbb
in
mov
ret
sbb
loopne
xchg
int
addl
idiv
cwtl
adc
insl
mov
push
push
push
sbbb
adc
gs
fs
xor
xchg
cli
pop
fldl
jbe
add
mov
ljmp
int3
jae
pushf
mov
sbb
out
jnp
mov
pusha
addb
sbb
fstps
out
cmpsl
loopne
shr
adc
inc
scas
rorb
out
cmpsl
adc
xorl
hlt
jo
scas
cli
dec
cltd
add
add
adc
in
fldl
jb
aad
shlb
movsb
xchg
imul
ja
mov
sub
jge
xorb
push
dec
jmp
adc
adc
or
push
mov
mov
add
aas
shrl
out
cmp
out
sbb
jne
adc
adc
dec
inc
pop
jne
dec
cmpb
lcall
jl
scas
clc
iret
in
inc
add
push
ss
shld
adc
fistl
or
mov
pop
cmc
aad
xchg
idivl
jnp
stos
aad
dec
daa
adcb
sbb
inc
in
or
or
les
scas
lret
mov
jne
jb
xchg
push
int
es
fisubrs
rcrb
adc
cwtl
gs
xchg
pop
mov
add
add
aam
mov
dec
subb
push
mov
adc
push
adc
mov
pop
mov
mov
outsb
sub
das
sbb
mov
int
pusha
fistpl
mov
mov
fnstcw
ret
cmp
sub
xor
xchg
dec
ja
addr16
pop
sbb
popa
add
mov
push
dec
outsl
pcmpgtw
lods
ret
pop
test
and
mov
mov
add
pop
jns
ja
jb
mov
pop
xor
mov
pop
or
sub
cmp
pop
adc
addr16
loopne
aad
dec
out
cmp
ret
inc
lea
aam
fdivs
add
push
in
add
sbb
sbbb
outsw
pop
jg
mov
rolb
mov
mov
jmp
sub
aam
mov
adc
ljmp
lock
cld
cltd
pushf
mov
sbb
and
lods
xchg
push
fiaddl
lods
cwtl
ret
nop
adc
or
inc
dec
adc
pop
xchg
ffree
xchg
adc
pop
call
ret
out
or
fdivrs
mov
dec
std
inc
pop
inc
iret
fabs
push
imul
movsb
mov
push
adc
and
dec
popa
stos
pop
sbb
shlb
stos
in
aas
cmpsl
hlt
push
fists
and
or
jae
xchg
xor
push
pop
push
sarl
loopne
cmp
stos
adcb
shl
push
push
je
inc
sbb
inc
scas
dec
xchg
fsubrl
add
cld
jno
test
cwtl
fcoms
fmull
sbb
lahf
jne
andl
xor
aad
and
or
jle
push
mov
mov
lods
cmovnp
pop
mov
mov
push
ds
ja
test
mov
cmp
dec
lods
rorl
pop
aas
scas
or
adc
lret
enter
pop
leave
and
subb
imul
push
pop
push
fs
mov
vpsubq
lods
in
sti
sub
test
or
andb
pop
adc
in
mov
pop
test
xchg
cmp
xor
push
push
clc
pop
inc
roll
call
xchg
sbb
mov
popf
pop
lods
and
pop
scas
pop
dec
bound
loope
out
mov
sbb
sbb
dec
push
stos
push
push
pusha
inc
bound
dec
aaa
adc
sahf
inc
fcmovnb
sbb
dec
xchg
aaa
shll
dec
scas
and
push
test
ror
daa
stos
adc
mov
add
fisttpll
push
sbb
sarl
icebp
sub
jns
sbb
out
pop
in
adc
repnz
mov
inc
mov
out
pop
mov
dec
stos
rcl
push
fwait
int3
fcoms
and
mov
lcall
push
add
insb
pop
mov
and
cld
aad
mov
sub
mov
cmp
rcrb
test
popa
insl
cli
into
std
xor
call
adc
push
mov
sub
adc
push
outsb
mov
jle
fdivl
cmpb
insl
xchg
mov
test
aaa
stos
aad
stos
notb
jo
loop
leave
clc
jl
insl
sbb
mov
jbe
jl
pop
push
or
and
sbb
jno
mov
xor
cwtl
xchg
lods
pop
adc
sahf
jne
sbb
push
in
pop
lret
hlt
movd
fisubl
dec
divl
mov
sbb
pop
bnd
test
jge
sbb
sub
xor
out
sub
jecxz
repz
sti
lcall
xchg
adc
in
and
push
js
pop
inc
fildl
leave
and
xchg
es
push
inc
cmpl
dec
push
lret
dec
cli
or
mov
shrl
push
repz
xor
int3
adc
jns
cmp
mov
fucomp
scas
aad
sahf
ja
jle
test
in
sub
xchg
inc
or
inc
loope
test
jp
cmc
xchg
adc
push
jp
and
jmp
mov
js
loopne
les
sbb
daa
sbb
in
pop
or
xor
xchg
scas
fs
icebp
adc
in
and
cwtl
pop
mov
testb
jge
jle
sub
xchg
pop
xorb
lods
and
enter
push
cs
push
jl
mov
mov
mov
jp
ficomps
pop
push
mov
sub
test
hlt
add
adc
iret
popf
xchg
cmp
sbbb
adc
mov
jno
movsl
mov
xchg
out
cmpsb
push
cs
jnp
stc
nop
nop
daa
cmp
mov
fsubs
xor
and
sub
push
arpl
sub
xor
lods
jecxz
pushf
rolb
ret
inc
pop
sbb
iret
repnz
rorb
mov
xchg
pop
adc
and
inc
cmp
popf
add
lcall
arpl
cmp
dec
dec
mov
jb
iret
jmp
std
cld
imul
add
xor
nop
cwtl
and
cmp
or
mov
push
fcmovne
pcmpgtb
lods
ret
dec
fisubrs
pushf
jnp
cltd
cmp
out
jmp
lahf
pop
fildll
lret
jns
push
jp
mov
arpl
arpl
enter
nop
xor
inc
and
and
jp
xor
jo
push
lock
or
sub
xor
adc
pop
cmp
sbb
inc
adc
lods
jp
pop
bound
jmp
pushl
in
mov
mov
sbb
shll
inc
dec
aam
mov
jl
cs
cmpsb
xor
out
push
das
mov
fldenv
mov
push
mov
inc
jnp
rolb
in
test
ret
idivb
idivb
cmp
rcpps
pop
cmc
je
xor
sarb
mov
popf
mov
jns
insb
xchg
cmc
mov
lds
test
mov
push
pop
push
inc
dec
cmp
shl
stos
inc
mov
hlt
pop
push
cmp
stos
mov
cld
scas
leave
out
lret
loopne
repnz
xchg
mov
mov
gs
push
orl
and
jmp
jmp
clc
test
out
cld
imul
mov
insl
pop
pop
addr16
jo
aam
clc
adc
cmp
into
fisubl
push
push
lods
cmpsb
add
sbb
mov
mov
xor
jp
mov
push
lea
mov
cmpsb
and
dec
ss
jmp
movsb
lds
push
jge
into
cmp
xchg
jae
jne
jge
jge
xchg
xor
das
test
mov
imul
xor
lock
and
and
push
ds
movswl
mov
lret
popa
std
adc
and
dec
xchg
shlb
fs
push
xchg
and
cmpl
mov
scas
fcmovnb
adc
ret
jge
insl
cmp
into
andb
jle
int3
mov
cmpl
inc
movsl
les
movsl
push
push
lahf
cmp
add
fldl
mov
pusha
fildll
and
pop
aad
mov
inc
pushw
adc
sub
jmp
cld
or
sub
cmp
xchg
push
incb
add
std
xchg
or
loop
jnp
and
mov
fwait
divl
movsb
pop
fmull
lods
xor
pop
sbb
pop
xchg
jmp
es
xchg
aad
push
jle
insl
fcmovnu
and
sub
inc
div
dec
in
sub
ds
icebp
sbb
out
cmp
test
push
sbb
fwait
adc
or
xor
lods
pop
pop
jo
cmc
rorb
or
cs
pop
mov
hlt
fsubs
leave
roll
loop
or
jns
jo
and
cld
and
mov
popa
insb
and
dec
js
shrb
nop
jle
pop
mov
or
popf
mov
mov
push
pop
lahf
cmp
test
adc
mov
inc
or
aaa
in
popf
enter
outsb
in
lret
pop
aaa
jb
inc
jo
sbb
ficoms
mov
shr
mov
push
jbe
mov
rcll
js
adc
pop
stos
pop
fisttpl
sarl
sub
mov
scas
xchg
enter
pop
ret
xchg
int
rolb
fisubrl
addr16
sti
in
jle
fisubrl
inc
pop
xor
mov
stos
push
jae
pop
insl
shlb
mov
sar
inc
outsl
fninit
xchg
adc
inc
mov
fdivrl
cmpsl
adc
push
pop
cmp
das
lahf
test
cmp
xor
aad
jge
add
cmpsl
dec
sub
jns
daa
push
nop
add
adc
mov
and
pop
fnsave
imul
mov
incl
movsb
fucomip
stos
mov
mov
pop
or
push
jo
inc
mov
cs
movsb
cmpsb
sbb
jns
dec
mov
mov
arpl
pushf
adc
and
lret
cmp
cmp
popa
scas
jnp
clc
jl
dec
lret
leave
push
xor
sbb
adc
jmp
mov
fbstp
icebp
arpl
cs
inc
movsl
or
push
sbb
inc
aad
out
mov
and
push
sub
in
stc
push
add
lods
fmuls
test
jge
adc
mov
sbb
mov
lods
inc
fmulp
jp
push
test
outsl
xchg
insb
xor
xchg
pop
loop
cmp
lahf
mov
xlat
inc
test
pop
inc
add
pop
sub
or
jae
scas
les
fistpll
push
mov
or
pop
int
fbstp
cmp
pop
sarb
pushf
imul
das
add
push
cmpl
sub
mov
dec
xchg
xor
push
fisubs
popa
sbb
ret
cmpsb
je
cmpsl
iret
mov
inc
loope
popf
mov
adc
or
mov
dec
je
xchg
mov
xchg
dec
je
movsl
or
push
add
push
push
in
in
add
push
or
or
sub
insl
jge
sub
or
rorb
lods
pushf
or
mov
ucomiss
iret
sub
add
adc
mov
push
outsb
mov
loope
pop
aaa
aas
hlt
imul
aam
inc
inc
or
mov
sub
cwtl
adc
shrb
pop
nop
xchg
les
sbb
movsb
in
insb
jae
and
loop
subl
mov
push
jne
repz
rclb
enter
or
add
js
aam
xchg
or
repnz
add
lds
jns
test
xchg
out
adc
jbe
push
xchg
dec
lea
add
dec
jae
pop
xor
cwtl
mov
jp
cltd
aaa
and
lods
dec
and
jns
lds
or
pop
jge
mov
adc
orb
cmp
insl
cmpl
cmc
inc
pop
mov
mov
adc
gs
loop
add
inc
dec
mov
int3
lods
adc
pop
test
test
in
in
into
or
xchg
push
sbbl
ss
xchg
lret
orb
cmpb
or
in
pop
push
and
in
iret
das
push
push
loopne
xor
out
outsb
push
mov
jo
jecxz
mov
add
push
inc
cmpsb
gs
sub
idivl
jge
lcall
lahf
xchg
aad
test
pop
clc
inc
mov
mov
cltd
ja
adc
xchg
push
iret
stc
es
ja
test
std
mov
subb
js
repz
mov
sbb
std
sbb
out
xor
lods
push
push
add
out
inc
roll
jmp
rolb
inc
xchg
pop
or
sbb
sbb
pop
or
sbb
popa
mov
movsb
repnz
sub
cmpsl
dec
cmp
adc
jg
and
arpl
push
or
fldl
pop
call
das
out
test
arpl
inc
and
mov
std
mov
mov
cltd
jnp
test
adc
xor
push
cld
into
xchg
add
std
fbld
dec
lock
ret
cld
dec
pushl
mov
rol
scas
loop
mov
xchg
cmpsb
pop
and
mov
stos
out
mov
hlt
popa
gs
mov
lahf
cld
cmpsb
jecxz
adc
add
lods
jecxz
fldcw
vhsubps
fsts
sahf
pusha
call
mov
jp
out
fcomps
push
add
outsb
push
test
mov
jmp
jb
mov
lods
pop
and
jae
out
mov
mov
jae
or
cmp
adc
popa
mov
jecxz
stos
inc
imul
call
ss
pop
in
rcr
lret
adc
scas
dec
xchg
push
cmp
aas
mov
out
xchg
sub
sbb
mov
jne
and
aas
and
adc
fwait
ret
mov
lods
cmp
mov
sub
inc
jg
imul
aad
mov
into
lahf
cmp
sbb
mov
test
popa
aaa
xchg
fsubl
sbb
ljmp
sub
sub
roll
mov
xor
iret
cmp
dec
adc
mov
mov
fs
bound
int
inc
outsl
pusha
lret
and
int3
enter
adc
pop
sub
lahf
in
dec
push
xchg
test
mov
add
insb
aas
mov
adc
popf
incb
mov
adc
jns
xor
ror
outsb
sbb
fists
out
adc
cs
cmp
mov
inc
xchg
repnz
notb
mov
mov
push
lea
mov
loopne
add
xor
and
pop
cwtl
adc
add
xor
outsb
xchg
imul
outsb
test
fwait
pop
aas
shlb
push
push
lcall
or
cmp
mov
pushf
cli
dec
mov
and
adc
or
scas
les
sbb
hlt
mov
shrb
pop
loopne
push
dec
xor
inc
xor
mov
push
pop
loope
nop
fs
jg
lcall
lret
jmp
mov
pop
dec
fisttps
lds
and
sub
mov
test
sbb
jge
cmpsl
test
rorl
and
jg
mov
xchg
in
jp
std
enter
pop
and
sbbl
fiaddl
rcrb
aad
leave
insl
test
jne
addb
sub
cli
pop
int
cld
jecxz
mov
mov
ja
cmp
mov
lods
ret
jle
fs
leave
loope
pop
cmc
mov
mov
rcrb
std
push
jne
lds
je
mov
loop
jnp
pop
mov
mov
stos
loope
add
and
test
xlat
push
xor
or
out
or
push
pop
incl
jle
outsl
imul
xor
movsb
jb
xchg
sub
mov
fisttps
cli
scas
clc
inc
dec
xchg
add
dec
lcall
and
fs
push
movsb
cmp
sub
sahf
mov
add
ficoml
push
pop
jne
sti
dec
push
je
iret
jl
iret
rcll
xchg
insl
mov
int3
xor
stc
push
outsl
inc
xchg
call
adc
out
xor
jbe
jg
add
fcompl
pushf
dec
loopne
out
sub
jmp
in
add
dec
mov
mov
inc
xchg
lea
add
or
call
add
ljmp
cmp
mov
and
or
inc
dec
inc
cmp
push
sbbb
hlt
aas
and
mov
repz
mov
cwtl
sbb
cmp
pop
pop
mov
out
inc
jbe
notb
push
sub
pop
cs
or
out
xchg
fstl
loope
testl
cmpsb
cmp
mov
shl
sbb
push
mov
cmp
lods
adcl
mov
and
out
imul
aaa
movsb
or
ljmp
mov
test
nop
pop
push
or
or
push
fcoml
xor
sub
mov
ja
out
and
scas
aad
imul
mov
aaa
out
enter
lret
lahf
lahf
xchg
inc
ds
mov
flds
xor
jb
cmp
jbe
sub
iret
push
mov
test
scas
fadd
fistpll
mov
cmp
lcall
lds
in
xlat
xor
out
aad
fistpll
std
mov
dec
mov
adc
scas
test
ljmp
cltd
jb
and
in
dec
xor
in
cmp
stos
adc
insb
mov
ficomps
dec
mov
pop
push
xbegin
or
push
mov
xchg
xchg
lea
outsl
imul
mov
and
sub
in
cmp
mov
mov
jmp
push
rorl
adc
mov
in
mov
rorb
stos
insl
mov
sti
das
leave
clc
mov
test
mov
cwtl
pop
les
or
mov
add
ds
test
in
jne
addr16
lcall
xchg
or
mov
mov
mov
test
or
pop
push
std
and
cmpsb
pop
movsl
add
je
jne
and
jne
subl
xor
cwtl
mov
adc
fsubrl
in
sub
js
ss
dec
aam
inc
xchg
xchg
cltd
int
loop
lret
inc
push
sbb
pop
jg
dec
adc
aaa
mov
xor
push
jg
lret
rcll
jle
or
test
jge
xchg
xor
cmp
inc
adc
or
adc
inc
mov
fidivs
xor
or
adc
adc
sti
test
pop
test
dec
in
mov
sahf
negl
xchg
xor
loope
negl
js
adc
add
icebp
pop
add
cmpsb
cld
cmp
inc
jo
mov
dec
mov
adc
push
or
inc
gs
xor
aad
mov
mov
mov
stc
data16
ds
adc
ja
fs
xchg
jb
movsb
sahf
and
pop
out
enter
dec
mov
adc
sbb
insb
push
icebp
or
dec
and
outsl
cmc
notl
cmpsl
push
pop
cwtl
mov
out
mov
adc
and
mov
cmp
in
inc
aad
mov
movsl
jnp
stos
adc
mov
adc
dec
dec
add
cmp
fs
clc
xor
mov
inc
mov
negb
leave
jb
mov
mov
pop
pop
and
push
imul
xor
jle,pn
inc
mov
push
ljmp
jg,pn
je
in
scas
dec
xor
mulb
xchg
adc
sbb
mov
or
xor
movsb
andl
shlb
lods
mov
popf
pop
jecxz
push
pop
int
pop
ret
daa
pop
or
fcom
leave
push
lret
inc
in
imul
pop
out
add
jns
mov
adc
sbb
push
shll
rorl
push
hlt
add
inc
jecxz
aam
sub
fwait
xorb
dec
ja
pop
push
lcall
je
jae
mov
inc
push
dec
test
jns
mov
clc
lcall
sbb
cmovp
push
push
cmpsl
into
dec
inc
mov
or
or
xchg
out
mov
jl
stos
pop
cmpsb
xor
add
je
mov
adc
and
loope
sbb
or
mov
popa
add
pop
divl
sub
aad
mov
xchg
xor
mov
mov
dec
mov
and
iret
mov
imull
cmpsb
ror
xchg
pop
mov
lret
jg
inc
andb
das
repnz
add
jbe
insl
stc
push
sti
rol
imul
in
inc
xor
aaa
add
ret
shr
jp
lds
push
mov
or
roll
dec
cmp
idivb
xor
pop
cmp
push
pop
aad
mov
and
pop
subl
iret
fdiv
and
ja
xor
popa
adc
fwait
pop
js
jb
movsl
icebp
repnz
ret
ljmp
jecxz
xchg
cmpsl
inc
mov
dec
xor
fiadds
cmp
out
ret
mov
xor
jbe
lods
cmpsl
lret
xchg
add
xchg
inc
mov
ja
gs
add
shl
or
xor
xor
adc
or
dec
mov
arpl
and
aas
je
xchg
mov
shr
inc
jo
and
daa
mov
popa
mov
mov
bsf
and
cli
adc
loop
adc
and
push
sar
ljmp
mov
jno
add
ret
ss
shrl
ret
mov
jmp
pop
cmpsl
icebp
xchg
xchg
sub
frstor
jge
inc
push
dec
cmp
call
movsb
mov
mov
or
in
sub
mov
mov
int
sub
data16
sub
jnp
push
imul
sub
push
cmp
shrl
popa
xchg
lods
fnstsw
insl
mov
or
xlat
ret
adc
inc
aam
stos
pushf
icebp
stos
inc
push
adc
xor
daa
mov
jp
mov
nop
xchg
cmp
xchg
out
stos
mov
xchg
push
xor
subl
mov
test
pop
push
nop
push
movsl
mov
adc
andl
dec
mov
xchg
test
pop
mov
mov
inc
mov
cwtl
sbb
jb
insl
divb
cmpsl
and
shlb
xor
inc
mov
dec
add
in
jecxz
sub
xor
gs
jge
negl
xor
ficoms
in
cmp
out
aam
popf
loop
roll
cmpsb
js
inc
adc
cmc
mov
fwait
cli
ds
icebp
or
insb
mov
int3
xor
imul
das
push
andb
int3
xor
cwtl
pop
daa
cli
fstps
ret
stc
and
mov
add
call
imul
lret
ror
ds
fcoml
imul
mov
cmp
and
lds
add
jb
testb
out
mov
add
shll
mov
add
pop
xchg
std
xchg
push
int3
cmp
lods
jne
dec
mov
inc
push
gs
sbb
scas
cmc
push
inc
jg
xchg
and
dec
mov
mov
push
push
clc
cmp
dec
push
scas
mov
addr16
das
ss
clc
cmp
or
insl
and
les
iret
mov
cs
pop
rclb
pusha
sti
negl
add
push
xlat
pop
pushf
inc
adc
cmp
call
shrb
sbb
jne
cmp
sub
into
mov
jmp
cmp
mov
fwait
stos
dec
or
xchg
jl
add
jnp
mov
shlb
testb
mov
mov
pop
das
pop
pushf
and
xlat
jg
mov
cli
ds
stos
sbb
mov
fcoml
shlb
into
xchg
adc
fcoms
cmp
pop
rolb
insl
and
sub
or
and
push
pop
cmp
fwait
test
arpl
test
test
cltd
ret
rol
dec
repz
or
loopne
aaa
pop
inc
jno
push
test
gs
mov
mov
mov
sbb
cmp
loop
aas
pop
fs
cmp
scas
add
dec
aas
fistpl
cmpsb
ds
aaa
in
sbb
or
sub
push
arpl
xchg
cmc
std
inc
pop
hlt
lcall
adc
repz
push
mov
outsl
sub
add
jo
mov
subl
std
dec
or
jl
pop
scas
outsb
xchg
push
mov
sbb
repz
jle
jb
xchg
inc
pop
mov
mov
andl
fnstcw
mov
mov
inc
pop
std
adc
addr16
fldcw
mov
gs
shll
jo
jbe
aaa
adc
les
loope
jbe
in
dec
add
mov
repnz
dec
cwtl
into
lret
outsb
cmpsl
arpl
stos
in
mov
mov
jl
mov
sarl
ret
sbb
clc
and
xchg
dec
js
add
push
mov
daa
test
lods
mov
sbb
xchg
xchg
stos
jecxz
dec
xchg
stos
icebp
popa
mov
xlat
xor
inc
loop
jecxz
in
or
jle
sub
mov
xchg
dec
lahf
jns
adc
sahf
bound
arpl
jo
test
dec
aad
jae
add
push
rorb
clc
leave
sarb
lds
nop
jns
xchg
inc
lret
int3
jno
vorpd
inc
mov
js
mov
jae
cmp
push
push
cmp
push
and
inc
push
jbe
jl
mov
xorb
adc
jle
push
xor
mov
push
and
orl
pop
inc
repz
jecxz
or
hlt
mov
xor
rep
cmpsl
lds
insb
outsb
dec
inc
sub
xor
stc
sbb
push
call
sarl
outsl
mov
or
jae
nop
bound
dec
test
cmp
xchg
xchg
notb
xor
cltd
jae
je
data16
add
fistpll
add
lcall
in
rclb
xor
dec
rolb
insb
pop
adc
xlat
ja
dec
inc
dec
adc
and
aas
pop
fistpl
jne
xor
adc
sbbb
std
stos
shrl
test
or
cmpsl
aam
pop
inc
paddusb
fildll
idivb
outsl
nop
nop
aaa
fs
dec
call
call
inc
shlb
cmp
mov
les
shlb
call
int3
lret
or
dec
cmpsb
sub
adc
clc
shr
xor
div
inc
out
adc
jbe
enter
pusha
call
pop
sub
pop
cmp
fcomp
sbb
ljmp
mov
shr
outsb
cmp
and
fdivs
rcll
out
dec
lret
aaa
daa
xor
cmp
pusha
movsb
add
xchg
sbb
jle
xlat
movsl
popf
divb
notl
fidivl
jnp
aas
push
insb
jnp
mov
idiv
vpshufhw
adc
test
ret
inc
push
iret
fwait
loop
leave
dec
mov
js
xchg
cmp
out
adc
inc
mov
je
in
push
loopne
or
popa
push
mov
test
lods
xchg
movsl
add
xor
mov
push
add
mov
mov
fistpll
test
std
leave
xlat
pop
mov
pop
mov
push
loop
popf
jp
ret
sub
sbb
aaa
mov
lret
add
aaa
int
lods
inc
jge
cmp
inc
stc
stos
xchg
outsl
sub
sbb
xlat
fwait
cmp
xor
lret
fmull
mov
loop
pushw
pushf
stc
loopne
lcall
and
pop
mov
fcmovnu
xchg
pop
jp
movsb
lret
xor
push
rclb
dec
fmull
xchg
andl
push
pop
push
loopne
lahf
movsb
fsubrl
and
mov
cmc
sub
add
sub
fidivl
test
adc
mov
ljmp
adc
dec
fsub
mov
or
xchg
add
ret
jae
sbb
mov
loop
es
idivl
ficompl
push
pop
data16
aad
popa
sbb
pop
xchg
xchg
sbb
cmp
test
out
add
negb
cmp
mov
lods
ss
lret
pop
mov
jg
das
jno
stc
lfs
xchg
stos
pop
pop
repnz
lret
data16
rorl
xchg
push
xor
scas
sub
add
lods
test
insb
mov
inc
lea
push
ret
xor
aaa
mov
pop
xchg
sub
dec
lret
push
sarl
dec
pop
sub
rcrl
int
test
sub
movsl
adc
pop
pop
mov
jge
mov
adc
lea
pop
paddb
adc
enter
leave
and
out
xor
cmp
aaa
div
js
shr
inc
add
xchg
adc
jno
sbb
cwtl
iret
dec
andw
fdivl
jo
cmc
jge
mov
jle
mov
ret
andl
jns
loopne
fnstsw
out
cmp
inc
rcrb
and
xchg
add
xor
ljmp
mov
aad
movsb
movsb
sbb
sbb
cli
adc
lahf
xchg
pushf
ret
rcll
push
prefetcht2
test
fld
je
or
inc
xchg
xor
cmp
std
ja
pop
psadbw
jo
push
ljmp
into
cld
filds
mov
sbb
pop
sbb
jo
adc
and
or
shrl
pop
addr16
push
call
xor
sub
mov
cmp
daa
pop
out
add
push
lret
iret
mov
mov
adc
das
sub
fucomi
lahf
je
and
ficoml
lret
cmp
xchg
jns
aam
push
sub
dec
and
das
sbb
mov
nop
out
idiv
mov
leave
test
mov
jp
rcrb
decl
cld
cmp
pushf
xchg
inc
jl
push
lock
xchg
sbb
cmp
ljmp
mov
popa
jge
cld
pop
std
leave
and
ficoms
ss
adc
adc
insb
out
jnp
jp
cmp
mov
hlt
adc
stos
aas
lret
in
sbb
cld
lret
mov
addl
rcl
cmp
call
push
sbb
xorb
les
jne
out
fisubrs
in
cltd
jg
sub
sub
inc
lds
ja
cmc
xchg
jg
mov
test
mov
test
lcall
or
lock
loop
push
sub
pop
pop
add
and
or
push
push
ljmp
lods
mov
shrw
inc
fidivrl
mov
cmp
and
xchg
sbb
call
shlb
mov
jmp
cltd
mov
shlb
daa
push
jo
int3
stos
mov
dec
mov
xorb
xchg
pusha
inc
mov
lods
dec
adcb
clc
sbb
jl
daa
imul
out
les
jg
fimuls
imul
aas
jae
push
sub
xchg
shrb
xchg
push
movl
xlat
fwait
inc
test
les
js
int
pop
repz
cwtl
addr16
out
push
push
sub
icebp
ss
mov
cli
pop
xlat
jb
lret
shrl
fsub
pop
jge
mov
jb
insl
cmp
fimuls
cmp
daa
adc
daa
not
ja
std
add
ret
xor
lahf
xor
jne
cmp
adc
sbb
test
xchg
inc
xchg
in
push
pop
push
cmp
add
sbb
add
inc
add
dec
test
cmc
lea
loope
std
ds
fwait
mov
sub
inc
hlt
nop
loope
out
push
mov
imul
repnz
mov
xchg
xchg
icebp
lods
xlat
jo
stos
sarl
xchg
loop
imull
cltd
std
add
xchg
filds
push
xchg
shrl
shrb
inc
imul
iret
ss
pop
and
sub
ljmp
sub
adc
cmc
popf
bnd
pop
jo
lds
add
jg
lds
repz
cmpl
rorl
sti
jno
mov
push
or
popa
push
enter
aad
adc
jl
pop
push
notl
fnclex
jnp
jne
mov
inc
xor
dec
adc
xor
into
pusha
push
mov
cmp
push
adc
aaa
or
int
faddl
jne
and
bswap
fstpt
orb
repz
jmp
ret
sbbb
popa
pop
es
mov
inc
sub
adc
sbb
add
call
push
out
rcll
arpl
pop
dec
ds
adc
mov
jnp
and
scas
xchg
sbb
xchg
das
mov
inc
inc
pop
mov
orl
push
sbb
push
and
adc
shlb
es
push
add
out
pop
cmp
cli
inc
mov
je
frstor
clc
adc
in
gs
sahf
shlb
cltd
pushf
addl
pop
push
hlt
aad
cmpb
inc
out
rcrb
fsubs
xchg
test
mov
mov
xchg
mov
xor
scas
adc
popf
mov
inc
and
sbb
push
sub
iret
mov
mov
aad
mov
incb
repz
dec
sub
xor
adcb
pop
sub
sti
addr16
mov
incl
scas
sub
lds
and
leave
dec
jb
lahf
addr16
mov
insb
xor
sarl
push
dec
movsl
mov
rcll
or
cmpsb
pop
nop
mov
orl
popa
and
iret
lahf
xchg
pop
adc
mov
repnz
or
mov
js
pop
aas
xor
adc
shrb
push
lcall
cmpl
hlt
ffreep
out
inc
push
shl
cmp
pop
mov
add
imul
or
sub
xor
inc
icebp
jl
hlt
xchg
loope
repnz
int3
add
push
pop
pop
sti
iret
repnz
sbb
dec
xchg
or
popa
cmp
dec
jbe
rclb
fwait
cmpsb
insb
cli
jecxz
cmp
fwait
fwait
add
sub
or
repz
cli
ret
fildll
xor
xor
mov
mov
mov
lock
xchg
js
fidivs
or
loop
es
stos
into
mov
mov
lahf
fistpll
push
xor
icebp
lods
sub
jmp
cmp
add
clc
xor
test
fisubrl
imul
push
lock
add
addb
aad
stos
rorb
pushf
mov
stc
jo
lret
jmp
dec
shl
mov
sub
dec
mov
out
stc
leave
mov
adc
sub
push
sarl
push
sub
mov
pushf
mov
mov
mov
cmp
xchg
lock
mov
cmp
lahf
jno
cwtl
mov
int
scas
sub
lea
dec
mov
mov
es
push
add
mov
add
inc
int
arpl
xchg
fs
xlat
shr
xchg
cli
in
mov
sarl
inc
popa
cmp
repnz
loopne
shrl
stos
cmpsb
ljmp
jnp
adc
in
cs
dec
pop
test
int
jbe
fstpt
ljmp
mov
mov
lret
leave
pop
sbb
xadd
adc
xchg
xor
or
cmc
jbe
dec
mov
jmp
push
jl
jo
js
xchg
adc
popa
dec
mov
adc
mov
xchg
xchg
in
rcll
mov
stc
lcall
call
pop
add
pop
pop
stos
mov
add
lds
pop
stos
jp
inc
pop
sbb
jae
sbbb
movsb
dec
and
push
fldl
in
mov
push
lock
dec
loopne
fwait
or
ss
inc
pushf
jp
push
imul
xchg
mov
repnz
or
test
fadds
das
xchg
or
add
test
inc
cmp
push
cmp
sbb
arpl
outsb
scas
nop
cmpsb
mov
fcom
lock
push
xor
sbb
inc
insl
sbbl
iret
adc
xor
xor
popa
add
sub
loop
rcl
test
adc
aas
sub
push
cmpb
movsl
jnp
push
inc
jne
dec
ja
add
sub
add
insl
je
js
jmp
int
aaa
std
in
add
cmp
sub
in
imul
sub
cld
mov
add
out
jnp
cmp
idiv
dec
jne
jmp
shrl
pop
xchg
pushf
add
mov
or
pop
add
ljmp
sbb
mov
dec
mov
js
lahf
and
push
clc
aas
js
dec
and
pop
clc
jo
popa
dec
scas
fstpl
mov
in
sbb
int
jns
sbb
xor
pop
push
or
add
xchg
xor
insb
sub
jae
dec
push
add
cmp
add
in
push
pop
mov
xlat
lock
xchg
push
shlb
lods
xchg
mov
sub
out
jg
or
imul
fmull
jle
and
fsubrp
divb
or
mov
pop
cmp
mov
test
sbbl
jno
sbb
xor
mov
sbb
adc
decl
iret
clc
jle
jg
jae
insl
ret
adc
sbb
or
lea
ret
mov
ret
loopne
mov
or
int3
je
add
cmp
sbb
pop
mov
jbe
adc
jae
int3
arpl
and
fwait
icebp
in
sub
or
pop
lods
ret
push
into
adc
std
sbb
push
mov
and
inc
nop
jg
stos
mov
imull
mov
jae
adc
dec
jne
xor
inc
xchg
adc
sbb
mov
dec
jae
pop
and
mov
fdivrs
jmp
mov
and
and
cmp
adc
loopne
and
outsb
mov
and
xor
xlat
loopne
add
sub
add
mov
clc
leave
jns
ret
std
jb
cwtl
lea
fstps
stos
cmp
mov
add
cmp
dec
insb
ja
mov
loopne
adc
and
xor
ret
dec
cltd
sarb
loope
sub
out
pop
cmc
dec
mov
adc
jecxz
mov
ffree
and
ficompl
sbb
and
or
in
add
mov
pushf
scas
mov
jo
insl
add
mov
cmp
add
inc
mov
mov
ljmp
pop
mov
lea
mov
and
xchg
addb
jo
ret
dec
arpl
call
push
hlt
pop
mov
pop
aaa
push
movsb
loop
cmp
shll
stos
mov
adc
jno
xor
aam
or
stc
sub
in
popa
test
lahf
ret
fsubs
push
pop
sarb
sub
fstpt
ds
xchg
mov
int
push
and
push
pusha
ss
daa
or
insl
dec
sbb
push
mov
loopne
cmp
test
enter
in
push
pop
dec
aam
inc
mov
aam
mov
es
cltd
xchg
mov
or
icebp
xchg
inc
pop
push
stc
test
mov
cmp
nop
dec
inc
inc
aad
cmp
jbe
jnp
shlb
pop
jle
mov
ljmp
mov
push
jo
push
xchg
mov
mov
andb
ljmp
cltd
pushf
jbe
repz
and
ljmp
aaa
std
inc
cli
loopne
adc
loopne
test
nop
lret
gs
in
xor
scas
aam
ja
loop
les
push
mov
cli
xchg
lret
movlps
cld
mov
push
data16
add
sbb
inc
out
sbb
dec
jae
dec
in
adc
dec
hlt
add
xchg
xlat
scas
icebp
jne
js
push
int
lods
cmp
mov
add
mov
xor
adc
and
jmp
das
ret
data16
ljmp
inc
movsl
jo
cwtl
push
popa
pop
mov
clc
mov
mov
xchg
mov
xor
xabort
jg
mov
xchg
insl
ljmp
push
cmpsl
aad
mov
iret
cltd
mov
cs
pop
jge
les
push
sbb
scas
mov
pop
iret
ljmp
rcrl
lock
xchg
sub
xchg
mov
jle
daa
adc
add
lds
add
sbb
std
and
push
dec
int3
xchg
mov
inc
jae
pop
mov
xchg
fimull
push
xorl
pusha
ret
dec
sbb
stc
push
xchg
ds
in
xchg
cltd
loope
std
mov
dec
rcl
lods
lods
ljmp
or
je
sub
ret
shl
and
mov
lcall
es
cld
jmp
stos
lds
mov
mov
adc
loope
test
inc
push
scas
lcall
aam
cmc
or
or
mov
outsb
sub
cmp
sub
iret
ret
mov
je
xchg
add
cmp
adc
mov
out
clc
xor
ljmp
loopne
iret
jl
cmp
pop
pop
pop
andl
insl
mov
adc
cs
and
and
ja
mov
outsl
xchg
push
xor
mov
inc
mov
push
loop
enter
or
and
xchg
test
xor
xchg
insb
xchg
lret
xchg
xchg
les
jge
ja
out
sbb
add
adc
sbb
aad
hlt
je
cwtl
scas
adc
test
into
js
inc
mov
xchg
sarl
nop
xor
fiaddl
cld
loope
add
sarb
pop
mov
xor
out
dec
dec
jmp
in
lret
out
and
cmp
sub
mov
mov
int
ret
or
scas
mov
ret
jne
pop
add
dec
std
int3
add
dec
lods
or
xchg
es
dec
mov
push
stos
clc
jecxz
add
bound
cmp
sub
xor
mull
dec
into
inc
imul
scas
mov
jae
push
xchg
outsb
sbb
push
mov
enter
or
cmp
mov
ja
fmulp
shlb
arpl
and
dec
push
xchg
jecxz
mov
mov
push
mov
or
insb
mov
jnp
popf
xchg
sub
dec
std
fistpll
int
adc
lret
or
das
dec
dec
xor
scas
test
fmull
mov
mov
insb
mov
sbb
mov
data16
pop
gs
adc
xchg
cld
and
aad
fnstcw
shrl
cmp
sub
mov
out
dec
out
leave
aas
repnz
mov
jne
icebp
aad
cmc
adcl
mov
popl
jo
or
mulb
fisubrl
sub
dec
popa
shll
jne
pop
sbb
xchg
div
ds
mov
loop
rorb
adcw
jecxz
nop
push
movsl
pop
call
adc
data16
adc
cmp
cmp
test
sub
add
in
mov
sbb
push
cmpsl
sti
add
pushf
dec
test
jle
sub
inc
scas
test
sahf
test
lahf
je
pop
leave
cmpsl
dec
xor
aaa
ret
mov
push
cli
mov
frstor
gs
pop
jmp
lods
xchg
dec
push
cmp
push
movsl
add
dec
nop
stc
xchg
mov
or
cmp
mov
rclb
mov
ja
sub
add
call
jno
jl
out
mov
mov
lret
mov
sbb
sub
cmp
push
adc
pusha
mull
sub
leave
sti
aam
ja
insb
mov
inc
lcall
and
pop
ds
add
mov
mov
or
mov
movsl
out
shll
popf
add
in
cmp
pop
mov
movsb
jnp
int
dec
or
push
lds
jge
in
dec
fdivp
cwtl
jns
cmp
mov
mov
es
dec
mov
jbe
push
sarl
sbb
loop
adc
out
sarb
loop
imul
in
and
dec
mov
mov
aad
mov
imul
and
icebp
push
stc
insl
xor
pop
mov
test
xchg
xor
insb
pop
adc
hlt
push
inc
adc
cmp
xor
getsec
rorl
xchg
inc
dec
mov
sub
stos
pop
xchg
jno
dec
sbb
sub
divl
popf
lds
icebp
scas
or
notl
cmc
cli
loopne
imul
push
and
repnz
faddl
ss
stos
mov
loop
shlb
iret
add
push
cmp
fistpll
mov
mov
and
xor
fiaddl
mov
scas
aam
mov
push
adc
cmpl
mov
movsl
clc
arpl
les
jno
mov
pop
and
and
lcall
je
cmc
addl
les
and
adc
or
mov
push
fisubl
sbb
xlat
xchg
test
xchg
xchg
nop
ja
mov
cmc
lds
or
lret
or
insl
xor
xchg
and
push
loopne
inc
mov
xchg
sub
or
xchg
xchg
arpl
jo
push
cltd
ds
mov
dec
ret
mov
popl
jno
inc
jl
cmp
mov
xor
adc
mov
in
mov
rorb
inc
inc
inc
iret
sbb
rcrl
addr16
js
pop
sti
pop
xor
das
ja
mov
mov
daa
jle
loop
dec
jo
incb
pusha
pop
xor
pop
rcll
pop
xor
mov
clc
xchg
or
cmp
es
mov
xor
and
aas
sbb
out
jle
lds
test
add
push
dec
into
nop
adc
frstor
sub
mov
repnz
int
mov
stc
shlb
mov
inc
pop
data16
rclb
rorl
dec
xchg
daa
xchg
jo
leave
jecxz
mov
das
popa
add
push
add
adcb
fimull
mov
dec
ljmp
adc
mov
sahf
