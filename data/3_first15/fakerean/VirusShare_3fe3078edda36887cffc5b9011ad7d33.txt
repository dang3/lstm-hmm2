add
add
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
or
add
jle
add
cmp
test
add
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
sub
push
mov
mov
call
mov
mov
mov
mov
mov
push
inc
add
push
add
les
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
jp
inc
add
cmp
jb
mov
je
inc
add
scas
lahf
adc
mov
and
mov
mov
add
pop
adc
jmp
sub
cmp
mov
jb
mov
cmp
or
inc
add
and
and
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
in
inc
add
add
pusha
cmp
orl
add
pop
inc
add
loopne
dec
dec
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
mov
inc
add
dec
and
mov
addl
sbb
sbb
pusha
cmp
rcll
test
cli
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
iret
and
inc
pusha
mov
cmp
ja
cmpl
je
mov
mov
mov
mov
addl
or
sbb
jne
jmp
movzbl
lea
cmp
jb
mov
testl
je
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
sbb
add
add
test
sbb
dec
and
push
or
jbe
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
loope
inc
add
mov
mov
mov
mov
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
stos
sub
add
sbb
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
fsubrl
add
add
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
mov
inc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
push
xor
insb
push
push
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
cmc
pop
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
movsb
das
inc
add
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
add
inc
add
adc
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
enter
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
insl
sbb
inc
adc
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
dec
sbb
test
adc
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
and
add
add
push
add
decl
or
inc
adc
adc
inc
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
mov
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
or
aam
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
test
inc
and
je
mov
mov
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
and
push
push
push
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
out
inc
add
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
add
xor
adc
ret
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
or
lea
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
add
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
add
mov
je
cmp
push
inc
add
adc
dec
and
int
dec
and
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
add
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
enter
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
add
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
cs
add
add
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
mov
pop
pop
pop
pop
xor
call
add
add
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
ljmp
inc
add
or
xorb
mov
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lret
adc
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
push
push
call
mov
stc
add
add
pushf
scas
loop
pushf
mov
add
pop
addb
ja
mov
add
push
add
jbe
add
incb
xchg
xchg
jns
ret
mov
addb
fcomi
clc
shrb
divb
add
xchg
in
add
add
add
pop
add
mov
add
roll
out
imul
push
cltd
aad
add
add
mov
pusha
mov
add
ja
mov
add
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
xchg
add
movsb
in
add
rolb
out
pop
add
add
mov
add
cmc
add
add
stos
add
add
cmpsl
add
insb
add
add
sahf
jp
add
xchg
test
mov
test
sti
mov
jo
data16
data16
pushf
mov
add
add
in
nop
add
push
xchg
mov
add
jmp
xchg
add
imul
and
inc
cld
add
add
push
lea
push
call
add
jnp
imul
xchg
lea
out
cli
add
loope
add
add
ficompl
add
iret
add
movl
push
lods
stos
add
push
add
xlat
add
push
pop
add
mov
out
mov
iret
mov
add
fprem
jb
cld
jnp
add
mov
mov
jle
int3
add
shlb
push
add
add
pop
popl
push
push
push
lea
push
push
call
loope
add
movsl
add
fiadds
mov
add
je
js
add
sti
mov
pop
addr16
mov
mov
bound
mov
fidivl
mov
add
add
outsl
add
xchg
add
add
add
add
jecxz
lods
add
addr16
out
add
add
add
add
add
std
jno
push
mov
lea
pop
push
push
push
push
push
call
add
out
fildl
pusha
push
testb
roll
add
push
data16
mov
jmp
insb
loope
add
iret
into
add
jno
out
add
fstpl
sti
ja
add
clc
push
pop
add
roll
je
jb
jge
roll
lcall
sarb
stos
add
scas
add
in
fadds
in
add
add
lea
pop
push
push
push
call
add
add
leave
push
mov
mov
repnz
add
mov
add
add
add
add
add
mov
add
add
fstps
add
add
stos
mov
pop
add
add
add
call
add
add
mov
lods
add
mov
lea
pop
push
push
call
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
mov
lods
add
add
add
iret
lahf
add
add
shlb
add
test
xchg
fnstsw
add
add
mov
add
rolb
xchg
push
movsl
mov
add
mov
mov
xchg
add
mov
add
xchg
popa
add
add
lea
pop
call
push
push
push
lea
push
push
push
push
call
add
subb
add
add
imul
add
divb
lods
out
add
mov
lret
add
add
mov
enter
add
jecxz
add
xchg
mov
in
push
fildl
mov
mov
add
add
xchg
fsts
ljmp
scas
pop
cwtl
cltd
clc
add
mov
lea
pop
call
push
push
call
fsincos
mov
mov
add
mov
add
pusha
stos
pusha
pop
pushf
nop
add
rclb
cld
int
mov
mov
add
xchg
add
jae
rcrb
fdivl
mov
add
add
xchg
mov
add
arpl
int3
addl
add
mov
lea
pop
jmp
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
jnp
hlt
jb
icebp
sahf
add
add
lods
cwtl
xchg
test
hlt
test
out
add
sbbb
add
push
xchg
pop
add
push
xorl
mov
addr16
add
mov
cli
fwait
je
pop
add
loope
add
pop
ret
mov
push
push
call
add
jo
mov
add
mov
add
aam
add
jnp
xchg
add
add
pop
mov
add
xchg
jecxz
mov
jns
add
gs
add
add
add
pop
add
add
add
jmp
mov
jno
add
sahf
add
add
lahf
aad
add
add
xchg
add
mov
lea
pop
mov
add
add
push
push
push
push
push
call
lahf
mov
add
pop
add
cltd
mov
add
data16
mov
push
xchg
popa
pop
add
out
cld
add
add
fwait
lds
mov
add
add
in
neg
push
scas
add
mov
loopne
cltd
push
add
in
add
mov
add
movsl
add
mov
lea
pop
add
mov
xor
push
lea
push
lea
push
push
call
add
mov
add
add
mov
add
add
pop
add
add
mov
std
xchg
ficomps
mov
add
adc
cmpsb
js
test
add
mov
jge
movsw
rolb
add
add
fwait
add
add
sti
test
xchg
lods
fsub
mov
mov
jmp
test
add
fmull
inc
in
call
push
lea
push
push
push
call
add
push
add
push
imul
nop
test
leave
add
test
lcall
cmpsb
enter
jl
add
shll
add
add
imul
add
mov
scas
pop
jne
stc
add
add
stos
jge
add
add
jmp
push
lock
add
loop
add
incb
xchg
add
mov
add
add
cmc
rorl
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
rclb
jl
pusha
hlt
xchg
aam
out
add
add
lods
add
mov
cmc
gs
bound
add
hlt
cwtl
add
add
out
mov
add
pushf
lods
addr16
add
add
fwait
add
ret
jne
rolb
add
scas
add
pusha
jne
xchg
mov
and
xor
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
in
xchg
ljmp
insb
mov
add
add
pop
arpl
add
xchg
add
cmc
in
add
lret
imul
push
add
insb
push
icebp
add
add
add
add
add
pushf
jno
in
pop
add
lahf
leave
cwtl
mov
add
add
add
mov
pop
add
push
push
shr
sub
sub
dec
push
push
pop
add
add
sub
dec
pop
xor
pop
push
push
push
push
lea
push
push
push
push
call
xchg
add
add
add
mov
gs
out
movsb
fildll
add
add
push
add
add
test
push
mov
mov
add
jp
cwtl
lcall
bound
gs
roll
add
scas
mov
add
mov
add
add
push
mov
lea
pop
pushl
call
mov
push
lea
push
push
lea
push
call
lods
xchg
add
mov
xchg
add
add
pop
popa
lea
in
xchg
add
loop
in
mov
mov
add
arpl
add
mov
mov
add
mov
add
add
fcmovbe
add
add
xchg
ret
scas
xchg
add
mov
notl
add
int3
je
mov
push
in
lahf
mov
lea
pop
movl
push
push
lea
push
push
lea
push
push
push
push
push
call
add
sti
lds
cmc
out
add
add
mov
leave
imul
xchg
stos
add
add
add
mov
lret
movsb
add
pop
enter
fldcw
mov
add
add
xchg
add
cmc
jnp
add
add
add
add
add
lods
loopne
add
add
lea
pop
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
test
add
add
fwait
add
add
out
testl
lods
addb
repnz
mov
add
repnz
pop
test
mov
xchg
mov
sahf
mov
add
add
les
add
add
jl
cwtl
add
imul
fdivp
mov
add
add
mov
in
pop
add
leave
mov
pop
push
pushl
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
call
add
xchg
movsl
loop
mov
fnstcw
mov
add
pop
pushf
cld
add
je
stos
jge
shll
test
add
lock
in
sarb
add
add
pop
xchg
add
clc
jge
stc
andb
add
loop
mov
add
add
mov
pop
add
fdivl
jbe
add
pop
pushl
call
push
push
push
call
addl
mov
add
faddl
add
add
les
into
pop
imul
shlb
add
int3
add
enter
hlt
jmp
add
add
shr
add
add
add
add
jnp
add
jb
mov
add
cmpsl
add
add
subb
add
xchg
popf
add
rol
add
add
or
pushl
pushl
push
push
push
call
add
stc
hlt
scas
push
call
xlat
jae
add
xchg
movsb
add
jbe
cmpsl
add
jae
add
jne
add
int
je
xchg
nop
xchg
add
popa
sti
add
mov
add
add
add
in
add
lcall
jecxz
push
cld
movsl
out
add
add
add
add
jmp
jne
mov
lods
out
mov
lea
pop
call
push
push
shl
push
or
inc
add
shl
add
dec
sub
pop
add
shr
xor
pop
pushl
push
push
lea
push
push
push
push
push
push
push
lea
push
call
scas
push
add
push
xlat
add
fsubr
movsb
in
loopne
lods
roll
add
push
cmc
mov
add
popa
test
push
xchg
std
add
faddl
mov
cld
pop
jp
mov
lret
add
add
fbstp
add
add
fadds
add
add
mov
fldt
add
pop
mov
lea
pop
call
push
push
push
shl
rol
add
push
sub
add
xor
sub
inc
ror
pop
shr
pop
push
push
lea
push
push
call
out
add
lea
into
movsl
jl
mov
test
add
jnp
xchg
add
add
mov
filds
add
xchg
add
add
push
mov
jl
arpl
mov
stos
in
repnz
mov
add
pop
jecxz
add
roll
aam
fmul
xchg
add
xchg
movl
jo
jb
aad
mov
lea
pop
push
push
call
push
push
push
push
push
push
push
lea
push
push
call
movsb
frstor
ja
lock
insb
jns
add
mov
add
jle
mov
add
add
fwait
mov
xchg
xchg
jo
addb
jbe
add
ret
jns
testb
mov
add
add
clc
mov
push
mov
roll
jns
loop
add
int
mov
mov
add
cld
lea
pop
mov
push
push
push
push
lea
push
push
call
pop
rolb
add
gs
jae
add
std
ret
add
mov
push
mov
add
lock
stos
pop
add
lahf
cmpb
repnz
rol
add
mov
add
mov
sbbl
add
push
out
add
add
outsl
mov
movsl
mov
in
add
stos
add
add
add
add
data16
push
push
push
push
push
push
push
call
out
add
pop
mov
push
jge
add
stos
pop
add
mov
aam
add
add
nop
push
add
mov
imul
push
pop
arpl
add
in
add
add
add
jmp
js
pop
add
add
add
shl
int
add
add
xlat
add
les
pop
in
add
push
lea
push
push
lea
push
push
call
add
pop
add
add
add
in
add
stos
pop
loop
lock
out
add
cwtl
add
flds
xchg
mov
add
mov
add
add
ret
imul
mov
ja
add
out
add
add
xchg
push
add
nop
pusha
jns
add
add
add
popf
mov
push
mov
add
lret
add
add
bound
add
add
mov
xor
push
push
push
lea
push
push
push
push
lea
push
call
shl
xchg
add
test
pop
lds
bound
mov
fmuls
mov
add
leave
xorb
nop
into
add
aam
mov
add
mov
add
icebp
lret
add
fiadds
jecxz
add
leave
add
add
sarb
fstp
add
xchg
cmc
mov
loopne
les
jne
push
mov
xor
push
lea
push
push
call
pushf
add
push
lea
add
pop
add
fstps
xchg
sbbb
mov
add
aad
push
jo
in
pop
add
out
add
rcrb
movb
mov
gs
int3
add
add
pusha
mov
xchg
add
add
xchg
lcall
test
imul
add
add
xlat
cmpl
pop
add
push
push
push
push
push
push
push
push
call
add
add
movsb
lods
add
push
test
add
ja
add
cwtl
cltd
add
add
add
add
enter
mov
mov
jae
add
fistpll
in
add
ja
add
add
jmp
mov
add
into
mov
mov
ja
lock
cltd
add
std
pop
mov
add
add
mov
add
out
add
pop
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
jae
jns
mov
lcall
add
pop
lods
add
mov
add
into
fxch
sahf
add
lea
jo
pop
pop
movl
pop
add
add
add
stc
aam
jp
pusha
xlat
mov
xchg
add
add
jge
pushf
xchg
jb
add
nop
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
call
roll
add
addl
add
pusha
fadds
pushf
in
add
add
add
mov
fnstsw
mov
std
mov
add
into
incb
int3
in
stos
add
add
int
add
push
add
mov
add
add
lods
add
add
in
add
push
jmp
add
jbe
add
add
add
bound
mov
xor
sub
push
push
push
push
push
call
lahf
add
add
xchg
add
add
test
mov
shll
adcb
aam
stos
std
mov
add
mov
mov
add
add
lret
jnp
mov
xchg
pop
mov
add
add
loopne
xchg
in
add
enter
sahf
add
popa
add
orl
movsb
jae
in
mov
bound
pop
rep
pop
push
push
push
lea
push
push
call
lods
mov
add
lcall
ret
add
rcrb
pop
mov
jmp
out
shl
out
add
add
cltd
mov
stos
pop
mov
add
movsb
enter
mov
fiaddl
mov
pusha
flds
leave
icebp
jle
jecxz
pop
push
gs
mov
faddl
jl
mov
adc
mov
push
push
push
call
div
add
push
push
test
xlat
add
into
add
lret
mov
add
roll
fadd
call
add
cltd
push
leave
lds
popf
cld
addr16
hlt
jne
jns
pop
outsl
pop
addl
add
enter
add
add
scas
push
mov
add
jo
mov
jecxz
push
mov
jmp
rolb
hlt
lea
pop
add
add
push
push
call
add
lods
add
imul
out
add
stos
cmpsb
push
cmpsl
add
test
add
add
add
add
add
add
insb
fsubl
scas
push
xorb
mov
add
lahf
add
mov
lods
call
add
mov
loope
icebp
in
add
add
icebp
test
add
mov
add
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
push
movb
fiadds
iret
out
cwtl
push
push
movsb
mov
xchg
xchg
mov
pop
stc
sbbb
jae
ljmp
pop
les
mov
add
add
int3
add
add
add
mov
push
xchg
add
test
pusha
add
push
add
xchg
cld
lea
pop
mov
xor
push
lea
push
lea
push
push
push
call
imul
add
add
leave
pop
add
add
push
push
ficoml
xchg
out
add
out
add
add
add
mov
jb
cld
add
push
movsl
add
cmc
nop
add
xchg
add
ja
xchg
push
leave
ret
scas
add
add
add
xchg
jne
add
add
add
jae
add
arpl
mov
xor
push
push
push
push
push
lea
push
push
push
call
xchg
add
add
hlt
add
jle
loope
mov
ret
add
loope
add
push
mov
add
test
add
mov
test
popa
mov
mov
mov
jl
add
add
add
jmp
iret
loop
fs
add
add
add
add
fcmove
push
out
add
add
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
pop
int
xchg
cwtl
mov
xorb
mov
add
add
mov
cld
iret
out
adc
sti
add
out
pushf
jne
fildl
scas
add
jne
push
add
lahf
mov
mov
add
popl
add
pop
shrl
cmpsb
xchg
xchg
pop
xor
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
add
add
fidivs
add
test
imul
aam
idivb
lods
add
add
add
leave
in
mov
stos
test
add
add
lods
mov
add
scas
lods
ljmp
add
add
lea
pop
add
push
push
push
push
push
push
lea
push
call
pop
mov
out
out
jb
jae
add
push
add
add
hlt
add
pushf
add
data16
jge
mov
add
mov
add
ror
add
jle
mov
add
fwait
add
add
mov
add
movsl
add
cmc
add
cli
addl
fs
add
div
mov
add
mov
xchg
mov
add
int3
lea
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
sahf
fsubrs
jmp
pop
testl
popf
add
into
roll
loope
clc
add
jecxz
jns
test
mov
lea
sti
lods
incb
jmp
xchg
clc
add
pop
add
pusha
add
mov
add
mov
mov
add
mov
gs
add
cli
add
cli
push
add
add
jnp
pop
mov
jge
add
imul
lea
pop
add
mov
push
push
shr
ror
push
xor
add
xor
xor
rol
sub
xor
rol
xor
pop
rol
inc
ror
not
pop
push
push
lea
push
push
push
push
call
push
mov
pop
mov
lahf
add
mov
ja
lods
mov
jns
xchg
xchg
add
test
mov
pushf
int
mov
xorl
rcl
add
leave
pop
add
fdivrp
add
add
ljmp
add
add
mov
lahf
add
leave
mov
xlat
arpl
add
ficoms
add
add
add
xchg
add
mov
add
pop
pushl
call
push
push
push
lea
push
sub
add
shl
add
sub
sub
add
inc
dec
pop
sub
pop
push
push
push
call
mov
mov
mov
add
mov
add
fs
add
add
add
jecxz
outsl
cwtl
pop
stc
int3
add
lahf
loope
hlt
jo
divl
add
add
add
addr16
add
notb
add
mov
les
popa
pusha
mov
add
addr16
cld
lea
pop
push
push
push
lea
push
call
out
testl
mov
push
add
jmp
mov
les
add
call
add
mov
add
add
mov
add
pushf
testl
add
push
add
add
mov
xchg
xchg
stos
mov
in
cmpb
add
add
into
add
mov
xlat
loopne
jne
add
mov
iret
add
pop
push
call
push
push
call
mov
fst
mov
add
jle
add
test
mov
jle
add
loope
out
mov
add
add
jge
add
pop
icebp
add
roll
repnz
incb
xchg
jae
js
add
xlat
nop
fadds
add
into
les
add
add
push
lahf
jmp
popf
mov
xchg
addl
mov
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
stc
xchg
add
mov
lret
mov
lcall
add
stos
pop
jbe
add
outsl
jnp
mov
add
add
xlat
jecxz
add
stos
pushf
add
add
roll
add
sti
add
jns
add
hlt
iret
mov
orb
push
push
push
push
lea
push
lea
push
push
push
call
add
xchg
insb
imul
lds
iret
add
std
lcall
gs
lods
lods
lea
add
gs
stos
aam
pop
sbb
mov
mov
add
scas
push
stc
add
les
add
stos
add
cli
leave
mov
add
gs
add
addr16
add
xchg
add
add
hlt
movsb
xchg
mov
add
addb
jno
add
addr16
pop
push
mov
push
lea
push
push
push
push
push
push
push
call
scas
add
stc
shlb
push
cmpsb
mov
out
out
add
pop
add
add
cmpsl
data16
push
adc
jae
addl
filds
incb
rcll
sbb
enter
stos
cmpsb
add
push
lea
insb
movsb
fistpl
cltd
shlb
push
mov
notl
add
scas
ret
jp
cld
lea
pop
add
push
lea
push
call
cmpsl
add
pop
fstps
enter
push
push
outsl
add
add
xlat
add
js
enter
add
fisubrs
add
add
add
add
pop
add
stc
xchg
addb
in
mov
jnp
pushf
jecxz
jmp
mov
jae
in
jmp
pushf
push
add
jo
mov
add
jno
mov
lea
pop
add
add
push
push
push
push
lea
push
lea
push
push
push
call
mov
cmpsb
add
add
xchg
add
add
add
jne
mov
icebp
add
ja
add
add
fistpl
mov
jno
xchg
add
add
xchg
addl
add
test
add
add
stc
xlat
add
cld
push
mov
add
add
scas
test
add
lea
pop
mov
xor
push
lea
push
call
add
scas
test
add
fwait
lret
cltd
mov
add
imul
mov
arpl
jne
fnstenv
add
add
hlt
xlat
icebp
add
xchg
mov
mov
add
add
jne
add
ljmp
add
int3
mov
ret
mov
or
add
push
cmpsb
add
add
les
jne
push
lea
push
push
push
push
push
push
call
movsl
mov
rolb
add
mov
xchg
add
out
add
add
add
test
add
add
pop
add
movsl
push
add
pusha
lahf
enter
lret
add
add
add
add
jb
add
add
loope
cmpsl
add
mov
cmc
fistps
xchg
add
popf
cli
push
jns
add
add
add
addl
pop
pushf
xchg
add
add
cltd
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
out
out
add
add
stos
add
mov
add
stos
insb
cltd
clc
add
mov
stos
call
xchg
mov
sar
stos
jns
lods
add
outsl
test
lahf
push
test
add
add
lods
push
repnz
popa
testl
nop
add
lret
add
add
jmp
add
fcomps
imul
mov
lea
pop
mov
xor
push
push
push
lea
push
call
push
imul
test
mov
lods
add
fildl
xchg
std
add
add
jmp
add
js
add
sahf
xlat
into
add
movsl
add
mov
push
pusha
xchg
add
lds
push
cltd
gs
repnz
mov
add
cmc
add
add
in
push
out
add
ljmp
jp
aam
in
jns
lea
stos
xchg
xchg
pushf
aam
add
shlb
add
add
adc
lock
push
push
push
push
push
call
add
add
add
add
add
fidivrl
leave
add
push
ja
fcoml
xchg
out
mov
fcmovb
push
add
neg
clc
push
mov
movsb
add
add
add
addb
test
scas
test
arpl
les
lahf
pop
add
nop
shr
in
testb
mov
scas
pop
in
movl
movsb
push
add
pop
mov
push
push
push
push
push
call
add
iret
push
add
add
add
add
add
out
mov
add
nop
imul
testl
add
push
add
add
jle
fsin
int3
popa
stos
cmp
mov
xchg
add
xchg
jl
add
push
fcmovb
jnp
add
mov
insb
test
add
mov
jo
add
pop
xor
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
add
loope
mov
rcrb
add
ret
push
shll
roll
add
frstor
mov
push
pop
roll
jp
add
add
jo
xchg
add
mov
mov
add
add
test
jns
add
stos
add
mov
xlat
cmc
push
rolb
mov
lea
pop
add
push
lea
inc
pop
rep
mov
xor
push
lea
push
lea
push
push
call
cmpsl
add
add
addr16
popa
add
xchg
add
fidivl
in
cwtl
add
lret
xchg
mov
cmpsb
xchg
mov
lods
add
aad
pop
add
jnp
add
pop
pop
add
test
mov
add
lock
in
out
fdivs
add
stos
jecxz
mov
lea
pop
or
je
mov
xor
push
pop
mov
xor
add
push
push
lea
push
push
push
push
push
lea
push
push
call
jmp
mov
pusha
add
out
push
add
in
jae
jmp
xchg
mov
cmpsl
loope
pop
add
jns
popf
cltd
add
jl
mov
add
pop
add
out
add
jp
test
add
mov
add
add
in
add
fstpt
mov
mov
add
push
lret
cmpsl
add
mov
lea
pop
add
push
push
lea
push
push
push
push
call
xchg
add
loope
mov
jo
add
mov
clc
add
add
pop
add
imul
add
pop
add
pop
clc
out
flds
add
mov
cltd
add
test
int3
add
push
mov
leave
xchg
mov
popa
popl
testb
add
add
jns
out
test
add
add
fmull
inc
or
jno
lock
not
pop
pop
rep
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
lds
add
hlt
filds
xchg
insb
add
add
ret
add
add
les
add
lods
add
add
add
xchg
movsl
bound
add
ror
mov
mov
addr16
mov
mov
xchg
loopne
imul
add
outsl
bnd
add
add
lea
pop
xor
push
push
push
call
in
add
add
mov
add
data16
add
stos
scas
add
add
mov
add
add
add
add
scas
add
out
jmp
fadd
add
add
add
mov
fmull
add
add
add
test
add
add
add
cmc
mov
movsl
xchg
stos
stos
add
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
lcall
add
push
cli
pop
add
add
test
push
add
add
xchg
bound
xchg
add
test
je
add
mov
out
aad
shr
add
cltd
add
add
out
add
in
xchg
test
add
add
mov
add
mov
lea
pop
or
je
push
inc
add
dec
pop
mov
add
add
push
push
call
lock
jl
mov
add
jge
scas
lock
add
in
add
mov
testl
into
jnp
pop
xchg
add
add
add
add
jne
loope
push
addl
xorl
sahf
jb
push
add
ret
lock
mov
add
pop
mov
add
lock
ret
add
add
addb
pop
mov
lea
pop
rep
push
push
push
lea
push
push
push
push
lea
push
push
call
lcall
in
aam
add
cmpsb
addr16
sbbl
add
push
add
pop
add
mov
not
sti
add
test
leave
add
stos
lock
push
mov
add
add
add
lods
mov
call
add
add
int
into
sti
stos
lea
add
cld
add
scas
add
ljmp
leave
mov
test
push
mov
lea
pop
pop
push
push
shl
sub
add
push
or
inc
add
lea
sub
xor
add
dec
pop
shr
pop
pop
push
push
push
call
add
add
add
lods
popf
add
add
scas
pusha
fcmovbe
push
add
push
mov
xchg
add
call
jle
in
mov
pop
data16
add
out
mov
jle
jmp
stos
add
add
add
mov
mov
add
addr16
lahf
lds
lahf
loope
push
add
add
push
add
mov
lea
pop
mov
mov
mov
push
push
lea
push
lea
push
push
push
push
push
call
ljmp
jns
lret
add
call
add
pop
add
ljmp
jge
mov
out
idiv
shll
fisubl
rcrl
push
test
mov
add
bound
out
add
imul
icebp
mov
add
movb
enter
jnp
add
mov
lea
pop
jmp
push
inc
shr
sub
pop
push
mov
push
push
push
push
lea
push
push
call
xlat
add
mov
aad
pushf
int
outsl
jns
lea
cld
je
xchg
jno
mov
add
mov
add
in
mov
rolb
filds
add
add
pushf
cmpsl
iret
add
test
add
in
sarl
fcom
fcompl
add
add
add
add
mov
mov
sbb
cld
push
push
push
lea
push
push
push
lea
push
push
call
pop
testb
add
jb
data16
roll
arpl
imul
add
xchg
enter
mov
mov
add
add
testb
mov
mov
movsb
mov
jp
xchg
aad
int3
mov
imul
jmp
stc
mov
scas
add
push
clc
add
add
add
mov
lea
pop
push
push
sub
sub
pop
push
mov
pop
push
push
push
push
push
push
push
call
push
flds
add
add
add
outsl
add
add
stos
negb
mov
add
add
add
push
add
mov
sti
mov
testl
add
add
lods
add
aad
rolb
add
lahf
cli
add
xchg
add
fisttpll
add
add
add
add
add
mov
pop
add
pop
pop
pop
pop
push
not
not
pop
leave
push
lea
push
lea
push
push
push
call
add
call
fmul
movsb
mov
pop
add
cmc
arpl
add
add
add
mov
incb
add
jno
aad
add
add
rolb
jae
add
jge
add
mov
pop
push
stc
add
scas
add
fwait
lods
add
add
faddl
mov
xlat
lock
add
add
add
pop
mov
into
mov
lea
pop
ret
push
push
push
lea
push
push
call
add
outsl
nop
add
add
add
mov
movl
add
outsl
add
jbe
add
loope
cwtl
add
xchg
xchg
imul
add
add
movsl
add
add
cltd
lea
add
pop
mov
jns
js
nop
add
std
add
add
add
add
add
xchg
add
pop
mov
push
pop
add
push
push
push
add
inc
shr
pop
push
push
push
inc
sub
inc
pop
movl
addl
push
push
push
push
push
push
call
add
lahf
jge
add
xchg
cli
add
add
clc
call
fbld
jmp
add
add
sti
add
add
mov
xchg
aam
mov
add
pop
arpl
add
test
mov
mov
sti
icebp
ret
shll
lea
jae
pop
lret
jae
add
add
add
hlt
rorl
jmp
sbb
rorb
sldt
add
mov
je
cltd
add
pop
pop
pop
pop
push
sub
shr
pop
pop
push
push
push
lea
push
lea
push
push
push
call
fsubs
out
add
add
addl
mov
add
rolb
jno
filds
movsb
sahf
icebp
pop
add
add
andb
std
pusha
roll
pop
add
add
add
add
outsw
mov
add
add
add
add
jo
add
add
push
jne
xchg
add
add
pop
enter
jae
loopne
movsl
mov
jae
mov
lea
pop
leave
push
ror
add
shl
xor
pop
ret
push
push
push
push
push
push
push
call
mov
lea
jae
incb
rcl
loopne
add
add
add
jb
cmpsl
add
add
add
add
add
clc
add
push
loope
jnp
jp
mov
add
lods
mov
jns
nop
test
fs
mov
scas
jmp
testb
mov
int3
add
push
hlt
lea
pop
push
mov
push
lea
push
lea
push
push
push
push
push
push
call
add
add
arpl
hlt
lret
add
sahf
call
add
mov
lods
add
jecxz
pushf
jl
ja
enter
mov
pop
jge
insb
mov
std
popf
je
add
test
movl
mov
gs
rolb
cmpsb
les
mov
fs
add
mov
mov
mov
add
ja
mov
lea
pop
add
push
sub
inc
add
pop
push
push
push
push
sub
lea
pop
push
testl
push
add
rol
sub
lea
pop
addl
push
push
lea
push
push
call
add
roll
pop
scas
xchg
addl
in
lock
push
push
add
into
add
push
aad
add
push
jb
add
fldenv
add
add
xchg
jmp
mov
ftst
add
icebp
add
add
clc
add
add
add
add
flds
cmpsl
cmpb
add
push
rcrl
add
add
movsb
jnp
lods
xchg
mov
mov
adc
add
sbb
call
loopne
dec
lea
pop
mov
push
push
push
lea
push
lea
push
push
call
add
loope
pop
lods
pop
add
add
jbe
sahf
lret
add
ja
push
cmc
add
add
xchg
outsl
add
mov
add
gs
imul
mov
add
add
add
mov
mov
add
xchg
push
mov
bound
add
ja
stos
out
add
mov
push
pushf
add
mov
lea
pop
pushl
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
add
add
fildl
rolb
add
cmc
add
xchg
jnp
pushf
xchg
clc
add
test
add
add
iret
in
add
add
jo
add
lods
add
jp
xchg
jle
out
add
add
mov
data16
add
ja
mov
add
ret
add
xlat
cmc
lock
add
mov
lea
pop
push
call
cmpl
jne
push
rol
inc
sub
add
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
add
jnp
add
imul
mov
aam
lahf
in
add
pop
fstpl
pop
add
stc
lret
push
add
xchg
rolb
push
add
popl
outsl
jno
xchg
in
insb
xchg
add
add
gs
mov
jl
test
fldenv
add
cld
fstpt
popl
les
add
pop
add
leave
out
movsb
pusha
lret
mov
lea
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
clc
mov
je
clc
rol
adcb
add
xchg
push
loope
lcall
push
movl
add
mov
stos
add
gs
out
cmpsl
cmpsb
lods
add
fiadds
jo
add
cmc
into
add
add
push
lods
add
pop
lock
call
jne
clc
push
icebp
add
add
mov
push
jecxz
pop
xchg
loop
jns
popa
add
out
mov
lea
pop
leave
ret
push
shr
add
pop
push
mov
push
sub
shr
add
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
imul
fistps
add
mov
mov
add
add
shl
push
je
push
mov
mov
add
add
cmpsl
pop
add
stos
add
add
mov
out
movb
jae
push
add
loope
mov
add
add
add
frstor
add
xchg
imul
in
popa
add
add
jecxz
mov
mov
jmp
test
xor
addr16
push
push
push
push
lea
push
lea
push
call
mov
popf
add
add
icebp
out
fiaddl
mov
xchg
ror
mov
add
roll
stos
pop
lds
add
std
push
ficompl
in
rolb
mov
leave
testb
hlt
popf
andl
stc
repnz
int
je
cli
add
push
xchg
add
add
ljmp
add
add
cli
jns
pop
mov
add
out
in
test
push
in
hlt
lea
pop
push
push
dec
ror
shl
pop
movl
push
sub
pop
push
call
push
pop
push
call
push
add
dec
dec
pop
subl
cmpl
jne
push
shr
add
pop
pop
push
add
sub
pop
pop
push
push
lea
push
push
push
push
push
call
int
lret
insb
add
test
add
decb
xchg
sbbl
jnp
int
cli
cld
shlb
push
popa
add
bound
out
mov
jmp
add
add
hlt
call
call
cmpsl
hlt
mov
jge
mov
loopne
add
add
add
add
add
cwtl
movsb
shr
add
test
mov
lea
pop
pop
pop
push
xor
pop
leave
ret
push
push
push
push
lea
push
lea
push
call
sahf
xchg
push
add
scas
lahf
push
add
jp
push
add
mov
add
mov
outsl
push
arpl
roll
mov
mov
add
loop
add
add
test
loopne
add
add
add
mov
jmp
sub
add
add
add
add
jno
add
jno
push
add
mov
lea
pop
mov
push
dec
sub
pop
add
push
push
push
lea
push
call
jl
add
add
bound
jp
imul
lea
fucomi
clc
pusha
xchg
add
add
nop
shl
cli
xchg
add
jle
add
mov
fiadds
xorl
clc
cmc
jb
add
into
add
mov
add
add
push
add
add
jmp
movsb
call
add
ret
mov
in
push
add
add
add
add
push
pop
add
imul
add
pop
push
push
push
not
dec
xor
pop
push
push
rol
ror
sub
add
pop
mov
push
pop
lea
sub
push
rol
pop
mov
push
lea
push
push
lea
push
push
push
push
call
std
cmc
icebp
add
add
lods
push
mov
movsb
mov
subl
add
add
add
ja
push
pop
add
test
add
add
add
cld
test
add
add
lods
mov
out
in
cli
pusha
xchg
xchg
mov
in
imul
mov
in
shr
add
hlt
add
add
add
pop
shr
push
shl
lea
sub
pop
add
mov
mov
push
not
shr
add
pop
add
push
lea
push
call
xchg
mov
push
add
xchg
add
add
mov
sahf
add
gs
fwait
leave
push
loopne
add
xchg
fucomi
jne
add
pop
jle
shll
add
leave
add
mov
add
add
mov
jb
insb
mov
nop
xchg
lock
clc
push
js
xchg
lahf
add
mov
add
push
add
mov
lea
pop
add
mov
mov
push
sub
shl
pop
cmp
jne
cmp
jne
mov
push
lea
push
call
mov
jmp
add
testb
fld1
popf
add
xchg
add
arpl
cwtl
add
iret
add
add
mov
push
mov
add
sti
add
add
mov
add
stos
add
test
add
cmpsb
stc
leave
add
jmp
add
add
push
lcall
movl
push
lea
push
push
push
push
push
push
call
call
test
add
pop
add
stc
pop
add
jns
add
mov
testb
aam
rcr
xlat
mov
add
movsb
pop
add
addl
icebp
add
loop
lret
movsb
add
add
add
fs
insb
mov
popa
mov
arpl
fst
add
int
je
xchg
stc
add
add
int
sti
add
hlt
lds
into
add
mov
lea
pop
jmp
mov
push
push
push
push
lea
push
push
push
push
push
call
sti
nop
add
jnp
add
jb
js
jbe
push
sahf
push
mov
repnz
pop
in
jne
outsl
sti
mov
add
nop
js
mov
add
std
out
filds
add
add
add
in
test
push
add
cltd
cld
add
loopne
cmpsb
mov
add
mov
add
fisttpll
pop
mov
push
pop
sub
jne
push
add
pop
mov
push
push
push
lea
push
call
xchg
addr16
mov
fwait
add
lcall
add
testb
scas
add
add
stos
add
imul
add
push
add
outsl
add
mov
add
insb
add
mov
add
ljmp
fiaddl
add
cli
cltd
out
idivb
add
xchg
mov
lea
pop
movl
push
push
push
push
push
push
call
mov
add
ja
add
fstps
push
add
add
xchg
add
addb
add
add
lds
xchg
push
data16
enter
xchg
push
add
mov
add
addb
add
ljmp
add
sti
add
add
rolb
add
fnsave
add
mov
lahf
add
faddl
lods
notb
xlat
les
bound
pop
jmp
push
push
push
lea
push
call
lret
mov
push
add
testb
shlb
lret
imul
mov
add
add
xchg
in
mov
add
add
xchg
mov
addb
mov
add
add
pushf
fsubs
mov
jne
add
add
add
add
push
add
pushf
lret
lahf
shl
add
pop
mov
push
dec
pop
mov
cmp
jne
mov
push
push
push
push
push
push
push
call
jge
rol
add
add
mov
cli
add
add
addl
popf
add
iret
add
test
push
add
out
add
sti
fstp
mov
js
add
mov
lds
mov
pop
aad
add
push
add
add
add
add
stos
rcrl
pop
add
fmull
add
add
add
out
rol
ror
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
out
add
add
shrl
add
pop
add
sahf
std
pop
add
add
push
call
arpl
jge
add
add
mov
add
add
add
add
jbe
loope
add
mov
xchg
add
add
shr
push
xchg
hlt
pop
mov
add
add
push
lret
add
jmp
je
decb
add
mov
lea
pop
mov
push
not
add
pop
cmpw
jne
mov
movl
push
push
push
push
push
push
lea
push
push
call
add
add
jb
arpl
fidivrl
outsl
jno
lret
mov
add
xchg
add
add
add
mov
int
add
xchg
add
pop
add
js
add
pop
xchg
add
cltd
add
faddl
jo
add
add
rcll
imul
sti
out
mov
lea
pop
jmp
push
xor
xor
pop
pushl
pop
mov
push
sub
xor
pop
mov
push
not
pop
mov
push
push
sub
sub
push
or
not
add
ror
sub
shr
rol
pop
inc
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
aam
flds
push
add
xchg
add
add
cmpsl
nop
add
pop
jbe
add
popf
mov
add
lret
test
movb
add
stos
add
xchg
cld
fistpll
scas
add
add
add
add
stos
mov
mov
lahf
jle
add
add
popf
add
mov
lea
pop
call
push
dec
dec
ror
pop
cmpl
je
push
push
shr
add
push
xor
add
add
dec
sub
sub
lea
inc
sub
xor
pop
add
sub
rol
pop
push
not
pop
push
call
push
push
lea
push
push
push
push
push
lea
push
call
add
cmpsb
shr
test
mov
mov
movsb
add
cltd
cwtl
scas
stos
lods
mov
add
mov
nop
push
push
int
mov
add
push
addl
fldenv
je
out
push
add
popf
add
shl
lods
int
add
xchg
add
add
in
arpl
add
int
add
cmpsl
lcall
add
roll
add
mov
mov
iret
add
xchg
aam
pop
add
nop
xchg
mov
lea
pop
cmpl
je
push
push
xor
inc
push
push
pop
add
lea
sub
ror
pop
xor
not
not
pop
push
shl
pop
push
call
push
add
add
inc
pop
cmpl
je
push
push
sub
add
ror
push
xor
add
not
ror
sub
xor
pop
dec
pop
push
push
push
call
add
lds
scas
add
shl
jb
mov
ret
add
add
add
into
shlb
stos
clc
jbe
popf
mov
add
mov
addb
mov
sahf
mov
add
fdivrp
add
mov
lea
add
add
add
add
fisttps
pop
push
call
cmpl
je
push
push
add
push
xor
add
sub
inc
inc
dec
pop
rol
add
pop
push
rol
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
pop
icebp
fcoms
int
add
pop
push
xchg
mov
lock
add
mov
mov
mov
int
lds
movsb
mov
add
testb
add
hlt
add
jo
mov
push
fbld
pop
add
add
add
pop
xchg
mov
lea
pop
call
cmpl
je
push
push
add
push
and
add
inc
add
sub
add
sub
inc
pop
not
rol
pop
push
not
pop
push
push
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
pushf
scas
add
arpl
out
mov
add
data16
push
mov
mov
add
add
idivb
stos
xlat
jmp
add
mov
xlat
add
add
add
add
add
add
sar
add
add
mov
lea
pop
cmpl
je
push
push
add
add
shr
lea
push
or
not
add
rol
not
sub
xor
inc
pop
ror
pop
push
push
push
lea
push
push
push
call
mov
out
fwait
xlat
add
add
add
loop
add
add
mov
mov
pop
scas
lods
outsl
mov
out
add
add
addr16
jns
add
fnstsw
flds
add
add
pop
movb
cmpsl
add
sahf
iret
test
add
test
push
sahf
out
jne
add
mov
mov
add
push
mov
pusha
sbb
push
lea
push
push
push
push
lea
push
lea
push
call
mov
cld
loope
add
fwait
add
add
pop
movsl
gs
add
stc
jmp
add
int3
jle
xor
add
sahf
sti
test
lea
xchg
xchg
add
call
add
fwait
push
incb
mov
outsl
mov
xchg
incb
fdivr
push
add
outsl
lods
rcr
add
xchg
hlt
in
movsl
pop
add
pop
call
push
sub
shr
pop
cmpl
je
push
push
shr
push
xor
add
add
rol
sub
inc
pop
inc
inc
lea
xor
pop
push
add
pop
push
push
add
add
lea
rol
pop
call
cmpl
je
push
push
rol
add
not
push
xor
add
xor
shr
not
sub
add
dec
sub
pop
shl
inc
not
pop
push
sub
not
shl
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
mov
int
add
bound
push
add
add
push
mov
outsl
xchg
add
fdivs
add
add
add
jmp
lds
push
push
test
testl
jae
fst
int3
add
push
push
mov
scas
add
add
add
add
lahf
lea
fmuls
pop
call
push
rol
rol
shr
pop
cmpl
je
push
push
sub
push
and
add
add
rol
shr
sub
not
pop
dec
pop
push
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
fistl
xlat
stos
clc
mov
add
push
icebp
clc
add
add
loope
add
addl
clc
add
subb
stos
loopne
aad
add
xchg
mov
mov
pop
push
jl
mov
mov
fcoms
addr16
sti
ljmp
aad
call
arpl
pop
call
push
lea
push
push
lea
push
push
call
roll
call
rolb
outsl
iret
fistpl
add
cmpsb
enter
add
mov
jmp
mov
add
mov
add
add
add
lret
hlt
add
mov
add
int
mov
add
andb
imul
add
add
add
lea
pop
cmpl
je
push
push
add
shl
push
or
inc
add
not
sub
xor
ror
not
pop
dec
ror
add
pop
push
add
shl
pop
push
call
push
sub
rol
pop
cmpl
je
push
push
dec
push
or
not
add
sub
sub
not
pop
shl
xor
pop
push
push
push
push
call
in
out
into
shrb
scas
add
add
in
xchg
test
nop
add
add
push
adcl
out
jle
mov
add
lds
xchg
mov
add
add
scas
add
mov
lret
fldl
mov
push
add
fwait
pop
add
add
mov
adc
push
sub
add
pop
call
cmpl
je
push
push
ror
push
and
add
lea
sub
xor
rol
add
pop
shr
sub
pop
push
push
push
push
push
push
push
call
in
sti
mov
add
add
out
add
repnz
add
lods
cli
sarb
out
bnd
mov
add
hlt
mov
cltd
jle
add
scas
movb
mov
add
jo
jl
add
add
movsl
sar
in
add
add
add
add
pop
push
call
push
sub
not
pop
cmpl
jne
push
lea
add
pop
mov
push
push
call
add
scas
ficomps
jmp
add
add
icebp
les
push
fdiv
fnsave
add
mov
push
testl
add
fwait
lret
mov
add
add
leave
add
call
int
add
push
add
mov
ja
add
rolb
out
add
cmc
add
push
mov
lea
pop
movl
jmp
xor
push
push
push
lea
push
call
lret
mov
add
add
out
imul
add
jmp
add
lock
add
add
add
add
mov
popf
rclb
cltd
add
push
lret
sti
add
add
push
add
mov
add
add
add
mov
add
popf
add
add
mov
iret
add
pop
jb
fwait
add
mov
bound
pop
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
call
jbe
or
clc
add
push
lret
add
add
xchg
stos
add
repnz
rorl
add
icebp
add
int3
push
stos
add
cwtl
call
rolb
jo
add
testl
mov
lcall
add
lcall
add
add
add
mov
add
pop
pop
push
shl
sub
pop
pop
push
push
push
push
push
call
cmc
add
add
add
lret
lret
cmc
jo
cwtl
add
add
add
mov
stos
popf
add
add
mov
sahf
add
jnp
roll
cmpsb
add
ljmp
js
mov
add
add
jbe
loopne
add
imul
add
add
add
cli
lds
push
add
adc
leave
ret
push
push
push
push
push
push
push
push
lea
push
call
jl
or
mov
add
pushf
nop
imul
xchg
add
shll
lods
mov
pop
push
add
out
mov
icebp
test
fdivrl
lods
shll
shll
mov
pop
cli
add
add
add
jp
add
add
filds
test
push
outsl
add
mov
add
xchg
mov
lea
pop
push
mov
add
push
push
lea
push
lea
push
push
push
push
push
call
ficoml
mov
lea
jp
add
add
add
lock
mov
jge
ja
add
push
add
repnz
sti
add
add
add
scas
push
mov
fildl
mov
mov
test
add
mov
mov
add
mov
add
add
jo
rol
add
mov
push
cltd
add
popa
and
jge
add
test
add
add
xor
call
shlb
xlat
push
or
not
add
not
sub
inc
lea
xor
pop
sub
pop
push
not
add
rol
add
pop
pushl
call
push
push
push
push
push
push
push
lea
push
push
call
add
add
hlt
push
movsb
insb
fstpl
add
mov
push
add
xchg
add
stos
pop
add
test
add
add
jb
push
in
add
pop
imul
icebp
lds
fists
flds
neg
mov
mov
mov
push
add
sti
add
ret
pushf
mov
js
jmp
add
cli
push
pop
add
add
fistpll
popa
and
shr
repnz
add
cmpl
je
push
push
push
push
call
add
repnz
mov
add
push
cwtl
add
mov
lods
mov
add
fiaddl
lock
int
add
jl
lods
jge
add
pop
sahf
je
lret
gs
add
pop
pop
js
in
scas
add
mov
mov
hlt
stc
cltd
stos
add
pop
add
movsl
add
add
imul
movsb
add
push
bound
les
jge
add
add
push
shr
sub
pop
leave
push
push
lea
push
push
call
stc
mov
pop
add
test
push
test
jl
aam
fldl
add
sar
add
add
in
mov
icebp
aam
jnp
lahf
icebp
add
data16
mov
in
movsb
roll
stc
movb
imul
arpl
add
test
mov
jmp
push
add
push
add
mov
push
lods
repnz
jnp
in
fisubs
add
add
add
mov
add
pop
add
push
sub
pop
pop
pop
push
add
dec
pop
pop
pop
leave
push
shr
pop
add
push
inc
sub
add
ror
pop
ret
push
push
lea
push
push
push
call
lahf
add
fs
je
mov
imul
icebp
data16
addb
sbbb
add
add
add
pop
add
mov
add
add
add
iret
arpl
add
rolb
add
mov
in
jo
add
push
add
add
call
fdivrs
mov
lea
pop
jmp
cmpl
jne
push
push
rol
push
push
pop
add
inc
shr
sub
dec
shl
shr
pop
xor
pop
push
lea
push
push
lea
push
push
push
call
cli
iret
into
jle
test
add
add
orb
fwait
add
add
add
add
js
add
add
cltd
push
mov
add
pop
xchg
js
add
lret
test
je
add
fistpl
add
jmp
enter
roll
add
stos
lret
int3
add
add
test
add
push
add
cltd
jl
add
add
mov
add
frstor
arpl
pop
pushl
call
push
push
inc
shr
shr
pop
call
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
mov
add
add
cld
add
arpl
add
add
call
add
sti
xchg
add
add
add
add
jge
mov
add
add
add
gs
mov
movl
sbbl
add
jns
mov
lea
pop
jmp
push
ror
add
dec
pop
cmpl
jne
mov
push
push
push
lea
push
push
lea
push
call
add
movsl
add
ljmp
out
testl
xchg
add
in
add
pop
clc
jae
cmp
ret
add
xchg
add
add
cmpsl
cmc
movsl
pop
add
test
add
lods
aam
into
pop
add
lahf
fnstenv
lock
fistpll
push
add
mov
add
add
xlat
mov
popa
sbb
add
add
push
add
rol
pop
call
push
lea
push
push
push
push
push
call
mov
add
add
sahf
add
test
add
into
mov
sti
test
xchg
movsb
insb
add
aad
fnstsw
xchg
push
add
add
std
mov
add
push
add
add
shr
add
mov
roll
add
pop
sti
cwtl
mov
mov
jae
scas
push
idivl
addl
je
add
imul
imul
fstpt
lea
pop
push
push
push
shl
shl
add
push
sub
add
lea
sub
lea
pop
add
dec
sub
not
pop
push
lea
push
call
add
add
mov
add
xchg
jle
pushf
xchg
mov
mov
into
add
nop
mov
leave
leave
arpl
movsb
sub
sahf
add
xchg
add
test
add
xlat
pushf
subl
pop
mov
les
ljmp
mov
fiaddl
mov
add
add
add
js
aam
bound
pop
pushl
call
push
push
push
push
push
push
call
cmc
jle
iret
test
bound
fadds
ja
test
push
add
enter
popf
mov
ja
fidivrs
mov
add
loope
xchg
push
jno
scas
stos
add
add
add
add
add
add
add
add
outsl
stos
add
add
add
in
popa
mov
jno
add
xchg
pushf
add
xchg
add
loope
add
aam
add
pop
call
push
push
ror
push
push
pop
add
add
sub
xor
shr
pop
dec
dec
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
data16
in
add
add
jne
data16
add
fsubl
add
add
xchg
test
mov
jbe
add
mov
add
lods
push
add
lcall
mov
add
in
mov
jmp
roll
lea
hlt
add
in
xchg
add
add
mov
mov
popa
mov
scas
pop
add
out
hlt
lea
pop
pushl
call
push
sub
pop
call
push
push
add
inc
shr
push
push
pop
add
inc
add
xor
dec
sub
shl
shl
ror
pop
sub
pop
push
dec
xor
rol
pop
pushl
push
lea
add
shl
pop
call
call
lea
push
push
push
or
inc
add
ror
not
not
sub
ror
pop
add
lea
pop
push
lea
shl
sub
sub
pop
pushl
call
push
push
push
call
cmp
add
add
add
xchg
add
add
mov
mov
add
add
pusha
into
xor
mov
add
mov
out
fiaddl
add
arpl
cld
loope
lods
add
add
add
mov
mov
pusha
out
lods
add
add
insb
mov
pop
push
add
add
add
in
jp
add
pop
add
pop
call
push
push
lea
push
or
inc
add
not
ror
add
xor
sub
add
pop
dec
lea
not
inc
pop
push
shl
add
pop
pushl
call
push
push
push
push
push
lea
push
call
add
add
mov
aam
add
js
shl
add
test
repnz
add
cmpb
pusha
add
jp
fstpt
gs
addl
add
add
lret
jb
out
imul
lcall
fstp
cwtl
lods
add
mov
lahf
push
add
add
mov
add
add
xchg
call
cltd
add
mov
lea
pop
call
mov
push
push
shl
sub
push
xor
add
add
lea
sub
sub
not
pop
xor
lea
pop
push
shr
shl
not
pop
pushl
call
push
push
rol
pop
call
push
push
dec
push
push
pop
add
not
not
sub
shr
sub
ror
ror
sub
pop
lea
dec
pop
pushl
push
push
lea
push
call
jne
imul
add
js
js
xchg
lea
stc
mov
add
scas
add
mov
fbstp
pop
add
test
movsl
add
loopne
add
jbe
mov
mov
add
in
call
clc
add
add
fucomip
mov
movsb
mov
lock
add
add
add
add
add
add
add
mov
stos
mov
lea
pop
call
push
pushl
push
pop
call
push
push
not
xor
not
push
xor
add
inc
rol
sub
sub
add
pop
ror
add
add
pop
push
lea
push
push
push
lea
push
push
call
movsl
xchg
sti
in
test
loop
repnz
mov
add
xlat
imul
cwtl
add
sahf
add
test
out
add
addb
lods
push
les
add
add
jo
xchg
shl
lcall
mov
popf
add
add
mov
test
pop
jmp
stos
jnp
lahf
mov
scas
nop
mov
mov
movsb
shl
roll
mov
ja
add
add
add
xchg
mov
lea
pop
pushl
call
push
push
shl
push
and
add
sub
sub
rol
shr
pop
shl
sub
sub
pop
push
push
rol
push
or
not
add
inc
shr
shr
sub
pop
shr
pop
push
shr
ror
add
pop
call
pop
dec
jne
push
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
and
mov
movsb
add
cmpl
imul
js
sti
add
ja
jbe
rolb
mov
add
add
add
mov
add
jns
push
add
add
pop
sar
add
add
pop
cmpb
add
add
add
add
pop
call
jmp
call
push
push
lea
add
push
xor
add
shr
sub
add
pop
pop
push
push
lea
push
push
push
push
push
call
ja
rolb
mov
popa
vsqrtsd
pop
add
add
mov
push
add
mov
mov
movsl
scas
andl
movl
cmpsb
add
hlt
add
add
push
call
lea
add
add
add
mov
in
js
scas
add
in
add
mov
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
call
jns
jp
xchg
add
add
jb
fwait
add
lcall
pusha
out
lret
mov
mov
int
add
jae
testb
add
add
add
add
add
fists
fidivrl
jae
nop
pop
xchg
movsw
xchg
add
js
mov
pop
add
fiadds
add
add
add
hlt
lea
pop
call
push
sub
add
pop
push
call
mov
push
push
push
call
jecxz
mov
cwtl
add
add
add
imul
add
add
leave
add
repnz
repnz
stos
xchg
add
movsb
add
out
mov
push
add
add
jle
mov
test
add
add
mov
mov
cmpsb
mov
add
pop
mov
add
in
arpl
test
add
test
jbe
loop
mov
xchg
add
add
mov
lea
pop
lea
push
push
sub
push
push
pop
add
lea
sub
add
shl
pop
pop
pushl
push
rol
ror
add
pop
call
push
call
push
push
dec
inc
push
or
inc
add
add
sub
sub
add
sub
add
inc
rol
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
lds
add
add
lret
mov
jecxz
jne
lock
add
mov
lcall
hlt
mov
loopne
lahf
stc
add
push
jge
add
add
in
stc
add
add
add
xchg
add
add
add
pop
mov
les
jns
int
mov
add
push
add
add
add
add
add
insb
mov
lea
pop
pushl
call
call
push
push
call
add
add
aam
push
rorl
add
scas
add
pop
testb
add
add
in
arpl
ljmp
add
mov
add
xchg
add
push
add
add
fidivl
add
xchg
clc
pushf
add
add
popa
add
test
add
mov
pusha
add
repnz
rolb
add
add
cld
lea
pop
mov
lea
push
push
xor
inc
shl
push
push
pop
add
sub
lea
sub
sub
rol
ror
pop
shl
add
add
pop
push
lea
add
sub
add
pop
pushl
call
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
pushf
add
xchg
jns
repnz
add
add
mov
out
jo
ljmp
add
out
out
in
add
pop
add
xchg
pop
add
jp
call
add
add
cltd
add
fnsave
pop
jl
push
xchg
cmc
andl
mov
mov
push
jle
add
les
push
push
push
push
push
push
lea
push
push
push
push
call
cltd
add
add
imul
add
out
in
add
add
cltd
fdivp
add
stc
add
mov
shll
nop
loopne
pop
push
add
mov
add
movsl
mov
imul
add
add
lret
jl
add
and
add
add
add
lods
lret
cli
cli
add
nop
xlat
add
pop
pushl
push
push
xor
sub
push
xor
add
rol
sub
shr
dec
not
pop
sub
lea
shl
pop
push
lea
push
lea
push
push
push
call
mov
test
add
add
add
add
ja
push
cli
popa
leave
fiadds
lret
add
add
mov
in
mov
ja
mov
add
out
addb
add
fxch
lret
out
add
add
filds
mov
jae
out
fildll
test
mov
arpl
shl
add
int3
lea
pop
push
call
push
push
sub
lea
lea
push
and
add
sub
xor
add
sub
lea
shr
add
pop
not
shl
pop
push
lea
pop
pushl
push
ror
not
pop
call
push
push
shl
pop
call
push
push
sub
push
or
not
add
sub
shl
sub
sub
pop
sub
not
pop
push
push
push
push
call
jne
ljmp
mov
add
lock
add
push
loopne
out
mov
mov
filds
add
jbe
out
in
jge
fisubrl
push
stc
add
add
je
jnp
mov
add
mov
loop
pop
add
std
jle
push
add
add
popf
mov
lahf
gs
fs
sahf
pop
fiadds
shll
add
pop
std
push
pop
add
add
xchg
iret
mov
int3
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
sarl
add
add
add
add
add
loop
add
add
add
add
add
add
mov
add
add
popa
lret
into
lods
xchg
lds
loopne
scas
jns
add
incb
stos
out
cmc
mov
into
jecxz
lods
leave
jle
mov
and
call
call
jmp
push
push
lea
push
push
lea
push
push
call
jge
std
add
add
add
pop
lret
out
add
add
movsl
scas
add
add
add
add
lcall
stos
mov
movsb
mov
add
js
out
add
push
jns
jbe
cli
in
pop
mov
insb
aad
movsl
pop
je
add
add
push
hlt
lea
pop
pushl
push
lea
shr
ror
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
pop
fildl
add
add
popa
fildl
add
jle
roll
fdivrl
in
add
add
add
outsl
add
filds
push
into
out
add
outsl
repnz
cmpsb
jb
fildl
fs
sarl
add
ficoml
add
add
cli
int3
add
aam
outsl
lret
add
mov
pop
cld
add
jbe
add
lret
fs
mov
lea
pop
jmp
push
push
sub
lea
push
push
pop
add
sub
dec
rol
sub
rol
pop
add
pop
pushl
push
push
push
push
call
cmpsl
pop
pushf
imul
add
fcom
add
mov
addb
in
add
add
enter
arpl
xor
add
add
mov
ficoms
mov
add
int
out
mov
jle
mov
int
add
shrl
aam
rolb
movb
mov
adc
mov
add
push
push
lea
sub
pop
call
push
push
ror
xor
sub
lea
push
xor
add
not
inc
xor
xor
sub
add
dec
xor
lea
pop
dec
pop
push
ror
lea
pop
pushl
call
push
push
push
push
push
call
imul
add
sarl
mov
add
add
stc
loopne
movsb
mov
cmc
clc
lcall
pop
out
test
fldl
jne
shll
pop
lds
add
add
pop
xchg
stc
faddl
xchg
addb
lahf
mov
add
add
rolb
add
flds
add
mov
popa
loope
fildl
push
add
mov
lea
pop
call
leave
push
lea
push
lea
push
push
push
push
call
add
add
add
lods
add
je
mov
movsb
add
aam
loopne
cmpsb
in
add
shll
mov
je
insb
jae
jle
pushf
imul
add
nop
lock
add
add
notb
out
cltd
andb
outsl
scas
in
in
pushf
add
test
popa
lret
cmc
pop
mov
movsl
pop
pop
add
stos
rolb
les
les
jecxz
nop
ja
js
push
lea
push
push
push
call
xchg
gs
out
stc
xchg
xlat
jae
fdivs
add
add
xchg
add
leave
add
add
add
js
jecxz
jp
pop
push
adc
add
add
add
mov
in
aam
add
xchg
add
sbb
pop
push
sub
add
pop
pop
leave
push
add
pop
add
push
inc
inc
pop
ret
leave
ret
push
push
lea
push
push
lea
push
call
popf
add
jbe
pop
jns
add
add
in
add
jecxz
loop
cmc
lods
test
add
cltd
push
add
hlt
jno
add
add
xchg
in
mov
add
mov
loopne
add
add
add
xchg
imul
ret
in
add
fadds
add
mov
pusha
adc
push
push
lea
push
push
push
push
push
call
mov
loopne
add
stos
lcall
add
add
repnz
out
pop
push
add
jl
add
add
std
jmp
lods
lds
mov
xchg
mov
xchg
outsl
add
add
out
testl
in
add
add
std
push
add
int
pop
bound
mov
pop
mov
lea
pop
mov
push
push
lea
push
push
push
call
xlat
jecxz
lcall
fadds
add
add
add
sbbb
hlt
cld
mov
xchg
add
rolb
add
add
xchg
add
movsl
add
add
xchg
mov
mov
add
mov
subl
add
add
hlt
add
into
cld
in
add
testl
add
js
cld
lea
pop
cmpl
jne
mov
push
push
call
sahf
add
add
add
mov
add
add
add
xchg
add
pusha
negb
in
icebp
lods
add
add
pop
add
add
jb
int3
add
subl
add
fstpt
add
insb
mov
pusha
add
add
fldl
pop
pusha
stos
lds
add
divl
cld
lea
pop
jmp
push
ror
inc
shl
pop
mov
and
push
inc
pop
xor
push
push
push
push
lea
push
lea
push
push
call
std
add
rolb
div
add
add
mov
fwait
cltd
roll
scas
push
cld
jmp
add
out
out
lcall
add
pop
sti
pop
cmpsl
lret
addl
mov
add
jle
cmpsb
lcall
add
mov
add
movsb
add
add
lret
push
icebp
add
jae
add
add
mov
lea
pop
xor
add
xor
push
inc
shl
pop
dec
sub
jmp
push
push
push
push
push
push
lea
push
lea
push
push
push
call
outsl
lea
out
aad
roll
stos
stc
lret
add
add
add
lock
pop
add
mov
rcl
cmpsb
aad
jle
push
mov
cmc
push
movl
add
pop
mov
add
out
add
add
pusha
push
mov
lret
xchg
test
out
add
out
imul
sub
add
add
pushl
push
push
push
push
lea
push
push
push
call
push
add
fwait
int
movb
cmc
jbe
mov
add
hlt
add
stos
fiadds
add
ja
sahf
mov
in
add
xchg
mov
mov
test
lods
add
add
scas
add
addb
lcall
lcall
mov
add
jbe
add
add
pop
add
fidivs
pop
test
add
add
mov
lea
pop
pop
sub
push
add
pop
cmp
jne
mov
lea
push
lea
push
push
push
call
add
clc
push
add
into
mov
rcr
aam
add
add
add
into
enter
add
push
arpl
loopne
jne
add
jge
lcall
cli
push
call
test
imul
add
add
add
pusha
int
cli
push
add
mov
add
sahf
aad
jnp
lahf
int3
add
add
mov
lea
pop
sub
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
shlb
add
sti
mov
in
xchg
mov
add
add
out
add
add
push
frstor
pushf
add
rol
hlt
add
imul
lods
out
lea
add
sarb
stos
ret
test
cmc
andb
testl
pop
add
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
pop
lods
lahf
add
mov
mov
mov
mov
xchg
pop
mov
add
cwtl
icebp
mov
imul
mov
cmpl
add
rolb
add
xchg
mov
add
lret
add
fiaddl
fcom
ljmp
nop
add
addr16
adcl
in
add
mov
pop
shr
add
push
push
call
add
add
mov
movb
ja
jecxz
pop
mov
lock
jnp
idivb
add
jl
fldl
add
test
add
rolb
add
add
add
add
add
mov
add
fxch
add
pushf
add
jecxz
add
mov
add
add
test
add
arpl
push
add
nop
loop
addb
call
mov
add
add
clc
mov
mov
lea
pop
sub
pushl
pop
push
lea
push
push
push
push
push
push
push
push
push
call
stc
scas
mov
xchg
add
icebp
pop
fldl
fwait
loope
mov
mov
fdivrl
add
add
pop
add
push
clc
testl
add
movl
shll
int3
test
les
add
neg
add
add
out
in
outsl
add
add
int3
test
xchg
aam
lcall
lea
pop
shr
push
lea
pop
and
sub
push
push
push
call
add
xlat
add
xchg
mov
loopne
add
add
push
stos
add
add
loope
sti
add
add
movsb
xchg
mov
mov
imul
jns
add
movsl
hlt
pusha
add
out
add
loop
les
add
pop
loopne
jmp
lret
movb
mov
addr16
int
jge
add
add
xchg
jp
lret
add
pop
jmp
lea
pop
cmp
jne
push
xor
pop
leave
ret
push
push
push
push
push
push
push
push
push
lea
push
call
add
jp
add
add
mov
add
jnp
clc
add
add
add
pusha
add
xchg
add
mov
mov
add
add
test
add
in
add
add
stos
in
mov
aad
add
add
mov
jo
stos
add
mov
add
int
add
jl
cmc
test
je
add
test
gs
fiadds
add
pop
mov
add
push
lea
pop
push
push
push
push
shl
ror
pop
push
push
mov
push
not
pop
lea
sub
push
ror
rol
pop
mov
push
add
sub
pop
shr
push
not
add
pop
add
mov
push
sub
inc
pop
add
push
push
call
add
jne
pop
mov
cwtl
xchg
pop
add
add
add
add
add
add
mov
add
pop
cmc
add
push
data16
loopne
out
jns
push
xchg
data16
xchg
push
test
jb
add
add
mov
enter
add
mov
cwtl
cmc
cld
add
into
iret
jno
lret
aam
mov
or
jnp
add
push
rol
sub
pop
xor
mov
push
push
push
push
push
push
lea
push
lea
push
call
icebp
in
mov
push
stos
aam
add
push
testl
call
add
test
add
add
mov
jmp
xchg
add
add
cli
fiadds
mov
add
add
out
mov
fstl
mov
addr16
cwtl
add
xchg
add
push
add
push
jp
iret
add
jmp
add
add
add
add
and
loopne
push
shr
shl
pop
call
push
add
sub
pop
add
cmp
je
add
push
sub
not
pop
cmpl
jne
push
shr
ror
xor
pop
xor
push
shl
add
pop
pop
push
push
push
push
push
call
iret
stos
add
jo
in
enter
push
xchg
xchg
mov
insb
xlat
add
fisttpl
add
add
rclb
add
add
les
add
outsl
xchg
pop
add
stos
add
push
cwtl
jae
lea
pop
jb
jno
cld
push
pop
data16
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
imul
add
fiadds
add
rolb
rolb
lcall
push
pop
add
add
mov
iret
mov
movsb
movsb
add
add
add
push
mov
in
add
outsl
add
xchg
js
addl
imul
in
into
adcb
jnp
xor
icebp
push
add
push
mov
add
int3
lea
pop
pop
push
push
push
push
push
push
call
add
pop
add
mov
mov
int
cmpsl
add
mov
mov
xchg
call
add
add
add
clc
add
in
movsb
add
subl
lods
int3
lds
add
mov
jl
jbe
insb
add
jp
add
xor
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
nop
popl
add
sti
add
fmull
lret
add
popf
fiadds
add
test
mov
xchg
jb
add
pushf
icebp
loop
add
add
add
fiaddl
aad
scas
add
add
xorb
add
add
add
mov
add
mov
test
jp
push
rcll
rcrb
addb
add
push
jge
les
ret
mov
push
push
push
push
push
call
add
add
sti
jnp
rcr
pop
jge
add
push
orl
add
popa
add
mov
lret
add
push
xchg
pushf
add
add
ret
add
pop
lods
add
mov
add
add
add
stc
shrl
lret
add
add
xchg
mov
lea
pop
add
push
shr
pop
push
push
pop
push
push
call
adcb
mov
outsl
add
stos
add
jns
jne
mov
jecxz
jo
add
push
lods
push
jne
mov
jo
add
add
add
jo
test
movsb
add
cli
add
add
mov
adc
lods
lock
add
add
mov
add
ljmp
enter
mov
ja
js
mov
lea
pop
pop
mov
push
lea
push
push
push
call
xchg
add
add
mov
add
add
repnz
sar
add
pop
xchg
add
xchg
cld
push
aad
mov
aam
push
test
add
incb
cmc
je
add
push
loopne
add
add
add
pop
add
add
in
loope
push
fadds
pop
sub
add
add
add
add
add
cmc
mov
lea
pop
push
call
xor
push
push
push
call
mov
xchg
add
addr16
jge
add
rolb
add
add
mov
in
bound
imul
lret
push
sahf
add
scas
in
popa
test
push
enter
gs
stc
xchg
mov
add
add
mov
add
rolb
add
cmpsb
add
add
fwait
mov
mov
stos
add
pop
pop
push
add
shl
dec
shl
pop
pop
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
xlat
add
jb
in
add
add
mov
pusha
mov
add
out
add
int
pusha
hlt
push
pushf
add
adc
add
gs
add
push
mov
jno
jecxz
fcomps
fildl
cli
mov
movsb
fistl
icebp
push
mov
add
push
add
add
ror
add
mov
add
add
lea
pop
pop
push
push
push
push
push
push
call
add
add
out
add
add
mov
add
jb
add
pop
add
add
iret
cltd
add
add
add
lret
mov
add
add
mov
pop
add
rolb
fwait
add
add
add
leave
imul
add
mov
out
pop
lret
xchg
into
fadds
ret
scas
push
test
aad
mov
lea
pop
pop
leave
ret
push
push
lea
push
push
push
call
add
stc
roll
fadds
sahf
add
jle
incb
shr
sarl
pop
int3
popa
add
add
pop
jbe
add
xlat
out
add
push
xchg
add
add
add
add
int3
xchg
icebp
add
add
add
scas
mov
add
mov
clc
add
rolb
into
lods
add
mov
lea
pop
push
mov
push
add
sub
pop
add
push
push
pop
push
push
push
lea
push
lea
push
push
push
call
fwait
arpl
add
xchg
add
add
push
add
pop
add
addb
js
popa
add
into
add
lds
add
add
mov
add
add
xlat
mov
add
mov
add
add
jge
push
add
add
add
add
jno
add
add
ljmp
adc
push
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
mov
loop
repnz
add
add
hlt
shll
add
je
pop
lds
fstpl
add
jae
sarb
scas
add
enter
mov
sti
add
add
test
data16
fcmove
jae
add
outsl
xchg
xchg
mov
out
fwait
add
add
add
cld
lea
pop
push
pop
lea
push
ror
inc
shr
pop
sub
mov
shr
push
push
push
lea
push
push
push
push
push
call
iret
add
add
rolb
add
ficompl
jns
add
add
jge
ret
add
add
add
rclb
pop
push
add
pop
scas
add
add
iret
mov
add
in
jb
jl
add
add
out
add
add
add
fdivrl
call
and
ficoml
push
push
push
call
xchg
fsubs
insb
aad
add
mov
popa
test
add
cmpb
insb
add
imul
sahf
add
icebp
add
xlat
pop
in
add
clc
add
pushf
pop
lcall
lcall
add
xchg
ja
mov
mov
test
mov
add
adc
xchg
pop
add
pusha
adc
mov
add
pushl
push
add
sub
pop
popl
mov
add
push
sub
add
sub
shl
pop
xor
push
ror
rol
pop
lea
mov
push
push
call
int
add
ret
lods
add
add
subb
negl
ret
mov
out
addb
add
add
add
push
movsb
out
add
add
lea
loop
call
add
add
test
clc
add
add
incb
stc
add
jle
clc
add
add
fcmovnbe
fs
testb
int3
lea
pop
add
push
sub
pop
xor
push
add
xor
add
pop
call
add
push
push
push
call
out
rolb
mov
add
popa
std
pop
add
aam
add
xchg
test
add
add
mov
loope
sti
les
mov
add
add
lret
add
add
add
fimull
je
movsb
add
add
stc
xchg
std
mov
jge
add
mov
lea
pop
nop
nop
push
push
lea
push
lea
push
push
push
call
outsl
add
jmp
add
shr
test
add
movsb
scas
lret
add
xchg
pusha
xorb
loope
mov
add
add
leave
in
add
add
mov
jp
add
add
rolb
add
roll
add
in
shll
add
xchg
jge
shlb
lock
lea
pop
cmp
je
nop
nop
push
pop
inc
push
lea
push
push
push
push
push
push
call
cltd
add
shlb
movsb
add
add
push
jmp
add
call
pop
push
jmp
add
add
roll
stos
add
add
pushf
rorl
add
add
xchg
add
add
cld
fucomip
xchg
out
add
test
add
xchg
add
add
test
add
add
jo
add
pop
add
add
fs
add
pusha
add
mov
lea
pop
nop
push
lea
push
push
push
push
call
mov
js
add
int3
add
lock
je
outsl
push
pop
push
add
mov
nop
xchg
mov
rcrl
add
add
fistpl
add
pop
add
arpl
mov
loope
loope
xchg
add
test
add
add
mov
rolb
fiadds
mov
jb
mov
pushf
cmpsb
roll
add
int3
lea
pop
nop
cmp
jb
xor
push
lea
push
push
call
push
add
addr16
call
in
add
les
stc
mov
scas
test
add
mov
add
add
movb
pop
xchg
xchg
jp
data16
add
loopne
add
add
push
cmc
pusha
incb
mov
stos
filds
flds
mov
lds
add
add
sahf
fistps
popa
add
mov
add
test
nop
mov
lea
pop
jmp
push
add
pop
mov
add
push
push
push
push
call
add
iret
add
int3
pop
in
add
lods
push
and
add
arpl
mov
mov
add
mov
mov
pop
add
faddl
add
add
pop
add
add
add
sahf
add
stos
lcall
data16
movsl
add
scas
add
xchg
add
jo
mov
lea
pop
movzwl
mov
add
push
dec
pop
mov
xor
xor
push
rol
pop
shl
xor
shl
push
sub
add
pop
xor
push
push
call
cli
add
mov
xchg
add
mov
add
roll
rcll
in
pop
add
stc
movsl
push
add
add
enter
add
add
int
bound
add
add
mov
add
mov
add
cld
add
mov
mov
lea
pop
shl
push
lea
pop
xor
push
push
lea
push
lea
push
push
call
add
out
add
int
add
add
icebp
add
imul
xchg
add
add
movsb
ja
imull
add
scas
mov
add
cmpsb
idivl
add
pushf
sti
cmc
add
bound
aad
repnz
cmc
add
loop
mov
lahf
add
add
shlb
xchg
lret
icebp
fadds
jle
add
add
fadd
mov
lea
pop
mov
add
pop
push
push
call
scas
add
add
out
add
movl
add
push
mov
add
add
mov
add
arpl
mov
sti
test
add
pop
out
mov
stc
lcall
sarb
push
fnstenv
jne
xchg
mov
sub
add
lcall
pushf
add
arpl
add
sarb
mov
cltd
leave
add
data16
pop
pop
push
sub
sub
ror
pop
leave
ret
push
add
shr
dec
pop
push
push
sub
pop
mov
push
push
push
lea
dec
pop
push
push
push
push
lea
push
push
call
mov
add
pop
pop
cltd
lds
add
mov
pop
add
add
lcall
cld
mov
clc
push
add
nop
push
pusha
xchg
mov
shl
lret
fiadds
add
add
sti
aad
mov
in
mov
jns
stos
add
mov
add
nop
pop
movsl
add
leave
add
pop
push
push
not
shr
pop
mov
mov
push
push
lea
push
call
jne
in
add
bound
scas
filds
add
in
add
add
bound
cwtl
roll
imul
out
add
imul
mov
push
decb
add
xor
mov
jae
roll
in
xlat
call
add
lret
xchg
loop
outsl
add
jo
movsb
add
add
mov
mov
je
xchg
xchg
mov
loop
nop
mov
popa
or
mov
push
not
inc
pop
test
je
mov
test
je
push
shr
sub
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
call
nop
add
addl
add
je
out
mov
arpl
fcoml
into
add
mov
add
add
xchg
add
add
mov
outsl
xchg
sbbb
jno
sar
xchg
arpl
lahf
push
add
jb
fwait
roll
lds
lret
out
aad
fwait
xchg
stc
pop
add
add
insb
xlat
fsubrl
mov
lea
pop
mov
mov
inc
push
sub
ror
add
pop
cmp
je
test
je
mov
push
rol
rol
inc
pop
inc
cmp
je
test
jne
push
inc
sub
inc
xor
pop
xor
push
lea
push
push
call
popf
add
add
jecxz
mov
mov
add
icebp
test
add
jno
add
add
mov
add
pop
xchg
add
jnp
add
add
into
rolb
sti
les
add
idivl
scas
add
add
pop
out
iret
ror
add
add
add
lahf
add
repnz
or
pop
push
not
pop
pop
pop
push
add
shr
pop
pop
leave
ret
push
push
call
add
aad
add
lods
jle
test
in
popf
testl
arpl
jecxz
lahf
add
add
out
xchg
add
flds
sub
pop
movsl
fsubrl
gs
add
add
pop
loopne
xlat
mov
push
mov
movsl
shrl
add
clc
mov
lea
pop
mov
inc
cmp
jne
push
push
call
pop
bound
add
add
gs
add
in
add
loopne
cld
outsl
ljmp
int3
ffreep
push
add
add
jmp
add
jp
mov
arpl
ret
shlb
xchg
scas
add
hlt
cmc
add
add
lret
js
jecxz
mov
nop
add
add
add
imul
mov
fidivl
mov
lea
pop
lea
push
rol
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
iret
add
add
add
add
add
in
add
int
rol
add
stos
mov
sahf
xchg
mov
mov
cmpsb
in
fildl
addb
add
add
add
ljmp
notb
repnz
add
pop
add
lea
mov
mov
jbe
test
add
lret
out
push
push
scas
pusha
ficompl
scas
out
roll
fmull
in
test
add
add
push
add
pop
cmp
jne
push
xor
lea
add
pop
mov
push
lea
push
push
push
lea
push
push
push
call
lcall
ja
add
push
add
out
cld
out
stos
pop
fadds
stos
add
add
fcmove
add
add
shrl
add
add
add
lahf
imul
add
sbbb
jecxz
add
mov
scas
or
addl
add
xchg
add
jne
add
mov
imul
addr16
test
je
push
push
push
push
push
push
call
add
fwait
test
add
fs
add
pushf
add
imul
loopne
test
cld
push
add
mov
add
fprem1
add
stos
push
xchg
lods
jo
add
sti
add
mov
add
movsl
push
shll
mov
fsubs
cmpsb
add
bound
cmpsl
jp
ljmp
lea
pop
mov
push
pop
add
cmp
je
jmp
push
sub
rol
sub
sub
pop
xor
pop
pop
push
shl
pop
pop
pop
push
push
push
push
push
lea
push
push
call
mov
cwtl
jl
add
add
les
add
les
into
mov
add
add
mov
rolb
jne
mov
mov
ficoms
out
add
jb
pop
add
jmp
adcl
push
pop
push
add
xchg
jbe
add
add
lahf
add
mov
leave
add
fmull
ret
lea
push
push
lea
push
push
call
mov
out
pusha
add
clc
push
add
add
add
rcrl
mov
cli
pop
cli
fadds
gs
pusha
xlat
cli
rcrb
in
in
int3
cmc
test
fcoml
mov
push
in
clc
add
add
mov
add
xchg
loopne
stos
jns
add
fdivp
mov
lea
pop
pop
push
ror
pop
pop
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
cmc
fisubs
jb
jne
add
lret
add
add
add
mov
jne
lcall
add
rcrl
cmpsb
movsb
sti
push
push
ljmp
pop
add
call
fildl
mov
add
pop
add
enter
mov
iret
in
pop
scas
add
add
jmp
lea
pop
leave
ret
push
push
push
push
push
push
push
push
call
out
add
xchg
jo
add
xlat
bound
leave
mov
add
add
add
fsubs
add
js
int3
stos
mov
mov
incb
sahf
add
lods
pop
movl
add
add
fcomip
xlat
add
push
add
add
xchg
xchg
pop
add
mov
mov
lret
mov
add
add
mov
push
add
add
add
lds
icebp
mov
lea
pop
mov
push
push
push
lea
push
call
add
push
add
pop
jp
add
int
lcall
add
add
push
add
repnz
xchg
popf
jbe
test
add
add
mov
push
add
add
add
ret
add
icebp
stos
mov
xchg
fwait
pusha
mov
int3
add
add
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
cld
pop
add
mov
add
add
add
add
add
add
add
add
stc
add
jp
aad
stc
xchg
gs
add
push
stos
mov
jle
mov
rolb
popa
call
out
test
ljmp
outsl
addl
add
add
add
mov
lea
pop
pop
pop
pop
push
push
push
lea
push
push
push
push
call
add
add
push
add
cltd
push
jbe
imul
push
lods
nop
gs
add
hlt
fldl
add
mov
cld
add
fsubl
add
std
mulb
data16
xchg
out
add
add
push
iret
mov
std
add
les
jb
xchg
ja
jp
add
jae
loope
add
xchg
mov
add
add
add
pop
leave
push
not
pop
ret
push
shr
sub
sub
pop
rol
rol
push
push
call
xchg
cli
shl
imul
mov
imulb
bound
add
leave
jne
hlt
jbe
stc
not
stc
add
add
icebp
add
add
cli
xchg
mov
mov
test
test
add
push
mov
mov
add
into
loope
add
pop
clc
add
add
add
mov
add
mov
lea
pop
xor
inc
cmpb
jne
push
add
pop
ret
adc
jno
xchg
and
and
xchg
and
pop
and
insb
and
sub
and
scas
and
push
and
mov
jno
push
cmp
adc
jno
add
add
incl
fsubp
mov
shlb
inc
leave
xor
mov
push
jecxz
les
xchg
clc
clc
lahf
insb
pop
xchg
std
imul
outsb
mov
outsb
inc
sub
inc
or
inc
lahf
leave
icebp
inc
mov
pusha
xchg
sbb
jb
scas
out
subl
nop
xor
mov
dec
mov
xchg
sub
ja
dec
pop
jb
jb
mov
sub
pusha
daa
pusha
cmp
add
jecxz
xlat
sti
in
cmp
push
imul
filds
sahf
jmp
mov
pusha
cmpsb
imul
add
scas
lods
inc
aaa
pop
pop
nop
jecxz
js
imul
pop
popf
enter
or
movsl
jo
sub
dec
xchg
xchg
xor
das
push
sbb
int3
add
cmp
xor
enter
inc
adc
scas
ds
jle
and
mov
repz
xchg
fcmovnbe
push
inc
push
cld
mov
dec
mov
andl
cmp
or
xchg
mov
adc
ja
ljmp
xor
or
sub
push
into
xchg
subl
in
movsl
dec
sub
inc
mov
xlat
je
sahf
inc
cmp
and
lods
push
cmpsb
loop
ljmp
cs
clc
jecxz
xor
jle
lods
in
in
push
stos
nop
imul
iret
pop
and
xchg
adc
out
inc
insl
into
std
fst
sbb
pop
cltd
inc
and
je
lcall
ljmp
or
or
jae
inc
or
dec
pop
sbb
clc
mov
and
jg
sbb
jmp
ja
iret
dec
sbb
and
mov
das
dec
push
loop
stc
stos
cmpsl
dec
pop
stos
or
stc
incb
in
mov
or
mov
mov
sbb
or
into
push
arpl
les
iret
inc
test
and
mov
add
add
adc
in
stc
jbe
mov
lret
cmp
mov
or
sbb
xrelease
rolb
mov
mov
aas
xchg
and
into
xchg
jb
fdivl
or
hlt
or
push
sahf
add
jno
push
bound
shll
and
add
loope
ljmp
aad
enter
clc
dec
stc
inc
int3
cwtl
test
and
inc
jle
xchg
jp
jg
lret
fnsave
pop
rcll
shll
add
mov
jmp
insl
mov
loopne
test
insl
inc
dec
aas
pop
push
lret
add
shll
dec
cmp
mov
fimuls
repnz
scas
cmc
es
adcb
out
pop
ret
das
xchg
cmpb
pop
push
ljmp
cmpl
ds
stc
in
insl
repnz
or
mov
xor
incl
lret
xchg
push
hlt
push
dec
ss
mov
push
push
pusha
jecxz
cmp
mov
jbe
insb
mov
test
push
mov
xchg
xor
movl
mov
mov
sbbl
cmp
ret
push
out
xor
xor
lods
adc
in
test
inc
jmp
push
test
jmp
push
push
and
pop
xchg
leave
enter
out
mov
ljmp
adc
inc
and
je
cmpb
scas
jo
or
loopne
out
jmp
cmp
cmpsl
inc
xchg
call
stc
jns
or
scas
push
in
xor
sbb
dec
fcomps
lods
aas
int3
xlat
out
pop
dec
pusha
mov
xchg
and
jmp
aad
cvtps2pd
inc
push
push
imul
test
ret
jge
jmp
into
fdivl
jg
ficomps
pushl
jbe
mov
mov
jg
test
fisubs
stc
fwait
repnz
xchg
js
and
aam
lea
lods
cmp
dec
cmc
or
push
or
cmpsb
das
xor
and
out
inc
daa
fidivrl
mov
gs
out
xchg
mov
and
mov
loopne
lret
repnz
xchg
dec
push
cli
push
mov
orl
pop
movsb
pushf
mov
mov
dec
test
in
scas
dec
outsb
outsl
xchg
outsl
push
insl
pop
test
pop
or
clc
add
popf
fcmovnu
ret
enter
dec
andl
xlat
repnz
cli
mov
dec
mov
stos
ss
mov
sub
mov
jae
fsqrt
test
arpl
inc
mov
loopne
jge
loope
xorb
adc
jle
jbe
push
fstpl
adc
jg
cmc
inc
mov
cwtl
or
xchg
imul
jge
lret
mov
sub
lock
int3
mov
mov
sub
cld
and
xor
outsb
std
push
jge
adc
sub
mov
fndisi(8087
test
imulb
mov
adcb
fxtract
sti
sub
cli
jnp
loopne
sbb
or
add
jp
sahf
push
rcr
repz
add
cmp
jns
xor
push
push
xor
and
lods
mov
outsb
xchg
jge
dec
int3
dec
dec
push
dec
shll
xor
lods
cmp
lret
clc
fdivl
push
sbb
push
stos
sahf
pop
pop
lea
cmp
mov
xchg
sub
mov
or
sar
mov
and
psubsb
imul
inc
lret
mov
cmc
pop
arpl
xchg
add
nop
xchg
mov
in
sub
test
popf
scas
mov
sub
sbb
pop
outsb
sub
mov
je
cs
sub
rcr
push
arpl
inc
cmc
adc
addb
xor
cmc
cli
adc
scas
icebp
jne
cwtl
int3
mov
pop
lret
pop
jmp
pop
cmc
icebp
ja
cs
clc
dec
bound
mov
cmpsb
addr16
sbb
lcall
push
aaa
sahf
std
cwtl
or
mov
jmp
cmpb
add
fmull
nop
add
mov
stos
repnz
xchg
fldenv
repnz
pop
adc
imul
int
xor
sbb
push
or
mov
test
adc
jl
test
inc
stos
sbb
cwtl
pop
jecxz
insb
insl
stos
aas
mov
add
sti
cltd
aam
and
xlat
sbb
or
push
add
and
xchg
negb
cltd
imul
or
sub
ss
loop
fnstenv
xchg
jo
inc
cmp
imul
xchg
cs
and
lret
cltd
pop
jb
popa
flds
mov
inc
lea
sti
loop
fildll
or
xchg
cli
dec
repz
pop
push
pop
jmp
or
lahf
fs
sub
cli
testb
les
int
cmp
add
mov
xchg
add
cmp
jge
movsb
dec
fwait
mov
hlt
inc
rorb
mull
mov
inc
dec
pop
cmp
lahf
aam
inc
lock
sti
std
jg
mov
adc
and
sbb
jnp
int
stos
out
lea
int
cli
scas
xor
sub
pop
call
jg
push
xchg
xchg
inc
adc
popf
int3
ds
or
imul
jb
call
push
outsb
sbb
enter
dec
clc
cld
or
inc
mov
testb
out
lcall
stc
push
add
jbe
cmp
jne
add
add
push
scas
cli
div
add
push
push
and
cs
stos
or
jmp
xchg
mov
xchg
jae
lea
cmp
pop
fsubrl
inc
scas
or
and
rcll
dec
cmp
lret
adc
cld
in
mull
xchg
pop
cmp
pop
push
in
addr16
xor
push
dec
stc
bound
jecxz,pt
fildl
push
out
arpl
in
leave
mov
sub
pop
xchg
xchg
fsubrs
push
adc
sub
mov
fimuls
fdivl
cmc
or
pop
push
stos
push
mov
test
ja
cmp
movsb
scas
popf
sub
adc
jbe
push
dec
push
dec
jo
sbb
jl
je
mov
jns
cmp
mov
sbbb
pusha
dec
cmp
pusha
jo
or
push
xchg
test
push
out
sub
repz
jl
dec
sbb
xchg
jecxz
xor
icebp
dec
pop
lock
inc
mov
cmp
mov
push
test
mov
push
mov
sbb
dec
dec
ja
mov
mov
xor
inc
mov
pop
mov
js
xor
rol
dec
cmp
rorb
push
fwait
adc
xchg
mov
push
std
iret
pop
mov
stc
jmp
mov
aam
pop
ja
sti
mov
adc
sbb
cmpsb
add
add
jno
imul
xchg
xchg
mov
mov
push
lcall
hlt
dec
or
cmpsb
aam
pop
jl
xchg
mov
dec
jo
mov
jmp
push
scas
or
ja
xchg
add
cmp
xchg
or
pop
dec
scas
and
mov
xchg
sub
cmp
adc
cmp
mov
push
out
cmp
push
cli
cs
mov
mov
cmp
subl
mov
in
push
cld
sarb
loopne
mov
xchg
and
sbb
dec
xchg
rcrb
aam
mulb
mov
mov
inc
push
jae
xorl
push
shll
jecxz
dec
jae
lods
lret
jbe
data16
or
stos
fidivrl
mov
jg,pt
dec
mov
cmp
sbb
loop
pop
dec
push
sub
popa
dec
mov
xchg
adc
pusha
xlat
int3
negl
lea
das
mov
lea
sbb
pushf
loop
pop
inc
addr16
mov
pushf
mov
insb
or
push
stc
or
movsl
inc
dec
xor
lret
stc
pushf
pop
fcompl
in
jecxz
xor
test
stos
jnp
jp
pop
cmp
or
pop
pop
jge
mov
add
dec
std
insb
push
in
xchg
push
lds
addl
mov
pushf
adc
idivl
sub
subb
add
pushf
adc
mov
adc
mov
pop
xchg
sbb
imul
xor
mov
std
mov
inc
mov
fs
test
and
dec
mov
in
scas
or
push
outsl
push
dec
rcrl
cwtl
sti
dec
enter
sbb
ljmp
scas
mov
mov
push
inc
dec
movsl
mov
aad
adc
add
dec
les
inc
pop
dec
mov
inc
arpl
mov
mov
pop
fmull
addl
lcall
popf
fs
and
dec
mov
fs
mov
ret
roll
inc
addr16
xlat
sub
xchg
and
and
and
cs
cmp
mov
or
ret
cmp
mov
loope
insb
into
imul
test
push
les
and
mov
ret
mov
ss
fildl
bound
jno
movsb
xor
idivb
scas
mov
mov
sbb
rcrl
jb
sub
mov
pusha
popf
sub
mov
sarl
mov
sbb
jbe
sub
cmpsl
rol
or
leave
insb
push
movsl
mov
sub
pushf
jg
loop
test
xchg
inc
add
pop
cmp
xor
loop
cwtl
xchg
pop
ss
lahf
insb
in
aas
popa
push
push
xchg
inc
mov
lods
cs
add
mov
pusha
hlt
sti
fdivrp
mov
adc
or
in
cmc
outsb
sub
cmp
cwtl
in
dec
pop
popa
add
and
lea
push
cmpb
adc
push
out
mov
fs
dec
mov
xchg
fs
or
push
and
mov
xchg
push
pop
push
jle
jmp
pop
sub
push
cmp
xchg
dec
rcrl
ss
lret
call
mov
inc
call
repz
test
sbb
and
and
add
push
push
movsl
cwtl
es
push
popa
dec
out
bound
jno
pop
mov
push
sbb
mov
xchg
xchg
mov
sub
adc
sub
shrl
xlat
jg
arpl
cmp
mov
addr16
stos
lcall
jbe
xchg
roll
dec
sub
dec
mov
shlb
jns
cmp
aaa
jae
pop
mov
pusha
dec
push
xchg
jnp
sti
ljmp
in
fsubl
mov
out
test
dec
out
push
pusha
cld
xchg
mov
jmp
add
fsubrl
inc
std
out
loop
ds
cmpb
cmpsl
adc
mov
addl
dec
rol
xchg
nop
cli
daa
arpl
outsb
cwtl
or
leave
stos
dec
lods
pop
xchg
aam
daa
mov
add
ror
iret
adc
cmp
fistpll
lods
sub
pop
add
cmp
dec
mov
std
xchg
call
test
faddl
inc
adc
pop
mov
fcompl
dec
scas
adc
pop
push
xchg
push
icebp
mov
dec
push
imul
cmpl
jb
sti
sub
inc
add
aad
jno
and
ljmp
push
outsl
shlb
mov
stc
inc
adc
cli
repz
push
loop
dec
aam
sbb
mov
jo
pop
movsl
jecxz
mov
insb
jbe
mov
adc
cli
push
sub
dec
or
or
xlat
add
or
inc
imulb
jle
inc
ljmp
movsb
pop
lcall
dec
ja
jno
imul
dec
push
outsb
ret
or
outsl
lds
jne
ret
stos
je
mov
das
out
add
sbb
add
jl
loop
movsb
dec
repz
push
lret
stos
dec
mov
mov
incb
pusha
out
adc
sbb
test
pop
es
inc
jb
adc
daa
insl
fmuls
cmp
scas
inc
mov
cmp
lahf
mov
or
rcll
xchg
sahf
mov
es
in
add
xchg
adc
xchg
push
add
ljmp
cli
xor
add
adc
call
testb
xor
jo
jne
push
jnp
push
lret
dec
test
dec
hlt
out
shr
shll
sub
dec
loopne
jg
dec
mov
pop
pushf
adc
rolb
notl
outsb
sbb
test
cs
or
inc
shlb
xchg
xchg
lds
sbb
std
mov
stos
cmc
pop
mov
cmp
sub
push
pop
jmp
pop
fmull
dec
push
push
or
jle
pusha
dec
int3
dec
popa
push
or
sub
popf
jae
mov
adc
enter
adc
aaa
sti
imul
lcall
stc
cmp
xor
pop
add
push
ret
or
loop
lods
push
loope
mov
shr
cmp
or
adc
stc
dec
ret
stc
and
sub
xor
in
js
notl
shll
jb
dec
xchg
sub
lret
call
inc
in
mov
xor
xchg
mov
es
setb
xadd
stos
imul
adc
xchg
adc
mov
xor
add
lcall
leave
xor
sub
out
insl
push
jo
lahf
inc
sbb
lret
inc
push
sub
das
mov
cmpsb
cltd
xchg
adc
test
les
xor
jnp
or
popf
pop
adc
sbb
in
rolb
flds
iret
sub
fsubp
sub
jecxz
push
pushf
mov
fisttpl
pop
fcmovnb
sarb
mov
imul
jno
movsb
push
aaa
in
repnz
sub
test
push
xlat
jle
or
sbb
or
or
and
xchg
adc
and
in
popf
imul
ljmp
or
in
mov
rcll
adc
outsb
hlt
loop
sbb
enter
dec
ret
sub
das
aaa
mov
sahf
lahf
adc
adc
push
rcr
and
mov
xchg
pusha
movsb
popf
dec
scas
shll
jno
std
xchg
aaa
loop
loop
xor
imul
dec
xchg
push
call
js
sub
cmp
mov
sub
pusha
scas
sbb
jecxz
jne
repz
loop
loopne
loop
jmp
jne
cmp
cld
xchg
pusha
popf
mov
fwait
xchg
or
mov
adc
dec
dec
fsubrl
mov
in
aaa
lret
sbb
push
sbb
dec
inc
pop
adc
mov
roll
lcall
pop
xor
push
gs
dec
in
mov
inc
xchg
sar
stos
sbb
push
nop
lahf
adc
ds
pop
jb
jle
sub
push
sbb
mov
push
add
stos
imul
or
fildl
push
mov
inc
inc
stos
mov
adc
aas
sbb
aas
mov
mov
adc
insb
aam
mov
nop
jno
sub
lret
xlat
xor
enter
pusha
cmp
in
xor
mov
fs
sub
pop
jmp
hlt
pop
shlb
and
push
ror
xor
into
rcrb
sub
movsl
mov
mov
cli
imul
jg
mov
movsb
addr16
mov
test
clc
mov
rcrl
adc
xchg
hlt
test
pop
lock
dec
hlt
inc
adc
or
aaa
fcomip
mov
push
mov
sbb
adc
orl
cmp
sahf
mov
pop
jne
pop
fs
movl
clc
pop
mov
shll
and
cli
jo
div
pop
imul
cmp
mov
es
adc
xchg
jge
shlb
mov
mov
insb
inc
aad
shrb
scas
xor
stos
sbb
es
sub
jnp
inc
sub
dec
xchg
movsl
dec
jnp
xor
imul
test
mov
ds
scas
push
rcrl
adc
inc
out
pushw
sbb
dec
aad
lods
and
cmp
out
sub
repz
push
push
xor
jo
jecxz
xchg
mov
cmovb
jb
mov
push
jmp
lcall
dec
adc
stos
imul
clc
or
fdivs
addr16
fucomip
mov
dec
mov
pop
daa
je
inc
and
and
stc
shrb
jecxz
lahf
enter
scas
in
xchg
jb
ljmp
xor
mov
dec
adc
in
data16
push
test
cmc
or
call
push
add
jge
xor
push
ds
mov
mov
cli
xor
loope
xor
inc
mov
dec
xchg
clc
shll
xchg
aam
outsb
adc
push
add
aas
mov
push
inc
push
dec
test
loop
pusha
inc
push
insb
cld
std
inc
nop
jns
push
stos
stos
and
fdivrs
sbb
xchg
mov
and
xor
push
push
xchg
cmp
lds
jp
inc
dec
rorb
sub
insb
xor
pop
xor
sbb
lods
mov
mov
mov
xchg
rcr
push
les
mov
int3
movsb
sub
mov
aas
cmp
pusha
in
mov
popl
fbstp
xchg
adc
mov
sysexit
jp
pop
sbb
mov
call
jnp
jp
jne
aam
popa
mov
aas
cmpb
out
sub
mov
movsb
test
lcall
sub
jge
mov
jmp
fwait
int
jecxz
push
mov
in
lds
shrb
sub
mov
fwait
ss
shl
lods
insl
outsb
mov
stc
pop
dec
inc
sub
add
pop
dec
dec
lcall
decl
xchg
cmpsl
adc
out
fdivrp
mov
pop
mov
push
imul
mov
testl
xchg
lahf
sbb
mov
xor
xor
loop
xchg
jmp
pop
or
xchg
xchg
mov
lock
sub
sti
popa
and
dec
adcl
mov
mov
aaa
rcll
push
test
pop
push
rolb
or
sbb
cld
imul
sbbb
jecxz
mov
out
inc
xlat
adc
xchg
subl
int3
or
mov
cld
sbb
inc
faddl
mov
je
ret
lods
ljmp
andl
adc
shl
shll
jno
aaa
add
fldcw
inc
mov
and
test
dec
push
adc
ja
iret
shl
addr16
icebp
mov
jecxz
outsl
dec
lret
js
mov
dec
jecxz
cmpsl
cltd
dec
in
push
stos
icebp
loopne
push
jle
mov
cmpsb
stos
bound
jae
insb
cmp
sub
sbb
jb
or
sti
jmp
cmpsl
daa
and
xor
popa
fistpl
or
movsl
aad
cmpsl
pop
lods
sub
test
ss
imul
mov
sete
filds
fs
inc
stos
add
mov
loop
jg
loope
into
fdivrs
rclb
aas
mov
push
ret
lock
stos
and
cmp
lret
pusha
div
sbb
out
sub
pop
jns
je
pop
comiss
shll
sub
subb
xor
ret
aas
ret
pop
movsb
sti
ret
iret
sbb
add
xor
es
icebp
jae
jecxz
and
addl
and
popf
add
inc
out
xchg
mov
xchg
les
ja
xor
jbe
iret
repz
and
into
jge
repz
iret
rcl
dec
sbb
inc
inc
jbe
jns
repz
sub
dec
xor
inc
xchg
or
inc
movsl
cmp
inc
fwait
sarl
rolb
das
xor
inc
jmp
or
subb
or
out
jns
callw
or
loope
pop
hlt
push
sub
adcl
out
push
test
popf
leave
xchg
leave
pop
and
dec
dec
and
jmp
push
pop
cld
test
insl
test
jmp
sbb
push
shrl
in
insb
xor
jge
mov
jo
cmpsb
cld
dec
arpl
add
dec
ficoms
dec
outsl
inc
imul
sub
xor
ljmp
addr16
test
inc
out
test
mov
jne
test
fs
mov
sub
mov
lea
push
push
dec
xor
es
mov
out
inc
sub
inc
ficoms
cs
je
in
addr16
rcrb
popa
aas
lods
dec
lods
sti
push
mov
xchg
inc
xchg
sar
or
jno
mov
stos
sbbb
cmp
fwait
jnp
pop
or
arpl
jmp
cltd
mov
dec
inc
or
or
jbe
adc
cltd
mov
call
cmp
mov
aad
out
test
imul
test
push
clc
mov
mov
sub
inc
fs
andl
mov
jae
pop
or
dec
adc
xchg
das
sarl
inc
inc
inc
shlb
push
mov
sbb
in
lret
add
test
aam
scas
adc
rclb
scas
dec
aaa
dec
test
cs
icebp
adc
adc
mov
mov
sub
mov
jmp
mov
shlb
push
addb
lret
int3
and
subb
or
outsl
adc
repz
jae
pop
mov
in
and
cmpsl
dec
mov
gs
icebp
mov
divl
mov
je
mov
push
dec
add
loope
repnz
jg
xchg
test
inc
repnz
test
movsb
fwait
add
jmp
in
mov
xor
cmpsl
loopne
mov
stos
push
ss
daa
fmuls
dec
or
sbbl
fwait
test
jnp
je
test
push
shll
mov
mov
xchg
in
mov
shll
xchg
int
imul
adc
pop
adc
sbb
dec
mov
push
stos
and
push
mov
xlat
lret
test
adc
mov
loop
jb
out
orb
repnz
out
lods
xchg
cmpl
movd
daa
dec
sub
into
mov
pop
mov
cli
jl
cmp
cmp
inc
icebp
add
je
sti
aas
or
mov
in
xor
imul
jmp
lahf
shl
push
stos
cli
and
pusha
enter
sub
sbb
scas
ror
jbe
xchg
sbb
mov
mov
cmpl
inc
and
orl
pop
sbb
outsl
inc
sub
sbb
out
mov
mov
lods
orl
cmp
sub
out
mov
aas
cmp
xchg
fwait
and
insb
cmp
mov
sbb
daa
incl
inc
pop
cwtl
iret
inc
imul
inc
mov
jnp
jne
push
shrb
std
xchg
aaa
xor
aam
adc
adc
jle
add
or
push
std
icebp
mov
dec
dec
jl
jle
out
jl
shll
jl
xor
jle
adc
insb
inc
loope
icebp
addr16
stos
clc
cmpsb
pushf
pop
pusha
in
rcll
sub
inc
sub
int
movsb
and
and
gs
data16
aaa
dec
rol
adc
es
fbstp
add
loop
ror
test
bound
sbb
and
pop
shl
addr16
iret
xor
or
mov
push
pop
add
lahf
push
dec
jno
outsl
das
sbb
iret
aas
mov
repz
inc
sub
pcmpgtd
mov
ret
xchg
dec
mov
cld
dec
adc
push
push
jns
mov
jl
add
xlat
cli
out
fst
jns
or
sahf
inc
xlat
mov
addr16
xlat
stos
outsl
dec
addl
and
fdiv
and
hlt
stos
push
mov
sub
addr16
pop
test
roll
or
push
or
mov
or
stos
dec
js
add
push
cmpb
mov
shll
adc
enter
gs
mov
pop
call
loope
ret
inc
insl
popf
sbb
in
cmp
cmp
in
fcmove
xchg
fwait
outsb
inc
dec
div
mov
nop
sbbl
mov
and
push
lods
ror
inc
adc
mov
fsubrl
add
stc
inc
in
fisttpl
pop
lods
mov
push
push
lods
stos
mov
pop
insl
jge
pop
cmp
in
ja
fnstenv
add
sub
sti
pushf
cmp
mov
dec
sbb
loop
sub
jb
pop
inc
jecxz
enter
daa
test
and
xor
adc
xor
add
jbe
xor
sub
sbb
or
pushw
into
xchg
or
outsb
gs
es
jmp
sbb
jg
pop
lahf
jo
lods
imul
das
xorl
xor
aad
pop
push
cmp
fldenv
daa
lock
xor
xchg
test
mov
hlt
cmpsl
cmc
scas
outsb
mov
fdivr
fimull
in
sub
mov
cld
test
cli
daa
shlb
mov
and
into
sbb
stc
and
cmp
loop
xlat
jno
out
andl
xor
inc
mov
idivl
cmp
cmc
sahf
mov
icebp
cmp
inc
outsl
das
pop
jmp
cwtl
and
jl
pop
or
fadd
sti
addr16
inc
lcall
inc
adc
sti
jnp
out
mov
icebp
pusha
jae
imul
addb
mov
pop
out
pushf
fwait
sub
push
xlat
dec
cmp
xor
add
cmpsb
insl
push
imul
adc
mov
cmp
or
leave
push
inc
lds
sahf
data16
push
or
test
push
cmpsl
jns
push
movsb
inc
push
add
inc
or
adc
stos
jmp
pop
pop
int3
test
mov
out
pusha
daa
fnstsw
out
dec
in
sub
mov
std
test
popa
lahf
jbe
push
push
enter
pop
mov
aad
or
cld
scas
add
jle
jg
xchg
repnz
fisttpl
push
sar
add
mov
pop
dec
clc
leave
jl
adcb
lds
push
adc
and
ljmp
sub
mov
jno
repz
add
xor
xor
cwtl
cmpsb
ljmp
adc
ret
push
jl
cs
call
add
mov
jg
push
xchg
js
mov
cmp
sub
fdecstp
sub
imul
andl
nop
jecxz
xchg
int3
loop
ljmp
ret
sub
aam
fcmovne
in
jg
and
mov
mov
dec
gs
out
mov
imul
sub
lret
mov
cmpsb
or
insb
or
adc
sub
push
pop
inc
xchg
mulb
jo
ljmp
int
add
xor
push
dec
sub
xchg
test
inc
jns
or
push
pop
jns
loop
cmp
adc
xchg
out
mov
movsl
inc
out
inc
out
inc
xchg
lods
and
dec
popa
out
out
je
sbb
loope
sbb
xchg
mov
pop
loop
mov
into
pop
int
pushf
push
cltd
jo
hlt
mov
and
push
loope
pop
cmpsl
ljmp
in
test
enter
jne
mov
sbb
test
sbb
add
sahf
addr16
out
popa
cmovl
add
mov
push
and
xor
cmp
popa
add
dec
nop
int
jmp
push
add
stos
jae
xchg
add
jmp
iret
sbb
ds
test
in
leave
pop
cmp
adc
lahf
cmpsl
in
sub
testl
cli
enterw
int3
insl
xchg
xor
push
lods
clc
inc
jmp
fidivs
add
push
adc
push
push
mull
data16
out
xlat
xor
clc
dec
fdivs
xor
sti
jle
loopne
cmpsb
addb
popl
xchg
push
mov
cs
in
mov
dec
loope
pop
pop
int3
mov
iret
lret
push
xor
cld
aam
mov
inc
adc
pop
lds
fucomi
dec
in
mov
xchg
push
adc
push
fcoml
inc
fldenv
sbb
pusha
loop
adc
jo
pop
mov
out
iret
inc
push
stc
xor
mov
push
pushf
inc
in
mov
and
fcoml
inc
push
ljmp
jo
fcom
loopne
sahf
fs
sti
sub
repnz
and
mov
imul
aam
adc
adc
loop
mov
bound
popf
xor
dec
push
jbe
mov
insl
ds
stc
in
sbb
jecxz
mov
pop
loop
ret
mov
pop
lods
std
jecxz
push
dec
or
xlat
imul
lods
test
cmc
sahf
lret
clc
mov
xor
add
insb
ja
sbb
inc
ja
xlat
push
pusha
xor
fs
jb
jg
dec
es
cmc
add
aam
fadd
inc
dec
mov
clc
lret
and
fsubl
push
and
or
xorps
pop
ljmp
cmp
or
cld
inc
jecxz
xor
jl
pop
js
xchg
sub
insb
sahf
push
rcl
sub
cmpsl
sbb
mov
test
mov
or
es
fwait
lret
icebp
fdiv
jnp
jnp
std
into
imul
cmc
mov
ss
mov
jnp
and
add
adc
movsb
je
aaa
arpl
push
hlt
int
test
aas
and
jg
adc
jle
add
push
adc
dec
inc
loope
hlt
mov
daa
neg
ds
pop
test
ret
out
loope
shll
xlat
dec
inc
cmovp
pusha
inc
push
mov
xchg
sarb
push
fildl
mov
dec
lods
popa
push
jno
sub
or
push
mov
push
fs
dec
aaa
push
or
mov
rol
std
ljmp
int3
inc
movsb
sub
loop
mov
pop
shlb
es
sub
cmp
fbld
xlat
add
cmpsl
adc
dec
rcrl
add
xchg
in
je
mov
xchg
cmp
fimull
loope
cmp
adc
int
dec
aam
fldt
dec
add
loope,pt
xor
lods
dec
xchg
mov
inc
fidivrs
sub
sub
jb,pn
icebp
aas
lods
add
in
loopne
movsb
xchg
xor
mov
in
or
pop
lret
pushf
and
movsl
push
insl
shl
nop
cmp
jp
and
push
pop
xorb
mov
push
lods
fcomp
aas
mov
rorb
mov
or
ja
jne
lret
dec
cmp
add
insb
push
cmp
mov
pop
daa
sub
xor
inc
int3
push
adc
mov
jmp
adc
pmuludq
outsl
icebp
dec
adc
push
cmpsl
rcr
call
push
xchg
cmp
cmpsb
int
rclb
add
push
addb
lret
mov
test
mov
cltd
sbb
sub
icebp
cmpl
xor
lret
jb
cwtl
cmp
in
pushf
in
iret
shl
xchg
lods
jb
pop
ret
nop
pop
insb
cmp
popa
push
push
and
mov
jb
dec
icebp
out
sbb
xchg
adc
xchg
push
sbb
push
inc
pop
push
mov
adc
jb
sub
sti
in
adc
mov
js
je
dec
jmp
fnstenv
sti
stc
dec
jne
call
call
inc
pop
out
push
pop
test
jae
lds
imul
int3
rolb
fs
roll
aaa
jp
movsb
mov
push
test
sbb
mov
outsl
dec
pop
xor
add
dec
aam
dec
and
clc
and
cmp
int
or
jge
mov
fisttpll
and
scas
jbe
rorb
scas
jae
in
sbb
xchg
mov
addb
shll
mov
mov
pusha
aas
add
and
clc
pop
rclb
loop
pop
push
adc
mov
sti
pop
popa
std
pop
lea
popa
int3
leave
lods
mov
sbb
adcl
cmp
mov
cmc
xlat
jl
pop
add
stos
mov
into
push
out
fdiv
xor
xchg
inc
es
pop
push
popa
sti
int3
scas
dec
aad
sub
xor
call
scas
inc
ljmp
mov
push
stc
push
iret
xchg
lock
push
xor
lret
int
cltd
add
xor
stos
je
sahf
in
pop
ja
popa
and
xlat
cmpsl
popf
xchg
pop
sbb
iret
xor
or
ffree
inc
sub
faddp
fldl
mov
mov
dec
mov
pop
and
mov
rcrl
push
pop
call
jl
pop
gs
jmp
cld
shll
lods
idivl
dec
fwait
scas
in
movsb
aaa
adc
jle
pushf
mov
push
mov
fstp
dec
push
lret
rorb
aad
jns
loop
add
leave
jo
xor
shll
fisubrl
push
pop
xor
test
in
cmp
int3
adc
mov
ja
sbb
inc
inc
mov
fcoml
jp
inc
jp
cmpsl
dec
movsb
jmp
test
lret
je
push
test
pop
and
or
stos
jb
cmp
or
popa
push
sahf
iret
add
enter
jo
je
mov
mov
xchg
sub
hlt
jl
xchg
adc
movsl
add
cmp
scas
cmc
xor
imul
inc
dec
cwtl
mov
and
pop
pusha
mov
jne
sub
ja
xchg
inc
idivb
xchg
negb
leave
push
sbb
cmc
add
adc
or
pusha
fcmovnb
ret
jns
addr16
data16
stc
jmp
mov
add
xor
aas
add
mov
aad
ss
lahf
or
mov
sub
pop
jge
sub
inc
outsl
fwait
fs
neg
sti
jmp
dec
mov
or
xlat
jnp
int3
rcrl
outsl
mov
xlat
and
sbb
inc
inc
fdivrs
mov
inc
shl
into
jb
pop
add
xchg
add
data16
rcl
jae
imul
cmp
mov
lods
pop
clc
dec
clts
fidivl
es
mov
xchg
sti
xorl
xor
pop
mov
mov
sub
mov
aaa
jo
ret
push
push
fisubl
jb
inc
insb
lods
inc
jl
hlt
js
lahf
cs
das
cmp
enter
aad
inc
dec
insl
mov
pop
cmp
stos
mov
add
loop
lock
xor
add
xor
xor
xchg
mov
xor
imul
dec
ret
aaa
jb
mov
xor
sub
je
jle
dec
pop
mov
inc
and
test
add
dec
push
rep
or
mov
cmc
add
test
sbb
sub
dec
sbb
in
bound
sub
mov
mov
in
inc
xchg
push
movsl
sbb
subl
lahf
scas
mov
repnz
subl
cld
or
dec
xchg
cmpsl
push
fmull
outsb
xor
push
jne
adc
jno
mov
and
adc
addr16
mov
data16
pushf
dec
and
sbb
pop
movsl
aaa
shrb
call
push
xchg
mov
pop
stos
sub
aam
mov
add
stc
ret
int
or
lret
mov
pop
pushl
leave
mov
jmp
xor
mov
shrb
ljmp
test
xor
pop
movsl
std
test
inc
jo
xchg
add
and
xchg
fwait
mov
mov
leave
shrb
stc
sub
inc
movsb
jp
ljmp
mov
movsl
pop
outsb
pop
rclb
fistl
mov
jg
sarl
cmpsl
mov
js
ljmp
adc
fstps
cmp
mov
dec
testb
ret
xchg
pushf
js
in
insb
das
mov
and
push
aam
sub
imul
cmpsl
addr16
out
cmp
jmp
int
in
rcrl
mov
das
inc
cmp
or
gs
test
push
mov
lods
mov
lret
loopne
sbb
dec
mov
pop
in
pop
xor
lret
test
test
out
inc
fidivrs
movsl
jae
jg
adc
lcall
addl
cld
in
fiadds
add
adc
sahf
jb
pop
jnp
fildll
imul
mov
out
pop
lds
mov
repz
mov
mov
adc
cmpl
adc
or
ret
or
lods
gs
jns
push
push
mov
push
pop
orb
or
pusha
xorb
in
js
inc
shl
outsl
and
jno
ljmp
mov
mov
jbe
jecxz
repz
sbb
fstpl
pushf
inc
sub
pop
xchg
stos
push
les
cld
aas
mov
and
xchg
xor
sbb
mov
das
mov
fnstenv
pop
ljmp
push
scas
sti
cld
ret
jmp
hlt
rorl
jno
add
loopne
testl
sbb
stc
jp
out
lods
mov
xor
inc
fs
enter
outsl
icebp
sub
push
fidivs
mov
pop
xchg
sbb
into
mov
loopne
jae
notl
dec
rcll
xchg
ret
movsl
fisttpl
and
int
sub
cmp
sbb
mov
loop
psubsb
in
pop
dec
adc
cmp
jl
mov
sahf
mov
dec
cmp
stos
xchg
cmp
sub
fstl
cmpsl
jecxz
cwtl
push
rcr
jl
rclb
mov
jp
mov
test
out
cmp
testb
in
add
dec
xchg
int
sar
notl
fs
leave
fisttps
je
dec
ret
cwtl
out
inc
rcrb
imul
dec
inc
les
stos
inc
pop
das
pusha
loop
stos
cmpsl
cmp
xor
sub
dec
lret
fistpll
or
js
bnd
xchg
popf
and
jp,pt
sarb
xor
dec
xchg
sbb
scas
sbb
push
fcomps
push
mov
aaa
fistl
cld
std
enter
sbb
mov
mov
pop
mov
out
mov
popf
cld
cmc
les
fisubs
jl
adc
jb
outsl
rclb
outsb
sub
lods
rcll
fists
out
and
inc
or
push
out
cs
out
in
sbb
out
pop
xor
inc
add
sbb
flds
mov
inc
jno
fisttps
sbb
xchg
bound
sbb
jecxz
add
int
stos
cmp
clc
out
cmp
cwtl
or
int
jmp
or
repz
and
insl
ljmp
stc
imul
test
adc
mov
cmp
aas
sbb
notb
xchg
mov
stos
sub
jno
cmp
inc
xchg
sub
add
pop
repnz
sub
test
jecxz
xchg
mov
xor
sub
adc
xlat
dec
push
xlat
mov
jns
xchg
jge
cs
iret
cmp
test
lcall
frstor
jle
lret
in
mov
adcl
xchg
scas
fs
lea
push
sub
shlb
loope
cmp
cwtl
and
out
cmp
movsb
pop
sbb
popf
leave
xchg
repz
aad
clc
sbb
rcl
lcall
jno
in
xor
jae
lods
and
scas
loop
test
mov
push
push
xor
test
adcl
stos
adc
inc
pop
mov
js
pop
or
sbbb
mov
inc
and
shl
test
pushf
into
jmp
ja
movsb
and
add
cmpsl
cmpsl
push
or
add
mov
fistpll
shl
xor
dec
xor
cmp
pop
mov
shrl
mov
enter
jge
xchg
rcrb
mov
sahf
push
pop
push
push
dec
scas
fisubrl
pop
lea
ret
inc
mov
enter
faddl
jle
imul
les
adc
pop
inc
cmc
xor
ljmp
jns
and
mov
mov
push
cld
dec
sub
aad
fisubl
lea
loopne
les
out
or
rclb
cmp
add
out
movsl
jo
mov
jp
repnz
mov
mov
bound
insl
jp
test
test
pop
int3
xor
push
lods
ret
icebp
iret
mov
aaa
scas
enter
loopne
loope
lret
adc
xorb
in
cmpsb
int3
arpl
insl
roll
das
mov
push
inc
sbb
lret
sub
inc
mov
cltd
sbb
imul
call
inc
stos
loop
mov
sbb
push
xor
sbb
or
add
push
js
sbb
mov
movsl
imul
stc
in
std
dec
scas
mov
imul
lock
pushf
mov
mov
mov
daa
stos
data16
or
jg
jmp
shll
lods
dec
pop
pop
imul
mov
sbb
fstl
aaa
mov
dec
bound
or
ret
je
pop
add
test
stc
arpl
xchg
shlb
movsl
aam
inc
sbb
popf
loop
push
jnp
int
cld
sub
adc
cmpsb
pusha
sbb
inc
test
mov
push
cmc
push
inc
xor
test
mov
and
ret
insb
test
std
dec
movsl
jmp
fisttpl
sub
xor
loopne
lret
or
movsl
loopne
stos
jmp
sbb
jmp
mov
int
ds
fs
icebp
in
ja
pop
lea
jns
mov
mov
les
sbb
scas
lods
push
sti
fdiv
ljmp
fmuls
pusha
xchg
pusha
adc
mov
inc
push
in
jae
ss
cmp
fprem
xor
push
aam
xchg
lods
mov
mov
jmp
push
cwtl
pop
into
rclb
xor
lcall
sbb
xchg
lcall
repnz
or
xlat
or
sub
push
cmp
stos
aaa
and
shll
ds
pop
dec
mov
movsl
loope
or
movsb
ja
pop
popl
push
into
in
xchg
add
inc
jno
mov
fucom
outsb
popa
bound
aad
insb
in
stc
jg
jmp
leave
sub
mov
push
sbb
cmpl
incb
pop
lret
mov
ja
jbe
pop
push
push
cmpsb
add
mov
pop
stc
in
das
popf
sti
rorl
aad
jnp
mov
xor
popa
fidivrs
mov
sti
mov
gs
jge
lcall
call
mov
mulb
ja
push
ret
in
lock
xlat
jo
inc
ss
insb
pop
and
cmp
push
fistpll
xchg
dec
into
push
sbb
dec
test
repnz
loopne
sbb
notl
push
mov
mov
mov
or
and
pop
roll
dec
jnp
pop
cld
nop
push
adc
cmp
insl
cmc
aaa
jle
sub
jmp
jge
adc
addb
cmc
and
xor
lods
lds
and
inc
leave
lods
xor
bnd
loop
push
xchg
fsubs
stos
inc
nop
int3
pop
lea
or
xor
add
pop
inc
add
push
xorb
ds
jne
lret
or
adc
ds
or
aaa
push
add
test
mov
mov
shlb
test
rol
xchg
inc
adc
div
push
shr
add
and
loop
imul
jne
lcall
fisttpl
or
nop
mov
scas
or
sahf
daa
push
mov
or
xchg
push
lea
cli
je
jbe
fisttpll
std
add
mov
in
clc
loope
iret
inc
xor
sbb
daa
out
xchg
pop
adc
insl
push
and
push
pop
call
repnz
sbb
inc
fisubs
loop
ret
lahf
xor
sub
lods
push
inc
out
dec
cmp
jecxz
cmp
popa
sbb
les
or
jg
adc
lds
ja
cs
adc
test
mov
add
rcrb
mov
add
mov
aam
sub
fcoms
cli
loopne
arpl
das
push
dec
repz
sbb
sbb
dec
or
outsb
ljmp
mov
dec
push
sub
and
cli
jbe
sahf
jl,pt
rclb
mov
movsb
shrl
pop
dec
ret
xor
sub
popf
fsubl
lds
sbb
clc
lret
clc
mov
xor
es
cs
repnz
lock
adc
mov
stc
pop
jmp
arpl
inc
shl
cmp
rcl
test
sbb
rorl
sbb
inc
jge
shrb
mov
insl
pop
icebp
jp
fistps
sbb
xor
mov
mov
push
add
cld
mov
push
xor
xchg
pop
jmp
pop
mov
push
xor
pop
adc
scas
in
xchg
iret
sub
mov
fidivrs
sub
cli
mov
xchg
dec
shll
adc
cwtl
xor
call
mov
sbb
es
imul
and
xchg
jp
in
call
xor
mov
inc
ds
lea
pusha
jge
cmc
inc
icebp
je
ret
pop
orl
mov
mov
mov
jae
nop
je
jge
mov
adc
xchg
in
inc
cld
cli
mov
dec
push
sub
push
xor
sarl
jno
mov
lds
hlt
push
std
dec
test
hlt
jae
mov
pop
int
inc
ljmp
sub
fwait
inc
push
cmpsl
lods
fwait
push
mov
sub
pop
outsb
aad
loope
jae
scas
adc
dec
sbb
inc
xorb
loope
adc
out
xchg
push
pop
out
xchg
jecxz
outsb
sbb
dec
mov
xor
xchg
adc
rdtsc
je
cltd
lret
mov
pop
ljmp
lretw
or
push
mov
jbe
jo
scas
out
xchg
clc
xchg
push
cmp
xchg
mov
lcall
dec
mov
jl
mov
lret
inc
lods
xor
ja
jns
mov
stos
cmpsl
mov
xor
jle
sub
cmp
xlat
sarl
in
loope
mov
pop
in
inc
pop
mov
lea
push
addr16
rorb
insl
out
cmp
loope
mov
test
cmp
pushf
mov
rorb
iret
dec
mov
inc
out
mov
jge
inc
cs
jnp
subl
push
and
fsts
and
in
pop
push
cmc
lea
sub
adc
cwtl
enter
fildl
bound
iret
add
dec
mov
int3
jnp
add
push
cmp
jecxz
mov
stos
and
add
call
jecxz
pop
xchg
je
push
aam
outsl
adc
fistpll
mov
dec
inc
cmpsl
repz
jns
stos
int3
repnz
push
mov
jbe
mov
jbe
cmp
and
mov
out
fstpt
inc
hlt
mov
pop
push
adc
inc
xor
js
sub
adc
jle
ss
mov
cmp
jecxz
pop
sti
outsb
inc
addb
aaa
push
out
fdivrs
scas
or
xchg
mov
bnd
shlb
sub
out
mov
mov
in
roll
sbb
and
bound
loopne
lods
loope
int
xor
jp
movsb
and
pusha
jg
pop
scas
sub
dec
js
es
in
mov
xor
mov
sub
jno
cmp
dec
adc
les
lret
cmp
ret
fiadds
xchg
xor
rclb
mov
push
push
cmp
jmp
popf
add
push
pop
aas
or
push
stc
mov
jno
pop
jne
mov
out
push
mov
lahf
pop
movsb
jne
pop
cmp
out
mov
push
jbe
push
notb
cmpsb
imul
jno
dec
das
add
jns
dec
insb
mov
ja
sti
out
lods
lret
mov
cwtl
scas
and
cli
mov
mov
insb
pop
pop
lods
sub
cld
repz
lret
adc
lret
shll
mov
push
pop
or
repz
push
or
xchg
test
cmpsl
loop
repz
cmc
repnz
loopne
outsl
jge
push
shlb
sbbb
sub
sub
dec
movsl
adc
cmp
into
fwait
mov
mov
gs
jl
xor
pop
and
ret
movsb
fists
fsubrs
fs
or
add
pop
lds
int
xchg
pushf
xor
add
roll
and
sahf
jge
and
adc
mov
cmp
jmp
mov
and
test
add
and
dec
lret
repnz
jbe
mov
mov
fildl
sub
outsb
cmp
shrl
stc
sbb
jbe
gs
xchg
jmp
orb
loop
popa
lea
insb
or
dec
aas
ret
sbb
nop
adcb
and
mov
adc
cmp
push
push
sbb
and
xchg
jns
out
out
in
mov
sub
popa
out
xchg
fdivrp
lods
dec
mov
js
adc
dec
leave
mov
push
fnstsw
insl
pop
pop
stos
xchg
push
dec
popf
mov
add
lock
mov
scas
mov
pop
orb
rorl
icebp
xlat
aaa
int
pop
insl
test
jae
std
push
xlat
js
add
cmpsb
std
jg
mov
idivl
cltd
aas
leave
mov
mov
lret
aaa
into
sbb
pop
push
dec
mov
push
sub
cltd
ret
ja
rorl
lret
xchg
mov
outsb
das
mov
push
jecxz
loop
insl
stos
sub
loop
dec
adc
loop
mov
cmp
fcoms
dec
fbstp
adc
repz
filds
in
pop
fiadds
sbb
test
mov
and
cmp
and
icebp
lods
out
out
outsb
push
mov
sub
movsl
fnstenv
and
fmull
sbb
push
shl
es
cld
adc
mov
es
dec
idiv
xchg
inc
lods
fld
xor
and
icebp
ds
xchg
movsb
pop
dec
sub
shll
xorb
mov
out
pusha
pop
or
fsubrl
les
xor
mov
fnstenv
cvtdq2ps
push
adc
xchg
gs
mov
test
iret
scas
add
testl
jb
cmc
jge
movsl
jb
ret
lods
loopne
mov
lods
ja
mov
mov
inc
cs
add
in
mov
sub
push
xor
cmp
rclb
lock
add
and
push
push
cmpsl
inc
je
or
inc
xorl
pop
cwtl
or
push
cli
mov
inc
out
or
mov
loop
or
inc
jo
or
sbb
in
fsubrl
nop
arpl
sub
test
popa
sbb
mov
loop
xlat
mov
leave
xchg
stc
push
sbb
shrb
cmpsb
pop
jns
mov
adc
fs
cmp
movsl
xor
jo
fidivrs
cmp
imul
sub
lods
subl
imul
jmp
fsubl
add
in
pop
add
xor
fcomip
push
cmpl
ss
fisubs
negb
sbb
add
jne
scas
mov
mov
mov
add
mov
inc
push
pop
pop
in
cmp
xlat
into
or
inc
inc
lret
dec
jg
lcall
pop
pusha
in
xrelease
out
add
das
loope
pop
fsubrl
orb
mov
jnp
xchg
insb
and
or
dec
insl
idiv
mov
inc
movsl
int
push
cwtl
sbb
in
inc
lahf
xchg
xor
iret
add
out
and
xchg
lahf
shlb
push
push
and
inc
inc
lds
int3
pop
dec
xor
dec
pop
adc
cs
pop
fisubrs
dec
or
mov
push
sbb
xor
push
cmp
adc
inc
les
jb
pop
scas
xchg
stos
call
mov
test
ret
dec
sub
adc
mov
lods
mov
inc
div
or
lret
jmp
aad
ss
sub
dec
jbe
xorl
sub
fdivl
cmpsb
cmp
jecxz
in
add
lret
push
ja
inc
xor
xor
mov
xchg
jo
jle
stos
jle
shl
aad
les
insl
push
jg
xor
jge
jl
jns
or
adc
js
lods
and
and
into
inc
xchg
push
pop
orb
mov
ficoml
jp
or
jae
andl
out
dec
pop
cmpsb
scas
mov
aad
or
in
mov
sbb
push
insl
insb
stos
or
jns
pop
sbb
shll
adc
out
dec
push
adc
scas
xor
xchg
add
mov
ljmp
inc
ret
popa
nop
in
jmp
xchg
out
add
shlb
js
adc
lds
push
adc
mov
mov
mov
aaa
push
push
cmp
pop
lods
sbb
fistpl
lea
and
fdivl
adc
cmpsl
mulb
out
jmp
sub
push
sar
xchg
push
loop
dec
lods
inc
or
test
xchg
or
shl
enter
out
xor
xchg
sub
inc
mov
imul
xchg
shll
out
or
outsb
mov
stc
fstps
aaa
scas
shlb
adc
or
pop
arpl
nop
aas
cwtl
popf
mov
repz
pop
negb
adc
bound
jae
stc
cli
pop
sub
dec
xor
daa
inc
pop
mov
sub
nop
icebp
movsb
adc
dec
iret
mov
mov
sub
out
xchg
dec
ds
push
adc
insb
pop
xorb
pop
hlt
mov
inc
sub
cmp
enter
and
stos
ds
insl
popa
ficompl
inc
daa
movsb
push
outsb
loop
aam
addr16
das
aas
pop
popa
iret
cwtl
push
cmp
or
push
in
jge
pop
jne
ret
push
test
pop
mov
dec
es
scas
adc
scas
or
loopne
movsl
xchg
xor
gs
mov
push
incb
and
incl
test
gs
iret
clc
or
int3
push
fldl
stos
jae
push
pop
inc
adc
xor
prefetcht1
test
mov
movsb
jbe
sarl
loope
ss
jl
inc
gs
add
sbb
es
cwtl
out
xchg
sbbl
mov
pop
push
xor
xchg
aaa
jae
cmp
fcomps
repnz
mov
inc
mov
xor
sub
fwait
or
cmp
js
movsl
aaa
mov
fiaddl
loope
scas
xchg
cmc
call
jb
sub
in
mov
jle
jp
jp
pop
test
xchg
pop
fs
dec
inc
mov
lea
pop
dec
lods
stc
fs
movsb
mov
and
adc
mov
mov
sti
shlb
xlat
sahf
mov
jo
mov
dec
sbb
jle
cmp
test
lret
lret
push
das
cmp
or
xchg
mov
out
inc
or
jbe
xor
push
cmp
and
enter
sti
push
or
sbb
jo
push
mov
fldt
outsb
lods
gs
pop
mov
inc
fildll
or
fnsave
js
insl
pop
lds
ficompl
outsl
mov
cmp
push
jecxz
es
leave
lds
call
cmp
mov
jae
inc
rolb
pop
dec
dec
push
inc
aas
push
sbb
cltd
in
faddp
aaa
or
mov
inc
mov
or
scas
xchg
imul
ss
push
pop
adc
sbb
jp
out
fxch
lret
mov
fbstp
insl
scas
test
adc
test
ljmp
ret
sub
aas
fstps
sub
jmp
out
or
testb
addr16
push
into
fmull
out
lds
mov
xchg
pcmpgtd
arpl
sub
xchg
std
pusha
xchg
jb
dec
push
cmp
popa
add
jns
ds
jg
push
mov
mov
cs
mov
popf
and
mov
jne
fistl
cmp
and
or
les
int
cld
sti
and
stos
xor
insl
daa
roll
movsb
xchg
push
mov
addr16
sub
jl
pop
or
call
jg
daa
icebp
sar
inc
dec
xchg
pop
hlt
orb
fwait
pop
pop
or
clc
mov
xlat
fs
xor
fbstp
xchg
call
out
in
sub
mov
mov
aas
sub
roll
mov
push
in
or
dec
pop
loopne
repnz
add
loope
cs
incb
pop
inc
jno
dec
out
mov
mov
mov
popf
cmp
call
nop
gs
cli
mov
push
mov
adc
in
and
outsb
push
stos
pop
int
mov
push
mov
or
subb
ret
imul
stos
xor
cmpsl
sbb
movhps
stos
cwtl
repz
ret
mov
nop
imul
jmp
jne
cmp
repnz
pop
jne
popl
pop
test
ret
cmpsb
test
popa
adc
test
push
inc
scas
sub
jp
cmpsb
jbe
out
mov
sub
push
pop
out
add
inc
pop
fcmovu
inc
and
mov
adc
stos
in
fdivr
lret
imul
call
push
test
xlat
icebp
dec
js
fdivl
popf
push
mov
inc
call
sub
or
ds
sahf
push
filds
inc
das
and
mov
andl
inc
mov
rcll
cmp
push
or
cmp
cmp
sbb
insb
inc
nop
sbb
jl
sarl
mov
jge
rcll
mov
loopne
sub
or
inc
pusha
adc
sbb
xchg
sub
roll
mov
lret
rolb
jnp
int
push
add
xchg
shlb
pushf
scas
sahf
out
mov
or
out
xor
adcl
cs
cmp
aad
hlt
xor
xchg
xchg
or
pop
out
jns,pn
in
arpl
mov
repnz
bound
arpl
inc
mov
ja
pop
je
and
xlat
insl
movhps
mov
out
daa
out
mov
lret
mov
mov
fsubs
cmp
movsl
std
mov
movsb
std
cmp
in
and
xchg
sbb
mov
ljmp
repnz
xchg
xor
cld
cmpb
or
cmp
sti
adc
lds
add
cmp
adc
in
cmpsl
jbe
mov
jl
lret
inc
test
or
pop
stos
pushf
in
shr
mov
lcall
test
fadd
cld
xchg
sub
or
push
mov
cmp
xlat
gs
sbb
in
jae
sub
inc
xor
hlt
mov
ds
cmp
pop
mov
jge
sti
mov
popa
stos
je
pop
int
jbe
imul
adc
test
outsb
popf
inc
mov
xchg
push
mov
xor
xchg
outsl
enter
mov
mov
test
popf
sbb
jmp
dec
mov
gs
mulb
xchg
cmpb
inc
fisttpl
adc
les
pushf
outsl
push
xor
pop
stc
fwait
ja
and
aad
loopne
mov
shrl
gs
dec
cltd
mov
dec
jbe
sub
lahf
jmp
leave
xchg
dec
dec
xchg
div
pushf
out
pop
push
mov
add
pop
sahf
int3
pusha
pop
sub
sub
lret
out
popf
scas
and
xor
cmpsb
test
les
out
jb
inc
mov
cmpsl
sbbb
cmp
push
mov
leave
pop
sti
push
jns
mov
ficomps
dec
or
add
mov
xchg
lret
push
dec
lods
mov
imul
xchg
sbb
mov
xchg
and
mov
push
repnz
add
add
lods
jecxz
jno
cmpsb
stos
inc
imul
push
pushf
sbb
mov
ss
mov
fldt
ss
les
fldl
gs
cltd
scas
xor
cmp
or
cwtl
mov
mov
sbb
add
inc
pushf
movsb
push
dec
aas
test
pop
fs
cmp
xchg
lcall
test
and
cmp
lcall
arpl
sub
mov
aaa
into
and
out
pop
leave
and
push
inc
test
cwtl
jo
les
ja
aas
xor
dec
jecxz
inc
in
pusha
xlat
adc
mov
mov
add
cmpb
nop
popf
ror
ret
gs
test
cmp
jecxz
xchg
and
mov
mov
mov
iret
lea
sub
and
mov
cmp
add
mov
mov
loop
dec
fs
and
iret
add
sbb
xchg
dec
or
cmp
shl
mov
dec
lahf
xor
dec
sub
mov
jbe
xlat
shl
cmpsb
mov
call
not
push
shll
pushf
xor
or
xchg
lcall
or
sbb
aam
dec
push
pop
add
cld
negb
lcall
add
add
mov
mov
lods
fstl
mov
jge
fcompl
xchg
lods
jno
jnp
roll
mov
insl
repz
mov
ljmp
push
mov
mov
out
xchg
fsubrl
fs
jno
xor
std
ss
xchg
xchg
jno
sbb
sbb
sub
jne
mov
xchg
clc
jbe
jae
or
sahf
or
adc
pop
outsb
mov
js
inc
decb
imul
data16
add
gs
cs
xlat
lret
jge
repnz
addb
pop
mov
popf
mov
inc
mov
mov
test
push
mov
mov
jnp
jmp
lret
xchg
pop
into
mov
subl
sbb
jo
mov
repnz
cmp
add
mov
push
test
inc
stos
cld
pop
inc
stos
cmpsb
cmp
jg
or
lret
es
pop
or
js
stos
xchg
or
lcall
pushf
notb
shr
inc
xchg
out
sub
cmp
outsl
in
fchs
fistpll
cmp
sti
add
dec
jbe
or
mov
sub
mov
es
or
imull
push
and
dec
adc
jp
jb
and
pop
sub
jns
pop
fisubs
stos
and
es
subl
pop
xor
aad
ss
insl
popa
sbb
cmp
and
adc
mov
pop
pushf
sub
or
fmuls
adc
adc
xchg
rep
jg
add
insb
or
sub
sbb
and
rol
lds
insb
ficomps
icebp
mov
inc
add
mov
mov
push
jp
xor
out
dec
jo
adc
scas
insl
outsb
pop
cld
inc
pop
jmp
inc
scas
gs
das
movsl
sti
lahf
xchg
outsl
push
scas
mov
jb
push
fwait
inc
inc
xor
in
stos
sarb
repz
jmp
cmp
sub
add
inc
or
or
push
nop
push
rclb
push
inc
sub
lods
inc
jae
in
fisttpl
sbb
cmp
test
xor
add
add
or
sti
scas
inc
decb
pop
jbe,pt
in
test
add
in
xor
sub
xor
xchg
popf
fsubrl
dec
sbb
aam
insl
mov
jns
ficoml
mov
jae
push
mov
loopne
and
out
in
pusha
add
or
mov
xor
xchg
mov
arpl
aam
movsbl
sarl
in
insb
and
mov
inc
push
push
fcomi
push
xor
adc
mov
int
aaa
or
or
xor
gs
mov
cmpsl
add
jmp
cmpsl
fisubrs
cltd
jg
fmulp
ljmp
sti
adc
movsb
xchg
mov
punpckhbw
mov
add
add
ds
lods
xor
mov
pusha
lcall
xor
cmp
mov
pop
in
xor
xor
sbb
out
cmpsl
inc
add
or
in
dec
mov
jo
push
leave
popa
sbb
cltd
sbb
cwtl
rcrb
cltd
xor
lret
jns
ljmp
negl
movsl
mov
mov
jmp
lea
in
cmp
test
aam
mov
popf
or
fdiv
test
cmp
mov
sub
hlt
push
rcrb
ja
int
mov
adc
mov
popa
call
out
push
out
xor
mov
jb
cmpsb
mov
sub
in
stos
jne
sbb
ret
in
lods
lds
mov
pop
xor
test
nop
imull
aam
sub
inc
push
cmp
rcrl
clc
nop
adc
and
jg
cmc
jp
dec
popa
or
jno
aam
xchg
mov
arpl
add
pop
jb
dec
in
inc
push
cmp
out
sti
mov
mov
jl
xchg
xor
xlat
ret
add
adc
jbe
dec
outsb
pop
shrb
sahf
lahf
leave
les
mov
push
cmpsl
xchg
fsubrl
loop
sub
call
stos
cmpsb
push
pop
mov
sbb
jecxz
shlb
or
cmpsl
mov
xor
add
add
xor
jo
xchg
sbb
add
mov
cmpsb
add
mov
icebp
inc
push
xor
mov
and
mov
xchg
pop
inc
lods
sub
lret
pop
cmpsl
fwait
je
hlt
loope
pop
negb
mov
stos
sti
outsb
lahf
in
lcall
das
sahf
xlat
sub
movsb
sbb
ss
je
add
stc
das
movsl
pop
fcoms
cmp
xor
ss
dec
cmp
mov
xchg
jno
sub
dec
sarl
push
scas
frstor
data16
pop
cwtl
cld
or
int3
jo
jg
pop
idivl
mov
aaa
fs
movsb
ficomps
push
xchg
mov
addr16
push
mov
mov
cld
lds
call
push
or
adc
push
rcl
rep
iret
inc
fsts
pop
ss
clc
test
jmp
std
push
adc
xor
not
arpl
or
adc
outsl
aad
and
in
mov
sbb
jge
jecxz
or
js
in
lahf
push
in
je
lahf
dec
mov
lods
push
xor
xor
outsl
add
mov
fstps
bound
inc
loopne
inc
mov
adc
sub
xlat
addr16
imul
sub
xchg
cmp
out
negb
lret
idivb
in
in
and
das
es
std
lret
mov
cmpsb
in
sbb
xchg
imul
test
popa
dec
sbb
jb
push
and
mov
pushf
inc
notb
xor
test
rcl
pop
sub
dec
test
lods
add
rcll
mov
es
imul
aad
add
data16
or
fwait
scas
dec
add
and
pusha
rcrb
push
pop
sarb
push
sbb
stos
pusha
or
jb
inc
push
sub
pop
jb
xchg
pusha
adc
jo
movsl
sbb
xchg
inc
push
adc
inc
jg
lret
test
das
cmpsb
sbb
aad
adc
jno
xchg
jnp
jo
inc
pusha
or
rcll
loope
fsubl
pop
jecxz
push
or
and
push
cld
fdivrp
lea
loopne
outsl
pop
xor
mov
mov
xor
cmc
pushf
fidivrl
movsl
mov
mov
je
std
push
push
nop
data16
or
cltd
nop
sub
sub
mov
xlat
lahf
push
push
adc
imul
into
xor
xchg
cmc
sbb
imul
subb
into
cmpsl
xchg
jbe
pop
xchg
insb
and
adc
mov
sub
and
cmpb
scas
push
out
dec
push
imul
sbb
pop
mov
xchg
movsl
xchg
mov
push
fiadds
push
sub
test
outsb
jns
shll
call
subl
ret
call
sbb
lea
cmp
jae
xor
jnp
pushw
jecxz
inc
into
cwtl
outsl
pop
fsub
andb
lods
bound
fwait
shll
mov
cmpl
lret
in
cltd
das
jae
ret
and
pusha
stos
iret
mov
cmp
pop
mov
and
insl
cmp
cmc
sub
inc
or
jmp
inc
sub
cbtw
in
push
in
mov
mov
jns
mov
rcrl
push
and
mov
cli
or
dec
pop
leave
inc
test
add
xor
cmp
xor
daa
in
cmp
int
mov
mov
mov
test
add
inc
loope
outsb
scas
loopne
shrl
adc
out
lcall
pop
and
out
cs
mov
popf
cmpsb
push
fcmovb
jbe
stc
into
out
cli
jg
sbb
adc
incb
out
and
daa
mov
stc
test
xchg
inc
mov
cld
mov
cmp
mov
jmp
lret
adcl
rolb
and
push
push
inc
mov
mov
add
in
jge
push
mov
inc
push
lahf
mov
cmc
inc
fiadds
call
jb
pop
out
loopne
or
ss
rcrb
iret
call
loopne
mov
mov
pushf
jns
js
das
data16
dec
mov
out
cmp
dec
cmp
subb
fs
int3
cmp
and
sahf
sbb
push
stc
mov
or
and
sub
call
pop
push
int
add
aad
rorb
movsl
mov
ljmp
fdivl
and
stos
call
sub
pop
fldt
mov
repz
jmp
push
cmc
pop
fistpl
xchg
stos
adc
pop
pop
lock
push
inc
push
bound
cmp
add
adc
pop
sub
cwtl
stos
and
push
cmp
dec
js
pop
cmp
xor
xor
inc
pop
insl
outsb
xchg
mov
or
and
test
insl
inc
pusha
inc
xchg
orb
insb
int3
lret
mov
sar
test
decl
inc
call
mov
stos
push
jne
std
sbb
inc
jae
int3
test
xchg
xchg
add
loop
inc
ret
pusha
pop
pop
fwait
xchg
xor
pop
repnz
push
or
cmp
in
sub
pop
jo
movsl
ss
xchg
push
xchg
mov
fidivs
mov
mov
cmp
sub
dec
fstpt
jl
test
popf
int3
popa
xor
adc
pop
loopne
inc
sbb
test
rclb
in
mov
scas
out
push
or
aad
cmp
mov
adc
push
push
cmp
push
sbb
cmp
lods
mov
jne
ja
fcoml
in
pop
dec
sub
sub
movsb
or
sbb
in
sti
mov
pop
xlat
js
bound
ja
rclb
cmp
inc
aas
add
xchg
push
lcall
fists
cltd
movsb
sti
jg
and
lock
enter
fildl
fstpl
shll
xlat
xchg
cmp
int
add
push
and
addr16
push
inc
mov
enter
xor
push
mov
mov
jbe
aad
jmp
in
xor
cmp
inc
mov
push
push
clc
sbb
push
icebp
out
push
xorl
xlat
movsl
loopne
lcall
sahf
dec
xchg
arpl
and
xchg
dec
out
xchg
shr
ljmp
cmp
pushf
jb
fnstsw
pop
push
mov
fwait
into
lods
push
inc
adc
repnz
clc
or
adc
jmp
arpl
fbstp
and
dec
in
sarb
xorb
or
jnp
dec
cmp
test
lcall
sbb
aaa
adc
jge
cmc
test
mov
add
int
pop
rcll
push
mov
fisubs
mov
jp
in
mov
adc
ljmp
push
sbb
jg
in
push
aas
adc
das
aas
xchg
mov
dec
cli
out
push
fcmovu
ds
adc
lret
in
frstor
std
pushf
sub
scas
lods
xor
adc
testl
pusha
lock
decl
pop
mov
jecxz
stos
loop
shl
pop
fisubrs
int3
icebp
frstor
cmp
adc
aam
scas
push
xchg
sub
mov
addl
sub
xchg
xor
mov
sbb
pop
scas
add
pop
inc
cmp
cmpsb
inc
sub
xlat
int
ret
pop
imull
xor
popf
inc
ljmp
cli
cmc
and
test
mov
jnp
or
lcall
push
ja
jge
xchg
cld
gs
jne
jns
pop
jne
cmc
mov
inc
insl
cmp
push
jp
adc
mov
lea
mov
jne
movsb
cmp
xor
int
jns
and
je
movsb
dec
hlt
xchg
in
in
sub
insl
jnp
fldpi
mov
jbe
dec
mov
addb
leave
cli
ret
xchg
ds
sbb
pop
shlb
mov
push
inc
jecxz
inc
cmp
insl
xor
lds
xor
addps
arpl
mov
cmpsl
cld
dec
sub
mov
add
das
adc
into
cli
push
data16
out
jne
push
sarl
movsb
or
cltd
gs
fmuls
add
push
mov
ret
popf
jne
pushf
mov
movsl
mov
pop
sub
mov
dec
or
add
push
adc
pop
sahf
sub
jp
fs
sub
ret
cld
mov
lcall
push
pop
les
loop
jmp
or
add
sub
call
inc
lea
or
jmp
xchg
je
in
in
test
sbb
jno
adc
stos
push
out
fcmovnb
std
or
je
xchg
or
lret
in
add
lds
lock
sahf
lcall
fsts
and
popf
enter
movsl
mov
xor
adc
and
mov
jo
repz
cmpsl
mov
mov
gs
lock
push
dec
icebp
enter
add
cltd
lea
out
in
lods
lods
mov
jae
add
inc
mov
sub
outsl
pop
insb
lods
xor
rolb
mov
lods
out
jns
adc
or
sahf
daa
in
in
cli
push
or
imul
test
nop
cltd
negl
test
cmp
push
pushf
imul
dec
scas
loope
out
and
lds
ja
mov
xchg
pushf
cltd
jp
out
sub
mov
or
xor
adc
mov
leave
shll
dec
outsl
movsl
adc
xor
clc
addr16
cli
imul
jecxz
mov
jo
out
jmp
push
mov
lret
and
sbb
popa
jne
in
ret
mov
cld
cwtl
or
sub
fsts
aaa
mov
aad
repnz
mov
inc
in
loop
cmpsl
cmpsl
imul
movsl
adc
in
popa
setl
popa
gs
mov
int3
lret
or
addr16
test
mov
sbb
mov
call
daa
rcrl
subb
sub
jnp
and
or
movsl
dec
int3
xor
out
inc
xor
movl
sub
ds
xchg
push
es
mov
mov
jecxz
frstor
rclb
popf
add
daa
fninit
hlt
aaa
andb
lahf
inc
ja
add
jo
mov
sahf
insb
ljmp
call
dec
hlt
inc
ret
cmc
sahf
addr16
dec
repnz
pop
rcl
inc
or
aam
mov
jle
mov
clc
mov
and
stos
sub
rcll
das
mov
es
pop
and
sub
adc
icebp
sbb
lahf
mov
cmp
mov
mov
std
mov
nop
lods
xchg
cmp
add
inc
subb
jno
dec
pop
cmp
fs
testl
cmp
scas
add
inc
xchg
ja
stos
xor
add
clc
adc
int3
sbb
adc
sti
jmp
jl
push
jb
out
jl
in
mov
lret
adc
test
clc
cltd
flds
fldt
cltd
add
loope
cmp
push
sahf
arpl
cmc
and
sbb
mov
jno
sbb
repnz
into
js
push
je
push
adc
pop
mov
jb
jp
mov
fwait
movsl
js
dec
pop
shrl
add
xor
mov
cs
pop
out
fisubs
cli
push
repnz
repz
ds
mov
push
mov
outsl
pop
xchg
ret
sbb
popa
xchg
addr16
orb
add
fdiv
mov
cmp
std
jg
xor
fcoml
jno
cmp
aam
out
adc
lock
mov
cmc
ljmp
movsb
subps
popa
orl
sahf
imul
mov
js
stos
xchg
or
fcompl
cmpsl
dec
pop
adcl
rcrl
inc
inc
imul
lcall
int3
scas
imul
cmp
sub
mov
cmp
pop
jo
lret
adc
xchg
jmp
addr16
call
movl
fucomip
sti
or
dec
xchg
enter
lods
cwtl
fs
mov
inc
jg
pop
lea
divl
cmc
pop
inc
in
insl
lahf
mov
xor
jno
lret
adc
outsb
stos
and
add
mov
pop
push
xor
push
mov
sbb
in
inc
cmp
sub
adc
lea
push
outsl
mov
or
sbb
adc
adc
jl
pop
push
pop
int
addr16
dec
jns
mov
dec
enter
sub
mov
mov
movsb
mov
sarl
in
inc
mov
data16
push
or
lds
pop
xchg
adc
lds
stos
adc
js
or
inc
sub
sbb
pop
lret
push
dec
xchg
rcrl
leave
das
cmp
jge
clc
cmp
sub
xchg
repz
enter
sub
test
mov
pop
test
xor
int
shl
ss
and
lods
add
xor
gs
mov
adc
push
je
push
int
xor
adc
imul
test
jg
adc
cld
mov
pop
xor
jbe
nop
add
mov
lcall
jno
mov
sbb
mov
leave
xor
mov
aad
dec
dec
mov
leave
rcrl
int3
lods
mov
lret
mov
rclb
cmc
cmpsl
sub
mov
leave
jns
leavew
ror
popa
fists
fdivl
insb
cmp
xchg
pop
sbb
push
shlb
push
ljmp
dec
outsb
pusha
jle
dec
std
sbb
ja
xchg
stc
mov
mov
loope
dec
push
fsts
push
nop
cmp
loopne
mov
les
or
in
adc
imul
and
cmp
jl
cmp
loop
or
jno
cmpsl
xor
and
in
or
inc
or
mov
ss
popf
icebp
xchg
push
sbb
sahf
jne
and
nopl
mov
jns
jb
loopne
push
repz
insb
pop
stos
loope
push
xchg
aas
pusha
sub
mov
push
xchg
fsubr
xchg
xchg
ljmp
inc
cmpsl
mov
dec
jo
int
dec
bound
arpl
lahf
cmpsl
ja
ret
cmp
cmp
push
cs
dec
ffree
lds
out
jge
int3
pop
xor
xchg
fucomip
pop
outsl
pop
mov
testb
and
sbbl
xchg
adc
daa
shll
mov
insb
stos
nop
xchg
and
pushf
push
jns
ds
scas
cmpsb
cmpsb
xchg
lcall
xchg
and
inc
mov
fistps
jmp
dec
out
negl
out
ss
cmp
sub
imul
mov
and
fwait
sbb
mov
xor
inc
in
sti
cmpsl
into
lea
mov
sub
mov
cmp
into
bound
out
xchg
fdivrs
dec
xorl
adc
mov
pusha
arpl
push
gs
ss
aam
int3
pop
jb
insl
inc
pushf
insl
nop
jmp
xor
ret
xchg
fst
add
pop
or
xor
cmp
pop
scas
cs
push
sbb
inc
lods
mov
pop
or
pushw
pushf
pop
mov
sub
ficomps
iret
lea
adc
push
and
mov
push
mov
sbb
scas
jo
jno
push
xchg
cltd
xchg
cs
int
push
out
daa
cmp
imul
ss
mov
arpl
sahf
loop
push
push
and
mov
jmp
xor
ss
divl
push
cli
push
lods
ja
insl
out
out
push
push
mov
xor
mov
or
xlat
or
adc
push
idivb
mov
add
sti
fistps
ret
push
add
lods
loopnew
xchg
mov
insl
leave
or
jbe
repnz
stos
xchg
inc
sbb
mov
or
mov
cmp
inc
insl
or
jno
push
sbb
loope
push
das
fwait
int
xlat
int3
out
aam
xlat
cltd
add
jnp
fistl
shll
rcll
js
scas
jle
mov
sbb
adc
adc
mov
daa
mov
sbbl
mov
push
cmp
sub
ret
xor
rclb
jp
data16
xchg
insl
popa
test
paddsb
hlt
lret
sub
dec
cmp
xor
repz
pop
nop
leave
cmpsl
sub
aaa
lahf
fisubl
sub
sub
outsl
outsl
adc
popf
mov
inc
hlt
or
dec
sbb
test
xor
scas
add
add
jl
push
mov
fld
stos
mov
lret
popa
shlb
push
out
lahf
call
fstl
das
mov
sti
dec
mov
cmp
scas
clc
fisubrl
or
add
mov
movb
jnp
inc
cmpsl
jbe
ss
dec
inc
mov
adc
negb
negl
dec
cmpsl
addr16
in
loope
sbb
mov
xchg
mov
adc
popa
lcall
int3
mov
mov
stos
fldl
jg
test
insb
sbb
fistps
xlat
ret
imul
sub
add
push
push
ret
mov
std
sub
sahf
test
fimuls
add
and
sub
mov
xor
mov
jno
mov
cmp
in
mov
ljmp
andl
pop
insl
adc
mov
mov
xor
lea
inc
xor
imul
rorl
cmp
fs
cmp
or
sarb
shrl
jecxz,pt
adc
xchg
dec
in
sahf
fildl
and
pop
testb
ror
push
aam
lahf
mov
nop
jmp
ja
faddl
cli
test
nop
aam
jnp
test
out
decl
and
xor
gs
cli
lahf
fdivs
movl
test
cmpsl
repnz
test
pop
mov
cmp
jmp
ret
lods
in
dec
out
dec
add
or
mov
cmpsl
divb
jp
stc
add
ficoml
ljmp
add
cmp
nopl
dec
mov
fistpl
loope
outsb
call
inc
test
jno
lret
pop
jae
adc
ret
xchg
cmp
inc
sti
cwtl
test
iret
jg
loope
ds
and
out
test
mov
xor
sub
outsb
ficoms
sbb
sub
jge
jge
sub
out
xchg
fidivl
and
add
test
or
hlt
add
pop
and
stos
mov
arpl
cmpsl
in
popa
or
push
rcll
adcb
mov
jl
aad
xchg
arpl
cmp
jae
pop
ret
ss
xchg
in
push
xor
and
and
mov
sbb
ffreep
enter
fwait
inc
xchg
iret
mov
rclb
outsl
push
xchg
push
cmpsl
xor
xchg
inc
gs
push
push
pop
pusha
loopne
das
sbb
in
adc
lock
mov
stos
mov
mov
push
cmp
jp
clc
jge
pop
out
hlt
add
mov
jno
scas
and
cld
mov
lods
adc
fadd
push
mov
movsl
cmc
adc
dec
mov
xlat
and
add
scas
test
repnz
loopne
jp
in
adc
push
shlb
je
lahf
inc
jbe
bound
xor
jb
pushf
jae
stc
fld
push
les
cmpsb
pushf
lea
inc
jg
pushf
pop
pusha
shlb
scas
jg
push
rorl
mov
andl
add
imul
pop
cmpsb
cmpsb
call
ljmp
dec
mov
jg
ds
je
negl
daa
push
xor
enter
repnz
imul
jno
adc
negl
push
out
mov
into
jne
lds
repnz
das
imul
mov
adc
mov
das
sbb
cmpsl
xor
pop
inc
lahf
roll
sti
imul
in
test
push
sti
test
pop
jecxz
popl
push
repnz
mov
jg
jnp
decl
loop
sub
sub
jno
out
inc
outsl
push
out
jmp
leave
cmpsb
sarl
mov
in
pop
add
mov
or
lds
sahf
cld
rcr
mov
shrl
mov
sbb
add
adc
jle
dec
notb
jecxz
dec
cld
nop
dec
repz
ljmp
aad
scas
pusha
or
scas
cmp
push
and
leave
add
imul
outsl
dec
pop
sub
rol
frstor
imul
xchg
inc
pusha
loop
xchg
daa
fsubrp
notb
shll
stos
mov
test
std
jl
loopne
mov
jmp
adc
dec
and
sbb
or
push
test
sub
mov
je
adc
stos
jo
and
call
pop
loopne
test
jo
call
mov
inc
push
push
mov
pop
insb
call
ja
push
std
sbb
adc
cli
ss
out
jnp
mov
xor
jg
pinsrw
mov
aas
fsubrl
shl
inc
sarl
movsl
gs
sub
test
add
sub
negb
iret
inc
mov
push
cmp
addb
addr16
cmp
out
int
cmp
add
xchg
mov
inc
and
pop
jnp
pusha
or
jbe
in
pushf
gs
ljmp
faddl
hlt
mov
xchg
cwtl
xrelease
or
mov
sbb
jne
scas
xchg
fstps
sub
pushf
push
fwait
int3
lds
aaa
icebp
xchg
cld
push
outsb
int
pop
pop
pop
or
push
xchg
arpl
arpl
xchg
gs
das
mov
jle
fildl
pop
call
out
out
imul
cld
nop
mov
jg
pop
daa
in
dec
add
sti
or
lods
andb
enter
jns
in
in
sbb
cmp
clc
or
aam
aas
ret
mov
xor
inc
aam
shlb
mov
mov
and
pop
repnz
jbe
mov
cmp
sbb
and
ljmp
mov
xchg
test
loope
xor
or
jl
addb
cmpl
mov
arpl
mov
xor
test
pop
push
xor
out
into
or
faddl
dec
jp
repz
daa
data16
sub
sbbb
mov
cs
jle
dec
lock
mov
push
jbe
into
xchg
xlat
pop
pop
inc
push
cmp
cmpsl
mov
ja
cmp
cmpsb
icebp
jle
insl
mov
inc
cmp
pop
loop
push
and
mov
icebp
add
sbb
movsb
mov
loopne
mov
pop
ss
mull
and
orb
negb
jnp
mov
mov
sub
ds
leave
inc
rcll
push
nop
or
mov
fwait
rcll
jne
sub
pop
xchg
inc
mov
into
cmp
mov
push
jge
inc
popl
jg
mov
jge
hlt
inc
cmp
jnp
test
xchg
or
xlat
sub
push
jecxz
cmp
ja
xchg
insb
and
jns
pop
aaa
fwait
xchg
filds
inc
fsts
xchg
fnstenv
add
dec
dec
add
lods
cmc
cmc
push
mov
lcall
mov
jno
jo
and
sbb
in
mov
mov
arpl
test
mov
jno,pn
nop
arpl
ret
xchg
orl
sub
xor
dec
jg
pushf
pop
pop
rclb
arpl
add
cmpsb
pop
pop
test
mov
repnz
lret
mov
pop
into
push
mov
inc
movsl
out
bound
decl
mov
and
or
fmull
js
adc
in
cld
pop
mov
stos
and
in
jp
xor
push
lock
fisubs
insl
test
fidivl
inc
cwtl
jo
push
dec
cli
pop
stc
outsl
adc
push
outsb
xchg
jmp
add
into
and
mov
jno
call
inc
xor
add
mov
mov
js
push
cli
pop
mov
into
sti
lcall
iret
cmp
lahf
pop
mov
repnz
test
mov
enter
xchg
addr16
jns
daa
sub
or
cmp
sub
mov
push
rcrl
inc
mov
lods
lret
xchg
mov
cmp
ret
xchg
push
xchg
xor
shrb
icebp
scas
jl
push
lea
repz
add
mov
repnz
lret
lods
mov
cld
int
scas
bound
or
xchg
or
cmpb
adc
xor
or
rorl
mov
lret
sub
dec
repnz
or
mov
int3
cmc
rcll
add
in
pop
sbb
in
dec
idivl
xchg
mov
ljmp
fs
push
aas
xchg
adc
jle
push
add
add
push
iret
loopne
stos
gs
nop
adc
push
sub
flds
mov
lds
cmp
test
mov
pop
addr16
push
hlt
mov
lds
mov
mov
aaa
mov
lods
sbb
inc
xor
in
xchg
int
pop
movsb
ret
pop
js
icebp
xchg
push
jns
inc
stos
fwait
xchg
pop
in
ret
xorb
mov
incl
lahf
pop
clc
lcall
mov
and
das
stos
pop
mov
ror
addl
pop
mov
pop
je
adc
repnz
fcoml
lea
sahf
pop
scas
add
pop
or
lret
lcall
gs
add
stos
mov
aam
sti
xchg
cmp
add
in
in
out
nop
out
daa
cmp
push
or
pop
cld
xor
movsb
cmpsl
sub
pop
mov
mov
jg
jne
shrb
cmp
lods
dec
loope
mov
scas
mov
bound
imul
imul
adc
inc
sub
sbb
add
js
data16
mov
mov
fistps
lods
mov
movsb
or
pop
and
stc
gs
das
out
leave
js
jnp
mov
sub
cld
push
cmc
lret
fwait
shll
popa
lret
xchg
das
push
fildll
or
fildll
out
pop
add
adc
int
dec
daa
pop
xlat
push
xchg
sub
adc
in
cmpsl
pop
jge
lock
popa
cli
cmp
adc
lods
dec
ja
inc
dec
inc
and
daa
mov
and
push
push
out
mov
xchg
add
mov
cli
lock
xchg
and
ret
ror
movsb
push
mov
push
dec
adc
sbb
stos
push
or
push
xchg
stc
stc
bnd
in
popa
mov
imul
into
xchg
movlps
loop
cmpsb
mov
adc
loope
pop
enter
jge
push
rcr
es
pop
xor
mov
stos
push
inc
mov
and
add
ret
push
inc
rorl
pop
arpl
jnp
add
or
ja
mov
fbstp
cmc
clc
pop
aaa
aam
in
push
mov
inc
imul
push
je
mov
adc
out
pslld
sarl
add
inc
roll
rcll
xor
sub
and
cmpsl
stc
and
mov
daa
fwait
in
add
mov
mov
lock
jmp
push
xchg
mov
push
and
loop
lret
xchg
push
push
aaa
xchg
outsb
je
cmp
and
fcmovne
sub
add
mov
push
jl
sub
xor
loop
or
adc
mov
out
jl
mov
lcall
dec
jg
sbb
sbb
cmpsl
xor
pop
mov
jnp
clc
mov
xchg
lcall
xchg
pop
addr16
icebp
fsubrl
into
int
adc
movsl
nop
add
clc
xor
test
jge
mov
je
mov
dec
adc
xchg
in
fcmove
movsl
sbb
xor
xchg
push
push
lcall
jbe
lods
enter
cmpsl
pop
cmpsb
scas
dec
inc
iret
xor
push
gs
lahf
sbb
cmc
loopne
mov
jae
data16
addb
pop
mov
inc
inc
pop
mov
aam
cli
arpl
sbb
fisttpl
xchg
in
mov
out
int3
lods
lods
sbb
push
and
repz
test
xor
pop
xor
mov
xchg
add
aaa
xor
add
jns
leave
vmread
inc
loopne
jle
cmp
rorl
cld
loopne
fimuls
mov
scas
inc
pop
scas
lret
rolb
test
inc
call
mov
nop
das
addb
jae
movsb
sub
adc
movsl
sub
xor
and
scas
cs
rclb
pop
hlt
std
and
jne
js
pop
push
shll
adc
stos
dec
mov
ud0
imul
sub
pop
pop
xchg
or
int3
or
ror
insb
bound
xor
bound
sarb
mov
adc
int
jb
leave
cli
xchg
sbb
or
popa
or
and
push
dec
xchg
inc
jp
jl
sarb
shll
aam
loopne
jo
mov
cwtl
aas
or
or
push
in
cmp
mov
sub
in
xor
int3
sub
pop
je
adc
aas
xor
stos
pop
test
mov
ds
pushf
in
ds
ljmp
or
les
ja
fwait
addr16
enter
xor
lret
mov
mov
into
push
arpl
shrb
lea
dec
negb
push
lcall
jg
test
cld
fs
outsb
push
push
fwait
push
and
jmp
mov
or
mov
adc
lods
mov
push
ficomps
stc
jg
lea
sbb
repz
jecxz
dec
movsl
xor
repz
sbb
movsl
movq
test
inc
xchg
ljmp
andw
jg
jno
and
jne
das
sub
inc
cwtl
out
jbe
cmp
xchg
testl
test
xor
push
sahf
js
imul
shll
mov
aam
lock
jbe
out
xchg
and
imul
inc
inc
push
subb
dec
pop
outsb
icebp
xchg
sahf
in
mov
in
mov
aaa
sbbl
test
adc
jae
enter
pusha
cmpsl
or
sbbl
pop
xchg
push
xchg
mov
ret
int3
cld
xor
cltd
dec
or
lahf
jge
inc
inc
push
lock
cmp
jae
cs
jne
aad
cmp
pusha
xchg
lahf
push
or
fmuls
push
scas
or
js
test
cmp
push
rol
inc
ljmp
and
jne
mov
negb
loope
in
pop
mov
pop
pop
out
enter
fcomi
cmpsl
mov
aam
cmp
stc
loope
jnp
lods
shr
mov
repz
sbb
cwtl
ljmp
and
push
xor
icebp
loop
mov
stos
add
push
outsb
movsb
movb
jp
data16
shrl
outsl
mov
ret
out
sub
hlt
xchg
sub
std
or
sbb
lahf
jae
inc
cmpl
and
lret
or
mov
cs
or
je
push
cmp
push
mov
lods
leave
cmp
inc
sub
pop
out
data16
loopne
in
movsl
repnz
jmp
lret
cmpsb
jo
and
fidivrs
and
jbe
cmp
xchg
inc
add
les
mov
pop
mov
aam
lock
or
aad
ja
call
hlt
cmp
sub
xor
or
push
js
cmp
popa
xchg
shll
cli
roll
ret
adc
ret
das
dec
ret
ret
not
pushf
out
mov
movsb
push
mov
or
jmp
dec
pop
lods
lods
fldt
ja
mov
sbb
roll
sub
imul
ljmp
and
mov
and
jg
in
pop
fwait
andb
dec
mov
in
inc
xchg
inc
pop
loopne
jle
jns
cmp
fnsave
insb
push
jae
push
dec
lds
nop
dec
lahf
hlt
jnp
out
inc
mov
pop
xchg
xor
inc
adc
mov
test
xchg
mov
fdivr
sahf
std
adc
test
adc
ror
xchg
or
sub
jge
movq
mov
test
xlat
fisubs
sbb
ss
test
int3
fcoms
xor
loope
pop
insl
xchg
jle
xchg
mov
outsl
sub
cmp
add
repz
pusha
cmp
pushf
inc
stos
and
dec
scas
xchg
or
int3
repnz
lods
stos
repz
addr16
inc
jg
aad
scas
fldenv
into
jmp
call
movsb
lea
and
jne
xor
pop
fistps
dec
sub
lods
push
add
lcall
xchg
movsl
mov
jle
bound
sbb
jb
nop
movsb
shrl
sub
pop
inc
daa
inc
pop
les
shrb
iret
lods
sub
dec
or
jnp
repz
mov
jecxz
in
test
insb
in
mov
ret
nop
xlat
call
cmp
ja
filds
add
cld
inc
mov
pushf
mull
fidivrs
nop
or
xorl
bound
loopne
rcr
adc
mov
jge,pt
into
fs
loopne
testb
popa
cmpsb
jecxz
int
in
sbb
fisubl
xchg
fidivrl
ret
and
es
adc
xor
ja
xchg
in
xor
mov
dec
in
lahf
mov
stos
add
icebp
xchg
xchg
pop
fldln2
divb
dec
mov
fmuls
nop
fcompl
ja
cmp
cmc
push
dec
rolb
cmc
dec
sahf
insb
je
stos
dec
bound
and
sbb
jbe
jle
inc
add
fildll
xor
push
js
pop
sbb
sub
aad
lds
pop
fadds
inc
sub
ret
icebp
loop
rcll
jne
jo
sub
jl
jnp
mov
lods
testl
test
rcrb
dec
dec
pop
inc
xor
shl
fidivs
mov
inc
pmaxub
lahf
add
aaa
pop
add
outsb
pop
lods
stc
pop
add
testl
xchg
loopnew
push
xor
pop
sahf
mov
and
or
addr16
or
decb
cmc
insl
dec
fstpt
jl
out
andb
fldt
xchg
sub
and
pop
scas
out
and
addl
stos
dec
dec
call
imull
mov
adc
mov
mov
dec
out
js
std
dec
lods
lea
adc
test
cmp
mov
cwtl
cmp
test
loope
push
mov
mov
movsb
mov
add
scas
dec
mov
push
cmp
mov
fildll
pop
push
in
iret
insb
repnz
sub
add
scas
test
arpl
mov
xchg
pop
repz
mov
push
push
or
scas
pop
inc
pop
rcrb
shlb
dec
int
fisttpl
aad
dec
fs
test
stc
shll
cld
mov
mov
and
lahf
dec
in
cmp
inc
jo
or
mov
stos
stos
mov
cli
and
cmpl
mov
mov
daa
xchg
cld
pop
add
repz
fwait
shrd
nop
ss
xor
xchg
ficoml
cs
pop
dec
dec
imul
jnp
and
jne
xor
mov
push
push
ja
gs
cmpsb
xchg
cmc
cmpsl
xchg
test
add
imul
lods
es
fistl
insl
add
adc
or
outsb
and
stos
sub
daa
je
and
rcll
lret
les
sbb
lock
and
adc
data16
imul
test
mov
sub
aad
lds
das
pushf
fdivrl
les
nop
addr16
xor
sbb
lret
adc
xchg
mov
test
fcmovbe
cmp
cmp
inc
lcall
or
out
mov
pop
xor
rorw
dec
lds
jbe
pop
mov
cltd
cltd
in
mov
jne
jl
pop
in
pusha
imul
ret
adc
outsl
arpl
pushf
cmp
inc
je
push
sbb
dec
inc
cs
fiadds
mov
out
call
mulb
scas
sti
jb
mov
loope
sub
cmp
push
adc
stc
dec
mov
mov
out
cmp
imul
and
daa
mov
pop
sub
mov
add
push
pop
ja
gs
inc
sub
push
jecxz
add
daa
jo
nop
push
mov
mov
mov
daa
and
lret
mov
pop
dec
rolb
pop
adc
xchg
push
aam
inc
inc
sbb
xor
mov
out
and
std
xchg
movsl
inc
xor
fwait
mov
push
rorl
mov
sbb
mov
inc
and
sbb
mov
cli
lret
or
clc
clc
add
or
sbb
pop
mov
divb
or
dec
imul
pop
inc
shlb
mov
inc
mov
push
test
ljmp
adc
cli
lods
pusha
insb
sub
or
jl
sbb
daa
and
loope
rclb
jecxz
scas
sahf
sti
fidivl
or
cpuid
stos
int
and
movsl
pop
lea
sub
dec
add
into
inc
loop
inc
push
in
int3
dec
faddp
cwtl
fadds
insb
movsb
mov
cmc
push
arpl
cmpsl
cmpsb
inc
and
jb
rorl
inc
jne
pop
aam
adc
jmp
in
sbb
popf
or
arpl
cltd
cld
jle
pop
add
repz
inc
mov
sbb
out
icebp
sti
iret
lretw
aas
aaa
or
pop
mov
sar
in
mov
orl
scas
lret
imull
lcall
mov
push
xchg
lret
dec
or
fiaddl
cmp
mov
jbe
jne
cmp
dec
or
jge
loopne
push
push
bound
push
mov
mov
les
cmp
xor
sub
fcomps
call
punpckhbw
or
mov
pop
and
push
imul
icebp
gs
setb
dec
call
aaa
and
imul
adc
imul
jns
sbb
sbb
stos
pop
stos
movsl
mov
jns
iret
cs
push
mov
dec
leavew
lea
pop
std
lret
mov
adc
jbe
and
idivb
jb
xor
push
enter
xchg
and
jb
pop
test
in
inc
rolb
and
enterw
in
movl
xchg
pop
add
addr16
mov
mov
pop
push
mov
and
cld
fldt
mov
out
inc
xchg
xchg
add
sub
movsb
cld
sbb
ret
mov
fsubrl
mov
sbb
loope
mov
mov
inc
jg
enter
testb
xlat
call
popa
sub
subl
mov
mov
imul
and
iret
fstps
and
inc
sub
fsts
lcall
adc
adc
icebp
adc
rorl
or
icebp
stc
outsb
lock
addr16
mov
add
jno
shrb
test
testl
mov
push
mov
push
test
hlt
aaa
jge
inc
rcr
in
push
adc
xchg
nop
nop
push
std
pop
xor
and
das
daa
mov
add
fisttpll
and
icebp
mov
mov
cmp
les
lods
shrb
insb
ljmp
mov
lea
shr
mov
addr16
mov
add
lods
imul
arpl
les
jb
or
lahf
jo
and
adc
cmp
ret
int
sub
add
mov
cld
ret
xor
iret
push
icebp
shl
pop
and
push
je
stos
scas
rcrb
ficomps
sbb
mov
movl
std
sbb
sub
fiaddl
imul
pop
adc
xchg
jp
mov
or
movsb
std
dec
sub
xchg
and
test
jae
pop
arpl
jae
jb
dec
movsb
push
fstpt
movl
fwait
je
xor
call
sbbl
int3
mov
add
jb
arpl
jl
mov
stos
daa
or
sahf
fildll
mov
and
push
and
lds
lods
subb
pop
and
mov
outsl
mov
xchg
push
pop
shlb
and
into
inc
aam
xchg
pop
mov
rclb
mov
dec
pop
adc
movsb
pop
sbb
sbb
or
adc
lds
xor
mov
popa
repz
leave
dec
jle
je
test
mov
mov
mov
divl
jb
jae
inc
xchg
and
inc
mov
addl
mov
pop
mov
sarb
or
loope
push
fdivp
pop
in
inc
daa
jmp
cmp
fadd
and
mov
sbb
in
call
ljmp
inc
lret
sub
pop
sbb
add
rcr
fsts
loope
es
sbb
jmp
cmp
lock
std
mov
add
cld
andl
std
rorb
inc
data16
das
std
push
cmp
int3
xor
pushw
jge
aam
pop
mov
mov
sbb
cmpl
stos
std
dec
sti
fmull
adc
enter
fldcw
mov
aam
pop
jmp
pop
add
in
xor
outsb
pop
and
or
or
mov
and
mov
xlat
aad
out
or
inc
add
or
mov
push
cmpsb
into
jle
movsb
mov
mov
dec
lea
xchg
mov
push
sbb
and
or
pop
iret
outsl
enter
lahf
jo
add
dec
aam
add
jg
cmp
cld
and
mov
sbb
add
dec
mov
icebp
pop
lahf
notb
or
inc
and
into
sbb
xor
out
push
imulb
mov
lods
lock
stos
scas
mov
inc
or
popa
cmpsl
adc
es
fdiv
pop
sahf
pop
inc
leave
or
jmp
bound
cwtl
shrl
call
inc
cmp
mov
jns
mov
push
xchg
xchg
dec
ja
pushf
sbb
mov
cs
sub
dec
pop
shl
sub
lods
jnp
and
mov
adcb
out
push
or
je
ss
xor
jl
mov
jne
cmp
sbbb
dec
xchg
vcomisd
in
jnp
in
sub
mov
mov
pop
enter
stos
ja
dec
add
push
lods
sahf
xchg
in
pop
sbb
and
jg
les
addr16
jg
xchg
in
nop
fcomps
mull
xor
rcr
arpl
hlt
rorl
leave
dec
cmp
pop
mov
push
dec
mov
adc
adc
dec
inc
or
xchg
dec
sbb
sarl
mov
push
repnz
mov
dec
stos
jnp
xchg
test
bound
xchg
stos
filds
pop
adc
mov
adc
movsl
or
js
mov
push
push
aas
clc
repz
jno
adc
pop
call
stos
dec
and
or
lock
add
mov
jl
data16
mov
mov
dec
subl
or
jnp
or
daa
adc
daa
lock
stos
or
jle
fwait
repz
outsb
push
jnp
fdivrl
jno
dec
pop
sbb
imul
and
pop
in
pop
xor
je
lret
dec
sbbl
mov
dec
cld
push
lods
int3
xchg
scas
orl
mov
cld
xchg
bound
mov
sbb
dec
imul
in
call
mov
cld
adc
cmp
and
aad
aaa
sbb
pop
jl
cmpsl
jo
cmp
ds
inc
lret
adc
adc
pop
jbe
and
pop
xor
sub
inc
add
in
scas
push
cmpsl
inc
cmp
and
sbb
mov
cmp
bts
loope
xor
cli
mov
cmp
cmp
pop
idiv
sbb
cmpsb
or
push
mov
imul
testw
and
jb
push
adcb
jl
xlat
jge
pop
mov
push
push
add
out
scas
add
imul
inc
sarb
or
mov
inc
cmp
notb
in
mulb
or
lahf
sub
mov
repz
push
push
inc
mov
es
shlb
add
xchg
aaa
or
insl
pop
cmp
mov
in
mov
xor
icebp
adc
lods
lret
lret
cmp
mov
xchg
jne
push
fcoml
cmp
mov
xchg
xor
fists
mov
add
mov
loopne
sub
lea
jg
int3
adc
hlt
mov
dec
je
dec
push
idivb
adc
clc
subb
pop
daa
add
mov
imul
xchg
or
xor
and
push
sbb
inc
and
les
sti
dec
xor
out
pop
or
cmp
push
dec
push
mov
fucomp
popl
push
int3
outsl
sub
pop
push
dec
hlt
jno
and
adc
iret
sbb
ljmp
xchg
imull
cmc
pop
idivb
repnz
mov
mov
or
or
lods
jecxz
sbb
icebp
jbe
push
lods
es
inc
lahf
movl
loope
lds
push
out
rclb
mov
and
add
pop
jmp
gs
in
out
push
imul
sbb
xchg
push
imul
or
jle
int3
push
ja
ja
insb
dec
sbb
sarb
cmp
mov
add
mov
inc
lock
xor
out
sahf
addr16
gs
aad
add
cltd
sub
nop
cmpsb
pushf
xchg
je
ja
jnp
xchg
sub
xlat
pop
int
pop
mov
das
adc
inc
repz
or
sbb
repnz
popf
aad
movsl
out
jmp
add
pop
out
xchg
int3
or
xor
push
loop
inc
cltd
fiadds
imul
lahf
inc
push
jecxz
loope
movsl
pop
dec
jae
rolb
mov
mov
cmp
push
jbe
mov
sub
lcall
pop
jmp
inc
movsb
cmc
xor
jnp
dec
and
sbb
pop
pop
ljmp
dec
ja
push
push
lods
clc
add
cli
sahf
mov
mov
test
lea
dec
sub
daa
jp
sbb
fmuls
cmp
xor
sub
pop
int3
mov
add
loop
rorb
gs
rcr
add
add
fistpll
in
les
ja
dec
mov
test
adc
ret
xor
cmp
mov
test
jle
out
inc
mov
mov
movsb
pop
fidivl
inc
mov
xchg
aad
mov
ja
dec
inc
arpl
dec
addr16
cld
mov
jp
and
mov
pusha
adc
jle
hlt
cltd
add
dec
pop
cmp
sub
lcall
push
fldt
popf
shr
hlt
aas
cmp
in
insl
and
icebp
mov
sbb
mov
lock
jecxz
mov
push
ja
push
aaa
stc
cmp
xchg
fbld
cwtl
mov
out
cmpsl
mov
fstps
xor
xor
mov
mov
push
mov
push
jno
ss
adc
add
stos
dec
or
test
mov
push
ds
inc
orl
adc
fcompl
cmpsb
shr
fcomps
inc
mov
ds
push
mov
add
dec
dec
shll
je
mov
lods
inc
sbb
or
hlt
inc
lcall
add
sarl
cmpsb
icebp
pop
popa
sbbb
sbbb
sub
data16
imul
add
cmp
ds
mov
mov
and
idivb
xchg
fbld
daa
mov
and
imul
out
fucompp
mov
aam
push
sbb
in
out
push
sbb
lcall
lds
mov
cs
dec
into
ljmp
xchg
lea
mov
insb
aaa
pop
lret
mov
push
mov
arpl
shl
mov
mov
fwait
xchg
sti
cmpsl
inc
repnz
sbb
out
lods
out
jecxz
sbb
mov
mov
je
ficoml
adc
mov
iret
cmp
addr16
push
pop
mov
js
jg
cmp
sarl
sti
aas
repz
mov
lcall
jmp
xchg
jmp
jge
pop
and
adc
shll
push
repz
into
jge
pushf
les
std
fdivl
int
arpl
mov
jbe
stos
test
outsb
daa
push
sub
adc
jnp
dec
sbb
mov
lods
cli
jmp
inc
outsb
sub
adc
pop
les
mov
lods
std
push
jo
or
jno
or
sarl
cmp
push
mov
and
sbb
aam
rcr
adc
xor
dec
test
sbb
cmp
dec
pop
lods
loop
jecxz
jl
and
icebp
sub
adc
fcmovnu
xor
std
push
jb
and
cmp
mov
dec
adc
or
cld
cmpsb
inc
out
in
inc
orb
lahf
pop
enter
es
add
pop
test
insl
aam
out
add
or
add
jae
adcb
test
and
mov
push
xlat
test
inc
lret
jnp
xlat
addr16
cmpsb
inc
in
and
jno
ss
push
mov
mov
push
sbb
icebp
xor
dec
sub
mov
outsl
scas
cmpsl
push
jns
jbe
or
rcl
adc
in
in
test
mov
shrl
push
loopne
andb
imul
jle
push
mov
xchg
push
mov
mov
fiaddl
adc
inc
xchg
mov
stc
jp
sub
sysexit
pop
cmp
lahf
mov
in
insb
das
lret
inc
in
insl
notb
inc
and
push
push
mov
mov
insl
dec
insb
repnz
add
shll
scas
iret
dec
lret
push
sbb
mov
cmp
xchg
pop
jae
lods
js
push
lea
cmp
add
pusha
dec
rcrl
dec
movsl
inc
xor
inc
mov
jle
out
sbb
xor
pop
fldcw
cmpl
data16
dec
popa
sbb
and
cwtl
std
adc
add
fstpt
mov
pop
sub
xorb
dec
inc
daa
xor
push
int
mov
jb
push
xor
push
and
loopne,pn
xchg
and
mov
ret
or
test
mov
sub
and
js
xor
inc
data16
push
in
dec
inc
imul
push
fadd
cmc
pop
test
in
insb
xchg
add
sti
or
xchg
loope
test
cli
shl
and
je
jne
shll
lahf
mov
out
add
mov
xor
cmpsl
xlat
inc
cmp
orb
xlat
shl
syscall
cltd
mull
scas
movsl
shll
fsubr
fidivs
mov
loopne
pop
mov
test
dec
sub
ljmp
stc
adc
xchg
out
lods
xchg
push
or
mov
dec
test
movl
loop
mov
xchg
icebp
jns
fnsave
mov
jns
scas
mov
xlat
mov
cs
std
mov
xchg
or
ror
jecxz
mov
jo
ljmp
or
scas
mov
mov
hlt
sub
jg
outsl
insb
mov
xchg
inc
pop
iret
mov
sub
stos
aaa
jns
sbb
jae
out
mov
push
dec
enter
mov
add
mov
jmp
ds
incl
push
and
add
int3
dec
stos
les
adc
xchg
inc
lock
icebp
pop
push
mov
add
mov
cld
xchg
add
pop
stc
or
outsl
sbb
mov
cmpsb
mov
xchg
push
mov
push
pop
xor
dec
cmp
or
xchg
push
or
add
ret
nop
sub
jbe
mov
outsb
xchg
lahf
push
cmc
add
dec
sbb
daa
jmp
xor
call
sbb
insl
paddsb
and
mulb
jle
mov
arpl
insb
xchg
mov
push
fisttpl
decl
adc
gs
push
jno
js
loop
fdivp
adc
lods
jmp
sub
rclb
jecxz
outsl
out
ja
arpl
mov
and
adc
js
fidivrs
lcall
mov
sbb
addb
pop
mov
mov
mov
test
movsl
fldl
add
mov
dec
sub
mov
push
xchg
mov
add
xchg
outsl
pusha
jle
jl
dec
or
jecxz
fcompl
or
cmpsl
fisubrs
and
arpl
shlb
sbb
adcb
addl
hlt
les
xchg
imul
or
add
jae
cmpsb
in
push
je
sahf
lret
ljmp
shll
dec
movsl
clc
and
jmp
xchg
dec
cmp
addb
xchg
sbbb
js
jae
aam
push
jo
dec
xchg
xor
cmpsb
add
jbe
sub
movsl
sbb
mov
bound
jno
or
jmp
ret
roll
or
mov
xchg
jo
test
jle
lds
insl
clc
xchg
xorb
loope
jae
sbb
lahf
inc
add
xchg
rolb
test
xchg
push
jg
mov
outsb
arpl
fucomp
test
std
lcall
ja
xchg
mov
sbb
dec
test
repnz
std
lret
daa
and
neg
cmc
pop
xor
push
xor
les
das
or
fcoms
or
gs
sub
adc
in
xor
repnz
loop
xor
lods
mov
cmp
in
mov
mov
sti
aam
mov
xlat
cmpb
test
icebp
mov
mov
negb
add
pop
insl
stc
pop
mov
mov
insb
hlt
mov
mov
cmp
mov
mov
cmpsb
inc
mov
or
pop
icebp
sub
mov
loope
cli
mov
pop
xor
xlat
pusha
or
cpuid
mov
jns
and
ret
inc
xor
paddq
sub
mov
imul
or
jo
inc
pop
add
divb
add
xor
mov
dec
stos
mov
les
roll
mov
push
xchg
mov
comiss
jmp
mov
mov
jae
sahf
pusha
mov
rcll
mov
xchg
push
xlat
pop
jge
pop
xchg
int3
aad
pushf
sbbb
or
je
jae
cli
insb
adc
bound
ret
fwait
popf
outsl
lods
mov
lret
stc
inc
pushf
rcrb
fcomi
mov
cmp
pop
pop
push
xchg
lret
pop
insl
or
cwtl
test
inc
xor
test
js
xchg
mov
jmp
jp
icebp
imul
popf
xor
fsubr
inc
bound
or
inc
xor
and
pop
inc
mov
cmp
stos
and
mov
aas
pop
adc
and
fcoml
clc
fwait
loop
insl
in
mov
cmp
cmp
aam
xchg
pop
xor
clc
std
sub
ret
ljmp
pop
dec
mov
loopne
lods
push
test
out
xlat
inc
in
pushf
sbb
mov
gs
imul
sub
add
xchg
push
mov
rolb
cmc
mov
push
cmpsl
xor
loopne
fisttpll
repz
adc
mov
adc
aaa
cmpsb
andb
inc
mov
dec
test
outsl
jmp
xor
mov
and
xchg
data16
xchg
mov
out
scas
mov
movb
lret
sbb
loope
js
pop
xor
jle
add
xor
ret
mov
dec
mov
sgdtl
ret
mov
paddusw
xor
xchg
jle
stc
enter
jns
push
cs
xchg
orl
mov
push
popf
lock
repnz
jbe
mov
xor
pop
fs
jmp
outsl
orl
push
sti
into
scas
push
mov
sbb
dec
fisubrs
mov
mov
and
stc
adc
ds
and
inc
adc
loope
xchg
add
lock
dec
pop
pop
pop
push
xor
adc
pop
push
repnz
lahf
inc
mov
out
lock
adc
adc
das
lret
std
ret
sbb
out
dec
xchg
sub
xor
fistps
jecxz
push
imul
cld
cmpsl
mov
test
shll
bound
xchg
daa
sub
mov
out
or
push
pop
mov
js
rorb
mov
lcall
xchg
mov
mov
into
arpl
mov
iret
in
sbb
xchg
xor
repnz
pop
loop
mov
or
ds
stos
add
push
arpl
mov
adc
dec
pop
and
jb
adc
push
mov
daa
testb
in
mov
nop
push
add
aad
outsb
cmp
jmp
je
std
sahf
or
cmp
xor
into
sub
rcll
mov
repnz
std
ret
xlat
in
mov
out
adc
sbbl
jl
movsl
dec
call
faddl
std
insl
mov
lcall
mov
icebp
mov
lahf
dec
pushf
movl
pop
push
xor
xchg
dec
jl
das
mov
cld
jl
jo
inc
lret
xchg
push
jae
sbb
inc
daa
mov
adc
mov
mov
dec
in
ss
lahf
cmc
push
outsl
adc
sub
mov
std
jno
push
sbb
mov
xchg
and
adc
popf
add
leave
int3
cmpsl
sbb
inc
clc
movsb
imul
je
aam
dec
sti
mov
out
es
js
add
add
mov
mov
or
push
adc
shrb
imul
insb
aad
jae
imul
loop
dec
sub
hlt
lock
subb
pushf
rorb
mov
cltd
mov
aas
pop
mov
inc
xchg
enter
jl
popl
mov
les
pop
dec
fsub
cwtl
lock
aas
stos
mov
or
xor
nop
sub
adc
movlps
mov
dec
cld
add
stc
cwtl
nop
shl
cltd
push
xchg
cli
xchg
xchg
or
dec
repz
mov
jge
adc
aad
inc
dec
mov
mov
dec
sbb
out
xchg
js
lcall
sbb
aaa
stos
hlt
dec
inc
clc
jmp
xchg
std
fisttps
inc
mov
jl
aam
and
pop
jecxz
mov
add
inc
push
xor
pop
adc
jmp
pop
scas
insl
xor
add
adc
ret
mov
mov
push
push
xchg
xchg
mov
mov
lcall
sarl
aas
syscall
and
out
jae
xorb
sub
int
test
inc
push
and
out
sub
add
xor
in
mov
aas
xor
jle
es
mov
pop
mov
xor
loope
je
ss
outsb
roll
jle
xlat
sahf
sbb
cmp
clc
add
mulb
lret
inc
mov
sub
rcll
pop
out
insl
and
fs
out
and
xchg
je
ret
imul
in
and
ss
push
xor
fs
pop
pop
mov
mov
test
movsb
mov
lods
mov
push
push
mov
sti
in
push
popf
mov
adc
out
push
shl
mov
andps
xchg
out
in
mov
inc
or
pop
mov
outsl
sub
js
cmp
movsb
mov
mov
inc
or
dec
jb
and
les
xlat
mov
push
xchg
fists
mov
xor
orb
pop
push
inc
xchg
daa
lds
push
mov
push
into
int3
cwtl
dec
push
push
mov
jnp
clc
outsb
sub
mov
js
loopne
xor
inc
sbb
lret
sahf
bound
or
ret
add
test
lods
out
inc
adc
lret
std
push
xor
icebp
sahf
jnp
mov
movsl
or
xor
nop
xchg
ret
inc
mov
fdivrp
mov
mov
cmp
xor
fstpl
pop
xlat
into
stc
js
dec
js
jl
fistpll
mov
insb
mov
popl
fisubrs
xchg
add
test
sub
pop
mov
rcrl
and
pop
cli
pminub
mov
mov
cld
mov
insl
or
cmpsl
mov
and
sbb
bound
cs
add
sbb
push
mov
fldenv
icebp
out
dec
jnp
jg
mov
je
shr
and
inc
iret
push
sub
stos
adc
pop
pop
sti
shrb
or
ds
in
xor
sub
xor
adc
xchg
aaa
inc
lds
loop
push
mov
es
lahf
or
out
push
lret
rcrb
mov
mov
jne
xchg
add
mov
pop
imul
lret
inc
subb
pop
mov
lods
lahf
in
jne
push
mov
and
sub
lret
test
or
rcrb
or
lods
sub
xor
xchg
movl
and
sbb
push
aaa
test
adc
out
xchg
hlt
cmpsb
fwait
ja
or
bound
popf
rclb
fs
mov
int3
je
aad
inc
in
cltd
scas
loopne
hlt
popa
insl
push
mov
ss
repnz
sub
ds
rorl
xor
lret
popa
xlat
clc
or
xchg
fsubrs
shll
std
inc
push
std
ja
test
push
fstpl
mov
test
clc
mov
lods
sti
fdivrp
xchg
push
mov
arpl
and
mov
loopne
loopne
xchg
jl
cmpsl
xchg
imul
push
or
push
push
fwait
jbe
xor
insl
loop
inc
or
addl
xor
pop
push
or
jmp
inc
inc
sub
shll
scas
xchg
cmpsl
xchg
loopne
rclb
jo
jbe
in
clc
ds
pop
lret
arpl
out
sti
outsb
jl
popa
inc
sub
rcrb
inc
ret
in
ljmp
push
push
call
mov
pop
call
aad
sbb
out
pushl
int3
leave
or
sub
jle
adc
cmp
jle
in
jge
fnstenv
jmp
lods
test
cld
pop
loop
or
cmpsb
jmp
sbb
pop
cmpsb
icebp
jge
inc
dec
or
inc
jl
mov
bound
fisttpl
fdivrl
xchg
jl
sbb
xchg
mov
mov
add
fcoms
jo
subb
dec
xor
test
push
push
mov
jle
jo
dec
and
iret
jecxz
sti
mov
cli
adc
fsubs
dec
mov
or
lea
inc
int
incb
push
push
cmp
sbb
pop
adc
mov
mov
sub
xor
push
ss
mov
aaa
push
dec
pop
ljmp
push
jb
xchg
adc
push
sub
xchg
stc
loope
lahf
lcall
and
xor
out
icebp
and
push
in
and
aad
xchg
clc
inc
sbb
mov
mov
out
inc
push
lods
les
lods
mov
js
push
test
add
jmp
pop
add
in
nop
iret
pushl
dec
xchg
cmp
nop
insl
mov
xchg
pop
pop
mov
iret
lcall
push
test
pop
cmp
dec
imul
jnp
test
adc
push
sub
cmpsb
std
pop
fmuls
mov
cwtl
ljmp
push
pop
fiadds
std
xor
mov
or
lcall
cmp
mov
cmp
fadds
shr
mov
lods
inc
scas
jg
mov
into
inc
enter
mov
lods
movsl
fldl
dec
mov
lahf
jecxz
xchg
cmp
xchg
inc
xchg
inc
jbe
aaa
out
pop
dec
shrb
lds
and
insb
jg
rcrb
mov
sub
idiv
pop
dec
popa
sahf
push
dec
call
adc
lcall
push
adc
stos
iret
idivb
sbb
jno
out
mov
scas
or
add
sub
jl
cmp
sbb
inc
nop
xchg
dec
lock
sub
or
leave
pop
cmp
mov
fsubrl
std
xchg
ret
lcall
repnz
ja
jno
testb
orl
fdivs
mov
xchg
fwait
sub
jns
popf
pop
out
xlat
std
or
rorb
data16
xor
mov
fwait
mov
cmp
repnz
pop
sbb
in
pop
pop
xor
aas
pop
out
dec
mov
addr16
mov
in
dec
or
imul
ja
push
cmp
mov
mov
and
pop
push
cwtl
ds
addr16
or
and
bound
xor
push
test
mov
cmp
or
mov
sub
jp
cmpsl
jb
sahf
xchg
pop
nop
xchg
movsl
mov
mov
cmpsl
ret
mov
xchg
inc
imul
lret
bswap
mov
inc
lds
mov
xchg
pusha
xor
sub
lcall
inc
pop
jmp
outsl
inc
mulb
fs
jecxz
test
add
push
loope
sbb
in
sub
loopne
mov
jmp
inc
pop
push
xchg
out
rcll
frstor
sub
sub
push
lds
aas
adcl
lea
and
sub
jno
jg
mov
jecxz
mov
mov
fdivs
fwait
pusha
lea
int3
push
repnz
mov
adc
mov
lret
ds
cmp
mov
loopne
dec
fisttpll
cmpsb
mov
xor
add
sub
mov
fsubs
pop
xor
sbb
ljmp
fcomip
dec
ror
xor
lret
insl
dec
jae
shrb
cwtl
pop
pop
mov
dec
lret
mov
pop
fstp
out
mov
jne
sub
xor
jns
push
mov
or
mov
addr16
inc
xchg
and
and
or
push
cmpl
inc
sub
xor
pusha
mov
adc
or
push
insb
loop
loop
push
js
lret
js
aas
lea
repnz
sbb
push
xlat
adc
dec
bound
addl
lret
or
jp
sub
adc
push
push
scas
loopne
add
xor
dec
xchg
mov
loopne
shl
xor
pop
lea
lahf
adcb
shl
loope
add
pop
ja
jmp
add
inc
xor
loop
mov
icebp
sbb
sbb
sbb
sti
das
aas
bound
inc
pushf
std
sub
jl
pop
mov
xorb
cmpsb
sbb
pandn
fucomp
test
cmp
xor
lds
and
cs
lods
and
dec
add
pop
je
mov
xor
cmpl
inc
mov
or
xchg
loopne
call
testb
sbb
cs
aam
aas
dec
push
fildl
xor
jg
inc
jnp
mov
add
mov
dec
inc
loop
dec
cs
clc
jno
loop
gs
lds
jmp
jnp
scas
test
arpl
add
sub
call
popa
leave
mov
push
pop
and
lahf
adc
cltd
enter
sub
and
cmpsb
push
mov
scas
mov
addb
ja
ja
ret
std
pop
repnz
ficoms
fcoml
and
push
cs
add
icebp
pusha
fcomp
mov
jp
cmc
in
in
pop
lock
lods
mov
xchg
f2xm1
pop
adc
add
cmp
data16
pusha
mov
insb
std
test
ss
je
mov
pop
jnp
lds
ret
adc
jecxz
inc
mov
pop
aas
fwait
xchg
in
pop
popa
subl
repnz
mov
xchg
loope
sbb
dec
mov
ds
call
sub
cmc
iret
enter
enter
fists
cs
mov
ja
or
popa
adc
adc
inc
inc
xor
xchg
into
nop
testl
into
xor
inc
data16
imul
insl
clc
sbb
daa
xchg
mov
rcll
lret
das
jp
mov
jl
sub
jmp
repnz
jecxz
xchg
subb
ss
adc
jnp
arpl
push
mov
mov
das
cmp
sbb
or
xchg
repnz
xchg
push
fstl
nop
out
sbb
test
cmp
clc
pop
ljmp
pusha
and
outsb
xchg
sub
push
mov
pop
jne
popa
stos
mov
fwait
subl
cmc
pop
insl
inc
std
xchg
or
popf
pop
jmp
xchg
pop
or
repz
repz
adc
mov
or
repz
sti
mov
movsb
mov
sbb
or
push
cmpsl
add
test
je
sbb
aam
jae
xchg
pusha
fdivrl
dec
cwtl
loopne
inc
pop
shll
sar
adc
mov
leave
jo
push
and
arpl
mov
mov
loop
adc
sub
jnp
sbb
cmc
and
xor
out
cs
xchg
jnp
and
xor
rcrb
mov
and
cmp
les
add
mov
xor
pop
clc
inc
ss
add
inc
inc
add
lret
cmpl
sahf
inc
dec
cld
pop
movsb
clc
mov
ss
sbb
jns
or
adc
cwtl
push
xchg
jp
outsl
jo
jno
aas
sub
sub
les
add
into
xor
inc
lods
popf
icebp
mov
pop
pushf
mov
movsb
mov
dec
cs
xchg
adc
sub
jno
ss
jg
cmp
pop
mov
pop
inc
mov
xor
stos
out
add
loope
loope
loope
cli
insl
adc
add
jmp
xor
ret
insl
hlt
cmc
add
add
stos
xor
or
cltd
mov
fadds
je
fisttpl
outsl
in
mov
popf
das
int3
cvtps2pd
rcr
mov
xchg
lods
loope
fsubrl
fstps
sub
xor
xor
mov
fsubl
popa
shll
push
cmp
push
jo
andb
jb
fstps
in
and
push
mov
pop
mov
repz
dec
mov
cmp
ss
ljmp
sbb
and
scas
jb
push
imul
clc
stos
aas
mov
xchg
les
or
jecxz
push
pop
cmp
outsl
xchg
dec
into
leave
jecxz
rcl
or
shll
arpl
cmp
sub
inc
push
pop
out
scas
nop
andb
inc
idiv
pop
lods
and
xor
jbe
inc
mov
pop
mov
cs
call
call
xchg
push
lds
sbb
lcall
enter
mov
mov
aad
mov
sbbb
leave
enter
add
imull
jmp
sub
scas
pop
jp
xor
or
sbb
push
mov
in
cmp
bound
out
mov
loopne
mov
jnp
into
jno
popf
adc
jecxz
or
and
cmp
mov
shlb
mov
testl
sub
lea
pop
cmp
je
push
push
ss
lock
cmpl
jge
mov
add
shl
inc
sahf
sub
lods
dec
stos
in
pop
sti
rcrl
mov
in
mov
adc
negl
mul
andb
rorb
adc
ja
aad
mov
jno
inc
lock
mov
pushf
cli
stos
pop
or
lds
ljmp
push
pop
ds
aas
mov
scas
ss
pop
pushf
xchg
sub
cli
mov
xor
out
jl
lods
pop
movntq
lcall
mov
outsb
mov
xchg
call
test
sbb
stos
aaa
inc
jbe
jl
or
jecxz
jno
sub
jb
insb
shlb
mov
int3
into
push
clc
out
mov
ds
cmpsb
sbb
cmp
jb
dec
ror
gs
into
or
adc
leave
sbb
mov
push
imul
hlt
js
imul
inc
inc
je
vpmadcswd
adc
shl
clc
paddq
mov
stos
xchg
mov
sbb
insl
and
cld
cmpsl
fidivrl
jb
rcrb
cmpb
jmp
or
mov
mov
xor
leave
test
rcll
in
adc
repz
es
ss
adc
cltd
and
push
mov
cwtl
pop
jp
cld
pushf
sub
mov
mov
mov
and
js
ret
shlb
cli
pop
mov
inc
pop
fnstenv
cmp
inc
add
dec
dec
or
jae
sbb
mov
pushf
les
nop
fcomps
xor
btr
xchg
rclb
sahf
sub
outsl
jle
rorb
lea
cmp
adc
lea
mov
lods
sahf
push
sar
inc
fmull
jbe
movsb
pop
inc
insb
cs
add
aad
sub
sub
jl
adc
and
pop
sub
or
cltd
sbb
mov
cmp
lret
mov
stos
sub
dec
lock
idivl
or
int
adc
shr
sbb
or
in
sub
push
mov
mov
fadd
lods
xchg
out
cmp
enter
add
mov
push
cwtl
fdivs
cmp
in
hlt
mov
add
push
imul
iret
and
xchg
ljmp
dec
mov
leave
push
stos
push
ss
sub
mov
mov
cmp
in
mov
sub
lcall
jmp
or
sbb
in
add
stos
leave
xchg
stc
fdivrl
out
xor
in
stc
cld
mov
push
jno
aad
in
mov
jl
mov
dec
adc
sub
in
sbb
mov
notb
mov
sti
sbb
leave
mov
jmp
bound
dec
adc
andl
dec
mov
xchg
daa
daa
or
faddl
sub
outsl
insl
insl
cmp
mov
cld
insl
enter
adc
sbb
iret
dec
mov
mov
roll
mov
mov
push
imul
fbld
jbe
int3
ficoms
push
xchg
and
lahf
js
push
jge
out
or
push
sahf
and
xor
or
shlw
mov
push
rolb
pop
xorl
and
shrb
sub
insl
xchg
push
mov
leave
mov
jns
xor
mov
icebp
xor
jno
mov
iret
arpl
fcomip
subl
insl
movb
movsb
pop
outsl
lret
mov
test
mov
push
or
cltd
hlt
sub
sbb
movsb
sub
add
ja
sbb
sub
fs
test
out
push
sbb
lahf
test
sbb
or
lods
arpl
mov
out
stc
outsl
std
jne
rorl
insb
sbb
rolb
pop
and
inc
fidivs
dec
inc
sub
mov
repz
jae
mov
push
daa
sub
nop
add
jmp
mov
int
push
rcrb
push
sbb
ret
sahf
stos
lret
ror
ror
aas
mov
and
shl
jns
jbe
testb
andl
pushf
xchg
mov
cwtl
cmp
aaa
and
fmuls
je
iret
lret
out
push
pop
adc
in
pop
push
sub
cmp
stos
sbb
inc
iret
sub
out
test
gs
icebp
sub
and
pusha
add
mov
daa
ret
int3
pop
mov
mov
mov
das
test
pop
sbb
and
xchg
xchg
js
mov
shlb
dec
lods
push
in
push
cmp
inc
orl
gs
mov
test
data16
arpl
inc
xor
adcb
sub
insl
nop
adc
sub
iret
push
cltd
ret
cmp
cmp
pop
pop
adc
aaa
dec
jae
sbb
pop
insl
jb
pop
and
xor
bound
sub
in
push
or
movsb
jne
jmp
adc
xchg
xlat
inc
sub
mov
mov
imull
and
out
loope
andl
pop
in
jmp
add
dec
aam
popa
repz
dec
xlat
cmp
or
insb
sub
push
sub
enter
mov
aam
adc
mov
fnsetpm(287
daa
loopne
cs
or
das
dec
imul
out
mov
xchg
sti
inc
lods
pop
sub
add
lds
push
or
lahf
push
jne,pn
mov
mov
mov
and
cs
mov
aas
add
lss
int
pop
push
enter
ficoms
pop
les
movsb
dec
insb
outsl
lds
stc
push
into
fldl
int3
divl
adc
mov
lods
shlb
icebp
pop
inc
xchg
gs
repnz
mov
inc
movsb
lcall
mov
push
mov
xor
inc
in
mov
push
jmp
cmc
adc
lods
mov
cwtl
jp
repnz
dec
lds
loop
shll
scas
mov
cli
pop
pop
loopne
adc
dec
sbb
popl
dec
fstp
enter
pop
dec
je
push
or
pop
shrb
loop
js
icebp
cmp
shrb
cld
in
push
imul
scas
dec
pop
push
data16
andb
loop
mov
imul
sub
and
ds
cwtl
jbe
mov
out
sbb
push
aam
adc
inc
mov
pusha
jnp
adc
mov
call
pop
sbb
push
mov
pop
xchg
js
cmp
sub
ljmp
lahf
push
imul
inc
clc
mov
mov
fld
push
enter
ret
out
aad
jle
outsb
pop
leave
jle
xchg
sub
xchg
adc
and
or
loop
mov
jnp
add
mov
push
cltd
sarl
jnp
paddusw
aaa
push
fisttpl
sub
iret
jb
xchg
mov
or
or
lahf
pop
fimuls
imul
jbe
fwait
sti
sub
or
sbb
popl
stos
sbb
ja
push
xchg
pop
lret
loope
loope
fcoms
or
pushf
inc
out
repz
out
in
xchg
jecxz
mov
imul
rclb
rcrl
cmp
xchg
mov
mov
insl
scas
std
jb
out
movsb
push
movsb
fcomps
repz
cmp
shl
add
test
cmp
dec
sub
stc
outsl
out
cmp
pusha
jno
push
int3
ljmp
lret
movsl
jmp
and
xchg
cltd
jecxz
cld
pop
loope
pop
hlt
adc
clc
jae
or
in
lods
pop
jle
push
leave
ret
inc
pop
ja
ja
pop
repz
enter
jge
mov
arpl
push
xor
mov
sahf
jnp
mov
push
filds
fwait
push
dec
in
cld
shlb
mov
cmp
aaa
ret
mov
pop
mov
add
into
add
lds
ret
dec
cli
pop
push
mov
mov
test
dec
sub
xchg
pop
jbe
fsts
dec
jge
imull
mov
xor
mov
or
mov
frstor
dec
sbb
in
mul
mov
sub
adc
inc
jp
cmp
pop
pop
dec
daa
aam
aam
into
or
xor
or
xor
sahf
out
mov
loop
fists
dec
mov
xchg
shrb
xor
push
inc
test
nop
cmc
bound
xor
xchg
push
fildl
or
cltd
pop
out
xor
xchg
xchg
mov
pusha
fwait
popf
inc
cmp
imull
and
cmp
adc
sti
jne
inc
adc
ds
into
sbb
movsl
jo
test
roll
pop
sbb
lock
imul
aam
cmc
pop
or
rcrl
and
stos
jne
xor
call
dec
mov
pushf
inc
and
adc
inc
add
jae
xor
sbb
mov
mov
jae
push
fcomi
inc
jb
inc
xchg
lock
push
sub
sbb
xor
cmpsb
fs
pop
shlb
sbb
in
pop
cwtl
add
mov
adc
mov
or
cmp
xor
es
hlt
inc
pop
mov
dec
insl
xchg
in
mov
xlat
push
dec
fdivrl
xchg
jg
loope
mov
ucomiss
je
cmp
push
mov
cli
xor
adc
test
sti
mov
dec
loopne
aad
fistpll
rorb
adc
scas
lock
rclb
mov
rolb
xor
call
mov
xor
in
mov
rolb
or
or
mov
sbb
push
jb
jb
ficoms
adc
popf
cmpb
xchg
ljmp
ficoms
ror
push
pop
mov
xchg
jno
mov
mov
scas
call
cli
cmp
fisubrs
or
std
sbb
imul
pop
jp
push
inc
idivl
dec
inc
inc
mov
cmp
sub
pop
push
dec
cmp
mov
inc
out
scas
xor
cmp
dec
and
adc
xlat
xchg
push
sub
mov
xor
dec
push
test
xchg
pop
jg
subb
nop
dec
test
lds
test
fbld
xor
push
das
jns
test
pushf
out
sub
add
cmp
cmovne
cmpsb
dec
push
loopne
ja
out
rorl
imul
xor
in
inc
cmp
daa
cld
inc
inc
inc
adc
hlt
dec
popa
adc
mov
fisttpll
jns
pusha
dec
jle
test
cld
xchg
sbb
mov
cltd
lahf
push
lret
test
adc
add
push
lea
adc
hlt
pop
and
xor
add
jno
fs
into
rclb
addl
pop
fs
add
loopne
orb
aad
xor
adc
rcll
mov
pop
dec
ret
jae
test
mov
outsb
in
pop
mov
pusha
xchg
nop
xchg
std
jle
inc
dec
dec
mov
xchg
xlat
mov
ret
shlb
push
iret
cmp
shll
sbbl
popf
pop
mov
lret
call
push
pop
sub
popa
adc
es
loopne
mov
sbb
or
dec
sbb
iret
cmpl
frstor
add
mov
aaa
ficoms
or
and
adc
cmp
cmp
scas
stos
dec
fwait
jp
sti
jb
dec
idiv
jne
or
scas
jnp
movb
mov
inc
leave
mov
lret
stos
xor
add
push
add
jge
push
fiadds
es
or
es
jmp
xchg
push
pusha
jo
pushf
jecxz,pn
mov
xchg
mov
movsb
fst
test
sub
xchg
cmp
cltd
in
xlat
jle
outsl
mov
inc
xchg
inc
daa
arpl
es
fmuls
mov
and
repz
push
inc
dec
fadd
hlt
incl
push
lahf
bound
je
into
jae
mov
push
mov
cmp
std
pop
cmp
orl
in
dec
andb
int
push
jb
cmp
sub
sbb
enter
mov
lret
and
idivb
or
mov
fnsave
rcrb
nop
daa
jp
outsb
and
arpl
add
xchg
and
rcr
jns
or
cmp
mov
inc
repz
push
push
mov
pop
pusha
mov
iret
clc
cs
inc
cmpsb
jp
or
stos
xchg
popf
addl
sbb
mov
xchg
jae
dec
rcll
mov
cmpsl
jnp
inc
fmuls
ret
pop
mov
push
lret
movsl
inc
hlt
sbb
mov
sarb
repnz
sub
add
mov
rolb
enter
cs
fwait
in
es
iret
stc
rcll
cwtl
jp
jg
jb
jno
jno
test
lock
push
aaa
sub
fcmovnbe
pop
push
lsl
mov
nop
push
icebp
call
cmp
aas
aas
ret
hlt
lahf
jmp
out
data16
push
pusha
mov
inc
push
jno
cmpsl
enter
xor
sarb
bound
mov
das
sub
pop
mov
test
out
mov
xchg
cmpsb
xor
jne
call
out
in
loop
xlat
leave
lea
sub
push
and
notl
call
jmp
mov
and
jle
adc
loope
dec
ss
gs
jmp
add
cmp
outsl
mov
pop
call
xlat
mov
dec
aam
dec
jmp
and
mov
and
shll
les
mov
enter
or
out
sbb
test
xor
pop
and
add
mov
pop
mov
je
lret
xchg
pushf
pop
xor
mov
nop
dec
sbb
lock
in
sahf
sbb
adc
fmull
xchg
adc
pop
call
and
in
les
push
pusha
fsts
dec
outsb
sbb
movsl
mov
inc
sub
push
arpl
ror
sbb
popa
or
enter
push
insl
ja
cmp
das
ds
pushf
mov
inc
xor
push
dec
shr
gs
adc
or
aad
sub
out
jmp
inc
sub
test
mov
imull
xchg
aad
xor
rol
push
pop
fwait
lods
leave
push
icebp
orl
pop
scas
xor
pushf
in
mov
jno
dec
adc
xchg
cmp
pop
cmp
mov
int3
mov
stos
push
sbb
leave
scas
stc
inc
inc
outsl
xor
sbb
pop
out
dec
insb
and
mov
mov
pop
adc
inc
loope
ret
das
add
mov
testl
mov
xor
mov
cmp
out
movsb
in
ss
rcrl
pop
jbe
push
jmp
daa
aam
pop
cmpsb
shll
stos
lea
jns
jge
sbb
data16
loopne
cmpsl
push
mov
xchg
loope
cmp
sarb
or
push
dec
sbb
xchg
sub
inc
xchg
push
lea
sbb
and
movsl
push
cltd
sbbb
inc
add
xchg
mov
inc
out
adcl
dec
ss
dec
jmp
fsubp
hlt
ja
xor
sub
add
mov
insb
inc
mov
and
xchg
int3
pop
mov
nop
or
shlb
cmpsb
push
les
mov
pop
and
lret
iret
sub
xchg
out
cwtl
mov
inc
and
jge
hlt
inc
adc
in
stos
mov
sbb
cmp
and
add
sub
cmc
icebp
iret
loop
xchg
push
sub
jl
pop
movsl
or
fucomi
lahf
xchg
adc
mov
jne
jb
mov
lahf
push
das
xchg
cmc
jns
movsb
xor
jmp
mov
adc
mov
scas
movsl
xlat
pop
scas
push
call
lods
sbb
jmp
popf
mov
inc
inc
cmc
pop
mov
jge
leave
xchg
aas
in
inc
add
sbb
inc
pop
pop
in
inc
mov
test
andb
decb
movups
pop
lahf
push
sahf
pop
add
addr16
fistpl
xchg
sahf
xchg
adc
push
push
aaa
lods
and
or
sub
jecxz
stos
rclb
xchg
int3
jne
iret
rcll
ss
outsl
sub
pusha
decb
movsb
adc
mov
xor
mov
mov
xor
dec
xor
xor
jbe
cmp
and
pop
cltd
imul
mov
add
jno
roll
arpl
int
or
add
ljmp
int
addr16
sti
testl
test
aad
push
ja
shrl
ss
adcb
aad
inc
lock
rorl
mov
pop
xor
cs
addr16
cmpsb
hlt
cli
leave
ja
ljmp
jp
lock
jmp
scas
in
loop
cmpsb
or
jae
aas
xchg
push
movsl
sahf
push
push
mov
sarb
mov
sub
jp
scas
daa
or
add
cli
xor
mov
imul
or
sbb
xor
add
jnp
loop
add
inc
fwait
pop
mul
into
arpl
add
imul
cmp
mov
roll
mov
aaa
jmp
cmp
or
mov
jp
imul
xchg
mov
pop
mov
scas
push
jg
ret
pusha
popa
mov
hlt
lcall
cmpxchg
mov
test
jae
dec
adc
adc
leave
sbbl
mov
scas
mov
sbb
testb
mov
jbe
add
cli
popa
and
dec
push
ret
mov
rcr
fildl
inc
sbb
loopne
jp
dec
lods
dec
lock
cmp
jg
xor
dec
lods
xchg
or
cmp
out
push
jae
lea
es
push
jne
cmc
push
dec
icebp
in
movsb
jmp
popa
push
xor
mov
call
jnp
adc
fadd
out
or
push
push
xor
ret
es
test
fdivrs
pusha
faddl
xchg
pusha
mov
out
into
out
in
xchg
icebp
sahf
sub
fwait
lahf
cmp
xchg
xor
sub
insl
pusha
jae
pusha
inc
cmp
pop
mov
pop
aaa
mov
data16
sub
cmp
pop
dec
pop
mov
scas
lret
pop
hlt
lret
or
out
mov
adc
cmp
fbstp
mov
outsb
in
mov
out
mov
fists
cmpsl
push
xor
or
xchg
mov
idiv
mov
cmpsl
xchg
or
cmp
sahf
push
pop
je
aas
faddl
lcall
cmpsl
ja
flds
insl
pop
in
inc
pop
stos
xchg
stos
jno
mov
pop
sub
pop
xchg
mov
loop
xchg
push
mov
mov
xchg
stos
mov
rcl
mov
popw
pop
push
jg
pop
mov
fucomp
test
mov
xchg
inc
jns
fdivl
in
add
ljmp
and
inc
test
aam
add
test
inc
dec
arpl
es
adc
mov
lcall
xlat
cwtl
xor
cmp
mov
pop
dec
into
mov
cmp
xor
out
rcll
xchg
and
cmpsl
mov
in
jnp
jl
push
int
xor
inc
jle
lcall
dec
mov
ds
xchg
dec
testl
mov
shl
lret
cmc
insb
xchg
mov
and
push
sti
dec
lret
in
loopne
mov
mov
incb
into
enter
jmp
outsl
jl
ds
mov
ljmp
int3
mov
jns
aas
sbb
sub
inc
sbbb
dec
xlat
mov
xor
push
adc
popa
outsb
inc
shll
sbb
pushf
ja
sbb
mov
lahf
add
ss
shrb
loope,pn
and
dec
dec
roll
cmp
ffreep
popa
xor
inc
mov
xchg
andb
adc
inc
dec
filds
sub
mov
dec
and
mov
add
xlat
pop
xchg
mov
lcall
inc
push
sbb
xchg
mov
popf
mov
inc
sub
je
and
xchg
xchg
int3
xchg
ret
adc
dec
lods
sub
loop
imul
push
jl
in
test
add
mov
popa
mov
std
stc
or
xchg
sbb
mov
sbb
ret
cmp
jg
and
cmp
fisubs
cmp
mov
and
outsl
lods
dec
add
mov
mov
nop
and
push
movsl
jge
nop
pop
in
add
ja
outsb
jmp
call
or
mov
lods
cmpsb
sub
cwtl
xchg
ret
pop
sub
les
jg
les
sti
outsb
mov
dec
mov
jns
push
mov
negb
loop
inc
xchg
push
pop
ret
xor
test
jp
xchg
pop
jle
rolb
call
aad
inc
add
pushf
jnp
adc
iret
push
xor
jmp
pop
aam
dec
pop
pop
and
mov
mov
jne
push
jmp
and
rclb
cmp
imull
or
or
mov
or
js
les
push
mov
fldt
adcb
cli
in
sub
pushf
mov
insb
and
lods
ret
jge
fldl
xchg
dec
outsl
outsb
xor
push
out
daa
stos
xchg
test
je
jo
mov
mov
mov
fs
dec
je
mov
cmpsb
int3
inc
xchg
sbb
mulb
in
aam
dec
xchg
lock
sub
imul
xor
lcall
add
jl
mov
nop
imul
data16
mov
call
inc
aas
jmp
lds
cmp
imul
add
cld
add
add
adc
mov
jbe
push
sub
mov
push
test
xorb
mov
fstpt
push
inc
pop
imulb
dec
test
cs
adc
lea
or
test
lods
push
in
cmp
or
or
push
das
jge
xor
cmp
dec
je
cmc
negb
testl
xchg
in
pop
or
ss
mov
sbb
into
dec
push
sub
jle
inc
xor
push
not
push
imul
pusha
stc
insb
xchg
xchg
pusha
or
xor
rep
xor
mov
push
nop/reserved
and
test
repz
mov
fs
hlt
xchg
out
cmp
shll
fcmovb
mov
movsb
jb
jb
arpl
jle
scas
fs
jg
imul
mov
hlt
cmpb
cmpsw
xchg
and
mov
adc
jo
adc
fstpl
jp
aad
sbb
jmp
dec
adc
pop
cmp
pop
call
insb
cmp
sti
lock
addb
mov
pop
bound
or
pop
xchg
rorb
fdivr
add
in
mov
sahf
int3
in
aas
lcall
adcl
stos
mov
rorb
adc
sub
add
push
inc
jg
jb
pop
out
in
sub
push
mov
mov
mov
inc
lock
and
xor
ljmp
inc
data16
shl
daa
imul
mov
mov
fs
xchg
xchg
aam
je
and
mov
dec
jns
lahf
xor
sub
movsl
in
adc
std
xchg
push
push
sub
xchg
dec
movsb
xchg
repnz
jno
jl
add
mov
xchg
shr
push
movsb
ret
xchg
inc
mov
cmp
ja
loop
lea
outsb
sbb
jo
and
jmp
jo
jno
xor
mov
enter
inc
cmp
cmc
and
in
sub
cs
mov
lcall
push
es
in
push
push
inc
xchg
bound
jae
cmc
popf
movsl
lods
jo
pusha
jo
ja
sbb
mov
lcall
das
sti
loop
frstor
sarl
push
mov
xor
add
jns
inc
and
cli
lret
insb
leave
lds
std
in
push
xchg
lods
mov
shll
das
das
jne
jno
add
adc
cmp
mov
aam
popf
stos
inc
cmc
mov
xor
loope
inc
adc
cli
sahf
test
pop
xlat
cmp
aaa
shr
xor
xchg
xorb
lea
enter
mov
jecxz
cld
cld
movsb
daa
mov
inc
arpl
test
fcomps
out
mov
mov
fwait
lret
rcr
mov
push
test
mov
aas
es
inc
mov
fwait
ds
cmp
mov
add
add
int
mov
push
fidivl
xchg
inc
xchg
ljmp
pop
pop
mov
lea
fwait
ljmp
sub
dec
cmp
jl
les
aad
jns
jb
scas
icebp
scas
imul
and
jno
pushf
mov
pop
mov
inc
xchg
icebp
pop
dec
nop
sahf
sub
cmp
jp
pop
mov
xor
call
pushf
test
mov
ss
aam
sbb
pop
cmp
adc
fildll
adc
pop
stos
icebp
jae
nop
mul
and
sub
inc
ljmp
aaa
jg
jle
mov
jo
popa
cmpsl
hlt
push
adc
adc
fsts
enter
fstpl
lret
loope
or
cmc
scas
dec
ret
xor
outsb
inc
cli
mov
cltd
dec
psubw
cmpsb
dec
adc
lret
sarl
js
mov
mov
iret
adc
inc
mov
inc
imul
shl
nop
pop
xor
stc
insl
inc
push
push
sub
movsb
adc
fidivrl
mov
mov
cmp
add
pop
lods
lret
mov
insl
and
mov
and
mov
jae
pop
in
pusha
pop
insl
mov
int3
pop
in
push
mov
jmp
inc
mov
adc
add
pop
sbb
push
lret
adc
sti
data16
aas
arpl
fidivrl
sub
xor
mov
js
in
mov
xchg
inc
dec
sbb
into
jo
lahf
xchg
add
repnz
xchg
movl
xor
inc
xchg
enter
mov
pop
not
mov
mov
push
cmp
inc
pop
arpl
jns
mov
jmp
shl
loope
xchg
mov
adc
sbb
loop
mov
shrl
and
mov
xor
hlt
in
inc
cmpsl
pop
or
popa
mov
cmc
xor
insl
xor
xchg
jl
and
xor
or
inc
inc
xor
or
loope
in
jmp
je
mov
aaa
or
xchg
andb
into
push
or
pop
cld
jns
pop
negl
arpl
mov
xchg
or
out
pop
popa
mov
ret
inc
pop
mov
push
add
and
jg
xchg
out
gs
insl
out
mov
notb
xchg
xchg
and
shrb
cltd
ret
gs
orb
in
imul
adcb
test
adc
xchg
xlat
or
in
xchg
ja
pop
xchg
push
enter
stos
jecxz
repnz
xchg
test
int
in
mov
xchg
sbb
lock
into
jle
and
or
xlat
repnz
jnp
sub
add
and
gs
mov
jg
ffree
pusha
cmc
sbb
mov
inc
xor
call
push
pop
lods
mov
and
je
loop
sbb
xor
test
rsm
xor
lea
cmp
dec
adc
add
dec
or
adc
clc
push
imul
inc
mov
repz
popa
adc
adc
xor
push
lods
push
cld
shll
fisubl
out
test
adc
sbb
add
addb
add
mov
fsubrs
lahf
pop
jo
adc
sbb
jns
mov
fildl
in
ficomps
mov
inc
cltd
pusha
jno
sbb
shl
scas
cmp
rcll
frstor
js
aaa
aas
or
mov
mov
sbbl
fsubs
push
xchg
pop
mov
aam
jne
imul
stc
frstor
outsb
sub
stos
sub
aam
enter
lret
ss
jbe
cmp
jg
ret
cmpsb
ficoms
push
sar
insl
cmc
jecxz
add
and
loope
loop
add
out
xchg
add
push
mov
dec
xorl
inc
cli
jno
dec
dec
cmp
js
xchg
sbb
xor
lahf
xor
aam
dec
mov
pop
adc
jnp
mov
rcrl
fincstp
push
jo
xchg
inc
inc
jge
pop
and
adc
ds
push
or
je
xorb
mov
inc
notl
fs
mov
lret
fisubrl
inc
mov
cltd
das
int3
loope
add
xchg
out
cltd
add
insb
cmovg
dec
out
push
les
sti
repz
lret
int3
call
lods
fadds
or
pop
lock
clc
shrb
jbe
sbb
xor
pop
and
pop
push
in
push
mov
shrl
dec
xchg
mov
xor
xchg
imul
adc
push
or
mov
mov
js
js
cltd
inc
cmp
mov
dec
es
adc
xor
jo
inc
and
mov
ja
push
sbb
sub
sbb
sbb
pop
pop
cmp
ret
ljmp
xor
test
fildl
push
xchg
aam
aad
aad
pop
mov
inc
js
jmp
imul
jnp
inc
jp
outsl
push
and
jno
dec
out
out
sub
dec
sbbb
and
jg
pop
sbb
mov
inc
sbb
clc
push
addr16
xor
pusha
in
inc
xchg
outsl
fwait
pushl
mov
rolb
pop
sub
xor
and
iret
inc
lret
les
orb
fisubs
test
xchg
xor
fsts
push
cmpsb
mov
pop
mov
or
fsub
mov
iret
push
je
cmc
and
rcr
ljmp
mov
clc
inc
stos
xor
pop
insb
aas
cs
mov
jbe
mov
insb
jge
add
cwtl
stc
add
xchg
jl
out
ret
nop
add
rclb
inc
bnd
jmp
andb
jg
and
xchg
jbe
dec
shll
rep
jno
movsl
lods
rcll
mov
faddl
sub
loop
inc
xchg
adc
out
add
xchg
or
cmpsl
or
shlb
cmpsl
pusha
std
inc
mov
inc
sbb
test
lods
sbbb
add
push
lret
dec
pop
das
imul
sti
and
repz
mov
aam
mov
mov
imul
fs
movsl
add
push
adc
repz
xor
out
jo
xchg
fcompl
mov
xchg
mov
pop
fwait
cltd
arpl
js
imul
push
mov
nop
adc
xchg
rorb
out
in
cmpsl
push
vmwrite
push
mov
mov
push
mov
and
xchg
push
mov
cmpsb
cmp
aaa
mov
scas
int3
lock
aad
inc
cs
outsl
adc
arpl
scas
cpuid
sahf
test
xlat
test
test
sarb
mov
xor
les
icebp
lock
pop
shlb
xchg
jae
movsb
jge
xchg
xchg
mov
push
inc
pop
pop
js
scas
xchg
clc
jb
pop
sahf
movsl
push
imulb
dec
jle
ljmp
testb
xchg
cmp
int
mov
pop
mov
and
add
sbb
and
imul
mov
cs
outsb
lods
movl
cltd
mov
je
lock
pop
mov
cs
daa
adc
xchg
push
push
aas
sub
dec
repz
jl
sbb
sbb
xchg
leave
pop
inc
aad
jmp
lods
fsubrl
jg
mov
mov
inc
aam
cmpsb
and
outsl
add
mov
xchg
out
pop
stos
lock
or
add
mov
xchg
insb
les
stc
xchg
outsb
aas
enter
mov
jnp
mov
pop
or
mov
test
inc
push
sahf
and
jnp
cmp
dec
jne
xchg
in
test
cwtl
loopne
dec
les
imull
dec
fildl
in
mov
jp
mov
dec
fldt
fists
scas
ret
test
xlat
shrb
mov
xlat
movsl
lea
int3
jmp
dec
daa
mov
lock
lret
sub
in
xor
lods
arpl
fistpll
outsl
inc
dec
lret
push
andl
icebp
jl
adc
mov
int
jno
insl
adc
sub
into
mov
or
or
shll
jns
gs
jle
inc
pop
xchg
adc
outsl
idiv
popa
outsl
bound
sub
mov
aam
add
or
jbe
and
jp
or
cmpb
inc
pop
sbbl
mov
testl
push
cmp
add
push
icebp
xor
je
pop
inc
push
mov
inc
push
stos
xor
cmp
sahf
fisttpl
pusha
shr
daa
jmp
movsl
aaa
push
push
fnstcw
loopne
fildl
stos
es
pop
xchg
xchg
stos
in
popa
repz
mov
lret
sbb
fwait
sbb
push
outsb
cltd
in
xor
inc
sub
stos
dec
mov
sbb
dec
dec
ret
pop
je
sar
xor
mov
xchg
pusha
pop
repz
mov
shlb
lahf
push
xorl
dec
jnp
inc
mov
adc
sbb
lods
xorb
jne
dec
stc
jg
ret
fwait
imul
ss
loopne
cmp
ret
jge
pop
lods
mov
inc
mov
cmc
loopne
popa
mov
fadds
out
mov
jl
bnd
xlat
jnp
xlat
sahf
jmp
nop
inc
outsb
pop
dec
mov
pop
cmp
mov
lahf
push
jecxz
int3
loop
sbb
pusha
jae
sub
lods
aas
sti
mov
jl
xor
shll
dec
and
push
pop
dec
loope
adc
sbb
pusha
cld
fcomps
js
test
or
push
push
bnd
xchg
gs
test
dec
add
mov
dec
out
push
iret
mov
iret
outsl
push
and
stos
mov
xor
and
or
jo
push
dec
push
repz
mov
mov
js
fcmovne
xor
mov
mov
aaa
fildll
xor
movsl
dec
dec
sub
fcoms
mov
lret
call
dec
cmpsl
sub
mov
out
or
mov
loopne
fmuls
adc
xchg
add
outsl
mov
fstpt
into
mov
cmp
rol
sbb
sbb
loope
lds
out
sarl
popf
inc
repz
and
cmp
add
cmpsb
ret
fbstp
ret
xchg
xor
hlt
cmp
enter
jmp
mov
mov
adc
add
dec
iret
shll
movsb
or
push
shll
fstl
mov
jb
adc
sbb
aas
insl
jg
mov
push
add
or
push
xchg
in
mov
mov
cmp
mov
sub
scas
stos
bswap
cmpsl
lock
clc
sahf
and
gs
sbb
enter
push
cmc
aas
data16
fiaddl
fsubrs
xlat
xchg
shl
pop
dec
fcmovu
sahf
int
xor
cmpsl
mov
std
mov
push
aad
lret
adc
lds
nop
push
add
popf
cmpsl
adcb
jg
sbb
or
xor
sub
cltd
jl
mov
sbb
xchg
mov
jle
pop
das
mul
jb
xchg
sub
hlt
dec
lods
xor
ficomps
mov
les
iret
pushf
and
popf
jnp
cmp
xor
push
in
adc
mov
es
js
pop
pop
xor
arpl
fisubl
or
lods
inc
sub
movsb
lret
add
pop
daa
test
jle
in
add
mov
dec
leave
inc
mov
movsb
inc
jo
xchg
ret
leave
xchg
inc
cmp
and
mov
and
hlt
adc
ss
sbbl
lods
dec
mov
call
sub
mov
ficoms
mov
inc
mov
jns
pop
out
mov
cld
out
push
mov
iret
adc
cld
ds
xor
jg
xchg
lret
ljmp
pusha
stos
stc
scas
cwtl
subl
adc
cmp
jmp
cmc
aas
bswap
sbb
scas
fimull
cmp
push
arpl
sub
push
sbb
pop
int3
aad
ret
loop
int
movsl
addb
push
jl
push
adc
mulb
pushf
or
jnp
push
icebp
in
ret
ret
push
mov
push
sub
das
or
out
jmp
and
dec
cld
cs
loope
xchg
subb
inc
clc
cld
mov
xchg
adc
and
push
ljmp
nop
cmp
jg
mov
cmpsl
add
je
adc
jae
cmpsl
push
mov
push
push
mov
fwait
mov
and
add
adc
jae
and
jge
jno
push
and
insl
push
pusha
mov
dec
shrb
dec
mov
cmp
mov
mov
pop
aad
jne
pusha
pop
test
test
mov
and
inc
xor
cmc
mov
cmc
neg
mul
and
aas
xchg
out
stos
xor
cmc
ficoml
shl
adc
dec
inc
ja
bound
xor
daa
shll
insl
daa
fmuls
rorl
push
adc
mov
cmp
shrl
loopne
jp
jo
movsb
aam
sub
dec
cmp
cmp
int
xchg
push
xchg
adc
push
push
faddl
int
hlt
negl
aaa
bound
mov
inc
loop
push
je
test
loop
lret
loop
out
or
dec
adc
insl
inc
sub
mov
inc
sbb
inc
test
notl
shl
adc
es
lcall
mov
push
mov
add
movsl
xor
lds
stc
gs
push
xchg
in
cmpsl
mov
mov
adc
sub
das
cli
daa
inc
leave
in
js
xor
scas
dec
mov
xchg
stos
stos
cmc
scas
mov
scas
sarl
pusha
mov
cmp
add
in
pop
dec
and
sub
jno
jecxz
push
xchg
and
iret
or
jle
imull
adc
jmp
insb
gs
daa
xor
sub
out
jle
cmp
jnp
pushf
das
stos
mov
pop
std
inc
test
add
int3
mov
in
xor
sar
push
cmp
sbb
mov
int3
mov
leave
sbb
movsl
adc
push
or
lea
fldt
push
bound
nop
sub
and
int3
cmc
iret
dec
push
pop
imul
inc
arpl
inc
ljmp
push
test
mov
into
imul
mov
popf
lea
mov
ss
leave
idiv
pop
sahf
lret
mov
loop
jne
adc
or
adc
stos
inc
outsb
cmp
sbb
pop
lods
aam
cmp
mov
out
or
jae
mov
mov
jl
inc
push
movsl
fnstenv
jns
inc
xchg
subl
mov
and
in
jbe
sbb
xchg
xchg
cmp
cwtl
pop
inc
into
jo
and
push
mov
pop
mov
rclb
loopne
or
xchg
push
data16
and
push
icebp
xchg
add
add
arpl
push
aaa
adc
cltd
mov
sbb
mov
sub
repz
adcl
aam
dec
sub
pop
xchg
sbb
movsl
fs
std
jns,pn
popa
mov
fistpll
mov
mov
pop
loop
sbb
cmp
pop
out
jl
scas
sahf
daa
push
push
test
push
pushf
jmp
jmp
pop
mulb
bound
daa
xchg
lahf
xor
lock
in
add
cs
fcoml
scas
inc
sub
xor
nop
xchg
pop
mov
dec
pop
dec
jg
sbb
fwait
aam
hlt
lock
add
cmp
arpl
mov
adc
adc
ds
scas
xchg
cmpsb
jl
shll
jecxz,pn
inc
lods
sub
lret
daa
lret
pusha
inc
aam
or
cmp
jle
pusha
push
outsl
or
addb
cmp
orb
rclb
movsb
sub
xlat
xchg
ss
cld
jbe
pop
mov
clc
mov
xlat
mov
mov
and
stc
sbb
addr16
push
aas
rcr
das
push
pop
aaa
repz
pop
maxps
insb
adc
subl
mov
je
pop
insl
test
jae
xor
jmp
dec
cmc
insl
pop
cmp
jg
outsl
lret
out
inc
loop
and
adc
test
outsl
js
fsubrs
pop
dec
clc
push
ljmp
cmc
pop
cli
dec
cmp
xchg
add
imul
arpl
xchg
in
xchg
and
lea
jno
push
clc
jle
ja
pop
mov
lahf
jmp
movsl
out
int3
mov
bound
and
mov
lds
movb
stos
sahf
fsts
cmpb
inc
or
in
cli
lret
push
adc
push
pushf
xchg
in
and
stc
loop
jo
subb
sahf
pop
dec
std
jl
mov
xlat
pop
rcll
ficoml
test
push
es
push
pusha
push
mov
inc
hlt
mov
mov
icebp
jl
jae
add
xchg
lea
popf
push
cmpsb
dec
lret
test
jle
fnstcw
mov
leave
and
lahf
hlt
jo
push
sarl
sbb
cmp
push
push
add
dec
jge
pop
push
ljmp
adc
push
push
fstpl
lcall
shll
xchg
sbbl
add
std
cmp
into
fstpl
pop
les
fstps
sti
frstor
adc
cmp
jo
in
test
insb
add
daa
pushl
or
aaa
ds
jl
or
dec
mov
test
stos
cmpsb
xor
jb
pusha
add
or
jb
or
push
fwait
ret
mov
jbe
sub
xor
icebp
push
outsb
mov
popa
hlt
test
and
rorb
jmp
xor
sti
mov
popa
xchg
lds
xor
lret
lods
fisubrl
dec
inc
inc
jns
xchg
sti
cmp
sti
stos
jae
insb
push
daa
lret
leave
and
stc
lret
inc
mov
sub
sub
jae
or
pop
ljmp
push
out
lea
sbb
jae
jmp
push
pop
push
leave
sti
pop
movb
cmp
mov
stc
in
mov
cmp
dec
pop
pop
das
add
gs
inc
mov
jo
push
lds
and
xchg
insb
jns
movsl
sub
cmp
sbb
icebp
push
adc
les
pop
bound
push
mov
in
mov
mov
pop
and
rcl
lret
ret
imul
add
cmpsb
dec
push
xchg
pop
push
mov
sub
ret
test
lock
mov
sbb
xlat
out
add
mov
sub
pop
add
xchg
inc
add
push
sub
jmp
js
dec
fnstsw
aam
leave
adc
dec
daa
pop
in
popf
mov
stos
pop
sbb
jns
sarb
lcall
mov
mov
ja
ja
dec
loop
out
movsb
push
jp
insb
lock
jae
pop
repz
and
push
dec
xor
es
fs
cld
bound
push
adc
add
lods
dec
jo
push
xor
stc
ret
test
fwait
xor
xchg
inc
stc
lds
push
dec
xchg
mov
dec
xchg
xor
jno
fisttps
cltd
and
out
aad
sbb
mov
imul
cmpsb
jecxz
inc
rcl
or
cltd
andl
dec
mov
fsubrs
outsb
rorl
pop
cmp
test
rclb
pusha
rcll
lahf
lea
mov
push
in
lea
shrl
js
dec
inc
xchg
add
lea
sbb
outsb
mov
movb
dec
imul
imul
adc
cmpl
mov
sahf
pop
jae
shlb
push
sbb
cmc
push
dec
orl
xor
sahf
jno
lret
ljmp
lret
add
inc
jns
cmp
rorl
and
aaa
dec
int3
nop
sbb
sbb
sbb
ds
shll
lods
cmc
repnz
pop
sub
xchg
test
lret
jecxz
cwtl
pop
jno
push
loope
insl
mov
pshufw
add
ret
stc
daa
pop
test
and
dec
add
rclb
xor
mov
mov
push
pop
dec
mov
decl
mov
pop
inc
dec
xor
arpl
lock
cld
gs
xchg
in
xchg
je
adc
jne
xor
and
jns
filds
rcrl
push
inc
mov
or
push
cmpb
rolb
mov
mov
mov
xchg
jae
jno
xchg
andb
push
adc
cmp
push
jnp
std
iret
out
dec
sub
pop
hlt
test
jl
mov
xor
mov
xchg
mov
pop
push
jg
rcrl
jnp
inc
int3
xchg
lock
sbb
jnp
imul
mov
imul
xchg
or
nop
adc
ret
aad
push
dec
insb
push
ret
adc
sub
push
mov
icebp
inc
xchg
mov
sbb
mov
lret
insb
fs
imul
push
sub
loope
leave
xor
cmp
or
insl
insl
xchg
sub
pushf
ret
sub
aad
jl
mov
pop
outsb
repz
int
test
leave
loopne
xchg
je
jbe
and
loope
ds
test
xor
daa
add
arpl
cli
in
jbe
cmc
add
push
push
stos
icebp
negb
xchg
int3
fdivrp
in
aam
lods
rclb
test
test
adcb
xchg
addr16
sub
pop
mov
fnstsw
pop
int3
jp
insl
rclb
movsl
fs
mov
fstl
push
loopne
pop
or
xacquire
aaa
les
aad
out
mov
push
xor
pop
add
ret
cmpsb
std
xchg
mov
mov
push
inc
pop
movsl
data16
xor
mov
dec
push
inc
fcomps
inc
negb
dec
ss
dec
or
jno
adc
inc
sub
adc
mov
insl
jnp
lret
cmpl
or
sub
xlat
rclb
adc
outsb
jo
test
xchg
data16
addr16
mov
push
test
inc
xor
dec
add
inc
mov
fnstsw
shlb
inc
jne
jecxz
xlat
and
mov
aas
adc
scas
adc
mov
inc
pusha
scas
jb
push
dec
jg
out
inc
mov
xlat
enter
pop
add
inc
and
and
movsb
fwait
dec
dec
daa
add
pop
xor
inc
imul
mov
mov
pop
bound
mov
push
cli
jns
xchg
adc
inc
movsb
jb
stos
sbb
dec
adc
stos
push
test
dec
jge
push
sbb
push
mov
subl
xchg
or
fwait
loop
bnd
pop
xchg
jno
rorl
mov
stos
adc
push
inc
lret
push
jl
dec
jmp
inc
aaa
xor
jl
cmp
and
or
pop
out
jg
add
and
xchg
xor
push
pop
mov
fcom
mov
mov
mov
ss
mov
mov
pop
aaa
es
mov
jno
cs
in
imul
and
xlat
out
loop
sub
lods
or
push
cs
cmp
divl
jo
xchg
push
xchg
icebp
test
dec
in
push
xor
mov
shr
dec
lret
pop
xchg
mov
adc
in
out
cli
pop
sbb
mov
cmp
mov
mov
sub
arpl
hlt
filds
cmp
dec
push
icebp
je
cwtl
mov
shlb
xchg
or
dec
data16
std
popf
ret
fucomp
sub
ljmp
mov
pop
and
mov
sbb
ficoml
push
add
and
addr16
push
xorl
jnp
jmp
loop
push
pop
sub
in
imul
hlt
stos
ret
sub
repz
shll
pushf
jmp
or
mov
fildll
cmpps
pop
daa
push
jmp
test
jb
sub
lret
shll
andb
jg
call
mov
add
fisubrl
mov
or
in
adc
xchg
mov
or
es
in
adcb
scas
push
add
repz
xchg
mov
in
sub
mov
xchg
pop
roll
or
xor
or
add
dec
push
pop
inc
testl
bound
shr
in
adc
scas
sub
dec
jo
push
out
push
xchg
mov
jg
addr16
stos
cmp
sub
jmp
adcb
sub
cmp
cli
push
add
fcmovnbe
sub
push
sbb
dec
sbb
fadds
push
pop
loopne
xor
cltd
call
popa
inc
cmp
pop
fbld
scas
mov
inc
outsl
cmp
adc
xchg
out
subl
xchg
imul
mov
cmp
adc
dec
lods
add
repnz
into
popa
scas
dec
in
xchg
psubsw
roll
in
aas
aaa
mov
jo
xchg
cmp
inc
xor
sub
add
and
test
xchg
lret
jnp
xchg
push
shll
push
clc
pop
inc
pop
add
out
stos
push
xor
dec
mov
jb
mov
push
mov
daa
sti
inc
call
push
mov
enter
repnz
xor
sbb
fcompl
imul
mov
mov
icebp
mov
inc
imul
cwtl
and
leave
inc
inc
mov
jne
aaa
xor
push
and
mov
adc
unpcklps
and
jp
imul
leave
scas
lcall
sbb
hlt
les
add
adc
or
test
and
xchg
sub
push
sbb
inc
add
adc
cmp
and
lcall
cmp
cmp
mov
or
test
lret
sbb
mov
lret
pop
pop
push
aam
mov
add
jecxz
cltd
pop
lea
fisttpl
scas
cmp
add
pushf
push
aas
cmpl
stos
sbb
rolb
ret
inc
pop
push
arpl
into
ds
std
lods
scas
lahf
cmp
sbb
pop
pushf
test
mov
pop
decl
add
scas
in
stos
jp
push
mov
jecxz
mov
mov
or
shlb
mov
pop
inc
fnstenv
mov
and
add
cmpsl
out
ret
dec
adc
pushf
out
out
nop
rorl
pop
cmp
loope
and
xorl
cmpsb
jae
ss
adc
push
ds
inc
test
imulb
enter
pop
dec
mov
or
cltd
test
pop
hlt
xor
xorl
imul
icebp
jge
test
fnsaves
dec
xor
scas
sbb
mov
in
leave
pop
and
pop
xor
adc
add
mov
loope
data16
out
rol
fstpl
cmp
jns
adc
jecxz
fisttpl
and
jnp
adc
dec
js
push
mov
mov
mov
add
jg
push
jge
in
dec
adc
jbe
aaa
jl
mov
filds
mov
cltd
mov
pop
shll
sub
das
clc
fidivrl
or
stos
jb
popa
imul
addl
cmp
pop
js
inc
dec
pop
pop
inc
cmp
sbb
xorb
push
insl
jno
sbb
int3
jb
xchg
cmp
sub
shl
arpl
movsb
test
out
push
bound
insb
xor
imul
mov
fldl
mov
outsl
adc
add
rol
ljmp
jo
aas
aad
mov
data16
xchg
repnz
mov
add
pop
stos
test
scas
pop
cmp
orl
gs
stc
inc
mov
mov
jae
lea
mov
jae,pn
jb
sub
test
mov
mov
sbb
fdivl
add
test
add
mov
pushf
out
arpl
dec
add
clc
fnsave
push
popf
push
clc
ja
lea
lret
sbb
pushw
sub
mov
fcmovnu
dec
imull
iret
subb
ss
dec
xor
jge
loop
mov
lds
loopne
insb
cmp
aam
lods
inc
nop
gs
leave
and
cmpsl
fwait
push
cli
nop
or
adc
ds
add
ljmp
xlat
lahf
repz
test
pop
or
aam
mov
pop
add
and
mov
insb
ds
mov
testl
cld
incb
cmp
push
les
adc
ret
cmp
stc
outsb
jno
shll
loopne
test
dec
in
jmp
rorb
out
dec
rorb
mov
not
mov
dec
jnp
adc
fsubs
cld
xlat
ds
jg
fldt
in
push
mov
int
jb
xchg
mov
lahf
sbb
mov
add
fldl
ds
mov
jle
ret
jl
push
sub
pop
insl
into
lcall
add
or
mov
jbe
into
sub
and
and
andl
mov
rcrl
mov
mov
movsl
mov
test
leave
je
mov
push
inc
cmp
scas
cmp
jb
cs
loope
dec
sbb
fs
sahf
test
ret
loopne
out
mov
lods
jle
clc
sbb
shlb
repnz
push
jp
mov
stos
or
out
cmpsb
xor
pop
add
pop
xchg
sub
pushf
cli
and
iret
sub
call
inc
ljmp
adc
dec
or
push
mov
cmp
adc
jecxz
adc
xchg
mov
cmp
push
popa
mov
shrb
push
pop
inc
sbb
xchg
add
push
inc
pop
popf
mov
out
cwtl
mov
and
inc
addr16
ss
popf
mov
cmc
mov
sub
out
call
sbb
testl
dec
jno
pop
mov
xchg
test
cmp
cld
push
pop
icebp
aaa
adc
mov
ss
loope
or
push
mov
xchg
jecxz
lcall
cmpsl
repnz
push
mov
nop
or
rol
pop
pop
and
or
dec
push
addr16
sbb
in
jmp
adc
and
scas
sub
mov
add
ljmp
jbe
movsb
inc
jne
mov
mov
cmp
xor
jp
sub
or
mov
mov
fs
movsl
mov
stc
dec
xor
inc
inc
add
clc
add
in
imul
push
ss
lahf
mov
sar
xorl
mov
pop
cmp
push
aas
or
jl
xchg
jp
fstpt
dec
sub
cmpsl
dec
lds
push
inc
jmp
sbb
mov
andps
ror
xor
jb
add
pusha
mov
stc
add
sub
lahf
pop
test
cmp
iret
jo
sbb
lcall
insb
fwait
or
outsl
mov
sti
pop
mov
shlb
in
pop
xchg
ja
cld
adcl
sbb
jle
mov
mov
mov
sbb
inc
cmc
icebp
sti
or
mov
jo
or
xchg
pop
cmp
xchg
call
notb
cmpsb
fdivrl
cmpsl
cmpsb
leave
lock
jp
jne
out
stc
push
mov
pop
add
fcmovnbe
mov
xor
insl
fistps
movb
int3
mov
jae
in
lds
mov
popa
imul
jne
mov
sbb
and
push
xrelease
mov
push
outsb
dec
test
push
mov
icebp
adc
adc
jg
pop
xchg
test
push
lcall
shrb
pop
jo
clc
arpl
pop
add
es
add
mov
ret
es
and
mov
sbb
adc
roll
sub
lcall
int3
xchg
and
in
pusha
sbb
fucom
mov
fs
test
push
cmc
mov
dec
fmulp
sub
in
negl
in
stc
lahf
ret
sti
fisubl
xlat
push
fs
loope
into
jae
divb
sbb
adc
jb
leave
xorl
jmp
push
mov
ss
push
xor
out
add
cmp
popf
movaps
ds
int
in
jno
jmp
and
xor
mov
repnz
mov
ret
mov
dec
inc
loope
aas
xchg
pop
dec
sbb
pop
imul
pop
scas
or
scas
mov
out
fistpl
sti
mov
sub
iret
fnsave
aas
adc
dec
out
mov
push
xor
stos
lret
sub
hlt
sub
sub
bound
sub
xor
fstpt
jp
outsb
add
dec
mov
loope
pop
dec
mov
cs
mov
xchg
push
or
jbe
dec
ficoms
aaa
xchg
subl
xor
rorb
sbb
leave
gs
rcrl
xchg
cmp
add
or
fmull
or
repnz
xchg
sti
sbb
pop
adc
pop
loop
scas
inc
inc
jmp
mov
fstpt
int3
aam
sahf
or
push
arpl
test
jp
addb
ret
mov
adc
push
add
add
inc
in
push
mov
xchg
fs
pop
push
mov
add
add
mov
stc
pcmpeqd
fsts
sub
je
mov
xlat
push
xor
daa
sahf
imul
fdiv
pushf
push
stos
xchg
mov
outsl
inc
jge
inc
xchg
mov
test
in
call
or
xor
imul
jae
movsb
enter
xchg
loopne
in
cmpsb
sub
cmp
shl
mov
arpl
rorb
push
mov
fnstenv
stos
xchg
cmp
xorb
adc
jecxz
sahf
fwait
jp
push
fs
nop
sub
push
fsubs
pop
mov
xor
in
test
mov
or
bound
js
ss
jo
push
incb
and
loope
jl
pop
or
cmp
out
testl
daa
aad
cmp
inc
inc
ret
lods
adc
mov
call
xchg
xor
insb
addr16
addl
adc
lahf
lock
ja
jecxz
call
dec
out
xor
or
dec
cmp
jbe
mov
adc
push
enter
pop
cld
insb
inc
fisubrl
xchg
push
fmuls
cmp
dec
fcoms
push
scas
jae
or
lods
insl
xchg
xor
mov
dec
fnstenv
insb
scas
test
jp
xchg
dec
adc
xor
inc
add
int3
sbb
push
xchg
pop
gs
push
stos
mov
hlt
mov
call
mov
cs
out
xor
jmp
push
mov
xor
push
xchg
inc
sbb
hlt
stos
daa
out
jbe
cmpsl
jl
syscall
aas
sub
inc
scas
push
push
xorl
push
and
and
cmp
push
int3
fninit
scas
ljmp
and
mov
pushf
dec
xchg
sti
mov
cmpsb
ret
inc
test
cs
test
fildll
push
cmc
mov
fidivrs
pushf
mov
jnp
popa
jnp
cmpsl
add
jae
cli
sub
xchg
fwait
icebp
fs
and
insb
mov
shlb
test
sti
data16
xchg
pop
sarb
xchg
out
mov
sahf
push
int
mov
cmp
test
aas
loop
xchg
mov
lds
out
sbb
mov
adc
out
in
dec
in
mov
in
adc
mov
xchg
rcll
ret
and
sub
scas
jg
cmp
popa
adc
push
jbe
adcl
pusha
outsb
cld
mov
sub
xor
mov
loop
das
cmp
lods
push
xchg
dec
aas
mov
cmp
jmp
cmp
imul
lcall
push
or
std
jecxz
mov
add
cmp
sub
sub
cmp
les
in
ljmp
xchg
lds
je
pop
popa
movhps
push
jbe
add
js
mov
jg
jb
into
mov
out
fnstenv
sub
xor
xlat
outsl
scas
mov
lds
xchg
push
sbb
pop
sbb
lahf
mov
jns
lods
ljmp
xchg
addr16
ret
in
out
scas
mov
rcrl
mov
arpl
fsub
imul
test
scas
out
mov
cmp
sbb
cmpsl
shr
cli
ret
iret
cltd
xorb
jle
out
mov
push
cwtl
leave
inc
iret
mov
ret
lods
jb
lahf
xchg
shrl
scas
int3
cmpsb
pop
xchg
jmp
dec
dec
neg
leave
push
xor
movb
ret
outsb
jb
lods
pcmpeqw
cmp
jae
mov
xor
das
jbe
lods
jle
push
add
inc
and
jge
and
sub
or
rclb
sbb
and
mov
sub
mov
shr
loop
inc
xor
or
add
adc
cli
mov
mov
push
sub
shll
jg
ja
xchg
mov
or
mov
dec
mov
int3
cltd
xor
fs
test
pop
mov
fdiv
cld
daa
out
mov
rorb
je
aas
in
add
stos
insb
leave
cmp
sub
xchg
ret
mov
push
push
in
aas
es
pusha
shll
and
aaa
es
mov
mov
mov
mov
rol
inc
pop
insl
mov
pop
mov
sub
add
leave
fwait
mov
imul
or
mov
xchg
shlb
add
cmp
jmp
popa
insb
pop
inc
test
sbb
rcrl
xor
and
les
lret
lea
loopne
inc
push
test
mov
jnp
out
dec
push
xchg
int
push
mov
fwait
das
pop
inc
icebp
test
inc
fs
inc
roll
xchg
cmpsb
addr16
jb
fcoms
push
es
mov
push
add
mov
es
nop
sub
pop
mov
jo
or
fwait
mov
test
int3
dec
dec
pop
aas
outsb
push
shlb
cltd
lock
jo
scas
in
jmp
cmp
xchg
sub
lahf
scas
popa
cli
lock
mov
push
pop
mov
call
outsl
decl
push
lret
or
movsb
adc
sbb
js
and
pop
in
in
dec
outsl
pushf
xor
imul
mov
sub
outsb
mov
inc
int3
sub
xor
in
cmpsb
add
jae
nop
je
ret
push
test
adc
pop
sub
cmp
sbb
shll
fs
dec
push
dec
adc
ret
repnz
mov
mov
cwtl
jo
jb
sbb
xchg
rolb
and
pushf
mov
test
jnp
sar
add
push
pop
push
aaa
mov
adc
pop
push
popf
inc
adc
movd
stos
xor
xchg
outsl
icebp
push
push
stc
nop
jl
shrb
repnz
adc
sub
add
ss
das
adc
scas
cmp
push
jp
mov
dec
add
sbb
cmpsl
or
scas
mov
mov
and
addl
jno
adc
mov
sbb
fwait
push
int
enter
movsl
out
mov
mov
insl
jmp
repnz
cmp
xchg
out
push
std
dec
pushf
add
fdivr
mov
bound
sbb
aaa
cwtl
mov
daa
pop
iret
and
loope
add
inc
test
mov
jo
arpl
in
jo
jl
stos
push
je
xor
add
ret
and
rcrl
xor
mov
xchg
lret
mov
setnp
dec
or
adc
or
arpl
aas
out
jb
fs
mov
sbbl
inc
ss
lods
into
in
cmp
cmpsb
jp
pop
push
lea
jg
xchg
or
or
mov
push
cmp
push
sti
in
stos
add
call
imul
lods
clc
out
test
pop
xor
xchg
ja
mov
jmp
add
aad
and
dec
sub
and
scas
xchg
xor
ja
movsb
xchg
push
push
xor
shl
sub
inc
testl
subb
into
xchg
hlt
ljmp
fucomp
and
or
mov
je
cmp
lret
mov
or
cmp
push
mov
sub
xchg
lods
out
pop
xor
dec
cmp
adc
adc
xchg
adc
mov
loop
nop
shrl
push
jo
cmp
int
dec
andl
in
mov
mov
mov
pop
sbb
xchg
scas
int3
out
jae
dec
and
sub
mov
aas
std
jo
jmp
cld
imul
aad
out
inc
pop
stos
imul
insl
stos
ja
adc
test
mov
aaa
cltd
mov
pop
sti
stos
je
xchg
xchg
repnz
inc
and
std
fsts
mov
cmpsl
lret
insb
sub
xor
dec
into
inc
aaa
aad
lock
pop
dec
mov
fwait
fwait
pop
jbe
or
push
pop
popf
pop
mov
add
jae
mov
push
cmpsb
xor
insb
bound
or
decb
add
test
call
xlat
es
lret
sbb
loopne
push
repnz
sbb
add
jp
repnz
inc
lahf
pmulhw
data16
jl
pop
or
les
loop
outsb
popa
insb
test
unpckhps
out
lods
dec
mov
add
shll
xor
xor
push
add
pop
cli
mov
ja
push
xchg
jge
cmpsl
lcall
cmpsl
mov
loope
in
mov
shll
pop
fwait
pop
dec
dec
arpl
dec
fcomip
mov
in
int3
dec
lcall
inc
sub
pushf
mov
repz
lea
mov
fdivl
pop
jno
stos
mov
or
jne
dec
popf
lcall
add
mov
pop
lds
in
scas
pop
loopne
pop
les
out
pop
call
outsl
rclb
in
lods
cwtl
push
fwait
cmp
loopne
mov
dec
xor
xor
bound
cmpsl
out
fdivrs
inc
jbe
ss
incb
cmpsl
aaa
dec
cld
lcall
repnz
fsubrl
sbb
pop
inc
das
shlb
orb
and
or
incl
sub
dec
dec
fwait
xchg
sbb
mov
sti
adc
push
pop
cmpsl
xor
push
add
pop
movsl
in
std
and
or
mov
call
jmp
test
lods
stc
push
xchg
mov
sahf
out
xchg
and
pop
inc
push
rcrb
push
xor
xchg
push
add
out
push
stos
test
adc
or
test
push
mov
sbb
push
sahf
inc
pop
adc
sbb
adc
jnp
mov
rcll
aaa
jbe
ljmp
xchg
push
sub
daa
jl
and
mov
fs
adc
push
jecxz
leave
mov
push
mov
leave
xchg
test
and
and
mov
flds
adc
scas
fcomps
mov
sub
pop
lods
add
popf
mov
add
dec
xor
sbb
fdivs
mov
xor
rclb
enter
jbe
sarl
mov
cmp
lock
or
loop
mov
in
jmp
in
cmp
add
mov
pop
test
xchg
call
cmp
mulb
cmp
mov
test
mov
pop
popf
mov
out
das
cmpsl
jg
pop
dec
shrb
and
push
sub
ss
mov
lcall
and
in
xchg
jb,pt
push
in
repz
into
xchg
push
mov
adc
xor
jle
push
in
aam
add
addr16
pop
cmp
jge
pop
fsubrs
adc
sbb
fldenv
and
push
stos
fbld
scas
push
hlt
push
stc
ret
sti
loopne
pop
sbb
pop
sbb
inc
aaa
dec
xchg
mov
adc
bnd
jl
shlb
inc
shrl
or
mov
rcrl
dec
lods
sub
loop
lds
pop
ljmp
jb
cmc
dec
push
lcall
fwait
mov
mov
pop
pop
jle
movsl
pop
aas
inc
adc
push
cmovle
cltd
setno
shlb
or
push
add
out
ficomps
xor
mov
hlt
sbb
mov
movsl
adcl
mov
movsb
push
adc
inc
adc
adc
mov
pop
pop
xchg
int
leave
mov
iret
or
cli
dec
aas
cs
add
mov
jl
xchg
rcr
or
hlt
popa
xchg
out
inc
add
shlb
ja
in
shl
stc
or
inc
pop
data16
aaa
fsubrp
imul
or
icebp
call
jne
loope
mov
aad
fsubrs
add
sbb
idivl
jge
adc
in
mov
cmp
dec
push
fidivl
outsb
fisubrs
xor
mov
repnz
cmp
add
inc
sub
mov
sub
and
rorb
jno
pushf
jmp
fimull
es
inc
mov
pop
lret
popf
sub
pop
lods
enter
aaa
mov
sub
add
xor
mov
xchg
int
mov
mov
int3
pop
lods
jmp
repz
les
inc
mov
test
jne
out
mov
mov
stc
lret
stc
mov
testl
pop
cmp
out
push
push
and
repnz
dec
ja
int3
sbb
mov
andl
mov
mov
mov
xchg
dec
or
or
scas
call
push
sti
mov
lds
cwtl
sbb
sbb
icebp
or
popf
pushf
push
fcomp
ffree
mov
aaa
rcll
movsl
aas
mov
push
sbb
sar
sub
adc
cmp
test
aam
mov
mov
add
ljmp
pop
hlt
jne
movsl
dec
mov
fwait
jl
and
shlb
xchg
pop
mov
jbe
jp
sub
push
outsl
adc
lods
ds
xchg
pop
xchg
xor
push
ja
dec
sub
cs
xchg
or
mov
loop
adc
mov
push
xor
inc
into
mov
cmpb
mov
adc
or
arpl
mov
mov
data16
cwtl
pop
inc
xchg
mov
icebp
mov
movb
cltd
and
pop
je
xchg
pop
or
outsl
testl
jne
pop
popa
add
enter
das
iret
arpl
xchg
scas
mov
ljmp
je
jle
addr16
mov
sti
hlt
mov
fiadds
sbbb
xchg
js
cmp
enter
outsl
movsl
icebp
xchg
push
sahf
push
adc
pop
in
repz
adcb
push
cltd
jbe
mov
pop
pop
mov
test
jecxz
mov
stc
out
lea
ficoms
testl
mov
inc
mov
sub
pushf
push
mov
jbe
dec
cld
xchg
nop
insb
mov
mov
rcr
sub
arpl
fs
pusha
adc
mov
or
mov
sub
lcall
pop
lods
in
dec
lods
outsb
mov
xchg
inc
xor
and
sti
inc
lods
cli
dec
push
outsl
sbb
lods
out
outsl
in
addr16
cmp
in
inc
lret
xchg
push
cmp
jp
jge
or
add
and
xchg
sbb
sbb
xorl
mov
mov
ficomps
push
push
xchg
dec
sbb
ret
lahf
insb
jno
out
cmpsl
testb
loop
lcall
fs
mov
test
out
lret
xchg
mov
dec
inc
pushf
or
or
mov
mov
pop
sarb
scas
and
stc
add
cld
inc
sbb
lds
mov
push
std
inc
inc
jl
mov
shlb
pop
sub
lret
inc
rolb
push
mov
and
cmp
leave
dec
cltd
push
cmpsb
es
or
fdivl
jmp
jmp
inc
dec
mov
mov
pop
sub
and
xchg
scas
push
scas
in
sub
mov
in
outsb
pop
mov
and
insb
movsl
jae
loope
lcall
out
and
inc
mov
jno
js
jg
dec
int
adc
fldl
cmp
f2xm1
jae
out
lods
pop
das
loope
mov
dec
push
mov
js
out
jp
ja
pop
push
push
call
out
popl
sbb
xlat
cmc
jae
sub
inc
outsb
mov
mov
sub
inc
stos
push
xchg
push
xor
dec
cs
sti
popa
ret
in
adc
sub
hlt
mov
iret
xor
add
dec
xlat
lret
loope
lahf
pop
add
jge
adc
or
dec
fisubrs
movsl
das
xor
test
push
cmp
pop
jae
add
es
jne
in
iret
xor
push
sbb
mov
cmc
xor
mov
push
sbb
xchg
rolb
test
or
movsb
push
or
scas
pusha
lahf
pop
sub
adc
mov
ljmp
sub
int3
fiadds
pop
ret
scas
dec
jnp
rcrl
negb
mov
push
testl
pop
in
popa
push
fbld
cmp
xor
mov
aaa
inc
or
xchg
sbb
out
push
je
cpuid
pop
bound
loop
mov
and
je
xor
rorb
or
imul
pop
ret
xor
push
ds
xchg
xchg
test
pop
in
aam
loop
in
icebp
loopne
jecxz
test
xorl
cvttps2pi
cmc
push
sbb
xor
add
test
lock
bound
cmp
stc
fsubs
test
xor
test
sbb
cmp
movsl
jbe
push
je
sbb
aaa
push
jo
sub
data16
outsb
jmp
mov
enter
lcall
lcall
sti
add
mov
lret
imul
dec
cmp
sub
test
push
sub
rcl
and
frstor
xchg
stc
xchg
paddsw
sbb
cmp
and
ja
xchg
mov
sub
into
pop
add
push
movsl
lock
mov
xchg
mov
es
daa
imul
outsb
mov
aad
jmp
push
mov
loopnew
sub
push
cmc
cmp
xchg
mov
fstpl
xor
add
je
xchg
andb
pop
jnp
xor
je
cli
dec
icebp
unpcklps
sbb
push
es
pop
adc
jae
mov
bnd
or
xchg
into
bound
cs
or
sub
ss
cmc
test
je
inc
les
lret
xchg
xor
ret
pop
loopne
fldenv
hlt
mov
lret
cmp
mov
ret
xchg
sub
rorl
inc
fldl
xchg
adc
dec
lods
mov
cld
xor
in
or
jge
xor
inc
dec
test
jns
scas
xchg
cli
loop
mov
mov
push
mov
not
sub
loop
fdivrs
xchg
paddb
mov
idiv
fcomps
notl
xchg
filds
pop
mov
push
cld
fucomip
inc
lcall
jno,pn
enter
inc
cli
ja
pushf
imul
mov
push
xlat
push
jbe
mov
mov
int3
and
movsb
sbb
sbb
sbb
or
jne
or
scas
cmc
js
fdivrl
lret
fwait
jb
sbb
adc
and
test
sbb
add
mov
fcomps
push
std
dec
cmp
sub
orl
xchg
dec
jmp
dec
mov
dec
addl
and
bound
push
mov
or
sub
and
pop
out
sub
ficompl
stos
and
mov
test
pop
cmp
or
sub
int3
mov
xor
or
pop
mov
sbb
pop
sbb
or
cmp
sbb
adc
push
inc
xor
xchg
movsb
shll
insb
mov
mov
lea
cld
xchg
pushf
jle
mov
mov
call
pusha
jno
mov
mov
lret
xchg
adc
or
jg
rorl
lret
inc
mov
mov
xor
lea
push
or
cmp
mov
sbb
int3
pop
std
orb
mov
jbe
mov
add
jp
insl
add
nop
and
fildl
pop
scas
or
push
cltd
jbe
cwtl
sbb
and
add
pushf
cld
insb
jmp
xchg
pop
movsb
mov
cli
sbb
sbb
dec
mov
fstpt
es
lea
dec
sub
insb
add
cmp
mov
pop
aam
rclb
adc
test
pop
mov
xor
notb
imul
dec
js
cli
std
jnp
mov
pop
mov
sbb
jb
mov
lcall
sti
addr16
adc
and
outsb
lods
adc
cld
fcmovnbe
jle
sub
dec
pop
movb
loopne
mov
rcll
jne
pop
cltd
ss
xchg
in
rolb
adc
inc
in
jecxz
pop
push
je
lret
adc
adc
std
enter
rclb
adc
jl
xor
dec
xchg
inc
xor
jno
xchg
pop
andb
mov
adc
push
shrl
aaa
lods
ret
jmp
ds
into
mov
jne
jne
jp
lret
lods
into
out
call
adc
lock
pushf
jnp
inc
jo
pusha
aam
dec
lahf
loope
into
add
adc
pop
sbb
cmpsl
outsb
loope
add
cs
mov
popf
test
mov
jnp
mov
std
movsb
push
xor
inc
pop
sub
test
aaa
mov
xor
stos
cltd
cmp
jecxz
push
repz
into
aaa
mov
insb
sarb
aas
je
insb
rcrl
nop
lahf
xor
sbb
and
adc
dec
inc
lods
aas
jne
sbb
hlt
sarb
loopne
or
fsub
mov
bound
scas
sbb
inc
ss
jb
adc
jp
cmpsl
aad
repz
dec
cmpl
lods
addr16
dec
lock
jg
fiaddl
aad
pop
lock
imul
push
sbb
sub
aad
add
add
mov
mov
sbb
fdivrs
jb
push
mov
dec
cmc
outsb
les
jl
mov
ja
xor
scas
adc
mov
mov
sarl
mov
mov
out
sti
hlt
les
ret
jmp
lsl
sahf
call
bnd
cli
inc
stos
aaa
lretw
jmp
xchg
lock
xchg
pop
in
rcrb
mov
in
sub
test
cld
loopne
sub
fsubl
imul
lea
xchg
mov
add
hlt
int
push
dec
js
ljmp
jecxz
int3
inc
push
sub
dec
add
sbb
sbb
icebp
in
mov
sarb
sahf
pop
daa
mov
jnp
sbb
or
call
inc
sbb
push
div
fcoms
std
inc
and
lret
xchg
pop
in
lahf
call
insb
xchg
mov
clc
loop
mov
arpl
xor
xchg
fnstenv
stc
enter
out
ficoms
insl
xlat
dec
pop
push
loope
std
jl
and
xchg
clc
pop
cltd
jmp
jae
xor
sbb
mov
insl
arpl
data16
add
or
int3
hlt
stc
fwait
mov
cmp
lea
sub
imul
insb
test
pop
sahf
sarl
or
push
fisttps
mov
arpl
mov
loopne
mov
js
add
inc
popf
in
add
test
sub
loop
outsl
mov
cmp
sub
lcall
and
add
aad
cmpsb
jl
jmp
xchg
xchg
jo
fwait
insl
sbb
bndldx
insb
and
hlt
mov
inc
pop
outsl
iret
scas
jp
sub
inc
test
int
inc
adc
divl
leave
add
fdivp
xor
inc
in
dec
fndisi(8087
jmp
adc
sub
sbb
pop
loope
jno
adc
div
insl
sahf
pop
shrb
push
xchg
inc
outsl
push
pavgw
call
jmp
sub
mov
xor
addb
mov
cmp
leave
test
pop
sub
sbb
mov
andb
jne
out
mov
out
dec
push
inc
cmp
in
or
push
cmp
and
cmpsb
xchg
sbb
outsl
shll
cmp
leave
divb
fcmovnu
sub
xchg
sbb
insb
push
or
adc
int3
mov
push
adc
pop
je
inc
mov
out
imul
sbbb
push
leave
mov
repnz
xchg
std
sbb
incl
mov
rclb
aaa
sub
jmp
lret
adc
out
dec
data16
daa
mov
dec
sub
push
dec
xchg
pop
add
pop
fcomp
in
das
mov
cmpsb
add
cmpsl
mov
cmp
pop
shlb
aas
sbb
hlt
add
sub
shlb
dec
inc
int3
cwtl
mov
fbstp
flds
fs
int3
pushfw
aas
jno
testl
cmpsl
lods
or
ficoml
mov
jbe
mov
push
xor
rolb
cltd
jl
cltd
xchg
sti
mov
mov
aad
shll
add
sbb
hlt
add
push
aas
push
lret
and
jb
xchg
xor
pop
gs
inc
and
scas
xchg
ss
cmp
push
dec
mov
incb
jae
enter
in
int
adc
std
push
fwait
test
sub
std
sqrtps
out
fiadds
xchg
aas
bound
mov
jle
lcall
cs
jl
dec
test
mov
jo
pusha
pop
push
enter
mov
fcmovne
xor
idivl
sub
push
lret
add
lret
in
sbb
inc
pmaxsw
xchg
push
cmp
movsb
lock
ret
mov
mov
mov
xor
jecxz
xchg
fldenv
jns
xchg
sub
cmpsl
sti
ror
adc
mov
in
adc
mov
pinsrw
flds
jl
call
mov
and
lcall
sub
enter
cmp
data16
push
mov
xchg
and
cli
fmull
aam
pusha
lds
or
dec
xchg
sub
jnp
push
mov
jb
push
sub
lea
fucomi
sub
mov
gs
jg
xchg
pusha
int
cmp
inc
into
sbb
and
scas
push
lods
xchg
jecxz
shll
cwtl
addr16
je
push
pop
cmpsl
fs
test
fsubs
jl
pop
out
adc
xchg
aas
push
aaa
in
jge
pop
iret
jl
jp
push
sbb
add
dec
ja
cltd
out
sub
stc
mov
enter
mov
fdivrs
popa
sub
testl
fwait
mov
sub
stc
jecxz
movsb
pop
mov
push
pop
push
imul
stos
fsubs
aad
sub
add
lret
xchg
jmp
mov
sbb
jmp
or
test
shlb
call
aam
jg
fistpl
fstpt
cmp
repnz
aad
lods
aas
rorl
adc
shrb
pushf
in
test
test
insb
inc
xor
xor
mov
sub
sub
aaa
add
cmp
lahf
sbb
jnp
fidivs
ret
lods
test
jp
dec
cmp
mov
pop
popa
hlt
push
fisttpll
jnp
call
xchg
and
test
rcrb
jmp
test
cmpb
nop
fisttps
arpl
mov
mov
jl
inc
out
ja
mov
add
sub
fcoms
lock
push
or
push
fldt
bound
sub
cmp
xor
loopne
into
xor
int
loop
arpl
lods
push
jb
jb
scas
hlt
inc
push
subl
jmp
scas
out
push
ficomps
add
pop
cwtl
out
cmp
mov
sbb
xchg
jge
adcl
ret
xchg
sarl
cmpsl
or
sbb
cmpsb
je
call
ss
adc
arpl
test
mov
xchg
xchg
loop
enter
mov
and
shr
outsb
jb
addr16
cs
sbb
dec
sub
pop
pop
jge
pusha
xchg
or
daa
mov
mov
inc
mov
mov
jg
jge
xor
jne
imul
rcll
pop
cmc
or
mov
imul
data16
mov
out
pop
jo
mov
push
lods
jmp
sbb
in
test
leave
lret
lahf
xor
lcall
xor
out
sahf
rolb
nop
dec
out
xchg
cmp
imul
mov
or
sub
arpl
stc
jmp
cltd
dec
insl
rol
add
inc
add
daa
mov
in
dec
adc
inc
sub
sub
test
pusha
in
mov
sub
pop
or
pop
jne
add
sbb
mov
subl
push
lods
mov
push
cli
pop
or
xchg
loope
jae
into
daa
adc
cmp
mov
and
xchg
mov
pop
sbb
or
scas
xor
ja
sbb
mov
push
test
call
xchg
push
jnp
fisttps
jle
cmp
or
and
sbb
fidivrl
aad
push
inc
push
jno
fs
test
mov
push
sbb
je
fld
cmp
sbb
popa
out
std
cmp
imul
repz
sub
bound
outsb
and
popf
inc
inc
cmpsl
aam
fdivl
cmp
icebp
clc
push
lods
scas
jl
lcall
cmp
push
mov
push
addr16
sub
cwtl
mov
adc
cmc
shlb
loope
pop
ret
ja
lds
fdivp
movsl
scas
and
mov
repnz
lods
mov
mov
pop
dec
push
repz
test
mov
mov
and
test
clc
xchg
sbb
in
inc
jle
rcrl
in
out
fstps
cmpb
nop
mov
imul
pop
add
sbb
arpl
mov
sarl
out
mov
mov
js
sbb
pop
mov
test
mov
add
push
inc
push
cmp
inc
pop
rcrb
xchg
mov
out
inc
mov
push
pop
xchg
in
jle
ss
fildll
jg
mov
xchg
cs
popf
adc
jge
lahf
mov
pop
lods
add
out
je
ja
mov
mov
lods
std
lods
and
add
rolb
mov
xchg
stc
xchg
ret
lahf
push
inc
sbb
mov
mov
ret
aas
out
xchg
popf
jo
xchg
mov
popa
sbb
dec
scas
pusha
insl
add
inc
lds
pop
cmp
inc
pop
ljmp
cmp
jecxz
fdivl
and
adc
or
fwait
and
mov
inc
cmpsl
fisttpl
sub
add
les
sbb
add
out
mov
mov
call
das
mov
insb
cld
lods
and
js
xchg
outsb
mov
dec
or
dec
dec
stc
pop
insl
adc
mov
out
pop
cwtl
mov
shlb
pop
xor
pop
xchg
pop
fs
mov
int
cmp
push
or
inc
frstor
cmpsl
sbbb
xchg
mov
jbe
fs
aaa
ret
sub
dec
stos
cmp
imul
adc
fcomps
mov
mov
jnp
mov
xorl
or
outsb
push
cmp
sti
je
iret
mov
cmp
mov
das
lea
cvtps2pd
cmc
push
rclb
add
dec
pop
ljmp
adc
popa
pop
rcl
cmp
fstl
imul
dec
mov
scas
adc
clc
jg
mov
inc
xchg
dec
or
jo
scas
sbb
dec
lods
pop
lcall
sub
shlb
adc
clc
das
dec
and
in
or
je
jbe
fwait
cmpsl
adc
hlt
js
push
dec
sub
das
sbb
popa
cli
in
test
gs
dec
in
dec
repz
sub
adc
fwait
dec
js
lock
ffree
mov
daa
xlat
in
xchg
mov
cltd
iret
les
dec
dec
pop
or
loope
push
mov
stos
add
cmp
and
jno
nop
mov
push
lds
pop
scas
cltd
cmp
mov
aam
adc
jge
lahf
xor
dec
lret
cltd
test
cltd
or
das
cmpsl
mov
popa
stos
addr16
repz
and
sub
into
push
xor
jo
or
xchg
cmp
xchg
jno
sti
arpl
out
or
adc
xchg
inc
ljmp
fiaddl
clc
mov
imul
dec
scas
mov
test
ret
sub
jnp
jg
or
cmp
sbb
ja
xchg
frstor
xchg
fdivrp
mov
daa
je
xchg
mov
or
shr
in
jne
lods
xor
ljmp
fcompl
mov
or
lock
sub
pushf
aad
push
sub
lea
repnz
xor
scas
xor
xor
aas
fs
shr
cmp
imul
fldl
jae
push
fimuls
fistps
fldcw
adc
dec
pop
mov
xchg
fwait
pusha
jge
jne
rclb
sub
add
dec
push
jmp
aaa
xor
sub
dec
dec
lea
xorb
mov
int3
mov
add
xchg
xchg
xchg
les
mov
mov
mov
jge
jge
jmp
adc
cmpb
fldln2
cmp
push
fisttpl
test
add
sbb
or
cmc
pop
jae
insb
in
scas
mov
xchg
lods
rorl
jmp
adc
add
and
movsl
push
mov
pop
cmp
xchg
loop
addb
mov
dec
mov
xor
in
js
inc
loop
lock
mov
lret
aaa
nop
loop
push
stos
mov
bnd
and
imul
stc
sbb
ret
jae
imul
fdiv
sub
fadds
inc
cli
into
out
jmp
repz
into
sbb
mov
xchg
stc
testl
imulb
orl
in
inc
data16
sbb
push
mov
into
daa
add
cld
out
inc
fdivrl
movl
das
rorb
pop
cld
jecxz
nop
mov
lds
scas
out
test
pop
mov
std
jmp
add
adc
adc
scas
add
int3
mov
callw
dec
push
jl
mov
icebp
inc
push
pop
cltd
cmp
or
fnstsw
mov
scas
xor
pop
lods
jge
pusha
leave
xchg
cmp
lahf
jnp
fwait
data16
or
mov
jb
aam
jns
fs
in
jb
adc
pop
mov
test
pop
test
jae
loopne
call
xor
or
jl
sbb
cld
icebp
mov
or
adc
cld
or
lea
add
call
add
lahf
add
pop
xchg
pop
repz
mov
cwtl
test
sbb
xor
mov
xor
in
clc
xor
push
adc
rolb
filds
aad
lods
dec
inc
popa
aas
and
cltd
popa
pop
cld
pop
fisttpl
push
jecxz
lcall
hlt
mov
jmp
add
inc
clc
push
daa
dec
xchg
not
mov
pop
rcr
addb
mov
fdiv
orb
pop
inc
add
mov
enter
lods
out
mov
inc
outsb
and
wrmsr
mov
xchg
mov
and
add
dec
push
mov
ficoml
ds
and
mov
leave
sbb
lods
into
sub
pushf
cli
nop
push
xchg
add
jge
sbb
lds
jae
xchg
jae
push
pop
add
inc
dec
sarb
cs
xchg
sub
aam
scas
rcrb
add
push
popf
add
andb
ja
push
dec
mov
test
or
mov
mov
push
mov
and
xlat
fildl
out
adcl
ljmp
mov
int
mov
dec
jl
lods
dec
jae
jbe
inc
pop
fsubl
ljmp
cmpsb
frstor
mov
inc
mov
sub
push
jmp
pop
mov
cmpsl
gs
dec
inc
sarl
loope
lock
pop
mov
scas
out
js
pop
je
xchg
fs
jae
lcall
xchg
xchg
jl
fs
and
jno
lods
hlt
ret
fstl
mov
xor
add
cmp
cmp
mov
lds
xor
rolb
and
mov
ret
mov
arpl
fsubrl
icebp
test
scas
es
lcall
jb
dec
cmp
dec
std
xor
stc
inc
lret
out
filds
into
inc
test
mov
or
mov
imul
push
lock
daa
popa
inc
add
mov
rorb
fsubl
into
jne
jae
push
mov
adc
test
int3
das
inc
fcoms
bound
mov
rcll
pop
xchg
js
scas
or
mov
sub
sahf
or
pop
mov
mov
ds
das
lock
icebp
imul
or
rcll
mov
ljmp
sbb
jg
cmp
aam
mov
dec
js
jno
out
in
push
jno
test
stos
movsl
insl
icebp
in
pop
movsl
out
es
enter
into
cmc
xchg
inc
lds
xchg
jge
adc
out
sub
imul
pop
sub
mov
addr16
push
pusha
lods
pop
inc
cmc
sti
inc
ret
sahf
add
jg
movsb
faddp
mov
ljmp
xchg
pop
sub
push
pop
cmpsb
pop
or
enter
mov
jp
mov
sub
xchg
and
push
inc
pop
cmp
mov
cmpsb
add
add
dec
xchg
or
loop
in
mov
adc
pop
insb
sbb
rcll
out
inc
pop
mov
xchg
push
dec
mov
es
repz
cltd
inc
xchg
sub
lret
jge
mov
fmul
scas
mov
mov
stos
jbe
fnstcw
add
inc
movsl
add
test
pop
adc
push
mov
cmpsb
mov
in
icebp
add
hlt
push
cmp
or
pop
jnp
fwait
sahf
lods
ljmp
rcll
bound
shl
outsb
test
mov
dec
and
lcall
cmpsb
divps
les
push
lods
fucomip
cmp
mov
xor
add
cwtl
sub
fisttpll
imul
adc
popf
xor
adc
js
xor
arpl
add
jbe
daa
fdivs
in
xor
dec
cltd
shrb
and
sub
fildl
xor
pusha
aaa
pop
cwtl
add
mulb
mov
fsubrl
sub
cmpsl
jae
je
sub
sub
inc
add
clc
sub
call
enter
dec
pop
bound
movsl
insb
mov
lods
lret
xor
push
push
pop
arpl
xor
jo
in
jb
ja
jo
mov
mov
movsb
cwtl
cli
push
sbb
mov
out
xor
test
test
lret
mov
in
or
orb
dec
inc
mov
cmpb
inc
ss
mov
decl
xchg
es
scas
sbbl
test
push
or
and
add
ds
into
lahf
sub
movsb
pop
adc
fcomps
ljmp
cmc
push
mov
mov
mov
push
mov
in
lahf
sbb
cmc
and
xchg
sbb
cmp
gs
cmp
xchg
cmp
loopne
cmp
pop
jle
cmpsl
or
xchg
in
flds
gs
cmp
mov
iret
shrb
cmpsb
cwtl
dec
fdivrp
mov
ljmp
jb
mov
lcall
sahf
or
mov
out
int3
loop
es
mov
icebp
scas
pop
push
jb
xchg
sbb
arpl
out
ror
outsb
cltd
aaa
sub
lahf
xchg
mov
and
icebp
aaa
sub
nop
fmuls
aad
nop
outsl
sbb
ss
stos
std
stc
mov
popf
das
cmp
jge
and
das
nop
out
ja
test
test
test
aad
jmp
jo
inc
loopne
cmp
inc
dec
fildl
aaa
outsl
cmp
int3
push
enter
mov
adc
and
push
push
ds
stos
push
push
cwtl
faddl
xor
and
mov
mov
xor
jl
adc
xchg
cmp
push
clc
int
xor
addr16
and
sub
push
add
in
insb
fidivrs
pop
les
jbe
pop
ret
pop
jnp
sbb
mov
cmp
mov
lock
pop
mov
sub
mov
inc
notb
jb
negb
mov
fucom
scas
push
and
test
std
cmp
xlat
xor
cltd
pushf
in
pop
les
push
mov
inc
mov
ret
or
cmp
fsubr
xchg
jnp
lcall
ficoms
mov
inc
add
add
mov
fidivl
sbb
addr16
xchg
subl
pop
dec
int3
movsb
std
and
and
arpl
int3
bound
pop
pop
loopne
adc
mov
shrl
es
mov
mov
mov
stos
xchg
repnz
jb
xor
push
inc
mov
sbb
mov
add
xor
push
popf
push
adc
mov
adc
addb
dec
lods
adc
sarl
adc
dec
aad
and
negl
dec
cmp
sahf
fimuls
cs
mov
pop
inc
pushl
icebp
imul
fucomp
in
lods
xchg
mull
call
jle
loope
int
in
fistl
andl
sub
or
or
sbb
stos
into
outsl
fnstenv
jge
adc
mov
les
pop
setne
and
dec
mov
mov
or
sub
ret
scas
mov
les
xor
lahf
mov
pop
pusha
mov
jnp
sti
inc
pusha
lods
pop
cltd
jne
in
add
mov
or
add
sbb
jbe
mov
into
or
lret
loop
repz
cmp
cli
dec
hlt
dec
popf
test
jmp
sub
out
xchg
lret
push
lret
outsb
stc
sbb
out
aam
jmp
mov
jl
lods
xchg
and
sahf
xchg
outsl
sahf
jb
pushf
test
mov
jl
mov
mov
dec
inc
pop
lret
xlat
adc
popf
mov
ss
ficoml
inc
inc
xchg
jge
dec
scas
mov
add
inc
mov
fucom
push
into
test
jae
pusha
in
sub
mov
jl
rorb
pushf
popf
sbb
add
test
aam
dec
or
mov
fdivr
sub
sahf
sbb
into
ret
aad
movsl
push
pop
and
adc
call
push
shr
sub
xor
xchg
sub
jns
lock
jecxz
aas
cmp
pop
mov
mov
xor
mov
mov
icebp
repz
jmp
mov
test
jbe
adc
dec
pop
movsl
hlt
add
mov
outsl
lods
iret
or
loope
clc
lret
and
cmp
outsl
repnz
dec
fidivl
sub
pop
ss
push
sub
cs
push
stos
orl
and
push
fcoml
sub
push
and
lahf
dec
dec
mov
jl
pop
imul
shrb
leave
xor
sub
pop
or
xor
xor
push
scas
xlat
dec
adc
mov
push
pop
arpl
popf
iret
or
push
jo
xchg
push
outsl
test
arpl
mov
into
mov
or
mov
adc
sbb
bound
cs
push
mov
ret
and
adc
fs
aaa
adc
dec
push
loope
aad
insl
xor
call
pop
sub
cmp
jne
sbbl
mov
sbb
arpl
adc
push
jo
xchg
push
ss
cwtl
push
sarb
in
imul
mov
push
push
sub
sub
xor
xchg
cmp
mov
xchg
leave
jb
mov
mov
out
cs
sub
mov
stc
gs
scas
ljmp
stc
cld
cs
shlb
xchg
lret
push
out
js
loope
mov
pop
lcall
xchg
movsl
ffreep
jno
xor
add
xor
test
inc
out
jae
mov
sbb
call
cmp
icebp
sahf
inc
mov
fwait
ljmp
js
sbb
xchg
shr
sub
mov
lds
sub
cmc
mov
imul
icebp
mov
clc
add
data16
push
addr16
lahf
fisubl
roll
add
mov
nop
push
lock
sub
mov
cmp
sti
xchg
mov
adc
add
pop
sub
cmp
mov
and
mov
xor
sub
scas
xchg
push
sub
ja
push
lods
inc
fcomps
or
xchg
test
out
std
mov
in
xor
stc
jg
in
mov
dec
lock
or
lds
rcl
mov
jmp
ss
stos
clc
imul
out
gs
mov
leave
push
lds
cmc
inc
xchg
cli
add
imul
sbb
jb
shl
aam
cmc
aad
push
fisubrl
mov
xchg
cs
xchg
mov
pop
movsl
dec
sbb
inc
cwtd
pop
or
inc
lcall
add
cmp
popa
popf
xchg
ja
dec
fs
sbb
in
mov
mov
adc
outsl
mov
mov
fistpll
aam
pop
call
dec
into
xor
fistpll
cmp
rcr
adc
ja
addr16
jle
xchg
pop
jae,pn
xlat
jbe
jge
ja
fmull
xchg
lcall
int
cmpsb
lret
cmp
in
cmp
in
push
sbb
mov
and
push
shrb
enter
cmpsl
insb
pop
daa
add
xchg
sahf
inc
cli
fsubp
scas
rclb
jle,pn
sbb
xor
xchg
pop
fnstsw
xor
xor
mov
fsubs
fsubrl
pop
and
mov
mov
int
ss
fldcw
push
imul
ljmp
shr
xchg
icebp
cmp
dec
jle
and
std
decl
adc
xchg
leave
pop
xchg
scas
pop
and
add
fwait
or
aas
xchg
add
rcrl
mov
add
gs
nop
idivb
or
cwtl
mov
xor
fisubrl
scas
cmp
out
jnp
loop
cmc
jno
add
xchg
xor
xor
jg
cld
xor
popf
dec
mov
sbb
repnz
imul
push
push
enter
arpl
xchg
pop
ror
or
pop
mov
push
int3
std
pop
repnz
xchg
sbb
and
sahf
fsubrl
cmc
mov
mov
cmp
fcmovne
icebp
scas
inc
mov
mov
test
jo
ljmp
mov
xchg
jle
daa
cmp
cli
insl
lret
testb
repz
fst
insl
add
sbb
fwait
movsb
jecxz
xchg
mov
test
push
dec
in
push
clc
mov
imul
fstps
out
dec
in
mov
hlt
or
dec
or
mov
lcall
hlt
add
sub
mov
lret
lds
jl
test
mov
aad
and
adc
mov
inc
mov
lcall
mov
clc
jecxz
lods
or
hlt
leave
mov
inc
inc
or
popa
adc
push
lds
pop
cmp
test
popa
ficoml
add
pop
das
add
cmc
adc
in
insl
sbb
in
xchg
jnp
sbb
pop
mov
outsb
shlb
leave
scas
cmc
xor
push
sbb
daa
mov
fs
add
ret
xchg
mov
movsl
rclb
mov
cmp
in
mov
dec
push
mov
and
and
xor
inc
jne
faddp
and
jb
jg
cwtl
add
repnz
adc
in
adc
adc
popa
mov
aas
xorb
pop
shll
stos
lret
fstpl
adc
sti
xor
test
mov
out
fld
ret
shrl
in
divl
int
fs
in
pop
push
and
testb
push
xorl
das
adc
inc
xor
adc
push
add
in
or
inc
pop
int
jbe
mov
fs
cmp
jle
mov
add
std
je
pushf
mov
mov
mov
and
lahf
test
aas
and
xor
in
movsl
aam
test
sub
dec
inc
aas
jno
fldl
lcall
shlb
sub
dec
int
pop
mov
mov
js
or
lock
sub
push
mov
mov
xchg
ja
call
fildll
jb
aam
shl
xchg
aaa
push
or
adc
inc
sub
add
sub
ljmp
negb
lods
out
mov
aaa
ret
push
push
lea
xchg
sahf
scas
nop
std
rol
popf
mov
stos
sub
mov
outsb
pop
push
push
daa
loope
mov
in
in
mov
adc
fldl
xor
test
mov
mov
cmp
aam
adc
and
push
mov
cmpsb
arpl
pop
rcll
inc
sbb
ss
sub
mov
pop
xchg
jnp
xchg
add
cmp
dec
fsubs
inc
or
add
enter
hlt
shl
fmulp
dec
push
mov
test
mov
push
out
mov
cmp
popa
test
gs
ret
pop
jle
imul
stos
in
inc
sub
cmp
pop
push
pop
std
into
mov
push
js
in
mov
sub
ret
sub
pop
scas
fisubrl
dec
insb
lahf
mov
sti
add
push
pop
jnp
mov
push
xor
mov
rcll
sbb
lock
loope
rolb
cmpsl
lds
push
sahf
pop
cli
int
mov
xchg
repnz
inc
icebp
les
out
inc
lods
and
or
cmp
dec
aaa
pusha
push
cmp
push
jo
stos
mov
mov
xchg
inc
mov
js
pop
dec
xchg
sti
jne
data16
add
jne
adc
add
jl
pushf
fs
xchg
test
outsl
loope
pop
stos
cmc
imul
pop
stos
cltd
push
or
ret
sub
mov
pop
pusha
ljmp
dec
inc
call
and
jb
mov
cmp
jp
xchg
or
mov
mov
daa
xor
arpl
mov
sbb
pop
imul
insl
ret
lahf
cmc
jbe
push
xchg
cmp
dec
xchg
sti
jo
shrl
sbb
outsl
and
sbb
mov
rcrb
add
into
xchg
push
cld
jge
je
jmp
xor
das
shll
push
cmpsl
xchg
in
rcr
call
js
cmp
xchg
lret
inc
ja
mov
pushf
clc
pop
stc
lds
pushf
daa
mov
lcall
insl
add
call
notb
loope
jbe,pn
xchg
dec
dec
pop
test
xchg
dec
or
adc
jo
xor
xchg
fistpll
and
cmp
sub
mov
sbb
nop
xor
mov
cwtl
mov
xchg
sbb
xor
fcmovnbe
and
clc
scas
mov
inc
clc
pushl
pop
xor
loopne
clc
or
sub
out
negb
in
enter
int3
push
inc
xchg
mov
sub
mov
jp
push
loopne
popa
and
xor
pushf
div
xchg
push
sub
push
sub
in
jp
pop
int3
dec
clc
inc
xchg
push
push
arpl
sar
enter
dec
fsubrs
adc
xor
xlat
loopne
int3
add
out
or
loopne
jle
stos
sti
in
hlt
or
ljmp
data16
pop
ss
divl
adc
sbbb
push
int3
mov
mov
jg
ds
mov
mov
mov
pop
shrb
adc
inc
xchg
movsl
pop
sbb
jg
adc
push
outsb
scas
xor
sub
mov
dec
dec
sbb
aas
jbe
push
je
lea
mov
inc
int
aaa
or
imul
push
hlt
or
int3
add
pop
out
in
fldl
sub
mov
mov
pop
fisubs
rclb
test
inc
test
int
cmp
hlt
movsl
sub
cwtl
stc
ds
cltd
movsb
mov
inc
fldcw
add
test
btc
loope
xchg
adc
or
mulb
pop
inc
inc
jo
dec
push
or
fs
jae
push
xchg
aaa
call
into
mov
popf
data16
stos
mov
pop
imul
daa
push
pushf
pop
notb
xor
ret
pop
test
xor
mov
jmp
mov
inc
pop
aam
iret
mov
test
in
mov
pop
aas
testl
sbb
or
mov
outsl
into
mov
fdivp
int3
mov
test
sbb
push
jo
test
mov
sbb
gs
pop
sub
aam
fidivrs
xor
mov
iret
push
dec
push
pusha
aas
and
add
sub
pop
mov
mov
leave
scas
push
sbb
xor
sub
dec
dec
aam
mov
mov
nop
repnz
pop
repz
out
push
adc
mov
adc
sbb
or
or
push
xor
mov
je
std
out
sbb
addr16
movsb
push
jb
dec
sti
dec
dec
and
xchg
pop
inc
fadds
pop
hlt
mov
push
push
mov
xchg
fwait
lea
or
pop
mov
sti
call
inc
stos
ss
and
jne
jecxz
mov
jl
push
negb
push
lods
ret
aam
xor
or
xchg
sub
pusha
hlt
test
insb
and
mov
cli
shl
je
nop
in
add
cld
out
aam
in
daa
push
xor
jecxz
push
mov
fidivrl
repz
adc
bound
fldl
addr16
sbb
mov
add
stos
xor
test
std
sbb
rclb
jp
xor
rcl
ret
sbb
xchg
jg
dec
xchg
cld
jge
loope
pop
add
aaa
clc
outsl
in
inc
lcall
test
leave
pusha
dec
lret
rolb
push
popa
fstpt
sub
sub
mov
mov
or
hlt
cmp
and
ds
movsl
dec
mov
mov
cld
push
jmp
movsb
cmpb
and
cwtl
fldt
lret
jb
sbb
in
mov
push
cmc
xor
scas
ss
mov
notb
lcall
sahf
push
mov
lahf
std
cld
push
out
das
jno
shrb
xor
movsb
jge
insl
pop
push
test
adc
sub
imul
mov
into
call
xchg
pushf
cwtl
jbe
lahf
cmpsb
inc
repz
jecxz
aaa
aam
inc
adc
inc
inc
not
dec
loope
mov
test
push
insl
fcomps
mov
sbb
popa
cmp
sbb
fisubrl
iret
xor
test
outsl
stos
sub
and
jo
jbe
out
xchg
sbb
fldcw
xchg
hlt
insl
mov
loopne
mov
push
xor
jbe
out
test
inc
in
xor
out
lahf
lret
leave
pop
xchg
popf
or
mov
cltd
arpl
sbb
loopne
dec
pop
cmp
xchg
bound
ret
xor
je
xor
sti
int3
mov
sub
jmp
dec
call
shr
cmp
cmp
dec
mov
nop
inc
push
pop
and
mov
icebp
pop
sub
jne
add
mov
jecxz
xor
mov
out
dec
mov
pop
in
sbb
dec
scas
dec
push
push
adc
sahf
push
out
insl
mov
add
and
pop
arpl
fmull
add
cmc
fistpll
ljmp
add
xor
push
or
push
cs
push
pop
or
pop
jnp
xchg
pop
pop
ret
jnp
pop
mov
test
fs
pop
sarl
out
and
jo
or
mov
lds
out
adc
inc
xor
inc
sub
cmpsl
movsl
sahf
push
mov
ret
or
test
jne
in
sahf
push
insb
xor
push
cmp
pop
ja
mov
out
ds
ljmp
idiv
sub
push
lret
cmp
mov
iret
dec
mov
mov
arpl
mov
push
aaa
jle
mov
notb
mov
andb
out
js
movsl
sub
lea
mov
or
int3
pusha
cld
rorb
xchg
aas
mov
insb
dec
sarb
fwait
sub
pushf
dec
insl
adc
lret
and
arpl
xchg
and
test
lahf
sbb
lret
jb
sbb
adc
sub
std
fsubp
jmp
xchg
inc
mov
hlt
mov
pop
movsb
or
jbe
jp
faddp
aam
add
jae
adc
jge
inc
sub
rorb
sub
dec
mov
enter
out
es
or
and
mov
aam
int3
or
aam
push
push
scas
mov
adc
sahf
cmp
and
stos
jne
repnz
pusha
outsb
push
orl
psrad
cmpsl
mov
lods
and
mov
jae
push
adc
push
mov
inc
lret
mov
add
mov
fs
adc
mov
lods
jae
fisttpll
testb
lods
stos
orl
push
fidivrs
pushf
int
and
cmc
test
pop
sbb
inc
nop
sti
xor
outsl
ljmp
push
push
xor
in
adcl
add
es
mov
gs
aad
mov
lods
in
xchg
test
std
sbb
flds
sysexit
and
fnsave
outsb
push
and
sarl
and
leave
lcall
mov
lods
mov
pop
inc
sub
faddl
sub
mov
lret
jae
jecxz
inc
stos
fcompl
lods
sub
ss
jge
dec
imul
mov
loop
das
push
add
mov
dec
lahf
stos
sub
adc
fwait
mov
add
cli
or
mov
push
aaa
pop
insl
pop
jmp
ror
daa
mov
xchg
sub
or
clc
stos
pop
inc
xchg
inc
hlt
fcoml
mov
or
and
jno
dec
scas
aas
call
test
inc
push
push
jae
fisubrl
es
popf
xor
andl
pop
adc
jmp
repz
jg
inc
aaa
jmp
loopne
stos
mov
cwtl
enter
jg,pt
mov
mov
in
sub
popa
xchg
jo
sbb
jno
sarb
dec
fs
pop
das
mov
mov
fsubrp
addl
or
popf
mov
aas
push
push
xchg
orb
xchg
xchg
adc
xchg
lret
mov
es
sarl
fxch
std
dec
jbe
out
outsl
cmc
in
mov
jp
pop
stos
inc
and
jns
out
pop
lret
insl
cltd
sbb
adc
adc
sbb
fbld
cmp
popf
adc
fwait
jmp
out
lock
xchg
lcall
mov
rol
xlat
jns
push
enter
ds
das
ja
in
rorb
lds
pop
leave
test
je
mov
mov
jmp
pop
std
mov
mov
fs
or
xor
sub
jo
ss
negl
and
pop
neg
ret
cs
xchg
sbb
movsl
pusha
js
xchg
jmp
xorb
ficoms
pop
push
or
ret
xchg
mov
add
insl
js
int
or
and
inc
jb
xchg
push
push
sbb
repnz
fisubrl
xchg
jno
popf
ljmp
call
dec
jae
subb
sub
sahf
pusha
adc
mov
sahf
dec
adc
in
daa
into
fucompp
les
xor
lret
xchg
pop
cld
mov
xor
inc
xchg
insl
hlt
addr16
repz
js
insb
rol
insb
and
decb
insl
cmc
scas
push
jne
test
push
bound
sub
sub
enter
lea
popf
cmc
pop
mov
xchg
xor
push
fwait
out
adc
adc
mov
dec
fiaddl
mov
push
mov
mov
lods
xchg
cmp
shrl
mov
mov
rcr
and
or
popa
xor
movsb
xchg
xor
dec
mov
es
xchg
adc
sub
sahf
add
sbb
rol
loopne
push
dec
cmc
pop
inc
pop
inc
ss
xor
pop
or
sbb
mov
loopne
sub
xorb
mov
sub
test
xchg
push
xchg
aam
xchg
fnsave
call
fwait
pushf
sub
icebp
jno
iret
jmp
loopne
adcb
cmpsl
rcrl
hlt
push
lods
je
sbb
jo
and
psrlw
mov
js
adc
lahf
mov
leave
sub
push
lahf
ret
ret
xchg
push
loop
dec
enter
scas
mov
in
gs
pop
jne
sbb
mov
add
mov
ret
jns
cs
ljmp
fldenv
outsl
push
mull
in
shl
sub
xor
mov
cmp
mov
es
inc
jge
or
test
loop
dec
mov
enter
insl
dec
stos
xchg
stos
aam
fsub
pop
int
adc
insl
mov
pushf
js
mov
lahf
push
add
adc
pushf
js
sarl
decl
push
jae
mov
sub
mov
insb
js
sbb
lret
mov
testb
pop
mov
mov
cld
popf
cwtl
and
fdivr
and
lock
sbbb
sub
call
scas
xchg
shll
fldl
leave
mov
clc
push
push
add
xchg
frstor
insl
std
mov
mov
jecxz
fnstsw
lock
sahf
adc
xor
loope
outsl
xchg
sub
out
rcrl
and
push
cmp
test
imul
aad
sub
fsubrs
ds
es
shrl
cwtl
out
imul
jae
daa
and
and
or
jae
mull
adc
test
repnz
inc
enter
pusha
xor
push
movsl
cmp
cmc
int3
bound
cmp
int
imul
fidivl
mull
pop
sahf
push
ret
xchg
int
cmp
push
sarb
inc
cmp
loop
test
popa
outsl
gs
jnp
add
inc
cmp
jg
iret
xchg
out
loopne
mov
jecxz
add
les
loop
vpunpckhwd
int
pushf
pop
jns
ljmp
xchg
pushf
sub
lret
cld
popf
dec
or
in
inc
in
cmc
dec
mov
pop
add
ret
aad
test
xchg
hlt
mov
lds
xor
pusha
ret
and
shr
ficoms
push
xor
adc
rcll
jp
sbb
push
gs
pop
insb
jl
movq
lret
xlat
jo
push
aad
or
adc
jb
test
sbb
fmul
pop
lcall
hlt
jno
cmc
xor
out
loopne
or
mov
gs
lods
push
les
and
add
jnp
cwtl
sub
lea
adc
test
jb
jb
mov
xlat
xchg
flds
fsubrp
cli
jnp
pop
mov
sub
sbb
std
das
add
mov
lret
pop
cmp
sbb
sbb
mov
xchg
and
enter
lret
sbb
sahf
jno
rcrb
cmp
pop
dec
mov
arpl
cmp
mov
iret
out
popa
lret
jno
imul
lret
jge
out
test
or
push
imul
shl
test
pop
jle
pusha
out
out
lds
leave
ret
dec
pop
mov
cli
call
nop
or
dec
sub
cmpl
lods
push
adc
scas
ficoml
pop
xchg
mov
cmpsb
lcall
dec
push
and
cwtl
sub
push
mov
bound
and
push
and
push
cmp
cmc
inc
dec
mov
cmpsl
shrb
negb
adc
xlat
int3
add
aas
cmp
cs
fs
push
sbb
mov
ja
or
sub
mov
sub
push
ret
sbb
out
xchg
xchg
xchg
inc
jp
stos
lret
mov
pop
pop
inc
push
and
in
mov
push
jle
aam
push
mov
mov
outsl
daa
imul
jno
and
in
ret
mov
sub
mov
pusha
std
dec
sub
push
push
cmp
xchg
jno
jp
std
or
mov
push
mov
clc
mov
stos
inc
outsl
js
cwtl
movsb
ja
fidivrs
in
rclb
xchg
and
pop
out
xlat
loopne
pop
ja
cmp
js
adc
sbb
hlt
inc
push
outsb
inc
and
fstpl
cmpsb
mov
xchg
add
ja
mov
je
pop
sub
xchg
in
jmp
xchg
xchg
loop
fcomip
mov
mov
add
inc
xchg
dec
jl
or
mov
pop
jae
and
push
jg
or
addr16
lods
in
jmp
lahf
inc
out
lret
dec
ret
push
hlt
movsl
repz
stos
or
stos
andl
loope
cmp
mov
ret
jg
or
adc
cmp
sti
push
fwait
test
dec
inc
inc
sbb
xlat
insb
push
dec
dec
jmp
imul
aam
lcall
cmpsb
mov
and
add
xchg
subb
mov
mov
out
ror
fs
push
dec
cld
cmp
xchg
out
pop
stc
ljmp
mov
pop
adc
call
pop
xor
into
or
daa
pop
ss
dec
out
inc
push
push
out
jno
adc
inc
jbe
ljmp
push
movsb
sahf
sbb
shrl
leave
int3
and
hlt
addr16
xor
xor
adc
xchg
and
adc
test
mov
mov
lret
mov
imul
jle
movsl
push
jmp
push
es
mov
andl
mov
fs
fsubs
xor
jl
xor
sub
xchg
push
pop
cmp
push
mov
popl
stc
les
mov
push
mov
pushf
jo
jb
imull
data16
push
mov
inc
outsb
or
hlt
shll
xor
push
or
mov
cmc
sbb
out
imul
pop
lock
xchg
shl
data16
adc
cwtl
pop
ret
orl
xor
mov
shrl
adc
mov
rcrl
push
jmp
jecxz
sub
jmp
cmp
push
je
cmpsl
mov
jle
jb
sub
popf
pop
push
in
mov
movl
inc
cmp
and
or
jo
push
mov
inc
imul
inc
fbld
cmp
faddl
dec
and
push
or
mov
sub
sub
fwait
push
mov
mov
rep
das
jnp
rolb
sub
mov
decl
test
mov
je,pt
ret
pop
mov
xor
lock
pop
pop
test
ds
jbe
pop
test
xchg
jp
ret
shrb
pop
stos
mov
rolb
inc
scas
sub
lods
jp
stos
fisubrs
cmp
out
mov
lea
out
or
fmuls
adc
sub
inc
push
stos
icebp
imul
adc
xchg
push
mov
out
lods
popa
sub
inc
sbb
in
and
int3
add
dec
jp
out
cmpsl
pop
mov
dec
cmp
push
into
mov
or
das
push
or
shl
test
jae
cmp
les
xchg
mov
push
xor
fcompp
fstpt
addb
testl
cmp
das
rolb
mov
inc
cmpsb
mov
mov
adc
mov
cmp
push
int3
ficoms
mov
pop
jae
push
push
fstpl
scas
ja
faddl
fildl
jmp
jae
shlb
in
pop
mov
mov
aas
jmp
xor
fbld
mov
inc
js
lahf
sbb
push
adc
xor
cmp
mov
cld
xor
insl
shll
mov
mov
les
repz
sub
jp
jbe
notb
inc
pop
insl
sub
dec
dec
mov
fisubs
aad
jmp
jg
pxor
xchg
pushf
inc
fisttpl
repz
dec
pop
daa
push
sbb
push
lea
fimull
push
sarl
jg
or
aam
jo
repz
jne
lcall
mov
fs
xor
movsl
adc
or
inc
fstps
ljmp
pushf
ljmp
imull
test
ret
or
in
xor
ds
in
loopne
stc
fstpt
negl
mov
inc
jl
call
push
adc
mov
out
pop
sub
syscall
in
cwtl
int3
mov
pop
popl
pop
sub
and
sbb
stos
rcl
add
lret
xor
mov
push
movsl
outsl
add
pusha
inc
pop
xor
mov
mov
dec
adc
into
shlb
scas
stos
push
and
mov
and
lahf
dec
inc
sbb
out
rorb
addps
and
icebp
mov
repz
sbb
xchg
frstor
mov
cli
and
mov
push
scas
mov
jo
or
xlat
stc
jns
ror
pop
pop
inc
lods
xchg
in
mov
or
roll
clc
dec
in
jnp
mov
lds
xchg
mov
push
sub
push
ss
or
out
sbb
arpl
daa
adc
je
pusha
adc
addl
loop
gs
in
out
pop
xor
sub
ljmp
mov
ret
or
dec
mov
cmc
incb
addr16
sub
cli
in
outsb
ljmp
jb
repz
xchg
and
pushf
and
mov
push
mov
lock
test
xor
hlt
cmp
add
sub
or
pop
aam
inc
incl
mov
mov
lret
or
incl
arpl
inc
adc
push
ret
cltd
or
fistpll
pop
cmp
clc
dec
mov
fiadds
cmp
sbb
outsb
xchg
mov
sub
imul
mov
out
or
clc
test
arpl
test
cmp
jge
addr16
or
jecxz
out
push
xor
adc
xor
pop
jnp
jae
addr16
daa
pop
jecxz
fildll
ja
mov
pop
and
jnp
loop
fidivrs
mov
and
aaa
enter
outsl
pop
adc
cltd
cltd
xchg
fsubrl
jb
mov
cmc
dec
gs
pop
and
push
pop
scas
push
mov
push
lret
test
add
mov
mov
addr16
push
add
sub
std
sti
jge
xchg
ret
fs
sbb
test
sbb
cmp
jp
mov
fsubrl
pop
pop
aaa
or
sti
jle,pn
std
mov
ds
jns
iret
add
xchg
aas
pop
inc
jo
or
adc
in
sahf
inc
add
ds
ret
scas
outsb
call
add
dec
aas
outsb
bound
out
xchg
nop
sbb
into
mov
push
stc
add
mov
arpl
mov
pop
imul
je
xlat
push
stos
fadds
xchg
lds
sti
xchg
ret
jno
adc
std
xchg
daa
movsb
insb
bound
jge
xchg
les
je
popf
scas
mov
movsl
mov
repnz
add
gs
inc
push
pop
mov
mov
popf
rcr
jb
hlt
xchg
ja
push
jp
jle
sbb
rolb
adc
test
cmp
jmp
daa
std
cmp
jne,pn
aaa
shr
jmp
push
mov
jge
mov
sub
xorb
adc
lret
xor
ret
sahf
ljmp
movsl
mov
orl
sub
sbb
mov
xor
mov
je
push
sbb
out
dec
int
loope
sahf
and
fsubr
popa
shl
cmp
mov
and
lods
fmuls
pop
test
or
mov
cmp
sub
pop
jb
es
push
mov
nop
pop
mov
mov
pop
and
adc
mov
pop
push
test
movsl
xor
mov
in
sub
cmpsl
in
cmp
ffree
repz
xchg
xor
cs
sub
sbb
jmp
addr16
xchg
sbb
add
js
sbb
shrl
cmp
imul
js
sahf
es
and
adc
mov
and
inc
mov
cwtl
cmp
sub
jae
and
dec
int3
scas
sbb
sbb
mov
xchg
fimuls
xor
ficoml
pusha
ret
imul
push
arpl
push
pop
or
popf
add
cmp
jo
jnp
stc
fdivr
dec
mov
jge
fld
push
xchg
ret
fidivs
push
pop
pextrw
xchg
aas
dec
xchg
imul
fldt
cmp
bound
xlat
or
mov
les
fwait
je
inc
xor
dec
mov
inc
push
cwtl
mov
addl
lahf
clc
cmp
pop
xchg
adcb
mov
gs
xor
lret
iret
fmuls
pcmpeqw
mov
mov
dec
mov
cmp
ret
pop
xchg
jo
mov
pop
rolb
fisubs
rcll
outsl
orb
imul
xor
mov
or
xor
cmp
cmpl
mov
lods
fsubr
push
cmp
sub
or
lahf
xchg
fsub
mov
ds
adc
cmp
and
jo
dec
mov
cmp
push
add
dec
sahf
and
dec
cmp
sbb
or
sub
cltd
pushf
cltd
pushf
sub
mov
adcl
cmp
mov
movsb
lret
or
push
iret
shl
dec
push
add
aad
das
xchg
pushf
ret
js
xchg
popf
mov
stos
jl
aas
jp
aas
sub
roll
cmpsl
mov
shll
xchg
sbb
sbb
xor
shr
lret
add
lret
push
div
dec
daa
stos
fcompl
pop
mulb
add
test
dec
aaa
mov
pop
movsb
and
test
movsb
dec
dec
fucomi
mov
jmp
mov
pop
bnd
cwtl
repnz
push
aaa
jno
jnp
pop
xchg
mov
mov
sar
testl
test
std
mov
push
sbb
popa
mov
lcall
mov
mov
mov
int
xchg
stos
jae
shrb
cmp
add
popf
out
push
and
dec
inc
or
push
repnz
fstpl
lcall
push
inc
and
je
cmc
andb
sahf
int
lods
mov
call
std
faddp
pop
mov
jae
push
lret
das
jge
add
loopne
cmp
pop
cmp
cmp
scas
pop
test
or
daa
shrl
mov
cltd
repnz
pop
inc
push
push
in
or
inc
movsl
jge
arpl
pop
pop
cwtl
hlt
and
dec
sti
dec
test
lcall
cmpsl
js
in
or
mov
jle,pn
fisubrs
rcrl
xlat
sbb
inc
mov
popf
jae
push
mov
sbb
pusha
add
dec
jo
aaa
sahf
or
jp
loope
inc
jnp
fsincos
xchg
sub
xchg
cmp
pop
xchg
test
imul
xor
mov
fcmovne
movsl
xchg
in
fucomip
das
inc
xchg
sbb
push
cmpsb
jge
mov
dec
xor
or
dec
sub
xchg
in
inc
inc
jae
or
mov
push
mov
inc
mov
add
mov
dec
ss
pusha
fwait
loopne
push
jmp
add
add
jne
fwait
sarb
mov
cmp
fmull
dec
std
repnz
add
push
insb
in
cmp
sahf
push
push
repnz
mov
jle
sahf
xchg
mov
xchg
inc
cmp
push
les
xchg
bound
mov
cmp
ret
cmp
js
xchg
scas
ds
lods
ss
inc
xorb
test
data16
enter
mov
or
add
and
outsb
loop
mov
or
xor
mov
adc
rcrb
or
pop
in
inc
jmp
mov
push
outsb
cld
loopne
lods
cmp
pop
cmovo
das
sarb
xor
xchg
imul
pop
js
mov
xchg
mov
insl
or
add
xchg
add
pushf
shrl
sti
and
pop
fcomip
mov
mov
inc
icebp
rolb
popa
enter
pop
push
xchg
sti
leave
cmp
push
jb
sbb
pop
movsl
enter
push
add
popa
dec
lahf
fsubrl
sbb
jns
push
mov
add
xchg
add
movsb
sbb
faddl
addr16
pop
in
inc
xchg
mov
in
mov
and
or
push
pop
jne
push
sub
mov
xchg
or
xor
xchg
lcall
push
and
push
lods
cmp
stc
pop
leave
push
or
adc
mov
push
adc
mov
hlt
mov
imul
loop
mov
movsb
mov
dec
xor
push
and
les
repnz
xor
sub
das
push
sub
and
cmp
jge
jmp
jl
adc
cmpb
movsb
jbe
orl
das
sahf
popa
loopne
mov
inc
add
push
ds
lock
inc
outsb
jge
enter
test
and
mov
ret
or
xchg
jl
lock
cmp
jecxz
aam
enter
push
push
inc
fcoml
cmpsl
int3
fnstsw
and
jg
test
rcrl
sbb
mov
pusha
in
jge
lds
daa
loopne
pop
mov
fsts
mov
popf
mov
rcll
outsb
insl
sbb
cmpsb
xor
push
or
inc
orb
cmpsb
push
aad
adc
inc
xchg
cmp
xor
push
adc
dec
dec
ret
fs
subl
test
icebp
cmp
ljmp
lods
pop
stos
sub
add
js
jle
mov
adcl
frstpm(287
rclb
fcom
into
cmp
in
dec
imulb
pop
pop
fcmovnu
mov
jge
sbb
imul
push
pop
lock
or
jecxz
or
dec
dec
loop
rcrb
mov
push
hlt
mov
inc
pushf
sbb
push
rorb
push
xor
xlat
push
jecxz
add
mov
ffreep
sub
push
insl
jmp
cs
fdivl
cwtl
sti
push
aaa
or
inc
les
call
and
xor
mov
incb
mov
bound
ret
add
dec
popf
sub
fsub
cmp
ja
cmp
and
sbbl
out
stc
cwtl
sbb
popf
icebp
test
shll
mov
aam
cmp
fistl
push
inc
push
sub
jmp
push
outsl
mov
or
loop
inc
stos
push
pop
pop
add
cs
bound
mul
lret
frstor
push
mov
ds
pcmpeqb
cmp
inc
push
pop
ret
fs
push
xchg
sarb
mov
out
push
shll
jne
repnz
mov
iret
cwtl
lret
call
sbb
dec
out
xor
jbe
sbb
fsubrl
jo
jecxz
mov
pop
pop
clc
inc
inc
and
pop
sbb
mov
xor
or
add
mov
and
and
jmp
mov
jmp
inc
sbb
sbb
and
dec
add
test
rep
into
decb
daa
mov
xchg
ret
gs
xchg
pop
les
jecxz,pt
xchg
adc
mov
xchg
cmp
add
mov
lds
mov
flds
sub
out
push
mov
out
dec
lock
xor
cmp
add
andl
inc
in
xchg
and
int
ficoms
sub
sub
xlat
sbb
mov
divb
push
jo
push
jne
pushf
dec
xchg
jle
iret
mov
lods
jmp
lods
mov
jle
xchg
movsl
out
fwait
out
scas
mov
jmp
inc
in
inc
out
insl
adc
fcomps
aam
and
and
aas
pop
int
je
push
mov
int
scas
push
push
fwait
cmpsb
pop
adc
out
pop
repz
lods
popf
xor
mov
shl
mov
iret
inc
inc
shrb
popa
push
retw
clc
data16
adc
in
sub
iret
insb
mov
mov
outsb
push
cmpsl
jno
out
aam
arpl
xchg
adcl
ret
mov
inc
cmc
and
in
out
ss
dec
mov
insb
fimuls
jge
inc
mov
xorl
and
test
std
into
cs
imul
enter
ret
cmp
out
cmpsb
sub
outsb
xchg
leave
imul
in
ljmp
inc
sub
jno
sbb
push
or
pop
sqrtps
mov
jb
or
sbb
pushf
and
mov
xorl
outsl
ljmp
sub
xor
das
lds
inc
pop
inc
adc
push
repz
cld
pop
push
and
dec
out
add
jg
test
add
repz
icebp
cmc
xor
imul
or
cmpsl
jo
test
xchg
mov
addr16
or
lods
cs
lods
mov
mov
jb
pusha
xor
adc
or
imul
stos
cmpsl
inc
xchg
call
es
pop
inc
fdivs
data16
outsl
sbb
mov
xor
loop
loope
int3
fbld
xor
pusha
enter
imul
sub
push
movsl
test
test
lods
pop
push
in
cwtl
inc
adc
cmp
xor
mov
lahf
pop
test
xchg
xchg
out
lock
aaa
sub
outsl
daa
cmpl
adc
ljmp
jae
adc
dec
adc
adc
pushf
jecxz
mov
and
jno
jg
lods
dec
gs
pop
scas
cmp
test
std
repz
cwtl
adc
popf
inc
lds
scas
jns
lock
mov
mov
jl
lock
sbb
loopne
loop
pop
je
and
ds
shr
lods
dec
xor
das
sbb
xchg
nop
pop
rcrb
rorb
xchg
push
xlat
xor
sbb
xchg
outsl
xchg
lcall
inc
cmc
adc
jno
mov
fwait
out
jb
ret
rclb
push
inc
mov
mov
xchg
ret
leave
cmp
or
sbb
pop
imul
dec
dec
insl
fildl
cwtl
call
shl
cmp
test
cmp
sbb
call
insb
scas
ret
jmp
jne
dec
cmp
icebp
push
stos
adc
lret
sbbl
sbb
repz
sbb
and
aas
mov
inc
dec
push
adc
mov
mov
adc
fdivl
mov
mov
fadd
pop
sub
dec
repnz
xor
clc
scas
or
jecxz
mov
movsbl
cltd
movsl
inc
out
jae
shll
or
out
xor
sarb
push
fstps
lds
cltd
push
pop
xorb
xor
mov
push
dec
pop
jo
push
pop
inc
mov
push
sbb
push
inc
repnz
aaa
xchg
cmp
mov
icebp
aad
repnz
pop
arpl
lea
popa
pop
sbb
sub
push
add
mov
repz
cwtl
int
cwtl
fistpll
popf
adc
push
outsl
sub
aad
out
and
jp
nop
pop
adc
cmpsb
mov
insb
insl
mov
pop
sub
jp
cltd
daa
jle
outsl
or
add
dec
mov
sbb
cmpsl
cs
stc
adc
stos
or
mov
enter
shr
lcall
mov
outsb
mov
ret
rcll
jle
jae
out
push
adc
push
or
push
add
xchg
mov
push
xlat
xor
adc
les
je
inc
mov
push
and
sbb
jg
jbe
dec
add
test
or
enter
jbe
dec
aam
mov
cmp
out
sbb
fmul
mov
jnp
xorb
push
mov
xchg
dec
cmp
mov
loope
jl
shld
fs
inc
decl
pop
cmp
push
add
jge
lods
dec
arpl
jno
xorw
push
scas
cmp
fistl
push
xlat
add
dec
jg
in
jae
jmp
xor
iret
enter
push
fdivrl
jbe
or
sbb
or
or
mov
test
out
and
out
test
push
out
aas
dec
div
xor
loope
mov
ljmp
jmp
dec
pop
icebp
lds
aas
sbb
jge
xor
add
and
pusha
jmp
das
xor
xor
xchg
push
xchg
cmp
cmpsl
lahf
adc
dec
movsb
push
sub
adc
pop
lret
rclb
pop
cmp
and
adc
or
mov
imul
repnz
mov
add
test
push
pop
cmovs
or
xchg
ljmp
and
xchg
xor
in
out
out
add
loop
pop
mov
cmc
mov
or
pop
jbe
mov
imul
daa
cmp
mov
add
and
mov
pminub
inc
icebp
nop
pop
cld
push
outsl
insl
ljmp
xchg
sbb
sbb
sahf
cltd
mov
jge
rclb
lods
sbb
add
ror
jle
fnstcw
lea
out
in
cmp
xor
fs
xor
adc
aam
data16
cltd
xor
scas
dec
xchg
pslld
jg
in
mov
arpl
pop
and
les
sahf
dec
out
xchg
sub
mov
pop
push
mov
call
or
das
pop
ss
adc
push
cs
cmp
dec
int
ficoml
jge
jmp
xlat
pop
mov
fwait
out
xchg
in
mov
dec
out
ucomiss
cmp
xchg
and
add
or
jns
sbb
pushf
iret
or
xchg
xor
push
sub
sub
mov
push
loopne
push
xor
es
std
in
dec
sbb
inc
loop
or
xor
inc
je
sbb
cmp
fidivrs
pop
cli
or
enter
adc
sub
jecxz
push
add
xor
mov
jne
jno
jl,pn
adcb
ds
out
pop
pop
adc
pop
cmp
add
xchg
pop
cmc
xlat
jecxz
and
fcmove
out
pop
lds
sub
and
fadds
jle
push
loopne
out
add
int3
fs
push
cmp
or
dec
cli
ret
fcomp
je
ror
push
mov
test
lock
in
jnp
push
gs
sbb
nop
hlt
rcl
push
sahf
pushf
sub
mov
push
in
hlt
int
out
jnp
mov
adc
or
or
fldcw
xor
inc
and
testb
cli
cli
jle
inc
xchg
test
js
fimull
lret
fidivrs
ret
ror
inc
fwait
mov
out
sbb
fstpl
push
aad
push
aam
mov
push
dec
dec
sub
rorl
ja
cmpsb
addr16
pushf
mov
cld
pushf
cwtl
xor
js
sub
mul
pop
fsubrp
xchg
cs
repnz
call
mov
call
sahf
shll
fwait
aaa
sub
mov
jnp
inc
pusha
nop
fisttpll
lret
fsubl
insl
cmp
movsl
or
stos
es
adc
into
test
mov
sub
ja
sub
mov
jno
adc
fisttpl
xchg
mov
push
adc
scas
push
pusha
push
push
ss
mov
stc
adc
cmpsb
loopne
rorb
mov
lret
and
fsubs
sub
enter
mov
ds
adc
stos
push
cld
cmp
lds
stos
jmp
mov
dec
pop
leave
jecxz
adc
adc
push
mov
lods
lock
jae
mov
ret
rcr
xchg
out
out
adc
push
dec
sub
js
into
call
xor
jle
popa
fidivl
push
divb
ret
cmp
mov
xor
test
jbe
mov
mov
jae
lods
lret
pop
fiaddl
xchg
add
lret
xchg
sub
inc
jle
jo
lahf
movsl
xchg
clc
xchg
xor
in
cmp
sub
inc
and
mov
pop
into
mov
cmc
hlt
mov
jl
cld
sub
jno
ret
mov
xor
mov
dec
push
fs
add
cmpsb
push
sub
rcl
arpl
aam
loope
jp
jno
adc
cmpl
repnz
rep
bound
pop
push
push
incl
lahf
dec
pop
cmpsl
repnz
add
inc
imul
jne
add
xchg
jg
int
jb
lea
scas
rcrl
test
std
data16
imul
pusha
faddl
sbb
ljmp
jbe
add
or
gs
test
cmp
sbb
xor
shlb
icebp
mov
mov
not
pop
jecxz
nop
outsb
inc
mov
iret
sbb
popf
cld
je
pusha
enter
outsb
aas
lods
push
xchg
mov
mov
idivl
fstps
jecxz
jle
mov
arpl
mov
mov
cmp
xchg
inc
imul
sub
into
mov
out
push
ret
shll
je
scas
lahf
popl
test
jne
test
dec
sub
add
std
pop
sub
push
or
push
mov
xchg
or
rcrb
xchg
das
aaa
loope
je
jl
movsl
sbb
fnsave
mov
int3
pop
and
push
push
imul
in
filds
js
popf
shr
into
cmpsb
sbb
mov
fucom
add
xlat
push
stc
int3
add
push
lods
jmp
sbb
dec
stos
and
mov
rclb
cltd
mov
imul
outsl
cmp
jo
lret
push
fistpl
scas
xchg
sub
mov
aaa
xor
jmp
popl
adc
jnp
int3
je
push
and
fwait
jecxz
push
or
scas
jge
add
imul
dec
xor
fwait
mov
mov
pop
pop
sbb
pop
insb
lods
mov
xlat
or
dec
outsb
and
jno
sub
sub
cmc
dec
jmp
out
jns
aam
pop
jnp
mov
jnp
lods
sub
das
sub
add
insl
fildl
enter
loop
push
sbb
daa
add
cwtl
xor
rcll
scas
adc
loopne
or
jb
mov
outsl
lret
fsubrl
dec
mov
adc
jne
cmp
std
lods
loope
sti
nop
mov
lret
dec
inc
clc
and
ficompl
pop
xchg
sbb
popa
pop
mov
insb
pop
scas
nop
ja
out
mov
add
xor
add
dec
sbb
pop
push
pop
imul
push
mov
pusha
mov
cmp
imul
jbe
rcll
mov
pop
popf
and
iret
inc
aaa
int
jne
push
jnp
fcmovnu
dec
inc
fwait
ret
mov
sbb
jge
jp
test
jne
pop
mov
adc
lods
popf
fsub
cs
mov
insl
ret
jg
fcoms
mulb
xchg
popf
int
sub
in
movsb
idiv
sti
leave
sbb
addr16
mov
push
cld
jge
shlb
inc
pop
jmp
dec
xchg
fcomps
iret
clc
push
adc
idivl
pop
sbb
dec
sti
and
xor
dec
popa
cmp
sub
decb
out
aad
push
sub
mov
lahf
stos
stc
imul
adcl
vpaddsb
adc
outsl
cs
lcall
push
dec
dec
scas
loop
xor
jnp
lods
aam
outsb
pusha
lds
mov
push
rorl
cmpsb
pop
push
mov
jecxz
mov
adc
add
adc
xchg
dec
pop
xchg
and
cmp
mov
lea
or
jg
fwait
test
or
xchg
xor
neg
adc
fwait
call
inc
jns
icebp
jnp
mov
push
add
js
mov
mov
outsl
mov
xor
insb
add
and
mov
test
jo
out
test
int
in
push
xchg
out
je
ds
out
ret
jmp
fstps
jg
sub
ret
or
fldcw
imull
inc
stc
pusha
jl
lock
xchg
adcb
cs
inc
ljmp
ja
mov
inc
jge
cli
scas
jo
xchg
pop
aad
imul
add
ja
xor
aam
loope
jge
sti
push
mov
xchg
dec
sub
in
push
or
movsb
sub
jno
and
fnstcw
repz
adcl
sub
cltd
and
cmp
sub
mov
dec
pop
xchg
jle
int3
jp
add
das
sahf
nop
sub
movsl
xor
sbb
mov
jp
jne
rolb
jmp
jg
cmp
fstpt
push
scas
cmc
pop
loop
sbb
test
ret
inc
jnp
fcomp
dec
pop
pop
xor
daa
lret
lcall
adc
adc
sub
cli
add
inc
nop
es
xchg
pop
xchg
inc
mov
mov
das
outsb
mov
scas
inc
daa
push
aad
sub
jle
push
icebp
fildl
filds
xchg
std
jge
aas
mov
sub
js
imul
xchg
jae
jecxz
fsubl
repnz
into
cmp
jne
insb
cmp
cs
fmulp
rcll
inc
out
popf
or
adc
jbe
fwait
pushf
clc
mov
addb
addr16
cli
pop
sub
orl
movsl
mov
loop
pop
dec
scas
loopne
outsl
sbb
cli
rcl
dec
mov
dec
out
lcall
xchg
xor
test
cltd
iret
xchg
aam
daa
adc
imulb
mov
mov
jb
enter
repnz
xchg
sub
repz
sub
lret
add
jmp
jne
add
cld
mov
jb
jae
mov
sub
pop
dec
int3
push
adc
stos
add
lcall
cvtps2pi
push
out
insl
xchg
icebp
push
insb
mov
xchg
pop
or
aam
test
fbstp
dec
cwtl
movsl
es
dec
aaa
or
adc
mov
sub
insb
pop
dec
mov
imul
enter
push
loope
cwtl
imul
or
push
js
add
dec
fistps
jnp
bound
add
int3
adc
loope
xchg
mov
int
fs
mov
test
sbb
adc
andl
popf
inc
cmp
adc
lea
adc
or
jecxz
in
dec
fidivrs
fisttps
cltd
cmp
icebp
sub
in
dec
stos
pop
push
rcr
pushf
cmp
scas
inc
call
dec
int3
add
push
mov
jl
add
mov
mov
or
cmp
lcall
cmp
pusha
adc
mov
adc
into
roll
push
scas
rol
jb
ss
sub
mov
sti
jae
rolb
inc
negb
into
and
sub
sti
mov
mov
dec
adc
repnz
adc
scas
sti
rcll
cmp
push
in
js
mov
mov
cmp
push
mov
jp
cmp
in
movsb
fsubrl
aad
ja
arpl
cs
push
push
and
outsb
push
add
and
mov
xor
jmp
cld
fs
inc
cmp
aam
mov
inc
pop
rcll
insb
gs
xchg
pushf
stos
inc
shlb
cmc
mov
mov
hlt
or
mov
inc
pop
cmp
sti
repz
and
jmp
inc
xchg
jbe
cltd
add
sub
sub
cmp
out
pop
pop
cwtl
or
jecxz
or
jne
incb
movsb
add
or
inc
loope
loope
pop
adc
mov
call
repz
jmp
fidivs
jae
bndldx
add
mov
insl
add
jae
mov
cltd
mov
sbb
push
out
xor
in
inc
mov
das
add
movsb
ss
scas
adc
fildll
dec
aad
adc
cs
outsl
mov
loope
cld
sbb
lods
sbb
and
popf
das
or
mov
je
int
inc
mov
xor
jmp
mov
cmp
xor
mov
mov
daa
subb
popa
push
mov
ss
jle
es
pop
testl
hlt
insb
dec
mov
into
sub
hlt
ret
daa
in
rclb
sub
lea
adc
aad
jg
or
addr16
ficompl
neg
loope
stos
subl
add
fiadds
rsm
das
sub
std
test
push
push
fsub
lret
mov
scas
sbbb
sub
mov
gs
mov
sbb
inc
in
adc
or
push
arpl
pop
pop
lods
imul
sbb
inc
add
fdivrl
add
orl
sbb
mov
jecxz
inc
mov
adc
pop
fstps
ljmp
xchg
jbe
or
and
dec
push
imul
ljmp
cwtl
inc
es
pop
dec
test
jo
cmp
bnd
pop
outsb
push
fwait
xchg
or
xor
pop
push
push
jmp
test
xchg
dec
push
outsl
shll
and
mov
cs
addr16
leave
fnstcw
sub
out
or
rolb
notb
pop
lcall
push
mov
adc
fimull
mov
sbb
mov
aas
mov
inc
frstor
in
jae
popa
and
mov
or
shr
out
stc
lret
dec
in
divb
push
jmp
and
mov
add
sti
lcall
add
and
adc
lcall
jle
dec
dec
ja
rcll
lds
roll
aas
sub
loopne
aad
and
pop
popf
pop
enter
ret
scas
mov
jbe
inc
sbb
enter
outsl
jne
xchg
adc
cmc
pop
bnd
push
shr
xorl
or
xchg
loop
sahf
mov
push
cmp
bound
cli
inc
into
data16
lret
mov
loopne
xor
ret
aaa
in
cmp
xchg
sbb
inc
push
test
xor
mov
jo
shlb
mov
test
mov
das
out
fdivr
fs
cmp
lcall
xchg
jp
push
fmuls
repnz
std
insl
jmp
lods
and
in
push
inc
inc
lods
and
stos
xor
add
push
add
mov
aas
lea
mov
rdtsc
imul
fcomps
fldl
mov
inc
mov
fstl
xchg
push
fldcw
imul
subb
mov
push
fdivrs
cmp
enter
pop
loop
pop
orb
aam
adc
shrl
hlt
and
loope
inc
dec
mov
push
mov
mov
xchg
lahf
mov
mov
insb
cmp
ret
arpl
jb
imul
out
cmp
icebp
mov
pop
ret
dec
or
or
xchg
and
test
in
lea
hlt
mov
inc
pop
add
imul
ret
xor
pop
pop
mov
add
xchg
mov
inc
fistpl
stos
aam
adc
mov
push
mov
arpl
lds
sbb
jl
cld
pop
push
add
ret
and
mov
addl
ret
cmp
cmpsl
dec
or
lods
jnp
fnstcw
adc
rorb
mov
xchg
iret
out
bound
imul
sahf
mov
push
aam
add
push
xchg
xor
js
mov
adc
and
stc
inc
xchg
std
adc
cld
jbe
mov
mov
pop
lds
aad
test
cmpsb
jae
pop
arpl
aad
addb
pusha
mov
mov
aam
inc
push
cmpsb
and
xchg
push
repnz
mov
jecxz
mov
daa
mov
rol
xchg
lcall
xchg
nop
ss
mov
je
mov
sub
lret
scas
mov
fistpl
mov
aad
insl
cmpb
jle
sub
into
mov
fnstcw
ss
jmp
jb
push
xor
call
and
lods
enter
negb
or
in
fldcw
push
lret
or
pusha
bound
mov
mov
aad
decb
gs
cs
movsl
cld
mov
hlt
xlat
inc
xchg
fistpl
mov
enter
add
out
jge
test
addr16
ret
sub
call
lahf
push
push
or
mov
mov
subl
js
bound
dec
jnp
inc
jg
aad
inc
and
xor
adc
out
inc
sbb
mov
insb
call
pop
das
aam
push
and
mov
subl
push
mov
mov
lcall
loope
xor
mov
xor
or
and
jae
mov
lahf
call
cmp
push
inc
scas
sbb
and
lcall
ja
push
lods
mulb
fdivrl
fs
mov
push
jecxz
inc
mov
push
dec
pop
jg
jmp
je
pop
in
or
mov
mov
jmp
adc
repnz
cmp
out
addb
aad
stos
mov
and
cmp
gs
lods
repz
pop
and
xchg
jne
jae
sub
in
leave
test
or
push
or
dec
and
jg
mov
cmpsb
xorl
jp
adc
in
outsl
add
loope
add
mov
cmpsl
pop
aaa
ja
nop
sbb
pop
dec
lea
fstps
pop
add
cmp
adc
jae
mov
sbb
jecxz
push
inc
sbb
mov
mov
sbb
and
add
xchg
and
testb
push
and
jns
insb
pavgw
inc
lods
mov
push
mov
and
dec
pop
adc
popa
jno
lcall
fistpl
dec
inc
aad
dec
mov
cmc
push
pop
push
pop
dec
add
pop
insl
xchg
daa
mov
jecxz
stos
addr16
xchg
push
das
movsb
jae
lods
pop
add
shll
mov
insb
inc
xchg
push
sti
cs
pop
ret
or
out
je
ret
negb
aas
push
xor
adc
lods
pop
mov
ljmp
jnp
cmc
sti
or
pop
mov
ret
sbb
fwait
mov
subl
test
mov
imul
adc
imul
push
and
or
mov
and
daa
adc
jne
fwait
jle
movsl
pushf
mov
sbb
in
jmp
jmp
jno
or
adc
add
dec
pushf
mov
inc
mov
mov
repz
mov
notb
clc
or
pusha
inc
popa
add
add
dec
out
push
jp
loop
sub
adc
int3
jbe
mov
loop
ficomps
cmp
or
xor
or
aad
xor
mov
loop
sbb
xchg
dec
inc
stc
mov
outsl
mov
jnp
mov
fsubl
mov
push
mov
mov
mov
roll
or
rcrl
cmc
sbb
sbb
inc
mov
mov
in
xchg
js
inc
adc
or
inc
in
mov
mov
xchg
adc
xchg
jns
loopne
sarl
lods
pusha
xor
push
stos
push
sbb
cmp
add
adc
ss
mov
lea
negb
push
jns
sti
lock
imul
mov
pushl
pop
nop
add
stc
out
aaa
mov
leave
and
popa
sbb
gs
xor
daa
into
insb
stc
mov
jno
pushf
xor
int
pop
out
ja
and
xor
xchg
cmp
pop
lock
les
add
adcb
pop
rcr
jecxz
inc
sbb
sub
cmp
imul
popf
sbb
cmpsb
outsl
dec
bound
icebp
mov
dec
in
leave
cld
jg
adc
xchg
jp
inc
or
lret
mov
popa
cmp
call
stos
jmp
scas
jecxz
mov
jmp
xchg
dec
xchg
shr
jns
insb
cld
cltd
jae
sub
or
mov
jecxz
aad
bound
mov
ds
into
lahf
pop
cltd
jg
addr16
stos
pop
out
repnz
js
in
xchg
mov
mov
in
cmp
rorb
filds
es
adc
cmp
arpl
stc
jmp
mov
addb
jp
mov
stos
and
fcompl
inc
repnz
pop
rcll
jbe
pop
cmp
and
jmp
jo
fstpl
push
xchg
stos
sbb
addb
in
pusha
icebp
addr16
push
das
xor
stos
test
adc
and
in
xlat
fistps
out
jnp
or
hlt
adc
ljmp
inc
scas
dec
dec
inc
mov
pop
adc
js
xchg
mov
and
fs
dec
out
mov
cwtl
mov
and
int3
scas
ja
mov
scas
cmpl
mov
push
jb
pop
movsb
testb
out
inc
sbbb
add
popf
xchg
mov
cwtl
pop
out
dec
insb
dec
icebp
mov
sbb
pop
push
sbb
xchg
fistl
dec
je
das
push
mov
fidivs
stos
push
mov
js
mov
bswap
mov
push
rorb
int
push
jl
and
mov
cmp
jp
mov
nop
cmp
sbb
outsb
pushf
xchg
sub
or
stos
xorb
das
lret
xorb
pop
rclb
jmp
or
cmp
cmp
das
repz
fnsave
jl
inc
cmp
or
push
mov
and
fimull
idivl
das
sub
outsl
scas
cltd
stos
xchg
ds
xchg
cwtl
mov
insl
inc
xchg
sbb
mov
jbe
jnp
fnsave
xchg
psubusw
fcompl
and
mov
shrb
inc
inc
add
in
aaa
sub
jecxz
in
add
or
flds
jbe
loop
add
mov
insl
adc
mov
sbb
xchg
push
sub
mov
dec
or
adc
je
jnp
out
pop
sub
jo
sti
mov
dec
lds
in
sub
pusha
stos
add
test
mov
ss
iret
test
mov
jp
or
scas
lods
lahf
movsl
sub
shll
mov
adc
int
or
movsb
mov
lods
lret
xchg
scas
jg
pop
int
js
das
ret
xchg
lahf
and
mov
jp
in
ret
jo
ss
ret
ret
scas
jne
shrb
test
mov
cmp
repz
inc
ljmp
shrb
inc
inc
sbb
aam
dec
pop
or
mov
push
je
cs
idivl
test
adc
cld
pop
xor
cwtl
rorb
fistps
xlat
mov
sub
add
or
mov
roll
aad
ljmp
sti
cld
inc
jl
loopne
adc
dec
les
pushf
icebp
adc
mov
mov
sar
cmp
leave
int3
pop
jge
ret
pusha
fpatan
negb
arpl
les
aas
add
push
aad
aas
hlt
cwtl
ror
aas
push
push
mov
int3
mov
pop
jbe
xchg
xor
fldt
adc
mov
cmpsb
cmp
mov
sbb
out
decb
ja
and
lea
add
adcl
push
fwait
inc
je
in
and
or
js
add
int
sahf
mov
into
lock
sbb
std
pusha
rol
data16
cmpsb
add
cld
adcl
movb
fs
lock
fidivs
push
push
push
out
fidivrl
clc
mov
imulb
xor
movsl
adc
shll
sbb
addb
push
test
pop
fidivrs
pop
jns
popa
ljmp
jmp
push
into
pop
dec
jle
add
sbb
lret
jne
mov
dec
popa
or
shll
ss
call
xchg
lret
mov
sbb
cld
das
inc
int3
orl
sbb
add
inc
imul
pop
loope,pn
mov
xor
imul
into
sbb
rcrb
daa
fbld
orb
mov
mov
jge
adc
inc
sahf
mov
or
pop
cmp
add
push
lods
push
ja
ja
scas
clc
jecxz
insl
xchg
push
iret
mov
gs
mov
xor
test
pop
inc
cmp
and
mov
jp
mov
mov
mov
mov
pop
push
or
inc
mov
jo
hlt
test
add
push
mov
in
ret
in
ss
aas
jnp
subl
or
lret
scas
add
mov
lds
cld
jg
mov
mov
mov
jo
mov
fildll
cs
mov
mov
sahf
call
aas
ss
and
aas
movsl
lret
add
or
aad
mov
nop
test
mov
xor
mov
mov
loope
pop
and
add
fdivrl
call
cs
jno
inc
cmc
loopne
inc
sti
ljmp
mov
push
dec
mov
mov
scas
jge
or
dec
pop
mov
and
dec
insb
scas
adc
push
data16
stos
fisubs
jo
imul
mov
cmp
xor
mov
jb
cmp
mov
dec
mov
sbb
sub
xlat
push
mov
mov
jp
je
add
and
dec
mov
test
scas
mov
ljmp
add
jecxz
mov
pop
insb
mov
push
sub
imulb
jae
mov
cmpl
jne
movsl
faddl
mov
adc
std
aaa
mov
sbb
adc
mov
jns
lahf
imul
aaa
loop
and
or
pusha
dec
cmp
ret
cld
decl
cli
enter
ficompl
add
add
mov
inc
pshufw
in
test
loop
add
mov
xchg
sbb
adc
ds
adc
jp
popw
subb
dec
or
fildl
rol
jp
lahf
push
inc
and
mov
sub
int
pusha
or
int3
in
cmp
xchg
shll
lret
dec
add
hlt
shll
xchg
in
pop
push
inc
xchg
ljmp
mov
test
and
stc
lea
enter
cmp
push
scas
cltd
xlat
pop
inc
cld
sbb
and
in
jle
outsl
insb
cmc
xor
flds
clc
in
popa
mov
add
adc
jge
or
rol
push
incl
pop
sahf
push
stos
inc
aad
jmp
xor
in
ljmp
pop
mov
jae
or
mov
mov
mov
outsb
xchg
mov
rcl
mov
jecxz
push
pop
int3
cmp
mov
mov
outsb
pop
inc
insl
jnp
or
roll
adc
mov
stc
adc
xchg
push
dec
mov
push
loopne
sahf
jbe
insb
imul
fbld
sub
lcall
cltd
push
out
shlb
mov
jle
testl
je
cmp
loope
jae
mov
sbb
popa
aas
add
cli
out
dec
jg
xor
adc
out
inc
lea
popf
or
scas
ds
in
sbb
or
ds
ret
ss
jl
jb
sub
shrb
ljmp
stos
pushl
mov
add
ljmp
push
sub
push
or
in
sbb
xor
dec
fistpll
push
pop
daa
inc
or
addr16
cmp
repz
stos
mov
dec
jo
mov
xor
bound
sbb
ftst
xchg
push
xchg
push
dec
scas
jp
mov
adc
cmp
subl
movsl
jns
cmc
jl
out
xchg
loop,pt
arpl
mov
lcall
stos
or
xor
sbb
jmp
js
out
or
pop
inc
scas
inc
inc
lret
xchg
push
xchg
inc
push
fxch
sub
push
xchg
push
mov
aam
jecxz
arpl
stos
cmpsb
sub
push
leave
jle
popf
aas
in
and
bsf
movsb
mov
sub
out
jge
or
jp
pop
adc
jo
out
pop
and
and
scas
mov
sbb
shl
pop
fsubrl
es
jae
xchg
loope
mov
push
jmp
repz
pop
movsl
and
adc
popw
stos
xor
pop
mov
test
xlat
sub
int
push
cmp
iret
xchg
dec
les
mov
repnz
leave
movb
xor
sti
or
mov
negb
icebp
sahf
pop
mov
xchg
adc
jo
fistl
xlat
shlb
sub
add
mov
jl
xchg
inc
push
jg
inc
xlat
push
mov
mov
jbe
mov
dec
hlt
sub
pop
fwait
mov
push
scas
mov
fwait
repnz
lea
fisttps
mov
push
jbe
push
xchg
dec
xchg
xor
pop
cmp
cmp
insb
add
mov
add
inc
cmc
mov
cmp
push
sbb
or
int
pusha
and
sub
cmpsl
iret
and
sbb
mov
push
adc
fs
stc
negb
or
adc
lcall
sti
outsb
notb
push
xchg
std
lret
mov
push
pop
or
mov
fnstcw
and
pushf
gs
xchg
aas
leave
adc
outsl
rolb
inc
mov
adc
stos
adc
adc
push
in
ret
imul
pushf
cmp
dec
loopne
or
out
xchg
mov
clc
pop
jle
push
jmp
dec
mov
filds
jb
pushf
push
cmpsl
mov
xchg
sub
imulb
pop
jmp
jp
push
adc
mov
adc
int
stos
mov
inc
leave
sbb
mov
and
mov
cli
int
push
xchg
dec
cmpsb
adc
mov
pop
daa
in
push
jmp
mov
sub
aas
loop
mov
xchg
mov
sub
cli
jmp
pop
pop
lock
cld
dec
subl
lret
hlt
clc
gs
push
cmc
enter
add
ret
dec
out
mov
cmpsb
sub
mov
pinsrw
out
or
mov
dec
add
dec
mov
xor
ds
pop
jge
andl
push
xchg
jecxz
aaa
out
jb
ljmp
scas
jo
xor
xchg
cmp
sbb
stos
cmpsl
and
stc
fdivs
jnp
sbb
leave
pop
dec
ljmp
and
cmp
clc
mov
adcb
mov
fstpl
jb
cmp
inc
jle
cld
cwtl
stc
pop
js
sti
or
mov
addl
xchg
and
mov
adc
ss
pop
mov
pusha
mov
aad
add
sub
inc
or
pop
lcall
jecxz
dec
jbe
cmp
rol
movl
pushf
jl
outsl
dec
mov
sbb
insb
fxch
out
cmp
cli
lcall
sbb
xor
or
xor
adc
sub
in
mov
jg
leave
bnd
xchg
ja
sarl
sbb
mov
in
aas
cltd
ret
rcl
jbe
es
das
dec
test
shll
push
jmp
add
xchg
xchg
in
sbb
cmc
test
jl
dec
cmpl
and
test
or
mov
lea
daa
out
fwait
mov
andl
mov
lahf
sbb
gs
ret
lahf
inc
dec
push
arpl
cwtl
hlt
arpl
push
aas
cld
imul
adc
ret
jnp
pushl
data16
dec
dec
xlat
stc
arpl
lret
push
sahf
les
adc
xorw
setno
movsb
pop
add
popa
jecxz
or
or
or
add
dec
jne
push
loopne
pop
fwait
push
add
cmp
iret
inc
fisubs
cmp
or
xchg
mov
mov
xor
fisttpll
iret
andb
sub
xchg
inc
adc
out
mov
lcall
lods
or
xor
lcall
aam
mov
fstps
xor
fwait
loop
cmp
sub
mov
icebp
rcll
cmpsl
les
push
sub
push
pop
outsb
fmul
xchg
mov
adc
push
xor
jp
iret
aas
fisttpl
sub
jle
add
jno
sub
jnp
aaa
adc
lret
fsts
negl
lods
mov
sbb
and
outsl
mov
mov
sbb
and
out
push
test
mov
cmpsl
or
and
fwait
add
xchg
add
mov
outsb
pop
mov
pop
sub
xor
or
cmp
rol
sbb
mov
sub
imul
enter
sbb
nop
adc
jae
ret
movl
arpl
leave
pop
cmp
push
das
or
mov
clc
aam
nop
ret
mov
jb
int3
fwait
sbb
jmp
mov
or
out
shll
fwait
sub
mov
cmp
mov
push
lods
adc
popa
ljmp
and
fmull
inc
xchg
mov
es
or
sbb
jo
adc
xor
lods
pop
in
out
jge
mov
test
jmp
jle
add
pusha
and
jno
and
xchg
push
add
cmp
cmp
ss
cmpsl
mov
shrb
xchg
popa
cli
dec
push
fs
ds
fdiv
jge
lcall
or
outsb
push
lds
jo
sbb
inc
test
iret
iret
gs
cmp
add
fs
xchg
mov
addr16
and
cmpl
rcrl
xchg
mov
stc
adc
push
xchg
mov
mov
lret
aaa
xor
es
out
jbe
mov
adc
push
inc
in
sub
loop
insl
pop
pusha
hlt
xchg
jo
jg
cmp
sti
inc
test
inc
movsb
push
daa
popf
dec
jns
mov
pop
pop
inc
cmp
mov
out
lock
fistps
lds
pop
stc
jg
xor
pop
in
out
mov
pop
sar
movsl
xor
jo
decl
outsb
pop
insl
sbb
ficomps
pop
push
push
mov
cwtl
mov
xchg
sub
push
stos
mov
dec
xor
dec
aas
fmuls
mov
jmp
mov
pop
in
clc
mov
xchg
mov
xor
add
jmp
jae
mov
push
sbb
mov
push
lahf
lss
addr16
movsb
in
cld
adc
cmpsb
cmp
test
inc
and
aaa
lret
push
adc
pop
int
mulb
fisttpll
and
mov
adc
repnz
inc
inc
cmpb
dec
lahf
lea
lret
mov
adc
mov
pavgw
xor
stos
push
push
das
jae
cwtl
xchg
cmp
rorb
lret
fwait
inc
into
call
cmpsl
mov
ds
cwtl
mov
es
pop
push
es
aad
cmp
add
mov
test
jecxz
adc
in
sub
punpcklbw
and
shrb
popa
cwtl
std
jae
dec
mov
sub
mov
nop
int3
insl
cmc
lret
jae
adc
stos
and
dec
mov
add
mov
add
test
and
inc
push
sub
sbb
or
adc
mov
dec
mov
bswap
dec
bound
cmp
movl
cs
mov
xor
cmpsl
mov
inc
inc
jb
xor
jg
sbb
pushf
dec
push
std
es
sub
lret
fwait
mov
aam
cmp
jns
pop
fmuls
sub
fsubrl
add
mov
xor
lock
fidivrl
aam
dec
push
or
xchg
or
ficompl
mov
mov
mov
hlt
sub
mov
movsl
mov
adc
jnp
lods
inc
sbb
or
mov
mov
mov
mov
xchg
faddl
dec
leave
mov
inc
xchg
mov
add
xchg
subb
jmp
dec
hlt
mov
mov
xchg
pop
cmp
xchg
xor
push
stc
xchg
push
scas
pop
movsb
adc
mov
sub
jg
inc
mov
in
pmulhuw
dec
leave
adc
icebp
sar
movsb
or
insb
jns
ljmp
cmp
cmpsl
adc
movl
mov
idivl
ds
push
add
es
jns
pop
jbe
cltd
mov
pop
sbb
pop
push
jns
negl
jl
mov
lcall
outsb
iret
push
adc
inc
mov
push
popa
or
or
andb
outsl
jns
pop
push
xchg
adc
das
xor
mov
sub
rol
mov
shl
loope
push
mov
adc
xor
fcmovnb
push
iret
ret
popa
push
repz
xlat
push
mov
out
imul
xchg
xchg
mov
sti
repnz
mov
cmpsb
movsb
int
xchg
lahf
data16
fxch
xchg
xchg
xchg
outsb
ret
add
lock
add
in
sar
add
fdivrs
or
test
xchg
and
test
jl
xchg
push
cwtl
add
adc
aaa
insb
test
out
inc
idiv
pop
rorb
xchg
xor
sbb
mov
movsb
push
fwait
pop
sub
inc
ljmp
and
adc
sbb
push
jecxz
insb
cld
popa
lock
adc
sbb
dec
popf
cli
outsb
push
adc
iret
jle
ljmp
adc
scas
int
or
push
dec
scas
lock
cmc
jnp
inc
mov
xor
mov
clc
dec
or
cmp
fs
movsl
fsubp
add
pop
xchg
popa
cmp
rcrb
frstor
les
addl
int3
mov
imul
cmp
xor
jl
sub
test
pop
andb
jnp
and
rep
into
cli
mov
push
fistpll
jo
mov
aaa
mov
push
mov
mov
jle
or
repnz
fwait
mov
pop
push
pop
fcompl
popf
xchg
pop
adc
sbb
ficompl
sbb
cmp
shrb
mov
stos
in
dec
movsl
fwait
mov
mov
test
dec
mov
in
xor
sub
push
dec
add
ret
mov
and
push
imul
cmp
mov
es
test
inc
dec
into
pop
cld
push
xor
sub
enter
xor
orl
subb
dec
mov
loopne
push
jb
repz
sbb
in
test
push
and
push
leave
shll
mov
mov
mov
ss
jge
or
adc
mov
cmpsl
stos
pop
cmc
mov
or
push
mov
xchg
mov
lock
test
fiaddl
inc
pop
outsb
sub
scas
sbb
ds
iret
mov
aam
and
insl
test
mov
add
xor
sahf
push
pop
pop
adc
loope
mov
lret
fildl
outsl
clc
lods
lcall
icebp
cmpsb
add
cmp
jnp
push
insl
xchg
sub
cmp
scas
pop
mov
scas
mov
dec
insl
js
iret
daa
insb
dec
pop
and
sbb
and
adc
fistps
ljmp
out
jno
imul
or
cmp
imulb
jle
aaa
nop
add
or
push
mov
jmp
lock
push
call
das
scas
mov
mov
jb
pop
outsl
add
adc
sub
jb
cmp
cmp
rorb
push
cmp
push
lea
push
jno
mov
mov
add
jne
sub
jnp
leave
xchg
mov
movsb
sbb
lods
out
dec
push
push
mov
sbb
in
mov
hlt
push
ds
pop
jns
neg
and
mov
or
push
dec
mov
and
mov
notl
div
push
je
call
jle
sbb
rcr
or
and
aas
sti
cmc
mov
cmpsl
loopne
push
dec
fimull
xchg
dec
inc
sub
mov
push
xchg
sbb
inc
rorb
xor
dec
jl
int3
popf
and
bound
aam
jecxz
mov
pusha
mov
test
dec
pop
repz
sarb
inc
aad
popf
sbb
xor
int3
inc
and
lahf
int3
lods
push
push
outsb
stos
sub
dec
dec
movaps
sub
jbe
mov
inc
jb
inc
sub
jmp
mov
adc
mov
test
leave
jns
lea
or
sub
loopne
jae
xchg
int3
sbb
movsl
int
out
jno
cmpsl
pop
test
jecxz
fimull
sbb
xor
loop
in
xorb
pop
das
push
and
mov
pop
in
dec
mov
pop
mov
pusha
out
push
pop
mov
cmpsb
insl
lahf
bnd
fstl
pop
cmpsl
cmp
cmpsb
xor
xchg
xor
jmp
adc
adcl
jo
fsubrp
unpcklps
ja
aad
mov
sub
dec
mov
in
add
loopne
sub
xchg
pop
je
pop
inc
mov
scas
pusha
xor
inc
mov
loope
mov
xchg
loope
push
cmpb
out
mov
std
cmpsl
cld
fdivs
addb
shl
push
cld
jno
jo
aad
js
xchg
push
push
fdivs
aas
jnp
push
push
adc
mov
ss
mov
in
inc
sub
push
cs
sbb
jo
push
xor
or
mov
sbb
add
jle
mov
push
imul
and
fiadds
outsl
es
adc
sub
imul
fcoms
or
add
daa
push
pop
dec
dec
jmp
jb
xor
inc
jle
movsb
push
arpl
inc
mov
dec
cltd
out
inc
stos
push
cmp
inc
sbbb
mov
mov
aam
mov
pop
jmp
popa
iret
ret
xlat
xchg
add
mov
sbb
rcl
je
push
cmp
clc
xor
arpl
xchg
add
jno
fistl
js
cmp
fldt
xchg
es
repz
arpl
xchg
or
je
in
and
lret
push
or
xor
add
mov
push
in
dec
jge
mov
fistl
outsb
outsl
ds
jge
clc
fcmovnb
lods
pushf
or
jne
mov
mov
adc
push
cmp
les
imul
inc
adc
cwtl
cmpsb
pop
imul
cltd
insb
jmp
dec
sub
pop
or
int
test
jle
add
cltd
jle
inc
xor
mov
in
mov
fs
movsb
xchg
inc
xor
mov
aad
aas
into
movsb
mov
adc
dec
test
rep
pop
int3
hlt
fcompl
rcrb
inc
in
push
icebp
sbb
orb
dec
insl
pushf
xor
js
insl
in
and
sub
inc
sti
ja
dec
out
jo
cmpsb
pop
outsl
js
sub
mov
fisubl
jb
leave
pop
negb
cltd
jmp
out
dec
add
inc
std
arpl
mov
mov
pop
mov
shlb
in
shl
mov
mov
mov
dec
xchg
jp
jmp
mov
mov
inc
inc
mov
or
adc
aaa
jmp
mov
mov
aad
cmp
sub
add
xor
jo
cli
nop
fisttpll
push
xchg
sub
push
scas
inc
and
add
pop
push
or
lret
mov
cmc
mov
mov
pop
clc
cld
add
dec
push
popa
out
and
lret
icebp
mov
inc
xchg
shr
pop
mov
cmpsl
sbb
repz
testb
scas
int
add
mov
mov
test
xor
push
js
mov
call
dec
imul
inc
cld
adc
dec
jne
fisubl
sbb
dec
cs
int3
pop
push
lcall
ret
fwait
test
mov
mov
or
mov
pop
xchg
jp
sahf
cmp
jo
mov
lret
add
jecxz
inc
sub
xchg
cld
lock
xchg
adc
in
out
call
or
jbe
adcl
lods
mov
jmp
cmp
pop
das
call
ljmp
les
sub
push
negl
or
add
rcr
jmp
outsb
jl
aas
rcll
sbb
bound
sti
inc
pop
pop
incb
add
ss
cmpsb
mov
and
popf
add
sarb
inc
cwtl
imul
stos
mov
hlt
add
call
imul
xchg
cmp
and
adc
rclb
push
inc
push
iret
std
push
cwtl
sbb
sahf
mov
lods
push
cli
scas
cmp
xor
es
inc
aad
out
outsl
test
loop
xor
fs
cmpsb
sub
mov
fisubrs
loope
les
jo
pusha
xchg
sub
jmp
ss
movsb
mov
pop
lock
fwait
shrb
push
cltd
in
cmp
in
xlat
imul
repz
pop
adc
insb
mov
pop
cs
fmuls
sbb
dec
push
and
sbb
sti
and
fwait
pop
sub
xor
pop
jl
popf
sub
clc
rcll
fnsave
leave
gs
bound
clc
push
pop
addl
les
jecxz
inc
es
pop
xlat
addl
cmpsl
mov
pop
mov
push
and
fwait
repnz
mov
fisubl
adc
and
inc
mov
shll
xchg
fwait
or
push
and
outsb
decb
push
ret
outsl
arpl
mov
imul
cwtl
push
mov
add
test
pusha
and
jge
push
movsl
in
dec
js
pop
movsb
xchg
push
cli
negb
pushf
imul
loop
sub
jb
std
sbb
mov
inc
repz
sbb
mov
lods
and
imul
pop
pop
mov
fcoms
loope
inc
dec
sub
imul
adc
addr16
int3
test
mov
mov
aam
je,pt
push
scas
dec
jo
push
js
adc
xlat
or
adc
mov
popf
xchg
imul
sahf
dec
aam
aad
ret
in
cmpsb
jne
popf
scas
mov
inc
gs
adc
iret
xor
push
sarb
jns
loopne
cmc
cli
test
std
dec
lds
in
sbb
add
test
cmp
lds
in
fs
mov
push
jg
and
into
mov
jnp
lret
xchg
adc
jmp
cmp
mov
js
adc
outsb
lcall
dec
lea
pop
sub
sub
out
popf
call
push
aad
loope
aad
cmc
mov
es
fs
dec
jmp
pop
push
pop
xor
pushf
push
xor
jo
out
push
bound
and
add
xor
mov
outsb
push
mov
push
mov
mov
xor
add
negl
cmp
aam
mov
mov
sub
push
jp
mov
dec
pop
adc
clc
rclb
cmp
pop
mov
mov
cmp
adc
xor
ja
pop
fadds
sub
loop
lock
or
add
inc
jg
pop
dec
add
loop
pop
rclb
push
mov
mov
add
popa
adc
jp
test
divl
or
cmpsl
inc
test
jns
jb
dec
mov
clc
push
rorb
push
icebp
iret
xor
cmpsb
push
jns
ds
inc
fwait
mov
es
test
mov
cs
jecxz
inc
outsb
jle
arpl
stos
dec
cwtl
test
xchg
push
xchg
loop
cwtl
repz
jns
rcrb
cmp
ret
lahf
pusha
xchg
outsl
sub
data16
ret
je
ljmp
pop
rorb
inc
and
not
mov
add
dec
gs
inc
stos
ss
jae
fdivrs
or
xchg
test
aad
lock
pop
inc
xlat
cmp
roll
jmp
jb
jae
cmp
xor
mov
stc
scas
repz
ss
sbb
dec
push
jg
mov
xchg
mov
clc
imul
aam
or
pushf
out
sbbl
cmpsb
subl
dec
and
test
stos
das
sbb
or
cmp
push
mov
cld
sub
push
ss
clc
fildl
push
movb
das
inc
push
popa
push
mov
psubsw
adc
inc
add
xchg
push
xchg
pop
fucomip
std
test
fnstcw
and
inc
orb
push
ja
push
inc
clc
push
aad
imul
pop
add
mov
clc
sbb
int3
push
jne
mov
popa
cld
cmp
das
rorl
hlt
push
in
pushf
popa
xchg
xchg
orb
lods
sbb
xchg
icebp
adc
lods
loope
mov
mov
movzbl
jge
or
lea
imul
repz
cmpsb
jg
adc
jb
ljmp
imul
shl
push
xchg
orl
std
gs
enter
xchg
cmp
sbb
enter
data16
push
ss
sbbb
sub
jp
ljmp
jl
mov
lock
das
into
loope
and
test
jmp
enter
inc
popf
push
das
outsl
jle
lahf
insb
and
shlb
shrb
xchg
je
mov
pop
scas
repnz
cmp
shrl
sbb
mov
add
icebp
mov
adc
jge
xchg
jns
pusha
sub
mov
push
iret
mov
mov
xchg
xor
cwtl
or
ja
xchg
das
push
dec
lret
cmp
scas
ret
sub
in
imul
adc
mov
cli
out
sbb
xor
xchg
movsb
jp
or
pop
jp
pop
movsb
adc
shlb
stos
sti
mov
mov
adc
or
xor
xor
fistpll
push
sub
or
mov
adc
std
out
pop
push
and
jmp
sub
sbb
jecxz
repnz
mov
jge
pop
rorl
pushf
test
push
push
cli
cld
dec
mov
movsb
lea
lret
outsl
rorl
xor
adc
jmp
or
mov
pop
mov
call
loopne
ss
stc
add
or
int3
dec
outsl
dec
rcll
push
mov
add
dec
push
sbb
or
inc
sub
adc
pop
dec
and
stos
mov
lods
enter
aad
fadds
mov
in
lods
rolb
cmp
in
dec
jge
inc
cmp
pop
sti
and
insl
lcall
add
ja
ja
push
popa
mov
lds
leave
mov
pop
or
shr
leave
hlt
sbb
or
mov
xor
push
mov
xchg
xchg
rcll
lret
inc
cmp
jle
lret
fists
je
loope
movsl
popa
in
push
je
iret
jbe
mov
cmp
sub
stos
xor
dec
mov
test
fistl
out
pop
hlt
mov
and
shrl
pop
pop
push
orl
push
xorb
push
bound
mov
dec
test
pushf
sti
rcrb
insl
mov
dec
das
mov
add
xor
sbb
push
push
mov
lock
lds
push
cmp
icebp
jne
clc
push
dec
jg,pn
pop
jno
in
stos
mov
mov
clc
mov
mov
pusha
lret
cld
fiadds
and
jne
mov
inc
dec
lds
or
push
icebp
negb
stos
and
sub
sbb
inc
sub
pop
jno
mov
cmc
push
out
aam
mov
cld
xor
mov
dec
jp
std
mov
lcall
loop
cmpsb
aas
inc
iret
inc
or
icebp
loopne
jb
pop
cmpsl
adc
int3
ss
rorb
push
adc
int
and
fldl
and
mov
sbb
out
inc
adc
adc
imul
push
andb
test
and
or
and
mov
jb
push
cmp
add
adcb
jo
outsb
mov
int3
and
jns
popa
aaa
xchg
mov
test
and
mov
clc
in
sbb
lahf
inc
lahf
enter
imul
test
jecxz
push
in
add
mov
test
jns
xor
outsb
dec
shlb
and
pop
sub
stc
in
ret
and
xchg
cmp
out
cmpsb
aad
mov
add
lcall
jp
ja
dec
pop
and
mov
push
jo
movsb
pusha
jb
add
push
mov
aaa
stc
and
repz
inc
jb
cmp
data16
negb
dec
lock
inc
lahf
into
sub
jecxz
mov
lret
in
andl
jle
push
int
mov
pushf
adcl
leave
cmpsb
and
inc
push
xchg
in
repnz
ret
add
pusha
xchg
jp
out
repnz
pop
xlat
sahf
xor
fldt
lret
sbb
lahf
add
add
jno
xchg
cmp
dec
pop
push
setno
lret
icebp
stc
arpl
jbe
idiv
aaa
xchg
and
mov
subl
sub
cli
push
adc
push
es
leave
pop
pop
imul
bound
gs
loope
push
jle
cwtl
sub
xchg
xchg
aam
inc
xor
in
push
repz
repz
in
or
and
mov
mov
movhps
sti
add
jb
in
xor
sub
clc
sar
aaa
cli
setle
add
data16
mov
add
testb
adc
jbe
sub
daa
in
repz
arpl
insb
cwtl
sbb
dec
cmp
das
enter
ss
sbb
stc
lret
pusha
mov
movsb
scas
xchg
fnstenv
adc
mov
push
fs
push
pop
daa
jp
xchg
sbb
pusha
xor
pop
scas
ret
repnz
add
shll
lret
cli
adcb
jnp
mov
movsb
stos
add
xchg
fidivrs
dec
pop
addr16
les
and
ja
pop
stos
inc
mov
and
pop
push
add
xchg
daa
dec
cltd
dec
cmpsb
stc
orb
cmpsl
push
shll
movsb
xor
mov
inc
in
fwait
mov
xor
add
push
mov
push
inc
ret
inc
rcrb
aad
and
pushf
iret
sub
jb
mov
pop
jle
loopne
rcrl
mov
xchg
mov
cmp
pop
adc
inc
testb
sbb
daa
xor
aam
jmp
and
movsb
sbb
popa
lcall
cltd
xchg
loopne
inc
jno
or
nop
rep
imulb
xor
and
imul
ljmp
out
xor
sub
or
pop
or
movsb
sub
ret
or
dec
shrb
adc
cmp
sar
sub
xchg
and
and
inc
push
hlt
xchg
out
sub
imul
pop
mov
jbe
add
cmp
ja
push
push
test
or
mov
hlt
jne
mov
push
xor
inc
sbb
or
lcall
sarb
imul
loop
fcmovnbe
push
mov
leave
push
add
xorl
out
fwait
mov
nop
mov
int
add
xchg
dec
mov
jo
push
fdivrs
pop
test
stos
insb
imul
adc
in
mov
dec
movsb
arpl
hlt
mov
lret
sbb
dec
movsb
mov
mov
ret
mov
aad
in
pop
sbb
inc
fdivs
pop
jb
mov
in
out
sub
inc
insl
jmp
push
adc
jne
sbb
mov
add
and
subl
mov
or
repnz
shl
xchg
add
push
roll
mov
xlat
les
or
sub
sbb
aam
hlt
or
mov
popf
jnp
xor
stos
jnp
sbb
pop
cmp
lret
xchg
and
call
hlt
adc
outsb
or
mov
dec
in
test
int
lret
movsl
iret
or
xchg
mov
aas
scas
lret
scas
jecxz
cwtl
pop
pop
jp
out
lret
dec
jnp
cmpsl
jne
loope
jo
push
adc
dec
cmp
adc
sahf
sbb
icebp
dec
jo
sbb
daa
popa
xchg
jmp
movsl
aam
insb
mov
iret
xchg
xchg
push
mov
lcall
or
xor
subl
push
adc
jnp
repz
mov
repnz
sub
xchg
xor
pop
xor
xchg
int3
xor
stos
xchg
add
shrb
imul
mov
xor
ss
cmp
fstpl
lock
xchg
test
xchg
jo
in
inc
cmpsl
jno
dec
mov
out
xor
xor
jno
inc
inc
out
dec
or
sub
test
xchg
rol
pop
sub
test
test
adc
and
scas
add
adc
hlt
div
loope
cmc
repz
and
xchg
mov
movq
cmp
pop
or
aam
cld
xchg
push
xor
jmp
pop
pop
cld
jl
fistpl
pop
add
insb
xchg
dec
or
mov
pop
movsb
pop
adc
mov
aad
pop
add
test
pop
and
test
inc
shl
fsubp
xor
insl
dec
cmp
insl
jge
xchg
inc
inc
jno
jg
loop
mov
and
lds
lcall
pop
or
lcall
sub
lock
jb
and
sub
jne
cmpsb
push
mov
sbb
cmp
sahf
mov
lahf
test
add
arpl
inc
test
insl
mov
shlb
mov
dec
lcall
pop
dec
fldenv
out
aas
xchg
push
clc
xlat
insb
lret
popa
mov
std
clc
sub
xor
push
gs
in
xor
mov
mov
andl
and
or
add
test
out
lods
lods
fstp
xor
test
xlat
ret
pushf
or
add
add
lds
inc
bound
popa
iret
es
test
stos
mov
adc
imull
stos
sub
int
jg
test
outsl
clc
mov
sbb
add
jge
fwait
pop
lcall
popa
adc
push
xchg
sbb
jl
mov
mov
adc
fcmovne
divb
cs
push
ret
mov
test
sbb
mov
es
sbb
push
jge
fmuls
cld
imul
sarl
lahf
xchg
mov
mull
orl
cmp
xor
outsl
xchg
xor
lock
ds
dec
aaa
and
inc
jbe
pusha
push
mov
mov
rcrl
xchg
xchg
test
aas
std
mov
insb
fwait
and
jge
add
imul
mov
sbb
pop
inc
cmp
push
repz
pop
pop
cmpsb
divl
in
testb
js
fcoms
lret
aas
xor
jns
dec
mov
mov
xchg
and
pop
and
vpsrlw
pop
mov
out
inc
ss
and
das
xor
add
xor
faddl
xor
in
cmpsb
roll
test
pop
sbb
andb
dec
fadds
dec
int3
cltd
inc
sub
sub
pop
ja
dec
sbb
int3
sbb
sahf
insb
ja
hlt
adc
mov
inc
loopne
pop
movl
call
ljmp
add
inc
int3
pusha
inc
sub
dec
inc
xchg
xorps
pop
mov
dec
cmp
sbb
jbe
jo
mov
mov
adc
sub
cmpsb
adc
je
mov
sbb
adcl
jno
hlt
mov
in
dec
lahf
lahf
ret
outsl
into
cwtl
sbb
lretw
push
mov
pop
out
sbb
out
sub
mov
push
stos
mov
shrb
in
push
lret
and
mov
ljmp
cmpb
mov
sbb
lcall
pushf
ja
mov
daa
movb
lahf
cmpsl
jmp
hlt
jg
mov
jbe
mov
inc
arpl
mov
pop
mov
in
sub
add
popf
mov
sahf
inc
cmpsb
addb
test
sub
nop
lret
mov
mov
scas
mov
adc
mov
lock
jb
mov
imul
mov
pop
ficompl
mov
or
test
icebp
fidivrs
xchg
fdivl
pop
popa
xor
adc
push
and
je
jb
mov
mov
out
ljmp
mov
jne
or
je
xchg
mov
mov
enter
arpl
inc
dec
xchg
mov
adc
sbb
mov
mov
divl
dec
xchg
xchg
das
xor
stc
cmp
mov
adc
icebp
sahf
dec
imulb
inc
cmp
jno
add
adcl
mov
cmp
ret
or
pop
mov
sub
test
adc
pop
shld
jmp
scas
or
popa
sbb
arpl
inc
xchg
out
rolb
and
fcomi
inc
and
into
mov
arpl
mov
leave
popf
ss
cmp
cmp
add
xchg
ss
push
mov
loopne
dec
sbb
mov
int3
test
push
nop
jo
stos
dec
cmp
xor
push
push
fs
les
shrb
add
out
jbe
push
dec
cli
or
lcall
cld
gs
push
popf
sbbl
sub
inc
loope
lea
pushf
call
mov
cwtl
inc
xchg
sbb
cli
pop
enter
scas
xchg
jne
idivl
or
fildll
shrb
icebp
cwtl
mov
loopne
lods
lahf
xchg
or
sbb
je
out
ss
ds
sub
mov
aad
inc
sbb
pop
add
xchg
inc
or
xor
pop
mov
push
dec
inc
rcrl
fs
inc
enter
push
fnstsw
mov
xorps
hlt
adc
lock
push
int
xchg
aaa
inc
int3
mov
dec
inc
insl
cs
fwait
dec
push
jg
push
aam
cpuid
push
fdivrs
fs
jmp
dec
inc
mov
xchg
loopne
jb
popa
xchg
xchg
imul
cmpsl
and
popa
out
xor
jl
or
mov
pop
xor
xchg
jno
cltd
fmuls
add
inc
adc
jnp
sbb
pop
out
testb
or
and
lret
sub
mov
jbe
jns
xchg
mov
sub
leave
add
out
jl
arpl
cmp
mov
jne
fcomi
ret
stos
pop
mov
add
pop
mov
adc
mov
ds
pop
stc
push
mov
sbb
outsb
mov
xchg
sbb
push
xchg
cmp
inc
scas
push
out
pop
stos
gs
xchg
ljmp
lods
mov
loope
inc
jecxz
push
pop
adc
in
lods
rolb
adc
sbb
aad
mov
push
insl
cwtl
push
int
in
lret
cwtl
cmp
pusha
fsts
or
adc
mov
call
out
repnz
mov
cli
ljmp
inc
pop
out
dec
mov
sbb
mov
shll
inc
xchg
loope,pt
add
xchg
push
mov
inc
in
lret
dec
ja
cs
insb
push
outsb
repnz
jmp
mov
movsl
aas
not
dec
les
sub
neg
inc
mov
or
rcl
notl
test
and
filds
addr16
mov
inc
or
xchg
cmc
push
dec
dec
mov
fildll
aad
mov
lea
cltd
test
or
mov
inc
imul
gs
loopne
out
sub
lea
fbld
fs
jge
les
lret
ret
outsb
loope
or
call
jbe
repz
stos
xor
stc
push
jg
and
pop
fidivl
imull
sbb
or
adc
or
pop
or
data16
pop
lods
inc
aam
stos
mov
push
addb
outsb
or
and
in
or
mov
or
insl
mov
pop
xchg
jl
adc
lea
daa
or
mov
mov
xchg
stos
cmp
and
xorl
stc
call
push
in
jns
pop
dec
inc
jno
imul
cs
sti
fildll
jae
adc
repnz
mov
fst
dec
dec
hlt
pop
sub
jle
xor
jp
jne
pop
xor
cmpsb
adc
mov
call
xchg
add
sbb
loop
and
adc
cs
pop
mov
pop
lds
adc
push
dec
scas
in
call
jecxz
jae
xchg
int3
xchg
xor
jb
sbb
xor
push
xor
test
scas
sahf
cwtl
xor
ja
in
and
or
push
clc
sbb
xor
xchg
pop
sub
sbb
jno
push
sub
jg
sub
or
sbb
mov
mov
xchg
pop
cwtl
leave
pop
sub
xchg
adcb
pusha
mov
out
pop
jno
filds
pop
ret
jmp
push
add
push
xor
rorl
loope
jmp
push
ret
lahf
sub
loope
inc
pushf
fimuls
ficoms
insb
cltd
loopne
mov
das
lret
js
fsts
jbe
jnp
int3
repnz
push
dec
add
inc
push
aas
gs
or
pop
sub
ja
or
fists
sbb
cwtl
lahf
mov
imul
jbe
and
sub
jmp
movsb
push
jne
and
fwait
xchg
scas
call
cli
pop
push
out
push
push
mov
cmp
fisttpl
stos
ljmpw
aas
fstps
xchg
cmp
mov
sbb
insb
mov
shlb
add
mov
mov
or
xor
movd
lods
pop
fisttpl
jmp
stos
das
das
push
or
or
mov
xchg
add
add
add
add
mov
mov
sbb
dec
stos
popf
jo
aaa
or
xchg
add
movsb
pop
movsl
or
mov
enter
and
or
negb
subl
xchg
fistl
fldcw
out
popa
sahf
inc
adc
fidivrs
sti
loop
mov
mov
dec
push
cmp
push
sahf
cli
jecxz
mov
xor
push
adc
ss
xchg
pushf
jecxz
mov
add
xor
adc
call
notl
mov
inc
or
fsub
jno
dec
mov
jg
addl
imul
ficompl
dec
push
fstps
mov
insb
or
or
ret
shlb
mov
jl
or
shll
xchg
sahf
rcll
mov
dec
mov
movsl
push
sub
jle
fs
xor
daa
mov
cmc
into
popf
movsl
sub
cmp
mov
jns
es
leave
xorb
ret
and
pop
pop
mov
sbb
pop
xlat
rcll
stos
pop
daa
dec
push
dec
push
or
jle
aad
mov
adc
sbb
jmp
jl
in
dec
xor
sbb
aad
iret
adc
sub
xor
add
std
adc
in
loopne
and
adc
dec
lock
pop
repnz
fs
imul
jne
inc
or
pushf
sahf
int3
movsl
lcall
insb
jnp
xlat
in
cld
rolb
dec
in
jnp
dec
xlat
cli
cmc
or
lret
cmp
push
jb
jns
stos
test
stos
icebp
ja
sbb
push
xchg
push
and
stos
inc
sbb
mov
push
jno
add
dec
mov
or
hlt
lahf
fldcw
imul
push
add
mov
inc
dec
xchg
dec
jecxz
ficompl
insl
inc
popa
mov
fxch
pop
sbb
cmp
ffree
or
sbb
jbe
mov
stos
fisttpll
jb
ret
sub
add
inc
not
sarl
jp
insb
nop
sub
mov
imul
mov
cmc
out
push
arpl
data16
xor
out
outsl
call
or
aaa
out
fdivp
pushf
jnp
adc
xor
movsb
out
les
loopne
cmp
jmp
mov
scas
mov
pushl
lcall
ret
jbe
or
js
cmp
out
bound
mov
push
pusha
aad
or
adc
lds
fbstp
stos
cwtl
lret
loop
fmull
inc
int3
dec
fs
fisttps
inc
arpl
roll
xlat
dec
mov
jae
ficomps
jmp
xchg
and
push
mov
adc
es
stc
iret
ret
and
cmp
into
call
inc
fnsave
loopne
xchg
mov
sub
mov
ljmp
add
scas
mov
or
stc
jg
scas
push
pop
pop
shll
mov
shll
and
push
out
mov
lods
bound
fnsave
cmp
fwait
icebp
repz
out
enter
adc
imul
imul
pop
js
mov
js
adc
sar
mov
push
daa
fnstsw
sbb
or
pop
adcl
pushf
or
lahf
loopne
popf
pop
adc
aaa
les
fisubl
sub
xor
outsl
cs
adc
mov
mov
xchg
dec
jno
lods
test
jp
fcomp
xor
pop
xorl
fxch
or
popf
dec
jmp
xorl
or
sub
sub
and
rcrb
or
and
lret
adc
js
or
arpl
xchg
dec
xchg
push
stos
sbb
cmp
sbb
mov
xchg
jl
jns
pop
cmp
cmpsb
fcoml
mov
scas
dec
dec
adc
xchg
sub
movsb
jmp
pop
mov
xorl
roll
lahf
mov
mov
adc
dec
and
push
mov
movsl
repnz
pop
cmp
in
cwtl
mov
lods
add
mov
int3
shr
xor
lret
pop
ja
cs
push
mov
mov
cmp
mov
jne
clc
xor
mov
mov
clc
icebp
les
xor
xchg
imul
rclb
pop
mov
lcall
sarl
div
cli
les
mov
dec
aad
inc
adcb
scas
sbb
cmp
das
fildll
lods
std
ror
mov
in
les
xor
scas
mov
repnz
scas
js
out
rcll
es
arpl
gs
xchg
incl
sbbb
cmp
aas
imul
pop
xchg
lods
adc
cmp
or
mov
mov
sbb
nop
sub
jo
xor
push
pop
jo
arpl
xor
lcall
or
cs
daa
push
xchg
mov
popa
push
inc
pop
pusha
push
and
in
inc
mov
std
mov
or
pop
push
scas
aam
or
mov
xor
xlat
sub
cmpsb
das
ror
test
pop
lea
lods
mov
int
push
ret
dec
js
aas
int3
testl
lret
mov
outsb
jl
lahf
inc
xor
in
rcrb
rcl
out
mov
mov
mov
sub
push
fistps
movsl
mov
mov
push
ret
push
or
arpl
outsb
and
cmp
out
ret
pop
dec
lds
xchg
stos
xor
mov
pusha
sub
xchg
mov
sarl
stos
imul
in
inc
outsb
cmp
mov
mov
fs
inc
hlt
pop
aam
cmp
fisubrs
sub
lods
hlt
sti
rcrb
pop
cmpsl
clc
or
jbe
nop
les
inc
xor
or
or
xlat
mov
rclb
inc
mov
out
fcmove
jg
movsb
cli
test
mov
add
cmp
or
lret
test
repz
xchg
or
lret
ja
lcall
or
lcall
jmp
jle
lods
pusha
ljmp
inc
push
pop
inc
fcmovbe
jecxz
loope
jg
insl
xor
shll
call
mov
scas
pop
inc
repz
pop
mov
aaa
jno
mov
pop
daa
cmc
sti
aam
dec
xor
cmp
mov
cli
es
xchg
das
jns
pop
xchg
mov
pop
test
sub
jne
xor
cltd
dec
loop
das
adc
and
lds
into
scas
adc
fnstsw
aam
fidivs
daa
add
mov
aas
mov
cmpsl
std
popl
in
cmp
in
and
or
pop
and
leave
dec
int3
jnp
push
xchg
imul
inc
pushl
xor
in
in
daa
or
sbb
js
xor
and
sahf
pop
pop
jno
mov
xlat
push
into
movsb
add
int
push
dec
ds
bound
in
out
loopne
test
shr
insl
mov
push
xor
movsb
jo
fistpll
xor
into
pop
push
mov
adcl
pop
adc
xchg
sarb
mov
sub
ja
xchg
out
out
mov
inc
xor
push
dec
lds
frstpm(287
or
push
jnp
int
sti
mov
and
rcl
mov
xor
pusha
ret
dec
nop
push
mov
sub
sub
and
into
xor
mov
or
hlt
scas
xor
les
rorb
loope
repnz
inc
mov
outsl
into
mov
mov
jp
lret
es
les
mov
pop
into
push
push
cs
mov
loopne
rol
xor
cmp
adc
iret
push
pop
test
lods
hlt
fcmovnu
inc
lea
adc
std
dec
adc
testl
lock
mov
fidivl
loope
mov
cmc
aad
pop
lock
inc
sub
cmpsl
jle
push
nop
mov
iret
imul
stc
adc
lea
rol
insl
sub
dec
test
popf
xor
mov
test
pop
divl
fcoms
xorl
scas
sub
stc
pop
dec
frstor
xchg
jae
sub
lret
cli
pop
and
loopne
mov
icebp
clc
fsts
cmp
cmp
fnstenv
insb
push
shll
andl
ds
js
pushf
int3
clc
cld
bound
fsubrl
mov
vrcpss
xor
hlt
subb
in
mov
out
xchg
ss
movsl
adc
stos
cmp
cltd
cmp
and
xor
int
aad
in
dec
testb
mov
and
aad
mov
xor
lret
rcll
in
stos
mov
stos
and
push
adc
add
stos
pop
pop
xlat
in
sub
test
scas
sbb
xchg
sbb
push
xchg
jbe
mov
pop
insb
or
cli
imul
mov
sbb
lods
je
push
cmpsb
icebp
je
stos
push
add
mov
sub
xchg
mov
inc
out
lcall
xchg
jmp
int3
js
jb
cmp
outsl
test
faddl
cmpsl
lods
dec
mulb
xsha1
cmpsb
push
imul
sahf
jbe
in
fmuls
sub
cmp
lcall
fs
lods
xor
xchg
sbb
popa
loope
faddl
and
add
stos
and
pop
lea
roll
fidivrl
sahf
cwtl
and
mov
cmp
lea
mov
rolb
cmc
movsl
add
mov
pop
movsb
scas
fsubr
shrl
xchg
pop
mov
dec
mov
push
mov
pop
shl
xchg
jnp
cmpsl
lods
aaa
mov
cmp
or
push
xor
lods
jge
push
ficomps
adc
xor
adc
out
negb
imul
hlt
les
fadd
aad
push
jmp
xor
lods
into
mov
cmp
movsl
stc
loop
or
ja
mov
or
pop
repz
imul
add
mov
scas
lods
in
mov
jmp
cmp
mov
aam
xchg
or
sub
lods
dec
imul
cmp
subb
push
or
int3
dec
sub
pop
mov
imul
mov
lea
out
jge
and
mov
sbb
not
test
push
or
ds
jo
loope
std
cltd
adc
sub
or
jmp
out
inc
inc
int
pop
repnz
jb
rol
mov
or
sbb
or
xor
insb
dec
push
out
mov
test
jnp
sar
sti
adc
jo
fnsave
cs
int3
xorb
sbb
in
sub
mov
sub
hlt
mov
clc
sbb
cltd
sub
push
aam
cld
cmp
aad
stos
pushf
xor
pop
sbb
pop
into
add
and
jmp
adc
leave
sbb
inc
hlt
and
test
pusha
push
sar
push
mov
mov
xlat
push
xchg
cmp
cmc
push
fwait
sub
andb
dec
ds
fldenv
pop
dec
cmp
mov
hlt
cld
aas
jns
rorb
add
or
into
popf
push
sbb
mov
and
cmp
mov
sbb
cmpsl
sub
lods
in
nop
jae
icebp
adc
cld
testl
repz
sti
hlt
jno
sub
cltd
daa
add
and
push
imul
jle
mov
xchg
imull
sbb
push
loop
stos
mov
push
dec
in
lret
mov
cmp
dec
sbb
pop
dec
movsl
in
adcl
iret
jl
imul
or
pop
sbb
pop
mov
mov
shl
dec
jno
pop
mov
neg
rcll
jecxz
mov
loope
xchg
lds
loopne
iret
xchg
popa
mov
mov
xor
pop
in
bound
adc
andl
insb
bound
loopne
aas
rcll
or
popa
sbb
sbb
mov
sbbl
dec
pop
jg
ja
jno
in
stos
sbb
xchg
cs
js
ficompl
dec
fsubrs
mov
mov
dec
or
jae
mov
pop
xchg
inc
imul
mov
out
shl
mov
adc
out
iret
inc
sub
mov
mov
jle
add
movsl
or
into
xor
movsb
aas
sbb
rorl
imul
cmp
pop
arpl
imul
aaa
inc
mov
cmp
frstor
xlat
fidivrs
mov
inc
adc
xchg
ret
nop
sub
sbbl
adc
popf
push
push
mov
std
lret
mov
jge
scas
bound
into
hlt
mov
dec
xchg
pop
xchg
push
sub
leave
push
std
dec
fcompl
xchg
inc
arpl
rol
out
aad
pushl
pop
ljmp
cmp
sbb
mov
push
jecxz
cmp
or
pop
xor
lods
aaa
xchg
popa
push
fsubrs
sti
mov
out
sub
cmpsl
pop
jo
test
jo
inc
inc
pushf
mov
scas
jne
out
inc
insl
or
jmp
test
aad
cmc
mov
jp
and
xchg
call
or
nop
test
scas
repz
jnp
cmpsb
xor
in
or
dec
mov
stos
mov
les
mov
adc
jae
cmpsl
movsl
je
mov
inc
hlt
les
filds
add
jns
cwtl
leave
xchg
mov
add
pop
add
imul
pusha
xor
xchg
test
add
xchg
pusha
in
and
cmp
sahf
ja
test
fimull
pop
repnz
cltd
rcrl
pop
lods
scas
jae
inc
sub
andl
mov
sbb
daa
fs
xchg
sub
dec
mov
xchg
jmp
cmp
repnz
xchg
mov
and
mov
lcall
cmpsl
arpl
out
inc
lods
nop
test
fidivl
aaa
dec
dec
inc
in
incl
nop
sub
mov
imul
icebp
cmp
push
aam
mov
jg
bound
fdivrl
xchg
xchg
cmpsb
inc
inc
mov
lea
cwtl
pop
dec
xchg
scas
sbb
aam
xchg
mov
mov
and
fbstp
icebp
jbe
adc
pop
push
mov
adc
and
xchg
mov
dec
ret
lahf
pop
mov
fnstcw
cld
sarb
add
or
push
in
sbb
out
int
mov
inc
leave
loop
outsb
xchg
mov
popfw
mov
int3
inc
and
aam
sub
or
mov
loopne
rclb
and
js
jl
mov
push
movl
push
dec
std
push
xchg
sbb
sub
clc
lds
xchg
jle
fcoml
mov
sub
sbb
adc
add
mov
leave
and
jmp
cmp
repz
aaa
pop
mov
mov
pop
mov
divl
pop
ss
pop
enter
mov
dec
cmpsl
push
xsave
push
push
mov
sbb
inc
push
mov
pop
inc
sbb
repz
pop
cmpb
jo
mov
mov
andb
cld
or
cwtl
and
cmpsb
in
dec
leave
fwait
jbe
lcall
fists
and
repnz
cmp
cmp
or
int3
push
inc
mov
mov
lea
jle
mov
or
mov
cltd
or
and
xchg
mov
negl
cmp
adcb
push
adc
aaa
lods
shlb
inc
push
rorb
mov
xor
daa
mov
jmp
repnz
xchg
lock
int
nop
arpl
jge
dec
jl
aas
sub
lea
sub
pop
sub
mov
and
orl
push
rorb
push
add
das
fiaddl
fs
jae
jae
sbb
push
in
lcall
sub
mov
mov
lret
adc
sub
pop
sahf
push
push
lods
mov
jnp
cmp
aaa
repnz
pop
sbb
or
les
inc
and
out
add
mov
pop
ficoms
enter
pop
mov
or
pop
jo
lds
pop
subl
into
push
lods
mov
mov
pusha
int3
insb
inc
push
leave
testl
dec
das
repz
lea
test
ljmp
sub
in
pop
sub
enter
out
sbb
xor
out
rcrl
loop
inc
and
cmpb
jbe
fstpt
gs
mov
push
jg
pop
popa
aas
mov
push
push
daa
ja
inc
loope,pt
sub
lret
mov
push
movsl
addr16
xchg
mov
add
aas
jnp
movsb
or
cmpl
cltd
int3
movl
les
mov
and
sbb
pop
sti
mov
mov
les
jmp
sti
int
adc
cmp
push
fimull
adc
dec
aaa
ljmp
lahf
push
push
repnz
jb
sar
push
dec
pop
sub
mov
hlt
push
push
stos
fdivl
in
mov
dec
fldt
fadds
out
shlb
or
inc
dec
push
push
pop
pop
test
test
adc
lret
push
jmp
fs
dec
sti
mov
mov
sbb
fcmovbe
stc
in
lahf
repz
cmp
cltd
icebp
out
cld
cmp
in
js
leave
movsb
cli
gs
ljmp
stc
mov
xchg
stos
aad
icebp
into
xor
sbbb
ja
je
test
xchg
mov
adc
jmp
inc
test
push
daa
jge
insl
push
pushf
mov
ss
pop
or
adc
lahf
addr16
and
pusha
jnp
imul
repz
repnz
ss
mov
cmp
int3
scas
sbb
lods
cmp
addr16
pop
ret
insl
sbb
scas
xlat
adc
jnp
jno
ret
fsubp
cwtl
mov
mov
sub
xor
pop
xchg
adc
add
pop
jns
pusha
jne
ljmp
sub
fwait
divl
ja
push
les
xchg
jbe
out
sub
xchg
ja
cmc
insl
mov
movsb
sbb
shr
enter
cmp
into
push
and
xchg
lret
loop
negl
jbe
fwait
jmp
jmp
mov
mov
cli
arpl
jo
lret
sbb
dec
or
add
int3
jge
xchg
xchg
test
push
xor
push
cltd
jae
sti
stc
push
ret
and
cmpsl
xchg
leave
lret
mov
dec
aas
inc
xchg
dec
mov
imul
fisubs
and
stos
int
cmp
lahf
addr16
mov
fs
scas
lahf
xor
pusha
cmp
imul
mov
icebp
ficomps
jnp
outsl
js
mov
xor
in
test
lds
or
aas
arpl
leave
inc
scas
and
add
adc
push
loope
dec
out
popa
xchg
push
fdiv
sbb
dec
jge
jbe
mov
sbb
mov
pop
adc
lods
mov
arpl
pop
inc
jle
iret
pop
sbb
je
xlat
jp
and
or
or
and
pop
push
test
enter
test
fstl
dec
inc
pushf
adc
daa
adc
mov
push
call
inc
push
sub
jnp
push
test
lret
inc
cwtl
lods
xor
mov
or
lret
andl
js
add
jbe
mov
lock
xor
and
lods
sbb
push
push
loop
aaa
out
cmp
xor
fcomps
or
pop
or
inc
xchg
call
mov
mov
enter
jp
insb
mov
jmp
mov
lret
cmpsb
adc
adc
mov
mov
add
mov
fbld
sbb
push
mov
or
in
andl
jmp
pop
pusha
leave
sahf
or
nop
adc
cmpsl
inc
cmpsb
jecxz
into
pushf
xchg
xorb
das
cmpsb
in
push
cmpsb
ja
push
icebp
push
cmpsb
movsl
imul
dec
es
sub
sub
mov
in
mov
or
or
sub
mov
pop
push
repz
cmpsb
pop
cmpsl
test
mov
mov
lahf
mov
inc
mov
add
adcb
pop
lcall
xor
rcll
or
iret
mov
jno
int3
mov
push
rclb
inc
out
jo
mov
mov
fsubl
mov
jecxz
stos
adc
orl
jge
pop
push
in
dec
lods
jp
addr16
pop
lret
out
scas
sbb
arpl
popa
gs
push
sarb
push
sbbl
loopne
js
push
and
push
js
mov
nop
adc
fwait
xchg
sub
mov
jecxz,pt
jne
mov
inc
push
js
cld
iret
ret
popf
pop
test
xchg
inc
les
cmc
cmpsl
cmp
je
pop
repz
jns
sub
mov
pop
outsb
mov
jle
pop
sbb
sarl
xchg
ljmp
mov
popf
cmpsl
int3
adc
stos
pop
pop
out
movsb
xchg
popa
pop
das
pop
out
insl
cwtl
jo
fs
subb
mov
cmp
or
orl
or
xor
repnz
lods
mov
popa
inc
mov
mov
andl
sub
sub
xor
testl
or
ret
jmp
sbb
inc
pop
inc
adc
and
add
cmc
cmp
add
les
loope
adc
pop
inc
repz
and
clc
push
test
pop
stos
std
jb
xor
inc
sub
dec
add
ret
fildll
xchg
mov
das
test
xor
inc
test
outsb
in
xchg
mov
shlb
mov
addr16
adc
in
jp
push
testl
xchg
addr16
sub
popf
jmp
adc
jo
mov
or
cwtd
jae
ret
inc
orb
adc
sub
test
mov
daa
stos
mov
mov
js
mov
loope
adcl
and
adc
xorl
test
cwtl
push
aas
mov
cmp
ret
add
cld
dec
lock
int3
lret
xor
ret
mov
mov
adc
jg
pop
outsb
inc
ret
adc
inc
jnp
push
jne
sti
lea
push
sti
pop
mov
pusha
addr16
lods
xchg
orb
pop
mov
push
stos
add
std
jmp
loope
dec
mov
clc
push
das
mov
in
lods
jae
dec
das
mov
repnz
shll
and
add
jmp
leave
sub
sahf
xchg
or
xor
popa
cmpsl
pop
xchg
pop
cmp
add
sub
xchg
add
pop
cmp
shll
mov
or
lds
popa
inc
lods
aaa
push
adc
aam
sub
inc
jae
stos
lcall
jae
dec
jns
xor
rcrl
scas
cmpsb
or
mov
nop
je
push
fucompp
xor
and
bound
faddl
shrb
xor
incb
add
mov
cld
add
aaa
call
out
adcl
inc
lret
stos
pop
adc
sbbl
cmp
jb
jle
stos
lret
adc
pop
popa
hlt
scas
subl
and
loope
mov
stos
in
inc
aad
into
enter
lahf
or
dec
mov
mov
movsl
das
loopne
jmp
cmp
xchg
inc
add
jns
push
jmp
mov
pop
cmp
jae
roll
sub
sti
aad
xor
adc
cmp
add
pop
movsl
mov
push
rcl
scas
loopne
data16
pop
movsl
pop
call
clc
aas
push
sbb
movsb
dec
pop
xchg
cmp
popa
jmp
or
adc
enter
or
dec
lea
fdivp
adc
sahf
jmp
adc
shl
push
repz
aam
push
push
es
dec
gs
push
loop
scas
cmpsb
mov
mov
icebp
out
pop
insl
popa
cmpb
cli
mov
push
arpl
das
adc
pusha
sar
lods
icebp
and
andb
rclb
jns
fnstenv
nop
out
add
sub
xor
int3
cmc
fwait
cmp
cs
dec
jae
mov
adc
pop
int
jp
addr16
aas
jo
aas
jbe
lds
out
int
test
cli
test
js
adc
shr
aas
cmp
int3
stos
lods
mov
pop
push
cmp
jmp
push
insb
andb
arpl
test
cmp
push
mov
sub
les
and
leave
pop
mov
fwait
mov
ss
mov
push
pop
ret
and
push
xchg
test
fistps
lea
xchg
xchg
xor
pushw
outsl
aam
ljmp
mov
notl
lcall
push
insb
je
data16
mov
orb
mov
orl
lcall
outsl
sbb
sub
xlat
nop
mulb
mov
pusha
lret
jp
and
scas
push
jno
cmp
sahf
xchg
out
pop
sub
lcall
xchg
lods
mov
pop
jle
insb
cmpsl
xor
cmp
jns
mov
sti
adc
and
sub
icebp
xor
sar
jno
out
jg
push
lea
es
lods
shll
jbe
jb
and
xor
aaa
xchg
pop
mov
mov
xor
cmp
aas
sbb
pop
mov
ficoml
mov
test
sbb
cld
fidivl
jbe
cmp
pop
test
dec
es
stc
scas
jle
ret
jne
pop
push
push
fisttpl
popf
mov
inc
sti
jl
int3
movsl
testb
push
sub
jmp
xchg
push
aas
or
jne
outsl
out
jns
cmp
xor
mov
cmpsl
jle
imul
movsl
jp
dec
out
pushf
xor
stos
or
insb
push
xchg
sub
xchg
and
notb
faddl
adc
cmp
scas
and
push
test
and
fistpl
movsb
and
sub
cwtl
inc
shl
gs
mov
and
mov
mov
or
dec
fs
push
jle
mov
divb
inc
ljmp
mov
add
and
aaa
push
mov
ret
xor
add
std
add
popf
idivl
pop
inc
lahf
mov
push
in
loop
mov
loopne
daa
ss
pop
cmp
ror
call
inc
hlt
or
pop
leave
into
lods
mov
divb
cld
mov
xor
or
cli
jl
add
mov
bound
es
dec
xchg
dec
fidivs
push
outsl
es
scas
pop
push
out
stos
mov
mov
test
ficoms
inc
xchg
inc
xchg
add
pop
loop
mov
jmp
jbe
sub
int3
xor
xor
sahf
xor
aam
push
imull
mov
cmp
aad
pop
jb
sbb
test
jl
push
pusha
add
int3
shll
stc
sbb
push
cmpsb
addr16
push
inc
mov
dec
jbe
push
movsb
or
int3
mov
dec
dec
lahf
les
push
fidivrs
xor
mov
jg
insb
fmul
daa
or
cmp
cmp
mov
out
pop
lea
cmp
cmp
cmp
fcmovnb
je
insl
adc
in
das
imull
aas
repnz
dec
popf
xlat
ror
scas
jg
outsb
and
push
jle
out
aaa
pop
mov
adc
and
mov
lahf
adc
or
pop
testl
ret
out
cmp
cmp
pushf
or
lret
out
cli
or
push
or
sbb
orb
mov
mov
mov
lahf
jmp
xchg
daa
xchg
enter
pop
mov
cmpsb
cli
sahf
stos
sub
adc
mov
mov
repnz
loope
rol
and
bound
sbb
in
in
pop
jae
jmp
stos
lret
xchg
dec
dec
ror
js
scas
scas
inc
hlt
jge
out
pusha
mov
icebp
xor
cmp
mov
mov
test
repz
loope
mov
fwait
testb
or
inc
dec
movsl
sbb
jae
jno
rol
or
inc
int3
sub
inc
lods
mov
mov
push
jno
xor
frstor
orb
cwtl
lcall
inc
pop
icebp
int
into
jl
and
fadds
jae
xchg
inc
fwait
jge
lret
mov
in
and
xchg
push
xchg
fwait
js
jmp
mov
dec
pop
mov
es
mov
jb
cmp
sub
aas
sbb
sbb
lods
xchg
cmp
push
lret
jbe
and
pop
jnp
ja
inc
fwait
insl
xlat
ret
aam
jl
mov
xchg
lds
imul
lods
lods
fs
lods
aad
loop
add
mov
inc
pop
aaa
xchg
stos
call
and
das
insb
sbb
inc
sbb
aaa
jl
mov
test
mov
push
and
sub
lahf
sbb
enter
mov
int3
out
xchg
aam
mov
sbb
or
es
ffreep
sub
cmpsl
cmpsb
xor
pop
aam
test
mov
sub
out
mov
sbb
push
lahf
ja
aad
cmp
sub
std
xor
bnd
pop
in
jge
adc
in
jno
cmp
jl
or
add
ds
ret
scas
push
mov
gs
jo
mov
insl
test
add
lret
jmp
lock
xlat
movb
in
out
xchg
and
xchg
jo
daa
xchg
outsb
adc
mov
cmp
in
adc
xchg
repz
mov
enter
popa
mov
pusha
mov
cmp
inc
les
xchg
lods
sbb
xor
aam
xor
hlt
xchg
cmpsl
sub
and
sub
outsb
rcr
sbb
push
mov
stos
mov
jae
cld
and
xchg
mov
jp
arpl
push
movsl
test
dec
aad
outsb
mull
dec
popa
insb
mov
xor
call
xor
cmp
jmp
dec
cmpsl
or
mov
aaa
loop
scas
adc
icebp
pop
aad
shlb
fisubs
mov
dec
mov
inc
bound
aas
push
dec
adc
jae
inc
scas
leave
icebp
or
or
in
sbb
fmuls
push
mov
and
cmp
scas
sarb
popf
loope
jno
movsl
lret
ja
adcb
leave
lahf
inc
push
imul
push
out
hlt
inc
mov
mov
data16
out
nop
les
lods
testl
andl
jbe
jmp
push
mov
negl
sbb
jae
cmp
mov
mov
rcrb
sub
xchg
into
outsb
add
or
iret
cmp
arpl
mov
dec
and
push
rcrl
mov
mov
outsb
nop
int
mov
mov
sub
sbb
pop
dec
scas
and
sbb
or
push
xchg
and
mov
test
add
loopne
cmp
imul
sub
insb
fcmovne
mov
mov
fiaddl
imul
mov
aam
cli
sbbl
adcl
mov
mov
shlb
test
int
jno
loopne
add
in
pop
sub
cmp
mov
mov
push
enter
imul
xor
rcrb
addr16
dec
fs
lods
hlt
cwtl
push
mov
adc
mov
std
jo
call
push
xor
test
sub
gs
popa
cmp
mov
nop
add
xchg
test
sub
es
push
pushl
xchg
stos
jmp
pop
mov
loop
fimuls
test
cld
ljmp
enter
pop
dec
lock
lret
pop
or
int3
pop
cs
dec
scas
cmpsl
mov
movsl
imul
pop
ret
push
and
mov
dec
xor
stos
scas
cltd
loope
into
or
jmp
jg
dec
iret
insb
dec
popa
jg
int
lahf
sbb
lahf
fcomps
pop
push
pop
mov
int
jg
dec
insb
dec
mov
inc
mov
push
fs
lret
mov
push
flds
movsl
xchg
sbb
sbb
aas
xor
out
stos
xchg
adc
add
ljmp
sub
nop
and
fidivs
sub
push
fs
mov
insb
notb
cli
pop
and
inc
popf
cmp
push
data16
ret
and
mov
pusha
cmp
fs
jmp
xchg
ja
into
cwtl
push
scas
jo
lea
ficoms
imul
cld
leave
and
xor
mov
inc
push
cld
xlat
jle
lcall
cld
xor
sti
inc
xor
lods
in
inc
push
inc
adc
lock
xchg
adc
call
fists
adc
repnz
mov
test
push
mov
mov
vrsqrtss
adc
or
push
stc
and
ljmp
pop
popf
fdivr
adc
ljmp
xchg
cmp
fmuls
fildl
mov
mov
push
xchg
mov
dec
adc
clc
rdpmc
shll
pop
push
xchg
rclb
cmc
mov
enter
xchg
mov
push
insb
jmp
adc
insl
pop
sub
mov
ds
bound
inc
inc
mov
subb
sub
cwtl
scas
daa
or
cmp
icebp
lock
adc
push
sbb
fwait
stos
inc
mov
fidivrs
add
xor
xchg
jbe
sar
nop
imul
mov
jmp
insl
jne
das
divb
fnstsw
mov
ja
sbb
pop
mov
test
in
and
shld
sub
sbb
push
push
outsb
adc
xchg
xor
adc
out
mov
and
mov
xlat
adc
imul
and
pop
xchg
test
xchg
pusha
nop
lea
push
cmp
adc
adc
xor
cmc
push
subb
sbb
test
lods
xchg
test
inc
or
add
cmp
adc
inc
dec
push
mov
ret
or
xchg
add
popf
and
rcll
cmc
add
lret
mov
or
cmp
or
sbb
add
mulps
xchg
mov
shlb
out
stos
stc
sarl
push
shll
mov
movsl
imul
fst
or
pop
mov
outsl
pushf
fisubs
inc
xchg
pop
scas
cmp
fbstp
mov
and
cmpl
push
push
jg,pt
xchg
jbe
int
push
push
repz
push
mov
loope
mov
movsb
rorl
jns
lock
inc
in
lds
subb
xchg
jmp
inc
push
enter
jno
or
jp
mov
add
and
mov
jns
adc
out
jno
int
ficomps
push
lods
adc
mov
std
push
add
out
cld
arpl
decb
cmp
aas
shlb
lea
or
adc
out
call
mov
add
cmp
lcall
shll
out
push
cmp
ret
out
out
and
ficoms
jl
ja
shll
das
add
mov
mov
cmpsl
xchg
or
sti
xor
ficoml
ret
adc
ds
stos
mov
in
mov
dec
stc
push
inc
xor
into
mov
mov
jno
xchg
cmc
xchg
push
fxch
sub
mov
jnp
push
mov
lahf
add
shrl
imul
xchg
pop
repz
fstpt
or
xor
and
inc
sub
xor
jl
cld
and
pushf
jmp
xorl
lcall
jo
mov
xchg
jg
cmp
xor
repz
lds
inc
test
or
imul
idivl
aam
and
cmp
mov
xor
shll
movsb
jb
in
mov
outsw
ficoms
lret
and
stos
js
lods
shlb
or
scas
sub
push
xchg
sub
cld
repz
andl
dec
sub
mov
popa
in
int
std
repz
daa
jno
pushf
sbb
jnp
cwtl
add
lret
clc
je,pn
lock
xor
cmp
xchg
aaa
shll
push
ljmp
cmp
pop
js
cld
js
ret
enter
mov
add
and
rol
aad
dec
lcall
cmp
fistps
pop
xchg
xor
inc
cs
push
jbe
mov
adc
in
cmpsl
nop
jge
sbb
lahf
push
adc
mov
jo
les
adc
bound
inc
pop
cmp
push
lea
scas
fcmovnu
pop
hlt
pusha
dec
jge
in
pop
out
fsubl
ljmp
shll
pop
fldcw
test
pushf
adc
repz
jb
nop
aaa
movl
mov
cmp
add
jl
mov
push
js
in
add
stos
test
dec
int3
cmc
add
push
pop
cmpsb
cmpsb
jge
xchg
cwtl
or
jns
inc
pop
push
pop
dec
pop
insb
cmp
inc
push
or
xlat
out
push
push
xchg
pop
jp
push
sahf
push
sti
push
data16
cmc
js
mov
xchg
adc
jmp
imul
dec
or
mov
xchg
out
jae
mov
adc
xchg
pop
jne
fimuls
jo
sbb
xor
fldl
sbb
fistpl
cwtl
mov
add
rcll
test
cmpsb
push
mov
repz
mov
or
fs
cmpsl
scas
xor
add
aam
popa
negb
sar
pushf
fsts
out
mov
jo
ret
shll
inc
ja
adcl
fldl
shlb
cwtl
mov
lcall
fs
or
cmp
adc
push
dec
mov
mov
dec
inc
adc
lahf
jge
xchg
imul
shrb
push
sbb
push
cmp
dec
push
jnp
dec
dec
addr16
ret
xchg
xchg
push
shl
jae
pusha
in
xor
inc
mov
mov
sbb
cld
shll
loop
and
daa
sbb
sub
jl
or
mov
test
inc
xor
or
in
mov
ret
arpl
stc
push
mov
inc
mov
mov
sub
inc
jne
inc
ja
negl
ja
mov
push
mov
loop
or
mov
outsb
sti
outsl
push
testl
xchg
add
fiaddl
mov
daa
xlat
lcall
jo
push
sarl
push
les
js
jmp
mov
mov
enter
sbb
cmp
xor
push
icebp
sub
mov
dec
push
icebp
mov
mov
in
iret
stos
push
mov
jne
inc
inc
mov
dec
ss
lds
ljmp
sub
push
xorl
cmp
and
jp
xor
xchg
pop
sbb
mov
dec
cli
aad
imul
imul
shlb
out
mov
stc
pop
insb
jmp
out
mov
and
xchg
mov
cmp
push
jnp
add
pop
jg
and
stos
pop
mov
ret
sub
rcrl
sub
bound
cmp
js
sub
add
mov
mov
xchg
push
and
aam
ret
xchg
mov
mov
int
push
and
call
push
and
sbb
and
rcl
popa
int3
pop
nop
mov
add
mov
lods
xchg
xchg
jle
enter
lcall
test
out
sub
movsb
push
outsl
and
aas
cmpl
xor
push
arpl
sub
outsb
idiv
jmp
mov
pop
gs
add
test
lds
in
idivb
pop
xor
jo
ficoms
cmp
push
inc
repz
addr16
call
jl
scas
and
xchg
in
mov
and
sub
cs
mov
xchg
int
xchg
mov
mov
dec
and
inc
cmpsl
popa
ljmp
or
jo
xchg
test
mov
aas
push
hlt
pop
bound
dec
sub
cmp
je
loope
mov
mov
das
fcom
adc
pop
mov
cli
and
in
aas
in
cmp
mov
daa
icebp
aas
jge
inc
xchg
std
data16
gs
jb
aaa
xor
cmp
push
adc
mov
call
and
jp,pt
test
fs
cli
shrl
xchg
push
fsubrl
and
mov
pop
pop
sbb
xchg
cmc
sbb
mov
cmp
dec
ljmp
dec
fsubrs
jns
idivl
cmc
and
push
in
jge
jle
mov
lock
jmp
in
mov
fdivrs
push
pop
sub
test
pop
mov
bound
mov
movsb
inc
and
push
js
mov
jecxz
adc
dec
lods
or
mov
test
pop
shr
mov
cmpsb
pusha
bound
mov
jmp
sarb
dec
addr16
mov
pop
pop
dec
push
iret
ja
mov
sbbb
add
enter
or
dec
mov
xor
lock
push
inc
fdivl
iret
push
ficoml
inc
in
lock
and
fbld
add
sub
outsb
icebp
xchg
in
dec
test
call
fcomip
addr16
jbe
out
lahf
insl
negl
cmp
nop
in
or
aaa
outsb
lods
sbb
jb
cmpsl
cmp
push
imul
movsl
jg
pop
mov
flds
inc
sub
fstps
inc
cmp
and
std
pop
iret
xor
xchg
or
push
pop
and
cmpsb
adc
adc
mov
lea
push
lods
inc
sahf
sub
xor
in
xor
shrb
inc
mov
or
mov
sub
sub
xchg
ret
lcall
out
inc
sbb
loop
dec
out
repnz
mov
sbb
dec
jbe
mov
or
push
cmp
sarl
add
sahf
or
ja
ja
notb
cmp
sbb
xchg
xor
lret
incl
in
insl
cmc
pop
dec
push
push
fs
fmulp
movsb
pop
sub
test
or
sbb
sbb
xor
or
enter
and
ja
mov
pop
ds
xchg
outsl
jecxz
sbb
pop
lock
fisttps
movsl
movsb
dec
or
sbb
jp
jno
test
test
bound
sub
aaa
mov
das
pop
movsl
mov
cltd
testl
mov
imul
mov
and
data16
dec
pop
jb
and
insb
lcall
push
cli
ja
outsl
cmp
xchg
add
xor
sbb
pop
ret
sbbl
repz
sbb
or
fucomi
adc
aaa
lahf
cmp
or
xchg
in
or
xchg
push
leave
cmp
or
imul
and
push
sub
cld
and
mov
jecxz
push
add
add
pop
jbe
test
push
cmpsl
out
cwtl
shlb
sub
ss
push
xchg
sbb
push
leave
ljmp
nop
pop
jge
push
sub
lcall
jg
and
mov
mov
stos
and
in
push
xlat
ds
jl
or
mov
or
pop
pop
rorb
pop
sbb
add
lret
push
in
cwtl
adc
das
popa
sahf
sbb
inc
jae
push
mov
xchg
jo
imul
xor
dec
and
cmpsl
mov
fcmovb
fs
xor
or
xor
lods
dec
adc
roll
and
cmpsb
stc
out
cs
mov
aas
adc
xor
decl
lods
cmp
jmp
sub
lods
movsb
pusha
mov
xor
mov
roll
mulb
das
push
filds
add
sbb
jg
sub
js
clc
mov
mov
xor
ret
cmp
sub
loop
and
mov
push
ds
ret
xor
xchg
pop
insb
sbb
mov
shrb
cmp
leave
mov
enter
std
add
int3
das
mov
jp
jle
and
mov
xor
clc
shrb
imul
sbb
call
inc
movsl
adc
mov
out
mov
cs
cmc
sahf
sub
mov
xchg
adc
sar
add
adc
dec
fs
add
stc
je
enter
fdivrl
daa
mov
pop
lcall
or
leave
or
add
xor
loop
shr
das
mov
xchg
mov
adc
inc
aas
mov
fmuls
or
gs
fwait
in
pop
and
jge
xchg
sbb
jle
or
jge
ja
xor
xchg
sub
data16
inc
adc
jg
insl
push
je
add
dec
dec
jmp
testl
neg
addr16
lret
jle
popf
ja
loope
inc
mov
int
in
pop
mov
in
iret
pop
mov
dec
icebp
das
je
mov
cmp
loopne
movsb
add
or
in
lods
xor
in
mov
sub
push
stc
sub
push
fs
mov
xlat
dec
fcompl
out
sahf
push
rolb
or
adc
cld
dec
clc
scas
add
pop
loop
push
push
dec
loop
rclb
mov
cmp
jbe
movsb
sarl
int3
xor
test
pop
mov
mov
mov
jg
or
jo
sub
xor
mov
push
push
sahf
adc
dec
rcll
out
inc
mov
push
add
pusha
aas
out
je
sub
adc
cmp
xchg
pop
cmc
pop
mov
sahf
sub
out
xor
out
jno
jmp
sub
and
xchg
pop
inc
push
pop
jno
mov
push
sbb
lahf
mov
mov
loopne
mov
lods
andb
imul
and
insl
and
dec
adc
or
sbb
adc
sbbb
adc
push
jmp
push
rorb
sbb
je
or
loopew
xchg
in
jbe
stc
jecxz
and
mov
dec
add
or
ljmp
scas
pop
xor
pop
in
lock
or
mov
xor
out
mov
jb
xchg
and
lock
popf
sarl
dec
add
rorb
sbb
fmul
sbb
je
cwtl
call
ljmp
jne
inc
xlat
push
cli
out
test
jge
insl
xor
inc
push
sub
add
imul
cmpsb
or
push
pop
movsb
outsb
mov
inc
jle
sbb
or
int3
xor
push
aaa
or
in
loope
pop
mov
sahf
push
cltd
jp
mov
adc
outsl
pop
mov
sub
bound
mov
xor
and
inc
mov
popa
cmp
das
mov
push
sbb
test
sarb
arpl
push
lock
ja
push
inc
lods
cld
jg
jge
test
push
sbb
and
adcl
call
xchg
jmp
sbb
mov
pop
les
in
inc
jg
sti
xor
addr16
or
and
mov
cmpsl
mov
inc
xchg
push
adc
jge
mov
into
mov
ds
ret
dec
aam
outsl
sti
out
push
jb
rolb
cmp
lods
ljmp
js
lods
mov
sub
dec
sahf
or
add
test
and
aam
pop
dec
dec
jmp
and
ror
inc
sti
dec
jl
pop
aad
and
pop
dec
cmp
pop
ljmp
xchg
and
mov
mov
dec
in
cli
shlb
int3
ljmp
pop
hlt
in
mov
fldt
add
jbe
xor
xchg
std
mov
cmpsl
sub
fistpll
xchg
repnz
daa
aam
mov
rcrl
xchg
sbb
sbb
pop
push
jnp
inc
adc
test
cmpsl
sub
jl
sbb
xor
mov
sbb
repnz
data16
pop
jno
ja
sahf
popa
rcrl
mov
movsb
xchg
jmp
push
jge
lock
push
cld
mov
fxch
mov
push
mov
cmp
mov
adc
jb
xor
ror
ja
pop
mov
fbld
and
xor
pop
cmc
dec
rclb
xchg
insl
loop
lock
xchg
cld
sub
jae
pop
or
mov
dec
xchg
cmpsl
push
add
jmp
lea
or
push
testb
lahf
xchg
mov
push
sbb
loop
mov
mov
decl
lea
xchg
movsl
mov
mov
pop
filds
pop
pop
subl
xchg
dec
inc
repz
data16
imul
popa
mov
pusha
nop
bound
pop
testl
imul
clc
dec
pop
dec
mov
leave
fadd
cmpsl
lret
out
cwtl
push
pop
mov
enter
lahf
mov
and
ret
rol
or
inc
dec
call
fists
xchg
fsubrs
jne
mov
xor
enter
sti
mov
cwtl
insb
sub
sub
clc
and
pop
imul
inc
pop
scas
pop
nop
push
lock
jno
inc
xchg
inc
xchg
gs
and
mov
scas
das
jns
sub
arpl
std
ja
rcl
xchg
jae
je
fldt
cmp
cmp
leave
movaps
cli
push
popf
ljmp
lcall
mov
pusha
ss
jl
icebp
jbe
pop
cmp
shlb
cmp
pop
sbb
insl
fs
adc
fisttpll
adc
xor
and
into
fsts
pop
cmpsl
fdivrp
out
cmp
jmp
add
cmp
inc
adc
sahf
and
fstl
push
lea
data16
repz
stc
outsl
insb
push
lock
fbld
in
paddq
int
jbe
inc
jno
stos
jno
sub
shr
mov
cmp
push
mov
bound
cmpsl
outsl
xchg
xchg
lods
add
add
int3
lea
lahf
je
test
mov
pop
cmpsl
negb
inc
xor
mov
fsubrs
cmp
loop
clc
jmp
loopne
imul
pop
jae
nop
inc
mov
cmp
lods
movl
sbb
lods
pslld
xchg
jbe
stos
add
ss
add
mov
cs
xchg
sub
int
cmp
cwtl
scas
nop
xor
dec
icebp
add
fmuls
inc
add
les
mov
fs
test
add
inc
pop
jns
mov
testl
rol
cmp
imul
mov
arpl
mov
inc
cwtl
gs
sahf
sub
and
sbb
sub
add
orb
jge
in
and
jo
out
repz
sbb
add
xor
repnz
xor
daa
adc
and
xor
mov
les
call
jmp
push
out
pop
and
jnp
or
mov
jle
dec
shll
pop
aas
dec
out
push
mov
fistpll
lcall
jmp
or
mov
mov
mov
lea
sub
push
and
pushf
testl
nop
and
mov
mov
cmc
lret
push
push
mov
sete
clc
mov
pusha
ds
inc
push
leave
sub
jno
mov
xor
add
loop
pop
es
add
lock
js
out
outsb
mov
sbb
mov
std
or
aaa
jmp
sbb
mov
sbb
fldenv
sub
dec
xor
stos
outsl
pop
mov
jp
imulb
xchg
out
psllq
pop
in
add
test
jmp
jle
jo
enter
jae
cmp
popa
addr16
xchg
xchg
faddl
jmp
dec
mov
jbe
and
shll
adc
scas
icebp
mov
scas
imul
rclb
xchg
xor
push
add
andb
and
cli
mov
push
movsl
into
pusha
outsb
pop
sub
mov
testl
mov
fadds
adc
pop
xchg
sub
aas
jmp
filds
daa
mov
cltd
mov
mov
out
cmp
inc
adc
shlb
addr16
ret
arpl
insl
sub
stos
xchg
pop
iret
fsts
mov
ret
enter
pop
sar
adc
adc
xor
mov
sarl
out
fsubs
jmp
cs
or
pop
pop
push
mov
sub
notl
into
fnsetpm(287
gs
into
pop
fwait
pop
or
ljmp
pushf
test
ret
ja
sub
xchg
dec
sbb
mov
dec
aas
mov
add
xchg
outsl
xchg
rcl
stos
sbb
mov
and
dec
mov
xchg
sarb
out
mull
jp
xor
in
xor
sbb
daa
inc
jecxz
test
mov
pop
in
sub
pop
pop
pusha
fnstsw
test
notb
loop
gs
into
test
jnp
dec
mov
jno
jl
jbe
dec
cmpsb
aam
push
mov
or
in
out
pop
mov
sbbb
jae
test
pop
mov
sti
cli
cli
add
call
sti
jmp
mov
add
loop
hlt
sub
mov
mov
mov
dec
into
cmp
add
popa
jg
mov
sbb
adc
inc
adc
xor
pusha
mov
insl
pop
call
call
in
insl
sbb
xchg
dec
pop
xor
sbb
adc
lock
fcoml
gs
test
sub
sub
push
mov
pop
dec
jne
cs
outsl
sahf
in
fmull
jge
mov
nop
xor
and
ficoml
sbb
cmp
leave
imul
push
cmp
sbb
mov
stos
mov
mov
loopne
add
or
xchg
xchg
xor
ss
rol
loopne
cmc
movsl
adc
loop
xor
lcall
cmp
das
loopne
addr16
inc
cld
xchg
push
xchg
pop
and
imul
mov
mov
xchg
xlat
lds
gs
repnz
das
pusha
jno
xchg
imul
stc
pop
push
call
dec
sti
adc
insl
inc
or
loopne
ljmp
jno
sar
aad
mov
call
cmp
aaa
cmp
dec
jae
push
push
pop
jl
popf
xchg
ja
icebp
or
jne
xor
xor
push
jns
push
movsl
out
sbb
mov
lcall
jp
daa
in
jno
mov
sbb
cld
add
jns
shll
add
fwait
scas
or
cmp
or
dec
lods
popa
test
sub
in
pop
dec
ljmp
xchg
inc
xlat
cmpsl
out
push
mov
into
dec
lods
sarl
cmpsb
fwait
insb
dec
mov
sub
ret
out
movsb
pop
mov
jg
clc
adc
addr16
es
stc
inc
rcrb
mov
mov
cmp
pop
cmc
mov
pop
lock
add
std
and
std
sti
or
stos
sbb
imul
lods
adc
xchg
xacquire
cmp
xlat
add
jmp
xor
sbb
pop
into
ljmp
cvttps2pi
rol
xchg
in
ss
jge
test
data16
out
aad
icebp
dec
xor
inc
dec
pop
lds
movsb
fstps
sub
shlb
inc
sub
insb
mov
inc
test
out
sbb
or
jmp
cmpsb
sub
sub
inc
mov
adc
jo
sbb
gs
inc
sub
mov
pop
icebp
je
pop
adc
loop
mov
xor
pop
jl
mov
xor
jbe
cmp
or
xchg
das
sahf
cwtl
dec
add
inc
in
mov
lret
cmp
mov
cld
data16
inc
cmp
insb
pop
adc
div
mov
sub
mov
cmp
and
push
or
imul
rorl
cmp
mov
cmpl
mov
dec
in
ret
xchg
fucomp
sub
and
mov
push
lock
outsb
out
jmp
mov
mov
xchg
jecxz
ss
fwait
lcall
pop
fs
xor
les
int
dec
repnz
and
mov
stos
stc
push
jle
adc
lahf
lds
jmp
or
mov
xchg
cmp
add
shlb
inc
mov
subl
add
mov
xchg
xchg
ss
cmp
movsl
popf
pop
push
add
cmp
sub
test
clc
lock
inc
mov
out
mov
cld
pop
pop
scas
dec
mov
mov
ss
das
leave
mov
sbb
popa
in
mov
adc
cli
or
ds
mov
pop
fimull
std
fldcw
xor
xchg
sub
push
mov
inc
or
repnz
jae
sbb
divl
add
mov
cmpsb
sub
aam
ss
lahf
xchg
or
js
movhps
xchg
sbb
in
jecxz
mov
mov
cwtl
add
pop
inc
mov
adc
inc
mov
fbld
dec
aam
jg
scas
push
fiadds
or
inc
mov
and
cltd
mov
pop
aam
and
sahf
or
test
inc
xchg
fstl
ret
in
imul
pop
mov
jnp
dec
jne
sub
push
ljmp
fcmovne
dec
xchg
adc
ds
jmp
imul
lea
data16
rcrb
push
cmp
lret
push
shlb
das
lret
adc
or
outsb
push
aaa
xchg
add
out
arpl
jmp
aad
ret
nop
inc
cs
mov
push
popa
inc
imul
sbb
imul
loopne
shlb
ja
subl
jbe
lods
push
mov
ja
icebp
cmpsl
mov
mov
jmp
dec
lods
and
push
fmul
out
popa
mov
fdivs
lret
sub
dec
jae
in
stc
arpl
pushf
lock
das
xor
std
cmp
incl
out
add
dec
or
cmp
or
pushf
adc
mov
sahf
jnp
int3
push
pop
dec
int
pop
pop
pop
sub
flds
dec
jl
jle
mov
jge
inc
jmp
mov
inc
and
cmpsl
outsb
ret
sbb
jge
jo
sub
pop
dec
jb
cmp
jo
mov
and
sub
icebp
cltd
lock
xor
or
dec
test
jnp
ljmp
mov
pushf
mov
inc
xchg
xor
popa
jecxz
lods
jle
mov
push
jbe
pushf
fldcw
or
icebp
mov
xchg
push
aam
ljmp
jp
in
js
mov
jmp
sub
or
es
into
pop
adcb
push
mov
repnz
sbb
cmp
stc
sub
in
cmp
lods
shll
outsb
pop
inc
push
sahf
repnz
int
cld
or
loopne
dec
cld
iret
imul
xor
ret
cli
popf
out
fstpt
adc
mov
idivl
push
cmc
js,pn
add
or
sub
dec
mull
shll
sub
mov
popf
jl
inc
mov
std
out
movaps
mov
mov
adc
push
sub
iret
imul
testb
inc
in
add
insb
mov
sub
xor
fldenv
movsl
mov
cmpsl
mov
add
mov
jbe
lret
lcall
mov
js
iret
and
jo
aad
cld
jno
fdivs
ja
adc
leave
sti
sbb
or
nop
dec
xchg
aam
jp
pop
iret
xchg
sbb
add
loopne
lea
fistps
bound
fs
xchg
pop
mov
mov
push
push
cmp
inc
js
movsl
jb
in
mov
push
insb
das
push
jecxz
mov
pmaddwd
cli
inc
lds
lret
and
std
push
sbb
push
pop
cmp
int3
add
mov
pop
stos
mov
sbb
push
loop
subb
in
or
repnz
repnz
dec
mull
push
ror
jg
mov
pop
mov
lret
rcl
jnp
cs
test
stc
imul
mov
pushf
sbb
mov
mov
notl
les
insl
inc
mov
js
fs
rorb
fstpl
test
cmovle
mov
ljmp
ret
mov
cmpsl
push
shll
jge
scas
fistl
adc
xchg
shlb
cmp
in
test
xchg
push
std
ret
shll
fwait
pop
into
cwtl
xchg
pop
repz
mov
or
cli
adc
test
subl
aad
xchg
mov
test
pushf
fcomi
mov
xchg
xor
sbb
daa
sti
xchg
in
cmc
sub
cld
add
add
ja
push
add
popa
lock
sbb
add
fdivr
movsl
push
sahf
test
jecxz
or
pop
addl
js
jge
lods
xchg
andl
jns
push
add
mov
mov
and
cmp
mov
xchg
fwait
lcall
enter
ss
aam
jmp
xchg
popf
pop
into
enter
cli
fs
out
aad
hlt
jbe
cld
sub
mov
dec
shrb
aad
or
rcrb
dec
mov
mov
add
je
cmpsl
stos
push
adc
jno
add
repz
or
mov
cmp
frstpm(287
pop
inc
xorb
mov
xor
mov
adc
mov
popa
mov
adc
add
sub
out
scas
cs
stc
cmp
jb
mov
mov
fmuls
clc
test
fdiv
das
daa
inc
sub
mov
dec
xor
add
mov
push
mov
inc
inc
test
add
dec
stos
dec
xchg
movsl
shrl
adc
push
jns
and
mov
jecxz
adc
lcall
sub
sbb
jne
nop
dec
jo
cld
je
out
cltd
mov
ffreep
and
cmp
out
pop
sbb
dec
test
and
xor
test
pop
fidivl
hlt
xlat
sbbl
sbb
mov
sub
leave
add
add
xor
pop
enter
insb
scas
pop
sub
data16
mov
xor
ljmp
pop
mov
inc
mov
shrd
data16
out
in
sbb
into
mov
mov
mov
mull
cmp
and
in
fsubs
xor
sbb
cmp
ss
adc
sub
inc
movsl
daa
sub
dec
push
sub
jns
jne
pop
jbe
pop
mov
dec
cmpsb
lock
cld
cmp
scas
dec
xchg
push
scas
enter
mov
movsl
fwait
shll
xchg
jg
int
add
jb
loope
jbe
mov
mov
mov
inc
cltd
jmp
stc
xor
dec
mov
outsb
add
aam
repz
inc
imul
outsb
push
inc
xchg
mov
out
hlt
adc
add
and
adc
test
out
jnp
or
xor
push
push
ret
sub
call
push
andl
data16
test
add
dec
das
das
xor
lahf
push
scas
or
pop
fsubl
dec
jl
icebp
cmp
in
sub
mov
iret
jmp
adc
std
pop
sub
subb
es
clc
pop
inc
cmp
mov
mov
sub
out
out
div
add
aad
cmpsl
xlat
lods
into
mov
icebp
cmp
cmp
add
jb
test
xchg
push
pop
cmp
jae
mov
mov
cmpl
push
int3
ret
cli
jbe
fwait
mov
jg
push
push
mov
loope
inc
fidivs
dec
cmp
out
xchg
imul
add
shll
cmp
test
jno
jecxz
sti
gs
and
cmp
jne
in
xor
pop
push
jnp
stc
mov
inc
insb
xchg
xchg
adc
cwtl
xchg
stc
xchg
inc
lods
rorb
pop
lods
out
adc
mov
pusha
dec
dec
test
icebp
imul
roll
call
js
cli
cmp
js
jno
in
pmullw
mov
out
inc
cmovbe
or
nop
xor
jno
movsb
nop
pop
push
ret
ljmp
imul
adc
jle
or
mov
push
mov
push
mov
in
jmp
adc
push
aas
inc
adc
xchg
jb
movsb
dec
out
inc
cmpsb
shlb
lea
push
xchg
inc
in
fisttps
lahf
or
shll
sbb
add
call
es
sti
sbb
lds
mov
or
dec
aad
pop
add
int3
aaa
push
std
scas
faddl
shlb
loopne
push
and
dec
les
jp
mov
cmc
xchg
nop
mov
dec
lods
ret
lcall
les
mov
imulb
mov
mov
loop
stos
inc
xchg
cmp
mov
add
stos
and
jo
or
je
cmp
jne
test
jle
cld
scas
iret
out
shrl
push
lcall
push
xchg
es
cmp
mov
sub
in
dec
push
mov
mov
cwtl
jp
adc
fdivrs
push
mov
pop
mov
xor
jns
jne
movb
lcall
ljmp
pop
inc
adc
nop
je
adc
mov
andl
mov
imul
mov
cltd
lea
inc
je
dec
jp
dec
cmpsl
pop
jb
in
cli
push
lcall
aaa
mulb
mov
pop
push
add
sub
jmp
sbb
jl
imul
jb
dec
iret
fs
and
jo
pop
insl
xchg
jg
and
sub
xor
mov
into
fisubs
xor
test
pop
jmp
jmp
mov
mov
mov
cmpsl
push
loope
lods
mov
xchg
sub
dec
cld
stos
jle
jp
jbe
popf
dec
sub
repz
scas
adcl
insl
jo
clc
std
popf
jae
aad
ret
sub
loopne
and
notb
divb
stos
pop
add
enter
add
test
xlat
jnp
push
in
and
push
xchg
imul
push
xchg
loope
ret
mov
pop
push
adc
adc
mov
xchg
daa
jne
add
lock
inc
sbbl
test
and
jg
mov
and
or
add
les
cmpsl
pop
jle
cld
mov
insb
dec
jg
inc
idivl
std
int
cmp
pop
sti
cmpsb
test
dec
adc
cmp
fadd
xchg
mov
mov
outsb
aas
loopne
dec
fsts
dec
mov
pop
sbb
loop
mov
pop
push
and
loop
dec
mov
jl
cmp
stos
pop
xor
rcll
mov
ret
xchg
mov
ficoml
inc
lods
jmp
inc
xchg
lret
aad
std
cmp
push
mov
das
lods
push
ds
lret
ds
pop
shrl
lret
push
ficoml
sarl
test
nop
repnz
pop
xorb
cmp
inc
xor
outsb
adc
xchg
adc
fmul
sbb
dec
je
add
popw
adc
addr16
push
and
das
and
mov
mov
adc
xchg
movsb
ja
daa
xchg
hlt
pop
xor
test
xor
call
ret
pop
jno
push
call
clc
sbb
sbb
dec
in
mov
cmpsb
mov
adc
or
outsb
imul
fiadds
sbb
mov
insb
and
imul
push
add
dec
ss
das
mov
lret
loop
xchg
jp
movsb
jo
filds
scas
adc
lcall
jne
lret
dec
fs
aam
dec
dec
inc
ja
daa
sub
jo
inc
xchg
imul
aam
insb
xchg
shrl
aas
dec
mov
test
or
and
mov
fsub
xchg
leave
mov
daa
dec
fs
pop
fwait
or
scas
dec
hlt
pop
mov
jb
and
aad
xchg
adc
stc
xchg
pop
or
std
xor
leave
adc
in
xlat
lods
push
adc
leavew
adc
cmc
call
add
and
sub
gs
popa
int3
jg
pop
enter
lahf
orl
sbb
js
dec
dec
jb
mov
clc
push
notb
inc
mov
pushf
and
xor
push
pop
jge
jle
fisubl
dec
mov
hlt
repnz
test
loop
loop
and
mov
jl
push
cmp
xchg
adc
cmp
jle
push
cmp
in
lahf
sub
adc
sub
sub
jg
mov
aas
pop
inc
idivb
adc
loop
movsb
mov
dec
shlb
out
pop
pop
into
mov
jo
xchg
fisubrl
repnz
cli
sub
repz
jle
xor
imul
gs
cli
pmaxub
mov
inc
leave
sbb
into
sub
sarb
das
int3
sbb
inc
imul
inc
dec
test
test
and
inc
std
icebp
addr16
xlat
add
std
adc
inc
lret
or
mov
jp
fdivr
add
leave
and
cmpsb
popa
shl
popa
imul
and
jno
call
jns
sub
sub
pusha
dec
push
repnz
lea
cmp
mov
repnz
repnz
mov
ss
je
mov
nop
jle
jno
jl
dec
incl
addr16
or
xchg
loop
aad
sub
fildl
shld
xor
pop
sub
arpl
pop
in
das
inc
test
xor
loopne
addl
dec
cmp
xchg
push
add
pusha
lock
add
cld
mov
cltd
dec
push
inc
hlt
inc
sbb
lods
outsb
pop
in
mov
out
hlt
cmc
xor
sbb
test
cmc
sbb
int3
gs
cmc
adc
push
jge
in
xor
jae
cli
xor
mov
jle
subl
xchg
ret
adcb
xchg
push
mov
mov
jns
add
sbb
lock
mov
repnz
int3
insl
sub
jp
lret
js
pop
xchg
dec
push
mov
loopne
sbb
inc
fwait
push
sahf
sub
or
fdivrs
mov
ud0
inc
cwtl
jno
mov
ret
nop
add
xchg
outsb
jo
cs
loope
insl
xchg
enter
pushf
faddl
xor
sub
fs
mov
push
cmpsb
jmp
fwait
sbb
movsl
lcall
xchg
dec
xor
popf
adc
sbb
mov
lret
fdivrs
adc
push
loop
lcall
and
xor
gs
push
aaa
xchg
movsl
mov
arpl
xor
sub
jb
push
xor
xor
or
hlt
das
xchg
inc
nop
out
mov
loopne
sub
dec
aaa
push
je
push
mov
clc
fwait
adc
mov
mov
xchg
sbb
mov
or
repz
sbb
mov
sti
push
test
push
in
dec
xchg
aas
dec
jmp
out
xor
sub
bswap
mov
xchg
shrd
xor
push
pop
mov
and
lcall
not
jg
outsb
das
sbb
es
fisubrl
fmull
sub
mov
xchg
push
movsb
shll
add
lds
xor
push
xor
into
dec
xor
mov
fwait
sub
jmp
cmp
divl
jg
sbb
scas
gs
out
xchg
test
sbb
out
sarl
sbb
pop
std
ret
push
pop
stos
stc
out
mov
add
sub
sub
test
push
cs
adcl
jne
aas
int
je
fwait
sub
xor
jmp
sub
jno
push
jmp
pop
lret
mov
push
cmpsb
xchg
or
push
adc
mov
les
push
mov
mov
pop
popf
test
insb
out
cmp
sbb
inc
inc
jmp
inc
sbb
dec
lock
rcl
mov
pushf
adc
jno
or
decb
xchg
dec
insb
outsl
sti
sar
or
push
lods
