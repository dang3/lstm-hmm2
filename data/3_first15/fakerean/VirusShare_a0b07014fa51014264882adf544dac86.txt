add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
adcb
add
decl
decl
test
mov
xor
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
mov
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
adc
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
push
adc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
push
inc
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
mov
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
sbb
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
inc
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
push
daa
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
stos
xor
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
pop
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
adc
add
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
movsb
dec
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
cli
cmp
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
dec
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
adc
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
xchg
cmp
dec
xor
dec
sbb
dec
sub
or
inc
and
add
add
xor
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
insl
and
add
add
pop
fwait
push
add
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
xor
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
adc
inc
and
call
test
je
xor
cmp
mov
mov
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
xchg
inc
add
add
mov
and
cmp
jne
mov
mov
stos
xor
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
or
add
mov
jmp
mov
push
mov
mov
call
mov
pop
push
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
pop
adc
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
popa
push
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
pusha
push
call
mov
ret
bound
add
insb
arpl
add
enter
jne
out
add
mov
add
lcall
add
lods
add
add
jle
add
into
jp
pop
jo
push
mov
add
push
push
lea
push
lea
push
call
mov
add
xchg
les
add
add
mov
pop
clc
test
stos
or
add
add
lahf
add
lds
add
add
cmc
add
movsl
add
nop
xchg
mov
iret
add
repnz
add
lret
lret
add
out
mov
lea
pop
popl
push
push
push
push
push
push
push
call
jge
add
xchg
add
mov
add
out
mov
xchg
xlat
ja
add
mov
add
push
mov
add
pop
add
xchg
jo
ja
loopne
add
add
jmp
mov
fsubrp
mov
add
add
add
rolb
push
mov
andb
je
sti
add
push
into
push
add
add
jecxz
cld
lea
pop
push
push
push
call
add
ja
mov
add
scas
pushf
add
add
iret
add
iret
add
mov
testb
mov
add
add
add
mov
add
push
mov
fmull
push
push
push
lea
push
lea
push
call
add
add
stc
data16
mul
add
lret
je
fcom
mov
jae
xchg
add
add
enter
add
add
cmc
testb
add
js
add
add
add
mov
arpl
mov
pop
gs
add
mov
xchg
add
fsubr
push
lcall
popa
adc
push
push
push
lea
push
push
push
push
push
push
call
mov
push
leave
jmp
mov
nop
mov
shl
ja
xchg
add
sarb
add
roll
add
out
xchg
pop
pop
add
add
add
push
add
add
add
mov
add
int
add
roll
lahf
add
mov
loop
mov
add
loope
repnz
sti
mov
lea
pop
call
push
push
push
lea
push
push
push
lea
push
call
popf
scas
loope
add
add
add
les
fs
add
test
cwtl
pop
add
imul
jo
add
in
mov
add
mov
mulb
stos
jno
test
lea
mov
popa
insb
jmp
leave
hlt
add
movsb
lock
mov
push
loopne
cltd
fiaddl
add
sbb
call
push
push
push
call
add
add
add
add
add
scas
xchg
in
mov
add
sahf
hlt
add
xchg
add
mov
add
pushf
lods
stos
add
cmc
movsl
fdivr
jnp
mov
add
int
fmull
xor
add
push
push
push
push
push
call
js
fildl
pop
add
xor
xchg
nop
stc
lahf
addb
fidivrl
rolb
add
add
add
enter
add
rcrl
out
movsl
filds
add
add
faddl
mov
int3
fwait
out
xchg
add
clc
shlb
stos
add
mov
add
add
mov
pop
mov
mov
out
stos
push
add
add
cmpsl
mov
lea
pop
jmp
ret
push
push
lea
push
call
mulb
mov
add
stos
add
sbbb
test
add
mov
andl
pop
shrl
add
gs
add
add
mov
xchg
add
xacquire
test
add
xchg
jbe
je
add
loop
lahf
add
ja
add
xchg
stc
filds
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
addl
add
loopne
fbstp
push
fwait
add
add
gs
xchg
xchg
fchs
cli
push
movsl
fisubs
addr16
faddp
add
add
jp
push
add
add
lds
add
add
lods
push
jnp
std
push
jge
rcll
stc
out
in
hlt
pop
flds
jl
add
add
add
pop
mov
add
push
push
push
push
push
push
call
mov
jb
pusha
pop
gs
add
add
or
imul
mov
push
add
je
add
test
add
mov
mov
xchg
xchg
jns
mov
int
test
loopne
add
sahf
out
mov
add
mov
lea
pop
add
push
lea
push
push
push
call
mov
add
add
incb
mov
add
add
add
add
add
mov
add
mov
mov
add
sahf
add
add
js
mov
bound
pop
imul
add
xchg
push
jae
push
add
add
add
mov
lea
pop
add
mov
push
push
push
call
add
mov
mov
sahf
add
add
mov
add
out
add
add
in
mov
add
fldl
push
add
add
cld
out
out
mov
push
add
ja
pop
add
mov
in
insb
mov
cld
enter
add
mov
call
bound
pop
xor
push
push
lea
push
push
call
add
in
jmp
std
std
stos
jae
jno
add
lret
enter
add
js
mov
cmpsl
faddl
popf
add
imul
jne
push
add
imul
add
add
mov
jno
lods
push
add
xchg
stos
add
add
add
mov
lea
pop
add
push
push
rol
dec
not
push
and
add
lea
sub
dec
sub
lea
add
pop
sub
not
shr
add
pop
push
push
call
add
stos
add
pushf
lcall
add
mov
xchg
add
leave
add
add
add
imul
mov
loope
shrb
add
cmpsb
ja
scas
add
add
fcomi
ja
add
std
xchg
mov
add
pop
sbb
in
out
jae
mov
repnz
in
add
add
mov
lea
pop
pushl
push
push
push
call
int3
jbe
out
xchg
jmp
loopne
add
fstl
gs
add
gs
push
fdivrs
pop
shlb
movsb
bound
pop
add
ret
outsl
les
mov
arpl
pop
fadds
add
xlat
add
add
push
testl
add
les
sub
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
push
xchg
sahf
popl
add
push
scas
jns
mov
mov
ret
loopne
add
mov
leave
fwait
jns
mov
pop
lret
adcl
mov
add
scas
add
pop
stc
add
mov
stc
imul
add
mov
lea
pop
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
addb
cmc
mov
addb
add
jecxz
add
enter
jl
sahf
roll
lods
aam
add
add
div
sahf
ljmp
mov
mov
mov
lea
pop
movl
lea
push
push
push
push
push
push
push
call
add
add
add
add
xlat
add
roll
xchg
add
mov
scas
add
add
stc
js
jbe
xchg
iret
xchg
add
stc
out
popa
adc
in
add
add
xchg
add
jbe
mov
mov
add
ficoms
sbb
push
push
push
lea
push
call
add
ficoms
add
add
add
gs
test
stos
push
add
add
add
add
add
jge
add
mov
add
add
add
nop
shll
add
mov
lea
pop
pushl
push
push
call
scas
add
in
ret
popa
xchg
add
push
mov
insb
flds
subb
out
mov
test
lods
addr16
add
add
in
icebp
mov
add
test
push
flds
add
push
push
lock
add
pop
pushl
push
push
push
push
push
call
xchg
sahf
add
add
add
add
fiadds
nop
mov
add
jbe
addb
jae
add
push
roll
enter
add
imul
nop
add
pop
call
push
push
push
lea
push
push
push
call
bound
fiadds
ret
movb
repnz
pop
xchg
mov
xchg
aam
add
push
mov
xchg
mov
in
mov
add
add
mov
icebp
scas
mov
lea
pop
pushl
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
xchg
add
fistl
mov
add
pop
add
test
stos
shlb
stos
pop
add
rcrl
leave
push
jnp
mov
add
fiadds
push
add
push
movsl
roll
addr16
cld
subl
lea
pop
pushl
push
push
push
call
add
add
add
out
mov
add
xchg
add
ja
add
cmpsb
add
add
add
add
add
jb
popf
icebp
popf
jmp
add
xchg
lret
addr16
data16
lea
pop
call
push
push
shr
shl
sub
push
push
pop
add
add
sub
shr
lea
pop
dec
not
pop
push
push
lea
push
push
call
add
add
roll
lcall
movsb
add
add
mov
add
add
add
fwait
incb
add
add
imul
jbe
add
add
add
add
cwtl
jecxz
fmull
jne
call
push
push
push
push
push
call
pusha
mov
mov
fs
add
ja
loopne
call
mov
mov
mov
add
add
mov
mov
add
mov
mov
lret
rcrl
mov
jns
loopne
mov
push
xchg
add
add
imul
arpl
add
cli
out
imul
fmull
inc
push
push
add
sub
push
push
pop
add
inc
inc
sub
pop
pop
push
push
call
add
add
addb
add
movsb
rcl
add
add
add
add
test
add
add
mov
add
iret
add
mov
add
add
add
rolb
add
lds
xchg
cltd
movsl
pop
jge
add
jp
add
add
decb
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
test
test
add
add
add
ffreep
add
add
int3
mov
mov
pop
add
imul
test
loope
test
imul
pop
mov
add
push
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
icebp
add
add
add
andl
movsl
call
xchg
xchg
mov
mov
push
mov
enter
add
lahf
movsb
push
push
test
outsl
shlb
add
mov
mov
push
add
clc
add
js
jecxz
pop
pop
mov
lea
pop
call
push
push
push
push
push
push
lea
push
lea
push
push
push
call
cmpb
popa
pop
mov
stc
push
mov
jge
pop
push
in
add
stos
add
add
xchg
add
add
cmpsb
mov
add
add
add
cmpsl
mov
mov
subl
popa
mov
add
add
lea
cmpsl
push
fstl
add
hlt
imul
mov
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
call
push
loop
add
aad
pop
testb
out
add
into
loop
add
mov
xor
int3
test
ja
outsl
stos
jp
sarl
cltd
cltd
mov
jb
add
test
lcall
mov
add
fldl
add
fiaddl
cmpsb
stc
repnz
addl
test
add
pop
xchg
mov
ljmp
cld
lea
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
imul
imul
add
fs
xchg
fcomip
push
add
add
stos
add
sti
movsb
pushf
add
clc
add
add
call
push
fcmovb
stc
xchg
add
mov
mov
push
add
mov
lea
pop
mov
add
push
push
lea
push
push
push
push
call
add
jb
add
xchg
add
enter
arpl
add
test
add
ljmp
out
jnp
push
addl
cmc
lcall
lods
mov
xchg
mov
popa
add
fiaddl
add
xchg
push
enter
rcr
stos
add
add
repnz
fildll
nop
testb
int3
lea
pop
add
push
push
lea
push
push
call
add
int
popl
jl
outsl
lret
js
fadds
add
add
mov
loopne
hlt
xchg
in
add
add
mov
jb
fiaddl
add
rcll
add
cld
xchg
ret
add
mov
cmc
in
add
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
call
loopne
rcll
test
loop
arpl
mov
add
push
add
add
add
fldl
add
push
push
add
mov
scas
lcall
add
ret
add
jbe
jns
add
stc
add
mov
add
stos
loop
mov
in
lea
movsb
add
xchg
je
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
call
cmc
jns
mov
add
add
pop
mov
data16
add
jae
add
mov
jp
add
mov
cld
add
add
add
xchg
arpl
xor
push
push
call
mov
fiadds
cli
add
popa
add
pop
in
add
xchg
add
add
int
mov
insb
cltd
add
add
jbe
test
out
add
add
xlat
je
mov
or
les
add
push
push
push
push
lea
push
lea
push
push
lea
push
call
fidivs
cmpsl
xchg
movsb
imul
outsl
fadds
add
add
add
add
aad
add
je
add
rcll
lret
sahf
mov
jbe
lret
icebp
jp
stos
add
jl
mov
ret
add
ret
std
stos
je
mov
jl
add
push
in
pop
add
addb
fadds
add
orb
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
loopne
add
add
xchg
add
add
add
int
mov
aam
mov
jbe
add
add
add
jae
lret
xchg
mov
add
add
add
add
nop
push
add
mov
mov
add
add
add
add
add
pop
push
push
push
call
xchg
scas
fldl
aad
mov
stos
add
addb
xchg
test
jno
mov
mov
add
add
mov
pop
std
add
fiaddl
scas
jne
push
movsb
scas
xlat
mov
add
add
fnstsw
add
stos
add
fdivrp
pushf
fisttpl
flds
push
add
add
popa
or
inc
or
push
push
push
lea
push
push
push
push
push
push
push
call
data16
ret
shlb
add
out
mov
aam
arpl
add
add
fwait
pop
lds
add
icebp
add
add
mov
jne
add
out
fmull
lock
push
call
add
add
pop
pushf
push
into
xchg
xchg
jecxz
repnz
lret
add
lret
add
leave
add
push
add
jle
add
mov
jge
add
xchg
xchg
call
movsl
add
pop
pop
mov
xor
push
push
push
push
push
push
push
lea
push
call
mov
mov
rol
addl
scas
jmp
add
mov
mov
movsb
push
add
lret
cmc
pop
add
add
jne
add
popa
pop
in
add
movsl
add
lret
add
stos
add
add
fiadds
push
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
call
icebp
add
ret
add
mov
movsl
imul
xor
ja
icebp
cwtl
add
add
out
in
add
xchg
add
std
loopne
push
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
push
call
scas
ret
loope
add
mov
add
rolb
addl
addl
nop
mov
mov
add
add
jmp
in
outsl
lret
push
add
mov
pop
jmp
cmpsb
lds
mov
bound
add
add
nop
mov
addb
mov
enter
enter
add
les
add
push
push
push
push
push
call
add
add
fnstcw
add
add
ljmp
add
push
mov
add
add
push
stos
add
add
pop
add
add
jbe
in
pop
add
push
leave
add
jbe
mov
ficomps
icebp
add
pop
movb
add
nop
push
add
add
roll
jmp
add
int3
lea
pop
add
push
push
lea
push
push
lea
push
lea
push
push
call
fsubrs
add
lea
sarl
in
add
add
add
mov
cmc
out
mov
cmpsl
push
add
add
add
add
out
mov
xchg
mov
jnp
fadds
add
add
movsl
mov
add
test
mov
enter
out
jno
fs
stos
lods
cmpsb
add
sbb
sub
push
push
push
push
push
lea
push
call
mov
lods
lock
gs
cmc
add
pop
add
jge
add
push
lahf
add
mov
add
jl
add
stos
add
add
lret
jmp
je
cmc
mov
in
int3
icebp
push
pop
add
scas
fs
mov
add
add
fiadds
int3
add
cld
lea
pop
pop
push
push
call
add
movsl
out
add
add
roll
pop
int3
out
add
mov
mov
xchg
test
push
imul
mov
mov
add
add
fs
add
add
xchg
popl
jnp
mov
jne
add
add
pop
jecxz
add
xlat
cld
add
add
add
add
add
test
aam
bound
pop
rep
push
push
push
lea
push
push
push
lea
push
call
add
les
add
push
add
je
xchg
movl
add
cmpsb
jle
hlt
add
outsl
jno
add
mov
cmpsl
fadd
ja
mov
aam
pop
scas
add
sti
pusha
outsl
add
test
test
mov
add
out
add
lea
add
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
call
icebp
cltd
hlt
mov
add
jmp
add
les
lds
push
add
mov
add
mov
loop
mov
add
addb
loopne
add
add
hlt
lea
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
rcrl
add
jmp
scas
add
test
add
nop
std
ljmp
mov
add
add
jle
pusha
je
test
add
jno
rorb
mov
add
add
pop
mov
pop
add
push
push
call
push
add
add
hlt
add
jl
mov
cmpsb
fwait
jo
add
loopne
test
mov
mov
add
in
add
mov
stc
add
mov
lea
pop
add
mov
xor
push
push
push
push
push
lea
push
push
call
pop
add
fildl
add
in
jne
add
push
add
mov
pusha
add
add
push
add
add
cwtl
add
cmpsl
lea
add
cltd
cli
xchg
popl
popa
mov
add
std
xchg
add
out
add
pushf
arpl
add
lods
jno
arpl
popf
mov
lea
pop
mov
xor
push
push
push
push
call
xchg
add
add
pop
clc
neg
cltd
add
mov
add
add
mov
mov
rolb
add
add
add
movl
sarl
clc
sahf
fadds
add
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
pop
add
xchg
add
arpl
fwait
sti
leave
add
push
je
pop
ficomps
movsl
add
pop
in
fdivp
add
addl
add
add
pop
add
xchg
push
sub
jne
lea
add
shr
cmp
cmpb
lret
add
add
pop
xor
push
push
push
lea
push
call
mov
roll
add
mov
add
add
push
add
js
lahf
sarl
add
add
shlb
add
add
iret
add
add
testb
sti
movsl
push
fildl
cld
lea
pop
add
push
push
push
push
push
push
call
cli
repnz
add
fcoms
add
push
add
rorb
add
add
in
add
xchg
fs
xchg
pop
add
bound
push
mov
add
xchg
aam
push
mov
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
add
ljmp
sti
xchg
push
lcall
add
jbe
nop
in
add
jb
add
jmp
push
add
add
jp
add
in
xchg
add
add
add
add
pusha
pop
add
aam
add
stos
push
add
mov
lea
pop
add
push
push
lea
push
push
push
push
call
pop
add
sti
movsb
mov
icebp
imul
fistpll
add
add
xchg
in
test
data16
add
mov
xchg
stos
popf
cli
add
cld
add
cmpl
mov
add
push
jb
lret
jno
add
into
add
mov
pop
imul
add
mov
data16
fsubrs
mov
push
and
add
lea
xor
sub
xor
inc
pop
sub
lea
dec
pop
push
push
push
call
pop
add
out
fadds
mov
pusha
add
imul
add
push
in
jge
add
add
pop
repnz
add
add
cli
test
enter
add
cli
mov
arpl
jnp
add
cli
add
add
nop
lock
jae
add
jmp
add
add
push
push
loopne
add
add
pushf
stos
add
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
push
rcrb
xlat
mov
clc
add
rolb
push
incb
jle
add
xchg
fwait
push
data16
add
out
lods
add
add
fcom
aam
popa
je
add
add
mov
add
add
pop
add
cmc
add
add
mov
add
mov
add
out
movsl
lds
scas
add
hlt
lea
pop
call
push
push
push
not
push
xor
add
not
sub
lea
add
pop
add
shl
pop
push
push
lea
push
push
push
call
popa
scas
add
add
mov
add
scas
imul
jae
jp
data16
repnz
xchg
add
mov
add
add
add
add
add
add
add
add
mov
cld
add
pop
push
push
push
push
lea
push
lea
push
push
push
call
cmc
cld
add
outsl
jge
mov
xchg
add
add
add
push
add
cmpsb
test
cld
add
mov
loopne
push
jbe
add
pop
add
mov
int3
lea
pop
push
call
push
add
pop
mov
push
push
add
xor
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
int3
mov
cmc
jne
add
mov
pop
jae
fld
mov
idiv
repnz
mov
add
in
ret
add
add
pop
add
fadds
fnstenv
mov
movsl
pop
addr16
add
loop
add
cld
rcrl
add
int
ljmp
arpl
pop
mov
push
shl
xor
pop
add
add
push
dec
shr
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
push
pushf
add
push
leave
jbe
fsubr
jl
add
mov
andb
add
add
mov
lods
call
add
add
add
pop
mov
xor
push
shr
pop
add
push
add
pop
push
mov
xor
push
dec
shr
pop
add
push
push
push
call
pop
jbe
add
add
test
add
mov
in
imul
add
add
add
push
add
add
push
add
add
scas
fwait
call
stos
test
add
fiadds
mov
jns
mov
add
shll
lods
testb
arpl
add
mov
lea
pop
pop
mov
push
push
push
lea
push
call
add
les
add
add
scas
fs
in
pop
mov
popf
icebp
pop
lods
add
out
add
add
add
icebp
rol
mov
add
addl
fwait
add
add
add
add
add
add
ja
add
add
add
pop
xor
push
lea
push
lea
push
push
lea
push
push
call
andb
add
pusha
add
imul
rolb
xchg
notl
sti
cmc
out
mov
cwtl
imul
add
add
add
neg
pop
mov
mov
add
add
aam
bound
pop
add
push
lea
push
push
push
lea
push
push
push
call
stos
push
add
rclb
add
add
loopne
mov
mov
out
mov
add
add
in
pop
lret
bound
jecxz
out
push
add
mov
outsl
jbe
scas
add
out
fidivl
add
fs
xlat
mov
mov
pop
leave
int
aam
bound
rep
push
shl
lea
pop
mov
xor
push
push
push
lea
push
push
call
lds
add
add
pop
add
add
push
add
cmc
mov
xchg
add
mov
bound
push
pusha
stos
adcl
push
outsl
fsub
cmpsb
add
fsubp
xchg
add
push
insb
pop
cld
add
incb
add
add
icebp
add
les
stos
jns
add
hlt
lods
add
in
hlt
lea
pop
or
je
mov
xor
push
lea
push
call
lods
add
add
add
fs
out
sahf
push
jae
mov
mov
ret
push
jbe
add
call
les
in
data16
hlt
add
call
add
mov
lea
pop
mov
xor
push
push
push
push
call
add
add
repnz
pop
lods
mov
pop
std
add
scas
aam
mov
fwait
add
jno
clc
shl
jno
mov
add
outsl
add
add
adcl
mov
mov
add
out
in
push
pop
cmc
fwait
js
loope
add
lret
add
cwtl
faddl
add
mov
stos
xchg
add
les
repnz
push
shl
sub
sub
pop
push
mov
xor
push
push
push
push
push
call
mov
mov
xchg
divb
rolb
les
into
lock
mov
iret
cld
add
in
add
int3
add
mov
mov
add
adc
add
push
shl
ror
ror
pop
pop
push
push
push
push
push
lea
push
lea
push
call
push
pop
add
push
pop
pop
movsl
out
roll
lds
hlt
les
xchg
add
in
add
shlb
mov
add
nop
add
mov
fistps
add
push
push
cmc
ljmp
bound
mov
lea
pop
rep
push
add
xor
dec
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
in
add
add
les
pop
faddl
add
rcl
shll
push
add
scas
mov
mov
add
lret
mov
pop
addr16
lock
add
add
loop
mov
rorb
pop
xor
push
push
push
push
push
push
call
sarl
test
add
add
test
add
leave
push
iret
jmp
stos
add
movb
add
hlt
mov
xchg
add
fwait
add
into
scas
jae
add
aam
add
aam
jecxz
add
call
mov
xchg
mov
add
add
loope
mov
cwtl
add
add
mov
mov
lea
pop
add
push
lea
pop
or
je
push
push
push
push
lea
push
push
push
push
push
push
call
add
outsl
insb
mov
push
into
xchg
into
push
add
sar
fistps
movsb
xchg
add
add
cwtl
add
data16
add
add
mov
arpl
ret
add
pop
mov
push
inc
pop
add
push
dec
rol
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
insb
jl
add
add
add
add
add
fisubs
cmp
jmp
pop
addl
xchg
mov
pop
add
pop
jo
mov
add
cltd
xchg
add
jmp
xchg
cmc
fadds
std
movsl
add
add
std
add
pusha
jecxz
in
add
pop
rep
pop
push
push
lea
dec
lea
push
xor
add
shl
lea
sub
sub
pop
dec
lea
pop
push
xor
pop
pop
push
push
push
push
push
push
call
jecxz
mov
push
rcrl
popa
jmp
push
enter
add
rcr
mov
movsl
jmp
pop
test
mov
xchg
lea
add
add
in
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
call
insb
jnp
mov
fsubr
in
lods
cli
add
add
add
add
mov
xchg
jbe
add
jb
add
add
add
add
add
push
add
bound
fwait
add
mov
lea
pop
mov
push
push
push
push
push
push
call
add
fwait
add
loop
loopne
stos
add
add
jle
lods
mov
out
cli
add
mov
mov
test
stos
add
bound
add
fnstcw
add
mov
mov
add
ror
hlt
call
loopne
add
movl
add
lods
push
add
add
mov
add
push
ret
jmp
add
in
mov
lea
pop
mov
jmp
push
not
add
pop
push
push
xor
rol
pop
mov
push
lea
sub
pop
add
push
push
shr
sub
not
pop
push
push
push
push
lea
push
push
push
call
addr16
stc
out
mov
push
in
mov
lcall
xchg
add
fcom
add
call
mov
mov
mov
add
add
jle
add
push
test
add
pop
pop
ret
test
add
add
add
addb
aam
bound
pop
push
push
push
push
push
push
push
push
push
push
call
addl
mov
stos
fildl
add
add
mov
test
xchg
add
xchg
int
aam
icebp
pop
add
xchg
add
add
jae
add
add
shlb
fldl
mov
add
ljmp
imul
add
jl
loop
out
mov
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
call
add
add
jl
mov
cli
ret
shrl
hlt
lock
mov
jmp
jle
mov
jp
hlt
nop
add
imul
add
add
mov
add
add
cli
add
sbb
pop
push
shl
dec
pop
pop
push
dec
pop
pop
pop
push
inc
lea
shl
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
scas
mov
movl
stos
add
add
xchg
cmc
call
add
mov
lret
add
add
mov
mov
lods
cwtl
add
add
add
mov
lea
pop
ret
push
rol
sub
pop
push
push
push
push
lea
push
call
in
jns
fildl
add
add
add
add
flds
sarb
add
jne
add
cwtl
add
mov
add
mov
mov
lea
pop
mov
push
dec
sub
pop
add
push
lea
push
push
push
push
call
push
les
add
push
mov
add
push
add
add
add
xchg
popl
mov
pop
push
outsl
jnp
jle
jmp
js
add
add
add
clc
cltd
add
hlt
add
add
in
je
add
add
ljmp
stc
add
mov
lea
pop
push
push
dec
inc
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
add
nop
js
enter
jecxz
loopne
push
jl
jl
pushf
popl
lods
lret
add
jae
int
xchg
jno
mov
add
mov
rol
add
add
add
in
add
int
add
mov
cmpsb
mov
mov
clc
add
sar
add
add
test
add
addb
add
data16
push
lea
push
call
add
push
add
mov
xchg
cli
je
movsl
lahf
add
cld
push
iret
add
test
xchg
add
add
add
add
rcrb
cmpsb
nop
mov
lea
pop
push
movl
push
push
call
push
add
orb
push
xlat
add
mov
popf
pop
xorb
lods
xchg
add
hlt
enter
add
mov
popf
mov
sar
out
cmpsb
mov
pop
addl
test
je
push
shr
rol
pop
mov
push
push
call
popf
lret
addl
hlt
push
test
xchg
fildll
jbe
jmp
xchg
add
push
addr16
filds
addl
add
in
fnsave
test
add
add
mov
lea
pop
pop
pop
push
lea
push
push
push
call
mov
jns
add
ffreep
mov
add
hlt
add
lea
pop
incb
add
xchg
add
jo
cmpsb
pop
add
push
mov
loope
fadd
loope
mov
call
add
fs
ret
lea
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
pop
add
mov
add
add
sti
lret
pusha
jge
jb
add
test
add
hlt
mov
fst
add
jl
add
fists
mov
ret
outsl
cmc
jbe
mov
lea
pop
pop
leave
push
push
push
push
lea
push
lea
push
push
push
call
cmpsl
mov
add
add
cwtl
add
popf
xchg
mov
lcall
movsb
add
xchg
test
mov
add
add
add
in
sti
mov
add
add
xchg
int3
add
add
pop
ret
push
push
lea
push
push
push
push
push
call
cmpsl
scas
push
roll
mov
add
jnp
add
add
out
add
flds
add
xchg
bound
popf
cld
jecxz
out
add
imul
aad
lds
shl
les
push
ror
pop
mov
push
push
call
ror
xchg
mov
add
cli
add
loopne
cwtl
jo
add
add
add
mov
in
add
pop
movsl
add
mov
jo
mov
int
add
mov
jle
mov
lea
pop
add
push
xor
lea
add
pop
push
push
push
lea
rol
pop
push
push
sub
shl
pop
push
push
dec
sub
shr
sub
pop
testl
addl
push
not
shr
add
pop
push
call
push
push
push
push
push
push
push
push
call
push
mov
add
add
jo
add
out
add
add
fdivrl
sarb
jno
add
fadds
pop
add
mov
stc
mov
fistpll
lock
insb
popa
push
add
in
add
xchg
add
add
add
mov
lea
pop
mov
push
lea
push
push
call
add
mov
int3
js
add
clc
std
add
addb
xchg
movb
subb
movl
fiadds
jecxz
add
add
jo
test
add
repnz
repnz
add
ja
pop
test
mov
push
xchg
sbbl
pop
pushl
push
push
push
push
lea
push
push
push
push
call
out
roll
add
lods
add
mov
pop
add
add
add
add
push
enter
popf
mov
jae
imul
add
add
push
mov
in
add
in
add
pop
notl
add
jo
add
push
movb
mov
stos
add
add
pusha
sbb
push
call
push
rol
add
pop
cmpl
jne
push
shl
inc
pop
pop
pop
push
shr
inc
pop
pop
push
pop
pop
push
shr
shl
pop
leave
push
dec
lea
sub
pop
ret
push
push
sub
sub
pop
mov
push
add
pop
add
push
xor
shr
add
pop
push
push
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
mov
add
add
add
stc
add
add
stc
pop
add
add
xchg
add
add
add
xlat
add
mov
add
pop
add
add
movb
clc
add
roll
sahf
lcall
push
push
push
push
push
push
push
call
fimuls
add
loopne
popl
cltd
pop
cmpsl
enter
loope
addb
xchg
mov
imul
mov
pushf
cwtl
test
cld
add
add
icebp
std
mov
cld
lods
mov
cld
add
add
add
add
mov
push
add
aam
add
add
add
mov
pop
jle
add
stc
ffree
jnp
mov
lea
pop
movl
push
push
push
call
mov
mov
scas
add
lock
fwait
add
add
add
sahf
popf
aam
add
mov
jp
lods
jl
fsubl
push
lea
leave
add
add
add
add
cld
cwtl
add
xchg
jno
add
add
pop
jo
add
mov
lea
pop
call
push
rol
lea
add
shr
pop
push
push
not
pop
call
push
push
push
push
call
xchg
out
add
fs
loope
cmc
aam
mov
test
add
add
jl
fisttpll
nop
cmc
js
mov
clc
xchg
aad
fildl
jl
fadd
call
ja
add
popl
fdivr
clc
add
fs
add
lea
jo
pop
test
test
mov
mov
movsl
ljmp
add
add
xchg
sti
pop
add
pop
subl
push
rol
lea
pop
cmpl
jne
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
add
movsb
fwait
js
add
add
add
out
add
add
mov
sti
add
mov
add
jmp
mov
add
jl
out
add
add
out
rcrb
fadds
test
mov
lea
pop
pop
pop
push
lea
push
push
lea
push
lea
push
call
les
add
out
add
push
scas
add
clc
add
jne
add
pop
jle
insb
loopne
add
xchg
jmp
add
loop
push
add
scas
rol
scas
stos
add
lcall
popa
adc
pop
leave
push
push
push
lea
push
push
lea
push
call
add
jle
stc
arpl
mov
mov
add
addb
imul
lcall
test
std
fidivs
lods
jne
icebp
lods
add
add
sarb
mov
add
fistpl
lods
stc
pop
leave
ja
add
movsb
mov
xchg
jecxz
out
add
arpl
add
movsl
jnp
int3
lea
pop
ret
push
add
inc
pop
push
push
sub
pop
mov
push
lea
push
call
push
add
add
mov
add
imul
in
mov
add
push
add
scas
add
jo
ja
ljmp
scas
push
add
add
mov
add
add
addr16
pop
mov
mov
add
lea
pop
add
push
push
push
push
call
movb
test
add
pop
in
push
in
add
mov
mov
add
in
scas
add
scas
add
xchg
add
add
add
je
sahf
lea
jp
std
jbe
add
add
add
add
fldcw
mov
add
icebp
stc
stc
add
pop
add
add
cltd
test
add
lahf
leave
test
add
pop
push
push
push
push
push
push
call
xchg
fdivp
div
add
loopne
in
push
push
scas
mov
add
jbe
mov
stc
in
jle
shrb
cmc
add
stc
add
add
testl
test
add
add
add
add
mov
adc
push
push
shl
shr
add
pop
push
push
push
shl
lea
shr
pop
mov
push
push
push
push
lea
push
push
call
add
ja
aam
mov
mov
lods
stc
mov
jmp
les
push
mov
mov
jnp
arpl
call
aad
in
push
testl
add
pop
lea
push
push
push
call
mov
les
movsl
add
xchg
add
imul
mov
test
iret
ja
fsub
jl
xchg
repnz
add
add
adc
adcl
pushf
add
call
add
movsl
mov
lea
pop
sub
push
dec
pop
mov
shr
push
sub
pop
add
push
lea
inc
pop
mov
mov
push
xor
sub
shl
pop
add
push
sub
shl
sub
pop
add
push
lea
ror
lea
dec
pop
mov
mov
push
add
sub
pop
cmp
jne
cmp
jne
push
not
ror
sub
sub
pop
mov
movl
push
ror
not
pop
jmp
push
inc
sub
rol
pop
mov
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
mov
aad
out
roll
stc
pop
rcrl
int3
sti
push
add
icebp
fmul
add
jl
xchg
jb
add
add
add
push
add
divb
add
cwtl
add
mov
add
add
add
pop
add
mov
movsb
add
add
add
leave
mov
and
mov
push
add
not
shr
pop
sub
jne
push
push
lea
push
push
lea
push
push
push
push
call
gs
add
repnz
jne
xchg
test
js
nop
add
jge
in
out
out
loopne
add
add
repnz
bound
jo
add
add
xchg
mov
nop
add
xchg
add
add
add
add
add
add
add
add
add
add
lea
pop
mov
push
push
lea
push
call
mov
add
add
add
mov
pusha
cltd
add
jae
iret
test
in
movsb
movsl
add
add
out
xchg
jnp
add
aam
add
add
add
mov
movsl
add
sahf
roll
in
add
pop
movl
jmp
push
rol
dec
pop
mov
push
sub
dec
shr
pop
mov
push
push
push
push
push
push
call
jle
add
add
add
add
mov
mov
enter
flds
add
add
test
add
repnz
popf
mov
xlat
cmpsb
mov
mov
add
jecxz
cwtl
test
xchg
hlt
push
fiaddl
mov
out
fmull
cli
add
test
add
mov
push
rol
rol
xor
pop
movl
jmp
push
push
push
lea
push
push
push
push
call
call
lret
add
jecxz
add
scas
add
out
lds
add
ljmp
jno
clc
negl
jle
mov
imul
faddp
out
add
add
aad
add
add
pop
mov
push
add
dec
pop
cmpw
jne
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
add
add
add
add
popf
add
insb
clc
add
sti
add
pop
push
push
add
rclb
push
movsl
xchg
mov
add
arpl
pop
mov
push
shl
not
pop
movl
jmp
push
lea
push
lea
push
push
push
push
push
push
push
push
call
lock
pop
mov
jl
push
jle
imul
loop
add
add
rolb
fldl
pusha
fiadds
add
in
popf
xchg
sbb
pop
fcomps
add
gs
add
pop
mov
roll
add
incb
jo
add
movl
popl
add
scas
bound
pop
pushl
push
add
not
sub
pop
pop
push
push
call
stos
cwtl
add
rolb
arpl
push
add
add
clc
stos
cmpsl
add
add
call
add
fisubl
xchg
adc
add
mov
sahf
add
jp
outsl
mov
pushf
mov
out
int
in
lods
sar
add
pop
sti
xchg
jns
hlt
lea
pop
mov
mov
push
inc
rol
sub
pop
mov
push
push
add
not
xor
push
sub
add
add
sub
xor
not
not
pop
rol
pop
push
push
push
call
pop
add
int
add
insb
add
mov
add
add
add
add
add
add
add
add
xchg
lcall
add
test
xchg
int3
push
add
out
add
pusha
add
bound
mov
lret
xchg
mov
ret
mov
movl
orb
push
popa
add
push
mov
or
push
call
push
push
push
lea
push
call
pop
add
stos
add
aad
add
push
add
mov
pop
add
out
mov
outsl
xlat
push
leave
add
sarb
add
lock
xchg
xchg
add
add
add
mov
addb
xchg
mov
fstl
push
add
mov
push
add
mov
test
add
push
mov
les
mov
mov
lea
pop
cmpl
je
push
push
lea
dec
shr
push
and
add
inc
sub
inc
shl
add
pop
not
add
pop
push
push
call
add
jbe
add
fndisi(8087
out
gs
add
fwait
add
mov
add
add
test
mov
sti
mov
add
pop
pop
gs
mov
popa
push
add
add
jns
add
jbe
aam
cltd
movsb
les
add
add
gs
lret
gs
add
add
iret
std
add
pop
push
call
push
ror
pop
cmpl
je
push
push
add
dec
push
and
add
sub
sub
shr
pop
add
add
pop
push
lea
inc
sub
lea
pop
push
push
push
push
push
call
mov
test
jge
hlt
add
mov
add
add
icebp
test
call
mov
add
sub
fldl
add
add
call
outsl
jbe
jbe
add
add
push
ja
jge
in
add
add
add
add
mov
add
mov
addl
leave
xchg
mov
lea
pop
call
cmpl
je
push
push
push
and
add
shl
sub
shr
pop
add
shr
lea
pop
push
ror
rol
add
pop
push
push
shl
pop
call
push
lea
push
lea
push
call
add
out
lret
add
fwait
test
mov
mov
popa
cmpsl
add
lahf
mov
jge
sahf
ja
mov
movsb
fisttpll
test
push
lcall
add
repnz
aam
int3
lea
pop
cmpl
je
push
push
rol
add
ror
ror
push
sub
add
sub
add
dec
pop
shr
pop
push
not
pop
push
call
push
push
push
call
loope
pop
fildl
mov
mov
jae
fadd
imul
add
gs
add
jnp
add
iret
fnop
fwait
mov
add
in
push
add
add
jle
out
xchg
add
add
add
pop
cmpl
je
push
push
add
sub
push
or
not
add
add
inc
sub
not
not
sub
pop
not
pop
push
push
call
roll
add
add
ja
les
aad
mov
not
dec
lea
mov
ljmp
lods
add
pop
pop
mov
leave
faddl
out
rolb
lock
add
leave
add
leave
add
add
add
add
mov
add
lea
clc
push
add
imul
jp
add
lods
test
or
call
push
lea
push
push
push
push
lea
push
push
push
call
add
add
jge
add
push
fistpll
loopne
add
jp
jnp
mov
ror
add
lds
imulb
cli
mov
je
add
pop
jae
rolb
add
clc
jo
stos
push
push
add
ja
data16
into
pop
add
add
add
xchg
add
add
scas
add
add
mov
arpl
add
mov
and
cmp
rol
je
push
push
lea
xor
push
sub
add
sub
sub
ror
sub
not
add
rol
add
pop
shl
dec
not
shr
pop
push
push
push
lea
push
push
push
push
push
call
rolb
insb
xchg
add
push
xchg
add
enter
push
jno
add
add
mov
decb
push
lea
add
leave
out
je
add
add
jmp
add
enter
jo
out
add
pop
push
push
push
call
add
movsb
jle
fst
add
add
imul
push
enter
add
lahf
add
out
jp
add
push
xchg
into
jge
add
in
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
scas
jecxz
lret
add
subl
iret
add
icebp
add
add
clc
cli
add
pop
aad
mov
add
add
jo
mov
add
add
loop
adcb
add
jecxz
add
pop
jb
push
mov
lea
pop
cmpl
je
push
push
ror
lea
push
push
pop
add
inc
shr
xor
sub
lea
sub
pop
ror
lea
pop
push
pop
push
push
add
sub
not
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
jp
add
add
add
cltd
add
mov
add
mov
jo
pop
test
add
ja
test
mov
mov
mov
jae
out
add
scas
add
out
mov
aam
jb
add
add
fists
jb
jbe
jb
mov
lea
pop
cmpl
je
push
push
not
xor
dec
push
sub
add
sub
lea
sub
xor
rol
add
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
push
jl
add
xchg
ret
jb
test
add
add
add
push
xchg
fildl
mov
add
test
fists
bound
add
sti
add
add
lods
lret
mov
pushf
add
mov
pop
add
jl
clc
add
mov
lea
pop
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
icebp
add
mov
clc
xchg
push
add
icebp
jmp
jnp
mov
add
add
add
add
add
out
add
add
add
add
cld
mov
jo
je
xchg
enter
fwait
jle
add
xorl
clc
mov
xchg
mov
add
mov
enter
cli
mov
lea
pop
call
cmpl
je
push
push
lea
ror
push
xor
add
sub
sub
sub
ror
xor
pop
xor
xor
shr
dec
pop
push
not
pop
push
call
push
push
push
call
add
ret
neg
add
incb
add
scas
mul
jnp
cmpsb
add
hlt
sti
pop
add
mov
mov
xlat
mov
test
add
pop
add
jp
add
mov
enter
add
leave
insb
ficoms
arpl
cmpl
je
push
push
inc
push
or
not
add
not
not
rol
sub
sub
pop
pop
push
push
lea
push
push
lea
push
call
andb
fwait
add
add
xchg
add
add
insb
add
push
add
xlat
movsb
jl
pop
out
stos
subb
add
cmpsl
mov
xchg
pop
xorb
add
bound
jp
div
mov
xlat
adcl
lea
pop
push
push
sub
sub
shl
pop
call
cmpl
je
push
push
lea
shr
push
or
inc
add
shr
shr
lea
sub
add
shl
shl
pop
pop
push
add
ror
pop
push
push
push
lea
push
call
repnz
pop
add
jmp
add
jle
ljmp
mov
add
out
lods
add
add
lahf
nop
jae
mov
fmul
mov
mov
add
mov
mov
fwait
movsb
movsl
add
pop
aad
add
add
push
int
add
xorl
hlt
lea
pop
call
push
shr
pop
cmpl
je
push
push
lea
sub
push
and
add
xor
ror
sub
dec
pop
dec
inc
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
jnp
mov
mov
push
push
lcall
call
add
movb
add
pop
sti
into
test
std
pop
lret
add
jno
lea
jo
je
mov
add
mov
lea
pop
push
call
push
push
lea
push
push
push
lea
push
call
jge
add
jne
jne
add
add
add
test
xchg
testb
add
add
leave
cmpsb
in
out
testb
mov
add
add
push
mov
gs
add
mov
lea
pop
cmpl
jne
push
dec
ror
pop
mov
push
inc
inc
inc
pop
movl
jmp
push
ror
pop
xor
pop
push
pop
pop
pop
push
shl
shl
add
pop
pop
push
push
call
in
add
xchg
std
pusha
cmpsl
xorl
stc
fidivl
icebp
jle
add
gs
jne
add
jns
mov
in
mov
add
jp
pop
add
pusha
or
push
push
push
push
lea
push
push
push
push
call
pop
add
test
out
jbe
add
stos
mov
xchg
add
aam
add
add
add
add
ljmp
pusha
add
lods
mov
lea
pop
ret
push
shl
inc
sub
pop
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
in
lahf
add
scas
lahf
jae
add
cmpsl
cmpsl
faddl
arpl
lods
add
cmpsb
jecxz
add
arpl
into
add
test
outsl
add
mov
leave
xlat
add
add
lea
pop
mov
push
push
push
push
lea
push
push
call
xlat
pop
add
lods
std
call
outsl
add
xorb
push
add
add
roll
add
add
cmc
add
loop
add
test
jno
clc
hlt
mov
add
out
add
push
push
fsubr
mov
lea
pop
add
cmpl
jne
push
push
sub
push
sub
add
not
sub
add
sub
add
shl
pop
shl
lea
pop
push
ror
dec
pop
pushl
push
push
push
push
push
lea
push
push
call
popl
outsl
xlat
fldl
addr16
js
xchg
pushf
add
int3
add
fwait
add
addb
add
fnstenv
lods
sbbl
cmc
add
in
add
add
clc
into
mov
xchg
lock
push
mov
add
mov
lea
pop
call
push
dec
lea
shr
pop
push
call
push
xor
inc
pop
jmp
cmpl
je
push
not
pop
cmpl
jne
push
add
pop
leave
push
push
push
push
push
push
lea
push
lea
push
call
add
add
cltd
add
lds
outsl
sahf
mov
mov
mov
insb
add
add
add
stos
loop
xlat
ret
xchg
hlt
fistpl
mov
add
out
add
int3
stc
push
add
nop
add
fsubs
pop
push
add
les
les
pop
push
pop
pop
push
push
push
push
push
push
push
call
loop
add
mov
xlat
add
add
pop
iret
roll
flds
add
add
hlt
scas
add
ret
sahf
add
add
in
push
fistpll
pusha
roll
aam
enter
lea
pop
pop
pop
push
push
push
push
push
call
loope
push
add
add
add
mov
movb
push
std
mov
rolb
mov
xlat
lods
add
gs
repnz
fmul
add
add
add
mov
add
mov
data16
add
push
add
in
sahf
out
jbe
mov
add
add
fnstcw
add
add
mov
mov
fiadds
add
mov
xlat
js
push
mov
lea
pop
leave
add
push
inc
ror
xor
pop
ret
push
lea
shr
pop
jmp
cmpl
jne
push
push
inc
push
and
add
add
sub
lea
dec
shl
lea
pop
not
sub
pop
push
push
push
lea
push
push
call
add
int3
sti
add
add
mov
fisubl
xchg
add
scas
std
in
pusha
mov
add
pusha
popf
in
xchg
add
cwtl
mov
add
insb
lret
fistpll
adc
pushl
push
shl
dec
shr
pop
call
push
push
push
push
push
push
call
xchg
pushf
fiadds
add
stc
add
nop
mov
in
data16
mov
add
pop
frstor
jb
add
pusha
add
jp
add
add
add
mov
push
insb
add
jl
popa
add
pop
jns
add
out
add
fs
xchg
add
mov
adc
call
push
push
push
call
roll
add
testb
xchg
cmpsb
add
out
mov
jae
sahf
add
rolb
add
popa
aad
cli
enter
add
sahf
xchg
jae
add
cmpsb
imul
imul
gs
out
jae
add
pop
xchg
mov
aam
bound
jmp
push
push
push
push
push
push
push
push
push
push
call
adcb
imul
add
xchg
add
mov
jmp
add
add
mov
out
popl
fwait
loope
lret
mov
lods
test
mov
clc
add
add
add
jo
popl
cmpsl
push
mov
roll
add
test
into
add
lea
add
xchg
js
add
mov
or
cld
lea
pop
cmpl
jne
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
push
jmp
repnz
push
std
add
mov
stos
add
fiaddl
lret
add
scas
pop
fwait
mov
add
mov
mov
add
fwait
add
fs
xchg
add
add
add
add
pop
mov
xchg
add
add
test
add
mov
mov
in
fsubrl
lea
pop
mov
push
push
push
dec
push
sub
add
inc
shr
sub
not
sub
dec
pop
pop
push
ror
pop
pushl
call
push
push
sub
sub
dec
rol
push
push
pop
add
lea
sub
add
rol
lea
dec
pop
shl
pop
push
sub
pop
pushl
push
push
lea
push
push
lea
push
push
call
mov
insb
out
popa
lea
add
enter
fildl
add
add
repnz
mov
sti
add
push
add
add
fadds
push
outsl
add
mov
mov
lret
les
mov
add
call
push
push
inc
sub
shl
add
push
and
add
not
inc
shr
sub
shl
shl
shr
pop
inc
add
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
rolb
jo
add
add
push
add
pop
filds
aad
xchg
lods
shl
add
cli
sahf
xchg
add
jnp
add
loop
add
loope
fiadds
int
add
add
add
lock
add
add
add
add
add
ljmp
add
add
add
fs
nop
add
call
sahf
insb
add
push
mov
pop
pushl
push
xor
pop
call
push
add
add
pop
call
push
push
ror
lea
push
push
pop
add
shl
sub
shr
pop
xor
add
pop
push
push
push
push
push
push
lea
push
push
call
xchg
xlat
push
mov
jge
aad
repnz
scas
mov
push
mov
add
movsl
push
lock
add
jle
mov
add
out
add
add
mov
lea
mov
jmp
add
add
add
add
add
add
push
int
add
add
add
mov
mov
lea
pop
pushl
call
push
lea
push
push
push
lea
push
call
mov
mov
sti
aam
add
add
pushf
add
mov
pop
cwtl
add
lock
ret
mov
jb
add
add
nop
in
negl
outsl
jae
insb
add
jl
stc
jge
cld
lea
pop
call
push
push
shr
push
or
not
add
sub
sub
dec
lea
sub
sub
sub
sub
pop
lea
pop
push
lea
sub
rol
pop
pushl
push
push
push
push
push
push
call
pop
lret
add
add
pop
nop
int
push
pop
push
fidivrs
add
int
add
popa
add
mov
xchg
add
pop
mov
xchg
jmp
addb
add
mov
pusha
sbb
fldt
add
push
xor
pop
call
push
push
push
push
pop
add
xor
sub
dec
ror
ror
rol
pop
not
pop
push
ror
ror
inc
pop
pushl
call
push
push
push
push
push
push
push
call
add
call
in
lods
add
cltd
ret
lods
mov
pop
add
rolb
add
add
int3
add
push
rol
test
pop
pusha
push
repnz
xchg
imul
sti
out
jnp
jbe
jle
pop
cwtl
xlat
add
fmull
shr
clc
adc
mov
mov
add
shl
shr
push
and
add
xor
sub
not
lea
sub
pop
dec
shl
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
fs
add
add
in
mov
add
push
jge
gs
jecxz
mov
jo
shll
add
add
add
testl
add
add
pop
int
add
add
mov
cld
add
in
icebp
into
in
jbe
add
mov
jne
stos
push
add
roll
add
add
cmc
jecxz
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
rcl
push
xchg
add
add
out
incb
rolb
popa
add
jns
shl
add
stos
mov
mov
add
xchg
jmp
xchg
adcl
mov
scas
add
add
jle
add
add
mov
add
add
add
lea
add
addr16
add
jbe
mov
lea
pop
lea
push
rol
not
pop
push
push
shr
pop
call
push
push
sub
push
or
inc
add
ror
sub
sub
sub
pop
sub
sub
add
pop
push
inc
inc
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
fcoml
add
jno
add
int
addb
jge
add
mov
mov
fstp
jge
gs
cld
sahf
add
jo
add
add
add
loopne
cld
cmpsl
push
int
add
add
xchg
out
lcall
mov
fmull
push
sub
add
ds
subl
jp
je
xchg
mov
icebp
add
add
add
jno
js
data16
add
roll
add
loop
add
jge
pop
push
aam
idiv
add
add
add
jno
test
add
movsl
addb
loop
frstpm(287
add
nop
add
movsl
fiadds
add
stos
xchg
add
lock
lea
pop
call
push
push
shl
inc
add
sub
push
or
inc
add
add
shl
ror
sub
dec
dec
add
pop
pop
push
ror
pop
pushl
push
sub
add
pop
call
push
pop
call
push
push
add
xor
push
or
not
add
lea
xor
shr
sub
sub
lea
pop
xor
dec
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
data16
add
icebp
movsb
addl
add
add
jns
add
mov
jb
xchg
add
add
fildl
fiaddl
add
add
in
add
add
jmp
add
outsl
pushf
sti
scas
in
mov
lea
pop
pushl
push
lea
not
rol
pop
call
push
dec
pop
call
lea
push
push
rol
add
shl
push
push
pop
add
sub
shr
xor
xor
pop
add
shl
sub
pop
push
push
call
add
add
add
loopne
add
mov
gs
mov
bound
add
add
add
xchg
mov
out
add
add
ret
mov
rcll
clc
sahf
add
sahf
int
pop
movsl
jp
mov
add
add
mov
cwtl
in
mov
lea
pop
pushl
push
ror
add
pop
call
push
inc
pop
push
push
lea
push
push
push
lea
push
call
popf
xchg
xlat
add
add
push
in
add
jnp
fldl
add
in
add
jbe
xchg
add
add
je
mov
test
icebp
cli
add
rolb
mov
testl
test
add
mov
add
add
add
jmp
pop
xchg
add
add
mov
roll
sti
mov
pop
call
push
push
shl
add
not
push
xor
add
ror
shr
sub
ror
sub
pop
sub
rol
not
ror
pop
push
shl
inc
sub
pop
pushl
push
push
push
push
call
stos
aad
mov
mov
xchg
nop
add
imul
mov
add
add
add
pushf
enter
push
rolb
pusha
ljmp
add
add
add
add
testl
ljmp
call
push
push
push
push
push
push
push
call
add
push
test
jno
add
add
add
rolb
out
in
add
mov
add
jge
add
add
add
je
into
mov
icebp
shl
add
add
jle
xchg
stos
in
lahf
arpl
int3
lea
pop
call
push
push
lea
push
push
push
push
lea
push
call
add
jl
jmp
add
aam
lea
fcomi
jle
add
push
add
mov
lds
mov
add
add
mov
arpl
testl
push
push
xor
xor
push
and
add
shr
inc
ror
sub
ror
add
not
pop
inc
pop
push
rol
not
shr
pop
pushl
push
push
push
push
call
cltd
jne
add
mov
add
pusha
add
mov
xchg
out
in
cmc
lret
push
xchg
push
add
add
push
add
add
add
outsl
add
into
mov
cli
popl
add
add
fmull
cmp
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
test
loopne
jbe
not
add
xlat
xchg
repnz
icebp
add
xchg
imull
lea
fcompl
mov
push
add
push
add
jbe
mov
xchg
clc
add
add
fdivr
mov
stos
add
shr
add
fbld
sti
cli
addl
sub
add
mov
pushl
push
inc
pop
call
push
push
lea
push
or
inc
add
inc
rol
sub
add
dec
pop
xor
pop
push
push
push
push
push
push
push
lea
push
call
scas
add
clc
add
add
add
add
hlt
add
enter
xchg
add
mov
leave
popfw
filds
jle
lds
stc
push
add
clc
jp
add
sahf
mov
add
in
mov
mov
lea
pop
pushl
push
push
push
lea
push
call
add
jecxz
repnz
add
stc
push
jb
movsl
mov
mov
out
lods
pop
popa
add
pop
add
add
mov
add
jp
je
jae
add
add
mov
lods
outsl
add
repnz
not
js
xchg
add
scas
pushf
into
aad
movsb
jecxz
add
mov
lea
pop
call
push
push
shl
add
push
push
pop
add
xor
ror
inc
sub
sub
sub
add
add
pop
rol
not
pop
push
push
sub
sub
push
or
not
add
add
sub
rol
dec
lea
sub
pop
add
shr
rol
pop
push
not
shr
sub
pop
call
push
push
shl
sub
push
and
add
inc
xor
dec
sub
shl
add
shl
pop
ror
pop
push
push
push
lea
push
call
test
aam
out
popa
add
add
movsb
add
jb
test
mul
add
push
rolb
mov
pop
add
jp
scas
add
add
mov
add
add
ljmp
repnz
pop
add
jmp
iret
mov
add
add
add
notb
xchg
lahf
lods
add
add
add
add
data16
jne
call
push
lea
push
push
push
push
lea
push
call
add
fs
add
add
pop
add
incb
fiaddl
mov
jns
jp
lret
xchg
jl
xorb
pop
fimuls
ja
add
xchg
add
pop
icebp
add
mov
leave
scas
incb
mov
addr16
mov
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
push
call
popf
push
add
lahf
add
add
in
xchg
add
iret
add
test
pop
aad
fiaddl
mov
add
mov
fwait
mov
add
out
xchg
xchg
popa
aad
cwtl
jo
jae
cmpsb
lea
add
les
pushf
and
call
rcrb
test
call
shl
sub
rol
pop
push
push
push
push
push
lea
push
call
cmpsl
add
fldl
pop
clc
out
add
mov
add
aad
in
addl
add
movb
imul
loope
xchg
lods
in
scas
incb
mov
add
add
jbe
loop
add
add
add
add
fistpl
jl
add
mov
pop
add
cwtl
mov
xchg
add
pop
add
add
movsl
pop
icebp
mov
lea
pop
push
push
push
not
inc
dec
pop
push
push
push
push
push
call
add
xchg
cltd
in
jmp
mov
in
mov
add
arpl
mov
mov
add
popf
push
sbb
stc
add
add
xchg
add
mov
mov
add
add
xchg
std
add
add
rolb
jne
add
pop
add
add
add
cmpsl
lods
add
add
notl
add
mov
mov
add
cld
mov
lea
pop
push
push
shl
shr
pop
push
push
push
push
push
push
call
add
mov
lea
mov
stos
add
pushf
les
add
add
jp
test
aad
test
mov
aad
add
imul
add
aam
bound
push
push
inc
lea
pop
pushl
push
shr
pop
push
push
lea
push
call
roll
push
add
xchg
mov
cltd
faddl
mov
add
add
add
loopne
fildl
xchg
movsl
pop
add
add
add
mov
imul
jbe
flds
out
movsl
cmpsl
add
imul
add
lock
add
leave
insb
lret
xchg
rolb
lahf
aam
loope
addb
xchg
mov
test
mov
lea
pop
call
push
push
shl
sub
push
xor
add
sub
inc
pop
pop
push
add
pop
pushl
push
lea
push
push
push
call
leave
mov
jno
jns
add
push
adc
call
add
add
add
scas
add
popf
jl
add
mov
push
in
add
add
add
add
sbb
sti
add
les
add
loop
into
faddl
les
mov
sbbb
add
mov
add
add
push
mov
lea
pop
call
push
push
call
in
add
hlt
fistps
sahf
add
xchg
mov
sub
in
add
stos
mov
addl
movsl
in
push
xchg
int
clc
add
mov
xchg
in
fcomp
jle
fdivrp
lahf
stos
add
out
leave
push
add
test
scas
filds
xchg
imul
push
add
add
add
xchg
movsl
gs
aam
bound
pop
call
push
dec
rol
rol
pop
mov
push
shl
add
xor
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
xchg
add
std
jbe
mov
xchg
add
add
jno
in
jnp
add
push
add
add
add
pop
add
fildll
add
add
mov
arpl
dec
jne
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
aad
jge
fwait
push
xchg
mov
pop
mov
lahf
add
out
incb
add
stc
jmp
add
in
add
add
add
add
add
jecxz
xchg
rolb
lahf
test
jns
mov
xchg
add
push
jp
xchg
add
in
out
jmp
mov
mov
lea
jo
add
ret
call
cld
lea
pop
jmp
push
push
lea
push
push
push
push
push
call
add
push
jns
jnp
cwtl
add
nop
mov
jp
cwtl
push
mov
gs
cmpsl
lret
jns
xchg
mov
add
insb
outsl
cltd
into
add
mov
test
xchg
loopne
add
add
add
leave
mov
nop
push
xchg
scas
xchg
add
jl
add
add
add
imul
sahf
mov
add
add
aam
lods
xchg
pop
call
push
push
dec
inc
rol
push
xor
add
sub
sub
rol
pop
ror
sub
dec
pop
push
add
pop
pushl
call
push
inc
not
ror
pop
push
call
push
lea
shl
inc
pop
mov
push
sub
lea
dec
pop
lea
push
push
inc
push
or
inc
add
shr
lea
sub
add
add
pop
add
add
dec
pop
push
lea
dec
pop
pushl
push
sub
pop
call
push
push
call
xchg
add
pop
stos
mov
add
mov
xchg
add
jne
lcall
add
jno
push
mov
mov
add
in
in
fwait
jle
add
repnz
bound
pop
push
push
push
push
push
lea
push
push
push
call
ljmp
stos
add
xorb
xchg
add
add
lods
mov
lret
push
add
add
add
add
xchg
add
bound
stos
add
push
add
scas
sti
add
movsl
jnp
jno
add
rcl
add
mov
add
add
test
add
pop
add
push
lea
lahf
push
xchg
mov
lea
pop
call
push
push
shr
xor
push
sub
add
xor
sub
pop
sub
not
ror
pop
push
shl
pop
pushl
call
push
xor
sub
pop
call
push
lea
push
push
push
push
lea
push
lea
push
call
loopne
add
xchg
in
add
mov
pop
add
mov
add
add
mov
fs
cld
fisubs
mov
add
add
jb
mov
add
fs
lea
pop
mov
push
rol
rol
rol
shr
pop
lea
push
push
sub
ror
sub
push
push
pop
add
ror
sub
lea
shr
pop
lea
pop
push
lea
sub
not
pop
pushl
push
sub
inc
xor
lea
pop
call
lea
push
lea
pop
push
push
push
xor
ror
pop
push
push
push
push
lea
push
push
call
add
movsl
roll
out
mov
add
aam
add
cltd
ja
pop
pop
pop
cwtl
jle
push
add
lret
pop
ljmp
mov
mov
cli
add
xchg
je
xchg
add
jo
in
xchg
add
js
add
jmp
into
add
clc
orb
jmp
int3
lea
pop
pushl
push
push
shr
push
and
add
sub
not
shl
pop
ror
pop
push
push
push
push
push
lea
push
lea
push
call
mov
cmpsb
cwtl
push
jmp
fidivrl
add
hlt
flds
repnz
add
popa
insb
mov
xchg
add
mov
jge
mov
mov
int3
pusha
test
fwait
test
mov
add
fildl
add
icebp
mov
jbe
mov
xchg
testb
mov
lea
pop
push
push
not
dec
xor
sub
pop
call
push
push
not
not
rol
push
and
add
xor
sub
inc
rol
ror
pop
ror
rol
pop
push
rol
pop
pushl
push
push
lea
push
push
push
lea
push
call
add
push
add
add
test
add
mov
mov
add
js
mov
leave
add
icebp
fiadds
add
cli
out
add
add
add
add
icebp
add
mov
mov
lea
pop
call
push
push
lea
push
push
push
push
push
call
add
pop
xchg
cmpsl
add
push
into
xchg
mov
add
pop
test
insb
add
fcompl
add
add
add
imul
add
add
mov
sarl
mov
pop
call
push
push
add
xor
push
sub
add
rol
inc
add
sub
not
pop
dec
inc
lea
pop
push
sub
inc
xor
pop
pushl
push
push
push
push
push
push
call
jge
in
mov
arpl
nop
add
add
data16
jns
add
add
add
mov
adcl
add
add
add
cld
lea
pop
call
push
push
push
push
push
push
push
push
push
call
outsl
add
mov
add
add
add
pop
into
add
mov
fiadds
out
in
add
xchg
lea
add
add
jmp
add
mov
lea
pop
call
jmp
push
push
push
lea
push
call
jmp
rolb
mov
nop
hlt
shll
test
shlb
add
add
add
pop
lret
mov
into
add
add
mov
ja
jae
loope
mov
adc
pushl
mov
push
shl
pop
jmp
push
push
add
rol
sub
push
or
not
add
add
sub
shl
ror
add
pop
shl
shl
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
add
pop
fwait
test
add
add
xchg
add
add
add
mov
add
add
add
jecxz
add
in
add
add
test
into
add
enter
stos
add
pop
add
mov
add
add
add
xlat
lods
lret
popa
pop
out
add
imul
bound
pushl
push
shl
pop
call
push
add
inc
pop
push
call
push
push
shr
push
or
inc
add
add
dec
sub
shr
pop
sub
inc
pop
push
xor
pop
pushl
call
push
shr
ror
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jmp
add
add
push
jbe
aam
stos
std
scas
add
add
add
pop
icebp
ficoml
xchg
je
add
add
loop
fcompl
xlat
lods
add
add
loop
add
iret
jo
imul
mov
push
call
test
add
mov
fisubrl
sarl
add
scas
add
add
pop
call
leave
push
add
dec
pop
add
push
push
lea
push
call
mov
mov
add
rolb
mov
movl
add
stos
popf
aam
pushf
mov
int3
add
xchg
mov
fiaddl
add
add
mov
cltd
mov
faddl
test
push
fwait
add
out
fisubl
lret
push
jle
roll
mov
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
call
loop
add
fsubrs
insb
fdivrl
add
call
add
add
add
ljmp
add
call
mov
add
leave
sti
mov
add
xchg
insb
add
lea
pop
pop
push
xor
rol
xor
pop
pop
push
shl
xor
lea
pop
leave
push
push
push
push
lea
push
push
lea
push
push
push
push
call
xlat
pusha
call
fnstcw
add
add
cltd
test
add
bound
jnp
add
testb
fimull
out
add
mov
mov
jmp
popf
call
in
add
pop
cltd
add
popf
jge
test
add
mov
pop
add
test
add
fstps
add
push
fstpt
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
mov
repnz
iret
push
aad
add
add
add
add
push
push
imul
pop
gs
stos
add
lea
cld
add
mov
add
lods
cmpsl
rolb
add
add
jno
push
add
testb
ja
push
ror
ja
stos
add
mov
ja
data16
pop
ret
push
dec
dec
pop
leave
push
push
call
js
and
enter
clc
enter
add
ljmp
lods
add
test
int3
add
lea
in
loope
fsubrs
add
mov
ja
add
leave
cmpsl
imul
ljmp
rolb
movsb
imulb
add
jb
xchg
scas
add
pop
add
fldcw
add
pop
add
mov
lea
pop
ret
push
sub
not
pop
push
push
inc
pop
mov
push
add
pop
cmpl
jne
mov
push
sub
inc
sub
pop
jmp
push
add
add
add
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
addr16
cwtl
add
add
xchg
test
ret
add
add
add
add
jp
in
fldl
jmp
aam
movsb
add
mov
jbe
mov
jns
jl
add
mov
add
add
add
cmpsl
add
into
stos
insb
int3
push
pusha
sub
and
push
lea
push
push
push
lea
push
push
push
push
push
call
add
lret
subl
add
fidivl
leave
push
add
xor
add
push
pop
fimull
add
add
shl
add
std
add
add
les
lcall
jge
add
add
jl
test
add
into
add
repnz
cltd
addl
pop
xor
push
ror
dec
add
dec
pop
xor
push
push
lea
push
call
add
add
icebp
add
add
mov
mov
add
addr16
mov
xchg
push
add
les
jp
add
mov
add
ljmp
add
mov
mov
add
jp
out
mov
lea
pop
add
push
push
lea
push
call
movl
out
add
enter
roll
mov
pushf
add
add
jmp
add
add
add
add
push
mov
add
mov
add
xchg
pop
add
add
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
loope
scas
filds
jp
jmp
add
imul
add
cmc
pop
add
add
xchg
add
loope
leave
add
mov
lea
pop
dec
push
push
lea
push
push
lea
push
push
call
push
add
shrl
pusha
jb
add
les
jle
mov
and
enter
add
mov
add
std
xchg
add
sbb
add
je
jle
shrl
pop
sahf
add
add
int3
filds
cmpsl
add
add
add
shr
push
push
add
add
in
call
push
mov
xchg
jge
mov
lea
pop
sub
push
sub
xor
pop
jmp
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
add
insb
stos
popf
push
movb
add
add
jne
lds
mov
add
add
push
add
xlat
add
push
icebp
add
call
add
add
movsb
popa
xlat
flds
cmpsb
lods
jle
mov
add
push
add
pop
add
mov
lea
pop
sub
pushl
push
sub
add
dec
sub
pop
pop
push
shl
ror
pop
sub
push
push
call
mov
mov
bound
xchg
add
sahf
js
test
add
mov
mov
add
stc
add
mov
ja
xchg
add
add
cld
add
pop
outsl
repnz
pop
mov
lea
pop
cmp
jne
mov
push
add
rol
ror
add
pop
lea
push
add
pop
sub
push
rol
sub
lea
pop
mov
shr
push
inc
pop
add
push
sub
add
inc
add
pop
sub
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
out
add
mov
push
mov
xchg
add
je
mov
pop
add
shll
add
cmc
popa
leave
ja
out
fiadds
mov
fisubl
push
aad
pop
add
add
js
push
add
mov
cmc
jl
add
push
mov
add
mov
insb
test
mov
lea
pop
pushl
push
ror
pop
pop
push
push
push
push
lea
push
call
int
rclb
fsubr
mov
stc
xchg
add
push
jge
test
jecxz
add
pushf
add
pop
add
shlb
pop
add
int
scas
fwait
scas
add
iret
loope
fst
add
add
add
arpl
ret
add
loopne
add
jl
add
int3
lea
pop
shr
push
lea
push
lea
push
push
lea
push
call
aad
fs
xchg
je
mov
add
repnz
aam
int
enter
add
add
mov
mov
pushf
mov
mov
jno
movb
shl
stos
add
stos
add
mov
add
rcr
addb
pusha
add
pop
and
push
shr
pop
sub
push
inc
rol
pop
cmp
jne
push
push
push
push
push
push
push
call
add
lods
roll
mov
add
push
add
faddl
cwtl
testl
loopne
outsl
add
add
pop
pop
movsl
mov
fdivr
lods
add
pop
add
push
push
push
xchg
push
add
movsb
add
mov
loop
icebp
sti
mov
insb
xchg
imul
in
xchg
scas
add
pop
jle
fmull
ret
push
inc
shl
lea
sub
pop
push
push
sub
not
pop
mov
push
pop
add
push
lea
xor
pop
push
push
push
push
push
push
push
push
push
call
clc
add
xchg
mov
add
pop
cmpsb
add
add
add
xchg
movsb
add
in
flds
cld
add
xchg
rcll
mov
jnp
add
xchg
stos
add
add
push
add
ljmp
lea
pop
push
push
push
push
push
lea
push
push
call
add
jae
add
xchg
pushf
add
int3
out
add
jle
nop
pushf
push
cld
add
add
add
lret
push
popl
add
mov
cmp
insb
push
pusha
pop
rcll
add
adc
push
add
aad
insb
add
loopne
out
sahf
loope
sti
xorl
lea
pop
push
push
shl
pop
push
push
push
push
push
push
call
push
add
mov
test
fcomp
lret
pop
pop
add
test
cld
pop
add
fadds
out
cwtl
mov
add
xchg
add
mov
nop
in
add
pop
fwait
in
xchg
bound
push
add
add
out
fdiv
add
incb
addr16
ficompl
add
add
lea
pop
mov
push
lea
push
push
lea
push
lea
push
push
push
call
test
mov
add
add
push
add
scas
add
hlt
add
hlt
out
add
xchg
test
nop
lea
mov
data16
xchg
add
mov
add
push
in
xchg
mov
xchg
add
add
insb
fimull
pop
lea
sub
push
pop
mov
push
lea
sub
sub
pop
shr
push
xor
dec
pop
add
push
lea
push
push
push
lea
push
push
push
push
call
add
leave
mov
fsub
add
lods
push
jecxz
jmp
jbe
fstps
pop
popf
int3
push
add
pop
add
ljmp
ret
add
add
add
lahf
add
xchg
add
push
int3
mov
lea
pop
mov
push
push
push
call
fbld
lock
adc
add
push
jns
add
push
fldl
push
addr16
mov
jns
jl
mov
add
add
push
add
mov
jle
xchg
jo
add
push
add
add
leave
roll
clc
or
mov
lea
pop
add
push
sub
pop
mov
add
push
not
pop
xor
mov
push
add
not
shl
not
pop
and
rol
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
rolb
add
add
xor
push
gs
hlt
jne
add
fcmovne
mov
out
fsubrs
cmp
add
fnstcw
add
add
push
add
add
rclb
push
jb
mov
lea
pop
rol
push
dec
pop
xor
push
push
push
lea
push
call
faddl
into
add
cld
stc
lods
mov
les
add
add
add
xchg
push
add
jnp
add
add
lock
push
add
addb
add
mov
jns
cld
lea
pop
inc
push
shr
pop
cmpb
jne
push
push
lea
push
call
add
int
repnz
add
pop
add
add
add
fadds
movsl
lods
lret
add
lret
jmp
add
push
mov
ja
mov
test
imul
fwait
mov
add
jl
mov
cmc
jbe
in
add
push
add
add
add
mov
lea
pop
add
push
push
push
call
mov
add
pusha
enter
pushf
jbe
push
add
out
add
repnz
mov
movsl
add
add
cwtl
pop
push
iret
pop
add
into
add
mov
movb
jp
jge
out
nop
pop
int
mov
or
cmp
je
push
push
push
push
call
in
jnp
into
int3
mov
push
rcl
push
loope
jae
add
pusha
xchg
ret
add
flds
push
xchg
add
jo
add
add
lret
add
mov
loope
lcall
add
add
add
cli
mov
push
add
fdivrp
add
push
scas
repnz
les
ret
adc
jnp
add
test
ror
pop
xor
push
push
push
call
cltd
add
cmc
sti
shl
mov
push
aam
out
clc
mov
scas
iret
lock
push
add
add
xchg
in
add
push
pop
hlt
mov
fnstsw
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
rolb
pop
push
add
mov
pop
add
add
call
add
iret
jbe
fisubrl
add
add
lret
popa
add
popa
mov
jge
add
add
loope
add
add
aam
lds
add
jecxz
add
loope
push
iret
mov
iret
stc
push
add
lahf
testl
push
lea
push
call
mov
mov
mov
in
enter
movsl
imul
ljmp
jo
nop
add
push
lahf
add
popa
add
mov
add
push
add
jne
xchg
mov
lea
pop
pop
push
push
push
call
mov
add
test
mov
mov
push
pop
fsubp
add
mov
enter
repnz
lods
mov
test
ljmp
add
mov
add
mov
add
int3
jnp
cmc
neg
jno
add
in
mov
mov
lea
pop
pop
pop
push
sub
sub
pop
leave
push
lea
push
push
push
call
test
out
out
xlat
fcom
mov
addb
fucomip
scas
insb
add
add
sti
add
mov
add
iret
add
enter
jp
mov
jp
test
add
add
outsl
add
add
fwait
popa
fstps
imul
adc
or
push
add
inc
pop
mov
push
shr
dec
dec
pop
add
push
push
lea
push
push
call
in
push
add
fs
add
mov
xor
add
add
push
add
xchg
mov
sti
pushf
ja
mov
out
mov
mov
push
add
or
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
int
push
push
xchg
add
addb
mov
xchg
xlat
cltd
test
add
out
add
in
pusha
add
add
pop
mov
add
push
add
movb
mov
lea
pop
add
mov
push
sub
shr
pop
cmpw
push
push
push
push
push
call
mov
mov
lds
pop
add
popf
call
mov
pop
jns
pop
add
add
add
push
jae
xchg
lods
add
repnz
testb
js
movsl
imul
add
add
mov
cmpsl
out
rorb
pop
pop
push
lea
not
pop
pop
push
add
pop
mov
push
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
jo
add
lret
add
pop
add
mov
imul
add
add
mov
mov
add
add
add
fcompl
add
add
add
sti
iret
movsb
add
add
add
scas
pop
add
xor
add
out
mov
mov
jp
add
add
jae
mov
incb
pop
add
pop
call
push
add
add
pop
xor
push
dec
sub
pop
pop
push
push
push
call
push
push
add
add
xchg
jne
mov
mov
popa
pushf
fsubrl
mov
add
mov
add
loop
int
add
mov
mov
lea
pop
pop
pop
push
sub
rol
lea
not
pop
pop
push
rol
shl
inc
pop
pop
push
sub
pop
leave
push
lea
sub
xor
pop
ret
push
lea
push
call
push
sti
add
insb
add
add
push
add
into
mov
add
add
add
add
add
mov
mov
addl
mov
add
add
into
add
add
mov
iret
mov
add
pop
push
mov
push
push
call
into
add
add
add
xchg
add
rolb
xchg
out
or
sbb
add
outsl
lods
fucom
add
add
addr16
add
out
jae
imul
fs
enter
xchg
rolb
add
fcomip
shrb
mov
nop
fildl
add
add
lea
pop
add
push
push
xor
pop
push
push
not
pop
push
push
push
push
lea
push
push
call
popf
add
mov
mov
add
js
add
lcall
fwait
add
mov
mov
jbe
test
xorl
cmpsl
clc
add
mov
xchg
rcrb
add
ja
pushf
in
mov
add
add
add
cmpsb
add
add
add
add
mov
lea
pop
mov
push
push
push
call
pop
add
mov
add
jae
mov
call
shr
add
add
into
outsl
add
stos
or
mov
add
pop
add
outsl
cltd
ja
xchg
xchg
pop
add
add
pop
add
mov
add
add
mov
add
mov
pushf
xchg
rcrl
mov
call
addr16
push
push
push
push
push
push
call
add
cld
sti
add
loope
nop
add
pop
out
lcall
movsl
jae
repnz
popf
sar
add
push
add
add
mov
pop
popf
jle
incb
push
addl
add
enter
pop
test
add
lock
aad
ficompl
mov
lea
pop
pop
lea
push
sub
ror
pop
sub
push
push
push
push
push
push
call
jno
add
jl
push
add
mov
add
incb
add
mov
pop
int3
mov
add
lea
sbbb
add
fwait
pop
int
ljmp
add
mov
negb
add
clc
lea
movl
xchg
data16
lock
mov
loope
add
add
pop
mov
push
push
lea
push
call
mov
ret
fiaddl
add
in
add
add
imull
fs
test
negb
fildl
add
shll
mov
push
stc
jnp
pop
loope
rolb
cmc
add
pusha
add
imul
mov
mov
lea
add
flds
repnz
jmp
addb
jb
push
add
lret
sti
mov
lea
pop
shr
push
rol
sub
add
pop
add
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
jmp
add
call
mov
xchg
lea
add
mov
add
mov
jne
add
lods
add
stos
popa
add
popa
jl
pop
xchg
pusha
add
pop
shll
outsl
xchg
shlb
fiadds
mov
add
sub
fsts
ret
pop
pushl
popl
push
push
push
push
call
add
mov
add
add
push
mov
jb
mov
enter
mov
pop
add
mov
into
add
xchg
add
pusha
jb
mov
add
mov
jle
pop
stos
jno
fsubrp
add
add
add
iret
leave
pop
xchg
std
pop
add
jns
les
lcall
add
mov
mov
mov
lea
pop
mov
add
push
sub
not
sub
shl
pop
xor
push
xor
add
pop
lea
mov
push
push
push
call
je
add
mov
pop
xchg
lret
xchg
je
jne
jmp
add
add
add
add
add
add
int
jecxz
xchg
popf
int
ror
push
add
add
add
mov
add
add
fiadds
add
push
mov
test
add
mov
lods
lret
pop
xchg
push
add
or
add
push
push
push
push
push
lea
push
push
call
test
mov
pop
add
add
add
jb
bound
popl
push
add
xchg
lods
add
add
out
sti
mov
add
add
add
add
loope
xorb
jo
mov
lea
pop
xor
rol
push
pop
nop
push
push
lea
push
push
push
push
push
push
call
addl
loope
pop
pop
add
sahf
sti
add
push
popa
fistl
add
mov
mov
roll
add
add
jecxz
push
add
add
roll
add
add
add
cmpl
lea
pop
nop
push
push
lea
push
push
lea
push
lea
push
push
call
cli
xchg
add
add
cld
push
in
pushf
add
cld
add
add
scas
add
xorl
les
mov
push
jo
add
out
mov
outsl
add
jo
aam
bound
xor
push
push
lea
push
lea
push
lea
push
call
add
filds
add
testb
add
add
add
add
mov
add
mov
hlt
mov
add
push
mov
roll
add
add
pop
in
rolb
add
add
in
mov
test
add
add
push
movsl
add
mov
lea
pop
nop
push
push
push
lea
push
push
call
mov
fdivrl
add
push
add
lcall
jnp
add
pop
add
cld
add
add
pop
add
imul
test
addl
mov
mov
loope
test
hlt
add
mov
add
add
test
rolb
imul
push
js
add
mov
lea
pop
nop
push
lea
push
call
popa
jno
add
lock
add
repnz
add
add
mov
add
xchg
add
jp
add
call
add
movb
test
add
scas
add
jb
cwtl
leave
shlb
pop
pop
imul
add
mov
lea
pop
inc
push
shr
sub
pop
nop
nop
push
push
push
call
in
test
add
add
stos
imul
lret
add
orl
out
pop
jne
loope
lret
fmuls
add
add
jne
aad
outsl
flds
add
mov
add
ror
add
add
add
mov
lea
pop
cmpb
jne
add
push
shr
pop
nop
push
lea
push
push
push
push
push
push
call
push
pushf
std
add
iret
lea
add
mov
jmp
add
mov
add
mov
mov
add
mov
jb
push
push
popl
add
fldl
stos
add
xchg
pop
nop
cmp
je
push
push
call
out
add
rorb
add
aad
jns
gs
pop
pop
cmpsl
add
add
pop
std
add
in
add
int
call
lret
pop
jnp
test
mov
add
jnp
add
lods
add
pop
push
popf
add
jl
add
add
into
in
scas
xchg
mov
mov
cli
add
out
mov
in
je
add
stos
lea
mov
fmull
nop
push
sub
pop
inc
push
lea
push
push
push
push
push
push
push
call
js
rol
push
jno
add
add
add
add
hlt
out
add
jae
ret
add
aam
leave
testb
add
add
add
jecxz
add
out
lock
push
add
push
push
add
add
mov
js
test
add
nop
add
xchg
jl
hlt
add
bound
pop
nop
push
sub
pop
nop
push
shr
pop
cmp
jb
push
lea
push
push
lea
push
push
call
ja
add
sahf
mov
lods
ja
mov
sahf
mov
int
mov
add
popa
add
add
add
lds
roll
add
sahf
add
std
add
mov
mov
lea
pop
xor
push
inc
not
sub
ror
pop
jmp
push
lea
push
push
push
push
lea
push
push
call
addr16
add
mov
mov
push
add
add
jge
lahf
add
loopne
push
out
mov
pop
mov
mov
add
jnp
leave
icebp
pop
sahf
add
add
pop
mov
push
push
push
lea
push
call
lret
add
lcall
push
mov
cwtl
add
cwtl
flds
js
les
add
pop
xchg
mov
add
pop
les
add
out
cld
js
mov
add
mov
mov
add
add
add
add
add
mov
lea
pop
add
push
add
inc
shl
pop
movzwl
push
lea
push
lea
push
push
push
push
push
push
call
movsb
add
add
mov
lret
stos
add
mov
mov
movb
add
lods
mov
push
mov
in
mov
jge
mov
popa
icebp
shl
out
xchg
add
add
xchg
into
push
cli
loop
add
push
lock
out
loopne
mov
jp
mov
pop
je
lods
fcompl
lea
pop
mov
add
push
lea
push
push
call
test
add
add
ja
add
cli
lret
out
lret
xchg
add
add
out
add
in
imul
xchg
jge
add
add
jp
push
fildl
outsl
add
enter
mov
add
jae
add
fucompp
rolb
add
add
add
sahf
jmp
addr16
mov
push
push
push
push
push
lea
push
push
push
call
out
xchg
mov
mov
scas
mov
arpl
push
add
orb
lds
add
add
hlt
add
int
push
jo
out
movsb
fnstenv
lret
push
add
pop
add
out
add
add
add
add
add
addb
neg
mov
lea
pop
xor
xor
push
push
push
lea
push
call
mov
fadds
scas
add
lea
jbe
loop
add
add
cmpsl
repnz
mov
lods
push
jb
add
add
add
enter
sub
add
mov
mov
mov
add
pop
pop
add
pop
xchg
scas
jne
rcrb
add
mov
les
loope
push
push
push
push
lea
push
push
push
push
push
call
test
push
xchg
jle
add
add
add
add
out
cmc
mov
icebp
xchg
add
add
bound
push
add
enter
add
mov
gs
jo
call
jnp
addb
jns
je
testb
fcomps
subb
add
cld
lea
pop
xor
shl
push
push
push
lea
push
push
push
lea
push
call
push
fbld
xchg
test
ret
add
mov
add
scas
loop
test
add
add
hlt
mov
add
add
stc
push
add
add
test
pop
jle
mov
lea
pop
xor
shl
push
push
lea
push
push
call
mov
outsl
jae
mov
add
mov
add
roll
lret
loop
fidivl
shrb
jle
data16
add
xchg
mov
add
add
add
add
xchg
add
push
testl
nop
mov
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
ja
add
add
mov
cmpsb
repnz
pop
jle
arpl
add
ja
in
jns
popa
xchg
imul
mov
add
jb
movsb
lret
add
mov
mov
lea
pop
add
push
pop
pop
push
ror
ror
lea
pop
pop
push
shr
pop
pop
push
shr
shr
add
shl
pop
pop
push
push
lea
push
call
out
test
add
lds
test
add
add
jl
push
jl
add
cwtl
mov
test
mov
cwtl
mov
mov
mov
lea
pop
leave
push
push
push
push
push
call
in
add
push
cli
add
add
add
add
add
clc
add
add
add
mov
mov
mov
mov
pop
pop
add
add
xlat
add
hlt
add
ret
mov
mov
rolb
movl
add
add
cmc
add
cmpsb
addl
add
mov
test
pop
ret
push
push
shl
not
pop
mov
push
push
push
push
push
call
xchg
add
mov
xchg
bound
rolb
incb
js
add
cld
add
cli
mov
pop
arpl
add
add
push
add
cmpl
lcall
popl
mov
lea
pop
push
push
push
shl
pop
push
push
lea
push
push
push
push
lea
push
push
call
pop
mov
leavew
add
mov
pop
ljmp
jecxz
loop
add
aam
mov
ror
add
xchg
fcomp
out
add
add
mov
add
add
add
xlat
fiadds
pop
push
fbstp
sarb
push
jo
xchg
add
jle
push
add
fiaddl
jb
add
mov
add
fmull
mov
push
lea
push
push
call
add
push
jbe
ja
out
jp
add
xchg
add
add
add
add
add
add
add
add
cltd
lods
bound
push
ja
push
pop
add
stc
rcl
xchg
cwtl
xchg
out
call
add
iret
scas
add
mov
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
call
jns
stos
mov
in
loope
sarb
jp
mov
enter
cld
fcomps
scas
add
add
test
test
jmp
add
add
add
in
shrl
jo
mov
add
adcl
cmc
add
add
les
jge
push
ror
pop
test
je
push
pop
mov
push
add
pop
test
je
mov
push
dec
xor
pop
mov
mov
push
sub
xor
pop
inc
cmp
je
push
inc
xor
not
pop
test
je
push
shl
pop
mov
push
sub
pop
inc
push
xor
inc
lea
shl
pop
cmp
je
push
lea
push
lea
push
push
push
lea
push
call
flds
add
add
mull
mov
add
lds
mov
arpl
add
add
add
add
add
data16
pop
shrb
xchg
mov
lea
pop
test
jne
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
int3
xlat
add
add
addr16
add
addl
jp
add
mov
add
lret
lret
jmp
add
repnz
rclb
lods
add
rolb
repnz
add
add
aam
roll
add
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
add
scas
pushf
add
neg
add
cld
add
add
add
mov
movsl
jne
add
mov
xorl
jecxz
jl
add
sti
jne
add
xchg
mov
lea
pop
pop
pop
push
rol
dec
pop
pop
push
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
idivl
std
iret
mov
mov
int3
add
push
add
add
hlt
insb
addb
add
add
add
add
mov
add
xchg
pop
lods
cli
lahf
pusha
les
out
cwtl
js
mov
iret
add
add
rcrl
add
add
add
push
pop
nop
add
stos
jno
in
add
bound
pop
leave
push
push
lea
push
lea
push
push
push
push
lea
push
call
in
add
out
pop
mov
mov
xchg
jne
mov
add
push
hlt
add
out
mov
mov
xchg
pop
std
add
add
movsl
leave
loopne
add
flds
lret
add
repnz
add
add
add
add
int
int3
lea
pop
ret
push
lea
push
push
push
lea
push
call
jmp
mov
add
add
add
add
add
add
xchg
add
ret
ljmp
add
add
add
aam
mov
add
add
mov
lea
pop
mov
inc
push
push
push
push
push
push
push
push
push
push
call
js
push
add
pop
add
sahf
add
lahf
add
shll
xchg
incb
add
add
cltd
add
popa
scas
mov
push
repnz
add
testl
xchg
xchg
jne
out
pop
mov
xchg
add
add
xlat
fsubrs
rcrb
mov
add
add
rolb
add
sti
out
xchg
cmpsl
popf
add
mov
lea
pop
cmp
jne
push
pop
lea
push
add
shl
pop
mov
push
push
push
push
push
push
call
sbbl
mov
xlat
jmp
movsw
lods
clc
add
push
push
cmpsb
bound
rcrl
mov
add
add
add
stos
lods
add
add
add
lock
mov
mov
mov
pusha
sbb
in
test
add
add
dec
dec
fdivp
push
push
push
push
lea
push
push
lea
push
call
les
les
jno
mov
mov
loope
add
add
add
push
fwait
push
add
add
mov
sarb
add
add
add
data16
jle
addl
leave
mov
sti
add
add
cltd
incb
scas
push
add
add
pop
bound
pop
mov
push
push
push
lea
push
call
add
add
add
outsl
leave
add
in
mov
add
add
xchg
add
pop
movsb
movsl
movb
add
add
add
add
arpl
pop
push
std
add
mov
popl
ret
shrb
scas
pop
fcmovb
in
push
cmc
repnz
mov
add
mov
insb
pop
stos
fiadds
js
add
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
call
testl
addr16
add
add
add
add
add
imul
add
movsl
addl
lods
add
add
add
add
pop
add
add
jae
lock
pop
mov
jle
add
popf
movsl
xchg
xchg
add
mov
sarl
outsl
in
loopne
add
add
in
in
les
loopne
test
inc
add
push
push
push
lea
push
push
push
push
push
call
add
sahf
jge
add
xlat
add
add
add
fadds
xorb
add
loopne
lret
pop
mov
jecxz
add
add
mov
add
imul
int3
mov
pop
xchg
add
add
add
mov
xchg
pop
outsl
in
add
fmuls
pop
test
je
push
pop
mov
push
push
push
lea
push
push
push
push
push
call
mov
add
fiaddl
add
in
lods
add
jns
xchg
add
into
add
jecxz
mov
int3
pop
pop
mov
add
pop
ljmp
add
mov
add
mov
lea
pop
add
push
sub
sub
sub
pop
cmp
je
push
sub
pop
jmp
push
push
lea
push
push
push
push
push
push
call
add
mov
push
aad
add
add
fdivl
add
mov
jecxz
jecxz
shl
add
add
test
add
test
pusha
jecxz
jae
add
int3
scas
icebp
add
mov
hlt
lea
pop
xor
pop
push
add
add
sub
pop
pop
pop
push
inc
rol
pop
pop
push
push
call
add
lds
jmp
add
add
fisttpl
mov
add
fwait
pop
out
add
fildl
pushf
jns
push
lock
bound
xchg
add
arpl
pop
leave
ret
push
push
push
push
push
push
push
call
shlb
lahf
stos
addb
add
add
jno
pop
add
fldl
mov
lcall
add
shll
fwait
xchg
call
int
jae
add
mov
add
pop
add
add
mov
rcll
div
mov
scas
gs
add
xchg
add
pop
lea
push
push
push
call
js
add
add
int
jae
mov
shll
add
add
test
lods
testl
mov
pop
mov
mov
clc
add
push
xchg
add
add
mov
int
in
mov
xchg
jae
int3
lea
pop
pop
push
push
push
push
push
push
push
call
mov
push
fiaddl
jae
movsb
cli
clc
add
add
les
add
push
fs
ret
jne
add
xchg
stc
mov
jle
lret
pop
add
add
fsubl
add
mov
popf
int
pushf
xchg
add
add
mov
push
mov
pop
call
add
add
aam
bound
pop
pop
push
rol
lea
pop
pop
push
sub
ror
add
pop
leave
ret
push
push
push
lea
push
lea
push
push
push
push
call
testl
mov
pop
add
lods
jbe
mov
iret
add
xchg
add
add
fcomi
test
add
addb
add
mov
jmp
loope
jp
add
outsl
leave
add
data16
int3
shll
jmp
int
push
pop
add
stc
add
lret
mov
add
loopne
movsl
test
repnz
mov
testb
fmull
pop
push
lea
push
push
push
push
push
push
call
stos
cmc
fisubrl
xchg
fisubl
xchg
mov
test
add
jnp
js
mov
fildl
js
add
add
add
add
fadds
add
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
call
jb
pop
xchg
add
mov
add
lahf
add
push
pop
add
add
les
add
pop
add
jl
testl
mov
xchg
scas
jmp
std
mov
add
mov
cmpsb
mov
fnsave
xchg
add
add
shll
clc
out
add
cmpsb
add
popa
mov
pop
mov
pop
pop
push
not
dec
add
pop
pop
leave
push
push
lea
push
push
call
fiaddl
jb
mov
in
mov
lock
loope
cmc
xchg
mov
pop
fisttpll
arpl
add
xchg
cmpsb
imull
mov
add
enter
loope
lret
sbbl
rol
mov
add
leave
add
lods
add
add
add
add
mov
lea
pop
ret
test
push
test
jae
test
jb
mov
jae
jae
push
ret
test
jae
and
jb
and
into
inc
and
ret
call
xchg
andb
outsl
mov
mov
jo
sub
daa
sbb
aaa
out
fbld
xor
adc
imul
orl
xor
sarb
pop
sbb
data16
lods
mov
push
pop
jbe
xchg
fcmovnu
mov
imul
movb
lahf
daa
and
jns
mov
sub
inc
mov
call
mov
fs
mov
adcb
mov
mov
shll
mov
mov
movsb
lcall
test
pop
out
mov
mov
out
jno
mov
bound
lds
and
xor
scas
leave
int
sbb
mov
test
das
mov
or
cmpsb
arpl
int3
lret
mov
out
push
push
jne
imul
aam
ds
cltd
fisubs
jge
sahf
in
cld
dec
out
jmp
xor
or
out
or
clc
data16
fimuls
cmp
xchg
jle
mov
mov
jmp
mov
add
inc
cmp
sub
repz
jge
clc
into
push
ljmp
cmp
loopne
lret
mov
xchg
mov
fldl
insb
cmp
movsb
lock
jle
test
cmc
push
cltd
xchg
scas
ret
shrb
adc
pop
inc
mov
ror
xchg
mov
pop
cmpsl
mov
aaa
dec
subl
cmpsl
jnp
push
add
cmp
movsl
xor
cmp
add
xchg
jecxz
push
adc
filds
sbb
sbb
dec
xchg
push
mov
lods
outsl
adc
pop
je
movsl
xchg
add
xchg
das
cmc
inc
or
movsb
cmp
fildl
adc
xor
sahf
jb
jmp
adc
les
insb
dec
call
mov
mov
leave
std
cmp
shll
xor
mov
xor
out
sti
icebp
xchg
xorl
jne
cmp
in
stos
jae
sub
outsl
jnp
leave
jg
jbe
fistpll
outsl
ljmp
stos
xchg
stc
xor
adc
cmp
leave
ficompl
addr16
xchg
mov
pop
add
cld
in
sti
mov
call
jp
out
and
push
cli
mov
test
add
adc
aas
std
mov
fwait
jl
stos
pop
aas
sub
cmpsb
jg
pop
xchg
pop
bound
sbb
pop
testl
cltd
jbe
and
sbb
shrl
pop
sbb
scas
mov
dec
decb
mov
xchg
sub
out
std
jmp
icebp
outsl
cmp
pop
and
xor
outsb
mov
repnz
inc
outsl
xlat
mov
out
mov
pusha
cwtl
enter
cmp
pop
pop
outsl
mov
movsb
cmpsl
sti
int
dec
add
inc
pusha
lods
pusha
stos
fldcw
cld
mov
nop
int
inc
mov
mov
xor
aaa
cmp
js
gs
shlb
jbe
xor
and
or
adc
repz
scas
xchg
cs
jns
mov
or
mov
inc
sti
mov
popa
and
push
lods
scas
fcmovnbe
aaa
inc
push
ds
jno
pop
push
sbb
rolb
pop
cmpsl
adc
dec
ret
fisubrl
adc
aam
loopne
mov
add
or
jns
out
lcall
idivl
stc
mov
inc
dec
lds
and
mov
insl
xor
fstpl
pop
and
out
std
dec
rol
in
mov
ss
popf
movsb
xor
rcl
add
cmpsb
out
mov
mov
inc
add
sub
rolb
nop
jnp
nop
insl
loopne
bound
mov
imul
cwtl
jg
shll
jo
pop
scas
pop
or
int
dec
mov
out
cmpsb
push
dec
jne
cld
adc
pop
ljmp
inc
mov
push
mov
adc
xor
mov
mov
sbb
sub
sub
ljmp
dec
shl
xor
sbbl
push
psllq
inc
and
push
out
repz
jne
rorb
mov
dec
iret
adc
in
and
mov
xor
cmp
sub
push
mov
pop
push
add
into
into
pop
add
pop
lock
mov
aam
pop
and
jg
loope
mov
xchg
call
mov
cmp
sbb
xor
cltd
iret
outsb
cs
adc
jo
mov
xor
xor
or
pop
mov
sbb
sub
fnsetpm(287
fistps
lret
cltd
dec
test
pop
pop
mov
jecxz
dec
jmp
push
sbb
jne
xchg
mov
jns
or
into
aaa
nop
imul
stc
setne
cld
pop
xchg
cmovg
sub
daa
in
add
add
mov
add
sub
mov
scas
dec
lahf
in
pop
jp
or
scas
pop
leave
sub
gs
xchg
push
xor
lea
jno
test
add
fistl
hlt
cmpsb
out
mov
cwtl
arpl
pop
mov
lods
int3
xor
int3
and
lods
call
push
cmp
in
xchg
jne
push
dec
xlat
push
popl
insb
pop
jnp
xchg
and
dec
pop
jb
push
vmaxsd
insb
mov
in
jl
sub
adc
dec
rcrl
sti
and
mov
insb
imul
jl
inc
out
jmp
jmp
ret
popf
out
add
pop
sub
jae
jb
cmp
push
ret
out
sbb
ja
sbb
bound
xchg
adc
push
dec
imul
mov
jecxz
sbb
repnz
inc
dec
cli
leave
bound
jmp
sbb
push
subb
pop
imull
jecxz
test
lods
add
fisubs
jnp
dec
data16
mov
hlt
stc
mov
sub
jle
fmull
ror
or
mov
enter
cmpl
sbb
mov
dec
cmpsl
test
jp
es
movl
or
mov
lea
xorb
dec
inc
and
mov
adc
or
jmp
push
out
ror
in
jbe
sub
fwait
jmp
cmc
dec
xchg
arpl
xor
xor
rol
je
arpl
sbb
xor
inc
cltd
adc
push
adc
cmp
inc
inc
add
int
mov
xchg
xchg
stc
idiv
inc
cmpsb
pop
fcmovnb
arpl
stos
push
fdiv
dec
out
lret
imul
mov
clc
jmp
popa
push
sub
push
mov
lock
or
imul
fistpll
dec
cmpsb
ljmp
bound
in
dec
push
and
es
outsb
xchg
mov
into
mov
cld
dec
enter
dec
jecxz
pop
xor
clc
add
outsb
inc
es
pop
cld
in
mov
cmpl
mov
lret
or
add
inc
mov
ret
scas
cmp
sub
cltd
and
and
pop
fs
lock
lea
test
fwait
xor
imul
test
out
gs
mov
sub
jne
shrb
sub
sbb
or
scas
sbb
orl
mov
add
popa
add
fs
call
jge
addr16
outsb
ljmp
std
cmpsl
lret
mov
cmc
test
mov
frstor
addr16
or
mov
mov
cmc
fstps
sbb
mov
ja
andl
or
insl
adcb
add
pusha
inc
fisubs
insb
cld
adc
jns
add
or
inc
push
out
in
sub
pushf
inc
push
les
adc
xchg
daa
or
add
push
add
xor
cmp
fs
cmp
sbb
lret
nop
test
xor
subb
mov
movsl
jno
test
mov
mov
shll
movsl
cmp
dec
pop
in
nop
jecxz
push
mov
daa
pusha
inc
jnp
cmp
sar
jb
sbb
in
jmp
int3
xor
cltd
jne
js
inc
adc
xlat
hlt
sbb
call
push
mov
xchg
push
adc
push
mov
es
test
xchg
pushf
jg
dec
cmp
loop
call
pop
mov
push
inc
test
std
xor
out
and
lds
dec
add
out
pop
sbb
movsb
and
std
lahf
aad
sub
and
xchg
or
add
out
mov
fstpt
arpl
das
and
out
mov
clc
jae
mov
adc
shll
cmpb
dec
fimuls
push
out
test
add
push
cmp
fiaddl
push
rcrb
idiv
jp
jno
mov
or
mov
inc
xchg
and
cmp
lods
test
cmp
iret
and
push
cmp
lea
mov
cmp
pop
das
int3
call
jno
mov
cmp
mov
fsubrl
sbb
push
sbb
push
mov
outsb
push
shlb
inc
jg
and
cmpsb
pop
dec
push
mov
push
inc
stos
jecxz
and
pop
cmp
fmul
inc
ds
pop
aam
inc
popf
out
das
idivb
pushf
sub
or
inc
add
mov
fmull
divl
cmp
les
shll
xor
pusha
shlb
adc
mov
inc
mov
jo
dec
lret
mov
sub
sbb
mov
pop
dec
sbb
mov
repz
or
push
xchg
sbb
jp
nop
mov
xor
sahf
in
cmp
xor
push
imul
cltd
adc
add
cld
inc
sub
aad
les
or
fimull
or
xchg
jns
ja
jb
insl
sub
sub
push
jbe
jno
pop
arpl
jne
loopne
xchg
mov
pop
dec
mov
scas
andl
fsts
aam
scas
idivl
aam
or
or
dec
in
in
xchg
mov
dec
jbe
sbb
push
add
mov
sbbb
sbb
lea
std
int3
or
jl
and
or
jg
mov
and
sub
jbe
inc
or
push
les
jns
and
testl
jne
ret
sub
jbe
and
and
and
xor
xlat
mov
orl
aam
inc
nop
faddl
add
ror
dec
or
fisubrl
jnp
xor
or
clc
shl
push
mov
test
test
inc
mov
inc
xor
in
mov
popa
icebp
fsubrl
imul
dec
in
clc
mov
adc
adc
int3
pop
xorl
mov
scas
popf
xchg
inc
pop
cmpsl
xor
jmp
fdivrl
cmp
pushw
ds
cmp
sub
test
into
xchg
inc
inc
mov
pop
inc
push
or
dec
push
or
pop
ljmp
push
pusha
movsl
mov
mov
or
icebp
sub
aam
add
or
mov
mov
mov
aaa
or
cmp
xor
fs
add
adc
sbb
xor
sbb
into
mov
xchg
aas
and
cld
es
shrb
mov
xor
cmpl
movsb
ret
sbb
jbe
scas
cmp
add
enter
and
dec
push
jge
icebp
in
mov
jnp
sub
test
mov
dec
loop
xor
cmpsl
arpl
cld
push
mov
dec
subl
out
jb
sahf
sub
imul
sbb
mov
cmc
mov
sbb
ja
pop
fwait
sub
addr16
cmpsl
dec
bnd
scas
jnp
sbb
lds
mov
dec
out
in
ja
pop
xchg
push
in
in
mov
xchg
cmpsb
mov
push
dec
mov
lahf
pop
insl
ret
ret
adc
mov
add
lea
xchg
ljmp
rorb
jg
sbb
cli
cmp
add
ret
xadd
movsb
adc
push
fnop
fimuls
pop
out
jle
stos
add
jle
xchg
mov
cmp
lds
jp,pt
popa
in
mov
int3
stos
mov
cs
pop
ja
nop
jb
sarl
xor
in
inc
daa
xchg
cvtpi2ps
daa
xchg
dec
call
mov
mov
mov
adc
in
lds
push
cwtl
push
out
insb
inc
out
lods
jbe
adc
in
xchg
sub
ja
push
fs
jmp
cmc
imul
jmp
imul
mov
and
daa
xchg
das
ds
or
push
in
mov
cltd
jle
sti
sub
lock
jno
sub
std
popa
scas
mov
mov
cmp
lea
cli
adc
int3
sub
jl
ljmp
int
pop
xlat
les
lahf
xchg
mov
aas
fs
popf
push
lds
rorl
dec
push
daa
sub
adc
cmpsb
push
inc
lods
add
arpl
push
je
mov
es
call
adc
rol
ss
daa
sub
jno
popa
mov
fwait
je
pop
jle
and
mov
push
xor
outsl
xchg
adc
popf
addl
das
inc
repnz
lcall
fwait
mov
test
xorb
sarb
xor
xlat
mov
add
pop
pop
je
push
mov
and
mov
arpl
fcomi
test
mov
pop
sbb
mov
lcall
pop
fnsave
outsl
ss
jo
or
es
loop
std
dec
dec
hlt
std
sbb
je
in
ja
push
test
xor
xor
xor
pop
test
xchg
mov
add
xor
and
add
jle
cmpsl
imul
jno
and
xorl
fldl
cmp
es
clc
lea
movsb
das
div
mov
popa
aam
pop
ss
sbb
inc
sub
mov
out
aaa
outsb
fs
mov
outsl
xlat
mov
adc
push
jno
insb
push
mul
xchg
mov
xor
mov
xor
and
into
ljmp
xchg
xlat
and
jg
mov
les
xchg
sbb
or
adc
jne
stos
addr16
jg
sbb
dec
in
sub
test
loopne
xchg
push
lods
popa
add
pop
xchg
jg
mov
repz
fisttps
sahf
out
insl
jae
movsl
clc
cmp
inc
stc
test
cs
sub
jl
jmp
mov
jl
jl
imul
mov
inc
inc
adc
lea
fdivl
push
test
pop
rclb
inc
incl
shlb
out
mov
and
cli
cmp
into
je
ror
cltd
sub
lcall
data16
lods
rclb
pop
shll
lahf
jae
scas
xchg
inc
vsqrtsd
mov
imul
jo
punpckhwd
inc
mov
adc
inc
imul
test
xorl
push
sub
add
jmp
daa
inc
xchg
ja
cs
inc
push
adc
sub
imul
dec
and
das
push
mov
fistpll
dec
xchg
sbb
add
dec
fs
push
in
add
xchg
fdivrs
scas
andl
das
xchg
lret
fiaddl
lahf
mov
cmp
pop
cmp
inc
shrb
cmc
icebp
mov
mov
cmp
or
bound
ljmp
cmp
int
lods
adc
sti
push
outsl
mov
mov
cmp
cmp
push
push
jmp
fbld
inc
and
push
fisubrl
push
shrl
mov
fbstp
pop
or
mov
insb
push
xor
andl
pop
sti
jns
jp
movsb
push
cmp
jno
inc
or
adc
mov
mov
xchg
jl
sub
xor
je
loope
aam
sbb
cmp
lock
mov
inc
lods
and
mov
jno
or
ret
inc
jl
mov
orl
fdivl
lret
sbb
loopne
ds
push
push
js
inc
and
lea
sbb
or
popf
stc
mov
notb
mov
inc
sub
mov
add
iret
aaa
mov
ss
fcoms
cmpb
mov
push
addr16
out
cli
and
xor
aad
xchg
add
inc
hlt
inc
pop
popa
outsb
lret
jg
in
call
and
xor
shrl
sbb
adc
loope
test
push
orb
lret
iret
outsb
cmp
dec
scas
push
pop
xchg
mov
fimull
movsb
jbe
in
cmp
leave
gs
mov
jmp
paddb
dec
dec
jmp
idivb
pop
pushf
adc
cmp
push
pop
std
shrb
aaa
jmp
add
icebp
pop
jg
xor
cmp
mov
ss
loope
push
sbb
jecxz
std
and
aad
mov
cmp
mov
dec
push
rol
adc
xchg
jmp
scas
idivl
bound
dec
xor
jecxz
xchg
dec
test
outsb
repnz
idiv
cmc
mov
fimull
push
inc
int3
lcall
and
ret
or
mov
int
xor
cwtl
xchg
push
ret
xchg
jge
xchg
sub
fimull
pop
into
push
cmp
inc
int
clc
out
mov
cmp
arpl
push
and
jne
sub
ds
inc
ret
cmp
push
mov
jg
shlb
dec
lods
jg
cmp
fwait
lahf
xor
dec
mov
push
add
lret
hlt
xlat
inc
pushf
icebp
in
divb
das
inc
and
pop
imul
pop
insl
and
add
lds
jmp
jbe
cmp
or
lcall
mov
fstpl
mov
inc
lahf
imul
dec
stos
das
jbe
jmp
push
xchg
inc
inc
out
in
cs
orb
mov
ja
mov
and
push
and
mov
pop
cmpsl
push
out
push
test
ljmp
pushl
pop
cld
mov
nop
lcall
xlat
insl
cmp
or
mov
sete
push
sbb
mov
in
xchg
jne
jp
pop
push
add
outsb
push
sbb
add
insb
pop
jmp
sbb
sbb
pop
cmpl
shl
inc
cmp
xchg
pop
sbb
sub
sub
xor
ret
push
out
xor
pop
aaa
push
movsb
pavgw
clc
rcrb
mov
push
fdivp
lock
xor
outsl
xchg
sub
js
out
std
sbb
add
inc
stc
in
das
aas
jmp
mov
dec
cld
fsubl
pop
or
dec
jecxz
scas
adc
rorl
pop
loopne
test
xor
mov
pop
divb
adc
shl
inc
repz
shl
mov
fwait
mov
stos
ret
rorb
push
lods
test
mov
mov
sub
fists
mov
lea
mov
lods
jnp
dec
stos
mull
cmc
or
push
lock
dec
push
out
cwtl
push
jp
cmp
inc
cmp
cltd
addl
arpl
lcall
mov
adc
fwait
imul
pop
and
jge
xchg
out
sti
pusha
aad
adc
lcall
int3
dec
and
lret
and
mov
push
mov
ljmp
push
iret
les
scas
addr16
lret
jmp
xlat
xlat
and
xlat
pavgb
xor
cld
mov
outsl
stos
bound
xchg
data16
xchg
jg
loope
out
rorl
mov
jg
in
add
xor
insb
xchg
scas
inc
pop
mov
fcomi
arpl
data16
divb
mov
lods
add
xlat
dec
ret
cmpsb
and
aas
sub
es
stc
xor
test
add
fucomi
jne
push
and
jo
jle
bound
lret
stos
and
mov
fcompl
jecxz
or
shll
lcall
imul
mov
xchg
jmp
mov
and
lods
fld
jge
lret
out
cmp
add
lods
fisttpl
cmc
popl
lods
std
cld
je
iret
fisubrs
fwait
xlat
xor
push
mov
dec
inc
xchg
pop
pop
or
sarb
xchg
dec
and
pop
shl
aaa
jbe
xor
dec
fs
jl
adc
and
sbb
push
mov
cmpsl
clc
mov
inc
outsb
inc
push
sub
cmpb
or
mov
pop
mov
loop
jle
dec
xchg
push
jl
std
dec
adc
xchg
and
xchg
adc
imul
mov
mov
stos
fldenv
mov
fwait
mov
mov
cltd
push
out
int
scas
rcll
shll
mov
iret
push
outsb
add
mov
nop
xor
mov
and
mov
inc
mov
jns
jbe
inc
and
mov
push
notb
outsl
jb
mov
inc
lcall
adc
out
mov
movswl
cmp
jle
cs
pop
repz
jno
imul
std
sub
enter
mov
js
and
aas
push
mov
bound
js
shll
xlat
push
cmp
pop
in
cwtl
cmpsl
xchg
pop
mov
inc
add
scas
out
adc
cmpsl
inc
pop
pop
adc
js
data16
aad
sbb
jge
push
or
sti
into
cmp
aad
jge
fldl2e
sub
loope
pop
fists
push
mov
imul
sbb
pop
das
rcll
ss
std
loopne
das
pop
jge
sbb
pusha
push
sbb
fimull
iret
jno
insl
inc
and
mov
add
cld
sbb
dec
mov
xchg
test
fwait
pop
es
pop
lret
outsb
push
mov
jns
cmp
inc
dec
or
fdivrl
mov
arpl
ret
testl
out
mov
insl
xchg
cmp
xchg
aam
lock
cmp
sahf
pop
or
out
jb
mov
sbbb
mov
or
jns
cs
add
cli
xchg
and
notl
and
inc
xor
push
push
add
jns
sarb
push
add
sahf
sub
in
enter
lods
out
cmp
and
movsb
test
rcll
and
jge
leave
inc
pop
sbbb
push
sub
inc
mov
add
pop
dec
out
insb
jae
repz
enter
cmc
scas
aad
imul
cmpsl
lods
rclb
in
sbb
scas
xor
data16
sarb
mov
shrl
negb
mov
add
bound
fldcw
inc
mov
jbe
jmp
mov
jae
stos
and
dec
int
push
add
or
adc
cmp
loop
adcb
xlat
push
sbb
iret
fnsave
popa
fcoms
sbb
add
dec
outsl
xor
adc
dec
sub
push
dec
out
fst
mov
jno
jle
lcall
enter
gs
inc
inc
out
sarl
fisttpll
das
pop
jne
mov
cmp
nop
or
repnz
loope
dec
dec
xchg
add
or
inc
in
mov
dec
mov
sub
enter
mov
mov
stos
repnz
xor
jae
sbb
sahf
scas
int
gs
orl
not
add
das
add
pushf
push
xchg
push
shlb
pop
add
in
xlat
xchg
ljmp
adc
fldcw
movsl
sbb
or
rolb
cmp
lods
mov
leave
test
insb
sbb
fwait
push
and
mov
mov
aam
mov
add
int3
pop
mov
shll
mov
dec
aas
jg
lds
andl
lods
mov
mov
hlt
mov
in
dec
pop
testb
sbb
imul
test
xchg
jmp
lea
in
mov
cmp
stc
dec
ja
sahf
loopne
dec
cmp
ds
mull
cmp
lock
and
push
nop
sahf
pop
cmpsl
add
je
cmp
cmp
add
mov
fsub
repnz
bound
insl
pushf
stos
pop
stos
dec
mov
mov
adc
xchg
test
lcall
pop
jne
sub
sub
mov
mov
inc
pop
push
or
fcoml
inc
lods
fs
insb
jno
icebp
or
push
sub
or
push
lret
arpl
mov
push
ss
lret
aas
int3
loopne
lock
pop
jno
pusha
mov
inc
es
mov
shrl
add
push
cmpsl
test
inc
rcrl
mov
lret
aaa
dec
psrlw
or
jo
stos
push
xchg
out
lods
dec
imulb
insl
push
adc
mov
push
xor
or
test
stos
xor
mov
adc
fisubl
and
cmpsb
jl
dec
add
xor
mov
mov
mov
int3
mov
jge
push
add
mov
cmpsl
jo
xchg
jbe
cmp
fsubp
hlt
icebp
movsb
decb
gs
sub
scas
mov
movsb
outsl
xorl
xor
pop
enter
push
sub
mov
pop
mov
fbld
dec
mov
adc
js
lahf
mov
cmc
or
push
dec
lret
push
ja
pusha
lret
dec
sbb
out
aad
cmpsb
daa
mov
mov
pop
adc
rclb
in
xchg
in
xchg
adc
mov
ss
dec
rolb
ret
repnz
sub
stc
push
mov
push
test
hlt
lock
jg
pop
shlb
test
jno
loop
out
mov
es
loop
lahf
push
cmc
mov
or
fsubp
andb
dec
fisubs
fldcw
and
adc
imul
call
popf
sbbl
push
inc
stos
movsb
jp
sbb
popa
ds
test
neg
xor
in
push
mov
test
cs
addr16
insb
stos
inc
test
std
xor
adc
sub
cs
ret
lret
mov
mov
aam
cmp
sub
aam
imul
push
mov
lock
mov
ljmp
lret
mov
mov
scas
lds
adc
lcall
xor
cmpsl
jo
adc
pusha
repnz
fdiv
push
mov
fs
inc
sbb
daa
sbb
bound
add
pop
in
movsb
adc
inc
dec
xor
cld
loop
xchg
inc
push
mov
shl
imull
pop
mov
lods
dec
test
lods
mov
mov
cmp
pop
aas
test
out
lds
aad
inc
mov
fsubs
mov
sti
mov
cmp
out
ret
rcll
sub
sbb
aam
sbb
ss
mov
ret
push
lcall
and
rclb
fs
stos
mov
out
cs
and
adc
xor
or
stos
and
add
sahf
movsb
fcomp
clc
xchg
sub
call
inc
fldln2
pop
add
dec
jmp
jbe
out
sbb
test
and
daa
icebp
arpl
and
sub
aad
sahf
leave
mov
stos
mov
mov
push
aam
test
cmp
popf
pop
adc
add
fiaddl
insl
lods
cli
and
fs
popf
popf
jbe
insl
mov
outsl
and
mov
lods
rcrb
lea
mov
ss
adc
loope
outsl
lds
popf
lret
adc
pop
mov
cwtl
loop
pop
xchg
aam
cwtl
stc
mov
sub
lds
cmpsb
leave
repnz
int3
push
sbb
and
xor
push
jge
jg
inc
in
or
cmpb
sti
cmpsw
out
pop
adc
mov
out
xchg
push
or
and
push
test
popf
sub
cld
pop
pop
push
xlat
dec
xchg
add
jae
out
and
adc
int3
subl
addl
sbb
mov
out
arpl
jmp
xchg
mov
les
jge
and
adc
enter
inc
das
arpl
or
mov
lods
mov
or
push
aam
adc
lds
das
cmp
hlt
scas
push
movsl
adc
cmpsl
mov
and
xchg
jbe
movsb
push
fsubrl
push
adc
dec
or
dec
insl
mov
mov
cmpsl
pop
dec
lds
fmull
jle,pn
mov
out
loop
add
add
sub
xor
lock
sbb
cmpsl
sbb
popf
mov
in
sahf
movsb
pop
out
sub
incb
mov
lcall
rcr
cltd
or
and
sbb
js
xchg
push
mov
iret
inc
lods
mov
sbb
loope
push
or
out
sarb
notl
jmp
jnp,pt
jno
data16
out
xchg
outsb
testb
add
and
insl
jo
cmpsl
xchg
jo
jmp
lahf
adc
mov
and
adc
mov
jg
movsb
xchg
mov
inc
ja
jp
inc
mov
arpl
dec
push
cmp
addb
scas
scas
sti
jg
aas
loopne
fstpl
push
addl
add
dec
rorb
das
addr16
fdivs
mov
or
es
or
sub
ror
jle
icebp
shrb
xor
lcall
clc
in
or
sbb
cmp
enter
lahf
and
push
addr16
insb
rolb
xchg
fistpl
mov
ficoms
and
sbb
and
pusha
pop
pop
das
jge
adc
inc
pop
cltd
fcomps
cmp
lds
punpckldq
lcall
cmpl
jg
in
jb
sub
out
sbb
push
push
push
dec
shll
fistl
daa
nop
ja
and
and
dec
ret
inc
cli
adc
and
add
or
mov
jne
addr16
leave
jmp
add
int
jge
in
and
jle
and
inc
jne
addb
inc
ret
clc
mov
mov
pop
mov
jne
sbbl
mov
aaa
scas
cmp
dec
adcb
hlt
add
pop
pusha
mov
cmp
das
insb
orl
inc
push
xor
dec
popf
cmpsb
lods
popf
call
adc
inc
imul
ret
mov
ds
aam
mov
cli
lds
ret
loop
testl
mov
inc
jecxz
sbb
and
or
add
es
xchg
jbe
pop
dec
dec
cli
adc
and
jmp
mov
aad
sbb
js
fs
iret
popf
or
cli
aas
shrb
xor
pop
notb
sbb
fidivrs
jp
jge
and
sbb
adc
jbe
inc
ret
inc
fcmovne
das
sbb
mov
jae
into
sti
jne
shrl
testb
pop
add
ret
movsb
ljmp
cmp
sub
imul
mov
sub
mov
sub
imul
sub
outsb
shll
stos
cld
sarb
sbb
mov
jns
dec
test
jbe
push
mov
inc
sbb
lds
inc
addb
mov
and
in
mov
addl
fdivrs
into
enter
lock
xor
bound
cmpsb
mov
out
decl
lods
sbb
rorl
pop
aaa
xorl
lods
xchg
test
enter
push
mov
jne
bnd
insb
fdivs
inc
js
mov
jmp
into
push
scas
inc
mov
sub
lock
aad
fisubl
jg
repnz
lods
or
pusha
ret
stos
sub
icebp
adc
outsl
inc
test
ss
push
xchg
adc
into
scas
jo
stos
out
adcl
xchg
adc
in
push
or
fwait
test
stos
lock
jo
xor
add
push
dec
sbb
cs
or
cmp
jmp
sub
dec
icebp
jg
mov
pop
cmp
out
xchg
arpl
jae
scas
rorb
sub
xchg
ja
pop
push
or
fisubrs
dec
mov
dec
inc
dec
out
jecxz
mov
cs
loope
aam
into
cmp
negl
jmp
hlt
cli
lea
inc
lods
leave
mov
or
movsb
addb
int3
enter
mov
cmc
and
adcl
push
out
pop
call
xor
mov
and
lcall
cld
inc
notb
push
jns
js
aaa
decl
and
sbb
inc
push
xchg
daa
sub
popw
or
sub
jl
add
cs
inc
xor
movsl
mov
outsb
test
pop
lret
and
in
imul
push
cmp
dec
and
jbe
add
pushf
add
push
adc
insb
mov
hlt
mov
sbb
gs
clc
pop
and
pop
js
es
ja
cmp
in
sti
xor
fcoms
std
push
in
test
dec
stc
inc
cltd
loop
dec
lret
mov
fimuls
lock
test
push
add
insb
jne
push
lahf
insl
dec
stc
ret
jg
out
jl
pop
dec
pop
inc
xlat
inc
iret
adc
or
mov
ja
inc
cmp
scas
inc
jo
cmp
dec
xchg
adc
inc
push
mov
cmp
dec
scas
cwtl
mov
add
loopne
in
pop
cmp
shll
aas
jnp
lods
jne
int3
xchg
xchg
out
dec
data16
adc
scas
sub
jb
xlat
pushf
add
lahf
cli
adc
sub
xor
pop
rcrb
xor
hlt
xlat
sti
ja
jno
negb
sbb
nop
dec
mov
push
push
andl
inc
and
xor
xor
push
scas
rorb
xor
inc
fsubl
arpl
lock
shll
push
loopne
mov
sahf
dec
sbb
cld
jnp
sbb
xor
sbb
inc
in
inc
clc
shl
fwait
and
mov
sbb
push
mov
inc
push
inc
addr16
cmp
cmp
sahf
mov
cltd
push
stos
int
popf
fs
mov
je
jecxz
adc
loop
mov
mov
mov
fnstsw
jecxz
sub
lcall
dec
mov
loop
and
xor
test
shrl
adc
mov
rolb
cmp
dec
testb
mov
mov
lods
sbb
xchg
jle
lret
sbb
mov
fs
lcall
lret
ret
push
repz
je
pop
jge
out
mov
lea
add
xor
or
mov
fstpl
mov
fimull
push
cld
fldenv
fst
add
subl
cli
jbe
cmp
fisubrl
mov
and
std
sti
jb
call
sub
pop
mov
xlat
testl
mov
ds
adc
inc
je
cmp
les
pop
inc
cli
pop
aam
mov
pop
mov
xchg
mov
push
mov
mov
xor
lahf
xchg
fstps
mov
mov
adc
push
push
sbb
mov
js
push
pusha
test
lock
aam
cld
mov
jns
and
out
adc
ss
or
mov
mov
inc
out
add
push
neg
adc
sub
or
js
mov
add
dec
loopne
mov
testl
orl
test
in
jne
jle
cmp
icebp
xor
mov
sbb
jl
insl
jge
pop
call
inc
push
jo
cmp
sub
xchg
shld
call
add
cmp
jl
sbb
lods
and
rcll
mov
add
mov
aam
int
repnz
jae
lcall
cmp
mov
xchg
sbb
jns
scas
gs
mov
or
xchg
mov
movsl
mov
orl
aad
fs
imul
jb
add
lret
ljmp
out
mov
in
lea
pushf
add
mov
rcr
adc
hlt
lcall
jnp
dec
mov
mov
fisttpl
inc
mov
xorb
imul
dec
xlat
xor
stos
ds
adc
jbe
xor
addr16
push
mov
loopne
shll
fwait
mov
mov
xchg
mov
aam
rorl
or
cmpb
pop
shlb
xorl
out
in
arpl
ljmp
sbb
stos
add
out
das
test
sahf
jl
into
sub
movsb
xor
mov
sub
scas
ljmp
icebp
jge
sahf
ss
stos
outsb
mov
pop
ret
inc
xchg
shlb
shlb
xchg
xor
shll
xor
sub
adc
inc
mov
fsubrl
fildll
std
cmp
sub
xor
scas
mov
sahf
xchg
out
mov
mov
push
pop
scas
mov
sti
std
or
inc
jns
out
andl
rcl
mov
movsb
jmp
xor
jnp
lret
jle
mov
fs
adc
cmp
outsb
rolb
popf
push
push
into
mov
daa
aas
fcom
mov
jo
push
mov
fstp
jle,pn
js
xchg
fnsave
xchg
movsb
out
or
aas
mov
outsl
je
or
fsub
popa
ljmp
pusha
jae
testb
mov
jne
add
push
push
mov
rolb
je
imul
adcb
int3
push
repz
xor
push
and
push
out
mov
pop
iret
outsl
fs
sbb
pop
mov
push
push
jns
push
and
mov
push
ffree
sub
xchg
xorl
dec
jno
cltd
int
in
add
cmp
xchg
pop
lret
push
mov
hlt
nop
test
inc
xor
scas
mov
add
enter
not
std
std
xor
lods
rcrb
and
fcoms
mov
test
shrl
cmp
xor
sahf
pop
icebp
lcall
mov
xchg
shlb
mov
sarb
mov
inc
pop
dec
daa
bswap
push
sbb
test
push
test
incl
adc
aaa
fidivrs
stc
pop
insl
push
mov
sbb
dec
push
arpl
call
mov
fdivrs
daa
mov
lcall
mov
bound
icebp
ss
mov
rep
dec
lret
cwtl
popa
aas
add
daa
shll
repz
aas
cs
adc
mov
paddd
mov
call
aaa
mull
movsl
cmp
out
dec
jmp
aas
bound
cltd
sub
notl
lods
xchg
ja
inc
push
add
mov
out
sbb
ja
scas
test
xchg
movsb
aam
out
fcoms
sbb
in
mov
out
mov
stos
cmpsl
or
sahf
or
mov
out
mov
sti
jecxz
cmpsb
lea
in
push
leave
cld
pop
mov
dec
mov
and
and
out
add
lock
jnp
insb
inc
push
sub
xor
and
test
push
orl
das
push
orl
les
push
psubusb
push
std
pop
adc
jp
and
jge
out
jmp
jmp
jecxz
mov
sub
xchg
sbb
fidivrl
aas
jns
test
sub
xchg
mov
repnz
inc
test
jb
xor
bound
idivb
cmp
std
push
bt
pop
ffree
test
ja
movq
cmp
xlat
jo
push
pop
ds
jns
and
pop
mov
lret
js
add
push
push
in
sbb
adc
iret
in
pop
popf
sub
cltd
daa
pop
mov
lods
or
xor
inc
jae
cwtl
xor
lods
xor
lock
sahf
cwtl
adc
hlt
int3
in
mov
pop
and
xor
add
clc
daa
push
not
lcall
xchg
das
adc
and
sahf
jno
repnz
pop
sbb
pop
jbe
stc
cli
mov
add
add
out
mov
clc
imul
lds
add
mov
outsl
jb
test
mov
dec
shll
pop
sbb
shlb
andl
xor
dec
sbb
bound
fisttps
sub
xor
sbb
mov
arpl
addb
jns
jmp
xor
lods
rclb
jnp
xchg
shlb
stos
int
mov
pop
xchg
inc
movsb
into
cmp
bound
lcall
lods
lods
jle
in
test
sti
mov
ds
push
cmpsl
sub
mov
xchg
xor
or
mov
xor
ret
mov
mov
mov
jb
pop
in
out
addr16
pop
popa
nop
les
inc
jne
scas
das
shrb
lcall
lds
xor
xchg
mov
cmp
mov
sub
pop
out
jmp
push
cmc
dec
dec
inc
test
fstps
je
or
xlat
jne
or
fdivrl
mov
outsl
jo
arpl
pop
and
push
mov
add
mov
xor
jae
pop
sti
mov
ret
adc
sub
xor
lret
fisubrl
insb
shl
add
xchg
and
xlat
repz
mov
insl
popf
cmpsl
cmp
jmp
hlt
das
xchg
outsb
cmpb
jp
adc
push
pop
mov
into
je
rsqrtps
mov
cld
das
repz
jecxz
gs
dec
xchg
stos
test
cli
lahf
aam
sbb
pushf
mov
sub
mov
addr16
jmp
jnp
addl
mov
sti
lret
xchg
push
pop
adc
mov
pop
repz
leave
inc
inc
cli
xor
or
mov
fcoml
jae
lret
pop
xlat
inc
and
and
mov
fsubs
push
fucomp
push
xchg
mov
fisubrs
cmp
lds
sbb
std
mov
daa
in
sahf
sahf
lea
inc
fistps
fmull
test
loop
jno
jbe
fcmovnb
cli
lea
test
add
xchg
xchg
xor
xor
insb
data16
sbb
sti
push
pop
and
popa
inc
popf
or
inc
insl
ret
ret
nop
pusha
test
sub
xor
inc
pop
popf
jmp
mov
pop
cli
sub
out
mov
movsb
push
fadd
js
add
cs
mov
sub
shlb
aas
mov
sbb
push
pop
popf
aas
xchg
out
jp
or
mov
jae
rcrl
mov
enter
jl
mov
and
divb
nop
cltd
push
scas
lret
mov
push
and
hlt
jnp
mov
std
jb
mov
push
out
push
icebp
or
lcall
pop
and
leave
popa
jle
aam
jae
movsl
dec
fcoml
scas
pop
int3
ror
pop
mov
ror
push
int3
cmp
mov
adc
les
add
iret
jecxz
leave
dec
and
mov
mov
mov
cmpsb
fs
clc
shrb
xchg
mov
and
mov
lret
xchg
je
jb,pt
or
sub
ret
shl
les
pop
jle
in
mov
daa
daa
xlat
lret
push
sub
mov
pop
test
mov
xchg
insb
mov
loopne
jae
inc
xchg
loopne
xor
pop
into
or
sbb
push
shlb
dec
jno
lods
fldenv
push
mov
das
cmpsl
vpsubb
int
cmpl
rclb
inc
jbe
mov
int
sub
je
xor
outsl
sbb
decb
mov
mov
js
stos
lods
sub
sar
ret
insl
sbb
mov
xor
in
pusha
ss
pop
mov
in
mov
xor
aaa
inc
hlt
jp
enter
cmpsb
adc
imul
push
sarl
inc
xor
movsl
insb
jno
stos
add
in
jl
js
mov
mul
cmpsb
je
sbb
loopne
jl
roll
push
shl
jo
out
pop
mov
push
dec
mov
mov
jecxz
popa
and
lods
fmuls
inc
loop
cmp
leave
pop
inc
or
leave
stos
pop
xchg
int3
pop
mov
dec
popa
rclb
mov
stc
xchg
xchg
shll
mov
fwait
dec
dec
fistps
test
ret
sub
jle
test
mov
ret
fnstsw
daa
sbb
ja
testb
nop
xchg
repz
jmp
mov
sub
push
loopne
adc
adc
push
mov
in
xor
or
addr16
cmpsl
sbb
xor
in
push
clc
dec
mov
sahf
dec
sub
testl
sub
mov
cmc
out
or
ja
xchg
ja
repz
andl
mov
in
lahf
std
loopne
pop
in
cld
xor
mov
aam
stos
mov
leave
sbb
xchg
mov
sbb
popl
shl
pop
rclb
dec
push
loopne
xor
xchg
cwtl
outsl
sub
push
cmp
dec
popf
cmc
bound
cmp
outsb
es
xchg
cmp
push
cmpsl
mov
repnz
cmp
mov
dec
mov
xchg
outsb
dec
iret
jle
inc
inc
iret
call
mov
inc
fwait
xor
data16
adc
outsl
cmp
ret
jmp
scas
adc
xor
add
movsl
cld
dec
je
inc
and
sbb
sbb
xor
push
test
shlb
push
rcll
sti
data16
sub
xchg
cs
js
pop
pop
in
cmp
mov
js
mov
inc
popa
sbb
push
lods
and
fimull
sbb
mov
es
ret
test
in
int
lea
jb
or
lahf
cltd
sbb
fdivs
jl
pop
ss
pop
ss
dec
dec
cmpsl
jg
loope
or
dec
outsl
inc
movsb
loope
add
scas
rorl
push
in
repz
jns
cwtl
xchg
mov
mov
jne
xor
push
ljmp
sbb
add
cmpl
push
ret
fwait
popa
addb
mov
popa
push
ficoml
loop
push
sub
dec
aad
jb
and
cmp
sub
mov
es
das
pop
repz
mov
aas
lea
sti
cli
nop
mov
jp
sti
or
in
in
mov
icebp
xchg
ret
dec
scas
jo
test
fwait
lods
mov
pusha
inc
push
mov
adc
ror
rolb
mov
cvtps2pd
popa
arpl
xorl
push
push
push
int
mov
ja
repnz
or
icebp
repnz
rcl
in
stos
cmpsl
adc
jmp
push
and
xor
sub
xor
negl
sbb
cmp
fbld
inc
leave
inc
sub
jae
jmp
sti
mov
mov
sbb
shrl
add
inc
cli
mov
repnz
jge
mov
jbe
outsb
lds
mov
nop
or
leave
test
cmc
roll
mov
pop
fisubs
cltd
inc
and
pop
or
mov
jmp
xchg
outsb
xchg
add
imul
in
mov
insl
daa
dec
faddl
xor
inc
jmp
and
outsl
xor
test
xchg
sarl
sbb
sbb
adc
cmpsb
std
lcall
inc
and
iret
pop
cmpsl
sbb
es
jge
leave
mov
sub
sub
test
jge
cmpsb
mov
add
ret
out
cltd
adc
mov
clc
int3
pop
cmp
xor
sub
fstp
xor
jecxz
aam
outsl
adc
jne
dec
sub
popw
clc
fsubs
rclb
dec
xchg
mov
or
popf
test
push
add
out
out
mov
sub
ss
or
add
test
mov
call
pop
pop
clc
jecxz
push
sub
cmp
data16
aam
sbb
mov
inc
push
mov
or
sub
mov
fildl
insb
pop
das
in
push
fcoml
inc
leave
stos
ss
popa
dec
ret
mov
inc
add
push
jecxz
enter
pop
lcall
pushl
lahf
fs
mov
add
sub
leave
push
fwait
cmpsl
sbb
xor
mov
repz
out
sub
adc
es
mov
ret
shll
gs
out
lret
pop
inc
pop
fisttpll
insb
in
jle
pop
cld
dec
test
xor
fnstenv
xchg
test
enter
sarl
inc
jp
lret
and
call
jb
cmp
or
mov
xchg
iret
mov
loope
movzwl
mov
les
fsubrs
and
mov
lret
push
cmpsl
out
in
clc
xchg
in
in
and
jp
or
subl
mov
adc
iret
into
push
iret
push
inc
lea
and
outsb
jae
or
adc
arpl
fwait
lret
iret
pop
dec
pop
enter
jl
adc
cmpsb
std
fadd
mov
ror
jno
jno
pop
es
xor
xchg
mov
jns
pop
aam
xchg
jne
stos
dec
jo
or
mov
aam
pop
xchg
decl
mov
pop
push
jg
jp
aam
mov
sbb
mov
cmp
mov
and
icebp
int3
inc
push
push
outsl
add
dec
pop
in
xlat
daa
outsb
lods
fldcw
xor
orl
pushf
or
cld
je
push
in
push
stos
enter
int
xchg
jmp
jg
mov
pmaddwd
orb
mov
js
sub
loopne
or
inc
xchg
push
dec
jge
insl
andl
add
cltd
cs
ret
push
ja
ror
je
mov
sub
add
data16
push
mov
and
xor
ret
into
lahf
inc
out
into
sbb
pushf
xor
adc
movsl
cltd
gs
in
stos
cmpsl
rcrb
or
adc
iret
call
inc
adc
movsl
xchg
lods
mov
xchg
mov
inc
add
out
mov
enter
aas
and
inc
cmp
mov
fbld
xchg
into
fsubrp
jecxz
loopne
enter
and
xchg
pushf
mov
pop
and
pop
aam
clc
xchg
lahf
gs
mov
inc
lret
or
add
inc
shl
cmp
xchg
repnz
jno
push
jmp
cltd
cmp
ret
xchg
push
pop
xchg
inc
loope
dec
addb
fiaddl
fwait
movsb
jae
cmp
cmp
pop
sub
jnp
lret
add
insl
sbb
pop
add
push
insb
int
cwtl
out
arpl
shlb
sahf
sti
jnp
out
cmpsl
cltd
sbb
ja
lods
sbb
int
sub
hlt
push
leave
jae
add
add
ss
jne
mov
mov
sar
xor
sbb
pop
add
jo
jns
rcrl
fadds
jbe
in
sbb
and
cmp
or
cs
mov
aad
mov
popa
test
fwait
scas
out
push
adc
clc
hlt
int3
mov
lret
sti
push
mov
mov
sbb
mov
nop
icebp
xchg
xchg
push
ljmp
into
test
dec
imul
xchg
stos
out
jnp
data16
xor
push
mov
and
xor
gs
loope
repnz
les
into
repnz
lcall
and
sub
mov
nop
mov
lock
movsb
std
push
rol
push
stos
sahf
jp
call
xor
mov
outsl
inc
jmp
addr16
or
loop
in
bound
out
pop
xchg
in
dec
fwait
insb
repnz
pop
xor
pop
mov
cmp
mov
mov
insl
inc
ret
das
xor
inc
stos
add
arpl
push
cmp
aaa
cmp
dec
sub
repnz
ljmp
mov
shlb
push
imul
hlt
mov
jnp
or
add
cmp
lret
adc
mov
sti
jne
mov
jb
push
dec
bnd
mov
pop
push
mov
xchg
xlat
ret
jb
pop
fists
pop
mov
pop
out
push
mov
push
jo
xchg
enter
sub
mov
stos
add
lods
test
xor
testb
or
sub
in
mov
mov
outsb
pusha
sub
stos
aas
lahf
push
cli
xchg
sbb
jmp
ss
addr16
fistl
and
out
shrb
mov
inc
jecxz
inc
pop
lcall
fidivrs
ficomps
mov
mov
inc
aas
fsubl
outsb
sub
dec
xchg
scas
adc
ljmp
cmc
push
bound
inc
adc
cmp
cmp
xchg
or
lods
xor
aaa
push
add
xlat
idivl
xchg
out
cli
addr16
and
mov
arpl
dec
adcl
cmp
popfw
stos
jp
xchg
mov
scas
fnstsw
xor
loope
int3
push
fxch
mov
sbb
xchg
rcr
push
and
cmpsl
push
cmpsl
adc
jno
in
mov
sbb
cwtl
jno
das
leave
lcall
aad
push
fwait
pop
sti
insb
loope
jns
out
adc
pop
and
add
lods
daa
orb
insb
push
mov
cld
push
sub
xchg
add
leave
popa
insb
repnz
sti
add
fcmovnb
dec
std
xor
mov
sub
movsl
shlb
dec
push
std
add
push
xchg
lret
xchg
jge
adc
movsl
cld
push
in
cld
and
sbb
pop
sbb
loop
int3
cmpsl
xor
xor
rorb
xchg
aad
pop
pop
push
lahf
scas
add
jae
mov
fcompl
rorl
loop
cmpsl
movsb
fwait
pop
aam
mov
ljmp
cs
mov
ljmp
push
mov
pop
mov
dec
lods
enter
lret
test
cmp
jns
jle
in
add
xrelease
xchg
mov
push
and
push
add
adc
sbb
ljmp
enter
mov
sub
or
into
jae
cltd
bound
mov
ja
mov
lock
jno
daa
jbe
or
out
rcrl
lret
arpl
mov
bound
ret
mov
out
psllw
addr16
leave
dec
pop
addb
hlt
mov
adcl
int
insl
ror
aaa
inc
mulb
mov
add
add
adc
adc
pop
cltd
in
mov
pop
cmp
imul
popa
pop
cwtl
pop
cltd
jae
inc
movsb
sub
push
lcall
pop
orl
std
mov
divb
pop
movntq
bswap
add
addr16
add
add
cwtl
dec
cmpsb
in
push
mov
sub
rcr
add
out
imul
lea
cmpsb
ret
sub
call
test
cmp
mov
shll
cmpsl
xor
outsb
inc
xchg
add
arpl
dec
dec
adc
jno
aaa
and
bound
hlt
negb
mov
outsl
add
jae
jne
sbb
repnz
repz
mov
cs
cld
aas
mov
mov
lods
out
pop
pop
and
xor
sub
popa
out
jae
test
in
add
ret
popa
jns
movsb
scas
and
mov
mov
notl
and
sti
test
jo
sarl
int
lea
shl
nop
mov
cmp
ficomps
fstps
sub
jge
jge
es
out
shll
or
dec
addl
dec
ljmp
negl
in
les
push
arpl
out
mov
push
ret
int3
les
lahf
mov
and
mov
in
push
xor
cwtl
cmp
hlt
fsubs
enter
or
fs
pushf
xchg
xor
por
clc
outsl
and
push
jne
in
push
aaa
pop
or
inc
xor
pop
mov
or
mov
mov
mov
stos
dec
icebp
sub
and
jp
iret
jmp
mov
mov
xchg
and
jno
imul
lds
shlb
inc
fwait
cmpsb
out
int
lods
lahf
jmp
dec
pop
dec
sbb
shrl
jle
mov
or
add
imul
cmc
mov
and
mov
loope
mov
xchg
aad
stos
push
enter
jb
out
jne
mov
popf
mov
push
dec
cmp
mov
out
inc
into
mov
xchg
mov
jle
out
clc
xor
add
mov
xchg
loop
fimuls
sahf
fistl
mov
sti
sbb
xor
fldenv
sti
sub
or
push
adc
je
jnp
loop
ror
push
lods
out
inc
xchg
lods
mov
fwait
in
jecxz
xchg
std
add
rolb
and
xchg
inc
lods
xchg
inc
push
adc
iret
mov
and
mov
mov
mov
mov
xor
loopne
sbb
cltd
push
mov
or
sub
or
dec
sub
xor
mov
inc
mov
aad
cmpsl
pop
inc
test
adc
sbb
xchg
xor
mov
or
arpl
inc
or
adc
push
cmp
paddq
lock
pushf
and
and
mov
jnp
adc
mov
mov
xchg
inc
sbb
cmp
jb
mov
push
dec
stc
and
js
out
pop
daa
dec
xchg
outsb
in
xor
sbb
pop
shll
int
mov
jnp
out
inc
sub
imul
pop
lods
add
xchg
xchg
daa
mov
inc
cmc
jo
lea
scas
ret
into
in
fcmovne
cmp
out
mov
jnp
cli
lahf
negl
jl
mulb
inc
or
sbb
ds
pushf
xchg
jne
and
stos
aaa
inc
ja
inc
xorl
cmpb
les
fadds
das
imul
jbe
sub
fs
ss
push
jne
rcl
sub
jbe
in
mov
mov
idivl
test
out
testl
popa
arpl
movsl
push
inc
add
aaa
xlat
or
dec
mov
fcomps
jmp
jle
lock
xchg
mov
sahf
pop
popl
ja
jle
add
gs
into
mov
pop
jg
xchg
lahf
test
stos
test
orb
dec
shrb
add
inc
adc
mov
mov
pusha
cwtl
mov
xlat
push
les
adc
sbb
jle
xchg
push
adc
fimull
enter
shlb
adc
mov
sbb
sbb
adc
ljmp
ja,pt
repz
mov
push
insb
cmp
mov
sub
or
pop
adc
push
jp
fdivl
cmp
inc
dec
aad
je
sti
or
pop
adc
push
shl
call
mov
sub
xchg
gs
dec
jno
mov
sub
pop
add
cmp
pop
jb
xor
push
sub
jns
dec
sarl
das
inc
ljmp
push
push
mov
dec
nop
cmc
subb
adc
addr16
rol
stc
mov
sbb
and
mov
cwtl
pop
imul
or
cmc
adc
cmpsl
ljmp
scas
fcoml
rolb
cmpsl
xor
push
nop
hlt
and
mov
mov
inc
pop
push
push
lds
cmp
jbe
ret
sbb
or
repnz
jge
add
and
xor
out
ror
cmpsl
sub
enter
int
fiadds
sub
mov
push
xchg
lret
or
add
or
imul
inc
daa
pushf
and
sub
scas
imul
lods
jnp
inc
push
jmp
insl
pushf
add
aam
mov
push
or
int3
test
dec
inc
mov
rol
or
push
ljmp
mov
mov
mov
je
and
cli
xchg
pop
mov
icebp
and
cwtl
stos
out
xor
lahf
xchg
ljmp
out
pop
jns
jle
and
push
dec
adc
fistl
push
int
ja
xchg
shll
inc
imul
repz
dec
lcall
shll
xchg
jg
xor
xchg
cmp
into
into
and
nop
mov
inc
inc
mov
xor
aam
mov
sbb
ja
cs
cli
add
aas
orb
xor
clc
mov
xor
mov
push
sub
dec
xor
sti
orb
adc
fwait
inc
mov
adc
clc
inc
cmp
mov
cmp
adc
mov
inc
xlat
je
mov
fcmovnu
dec
test
jle
cli
fdivr
pop
ffree
cmc
sbb
aaa
xor
fiadds
dec
repnz
iret
or
jb,pn
cs
cmp
sub
mov
pop
movsl
sahf
test
and
dec
frstor
fcoml
fildl
mov
xchg
notb
leave
xor
cmp
xchg
fxtract
pop
shll
xchg
add
pop
nop
mov
dec
mov
push
imul
jno
jge
adc
imul
cli
push
xchg
shrb
xor
pop
adc
insb
jg
xor
in
or
bound
loop
jns
and
into
jge
out
test
arpl
or
iret
shrl
outsb
push
insb
mov
sbb
movsb
jno
mov
push
jmp
test
movsl
arpl
sarl
cmp
ret
test
subl
add
rolb
inc
orb
sbb
cltd
lods
adc
and
mov
mov
push
es
daa
push
aaa
inc
shl
xor
xchg
mov
test
das
iret
fildl
es
aam
mov
call
fimuls
loop
outsl
lods
pop
pop
mov
xor
pop
fwait
pop
sbb
push
rorl
or
and
pop
sub
inc
mov
cltd
mov
and
xor
ror
sbb
push
xchg
sbb
inc
mov
sbb
mov
in
or
nop
test
push
dec
or
enter
subb
push
mov
pushl
fdivl
push
xchg
pop
loop
add
movswl
fldenv
sti
cwtl
cmp
push
rcr
sahf
cmpl
lods
xor
mov
dec
jmp
mov
cmpl
loopne
cmp
and
dec
push
outsb
sbb
mov
inc
mov
lret
gs
jb
sbb
pusha
icebp
sarb
dec
jp
adcl
mov
sub
push
xor
sub
and
sti
enter
and
adc
xchg
cmp
mov
jecxz
sbb
clc
xchg
test
hlt
mov
bound
adc
xor
jmp
dec
popf
popa
mov
xchg
jo
or
rcpps
mov
inc
jbe
lds
in
jecxz
idivl
sbb
insl
loop
lahf
sbb
adc
pushf
stc
sub
cmc
pop
lcall
xchg
ja
adc
xor
jge
add
mov
sub
leave
adcb
jp
fstps
jmp
enter
push
and
push
scas
popa
mov
xor
mov
mov
pop
or
das
jmp
or
iret
adc
push
inc
mov
jbe
leave
mov
lea
mov
loopne
inc
scas
xor
fwait
sub
shrl
loopne
fcoms
dec
push
sahf
mov
jno
jb
arpl
shl
ret
mov
mov
push
rorb
mov
fs
dec
mov
add
popa
fsubr
gs
mov
sbb
mov
mov
mov
lods
dec
xchg
xor
nop
fbstp
lret
mov
or
testb
jmp
lods
pop
cmp
test
or
subb
into
mov
cld
lret
fstps
push
mov
dec
ret
jne
cli
lret
pop
jnp
cmp
jg
insl
outsb
in
xor
cmp
pop
aaa
roll
jle
ret
popf
xlat
data16
xchg
xchg
rorb
cmp
fdivp
sbb
xlat
addl
xchg
push
mov
js
fimuls
into
push
fstps
lea
mov
ret
insl
notl
jge
pop
push
and
fdivp
lret
sub
fists
sub
mov
fisubs
inc
int3
movsb
std
add
push
adc
or
cmp
sub
push
pop
icebp
dec
mov
adc
dec
dec
imul
js
aam
sub
sub
aad
test
mov
sbb
lret
testb
mov
in
jnp
xchg
sti
mov
scas
out
cmc
adc
adc
mov
jge
fisubrl
mov
ret
pushf
pop
sbb
aas
mov
sbb
jns
insb
mov
inc
int
add
dec
and
inc
les
andb
out
cmp
dec
popa
mov
dec
imulb
sbb
inc
add
fnstcw
and
inc
into
or
data16
xor
leave
lods
jno
pusha
and
rorb
lods
cmpsb
mov
xor
mov
pushf
or
mov
outsl
jge
jbe
scas
and
adc
lret
andb
dec
inc
xchg
or
xlat
lcall
add
mov
aas
insl
enter
mov
mov
loop
testl
push
add
aas
pusha
inc
enter
or
mov
negl
push
in
jecxz
cltd
stos
dec
lock
push
sub
pop
nop
dec
cmc
or
xor
jnp
es
push
dec
inc
pop
mov
dec
loopne
pop
cs
dec
test
inc
and
je
in
push
xor
inc
jo
dec
ss
pop
xor
jg
inc
or
lret
stos
shlb
or
cmp
sub
inc
jb
dec
cltd
hlt
push
out
dec
scas
push
add
pop
outsl
js
or
cld
sahf
sub
and
movb
inc
mov
xchg
or
mov
mov
out
mov
inc
aam
mov
or
sbb
and
adc
loopne
pop
out
xor
roll
rol
pushf
insb
cmp
stos
sbb
mov
add
imul
mov
and
mov
xlat
add
dec
loope
icebp
inc
nop
and
lcall
mov
repnz
shll
or
in
push
adc
sbb
lahf
in
xchg
aaa
push
jmp
dec
leave
mov
mov
pop
xchg
lahf
loopne
jns
mov
ret
call
push
lret
pop
fstps
rclb
inc
mov
pop
popf
fadd
inc
push
adc
or
push
sti
ds
cld
gs
push
out
mov
sti
loop
sub
pushf
pushf
es
scas
mov
movsl
mov
sub
mov
test
jp
sub
pop
ds
pmulhuw
loopne
sub
push
pop
mulb
cmp
pop
into
movsl
in
sbb
ficomps
outsl
or
pop
enter
mov
xchg
ja
int
mov
aad
mov
ds
sbb
rcrl
aad
in
mov
mov
add
inc
call
loope
rep
stc
lahf
mov
and
mov
es
inc
scas
stos
cltd
dec
pop
lcall
insb
addr16
push
cld
mov
push
into
sub
mov
mov
lods
push
lods
inc
in
sbb
ljmp
enter
arpl
sahf
push
mov
jmp
mov
cmp
adc
in
push
xor
arpl
and
mov
lods
xchg
xchg
fimull
ja
out
xor
jle
mov
xchg
lret
sbbb
push
aaa
mov
stc
mov
dec
out
adc
mov
outsl
cmc
lret
sub
ljmp
sahf
push
fstp
aam
lret
lods
add
jns
bound
sbb
push
ja
jg
iret
sarl
push
cwtl
imul
mov
sub
push
adc
dec
mov
push
and
push
movl
lods
xchg
add
scas
shrb
and
test
jp
sahf
mov
mov
ret
fnstenv
ss
push
lock
sub
push
add
mov
fnsave
outsl
ret
push
mov
adc
stos
loope
mov
negl
aas
test
lahf
xor
rolb
nop
int3
orb
add
cmp
jg
pop
js
sbb
cmp
arpl
or
repz
add
shlb
lea
out
in
inc
and
add
and
cld
icebp
jne
inc
popa
pop
aas
popf
mulb
ja
ficomps
push
inc
adc
ret
mov
in
lods
test
iret
or
repz
sub
into
repnz
sbb
inc
jnp
push
mov
xor
push
pop
sub
push
sbb
pushf
repnz
sbbl
mov
dec
bnd
loopne
jmp
mov
insl
or
adc
ret
fstps
out
stos
in
inc
mov
push
sub
push
js
sub
imul
loop
sysexit
and
mov
fcmove
sbb
in
insb
sbb
jmp
pusha
sbb
jge
xchg
fdivrs
mov
cmp
or
xlat
pop
adc
shl
jecxz
imul
mov
clc
fstps
adc
fcomp
ja
sbb
xchg
push
pop
xor
ja
pop
xlat
mov
imul
imul
test
add
xor
xor
mov
jnp
add
out
add
sub
sti
or
push
push
loopne
xchg
jno
dec
adc
mov
dec
test
enter
ljmp
mov
push
cmc
outsl
insl
out
push
jne
stc
sahf
push
bound
repz
or
xorb
jne,pt
cmp
pop
shlb
ror
pusha
push
test
fisubs
rorb
sbb
movsl
dec
sahf
leave
aam
clc
cmp
cmc
xchg
in
sub
fadds
loopne
push
fnsave
push
pop
adc
out
lret
adc
jle
cltd
cmpsl
scas
enter
xchg
dec
cmc
xor
dec
or
xchg
cltd
inc
aas
hlt
cli
inc
out
jb
push
pop
bound
mov
les
lds
aaa
jne
and
mov
mov
mov
jae
add
mov
stos
insl
mov
cmc
fsubp
jnp
add
iret
rclb
dec
sbb
lcall
dec
sbb
cwtl
jns
enter
scas
aaa
out
adc
icebp
test
jmp
fsts
hlt
and
xchg
mov
xlat
mov
add
add
jbe
jno
mov
mov
std
mov
mov
lods
in
fisubrl
ret
xchg
dec
popf
cmp
rcll
in
shlb
popl
mov
dec
ret
bound
fcom
jge
add
lds
xchg
xor
pop
fwait
cltd
stc
das
cmp
pop
xor
cmc
sub
in
sbbb
clc
inc
cld
pop
testb
cld
push
imul
or
xchg
and
push
mov
sub
push
sarl
addr16
lret
fs
jo
cmp
cs
fstpt
xchg
stos
lret
sbb
jmp
cmp
jnp
jecxz
test
mov
adc
jl
sbb
mov
xor
pop
test
cmp
lret
insb
jle
or
inc
cld
arpl
push
push
mov
xchg
or
aam
scas
pop
pushf
ljmp
cmp
je
neg
jmp
fidivrs
test
or
sti
pop
ljmp
jbe
jo
sub
and
dec
lahf
and
sbb
sbb
or
and
push
mov
es
scas
pop
add
push
xchg
mov
iret
pop
xor
cmp
push
add
or
das
ficoms
pop
dec
jle
lret
shll
addr16
sbb
inc
jle
in
mov
sub
and
fidivrs
inc
xor
push
or
test
dec
popa
adc
lea
loopne
jns
dec
jno
jbe
cmp
dec
test
mov
xor
out
lds
or
iret
and
push
rcpps
mov
jo
es
mov
or
jbe
cld
xor
loop
or
and
fisttpl
add
fimull
jns
lcall
popf
hlt
sub
mov
popa
test
shrl
sbb
sub
push
ret
shlb
add
mov
mov
mov
sbb
mov
mov
cmp
cmp
popf
cmp
imul
mov
jecxz
hlt
cmpsl
push
adc
jae
sbb
popf
xchg
dec
push
mov
jbe
stc
push
shlb
adc
adc
jp
or
xor
inc
outsl
hlt
sub
pop
dec
push
or
mov
mov
fisubrs
mov
cli
and
call
push
fidivrs
jbe
loope
nop
pop
and
xchg
iret
je
jo
mov
cmp
inc
add
in
jp
mov
adc
cmp
or
in
mov
mov
out
mov
das
xor
mov
push
inc
pushf
std
mov
xor
lret
and
inc
imulb
add
xchg
mov
mov
xor
out
cli
pop
repnz
mov
fildll
call
lahf
rcrl
nop
push
mov
mov
sbb
mov
lods
lds
add
es
adc
sahf
cmc
sub
jecxz
xchg
in
xchg
push
or
cmp
rclb
mov
sbb
cli
in
adc
in
data16
stc
repz
jmp
cmpsb
pop
movsl
xchg
data16
mov
cmc
mov
push
sbb
mov
push
or
dec
cltd
mov
dec
or
pusha
jge
mov
enter
dec
repz
ljmp
icebp
mov
insb
bound
daa
or
arpl
lods
gs
mov
lret
push
mov
or
adc
inc
call
mov
pop
aaa
xlat
loope
pop
into
inc
cmp
adc
jb
cmp
dec
or
shlb
dec
xor
addl
dec
loopne
lahf
pusha
jg
data16
adc
in
daa
ret
adc
mov
cld
inc
fdivp
cmp
jns
jge
and
les
outsb
ret
adc
outsb
jns
jge
dec
call
aas
dec
insb
add
sbb
std
das
jmp
mov
dec
cmp
jg
push
in
jl
fdivrl
imul
dec
mov
out
xchg
adc
cmp
iret
xchg
inc
cmp
and
bound
push
mov
lret
and
mov
push
and
andl
adc
jmp
cmp
mov
mov
jbe
jle
dec
adc
insb
lods
xchg
push
cmpsb
es
sbb
std
icebp
mov
add
fdivrs
int3
int3
dec
call
push
push
lret
xor
push
add
fsubrs
repz
fnstsw
scas
fdivrp
cli
dec
aaa
push
sbb
lret
fcompl
enter
stos
jno
popf
inc
mov
cmp
nop
or
popf
movsb
sti
std
das
mov
stc
cs
or
add
lret
sub
in
dec
lea
lretw
sub
pop
cmc
mov
jo
xchg
nop
imul
push
leave
lods
pop
movsl
dec
dec
nop
arpl
push
insb
jo
lcall
iret
mov
adc
inc
cmpsl
data16
mov
mov
fwait
ljmp
xchg
push
ds
pop
inc
aaa
es
roll
out
push
sbb
fwait
adc
xlat
mov
popa
sub
ret
mov
sbb
jb
xchg
mov
cmc
push
cmp
mov
sbb
dec
sahf
or
xchg
add
ret
mov
mov
stc
add
mov
jmp
jl
jge
jle
mov
push
inc
data16
lret
pop
fs
push
add
or
mov
aam
lret
nop
sbb
sub
in
js
lea
push
pop
jmp
test
das
scas
sti
mov
lock
into
jnp
xchg
in
jp
pop
lea
and
outsb
push
cmp
scas
lcall
dec
faddl
inc
scas
or
mov
cli
lods
xor
push
push
leave
and
insb
xchg
inc
mov
pop
cmp
hlt
das
xchg
cmp
add
xor
aad
femms
xchg
js
jns
test
lea
out
dec
mov
filds
sbb
inc
mov
loope
test
scas
xchg
scas
dec
cmp
xchg
adc
sub
jecxz
or
xchg
jmp
daa
dec
push
aad
mov
popf
mull
out
test
out
push
ljmp
dec
dec
jmp
adc
dec
xchg
andb
in
test
sub
cmp
fiaddl
hlt
pop
rol
push
add
lods
mov
filds
mov
xchg
dec
push
pop
push
and
sub
cmp
lods
js
mov
push
adc
xlat
test
pop
jno
addb
pop
cmpsl
mov
insl
scas
subl
popa
sbb
stos
int
adc
arpl
mov
adc
jnp
inc
jae
out
xchg
mov
inc
mov
and
mov
ror
bound
idivl
sbb
js
pop
cmc
jmp
xor
pop
fstp
jp
inc
cwtl
cltd
cs
jl
nop
shrb
arpl
call
or
ficomps
repnz
mov
xor
nop
add
call
orb
popa
lret
ja
ja
mov
addr16
xor
sub
cmp
mov
cmpsl
cmp
xor
inc
add
sahf
dec
push
xchg
int
mov
sub
mov
cmpsb
jb
dec
mov
lods
mov
cli
fwait
jae
push
mov
mov
inc
cmpsl
adc
jg
ljmp
negl
sbb
pop
and
sub
cld
in
or
outsb
addl
leave
in
mov
mov
xchg
lock
lods
xchg
inc
and
sbb
xchg
out
mov
sbb
out
pop
faddp
mov
in
ror
jbe
xlat
cmpsl
xchg
pop
les
rorb
add
sub
and
in
adc
lock
xchg
div
ja
cmp
popa
stos
and
sub
outsl
pop
pop
and
jmp
or
lds
or
repz
bound
jg
mov
lods
imul
inc
dec
inc
and
push
mov
outsl
ljmp
jge
inc
daa
push
cld
mov
sahf
jb
mov
dec
lds
push
mov
and
lahf
push
test
pop
orb
mov
mov
xchg
push
add
cmp
jo
jl
jno
inc
mov
cmpsl
mov
in
adc
fidivl
push
cmpsl
sbb
bound
adc
fs
aam
ja
push
cmpsl
sbb
je
movsb
pop
or
sub
pop
mov
sbb
push
xchg
test
sti
sahf
sbb
js
jmp
sbb
das
aas
inc
test
jl
mov
lret
lret
sub
out
mov
sbb
jo
add
jo
mov
xchg
sub
ljmp
pop
inc
std
in
pop
push
push
xchg
pop
inc
jl
add
xor
sahf
out
adcb
add
gs
stc
jg
jmp
testl
push
mov
adc
mov
push
jnp
rcrl
pusha
iret
mov
xlat
aas
out
test
add
lcall
mov
shl
clc
loope
daa
push
inc
cs
mov
mov
adc
clc
push
loopne
dec
sti
dec
and
jle
xor
ljmp
add
adc
fwait
lret
scas
scas
dec
mov
iret
ds
adcl
fsubrl
push
in
or
mov
lds
push
out
sbb
xchg
aam
or
mov
lods
push
mov
push
imul
movsb
mov
mov
scas
fwait
mov
mov
fs
imul
test
inc
sub
mov
sub
fwait
or
das
push
cmpsb
dec
jmp
xor
nop
sub
and
mov
inc
push
dec
or
cmp
jle
rclb
sbb
lahf
mov
leave
cli
lock
pusha
xor
cmovge
dec
mov
cbtw
dec
xchg
addr16
loop
mov
nop
aad
pop
adc
cwtl
clc
fldt
nop
std
hlt
pop
loope
in
dec
jns
jle
xor
mov
insl
adc
mov
daa
das
xchg
mov
mov
lods
rol
add
sbb
aad
nop
adc
jge
popf
rcll
lods
dec
sub
adc
mov
sbb
mov
fdiv
cmp
inc
arpl
inc
cld
push
arpl
repnz
enter
das
es
or
push
out
jne
cld
add
lds
sbb
adc
push
push
in
mov
mov
int3
sub
fildll
mov
daa
icebp
xchg
bound
fwait
mov
mov
xchg
testb
xor
add
xchg
std
dec
sti
ljmp
add
out
sub
shlb
jmp
adc
clc
add
fnsave
pop
xor
and
int3
fcomip
scas
cmovbe
jle
xor
ja
inc
mov
xor
loopne
xchg
mov
jg
leave
mov
dec
lahf
and
lods
sti
inc
or
sbb
and
xchg
mov
ret
inc
push
cli
scas
mov
dec
movaps
cmc
xchg
push
pop
sbb
xchg
shl
mov
icebp
pop
push
sti
cmpsb
bound
int
in
iret
push
push
pop
repnz
hlt
jmp
cpuid
dec
pop
imul
mov
fcomps
pop
mov
xchg
and
aaa
ret
mov
push
cmp
mov
sbb
repz
aas
dec
addr16
outsb
out
xchg
ficoms
orl
inc
add
aaa
movsb
lahf
fwait
incb
in
fildll
push
adc
lret
cmp
movsb
xor
fimull
in
fnstenv
or
mov
es
dec
mov
mov
cmp
mov
in
cmpsl
xor
mov
es
lods
loope
adc
out
mov
push
dec
in
mov
test
push
xchg
fnsave
rcll
stos
xor
jo
add
call
mov
xor
push
addb
jecxz
xchg
movsl
aad
jbe
popf
ss
mov
push
dec
enter
lret
or
scas
das
call
rclb
iret
mov
pop
mov
icebp
xchg
lret
sbb
adc
and
and
in
int3
jns
jae
enter
sbb
xchg
ret
pop
mov
jnp
push
aas
test
cli
or
or
test
in
gs
scas
push
sbb
stos
pusha
xchg
stc
mov
mov
dec
pushfw
cmp
and
or
jno
test
mov
into
mov
sub
scas
push
lcall
ret
pop
mov
and
mov
inc
sbb
pop
and
orl
jle
pop
jmp
xor
cmp
in
mov
jnp
bnd
js
outsb
int3
aaa
stc
out
xor
fistps
push
mov
insb
dec
in
rcrl
jmp
test
outsb
cld
lret
loop
push
mov
mov
and
jae
xor
pop
fldcw
in
xchg
mov
popf
movsb
sbb
iret
jnp
add
xchg
imul
ret
adc
cvtps2pd
cmp
sahf
xchg
pusha
push
adc
cmp
xchg
dec
nop
mov
das
mov
clc
cwtl
shll
mov
call
leave
ret
icebp
mov
stc
in
mov
add
cmp
mov
sub
int
jbe
mov
ds
xor
out
add
dec
outsl
ljmp
xor
mov
in
bound
jge
scas
mov
loope
in
gs
std
fiadds
pushf
sahf
mov
and
add
in
stos
jbe
xlat
push
enter
inc
push
push
jmp
inc
sbb
mov
inc
sub
jno
jg
mov
inc
jle
sub
pushf
ja
movsl
and
mov
test
jmp
adc
xchg
fiadds
movsb
pop
adc
int
mov
sub
in
inc
cltd
mov
push
testl
xor
jne
repnz
pop
pusha
iret
fdivs
ffreep
aad
add
jge
clc
sbb
sbb
daa
addr16
sahf
or
inc
mov
pop
mov
std
lahf
xchg
rcrl
pop
or
int3
add
sti
sub
add
inc
xor
sub
jnp
in
das
cmpsl
dec
pop
cltd
xor
add
sbb
aad
xor
push
fcoms
arpl
dec
test
arpl
sub
mov
idivl
push
cmp
cltd
sbb
clc
aas
mov
rclb
mov
ss
dec
cmp
jo
inc
std
ds
cld
repnz
pop
and
cmpsl
rol
loop
and
js
dec
sahf
hlt
movsl
insb
sti
push
xchg
rclb
xchg
inc
nop
lret
add
dec
lods
daa
out
cli
ficoml
xor
cwtl
stc
nop
inc
pop
in
mov
aaa
cmc
fdiv
data16
cld
xchg
cmpsb
xchg
js
neg
push
sahf
mov
out
xor
in
into
lahf
adc
mov
push
push
ret
stc
pavgw
sub
rclb
sub
lahf
or
and
sbb
mov
dec
call
sbb
push
pushf
push
es
cmp
lcall
repnz
jno
enter
push
and
push
xchg
or
ds
mov
in
mov
outsb
int3
out
mov
cltd
stos
shrl
push
fmul
ja
into
insl
test
jnp
mov
or
clc
je
pop
lods
push
sbb
jno
add
push
push
in
adc
test
les
mov
lods
mov
shll
xchg
inc
in
dec
mov
and
lahf
sbb
mov
sub
add
int
pop
pop
push
popl
ret
add
add
pop
or
in
sub
loopne
mov
sbb
shrb
pop
push
jg
enter
imul
test
xchg
sbb
or
push
test
xchg
lock
cmp
ljmp
cli
and
bound
xorl
les
stc
imul
mov
lea
xlat
test
cwtl
add
popa
cmpsb
adc
xchg
cli
pushf
pop
cmp
and
cltd
fmuls
jmp
ja
ret
test
ljmp
movsb
repnz
fimuls
out
add
or
pop
mov
inc
inc
fadd
dec
pop
dec
or
fnsave
mov
out
lock
lods
sbb
or
mov
fnsave
jg
fcmovnb
movsb
xor
jp
jne
cwtl
in
add
fdivrl
fnstsw
jnp
mov
dec
push
aas
fcmovne
cmp
lahf
push
push
fwait
xor
dec
inc
mov
sub
jmp
pusha
icebp
add
inc
cmpsl
add
movsb
fnstsw
idivl
jle
sbb
outsl
aad
ss
pop
cli
aas
repnz
popl
repz
sub
fbld
aad
fdivs
cmp
repz
in
xchg
das
add
out
loop
int
fsubs
sub
mov
imull
jne
in
push
dec
mov
dec
pop
add
rcr
mov
xchg
mov
mov
and
sbb
popa
and
insl
scas
cld
jmp
and
adc
xchg
mov
jmp
mov
int
push
jae
sbb
mov
sbbb
pop
into
push
iret
and
or
outsl
int
add
sub
outsb
in
and
insb
cwtl
repz
jbe
rcll
push
fdivrl
jns
jnp
sub
loopne
mov
jp
cmp
mov
sbb
pushl
sbb
jecxz
scas
push
mov
int3
test
mov
and
mov
popf
pop
in
das
lahf
mov
cmpsb
lods
pop
xor
mov
in
sbb
imul
cmp
mov
mov
mov
in
xchg
icebp
mov
xchg
ficompl
loop
push
dec
inc
xor
pop
ljmp
int3
das
add
stos
mov
int3
mov
js
mov
lock
pop
or
aad
shll
xor
aam
int3
pusha
xchg
mov
out
js
jl
xchg
inc
iret
ffree
cmp
and
test
shlb
pop
sbb
or
and
jg
mov
imul
mov
jne
pop
imul
insb
jo
clc
fwait
ja
je
mov
xor
jo
loopne
rcrl
clc
aad
aaa
mov
in
scas
mov
and
jge
cmp
insb
add
test
cmc
rcl
dec
popf
aam
jp
xlat
xor
mov
mov
xor
aaa
push
jg
push
mov
xor
icebp
and
push
push
jmp
xor
pop
mov
mov
fnsave
jb
insb
inc
inc
push
lods
sbb
jecxz
push
into
xor
in
push
sbb
and
xor
mov
add
cltd
les
and
xor
jg
subb
fisttpll
or
dec
xchg
mov
scas
scas
insl
ror
imul
jbe
or
pop
out
jp
int3
fisttpll
fcmovnu
cmpb
mov
iret
mov
xchg
pushaw
and
insl
ficoms
and
add
adc
fldl
jb
pop
std
adc
xchg
lock
xchg
or
mov
inc
daa
orb
inc
pop
push
dec
pop
inc
sbb
daa
movsb
pop
ds
insb
inc
mov
mul
outsb
shl
adc
or
aaa
push
jne
frstor
gs
push
sti
scas
int
jne
pop
rsqrtps
scas
rcr
mov
inc
stos
test
mov
pop
call
cmp
push
fdivr
cmp
lds
add
lret
popa
inc
mov
dec
adc
adc
inc
rcrb
mov
lahf
repnz
pop
push
sbb
push
nop
sbb
sbb
cs
mov
push
lods
inc
int
dec
cwtl
dec
clc
sbb
add
dec
cs
test
inc
mov
mov
cmpsb
test
jne
inc
mov
mov
dec
cmp
das
iret
outsl
stos
add
or
popa
sbb
sub
adc
and
por
sub
xor
ret
xor
adc
adc
pop
mov
insl
jle
mov
or
fimull
xor
test
cld
mov
xlat
dec
push
sub
jp
xor
cli
pop
gs
pop
insb
enter
cmpsb
imul
xor
sti
les
inc
test
dec
xor
test
xchg
movsl
test
aad
fstpl
in
imul
les
jnp
xchg
dec
incb
scas
leave
inc
addl
icebp
fwait
jbe
jmp
add
add
sub
loope
lea
lods
imul
push
pop
mov
and
add
dec
push
jae
push
in
repnz
add
fs
fadds
cmp
aaa
cmp
dec
movsb
imul
inc
jl
ret
xchg
cmp
addl
ret
scas
mov
push
outsb
and
cmpsl
arpl
cmpsb
hlt
ljmp
cwtl
jle
or
jl
xor
ret
xchg
adc
fcmove
push
sbb
add
fisubrl
pop
xchg
ds
push
sub
inc
psllq
push
mov
gs
dec
and
jmp
xchg
flds
mov
cmp
dec
push
cmp
jae
sbb
inc
cmp
mov
adc
enter
jne
jne
mov
dec
movsb
in
push
sbb
pushf
push
dec
inc
and
sub
sbb
xor
mov
jne
or
push
ds
xchg
mov
mov
xlat
inc
jg
rol
and
dec
testl
cmp
movsb
adc
cli
in
pop
push
sti
pusha
sub
stos
outsb
mov
cmc
in
or
or
sbb
push
loope
mov
pop
mov
mov
daa
outsb
std
add
test
mov
mov
inc
and
push
mov
loopne
inc
pop
dec
inc
xchg
cmp
popa
jl
fst
mov
mov
andl
or
cmc
push
cmc
scas
pop
mov
out
popl
inc
add
inc
sahf
inc
sub
cli
mov
cs
test
in
xor
sbb
or
clc
mov
cmp
jne
sub
addb
adc
push
aaa
cs
dec
add
xor
xchg
sbb
shll
outsb
pusha
mov
adc
jne
cmp
movsl
xor
enter
inc
adc
lret
iret
push
adc
out
mov
xor
push
cmp
inc
xchg
in
pop
and
add
lock
push
gs
lock
loope
xlat
lock
loope
test
sbb
mov
xor
inc
push
mov
and
test
jb
pop
push
stc
dec
cmpsb
mov
xchg
push
shll
ljmp
adc
pop
xor
push
ret
adcl
shlb
sub
stc
inc
cmpsl
mov
popf
mov
xchg
xchg
cmc
fistps
xor
fcmovb
push
jp
sub
aam
les
mov
sarb
cmpsb
inc
vmread
add
pushf
mov
rorl
das
cwtl
fstp
mov
sbb
adc
lret
loope
inc
sbb
gs
hlt
imul
repnz
pop
xchg
cmpsl
shll
sahf
adc
xlat
lret
xchg
dec
cmovnp
je
sbb
aad
in
lret
add
pop
rclb
incl
into
fs
loope
cmc
push
jo
call
cmc
add
pop
mov
jg
sbb
push
cmc
cmpsb
repz
or
orb
xchg
inc
in
sbbb
stos
inc
ret
lods
loop
ret
movsb
mov
and
mov
ret
inc
jbe
rcr
xchg
stc
loopne
inc
push
jb
cmp
sub
dec
out
jae
sub
jnp
jecxz
mov
fs
lahf
sub
pop
jmp
mov
push
inc
xchg
mov
pop
mov
in
xchg
loop
push
push
cld
adc
push
int
in
imul
fdivr
iret
ficompl
in
or
popa
inc
push
pop
loop
loope,pn
nop
mov
cmp
in
out
out
lods
pop
mov
xor
cwtl
lret
divb
inc
stos
loop
std
in
fs
adc
fucomi
xorb
push
mov
lds
sub
jecxz
jno
and
inc
push
jge
adc
xor
daa
mov
cmp
adc
xor
add
inc
std
pop
sub
fiadds
push
cvtps2pi
dec
mov
sbb
aad
ds
adc
in
popa
jg
or
popf
ja
clc
imul
xchg
dec
fidivl
shll
xor
addl
jns
jae
adc
cltd
jecxz
int
mov
xchg
adc
jnp
jo
pushf
inc
adc
je
shr
out
popl
mov
stos
cmp
loope
cmp
or
cmp
sbb
sub
fidivl
lcall
call
cmp
test
adc
sub
filds
mov
jmp
loopne
jo
mov
sbbl
xchg
fwait
push
fisubrs
cmpsb
jb
jg
inc
cld
xchg
popf
and
cmp
lock
mov
xchg
sub
insl
shl
lds
shrl
cld
nop
stc
xor
dec
loopne
or
hlt
call
push
dec
fcoms
ror
pop
sub
pushf
sbb
xorb
mov
stc
les
mov
lock
ljmp
push
fmull
sbb
sub
mov
rolb
hlt
inc
sub
enter
icebp
and
mov
adc
leave
ja
push
xor
push
lds
jb
loop
ret
xchg
mov
in
adc
fwait
jg
je
icebp
je
pop
insb
jmp
or
in
ret
cmpsb
jnp
insb
insl
in
lcall
mov
mov
test
cmp
pushl
add
push
or
icebp
mov
mov
add
adc
mov
jnp
push
cmp
pop
loope
xor
sbb
ret
repz
or
mov
mov
insb
call
ljmp
lea
pushf
push
mov
mov
sbb
mov
sti
pop
cmpsb
adc
rorl
adc
divps
push
outsl
mov
cmpsl
imul
sub
nop
jne
fisubrl
xor
lods
gs
loopne
loope
mov
test
mov
mov
xor
filds
mov
mov
test
sbb
or
test
jge
dec
push
or
mulb
int3
loop
aam
psllq
inc
nop
popf
sub
and
mov
sbb
test
jne
inc
cmpsb
mull
xor
push
int
lcall
push
push
mov
push
push
dec
cmp
mov
sahf
mov
dec
daa
iret
in
rorl
jle
bound
ss
pop
and
and
leave
mov
mov
stos
mov
test
jne
fs
in
jle
add
imul
cld
sbb
nop
imul
nop
imul
mov
xor
inc
push
push
mov
or
out
xchg
rorb
and
in
into
call
pop
xlat
cli
call
clc
xchg
ja
inc
lcall
add
addr16
push
mov
pushf
mov
xor
mov
lock
call
or
mov
add
push
adc
jle
xchg
aaa
lea
and
rcrb
jno
jecxz
jge
and
adc
push
lea
nop
nop
js
xlat
dec
fchs
inc
dec
jb
leave
jne
jmp
mov
jne
dec
jecxz
mov
push
pop
ja
mov
in
push
mov
pop
and
adc
pop
lods
and
fwait
inc
pusha
pop
dec
ds
pop
mov
loope
hlt
lcall
test
lods
and
xchg
fs
push
sbb
inc
stos
inc
sub
test
iret
aaa
push
test
and
adc
les
movl
xor
dec
pop
pop
push
insb
aas
ftst
jo
in
icebp
lea
pusha
mov
inc
mov
repz
fisttpl
xchg
sbbb
cld
push
pop
xchg
in
fstpt
add
push
cmp
mov
xor
int
gs
clc
test
mov
shl
or
test
fsubs
mov
shr
out
mov
jb
xor
movsb
nop
sub
inc
in
pop
add
aam
add
mov
ds
enter
sub
in
ret
ficoml
test
mov
leave
push
add
mov
or
or
cli
dec
fimull
decl
imull
cmc
pop
pop
gs
and
or
mov
popf
sti
fdivrs
lahf
mov
js
mov
adc
jle
sub
or
add
iret
mov
adc
inc
popf
movsb
test
fiadds
add
add
test
push
lahf
inc
jnp
cmpsb
lock
sbb
imul
mov
and
fnsetpm(287
jo
cmp
imul
cli
cmc
mov
sub
mov
mov
subb
leave
fs
xchg
push
xor
cmpsl
xchg
or
lcall
stos
cmp
jno
icebp
ja
cmp
loopne
dec
cmpb
mov
jno
ljmp
lret
sbb
das
xchg
or
mov
cwtl
ja
sbb
int
fisttpl
inc
into
out
jmp
aam
add
shr
pusha
xchg
movsb
pop
aas
mov
lods
add
stc
mov
sti
xor
mov
test
notb
push
jns
and
fwait
jno
enter
lret
in
jg
and
into
repz
mov
decb
mov
xchg
iret
push
sbb
imul
pop
xchg
decb
dec
enter
fistpl
movsl
loopne
or
push
sub
mov
rdmsr
in
pop
lret
and
pmullw
fstpl
and
ja
outsl
in
cmp
cmp
scas
add
cmp
and
mov
mov
mov
roll
push
mov
imul
mov
dec
cmp
mov
shr
cwtl
stos
jb
lock
ror
dec
push
bound
add
or
add
shlb
cmc
cwtl
cmpsl
sub
sub
stos
mov
jns
jb
cmp
and
les
jne
inc
xchg
adc
sub
cwtl
das
cmp
mov
aam
push
icebp
cmc
or
lods
fcompp
int3
into
dec
and
pop
lds
mov
jmp
xchg
xor
xor
mov
outsl
shl
ljmp
cmpsl
inc
loope
shlb
lds
lods
xchg
ja
mov
pushf
jno
fs
or
and
sub
roll
dec
mov
sti
bound
inc
pop
lret
and
mov
test
and
arpl
fnstsw
sub
lods
push
outsl
inc
mov
outsb
dec
cld
arpl
icebp
movsl
bound
shl
xor
mov
test
and
rcr
push
xor
and
sbb
and
gs
adc
ret
imull
rcl
into
clc
fs
xlat
lret
cli
sti
gs
in
jne
mov
xlat
addl
inc
fwait
jg
sub
ds
pop
adc
mov
pop
inc
pop
mov
mov
jg
add
ss
push
mov
out
sub
mov
lea
mov
dec
scas
out
jecxz
lahf
cwtl
push
imul
add
ss
test
pop
and
adc
fsubl
insl
xchg
clc
cltd
test
pop
sub
pop
xor
xchg
jmpw
and
inc
sbb
xlat
push
bound
push
sub
or
in
repz
xchg
cmp
loope
scas
jmp
pop
out
mov
stos
cmp
push
out
adcl
push
stc
or
repz
faddp
fwait
dec
sbb
in
and
jge
lods
daa
pop
out
xor
push
stos
and
addr16
pushf
bound
dec
dec
lds
clc
mov
outsl
test
mov
push
mov
adc
and
nop
data16
dec
rol
imul
jge
dec
or
arpl
sub
jo
jg
pop
insb
xchg
bswap
or
cmp
fstps
out
lds
jl
jne
lods
cmp
mov
test
aaa
sbb
sar
push
adc
xchg
dec
pop
adc
and
in
aad
out
lcall
push
out
push
sti
cmovg
jns
dec
test
adc
shrb
sbb
lret
inc
sub
xchg
sbb
sbb
lds
jp
test
push
daa
xchg
les
sbb
insl
adc
push
xchg
mov
jl
pop
pop
test
addr16
or
xchg
cmp
and
call
mov
adc
xchg
push
jae
add
pop
popf
dec
cmc
xchg
jo
mov
jmp
and
mov
sbb
pushf
inc
push
cli
sub
iret
sub
xlat
ljmp
aad
out
mov
sub
fiaddl
mov
sti
dec
or
jecxz
push
iret
dec
cmp
inc
icebp
jg
js
mov
mov
fcompl
and
sbb
sbb
lea
push
cltd
imul
jl
fucomi
sarb
xchg
je
inc
fs
cs
and
sub
dec
cltd
jl
add
sub
addr16
icebp
enter
dec
xor
sub
jbe
lods
sub
out
lret
fdivrs
or
into
push
sbb
jns
cmc
cmp
jb
out
outsb
xchg
gs
in
mov
sahf
inc
stc
sbb
neg
pop
add
jb
jne
inc
popf
jmp
xor
shlb
xor
mov
aaa
mov
and
icebp
aam
js
insb
fisttpll
mov
inc
sbb
in
jae
int
xchg
mov
xor
mov
sub
mov
lret
iret
xchg
mov
mov
or
adc
jle
xor
negb
repnz
dec
sub
test
or
scas
mov
aad
mov
popa
and
arpl
mov
je
pop
notl
test
jns
push
jp
mov
mov
dec
sbb
lret
pop
insb
mov
pusha
sub
mov
and
xorb
scas
es
add
fstps
add
sti
jbe
repnz
mov
into
mov
jbe
jb
arpl
jbe
imull
test
outsl
inc
jmp
mov
mov
mov
pop
add
jbe
enter
sbb
jno
repz
sbb
mul
shll
popa
popa
fwait
xlat
in
stos
dec
push
cmp
pop
adc
scas
adc
mov
scas
push
push
and
stc
shl
pop
sbb
pop
cli
in
or
mov
sub
adc
xchg
loopne
mov
jnp
lret
fsubl
sbb
test
bound
fists
test
mov
int3
outsl
push
push
mulb
inc
mov
inc
fsts
in
push
pop
in
jnp
pop
faddl
sub
xor
jb
mov
mov
mov
jl
rolb
sahf
test
xchg
insl
aas
pusha
out
rol
aaa
mov
adcl
jg
xor
ds
mov
in
xchg
jo
jmp
mov
aad
and
push
in
call
cmp
ror
test
outsb
mov
shll
rolb
lret
fmuls
daa
mov
inc
xchg
gs
data16
xchg
popa
sbbl
cs
stc
rol
mov
stos
mov
xor
dec
xor
xlat
shll
mov
push
push
bnd
mov
mov
cwtl
pop
and
mov
test
pop
enter
pusha
dec
scas
lcall
or
adc
movsb
dec
mov
adc
cwtl
mov
pop
mov
std
scas
lea
aaa
mov
push
movsl
and
push
or
inc
mov
jo
inc
mov
imul
cmc
js
cltd
cmp
faddl
andb
adc
xchg
pop
dec
adc
mov
lret
xor
cld
pushf
inc
dec
sbbb
ds
lret
mov
icebp
cmpsl
lds
dec
and
inc
push
cli
ljmp
push
dec
xor
cmp
outsb
das
aaa
sub
or
movsl
mov
cmp
add
mov
cmpsl
fmuls
mov
pop
inc
cs
or
stos
mov
push
lret
jo
cmp
jb
xor
sub
mov
xor
nop
scas
or
inc
outsl
push
adc
mov
xchg
mov
push
xlat
mov
fdivrs
bound
pop
lock
jge
and
push
in
mov
inc
fs
ljmp
dec
dec
add
js
xchg
push
add
adc
dec
daa
sbb
ret
out
inc
dec
lock
push
and
adc
pusha
xlat
outsb
movsb
fs
popa
arpl
xchg
popf
lea
in
mov
test
xor
arpl
daa
fwait
lea
ret
ss
bound
or
jg
jnp
add
sarl
dec
daa
mov
xor
push
sahf
mov
arpl
cmp
into
ja
sbb
and
pop
sub
sbb
int
mov
js
lcall
cld
pop
jl
shl
or
repnz
mov
cld
in
loope
frstor
push
mov
inc
fcoml
sahf
shrl
in
sbb
test
fcmove
mov
or
outsb
jle
mov
into
stc
imul
sbbb
iret
inc
add
lods
cmpsb
xor
push
dec
jp
insl
imul
movsb
push
jbe
jge
jno
stc
dec
push
cs
pop
mov
sub
test
sbb
add
dec
sub
hlt
xchg
filds
jne
into
das
aad
mov
xor
push
sti
lds
pop
test
mov
in
push
xor
add
pop
mov
test
mov
mov
jnp
lods
addb
jle
cmpsb
rol
mov
push
fwait
das
es
scas
push
jnp
adc
setns
jg
mov
adcl
addr16
pusha
push
out
jp
lret
mov
sbb
dec
dec
add
test
sti
push
test
cmp
stos
jle
push
lret
mov
cmpl
cmp
ret
popa
repz
stos
xlat
jo
sbb
mov
sub
sbb
xchg
or
mov
jecxz
test
xlat
outsb
loop
xor
stos
fcomip
sbb
xchg
dec
adc
mov
add
fisubl
test
lods
adc
xchg
jae
jne
inc
cmp
scas
int
into
lahf
int3
int
add
sub
or
mov
dec
mov
xlat
imul
fisubl
pop
cmp
out
rcl
fwait
pop
enter
fs
xor
fstpt
shlb
data16
inc
aas
addb
scas
insb
jmp
cmp
mov
lods
pop
aad
add
lret
inc
push
jbe
sub
pusha
stos
enter
scas
jne
in
adc
xor
add
into
cld
push
and
or
xlat
popf
mov
fmul
rcr
mov
xchg
sub
mov
dec
cld
lcall
sbb
addb
fstpt
mov
bound
test
inc
cmp
push
mov
lcall
imul
shl
insl
or
movsb
jle
push
xchg
pop
out
mov
cli
mov
mov
cltd
das
inc
sarl
fcoms
and
mov
sub
fsub
mov
fadds
push
mov
stos
push
out
fisubs
push
pushf
sub
or
cmpsb
insb
push
xor
aam
sbb
xor
or
pop
jecxz
dec
js
sar
or
mov
pop
outsl
inc
into
or
sub
dec
lret
fcoms
inc
add
ljmp
call
pop
ja,pt
cld
lahf
mov
xor
jns
dec
insb
inc
sbb
xlat
or
pop
dec
inc
dec
dec
cwtl
outsl
cmp
in
scas
adc
push
pop
and
dec
dec
adc
fsubrl
mov
aam
inc
pop
lahf
lret
ret
mov
inc
pop
orb
cltd
mov
iret
jo
stos
xchg
pop
add
in
mov
sbb
jle
sbb
pop
pop
mov
outsb
or
test
cmp
enter
sub
popa
lock
mov
enter
ret
add
jg
adc
inc
repnz
add
push
inc
movsb
mov
or
xlat
hlt
cmpb
out
and
lret
out
xchg
repnz
mov
xchg
sub
je
xor
jbe
iret
pop
lcall
jne
in
sub
loopne
ds
xor
fs
pop
or
push
push
add
repnz
test
and
add
mulb
inc
sbb
js
xor
sub
out
call
xor
dec
das
jl
dec
cmp
pop
fbstp
cli
movsl
jmp
sbb
inc
add
shrl
pop
cmp
dec
loope
in
mov
and
inc
aaa
and
jle
add
in
ret
inc
add
lds
mov
ret
inc
dec
mov
mov
inc
arpl
xchg
xchg
jecxz
and
jb
lea
xor
nop
pop
mov
popa
lret
mov
js
dec
push
jno
dec
out
mov
or
mov
jl
xchg
sbb
push
cmp
lds
pop
ljmp
movsb
push
les
pop
out
negb
sub
mov
mov
lret
outsb
mov
sahf
lods
ret
adc
inc
push
addr16
pop
jl
adc
sbb
fistps
sarb
call
cmpsb
bound
inc
fstpl
ret
int3
add
cmpsl
in
and
mov
jb
dec
pop
or
sbb
xor
pop
pop
ret
add
out
push
xorb
arpl
mov
je
jns
cmp
not
sbb
sub
sbb
sub
mov
dec
cwtl
mov
pmulhuw
cmp
addl
pop
push
je
ljmp
inc
loopne
pop
in
movsl
pushf
cltd
jl
jnp
mov
mov
push
or
pushf
inc
inc
cmpsb
fwait
or
and
push
sbb
cmpl
mov
jae
test
popf
adc
fcomps
sbb
xor
in
aam
loop
push
mov
cmp
mov
add
out
push
sahf
mov
or
push
mov
mov
fcmovne
dec
arpl
into
mov
fmuls
cmp
ficoms
pop
lds
cwtl
cmp
cmp
popf
add
mov
xchg
arpl
sbb
jns
fxch
addr16
sbb
adc
xchg
xchg
xchg
ret
aas
negb
dec
or
das
inc
mov
cli
add
adc
je
movsl
call
ret
push
jge
mov
push
aam
dec
adc
arpl
divb
push
mov
cli
ja
fdivl
mov
push
adc
pop
pop
sub
inc
popa
ljmp
cmpsl
sahf
or
decb
pop
sub
xchg
stos
jg
shr
jb
add
cmpl
loop
mov
stos
sub
adc
mov
movsb
repnz
jae
adcb
cmp
mov
inc
in
in
fisttps
dec
hlt
jno
enter
push
cmpsb
inc
sub
adc
push
movsb
jmp
pop
mov
repnz
add
xor
fistpll
pop
lds
fnstcw
out
movsl
mulb
test
je
sub
ficompl
lods
test
inc
xchg
in
into
cld
push
test
fxam
xchg
xchg
push
test
iret
mov
movsl
into
fidivs
jbe
imul
pusha
out
lock
movaps
dec
and
inc
mull
shll
scas
push
sti
divb
jecxz
xor
adc
cld
popf
rol
jb
dec
dec
and
sub
push
pop
mov
imul
pusha
push
movsb
lock
push
cmp
jne
addr16
xchg
jge
xor
mov
mov
add
outsl
dec
je
scas
sub
stc
push
cs
add
push
std
aaa
fidivl
lock
push
insl
xlat
add
scas
mov
sbb
push
sbb
and
and
adc
xor
repz
fnstenv
dec
inc
iret
daa
add
jb
inc
ficomps
lea
movsl
add
xchg
adc
sub
pop
stos
push
mov
neg
ficomps
mov
call
inc
jne
cmp
pop
xorl
not
mov
jmp
or
imul
sub
aas
or
inc
mov
xor
jnp
out
call
xchg
test
int3
subl
sti
and
arpl
loop
call
mov
mov
gs
push
lods
add
sbb
or
pop
sub
mov
pop
inc
mov
in
loopne
or
mov
adc
jmp
sbb
out
mov
push
dec
fsubrp
mov
inc
jl
mov
xchg
sbb
inc
adc
xchg
cmp
fbstp
bswap
xchg
jg
xor
gs
push
stos
jge
pop
arpl
bound
les
aas
popf
cmp
sub
mov
outsb
inc
and
icebp
jmp
xchg
fistpll
je
mov
push
in
cmp
adc
sub
aad
scas
jl
jb
add
xchg
test
adc
or
jne
lret
or
dec
cmp
cli
lret
outsb
sbb
mov
cmpb
in
push
es
insl
xchg
fnsave
mov
push
fisttps
iret
or
pop
and
or
push
pop
int3
inc
jo
mov
mov
ret
ljmp
pushf
dec
mov
jle
fsubrs
pop
insl
test
aaa
sbb
xchg
in
mov
sahf
push
daa
jp
sbb
cmpl
and
or
mov
push
out
pop
inc
mov
mov
fwait
cmp
rorl
jno
aad
push
jecxz
cmp
lds
pop
clc
in
mov
add
mov
sbb
sarb
sbb
int3
loopne
dec
bound
ret
sbb
cs
xor
push
adc
scas
cld
sub
cmp
sbb
sbb
stos
sub
lahf
popa
xchg
mov
jae
dec
fdivrl
sahf
jg
adc
cmp
clc
push
cmp
out
xchg
xor
negb
xchg
jmp
in
inc
mov
mov
jle
mov
scas
xchg
cmp
dec
js
mov
adc
loope
sahf
adc
jo
std
cltd
fstpl
ret
push
dec
fidivrs
inc
adcl
inc
jmp
into
add
inc
pop
jo
mov
std
test
cmp
inc
jae
adc
pop
pop
adc
stos
dec
cmpsl
jmp
sbb
sar
sub
or
adc
mov
add
mov
pop
ficomps
ret
inc
inc
ret
push
popf
sub
shll
xor
pop
pop
cmp
ja
arpl
push
pop
hlt
dec
xor
xor
out
je
out
rolb
mov
adcl
les
lret
jmp
adc
in
das
and
xor
and
dec
xchg
xor
mov
inc
or
movsb
cmp
mov
or
fisubs
xchg
rdmsr
mov
adc
xchg
and
sub
mov
sbb
sub
pop
xor
div
stos
fstpt
sbb
mov
daa
pop
aam
in
and
push
mov
push
xor
pop
adc
aam
cmpsl
stc
ficompl
test
dec
jmp
pop
loop
or
std
xchg
out
jb
inc
sbb
icebp
sbb
adc
stos
inc
pop
add
xchg
aam
xchg
mov
ffree
or
addr16
insb
orb
xchg
cmp
or
cltd
out
pop
cld
ret
mov
or
sbb
std
and
js
adc
jbe
xchg
bound
jecxz
mov
out
ficoms
test
and
or
lock
mov
sub
sub
mov
das
cmp
mov
mov
sbb
int3
mov
mulb
lea
cld
mov
push
xchg
lods
rcrl
jbe
into
push
mov
inc
out
push
jge
ds
leave
cli
push
cmp
or
popf
jnp
jnp
mov
test
pop
shrb
imul
popa
test
cmp
jle
sbb
sub
add
xchg
mov
je
jmp
leave
xchg
aaa
lret
inc
pop
jle
jae
sub
inc
cmp
xchg
inc
scas
lahf
cmp
int3
sbb
pop
out
divl
mov
or
mov
scas
sub
jmp
adc
adc
stc
movsl
inc
stos
xchg
cmp
aaa
popf
mov
mov
scas
imul
mov
sub
outsl
adc
out
sbb
push
mov
sbb
aam
sub
out
adc
cmp
loop
sbb
movsb
sub
push
add
mov
pop
ljmp
test
imull
mov
mov
mov
cmp
decb
cmp
and
xor
dec
cmp
mov
shl
xchg
mov
mov
insl
andl
push
int3
pop
push
mov
pop
ds
out
vaddsubpd
cmc
stos
mov
mov
mov
movb
mov
fdivs
push
jbe
test
cmp
clc
in
outsl
xchg
mul
sub
mov
cs
cs
pop
cmpb
jns
insb
adc
scas
mov
xchg
inc
sahf
add
xor
stc
adcb
fcmovnu
add
pop
sub
mov
add
adc
pop
testb
lods
jne
lret
mov
push
repz
aad
jne
fidivrs
int
mov
stos
pop
sahf
repz
test
jae
sub
out
std
jbe
aam
mov
lcall
pop
inc
inc
orl
and
xchg
sti
aad
sub
jp
sbb
sbb
cs
call
fcmovb
and
pop
push
inc
or
or
loop
ja
push
inc
push
test
xchg
cld
mov
aaa
lods
jb
outsl
jns
jns
xchg
js
jle
jg
lods
pop
mov
mov
push
inc
mov
cmp
xorb
nop
leave
stos
sbb
popa
andb
test
add
xchg
aas
cmp
call
aam
jb
mov
arpl
aam
inc
out
mov
popa
daa
mov
sbbl
cmp
rcrl
fcoms
mov
aaa
lea
inc
outsb
or
int
clc
push
adc
in
mov
sbb
stos
cmp
out
push
xchg
inc
and
xchg
int
pusha
mov
lret
repz
pushf
insl
in
fildl
jecxz
push
imulb
jg
mov
out
cmp
stc
mov
xchg
arpl
addr16
lret
fcoms
push
loop
pop
loopne
cwtl
mov
add
adc
test
cmp
jl
daa
push
push
mov
fs
fs
mov
scas
mov
mov
mov
std
mov
inc
or
add
mov
add
xor
fcompl
das
mov
mov
or
stos
mov
and
icebp
clc
hlt
sbb
fwait
lahf
xlat
or
or
xor
dec
inc
cmpsb
rcrb
dec
jmp
enter
push
add
inc
and
scas
icebp
mov
jb
push
icebp
xor
or
out
xorb
in
mov
pushf
clc
xor
cmp
sub
cmpsl
dec
mov
aas
lock
jle
jl
lcall
loop
push
xchg
adc
pop
dec
adc
mov
fcmovnu
in
test
and
repnz
push
idivb
insb
sub
in
inc
jecxz
sub
movsl
mov
push
sarl
or
cs
dec
add
cmp
or
lea
shll
push
je
mov
jle
incl
test
jae
inc
dec
push
pop
jge
adc
cs
std
mov
xor
popa
xchg
xchg
xchg
sahf
mov
mov
divl
repnz
jg
sbb
scas
out
lea
jne
fcoml
out
pop
add
outsl
sbb
outsl
cmp
sub
push
mov
mov
jnp
cmp
pop
jge
sahf
fisttps
es
popa
dec
movl
jae
into
mov
jne
ja
push
int3
pop
sahf
iret
pop
aad
push
std
lock
cmp
mov
xor
lcall
or
adc
fwait
xchg
add
mov
lods
aam
lds
int3
sbb
imull
mov
xor
or
popa
pop
les
sbb
fcmovbe
lcall
sub
inc
sahf
push
lods
fstpt
pushf
push
fbld
negb
fisubrs
sbbl
xor
cmp
lret
push
inc
add
call
xchg
je
cmp
jg
gs
dec
xchg
lret
inc
adc
ret
or
pop
iret
pusha
mov
movsl
xchg
push
mov
push
faddl
cmc
fdivl
scas
std
mov
test
les
lods
pop
push
or
notl
dec
into
xor
push
and
sub
es
test
arpl
scas
xlat
cwtl
mov
inc
scas
and
fdivrl
xor
jo
fs
cli
stos
fimuls
aad
rclb
decb
test
lret
insb
test
xor
stc
mov
dec
push
jne
outsl
mov
xchg
adc
popa
daa
add
popa
fsubrs
or
pop
sub
stc
enter
xor
inc
and
sbb
lcall
fists
fnstenv
push
xchg
jge
arpl
iret
imul
ret
in
push
repz
jmp
fnstenv
jns
push
and
sub
mov
add
andb
stos
dec
lock
pop
mov
loopne
mov
rcl
add
cwtl
cmp
test
rcrl
fadds
lret
xchg
adc
push
or
fcomi
jmp
stos
adc
cltd
call
mov
aas
and
jle
mov
adc
movsl
fldenv
faddp
jg
jmp
inc
lret
out
jnp
je
loope
push
aaa
sbb
lock
xchg
sbb
sbb
mov
jmp
xchg
add
dec
lahf
sub
fcoml
enter
cmp
sub
test
lcall
or
add
or
push
movsb
adc
cmp
jnp
lret
mov
xchg
dec
test
sahf
or
into
ljmp
sub
loopne
or
dec
mov
jle
mov
or
ljmp
and
popa
lds
push
imul
mov
cmpsl
and
sub
sbb
inc
xchg
jecxz
or
adc
popa
pushf
mov
fisubl
test
mov
repz
xchg
mov
test
pusha
dec
mov
mov
cs
fdivs
cmp
pop
out
inc
fwait
pop
pop
gs
les
adc
push
or
repnz
pop
into
adc
mov
repnz
hlt
cmpsb
test
jns
movsb
mov
and
dec
lock
sbb
push
cmp
sub
push
addr16
add
pop
sarl
das
xorb
mov
sub
jge
mov
pop
cmp
lods
jbe
lods
dec
lods
pusha
mov
mov
addr16
jo
lcall
sbb
stos
leave
inc
pop
xchg
insl
lret
cmc
xor
je
mov
in
es
mov
mov
xor
pusha
mov
or
in
in
pusha
cmp
call
cmp
gs
fstpt
mov
loopne
add
mov
push
and
jmp
sub
and
sub
add
shll
loop
lea
add
insb
adc
inc
pop
jne
adc
push
xchg
enter
imul
jns
stc
ja
inc
fiadds
stos
out
lcall
daa
push
notl
mov
jae
jns
pushf
out
add
add
inc
mull
je
or
add
fwait
jp
sub
sbb
daa
mov
push
imul
sub
in
insb
xor
sbb
iret
add
xlat
lock
push
ds
inc
inc
jns
shrl
int3
repnz
lock
xchg
cwtl
cmc
mov
bound
rorb
and
cmpsb
rclb
mov
dec
xchg
jae
in
inc
or
xor
std
lret
aad
lods
idiv
mov
cld
ret
jl
mov
add
push
std
push
mov
mov
out
stos
sub
adcb
xchg
shrb
test
mov
mov
cwtl
xor
add
out
scas
or
and
test
lds
sti
scas
aaa
adc
arpl
xor
data16
or
out
in
jmp
ds
mov
loope
imul
lahf
popf
dec
movsl
and
sti
sbb
cmp
add
arpl
or
sbbl
loopne
je
cld
xchg
and
loope
mov
xor
repnz
insb
test
sbb
mov
call
insl
mov
outsl
popf
or
jb
or
std
cmp
lret
sub
fucomp
push
mov
jae
fsubs
iret
cs
inc
add
cmp
lahf
add
jne
mov
ljmp
push
ret
pop
call
sbb
dec
pop
out
jae
insl
jge
aam
lret
lock
popa
int3
and
jle
icebp
es
mov
stos
jb
scas
cmp
aaa
lds
xchg
inc
mov
int
imul
shlb
dec
mov
adc
test
adc
mov
int3
sub
cmp
sub
add
lds
outsb
arpl
arpl
mov
decw
or
cmp
sahf
inc
andb
cld
ret
dec
in
cwtl
sbb
dec
add
rcrb
cmpsb
mov
push
mov
pusha
add
jp
jno
push
call
cltd
cli
jbe
outsb
push
stos
mov
dec
fnsave
add
leave
sub
jnp
xchg
mov
pushf
jb
daa
pop
xchg
cwtl
rcrb
mov
jne
stos
into
sbb
rcrl
adc
nop
mov
lret
mov
ds
sarb
or
shll
xchg
std
dec
or
push
rclb
mov
mov
cmpsb
loop
sub
xlat
xlat
in
inc
nop
jmp
test
jmp
js
jb
test
movsb
iret
das
mov
or
push
sub
inc
out
inc
fs
into
pushf
push
push
roll
cmp
mov
testl
mov
and
pop
pop
stos
sti
insb
push
es
out
std
and
cld
mov
mov
roll
movsb
lods
xor
xchg
testb
pop
mov
scas
push
mov
mov
and
push
or
push
clc
ljmp
add
rolb
jg
pop
dec
or
xchg
outsl
dec
inc
bswap
pop
imul
jb
icebp
push
or
dec
dec
mov
mov
mov
inc
lret
das
mov
sbb
inc
div
cmp
mov
dec
mov
nop
cmpsb
out
cmp
test
inc
mov
mov
dec
roll
xor
fs
sub
arpl
jne
jecxz
lret
out
imul
adc
xor
stos
mov
sahf
cs
and
test
inc
inc
jae
dec
ret
sub
fnstcw
push
add
inc
bound
shll
ljmp
jae
in
add
out
mov
sub
aas
enter
loopne
mov
add
incb
mov
ds
mov
or
mov
pop
cltd
pop
fiadds
xchg
aam
sub
lods
pop
dec
adc
xchg
sbb
adc
sbb
stos
mov
aas
outsl
pop
push
jne
out
inc
cmc
push
pop
pop
push
xor
mov
fwait
sub
jl
jmp
jmp
xchg
push
jle
inc
lock
fs
sbb
cmp
inc
loop
jp
dec
push
push
pop
mov
or
scas
dec
dec
icebp
orb
lcall
movsb
sbb
dec
ss
sbb
ss
jnp
or
int
bextr
ja
or
lsl
and
repnz
in
cld
mov
mov
mov
jmp
mov
movsl
sbbb
push
outsl
ret
xchg
mov
adc
cmp
adc
scas
sahf
lock
pusha
jmp
and
mov
data16
in
cmp
ljmp
mov
xor
iret
lret
scas
xor
mov
or
sbb
shlb
jns
cltd
sbb
sbb
aam
pop
or
test
inc
mov
dec
sub
cmp
inc
popa
mov
dec
popf
mulb
dec
ja
jb
xor
shlb
sbb
aad
inc
hlt
pop
fs
aad
mov
sub
push
or
dec
mov
mov
jno
shll
cmp
int3
inc
pusha
subl
pop
js
loop
push
gs
add
iret
aaa
push
cmp
test
mov
shll
fmul
dec
pop
lahf
mov
out
cmp
jmp
arpl
enter
popa
adc
lahf
xlat
jne
or
mov
cmp
outsb
ficomps
xor
sbb
push
in
aas
imul
out
push
pop
rorb
std
out
pop
jb
cmp
test
cmp
out
cld
jg
cmp
jmp
fcmovbe
inc
sbb
and
and
imul
enter
sbb
push
xchg
adc
sbb
or
fincstp
add
andb
arpl
sbb
cld
into
mulb
inc
sbbl
lods
pop
inc
in
insl
mov
flds
mov
inc
scas
sbb
pushf
dec
scas
call
adc
mov
addr16
dec
or
scas
das
mov
cmc
sti
icebp
jp
ror
jle
push
inc
or
out
and
flds
push
add
xor
rolb
dec
inc
pop
push
sbb
push
aam
sub
cwtl
shrb
jl
dec
shlb
mov
fnsave
pop
and
dec
pusha
pop
insl
lahf
adc
sarl
pop
pop
mov
mov
add
inc
mov
sbb
xchg
out
stos
scas
cmp
clc
or
das
pop
nop
jg
mov
sbb
ljmp
data16
push
or
das
scas
xchg
mov
jg
add
rolb
out
movsb
jp
xchg
pop
inc
addr16
and
xor
lahf
test
pop
pop
mov
movsl
sbb
dec
es
push
mov
scas
push
cmpsb
adc
test
into
jbe
aam
nop
cmp
mov
and
in
in
pop
and
cmp
pop
pushf
das
adc
inc
adc
xor
sub
cmpsb
fs
or
mov
loopne
mov
mov
cs
ffreep
or
or
popf
lock
es
mov
dec
mov
lds
add
push
scas
in
gs
xor
shrb
and
test
pop
xlat
mov
mov
adc
rolb
adc
cwtl
mov
fisubrs
dec
or
loopne
jae
addb
xchg
stos
daa
pop
sub
pusha
inc
stos
sub
or
stos
cmp
mov
mov
pop
out
aad
add
sub
jl
rcrl
adc
cltd
xchg
xchg
rorl
pushf
cmc
pushf
fidivrs
mov
insl
fsts
xchg
dec
mov
out
xlat
sti
dec
mov
mov
insl
ret
pop
pop
out
cli
xchg
add
jl
push
call
add
and
xchg
mov
pusha
ja
inc
sbb
loopne
xchg
in
cltd
int
divl
push
add
xchg
stos
dec
inc
wrmsr
enter
pop
mov
mov
shll
cld
pop
inc
mov
je
jno
push
pop
rcrl
push
xor
ficoms
jmp
aad
dec
nop
scas
sub
ja
add
adc
sbbb
add
rcrb
cmp
inc
stc
sbb
loop
scas
mov
inc
fsubrs
add
repz
fisubrl
sub
mov
inc
push
push
cmp
push
dec
movsb
rclb
jbe
cmp
add
sbb
fsub
dec
xchg
scas
rorb
ja
push
int
mov
movsb
sub
lods
sarl
lock
mov
imul
push
jns
pushf
addr16
addl
inc
fisubl
fidivs
push
out
aad
jbe
lret
in
into
push
dec
sbb
mov
sub
jbe
sbb
push
in
dec
insb
xor
test
mov
js
push
mov
insl
jnp
pop
hlt
jg
loop
int
push
fnstenv
or
aaa
adc
sbb
adc
add
pop
das
cltd
sub
mov
into
pextrw
mov
dec
cmpl
imul
lds
out
test
adc
js
add
pop
sub
scas
push
dec
jne
cmp
and
sbb
ret
pop
jne
inc
mov
adc
sbb
xor
ja
out
or
daa
cmp
outsl
outsb
mov
lods
jge
mov
and
sub
repnz
jne
lock
arpl
je
ret
aas
dec
xchg
iret
xchg
lods
aam
push
mov
mov
pusha
fcomi
test
xor
lahf
sahf
push
scas
cmp
and
push
and
cmpb
push
mov
test
orb
jne
lcall
outsl
pop
jg
jmp
jb
lods
xchg
scas
in
mov
stos
pmulhuw
push
pusha
and
pop
lea
add
adc
mov
daa
shll
or
jne
jb
nop
scas
push
lret
add
testl
jne
in
fwait
lcall
pop
outsl
fwait
fs
into
aas
cltd
lods
mov
imul
jg
shlb
mov
push
mov
push
add
inc
out
sub
insb
icebp
cs
inc
into
test
or
and
jg
jle
cmc
inc
jl
or
insb
sbb
leave
add
adc
divl
dec
sub
int3
pop
aad
std
cmpsl
sbb
clc
lcall
cmpsb
movsl
jae
pcmpgtd
inc
fiadds
cmp
lock
add
ja
mov
add
dec
stc
lods
xchg
add
xchg
mov
mov
sub
sub
mov
mov
inc
addr16
dec
xlat
repz
jp
jo
dec
inc
lret
pop
loopne
add
push
pop
xchg
push
das
xlat
repz
pushf
incl
adc
ficompl
push
jl
popa
stos
and
pushf
cmpsl
push
jecxz
out
popf
or
jne
pop
movsl
inc
jg
or
inc
and
rcrb
in
sub
sub
int
jmp
cmpsl
das
push
jmp
lock
cmpsl
mov
mov
cmp
lds
in
inc
popf
jmp
inc
imul
sbb
sbb
ficomps
xor
jnp
rcr
rclb
mov
nop
pop
push
fisubs
cmc
shrb
cwtl
out
rcrl
pop
dec
mov
sub
fcmovu
clc
add
pusha
jns
repnz
mov
fldt
sbb
and
jecxz
into
adc
outsb
mov
int
cmpsb
or
lods
push
mov
mov
test
dec
pop
inc
je
lret
das
mov
bound
and
push
sub
loope
mov
int
xor
ljmp
out
sub
imul
pop
das
nop
jle
out
mov
into
rorb
pop
in
aas
and
jbe
int
out
shl
aaa
inc
cmpb
in
iret
out
js
sub
shlb
dec
mov
cmp
adc
sub
pop
pop
sbb
scas
jp
xor
ss
stos
jmp
add
test
add
pop
arpl
sbb
mov
inc
sub
lock
in
jp
xchg
push
sbb
pand
cmpb
incl
shll
mov
pop
ja
jb
cmp
xchg
lahf
dec
das
push
xor
sti
fcom
mov
adc
push
pop
call
outsb
repz
les
icebp
mov
mov
xor
fnsave
and
pop
xlat
inc
bound
sbb
mov
xchg
insb
scas
mov
negb
out
xor
movsb
mov
push
xor
inc
pop
bound
sti
mov
jb
inc
cmc
imul
push
cmp
xchg
cs
pushl
cmpsb
rorl
jecxz
addl
ret
lahf
aaa
lods
mov
pop
loope
repz
xorb
in
add
ljmp
sub
pop
inc
mov
hlt
aam
shlb
lcall
or
fdivl
push
xor
adc
inc
divl
popf
add
and
sbb
cs
cli
lret
popl
pop
mov
sub
subl
popf
cmp
mov
clc
jne
mov
adc
data16
aam
rolb
pop
mov
add
ja
ss
das
imul
xorb
mov
test
ficompl
jne
test
insl
sahf
pop
inc
push
out
xchg
and
test
mov
pop
int3
cs
repnz
sub
cmp
into
lods
xor
clc
push
daa
jle
or
or
jp
insb
out
inc
jnp
and
inc
mov
and
sub
xchg
test
mov
jmp
lds
into
add
aaa
add
fldl2e
cltd
jae
cmp
jg
loop
adc
je
adc
jbe
std
or
sbb
dec
jns
cltd
sbb
sti
test
push
xor
jno
inc
cltd
fwait
lret
fisubrs
push
popf
dec
xor
pop
xor
pusha
jnp
pop
jle
daa
or
fdivr
je
popa
cmp
pop
loope
push
pop
jp
and
sub
out
scas
xor
sub
adc
adc
jo
andl
dec
pusha
cmpsb
mov
xchg
ret
xchg
or
push
dec
push
mov
out
mov
fidivs
aaa
scas
stc
inc
inc
inc
pop
xchg
dec
sahf
push
test
movsb
push
sub
movsb
out
inc
mov
leave
loope
int3
cmpsl
sub
andl
push
aas
mov
xchg
fiadds
cmpsl
lcall
scas
or
out
lea
sahf
bound
sub
and
inc
in
mov
dec
icebp
fwait
and
ret
jmp
test
mov
dec
data16
loope
and
cmp
das
mov
cwtl
sub
dec
lret
sti
jl
in
add
fiaddl
es
or
call
and
mov
pop
push
pop
adc
adc
mov
iret
cwtl
icebp
cltd
inc
and
test
pop
jnp
stc
movsl
jge
xlat
repnz
lods
push
mov
mov
mov
pushf
fidivs
inc
daa
lea
sub
add
pop
rorb
ds
pop
or
xlat
xor
ret
xchg
das
sub
stc
inc
in
cmp
sub
in
sbb
mov
sbb
mov
fadds
jnp
add
cmp
scas
sbb
cmp
mov
cmp
jp
das
decl
mov
cwtl
adc
cli
shll
push
and
nop
sub
jl
pop
sub
sbb
or
mov
inc
xchg
or
aad
in
mov
xor
outsl
inc
add
mov
xchg
pop
sub
pop
pop
pop
jl
fimuls
jb
ror
lock
insb
sub
inc
sub
into
loope
sbb
mov
xchg
xchg
arpl
sbb
gs
adcl
sti
fnstsw
push
sbb
int
out
mov
notl
sbb
inc
stc
mov
xor
inc
inc
je
leave
pop
ja
in
in
je
push
shlb
adc
test
mov
cwtl
fiadds
inc
or
inc
bound
sbb
mov
dec
or
adc
rcrl
jnp
jle
mov
dec
push
inc
cmpl
out
cld
push
data16
pop
in
add
int
xchg
test
in
stos
pusha
push
pop
repnz
xor
fs
cli
cltd
xchg
cmp
or
mov
xchg
and
xor
ret
or
aaa
out
sbb
lret
xchg
mov
cmpsl
inc
movsb
sti
icebp
push
fildl
rclb
adc
jo
scas
fwait
cmp
aad
xchg
ficompl
xchg
popf
scas
ss
sbb
push
xor
sub
pop
out
aas
mov
inc
xchg
imul
ficoml
leave
push
hlt
cmp
test
sub
scas
das
fcmovnu
arpl
inc
dec
jmp
push
movsl
inc
add
ja
push
jae
into
fistps
loopne
mov
leave
jbe
adc
sbb
shl
faddl
pop
test
js
mov
repnz
jl
adc
push
out
iret
mov
outsb
mov
cmp
mov
inc
rcrl
out
pusha
mov
inc
xlat
movsl
mov
movsl
fisttps
jg
out
shll
pop
ret
pop
jge
test
into
cmpsl
mov
pop
scas
cs
loopne
in
in
adc
lret
lret
addb
adc
cmpsb
scas
mov
addr16
scas
fdivs
inc
or
outsl
or
push
lret
cmp
into
stc
xlat
ret
out
pop
in
pushw
sub
outsl
jecxz
out
pop
push
push
insb
xlat
movb
mov
stos
inc
add
cmpsb
stos
pop
push
inc
mov
sub
lods
popa
push
mov
cs
jno
adc
fisubl
fmuls
icebp
cmp
jg
cmpsb
pop
mov
xchg
and
inc
mov
shr
sub
mov
inc
or
jnp
fstps
iret
out
jne
sbb
testl
inc
or
push
jae
mov
mov
fldt
sbb
jecxz
das
lods
es
out
test
mov
lcall
jle
cmp
sub
ret
mov
xor
popf
insl
adc
or
shlb
ljmp
mov
and
in
push
sbb
aad
push
test
sbb
mov
movsl
imul
dec
push
imul
xchg
mov
jne
js
call
test
ficomps
push
sub
pop
fsubl
arpl
push
lds
addr16
sar
or
int3
mov
cmp
lahf
bound
push
add
jne
loope
mov
adc
mov
outsb
mov
xor
in
add
cmp
and
hlt
pop
push
in
arpl
and
dec
sbb
mov
outsl
cmpsl
mov
dec
dec
fisubrl
movsl
jb
xor
sub
enter
mov
shld
xor
xchg
add
pop
and
sbbl
cmp
push
pop
roll
jmp
pop
dec
sub
sub
sbb
sub
je
or
dec
loop
push
inc
pop
jb
xchg
push
push
inc
out
pop
add
iret
int3
dec
aaa
ljmp
push
bound
arpl
ds
ds
mov
js
dec
mov
mov
sti
pop
jae
rcr
inc
std
loopne
aad
cmp
test
or
push
test
cmp
xorb
cmp
add
mov
ficoml
mov
jmp
insl
xchg
repz
inc
and
ror
lret
and
and
aaa
mulb
sbb
sti
sbb
sub
ja
inc
lods
or
loop
stc
mov
fstps
mov
pop
cmpsl
sbb
jo
dec
in
aas
ss
cmpsb
cli
repz
jg
mov
sbb
or
imul
fcoml
lahf
mov
ficomps
dec
inc
mov
fisttps
mov
insb
push
addr16
lcall
leave
mov
sub
nop
in
bound
dec
loopne
adc
jp
dec
imul
xor
out
popf
dec
aas
in
jo
mov
mov
adc
out
add
cmp
loopne
push
push
lea
iret
jg
iret
into
xor
lock
inc
xor
mov
fdivs
dec
cmp
clc
push
sub
mov
push
xchg
mov
and
mov
sbb
ret
gs
push
xlat
int
xchg
pop
lods
fcompl
xchg
popa
lcall
sub
inc
add
movsl
mov
and
push
das
push
outsb
xchg
leave
data16
sbb
test
enter
je
int3
rorb
mov
mov
push
xchg
sahf
ds
mov
sbb
fstl
mov
divb
ret
jo
push
out
fisubrs
subl
iret
ljmp
aas
push
mov
xchg
andb
jne
push
and
scas
mov
or
stos
xlat
shrl
clc
mov
inc
mov
inc
loopne
add
iret
lods
adc
jb
sbb
sbb
inc
adc
cmp
out
cmp
gs
sbb
cli
idivl
mov
add
sub
jmp
cmpsb
and
clc
fs
call
mov
mov
add
fs
jnp
pop
xor
push
filds
std
add
sti
daa
pop
sub
outsb
les
insl
xchg
insl
stos
in
fcmovnbe
and
add
jmp
sti
mov
fnsave
xchg
je
cmp
ret
movsb
cmpsl
mov
dec
xchg
lcall
adc
iret
jmp
mov
inc
jno
je
xchg
jl
xchg
mov
ja
insb
inc
jle
mov
loope
les
add
add
adc
add
adc
lret
inc
imul
scas
clc
sub
pop
test
dec
out
jne
jl
movsl
inc
jae
aam
pop
pop
fcmovu
mov
loopne
cmpsb
sbb
adc
movsb
in
mov
push
notb
mov
call
mov
outsb
leave
mov
xlat
in
bsr
mov
pop
mov
cmp
rcll
lret
add
xchg
faddl
test
inc
inc
sub
ret
push
sub
cld
or
je
aad
or
sub
lret
adc
pop
xchg
std
dec
cwtl
insb
ljmp
aaa
or
lcall
sub
xchg
adc
cmp
or
cmpsl
testb
out
cmp
sub
icebp
outsl
add
xor
rcr
or
sahf
cmp
sbb
push
ffreep
gs
dec
repz
fbstp
xchg
and
push
enter
mov
mov
cmp
clc
sub
in
push
mov
fisttpll
xchg
sub
fnstsw
adc
in
cmp
jle
cmp
cld
mov
test
jnp
mov
xchg
xchg
stos
fadd
test
cld
xor
ss
xchg
xchg
into
cmc
add
int3
enter
jg
lret
ror
mov
daa
pop
jg
pop
shlb
fcom
mov
aaa
out
in
sub
sub
push
mov
leave
xor
cmp
jbe
scas
in
cmp
xchg
jge
ss
xchg
sbb
cmp
push
fs
das
dec
inc
data16
ret
mov
or
rcrl
cmp
xchg
mov
cmp
cs
add
mov
vsubss
fwait
repz
push
aas
cmp
pop
push
cmp
inc
fcmovb
mov
push
loope
or
xchg
push
sbbl
cli
dec
into
xchg
rcll
adc
int
mov
movsb
cmp
xor
jnp
clc
mov
jb
jb
dec
mov
lret
mov
xlat
mov
inc
outsl
fwait
cli
or
scas
jnp
sub
js
dec
xchg
sbb
pop
ret
lcall
or
in
lret
sti
in
pop
xchg
sub
icebp
jne
and
mov
test
xchg
and
movsl
push
mov
in
and
jb
movhps
jecxz
inc
ljmp
push
inc
scas
xor
ja
flds
mov
ja
xor
or
sbb
sar
insl
jmp
and
pop
daa
iret
sub
movsb
les
jb
xchg
cmp
mov
mov
imul
popa
cmp
out
add
xlat
push
scas
jg
and
jne
out
sub
fcmovbe
jae
es
cmp
mov
fs
xchg
aas
mov
fwait
pop
jmp
out
xchg
adc
mov
scas
addr16
or
push
inc
pop
aam
push
xor
push
and
mov
push
or
xor
ret
sar
cli
sbb
mov
mov
jbe
pop
cs
pop
mov
imul
jne
enter
sti
jnp
or
push
push
mov
and
leave
popf
xchg
iret
xchg
popa
aam
push
inc
les
pop
nop
ret
out
cmpl
ja
popl
mov
xchg
mov
dec
jne
pop
int
lahf
test
test
push
adc
lcall
mov
pop
fs
xlat
sub
scas
sbb
ret
jmp
out
push
mov
adcl
aas
outsl
mov
mov
inc
rclb
movsl
imul
jno
inc
loope
test
xor
mov
jl
in
shl
sbb
inc
push
clc
jmp
stos
xchg
xchg
aam
adc
push
sub
sbb
mov
dec
or
jbe
mov
faddp
mov
sub
pop
test
pop
mov
or
xor
cmp
mov
mov
data16
jl
dec
gs
jp
mov
je
and
mov
test
pop
out
sub
or
mov
cmc
popf
cwtl
or
jmp
ja
inc
loope
jle
mov
push
cmpsl
mov
loop
lods
adcl
negl
inc
fnstenv
adc
push
mov
adc
test
xchg
xor
lds
int3
js
daa
mov
js
popa
pop
jg
es
mov
fwait
xchg
in
mov
inc
xchg
sub
mov
and
jl
jnp
insb
outsb
sbb
pop
in
add
rcrl
fwait
mov
mov
mov
shr
xchg
mov
das
adc
pushf
scas
leave
add
ljmp
jnp
add
hlt
inc
fs
xchg
sahf
sub
pushf
jp
stc
das
je
gs
cmpsl
dec
pop
cmp
dec
lds
mov
xor
sub
dec
enter
stos
in
push
movsl
cmp
sub
in
pop
nop
sarl
sub
adc
pop
in
pop
loope
jl
sarb
xchg
pop
dec
frstor
dec
mov
mov
dec
cmp
pusha
sub
sub
jge
lock
aam
push
jns
mov
mov
jne
outsl
outsb
loope
mov
pop
xor
pop
jnp
xchg
fisubrs
icebp
push
push
daa
and
andb
xchg
jp
mov
inc
fincstp
sub
leave
dec
imul
pusha
push
fcomp
jmp
ja
or
fidivs
int3
xor
xchg
pop
and
xor
sub
xor
mov
fisubrl
add
mov
push
sbb
mov
sahf
sbbb
mov
or
repz
cmp
pusha
mov
cwtl
cmp
pop
mov
sarl
lret
sub
push
add
scas
push
jne
es
scas
xor
lea
ffreep
mov
lahf
adc
mov
or
push
push
clc
int
jae
jno
sub
adc
inc
pop
fisubs
inc
cmp
fstpl
cli
inc
or
test
add
fstp
fimull
mov
filds
pop
das
push
scas
inc
adc
fstpl
mov
fidivl
sub
push
lock
jb
out
adc
jae
xchg
and
jmp
loope
add
test
pop
pop
scas
cwtl
into
jnp
jne
arpl
lods
xrelease
shl
pusha
lock
jne
sbb
add
shlb
std
test
iret
shlb
testl
lcall
mov
ror
jbe
js
lret
jne
push
int
push
fwait
or
push
jns
jle
pop
add
sub
cmp
dec
iret
imul
jns
mov
vcvtusi2ss
jl
dec
mov
iret
fucomi
push
push
adc
movsb
jp
add
sti
out
lock
push
sub
jne
sbb
outsl
inc
xor
fistps
xorl
out
leave
rcl
std
add
mov
xchg
insl
ds
mov
outsl
arpl
cltd
and
test
shll
sub
cmpb
cmpsb
iret
in
popf
or
sar
dec
in
inc
fmul
lret
jge
sub
add
aaa
lock
adc
jbe
adc
sbb
fidivrl
in
jmp
xchg
repz
leave
aas
mov
lods
jp
mov
sbb
mov
or
lea
mov
mov
inc
cmpsl
sbb
std
jnp
mov
sahf
cmp
pop
idivl
aas
or
inc
cli
jp
leave
pop
in
stos
xchg
in
pop
movsb
cmp
loope
jnp
das
loope
sub
inc
stos
bound
jns
lods
push
test
dec
movsb
push
je
add
into
lods
scas
out
cmc
adc
mov
dec
pushf
push
js
sub
dec
fs
inc
jo
mov
int
imull
arpl
mov
cmp
mov
lds
jg
ljmp
mov
fld
sbb
sarb
jmp
in
test
stc
jp
xor
mov
into
mov
push
push
mov
inc
int
jb
sbb
pop
shrl
sti
aas
decb
sbb
pop
imulb
xchg
stc
ret
jg
push
lock
stos
lret
and
adc
mov
push
sub
mov
std
arpl
adc
or
insb
and
add
jge
inc
mov
je
in
scas
mov
jp
movsl
leave
lret
scas
in
lahf
fldcw
jmp
test
test
mov
ss
cwtl
push
int3
cmp
sbb
les
mov
sbb
push
stos
or
sub
sti
rcl
sbbb
push
xchg
das
lods
rcrl
cmp
sub
push
mov
in
addr16
ljmp
jle
inc
ljmp
push
rolb
push
repz
and
lret
in
fs
bound
xchg
and
aam
sbb
mov
adc
pop
mov
fs
xlat
xchg
jge
mov
lods
adc
inc
test
mov
out
mov
fimuls
jg
xchg
xchg
lods
and
xor
pop
xchg
call
xor
or
lcall
cmp
lea
std
adc
ja
sbb
js
mov
ficomps
rolb
xor
sub
mov
dec
rolb
mov
data16
dec
in
inc
adc
jl
pop
cmpsb
jnp
cmp
lods
xor
cld
inc
loopne
icebp
repz
out
pop
out
cs
rorl
cmpsl
add
jo
pop
add
add
inc
xor
jl
mov
dec
xchg
test
adc
loopne
and
fidivrs
mov
fiaddl
mov
and
jbe
mov
mov
xchg
cwtl
test
pop
sub
cmp
iret
and
dec
stos
popa
pop
cmc
ret
mov
nop
aaa
loopne
inc
cmpsb
loop
jmp
jns
cmp
test
dec
mov
orb
push
sub
jae
lcall
hlt
and
and
jbe
fs
and
or
or
sbb
jle
shll
cmpsl
loopne
add
jno
or
sahf
call
mov
lret
jle
and
in
cmp
add
leave
mov
add
jnp
movsl
push
daa
pop
inc
fildl
lds
int3
bound
sbb
dec
imul
add
push
or
icebp
and
fdivr
das
pop
fidivrs
cli
sub
push
in
jns
cltd
flds
sbb
lahf
mov
add
sub
mov
inc
lods
mov
push
insl
inc
clc
or
imul
pusha
cmp
insl
lods
lahf
and
loopne
inc
pop
xor
push
lcall
xor
imul
inc
out
stos
jnp
cmp
aaa
clc
adc
data16
mov
cmp
inc
sbbb
out
jno
lds
test
mov
cmpsb
jmp
and
addb
xor
xchg
mov
xchg
das
sub
fisubl
jecxz
lret
rclb
pop
sbb
hlt
fistpl
lahf
es
xchg
lret
stc
imul
cmp
mov
lahf
test
and
mov
roll
inc
insl
jnp
jge
stc
test
mov
adcl
rorl
movl
into
fwait
adc
jecxz
and
in
rolb
jle
inc
xor
int3
fdivrl
lret
lcall
shrl
xchg
xor
cmp
das
jb
cs
addl
xchg
int
sub
jo
and
jno
or
sahf
adc
cmp
inc
fldl
pop
xor
mov
mov
inc
fwait
fdivrl
adc
leave
in
pop
loopne
pop
andb
push
push
outsb
lcall
inc
mov
inc
pop
mov
in
xlat
add
jg
out
ret
nop
xor
and
sahf
sub
pop
test
je
sti
popa
dec
jmp
or
incb
push
sub
push
sbb
jae
ja
pop
std
hlt
mov
movsb
mov
loopne
das
fcoml
jge
imul
fistpll
mov
rcl
pop
ja
jge
and
cli
outsb
adc
movntps
mov
mov
pop
scas
les
sub
pop
xchg
in
sbb
ret
inc
jne
data16
call
or
test
push
mov
pop
repz
push
lods
loop
leave
cmp
mov
push
pushf
dec
test
mov
outsl
arpl
andnps
mov
sarb
fcoml
jo
inc
data16
cmc
push
push
add
mov
pop
push
jle
outsb
rcll
xor
sbb
imul
mov
sti
fcoms
icebp
clc
xor
or
fldt
pop
test
mov
inc
call
shll
test
sub
bound
enter
push
sub
cmp
leave
mov
sub
and
arpl
and
sbb
cmp
sbb
cmpsb
mov
filds
xor
das
inc
mov
pop
inc
mov
repz
popf
mov
pusha
js
push
pop
sbb
popf
xor
cmp
int
xor
mov
sahf
adc
icebp
scas
sub
decb
pushf
add
push
push
nop
into
loopne
jo
xchg
pop
or
cmp
inc
sqrtps
sub
je
lret
cmp
jle
inc
and
jg
jecxz
mov
bound
adc
ficoml
cmpsl
rcll
sbb
popf
dec
popl
xchg
sub
adc
les
popa
mov
jle
and
repnz
lds
pop
fcompl
dec
stos
sub
sahf
jbe
dec
mov
out
aas
popa
pusha
cmp
jmp
mov
pop
fidivl
leave
cmc
sahf
and
sbb
out
stc
mov
adc
sub
push
clc
xchg
mov
dec
rcr
jno
sbb
or
mov
pop
add
gs
mov
and
in
inc
jne
adc
inc
scas
orb
popa
or
scas
je
cmp
pop
and
out
inc
mov
jo
stc
mov
jl,pn
xchg
sbbb
pusha
lahf
aaa
dec
not
lret
shl
push
ss
xor
xchg
xor
lods
aaa
and
pop
cmp
dec
xchg
push
out
lea
popf
in
mov
out
test
dec
jo
dec
xchg
shl
les
mov
test
imul
push
cmpsl
sbb
and
sub
jae
mov
insl
sub
mov
sub
jbe
mov
or
mov
das
sbb
dec
sub
fbstp
mov
xchg
insl
aad
rcrb
sbb
outsb
xor
jmp
insb
cmc
cmp
push
lock
mov
push
mov
sub
out
je
call
scas
adc
iret
push
xor
adc
or
add
cmp
leave
jle
add
mov
inc
insl
into
div
imul
lea
outsb
rolb
es
enter
or
jno
jl
pop
inc
add
add
xchg
mov
btc
push
lock
or
pop
negl
fs
sahf
mull
pop
mov
cmp
sbb
insl
mov
jns
aad
push
add
out
cwtl
xor
test
por
mov
stos
fwait
ja
xchg
scas
in
mov
aad
pop
test
mov
adc
movsb
les
rorb
loop
in
add
fstpt
jo,pt
xor
dec
and
dec
sub
pop
dec
call
mov
jl
out
mov
mov
idivl
les
adc
scas
aaa
fidivl
or
stc
add
xor
mov
clc
shl
addr16
mov
sbb
out
lea
les
mov
mov
or
in
xchg
cld
lret
enter
jb
sbb
out
lock
jno
nop
adc
nop
inc
mov
ret
xchg
inc
xor
outsl
mov
cltd
sbb
mov
push
adc
or
inc
add
ja
mov
loopne
repz
sub
loop
movsl
push
jnp
mov
pop
ljmp
or
jae
xchg
sub
call
lods
xchg
test
fldenv
xchg
andl
sbb
xchg
pop
add
xchg
test
push
jns
sub
mov
js
repz
sub
push
cmc
addr16
cmp
inc
and
add
xchg
and
mov
pusha
pop
adcl
dec
sbb
adc
jmp
outsl
fiadds
adc
and
adc
aad
fldenv
sub
jbe
test
cmp
xor
adc
lock
cmp
sbb
xor
mov
sub
jecxz
out
es
push
push
adc
fstpt
sbb
jmp
sub
ljmp
movsb
sarb
std
pxor
pop
loopne
mov
outsb
add
outsb
inc
jnp
mulb
push
mov
fdivl
and
adcb
adc
mov
mov
pop
addb
pusha
jne
dec
adc
xor
mov
lahf
or
dec
push
fcomi
test
flds
inc
sbb
xchg
pop
out
sbb
gs
mov
inc
push
xchg
jg
sar
ret
pop
xchg
dec
test
mov
pop
addr16
or
loope
mov
mov
add
xchg
ret
ja
inc
scas
pop
sub
inc
push
mov
fildl
mov
cwtl
test
rorb
shll
enter
cmp
xchg
andl
mov
xor
ss
inc
inc
loop
cld
insl
aam
jg
mov
push
js
xlat
insl
ret
push
push
clc
jb
pop
lahf
jp
or
pop
iret
xchg
fidivrs
jecxz
andl
xor
or
push
jp
movsl
inc
inc
inc
mov
mov
repz
xorl
xchg
mov
lret
xchg
mov
cmp
dec
cmp
mov
icebp
fisttps
addr16
mov
cmp
jp
xchg
mov
add
mov
rcr
xor
mov
pop
movsl
mov
jae
daa
test
push
stc
fcos
push
ret
cmp
pop
cwtl
jg
xchg
mov
dec
outsl
jp
dec
add
sbb
or
add
mov
incl
xchg
mov
sub
movsl
dec
pop
adc
js
ret
mov
cmc
fs
jmp
pop
and
out
fisubrl
mov
or
mov
lods
outsl
pop
in
adc
cmp
outsl
repnz
orl
mov
push
in
inc
outsl
dec
into
rcll
jbe
jne
mov
jl
mov
mov
pop
or
push
or
test
adcb
xor
mov
mov
mov
ret
sub
inc
cltd
movl
sahf
pop
in
clc
mov
jns
pop
enter
jp
neg
mov
xchg
mov
daa
fstpt
xor
div
icebp
cmpsl
shrl
lea
push
stos
sbb
sub
mov
pop
and
push
push
adc
rolb
addr16
jb
push
mov
in
mov
mov
addr16
xchg
xchg
fsubrl
xchg
jnp
xchg
jbe
in
stc
movl
mov
mov
mov
xor
stc
push
lahf
and
pop
fwait
pop
loopne
lods
xchg
sub
rcrl
dec
mov
jmp
iret
mov
int3
fstl
out
dec
iret
jmp
enter
push
mov
mov
adc
filds
rorl
fists
mov
adc
jb
cmpsb
loope
or
mov
sbb
and
add
aas
cmp
xor
test
iret
xchg
pop
mov
xor
add
outsl
mov
xor
es
ss
mov
inc
inc
mov
arpl
scas
icebp
xlat
test
xor
sar
adc
jnp
imul
adc
dec
mov
pusha
loope
in
loop
ja
lods
fdiv
push
xchg
test
xchg
mov
dec
push
mov
scas
movsl
rorl
jl
inc
out
xor
and
js
pusha
sbb
jp
in
stos
push
sbb
xor
icebp
xchg
mov
cmp
sarl
jmp
into
cs
imul
cwtl
add
jno
adc
mov
sub
cmp
test
mov
movsb
inc
movsb
cmpsl
mov
mov
push
mov
xor
leave
repz
jne
and
push
enter
jne
movsb
imul
aas
push
mov
mov
daa
inc
scas
dec
into
sti
pusha
out
push
stos
jns
mov
je
dec
pop
test
xor
hlt
sbb
mov
cmp
int3
xchg
enter
jbe
cwtl
dec
adc
jle
stos
int3
push
rcrb
push
mov
xor
sahf
inc
lods
add
push
lock
out
mov
dec
mov
sbb
xchg
ret
push
outsb
cli
loopne
out
xor
mov
mov
pushf
ja
fisttpll
adc
cmp
das
ret
insl
addl
xor
pusha
lahf
sbb
arpl
push
push
aas
cmpsb
dec
xchg
out
rclb
aad
out
sahf
testb
mov
loopne
xor
mov
icebp
popa
adc
inc
std
mov
push
shl
mov
mov
cmc
bound
scas
call
pop
fs
mov
adc
jecxz
fsubl
outsb
mov
data16
pop
adc
in
xor
or
dec
insb
push
cltd
sub
inc
enter
mov
stos
pop
xorl
js
cmp
lahf
xor
out
cwtl
xor
inc
nop
push
push
inc
clc
jmp
stos
and
jmp
fadds
dec
push
or
mov
jns
inc
into
or
jg
cltd
jno
lret
pop
iret
sbbb
cmp
outsb
xchg
fwait
sbb
cmp
cmp
mov
cmc
xor
add
mov
adc
fnsave
adc
aas
testl
cmp
xchg
loope
test
adc
jo
mov
addr16
test
lret
dec
repnz
add
push
adc
adc
ret
stos
adc
insb
fdivrs
xchg
and
pop
adc
pop
fwait
leave
pop
jae
cltd
dec
pop
or
ficomps
push
repz
ficompl
mov
and
push
sub
push
cmp
push
cmpb
in
lods
push
jmp
or
jmp
test
mov
pop
insb
lds
fists
movsb
adc
fistpll
popa
add
enter
stos
pop
push
out
movsb
insl
imul
dec
fadds
inc
xor
movnti
jg
sub
notb
jnp
imul
bound
out
jecxz
lret
dec
es
push
test
xchg
loope
xchg
sub
cmp
cmp
pop
add
repnz
popf
inc
xchg
xor
sti
pop
sbb
ja
jne
jg
scas
xchg
mov
add
pusha
loop
bound
pop
add
std
enter
mov
daa
jb
lea
sarb
cld
in
dec
xor
xchg
sbb
js
push
jp
push
mov
rorb
xchg
sbb
in
mov
push
sbb
jns
jge
fs
fisubl
aas
outsb
dec
scas
mov
shrl
orl
mov
scas
jp
jae
addr16
mov
xor
add
in
lahf
pushf
ljmp
dec
cmp
pop
stc
and
fstps
aas
nopl
mov
push
in
ds
add
daa
jbe
add
adc
dec
pop
adc
add
push
pop
sub
popf
and
sti
pop
mov
popl
add
mov
push
or
loop
cs
and
cmpsb
aaa
mov
inc
pusha
lcall
xchg
es
in
mov
std
mov
ds
stos
xor
fs
aam
mov
cwtl
insb
je
ss
iret
or
loope
mov
fwait
dec
frstor
arpl
sbb
xchg
fstpl
imul
push
add
mov
jns
cmpsl
movsb
xor
data16
pushf
fstpt
pop
js
xor
daa
push
mov
xor
icebp
xor
out
adc
xor
pop
jle
fsts
fadds
scas
cmpsl
jge
shrd
out
repz
and
push
rcrl
mov
insb
jnp
in
add
mov
lock
or
in
push
cmpb
or
fcmovnbe
test
xor
cmp
mov
mov
mov
jo
mov
rorb
lcall
add
cmpsl
hlt
int3
scas
sbb
inc
orb
shll
cld
add
cltd
movsl
repz
cli
cltd
div
loopne
out
lcall
dec
sub
mov
xchg
clc
iret
jmp
test
dec
or
movb
outsb
mov
xchg
stos
scas
push
push
mov
xchg
cmpsb
mov
adc
and
dec
lret
test
xor
pop
clc
jb
fisttpll
fwait
ja
inc
sub
testl
jmp
xchg
outsl
test
dec
mov
fnsave
stc
and
sarb
xlat
enter
push
cli
and
imul
fprem
ja
mov
insl
aam
or
sbb
hlt
shl
dec
jnp
xor
mov
and
outsb
test
cli
sbb
aas
and
sbb
cwtl
inc
add
repz
cwtl
jg
adc
pop
add
shr
mov
fwait
pop
mov
push
call
test
iret
sbb
jbe
push
ret
push
into
sarl
mov
aad
sub
push
xor
xor
popa
ja
test
inc
adc
mov
add
mov
rsm
fcmovu
sbb
es
sub
fidivl
jp
push
icebp
test
inc
sarl
sti
mov
mov
div
adc
jmp
inc
ficoml
repnz
xor
or
enter
inc
dec
dec
mov
inc
pop
pop
imul
shrb
in
lret
jno
fstps
pop
push
add
enter
and
lahf
cltd
leave
out
scas
pop
or
popf
das
shlb
or
pop
iret
stos
data16
xchg
out
jge
mov
sub
gs
out
inc
inc
inc
adc
fildl
test
mov
arpl
enter
fisttps
scas
xchg
cmp
mov
pusha
jp
icebp
cmp
sbb
jno
and
xor
addl
sbb
jecxz
cltd
in
sub
dec
or
sub
xor
or
hlt
mov
shlb
jp
mov
testl
pop
ljmp
cmp
scas
sub
cwtl
mov
jne
daa
and
and
cs
xor
jl
rcpps
stos
popl
dec
outsl
sub
ds
sub
push
aas
out
add
stos
mov
mov
pop
mov
gs
xor
or
ret
mov
push
mov
movsl
xchg
ja
jp
push
push
add
imul
cmpsb
or
or
cmpsl
or
jmp
or
sahf
sarb
push
jge
test
out
push
jnp
arpl
inc
dec
lds
enter
insl
ret
xchg
push
iret
jne
pushf
sbbb
xlat
add
sub
mov
js
xor
xor
push
jle
push
jae
int
je
test
jno
imul
aam
dec
cmp
mov
lods
push
jl
xchg
insb
jl
adc
push
dec
test
mov
loopne
mov
add
in
scas
inc
iret
adc
xorps
xchg
stos
loope
ja
add
inc
xor
stos
jp
inc
cmpsb
xchg
div
mov
imul
inc
xor
ja
add
popa
lods
push
mov
mov
sub
xlat
adc
xchg
sbb
sub
add
dec
xor
dec
repz
ljmp
push
int
rcll
cmp
ret
and
inc
pop
jg
jbe
lcall
out
xor
gs
test
push
dec
jb
or
rep
insl
xor
pop
insl
stos
mov
iret
jp
fcomps
in
sub
mov
dec
dec
arpl
xor
test
mov
outsb
aaa
movsl
add
cmp
faddl
add
nop
mov
jae
push
ja
xchg
and
sub
xor
xor
or
xchg
loope
mov
stos
mov
push
sti
cli
sub
inc
push
sbb
lahf
push
mov
mov
sar
xlat
inc
out
dec
sbbl
lea
xchg
xchg
pop
cwtl
test
mov
add
xchg
fsts
dec
cmp
packsswb
xor
cmp
pop
inc
xchg
dec
nop
mov
add
cmp
sbb
mov
dec
push
popa
jp
scas
popf
xchg
mov
sub
sbb
cmp
rcll
inc
mov
or
leave
testb
and
repz
cmp
push
popa
gs
jne
mov
lds
lret
mov
add
cld
xchg
mov
fnsave
aad
mov
push
aam
jl
jl
inc
inc
shll
sbb
push
shrb
test
mov
loope
popf
mov
jecxz
adc
jp
stos
clc
cmp
loopne
push
ja
enter
mov
add
push
lahf
rep
adc
inc
mov
cmp
jbe
dec
sbb
iret
cmp
or
enter
or
or
dec
pop
adc
test
sbb
or
mov
int3
jne
jl
es
inc
add
rorb
int3
shlw
aas
add
scas
test
adc
lods
add
bound
and
xor
stc
pop
adc
sahf
js
adc
jge
das
dec
mov
aam
dec
pop
fdivrp
scas
imul
push
mov
mov
xchg
lds
cld
or
cmp
xchg
cmp
pop
or
rcr
inc
cmp
xor
hlt
jecxz
ljmp
and
stc
xchg
fs
shll
sub
loopne
bound
mov
or
gs
cmp
loop
mov
mov
add
aad
ljmp
fscale
add
jo
fists
cmp
mov
dec
jo
repnz
rorb
mov
popf
fbstp
into
sti
popa
xlat
mov
repz
leave
mov
cwtl
ljmp
cmc
ret
jne
inc
imull
cs
addl
lahf
mov
ss
repz
jle
and
mov
xchg
sub
jl
nop
xchg
int3
adc
leave
into
push
sub
das
adc
jbe
data16
jmp
lret
dec
inc
hlt
xor
or
in
mov
pop
xor
mov
xor
cwtl
jae
fmuls
cmpsl
mull
lahf
push
inc
inc
arpl
adc
xchg
shlb
repz
outsl
pop
bnd
pop
cmp
ljmp
jne
in
or
or
into
jecxz
adc
mov
int
mov
and
push
lahf
comiss
sbb
cli
mov
sbbb
mov
pop
mov
and
jl
mov
addb
adc
jecxz
ljmp
sub
mov
out
cmpsb
and
sbb
cmpsl
pop
jl
add
ss
ljmp
sbb
cli
in
aam
ja
bound
mov
hlt
and
cmp
dec
push
loope
mov
lock
lock
inc
sbb
lods
mov
loopne
sub
call
xchg
mov
xorl
pop
daa
push
ja
adc
dec
dec
jg
out
adc
sahf
repz
push
mov
data16
std
jg
jle
push
aad
clc
imul
idiv
repz
add
fisubs
pop
ret
xor
in
inc
sub
mov
jne
mov
popf
arpl
movsb
mov
xchg
jmp
and
pop
les
pop
lahf
push
xchg
pop
inc
ljmp
push
bound
cmp
movsb
insl
adc
or
jle
movsb
iret
sub
xchg
popf
je
mov
loop
out
mov
mov
jg
lea
lret
push
jne
mov
jbe
cmp
sub
pop
cmpsb
fwait
xlat
xchg
sbb
js
or
clc
sub
cli
mov
add
adc
mov
mov
xchg
jecxz
push
test
inc
je
out
sarl
aam
cltd
adcb
pop
scas
or
adc
adcb
gs
in
fdivrl
xchg
jo
adc
cs
mov
xor
movaps
sbb
loopne
mov
adc
mov
push
stos
jmp
lods
addr16
and
pop
adc
add
mov
aad
cwtl
ret
pop
dec
and
ljmp
inc
dec
jmp
stos
sbb
addr16
orb
add
popa
mul
fnstcw
cli
xor
sbb
iret
jl
mov
pop
dec
jg
insl
mov
inc
or
mov
ljmp
in
das
fsubp
js
divl
je
adc
push
xchg
pop
and
xchg
mov
test
in
sub
mov
mov
mov
or
mov
sub
in
adc
jge
movsl
jmp
cmpsl
dec
or
push
inc
imul
mov
push
add
hlt
lret
fistpl
mov
lret
inc
mov
lret
pushaw
enter
jns
dec
int
mov
mov
adc
nop
sbb
push
cmpsb
dec
imul
pushf
add
push
sbb
aad
fisubrl
std
loope
icebp
leave
loop
pop
sub
pop
lock
pop
adc
adc
mov
pop
adc
jecxz
scas
call
call
int
fstps
dec
or
int
dec
shrb
mov
ds
xchg
sub
icebp
push
lds
out
xchg
stos
rcrb
insl
pop
dec
int3
sub
adc
mov
sti
inc
std
adc
scas
aas
es
in
enter
sub
jb
and
inc
dec
andb
cmpl
in
imul
daa
in
mov
jmp
out
mov
or
insl
mov
push
fdivr
and
or
sub
push
or
xchg
aas
add
dec
mov
lcall
loopne
mov
jmp
sub
sub
movsb
insl
hlt
fimuls
cmp
adc
mov
xlat
sub
mov
mov
and
inc
push
sub
adc
pushf
fmuls
push
ficoml
fsubp
push
fcmovnbe
ljmp
repnz
pop
jo
inc
je
mov
shrb
adc
sub
dec
mov
or
inc
mull
daa
daa
sbb
pop
sbb
je
fiadds
adc
pop
and
push
push
or
loopne
xor
cmp
sarb
lods
je
inc
xchg
ret
adc
mov
push
ficomps
xor
mov
adc
mov
fs
lcall
or
dec
dec
std
mov
lock
jb
lods
mov
jecxz
xor
mov
mov
aaa
paddsb
mov
adcb
insl
dec
sub
cmp
and
push
sub
outsl
inc
sbb
and
mov
call
push
test
dec
adc
adc
add
sarb
lods
fimull
sub
fisubl
mov
and
in
sarl
shrb
test
push
push
arpl
mov
sub
test
mov
imul
icebp
jl
outsb
aad
divl
jb
or
enter
mov
das
out
mov
cs
clc
test
cld
pop
cmp
bswap
sti
inc
popa
sub
ss
pusha
fldl
sub
mov
cmp
in
lds
lods
fs
rcrl
pop
lock
xor
sbb
jp
dec
push
fwait
xor
xor
orl
pop
pop
push
out
xchg
out
add
dec
mov
and
outsl
clc
sub
and
lret
lods
sarl
ret
jo
hlt
std
aam
stos
int
mov
dec
das
stos
dec
icebp
aam
je
push
sbb
filds
sub
mov
dec
push
jmp
mov
push
lahf
pusha
xor
push
lock
adc
pop
adc
mov
dec
and
dec
inc
add
loopew
push
push
xor
pop
adc
pop
test
loopne
mov
push
xchg
mov
rolb
adc
mov
add
jp
incb
roll
dec
dec
sti
mov
lock
mov
cmpsl
xor
stc
out
icebp
sbb
cmpsl
into
jge
dec
cmc
call
fildl
adc
mov
addl
pushf
mov
jecxz
jno
jmp
inc
fsubrl
pop
dec
sbb
callw
push
pushf
xor
loopne
mov
pushf
mov
inc
mov
adc
sbb
inc
loop
sub
inc
sbbb
cmp
into
sub
jnp
lock
das
arpl
push
fidivs
lea
cmp
clc
push
push
rolb
sub
scas
xlat
push
outsl
jns
pop
and
and
sub
data16
xchg
inc
outsl
jecxz
inc
xlat
pop
btrl
mov
jge
loope
jnp
add
pushf
daa
xor
jl
ja
jmp
push
clc
sbb
push
or
push
imul
or
loopne
shl
sbb
cmp
aaa
loope
das
test
xchg
pop
xchg
fucomip
js
push
iret
fldenv
mov
jae
aam
orb
dec
push
insl
dec
iret
xor
cmp
cli
mov
fnstcw
cmc
jg
lret
pop
repnz
jo
add
gs
dec
ret
pop
cmp
shl
test
shlb
or
clc
sub
int
mov
leave
mov
or
add
lods
push
movsl
sbb
rcll
loope
add
pop
sbb
lcall
test
int
sub
mov
cmp
add
cmp
fstl
mov
mov
scas
mov
int
mov
sbb
das
xor
push
sub
loopne
aam
push
outsl
lea
movsb
dec
xchg
jmp
sub
xor
push
jno
adc
cmp
addl
shll
out
sub
mov
dec
int3
cmc
ja
jmp
scas
aam
inc
insl
dec
popf
aas
cmp
adc
aas
lds
pop
dec
stos
pop
int3
out
out
sbb
aaa
hlt
dec
repnz
popa
lods
fdivs
xor
sub
sub
mov
fnstenv
lret
cwtl
add
fisubs
decb
add
xchg
xchg
repz
cmp
lock
mov
rcll
test
mov
sbb
dec
dec
xlat
xor
mov
xchg
fidivrs
mov
sub
negl
jb
std
sub
stos
and
cmp
in
loop
mov
inc
adc
pushf
imul
mov
cmc
test
fwait
sub
mov
scas
inc
and
dec
inc
xor
loopne
test
pop
add
add
add
inc
jmp
mov
xchg
mov
mov
mull
dec
push
aam
or
stos
test
sbb
and
push
rcll
jg
and
jmp
ss
frstor
adc
out
cmc
jmp
bound
testl
adc
mov
fsubs
jb
subb
mov
shlb
jg
frstor
jb
data16
xchg
out
push
insb
mov
lods
mov
rorb
nop
dec
fbld
adc
push
iret
push
push
shl
enter
out
jbe
adc
stos
shll
aam
shll
ret
xchg
push
xchg
out
sub
jo
icebp
stos
ss
xchg
aam
mov
inc
xor
sub
clc
xor
arpl
cmpsb
pop
push
ret
sbb
inc
hlt
cmp
or
mov
add
clc
test
cmp
cld
inc
lcall
sub
cld
mov
repz
pop
dec
lret
mov
mov
or
and
sbb
jbe
into
jmp
mov
je
outsb
or
mov
mov
leave
mov
repz
xor
and
lock
and
pop
or
out
and
lcall
ja
xchg
dec
shrb
sbb
dec
aad
add
loopne
in
popa
push
lds
cmpsl
sbb
insb
pop
rcrl
jl
ret
sbb
cmp
stos
mov
pop
push
add
add
repz
imul
push
xchg
xchg
inc
xchg
clc
inc
push
cmc
jp
and
push
push
aam
or
mov
jg
or
movsb
vminsd
sbb
or
inc
iret
ret
add
cmp
in
jo
sbb
fs
inc
ja
add
cmp
jb
and
and
cwtl
mov
xchg
sub
cmc
mov
inc
lret
repnz
stc
dec
out
inc
mov
dec
push
mov
fld
mov
std
mov
icebp
clc
cmp
mov
jno
aam
sbb
sbb
xlat
dec
rclb
sub
pop
mov
nop
inc
fldenv
cmpsb
cmp
add
addl
or
jo
orb
addb
sarl
dec
ja
xor
pop
cli
mov
gs
add
add
fdivrs
pop
mov
or
mov
push
sti
inc
push
xor
adc
sub
pop
cmp
arpl
mov
test
jg
xchg
mov
push
pushf
unpckhps
ret
aas
inc
sub
xchg
adc
shrl
or
xchg
fsubrl
pop
pop
gs
das
hlt
and
je
pop
add
les
cmp
cmp
sub
into
adc
push
aaa
mov
lcall
push
sub
jmp
jmp
push
and
shll
pop
les
xor
dec
repz
cmp
pop
dec
xor
int3
mov
sahf
pop
pop
cwtl
iret
pushw
out
ret
push
test
or
ret
cmp
jl
cmp
xchg
jb
inc
cmpsb
xor
int3
sbb
daa
xchg
lret
lods
aam
lock
xor
fcoms
or
lea
stc
into
fmull
mov
mov
sbb
cmpsl
or
outsl
or
push
inc
lcall
fs
lods
jecxz
cltd
out
cmp
pusha
pop
in
push
adc
cmove
sub
roll
fidivrl
sub
shlb
and
imul
sbb
add
push
mov
cld
mov
flds
test
pop
sub
or
adc
loopne
or
sub
aas
lcall
push
mov
bound
push
enter
cmp
and
shl
cltd
mov
pop
jl
add
aaa
ret
dec
decl
cmp
pusha
add
fistps
scas
sbb
cltd
push
jge
inc
xchg
movsb
cmp
xor
mov
push
add
int3
sub
push
push
push
dec
mov
repz
aas
mov
hlt
test
pop
ret
or
add
jmp
and
movsl
ja
inc
lea
stos
sbb
dec
ret
xchg
sti
and
scas
adc
cmp
or
jmp
mov
repz
adc
pop
nop
add
fdivrl
and
fistpl
vpshld
and
dec
cmpsl
or
push
pop
lahf
pop
mov
sbb
push
jg
stos
ja
sbb
cld
push
cmp
dec
es
pop
outsl
aas
negb
leave
cltd
mov
mov
out
push
push
adcb
addr16
fs
xorl
mov
jecxz
movsb
mov
inc
leave
addr16
js
or
cltd
pop
divl
dec
fnstcw
scas
iret
mov
inc
push
mov
add
jae
fnstcw
jmp
lods
push
push
pop
mov
or
mov
sub
outsb
in
out
xor
adc
jle
stos
jmp
div
xlat
daa
sub
ret
mov
cmpb
mov
pop
push
das
push
fld
fs
repz
popf
jmp
les
subb
mov
sub
imul
jbe
add
dec
mov
and
and
insl
xor
pop
add
add
dec
lds
fwait
adc
sub
ja
call
outsl
int
movsl
or
xor
push
inc
pusha
push
push
or
jge
dec
call
push
jbe
orl
and
sbb
fimuls
mov
movsl
dec
push
clc
pop
mov
in
shrb
inc
mov
mov
xchg
scas
jmp
cmpb
sbb
iret
mov
popa
sub
out
loopne
xor
rorl
rcr
out
push
inc
push
xor
aam
lcall
jmp
hlt
mov
jl
jns
lahf
fwait
push
sub
jg
in
leave
jp
mov
andl
inc
enter
inc
pop
rorl
mov
testb
xchg
jno
sub
movsl
and
out
clc
jle
sub
pop
sbb
inc
repnz
outsl
and
ret
add
jp
fldenv
insb
mov
cmp
pushf
fcmovnb
and
lret
push
pop
add
xchg
inc
insb
xor
aad
pop
add
cs
jmp
cwtl
xchg
mov
jnp
and
cmpsb
push
pop
xor
xchg
lret
sub
in
jbe
dec
jmp
sub
push
add
ror
cmp
or
jmp
nop
pusha
cmp
test
fisubrs
jnp
les
and
jnp
ljmp
adc
aad
imul
std
je
sti
sahf
xchg
test
push
hlt
sbb
out
push
and
loop
stos
push
test
cmpsb
movsl
orb
in
stos
push
add
mov
push
add
push
movsl
or
and
cmp
sbbl
not
out
mov
dec
xlat
lahf
xchg
xchg
or
jb
mov
clc
outsl
aas
in
mov
sub
add
scas
dec
std
adc
movsb
insb
into
mov
lods
mov
or
and
mov
dec
lcall
push
outsb
sbb
adc
jl
test
mov
jmp
dec
pop
bound
negl
jl
popa
mov
add
pushf
dec
pop
sbb
rol
popa
add
shll
fists
mov
adc
jmp
xorb
cmc
pusha
sub
pop
mov
aam
imul
into
xchg
and
lahf
add
test
stos
imull
pop
sub
rorl
mov
call
inc
mov
divb
sahf
bound
out
jecxz
daa
mov
test
out
xchg
cmp
ficoms
out
xchg
popf
imul
addr16
or
inc
ficompl
data16
and
adc
ja
addr16
sub
lods
fisubrs
mov
cltd
mov
mov
jno
out
dec
sub
lock
xor
repz
mov
ss
push
cmp
inc
pop
adc
mov
push
xchg
push
mov
lock
mov
xor
jmp
je
jo
out
and
inc
jl
mov
lods
in
iret
cli
mov
mov
sub
adc
int3
dec
stc
outsl
lods
call
xchg
mov
mov
push
iret
js
adc
cmp
cmpsb
push
ret
enter
add
cmc
pop
psubusw
sbb
test
aam
or
adc
sub
cli
mov
stos
inc
cmp
insl
popf
cmp
xchg
decb
in
pushf
dec
jl
outsb
and
outsl
std
lahf
divb
xor
adc
inc
pop
mov
je
inc
dec
loopne
sbb
xor
mov
fcmovbe
sub
and
sub
mov
call
inc
es
out
das
addl
bswap
jge
mov
xor
cltd
sub
mov
popf
ss
mov
mov
jno
mov
and
cmp
stos
cmc
js
push
jbe
mov
test
adc
mov
aam
das
outsw
rcrl
or
or
add
sub
sub
push
daa
jge
stos
ja
mov
notl
enter
out
into
mov
and
jo
inc
int3
inc
out
xchg
jg
push
test
cmpsl
lods
mov
out
jne
mov
jb
out
out
and
and
xor
or
pop
add
cmpsb
or
shll
jg
test
pop
fmull
imul
std
aaa
adc
sub
jmp
jl
adc
sbb
xchg
sbb
cmpsl
mov
iret
push
jo
movsb
cmpsb
insb
mov
sub
adc
push
mov
stos
fwait
in
mov
adc
jnp
push
push
sub
xchg
sub
enter
cmp
jl
and
jo
cmp
xor
ret
cmpsl
je
faddl
pop
inc
hlt
int
in
idiv
cmpsb
mov
inc
dec
cmp
movsb
and
sbb
pop
in
and
mov
aaa
or
sarw
adc
xor
icebp
xor
rcll
and
and
jecxz
fistl
mov
enter
mov
loop
test
sub
clc
mov
clc
jbe
popa
add
mov
fcmovb
add
mov
add
out
rorb
cmp
mov
or
add
adc
das
stos
jo
js
mov
enter
mov
mov
and
js
mov
jae
jo
sub
mov
jecxz
pop
xor
addr16
enter
andb
jl
fs
adc
pop
xor
je
jb
cld
mov
fildl
push
pop
add
cld
xchg
shll
and
inc
xlat
test
xor
fisttpl
jecxz
and
push
cld
dec
cmpsl
pop
nop
jne
sbb
cmp
xlat
jae
std
add
sbb
outsl
in
inc
push
jmp
inc
iret
cwtl
mov
in
popf
xchg
cld
rolb
lock
inc
add
test
xchg
pop
nop
xor
pop
aam
aam
int3
outsb
lock
std
pop
mov
es
pop
roll
data16
popa
dec
sub
rcrb
mov
push
push
mov
sarl
push
mov
je
pop
sar
cmp
xor
push
push
mov
mov
inc
or
or
repnz
bound
out
sub
int3
negl
cmp
add
sbb
inc
into
inc
and
sbb
loop
fnstsw
lea
ljmp
lret
sbb
aaa
cmc
in
cmc
xchg
jnp
adc
push
sahf
mov
nop
lret
add
in
lds
push
int3
or
jp
test
mov
mov
cltd
lods
cmpl
lcall
addr16
fsubr
imulb
dec
insl
ja
lods
dec
sti
pop
mov
push
or
inc
outsl
in
adc
mov
rcrb
adc
in
push
inc
stc
lahf
imul
hlt
inc
cmp
inc
inc
std
aam
mov
xchg
and
ret
rcll
push
aam
push
cwtl
xor
in
lods
mov
sbb
and
outsl
rcrb
sar
pop
push
fisubrs
adc
adc
andb
mov
ret
aam
mov
call
mov
inc
dec
push
xchg
inc
mov
adc
mov
inc
lcall
out
cmp
popa
inc
cmp
daa
insb
fisubs
out
dec
loope
sub
dec
xchg
std
mov
icebp
repnz
pop
jmp
mov
subb
movsl
sti
arpl
insl
daa
push
jb
sub
pop
mov
mov
sub
mov
add
in
aas
jb
fdivs
or
pop
popa
imul
stos
ret
mov
shll
xchg
cs
out
jmp
out
mov
fildll
loope
dec
bound
out
ret
shrl
xor
or
ret
sti
push
xchg
cmc
cmp
cmpsl
xor
mov
js
pop
adc
mov
std
xchg
movsl
ljmp
das
or
lea
rcrb
aas
outsb
sti
mov
fwait
sub
inc
dec
adc
scas
push
and
les
cmc
lods
push
popa
scas
or
cmp
mov
mov
movsl
jge
mov
arpl
xchg
aaa
dec
repnz
dec
data16
cmp
rcl
mov
push
nop
xor
mov
sbb
cs
xor
xor
mov
jnp
nop
mov
repnz
cmp
sbb
andb
test
adc
jp
ss
inc
negb
mov
arpl
mov
aad
aaa
xchg
daa
xor
jnp
jl
xorl
enter
xchg
lret
fnsave
imul
xchg
imul
addr16
mov
mov
fnstsw
sub
mov
xlat
dec
mov
pop
es
pop
xchg
sbb
out
das
mov
xchg
scas
cltd
scas
fwait
xchg
mov
mov
ja
mov
mov
out
cmc
mov
cwtl
je
mov
leave
cmp
mov
pop
dec
xchg
sub
lcall
sub
gs
sar
scas
sub
repnz
push
inc
xchg
sbb
call
cmc
sbb
outsl
fs
or
mov
inc
dec
aas
pop
dec
jo
out
aas
ljmp
mov
je
dec
mov
lcall
dec
cmpsb
jp
cld
orb
pop
sbb
add
test
cmpsb
hlt
data16
out
mov
idivl
iret
jle
mov
sub
icebp
out
jns
pop
xchg
aam
ret
inc
leave
sbb
iret
dec
stos
test
mov
push
sub
xchg
adc
xlat
jno
mov
mov
push
mov
xor
cmpsl
or
mov
cmpsb
or
loope
leave
das
xor
cmp
mov
cmc
cmpsb
outsb
push
pushf
into
add
lahf
mov
inc
jns
push
inc
subl
add
int
icebp
or
jns
pop
adc
shrl
in
je
mov
test
inc
aam
dec
jecxz
pop
pop
mov
push
jp
fsubrs
jmp
jg
push
lahf
jl
or
lock
push
jno
pop
mov
dec
adc
adc
imul
mov
xor
pop
dec
push
mov
jge
out
sub
pop
xor
mov
popf
out
lcall
mov
andb
pushf
shl
rorb
sahf
test
and
xor
or
adc
xchg
loope
mov
nop
cmc
iret
clc
adc
aam
mov
push
pop
jge
imul
mov
mov
jge
inc
dec
fwait
or
sbb
sub
js
xchg
movsb
enter
push
fwait
stos
lock
sahf
xor
rcl
shlb
xchg
xchg
fcomi
push
lods
cltd
sub
clc
shll
sbb
das
push
cmp
ret
stos
aad
mov
push
insb
ret
stos
cs
in
xchg
cli
jmp
jle
lds
sahf
cmp
outsl
push
popa
test
jl
or
pusha
and
enter
sti
mov
stc
lea
orl
repnz
mov
xchg
xor
adc
sub
lock
popf
xchg
xlat
pop
ss
repz
rcr
and
lahf
fistl
cmp
jae
jg
stc
movsb
dec
lods
mov
xlat
or
cmp
jo
xchg
fildl
outsb
mov
mov
dec
mov
outsb
fld
adc
dec
or
scas
mov
sub
clc
push
call
mov
clc
sbb
sub
cld
loop
and
das
and
andb
dec
xchg
adcb
mov
rcrb
jl
add
mov
mov
pop
bnd
mov
out
mov
or
iret
sbb
imul
mov
cmp
test
or
cmc
inc
mov
cmp
pop
sub
and
mov
jle
cmpsl
arpl
out
addl
lret
pop
pop
sub
xchg
inc
sub
sahf
sbb
enter
ret
fnstsw
cmp
jne
out
enter
fildl
xchg
mov
stc
arpl
sub
ss
cmp
fsts
sbb
or
adcb
inc
fsubrp
stc
cmp
dec
data16
cmp
dec
xchg
mov
insb
mov
add
clc
dec
lock
xchg
pop
pop
cmovge
stos
mov
sbb
pushf
in
mov
xchg
addb
aaa
js
lahf
ret
enter
or
fists
xchg
lock
mov
dec
pusha
inc
repz
pop
cmp
jecxz
ss
xor
outsl
pop
xchg
adcl
add
or
loopne
aaa
into
mov
push
outsb
hlt
insb
call
in
mov
pop
aam
xchg
int
into
sbb
xchg
negl
int3
pop
popf
xor
mov
das
dec
push
push
in
scas
xlat
insl
add
popf
shr
push
or
cmp
stc
ret
sbb
ds
das
fisubrl
test
insb
adc
dec
sbb
push
daa
mov
lea
mov
sarb
ret
mov
data16
dec
test
cmpsl
sbb
popa
aam
inc
mov
push
xor
and
int
out
into
bts
jecxz
mov
xor
add
aam
cltd
dec
mov
sub
or
pop
mov
aas
or
and
mov
or
pop
sahf
cmp
in
aaa
pop
loop
or
ja
mov
pop
neg
ds
addr16
push
sub
cmp
outsb
jmp
int3
mov
inc
shl
sub
scas
jo
push
adc
push
aam
movsl
xchg
rorb
jns
pop
adc
les
lods
inc
cmp
ret
test
sysexit
jb
fcoml
cli
cmp
fistpll
shll
xchg
sahf
xchg
mov
nop
pushf
shll
push
mov
outsb
mov
aam
div
mov
sar
cmp
and
jg
push
es
dec
divb
les
pop
iret
mov
push
inc
jp
jmp
test
cld
mov
mov
stos
in
add
dec
adc
cmp
mov
and
cmpsb
fs
and
or
xchg
into
adc
test
xchg
in
es
mov
rcl
lret
les
cmp
in
cld
ss
push
adcl
or
pop
xchg
and
add
sub
ret
mov
imul
jge
push
movsl
nop
aas
iret
sarl
xchg
jb
pushf
std
mov
add
push
test
jb
dec
std
cmpsb
jg
mov
xchg
pop
insl
ret
stos
push
lcall
popa
repz
loopne
outsl
fisttpl
sub
pop
sti
mov
insb
cmp
mov
mov
addr16
push
rcrb
inc
sbb
enter
push
scas
pop
xor
loope
repz
or
out
in
xchg
or
dec
mov
mov
dec
xor
mov
pop
sbb
push
out
add
cmpb
inc
mov
stos
sub
mov
rcll
fs
lcall
or
dec
sub
add
mov
into
fimuls
movsb
ret
pop
push
cmpl
push
repz
and
add
repz
clc
cli
mov
addr16
das
inc
mov
cmp
cmp
adc
cmc
xlat
jae
sti
xor
call
jle
addl
push
adc
pop
sub
ja
or
movsl
and
dec
data16
mov
pop
fs
xchg
adcb
xor
mov
popf
in
cmpsb
or
xlat
push
aaa
popa
rcr
aas
and
pusha
cmp
adc
inc
ret
movups
xchg
leave
mov
idivl
ljmp
sbb
dec
dec
push
pop
mov
sub
jmp
mov
pop
dec
aaa
stos
jp
mov
loope
push
push
add
adc
repz
lahf
ret
stos
lds
fcoml
pop
test
arpl
xchg
xor
jle
add
mov
fadds
mov
pop
out
repnz
mov
sub
sbb
fs
push
lods
jo
in
out
mov
enter
xchg
xchg
fsubrs
cli
push
lods
cmp
dec
mov
or
mov
cmp
sub
iret
and
push
mov
out
sub
or
cmp
rcl
jne
xor
test
inc
je
cmp
adc
into
inc
mov
jmp
push
mov
clc
stos
fisubs
lahf
pop
jno
aas
jmp
sahf
pop
push
arpl
jae
jns
push
into
dec
mov
bsf
add
mov
call
pop
adc
repnz
mov
loope
rol
ret
and
lods
cwtd
lock
aad
cwtl
add
fadds
daa
cwtl
js
inc
and
ret
pop
push
test
pop
push
mov
lods
xchg
dec
loopne
xor
mov
lock
sbb
iret
cmpb
add
lods
outsb
out
dec
cmp
fldenv
fdivp
in
lods
cwtl
daa
push
popa
lcall
fisttpll
in
dec
push
into
iret
adc
fdivr
adc
mov
pushf
mov
sub
push
inc
mov
repnz
add
test
mov
mov
and
dec
sbb
stos
sbb
adc
dec
mov
mov
xchg
cmpsb
jb
nop
test
xlat
jecxz
mov
mov
mov
aaa
mov
mov
fcmovne
and
mov
adc
or
mov
xchg
jnp
icebp
nop
fildll
iret
js
ror
mov
in
sub
jmp
clc
cltd
mov
mov
lret
push
leave
sahf
sahf
lret
mov
loope
push
sub
mov
lds
jge
clc
lods
cltd
out
adc
pop
push
mov
sarl
inc
push
jo
inc
sbb
jecxz
dec
lret
push
adc
mov
data16
lds
mov
mov
dec
in
xor
pop
mov
inc
xlat
out
scas
gs
clc
pop
mov
cmp
pop
pop
imul
daa
push
push
pop
das
lret
ret
add
into
cmc
pop
ds
pusha
xchg
hlt
out
dec
dec
xchg
mov
idivb
scas
stos
repnz
jg
aaa
stos
and
jo
cltd
test
inc
add
pop
dec
push
pop
scas
popf
xchg
daa
fimuls
out
push
inc
jge
xor
sub
outsb
imul
cmp
decl
fidivrl
aaa
push
test
sbb
inc
and
sub
mov
push
mov
mov
js
xchg
divb
int3
imul
mov
jae
xor
gs
sub
mov
mov
das
outsb
orb
and
adc
dec
mov
push
inc
xchg
lahf
movsb
dec
sub
ds
cmpsb
mov
mov
stc
pop
xor
push
jns
rcr
sbb
in
subb
ja
js
push
mov
mov
cmpsl
pop
inc
xchg
call
xchg
data16
or
and
inc
push
sub
clc
push
or
fpatan
femms
xchg
imul
aad
rclb
sub
adc
and
cmp
out
or
imul
jo
gs
scas
outsb
cmp
cmpsl
or
mov
sub
pop
cmp
enter
loopne
sub
pop
mov
cltd
mov
add
cmp
xchg
xor
adc
or
xchg
fdivrs
xlat
scas
mov
inc
cmc
cwtl
int3
jg
and
sub
clc
push
adc
imul
sub
mov
adc
call
test
xor
sar
inc
add
and
dec
sti
add
dec
int
sub
aam
lea
pop
sub
lahf
std
cmc
pusha
out
lret
xchg
inc
shrl
xor
data16
dec
pop
cs
add
cmp
xchg
mov
cmp
pop
inc
xchg
mov
lahf
or
xchg
mov
jle
mov
out
mov
xchg
das
loopne
jo
jl
mov
mov
jecxz
outsb
jmp
or
jle
xor
jp
push
aaa
mov
dec
stos
movsl
sarb
sbb
mov
ret
jbe
adc
cmc
cmp
mov
insb
sbb
push
mov
adc
mov
and
arpl
fstps
adc
push
inc
xlat
fildl
lds
enter
mov
mov
hlt
xchg
daa
mov
jo
lahf
clc
and
mov
mov
add
dec
ds
lods
cs
inc
cltd
lcall
subb
lock
pop
jo
out
mov
sub
push
cmp
outsb
pop
mov
mov
rorl
dec
push
mov
push
cmpl
popa
loopne
les
pop
jl
loope
outsb
stc
data16
and
shlb
test
adc
fwait
adc
insb
loopne
sarl
sub
push
jge
lahf
jle
cmp
xor
or
push
push
dec
fs
jecxz
out
or
push
mov
pop
xor
out
lret
adcl
jecxz
cld
add
imull
xor
in
jecxz
jl
xlat
sub
adc
in
dec
or
std
cli
inc
mov
ret
dec
sbb
jge
sub
inc
test
sub
pop
add
inc
repz
ret
out
pop
ret
movsb
inc
mov
scas
dec
fdiv
pop
subl
push
jb
mov
add
in
es
push
sbbb
outsb
jmp
mov
jne
jle
ja
imul
js
fistpl
or
jbe
mov
stos
addr16
rolb
cmp
inc
adc
insb
inc
popf
imul
mov
cmpsb
add
adc
repz
push
cmp
mov
inc
adc
adc
or
and
subl
lock
sbb
jle
mov
xor
lods
sbb
fldcw
mov
jo
out
lods
jns
and
bound
stos
inc
fnsave
mov
out
stos
loopne
cmp
dec
cltd
inc
mov
enter
pop
sbb
cmp
cmpsl
inc
jl
mov
push
mov
push
fs
dec
jae
jg
inc
sub
pop
pop
outsb
fwait
or
jecxz
or
daa
lret
call
push
daa
push
push
lar
mov
pop
push
cmp
in
test
cltd
adcl
lahf
lock
dec
lret
push
lcall
jo
loopne
jmp
lods
mov
loopne
out
push
sub
int
icebp
dec
mov
shll
or
push
mov
cltd
push
repz
jl
ficoml
push
push
popf
dec
inc
test
push
jle
adc
scas
pushf
add
inc
xor
inc
btr
mov
push
xchg
pop
mov
sub
inc
sarb
ret
std
add
loop
pop
decb
push
mov
call
out
scas
lods
out
and
adc
sub
dec
in
js
mov
and
cmp
stc
outsb
jb
inc
or
add
js
pusha
pop
jmp
stos
xor
jecxz
adc
int3
les
outsb
dec
mov
fnsave
dec
or
inc
ficompl
mov
mov
pop
xchg
and
dec
stos
cmp
out
xchg
and
pusha
pop
pop
cli
out
imul
adc
rolb
lock
add
test
jg
jnp
fdivrs
cmp
push
mov
nop
and
add
fnstsw
pusha
push
mov
cmp
or
mov
pusha
pop
cmpsl
out
inc
iret
xchg
fstps
mov
xchg
shl
mov
mov
jmp
lods
dec
les
fistl
or
fwait
xchg
aaa
adc
or
xor
out
rorb
xor
dec
jmp
dec
scas
divb
adc
fmull
in
xor
push
repz
mov
dec
push
lahf
pop
pop
xlat
jne
jge
addb
ret
inc
cmc
xlat
shlb
push
test
imul
test
push
aad
sbb
cmp
add
jp
cmp
loopne
mov
mov
inc
xor
mov
aas
and
idivl
insl
inc
icebp
sub
cmp
inc
idivl
and
jp
popf
icebp
dec
lret
or
sbb
jbe
xchg
inc
movsb
push
pop
hlt
mov
mov
loope
dec
in
or
ds
pop
mov
xchg
lcall
xor
outsl
mov
or
xchg
ss
clc
sub
imul
and
mov
jb
ret
cmp
lea
sbb
adc
iret
adc
mov
dec
xor
bound
popf
test
shl
aas
cmc
inc
out
arpl
int3
mov
mov
jge
jl
sbb
xlat
pop
jg
pop
push
jns
in
jl
js
xchg
add
lahf
shll
aam
mov
movsb
sub
push
aas
jecxz
xchg
dec
mov
mov
adc
stos
int
test
mov
add
mov
adc
push
cmp
daa
mov
jb
divl
fwait
test
pop
in
jle
sbb
jmp
and
std
jmp
or
xchg
xor
pop
inc
jecxz
inc
xchg
sbb
jecxz
sahf
pop
cwtl
push
je
dec
jnp
sbb
aaa
add
stos
loope
test
ss
in
dec
sti
cs
pop
out
mov
push
mov
cmp
fs
sub
inc
test
add
jp
mov
loope
aam
and
fs
mov
push
sbb
fcoml
jae
int
pop
nop
aaa
stos
sarl
test
sub
push
and
mov
test
subl
xor
mov
jg
jecxz
mov
imul
loopne
scas
int3
out
lcall
push
xor
lret
dec
dec
lret
ret
jne
call
mov
cmc
ffreep
xchg
shrl
pop
inc
cmpl
sbb
fwait
sti
inc
movsb
aas
xchg
pop
insl
cmp
jle
xor
out
or
loop,pn
xor
pusha
mov
gs
pop
jo
jl
iret
dec
sbb
adc
jnp
adc
fldcw
xchg
addr16
xor
pushf
push
sbb
je
subb
arpl
and
fnstenv
loopne
insl
push
xor
subl
sbb
cmp
cmp
ficomps
mov
xchg
sbb
shrb
in
cmpsb
fisubl
ds
sub
xchg
cltd
mov
dec
pop
and
cli
fisubs
inc
aam
insb
mov
push
out
repnz
or
imul
mov
lds
js
in
xchg
add
cmp
stos
dec
aas
mov
daa
into
pop
jle
sub
jl
and
out
add
imul
inc
das
sbb
pop
inc
aaa
call
mov
cmp
cmp
test
xor
jecxz
jae
push
aas
or
jno
rclb
or
jmp
aad
push
mov
adc
xor
rcrb
add
int3
insl
pop
mov
pusha
movsl
test
test
mov
cmp
call
mov
jae
imul
sub
xchg
or
jo
dec
cli
inc
jmp
cmp
scas
imul
lcall
push
decb
lods
push
jo
and
adc
mov
xor
iret
jmp
lock
in
add
xchg
lods
mov
sbb
jns
ljmp
shrb
push
mov
mov
push
lea
fdivr
dec
push
rcrb
jnp
outsl
xor
push
add
add
or
mov
popa
push
xchg
dec
nop
fs
cmp
loope
into
fadd
movsl
fidivrl
mov
cmc
and
pop
mov
dec
mov
pop
mov
inc
mov
ljmp
push
fistpll
inc
add
movsb
into
push
aas
data16
adc
addr16
mov
pop
sub
out
shll
inc
mov
jp
push
jg
add
push
out
fisttpl
in
and
and
mov
mov
jno
stos
jb
add
lea
cmpsb
and
cmc
push
add
inc
popa
ret
xor
add
mov
es
out
jns
xchg
inc
sbb
jno
mov
imul
mov
outsl
and
cltd
mov
dec
or
mov
xchg
cmp
ds
fcomi
loop
rclb
push
jp
xor
mov
hlt
out
push
mov
mov
es
stos
lahf
jno
js
sbb
fcomps
insb
or
xor
and
sbb
aad
jecxz
xchg
dec
ficomps
movsb
mov
es
aaa
jnp
mov
das
cmp
sahf
pusha
mov
mov
loop
movsl
cld
es
test
xchg
and
clc
mulb
call
in
jnp
dec
fcomps
dec
add
cli
fstpt
sub
cmp
pop
xchg
and
test
loop
loop
xor
shr
add
ljmp
cld
dec
jb
dec
out
repz
mov
leave
stc
clc
popa
test
add
mov
ret
test
call
pop
mov
dec
repnz
in
sbb
xor
icebp
imul
mov
ret
cmpsb
cmp
mov
js
pushw
neg
and
mov
insb
sbb
mov
ljmp
push
lods
test
pusha
or
sahf
and
inc
fdivrp
rorl
insl
repnz
mov
lret
push
jle
pop
push
rorb
es
push
add
hlt
adc
add
xchg
pushf
jl
rcrl
sub
aam
mov
sub
je
lret
mov
push
or
scas
and
cld
fucomip
mov
out
test
js
bound
mov
mov
pop
call
sub
add
jnp
mov
loopne
mov
test
push
add
mov
adc
mov
fbld
pushf
adc
jecxz
push
sub
icebp
repnz
jae
lock
lret
and
xchg
sub
lods
sub
jmp
push
int
rcrl
lea
xor
aad
pusha
adc
out
cmp
ja
cmp
ret
pop
les
sbb
not
cmc
sub
or
mov
movups
jge
gs
jl
add
ljmp
inc
mov
imul
lret
adc
jo
sbb
cmp
adc
push
mov
adc
dec
inc
dec
mov
sub
cmp
xor
out
outsl
push
ds
or
jae
mov
aam
arpl
and
jle
jecxz
add
clc
sti
add
stc
call
or
inc
repz
push
xchg
mov
push
aas
fldpi
mov
out
stos
pop
loope
out
test
adc
mov
push
or
cli
orb
sbb
adc
xor
loope
add
cmpsl
cwtl
gs
xchg
ljmp
add
inc
aam
mov
ljmp
cmp
mov
and
pop
cmp
aaa
and
nop
roll
outsb
cmpsl
cmp
xor
aad
inc
lcall
jb
jne
popl
addr16
xor
pop
sbb
push
dec
mov
xorb
push
flds
adc
or
pop
addr16
jg
xor
xchg
pop
fnstcw
std
aad
lret
mov
mov
mov
add
push
xor
mov
fs
gs
adc
mov
rorl
gs
pop
or
jno
arpl
add
sbb
cmp
push
cltd
push
dec
outsb
push
cmpsl
jle
fs
popa
aas
aam
jae
or
icebp
or
jmp
push
mov
add
ljmp
mov
pop
mov
mov
mov
dec
arpl
pushf
scas
and
pop
movhps
adc
pop
in
cmp
mov
mov
add
dec
and
cmp
sub
jl
mov
push
jae
mov
fidivl
rorb
adc
and
push
jbe
in
test
loope
mov
shl
sahf
mov
cld
aaa
fcmove
mov
into
iret
es
jmp
aam
fcoml
mov
mov
add
mov
out
sti
dec
pop
popa
mov
or
loope
sbb
lahf
mov
out
sub
or
mov
adc
add
cmp
andl
inc
mov
mov
sbb
mov
iret
inc
inc
call
jo
xchg
jb
movsl
cli
sub
jmp
pusha
xor
jne
mov
mov
or
cli
mov
cmp
dec
popa
inc
adc
sub
ss
int
mov
test
jbe
lods
jle
test
shrb
mov
fldt
sahf
sahf
mov
mov
leave
or
nop
imul
sub
rclb
jo
mulb
adc
push
in
mov
popf
xchg
xor
loopne
push
add
pop
jp
or
rcr
mov
cmpsb
mov
lcall
je
dec
ret
push
out
ljmp
mov
jo
pop
jns
fstpt
aam
cltd
in
mov
sbb
push
sbb
out
pop
insl
inc
adc
test
daa
add
jg
cmp
xchg
jl
out
je
cmp
mov
bound
push
jecxz
sub
dec
dec
pop
push
dec
adc
sbb
iret
push
or
pop
sub
mov
in
inc
xor
das
mov
daa
outsb
push
roll
in
cltd
cmp
sbb
dec
sub
ja
daa
mov
pop
xchg
pop
xor
dec
shrl
push
loope
fcmovnb
mov
mov
in
test
in
in
cmp
outsl
hlt
je
dec
scas
mov
clc
roll
lahf
cmp
loope
clc
and
pop
negb
xor
stos
push
das
gs
repnz
xorl
pop
mov
lods
xorb
inc
icebp
stc
sbb
inc
test
and
or
push
sahf
adc
adc
xchg
push
sbb
movsl
pushf
pop
jl
mov
push
lods
fdivrl
clc
sbb
repnz
xchg
fcomi
xchg
mov
in
lret
xchg
imul
dec
ficoms
iret
xchg
test
pop
mov
imul
sbb
int
mov
ljmp
pop
das
inc
cmpsb
jae
jbe
ss
jp
cwtl
fsub
movsl
out
jge
pop
sbb
mull
mov
sub
mov
movsl
cmc
repz
rolb
xchg
sahf
inc
leave
in
dec
push
out
sbb
insb
repz
mov
push
or
sbb
ds
sbb
andb
call
nop
mov
add
mul
inc
jecxz
fwait
push
or
repz
fmulp
jnp
fidivrl
mov
or
fwait
out
cmpsb
les
scas
adc
cmc
dec
add
push
int3
mov
rcrb
icebp
jno
je
push
and
test
sahf
dec
sub
ret
rcrl
fstpl
and
fildll
lcall
out
repz
jmp
pusha
inc
mov
mov
into
int3
cs
in
cli
mov
popf
dec
push
xchg
mov
repnz
frstor
add
in
mov
rolb
xchg
sub
xlat
neg
push
jmp
std
inc
lea
pop
xchg
push
mov
inc
repz
jmp
inc
mov
jo
fbld
add
jns
daa
mov
int3
mov
mov
jp
dec
or
fsubrl
push
jne
sub
leave
adc
ret
mov
cltd
sub
int3
add
jp
mov
or
add
and
ljmp
stos
ds
pop
cld
adcb
push
test
or
dec
lods
arpl
iret
dec
pop
in
aam
icebp
pop
mov
fsubrs
inc
push
adc
addl
cmc
cs
jnp
mov
cmpsl
push
jecxz
idivl
jb
ljmp
mov
fsubl
gs
aam
pushf
xchg
mov
or
adcl
sub
mov
mov
sbb
cmp
mov
cld
stc
jl
clc
adc
lcall
dec
pop
add
sahf
mov
out
movsb
aad
rolb
cmp
sbb
and
mov
fucomip
insl
mov
sahf
sti
pop
cs
xchg
and
ja
push
shrl
push
hlt
jmp
sbb
idiv
test
aas
cmp
rep
orb
out
jle
loop
fcoml
lods
repnz
outsl
pcmpeqb
rcrl
loop
aam
popf
dec
arpl
ja
in
daa
sub
test
sbb
ret
adc
movsl
test
push
shr
pop
push
out
mov
mov
and
push
cmp
cmpsb
int
out
out
xchg
out
rclb
int3
les
faddp
xchg
cwtl
cli
sahf
pop
ss
adc
push
cs
out
fwait
cmc
insb
xchg
pop
insl
dec
jecxz
cwtl
xorl
js
mov
std
jge
subb
loopne
cltd
mov
test
popa
and
jge
fdivr
dec
scas
inc
les
sbb
into
inc
lret
test
mov
notl
mov
sub
push
or
sub
test
mov
insb
frstor
nop
out
cmp
xchg
push
in
fdivl
and
mov
add
jae
dec
fwait
push
jnp
jg
lods
sub
sub
in
in
xchg
pusha
inc
icebp
lods
repz
aad
call
fwait
in
fidivrs
in
imul
scas
inc
sbb
call
cmp
sti
sbb
mov
xchg
mov
cwtl
push
packsswb
mov
cld
xor
push
push
sbb
lret
and
mov
mov
pop
xchg
icebp
sahf
pop
lcall
cli
add
mov
push
std
imul
ja
jp
fisttps
gs
gs
mov
or
lret
mov
push
fucomip
leave
int
leave
cmpl
call
enter
pop
loopne
cmc
sahf
jl
mov
push
ds
int3
pop
ljmp
js
in
test
pop
rolb
xor
jmp
cmpsl
iret
pop
mov
out
xchg
mov
push
pop
lcall
outsb
dec
lods
rcr
fsubr
aaa
cld
or
sbb
jno
xor
gs
cmp
insb
mov
xor
imul
movsl
jb
iret
cwtd
sub
pushl
mov
push
mov
lock
push
pop
movsb
xor
or
lods
cmp
orl
inc
jle
cs
mull
pop
sub
inc
popf
xchg
call
or
inc
stos
in
mov
sbb
stos
mov
ret
aam
cmp
sbb
leave
dec
jns
sar
movsb
push
repz
cwtl
dec
les
mov
add
lret
andb
xchg
fnstsw
or
hlt
sbb
popf
pusha
stc
add
xor
mov
jne
push
sarb
lock
jecxz
xchg
mov
cmp
adc
addr16
sbb
sub
xchg
sti
sbb
pop
das
movsl
push
pop
and
pushf
lock
push
lods
push
mov
fimull
aas
int3
aaa
mov
pop
cmpb
pop
hlt
pop
pop
mov
jnp
mov
lret
jmp
xchg
in
pop
bound
sbb
mov
loope
loop
rcll
or
ja
mov
inc
adc
dec
push
mov
xchg
stc
scas
jo
mov
shrb
cwtl
enter
mov
mov
xchg
xorl
in
stos
ds
loopne
sbb
aad
pop
push
jbe
aaa
adc
xor
fs
or
pop
mov
mov
mov
jmp
push
imul
imul
or
dec
jle
decb
das
in
dec
sub
pop
rorl
cld
xchg
pusha
add
xchg
sbb
inc
mov
arpl
jb
jns
or
sub
pop
hlt
in
lret
jb
cmpsb
cs
xor
insb
sub
pop
mov
push
and
add
cmpsl
loope
lods
arpl
jbe
idivl
ljmp
movsb
adc
mov
cmpsl
xor
cmp
aas
inc
xchg
xor
push
jp
or
jg
test
leave
sbb
pop
pop
cmc
xor
mov
or
jne
sbb
jecxz
repz
cmp
adc
cmpsl
jg
or
clc
outsb
les
fwait
enter
ja
sub
and
outsl
xor
cmp
xchg
push
lds
in
xchg
or
xor
fistpll
das
mov
rclb
mov
popa
dec
xor
imulb
popa
mov
inc
xor
adc
sbb
imul
aas
roll
int
mov
iret
dec
pop
lods
test
nop
or
loope
fcmovnu
out
hlt
cs
xor
pop
pop
addr16
scas
inc
stos
jns
add
mov
pop
fwait
cli
imul
mov
jmp
imul
lea
jle
mov
or
mov
or
ja
movsl
inc
xchg
stc
ss
lods
les
sbb
xchg
and
scas
jge
push
mov
dec
mov
adcl
sti
outsb
xor
xor
nop
sysexit
gs
fmull
mov
mov
mov
sbb
push
movsl
repz
push
arpl
scas
incl
jle
aas
inc
insb
mov
xlat
push
mov
mov
pop
clc
jno
jno
or
call
jb
inc
mov
mov
scas
xchg
je
lds
aas
xor
xor
neg
mov
aad
cmp
add
sbb
out
sub
jmp
sub
fdivs
xor
in
sbb
sarb
ljmp
shll
arpl
fcmovnbe
repnz
movb
and
mov
sbb
cld
dec
outsb
dec
movl
add
add
enter
fwait
mov
adc
jno
sbb
fs
push
and
sbb
dec
jmp
lret
sub
cmp
fcmovne
mulb
xchg
push
fisttpl
cmpsb
sub
dec
dec
fwait
mov
inc
out
loopne
sahf
xor
pop
ret
in
out
xchg
pushf
push
lock
fildll
xchg
ds
and
fwait
lret
out
add
inc
inc
dec
fidivl
xchg
jo
pop
repnz
bound
jl
jg
idivb
jno
addr16
pop
shrl
in
mov
scas
dec
dec
test
in
fsts
dec
sub
push
xchg
xchg
out
cmpsb
ljmp
mov
outsl
mov
sbb
and
pushl
mov
mov
push
and
dec
lcall
sbb
ret
cmpsb
cmp
roll
outsb
xchg
cmpsb
loop
and
popf
adc
dec
sahf
mov
jno
jb
push
das
cmp
xchg
jecxz
xor
imul
mov
mov
xchg
sbb
sub
out
push
push
dec
imulb
test
sbbb
sbb
push
push
sbb
push
ljmp
xor
adc
aam
and
repnz
mov
cmp
sbb
in
out
pop
shlb
inc
xor
inc
xor
mov
lods
inc
jnp
jp
ss
cmp
in
rcrl
repz
pop
daa
lret
scas
jecxz
pop
pop
sub
push
into
rcll
add
cmp
mov
std
test
sbb
mov
shll
loope
and
jo
aaa
push
iret
xchg
mov
mov
fwait
pop
mov
in
mov
push
dec
or
xor
and
in
jns,pn
ljmp
pop
hlt
mov
sub
rsqrtps
arpl
daa
add
fsts
aam
push
jo
cwtl
insl
std
ja
out
in
inc
fcmovne
add
ds
addr16
lds
jg
jne
pop
or
enter
cmpsb
andb
xchg
lock
aas
xchg
push
xchg
mov
daa
vorps
addl
fdivl
ret
scas
nop
push
sahf
adc
xchg
cmc
cli
push
jmp
mov
sbb
ret
mov
or
inc
ljmp
pop
xchg
xchg
cmp
cmp
or
rcr
fwait
lret
pop
pop
ret
test
push
sbb
lret
push
scas
jp
xor
and
out
iret
mov
pop
shrl
stc
es
call
shll
nop
jno
arpl
mov
fisubs
push
lods
sub
mov
mov
les
in
loop
lods
sbb
das
testb
repz
mov
clc
mov
ss
adc
fwait
lret
ja
sbb
sub
out
mov
outsl
mov
mov
rol
leave
fistl
inc
and
adc
dec
leave
mov
sub
in
ret
xchg
iret
and
xchg
into
dec
lds
or
add
cmp
cli
lds
jns
add
pop
cmp
pop
jmp
cmp
cmpsb
mov
lret
loope
fs
in
cmp
push
jmp
xchg
loopne
push
ficoms
xchg
fisttps
jmp
aaa
add
dec
xchg
out
xchg
mov
fdivs
mov
pop
test
mov
popf
adc
movsb
mov
cmp
push
push
out
rcrb
ja
and
jns
popf
lods
jae
in
mov
cltd
ss
cmpsl
imul
out
mov
sahf
fsub
lock
shlb
rsqrtps
xchg
pop
sbb
sbb
cmp
shlb
mov
rcrl
arpl
pusha
push
xor
test
rclb
push
jno
or
mov
lcall
xchg
add
xchg
aad
ret
pop
mov
out
cmpb
cld
xor
mov
add
sti
call
xchg
cli
cmp
stos
inc
mov
popf
rcll
or
sub
pop
lock
test
inc
xor
bound
xchg
ffreep
rorb
fnstenv
inc
aas
in
repz
imul
mov
lea
pop
push
dec
inc
xchg
mov
or
dec
stc
mov
lea
cmpsb
lods
popa
sub
scas
scas
not
push
gs
adc
fcomp
mov
js
push
and
imul
mov
or
sbb
je
outsl
sbb
add
or
lahf
aam
inc
aad
adc
mov
lea
mov
and
jnp
jg
popf
mov
lahf
cld
es
daa
pop
and
sbb
jno
xor
jne
add
popa
pop
fidivrl
lds
xchg
pop
dec
ficompl
mov
jbe
mov
inc
popf
jne
test
sarb
jl
pusha
adc
push
loopne
sub
jnp
lds
xor
aaa
push
mov
call
jmp
scas
mov
push
add
mov
mov
ficompl
jecxz
insl
push
mov
cld
sub
push
int3
stos
jae
imul
sub
test
lea
leave
sbb
and
add
jbe
xchg
fildl
xchg
adc
mov
mov
inc
mov
aas
in
inc
add
cltd
inc
xor
and
rcll
fwait
daa
inc
xchg
pop
or
cld
shll
mov
insl
or
dec
xchg
aaa
ret
mov
xlat
push
inc
mov
push
xor
into
call
jns
mov
sti
mov
push
push
push
jp
adc
ss
or
xorl
xchg
mov
sub
pusha
jg
scas
xchg
lds
aam
inc
dec
xor
mov
lcall
jg
sbb
test
mov
pop
scas
xor
pop
pop
pop
pop
xorl
imul
sub
lret
add
xchg
mov
push
add
sub
mov
xlat
mov
repz
dec
repnz
fs
pusha
jne
lods
stos
cmpb
mov
inc
inc
push
mov
cmpsb
jl
mov
fidivs
xor
and
ret
jbe
add
mov
pop
lods
adc
mov
je
xchg
dec
sbb
pop
sti
sti
aas
nop
loope
rolb
in
sbb
or
cmpsb
push
out
adc
sahf
cmpsl
mov
jbe
mov
fcmovne
pop
insl
add
xor
sub
xchg
mov
fnsave
in
stc
insl
ret
mov
daa
in
clc
aaa
mov
test
pop
loopne
fistpl
out
mov
lcall
pop
clc
mov
or
dec
and
imul
divl
out
jns
inc
mov
arpl
xlat
xor
pop
out
add
ss
popa
loope
or
jne
xor
ja
ficompl
push
push
aas
fisubs
cmpsl
pop
lods
pop
xor
push
dec
movsb
pushf
mov
jecxz
xchg
dec
ret
dec
pushf
in
leave
pop
imul
rcrl
or
dec
ds
mov
or
mov
cli
rorl
dec
fimuls
in
cmpsl
int3
cli
jp
ret
sbb
mov
sub
je
and
sbb
inc
add
pushf
fucom
insl
jae
icebp
pop
fildl
xor
sub
push
sarl
jle
bound
shll
inc
jecxz
cmp
in
push
mov
mov
movsb
stc
pop
test
push
rolb
cmc
xor
js
mov
xor
mov
pop
dec
enter
clc
xor
sub
dec
jno
cld
sbb
mov
jne
rcl
pushf
daa
shll
cmp
addr16
enter
enter
mov
cld
ds
cmpsl
push
inc
pushf
mov
dec
and
leave
aam
pop
inc
jne
orb
lahf
pop
fcoml
mov
ucomiss
dec
scas
cmp
adc
or
mov
adc
add
mov
xchg
sti
sahf
inc
xchg
lea
lcall
pop
add
xor
lock
test
mov
imul
movsl
and
dec
lock
cs
fucomi
pusha
and
popa
js
je
rclb
inc
mov
maskmovq
idivl
gs
cld
test
into
out
out
cltd
sbb
js
divb
sbb
pop
movl
test
xchg
sub
pop
ja
xchg
mov
xchg
pop
shll
insb
mov
popa
in
lea
push
cmp
pop
dec
pop
push
or
test
imul
adc
pop
xchg
in
jl
aas
push
cmp
adc
int
add
add
ficomps
dec
shll
push
arpl
mov
xor
lcall
arpl
pusha
mov
jns
push
pop
push
cmp
aam
scas
popa
pop
loop
pop
xchg
cld
adc
mov
stos
xchg
mov
or
xor
inc
stos
es
adc
xchg
sbb
outsl
insb
sar
cvtps2pd
leave
xchg
jb
stc
pusha
push
daa
adc
in
xor
xchg
repnz
cwtl
push
jb
clc
int3
outsb
arpl
adc
mov
fldcw
cmp
movsb
out
dec
movsl
dec
sub
lods
lods
into
fisubrs
ljmp
push
insb
push
cmp
inc
dec
stos
sbb
adc
xor
add
mov
loope
fs
out
inc
sbb
in
aaa
aad
insb
adc
mov
into
fs
jo
fbld
loopne
repz
into
dec
jecxz
sub
out
lock
mov
sub
push
mov
repnz
mov
dec
ljmp
xchg
hlt
inc
adc
jns
inc
mov
cmpsb
clc
cmp
mov
cld
pop
ret
dec
cmp
inc
sahf
sub
mov
stc
mov
dec
adc
ds
and
mov
cmp
mov
into
fsubrs
sarb
inc
jp
adc
mov
pop
xchg
adc
sti
into
mov
cltd
push
mov
xlat
es
cvtps2pd
sbb
pop
loop
pop
inc
lods
in
loop
popf
add
push
dec
cltd
rol
je
test
sub
mov
or
push
mov
mov
int
insb
xchg
dec
lcall
stos
mov
iret
je
push
mov
pushf
std
das
and
xchg
in
cld
mov
or
fnstsw
mov
cs
rcll
psubq
adc
roll
fildl
sbb
adc
fs
cwtl
out
ljmp
ja
xchg
inc
xor
lret
lock
cli
lahf
idivl
cmp
clc
addr16
sahf
or
scas
frstor
adc
fcompl
ret
xchg
pushl
setne
in
cmp
lcall
mov
xor
cmp
jge
mov
dec
xchg
mov
roll
call
test
pushf
xchg
fwait
mov
movsb
dec
inc
xchg
outsb
test
ror
cmp
pop
xor
adc
xchg
inc
cld
add
fcompl
ror
loope
jle
test
adc
icebp
cs
push
or
mov
imul
mov
sbb
cmc
stos
fdivrp
repnz
xlat
out
lcall
xchg
iret
decl
lahf
and
sub
pushl
fisttpl
inc
mov
arpl
outsl
cmpsb
inc
mov
push
or
cli
imul
or
xchg
pop
push
ljmp
pop
adc
stc
pusha
repz
movsl
add
or
xchg
mov
shufps
or
insb
sub
mov
lea
xchg
mov
add
pop
and
and
xor
xchg
jae
cwtl
clc
mov
jno
inc
add
mov
out
fs
sbb
or
lea
leave
jecxz
pop
shl
jae
fwait
subl
addr16
loop
aad
inc
inc
sbb
shll
adc
lds
sub
into
jecxz
or
repz
outsl
pusha
inc
test
out
mov
dec
pop
push
pop
stos
mov
aad
imul
insb
fcomps
mov
mov
adc
ljmp
lds
adc
frstor
stc
jno
cltd
mov
scas
int
push
cld
fbld
jl
xchg
mulb
mov
xchg
test
mov
jp
jle
jae
sarl
jb
mov
push
push
out
inc
ret
mov
in
push
or
nop
gs
mov
jb
ds
jns
aam
out
idivl
xor
insb
shrl
jns
jle
lods
pop
sti
loop
or
rcll
ret
sbb
sub
loopne
push
lcall
incl
xchg
xor
out
insl
outsl
push
jmp
in
in
dec
add
fs
pop
scas
push
pop
in
dec
add
and
std
inc
xchg
and
insl
out
or
dec
les
xchg
hlt
and
adc
mov
push
enter
ja
in
scas
sbb
andl
sub
daa
and
insl
xchg
ss
dec
mov
stos
mov
arpl
outsl
std
out
xor
stc
int
xchg
shrl
push
sbb
xchg
jns
outsl
jp
sub
pop
ljmp
xchg
xchg
test
add
cli
xorl
enter
adc
mov
pop
jp
mov
icebp
test
stos
pushf
in
es
sub
xor
sbb
andl
ljmp
push
cmp
mov
cmpsl
cli
ljmp
call
pop
xlat
pop
cmp
inc
hlt
and
cmp
jp
sbb
stos
ljmp
je
int3
es
leave
ret
js
bsr
push
cli
test
sub
mov
push
rcr
loop
out
pop
in
ss
add
adc
mov
pop
adc
mov
pop
test
int3
gs
jl
arpl
push
and
lds
sub
jno
jnp
mov
mov
add
sbb
ja
hlt
cmp
add
fidivl
sar
mov
shrb
mov
loope
push
sbb
push
cltd
xchg
std
je
nop
or
push
imul
xor
adc
popf
mov
add
sbbb
sbb
or
dec
and
jb
or
out
xor
lea
sbb
in
dec
inc
hlt
fs
mov
push
paddsb
and
mov
out
out
repz
adc
mov
add
out
mov
jo
subb
mov
cmp
jl
push
test
addl
xor
sbb
sbb
inc
pop
ror
stos
push
cwtl
scas
nop
popf
addr16
imul
xchg
mov
ret
adc
outsb
lods
fld
pop
push
popa
outsl
and
xor
lock
inc
pop
in
mov
ss
repnz
xlat
aaa
nop
imul
mov
mov
xchg
in
sub
dec
push
movsb
sbb
mov
dec
pop
mov
fsub
movsl
lock
mov
leave
insl
arpl
lods
dec
inc
pop
and
and
outsb
xor
or
arpl
ljmp
imul
shll
imul
mov
and
mov
cmp
or
cwtl
xor
nop
fmul
sbb
jo
enter
or
cmp
lret
fisubl
ret
ss
fisttpl
xor
pop
in
push
into
sub
call
insl
sub
aas
mov
test
add
xor
push
orl
push
dec
std
dec
mov
inc
loope
cld
out
mov
mov
bound
cmp
jl
arpl
mov
mov
xchg
stc
push
mov
std
xchg
xlat
outsb
pop
xchg
lock
dec
xchg
insl
test
aam
ljmp
les
push
push
dec
inc
push
sbb
jnp
jmp
push
pop
insl
push
aas
jbe
into
loopne
rcll
icebp
adc
inc
in
hlt
fimull
dec
cmp
or
push
movsb
loope
sbb
fistpll
fs
xchg
dec
pop
jns
pushf
in
roll
or
jo
cmp
inc
mov
cwtl
fmuls
addr16
mov
in
jp
mov
testb
xchg
and
sub
cmp
popf
movsl
dec
sbb
dec
push
add
stos
testb
js
mov
add
jg
ss
mov
sub
out
mov
loope
and
add
fists
fwait
dec
push
cmpsl
cld
cmp
pop
push
popf
int
fmuls
add
xchg
inc
shrb
std
dec
pop
inc
mov
pop
insb
xor
out
lods
and
iret
add
adc
and
push
je
or
stc
xor
sub
xchg
sarl
sub
in
lock
popa
mov
fnstenv
jl
scas
push
cld
gs
jae
sahf
test
sub
inc
mov
xchg
shl
into
jle
mov
lret
pusha
xor
cld
xchg
pop
and
loopne
out
fnstcw
add
ljmp
xchg
push
notl
imul
mov
sarl
xor
enter
jo
iret
outsb
neg
out
pusha
jecxz
cmpsl
arpl
jmp
pop
add
pop
stos
fcomps
cld
out
in
or
push
std
pop
xor
and
fadds
and
int
ss
push
ss
jb
mov
ja
int3
mov
icebp
xlat
push
inc
into
lods
mov
loop
cwtl
cmc
mov
jge
mov
out
int3
mov
cmp
mov
dec
xchg
add
mov
pushf
add
push
sbb
ss
out
shll
popa
xchg
loop
ret
and
roll
outsb
dec
fsubrp
arpl
or
into
out
pushf
inc
add
mov
jl
imul
pop
ret
out
add
cmpsl
adc
pop
sub
or
out
aad
js
mov
cld
lea
dec
xor
int
cmc
out
jl
or
push
es
lret
pop
jns
stos
int
pop
rorb
cmpsb
clc
lock
jg
dec
mov
inc
faddp
xlat
mov
aas
sub
adc
mov
xor
in
fistpl
inc
mov
lea
mov
aam
inc
mov
scas
sub
test
mov
cld
daa
movsl
call
and
fstl
divb
and
fdivrl
adc
movsl
insb
xchg
lea
pop
adc
fimull
sub
xchg
inc
jno
loopnew
mov
adc
cmp
pop
and
scas
aam
adc
jno
movsb
imul
aam
ds
sti
incl
adc
add
xor
aam
sti
rol
or
sahf
push
jnp
push
sbb
nop
inc
sbb
push
fisubrl
xchg
and
add
sbbb
outsl
out
pop
add
jb
insl
adc
jge
sahf
xchg
inc
test
inc
bound
psubd
jb
pop
in
xlat
sti
repz
jg
loopne
sbb
push
mov
push
nop
mov
fwait
pop
arpl
jo
add
sub
sub
dec
leave
stc
and
jmp
sbb
and
mov
pusha
mov
aas
mov
mov
adc
cmp
daa
push
cmpb
inc
outsb
sub
xchg
cs
out
adc
addr16
mov
cmp
flds
insl
lret
cwtl
movsl
xchg
cmp
dec
pop
test
mov
mov
dec
sbb
test
ja
and
popa
pop
js
xchg
cltd
dec
es
sarl
xchg
mov
fildll
int
rolb
xchg
cwtl
imul
sbb
fprem1
cli
mov
jbe
adc
nopw
in
inc
fmull
repz
in
aas
test
xchg
jp
cld
jge
mov
pop
pop
test
xor
push
mov
inc
push
test
sbb
fadd
loopne
lods
mov
repnz
inc
mull
mov
in
sbbl
cmpsl
and
cmpsl
mov
sarl
hlt
stc
cld
inc
inc
gs
stc
sub
cmp
filds
fdivs
out
iret
sbb
in
push
sub
cli
xor
and
rorl
shl
addb
loop
cmp
fsubr
xchg
inc
addb
outsb
and
or
rclb
insb
pop
cs
icebp
pop
jle
ljmp
cmpsl
and
jo
popa
pop
push
xor
icebp
frstor
mov
pop
sub
mov
and
inc
xor
inc
cmp
stos
shrl
test
inc
pop
mov
inc
fucomi
jmp
mov
out
movsl
jp
stos
xor
xor
sub
dec
sub
aas
push
pop
fcmovne
pop
ljmp
mov
out
jecxz
data16
mov
fbstp
cmp
pop
ja
lods
ret
sbb
xchg
adc
adc
jmp
cmp
sub
inc
add
mov
clc
add
insl
inc
and
fildll
pop
imul
inc
notb
cmp
insl
ss
movsl
lea
shlb
int3
push
js
cmp
call
sbb
inc
mov
rorb
decb
int
xor
fs
out
push
stc
adc
inc
inc
cmp
pop
mov
push
mov
sub
adc
pop
cmc
cltd
push
in
call
push
jb
mov
insb
mov
adc
xor
gs
out
push
cmpsl
or
nop
in
fdivrl
mov
mov
jl
mov
into
mov
mov
mov
cwtl
xor
in
xchg
shll
lods
dec
scas
adc
fiaddl
jns
mov
sub
add
fwait
pushf
loopne
mov
decl
cltd
arpl
shrl
xchg
movsb
sub
hlt
or
xchg
inc
test
mov
add
push
pop
js
loop
daa
faddl
movsb
mov
xchg
scas
push
push
push
cmp
test
add
lea
inc
pop
xchg
cmpsb
inc
stos
scas
fdivl
popf
lds
in
or
and
xchg
mov
push
enter
mov
imul
test
mov
test
pop
sub
xchg
dec
mov
sbb
in
mov
roll
pop
or
dec
fwait
je
cmpsb
movsl
aam
mov
xlat
jbe
adc
fstl
cs
inc
mov
mov
and
int
dec
dec
cmp
rcrb
push
fs
xchg
dec
cmpl
mov
sbb
out
mov
jl
popa
push
mov
scas
jge
fmull
cmp
push
fstl
mov
dec
mov
cmp
sbb
outsb
sbb
pop
push
push
lahf
fs
xchg
and
in
mov
insl
sub
loopne
mov
mov
xchg
jge
pop
jnp
mov
xor
fidivrl
movl
or
aaa
adc
fists
push
shll
inc
stos
mov
in
or
mov
fdivl
jb
push
shrl
push
pop
mov
pop
push
popf
mov
nop
sbb
aad
pusha
hlt
inc
or
sub
jno
sbb
mov
test
fwait
out
jp
fnstsw
mov
xchg
xor
pop
dec
or
int3
data16
xlat
lods
sub
std
mov
inc
dec
fstps
cmp
sub
into
dec
push
dec
cmp
mov
fisubs
cmc
sub
lods
or
in
inc
insb
cmp
insb
arpl
inc
inc
inc
in
mov
sub
jne
icebp
push
jno
dec
out
add
enter
adc
adc
adc
fldt
xor
les
push
loop
sbb
sub
or
enter
mov
dec
inc
lds
imull
negl
movsb
mov
jnp
xor
cwtl
das
mov
sbb
andl
fcoms
insb
iret
pop
and
cld
addr16
add
js
orl
lods
xchg
int
aaa
xchg
inc
xchg
push
sahf
orb
je
icebp
pop
jns
xchg
push
cmp
movsb
outsb
lret
push
imulb
cmp
enter
mov
int3
mov
shrb
cwtl
loope
les
sub
out
cmpsl
imulb
jecxz
pop
std
xchg
inc
push
pushf
or
pop
pop
or
dec
or
inc
loop
adc
sub
xor
out
add
and
xor
or
mov
movsl
xchg
cld
xchg
dec
xor
icebp
dec
add
fnsave
sti
clc
cmp
cmp
dec
jbe
into
pop
aad
add
jmp
xor
xor
inc
rclb
jle
dec
das
in
xor
sub
xchg
mov
test
xlat
inc
movsb
add
push
xor
repz
in
scas
hlt
pop
mov
xor
pop
xchg
js
cmpsb
lahf
fs
push
call
xor
ljmp
das
nop
mov
mov
dec
and
movl
xchg
push
jmp
int3
popf
jnp
push
sub
les
mov
xchg
adc
scas
fwait
icebp
pop
dec
adc
in
decb
addl
les
pop
sbb
sbb
mov
loop
test
mov
xor
inc
movsw
xchg
ja
inc
push
cltd
cmc
dec
jns
call
test
sub
fcoms
jecxz
arpl
leave
push
das
push
movsb
pop
pop
adc
ss
into
dec
mov
sub
xor
mov
add
adc
hlt
mov
pushf
loopne
adc
pop
decl
adc
push
sub
cmp
dec
mov
jne
lea
movsl
jnp
mov
mov
cmp
and
sti
xchg
enter
xchg
sahf
inc
pop
pop
idivb
inc
sbb
js
pop
jo
outsb
dec
ret
sub
and
gs
sub
movsl
aaa
add
je
jmp
adc
push
mov
xchg
sub
repnz
stc
xor
cmp
adc
es
xor
dec
ds
mov
push
jns
or
out
add
outsl
mov
ficomps
ss
jbe
mov
mov
divl
sarl
fistps
loop
mov
cli
cmpsl
movsb
andl
mov
inc
jno
adc
jge
pop
negl
xchg
sub
fcoml
sti
test
sbb
ja
sti
in
mov
add
and
shll
and
jp
mov
insl
jnp
sub
mov
xchg
mov
ljmp
jle
mov
lds
insb
fsubrs
addr16
in
mov
lds
arpl
fs
inc
test
dec
bound
push
and
jg
lds
rcrl
outsb
push
xchg
and
and
adc
pop
mov
mov
xchg
fs
pop
xor
imul
ffreep
inc
clc
lcall
test
iret
mov
shl
push
mov
hlt
and
jg
addl
mov
ja
test
lds
inc
xchg
pop
and
dec
mov
pop
imul
clc
xor
xor
mov
push
or
shlb
sub
push
std
out
mov
adc
xchg
cmp
cli
daa
flds
fsubp
or
and
hlt
xchg
dec
scas
xlat
ret
out
fdiv
push
pop
cmpsb
aad
push
in
sbb
dec
fadds
daa
and
adc
jb
adc
jl
mov
xchg
add
insb
sbb
mov
gs
push
loop
pop
sbb
clc
movsb
mov
lea
sbb
loop
inc
es
repz
pop
add
repnz
mov
repnz
xchg
xchg
sahf
gs
outsl
xchg
cmc
int
jge
ret
loop
push
stos
jo
mov
scas
lahf
sub
arpl
popa
rcr
xchg
cmpsb
pop
fnsave
push
lods
mov
xor
mov
sub
xchg
mov
push
adc
iret
outsb
jmp
in
movsl
testb
dec
mov
lods
inc
jmp
dec
insb
inc
out
dec
dec
stc
std
jo
cmpsl
add
in
push
shr
cmp
pusha
movsb
adc
cltd
cwtl
pop
jb
cmp
outsb
mov
shrb
mov
out
jp
mov
in
adc
stos
adc
push
movsb
mov
cmp
xchg
xor
dec
mov
mov
std
mov
jle
test
test
cmpb
pop
test
aas
in
add
dec
mov
nop
jnp
cmpsb
fldenv
sbb
or
xor
nop
lock
jp
xor
out
mov
aas
int
hlt
aas
cmc
repz
xor
ds
pop
mov
repz
scas
xchg
and
jne
mov
mov
lds
test
cmp
divb
icebp
pushf
push
xchg
mov
xlat
in
scas
jl
leave
pop
call
pop
push
in
or
ja
sub
xchg
and
je
rcll
pop
mov
aad
bound
xchg
stos
add
push
out
fcmovnbe
stos
outsb
enter
xchg
std
ja
mov
pop
ljmp
or
outsb
dec
movsl
jle
bound
in
fisttpll
and
dec
xor
mov
mov
cwtl
cmp
jmp
push
sub
imul
insb
sub
pop
xchg
adc
xlat
icebp
inc
test
push
lret
pusha
mov
xor
stos
inc
cmp
pop
ja
add
mov
sahf
mov
mov
stos
mov
notb
scas
mov
push
sbb
mov
mov
lcall
push
mov
stc
pop
cmp
sub
xor
mov
lods
or
int
repz
ja
test
mov
gs
sub
insb
bound
into
aas
xchg
xchg
or
pop
jle
push
fwait
cmpsl
adc
jecxz
aad
push
cmpb
jecxz
jns
lret
subl
leave
pop
xchg
inc
jo
and
mov
pop
sbb
loop
scas
ss
adc
fisubrs
pusha
in
cs
xor
das
add
add
out
pop
pop
in
cwtl
and
clc
sbb
repnz
lret
xor
out
lea
inc
cs
push
or
testb
inc
nop
push
xchg
mov
sarl
jge
movsl
int
inc
lcall
push
test
fwait
leave
adc
outsb
add
std
sbb
dec
dec
jg
xchg
lcall
xchg
xchg
in
loop
inc
xchg
into
cmp
ds
and
cmpsl
lods
push
pop
dec
aaa
dec
ret
mov
jo
test
push
add
in
rcll
mov
icebp
and
dec
hlt
leave
jae
inc
repz
arpl
pop
in
movsb
jl
xor
notl
adc
stos
cmp
ret
xchg
mov
jo
jge
xchg
insb
clc
sub
and
mov
int
into
filds
xchg
xlat
cmpsb
divb
test
fsubl
ret
int3
cmp
xchg
movsl
cmp
cmc
loopne
into
sub
es
xchg
into
jae
xchg
or
xor
outsb
jns
xchg
xchg
ret
mov
cmp
hlt
out
xchg
jmp
cmp
mov
loope
inc
rolb
sbb
mov
or
mov
mov
outsl
or
pop
rolb
dec
xchg
jg
xchg
add
icebp
and
add
cmp
mov
xchg
cs
push
cmp
ret
jp
jns
insb
sahf
mov
mov
mov
pusha
mov
dec
je
push
repnz
test
inc
movsb
data16
popf
cmpl
pop
cmp
add
jmp
adc
clc
adc
dec
cmc
lret
aaa
pop
repz
int3
mov
sub
or
sysenter
xor
jp
cltd
lahf
in
push
inc
loop
or
adc
pop
sbb
outsl
push
hlt
mov
pop
cmp
fldcw
push
push
stc
sub
fsubrs
repnz
outsl
addr16
jmp
jno
pop
pop
mov
into
mov
inc
mov
adc
outsb
mov
xor
shlb
fisubrl
sbb
ds
int
test
pop
dec
outsb
dec
int
and
int
jmp
mov
shl
sub
test
inc
out
lcall
ja
pop
adc
movl
stos
fwait
or
push
mov
mov
pop
cli
push
aad
pop
jo
enterw
cmp
sub
xchg
mov
out
add
adc
pop
hlt
xchg
cli
push
daa
xor
jne
cmp
mov
les
out
insb
ffreep
mov
ja
testl
add
sub
mov
sbb
push
dec
or
inc
lds
rclb
xor
pusha
into
icebp
adc
adc
add
xlat
xor
mov
add
icebp
lcall
hlt
xor
cmp
mov
sbb
and
push
mov
insb
mov
pop
gs
call
adc
push
icebp
shll
pop
adc
lret
ja
xchg
cmpl
stc
int
inc
cs
pop
xchg
shll
movsl
xchg
shl
lret
jge
push
inc
stc
mov
fucom
shll
outsl
mov
jmp
fiaddl
insl
mov
or
pop
xchg
subb
stos
fadd
xchg
mov
xchg
pop
push
push
xchg
jbe,pn
dec
pop
sub
inc
inc
cmpsl
stos
add
in
cmp
add
clc
lea
xchg
clc
shlb
int
jp
mov
mov
inc
fnsave
xlat
xchg
xor
jne
cwtl
push
add
dec
lret
jg
or
cmc
lret
mull
adc
sub
sub
xchg
je
stc
les
call
cmc
fisubrs
push
pop
xchg
imul
pop
pop
gs
mov
or
movsb
mov
sbb
sub
aaa
popf
popf
xchg
in
xor
sub
sub
ret
push
pop
ljmp
jecxz
cmp
adc
inc
outsb
sub
test
insb
mov
add
pop
mov
out
xchg
inc
lea
leave
inc
adc
popa
inc
pop
lret
jle
mov
xchg
push
cmp
xchg
cld
mov
jb
imul
and
jno
inc
push
mov
pop
xchg
push
push
in
jge
lcall
pop
add
pusha
push
lcall
sbb
mov
mov
adc
enter
xor
jbe
adc
stos
pop
pusha
cmc
and
cmp
xchg
stc
loopne
mov
lds
inc
call
shlb
jb
xchg
inc
xor
ret
or
xlat
adcb
clc
sbb
cld
scas
fisubl
xchg
mov
sub
dec
add
mov
clc
ret
stc
jb
sub
fstpt
stos
sub
and
rclb
add
dec
lcall
test
dec
inc
inc
imul
lcall
cmp
mov
aad
in
push
aad
iret
fwait
xchg
mov
xchg
or
cmp
pop
loopne
sub
or
mov
int3
arpl
sbb
xor
div
push
dec
out
xchg
push
mov
pop
push
dec
sarl
mov
imul
std
add
out
sub
inc
add
lcall
mov
sarl
cmp
mov
mov
cmpsl
inc
and
push
pop
jbe
dec
pop
or
jp
inc
jns
dec
call
xchg
push
jae
addr16
mov
test
sbb
movsb
push
inc
jb
adc
rorl
dec
andb
stos
cltd
movsb
push
fwait
sub
pop
das
addr16
cmp
cmp
movsl
popa
aam
mov
int3
int3
pop
pop
clc
push
mov
es
jp
notl
mov
stos
jg
test
jo
popf
cld
ds
sub
or
in
ja
lret
daa
sub
sub
icebp
mov
mov
mov
bound
adc
stc
jp
jae
jmp
mov
repz
mov
fsubs
lret
stc
lds
add
push
xor
lcall
xor
jbe
out
add
shl
ret
jo
push
test
cmp
push
cs
out
or
adc
fsubs
mov
insb
jl
cltd
rorl
pop
inc
imull
push
sti
mov
lret
cmpb
mov
or
shr
mov
inc
stos
nop
sub
add
sbb
sbb
xor
shlb
cmp
aam
jo
fbld
lcall
jecxz
out
imul
xor
insb
add
jns
das
outsb
sub
sbb
ljmp
jo
and
mov
or
roll
pop
int
frstor
dec
xchg
mov
cld
test
mov
mov
hlt
mov
cwtl
mov
mov
mov
pusha
adc
pop
mov
movsb
mov
push
mov
outsb
push
call
xor
daa
insl
popa
out
jmp
das
ss
nop
mov
out
jg
push
loop
mov
out
inc
js
sub
cli
dec
jg
cwtl
dec
fucomp
mov
add
loope
ljmp
sahf
xchg
sarb
gs
and
or
and
ljmp
jns
lret
pop
xchg
ss
xchg
adc
xor
jns
jmp
pop
xchg
dec
push
int
loop
add
popa
cltd
xlat
mov
xchg
pop
sub
mov
bound
inc
mov
pop
mov
xor
dec
popa
pop
xor
lods
jns
insl
push
imul
and
iret
clc
adc
sub
ss
fildl
xor
mov
out
push
jp
in
out
test
stc
test
sbb
lds
mov
mov
add
fisubrs
movsl
test
inc
lea
dec
repz
xor
outsl
sbb
push
xor
adc
cld
add
push
mov
imul
lods
in
lcall
test
mov
sbb
jne
push
clc
adc
int
xchg
das
movsb
arpl
fnstsw
ljmp
or
loop
sub
push
les
add
inc
bound
fwait
push
xchg
addb
pop
mov
stc
lret
faddl
inc
sub
inc
movsb
fsubs
push
fidivs
sbb
mov
cmp
pop
add
pop
mov
pop
lods
daa
fucompp
test
jmp
std
xchg
jnp
cmc
out
push
loope
into
fsubrs
jno
int3
mov
loope
pop
jl
xor
xor
es
sti
xchg
cmp
les
sti
test
xchg
ds
add
js
pop
cmp
push
loop
cltd
xchg
inc
cmp
pop
lahf
sbb
das
fs
les
frstor
mov
or
dec
mov
sahf
jge
pop
cmp
sbb
mov
out
je
cmpsb
xchg
push
mov
stos
lea
xor
sbb
hlt
add
test
fstl
mov
push
loope
pop
cmp
or
jo
in
idivb
testl
mov
mov
mov
in
xchg
fwait
test
sbb
sbb
inc
dec
pushf
das
roll
push
cmpb
mov
jno
push
or
call
mov
lods
jns
mov
sahf
lods
add
insb
fistl
mov
cltd
xchg
pushf
add
sbbb
cmp
fdivrs
cmpsl
mov
lret
daa
shlb
ret
mov
mov
addr16
mov
xchg
test
jmp
xchg
add
add
cmp
xorl
outsb
mov
mov
pop
xchg
mov
movb
inc
psadbw
test
and
fmuls
dec
gs
jbe
loopne
inc
mov
sti
xchg
inc
mov
jle
stc
inc
sub
and
mov
adc
stos
dec
jbe
pusha
movsb
cmpsb
shlb
jo
push
test
inc
cld
pop
cmp
jno
iret
cmpsl
adc
jl
sub
inc
xor
pop
movsl
add
sbb
and
mov
ret
lods
sub
insl
and
pop
cmp
xor
cmp
and
stos
lcall
pop
xlat
xchg
outsb
jl
xchg
xor
adc
leave
fnstcw
pop
xchg
adc
xor
subl
outsb
xor
and
loop
mov
push
xor
cltd
test
sbb
int
jbe
push
flds
jno
pop
or
push
xchg
push
cs
and
imul
inc
mov
jmp
jecxz
add
rcll
js
mov
loop
cmc
out
out
xlat
push
shll
cmp
imul
in
bound
pushf
addl
int
sub
push
test
dec
adc
dec
adc
out
and
mov
or
cmpb
sbb
ds
add
stos
lea
shll
fdivrl
out
push
stos
mov
shll
inc
sub
insl
enter
int3
inc
sub
daa
mov
sub
xchg
test
aaa
cmp
jmp
inc
ljmp
mov
nop
and
out
xorl
cli
ja
sbb
mov
adc
mov
insl
les
in
rol
rclb
aad
aaa
lret
mov
lcall
add
cmpl
adc
out
mov
popa
inc
add
cmp
fistpl
xchg
daa
and
sub
push
jns
jb
jno
loope
out
jl
push
nop
and
stc
push
rorl
call
xchg
stos
scas
inc
clc
out
push
je
int3
push
push
add
scas
add
call
adc
rcrl
dec
xor
mov
testb
js
sbb
leave
popf
push
jle
sub
testl
es
xchg
imul
test
or
pop
popf
pop
cld
xor
test
mov
lea
sbb
mov
cmp
mov
adc
xchg
xchg
adc
mov
mov
mov
and
stc
cmp
or
lcall
aad
mov
jne
mov
mov
add
sbb
dec
pop
fcomip
shr
inc
inc
jbe
cmp
insl
test
and
xchg
pop
mov
dec
mov
mov
clc
xor
cmp
cld
pop
pop
push
enter
data16
into
inc
int3
xor
jmp
nop
lret
imul
imull
xchg
or
add
cld
ret
xchg
sbb
fisubs
cmp
data16
jecxz
inc
cmp
mov
rolb
push
sbb
int
dec
imul
jb
mov
dec
or
cmp
into
inc
pop
fsubl
test
lret
cwtl
jne
aaa
dec
test
sbb
ret
sbb
cmpsb
inc
cwtl
data16
jl
jnp
xchg
call
pop
inc
xchg
das
xlat
jne
add
arpl
imul
jge
cli
push
js
sahf
xchg
cld
fildl
sub
pop
push
sub
cmp
push
js
je
push
pop
frstor
sub
cmp
icebp
xchg
xchg
cmpsb
xchg
jg
fs
sbb
sti
sbb
xor
adc
cmp
and
cmp
xchg
out
mov
movsb
push
pop
movl
cmpsb
adc
outsb
lock
out
lcall
popf
in
popf
mov
jge
loop
mov
pushf
sti
arpl
dec
das
flds
sub
fwait
int3
rorb
pop
mov
cld
addr16
adc
imul
pop
ds
mov
mov
subl
xchg
stc
addr16
or
sub
sub
aad
sbb
cltd
and
stos
mov
inc
dec
js
sbb
stos
scas
lods
je
stos
jecxz
pop
inc
xchg
and
jge
push
sbb
cmpsl
cmp
sbb
js
and
pop
repz
stos
adc
push
mov
sub
inc
mov
ja
add
push
xchg
into
jbe
arpl
cmp
jbe
in
pop
add
dec
int
outsl
pop
adc
in
pop
es
scas
pop
jbe
fwait
push
or
mov
mov
inc
jo
shll
inc
fdivrl
lds
pop
mov
les
and
addr16
pusha
dec
inc
xchg
xor
fs
mov
popf
cmp
add
mov
iret
xchg
add
aad
jb
test
imul
mov
rol
fs
nop
xchg
add
push
cmpsl
push
cmp
call
pop
clc
ret
test
jl
popf
out
shlb
out
loop
test
mov
jbe
sub
inc
xchg
incl
xchg
adc
mov
into
xor
out
dec
out
xchg
push
mov
sub
pop
mov
inc
pop
xchg
sub
push
icebp
mov
jecxz
pop
bound
or
shl
rcrb
inc
std
imul
in
cmp
outsl
xchg
aas
jmp
imul
inc
mov
mov
je
xor
in
push
pop
push
jae
das
icebp
push
into
dec
push
lahf
andl
orl
push
xor
push
mov
rcll
scas
xchg
imulb
out
sub
ds
iret
lock
mov
dec
cmp
pop
jecxz
sub
push
push
pop
xor
jge
faddl
push
out
sub
mov
adc
loop
inc
mov
push
and
mov
out
or
xchg
jne
mov
mov
imul
jl
sbb
add
aas
in
sub
dec
ret
or
xlat
shl
sub
cmp
outsl
cmp
mov
ds
sub
jl
xchg
je
cmp
aad
xchg
sbb
test
jmp
in
cwtl
mov
pop
in
push
cmpsl
mov
mov
das
fcomp
pop
xchg
orb
jl
dec
adc
aaa
sti
shl
xor
xor
testb
mov
pop
popf
popf
jmp
mov
in
shll
out
pop
and
jno
push
scas
data16
cmpsl
stos
addb
scas
xor
mov
xlat
arpl
xchg
pusha
inc
std
xchg
ja
out
sub
push
cs
lret
jb
mov
ret
sub
jge
mov
mov
rorl
cld
sti
leave
rolb
add
xchg
lock
mov
xchg
into
rorb
jmp
mov
insl
enter
insl
xchg
inc
sbbl
lock
xlat
sbb
add
jle
mov
mov
in
adc
fbld
cwtl
or
mov
adc
dec
push
outsb
lods
outsl
jno
cmp
aam
push
fwait
in
rorl
popa
jmp
ret
dec
add
movsb
imul
mov
xor
cli
add
adc
pop
jnp
jg
out
popf
jbe
mov
cmp
mov
fsubl
sub
out
inc
push
xor
mov
lods
cld
jmp
inc
sbb
xchg
jbe
das
sub
cs
and
push
jecxz
nop
cmp
sub
pusha
out
arpl
jae
int
imul
jecxz
dec
dec
notl
ret
mov
mov
adc
cmpsl
jns
push
adcb
mov
adc
fs
test
inc
inc
lea
mov
ret
and
mov
test
jbe
sub
xchg
rolb
out
lea
or
cmc
inc
movsb
ret
mov
push
nop
push
lds
push
or
fiadds
and
test
adc
adc
push
aam
ljmp
jg
sbb
loop
xchg
test
xor
out
xor
and
dec
sub
fisttpll
pop
in
enter
int
xlat
add
cmp
mov
jb
sub
push
jecxz
sti
xchg
int3
lret
fs
and
sbb
repnz
sub
mov
int3
dec
aad
mov
sbb
pop
aad
dec
rolb
jmp
pusha
pushf
int3
aad
jae
nop
mov
popa
mov
add
les
add
jmp
inc
in
loopne
out
imul
jle
test
aad
out
mov
xor
and
testl
arpl
cmp
aaa
mov
insl
ret
repnz
mov
insl
ja
dec
xchg
das
shrb
mov
push
cmpsb
cmp
push
or
sbb
cmp
addl
fmul
xchg
add
jno
sti
ljmp
loope
insl
lds
repz
scas
ficomps
xor
cmp
daa
lcall
stos
inc
pop
imul
cmpsl
xchg
js
es
or
setno
pusha
pop
and
fcoml
loopne
lds
mov
cltd
push
cld
mov
les
ficoms
cld
sub
sub
ror
cmpsb
filds
and
mov
push
enter
dec
lret
mov
xchg
dec
cmpsl
subl
fimull
mov
push
cld
sub
test
and
int3
mov
outsl
xchg
mov
call
inc
gs
jge
mov
icebp
sbbl
xor
sub
dec
mov
stc
mov
mov
insl
push
inc
imul
test
and
xor
mov
xchg
enter
mov
push
cmc
imul
out
insb
test
incb
repz
push
xor
adc
movsl
das
push
jge
bound
and
loope
data16
das
xchg
mov
push
mov
and
ljmp
xchg
sarb
jp
xor
arpl
insl
xlat
pop
mov
mov
add
das
dec
je
mov
jle
fistpll
insl
jl
xchg
insb
outsl
in
cmpsb
loopne
inc
leave
fdiv
outsb
push
add
or
sbb
sbb
and
push
sti
mov
ss
lret
cmpsb
stc
lds
out
orb
push
neg
sub
sbb
push
push
data16
sbbb
inc
lcall
test
mov
lahf
lods
lret
mov
jmp
imul
dec
inc
pop
js
ffreep
imul
jbe
addb
add
jo
insb
ljmp
jo
sbb
lahf
mov
jo
jno
movsl
adc
in
addl
adc
jp
inc
mov
jge
mov
jmp
xor
pop
loop
cmp
ficompl
into
stos
sub
les
xchg
pop
xlat
icebp
cmp
aam
jo
dec
inc
cmpsb
cli
lods
test
insl
mov
xor
cmpsl
mov
mov
shll
je
imul
and
inc
lods
mov
and
lret
xor
push
and
ret
pop
pop
adc
mov
sti
sti
pop
mov
rcrl
dec
stos
inc
int3
hlt
into
hlt
jne
cmp
pop
daa
push
cmc
xchg
shr
adc
test
push
inc
test
inc
call
pusha
mov
add
and
shll
and
inc
mov
cmpsl
and
xor
and
data16
loope
fistpl
and
mov
dec
jae
add
xchg
ret
repz
inc
rcll
pop
insb
pop
shlb
push
mov
cmc
xchg
push
ret
lods
enter
fnstsw
insl
flds
adc
mov
test
fldcw
and
mov
cmp
inc
test
aaa
insl
pushw
lret
sbb
or
jb
xlat
cs
jns
mov
xchg
lret
pop
mov
pop
pop
inc
mov
xchg
sub
gs
dec
pop
test
out
jmp
cmpsb
xor
ja
push
mov
js
sbb
add
mov
out
lea
mov
sbb
fcmovnu
jnp
xchg
mov
pop
in
dec
cld
rclb
mov
ds
xchg
pop
aaa
stc
arpl
push
cld
mov
test
sbb
outsb
test
lock
aaa
push
scas
pop
sbb
push
fimull
push
imul
and
scas
data16
xchg
xchg
push
dec
jnp
repz
adc
xchg
cvtpi2ps
movsl
cwtl
ljmp
cs
not
mov
jne
into
stos
sub
lret
cwtl
shrb
sbb
mov
outsb
jno
mov
xchg
xor
pusha
jo
movsb
push
xchg
inc
pop
clc
mov
dec
jbe
shlb
imul
inc
outsb
aaa
fnstenv
xlat
mov
loop
dec
enter
and
mov
jns
dec
fmull
je
push
sbb
in
ret
movsl
andb
bound
dec
push
mov
jmp
loop
lds
mov
hlt
cmp
jo
mov
jecxz
mov
dec
xchg
xchg
xor
lcall
sbb
mov
ljmp
sub
divb
cld
pop
rorb
mov
orl
sub
mov
lods
pop
mov
xor
mov
stos
cmp
push
mov
push
jmp
sbb
jno
jp
push
mov
filds
jg
or
repz
addb
add
repnz
sbb
mov
dec
mov
adc
in
pop
xlat
jns
fsts
out
in
add
pop
out
outsb
push
jp
cmp
movsl
add
xor
add
sub
cli
xchg
xchg
ja
lcall
inc
test
outsl
out
sbb
mov
mov
push
lods
sub
dec
fwait
cmp
jns
and
in
inc
lahf
pop
push
mov
push
arpl
sub
int3
and
mov
aam
adcb
cld
mov
jmp
hlt
and
data16
mov
test
push
sbbl
xor
daa
mov
and
mov
in
push
pop
movsb
pop
and
frstor
adc
jbe
jp
lahf
mov
hlt
subps
loop
sub
xchg
pop
data16
add
xchg
mov
mov
or
cld
pushf
xchg
and
xor
adc
xchg
cmc
lods
mov
xor
mov
rorl
lcall
gs
lret
in
xor
movsb
scas
sahf
cmpsl
aaa
ret
fwait
push
jae
in
sbb
fnstcw
sbb
testl
push
cmp
into
fsubr
sti
sub
cld
test
push
jo
jbe
add
dec
repz
fucom
out
jmp
xchg
fisubl
andb
mov
mov
insb
sbb
and
inc
js
out
dec
gs
adc
les
mov
cmp
sub
stos
mov
lea
push
ret
mov
shlb
leave
adc
dec
rol
add
and
mov
sbb
jl
mov
dec
jno
jle
jns
movsl
jl
pop
xchg
lods
push
push
dec
jbe
ds
lods
aaa
lret
scas
aas
je
dec
in
add
pop
sbb
push
or
outsl
and
je
lods
dec
jle
push
cmp
jo
jge
ret
sarl
pop
push
scas
setae
xor
into
mov
jno
iret
outsl
icebp
sbb
ds
jg
ds
pop
sbb
jno
sarb
or
jg
push
mull
or
push
push
adc
and
mov
cwtl
or
jle
sub
or
bound
loop
xchg
mov
hlt
loope
xor
mov
cmp
scas
jns
xchg
test
lods
sbb
inc
cli
movsl
test
in
cmp
cmc
in
cmp
out
mov
test
or
push
jecxz
and
mov
andl
mov
and
adc
fstpt
out
push
lods
or
xchg
mov
or
jp
sub
rcll
mov
out
inc
xchg
push
dec
lods
sbb
and
sub
dec
mov
arpl
lret
jle
mov
jbe
adc
addl
fs
xchg
aam
mov
jl
pop
xchg
shlb
and
in
sub
adc
xchg
lret
fistps
cmpsb
nop
pop
adc
ds
jb
adc
add
fldl
or
clc
add
add
add
js
fldl
xor
pop
mov
mov
mov
xchg
dec
enter
jecxz
faddl
ljmp
movsl
xor
dec
popf
sbb
ficompl
sub
stos
and
jl
arpl
and
cmp
lcall
cwtl
inc
popa
sub
cli
sub
inc
ja
pop
out
mov
repz
scas
cwtl
lcall
scas
mov
jle
inc
cmpsl
push
adc
push
dec
cmp
filds
lods
addr16
popl
lods
xor
cmpsb
pop
lret
fnstcw
xchg
jno
ror
lea
lcall
mov
loopne
jp
jo
mov
jl
insl
popf
pop
or
icebp
mov
dec
xor
mov
outsl
fistl
xchg
enter
fisttpll
iret
je
gs
mov
bound
je
inc
pop
add
mov
hlt
pushf
pop
aas
insl
fmull
push
add
insb
outsb
rorb
inc
test
mov
imul
shrb
mov
int
jb
add
jns
adc
in
arpl
lods
rclb
out
dec
lock
addr16
into
lret
fsubl
adc
daa
mov
and
lods
jno
xchg
repz
dec
ds
push
lock
fistpl
lahf
jmp
clc
xor
aaa
jecxz
mov
stc
or
sbbl
mov
or
movsl
mov
cmc
jne
lds
std
pop
out
jns
test
sbb
jo
add
xchg
and
mov
sahf
push
loope
push
xchg
mov
mov
outsl
xchg
movsl
inc
xor
mov
ljmp
mov
cmpsl
ficompl
sub
mov
movsl
leave
pusha
dec
bound
imul
cmp
pusha
xchg
into
stos
cld
push
je
sahf
dec
xor
aam
daa
out
mov
add
loop
mov
xchg
loopne
in
lock
ficoml
jle
pushf
fisttps
faddp
std
mov
cltd
cld
dec
xor
add
xchg
int
je
dec
and
add
shlb
xchg
mov
adc
or
xor
mul
inc
scas
xchg
enter
pop
lods
mov
sub
mov
push
pop
sbb
ljmp
pop
add
scas
mov
loopne
pop
adcb
xor
mov
mov
rcrl
mov
pop
xchg
leave
rcrl
and
outsl
push
adc
pop
sub
fs
enterw
mov
aas
sub
lea
sub
push
cwtl
fwait
jle
hlt
in
push
pop
insl
jecxz
mov
cli
jmp
movb
push
cmp
bound
fsubs
in
ret
sti
into
imul
orl
xchg
arpl
jns
dec
bswap
in
or
add
mov
mov
sbb
xlat
dec
clc
inc
in
sti
popa
push
orb
mov
inc
cli
das
xchg
pop
cmp
lods
jo
fimuls
orl
out
dec
mov
test
jnp
add
insb
pop
push
xchg
mov
imul
loopne
fisttpll
ljmp
dec
icebp
sbbb
pop
cli
scas
sbb
xchg
test
out
or
and
and
out
arpl
lret
icebp
iret
push
add
mov
repz
orl
mov
clc
push
ret
adc
add
aas
insl
pop
das
mov
fs
dec
repz
adc
idivl
aad
nop
rclb
fsub
fcompl
arpl
movsb
mov
insl
popa
stos
add
mov
adc
rorl
sti
int
frstor
mov
add
lods
insl
nop
or
dec
popa
dec
in
out
mov
xchg
movsl
daa
shlb
add
sbb
dec
rolb
xchg
xchg
and
cwtl
mov
ss
inc
rcll
or
outsb
or
imul
mov
xor
in
mov
xchg
lds
jmp
or
cmpl
mov
ds
mov
pop
dec
ljmp
mov
mov
jne
dec
cmpsb
fsubl
lock
jge
add
inc
rorl
mov
dec
movsl
sbb
mov
mov
fwait
inc
fcomps
ficomps
xor
fimull
into
inc
and
cmp
push
cltd
cmpsb
movsb
ja
xchg
pop
jno
cmp
inc
movsb
lods
sahf
mov
popf
enter
and
dec
lahf
add
sbbl
push
mov
push
mov
mov
test
mov
lock
idivb
into
jbe
jle
sub
mov
jb
pop
cs
sbb
xor
aad
sub
pop
aad
push
mov
call
xor
nop
arpl
push
scas
out
icebp
xchg
xchg
and
sub
dec
add
ficoml
sub
int
pop
movsl
fsubrp
cmp
bnd
push
push
ret
lcall
xor
js
rcrl
xchg
sub
lods
push
sub
adc
jecxz
in
stos
dec
sbb
cmpsb
pop
mov
cmc
jae
mul
nop
add
sbb
clc
stc
mov
add
or
ret
pusha
fcoms
xchg
adc
add
cmc
rep
out
fdiv
in
jae
cmpsl
dec
fcomps
jb
sub
loopne
mov
cmpsb
adc
leave
cmp
mov
and
fwait
sub
daa
add
std
fldenv
popl
push
mov
dec
das
sub
adc
in
lods
mov
lods
int3
inc
outsb
jmp
stos
xchg
ror
fs
xchg
inc
jbe
and
xchg
mov
js
loop
adc
cs
je
aas
cs
mov
pop
mov
and
out
es
shrl
sub
popf
xchg
mov
mov
mov
mov
mov
sub
dec
pop
addr16
adc
adc
pop
adc
mov
test
jp
movsl
jo
sub
sbb
pop
sub
push
cwtl
sbb
out
push
pop
pop
daa
sub
sub
stc
mov
jl
leave
mov
sub
adc
or
out
or
nop
stos
in
jne
das
test
int
jns
mov
xchg
xchg
dec
int3
pcmpgtw
dec
cld
cld
test
cmp
xchg
xchg
jg
movsb
xchg
fdivr
aas
push
imul
lods
mov
es
push
xchg
mov
push
inc
out
movsl
pop
int
gs
test
cmp
cwtl
test
cs
xchg
enter
movsb
faddl
iret
sub
add
pop
rorl
dec
xchg
repnz
iret
push
and
xor
popa
nop
mov
adc
mov
push
adc
cs
paddw
sbb
sahf
ffreep
popa
mov
jge
cld
movsl
xlat
cmp
and
jae
dec
mov
mov
bound
lock
pushf
les
imul
bound
push
ret
add
shll
sbb
push
xchg
aas
xor
mov
scas
cmp
mov
fsts
das
mov
dec
add
test
pop
mov
mov
adc
insb
data16
arpl
dec
cltd
xchg
leave
jle
lahf
test
loop
test
inc
sub
xchg
rcr
std
movsl
pusha
sub
adc
daa
int3
push
nop
fucom
inc
xchg
lods
push
ror
and
in
and
pop
ds
push
xor
mov
xchg
popa
xchg
push
not
cmp
jp
push
adcl
jg
or
es
jae
or
cwtl
or
cmp
fdiv
pop
dec
sub
je
jb
stos
dec
mov
int
popf
mov
shll
mov
stos
sti
sar
iret
dec
je
lock
jns
insl
cld
fs
xor
mov
cmp
sbbl
mov
and
push
jnp
rorl
mov
cmpsb
lods
shll
cmp
mov
mov
dec
add
stos
jb
dec
dec
ljmp
int3
mov
xor
insl
fnstcw
push
mov
mov
sub
ret
popa
jecxz
clc
pop
push
cltd
imul
pop
addr16
pop
pop
cmpsl
icebp
shr
xchg
cs
iret
sub
test
call
ja
cmp
dec
mov
or
jo
dec
inc
scas
push
les
sbb
nop
insb
mov
and
das
sub
imul
daa
mov
daa
push
push
cmpsb
mov
aas
pushf
cs
add
outsl
sti
aaa
add
mov
and
fisubs
add
push
dec
dec
mov
adc
dec
inc
dec
pusha
inc
or
mov
xchg
xor
mov
or
or
mov
dec
xor
xor
mov
pop
cwtl
cld
ficoml
pop
push
mov
sarb
jns
call
cltd
cmpsb
imul
sub
shl
stos
xchg
cmpsb
jmp
cmp
jmp
jno
cmp
sub
and
cmp
add
mov
jnp
stos
mulb
sub
or
pop
and
or
fisubrl
outsb
sbb
test
jo
sbb
mov
insl
lahf
imul
pop
sbb
dec
hlt
div
stos
in
sbb
cwtl
leave
xchg
dec
jle
test
xchg
or
adc
ljmp
flds
aam
pop
xor
mov
out
dec
cli
mov
outsb
rcrl
int
and
aad
adc
push
pop
pop
out
mov
les
test
ret
mov
xor
push
adc
test
outsl
pop
and
or
scas
xchg
cmpsl
mov
pusha
inc
add
mov
sub
jno
mov
sub
mov
scas
fistpll
mov
mov
stos
sbb
int3
add
or
fisubrs
popf
mov
push
sahf
sbb
jae
lcall
stos
push
repz
mov
or
lds
pop
mov
mov
repz
or
jns
aas
enter
arpl
clc
jnp
inc
adc
mov
xor
push
xchg
call
popa
xor
and
out
xchg
sahf
pop
stc
arpl
xchg
cmp
xor
enter
sbb
aas
pop
gs
aam
xlat
loope
out
pop
cwtl
test
pop
lods
adcb
cmp
and
push
lds
test
test
arpl
xchg
sub
test
inc
push
lcall
movsl
ljmp
stos
mov
cmc
outsb
inc
aas
jle
xor
inc
pushf
adc
das
cmpsb
fsubrl
inc
pusha
ds
pop
lds
push
push
xor
pop
dec
ret
adc
int
lret
repnz
mov
lock
pusha
fildl
fisttps
push
mov
inc
enter
dec
pop
and
pushf
les
out
sub
pop
mov
or
or
test
pop
cli
pop
adc
fisttps
cmc
push
dec
in
xor
dec
loopne
push
enter
imul
dec
js
adc
or
loope
cmp
ja
scas
mov
sbb
aaa
sub
bound
xchg
movsl
repnz
shl
frstor
jg
cli
ljmp
jno
pop
push
pop
sti
subl
dec
inc
fcmovu
sbb
sub
jge
jmp
cmp
jns
and
inc
in
xchg
sbb
add
dec
xor
lods
add
cld
jle
pop
out
mov
test
sub
pop
adcb
mov
pop
cmc
ds
sbb
fwait
into
xchg
xor
sbb
xor
imul
lret
enter
aam
in
pop
mov
jge
adc
imull
aaa
adcl
push
fwait
jge
adc
xor
sbb
js
push
sbb
pop
loop
add
cmp
ja
jl
cmc
pop
in
cld
cmp
pop
stos
sbb
sti
jmp
fidivl
mov
or
into
shll
pop
xchg
jecxz
xor
popa
xchg
clc
gs
adc
icebp
imul
cmp
adc
pushf
nop
mov
pop
inc
jns
test
xor
mov
push
repnz
mov
repnz
and
pcmpeqd
sub
lock
jnp
or
jo
ret
nop
fcmovbe
or
mov
icebp
sub
mov
xor
jb
sti
in
fidivrl
in
clc
aas
jmp
ficoms
pushf
sbb
ja
mov
mov
xor
sub
scas
sbb
fists
das
rcr
adc
jbe
adc
cmovns
pop
push
outsb
es
pop
mov
dec
shll
adc
fwait
jne
mov
lea
test
insl
xchg
fiadds
lret
cmpsl
inc
fs
or
cmp
add
fsubrs
addl
sub
clc
daa
repz
das
jae
sti
inc
movsb
pop
adc
and
mov
or
mov
test
lock
gs
insb
mov
fstpt
mov
les
inc
shll
movsl
repnz
pusha
mov
out
xor
xor
pop
jg
sub
aas
fidivrl
mov
or
addb
mov
mov
arpl
and
adc
out
sub
sbb
jae
daa
loop
adc
dec
imul
pop
out
dec
sbb
push
adc
mov
cmp
push
sub
jnp
loopne
test
or
pop
fdivs
dec
adc
cmp
mov
or
cmp
fwait
adc
add
mov
or
jecxz
cmp
shll
lock
push
add
ret
out
out
ret
add
lahf
mov
dec
pop
gs
insl
cli
bound
mov
xchg
addr16
sub
out
mov
xchg
loop
ljmp
repz
sbb
fdivl
jmp
and
jns
insb
inc
push
lea
stc
gs
mov
dec
adc
xor
stc
outsl
push
jecxz
popa
mov
push
popf
push
flds
ljmp
stc
push
int3
dec
and
ljmp
out
sbb
out
jmp
add
dec
lahf
stc
cmc
shrl
stc
mov
mov
pop
sub
cmc
shrl
mov
xor
inc
push
adc
or
dec
pop
out
mov
pop
ret
aad
in
aam
iret
ret
cmp
int3
pop
fnsave
pop
mov
sti
dec
les
inc
out
push
fs
orl
test
add
int3
fldenv
and
insb
subb
xchg
mov
adc
dec
cld
in
cmp
or
push
mov
addr16
inc
xchg
xor
mov
mov
dec
push
xor
xchg
mov
add
fwait
dec
outsl
shrl
aas
and
in
int
add
aad
cmp
mov
cs
xor
mov
imul
mov
push
mov
push
mov
pushf
mull
mov
loopne,pn
ret
outsl
jp
scas
out
sub
or
push
rorl
mov
cmp
enter
and
sub
loopne
mov
loope
xor
lods
pop
mov
loope
sub
leave
out
enter
fstps
insb
add
sbb
inc
push
pusha
xchg
push
inc
and
pop
or
push
ret
das
pop
xchg
das
sbbl
aas
add
inc
fsubrs
cmp
push
dec
add
das
jecxz
sub
aad
mov
dec
mov
ljmp
stos
arpl
sub
sub
jge
or
je
mov
pop
sbb
adc
mov
add
cld
clc
and
and
sbb
cltd
cmp
lahf
ret
jge
xchg
pop
stos
test
sbb
mov
scas
and
lods
push
and
lea
cli
leave
and
fidivrs
dec
push
inc
andb
sbb
inc
push
dec
jmp
sahf
aam
cmp
ja
jle
inc
aad
mov
scas
jg
mov
cmp
pop
xchg
and
dec
xchg
xor
ja
rcl
jmp
fwait
sub
xor
push
xchg
xor
mov
mov
inc
push
and
push
inc
mov
ds
out
or
repz
daa
bswap
jnp
dec
fimull
and
into
inc
movsl
loope
mov
xchg
sbbl
mov
xor
ss
inc
es
cmc
imul
sbb
cmp
inc
mov
cmp
mov
jnp
fcmovnb
adc
push
jns
stc
fnstenv
pop
add
loopne
ja
and
int
dec
xor
mov
adc
cmpsb
push
dec
xor
into
lcall
outsl
lods
push
lds
or
and
rcll
ljmp
sub
fcompl
popf
enter
sbb
sahf
data16
or
add
jns
xorl
div
lock
repnz
ret
mov
ret
xchg
xchg
fisubs
xor
mov
dec
ret
mov
fsubrs
cmp
cltd
roll
notl
mov
fs
inc
cltd
cmp
cmp
fsubrs
in
adcl
std
icebp
cs
out
inc
stos
outsl
dec
cli
add
loop
xor
cmp
push
data16
push
lea
dec
mov
jp
aam
lock
lods
mov
push
scas
std
jecxz
cmc
fcomp
movsb
in
js
mov
mov
adc
inc
pusha
aas
push
add
jp
out
inc
int3
addl
ja
xor
insl
xchg
cmpsl
push
push
xor
mov
dec
clc
jmp
push
sbb
aas
mov
mov
test
aas
in
stos
push
out
sahf
xor
fwait
lret
in
and
and
push
lds
and
sti
mov
cmpsl
fistpl
mov
enter
fcoms
popa
sub
push
jg
jle
aad
xor
jb
rolb
mov
icebp
stos
xchg
call
jno
mov
sbb
out
add
add
sbb
xchg
pop
adc
movsl
out
cmp
jg
pop
xchg
add
pop
xor
cmp
and
inc
cmp
mov
inc
sbb
and
and
and
imul
es
outsl
inc
cmpsl
xchg
and
into
clc
je
pop
and
push
mov
add
pop
mov
mov
iret
nop
jbe
lcall
jne
mov
mov
jl
jne
mov
daa
les
dec
mov
cmp
jo
and
cmpsl
mov
pop
std
cmp
mov
testb
push
les
adc
leave
lea
push
jo
push
or
scas
adc
fistpll
cs
mov
and
and
jecxz
pop
and
xchg
and
cli
xchg
or
test
jmp
mov
insl
mov
orb
incl
push
into
push
or
adc
add
pop
and
adc
std
loopne
int3
cli
mov
adc
sub
aaa
inc
andl
xor
dec
cld
jg
shll
ret
jno
and
enter
rcll
aas
sub
and
add
cmp
mov
mov
lcall
sub
mov
sbb
inc
test
jmp
mov
mov
mov
dec
add
dec
leave
adc
aam
push
sbb
into
mov
sti
xor
dec
leave
mov
ret
enter
mov
xchg
add
push
mov
adc
sbb
fwait
add
out
mov
stc
rclb
scas
sub
bound
stos
mov
or
push
movsb
lcallw
shll
movsl
pop
out
xchg
clc
jnp
lcall
aad
cltd
andl
pop
jne
push
dec
jb
push
test
push
cmp
ljmp
aad
clc
push
pusha
and
mov
add
xchg
lock
mov
rcll
xlat
push
orl
adc
and
jnp
in
mov
stos
mov
pop
cmpsb
jo
lods
cmp
and
jo
outsb
orl
pusha
adc
mov
jns
pop
lea
inc
adc
pop
rcrb
dec
lock
mov
repnz
jbe
shlb
filds
bndstx
sbb
mov
js
sbb
push
cmpsb
fiadds
mov
push
or
xchg
setae
mov
and
push
and
pushf
dec
jge
sub
notl
and
xor
cmpsl
fldt
sbb
pushf
ljmp
insb
in
mov
mov
push
lcall
push
mov
call
das
into
push
mov
jb
fildll
pop
lcall
cmp
or
sbb
rorl
out
fstp
scas
mov
inc
and
das
dec
in
push
jmp
jg
ret
or
mov
sub
push
sahf
pop
mov
in
inc
rolb
in
imul
jo
mov
out
inc
jg
or
push
jmp
add
iret
cmc
aad
fdivrs
cwtl
pop
push
cmpb
ss
push
loop
jnp
andl
add
add
inc
cmp
int3
push
cmc
push
mov
or
cmpsl
outsl
and
addr16
movsb
or
sbb
jb
mov
lcall
or
jmp
push
insl
insb
mov
in
mov
mov
clc
mov
or
ret
stos
cltd
call
lret
mov
push
sbb
mov
negl
pop
lcall
jg
adc
cmc
clc
mov
lock
leave
and
je
repz
jmp
jg
aas
shlb
or
out
lret
cwtl
cmp
jb
insl
pop
loopne
pop
sbb
adc
cwtl
pushw
add
sbb
insb
add
add
lahf
ljmp
and
jge
stc
cmp
cld
pop
jle
mov
scas
das
dec
mov
rcl
mov
std
pop
aas
ja
mov
nop
adc
inc
adc
push
jbe
sbb
stos
mov
rcrb
adc
es
sbb
outsb
loop
cwtl
pushw
sub
sahf
jne
xor
nop
fimuls
icebp
negb
push
in
lcall
jns
mov
cltd
or
ja
push
xor
mov
pop
cli
sahf
or
bound
adc
mov
fstpl
pop
iret
mov
lahf
gs
out
mov
stos
push
lods
xchg
icebp
lea
addr16
push
lcall
jl
jle
lret
cmp
imul
addr16
sbb
das
push
mov
jb
repz
jbe
fcompl
repz
adc
shl
jns
insl
in
stos
push
stos
lahf
mov
ja
jns
mov
cmc
push
add
xchg
push
inc
mov
stos
pop
outsl
stos
xor
cmp
imul
inc
cld
sub
mov
xor
jnp
mov
push
push
lret
xchg
fldcw
xchg
pop
xor
xor
push
and
push
mov
clc
sti
pop
or
jne
pop
pop
mov
adc
loopne
cmp
xor
push
xor
fdivrl
mov
stos
mov
cli
dec
cmp
jnp
add
sbb
dec
inc
rcrb
fisubrs
cmpsl
mov
jns
std
sahf
and
adc
jns
xor
int
sahf
pop
cmp
cmp
add
test
push
orb
sti
fsubrs
push
or
fidivs
daa
jns
adc
sub
gs
imulb
xchg
lds
jle
or
cmp
ss
ret
adc
shll
scas
push
adc
rcl
and
fs
les
jb
js
or
lcall
xchg
ficoms
cmp
push
fimuls
cmp
adc
aas
mov
clc
jbe
movsb
inc
mov
adc
sub
and
movb
iret
inc
xchg
or
mov
clc
jmp
loope
insl
sbbl
xchg
mov
out
xchg
test
pop
jmp
cwtl
xchg
test
xor
cmp
mov
push
jmp
xchg
daa
ljmp
cmp
das
cmp
mov
outsb
jnp
scas
mov
jge
into
shll
pop
jns
ljmp
data16
iret
cmp
adc
inc
jno
std
inc
repnz
out
sub
adc
mov
cmp
sbb
stos
ret
clc
int3
in
sbb
add
nop
std
jp
mov
nop
test
lods
leave
movsl
out
outsl
aad
ret
stos
lds
cs
mov
mov
pop
lea
mov
xchg
pop
xchg
cwtl
mov
iret
xor
dec
xor
xchg
push
mov
cmc
mov
int3
add
cmpsb
js
cmpsl
rclb
push
add
lods
in
jnp
outsl
jne
push
add
jg
cmc
jmp
jno
ficompl
dec
notl
ljmp
push
xchg
aad
xchg
lahf
repz
xchg
fcmovnu
cwtl
or
dec
fildll
out
push
xchg
stos
or
popl
pop
pop
jbe
pop
pop
and
sahf
test
in
aad
adc
lret
jae
comiss
insl
pop
and
hlt
mov
cltd
mov
int
mov
icebp
ss
lret
add
cmp
ss
cld
dec
or
cmp
adc
push
pop
mov
fyl2x
leave
scas
jne
push
lods
sbb
xlat
mov
test
neg
negl
fbld
push
inc
inc
icebp
cmc
fwait
jno
loopne
outsb
sti
mov
das
repnz
lock
imul
in
sbb
push
pop
mov
pop
enter
movsl
dec
imul
jo
call
xchg
dec
movsb
mov
mov
shrb
dec
int
pop
mov
mov
mov
lds
adc
in
add
mov
mov
insb
mov
maxps
loop
adc
mov
in
incb
add
inc
test
aad
mov
inc
jmp
sbb
push
or
stc
pop
sbb
and
and
sub
scas
xchg
dec
mov
adc
push
jbe
push
iret
sbb
cltd
jmp
dec
negb
ret
lcall
or
or
xchg
loopne
les
andb
jno
mov
outsl
clc
jecxz
frstor
les
cmpb
nop
int
mov
test
dec
sti
iret
jp
inc
adc
das
fwait
mov
fwait
jecxz
lahf
dec
cltd
or
or
push
mov
jo
xor
hlt
dec
jno
rcrb
cmpsb
mov
xor
call
lahf
pop
les
mov
int3
dec
sbb
pop
mov
out
mov
mov
jbe
mov
inc
fwait
jl
stos
scas
mov
jp
push
cmpb
xchg
inc
mov
xlat
adc
jno
xor
loop
pushf
stos
dec
pop
loopne
mov
lds
mov
lcall
popf
mov
std
xor
shlb
or
sarl
fidivrl
imul
push
jl
and
test
sub
sti
and
xor
dec
fs
mov
pop
pushf
jo
push
inc
jo
fadds
pusha
roll
add
sbb
add
inc
jb
jp
mov
sbb
div
iret
das
lock
add
cli
aad
movsb
push
jmp
sbb
sub
xorb
into
lods
mov
in
sbb
fwait
mov
xchg
in
mov
push
push
and
jmp
dec
cmpsb
cli
and
push
loop
test
mov
shl
cmp
pop
aad
mov
lcall
xchg
and
cltd
icebp
sub
push
lea
lahf
shrb
pop
push
and
es
mov
dec
xor
mov
xor
and
adc
push
iret
inc
leave
roll
adc
rcr
mov
or
xor
xlat
es
pop
negl
sub
call
fists
jbe
scas
xor
mov
mov
xor
push
fisubl
cmp
iret
test
leave
push
fwait
nop
jle
and
int
dec
pop
out
into
dec
xlat
jae
leave
or
sahf
outsl
dec
out
xlat
adc
nop
cmp
xor
xor
in
sbb
xchg
popa
mov
pop
dec
call
add
sbb
sti
or
shl
scas
loopne
sub
and
ljmp
cs
push
sti
push
out
inc
in
mov
aaa
inc
or
stos
add
lds
outsb
mov
mov
call
mov
inc
rcll
cmp
inc
rclb
pop
sbb
cmp
mov
sysret
jecxz
lcall
sub
cmpsb
cli
inc
or
sahf
outsb
es
push
mov
push
mov
js
int3
sbb
out
std
imul
add
das
loope
sti
lret
xlat
pop
aaa
imul
xchg
xrelease
icebp
pop
inc
sbb
cmc
mov
dec
jge
insl
sbb
testb
in
xchg
and
sub
into
mov
pop
sbb
int
sbb
adc
xor
cmc
out
test
stos
iret
push
sbb
orl
mov
pop
jne
mov
repz
or
push
bswap
xor
mov
cmp
jae
mov
cmc
cmpsb
xor
jne
mov
mov
rep
aas
mov
test
lret
mov
mov
pop
in
rcrb
pop
mov
dec
cli
xchg
jo
cli
push
cld
faddl
xor
dec
jg
pop
sbb
jne
jo
or
push
sub
rcrl
xor
sub
mov
inc
sub
jae
inc
mov
fwait
xor
mov
lret
dec
push
pusha
repz
sub
or
add
roll
cld
out
jl
pop
mov
cmc
push
fstpt
sahf
pop
fldenv
pop
fbld
mov
pop
pop
gs
ljmp
push
push
xchg
push
in
rcl
sub
and
cmp
sahf
and
mov
iret
mov
pop
sub
jnp
stos
pushf
cmp
stos
dec
xlat
and
xchg
pop
add
cld
rcrl
dec
shll
mov
loop
mov
push
xchg
nop
popa
add
jnp
xchg
cltd
mov
in
in
dec
inc
ss
ds
or
pop
mov
fistpll
sub
imul
pop
mov
adc
ja
cmc
mov
lea
sub
pop
outsl
pop
cmpb
repz
push
les
shrl
lahf
lods
sbb
sahf
push
pop
xchg
repz
add
sbb
sbb
pop
jecxz
dec
fs
xchg
repz
jl
js
jmp
dec
push
imulb
das
and
jge
out
xchg
cmp
sub
ss
dec
sbb
out
sub
subb
arpl
fwait
push
cmp
and
sub
js
cld
cmc
sub
add
xor
jge
js
mov
mov
push
adc
sub
adc
xchg
mov
mov
push
cmpsb
mov
jns
add
sub
xor
mov
mov
insb
sbb
jmp
movsb
pusha
add
imul
xchg
into
sub
or
fildl
fisubrs
mov
iret
clc
fbld
sbb
jnp
gs
shll
test
cmp
int3
xchg
xchg
mov
jnp
jae
jmp
jo
jge
add
test
adc
cmpl
mov
mov
cmpsl
or
mov
or
xlat
and
cmp
mov
insl
sti
addb
fidivrl
int3
adc
movsl
mov
loope
lret
scas
jecxz
jle
sub
in
xchg
add
enter
jg
stc
jo
in
xchg
into
sbb
and
movsl
leave
adc
lock
or
inc
mov
pop
sub
cmp
inc
inc
mov
push
sahf
push
add
lret
popa
das
jp
pop
fstl
daa
scas
cmpxchg
ljmp
scas
imul
test
push
ret
fbld
stc
ror
xor
dec
mov
sub
mov
sub
test
mov
scas
fidivs
std
aaa
int
cli
jb
sub
or
mov
push
xor
cmp
test
and
push
jl
insb
fcom
fidivrl
xchg
push
sub
sbb
mov
mov
adc
loopne
jge
jbe
movb
sub
fcoml
testl
push
sbb
mov
lret
test
std
ret
clc
fisttpll
stos
dec
stc
stos
pop
add
js
int3
jb
jle
mov
pop
ret
xor
xor
shl
sbb
ret
test
adc
icebp
pusha
dec
test
cmpsl
or
or
cmc
inc
pusha
mov
decl
or
inc
inc
fstpl
jns
add
mov
aaa
jb
dec
adc
dec
jns
paddb
add
fldl
and
fistpl
xchg
sbb
fisubl
pmaddwd
repnz
dec
xchg
stos
xchg
jnp
push
shrl
push
data16
push
xchg
cmp
mov
test
outsb
test
mov
daa
imulb
mov
mov
lds
xor
and
inc
test
daa
adc
jbe
jmp
ret
fstpl
pop
cld
mov
xchg
das
pusha
in
stc
jbe
push
and
test
push
dec
cmp
aam
adcl
pop
out
jge
outsb
insl
and
mov
jp
loope
sub
inc
lret
in
int
push
popa
enter
lahf
and
shrl
mov
cli
testl
dec
orl
mov
in
iret
in
sub
popf
cmc
cwtl
xchg
pushf
inc
leave
jae
notl
sbb
fimull
lods
and
and
popa
cmp
sub
jp
jg
mov
push
roll
and
mov
jmp
lret
imul
cmp
sbb
xor
enter
es
xchg
and
call
xor
call
pop
loop
push
cmp
pop
adc
sbb
xchg
in
add
jnp
adc
push
inc
push
jge
or
mov
aad
sub
and
sub
clc
mov
mov
movsb
sbb
dec
xor
dec
mov
or
roll
test
inc
xchg
ss
fs
push
jno
sub
data16
mov
push
in
sub
jae
jge
cmp
sub
push
fisubs
hlt
idivl
insb
or
mov
inc
data16
fnstenv
fmuls
push
jle
ds
jle
push
les
lods
out
adc
testb
fwait
pusha
jbe
xchg
inc
xor
sahf
sbb
mov
jecxz
pop
adc
mov
adc
xor
addb
jno
rcrl
cmp
mov
ss
out
rorb
scas
ret
sub
pop
dec
xor
aad
insl
mov
lcall
pusha
gs
xchg
mov
repnz
repz
call
push
mov
lea
jp
sti
lods
dec
inc
scas
add
push
adc
daa
adc
jl
fnstsw
push
add
mov
pop
call
scas
mov
inc
fcmovne
and
cmp
out
jbe
aas
jns
imul
mov
stc
cmp
outsb
adc
nop
lock
outsl
adc
dec
adc
cwtl
dec
mov
fwait
ljmp
adc
call
movl
loopne
mov
inc
inc
imul
test
mulb
sub
aaa
xchg
xlat
mov
mov
lcall
shlb
cmpsl
adc
ret
dec
xchg
shr
xchg
lahf
or
or
leave
add
bound
loop
xlat
adc
adc
xchg
inc
int3
nop
aad
mov
sbb
stc
jne
jae
hlt
lods
jp
push
add
xchg
or
mov
ljmp
xchg
cmp
and
fmuls
mov
sub
pop
in
mov
lret
scas
jae
push
call
inc
lds
jbe
mov
adc
pushf
mov
adc
sub
outsl
sub
mov
stos
adc
xchg
xchg
mov
insb
mov
push
mov
fistpll
push
out
ds
push
xor
mov
jnp
testl
outsl
sub
inc
aam
pop
mov
outsb
dec
xor
lret
lock
inc
aad
int
pop
pop
mov
cli
push
testl
mov
xchg
stos
or
lcall
ds
push
jbe
enter
inc
in
ss
jns
or
jp
pop
xlat
in
std
inc
imul
mov
dec
jl
daa
mov
cmp
lcall
sub
xor
das
dec
cwtl
or
cmpsl
rcr
push
lock
lahf
outsl
ror
dec
mov
or
int3
xor
and
stc
test
pop
sbb
rcl
inc
outsl
mov
mov
add
inc
in
shr
lds
sti
insb
mov
mov
mov
push
mov
adc
imul
add
or
in
jmp
fsubrp
rorb
pop
dec
js
push
or
jo
ret
mov
jno
in
xor
mov
inc
xchg
push
inc
mov
pop
pusha
outsb
rcrl
adc
shr
out
mov
fadds
pop
push
cld
mov
mov
loope
mov
and
add
sub
xor
test
xchg
mov
rclb
jnp
movsl
in
ja
das
push
push
dec
and
lods
sub
pop
imul
test
adcb
push
fs
mov
es
pop
es
and
or
ss
ret
je
mov
test
sub
or
mov
dec
dec
push
sub
mov
push
enter
outsl
jbe
test
cmp
sbb
inc
inc
mov
mov
mov
imul
stos
inc
pop
adc
lock
es
rcll
mov
leave
mov
addr16
repz
scas
lcall
adc
dec
mov
call
or
xlat
addl
pop
test
scas
sti
and
jb
and
adc
aad
ret
inc
pop
sub
or
cmc
dec
pop
ffreep
test
jl
in
adc
jecxz
sub
mov
jbe
inc
add
cwtl
dec
cmpsb
mov
mov
jne
hlt
jnp
mov
add
test
stos
xchg
iret
xorb
mov
cmp
cli
es
dec
inc
cli
mov
fsubp
imul
pop
in
sbb
cld
push
adc
popf
mov
cmpsb
arpl
dec
shrl
testb
pop
mov
ja
xor
jge
std
sbb
mov
cmc
and
fwait
or
fcmovb
mov
fnstsw
push
jge
std
push
sbb
test
sub
adc
jo
and
sub
mov
loope
lea
cmc
in
ret
sbb
xchg
mov
cmp
pop
mov
sbb
cld
insl
ja
shrl
pop
call
dec
and
xor
outsl
mov
push
push
bnd
add
sbb
lds
mov
or
pop
pop
test
dec
gs
and
push
mov
shll
jno
out
adc
int
sbb
out
mov
mov
lret
lret
cmp
movsb
jmp
daa
fstp
pop
inc
stos
push
addb
mov
inc
sbb
add
in
in
sbb
mov
or
nop
aad
push
loope
xlat
mov
mov
jecxz
imul
clc
mov
ljmp
outsb
cmovge
das
imul
outsb
leave
loope
add
inc
sbb
gs
xlat
xchg
outsb
insb
into
jae
xor
nop
mov
push
and
pop
insl
rcrb
push
or
xor
push
movsl
jmp
xchg
ror
xchg
sbbl
lods
movsb
aad
daa
fwait
dec
inc
lock
enter
test
arpl
fimuls
pushf
adc
jmp
fldt
cmp
push
dec
inc
inc
or
daa
ds
adc
insl
lahf
bswap
shrb
inc
xor
mov
pop
xor
adc
sbb
int3
sqrtps
daa
mov
mov
fwait
out
push
outsb
sub
insl
roll
cli
xchg
lea
xchg
bound
shrl
xchg
imull
hlt
into
push
jno
call
pop
aaa
mov
mov
xlat
adc
dec
sub
mov
ljmp
sub
and
push
add
lds
ror
adc
shll
dec
shlb
aas
add
sub
adc
sub
insl
or
cmp
sti
aas
sub
xchg
call
mov
cmp
imul
mov
push
out
pop
out
jnp
aad
jecxz
lods
cltd
add
jb
mov
mov
sbb
in
add
dec
inc
mov
jae
mov
ja
cltd
sbb
dec
push
pop
xchg
xor
mov
sti
popf
sub
fnsave
movsl
insl
lahf
xlat
leave
and
rcrb
loopne
jo
inc
sbb
insl
inc
insb
out
rcll
mov
stc
movsb
mov
mov
cmp
mov
repz
iret
mov
jle
mov
loop
mov
adc
dec
push
pusha
xrelease
lcall
mov
mov
pop
dec
adc
lahf
or
pushf
adc
mov
lahf
push
jbe
mov
sbb
xor
rorl
push
mov
popa
push
fisttpll
dec
adc
mov
cmc
jmp
jg
je
mov
rorl
push
jg
adcb
push
jne
es
mov
stc
int
mov
inc
mull
imul
push
aas
sahf
out
mov
cs
cltd
mov
xchg
pop
lock
jl
je
sbb
clc
int3
popa
jo
popa
jge
idivl
out
fiaddl
xchg
fnstsw
jno
dec
mov
cmpsb
dec
pop
ret
jp
loopne
and
popf
mov
push
inc
and
lods
mov
aad
shrl
mov
sub
aas
mov
addr16
jg
arpl
imul
inc
js
jo
hlt
xor
sbb
sub
push
jns
fadds
fs
inc
jp
xor
es
test
inc
test
stos
jmp
test
or
cli
mov
out
jb
in
idivl
push
ja
xor
push
shrw
test
lods
cltd
aas
dec
icebp
xor
hlt
adc
stos
and
xor
pop
inc
out
dec
imul
fadd
sbb
sti
sbb
lds
popa
aaa
cmpsb
mov
xor
jg
icebp
test
mov
pop
or
add
push
and
push
cli
mov
scas
mov
dec
pop
sbb
enter
es
mov
pop
jmp
or
call
push
mov
arpl
adc
inc
adc
xor
mov
add
in
mov
or
or
js
and
iret
into
xchg
push
xor
shr
or
insb
loope
xchg
mov
cmp
cmp
lahf
xlat
mov
pop
repnz
push
ja
mov
jge
nop
pusha
pop
push
push
or
pop
inc
dec
sub
in
ljmp
loop
sub
fadd
cmp
cmp
inc
mov
test
mov
cmp
int
into
pop
adc
inc
and
sbbb
fdivrp
mov
sahf
scas
xchg
cmp
xor
jne
cmp
xor
mov
mov
shl
pop
cmp
push
cmp
add
or
cmc
lods
aaa
rol
sub
das
mov
cwtl
jne
shll
addr16
sbb
int3
sbb
dec
gs
outsb
cs
mov
movsl
mov
addb
movsb
loopne
mov
jae
inc
mov
mov
jae
movsb
pusha
pop
insl
stos
push
clc
cld
sbb
mov
sarb
das
outsb
jns
loope
inc
stc
and
popa
aad
int
subl
adc
hlt
fwait
insb
mov
out
sbb
inc
sahf
mov
inc
pop
mov
aaa
mov
gs
mov
addr16
pushf
and
sub
scas
test
xchg
xchg
cmp
inc
add
pusha
pusha
cmp
into
into
test
add
jmp
ja
push
dec
mov
lock
cmp
dec
ljmp
in
xor
imul
outsl
mov
xlat
push
ss
sbb
mov
jecxz
fsts
mov
jns
cli
mov
inc
in
stc
fdivrs
xlat
pop
es
out
fisttpl
jns
jo
inc
rcrl
pop
stos
xchg
jbe
adc
popf
sbb
cmp
dec
pop
lds
out
repnz
rcrl
push
lods
cmc
mov
mov
icebp
mov
in
inc
mov
xor
rorl
or
sbb
xor
adc
iret
pushl
data16
sub
cmp
je
push
mov
lock
adc
mov
call
hlt
mov
mov
test
cmpsl
jno
dec
sbb
push
repz
mov
xorl
stos
jg
and
es
and
mov
inc
dec
pop
pop
lcall
aaa
cwtl
lods
and
ljmp
xchg
in
mov
add
mov
mov
mov
cmp
popf
std
cmp
adc
pusha
or
shll
or
cmp
add
and
push
mov
pop
add
inc
daa
shll
fcmovne
push
push
dec
lods
hlt
rclb
daa
jne
mov
jo
add
and
outsb
popf
cmp
out
xchg
xchg
mov
cmp
lcall
fs
pop
scas
pop
push
lods
jle
clc
sbb
cltd
adc
aad
push
mov
jno
popf
xchg
adcb
out
cmp
mov
xlat
xor
mov
mov
lcall
inc
popa
call
mov
lods
cli
pop
and
xchg
addr16
dec
mov
sbb
sbb
pop
lds
mov
or
pop
or
lods
push
sbb
fstpt
add
ss
xor
aaa
xor
scas
lahf
pop
call
into
mov
mov
or
sti
dec
inc
outsl
test
pop
mov
mov
pop
cmp
cwtl
iret
cmpsl
iret
fdivs
mov
fildl
inc
aas
push
fbld
xorl
mov
movhps
out
adc
imull
mov
movsb
cli
sbb
icebp
into
popl
or
mov
lods
jp
fnstsw
or
rorl
sbb
sbb
sbb
lods
stos
push
outsb
fldcw
add
push
in
mov
movsb
xor
mov
arpl
jbe
fcmovnb
inc
nop
pop
sub
pop
popf
and
lcall
add
push
xchg
out
dec
pop
in
stos
mov
add
push
push
push
dec
inc
pop
daa
rclb
mov
repnz
sbb
jp
or
icebp
mov
mov
loop
movsl
mov
jbe
std
mov
shrb
or
loop
cwtl
adc
rorl
std
orl
mov
jne
imull
xchg
fs
rcl
jmp
sbb
push
nop
push
push
gs
int
pop
or
mov
test
ja
xchg
out
lods
ds
lods
icebp
xchg
call
leave
sub
push
rorl
rcrb
mov
js
xchg
push
and
mov
mov
push
sub
sub
xlat
sub
fldl
push
mov
shlb
jno
gs
ja
mov
xor
movsb
out
dec
pop
aas
js
dec
dec
inc
jns
xchg
pop
fstpt
sti
test
cmp
pusha
idiv
dec
fisubs
cmpsl
sub
iret
jmp
jge
out
aam
icebp
shl
js
inc
jl
cmp
jmp
out
cs
ja
push
push
test
fnstsw
adc
adc
xor
mov
dec
lds
incl
add
sbb
jle
sarl
adc
and
push
inc
push
stos
adc
ret
aas
dec
js
lret
test
stc
pushf
sbb
xor
push
outsl
push
clc
xchg
addl
cmp
bound
sub
lea
scas
pop
inc
stc
inc
mov
es
dec
in
push
aaa
xor
neg
pushf
repz
int
pop
sub
insb
xchg
cli
shrl
sbb
push
pop
xor
pop
sbb
pop
jecxz
cltd
loopne
andb
cwtl
cli
jo
xor
pop
lock
jge
xor
pop
dec
or
fimuls
inc
mov
mov
in
icebp
icebp
repz
iret
push
ss
mov
sbb
inc
adc
and
out
push
add
arpl
pop
add
inc
ficomps
addr16
or
fstl
jno
xchg
fildl
or
mov
inc
adc
mov
sub
ficomps
test
lods
push
pop
cmp
pop
aaa
mov
push
les
push
cmpsb
sbb
testl
dec
xchg
movsl
mov
icebp
testb
icebp
or
addr16
pandn
and
mov
push
jbe
push
cli
into
clc
aaa
add
sub
push
imul
les
in
xchg
push
test
outsb
movsl
mov
test
fnstenv
xlat
push
mov
gs
jo
scas
hlt
in
sub
pop
fidivrs
repnz
andb
orl
addr16
out
and
and
shll
pusha
pop
xchg
push
mov
add
push
push
xor
das
mov
mov
sub
dec
mov
cmpsl
loopne
test
popf
dec
cmp
cld
xor
jecxz
add
push
inc
inc
ss
repnz
sub
and
insl
add
ljmp
imul
and
push
xor
push
mov
das
push
ljmp
aad
call
stos
scas
mov
push
aas
xchg
sbb
jp
fnstcw
xchg
ja
inc
into
lret
scas
int
xchg
fisubl
stc
jmp
xor
sbb
les
push
icebp
or
inc
sbb
jnp
outsl
out
push
stc
push
aas
mov
mov
dec
xchg
mov
fsubp
push
add
pop
cli
or
adc
xchg
test
fistl
dec
ljmp
mov
pop
mov
outsl
sub
mov
stos
or
out
ja
mov
mov
jmp
pop
ret
push
jge
xchg
cmp
adc
xchg
xchg
xor
fldcw
mov
push
mov
stc
les
outsb
cmp
ret
dec
fwait
cmp
enter
or
cmpsl
cmp
adc
pop
mov
jmp
sub
dec
mov
cs
packuswb
int3
lea
lea
and
inc
cmp
hlt
push
cwtl
nop
pop
repnz
push
cmc
imul
adc
test
mov
shr
mov
mov
lcall
fnstsw
fldl
pushf
insb
xor
icebp
mov
fsts
pop
jmp
add
mov
dec
or
out
in
push
sub
add
add
insl
sub
jecxz
xchg
sti
jmp
jge
inc
mov
int
sub
xchg
mov
or
dec
rcll
outsb
adc
cmp
popf
or
add
sbb
repnz
int3
xchg
shlb
je
jne
sub
jno
rcrl
into
lcall
fchs
pop
and
mov
jbe
mov
cmpsl
cmp
shll
leave
adc
dec
mov
pop
cs
jbe
test
shld
sbbl
je
movzwl
jae
lock
jge
inc
push
mov
popa
jns
dec
pop
pop
in
pop
pop
pop
mov
adc
outsb
and
mov
xor
jmp
shrl
cli
inc
aad
fstpt
call
dec
fimuls
push
fwait
and
lods
insl
mov
daa
out
push
push
test
pop
cmp
jge
mov
sbb
dec
movb
mov
nop
jmp
inc
sbb
mov
leave
pop
jns
and
or
xchg
insl
ss
cmp
mov
and
mov
xor
sub
hlt
push
daa
lods
xchg
popf
push
pop
ljmp
loop
pop
sahf
jecxz
jb
mov
xchg
inc
cmp
adc
and
leave
lret
loope
cs
stos
hlt
push
adc
mov
sub
adc
mov
test
in
jecxz
stos
jge
test
jp
or
jmp
clc
aaa
lds
jne
sub
fcmovnb
out
sbb
mov
pop
xchg
jnp
fnstsw
inc
adc
call
in
sub
test
mov
out
call
das
and
or
mov
add
jns
movsb
je
insb
icebp
sub
xchg
pop
cli
sub
lret
jne
sbbl
cmp
mov
idivl
xor
jle
pop
sbb
out
aaa
ja
pushf
ds
mov
cmpsl
sub
bound
jg
add
adc
sub
aas
lods
rorl
and
xchg
lahf
in
sbb
or
adc
loopne
push
add
movsl
scas
js
and
cli
insb
add
sti
sbb
mov
or
orl
adc
ret
cld
push
push
testb
and
enter
in
xchg
inc
inc
fcoms
orb
int3
push
and
cmp
lret
xchg
popa
out
inc
movsb
dec
push
jl
clc
xor
imul
jmp
sub
mov
test
mov
sahf
cmp
and
sub
fimuls
mov
adc
or
cmp
insl
jno
rolb
jae
divl
lahf
mov
inc
lret
loope
test
sub
imul
sbb
xchg
adc
sub
xor
je
ljmp
data16
jle
cli
sahf
xchg
dec
xchg
sub
jbe
pop
pop
jle
mov
add
mov
popa
js
out
mov
mov
or
push
aaa
imulb
enter
test
cld
push
lods
jbe
inc
push
into
mov
iret
inc
pop
notb
popf
jmp
mov
fcomps
mov
sbb
inc
push
ret
adc
inc
aaa
pushf
push
popf
push
sbb
popf
inc
imul
leave
sub
adc
hlt
cmpsl
addr16
and
xorl
movsl
mov
sarl
inc
mov
sti
xor
pop
stc
pop
and
test
loope
mov
mov
add
insb
push
ficoml
incb
pop
push
dec
cmpsl
sub
sbbb
out
push
cltd
out
xor
lcall
bound
std
and
or
cmp
xchg
mov
cwtl
clc
cmp
mov
mov
push
cltd
test
push
add
xchg
sbb
or
in
push
addr16
push
je
mov
jecxz
cmc
lods
xor
inc
mov
in
adc
jle
in
popf
pop
inc
mov
or
jno
adc
cmp
leave
mov
push
xchg
in
out
scas
jne
push
jbe
and
mov
test
jns
push
pop
sbb
xor
push
addb
sub
inc
or
push
lret
cmp
sbb
jne
cmp
pop
ss
lcall
jle
cli
push
mov
in
cmp
mov
adc
mov
loopne
loop
pop
xor
gs
cmp
shll
pop
mov
push
fisubl
lret
jl
int
dec
out
pop
push
scas
js
dec
adc
out
cmp
jbe
imul
push
push
mov
pop
lock
inc
or
jb
addr16
sbb
jle
rcr
stc
fimull
out
mov
outsl
shlb
inc
cmovs
fwait
push
push
clc
xor
outsl
adc
lahf
push
or
cltd
hlt
stc
mov
repnz
sub
or
mov
ds
cltd
shrb
xor
sub
leave
pop
or
nop
sti
adc
fistps
in
scas
addr16
mov
arpl
mov
fldcw
daa
cmp
sub
popf
pop
in
pop
xchg
or
enter
lods
mov
pop
aas
mov
mov
js
cmp
push
out
fnstcw
jp
loope,pt
rclb
lds
sub
sbb
sahf
mov
cmp
js
call
mov
xor
leave
or
adc
scas
in
inc
jle
out
xchg
fadds
push
push
push
lahf
cmpsb
sbb
push
jl
cli
inc
dec
popa
mov
and
test
push
xor
add
jecxz
adc
sarl
jno
xchg
outsl
push
adc
mov
cltd
add
gs
mov
ja
mov
add
enter
arpl
pop
cmp
ficomps
push
jge
sbb
negb
dec
mov
push
mov
movsb
pop
push
popf
mov
push
ljmp
repz
mov
ds
js
xchg
loopne
movq
fisttps
xor
icebp
faddp
or
loop
or
xor
push
lret
cltd
fsubr
mov
or
push
mov
push
xor
push
mov
xchg
ds
and
pop
cmc
mov
addr16
pop
dec
sub
push
xor
cmpsb
sahf
mov
jge
cmp
rclb
ret
cmp
sub
or
cltd
lods
jns
mov
ds
cmp
inc
mov
fimull
adc
aad
inc
cmpsl
pop
inc
mov
aas
xchg
into
jne
stos
inc
out
fcmovnu
jg
dec
mov
xchg
clc
dec
cmpsl
into
fistl
lock
mov
into
ss
clc
shr
mov
mov
aaa
jno
pop
pusha
cltd
leave
mov
js
cmp
xor
adc
push
sub
jge
adc
cmpsl
sub
dec
ljmp
out
sub
roll
sub
push
fcoml
fdivrl
mov
add
mov
sbb
loopne
int3
aaa
shl
insl
out
sbbl
push
in
lods
ret
sbb
in
fnstsw
jno
stos
push
sahf
mov
dec
push
out
je
sub
stos
ja
or
mov
and
add
mov
and
push
nop
mull
push
dec
enter
scas
cltd
pushf
lods
int3
std
push
push
jns
sbb
hlt
add
sahf
fsub
sub
mov
jl
aaa
adc
or
inc
mov
inc
jb
gs
es
in
jmp
int3
dec
mov
push
andl
fistps
loopne
inc
push
inc
pop
cld
push
add
fwait
and
mov
xchg
xor
mov
adc
sub
jge
sarl
cmpsl
aad
sbb
movsl
mov
xchg
ds
pextrw
and
jno
push
or
or
or
jl
cltd
fisttpll
adc
cmpsl
mov
push
mov
inc
mov
push
cmp
push
add
mov
xchg
lock
test
sub
andl
pop
jmp
push
inc
jg
pop
jo
lds
jne
lods
mov
les
in
mov
hlt
out
jle
xchg
push
arpl
mov
cmpsl
imul
leave
out
repnz
sahf
add
adc
outsb
std
mov
mov
cmpsl
ja
xlat
xchg
jecxz
push
sahf
daa
mov
push
sub
xchg
pop
divb
inc
mov
add
mov
push
pop
mov
loope
iret
mov
gs
mov
sbb
loope
mov
pusha
in
jne
add
loop
add
sti
scas
insb
fdivl
mov
stos
add
stc
mov
cmp
inc
pop
in
roll
xchg
cld
ss
dec
mov
xchg
daa
lret
mov
jmp
into
sub
out
lcall
xchg
dec
mov
outsl
ror
frstor
sub
mov
pop
jns
mov
adc
je
mov
jmp
pop
mov
and
mov
xor
cmpsl
cmpb
mov
call
mov
cmpsb
mov
int
out
outsb
dec
aad
decl
jne
jno
xor
pushf
cmpsl
clc
insb
iret
adc
pop
add
adc
inc
pop
loop
fsubs
mov
bnd
xchg
add
sahf
sarl
scas
out
xchg
add
jae
pop
dec
arpl
test
sbb
jp
iret
inc
mov
lock
ds
push
gs
adc
lret
sbb
cli
sbb
jne
dec
lret
cmp
pop
out
fmull
dec
jo
je
in
dec
fstps
dec
mov
dec
or
rol
sbbl
cmc
pop
and
lods
and
repnz
adc
jno
mov
movsb
int
ja
lea
cmp
lods
aam
xchg
dec
jmp
pop
test
pop
mov
imul
push
jge
jno
cmp
test
arpl
jecxz
ss
mov
dec
repnz
imul
push
xchg
roll
ljmp
add
mov
sub
mov
out
add
cmpb
jmp
lock
jo
shl
or
jno
das
cld
test
xor
loope
pop
mov
test
cld
mov
scas
sbb
ljmp
sub
mov
adc
rol
mov
push
lock
dec
mov
push
inc
or
addb
push
sbb
lods
aaa
scas
adc
mov
cwtl
call
cmc
ret
mov
lret
cmp
lods
adc
movsb
xchg
les
in
mov
xor
stos
sub
jg
inc
inc
adc
cli
adc
add
or
rorb
sti
les
xlat
dec
fsubrs
lock
js
lds
icebp
fwait
adc
sbb
jb
inc
jge
jae
mov
test
add
jmp
add
jmp
cmp
mov
loop
push
sbb
jl
insl
or
inc
pop
dec
jmp
xor
mov
sbb
pop
lds
out
pop
addr16
scas
sarb
mov
decl
out
fldcw
insb
cmpsl
in
push
inc
pop
inc
jmp
mov
arpl
adc
pop
adc
outsl
icebp
adc
andl
or
dec
adc
dec
sbb
sbb
dec
push
add
or
fisttpll
dec
fs
insl
bound
jbe
pop
dec
xchg
js
dec
jmp
out
pop
clc
fisttpll
sarl
hlt
das
rolb
flds
adc
mov
imul
xchg
rolb
xor
mov
xchg
jl
out
pop
sub
jo
jmp
shrl
inc
cmpsb
push
inc
push
xor
daa
lods
jnp
mov
sub
imul
and
add
dec
jge
repnz
lret
hlt
add
mov
dec
jb
mov
ret
inc
mov
add
cs
sbb
mov
mov
push
cli
mov
add
sbb
mov
fstps
cwtl
ljmp
fmuls
push
call
fs
addl
out
mov
adc
add
xchg
loope
gs
adc
out
test
inc
jno
int3
mov
push
add
mov
mov
pop
sub
pop
add
int3
add
in
pop
xchg
mov
lahf
inc
dec
inc
jno
or
lods
dec
push
shlb
cli
jle
push
cwtl
xchg
mov
out
mov
repnz
cmp
addr16
xchg
call
enter
mov
flds
insb
jecxz
rcrl
adcl
push
mov
aad
out
or
cmp
pop
mov
jnp
call
xchg
dec
outsb
or
inc
lret
xlat
push
xchg
pusha
stc
push
push
push
subl
fstpl
sbb
jp
adc
in
push
mov
flds
outsl
push
mov
mov
in
inc
outsl
xchg
fistl
push
orb
dec
out
jbe
cmp
mov
cmc
int3
xor
push
and
sub
mov
mov
add
bound
andl
push
inc
inc
repz
mov
add
push
imul
hlt
push
push
fsubs
sti
jne
lcall
xchg
ret
mov
jo
repz
or
les
xor
cmp
and
xlat
ficoms
scas
lahf
and
jge
inc
movsb
pop
or
das
jo
push
and
and
mov
jl
push
push
pop
cwtl
mov
xor
dec
push
mov
jecxz
push
dec
xor
push
jg
sub
fistpl
fwait
dec
push
sub
add
fnstenv
cli
xor
xchg
hlt
inc
stos
push
inc
sub
inc
add
mov
pop
pop
fdivrl
pop
sbb
outsl
mov
fwait
cmpsl
inc
outsl
pushf
and
jge
insb
ficoms
mov
pop
in
mov
ja
std
pop
dec
scas
sub
or
mov
or
test
notl
sub
out
shlb
xchg
mov
mov
or
sbb
mov
sub
jae
fmull
mov
mov
packuswb
dec
shlb
jmp
mov
xor
pop
enter
dec
and
cmp
push
outsb
int
sub
xor
pop
out
adc
cmp
mov
icebp
mov
dec
cmp
and
xchg
scas
dec
das
ljmp
mov
inc
aaa
mov
mov
sbb
dec
fdivs
cmp
repz
fld
call
dec
add
inc
sbb
jbe
inc
arpl
push
fxch
xchg
add
pop
int
addr16
and
sahf
les
mov
in
pusha
jnp
pop
es
and
inc
test
mov
aas
cmc
mov
jns
sahf
fwait
push
cli
sub
fidivs
jl
lret
ret
gs
mov
adc
pop
jp
mov
jp
popf
pop
dec
or
mov
movsl
adc
cmp
fstps
movsb
scas
shl
inc
arpl
shll
addl
or
cmp
adc
aam
mov
mov
fisubrl
loope
ret
and
cmp
fxch
push
fisubs
cmpsl
jne
pop
or
outsl
outsl
xchg
adc
jl
or
and
xchg
popa
push
lcall
out
js
fdivrl
xchg
add
xchg
fwait
popa
movsb
stos
xor
push
adc
sub
jns
cmp
hlt
push
loope
xor
jno
frstpm(287
sbb
pop
insb
out
movsb
and
push
adc
ret
rcrl
pushf
cmpsb
test
sbb
scas
outsb
sub
cmp
aaa
cmpb
adc
adc
sub
enter
clc
dec
cmpsb
repnz
das
ficomps
emms
mov
dec
xchg
push
imul
push
push
in
or
jns
mull
xor
or
mov
test
adc
or
push
outsb
push
stc
pop
xchg
mov
fnstcw
inc
mov
mov
mov
xor
in
daa
imul
jg
add
loop
daa
stos
lcall
xchg
sti
sbb
test
cwtl
mov
inc
movsl
out
dec
loopne
enter
cmp
sub
les
insl
pusha
fisttps
jo
mov
arpl
push
into
dec
ja
out
lods
test
addr16
jo
dec
rclb
mov
pop
sub
mov
push
stos
ret
test
push
popa
sti
mov
shrl
pop
jg
jne
negl
inc
adc
mov
nop
xor
mov
in
pop
adcl
cmp
cltd
hlt
out
test
sub
xchg
fwait
dec
or
cmpsb
or
mov
add
or
hlt
bound
mov
and
repnz
sub
mov
sbb
push
or
sub
bound
pusha
cmc
jbe
out
xor
test
idiv
mov
in
ret
ffreep
rcl
xchg
movzwl
fimuls
dec
xor
outsl
movsl
xor
mov
test
and
mov
inc
or
leave
scas
roll
dec
push
loope
push
ret
out
andl
call
xor
pushf
cwtl
jmp
lret
dec
push
rdpmc
outsl
ret
jle
lahf
lahf
test
pop
xor
push
shll
and
aas
es
mov
or
jne
mov
sbb
mov
test
mov
rcr
scas
pop
xor
push
jge
jo
jmp
mov
test
pop
fidivrl
shl
in
dec
daa
push
cmp
int
jb
adc
lds
sbb
mov
sub
gs
adc
test
pop
sub
icebp
xchg
test
jp
jg
jne
icebp
jno
xor
fisttpll
inc
push
and
push
jmp
push
add
orb
insl
or
pop
lods
sub
loop
sub
fcmove
or
pop
or
ss
test
sbb
out
pop
xchg
push
bound
push
rorb
gs
mov
jp
jecxz
add
insl
fists
mov
lahf
push
xor
pop
inc
lret
xchg
push
leave
loop
or
pop
cli
cmc
add
testl
movsb
stos
sbb
mov
mov
inc
enter
pop
jge
inc
add
imul
mov
imul
imul
pop
fists
add
xlat
and
sbb
xchg
in
mov
imul
test
push
outsb
jmp
cld
addl
out
jne
sti
sub
iret
adc
fidivl
ss
pop
pop
clc
cli
rcl
and
rcl
add
cmpsl
jb
lea
mov
pop
lock
cltd
lods
dec
sub
jae
call
mov
sub
imul
dec
stos
loope
ja
sub
es
loope
sub
outsl
dec
xor
jnp
pop
hlt
inc
mov
aas
loop
imul
addl
scas
pop
loop
lea
fwait
repnz
fldl
subb
scas
mov
jl
sub
mov
mov
outsl
aam
pop
xchg
jmp
or
movsl
inc
sub
mov
cmp
mov
imul
repnz
inc
sub
push
testl
pop
cmpb
xor
aam
stos
aam
pop
shr
mov
lea
loop
xor
add
cmp
dec
in
bound
add
xorb
jnp
stos
adc
shlb
pop
jecxz
aaa
adc
js
mov
lahf
inc
and
push
xchg
lcall
jno
or
sbb
int3
pop
je
jb
jno
cltd
sbb
insb
sbb
outsb
add
aad
and
mov
pop
in
jge
mov
inc
loope
lea
sbb
fcomps
call
rcrl
sub
add
jbe
divl
test
adc
arpl
dec
push
out
sub
and
ds
pop
movsb
fdivrp
enter
daa
or
inc
push
mov
xor
sahf
xchg
dec
addl
hlt
cmp
adc
in
inc
jae
cwtl
add
sub
aas
cmp
pop
fs
add
cwtl
pusha
inc
gs
push
xchg
fnstenv
add
sub
lcall
mov
imul
in
lods
pop
into
pop
xchg
dec
cmp
cmp
fwait
int
ret
push
pushf
dec
fdivrs
movsl
arpl
aam
aam
adc
pop
sbb
cltd
xchg
das
scas
mov
or
ror
cld
loopne
repnz
insb
pop
dec
je
stc
sub
adc
movsl
out
not
sbb
jmp
jne
hlt
fs
wrssd
push
jb
pusha
sub
xor
out
ror
xor
sub
jbe
mov
clc
xor
out
adc
mov
dec
in
pop
jmp
pop
cmp
or
mov
jl
es
jge
or
inc
mov
sbb
icebp
jo
sbb
adc
out
int
cmpb
xchg
aas
inc
jp
mov
ljmp
xor
cli
fldt
and
sbb
xor
insl
lahf
movsb
push
fidivrl
jnp
mov
mov
mov
ljmp
iret
push
shlb
cmp
loope
rcrb
icebp
cmp
push
hlt
xor
push
cmp
cmp
dec
xchg
jnp
adc
add
lahf
xchg
add
pop
stos
fisubrl
cld
and
jp
je
lds
or
fisubs
sbb
stos
add
add
sbb
in
sbb
sub
les
xchg
cmp
test
arpl
mov
dec
jb
cmc
in
push
mov
sbb
jecxz
loop
stos
std
out
dec
cmp
popa
inc
mov
enter
mov
fs
cmpsb
imul
in
loope
pop
dec
cmp
test
loope
cmp
inc
mov
and
lods
aam
xor
sub
hlt
out
ret
or
hlt
lea
call
cmpsb
xor
dec
add
mov
push
and
adcb
adc
mov
ds
jae
fidivl
push
insb
xlat
mov
leave
mov
and
mov
cmpsb
pushl
push
fdivs
fdivrl
sub
adc
idiv
push
adc
and
clc
iret
gs
popa
cmc
xor
rorb
xor
pop
mov
cmp
lds
dec
fs
or
xor
int3
fisubs
inc
mov
xchg
out
popf
xchg
clc
test
leave
pusha
je
in
fsubr
sbb
popa
pusha
mov
je
jle
mov
jns
jns
dec
js
ljmp
aad
jb
pop
mov
cmp
sub
leave
push
insb
and
add
xor
add
inc
out
mov
in
mov
clc
or
movsl
je
sub
aas
mov
mov
sti
xor
mov
sbb
shll
sbb
jb
fwait
les
add
xchg
incb
and
add
jae
fisubrs
scas
fcompp
pop
inc
or
aas
sub
aam
stos
ror
jb
push
into
lret
cltd
daa
mov
dec
shrb
into
insb
popa
inc
pusha
jp
pop
jp
test
xor
pusha
mov
mov
ds
test
jbe
iret
repz
mov
xor
fdivs
add
push
jl
push
into
ljmp
pop
jge
pop
stos
xchg
test
adc
dec
movsl
mov
sub
cmp
ss
xchg
lods
sarb
jnp
call
rcll
xor
adc
xchg
push
pusha
xor
in
sahf
int
insl
stos
push
jmp
push
xchg
dec
jno
and
xchg
mov
testb
jp
push
adc
dec
sub
adc
mov
movsl
xor
and
sti
mov
gs
fildl
out
call
iret
int3
mov
and
push
push
inc
imul
fwait
imul
popf
mov
nop
leave
sbb
cmc
dec
xchg
ss
sub
and
adc
mov
inc
call
push
sbb
es
jno
test
arpl
jbe
or
leave
in
mov
cmpsb
push
sub
lcall
mov
aad
and
js
adc
or
repz
jb
cmc
jecxz
sbb
cli
cmp
xchg
jns
jp
pop
stos
lcallw
and
andl
mov
dec
sbb
dec
add
and
cmc
in
inc
fnsave
mov
jo
jno
sbb
and
cs
and
xchg
add
leave
stos
mov
cmpsl
fimuls
bound
outsb
mov
mov
prefetch
sub
fadds
mov
xchg
loop
rcrl
add
xchg
mov
rol
stc
ret
inc
das
xchg
fwait
xchg
cmp
pop
pop
lahf
setg
lret
sub
pusha
in
mov
mov
xor
xor
lods
fldcw
sub
lods
inc
jmp
scas
pop
aad
adc
and
arpl
push
lods
test
lahf
add
pop
int3
das
mov
sub
dec
loop
lahf
xor
leave
loopne
mov
dec
es
dec
imul
xor
xchg
jp
fdivrs
cmpsb
sarb
clc
mov
or
rcll
mov
pop
xor
jo
pop
iret
dec
sti
and
and
and
jmp
push
xchg
push
dec
into
das
je
push
adc
inc
incl
jae
push
pushf
jo
je
mov
cmpsb
dec
loope
addb
in
push
xlat
and
imull
sub
dec
jns
adcl
icebp
or
jbe
in
mov
cmpsb
pop
aaa
mov
outsl
add
jge
insb
mov
pop
into
mov
movsb
dec
add
cltd
pop
push
xor
cmp
repnz
adc
fsubrs
rolb
inc
addr16
je
jmp
push
fisttps
adc
int3
sub
test
fdiv
adc
es
cmp
or
repnz
push
sbb
xchg
rcll
push
jbe
std
cli
jl
leave
adc
int3
xchg
and
cmp
add
jne
sub
xchg
push
sub
push
or
gs
add
imul
push
inc
dec
testb
jne
loopne
addb
sub
sahf
adcb
lods
mov
fcmovb
dec
or
popf
int
mov
adc
mov
add
call
das
jg
shl
loopne
or
xorl
jecxz
push
pushf
sbb
jmp
data16
push
mov
cmp
jecxz
rol
lret
scas
adc
mov
mov
sub
aam
lret
clc
fisubs
daa
xchg
cltd
data16
xchg
inc
cmp
jg
ds
jge
bound
push
test
loop
cmpsb
mov
iret
mov
es
inc
gs
inc
sub
lret
fcoml
outsb
lahf
cmp
loopne
and
idivb
fidivrs
jbe
add
aas
call
icebp
adc
mov
repnz
fwait
hlt
push
das
add
sbb
jnp
jecxz
push
xchg
push
jge
inc
ret
insb
jp
es
or
xchg
in
inc
lock
mov
pop
outsb
hlt
fistpl
mov
mov
xchg
adc
sbb
inc
or
divl
adc
fwait
aas
aad
out
jnp
xchg
xchg
adc
lea
sub
mov
cmp
xchg
and
fwait
sbb
dec
rolb
mov
push
fistl
fistpll
xchg
gs
push
mov
cmc
pushf
mov
mov
jb
scas
clc
push
add
lea
mov
xchg
push
mov
pushf
sti
dec
or
jle
xlat
push
cmpsb
cltd
stc
mov
jnp
and
push
popf
mov
js
ss
xor
bound
jmp
jge
xchg
xlat
mov
cs
jp
shrb
mov
pop
jge
shrb
dec
pop
in
je
pop
and
push
call
clc
sbb
sti
leave
push
add
movsb
push
xchg
xchg
inc
ljmp
cld
mov
andb
xchg
push
in
movsb
dec
sbb
nop
loopne
sbb
daa
pop
mov
cli
mov
inc
jmp
sub
push
outsb
pop
push
loope
push
sub
loop
inc
mov
call
xchg
mov
mov
cmp
push
cmp
lret
and
ret
scas
dec
add
data16
les
adc
mov
push
jnp
add
jge
int3
xor
ret
insb
cmp
das
sbb
mov
xchg
lret
mov
sub
inc
movsb
jecxz
cmc
es
dec
xchg
and
mov
pop
mov
xchg
enter
outsl
cwtl
jbe
or
pop
cltd
jb
sub
or
je
lea
into
in
pop
adc
orl
xchg
xor
sarb
sbb
mov
or
lret
test
mov
or
and
and
adc
pop
cmp
stos
sbb
out
push
int3
scas
icebp
cs
f2xm1
fs
cmp
out
dec
pop
pop
inc
push
mov
mov
add
xor
aas
mov
iret
fmul
fs
fcmove
dec
add
cmp
fstps
aaa
stc
sarl
lahf
and
jge
ffree
jmp
je
pop
test
ss
ljmp
mov
aad
mov
push
push
pop
or
mov
cmpb
jns
leave
insb
insb
or
sub
and
or
or
aam
lds
sti
sub
sub
jp
jae
adc
aam
shlb
lods
pop
repz
std
inc
jno
in
push
scas
mov
cld
jae
push
add
pop
mov
call
push
insb
out
in
push
andl
nop
imul
pop
orb
aaa
or
outsb
inc
stos
insb
out
call
call
mov
dec
or
mov
add
pop
dec
aas
loopew
sbb
inc
and
fsubrs
int3
lcall
in
and
or
mov
sub
push
imul
clc
sub
in
add
and
lret
push
xchg
gs
call
aaa
and
loope
xchg
inc
xchg
xor
leave
cmp
mov
and
push
mov
cmpb
cmp
stos
jbe
push
cmp
cwtl
movsb
mov
in
test
ds
fwait
stos
inc
jmp
and
lods
roll
movsl
nop
or
cmp
sub
scas
repnz
push
ja
enter
pop
clc
scas
jae
xchg
ss
and
fisubl
push
xchg
lret
push
jno
cwtl
popa
outsl
out
arpl
repz
incb
pop
roll
lcall
int
mov
aas
faddl
adc
dec
outsb
sbb
add
xor
xchg
mov
int
jle
sub
cmpsl
scas
xchg
shrl
adc
jmp
adc
enter
or
add
xor
adc
dec
iret
add
inc
pop
mov
enter
push
jge
mov
pop
mov
add
mov
test
imul
sub
inc
mov
dec
jno
push
dec
cs
pop
or
lods
dec
inc
jg
div
add
mov
testb
sub
sub
mov
bound
pushf
jae
mov
daa
jp
scas
and
sti
fbld
jo
nop
repnz
cmp
push
and
sub
filds
mov
lret
inc
test
sub
loope
cltd
lock
and
mov
jp
dec
test
es
pop
inc
popa
jno
pop
xchg
and
enter
add
ss
push
mov
cmp
loop
pop
jnp
out
jmp
jb
imul
stos
and
gs
sbb
adcb
mov
pop
add
daa
push
cwtl
outsb
aas
sbb
test
xor
xchg
xor
sub
js
sbb
cmpsb
lret
nop
push
mov
mov
cmpsl
cmp
mov
cmpsl
aaa
testb
sub
pushf
jo
fnstsw
cmpsb
push
mov
xchg
jg
jmp
push
inc
cltd
mov
out
pop
iret
pop
mov
mov
les
aas
sbbb
or
sub
jecxz
aas
jmp
scas
cmp
not
pop
sbb
adc
mov
xor
pop
sub
jo
sbbl
scas
fstl
orb
cli
and
insb
pop
xchg
cwtl
int3
xor
mov
xchg
dec
cmp
xchg
fstl
lods
and
jns
xchg
js
nop
cmp
pop
out
mov
movsb
adc
in
in
out
dec
shlb
ja
shrb
sti
shll
mov
push
jp
lods
jecxz
inc
ljmp
subb
cwtl
push
jmp
pop
xor
lods
shrl
push
movsb
mov
loop
jnp
and
jno
das
cltd
mov
mov
push
enter
popa
jg
test
shr
in
jg
rcll
add
fnstcw
push
pop
loop
xor
insb
push
push
inc
ret
adc
inc
insl
sbb
sub
pushf
cltd
adc
stos
add
subl
fisubrs
lcall
or
sahf
int3
jmp
jbe
mov
jp
ja
fisttps
adc
fsubr
mov
and
scas
sub
lret
loop
xor
out
lods
outsb
cmpxchg
mov
push
lcall
fadds
test
fnstsw
or
jbe
cli
pop
sti
shlb
lods
lret
lods
xor
inc
std
lods
mov
mov
fidivrl
adc
mov
dec
lcall
jo
lret
lods
insb
jmp
dec
mov
out
fs
mov
mov
loope
mov
adc
jae
cmpsb
xor
in
sti
push
pushf
adcb
fldenv
insl
dec
test
movaps
jno
xchg
add
cmpsb
test
pop
cmc
xchg
sbb
imul
jo
dec
dec
xchg
sbb
nop
lods
lret
jbe
or
movsl
lock
movsb
cmp
xchg
aad
jl
mov
mov
insb
mov
xlat
into
inc
add
std
ds
shlb
insl
cwtl
sub
ds
cld
pop
icebp
jmp
sarl
popf
aas
lock
sbb
insb
adc
lret
aaa
stc
and
cld
ljmp
leave
mov
cmp
mov
fs
dec
outsb
xor
rcrb
push
jecxz
arpl
rol
xchg
pop
repnz
lds
sahf
pop
dec
inc
lcall
mov
pop
jecxz
repz
cmpsl
cs
add
scas
mov
cmp
ret
adc
xchg
xor
ja
in
dec
les
out
cltd
iret
or
test
xchg
out
dec
int3
xor
dec
mov
or
sub
xor
sbb
push
and
clc
pop
imul
mov
cld
push
lock
mov
mov
mov
and
jg
push
dec
add
inc
dec
hlt
jmp
stc
mov
shrb
or
jbe
mov
ret
dec
and
idivl
adc
or
popf
imul
mov
pop
push
xchg
fstp
lahf
out
cmp
insl
subb
test
mov
fimull
rorb
inc
into
fimull
push
pop
fadds
sbb
xchg
ljmp
sub
sub
xchg
push
fs
push
je
rorb
adc
pop
cmp
fmull
sbb
cmpsl
fbld
jns
idiv
repnz
xchg
clc
cmp
dec
lods
push
xchg
xchg
and
lcall
sub
cwtl
nop
and
dec
mov
dec
lcall
push
sarl
or
call
int
imul
out
cwtl
out
xchg
and
hlt
jo
pop
std
mov
sahf
xor
out
jnp
call
sti
inc
loope
lods
loop
fchs
out
int3
je
jne
jp
xchg
sub
je
stos
adcb
shll
push
aaa
push
lea
rorb
or
lds
shll
sub
mov
sti
cmpsl
int
loope
adcb
shl
pop
in
push
xchg
dec
inc
dec
movsb
fadd
adc
cmpsl
out
jno
scas
dec
xchg
popf
test
ret
mov
in
and
inc
pop
stc
dec
jl
hlt
cmpsl
ret
and
push
jg
test
fwait
jge
arpl
xor
icebp
dec
mov
jne
mov
mov
push
mov
mov
pop
mov
pop
shl
icebp
icebp
mov
or
add
jb
filds
movsb
fidivrl
sbb
fisubl
dec
int
lahf
insl
bound
lds
les
gs
int3
mov
cld
sbb
cmp
jnp
ljmp
adc
inc
int3
cmp
dec
pop
push
mov
jbe
mov
loop
scas
jo
mov
test
mov
sbb
lahf
cmpl
xchg
push
push
idivb
jg
lahf
in
into
lods
adc
mov
rorl
out
push
jl
mov
mov
movsl
dec
jnp
in
push
jo
psrld
dec
in
std
bound
sbb
fldl
xor
xor
sub
lock
dec
and
jmp
rcl
cmpsl
dec
xor
dec
mov
inc
nop
shl
and
dec
jmp
imul
cmp
addr16
hlt
nop
popa
mov
repnz
xchg
in
loop
fmul
xchg
fiaddl
xchg
scas
fisubrl
pop
fcomps
pop
lods
push
jns
dec
je
cs
sti
push
jbe
ss
js
inc
sbb
cld
inc
mov
push
fstps
ror
adc
cwtl
cmp
cs
lds
jnp
push
sbb
jnp
jp
icebp
pop
popa
push
fs
lods
jb
call
mulb
mov
sbb
out
xchg
jno
insb
sub
int
jns
fidivrl
fmuls
ret
rolb
scas
and
imul
fsub
push
fidivrl
pop
leave
nop
das
je
rcrb
scas
loope
dec
cmp
mov
dec
imul
cmp
add
adc
sub
fs
xchg
lahf
outsb
pop
mov
mov
add
push
jmp
add
icebp
mov
nop
or
inc
ret
pop
repnz
push
mov
cltd
loop
cmpsl
aad
mov
push
nop
fwait
pop
mov
mov
pop
leave
arpl
cmp
adc
xchg
roll
outsb
adcl
adc
inc
add
cmpsl
add
adc
out
jl
fwait
not
or
lcall
adc
cmc
fcomip
into
dec
or
xorb
stos
sbb
ljmp
andl
subb
popf
mov
sbb
shlb
pop
scas
pop
out
mov
push
gs
pop
bswap
adc
add
jb
into
lcall
jns
pop
hlt
dec
mov
jbe
jmp
jno
loop
pop
pop
sbb
lea
mov
push
fdivs
mov
mov
inc
pop
push
inc
cmc
fisttpl
lds
and
jp
or
mov
fs
je
sbb
adc
adc
pop
sbb
pusha
incb
aam
fucomi
push
int
add
inc
mov
stos
mov
int3
out
xchg
cmc
out
push
xor
cltd
nop
add
addr16
inc
jbe
jg
dec
repz
fisttps
mov
xor
lods
hlt
imul
outsl
loop
xchg
mov
xchg
push
mov
dec
and
cmc
or
pop
or
mov
ret
rcl
sbb
arpl
cmp
call
int3
bound
xor
das
mov
js
shlb
cmp
adc
inc
jle
and
fisubrs
push
scas
fwait
ret
mov
data16
gs
pop
mov
xchg
xchg
jbe
stc
jmp
xchg
stos
movsb
lret
jo
sbb
mov
popa
inc
push
inc
fsubs
mov
in
push
pop
xchg
inc
call
or
add
push
jmp
das
dec
icebp
xor
and
sidtl
in
sti
mov
cwtl
push
inc
push
mov
insl
push
es
pusha
push
mov
lret
sbb
out
bswap
rcrl
orl
pop
sahf
xor
xor
jl
push
stos
rcr
addr16
pop
mov
arpl
xor
xchg
std
andb
pop
add
push
mov
sbb
dec
xor
jns
inc
pop
xchg
xchg
push
push
and
into
cltd
cmpsb
cmpsl
outsb
mov
jne
mov
orl
jae
lds
xchg
dec
aam
stc
mov
js
bound
in
pop
and
mov
add
mov
add
mov
cmovl
addb
insl
cmp
push
mov
ljmp
mov
dec
jno
ja
aad
lret
and
jae
xchg
mov
sbb
sub
adcb
sub
enter
shrl
adcl
sub
sub
xor
divl
ss
sarb
push
stos
xor
cmpsl
lahf
or
call
and
jnp
mov
int
movsl
cs
cwtl
rorl
or
add
xor
add
test
mov
popf
std
fldt
adc
ss
mov
mov
call
out
sbbl
in
fisttps
flds
arpl
cmpsl
pop
cmp
addl
dec
push
pop
ret
adc
cwtl
add
push
icebp
les
mov
lcall
xor
inc
int
js
sbb
iret
mov
lock
dec
out
or
inc
cmp
test
outsl
fwait
adc
ja
sahf
jmp
loop
sbbb
test
roll
ds
sbb
jns
fsubr
loop
jbe
and
push
jecxz
mov
push
jnp
and
int
cs
rcrb
mov
pusha
adc
mov
fs
adc
shrl
shl
cmc
negl
mov
clc
cltd
xchg
xor
test
sbb
cmpsl
xor
push
xchg
fmul
push
push
jnp
into
mov
orb
mov
mov
cs
lret
pusha
outsb
xor
out
shrl
fistl
aad
hlt
pop
pop
mov
in
loope
push
fwait
cmp
shlb
and
dec
push
fisttpll
mov
jne
add
popf
mov
iret
mov
push
sub
aas
or
and
push
movl
lret
pop
faddp
hlt
mov
add
jo
lret
call
xor
out
sbb
enter
mov
adc
pop
or
ja
ficoml
call
xchg
adc
rorb
and
in
adc
popf
mov
in
xor
sub
add
enter
mov
adc
cmp
xchg
icebp
jbe
cld
adc
fstpl
mov
imul
cmp
dec
test
add
cli
repz
test
andw
adc
outsb
pop
bound
adcb
test
fldt
mov
push
xchg
push
rcrl
or
cmc
inc
pop
sub
arpl
cs
mov
nop
push
lret
xor
cs
enter
xchg
arpl
mov
mov
std
scas
xlat
test
inc
jbe
rorl
and
lea
popf
sub
les
mov
xchg
sub
in
xchg
cmp
test
out
pusha
mov
cmp
sub
mov
dec
pop
adc
mov
dec
loope
cmpsl
dec
mov
pop
cmp
stos
jle
pop
popf
vpsadbw
stos
pop
add
cwtl
and
sahf
sub
cli
dec
cli
jae
popl
hlt
repnz
xor
sub
sar
pop
loopne
cmc
cmc
loopne
popa
push
add
out
mov
stos
into
repz
pop
push
pushf
mov
sbb
sbb
ret
fisttps
jae
sbb
mov
stos
sub
popf
pushf
and
test
add
dec
rcrb
dec
icebp
cmp
movsb
stos
fsubr
int
xchg
cmp
inc
adc
lahf
cmc
sub
push
mov
push
pop
popa
xchg
test
fwait
dec
int
sbb
fidivs
popf
loope
xor
inc
and
lcall
dec
ss
out
push
push
cs
imul
stos
shlb
xlat
pop
push
in
fldl
stos
stc
push
pop
adcb
push
inc
add
sbb
pop
sti
push
sbb
movsb
fsubrp
in
xchg
ss
pop
pushf
lahf
loopne
jmp
cltd
pop
lret
or
mov
xor
push
shll
ljmp
mov
insl
jo
sub
add
in
jp
xchg
mov
mov
movb
xor
cmp
add
in
sbb
or
jbe
sarl
xor
xlat
stc
jge
sbb
mov
insl
shlb
push
pop
insl
adc
sarb
cmp
and
cli
push
pushf
or
cmp
outsl
test
fidivrl
das
scas
jp
push
cmp
fstps
jns
cmc
jbe
dec
inc
sub
orl
pop
inc
adc
imul
les
sbb
jle
addr16
insl
rcr
out
or
cmpsl
cmpsb
and
cli
stc
pop
lahf
add
aam
in
xor
or
loopne
fcoml
notb
mov
mov
icebp
ja
stos
mov
lock
mov
pop
fs
sub
sub
xchg
cwtl
pop
lods
add
pop
testl
ss
jle
and
cwtl
loope
movsl
push
fistl
in
jnp
fs
stos
and
xchg
lock
xor
sub
outsl
divl
dec
or
pop
mov
adc
out
out
xchg
sbb
sahf
leave
push
iret
add
xchg
push
outsb
rol
cltd
ss
push
jle
push
rcrb
mov
inc
and
sbb
pushf
arpl
stos
sbb
cmpsl
inc
lock
adc
pop
xlat
les
or
and
imul
xchg
dec
out
call
mov
jo
jl
sahf
insb
inc
cmp
stc
push
out
adc
cld
pusha
push
scas
xchg
mov
xor
int3
or
in
cs
dec
aam
testb
pop
call
out
mov
sbbl
es
or
mov
xlat
testl
adc
js
rol
inc
cld
shrl
gs
popf
arpl
aas
lods
scas
imull
push
outsb
add
mov
in
ficompl
dec
clc
sti
jns
mov
adc
insb
push
sub
mov
mov
stc
cmp
add
stc
fbld
test
hlt
fadds
xchg
push
mov
cs
dec
outsl
jmp
mov
sub
test
repnz
jmp
call
popa
jbe
inc
xchg
mov
jmp
push
les
jl
subb
jnp
sti
and
xor
pushf
data16
xchg
mov
mov
dec
loop
sahf
push
stos
pusha
mov
pop
xchg
sbb
inc
repz
sub
sbb
sub
push
add
mov
mov
xor
push
push
cmpsb
pop
int
clc
dec
push
out
nop
into
jb
int
cmp
cmp
std
stos
pop
popf
shrl
je
sub
sbb
and
jo
call
scas
push
lods
push
mov
ljmp
mov
lods
jmp
mov
pop
ja
jecxz
mov
mov
leave
das
js
aam
push
outsb
outsb
pop
lcall
inc
adc
or
les
test
dec
rcrl
sarl
call
ljmp
lea
stos
add
fbld
sub
lods
push
mul
mov
xchg
dec
scas
xchg
sbbb
pop
lret
aaa
pop
insl
cmpb
fwait
jnp
push
add
iret
mov
mov
testb
out
out
insb
and
pushf
inc
shl
inc
dec
subl
pop
loope
imul
pop
push
dec
icebp
negb
data16
mov
ds
rol
dec
push
xor
xlat
pop
in
xor
push
mov
mov
pop
pop
add
mov
jp,pn
outsb
or
outsb
cmc
dec
inc
or
imul
rcrb
xchg
mov
xorl
and
sbb
and
dec
std
leave
call
cmpsb
mov
pop
les
mov
xorb
cmpsl
out
leave
lret
lods
out
je
dec
cmp
push
rcr
pop
lret
add
lods
jo
aaa
jbe
call
lret
push
es
jp
add
sub
sub
push
or
lret
movsb
mov
xor
inc
mov
cmc
sbb
pop
icebp
mov
jecxz
popf
rcr
or
fs
mov
stos
inc
push
and
push
aam
ds
je
lods
mov
pusha
xor
and
int
js
sbb
fisubl
mov
jl
pop
mov
outsb
jecxz
add
dec
xchg
shll
nop
jne
adc
imul
aam
cld
mov
movsl
sub
scas
call
dec
add
mov
test
mov
aam
insb
or
xchg
les
test
lahf
rcl
push
movsl
outsb
jne
inc
jae
cmpsl
imulb
xchg
push
mov
jp
jmp
mov
sbb
sub
mov
rcll
mov
mov
dec
pusha
lret
xlat
cmp
ds
dec
dec
xchg
ja
xchg
cmp
xchg
sub
call
mov
sub
lods
sar
subb
loope
bound
adc
add
push
sarl
xchg
inc
lock
popa
add
lahf
mov
inc
inc
inc
lret
fldenv
loope
fadds
mov
dec
sbb
test
or
ja
or
xchg
iret
scas
and
mov
es
repnz
jno
fmuls
in
stc
xor
sarl
adc
jmp
xchg
jmp
enter
mov
idivb
lahf
jecxz
cs
lahf
sub
fisttpll
mov
shlb
mov
sub
ficomps
in
aad
pop
sbb
loop
pop
mul
cld
sub
cmp
scas
mov
pushf
or
jo
inc
movswl
out
push
push
xor
inc
inc
sbb
in
iret
aad
lods
popa
push
sub
daa
fdivrl
ficomps
jmp
fildl
popf
loopne
mov
push
movsb
cmp
pop
iret
fsubr
xor
sbb
mov
adc
sub
ds
aad
adc
xchg
mov
sbb
pop
inc
shlb
mov
aam
ss
leave
cmp
and
pop
stos
fsts
xchg
mov
sarl
dec
out
mov
jp
ds
cmp
mov
call
mov
rolb
lret
xlat
sbb
lds
or
sub
pop
lock
je
lret
and
xor
xlat
mov
icebp
lret
in
icebp
js
push
repz
dec
es
xor
cltd
or
aaa
dec
repz
adc
add
out
ror
sbb
xorb
outsb
mov
hlt
add
mov
in
insl
repnz
testl
mov
lods
push
jge
xor
add
mov
in
sub
hlt
pop
dec
or
jg
mov
testb
arpl
loop
es
mov
insl
sbb
dec
div
repnz
mov
jae
rorl
les
out
shl
aam
pusha
inc
mov
loop
lods
xorb
fcmovnu
bnd
xchg
movsl
loopne
mov
insb
clc
in
popf
xor
cmp
icebp
inc
daa
jle
test
dec
adc
shrb
ja
lahf
sarl
inc
mov
jle
stc
test
push
jl
push
stos
int
movsl
pop
imul
inc
pop
fdivp
add
addb
lret
sub
jnp
push
cmp
xor
mov
mov
dec
lret
dec
dec
fsub
mov
sbb
jl
jp
add
sbb
ret
movsb
push
cmc
xor
adc
sbb
cmc
push
cmp
pop
add
les
jle
pop
dec
rolb
lret
movsb
push
into
mov
push
outsb
test
std
test
push
mov
aas
inc
rcrb
leave
mov
clc
xor
dec
lds
cmp
cmpsl
sar
adcl
in
pop
or
cltd
mov
mov
mov
aam
iret
adc
out
mov
popa
inc
out
add
cmp
dec
stc
call
ds
and
gs
rcr
sub
xlat
imulb
mov
pop
data16
xchg
jg
filds
adc
pop
fldt
dec
fs
mov
inc
push
inc
jo
test
lcall
sbb
and
dec
pop
jle
dec
dec
loop
cmp
dec
mov
cmp
jp
lcall
mov
mov
pop
cmc
sbb
lds
out
test
push
xor
dec
popf
in
lret
and
push
fadd
fsubrl
call
push
add
ret
mov
fiadds
push
lods
mov
sbb
sbb
je
nop
stc
add
repnz
in
icebp
ficoms
es
mov
repz
jecxz
shll
pushf
repnz
xchg
mov
adcb
cmp
adc
push
pop
outsb
or
idivl
sbb
or
sbb
jp
or
pop
ds
dec
in
push
ret
mov
mov
stos
or
outsb
dec
outsl
or
ss
aam
xchg
xor
movsl
fwait
fwait
daa
jl
lock
pop
dec
adc
mov
pandn
imul
test
mov
mov
divb
mov
stc
xchg
push
lret
rclb
popf
cmp
pop
add
push
pop
jns
pop
and
cmp
sarl
xchg
clc
pop
repz
data16
xchg
test
xor
out
add
fcomps
xchg
ret
andl
fdivs
sarb
das
mov
jae
cmpsb
dec
incb
in
sbb
push
out
daa
mov
or
inc
mov
clc
adc
shlb
ret
shlb
inc
mov
inc
xchg
sti
and
cmp
repnz
mov
mov
in
scas
fs
lahf
mov
jl
ss
in
in
fisttpl
adc
nop
jne
push
std
cmp
lea
loop
sub
rolb
test
mov
or
nop
sbbl
adc
push
fsubs
fsubrl
hlt
add
cmp
jmp
imul
out
das
fisttps
pop
sti
and
lret
lods
xchg
push
mov
inc
shr
orb
fimuls
pop
jge
iret
cmp
ret
xor
out
xor
inc
aas
ja
repz
jp
add
adc
cltd
loopne
and
cs
ljmp
jg
scas
stos
mov
add
xor
mov
sahf
lods
rclb
xchg
hlt
xor
inc
test
fimull
push
cmp
push
dec
fcompl
test
cltd
jecxz
sbb
or
leave
jae
loopne
or
jp
pushf
out
out
push
xor
dec
addr16
inc
out
mov
lods
cwtl
pushf
sub
inc
cmc
jnp
sbb
mov
pop
mov
rcrl
sbb
mov
into
add
mov
push
pop
in
out
and
mov
and
lods
mov
cmp
mov
lea
add
dec
enter
loop
in
inc
fiaddl
imul
fldcw
jmp
dec
inc
pop
pop
lret
out
gs
das
sub
sub
ljmp
fdivr
pop
add
dec
jnp
xor
inc
push
ljmp
xor
jne
icebp
inc
xchg
loope
mov
push
xor
pop
loop
pop
ds
add
pop
dec
sub
addr16
cmp
int
and
dec
lock
mov
jns
dec
lock
sbb
inc
mov
cli
pop
and
pop
cwtl
into
and
imul
jg
or
sbb
in
adc
xlat
jl
cmp
divl
call
jo
in
shll
cmpsb
push
xor
pusha
mov
daa
clc
xor
push
dec
pop
mov
ljmp
xlat
mov
lcall
inc
pusha
mov
lret
mov
or
cmc
out
lret
loop
xor
push
cmp
rorl
pop
inc
push
movsb
jns
push
add
jmp
mov
adc
popf
xor
sbb
lea
sbb
mov
jmp
andb
das
pop
add
icebp
dec
or
mov
pop
das
lods
adc
pop
cli
jae
mul
xlat
xor
push
jnp
pop
sbb
push
nop
xlat
jbe
and
sub
rcrb
dec
sbb
cmpsl
cmp
imul
sbb
aaa
and
in
cmp
add
imul
cmpsl
icebp
repz
adc
fstps
lods
in
and
hlt
add
xor
mov
out
xor
xor
mov
and
mov
jo
ja
in
stos
xchg
cld
shll
stos
jae
out
mov
push
xchg
jo
mov
jecxz
sub
push
into
mov
loopne
xor
or
enter
xor
mov
inc
fsubr
mov
lahf
js
js
sub
in
dec
adc
or
sbb
ljmp
leave
mov
jbe
xorl
jle
adc
jno
test
outsl
rorb
les
or
and
pop
repz
imul
xor
andb
and
cmpsb
cmp
loope
dec
popa
movsl
add
mov
and
xchg
pop
xor
and
movsb
jb
rcrl
idivl
mov
sbb
in
in
imul
pop
stos
in
mov
in
push
cmp
pop
lahf
loopne
or
stos
shlb
jns
adc
fcoml
mov
loope
repz
jmp
pop
pushf
xor
das
repnz
mov
test
enter
xor
imul
out
inc
and
add
fstpl
fcoml
push
fmuls
xor
loopne
int
aaa
lds
mov
insl
orl
dec
pushf
mov
push
sub
lret
fsubl
push
std
stos
fcmovnbe
xor
pop
push
mov
ret
pop
xor
xor
xchg
push
dec
inc
aam
lea
cmpsb
mov
jb
repz
dec
fisubl
into
and
popf
rclb
jne
push
cmp
aaa
jbe
push
jl
in
imul
sub
cwtl
or
push
lret
cmpsl
ljmp
test
nop
push
addb
sbb
enter
mov
mov
cmp
sbb
sbb
jg
push
mov
pop
mov
insl
mov
jnp
pushf
outsl
mov
loop
rclb
inc
in
jp
out
cmp
loope
jmp
mov
fidivs
push
jbe
mov
sti
dec
jbe
rorb
jg
lods
das
pop
cmc
es
mov
sbb
les
popf
mov
inc
xor
in
repnz
loop
inc
arpl
fistl
in
mov
gs
mov
shr
inc
jp
jne
mov
push
roll
test
push
jl
je
jecxz
jl
push
es
xchg
mov
mov
ljmp
ret
call
outsb
leave
lret
popa
pop
xor
xchg
adc
push
mov
adc
insb
or
test
mov
mov
xchg
hlt
adc
and
adc
jae
dec
popf
shlb
in
sbb
lds
inc
fs
loope
sub
and
aam
adc
repz
stos
and
mov
loope
sbb
leave
in
insl
fisttps
ficomps
test
adc
push
inc
push
mov
rcrb
xor
negb
shl
xchg
dec
popf
mov
std
repnz
pop
das
icebp
out
mov
fistpl
cmpl
je
mov
dec
in
jmp
mov
fisubl
jp
leave
gs
pop
ficomps
mov
mov
push
mov
sbb
inc
adc
jno
inc
add
push
sbb
mov
push
fsubrp
inc
jecxz
aas
addb
shll
in
mov
or
dec
cmp
repz
ret
pop
fmul
mov
iret
cmp
addr16
scas
addr16
xor
or
add
mov
adc
sbb
xchg
cmc
out
mov
cmp
popf
mov
sbb
jb
packssdw
cli
xor
push
xor
push
fwait
mov
scas
push
dec
dec
adc
fcomip
xor
cmp
movsl
lret
mov
int3
popa
lcall
enter
fdivrs
xor
call
scas
dec
add
out
mov
mov
push
pop
jge
out
scas
add
in
push
ja
push
inc
and
adc
jmp
sub
lahf
xchg
adc
adc
lods
push
out
gs
mov
xchg
icebp
rorl
bound
pop
fcoml
mov
adc
es
or
push
lods
sbb
mov
les
cmpsb
adc
mov
jae
mov
adc
imul
jae
imul
shll
jae
mov
push
xchg
clc
inc
lret
cwtl
pop
jbe
mov
xchg
lret
sub
jns
mov
push
jmp
sbb
jl
cmp
xor
cwtl
outsl
ror
movsb
cltd
push
or
jge
popf
mov
jl
xchg
outsl
mov
cmp
xchg
cltd
in
jecxz
leave
pop
mov
add
push
out
lds
out
mov
notl
or
leave
out
mov
and
mov
mov
adc
stos
in
lods
pop
sub
lods
pop
lods
and
jp
mov
sbb
dec
sub
jg
mov
pop
push
or
les
mov
jg
inc
test
and
fwait
sti
repz
lea
testb
les
ja
lods
jmp
jmp
daa
mov
ja
lds
mov
cmp
and
jecxz,pt
adc
dec
push
sbb
fisttps
xchg
ret
mov
inc
jmp
sahf
into
imul
xchg
adc
push
dec
push
test
mov
jo
and
lods
adc
aas
pop
inc
mov
cmp
inc
je
jb
mov
lds
xor
xchg
fs
bound
pop
xor
enter
pop
or
cmc
loop
ljmp
jb
dec
aad
pop
ja
and
imul
adc
std
lret
notl
icebp
sbb
xor
push
fisubrs
imul
adc
int
inc
ljmp
lods
stos
out
mov
mov
cltd
lret
mov
mov
ds
stos
xlat
adc
bound
sub
xrelease
xchg
loope
pop
lahf
cmpsl
fimuls
jp
and
shl
xor
jne
pop
lcall
xor
mov
fchs
xchg
pop
sub
fwait
xor
stos
enter
stos
iret
push
sti
pop
stos
inc
jecxz
push
scas
sti
jmp
aaa
xchg
and
adc
call
mov
out
jle
lret
push
addr16
add
adc
fistpll
les
shl
mov
pop
fildl
cmpsl
daa
add
lahf
and
sarl
jecxz
push
push
pop
scas
fwait
out
sti
jp
jp
mov
and
inc
cmp
cs
and
iret
fidivl
bnd
mov
xchg
push
fwait
and
lods
dec
xor
cmp
mov
repz
mov
jno
dec
dec
std
mov
add
dec
pop
aaa
sbb
pop
mov
rolb
adc
pusha
push
dec
orb
hlt
add
xor
jne
aas
ror
mov
mov
rcll
flds
or
shl
jg
jns
xlat
pop
and
std
ss
pop
lahf
mov
bnd
je
inc
mov
cwtl
jmp
cmp
xchg
xchg
outsb
pop
jle,pn
sti
mov
mov
addr16
jg
bnd
cmp
cs
test
mov
inc
enter
hlt
push
mov
pop
inc
jb
sbb
inc
dec
mov
mov
arpl
jb
test
jae
push
cmp
cmpsb
xor
sti
imulb
sub
sbb
test
cmp
divb
test
cmp
xchg
or
dec
lahf
xchg
add
int3
xor
xchg
pop
ss
xchg
jg
xchg
icebp
lock
push
sti
dec
push
mov
pop
cmpl
jne
cmpsl
or
mov
push
lret
enter
mov
jmp
fs
bound
insl
mov
es
ljmp
sbb
shlb
cmc
pusha
retw
inc
dec
enter
das
push
cmp
xchg
mov
sbbb
adc
fidivs
mov
scas
jnp
call
fisubs
adc
insb
inc
mov
mov
insb
mov
adc
add
bnd
xchg
dec
notb
shl
ja
jb
cwtl
sti
mov
push
pop
stos
xor
lea
mov
insb
xor
and
fnstenv
testb
inc
and
fcmovbe
imul
jecxz
dec
mov
inc
cmp
sbb
arpl
shlb
mov
imul
cld
push
jo
xlat
popa
adc
push
imul
push
add
leave
gs
jae
popa
push
ds
pop
xchg
cmpsl
andl
cmpsl
adc
sbb
dec
push
jbe
std
xor
dec
lcall
in
cmp
pop
xchg
aam
mov
mulb
sub
ja
sub
std
xchg
sub
cmp
adc
dec
cld
addr16
pop
sbb
and
mov
mov
leave
jp
lcall
xchg
aaa
mov
ja
mov
ja
loopne
in
add
outsb
lea
push
mov
fdiv
sbb
push
fdivrl
push
push
dec
lods
inc
mov
shll
add
push
inc
aas
jo
sub
leave
sbb
aad
aad
mov
jecxz
mov
mov
xor
fsubrl
das
test
pop
sbb
dec
daa
lds
push
cmp
sarl
jmp
inc
addr16
mov
add
xchg
adc
mov
xor
adc
inc
shll
dec
stc
aas
jmp
aas
jmp
out
adc
jge
or
xchg
xchg
ss
jb
aaa
iret
lock
cwtl
iret
int
pop
pop
xchg
scas
xor
and
stos
scas
adc
push
int3
mov
mov
sbb
in
lock
adc
jns
js
ud0
test
pop
cli
lds
cwtl
cli
sbb
push
jno
pop
cmp
cli
sub
or
std
mov
jg
data16
lret
addl
dec
mov
stc
cmpsb
daa
enter
xchg
jge
ja
jl
and
mov
lret
in
out
dec
mov
nop
enter
clc
cmp
les
add
test
in
imul
loop
pop
dec
push
lret
fmull
movsb
jmp
sbb
lock
cli
aam
shlb
out
lods
subb
xor
jg
xor
push
pop
enter
jg
mov
test
pop
add
and
fists
scas
pop
xchg
into
incl
dec
push
dec
jb
int
clc
jb
adc
ret
pop
fcos
aam
pop
or
dec
gs
adcl
dec
into
sbb
sub
pop
lret
dec
jmp
xor
mov
aam
fwait
pop
jbe
push
pop
lods
cmpsl
lds
pop
cmp
cmp
mov
or
aas
cmpsb
mov
sub
or
adc
jne
insb
adc
pop
cmp
lds
push
pop
and
fldt
jecxz
jbe
inc
or
ds
rcll
ret
xchg
mov
in
xchg
je
sub
lock
call
mov
push
inc
fidivl
dec
insl
inc
loop
cmp
lcall
cmc
push
xor
scas
dec
into
mov
and
in
push
inc
sbb
mov
test
inc
imul
push
sbb
push
dec
push
add
loopne
scas
cmpb
aaa
xor
jae
cmpsb
mov
repnz
cltd
mov
jnp
mov
or
pop
mov
mov
cmpsb
cmc
nop
mov
stos
out
sbb
outsb
adc
cmpsb
insb
clc
jle
cmpsl
pop
test
daa
les
pushf
push
mov
xlat
dec
inc
dec
popa
dec
xchg
ja
testl
jns
dec
push
in
lret
inc
push
pop
rdtsc
mov
rcll
cmc
xor
addl
fwait
cmp
sbb
and
pop
sbb
test
jb
inc
divl
mov
iret
and
lret
sub
ret
loopne
and
jo
push
call
pop
sbb
mov
add
mov
xor
not
lods
mov
and
inc
cwtl
xor
mov
adc
call
and
push
sbbb
hlt
inc
fldenv
cmp
in
mov
xor
jns
and
ret
and
mov
dec
or
xchg
call
leave
popf
pusha
jbe
ret
pop
mov
sti
push
push
sub
ds
inc
jnp
lock
cltd
sub
in
push
sbbl
add
outsl
jecxz
jbe
inc
cmp
pusha
shl
addr16
mov
shr
sub
out
in
repz
push
sub
adc
mov
jbe
cmp
scas
arpl
mov
sbb
mov
jle
lds
popf
mov
jbe
inc
push
xor
test
fsts
and
or
xor
jns
lret
inc
loopne
cmp
sub
xlat
movsl
cmp
adc
int3
push
xor
ficoms
xor
add
jns
icebp
xor
cmpsb
adc
jne
js
lock
jmp
xor
test
inc
arpl
arpl
lcall
aam
ja
xchg
mov
iret
cmc
std
sbb
test
and
scas
lds
imul
imul
in
add
sbb
js
outsl
insl
mov
mov
cmpsl
loopne
inc
jg
cs
js
adc
enter
adc
int3
ror
push
in
mov
add
xor
imul
repnz
stos
cmp
andb
add
out
or
xchg
ja
mov
psubsb
xchg
scas
adc
inc
cmp
xchg
mov
iret
xor
loopne
loop
xchg
mov
insb
in
andl
test
rolb
aad
mov
jle
movsl
add
xchg
add
movsb
mov
jge
inc
ds
insl
iret
addr16
jb
push
outsb
sbb
cld
daa
popf
xchg
cs
cmp
sbb
xchg
add
mov
jp
or
popf
data16
iret
sub
int3
fwait
inc
jmp
les
jb
sbb
dec
rcrb
movsl
pop
mulb
es
inc
mov
lock
jmp
mov
scas
sub
pop
pushf
lods
outsl
and
mov
jnp
inc
pushf
cltd
mov
adc
cltd
imul
test
nop
cmpb
imul
fisubl
add
ret
lods
jo
jno
js
push
sub
leave
jg
xor
jbe
add
ljmp
pop
sbb
xchg
cs
aas
stos
xchg
pop
lods
stos
mov
xlat
dec
jae
es
xchg
push
push
pop
aas
cmpsb
sbb
out
ss
push
mov
push
std
mov
pop
xchg
push
cli
mov
aas
stos
xchg
cmp
lret
xchg
sub
adc
rol
adc
repnz
xchg
push
or
jmp
xlat
scas
loope
adc
les
jae
out
cmpsl
sub
adc
add
add
adc
lock
add
mul
scas
jnp
andb
cwtl
incl
push
push
enter
iret
clc
outsb
cmp
hlt
push
popa
push
mov
cltd
xor
ljmp
mov
xchg
imul
xor
sub
rol
pop
inc
mov
inc
lahf
scas
in
mov
outsb
cmp
xchg
int3
mov
or
pop
fld
xchg
and
cli
daa
mov
test
ret
fsubr
jmp
cltd
xor
icebp
sbb
sbb
rolb
out
in
dec
adc
sahf
shrb
out
repz
pop
outsb
xor
inc
in
es
push
imul
pop
mov
lock
notl
jbe
imul
lock
dec
pop
out
jbe
sbb
push
jbe
pushf
test
sar
push
shlb
lds
dec
mov
mov
push
jp
or
and
cmpl
and
addl
pop
shl
push
outsl
out
dec
shrb
push
push
cmp
ficoms
and
jno
push
mov
sub
inc
adc
mov
push
xor
fs
lret
js
mov
insb
insl
popf
cld
mov
push
rorl
inc
and
pusha
arpl
bound
sub
add
ret
ficompl
sbb
push
aad
repz
mov
lods
mov
push
nop
sub
into
jae
pop
cmpsb
or
std
push
inc
test
in
imul
and
movsb
jl
and
in
hlt
out
or
popa
cs
pop
outsb
fistpll
ret
mov
js
and
leave
in
or
out
dec
aam
pop
out
jb
add
jnp
inc
or
fstl
push
xor
mov
fiaddl
stos
int
dec
std
pop
cltd
mov
xor
or
ja
pop
nop
mov
push
loop
fstl
mov
or
xor
xchg
jb
in
popf
pop
xchg
dec
mov
pop
and
mov
lea
and
jo
jnp
icebp
adc
in
aad
lret
scas
cmpb
adc
mov
ja
popa
fucomip
adc
xchg
sbb
add
nop
cmpsb
and
mov
lock
jo
dec
pusha
cmpsb
cwtl
sub
lock
and
or
adc
push
shll
scas
stos
dec
testl
jecxz
clc
push
rorl
ds
mov
pop
gs
shrl
jbe
mov
dec
xchg
mov
cmpl
ret
clc
adc
dec
jecxz
shrb
lret
in
lret
rolb
pop
inc
out
push
fcmovbe
bound
jb
xchg
xor
xchg
push
sub
hlt
ss
xchg
or
mov
fimull
mov
mov
cmc
icebp
xchg
inc
repnz
sbb
jno
jmp
sub
sbb
enter
push
or
mov
fldt
jno
shll
or
adc
lcall
or
shl
xor
or
rolb
cmc
insb
mov
or
mov
fnsave
stos
xchg
add
push
and
imul
jl
sbb
cmpsl
inc
es
mov
test
repz
mov
push
in
sbb
cmpb
sahf
or
test
mov
push
call
ret
cmpsb
lcall
lods
dec
push
ret
testl
movsl
jnp
dec
sbb
jae
sub
in
add
jmp
repz
ret
xor
xlat
jge
adc
push
clc
cmc
std
aad
inc
rcrb
jmp
push
xorb
out
lods
fldenv
cmp
jle
decl
fimull
xlat
test
mov
aam
add
inc
or
jbe
popa
test
pop
inc
mov
jns
cli
rclb
js
lock
or
inc
cmp
push
jne
out
jnp
jb
int3
push
jmp
fadds
enter
arpl
inc
push
scas
gs
adc
jb
jge
jne
insl
sahf
push
inc
mov
sbb
sub
cmp
or
sbb
xor
inc
insl
or
mov
inc
jecxz
mov
mov
stc
push
and
ja
repz
jmp
cltd
mov
sti
test
xchg
inc
out
mov
xor
sbbb
insb
out
loop
mov
loope
into
arpl
push
adc
and
xchg
nop
jmp
pop
or
inc
mov
lret
rcll
clc
out
jno
cmp
sbb
jns
push
imull
testb
push
cld
shlb
shrb
jle
mov
mov
sti
pop
and
ret
fsubrs
in
dec
jge
xchg
xor
gs
jbe
jo
cmpsb
mull
shlb
popa
fdivrp
das
and
push
bound
and
mov
scas
out
pop
gs
mov
ljmp
and
xchg
outsl
scas
insl
repnz
pop
addr16
mov
cmpsl
jns
jbe
aaa
lods
mov
rcll
repz
int3
data16
loope
repnz
dec
dec
xchg
inc
xchg
sbb
pusha
leave
mov
cmp
jno
mov
mov
inc
jno
dec
push
pop
mov
test
sbbb
nop
imul
inc
sub
fwait
or
cmp
cmp
inc
lock
aad
loope
pop
pop
push
xor
daa
cwtl
js
nop
pop
out
imul
pop
pusha
fisttpll
push
loop
js
repnz
mov
std
xor
lods
lret
dec
mov
cld
movsb
jl
popa
imull
dec
daa
or
lods
loope
push
sbb
sarl
andl
negl
idivl
fimull
jae
mov
cli
andb
daa
push
cmp
dec
mov
leave
repz
sub
cmp
sub
shl
or
scas
adc
add
sbb
or
leave
mov
mov
xor
cmp
sbb
aaa
mull
lds
ret
ja
lods
data16
int
push
adc
inc
jl
lcall
lock
js
mov
fsub
sbb
xor
xchg
idivb
jno
fildl
pop
inc
fmuls
popf
push
mov
addl
test
in
xor
or
mov
xorl
stos
fcmovnbe
imul
inc
and
arpl
or
push
ds
xorl
pop
movsb
fmuls
xchg
pop
jo
out
inc
add
andl
push
outsl
cs
or
and
cmp
mulb
daa
mov
outsb
sub
add
adc
jb
xor
out
leave
push
xchg
stos
push
dec
sar
cltd
ret
roll
adc
lea
mov
movsl
add
mov
sub
lods
mov
add
mov
or
out
cmp
cld
fdivrl
jg
mov
jge
inc
push
mov
aam
mov
or
dec
ficomps
fsubrs
out
mov
push
int
add
adc
adc
sbb
mov
inc
fstl
mov
ret
test
std
fisttpll
or
std
xor
sbb
aaa
jae
add
xor
mov
cld
les
decl
daa
js
cmp
sub
popf
xor
pop
dec
mov
xor
jle
stc
jge
lds
or
loope
and
pop
lods
hlt
and
sbb
sbb
inc
cmp
mov
ficompl
mov
xor
mov
in
xlat
inc
in
sti
scas
mov
push
icebp
mov
rcrb
add
and
sub
mov
mov
movsb
jp
arpl
in
pusha
add
fstpt
js
lock
aas
pop
out
enter
pop
fisttpll
je
cwtl
xorl
les
loop
stos
add
je
xchg
cmpsl
gs
ds
inc
xchg
jp
cmp
mov
bound
ljmp
cmp
sub
cmp
sbb
imul
loope
or
and
mov
scas
ljmp
and
push
test
sub
leave
stos
call
imul
mov
inc
dec
add
stos
sub
dec
push
mov
dec
or
pop
dec
jne
inc
mov
push
aaa
loope
xor
daa
inc
mov
or
cmp
ret
gs
je
sub
xchg
mov
push
push
push
dec
cmpsb
or
loope
ja
xchg
pop
xchg
jne
jmp
adc
xchg
dec
xor
sbb
mov
pop
hlt
or
dec
pop
lcall
loopne
add
data16
lds
nopl
mov
inc
mov
mov
lret
sub
lods
adc
and
jno
xor
nop
testb
mov
push
fdivs
out
jne
jge
aad
inc
sbbb
and
push
stos
lcall
iret
stos
push
in
mov
mov
test
push
pop
test
jns
or
mul
aad
add
jg
pusha
jge
int
jae
jmp
aas
jp
mov
stos
je
mov
outsb
movsb
jge
mov
add
push
cmc
xchg
or
cli
fstp
jl
hlt
adc
repz
clc
mov
and
add
or
adc
and
jp
enter
es
mov
mov
lcall
dec
xchg
mov
mov
