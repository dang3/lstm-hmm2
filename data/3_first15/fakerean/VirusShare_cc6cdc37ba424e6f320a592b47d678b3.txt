and
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
xor
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
sub
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
cmp
je
cmp
je
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
lea
call
lea
call
lea
call
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
movl
movl
movl
cmpl
jge
cmpl
jne
mov
test
je
push
call
pop
mov
mov
push
call
lea
lea
movl
call
lea
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
mov
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
lea
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
push
push
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
lea
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
pushl
movl
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
call
mov
pop
ret
push
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
cmp
lea
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
lea
lea
call
test
je
xor
cmp
mov
jne
mov
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jmp
mov
jmp
mov
push
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
call
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
push
push
call
mov
add
push
add
push
fildl
fistps
std
xchg
push
add
xchg
add
test
mov
arpl
mov
hlt
shl
add
scas
mov
add
add
hlt
push
mov
add
push
push
lea
push
call
fiaddl
mov
lret
jle
imul
bound
add
add
jo
mov
popf
add
pop
add
push
insb
popf
add
jmp
add
mov
test
fisubl
aad
mov
sahf
mov
mov
cmpsb
icebp
push
push
add
add
icebp
loop
add
mov
in
clc
pop
popl
push
push
push
lea
push
push
push
call
enter
add
mov
repnz
add
jbe
push
push
add
add
jns
jl
add
jae
add
in
jae
add
mov
pop
add
mov
add
movl
into
faddl
rcl
hlt
xchg
gs
fmulp
leave
add
roll
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
pop
add
ljmp
add
movsl
add
add
add
lea
push
in
jmp
mov
jo
mov
xchg
roll
push
mov
out
add
shl
add
loopne
add
add
pusha
cltd
mov
loopne
lcall
push
push
lea
push
push
call
add
add
add
test
lret
add
add
filds
jae
jae
testb
add
jp
test
pusha
add
jnp
iret
lock
add
lahf
jmp
push
mov
add
add
mov
jl
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
pop
mov
add
add
add
into
jl
pop
out
add
jb
fsubp
add
icebp
add
lea
xchg
fstpt
mov
add
icebp
push
xchg
popf
mov
add
mov
add
addr16
gs
mov
call
push
push
push
push
push
push
call
add
std
cmc
lods
add
push
add
call
add
jns
add
jbe
xchg
add
mov
mov
bound
call
call
jmp
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
add
pushf
mov
fisubrl
push
inc
add
add
fidivl
scas
jns
jl
cli
mov
in
add
imul
movsl
sub
pop
ret
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
je
test
push
xchg
mov
add
add
add
imul
add
push
lret
add
in
popf
cmc
add
jns
add
stos
pop
jnp
add
fisubrs
leave
jno
add
add
add
mov
push
push
push
push
push
call
fimull
into
jle
add
imul
mov
cli
shrb
mov
int
add
cmpsl
pop
leave
add
fiaddl
xchg
lods
push
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
add
frstor
in
popf
add
filds
push
fldt
repnz
cwtl
jge
add
addr16
add
add
add
lcall
ret
add
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
jp
jb
mov
sarl
mov
fwait
test
addr16
movsb
stos
movl
add
add
fadds
add
mov
lret
add
jo
fistpll
mov
aad
lds
ret
cmp
add
popf
push
push
lea
push
push
push
lea
push
push
push
call
add
add
jp
lret
bound
out
xchg
add
in
ja
mov
roll
lahf
test
add
arpl
xlat
pusha
icebp
mov
lcall
pop
add
repz
adc
out
xchg
lods
push
dec
push
sub
add
inc
lea
ror
shl
sub
sub
inc
lea
pop
not
pop
push
push
push
lea
push
push
call
mov
add
add
fiadds
xchg
lret
test
cwtl
mov
add
jo
mov
xchg
jb
add
into
cli
int
push
movsb
int3
stos
call
add
xchg
xchg
sub
pop
pushl
push
push
push
push
push
push
lea
push
call
mov
add
loop
clc
stc
ljmp
push
arpl
mov
out
add
cld
fsubl
aad
add
push
sub
pop
call
mov
push
push
push
call
mov
pop
jecxz
add
add
add
stos
mov
imul
add
lds
mov
iret
fcmovu
mov
mov
imul
add
je
arpl
add
lcall
inc
call
push
push
push
lea
push
push
push
push
push
push
push
call
rclb
add
push
add
add
pop
cltd
lock
jbe
fadds
test
add
outsl
mov
push
mov
sahf
add
iret
push
add
add
add
nop
add
xchg
add
add
jmp
jns
xchg
add
jle
lock
in
fcomps
inc
call
je
pusha
push
push
call
push
addr16
add
out
fnstenv
add
popa
xlat
add
add
ljmp
fildl
add
rolb
jl
add
rolb
in
lock
lcall
pushl
push
push
push
push
push
push
call
push
int3
loope
add
push
mull
add
hlt
mov
mov
add
out
mov
in
pop
add
shr
add
out
add
sarb
rcrl
pushl
push
push
push
lea
push
push
lea
push
push
push
call
lea
faddl
fsubl
mov
fiaddl
int
jns
in
call
scas
pop
out
test
add
add
jno
add
imul
in
fiadds
lret
jecxz
sarb
add
icebp
add
push
sahf
stos
hlt
jno
add
call
push
push
lea
push
push
call
movsb
aad
add
add
lcall
pusha
test
clc
into
jle
ja
jns
add
add
mov
rcrb
filds
jne
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
mov
mov
sbbl
add
jp
add
fmuls
add
repnz
out
add
pusha
enter
scas
mov
aam
mov
add
nop
add
mov
add
sub
pop
pushl
call
push
push
rol
inc
xor
push
xor
add
shr
lea
lea
sub
sub
sub
xor
pop
ror
dec
pop
push
push
call
add
jo
add
add
int
std
add
add
add
pusha
pop
lcall
je
add
add
add
cld
push
push
in
clc
pop
pushl
push
push
push
push
push
push
call
push
push
roll
push
xchg
rorb
cmpsl
incb
sti
into
xor
pop
xor
add
rorl
popa
xchg
loop
add
xchg
add
add
mov
jo
add
mov
mov
lret
push
outsl
rolb
add
fistps
nop
sub
pop
call
push
push
push
add
add
add
push
sub
add
sub
sub
add
add
sub
sub
add
pop
shl
pop
push
push
push
lea
push
push
push
push
push
push
call
add
add
lods
js
stos
add
les
stc
add
les
add
xchg
add
popf
int3
add
pop
add
add
add
add
add
int
add
push
jb
push
loopne
movl
arpl
loopne
aam
add
add
roll
test
imul
sub
pop
push
push
push
push
push
push
push
lea
push
call
pop
test
push
add
loopne
push
mov
add
add
add
fadds
int3
movsl
add
fadds
add
push
add
add
mov
aam
add
push
lock
mov
test
sti
add
add
add
add
jns
lret
add
rorb
push
lea
push
push
push
call
add
add
pop
jb
add
add
add
jge
add
add
add
add
xchg
loope
sti
shll
mov
pop
add
lods
mov
js
xchg
lods
add
mov
add
mov
mov
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
into
mov
in
sahf
sti
mov
mov
lock
shlb
mov
lods
xchg
add
test
pusha
outsl
add
add
cltd
pushf
add
fcoms
add
xchg
pop
add
insb
in
add
clc
mov
add
jb
cmpsl
jecxz
add
add
add
roll
outsl
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
mov
jb
add
les
mov
add
out
test
jno
add
add
flds
xchg
jecxz
lods
xchg
add
add
mov
cmc
sti
cmc
push
aam
mov
add
in
add
add
mov
lcall
pop
in
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
repnz
fs
cld
jb
outsl
add
fiaddl
leave
add
pop
add
scas
add
out
add
add
shl
lcall
pop
add
push
push
lea
push
lea
push
call
add
add
iret
into
add
add
add
loope
mov
add
add
cwtl
push
data16
fstp
stc
jmp
cmpsl
add
add
lahf
add
lea
jmp
add
lock
add
push
sub
pop
add
push
push
lea
push
push
push
push
push
push
call
movb
add
icebp
add
push
in
add
pop
push
movb
add
add
pop
imul
cltd
add
add
push
pop
fbstp
shlb
add
cltd
add
mov
iret
add
add
jle
lock
lahf
iret
mov
add
xor
jno
adc
mov
aaa
and
or
sbb
push
push
lea
push
push
lea
push
push
call
jne
add
add
cld
add
mov
mov
push
mov
xchg
add
test
mov
rolb
stc
repnz
pop
add
add
lcall
xor
push
push
push
push
lea
push
call
idivl
add
add
std
mov
jecxz
add
add
add
add
insb
jle
mov
out
pop
imul
add
push
mov
mov
imul
add
loope
cmpsb
jmp
add
stos
mov
add
les
add
push
push
call
pop
fwait
push
add
add
add
push
add
mov
push
lea
push
add
add
add
add
add
add
pop
add
jl
lahf
add
jo
add
std
jle
cld
add
clc
aad
add
pop
add
push
push
push
push
call
xchg
add
xchg
add
pop
in
push
nop
call
fidivl
out
add
loopne
add
xlat
jnp
in
xchg
lea
lods
add
push
lcall
push
push
push
push
call
cli
add
jmp
incb
in
testl
add
add
mov
sbbb
jge
lock
jnp
sti
add
test
mov
in
lock
mov
xor
push
push
lea
push
push
push
push
push
push
push
push
call
andb
add
popa
hlt
xchg
ja
pushf
pusha
push
add
arpl
cltd
cli
imul
lcall
loop
sub
pop
add
pop
push
push
push
call
pusha
add
fnstsw
fidivrs
rolb
popf
add
jno
mov
mov
movsl
test
lds
hlt
pop
mov
xor
push
push
push
push
push
lea
push
call
add
out
xlat
add
jo
add
scas
pusha
gs
je
mov
stc
loopne
xchg
ja
leave
pop
add
mov
mov
add
add
add
ljmp
jecxz
add
push
cmpl
pop
clc
pusha
cltd
mov
stos
push
mov
js
xchg
add
lcall
push
lea
push
push
push
push
push
call
test
add
div
push
add
add
mov
add
add
add
mov
roll
add
movsb
add
adcb
js
add
aam
mov
sub
pop
mov
xor
push
push
push
call
add
addl
add
pop
addb
pop
fnstenv
insb
lds
loope
mov
ret
stos
add
add
add
out
pop
add
cltd
movb
pop
jae
add
loop
pop
pushf
mov
add
testl
in
hlt
lcall
enter
dec
lea
push
push
push
push
lea
push
push
push
call
addb
add
xchg
add
push
add
add
aad
in
mov
cmc
push
jmp
js
push
mov
into
add
add
mov
je
ror
jae
mov
cmpsl
add
add
push
jnp
add
repnz
mov
xchg
lods
out
sub
pop
rep
push
push
push
push
call
notl
stos
scas
add
fisubs
push
test
ljmp
mov
out
lods
pop
jns
lea
add
mov
pushf
push
add
int
int3
lods
data16
stos
add
pushf
loop
iret
sub
pop
pop
push
push
call
jnp
add
mov
shll
loop
add
addl
add
add
add
add
pop
mov
clc
lcall
pop
hlt
push
push
call
aam
pushf
add
push
jno
add
add
add
add
loop
cwtl
add
jmp
jp
arpl
add
repnz
ljmp
je
popf
mov
add
add
pop
in
add
push
push
lea
push
call
xchg
loop
stos
add
mov
add
jo
fcmovnbe
repnz
movsb
add
add
add
add
call
mov
fcoml
add
loopne
mov
insb
hlt
cmpsb
add
add
movb
in
hlt
lcall
ret
cmp
add
sbb
pop
sbb
push
push
lea
push
lea
push
push
push
call
mov
jbe
jmp
mov
add
test
cli
mov
popf
cld
loope
add
push
mov
test
clc
push
push
mov
stc
js
pusha
rcrb
add
mov
add
jmp
xchg
inc
and
adc
das
inc
sub
addr16
push
lea
push
push
push
push
call
incb
test
add
js
add
mov
ret
lret
add
pop
add
add
mov
lcall
xchg
pusha
fs
add
fwait
js
jo
mov
mov
add
push
mov
popa
jns
std
xchg
add
push
and
xor
adc
push
push
push
call
jne
imul
add
lods
add
ret
mov
add
add
xchg
movsb
mov
xchg
into
xchg
into
insb
out
mov
adc
push
push
push
call
shlb
jle
jns
mov
add
add
mov
push
xchg
addl
pusha
js
pop
jno
xchg
add
add
jno
lret
add
into
xchg
add
jecxz
push
jno
add
lahf
add
sub
pop
add
push
push
lea
push
lea
push
push
lea
push
lea
push
call
fwait
add
add
jp
out
jmp
clc
add
fiaddl
mov
addl
leave
add
xchg
aam
jge
mov
in
in
mov
xor
push
rol
lea
pop
add
push
push
push
lea
push
push
push
call
add
add
add
push
add
mov
jmp
imul
jbe
push
movsl
add
mov
scas
add
add
xchg
mov
xchg
jb
cli
jbe
mov
lcall
rorl
stos
push
add
lea
push
or
inc
add
add
lea
sub
sub
dec
sub
pop
shr
pop
push
inc
xor
dec
pop
pushl
push
push
push
push
push
push
push
call
xlat
mov
add
xchg
add
test
in
add
mov
add
mov
push
pusha
add
mov
add
fxch
out
add
fadds
mov
push
add
add
std
scas
jge
push
pop
add
mov
fadds
mov
add
incb
lcall
into
push
add
push
sub
lea
pop
push
push
push
ror
not
shr
push
push
pop
add
dec
shr
sub
pop
dec
ror
rol
pop
push
push
push
push
push
push
push
push
call
add
mov
movsl
mov
jne
add
jp
mov
add
popf
addl
movsb
mov
in
test
call
test
icebp
in
xchg
xlat
add
sub
pop
push
push
shl
rol
rol
pop
push
push
lea
push
push
push
call
jp
push
incb
add
arpl
add
mov
add
loop
mov
add
lret
add
test
add
mov
out
in
lock
call
mov
push
lea
not
pop
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
add
lcall
add
add
add
xchg
outsl
add
icebp
stos
add
ret
add
mov
je
xchg
pop
add
jmp
mov
js
mov
fs
add
add
pop
add
addr16
mov
sub
pop
push
mov
push
rol
pop
add
push
shr
add
pop
add
push
push
push
call
add
add
bound
add
lret
add
adcl
icebp
incb
xchg
incb
pop
testl
call
add
add
jle
push
icebp
add
add
out
add
add
mov
add
add
lret
sub
pop
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
stos
mov
add
push
rol
add
mov
add
pop
call
add
data16
incb
lods
test
int3
add
xchg
mov
mov
pop
add
add
mov
xchg
std
addb
pop
mov
xor
push
push
push
push
lea
push
lea
push
lea
push
call
flds
test
add
xchg
lret
add
add
jne
enter
in
mov
test
lahf
mov
mov
add
clc
push
xchg
fsubrl
add
fistps
add
add
bound
jb
add
fidivrl
add
pop
add
push
push
push
push
lea
push
push
push
call
mov
arpl
lds
add
fsub
add
add
add
add
add
icebp
add
xchg
jle
add
add
stos
rolb
int
pop
add
in
push
push
push
push
call
add
jge
sub
push
flds
fs
add
add
incb
test
add
insb
addl
cmpsb
sub
pop
mov
push
push
lea
push
call
add
je
jo
clc
fldt
cmpsl
fsubr
jecxz
loopne
les
aad
mov
call
add
sarl
outsl
hlt
add
add
sbb
xchg
fucom
jle
je
jnp
mov
cwtl
fadds
lea
imul
xchg
add
mov
add
mov
int3
add
add
sub
pop
xor
push
push
push
push
push
call
mov
add
fcmovbe
iret
clc
pop
in
add
mov
data16
add
jno
add
add
loope
add
add
pop
mov
add
std
mov
add
test
add
movsb
clc
gs
fucomip
add
jecxz
add
mov
ljmp
pop
jae
add
sub
pop
add
push
rol
pop
add
push
push
push
lea
push
push
call
xchg
stos
fmull
in
mov
aam
scas
add
movsl
add
cltd
add
add
add
test
out
test
add
add
add
pop
out
add
imul
add
jle
add
mov
lcall
mov
xor
push
push
push
call
mov
jecxz
test
js
roll
add
filds
stos
add
add
add
add
in
add
aad
in
add
add
mov
mov
enter
add
add
jnp
repnz
int3
loop
sub
pop
rep
mov
push
push
lea
push
push
call
jnp
in
roll
jl
add
add
jno
cmpsb
add
test
in
movsb
cld
out
add
lret
test
out
lahf
aam
add
mov
push
push
mov
nop
add
in
leave
imul
stos
add
add
add
hlt
lcall
or
push
push
push
push
call
out
mov
pop
lods
add
add
pusha
test
aad
rol
pop
add
add
loope
popf
mov
add
enter
ret
add
out
pop
jns
aam
add
lods
mov
add
mov
mov
add
add
icebp
jae
flds
jo
xchg
add
cli
add
in
sub
pop
add
push
shl
ror
pop
or
je
push
push
push
lea
push
push
push
lea
push
push
call
add
xchg
faddl
mov
sti
mov
add
add
mov
out
push
add
nop
mov
in
jle
cld
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
call
lods
lea
add
mov
stos
add
push
add
testl
loope
add
add
pop
add
push
mov
add
add
loopne
cld
push
lret
mov
loop
sahf
add
add
fiadds
mov
shl
add
test
add
ficoms
in
lcall
xor
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
iret
add
push
mov
fldt
add
mov
ja
rolb
add
cltd
cmc
add
jne
data16
mov
out
in
lea
cli
sti
rolb
outsl
sti
jae
add
icebp
add
mov
mov
aad
add
push
cltd
add
rolb
arpl
xlat
pop
sub
pop
add
push
dec
pop
mov
xor
push
add
xor
pop
add
push
push
push
push
call
add
data16
out
add
add
cmpsb
push
jbe
rcl
outsl
add
lcall
cwtl
add
add
sub
pop
add
push
push
sub
shl
pop
mov
push
push
push
push
push
push
lea
push
call
rcrb
add
xchg
fadds
add
xchg
faddl
faddl
gs
mov
add
fs
bound
add
mov
xchg
add
lahf
add
mov
xchg
add
movsb
add
jo
jmp
in
popa
mov
add
sub
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jge
mov
roll
add
mov
xchg
add
sar
add
sahf
mov
lods
add
incb
jecxz
xlat
fbld
add
add
mov
sub
pop
add
push
xor
add
dec
pop
add
push
push
push
push
lea
push
push
push
push
push
call
imul
faddl
add
repnz
imul
push
add
jb
rolb
popa
bound
jae
add
add
lahf
call
xlat
add
lcall
push
push
push
push
push
lea
push
push
call
add
add
jle
add
push
add
jo
stc
add
enter
xchg
imul
xchg
add
jne
jns
fwait
imul
mul
push
add
stc
add
sti
out
mov
xchg
rolb
movsb
push
lea
push
push
push
push
lea
push
push
call
add
data16
pop
add
pop
sarl
xorl
fs
data16
push
fwait
roll
add
in
add
add
cmpsl
add
cltd
add
sub
pop
mov
xor
push
shr
pop
or
je
push
push
call
mov
test
bound
mov
add
pop
push
add
add
mov
push
add
xchg
ret
add
pop
repnz
sbbb
jmp
filds
add
jne
fmul
loopne
pushf
int3
jo
add
scas
add
mov
add
add
repz
push
push
push
push
call
mov
add
add
data16
add
enter
bound
pop
popl
add
pop
add
mov
mov
pop
enter
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
add
mov
hlt
add
stos
add
imul
mov
ljmp
repnz
add
jge
add
jnp
pop
fstp
jl
mov
add
enter
add
subl
add
add
addb
lcall
lcall
movsb
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
add
lock
std
push
std
fsubp
add
je
scas
push
stos
cmpsb
jge
add
lcall
push
push
ror
shl
sub
push
sub
add
lea
add
inc
sub
sub
dec
inc
shr
xor
pop
not
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
fdiv
leave
add
add
jbe
out
cwtl
add
xchg
add
popf
jge
shlb
cld
xchg
sti
sub
pop
pop
push
sub
sub
xor
ror
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
cmpsl
popf
add
mov
arpl
add
add
scas
imul
loope
mov
add
xchg
roll
pushf
jae
sub
pop
mov
push
ror
shr
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
add
aam
mov
insb
add
add
mov
add
add
add
mull
push
test
add
jb
loopne
arpl
pushf
pop
arpl
add
pop
mov
add
add
add
add
jnp
rclb
add
add
fiaddl
loopne
shr
pop
push
mov
push
sub
inc
not
pop
add
push
lea
pop
push
push
push
push
push
push
push
push
call
mov
mov
add
mov
add
add
pop
add
add
aad
out
add
mov
mov
je
scas
stos
add
lcall
push
push
push
call
mov
add
cwtl
les
mov
ljmp
add
mov
mov
add
mov
add
add
jno
faddl
add
loopne
add
add
add
rcrl
hlt
lcall
push
not
add
pop
mov
pop
push
xor
shr
sub
pop
pop
push
not
lea
lea
dec
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
testl
lahf
add
fldl
add
je
add
lock
add
jno
lds
add
hlt
mov
add
add
in
fdivr
lcall
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
fadds
scas
jbe
push
add
hlt
add
add
add
add
xlat
xchg
push
filds
shll
arpl
add
add
add
rolb
in
fcomps
or
push
lea
sub
pop
push
push
shl
add
sub
sub
pop
mov
add
push
push
push
lea
push
push
call
jno
mov
shrb
add
ja
rcll
pusha
iret
fs
fmulp
pop
add
add
mov
test
mov
mov
add
int
std
shrl
into
enter
add
jbe
add
fmul
lahf
add
add
jnp
rolb
sarb
add
add
add
add
push
push
push
push
lea
push
push
push
call
movsl
mov
in
pop
iret
jns
jecxz
jge
add
out
jle
mov
call
lds
out
mov
xchg
pop
add
in
ficompl
loop
clc
add
add
testb
push
add
add
mov
mov
sarb
sub
pop
push
push
sub
sub
dec
pop
push
push
dec
shl
shl
sub
pop
push
movl
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
popf
lock
out
pop
addb
mov
lea
add
sub
pop
addl
push
push
lea
push
lea
push
call
popf
add
add
loopne
fwait
add
push
xchg
loop
lret
add
leave
add
add
add
mov
mov
push
add
into
sub
pop
test
je
push
xor
xor
pop
mov
push
add
dec
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
cwtl
mov
add
sahf
pop
mov
add
xchg
int3
add
mov
in
add
add
cmpsb
into
add
stc
ljmp
add
stc
mov
add
add
add
aad
add
pushf
std
scas
add
add
jp
ljmp
in
loopne
lcall
pop
push
add
shr
ror
not
pop
pop
push
xor
pop
leave
ret
push
push
push
push
lea
push
lea
push
push
call
add
mov
ljmp
add
add
add
pop
popa
add
js
pushf
add
in
add
add
mov
lock
jno
jo
push
add
mov
testl
jl
cmpsl
add
mov
push
shr
pop
add
push
push
shl
lea
lea
pop
push
push
push
call
add
pop
loop
cld
add
jo
add
add
add
push
add
add
lds
cltd
movl
lret
loop
add
out
add
cmpsb
pop
mov
cmc
xchg
test
add
cwtl
mov
add
add
pop
add
sub
pop
push
push
sub
sub
add
inc
pop
push
testl
push
push
lea
push
push
push
push
push
push
push
push
call
in
push
scas
push
lret
test
mov
push
add
lret
movsb
mov
jecxz
aam
add
add
pop
jae
jecxz
mov
outsl
stos
add
scas
sub
pop
addl
push
xor
pop
push
push
lea
add
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
cld
mov
add
andb
add
imul
add
add
mov
add
xchg
sti
mov
mov
add
add
jno
jmp
jnp
fiaddl
sti
test
mov
fiaddl
sahf
mov
add
add
fwait
add
sub
pop
mov
pushl
push
push
push
push
push
push
call
mov
mov
jecxz
push
add
rcl
js
add
add
add
jno
add
gs
in
sub
pop
push
push
push
push
call
pusha
out
scas
movsl
lock
mov
mov
loop
les
jnp
jns
int
add
jp
out
add
add
out
add
loopne
imul
sub
pop
push
push
push
push
push
push
push
lea
push
call
icebp
fs
add
jge
jmp
add
add
subb
add
add
mov
add
add
popa
jb
xchg
add
push
notl
in
lcall
out
clc
call
xchg
daa
mov
push
lea
push
lea
push
push
lea
push
call
add
push
cld
add
add
sti
fwait
add
icebp
pushf
xchg
jo
xchg
mov
add
add
jb
lds
pop
xchg
icebp
add
les
shr
cmpsb
add
out
clc
fcomps
cmpl
jne
push
add
pop
pop
push
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
nop
jno
loopne
cmpsl
add
mov
mov
add
fldl
addr16
into
pop
add
lret
cmc
jge
movsb
add
fistpll
jo
add
repnz
fwait
add
add
jbe
add
push
lds
lcall
push
sub
inc
pop
pop
push
push
lea
push
push
push
push
push
call
add
push
add
add
add
add
mov
leave
leave
js
hlt
add
add
add
add
add
add
mov
add
pop
mov
pop
add
push
sub
cltd
jl
add
mov
push
call
out
add
call
addl
in
lcall
push
push
push
push
push
push
push
push
call
pop
add
add
add
jb
mov
add
mov
loope
mov
loopne
mov
testl
add
call
cwtl
data16
pop
add
add
mov
mov
mov
leave
add
add
popf
enter
outsl
add
add
push
shl
add
pop
push
push
pop
mov
add
push
xor
pop
push
push
xor
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
add
add
int3
xchg
add
sti
addl
xchg
cwtl
lea
jecxz
in
fcomps
push
push
push
push
push
call
sahf
movsl
jbe
add
xchg
cmpsl
add
add
loope
gs
cmpsb
call
ja
add
add
repnz
add
add
add
mov
xchg
mov
xchg
mov
in
in
lcall
inc
cld
or
add
push
push
push
call
add
js
enter
push
stc
sti
mov
loope
add
push
scas
leave
add
push
add
nop
add
ljmp
mov
mov
add
sarb
pop
add
lcall
movsb
idiv
ljmp
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
cmc
shll
mov
xchg
add
fcmovnb
aad
bound
rclb
add
rclb
add
fildl
test
fdivr
lcall
sub
incl
push
push
push
call
gs
add
add
imul
mov
add
mov
fstl
cwtl
push
out
scas
cltd
lret
push
mov
add
add
gs
mov
jo
loop
mov
lods
jbe
add
push
jge
js
add
add
add
roll
mov
movsb
in
push
add
insb
sub
pop
cmpl
jne
push
ror
pop
pop
push
push
push
lea
push
lea
push
push
call
pushf
add
xchg
cwtl
popa
enter
add
add
pop
fadds
adc
enter
add
xchg
xchg
add
movsb
sub
pop
pop
push
rol
ror
pop
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
addr16
addr16
add
add
add
add
in
lcall
add
call
add
add
add
faddl
add
mov
fwait
xlat
ret
pushf
mov
add
add
add
lods
loop
pop
filds
push
lea
push
push
lea
push
call
add
rcl
jbe
sahf
mov
add
lea
fwait
movl
xchg
movsb
ja
lcall
mov
ret
jecxz
mov
clc
add
jae
add
add
add
pop
popa
scas
add
jl
inc
lods
lock
pop
stos
sbbb
mov
jmp
in
lock
lcall
push
push
inc
pop
mov
push
push
push
push
push
push
push
push
call
out
add
add
cmpl
add
shll
rcll
xchg
rolb
movsl
push
call
shlb
add
mov
add
jbe
popl
sub
pop
add
push
xor
pop
push
push
push
push
push
push
push
push
call
push
outsl
jmp
add
add
add
jle
mov
adc
add
jbe
pushf
mov
mov
xlat
les
aam
add
add
out
push
push
jecxz
add
add
add
add
jmp
test
add
push
jns
sub
pop
push
push
sub
shl
pop
push
push
push
not
inc
ror
pop
mov
lea
push
push
push
push
push
push
push
push
push
call
int3
addb
iret
lds
iret
add
ret
add
add
add
enter
aam
insb
in
cli
pop
rolb
mov
add
fcompl
call
push
push
push
lea
push
push
push
push
call
mov
add
add
add
cwtl
jmp
movb
stos
mov
test
imul
cli
add
mov
loop
mov
jp
add
add
lcall
call
std
add
sub
pop
add
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
out
add
popl
je
cltd
shrb
mov
arpl
fcmovnu
cmc
add
andb
aam
add
add
jl
add
pop
aam
je
add
cmpsl
mov
test
sub
pop
mov
mov
push
push
push
lea
push
push
lea
push
call
outsl
insb
add
js
jns
roll
push
push
xchg
add
add
add
add
add
out
sti
add
mov
pop
outsl
bound
add
xchg
cwtl
add
sub
pop
add
add
push
push
push
lea
push
push
lea
push
push
call
ljmp
add
fnstenv
stc
std
icebp
add
std
mov
cmc
mov
arpl
test
add
mov
mov
imul
xchg
je
add
push
mov
add
lock
in
lcall
inc
add
add
mov
cmp
fadds
mov
rolb
add
jno
add
add
imul
jnp
fs
add
shl
mov
add
push
push
add
lret
xchg
add
mov
add
roll
fadds
nop
nop
nop
nop
cmp
jne
push
add
xor
rol
pop
cmp
jne
push
ror
pop
mov
push
add
dec
sub
pop
movl
push
shl
not
xor
pop
jmp
push
ror
shl
not
sub
pop
mov
push
sub
xor
shr
dec
pop
mov
push
push
push
call
repnz
add
jecxz
out
cwtl
stos
mov
add
add
jb
push
mov
push
add
add
in
popa
jae
jecxz
add
add
notb
in
in
cmpsb
into
mov
in
addl
add
xlat
add
add
add
pop
in
add
ljmp
das
add
add
lret
ja
pop
mov
push
ror
ror
not
pop
movl
push
lea
pop
jmp
push
xor
lea
pop
mov
mov
push
rol
xor
pop
cmp
jne
push
push
lea
push
push
push
call
add
outsl
add
sti
add
xchg
sahf
jge
add
cmpsl
add
fisubs
add
test
lret
add
xchg
lods
pop
sub
pop
mov
push
shr
pop
movl
push
inc
pop
jmp
push
push
lea
push
call
xchg
add
pop
add
pop
filds
add
add
mov
jge
add
jno
fsubr
cli
jge
add
xchg
mov
xchg
add
add
add
andb
add
add
lock
pop
mov
add
imul
sub
pop
mov
cmpw
jne
push
push
lea
push
push
push
push
push
lea
push
push
call
lahf
jne
cwtl
jge
add
add
add
call
add
aam
mov
add
mov
add
in
fcompl
inc
adc
shll
popa
pop
movl
push
lea
push
push
push
push
call
add
push
push
adcb
jo
add
pushf
jnp
fadds
add
xchg
mov
add
xchg
int3
add
add
in
lcall
lret
or
add
xor
add
push
push
push
call
add
add
mov
add
add
call
add
in
jo
insb
add
add
roll
push
xchg
cmpsb
insb
add
add
cli
pop
add
push
push
fsts
clc
push
add
test
jge
add
add
loope
add
roll
bound
hlt
pop
pop
mov
push
ror
pop
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
iret
add
add
push
mov
outsl
xchg
add
mov
jbe
push
add
add
test
fidivrl
sahf
add
xchg
add
in
fdivr
lcall
push
or
les
push
ror
shr
lea
push
sub
add
dec
shl
xor
sub
dec
not
xor
pop
shl
pop
push
not
shr
pop
push
push
add
add
rol
pop
call
push
inc
xor
sub
pop
cmpl
je
push
push
sub
shr
push
or
not
add
rol
lea
sub
sub
xor
shr
pop
xor
ror
pop
push
lea
pop
push
push
push
lea
push
push
push
push
push
call
stos
mov
pushf
jmp
addr16
popa
jmp
mov
add
int
jl
rol
into
push
add
bound
test
add
add
xchg
add
jmp
jbe
add
leave
mov
jmp
add
push
mov
fnsave
fs
fst
add
pop
aad
mov
mov
in
call
push
push
call
xchg
pusha
add
shr
add
add
fildll
sti
loope
outsl
pop
mov
cld
add
add
loop
out
bound
ret
leave
je
lcall
incb
cmpsb
movsl
lock
xlat
add
filds
movsb
out
shrl
mov
add
add
add
add
sub
pop
cmpl
je
push
push
shl
add
inc
push
push
pop
add
add
rol
sub
add
inc
pop
inc
rol
rol
add
pop
push
ror
pop
push
call
push
push
push
call
add
pop
add
xchg
bound
popf
jo
je
add
add
cld
add
out
test
add
lock
add
add
les
stc
in
jno
add
xchg
imul
jne
sub
pop
cmpl
je
push
push
xor
xor
shr
push
push
pop
add
lea
sub
dec
inc
pop
add
pop
push
add
pop
push
call
push
xor
shl
shl
pop
cmpl
je
push
push
sub
inc
inc
push
or
not
add
ror
add
rol
dec
sub
inc
dec
pop
xor
shl
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
push
push
lret
filds
insb
add
add
add
in
movl
pop
add
add
add
fiaddl
xchg
movsl
add
outsl
push
add
mov
fisubrs
into
icebp
pop
add
add
mov
add
movsb
add
rolb
clc
add
add
add
add
testl
sub
pop
push
push
not
lea
pop
call
cmpl
je
push
push
add
ror
add
push
push
pop
add
dec
shl
xor
add
sub
lea
pop
add
not
pop
push
lea
push
push
lea
push
lea
push
lea
push
call
add
jns
cltd
mov
jp
addl
add
stos
xchg
lods
add
add
sti
cmpsl
mov
shl
xchg
push
mov
push
rcrl
add
testl
insb
add
add
mov
add
add
add
or
lds
push
shl
rol
pop
call
push
rol
pop
cmpl
je
push
push
inc
shr
dec
push
or
inc
add
shr
shl
sub
inc
pop
add
pop
push
push
push
call
add
jae
mov
fs
repnz
out
lcall
pusha
add
mov
jb
into
add
movsl
iret
js
lahf
lcall
stos
xchg
add
insb
add
add
add
add
filds
add
test
mov
stos
lods
add
add
cwtl
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
imul
loopne
scas
jnp
add
loope
cmpsl
add
mov
add
jae
add
icebp
add
sub
pop
call
push
not
dec
lea
pop
cmpl
je
push
push
not
inc
dec
add
push
sub
add
not
rol
sub
xor
sub
lea
pop
shr
rol
pop
push
push
push
lea
push
lea
push
push
call
sahf
ljmp
popa
mov
icebp
mov
movl
pop
add
mov
add
repnz
mov
add
incb
lock
jo
ret
lds
test
add
fcmovbe
xchg
lods
clc
xchg
add
sub
pop
push
push
not
rol
pop
call
cmpl
je
push
push
not
sub
dec
xor
push
push
pop
add
sub
add
pop
shr
xor
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
lahf
andl
lret
push
rolb
mov
add
lods
jbe
sti
add
add
scas
push
ja
nop
sub
pop
push
push
pop
call
push
push
push
call
add
mov
add
add
add
mov
add
push
add
add
add
mov
mov
out
add
scas
add
add
addl
add
cmp
rol
je
push
push
dec
push
and
add
add
add
xor
sub
sub
sub
pop
shr
shl
shr
pop
push
add
xor
shr
pop
push
call
push
add
pop
cmpl
je
push
push
lea
shl
sub
push
or
inc
add
add
sub
xor
xor
inc
pop
shl
sub
pop
push
push
push
push
push
call
add
cltd
mov
jge
add
mov
aad
jo
adc
add
pop
add
add
add
test
iret
pop
add
xchg
add
add
in
lcall
push
push
push
push
lea
push
push
push
lea
push
push
call
arpl
mov
add
add
mov
iret
add
xchg
imul
jns
stc
lahf
add
icebp
in
pusha
notb
movsl
pop
add
add
add
in
jge
add
mov
jne
test
andl
add
jle
add
jns
add
push
inc
pop
cmpl
je
push
push
shr
lea
inc
push
or
inc
add
sub
sub
add
sub
sub
shr
pop
ror
ror
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
push
add
add
cld
jo
add
add
aad
add
add
lahf
mov
ret
pop
add
add
add
add
aad
pop
lahf
add
mov
add
add
add
jae
add
push
lea
push
push
call
pop
test
add
add
add
push
jmp
cli
fwait
add
lahf
add
movl
add
in
jmp
sarl
test
stos
jmp
add
mov
add
faddl
add
addb
out
jecxz
add
in
idiv
sub
pop
call
push
push
push
push
push
push
call
ljmp
push
mov
out
add
add
add
lahf
les
add
pushf
stos
in
out
add
cmp
add
mov
add
scas
mov
fwait
scas
repnz
mov
push
push
sub
pop
cmpl
je
push
push
shr
shl
shr
push
and
add
inc
xor
shl
sub
sub
sub
add
pop
sub
pop
push
sub
shr
pop
push
call
push
xor
sub
pop
cmpl
jne
push
add
rol
add
pop
mov
push
ror
pop
movl
push
push
push
push
push
push
push
call
add
add
add
push
in
fimull
sahf
sti
cwtl
add
add
push
ja
pop
lock
xchg
push
add
xchg
add
add
js
xchg
add
test
addb
add
cmc
push
call
mov
add
add
add
pushf
adc
add
test
add
mov
push
add
push
add
outsl
add
fists
cltd
mov
mov
add
cmc
add
add
mov
add
faddl
scas
cmpsb
leave
jno
fadds
add
xchg
add
pop
add
lock
addr16
pop
xor
push
shr
ror
ror
pop
pop
push
add
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
xchg
je
lock
test
mov
add
in
push
add
mov
std
mov
add
lcall
push
shl
xor
not
add
pop
leave
push
not
rol
pop
ret
push
inc
inc
shr
add
pop
push
mov
push
push
lea
push
lea
push
call
add
add
fucomi
add
scas
jae
jecxz
pop
add
rolb
jge
xchg
outsl
add
add
add
rol
push
fs
mov
loope
add
popa
fsubr
add
add
mov
add
add
idiv
mov
shll
out
arpl
add
add
sub
pop
add
cmpl
jne
push
push
xor
push
and
add
inc
xor
sub
rol
xor
pop
ror
not
dec
shl
pop
push
push
push
call
loopne
push
roll
add
lods
add
push
add
mov
testb
cmpb
add
int
add
add
add
pop
lds
mov
add
cmpsl
jmp
in
hlt
lcall
jne
call
push
xor
pop
push
push
xor
pop
call
push
xor
lea
pop
jmp
push
push
lea
push
lea
push
push
call
std
push
add
add
cltd
mov
jno
std
add
add
pop
imul
add
arpl
mov
push
jne
sub
pop
cmpl
je
cmpl
jne
push
shr
sub
lea
pop
mov
call
push
push
lea
push
push
push
push
push
push
call
rolb
add
lcall
add
mov
out
fadd
nop
add
add
pop
add
mov
stos
add
ja
clc
add
add
pop
mov
add
add
out
popf
sub
pop
ret
push
dec
sub
pop
jmp
push
push
push
call
call
add
out
lock
jne
pop
gs
bound
cli
iret
add
push
mov
outsl
jnp
sbbb
add
add
lret
jbe
stc
filds
pop
stos
loope
in
hlt
pop
cmpl
jne
push
push
push
sub
add
add
ror
sub
sub
ror
not
xor
pop
xor
add
pop
push
shl
pop
pushl
push
push
push
call
call
add
out
add
ja
imul
filds
add
mov
test
push
mov
je
add
bound
in
add
fs
add
lea
aam
popa
jb
cld
xchg
xorb
sub
pop
call
push
push
push
lea
push
push
push
lea
push
call
jmp
loopne
add
js
neg
loop
shlb
lahf
in
mov
out
add
add
faddl
add
mov
ror
mov
add
add
fadds
data16
add
add
add
add
aad
jbe
add
lcall
add
call
push
inc
dec
pop
jmp
cmpl
jne
push
sub
rol
dec
pop
mov
push
rol
pop
mov
push
push
push
rol
push
sub
add
shr
dec
sub
shl
sub
sub
inc
xor
inc
pop
sub
sub
pop
push
shr
inc
pop
pushl
push
push
lea
push
push
push
push
push
call
mov
data16
stos
jle
std
add
in
leave
rolb
faddl
leave
jnp
add
les
add
push
pop
add
out
xchg
add
ljmp
add
stc
orl
pop
call
push
add
xor
add
pop
call
push
push
add
ror
push
or
not
add
sub
lea
shl
sub
pop
pop
push
lea
add
not
pop
pushl
push
push
push
push
push
push
push
lea
push
call
xchg
stos
add
add
xchg
add
add
or
jnp
mov
add
clc
pop
fstpt
addl
xlat
push
add
add
lods
push
jbe
je
xchg
lahf
sahf
mov
movl
call
mov
add
add
out
cmpsb
mov
add
sub
pop
call
push
push
push
push
push
push
call
mov
add
add
add
add
push
add
add
jge
repnz
add
add
test
mov
add
pusha
add
add
scas
add
add
clc
stos
add
add
push
scas
xchg
xchg
add
mov
add
mov
pop
call
push
push
shl
shl
add
xor
push
or
not
add
shl
sub
sub
pop
ror
pop
push
ror
sub
pop
pushl
push
add
sub
sub
pop
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
aam
mov
data16
stos
jne
lret
add
ljmpw
popa
jle
add
insb
add
rolb
cmc
add
add
add
add
lods
pushf
hlt
add
mov
jo
add
popa
movsl
jne
add
add
add
shrb
lods
pop
dec
push
not
push
or
not
add
dec
sub
sub
sub
shl
rol
pop
rol
pop
push
not
shl
inc
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
cmpsl
sti
xchg
mov
icebp
add
jb
addl
lret
cld
jbe
xchg
add
pop
testb
xchg
jns
lahf
loopne
rolb
add
add
pop
add
add
out
add
add
mov
imul
cltd
sahf
jne
mov
pop
call
push
xor
sub
sub
rol
pop
call
push
push
xor
dec
push
sub
add
dec
add
sub
sub
xor
not
pop
shl
not
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
pop
add
add
jnp
add
add
into
enter
add
jl
jle
add
add
jno
add
test
add
arpl
add
add
shlb
cmc
pop
xlat
add
jns
add
je
add
lret
icebp
add
mov
sub
pop
pushl
call
push
dec
shr
pop
call
push
push
add
shl
ror
push
or
inc
add
not
sub
sub
dec
rol
dec
pop
sub
xor
xor
ror
pop
push
lea
push
push
call
xchg
push
rorb
loop
mov
add
mov
mov
xchg
cwtl
add
add
lret
std
mov
pop
jmp
mov
add
add
add
popa
add
add
andb
sub
pop
pushl
push
xor
add
pop
call
call
push
push
inc
dec
push
sub
add
lea
not
xor
sub
sub
shr
shr
pop
xor
xor
shr
pop
push
pop
pushl
push
not
pop
call
push
push
push
lea
push
lea
push
push
call
mov
stc
add
add
add
ja
fwait
sahf
je
nop
add
lahf
test
jb
add
ficompl
add
pop
sti
add
mov
mov
add
add
add
add
jnp
cltd
jnp
cmpsb
lcall
push
call
call
push
push
inc
shl
push
or
inc
add
dec
sub
shr
rol
pop
add
pop
push
lea
push
lea
push
push
push
push
push
call
repnz
mov
loopne
add
sub
stos
jns
int3
lret
ret
cltd
in
loope
mov
add
push
nop
add
xchg
jle
add
add
mov
add
add
mov
jb
ljmp
roll
jmp
sarl
test
in
pushl
call
push
sub
pop
call
push
push
add
push
push
pop
add
shl
lea
add
sub
xor
rol
pop
add
ror
pop
push
push
push
push
lea
push
call
aam
movsb
lahf
add
add
xchg
incb
aam
mov
add
mov
add
add
test
add
push
add
push
lret
lods
add
lcall
jne
push
inc
shl
pop
call
call
push
push
xor
shl
rol
push
xor
add
add
sub
sub
add
shl
pop
not
pop
push
push
push
push
push
call
jge
movsl
imul
add
add
add
mov
insb
xchg
jno
add
mov
jne
add
sahf
add
out
add
jne
outsl
xorb
jge
pusha
stos
mov
cmpb
sti
pusha
add
mov
pop
xor
xchg
mov
in
in
lcall
jne
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
jp
lret
add
add
filds
add
cld
rolb
movsb
out
int
lods
in
add
add
jge
add
jl
pop
cwtl
cltd
xor
add
mov
add
jl
add
jnp
enter
xchg
add
jo
sub
pop
call
lea
push
push
lea
push
push
push
push
push
push
call
mov
fldl
jne
add
add
add
add
add
cmpsl
mov
data16
jo
add
add
add
add
xchg
mov
add
push
lea
push
push
lea
push
push
call
stos
add
add
ljmp
lret
aad
add
add
push
fcmovb
into
add
mov
movsl
push
test
add
push
lahf
cltd
pushf
movsl
add
loopne
jno
outsl
in
add
int
mov
lods
lcall
mov
mov
add
add
add
shrb
xchg
movsb
rcrl
rolb
enter
out
add
add
add
loopne
sub
lea
shl
sub
pop
pop
push
sub
dec
pop
pushl
push
sub
not
pop
call
call
push
push
ror
push
or
inc
add
add
dec
sub
rol
xor
pop
not
sub
sub
pop
push
push
push
push
call
in
add
sti
jnp
add
cli
cwtl
cmpsl
addl
std
add
mov
jl
loop
arpl
add
add
fwait
loop
fwait
add
mulb
mov
add
lcall
jne
push
push
lea
push
push
call
add
mov
add
mov
into
mov
xchg
mov
rolb
add
add
pop
fildll
sbbb
pop
lcall
add
mov
pushf
loopne
add
push
fldl
add
jnp
mov
add
pushf
pop
add
add
sub
pop
call
push
push
push
push
call
add
add
out
out
jl
add
aam
mov
js
test
movsl
add
mov
xchg
fnsave
mov
add
into
jnp
add
add
add
movl
incb
add
fbstp
push
add
in
xchg
add
push
jbe
sub
pop
call
push
push
add
push
and
add
sub
shr
shl
sub
add
xor
pop
add
inc
pop
push
rol
pop
pushl
push
not
shl
pop
call
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
add
xchg
add
add
repnz
std
call
add
ja
add
mov
rcr
popf
lret
xlat
add
add
add
cli
xchg
pop
mov
mov
add
mov
in
fdivr
lcall
shrb
xchg
addb
xor
inc
not
lea
push
sub
add
ror
ror
inc
sub
ror
pop
sub
not
pop
push
xor
pop
pushl
call
push
push
dec
rol
push
push
pop
add
shr
lea
sub
sub
rol
xor
pop
sub
lea
add
sub
pop
push
push
not
rol
inc
push
and
add
xor
add
rol
sub
xor
add
pop
add
pop
push
lea
push
lea
push
push
call
mov
enter
add
add
jbe
push
lea
arpl
add
mov
je
jne
jns
add
xchg
negb
roll
out
mov
add
add
add
mov
nop
lahf
add
mov
add
stc
lods
sub
pop
call
pop
push
add
pop
dec
jne
push
push
not
xor
push
or
not
add
shl
inc
xor
sub
shr
rol
add
pop
sub
add
pop
push
sub
dec
pop
pushl
push
lea
pop
call
push
push
push
push
call
js
std
jae
add
add
stc
push
cltd
pushf
flds
cld
jae
add
sarb
xchg
shl
add
add
mov
push
mov
aam
fldl
jo
add
add
mov
fucomip
mov
in
lock
lea
push
push
lea
push
lea
push
push
lea
push
call
add
mov
mov
push
movsl
mov
test
xchg
add
add
xor
add
jge
add
xchg
lock
out
add
rolb
sarb
jge
pushf
add
lcall
push
push
dec
add
pop
push
push
rol
pop
push
call
push
sub
pop
call
push
push
add
dec
sub
push
or
inc
add
sub
sub
sub
shr
inc
pop
pop
push
add
sub
dec
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
jo
popf
add
add
cli
mov
mov
add
xchg
hlt
outsl
orb
jl
jecxz
add
test
add
scas
mov
arpl
mov
add
stc
fs
add
test
lods
out
add
lcall
xchg
sbb
add
sbb
inc
add
add
jbe
add
imul
xlat
std
stc
mov
push
loope
add
add
add
in
add
add
push
lcall
out
je
add
lea
add
int3
lea
pop
add
mov
jbe
in
clc
pop
push
call
push
shr
shl
rol
pop
mov
push
push
add
sub
push
or
inc
add
rol
lea
dec
sub
sub
pop
shl
pop
push
shl
pop
pushl
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
clc
lods
adcb
add
lcall
fcompl
clc
add
in
out
jl
add
scas
push
add
fdiv
repnz
add
add
fstps
add
mov
add
lea
push
sub
xor
not
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
call
rolb
xchg
imul
in
push
add
push
jecxz
in
loope
jmp
lds
add
add
mov
jo
jae
add
add
add
jae
int
repnz
add
add
push
push
push
call
shlb
add
stc
jle
add
pusha
add
lods
add
into
add
add
movsb
testl
mov
cld
add
add
scas
xchg
mov
add
out
popf
loop
stos
add
pop
add
call
sub
pop
push
call
push
inc
rol
pop
lea
push
push
add
sub
push
or
inc
add
add
add
sub
dec
add
pop
shr
add
pop
push
push
call
roll
add
jmp
mov
jp
popf
leave
push
add
fiaddl
mov
std
outsl
add
mov
notb
shl
ret
add
stc
mov
jle
leave
imul
mov
add
add
nop
mov
add
add
in
clc
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
call
out
add
mov
add
add
push
loopne
add
jo
add
mov
cmc
not
add
test
add
add
loop
je
mov
add
decb
add
add
mov
add
mov
in
mov
jne
in
fcompl
call
push
push
rol
push
sub
add
shl
sub
not
not
inc
pop
inc
sub
pop
push
push
call
xchg
mov
ljmp
push
test
aam
mov
add
lahf
add
sti
add
add
jae
jecxz
std
add
int3
addb
add
int
add
int
addb
adcl
nop
enter
imul
mov
add
out
add
jmp
ljmp
jne
push
sub
pop
call
push
push
lea
push
push
push
call
ret
jo
in
mov
xchg
add
add
stc
cli
in
mov
pusha
jnp
xchg
repnz
ret
imulb
lea
xchg
add
jne
addl
mov
test
mov
push
data16
scas
mov
add
mov
aad
add
rcr
jmp
in
lcall
rorb
jp
push
push
push
push
push
lea
push
push
push
push
call
pop
mov
add
add
push
push
add
pushf
mov
addr16
scas
add
test
xchg
add
push
mov
stos
jno
fadds
xchg
cmpsb
testl
in
fcomps
pushf
and
ljmp
push
mov
rol
push
or
not
add
dec
lea
sub
not
not
sub
pop
add
sub
pop
push
push
lea
push
push
push
call
shlb
mov
test
popa
add
add
mov
pop
mov
leave
add
pop
add
jle
jmp
add
add
add
add
lock
hlt
jne
mov
arpl
add
into
pop
add
sub
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
call
add
xchg
xchg
add
pop
lods
add
add
cmpsl
jno
add
add
mov
add
add
rcl
jle
fidivrs
imul
xchg
add
add
add
lea
push
push
lea
push
push
push
push
lea
push
call
add
fadd
add
push
sahf
je
add
add
add
leave
mov
jno
mov
add
in
add
add
lcall
push
rol
inc
shr
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
ret
push
bound
mov
jns
add
data16
fisttpl
add
fwait
add
add
fistpl
add
push
ret
jecxz
add
enter
fdivr
lcall
add
jne
push
push
push
sub
add
shr
inc
xor
rol
sub
inc
inc
pop
xor
rol
rol
inc
pop
push
sub
shl
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
lds
add
ljmp
cltd
out
pop
xchg
mov
stc
iret
insb
hlt
add
in
jle
les
mov
ja
sti
mov
add
jp
add
cwtl
jge
add
add
add
xchg
outsl
stos
in
add
int3
fcmove
add
incb
sub
pop
call
push
push
add
push
sub
add
not
sub
dec
dec
sub
xor
pop
not
pop
push
push
lea
push
push
push
push
call
hlt
testl
xchg
add
icebp
add
add
int
out
xchg
filds
push
add
shlb
faddl
add
mov
push
pop
leave
add
lcall
jne
push
push
push
push
push
push
push
call
fistps
add
lahf
add
call
lret
aad
out
fildl
add
jmp
mov
fldl
push
mov
pop
in
add
xorl
add
pop
add
push
add
add
add
add
aad
sub
pop
call
push
dec
shl
pop
push
push
dec
lea
pop
call
push
push
push
xor
add
rol
sub
not
add
sub
pop
pop
push
sub
lea
sub
pop
pushl
call
push
push
push
call
movsl
mov
jb
hlt
xchg
push
shrl
lds
xorb
roll
add
add
add
test
add
in
add
les
push
add
add
add
pop
add
int3
sbbb
leave
lea
add
mov
popf
xchg
roll
add
add
rcll
lcall
rclb
addr16
push
push
push
call
jmp
jbe
mov
add
cmpsb
add
pop
aad
add
pop
rcr
scas
aad
add
mov
test
add
add
add
in
mov
loope
add
add
add
xchg
mov
add
call
add
push
inc
shl
shr
sub
pop
pushl
mov
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
imul
pop
add
lret
jne
xchg
add
add
loope
mov
add
pushf
add
loope
mov
popf
add
add
add
fwait
loop
pushf
jmp
add
lock
cmc
add
jge
xor
add
in
jmp
push
push
dec
add
push
or
inc
add
dec
ror
sub
dec
sub
add
inc
ror
pop
not
pop
push
shl
add
pop
pushl
call
push
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
movsb
add
movsl
xchg
pop
addl
xchg
add
sub
pop
call
push
push
dec
ror
push
push
pop
add
shl
sub
rol
dec
xor
sub
pop
add
sub
pop
push
shr
ror
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
call
movsb
mov
add
jmp
jbe
add
add
push
add
mov
lret
add
add
data16
loope
jp
les
addb
pop
test
outsl
pop
jnp
fwait
mov
lds
add
in
mov
mov
add
leave
test
mov
push
push
lea
push
push
call
in
push
mov
icebp
testb
add
add
popf
add
xchg
arpl
fiadds
outsl
cwtl
add
sarb
aam
add
jle
mov
sahf
roll
add
add
lret
mov
mov
add
add
sub
pop
call
push
not
inc
pop
leave
push
push
call
fldcw
add
add
mov
xchg
mov
stc
jns
add
xchg
loope
pop
jne
mov
aad
add
add
jnp
call
add
add
add
add
pop
fnstcw
sbb
loope
pop
xchg
mov
sti
sub
pop
add
push
push
push
lea
push
push
call
push
fiaddl
push
add
hlt
fidivl
stc
add
arpl
add
movsb
out
vpaddb
nop
sub
pop
pop
pop
push
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
call
add
add
add
loopne
add
int
mov
cmpsb
add
add
lret
test
mov
add
mov
in
in
lcall
rclb
adc
inc
ret
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
pop
add
add
jnp
leave
add
add
push
add
outsl
movsl
add
sti
aam
scas
cli
add
lret
test
andl
mov
popl
add
fdivr
lcall
push
shr
rol
lea
dec
pop
ret
push
sub
pop
push
push
lea
pop
mov
push
push
push
push
lea
push
push
call
mov
mov
add
cmpsl
add
loop
scas
add
jns
ret
add
pushf
push
add
add
add
add
mov
ja
add
out
add
lcall
jge
add
test
add
push
pop
mov
push
inc
shl
shl
pop
jmp
mov
push
xor
rol
pop
and
push
rol
rol
pop
xor
xor
push
push
call
pop
xlat
add
jo
int
add
jle
in
add
add
add
xchg
roll
pop
ljmp
add
add
in
add
test
add
add
add
add
ror
in
clc
pop
add
push
not
pop
xor
push
not
add
shl
pop
dec
sub
push
sub
sub
pop
jmp
push
shl
shl
pop
sub
push
push
push
push
push
push
call
add
fwait
jbe
mov
loop
fadds
lret
add
loopne
ret
mov
jecxz
mov
icebp
add
mov
popf
add
in
scas
add
add
mov
add
add
std
scas
add
add
sub
pop
pushl
push
inc
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
imul
pop
pop
add
add
add
mov
add
rclb
add
not
lret
add
sub
push
push
push
push
call
scas
nop
cmpsb
add
add
xchg
test
jmp
in
movsl
add
add
push
enter
add
out
push
ret
sbbl
add
ljmp
stos
insb
add
mov
int3
pop
ljmp
add
add
jns
loop
xlat
add
push
sub
pop
cmp
jne
push
rol
rol
lea
pop
mov
lea
push
push
lea
push
call
jae
lret
add
push
jo
adcl
mov
add
add
bnd
roll
add
push
add
add
add
fdivs
add
mov
add
add
mov
add
xchg
lcall
popa
pusha
add
in
hlt
lcall
jmp
pop
mov
shr
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
mov
add
call
xchg
add
jne
jecxz
pop
add
out
add
lcall
enter
dec
add
pop
sub
push
xor
pop
pushl
push
lea
ror
pop
pop
push
sub
shl
pop
shr
push
lea
push
push
push
push
push
call
add
addb
mov
push
lea
fadds
xchg
cli
add
add
shll
add
cli
add
lcall
mov
add
and
push
push
lea
push
push
push
push
push
call
xchg
aad
add
lock
jbe
add
add
add
mov
fcmovnu
into
add
add
jne
add
add
add
faddl
repnz
add
jmp
cmp
jne
push
push
push
push
push
lea
push
call
imul
imul
fcmovu
jno
adcl
pop
lea
xchg
in
add
mov
fdivrl
addb
push
add
stc
sti
add
add
lea
leave
push
push
push
lea
push
call
lock
push
mov
xchg
jno
add
je
pop
pop
in
fs
loopne
add
mov
fwait
add
add
filds
nop
jge
ror
add
xchg
add
add
add
add
add
test
in
lock
ret
push
push
lea
push
push
push
push
push
push
push
call
loop
add
add
in
scas
cld
lods
bound
mov
pop
add
add
add
add
add
movb
addb
outsl
imul
add
sahf
imul
add
jge
mov
in
loopne
mov
push
shl
sub
lea
pop
add
push
push
add
pop
push
push
push
pop
push
push
ror
rol
pop
push
mov
push
sub
xor
not
add
pop
lea
sub
push
lea
push
push
push
call
test
add
cmpsb
mov
mov
popa
add
mov
xlat
mov
add
add
nop
ja
movsb
enter
add
rol
add
lds
fildl
add
add
add
loope
add
movsb
add
arpl
jge
add
mov
add
lcall
adc
movb
movsb
ror
pop
shr
push
shl
xor
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
bound
pop
pop
clc
jnp
popf
subl
add
fldenv
add
add
lcall
fwait
addb
add
call
add
mov
mov
in
push
shlb
into
add
add
arpl
adcl
push
jl
push
lea
bound
mov
nop
sbbl
cmp
add
add
mov
sub
pop
add
push
shr
not
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
mulb
add
add
add
mov
add
addr16
add
add
imul
add
lahf
add
insb
ljmp
bound
js
add
fucomip
xchg
mov
push
out
add
ja
add
sti
leave
jo
roll
add
lcall
testb
mov
sbb
and
jb
mov
lea
push
call
add
mulb
pushf
add
aam
add
popf
lds
jge
hlt
add
fstps
in
jle
push
add
cltd
add
add
mov
add
add
sub
pop
and
rol
push
rol
pop
rol
push
inc
shl
pop
xor
push
inc
shl
pop
inc
push
lea
push
call
add
cwtl
pop
add
mov
mov
ljmp
add
push
add
pop
cmpsl
add
pop
add
add
mov
mov
pop
js
add
stos
jnp
insb
out
add
test
in
clc
pop
cmpb
jne
add
push
sub
sub
not
pop
cmp
je
push
push
lea
push
push
push
call
xchg
out
add
add
repnz
xchg
mov
shlb
add
mov
incb
mov
xchg
mov
add
mov
cld
pop
mov
xchg
pop
add
jnp
movsl
add
mov
int
jb
pusha
shrb
add
cli
sub
pop
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
mov
add
movb
add
rolb
ja
push
add
add
mov
jmp
push
add
add
pop
mov
out
add
sub
pop
cmpl
jne
xor
push
not
inc
add
dec
pop
pop
push
push
push
push
push
push
call
mov
in
movsb
roll
add
push
add
add
fadds
lds
add
add
jo
movsb
flds
add
sub
pop
pop
push
push
push
push
push
push
call
add
pusha
aad
add
lock
add
jl
mov
add
mov
push
out
add
add
add
add
mov
add
add
addr16
pop
pop
pop
push
ror
sub
rol
pop
pop
leave
push
shl
xor
not
pop
ret
mov
push
lea
push
push
call
add
add
imul
push
jecxz
cmpsl
cmpb
xchg
add
add
jbe
jmp
add
add
add
add
call
mov
pop
mov
add
add
iret
add
add
stos
add
hlt
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
call
outsl
fsubr
mov
add
jp
xchg
add
push
test
add
outsl
addl
cwtl
lret
push
sub
pop
mov
push
push
xor
pop
mulw
pop
push
push
call
mov
mov
cltd
mov
xchg
scas
mov
bound
cmpsl
add
jnp
add
filds
add
add
add
add
jae
add
add
lret
pop
popf
add
popa
movsb
add
add
add
lock
ret
call
mov
push
call
push
dec
sub
ror
shl
pop
xor
push
push
push
lea
push
push
call
add
lret
add
movb
jo
push
roll
add
shll
add
insb
add
loop
outsl
pop
add
mov
xlat
aad
add
xchg
incb
mov
add
mov
in
in
pop
pop
push
rol
shr
pop
pop
push
add
xor
inc
pop
pop
push
dec
not
add
pop
pop
push
dec
add
dec
xor
pop
pop
leave
push
sub
pop
ret
push
push
sub
pop
mov
add
push
sub
sub
add
rol
pop
push
push
push
push
call
xchg
flds
add
gs
sti
mov
mov
fcmovnbe
add
enter
mov
shlb
je
add
add
scas
into
addl
add
cmpsl
mov
add
in
in
add
jae
add
addl
add
lret
ja
add
mov
pop
clc
pop
test
in
hlt
lcall
push
add
pop
push
push
shr
xor
pop
push
push
push
push
push
lea
push
push
call
add
add
mov
roll
sahf
les
add
outsl
mov
add
xchg
mov
jbe
out
mov
lcall
xchg
add
lcall
pop
or
push
push
call
add
jns
mov
jmp
cltd
mov
xchg
mov
les
mov
jae
add
mov
xchg
add
add
jecxz
xchg
in
fists
add
in
lds
add
mov
add
add
in
hlt
pop
pop
push
push
call
in
add
pop
addl
add
ljmp
add
add
enter
testl
add
add
jns
add
push
cmp
sub
not
add
pop
sub
push
sub
add
add
pop
mov
push
add
add
pop
shr
add
push
ror
add
sub
inc
pop
mov
push
pop
add
pushl
push
pop
popl
mov
push
push
push
call
pop
lods
mov
jnp
add
jmp
stc
add
pop
add
jns
add
popf
xchg
jo
nop
push
test
xchg
mov
jbe
xchg
fdivrs
pop
xchg
cmc
add
add
add
add
push
jnp
xchg
jne
lret
pop
mov
in
hlt
pop
add
xor
push
pop
lea
mov
push
shl
shr
pop
add
push
pop
xor
push
shr
pop
rol
push
push
lea
push
push
push
push
push
push
push
call
add
mov
mov
mov
mov
popf
xchg
add
lret
out
fbld
push
add
add
push
add
add
push
add
cltd
add
sti
add
aam
repnz
lcall
push
push
call
mov
call
in
add
lock
testl
xchg
mov
add
mov
add
cli
shrl
imul
xchg
jno
movl
mov
xchg
add
add
add
int3
add
sti
mov
push
in
clc
lcall
xor
push
shr
pop
nop
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
fisubrs
mov
hlt
hlt
aad
cltd
pop
xchg
add
pushf
pushf
add
mov
pop
add
jp
cwtl
sti
add
stc
lcall
add
add
sub
into
std
rcrb
cmc
shlb
add
mov
add
in
fdivr
lcall
inc
push
rol
pop
nop
push
add
pop
nop
cmpb
jne
push
inc
sub
sub
pop
add
nop
push
push
lea
push
push
push
push
push
lea
push
call
add
jmp
test
lahf
add
add
push
add
add
lahf
popf
xchg
add
fwait
add
add
iret
scas
push
movsb
mov
cltd
jle
xchg
sub
pop
nop
cmp
je
push
inc
sub
add
pop
nop
push
lea
push
push
lea
push
call
lods
js
faddl
add
mov
repnz
stc
add
aam
add
aam
add
sahf
pop
clc
cmpsb
mov
add
int
mov
cmpsl
notl
out
pushf
scas
test
push
add
add
add
sub
pop
inc
nop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
stos
mov
jne
mov
in
cmpsl
in
add
notl
fistl
test
call
add
add
jle
mov
add
lcall
push
lea
push
push
push
push
push
push
push
push
call
push
fwait
add
add
aam
add
jnp
add
add
add
popf
add
int3
stos
add
clc
xlat
jno
mov
add
nop
sub
pop
cmp
jb
push
lea
pop
xor
jmp
push
add
ror
pop
mov
push
add
pop
add
push
add
lea
pop
movzwl
push
push
lea
push
lea
push
push
call
add
mov
cmpsl
pop
add
lcall
xchg
add
popa
pop
jle
add
add
add
icebp
add
add
pusha
add
test
sub
mov
add
add
imul
add
addl
add
out
mov
mov
add
inc
sbb
rcll
ds
pop
mov
xor
push
not
sub
pop
xor
shl
push
sub
inc
pop
xor
push
inc
pop
shl
xor
push
not
pop
shl
push
dec
sub
add
pop
xor
mov
push
push
lea
push
push
call
add
lcall
or
add
in
data16
add
add
jbe
rcl
push
add
push
mov
pop
jnp
imul
ficoml
jp
sub
pop
add
push
add
dec
pop
pop
pop
push
push
push
call
scas
add
add
add
lret
push
add
imull
test
fwait
cld
iret
add
mov
add
out
fwait
jle
mov
cwtl
xchg
out
pop
mov
add
mov
stos
xchg
ror
je
mov
push
xlat
mov
mov
fwait
mov
add
test
mov
sub
pop
pop
pop
push
pop
leave
push
lea
push
push
push
push
push
call
fsubl
add
addl
add
movsb
fcompl
lret
divl
mov
mov
push
lret
push
mov
mov
add
add
jle
add
hlt
add
lcall
or
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
out
mov
out
add
fadds
ret
mov
movsl
stos
mov
out
test
add
fsubs
add
add
add
pop
add
roll
jle
cmpsb
pop
add
push
add
rolb
insb
lea
xchg
mov
sub
pop
mov
push
push
add
sub
sub
pop
push
push
push
push
push
push
push
call
add
imul
ret
out
aam
rolb
add
add
in
shrl
add
add
mov
jge
mov
je
stos
add
add
add
add
lcall
push
sub
pop
mov
push
sub
inc
pop
mov
push
ror
pop
mov
push
push
push
push
push
call
mov
add
add
add
add
add
jo
add
test
jmp
add
pop
add
lahf
add
pushf
mov
add
mov
rolb
add
shrb
add
add
bound
add
mov
popf
addb
movb
addl
pop
test
je
push
shl
not
inc
pop
mov
push
push
push
lea
push
push
lea
push
call
add
scas
jecxz
xchg
xchg
gs
mov
movsl
add
add
add
lds
pop
add
cld
add
pop
test
je
push
ror
dec
shl
rol
pop
mov
push
lea
pop
mov
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
incb
add
add
les
ror
add
pushf
add
add
mov
xchg
mov
mov
push
jbe
loop
add
mov
push
sub
pop
cmp
je
test
je
push
inc
add
pop
mov
inc
push
push
push
push
push
push
push
push
push
call
jne
add
add
jp
add
test
jle
add
jl
mov
lock
in
add
mov
hlt
loopne
add
add
mov
add
test
stos
hlt
pop
movb
fwait
lock
jae
add
mov
mov
add
add
fiaddl
add
lcall
rorb
test
shl
inc
not
pop
test
jne
push
lea
push
push
push
push
push
push
call
leave
fs
xchg
add
addl
add
sti
cmpsl
pop
mov
add
test
out
add
add
out
jp
subl
ror
out
movsl
push
je
in
in
lcall
rcrb
add
jnp
push
push
call
cli
add
xchg
add
stos
push
std
mov
stos
xchg
lds
add
ja
xchg
mov
add
mov
push
add
mov
mov
js
clc
push
mov
sub
pop
pop
push
push
push
push
lea
push
push
call
pop
mov
loope
mov
add
ret
jp
rcll
add
mov
add
in
call
lock
pop
leave
push
lea
push
push
lea
push
push
call
add
repnz
xlat
pop
add
add
jae
fwait
add
xlat
cli
ja
mov
add
cmpsl
add
aam
xchg
subl
pusha
cwtl
xchg
cli
push
mov
xchg
mov
imul
rcr
loop
div
jnp
gs
jle
insb
xlat
add
scas
gs
add
sub
pop
ret
mov
push
rol
pop
inc
cmp
jne
push
shl
sub
shl
xor
pop
lea
push
not
pop
mov
test
je
push
lea
push
push
call
mov
jns
ljmp
push
xchg
shlb
mov
enter
rcll
add
add
movb
pop
mov
push
push
lea
push
push
push
push
push
push
call
mov
add
addb
leave
add
add
lea
jae
mov
popf
mov
stc
rolb
insb
add
add
loop
xchg
ljmp
pop
add
push
lea
rol
pop
cmp
jne
push
push
push
push
push
call
iret
loopne
loope
lret
add
add
pop
push
jbe
pop
add
add
mov
add
add
in
cmpsl
bound
mov
mov
push
add
add
push
out
mov
pusha
lahf
mov
add
int3
add
add
mov
add
push
mov
add
sub
pop
mov
test
je
push
sub
pop
mov
add
push
shl
pop
cmp
je
push
push
push
push
push
push
push
push
lea
push
call
cwtl
add
jle
scas
addr16
add
ljmp
aam
jmp
add
je
push
add
out
std
pushf
jo
in
fdivr
lcall
xchg
sti
call
cli
pop
xor
push
push
lea
push
push
lea
push
call
lcall
mov
cltd
add
xchg
lcall
mov
mov
add
loop
add
add
jnp
pop
loop
clc
jae
jmp
cld
repnz
mov
jne
stos
test
div
add
xchg
add
loop
stos
xchg
jo
in
fdivrs
jbe
in
in
lcall
push
rol
add
pop
pop
push
push
push
lea
push
push
push
call
out
gs
fldl
lock
stos
jne
fimull
int
add
pop
add
sbbl
jno
add
std
gs
mov
add
add
xlat
mov
mov
add
mov
cld
movsl
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
call
add
push
add
xchg
mov
mov
mov
insb
mov
add
add
adcb
incb
add
xchg
pushf
mov
leave
push
not
pop
ret
push
xor
add
lea
pop
lea
push
push
push
push
call
insb
addl
add
pop
jge
add
in
mov
add
add
test
lret
addr16
add
jmp
lods
rolb
mov
test
add
mov
add
add
add
add
add
in
lock
pop
push
add
pop
pop
pop
push
not
rol
add
dec
pop
pop
push
push
push
call
add
xchg
popa
rcrb
add
test
pop
cltd
pusha
movb
add
add
roll
add
add
xchg
add
orb
add
mov
in
hlt
lcall
push
ror
shr
pop
ret
push
push
call
jae
mov
mov
xchg
pop
xchg
add
add
add
addb
add
lea
stos
fildl
out
add
push
pop
mov
add
out
push
push
lea
add
lret
push
add
mov
pushf
add
testb
push
push
push
push
push
push
push
call
add
in
add
gs
jle
cwtl
test
scas
sahf
leave
pop
add
mov
imul
pop
add
xchg
mov
mov
imull
mov
jne
scas
pop
add
mov
sti
stc
fmuls
in
lcall
push
dec
inc
lea
inc
pop
pop
push
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
data16
ret
mov
add
rcll
xor
fwait
mov
add
arpl
add
add
mov
jmp
add
add
popa
add
mov
push
sti
add
popf
cmpsb
mov
mov
in
fcompl
leave
push
lea
push
lea
push
push
call
add
lcall
add
add
push
hlt
scas
push
add
xchg
test
jb
lret
add
in
sahf
mov
fadds
fistps
faddl
add
add
lcall
add
add
cmc
fiadds
add
add
rcrb
add
data16
pop
std
add
add
add
stos
out
add
movl
gs
pop
ret
xor
cmp
sbb
adc
add
adc
and
adc
cmp
xchg
pop
cmp
and
adc
popa
cmp
xor
adc
mov
add
out
push
push
gs
push
shlb
shrl
orb
add
xor
push
sub
fldenv
adc
je
gs
ja
outsl
inc
scas
jbe
sbb
daa
inc
call
stos
inc
stos
das
pop
pop
stos
add
test
add
jae
pop
daa
int3
mov
inc
add
cmp
test
js
std
int3
push
ss
aaa
sti
fimuls
pop
push
lret
into
jnp
aam
pushf
enter
loop
mov
xor
shrl
mov
fsub
mov
and
or
sbb
xchg
js
dec
sbb
cmp
mull
pusha
push
mulb
push
mov
test
pop
rcll
jne
mov
pop
push
popa
call
nop
test
dec
test
cs
sub
jne
es
icebp
cltd
xchg
or
nop
out
outsb
repz
arpl
and
adc
push
lds
xchg
push
iret
movsb
pop
pop
pushf
xor
rcrb
push
icebp
mov
scas
insl
test
or
mov
pop
xor
es
adc
cmp
xor
xchg
mov
push
mov
push
loope
add
out
cs
stc
fisttps
mov
iret
jo
leave
mov
dec
sub
stos
mov
lods
rolb
or
pop
outsb
xchg
jo
insl
rcr
mov
loopne
leave
push
idivb
xlat
je
cwtl
xor
pop
add
jp
jg
jecxz
jp
inc
sub
test
loop
cmp
dec
mov
jp
cmp
lods
daa
sbb
xchg
dec
call
imull
cltd
outsb
adc
popa
gs
push
push
loope
add
stos
jnp
jbe
sub
inc
shrb
push
lea
lods
rorl
rolb
ds
inc
xchg
adc
testl
rolb
push
cs
rcrl
in
pop
sbb
and
adc
pushf
xor
cmp
ljmp
je
les
and
xchg
jmp
sbb
sbb
rolb
mov
js
mov
xor
jno
sub
cmp
pop
test
sbb
and
sbb
stc
dec
xchg
and
fidivs
pop
push
rorb
dec
mov
shl
cmpl
movsl
mov
pop
fwait
xor
lahf
mov
mov
sbb
rcrb
cli
lret
or
je
imull
xor
jo
jge
mov
sbb
inc
push
xlat
inc
adc
test
xlat
or
pushf
xchg
test
fnstsw
and
jnp
movsl
pop
xor
mov
adc
push
xchg
jnp
sahf
dec
and
dec
outsl
or
fstl
cli
mov
pop
sahf
mov
ljmp
pop
dec
aad
cmc
jg
sub
mov
pop
or
loop
das
xor
xor
fsubr
pop
xchg
xor
push
or
mov
push
cmp
cs
mov
mov
imul
insb
inc
adc
cmpb
and
out
mov
adc
or
mov
pop
test
cmp
lahf
jnp
int3
fs
ja
xlat
adc
scas
inc
mov
cltd
cmp
insb
and
cmp
repnz
pop
cltd
testl
scas
cmp
add
cmc
pop
mov
xor
mov
enter
stos
adc
xor
fwait
and
jecxz
pop
sub
inc
jne
into
shlb
mov
inc
stc
lret
mov
aad
mov
lret
mov
addr16
cmp
shr
pop
stos
popa
jbe
sub
xchg
pusha
out
jo
repz
pop
sbb
cmp
jmp
jae
fcmovnb
or
test
pop
cmp
or
cmp
stos
cmovb
test
lahf
cmp
adc
shll
out
jns
push
int3
hlt
pop
stos
andb
out
popa
or
inc
mov
movaps
ror
dec
mov
lods
add
std
or
and
andl
and
fwait
inc
out
jne
dec
leave
mov
shlb
in
test
shlb
out
mov
lock
jns
cmc
ljmp
sarb
cmpsb
scas
or
loopne
data16
out
xchg
mov
jecxz
stos
fsubrl
call
mov
lret
rorb
mov
or
jb
neg
scas
push
rolb
jnp
leave
xchg
arpl
sub
lods
pop
pushl
inc
sub
clc
mov
pop
jae
mov
addr16
xchg
lahf
lret
ret
shll
push
or
sub
outsb
int3
inc
inc
jg
cmp
jb
adcb
pushf
js
insb
mov
sbb
mov
adcl
repz
pop
and
and
ja
push
mov
lock
fwait
lods
aam
dec
push
es
cmp
divl
jnp
pop
mov
fistl
int
rolb
xor
dec
loop
mov
cmpl
mull
pop
repnz
mov
mov
push
aas
je
jmp
mov
mov
leave
adc
mov
jmp
mov
mov
push
out
mov
mov
mov
jb
ret
lret
sbb
outsl
les
add
mov
icebp
sub
add
jo
pop
sbb
xor
pop
cli
xchg
out
fildll
push
mov
daa
sbb
jg
pop
pop
shr
sub
sahf
mov
and
cs
or
dec
or
mov
xor
adc
iret
out
iret
dec
sub
inc
aas
pop
addl
test
sub
mov
int3
hlt
aad
mov
mov
sub
xchg
andl
xor
popa
and
mov
lahf
fisttpll
lret
cltd
sub
pusha
xor
movsl
movsl
push
outsb
jbe
xchg
aad
pop
pop
int
out
dec
push
roll
jne
jp
outsl
or
pop
xor
xor
in
and
orb
dec
daa
les
xor
rorb
mov
outsl
lcall
push
or
cld
mov
dec
push
stc
ret
jnp
sub
inc
orl
aas
loopne
movsl
pmullw
push
pop
jb
arpl
cmpsb
aam
out
cld
jbe
fwait
clc
xchg
mov
punpcklwd
cmpsb
push
inc
fstpt
sbb
adc
xchg
rcrb
pushl
aas
pop
lds
mov
shlb
ds
fisttps
adc
or
std
mov
inc
jae
ret
push
loop
sbb
jae
cmp
mov
fs
std
dec
dec
test
sub
dec
and
shll
dec
and
push
jo
jp
mov
mov
mov
push
into
stos
sbb
in
xor
loopne
gs
insb
xor
scas
mov
jns
add
jp
gs
pop
or
sti
scas
outsb
insb
fsubr
lods
lods
jb
push
outsb
mov
sub
fcomp
lods
shlb
jecxz
dec
dec
sbb
mov
xor
dec
mov
sub
xor
and
push
add
dec
sbb
mov
mov
push
jle
xor
in
jae
lret
sbb
xchg
lcall
in
push
adc
ret
fsub
inc
inc
outsb
lret
aas
es
and
xchg
mov
dec
jp
xchg
icebp
negl
jmp
mov
cmp
ret
ss
loop
mov
mov
sbb
inc
ds
add
sarb
cli
push
jl
ror
sub
xchg
mov
mov
sbb
aad
bnd
mov
je
inc
xor
fwait
xchg
cld
jo
xchg
sub
inc
sub
daa
adc
sub
mov
pop
int3
jbe
jb
pop
lcall
cmp
xchg
sub
cmpl
insl
and
iret
aam
pop
call
jae
jmp
pop
outsl
int
rcrl
mov
xor
adc
scas
stc
push
fdivrs
insl
cld
fldenv
and
lret
sbb
jne
jb
pop
fsubl
mov
xchg
enter
sub
mov
sarl
test
lea
sub
stos
sub
lret
or
hlt
xchg
lcall
sbb
pop
jb
arpl
jg
mov
pop
sub
scas
nop
and
mov
pop
daa
pushf
sub
out
or
jbe
in
pushf
add
out
dec
mov
imulb
push
xchg
aas
and
lods
xchg
test
sti
les
in
aaa
lods
push
push
sub
inc
sarl
pusha
loope
leave
enter
mov
int
sbb
xorl
icebp
insb
sub
dec
in
mov
fidivrl
inc
loop
dec
add
xchg
fsubrl
rcll
rcl
dec
shlb
mov
pop
mov
cltd
mov
clc
add
icebp
scas
call
jae
mov
ljmp
shrl
dec
mov
xor
test
daa
shlb
pushf
stos
stc
arpl
adc
pushf
add
push
push
test
arpl
out
mov
sub
mov
lcall
fyl2xp1
ss
mov
xchg
jbe
loop
subl
ret
in
mov
ss
adc
pop
pop
jne
adc
cmp
int
mov
sbb
sti
cmp
push
addb
push
pusha
cmc
add
sti
cmp
xchg
and
jae
ret
sbb
xchg
lret
xor
xor
hlt
xchg
cmp
pop
cmpsl
cld
xchg
xor
push
jle
je
fmuls
jp
ss
ljmp
jmp
stc
inc
adc
insb
mov
sub
sbb
ljmp
pop
lcall
adc
loop
jmp
aad
ljmp
pop
push
xchg
fisubrl
movsl
dec
add
imul
pop
fidivrs
mov
ja
add
in
sub
out
movsl
pop
aaa
dec
js
cltd
test
enter
leave
loope
cmpsb
dec
jmp
inc
push
jno
fidivs
lods
lods
adc
lcall
cmpsb
stos
mov
xchg
jg
aas
rcll
mov
or
sub
push
and
pop
lcall
fwait
and
icebp
and
dec
scas
ret
cmp
sbb
insl
pop
repnz
and
jne
pop
cmc
lahf
sub
repnz
aad
mull
and
js
pop
inc
lock
pusha
into
mov
aaa
in
xor
sbb
jnp
lret
mov
sti
push
mov
jg
jae
adc
aam
sub
xchg
in
std
fwait
imul
push
mov
fdivrl
insl
xor
test
hlt
shl
jae
mov
scas
jecxz
mov
js
dec
popa
leave
lock
dec
push
enter
xor
adc
jno
and
mov
test
dec
mov
xchg
cmp
mov
xchg
and
stos
fnsave
aas
dec
cmpsb
sbb
repz
scas
out
mov
imul
imulb
mov
jl
les
dec
mov
je
pop
jg
and
test
jb
lahf
std
fs
in
in
outsb
int3
inc
mov
shrb
loope
test
add
and
cmp
xorl
xchg
in
and
and
pop
mov
add
xchg
out
dec
jno
sbb
push
push
out
adc
fwait
mov
pop
popaw
jp
mov
mov
movsl
outsl
xchg
int3
xchg
pop
cltd
mov
jmp
add
adc
inc
sbb
mov
sub
popf
adc
jae
jnp
imul
divl
pop
pop
inc
sbb
cmpb
mov
cld
pop
sbb
mov
dec
dec
sub
add
lret
icebp
mov
js
jb
inc
das
push
scas
shll
adc
xchg
adc
test
xlat
jnp
aaa
insl
push
sub
and
push
xchg
sbb
push
aam
lahf
dec
adc
cs
out
cwtl
lds
push
fsub
cmp
mov
cwtl
xchg
sti
push
xor
pushf
xchg
adc
pop
or
xchg
test
jne
jecxz
push
jge
cs
sub
in
push
or
pop
testb
dec
inc
pusha
push
cli
test
pop
repnz
mov
xchg
out
mov
jg
mov
or
inc
xor
pop
dec
fistps
into
push
cmp
push
pop
xor
mov
arpl
mov
sbb
push
out
jo
aaa
scas
push
cmp
push
sbb
in
mov
arpl
es
pop
sti
out
cmp
mov
cmp
addr16
scas
mov
cmp
lods
sbb
xchg
insb
inc
push
mov
int
test
ficoml
pop
mov
shrb
aad
jp
subb
addr16
test
dec
mov
mov
push
repnz
nop
enter
aam
lcall
cmp
out
ds
mov
lea
rcrl
fwait
shlb
leave
push
divb
icebp
push
xchg
fdivl
or
mov
pop
std
mov
out
rorb
jg
movsb
jo
aam
ss
notb
fs
in
mov
mov
out
enter
dec
jae
inc
push
dec
xor
mov
aam
stos
pop
in
jns
jge
mov
lods
sbb
dec
push
mov
or
notb
or
les
ds
clc
rol
sahf
push
fldlg2
jl
stc
insl
pop
jno
adc
sbb
movsl
sti
add
xchg
or
inc
sbb
lahf
in
aaa
in
xor
aas
leave
in
jae
push
push
mov
add
adc
push
xchg
sub
shll
mov
fsubs
adc
scas
scas
fistpll
fdivs
adc
popa
xor
aam
arpl
cld
insb
dec
les
adc
pop
inc
rcrl
pop
subl
and
rcrl
loop
and
adc
jno
pop
push
ss
xchg
or
fcompl
sub
pop
or
mov
jmp
xlat
jno
test
fsubrl
shlb
popa
pop
cmp
sub
imul
pop
movsb
and
fmuls
loopne
es
inc
stos
ret
add
xchg
ja
jmp
jnp
loope
jmp
repz
adc
into
sbb
sbb
inc
iret
add
stc
and
jl
push
lock
xchg
xor
scas
adc
mov
mul
aas
rolb
addr16
mov
es
outsl
mov
imul
fcmovbe
mov
test
sbb
imul
enter
int3
out
cmpsl
lea
mov
mov
int3
sbb
out
jp
ficoms
inc
inc
dec
dec
mov
and
aaa
je
sbb
clc
sub
aam
test
adc
lods
adc
sbb
xchg
sub
mov
pop
test
stos
and
popa
clc
cmp
push
lahf
jnp
pop
sub
and
data16
imul
je
out
mov
mov
dec
nop
das
aad
bound
test
movsb
scas
lahf
imul
enter
test
and
nop
inc
pop
movsl
and
inc
mov
loope
bound
jns
outsl
imul
in
xchg
mov
xor
hlt
cld
jns
pushf
dec
jge
stos
xchg
dec
mov
movsb
cmpsb
pop
enter
add
stos
cli
out
repz
jl
jp
cld
imul
dec
repnz
cli
mov
cmp
mov
adc
cld
or
insl
mov
mov
sbb
jns
push
dec
jle
inc
xchg
insb
dec
jnp
hlt
pop
xchg
movsb
cmp
jle
aas
xchg
mov
mov
scas
stos
dec
pop
or
cmc
sbbb
cwtl
push
inc
add
add
cmp
sbb
cmp
arpl
popa
cmp
pusha
add
les
imul
jle
mov
mov
and
imull
or
add
loopne
jge
inc
shlb
push
aad
in
push
call
jbe
mov
divl
xor
xchg
dec
pop
cmp
call
movsb
jge
xorl
out
xlat
sbb
inc
bound
add
dec
xor
in
add
inc
jmp
jecxz
ja
dec
lret
inc
aad
adc
in
data16
push
pop
mov
mov
jne
inc
mov
xchg
in
cmp
add
scas
push
std
fistps
out
imul
mov
sbb
je
ret
mov
loope
cs
fisttpll
ds
pop
aad
sub
fists
imul
sti
clc
inc
test
scas
xor
pop
dec
or
xor
fidivrs
inc
xor
push
mov
into
sbb
cli
jno
add
aad
fwait
pusha
mov
cmc
std
sub
insl
cmpsb
xchg
xor
xlat
sub
movsb
add
fdivrs
ljmp
je
jg
inc
xchg
lods
ror
push
cmp
xchg
jl
xor
and
inc
sub
adc
mov
sbb
jmp
push
dec
mov
add
cs
mov
mov
je
jp
cli
aas
insb
or
and
cmp
or
pop
data16
dec
mov
xchg
adc
in
xchg
push
idiv
lcall
mov
lods
mov
mov
out
xchg
inc
pop
or
sub
mov
addr16
pusha
jbe
mov
int
sub
inc
test
sbb
mov
into
pushf
cmpsl
lcall
adc
push
mov
outsl
push
mov
sub
jb
mov
in
jp
xor
jl
pop
stos
adc
or
fcompl
ds
cmpsb
xlat
scas
fdivr
xor
test
loopne
ret
adc
adc
xchg
mov
pop
jecxz
js
xchg
cld
arpl
inc
movsb
add
shl
out
mov
inc
rcrl
mov
ds
bnd
fidivs
dec
adc
mov
call
aaa
push
pushf
lods
out
jecxz
xor
xchg
inc
call
mov
push
in
mov
filds
cmpsl
lods
push
push
imul
cltd
inc
mov
loop
xor
enter
cld
fwait
into
xchg
mov
test
scas
test
orb
aad
push
jmp
and
icebp
roll
cmp
push
or
mov
or
push
insl
push
cmp
xchg
daa
push
outsl
push
sbb
pusha
adcb
outsb
xor
cmp
popa
dec
and
hlt
scas
jae
nop
pop
ret
call
pop
in
cs
adc
data16
divb
mov
shld
adc
ja
push
lds
pusha
fadds
lret
mov
data16
pop
pushl
outsl
mov
xor
std
in
lock
out
aam
mov
mov
jo
xor
mov
fisubrl
dec
xor
jge
mov
and
aas
loope
inc
lea
cmp
and
lods
pop
lret
mov
pop
xchg
cmp
dec
xchg
pop
sbb
addb
jne
mov
in
inc
stos
sub
sub
out
lret
and
mov
add
nop
lock
cmp
xchg
jp
shlb
shrl
mov
jecxz
inc
sti
mov
sahf
popa
dec
pop
xchg
sbb
adc
and
rcrb
adcb
int
test
rcll
insb
out
clc
push
mov
lock
lods
dec
xchg
out
jle
jl
hlt
xchg
push
push
mov
fldcw
lods
nop
fnstcw
or
lret
pop
cmpl
std
movsl
pop
xor
dec
jmp
jl
in
sub
leave
out
or
ljmp
cmp
xchg
or
jge
lahf
sbb
out
test
pusha
or
sub
jl
cmp
or
dec
jmp
out
push
dec
add
mov
test
pushf
dec
adc
push
and
adc
sub
pop
sub
xorb
push
in
sbb
mov
test
adc
loop
dec
jge
push
xchg
pop
sbb
pop
push
subl
test
pop
dec
lods
test
nop
jbe
and
xor
jb
sahf
xchg
stc
sahf
repz
and
lret
add
push
xchg
push
inc
mov
jns
and
sub
xchg
ss
pop
lret
sbb
push
lock
in
and
jecxz
mov
into
fildl
mov
add
lds
adc
insl
movsb
aaa
nop
jmp
test
sub
scas
mov
fwait
js
mov
cmp
push
xor
mov
les
jb
add
mov
idiv
out
mov
int
movb
hlt
add
stos
ror
and
les
outsl
lea
and
fiadds
dec
xchg
jo
test
add
icebp
je
out
ret
stos
fsubrl
aaa
mov
adc
jb
sahf
neg
add
jle
call
jne
aas
hlt
jge
push
int3
xchg
sbb
mov
sbb
pop
sbb
inc
mov
in
lcall
cmp
add
outsb
ds
fisubs
ss
sbb
mov
push
movl
add
popf
push
adc
in
cmpb
loop
iret
sbb
and
test
jne
hlt
fistps
jl
add
cmpsb
icebp
fs
jge
call
addb
ja
cmp
xor
sub
loopne
mov
addr16
mov
cmp
lahf
movsb
test
sub
sub
and
add
push
mov
jo
lea
and
xor
mov
xor
and
repz
lock
xor
xchg
push
push
pop
dec
sub
sub
testb
jae
xchg
ds
stos
mov
pop
mov
mov
xchg
out
fcmovnbe
es
push
and
repz
jge
insb
stos
xchg
das
out
test
sub
jp
or
xchg
movsl
sub
fiaddl
lods
mov
adcl
and
push
pop
int3
push
sbb
cmp
outsl
bound
add
cmpsl
mull
daa
add
das
pop
test
in
xor
inc
ds
jno
stc
repz
repnz
divl
daa
outsl
and
mov
sbb
rcll
dec
movsb
sbb
cmp
xchg
mov
and
add
in
xchg
mov
push
in
les
xchg
popl
pop
cs
sub
mov
push
pop
sub
inc
sbb
add
cs
sbbl
andb
sbb
or
sub
xchg
or
je
xor
clc
imulb
repz
mov
lret
fdivr
lret
stos
adc
sbb
pop
push
lds
jno
pop
adc
pop
xlat
and
push
lret
and
pushf
jo
mov
jno
std
shll
adc
push
fstl
fsubrl
fsubrs
sbb
mov
lock
popa
sub
sub
ljmp
enter
mov
lret
icebp
cmp
jmp
jge
fadds
stc
bound
inc
fdivl
xchg
roll
jne
test
gs
xchg
sbb
xchg
mov
and
inc
sbb
adcl
outsb
mov
std
sti
inc
pop
les
push
push
pop
and
out
inc
movsl
pushf
rcrb
xchg
mov
aad
and
mov
cld
jmp
in
inc
addr16
int
jg
mov
stos
in
divb
or
push
shrl
mov
out
inc
inc
test
dec
mov
push
in
sub
add
push
insl
push
inc
into
or
jmp
jbe
mov
out
int3
mov
xor
xchg
test
sub
pusha
or
loope
jo
outsl
or
jae
xor
clc
pop
es
outsl
arpl
in
xor
xchg
ss
push
enter
push
ret
pop
push
dec
inc
xchg
adc
fsubrl
push
lea
test
arpl
lods
push
sti
inc
test
aaa
add
push
sbb
ljmp
mov
fs
and
xchg
lea
pop
mov
sbb
adc
je
mov
or
mov
push
pop
popa
jl
jo
and
pop
shrl
into
mov
jns
push
out
mov
pushf
add
push
xor
repz
dec
rolb
jnp
mov
rol
dec
add
adc
je
jl
xchg
ret
push
adc
iret
fmulp
jl
and
addr16
ret
pop
bound
loop
pop
daa
outsb
push
pop
cli
ret
or
pop
cmc
sub
in
cmpsl
push
inc
iret
mov
pushf
inc
mov
jno
daa
jo
jns
push
lret
or
negl
pop
xor
enter
cld
mov
cli
mov
xchg
mov
jae
out
push
out
orl
aam
popf
mov
mov
pop
loope
cmp
mov
lret
aas
sahf
mov
xor
xor
xchg
je
cwtl
cmp
push
cmc
out
cmp
mov
adc
pusha
movsl
fstl
sub
add
and
jae
cld
adcl
and
adc
push
loopne
cmp
dec
pop
mov
adc
test
lods
dec
add
inc
fbstp
push
sahf
test
jl
dec
sahf
scas
test
jae
inc
mov
push
cmp
lcall
xchg
hlt
and
push
cltd
ds
stos
xlat
mov
sub
pop
adc
cmp
ret
xchg
fcom
jns
xchg
hlt
call
loop
add
addb
mov
gs
mov
cmp
jns
pop
xor
xor
pop
lea
lods
dec
outsb
mov
out
dec
xchg
jmp
stos
das
dec
lret
lret
or
fistl
add
out
push
dec
xchg
xchg
and
imull
sbb
sarl
jmp
cmp
in
xor
test
addr16
cmpsb
sbb
cmp
iret
push
je
and
and
cwtl
out
inc
mov
push
stos
cmpsb
mov
popa
lahf
std
rclb
push
in
movsl
rcll
cwtl
lcall
cmpsb
xchg
adc
cltd
mov
mov
mov
mov
jp
mov
xlat
pushf
add
mov
stos
insl
call
add
lds
lahf
sbb
pop
mov
addl
mov
aas
fdivp
in
jnp
daa
ljmp
faddl
jmp
push
mov
pop
shrb
mov
xchg
ret
aad
arpl
jo
pop
bound
mov
mov
mov
lods
jl
push
jecxz
ds
mov
into
test
hlt
test
das
insb
or
fldenv
insl
add
sub
rorb
iret
lods
fsub
pop
xchg
std
imulb
out
in
frstpm(287
or
ja
ss
jg
sub
jle
pop
enter
outsb
idivl
lock
mov
push
fcoml
in
mov
pop
adc
mov
dec
fnstcw
dec
push
dec
add
xor
push
jo
cmp
insl
imul
sbb
insb
and
and
xchg
sub
sub
out
sbb
sbb
mov
scas
cmc
xor
xchg
or
aas
cs
jge
mov
xorb
mov
inc
aas
xor
jne
dec
inc
fsts
xor
mov
inc
stc
ds
jo
ret
and
decl
inc
mov
or
xchg
stc
test
xor
dec
imull
sub
mul
mov
iret
pushf
pop
or
inc
mov
movsl
add
insb
dec
pop
jmp
ss
mov
lds
adc
mov
flds
xor
dec
add
mov
mov
add
dec
lret
mov
inc
aad
fwait
xor
lea
roll
xchg
dec
flds
aas
sahf
mov
mov
fdivr
sbb
xchg
pop
adc
lock
pop
fisttps
in
mov
shr
cmp
and
cmp
sub
outsl
inc
icebp
push
loop
lods
lcall
inc
and
insl
out
leave
test
adc
arpl
jns
push
xor
cmp
popa
out
cmp
xchg
nop
mov
jb
push
icebp
loop
jg
cmpsl
clc
xchg
add
dec
mov
cmpsl
ficoml
imul
ss
pushf
mov
push
lods
jle
push
jl
push
cmp
xor
inc
push
inc
lods
imul
jnp
xor
push
test
sbb
inc
fxch
xchg
mov
sbbl
xor
pop
pop
xor
enter
xchg
cs
mov
pop
cmp
or
jnp
xchg
or
aaa
adc
jae
rolb
mov
iret
loopne
xor
lahf
sub
pop
imul
rep
and
daa
or
mov
xor
test
out
lea
fdiv
jmp
fmull
xor
and
and
push
cmp
cmp
add
xor
cmpsl
and
mov
dec
lret
jmp
jno
lret
mov
xchg
shll
sub
daa
lea
mov
pop
or
cmp
dec
pop
jae
ror
push
xchg
aaa
imul
add
in
xor
inc
sbb
push
push
push
mov
or
outsb
imul
clc
or
out
xor
mov
push
jge
pop
jecxz
movsb
mov
mov
sub
daa
mov
sahf
pop
xchg
xchg
iret
js
out
mov
or
fs
cmp
xchg
pop
aam
cmpsl
sbb
mov
cmpl
test
ja
aam
sti
gs
adc
and
andl
dec
add
stos
xor
mov
repz
xchg
imulb
leave
scas
xor
xlat
aad
xchg
lahf
jg
jmp
xchg
lea
fbld
cmp
out
pop
mov
fwait
inc
adc
fnsave
in
movsb
cs
sbb
push
push
shll
int
cmp
or
ja
lods
and
scas
push
jecxz
dec
aad
loope
or
pop
xchg
nop
push
aaa
test
mov
test
jnp
sar
push
adc
js
cmpsb
cmc
fwait
outsl
data16
jp
lahf
sar
imul
sbb
les
sbb
inc
dec
push
mov
test
pusha
inc
jne
scas
pop
cmpsb
loop
imul
movsl
push
inc
mov
mov
dec
inc
dec
fisttpll
sti
cmp
mov
xchg
adcl
push
sub
dec
mov
jmp
sub
bound
fdecstp
mov
jg
push
rcll
pop
stos
ss
inc
fistpl
pop
popa
sub
test
mov
cmp
mov
mov
mov
loop
adc
je
test
push
jae
xor
jge
cs
cld
clc
aaa
sar
mov
jns
lds
sbb
rcrl
sbb
frndint
pop
cmp
cmp
pop
lods
and
xor
fstpl
xlat
popf
fcomip
ror
rcrl
scas
mov
mov
movsb
jo
push
enter
push
or
ret
push
or
ret
pop
imul
dec
adc
call
jge
and
sub
mov
test
mov
aad
out
cld
mov
jmp
nop
sahf
cmp
filds
hlt
add
cmp
and
xchg
fidivs
dec
dec
or
in
mov
out
sbb
rcrl
inc
adc
outsb
adc
mov
adc
dec
mov
std
mov
jl
ror
das
out
ds
loopne
imul
jnp
fstl
cmp
loop
into
rorl
cmp
pop
mov
dec
fmuls
imul
je
mov
jmp
xchg
push
outsl
imul
ss
add
cs
inc
fidivrl
add
push
movsb
test
test
idivb
mov
cmpsl
mov
movsb
cmovl
cmp
jno
out
scas
insl
mov
mov
test
outsl
xchg
fwait
inc
mov
dec
dec
ja
int3
inc
push
shl
xor
cmpsb
sbb
lea
mov
gs
incl
rorb
sbb
rorb
mov
xchg
lcall
inc
lret
lret
sbb
stos
dec
loope
and
addr16
std
mov
in
mov
and
add
jmp
insb
push
pusha
loop
jb
test
or
mull
lds
cltd
neg
stc
and
and
stc
movsb
sahf
xchg
ret
dec
pop
dec
inc
arpl
sbb
sub
int
and
out
lret
fldenv
adc
fdivrl
sub
push
movsb
cmp
sbb
addr16
sti
sti
and
lock
cmp
rcrb
add
out
pop
mov
jnp
aam
outsl
inc
pop
fimuls
mov
mov
ja
hlt
insl
xchg
mov
and
test
les
or
fistl
push
test
into
push
into
push
lahf
pushf
and
cmp
xor
or
stos
and
sub
fdivs
pop
das
xchg
pushf
and
sub
xchg
pop
xchg
mov
aam
aam
int
pop
imul
std
mov
cs
mov
outsl
adc
sbb
sbb
mov
or
out
pop
out
imul
fnsave
scas
ret
inc
clc
or
popf
xor
roll
lret
test
lret
adc
cmp
and
mov
iret
test
test
out
xor
dec
or
sbb
fmuls
sub
shrb
cmc
add
mov
or
pop
mov
das
clc
cld
cmp
bound
mov
jmp
loopne
jbe
dec
jp
mov
lret
push
loopne
jb
test
push
int3
out
hlt
mov
mov
loopne
adc
jmp
rcrl
addb
push
xor
inc
xor
mov
popl
dec
leave
inc
push
jno
adc
jecxz
push
sbb
lret
sarl
or
ja
jge
or
push
repnz
outsb
test
cmp
ret
dec
jp
inc
pop
adc
jno
hlt
shl
adc
jecxz
mov
xor
iret
std
dec
adc
adc
imul
daa
scas
or
adc
daa
fwait
sub
xlat
pusha
pusha
push
jo
xchg
int
push
push
mov
inc
fbld
movsb
mov
es
arpl
je
push
lret
dec
mov
add
addl
push
cs
addr16
xchg
fisttpll
ss
scas
inc
out
repnz
sub
xor
push
adc
dec
aam
fldcw
xlat
jecxz
sbb
jg
push
negb
jne
call
aam
cmpsl
sbb
lds
sahf
mov
dec
les
xchg
js
jl
dec
sub
mov
sahf
sub
hlt
fsubrl
insl
dec
call
sbb
addb
pushl
in
or
dec
lahf
test
daa
arpl
sahf
lods
int3
jl
imul
xor
cmp
popf
call
adc
sbb
loope
outsb
or
nop
pop
push
decl
pop
mov
fiadds
and
cld
das
dec
call
cltd
xchg
aam
imul
mov
ss
mov
cmp
movsl
xor
movsl
xchg
pop
and
dec
inc
insl
and
std
jmp
imul
iret
stos
sub
sbb
pop
in
xchg
adc
aaa
int
sbb
sahf
add
adc
out
lds
push
das
das
das
jmp
push
loope
sub
popa
test
xchg
xor
jge
pop
dec
imul
or
sub
jecxz
les
out
out
mov
push
mov
pushf
fimull
jno
faddl
jno
mov
jge
add
push
into
rcrl
and
jmp
dec
pop
mov
jg
jmp
int3
arpl
cmpl
enter
cmpsl
xchg
sahf
add
int
lret
or
mov
sbb
roll
dec
push
mov
inc
xor
lcall
push
jno
sbb
jnp
pop
and
dec
outsb
adc
insl
jne
mov
pop
das
andl
dec
popa
test
pop
sar
push
clc
movsl
cmpsb
jbe
push
daa
daa
mov
push
xchg
stos
pop
aaa
or
icebp
mov
dec
sub
or
fcomps
cmp
xchg
outsb
arpl
dec
sbbl
mov
js
fidivs
les
pop
jnp
out
mov
sarb
jae
ljmp
pop
xchg
push
fldpi
pop
fadd
add
sti
push
lea
sbb
out
js
cmp
xchg
and
add
shl
enter
cmp
adc
aad
andb
cmpb
mov
repz
in
jb
imul
mov
negb
xchg
lods
repnz
adc
pop
or
and
clc
cmp
stos
add
jnp
mov
enter
popf
and
mov
xlat
mov
pop
pop
movsb
mov
aaa
dec
in
cmp
and
add
xor
lea
mov
cli
rolb
imul
xor
aaa
cmpsb
fwait
cmc
pop
ja
dec
cmc
andb
inc
clc
sub
in
outsb
fsubrs
xchg
mov
push
insl
dec
ja
in
and
je
adc
insb
mov
pushf
dec
movsb
jmp
xchg
pop
cmp
sbb
ljmp
into
lret
ret
mov
push
jnp
repz
insb
stos
pop
ds
stos
and
movsb
push
push
adc
cmp
xor
cmpsl
repnz
inc
cli
leave
jmp
adc
push
test
dec
xor
sbb
push
les
pop
cmpsb
bound
cmc
and
lods
sub
cmp
adc
push
jg
cmp
mov
jno
mov
rclb
es
xorb
dec
pop
xchg
sbb
push
leave
loope
out
push
xorl
pop
ret
pop
sbb
mov
cli
jno
jb
shufps
and
xchg
and
int
ljmp
in
outsb
mov
test
dec
rep
inc
mov
cmpsb
or
add
pop
mov
or
cmp
mov
lahf
pop
test
imul
xchg
pop
jl
insl
pop
xchg
xchg
or
add
fists
push
jns
fsubr
and
sub
push
and
inc
and
imul
dec
in
sti
mov
mov
xchg
xor
mov
jb
ret
adc
out
xor
mov
nop
mov
xchg
jmp
test
subl
xchg
xchg
stos
mov
cld
daa
jg
push
sarl
js
lods
xor
pop
jl
add
bound
pop
imul
fmull
test
out
xchg
push
lret
dec
inc
pop
mov
test
jp
xor
lea
push
sbb
fs
sub
scas
addl
ret
js
add
out
and
jmp
jecxz
pop
mov
in
andl
sbb
mov
mov
lock
into
cmpsl
jbe
sub
sub
int3
inc
inc
mov
fnstenv
mov
out
filds
or
pusha
push
cli
in
inc
cmp
int3
and
push
adc
int
test
nop
je
jo
and
aaa
aas
add
sub
dec
ret
pop
or
movsb
test
stos
jae
je
jns
les
push
nop
dec
in
data16
aas
idivb
sub
jae
arpl
andl
or
fcoml
sub
in
mov
jg
push
ja
mov
lcall
or
sahf
loope
push
dec
jp
icebp
out
pop
das
gs
sub
sub
dec
sahf
clc
dec
mov
std
add
add
and
and
xlat
iret
or
shll
jp
add
add
xlat
lock
in
int3
add
out
outsl
movsb
sub
sti
dec
mov
dec
mov
push
out
jns
adc
add
push
add
das
jge
cmp
cltd
push
jno
push
add
mov
pop
or
mov
fsub
mov
test
hlt
add
push
les
push
jo
pop
sbb
and
lcall
test
into
cld
jae
sub
mov
jle
inc
cld
mov
xchg
orl
inc
nop
and
push
cmp
lods
outsl
push
insb
sbb
fmuls
into
negl
loop
push
lock
dec
popa
inc
scas
lods
inc
mul
stos
dec
fidivl
pop
sub
add
stos
dec
cmp
decl
and
test
xchg
lahf
and
rcl
mov
pusha
loope
test
pop
add
daa
xor
fwait
lahf
js
cwtl
pusha
ret
xchg
dec
imul
aam
pop
inc
xchg
xchg
add
sbb
imul
pop
jno
aad
push
add
daa
cmp
lods
xchg
icebp
cld
jb
dec
push
rcl
rolb
sub
xlat
lahf
pop
mov
xor
cld
es
adc
mov
mov
xor
cmc
cmp
fdiv
ret
in
mov
sbbb
fsubp
fs
pop
out
pop
fwait
sbb
lods
mov
sub
dec
add
popf
jnp
and
clc
pop
xchg
pop
out
jl
mov
jge
imulb
data16
adc
and
aaa
or
push
pusha
je
std
cmp
push
push
add
hlt
lods
jns
sbb
dec
aad
and
cmp
test
sub
into
mov
fists
les
das
int3
and
arpl
push
inc
test
cwtl
enter
inc
loop
in
inc
outsb
adc
jge
cli
or
ds
pop
repnz
xchg
test
jae
pusha
push
adc
and
add
clc
test
out
daa
movb
aam
add
mov
mov
mov
into
adc
aas
scas
ss
push
cmp
mov
popa
sahf
js
push
outsl
jg
cmpsl
ss
jbe
pop
aaa
push
test
jne
jge
jns
sub
xchg
inc
aad
loopne
and
cs
mov
mov
xor
fscale
shl
ret
gs
cmp
out
rorl
mov
repnz
mov
fucomi
in
outsb
scas
push
decb
pop
dec
jb
jae
mull
mov
jne
push
adc
add
lret
or
pop
and
pop
das
mov
roll
loopne
jmp
das
pushf
or
xor
sbb
pop
pop
push
sahf
mov
pop
cmp
dec
enter
xchg
fsubrs
add
mov
sbb
push
xor
cmp
dec
cld
xor
loop
ret
mov
fidivrl
jl
jp
aas
cmp
sar
dec
imul
test
ja
push
test
and
out
icebp
hlt
sahf
dec
sbb
and
test
test
out
imul
lahf
lods
fcmovbe
jl
out
add
ljmp
insl
insb
jle
add
xchg
fwait
or
dec
iret
aad
or
adc
repnz
or
jp
rclb
jno
pop
dec
popf
outsb
cmp
das
stos
adc
scas
mov
cmc
lock
clc
shlb
in
dec
mov
and
mov
test
push
push
jge
cmp
add
inc
push
repz
loop
pop
insl
ret
daa
mov
push
xor
in
sub
rorb
leave
lcall
or
popa
pop
mov
cltd
sbb
push
jb
cmp
ds
aaa
sub
ud0
pop
add
cmc
push
loope
nop
sbb
jnp
in
cmp
scas
mov
stos
dec
jno
cmp
rorl
das
push
add
add
faddl
popf
jo
movsl
fidivl
ret
inc
pushl
dec
adc
imull
sbb
cmp
ljmp
ret
or
ret
mov
pusha
imul
mov
mov
jge
xor
mov
outsb
add
loop
jnp
rcll
test
icebp
cmp
pop
inc
movsl
cmp
push
sub
out
cld
xlat
insb
add
movsb
fwait
or
sub
movsb
xchg
ss
leave
and
stos
jbe
adc
jnp
aam
sub
movsl
and
in
pop
mov
mov
pop
pushf
sbb
inc
lret
pusha
ja
cmp
jbe
test
outsl
jl
adc
lods
pop
das
out
cli
pop
pop
sahf
mov
scas
jae
or
xor
dec
lret
sarb
inc
add
sub
pop
xchg
addl
mov
inc
sarl
xchg
and
inc
jo
dec
ss
fcomip
cmp
fistl
xchg
cmpsl
inc
xchg
mov
inc
adc
mov
dec
imul
xor
data16
push
cltd
inc
popf
xchg
and
pop
and
stos
ret
loop
mul
hlt
mov
repz
iret
fists
sbb
cmp
xor
push
bound
xor
mov
jne
jb
sbb
stos
pop
jecxz
loop
or
ret
sbb
jmp
dec
cltd
xorl
jle
test
call
mov
enter
or
jge
mov
lds
dec
ret
sbb
out
fistps
aad
jmp
movsl
pop
xchg
loop
pop
mov
dec
mov
test
jo
test
hlt
aaa
push
and
js
mov
std
outsb
adc
insb
lcall
fwait
scas
frstor
inc
push
fdivl
jo
inc
mov
stos
xor
mov
and
mov
push
mov
es
sub
bound
ss
cmp
push
mov
inc
daa
in
sbb
fs
lods
bound
aad
or
push
aad
in
outsl
aaa
xchg
pop
je
bnd
aas
pusha
arpl
or
push
dec
adc
push
xchg
rcrl
jg
mov
mov
mov
leave
adc
aad
pop
push
cmp
push
add
popf
test
pop
xor
fnsetpm(287
loop
in
mov
fsub
imul
mov
sub
fdivs
es
pop
sub
add
xor
arpl
js
sub
adc
dec
mov
jb
xlat
iret
nop
sub
fsub
add
mov
loop
push
push
mov
scas
push
hlt
pop
sub
stos
xor
sub
loopne
sti
push
lret
data16
ljmp
aam
sbb
cmp
push
adc
jecxz
fpatan
ficompl
or
test
sub
or
mov
insl
mov
arpl
leave
jae
ret
lods
pop
jp
pop
add
popa
push
pop
inc
push
mov
xchg
cltd
cld
test
cwtl
mov
mov
mov
mov
dec
scas
aad
sar
test
jbe
push
mov
xchg
loopne
inc
sub
xlat
mov
int3
pop
adc
add
mov
repz
and
mov
mov
test
xchg
push
cmp
add
xchg
lds
inc
stos
xchg
add
cmp
enter
jecxz
xor
sbb
add
pop
push
inc
gs
nop
gs
mov
xor
cli
out
std
xor
jns
add
sub
jmp
xlat
mov
and
lods
sub
leave
out
add
fisttps
ja
jecxz
pop
xchg
pusha
cmp
das
pop
xchg
dec
popf
repz
sub
nopl
out
jle
cltd
cmp
cmp
subb
sub
pop
sbb
and
lahf
divl
mov
aaa
ss
sub
pop
sub
jg
push
loop
sbb
movsb
lock
ficoml
xlat
push
jp
add
aas
dec
add
aad
adc
inc
jno
sbb
scas
jg
mov
cs
xchg
mov
pushf
and
cmc
add
shrl
test
out
shll
test
jl
xchg
and
xor
std
cmpsl
aam
jl
jge
sub
cmp
push
scas
int
inc
or
mov
mov
push
cs
dec
pop
mov
roll
add
sbb
scas
cmp
add
in
pop
jae
shrl
lahf
dec
push
xchg
mov
out
or
rorb
jecxz
mov
xchg
les
out
add
adc
mov
ljmp
cli
add
mov
push
xor
fs
push
out
xlat
int
cmp
arpl
in
pop
shll
es
mov
xlat
pop
mov
mov
adc
pusha
jo
dec
std
push
inc
in
sub
add
lret
dec
sbb
test
out
bnd
add
insb
pop
sbb
lods
scas
and
in
sahf
cmp
xor
ss
sbb
fwait
and
mov
fnstenv
cmpb
mov
in
pop
mov
mov
dec
mov
pop
lock
pushf
test
lret
cmp
dec
inc
jl
xor
ret
scas
fdivrl
pop
sahf
fwait
mul
mov
pop
push
mov
dec
insb
adcb
push
jle
hlt
mov
and
in
out
xchg
fs
jnp
insl
cvtpi2ps
sbb
cmp
loope
lret
dec
adcb
leave
in
inc
iret
cmpsb
lcall
xchg
icebp
jno
fmuls
jo
xchg
push
xchg
mov
stc
mov
imul
sub
fiadds
cmp
adc
dec
pop
adc
mov
jl
ret
adc
or
out
loop
das
mov
jp
inc
in
roll
dec
roll
mov
xchg
adc
dec
leave
pop
xchg
mov
pop
mov
mov
add
xchg
inc
jl
cmp
push
pop
jge
pop
aad
cmp
insb
insb
fdivs
jl
dec
sbbl
add
dec
es
jle
push
outsb
je
xor
outsl
ss
lods
or
out
pusha
xchg
sbb
mov
jmp
inc
push
mov
lods
pop
js
mov
pop
incl
jecxz
scas
adc
scas
dec
push
adc
out
int
dec
idivb
xchg
stos
or
daa
mov
in
mov
mov
loopne
sub
gs
inc
sti
enter
shll
cmpb
add
cld
jmp
jp
and
push
adc
cmp
insl
lods
fs
add
or
mov
push
cmpsb
pop
enter
or
dec
push
pushw
fisubl
cltd
pop
xchg
mov
iret
add
or
aas
sub
xchg
xor
fidivrs
mov
ret
fimull
ret
sub
mov
stos
sub
cmp
jp
and
adc
pop
test
mov
fidivl
xor
fs
lret
jmp
mov
test
pop
seto
test
push
add
xor
lods
xchg
mov
mov
hlt
inc
xchg
sub
mov
lcall
jae
pop
or
pop
mov
jnp
fildll
sub
xchg
lods
inc
popa
jge
pusha
pusha
sbbb
inc
dec
mov
mov
cli
and
and
pop
or
repnz
inc
lds
decl
mov
lods
push
rorl
movsl
test
cli
inc
inc
and
jmp
push
mov
fcoms
mov
push
push
movsb
dec
sub
ret
bound
fidivrl
pop
sub
or
lahf
aaa
imul
adc
xor
cmpsl
gs
cmc
cld
sub
mov
daa
imull
push
adc
imul
nop
jae
mulb
mov
out
cmc
xchg
push
inc
mov
mov
xor
and
cmp
pushf
les
or
push
fistpll
divl
stc
inc
jecxz
vmwrite
push
dec
push
insb
pushf
pop
mov
stos
xor
and
repz
push
dec
out
fistpll
mov
iret
pop
jmp
bound
dec
pop
mov
insl
xor
test
lea
dec
nop
xor
dec
add
cmpsb
sub
jmp
les
push
add
mov
clc
sub
stos
xchg
mov
pop
cmp
dec
lahf
inc
inc
cmp
hlt
popf
mov
mov
mov
daa
test
test
fcomps
mov
add
add
push
out
mov
mov
dec
hlt
ret
bswap
mov
shll
sbb
in
sbb
inc
shrb
stos
or
ret
jno
mov
xor
mov
mov
xor
pop
cmp
or
lds
xchg
mov
icebp
int
movsb
push
push
sbb
xor
sub
popa
jg
jp
cmpsb
rcrb
pop
xor
ss
decl
mov
cltd
enter
push
stc
ljmp
cwtl
add
adc
sbb
dec
jle
sub
insb
popa
ret
cmpsl
das
or
xchg
leave
pop
sbb
iret
sbb
mov
xlat
jle
jo
loope
or
inc
les
add
out
rolb
pop
xlat
cltd
push
mov
mov
aam
or
nop
leave
mov
fcomi
ja
aad
sti
mov
fldenv
pxor
jno
lods
push
pop
or
in
sarl
dec
es
loop
data16
inc
cmp
push
mov
fcoml
mov
xchg
cmp
outsl
fldenv
cmpl
mov
in
orl
inc
mov
es
add
and
out
repz
mov
sarl
sbb
xchg
xchg
sub
cmp
ss
sbb
inc
xchg
aas
incb
jne
in
popa
dec
or
adc
sbbb
jge
in
ret
aad
popf
push
or
dec
pushf
rorl
out
xor
rcrl
sub
leave
sbb
xor
adc
or
add
popa
iret
dec
in
sbb
mov
sbb
mov
mov
inc
pop
mov
xchg
pop
sbb
jmp
popa
and
int
popa
pop
sub
lods
cmp
rclb
daa
lods
sub
xchg
mov
add
das
push
sub
ja
cmpsl
movsl
imul
push
ret
lock
pusha
jl
and
mov
pop
fbstp
mov
or
sub
dec
add
and
xor
sbb
lret
mov
add
mov
shlb
cmpsb
dec
cmp
fs
dec
pushf
pop
jmp
pop
or
scas
sub
add
xor
or
sub
pop
xchg
call
xor
xor
mov
cli
dec
test
in
dec
sub
xchg
jge
push
sub
mov
shl
sbb
sti
in
pop
or
in
cld
adc
loope
sbb
call
lods
and
cmp
inc
icebp
mov
pop
xchg
add
out
jnp
sbb
rolb
mov
out
inc
xor
adc
push
lods
pop
fs
push
sbb
fadds
mov
int
into
adc
in
mov
jle
aad
pop
loop
lea
inc
pop
push
jmp
cmp
sub
mov
or
push
imul
test
cs
std
lods
cwtl
cmp
sbb
cmp
mov
mov
inc
hlt
lds
outsb
inc
call
adc
cmp
out
inc
and
aaa
scas
adcl
push
xor
lea
daa
and
cmp
movsb
or
pop
push
fwait
pop
ss
shll
xor
mov
push
adc
jne
jnp
gs
mov
push
addr16
in
xchg
inc
pop
and
push
daa
cmp
mov
mov
je
mov
mov
or
scas
xchg
push
outsb
les
pop
popa
or
mov
or
pushf
xorl
inc
inc
push
sbb
inc
jae
addr16
rcr
aaa
jmp
cmpsb
insl
iret
pop
jl
and
or
ja
rcrl
dec
pop
stos
ja
or
stos
inc
int3
inc
filds
sbb
xor
cs
and
popa
pop
addr16
std
or
jg
ds
movsl
ja
pushf
jb
or
pop
fmul
mov
and
dec
fnstsw
leave
sbb
daa
test
xchg
adc
xor
jp
fs
cmpsl
loop
sahf
add
in
aaa
xchg
nop
pop
sbb
jo
mov
adc
daa
test
cltd
push
cmc
fwait
das
xor
mov
pop
inc
xor
mov
or
movsb
call
shll
sub
dec
ljmp
or
adcl
ret
cltd
inc
in
loope
imul
or
lcall
push
jl
xor
and
test
sbb
test
add
das
xchg
and
push
xlat
mov
shr
dec
arpl
roll
insl
adc
push
mov
mov
test
les
jg
fstpl
sbb
lcall
ds
mov
roll
or
outsb
mov
mov
shlb
stc
mov
adc
out
push
outsb
push
gs
lock
inc
or
cmpsl
push
ss
lret
popa
cmp
fwait
stos
sub
imul
addr16
and
imul
mov
push
cmpb
jl
ljmp
and
xor
pop
fidivl
jne
insb
sub
fdivrl
sub
dec
xor
xchg
test
xchg
lcall
cli
lcall
notl
add
ret
cmp
xorb
in
sub
adc
fidivl
out
shl
jge
adc
or
loopne
push
dec
xor
adc
xchg
pop
out
and
cld
jb
into
or
sbb
cmp
mov
jo
stos
jge
jne
or
add
ja
add
cmp
sbb
es
jo
jge
lea
clc
dec
pop
in
push
roll
lahf
mov
mov
pop
pop
les
scas
mov
cld
repnz
aad
cwtl
repz
and
mov
ja
ljmp
fildll
adc
inc
lret
pop
lods
mov
iret
stc
dec
or
test
cmp
sbb
sbb
cld
rcrb
and
inc
xor
lods
xor
bound
mov
inc
loope
mov
mov
in
lods
adc
sahf
sbb
loopne
aam
stos
add
dec
mov
mov
mov
lods
mov
out
inc
cmpsl
lahf
jmp
cli
test
mov
cld
xchg
inc
daa
in
lahf
xchg
mov
cmp
cli
pop
icebp
imul
stos
sub
mov
xchg
pop
mov
frstpm(287
mov
mov
scas
push
out
cs
xchg
dec
ret
daa
and
xor
pop
push
inc
cmp
push
inc
xchg
fnstsw
data16
or
leave
out
out
adc
lods
add
sbb
orb
or
jno
nop
mov
sahf
or
popa
sbb
ja
dec
in
jge
jl
xchg
jp
ja
jnp
mov
into
cmp
mov
sbb
pop
push
out
rorb
add
fdiv
inc
add
sub
movb
or
shll
mov
icebp
jecxz
dec
push
scas
lcall
aas
pop
inc
mov
mov
or
movl
xor
std
jl
push
push
lret
or
mov
inc
decl
or
int3
xor
andl
sub
xchg
imulb
jae
xlat
scas
add
shlb
push
lea
js
mov
cmp
pop
xlat
rclb
fisttpll
into
cwtl
stos
dec
repnz
sbb
ret
iret
pusha
inc
bound
push
pop
outsl
cwtl
ss
out
test
pop
inc
leave
xchg
jb
lods
out
sub
repnz
jmp
mov
dec
mov
faddl
pop
aaa
fildll
je
out
fbstp
sbb
ss
lcall
mov
push
pop
xor
adc
sbb
and
mov
xchg
lods
pop
test
dec
add
fsubr
jge
mov
fidivs
jne
cmp
adc
repz
addb
aam
lock
mov
mov
sub
xor
ficoml
dec
cmpsb
out
shl
test
ret
adc
call
jmp
orb
mov
shlb
xor
push
rol
adc
add
loope
pop
pusha
popa
ss
sbb
xor
jecxz
dec
mov
cltd
adc
add
mov
test
dec
add
mov
mov
or
dec
and
iret
in
roll
xor
negl
xchg
mov
stos
sub
inc
rorl
sbb
push
mov
int
loopne
push
icebp
or
mov
loop
sub
aaa
imul
aas
push
or
mov
dec
inc
fiadds
xchg
push
add
inc
xlat
jge
leave
mov
fsubs
fidivs
mov
int3
leave
or
daa
mov
addr16
add
add
mov
fnstsw
jp
add
int3
clc
jne
data16
andps
mov
gs
pop
push
fwait
cmc
out
xchg
lret
or
add
enter
outsl
ret
icebp
jle
pop
daa
pop
push
lcall
int
dec
sbb
iret
and
loopne
add
xor
mov
int
jp
cmp
lods
sbbb
xchg
dec
fistl
out
push
js
xor
jae
inc
cmp
fists
repz
cli
xchg
insb
fs
jbe
push
ja
loopne
add
add
dec
lock
in
push
out
clc
xchg
in
mov
pop
and
test
add
mov
mov
repnz
outsb
jae
add
fists
scas
mov
jg
xchg
mov
and
pusha
or
and
imul
mov
test
add
out
bound
dec
rclb
leave
icebp
aaa
pop
jp
sbb
shlb
mov
xchg
pushl
jp
gs
ret
sbb
xchg
dec
inc
call
sbb
sbbl
fbstp
outsl
addl
dec
sbb
cwtl
stc
lds
cs
int3
adc
add
in
int
jp
or
mov
jge
mov
sahf
aaa
divb
int3
mov
popf
mov
mov
xor
mov
jno
mov
fsubs
push
mov
fstpt
push
inc
cmp
das
das
xor
sahf
push
ds
lcall
bound
orl
pop
sahf
addr16
ret
iret
addl
and
dec
andl
test
push
and
cmpsb
inc
andl
lods
sar
push
mov
sahf
dec
pop
popa
mov
les
dec
in
clc
adc
andb
negl
mov
in
cmc
cmpsl
sbb
mov
arpl
dec
or
testb
push
sbb
lock
sbb
mov
shl
mov
shr
dec
jl
stos
not
xchg
push
in
popf
and
sub
sar
cmp
dec
xchg
lds
cld
xchg
aam
add
fiaddl
stos
jg
lcall
mov
xor
shl
cltd
das
stc
je
shl
jo
shrb
sbb
and
insb
or
mov
testb
fs
jmp
das
aas
lea
push
push
sub
jno
sti
sub
hlt
dec
or
or
pusha
push
lret
enter
mov
stc
shll
or
addr16
sahf
sbbl
iret
push
jp
subl
mov
mov
out
jbe
int
call
mov
mov
mov
and
xchg
mov
dec
mov
fcmovne
outsb
inc
sub
and
cmp
fcom
fadd
popf
in
test
dec
pop
pop
cld
mov
lea
shll
cmpsl
mov
mov
sub
mov
loop
aad
sarb
mov
sti
dec
inc
insl
jno
dec
pop
loope
jbe
pop
mov
mov
shll
rclb
ja
jp
xchg
movsb
addl
test
adc
jmp
sbbb
sbb
sbb
sets
ja
mov
add
cs
fwait
mov
xlat
ret
int3
sar
loope
inc
test
xor
movsb
pop
jns
test
push
mov
jns
and
ja
push
std
inc
int3
mov
jo
mov
test
inc
push
push
mov
stos
sbb
cmpsb
mov
dec
add
stos
cmpsl
mov
xchg
add
and
jp
test
cmp
loop
or
pop
or
add
dec
into
nop
popa
or
sbb
inc
in
aas
lds
mov
mov
popf
in
out
js
in
sbb
cmp
mov
dec
inc
xchg
cmp
lock
mov
fwait
pop
sbb
xlat
mov
lret
mov
xlat
sti
lock
sbb
mov
jg
out
jb
stc
dec
pop
in
pop
sbb
push
dec
lahf
adc
cmp
aam
popf
movsb
ljmp
fcomi
add
push
push
inc
xor
mov
sub
fldt
in
cmpsb
xchg
xor
shll
push
insl
xchg
ret
adc
lret
xchg
repnz
xlat
or
and
aam
and
lods
push
pop
loop
nop
lahf
push
cld
cmpsb
push
xchg
mov
dec
sbb
icebp
imul
mov
mov
pop
imul
or
sub
movsl
push
xor
cld
jecxz
adc
jae
mulb
and
scas
cmp
mov
adc
lahf
xor
bound
push
add
adc
pop
icebp
ficompl
xor
mov
cmp
xor
mov
shll
sbb
cwtl
lcall
dec
fdivr
pop
icebp
mov
arpl
jae
clts
andb
in
daa
sar
popf
ds
jne
sbb
mov
jnp
xor
popa
cmpsl
push
add
push
movsl
daa
cmp
pop
ds
sub
xor
add
pop
aaa
inc
or
ret
xor
or
inc
lcall
pop
xchg
dec
shl
mov
push
sbb
popf
cltd
test
mov
sbbl
int
xor
fucom
sub
inc
lret
test
push
stc
mov
jecxz
roll
push
jecxz
inc
inc
sbb
in
push
data16
es
cmp
rcl
sub
cmpxchg
lahf
ficoml
je
adc
scas
sti
mov
xor
nop
jl
pop
insl
push
add
pop
les
imul
lret
daa
mov
stos
mov
loopne
test
daa
ja
adc
jbe
sub
rorb
jl
cltd
inc
mov
push
mov
push
int
mov
xchg
pop
xorl
out
xor
mov
stc
cmp
call
into
stc
insl
in
or
js
jle
or
lahf
xchg
sti
xchg
aam
xor
call
push
and
lea
jno
jo
xor
pop
imul
inc
cwtl
jno
sub
dec
test
rclb
add
dec
mov
add
filds
rol
mov
xor
cmp
insb
pop
filds
inc
divps
lods
scas
std
fbld
jmp
lcall
lock
sbb
fadds
mov
mov
cwtl
mov
jp
mov
jnp
mov
mov
mov
fdivs
cmpsl
xor
out
call
rcrb
loop
jg
sbb
pop
sarl
scas
xor
sbb
jmp
inc
in
inc
mov
cmp
mov
jmp
sbb
xchg
mov
fbld
push
ja
int3
cwtl
cltd
mov
mov
mov
xchg
setge
push
aaa
sub
pop
sahf
mov
push
and
cld
cmp
psrad
bound
mov
int3
and
and
in
xchg
mov
jno
and
add
inc
push
jl
add
inc
add
dec
xor
mov
mov
pop
test
xor
jne
jmp
mov
xchg
ja
pop
push
sahf
enter
cmpsl
mov
xchg
stos
and
xchg
cmpsl
add
push
jne
sbb
sbb
movnti
out
xchg
jge
shr
dec
ret
loop
out
inc
jbe
cmpsl
lock
sbb
inc
insb
rcll
xchg
dec
hlt
jnp
in
movsb
sbbl
mov
xor
mov
out
pop
mov
vmwrite
jle
push
jno
shll
adc
fisubrs
cmp
out
je
js
das
into
dec
push
inc
add
sub
std
arpl
in
mov
call
nop
adc
je
xchg
mov
and
pop
lret
jbe
adc
call
and
scas
mov
sbb
fisubl
das
push
sbb
movsb
shlb
and
or
jbe
cltd
add
arpl
lds
jge
in
xorb
xor
xchg
test
js
loopne
cmp
cld
in
cmp
nop
into
outsl
movsb
add
hlt
repz
ss
jae
xchg
or
or
mov
lods
cmp
add
xchg
cltd
rcl
mov
dec
decb
adc
fiadds
insb
outsb
inc
leave
loop
aaa
pusha
rorl
cwtl
inc
popf
cmp
setbe
fidivl
int3
shrb
fcomps
inc
lods
inc
xchg
sub
in
mov
sub
push
js
out
sub
inc
popa
fs
mov
stos
jbe,pt
dec
shrl
cmpsl
jmp
pop
lret
sti
mov
ret
jno
inc
add
sbb
push
inc
push
cwtl
fs
subl
mov
outsb
jbe
or
fcmovnbe
in
inc
pop
rcrb
mov
out
insb
test
notb
lods
dec
jge
lcall
mov
out
mov
mov
adc
notl
popf
sbb
mov
movsb
int
xor
jae
cmpsb
sbb
xchg
aas
xor
and
aaa
jg
cmc
insl
mov
out
jp
into
jle
sti
inc
pop
xlat
in
jecxz
dec
addb
mov
cmpsl
pop
jno
cmp
and
cwtl
mov
lcall
dec
lds
xor
fcomps
add
sub
mov
inc
test
xchg
or
iret
loopne
setbe
mov
sub
mov
gs
jne
lret
dec
fwait
jmp
int3
pop
push
stc
xor
lods
cmp
hlt
sarl
stos
test
ret
jmp
jecxz
lea
mov
mov
stos
sahf
cmp
sbbl
xor
cs
mov
pop
sub
adc
xor
jl
adc
enter
cmp
jecxz
test
popa
fcmovne
int
dec
or
mov
push
push
in
repz
les
jbe
lea
lods
popa
in
icebp
push
cltd
adc
shlb
dec
push
inc
mov
adc
nop
sub
lahf
aas
add
cmp
adc
inc
incb
inc
subl
das
and
xchg
cld
rcrl
or
std
xchg
lret
addb
xor
pop
add
ljmp
xor
mov
clc
adc
dec
dec
jp
or
mov
clc
cs
es
sub
push
lcall
daa
mov
lcall
icebp
push
mov
inc
enter
test
xchg
adc
aam
nop
leave
pop
add
js
idivl
out
jle
test
dec
subl
inc
cmp
outsb
rcl
jl
adc
sub
das
dec
pop
shlb
lret
lahf
inc
pop
fisttpll
fmul
push
jge
push
test
dec
or
testb
test
rcpps
jmp
jmp
shll
cmp
cmc
fsts
cwtl
sub
adc
xchg
mov
inc
sti
outsl
lret
push
ret
dec
or
cmp
mov
pop
cmpsl
movsl
pop
sbb
fwait
enter
push
mov
dec
add
out
stc
fiadds
xor
mov
mov
xor
repnz
stc
pop
push
jb
mov
ja
fdivl
testb
enter
enter
clc
add
xor
sbb
mov
out
cmpsb
add
cmp
ja
mov
or
jbe
push
aaa
cmp
lahf
add
push
xchg
mov
lods
je
sub
mov
sbb
shrb
mov
imul
jns
rcll
mov
fstpt
clc
xchg
push
in
shl
adc
xchg
push
cltd
data16
add
repnz
sub
jae
add
push
shl
push
cmp
dec
dec
dec
jp
into
or
pop
mov
pop
mov
xchg
mov
mov
push
orb
or
mov
faddp
addr16
mov
cmpsl
test
mov
pop
mov
ret
shlb
mov
pop
or
jbe
mov
stos
push
cmp
outsb
ljmp
jecxz
ficompl
cwtl
cs
or
sub
mov
add
mov
mov
xchg
push
xchg
jmp
lods
lods
lcall
ret
ljmp
sarl
pop
rcrl
loopne
inc
push
das
divb
test
adc
arpl
int3
lret
push
negb
or
cmp
mov
fisttpll
sahf
xor
daa
fildl
push
and
sub
mov
lret
cmp
cld
hlt
inc
dec
xlat
imul
adc
push
sti
jmp
imul
push
insl
inc
pop
insl
cmp
pop
or
hlt
movsb
shrl
es
pop
addr16
aad
jl
cmpsb
mov
jp
sub
mov
pop
mov
push
push
fisttpll
mov
mov
jecxz
add
test
adc
fwait
ret
popa
cmc
cmpsb
mov
imul
push
inc
sbb
frstor
adc
or
sub
ss
or
flds
pop
nop
xor
push
insb
xchg
mov
cmp
subl
arpl
sbb
dec
nop
int3
xlat
stos
cmpsb
call
cld
xor
icebp
iret
fstpl
mov
pop
cmpsl
shrl
leave
ret
jg
xchg
xor
cld
jg
mov
fistps
es
je
dec
jnp
push
pop
push
jl
test
jecxz
leave
push
pop
mov
scas
inc
mov
xchg
push
arpl
push
loopne
adc
jge
cmp
pop
push
mov
push
arpl
push
mov
es
hlt
or
sahf
jle
mov
lods
add
sub
into
rorb
xchg
mov
mov
inc
push
ss
loope
sub
mov
fnstsw
int3
je
inc
stos
fstps
loope
js,pn
scas
push
je
lea
cmp
pushf
mov
inc
push
xor
int3
lea
cmp
pop
jbe
pop
lea
pop
push
mov
mov
je
int
fs
push
mov
into
arpl
sahf
xor
js
int3
cmp
ret
xchg
test
incb
jge
fsubr
mov
aaa
and
jecxz
sbb
fbstp
movsl
adc
or
andl
push
shll
pop
leave
and
gs
sarl
flds
pop
fnsave
insl
xchg
in
jns
mov
es
pop
pop
idivl
or
pop
jmp
and
sarw
repz
cmpsl
cwtl
lds
ss
pop
pop
cmp
jnp
xchg
and
jbe
sti
in
dec
sbb
rcll
sbb
mov
ss
xor
aas
xchg
xor
lret
add
or
test
xor
xchg
int
push
mov
lcall
mov
sub
ffree
mov
push
pusha
xchg
testl
mov
jge
jnp
xchg
pop
inc
cltd
inc
xor
ret
pop
mov
xor
mov
rcrl
push
mov
cmp
arpl
mov
adc
rclb
dec
enter
push
loope
imul
outsl
jge
mov
cmp
mov
rcl
sbb
xor
mov
stos
jno
scas
cmp
push
je
fldt
sbb
jbe
jp
xchg
pop
sbb
mov
dec
enter
jl
movb
mov
dec
jo
mov
adc
pop
pop
jmp
leave
add
mov
jo
xchg
lcall
in
inc
popf
addb
pop
mov
in
xchg
mov
enter
cli
rcrb
pushf
arpl
mov
les
in
add
adc
push
push
pop
or
cmpsb
mov
test
ret
dec
xor
xor
repnz
popa
dec
push
add
fcmovu
adc
mov
es
mov
adc
pop
imul
mov
shlb
xor
mov
xchg
ja
fs
movsb
sbb
pushf
jecxz
xor
out
push
fwait
incb
stc
adc
and
cmp
sbb
aas
jl
adc
clc
movd
push
or
mull
es
push
mov
jmp
dec
sub
daa
and
adc
pusha
adc
jb
arpl
sub
in
xchg
pop
push
or
pop
push
sarl
into
mov
mov
cld
or
cltd
subb
adc
stos
dec
int
clc
int3
cmp
mov
shl
insl
test
cmp
jecxz
add
loop
mov
cmp
pop
jecxz
jb
bnd
shlb
test
adc
into
xchg
scas
and
jecxz
sub
mov
or
or
xchg
movsb
xor
or
push
and
enter
sub
mov
add
adc
mov
mov
repnz
mov
cmp
jl
mov
sbbl
sbb
cmp
push
mov
cltd
aaa
je
jo
mov
lods
dec
sbb
clc
push
or
test
or
lahf
mov
lea
lods
mov
sub
scas
mov
xchg
cs
pusha
fldenv
es
ljmp
add
mov
int
mov
xor
cmp
fsubrl
std
roll
xor
jb
sbb
mov
std
mov
push
adc
push
jns
xchg
and
add
cld
mov
mov
lret
insb
insb
xlat
pusha
and
mov
push
jmp
jg
repz
loopne
jp
mov
in
or
sbb
rclb
lea
pusha
push
fbstp
xchg
inc
pushf
jle
bound
xor
call
ljmp
mov
xchg
icebp
and
mov
cmp
xchg
adc
pop
sbb
jns
jnp
in
or
inc
sbbb
and
push
pusha
push
add
fcmovu
movsl
clc
jns
sbb
cmp
mov
repz
inc
test
adc
dec
jne
xor
pop
cmp
shr
ret
and
out
pop
mov
icebp
add
js
aad
sub
in
je
or
pusha
add
sbb
ds
sbb
testb
fdivrl
pop
fwait
enter
xchg
xor
inc
mov
test
lods
or
int
pop
dec
movsl
outsb
ja
jge
mov
aam
cld
mov
mov
cld
movsb
xchg
lock
rorb
repz
nop
add
in
mov
mov
inc
jo
jp
es
xor
cmc
insl
pop
div
out
cmp
xchg
pop
mov
outsl
mov
pusha
cmpsl
cld
cwtl
xchg
mov
imul
push
mov
mov
push
js
push
add
add
movsl
mov
mov
and
jo
aas
mov
sbb
clc
and
sbb
test
jge
jno
js
pop
sti
mov
loopne
push
lret
das
push
add
aaa
loope
ljmp
mov
dec
sub
mov
shlb
fildll
mov
push
daa
lret
push
test
in
xchg
je
adc
std
outsb
xchg
test
imul
frstor
sub
cmp
imull
or
xor
mov
cmpsl
lahf
lock
sbb
xor
and
subb
into
subb
sub
iret
push
std
rolb
lods
test
cmp
iret
inc
sub
in
in
add
cmp
xlat
enter
xchg
dec
jge
jae
ds
mov
mov
xor
call
xor
dec
adc
sub
frstor
add
call
cwtl
cmp
xchg
packuswb
pop
mov
arpl
or
dec
xchg
test
dec
xchg
in
loope
ret
shlb
push
movsb
fcomi
movsb
cli
stos
xchg
xor
icebp
cmpsl
sti
jns
push
jecxz
dec
fcompl
inc
cli
and
shll
into
sbb
mov
roll
js
dec
jb
cmp
mov
adc
cmp
push
fwait
adc
cli
les
int
pop
mov
cltd
cmc
cmp
call
sbb
cmpsl
outsb
dec
je
xchg
rolb
bound
xor
mov
stos
push
sub
dec
les
adc
or
pushf
stc
pop
mov
popf
xchg
mov
jbe
or
movsl
and
push
mov
mov
int3
lea
xchg
push
push
aam
shl
sub
stos
xchg
ja
daa
clc
sbb
or
fnstenv
xor
cmp
sahf
mov
mov
sbb
cmpsl
jbe
jne
lret
jmp
test
xchg
pop
imul
ss
inc
lcall
cmpsb
sbb
add
pop
mov
fldcw
stc
fdivrs
lcall
jge
and
adc
xor
hlt
add
xchg
xor
std
pop
test
fstpl
push
fsubl
xchg
in
mov
add
jnp
jns
xchg
pop
and
pop
stos
ljmp
sub
jb
sti
int
cwtl
mov
mov
mov
mov
stos
mov
cli
pop
xchg
add
fs
mov
pop
cmc
xor
movsl
insl
je
pop
xor
rorl
cmp
sti
sub
sahf
ret
hlt
int
mov
jle
fstl
stos
adc
in
lret
and
pop
add
sbb
inc
jno
push
out
testb
pop
pop
cmc
xchg
test
xchg
sub
jge
decl
dec
xchg
daa
adcl
mov
icebp
adcb
test
shr
call
mov
daa
sbb
shlb
xchg
in
and
inc
lret
test
and
fmulp
shrb
jb
movsb
pop
js
mov
push
push
sbb
pop
sarl
sbb
jb
jge
fisttpll
inc
insb
out
add
sub
jne
sbb
aas
ja
lret
rcrl
cmpsb
push
stc
or
out
nop
push
in
outsb
jbe
add
adc
jl,pn
int
dec
pusha
cmp
inc
fwait
sub
mov
out
or
lods
fcmovnbe
cmpsl
mov
inc
cmp
push
in
pop
fmull
dec
movb
adc
and
add
cmpsl
mov
jb
sub
out
lock
lods
in
push
pusha
pop
cs
sbb
dec
dec
loope
sahf
fstl
popf
andl
pop
xchg
test
jno
cmp
nop
xchg
xlat
leave
or
mov
mov
sub
xor
push
mov
mov
test
cwtl
xchg
sub
add
mov
aaa
sbbb
push
in
and
outsl
xlat
ret
push
aad
xchg
xor
adcl
pushf
jo
int3
and
mov
fimuls
in
jo
cmpsb
mov
mov
movsb
ds
mov
outsb
dec
out
out
hlt
inc
fmuls
xchg
les
lods
ja
leave
and
test
jecxz
jl
popa
jmp
jge
and
sub
je
pop
imul
or
or
pop
inc
sub
outsb
or
pusha
push
inc
mov
cmp
mov
sub
bound
mov
lods
fsubp
pop
repnz
or
in
mov
add
mov
mov
or
mov
inc
hlt
add
lock
lahf
mov
out
pop
rclb
imull
shl
xlat
push
arpl
push
shlb
arpl
add
inc
jmp
sub
mov
ds
cmp
aas
aas
aas
jb
cmpsb
mov
pop
cmp
loopne
das
das
and
push
mov
sbb
insl
jl
push
jne
faddl
bound
js
popf
cmp
jle
adc
dec
adc
movsb
jae
sahf
adc
movsb
jmp
test
sti
in
lret
divl
frstor
push
xchg
mov
pop
add
push
jge,pn
sub
ja
rolb
xacquire
mov
shrb
dec
pop
cmpsb
sub
insl
jmp
repnz
mov
fstpt
lahf
mov
sbb
repz
mov
outsl
loope
xor
and
outsb
push
out
int
psubb
ret
inc
lea
xchg
mov
pushf
push
sar
mulb
inc
fucomip
mov
push
cmpsl
outsb
fcomps
in
and
dec
test
push
outsl
xor
sub
or
jg
cltd
inc
je
push
cld
xor
dec
insl
jmp
in
adc
push
les
idivb
cmp
and
ljmp
loope
inc
pop
mov
sti
addr16
add
jns
push
sub
hlt
test
ljmp
mov
lahf
sbb
and
xor
cmpsb
jae
pop
adc
jg
mov
pop
mov
icebp
dec
xchg
xlat
fildll
pop
lods
in
pop
xor
fsubs
or
mov
sti
loop
sbb
mov
dec
dec
mov
sub
mov
insb
dec
mov
inc
dec
inc
dec
xchg
cld
fnsave
lcall
jp
ret
movsb
mov
jge
pop
iret
xchg
jb
push
dec
stos
cmc
fcomps
sub
mov
loop
pop
in
jns
lret
int
jmp
inc
gs
inc
aas
icebp
stos
mov
icebp
mov
lods
cmpsb
mov
fdiv
flds
shlb
arpl
jle
push
mov
inc
movsl
repnz
in
mov
ja
mov
inc
mov
pop
sub
xchg
idivb
dec
loope
pop
jae
jp
sti
sbb
or
xor
je
inc
movsb
jp
fists
dec
push
inc
inc
adc
and
call
js
shrl
jl
xchg
es
mulb
mov
mov
inc
xchg
sub
sub
pop
test
push
lds
mov
xor
pop
adc
or
out
incl
add
shr
cmp
and
jmp
xorl
stc
mov
mov
adc
sbb
jo
test
and
je
mov
xchg
xor
sub
loopne
sbb
ret
movsl
mov
nop
lahf
or
lock
aam
in
je
std
cmp
call
outsl
outsl
out
lock
ficoms
adc
sti
sarb
push
in
add
mov
lret
out
inc
rcrb
pop
mov
push
lahf
and
in
mov
and
mov
loope
adc
mov
aad
or
out
xchg
jbe
add
push
jle
sub
dec
mov
and
and
test
sbb
mov
mov
test
cmp
adcb
mov
jb
cmpsb
jecxz
loopw
scas
mov
sbb
insb
cli
cmpsb
daa
fs
fstl
adc
in
xchg
inc
cmp
lret
imul
mov
pop
lods
jge
stos
aam
jmp
and
mov
inc
push
xor
outsl
f2xm1
mov
cmc
add
cltd
nop
cli
stos
cmp
push
add
xlat
jnp
sbb
loope
loope
bound
pop
sbb
push
test
mov
adc
out
cs
in
mov
dec
push
stc
jns
fsubl
aaa
or
dec
lcall
in
adc
orl
dec
js
insl
ficoml
and
pop
mov
push
and
jo
push
fildl
cmp
and
les
add
cmp
lea
jmp
int
add
ja
dec
adc
push
cwtl
sbb
mov
dec
mov
nop
mov
sub
shll
imul
out
xchg
dec
movsb
pop
je
aas
fnstenv
scas
xor
mov
cmc
and
cmpsl
add
loope
ja
mov
cmpb
fcmovb
cmp
inc
jmp
mov
mov
xor
jo
sbb
or
mov
repz
inc
pop
cmp
int3
jl
adc
pop
xlat
adc
sbb
repz
dec
sub
iret
imul
xor
adcl
repnz
add
sub
into
xor
ror
ret
or
in
out
aaa
cmp
xor
imulb
push
sub
aas
iret
sbb
hlt
stc
adc
mov
int
xchg
in
xchg
push
or
test
mov
lods
sbb
inc
punpcklwd
xchg
dec
mov
sub
stos
inc
outsb
or
jo
sbb
mov
test
xchg
test
adc
push
mov
cs
pop
insl
mov
xchg
push
jecxz
ss
aad
mov
dec
sti
push
jecxz
shl
leave
add
lods
push
imul
xchg
das
sbb
mov
mov
or
out
lcall
cltd
push
cwtl
clc
outsl
cld
shrl
sub
outsb
test
imul
sub
stos
in
cmp
in
and
adc
lock
or
inc
dec
daa
sti
and
pop
xlat
je
aad
pop
call
addr16
push
andb
mov
jmp
cmp
xchg
or
push
add
inc
iret
add
adc
and
push
out
xlat
lods
insb
sti
cmp
or
aaa
pop
mov
fldt
aaa
loop
ljmp
jmp
scas
lret
shr
add
pop
stc
cmpsl
shlb
arpl
lret
mov
jne
lds
ja
push
sub
mov
imul
pop
jl
fisubrl
sbb
xor
rorb
loopne,pt
mov
out
fnstcw
jbe
xor
test
pop
mov
pop
xchg
data16
adc
cmp
test
ret
call
push
jg
movsb
dec
add
push
sub
cwtl
sbb
jbe
xchg
pop
lds
mov
ja
dec
mov
in
outsl
dec
jns
clc
pop
sub
repz
jl
add
mov
fstl
into
sbb
or
rcrb
push
sbb
out
imul
push
mov
cmc
mov
cltd
rorl
dec
inc
cmovo
dec
ret
leave
dec
adc
xlat
in
sub
lret
bound
xor
jno
pop
lods
js
pop
ja
iret
rcl
outsb
in
and
bound
and
pop
in
sbb
mov
gs
stos
js
add
xor
outsb
adc
sub
push
movsb
jge
xor
add
fstpt
and
int
and
lcall
mov
js
cwtl
add
push
dec
cmpsw
mov
inc
push
jle
cmpsb
out
test
or
inc
xor
dec
xor
push
aad
pushf
cmc
xor
in
mov
mull
xchg
imul
sub
push
inc
cmp
sbb
mov
rclb
je
les
rorl
mov
lods
addl
sub
iret
decb
pop
inc
and
mov
sub
icebp
push
mov
sarl
shl
mov
cmp
test
push
pop
pop
sbb
gs
mov
and
xor
repnz
pop
lea
push
in
jo
ljmp
xor
stc
daa
jo
jbe
mov
add
and
add
out
and
enter
in
mov
pop
adc
xchg
das
push
sbb
adc
xchg
or
add
dec
int
and
mov
adc
sub
push
mov
jle
jmp
cmp
fnstsw
cmpsl
aas
pop
sbb
addr16
dec
pop
les
out
sbb
pop
shl
fisubl
lcall
add
popf
mov
popf
cmp
mov
leave
cmp
shrl
jnp
inc
jb
mov
sarl
jecxz
or
jg
mov
ja
push
aam
xchg
sub
add
out
cmc
mov
ficomps
insl
add
cmp
add
sahf
sbb
xor
aad
dec
test
ret
or
mov
xlat
out
xchg
fucomi
sbb
mov
and
sbb
test
cs
pop
loop
in
jmp
ds
inc
sub
bound
test
cmp
out
push
stos
mov
inc
iret
mov
lahf
fmuls
pop
decl
mov
push
pushf
inc
loop
scas
mov
xor
inc
jge
or
xlat
dec
mov
shlb
dec
sahf
add
hlt
shl
andb
fiaddl
cs
nop
int3
cmp
or
push
pop
dec
mov
add
movsb
fwait
mov
stc
xor
stos
mov
cmp
into
pop
outsl
and
data16
xchg
test
lds
jge
xor
sbb
mov
in
jle,pt
lods
pop
icebp
fwait
jmp
jle
mov
jo
adc
aaa
mov
incl
mov
adc
je
fsts
cmp
aaa
imul
ret
jp
pop
leave
sbb
dec
cmp
loope
int
mov
push
and
sarl
insl
js
mov
clc
mov
mov
jl
imul
out
pop
test
cmpsb
test
mov
shll
cld
sub
into
aas
out
stc
call
or
stos
insb
loope
rcrb
mov
fists
int3
outsb
sbb
ljmp
int3
cmp
ss
aaa
pop
cmp
repz
aam
les
popa
sahf
ret
lret
sbbb
push
and
xlat
inc
adc
mov
mov
inc
cmpsl
rclb
loop
pusha
pop
out
jg
std
ficoml
jp
xchg
movsl
aam
and
mov
inc
add
ret
ds
jb
push
loope
push
inc
sub
ja
fmul
mov
arpl
cmp
pop
and
inc
nop
pop
xchg
dec
xorb
subl
dec
inc
addr16
push
imul
xor
scas
xorb
orb
mov
cmpsw
fdivrl
mov
jmp
popa
jge
mov
testb
aaa
ljmp
inc
mov
les
pop
inc
loop
adc
push
xor
nop
mov
add
int3
gs
jmp
cltd
cltd
pop
popa
adc
jp
sub
into
js
mov
xor
xchg
push
mov
mov
cmpsl
insl
mov
or
or
jg
xor
rep
and
out
sbb
andb
inc
gs
mov
rolb
fldt
pop
hlt
cmp
sbb
xchg
enter
sbb
mov
xchg
es
mov
sbb
xlat
pop
pop
xorl
ret
repnz
les
jne
ja
jo,pt
add
sub
adc
ds
jnp
pop
shll
js
je
push
xchg
and
sbb
and
sub
push
jbe
jns
cmpsl
cmpl
mov
shl
sbb
sbb
ss
rorb
xor
jmp
in
pop
arpl
nop
xor
mov
sti
adc
lods
and
xor
jg
add
cmp
dec
aam
mov
dec
inc
popa
push
shll
out
inc
push
jae
into
jbe
and
sbb
data16
insl
ljmp
jne
inc
lret
jp
jl
leave
push
push
loopne
sbb
push
js
jo
loope
pop
mov
jb
pop
cmp
pop
dec
and
loop
jne
popa
xchg
mov
pop
dec
xchg
pop
mov
mov
lcall
push
hlt
sbb
mov
push
add
adc
mov
les
pushf
fiaddl
jnp
ret
adc
test
mov
stc
push
push
loope
mov
std
pushf
pop
fsqrt
jge
add
fadd
int3
mov
sbb
push
shr
xchg
or
jno
add
nop
add
adc
call
mov
je
jnp
movq
movsb
repnz
push
leave
mov
xchg
xchg
xchg
xchg
jno
xor
ret
add
cmp
cltd
push
ret
je
xchg
and
fistpll
in
mulb
lods
sub
cli
and
into
mov
xor
sbb
mov
repnz
mov
lock
adc
sti
mov
es
sarb
pusha
test
es
enter
xchg
or
mov
sub
dec
lods
mov
mov
ret
es
jp
dec
mov
in
leave
or
bswap
pushl
movsl
jno
xchg
mov
mov
mov
xchg
pop
dec
or
mov
xlat
pop
xlat
fidivs
out
inc
lods
fistl
addb
shrb
out
push
inc
pop
cli
pop
adc
cli
shrb
jmp
jmp
xor
jo
sbb
dec
in
jp
xor
fwait
stc
inc
pop
mov
xchg
addr16
mov
mov
scas
fcoml
mov
xchg
cmp
imul
cmp
push
mov
loop
dec
dec
imul
rclb
dec
andl
sub
stos
jp
mov
xchg
mov
out
mov
add
xchg
mov
int3
into
push
test
adc
mov
cs
sbb
in
ja
inc
pop
arpl
lahf
dec
cmp
es
ja
mov
or
push
idiv
xor
adcl
jae,pn
cmp
push
inc
pop
adc
pushf
int3
cwtl
jne
cltd
scas
dec
cwtl
clc
add
mov
mov
cmp
fwait
sub
pop
arpl
jp
sbb
les
iret
test
inc
inc
lock
fs
arpl
pop
mov
sbb
addr16
xchg
mov
or
sar
jns
dec
daa
out
jecxz
jp
xlat
daa
outsl
adc
test
cmp
icebp
or
shrl
dec
lea
cmpsl
mov
clc
adc
dec
aam
xchg
call
mov
jb
dec
test
lods
jns
cmp
xchg
je
in
or
mov
cmpsb
and
loopne
push
int3
jmp
jge
das
cs
cmp
add
test
out
cs
repz
pop
and
sub
mov
imul
adc
dec
test
test
mov
mov
pop
pop
push
or
jge
cmp
mov
rcll
das
adc
cmp
lea
out
data16
fcmovbe
jmp
xor
dec
inc
add
enter
outsb
push
pop
cmp
inc
and
xchg
sti
xchg
rolb
push
push
add
jne
cmpsb
and
mov
xor
aam
pushf
data16
pop
jb
sub
xchg
icebp
cmp
cmc
dec
mov
mov
stos
sbb
loopne
push
cwtl
pop
sbb
jmp
lds
xorb
mov
mov
inc
stos
imul
sbb
sbb
jl
es
xor
sub
lcall
jae
mov
sbb
inc
ret
pop
lret
ror
and
mov
pop
mov
es
push
vmovapd
iret
adc
jmp
pop
mov
push
jp
idiv
fistl
cmp
mov
jno
lods
jecxz
andb
inc
xor
dec
lcall
pop
dec
out
rorb
mov
aas
cmp
loop
rcll
leave
loop
call
jle
test
shrl
loop
xchg
fstps
out
xchg
imul
add
sub
std
jnp
mov
mov
repz
and
sbb
movsl
inc
push
ljmp
lock
loopne
and
nop
lods
pop
jo
push
pop
idivl
jecxz
mov
xchg
imulb
pop
sbb
push
ret
jp
sbb
lds
push
es
stos
or
mov
clc
pop
cltd
in
pop
in
test
mov
xlat
scas
roll
push
inc
sub
jo
and
mov
scas
popa
sbb
leave
out
sub
daa
mov
dec
mov
popa
inc
das
inc
sbb
ret
fsubrs
test
stos
xchg
insl
scas
add
dec
sub
mov
lock
jle
sub
push
pop
dec
daa
push
xor
sbb
lods
loopne
pop
lahf
leave
addb
lds
and
rcl
adc
lret
fimuls
fdivs
iret
gs
arpl
and
xor
inc
fs
das
sub
jg
xchg
mov
sahf
rcll
mov
lret
enter
xchg
inc
xor
lcall
push
dec
xchg
mov
imul
mov
bound
push
aam
mov
cmp
mov
or
and
fldl
or
nop
jno
scas
sub
add
mov
xchg
ret
or
dec
aad
jb
cmc
rcr
jmp
mov
mov
enter
fs
mov
test
sbb
cs
mov
and
popa
aam
cli
cwtl
inc
push
pop
push
jne
repnz
data16
mov
lret
or
xchg
xchg
sub
jno
mov
adc
aam
out
mov
cmpsb
dec
mov
or
fisubrl
dec
notl
lea
jp,pt
jle
xchg
call
daa
inc
dec
les
pop
mov
std
pop
scas
dec
adc
lock
arpl
xchg
imul
out
jle
rclb
cmc
xor
fbld
fidivs
xlat
dec
push
dec
test
adcl
mov
loopne
dec
in
outsb
push
add
pop
fs
adc
leave
push
xor
push
add
call
mov
int
les
mov
scas
mov
mov
jno
jnp
imull
fiaddl
clc
aaa
mov
pusha
dec
clc
inc
cmpsb
mov
lods
fwait
inc
xchg
aaa
or
insb
mov
inc
cmp
loope
mov
cmpsb
clc
mov
push
cli
test
cltd
fcoml
fwait
and
and
jecxz
aas
mov
dec
test
push
mov
mov
pop
push
test
jae
ja
jae
shll
xlat
fnstsw
sbb
jp
sbb
jno
sbb
mov
notl
xor
or
test
inc
pop
sbb
and
lcall
sub
push
or
mov
sbb
lock
sbb
jmp
test
flds
adc
cmp
fistpll
lahf
xor
or
lahf
inc
shlb
xchg
mov
xchg
mov
cwtl
mov
into
and
or
outsl
xchg
mov
in
in
xchg
outsb
push
data16
mov
cmp
sub
and
lret
and
dec
mov
out
out
and
sub
mov
es
adc
imul
push
sbb
fmull
cmp
dec
mov
clc
push
ret
xor
mov
or
xchg
and
mov
add
cmpsb
fsubrs
xor
push
or
xchg
mov
into
leave
jp
ljmp
xor
pop
mov
add
das
xlat
inc
sbb
mov
pop
sub
enter
pop
add
inc
mov
jl
loopne
add
push
jb
xor
ljmp
xchg
mov
int3
insb
or
fistps
fs
test
movsb
test
lock
sarl
shlb
in
leave
add
in
and
xchg
mov
inc
jl
in
or
mov
dec
dec
lods
pusha
or
mov
xchg
dec
stos
pop
xlat
dec
arpl
imul
sub
push
clc
outsb
push
xlat
sbb
lcall
jmp
inc
jb
aaa
jae
movsb
mov
fcoml
pop
sti
pop
xchg
xchg
test
xor
and
movsl
movsb
dec
sti
xor
xor
outsb
popf
gs
add
sub
mov
and
cmp
aas
push
push
sti
mov
mov
add
jg
dec
loop
icebp
inc
insl
xchg
fstps
inc
jns
fnstenv
clc
fdivrl
pop
xchg
pop
mov
lds
cmp
fldcw
iret
cmpb
ja
push
sarw
cmp
mov
push
mov
xchg
mov
xchg
ret
fadds
mov
push
or
lock
fstps
jge
ja
jbe
jl
fs
sub
push
push
imulb
inc
xor
xor
inc
clc
loope
int
dec
jg
pop
les
pop
jecxz
sub
rorl
je
or
mov
test
ja
outsl
stos
lods
fcmovu
push
mov
inc
jmp
pushf
enter
ror
adc
push
jmp
cli
daa
cmp
je
nop
vmovd
int
sbbb
inc
xchg
sub
jmp
stc
ret
inc
arpl
or
mov
xchg
xchg
sbb
sub
mov
and
mov
divb
mov
ffreep
stos
xchg
xchg
push
adcb
mov
arpl
inc
jecxz
es
test
dec
lret
sbb
test
add
push
orl
dec
test
pop
and
jb
mov
outsl
jmp
xor
mov
jo
or
popf
rclb
xorb
nop
ljmp
add
inc
fdivrl
fimull
aas
push
push
stos
insb
cmc
dec
add
mov
sub
fcoms
cld
jno
xchg
add
dec
dec
and
hlt
stos
mov
loop
mov
add
mov
pop
xchg
cmpsb
and
shll
push
xor
cmp
scas
popf
sub
cmc
fwait
sub
mov
and
out
or
inc
adc
rcrl
or
cmp
jb
xor
inc
fnsave
xor
and
loope
shr
loop
xchg
push
movsb
xor
roll
push
test
or
adc
inc
out
fs
ljmp
sub
mov
xchg
push
enter
or
fistl
stos
cmp
push
xchg
fstpl
cld
and
mov
int
dec
imul
dec
adc
pop
and
add
add
push
idivl
jecxz
sbb
aam
inc
cmp
xchg
pop
shl
sub
sbb
lea
jnp
lahf
imul
or
cmc
mov
decb
jb
xorl
pop
out
cld
mov
pop
ret
pop
cwtl
imul
mov
mov
push
adc
mov
pop
xchg
mov
enter
lods
mov
stos
sub
repnz
adc
mov
dec
test
inc
mov
mov
add
pop
mov
xchg
jae
ljmp
pusha
out
push
test
ja
jo
scas
movsl
bnd
stc
dec
nop
pop
dec
aam
lea
push
sarb
popf
icebp
pop
imul
mov
xchg
cmpl
je
scas
sbb
repnz
insb
enter
dec
add
xchg
jmp
and
insl
add
xor
insl
and
repz
notl
lahf
mov
cmp
lock
pop
das
push
sbbb
ret
push
inc
popa
sub
mov
sbb
jno
ss
jns
mov
jbe
jae
ficoml
lcall
shrl
xor
lcall
jae
mov
mov
mov
or
push
lret
orb
rclb
je
push
mov
in
push
lret
jg
adc
mov
xchg
imul
push
nop
dec
out
cmp
lahf
xchg
xor
test
lahf
xor
push
xor
punpcklbw
dec
xor
sub
push
rol
pop
divb
std
mov
ret
fcmovne
and
cmp
xchg
and
pop
sahf
mov
es
or
mul
sbb
iret
mov
scas
loop,pt
fwait
xchg
push
push
cmpsl
iret
sub
mov
aad
sbb
jb
pop
jns
cmpsb
fistl
popf
pop
daa
push
sbb
cwtl
sub
or
dec
mov
and
or
mov
xor
lret
push
jmp
int
je
punpckldq
inc
cmc
push
sahf
out
lock
fistpll
icebp
in
jne
dec
cmp
sbb
jbe
int3
xor
ret
push
sbb
enter
test
jae
aad
ret
xchg
pop
mov
and
push
mov
cmpsb
mov
imul
or
jle
cmp
je
in
mov
push
jp
cmp
icebp
xor
pop
std
jp
aad
shl
scas
pop
mov
das
lret
jecxz
lret
mov
pusha
or
sbb
je
ficoml
loopne
cmp
mov
fadds
or
push
fcoms
or
lahf
or
mov
and
sarb
mov
lcall
int3
jg
aad
xchg
pop
sbb
insl
add
data16
mov
jle
lret
add
arpl
mov
adc
in
pop
jecxz,pn
out
lods
test
mov
dec
pop
jge
pop
add
jne
in
sub
lods
dec
dec
and
xor
xchg
aam
movsb
aad
das
lcall
mov
sub
and
mov
decb
es
cld
movhps
cs
xchg
adc
test
cld
lods
sahf
or
rolb
ret
inc
and
int3
loopne
sahf
stos
mov
insb
pop
test
mov
sarb
sub
cmp
jl
lret
xchg
dec
push
into
mov
sti
or
test
push
lcall
dec
ljmp
pushf
pop
ljmp
arpl
int3
push
cmp
xlat
imul
xchg
sub
adc
sti
push
mov
dec
in
adc
or
adc
mov
xor
lret
mov
mov
lret
mov
jnp
mov
loope
test
xor
mov
stos
aas
dec
fadds
dec
push
out
xchg
xor
or
inc
pop
jo
xchg
mov
sub
insb
push
dec
mov
fidivrs
xchg
pop
mov
mov
sti
fnsave
test
and
popl
shl
ljmp
int3
aam
push
push
xor
or
ja
mov
cmpsl
es
sahf
bound
add
nop
jge
cmpl
dec
jnp
jecxz
mov
push
sub
fidivrs
orb
lcall
pop
ss
cltd
pop
push
mov
sub
mov
pop
out
subl
or
jle
sub
jecxz
xor
dec
cli
push
and
test
xchg
movsl
or
push
mov
jge
or
test
jno
jne
dec
sub
mov
sub
pop
mov
pop
sbb
clc
lcall
pusha
arpl
je
xor
jp
adc
clc
call
test
inc
dec
inc
clc
mov
insb
cmp
jle
iret
jo
dec
icebp
mov
pop
lret
jns
cmp
mov
sub
sub
jo
xchg
push
xor
outsb
push
inc
xorb
sub
and
es
mov
cmp
jne
sub
push
out
mov
sbb
push
pop
fcmovbe
sub
jmp
cs
cmc
lcall
fistpl
divb
inc
xchg
call
ret
jg
mov
out
int
les
pusha
loope
ljmp
lret
in
fildll
pop
sbb
data16
xor
test
scas
insb
jo
out
mov
xor
movb
dec
aaa
lcall
mov
lea
test
orb
in
mov
sub
cmpsb
mov
pop
sahf
mov
mov
or
and
jne
cmpsl
pop
push
cmp
das
pop
push
jp
rclb
mov
sub
mov
jne
aaa
lahf
out
inc
pop
inc
shlb
cli
jno
aam
add
inc
dec
jae
or
test
fdivp
jne
add
mov
xchg
add
jnp
or
cmp
lods
imul
iret
xchg
push
ret
mov
ja
xor
mov
test
int
xor
pop
fs
sbb
pushw
aaa
mov
jg
shrl
dec
sub
pop
leave
pushf
add
add
xchg
inc
inc
push
mov
loopne
adc
sbbb
jle
mull
xchg
dec
mov
cmp
cli
push
push
movsb
mov
mov
lea
out
sub
loope
sub
pop
cli
xchg
mov
mov
fistps
adc
loope
mov
mov
and
ret
aas
mov
mov
fsubrl
sarb
fadds
jge
push
jbe
aaa
xor
mov
repnz
mov
loopne
nop
icebp
mov
xlat
mov
inc
adc
xchg
lret
jbe
xchg
inc
pop
stc
adc
ds
dec
cmp
push
dec
fdivp
arpl
or
pop
cwtl
orb
mov
negl
ljmp
lret
adc
stc
xor
pop
cli
xchg
and
fwait
adcb
pop
xchg
push
cmp
hlt
push
orb
push
subb
jbe
cwtl
aam
lock
adcb
inc
popa
sub
lock
pop
fcmovne
addr16
mov
imul
mov
sbb
repz
testb
cmp
push
outsl
xor
mov
jl
dec
and
mov
int3
jmp
cld
and
mov
lret
pusha
mov
outsb
mov
cmp
cli
pop
lret
out
jg
pop
fisubrl
test
repnz
cmp
sahf
cmp
lea
fcoml
mov
mov
mov
push
mov
out
push
jno
cmp
dec
loop
mov
lods
xor
push
subl
mov
and
aad
icebp
das
mov
sub
add
jl
mov
push
out
sbb
out
mov
add
jb
push
movl
jl
add
mov
mov
mov
push
sub
sbb
dec
int
out
jecxz
and
adc
jns
or
jno
cli
or
dec
lods
inc
mov
add
dec
mov
xchg
fwait
xor
pushf
clc
daa
aas
pop
or
mov
and
xor
push
pop
xor
ljmp
cli
out
test
aaa
adc
push
gs
and
lret
lahf
mov
clc
out
fidivl
push
lcall
dec
pushf
jecxz
sbbb
mov
fdivrl
cmp
cmp
in
scas
aas
mov
add
outsl
jge
push
aad
mov
insb
js
or
xor
test
movsl
add
and
adcb
les
inc
and
add
repz
loop
sub
loopne
mov
sbb
cmc
adc
lcall
mov
and
pop
outsl
les
mov
aas
rcrb
push
jl
xlat
push
inc
mov
into
cmpsl
aas
sbb
stos
lahf
jecxz
addr16
pusha
daa
pop
sub
fcomps
jge
mov
jns
fimull
mov
leave
mov
inc
lahf
shlb
cmpsb
ficompl
add
jbe
dec
aam
mov
je
lret
outsb
repnz
scas
xchg
sub
mov
cmp
mov
adc
mov
lds
mov
add
xchg
mov
dec
xchg
jnp
jae
pop
xchg
push
lahf
icebp
hlt
cs
push
cmp
popf
xor
and
jnp
insl
je
jnp
adc
lods
inc
dec
cmp
sbb
xor
adc
and
sbb
icebp
test
scas
or
add
mov
pop
int
insl
sub
stc
mov
and
dec
add
shl
cmp
orl
push
inc
inc
push
and
std
xchg
ret
out
lds
fsub
aam
lds
mov
pushf
fildll
cmp
sub
inc
lods
adcl
repz
xchg
mov
jmp
lret
add
mov
push
stos
mov
mov
pop
xchg
cmp
ja
jp
outsb
movsb
jb
test
pop
jp
mov
icebp
leave
loopne
iret
mov
or
jp
add
cltd
movsl
std
dec
jp
push
idivb
add
fimuls
mov
xchg
push
push
sbb
inc
shlb
addb
outsl
mov
xor
add
pop
or
lods
and
xchg
pop
add
in
sub
cmp
je
fiadds
sar
int3
fwait
stos
loop
lds
ror
shrl
pop
and
push
ss
inc
cltd
xchg
inc
aam
fs
push
in
shlb
popf
cmp
mov
stos
cwtl
test
je
aad
sub
rorl
mov
fwait
pop
pop
push
mov
test
xor
sbb
scas
loope,pt
mov
popa
mov
cltd
popa
test
add
data16
or
xor
adc
mov
hlt
cmpsb
scas
lock
sub
pusha
pushf
or
cli
dec
mov
adc
dec
mov
fdivs
pusha
mov
sub
push
cmp
fabs
pop
and
mov
jno
imul
jp
pop
sbb
mov
jnp
xchg
lahf
add
ds
sarl
stc
jne
mov
sbb
repnz
cltd
and
repz
out
out
aam
aam
imul
dec
fdiv
psraw
test
ss
call
sub
inc
dec
in
shlb
fmul
aas
das
fsubr
cmp
or
jp
rcr
xchg
iret
add
push
or
pop
sub
cld
jns
das
loop
es
jae
movsb
mov
or
and
in
stos
pop
cld
add
sbb
dec
cmp
addr16
loopne
sbbl
jp
aas
int3
testb
out
xchg
loop
scas
std
push
scas
cli
in
and
shrl
dec
shl
out
fs
cmp
es
fs
ljmp
cltd
jns
cld
stc
dec
mov
jo
test
mov
andb
adc
sub
repnz
mov
cltd
outsl
stc
test
or
xor
jnp
leave
xchg
mov
loop
inc
mov
pusha
icebp
out
and
jae
pop
xchg
subb
and
outsb
dec
push
adc
push
pop
push
insl
adc
rcll
xlat
fistpl
ja
pop
outsl
ljmp
inc
lea
pop
loop
jnp
inc
push
aam
adc
pop
ds
dec
jmp
call
cmp
data16
mov
xlat
mov
sbb
cmpsl
insb
sub
pushf
adcb
xor
mov
arpl
pop
and
push
test
aas
jb
sub
xchg
jge
fidivrs
inc
stos
in
and
in
ds
and
arpl
movsb
sbb
ja
imul
xchg
ds
popa
pop
push
inc
ljmp
jno
lods
jb
insb
addr16
mov
sbb
cmp
outsb
bound
cmp
int
mov
lcall
gs
and
add
cltd
add
aaa
movsl
jns
cltd
mov
mov
dec
divb
mov
xor
fisubrs
sub
xlat
xor
mov
mov
in
loopne
sahf
xor
enter
sub
sbb
divb
push
loope
or
jl
arpl
aas
in
xchg
lahf
pop
in
inc
jge
adc
int3
mov
adc
push
rclb
fcom
push
sbb
mov
stc
xchg
pushf
lock
lock
orl
adc
and
push
lock
addr16
out
mov
enter
mov
in
or
add
outsb
sbb
mov
xor
in
insb
cmp
lods
iret
jb
fcoml
loopne
aam
xor
cmpl
xor
sub
sub
dec
rcrl
repnz
pop
into
icebp
xlat
out
mov
pop
pop
stos
fistpll
add
jbe
mov
cmp
mov
cwtl
sbb
movsb
jns
cmp
rcrl
fprem
es
jp
sarl
or
popf
cmp
sub
test
out
pusha
mov
mov
sarl
pop
rcrl
outsl
leave
stc
jecxz
or
mov
pop
arpl
shrb
ret
and
xor
incb
mov
movsb
sar
add
pop
jnp
shll
or
xlat
mov
or
cvttps2pi
loop
arpl
aam
subb
inc
repnz
jle
mov
pop
pop
mov
outsb
push
pop
push
lods
inc
mov
out
insb
das
push
pop
test
cmpl
sub
aam
jl
scas
cwtl
dec
xchg
and
iret
hlt
push
add
mov
scas
sub
int3
nop
xchg
sub
cld
icebp
out
lret
pop
lods
mov
jne
pop
xchg
scas
xchg
imul
add
imul
fwait
and
pop
push
xor
inc
or
add
popw
insb
add
xor
xor
lods
dec
mov
sub
cmp
mov
movsb
inc
sahf
lret
cs
mov
loopne
clc
mov
mov
push
insl
lds
sbb
fcom
cmp
jge
jnp
push
pextrw
cmpsl
pop
repnz
pop
sub
mov
mov
ret
shlb
test
lock
mov
xchg
mov
lret
repz
mov
arpl
pusha
pop
jg
stos
dec
mov
add
cltd
push
incb
cld
cmp
add
mov
addr16
xor
div
adc
imul
mov
dec
sbb
pop
cmp
addr16
out
or
pop
xorl
jb
dec
fstps
bound
dec
mov
xchg
mov
mov
popf
fldl
cs
jg
mov
lods
out
popf
test
lods
and
lcall
ds
stos
sbbl
ss
iret
push
jge
jne
imul
adc
push
inc
jmp
arpl
or
popf
int
add
jne
mov
lock
out
xor
jp
gs
scas
cld
je
jns
and
or
and
imul
inc
jb
mov
sarb
push
xchg
cmp
in
xchg
inc
add
cmp
jmp
jae
sub
mov
adc
loop
test
movsb
push
pop
adc
icebp
in
sbb
cmpsl
pusha
into
popf
pop
sub
imull
daa
mov
shrl
addr16
add
stc
push
or
cmp
scas
mov
in
mov
lcall
xchg
icebp
fdivl
xor
cmp
pop
notb
bound
sub
sbb
mov
hlt
and
ss
adc
repnz
rorl
lods
and
and
jl
rcl
gs
ds
or
pop
popa
pop
sub
mov
imul
mov
push
out
rcrl
pop
inc
repnz
xchg
sbb
shlb
push
leave
add
or
mov
insl
or
xchg
cwtl
subl
ret
xchg
test
pop
push
jbe
sbb
out
xorb
out
insb
lret
pop
adc
pop
call
movl
adc
push
jne
mov
sub
sti
in
mov
sub
inc
inc
mov
pop
xor
push
dec
out
lds
sub
movsb
jns
dec
sub
fmull
or
test
setne
loopne
in
idivb
les
push
dec
pop
lret
js
bound
out
int
out
pushf
into
in
inc
lods
inc
mov
jecxz
push
mov
inc
sahf
mulb
aam
data16
mov
out
xlat
ficoml
rep
std
xchg
push
cmp
fadd
mov
out
adc
push
aas
fimuls
dec
and
dec
mov
jmp
pop
push
pop
cltd
xchg
stc
mov
fidivl
adc
sbbb
mov
daa
push
into
ret
push
addr16
push
adc
sti
mov
jp
mov
mov
push
mov
es
xchg
xchg
arpl
push
dec
test
int3
xchg
lret
add
fdiv
inc
and
stc
cmpsb
lods
mov
push
outsl
sbb
js
lret
leave
lock
cmp
lret
and
jbe
dec
dec
fsts
scas
push
es
jmp
shll
mov
sub
movsl
jecxz
lret
xor
xor
push
lods
pop
out
pop
mov
aad
mov
shl
mov
xchg
aaa
das
jne
sbb
push
cltd
call
lods
andb
addr16
push
fcmove
lret
test
or
mov
xor
insl
movsl
test
add
loopne
frstor
sti
inc
pop
lcall
or
mov
jge
or
sub
inc
pop
test
int
hlt
mov
lea
xchg
fistps
jle
call
mov
push
push
orl
jp
cltd
mov
pop
fcomp
xchg
fldcw
or
xchg
enter
adc
pop
mov
pusha
jl
pop
mov
dec
inc
std
cmp
cmp
push
cli
push
frstor
or
sub
into
out
cmp
std
out
adc
lret
sbb
loopne,pn
cmc
movsb
push
lret
mov
mov
ds
shll
ds
test
and
pop
sbb
add
div
fistpll
cmp
ljmp
cmp
jb
adc
jp
inc
jns
loopne
cmp
out
fwait
or
les
mov
ret
add
pop
or
lods
sbb
pusha
lret
dec
mov
mov
cwtl
mov
stos
daa
aad
xor
push
jg
js
std
ret
in
ret
dec
push
jecxz
push
cli
push
sbb
addr16
jp
shl
sarl
stos
stos
fimull
mov
mov
push
cmp
imul
mov
fs
push
out
aas
cli
mov
ret
jne
or
inc
xor
ss
test
sti
and
insb
popl
es
outsl
fisubrs
add
lock
sub
nop
out
fisttps
lahf
lret
dec
add
test
sub
stc
stos
mov
idivb
bnd
pop
mov
push
add
pop
shl
fst
inc
mov
adc
loop
sub
sub
aas
dec
cmc
cmc
pop
adc
pop
pop
es
aaa
psrlw
add
inc
jb
jg
mov
push
mov
xlat
pop
xor
mov
iret
in
andb
pop
sbb
stc
fmuls
dec
cmp
cli
cmpsl
cmp
call
cmc
pop
jnp
mov
mov
xchg
mov
ljmp
pop
test
fucom
in
leave
or
sbb
or
in
xchg
mov
leave
stos
rorb
imul
mov
push
lods
pop
call
cmp
inc
lahf
lcall
fldt
shll
pushf
gs
aas
mov
jns
dec
xchg
sub
and
sbb
enter
xchg
pop
fwait
imul
mov
lret
lock
pop
insb
cmp
xchg
add
pop
in
lret
std
inc
hlt
fnsave
cld
mov
xor
mov
cltd
inc
cmpsb
ljmp
lock
inc
andl
clc
sub
js
lahf
push
roll
mov
xor
addb
push
psrlw
mov
addr16
adc
stos
mov
into
push
hlt
sbb
dec
popa
fsubr
imul
loope
jbe
mov
or
push
jo
fiadds
xor
cmc
lret
das
in
insb
adc
negb
pop
sub
mov
repnz
add
jg
mov
and
cmpsb
loopne
cwtl
and
aam
in
push
mov
dec
outsb
mov
add
adc
andb
addr16
in
out
cmp
dec
ja
movsb
jnp
out
je
add
mov
and
jnp
and
dec
push
out
test
out
les
ret
dec
mov
push
imul
fsubrp
mov
mov
cld
iret
jno
scas
out
dec
push
add
mov
sti
push
mov
data16
imul
xor
add
xchg
pop
sub
mov
cmova
shll
jecxz
push
mov
sbb
sub
popf
pop
sbb
and
jnp
out
in
pusha
movsb
sbb
imul
cli
push
ja
and
xchg
movsb
mov
add
sbb
mov
xlat
jne
int
call
adc
test
mov
mov
push
mov
xor
pop
shrl
xor
fildl
or
sub
pushf
push
dec
push
or
std
icebp
dec
xor
cltd
int
pop
nop
shlb
pushf
xchg
ss
lods
push
testb
or
xorl
loope
or
mov
imul
lret
jl
pop
mov
lods
inc
outsl
fbstp
push
fdivr
ljmp
lods
or
out
fidivrs
push
inc
std
and
repnz
mov
adc
mov
lds
jge
sar
scas
mov
adc
stos
inc
jns
popa
mov
push
push
mov
add
add
add
jmp
jl
scas
movsl
aam
dec
cmp
cmc
mov
cltd
xchg
xchg
ds
fists
adc
call
shll
icebp
inc
sbb
into
popf
loope
sti
push
loope
pop
aaa
sbb
inc
adc
aam
mov
jge
scas
shrl
mov
shrb
mov
xorb
andl
push
xor
add
push
loope
and
into
stos
push
cmp
cltd
dec
imul
test
pushf
jne
aam
sbb
nop
jge
ja
daa
enter
push
incl
aaa
mov
loopne
shlb
jl
xchg
xchg
imul
pop
lea
inc
pop
rcr
in
ucomiss
jbe
iret
jbe
cli
addr16
stc
mov
jecxz
scas
ret
mov
fs
ja
bound
pop
in
sbb
fwait
je
sti
push
xorl
xchg
imul
add
or
in
scas
cmp
or
subb
and
jg
insl
mov
dec
adc
add
int
mov
mov
ss
xor
sub
cmpsb
mov
int3
int3
pop
lods
sti
jb
mov
xchg
lods
fwait
mov
mov
sbb
jne
das
inc
mov
movsb
add
jge
mov
push
imul
mov
pop
inc
push
dec
outsl
inc
nop
xor
xchg
push
insl
adcb
mov
arpl
popf
xchg
dec
pop
movsb
push
lea
aas
sub
xor
or
lods
outsb
sub
aad
outsb
mov
dec
or
stos
aaa
cmc
mov
xor
lods
adc
mov
cmp
mov
jmp
les
leave
sub
nop
cmp
cld
pushl
dec
scas
push
cltd
add
imul
frstor
and
pushl
and
addr16
mov
push
mov
pop
test
cmp
jae
fcoms
jmp
xlat
dec
xchg
leave
sbb
fs
arpl
push
lods
xchg
xor
dec
sub
inc
push
dec
add
ljmp
aam
test
jae
pusha
pop
adc
pop
int
mov
or
sub
arpl
ret
pop
cmc
aad
and
enter
test
insl
out
sub
sub
repz
int3
or
fmull
jg
mov
inc
rcl
lret
and
les
push
mulb
mov
cmpsl
push
jp
iret
xchg
dec
out
fildl
jbe
cmp
roll
sub
mov
int
adcl
jb
mov
push
xchg
test
inc
mov
push
push
mov
fsub
sub
in
push
mov
aad
push
cmp
stos
jmp
add
lock
ljmp
jecxz
je
test
sarl
dec
sbb
lock
mov
jle
aaa
dec
inc
int
cmc
dec
mov
test
xchg
fwait
push
dec
pop
lahf
js
lock
out
into
xor
pop
push
mov
sub
xchg
push
cs
and
push
loop
lods
icebp
iret
adc
push
out
pop
jmp
push
fs
sub
xor
xor
aam
mov
inc
testl
fs
inc
sbb
mov
popf
fidivl
fwait
inc
ret
ret
aaa
iret
gs
adc
into
rolb
daa
push
xchg
mov
and
mov
ret
mov
test
adc
mov
dec
out
jne
insb
dec
push
addr16
mov
je
data16
lahf
insl
sbb
xchg
adc
adc
movsl
scas
xchg
sbb
ficomps
pop
test
cmp
pop
and
add
and
fadd
jecxz
adc
mov
lds
xchg
pop
roll
negl
sahf
ret
sub
imul
fucomip
xor
mov
dec
fwait
and
jae
pop
jbe
mov
aad
push
or
dec
add
add
and
push
xor
jae
insb
out
sub
outsl
mov
pop
ret
jne
or
pusha
loop,pn
xchg
outsb
or
cmp
pop
dec
loopne
insb
aad
hlt
pusha
mov
cmp
sub
insl
push
arpl
jmp
push
adc
mov
push
add
pushf
adcb
loopne
dec
inc
decl
mov
into
cmp
aas
aaa
loop
or
add
adc
mov
sahf
shll
icebp
pop
or
sbb
sub
xchg
out
adc
mov
mov
pop
pop
xchg
dec
data16
pop
pop
inc
or
movsl
and
mov
fnstsw
dec
in
push
leave
push
xor
and
push
test
pmulhw
in
out
in
jl
jl
or
jae
lock
xchg
cmp
das
es
test
addr16
psadbw
lea
cmp
mov
and
fcmovnbe
push
mov
push
nop
dec
mov
push
cmc
xchg
jae
leave
mov
popw
jne
jb
and
dec
inc
adc
inc
loop
aaa
icebp
or
mov
cmpsb
mov
inc
mov
or
xchg
ficoml
jbe
lods
fsubrs
and
sti
dec
mov
je
xchg
adc
xchg
push
repnz
clc
cld
int3
rcll
popa
adc
pop
push
mov
mov
out
aad
mov
repnz
lret
mov
add
pop
idivb
or
mov
lcall
mov
or
adc
enter
rorl
mull
xchg
jp
pop
xchg
and
push
cli
pushf
stc
add
clc
ret
fwait
xor
aam
mov
mov
or
divb
ja
sbbl
lods
jge,pn
push
push
je
lea
sub
mov
pop
shl
jne
fsubrl
pushf
mov
je
and
and
js
xchg
cmp
out
js
adc
ret
mov
jmp
jmp
std
stos
bnd
pop
divb
adcl
inc
adc
stc
pop
sti
hlt
xchg
popa
aam
jbe
jmp
xchg
mov
aaa
dec
and
jmp
adc
cld
outsb
jns
in
scas
mov
xchg
dec
mov
shrl
or
or
cmp
push
outsl
sbb
or
xor
call
lods
sbb
xor
decb
sub
cmpsl
adc
inc
test
shlb
push
leave
ret
or
incl
xchg
jge
lods
sbb
add
push
mov
xor
dec
jbe
xor
lods
jo
ds
inc
rorl
jecxz
mov
jnp
and
lods
cmp
sbb
push
popf
dec
call
or
js
jl
xlat
int3
sub
pusha
sbb
imul
mov
xchg
loope
dec
sbb
movsl
and
cmp
bound
shlb
xchg
dec
mov
cmp
cltd
aas
shrb
rcr
cwtl
js
adc
fisubs
rep
xor
add
leave
das
push
test
stos
add
out
jo
shlb
mov
inc
shll
pop
inc
divb
aad
popa
pop
mov
hlt
jecxz,pt
mov
inc
sub
cmp
push
inc
mov
movsb
pop
or
and
test
mov
stos
inc
jg
clc
std
inc
sbb
jge
mov
jl
clc
pushf
aaa
js
add
int
pop
sbb
aas
fwait
push
push
add
cltd
mov
outsl
fists
push
insl
sub
sub
push
testl
cmpsb
xchg
ret
cwtl
cltd
pop
jo
push
mov
stos
push
imulb
out
inc
fmuls
cmp
mov
je
cmpsb
fcoms
xchg
lret
push
xor
pushf
rcl
lock
icebp
out
or
dec
and
mov
adc
shr
inc
mov
mov
scas
repnz
dec
ja
stos
pop
push
test
cvtps2pi
mov
jecxz
ret
jbe
sbb
loopne
push
push
ds
out
imul
fcmovnb
jmp
push
in
ljmp
xchg
mov
pop
mov
cwtl
mov
rolb
xor
xchg
pop
pop
in
adc
dec
mov
fcmove
cmp
push
dec
add
xlat
xchg
mov
pusha
js
or
adc
xchg
mov
js
cmp
dec
gs
xchg
adcl
cmp
popf
cmp
adc
mov
inc
mov
inc
mov
mov
pop
mov
ret
mov
lock
pop
jo,pt
xchg
pop
sub
clc
insb
lcall
rorb
xor
inc
arpl
ret
xchg
inc
cltd
cmc
repnz
pop
or
mov
repnz
movsl
or
stos
mov
jle
dec
ja
push
enter
jp
fisttps
punpckhdq
mov
loope
test
sbb
xchg
sti
cli
cs
icebp
andl
les
jle
push
cwtl
inc
dec
sub
inc
mov
lcall
int3
scas
pop
imulb
cmp
push
push
icebp
pop
and
mov
jle
outsb
ror
cmp
out
jbe
mov
ffree
js
mov
rorb
aad
xchg
push
lcall
cltd
push
dec
xchg
popa
outsl
add
fadds
outsl
cmp
xor
pusha
repz
and
or
xor
lahf
pop
fdivrl
je
cmp
mov
cmp
dec
outsb
fldenv
dec
in
in
jb
mov
stc
je
or
int
jl
out
mov
and
sub
xor
shll
fs
pushf
clc
pop
push
cmpsb
jb
xchg
dec
jo
lcall
xchg
jmp
sub
in
sti
xchg
sbb
xchg
xchg
fcoml
aad
mov
dec
cmp
jb
movsb
push
cmp
jmp
or
in
push
pop
ljmp
in
inc
xchg
repnz
movsl
xor
mov
sbb
aad
stos
mov
add
cmp
add
sub
sbbl
push
insb
jb
mov
sub
jb
xchg
test
aad
adc
pop
mov
xchg
sub
sarb
in
fcomi
inc
incb
push
ror
cmp
xor
adc
mov
mov
nop
xchg
rcll
xchg
outsb
cmp
xchg
out
xlat
xabort
pop
cmp
int3
test
ror
icebp
jge
cmc
mov
push
sbb
ljmp
js
add
stos
repz
idivl
js
push
inc
jno
imulb
mov
inc
sbbb
push
sub
pop
and
mov
and
fidivrs
adc
cs
or
cltd
stc
cmp
or
je
sbb
xchg
mov
add
mov
int
and
xchg
xchg
sbb
daa
add
dec
inc
or
mov
fcoml
les
insl
push
xor
jl
call
iret
and
xchg
inc
cld
mov
adc
imul
jl
inc
das
loopne
mov
jae
push
inc
mov
push
and
int
xchg
ret
push
negl
scas
fmull
inc
mov
fldl
int
mov
mov
inc
fists
sub
mov
add
shll
sbbl
sahf
xchg
mov
pop
xor
mov
addr16
shll
lret
inc
loop
xchg
lods
stos
jle
fsts
inc
mov
cli
dec
adc
and
pop
adc
or
jle
pop
adc
push
or
adc
imul
add
aad
js
daa
inc
adc
xchg
cmpsl
pop
es
rcll
jmp
in
mov
rorl
jbe
dec
lret
and
add
jmp
or
mov
cmpsl
jecxz
je
pop
mov
test
cmc
popf
fisttpll
aas
mov
cmp
or
std
loope
ss
inc
incl
xchg
mov
or
mov
out
stos
fisubrl
pop
cmpsb
xor
cld
stos
mov
push
sahf
adc
cmc
push
and
mov
aad
lods
fwait
mov
dec
iret
jge
test
dec
mov
jae
mov
in
mov
xlat
mov
rorb
push
and
inc
fisttps
xor
enter
rcl
mov
cltd
dec
pop
dec
pop
xchg
ds
pop
cmp
addl
out
lret
nop
sbb
rcl
mov
sub
mov
or
cmp
mov
adc
push
cmp
mov
sub
mov
fsubp
xor
sbb
jbe
in
lahf
es
dec
das
jle
cmp
andl
inc
xchg
cld
dec
jp
inc
jbe
dec
lods
popf
rcrl
mov
and
into
adc
insl
ret
adc
les
fidivrl
scas
nop
fnstsw
push
fldl
mov
push
xor
add
push
pop
jl
call
mov
cmpsl
rorb
push
lea
inc
sbb
lods
xchg
xor
lods
mov
inc
loop
stc
add
nop
iret
std
and
in
les
sub
popf
cmp
dec
mov
std
adc
sub
push
pop
push
xchg
or
xchg
dec
loopne
or
xchg
push
dec
cli
jg
hlt
xlat
je
rorb
jge
mov
hlt
push
xchg
es
adc
push
scas
mov
mov
mov
sbb
daa
fimull
adc
pop
jl
stc
adcb
xorb
jne
jmp
sbb
test
xchg
jnp
adc
pushf
aaa
movsl
int
pop
lds
add
gs
into
inc
cmp
sbb
pop
stc
cmpsb
or
xchg
loopne
es
shll
aas
inc
out
jp
fwait
cmpsb
dec
mov
incl
fisubrl
xor
loopne
aam
jl
lret
clc
add
xor
nop
mov
and
cld
incl
insb
gs
xor
inc
lret
mov
out
sbb
leave
or
mov
cmp
mov
sti
inc
jge
push
pusha
xchg
fstpt
nop
movsbl
add
roll
jl
mov
dec
jo
xchg
push
mov
mov
lds
jbe
sub
mov
inc
jnp
int3
add
setbe
enter
pushf
dec
and
push
adc
mov
cmp
push
cmpsl
ss
add
incb
and
stos
xor
in
lods
or
cltd
insb
and
mov
jne
mov
cmp
dec
cmpl
add
add
scas
inc
push
sbb
inc
punpckhdq
and
sbb
push
pusha
add
addr16
enter
ror
fwait
repz
imul
xchg
lahf
cwtl
mov
ss
pop
and
and
bound
mov
xor
stos
mov
xor
je
sub
aam
adc
lods
sti
jno
push
int3
pop
sub
xchg
mov
negl
and
nop
fbld
push
rcr
and
mov
pop
or
or
mov
sub
orb
dec
inc
pushf
sbb
fldl
jecxz
or
jg
mov
fadd
hlt
dec
pop
cmp
jmp
cld
jo
fists
mov
mov
je
mov
rcll
jg
fcomp
cld
pop
lcall
adc
stc
out
imul
pop
jmp
jo
sbb
mov
scas
cmp
and
xchg
dec
mov
and
jae
push
dec
mov
mov
adc
cmp
clc
dec
inc
push
pop
add
jne
inc
xor
pop
mov
sbb
or
imul
xor
mov
sbb
mov
pushf
scas
xor
dec
into
mov
iret
fcomps
mov
arpl
inc
push
and
push
fbstp
sub
jae
xchg
adc
in
xchg
and
lea
fldl
xchg
insl
jecxz
clc
jge
push
dec
pop
call
xchg
cltd
or
mov
lods
repnz
xchg
jg
cmp
aam
sti
pop
test
cli
inc
iret
pusha
stos
gs
movsb
push
rolb
idivl
jne
mov
sti
fwait
and
iret
daa
mov
or
ror
insb
inc
shlb
je
inc
mov
loop
mov
insl
mov
mov
daa
add
sbb
arpl
test
pop
pop
mov
jl
pop
adc
jnp
pop
add
cs
ja
pop
add
jge
lret
xor
test
out
and
cmp
pop
push
es
imul
mov
dec
xchg
out
jge
pop
pop
mov
jne
cwtl
ret
popf
cmp
sbbb
mov
imul
cmpsl
lock
test
xchg
sub
mov
test
popf
xchg
nop
dec
sbb
pop
push
lock
sub
mov
xchg
inc
lcall
fadd
dec
std
xor
out
dec
movsl
popa
mov
gs
or
repz
mov
out
jl
clc
jb
imul
leave
repz
jle
shrl
adc
out
sahf
int3
data16
popa
call
imull
and
mov
pop
loopne
push
icebp
jg
movsb
outsl
lahf
insb
mov
xchg
sub
xor
and
xchg
in
sbb
sahf
dec
or
adc
inc
fstpt
add
push
cmp
inc
or
mov
xor
adc
data16
movsl
aad
push
fisubrs
push
or
hlt
adc
sti
stc
xchg
add
pop
mov
inc
hlt
inc
cmpsb
sub
mov
push
repnz
mov
ret
xchg
dec
add
dec
test
cmp
push
jmp
cmp
loopne
cld
dec
test
stos
xor
mov
mov
adc
sub
pop
adc
mov
les
jne
shl
jg
adc
arpl
call
sti
aas
sbb
push
mov
push
xor
imull
dec
fcoms
fcmovne
sahf
fisttps
dec
xchg
cmp
mov
mov
dec
jbe
leave
mov
inc
cli
popa
fcompl
adc
mov
cmp
lods
cmp
pop
sub
mov
xchg
pop
jge
call
or
pop
push
test
icebp
sarl
out
rcll
out
mov
jmp
addr16
loop
mov
xorb
test
outsb
fwait
dec
inc
dec
aaa
or
xchg
pop
mov
mov
mov
int3
sub
popa
mov
pushf
add
or
mov
jl
xchg
scas
ss
mov
mov
out
mov
sub
jecxz
add
push
pop
sahf
adc
in
mov
insb
roll
jbe
je
sti
data16
jecxz
out
ficompl
xor
data16
mov
lahf
out
dec
fwait
sahf
leave
out
push
mov
fistps
mov
addr16
in
push
lret
add
jp
ret
cmp
sub
ja
cwtl
fstpl
mov
pusha
adc
mov
lret
cmp
add
xor
mov
sti
sbb
cmpsb
jns
push
scas
and
push
jbe
ljmp
and
push
aam
scas
xor
jnp
push
test
pop
inc
jecxz
rorb
and
xchg
fisubrl
jmp
imul
ss
outsb
mov
mov
dec
sti
xor
fists
test
cmc
fstl
movsl
lock
adc
sub
add
jle
shll
adc
mov
ret
addr16
into
rclb
adc
sub
icebp
mov
inc
mov
jns
cmp
adc
cmp
pop
sub
and
dec
mov
pusha
loope
ljmp
sbb
out
sub
dec
imul
mov
ljmp
cmp
adc
xor
sbb
mov
mov
mov
ljmp
repz
jmp
repz
mov
das
dec
shrl
pusha
xor
mov
mov
and
jmp
dec
int
cld
push
popf
add
dec
push
mov
jmp
loope
pusha
dec
lods
jno
mov
test
call
push
pop
cmp
sahf
aaa
pop
fnsave
pop
jnp
cli
and
jae
popf
dec
cltd
and
inc
scas
outsl
push
cltd
shlb
cmpsl
pop
xlat
std
dec
cmc
pop
das
mov
movsb
mov
call
loop
jmp
mov
cli
mov
lea
mov
stos
adcl
andb
jae
and
jnp
pop
fistpll
fs
movsl
adc
test
mov
pop
jns
and
dec
enter
mov
inc
inc
dec
pop
sub
push
inc
dec
jecxz
sbb
add
in
and
popf
movsb
in
mov
mov
sbbb
daa
mov
jmp
push
fisttpl
mov
cmp
cmp
jns
loopne
inc
inc
jo
xor
xor
inc
jnp
sarl
loope
jo
mov
inc
lcall
push
in
xchg
ret
sti
xchg
push
mov
mov
sub
push
sbb
xor
jmp
xor
mov
push
std
pusha
ret
in
sub
or
scas
sub
or
mov
call
xchg
dec
movsb
push
clc
and
shll
xor
imul
mov
test
jg
cld
lcall
fisubrs
pop
movsl
push
cld
imul
mov
test
mov
mov
mov
and
push
cwtl
dec
pop
negb
dec
loope
dec
ljmp
sbb
movsl
movsb
out
pop
sarb
add
xor
stos
push
jb
xor
xchg
outsb
jle
sub
shl
push
xchg
inc
inc
adc
jnp
nop
cmp
pushf
lea
push
push
mov
sub
movsb
and
fnclex
jp
sbb
dec
push
or
push
loopne
jbe
in
mov
bound
adc
mov
jno
dec
ret
rolb
in
inc
cmpsl
scas
mov
push
cwtl
mov
sub
leave
rorb
testl
xor
dec
add
xor
leave
je
jl
inc
orl
mov
and
mov
jmp
lea
subl
jmp
push
jae
mov
andl
xchg
xor
out
dec
pop
mov
orl
jo
out
test
xor
jge
jmp
stos
add
lret
fildl
enter
leave
adc
inc
fiadds
int
loopne
js
cmp
mov
test
arpl
sbb
lcall
nop
outsb
push
jbe
call
cmc
fisubl
jl
pop
ljmp
jge
xor
pushf
sbb
mov
fs
pop
or
iret
stos
xchg
call
cltd
pop
pop
pop
fwait
stc
add
push
out
xchg
push
aaa
sbb
out
mov
les
jno
lahf
inc
lahf
mov
mov
xor
push
cmpb
xchg
cmp
fisubl
cmpsl
inc
inc
lock
cmpsl
arpl
and
inc
mov
pop
push
push
lds
push
pusha
cmpsl
sub
ret
mov
cmp
ljmp
je
xchg
sub
inc
imul
add
lock
leave
xchg
push
sti
cmp
jge
add
lcall
pop
hlt
inc
sbb
pop
ret
out
mov
dec
mov
cmc
mov
inc
mov
jp
pop
out
push
in
add
pusha
and
movsb
ret
or
sub
push
jb
xor
addr16
in
sbb
dec
scas
jmp
sbb
inc
mov
imul
xor
sbb
call
nop
fimuls
mov
movsb
lods
or
fidivs
mov
daa
add
sbb
in
popl
inc
das
cli
fisubrl
adc
mov
mov
xor
cmpsl
jbe
ret
sub
outsb
or
jge
xchg
popa
or
shl
enter
sub
mov
mov
pop
jmp
icebp
or
fadd
stos
inc
pop
out
xor
push
unpcklps
push
dec
jmp
data16
mov
inc
in
sbb
sub
inc
es
dec
push
call
mov
push
test
fmul
pop
add
and
sub
outsb
je
xchg
fimuls
push
hlt
jl
pop
cs
arpl
fimull
mov
inc
mov
cs
add
add
pop
push
ss
in
pushf
cmpsb
or
lret
in
xchg
in
ljmp
push
aam
dec
and
ljmp
popa
sbb
xor
loopne
jae
pop
pushf
mov
xchg
and
cli
push
jno
out
cmp
jmp
and
popa
mov
pop
pop
or
das
sbb
add
mov
pop
movsl
jp
repnz
mov
lds
mov
push
aam
pusha
loopne
repnz
adc
push
popl
loope
andl
pop
fisubl
inc
cmpsb
sbb
mov
test
lret
mov
sbb
fisubrl
jecxz
cmp
pop
xor
push
mov
out
andb
aaa
repz
in
mov
pop
movsl
push
cld
mov
loopne
stos
repnz
inc
jecxz
fistpl
repz
gs
cmp
scas
inc
incl
inc
stos
and
fistpl
jmp
andl
lods
push
mov
and
test
mov
daa
sub
cwtl
movsl
pop
and
inc
les
push
les
sbbl
pop
pop
inc
int3
dec
xchg
dec
or
movsl
jecxz
mov
movsb
pop
cmpsl
cmp
outsl
mov
sub
arpl
ds
insb
and
pop
aam
sbb
mov
nop
shll
jl
enter
xor
jmp
mov
fcomp
xchg
mov
std
idivl
rep
jae
mov
xor
arpl
movsb
mov
mov
fcmovnbe
sub
cmp
sbb
into
sub
iret
loopne
inc
or
pcmpgtd
inc
sbb
jnp
arpl
mov
jne
mov
pop
adc
sub
cs
adc
add
test
fidivrl
ja
mov
cmp
out
sbb
add
mov
jb
cmpsl
pop
jmp
sub
lcall
xlat
loop
enter
sub
add
clc
aad
divl
addl
or
inc
or
mov
xchg
test
int3
gs
jno
mov
sbb
fcmovnbe
cs
push
inc
hlt
gs
sub
mov
mov
xchg
pop
cmp
addb
push
xor
sbb
mov
ret
cmp
aam
mov
les
stc
addr16
imul
pop
idiv
lods
mov
xchg
cmp
and
aad
cmpsb
ja
add
aas
addr16
cmpsl
cmp
js
mov
pop
and
gs
and
or
push
sar
imul
fnstsw
outsl
xor
sbb
pop
out
xor
mov
pop
insb
mov
pushf
cmpsl
sub
mov
in
mov
cmp
push
ja
mov
movsb
iret
pop
popa
sub
scas
jne
mov
pushf
or
not
shll
inc
repz
popf
jg
push
mov
adc
cmp
daa
dec
imul
dec
mov
or
or
inc
repz
adc
not
and
jae
sbb
aaa
mov
fcomps
pop
jmp
pop
lds
xlat
popf
dec
jg
popl
les
cmp
or
flds
xor
pop
stos
into
icebp
repz
mov
dec
addr16
push
das
lds
push
in
adc
stc
lods
mov
xchg
aaa
int3
xchg
push
call
sti
cld
jg
mov
nop
jp
jae
jo
clc
lods
inc
inc
xorb
lret
push
xchg
outsl
outsb
cltd
push
das
mov
ss
mov
and
pusha
insl
je
ficoms
out
xchg
jnp
sbb
and
arpl
mov
mov
fdiv
fwait
repnz
pop
fnstenv
xor
jnp
xor
sti
lods
mov
imul
iret
ret
imul
dec
lcall
outsb
loopne
inc
or
into
dec
xor
and
pop
jo
push
inc
lods
and
cs
and
das
je
iret
sbb
jo
xor
mov
scas
xchg
xchg
cli
add
cli
adc
sub
jne
push
clc
xchg
lock
or
stos
pop
ret
cmp
dec
and
lcall
or
inc
xchg
arpl
or
dec
imul
sbb
dec
push
bswap
movsl
je
ret
test
mov
sub
push
ret
fistpll
loopw
addl
shll
dec
mov
sbb
and
or
cs
sub
jae
pop
mov
fmul
fcompl
jge
dec
in
das
sahf
xchg
xchg
jns
pop
aas
sub
xchg
mov
gs
inc
sub
mov
mov
outsb
xchg
push
jnp
imul
out
fcmovb
out
call
je
mov
xchg
adc
lahf
push
pop
mov
cwtl
or
outsb
jbe
pop
pop
push
pop
jmp
dec
mov
jmp
xor
in
fstpl
cs
push
cmp
pop
jl
mov
sub
inc
ja
sbb
lcall
in
stos
pop
icebp
jle
movsb
or
push
mov
mov
insl
das
je
xchg
adcl
push
cmpsl
insb
adc
jmp
inc
js
lock
cmp
sbb
jl
mov
shrb
pop
mov
jge
or
cs
test
cmp
das
roll
fidivl
and
mov
and
dec
jbe
cmp
stos
inc
pop
rcll
shrb
jmp
rolb
insl
pop
pop
and
inc
xchg
jns
iret
dec
xchg
mov
mov
sub
sub
jo
adc
je
mov
xchg
jge
mov
xchg
inc
pop
dec
jecxz
fstps
fadds
xlat
mov
sbb
jmp
aas
xchg
dec
mov
aad
push
jbe
jp
xor
push
add
cmp
lcall
scas
test
std
inc
cmp
jl
sarl
push
out
mov
cmp
add
jbe
insl
sbb
test
ficoms
and
call
xor
add
in
xchg
addr16
lcall
jge
pop
jmp
inc
mov
daa
faddl
out
movsl
sbb
inc
mov
jle
jecxz
in
ds
xchg
lods
imul
xchg
jmp
test
cwtl
lcall
sub
inc
sub
in
mov
imul
cmpl
mov
dec
imul
cmpb
rclb
adc
dec
lea
or
add
aad
or
or
movsl
and
out
dec
jmp
mov
shr
jns
xor
std
leave
xchg
xor
sub
rol
lds
dec
test
inc
mov
jecxz
aam
cmp
repnz
cld
lods
jp
int3
icebp
shll
sbb
pop
cmp
and
pushf
ja
mov
sub
ljmp
push
push
in
mov
xchg
inc
jne
imul
dec
add
sub
xchg
jl
jg
xchg
dec
cmpsb
out
or
mul
jl
mov
cmp
xlat
in
push
movb
fs
cltd
sbb
mov
xchg
mov
iret
and
cld
pop
mov
sbb
outsb
js
mov
lcall
les
call
mov
rorl
cmpl
and
lea
ss
ret
movsb
xlat
jns
lea
cmp
ret
test
push
xor
iret
sub
stos
mov
mov
cmp
or
jns
lahf
and
fwait
hlt
stc
repz
pop
and
ficomps
or
js
subb
add
xor
mov
dec
mov
mov
cmp
rclb
mov
xchg
out
sbbb
dec
xchg
arpl
add
fwait
and
xchg
lret
shl
mov
imul
pop
data16
sub
cmp
mov
mov
jp
out
mov
and
fildl
repnz
popw
dec
rcll
push
jmp
dec
outsl
popa
and
mov
pop
mov
mov
or
jmp
ss
mov
push
lcall
inc
push
rcr
ror
dec
sbb
mov
mov
daa
or
adc
jmp
stos
out
and
jle
sbb
cmp
or
mov
sahf
mov
loop
mov
sbb
pop
cmp
mov
cmp
and
cs
fs
sbb
jno
cld
inc
pusha
jns
adc
fsubrl
and
jg
cwtl
cmp
push
xor
fisubrs
lahf
cs
mov
ljmp
sti
int
inc
rorl
lret
dec
push
mov
inc
mov
pop
mov
jb
push
pop
fisttps
add
jae
loopne
hlt
jge
cld
movsb
insb
push
inc
push
test
or
sub
lret
push
mov
mov
sbb
out
addr16
mov
mov
repz
and
pop
xor
bound
push
enter
jmp
jae
pop
ret
ss
popa
imul
xchg
pusha
orb
push
cmp
adc
fistpl
jo
adc
mov
add
pop
mov
inc
sti
push
push
jle
push
add
das
push
test
lods
ljmp
inc
shrl
divb
xchg
movsl
jno
hlt
js
fcompl
xchg
fsub
addps
mov
pavgw
jno
out
mov
mov
insb
push
xchg
ds
out
int3
pop
push
add
fsubs
sub
rclb
sbb
jmp
jl
jb
jmp
dec
xor
mov
xor
out
mov
sub
cmp
insl
add
outsl
stc
cmc
cmp
mov
or
in
repnz
push
movsb
xchg
inc
sub
xchg
fwait
push
push
rcll
dec
lcall
leave
xorb
cld
lret
push
ss
inc
jne
or
sahf
cli
add
pop
and
pusha
test
ficomps
jbe
in
jns
rcrl
xchg
and
xchg
xor
dec
mov
and
add
scas
adc
shrb
repnz
mov
sub
dec
rorb
push
hlt
das
cmpb
jns
insb
add
push
not
imul
lods
xchg
lret
mov
shlb
xor
adc
or
sub
fwait
out
icebp
dec
cmpsb
pop
mov
daa
outsb
addr16
sbb
mov
jnp
xchg
lcall
outsb
push
cmp
loop
mov
out
push
ret
push
xchg
push
xor
ret
inc
in
pop
sbb
ja
aad
les
mov
pop
popa
fisttpl
inc
mov
rorb
aas
aad
push
xor
ds
nop
mov
adc
sbb
dec
cmp
dec
loope
and
mov
rcl
push
pop
mov
fimuls
dec
aas
mov
ss
repz
dec
inc
add
call
mov
rep
ror
sbb
popa
xor
insl
outsl
mov
mov
mov
mov
ficompl
xchg
pop
dec
ret
ret
or
icebp
xchg
jg
test
push
cs
ss
andb
fisubrl
sbb
mov
and
jno
pusha
pop
std
pop
gs
and
fsubr
mov
hlt
jl
in
pop
arpl
cwtl
pop
xchg
dec
nop
sub
pushf
xchg
add
or
adc
aad
xchg
jp
mull
clc
or
cmpsl
pushfw
decb
xor
cmp
adc
ljmp
es
int3
or
or
movl
add
lret
xchg
in
add
sub
cmp
cmpsb
sbb
sub
cs
test
lock
xchg
loope
or
pop
sub
jg
pop
pop
xchg
movb
xor
fstpt
insb
mov
lock
paddd
sbb
mov
fstl
sbbl
jp
and
mov
nop
and
inc
lds
aaa
push
cmp
out
xorb
push
cmp
xchg
jg
mov
push
mov
in
and
lret
jbe
repnz
stos
xor
xchg
and
jmp
push
clts
daa
adc
rcrl
mov
ror
cld
xor
mov
stos
xchg
adc
loopne
lods
pcmpgtb
jge
sbb
aaa
jmp
insl
mov
jl
xor
cmp
popf
xchg
neg
icebp
in
cwtl
jns
mov
xor
loope
jge
mov
and
cld
outsb
insb
in
fidivrs
leave
sub
cs
fidivrl
xchg
dec
test
cltd
dec
push
lods
divl
adc
movsl
enter
mov
and
xchg
xchg
dec
div
xor
popf
test
push
jl
stos
leave
in
mov
adc
lret
jge
clc
in
mov
lahf
dec
mov
popa
int3
mov
bound
jne
dec
mov
rcrl
push
xchg
push
xchg
loope
out
pop
or
and
mov
faddl
jle
test
outsb
icebp
popa
in
ss
pusha
mov
dec
adc
pop
or
enter
add
pop
push
xchg
fdiv
jnp
mov
lock
sbb
pop
loop
and
dec
ror
aam
push
pop
aad
mov
cltd
add
or
xor
cs
int
inc
or
int3
sbb
mov
sti
and
sub
or
and
add
or
pop
add
fwait
push
push
mov
or
andb
movhps
jmp
push
cmpsb
es
int3
xor
pop
cmpsb
push
jp
add
and
push
les
dec
pop
xlat
jb
mov
xor
xor
mov
test
sub
sbb
test
out
sbb
inc
test
cmpsl
hlt
imul
insb
in
dec
fstp
fcompl
call
push
jns
and
scas
int
sbb
add
pop
ljmp
stos
dec
and
stos
inc
fnsave
int
adc
ret
inc
sub
mov
in
xchg
pusha
mov
mov
outsl
scas
dec
xlat
sub
out
inc
sbb
icebp
out
enter
shll
outsb
jae
add
cwtl
mov
lock
hlt
lret
add
jle
jns
cmp
mov
cs
test
jp
xor
and
add
in
push
mov
das
xlat
adc
sbb
cwtl
mov
jno
jmp
dec
fwait
sub
mov
cwtl
repnz
push
or
stos
popa
dec
cwtl
rolb
stos
mov
leave
lcall
dec
jo
aaa
add
mov
cmp
sbb
cmpsb
push
movsb
addr16
test
cli
jnp
mov
popf
sub
mov
sub
or
dec
iret
jmp
and
sbb
rcl
aaa
dec
cli
jne
mov
push
notb
lret
jg
push
adc
push
xchg
sbb
cmp
scas
jae
call
mov
lret
leave
scas
out
ja
adc
ss
clc
imul
shlb
push
push
cli
ficoml
sub
out
icebp
rcll
xor
loope
xor
push
jb
xchg
rcll
push
sub
jl
outsb
cs
inc
jae
cld
inc
jle
xchg
mov
movsl
aaa
xchg
dec
push
shl
inc
xor
sbb
call
pusha
inc
rorl
andl
pop
mov
xchg
jbe
mov
mov
jae
adc
pop
jp
dec
adc
cmp
mov
cmp
push
xchg
inc
ljmp
mov
cmp
cmpsb
add
std
or
aad
add
mov
shlb
jbe
push
pop
jg
cmp
or
pop
xlat
mov
mov
arpl
js
sbb
rclb
xorl
ja
push
push
mov
jg
sbb
into
cmp
in
and
aaa
xor
mov
shlb
nop
jns
push
adc
xor
mov
in
push
xchg
sub
jmp
test
or
movsl
mov
rorl
xor
ficomps
ret
push
movsb
gs
movsl
cmpsl
test
pop
sahf
xor
movsb
jno
mov
dec
int
mov
inc
cmp
cmp
repz
add
lds
callw
and
pop
cltd
lret
ja
adc
cmc
pop
cmp
cmp
dec
mov
movsl
sbb
mov
out
mov
lret
testb
mov
or
or
jbe
or
or
mov
push
add
xchg
pop
fmull
aam
add
cmova
inc
test
jl
pop
mov
sub
icebp
addr16
xchg
push
jge
push
sti
icebp
pushf
jo
daa
sub
lea
adc
sbb
hlt
mov
shll
and
pop
mull
out
in
pop
jns
pop
sub
in
scas
aaa
sub
sub
mov
push
dec
int3
xchg
mov
les
cmp
add
or
int3
arpl
dec
cwtl
mov
andb
jno
push
cmp
push
mov
xor
ds
fadd
ss
rolb
xor
xor
bound
in
push
mov
pop
xchg
sub
xor
pop
xlat
mov
gs
mov
sub
cmp
orb
out
shlb
int3
pop
jno
cli
inc
and
dec
adc
insl
andl
or
pop
pusha
cmpsl
xchg
mov
cmpsl
lcall
movsl
mov
in
mov
mov
cmpsl
xorl
divl
lret
ret
jmp
adc
pop
stc
lret
rcrb
inc
xlat
add
sbb
sbb
fs
test
arpl
ja
pop
jb
cltd
movsb
xchg
xchg
mov
dec
es
out
and
jb
sbbb
cmp
cmp
inc
aaa
ja
mov
xor
sbb
push
stc
mov
jne
je
xchg
lret
xor
dec
xchg
or
mov
repz
mov
xor
or
lret
mov
adc
add
ret
sub
and
cs
mov
cmpsb
popa
ret
dec
lock
mov
icebp
and
stos
test
sahf
cmp
lahf
and
inc
adc
dec
sub
jo
xchg
sti
leave
cmpsb
cmp
mov
jb
fisubl
iret
push
add
cwtl
inc
orl
dec
imul
lret
cld
jnp
sbb
cmp
movsl
popa
xchg
xchg
jbe
out
mov
sarb
movsl
or
test
sbb
xor
fisubrl
gs
mov
pop
jmp
mov
add
push
loope
ja
mov
and
dec
lea
leave
int
or
test
test
cwtl
in
cmp
data16
push
dec
sub
push
fsubrs
xor
mov
cmpsl
dec
lds
ja
bnd
add
scas
rdmsr
loop
jl
push
pop
sbb
out
in
pusha
repnz
pop
sub
lds
cltd
pop
flds
and
push
xchg
arpl
mov
xchg
daa
lods
outsl
fnsave
clc
cmpsl
xchg
cmp
test
ljmp
push
fwait
jle
cs
adc
jo
jbe
jne
cmpb
outsl
cmp
mov
mov
es
xchg
mov
sbb
enter
jo
das
xor
ret
mov
lods
push
loop
sub
sti
fidivrs
mov
xchg
cmp
cmp
add
es
and
add
insb
mov
call
cltd
fstl
or
pop
dec
fsubl
shlb
outsb
lret
cli
lods
idivl
in
rcrl
leave
xor
add
jno
push
pop
lret
xchg
lock
loope
xchg
or
movsl
sarb
outsl
imul
mov
movsl
int3
bound
or
addl
mov
xchg
and
add
cmp
arpl
xor
xor
imul
nop
jo
or
sub
fs
jg
lahf
inc
push
pop
jns
fcmovnb
mov
mov
dec
mov
cmc
lret
bound
jle
loope
sub
inc
idiv
xchg
iret
inc
test
neg
idivb
pop
mov
adc
and
and
jae
imull
push
daa
mov
ja
movb
xor
or
xor
enter
enter
popa
sbbb
and
call
lret
jnp
push
jmp
cmp
or
adc
pushf
jge
dec
insl
and
or
out
push
add
fidivl
mov
rolb
cmp
loop
in
mov
lods
in
push
jns
mov
lret
pmaxub
push
cmc
movsl
jne
les
or
push
or
add
daa
ret
sub
lods
jge
ja
mov
lret
stc
inc
repnz
outsl
inc
mov
pop
push
stos
adc
pop
push
call
ja
inc
in
leave
fstpt
push
dec
in
dec
pop
push
les
fsub
ficoml
js
sub
ss
ret
rcrl
out
loop
lock
andl
mov
pop
movsb
ficomps
repnz
jno
cmp
out
shrl
sub
lds
je
push
adc
test
jno
test
push
int3
push
lock
mov
and
dec
cltd
add
mov
andb
popf
addr16
cmp
stos
stc
lea
frstor
xor
movsl
lret
mov
std
sbb
ljmp
xchg
dec
fsubl
adc
loop
sub
mov
ret
xchg
dec
nop
cmp
adc
out
add
dec
dec
adc
xchg
loop
test
mov
push
fs
in
cmp
jb
cltd
lods
jbe
mov
xlat
js
jecxz
mov
jmp
fistl
mov
xor
push
imul
adc
leave
and
cs
and
les
or
sti
push
lods
dec
sub
adc
pop
pop
ljmp
mov
addl
or
shr
inc
add
mov
ja
fsts
pushf
outsb
mov
push
fmull
dec
lcall
xor
ror
rolb
mov
or
push
popa
dec
mov
loop
call
inc
sub
xlat
push
mov
adc
mov
es
outsb
lcall
lods
repz
outsb
and
mov
adcb
jl
ljmp
lea
jle
cmp
mov
jo
inc
in
and
mov
mov
stos
or
xor
es
fsubrs
dec
push
cld
cli
cmpsb
sbb
pop
loop
inc
cmc
scas
dec
fnstenv
cmpsb
out
fs
pop
test
popf
popf
cmp
jmp
xor
jo
lods
cmpsb
dec
ret
fldenv
mov
and
inc
test
cmpl
cwtl
cld
aad
movsb
sub
lcall
xchg
xor
jge
idivb
sbb
push
xor
mov
cmpsb
xchg
push
mov
xchg
leave
mov
loop
out
mov
adc
and
sbb
dec
add
lcall
cmp
or
cmp
sub
out
das
and
jno
add
cmp
inc
insl
in
aaa
ds
sub
sysret
or
cmp
in
dec
je
dec
pop
sti
int3
insl
mov
mov
lods
rclb
aad
dec
loop
ds
dec
roll
mov
xor
and
and
cmpb
decb
mov
xchg
rcrb
cmp
sbbl
cmp
bound
xchg
pop
cmp
jge
scas
aad
test
stc
ud1
and
rorl
sub
iret
loop
and
out
adc
mov
push
iret
sar
and
mov
lds
fdivl
movsb
xchg
and
inc
js
shlb
ljmp
jbe
adc
hlt
sub
mov
addr16
outsb
lock
fisttpl
push
sbb
push
lcall
sub
inc
jmp
sub
and
fwait
pop
mov
mov
ja
pop
loopne
lods
xchg
mov
xchg
aaa
rolb
jl
cld
sub
fwait
jle
push
js
push
cmp
xchg
cmp
fwait
int3
sub
pop
hlt
mov
les
add
clc
cmp
mov
cmp
movsb
sti
into
push
fs
stc
push
jmp
movsl
out
or
mov
ja
pop
adc
scas
xchg
ret
xor
mov
xchg
fidivs
adcl
mov
xor
pop
lods
test
aas
aas
ss
int
cld
or
add
inc
cld
push
and
xor
pop
js
jae
ret
cmp
and
mov
js
and
xor
cmp
fnsave
mov
jge
pop
loop
loopne
adc
jmp
inc
dec
xor
and
and
lods
mov
xor
pop
and
mov
dec
mov
inc
push
mov
add
sub
mov
ret
push
rorl
stc
mov
sbb
movsb
cmpsb
mov
dec
andl
xlat
outsb
insl
mov
inc
mov
cmp
sbb
or
jbe
ds
mov
hlt
inc
popf
and
adcb
push
sbb
or
das
jmp
arpl
adc
pop
popf
adc
stos
repz
divb
rcrl
loopne
lret
cmp
enter
mull
mov
sbb
inc
lods
fucomi
inc
sub
sbbl
lret
push
inc
lods
xor
push
imul
das
inc
xchg
pop
fsubrs
leave
lods
mov
ljmp
or
or
lods
pushf
stc
sub
test
jp
xchg
aas
ret
mov
push
sbb
sbb
arpl
out
sarb
test
sbb
stc
out
jg
mov
or
iret
test
arpl
jns
sahf
ret
cld
push
xor
sub
mov
push
fucomi
mov
jns
and
cmp
sbb
mov
push
jecxz
push
xor
mov
nop
shrl
jb
xor
daa
sub
mov
lock
pop
ficomps
into
int3
jg
arpl
sbb
xor
xor
adc
fcomps
in
jl
mov
sbb
aam
xchg
ja
or
add
mov
icebp
jne
outsl
daa
das
insl
cmp
mov
xchg
fidivs
ja
push
dec
cmc
into
inc
dec
outsb
dec
inc
dec
mov
sbb
ret
mov
push
imul
push
mov
int
fnstcw
sbb
rorb
xor
cwtl
stos
or
or
dec
pop
daa
imul
sub
call
mov
mov
mov
into
mov
cli
inc
jp
xor
jmp
rcr
loope
daa
stos
into
sub
test
mov
loop
or
ret
loopne
xor
clc
inc
icebp
andb
lret
into
add
aam
shl
cmp
fbstp
xchg
or
adc
and
mull
mov
imul
sub
mov
call
in
lret
mov
std
push
dec
dec
fsubrs
and
jae
or
dec
inc
pop
xor
aad
fnstenv
in
or
ja
test
test
int
push
push
andl
sub
add
in
mov
push
arpl
pop
lea
rclb
jae
mov
mov
fdivl
xchg
mov
push
test
xor
popf
cmp
out
push
jecxz
adc
movsl
in
pop
adc
xchg
push
sbb
adc
cmpsl
sub
daa
es
mov
js
mov
aas
pop
inc
and
sbb
cmp
bound
sbb
movsb
xor
mov
in
ficoms
jg
mov
test
int3
or
dec
in
mov
push
mov
inc
jl
fcmovnu
cmpsl
dec
decl
lock
in
mov
hlt
jne
aam
lret
ss
dec
mov
stc
roll
mov
push
add
inc
loop
mov
jge
push
rep
add
jo
cli
jbe
pop
lcall
push
add
dec
cld
testl
jno
packsswb
sbb
fisttpl
xor
dec
mov
decb
cltd
in
push
adc
add
mov
dec
popa
out
mov
sub
pop
fnstcw
and
xchg
cmpsl
and
cmp
out
lods
pop
data16
lret
addb
push
iret
arpl
pop
movsb
sub
push
jmp
in
push
sbb
mov
and
mov
std
fisubrs
or
and
add
scas
mov
xor
call
sbb
lcall
std
loop
pop
jl
inc
lret
xchg
gs
test
mov
jg
fistl
xor
aaa
repnz
jno
popa
pop
xchg
mov
jns
addl
sbb
adc
scas
loopne
add
pop
push
pusha
inc
pusha
scas
movsb
dec
push
add
addr16
xor
inc
test
inc
scas
lods
jg
test
dec
subb
gs
ljmp
cmp
pop
and
jg
mov
aad
dec
cmp
add
outsl
addr16
add
insl
je
mov
adc
jge
pop
dec
aas
cmp
data16
imul
mov
pop
cmp
scas
mov
sub
fstl
xchg
out
ret
inc
push
mov
jle
and
addl
shll
jae
and
adc
jecxz
rcr
mov
cmc
bound
adc
xor
pushf
cwtl
int
lock
movsl
pop
mov
mov
dec
xor
lret
aad
xchg
scas
and
mov
xchg
pop
mov
cwtl
cltd
enter
mov
lret
ss
lds
sub
sti
pop
jne
mov
sbbb
les
jp
cmpsl
pusha
addr16
repz
mov
stos
ss
rcr
mov
pop
fldt
add
into
cmp
mov
inc
out
sub
adc
cmp
add
xor
cmpsl
mov
and
fwait
insl
divb
dec
jmp
cli
sarb
push
pop
mov
scas
clc
jmp
mov
pop
adc
mov
pop
mov
sbbb
arpl
out
dec
sbb
jecxz
jl
sub
cmp
xchg
xor
fiadds
addb
mov
sbb
xor
ds
insl
test
iret
jae
fidivs
xchg
or
fnsave
adc
dec
cltd
nop
lahf
insl
shrb
je
out
dec
ds
push
movsb
pop
pop
arpl
imul
sbb
lahf
aam
outsl
sub
xchg
mov
dec
pop
pop
shlb
sbb
test
test
daa
push
inc
xor
aam
or
test
ljmp
movsl
pop
arpl
imul
inc
push
mov
or
je
add
pop
pop
push
loope
je
or
pop
xor
aaa
xchg
rorb
fs
nop
inc
pop
lret
cmpsb
nop
je
push
addr16
dec
enter
inc
lock
nop
lods
clc
test
in
cmc
jl
out
cld
arpl
je
inc
xchg
add
sub
imul
sti
aaa
push
scas
adc
cli
push
into
cmp
push
mov
mov
sub
jo
arpl
mov
popa
ss
sbb
js
ss
inc
test
pop
pop
jns
sbbl
sbbb
add
out
xor
rcrl
mov
jl
mov
push
mov
in
jp
mov
not
sbb
jmp
xor
xchg
pmaddwd
push
lcall
dec
lret
pop
sti
dec
lods
ja
jg
enter
lods
mov
push
inc
lea
das
inc
loop
mov
adc
and
loope
lcall
scas
cli
das
push
pop
pop
jecxz
popa
mov
and
and
jbe
insl
pop
pop
leave
inc
xchg
add
fs
sbb
lea
mov
sbb
in
mov
pop
inc
dec
dec
xchg
std
leave
daa
sbb
bound
fldt
xchg
dec
sub
sub
xchg
and
out
outsb
jle
sub
call
or
pop
mov
pop
dec
icebp
mov
and
push
sarb
jne
pop
sbb
shrl
inc
and
inc
mov
iret
stos
clc
mov
fnstenv
mov
stc
sbb
jle
ret
dec
loope
popf
jns
xchg
inc
dec
inc
in
sub
push
pop
inc
fmuls
push
or
xor
pop
pushl
dec
pop
or
mov
inc
fistps
sarl
aam
jae
mov
mov
ss
cmp
push
inc
mov
fadds
dec
cltd
inc
shll
jmp
jae
or
daa
or
sub
fsubrl
repnz
test
dec
adc
jae
je
add
ja
repnz
das
dec
out
cmp
out
jae
hlt
dec
mov
cmc
and
sbb
push
imul
xchg
imul
movsl
out
insb
lret
xchg
jae
push
in
xchg
sub
in
movsl
mov
push
xor
add
xchg
pop
loop
scas
test
pop
inc
bound
or
jmp
pop
fbld
pushf
mov
loopne
jb
mov
addr16
bound
sub
cmc
pop
mov
inc
cld
bound
adc
xor
mov
daa
dec
and
das
into
lods
inc
push
sbb
pop
dec
cmp
scas
icebp
mov
pop
inc
adc
das
fidivrl
mov
das
jae
push
mov
jg
xor
jecxz
or
adc
js
shll
cmp
add
int
mov
add
pop
xchg
inc
push
xchg
mov
lret
loopne
loop
bound
mov
xor
mov
call
daa
lods
sbb
inc
adc
std
push
ret
mul
bound
inc
xor
hlt
data16
rcll
push
fildl
repnz
lret
ficoms
or
imul
and
fadd
push
pop
fisttps
rorb
in
push
xchg
jns
dec
imul
dec
xchg
out
mov
add
xchg
cwtl
cmp
pop
push
out
cmpsl
cli
into
xor
add
pop
pop
mov
cli
mov
mov
testb
lret
daa
cmp
xchg
add
cs
push
mov
lea
sbb
test
jl
lds
fdivr
movsb
jmp
out
rcll
daa
sbb
mov
push
mov
clc
mov
xchg
fisttps
and
cltd
pop
jno
jp
jnp
bound
incl
push
xchg
push
in
pop
jbe
xor
or
fnsave
cwtl
xchg
ret
roll
clc
aas
cli
mov
pop
mov
inc
push
aas
insb
sahf
bnd
pop
rcrb
xlat
or
add
push
xchg
lret
mov
push
pusha
mov
pop
out
sub
repz
inc
out
or
sub
push
mov
dec
mov
cmp
mov
stos
mov
lds
push
fsubrs
mov
pop
dec
lea
push
loope
mov
push
icebp
mov
cmp
mov
sub
jbe
ds
shll
int
xor
xchg
into
rorb
out
jmp
pop
enter
pop
or
xchg
loope
shll
arpl
movsb
cmp
add
pop
jecxz
outsb
loop
mov
pop
pop
push
into
testl
inc
movsl
mov
ja
outsl
and
icebp
add
out
inc
andl
int
ljmp
mov
mov
xchg
pop
inc
dec
lret
adc
and
mov
jo
push
mov
xchg
inc
cltd
add
push
clc
addr16
stc
and
mov
xchg
add
lahf
leave
les
in
arpl
push
mov
jns
xchg
stc
inc
mov
push
dec
je
js
push
out
mov
cmp
das
insb
mov
stc
mov
mov
inc
jb
fidivs
mov
aad
inc
ret
fldcw
jmp
xchg
ret
notb
imul
lcall
arpl
mov
dec
xchg
jecxz
mov
xchg
sbb
xchg
sub
test
js
hlt
int3
xchg
out
or
cmp
lret
in
or
dec
popa
mov
inc
dec
sub
sub
stos
jae
jle
mov
mov
lret
add
popa
sbb
cli
mov
subb
pop
and
push
ss
in
mov
inc
fistl
test
shll
shll
push
mov
ja
inc
out
mov
call
fwait
cmp
push
enter
clc
add
mov
sub
hlt
cltd
fcomip
popf
into
mov
aaa
imul
sahf
dec
add
inc
out
aaa
and
xchg
jecxz
fstps
pop
lret
sbb
fldcw
dec
fdivs
pop
xchg
push
xor
mov
xchg
jno
movsb
mov
dec
stos
mov
orl
insb
je
or
adc
pop
movsl
xor
or
or
test
andl
outsl
mov
jecxz
adc
cmp
out
iret
or
dec
and
adc
fs
nop
loop
sahf
lret
add
ror
push
mov
imul
inc
mov
mov
in
aas
js
xchg
iret
pop
mov
int3
and
imul
or
out
dec
or
cmp
adc
or
movsl
rorl
adc
jge
add
adc
mov
add
movsb
push
icebp
inc
andl
into
test
int3
or
popf
loope
xchg
cli
mov
pop
lods
or
push
mov
je
or
dec
xchg
dec
add
sti
fcom
cmp
out
js
outsb
in
int
dec
sbb
mov
cwtl
jbe
push
mov
insl
aaa
add
push
mov
jne
adc
nop
jge
pop
ds
mov
in
mov
push
mov
gs
push
mov
int3
adc
mov
addr16
ds
std
or
loope
push
pop
fsub
and
fdiv
cmp
push
lcall
pop
mov
mov
jl
sub
enter
and
repnz
lahf
add
imul
jle
dec
pop
test
mov
sbb
cltd
mov
pop
push
dec
inc
xor
test
mov
shll
addr16
mov
mov
mov
mov
icebp
outsl
imull
in
fsincos
xchg
in
mov
jle
jg
loopne
repnz
dec
shrl
xchg
pop
test
adc
add
pop
cltd
rcrl
js
xor
jbe
ret
add
mov
mov
sub
cli
ret
pop
mov
mov
andb
dec
shrl
add
xor
cmp
mov
pop
jecxz
addr16
pop
jg
aas
imul
stos
and
jp
insb
dec
lahf
test
xchg
sbb
pop
push
fildll
and
pop
sti
adc
mov
shlb
test
fadds
sub
pop
cmpsl
cld
aad
imul
mov
jmp
pop
cltd
cs
in
adc
mov
mov
out
dec
mov
sbb
ret
jecxz
adc
fwait
aad
push
jb
adcb
in
test
xchg
mov
cmpsl
fwait
mov
subb
ret
mov
call
xchg
add
sub
xchg
and
adc
or
icebp
movsb
stos
xchg
sub
cli
movsl
pop
shl
and
cltd
int
mov
and
cmp
adc
and
push
mov
stc
pop
ljmp
ja
and
mov
loope
jnp
lret
sahf
jle
inc
call
inc
dec
test
gs
inc
jg
in
testb
jbe
fs
aad
dec
movsl
mov
in
pushf
sbb
sbb
add
mov
out
lahf
inc
jl
inc
fstpl
jno
mov
mov
lods
inc
mov
add
dec
xchg
xor
push
pop
loop
inc
jle
adc
fnsave
cwtl
and
test
imul
or
stos
cmp
cwtl
lcall
xchg
mov
fwait
in
jae,pn
mov
es
fiadds
sbb
cmp
mov
sahf
fisttps
dec
movsb
int3
or
sarl
rcpps
sbb
adc
push
jl
cli
ret
dec
dec
frstor
sbb
mov
add
sbb
lret
sbb
and
push
lret
idivb
cmc
ds
mov
cld
psubb
push
mov
jns
push
dec
adcb
cmp
cltd
mov
push
xor
jno
lods
repz
pop
xchg
cmpsl
clc
cld
and
pop
lahf
pushf
fldt
in
insl
stos
mov
add
or
cld
out
push
int3
loope
dec
or
rclb
and
leave
daa
cmpsb
dec
mov
xor
mov
pusha
out
lret
loopne
lea
xor
jmp
add
ja
pop
sub
jmp
add
cmp
push
sbb
inc
hlt
dec
adc
cld
push
into
imull
out
mov
adc
cltd
xchg
xchg
cmp
push
dec
jle
xor
lahf
stos
mov
cmp
ret
mov
mov
cvtps2pd
mov
pushf
js
push
jle
lret
add
out
pushf
sahf
divl
fmul
push
jns
jne
adcl
mov
ljmp
add
or
sbb
iret
popa
rcll
cmp
clc
add
jle
lock
movsl
ljmp
cs
fadd
cmp
sbb
cli
clc
adc
shrb
inc
add
aad
mov
loopne
shlb
xchg
mov
aam
pop
xor
mov
test
jmp
push
and
inc
mov
dec
add
mov
testl
adc
jge
dec
inc
mov
out
cli
and
shlb
aam
pushf
mov
jl
mov
push
jne
push
test
out
fst
ss
fwait
sub
jmp
pop
push
inc
pop
std
sbb
xchg
inc
jg
sub
cmp
push
add
dec
xchg
ficoms
outsl
movb
faddp
xor
addr16
mov
ss
aas
or
push
pop
sub
sbb
mov
xlat
shl
addr16
inc
shrb
xor
and
les
jmp
int3
ret
add
sahf
add
in
sbb
sub
ret
mov
pop
push
add
movsl
aaa
and
and
sub
lcall
stos
sub
out
iret
lds
add
xchg
jmp
inc
rcrl
inc
cmp
popa
pop
mov
or
mov
les
jb
push
xchg
scas
repnz
xlat
dec
add
cs
aad
inc
jns
xor
pop
fwait
and
mov
sub
inc
into
push
ret
push
pop
cmp
push
mov
iret
add
push
add
cs
adc
iret
dec
mov
out
repnz
jnp
outsb
xor
or
loope
cmpsl
ljmp
imul
jmp
and
mov
inc
jp
movsl
subl
xor
jg
int
cmp
movsl
stos
jmp
aad
mov
sbb
js
inc
mov
out
arpl
gs
fstl
clc
pop
cmp
and
xchg
xor
pop
cld
adc
jecxz
jne
sub
je
andb
pop
sbb
push
je
push
push
fwait
push
xor
or
sbb
mov
lcall
and
push
adc
daa
push
inc
and
xor
ror
pop
jmp
xlat
push
insl
mov
add
pop
aaa
lds
xchg
movsb
pop
fwait
aad
es
sub
test
lahf
mov
pusha
cmp
shll
les
sub
dec
adc
dec
mov
leave
and
pop
push
cs
add
out
pop
add
xchg
sbb
and
loop
sti
add
push
pop
lret
stos
rorl
sbb
push
add
test
pop
test
sbb
xor
rol
xor
fcomi
adc
das
xchg
fistl
repz
fwait
push
inc
sbb
xchg
pop
lret
lahf
push
in
cmp
fidivrs
stc
cmp
scas
std
xor
adc
out
out
flds
inc
push
mov
mov
test
mov
loop
sbb
dec
mov
popf
pushf
std
fcom
mov
fwait
adc
stos
scas
ljmp
inc
pop
in
or
in
xchg
jns
dec
xchg
in
repnz
rcl
jge
inc
cltd
pop
faddl
and
dec
dec
lahf
mov
pop
ret
jmp
mov
sub
scas
mov
rcl
adc
or
mov
jo
lret
mov
lods
xor
add
repz
movsb
movsb
addr16
fcomip
aam
ds
push
fadds
insl
mov
sub
mov
mov
in
fidivl
pop
mov
mov
and
sbb
inc
int
in
sarb
jb
or
push
ret
cmp
mov
arpl
xchg
mov
mov
mov
arpl
in
inc
call
or
imul
ret
jns
and
bound
lcall
imul
mov
cld
lods
and
out
mov
cmpsl
mov
jae
test
pop
mov
push
push
add
lret
xlat
adc
lds
ret
or
fisubl
out
in
fs
mov
int3
or
mov
mov
mov
ljmp
xchg
mov
adc
pushl
out
mov
pusha
aam
iret
sbbl
xchg
pop
mov
in
dec
shrb
mov
inc
sbb
les
pop
clc
or
xor
pop
cs
cmc
push
pop
stos
lcall
push
cli
pop
sub
cli
push
dec
mov
ljmp
jb
or
clc
push
lahf
imul
std
mov
mov
mov
mov
mov
imul
sub
aam
dec
gs
cmp
add
rcl
scas
add
push
hlt
inc
mov
lret
cmc
xor
aam
jp
addr16
repz
shl
gs
mov
cmp
ds
stos
imul
shr
gs
andl
jl
xchg
xchg
je
xchg
jle
sub
ret
orb
push
fisubrs
rcll
dec
mov
sbb
jge
lcall
lea
iret
popa
sbb
inc
cmc
dec
push
mov
pop
mov
jae
lcall
aas
mov
ljmp
repnz
xor
loop
add
dec
adc
add
xchg
daa
inc
sbb
loope
pop
popa
pusha
cli
mov
stos
bound
pusha
pushf
stc
ljmp
jecxz
les
mov
pop
or
pop
and
loop
pop
pop
adc
imul
adc
cmc
int3
push
mov
and
shl
lods
repz
iret
push
leave
lret
rolb
mov
fbld
imul
pop
cmp
fldpi
push
mov
popf
xsha1
cmpsb
or
imul
jbe
fcoml
xchg
add
stos
pop
xor
cmp
sbb
push
lcall
sbbl
add
xchg
repz
pop
pop
mov
fcomps
int3
imul
lcallw
mov
addr16
push
popa
loop
dec
cs
inc
sarl
push
shlb
pop
imul
xchg
test
cmpxchg
scas
scas
faddl
fisttpl
mov
bound
lahf
push
stos
loop
inc
mov
dec
xor
shll
mov
ja
jbe
and
cmp
les
cmp
mov
mov
stc
fbstp
sub
sub
testb
xorl
cmp
push
lea
pop
add
inc
fimuls
mov
xor
push
xchg
xor
sarl
and
add
pop
imul
pop
lret
pop
sbb
out
clc
inc
inc
and
mov
pop
sbbl
dec
outsb
inc
je
pop
dec
push
adc
jae
lcall
pop
pop
jmp
cmp
popf
aaa
adc
ds
aas
mov
xchg
popa
aad
outsb
stos
test
fsubl
mov
mov
push
mov
inc
fwait
or
mov
sbb
add
push
sbb
fdivs
mov
jns
stc
pop
out
xchg
and
push
mov
ret
fwait
and
ret
inc
nop
lds
pop
lret
mov
scas
or
xlat
fisttps
jnp
xchg
mov
cmp
xor
cld
or
or
enter
fadds
adc
cli
test
adc
rcll
loope
mov
xor
loopne
jmp
mov
xchg
shl
dec
sbb
stos
cmp
mov
sbb
sbbb
adc
lods
adc
movsl
xchg
fs
pop
mov
xor
dec
adc
mov
gs
pop
andb
pop
xorl
mov
lds
mov
stc
test
nop
in
pop
sbb
jecxz
lret
adc
test
mov
js
sahf
out
inc
testb
sbb
jge,pn
outsl
imul
movl
or
pop
mov
xor
sbb
out
jno
push
add
lahf
dec
jp
orl
mov
add
add
fucomip
fisubl
es
and
push
xchg
push
imul
pushf
loopne
xor
call
mov
and
imul
std
cs
stos
sbb
pop
add
sub
mov
enter
pop
ss
lods
scas
daa
xor
lahf
cmp
or
test
push
and
mov
fildl
xchg
incb
pop
nop
jge
xchg
data16
push
repz
xchg
cmp
jnp
out
hlt
xchg
ja
out
mov
ret
sbbb
mov
xchg
in
les
mov
fwait
int3
mov
das
dec
xchg
mov
jg
sbb
ljmp
aad
testl
stc
adc
push
pop
ret
scas
jno,pt
or
shl
push
pop
push
adc
popf
lods
push
test
xchg
scas
test
pop
pop
popa
add
xchg
pop
adc
out
bound
cmpsl
insb
sbb
pop
sahf
out
in
imul
cs
clc
mov
cmp
adc
into
test
cmp
cmp
mov
push
xchg
sbb
cmp
or
inc
ret
and
mov
fldcw
stos
cmpsb
adc
in
mov
testb
mov
andb
cmc
lods
mov
insl
mov
dec
aam
cs
scas
dec
int
lods
add
jo
mov
xchg
mov
in
stc
add
cmp
push
daa
and
test
testb
inc
loop
mov
into
mov
stos
jle
cmp
mov
adc
rdpmc
fs
mov
inc
mov
addb
pop
xor
movsl
mov
lcall
push
data16
pop
push
fs
out
je
and
out
pusha
adc
dec
dec
pop
stos
add
stc
addr16
mov
in
mov
cli
cmpsl
dec
push
insb
fnop
adc
push
outsb
and
and
insb
sbb
mov
in
pop
adc
pop
cmp
lcall
mov
cmp
pushf
nop
popf
sub
cmp
popf
mov
imull
mov
ret
or
gs
jle
in
out
cmp
lods
or
sti
jae
mov
xchg
out
cltd
repnz
lods
test
testl
insl
sahf
push
stos
pop
xchg
in
xor
mov
scas
inc
outsb
cmpsl
inc
rcr
movsl
inc
in
loope
mov
push
sbb
les
sbb
adc
push
loop
push
xor
lret
nop
or
iret
adc
or
insb
mov
pop
scas
inc
mov
dec
rcl
xchg
xchg
xor
jp
loopne
lret
test
and
pop
pmulhw
mov
dec
xor
mov
outsl
pop
cwtl
out
jbe
orb
and
pop
or
pop
mov
sbb
in
ljmp
or
cmpl
pop
lret
mov
mov
and
jo
scas
add
in
add
sbb
negb
ja
pop
ss
sti
jge
and
test
mov
mov
push
mov
and
scas
mov
sbb
xor
lods
jle
adcb
pop
stos
jle
add
in
mov
inc
mov
or
adc
inc
fisubl
add
push
je
ja
cmpsl
or
xor
lahf
jp
jle
push
xorb
sti
aam
inc
pop
and
ja
sbb
adc
sbb
js
mov
mov
ror
into
imul
mov
mov
cs
mov
add
mov
and
cmp
adc
mov
add
adc
sbb
jmp
mov
stos
popf
shll
lock
neg
push
cltd
lcall
jle
jge
leave
js
movsb
pop
xor
mov
sbb
pushf
jp
ss
sbb
ds
int
dec
fists
dec
pop
jecxz
inc
sub
aad
dec
xlat
hlt
outsb
push
push
push
pop
and
dec
stos
jge
jns
mov
js
jae
shrb
xor
roll
xchg
lods
aas
data16
cwtl
cs
bnd
mov
inc
pop
inc
repnz
mov
xor
bswap
push
call
cmp
pop
lret
pop
lods
dec
dec
fidivl
inc
fisubl
imul
fxtract
mov
adc
mov
dec
into
xor
repz
sbb
loopne
sub
out
filds
lods
and
fdecstp
sti
add
push
sub
fstpl
lret
sbbb
jo
int
push
push
mov
mov
and
aas
sarb
sbb
push
jg
roll
pop
fimull
mov
sbb
dec
cmp
hlt
dec
add
addps
popa
xor
and
dec
ret
aad
jp
push
hlt
and
push
jne
dec
pusha
sbb
push
mov
test
mov
faddp
jns
jg
sbb
jbe
mov
call
dec
sbb
sti
fildl
shrb
xchg
lock
idivb
mov
pop
xor
sub
or
mov
jne
pop
pop
ret
mov
sbb
sub
dec
dec
int
jl
and
in
inc
jns
aad
jno
in
movsl
mov
push
adc
addl
out
add
fdivrp
cmp
mov
sbb
dec
adc
je
ljmp
icebp
fwait
es
xor
push
sbb
xor
or
pop
and
push
or
xor
jae
mov
mov
cwtl
jg
repnz
xchg
aam
arpl
sub
fildll
push
pop
enter
xor
cmpsb
aam
xchg
xor
xchg
js
ds
addb
testb
cmc
in
pusha
dec
sub
ret
scas
push
loope
sahf
xchg
clc
test
imul
xchg
int
adc
or
fadd
lea
dec
pop
pushf
jle
test
mov
and
add
ja
lods
lahf
xchg
popf
fiaddl
push
aas
mov
or
out
loop
repnz
jecxz
dec
std
pop
out
jge
push
adc
push
cmp
sub
fdivrs
cmpb
aam
cmp
push
lock
adc
gs
xor
shrb
lret
push
jle
mov
das
in
cmpsb
stc
push
sbb
aas
jl
adc
pop
lahf
jo
jg
or
sbb
fldt
dec
ret
sbb
pusha
test
out
dec
fidivrl
mov
mov
or
lds
jmp
in
mov
or
fidivrl
pop
movsb
into
sbb
pop
mov
push
stc
dec
sbb
push
push
cmp
dec
test
sarb
adc
mov
nop
mov
ret
jo
nop
or
dec
mov
mov
cmpsb
push
cs
pop
or
xor
pop
push
add
push
jmp
mov
push
push
adc
movsl
add
fucom
xor
and
sub
xor
fstp
or
int
js
rcrl
fmull
xchg
popa
call
adc
mov
testl
mov
xchg
xor
adc
inc
scas
test
xchg
push
aam
cld
clc
dec
sbb
mov
mov
jl
cld
dec
and
cmp
lret
cld
push
lock
ss
mov
jp
mov
ds
gs
movl
inc
loopne
lds
js
aaa
inc
and
adcl
lods
adc
mov
test
sti
cli
aam
add
mov
push
cli
sbb
icebp
push
or
outsb
mov
mov
pop
test
mov
dec
jmp
mov
je
dec
adc
arpl
or
bound
les
std
jno
je
push
cmp
fdiv
loop
dec
xchg
dec
mov
int3
popf
insl
sbb
fsubs
cwtl
inc
sub
fsts
xchg
jp,pt
scas
out
sbb
pop
aad
and
fcomps
inc
fisttps
push
or
inc
mov
aam
daa
pop
insb
and
call
in
out
jns
xor
adc
sti
and
lock
ficoml
cli
sbb
aam
mov
sbb
shrl
xchg
out
mov
dec
add
jne
cmp
imul
xor
jecxz
push
dec
sbb
mov
and
mov
sub
xchg
inc
repnz
mov
mov
or
rcll
ss
cmp
data16
jmp
aad
cli
push
fs
test
mov
xchg
jge
dec
add
lret
lods
or
mov
call
ss
or
or
push
dec
sbb
ss
mov
fcoms
jo
push
mov
out
in
ja
aas
cmp
mov
fwait
dec
xchg
fisttpll
inc
mov
sbb
stos
add
popa
cmp
bound
jae
pop
mov
lods
and
sub
je
jne
in
les
mov
or
lret
mov
mov
inc
out
scas
aas
pop
or
mov
mov
dec
xchg
fnstcw
notb
dec
sbb
xor
fs
mov
pop
rcrl
test
rcll
loope
jnp
sbb
cltd
psrlw
mov
jge
fs
scas
and
dec
xor
push
daa
mov
sbbb
push
or
in
xchg
fimull
add
arpl
in
pop
ljmp
sbb
sbb
push
adc
jle
sbb
push
icebp
xchg
push
mov
out
sbb
fwait
mov
test
or
sub
clc
xchg
pushf
out
xor
je
fisubl
inc
xor
xor
test
sarl
mov
les
into
sbb
aam
popl
nop
jmp
nop
adc
imulb
xchg
push
ja
loope
in
fidivl
je
fisttps
add
pusha
ljmp
cltd
bound
xor
rcrl
popf
ret
push
sbb
into
xor
and
push
jo
mov
sbb
cwtd
inc
jp
popa
ds
dec
xchg
push
int
call
movsl
adc
sub
arpl
incb
adc
jmp
imul
inc
jo
popf
push
fwait
sbb
pusha
arpl
xor
in
in
xlat
dec
insl
inc
adc
mov
stos
aaa
ds
out
jge
pop
mov
mov
fs
shlb
gs
xor
das
orb
mov
pushf
out
sub
pushf
cmp
pop
mov
mov
xchg
bound
test
jmp
nop
sub
aad
xor
mov
add
cmp
fwait
xchg
fwait
xchg
jnp
jnp
ja
pop
mov
leave
xor
std
cmp
es
xchg
or
mov
lock
jle
xchg
out
or
mov
je
jcxz
rol
jecxz
xchg
test
imul
loope
pop
lea
lahf
imul
ss
test
jbe
sbb
pop
add
jnp
rep
mov
cmp
pop
pop
sbb
cs
jecxz
clc
xchg
jge
mov
leave
fisttpl
test
in
jb
lods
inc
xchg
fstpl
xorb
jmp
das
movsl
pusha
sub
inc
clc
and
inc
mov
lock
sti
push
jns
nop
jo
inc
mov
mov
push
xchg
inc
ds
xchg
adc
pop
and
cli
fnstsw
nop
push
into
in
cs
data16
xlat
imul
out
jns
arpl
imul
andl
push
xor
popa
std
je
iret
js
inc
lods
sub
add
sub
orb
out
fwait
sbb
sahf
add
in
xor
mov
mov
mov
jnp
dec
insl
mov
mov
outsb
xchg
mov
addr16
cmp
std
ret
adc
cwtl
lcall
mov
ret
fisubl
dec
push
test
cmc
loope
xchg
sbb
out
mov
sbb
in
js
ja
ds
leave
jne
popa
aad
std
dec
cmc
sbb
or
sub
push
add
fsubrl
out
int3
or
mov
sbb
mov
fcmove
jnp
lahf
dec
cmp
push
mov
push
sbb
ret
lret
movsl
mov
or
jo
in
xchg
mov
aaa
int
mov
and
sub
mov
out
fstpt
inc
add
xchg
cmpsl
enter
fbld
adc
out
cmp
dec
inc
mov
ret
enter
mov
lods
bound
and
mov
fisubs
add
sbb
and
push
fistl
popf
add
add
push
gs
hlt
mov
or
xor
lds
int
jge
xchg
and
das
sub
int3
int3
int
jne
inc
aad
outsb
inc
test
aam
push
dec
in
or
or
out
mov
int
sbb
movsb
xchg
push
pop
test
xor
pop
dec
fsts
repz
jge
pop
mov
lea
ja
leave
cmpsl
lret
dec
jb
mov
aas
lock
lea
aad
cwtl
clc
xchg
lret
push
in
aas
pop
jbe
jg
mov
dec
clc
call
xchg
stos
sub
scas
add
xchg
xor
scas
jg
jle
adc
and
adc
xor
and
mov
gs
or
lea
push
push
testb
and
push
mov
adc
mov
subb
adc
pop
mov
pop
aad
lret
sub
outsb
iret
pop
cmp
dec
push
mov
pcmpgtb
stc
shll
pop
or
mov
punpcklwd
jne
jle
sbb
repz
xor
int
mov
pop
fs
fs
xchg
mov
xor
sbb
inc
push
or
dec
xor
xchg
repnz
jge
mov
icebp
jns
enter
scas
dec
fistl
clc
cmpsb
xlat
add
cmp
add
xlat
lds
imul
xor
js
add
push
xchg
fldl
sbbb
xchg
ret
or
das
es
movsb
sbb
or
xor
fstpt
notl
arpl
lds
pop
cmpsl
sub
xor
sbb
es
or
cmp
adc
mov
arpl
xor
mov
das
dec
xchg
inc
dec
jge
jle
in
inc
adc
mov
dec
sbb
inc
ss
stc
adc
inc
adc
addr16
sub
shlb
xchg
sub
and
mov
cltd
jnp
clc
repnz
dec
adc
fiaddl
rolb
push
or
test
xlat
std
je
jae
das
js
loopne
repz
fldenv
in
pop
fiaddl
sbb
push
loop
mov
insb
xchg
outsl
mov
aam
push
hlt
pop
hlt
jmp
scas
jge
std
mov
push
add
iret
mov
out
inc
lock
mov
sahf
jmp
mov
fidivrs
mov
mov
outsl
mov
adc
mov
iret
out
in
outsl
movsb
dec
mov
mov
or
mov
in
movsb
jbe
and
mov
jl
in
fidivs
cmpsb
xlat
int
pop
inc
mov
sub
mov
insb
ds
fcompl
dec
into
fistps
mov
add
jae
mov
outsb
add
fimull
pop
out
and
insl
mov
mov
pop
xchg
fcmovne
sbb
loope
sbb
flds
mov
mov
out
shll
xchg
jmp
hlt
xchg
test
out
insb
xor
andb
pop
nop
mov
pop
sahf
sub
jg
or
jmp
mov
pop
mov
push
xchg
in
test
stc
fwait
int3
int3
pop
test
lock
movsb
imul
scas
pop
sti
jo
jbe
loope
xchg
pop
sbb
and
sub
push
sti
shlb
lahf
mov
push
or
cwtl
and
lea
cmc
cs
or
inc
inc
movsb
lret
outsl
and
loop
and
fcoms
cmp
inc
dec
xor
jg
call
les
adc
ret
sub
push
pop
daa
ja
cmp
sbb
or
fsubl
sub
js
mov
mov
outsb
inc
xchg
rclb
cmpsb
dec
jge
aaa
popf
push
xchg
cltd
jb
scas
dec
inc
gs
sbb
das
jmp
xchg
inc
mov
leave
insl
pop
xor
out
decl
std
jo
stc
pop
xor
loope
out
jl
xchg
das
out
icebp
and
adc
adc
mov
enter
fisttpll
mov
and
mov
ljmp
cmovle
jbe
scas
mov
pop
add
daa
js
pop
cmp
rorb
mov
push
and
and
mov
ret
inc
movsb
clc
js
je
lods
xor
cs
sbb
lock
push
cmc
sbb
fnsave
addr16
pop
xchg
mov
fadds
fistl
ret
stos
shrl
mov
clc
jle
mov
adc
sub
daa
inc
jne
dec
shrb
test
scas
and
daa
jbe
adc
int3
inc
hlt
fsubs
test
xchg
daa
out
sbb
mov
rcrb
xchg
xchg
push
into
movsl
xchg
addr16
repz
daa
inc
push
or
mov
pop
and
cmp
adc
lods
xbegin
fmulp
and
push
cmp
adc
push
sbb
rol
outsl
fs
or
andl
mov
pop
mov
push
arpl
jl
pop
jmp
addr16
inc
pop
mov
adc
dec
xor
pop
lahf
stos
cmp
pop
fcoms
pusha
pop
mov
cmp
js
jb
mov
aaa
push
inc
test
shll
call
cmp
movsl
clc
or
mov
cmp
sarl
jge
push
hlt
push
lds
inc
scas
out
ret
mov
push
jb
imul
mov
jp
xchg
inc
mov
int3
xor
xchg
inc
push
lea
mov
mov
push
jns
cs
fisttpl
add
xorl
sub
loop
adc
jmp
push
ffreep
jno
in
daa
mov
mov
xor
loop
scas
and
sbb
js
sub
aad
mov
pop
addb
fmuls
inc
cmpsl
and
sub
adc
push
in
roll
pop
jge
xlat
jg
sbb
pop
std
outsl
pop
icebp
scas
enter
and
cmp
jne
fwait
or
push
mov
enter
and
int
mov
adc
and
mov
out
pop
shl
cltd
push
xchg
add
cmpsb
cmp
movsl
pop
inc
jg
mov
out
jnp
sahf
aad
out
mov
cmp
movsl
not
in
sbb
dec
ja
push
fstpl
mov
movsl
push
sets
sub
and
fcom
orb
jg
loopne
mov
fildll
xchg
xchg
cmp
bound
pop
push
inc
push
mov
std
pop
pusha
mov
loopne
sbb
gs
addr16
fld
jo
arpl
test
fucomip
insl
jmp
inc
es
into
dec
cmc
push
cli
iret
es
jle
and
push
inc
push
xor
pop
inc
divl
jo
js
mov
adcb
sub
aad
notb
cmp
push
pop
jge
inc
jle
test
mov
adc
xchg
loope
ja
hlt
mov
outsb
pop
repnz
sbb
pop
pop
jge
pop
pop
and
xchg
xchg
rcr
test
fstps
push
mov
xchg
insb
ljmp
mov
inc
pop
cvtps2pi
push
and
insl
ds
cmp
gs
push
clc
negl
sbb
in
xchg
ja
ljmp
orl
sbbl
stc
ss
cmc
push
mov
sub
bound
jnp
test
hlt
pop
fwait
aaa
push
repz
adc
call
xchg
ffree
xchg
es
dec
std
mov
pop
add
lods
inc
pop
shlb
adc
bound
pop
mov
lahf
jmp
out
or
dec
gs
cmp
aam
push
jp
scas
xchg
les
daa
fmul
andb
lock
loopne
xor
inc
sahf
in
xor
xchg
enter
addb
ds
mov
jle
push
dec
je
ficomps
in
mov
nop
sahf
arpl
dec
xor
inc
lcall
pop
repz
pop
add
clc
mov
pop
or
ror
stc
push
xchg
out
or
ds
cmp
rorb
lods
pop
adc
pushf
and
repnz
cmpsb
mov
addb
cltd
pusha
stc
loopne
push
xor
jae
and
sub
push
dec
gs
mov
aaa
ds
cmpsb
xchg
lock
lods
push
movb
sbb
cmp
enter
sbb
add
das
pop
cmp
dec
mov
adc
ljmp
mov
sbb
dec
jmp
mov
add
fwait
jg
sub
ljmp
sbb
mov
adc
testl
dec
cli
and
mull
repnz
and
cmpl
arpl
or
mov
ffreep
test
decb
jg
inc
out
xor
test
mov
mov
rcr
jle
fidivs
mov
scas
int3
movsb
jecxz
inc
or
cmp
stc
mov
mov
fs
in
mov
cwtl
inc
jg
mov
mov
jb,pt
push
test
je
cmp
in
inc
movsl
loopne
enter
scas
je
cmp
pushl
ja
mov
dec
push
add
stc
lods
incb
repnz
sbb
cmp
pop
cli
xchg
fwait
jbe
jp
sub
push
mov
inc
lret
dec
lods
pop
call
push
test
mov
es
pop
mov
std
mov
push
shrb
push
fistps
push
adc
adc
push
push
adc
xor
ret
jns
mov
hlt
xor
dec
pop
add
mov
pop
loope
or
out
adc
jo
ret
pushf
fbstp
xchg
insl
stos
cmp
sti
jmp
les
insl
inc
pop
dec
imul
int
mov
nop
daa
xor
jno
lock
popf
ficoml
insb
movsl
nop
sbbb
pushf
xchg
es
into
stos
je
xor
add
sbb
dec
or
sbb
pop
cwtl
mov
daa
sbb
es
dec
aaa
lahf
dec
dec
mov
and
xlat
pop
push
rcrb
decl
and
daa
cltd
cmp
sahf
xchg
or
imul
jo
stc
jmp
jp
cmp
lock
cltd
mov
mov
gs
inc
addr16
xchg
pop
loope
movsb
mov
repnz
dec
outsb
and
push
cmp
and
addl
jb
xchg
daa
xchg
lods
push
je
sbb
add
fsubrp
xor
adc
loopne
sbbl
lahf
mov
xchg
adc
jle
cmp
or
push
cli
push
or
cmp
inc
dec
fdivp
push
outsl
ds
xchg
lods
je
arpl
push
mov
push
nop
fsts
mov
mov
cmp
pushf
loope
fildll
xlat
in
fsubr
and
adc
in
nop
xlat
jno
andl
rcrl
scas
in
xorb
push
pop
cmp
cwtl
dec
stc
sbb
jg
jmp
sbb
lahf
int
dec
and
xchg
inc
addr16
inc
pop
std
pop
pop
and
ret
pusha
add
into
xor
xlat
xor
std
or
lcall
sbb
fwait
cmp
repz
cmp
ficompl
inc
xor
pop
jae
add
es
mov
js
sub
dec
mov
daa
jns
or
mov
pushaw
sbb
pusha
xchg
flds
iret
sub
in
aad
test
mov
dec
out
testb
popa
push
adc
sub
push
xor
scas
fistpl
mov
decl
xchg
lods
inc
movsb
rcrl
fildll
movsb
fcompl
jmp
mov
sub
cmp
sub
shll
fidivrl
mov
and
add
loop
lahf
lods
movsb
xor
add
sbb
jae
xchg
inc
mov
insb
cmpsl
push
mov
mov
pop
andl
cmp
adc
sahf
dec
jno
testb
and
insl
aam
rolb
sub
jmp
bswap
mull
pop
mov
sub
sub
mov
mov
cmpsb
pop
push
orl
cmp
fdivl
mov
mov
subl
jmp
rorl
rorl
jae
or
mov
and
xchg
hlt
pop
pop
push
xor
jl
push
inc
scas
test
int3
lods
add
pause
pop
or
or
jge
das
cmp
pop
iret
inc
popf
push
push
or
nop
out
adc
fmul
popf
jg
mull
push
stc
push
daa
sbb
mov
jne
xchg
out
and
stos
cmp
stc
adc
or
jecxz
cmpsl
nop
mov
test
test
ficoms
jnp
jp
cwtl
adc
xor
push
int3
fldenv
scas
shl
idivl
stos
dec
fsubrs
mov
cld
inc
inc
addr16
sbb
shl
dec
sbb
imulb
stos
idivl
div
je
xchg
xchg
test
fistpl
imulb
lahf
out
dec
and
call
jns
hlt
inc
add
xchg
add
shrl
ret
bswap
shld
xchg
pop
xor
pop
xchg
pushf
sub
addb
cmp
mov
js
stos
jae
dec
cmp
int3
int
cmpsl
insb
mov
cs
rcl
in
ret
pop
ja
xchg
lcall
std
add
add
pop
stos
jns
jecxz
insl
xchg
int3
jle
dec
or
xor
inc
test
xchg
movsb
dec
stos
sti
lock
out
mov
mov
daa
cltd
add
inc
inc
stc
add
xor
in
leave
or
stos
jp
xchg
jecxz
push
lahf
jle
pusha
daa
sbb
adc
mov
sti
mov
add
sub
adcb
xchg
std
xor
pop
cli
sbb
call
call
dec
jmp
call
movsl
arpl
jmp
mov
test
mov
add
arpl
addr16
adc
daa
fsubrs
and
aam
jp
pushf
mov
sub
shlb
imul
aas
loope
pop
je
push
lock
sub
mov
mov
clc
cmp
loope
test
dec
repz
sarl
adc
pop
sub
aas
push
dec
mov
jecxz
cwtl
je
or
inc
orl
leave
or
push
adc
mov
sti
in
int
pop
out
in
mov
popa
sti
bound
jle
cmc
mov
shl
push
adc
test
enter
addr16
or
jb
fst
dec
out
dec
jmp
or
add
or
mov
mull
mov
jae
cmp
shrl
imul
pop
movsl
jae
ljmp
std
xor
adc
aam
mov
inc
xor
cmpl
fiaddl
xor
inc
push
dec
in
inc
xchg
pop
mov
and
sbb
addr16
pop
lea
pusha
jecxz
addl
jae
ja
mov
jg
cmpsb
cmpsl
jmp
in
inc
cmp
dec
dec
ret
mov
sbb
inc
loop
sbb
rcll
pop
push
lods
dec
or
fsincos
jmp
inc
movl
clc
mov
sbb
roll
lds
in
popf
andb
cmpsb
cmp
push
aam
out
fnsave
mov
sbb
popa
dec
mov
int3
add
testl
xor
add
push
nop
jmp
add
int
rcll
idivb
add
lret
cmp
mov
rcrb
mov
mov
push
aas
movsl
mov
jle
add
ds
addl
cwtl
in
je
sub
mov
mov
sti
and
inc
add
stos
push
cmpsb
push
mov
sbb
dec
fdivrs
adc
mov
or
popa
or
mov
sub
int3
adc
mov
mov
inc
adc
lock
cwtl
in
sbb
in
fldl
xchg
aad
sbb
out
mov
ja
mov
insb
dec
inc
cmp
hlt
rcrl
sub
cld
rcl
enter
je
test
or
out
push
xor
sub
and
das
jne
cmc
xchg
hlt
into
or
jae
outsl
jle
ficomps
mov
rcll
iret
push
jae
dec
dec
test
ja
outsl
pop
lods
lret
movsb
or
mov
stos
and
add
mov
add
jl
mov
mov
add
shll
mov
cmp
aad
jp
mov
push
xchg
xchg
call
dec
jp
mov
loopne
roll
add
xadd
ss
adc
cmc
aad
pop
and
inc
out
int
lahf
jne
in
push
jne
push
adc
jecxz
movsl
rorl
repnz
jecxz
pop
iret
mov
mov
ja
into
xchg
in
xchg
mov
mov
imull
inc
leave
mov
shll
mov
fcoms
sub
testb
out
inc
mov
dec
sbbb
mov
and
mov
push
mov
scas
int
call
sub
sub
repnz
ret
cmp
push
and
popf
aad
iret
fcomps
jae
pop
mov
pop
push
outsl
xchg
xor
rclb
add
adc
in
out
sub
xor
xchg
mov
push
sbb
sub
sub
inc
xchg
clc
xor
push
mov
sub
std
inc
mov
jle
and
xor
lds
or
subl
adc
jg
cmp
push
or
test
ret
pusha
les
test
and
cwtl
lods
nop
mov
sub
stos
sub
insl
mov
jl
out
or
scas
pop
mov
mov
adcb
mov
jmp
out
dec
in
adc
outsl
test
lea
sarb
pop
pusha
pop
ds
je
mov
outsl
cmpsb
movsb
inc
jno
xchg
orb
lret
add
dec
sbb
jnp
pop
xor
mov
sub
pop
int3
arpl
cwtl
sbb
mov
pushf
dec
push
xor
es
fisubrl
scas
cmp
data16
stos
ds
inc
and
jbe
xchg
ss
call
repnz
repz
mov
pop
sbb
add
adc
jo
sahf
mov
inc
sub
push
mov
xchg
inc
add
adc
add
out
enter
pop
xor
ret
addr16
mov
mov
les
lds
xchg
pop
dec
mov
testl
mov
imul
push
sub
dec
dec
sbb
push
mov
stc
loope
or
lds
mov
jl
fcmovbe
dec
push
pusha
popa
inc
lods
std
and
inc
fsubs
xchg
aaa
mov
cmpsb
jo
lret
mov
mov
jno
sti
xor
sahf
aas
clc
or
mov
lret
sbb
push
popf
rolb
int3
sub
out
sbb
sub
push
je
mov
stos
sbb
pop
in
adc
push
dec
insl
jo
imul
enter
mov
inc
and
ret
cwtl
psraw
dec
and
or
ret
cwtl
add
adc
mov
xchg
sub
xchg
fisubs
push
orl
sub
in
pop
jp
jne
dec
ljmp
in
mov
push
repz
mov
aam
xor
and
pop
jmp
das
mov
ffreep
std
mov
adcl
or
pop
sbb
int
test
je
cltd
push
mov
pop
push
outsb
mov
ds
xor
dec
out
xchg
dec
xchg
loopne
xchg
rcrb
and
xor
cld
and
mov
mov
outsb
sub
addr16
mov
insl
fcmovnu
test
add
test
outsb
outsb
push
cmc
std
mov
xor
test
fidivl
test
pushf
lret
int
jecxz
inc
pushf
cmc
out
add
js
into
xchg
mov
adc
push
push
add
mov
ret
sbb
idivb
sub
xor
ss
aam
cmp
push
mov
ss
fdivp
fisubrl
lock
add
xor
mov
or
icebp
or
popf
sti
fsubs
lods
pop
adc
in
ret
imull
imul
xor
cmp
scas
add
imul
call
dec
and
cmp
mov
or
push
sub
pop
jmp
dec
idivl
mov
mov
push
or
xchg
add
add
testl
call
enter
push
in
repnz
add
cmc
rcr
jne
bound
outsb
lock
xor
push
dec
jge
rol
mov
xlat
dec
pop
jle
fdivrl
mul
push
ficoms
shlb
cmp
inc
xchg
adc
xor
lcall
inc
and
cwtl
pop
adc
scas
pop
xchg
incl
adcl
sub
xchg
push
xchg
push
loope
ljmp
ja
mov
mov
sbbl
iret
clc
push
push
bound
mov
inc
sub
loop
jmp
adc
and
je
popf
rcr
fdivr
push
xchg
movsl
mov
xchg
scas
jb
mov
add
fldl
dec
jle
cmp
pop
adc
adc
sub
xlat
loop
mov
lcall
hlt
insb
push
js
imul
sbb
jge
jae
outsb
push
adc
mov
aad
idivb
mov
iret
in
lret
xlat
sub
nop
mov
rclb
sbb
std
ret
fsubl
push
add
jl
stos
or
ret
lcall
push
push
sahf
inc
pop
adc
addr16
sub
lods
fildl
mov
ret
loope
in
jmp
mov
jb
aam
cli
mov
add
fisttps
xchg
sbb
lock
mov
xorb
add
leave
lret
xor
lock
aam
fwait
nop
imull
js
pop
in
outsl
push
dec
push
dec
cmp
pop
or
pushf
fs
out
bound
cs
sub
clc
adc
pushf
mov
or
cmp
sbb
push
inc
in
adc
loop
out
pushf
cwtl
sbb
xchg
mov
inc
mov
int
adc
xchg
into
mov
cmp
mov
pushf
test
jae
pop
cli
movsb
arpl
sbb
dec
inc
sub
inc
xchg
loopne
jnp
je
xchg
mov
aaa
popa
mov
pop
mov
push
idiv
jmp
inc
inc
dec
add
repz
lret
sbb
orl
xor
xor
lcall
aas
push
xor
addb
insb
mov
popf
out
adc
test
aam
jmp
or
fisubrl
lods
mov
sahf
insl
pop
ljmp
ljmp
inc
in
push
xor
jp
xchg
xorb
sets
call
repz
out
jb
leave
sti
mov
fdivrl
xchg
jmp
inc
xchg
lahf
in
mov
outsb
fsubl
sbb
das
sti
loopne
andl
jno
push
scas
push
mov
mov
pop
lock
inc
cmp
mov
mov
cmp
cmp
xchg
xchg
push
xlat
xor
pop
repz
lds
push
pop
shll
lcall
nop
aaa
test
repnz
xchg
mov
push
js
loop
inc
jo
sbb
push
mov
cmp
loop
adc
sahf
scas
push
ja
addr16
test
add
pop
adc
push
fwait
mov
add
pop
nop
daa
out
cmp
cltd
and
es
jmp
shlb
add
lds
cld
cmp
jg
sbb
dec
push
mov
mov
pop
cmp
or
out
pop
dec
scas
xor
testl
scas
daa
decl
pop
lds
test
lds
icebp
stos
imul
jns
mov
test
lods
cwtl
sarl
cwtl
hlt
lods
scas
adc
loop
xchg
dec
dec
lea
test
xchg
fmuls
or
leave
outsb
andb
mov
mov
pop
mov
sbb
gs
fwait
ja
push
iret
in
mov
in
mov
hlt
mov
aaa
and
xchg
test
jmp
leave
cmp
push
leave
mov
cld
es
aas
inc
mov
arpl
sub
lcall
dec
add
jnp
jl
mov
rolb
pop
xor
sub
stc
xchg
xor
sub
lahf
mov
cmpsl
push
clc
adc
in
test
mov
sub
adc
and
jg
pushw
pop
rcrb
cmp
mov
or
mov
cmc
add
jmp
xor
daa
and
jb
add
jle
repz
aas
cmp
hlt
lcall
pop
lea
sbb
adc
xchg
mov
jp
add
arpl
xor
adc
loopne
lds
mov
pop
inc
jae
adc
mov
daa
je
adc
jae
mov
fwait
push
cmp
repnz
jl
imul
daa
stc
in
adc
adc
pop
jge
loopne
inc
mov
inc
add
into
test
cmp
xchg
cmp
mov
inc
ja
xchg
out
inc
push
pop
fdiv
cmp
scas
sarb
inc
xor
lret
and
insl
cmc
jb
cmp
and
push
lcall
and
pop
popf
insl
or
or
push
stc
push
loopne
inc
add
pop
stos
pop
jb
jae
lret
mov
cmc
sub
and
push
adcb
jns
outsl
add
sub
icebp
mov
pop
jecxz
cwtl
in
lods
rol
iret
xor
shlb
xor
mov
test
sub
add
js
pusha
push
ja
inc
pushf
rorl
clc
hlt
jno
inc
lret
sub
cmpsb
aaa
mov
dec
lods
or
dec
int3
xchg
sub
popf
mov
sbb
cmp
ja
jp
xor
lods
jno
cli
repz
pop
mov
dec
movsl
xchg
mov
rol
cmp
ret
mov
sbbl
mov
pop
jno
repz
jb
xor
movl
xchg
dec
mov
popa
shlb
pop
sub
repnz
adc
fwait
movsb
lahf
enter
std
jnp
jl
push
in
call
cmp
mov
addr16
aas
push
mov
pop
push
out
insl
popa
loope
mov
cmp
lahf
inc
fst
ficompl
fldt
popl
clc
popa
mov
xorl
iret
sbb
leave
icebp
and
add
lods
jo
xor
fbld
mov
xchg
sbb
push
mov
out
and
out
js
loopne
lock
mov
fldt
mov
lahf
dec
ss
mov
xchg
in
sbb
mov
stos
push
dec
fucomi
fildl
cmp
push
and
test
xlat
push
int3
adcl
insb
scas
adc
xor
sbb
add
lret
insb
inc
mov
cmpsl
subb
std
pusha
sbb
xor
inc
mov
xor
leave
inc
pop
inc
movsl
add
add
pop
inc
enter
or
push
mov
xor
xor
int3
imul
je
pop
sub
or
mov
mov
xor
rcrl
fmuls
cmp
lahf
hlt
pop
out
pop
out
jns
dec
lea
dec
adc
dec
pop
pop
aad
test
aam
xchg
cmp
xor
pop
and
dec
xchg
out
cmpsl
and
sbb
mov
movb
push
xchg
pop
in
xchg
jle
je
mov
adc
cmc
xchg
adc
push
push
xor
push
add
mov
pop
out
outsb
jnp
adc
pop
mov
mov
mov
les
es
inc
xor
mov
lret
insb
fcomp
mov
sbb
pop
mov
testb
jns,pn
fisttpl
sbb
fwait
mulb
push
mov
jno
or
xor
cmp
fisubl
cmpsb
xor
stos
mov
movsb
das
push
xchg
leave
push
or
jo
daa
pop
push
aam
sbb
pop
lods
lret
rcll
xor
out
dec
nop
cmp
sbb
leave
mov
cltd
cmp
shrb
or
mov
add
mov
jno
scas
lret
adc
cs
push
lea
call
pop
pop
inc
je
aam
enter
xor
rorb
push
movl
mov
push
pop
stc
call
mov
or
jne
xor
and
adc
gs
movsb
push
cmp
xlat
or
mov
xor
icebp
iret
dec
jp
and
aas
js
xor
arpl
or
push
pop
mov
pusha
mov
stos
jae
loope
xlat
std
jmp
hlt
xor
pusha
fists
imul
enter
dec
add
fwait
mov
cmpsb
xor
mov
dec
jg
mov
ret
andl
inc
xchg
sub
stc
repz
flds
add
stos
xchg
cmp
cs
loop
sbb
inc
and
and
jmp
mov
es
jg
pop
ret
inc
dec
call
outsb
jae
js
iret
pop
pushf
push
cmpsl
movsl
push
lret
ja
call
pushf
dec
cs
lds
mov
xor
pop
in
in
fdivl
int
hlt
daa
jecxz
or
push
lods
dec
and
jmp
cmpsl
loop
out
outsb
scas
inc
shll
repz
movsb
rorl
adc
xor
lods
movsl
add
sbb
mov
pop
out
dec
push
push
ret
push
or
push
adc
dec
idiv
aas
aad
dec
mov
add
inc
xlat
enter
cltd
xor
cmpsb
call
les
jns
mov
idivl
je
addb
pop
loope
je
cltd
iret
loopne
lods
mov
inc
adc
xchg
imul
sbbl
loop
leave
test
in
or
pop
mov
ret
dec
movsb
lcall
jno
adc
cmp
aad
push
int
xchg
and
jnp
push
and
hlt
add
int
adc
sub
jbe
jnp
mov
nopl
je
ja
and
das
sub
aam
addr16
pop
cmc
push
icebp
ja
and
mov
jge
jge
mov
fldcw
fists
push
jge
and
lret
js
mov
or
stos
addr16
insl
stc
aas
inc
mov
dec
xor
rolb
test
cwtl
fildl
mov
jmp
xor
lods
jnp
pop
pushf
insb
vpxor
dec
std
sbb
push
mov
in
xlat
mov
jne
cwtl
mov
xchg
cmpsl
fsubrl
mov
adc
jae
cltd
xor
cmp
push
adc
ds
mov
pusha
mov
ss
mov
sub
adc
jl
adc
pop
push
aaa
arpl
sbb
aam
addr16
aas
xor
mov
jg
enter
arpl
lahf
pop
push
push
aas
push
pop
mov
loop
pop
call
arpl
xor
mov
in
test
fs
xchg
cmpb
out
int
inc
pop
mov
popa
add
negb
loop
cmp
shl
stc
lea
cmp
cli
es
mov
jle
and
sub
fbld
sbb
sub
lods
jnp
xchg
fcmovbe
fstp
ret
jne
jno
ret
add
daa
adc
out
xchg
cltd
mov
ljmp
xchg
es
daa
adc
or
loope
lock
jae
mov
clc
enter
enter
jp
leave
and
pop
fdiv
xor
mov
imul
push
xor
popa
xor
push
sbb
jmp
xchg
push
ljmp
stc
in
xor
cmpsb
xchg
adc
enter
adc
lods
push
rcrl
xor
and
imul
cmpsl
out
rolb
pop
xchg
inc
aam
push
push
pushf
xchg
mov
fcoml
mov
push
pop
pop
jle
nop
push
mov
cmp
or
bound
das
push
add
pop
add
in
xchg
ljmp
adc
out
pusha
fstl
les
mov
inc
or
bound
scas
mov
mov
cmp
push
lds
and
add
adc
jae
inc
sbb
mov
int
sbb
bound
xor
fisubrs
aad
and
dec
xor
jle
aam
push
cmp
cli
add
jno
shrl
mov
lret
add
sbb
xchg
ljmp
popf
dec
mov
sub
push
xchg
add
xchg
aad
jns
mov
pop
sub
dec
pop
cmc
outsl
push
enter
and
arpl
cmovg
mov
pusha
and
mov
cli
mov
or
mov
mov
loop
inc
sbb
fsubrs
dec
ss
adc
cmc
ds
ficompl
nop
adc
mov
js
je
les
fnsave
push
rcl
ljmp
dec
repz
cmp
push
jle
xor
and
fstps
repnz
cmp
cs
or
fdivl
in
js
fwait
repz
or
mov
repz
mov
test
fnstenv
lock
add
dec
sahf
andl
ja
sub
cld
ret
test
daa
and
shld
fcmovnb
int3
inc
stos
push
xchg
mov
cmp
pop
jns
fsts
mov
jl
fnstenv
push
mov
inc
ret
cmpl
mov
dec
lcall
fs
jo
fistpl
pop
inc
mov
lock
nop
inc
iret
inc
xchg
pop
cmpsl
xchg
mov
xor
xor
aaa
push
outsl
out
xor
cmpsb
call
inc
jne
out
fbstp
sbb
dec
shrb
xchg
outsb
and
scas
adcb
pushl
push
scas
add
push
aas
lcall
imul
fstp
leave
mov
dec
lret
and
cmpsl
jae
inc
hlt
aas
ss
ret
sub
rcrb
sub
push
sub
inc
rol
add
or
sbb
arpl
cwtl
mov
add
mov
js
and
addr16
daa
xchg
mov
ljmp
xchg
aaa
in
aas
mov
xchg
ljmp
jo
pop
hlt
leave
or
in
stc
hlt
push
fistpll
adc
or
movl
into
pop
cmpsl
push
mov
jl
out
bound
icebp
sbb
pop
mov
popf
adc
daa
sub
pop
sub
xor
push
inc
ds
dec
int3
mov
jle
jmp
mov
mov
ljmp
je
add
or
and
mov
push
push
xor
xchg
test
push
ljmp
push
add
pop
mov
into
les
jmp
call
cmp
xchg
mov
je
adcb
xor
cmp
fbstp
mov
mov
nop
mov
pushf
xchg
dec
stos
mov
aaa
sub
jno
or
outsb
jns
push
jae
push
imul
orl
push
out
and
ds
mov
std
stos
movsl
jne
pusha
dec
imul
mov
lods
movsb
enter
mov
mov
mov
icebp
pusha
fs
cli
and
sbb
cmp
xor
and
ret
dec
loope
test
and
mov
lds
outsb
ja
ja
ffreep
imul
cmpsb
cmpsl
ljmp
loopne
fneni(8087
daa
sbb
fidivs
cmp
bound
fistpll
repz
mov
std
pop
dec
lea
stc
mov
xor
iret
popa
jnp
hlt
xchg
cmp
lods
stos
loope
inc
shll
sub
add
pop
push
xchg
iret
add
ret
cmp
popf
xchg
dec
aam
push
xchg
rol
sub
and
xor
push
aaa
sub
adc
add
xchg
push
mov
adc
adc
adc
sarl
lods
or
inc
cmp
xchg
mov
sbb
jg
jo
pushf
add
int3
pop
push
push
xor
dec
mov
popf
test
cmp
ret
mov
outsb
jp
and
mov
sbb
in
inc
add
jp
ret
mov
bound
mov
mov
cmp
shrb
rcll
push
dec
dec
stos
test
in
push
add
shlw
out
adc
aaa
xchg
fadd
jmp
push
lret
sti
adc
mov
jmp
movsb
mov
scas
or
mov
mov
dec
dec
pop
mov
inc
je
push
insl
xor
bound
sub
mov
ja
mov
std
mov
fsub
std
cmp
test
popa
jns
ds
adc
add
mov
subb
and
add
call
stos
sti
inc
aaa
jno
xor
mov
mov
xchg
jb
fs
cmc
int
jne
add
icebp
fcomp
enter
inc
setl
sub
mov
mov
imul
add
jns
add
xchg
add
jecxz
cwtl
outsl
jnp
mov
pop
enter
mov
mov
and
cwtl
add
cltd
xchg
fsubl
fdivrp
js
pop
adc
push
xor
mov
arpl
cmp
lock
cmp
cld
and
or
insl
aam
mov
ljmp
das
aas
inc
pop
ds
ds
sub
xchg
out
sahf
sbb
xor
setg
pop
imul
jg
movsl
incl
jns
mov
pop
sbb
xchg
push
out
scas
jae
sbb
or
xor
inc
dec
cmpsl
pop
fadds
cmp
adc
ljmp
cmp
dec
or
pusha
ljmp
sub
cmp
stos
and
xchg
xchg
adc
dec
xchg
cmp
out
sti
std
fcomi
dec
sbbb
pop
jl
fwait
std
mov
push
icebp
mov
in
stos
pop
ret
addr16
mov
lods
sbbl
sar
pop
ja
sbb
lods
popa
push
icebp
in
push
mov
mov
out
cld
fidivrl
ljmp
mov
popf
mov
sti
sar
fnsave
aad
mov
nop
mov
imul
and
imul
and
loopne
out
arpl
lds
addr16
pop
fwait
sub
clc
aam
xchg
dec
in
pop
aad
pop
incl
loope
andb
dec
clc
out
mov
inc
rcll
sub
jae
enter
cmp
mov
iret
loopne
jp
outsl
sbb
repz
xchg
dec
jb
idivb
pop
sub
call
movsb
xor
push
push
sub
xchg
mov
sbb
adc
xchg
popf
movsl
data16
outsl
mov
insb
outsl
les
push
pop
data16
mov
cmp
or
cmp
inc
clc
mov
mov
or
cld
scas
out
pusha
fidivs
pop
mov
pop
or
imulb
mov
inc
xchg
dec
std
jae
cmp
sub
loopne
xor
jle
push
add
lret
push
push
mov
cmp
jl
push
aad
or
xchg
xlat
mov
adc
dec
jmp
int3
faddl
or
shl
xchg
mov
shlb
add
inc
cmp
jo
jae
pop
mov
sar
outsb
inc
or
sub
ret
or
shll
dec
je
adc
das
jno
imul
stc
mov
outsl
imul
in
fwait
jbe
add
ljmp
in
addr16
mov
in
mov
xchg
xchg
xor
outsb
test
pop
add
sbb
push
push
andl
pop
cmp
sti
test
add
push
jge
sbb
inc
fwait
inc
fldl
xchg
addr16
mov
mov
sub
push
push
jnp
imul
dec
es
cli
addl
ret
js
mov
frstor
xor
ret
jmp
loope
out
mov
inc
jo
pusha
mov
shlb
dec
inc
xlat
add
sub
loopne
xlat
stos
mov
push
pop
dec
push
mov
inc
mov
ds
push
add
dec
sub
out
sbb
mov
pushf
cs
insl
stc
pop
mov
pop
lahf
outsl
push
test
out
mov
lds
sahf
jmp
imul
xchg
xor
push
pop
fsubs
pop
js
jno
jl
xchg
xor
sbb
insb
xchg
flds
jmp
out
pushf
jnp
pop
pop
xchg
jb
sahf
mov
retw
or
into
cs
repz
xchg
ja
sub
insb
cmp
inc
dec
pop
and
rorl
and
hlt
mov
movsl
rcrb
push
ja
push
cwtl
subl
icebp
mov
xchg
stos
pop
mov
test
test
push
push
fs
icebp
xchg
aaa
jnp
add
push
bound
xor
fsubrs
push
cwtl
in
mov
push
lcall
inc
fildll
movsb
scas
daa
pop
sub
dec
cs
outsl
fistl
jns
in
std
les
lahf
loopne
push
and
jle
jp
insl
or
loope
in
mov
adc
jmp
hlt
and
jno
or
dec
into
stos
push
gs
push
jb
jnp
xchg
push
cltd
inc
add
jo
cmp
shrd
in
xchg
jl
std
rclb
cmp
sub
cmc
dec
add
mov
mov
lcall
in
push
out
jge
xchg
add
inc
loopne
sub
andl
adc
ret
dec
jmp
cmp
cmp
or
jle
pop
inc
test
xlat
mov
test
mov
shlb
cmp
cmpsb
movsl
add
lea
cmp
jns
mov
das
pop
mov
aaa
imul
lock
mov
cmpsl
fwait
repnz
and
and
popf
insl
dec
inc
xchg
mov
fimull
mov
pusha
out
jo
and
dec
adc
mov
jg
add
sub
pop
cmpsl
or
loope
je
repnz
adc
mov
sbb
fnstenv
cmp
test
dec
mov
cmp
shlb
mov
push
insl
out
aas
xchg
roll
testb
mov
cltd
push
fdivl
cmp
insb
test
pop
pop
xchg
jp
push
jb
jae
mov
jmp
jecxz
ja
roll
ret
cmp
jo
inc
push
dec
mov
rep
sti
lret
inc
push
dec
cwtl
psubsb
dec
pop
jne
mov
das
stos
add
sub
test
ds
inc
enter
xchg
shrb
nop
fwait
or
outsb
xchg
movsb
aam
std
sbb
pcmpeqb
insb
test
test
stc
xchg
cmp
mov
subb
call
xor
daa
mov
insb
cmpb
nop
or
sbb
std
rolb
bound
outsb
push
xor
cmp
mov
dec
shr
lret
jmp
jmp
clc
lahf
int3
lea
push
aam
mov
sub
lods
mov
xchg
dec
pop
loopne
ljmp
mov
dec
mov
repz
dec
dec
addr16
ficoms
push
or
mov
pusha
ja
test
fmull
jmp
cmp
sub
test
les
push
clc
arpl
dec
cmpsb
in
push
xor
pushf
iret
ret
les
sub
sub
pop
and
jnp
mov
js
sbb
xchg
xor
imul
adc
popf
cld
fwait
dec
das
pop
mov
adc
mov
inc
arpl
imul
push
outsl
push
mov
cld
arpl
cmp
push
pusha
lret
and
rcrl
sub
cs
mov
cmp
jmp
sub
xor
jg
sub
mov
out
fiadds
lret
cwtl
inc
mov
or
mov
mov
testl
int
ss
outsl
nop
imul
or
in
int
aad
rcll
mov
or
popa
aam
addr16
imul
mov
loopne
js
xor
test
cs
ret
dec
jecxz
outsl
pop
cli
xchg
cmc
pop
cmp
jmp
shlb
sahf
std
loop
add
movsb
or
lock
lret
mov
jl
xchg
xor
inc
mov
popf
or
inc
or
xadd
jp
and
xor
sahf
dec
pop
jle
sub
push
dec
std
imul
push
xchg
cmp
imul
sub
adc
and
add
sti
repz
out
push
lock
push
sub
ret
inc
jp
pushf
std
sti
insb
cs
add
sub
cltd
dec
leave
adc
sbb
fidivrs
icebp
inc
and
dec
jb
mov
movsb
sub
dec
cmp
popa
clc
test
into
xor
call
jle
repnz
jne
or
ljmp
cmp
sub
mov
push
fistl
pop
lods
in
mov
fidivrl
dec
into
pop
aaa
ja
sahf
lock
sarl
popa
lods
aam
bnd
ret
in
dec
push
xor
mov
cwtl
in
or
fdivl
jecxz
mov
fnstenv
call
repnz
dec
into
sub
or
cli
push
adc
push
stos
js
dec
inc
ljmp
and
pop
lea
and
sbb
inc
inc
clc
sbb
cmpsb
push
scas
daa
xor
sbb
jmp
out
and
movsl
inc
pop
dec
aam
dec
fdivs
mov
idiv
xor
jl
ficomps
lret
add
mov
pusha
add
cmp
popa
fistps
jecxz
aaa
pop
xchg
pop
test
push
icebp
pop
mov
insb
cmp
popf
mov
inc
loopne
aas
inc
and
out
pop
mov
nop
or
push
push
lcall
push
cwtl
inc
pop
adc
jl
adc
outsl
and
fiadds
cmp
sahf
les
mov
call
add
mov
sbb
push
enter
sbb
lret
imul
xchg
jne
adc
lret
je
lahf
out
xlat
movsl
pop
scas
cltd
out
pop
test
xor
mov
pop
mov
ret
mov
sbb
and
rcrb
lods
bound
cltd
mov
les
xorl
in
cmp
mov
pop
add
inc
shll
and
mov
mov
dec
imul
and
or
dec
dec
fs
in
dec
and
dec
cmp
arpl
adc
sbbb
mov
push
and
xor
push
and
iret
in
xchg
lock
xor
inc
or
stc
lea
loop
mov
inc
dec
push
pushf
enter
movsb
in
int
lahf
out
cmp
popa
mov
int3
sub
out
sub
push
fwait
into
int
ficoms
clc
lock
sbb
or
ficoml
jne
or
aaa
orb
dec
loope
and
xchg
push
fiaddl
dec
sub
jp
fs
sarl
or
dec
xlat
pop
and
mov
outsb
xchg
and
pop
stos
ret
pop
jo
loopne
add
out
push
sub
mov
loopne
fdiv
movsb
hlt
pop
inc
jle
xchg
adc
xor
call
adc
nop
xchg
fcoml
mov
divb
int
add
lcall
imul
fadds
sbb
test
leave
inc
inc
push
jmp
add
mov
loopne
lahf
scas
jns
and
xchg
sub
inc
lcall
jg
jbe,pt
dec
negb
sbb
adc
adc
add
int
loope
mov
test
cmp
movsl
lods
and
pop
rclb
lea
ficoml
ret
or
adc
scas
sub
or
add
sub
dec
push
xor
pop
out
loopne
mov
mov
mov
outsl
mov
mov
jae
insl
fmuls
imul
add
mov
ss
add
bound
pop
std
sub
daa
adc
loope
or
cs
fistl
hlt
pop
mov
jecxz
inc
pop
sti
xor
call
shrl
and
cmp
rorb
mov
negb
pop
sub
jne
add
fisttpll
adc
into
ret
jne
mov
ds
ret
jo
cltd
lcall
test
pop
inc
movsl
js
pop
jge
into
inc
xchg
fidivl
add
mov
mov
test
popa
mov
sub
or
shr
jnp
test
push
in
push
add
inc
lods
lcall
inc
push
push
sub
or
xor
int
popf
aas
sbbb
cmp
sbb
out
rcrb
jmp
xlat
pop
mov
addb
lock
or
je
cld
test
push
lahf
adc
das
and
js
cmove
add
aad
pop
repnz
test
xor
outsb
in
shl
sub
stos
jle
int
jno
xchg
push
adc
mov
outsb
test
dec
inc
ret
cmp
xchg
pop
lcall
push
dec
cld
mov
sub
or
push
insl
outsl
xor
insb
test
push
out
mov
lock
xor
scas
inc
adc
push
cli
leave
repnz
leave
or
sbb
xor
dec
push
addl
xchg
mov
es
insl
jo
jnp
icebp
jg
mov
fiadds
std
xchg
adc
fmull
mov
sahf
loope
daa
nop
sub
daa
test
mov
jns
and
in
notl
cmp
mov
pop
fistl
push
lret
jo
ss
xor
lock
ljmp
fistps
sub
cltd
inc
dec
dec
sbb
add
mov
loop
mov
sahf
sub
jbe
cmpsl
jmp
mov
xorl
imul
push
xchg
cwtl
imul
idivb
xor
out
movsb
xchg
cmp
mov
xchg
jmp
aad
test
inc
xor
dec
jp
mov
inc
sbb
sub
mov
sti
pop
insl
jge
xlat
stos
sub
rcl
nop
and
add
jnp
hlt
lock
pop
aad
fsts
pop
mov
dec
rcr
add
imul
mov
pop
xor
bound
sar
pop
out
je
dec
push
push
mov
push
inc
sahf
and
jmp
fmuls
or
jne
out
les
loope
cwtl
inc
add
mov
iret
inc
clc
imul
rcrl
pop
subb
xchg
fwait
dec
repnz
arpl
loop
adc
sub
sbb
adc
and
ret
or
dec
push
cmc
int3
adc
jmp
pop
cmp
imul
mov
in
mov
sbb
mov
xchg
inc
cli
or
insl
or
or
fwait
outsl
pop
xchg
adc
fisubrs
cmpsb
pop
sysexit
divb
pop
and
mull
jnp
lods
loop
sub
adc
pop
dec
dec
imul
test
lock
sbb
cmc
mov
shlb
pop
and
xor
fcmovne
lea
pop
xor
or
sub
imul
xlat
pop
loope
ss
add
loope
push
sub
or
jge
or
xchg
pop
jae
sub
imul
cmp
pop
mov
bound
xlat
push
sbb
cmp
xorl
ficomps
pop
sub
mov
dec
or
lret
enter
mov
push
call
movl
xchg
enter
mov
fisubs
sub
jb
pop
das
jmp
out
pop
mov
jns
cmp
xor
mov
fadds
cmp
push
push
test
lcall
ss
sti
push
imul
popf
mov
mov
or
cmp
xchg
inc
scas
arpl
int3
mov
lret
adc
mov
call
sti
nop
popf
js
inc
imul
ret
stos
lret
cwtl
movsl
jno
outsl
iret
cli
loopne
mov
xchg
cmc
lea
mov
outsl
mov
in
mov
inc
mov
cmc
mov
lods
jnp
shll
sub
icebp
ds
add
cltd
inc
rol
dec
test
add
adc
in
out
push
pop
and
xor
sub
imul
cli
les
push
adc
pusha
dec
sub
push
ficomps
and
xor
mov
push
dec
movsl
add
outsl
cmp
xchg
stos
dec
jo
fcmovu
adc
clc
and
fs
push
rcrl
jne
imul
mov
ja
test
push
pop
bound
xor
pop
ja
push
jmp
sub
cmp
cmp
scas
push
or
jne
nop
add
xchg
inc
add
jo
pop
lcall
adc
adc
mov
aad
pop
je
pop
out
ds
xchg
adc
add
popl
aad
pushl
cmc
sarl
lods
sbb
xchg
lods
mov
int
in
pop
lahf
out
loopne
or
or
rcrl
jecxz
inc
in
mov
cmp
xchg
add
popa
cmp
add
inc
lods
int3
js
jno
inc
fmuls
add
lret
mov
test
push
pop
push
xchg
in
adc
xor
inc
ja
mov
sbb
push
sub
inc
and
hlt
pop
sbb
sbb
dec
lahf
pop
stos
mov
imul
lret
sbb
adc
ljmp
pop
lret
repz
cmc
lcall
scas
insl
fistpll
and
scas
fdivl
xchg
movsb
push
add
push
and
rcll
dec
xor
inc
add
pop
ss
jg
movsb
and
cs
js
xor
call
imull
andb
or
shlb
mov
ds
std
popa
cmp
ja
xlat
and
repz
shld
mov
adc
insl
cmp
sub
sbbb
aas
add
mov
or
inc
mov
mov
mov
mov
adcl
cmp
pop
xor
xchg
punpcklbw
idiv
inc
dec
popa
cmp
dec
cmp
inc
sbb
or
jle
imul
push
clc
js
inc
imul
cmpsl
aaa
mov
mov
lcall
mov
out
pop
cmp
cld
shll
cmp
add
imul
imul
ja
inc
ficoms
pop
outsb
lret
ja
xchg
jae
fistl
mov
shlb
mov
or
pop
rclb
pop
jbe
jl
cmovge
mov
call
loopne
shlb
loop
call
sub
andl
jmp
adc
test
mov
sub
mov
pop
sbb
push
lds
push
push
out
cmc
inc
cltd
cmpsb
dec
inc
andb
test
stc
setae
outsb
ja
push
fiadds
pop
mov
mov
in
jae
shr
and
add
pop
loop
or
push
and
jecxz
out
int3
jg
push
or
inc
mov
push
lea
xlat
add
pop
xor
iret
dec
or
push
and
or
rcrl
mov
and
inc
gs
loop
ds
not
loop
mov
dec
fwait
sbb
jbe
fdivrl
call
sub
and
int
shlb
or
pop
fs
dec
sub
cmpsl
and
jbe
xor
pop
xchg
cmpsb
push
and
add
das
mov
clc
push
lret
and
xchg
xor
cmc
outsb
cmp
cwtl
sub
pusha
dec
adc
mov
das
xchg
add
das
das
lods
sbb
je
ret
cmpb
add
test
sub
out
daa
call
shl
adc
dec
mov
push
or
push
repz
adc
lcall
je
push
cmpsl
xchg
daa
sbb
mov
pop
clc
es
sub
xor
scas
jbe
nop
mov
mov
dec
jo
dec
ja
push
mov
mov
sbb
test
add
into
pop
das
jl
aam
mov
xor
jl
test
pop
ffreep
sub
and
mov
mov
clc
mov
push
pop
pop
stos
inc
out
sarl
loopne
outsb
in
int
push
shll
push
push
pop
or
stos
push
adc
fs
or
bound
dec
fwait
lods
mov
jmp
or
aaa
jecxz
jo
shrb
imul
cmp
test
ret
in
stos
lds
lcall
into
imul
sbb
mov
and
jnp
inc
and
andb
in
int3
insb
sub
sub
lods
or
dec
push
mov
jno
mov
sub
adc
mov
pop
arpl
test
insl
jnp
and
mov
dec
cli
xor
sub
mov
and
cmp
fisttpl
push
stos
int
xchg
lcall
jne
les
popf
sub
mov
xchg
mov
adcb
ror
movsl
das
shrb
icebp
mov
test
orb
sarb
fcomps
int3
push
xchg
jge
addr16
and
iret
xchg
dec
xor
sbb
dec
rolb
sub
and
daa
bound
movsb
icebp
fwait
stos
movsb
mov
loopne
addr16
sub
pop
pop
dec
cwtl
inc
jecxz
pop
incl
in
add
or
cmpsl
xchg
je
sbb
cltd
and
orl
aas
xor
test
inc
jp
inc
mov
cld
lahf
pop
into
in
in
jne
cwtl
test
rolb
notb
pop
xor
mov
out
int
roll
stos
pop
div
inc
pop
ds
sbb
cmpsl
fsubs
mov
shlb
scas
mov
into
mov
leave
andl
adc
and
mov
push
inc
repnz
xchg
xchg
or
pop
cmp
sub
xchg
mov
lds
inc
lahf
jns
and
adc
cmpsb
dec
mov
jle
pushf
jle
inc
into
movsl
js
int
mov
xor
mov
leavew
mov
icebp
and
xlat
adc
jae
fdivrp
xor
add
in
fsubs
gs
cmp
cmp
fisubl
xlat
mov
sar
outsb
lea
aam
push
std
cmc
mov
in
fisubs
mov
adc
mov
addr16
xchg
fstpt
adcl
push
or
jns
int
std
dec
and
pop
repz
or
mov
lds
sbb
bound
pusha
dec
jecxz
js
push
sub
fwait
mov
in
outsb
bound
sub
orb
pop
enter
in
leave
sub
out
and
add
dec
push
pop
xchg
adc
cmpsl
or
push
xchg
add
mov
mov
popl
call
jecxz
jae
movsl
out
cmp
sub
adc
jnp
push
and
and
pop
enter
pusha
jle
inc
xor
inc
jb
cmp
lcall
shll
bound
xor
add
jae
test
mov
xchg
and
outsb
inc
mov
push
lret
scas
shlb
jno
outsb
push
cld
mov
aam
out
rclb
cld
clc
xchg
jmp
xchg
mov
out
push
roll
xchg
test
scas
sti
xchg
outsl
lea
sub
pop
icebp
scas
and
repz
sub
and
dec
mov
mov
xchg
adc
pop
xor
mov
bound
call
rorb
stc
inc
or
ret
pusha
push
jo
dec
fistpll
in
add
je
mov
pop
ds
dec
loope
inc
mov
shrb
push
dec
inc
add
cmp
mov
stos
mov
inc
imul
ja
or
sub
icebp
xchg
insb
xor
insb
in
fsubl
or
mov
cltd
aas
inc
je
sbb
out
or
outsl
pop
sub
sti
mov
enter
andb
mov
mov
rcrl
or
jmp
xor
mulb
push
sbb
inc
or
int3
add
dec
addl
or
mov
mov
ficomps
shrl
push
lock
cwtl
mov
cld
out
cs
dec
loop
shl
pop
add
rorb
je
push
mov
cli
aaa
fmull
xchg
cmp
jge
mov
adc
push
inc
cltd
jns
andb
pusha
test
xchg
pop
stos
xchg
mov
sahf
pushf
test
sub
jmp
and
daa
andb
out
inc
aam
dec
into
je
sbb
pop
xchg
sbb
xchg
jno
gs
or
stc
add
data16
sbb
mov
iret
jp
mov
push
leave
or
fisubl
mov
cli
or
mov
fisttpll
sub
jge
push
out
bnd
add
sub
or
dec
add
ret
xorb
mov
fs
je
imul
cmpsb
xor
mov
xorb
mov
dec
mov
test
xchg
xchg
xor
push
sub
imul
dec
mov
gs
jne
ds
mov
sbb
jno
dec
imul
push
out
repnz
jnp
jp
dec
dec
andb
sbb
pop
add
push
fdivr
das
je
xor
mov
movsl
xor
in
sahf
stos
lret
into
push
pop
jae,pt
jl
ss
and
popf
mov
push
cwtl
push
add
add
clc
loope
mov
cmc
xchg
call
insl
adc
fwait
clc
jns
lret
xor
jbe
in
dec
popf
or
fwait
loope
lcall
pop
je
dec
mov
lods
mov
sub
push
cmp
add
push
adc
mov
mov
ret
jns
mov
hlt
xchg
jb
mov
hlt
adc
xchg
mov
dec
outsl
sbb
mov
push
xor
mov
push
xchg
mov
xchg
pop
mov
push
insl
inc
and
repnz
shrb
mov
ss
movb
divl
dec
iret
or
xchg
daa
movsl
cmpsl
sub
icebp
lret
dec
cmp
mov
push
out
fisubrs
push
adc
out
pop
or
jo
adc
andl
push
clc
clc
or
push
fmuls
mov
sbb
test
stc
push
cmp
add
jmp
adc
mov
lret
aam
push
arpl
xor
push
lea
loopne
nop
push
cwtl
add
xchg
push
fidivs
testb
popa
fldt
push
sub
imulb
pop
and
dec
mov
fnstsw
call
idiv
xor
xchg
ja
aas
mov
jb
cmp
pop
mov
stos
push
sbb
sbb
mov
stc
repz
lds
test
out
adc
inc
in
xor
lods
inc
movsb
jnp
inc
sti
xor
xor
stos
iret
mov
arpl
mov
and
data16
mov
jnp
lods
movsl
inc
inc
dec
pushf
imul
mov
dec
aam
sub
jg
add
out
sbb
or
jge
test
outsl
je
push
out
sbb
xchg
out
and
push
lock
mov
enter
mov
pop
popf
shlb
adc
lea
mov
ror
or
test
push
loopne
decb
scas
in
cmp
shrl
outsb
push
mov
xor
push
lods
mov
cmp
lahf
js
fsubs
sub
mov
ret
cmpsl
shr
mov
ja
push
test
add
into
lcall
jl
push
push
pop
imul
push
jmp
ret
lcall
mov
mov
in
not
push
xchg
add
add
mov
ds
jno
push
sbb
xchg
les
jb
sub
mov
dec
xlat
fbld
push
add
push
je
xorb
mov
fnstenv
cltd
sarl
push
pop
pop
pop
pop
push
test
or
inc
outsl
or
je
xor
lds
push
lds
or
jae
mov
loope
lahf
jne
lret
fisubrl
push
rclb
push
cmc
lock
mov
cmp
addb
sbb
int
scas
call
mov
into
lahf
test
add
lret
mov
leave
pusha
test
push
mov
std
test
out
mov
test
mov
lcall
fs
push
scas
pop
xchg
sbb
mov
pop
loope
mov
inc
push
dec
pop
aaa
loope
sub
outsb
mov
pop
dec
push
sahf
xchg
inc
sub
or
sub
in
dec
push
loop
pop
icebp
dec
push
andl
lea
adc
mov
leave
pop
xchg
into
sub
add
xchg
add
icebp
scas
inc
sbb
les
mov
sub
jecxz
fbstp
mov
dec
loope
sub
lret
inc
inc
pop
inc
mov
subl
dec
xor
jp
lods
popa
or
scas
stos
push
xchg
outsb
imul
pop
inc
xor
pop
sub
push
cmp
das
lret
inc
xlat
jnp
aaa
idivl
ret
outsl
insb
dec
add
dec
imul
loopne
loope
xchg
mov
xchg
xor
sbb
xorl
pop
lahf
adc
pusha
inc
lcall
xchg
enter
pop
ret
loop
push
arpl
stos
out
jp
subl
push
scas
xor
pop
shl
stc
mov
sbb
stos
sarb
movsb
insl
dec
gs
scas
cld
push
mov
inc
or
xchg
rcr
mov
js
sbb
cmp
jo
jecxz
ficoms
jecxz
push
cltd
adc
test
cmp
out
sar
in
loop
adc
rcr
xchg
cmp
dec
pop
insb
in
fbld
filds
or
adc
lods
add
imul
dec
adc
incb
iret
mov
mov
pop
imul
aas
and
fwait
jle
mov
ja
pop
sub
inc
mov
xchg
adc
cmp
pusha
js
and
mov
sub
fldt
int
lret
fimull
clc
pop
push
pusha
pushl
pop
xchg
ja
jecxz
mov
arpl
or
rcl
adc
add
cmpsb
stos
push
leave
sub
add
jae
cltd
mov
pop
aas
mov
lea
jge
mov
mov
leave
and
es
lds
push
pop
mov
ss
and
dec
inc
lods
push
lds
sub
push
cmp
inc
ds
adc
testb
mov
fnstenv
mov
jl
pop
mov
movsb
icebp
pusha
daa
or
jg
scas
mov
or
dec
loop
and
mov
sub
cld
testb
orl
sbb
pop
mov
jle
imul
pop
dec
cmp
cmpsl
subb
cs
outsl
xor
outsb
out
in
jo
cmpsl
mov
ja
xchg
sub
je
mov
jle
jbe
loopne
jns
aam
dec
mov
adc
and
leave
enter
dec
cwtl
outsl
cli
inc
add
stos
arpl
gs
orl
hlt
sbb
pop
leave
aam
jmp
ja
inc
dec
mov
cmpsl
cmp
sbb
sub
clc
mov
xorl
cltd
cmp
decb
daa
sub
mov
pop
stos
scas
out
dec
scas
or
jae
add
pop
push
xchg
iret
cmp
repnz
bound
ret
fwait
cwtl
jnp
mov
mov
add
ljmp
mov
or
xor
mov
mov
jno
push
dec
pushf
and
dec
jge
jle
test
sub
outsb
pop
js
repz
pop
int3
cli
enter
jns
xor
lods
jmp
sub
and
inc
or
or
je
sub
mov
outsl
adc
sub
pop
jno
ja
fcmovnbe
add
mov
pop
les
mov
adc
cmc
dec
inc
ret
mov
aas
int
jg
mov
testb
add
jl
mov
repz
arpl
repnz
mov
pop
lret
pop
and
jmp
sbb
int
arpl
test
mov
cmp
xor
data16
jae
cld
mov
or
jbe
xlat
sbb
jmp
adc
sbb
xor
mov
stos
cmp
sub
mov
fsts
push
scas
push
ret
fisttpl
and
mov
loopne
xor
add
aas
scas
fstpl
xor
rclb
cmp
mov
dec
arpl
xor
stc
dec
sub
add
fidivs
das
cmp
in
mov
loopne
and
xchg
mov
arpl
lret
gs
into
int
mov
xchg
jno
sub
gs
imul
int
mov
inc
popa
es
cwtl
cmp
pop
jns
add
mov
arpl
inc
ret
or
xchg
jae
scas
and
jp
aad
jmp
das
pushf
inc
or
dec
call
test
es
cmp
xchg
int
sub
lods
imul
test
dec
mov
les
pop
in
fdivp
cs
insl
jae
xchg
add
lret
pop
push
adc
add
add
ss
subb
dec
int
lds
repz
xchg
sub
pop
xor
mov
xchg
sub
jle
incl
cmpsl
mov
cmpsb
xchg
in
cmp
push
inc
dec
aad
dec
push
cmp
mov
sbb
aad
scas
sahf
aam
mov
pop
outsb
mov
or
aam
es
and
cmp
scas
push
dec
jp
in
subb
call
sbb
push
push
jb
popa
movsb
out
sbb
jb
mov
stos
enter
fmul
std
push
pop
push
sub
sub
aam
pop
sbb
negb
outsb
dec
repnz
xor
int3
fstl
mov
sub
push
add
xor
adc
test
adc
lret
es
sbb
out
and
int3
mov
mov
mov
mov
loopne
mov
cs
leave
out
outsl
ljmp
mov
pop
int
ret
subb
rcrb
sbb
or
js
jg
sbb
stc
fmuls
inc
xchg
aam
out
lahf
out
jnp
and
les
sbb
xchg
bound
push
fcoml
pop
ljmp
das
xchg
popf
cmpsl
mov
sub
sahf
jb
dec
nop
fbld
adc
sahf
pop
xchg
pop
jne
add
sbb
sbb
inc
and
pop
push
cltd
in
fnstsw
xchg
dec
dec
mov
test
pop
fildl
jo
adc
lock
daa
cltd
in
cld
movsl
cmc
xchg
es
push
mov
cmpl
mov
cld
inc
or
aam
or
push
xchg
sbb
mov
xlat
or
bound
notb
mov
add
les
and
sarb
lods
cmp
sti
bound
stos
mov
adc
fwait
mov
stos
fwait
sbb
and
dec
cs
hlt
mov
call
into
xchg
mov
aaa
test
cmp
jmp
fs
arpl
dec
mov
add
mov
push
sub
in
sub
jge
jl
add
enter
leave
movsb
clc
outsl
xor
pusha
inc
mov
icebp
push
test
push
jl
mov
imul
sub
adc
inc
fcoms
sbb
outsl
aad
lahf
jo
pusha
outsb
push
jno
adc
mov
mov
pop
cmc
mov
jnp
mov
out
sahf
rep
cmp
mov
mov
es
cmp
inc
pcmpgtw
mov
scas
test
out
std
push
out
push
mov
hlt
sub
imulb
repz
aas
pop
pop
mov
lcall
jmp
jg
jl
sub
out
jecxz
sub
scas
test
scas
mov
or
xchg
mov
add
pop
int3
jmp
aaa
dec
push
jno
sbb
sbb
repz
mov
in
es
adc
dec
add
push
popa
ucomiss
aaa
sub
test
fsubrs
jmp
jmp
mov
sbb
test
dec
adc
sbb
fcoml
jb
bound
bound
jl
mov
mov
xor
sbb
dec
cmpsl
sbb
sub
loop
scas
testb
add
sbb
jge
into
test
push
lock
push
cwtl
pop
xchg
mov
push
pop
adc
push
mov
cli
and
xchg
jecxz
outsl
dec
cmc
cmp
shlb
mov
add
inc
dec
push
mov
push
xchg
jae
add
mov
test
push
cwtl
xchg
add
xchg
arpl
push
ds
and
mov
andl
imul
dec
stos
ret
sarl
pop
rcrb
out
pop
insl
and
rcrb
dec
jp
addb
ss
aaa
mov
jle
cmp
lcall
out
sbb
add
and
push
jae
mov
push
lahf
mov
clc
mov
shrb
movsl
cmp
lret
mov
lds
in
xor
inc
movl
insb
xchg
aad
add
xchg
pop
jnp
hlt
mov
sbb
xor
and
int
jo
jecxz
scas
movsl
dec
cmc
adcl
push
xchg
jbe
sub
jns
adc
and
mov
push
pop
mov
inc
clc
inc
loope
adc
cmp
inc
fmuls
dec
add
jg
addl
add
cmpsb
push
arpl
adc
add
es
push
xchg
or
shlb
jno
into
fmull
imul
bound
push
mov
xchg
js
mov
fsubl
cmp
les
inc
insl
stos
xchg
mov
pushl
movsl
sti
xchg
sub
xchg
lahf
into
bound
aas
sub
cmpsb
sub
jbe
rcr
cmp
xchg
cmp
out
and
jg
out
int
and
in
iret
or
pop
xlat
add
xchg
imulb
jg
stc
lret
pop
iret
imul
std
ret
xchg
test
lahf
mov
push
xor
jg
out
sbb
out
lds
mov
lret
mov
sub
lds
push
add
push
cmovge
fisubs
or
jle
cmc
pop
roll
adcb
sbb
xlat
bound
push
cmp
mov
pop
jne
mov
xchg
push
das
jnp
cli
mov
rcrl
sarl
sar
xor
jnp
leave
mov
sub
mov
and
inc
loope
xchg
mov
xchg
mov
mov
pop
push
mov
sub
std
mov
jae
push
sub
jbe
lahf
aam
outsb
xlat
test
push
js
lret
cwtl
mov
jne
test
mov
in
insl
add
mov
push
test
ljmp
ficoms
pop
pop
stc
mov
jnp
ss
sbb
sub
fisubl
cltd
jle
cltd
fisttpll
das
fldt
mov
push
clc
ror
data16
xchg
out
mov
push
fwait
ret
nop
inc
add
aad
jmp
jb
pop
fsub
pop
mov
xor
mov
cmp
cmc
add
cli
push
push
cmp
and
pop
cmp
inc
out
push
cmp
jp
push
bound
sbbb
add
repnz
and
push
cmp
xchg
xor
rolb
xlat
leave
in
mov
mov
inc
push
imul
bound
test
arpl
lods
clc
sti
or
push
mov
arpl
into
rcll
push
sbb
in
insl
add
lret
notl
mov
jb
jmp
out
add
jge
inc
testb
xor
insl
aam
test
daa
push
xchg
inc
fstps
mov
in
popf
adc
mov
sbb
repz
cmp
xchg
lods
push
mov
dec
cmpsl
dec
ja
ss
adc
lret
repz
fnsave
imul
mov
ja
jecxz
cmp
ljmp
jbe
or
xlat
xchg
xor
add
inc
fisubrl
add
xor
in
ret
das
inc
mov
movsl
loope
out
jmp
adc
outsb
mov
int
cltd
jp
out
lea
mov
jno
ds
push
cmp
repz
sbb
insl
add
js
and
and
ret
mov
xchg
or
sub
ss
in
lret
into
pop
aam
dec
xchg
aad
jecxz
lods
outsl
and
push
sub
and
ds
stos
pop
xor
push
mov
mov
push
adc
mov
scas
sbb
shld
arpl
rclb
arpl
xchg
jo
xor
pop
lods
ss
fwait
adc
add
fsubl
and
inc
dec
mov
pop
jno
hlt
xchg
aaa
loop
mov
shll
or
pop
push
jae
test
test
adc
pop
popa
mov
lret
data16
shr
addr16
xchg
hlt
mov
shl
movsb
xor
bound
xchg
pushf
je
in
pop
cwtl
scas
inc
je
mov
cltd
push
clc
inc
pop
test
rolb
int3
cmp
mov
orb
ret
in
pop
jo
std
cld
ljmp
push
inc
in
xchg
push
cltd
rcrb
inc
mov
roll
or
test
or
call
out
sub
pextrw
test
jnp
cld
stos
pop
shlb
imul
and
adc
jp
das
adc
mov
mov
scas
shrl
jl
fistpll
in
jp
clc
add
imull
stc
mov
inc
icebp
jg
xor
sarb
cmp
mov
xchg
nop
rclb
push
push
push
and
sti
jae
add
add
and
lea
cmp
inc
int
mov
movsb
push
movsl
xchg
addr16
fs
std
cmc
push
mov
mov
cmpsb
imul
aaa
cmp
lods
jl
pop
mov
popf
inc
jmp
push
inc
and
int3
dec
cmpsb
push
movsb
mov
xchg
and
addr16
and
shr
out
test
and
xchg
je
xchg
cmp
adc
outsl
and
mov
push
jecxz
ljmp
mov
push
inc
lock
xchg
imul
dec
xor
inc
fs
xor
or
xchg
fidivl
lea
cmp
inc
xchg
call
push
jb
nop
movsl
xor
pavgw
les
xchg
nop
adc
cld
inc
imul
mov
adcl
mov
cmp
push
addr16
ss
sub
cmpsb
imul
push
lret
add
xchg
test
gs
popf
push
push
fcoms
mov
sbb
popa
pop
aad
sub
lds
mov
in
pusha
inc
arpl
enter
pop
loopne
pop
inc
add
fstpt
in
push
int3
push
lock
cmc
nop
jbe
mov
insb
jp
lret
or
mov
mov
scas
push
push
mov
adc
cmp
dec
enter
lahf
lea
inc
jp
push
mov
bound
fsub
push
or
shll
lods
inc
mov
jle
jle
bound
or
pop
lahf
mov
xor
mov
iret
scas
lods
stos
dec
out
jecxz
aaa
inc
push
sbb
cmp
mov
dec
mov
pop
pop
daa
cld
cltd
movsb
aas
lcall
push
fs
ret
jle
aas
aaa
cld
push
pop
lret
jno
aaa
fs
out
mov
jl
pusha
out
mov
into
movsb
sbb
test
test
jge
stc
enter
inc
or
jae
ja
ficoms
call
movsb
dec
mov
loop
push
xor
aaa
inc
out
out
mov
mov
mov
add
test
roll
or
pop
ss
xchg
mov
and
aad
popa
ss
sti
sbb
pop
les
sbb
stc
sub
mov
push
add
dec
mov
repnz
xor
xor
sti
jne
mov
fldt
lods
gs
push
in
cmpsl
shrl
or
xor
test
lret
or
pop
push
mov
lea
loopne
dec
pop
filds
jb
mov
xchg
adc
mov
or
fadds
out
fdivrs
insb
jle
jp
push
das
push
pop
and
mov
es
adc
ret
xor
cli
call
and
pop
add
cmc
push
jle
enter
popl
mov
in
les
push
dec
pop
inc
mov
adc
or
pusha
and
dec
pop
and
testb
jg
jne
cmp
mov
jno
inc
and
rcrl
mov
pop
pushf
inc
pop
push
sbb
lcall
in
or
add
push
xchg
inc
arpl
leave
push
fwait
ljmp
dec
mov
mov
popf
inc
cmp
pop
aam
mov
or
dec
rcll
jnp
fistps
dec
xor
or
sub
pop
test
pop
mov
xor
dec
adc
es
stos
push
pop
cmc
xor
sbb
incl
in
fbld
cli
imul
call
fcoml
jnp
lock
in
nopl
inc
pop
insl
sub
loop
add
rorb
fldl
xchg
pushf
xchg
xchg
loop
xchg
pushf
inc
das
adc
in
sub
aam
test
insl
mov
jbe
das
movsl
jecxz
andl
fcoms
pushf
mov
ret
sti
jge
in
xchg
mov
repz
and
fidivs
inc
ret
jp
sbb
ficoms
xchg
inc
repz
xchg
push
pmaxsw
imul
adc
dec
sahf
mov
and
dec
push
shlb
sbbl
mov
adc
jno
jb
push
test
push
pop
lret
pop
scas
add
ss
div
pushf
sbb
mov
bswap
les
adcl
pop
inc
mov
cld
jp
ret
pop
push
dec
mov
cmpsb
sahf
sub
inc
lea
mov
sbb
sti
cmc
cli
push
sub
dec
mov
fiadds
pop
mov
hlt
rolb
jbe
mov
stos
sahf
push
mov
dec
pop
pop
fbld
mov
mov
fwait
push
imul
pop
sub
jo
sub
jmp
stc
mov
into
or
mull
xchg
sbb
in
addl
lea
mov
xlat
cmpsl
pusha
and
movsb
outsl
mov
push
sahf
cmp
fwait
push
dec
stc
mov
sub
cltd
pop
xchg
jbe
insl
ficomps
adc
lock
cmp
js
sti
jae
or
jnp
jl
push
cwtl
xchg
or
mov
jmp
test
xchg
pusha
push
inc
aad
sbb
dec
sub
in
pop
scas
outsl
into
je
ljmp
push
jl
xor
mov
pop
enter
pop
mov
lret
mov
fcomps
lahf
cmp
dec
cmp
lock
repz
sbb
add
sahf
inc
popf
push
ss
sbb
aaa
lods
add
enter
sbb
inc
lret
mov
mov
ds
mov
loopne
cmp
into
xchg
repnz
loopne
adc
loopne
sub
iret
pushf
loopne
outsb
repz
dec
scas
lods
cld
lds
les
cmp
jb
xor
push
lcall
aas
daa
inc
outsl
fmuls
data16
hlt
xor
mov
pop
loop
movsb
mov
push
mov
push
inc
js
sbb
adc
adc
das
xor
xchg
sub
stos
sahf
rcll
jo
leave
add
sar
pop
lock
and
mov
push
add
fcmove
or
in
pop
xchg
inc
lret
int
adc
les
cmc
dec
adc
push
shll
or
dec
fisubrl
into
outsl
rorl
scas
das
pop
mov
jno
mov
pop
pop
sub
in
sbb
int
int3
adc
jns
arpl
jne
lea
mov
sahf
add
stos
mov
push
jge
ret
movsb
xor
cmpsl
mov
cmpsl
in
iret
sub
lock
idivb
sbb
enter
dec
ja
stc
jbe
pusha
popf
dec
movsl
add
imul
dec
iret
rorl
sub
call
mov
and
clts
mov
repz
and
test
lds
sti
and
fistpll
inc
data16
inc
push
mov
imul
cmpsl
lock
lahf
pushf
idiv
xchg
cmp
into
sbb
subl
dec
repnz
cmp
dec
jg
lret
mov
mov
stos
je
stos
jmp
mov
ljmp
lds
sub
adc
cmp
xor
dec
lods
dec
nop
addr16
inc
insl
mov
jge
add
je
mov
rcrb
loopne
fisttpll
mov
mov
mov
mov
ret
lods
mov
cmpsb
sbb
in
jge
scas
mov
int3
stc
movsl
test
mov
mulb
mov
cmp
loope
push
push
pushf
push
fwait
mull
outsl
push
sti
leave
out
adc
sbb
jns
aam
push
mov
and
outsb
mov
dec
push
sub
mov
jae
dec
rep
inc
and
jnp
xchg
mov
cmp
mov
dec
fs
stc
pop
jo
arpl
xor
clc
imul
imul
sti
mov
jnp
xchg
dec
cmpsl
and
sub
mov
xchg
popf
ret
dec
jge
xchg
push
lods
dec
add
ljmp
mov
push
pop
dec
notb
mov
inc
pop
iret
imul
inc
jmp
cmp
sub
dec
pushf
je
push
mov
dec
mov
mov
es
mov
fcoms
ret
adc
inc
aaa
call
ljmp
mov
scas
xchg
lds
ja
add
les
rcll
mov
aad
fdivrl
sub
out
pop
mov
or
ljmp
int
cwtl
adc
lcall
ja
stc
xchg
popf
or
je
lcall
mov
jg
xor
mov
mov
mov
in
lahf
mov
inc
mov
daa
lock
or
inc
mov
icebp
mov
mov
sbb
test
shll
pop
les
adc
cltd
and
in
dec
jae
cmpsb
aam
sub
lahf
add
jbe
or
jne
in
mov
mov
test
jmp
sti
push
sar
mov
insl
fmull
mov
pop
sub
icebp
adc
push
xor
mov
xor
test
sbb
push
aas
inc
push
jns
push
lret
daa
mov
cmp
fldl
or
ss
xchg
in
mov
sbb
jo
lcall
call
xchg
push
out
sarb
xchg
dec
sbb
sub
sti
lret
icebp
mov
sbb
and
into
mov
rcrl
in
push
mov
adc
adc
cmp
sub
in
add
mov
xchg
fwait
pop
sub
insl
stos
xor
sbbl
xchg
inc
std
jno
pusha
fisttpl
adc
xchg
scas
mov
sbb
arpl
loopne
mov
cwtl
sbb
mov
fsubrs
rolb
in
and
mov
loopne
adc
test
sti
aas
adc
pushf
dec
fidivrs
jnp
xor
nop
mov
outsl
out
aas
fst
push
sbb
or
ret
aam
arpl
sahf
cmp
dec
fisubl
int3
mov
mov
mov
pop
add
call
push
cltd
mov
loopne
and
cmpsb
mov
push
fldcw
or
testl
arpl
adc
jb
cmp
ret
call
mov
sahf
dec
out
mov
lock
aad
adc
sbb
and
arpl
sub
lcall
insl
xor
dec
test
xorl
movsb
fsubl
mov
hlt
adc
movsl
je
pop
add
xchg
xchg
inc
xor
mov
ljmp
inc
pop
jg
xchg
or
fwait
aad
push
test
out
lret
push
sti
fdivs
cmc
xchg
popa
aad
sub
stos
cs
out
jge
push
mov
roll
in
cld
and
loop
xchg
ljmp
mov
ret
xchg
push
pop
add
xchg
fsubr
es
add
dec
gs
mov
cmp
inc
lods
mov
or
enter
in
push
mov
std
daa
negl
adc
mov
dec
or
aad
mov
jno
xchg
and
bound
push
xor
sbb
xor
fwait
lea
pop
adc
jle
test
add
addl
and
or
dec
sbb
sub
inc
hlt
in
mov
adc
cmp
pop
inc
dec
adc
stos
aaa
inc
mov
clc
aas
movsl
fwait
jne
pop
add
mov
es
orb
lahf
jne
jle
mov
cmp
data16
push
cmpsb
push
mov
xor
pop
aaa
jmp
sbb
leave
push
sub
pop
shl
scas
add
enter
mov
popa
jecxz
sbbl
outsl
outsb
rcrl
mov
nop
dec
sbb
mov
gs
cmp
inc
int
sahf
fisttpl
push
out
jne
xchg
cmpsl
lret
mov
jnp
pop
dec
xor
cmpsl
adc
jns
ret
or
jge
xor
xor
data16
rcll
fiaddl
nop
push
xchg
mov
fs
pop
inc
iret
add
lcall
fcomi
mov
mov
add
xchg
nop
dec
xchg
lret
push
adc
subl
insb
imul
shrb
mov
adc
jmp
xor
cmp
pop
or
and
cwtl
xor
and
sbb
lcall
stos
fildll
sub
push
ret
cmpsl
int
pop
rcl
jp
dec
popa
and
push
sub
push
cld
jl
push
pop
enter
jge
xchg
mov
icebp
lea
jb
hlt
loopne
cmc
pop
xchg
pop
fmuls
dec
or
xor
cld
leave
aad
into
pop
pusha
rclb
and
js
cmp
sbb
pop
adc
pop
dec
jp
into
or
test
jo
mov
outsl
mov
mov
push
sub
cmc
dec
or
push
xlat
sub
xchg
jle
pop
push
outsb
inc
inc
outsl
gs
repz
test
pop
pop
adc
ds
mov
outsb
adc
pop
ljmp
pop
and
out
xchg
fcompl
jecxz
xlat
ja
mov
add
lea
jno
icebp
jmp
clc
dec
add
sub
dec
xchg
jecxz
ret
loop
pop
bound
inc
cld
xor
fadds
cltd
int3
std
movsl
adc
dec
outsl
sub
rcll
mov
and
mov
push
call
pop
icebp
push
hlt
sub
mov
sub
or
dec
sar
and
cli
out
mov
inc
mov
cwtl
cmp
xchg
imul
push
fdivl
clc
mov
mov
and
lods
mov
aam
inc
pop
adc
call
inc
out
and
sub
jno
push
lds
sbb
iret
aad
stc
loopne
popf
jle
xor
add
jle
shl
fcompl
out
je
inc
fs
out
jno
mov
fwait
clc
test
xor
stc
mov
arpl
cmp
adc
sub
lret
push
sub
or
xchg
icebp
in
out
add
mov
adc
ret
push
insb
imul
mov
adc
pusha
ret
xchg
test
cmp
xchg
sbb
jge
mov
cmp
pop
mov
ficoml
mov
pop
test
insl
xor
sub
clc
ret
and
push
xchg
rcrl
push
lcall
cmc
push
mov
mov
sahf
mov
test
js
cmp
imul
imul
pop
sbb
dec
into
adc
inc
fsubl
or
rorl
push
push
sbb
pop
fisttps
jne
cltd
mov
aam
test
and
mov
je
adc
arpl
xor
jmp
imul
mov
test
out
mov
cmp
mov
xchg
fcmovu
or
add
dec
xor
push
lds
dec
rcr
xor
ja
lock
pushf
sbb
lcall
push
dec
cmp
cmp
push
mov
push
aas
ret
loopne
dec
push
add
sbb
dec
scas
adc
xor
pop
sub
pop
out
xor
mov
push
icebp
loop
cmp
fisubl
fidivrs
mov
xor
jnp
pop
xchg
xor
arpl
push
fiadds
push
fistl
iret
and
and
jo
loop
cmp
dec
lret
xor
jg
mov
or
test
and
rolb
adc
lea
pop
pop
cmp
pop
fadd
movsl
repz
mov
add
jge
ja
insl
sub
mov
or
ljmp
pop
xchg
or
dec
sub
loopne
sbb
inc
aad
adcb
stos
addr16
loop
xchg
leave
and
testl
adc
xchg
std
insb
or
push
jno
push
out
aam
lock
fcmovnb
mov
mov
jne
xor
push
test
int3
or
lret
add
pop
mov
cmpl
pop
pusha
and
push
fisubl
and
sub
insl
mov
lods
or
xor
cwtl
mov
lea
sbb
add
aad
das
movaps
scas
in
dec
fists
lock
std
addr16
sbb
pusha
flds
insb
mov
or
add
inc
jle
ret
adc
dec
jle
push
jnp
push
imul
scas
inc
stc
out
arpl
dec
ss
cwtl
jmp
nop
scas
xchg
std
ret
cs
shlb
call
dec
adc
aam
fstps
xchg
lods
scas
mov
cld
cmp
mov
sbb
movsb
mov
dec
inc
mov
sbb
mov
cmp
addr16
and
sbb
mov
pop
push
or
inc
ret
pushf
pop
ret
mov
mov
shl
movsb
mov
sbb
cmp
or
pop
push
inc
mov
cmp
mov
inc
cmp
adc
pop
hlt
sub
fildll
add
movsl
xlat
stc
or
jne
cmp
sbb
call
scas
xor
cli
stc
xchg
xchg
adc
jne
lret
movsb
jmp
lods
movsl
movsb
int
jne
or
inc
push
jae
cmpsl
jnp
int
or
jnp
ja
lods
xchg
fcompl
fs
sbb
leave
and
testl
mov
addr16
pusha
fidivrl
lods
and
sub
les
xchg
pop
lahf
insl
mov
jmp
js
xchg
loope
and
nop
xchg
loopne
popa
push
sub
daa
movsb
and
mov
aad
into
jle
jle
dec
imul
fcomps
pushf
push
push
push
pop
jmp
pop
jecxz
mov
inc
ficomps
das
shlb
xchg
jg
out
mov
sahf
mov
cs
int3
out
xor
xchg
xchg
ss
pop
pop
cmp
int
jns
mov
out
xchg
or
aam
cltd
or
or
jp
add
mov
jbe
dec
clc
fldcw
xor
mov
scas
dec
xchg
mov
inc
jb
dec
or
dec
xchg
xorl
rclb
and
cmp
fstps
jmp
out
std
xchg
pop
lret
or
cmp
insl
ljmp
js
pop
sub
dec
ss
xor
imul
sub
jp
dec
push
mov
in
sahf
lahf
cmpsl
cs
dec
cltd
addb
mov
or
loopne
icebp
hlt
arpl
and
or
mov
xchg
lods
aas
push
or
loope
dec
xor
test
mov
jmp
hlt
push
cmpsl
test
std
fildll
xchg
pushf
mov
les
sbb
popa
aad
popf
lret
addr16
add
stos
insl
cmp
das
das
mov
cmpsb
or
mov
cmp
pop
ds
hlt
fcmovnbe
dec
test
dec
cld
pushf
pop
cmpsb
lea
xchg
add
mov
adc
fs
repz
stc
push
sbb
std
or
adc
push
in
mov
adc
lret
push
inc
stc
pop
mov
pop
cmpsb
out
or
lret
mov
jnp
fstp
pop
je
jnp
pop
jb
mov
pop
xchg
test
adc
xchg
add
loopne
push
pop
rcrb
sub
inc
ds
mov
out
outsb
pop
add
mov
mov
pop
xor
sub
icebp
arpl
inc
dec
xor
or
cmp
or
and
movsl
mov
ja
and
hlt
popa
pop
push
loope
mov
add
lock
scas
jo
in
mov
lret
and
cli
push
jge
lcall
jno
cmp
in
adc
lock
xor
push
inc
add
loop
nop
xchg
ss
inc
cmp
cmp
mov
punpcklwd
movsl
xchg
inc
or
dec
loopne
sti
xchg
pop
scas
test
push
lahf
add
jbe,pn
mov
xor
push
and
xchg
std
cmp
xor
dec
out
xor
les
push
int
movl
iret
push
loopne
dec
pop
ret
mov
jp
inc
pop
mov
mov
mov
gs
pop
xor
xlat
scas
and
shlb
jbe
add
cmpsl
and
mov
cmpsl
pop
dec
push
add
mov
pop
xchg
cmc
inc
xor
shlb
add
mov
xor
imul
adc
push
repnz
xchg
daa
in
dec
stos
addr16
adc
xchg
out
imul
stc
je
mov
mov
sub
lock
fmull
add
dec
xchg
mov
aas
call
cmp
popf
ja
aam
inc
xchg
rcrl
mov
cld
dec
cltd
in
inc
popa
shlb
jp
or
aas
sbb
stos
mov
fnsave
outsl
xchg
push
xor
fnstsw
jno
call
and
jno
xchg
lods
xchg
jl
inc
adc
mov
sbb
out
out
cmp
pop
inc
xchg
arpl
cmpsb
pop
shr
adc
cwtl
out
cltd
aad
fstp
mov
dec
adc
cmp
sub
and
repnz
sub
into
in
jnp
sarl
xchg
daa
add
inc
xchg
loop
dec
jbe
mov
cmc
cli
mov
int
stos
pop
lcall
jle
add
int3
mov
loopne
test
fcoml
das
inc
es
adc
inc
fbld
and
dec
scas
sbb
xchg
lret
jae
fwait
mov
push
sub
ss
mov
stc
jns
icebp
inc
pop
adc
cmpsl
and
mov
or
repnz
ja
inc
cmp
xchg
mov
fwait
rolb
arpl
scas
lds
shlb
xchg
lret
scas
divl
mov
and
maskmovq
divl
lock
jne
rcr
divb
loopne
jg
ror
popf
roll
test
stos
pop
sub
jae
or
jbe
and
data16
or
test
push
jbe
inc
or
idivl
push
mov
sbb
cmp
cmpsl
and
es
outsb
pop
sahf
add
dec
negl
add
jb
cwtl
xchg
sbb
and
ss
xchg
mov
xchg
inc
pop
push
xor
jl
loope
lret
xchg
sbb
cwtl
clc
fsubrl
popa
test
insl
in
pop
inc
rcr
data16
test
lods
out
sti
mov
jns
jl
std
stc
push
adc
fisttps
sbb
pusha
cmp
pop
fildll
push
mov
xor
das
push
mov
idivl
js
jae
push
sub
sbb
pop
mov
popa
daa
adc
cmpsl
add
or
sbb
xchg
xchg
mov
xchg
dec
and
push
clc
push
fstp
mov
les
pop
cli
cmp
mov
loopne
fs
inc
cmp
jg
ds
imull
data16
cli
push
or
stc
cmp
test
dec
mov
lods
inc
dec
push
int3
sbb
jae
pop
sub
lahf
jl
xchg
loope
push
seta
sub
mov
xchg
push
call
in
inc
inc
mov
enter
imul
or
jb
leave
cli
inc
or
add
bnd
pop
int
and
aad
ret
cmp
pop
cmpsb
inc
addr16
pusha
and
push
es
cld
lock
lret
insb
popf
test
dec
xchg
repnz
test
or
in
jl
and
outsl
mov
inc
push
or
lea
add
repz
int
ja
outsb
mov
pop
gs
mov
repnz
pusha
jbe
scas
leave
faddl
repnz
sub
pop
out
mov
loop
mov
loope
pop
stos
lret
inc
je
aam
sbb
fimuls
ljmp
mov
sarb
ret
psubusw
pop
scas
sbb
out
adcb
loope
add
xchg
dec
in
sub
xchg
add
lock
jge
jbe
or
push
es
int3
cmp
jns
fistl
inc
push
xchg
sub
lret
mov
xchg
scas
xor
stos
mov
pop
push
xchg
pop
incb
pop
mov
mov
jp
rcl
xchg
outsb
out
xchg
movaps
and
or
sub
test
pop
mov
mov
adcl
fwait
rorl
dec
fcoms
or
sahf
mov
ljmp
insl
xchg
xchg
hlt
pusha
pusha
xor
xor
adc
jg
push
xor
mov
ja
cmpsl
faddl
cmpsb
lea
cld
or
push
pop
rcrl
mov
push
jmp
mov
popf
mov
cld
insb
rol
xchg
jns
xchg
cltd
nop
mov
jge
adc
cwtl
insl
adc
mov
adc
hlt
cmpsl
daa
roll
in
sub
jnp
repnz
adcl
sub
and
cmp
jnp
popa
jge
or
inc
push
icebp
adc
adc
das
cmpl
imul
pop
mov
pop
fcomi
stc
fistl
push
xchg
or
call
daa
test
jbe
mov
in
xchg
js
adc
mov
push
add
mov
stc
mov
lods
fists
xor
dec
leave
sarl
inc
jmp
jle
add
xor
mov
hlt
xchg
xchg
adc
xor
xchg
add
rorb
orb
jmp
mov
xchg
inc
push
mov
loop
cltd
xchg
pop
jne
mov
fstps
rcl
lret
and
fiadds
mov
scas
mov
add
ja
push
sub
fwait
out
push
das
notl
ret
icebp
cli
aas
and
xor
sub
into
cmp
cmpsl
dec
movsb
pop
test
ds
push
fimull
mov
ret
mov
inc
ljmp
daa
lret
das
popf
push
insb
or
lock
imul
mov
mov
or
push
andb
jmp
shlb
pop
pop
pop
and
testb
add
arpl
fstl
xchg
mov
mov
fnstsw
sahf
mov
cmp
or
out
cmp
sub
lds
jae
or
jmp
dec
sbb
xchg
leave
inc
and
mov
xor
jecxz
mov
cmp
aas
or
out
cmp
jb
lret
fld
push
aaa
inc
mov
subl
pop
lods
hlt
push
orl
out
or
mov
or
and
jnp
movl
pop
xchg
push
dec
push
jle
popf
mov
scas
imul
and
jne
icebp
adc
mov
add
inc
inc
push
mov
xchg
pop
aad
sub
pop
push
int3
sub
sub
mov
mov
sbbl
fiaddl
jne
fnstcw
test
orb
nop
int3
negb
lcall
jb
out
adc
popf
lcall
enter
sub
mov
adc
outsl
aam
daa
xor
push
testl
fsubrs
dec
mov
push
inc
or
mov
test
ja
repnz
lahf
xchg
push
mov
mov
aad
lret
mov
ds
sarb
add
push
xchg
adc
sub
cmp
repnz
iret
mov
fildll
call
xor
push
daa
scas
cmp
test
cmpsb
or
jle
and
imul
stc
push
fisttpl
dec
cmpsb
inc
pop
add
cmpb
cmp
sbb
fcompl
divl
pop
inc
dec
pop
jns
popf
push
jno
xchg
xor
imul
sahf
or
int3
sub
mov
arpl
lret
adc
jno
mov
inc
mov
mov
and
push
sbb
data16
or
mov
pop
push
ss
aas
push
inc
mov
fcmovbe
add
popf
push
bound
sub
lock
orb
fbld
sub
js
mov
sahf
imul
mov
sub
das
les
cwtl
mov
mov
int3
xchg
pop
jno
cmpb
cltd
lods
out
out
mov
popa
push
or
ss
loope
es
les
ret
pop
adc
jle
inc
jae
fisttpl
add
add
or
xor
cmp
push
into
adc
sbb
sbb
inc
jmp
cmpb
subl
mov
mov
cmp
add
popf
xchg
int3
addr16
jecxz
push
rcrb
dec
xchg
jp
shll
xor
push
es
add
dec
mov
loopne
gs
shl
dec
add
es
xchg
sbb
scas
add
push
jnp
repnz
test
xor
push
neg
scas
xorl
pushf
aas
jns
loop
sbbl
insl
ss
pop
or
push
sti
fnsave
nop
push
push
xor
xor
and
lds
mov
push
dec
inc
sbb
sbb
cs
clc
data16
das
hlt
mov
popf
std
adc
pop
psubq
stos
pinsrw
aad
aas
sbb
data16
and
jg
hlt
dec
inc
xor
sbb
xchg
jp
xor
jmp
lret
or
out
jae
jno
sbb
jo
rclb
or
movsb
mov
xchg
and
clc
std
negb
sbb
cs
aaa
mov
test
lahf
add
mov
in
add
or
inc
int
shll
mov
cltd
sahf
ret
jnp
mov
xchg
mov
rorb
cmp
add
or
and
andl
inc
sub
addl
repz
int3
rcr
fstps
add
jle
sarl
shl
sub
mov
mov
lahf
imul
es
incb
js
pop
push
scas
mov
adc
popa
movsl
cmp
mov
aaa
imull
inc
cld
add
sub
xchg
sub
sbb
xor
aaa
ja
lods
popf
mov
stos
aam
mov
push
xor
pop
cmp
xorl
lea
and
fcompl
push
sti
push
int3
fcmovb
sbb
jl
lods
mov
adc
mov
jo
add
cltd
in
in
or
add
outsl
dec
xor
xchg
sub
sbb
iret
pop
add
mov
testl
sahf
test
dec
dec
test
mov
push
xchg
das
ret
es
hlt
and
add
jecxz
fwait
fs
pop
cmp
or
dec
leave
mov
sbb
mov
jl
pushf
testb
pop
adc
inc
shlb
jg
xor
add
lcall
and
lret
fs
call
sbb
fcoms
jge
test
out
and
les
mov
sub
rclb
shr
test
js
mov
sbb
cmp
mov
lods
mov
bound
fidivl
cmc
or
std
push
insb
shlb
and
pop
pop
mov
popa
cmpsb
test
aad
push
jmp
fistpl
repz
ret
mov
xchg
adc
mov
sbb
push
push
fistps
jns
xchg
popa
sub
lret
push
cmpsb
loop
adcl
pop
xor
cli
mov
jl
inc
orl
pop
stos
dec
mov
outsl
xchg
je
cmp
outsb
mov
lods
stos
mov
xor
pop
jl
mov
and
mov
sbb
lods
stos
out
repnz
cmpsl
pop
test
fistl
adc
dec
pushf
jmp
arpl
lods
lret
ljmp
and
daa
ljmp
mov
ljmp
cmp
das
push
movsl
mov
mov
sub
adc
sbb
stos
or
cli
repnz
xchg
xchg
js
rcll
roll
pop
push
xorb
jns
inc
or
and
mov
cmp
inc
jns
cmpsl
test
cmpsb
in
xor
push
xor
fsubrp
ss
add
call
sbb
inc
shrb
repz
cmc
mov
xchg
push
gs
dec
pop
hlt
shlb
jbe
xchg
push
outsb
mov
cltd
lea
mov
inc
inc
push
fwait
jge
sbb
mov
push
jle
orb
push
js
insl
enter
mov
stos
sub
repnz
iret
sbb
outsb
cs
fs
loope
imul
call
mov
and
mull
je
dec
mov
dec
xor
jp,pt
inc
inc
cmp
adc
fcmovb
in
bound
in
cmp
and
mov
mov
mov
rclb
cmc
inc
cmpb
icebp
out
insb
or
xchg
arpl
fnsave
jne
jl
xchg
mov
lcall
ljmp
cld
dec
xchg
in
xchg
push
mov
adc
mov
adcl
test
lret
inc
or
leave
mov
insl
test
test
sti
inc
les
or
call
mov
ja
cmc
pop
add
jmp
xchg
scas
add
mov
xor
cmp
test
popf
xor
cmpsb
inc
loop
aas
sahf
xchg
mov
sub
push
pop
xchg
pop
loopne
mov
xor
orl
rcrl
add
je
cmp
outsb
ret
push
das
rcl
xor
repz
mov
cmp
mov
mov
jmp
cmpsb
lcall
or
lods
mov
xor
push
lret
jns
cmpsb
ss
fstl
and
or
cmpsl
int
popf
call
stc
imul
loopne
mull
daa
xchg
ret
push
inc
pusha
push
test
inc
mov
jnp
adc
callw
enter
cwtl
das
mov
cwtl
int
and
orb
outsb
push
scas
adc
ja
pusha
sbb
adc
outsb
inc
adc
push
xorl
push
ret
mov
and
mov
and
jle
es
cmp
lahf
gs
repz
and
or
sbb
mov
arpl
mov
faddp
sub
xlat
movsb
loope
pop
cmpsl
aad
sbb
loope
ja
clc
xchg
ret
jecxz
pop
movl
andl
ljmp
test
and
scas
shrb
popa
push
outsl
js
inc
js
out
mov
test
js
aas
jg
sub
cmp
push
jmp
fidivrs
cmp
in
mov
pop
pop
in
jge
lods
dec
pop
ljmp
xor
jp
add
addr16
dec
mov
push
push
shlb
popf
mov
rcrb
mov
mov
sub
mov
js
mov
out
insb
pop
rcll
loope
xchg
fwait
jg
out
push
mov
mov
inc
ljmpw
sub
jle
sbb
mov
insl
in
and
jmp
inc
and
adcl
fsubl
or
aas
and
inc
cmpsb
push
mov
out
push
das
rcll
xchg
dec
andb
lret
call
repz
xor
idivl
stos
pop
insb
jne
pop
neg
mov
add
and
inc
shll
inc
mov
or
out
cmc
push
loop
notb
fs
nop
mov
pusha
xchg
push
hlt
cmc
inc
push
rorb
push
inc
cltd
push
or
adc
jg
add
xor
jg
testl
xchg
inc
loopne
outsl
cmovo
add
scas
stos
inc
dec
add
inc
imul
pop
adc
and
test
popf
fidivs
xchg
adc
out
movsl
in
cmp
dec
add
jecxz
and
popa
adc
jno
and
xor
inc
xchg
lret
and
out
pop
inc
inc
idivl
dec
add
mov
and
add
fistpl
loope
pop
mov
sti
mov
mov
or
cmp
inc
and
mov
scas
pop
pop
xchg
repnz
jo
mov
jne
push
pcmpeqd
mov
cli
aam
and
sahf
xchg
pop
push
sub
pop
call
cltd
dec
xor
lret
cmp
and
cmp
pop
mov
into
fwait
stc
pop
outsb
shll
sbb
fimull
aam
stos
ficompl
cmpsl
les
dec
negl
pusha
xor
push
nop
popa
and
insb
sbb
aam
mov
cmpsl
shrl
jl
cmpsl
mov
gs
mov
jo
dec
adc
je
aaa
repnz
lret
test
mov
cmc
dec
pop
mov
stos
pop
xorb
ds
add
inc
stos
rcrb
inc
sbb
sub
cld
aad
inc
cmp
aad
mov
push
data16
scas
loopne
scas
out
push
mov
addl
sub
cmp
out
dec
jae
imul
sub
mov
shll
push
mov
cli
js
jns
mov
add
add
mov
add
push
fsub
mov
jb
add
push
test
lods
cmp
jne
dec
sbb
clc
sahf
xor
push
dec
popa
scas
aas
lret
lea
shll
xchg
jge
push
inc
out
or
ficoml
xor
push
mov
inc
inc
xrelease
dec
test
sub
cmpsl
pop
cmp
push
clc
frstor
mulb
inc
into
in
and
mov
pusha
cltd
subb
jle
jns
mov
fcom
daa
enter
popa
insb
sbb
mov
mov
mov
adc
and
lock
insl
push
xor
inc
clc
add
or
xlat
or
cmc
imul
adc
int3
cmp
or
out
add
xchg
sbb
loopne
int3
aas
jne
ror
loopne
sbb
subb
sub
stc
add
jbe
or
in
or
add
inc
xor
rcr
fcomi
cmp
mov
lret
pop
mov
push
out
and
push
aam
cmpsb
mov
sub
xor
sub
pop
sbb
and
inc
xchg
sbb
inc
inc
jno
inc
push
xchg
mov
xor
add
sarb
pop
out
lahf
xlat
insb
in
outsl
loop
jg
test
add
mov
dec
addr16
adc
out
out
push
dec
stos
or
push
ljmp
pop
jg
out
lods
xchg
mov
mov
test
push
test
jle
out
xchg
scas
es
mov
adc
add
iret
das
inc
sbb
out
adc
sarb
arpl
das
out
mov
imul
xchg
adc
cld
pop
ret
repz
pop
ljmp
xor
outsl
mov
rcll
stos
inc
adc
push
cmp
xor
into
push
sbb
movl
mov
aam
xor
add
notb
cli
cmp
lea
mov
roll
rcrl
sbb
ret
pop
nop
enter
inc
add
fsubl
xchg
decl
mov
int3
push
mov
insb
fsubp
mov
inc
push
xor
stos
mov
pop
cmpl
int
pusha
pop
shll
divl
mov
jp
gs
dec
inc
add
jae
jp
add
in
in
xchg
mov
sbb
cltd
mov
cmp
sbb
mov
daa
mov
add
out
or
arpl
xlat
cwtl
repnz
in
or
je
shr
jne
mov
and
rep
setp
dec
repz
cs
aaa
mov
xor
iret
sbb
fwait
jno
add
fsubr
daa
mov
stos
xchg
test
jb
adc
aas
jbe
mov
testb
mov
cmp
outsb
movsb
jecxz
popa
inc
mov
lahf
sub
pop
mov
sbb
and
cmp
push
mov
aad
in
dec
lods
out
leave
int
dec
jp
cld
sbb
inc
das
pop
sbb
mov
dec
mov
aaa
stos
mov
iret
insb
repz
imul
xor
sub
add
in
fsubs
lock
out
pop
pop
test
add
js
aam
lods
outsl
or
xchg
in
pusha
xor
nop
jb
leave
lret
mov
out
pop
or
rorb
mov
push
or
jl
out
jl
in
adc
fbstp
xchg
in
mov
psubsb
sbbl
out
iret
test
jl
fistl
push
sbb
xchg
scas
repz
std
pop
sub
push
nop
adc
mov
pop
pop
add
xorl
sbb
stos
mov
xchg
push
or
insl
in
icebp
lahf
gs
leave
lea
ret
gs
dec
push
push
adc
xchg
cmp
sar
mov
xlat
insb
sbb
push
insl
aam
pop
add
mov
sbb
cmp
jecxz
jb
and
imul
mov
dec
mov
cmp
pusha
mov
mov
out
mov
int3
lods
outsl
mov
adc
xlat
fucomi
shrb
call
cmp
out
mov
dec
mov
adc
loope
cmpsl
aam
hlt
enter
dec
push
jns
xor
scas
outsb
cltd
movsl
jno
mov
dec
push
or
das
xchg
lock
mov
or
lahf
leave
negb
cltd
or
lret
adc
insl
int3
xchg
arpl
or
jl
scas
cld
push
sbb
pop
xchg
dec
bound
push
call
mov
repz
out
xchg
int3
adc
dec
andl
push
jge
fcom
sti
inc
jecxz
pop
inc
push
int
xorl
dec
adc
pusha
sub
pop
cld
ljmp
loope
and
cli
xor
ret
mov
jnp
imul
gs
mov
imul
bswap
js
fdivp
adc
adc
adc
pop
push
fidivl
rcrl
outsb
sti
or
lahf
mov
adc
jmp
push
pop
test
fnstenv
out
jne
insb
outsb
fisubs
stos
bound
loopne
add
mov
sti
mov
jge
mov
mov
adc
addl
test
stos
pop
dec
inc
ljmp
or
popl
pop
add
inc
aad
stc
aas
mov
mov
adcb
es
xor
jb
jmp
insb
adc
jbe
push
pop
push
lcall
cmpsb
or
or
jbe
mov
out
mov
push
add
pushf
jns
add
repnz
addb
arpl
or
outsb
xchg
sub
jl
inc
pop
inc
pop
adc
cli
xchg
dec
or
or
test
push
je
sbb
pusha
inc
imul
dec
ja
movsb
adc
and
jne
sbb
adc
xor
mov
mov
aam
ljmp
mov
mov
fmuls
or
adc
and
sub
iret
dec
pop
shr
in
xor
inc
lcall
inc
imul
out
nop
xchg
dec
popl
lods
or
repz
jmp
fsubrs
daa
js
mov
jg
popa
test
inc
inc
push
mov
repz
imul
and
int
and
pop
push
xor
xchg
mov
xor
inc
jbe
push
sub
xchg
adc
mov
jp
int
in
sub
inc
add
mov
out
lret
mov
mov
cld
lds
arpl
icebp
pushf
icebp
pushf
or
mov
repz
pushf
pusha
jecxz
jns
sbb
sub
shll
or
nop
push
pop
jle
adc
jg
stc
cmpl
sbb
jp
xor
movsl
xchg
push
mov
daa
ljmp
push
pop
cmp
mov
clc
cmc
mov
sbb
mov
cmp
je
rcrb
or
lret
gs
cmpsl
jg
popf
jbe
movsl
addl
les
cmc
xchg
lods
das
cmp
aad
jecxz
enter
add
arpl
xchg
xor
fwait
loopne
int
push
leave
shlb
in
xlat
test
jns
mov
ds
jbe
push
stc
pop
add
or
test
sub
jbe
iret
inc
sub
xlat
mul
popf
mov
out
add
iret
int3
push
mov
push
gs
jb
dec
cmp
sub
cmp
adc
mov
pop
stos
lcall
test
sbb
outsb
lds
clc
and
outsl
imul
cmp
xor
sub
xor
rcl
xchg
mov
and
in
lret
jno
call
fcmove
dec
mov
dec
xchg
inc
mov
push
add
in
push
push
les
adc
add
pop
loop
ret
mov
cmc
aas
enter
notl
adc
fwait
add
xor
movsl
mov
or
sub
sbb
mov
fldl
leave
movsl
rorl
sarb
aaa
rcr
test
icebp
add
fs
ljmp
cs
xor
cwtl
sub
jbe
mov
mov
xchg
mov
jp
and
fs
ljmp
ret
xchg
stc
push
pushl
sbb
push
lods
pop
cmp
jns
sbb
mov
rolb
fdivrs
mov
loopne
cwtl
inc
cmpsl
clc
out
or
js
out
xchg
in
mov
jno
dec
xchg
sbb
daa
addr16
push
sbb
fwait
add
ss
sub
or
int3
subb
aas
addb
mov
fsubrs
daa
inc
xchg
iret
and
es
xor
inc
pop
scas
cmp
js
push
loope
fsubp
aaa
nop
cmp
hlt
sub
cmpsb
popa
mov
push
jno
mov
xor
sahf
shlb
adc
outsb
cmpsb
lret
or
sti
mov
hlt
shl
or
dec
pop
mov
mov
adc
pop
jle
sahf
mov
dec
lret
fnstsw
in
xor
test
dec
lds
incl
jmp
popf
push
mov
mov
iret
xor
or
sbb
daa
add
fisttpl
rcrb
test
mov
sarb
subb
xchg
shll
xor
fdivl
xchg
mov
mov
sbb
fsubrp
lock
arpl
push
add
mov
xchg
sub
mov
daa
in
faddl
adc
mov
dec
repnz
mov
jle
mov
inc
fistpll
outsb
lret
and
clc
popf
xchg
dec
jno
lahf
xchg
and
ds
cwtl
scas
pop
mov
mov
jg
imul
ljmp
and
pop
push
popf
es
in
hlt
cmp
mov
dec
rcrb
jns
shll
mov
adc
in
fistpll
iret
mov
repz
pop
pop
add
mov
jnp
fdivrs
and
jl
cmp
iret
das
ret
inc
lahf
cmp
in
add
icebp
and
pusha
andb
inc
fstps
inc
inc
data16
nop
cwtl
adc
notl
inc
xor
mov
dec
cmpb
aas
lods
insl
sbb
or
cmc
push
or
xchg
fistpll
aaa
cmp
cltd
and
repnz
ja
mov
das
add
in
sahf
lods
leave
int
dec
sbb
mov
sarl
xchg
scas
jb
mov
loopne
orl
jmp
xor
sbb
fimull
cmp
mov
push
pop
or
inc
cmp
adcl
pushf
test
call
xchg
stc
sub
sbb
cs
scas
and
movl
and
ror
mov
push
lahf
clc
mov
xor
mov
ficomps
lret
jne
psubusb
popa
add
xor
dec
and
cmpsl
xchg
xchg
push
or
cli
sbb
into
cld
xor
movsb
xchg
nop
cltd
adc
int3
pushf
xor
push
jle
mov
push
inc
mov
imul
xor
mov
mov
stos
test
sub
mov
rcrl
sbb
inc
sbb
adc
sbb
push
fldt
xchg
xchg
repz
jmp
cmp
pop
mov
in
popa
std
push
or
xchg
jbe,pn
ja
cmp
mov
rclb
add
scas
cmc
fsub
mov
sbb
stc
push
mov
mov
or
sub
outsl
mov
out
test
sar
dec
in
dec
in
insl
mov
mov
mov
sbb
out
cmp
and
fs
fdiv
push
lahf
jmp
ret
push
lock
add
mov
sbbb
adc
into
inc
les
scas
cmp
add
insl
enter
loope
inc
lock
inc
sbb
icebp
imul
push
xchg
xorl
enter
jmp
stos
ja
fdivr
scas
sbbl
out
jmp
sub
cmpsl
sub
nop
arpl
leave
stc
xlat
xchg
pop
mov
movsl
add
aas
and
inc
push
repnz
pop
xchg
jns
xchg
jmp
fadd
imul
or
cmpsl
cs
out
enter
push
inc
cmpsb
lret
xchg
or
stc
mov
sti
xchg
das
mov
aas
pushl
and
and
push
mov
outsb
mov
xchg
mov
lea
pusha
rolb
lret
inc
repnz
cwtl
les
adc
mov
andb
imul
out
xor
xorl
mov
stos
sbb
das
add
adc
mov
je
decb
subb
popf
aad
push
into
int3
mov
inc
xor
in
or
and
cmp
xor
movsl
lret
sbb
push
xchg
test
add
sub
and
xor
js
out
roll
xorl
sbb
testb
test
ds
repz
rcrb
dec
inc
sbb
int3
gs
out
mov
imul
add
outsb
in
inc
loop
or
lret
sbb
sbb
dec
pop
and
mov
pushf
imul
sub
pop
ret
mov
fistl
fld
jecxz
or
bound
xorb
mov
scas
sbb
imul
xor
adc
fs
popl
push
pop
mov
loop
repnz
and
out
fisubs
xchg
fs
das
call
popf
cmp
mov
loopne
adc
adc
cmp
mov
nop
and
test
xchg
fsubrl
jp
mov
int
mov
push
cmpsl
cmc
mov
sbb
push
icebp
xor
or
sbb
pusha
cs
fistpl
out
mov
lret
scas
add
loopne
fsubs
jecxz
xor
add
mov
faddp
xchg
jg
es
iret
mov
cli
or
movsb
pop
loope,pt
mov
scas
fildll
dec
rcll
jne
pop
adc
ja
sbbl
mov
sbb
adc
cmc
push
add
add
sbb
mov
jbe
fsubs
push
notl
jbe
lds
out
sahf
mov
pop
lock
out
add
add
add
adc
inc
jae
cld
mov
stc
lret
xchg
loope
out
sar
in
popf
push
gs
ret
dec
fildl
out
dec
or
mov
fimuls
cmp
push
xor
fwait
xchg
iret
sbb
out
adc
lods
out
fisubrl
sahf
pusha
jbe
jae
popf
cmc
fs
aas
jo
out
aas
in
mov
xchg
stos
push
je
push
xchg
adc
sub
cmp
mov
inc
pushf
pop
xchg
push
mov
loopne
jle
loopne
fisubs
stos
in
shrb
jmp
xchg
lea
rclb
insl
pop
push
mov
mov
pop
push
ret
dec
mov
in
cmp
add
pop
mov
mov
and
shl
mov
dec
and
xor
or
mov
sub
fisubrs
add
and
sub
aaa
mov
sbb
jae
xchg
cmp
out
or
and
inc
push
leave
orb
test
adc
fwait
shll
dec
jbe
sbbl
repz
dec
ja
mov
jns
stos
adc
adc
inc
mov
inc
ficomps
sti
in
lret
aas
lret
mov
xchg
test
or
sub
inc
jne
rcl
mov
push
cmpsb
pop
fs
mov
jbe
and
dec
rcl
sub
fisttps
xor
scas
sbb
adc
movsl
mov
mov
jae
lcall
mov
pop
or
das
lret
loop
ret
jmp
or
jmp
xchg
loopne
aas
push
sub
sbb
jle
mov
cmp
push
adc
popf
fisubs
sahf
enter
pop
fs
mov
pop
mull
in
test
pop
call
not
sbb
mov
dec
mov
lock
mov
lahf
enter
push
sbb
adc
xchg
jge
fstpt
inc
sarl
adc
jle
or
rorb
xchg
stos
adc
dec
mov
jecxz
add
sub
inc
xor
add
loope
cmpsl
cltd
xor
mov
push
cmc
fnstcw
mov
cmpsl
mov
jp
sbbb
mov
out
fs
rol
adc
sahf
ret
mov
loopne
lret
shll
ret
test
lret
add
sti
arpl
inc
mov
push
and
out
inc
mov
add
test
gs
test
adc
pop
pop
cmp
loop
push
loopne
pusha
add
add
sarl
fcoml
xor
aaa
adc
inc
sub
les
lret
cmp
dec
or
mov
adc
orl
mov
mov
or
fld
les
adc
inc
imul
sub
inc
out
stc
dec
jg
xchg
lods
or
pop
inc
mov
scas
push
lods
movsl
jns
lret
loope
loope
addr16
sarl
cmp
mov
stos
test
cltd
sti
mov
mov
dec
mov
sbb
data16
push
inc
pop
inc
add
mov
cmp
jl
cmpsb
pop
test
xor
sbb
xor
fmuls
cmp
inc
mov
pop
stc
xor
xlat
mov
insl
ds
mov
imul
push
jno
mov
js
push
andl
das
in
ret
and
xchg
dec
test
cltd
testb
push
push
xor
mov
push
gs
sahf
xor
mov
or
iret
dec
xchg
sub
sub
or
fisttpll
int3
fidivrs
pop
mov
out
add
cmp
mov
adc
je
jge
mov
pusha
mov
sbb
arpl
cmp
add
lea
and
or
leave
mov
add
mov
scas
out
insb
push
out
insl
iret
dec
cmp
mov
push
or
xchg
mov
mov
and
adc
cmp
dec
sbb
jb
lods
hlt
aas
xor
mov
out
mov
fwait
cwtl
lods
stc
jne
mov
ja
mov
jle
push
sbb
sbb
aad
notl
sub
add
sbb
mov
mov
add
inc
mov
fisubrl
mov
out
xlat
inc
ds
sbb
lods
fcomps
inc
ficoml
cmpsl
cli
xchg
jb
mov
out
adc
out
daa
addr16
or
icebp
sbb
int
mov
scas
pop
leave
cmpsb
sti
cmp
daa
sub
gs
adc
xchg
xor
not
xor
cwtl
not
pop
data16
sbb
dec
xor
inc
test
and
sub
lock
cmp
bnd
jmp
inc
jmp
pop
cmp
cmp
add
fldl
sbb
sbb
daa
sbb
xchg
aas
dec
in
add
clc
mov
addr16
push
out
stc
les
mov
add
test
lahf
frstor
xchg
push
mov
xor
pop
mov
cmp
jle
sub
mov
jl
or
dec
add
cmp
inc
int3
cs
ret
outsl
xchg
repz
push
cld
and
push
lods
stc
mov
xchg
dec
sub
mov
pusha
fcompl
insl
dec
mov
add
adc
das
cmpsb
not
addr16
aad
iret
push
xor
xor
jle
inc
dec
lahf
push
bound
dec
cmp
cs
into
repnz
lea
insl
mov
dec
mov
idivb
fdivl
stos
pushf
lds
ss
gs
push
xchg
stos
push
inc
outsl
js
jp
aad
lea
push
and
dec
xor
cmc
and
inc
jg
jo
pop
lahf
or
xlat
jo
int
adc
mov
aam
mov
les
aas
data16
jmp
mov
xchg
xchg
pop
gs
popf
mov
adc
ror
movsl
sar
dec
mov
sti
jbe
xchg
into
adc
mov
mov
aad
sbb
gs
out
xor
pop
xchg
push
or
mov
mov
stos
push
dec
insl
ret
lahf
and
mov
adc
and
cmp
adc
pop
mov
adc
add
dec
fimuls
mov
add
jl
mov
pop
mov
mov
repnz
fidivs
lcall
xchg
sahf
rcr
xor
dec
mov
jno
adc
insb
xor
test
ds
rcrb
insl
and
fisubl
xor
shl
jae
repz
test
ss
and
jne
loopne
popf
xchg
mov
loop
aad
sbb
std
cmc
lea
mov
adc
cwtl
out
dec
icebp
mov
lea
adc
and
das
ficomps
mov
clc
push
pop
cmpsl
inc
and
pop
or
xlat
movsl
mov
in
cmpsb
clc
and
repz
adcb
not
sub
inc
ret
shlb
dec
add
or
arpl
mov
adc
fnstsw
shrb
add
add
int
lahf
cmp
pop
std
mov
xchg
jae
pop
add
pop
sub
in
sbb
or
aam
fnclex
xchg
xor
mov
mov
inc
pop
rclb
or
sub
push
xor
sahf
xchg
jno
cld
inc
inc
mov
jbe
cmpl
ret
jl
sub
pop
in
ret
add
stc
aaa
iret
ror
mov
xchg
xchg
inc
mov
cmp
dec
fcomps
cmpb
mov
iret
dec
mov
inc
scas
cld
scas
cmp
test
xlat
xchg
ret
rclb
sarl
stos
or
fnstcw
mov
pop
out
xlat
push
bnd
inc
wbinvd
inc
lret
jnp
sahf
and
add
out
mov
pop
lret
out
adc
adc
inc
movsl
cmc
xor
addr16
aaa
loopne
cmp
inc
rclb
and
xchg
leave
mov
je
adc
cmpl
xchg
lods
add
jp
fwait
push
inc
inc
and
push
cmp
push
mov
stos
leave
mov
xchg
loopne
adc
cs
sub
test
mov
inc
out
jmp
jnp
mov
je
aad
mov
cmp
dec
jae
mov
or
test
xchg
cs
movaps
jle
repnz
mov
sbb
jb
mov
fisttpl
pop
pop
push
fisubrs
in
pusha
push
fstps
push
rolb
push
cmp
leave
add
xchg
into
dec
mov
sbb
cmc
cmpl
ds
jo
imul
lods
aaa
pop
xchg
test
mov
push
sub
push
sbb
rorl
hlt
inc
cmpsl
hlt
jl
push
and
cmp
pop
jmp
les
add
testb
sbb
lcall
fprem
xchg
cltd
and
in
mov
andb
push
mov
inc
fisttpll
nop
fs
mov
icebp
and
dec
cmpsb
dec
add
jp
or
std
xor
arpl
jl
push
cmp
sub
jmp
push
js
push
ret
cltd
call
xorl
pop
mov
xor
hlt
mov
xor
idivl
xor
push
add
mulb
push
testb
jo
xor
dec
das
ret
mov
or
ret
sbb
imul
fwait
push
mov
and
jg
or
push
xchg
push
imul
xlat
stc
push
lea
cmp
xchg
ja
popa
call
pop
insb
mov
int3
jmp
sub
push
test
insl
push
imul
cltd
inc
fwait
push
std
mull
push
xchg
pop
pop
rcrb
pop
adc
pop
je
fucomip
or
ret
xchg
push
push
dec
cmp
or
push
mov
popf
out
jne
or
adcb
scas
mov
mov
orb
in
and
inc
addb
xchg
loope
xchg
dec
scas
bound
ret
movsb
and
mov
push
incl
mov
dec
jnp
push
add
and
jmp
adc
cmp
rorl
cwtl
stos
popf
jecxz
cmp
loopne
xchg
pop
jae
or
sub
int
lahf
add
shrb
mov
pop
xor
notb
mov
and
pop
insb
sub
jo
cli
dec
jecxz
dec
cmp
xlat
push
push
pop
mov
jno
cld
pushf
jbe
push
adc
int3
insb
push
xor
jne
test
cs
call
inc
dec
pop
lock
push
mov
mov
adc
fmuls
sbb
xchg
mov
call
or
xchg
test
popa
xlat
adc
aad
mov
test
test
cmpsb
lods
ret
movsl
imul
inc
pop
jge
pop
push
cmp
fldl
pop
jns
and
cmp
inc
dec
or
adc
cmpb
pushf
dec
inc
jge
repz
std
push
xchg
cmpsb
cmp
mov
aad
nop
push
adc
scas
sbb
mov
add
jmp
push
jg
jp
fwait
jo
adc
test
out
jmp
adc
loopne
mov
popa
jno
fidivrs
sub
sub
lcall
push
jp
test
sbb
repnz
scas
shlb
push
sub
inc
xchg
jne
pop
dec
push
adc
shrb
mov
and
ljmp
js
imul
adc
cli
xor
mov
outsb
imul
rorl
xchg
out
dec
jle
and
cmp
push
and
cmp
cmc
popa
push
nop
fwait
or
mov
jmp
sti
std
out
mov
out
mov
and
push
pop
rclb
punpckhbw
adc
movsb
xor
js
test
push
pop
sub
xor
jg
pushl
out
jb
jnp
nop
ret
test
push
fnstenv
add
repnz
pop
cmp
cmp
insw
inc
push
outsl
xchg
push
push
dec
movsl
push
push
xor
cmp
pop
js
ja
loop
push
mov
int
jo
jne
add
mov
lahf
pop
rolb
fldt
dec
divl
inc
fistpl
es
mov
sbb
cmp
adc
test
mov
add
into
sahf
insb
mov
push
ljmp
sarl
push
test
mov
mov
sub
adc
or
int3
sub
and
fcoml
leave
jg
jecxz
inc
aad
loopne
pop
data16
in
jmp
jo
pop
mov
pop
outsl
push
inc
sbb
aam
dec
inc
rol
lock
inc
and
pusha
dec
out
jb
cwtl
dec
xchg
imul
daa
repz
push
xchg
add
nop
add
rclb
mov
jbe
inc
inc
mov
pop
negb
data16
rol
sub
and
cmp
xor
bnd
ficompl
or
out
stos
fmull
push
add
jno
mov
jno
add
push
xchg
push
sub
jl
je
jecxz
popa
repz
sbb
pop
addb
sbb
iret
cltd
neg
mov
ja
lret
out
xchg
arpl
test
mov
mov
mov
shrb
lcall
loopne
movsl
xlat
and
and
inc
sub
jmp
in
xor
ljmp
sti
xchg
in
mov
sbb
cld
pop
push
push
shll
mov
mov
ljmp
gs
sbb
fisubl
adcb
aaa
iret
mov
movsb
and
adc
mov
mov
xchg
leave
mov
out
sbb
lahf
sbb
sbb
into
mov
lahf
out
ja
mov
mov
in
sub
push
cmp
push
shrl
test
xlat
cltd
in
sbb
std
iret
outsl
aaa
pop
sbb
enter
jl
cmp
bound
packsswb
or
mov
popa
fidivl
outsb
jge
pop
or
orb
xor
int3
xchg
jl
add
mov
mov
push
imul
inc
out
jo
rorl
fldt
aam
pop
pop
and
shll
push
repz
pusha
pushf
mov
or
mov
je
mov
xchg
out
in
fs
cmp
inc
push
lret
pop
sbb
push
push
fndisi(8087
push
add
mov
mov
stos
loope
negb
test
and
insl
mov
loop
fimull
pushf
test
push
int
loop
push
fadd
mov
push
loope
mov
and
pop
adc
xchg
push
sbb
fistps
cs
lret
pusha
xchg
or
mov
mov
sub
pop
dec
pop
jp
in
xor
cli
arpl
test
jl
push
push
test
cli
mov
ljmp
xchg
sarl
pop
sbb
mov
sbb
inc
add
les
pop
add
rcrb
jecxz
adc
jmp
inc
xchg
sub
inc
push
mov
add
fldt
stos
and
sbb
inc
inc
add
leave
enter
js
in
leave
sub
pop
add
js
nop
sub
insb
or
push
mov
sub
inc
scas
jmp
xor
dec
lret
xor
adc
sbb
push
mov
shrb
sbb
out
cmp
xchg
fnstenv
out
push
fsubl
mov
mov
inc
imul
mov
out
rcrb
out
push
lds
decb
xchg
test
iret
aam
inc
movl
or
pushf
pop
mov
pop
scas
shlb
dec
lcall
sub
fcomps
and
pop
jb
lea
or
lock
or
test
xchg
xchg
cld
xchg
cmp
cmp
cmp
dec
inc
orb
pop
add
xor
mov
mov
mov
and
xchg
mov
test
ret
pop
call
and
repz
adc
adc
pop
stos
mov
jae
rclb
js
pop
pop
jno
in
cmp
pop
mov
dec
jnp
lock
mov
mov
adc
add
test
sbb
pop
mov
mov
dec
pusha
fisttpll
ds
mov
fistl
fldcw
cmpb
inc
push
inc
push
push
sub
xor
imul
loope
icebp
xchg
shrl
ja
xor
bound
xchg
ds
xor
xor
mov
cmp
fwait
xlat
sbb
daa
in
mov
lret
push
jnp
xchg
sahf
enter
cmc
xchg
repnz
addr16
je
fistpll
lods
cmp
sub
dec
sub
add
or
and
divl
out
mov
dec
pop
outsb
or
push
mov
gs
insl
xchg
xchg
mov
jmp
test
xchg
mov
mov
jns
ss
cmpxchg
cvtpi2ps
jmp
mov
lods
xor
cmp
xor
in
pop
push
xor
rcrb
pop
jge
fsubrs
mov
sar
lret
aaa
movsl
mov
scas
mov
hlt
sbb
scas
cmpsl
mov
push
push
les
cli
rcll
repz
and
addr16
popf
call
repz
xor
dec
and
ret
sbb
push
testl
push
aam
loopne
mov
push
stos
mov
xchg
dec
xor
sub
or
aaa
push
or
shll
mov
adc
pop
movsl
test
jbe
mov
fidivs
mov
bnd
aaa
or
jns
xlat
sbb
insb
mov
jl
aaa
xchg
push
xchg
and
inc
mov
inc
push
push
imul
lret
adcl
lret
enter
popf
mov
cmp
stos
sti
bound
pop
orl
add
sti
pop
jmp
push
push
mov
or
add
test
ljmp
mov
xchg
lcall
gs
xorl
loopne
pop
daa
movsl
jp
mov
clc
test
lret
imul
xor
scas
jp
push
xchg
adc
in
adcl
dec
cmc
ljmp
jnp
inc
loope
push
out
mov
call
jbe
xor
ja
jno
push
dec
fdivrs
int3
xchg
fistps
mov
xor
ret
mov
cmp
in
dec
shlb
ret
gs
mov
push
lea
leave
scas
pop
jno
xor
daa
cmp
subb
dec
mov
mov
push
dec
mov
out
cmp
gs
mov
xor
dec
sarl
pushl
xchg
sub
gs
sub
mov
inc
add
dec
sub
fldcw
mov
mov
adc
cmp
cmp
call
std
xchg
push
sub
call
lahf
gs
xor
add
mov
daa
les
adc
insb
cmpb
pusha
and
mov
cmp
xor
cmpsb
rcrb
cmpsl
xor
loope
je
or
dec
jle
jae
pop
push
mov
mov
add
mov
dec
push
jno
add
enter
lahf
and
sbb
jnp
rclb
incl
or
push
ja
mov
hlt
movsl
push
pushl
lds
adc
aas
xchg
pop
xchg
notl
push
lcall
mov
enter
mov
cs
test
inc
cmp
jecxz
rcrl
repnz
dec
cld
cmpsl
js
push
ret
lret
sub
das
adc
rcrl
pop
add
add
idiv
cmp
and
sti
cmc
mov
hlt
ja
mov
dec
cmp
in
dec
fstpl
incb
loopne
mov
mov
dec
push
push
ficoms
inc
mov
arpl
aaa
test
mov
frstor
lcall
movsb
sahf
jl
jge
pop
je
inc
shl
adc
and
push
scas
outsb
pop
arpl
and
sbb
push
cmc
lret
jle
adc
shrb
sub
outsl
nop
insl
je
in
fdivrl
je
enter
test
ret
mov
cld
hlt
insl
scas
jae
lock
add
push
mov
lcall
insb
sub
xor
daa
push
mov
test
pop
ljmp
stos
sbb
adc
or
xor
mov
jge
outsb
pop
test
hlt
loope
ja
xor
push
sbb
ret
mov
aam
xchg
addb
jnp
jge
out
and
sbb
movsl
jo
add
mov
lds
out
xor
pop
cmp
pop
imul
push
mov
test
leave
inc
out
idivb
add
push
inc
jns
mov
inc
fisubs
ljmp
data16
push
arpl
dec
aad
outsl
leave
or
jp
cmp
shll
add
stos
mov
or
lret
scas
cmp
jmp
jl
cld
sbb
outsl
dec
inc
bswap
add
fnsave
mov
inc
sbb
in
cmp
pop
rep
xor
mov
clc
lret
xor
lods
cvtps2pi
ficompl
inc
es
adc
add
decl
shll
push
fstps
inc
lods
fwait
cmp
aad
inc
pop
ds
mov
add
loopne
pop
adc
cltd
dec
insl
shlb
push
cli
imul
jmp
xor
mov
add
inc
into
pop
mov
rolb
fiaddl
mov
and
mov
and
rcl
and
popa
mov
and
push
push
xchg
jl
cwtl
mov
stos
mov
inc
jnp
rcrl
dec
shrb
insl
push
gs
pop
pop
push
gs
cmc
arpl
repz
rcrl
iret
rcrb
lds
mov
stc
sub
shll
mov
hlt
sbb
push
int3
js
imul
sarb
stos
pop
scas
or
pop
pop
mov
scas
insb
push
inc
sub
cmp
mov
push
pop
xchg
push
lret
nop
mov
mov
mov
push
int
jno
add
mov
dec
addr16
mov
sbbb
insl
or
cld
iret
pop
out
jo
in
popf
inc
xchg
dec
push
jae
sbb
scas
fstpt
sahf
push
ja
inc
aad
sub
xchg
out
std
push
clc
pop
push
jg
dec
test
lods
xor
fs
dec
pushf
cltd
mov
insb
mov
jp
push
add
mov
push
pusha
nop
and
popa
cmp
mov
push
push
mov
dec
inc
xor
dec
ljmp
mov
roll
das
out
adc
sbb
arpl
mov
cmp
inc
jbe
rclb
sbb
loop
js
into
and
mov
leave
xor
mov
loopne
lcall
pop
daa
lock
into
iret
test
jne
jmp
jbe
adcb
mov
dec
adc
pop
mov
xchg
push
push
fmul
xchg
add
add
in
imul
popf
mov
addr16
jns
adc
das
add
stc
call
push
clc
mov
mov
loopne
mov
inc
ljmp
and
mov
movsl
xchg
add
push
flds
mov
test
mov
and
sbb
loop
daa
lods
sbb
lods
psrlq
pusha
hlt
hlt
movsl
out
cs
out
out
pop
and
cmpsl
ficoml
xor
pop
mov
lods
jp
adc
lret
in
gs
lcall
insl
mov
repz
xor
add
les
clc
cmc
sbb
mov
sub
lea
xchg
push
aaa
or
sub
sub
fsubr
pop
mov
and
and
adc
xchg
out
jecxz
xchg
xchg
loopne
lds
pop
push
shlb
lahf
pop
inc
pop
dec
jae
aaa
sbb
push
xchg
dec
xor
xor
push
jg
jbe
mov
sub
jmp
and
rep
adc
push
orb
in
mov
jl
xor
jnp
pop
push
xor
pop
lret
jg
xor
jo
or
dec
repz
out
rol
sarl
mov
popf
in
cmpsl
imul
pop
pop
movsb
cltd
negl
pop
or
pop
das
in
pop
in
mov
and
sub
sbb
jbe
or
jg
push
sub
adcl
xchg
sub
push
xchg
xor
lret
xchg
jns
sarb
xchg
pop
or
push
lods
xchg
or
sub
pop
inc
iret
pop
jne
or
mov
mov
mov
lock
xor
jbe
imul
mov
jl
inc
movsb
addr16
rcr
inc
in
lret
repz
cwtl
in
subb
push
shl
xchg
pop
xchg
out
xchg
iret
xchg
pop
lret
out
pop
pop
cmpsl
sbb
es
sbb
ret
fcom
les
fs
sbb
into
iret
pop
xor
stos
or
adc
pop
add
test
or
cltd
out
popf
ja
push
push
cmp
andb
sbb
hlt
daa
mov
jg
pop
pop
xchg
sbb
decb
xchg
divl
sbb
lahf
or
mov
sbb
mov
stc
jb
fs
jno
cltd
xlat
jmp
pop
and
mov
jmp
xor
fldenv
call
ret
popa
jge
stos
mov
loop
xor
inc
sbb
arpl
inc
cld
jns
pop
inc
rolb
push
inc
scas
mov
dec
dec
push
cmpsb
out
jmp
push
daa
aas
mov
or
dec
jns
or
ret
test
pop
int3
sahf
insb
cmp
rorl
outsl
fists
neg
test
push
stos
jge
xchg
mov
aas
jno
push
sbb
into
push
popf
scas
scas
and
push
lcall
mov
jmp
cmpsb
xchg
pop
mov
push
and
ret
and
sbb
test
inc
cld
leave
dec
iret
imul
xchg
xchg
imul
and
je
ja
sub
outsb
cmp
insb
shrb
pop
sbbb
inc
out
xchg
out
xor
pop
hlt
or
cmp
or
test
jno
test
dec
sbb
mov
mov
aam
push
scas
xor
sti
sub
inc
mov
lret
pop
cmc
inc
jo
fs
jne
unpcklps
in
push
or
mov
mov
insl
cli
or
xorb
ds
push
iret
dec
push
sub
out
bound
push
adc
imul
addr16
xor
fwait
jns
add
xchg
sub
repz
mov
xor
sub
int3
push
jp
pop
and
mov
fisubrs
outsb
mov
pop
fs
decb
pop
push
not
push
incb
mov
sarl
cs
sub
jle
das
fcompl
in
fisttpl
mov
fldenv
jne
out
xchg
int
mov
add
mov
xlat
cmp
sub
test
sbb
mul
mov
addr16
mov
jecxz
fwait
mov
xchg
out
jae
xchg
add
daa
test
xchg
xor
pop
or
jle
cmp
cmp
cmp
mov
adc
jbe
or
loope
in
and
sti
andb
push
imul
jbe
pop
dec
outsl
pop
push
iret
int
push
add
pop
mov
cwtl
notl
mov
dec
cmpb
sbb
cmp
sbb
cltd
push
xor
adc
xchg
inc
mov
pushf
jg
out
cmp
cwtl
dec
mov
int3
mov
jp
out
push
push
pop
out
lods
cmp
mov
add
inc
pop
ret
push
xor
rorb
push
lock
stos
stc
outsb
aad
iret
pop
pushf
in
lret
pop
cmc
movsl
inc
js
and
xor
mov
mov
add
cli
bound
jb
test
gs
sbb
xorb
sahf
pop
mov
scas
shrb
pop
cmpsb
push
js
inc
sub
out
notb
dec
mov
cmc
cmc
ljmp
in
xor
push
stos
shrb
shrl
and
pop
dec
rorb
mov
dec
repz
cmpsb
xor
inc
fldenv
mov
or
add
stos
inc
jmp
rorl
ss
icebp
lods
dec
dec
int3
clc
and
cli
add
loopw
out
push
xchg
subl
cmpsl
mov
je
arpl
sbb
aaa
jecxz
push
pop
jbe
nop
sub
inc
xlat
sub
adc
movsl
out
mov
frstpm(287
or
mov
sahf
mov
fldt
add
ret
inc
subb
dec
es
aaa
jmp
xchg
cmc
ja
push
leave
and
dec
xor
imul
popa
repnz
into
test
push
insb
push
mov
push
xor
cmp
shl
cmpsl
fdivrl
push
cltd
sarb
or
push
adc
or
mov
shrl
ja
xchg
divb
mov
adc
fwait
jmp
jl
adc
sahf
fs
cmpsb
popa
sbb
jns
lods
jp
dec
inc
ja
push
movsl
and
pop
fldcw
xchg
stos
daa
sub
pop
fisubs
sbb
in
repnz
cmpsl
sbb
jne
push
int
mov
test
nop
dec
add
jnp
sarl
add
hlt
pop
dec
add
nop
lods
pop
xchg
sbb
sub
and
loop
ds
fisubs
inc
xor
mov
mov
ds
xchg
out
push
pop
aad
mov
insl
mov
inc
movsl
jbe
adc
dec
nop
push
jecxz
mov
jge
out
sub
stos
fs
pop
cli
xchg
out
shlb
pop
aam
aad
nop
sbb
ret
in
dec
jl
repz
imul
add
js
inc
add
xchg
stc
mov
inc
lock
fwait
push
cmp
mov
insb
xor
add
sbb
jnp
pop
lret
add
sbb
push
into
je
bound
add
mov
enter
cwtl
cmp
pop
jnp
xor
pushf
mov
mov
and
inc
repnz
inc
dec
xor
pop
xor
ret
mov
dec
jl
hlt
jne
sarb
dec
popa
pushf
subb
lret
inc
daa
movl
or
or
popf
lcall
insb
xor
mov
pusha
popa
dec
push
ret
or
or
cmpsb
mov
jnp
dec
out
jecxz
xor
and
jg
pop
push
and
add
fisttpl
cmpsb
mov
xor
pop
jbe
and
sub
push
xorb
enter
adc
cmpb
push
mov
insb
jmp
add
ja
push
dec
sub
out
stos
out
outsl
test
iret
mov
inc
lret
pop
nop
in
rolb
int3
insl
and
loope
xor
adc
out
gs
adc
in
mov
sbb
lahf
fadd
lret
inc
mulb
cmp
jmp
xchg
adc
dec
clc
icebp
pop
lea
js
xor
mov
testl
aaa
mov
imul
faddp
xchg
inc
dec
roll
fdivl
rcl
popl
roll
aaa
add
xorb
xchg
jns
xor
mov
in
pop
jecxz
loope
fistpl
jge
and
lods
inc
mov
pop
xchg
and
inc
or
xor
das
dec
adc
lods
mov
cmp
cs
adc
xor
cmpb
pop
fsubrs
adc
mov
xor
test
lret
xor
mov
scas
jae
movsl
pop
dec
inc
cmpsl
dec
fs
pushf
mov
push
cmp
movsl
and
repnz
inc
pop
mov
jmp
pop
clc
dec
xor
push
sub
mov
and
fwait
push
xchg
cmp
das
popa
pop
mov
popf
mov
mov
pop
outsl
push
cs
mov
sub
stos
push
add
xchg
pop
out
sbbb
xchg
sbb
call
fsubl
and
aad
xor
cwtl
movsb
test
out
jg
inc
cmp
jmp
mov
cmp
hlt
stos
insl
xor
cwtl
addb
lahf
fs
cwtl
mov
aad
mov
iret
push
lret
movsl
repz
sbb
mov
or
sar
sub
xchg
mov
or
jge
orl
xor
push
repnz
fnsave
xor
jb
xorl
imul
mov
int3
cs
rcl
test
mov
lds
imul
out
cmpsb
cmp
xchg
fimull
pop
cld
aam
dec
cmpsb
xchg
aam
mov
inc
xchg
or
cmpsl
cmp
das
jmp
add
add
movsl
test
fdivrp
fsubs
sahf
dec
js
test
rclb
clc
jo
fnstsw
in
xlat
mov
loop
inc
sbb
adc
xorb
rolb
push
cwtl
retw
xor
sbbl
cmp
adc
loope
or
add
ss
rclb
mov
adc
push
iret
adc
sub
xor
popa
mov
insl
inc
cmp
sub
arpl
add
mov
pop
mov
push
xchg
sub
add
or
rol
arpl
imul
cmpsl
or
mov
bnd
dec
xor
push
pushf
push
pop
es
scas
dec
iret
push
ret
orl
push
pop
push
push
xchg
add
repz
ja,pt
pop
cmp
or
lret
pop
adc
lods
pusha
adc
movsl
and
lret
popa
or
pop
inc
in
int
xchg
dec
rolb
xchg
sbb
mov
sub
cmpsb
push
push
sbb
xchg
mov
xor
mov
in
mov
cwtl
adc
rol
cmp
mov
or
mov
cmp
ret
fs
sub
mov
addr16
or
adc
mov
stos
mov
jns
out
in
adc
mov
push
aas
aad
push
loopne
mov
xchg
pop
in
jns
mov
outsl
sti
add
ljmp
icebp
imul
pop
outsb
scas
arpl
lods
rcrl
lea
inc
std
push
push
jle
in
adcb
jmp
mov
push
xor
js
out
seta
test
lock
push
mov
xor
arpl
jnp
cmc
mov
out
cmp
sbbb
inc
jmp
dec
and
and
shll
mov
jns
push
cmp
call
aaa
inc
lock
push
sbb
mov
roll
adc
cmp
hlt
outsl
ret
cmp
cmp
imul
dec
icebp
aas
lock
daa
mov
not
repnz
and
fdivp
clc
cltd
mov
ljmp
dec
mov
std
and
dec
imul
icebp
xchg
lahf
negb
lahf
iret
mov
and
pop
mov
fcoml
arpl
stc
cmp
xchg
xchg
add
daa
cmp
mov
pop
add
in
aad
mov
pop
ficomps
cwtl
leave
test
in
pop
dec
and
mov
or
ss
push
aad
xor
xor
push
shl
push
and
add
std
in
sbb
insb
je
arpl
sar
or
in
mov
mov
push
les
mov
std
pop
push
subb
xchg
insl
mov
add
sarl
rolb
adc
fs
in
stos
pop
mov
fisttpl
inc
mov
jne
jne
xchg
stos
in
inc
or
ret
jno
imul
jb
mov
dec
inc
call
jmp
xchg
adc
lods
rolb
or
push
dec
cmp
adc
pop
cs
out
stos
xchg
lcall
push
lods
sub
test
push
lcall
cmp
insb
fstps
popf
adc
sti
jmp
jnp
lods
adcl
das
mov
mov
jl
jge
ror
mov
mov
cmpb
push
add
or
insl
cmc
mov
imul
nop
bound
mov
in
sub
lock
pop
lahf
add
insb
lret
or
pop
ficoms
push
and
mov
cmp
int3
xchg
arpl
shlb
jl
sbb
decb
xlat
push
fsts
dec
mov
adc
jbe
ret
push
pusha
add
std
jp
adcb
xchg
imul
lret
push
cmp
xchg
test
call
or
popa
sub
int3
sbb
sbb
add
fstps
call
hlt
loopne
stos
xor
test
mov
je
cli
pushf
mov
inc
cltd
sbb
enter
in
mov
jmp
push
mov
mov
sub
lea
push
ljmp
dec
and
pop
movsl
cmpsl
mov
test
or
pop
insb
incl
mov
adc
pop
ljmp
lea
rcrb
into
xor
nop
in
xor
add
insl
mov
mov
repz
cltd
pop
inc
les
sbb
cmp
ss
rorb
inc
jae
loop
pushf
into
mov
cli
inc
fdivrl
into
mov
mov
in
mov
xor
ss
cmc
and
enter
insl
dec
movl
sbb
xchg
test
faddl
push
sbb
jb
sub
test
sahf
les
rorl
dec
lahf
mov
data16
outsb
arpl
enter
scas
pop
sub
jbe
popf
xor
mov
sti
adc
sub
dec
jp
mov
imul
cmp
sub
mov
daa
jp
adc
and
ss
lock
ja
adc
scas
mov
mulb
mov
inc
and
push
aam
xchg
repz
mov
push
jl
lcall
cmpb
xlat
es
sahf
jg
xchg
push
sarl
push
and
lret
dec
stos
sbb
int
mov
inc
jbe
push
int3
pushf
xor
pop
sub
push
add
ja
fistl
xor
or
clc
inc
mov
jno
push
mov
jne
cmp
mov
xorl
xchg
repnz
pop
inc
and
cmp
cmp
mov
cld
pop
push
adc
lock
shrb
xor
loop
pop
pop
jecxz
mov
jae
mov
sbb
cmp
movsl
cli
mov
out
and
leave
dec
cmp
or
mov
cmp
sbb
jae
cli
add
mov
push
bound
mov
pop
out
xchg
sub
dec
dec
repz
jle
add
lea
stos
lea
jg
mov
xchg
pushf
and
sbb
sbb
call
lcall
sub
sbb
pop
cli
pop
add
jle
jo
xor
bound
cmpsl
repnz
mov
or
call
xchg
mov
push
js
add
sub
imull
pop
sbb
pusha
sub
dec
pop
divb
lea
pop
jge
lea
inc
or
sbb
lahf
out
lret
dec
or
mov
jne
pop
mov
sti
cld
testl
popl
sub
xchg
pop
aaa
mov
mov
push
int3
pusha
and
push
or
lret
rcrl
fucomp
in
and
sub
pop
push
sub
push
pusha
adc
rclb
sub
daa
cltd
add
pushf
fisttps
hlt
mov
adc
jg
jge
test
sub
out
and
fwait
ret
or
loopne
push
mov
jmp
lret
data16
mov
xchg
adc
jge
adc
jbe
fistps
sbb
add
xchg
xlat
mov
sub
movsl
ljmp
or
test
loop
test
lret
pop
xchg
inc
cmp
lods
ficoml
test
test
jno
pop
popa
call
not
test
scas
jge
cltd
int3
stos
mov
mov
out
add
test
inc
mov
adc
pusha
lea
push
xor
cld
lahf
test
loope
aam
inc
jge
adc
insl
lea
imul
cmp
loopne
mov
pop
jecxz
inc
jge
inc
test
aad
xchg
hlt
pop
fucom
test
inc
shrb
xor
test
pusha
mov
cltd
pop
and
mov
mov
scas
sahf
int3
jb
test
pop
lret
orl
pusha
cmovle
inc
ss
fdivr
js
mov
out
xor
sbb
mov
push
stos
pop
ljmpw
mov
daa
andl
test
mov
and
add
mov
mov
xlat
cwtl
cmpsb
jne
xor
data16
lret
cmp
sbb
mov
int
dec
sbb
cwtl
push
movsb
mov
cmp
rorl
fsubr
jb
leave
in
dec
inc
sarl
xchg
mov
clc
cmc
out
cwtl
push
popa
mov
fdiv
sarb
pushf
out
leave
pop
dec
fiadds
or
dec
dec
lret
jo
je
adc
push
cli
xchg
sti
mov
fisubl
fmuls
ss
xor
std
add
jp
cmp
negl
ss
out
jbe
int
stos
hlt
lds
lret
sbb
sbb
aad
mov
mov
jmp
pop
pop
cmp
shll
mov
mov
sbb
sbb
das
aaa
push
or
mov
mov
xor
and
shl
arpl
sbb
cld
sbb
jl
lahf
pop
rorb
ret
add
out
sub
cld
insl
orl
and
sbb
test
scas
cmp
fisubrs
sbb
xlat
data16
mov
mov
lock
pop
push
into
adc
out
and
repnz
pushf
pop
add
hlt
in
pop
adc
fnsave
sub
out
shrl
fmulp
jecxz
mov
and
fsincos
xchg
rorb
mov
and
cmp
int3
shll
dec
inc
scas
push
repz
and
xor
and
fnstcw
imul
inc
test
test
xor
push
roll
sub
dec
movsl
sahf
xor
ljmp
in
cmpsl
adc
movsb
xor
ret
jg
jle
push
mov
in
cli
xor
test
hlt
in
inc
int
enter
into
outsl
inc
int3
xor
mov
lods
mov
jge
xchg
stc
adc
jge
push
xchg
cwtl
pushf
movsb
rcl
popf
lea
dec
aad
lock
orb
sub
in
mov
roll
xchg
mov
lds
jle
push
mov
xchg
outsl
cwtl
xchg
in
sub
dec
enter
and
punpckhwd
pushf
popf
sarb
inc
jl
jb
rorl
or
push
push
xchg
fcomp
mov
xchg
sub
adc
add
sub
sahf
cmp
popf
bound
daa
mov
scas
mov
mov
mov
and
mov
mov
lahf
pop
push
jnp
xor
pop
xor
repz
scas
cmp
scas
cmp
sti
sub
sbb
adc
lret
scas
mov
popf
jno
sbb
inc
in
dec
dec
mov
fmul
xor
icebp
lcall
dec
fisubrl
movsb
fs
sahf
sub
pop
jno
fldcw
lcall
push
pushf
pop
mov
or
mov
int
mov
xor
stos
jge
mov
push
mov
sbb
mov
fwait
cmpsl
clc
nop
stc
inc
sub
insb
xchg
and
jne
mov
sub
and
mov
inc
les
or
and
dec
cwtl
loop
adc
fdivrs
dec
mov
idivl
push
pusha
pop
jbe
mov
pop
movsl
icebp
lret
aaa
sub
jnp
mov
notb
pop
ret
stos
mov
sub
popa
adc
je
test
adc
and
mov
add
inc
xorb
xchg
lds
push
push
sbb
hlt
pop
mov
mov
ret
fimull
repz
cmp
jmp
push
jp
mov
call
rep
adcl
mov
loop
mov
mov
lods
mov
mov
adc
xor
xchg
add
cs
adc
scas
nop
imul
push
push
jge
bound
jl
std
movsb
imul
sbb
mov
xor
in
pop
mov
cmp
pop
push
mov
shll
aam
mov
xor
sub
mov
dec
sarb
ja
pop
sub
mov
gs
lahf
dec
cmp
sbb
out
popa
add
fs
jnp
pop
add
push
mov
shlb
imul
add
aad
sbb
ret
int3
sbb
jbe
sbb
sub
mov
insb
aam
mov
popf
push
mov
push
pusha
scas
cmp
dec
iret
popa
rorb
cld
das
roll
aad
movsl
imul
loopne
arpl
aas
or
mov
dec
fists
xchg
jl
adc
das
jae
adc
mov
ljmp
pusha
bnd
movsl
cmp
cmpsb
jnp
inc
test
fcomps
pop
arpl
xchg
cmp
repnz
ds
push
shrl
les
xor
dec
jg
mov
movsb
imul
pop
loop
add
cmc
adc
sbb
icebp
loope
push
adc
out
int3
cmp
in
adc
add
clc
imul
sbb
dec
sbb
fnstsw
loopne
sbb
lods
pop
or
loop
xlat
mov
fwait
inc
cmpsl
xor
test
repz
lahf
dec
inc
scas
dec
lods
pop
jmp
fdiv
rorl
int
mov
into
dec
lea
fdivs
pop
into
cmp
mov
hlt
add
push
cmpsb
ljmp
shlb
and
mov
pop
sbb
xchg
out
icebp
cltd
in
imul
cmp
rorb
repz
push
cwtl
mov
ss
jno
fs
dec
cltd
cmp
std
fimuls
gs
jae
out
fcoml
jmp
imul
ffreep
fadd
mov
orb
test
mov
xchg
insb
mov
bound
rep
add
test
cwtl
rcr
inc
pop
add
mov
clc
dec
jnp
cli
mov
loop
movsl
into
mov
fs
outsb
loopne
push
insl
adc
and
push
ss
and
je
cmc
jle
testl
leave
or
fidivs
and
out
xchg
repz
mov
orb
inc
cli
dec
lret
mov
mov
fldt
sbb
loopne
xor
fisttpl
cmpsl
aaa
mov
test
movsb
adc
sub
jmp
loop
mov
movsl
popf
mov
mov
ss
jg
in
or
xor
xor
test
data16
pop
xor
lcall
mul
repnz
sbb
lds
sub
mov
push
std
aad
adc
adc
sub
adc
loope
push
mov
mov
add
das
or
mov
inc
sbb
mov
xlat
in
xchg
and
mov
mov
sub
js
cmpsb
cltd
pop
in
imul
addr16
shl
sub
jae
mov
mov
orb
jb
xlat
add
repnz
call
loope
lcall
js
lret
pop
mov
fiaddl
data16
cmc
jmp
movsl
fs
nop
lock
repz
roll
push
sbb
stc
sub
jb
dec
int3
out
aaa
aaa
and
lds
dec
inc
cmpsl
stos
and
pop
mov
xor
fcomps
push
and
sti
movsl
mov
sub
pop
jae
pop
aaa
add
xchg
cmp
add
mov
shlb
jg
push
ret
fsubrp
or
xchg
jg
add
popa
movsb
outsl
jle
inc
cmp
adcb
mov
int3
xchg
pop
addb
fmull
or
dec
fmuls
or
pop
fcos
fildl
into
repz
rolb
in
push
cmp
xchg
or
xor
push
pop
xchg
sub
push
xorl
mov
test
ret
mov
cmpsb
cli
mov
mov
xchg
push
inc
je
dec
push
xor
testb
roll
inc
stc
cld
pushf
push
pop
jae
push
testl
inc
iret
pop
enter
sarl
test
inc
mov
shll
int3
repz
orb
xchg
mov
cltd
push
or
int
cmp
and
add
sbb
mov
adc
outsb
int
popf
out
adc
movsb
mov
sub
or
cmpsl
lcall
mov
pusha
push
int
loope
sbbl
mov
ret
jecxz
dec
xlat
mov
sub
or
rcrb
ret
dec
mov
mov
les
test
mov
mov
adc
cmp
in
in
into
ljmp
mov
xorb
xor
icebp
sti
sub
push
outsl
stc
cmp
out
xor
and
mov
nop
jno
mov
or
ret
mov
imul
stos
roll
jo
adc
mov
repnz
popa
sti
push
test
mov
inc
xchg
daa
mov
cmc
pusha
cmp
repz
lret
adc
jno
mov
push
push
add
sbb
jge
shlb
add
flds
clc
and
and
hlt
fistpll
lcall
lahf
jno
insl
out
xor
xor
cmp
mov
std
add
leave
xorl
into
cmp
and
mov
add
incb
pop
lret
lds
mov
jo
lret
xor
cmp
daa
and
jno
jnp
push
pop
addr16
rorb
je
movsb
mov
mov
adc
and
mov
addb
jecxz
mov
cmpsl
insb
or
inc
xchg
and
mov
cmp
push
cmp
mov
jae
and
mov
addr16
arpl
stc
cmp
fdivr
jo
push
call
push
in
sbb
pushf
pusha
xor
pop
addr16
leave
or
rcr
add
rcrb
pop
outsb
mov
adc
xlat
or
inc
cmp
adc
push
sub
in
fsubrs
dec
or
es
mov
cmp
fcompl
sti
imulb
mov
sbb
hlt
add
add
shll
iret
clc
std
sbb
scas
rcrl
sbb
mov
jae
mov
push
shll
out
fstps
mov
fs
es
push
fcoml
push
rcll
and
out
loop
sbb
sub
repnz
lea
cltd
fidivrl
test
sbb
xorl
mov
jmp
hlt
jns
mov
sbb
jge
aaa
xor
sahf
sub
test
push
or
lcall
cltd
and
out
or
mov
jle
pop
testb
aam
adc
mov
cli
in
cmp
loope
pop
pusha
cmp
adc
stc
and
es
mov
outsl
iret
push
cmovnp
scas
adc
loope
mov
test
add
leave
push
mov
test
lds
inc
in
sub
fldt
sahf
xlat
sub
lret
sbb
xchg
and
ss
cmp
loop
adc
dec
pusha
sbb
nop
inc
aam
leave
push
adc
int
sbb
dec
aaa
fimuls
rorb
dec
incl
mov
cs
push
inc
jecxz
jne
hlt
and
test
int3
nop
ret
jno
fcomps
dec
mov
pop
xchg
iret
add
sahf
and
test
les
mov
jo
shlb
xchg
add
pop
les
rorb
jge
inc
push
xchg
push
xor
inc
pop
rolb
push
and
std
push
adc
mov
in
pop
sub
mov
loope
cwtl
hlt
iret
adc
pop
lods
enter
dec
adc
mov
mov
xor
jge
inc
xor
jae
popf
fstp
sbb
leave
call
out
cmpsb
pushf
xchg
mov
jae
jne
add
shrl
mov
cld
es
in
in
or
mov
xchg
pop
es
nop
sub
sbb
adc
iret
cld
jmp
adc
and
pop
insl
push
or
sub
add
ret
stos
mov
lret
inc
and
fnstenv
mov
add
pop
mov
and
mov
int3
jnp
ss
push
xor
enter
push
orb
sbb
fidivrs
test
nop
xchg
bound
lahf
push
in
or
shlb
push
adc
jmp
add
popf
xor
fwait
xchg
push
leave
scas
jl
cmpsl
repz
cmpsb
xor
bound
and
jmp
nop
sbb
sbb
adc
push
jb
adc
cmp
lods
pop
fs
and
test
add
loope
jae
mov
push
loop
push
xorl
add
inc
dec
movsb
mov
insl
out
jae
push
pop
in
xchg
mov
flds
aam
shll
cmp
sbb
enter
dec
sub
dec
jbe
mov
inc
mov
sbb
jecxz
mov
cmc
pushf
push
call
incb
cli
push
cmpsl
inc
cwtl
push
cmpsl
mov
loope
xor
stos
dec
cmp
pop
pop
jp
jp
les
fidivrl
aas
out
rorl
adc
push
mov
jge
das
cmpsl
push
dec
adc
icebp
mov
mov
ss
sub
ret
daa
repnz
xchg
xor
inc
pop
dec
push
movl
xchg
test
sbb
push
cmp
in
xchg
mov
ffree
inc
xor
imul
sbb
cmp
sub
mov
fldenv
mov
jne
aad
cmp
test
popa
xor
jbe
pushf
out
mov
and
ljmp
push
xlat
mov
out
dec
sarl
mov
jns
adc
or
mov
test
mov
jmp
out
addr16
inc
aam
cld
hlt
fcmovb
ss
push
xchg
sub
inc
adc
mov
ds
lods
test
cmpb
je
ret
jbe
sub
jmp
ljmp
les
push
adcl
add
into
jne
mov
jb
push
cmp
sbb
cmpsl
sbb
out
fwait
pop
stc
cmpb
gs
insl
add
jecxz
mov
sbb
fiadds
adc
enter
imulb
ds
pop
sbb
mov
enter
cwtl
lcall
cmpsl
mov
xchg
or
aad
pop
adc
pusha
outsb
sti
xor
fldl
push
add
out
popa
mov
push
fsubl
sbb
dec
call
xlat
fisttpll
cwtl
push
xchg
jnp
rcrb
outsb
loop
or
and
je
jge
daa
cmpsl
negb
enter
dec
inc
mov
in
push
mov
mov
jg
pop
add
inc
push
stos
push
out
or
push
xchg
adcb
jge
dec
sub
mov
push
pop
xorb
add
sbb
jecxz
xchg
push
or
push
jecxz
mov
inc
aam
sbb
jae
loope
or
push
leave
popa
subb
dec
shlb
mov
mov
imul
mov
inc
js
inc
lea
sahf
dec
es
mov
out
mov
gs
ljmp
mov
xchg
jae
cmp
out
pop
push
cmp
inc
pop
jle
push
mov
mov
mov
mov
paddsw
mov
mov
shr
lret
sub
pop
cltd
in
sub
call
fbld
call
filds
xor
inc
pop
mov
fs
jg
push
dec
int3
dec
aad
repnz
pop
jmp
inc
xchg
xor
mov
push
lods
jnp
test
pop
movsb
imul
sbb
cmpb
mov
int
ret
add
aas
push
mov
xchg
jle
loope
cmp
jp
mov
insb
fcompl
ja
and
adc
adc
jmp
push
jno
add
and
scas
xor
xchg
call
inc
in
test
push
adc
inc
push
pushf
jl
aas
fsubrs
xchg
mov
or
lods
test
sub
icebp
repz
dec
push
inc
lods
pop
das
icebp
mov
daa
pop
mov
mov
ret
mov
dec
pop
mov
cmp
mov
addb
arpl
inc
fstps
das
addr16
bound
cs
sub
jne
adc
lds
adc
push
push
or
or
inc
inc
ljmp
cmc
testb
nop
enter
and
sub
jnp
sbb
sub
inc
mov
negl
sub
push
imul
mov
or
dec
ret
add
arpl
ror
aas
fstps
addl
mov
mov
jl
jno
fiaddl
inc
or
out
lods
dec
push
mov
xchg
mov
lcall
sbb
jne
pop
popf
xchg
and
xchg
mov
jne
cmpsl
adc
call
dec
loope
fisubl
setle
mov
sub
outsb
mov
daa
mov
in
pop
jmp
dec
mov
push
fadds
xchg
cld
cmp
and
inc
jae
int3
pusha
sub
mov
mov
in
and
movsl
ud1
cmp
mov
dec
adc
sbb
lods
add
sbb
loopne
into
sub
arpl
cmp
xor
inc
lods
adc
add
adc
mov
loop
mov
lds
adc
mov
outsb
addl
inc
jae
inc
or
dec
lock
into
shll
xchg
add
or
xor
add
mov
push
fisubrs
lahf
dec
mov
mov
lahf
xlat
adc
das
inc
inc
add
loope
mov
push
arpl
gs
int3
fdivl
loopne
jmp
inc
sti
adcl
cli
fucomp
or
fildll
aaa
and
sub
sub
xchg
cmpsl
sbb
test
or
and
sti
stos
jg
and
addr16
faddl
int
cmp
cmp
fiaddl
outsb
jmp
and
or
or
mov
pop
das
xor
sarb
or
mov
imul
add
outsb
scas
mov
mov
push
into
test
cmp
gs
and
in
push
or
inc
cmp
mov
pop
fwait
mov
rclb
out
cmpb
cmp
add
aas
pop
push
push
in
dec
jecxz
or
mov
sub
fdivr
sbb
mov
jg
or
fsub
lds
and
adc
fidivrs
xchg
inc
les
fildll
movsl
mov
sub
adc
int3
cmp
cmp
mov
fidivs
jle
pop
cmp
outsb
and
lock
out
cmpsl
popl
or
int3
or
sbb
movsl
adc
shrl
jle
std
insl
repz
jns
cmovae
add
int
ret
repz
int3
xchg
loopne
mov
aad
shll
cmc
mov
outsb
xchg
mull
lahf
inc
es
fdivl
adcl
and
test
push
jae
mov
sub
xchg
movsb
fidivrs
mov
adc
jb
fsubl
test
pop
mov
lea
sub
or
adc
push
out
dec
push
xchg
fstpl
ja
xchg
fs
adc
cli
cmp
xchg
mov
and
mov
inc
mov
stc
pop
mov
icebp
xlat
out
xor
push
add
leave
jle
ljmp
push
mov
mov
inc
cmp
iret
cmp
jno
shll
fistps
les
or
das
lds
orl
push
nop
call
push
rolb
hlt
mov
in
pushf
insl
mov
test
cmp
loopne
jl
aaa
sbb
inc
dec
cmpb
fstps
cld
push
pop
decl
out
push
in
xchg
call
in
push
sub
orl
fcomp
dec
push
cmp
push
or
jae
fisubrl
push
inc
xchg
xchg
cmp
lea
mov
adc
push
cwtl
xchg
mov
push
cmp
out
mov
int3
cmp
outsb
aaa
das
sbb
lods
push
mov
faddl
mov
cmp
mov
ds
das
xchg
xor
fwait
loopne
shlb
shll
xchg
fisttpl
divl
dec
imul
addr16
inc
mov
sbb
outsb
ja
mov
adc
jno
xchg
adc
popa
gs
cmc
jne
inc
repnz
pop
je
icebp
mov
inc
mov
mov
mov
hlt
add
sbb
imul
pop
inc
scas
mov
andb
and
xor
test
dec
mov
les
outsb
or
repnz
or
push
test
and
dec
and
xor
pop
jge
push
cmp
pop
pop
dec
cwtl
sub
or
test
adc
pop
ja
or
popa
mov
loopne
in
cmpsb
jne
cmp
mov
dec
jp
cmp
sub
jno
mov
rcr
jo
add
mov
mov
scas
mov
sub
adc
xchg
add
test
fistpl
ds
xchg
mov
clc
in
adcl
mov
pop
dec
sbb
lea
pop
scas
addr16
cltd
outsl
push
cmp
mov
fnstsw
repz
jno
inc
mov
in
sbb
out
pop
pop
jo
loopne
mov
pop
mov
pop
and
xchg
test
addr16
mov
mov
std
or
mov
cmp
leave
add
mov
out
push
aas
or
in
jl
cmp
jmp
enter
imul
test
sbb
popf
repz
inc
lds
or
fmuls
mov
sbbl
int3
mov
pop
xchg
out
pop
sbb
faddl
js
addr16
pop
sahf
push
sbb
add
cmp
cmp
xchg
push
lret
popa
cmp
xor
xchg
and
bound
hlt
cli
jle
fists
shlb
mov
rcrl
cwtl
call
sub
xor
out
scas
fs
imul
push
sub
cmp
mov
in
cmp
mov
test
add
lock
popf
cli
test
paddd
iret
es
sarb
loope
aad
iret
lret
in
out
rorl
loope
push
test
lock
add
negb
leave
aaa
mov
mov
mov
jmp
shrl
inc
push
mov
adc
outsl
aaa
adc
cmp
pop
sbb
jmp
mov
dec
insb
xchg
mov
lcall
movsl
dec
out
jp
int
xor
in
std
bound
pop
jb
mov
loopne
mov
int
pop
gs
les
sub
in
adc
dec
clc
pop
cltd
scas
and
xchg
or
test
or
dec
xor
mov
aas
xchg
add
popf
xchg
addr16
cmp
and
sarl
lret
xchg
movsl
nop
sarl
and
and
sar
push
mov
add
out
mov
outsl
lret
mov
clc
fs
addr16
mov
les
or
stos
jecxz
fildll
stc
cli
lret
mov
xchg
lahf
pop
loop
std
xchg
icebp
lahf
sbb
mov
pop
cmp
xchg
add
out
jge
inc
cmpsl
xor
orl
std
mov
add
jp
inc
push
out
repnz
icebp
bnd
push
mov
adcb
ds
lret
jns
and
mov
in
pop
ret
push
adc
dec
cli
jl
inc
cli
mov
jmp
adc
loope
xor
fs
jmp
sarl
xor
mov
and
cld
aam
rcr
jge
movsl
popa
push
lret
xchg
arpl
pop
xor
jo
hlt
cltd
mov
sbb
mov
mov
xchg
gs
out
testl
arpl
repz
sub
imull
in
xchg
lret
in
jb
mov
push
cli
inc
cli
mov
je
movsb
std
decb
mov
notb
sbb
push
div
cli
mov
cld
aad
push
sbb
pop
ss
insb
mov
mov
stos
mov
or
hlt
addr16
dec
inc
andl
test
inc
gs
les
fstl
push
or
xchg
jo
fdivr
bound
sbbb
and
mov
push
mov
jmp
xor
jl
sbb
clc
push
sub
aaa
loopne
outsb
jbe
push
or
jae
mov
mov
pop
jb
fstl
mov
sub
es
and
cs
loopne
lcall
popf
sub
cmp
lcall
rorl
nop
in
jle
ret
xor
scas
inc
test
test
dec
ds
rorb
sbb
mov
jne
inc
test
pop
or
mov
scas
jmp
in
cmp
mov
inc
add
das
lgs
sbb
jno
pusha
lock
hlt
or
dec
cmc
push
ss
jmp
sarl
fistps
pop
xchg
add
pusha
loope
xlat
sbb
cmc
fdivs
sub
lret
insb
jno
xor
mov
jne
cmc
in
ss
shlb
call
adc
jle
pusha
xchg
lea
dec
dec
sub
les
push
fistpl
mov
in
xchg
adc
mov
cmp
jle
sub
cmp
ljmp
lock
mov
icebp
testl
adc
push
pop
push
stos
mov
ljmp
or
ffreep
and
stos
fldt
movsl
jle
adc
add
or
and
fiaddl
dec
xchg
jnp
dec
pop
jmp
enter
int
loopne
lods
scas
fcmovnbe
iret
inc
push
repnz
mov
cltd
int
xor
ret
cmpsb
pop
in
pop
movsl
push
ds
jg
stc
fmull
in
jecxz
push
dec
push
xor
and
ss
fadds
pusha
cmc
pop
mov
xchg
mov
in
test
into
lods
mov
and
mov
pop
push
xchg
adc
jg
imul
js
jns
repnz
dec
shrb
sbb
popa
jb
sahf
mov
xor
les
lock
lods
inc
mov
mov
mov
es
lods
pop
shlb
js
rcrb
mov
std
jge
mov
andl
movsb
fldt
dec
aaa
shl
in
mov
lods
pop
push
jne
ret
popa
jnp
dec
sub
mov
popf
push
insl
fs
jl
repz
test
testl
test
imul
cmp
inc
or
les
xor
push
push
aaa
inc
jo
push
add
into
dec
dec
inc
pusha
cmc
movsb
shr
xchg
mov
cmp
push
dec
dec
mov
aam
sbb
cmp
stc
xor
imull
or
in
aas
sub
cs
inc
lret
stos
or
mov
mov
roll
pop
push
ffreep
movsb
cli
jb
or
arpl
icebp
lock
aad
dec
sbb
loop
pop
sub
mov
ss
shlb
fsubrp
mov
lahf
das
sarl
fwait
or
or
push
xlat
push
xchg
scas
pop
data16
hlt
dec
dec
nop
cs
mov
mov
repz
out
mov
cltd
add
inc
mov
inc
add
push
nop
mov
es
lds
inc
xor
mov
push
fisttps
hlt
xor
xchg
mov
pushf
xor
xchg
imul
leave
out
test
lds
gs
nop
jno
inc
sbb
xor
test
stos
and
mov
and
aas
mov
cmp
in
jp
push
add
int3
loopne
push
pop
test
mov
mov
jp
fnstcw
dec
push
push
xchg
sbb
xor
movsb
sti
jns
jge
add
movl
xlat
pop
or
jl
or
push
cmp
jg
pop
ja
and
scas
sahf
ljmp
popf
fs
cwtl
test
cmpsl
insl
std
or
pop
es
sub
shl
xor
inc
add
adc
sbb
out
or
aam
and
xor
ljmp
gs
andb
aas
cli
stc
fsubrl
adc
push
pop
cmp
cli
aad
outsb
mov
jle
mov
shll
ja
push
push
and
enter
aaa
mov
mov
mov
test
sub
dec
stos
shll
mov
pop
out
addb
jbe
movsl
push
repnz
idivl
xor
push
cltd
test
outsb
mov
push
jmp
pop
push
mov
leave
pop
xchg
dec
rclb
add
cs
lcall
inc
stos
push
fisttpll
orl
jecxz
cmp
test
pushf
insb
icebp
add
inc
pusha
jne
pusha
add
loope
testl
in
sbb
insl
call
adc
sub
call
pop
movsl
daa
fs
cli
jp
cltd
sbb
xchg
push
cmpsb
jb
cwtl
iret
mov
roll
jbe
pop
outsb
test
push
mov
xchg
cmpsb
iret
dec
xor
stos
arpl
mov
mov
test
repnz
mov
lods
cmp
jns
push
mov
mov
push
cmpsb
cld
and
add
test
adcl
insb
push
mov
push
addl
lahf
aas
sub
arpl
lcall
dec
out
arpl
aad
std
add
int
cli
cmpw
std
dec
dec
jns
sbb
loop
xor
aaa
push
shlb
adc
pushf
sbb
test
int
scas
out
xchg
mov
cmp
cmp
pop
sbb
sti
shl
ret
sub
sbb
mov
push
stc
mov
push
comiss
dec
mov
sbb
sbb
pop
test
xchg
test
int
fstl
shlb
add
sbb
into
divb
lahf
mov
in
cmp
sub
xor
sarl
out
scas
pop
scas
ds
sbb
bound
mov
pop
mov
rcr
inc
sub
mov
jbe
xor
dec
or
inc
fcmovu
in
fstps
out
js
int3
xchg
shll
fdivp
adc
mov
in
sub
jmp
mov
es
ss
insl
in
and
fxch
cltd
das
pop
pop
ret
mov
mov
insb
xor
aam
dec
cmp
lock
test
jb
icebp
sub
jne
push
fists
mov
ja
mov
jecxz
cmc
mov
mov
movsl
enter
movsb
imul
sbb
mov
icebp
mov
loopne
sub
shlb
test
ja
push
mov
pause
add
inc
add
dec
lahf
ret
adc
push
jge
sbb
sbb
and
jb
cmp
lret
xchg
sbb
div
rcr
mov
outsb
repnz
into
mov
js
incb
inc
jmp
cli
daa
scas
lods
push
pushf
bnd
bound
sarb
cltd
cmp
imul
iret
push
mov
fmull
mov
test
fwait
and
mov
pushf
in
daa
pop
test
shrb
jnp
sbb
adc
cmp
xor
fnclex
dec
insb
xchg
data16
sbbl
jge
jp
lret
jns
mov
sbb
mov
outsl
jno
push
jns
pop
inc
add
xchg
icebp
jnp
jmp
and
jns
shlb
mov
pop
mov
cwtl
les
push
test
in
stc
mov
mov
xchg
jnp
sub
fnsave
mov
es
hlt
dec
lret
pop
cltd
shlb
dec
pop
push
cmp
and
daa
sbb
sbb
jecxz
movsb
mov
push
in
and
inc
rol
fdivrs
inc
and
arpl
testl
jg
and
hlt
push
mov
xor
push
push
jle
out
mov
sub
adc
cltd
retw
dec
pop
adc
mov
jmp
dec
inc
fadds
inc
icebp
lahf
outsb
pop
iret
fs
dec
pop
lret
outsl
push
inc
pop
mov
adc
lahf
inc
pop
mov
or
lahf
stos
or
or
call
js
sub
push
adc
pop
xchg
mov
ds
shrb
push
insl
mov
ds
call
pusha
popa
repnz
xor
inc
sub
sub
lret
incl
mov
or
xchg
insl
cmpsl
jo
lahf
ja
imull
lds
xor
les
cmpsb
out
aam
call
cltd
lods
inc
rolb
and
div
fsts
pop
fs
pop
xor
mov
leave
stos
push
loope
pushf
push
pop
add
xchg
and
sahf
icebp
cmp
inc
sub
mov
sub
test
sar
mov
in
pop
mov
lds
cs
lea
testl
or
sbb
test
int3
mov
xor
inc
adc
jl
fidivs
sbb
sbb
push
mov
fsubrs
movsb
call
push
ljmp
fmull
fcmovne
or
lods
sbb
pop
and
mov
mov
xor
imul
add
ret
negl
inc
shr
dec
sub
mov
mov
mov
pop
push
scas
add
mov
pop
stos
push
jl
mov
pop
cli
popl
stos
cmp
sub
filds
sub
cld
popf
dec
lret
pop
mov
cmp
and
dec
test
cwtl
push
data16
dec
push
outsl
add
je
addb
cmpsb
xchg
lret
into
jmp
jmp
dec
test
rorb
sub
stos
cltd
mov
sti
sbb
mov
pop
jp
mov
cmp
pusha
out
movsb
mov
xorl
sar
jne
fnstsw
rcl
mov
jne
or
and
les
xchg
sub
fdivs
cwtl
push
iret
mov
fwait
jg
adc
pop
fwait
jp
jmp
jp
and
ss
pop
ret
les
xchg
shll
jle
std
mov
dec
xchg
out
xor
aad
cld
xor
cmp
outsb
add
jo
mov
mov
stc
lea
cmp
jg
push
jb
mov
dec
out
cli
or
loopne
dec
shlb
mov
push
adc
cld
cmpsl
lret
filds
divl
mov
je
sbb
jb
nop
pop
out
out
adc
xchg
arpl
adc
and
les
int
not
xor
push
xchg
cmc
data16
int
cmpl
xorps
mov
dec
shlb
mov
ror
mov
jle
sub
adc
test
mov
push
stos
push
fsubrs
push
xchg
xchg
push
sub
push
je
aam
sarl
lcall
pop
scas
lea
ds
or
mov
testb
sahf
pop
loope
scas
les
push
addb
sbb
in
pop
aam
aad
or
orl
dec
cmp
xchg
push
mov
push
fidivl
xchg
add
jmp
dec
std
push
je
test
jbe
mov
sbb
cmp
shrb
adc
mov
mov
pop
lcall
imul
gs
pop
dec
mov
cld
lds
push
mov
push
cmp
int
jnp
out
fsts
int
in
pop
mov
mov
das
xor
and
mov
icebp
jne
xor
inc
lahf
sbb
fbld
lcall
push
xor
and
pusha
mov
mov
roll
or
ret
std
outsl
sarb
stos
jle
loopne
loop
cmp
sarl
fisubl
mov
imul
and
es
lret
jns
or
inc
fisttpll
push
mov
xor
out
les
movsb
adc
aaa
mov
jno
imul
push
dec
sbb
jge
add
adc
xchg
ja
fidivrs
sbb
adc
inc
insl
out
pop
movsl
or
xchg
stos
mov
fistpll
cmpsl
in
les
shll
fcomps
jb
fnstenv
cmp
jecxz
mov
nop
xchg
cmp
in
fidivrl
dec
pop
repnz
mov
push
and
in
cmp
ret
aam
shrb
mov
mov
enter
sbb
jle
cmp
mov
cmp
leave
jb
lds
xlat
in
and
xchg
push
mov
mov
adc
cmpsb
cmp
jge
in
mov
add
aam
xchg
mov
xchg
out
adcb
mov
filds
dec
dec
add
psubw
adc
jns
outsl
movsl
ljmp
lods
dec
mov
imul
fisttps
pop
fcomps
jne
xchg
pop
mov
insl
es
test
cs
ja
sarl
push
push
cmp
fbld
sbb
adc
jne,pn
das
push
neg
mov
push
jbe
push
stos
ja
ficompl
lds
lret
imul
push
and
es
cli
insl
popa
mov
out
mov
lret
sbb
lods
jb
aam
pop
in
es
lret
push
cmpl
pushf
outsl
rcl
lods
push
xor
dec
cltd
sbb
adc
test
mov
xchg
xlat
ffree
fwait
out
daa
div
xchg
cmp
sub
icebp
sti
std
imul
je
movsl
out
and
dec
jge
repz
outsl
je
aaa
das
dec
mov
lea
rcll
rcrl
dec
insb
sub
mul
push
out
adc
push
js
xor
and
mov
out
push
imul
add
jns
push
in
push
cmp
out
int
xchg
mov
fsubr
adc
stos
mov
mov
js
inc
scas
scas
movsb
arpl
rorb
lock
sbb
lds
xchg
int
movd
dec
adc
mov
popf
gs
jno
iret
into
movb
sti
fistl
push
nop
sbb
scas
scas
popf
addr16
fldt
imul
scas
jo
les
mov
divb
lock
stos
or
lret
dec
in
fisubrl
jge
nop
popf
sbb
into
sub
scas
inc
push
loopne
cmpsb
and
sbb
xchg
jmp
add
loop
xchg
xchg
sub
jle
xor
imul
cmp
ljmp
sti
push
sbb
out
and
adcb
dec
push
clc
or
iret
sub
jmp
xchg
fistl
test
out
icebp
icebp
popa
jge
aaa
repz
adc
sub
fs
mov
push
mov
xchg
popa
or
pop
das
jno
cmp
dec
jae
push
pop
iret
shll
lahf
jo
outsl
movsb
cmp
pop
mov
pop
in
cli
jl
imul
int3
aad
inc
mov
xchg
aaa
cmpsb
mov
add
outsb
roll
call
das
fs
xchg
movsl
fstl
jo
adc
xlat
fstpl
lea
arpl
js
test
mov
mov
mov
cld
inc
lret
lds
mov
fmul
mov
cmpsl
enter
add
mov
fdivs
add
pusha
jl
jge
sub
leave
nop
outsl
jp
mov
call
add
out
stos
ss
sbb
jns
cmpsb
in
dec
push
js
cli
insb
mov
xchg
xchg
mov
or
adc
lds
push
push
sbb
or
and
mov
pusha
cmpsb
mov
repz
mov
cmpsl
add
in
cmp
sarb
in
pop
sbb
rcrl
cmp
mov
dec
or
cmp
push
ret
push
mov
repz
cmpsb
sub
adc
mov
arpl
pop
mov
lret
lock
jl
xor
cmp
imulb
sub
mov
mov
daa
sbb
gs
pop
mov
xlat
inc
inc
xchg
push
pop
and
jg
push
mov
ja
xchg
cmp
lods
jmp
push
mov
ds
sahf
into
jbe
cmp
rcrb
push
mov
ret
mov
in
leave
xor
mov
cltd
push
hlt
sbb
adc
aad
mov
and
loop
sbb
out
sub
lret
bnd
jmp
sub
sub
xchg
sub
jge
dec
adc
loopne
in
inc
popf
mov
xor
mul
xor
js
aam
int3
xor
cmpsl
push
int
rclb
jmp
xchg
cmp
les
mov
cs
mov
push
inc
in
data16
aad
mov
jnp
jge
cmc
adc
add
lcall
js
or
push
sbb
cmc
or
jmp
mov
jmp
xchg
and
in
addr16
add
xchg
jle
insl
dec
dec
out
sub
loopne
mov
mov
movl
jb
inc
clc
jo
imul
push
pop
fwait
xchg
and
sub
sbbb
xor
add
lret
cmc
push
in
sarb
int
test
jno
ret
inc
sub
jg
and
stos
jl
adc
sahf
notl
mov
jl
lahf
jae
je
add
out
shlb
push
inc
mov
into
fbstp
shl
test
mov
incl
and
and
cwtl
mov
push
add
scas
inc
cmp
lcall
inc
bound
push
pop
fiadds
test
xchg
mull
pop
jo
jecxz
pop
add
pop
fsubrl
mov
insl
iret
mov
mov
in
ss
or
jae
outsl
pop
adc
sub
fistpl
or
or
xchg
ja
inc
les
mov
in
shrb
mov
mov
in
and
sbb
icebp
jo
outsb
or
ficomps
xor
adc
cltd
notl
lds
sub
insb
inc
aam
cmp
lret
xorl
sbb
cmpsl
xchg
or
lods
dec
call
sarl
lahf
sbb
dec
ljmp
pop
fistl
push
mov
push
aam
lahf
mov
out
jbe
mov
pusha
push
lock
cmpsl
ds
in
cmp
add
pusha
loop
dec
mov
push
fiaddl
cmp
jp,pn
or
push
pop
sbb
jae
gs
adc
ret
aaa
addb
pop
mov
xchg
sub
push
ljmp
loop
lret
fs
inc
stc
fwait
adc
pop
push
cmp
cs
int3
mov
xor
lods
out
mov
xor
test
aas
inc
pop
enter
pop
inc
mov
pop
mov
nop
fmull
jno
mov
into
jns
add
push
scas
mov
int
jecxz
loop
sahf
rcr
shr
and
add
and
xchg
sbb
sub
xchg
fadds
sub
mov
testb
xchg
loopne
sbb
push
mov
adc
sahf
lods
iret
sbb
loopne
cmp
addr16
sahf
jge
xor
xchg
add
je
mov
loope
cmp
hlt
push
adcb
mov
sub
mov
mov
mov
repz
cli
jo
lea
mov
aad
sti
dec
adc
loop
xchg
outsb
sbb
jns
mov
in
scas
push
add
popf
cwtl
insb
shll
insl
out
push
les
dec
xchg
jnp
jp
sbb
xchg
mov
push
mov
mov
mov
out
lds
lock
pop
roll
outsb
cld
jnp
stos
push
and
pusha
mov
fadd
cmp
cmp
lret
adc
mov
push
pop
shl
dec
ret
fstpl
pop
fdivl
sbb
dec
sub
fldenv
in
and
mov
xchg
sub
xor
mov
jecxz
bound
je
cmp
loopne
mov
lock
xchg
jecxz
mov
sub
xor
jns,pn
xlat
das
fsubp
mov
or
pusha
xchg
jae
pxor
push
sbb
ret
scas
mov
pop
imul
push
ja
adc
fisttps
int3
jbe
sbb
add
pop
aam
mov
pushf
push
jae
mov
mov
fdivl
icebp
subl
sbbb
out
or
fbstp
xchg
xor
pushf
mov
fs
ljmp
mov
addr16
push
shll
jo
cmpb
mov
mov
xor
mov
push
fisubrl
adc
es
push
sbb
data16
xchg
lds
lock
xchg
or
fwait
and
test
jbe
xchg
or
fs
gs
sub
inc
inc
mov
test
aad
xchg
sahf
xchg
adc
js
mov
enter
push
push
jl
mov
out
sbb
or
cmp
jnp
xchg
cli
fdivl
inc
adc
imul
cltd
mov
inc
mov
popf
jns
pop
out
cmp
xchg
ret
shll
mull
lcall
xor
loope
test
and
pop
xchg
imul
push
scas
jnp,pt
andb
aas
cs
jl
stos
xorb
mov
mov
sbb
and
adc
pop
jl
inc
mov
adc
mov
adc
cwtl
mov
sahf
data16
cmp
addl
sbb
push
loopne
fistpl
test
dec
outsl
add
test
mov
jle
jne
std
loope
movq
movsb
push
push
jnp
sub
pop
lret
stc
sub
cmpsb
inc
cmc
out
jb
mov
dec
dec
add
pop
push
pusha
data16
dec
adc
sub
xor
test
scas
sub
xchg
shrl
out
test
pop
sbb
push
push
cmpsb
ficoms
jo
out
inc
xchg
or
jp
jo
call
into
scas
out
das
fdivrs
fcoml
hlt
iret
cld
stos
int
mov
mov
enter
jb
or
cltd
leave
addr16
mov
popf
pop
push
out
lea
out
mov
add
stos
jno
push
xchg
out
cmc
andl
inc
jb
xchg
leave
flds
stos
pop
sub
or
push
sti
test
adc
xor
or
fsubrs
ret
aam
das
fwait
es
je
inc
dec
sahf
std
mov
mov
imul
dec
in
dec
cmp
lret
addr16
enter
inc
sbb
mov
lods
inc
cmpsb
scas
dec
xor
push
add
cltd
cmp
cmp
test
data16
imul
cmp
inc
sbb
sahf
dec
sbb
das
jo
jl
fimull
adc
mov
inc
sahf
push
lea
stos
mov
sbb
dec
rorb
pop
incl
push
mov
jl
out
iret
popl
out
shl
xchg
or
aaa
inc
push
xchg
mov
or
xchg
fisttps
inc
push
mov
imul
fisttpll
adc
add
ret
and
sbb
xchg
out
lea
push
cmp
enter
std
sub
mov
scas
push
mov
inc
nop
aam
dec
mov
mov
popf
popa
add
mov
mov
pop
lahf
inc
fdivr
pop
xor
mov
andl
mov
push
xor
add
insb
jmp
cld
cs
adc
mov
aad
mov
mov
adc
fmulp
rcrl
pushf
sbb
lea
movsl
sub
movsb
dec
ror
cmpl
sar
cmovge
inc
jmp
adc
xchg
cmc
inc
pop
dec
jmp
mov
jle
inc
jae
dec
cmp
cmp
lods
stos
mov
out
jnp,pt
sbb
cmp
xchg
sbb
xchg
jmp
jns
add
fldt
push
push
cmp
shl
aad
hlt
mov
lods
add
add
inc
je
xlat
mov
mov
or
arpl
mov
jg
cmpsl
cmpsl
hlt
add
into
pop
in
mov
mov
jecxz
add
repz
int
enter
sarb
lahf
cmp
ret
je
mov
xlat
mov
out
cmp
dec
jno
ror
or
cltd
in
out
lods
test
fs
test
scas
mov
rcr
push
ss
push
xchg
scas
sbb
mov
dec
insl
push
fisttpll
xor
sub
sub
shrl
adc
xlat
scas
mov
mov
mov
jle
xchg
and
ljmp
mov
pop
mov
and
mov
int
mov
jo
pop
sbb
add
rcll
add
lds
hlt
and
adc
pop
sbb
xchg
ret
nop
fcomps
sbb
ljmp
js
fdivrs
pop
or
push
cmpsl
aaa
dec
xchg
sbb
test
fsubrl
push
cmp
xchg
jo
out
dec
mov
fcmovbe
cs
dec
nop
mov
mov
jo
dec
adc
adc
ret
rclb
outsb
lahf
xchg
cmp
test
add
mov
xor
mov
lods
cli
adc
mov
fbld
jp
xor
rorl
pop
rcrl
cmpsb
ficomps
xlat
sahf
lret
inc
out
sub
nop
loope
into
ss
pop
mulb
or
mov
mov
push
jl
xchg
mov
into
mov
in
sbb
imul
jecxz
mov
mov
inc
lds
mov
dec
or
push
dec
push
bound
adcl
sbb
or
xchg
xor
jle
add
or
mov
test
enter
mov
mov
scas
sub
addl
mov
int
repnz
mov
shl
jb
jb
add
cwtl
mov
push
fidivrl
iret
adc
and
lret
mov
lods
pop
cmp
pop
push
dec
addl
xor
outsl
sub
aaa
leave
adc
aad
jbe
outsl
lret
sub
cwtl
jns
fdivr
dec
in
mov
and
adc
push
add
xor
mov
leave
mov
in
cs
xor
xor
inc
loopne
dec
jb
mov
and
mov
mov
gs
pop
mov
or
lcall
push
stos
ss
jo
cmp
cli
cmp
xor
mov
lock
cmp
pushf
test
out
call
orl
hlt
xchg
test
aad
xchg
stos
iret
in
iret
push
cmp
mov
inc
fstl
test
push
test
shlb
fcompl
xor
cltd
inc
aas
sbb
pop
xlat
adc
sub
ja
mov
sahf
imul
pop
jle
insl
lcall
lock
cltd
mov
data16
addl
popa
repz
roll
insb
pop
leave
pushf
sub
shrl
lret
dec
cmpsl
pusha
and
sbb
xchg
pop
or
iret
jmp
mov
jo
je
mov
fldenv
xor
or
adc
cmpsl
jbe
iret
sbb
test
aas
cmc
sub
pop
cltd
sti
xchg
rclb
aam
sbb
sub
adc
out
mov
push
leave
inc
scas
mov
jbe
xchg
xchg
popa
sbb
lcall
outsl
push
cmp
aas
fwait
mov
sahf
jno
out
inc
and
jbe
sbb
xchg
lods
pop
enter
mov
push
push
shrl
sub
imul
fsubrp
idivb
shrl
outsl
jns
mov
inc
add
popa
push
xor
sub
loope
test
push
loop
or
lea
ret
xchg
pop
daa
mov
out
sbb
push
inc
lret
jg
add
add
mov
lock
push
sub
xchg
test
call
xchg
ljmp
nop
jno
leave
push
addb
mov
push
cmp
cmp
iret
cmc
mov
xor
inc
dec
cwtl
jb
rclb
in
in
pop
xchg
mov
pop
push
roll
xlat
add
fsts
xor
movsl
pop
sub
pop
jge
and
jl
lods
in
push
jo
stos
int
stc
push
cmp
inc
mov
xor
pop
loope
cmp
dec
mov
push
adc
mov
inc
sahf
mov
mov
xchg
pusha
xchg
sub
cmc
enter
push
in
mov
ds
jo
push
mov
lahf
jne
jp
sub
outsb
dec
xchg
or
daa
stos
sub
out
ds
cmp
lret
lahf
push
jmp
add
das
push
ret
jns
mov
add
ror
mov
and
arpl
out
push
mov
movsb
std
sub
xchg
popf
jmp
pusha
push
dec
out
xchg
sbb
shr
pop
push
das
test
cmp
int3
jno
lods
push
shrb
clc
lods
sub
cwtl
pop
jno
ljmp
adc
push
cmpl
idiv
dec
dec
dec
sahf
inc
pop
mov
cmpl
mov
lret
stc
mov
icebp
fidivrs
scas
fiadds
sbb
fiaddl
and
fdivs
outsb
rcrl
and
fnstsw
adc
xor
adc
pop
sub
jb
cld
fldenv
xor
cmp
lret
mov
gs
adc
xchg
js
subb
bound
inc
in
iret
stos
push
push
push
loope
cltd
cltd
adc
sbb
int3
and
in
out
test
dec
mov
adc
jl
mov
or
lret
dec
fwait
inc
inc
xchg
ffreep
imul
inc
cmp
arpl
mov
sbb
sub
cmp
fistpl
cwtl
jo
dec
xchg
add
cwtl
push
mov
in
pushf
movb
mov
sti
mov
mov
fcoml
sbb
dec
test
sbb
pop
shrb
js
jno
mov
ljmp
cmc
in
jp
mov
imulb
xchg
sbb
sahf
cmc
sarl
mull
jb
add
aas
cmp
jle
es
into
inc
insl
nop
int3
out
push
mov
and
xchg
mov
jmp
inc
ds
jl
mov
jle
xor
mov
mov
mov
add
in
icebp
mov
sub
ret
jnp
cmpb
xlat
test
fisttpl
dec
mov
ds
pop
adc
shll
test
mov
mov
cmc
mov
xchg
outsb
addr16
into
jne
mov
jnp
shrb
sub
cmpsl
mov
mov
mov
inc
setno
dec
rorb
pop
repnz
mov
or
pop
shrb
divb
adc
dec
lret
push
add
mov
pop
jp
test
test
xor
add
notb
inc
push
sahf
pop
sub
inc
insb
lret
pop
test
xlat
aaa
jge
test
pop
fwait
cmp
movl
jmp
leave
mov
clc
lret
fists
lret
clc
and
pop
xlat
scas
cmp
pop
and
add
pop
or
test
push
push
cmp
or
xchg
stc
add
imul
fsubs
push
mov
xchg
xor
decl
jmp
xchg
cld
rorb
data16
pusha
jl
jnp
jns
jo
test
mov
push
inc
pop
jmp
dec
adc
fwait
in
adc
jae
insl
rol
or
jle
dec
pop
test
lds
and
push
pushf
test
loopne
shrb
pop
mov
pop
sub
insb
add
mov
cs
sbb
outsl
push
pusha
lock
push
out
pop
mov
int3
gs
insb
xor
jl
shll
push
jae
lahf
push
add
stc
bound
jns
mov
fimull
rcrb
arpl
mov
pushf
add
pusha
je
xor
aam
test
mov
loop
mov
sarl
jae
ds
cld
xlat
mov
int3
movsb
push
fnstenv
in
xor
push
ss
sti
outsl
fnstenv
sub
insl
in
imul
jmp
int
jl
cld
push
shrb
jnp
xchg
testl
sbb
aaa
jne
mov
cmpsl
pop
ret
cmp
fs
int
pop
fdiv
xchg
inc
add
test
push
outsl
sbb
cmp
lea
push
andl
shll
sbb
cmp
mulb
and
rcll
notb
les
pop
or
fdivl
movsl
ljmp
outsb
dec
cmp
fwait
adc
fisttps
icebp
mov
push
cwtl
adc
lret
pop
xor
jmp
inc
shr
scas
hlt
push
sub
inc
das
pop
push
sbb
negb
dec
mov
outsl
das
sub
jle
mov
pop
mov
dec
sub
bound
xchg
iret
cmpsb
scas
sbb
xor
ss
push
lcall
pop
and
pop
iret
xor
mov
push
inc
fsub
mulb
test
cmp
jmp
or
mov
or
push
adc
push
mov
or
mov
adc
daa
mov
ljmp
sub
pop
cwtl
test
daa
dec
sub
or
addr16
hlt
inc
jo
dec
ja
or
push
std
inc
xchg
loope
icebp
mov
or
stc
xchg
pop
aam
mov
sti
hlt
clc
pop
fsub
add
lods
jecxz
cld
push
ficoms
stos
inc
test
stos
loop
pop
xor
imul
stc
pop
jmp
cwtl
dec
cmp
xchg
fcoms
xor
or
in
adc
or
stc
sub
jmp
aam
insl
mov
insb
and
popf
std
pop
push
mov
sub
cmp
pop
mov
in
lea
push
ds
mov
and
dec
mov
mov
cmp
mov
js
inc
fidivl
hlt
loop
in
mov
pop
enter
cmc
and
adc
addr16
xchg
repnz
jmp
fstpt
xor
add
test
outsb
rcrl
inc
jne
inc
xor
xchg
cmp
add
inc
pop
add
sub
loopne
icebp
imul
jl
mov
inc
cmc
in
loop
stos
nop
inc
cmpl
aaa
sarb
xor
into
les
or
loope
pop
cwtl
into
lret
fidivrl
xchg
xchg
mov
cmpsb
data16
jl
inc
ret
popf
inc
mov
mov
push
or
pop
fwait
jbe
dec
scas
xchg
mov
mov
les
mov
push
pop
fxch
mov
xor
popa
je
xor
xor
pusha
fwait
xchg
mov
std
mov
xor
loopne
jne
scas
xchg
dec
lock
xchg
jne
jle
and
divl
xor
in
pop
sbb
pop
push
inc
sbb
mov
xchg
mov
ss
xchg
push
insl
cwtl
adc
and
cltd
rol
outsb
test
jnp
and
or
xchg
mov
adc
rcrl
or
repz
or
adcb
add
movsl
adc
or
cmp
popf
js
mov
aas
ljmp
push
sub
div
mov
and
andl
rcrb
cmc
jno
mov
subl
lcall
sbb
xor
xchg
inc
outsb
jae
pop
xchg
loope
jb
pmaxub
push
mov
or
je
mov
xchg
jle
pop
push
insb
cmp
xchg
mov
repz
loope
and
mov
fs
shrl
cmp
jmp
and
stos
aaa
fnstenv
mov
sahf
cmp
adc
int
mov
pop
std
ficompl
movsl
jae
adc
scas
lods
out
jg
nop
push
push
mov
sahf
lods
mov
mov
repz
ja
cmp
and
add
xchg
cmp
push
inc
cmp
sahf
sbb
jg
cli
or
insl
push
mov
sub
enter
push
push
add
and
mov
cmp
xchg
sub
sbb
outsl
notb
add
dec
rorl
ds
cld
jb
ss
xor
sbb
mov
and
sub
and
mov
cld
sub
inc
xchg
aad
mov
mov
incl
push
push
mov
aaa
repnz
sbb
pop
cs
jecxz
int
out
pusha
xchg
stos
leave
je
test
cmp
xor
out
mov
cmp
push
fsubr
repz
lods
push
je
inc
in
pop
sahf
fsubs
pop
xor
aad
lret
cmp
jecxz
leave
enter
xor
adc
jmp
aam
fldt
in
push
leave
notb
cs
push
fbld
sbb
sbb
aad
xor
pop
mov
xchg
sbb
shlb
and
fcmovnu
jle
xor
cmp
lea
mov
xor
dec
or
aaa
je
add
add
xor
das
mov
sbb
push
cli
data16
loopne
or
mov
dec
dec
roll
arpl
inc
ss
ds
divb
loope
push
popf
mov
jbe
add
addl
jno
ret
pusha
mov
ret
cld
ljmp
jbe
xchg
adc
ficoml
fcmovnu
imulb
and
ja
jmp
mov
push
jne
in
mov
jp
and
andl
cmpl
mov
arpl
lds
xor
ret
sub
inc
or
and
dec
ds
bound
ret
jl
mov
push
cmp
xchg
jbe
add
mov
daa
adc
pop
dec
push
jle
repnz
int
in
cmp
or
loope
xchg
pop
popf
in
lods
es
cmp
idiv
and
xchg
add
xor
jbe
jmp
mov
cmp
aaa
lds
add
pop
mov
je
xor
pop
push
cmp
mov
push
pop
jg
cmp
add
test
lret
mov
mov
into
push
fsubrl
addr16
jge
lea
mov
out
ret
pop
mov
fwait
scas
pop
je
lcall
in
lods
sbb
xchg
pop
dec
sbb
pop
fmulp
push
dec
test
mov
aas
shrl
jbe
call
imul
int
or
mov
movsl
sbb
test
dec
xor
in
pushf
fdivrl
in
in
das
sbb
xor
and
jg
mov
out
into
cmp
pop
fstpl
mov
fstpt
sbb
outsb
sbb
fxch
xchg
add
rorb
shr
push
data16
xor
mov
into
xor
scas
dec
insb
lods
fcmovne
daa
jb
dec
loopne
sbb
insl
lock
cmp
mov
and
lods
enter
cmpsl
lcall
jns
sub
sub
mov
cmp
xchg
jo
add
mov
scas
scas
pop
mov
push
jae
and
sub
pop
aam
sbb
mov
inc
lods
repz
insb
mov
cwtl
test
add
sub
mov
jne
sub
je
stc
cmpsl
push
cmp
sub
adc
fcoms
push
mov
push
pop
insl
cmp
inc
xchg
inc
xor
inc
cld
test
lock
bound
roll
jecxz
mov
lret
sahf
push
stc
adc
add
sub
pop
nop
sub
add
addb
mov
xchg
sbb
mov
rorl
jle
nop
mul
cld
cs
mov
cmp
dec
inc
enter
fs
fcomps
outsl
push
lret
inc
cwtl
mov
lea
mov
pop
fidivrl
pushl
js
das
adc
adc
jge
popf
inc
stos
cwtl
xchg
in
sbb
fstl
out
jmp
shll
sti
mov
or
rorb
dec
popf
or
leave
pop
loopne
stc
cwtl
shrl
or
mov
pop
shrb
fildl
pop
icebp
jno
test
mov
or
test
rcl
adc
or
push
scas
mov
pop
adc
daa
add
jns
jp
popf
mov
arpl
pop
cmc
loopne
xor
in
xchg
mov
ret
xor
jno
xor
jg
ja
cmpsb
imulb
ljmp
mov
imulb
dec
loope
mov
movsl
aad
pop
cmp
pop
lods
cmp
arpl
xchg
mov
dec
xchg
loope
into
pop
mov
les
loop
fistl
and
dec
repz
xlat
xchg
jp
aas
cmp
and
add
rclb
hlt
stos
xchg
out
dec
add
es
cmpb
fcoml
adc
push
push
js
jl
mov
sub
shrb
mov
sbb
lahf
loope
insl
and
fs
jnp
or
andb
sbb
jecxz
push
adc
lcall
push
inc
faddl
movsb
popa
scas
xchg
push
out
xlat
or
stos
jbe
cmp
inc
leave
xor
mov
in
sub
and
inc
mov
call
adc
movsb
stos
ljmp
lods
push
adc
fmuls
mov
dec
mov
mov
and
loope
enter
mov
jg
xchg
sub
js
and
sub
mov
sbb
pushf
mov
stos
repz
push
jbe
inc
mov
jno
into
bound
aam
lods
mov
popa
mov
sahf
shl
sub
push
daa
gs
sbb
ret
leave
jns
jge
cmp
js
xchg
imul
jns
xor
loopne
loop
jg
add
fisubrs
sbb
xor
push
enter
dec
pop
orb
mov
cmp
sahf
xchg
add
cmp
and
mov
loopne
and
mov
pop
int
xchg
das
aad
stos
jns
pmulhuw
and
push
inc
xchg
mov
leave
add
leave
push
inc
mov
dec
addr16
pushf
push
icebp
mov
inc
pop
jbe
stos
aad
inc
mov
jne
inc
ja
sbb
sbb
xchg
and
fisttpl
clc
movsl
xlat
add
or
imul
dec
in
pusha
leave
mov
sub
cmpsl
and
shl
mov
pop
outsl
fiaddl
nop
jp
fstl
aam
mov
jmp
jae
add
ret
cli
pop
in
movsl
ljmp
and
inc
clc
sti
addr16
flds
xchg
daa
pop
scas
push
cli
add
pushf
dec
shrd
loopne
bound
inc
lods
pop
popa
sub
arpl
add
mov
push
les
dec
int3
add
les
jbe
push
add
xor
cmpsb
mov
loope
fisttpl
add
fsubr
push
adc
mov
push
xchg
push
es
pop
inc
lds
das
fiaddl
loop
sbb
pop
jecxz
movsl
mov
addr16
rorl
inc
inc
push
mull
adc
stos
enter
out
insl
pushf
mov
pop
sub
mov
shl
xor
push
push
leave
dec
into
cmc
and
mov
and
cmp
cli
popf
mov
not
xor
adc
mov
fiaddl
mov
leave
mov
pop
lret
mov
in
push
dec
and
fmuls
daa
xor
rorl
pusha
stos
movsl
or
mov
adc
jae
mov
das
faddl
xchg
jmp
sti
pop
mov
out
ds
sahf
fs
out
aad
and
movsb
aas
divb
dec
lea
mov
add
xchg
int3
aaa
aas
sahf
add
repz
pop
jecxz
pop
sbb
dec
mov
sub
ja
mov
fwait
leave
lahf
or
daa
sbb
rolb
cmpsl
sti
stos
adc
dec
insl
cmp
lret
inc
outsb
pop
mov
push
mov
fidivs
or
mov
lods
sbb
data16
mov
popf
mov
sub
jge
pop
xor
xor
adc
insl
mov
xchg
jle
lret
js
inc
idivl
adc
loopne
pop
mov
mov
mov
xor
outsl
aam
mov
sti
push
iret
jge
and
lods
push
push
push
push
icebp
add
cs
in
inc
nop
cs
sbb
ret
xchg
and
xor
xlat
xlat
mov
xorb
or
xchg
push
pop
sbb
loop
sub
dec
push
mov
or
sbb
js
stos
add
cmp
lods
sbb
mov
ficompl
test
mov
inc
push
push
movsl
sub
xchg
lcall
pop
mov
roll
xchg
pop
dec
jbe
mov
ja
push
cmp
xchg
gs
jns
push
test
mov
push
sub
rolb
mov
jo
sahf
add
sub
popf
int
gs
adc
out
jo
popl
add
mov
lods
fnsave
adc
lds
aad
sahf
pop
in
xchg
mov
out
fs
mov
jp
ret
loopne
das
mov
pop
fbstp
negl
aam
insl
jl
xchg
loopne
mov
mov
repz
sbb
call
lock
jne
sub
aaa
mov
rolb
movsb
dec
sub
out
and
iret
fsubl
xchg
mov
icebp
movsl
mov
packsswb
mov
popf
pop
jo
mov
rcrl
les
outsl
inc
lahf
or
mov
es
adc
ret
mov
cld
mov
rorb
icebp
dec
rol
and
in
shlb
mov
or
pop
xor
dec
sbb
jle
fisubrl
clc
pushl
jns
in
outsb
jp
jl
ljmp
loope
mov
cmpsl
push
adc
repnz
sbb
repz
inc
dec
cmp
or
add
lret
into
pop
or
inc
mov
sbb
mov
jle
push
mov
inc
popa
lea
mov
and
stos
mov
adc
push
shr
int
mov
das
inc
lock
ja
xchg
lods
jge
pop
jb
or
rclb
cmc
test
xor
cltd
mov
push
es
pop
xchg
jnp
cli
xchg
adc
xor
icebp
fildll
xchg
mov
or
rcll
mov
push
out
sbb
test
das
xchg
cmp
mov
sub
addr16
and
data16
jge
incb
psubq
sub
lea
push
clc
mov
sbb
mov
sahf
insb
rcrl
pop
in
dec
cmc
adc
sub
lahf
push
shl
dec
mov
out
push
add
sub
adc
mov
je
test
sbb
mov
data16
cmp
daa
mov
sbb
clc
adc
adc
push
out
loope
fucomi
dec
jp
push
sbb
rolb
test
inc
xor
cmp
and
pop
loop
insl
inc
mov
sub
adc
hlt
cs
inc
jae
lahf
or
or
pop
or
jns
das
js
rcrl
into
insl
mov
dec
std
testl
lods
xchg
sbb
inc
cltd
xor
jp
or
jg
lret
movb
into
stc
hlt
aaa
cmpsb
int3
mov
push
push
and
movsb
xchg
into
je
jmp
imul
fwait
mov
imul
jns
jg
sbb
add
mov
stos
pusha
cs
rolb
icebp
fiadds
fsubs
pop
ret
lods
je
flds
mov
mov
jne
enter
aad
dec
pushf
out
fwait
adc
sahf
outsl
sub
clc
xchg
out
push
or
pop
inc
add
orl
mov
test
or
pop
testl
loop
dec
arpl
mov
ja
sbb
in
pop
jecxz
or
jns
lret
pop
add
jnp
or
jb
mov
out
shll
out
outsl
lretw
testl
cmp
xchg
pop
mov
xor
in
lods
andb
jne
cmp
cmp
mov
cmpsl
xchg
push
aas
or
leave
adc
or
loop
jae
mov
or
push
test
insl
sub
test
test
mov
push
ss
mov
aam
aad
dec
fistps
xchg
mov
ljmp
cltd
push
pushf
dec
mov
inc
hlt
or
jnp
add
popf
pop
imul
andb
xor
xor
add
xor
cmp
fnstsw
mov
popf
dec
out
data16
cltd
ret
lock
push
xchg
ss
or
mov
inc
dec
inc
pop
cmc
mov
popl
mov
jno
out
cwtl
jne
mov
sbb
sub
stc
add
test
hlt
rcll
push
jb
mov
data16
outsl
adc
fildl
cmpsb
fstpt
push
ret
cltd
out
icebp
std
mov
sbb
outsl
sbb
rcrb
push
and
addb
push
fdivrl
dec
sti
test
lea
icebp
loopne
sbb
mov
jg
sbb
push
cld
fisttpl
sbb
xor
pop
mov
imul
insl
jl
push
imul
ljmp
aad
test
daa
stos
mov
jecxz
pop
xchg
mov
xchg
push
int3
cwtl
movsl
std
pop
inc
cmp
mov
out
xorb
inc
push
repnz
pop
cmc
in
popf
rclb
insb
mov
je
push
mov
or
aaa
add
bnd
pop
orb
mov
mov
aam
mov
or
call
es
outsb
push
cmp
mov
out
xchg
add
push
loope
mov
mov
sbb
lret
and
out
xchg
inc
out
fistps
test
test
xor
xchg
cwtl
add
int3
mov
dec
leave
fisubrl
jle
not
push
gs
stos
jne
ret
jecxz
clc
jp
push
iret
enter
aaa
cmc
ss
loopne
push
cmc
add
sub
cmpsl
push
test
xchg
ficompl
in
scas
lds
dec
pop
sbb
into
cmp
repnz
sbb
xorb
in
out
jnp
and
push
ja
mov
and
xor
add
adc
cld
hlt
mov
sti
xchg
mov
mov
mov
and
mov
or
adc
lea
xchg
in
pop
aam
aad
mov
mov
jmp
pop
sub
push
pop
mov
lods
or
ja
sub
or
das
pop
fistpl
repnz
sbb
fists
push
imul
aad
adc
xchg
xor
and
or
insb
loope
and
mov
pop
pusha
cmp
scas
and
aaa
je
xor
testl
xor
inc
mov
or
mov
cmc
call
xor
lret
jo
jne
xchg
js
sbb
jg
jns
int3
mov
mov
icebp
inc
pop
jae
dec
xchg
int3
loope
push
adc
hlt
aad
jne
mov
andl
in
xchg
test
das
lods
jo
mov
inc
test
imul
icebp
aam
add
and
movsl
les
jmp
repz
scas
fistps
xor
jmp
cltd
xchg
into
sti
andb
jp
mov
inc
inc
mov
jno
loopne
xor
test
and
hlt
loope
das
push
xchg
sbb
push
jmp
push
popf
es
cmp
or
push
decb
roll
push
xor
test
adc
cwtl
inc
stos
cmc
pop
mov
out
cmc
xchg
sti
movsl
jo
push
test
sbb
add
push
jae
cltd
xor
dec
cmp
fnsave
popf
cmp
mov
sti
leave
dec
jae
outsb
dec
push
add
cli
jle
lock
push
push
ret
insl
je
aam
inc
push
sbb
icebp
push
shlb
daa
dec
adc
pushf
out
cli
cmpl
mov
or
sbb
sbb
lcall
fcmovb
push
cs
neg
outsb
dec
adc
data16
enter
mov
test
pop
cld
lret
xor
sub
cmp
lods
lret
lahf
fsubl
fdiv
rorl
rclb
fscale
and
test
aad
fs
sbb
int
ja
dec
data16
popa
xchg
lret
lds
push
xchg
dec
pop
or
pop
mov
cmp
xchg
xorl
ja
imul
or
icebp
shlb
mov
xchg
dec
xchg
les
cs
cmpsb
addr16
jecxz,pt
stos
xor
shlb
out
clc
mov
cmc
in
xor
jmp
shrl
sti
les
sbb
call
in
sbb
pop
lock
dec
test
js
xchg
lods
xor
mov
add
insl
xchg
das
jmp
xor
jnp
in
loopne
xchg
ret
push
sbb
out
ret
in
mov
fxch
xchg
mov
mov
jb
or
push
jge
mov
fs
sbb
inc
cmp
mov
adc
test
testl
add
mov
mov
sarb
sub
loop
stc
push
daa
es
aas
sahf
pop
pop
xor
xor
mov
imul
les
dec
lods
pop
das
cmp
stc
and
lahf
mov
int
xor
lea
mov
pushf
or
shl
mov
mov
jae
mov
int3
sahf
dec
mov
insb
inc
jecxz
mov
pop
xchg
mov
pop
stc
jo
fsubrs
cmp
aas
sbb
ret
int
sub
sahf
mov
insb
ficoml
cwtl
sarb
pop
outsl
nop
cmpsl
push
jnp
push
xorb
mov
or
pusha
int3
ja
mov
cmpsl
movsl
shll
lods
or
xchg
stos
inc
adc
mov
mov
xor
popa
addr16
inc
and
lea
inc
mov
lods
or
pop
jmp
adc
pop
js
adc
mov
arpl
rclb
add
bound
add
cmp
cmp
adc
and
loopne
sahf
xchg
pop
and
push
dec
mov
sbb
mov
out
pop
nop
les
shll
loopne
and
icebp
popa
enter
adc
cld
mov
or
or
stos
xor
ss
lret
mov
pushf
rclb
push
faddp
sub
xchg
fidivrs
xlat
mov
mov
and
test
sub
fnsave
imull
ds
data16
pusha
pop
inc
es
push
sub
test
mov
lods
test
add
cs
dec
pop
mov
pop
push
lahf
add
dec
sub
in
mov
test
jle
mov
jb
pop
test
out
xchg
add
into
mov
xor
cmp
imul
test
and
subl
das
inc
xor
decl
xchg
jge
xchg
ss
sahf
mov
movsb
ja
sarl
cmp
dec
push
mov
test
push
fisubrl
push
sub
shrl
jle
mov
loopne
pop
or
insl
dec
xlat
pop
cmp
dec
idivl
sub
movsb
ret
adc
ror
lcall
sub
shll
dec
lock
in
xchg
es
add
stos
jmp
outsb
and
aam
adc
jmp
and
xor
xor
and
ret
je
mov
mov
adc
xchg
pop
mov
push
xchg
push
add
jl
pop
jne
sub
mov
pop
loop
sub
inc
add
xor
mov
test
sbb
push
dec
inc
stc
imul
shll
lock
roll
mov
stc
scas
and
add
fwait
mov
mov
mov
testl
jne
push
pop
and
movsl
loopew
pop
mov
mov
sbb
adcl
push
mov
sub
sbb
mov
xlat
mov
mov
fistpl
loopne
pop
mov
pop
jno
mov
gs
fbld
cli
out
test
cld
mov
pop
stos
push
jmp
cltd
jmp
mov
scas
mov
xchg
clc
pop
sar
aas
dec
adc
push
sub
sbb
dec
loopne
jne
mov
sub
push
mov
jbe
imulb
adc
stos
rol
inc
cltd
cli
mov
inc
popa
jae
adc
pop
adc
pop
daa
sub
inc
out
icebp
es
xchg
mov
cs
out
jb
jl
jns
inc
in
ljmp
push
inc
shrl
out
pop
mov
loop
jp
jbe
and
mov
jg
movsb
xchg
xlat
push
lods
arpl
push
das
inc
mov
xor
std
or
inc
pop
mov
jge
aas
fistl
pop
jge
jbe
xchg
lcall
repz
xor
bound
in
push
jge
pop
mov
sub
out
mov
cld
adc
jbe
imul
xchg
cli
stos
push
mov
dec
pop
lods
cs
mov
xchg
xchg
adc
xor
push
loop
loope
es
mov
movsl
mov
popf
jge
push
js
lret
xlat
lods
popa
fcomps
add
shlb
je
push
mov
lahf
ror
test
test
xchg
inc
jmp
andw
jns
jge
mov
pop
jle
push
lock
xchg
add
mov
cltd
cmp
das
add
sahf
dec
imul
add
inc
cmp
mov
jns
sub
sub
imul
data16
inc
jle
push
or
repz
loop
movsb
ss
push
fdivrs
pop
or
rcrl
push
adc
jae
cmc
add
sbbb
cmpsl
or
mov
sub
xor
xchg
mov
enter
push
xchg
dec
or
mov
sbb
mov
lods
movsb
in
int
mov
mov
push
bound
mov
lods
fldl
fwait
and
loope
push
push
sbb
xlat
mov
je
cld
xlat
mov
mov
repnz
adc
int3
call
movsb
in
jmp
or
insl
ljmp
popf
cmpsl
leave
mov
call
xlat
ljmp
pusha
adc
in
push
scas
dec
arpl
pop
adcl
add
and
mov
aas
scas
sbb
jg
mov
loope
arpl
or
or
jns
rcl
ljmp
add
mov
cli
xor
jecxz
push
sbb
rclb
pop
xchg
add
clc
orb
mov
cli
andl
adc
pop
jo
fisubl
adc
mov
shl
add
adc
dec
or
lds
mul
sub
cmp
push
sub
mov
dec
insl
mov
cld
test
rcrl
or
ror
cltd
ret
cmp
test
cmp
cmpsl
push
lock
aas
fxch
pop
push
sub
inc
in
arpl
decl
xor
into
inc
aam
daa
stc
in
jo
xor
mov
jnp
or
jo
and
push
cmc
dec
or
lret
sub
or
jge
cmpsb
repz
jp
and
xor
push
enter
adc
add
shll
push
sbb
mov
add
clc
jle
pop
mov
or
pushf
mov
sarb
andl
std
xchg
push
push
pop
arpl
test
mov
jge
pop
push
popf
mov
fs
scas
cwtl
je
cld
xor
lret
sbbl
iret
repnz
xchg
adc
repnz
notb
push
mov
pop
aam
sbb
xlat
cmp
sub
jne
stos
push
sarb
imul
xorb
fsubr
mov
repnz
push
movsb
jo
std
push
cmp
push
pop
pop
stc
jmp
and
in
mov
notl
jp
testl
add
push
push
and
xor
sbb
jne
aaa
ret
aaa
cmc
pop
out
adc
jnp
test
mov
repnz
out
mov
pop
fucomip
pop
adc
jp
loop
sbb
movw
inc
lret
push
add
mov
stos
mov
arpl
xchg
loopne
shl
aaa
daa
int3
in
adc
icebp
mov
sbb
pop
or
shll
repnz
jmp
out
push
cmp
mov
xor
dec
pusha
sbbb
call
pusha
adc
and
cmc
xchg
mov
cli
jge
or
shll
iret
and
fidivrs
inc
and
jmp
sbb
dec
xor
inc
sbb
cmp
imul
jecxz
xlat
pop
sub
inc
mov
jecxz
gs
mov
call
inc
daa
jmp
jge
leave
jbe
lahf
lods
push
push
jnp
int
lock
push
leave
mov
imul
or
xor
call
xchg
iret
ja
call
stc
and
mov
push
xchg
js
ljmp
xchg
outsb
jne
xchg
jb
dec
jb
mov
lods
roll
fs
or
lret
sbb
data16
jb
push
dec
stos
loop
or
aad
dec
das
xor
xchg
je
aas
push
or
push
cltd
push
test
call
ret
repnz
xchg
add
push
shll
cmp
add
iret
js
jmp
xchg
add
xor
fiadds
cmpsb
fwait
insl
push
mov
orb
mov
mov
sbb
xchg
cmp
clc
imull
sbb
adc
fildll
jge
mov
sub
mov
xor
xor
rcll
adc
sub
loope
xor
jae
aas
mov
into
mov
sub
push
sahf
inc
xor
cmp
js
dec
ficoms
jbe
popf
rol
mov
clc
xchg
mov
mov
std
leave
js
stos
mov
pop
xchg
inc
leave
or
xor
lcall
dec
xchg
dec
mov
mov
mov
inc
sub
shr
int
xor
arpl
or
add
xchg
push
mov
add
sub
shl
mov
cld
ds
xchg
lahf
scas
jmp
add
xchg
sub
int
pop
cmp
mov
pop
sbb
mov
and
mov
push
jecxz
outsb
insl
add
pop
xor
push
fucomi
sub
insb
sub
and
pusha
movsbl
add
fwait
icebp
testb
outsb
pop
mov
dec
ret
imul
add
repz
xor
and
call
mov
rcrl
sub
dec
pop
negb
mov
stos
cmc
or
dec
xchg
pop
mov
mov
jmp
dec
cmpsb
mov
popl
jmp
das
sub
mov
es
into
sbb
xchg
int3
adc
pop
das
orl
adc
and
fidivl
mov
mov
jns
push
pop
jmp
xchg
sub
shrl
pushf
dec
stc
lea
mov
push
or
sub
add
cmp
lods
cmp
stc
sarb
jle
stos
mov
cltd
sub
call
sub
mov
cli
repnz
ret
xchg
cmp
repnz
xor
jbe
rclb
fsubp
lcall
xchg
mov
xor
push
push
sarl
lret
popa
inc
shrb
add
test
std
and
sbb
inc
sub
pop
pop
cs
sbbl
idivl
test
js
inc
push
push
lods
lret
cmp
ds
adc
xchg
add
mov
out
fimuls
inc
insl
jp
stos
cmp
stos
or
sahf
or
push
mov
mov
pop
pop
test
clc
cmp
mov
dec
std
pop
mov
pop
cwtl
cmc
push
lahf
call
je
push
mov
das
sub
repz
push
add
add
jns
push
sub
sbb
push
fmull
adc
inc
jg
cwtl
mov
inc
out
cwtl
sbb
xchg
jmp
jg
and
xor
lock
addr16
jbe
push
arpl
fcom
sbb
out
push
fisubl
addr16
sub
ds
add
adcl
mov
out
push
movsb
stos
or
scas
xchg
repnz
pop
fcomps
xchg
shlb
lahf
xchg
nop
fs
and
or
test
sbb
ss
xor
inc
push
sub
pusha
aam
loopne
insb
fildll
pop
ficoml
js
shl
jo
lcall
jnp
int3
test
test
dec
mov
jmp
cs
fimull
add
arpl
mov
ja
in
mov
in
mov
scas
dec
sbb
test
sbb
mov
out
jge
inc
in
lea
popf
lret
dec
mov
es
movsl
vmaskmovdqu
icebp
notl
add
lahf
fmuls
fbld
mov
adc
adc
rol
lock
lock
xor
outsb
pop
lea
lock
sbb
xorb
dec
mov
ljmp
mov
cmp
je
lods
adc
dec
sahf
xchg
loopne
jb
rorb
mov
loope
out
cmpl
sub
sbb
mov
jne
cltd
xchg
pushf
sbb
pushf
fdivrl
xchg
cmp
xchg
add
xchg
js
addb
scas
push
jg
mov
repz
lods
sub
mov
jecxz
ficoms
out
xor
pop
sub
ljmp
popf
sub
cmp
aaa
mov
push
fnstsw
fsubl
sub
mov
movsl
sti
sub
xor
fs
sbb
adc
mov
adc
xor
mov
cli
into
stos
add
clc
push
or
xchg
lock
out
jae
les
lret
out
int
sub
and
and
test
jb
popf
jmp
pop
fisttpll
sarl
lcall
shll
and
fildll
mov
jp
imul
pusha
cmp
inc
lea
or
sbb
pop
jp
or
popf
or
mov
jo
adc
push
aas
std
pushf
push
into
cltd
lods
call
sub
xchg
mov
lock
daa
xor
ret
shl
mov
int
jmp
jae
push
ds
xchg
dec
sbb
dec
adc
adc
enter
icebp
dec
lods
xchg
fcoms
and
orb
push
mov
mov
sahf
unpcklps
iret
je
jo
and
push
stos
mov
adc
hlt
adc
mov
divl
xchg
fldt
out
mov
lods
aad
int3
sahf
repnz
dec
jl
loope
adc
mov
adc
aad
push
xor
negl
out
cltd
ficoms
dec
xchg
test
ljmp
or
rol
ja
jnp
jno
mov
fisttpl
inc
js
ss
mov
movsl
sbb
sbb
mov
push
out
cs
lahf
nop
push
icebp
gs
push
xchg
add
jb
neg
stos
loopne
cmp
mov
imul
xchg
sbb
sbb
dec
popa
xchg
lods
cmp
mov
xchg
jns
sbb
lret
mov
sub
mov
and
ret
jl
lods
cmpsl
mov
mov
sub
mov
inc
daa
aad
pop
mov
lret
cmp
cmpsl
fnsave
lret
lock
sarl
int
mov
mov
lret
in
imul
imul
incl
mov
pop
fs
arpl
push
inc
insb
sbb
xchg
fisubl
or
pop
fbstp
ret
fldenv
pop
ret
xor
sti
nop
pop
int
jns
xchg
and
loope
out
mov
cmp
sbbb
shr
add
dec
test
lea
mov
jae
out
movsl
addb
add
cmp
pop
lds
adc
dec
dec
inc
mov
mov
je
outsl
or
mov
inc
pop
pushf
clc
mov
and
and
dec
insb
sub
lods
cltd
mov
lret
ds
inc
pop
xchg
pop
push
mov
scas
pop
into
imul
mov
loop
ja
dec
push
cltd
cmp
xchg
out
loope
pop
dec
arpl
ja
or
xchg
cmpsb
out
imul
das
or
pop
or
add
push
cmc
cwtl
mov
mov
std
leave
lret
cmp
fcoml
inc
popa
sub
push
std
mov
dec
daa
xchg
push
jns
js
or
sub
push
xor
sbb
outsl
hlt
sub
clc
mov
mov
xchg
sub
mov
pushf
ss
mov
shrb
inc
loope
test
jne
add
mov
cwtl
in
sahf
lret
cmp
enter
xor
out
xor
enter
and
lret
addr16
movl
jg
xchg
int3
sbb
cs
int3
subb
inc
repnz
mov
out
ljmp
mov
mov
fisubrl
stos
fbld
aam
mov
stc
jae
into
daa
xor
add
jo
sbb
sub
jecxz
popf
pusha
rcrb
mov
cs
test
rcr
orl
and
mov
inc
adc
push
or
scas
scas
test
push
push
cmp
xorb
adc
xor
ss
cmovl
in
jbe
fiaddl
xor
push
sbb
movsl
jne
sub
stos
fucom
fnstenv
lret
lahf
xor
jnp
ss
mov
xor
call
sub
fwait
jnp
pop
dec
loopne
gs
xchg
jecxz
sub
daa
xchg
mov
pop
push
stc
xor
push
dec
sub
mov
icebp
filds
adc
dec
es
sub
mov
popf
aad
int
stc
pop
inc
xchg
and
in
xor
adc
xor
inc
add
mov
mov
sbb
test
pop
ret
fistl
mov
cmp
icebp
pop
jbe
in
call
daa
lods
or
lods
inc
lret
cmpl
jmp
jle
rcrl
test
lcall
outsl
lahf
sub
mov
inc
adc
rcl
or
std
pop
xor
jmp
jecxz
mov
repnz
ss
mov
add
movsl
cltd
popa
push
outsl
xchg
ss
scas
push
push
push
sbb
negl
pop
xchg
jne
dec
in
ja
jnp
xchg
lock
and
jl
xchg
cli
jo
cmp
test
dec
adc
filds
lea
mov
cmpsl
fucom
dec
std
mov
mov
aas
xor
xchg
or
inc
leave
sbb
lods
jecxz
cmpsl
xor
and
lods
mov
hlt
mov
lds
test
insl
xchg
mov
ror
lock
sbb
cmp
data16
mov
add
cmp
fs
insl
fcomps
loope
jge
lahf
stos
mov
jge
xor
and
icebp
pusha
push
push
sub
lahf
cltd
fwait
int3
sbb
dec
iret
add
dec
cmp
dec
xor
scas
aad
adc
xor
int
ss
int
mov
outsb
testl
cmp
sahf
mov
insl
push
ja
gs
jge
hlt
fisttpll
ret
sub
ss
lods
jb
or
lret
push
adc
pusha
dec
mov
in
ds
jae
mov
or
fldln2
push
mov
inc
cs
jg
shll
xchg
mov
and
cwtl
lods
cmpl
insl
xor
add
cmc
add
inc
pushf
push
sub
sub
mov
icebp
mov
push
mov
test
int
imul
clc
movsb
enter
lahf
test
sbb
mov
icebp
repnz
push
shrb
jecxz
xlat
lret
lret
lds
xor
xor
js
leave
imul
mov
xchg
sbb
fsts
xchg
lret
xchg
mov
jge
cli
pop
mov
into
mov
hlt
ret
dec
mov
pusha
cmp
sub
sub
adc
rcrb
cmpsl
mul
inc
scas
je
loope
dec
aam
sub
mov
cmp
jecxz
or
mov
cmp
daa
fsubs
cli
mov
out
xor
adc
mov
jge
movl
inc
pop
addr16
imul
mov
or
daa
mov
imul
popf
aaa
movsb
push
push
call
movsb
test
jge
lcall
andb
dec
ss
xchg
pop
repz
mov
mov
out
adc
popa
jbe
inc
insl
pop
movsl
fcompl
xchg
or
mov
imul
cmp
mov
dec
xor
js
fs
or
iret
jmp
or
xor
mov
push
push
pop
cwtl
jne
pop
ljmp
dec
aad
orb
mov
sbb
sarb
out
push
aad
shl
iret
nop
imul
in
lea
or
sub
jnp
shll
daa
lcall
repnz
int
out
mov
out
push
mov
lret
repz
into
xchg
lods
mov
or
arpl
ja
in
mov
daa
pushf
mov
xchg
nop
insb
not
movsl
or
and
iret
mov
pop
int
xor
movsl
das
fadds
xor
aaa
jmp
mov
mov
adc
add
inc
inc
push
mov
es
cmpb
loop
push
dec
pop
ror
xchg
xor
sub
lock
mov
nop
fwait
push
scas
gs
fsubl
xchg
inc
popa
mov
and
inc
pop
mov
push
cmc
sbb
mov
mov
iret
pop
das
mul
in
je
dec
push
xor
scas
scas
cmp
lret
out
fadds
insb
pop
sub
jmp
pop
jae
insb
pop
sahf
in
add
push
cltd
arpl
aas
psubusb
and
mov
jg
sub
sbb
ljmp
mov
push
out
inc
xor
inc
mov
lods
xor
add
add
popa
push
mov
data16
and
mov
test
fcoms
cmp
je
add
orb
sbb
fcoms
std
cmp
test
fcoms
insb
add
je
mov
icebp
inc
int
mov
neg
adc
fs
push
or
xchg
lcall
hlt
cwtl
push
outsb
incb
add
arpl
push
cmpsb
cmp
pop
pushl
jb
out
imul
jge
jle
sbb
aad
mov
mov
fdivrs
mov
adcb
mov
subb
mov
adc
cmp
adc
aas
add
fistl
fiadds
repz
xchg
jne
mov
shll
xchg
ss
fnstenv
lcall
sbb
cwtl
or
in
rcr
test
mov
leave
nop
fstpt
add
test
ret
adc
pop
xchg
sbb
mov
outsl
aad
dec
popf
xchg
adc
xor
testl
dec
repnz
ja
pop
cwtl
jnp
xchg
jns
loope
dec
sti
das
jnp
lds
xor
sub
lds
xor
cmpsl
jp
popa
loop
int
pop
xchg
daa
sub
and
mov
idivl
cmp
enter
adc
sarb
fsubl
out
dec
lcall
fcmovb
mov
scas
fucomi
xchg
aas
cmpsb
mov
mov
iret
inc
dec
mov
sbb
adc
out
lahf
shrl
mov
ret
mov
out
in
out
jle
shr
push
pop
aas
cld
int3
jmp
push
lcall
out
aas
lock
enter
idivl
test
inc
fildl
sarb
and
add
push
das
fstl
scas
in
rorb
xchg
fidivrl
xchg
outsl
xor
and
jle
ss
push
pop
out
test
movsl
mov
push
test
xor
cmpsb
mov
push
outsb
jne
mov
lcall
dec
mov
dec
pop
fwait
sub
cwtl
ret
aam
and
adc
cmp
aaa
push
test
adc
out
cld
sub
int3
loop
mov
data16
pop
aad
add
and
cmp
jp
push
shrb
pop
nop
and
cmpsl
lods
bswap
repnz
pushw
pop
push
pop
and
test
ret
out
lods
mov
adc
loopne
adc
hlt
mov
mov
insl
fwait
loope
push
xchg
mov
out
dec
mov
pusha
xchg
enter
icebp
js
and
cmpsb
lds
in
aas
out
ror
xchg
lea
shl
scas
in
ja
lcall
mov
inc
jg
cmp
outsb
ds
push
ret
or
out
mov
gs
js
xor
lods
fcoml
sub
out
cld
pop
sbb
cmp
sub
jge
ss
insl
mov
sti
fadd
dec
cmpsb
and
sbb
pop
loop
js
mov
in
and
cmpsb
or
add
mov
fistpl
mov
cmpsb
in
mov
sub
std
push
mov
lcall
dec
adc
mov
xor
outsb
aad
rcrl
sarl
lahf
inc
push
pusha
sub
xchg
xchg
inc
stc
pop
ja
mov
outsb
or
add
aam
pop
fmul
call
sarb
mov
jbe
test
loope
cmp
lods
movsb
push
push
icebp
mov
jecxz
imul
push
adc
cmp
shlb
fdiv
add
inc
out
jno
mov
pushf
in
imul
ljmp
cmp
mov
pop
inc
push
push
into
lods
insl
xchg
adcb
dec
les
and
dec
in
loopne
sbb
sub
xor
rclb
cld
test
mov
popa
jbe
out
aam
sbb
adc
dec
stc
sbb
pop
jne
mov
ljmp
aaa
mov
pusha
fisubrl
cmp
lret
loopne
mov
into
sbb
repz
dec
pop
mov
pop
xchg
ss
ret
cs
imul
out
mov
aam
orb
mov
mov
fimull
js
pop
call
sbb
lret
ret
inc
cmp
ret
sbb
jb
aaa
sub
lahf
cmp
jmp
xlat
and
stc
mov
jns
rorb
and
inc
xchg
addr16
cmp
pop
dec
dec
movsb
add
inc
push
cwtl
stos
push
mov
das
aaa
aas
jno
sub
xchg
jo
inc
ljmp
xchg
cmp
pop
xchg
mov
and
push
loopne
cmp
loopne
lods
push
jno
loop
adc
dec
fldenv
hlt
lahf
aaa
or
jo
cmpsl
dec
add
mov
fsubrl
xchg
xchg
or
push
test
xchg
stos
dec
addb
jo
jb
or
sub
jmp
iret
mov
loope
mov
mov
dec
rcl
clc
fstl
lods
pop
popa
mov
mull
add
arpl
aad
sahf
in
cmp
push
xor
imul
or
xor
jle
out
sahf
sub
jp
add
test
ret
mov
and
je
js
movsb
fcomp
mov
inc
mov
shll
mov
fisttps
xchg
xor
aas
mov
inc
cld
fwait
paddb
insl
imulb
clc
cmp
mov
cmp
out
ljmp
cmpsl
push
in
int3
mov
mov
cmc
push
dec
lret
lds
xor
jp
out
or
or
xor
bound
inc
cmp
test
out
outsb
mov
xor
inc
ljmp
push
sti
out
cmc
out
gs
scas
xchg
xor
push
inc
push
lock
pop
fists
or
fldcw
push
call
push
std
js
xlat
shrb
dec
push
inc
insl
inc
jb
jae
mov
inc
ljmp
out
ja
jo
mov
mov
fsub
dec
sbb
shl
pop
inc
mov
fiaddl
ret
insl
push
xchg
mov
aas
dec
sbb
pop
adc
mov
out
adc
mov
add
lds
hlt
and
jle
mov
out
movsl
pushf
icebp
ret
mov
into
pop
mov
std
xlat
mov
dec
ficomps
dec
repnz
cltd
inc
jne
leave
sbb
ret
cwtl
scas
mov
popa
xor
inc
mov
fst
out
mov
xor
sbb
push
imul
test
pop
mov
adc
in
xchg
rcrl
lods
sbb
lds
mov
ret
mov
ret
test
push
cmc
mov
adcl
inc
or
aad
mov
icebp
dec
jle
repz
popl
inc
cltd
loopw
in
fs
test
in
adc
xchg
in
pusha
push
popf
mov
sub
jae
adcl
pop
mov
fwait
popf
cmp
add
jp
sub
jo
mov
dec
xor
xor
nop
push
fnstenv
mov
sti
jmp
andl
xchg
mov
cmp
cwtl
das
jne
out
dec
pop
inc
ja
fstpt
outsb
sub
dec
xor
lcall
std
push
outsl
je
movsb
movsb
xchg
in
cmpsb
addr16
clc
fiaddl
add
pusha
and
mov
inc
and
into
ljmp
dec
dec
dec
es
cmp
sub
push
jae
dec
out
add
mov
xchg
sbb
test
adc
xchg
push
pop
mov
xor
pop
and
mov
js
sbb
inc
hlt
jg
push
dec
sarl
lea
test
repz
nop
inc
fldt
push
pop
push
pop
pop
push
cmp
sub
mov
sti
jp
cmp
fwait
pop
xchg
dec
push
call
cmpsl
daa
jb
jl
and
mov
jp
imul
cmpsl
into
aas
xor
mov
inc
mov
inc
adc
lds
jge
jecxz
push
sub
cmp
xchg
adc
aaa
ret
jl
sbb
fcmovb
mov
rcrb
adc
mov
pop
jbe
mov
sbb
outsl
stos
sub
lret
add
or
jmp
mov
xchg
sbb
shll
mov
adc
or
js
xor
dec
sub
push
jb
data16
mov
popa
ret
push
insb
mov
call
inc
sahf
repnz
dec
push
xor
pop
iret
mov
stos
stos
shll
jns
xchg
inc
sub
jmp
jne
jae
sahf
lret
jp
into
sub
mov
call
imull
and
rcl
mov
mov
xchg
push
das
movsl
pop
adc
dec
mov
mov
push
pop
ficoms
inc
jo
and
pusha
xor
pop
call
mov
shll
ficoml
in
cli
shll
pop
mov
inc
scas
fs
clc
dec
mov
es
push
imul
loope
loop
sub
adc
lcall
jo
xchg
popa
flds
shlb
push
aad
fucomi
pop
push
popa
jp
pusha
call
pop
and
movsl
sbb
dec
push
cld
lahf
inc
mov
xchg
cwtd
add
popa
push
fstps
pop
addr16
mov
out
add
es
outsb
push
leave
fnsave
data16
inc
jl
add
clc
shl
mov
nop
mov
mov
xchg
dec
mov
sub
aad
or
fcmovnbe
aas
pop
add
mov
add
subb
pop
mov
push
sbbb
lret
sbbb
mov
out
divl
test
mov
inc
lret
in
jle
mov
pop
test
popa
sub
jl
rorb
sbb
call
xchg
pushf
lahf
sub
xchg
in
jg
ret
jl
pop
mov
or
sarb
insl
adc
jnp
pop
fsts
hlt
mov
inc
cmc
roll
add
in
inc
out
mov
int3
insl
loop
xor
pop
popa
mov
ror
or
jecxz
ficomps
data16
cmp
cmp
movntq
jo
enter
cli
or
enter
mov
mov
fisubrs
loope
sub
fwait
adc
inc
cmpsl
jle
dec
fmul
rcr
shll
lods
outsl
lcall
enter
sub
int3
mov
mov
jp
daa
repz
outsl
add
in
roll
iret
sbb
mov
push
cld
je
lahf
popf
cld
xor
push
daa
repnz
adc
std
xchg
mov
and
push
repz
dec
lea
jno
into
push
push
mov
arpl
pusha
jmp
iret
loop
xor
fnstsw
test
sbb
push
lods
repnz
addb
loop
sbb
call
loop
mov
push
shlb
rcr
add
cmc
movsb
push
add
sbb
push
ficoml
dec
inc
sbb
jo
mov
adc
sub
cmpsl
sub
cmp
scas
inc
sbb
pop
scas
cmp
jo
jge
xlat
inc
sub
xor
xchg
jmp
mov
roll
or
or
test
lods
mov
inc
cmp
mov
in
movsl
lods
sbb
inc
fists
out
ret
pop
movsb
and
call
xor
lods
scas
adc
pop
push
outsb
inc
loop
addr16
push
jae
or
or
mov
in
push
jne
mov
sahf
pushf
cmpsb
out
and
cmp
push
iret
xor
sti
jns
loop
je
pop
shrl
push
das
sub
movsb
jg
jae
fisttpl
dec
sub
aam
sahf
movsl
enter
dec
movsl
mov
es
lret
jle
inc
addr16
push
sub
cld
nop
mov
add
dec
mov
out
shl
pop
out
jg
ljmp
cmp
subl
mov
fs
lret
outsb
add
jne
add
int3
cmpsl
jmp
and
adc
push
push
mov
sbb
mov
outsb
test
lcall
cmp
or
jmp
pushaw
cmp
aad
add
or
pop
sbb
push
or
pop
fwait
or
sub
les
scas
testb
out
into
jno
imul
xchg
inc
jbe
xchg
add
addr16
ret
ljmp
outsl
cmp
out
cmc
lea
mov
les
divl
cmpsb
or
mov
mov
bnd
or
cmp
cmp
mov
xor
jnp
mov
out
push
stos
notl
jle
rorl
mov
dec
cmp
hlt
xchg
xor
inc
ret
rol
pop
or
fistl
xchg
ret
xor
jl
adc
sub
rcrb
jne,pn
cmp
cmp
and
int
bound
pop
in
lahf
adc
mov
sub
sbbl
sahf
mov
or
pop
xchg
ret
or
mov
jbe
inc
vhaddps
mov
lcall
inc
push
cmp
xor
xchg
fs
ja
lea
shl
enter
idivb
push
or
cli
imul
cmp
mov
testl
imull
xorl
in
lret
outsb
jbe
push
lret
push
dec
adc
loope
sbbl
shl
jae
ret
xchg
out
sahf
aas
cmp
bound
mov
bound
ja
jmp
mov
arpl
push
add
int
imull
add
aas
mov
xchg
cmp
sti
cmovnp
adcb
sbb
and
dec
fnstcw
push
adc
fs
daa
inc
adc
divl
stos
sub
sbb
les
lods
pop
cwtl
inc
push
stos
push
flds
cli
outsw
popf
lcall
subl
and
lods
dec
into
dec
icebp
jb
xor
push
movsl
mov
scas
movsb
bound
enter
mov
mov
xchg
gs
cmp
loop
xor
pop
push
cmp
lahf
pop
mov
xchg
or
mov
test
sbb
call
shl
fimuls
leave
xorb
outsb
sti
cli
enter
jae
jge
cld
pop
xchg
mov
lret
inc
bound
push
shlb
mov
icebp
adc
gs
outsb
ljmp
fsubrs
push
rcrl
xor
cwtl
or
mov
movsl
adc
pop
push
mov
cli
fnstcw
bound
jg
sbb
push
cltd
cmp
addl
xchg
lods
jne
mov
fs
lahf
sub
mov
mov
int
sub
call
mov
or
or
xchg
fsubp
push
insb
cmpsb
push
addr16
arpl
pop
or
cmp
sub
dec
out
mov
push
xlat
mov
imul
adc
cmc
adc
loopne
xor
xor
data16
call
ret
push
pop
mov
cmp
sahf
mov
cmpsb
pop
add
and
repz
repnz
lret
sbb
aam
cwtl
test
dec
cmp
xor
cmp
ret
sbbb
or
test
jmp
popa
inc
dec
pop
loope
imull
mov
test
pop
add
xchg
push
aam
inc
inc
mov
ss
inc
insb
pop
lret
movsb
cmp
dec
xorl
push
xchg
push
mov
fsubl
ljmp
inc
mov
push
cs
fldt
xchg
int
cmp
pop
mov
movsb
test
scas
fisttpl
xchg
cmpsl
mov
cmp
xlat
mov
xor
mov
dec
lods
in
cmc
adcb
push
in
pushw
mov
or
mov
mov
stos
repz
int
in
pop
lea
and
stc
stc
jno
popf
xchg
push
out
xor
inc
cltd
in
shll
pusha
lea
jle
dec
push
daa
mov
notb
jp
push
mov
and
pop
insb
in
inc
jbe
mov
push
inc
fsubl
aas
add
dec
daa
push
sahf
mov
jb
nop
push
push
pop
rcr
shrl
scas
inc
or
outsb
movsb
mov
jo
push
rcl
loope
inc
cmpl
fcmovnu
cmpsl
stos
ljmp
in
and
mov
mov
cltd
sub
push
out
leave
or
mov
jmp
pushf
pop
xchg
sbb
es
lock
arpl
lds
lds
mov
loope
ljmp
dec
xchg
jnp
mov
cmp
mov
ret
xchg
lcall
je
daa
mov
sti
cltd
aaa
shl
sarl
scas
adc
adc
inc
jb
inc
mov
pushl
call
sahf
dec
arpl
in
into
popf
insl
divl
jns
mov
mov
sti
or
mov
ret
cmp
cmp
ja
cmp
sbb
js
mov
scas
mov
push
add
shll
sbb
add
jns
mov
cltd
lods
fstp
cld
push
int
push
xchg
aad
js
int
mov
repz
jecxz
sahf
fbld
push
cmpsl
adc
or
inc
mov
push
mov
fs
in
cmp
daa
add
sub
mov
pop
and
jb
inc
jns
xor
data16
xchg
cli
or
and
jp
pop
push
jge
stos
adc
add
iret
scas
jle
or
jb
jp
and
jb
or
inc
movsl
mov
mov
and
cmp
in
push
cmp
popa
sbb
mov
das
push
jo
mov
push
mov
xorl
roll
scas
ja
lret
ljmp
add
lret
sbb
jae
adc
scas
xor
cmp
lahf
xchg
rcr
mov
or
xchg
data16
pop
jecxz
adc
jae
cmp
repz
jecxz
pop
pop
sti
pop
or
int
xchg
mov
and
fcompl
jp
fdivrs
shlb
push
sti
mov
xor
leave
shr
mov
push
sbb
mov
add
stc
push
dec
xchg
or
nop
add
fcmovnb
inc
stos
imul
in
cmp
sbb
sub
out
add
sub
cmp
stos
cmp
andb
pop
xlat
bound
sbb
xchg
sub
inc
out
xchg
sub
jne
pop
subb
and
sarb
ret
xor
call
addb
xor
cmc
enter
pop
lods
mov
sub
mov
call
dec
sti
pop
dec
inc
test
cmp
xchg
mov
jmp
popf
dec
pop
cld
sbb
std
mov
mov
pop
push
popf
xor
je
cltd
out
arpl
addr16
jmp
in
icebp
sbb
outsl
xchg
push
pop
rcll
pop
aaa
mov
adc
lcall
pop
js
cmc
cs
dec
dec
test
lds
jle
rolb
clc
push
dec
cmpsb
das
cmpsb
clc
loop
ljmp
jae
cmp
ljmp
dec
pop
out
ja
cmp
hlt
ret
hlt
mov
loope
aam
adc
xchg
mov
arpl
pop
add
fcomps
lcall
lea
in
mov
xchg
push
pop
fildl
dec
xlat
jno
cmp
or
xor
shlb
pop
push
and
jbe
adc
push
cmpsb
xchg
arpl
mov
je
loope
pushf
xor
xor
add
dec
std
push
add
fcomps
aaa
inc
adc
ja
sbb
es
fimuls
inc
jl
jns
mov
out
jb
outsl
cmp
into
pop
sub
adc
mov
mov
fucomp
xlat
or
sbb
mov
jbe
movsl
nop
outsl
jle
es
mov
mov
sub
out
icebp
loope
test
mov
jbe
daa
jmp
add
fs
das
sub
push
lock
not
lock
xchg
push
movsl
and
xchg
orb
popf
popa
mov
mov
sub
test
push
outsl
lds
filds
lock
pushf
inc
addb
sahf
dec
js
cwtl
test
add
rclb
movsl
xchg
or
mov
mov
push
insl
and
mov
lret
fldl
jne
popf
pop
sbb
cli
loop
cld
adc
xchg
movsb
lret
adc
ficoml
leave
shrb
sub
enter
jge
push
outsl
fdivl
inc
jg
test
adc
test
cmc
hlt
mov
mov
inc
push
jns
cld
int
stc
filds
test
pusha
addr16
dec
shl
jmp
test
mov
mov
mov
addr16
popf
inc
out
mov
mov
xchg
jne
adc
dec
and
pop
xchg
pop
stc
pusha
shll
mov
xchg
daa
or
aam
xchg
jge
jle
push
in
mov
out
std
addr16
pop
out
test
fisubrl
jmp
or
icebp
lods
rorb
int3
test
xchg
adc
inc
cmp
loopne
fs
xor
cmpsb
cmp
dec
cmpsl
ds
mov
mulb
inc
mov
test
insl
outsb
cmpsl
dec
xchg
and
inc
xor
cmp
xchg
movl
dec
mov
and
mov
or
sub
xchg
dec
shrb
adc
daa
cmp
or
test
push
inc
xorb
inc
shrl
out
out
rol
in
and
pop
test
ljmp
pop
inc
out
cmpsl
test
enter
subb
add
push
sbb
push
sub
fdivrl
add
cwtl
inc
je
shl
sahf
test
mov
jno
pusha
stos
std
pop
mov
ds
push
jg
mov
sbb
ja
sbb
inc
fnstsw
lds
insb
xor
in
xor
fstps
in
test
imul
xchg
out
cwtl
sub
xor
sub
dec
jb
das
data16
aad
push
aas
and
or
jp
mov
cmc
mov
gs
lea
cmp
pop
fmul
sbb
sbb
shl
cmp
mov
orb
cmp
sbb
sbb
inc
push
push
cmp
and
aas
cmp
out
out
aad
stos
push
and
nop
sbbl
add
and
mov
jbe
loopne
aad
mov
inc
push
mov
das
mov
loop
push
jns
incb
jle
mov
sbb
cmpsl
inc
push
mov
dec
in
sub
into
mov
inc
test
and
rorl
add
sub
jbe
mov
jbe
mov
pop
int
imul
dec
jb
popa
and
mov
stc
shrb
add
enter
inc
hlt
leave
jo
add
push
pushf
ret
addb
andl
adc
nop
sub
lods
in
adc
movl
daa
mov
es
jne
scas
xor
sbb
jp
xchg
leave
rolb
jno
lods
push
fsubrl
pop
fs
mov
hlt
jne
dec
arpl
imul
xchg
xor
fldcw
lcall
test
mov
xchg
fwait
mov
mov
and
ret
or
push
xor
mov
and
xor
fldcw
xchg
adc
test
ds
rcrl
mov
xchg
imul
mov
mov
mov
xchg
lods
in
loope
ror
divl
jl
sbbl
cmp
test
out
std
mov
adc
into
outsb
addr16
lea
mov
mov
sbb
ljmp
adc
stc
and
dec
cmp
sub
sub
movsl
mov
jle
xchg
adc
insb
test
test
fs
xchg
fildll
into
pop
sub
fldenv
sub
mov
cmpsb
lretw
lock
dec
cmp
pushf
xor
cmp
mov
iret
outsl
pop
sbb
mov
fidivrs
add
rclb
and
test
scas
jbe
mov
xchg
invd
sbb
cmpsl
js
mov
lods
in
sub
adc
out
push
lahf
mov
rcrb
out
pop
dec
leave
mov
mov
movsb
popa
xor
in
gs
pop
or
shlb
jle
jecxz
mov
aad
les
pop
add
iret
clc
mov
call
popa
push
test
add
inc
out
out
fdivrs
sbb
jns
or
imul
leave
sub
jnp
fists
int3
jmp
lcall
dec
js
lods
scas
loop
movsl
ret
ret
dec
xor
fmull
loop
or
mov
js
ret
mov
fwait
mov
repnz
sub
jp
pop
pusha
lret
mov
nop
int3
xchg
dec
mov
xchg
push
inc
dec
push
test
xor
add
mov
mov
sub
lret
or
imul
gs
push
inc
cwtl
sbb
cmp
testl
jno
cmp
add
mov
ret
lock
cmp
jecxz
js
fs
leave
stos
mov
lods
lcall
cmp
mov
and
lock
nop
pop
enter
hlt
popa
pushf
js
mov
ret
bound
push
adc
xchg
out
imul
dec
cmp
cmpsb
sub
sub
xor
je
adc
test
sub
and
jnp
leave
stos
loope
movsb
jp
pusha
mov
repnz
mov
push
popw
xor
sub
mov
pop
ret
pop
inc
sub
or
filds
adc
testb
mov
pop
pop
aas
push
add
lret
mov
jecxz
scas
pinsrw
pushl
dec
mov
scas
iret
dec
jge
stos
mov
inc
sbb
test
cmpsb
jge
imul
mov
lret
adc
adc
test
inc
outsl
mov
and
nop
sbb
orl
xchg
cmpsl
orl
in
sti
call
xchg
test
rol
jo
xchg
iret
test
pop
jmp
fisubs
cli
sub
inc
repz
mov
cmp
lods
stos
in
xor
pop
ds
dec
inc
mov
cmpl
adc
jbe
or
mov
shlb
push
jp
push
subl
lods
jne
adc
mull
mov
mov
sub
sbb
mov
mov
lret
and
dec
jae
hlt
pushf
mov
xor
push
cwtl
pop
mov
xor
mov
cmp
push
mov
movsl
cmp
in
sbb
cwtl
push
inc
and
xor
repz
imul
dec
lret
insl
sbb
outsl
xchg
adc
scas
adc
loop
data16
pop
push
pop
cltd
mov
xchg
ret
xchg
mov
jae
mov
enter
adc
fldenv
mov
fld1
scas
add
aad
mov
movsl
sarl
rclb
leave
jnp
lods
adc
jno
cmp
lahf
dec
push
inc
out
hlt
xchg
jnp
mov
int3
mov
stos
cmpsb
repnz
sub
mov
jne
pop
adc
pop
jno
lret
xchg
mov
add
pop
add
cs
cwtl
push
ret
push
cmp
jns
stos
adcb
push
add
fisttpl
add
stos
xor
js
inc
mov
lcall
call
push
loopne
xchg
orl
popf
inc
mov
pushf
stos
sbb
insb
and
cmpl
cmp
je
cmp
les
pop
mov
dec
mov
fimull
ret
movsb
orl
aaa
xchg
inc
xchg
pop
stos
inc
xchg
or
inc
hlt
cld
iret
addb
cli
rolb
pop
sbb
inc
stos
imul
loope
xor
lret
ds
dec
xor
loope
xchg
sbb
mov
shrb
adc
add
sub
mov
adc
add
imul
sbb
adc
xchg
imul
fdivp
shll
scas
inc
lret
mov
pop
pop
pop
fistpll
jb
fisttpl
jne
mov
cmpsb
iret
dec
or
adc
xchg
sbb
test
mov
je
mov
clc
and
mov
inc
adc
jbe
inc
mov
ss
or
sbbb
or
add
iret
sti
ss
imul
inc
push
mov
lods
xchg
aad
clc
and
push
xchg
mov
dec
xchg
cwtl
pop
mov
pop
jg
mov
xchg
add
fprem
sbb
adc
je
push
sub
dec
data16
bound
mov
pop
mov
leave
int
add
faddl
jne
mov
xchg
adc
adc
cmp
push
test
sub
xor
sti
nop
flds
inc
inc
adc
jb
sub
lret
push
mov
jmp
sahf
jbe
out
je
cmp
push
pop
sbb
pop
push
xchg
push
rcll
in
out
pop
or
sti
ds
xor
or
ret
or
push
out
addr16
enter
mov
jecxz
daa
movsl
inc
xchg
sub
pusha
outsl
in
repnz
mov
jmp
lret
mov
dec
fs
pop
cltd
ror
lahf
test
lcall
inc
leave
jbe
push
shll
pop
js
xchg
add
adcl
sbb
imul
mov
fst
inc
aam
pop
lods
sti
mov
jle
jmp
dec
cmp
loope
jnp
cmp
jg
mov
adc
ljmp
mov
adc
mov
jnp
shr
pop
xchg
cwtl
out
fisubl
loope
sub
int
icebp
dec
pop
jge
cmpsl
dec
pop
loope
mov
inc
cltd
inc
jb
jecxz
in
adc
ds
pop
mov
rclb
pop
inc
hlt
sub
adc
lea
dec
std
pushl
jno
sub
pop
pop
lods
lahf
sub
mov
ret
mov
add
fcoms
and
jno
push
dec
out
icebp
popf
push
ljmp
es
inc
xor
fiadds
sbbl
in
out
cmp
imul
inc
fucomi
push
test
inc
lret
add
mov
nop
repz
pop
mov
aam
lcall
xor
jmp
sarw
sub
xchg
aad
int3
lret
out
mov
and
jo
pop
push
pop
jb
aas
fwait
ljmp
out
adc
sub
push
cmp
push
xor
fidivrs
pop
xchg
cmp
inc
sahf
sub
adc
dec
call
cli
sub
pop
add
clc
pop
in
mov
xor
pop
jle
repnz
push
jno
js
lret
cmp
dec
imul
ficomps
push
dec
jg
mov
or
mov
mov
cmpsl
jmp
pop
mov
dec
enter
adc
lock
jo
lock
cmp
xchg
pusha
lods
cltd
leave
lahf
insl
sbb
and
push
mov
and
sbb
adc
jb
out
icebp
adc
push
xchg
jae
iret
movsl
xor
movsb
fwait
sbb
fldl
mov
sbbl
dec
inc
fdivrs
call
pop
inc
rcrb
into
and
mov
bnd
dec
xchg
cli
ds
mov
lods
or
inc
es
icebp
mov
inc
or
pop
push
jecxz
pushf
jo
cmpsl
inc
adc
mov
out
movsl
aaa
jecxz
push
das
sub
loopne
mov
mov
mov
cmp
dec
mov
enter
fwait
cmp
fs
and
pop
sbb
sbb
loopne
xor
adc
call
adc
cmc
sbb
jmp
mov
or
xchg
sub
xchg
fisubrs
nop
arpl
jl
lret
cmpsb
lcall
in
movsb
js
test
fwait
leave
dec
xor
sbb
cmp
aam
cwtd
stc
sub
xorl
xor
cmp
sbb
loope
call
ret
pop
or
pop
jmp
mov
cld
cmpb
jne
arpl
outsb
test
sub
lret
cmp
jmp
mov
das
sbb
addr16
adc
push
xchg
ljmp
jp
lods
incl
lea
adc
pop
cli
add
sbb
outsl
adc
cmpsl
mov
popf
mov
in
cld
aam
arpl
sbb
movsl
sub
iret
cld
jecxz
loopne
xor
push
shl
adc
mov
jae
push
pop
mov
push
xchg
enter
sub
cmpsb
addr16
dec
push
cmpsl
lds
outsb
pop
imul
mov
add
dec
and
or
dec
xchg
aaa
xlat
adc
adc
leave
sbb
pop
sub
lcall
jle
leave
dec
or
fbld
fcomip
decb
jle
mov
stos
outsb
sub
fwait
mov
mov
and
sbb
fsubrl
ret
cmp
mov
jecxz
lahf
adc
lahf
jle
pusha
orl
xor
xor
rclw
imull
add
imul
mov
mov
not
xchg
sub
pop
repnz
or
inc
sub
add
xchg
ds
push
gs
xchg
adc
lret
inc
cmpsb
arpl
push
movsb
add
mov
push
fstpl
jmp
cld
stc
out
adc
clc
pop
xchg
lods
fdivs
cltd
ja
cmp
je
adc
adc
icebp
mov
adc
cltd
dec
push
movsb
push
mov
jnp
pop
pop
push
push
cmpsl
xchg
and
xlat
jg
test
add
and
in
stos
sbb
insb
xchg
pop
aad
jge
pop
inc
aas
jnp
loope
dec
jne
adc
daa
pusha
stos
ja
insb
mov
stos
test
cltd
shlb
mov
mov
rcll
stos
mov
iret
stos
pusha
mov
pop
jb
icebp
leave
and
cmpb
fs
mov
jg
pop
pop
in
xor
rorl
sarb
pop
cmp
in
bound
pop
xorb
jb
xor
setle
dec
adc
inc
pop
jecxz
test
or
sub
mov
jp
mov
mov
xchg
or
cmpsl
ljmp
push
mov
pushl
movsb
adc
lret
das
xchg
icebp
and
test
int
jl
dec
lods
push
sub
mov
cmpsl
out
subl
xor
rcll
cmpsl
cwtl
cmpsl
ss
xchg
std
cmp
lods
cmpsl
dec
mov
jo
xor
sub
push
sbb
xchg
inc
and
mov
scas
dec
dec
inc
jmp
in
lods
inc
gs
pop
jns
jp
inc
fildl
ficoml
icebp
adc
or
push
inc
repz
xchg
jg
push
push
iret
pop
and
loopne
loopne
adc
pop
fwait
push
pop
fnstenv
mov
leave
das
pop
add
push
jecxz
fsubl
sbb
lret
xchg
pop
adc
mov
gs
hlt
cmc
scas
jae
cmp
mov
mov
adc
add
xchg
push
nop
fstl
pop
ret
rcr
pop
aam
or
dec
mov
call
push
and
int
movb
es
addr16
inc
popf
cmpsl
xchg
shrb
adc
jecxz
iret
or
inc
insl
les
xor
iret
test
cmpsl
pop
mov
insb
fimull
int
fmuls
fdivrl
sub
jae
pop
and
test
in
inc
push
clc
inc
mov
adc
xchg
push
mov
addr16
xor
fiadds
std
iret
push
roll
and
and
push
outsb
pop
fcmovnb
and
test
leave
shll
stos
int
repz
push
fnstenv
test
push
stos
cmp
xchg
js
jno
fists
jb
ret
iret
xlat
jge
sub
mov
scas
push
jae
pop
xlat
addr16
int3
xlat
fpatan
ds
rcr
jne,pt
lds
mov
pop
add
in
push
cmpsl
lahf
xchg
ret
jmp
mov
xchg
fsub
aaa
into
ljmp
mov
xchg
and
xor
mov
out
nop
fcoms
add
pop
sub
ljmp
xor
sub
dec
adc
in
imul
mov
repnz
xchg
loopne
ja
bound
es
mov
jge
shlb
mull
mov
es
pop
outsl
je
adc
pop
sbb
roll
cmpsb
shrl
js
add
iret
cmp
in
cld
push
xchg
add
xor
push
jp
stos
sbb
outsl
movsl
das
ret
pop
movb
xchg
mov
stc
inc
stos
cmp
dec
mov
aad
sbb
int3
aam
popf
xor
xor
and
pop
mov
inc
imul
ss
je
lea
loopne
jl
rcrl
jns
idivl
std
shll
pop
aam
or
sarb
movsb
jns
xchg
in
jecxz
test
pop
jns
js
test
jae
leave
sbb
xchg
mov
xchg
es
mov
addb
mov
xor
adc
sbb
or
std
cmpsl
imul
and
std
negl
jmp
mov
adc
and
add
ds
hlt
xchg
popa
shrl
fnstenv
mov
clc
test
clc
xor
fisttpl
sbb
xchg
loopne
shll
fstl
orb
aad
mov
mov
shlb
lds
popa
dec
orl
test
addr16
sub
xchg
fnstcw
adc
or
xchg
add
repz
pop
addr16
out
fisttpll
je
dec
test
sbb
lea
or
mov
push
sbb
pusha
fwait
sbb
add
xchg
mov
in
pop
call
mov
sub
lret
adc
loop
outsb
es
cld
sub
jmp
mov
and
pop
inc
cmp
pop
adc
inc
xchg
mov
dec
adc
lock
arpl
xlat
dec
test
adc
stos
jmp
and
clc
lea
adc
jae
push
jmp
xor
xchg
test
mov
adc
mov
push
mov
je
jge
imul
out
into
xor
jo
dec
mov
cmp
adc
shrb
pop
cmp
or
or
mov
sarl
fcoml
in
bnd
scas
jp
dec
imul
out
jbe
jmp
aam
pop
push
xor
fprem1
test
mov
inc
repnz
dec
sub
cmp
mov
pop
test
les
sub
fadd
fsts
mov
mov
mov
je
xchg
lods
ret
mov
jb
mov
mov
dec
sub
mov
jecxz
lret
stos
hlt
pop
hlt
ss
call
lcall
sar
test
jae
or
ja
movsl
and
and
loope
jge
into
neg
lcall
mov
pop
push
arpl
sbb
cmp
xor
xchg
jo
mov
imul
add
cmpsb
rol
js
stos
xchg
mov
mov
xlat
dec
test
add
mov
pop
push
das
push
and
iret
xor
repnz
adcb
icebp
hlt
jp
jno
inc
jno
mov
inc
fsubs
in
add
dec
cli
sbb
mov
stos
and
sub
mov
pop
or
mov
scas
movsb
lea
xor
test
aaa
add
js
ficoms
popa
or
outsl
aam
add
jns
mov
mov
stc
mov
xchg
out
gs
add
push
xor
dec
sub
dec
dec
int
pop
pause
inc
mov
lret
ret
jle
mov
adc
inc
repnz
xchg
and
pop
ds
mov
pop
cmp
lahf
mov
cmpsl
pop
mov
and
stos
pop
pop
lret
jae
nop
inc
decl
pop
mov
out
dec
rcr
pop
pop
pop
test
pop
dec
sahf
push
add
cmp
cmp
cwtl
push
fs
sbb
out
cwtl
mov
movsb
fwait
inc
mov
lods
cmpsb
adc
out
cmp
xor
aam
push
mov
loopne
mov
pushf
data16
inc
pusha
lcall
dec
xchg
inc
inc
cli
sub
loop
sbb
pop
stos
pusha
push
clc
xchg
lret
xor
push
test
or
outsl
pop
movsl
ss
pop
scas
and
shl
push
or
cmpsl
sbb
addr16
adc
jge
lret
add
adc
add
ds
dec
leave
cmp
push
fnsave
or
mov
repz
psrad
aas
cs
les
or
inc
dec
out
add
imul
or
lret
pop
xchg
dec
sub
xchg
loopne
sbb
cwtl
and
and
mov
and
arpl
push
in
fwait
in
push
sbb
cli
xchg
or
jae
xchg
xchg
je
jmp
pop
leave
lret
ror
add
mov
sti
fs
pop
lahf
repz
lods
call
jb
and
and
mov
inc
jmp
and
xchg
adc
push
adc
cltd
mov
sub
subl
xchg
icebp
push
push
fldt
fcmovnu
xor
stos
xchg
add
cwtl
pop
outsb
xchg
cwtl
sarl
enter
jnp,pt
dec
jb
in
sbb
xchg
aaa
dec
add
sbb
shlb
pop
sbb
sub
lret
pop
push
push
sbb
das
push
movsb
xchg
pushf
mov
loope
aad
cmp
inc
aad
lods
or
inc
inc
and
iret
lods
mov
or
pusha
sbb
arpl
in
pop
pop
nop
pop
popf
add
mov
and
mul
jnp
inc
ss
shrb
loop
pop
adc
push
fdivs
xlat
adc
lods
cmpsb
enter
xchg
fcoms
mov
dec
and
cmc
pusha
notl
xor
jecxz
or
push
adc
sahf
pop
dec
fistpll
out
sbb
fmull
fcoml
lods
xor
sti
push
icebp
adc
sahf
cmp
jmp
pop
sub
scas
fsts
pushf
hlt
call
mov
test
adc
mov
inc
pop
and
xor
fs
jnp
mov
lret
testl
stc
push
cmp
add
xchg
mov
cmp
dec
inc
adc
cwtl
cmpsb
cltd
sbb
cwtl
aam
sbb
mov
clc
pop
pop
stos
shll
cltd
cmp
shr
std
xor
fs
mov
inc
loopne
jno
stos
cmc
xchg
out
out
mov
jno
sub
xlat
mov
xchg
add
cmp
mov
insl
cmp
call
ja
inc
fidivs
int3
stos
cmc
out
into
mov
ds
insl
lea
dec
clc
push
sbb
adc
aaa
cmp
aaa
push
and
leave
cmc
sub
dec
leave
pusha
mov
or
mov
add
cmp
cmp
ljmp
mov
fiaddl
cs
imul
shl
mulb
adc
pop
rolb
xor
xor
mov
mov
jb
mov
inc
je
loope
sub
xchg
orl
ljmp
pop
popa
push
add
mov
cmpsl
push
lret
test
mov
hlt
push
xor
stos
xchg
push
dec
sbb
enter
dec
xchg
mov
xacquire
inc
sbb
in
push
stc
xchg
lods
push
pushf
test
add
fwait
push
incb
sub
sbb
faddl
lds
insb
mov
dec
xchg
ljmp
lock
jnp
ljmp
jb
daa
jbe
xchg
stc
jne
rorl
call
fsub
int
mov
int
inc
or
rcrb
inc
gs
cmp
test
mov
mov
xchg
dec
mov
pop
stos
push
mov
adc
enter
fistl
jnp
dec
mov
mov
and
ljmp
repz
int3
cld
lcall
xchg
push
das
gs
int3
outsl
ret
std
cld
rcrb
mov
jle
adc
scas
inc
fdivp
pop
out
stos
xchg
mov
fiaddl
mov
mov
fbld
in
pop
out
adc
pushf
mov
aam
incb
mov
cs
mov
popf
jge
xchg
cmp
int
sub
xor
xchg
inc
mov
mov
loope
sub
and
add
popa
pusha
movsb
xor
das
and
inc
jge
sarb
icebp
data16
mov
xlat
cwtl
adc
addr16
inc
aaa
in
lea
adcb
jns
aaa
inc
xchg
int3
mov
sbb
push
leave
cld
adc
ss
leave
mov
insl
xchg
cmp
push
jbe
pusha
jnp
cli
dec
add
clc
push
daa
outsb
mov
cmp
xor
and
lods
rcrb
jmp
ljmp
rcr
xor
and
jge
loop
or
roll
dec
dec
jne
push
xchg
xchg
xor
xor
repnz
mov
jmp
pop
jb
inc
mov
outsb
test
pusha
pushf
or
lahf
cmp
call
out
xchg
mov
cld
lahf
and
xchg
inc
insb
outsl
sub
test
xchg
punpcklwd
into
movd
xchg
mov
sbb
lret
inc
dec
mov
mov
repz
lret
imul
bound
add
jp
in
jne
je
xchg
insl
subb
push
add
les
adc
and
imul
mov
ficomps
mov
test
push
ss
dec
pop
pop
cmp
cld
add
or
test
fs
arpl
movsl
popf
mov
mov
lods
cmp
mov
or
into
call
jp
loopne
ficompl
int
pop
cmp
nop
test
mov
dec
cmp
shrl
daa
jae
movsl
movsl
ja
or
mov
iret
clc
imul
sub
and
js
mov
add
xor
adc
mov
std
sbb
leave
adc
mov
and
mov
cmp
adc
jnp
sbb
into
lret
pop
pop
xchg
cmp
push
loopne
mov
mov
jnp
insl
sbb
sbb
dec
pop
pop
aaa
das
sbbb
nop
cmpsl
fcoml
mov
inc
and
ds
cli
popa
loop
lcall
sbb
mov
adc
repz
and
jo
shlb
add
push
cmp
pop
in
call
mov
mov
test
jg
insl
test
jge
cmpsb
iret
mov
jg
scas
xchg
adc
decl
push
mov
daa
cmpsl
sbb
add
int3
push
fs
fdivl
add
gs
shrb
int3
mov
fsubl
ljmp
loope
fiadds
clc
sbb
jg
adc
out
mov
adc
repz
cli
sub
mov
arpl
mov
xor
lods
insl
pop
cmpsb
popf
repnz
imul
fdivl
push
mov
pop
xor
outsb
lods
sub
mov
xchg
insl
sar
jge
inc
test
out
dec
mov
dec
sarb
loope
push
into
out
test
push
outsl
nop
imul
fwait
or
lds
dec
lcall
scas
enter
movsl
scas
push
jnp
nop
jns
jmp
push
subb
in
js
lcall
dec
int3
jl
mov
pop
jb
xor
inc
push
jne
imul
notl
jmp
xor
push
jmp
sub
jg
inc
cmp
enter
bound
jecxz
xchg
push
sub
xchg
test
movsl
push
mov
sub
jp
cmp
cmpsb
outsb
sbbl
xchg
fidivs
es
sub
stos
xchg
pop
jne
push
bswap
push
and
or
rcrl
nop
mov
or
mov
lcall
mov
arpl
cmp
stos
xorb
xor
add
aam
push
xor
sub
outsl
and
adc
jae
adc
addr16
addb
or
dec
jbe
jno
shrb
test
xchg
xchg
jo
fnclex
cli
insb
imul
pop
fildl
mov
stc
prefetch
das
subb
in
cmpsb
and
cmp
jecxz
clc
imul
fwait
cmp
int
push
inc
mov
inc
popl
xchg
cld
pop
push
pop
inc
jnp
add
icebp
test
sar
in
orb
inc
lcall
push
iret
jns
mov
lods
mov
daa
js
xor
lret
sub
sub
and
push
bound
faddl
mov
stos
out
mov
imul
cmp
push
add
pop
aam
test
mov
push
jg
push
xor
sbb
in
lock
cmpsl
sbb
gs
movsb
or
jle
push
es
dec
pop
cmp
mov
jg
fwait
push
xlat
inc
stc
sbb
cwtl
pop
cmp
xchg
jmp
mov
push
aad
add
repnz
xchg
sbb
addr16
aaa
aaa
jnp
pop
loope
jb
fisubrs
push
dec
nop
and
xor
xchg
adc
out
xchg
inc
rcrl
sbb
mov
pop
adc
push
stos
popa
jmp
or
jle
jo
hlt
mov
out
imul
insb
test
roll
movsl
sbb
push
loope
push
int
pop
push
mov
adc
pop
xchg
sbbb
aas
push
or
in
pop
data16
cmpsb
adc
push
adc
cmovbe
dec
sub
leave
lcall
add
lcall
fucom
mov
stos
jecxz
pop
adc
lahf
mov
sub
jle
xor
push
addr16
test
ss
xchg
sbb
mov
repz
push
push
mov
xchg
fnstsw
and
daa
bound
lods
dec
or
and
in
call
enter
jl
pop
cmp
xor
fs
popa
lret
xchg
sbb
hlt
xchg
dec
test
xorb
sahf
arpl
pushf
xor
test
sti
lock
movsl
push
test
sahf
addb
cmpsl
and
in
push
loop
cli
daa
ret
lods
mov
mov
pop
loop
sbb
add
popa
in
std
sbb
push
xchg
or
adc
aas
mov
inc
mov
int3
xchg
sub
fstpt
pusha
adc
jle
es
rcrb
imul
addr16
outsb
push
shr
imul
fimuls
xchg
rcll
mov
pop
dec
mov
mov
adc
arpl
pushf
out
fmull
sti
pop
out
leave
cmp
sbb
fmul
pop
fwait
mov
lock
mov
data16
in
mov
icebp
cmp
cld
push
imul
jo
repnz
cmp
imul
mov
sbb
ds
loopne
sub
xchg
notl
sbb
pushf
mov
into
and
icebp
lock
sbb
fisttps
xchg
insb
loop
or
dec
pushf
mov
adcl
loope
mov
xchg
les
dec
dec
iret
xchg
xor
mov
in
add
pop
mov
arpl
cmp
and
push
jp
xchg
adc
push
stos
push
pop
dec
push
pusha
add
push
pop
lcall
push
orl
mov
pop
xchg
mov
push
adc
sbb
test
int
mov
and
scas
mov
aad
mov
jnp
mov
jno
jle
xchg
mov
add
xchg
ret
fiadds
pop
jae
jl
cli
je
int3
repz
push
cwtl
jo
xor
adc
iret
jae
or
mov
dec
test
mov
xor
push
xor
lret
fstpl
xchg
or
data16
mov
xchg
jo
jge
fs
stos
dec
or
ret
push
or
test
loope
cmp
xchg
cmp
gs
push
dec
lea
xchg
ljmp
sbb
dec
ljmp
or
mov
or
loop
jnp
fbstp
jl
lds
mov
lahf
adc
rorb
xchg
jno
andl
add
xor
mov
dec
icebp
std
push
xor
lahf
pusha
push
mov
js
mov
dec
push
pop
lcall
and
clc
pop
adc
adc
mov
sbbb
lods
dec
jl
mov
lods
push
test
fiaddl
lds
jbe
in
andb
inc
pop
adc
pop
cld
cmpsb
jle
mov
pop
push
adc
outsl
stos
mov
enter
dec
pop
mov
ljmp
pop
ds
mov
fistpll
xor
and
pop
pop
scas
inc
js
adc
ja
sbb
xor
inc
sub
scas
jge
sbb
fists
xor
and
jo
imul
sahf
je
mov
in
mov
call
xor
pop
cmc
or
in
inc
jl
mov
mov
add
inc
pushf
and
xchg
repz
rcrb
xlat
dec
insl
or
push
cwtl
sti
xchg
dec
xchg
mov
pop
xchg
call
cmp
xchg
test
pop
pop
xor
inc
outsb
test
push
inc
insb
jo
lret
push
cmc
push
sbb
jecxz,pt
xlat
mov
sub
test
mov
cmp
jno
pop
inc
inc
mov
int3
movsl
leave
cmpsb
in
jp
jb
sbb
inc
push
sub
sbb
sbb
jge
movsl
loopne
push
and
inc
les
lods
movsb
jle
in
das
xchg
test
mov
lea
int3
ret
sub
and
mov
xchg
in
xorb
data16
push
pop
jno
movsb
inc
ret
push
clc
xchg
add
cmp
inc
shlb
or
inc
stos
mov
out
sub
mov
clc
xor
mov
test
aam
and
jns
inc
int
punpckldq
imul
dec
loopne,pt
std
out
lahf
sub
arpl
in
pop
inc
sbb
fldt
jne
out
subl
pop
test
push
xlat
mov
push
inc
imull
cmc
pop
pop
repz
jae
and
jg
inc
xor
cmp
xlat
sbb
out
inc
mov
push
xorb
jnp
jecxz
mov
clc
ret
jb
dec
mull
add
das
clc
stos
jmp
repz
pushl
mov
xor
lock
dec
ret
je
movsb
adc
ljmp
inc
sbb
cli
nop
cmp
mov
jnp
mov
push
or
pop
push
or
mov
pop
les
mov
xchg
arpl
ljmp
mov
ret
xlat
inc
dec
adc
push
xchg
xchg
ljmp
dec
cld
sbb
pop
ja
inc
mov
leave
pushf
cli
hlt
in
or
out
xchg
cmp
dec
mov
movsb
fdivl
je
test
lret
ficomps
loop
pop
inc
jp
xchg
jge
jne
xor
or
aas
cmp
xchg
lret
mov
sbb
mov
mov
insl
dec
push
push
push
clc
mov
add
clc
rorl
subb
xchg
addr16
sti
inc
pop
pop
push
mov
rclb
pop
mov
mov
mov
cmpsl
shll
xor
adc
ljmp
mov
dec
jns
clc
cmpsl
daa
dec
test
scas
rclb
inc
mov
test
sub
out
pop
mov
mov
or
aas
push
rorb
popf
mov
jle
lret
ss
adc
push
enter
cs
jae
es
adc
push
clc
push
cltd
mov
or
scas
jbe
and
aaa
jmp
cmpsb
xor
adc
xchg
bound
lea
lahf
and
push
xchg
imul
div
cld
pop
pop
lods
call
push
sbb
dec
inc
sbb
xchg
scas
js
cmp
out
sub
pop
mov
xchg
sbb
mov
or
rcll
pop
pop
mov
aas
pop
inc
mov
mov
mulb
outsb
or
cmp
mov
sbb
sub
sar
cmp
push
pusha
inc
out
rcrb
pop
fldcw
xchg
mov
negb
loope
inc
lea
ret
cmpsl
xchg
xor
fimuls
mov
pop
inc
lcall
sub
push
jmp
neg
push
stos
fs
xor
jg
push
pop
test
push
cs
cmp
jecxz
xchg
int
into
icebp
jae
popa
push
and
adc
or
pushf
add
mov
or
pop
cwtl
push
pop
xchg
mov
mov
fs
xchg
pop
mov
in
mov
jmp
mov
fisttpl
or
ficoms
push
nop
imul
sub
stos
mov
andl
aaa
dec
mov
mov
jno
mov
jne
cmpsl
xchg
xchg
aam
mov
mov
sub
das
jno
shl
ficomps
inc
push
addr16
into
cmp
xchg
mov
stos
dec
mov
fs
inc
imul
enter
fsubl
add
test
cld
jb
pushf
xchg
mov
or
jnp
xchg
inc
clc
lret
dec
test
add
fisttps
aad
imul
jbe
mov
movsl
shll
cmpb
out
and
insl
add
jp
nop
mov
mov
in
sbb
scas
mov
js
pushf
lock
mov
adc
ljmp
repz
and
mov
js
push
jnp
xorl
sbb
ja
scas
loopne
mov
dec
js
dec
iret
out
mov
out
blsic
dec
dec
lea
add
cs
subl
es
or
xchg
daa
in
mov
xchg
out
xchg
xchg
in
and
rcrb
jns
sub
addr16
xchg
pop
inc
loope
test
shrl
pop
xor
subl
adc
rcr
lret
xchg
jae
cwtl
cld
push
sub
pop
add
roll
jl
ljmp
adc
sub
adc
fwait
test
fsubs
ljmp
or
add
ja
jbe
and
lret
clc
lret
loopne
cltd
or
push
pop
inc
inc
pop
insb
cld
shl
jb
arpl
or
bound
mov
mov
jbe
ljmp
leave
pushf
pop
cmpsb
inc
sub
scas
aaa
push
cltd
je
data16
sbb
sahf
and
or
sub
or
into
out
loope
repz
cld
ret
sbb
or
addr16
loopne
jle
rolb
out
js
rclb
sbb
std
lret
pop
mov
loopne
or
stos
shlb
cmc
bound
cltd
mov
mov
mov
and
cmp
popa
dec
repz
mov
xor
xor
mov
mov
jmp
lods
sbb
cmp
test
scas
adc
loop
jne
adc
sbb
add
xor
shrl
pop
subb
fstps
pop
mov
adc
outsb
pop
sbb
mov
fmull
cmp
push
xchg
out
inc
jp
mov
hlt
shll
push
in
add
push
hlt
jecxz
xchg
mov
mov
cmpsl
and
mov
and
and
push
pshufw
lds
outsb
xchg
dec
ret
jns
int
push
inc
in
ret
mov
psubusw
push
sub
loopne
mov
imull
adc
scas
push
test
addb
inc
mov
xorb
push
xchg
subb
inc
add
mov
adc
xchg
nop
sub
lcall
je
sbb
mov
cmp
jno
jmp
ljmp
dec
clc
or
adc
out
add
dec
int
cmc
fmuls
loopne
in
pop
inc
lahf
add
and
pop
clc
mov
push
xor
or
dec
pusha
mov
dec
cmpsb
in
pop
insb
xor
sbb
sbb
mov
sbb
inc
insb
mov
inc
call
xchg
das
scas
mov
jg
push
sub
add
push
push
outsl
loope
cmp
in
cmp
mov
mov
push
xchg
add
in
sub
cmp
in
cli
mov
and
int3
cmp
cmp
cmp
mov
adc
sub
and
dec
in
xor
dec
or
ret
aad
scas
jmp
pop
arpl
adc
ljmp
xor
insl
push
cmp
mov
jnp
cmp
and
jp
popa
repnz
frstor
push
shll
inc
dec
fs
icebp
les
clc
push
push
and
mov
jl
outsl
mov
imul
jo
stos
cmp
ljmp
mov
adc
push
cmp
xor
cld
loop
aam
push
into
and
inc
xor
ret
jmp
aaa
imul
cmc
andl
and
or
negl
mov
push
sbb
jno
pop
sub
popa
xchg
idivb
fstps
dec
inc
mov
cmp
das
leave
in
out
push
mov
out
jmp
mov
pop
push
sbb
dec
lds
int3
pop
rcrl
jns
sbb
punpckhdq
orb
test
repz
xchg
fs
cmpsl
popf
push
mov
es
adc
pop
nop
mov
sti
out
sbb
jp
add
sbb
mov
into
call
mov
pushf
cmpsb
clc
dec
jg
pop
mov
xlat
bound
daa
stc
sar
adc
out
mov
loop
daa
sbb
or
and
xor
fsubs
dec
aam
and
decb
jns
outsb
add
jae
mov
mov
outsl
xor
jl
imul
jbe
int3
mov
mov
ret
movzwl
imul
ret
ficoms
fisttps
out
sub
mov
push
std
dec
xchg
adc
aad
pop
add
fmuls
add
loop
pop
orl
imul
ret
cmp
sti
adc
and
push
xlat
dec
cmpsb
pop
sbbb
or
mov
mov
cmp
sub
jne
push
mov
in
mov
pop
jge
cmp
dec
push
in
insb
pop
test
sarb
shrb
pop
mov
lea
xchg
mov
mov
les
jmp
gs
sbb
inc
or
mov
mov
mov
mov
or
daa
stc
cli
adc
mov
xchg
jns
push
xchg
sahf
fistl
lea
mov
mov
nop
fiaddl
mov
loop
adcl
lret
cmp
icebp
scas
pop
xor
push
ljmp
scas
lahf
in
jg
les
pop
inc
aad
push
rcl
dec
xlat
ret
nop
int
push
inc
xchg
stos
movsb
outsb
mov
fisttpl
mov
imul
add
pop
test
mov
gs
pop
cwtl
nop
pop
sbb
out
mov
in
cmp
or
lret
fucom
nop
push
push
rclb
test
in
add
add
mov
aad
test
scas
les
add
mov
jl
xchg
add
shll
add
test
add
inc
and
jmp
dec
pop
xchg
roll
or
mov
mov
sbb
or
loop
cmp
pop
aas
inc
pushf
mov
icebp
repz
add
pop
push
pop
inc
in
cmpsb
cmp
push
std
std
adc
mov
adc
xlat
xchg
fnstsw
rcrb
inc
inc
stos
mov
jns
mov
mov
lret
sub
cmp
addr16
inc
in
fdivr
idiv
cmp
sbbb
out
push
fstpl
push
rclb
nop
shrl
jmp
int3
push
adc
dec
jbe
xor
dec
out
shll
call
pushf
dec
mov
stos
mov
adc
popa
icebp
mov
ss
mov
push
dec
or
sbbb
add
movsb
sub
lcall
xor
xor
gs
sbb
jbe
push
or
ret
push
movsb
sbb
mov
mov
dec
insl
in
xor
fwait
loop
inc
addr16
call
pushf
mov
mov
hlt
cmpsb
adc
leave
call
mov
inc
sub
hlt
jecxz
inc
inc
inc
dec
add
jp
xchg
push
sub
mov
subl
iretw
pop
sub
push
xor
fs
aas
xlat
out
mov
xor
and
push
in
sahf
push
cmp
push
fsubr
mov
mov
loopne
sub
out
xor
jno
xchg
arpl
fcmovbe
add
jb
add
orl
js
push
rcrl
int
lcall
mov
cmp
shl
into
add
pop
cmp
insl
in
add
dec
mov
mov
pop
aad
mov
push
out
mov
shl
test
jnp
sahf
push
sbb
fidivs
sti
stc
out
jns
stos
xchg
mov
jo
push
mov
sub
and
cmp
mov
ret
enter
rorb
test
leave
addb
sbb
or
call
in
add
dec
std
add
adc
ds
lods
sti
mov
leave
fisubs
push
nop
and
mov
aam
cmp
movsb
pop
push
jg
data16
pusha
dec
lds
xor
pop
mov
xchg
arpl
xchg
lahf
out
addr16
inc
jge
xor
jno
xchg
xor
pushf
xchg
ljmp
mov
inc
jbe
test
iret
sub
push
inc
jle
lea
iret
outsl
xor
push
fs
fs
in
mov
dec
mov
es
sbb
insl
das
and
adc
ret
cwtl
and
push
inc
or
jle
jo
cmp
movsl
mov
adc
adc
mov
sarl
into
fwait
jp
sub
push
scas
mov
pusha
add
movsl
pop
fucom
lock
jae
pop
sbb
fcmovne
jge
cld
push
dec
int3
jo
jecxz
dec
rclb
aad
stos
stos
xor
xchg
adc
test
pop
leave
inc
xor
dec
push
sub
aad
jge
jb
or
jecxz
push
addl
push
mov
sub
inc
xchg
sbb
inc
xchg
push
fisttps
or
add
call
fwait
cmpsl
sub
dec
int3
stos
inc
in
sti
adc
std
add
adc
cltd
aam
outsl
fisttpll
ret
inc
cmp
xchg
xchg
test
adc
push
xor
pop
pop
adc
inc
sbb
cwtl
mov
das
rol
es
xchg
scas
cmp
enter
push
and
xor
dec
or
out
mov
es
push
push
xchg
not
mov
jmp
pop
push
shlb
scas
mov
ficomps
in
inc
andl
clc
clc
cmp
cmp
pop
in
subl
cmp
push
fdivrp
sbb
and
push
inc
les
xor
pop
jae
scas
dec
cmp
test
push
sti
mov
xor
or
pop
push
test
das
mov
in
push
inc
fldcw
push
arpl
nop
and
push
std
arpl
sbbb
cwtl
ljmp
mov
cmc
mov
cli
roll
dec
sbb
lret
enter
lahf
mov
xor
icebp
sbb
add
imul
or
jae
movsl
xchg
sub
into
or
mov
mov
rorl
jl
fwait
test
pop
and
cmp
adc
add
stos
inc
add
xchg
adc
xchg
imul
ret
cltd
inc
or
ljmp
cmp
repnz
dec
cltd
mov
aam
mov
ds
lds
fs
jae
jmp
cmp
push
pop
mov
and
or
dec
fimuls
dec
cltd
pop
stos
enter
sub
sbbl
add
in
mov
dec
mov
push
adcb
jmp
les
lcall
negb
mov
pop
jo
xlat
aaa
mov
jecxz
fcmovnu
cmpsb
push
outsb
add
int
in
stc
clc
jp
std
lds
mov
outsb
insb
aaa
das
fcmovu
mov
enter
or
xor
movsb
jnp
mov
mov
mov
jne
add
mov
mov
cld
loope
add
scas
mov
xchg
jnp
add
add
push
aaa
jmp
lods
lret
lock
mov
and
scas
xor
js
inc
hlt
mov
xlat
inc
popf
popa
lcall
imul
dec
or
sbb
cmp
stos
inc
adc
mov
push
adc
std
nop
inc
push
icebp
pop
add
fsubrl
jg
add
addr16
mov
inc
cs
mov
not
inc
inc
mov
fnstenv
jnp
xor
mov
nop
xor
fstpl
pusha
insl
sbb
notb
push
cmc
pop
pop
sub
jmp
xorb
jge
lret
push
fdivs
call
push
movsb
dec
notb
xchg
pop
aas
fsubrp
jne
mov
sub
loop
cmp
pushw
mov
gs
adc
jae
dec
lock
jg
ret
insl
xchg
or
jo
sbb
sti
out
repz
adc
lods
jecxz
cmp
lods
ljmp
mov
ret
cs
adc
push
jno
push
and
cmc
adc
jo
leave
jno
incb
inc
cmc
xchg
add
imul
sub
xchg
mov
fdivrs
sti
fmuls
and
nop
data16
testb
popf
stos
pushw
or
outsb
push
fwait
push
cmpsb
push
inc
scas
xchg
test
dec
outsb
sbb
xchg
xchg
mov
div
mov
sbb
mov
push
mov
fdivrl
lods
in
jg
pop
icebp
mov
lret
int3
cmp
bound
dec
cmpsb
andb
call
adc
mov
scas
sahf
sub
fmul
jae
pushf
cmc
cli
mov
mov
bnd
xor
mov
jnp
inc
arpl
adc
xchg
or
enter
or
mov
mov
jmp
jo
sti
mov
je
xchg
movsb
push
cmpsb
or
mov
ljmp
movl
push
fadd
and
mov
or
jle
or
jns
mov
insl
fdivrs
push
popf
data16
fwait
arpl
push
jl
aas
mov
xor
pop
rcrl
sbb
ss
push
cs
xchg
add
mov
or
dec
add
test
adc
int3
sbb
fildll
orl
lahf
out
stos
jge
outsl
loop
rorl
outsl
cmp
jl
adc
dec
scas
fwait
sub
shll
in
adc
or
mov
mov
adc
push
cmp
or
insb
jns
fld
xchg
sub
and
sti
in
xor
sub
adc
lahf
jb
inc
popa
mov
stc
sbb
cs
mov
fldcw
popl
pop
jl
xchg
mov
pop
xchg
lods
sbb
ljmp
inc
push
xchg
mov
mov
inc
leave
inc
ja
iret
cmp
cmp
cs
je
cmc
mov
or
push
xor
inc
fdivrl
mov
shl
jmp
xor
jae
nop
mov
add
ljmp
test
and
rolb
sbbb
mov
xchg
icebp
ret
int
mov
or
or
push
iret
mov
pop
dec
lea
in
ror
mov
or
lahf
stc
and
out
jb
loopne
xor
push
fwait
mov
mov
mov
movsl
lret
je
pusha
jae
and
jge
xor
cli
popf
mov
sahf
mov
and
fadd
nop
imul
adc
ja
loop
xlat
push
cli
je
and
pop
call
mov
mov
add
jo
sub
loopne
jmp
jmp
jno
add
aaa
adc
and
sub
sahf
xchg
popa
mov
out
lcall
inc
or
inc
add
sub
cmp
in
or
push
ja
loopne
bound
mov
int
xchg
adc
pop
add
cwtl
lods
mov
inc
fs
mov
sbb
sub
aas
lock
mov
fcomps
fwait
sub
cmc
xchg
sub
push
add
out
call
ss
mov
or
jle
mov
jmp
xchg
xchg
sbb
mov
cmc
sbb
jl
ret
sub
and
leave
sbb
mov
dec
pop
lds
leave
lea
pop
in
inc
lock
or
add
out
js
popa
enter
push
mov
in
fmulp
mov
push
jl
xchg
stc
adc
add
enter
jmp
sahf
arpl
ljmp
pop
pop
adc
pop
testl
dec
notl
lret
and
push
xorb
jnp
out
div
daa
cmp
inc
mov
les
or
idivl
push
int3
pushf
loope
cmp
add
and
movsb
dec
lret
xchg
xchg
sub
int
sub
xor
xor
push
and
aaa
jmp
xchg
mov
jns
iret
mov
loopne
jp
daa
leave
sub
lea
repnz
hlt
cmp
xchg
xlat
jp
ja
xor
es
out
imul
int3
pop
scas
xor
inc
jae
jnp
cmpsb
divb
arpl
sbb
decl
xchg
xor
lahf
aas
in
ss
aad
cmpsl
mov
push
subb
mov
adc
xchg
scas
out
aam
or
mov
nop
jb
dec
roll
mov
int
dec
sbb
sub
mov
adc
loopne
fmuls
add
mov
shl
xlat
andb
mov
frndint
int
jae
imul
adc
dec
adc
imul
push
pop
fisubrl
mov
push
fmul
call
push
popf
mov
bound
bound
bound
andl
ss
cmp
cmc
inc
test
adc
imul
lds
and
imul
scas
pop
xor
xchg
mov
leave
rol
shll
jecxz
cmp
decb
xchg
sbb
adc
ret
pop
jbe
popf
jmp
inc
notb
in
fcompl
dec
cwtl
clc
sbb
push
adc
or
in
out
dec
call
xchg
shr
subl
push
arpl
gs
adc
sub
lock
shl
pushf
pop
push
call
pop
pop
call
ja
dec
addr16
push
adc
lea
add
and
and
sub
push
or
aas
leave
jo
iret
mov
nop
add
cmp
adc
fisttpll
inc
xchg
and
and
dec
imul
mov
add
aad
call
sbb
cmp
push
popf
push
xchg
sub
in
xchg
retw
push
add
dec
notl
inc
push
push
data16
pop
roll
lahf
cmp
std
lds
stc
or
push
stos
insb
cmp
call
mov
pop
push
hlt
adc
xor
xchg
dec
add
inc
iret
and
pop
inc
pusha
mov
scas
int
xorb
dec
add
push
mov
push
bound
mov
mov
xchg
adc
or
sbb
jl
cmc
sbb
les
inc
jnp
jmp
xlat
imul
push
popf
pop
jmp
scas
std
iret
out
xor
ret
sbbb
lret
mov
lahf
dec
test
imul
cmp
mov
sahf
test
mov
pop
lret
bound
test
jb
pushf
adc
xchg
mov
adc
cmp
cmp
mov
inc
mov
cmp
popa
sbb
and
push
adc
jae
aas
shl
sbb
mov
add
and
inc
or
jnp
cmp
fwait
shll
jmp
pop
in
cmp
ljmp
jbe
jle
shrl
pop
out
popf
popf
pop
pop
cli
or
mov
add
sub
mov
sub
push
cmc
cmpsl
mov
mov
test
xchg
xor
scas
xchg
add
inc
insb
and
jno
push
shlb
pop
sahf
test
addl
mov
sub
pusha
mov
push
pop
loopne
xor
mov
sbb
sub
scas
pop
pop
mov
mov
les
in
push
fwait
cmp
pop
aaa
or
fisubrs
inc
pop
fsubl
in
sbb
in
stos
stc
outsl
mov
cmpb
test
xchg
stc
jae
scas
xchg
lret
jp
out
mov
aam
sbb
movsl
stc
sbb
and
push
push
aas
mov
fsqrt
inc
out
dec
neg
xchg
push
xor
in
out
xchg
pop
xor
mov
mov
arpl
insl
xchg
cmpsb
lods
inc
cmp
idivl
dec
stos
mov
inc
sbb
push
xchg
pop
push
sbb
idivl
and
and
in
pop
filds
jo
cmp
pop
xchg
sbbb
lock
out
call
push
fs
push
test
ja
sbb
fldt
add
jg
inc
fcomip
call
popf
bswap
push
push
sub
cs
movsb
pushl
sbb
pop
or
sub
movl
rcll
sbb
call
mov
outsl
dec
fs
and
cmc
or
idiv
jae
sahf
xorl
pop
xor
int
push
push
mov
or
jle
sbb
dec
movsl
loop
pushf
adc
cmp
test
pop
adc
jb
mov
jae
hlt
shlb
mov
pop
adc
pop
insb
fisubrl
movsl
xchg
in
cmpb
dec
or
adc
cmp
lock
sbb
int
add
sbb
notl
lods
xor
movzbw
push
mov
arpl
push
sarl
into
mov
mov
in
cmpb
pop
jmp
movsb
daa
outsb
lock
inc
jmp
dec
aas
or
xor
xor
scas
pop
jge
mov
xchg
or
lods
push
mov
dec
xor
push
mov
jecxz
push
adc
and
xor
mov
mov
addr16
insl
mov
adc
jns
jno,pn
into
insb
cmp
and
jmp
jno
fimuls
dec
xchg
or
clc
push
scas
lahf
add
pop
call
fdiv
dec
add
inc
rolb
adc
sti
inc
add
jg
pop
insb
add
test
mov
jl
aam
jmp
dec
adc
pop
mov
jo
leave
or
mov
inc
cld
mov
mov
out
imul
xchg
lahf
mov
sti
ret
roll
lods
in
in
cwtl
mov
mov
add
mov
push
cwtl
repnz
and
fwait
or
jns
aad
xlat
lock
ret
xor
lods
jle
sub
scas
xchg
loope
out
jle
jecxz
cmp
and
and
out
lods
data16
jo
mov
inc
out
xchg
adc
xor
jl
jb
cmpsb
jne
and
stos
dec
stos
push
fstps
mov
and
or
addr16
inc
dec
wrmsr
gs
cld
ret
pop
popf
push
popf
in
nop
je
jns
add
out
repz
push
inc
dec
sbb
fimuls
into
push
aaa
sbb
das
stc
sahf
or
sbb
dec
pop
js
leave
repz
dec
push
cmp
dec
xchg
sub
mov
mov
ss
pop
ret
das
mov
push
icebp
inc
loop
or
mov
repz
addr16
test
mov
cmp
pop
test
neg
aam
adc
xorl
adc
mov
sub
jmp
pop
push
or
stos
imul
std
and
aad
mov
je
push
mov
inc
in
or
and
fnsave
int
out
mov
sbb
pop
insl
pushf
pusha
scas
push
cs
aas
repnz
sbb
ret
dec
addr16
je
push
fldl
aam
lea
sub
xchg
rcrb
push
mov
lods
pop
out
outsb
bound
inc
fs
dec
ljmp
cltd
lods
lds
jno
mov
mov
fdivp
jnp
test
imul
dec
push
prefetch
adc
fdivp
add
xchg
or
std
mov
sbb
push
and
cmp
movsb
clc
mov
dec
xchg
pop
add
inc
inc
int3
push
lcall
and
cmp
lods
inc
ljmp
ja
jle
lahf
imul
or
aad
scas
cwtl
std
and
push
adc
je
jns
insb
xchg
sbb
loope
lret
dec
int3
popl
dec
testl
sti
mov
cmp
hlt
mov
dec
in
jns
sti
icebp
pop
mov
enter
aam
xor
jo
stos
dec
inc
in
pop
xor
insl
in
or
notl
jns
ss
stos
pop
rclb
popf
shl
cmp
inc
data16
mov
addr16
cwtl
adc
mov
mov
or
cltd
xor
sub
fadds
sbb
mov
jge
insl
dec
xchg
jl
lods
cwtl
cltd
xor
imull
push
std
daa
xchg
pop
aas
sub
sub
push
sub
sub
cmpsl
cli
jecxz
imul
mov
cmp
loope
out
inc
mov
das
stc
scas
insb
mov
subb
pusha
imul
cltd
lds
jg,pt
pop
cmp
lret
mov
jl
stc
ds
jbe
mov
xchg
mov
loopne
hlt
inc
lea
ja
add
stos
out
cmp
leave
sub
cmp
out
idivl
addr16
sahf
outsl
cmp
or
clc
pop
es
jl
lcall
jle
bound
out
sarb
mov
mov
mov
sub
add
arpl
adc
std
sub
clc
pop
test
mov
aam
cmpb
inc
adc
daa
fisttps
inc
jmp
movq
or
jl
pop
push
ret
and
inc
fwait
clc
lea
call
xor
push
pop
cwtl
inc
fistl
test
daa
mov
mov
adc
cmp
xor
stc
cmp
and
pop
xchg
frstor
ljmp
or
popl
push
gs
xchg
pop
add
push
stc
mov
mov
dec
mov
inc
mov
popa
inc
add
outsl
inc
je
mov
pushf
pop
add
xor
xor
add
out
pop
jecxz
jo
jg
movsb
popf
inc
pop
andl
cmp
jno
cmp
inc
xor
mov
pop
pop
leave
fwait
inc
insl
popf
jb
gs
ret
mov
or
push
sbb
adc
mov
pop
scas
pop
je
ljmp
lods
mov
dec
push
addl
cmp
popa
dec
jmp
inc
mov
jp
mov
daa
push
adc
inc
lcall
jnp
fs
add
stc
lock
sbbb
shlb
xchg
nop
int3
shll
jne
adc
lret
cmp
test
faddl
and
insb
hlt
adc
loop
inc
mov
jg
jnp
cs
out
sbb
fnstcw
mov
sbb
iret
mov
sub
or
fisttpl
mov
aaa
xchg
dec
into
jecxz
insl
and
aam
imul
or
cltd
ja
push
mov
xor
xchg
mov
cmc
mov
and
movsb
xchg
xor
hlt
dec
repnz
push
sub
das
ja
int3
arpl
cmp
ljmp
mov
pushf
mov
insl
xchg
scas
xor
push
clc
sub
push
and
push
cmpsb
inc
test
cmp
sbb
xchg
sub
mov
and
adc
sbb
xor
and
fmulp
sub
jno
movb
and
lret
push
dec
outsl
push
int
nop
lds
jae
ret
decb
sti
cmp
and
out
and
mov
mov
in
and
pminub
mov
xor
movsl
insl
mov
dec
clc
clc
pop
rolb
push
mov
ja
mov
lea
test
push
iret
and
add
inc
pop
lods
add
in
in
into
mov
jns
mov
inc
or
fnstcw
iret
in
stos
cmpsb
cltd
andb
sbb
test
das
aas
imul
or
sub
mov
pop
jle
add
dec
aad
mov
sub
lahf
popf
repz
icebp
mov
push
sbbl
ja
push
dec
fs
adc
mov
out
xchg
inc
rcrb
and
test
add
pop
es
js
inc
lahf
insb
leave
or
mov
push
fucomi
mov
pop
xor
sub
imul
xchg
scas
das
call
mov
insl
fnstenv
movsl
jne
loope
lahf
shll
cmp
adc
je
shr
in
inc
xchg
fwait
rorl
mov
loopne
inc
cmp
out
push
jl
cmp
dec
mov
lods
push
imul
iret
ljmp
fiaddl
dec
and
flds
mov
test
sahf
iret
fstps
jmpw
inc
insb
jecxz
lret
sbb
cmc
mov
mov
aam
stos
jnp
inc
stc
adc
add
je
fildll
jecxz
cmp
jne
sbb
imul
stos
xchg
roll
pop
adc
enter
movsb
pop
jnp
fisubrl
imul
insb
adc
aad
adc
insb
idivb
or
jae
pop
jnp
leave
in
push
pop
scas
sub
out
sbb
jne
loopne,pt
sbb
adcl
jnp
lahf
dec
and
push
std
dec
dec
lret
cmpsl
das
xor
test
fwait
rcl
in
popf
jbe
adc
pusha
ficoms
out
rclb
data16
dec
pop
push
xor
or
cwtl
sahf
jns
aaa
js
mov
add
fistpll
movsb
sbb
pop
pushf
inc
or
es
mov
movsb
mov
sbb
sarb
mov
and
mov
xchg
adc
lret
sbb
jbe
lret
pop
and
mov
and
je
bound
xlat
into
rcrl
out
jge
jne
hlt
enter
mov
pushf
dec
sbb
js
mov
cmp
xor
push
or
ljmp
jmp
jle
mov
or
mov
cmpsb
cwtl
stos
and
add
xor
pop
fs
cwtl
sub
adcb
fsubrs
rolb
xor
and
or
mov
gs
mov
in
in
movb
adc
jnp
jnp
rolb
shl
shl
ret
push
inc
and
ficomps
or
or
arpl
mov
jl
jmp
and
and
add
setl
inc
les
jne
sbb
lods
xchg
xchg
fcoml
pop
mov
fwait
scas
lret
cmpsl
sub
and
fstpl
dec
xchg
pop
mov
repnz
dec
mov
mov
push
aad
in
push
dec
fwait
mov
xchg
in
jns
add
out
bound
sub
or
adc
push
and
jbe
jns
mov
push
pusha
mov
sbbl
ret
cmp
mov
mov
decb
push
repz
mov
inc
shrb
iret
icebp
lods
push
rol
jbe
sbb
imul
int3
jbe
push
sbb
shll
xchg
cs
hlt
mov
xchg
daa
push
std
imul
cli
push
cmp
arpl
dec
push
aas
outsb
fistpll
stos
mov
fnsave
pop
mov
push
subl
les
rolb
add
out
adc
scas
ret
cmpsl
xchg
ror
popa
and
add
mov
cmpsl
fnsave
clc
clc
push
jge
jl
push
imul
xchg
mov
sbb
out
leave
adc
shll
pop
mov
sbb
adc
xchg
push
mov
mov
into
push
push
imul
jge
xor
inc
or
imul
mov
data16
sbb
xor
fucom
inc
insb
insb
cwtl
scas
loope
test
outsb
mov
outsl
lods
shrb
push
sarl
sbb
pop
push
outsb
test
pop
pop
fisubrs
pop
addr16
dec
stc
push
nop
sbb
mov
movsl
shrl
loope
sbbl
pop
stos
cmpsb
and
sbb
dec
clc
leave
iret
stos
xchg
jnp
je
mov
add
xchg
push
sub
mov
out
call
jmp
inc
ja
popf
jns
mov
sub
sbb
fdivrp
mov
mov
inc
cmpsb
push
xchg
gs
push
push
xchg
dec
jmp
lret
enter
or
mov
jecxz
mov
in
movsl
jl
into
lods
mov
xor
insb
insl
inc
ds
js
mov
cmpsl
mov
dec
imull
mov
clc
xchg
mov
ja
push
push
ja
mov
int
jp
cmp
mov
add
cld
jle
mov
or
push
sub
insl
loope
insb
jo
cltd
inc
loop
mov
mov
lret
dec
fyl2x
fs
mov
xlat
push
push
cmp
pop
outsb
and
xchg
jno
ret
xchg
jecxz
pusha
pop
dec
push
loop
dec
ret
sub
adc
dec
imul
xor
xchg
add
or
nop
outsl
daa
sub
sub
sbb
xor
jo
das
lahf
jge
fisubrs
repnz
cmp
int
mov
inc
push
mov
mov
adcb
lcall
fsubs
in
call
inc
in
pop
and
pop
and
loopne
mov
and
cmp
les
sahf
loop
push
outsb
inc
stos
hlt
dec
aas
daa
push
or
andl
mov
xlat
jle
test
pop
jmp
vpsllw
cmp
bound
jmp
pop
shr
jae
fisubrl
adcb
mov
lcall
xlat
lahf
daa
out
add
shll
jg
xor
imul
icebp
outsl
lea
insl
jge
xor
insl
cwtl
rorb
js
xchg
push
and
mov
outsl
xchg
xchg
lcall
dec
mov
adc
pop
pop
xor
ss
push
in
mov
dec
sub
gs
xchg
stos
cmp
adc
inc
jp
mov
jne
sub
les
inc
clc
stc
mov
adc
aam
pop
sbb
lret
push
sub
pop
adcb
and
xchg
lock
bound
js
adc
call
and
loopne
mov
or
dec
lods
jecxz
cmp
lods
cltd
push
pop
lods
cmp
ret
leave
xchg
enter
and
test
lock
dec
sti
pop
popf
ret
mov
inc
ret
lods
fbstp
add
sti
xchg
dec
scas
mov
pop
inc
mov
cmp
testl
stos
xchg
adcb
ja
pushl
mov
in
daa
daa
cmp
test
xchg
das
cmc
sub
jnp
mov
sub
dec
in
push
pop
out
lods
push
inc
dec
aad
in
jle
insb
jl
add
push
lods
fdivp
lods
pop
jl
dec
lcall
dec
adc
imul
mov
push
fbld
mov
fmul
cltd
data16
cli
mov
lret
mov
cmp
data16
cltd
lods
rcll
movsl
stos
add
fcompl
scas
mov
jge
out
aas
mov
mov
mov
shl
das
sub
pop
pop
xchg
jge
cmp
orl
cs
mov
or
adc
or
movups
aad
std
push
bnd
cmp
fimuls
sbb
xchg
dec
mov
addr16
cmp
or
dec
xchg
test
mov
shrl
ds
arpl
sti
shrb
or
jns
inc
xchg
arpl
jg
jns
sahf
pop
pushf
lcall
mov
xchg
imul
fidivrs
add
out
xchg
cmp
jge
mov
sub
xor
or
gs
fxch
jae
jno
adc
fsts
idivl
cld
sub
int3
mov
jbe
andb
or
xchg
push
lcall
lock
cmc
jmp
sub
sti
sub
jnp
pop
xor
xchg
cmp
pop
frstor
mov
orl
mov
out
inc
adc
iret
or
push
setne
xchg
mov
xor
imul
jo
xchg
out
stos
xchg
or
test
aam
sbb
jl
stos
mov
push
add
pop
scas
insl
sbb
xchg
sbb
arpl
pop
mov
or
mov
pop
mov
adc
adc
inc
bound
fisttpll
outsl
mov
test
sti
adc
repz
mov
sub
and
xchg
dec
pop
sbbl
cmp
push
xor
jmp
mov
cmpb
adc
mov
cld
mov
cmpsl
addb
xor
les
cltd
xchg
outsl
jge
add
repnz
xorb
cmpsl
cmc
mov
imul
pop
idivl
sbb
add
cmpb
jle
cmp
es
jp
rorl
pop
inc
cmc
sbb
mov
sub
lock
scas
aas
jno
or
sub
cltd
loop
mov
inc
xchg
int3
les
enter
and
jns
das
inc
pop
cli
scas
cmp
mov
xchg
repnz
rolb
dec
je
repnz
imul
data16
push
jnp
xchg
push
mov
mov
inc
pop
ret
push
xor
jno
sarb
jo
mov
scas
pusha
test
pop
push
push
daa
add
cmp
iret
out
cmp
pop
lret
cmpsb
pop
sbb
cmpb
in
ds
test
mov
jmp
inc
cli
daa
jmp
push
ret
adc
je
mov
pop
lahf
push
lahf
mov
shll
sti
or
mov
arpl
addr16
ret
inc
cmp
xor
int3
jp
shlb
adcl
pop
test
fisttpl
arpl
sbb
fnstenv
cmp
sbb
pushf
dec
sbb
lock
mov
loope
adc
cmpsl
inc
xchg
inc
jno
mov
mov
sbb
loop
test
adc
pop
push
cmp
jp
movsb
mov
subl
xchg
icebp
popf
imul
pushl
in
or
add
icebp
iret
push
push
and
ljmp
frstor
popa
adc
outsb
sbb
shlb
out
call
inc
lds
out
aas
sbb
mov
dec
in
cmp
jle
adc
push
xor
mov
aad
sub
imul
jb
in
fcomps
add
jno
push
or
inc
mov
aaa
sbb
pop
mov
ja
dec
pop
mov
push
in
fisubrs
rorb
mov
cmp
xchg
test
mov
icebp
lret
gs
iret
mov
xor
dec
sbb
pop
dec
or
xor
sub
add
and
data16
imul
xchg
scas
ss
test
inc
jbe
xorb
mov
mov
bound
xor
sbb
clc
adc
fisubrs
stc
jle
xor
mov
dec
push
hlt
jne
add
jg
popa
in
fdivrs
test
dec
cmc
cmpb
scas
mov
jg
ret
cmpsb
imulb
leave
stc
jge
fiaddl
das
fiaddl
cmp
cli
fbld
jo
popa
jb,pt
imul
scas
into
inc
loopne
sub
mull
insl
js
sbb
repz
jg
push
mov
sbb
scas
jns
mov
pop
clc
mulb
inc
ss
sti
push
mov
mov
test
mov
cli
pop
xor
cmp
and
xchg
nop
pop
push
pop
enter
inc
xchg
iret
sub
hlt
sbb
sti
leave
imul
jle
idivb
push
aam
or
rorb
repz
xlat
jns
js
and
lcall
mov
adc
pushf
imul
inc
jmp
mov
add
outsl
mov
push
stos
xchg
sbb
sbb
cmp
mov
lret
dec
cmpsb
fstpt
imul
or
sub
adc
pop
push
scas
daa
jmp
testl
out
test
cld
cwtl
clc
sbb
mov
out
xor
mov
xchg
das
xchg
hlt
in
mov
loope
cld
push
popf
insb
inc
jecxz
inc
rcll
add
mov
mov
mov
imul
cwtl
jb
hlt
sbb
out
fldenv
movsl
mov
mov
loop
in
mov
cmp
and
jnp
xor
shll
cmp
xor
push
loope
shl
or
or
cmp
mov
loopne
xor
lock
sbb
sub
hlt
mov
and
call
shll
push
jmp
dec
cmc
imul
xchg
mov
scas
push
aas
lret
mov
xchg
and
pop
sbb
pushf
sbb
pop
les
mov
cmp
sarl
sahf
push
jge
leave
nop
adc
adc
das
sub
movsl
mov
lea
xor
lods
pushf
xor
arpl
popa
sbb
push
mov
lret
jnp
sahf
bound
push
in
add
dec
sarb
rclb
cmp
movsl
pop
mov
adc
fwait
jb
mov
out
push
pop
hlt
sub
mov
mov
adc
jg
in
and
xor
fs
mov
mov
shrb
aas
cmp
jbe
pop
aam
xchg
sub
rcrb
sub
sarb
jle
pop
je
cmp
loopne
sbb
mov
push
inc
into
aas
cltd
shlb
repnz
mov
shlb
mov
cwtl
cmpsb
subb
div
nop
dec
rep
sbb
cmpsb
jb
xchg
mov
shlb
inc
cmpsl
insb
xor
sub
inc
push
fnsave
packssdw
or
and
xchg
gs
movsb
xor
imulb
sahf
ljmp
adc
inc
sar
add
insl
inc
or
insl
bound
sbb
xlat
cmc
sbb
pop
push
mov
mov
xor
movsl
fiadds
jo
jne
dec
cltd
pop
dec
aad
fnsave
in
cmp
dec
dec
jp
cmp
pop
dec
insl
mov
add
xchg
sbb
dec
repnz
push
out
lret
add
mov
test
jo
int
xor
cmp
int
mov
pop
scas
or
outsb
nop
jnp
dec
test
nop
adc
mov
fildll
add
or
add
outsl
and
sub
dec
mov
sbb
cmpb
inc
clc
dec
int
minps
mov
jnp
fdivrl
add
mov
xchg
cmpsl
dec
mov
std
sbb
scas
scas
ljmp
ljmp
inc
pop
dec
sahf
jno
mov
jmp
xchg
jmp
scas
test
and
xor
push
fstpl
lock
fisubs
sbb
cmpsl
int
loop
add
dec
cmpsb
bound
dec
cwtl
inc
gs
je
nop
pop
out
fdivl
adc
pop
outsl
mov
dec
xlat
inc
jae
add
icebp
pop
xor
out
aas
lock
mov
bswap
pop
jns
lods
lahf
sbb
jg
push
mov
sub
shl
mov
fndisi(8087
nop
and
jg
shlb
push
adc
adc
dec
cwtl
out
adc
pop
hlt
mov
push
mov
aam
or
test
fld
add
dec
and
push
cmp
enter
or
mov
cmp
lods
fmulp
push
rcll
dec
movb
mov
fdivl
add
pop
pop
mov
jb
mov
pop
aam
mov
test
scas
cmp
aam
cmp
xor
inc
jle
shll
ret
add
daa
jl
and
pusha
pushf
add
push
fdivrl
xchg
into
movsl
hlt
xor
push
dec
dec
mov
xchg
subl
or
mov
xchg
adc
push
out
inc
jmp
in
mov
xor
mov
sbb
pop
mov
cmp
rolb
sti
incb
xor
enter
lods
dec
mov
dec
loop
add
lret
sarb
push
leave
xor
shlb
jp
inc
mov
or
xor
lret
pop
out
or
loop
clc
in
xchg
add
mov
rorb
ja
sub
dec
xor
repnz
orl
push
fidivl
ss
je
adc
shrb
mov
inc
enter
js
js
insb
fimull
jp
xlat
push
cld
mov
adc
cmp
mov
in
mov
push
and
inc
mov
dec
mov
xchg
inc
pop
imul
ljmp
adc
xchg
movsl
jmp
and
mov
repnz
rep
testl
and
jp
imul
rcl
outsl
int3
sub
imul
ja
les
rclb
xlat
xor
rolb
ljmp
lods
sub
cmp
test
xor
stc
push
sbb
sbb
add
cld
lods
or
pop
cmp
add
xor
inc
test
and
fdivs
cmc
mov
xchg
pop
or
shll
call
jg
push
es
outsl
mov
jb
adc
xchg
push
jno
xor
jbe
mov
jg
cs
jae
rcll
sbb
mov
sbb
pop
dec
pop
aaa
mul
or
push
adc
and
xchg
mov
loop
fisubrs
push
shlb
mov
xor
xchg
sbb
dec
stc
adc
xchg
or
push
je
cmp
fiaddl
call
pusha
pop
mov
aas
xchg
in
mov
mov
cmp
popf
xchg
sar
clc
mov
xchg
js
ficoms
inc
fisubrl
lods
aas
cmp
pop
loope
nop
jns
jecxz
or
addr16
pop
jo
shll
int
addr16
push
scas
add
out
xor
inc
jecxz
dec
pop
shll
dec
push
mov
rcr
jns
loop
dec
pop
das
mov
sub
fs
mov
jmp
sti
aad
add
jne
addr16
pop
out
inc
pop
sahf
dec
lahf
push
orl
mov
rcrb
jne
jno
cwtl
fisttpl
mov
inc
push
loop
fs
inc
jbe
mull
shll
push
jno
cli
rcrb
jmp
popf
lea
clc
movl
sbb
and
cmpsl
xorl
lds
js
lcall
add
clc
into
add
jnp
push
pop
adc
fmull
ret
cmpsl
fisttpll
subl
sbb
push
xor
test
cmpsl
out
push
push
loopne
adcl
insl
test
push
rorl
sub
jb
loopne
cmpb
jecxz
push
push
jg
fsubrs
imul
xchg
inc
jl
xor
fwait
and
in
push
addl
into
sub
cmp
rolb
nop
mov
fmul
pop
add
push
jns
loopne
pop
data16
adc
sarl
lods
or
add
push
sbb
ret
mov
cli
imul
inc
sub
in
in
mov
fsubrs
adc
andl
pop
xchg
mov
cwtl
repz
out
adc
subb
out
sti
fldl2t
inc
arpl
adc
incl
cwtl
xor
cwtl
push
loopne
movsb
fsubp
adc
jle
sti
hlt
leave
sub
test
loop
cmpsl
movsl
jbe
dec
jno
xor
mov
ret
dec
std
xchg
loopne
jmp
dec
sub
pop
push
xchg
push
jno
in
jp
sub
iret
cld
push
scas
mov
pop
adc
lods
sbb
push
mov
jne
dec
add
cld
pusha
xchg
es
xor
pop
fidivrl
das
daa
push
jno
mov
imul
mov
push
test
lods
psrld
loope
int3
popa
mov
loopne
sbb
or
jae
cltd
cli
fcompl
repnz
mov
faddl
inc
or
rcll
mov
dec
adc
adc
cmp
shrb
cmp
xorl
cs
scas
inc
sbb
inc
mov
jecxz
push
jge
or
push
and
cmp
lahf
xor
out
jecxz
int3
or
aam
fcomip
cmp
mov
dec
mov
sbb
ds
xor
movsl
cli
cld
pop
stc
jns
mov
stos
out
cmp
and
lret
and
pop
pusha
jnp
xchg
outsb
ret
popf
dec
cli
sbb
or
push
daa
sub
xchg
add
roll
cmp
mov
sbb
sbb
clc
ficoms
push
mov
adc
dec
es
lods
or
cmp
dec
fs
je
cltd
xor
xchg
std
idivl
dec
js
rep
mov
test
jecxz
fld
int
popa
inc
lahf
mov
pop
test
xchg
lods
sbb
adcb
add
in
and
xor
mov
loopne
jge
add
lds
mov
es
push
mov
sub
jge
push
test
repnz
jge
jle
mov
cltd
xor
iret
iret
mov
mov
fnstenv
ss
sbb
push
xchg
andb
scas
lods
pop
fdivr
mov
cmp
call
cmpsb
and
adc
xor
jno
mov
dec
fsubs
testl
sub
xorps
sub
sarb
dec
or
xchg
shrb
jno
std
scas
outsb
test
pop
lret
pop
cmc
fildl
hlt
mov
dec
push
or
sarb
sbb
popa
sbb
xor
dec
loope
dec
into
aad
sarb
sub
and
lcall
rcll
sbb
movsl
xor
stc
mov
pop
call
sub
xor
push
adc
jo
mov
psubd
jmp
xor
icebp
movsl
popa
jnp
movb
or
jb
adc
stc
repz
jp
jae
enter
daa
ss
cmovne
push
jbe
cmp
incb
test
cmp
pop
push
mov
push
sarl
pusha
outsl
push
pop
add
inc
xchg
cld
icebp
cmpsl
jno
or
and
inc
pop
add
in
jg
mov
jge
repz
into
add
jmp
inc
scas
push
addl
iret
dec
lods
jo
imul
data16
pop
fimull
pop
xorl
mov
sub
movsl
rclb
into
inc
das
jbe
inc
cmpsb
pop
ja
lock
xchg
in
xchg
cmp
ret
fists
inc
rorl
jp
les
adc
dec
cltd
pop
repz
sub
outsl
adc
das
cmp
push
arpl
xchg
js
sbbl
out
sahf
aaa
mov
push
push
fimuls
arpl
daa
in
sbb
jp
jle
pop
push
cmpsb
sub
dec
sti
and
stos
cmp
sarl
push
nop
shll
fldcw
adc
push
jns
adc
jle
sbb
add
xchg
sbb
adc
mov
sub
bound
xor
dec
mov
dec
daa
xchg
cmpsl
movsb
pop
add
dec
ss
out
sbb
jecxz
or
and
xor
leave
add
dec
ds
sub
enter
aaa
xchg
dec
xor
cld
jns
loop
xchg
scas
out
jne
fwait
nop
cmc
mov
lds
lock
xchg
dec
sbb
add
cmp
push
subb
js
pop
pop
dec
cwtl
nop
arpl
xor
mov
clc
pop
inc
sahf
push
ja
addl
jecxz
inc
sbb
mov
popf
push
scas
pop
xchg
sbb
inc
add
lea
dec
mull
nop
cmp
push
repnz
xor
xchg
movb
cmp
ljmp
push
cmpsl
sbb
insl
aaa
call
mov
std
mov
ret
cwtl
or
xchg
imul
mov
jns
add
push
enter
negl
call
aad
pop
inc
pop
ds
inc
arpl
imul
dec
and
mov
in
std
test
lahf
jae
js
in
cmp
adc
or
out
ficomps
int
push
mov
push
or
inc
cmpsb
jo
stos
emms
lea
jbe
and
mov
and
stc
mov
scas
push
ss
add
and
rcrl
into
and
out
sub
fwait
mov
setae
fldenv
mov
fs
filds
push
push
cltd
mov
cmp
test
cmc
pop
imul
cmpsb
mov
xchg
push
lds
ret
pop
and
imul
test
xor
imull
and
cs
sub
fs
or
rol
loop
cmpsb
jg
jge
sti
rcrb
mov
mov
aad
cmpsb
add
push
xchg
in
cmp
test
cltd
scas
sub
xchg
test
icebp
pushf
aas
and
pop
sub
icebp
cmpsb
hlt
bound
cmpsl
in
pop
shll
scas
lret
aas
adc
inc
pop
pusha
xchg
addb
mov
aaa
idivl
je
imul
stos
gs
mov
push
adc
mov
fdivl
jge
lret
xorb
mov
ds
addr16
imul
aad
insl
lcall
ss
lss
mov
sbb
mov
mov
dec
out
mov
test
iret
mov
test
int3
in
pop
aad
push
pop
jg
mov
jmp
mov
sbb
fstp
cmpsb
pushf
xor
inc
sub
xchg
mov
lods
imul
das
inc
or
xor
and
lods
jne
sbb
stc
inc
cmp
repz
jbe
insb
sub
push
test
div
and
inc
rorb
xchg
inc
aam
jp
xchg
and
xorl
repz
icebp
jmp
push
ret
or
lcall
adc
add
mov
push
cltd
hlt
sbb
test
mov
sbb
mov
mov
arpl
mov
xlat
sbb
out
test
lds
push
inc
aad
clc
xchg
push
pushf
jb
and
push
ss
cmp
ret
loope
cmc
adc
adc
testl
lods
mov
mov
cmp
repz
out
or
cld
cmpl
adc
js
or
and
scas
mov
es
fmul
mov
scas
call
jns
mov
add
inc
ja
push
add
es
lcall
popf
in
repz
xor
in
test
push
lcall
mov
sbb
inc
out
jnp
xchg
movsl
push
cmpsb
mov
add
mov
xor
pop
ret
sbb
adc
xor
lcall
xchg
lahf
push
push
std
je
and
scas
xchg
stos
rclb
mov
imul
sbb
jnp
and
sub
sub
cltd
lahf
bound
faddl
mov
dec
stos
out
adc
pop
and
adc
out
pop
scas
test
xor
dec
mov
xor
pop
pusha
aaa
daa
insl
jae
rol
adc
fsubs
mov
add
ja
mov
jl
dec
scas
jl
imul
and
dec
enter
add
cli
int
sbb
fsubl
daa
jl
ja
in
lret
push
xchg
adc
dec
idivb
js
cmp
insb
call
jns
or
out
test
outsl
fcoms
lods
and
lcall
xorb
mov
mov
cwtl
cltd
or
clc
out
pop
add
loope
adc
orb
mov
jbe
xchg
push
adc
cli
and
fidivl
inc
inc
mov
fbstp
sub
or
sbb
dec
sub
fidivrs
sbb
imul
mov
in
dec
xor
hlt
pop
and
cli
jns
push
pop
xchg
into
insl
fs
aaa
push
scas
or
inc
sub
in
add
adc
pop
sbb
cmc
mov
loop
mov
in
enter
fs
loop
mov
out
ds
or
ret
pop
scas
add
jae
flds
push
xlat
mov
fidivrl
fcomps
roll
and
mov
je
and
jg
mov
in
mov
mov
test
movsb
mov
das
pop
movsb
xchg
insl
mov
or
inc
inc
xchg
sarb
stos
mov
sbb
adc
rclb
xchg
sub
mov
inc
inc
add
mov
or
push
push
push
dec
adc
into
xor
mov
clc
inc
out
call
fucomip
jbe
aam
stos
divl
cmpl
jmp
jge
mov
push
xor
std
cmc
xchg
stc
aad
repz
scas
jp
out
jne
push
bswap
inc
lods
loopne
out
or
aaa
icebp
ficoml
mov
icebp
push
and
jno
mov
push
int3
xchg
jmp
movsb
push
push
into
sub
loope
dec
dec
fstl
xor
loope
in
lock
push
out
scas
sbb
lock
repz
scas
mov
pop
mov
xor
repz
sbb
cli
xor
out
int3
test
mov
into
mov
sub
mov
mov
mov
xchg
jp
insb
adc
ds
out
jne
das
inc
ds
aad
adc
pop
mov
popa
outsl
lods
std
adc
cs
rcll
jo
outsb
test
icebp
inc
daa
or
mov
lods
cmc
xor
shll
sbb
jmp
add
shrl
in
xor
jp
mov
loop
lret
dec
out
or
jb
or
std
mov
mov
inc
sti
mov
insb
jbe
adc
loop
iret
xchg
lcall
fists
add
cld
lret
push
jnp
das
sbb
das
pop
push
cmpsl
mov
in
xor
pusha
cmp
mov
adc
popa
mov
mov
or
loope
jcxz
popf
clc
les
push
jp
push
and
icebp
inc
mov
loope
pop
dec
xor
fcoms
aaa
mov
icebp
lret
lock
jle
loopne
xchg
jmp
iret
cmpsb
int
push
insb
and
jl
leave
sahf
dec
xchg
mov
mov
aad
int3
mov
xchg
popf
and
pop
xchg
andb
sbb
jp
cmp
mov
repz
mov
jns
cli
cltd
into
mov
int
mov
push
cmp
dec
shrb
mov
repz
ficoml
aam
lcall
dec
movsl
mov
ss
sub
xor
out
jne
mov
mov
stos
dec
iret
aam
cmp
or
inc
push
or
addr16
jne
mov
sub
mov
lea
pop
bound
fadds
add
jmp
mov
pop
dec
popa
pop
xchg
lods
pop
inc
fcomip
push
lahf
sbb
andb
pop
sub
popa
dec
clc
sub
cmp
pop
xchg
xchg
xor
mov
fbld
xchg
loop
aaa
cmc
mulb
outsl
sub
dec
outsl
inc
fisubs
call
adc
cmp
call
aad
mov
push
mov
cwtl
and
das
hlt
sub
sbb
and
push
popa
jmp
jae
imul
mov
push
loope
jbe
orb
xor
pushl
test
and
rorb
adc
xchg
cltd
push
push
mov
and
xchg
mov
mov
std
sub
dec
aaa
sub
or
dec
shl
adc
sub
cmp
sbb
ret
aam
adc
sbb
repnz
sbb
lds
push
lock
add
movsl
loopne
dec
rclb
pop
lret
jno
cmpb
mov
add
mov
or
jge
imul
jl
or
rcrl
xchg
sbb
pushf
ss
adc
sub
mov
sbb
and
push
jp
and
in
cmp
fxch
inc
addr16
push
pusha
xlat
mov
dec
shrl
mov
shlb
jp
cmp
iret
jae
mov
pop
gs
lock
lods
add
decl
out
idivl
cmp
sbb
fisttpll
jecxz
xchg
mov
shll
or
jbe
cmp
aam
cmp
mov
xor
cmpsb
in
hlt
repnz
push
daa
cmpsb
scas
and
dec
mov
mov
add
pop
jns
push
and
sbb
jge
neg
daa
shrl
ss
repnz
push
adc
jg
add
scas
imul
out
sti
cmc
cmpsl
mov
add
sub
dec
ljmp
fsubs
xsha1
cmpsb
push
outsl
into
movsl
mov
or
pushf
test
fstps
inc
sbb
or
inc
in
fcmovnbe
test
dec
leave
or
clc
and
insb
sbb
outsb
negb
push
pop
push
mov
lods
ss
mov
jbe
mov
xchg
loopne
dec
andl
in
mov
stos
movnti
cs
and
mov
mov
push
icebp
jl
clc
in
push
fstpl
pop
jmp
xor
das
push
js
xchg
lds
mov
jbe
lods
dec
lea
xchg
lods
cmp
iret
jle
mov
dec
test
inc
jnp
popf
or
push
nop
aaa
mov
cmp
rorb
dec
imul
shlb
les
enter
mov
add
jg
jp
lret
stos
loop
or
inc
gs
sub
shl
fninit
nop
cmpsl
add
shrl
aaa
jbe
aaa
add
in
fcoms
sbb
lcall
stos
xor
imul
inc
aam
push
adc
inc
dec
jecxz
mov
adc
inc
xor
outsl
pop
xchg
lock
in
mov
movsl
das
icebp
cs
scas
int3
cmc
sbb
insl
inc
push
adc
aas
push
xchg
add
mov
ret
xor
shl
subb
scas
dec
mov
jl
pop
xchg
decl
test
fcomp
iret
pop
inc
xor
loop
adc
cmp
sub
test
lahf
lcall
push
int
iret
jp
loope
sahf
or
jge
es
jge
cmp
nop
dec
fidivs
sub
pop
xchg
pusha
mov
and
mov
sub
push
jg
dec
pop
mov
movb
js
push
addr16
sbb
jbe
in
xor
adc
and
pushf
movsb
push
xor
or
sbb
es
addr16
popa
arpl
jmp
jb
es
popf
mov
cltd
mov
mov
xchg
and
fnstenv
loop
popa
mov
xor
jecxz
ficomps
inc
jge
push
mov
jbe
xor
xor
arpl
dec
sbb
je
inc
inc
sar
fs
adc
jmp
cmpsb
and
mov
les
xor
adc
add
xor
mov
mov
mov
jle
jmp
fiadds
int
jl
jl
aad
or
ds
jne
mov
inc
xchg
push
fwait
cmp
std
add
push
out
lods
fadds
xor
or
stos
rcrl
push
xorb
mov
jge
mov
mov
les
dec
out
loopne
jb
mov
iret
in
mov
fcoms
cmp
das
nop
hlt
repz
pop
push
adc
inc
push
movsl
xchg
pop
mov
sbb
cmpb
decl
add
pop
push
shlb
dec
fmul
xor
jecxz
push
push
lea
into
xchg
cmpsb
or
push
bound
push
xor
mov
daa
and
sbb
mov
ss
std
scas
or
arpl
inc
jge
loopne
xor
pcmpgtd
adc
or
jb
pop
xchg
push
mov
dec
mov
andb
mov
pop
lcall
mov
lods
mov
pop
xchg
sahf
enter
mov
mov
test
sbb
mov
lcall
or
and
mov
jl
roll
popf
mov
fisubrl
ret
push
in
cmp
insb
cmp
and
mov
in
mov
lcall
cmc
inc
hlt
gs
cli
lea
push
pop
rcrl
popf
jle
shll
sarb
rcll
nop
dec
aas
mov
pop
les
cmpsl
out
sarl
filds
pop
pop
mov
hlt
and
dec
cmpb
stc
outsb
lea
sub
outsb
dec
adc
xor
lods
jns
mov
fsubrp
jb
jno
adc
lock
incb
adc
js
div
popf
sub
cmp
mov
arpl
inc
xor
add
daa
imul
inc
sub
dec
lods
jle
lret
mov
arpl
test
mov
ljmp
ds
mov
mov
ja
sahf
mov
outsl
cmp
fmul
das
jmp
push
rolb
lret
ss
or
sub
fisttpl
dec
insl
clc
sahf
pop
pop
sub
cwtl
fndisi(8087
aaa
mov
xlat
popa
or
xchg
and
stos
sub
shrl
xchg
or
mov
lods
dec
loope
mov
popf
and
repz
lret
xor
movl
call
jl
mov
lcall
xor
loopne
jmp
jb
ret
mov
scas
lock
bound
rcll
add
shl
push
cmp
lcall
or
shrl
insb
es
imul
ficompl
add
mov
sbb
pop
fstpl
scas
fidivrs
cmp
and
and
mov
cmp
cmp
gs
mov
or
sbb
inc
jbe
nop
dec
cmp
and
and
mov
test
mov
jp
inc
in
in
into
adc
clc
idiv
pop
rcrl
enter
ret
cmpsl
pop
jecxz
cmp
mov
mov
fidivrs
shll
cltd
mov
shrl
movsl
lret
aas
aaa
popf
mov
and
mov
stos
js
adc
or
pushf
sbbl
jo
lahf
out
add
ficoms
mov
jecxz
push
sub
mov
sbb
pop
mov
shlb
in
or
xor
and
and
xchg
add
fadds
fprem1
xor
cltd
outsb
sti
jno
xchg
xchg
loope
xchg
jle
push
xchg
in
rol
pop
insb
pop
xchg
rcrl
out
sti
mov
mov
sarb
sbb
push
int
les
repnz
shl
repnz
cs
loopne
lcall
adc
jno
pop
mov
popa
inc
aaa
jnp
cmp
mov
pop
dec
mov
mov
out
lds
rol
xlat
mov
add
pop
sub
pop
xchg
stc
int3
fmuls
aam
pop
dec
icebp
int3
das
bound
clc
inc
jle
clc
sbb
xchg
mov
mov
dec
int
mov
nop
insb
mov
pop
lods
xorl
jp
mov
mov
in
xor
pop
cmpb
testl
jnp
cmp
call
push
lea
pop
lea
in
adc
xchg
mov
scas
sti
aad
xor
fwait
sbb
adc
test
xchg
add
pop
je
pop
loopne
insb
xchg
add
pusha
jmp
filds
je
repz
jecxz
xchg
stc
mov
mov
cmp
es
and
sbb
push
sbb
cmpsl
push
ljmp
push
jo
outsb
push
cld
or
in
fistl
mov
in
xchg
adc
mov
fwait
xor
stc
and
push
scas
or
cmpsb
sbb
test
int3
fmull
in
lods
stos
into
add
add
jo
outsl
xor
test
push
in
and
enter
jne
push
flds
mov
or
aam
cmpb
sbb
xchg
or
fisubrs
ret
js
mov
sub
fidivl
mov
cmpsl
fwait
mov
inc
lds
xor
dec
cmpsl
sub
lods
ret
xchg
xor
push
stos
xchg
fcoms
mov
xchg
adc
ret
inc
pushf
iret
xchg
rol
pop
jne
ss
outsl
icebp
sub
shlb
mov
cmp
insb
add
fs
rcrl
into
fcmovbe
xchg
dec
xor
pop
lahf
push
xorb
lahf
push
movb
mov
dec
addr16
lahf
pop
adc
dec
pushf
lods
lods
fwait
lods
addr16
dec
and
dec
inc
xchg
lahf
xchg
mov
repz
push
add
mov
pop
xor
or
add
imull
push
sub
test
lahf
inc
ds
xlat
pop
lock
rorb
leave
lea
arpl
aad
std
xchg
xchg
push
xor
mov
je
xlat
pop
repnz
jbe
cmpsl
cmpsl
or
sbb
cmp
mov
xor
cli
lds
jecxz
test
ss
stos
ss
pushf
fs
gs
push
cmp
mov
fstl
aas
adc
inc
pop
or
mov
jo
dec
ret
jbe
imul
movl
push
push
cmpsl
addr16
adcl
xchg
xchg
xchg
cmp
pop
xor
mov
sbb
mov
cmp
aam
mov
js
hlt
push
insb
bsf
divl
aad
cmp
sub
lcall
cmpsl
add
aaa
and
mov
dec
xchg
pop
push
imul
and
inc
es
outsl
cmp
push
fs
fiadds
or
sub
cwtl
push
sbb
cli
mov
mov
xchg
add
mov
mov
mov
ja
notb
dec
jle
rcll
mov
mov
sub
jge
pop
cmp
fstl
xor
ret
mov
sbb
repz
mov
outsb
xchg
xchg
mov
sar
sbb
cmpsb
nop
mov
dec
sbb
mov
or
push
mov
call
mov
stos
push
mov
test
sub
leave
rcll
leave
out
into
or
in
dec
clc
xchg
cs
sti
les
xor
dec
movb
sahf
rcrb
ljmp
das
sub
in
and
mov
xor
call
fcom
fildl
push
cmc
popa
xor
xor
xlat
and
xchg
pop
pop
push
jnp
popf
xor
in
and
mov
pop
jl
mov
push
dec
mov
pop
or
cltd
stos
test
sbbl
pop
stc
add
lock
add
pop
clc
inc
xchg
mov
sbbb
mov
enter
test
mov
testb
mov
ja
or
out
dec
cmp
xchg
sahf
adc
lret
mov
orb
xor
shr
pop
xlat
jae
and
das
rorl
imul
leave
xchg
nop
in
jb
jmp
cmp
mulb
lds
mov
or
fndisi(8087
inc
in
mov
inc
push
mov
mov
shlb
dec
and
sub
xor
lods
cmp
testl
sbbl
xor
das
and
inc
mov
mov
jnp
mov
jle
push
cmp
push
and
es
insl
mov
mov
sub
push
add
ret
enter
adc
fildl
mov
mov
shrl
jp
jo
cmp
pushf
enter
add
or
in
inc
jmp
dec
mov
das
out
pop
add
bndldx
clc
cmp
mov
xor
sahf
mov
mov
xchg
push
mov
or
bnd
push
bound
jae
sub
fsin
adc
jl
mov
fsubrl
out
push
xchg
mov
dec
in
pop
imul
aaa
fdivrl
into
inc
adc
pusha
dec
mov
aaa
outsb
scas
mov
adc
pusha
movsb
lret
dec
sbb
xor
cwtl
push
fstp
mov
pop
sbb
mov
jle
jne
int
jge
pop
out
loopne
in
das
fistpl
test
mov
shrb
outsb
jb
fsqrt
add
xchg
ror
xchg
dec
xchg
and
loope
cwtl
adc
mov
ljmp
ficomps
les
mov
repnz
mov
aad
and
dec
cmp
mov
xchg
gs
mov
movl
pop
aaa
ret
xchg
push
cwtl
pop
and
jae
push
mov
mov
enter
in
cmc
cmpsl
sub
sbb
dec
lea
iret
ljmp
add
insb
cmp
in
push
rcll
fsts
dec
xchg
std
andl
lods
cmp
sbb
sti
addr16
sbb
jnp
pop
sti
pop
sti
out
jge
sbb
ret
cld
xchg
int3
lds
js
lret
in
jae
sub
inc
inc
mov
inc
xchg
adc
xor
and
je
loope
jle
inc
stos
mov
mov
xor
cmp
lods
mov
sub
xchg
fcompl
dec
pop
dec
lds
mov
adc
shr
inc
shr
test
or
test
mov
dec
shlb
push
fisttps
jb
push
xchg
out
mov
out
div
lock
gs
and
push
in
sbb
pushf
dec
sbb
add
and
movsb
aam
jmp
ljmp
jae
mov
mov
jns
lret
adc
fbld
in
ss
xchg
mov
out
push
pop
mov
mov
mov
jo
pop
or
adc
xlat
mov
call
sarl
les
aad
xor
lret
cmp
sub
pop
cmp
jg
pop
adc
fisttpll
test
outsl
cmp
jmp
mov
fwait
into
mov
push
mov
test
jle
sbbl
ss
xor
xchg
mov
cwtl
stos
lcall
jge
push
mov
sub
mov
mov
or
mov
push
push
cmp
mov
xlat
movsl
mov
add
mov
shll
mov
nop
daa
xor
mov
sbb
aad
andb
xchg
mov
xchg
cmp
test
shrl
or
push
mov
sub
aad
or
pop
adc
or
jo
and
sub
ficompl
cmp
jnp
ds
mov
pop
out
push
mov
lods
or
dec
cmpl
or
leave
cmp
sub
imul
stos
lods
jae
iret
outsl
in
or
jle
and
push
pop
sbbl
dec
adc
ss
sti
outsb
or
add
mov
jae
imul
push
push
push
sbb
and
aam
pop
jb
lcall
or
sti
aad
insl
nop
mov
jg
insl
movsb
dec
push
pop
xor
xchg
dec
inc
out
sbb
and
rcr
out
mov
adc
cmp
shlb
addr16
mov
jmp
pop
pusha
jl
rol
repz
push
and
cmpsb
cmp
repz
out
das
pop
jl
xchg
aad
sub
jmp
mov
mov
push
xchg
inc
stc
test
mov
out
iret
and
xor
xchg
repz
mov
aaa
popa
fldcw
sub
stos
add
sbb
dec
cwtl
and
jmp
xor
sbb
out
inc
lahf
daa
xlat
jecxz
jb
sub
cmp
jmp
in
fcmovne
cmp
sbb
mov
push
or
xchg
mov
sub
jns
push
out
ja
mov
pop
sub
testl
aam
nop
pop
jbe
pop
mov
mov
push
lods
inc
imulb
jnp
inc
test
out
and
lock
enter
inc
jmp
push
in
cmp
lcall
rolb
sub
sbb
xlat
shlb
cmp
clc
pusha
xchg
push
cld
in
jae
mov
sahf
xlat
and
arpl
ljmp
jne
inc
and
mov
mov
fsubrl
inc
inc
cmp
mov
mov
dec
inc
sub
pop
adc
mov
and
or
adc
mov
mov
mov
pop
xchg
or
cmpl
pop
xor
int3
repnz
dec
xchg
clc
xchg
xor
and
cmp
fnstsw
je
cmp
shr
sub
stos
test
ds
lods
or
inc
mov
je
sahf
sub
mov
dec
cmp
sbb
cli
into
pop
add
push
pop
jl
js
sbb
inc
pop
jb
mov
dec
sbb
dec
std
pop
inc
push
mov
sti
arpl
lods
je
add
sub
jnp
xchg
mov
sbb
mov
sbb
push
ret
jns
or
fstps
cmp
mov
das
test
sahf
xchg
lea
push
sub
repnz
sbb
dec
and
cmp
pop
mov
sub
enter
sub
lea
jo
repz
outsl
xorb
inc
and
pop
shlb
adc
popa
mov
inc
outsl
inc
xor
xor
xchg
popf
pop
aad
daa
dec
sbb
jle
push
in
rclb
sahf
dec
bound
push
pop
mov
lret
push
out
xor
add
push
push
add
adc
xchg
sub
mov
inc
scas
and
mov
in
or
mov
aas
inc
mov
jbe
arpl
dec
movsb
mov
pop
inc
pop
int
xchg
enter
scas
mov
and
jmp
cmp
xchg
pushw
and
repz
lret
and
jnp
sub
jg
mov
add
pop
adc
pop
lahf
das
mov
inc
pop
sahf
int3
and
mov
sbb
hlt
pop
dec
add
popa
es
jmp
subl
or
lea
std
rcrb
mov
sbb
movsb
pandn
rcrl
sub
jae
dec
ret
or
xor
leave
sbb
cmc
insl
enter
xor
fidivs
adc
cmpl
data16
mov
aas
cwtl
jb
xchg
adc
push
hlt
mov
xor
sti
sub
sub
sbb
mov
sbb
adc
sub
mov
push
test
xchg
test
fneni(8087
iret
mov
shrb
inc
jnp
pop
mov
scas
es
push
push
mov
loop
jmp
mov
test
pop
nop
fwait
shlb
mov
fwait
push
nop
jp
mov
into
aaa
sub
lret
xchg
insb
aaa
loope
or
in
je
sbb
in
mov
out
jae
scas
mov
js
cmpsl
std
mov
xor
movsl
rcll
jae
into
shll
imul
fnclex
mov
sbb
push
push
rol
imul
dec
xchg
inc
dec
orl
inc
imul
mov
xchg
push
dec
hlt
mov
sub
dec
sub
cmp
xor
and
mov
add
out
sbb
and
xchg
mov
pop
xchg
leave
loop
push
daa
out
dec
xor
push
call
aaa
jmp
xor
xor
arpl
jecxz
dec
add
div
fisttpll
cltd
fdivrs
mov
pop
mov
dec
cld
xchg
dec
xlat
jp
cmp
sbb
fmul
and
and
mov
xor
test
xor
shlb
push
xchg
mov
fwait
xorl
xchg
xchg
outsb
loope
aam
pusha
pop
rorb
or
and
popa
pop
jmp
aam
scas
xchg
fiaddl
sahf
xchg
enter
mov
xchg
adc
xor
jge
pop
sar
pop
inc
lods
cld
ret
adc
repnz
icebp
and
mov
loop
dec
xor
fs
sub
test
cltd
adc
mov
and
std
pop
pop
jle
out
mov
pop
cmp
mov
pop
lods
aad
xor
cmpsl
sub
mov
jo
loopne
cld
inc
mov
cmpsb
outsb
shl
xor
sahf
popa
test
jp
xchg
test
xor
mov
push
ljmp
jb
sbb
ror
outsb
or
push
fs
test
mov
inc
dec
jle
into
ss
icebp
ss
push
xchg
jb
cmc
pop
xor
fsubrl
movsb
sub
adc
jb
pop
inc
or
jmp
mov
pop
mov
mov
cmp
cld
gs
aam
mov
outsl
adc
insl
cli
adc
das
jne
mov
ss
jns
pushf
and
adc
frstor
fsts
pop
jbe
mov
fsts
outsl
in
addb
or
push
imul
sbb
add
jmp
ds
sbb
sub
test
faddl
les
adc
sbbl
lret
dec
pop
dec
pop
mov
inc
add
dec
lods
xor
es
mov
sbb
cltd
xchg
adc
sbb
lret
call
add
aad
add
into
sahf
xlat
mov
ficoml
add
outsl
icebp
stos
lret
mov
inc
jge
jae
dec
lea
pop
xchg
add
insb
cmp
jns
data16
stos
inc
test
shrb
insb
cmp
cmp
divps
fcoml
xor
xchg
dec
stos
test
int3
lea
jmp
push
in
jbe
mov
loop
mov
mov
mov
movsb
or
pop
loopew
ja
add
incb
or
xchg
jb
or
imul
divl
pushf
inc
int
jmp
cs
cli
scas
push
inc
leave
popa
jno
ret
test
out
leave
inc
inc
inc
leave
push
mov
ss
mov
add
pop
cmp
pop
mov
mov
mov
xor
xchg
outsb
push
or
lds
sbb
not
xchg
mov
dec
xchg
xchg
dec
inc
cld
mov
add
fistps
sub
adc
hlt
mov
dec
dec
push
fnstenv
add
mov
dec
fnsave
in
sbb
push
pop
xchg
xchg
shl
movsl
jo
and
and
lods
cmpsb
sbb
jo
lods
rolb
xchg
hlt
or
inc
repz
add
push
mov
sahf
xchg
mov
add
push
jp
fbld
push
mov
jne
push
sti
shr
inc
push
fcomps
shlb
sub
mov
fmuls
lret
in
icebp
jmp
push
cmpsl
mov
lret
dec
push
mov
push
lret
mov
mov
mov
xlat
xchg
movsb
pop
mov
dec
mov
mov
rorl
sub
icebp
in
cmp
test
jg
jg
pop
adc
loopne
mov
sti
or
and
mov
les
ds
inc
sub
enter
xchg
popf
sbb
xchg
leave
shrb
loop
sahf
xor
adc
aad
stc
icebp
pop
sbb
xchg
adc
dec
and
cmp
loop
lods
mov
sbb
std
pop
xlat
je
mov
idivb
cmp
out
outsb
cmp
ja
mov
test
fisubrs
sbb
aas
test
fisubl
ret
inc
xor
mov
and
and
rcrb
xor
movsb
pop
testl
pop
nop
and
ror
sub
iret
out
arpl
js
test
dec
fs
insl
ja
xor
sub
movaps
leave
inc
add
sbb
or
in
cli
mov
inc
lcall
test
in
aad
aam
cwtl
adc
mov
jmp
sbb
ds
movsl
add
sarb
int3
aad
aaa
ret
add
shrb
lods
addr16
mov
test
int3
mov
scas
sub
mov
outsl
mov
jp
fstps
stos
stos
les
push
pop
fadds
jecxz
movsb
das
or
mov
out
sub
jae
push
pop
lcall
cld
push
lret
cmpl
nop
sub
push
pop
or
cmp
xchg
mov
jnp
xchg
rcll
pop
shrb
lcall
cli
rcll
ljmp
push
xor
pop
lahf
xchg
pop
cli
dec
jo
xlat
lret
cmp
dec
daa
pop
lret
jns
adc
jg
pop
mov
mov
and
test
push
mov
aaa
add
fwait
or
imul
adc
jne
scas
mov
test
jge
mov
stc
push
outsb
or
mov
inc
add
dec
jle
sub
int
cwtl
xor
cmpsl
ficomps
stos
mov
es
adcb
in
filds
mov
adc
jecxz
sahf
sub
or
pop
pop
out
xor
cltd
push
pop
cs
stos
xchg
push
push
lea
sub
stos
out
push
dec
and
add
jae
addb
int
mov
pusha
int
adc
add
