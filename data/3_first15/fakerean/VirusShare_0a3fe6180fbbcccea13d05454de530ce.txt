lea
xor
xor
xor
lea
xchg
neg
mov
lea
xchg
pop
xchg
not
cmp
je
cmp
jne
call
mov
ror
xor
shl
ror
not
adc
xor
mov
not
mov
xor
movzwl
neg
mov
cmp
jae
push
mov
sub
pusha
xor
lea
xchg
cmp
jne
cmp
jae
xchg
rol
mov
mov
cmp
jne
mov
mov
xor
xor
push
mov
cmp
jne
rcr
and
xor
xor
adc
mov
lea
xor
xor
mov
mov
lea
mov
mov
cmp
jne
adc
shrl
neg
xor
mov
mov
mov
mov
mov
mov
mov
not
cmp
jne
shr
xor
lea
pushl
rcl
add
lea
ror
add
movzbl
mov
neg
cmp
jae
lea
lea
lea
lea
neg
cmp
jne
xchg
shl
shl
xor
xor
lea
mov
xor
xor
mov
cmp
jae
neg
lea
xor
not
mov
rol
xor
xor
popl
and
mov
mov
neg
add
cmp
jne
neg
xor
lea
xor
ror
neg
xor
xor
shr
xor
shl
not
cmp
jne
neg
movl
xor
adc
movl
mov
adc
cmp
jae
xor
rol
rcl
xor
shl
xor
mov
mov
mov
push
push
call
cmp
jne
lea
xor
mov
rol
xchg
mov
mov
lea
and
rcl
popa
leave
call
cmp
jne
adc
shl
mov
mov
xor
rol
not
mov
shr
decl
jne
cmp
jae
xchg
and
lea
not
lea
not
rcr
shl
mov
lea
rcr
not
ror
not
cmp
jne
xor
xor
cmp
je
xchg
cmp
jne
add
push
mov
mov
mov
mov
mov
xor
lea
rcr
mov
xor
cmp
jne
lea
mov
mov
sub
shr
xor
xor
cmp
jne
xor
adc
neg
mov
ror
and
neg
shl
mov
shr
lea
xor
xor
cmp
jae
xor
adc
lea
push
shl
mov
mov
mov
neg
lea
ret
mov
lea
lea
lea
cmp
jne
rcl
lea
shl
call
lea
shl
xor
neg
cmp
jae
mov
ror
xor
xor
lea
cmp
jne
mov
mov
neg
mov
neg
mov
xor
shl
neg
mov
not
lea
adc
lea
push
push
pushl
pushl
call
cmp
jae
xor
lea
or
je
not
adc
xchg
cmp
jne
xor
and
adc
mov
not
rcl
cmp
jne
rcr
rol
mov
mov
mov
lea
mov
cmp
jne
xor
lea
lea
mov
lea
xor
mov
cmp
jne
mov
xor
neg
lea
mov
lea
cmp
jne
frstor
mov
cltd
dec
xlat
out
jbe
negb
sub
out
call
sbb
call
xchg
mov
es
inc
xchg
jb,pn
push
push
insl
fsubp
push
mov
dec
into
mov
xor
enter
dec
or
stc
cltd
rol
jg
movsl
call
pop
mov
movsl
mov
mov
pop
ss
xchg
add
fsubl
sub
mov
cmp
rcrb
cld
iret
ficompl
popf
pop
ds
cmp
cmp
fmul
mov
jp
mov
xchg
enter
push
xchg
mov
and
adc
sahf
mov
xorl
push
aad
xor
movsl
mov
pop
es
inc
inc
and
adc
xor
inc
inc
and
pop
fcomip
inc
mov
cmpsl
jl
fisubs
mov
mov
fdiv
ss
and
mov
loop
inc
inc
adc
loope
mov
pop
popa
inc
fstl
mov
fcoml
inc
mov
sarl
clc
aam
mov
xchg
clc
xor
mov
out
pushf
movsl
xor
and
std
aad
xchg
mov
xlat
fmul
divl
and
xor
pop
shlb
push
cld
std
in
ss
repnz
mov
icebp
lods
mov
std
mov
push
jb
push
mov
sbb
mov
test
pop
ss
ret
fcompl
mov
mov
out
pushf
movsl
dec
sbb
mov
and
lock
sbb
or
push
loopne
mov
fsubrl
mov
clc
jge
cltd
or
pop
out
pop
push
clc
lea
inc
mov
cwtl
xor
stos
xor
xor
int
mov
xchg
lods
inc
xorl
mov
pop
int3
addr16
divb
or
iret
inc
mov
mov
inc
cmp
xor
jne
mov
sbb
xor
jne
cmp
insb
jne
add
repz
cmc
movsl
inc
mov
mov
mov
or
rorl
xchg
or
or
sbb
out
xchg
push
add
inc
in
rolb
pop
out
shlb
and
daa
sub
es
jne
dec
mov
sbb
xor
xor
sbb
mov
je
lcall
scas
lea
je
lcall
sbb
fs
shlb
dec
push
addr16
or
xor
loop
clc
dec
cli
gs
lcall
add
scas
cli
cmpsb
add
add
dec
addl
mov
and
or
mov
push
mov
gs
xchg
int
fnop
gs
fst
xor
dec
jne
xor
ror
pop
push
sub
mov
dec
cli
out
lea
fisubl
mov
clc
pusha
loop
jns
push
insl
popf
arpl
xor
push
cmp
add
lea
dec
cld
cld
and
push
jne
orb
xchg
xchg
aad
jmp
pop
mov
popf
mov
lods
jo
adc
fldcw
into
stc
or
sbb
fimull
neg
jns
inc
cmp
xor
jne
mov
or
xor
lcall
std
sub
cmp
xor
in
xor
inc
aam
mov
mov
and
pop
lret
xchg
add
xchg
das
cmp
testl
sub
and
mov
mov
jge
sub
lcall
lcall
push
mov
je
pop
mov
out
xor
lcall
mov
sbb
sub
lcall
icebp
loope
mov
gs
sub
lcall
push
lahf
cld
gs
test
lcall
icebp
loopne
mov
gs
add
mov
lret
arpl
jne
daa
in
ja
daa
add
rdtsc
fists
inc
adcl
or
lcall
or
decl
stos
xchg
xchg
add
push
sar
xchg
ljmp
add
out
jg
jne
or
std
lods
pop
icebp
js
out
jg
jne
cmp
decb
dec
orl
sbb
lcall
popf
in
add
xor
jle
xor
lea
jge
xor
divb
pop
sti
fwait
jecxz
arpl
into
je
movsl
inc
subb
fsts
lcall
jne
cmp
addr16
mov
adc
stc
sti
data16
mov
or
ftst
add
out
or
xor
add
dec
bound
inc
push
daa
mov
xor
mov
cmp
xor
imul
jg
jge
cmp
xchg
es
add
testb
xor
mov
xor
or
scas
mov
mov
xor
mov
sbb
xchg
and
dec
arpl
into
je
sub
and
pop
push
sub
xor
cld
xor
dec
movsl
xor
jne
cmp
es
movsl
inc
fwait
std
and
jmp
gs
mov
adc
je
add
pusha
lcall
lret
repnz
jno
jne
sub
stos
insl
or
out
ss
pop
jns
mov
insb
xorl
add
popa
xor
decb
fldlg2
add
popa
mov
add
stc
push
je
jne
push
fs
in
cmp
jns
xor
gs
xchg
dec
insb
cld
stos
sbb
hlt
cmc
and
xchg
or
mov
adc
push
out
inc
inc
dec
mov
ds
arpl
cmp
add
xlat
fs
aas
xorl
jae
cmpsb
jno
imul
cmp
sub
ljmp
repz
hlt
das
sub
int3
or
scas
jno
jle
arpl
mov
outsl
pop
or
mov
push
mov
addr16
jb
mov
push
jmp
scas
jb
aaa
jmp
and
push
imul
out
pop
and
dec
mov
or
pop
cmc
mov
inc
push
jo
imul
pop
xchg
lcall
ja
imul
xchg
jmp
lahf
mov
bound
dec
mov
cmpsl
pop
sub
int3
test
out
or
out
and
jo
imul
jmp
xchg
into
or
popa
arpl
aam
fwait
mov
dec
inc
stc
addr16
js
outsb
fmull
pop
mov
sbb
int
push
mov
dec
fnstsw
mov
xchg
lret
stc
xor
xchg
jns
call
rep
push
fsincos
out
dec
aad
pop
or
lcall
lods
and
sbb
inc
das
mov
test
inc
jb
mov
xchg
jle
xchg
sub
repz
mov
jecxz
add
jmp
cmp
sbb
pop
jns
mov
mov
inc
outsl
and
inc
push
pop
sub
or
arpl
gs
test
sarl
imul
insl
push
cmpsl
mov
scas
loop
mov
or
jmp
or
gs
mov
and
inc
movzwl
mov
clc
sti
push
icebp
call
loop
mov
mov
mov
dec
std
movsl
mov
mov
in
sub
loope
inc
addr16
fwait
cltd
jae
sbb
imul
arpl
icebp
add
in
popa
adcl
repnz
mov
aad
xchg
cltd
xor
xlat
aaa
and
fwait
pop
xchg
xchg
cmpsb
mov
add
andb
icebp
aam
lahf
xchg
or
mov
test
cmp
mov
cwtl
push
rclb
cmpsl
sub
lea
outsl
push
mov
adc
xchg
pushf
add
sub
push
mov
mov
popa
popa
add
movsb
cmp
jbe
inc
shr
popf
mov
mov
sar
lahf
mov
push
push
cmp
scas
mov
sub
inc
xorb
push
leave
xchg
mov
push
movsb
loopne
std
stos
add
mov
sbb
in
hlt
loopne
adc
loopne
jno
sbb
sbb
lds
in
cs
xchg
or
repz
adcl
insl
cmc
xchg
pop
jne
mov
push
jnp
ss
cmp
aad
sbb
push
fwait
push
pop
mov
and
jae
cmp
frstor
jns
push
or
in
das
mov
sbb
mov
pushf
fstpt
lcall
arpl
es
fisttpl
xor
sbb
sarl
adc
mov
pop
loope
dec
sub
pop
sub
lcall
into
mov
lret
filds
mov
dec
or
sbb
adc
movsl
mov
aad
std
cmc
dec
jo
push
iret
jne
mov
or
in
cmp
jmp
inc
jbe
lea
fs
push
cmpl
xor
std
xlat
out
loop
and
lret
adc
data16
out
lret
mov
cmp
testb
dec
out
cmpsb
ret
jecxz
mov
repnz
mov
mov
sub
lea
fdivrp
shll
dec
out
xchg
int
iret
add
cltd
pop
aad
insb
dec
xchg
sahf
mov
mov
push
dec
popf
into
int3
inc
call
das
test
aad
data16
inc
lock
ficompl
ljmp
or
in
adc
jl
ret
jl
insl
repnz
xchg
adc
scas
pop
clc
lret
movsl
test
js
scas
fcmovnu
xor
cwtl
mov
mov
lahf
jl
out
addr16
movsl
pop
sub
ret
arpl
int
jg
into
mov
loop
dec
ds
sub
adc
dec
dec
cmpsl
fcomip
out
cmpsl
lea
ljmp
adc
rclb
adc
mov
lret
fnstcw
push
stos
add
jb
ret
xlat
pop
inc
addl
cmp
or
decl
add
jb
dec
addr16
mov
dec
stos
adc
leave
sti
xor
fstps
call
sbb
aaa
popf
into
test
ljmp
push
push
xchg
xor
mov
inc
insb
scas
int
inc
cmp
mov
scas
add
pop
daa
mov
and
jbe
lret
fcomi
loopne
in
add
jp
and
sbb
loopne
insb
inc
ja
add
mov
jns
jge
or
je
lret
outsl
sub
fwait
out
dec
mov
pop
in
sub
out
enter
test
pop
stc
push
xor
xorl
lds
loope
aad
loop
addr16
jle
decb
lcall
adc
cmp
addr16
daa
add
and
cs
xor
jge
jno
stos
ret
scas
adc
jmp
sbb
in
pop
std
out
jp
add
add
xchg
std
sub
pop
enter
pop
jae,pn
fxtract
jbe
movsl
dec
add
pop
jmp
jle
mov
sbb
sbb
xchg
pop
inc
sbb
ret
aaa
cmpb
mov
and
lock
clc
jmp
out
jg
pop
xor
or
fnsave
repnz
or
pop
aaa
sub
jo
dec
sti
mov
imul
in
fwait
xchg
sbb
and
dec
inc
cmpsb
fdivs
fisubrl
lds
pop
mov
adc
out
mov
xchg
jnp
jo
cwtl
xor
mov
jecxz
addl
ret
out
rolb
dec
pop
test
data16
push
and
scas
adc
mov
mov
xorb
cs
push
xchg
test
nop
fdiv
je
lret
sbb
mov
lods
pop
xor
jecxz
cmp
and
ret
mul
enter
dec
mov
out
es
aaa
sbb
mov
enter
in
mov
mov
sub
repnz
rol
jl
jbe
cmpsl
sub
fidivrl
lock
inc
mov
mov
mov
mov
movsl
add
jge
xor
or
push
mov
in
pop
push
das
mov
cli
sbb
mov
in
cmp
jecxz
je
shll
popa
cli
into
jl
push
push
dec
pushf
pushl
das
push
push
ret
repz
test
repz
pmaxsw
xor
shrb
ret
lcall
scas
mov
idivb
sbb
push
lods
add
.byte
cltd
.byte
