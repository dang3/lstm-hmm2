adc
mov
bswap
adc
add
add
int3
adc
add
pop
xchg
bswap
adc
cmp
mov
mov
movl
movl
mov
movl
call
xor
mov
call
cmp
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
movl
mov
mov
xor
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
test
js
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
mov
jmp
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
push
lea
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
jne
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
mov
test
jne
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
test
jne
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
mov
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
test
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
mov
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
mov
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
call
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
test
je
mov
mov
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
mov
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
jne
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
mov
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
mov
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
cmp
je
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jb
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
cmp
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
cmpl
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
cmp
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
les
add
lock
mov
add
add
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
call
mov
int
xchg
add
mov
andl
jl
xchg
push
push
clc
mov
ja
add
jb
mov
add
add
add
std
into
jno
popa
pop
add
pop
add
mov
nop
addl
pop
rclb
in
hlt
push
mov
add
push
push
lea
push
push
push
push
push
push
call
add
pop
in
roll
add
std
outsl
in
lods
cld
jmp
lock
scas
mov
nop
add
hlt
jae
addr16
rcrl
mov
popa
shl
jle
clc
push
addl
pop
popl
push
push
push
push
push
push
push
lea
push
call
into
movsb
rolb
ret
mov
pusha
xchg
add
jo
add
mov
push
add
pop
add
lret
mov
pop
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
roll
loope
aam
add
add
mov
aam
sahf
cltd
add
mov
add
adcl
int3
aad
add
xchg
add
mov
enter
pop
push
push
push
lea
push
lea
push
lea
push
push
call
out
lea
mov
add
pop
imul
add
push
xchg
pop
add
flds
jle
add
add
ljmp
icebp
add
add
cld
add
fsubrl
pop
cwtl
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
xchg
add
add
add
or
mov
imul
enter
add
test
in
mov
mov
xchg
jbe
add
sub
add
movsl
jecxz
hlt
mov
add
mov
sub
pop
call
push
push
push
lea
push
push
push
push
push
call
mov
add
mov
cltd
stos
add
add
add
add
sahf
mov
lock
in
je
add
sub
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
pop
add
add
fistpl
cwtl
iret
pop
push
pop
jo
stos
addb
add
jp
flds
incb
out
lods
sahf
add
add
add
call
add
insb
mov
into
mov
add
fmull
add
cmpsb
cmc
mov
push
scas
add
lcall
cmp
add
ret
push
lea
push
call
lret
add
rolb
int3
repnz
iret
fistpll
lods
xchg
pop
jb
mov
in
add
cmc
gs
mov
mov
push
push
lea
push
lea
push
call
lret
push
add
add
mov
fs
lods
add
jb
add
icebp
add
add
add
popa
xchg
fisttpl
cwtl
lea
push
sarl
add
fs
add
add
gs
out
sub
pop
mov
add
push
lea
push
push
push
push
push
push
push
call
add
add
mov
lea
gs
jae
mov
add
push
add
pop
in
add
icebp
icebp
mov
pop
add
add
xchg
push
mov
add
scas
xchg
jnp
add
add
add
pusha
add
add
imul
pushf
jecxz
add
jge
mov
jo
bound
add
ret
add
add
add
push
push
push
push
push
call
add
add
add
add
add
movb
jae
pop
test
add
mov
jne
in
fsubl
mov
arpl
shl
jbe
repnz
add
add
cmpsl
add
pop
add
add
insb
add
pop
add
repz
adc
test
shl
push
sub
add
dec
add
sub
dec
sub
add
pop
dec
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
cltd
add
lods
xchg
cmc
icebp
test
loop
mov
jb
add
xchg
lds
shlb
popa
mov
mov
jle
mov
pop
pushl
push
push
push
lea
push
push
push
push
call
add
push
fs
pusha
mulb
pop
push
add
loopne
xlat
rcl
lods
rcr
addl
add
fidivs
mov
pushf
ljmp
js
mov
mov
lcall
add
push
push
push
push
push
call
add
flds
add
xchg
hlt
add
add
add
mov
xchg
jmp
add
cmpsb
negl
add
movsb
add
add
push
add
cmc
int3
add
mov
add
add
mov
jno
add
pop
pop
add
xchg
xchg
add
mov
in
lcall
inc
lock
push
push
lea
push
push
push
push
call
pushf
sahf
add
add
mov
addl
cmc
pop
add
out
mov
add
shr
add
pop
mov
add
inc
call
push
push
push
push
push
lea
push
push
call
data16
add
mov
test
ret
fiaddl
xlat
lods
loope
fadds
add
add
jne
add
add
in
pop
jb
in
cmpsl
add
add
add
pop
add
mov
rcrl
jp
add
add
je
sti
add
arpl
in
mov
add
arpl
jns
add
insb
push
sub
pop
lea
push
push
push
push
push
push
lea
push
call
add
stos
lahf
add
xchg
add
xchg
add
add
add
outsl
xlat
add
jo
mov
add
push
add
fwait
add
add
les
loopne
add
mov
into
pop
hlt
add
cmpsl
add
add
mov
add
xchg
add
mov
sub
pop
pushl
push
push
push
call
lret
add
add
mov
outsl
clc
filds
test
call
jo
xchg
pop
mov
shl
jecxz
add
test
test
sarb
addr16
fidivl
mov
mov
sub
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
test
push
test
push
iret
add
jno
add
push
jecxz
add
ja
xchg
mov
add
add
rorl
lcall
sub
add
mov
mov
in
mov
adc
push
push
push
push
lea
push
call
sti
jbe
jns
mov
lea
lods
add
push
int3
hlt
je
pop
andb
out
add
ror
cltd
imul
in
add
mov
add
pop
cld
sti
add
add
add
faddl
int
lods
xchg
cld
add
add
add
add
add
fcompl
jne
push
push
push
push
push
push
lea
push
push
call
mov
shlb
xchg
add
add
add
repnz
arpl
xorb
lock
add
add
add
lods
add
add
add
loopne
add
add
add
push
stos
mov
push
add
add
add
mov
mov
pushl
call
push
push
lea
sub
rol
add
push
or
not
add
sub
sub
dec
pop
lea
rol
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
add
pop
loope
add
add
sub
stos
add
insb
imul
scas
xchg
add
xchg
addl
pop
fldl
jns
cmpsl
add
cwtl
lock
cmpsb
add
nop
mov
add
push
lods
add
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
pop
add
jno
mov
mov
add
repnz
add
pop
add
out
hlt
xchg
loope
add
mov
add
mov
xchg
push
clc
mov
pop
xchg
pop
popa
cmpsb
fidivrs
add
add
movsb
add
lods
sub
pop
call
push
push
push
shl
dec
push
xor
add
add
sub
dec
add
pop
rol
shl
pop
push
push
push
push
push
call
xchg
aam
add
add
add
add
fldl
mov
test
out
add
filds
pushf
add
mov
add
add
imul
mov
add
cwtl
mov
mov
mov
bound
enter
mov
icebp
mov
add
cmpsl
push
pop
mov
cmpsb
mov
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
movsb
std
icebp
pushf
fnstenv
fsubrl
les
add
add
fmul
add
roll
sti
cmc
ret
add
loopne
add
call
add
add
imul
rclb
add
add
add
cltd
add
push
out
lcall
loopne
lcall
rorb
leave
lret
pop
ret
push
push
push
push
lea
push
push
call
flds
add
cltd
push
movsl
loop
cltd
mov
add
pop
add
add
add
push
stos
pop
in
in
add
pusha
sub
pop
push
push
push
lea
push
call
jbe
lods
sahf
push
data16
lret
addb
add
mov
add
add
roll
add
fadds
add
fwait
lods
call
scas
scas
add
ret
js
js
add
add
xchg
mov
jecxz
in
hlt
pop
push
push
push
push
lea
push
call
lahf
stos
lret
mov
sar
push
add
outsl
bound
add
mov
add
or
insb
add
add
mov
pop
add
ja
sub
pop
mov
add
push
lea
push
push
push
lea
push
lea
push
call
fbstp
leave
mov
lods
add
jo
mov
fyl2x
add
add
add
movsl
xchg
pop
pushf
add
andl
add
cli
add
loope
add
mov
add
scas
loop
fwait
mov
add
fisubs
jb
bound
test
sub
pop
add
push
push
call
in
add
add
add
add
sahf
add
mov
les
add
add
out
orl
sub
pop
add
mov
push
push
lea
push
push
lea
push
lea
push
push
push
call
pop
add
add
add
add
lret
out
add
push
pop
cltd
js
mov
add
into
fcoml
jns
add
add
add
lock
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
aam
xchg
stc
mov
out
add
add
add
add
outsl
sti
add
jb
add
addr16
out
mov
mov
mov
xchg
add
add
jnp
aad
call
add
xchg
add
out
add
xchg
xchg
movsb
sub
pop
add
push
push
push
push
lea
push
call
add
add
push
jne
add
filds
sar
add
xchg
lock
out
add
add
cmpsb
add
add
bnd
xchg
popl
push
xchg
add
add
xchg
test
add
fistpll
je
in
in
pop
add
push
push
push
lea
push
push
push
call
mov
scas
cmpsb
repnz
pusha
add
add
add
in
fldl
ljmp
mov
add
push
add
je
mov
push
add
add
cld
lcall
add
add
sub
pop
mov
xor
push
push
push
push
push
push
call
test
cwtl
add
addb
cwtl
add
loope
push
rolb
sbbl
jecxz
add
call
push
push
push
push
push
push
push
push
call
fxch
mov
add
add
push
pusha
add
je
push
lcall
rol
xchg
int
add
add
lods
add
jae
add
add
add
mov
push
mov
test
add
xchg
add
lds
add
sub
pop
pop
push
push
push
call
fadd
mov
push
cld
add
add
push
add
andl
jne
incb
faddl
rcll
sti
loope
iret
loopne
loopne
std
add
ja
mov
lods
mov
call
add
iret
mov
mov
enter
add
add
imul
add
xor
adc
cld
adc
push
call
jae
pop
test
add
icebp
push
lret
jecxz
add
neg
movsb
ret
add
and
push
stos
push
jno
pop
jne
lock
push
add
test
add
stc
mov
mov
mov
clc
lcall
or
push
lea
push
lea
push
call
add
add
je
mov
mov
icebp
add
mov
popl
les
add
add
mov
xlat
test
push
add
add
filds
xchg
ret
add
mov
mov
add
add
add
mov
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
stc
add
rolb
and
jp
add
add
add
mov
ret
sarl
data16
pop
jle
pop
in
add
push
add
aam
add
add
js
add
scas
add
loopne
add
mov
test
add
push
push
lea
push
push
push
call
add
mov
loop
mov
mov
add
pop
jecxz
xchg
add
js
rcrb
add
mov
xchg
add
cmc
stos
lods
stos
lods
add
add
push
add
jmp
stos
test
in
movsb
add
add
in
in
pop
mov
push
push
push
push
call
jp
add
push
decb
call
enter
xchg
push
stos
push
add
leave
not
add
add
movsb
pop
testl
add
lcall
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
call
mov
mov
movsb
out
in
add
bound
repnz
aad
lock
movsb
shrl
add
jle
scas
gs
push
add
fistl
add
stc
fsts
mov
add
mov
in
andb
jne
push
add
push
out
mov
jp
add
cld
out
mov
add
fldt
in
fcomps
les
push
push
lea
push
push
lea
push
lea
push
call
add
cli
nop
add
add
popf
scas
enter
filds
scas
add
add
add
add
aad
rcrb
add
in
in
lcall
enter
mov
testl
in
into
xor
xor
add
push
mov
movb
int3
add
mov
add
add
push
add
in
xorb
jne
add
out
add
jge
jmp
test
in
hlt
pop
rep
push
push
push
push
push
lea
push
push
call
jns
call
mov
push
aam
add
pop
jmp
add
in
lods
add
add
lcall
fsub
pushf
add
test
roll
add
add
in
mov
lea
add
in
add
add
lds
sti
add
add
add
add
mov
push
push
lea
push
push
push
push
push
push
call
mov
fildl
jnp
add
test
xchg
add
add
in
add
iret
mov
add
sti
cwtl
add
icebp
ret
pop
add
ljmp
mov
shrb
mov
lcall
pop
in
push
push
call
neg
add
fdivrp
int
add
cmc
mov
mov
add
add
ret
sbbl
xchg
add
lcall
ret
add
add
push
push
push
call
out
cmc
mov
add
jnp
pop
add
jae
lret
jp
add
addr16
out
add
adc
mov
add
mov
pop
add
add
jnp
add
mov
pusha
add
enter
add
add
push
push
lea
push
push
lea
push
push
push
push
call
add
add
leave
jl
mov
add
jp
add
cmc
add
mov
xchg
add
xchg
add
xchg
mov
lock
add
imul
cltd
push
mov
sub
pop
mov
push
push
push
push
call
mov
push
in
loopne
test
jle
add
add
xchg
sar
jmp
rcrl
push
add
add
icebp
add
lcall
add
push
push
push
push
push
push
call
leave
add
jo
add
enter
pop
add
add
outsl
in
test
leave
mov
aam
shlb
add
in
fiadds
test
insb
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
push
jmp
fists
iret
aad
mov
add
sarl
outsl
add
add
add
jno
mov
mov
lods
jp
xchg
add
into
lea
js
out
nop
mov
mov
jl
add
lret
add
lcall
push
and
xor
adc
sbb
pop
push
call
add
loopne
add
add
pop
rol
add
and
ficompl
loopne
add
add
add
lods
add
cwtl
jnp
add
iret
clc
xchg
lret
add
add
push
out
jle
pop
mov
add
adc
push
push
push
push
push
push
call
add
jns
nop
xchg
add
push
iret
add
push
cmpsl
add
add
pop
jbe
out
add
cli
add
pop
add
push
lock
in
fdivr
stc
icebp
sub
pop
add
push
push
push
push
push
push
call
push
mov
add
roll
addb
lret
add
add
add
add
add
shl
pop
add
add
pop
jns
add
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
call
add
add
jl
test
fmulp
lret
hlt
add
insb
fmulp
add
xorl
xchg
xchg
mov
in
push
add
add
pushf
mov
cwtl
loop
add
add
test
jnp
sti
outsl
leave
lds
push
push
xchg
xchg
js
outsl
add
ja
incb
ret
push
jle
push
push
push
push
lea
push
call
add
add
lcall
add
xchg
add
add
add
add
jp
jp
add
jo
aam
add
add
shrb
xchg
test
lahf
cmc
pop
out
popa
add
add
loop
fimull
lcall
rorl
stos
push
xor
lea
push
or
inc
add
sub
rol
sub
shl
ror
pop
sub
add
ror
shl
pop
push
push
push
push
push
push
push
lea
push
push
call
xchg
ljmp
and
add
add
hlt
test
in
into
add
rol
push
add
add
insb
add
mov
add
flds
repnz
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
je
xchg
jnp
jbe
add
loopne
test
jbe
sarb
add
mov
enter
fildl
add
cmpsb
cmc
jae
add
mov
xchg
add
add
popa
mov
push
ljmp
pop
add
into
mov
sub
pop
call
push
lea
push
push
push
push
push
push
push
call
jmp
push
push
mov
lea
add
add
mov
add
add
add
mov
add
pop
add
xchg
add
jns
add
push
pop
add
add
arpl
out
stc
add
push
xchg
addb
mov
lcall
add
mov
add
ret
lret
or
inc
add
ror
sub
sub
xor
pop
rol
ror
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
popf
add
pop
mov
filds
push
mov
fmuls
add
add
add
mov
pop
mov
pop
stos
roll
add
add
lock
lret
jl
add
mov
add
loop
mov
pop
in
mov
push
push
push
push
push
lea
push
lea
push
push
call
mov
fiaddl
add
push
loope
add
lahf
out
add
xchg
mov
jle
stc
add
add
xorb
out
mov
lea
add
mov
in
sub
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
test
cli
push
add
test
test
add
lock
add
rolb
add
add
data16
roll
sub
pop
mov
push
push
call
std
loopne
mov
in
add
add
mov
add
add
mov
xchg
test
add
add
add
mov
add
cmc
out
add
in
clc
lcall
push
push
lea
push
call
stc
add
add
add
scas
into
imul
add
mov
jae
xchg
add
jge
scas
cld
add
scas
add
add
add
add
ret
cli
xchg
sti
clc
mov
xchg
fbstp
mov
mov
stos
add
add
sub
pop
push
push
add
pop
mov
push
lea
push
push
push
call
cmpsb
mov
add
pusha
les
hlt
add
xchg
push
test
shll
xchg
cld
mov
pop
loopne
push
mov
add
jecxz
add
aad
add
shl
add
fwait
into
mov
lcall
pop
in
push
dec
pop
add
push
push
push
lea
push
push
push
push
push
call
ja
add
add
add
add
movl
jb
test
add
push
ja
add
add
jl
loope
test
lcall
ret
mov
lea
pop
mov
xor
push
ror
pop
add
push
sub
xor
pop
push
push
pop
mov
xor
push
pop
add
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
mov
add
add
add
mov
add
add
add
rol
add
add
mov
mov
mov
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
add
aam
loopne
outsl
add
add
stos
pop
cltd
mov
add
add
cwtl
idivl
add
sti
imul
loopne
xor
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
cmc
xchg
int3
jbe
jb
leave
add
je
add
add
int3
push
add
add
stc
je
add
roll
xlat
add
insb
lods
add
cwtl
mov
test
mov
enter
add
jae
add
test
add
jge
in
mov
cmpsb
add
add
in
fcomps
les
add
push
pop
rep
push
push
lea
push
push
push
push
push
lea
push
push
call
insb
mov
cld
jge
add
add
add
add
push
ror
add
add
add
call
add
xchg
movsl
jns
add
sub
pop
mov
xor
push
add
pop
or
je
push
sub
lea
sub
pop
mov
push
push
push
push
push
lea
push
push
lea
push
call
pop
jge
divl
scas
pop
add
mov
add
lahf
cmc
repnz
add
pop
add
mov
add
mov
add
je
hlt
shr
xlat
add
add
nop
rcrl
add
rcrb
addl
xor
push
push
lea
push
push
call
add
add
push
mov
scas
xchg
add
add
add
jae
add
movl
cltd
shrb
addr16
pop
push
mov
add
add
mov
add
cli
scas
loop
fnstenv
lret
popf
sub
add
popa
popf
sub
pop
add
push
dec
ror
pop
mov
xor
push
ror
add
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
call
add
push
std
mov
add
fbld
filds
push
mov
add
shll
idivb
movb
jbe
sub
pop
add
push
dec
not
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
faddl
jle
jp
lods
enter
lea
add
add
pop
add
jp
pop
add
add
xchg
add
jno
pop
addl
add
add
add
add
jbe
mov
mov
add
les
inc
or
jno
adc
push
push
lea
push
push
push
push
lea
push
push
call
add
cmpb
test
lock
sbbb
ror
fcmovb
add
lcall
add
add
mov
scas
add
add
aam
add
xchg
add
push
call
out
add
add
add
add
add
les
push
nop
add
sub
pop
xor
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
test
jp
add
add
add
fcmovne
add
add
xchg
fiaddl
cli
add
push
add
insb
lcall
add
add
add
imul
pop
add
push
push
push
call
fiadds
add
call
add
lods
push
andb
add
shl
add
add
add
mov
mov
out
sub
pop
add
push
add
add
pop
pop
rep
push
inc
add
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lcall
imul
in
add
mov
add
add
xchg
add
jae
add
mov
jp
test
add
pop
add
test
fiaddl
add
add
add
popa
add
add
int
add
sub
pop
xor
push
push
push
push
lea
push
push
call
xchg
add
add
sti
in
add
rcrb
add
cli
xchg
xchg
add
lret
fsqrt
add
loope
add
xlat
xchg
out
ljmp
lds
add
les
inc
pop
or
je
push
lea
push
push
push
push
lea
push
push
call
clc
jge
add
add
mov
lods
add
int3
add
push
add
add
in
movsl
call
add
fwait
add
fstpl
xchg
int
repnz
jle
pop
rolb
add
fildl
out
mov
pop
loope
add
in
in
lcall
repz
add
pop
add
add
push
push
push
push
call
movsb
add
add
xlat
add
add
jp
data16
js
ja
insb
add
add
add
xchg
mov
pop
mov
cmpsb
add
stos
add
aad
lret
push
add
add
push
jnp
mov
loopne
js
add
add
loope
mov
mov
movsb
push
lea
push
push
push
call
add
scas
mov
pop
push
add
mov
add
add
add
add
fsts
xlat
add
jecxz
add
add
add
push
add
add
add
mov
add
pop
pop
push
push
xor
sub
push
push
pop
add
shl
add
sub
lea
pop
add
add
inc
pop
push
dec
pop
pop
mov
push
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
jge
stos
add
add
sti
add
add
add
cltd
addr16
roll
mov
add
add
in
loopne
lcall
inc
and
push
lea
push
push
push
push
push
push
call
add
testl
mov
test
imul
cmpsl
push
push
add
jl
xorb
add
cmpsl
add
add
pop
add
add
add
clc
push
shlb
jge
add
sub
pop
jmp
push
push
push
push
lea
push
lea
push
call
jno
in
add
lcall
lds
push
add
add
push
add
rcl
in
in
lcall
in
push
push
lea
push
push
call
add
fisubrl
add
iret
test
add
loop
lahf
mov
xchg
add
lods
add
mov
roll
add
cmpsl
loop
push
xchg
andb
add
lret
add
pushf
popf
lds
xchg
xchg
lahf
add
mov
add
push
lea
push
push
lea
push
push
call
popl
add
add
add
jecxz
loopne
mov
addb
add
push
notl
lods
add
jmp
lea
add
pop
addr16
jmp
test
xor
mov
pop
shl
add
push
loop
rolb
lcall
push
push
lea
lea
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
sub
leave
add
add
add
add
jbe
push
add
mov
add
add
push
xchg
jl
add
jnp
mov
in
fdivr
lcall
mov
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
mov
add
stos
add
xchg
mov
test
add
add
jns
mov
add
popa
jnp
add
lods
stos
jle
push
add
in
mov
add
mov
add
in
fsubrs
add
sub
pop
pop
push
xor
add
ror
pop
pop
pop
push
push
lea
push
call
add
jecxz
int3
ficoms
add
add
lahf
add
in
imul
add
add
add
jo
mov
loope
add
mov
mov
add
add
add
in
hlt
lcall
push
shl
add
pop
leave
ret
push
lea
push
lea
push
call
xchg
mov
ja
cmpsb
cmc
add
out
add
pop
fisttps
add
mov
lret
add
add
cli
hlt
sub
pop
push
push
sub
pop
mov
add
push
add
inc
pop
push
push
push
shr
pop
push
push
push
shr
pop
movl
addl
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
add
mov
add
mov
int
call
test
mov
jmp
add
hlt
add
mov
ljmp
add
add
out
add
add
add
cli
loop
pop
sub
pop
test
je
mov
push
lea
not
pop
pop
pop
push
sub
shr
pop
pop
push
rol
sub
shr
inc
pop
pop
push
push
lea
push
push
call
jns
mov
arpl
jns
shlb
add
add
mov
add
hlt
add
add
push
mov
notb
mov
add
mov
movsb
cmpsl
add
mov
aad
push
sahf
int
add
popa
flds
lcall
ret
push
push
push
push
lea
push
push
call
movl
add
jo
add
addl
add
jo
mulb
add
mov
mov
movsl
scas
enter
aad
sti
mov
add
test
xchg
xlat
add
add
add
pop
popa
add
add
add
add
add
xchg
add
loope
stc
scas
add
test
in
call
lods
mov
cwtl
push
push
push
push
call
add
add
mov
test
in
add
xchg
add
movsb
add
add
add
xchg
xchg
add
out
add
jecxz
flds
add
mov
mov
in
mov
roll
xlat
add
add
add
xlat
add
add
add
jns
add
add
sub
pop
mov
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
aam
sti
jne
hlt
add
hlt
add
int3
fiadds
add
cmpsb
add
mov
add
push
pushf
jle
in
enter
cld
rol
shll
lock
add
push
push
push
call
xchg
add
add
add
add
into
testb
add
les
add
ror
xchg
mov
fst
mov
fldl
push
add
fs
in
xchg
sti
add
add
stc
add
aad
lcall
add
cmpsl
incb
mov
fs
lods
cmpsb
add
lds
clc
lcall
push
push
push
push
lea
push
push
push
push
call
shll
mov
fcompl
add
add
add
std
lret
repnz
icebp
loopne
jno
pusha
mov
loopne
push
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
stc
test
pop
out
jmp
pop
xchg
add
data16
mov
cwtl
add
jno
add
out
add
rolb
jmp
cmc
fiaddl
add
jne
in
fdivr
lcall
inc
cld
add
add
push
rol
add
pop
addl
push
sub
pop
push
call
push
not
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
leave
pop
addl
imul
mov
add
imul
outsl
into
add
popa
add
jbe
add
mov
stos
xchg
add
cmpsb
idivl
push
lods
add
add
ja
xchg
cmpsl
popa
fcomi
add
aam
add
add
sub
pop
pushl
push
push
lea
push
push
call
jno
push
add
add
xchg
add
int
pushf
cmc
jecxz
addl
stos
add
xchg
push
cli
fiaddl
add
hlt
jno
add
cmpsl
push
add
jo
popf
xchg
mov
add
negb
fcmovnbe
divb
in
add
call
and
xchg
xchg
dec
and
jge
inc
push
push
push
push
call
cwtl
lret
call
mov
rolb
fldl
add
mov
add
lds
mov
add
add
popf
decb
add
xchg
xchg
push
loop
push
sti
add
cmpsl
fldl
mov
lds
add
mov
icebp
push
add
in
fcomps
add
sub
call
mov
add
push
call
les
movsl
add
add
add
lret
mov
ror
add
mov
push
scas
iret
mov
fs
add
out
push
stos
addr16
in
mov
add
xchg
add
jecxz
sub
pop
cmpl
jne
pop
push
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
jl
add
fsubs
add
out
bound
fadds
add
jp
mov
pop
push
test
fstl
add
loop
add
add
add
pushf
pop
pop
fldl
add
mov
hlt
iret
add
jp
jp
add
add
sti
lds
int3
sub
pop
pop
push
add
pop
leave
push
push
push
call
add
fildl
pop
in
sahf
aam
add
add
add
addl
in
add
jp
add
movsl
pushf
les
clc
add
add
pop
mov
iret
pushf
testb
lcall
add
push
lea
push
push
lea
push
call
mov
jecxz
pusha
add
mov
lret
jbe
test
lock
mov
add
push
jl
int3
imul
mov
imul
push
mov
pushf
in
ror
hlt
add
lret
lods
icebp
add
fadds
add
add
lcall
push
add
shl
not
pop
mov
add
push
not
pop
push
push
lea
push
lea
push
call
loop
mov
negb
filds
mov
add
add
add
bound
movsl
cmpsb
pop
add
add
aam
add
mov
add
test
mov
add
xchg
xchg
push
add
add
call
push
push
push
lea
push
push
push
push
push
push
call
xchg
add
out
jne
cmpsb
add
out
mov
mov
add
add
les
add
bound
add
add
sti
push
add
xchg
arpl
add
cmc
add
lcall
push
push
push
lea
push
push
push
push
push
push
call
xchg
fisttps
hlt
addb
in
test
je
add
add
lods
xchg
fistl
add
add
xchg
outsl
insb
mov
add
add
add
scas
jbe
loopne
push
add
lcall
push
push
lea
push
call
jne
stos
xchg
push
add
in
mov
push
pop
pop
jecxz
mov
xchg
shrb
iret
jmp
lods
shlb
mov
add
repnz
leave
xchg
popa
fsubrs
add
in
in
add
mov
add
add
scas
cwtl
sub
movl
push
push
lea
push
push
push
push
lea
push
push
push
call
add
into
jmp
add
insb
sarl
jns
push
leave
mov
enter
add
popf
xlat
cmc
add
jns
mul
cmpsl
add
mov
mov
in
fcompl
add
rcrl
or
push
lea
push
push
call
jl
imul
sti
push
imul
fwait
mov
add
mov
add
mov
mov
jle
cmpsl
add
out
add
add
push
pushf
mov
lods
flds
repnz
add
lcall
adc
sub
add
pop
call
subl
push
lea
push
call
add
roll
add
add
mov
xchg
add
add
stc
test
add
add
imul
pop
sarb
add
xchg
add
cmpsb
add
movsl
mov
add
cmc
movsb
add
add
addr16
add
lcall
jge
add
test
call
call
mov
add
jbe
std
add
shll
test
add
pop
not
push
mov
loopne
aad
lcall
imul
cwtl
movsb
pushf
adc
mov
rcl
pop
mov
rolb
lcall
push
push
push
push
call
aam
lret
add
add
bound
faddl
add
mov
cmpsb
fwait
push
addb
cltd
ret
divl
pop
test
cmpsb
add
popf
xchg
jmp
lds
add
sub
pop
pop
push
push
push
call
add
testb
xchg
pop
add
add
outsl
movsb
add
add
lock
pusha
add
jmp
outsl
out
les
mov
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
std
add
pusha
add
mov
lret
add
jecxz
add
orb
add
add
pop
rcr
imul
add
testb
test
pop
movb
movsl
add
out
vlddqu
add
mov
add
lcall
push
sub
shl
add
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
jnp
add
add
leave
add
add
add
pop
test
add
in
push
out
add
add
push
add
jl
push
in
jge
scas
repnz
rcll
mov
add
jae
cmpsb
add
test
movb
pop
add
nop
xchg
add
sub
pop
ret
push
push
push
push
push
push
call
add
incb
imul
scas
add
add
add
mov
add
push
movl
add
jl
nop
add
clc
xchg
mov
les
in
add
lock
push
not
pop
mov
add
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
sahf
cmpsb
fdivrs
jb
xlat
mov
push
lcall
shlb
pop
popf
mov
add
mov
push
stos
xchg
mov
cmpsb
pop
mov
xchg
insb
lods
add
sub
pop
push
push
push
add
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
rcrl
aam
les
addr16
jno
adcb
jnp
lret
mov
cli
add
add
pop
shrb
roll
jl
fcmovb
add
lods
filds
add
sub
pop
mov
push
inc
pop
lea
push
push
push
push
lea
push
push
push
call
ljmp
add
mov
lret
add
add
xchg
add
add
in
jbe
add
fdiv
out
add
add
lcall
call
push
push
push
push
lea
push
call
popf
loopne
imul
jns
add
stos
int3
add
lock
mov
int3
lds
add
cmpsb
add
add
lods
add
movsl
jb
in
call
add
push
lea
push
push
push
push
push
push
push
push
lea
push
call
imul
jns
lea
add
movb
fiadds
add
mov
add
push
jmp
jmp
add
sbb
cltd
add
cwtl
ja
add
jmp
add
add
decb
enter
add
lcall
pop
jb
sub
pop
mov
push
push
call
cld
mov
mov
lret
insb
shlb
fdivp
add
add
jmp
add
icebp
je
scas
clc
leave
add
mov
add
add
imul
loop
add
call
out
add
pop
cltd
cltd
stos
cmpsl
jmp
stos
ja
xchg
pushf
add
sub
pop
mov
push
push
push
push
call
add
add
mov
pusha
mov
mov
add
add
ret
mov
add
mov
vpaddusw
cld
pop
mov
add
add
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
test
add
popf
fwait
add
pop
lock
outsl
jge
mov
scas
add
loopne
add
add
add
movl
rol
std
pop
add
add
add
lret
add
add
sub
pop
add
mov
push
push
lea
push
lea
push
push
push
push
call
add
fwait
scas
add
andl
add
lret
movl
lods
mov
push
add
push
add
mov
jl
loope
rolb
add
xlat
add
add
add
lods
add
add
repnz
lret
add
testb
jb
ficoml
xchg
xchg
ja
fsub
notb
stos
jo
sub
pop
mov
push
push
push
push
push
call
pushf
add
pop
add
add
add
mov
pop
add
pop
arpl
je
add
add
add
iret
roll
les
add
sahf
add
pop
push
pop
call
in
int3
add
mov
jecxz
add
xchg
mov
add
xchg
sub
pop
cmp
jne
push
push
push
push
push
push
push
lea
push
call
xchg
out
add
pop
movsl
add
add
imul
add
add
add
je
jle
add
mov
xlat
add
pushf
movsb
jmp
jmp
add
push
jl
add
add
fucomip
cmc
push
rcll
add
lcall
cwtl
fadds
add
jne
push
lea
pop
mov
push
sub
dec
sub
dec
pop
movl
jmp
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
rcl
lods
addb
rolb
lods
jne
add
add
imul
add
add
push
add
pop
add
test
push
out
mov
add
mov
lcall
inc
cld
push
push
call
add
pusha
mov
out
xchg
add
add
sti
add
loopne
mov
add
add
add
add
push
push
shlb
movsl
pop
add
add
add
testl
lds
add
in
clc
lcall
push
or
movb
fs
shr
pop
sub
jne
mov
push
push
push
push
push
push
push
push
lea
push
push
call
pop
add
add
lock
add
add
jae
xchg
jp
xchg
rolb
cmpsb
filds
mov
out
movsb
add
add
add
jmp
push
shr
pop
mov
mov
push
sub
pop
cmp
jne
push
add
rol
ror
ror
pop
mov
movl
push
lea
push
push
push
call
add
add
add
lahf
mov
repnz
lock
lahf
add
std
xchg
ja
add
lea
jb
clc
ficompl
in
int3
test
fiaddl
in
bound
mov
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
push
lea
push
push
push
push
push
call
mov
add
not
add
push
std
cmc
add
add
add
add
rcl
xchg
fwait
add
mov
ja
clc
add
add
sub
pop
mov
cmpw
jne
push
shr
ror
pop
mov
movl
push
lea
push
push
push
push
push
call
rolb
lea
add
xchg
cmpsl
in
mov
fwait
pushf
movb
movsl
add
mov
sar
pop
add
push
repnz
lods
lahf
push
mov
scas
add
cld
mov
add
add
add
add
in
add
iret
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
jecxz
add
cli
rolb
ja
jl
arpl
cltd
mov
pusha
call
add
add
filds
jnp
add
mov
loop
in
fdivr
lcall
pushl
push
shr
pop
pop
push
sub
pop
mov
push
not
rol
xor
pop
mov
mov
push
push
lea
push
or
not
add
shl
sub
rol
pop
inc
lea
pop
push
push
lea
push
push
push
call
je
testb
add
add
add
add
add
pop
xchg
push
add
addl
testb
lods
gs
sub
pop
push
call
push
push
push
push
push
push
push
call
mov
add
add
add
add
add
add
aam
test
mov
add
mov
add
mov
mov
mov
add
add
pop
mov
test
add
mov
aad
addb
add
js
int3
fldz
ret
dec
pop
add
push
push
add
push
xor
add
xor
lea
shl
sub
shr
xor
inc
pop
rol
shr
pop
push
sub
sub
pop
push
call
push
ror
shr
xor
pop
cmpl
je
push
push
not
push
xor
add
shr
not
not
sub
sub
not
pop
inc
rol
not
pop
push
push
push
push
push
push
push
call
add
push
mov
in
out
lods
mov
fiadds
imul
add
add
add
add
fldenv
mov
xchg
bnd
outsl
add
push
add
lahf
add
push
sub
pop
push
call
push
not
not
pop
cmpl
je
push
push
sub
push
or
not
add
inc
rol
sub
sub
pop
xor
add
xor
inc
pop
push
add
pop
push
push
rol
not
pop
call
cmpl
je
push
push
xor
push
sub
add
inc
sub
lea
dec
pop
add
pop
push
push
push
push
push
push
call
add
add
push
pop
add
leave
pop
jp
xchg
add
hlt
shl
add
loopne
add
add
rcrl
add
jge
add
add
addr16
jle
out
add
jp
add
add
imul
add
mov
int
sub
pop
push
call
push
rol
add
shr
pop
cmpl
je
push
push
add
add
sub
push
xor
add
xor
sub
pop
sub
sub
pop
push
sub
dec
pop
push
push
push
lea
push
call
add
pusha
mov
sti
add
mov
add
in
mov
add
push
push
in
jbe
push
cltd
xchg
add
add
int3
ljmp
hlt
pop
call
cmpl
je
push
push
add
lea
not
push
or
not
add
sub
shl
sub
inc
shr
pop
rol
lea
sub
pop
push
push
push
lea
push
push
call
fimuls
nop
xchg
jecxz
in
add
shlb
jmp
xchg
jnp
xchg
pop
mov
lods
add
in
test
add
add
add
mov
add
enter
mov
xlat
add
add
shlb
xchg
add
mov
lea
mov
lea
pop
push
call
push
dec
lea
pop
cmpl
je
push
push
sub
inc
push
push
pop
add
sub
sub
sub
rol
xor
not
shr
pop
not
add
pop
push
push
push
push
call
test
add
arpl
js
rolb
out
mov
add
add
mov
out
fadds
incb
in
mov
jecxz
mov
mov
mov
pop
fstpl
mov
push
push
pop
call
cmpl
je
push
push
push
push
pop
add
add
rol
inc
sub
ror
add
pop
dec
pop
push
shr
sub
rol
pop
push
push
push
push
lea
push
push
call
pop
add
add
push
lahf
add
add
add
loopne
test
jecxz
jecxz
imul
add
std
scas
lods
add
repnz
add
mov
add
cmc
rorb
add
xchg
mov
add
add
jns
sar
sub
pop
call
cmpl
je
push
push
shl
ror
push
or
not
add
add
sub
dec
pop
shl
dec
shl
pop
push
pop
push
call
push
rol
dec
not
pop
cmpl
je
push
push
rol
push
xor
add
sub
sub
xor
pop
shr
rol
xor
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
cmpsb
movsb
lods
popa
add
add
add
add
xlat
add
fistps
mov
imul
mov
lods
add
mov
jbe
add
add
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
scas
mov
cmpsb
flds
js
leave
add
jno
jp
mov
mov
pop
xchg
add
push
mov
add
push
nop
stc
mov
add
mov
xchg
add
dec
xor
add
ret
test
sub
ja
dec
not
shl
push
or
not
add
rol
rol
sub
dec
pop
pop
push
not
inc
rol
pop
push
push
push
push
lea
push
push
push
call
add
data16
jnp
xchg
add
add
mov
add
imul
stc
sbbl
sub
pop
call
cmpl
je
push
push
ror
push
xor
add
xor
rol
sub
add
shl
pop
sub
rol
sub
lea
pop
push
pop
push
call
push
push
push
lea
push
lea
push
push
push
call
push
rorb
fnstcw
out
jecxz
iret
add
add
cltd
mov
addb
add
jmp
add
popa
lahf
int
cmc
add
add
std
xlat
movsb
fwait
roll
add
cmpl
jne
push
push
push
lea
push
push
push
push
lea
push
call
mov
test
popf
std
add
cmpb
xchg
add
mov
xchg
in
nop
add
push
push
jne
add
add
sub
pop
mov
push
push
push
push
push
call
add
add
jl
xchg
ja
add
add
add
js
into
mov
movb
add
xchg
jno
aad
add
push
movb
add
push
fildl
add
push
ljmp
add
sub
pop
movl
push
lea
pop
jmp
xor
push
xor
sub
dec
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
cld
hlt
test
test
jnp
filds
xchg
mov
xchg
stos
add
cmpsb
add
mov
sbbl
add
add
add
xchg
gs
pop
cmpsl
lret
sub
pop
pop
push
rol
rol
pop
pop
push
push
call
add
nop
push
mov
add
popl
pop
lock
popf
add
add
add
pop
add
add
lret
fs
push
mov
aam
pop
fisubrl
call
pop
push
push
push
push
lea
push
call
add
push
enter
jmp
add
leave
add
pop
movb
pushf
subl
mov
lods
mov
fisttpll
pop
testb
mov
in
in
pop
leave
push
pop
ret
push
add
shl
shl
pop
push
push
dec
not
xor
pop
mov
add
push
sub
sub
pop
cmpl
jne
push
push
sub
push
push
pop
add
shl
inc
dec
dec
sub
shr
add
pop
add
pop
push
xor
xor
ror
ror
pop
pushl
push
add
sub
inc
pop
call
push
sub
sub
inc
not
pop
push
push
ror
pop
call
push
shl
dec
add
pop
jmp
push
lea
shr
shr
dec
pop
cmpl
je
push
add
sub
pop
cmpl
jne
mov
push
dec
pop
call
push
push
push
lea
push
push
push
call
out
add
jns
add
pop
out
pop
stc
add
pop
jmp
imul
jns
jb
mov
in
flds
add
lahf
add
add
in
call
rol
shr
pop
jmp
cmpl
jne
push
push
inc
sub
push
or
inc
add
add
add
sub
sub
xor
add
pop
not
dec
rol
pop
push
dec
lea
pop
pushl
push
pop
call
push
push
shr
add
xor
pop
call
jmp
push
pop
cmpl
jne
mov
push
ror
add
pop
mov
push
push
push
lea
shr
push
xor
add
dec
sub
shr
shr
pop
rol
pop
push
push
push
lea
push
call
push
imul
add
stos
add
add
xchg
add
push
add
add
pushf
scas
add
imul
mov
add
sub
pop
pushl
push
lea
push
lea
push
lea
push
push
call
fcmovnbe
mov
add
ljmp
scas
add
push
pop
mov
add
pusha
xchg
add
scas
add
sbbl
add
cld
jnp
push
add
in
in
lcall
lods
sub
add
lret
cmpsl
pop
call
push
push
inc
shl
not
push
push
pop
add
ror
sub
add
add
rol
sub
pop
rol
pop
push
push
push
push
push
push
push
push
push
push
call
orl
add
into
shlb
out
add
add
add
cli
lret
add
arpl
out
mov
add
mov
add
add
add
ljmp
add
add
shll
stos
in
add
jmp
movsb
add
lcall
jne
call
push
push
push
push
push
push
push
push
push
push
call
mov
je
push
add
lret
add
addb
mov
push
rolb
popf
shl
pusha
ret
les
andl
add
push
iret
add
jbe
mov
xchg
bound
add
add
add
std
stos
mov
add
outsl
leave
add
lcall
shrb
xchg
sub
sub
not
lea
push
or
inc
add
shl
shl
sub
inc
pop
not
pop
push
shr
pop
pushl
call
push
sub
pop
call
push
push
push
xor
add
lea
sub
ror
ror
inc
pop
sub
add
lea
pop
push
push
push
call
lds
xlat
mov
add
aad
fdiv
fwait
add
xchg
add
add
leave
jae
add
lret
xchg
shr
movsl
add
pop
jle
in
hlt
pop
pushl
push
push
push
push
push
push
lea
push
call
loop
add
add
les
add
flds
testl
fwait
mov
add
movsl
jge
add
mov
ja
add
xchg
sub
pop
call
push
inc
dec
sub
sub
pop
call
push
push
inc
sub
push
or
inc
add
add
sub
xor
add
sub
add
pop
not
sub
lea
shr
pop
push
push
push
push
push
push
push
push
push
call
mov
add
scas
add
lcall
push
into
in
rcrl
hlt
mov
xchg
mov
push
fcomps
fsubr
mov
sub
pop
pushl
call
push
push
push
push
lea
push
lea
push
call
add
xchg
push
add
mov
add
ja
add
push
add
add
fnsave
mul
int
lret
add
imul
add
add
add
in
call
call
push
push
rol
ror
shr
push
sub
add
shr
sub
sub
inc
dec
shr
rol
pop
add
pop
push
lea
rol
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
call
into
add
hlt
bound
movsl
nop
jmp
mov
jnp
add
pop
in
test
test
add
mov
add
jns
rorl
jle
add
add
add
mov
iret
mov
into
jecxz
mov
cmpb
lcall
shrb
cmp
lea
push
and
add
lea
add
sub
lea
rol
rol
pop
inc
xor
shr
pop
push
lea
shl
sub
sub
pop
pushl
push
sub
pop
call
push
push
push
push
push
push
lea
push
call
ljmp
add
add
add
add
xlat
test
ja
ficoml
mov
divl
add
add
jno
add
jmp
add
ja
add
sub
pop
call
push
push
dec
dec
shl
push
sub
add
xor
add
dec
lea
sub
add
pop
inc
rol
pop
push
push
lea
push
push
push
push
push
push
call
lahf
jle
add
add
shrb
add
add
imul
add
mov
out
jp
mov
pop
add
add
pop
movsl
jl
mov
pop
loope
add
fcoml
test
in
ret
jbe
add
sub
pop
pushl
call
push
rol
shl
pop
call
push
push
shr
sub
sub
push
xor
add
inc
sub
sub
pop
inc
pop
push
add
not
shl
rol
pop
pushl
push
shl
sub
pop
call
push
push
call
mov
cwtl
add
add
andl
add
add
add
mov
stos
stos
in
cli
add
xchg
add
fcoml
add
sub
pop
call
push
push
xor
shr
add
lea
push
or
not
add
rol
add
not
sub
add
sub
dec
pop
not
add
lea
pop
push
push
push
push
push
lea
push
push
push
call
sti
add
add
mov
add
add
add
enter
add
lcall
mov
addl
flds
aad
ja
imul
lcall
jne
call
push
add
dec
pop
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
popf
ja
add
add
add
add
scas
popf
pop
in
add
add
add
mov
xchg
int
in
fcompl
push
lea
sub
pop
call
push
push
sub
push
push
pop
add
shr
sub
shl
sub
sub
rol
pop
sub
pop
push
push
push
push
lea
push
call
fidivs
mov
pop
add
arpl
shl
rolb
xchg
mov
outsl
add
faddl
add
rcrb
add
mov
int3
mov
add
roll
in
in
lcall
jne
push
push
push
push
push
call
add
call
add
push
iret
add
push
test
jns
add
add
aad
add
push
movsl
xlat
rclb
div
fs
mov
in
in
lcall
clc
and
add
test
das
and
lret
push
push
call
add
xchg
push
mov
lods
jecxz
add
arpl
add
loopne
fstl
add
iret
jne
cli
add
add
add
fwait
add
add
int3
add
add
mov
xchg
jno
jle
add
sub
pop
call
push
push
shr
add
add
push
and
add
shl
dec
sub
xor
pop
pop
push
push
push
push
push
call
add
add
add
jo
xchg
test
add
addb
jl
add
add
jge
jbe
add
pop
test
lods
outsl
test
add
add
ja
sub
pop
pushl
push
add
lea
inc
pop
call
push
push
push
call
add
add
xchg
jl
mov
iret
jne
add
jmp
xchg
out
add
add
xchg
shr
mov
shrb
push
add
jnp
fiadds
add
add
add
lahf
jns
in
hlt
lcall
shrb
mov
stos
push
ror
not
sub
xor
push
push
pop
add
lea
sub
sub
shr
add
ror
pop
add
ror
shr
pop
push
dec
pop
pushl
push
lea
push
push
push
call
mov
hlt
call
add
add
xchg
add
add
add
add
subl
mov
sub
pop
call
call
push
push
sub
push
xor
add
sub
add
sub
add
pop
pop
push
add
sub
pop
pushl
call
push
push
add
xor
push
push
pop
add
shr
sub
shr
add
pop
inc
pop
push
push
lea
push
and
add
sub
sub
xor
inc
pop
sub
rol
rol
ror
pop
push
inc
rol
rol
pop
call
push
add
add
sub
pop
pop
push
shr
not
rol
pop
dec
jne
push
push
lea
push
push
push
push
push
push
push
call
jae
add
gs
xchg
cli
jle
add
add
movsb
ret
mov
mov
faddl
add
pop
mov
jmp
fcompl
out
add
push
push
add
sub
push
xor
add
shl
add
sub
lea
sub
pop
shr
add
shr
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
neg
lds
popf
into
add
add
movsb
fisttps
jbe
jne
cmpb
add
in
fdivr
lcall
jne
call
push
sub
pop
push
push
rol
pop
call
push
push
push
call
add
hlt
testl
pusha
add
enter
add
mov
add
add
add
add
add
xchg
cltd
gs
add
add
add
add
sub
pop
mov
push
push
ror
dec
push
push
pop
add
lea
xor
inc
add
sub
not
pop
inc
pop
push
lea
push
call
xchg
repnz
mov
arpl
mov
mov
popl
les
add
subb
add
test
jns
outsl
xchg
roll
jne
push
add
pop
call
push
not
shr
not
pop
lea
push
push
push
push
call
add
add
std
fcompl
xchg
add
je
movsb
test
cwtl
jno
jne
jecxz
scas
add
jmp
outsl
movl
lods
fsubl
pop
jecxz
add
add
add
lods
add
lcall
push
push
push
push
push
push
push
call
jnp
add
add
add
movsb
add
add
add
add
mov
cmpsl
filds
repnz
add
push
jmp
add
add
out
add
pop
data16
add
js
lods
mov
shrb
std
mov
mov
aad
outsl
mov
lcall
add
pop
push
call
add
int
test
add
push
add
add
add
xchg
cli
add
add
add
lcall
add
ret
jnp
cmpsb
add
jmp
pop
call
push
push
push
push
push
push
push
push
push
call
out
push
add
jmp
push
fs
add
fadds
add
in
std
jl
cmpsl
jb
loopne
mov
add
in
add
add
add
ljmp
pop
ror
ret
iret
aam
xlat
rcrl
addb
mov
add
aad
add
ficompl
out
add
movl
fcompl
pushf
and
ljmp
arpl
push
or
inc
add
lea
sub
sub
dec
sub
pop
xor
pop
push
push
push
push
push
lea
push
call
cmc
shr
jbe
pop
jl
jae
sahf
fs
stos
aad
add
xchg
add
mov
cmpsl
leave
movsl
pop
mov
add
add
lret
data16
add
add
xchg
in
call
pushl
push
push
push
push
push
push
call
data16
sarb
lea
lcall
add
hlt
stos
mov
out
mov
mov
add
fldl
insb
add
add
sub
pop
call
push
shr
xor
add
pop
push
push
sub
pop
call
push
push
inc
push
or
not
add
dec
inc
sub
add
pop
shl
sub
pop
push
lea
push
push
call
mov
add
repnz
add
loopne
push
add
fdivp
add
jp
jle
xchg
imul
nop
movb
add
add
add
add
mov
fwait
test
add
addr16
pop
add
adcb
data16
sub
pop
pushl
call
push
lea
push
call
add
rorb
shlb
add
add
in
ret
test
cld
mov
add
add
pop
add
add
add
sub
pop
call
push
add
shr
xor
pop
mov
lea
push
push
add
ror
ror
push
xor
add
inc
not
sub
shl
pop
rol
pop
push
push
push
call
add
jo
add
add
lds
add
add
out
add
stc
add
pusha
add
push
add
add
pop
add
add
movsb
loopne
int3
jo
lret
jnp
fs
pop
pushl
push
sub
add
pop
call
push
push
push
push
push
push
push
push
call
add
test
cld
add
add
xchg
outsl
lods
out
xchg
lea
add
rcll
jae
mov
into
mov
push
add
add
add
pop
add
add
jmp
add
lds
js
loope
mov
addl
int
add
ja
add
push
leave
push
add
add
mov
aam
in
loopne
lcall
add
push
push
push
push
push
push
push
push
push
call
add
flds
add
add
fwait
testb
add
add
add
loop
lcall
pusha
stos
iret
xlat
push
add
push
arpl
shll
jge
scas
add
imul
ret
add
add
mov
cmc
cmpsl
mov
add
mov
add
loopne
push
push
ror
pop
push
push
push
push
push
push
push
call
add
add
add
add
jp
push
insb
adc
mov
add
push
movsl
push
add
jb
addr16
scas
xlat
jbe
sub
pop
pushl
push
push
lea
rol
not
rol
push
xor
add
ror
shr
sub
xor
lea
pop
pop
push
push
push
push
call
rcll
data16
add
cmp
ja
ljmp
imul
pop
add
mov
jo
xlat
mov
add
add
cwtl
push
mov
xchg
jno
xchg
js
add
jecxz
add
scas
sub
pop
push
push
lea
pop
call
push
push
shl
push
or
inc
add
dec
lea
add
sub
inc
pop
rol
lea
pop
push
push
lea
push
call
scas
mov
movsl
nop
add
add
cmpsb
cmp
add
add
pop
add
scas
add
add
mov
cwtl
subl
mov
add
jp
cld
pop
add
add
jne
call
push
shl
dec
xor
pop
push
call
push
push
shl
push
or
inc
add
add
sub
xor
sub
xor
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
call
add
pop
mov
add
jns
in
leave
pop
gs
add
add
pop
mov
icebp
int
fmul
int3
jnp
mov
js
add
add
add
rolb
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
call
push
cli
add
add
add
add
mov
add
mov
jae
out
in
add
add
add
add
add
add
add
test
add
testl
add
lcall
add
hlt
hlt
add
add
add
push
mov
imul
call
add
push
push
lea
push
push
lea
push
call
pop
add
cltd
into
mov
add
xchg
data16
out
jb
aad
add
mov
add
mov
add
shrb
popf
add
push
call
add
addb
add
xchg
add
int3
add
mov
je
add
add
in
in
lcall
rclb
pop
jmp
push
push
push
push
push
push
push
push
push
call
lcall
add
xchg
add
add
jne
mov
add
mov
faddl
mov
movsb
add
test
mov
jo
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
mov
gs
mov
add
in
jbe
xchg
rolb
mov
add
mov
repnz
add
faddl
push
add
add
ror
arpl
jb
imulb
test
fcmovne
xchg
jnp
jp
in
xchg
arpl
sub
pop
mov
push
xor
dec
pop
jmp
push
push
ror
xor
ror
push
sub
add
dec
sub
add
shr
rol
pop
xor
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
mov
pop
mov
add
add
scas
insb
loop
add
stos
scas
xchg
add
testl
add
mov
in
rcrb
add
add
add
lds
lahf
out
add
stos
test
cld
add
lcall
jne
push
push
push
call
divl
mov
stc
incb
lret
add
push
cli
add
add
fs
mov
leave
mov
pusha
bound
add
add
ret
jmp
add
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
mov
add
jo
pop
imul
shlb
add
mov
add
in
imul
call
outsl
add
data16
add
jmp
in
imul
sub
pop
call
push
push
lea
rol
push
xor
add
rol
shl
sub
shr
xor
shl
pop
not
pop
push
lea
push
call
loopne
mov
fiadds
nop
add
add
test
jle
add
mov
add
repnz
add
rolb
add
lods
push
mov
mov
xchg
stos
test
add
lods
add
movsb
cltd
lods
jmp
pusha
lret
lea
fiadds
faddl
add
jne
push
sub
pop
call
push
push
lea
push
push
lea
push
push
push
call
in
add
add
add
add
leave
push
xchg
add
loope
mov
jle
add
fiaddl
fucom
add
add
arpl
add
sarb
sub
pop
push
call
push
push
push
call
add
add
call
stos
outsl
add
add
test
mov
xchg
mov
mov
add
popa
add
add
into
rolb
add
xlat
push
popf
fadds
sti
add
mov
push
lret
add
movsb
mov
add
mov
add
test
pop
leave
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
lock
add
rolb
add
mov
testl
jmp
mov
add
filds
add
add
jb
add
jno
in
loopne
lcall
pop
push
xor
shr
sub
lea
pop
pop
push
xor
ror
pop
xor
push
push
push
push
call
xchg
add
scas
xchg
jmp
fstpl
xchg
add
add
filds
fistpl
xchg
jbe
fsubl
add
sub
pop
inc
push
lea
push
push
push
push
lea
push
push
call
add
in
add
add
pop
ja
add
add
cmpsb
add
stos
mov
xchg
ror
add
add
scas
lds
lds
fsub
mov
pop
out
rcrb
add
pop
int3
xchg
xchg
addr16
popa
movb
rclb
lcall
or
leave
push
push
push
call
cld
add
push
xlat
sti
add
add
mov
mov
add
fidivs
push
test
jnp
mov
add
and
scas
js
add
add
add
jo
into
add
add
mov
hlt
pop
ret
push
shr
ror
add
add
pop
push
push
push
call
add
out
add
mov
test
pop
add
cli
lcall
push
add
add
add
xchg
test
add
add
add
scas
add
hlt
loope
add
mov
add
add
add
add
mov
mov
cli
jne
in
sub
pop
mov
push
sub
rol
pop
cmpl
jne
mov
push
push
push
push
lea
push
push
call
xlat
cmc
add
cmpsl
add
mov
call
cmpsl
int3
xchg
faddl
mov
leave
loopne
add
jge
pusha
add
add
push
jnp
mov
add
pop
add
add
pop
push
lea
push
push
push
push
call
loop
nop
test
add
mov
jns
mov
add
add
add
mov
mov
add
cmpsl
icebp
add
mov
mov
stc
shlb
add
pop
mov
fnstcw
add
sahf
sub
pop
mov
push
xor
lea
pop
and
push
push
lea
push
call
sar
test
push
add
add
add
fstpt
incb
mov
add
add
popf
push
add
push
scas
out
add
jb
out
add
sahf
add
xor
xor
push
sub
not
add
add
pop
add
xor
push
push
call
repnz
out
add
add
popa
add
roll
xchg
pop
xchg
xchg
add
xor
add
xlat
cli
loope
mov
stos
xchg
mov
loopne
add
add
add
add
mov
pushf
add
add
mov
std
sub
pop
dec
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
loope
add
stos
mov
xchg
add
mov
insb
add
jno
lcall
pop
lods
in
add
sub
pop
sub
push
ror
rol
pop
jmp
push
dec
dec
pop
sub
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jae
add
add
pop
into
mov
popf
add
add
add
pop
mov
add
fildl
stc
pop
add
pop
shl
add
add
jle
popa
cmpsb
lret
in
xorl
pop
add
xchg
outsl
mov
mov
fcmovne
add
out
movsl
xchg
push
shll
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
fiaddl
imul
out
xchg
add
mov
pop
mov
push
add
add
cld
add
rcll
add
cmpb
add
je
icebp
push
jbe
nop
fidivs
add
jecxz
add
pop
add
in
mov
add
add
sub
push
push
lea
push
push
call
add
mov
outsl
stos
mov
aad
fiaddl
nop
arpl
push
nop
stos
aam
rolb
flds
add
add
repnz
cld
add
test
add
add
mov
add
push
add
add
pop
add
add
add
pop
add
pop
add
pushf
mov
out
add
xchg
pop
add
jecxz
xchg
add
lcall
cmp
addr16
call
ret
das
mov
xchg
pop
mov
push
push
push
call
in
mov
add
add
add
pushf
lcall
add
add
test
data16
xor
jmp
mov
lods
sahf
imul
add
xor
add
lea
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
movsb
xchg
push
clc
pop
jne
add
les
cld
add
pop
fadds
jnp
xchg
js
add
testl
icebp
hlt
add
xchg
add
xchg
add
xchg
cmpsb
xchg
lret
cmpl
lods
add
scas
add
add
add
pusha
sub
pop
sub
push
inc
add
dec
pop
mov
push
push
push
lea
push
push
push
lea
push
call
add
add
add
loop
bound
mov
call
mov
pushf
addb
jnp
in
xchg
add
xchg
add
lret
add
mov
add
pusha
add
insb
sub
pop
shr
add
push
dec
pop
sub
push
sub
sub
pop
pushl
pop
push
push
call
mov
hlt
ffreep
add
lcall
xchg
pop
add
popa
add
xchg
add
xchg
jae
add
pop
sahf
add
lcall
add
hlt
add
popa
lds
jns
add
jecxz
mov
add
add
add
lret
xchg
pop
shr
and
push
push
push
lea
push
lea
push
call
mov
add
add
xchg
mov
pusha
ja
ret
mov
cwtl
xchg
jp
add
mov
xchg
add
add
add
or
fs
add
add
data16
scas
add
add
fwait
add
mov
scas
cwtl
mov
lcall
jmp
cmp
jne
push
lea
push
push
push
push
call
jno
imul
mov
add
add
cmpl
les
mov
js
add
lcall
add
test
add
add
jno
add
scas
cwtl
aad
repnz
mov
hlt
mov
loope
in
mov
in
in
lcall
push
push
push
push
push
lea
push
call
jb
sti
add
add
enter
fwait
add
imul
repnz
lods
add
add
fisubl
test
mov
add
add
add
pop
into
add
add
add
pushf
jmp
lods
loope
pushf
add
add
lcall
add
push
push
lea
push
lea
push
push
push
call
ret
ret
add
lock
push
add
push
add
add
out
movsl
pop
add
add
add
test
pop
sarb
jno
lret
add
jle
add
jno
add
add
add
add
add
push
push
call
add
stos
outsl
mov
add
push
flds
mov
add
push
jne
test
notl
add
fbld
pop
add
in
pop
xchg
add
add
in
add
push
push
call
scas
add
add
ficoms
mov
in
add
xchg
rol
into
push
pop
mov
int3
subl
arpl
add
push
imulb
add
jle
lds
push
shr
ror
not
shr
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
arpl
add
add
cli
pop
lret
add
out
loopne
lret
xchg
loope
add
xlat
in
fdivs
mov
sub
pop
push
push
lea
push
push
call
out
popa
aam
fucomip
loop
movsl
pop
lret
mov
jmp
xchg
add
testb
roll
add
xchg
add
gs
aad
add
add
add
subb
sub
pop
push
push
push
lea
push
call
add
clc
popf
pop
mov
loop
add
fnsave
add
lods
lock
out
add
xorb
lret
mov
insb
mov
sub
pop
push
mov
push
push
push
push
push
push
push
call
je
stos
add
notb
enter
add
xchg
test
jno
add
rolb
xchg
add
movsl
add
movsb
pop
imul
pop
lea
push
rol
pop
sub
mov
push
add
sub
pop
shr
push
sub
sub
pop
add
push
push
push
push
push
push
call
mov
iret
lcall
add
js
mov
xchg
add
add
cli
add
add
loope
in
add
add
xlat
stos
mov
add
insb
add
mov
push
add
loop
out
bound
lcall
fwait
addb
add
pop
or
mov
call
mov
hlt
add
add
imul
lahf
mov
aad
add
jl
les
out
jl
jmp
add
int
add
add
clc
pop
mov
add
push
ror
add
pop
xor
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
out
jno
mov
push
jns
add
add
stos
lretw
pop
add
aam
add
pop
jae
stos
xchg
jmp
loop
add
iret
ret
add
xchg
add
fiadds
add
xor
jle
pop
add
mov
negl
or
add
icebp
subb
add
pusha
add
push
sub
pop
mov
and
push
push
push
push
lea
push
lea
push
push
push
push
push
call
insb
mov
jbe
lea
je
push
fiaddl
call
xlat
push
add
addr16
cwtl
add
add
add
pop
jb
sub
pop
rol
push
push
push
push
push
push
push
push
call
xchg
into
add
arpl
add
bound
jecxz
scas
add
bnd
add
add
add
cmpsb
scas
out
mov
movsb
add
aam
add
add
sub
pop
rol
xor
push
sub
lea
ror
pop
inc
cmpb
jne
push
lea
lea
inc
lea
pop
add
cmp
je
push
shl
lea
dec
shl
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
jne
mov
aad
add
add
add
clc
add
add
push
add
addl
in
fcomps
jnp
add
test
call
push
lea
push
lea
push
push
call
popa
mov
pop
add
add
cmpsb
leave
mov
test
lods
add
push
add
add
cmpl
test
add
add
add
sub
pop
xor
push
push
lea
push
lea
push
call
mov
add
js
add
leave
xchg
popf
add
push
aam
mov
add
add
int3
lods
rcr
xlat
jle
les
cli
add
add
push
addb
add
jne
push
mov
add
ret
add
bound
xchg
add
xchg
jns
arpl
pop
add
lcall
pop
push
push
lea
push
lea
push
call
jecxz
jae
faddl
roll
jbe
add
pop
popa
mov
je
add
hlt
imull
mov
mov
push
xchg
in
mov
add
addb
sub
pop
pop
push
push
lea
push
push
call
sahf
imul
xchg
movsl
add
int3
stos
lea
cmpl
jnp
add
stos
lret
push
add
ljmp
in
lock
lcall
push
ror
pop
pop
leave
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
add
xchg
in
mov
div
add
test
lds
add
mov
xchg
add
push
lret
stos
lock
jbe
in
fdivr
lcall
or
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
cwtl
clc
add
sti
add
fmulp
add
xchg
mov
jmp
cmc
add
fxch
rolb
mov
xchg
mov
add
test
push
add
add
fnsave
sub
pop
add
mov
push
lea
push
lea
push
push
lea
push
lea
push
call
push
fistl
jge
fiadds
in
ljmp
add
add
movsl
ja
cmpsb
data16
jl
add
add
icebp
addr16
js
sar
lds
ljmp
mov
idivl
jbe
mov
in
call
push
push
lea
push
push
push
lea
push
call
mov
test
xchg
jp
outsl
mov
add
add
shl
add
out
add
add
add
add
add
push
push
aad
sub
pop
mulb
push
push
push
push
push
push
call
add
add
xchg
in
orl
add
add
hlt
adcb
add
ficomps
lea
hlt
xchg
scas
add
add
lds
in
mov
add
stc
add
push
jmp
add
add
jo
add
icebp
test
xchg
clc
add
jl
jmp
add
add
push
push
push
push
push
push
push
push
call
arpl
mov
rolb
adc
jbe
mov
add
add
imul
stos
add
add
add
xchg
add
add
add
lcall
dec
mov
loope
add
dec
ror
pop
push
push
push
push
call
add
mov
add
sahf
xchg
rcr
out
xchg
add
xchg
add
add
mov
shlb
add
add
in
sahf
add
mov
fisubs
cmpsl
pop
stos
mov
xchg
outsl
mov
mov
mov
fisubrl
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
mov
add
mov
clc
nop
add
pop
fdivrl
icebp
insb
mov
lea
loope
add
add
sbbb
add
add
repnz
mov
in
fcompl
xor
push
lea
push
push
push
push
call
add
add
jo
loope
pop
add
jae
add
sahf
mov
xlat
push
incb
add
rorb
push
sub
pop
pop
pop
push
lea
push
push
lea
push
call
mov
cltd
jp
add
add
cwtl
jle
scas
add
cmc
mov
jne
jge
add
pop
push
add
add
bound
mov
sub
pop
pop
push
add
sub
rol
sub
pop
pop
push
xor
add
not
pop
pop
push
push
push
push
push
call
jmp
add
add
lods
ljmp
add
add
add
add
add
int
mov
ljmp
fsubl
shlb
mov
push
mov
mov
lret
add
pop
leave
push
push
lea
push
lea
push
lea
push
call
imul
add
mov
add
sahf
mov
mov
js
pop
aam
add
push
mov
add
add
add
add
loop
xchg
out
fcomps
push
lods
mov
lcall
add
mov
xchg
sti
add
add
sub
pop
ret
push
dec
shr
pop
push
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
push
add
push
imul
jecxz
mov
lea
add
shll
push
add
lcall
add
rcll
in
add
iret
addr16
add
stos
add
mov
fwait
in
add
add
mov
add
xchg
mov
loopne
add
push
lea
push
call
add
pop
data16
add
mov
xor
add
jne
add
subl
cmpsb
cmpsl
add
add
add
rcrb
add
add
mov
add
in
clc
lcall
push
push
push
lea
push
lea
push
lea
push
lea
push
call
test
mov
add
xchg
mov
fwait
roll
mov
xchg
frstpm(287
sarb
add
icebp
mov
add
std
add
icebp
iret
addb
shll
in
in
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
cmpb
add
add
movsb
data16
add
jmp
int
pop
mov
add
aad
popf
add
add
out
add
jno
cltd
add
into
add
rcl
hlt
hlt
hlt
pop
ret
popf
add
ja
popa
jo
add
mov
incb
out
add
pop
push
push
lea
add
pop
push
push
push
push
push
lea
push
push
push
call
lods
int3
add
add
faddl
lret
mov
push
push
xchg
add
data16
add
jne
xchg
mov
in
in
mov
push
lea
lea
pop
push
push
rol
pop
pop
push
inc
rol
add
pop
lea
sub
push
lea
push
lea
push
call
add
mov
push
add
add
add
ja
rcr
icebp
je
arpl
movsb
add
loop
add
loopne
pop
addr16
mov
jnp
subb
gs
mov
popa
sub
pop
mov
push
push
push
lea
push
push
push
call
cmc
add
mov
add
mov
jb
mov
add
push
add
add
pusha
ja
add
mov
mov
add
add
sub
pop
shr
push
add
sub
not
pop
add
push
push
push
push
push
push
lea
push
push
call
jmp
bound
jge
negb
add
stos
add
add
add
hlt
xchg
add
add
arpl
add
push
icebp
roll
xchg
outsl
add
pop
js
not
sub
add
pop
add
pushl
push
push
lea
push
push
push
push
call
add
bound
lahf
call
mov
add
out
add
loope
add
imul
xchg
shll
ljmp
jp
add
mov
add
lea
lock
add
mov
add
lret
popa
test
in
call
popl
mov
push
push
push
push
call
add
add
add
je
add
hlt
imul
mov
outsl
in
jle
xchg
add
nop
add
out
mov
xchg
lods
add
addr16
add
xlat
add
sahf
add
add
test
movsl
add
arpl
xchg
mov
add
mov
lcall
stc
push
push
push
push
push
lea
push
push
push
push
push
call
push
mov
add
mov
fsubrl
mov
fiaddl
lds
test
cmpsl
mov
add
add
mov
imul
jno
cmpsl
outsl
fucomip
add
add
jle
pushf
add
xchg
outsl
mov
test
iret
add
push
pusha
add
fildll
testb
in
fdivr
lcall
notb
rol
loope
pop
lea
push
shr
xor
dec
rol
pop
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
pop
into
loope
mov
jnp
add
shl
ret
add
lahf
mov
testl
add
add
push
add
mov
add
in
add
add
filds
mov
add
mov
in
add
mov
jle
testl
xor
push
push
call
gs
fs
add
jbe
add
pop
fmulp
add
mov
add
mov
push
out
add
add
roll
xchg
add
jno
je
jl
fwait
add
add
fildl
add
pop
add
sub
pop
rol
push
lea
dec
pop
nop
push
inc
pop
nop
push
push
push
push
lea
push
push
push
call
mov
add
add
movsl
arpl
addr16
pop
pop
add
add
rolb
add
fdivrl
mov
repnz
add
roll
out
repnz
scas
add
add
add
add
add
out
add
jo
in
in
lcall
add
sbb
sbb
pop
nop
push
inc
lea
lea
shl
pop
nop
push
pop
inc
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
add
mov
add
fsubrl
clc
add
mov
add
aad
add
add
in
rolb
out
add
add
add
add
add
loop
add
outsl
push
add
add
push
ret
xlat
add
lcall
lcall
push
shl
pop
nop
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
lods
test
rorl
pushf
add
rolb
xchg
add
js
add
xlat
pop
loopne
out
add
add
test
xchg
in
mov
lret
test
scas
add
lcall
cmp
jne
add
push
lea
add
pop
nop
push
push
call
movsl
into
fistpll
add
add
fiadds
add
add
add
lret
pushf
add
ja
mov
add
add
mov
jno
imul
mov
addl
mov
sub
pop
nop
push
shr
pop
cmp
je
push
rol
shl
pop
nop
nop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
roll
add
cli
mov
repnz
add
xorl
repnz
add
pop
ret
test
pushf
add
jnp
add
add
add
in
fcomps
nop
push
pop
nop
push
push
lea
push
call
cld
mov
add
add
xchg
add
fildl
add
add
outsl
mull
add
add
xchg
cmpsb
leave
mov
out
jno
out
mov
push
int
fadd
add
add
add
in
push
mov
hlt
pop
cmp
jb
push
push
push
lea
push
push
call
add
add
addl
enter
add
jecxz
add
call
addb
clc
add
mov
mov
add
jo
in
test
iret
cmc
add
add
add
xchg
jmp
les
rclb
lea
push
push
push
lea
push
push
push
push
call
stos
add
jp
faddl
add
mov
fldl
add
add
mov
add
jae
cmpsl
ja
push
enter
add
sarb
sub
pop
jmp
mov
push
ror
pop
add
push
push
push
push
call
add
add
add
add
add
mov
jmp
mov
mov
cmpsl
add
mov
mov
jmp
out
add
add
imul
jecxz
add
cmpsl
mov
add
mov
add
mov
jb
shl
add
add
inc
pop
mov
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
push
add
add
repnz
icebp
cwtl
cltd
hlt
add
faddl
add
mov
icebp
mov
add
jp
ret
add
add
add
add
clc
add
les
test
lock
add
je
cwtl
xchg
add
xchg
loop
mov
push
add
js
mov
mov
push
push
lea
push
lea
push
call
fstps
xchg
add
filds
add
add
add
add
mov
jge
pop
add
pop
add
xbegin
jb
ror
cli
scas
mov
lock
lcall
leave
push
xor
pop
xor
push
push
push
push
push
push
call
into
ljmp
lahf
jae
outsl
nop
add
add
scas
add
std
std
add
je
pop
out
jbe
add
add
add
loope
xor
push
sub
sub
not
pop
shl
push
ror
dec
not
pop
xor
shl
push
lea
push
push
push
push
lea
push
push
lea
push
call
ja
cmpb
gs
jle
push
jge
arpl
mov
js
cmc
aad
test
rolb
mov
mov
in
add
clc
add
add
add
push
add
add
in
fcoml
add
iret
mov
xlat
flds
pop
mov
add
add
les
je
add
add
lcall
or
push
ror
shr
dec
pop
mov
add
push
lea
inc
dec
pop
pop
pop
push
push
call
insb
cmpsl
cmpsl
mov
out
add
cmpsb
add
mov
push
sbbb
ret
pop
jne
add
xlat
fsubrs
xchg
add
in
add
add
test
add
push
addl
push
push
push
lea
push
push
push
call
scas
fisubl
mov
jmp
add
xchg
add
out
add
add
mov
add
movb
xchg
into
add
xchg
or
test
add
sub
pop
leave
ret
push
sub
add
dec
pop
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
add
add
pop
add
add
popa
add
pop
jecxz
xchg
add
mov
cwtl
add
fnstcw
add
imul
mov
push
sub
pop
push
push
push
sub
dec
pop
push
push
push
dec
pop
mov
mov
push
push
lea
push
push
call
testl
in
add
lcall
add
mov
shrl
add
in
ja
push
push
mov
gs
icebp
mov
add
out
add
mov
add
add
add
mov
fldl
add
add
add
add
enter
loopne
mov
lock
lcall
jge
test
je
push
shr
dec
pop
mov
test
je
push
push
push
call
push
rcrl
stos
add
add
int3
arpl
roll
stos
add
mov
in
add
imul
add
add
into
out
xlat
scas
pop
lods
in
add
pop
sti
movsb
addr16
iret
add
lea
mov
add
pop
fldl
mov
add
jno
jo
mov
add
lcall
notl
push
push
push
push
push
call
add
mov
lret
clc
add
mov
sahf
mov
imul
cmpsb
jne
jecxz
add
add
add
add
test
xchg
ror
add
in
in
lcall
dec
or
shl
pop
mov
push
add
not
shl
shl
pop
inc
cmp
je
push
inc
inc
dec
pop
test
je
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
movsb
mov
add
shlb
mov
int3
lcall
outsl
loopne
leave
rolb
add
test
xchg
pop
addb
ret
add
fiadds
add
add
add
enter
add
data16
addb
sub
pop
inc
cmp
je
push
shr
inc
pop
test
jne
xor
push
sub
shr
shl
pop
pop
push
push
push
call
add
lea
jmp
lret
roll
add
mov
add
add
add
test
jnp
movsb
les
mov
push
add
popa
xchg
lods
clc
add
mov
pop
add
mov
add
fiaddl
jmp
add
data16
out
scas
add
outsl
add
sub
pop
pop
push
push
push
push
push
lea
push
push
call
pusha
add
add
stos
mov
mov
pop
insb
testl
lods
rolb
ret
pushf
add
add
add
add
pop
pop
push
add
pop
pop
leave
push
add
dec
shr
pop
ret
mov
push
shr
pop
inc
push
push
lea
push
call
mov
adcb
cmpsl
outsl
add
add
add
add
add
mov
add
loopne
xchg
push
add
pop
add
add
add
add
mov
add
mull
add
nop
out
sbbl
jno
jne
test
mov
arpl
add
lock
push
shl
shr
inc
pop
lea
push
push
push
push
lea
push
lea
push
push
push
push
push
call
js
add
les
js
mov
add
push
stos
mov
addr16
test
xchg
loop
add
mov
add
add
add
addb
add
mov
push
dec
pop
test
je
mov
push
lea
push
call
jno
test
pusha
cld
mov
lcall
xchg
stos
nop
add
add
test
add
mov
incb
js
lahf
add
add
in
clc
pop
add
push
xor
rol
pop
cmp
jne
push
lea
pop
mov
push
inc
add
ror
pop
test
je
mov
push
push
lea
push
call
sbbb
add
arpl
jle
lahf
insb
lea
jbe
pop
faddl
cltd
add
cwtl
push
add
add
mov
into
frstor
add
test
add
hlt
testb
mov
pop
sub
pop
add
push
push
lea
push
push
lea
push
call
pop
out
les
add
add
add
add
mov
test
mov
popl
push
xchg
testb
jno
in
mov
add
jbe
add
lds
lods
cld
movsl
mov
jae
add
pop
lret
frstor
cmp
je
jmp
push
lea
add
pop
xor
pop
push
lea
sub
shr
pop
pop
push
ror
sub
pop
pop
push
lea
push
push
call
jns
call
popl
imul
add
out
add
add
mov
add
loopne
fwait
add
add
mov
add
add
mov
popa
lock
jmp
fldl
ljmp
push
add
lea
dec
add
pop
leave
ret
push
dec
not
pop
lea
pop
push
push
push
push
lea
push
push
push
call
ja
add
add
out
add
mov
roll
add
add
add
lods
lods
cmc
mov
add
stos
nop
in
in
aad
jo
add
jge
xlat
add
fisubrs
nop
popa
les
mov
add
shll
add
movl
mov
addl
push
push
push
push
call
fcomps
mov
add
jno
mov
std
add
aam
add
xchg
push
pop
add
mov
in
add
add
in
add
fldl
addl
mov
add
add
int
movsl
lods
sahf
aad
xchg
test
mov
add
cwtl
add
push
pop
pop
leave
push
push
push
push
push
push
push
call
add
mov
add
fs
add
xchg
sbbl
add
les
rolb
jnp
mov
xchg
clc
add
jge
add
add
lcall
or
push
push
push
lea
push
push
push
push
push
push
lea
push
call
stos
scas
xchg
test
push
pushf
mov
add
in
mov
mov
mov
cmpsl
add
mov
mov
icebp
cli
add
mov
je
jo
jno
push
add
add
add
fcomps
push
push
lea
push
push
push
call
add
fistpl
add
add
mov
add
add
rcrl
out
lret
add
test
add
lods
pop
add
ja
add
mov
test
cmpb
sub
pop
pop
pop
push
shl
pop
pop
push
push
push
push
push
push
call
add
je
bound
add
add
stc
add
add
add
add
add
add
pop
popf
add
mov
jl
sti
fwait
add
fdiv
add
mov
cli
mov
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
popf
add
add
add
add
test
test
filds
add
push
imul
enter
jb
add
add
orl
pop
add
add
add
add
lret
roll
add
add
cmpsl
push
ljmp
fdivr
lcall
ret
xor
cmp
xor
adc
icebp
adc
adc
adc
adc
cmp
add
cmp
xor
adc
jb
adc
mov
add
mov
pop
pop
rorb
imull
pushl
or
in
or
ja
push
lods
xor
adc
jecxz
sbb
xor
nop
mov
into
jp
mov
daa
hlt
xchg
aaa
mov
stos
pop
jl
dec
or
inc
pop
mov
lcall
sbb
jne
call
leave
sbb
mov
arpl
jnp
mov
pop
das
jecxz
fdivrl
mov
push
pop
push
add
sbb
ret
and
lds
in
imull
sub
dec
stos
mov
lods
sbb
arpl
es
les
add
sbb
xchg
pusha
lods
call
cmp
gs
sbb
xor
jbe
or
in
sbb
leave
in
sbb
fnsave
movsb
loope
mov
outsl
jle
in
out
jbe
sbb
and
and
rcl
loop
jl
fdivr
or
lock
lret
call
in
sahf
pop
daa
add
push
call
mov
xor
sub
fistps
pop
enter
add
je
rclb
out
fwait
stc
fcmove
cli
es
mov
adc
outsb
cmc
pop
test
fidivrs
loop
scas
in
rcll
dec
mov
test
adc
aaa
push
out
jge
lret
sbb
mov
les
pop
jns
fstpt
mov
lret
adc
push
dec
jg
test
hlt
nop
cwtl
push
or
movsb
add
mov
mov
push
or
dec
icebp
faddl
mov
jae
pop
inc
test
fs
jmp
in
xchg
push
and
cmp
adc
sbb
jmp
out
lods
xor
mov
in
test
push
int
dec
stc
test
mov
fsubp
xchg
orb
pop
mulps
rcll
jbe
movsl
add
pop
push
xchg
and
out
add
cltd
mov
inc
xchg
and
int
inc
mov
daa
mov
shll
daa
lcall
pop
push
mov
adc
sub
mov
lock
sbb
pop
xor
jp
cmpl
and
in
cld
sub
lahf
mov
dec
adcl
adc
cmp
fiaddl
ljmp
test
mov
incb
jmp
inc
lods
int
push
and
and
aad
enter
push
jnp
mov
repz
subb
outsl
adc
mov
xor
stc
dec
inc
push
cs
inc
mov
mov
sbb
and
xchg
mov
mov
sub
mov
push
jmp
lds
in
pop
roll
sbbl
pop
dec
popf
shlb
das
imul
stos
xchg
ror
jmp
push
lahf
mov
movsb
orb
scas
xchg
and
adc
jno
add
gs
movsb
lock
ficoms
pop
in
xchg
arpl
ja
cmp
jne
and
daa
fists
sti
test
inc
dec
fcom
hlt
stos
outsl
icebp
lret
lock
ds
mov
sbb
push
iret
dec
loopne
sahf
testb
xchg
cs
cmpsl
nop
or
popf
pusha
inc
sub
lret
sbb
movsb
pop
xor
stos
pop
daa
jnp
ja
scas
adc
cld
aad
xor
les
cltd
cltd
mov
jo,pn
lret
popf
mov
xor
cld
push
dec
outsb
pop
out
sub
jo
out
dec
aaa
push
jo
pop
fmull
mov
sahf
cld
add
popa
jbe
testl
lds
mov
push
mov
jmp
int3
shrd
call
lock
cwtl
or
add
scas
cmp
adc
movsl
fstpt
xchg
loop
rorl
int3
xlat
pop
cmp
or
add
jnp
stc
and
sub
repnz
mov
adc
inc
mov
push
dec
or
xor
insl
mov
sub
mov
fwait
test
sbb
xchg
dec
cmp
clc
test
bound
mov
jge
mov
lret
sbb
inc
push
pop
jmp
add
or
dec
lock
xlat
hlt
outsl
or
ret
adc
fnstcw
ljmp
ljmp
inc
jnp
cmp
adcl
sbb
clc
inc
mov
insl
xchg
jb
mov
fs
push
int
sahf
mov
fisubrs
mov
add
shll
jl
popf
fcmovu
sub
mov
sub
cmp
xchg
jno
or
jno
push
test
xchg
out
cmp
lahf
cwtl
in
scas
mov
sti
mov
sbb
rol
hlt
mov
sahf
leave
mov
out
xchg
push
outsl
mov
orb
arpl
cmp
lods
mov
lahf
jg
std
or
and
cmpsb
mov
pop
sbb
adc
sbb
or
jg
jb
xlat
idivb
fcoms
fldt
xchg
sbb
mov
sub
mov
adc
out
bound
mov
dec
pushf
imul
fnsave
cltd
pop
rolb
push
clc
xor
dec
dec
dec
pop
vandnpd
dec
adc
inc
sti
lock
movhps
inc
cmc
mov
test
pop
and
push
push
lds
repz
out
jbe
aad
sub
pusha
aaa
xchg
dec
xor
mov
mov
jb
push
xchg
xor
mov
movsl
test
sti
ret
sub
in
jno
mov
cltd
in
or
mov
pop
pop
cmp
adc
cmp
push
das
fbld
sub
pop
jns
jmp
in
push
les
icebp
and
mov
pop
mov
mov
mov
dec
out
sar
dec
xchg
filds
dec
dec
outsl
cmp
jno
mov
stos
fbld
mov
dec
pop
push
mov
jno
sub
test
jnp
stos
in
pop
or
pusha
test
lret
movsb
cld
push
and
push
std
add
shlb
dec
or
xchg
pop
test
push
pop
lock
out
outsl
ss
mov
pop
jae
call
roll
dec
inc
outsb
stc
push
rorb
xor
jbe
and
mov
scas
addr16
out
cltd
push
push
push
mov
imul
mov
add
ret
roll
js
inc
enter
stos
sub
jne
jb
stc
leave
mov
std
loope
pop
ds
xchg
xlat
cmp
adc
mov
xchg
mov
or
mov
cmpsl
dec
jo
xor
or
call
es
sub
mov
dec
sbbl
nop
es
mov
sbb
inc
fcom
test
scas
repz
jo
cmp
xchg
sbb
in
jle,pt
or
sbb
dec
leave
xchg
or
aaa
sub
sbb
dec
pusha
das
pop
inc
pop
sub
xor
xchg
push
pop
push
mov
imul
mov
lcall
lea
pop
cmp
inc
push
jmp
loope
or
lea
test
xchg
in
mov
stos
add
push
fsts
sbb
xchg
insl
outsl
stos
mov
pop
mov
sbb
cmp
out
sbb
mov
mov
mul
xorb
sub
mov
icebp
insl
das
das
lods
jo
movsl
imul
test
loope
cmpsl
into
jae
insb
lcall
in
rclb
mov
adc
inc
in
jmp
add
enter
imul
cltd
sbb
sarl
negl
out
enter
push
jbe
mov
or
or
jmp
adc
stos
cwtl
out
sahf
jmp
mov
aad
mov
cmc
cmc
int
out
pop
inc
sbb
cmp
cmpsb
ret
xor
pushf
in
and
mov
push
nop
imul
mov
sub
push
pop
jb
xor
add
mov
xchg
outsb
mov
push
push
out
jp
inc
mull
mov
cld
jp
inc
cli
jb
mov
aaa
push
jae
das
xlat
push
ss
mov
dec
mov
aam
in
in
aam
sub
adc
jno
testl
push
mov
xor
test
lds
jnp
lahf
push
mov
xchg
pop
pop
call
jl
jne
push
and
loop
std
shlb
jne
je
shrb
pop
dec
insb
and
mov
popf
jo
sarl
mov
cli
xchg
push
sub
push
dec
sbb
into
fldenv
inc
xchg
insl
lods
sti
mov
adcl
cmp
mov
mov
mov
mov
jle
dec
add
loopnew
pop
xor
outsl
adc
aad
aaa
and
cmpsl
mov
arpl
mov
and
cmovg
adc
jo
pop
push
jae
sahf
cltd
test
jp
or
iret
movsl
inc
or
jb
je
adc
in
xchg
lock
js
jle
adc
cs
sub
add
mov
cmp
nop
jp
insb
in
es
test
mov
orb
ja
fstps
dec
push
and
pop
sub
add
popa
in
roll
mov
xchg
xor
mov
push
movsl
mov
push
dec
shll
aad
fistpl
popf
or
aam
bound
aad
sub
and
sub
mov
decl
mov
jmp
js
ficompl
xchg
rorl
pusha
fistpl
adc
sarl
leave
xchg
xchg
lods
sbb
xlat
ds
push
popa
loopne
mov
lret
push
lods
popf
int3
lcall
cmc
adc
cmp
pop
jmp
daa
repnz
bound
pop
sahf
nop
fbld
cwtl
push
ds
mov
rorl
and
sbb
pop
test
add
stos
insl
jmp
mov
dec
pop
sub
imul
jbe
popf
pop
xchg
jmp
jo
add
xchg
out
je
aad
dec
sub
js
test
xchg
push
leave
pusha
xchg
cmp
or
push
stos
pop
cli
mov
add
je
pop
leave
test
mov
pop
pop
pop
jne
lret
hlt
push
in
jb
fcompl
das
fnstenv
outsb
mov
xchg
pop
sub
xchg
jmp
add
cmp
rclb
lods
push
js
fistpll
mov
adc
out
adc
dec
mov
int
mov
loopne
lahf
mov
das
lea
outsl
jecxz
call
js
pop
lock
stc
cmc
loope
inc
fildll
push
mov
into
mov
jnp
orb
and
dec
jns
lret
lds
clc
es
lea
aad
mov
mov
sbb
push
pusha
and
mov
sahf
inc
jmp
and
jmp
inc
or
mov
push
adc
ror
jnp
adc
mov
or
faddl
pusha
mov
ret
inc
and
xor
ss
dec
or
ret
int3
je
lcall
mov
not
nop
xorb
pop
xor
adc
cmp
mov
jmp
mov
push
cli
enter
negb
mov
sub
mov
lea
lods
addb
into
cmp
and
sub
dec
xchg
sbb
sub
stos
sub
movsl
ret
daa
out
jo
pop
arpl
repnz
das
xor
push
mov
inc
es
cmpsl
adc
mov
in
jmp
cs
jg
cwtl
fnsave
lock
insb
cltd
call
mov
lock
fs
daa
xor
fbld
sbb
out
sub
in
subl
imul
loopne
pop
sbb
xchg
fcmovnb
out
push
mov
movsl
pop
jb
loopne
lds
call
and
sub
xor
cmp
jbe
sub
in
pop
rcrb
add
push
jl
jl
imul
cwtl
out
xchg
fistpll
pop
lea
sbb
int3
mov
loopne
movsl
test
lret
sbb
add
and
in
sub
jne
cmp
pop
pop
idivb
loop
xchg
setno
loop
out
xchg
fs
scas
cmc
repnz
add
jp
mov
inc
cmc
mov
or
jns
dec
sub
pop
lcall
mov
cmp
mov
dec
push
outsb
jne
and
or
mov
push
mov
lcall
cmp
push
out
das
fimull
cltd
outsl
mov
ja
xor
mov
fistps
mov
push
into
and
jmp
xchg
sbb
dec
sti
mov
mov
xor
aas
cmp
cltd
test
pop
cltd
mov
mov
mov
imulb
js
push
clc
gs
xlat
xor
popa
cli
jae
sub
int
push
inc
add
sbb
dec
cmpsl
data16
out
jg
mov
and
xchg
test
dec
adc
push
push
stos
orb
ret
mov
inc
dec
pmaddwd
xor
scas
fsubl
jge
and
adc
cmp
lea
cwtl
jmp
shrb
test
ficoms
pop
mov
scas
sbb
outsb
test
inc
aas
mov
inc
aam
out
cmpsb
sbb
and
stc
rcll
test
mov
mov
cmpsb
pop
add
lahf
pushf
sub
mov
xor
insl
shll
fisttps
insl
sub
mov
popa
cmp
push
mov
dec
pop
stos
outsb
sbb
push
jb
dec
or
aas
test
les
in
faddl
in
aaa
xor
lock
mov
pusha
popf
xor
mov
jmp
in
cltd
int3
push
and
dec
jns
insb
out
jns
xchg
into
insl
lret
rorb
xor
and
xchg
pop
cmp
pop
addr16
and
cwtl
popf
mulb
mov
loop
push
dec
aaa
mov
loop
push
pusha
dec
jno
add
mov
sbb
jl
lcall
or
rorl
rclb
cmc
fistpll
sahf
xchg
xlat
cltd
mov
outsb
xchg
mov
jbe
lock
leave
sbb
ret
push
out
lahf
pop
xor
subb
cmovs
add
cmp
imul
adc
inc
mov
lahf
arpl
mov
push
lcall
bound
push
lret
repz
push
cmc
clc
cmp
inc
stos
sub
bnd
daa
xor
rolb
test
idivb
outsb
cmpsl
add
jg
fiadds
loopne
mov
lods
sub
mov
insb
jmp
out
sbb
rolb
add
add
dec
and
push
fs
mov
mov
arpl
imul
test
cmp
dec
sub
push
mov
imul
sub
mov
popa
mov
mov
push
push
out
clc
jecxz
shrl
movsb
mov
lods
mov
and
dec
cld
sbb
jecxz
aam
xchg
adc
mov
xchg
andb
leave
aad
xchg
mov
xor
mov
test
scas
sbb
je
movsb
jmp
aaa
test
cmp
push
scas
and
xor
inc
pop
inc
lret
add
clc
scas
push
insb
lcall
int3
inc
call
adc
push
mov
fwait
inc
imul
fwait
out
xchg
xor
cmpsb
out
add
jl
jg
mov
adc
jge
jmp
in
pop
lds
pop
test
push
or
mov
push
xor
jle
mov
int
lret
loopne
push
xor
adc
cmc
subb
add
sub
in
dec
xchg
mov
jo
mov
lret
xor
dec
push
ja
inc
repz
xor
mul
xchg
and
in
std
les
mov
mov
scas
roll
jl
outsb
pusha
in
xor
push
push
adc
leave
pop
dec
testl
sarl
inc
cld
arpl
mov
xchg
or
shrb
or
xchg
pop
data16
cmp
scas
pmaxsw
jnp
lcall
push
icebp
or
pop
or
dec
test
cli
mov
inc
lret
orl
and
scas
popf
les
xor
or
cmp
ds
scas
pop
mov
lea
push
icebp
mov
insl
xor
xchg
or
lret
push
cmpsb
xchg
xor
int
xchg
bound
fldcw
stos
xchg
pushf
pop
inc
stc
jg
mov
arpl
push
in
sbb
jge
xchg
cmp
lret
inc
push
push
dec
mov
roll
adc
stc
rol
jecxz
or
sahf
mov
movsb
mov
hlt
in
sahf
test
dec
xor
cwtl
push
mov
stos
xchg
jns
and
in
push
ret
mov
call
cmp
lcall
cmp
inc
in
in
push
in
divb
sarb
mov
cmpsb
cmc
out
lds
pop
push
movsl
fdivrl
inc
mov
popf
stc
fistps
enter
mov
and
pop
lods
das
adc
mov
xchg
mov
or
xor
int3
add
push
or
movsb
adc
or
lea
fdivrs
les
loopne
or
lret
jo
ljmp
ljmp
adcb
add
inc
hlt
stc
push
fistl
add
adc
cwtl
xlat
mov
enter
cmc
aas
insl
sbb
int
mov
daa
jle
add
clc
bnd
mov
pmullw
arpl
pop
stos
iret
movsl
cld
xchg
imul
sbbb
push
adc
xchg
cmp
int
int3
mov
mov
mov
leave
rolb
imul
xchg
mov
mov
push
pop
hlt
pusha
cmp
loop
mov
nop
jle
pop
int3
sbb
mov
cltd
out
orl
lock
out
push
inc
jmp
sbb
cmp
cltd
push
push
jb
inc
int3
jns
or
inc
das
ret
arpl
loope
adc
jns
pop
add
test
jno
test
inc
jge
and
adc
pop
movsb
mov
push
push
andl
popa
inc
xlat
ficoms
pop
inc
outsl
push
push
lods
out
out
mov
data16
gs
testl
sbb
neg
and
sub
out
dec
dec
jp
pop
scas
shr
inc
loopne
rorb
xor
adc
cmpsb
insb
out
pop
mov
repnz
dec
push
in
mov
pushf
fisttpll
lahf
aam
rcrl
sub
icebp
in
stc
xor
push
cltd
inc
xchg
bound
orl
repnz
lds
lea
bound
add
cltd
sbb
inc
addl
mov
jb
fisubrs
lahf
test
sbb
xchg
ja
shll
jbe
out
xor
push
fimull
subb
xchg
js
adc
adc
imul
aas
fmuls
or
dec
push
shrl
inc
mov
sahf
sbb
xchg
pop
lahf
mov
jo
ret
int
or
add
xchg
jle
dec
lea
pop
scas
adc
xchg
adc
jae
movsb
push
subb
mov
jne
rcr
std
and
mov
sub
sbb
adc
mov
gs
lea
les
xor
and
sbb
test
fwait
push
cs
pop
cmp
scas
cmpsb
test
mov
cmp
icebp
leave
mov
mov
xchg
repnz
leave
mov
test
mov
inc
loopne
dec
add
add
loope
hlt
jns
push
adcb
ja
xchg
aam
shrl
mov
mov
iret
sub
jg
js
mov
mov
jb
pop
mov
cmp
fadds
cmp
mov
inc
sub
fbld
int3
cmp
mov
mov
je
push
mov
mov
push
xor
aad
iret
in
sub
jmp
out
mov
lock
loope
lea
sbb
inc
lcall
and
test
xlat
inc
mov
and
pop
add
dec
push
adc
aas
jmp
xchg
jno
and
fs
lods
repz
push
add
rcl
mov
cs
and
shl
ja
ljmp
popf
mov
imul
enter
jle
cwtl
xchg
mov
test
shll
push
mov
jno
jbe
push
fdiv
enter
popa
xlat
and
jns
dec
xchg
sbb
lcall
jecxz
fdivs
scas
adc
idivl
cltd
jnp
add
cwtl
sub
sbbb
dec
sub
adc
call
adc
movsl
inc
popf
xchg
push
mov
push
lea
sub
cmp
cmpsl
push
lock
lahf
jmp
mov
mov
negl
fisttps
mov
cmp
jge
out
and
add
add
stos
sub
fildll
into
mov
dec
pusha
push
les
fs
jl
shrl
push
pop
sbb
sarb
scas
push
movsb
push
inc
push
das
icebp
scas
stos
or
push
int
sub
pop
adc
jg
mov
inc
inc
mov
popf
js
push
fdivs
sahf
sbb
mov
popa
addr16
aad
cmp
dec
and
fs
clc
or
imul
ds
sub
fwait
shl
sub
mov
jg
shll
pop
mov
lea
mov
stos
popa
fildl
or
out
test
xchg
lahf
insl
fwait
inc
arpl
mov
cld
cmp
cmc
pop
insl
jmp
jbe
pop
inc
in
inc
ss
jae
mov
push
inc
inc
loope
or
daa
mov
pop
jmp
xchg
push
fsubs
push
fldt
pop
enter
scas
adc
mov
test
and
pop
pop
pop
cmp
in
data16
scas
movsb
and
test
xor
es
movsb
cmc
push
rolb
data16
movsb
dec
cmp
fsubrs
jbe
in
mov
sbb
pop
pop
pop
fdivrl
popf
xor
hlt
mov
inc
sub
idivl
repz
jnp
pop
inc
sbb
sbb
sub
lahf
push
enter
andl
cmp
cmp
mov
fists
imul
aaa
cmc
outsl
ret
je
insb
insl
cmovg
adc
aam
cmp
mov
mov
loop
cmp
gs
push
mov
mov
mov
jmp
mov
cmp
test
cmpsl
pop
add
bound
insl
mov
and
es
movb
mov
into
call
inc
leave
std
repnz
mov
or
mov
push
dec
in
mov
dec
push
xor
lds
add
nop
ds
lret
rolb
cmp
scas
sar
fists
mov
es
add
fbld
cmp
pop
sub
call
push
dec
pop
pop
push
in
sbb
push
rolb
dec
cld
repnz
cld
xlat
adc
in
lret
dec
in
mov
mov
sbb
xchg
in
adc
bound
push
jg
das
gs
pop
push
aad
mov
add
or
jne
pop
xchg
rep
insl
jb
pop
cmc
and
xor
cmp
adc
sbb
insl
and
mov
es
arpl
dec
ja
inc
add
ss
push
pop
cmp
adc
pop
mov
movsb
out
loope
fcmovnbe
addr16
cld
add
cmp
add
or
fmull
mov
and
and
les
aam
mov
hlt
aad
and
enter
inc
loope
cmp
cmp
xchg
das
sub
lock
dec
pop
lea
xchg
push
sub
xchg
ljmp
or
mov
std
dec
jns
inc
int
sbb
inc
cli
cmc
mov
xchg
pop
fists
fwait
mov
fcomip
sbb
lods
stos
sub
std
bound
ss
xor
cmp
sub
push
repnz
imul
out
daa
jno
lea
push
fwait
xor
xor
push
sub
movsl
xor
enter
and
push
cmp
lods
cli
cli
mov
cwtl
pop
ja
mov
mov
cmp
faddl
jl
sbb
ret
test
mov
xor
sub
xor
jl
push
cmp
jmp
xchg
out
outsl
loope
lock
xchg
mov
push
imul
xchg
pop
in
outsl
fidivrs
inc
ja
xchg
and
xor
punpckhbw
push
fnstsw
pop
mov
push
xor
mov
call
xchg
dec
lret
or
adc
stc
add
add
clc
inc
cld
cmp
int3
stos
movsb
ficoms
outsl
push
in
leave
cmp
movsl
mov
das
addr16
pop
mov
pop
out
mov
jns
movsb
movsl
int3
adc
mov
mov
jne
je
into
maskmovq
testl
cli
js
cmp
adc
sub
lcall
adc
repnz
xchg
into
ror
mov
and
paddd
jecxz
inc
sbb
mov
dec
rorl
leave
jle
xor
push
jg
cmp
lds
dec
jmp
in
mov
out
ja
push
sbb
mov
daa
sbbl
dec
xchg
cmpsb
popf
add
mov
sbb
pushf
rcll
repz
lret
loopne
mov
xchg
ret
or
aam
xorb
cmp
jno
push
xchg
daa
sbb
dec
or
or
xor
js
lahf
xabort
mov
scas
stos
mov
push
repnz
arpl
sbb
js
ret
fbstp
das
pop
out
adc
sbb
lea
adc
xorl
mov
xchg
xor
push
push
into
test
enter
add
inc
mov
mov
xor
sub
mov
inc
mov
dec
adc
gs
out
ja
jnp
push
hlt
fst
enter
retw
jg
scas
jmp
mov
mov
mov
stos
mov
fsqrt
in
daa
sub
jmp
sti
popa
out
mov
adc
into
inc
divl
ret
imul
cmc
mov
cltd
xor
and
daa
push
fistpl
mov
cld
adc
sbb
and
xchg
fiaddl
jb
cmp
cmpsb
mov
popf
inc
mov
jmp
out
push
dec
jl
mov
ret
mov
mov
stos
not
scas
ss
test
loop
outsl
mov
aaa
xchg
inc
pop
icebp
out
mov
jb
push
adc
dec
mov
jle
cmp
cmpsl
add
adc
hlt
in
pop
inc
pop
adc
inc
pusha
xchg
sbb
sbb
scas
lcall
imul
nop
std
out
mov
mov
xchg
imul
mov
pop
subl
or
mov
popf
std
mov
clc
sbb
mov
std
test
jge
sub
push
call
in
arpl
faddl
lret
jo
outsb
inc
daa
in
dec
add
shlb
push
hlt
popa
jle
mov
enter
jecxz
iret
xor
addr16
jg
sarb
inc
fwait
arpl
out
jge
pop
inc
loope
and
cmpsl
das
adc
cmc
cmp
fs
jns
xor
mov
sbb
pop
jns
cmp
push
icebp
mov
gs
lcall
mov
stc
imul
jge
mov
add
outsl
ds
xor
pop
scas
lret
adc
clc
je
inc
aad
cmp
pop
sub
pushw
sub
loop
cmp
sub
je
dec
push
mov
out
mov
push
cmp
push
outsb
sti
jp
xor
push
and
outsl
sub
test
sub
dec
and
stos
dec
in
lods
shlb
inc
inc
jl
mov
imul
int3
push
imul
pop
stos
xchg
lods
addl
push
xchg
fdivp
fimull
mov
dec
inc
xchg
imul
popa
xor
inc
xor
loopne
mov
mov
xchg
mov
lods
dec
pusha
lcall
test
push
mov
cld
mov
cltd
jne
subl
int
ja
mov
andb
pop
insl
xor
out
xchg
scas
sub
xchg
sub
data16
inc
mov
xlat
fsub
stos
rcrl
dec
add
pop
lods
xchg
jecxz
jb
xor
movsl
sbb
mov
xor
inc
imul
cmp
out
and
movsl
push
fldcw
sbb
addr16
push
mov
jl
pushf
jl
mov
addr16
arpl
fidivs
add
int
aaa
ljmp
push
mov
xchg
mov
lret
js
arpl
bound
pop
cmp
mov
cmp
pop
aas
or
jmp
xchg
xchg
push
push
add
dec
sbb
sub
mov
mov
shll
int3
imul
push
pop
inc
cmpsl
adc
sub
mov
fnsave
lods
out
cld
push
mov
je
scas
pop
cmc
in
sbb
decb
push
inc
scas
mov
bnd
jge
imul
pop
outsl
sub
mov
add
fmuls
dec
dec
scas
loopne
hlt
sbb
and
pop
fs
lret
pop
dec
lahf
mov
in
or
fisttps
cmp
bound
loop
fwait
clc
dec
mov
add
mov
cmc
aam
inc
dec
mov
mov
out
outsl
mov
cmpsb
cwtl
mov
add
cmc
pop
and
mov
ret
inc
mov
cmp
cmpsb
push
xor
mov
mov
sbb
iret
pop
das
icebp
xor
fimull
mov
cmpsl
inc
dec
test
push
or
xor
stos
mov
sahf
in
mov
push
sbb
xchg
mov
add
dec
mov
out
fdivr
mov
daa
mov
cmp
xchg
mov
rcll
aas
dec
sub
stos
mov
scas
cmp
into
sbbb
sbb
or
insb
mov
dec
shll
pop
mov
dec
push
nop
sahf
in
ds
int3
add
cltd
and
jae
cmp
shl
fs
jle
push
lret
dec
push
add
lahf
cmpl
icebp
es
jno
stc
in
pusha
aam
stc
in
xor
xlat
fnsave
xlat
icebp
dec
pop
and
cmpb
stos
inc
rorl
pop
jb
bound
mov
shlb
fnstsw
push
xlat
mov
push
inc
fwait
jp
lret
push
mov
inc
mull
cmp
pop
rcl
mov
mov
ficoms
ss
mov
insl
sub
pop
xchg
pop
dec
stc
cs
sub
push
out
das
test
cli
lahf
loope
out
push
push
shll
jl
xchg
inc
sahf
and
push
insb
sarl
ss
xchg
into
push
jmp
lret
pop
lods
mov
and
andb
jb
scas
xchg
das
jo
xchg
cmpsb
add
mov
cwtl
adc
jno
jp
xlat
ljmp
xchg
jo
xchg
stos
test
jecxz
push
sbb
fs
int3
fsubrl
aam
sub
sbb
push
call
sti
dec
jg
mov
or
mov
ret
cmpsl
push
push
mov
cmp
inc
or
pusha
xchg
mov
jp
psrad
jp
bound
mov
dec
movsb
push
repz
pop
shrl
idiv
push
mov
inc
cmpsl
adc
jnp
scas
nop
mov
jp
or
into
lahf
mov
add
fmul
imul
push
bswap
mov
mov
jecxz
inc
out
pop
leave
cmp
mov
cmpsl
pop
es
dec
xchg
push
or
xor
mov
cli
mov
cmp
pop
or
push
sub
xor
push
lret
sbb
je
fs
xchg
sbb
js
fidivs
mov
int3
hlt
lock
cmp
inc
xor
mov
add
mov
cli
add
int
jecxz
adc
iret
xor
in
ret
jae
mov
mov
adc
decb
lea
sbb
mov
in
lea
pop
sub
and
jmp
adc
insb
xchg
lods
mov
add
xor
cmp
in
jnp
out
fdivs
cwtl
daa
mov
sti
sarl
jae
es
sub
in
sbb
scas
fs
fnstsw
adc
bound
sbb
cmpsb
xor
xor
pop
push
push
aaa
es
lock
std
jecxz
pop
cs
int
bound
outsb
out
insb
push
push
mov
adc
sbb
enter
mov
inc
stos
add
jno
jg
xor
mov
and
shll
push
nop
mov
sbb
jge
fwait
inc
dec
xchg
jg
fwait
jmp
xchg
outsb
inc
cwtl
cwtl
sbb
fildl
movsb
jns
ja
push
cmp
xchg
std
in
cmp
jne
dec
add
fisubrs
dec
in
push
repz
lwpval
bound
dec
xchg
or
jge
sbb
scas
testb
clc
or
stos
icebp
lds
xor
mov
mov
mov
imul
ror
mov
dec
inc
jp
flds
mov
es
jmp
xchg
shrb
mov
lock
sahf
sbb
outsb
leave
push
test
inc
dec
lahf
rol
pusha
lods
mov
adc
mov
pusha
push
daa
adc
mov
loop
outsl
mov
xor
jle
enter
mov
xlat
ljmp
int3
js
loopne
sub
pop
frstor
or
mov
xchg
or
fdivl
xchg
bound
adc
int
pusha
pusha
sbb
in
lods
js
or
adc
loopne
mov
fadd
lret
aaa
xchg
test
add
subl
lock
movsb
sbb
mov
xor
pop
xchg
adc
push
pop
les
cwtl
mov
stos
test
xor
sub
je
jnp
das
lret
adc
hlt
popa
adc
mov
mov
jmp
je
cmp
pop
es
mov
or
incl
cmpsl
or
and
add
fmuls
inc
cmp
cmpl
jl
push
push
lock
sbb
add
and
cmp
or
dec
xchg
adcb
mov
call
test
test
push
outsl
push
idivb
mov
xor
faddp
ja
and
jp
push
inc
inc
lcall
shlb
mov
sbb
xorb
xchg
push
in
aam
movsb
push
lahf
outsl
push
and
ret
dec
dec
enter
jmp
ficomps
in
and
negb
ljmp
test
mov
std
jmp
jp
jne
push
and
sbb
movsl
adc
ret
jp
out
insb
ret
insb
and
cwtl
cwtl
sarb
inc
fcompl
mov
push
cld
test
mov
mov
jb
and
out
loop
lret
rorb
jle
xchg
push
push
je
fsubs
xlat
inc
adc
cmp
lea
xchg
xor
movb
xor
call
jbe
fwait
mov
out
scas
sub
lret
add
lea
data16
fistps
stc
test
mov
add
test
mov
mov
mov
arpl
sub
jne
pop
mov
out
inc
call
pop
shll
sti
in
loopne
ljmp
jmp
mov
cli
fcmovu
lcall
rolb
mov
outsl
add
subl
test
rolb
or
clc
in
mov
mov
scas
jp
dec
pop
imul
addr16
xchg
adc
arpl
test
xchg
movsb
sti
mov
adc
cs
sbb
push
sub
out
mov
sub
es
dec
daa
dec
dec
cli
leave
out
cmp
stc
sub
push
push
sahf
pop
testl
inc
movsb
in
jns
mov
and
push
aam
shrb
and
fldcw
lock
popf
cmp
daa
movsl
inc
sub
mulb
in
fiaddl
stc
add
xchg
adc
xchg
cmc
rcll
and
pop
movb
and
fisubs
addr16
test
xchg
sub
test
nop
sbb
mov
sbb
xor
push
cld
mov
das
sbb
dec
jmp
xor
or
mov
mov
aad
pop
cmp
mov
pop
sbb
js
dec
xorl
xchg
inc
mov
int
jle
push
ljmp
js
out
inc
pop
or
cmc
add
dec
jle
jmp
pop
nop
movsl
jmp
adc
mov
xchg
xor
add
pop
mov
push
sbb
loopne
mov
sbb
lea
xor
inc
fisubrs
cmpsl
adc
add
ret
adc
fisttps
push
sti
test
outsb
adc
or
jo
xchg
jne
lcall
push
and
je
push
cmp
int3
sahf
insb
mov
sub
pop
mov
sbb
sar
xor
push
inc
out
cwtl
pushf
pop
add
mov
add
stc
cmp
cmp
xchg
cmc
xor
pop
or
jo
sub
dec
xchg
push
xor
scas
and
push
jle
outsl
jg
scas
ja
jns
jmp
lea
inc
add
push
sbb
xchg
push
loopne
fdivl
fistps
orb
lret
lods
rorb
mov
jge
and
daa
xor
int
mov
movhps
dec
or
test
jge
pop
aaa
shll
cltd
fistl
cmc
and
fcoml
outsb
lea
aas
lock
add
nop
icebp
jge
push
sbb
movsl
aas
lea
in
idivl
dec
xchg
fcomp
push
les
jecxz
jno
or
pusha
pop
add
sahf
fwait
popf
pusha
pushf
outsl
push
and
mov
sub
jecxz
xchg
cmp
stos
xorb
ds
sub
rorb
or
inc
lret
stos
jge
popf
xor
sub
es
call
inc
out
aad
imul
sub
clc
jle
ffreep
sub
jno
sub
enter
pop
insl
inc
xor
incl
adc
div
mov
in
sub
testl
pop
push
into
adc
jl
pop
cld
xchg
push
pop
icebp
fbstp
sub
sub
icebp
iret
addb
xchg
std
and
cmpsb
adc
jb
movsl
int3
xchg
push
cmpsl
daa
mov
mov
scas
jbe
or
mov
jl
movl
pop
enter
adc
lods
loopne
rolb
es
stos
out
pop
fxch
movsl
loop
clc
pop
test
jp
xlat
push
pop
icebp
cmpsl
sti
fdivs
and
cmp
outsb
sub
mov
dec
jno
jg
mov
loope
mov
std
aas
adc
and
sarb
in
insb
inc
test
or
movsl
sub
sahf
pop
xor
sbb
pop
enter
loop
stc
mov
shrb
xor
xor
pushf
stos
jbe
xor
pop
or
push
daa
jle
nop
popa
push
stos
sub
mov
out
insl
xchg
xor
in
fmul
ret
mov
outsb
shrl
xor
ljmp
cmp
adc
loop
xor
popa
mov
jno
adc
dec
pushf
mov
jnp
out
sbbl
out
add
cmp
pop
test
in
in
nop
fwait
dec
sbb
push
cmpb
sbb
cmc
adc
xchg
sub
cmp
insl
test
mov
imul
test
xor
add
dec
xchg
sbb
xor
leave
stos
daa
push
fmull
mulb
add
dec
cmpsl
inc
daa
add
push
adc
ja
lcall
fwait
adc
dec
ret
pop
jnp
push
jle
cmp
and
cs
push
jmp
xor
daa
loop
cwtl
adc
xchg
sbb
fdivrs
loope
push
xchg
mov
lret
movsl
sbb
adc
fdivrs
aad
dec
cmc
pushf
mov
fstpl
das
das
lahf
jge
pop
cmp
or
out
jne
inc
mov
fucomi
push
out
mov
xchg
mov
mov
nop
ret
xchg
mov
shrd
push
popf
sbb
add
mov
push
cmp
dec
rcrl
mov
lret
loopne
xor
push
pop
pop
lock
or
add
daa
loopne
clc
cmp
dec
pop
fiaddl
ficoml
out
jns
fs
fstpl
cmp
push
push
jle
jmp
jnp
fisttpl
inc
xor
adc
out
in
push
adc
dec
pushf
jne
and
out
cli
mov
and
testb
call
inc
adc
push
mov
xorl
data16
cltd
xchg
push
orb
out
xor
int
inc
and
cmp
out
out
jmp
aaa
je
push
jle
psrld
add
out
adc
push
xchg
call
dec
cwtl
call
jbe
imul
ljmp
lcall
mov
scas
enter
sbb
or
mov
test
mov
cmp
add
int
andb
sub
mov
test
mov
ds
movsl
mov
in
pop
pop
incb
std
leave
lret
add
cmp
xor
xor
hlt
sbb
cld
in
movsl
clc
int3
inc
sbb
cld
scas
fstpl
ret
fadd
sub
push
nop
jge
jmp
mov
and
in
adc
pop
sahf
rorl
push
ja
sub
mov
cmpsb
xchg
xlat
test
mov
mov
or
imulb
add
ss
lea
push
mov
and
in
and
out
xchg
pop
adc
mov
icebp
mov
or
clc
add
and
xchg
cmpsb
orl
rolb
mov
mov
pop
cli
mov
lret
jo
xchg
pop
mov
test
lret
subb
movsb
push
fdivrs
sbb
shrb
sub
cmp
add
mov
aad
xchg
arpl
and
pop
loop
and
aad
xor
push
jne
jne
outsb
inc
jecxz
aaa
lret
sbb
jmp
lahf
mov
pop
cmp
jne
cli
or
fdivl
fstpt
push
mov
jecxz
mov
xchg
ret
mov
adc
jecxz
dec
sub
scas
insb
ret
mov
out
pop
pop
add
mov
fwait
cmpsb
loope
or
xorl
adc
mov
push
sbb
fs
inc
es
hlt
jl
cwtl
sub
mov
cmpsb
cld
pop
shll
aaa
fs
lea
dec
pop
cltd
cmp
mov
in
push
xchg
sti
jp
hlt
push
mov
mov
sarb
xchg
in
mov
sbb
inc
fs
scas
movsl
fdivrp
out
cmp
ljmp
mov
movsb
repnz
mov
sbb
test
sarl
popf
add
mov
inc
and
dec
fildll
push
sar
cmp
cmp
or
clc
mov
inc
mov
repz
push
mov
mov
add
and
popa
nop
fdivp
decl
scas
inc
lds
fidivs
adc
outsb
in
enter
movsl
push
or
inc
xor
fsubrl
cmp
cltd
jl
test
xorb
lahf
cmp
pop
xchg
imul
mov
aaa
cmc
popf
inc
lock
mov
movsl
scas
adcl
push
mov
sbb
outsl
ss
aad
add
addr16
call
mov
adc
outsl
cmp
fcomps
pop
cs
or
les
pop
ljmp
mov
sbb
ljmp
in
cmp
mov
in
jmp
out
call
add
pmullw
imul
cmp
loope
repnz
stc
sarl
jae
or
adc
lods
mov
adc
loop
testl
nop
jge
popa
mov
sbb
ret
lret
and
inc
movb
cmp
ljmp
sbb
ret
push
outsl
iret
pop
add
in
das
push
pop
int3
xchg
nop
jae
mov
ja
cmpsb
std
outsl
rorl
xchg
push
mov
lcall
shll
xor
lret
mov
inc
push
test
or
pop
in
in
add
and
mov
lea
cmp
pop
sub
push
or
dec
jg
lahf
add
xchg
cmp
movb
loopne
out
ss
dec
js
xor
enter
jo
xor
xor
mov
xor
mov
cmp
pop
fisubs
cmp
ror
loopne
ror
dec
sbb
lock
outsb
mov
push
popa
sti
stc
push
and
shlb
adc
xor
mov
dec
xchg
mov
sahf
fdiv
xor
xor
jno
in
out
leave
sbbb
inc
aad
dec
jge
xchg
inc
out
repnz
jae
mov
jle
aas
outsl
xchg
jle
mov
and
les
cs
or
fisttps
add
jle
sub
inc
in
cltd
pushf
test
xor
mov
test
adcl
mov
es
add
pop
cmp
dec
mov
pop
adc
mov
scas
and
jmp
std
cmp
dec
dec
pop
loop
inc
push
sti
aas
and
mov
dec
cmp
ficoml
mov
or
and
xor
and
push
and
pop
sti
ljmp
fwait
addr16
lods
mov
jg
add
stc
mov
push
sbb
xchg
in
dec
mov
popf
jle
sbb
movsl
mov
popf
divl
out
testl
das
mov
push
xor
sbb
adc
into
out
mov
adc
insl
fcmovbe
nop
and
out
test
loopne
xchg
fistpll
mov
ds
mov
leave
ret
test
les
mov
pop
fsubl
outsl
sub
cmp
decl
or
pop
ja
mov
ljmp
test
lret
leave
jl
inc
push
inc
jno
dec
gs
mov
mov
out
js
ljmp
xor
jb
inc
push
shl
lret
fnclex
cmp
push
popf
jecxz
cmp
xchg
push
roll
sbb
popf
cmp
ds
push
sub
scas
addr16
hlt
pop
mov
mov
mov
jg
lds
mov
jl
inc
push
xchg
imul
cli
icebp
xchg
pop
fcoms
movsl
fisttpl
sar
mov
fnstcw
arpl
pop
cs
insl
fisubrl
sbb
jb
jns
or
sbbl
xchg
jae
fldcw
mov
mov
subl
xor
aaa
test
in
aas
stos
js
xchg
cmp
push
daa
pop
in
push
mov
push
jp
jg
mov
pushf
dec
pusha
xor
sbb
push
pop
mov
sbb
xchg
rcr
sarl
cmpsb
pop
mov
fbld
dec
jg
add
shrb
fs
dec
imul
jne
mov
repz
pop
fdivrl
jmp
shrb
stos
out
push
adc
pop
add
mov
insb
cmpsl
add
out
mov
or
mov
pminsw
icebp
gs
cltd
dec
cmc
xchg
sub
es
inc
pop
add
nop
mov
icebp
test
insb
daa
sbb
ret
mov
mov
filds
mov
ret
test
push
es
mov
out
leave
in
out
imul
and
mov
jecxz
daa
add
shrb
fadds
sbb
sbb
push
rcrb
push
push
pop
cmp
aaa
mov
and
hlt
and
inc
jmp
outsb
lods
add
xchg
cltd
jnp
add
mov
dec
xchg
mov
sub
arpl
popa
clc
pop
lods
inc
pop
pop
cmp
jnp
stos
cli
iret
jg
mov
lods
sti
je
loopne
jo
lock
mov
fisubs
shll
inc
adc
stc
inc
lock
int3
popf
push
adc
dec
push
or
add
jns
dec
xchg
les
repz
mov
stos
pop
xor
add
and
mov
jge
mov
jo
daa
shlb
push
sti
jmp
mov
cmp
or
jmp
mov
or
popa
lret
sahf
dec
addl
push
addb
pop
inc
inc
jmp
test
loopne
add
xlat
dec
mov
sub
stos
sarl
addr16
pop
mulb
ljmp
stos
jle
repz
adc
insb
dec
stc
rcr
pop
notl
xchg
lock
mov
aas
std
js
shr
sub
inc
stc
hlt
rorb
in
or
mov
dec
fbld
add
jo
add
mov
daa
sahf
xor
pop
lods
cmpsb
cltd
mov
jl
sbb
gs
pop
jnp
movsb
adc
mov
test
ss
inc
fdivr
push
cld
mov
fs
aad
inc
sub
fsubl
loop
imul
jp
cmp
sbb
int3
sbb
cmp
or
movsl
fucomip
push
insl
xor
sbb
or
fistpl
mov
push
push
repnz
push
adc
xchg
loope
xor
xchg
int
cmpl
dec
add
dec
jbe
add
fildl
dec
imul
cld
adc
mov
xchg
aas
mov
bound
fisubl
ja
cltd
in
mov
pop
lret
in
or
daa
xchg
mov
sti
push
rol
sbb
mov
cmpsb
mov
dec
and
out
fldcw
neg
insl
xor
mov
jno
dec
push
adc
scas
mov
adc
xor
jge
pop
or
cmp
mov
rcrl
out
xor
pop
stc
adc
das
fisubrl
push
les
mov
movsl
stos
xor
mov
push
mov
or
into
jp
mov
mov
mov
icebp
lods
mov
adc
jbe
out
push
into
aad
mov
and
jae
aaa
gs
mov
lea
or
dec
stos
ror
mov
inc
mov
repnz
out
xchg
cmpsb
mov
cmp
icebp
shrb
iret
jbe
rcl
mov
inc
out
inc
je
rorl
mov
cmpsb
aas
test
icebp
mov
jle
test
movsb
mov
fwait
add
push
popf
scas
and
idivb
push
mov
and
rol
jp
sub
sub
mov
loopne
in
mov
stc
lods
test
lods
inc
pop
or
sbb
mov
loope
movsl
bound
pop
xor
xchg
mov
repnz
decl
sub
mov
sbb
popf
inc
push
incb
jp
jecxz
call
xor
inc
scas
cmp
inc
dec
adc
cwtl
in
sbb
pop
cmp
jp
add
push
jg
shr
int
sahf
push
pop
jne
sahf
dec
inc
cwtl
mov
pop
xor
sub
std
add
shlb
push
push
out
mulb
dec
cmp
mov
lea
inc
aam
xchg
mov
or
sbb
inc
and
add
mov
pushf
inc
mov
lret
adc
xor
dec
push
and
dec
pushf
sub
clc
mov
mov
or
push
or
xchg
cli
sub
inc
lret
mov
stos
mov
push
inc
clc
fistps
mov
cmp
pop
sbb
xchg
mov
sbb
and
enter
aam
xor
fwait
ret
jle
in
rcll
out
jl
in
addl
movsl
lds
adc
stos
fs
ds
adc
cmp
inc
adc
das
push
jp
mov
repnz
cmp
cltd
dec
sbb
cmp
in
cmc
cmpsb
inc
lock
int3
sahf
js
daa
popa
insl
call
pop
add
jmp
add
push
lods
into
mov
inc
je
ljmp
rorb
jae
or
inc
rcr
dec
sbb
jge
dec
shl
sub
adc
mov
lods
add
pop
and
bound
sub
mov
ss
mov
movsl
rcll
js
sub
mov
test
frstor
stc
cmpsb
loopw
mov
xor
arpl
int
lock
lods
xchg
push
mov
cltd
mov
out
int
push
cmp
loopne
test
lock
push
sbb
jmp
sbb
and
jae
mov
or
dec
es
bound
mov
iret
xor
sbb
mov
xor
divb
sbbb
mov
xchg
push
push
fildl
andb
sti
es
dec
addb
scas
mov
test
mov
jmp
mov
mov
lds
dec
inc
pop
xor
push
stc
nop
lods
dec
add
sahf
fcompl
cwtl
dec
scas
xor
lods
sbb
ret
ja
or
pop
movsb
pop
jns
lcall
xor
fnstcw
mov
sub
ja
mov
jnp
dec
hlt
aad
loopne
pop
mov
in
jo
ficomps
divl
add
sbb
cmc
and
dec
jp
add
push
xchg
mov
out
ja
jg
lods
jb
xchg
sub
add
xchg
daa
ljmp
xorb
sub
xchg
lock
or
pop
movsl
and
xchg
fisttpl
push
jecxz
mov
arpl
ret
jecxz
or
inc
sbb
or
cmp
jnp
jo
xor
shr
repnz
pop
sbb
in
rcrl
jae
insb
inc
push
lods
popf
push
adc
mov
pop
mov
repz
dec
aaa
orb
subl
sub
movsl
shrb
mov
or
add
pop
add
jp
add
xchg
rolb
mov
xor
inc
fwait
ljmp
adc
inc
mov
add
in
fisttpll
addl
add
mov
and
xchg
pop
scas
in
in
jmp
mov
rcl
fs
je
mov
in
roll
dec
pop
loop
adc
add
jnp
pop
adc
ja
and
fisubl
push
inc
mov
loope
xchg
xor
popf
pop
in
addb
jp
out
adc
cmp
hlt
lods
insl
xchg
sub
sub
pushf
scas
mov
push
jp
cmp
jo
outsb
push
sbb
hlt
cmp
mov
iret
notl
jmp
jae
and
sub
dec
cmp
ljmp
xor
mov
aam
dec
scas
mov
push
fnsave
mov
fmuls
and
mov
ds
inc
mov
sub
sbb
fcomi
mov
and
add
test
cmpsl
repnz
int
pop
not
test
dec
ret
lret
dec
push
pop
int3
adcb
pop
jnp
cs
cmp
fwait
stos
aad
pop
outsl
and
fstpl
call
aad
dec
out
mov
jne
sub
jnp
sub
mov
repnz
cmp
xor
sbb
loopne
roll
jl
fdivs
pusha
pop
jp
mov
jg
mov
movsl
mov
jo
xlat
clc
daa
xor
mov
adc
inc
jns
je
xlat
mov
jge
xchg
xchg
daa
lcall
int3
push
xor
lcall
jmp
mov
lock
lods
pop
lods
xlat
enter
pushf
jae
inc
push
movb
nop
pop
inc
lods
gs
mov
xchg
inc
and
mov
sbb
aaa
sarl
add
mov
aas
jmp
xchg
jne
scas
adc
mov
orb
inc
jmp
ficoml
xor
and
add
xor
fistpll
inc
ljmp
into
mov
ficoms
add
stos
cmp
mov
or
jge
ss
jnp
push
repz
add
lret
push
adc
lods
cmp
in
xchg
push
imul
sub
mov
movsb
out
arpl
mov
xchg
push
xor
and
cli
inc
push
jp
cwtl
cld
xor
push
inc
rol
cli
jmp
imulb
adc
inc
pushf
xor
dec
sti
repz
mov
or
stos
dec
mov
sarl
push
sti
shrb
adc
cwtl
ret
fldt
stc
mov
push
mov
sub
or
subl
pop
mov
in
mov
or
xchg
inc
adc
cmp
xor
and
inc
sbb
daa
push
sub
outsl
adc
aad
cmp
sub
xchg
pop
ja
lcall
sbb
jae
setp
shll
push
arpl
test
and
mov
mov
cmc
leave
sbb
rcrl
mov
out
and
pop
jg
mov
loopne
fstpl
sub
call
dec
stos
push
jne,pt
jb
scas
lcall
into
lea
icebp
xchg
jge
adc
sub
add
xchg
dec
pop
jno
and
lea
xchg
gs
mov
ja
adc
adc
sti
nop
xchg
xchg
shlb
push
cmpsl
es
cld
mov
xor
je
inc
fs
icebp
or
mov
jo
dec
imul
iret
pop
jp
or
xchg
nop
loopne
imul
sbb
not
ds
icebp
mov
jl
cmp
xlat
mov
movups
lods
cld
mov
rep
ret
mov
popa
jbe
pop
insl
sarb
dec
icebp
adc
out
lret
scas
clc
sbb
sub
pop
inc
sbb
out
imul
dec
cmp
pop
hlt
mov
dec
lahf
cmp
xchg
les
subb
jge
inc
push
loope
xchg
mov
mov
xor
add
mov
subb
in
leave
dec
lret
push
bound
mov
loopne
cmp
not
enter
add
mov
stc
mov
mov
inc
rcrl
cmp
pop
movsb
xor
lret
push
das
push
jle
adc
push
sub
ss
out
push
idiv
and
xchg
push
call
cmp
cwtl
jbe
lcall
push
scas
jle
mov
jns
mov
mov
mov
adc
sti
or
jmp
push
fst
mov
imul
stos
clc
push
jg
add
sub
in
enter
jle,pt
adc
imulb
outsb
push
push
repz
cmp
scas
and
fnstcw
xchg
arpl
pop
jmp
cltd
mov
add
mov
mov
dec
je
movsb
dec
dec
xor
xor
imul
pop
sbb
xor
in
das
or
ss
hlt
adc
mov
mov
frstor
movsl
adc
call
push
adc
mov
in
mov
xchg
in
icebp
xchg
lcall
test
rol
sub
in
inc
mov
jns
movsl
xchg
ss
addb
ss
fsubrs
mov
xor
out
mov
testb
pop
dec
sub
xchg
icebp
cmc
jo
sub
inc
mov
lret
push
sbb
repz
xchg
out
lahf
pop
loop
and
popa
lods
out
ret
or
je
add
jmp
bound
jl
leave
inc
cmpsl
pushf
jecxz
jp
sbb
push
jge
and
cmp
jg
pop
ljmp
movsl
repz
scas
dec
mov
adc
sub
cli
arpl
xchg
bswap
push
bound
rcrb
mov
incl
outsl
push
push
imul
pop
and
lcall
popf
ret
pusha
jae
loop
cmp
fistpll
rcrl
sbb
mov
xchg
mov
movsb
loop
int3
testl
fs
icebp
adc
mov
test
cmc
leave
dec
mov
mov
sub
pop
jmp
leave
das
fcoms
mov
jns
pop
stos
insb
cli
mov
jae
sub
fdivrl
push
arpl
fstpl
hlt
loope
inc
pop
scas
xor
mov
pop
shl
xchg
push
mov
pop
cmpb
or
call
je
js
mov
hlt
icebp
pop
das
xchg
pop
movsl
cmp
ret
sbb
fucom
xor
push
lret
dec
fcmovnbe
dec
sub
dec
and
mov
dec
adc
xor
rclb
int
xor
lahf
or
push
mov
xchg
pop
fisttpl
ret
push
fistl
adc
pop
loop
popf
mov
cmc
iret
lret
into
repnz
mov
ret
cli
dec
xor
and
pop
jmp
test
dec
sbb
pop
das
mov
dec
addr16
add
xor
dec
xchg
xor
mov
int3
jle
iret
pop
cmp
ret
test
jae
out
and
mov
cmpxchg
cmp
dec
ja
xchg
bound
cs
mov
push
sub
push
jmp
pop
sbb
fwait
mov
sbb
sbb
push
jns
pcmpeqb
stos
addr16
cltd
icebp
cmp
xchg
cltd
mov
pop
in
std
int
lret
cs
dec
sbb
inc
cwtl
cli
jl
dec
fs
adc
pop
shlb
or
inc
dec
mov
mov
push
push
xchg
mov
sarl
shrb
push
enter
shrl
movl
jg
out
and
sbbl
xorl
rcrb
mov
mov
ds
ja
xchg
fstp
jg
sub
std
lea
ds
or
cmp
test
fsubl
mov
and
inc
inc
test
add
aas
adc
jl
addr16
jmp
fisubl
or
pusha
stos
jns
rolb
push
mov
mov
dec
clc
aas
fnstsw
call
clc
cltd
fldt
xchg
or
pop
xchg
shlb
jmp
mov
lods
in
fidivrs
movsb
xlat
repz
cmp
sbb
push
push
jl
fucomi
mov
fwait
outsb
mul
cmovnp
mov
test
shl
incl
mov
push
aam
or
rcl
imul
cmp
imull
xorb
add
sub
jg
cmpsb
repnz
int3
mov
cli
xchg
xchg
push
jno
imull
int
shll
jmp
repz
hlt
insl
adc
adc
pop
jle
dec
insl
jo
movsb
test
fldl
mov
mov
sub
int
jnp
jg
sub
outsl
les
outsl
push
cmp
sbb
data16
aas
cmpsl
jl
mov
ret
in
mov
jnp
sbb
out
addr16
sub
sub
idivb
jl
push
and
int
inc
rcr
lret
adc
cmpsb
jmp
xlat
pop
cmp
xor
sbb
cmp
sub
inc
in
lret
std
push
aaa
rorb
jb
iret
stos
jp
xor
jne
mov
subb
or
aaa
adc
or
jg
or
rcll
jne
and
popf
sub
mov
push
std
inc
sbb
mov
std
incb
loop
push
jg
fcmovne
mov
jne
pusha
addr16
in
imul
xlat
mov
mov
xor
insb
mov
frstor
sbb
jg
cmpl
jbe
cmp
sub
cmp
and
rcrb
mov
xor
xchg
test
rclb
dec
jbe
or
icebp
jg
jp
fwait
jno
div
ret
dec
call
fs
fstpl
fisubs
xchg
fdivp
scas
or
mov
rcrb
test
or
mov
dec
loopne
test
xor
dec
pop
mov
lods
adc
ljmp
adc
imul
and
lret
mov
icebp
sub
rorb
sub
hlt
popf
inc
pop
mov
fisubs
push
stc
cmp
test
mulb
mov
and
sahf
pusha
icebp
pop
jge
insb
inc
out
lret
adc
outsb
mov
stc
or
subb
push
icebp
shll
icebp
sbb
adc
jl
dec
mov
inc
add
jl
aaa
cli
adcl
jne
mov
or
lahf
lret
icebp
jnp
push
pusha
shll
nop
mov
pop
sarb
xor
mov
sbb
test
call
xor
loopne
iret
add
mov
jnp
repnz
or
roll
loopne
es
test
mov
inc
rorl
ss
cmpsw
jmp
and
cmp
aaa
jo
movsb
inc
lods
pop
arpl
hlt
and
cltd
jle
lret
test
dec
pop
js
and
adc
sti
dec
xchg
test
das
sbb
cmpsl
pop
loopne
inc
cs
cli
cmpsb
add
jb
jp
lcall
incb
mov
pop
movsb
mov
sub
inc
int3
into
aaa
and
cld
das
xor
and
sbb
fwait
sub
sbb
loopne
ret
ror
js
dec
adc
clts
int
sub
adc
or
mov
ret
push
dec
jnp
xchg
push
sub
and
lock
dec
ret
sbb
popf
sub
insb
adc
inc
push
push
es
push
add
xchg
inc
ljmp
push
and
xor
and
mov
shll
adc
mov
sbbl
movb
aas
fistps
pushf
cmp
idiv
fld
xchg
jle
mov
loope
and
ds
mov
in
cwtl
cmp
imul
fstpt
inc
int
hlt
jnp
sti
iret
jns
adc
jg
lds
adc
adc
icebp
arpl
adc
arpl
xor
sti
loop
std
mov
mov
mov
out
dec
sub
mov
xor
rcll
lock
and
mov
pop
stc
sub
xchg
mov
jmp
jnp
shll
int3
jmp
dec
lret
sbb
mov
lret
aas
das
xchg
cmp
or
divb
xchg
and
and
push
orb
inc
out
dec
fists
fsub
in
push
xor
fldt
sti
fnsave
inc
xchg
das
movsb
add
cmpsl
jl
pop
xorb
push
cmc
inc
idivb
iret
push
or
test
push
jp
xor
xor
arpl
jle
rcl
cmp
lcall
ret
ja
push
insb
divl
movsw
xchg
jne
leave
test
enter
jmp
xchg
fs
pop
in
js
sahf
ret
out
mov
lock
sub
xor
mov
jno
shrl
cmpsb
xchg
mov
lcall
rcll
rorl
mov
xlat
fldenv
cmp
dec
sbb
loopne
add
jae
adc
mov
cmp
enter
pushf
ret
mov
cmp
add
sarb
sti
cmc
xchg
mov
mov
fs
aam
adc
cmp
daa
inc
pop
data16
adc
insl
or
lret
pop
sbb
mov
add
clc
xchg
pushf
rcrb
cmp
nop
inc
jp
jmp
adc
cmpb
pop
cmp
xor
push
push
ret
sahf
ljmp
and
test
dec
out
push
or
jg
jnp
loop
loope
mov
int3
pop
imul
loopne
pop
xor
fistl
inc
ja
xchg
mov
mov
int
pop
icebp
dec
mul
add
jnp
rcrl
fildl
js
mov
subl
mov
lods
push
stos
fstl
cmp
mov
fsub
add
mov
jmp
dec
adcl
sbb
jecxz
aas
rcrl
lods
popf
lea
cwtl
xchg
imul
fiadds
jge
xchg
lds
test
movsb
jecxz
sbb
adc
push
mov
mov
clc
rorl
jecxz
sbb
or
xchg
in
xchg
push
lret
jno
sub
mov
add
xor
adc
dec
outsl
add
lahf
jne
pop
inc
fcmovnbe
addl
scas
adc
jnp
add
xchg
jno
fwait
pop
pushf
jnp
test
mov
or
repz
cmp
xor
jmp
or
roll
imul
dec
out
ss
and
cmp
cmpsb
lods
jae
fnsave
push
movsb
pop
jle
int3
pop
lcall
fistl
movsb
sub
push
adc
addb
outsb
movsl
cmp
inc
pop
push
fcmove
inc
and
imul
xchg
sti
mov
xchg
lock
mov
arpl
test
icebp
movsl
push
inc
lret
push
test
scas
jecxz
cmpsl
les
das
loopne
paddsw
or
rcll
int
stos
pop
ss
ss
pushf
jae
adc
push
movsb
add
sbb
dec
pusha
mov
pop
std
or
cmp
add
inc
scas
shrb
dec
ljmp
cmp
adc
ljmp
loope
pop
or
jmp
cmp
fsubrl
push
inc
loope
inc
call
lret
adc
leave
mov
sbb
pop
sub
ret
mov
inc
iret
dec
mov
adc
inc
mov
lods
pop
mov
roll
nop
sub
nop
jno
jecxz
ja
xor
popf
xchg
daa
mov
fcmovu
fidivl
cmp
in
mov
sbb
negl
out
jnp
pop
mov
mov
aad
mov
pop
push
jl
mov
push
fwait
pcmpgtd
test
jbe
out
out
cwtl
dec
mov
pop
dec
mov
pusha
into
ret
dec
nop
sub
adc
jnp
adc
and
push
xor
sahf
shr
xor
mov
add
mov
or
aas
enter
mov
ja
jbe
push
cmp
aad
add
xchg
mov
scas
mov
push
pop
movsb
inc
aaa
add
gs
pop
ss
movsb
ret
pop
repnz
dec
pop
stos
repz
mov
scas
jo
and
or
je
iret
or
push
lock
repz
iret
xor
pop
inc
xchg
test
and
sub
movsb
and
lods
rorb
xchg
cmpsb
pop
jge
int
lea
mov
xor
sahf
mov
push
sbb
pop
lods
push
cmp
movsb
mov
jecxz
cmp
aas
aas
icebp
xchg
fidivs
pop
fldt
xchg
cli
int3
in
mov
gs
adc
or
push
test
clc
dec
or
fiadds
mov
fsts
add
dec
pushf
sub
sbb
and
push
xor
inc
divb
add
jge
push
jnp
int
movsb
pop
push
mov
xor
das
cwtl
arpl
rorb
sub
arpl
pop
inc
pop
mov
gs
es
popf
mov
fucom
dec
sbb
fwait
mov
cmc
stc
jl
enter
out
addr16
ret
mov
iret
xchg
sahf
inc
mov
neg
data16
lds
mov
into
ds
xchg
sub
jge
cmc
sbb
outsb
mov
pop
fwait
pop
lret
ss
cmp
dec
int3
sub
add
cmp
push
sub
and
and
sub
or
cmp
ss
mov
mov
fucom
mov
cltd
xlat
aaa
notb
in
addr16
ljmp
bound
aaa
mov
jb
mov
cs
popf
cmp
test
or
js
mov
fidivrs
dec
out
push
das
inc
xor
and
add
outsl
or
js
sbb
mov
add
mov
inc
xor
push
dec
icebp
push
test
mov
arpl
push
notb
je
sti
push
imul
mov
lds
lret
xlat
lods
iret
mov
stc
mov
and
mov
xlat
cmp
mov
lahf
jp
mov
imul
jns
in
push
cmc
xchg
cmpsb
out
push
cltd
inc
or
enter
adc
xchg
mov
jno
xlat
xchg
xchg
stos
dec
ljmp
scas
jge
jb
or
xor
lock
and
dec
sub
sub
cmp
mov
add
mov
cmp
test
cwtl
pop
mov
pop
push
mov
test
jnp
imul
outsb
mov
mov
loopne
add
test
js
sbb
mov
jno
lods
les
push
add
dec
lods
out
popf
xchg
mov
out
or
les
cmp
xor
push
mov
add
mov
call
cld
into
loop
mov
jl
mov
lods
jp
sub
push
sbb
movsb
call
mov
push
rcrb
mov
xor
lock
push
sub
push
sarb
lea
or
dec
pop
and
mov
sub
xor
push
inc
adc
inc
xchg
mov
pop
pop
test
pop
push
ror
xor
pop
out
xchg
dec
adc
fistps
mov
sahf
enter
ret
ja
cmp
test
jnp
popf
jb
push
pop
js
mov
dec
lcall
sbb
inc
cmp
or
dec
inc
insb
dec
sti
icebp
jno
imul
iret
loopne
jp
cmp
in
jle
adc
mov
push
mov
jecxz
jecxz
into
test
pop
mov
es
repz
mov
repz
push
xor
iret
pusha
cmp
push
insl
jecxz
jo
xor
mov
in
add
popa
scas
dec
pop
pusha
imul
dec
test
sub
push
aaa
sbb
in
sbb
fcoml
push
mov
and
enter
cmpsl
stos
arpl
push
dec
add
jne
cmp
test
push
mov
js
ret
inc
or
roll
jge
cmp
jno
pop
add
jmp
cmc
mov
out
xchg
dec
dec
push
mov
dec
fcmovb
dec
aad
pop
push
outsl
lds
jle
inc
movsl
push
mov
outsb
out
das
fmull
out
movsb
insl
popf
or
jno
fsubs
push
fists
mov
add
je
inc
imul
les
dec
push
jp
lds
stos
jle
mov
mov
or
std
outsl
addr16
insl
jnp
sahf
insl
imul
xchg
jo
mov
xchg
mov
sbb
mov
mov
jo
sbb
jl
sahf
in
adc
aas
sahf
mov
loopne
adc
movsbw
call
movsl
cmpsl
loop
jmp
fstl
jecxz
das
pop
push
sub
xor
jg
add
imul
bnd
inc
jo
mov
insl
in
dec
mov
inc
scas
mov
mov
adc
inc
cmp
cld
sub
int3
movb
leave
xchg
mov
sbb
mov
jp
dec
repnz
inc
test
add
xor
test
fs
add
out
negl
dec
loope
sbb
sar
je
xor
pop
or
jns
adc
stos
pop
out
hlt
and
arpl
jle
cmp
cmp
dec
fcoms
cltd
call
xor
mov
outsl
test
mov
mov
aas
mov
mov
cltd
fs
ja
xchg
imul
mov
popa
movsb
jb
out
sbb
cmp
inc
mov
and
xor
rcrl
cmp
out
bound
fisttpll
lret
push
sbb
xchg
mov
in
insl
pop
ret
movsl
repz
push
sbbb
in
pop
push
sbb
xchg
or
aam
inc
adc
xchg
push
fstl
or
inc
push
mov
mov
js
clc
jae
mov
mov
cli
or
push
inc
icebp
add
scas
add
lret
ret
mov
insl
push
stos
sub
push
xchg
or
sti
inc
dec
movsl
roll
fs
lea
pop
cmp
scas
pop
aaa
sbb
pop
cmp
xor
xchg
fiadds
out
ror
mov
lock
stos
mov
inc
inc
xor
xchg
sub
inc
sarb
xchg
sub
xor
lods
inc
nop
jns
dec
push
mov
push
mov
aaa
stos
pop
ret
mov
ds
sti
scas
inc
dec
testl
or
add
xchg
mov
sahf
push
jg
adc
enter
mov
mulb
xlat
add
jl
fistl
pop
inc
mov
pop
lahf
mov
popa
fldt
dec
jp
mov
ret
lret
or
lcall
and
adc
repnz
xchg
mov
test
repnz
push
ja
decl
in
jl
or
pop
cmp
lret
dec
sti
mov
icebp
xchg
arpl
push
loopne
xchg
and
out
jb
icebp
or
cmp
daa
xchg
sbb
or
jmp
sub
addr16
dec
jl
aas
jle
dec
jmp
dec
repnz
sub
test
adc
ss
dec
or
and
jb
pop
inc
push
data16
int
jne
scas
into
sbb
lods
outsb
inc
or
cld
jge
cmpsb
inc
addr16
popa
enter
sbb
lock
mov
jo
xor
push
out
cli
add
les
mov
in
push
icebp
repnz
popa
fcomi
ret
mov
call
insb
sahf
mov
popf
test
testb
fistl
icebp
out
ret
ss
hlt
adc
cli
jl
pop
sbb
cmpl
icebp
test
cmp
xchg
push
ljmp
rcrb
sbb
jb
shlb
cmp
dec
call
int3
add
sbb
lock
lods
jl
pop
sub
aas
jne,pn
ficoms
stos
pop
pop
enter
inc
insl
adc
pusha
xchg
jo
sbb
jmp
sub
mov
mov
dec
cmp
jge
sbb
ret
xchg
ret
adc
sbb
mov
jle
shrl
cmpsb
cmpb
gs
out
inc
sub
inc
or
adc
stos
mov
stos
hlt
out
mov
je
jo
jmp
push
ficoml
sub
xor
push
in
movsb
ljmp
inc
or
scas
sub
loope
cmpsb
outsl
pop
jns,pn
or
adc
pop
insl
xchg
pop
aaa
cmp
or
push
ljmp
clc
ret
push
xor
je
stos
dec
inc
push
inc
das
leave
sub
jl
pop
fmuls
pop
pusha
push
lahf
enter
sbb
mov
or
jae
into
inc
cwtl
or
xlat
cwtl
cmp
shll
flds
pop
fstpl
or
jne
insl
ja
aad
or
xor
jne
push
xor
jno
popl
inc
stos
movsl
or
aad
test
cmpsl
jge
xchg
fidivrs
or
mov
lock
shll
aaa
repnz
dec
pusha
lcall
mov
clc
cmpsb
adc
jp
hlt
mov
add
clc
dec
popf
inc
cmpsb
lret
pop
cwtl
in
xchg
mov
inc
cmpsl
sbb
out
sub
add
xchg
ret
and
pop
sub
in
cmp
frstor
mov
xchg
push
in
sbb
sub
ljmp
stos
xchg
push
push
test
push
icebp
and
inc
pop
dec
pushf
push
xor
add
mov
inc
dec
les
test
inc
xor
xor
daa
jno
dec
mov
jns
enter
pop
rorb
sbb
xchg
lahf
cmpsb
inc
jge
mov
fwait
xchg
das
xchg
cltd
das
js
jg
out
fcmovne
int3
call
and
or
pop
repnz
sbb
sub
imul
cmp
arpl
push
mov
xchg
xor
add
inc
mov
mov
ficoml
sub
lods
or
mov
and
sbb
sub
inc
jp
xor
aam
add
paddd
sub
arpl
data16
lock
std
loop
push
fnsave
stos
test
ret
jns
test
pop
xchg
ret
push
cmp
mov
mov
in
mov
adc
data16
movsl
lods
enter
xor
movsl
loope
shl
orb
das
inc
mov
stc
and
pop
add
xchg
fbstp
imul
push
mov
sub
repnz
dec
mov
je
adc
shlb
xlat
cmovs
outsb
mov
out
cmp
inc
or
loop
ja
jae
and
mov
cld
insl
or
jae
arpl
in
sub
dec
cs
scas
outsb
mov
movsb
adcb
push
pop
mov
dec
mov
xchg
pop
add
lahf
out
add
sbb
lret
pop
imul
mov
pop
cwtl
mov
cli
xor
shl
xchg
data16
add
or
enter
jmp
clc
pop
fwait
ljmp
cmp
inc
cmpl
fistps
idiv
add
jnp
pop
cmp
push
clc
addr16
sbb
scas
mov
hlt
clc
add
lret
jl
push
dec
loope
inc
adcl
cwtl
inc
and
shrl
mov
xor
into
movl
inc
add
das
xor
mov
cmp
data16
mov
into
push
push
stc
aas
lods
outsb
xchg
adc
jge
dec
push
push
xor
lods
fwait
add
jecxz
loopne
and
cmp
out
enter
sub
cli
xchg
pop
insl
sub
push
imul
lea
add
repz
mov
adc
out
std
inc
inc
inc
js
mov
mov
scas
xchg
dec
dec
loope
pop
push
in
mov
adc
test
dec
inc
into
mov
arpl
xchg
or
icebp
and
mov
jmp
mov
cmp
jmp
xchg
sarl
or
addr16
enter
jle
cmp
out
push
mov
aam
jg
adc
xor
sti
movsl
cmpb
pop
inc
ljmp
stc
test
lods
stc
pop
xchg
in
lcall
cmp
sub
in
cmp
mov
xchg
mov
cmp
repz
sahf
ficompl
xchg
jb
push
stc
push
and
jae
cmpsl
cltd
sbb
cmp
pop
loope
adc
add
xchg
jp
push
icebp
pusha
lock
cltd
mov
adc
push
cmc
outsl
call
mov
pop
mov
stc
xor
add
stc
mov
or
cmp
call
sbb
testb
ficompl
cmp
out
pop
lods
push
les
nop
jae
dec
cmp
sbb
test
inc
rcll
or
les
imul
cld
mov
xor
cmp
in
aaa
inc
lods
nop
cs
repz
gs
insl
sbb
jns
cmp
std
cmp
and
jnp
mov
cmp
push
fidivs
dec
lods
fs
jecxz
xor
inc
addr16
je
mov
push
movsb
cmpsb
mov
push
xlat
and
cmp
mov
pop
push
xchg
stc
ja
rcll
adc
xor
nop
insb
dec
sub
jo,pt
pop
jb
xchg
loope
jbe
push
jmp
mov
pushf
movsb
sti
pop
sti
xor
mov
jb
xlat
or
scas
mov
xor
mov
mov
loopne
dec
jne
inc
sbb
insl
xsha1
bound
cmpsb
iret
mov
enter
push
inc
and
test
mov
push
dec
cmp
test
daa
out
push
xlat
repnz
pop
imul
jae
repz
jne
cmpsl
pushf
dec
sti
enter
in
aaa
aaa
mov
nop
push
mov
lds
aam
fwait
jae
jno
decb
jae
call
push
mov
push
fs
or
and
jmp
imul
xchg
xchg
adc
leave
mov
outsb
repz
pop
mov
jg
movsb
ljmp
cmp
xor
pusha
roll
shl
les
inc
push
aad
in
imul
dec
loop
adc
inc
push
xor
pop
pop
aad
or
mov
shrl
in
js
mov
nop
push
dec
rcrb
arpl
jg
add
push
push
push
jmp
sub
dec
shl
dec
dec
out
fcomps
out
stos
dec
mov
sub
mov
int3
jno
jg
sub
pusha
mov
insb
shl
sub
xor
mov
sub
mov
out
in
scas
scas
pop
enter
dec
add
call
cli
mov
fists
or
push
push
adcb
xlat
leave
fwait
cwtl
int
fcmovne
sbb
pop
or
rorb
outsb
or
lock
loopne
cs
popf
ret
enter
stos
int3
xchg
mov
jb
test
pop
movsb
cmp
out
js
out
std
fs
inc
insl
movsb
loopne
aas
mov
adc
xchg
lds
mov
push
push
push
jl
pop
push
pop
pop
out
in
hlt
push
mov
int
stos
or
ljmp
insb
outsl
mov
adc
aas
stos
outsb
inc
into
xchg
push
add
sub
es
sub
xchg
xor
mov
cld
mov
stc
or
sbb
xor
mov
pop
and
out
mov
shrl
jno
cwtl
mov
leave
aam
jmp
cmpsb
sbb
jl
lret
aaa
rcr
lcall
xor
jbe
push
fimuls
push
cmc
ljmp
mov
subb
mov
lret
or
pusha
mov
push
inc
or
cmp
push
cmc
repz
mov
das
push
fmuls
inc
mov
fsub
jge
or
fnstsw
ds
aad
outsl
dec
pop
sub
loope
stos
test
xchg
imul
dec
dec
es
inc
mov
stos
or
test
sahf
cld
ja
jno
ljmp
xchg
roll
lcall
loope
cmp
divl
mov
mov
mov
jnp
xor
mov
insl
stos
sbb
sti
enter
cltd
xchg
js
fidivs
fnstsw
push
outsb
push
daa
pusha
jne
scas
and
aad
sub
sbb
imul
xlat
loop
sbb
loopne
outsb
pmuludq
cmp
repz
jmp
sarl
lcall
js
sbb
pop
popa
adc
inc
repnz
imul
inc
fwait
or
das
cmp
clc
daa
sub
cs
std
jne
mov
dec
hlt
leave
pusha
rcr
pop
mov
pop
imul
les
jne
lret
aad
pop
sub
out
push
and
and
clc
adc
fcomi
shrb
cmp
iret
stos
mov
mov
daa
out
sbb
and
pop
bound
pop
scas
jae
pop
sbb
mov
mov
or
xor
cmp
loopne
sahf
or
pop
div
inc
mov
fwait
mov
mov
mov
loop
jle
xchg
movsl
ds
mov
mov
je
hlt
lret
mov
xor
cs
push
and
xchg
and
mov
popa
test
movsb
add
js
cmpsl
pop
sbb
insb
jl
cwtl
and
dec
mov
das
mov
mov
pop
dec
pushf
fistps
mov
inc
lea
frstor
nop
push
and
sbb
lret
or
pusha
leave
push
ljmp
push
das
xchg
enter
xchg
xchg
cmc
xchg
pop
scas
jae
les
enter
sub
mov
pop
hlt
stos
lahf
add
mov
dec
nop
add
pop
jo
cmp
inc
mov
pop
mov
dec
call
pop
scas
jle
mov
pop
pop
xor
jg
in
jmp
dec
push
insb
adc
push
inc
loope
inc
lea
nop
jp
sti
mov
dec
jae
jns
rcl
mov
xor
add
popa
and
dec
imul
cmpsb
xchg
lret
hlt
mov
nop
xchg
pusha
xchg
push
fidivl
inc
fisttpll
jp
rep
lret
test
insl
popl
pop
lcall
push
xor
or
into
cmp
movsb
push
into
jb
daa
lret
and
fnsave
sub
inc
insl
int3
and
fisubrs
fcmovne
movsb
push
popf
push
mov
je
adc
fwait
sbb
lods
call
in
mov
sub
xchg
mov
mov
lds
cwtl
adc
mov
mov
repz
in
in
jecxz
cmp
fisttpll
outsb
or
push
aas
mov
jle
int3
fmuls
and
pop
imul
rorl
ds
add
nop
dec
mov
pop
inc
or
pop
lcall
push
push
inc
in
add
lret
mov
cmc
jge
cmp
and
mov
aad
rolb
dec
sbb
inc
lahf
cmpsb
stc
data16
mov
jge
std
sbb
cmc
enter
lcall
add
pop
xchg
lea
lahf
nop
aam
arpl
push
push
sar
or
push
int
sti
adc
sub
je
xor
test
movsb
std
xchg
ret
xchg
xchg
mov
sahf
aad
fiadds
jnp
arpl
or
cmp
jb
in
stos
stc
rcl
scas
outsl
iret
fldenv
mov
mov
dec
xor
cmc
insb
shr
sbb
push
inc
and
ja
movsl
enter
dec
roll
jbe
jbe
and
outsb
mov
outsl
enter
cltd
jge
lock
shl
adcl
xor
mov
add
cmp
lds
andl
ficoml
pop
inc
adc
cmc
mov
scas
jecxz
add
insl
and
ret
push
lock
jae
ret
mov
or
dec
mov
push
lret
mov
scas
scas
dec
hlt
test
into
test
out
out
jge
cwtl
mov
cmp
movsl
sbb
pusha
jb
add
cmp
inc
leave
arpl
push
ret
rorb
sbbl
xorl
hlt
scas
push
and
test
jmp
xlat
mov
inc
loopne
jmp
mov
popa
adc
fsubrp
sub
loop
push
scas
lds
pop
and
leave
mov
lahf
mov
fisttps
ret
sbb
adc
mov
pop
sub
cmc
pusha
jmp
stos
dec
pushf
dec
cmp
add
cmpb
xor
fwait
and
pop
lahf
in
and
aad
mov
lea
daa
data16
cwtl
leave
push
cmpsb
xchg
aam
test
sub
jmp
out
sub
sub
jae
push
rorb
sti
or
mov
dec
add
mov
mov
push
cmp
out
xchg
pop
xor
ja
jmp
mov
adc
or
iret
jmp
mov
xchg
enter
pop
ss
pop
cmp
sub
pop
mov
or
and
fnstsw
iret
pop
pop
jg
mov
adc
xchg
outsb
aam
lods
xchg
popa
inc
mov
mov
jg
mov
mov
les
adc
sbb
out
cmp
faddp
repz
xchg
pop
imul
cmpsb
repnz
rcll
lcall
jg
jae
sbb
shr
aam
mov
fisubs
mov
fstl
ret
les
push
pop
mov
scas
pop
xor
xchg
sbb
mov
out
je
cmp
lret
xchg
adc
xor
push
lock
cmp
rol
pop
adc
jo
loop
mov
push
loopne
inc
bnd
test
repz
or
mov
pop
push
into
and
pop
jae
or
dec
jge
fisttpll
sub
sbb
movsb
movsb
aaa
push
mov
and
dec
adc
pop
pop
or
les
fidivl
sbb
pop
push
pop
hlt
push
jbe
sub
testl
mov
cmp
mov
push
lcall
lods
xchg
and
call
cmp
add
out
xchg
es
faddl
insl
mov
pushf
sarl
loopne
xor
lds
mov
pop
mov
daa
cmp
jge
imul
jns
cli
mov
xchg
or
cs
hlt
lods
xchg
adc
mul
scas
inc
mov
sub
push
sbb
xlat
adc
jg
or
js
in
push
mov
push
push
xor
add
ljmp
idiv
xchg
xchg
stos
push
xchg
or
mov
push
xchg
outsb
jle
repnz
test
push
push
mov
fidivrl
imul
push
sbb
pop
cmpl
or
popa
std
lock
add
bound
stos
cmp
cmp
repnz
mov
vandps
mov
mov
lret
arpl
or
push
lods
js
push
jmp
sub
push
cmp
jae
stc
ja
and
mov
int3
cs
push
mov
add
cltd
pusha
ds
adc
dec
fldenv
in
cmp
inc
imul
jg
fisubrs
mov
jae
add
xchg
js
xchg
and
jo
lahf
jbe
push
jns
lods
mov
roll
pop
sbb
xlat
inc
scas
push
loope
mov
sub
in
mov
cmp
in
scas
and
jle
pop
mov
xchg
sbb
shll
adc
adc
push
dec
test
mov
lret
mov
pop
ret
sahf
in
notl
xor
xchg
adc
push
addr16
mov
cmp
jns
xor
xor
in
fdivr
mov
push
mov
adc
push
xchg
pop
mov
dec
fsubrp
inc
and
insl
pop
fwait
inc
cmp
addl
cwtl
inc
jo
sub
jo
mov
cmp
roll
jne
xchg
movb
cmpsb
cltd
pop
aaa
out
repnz
or
icebp
div
cmp
insb
lret
pop
mov
es
fwait
rolb
and
outsb
cmp
cmp
fs
inc
push
clc
push
push
sbb
push
xor
mov
ret
mov
xlat
cmp
jno
mov
jne
fcmovnu
mov
mov
push
add
sbb
bound
shl
jne
das
outsl
test
fldenv
test
mov
jg
out
jbe
movsl
test
push
jmp
out
mov
sbb
in
xor
imul
loop
and
push
mov
mov
dec
adc
push
jp
ficomps
notl
ds
aam
push
test
mov
stos
sbb
mov
ficompl
xchg
in
shrb
or
xor
cmpsl
ffree
jge
jo
mov
sub
or
lcall
and
xchg
pop
dec
sahf
cltd
push
das
adc
xor
jle
push
insl
mov
and
lods
mov
mov
or
or
push
dec
fcompl
mov
jp
add
sbb
pushf
sub
jg
lds
loopne
push
or
in
and
mov
out
add
add
jnp
cltd
jl
jnp
outsl
fidivrs
leave
rcrb
jne
gs
push
loope
inc
cmp
push
adc
add
sahf
pop
loop
sub
xlat
xlat
or
inc
in
sbb
xchg
fdivp
xchg
bound
mov
int
pop
aad
xchg
mov
mov
pusha
push
stos
pop
mov
and
lret
push
ljmp
mov
push
lcall
dec
iret
dec
sahf
xchg
push
mov
jmp
fisttps
leave
mov
jmp
es
jno
push
out
les
stos
into
and
jle
sub
clc
lods
xchg
and
add
fisubl
and
dec
repz
testb
sbbl
push
dec
int
pop
std
icebp
addr16
cmpsb
xchg
push
adc
push
sub
pop
stos
mov
loope
nop
fldl
mov
ds
jo
xchg
lea
dec
pop
jle
mov
into
jnp
jno
jb
xchg
test
add
test
out
out
mov
pop
adc
xor
cli
ret
sti
jno
outsb
sbb
sbbl
rorl
test
xor
adc
scas
loop
movsl
pop
clc
sbb
std
or
cld
jnp
xlat
mov
dec
sub
push
cmpsl
xchg
and
andb
jle
push
sub
mov
jnp
out
test
frstor
nop
add
push
movsb
dec
imul
add
imul
lods
cmc
sbb
gs
in
jg
dec
shll
out
movb
or
shrl
push
jo
les
ret
xor
insb
sbb
daa
das
imul
icebp
or
push
outsb
sarl
fmul
leave
loope
cli
mov
and
mov
iret
out
ljmp
inc
sar
out
adc
invlpg
shlb
jno
push
movsb
add
mov
ds
xchg
movsl
sbb
cmp
mov
mov
or
imul
jnp
xchg
lret
cltd
dec
and
or
jns
scas
ds
or
adc
stos
push
mul
jg
dec
mov
push
lret
or
xchg
daa
jecxz
imulb
addr16
xchg
push
or
jg
add
xor
jmp
xchg
pop
or
push
int3
sti
ficoms
cld
or
xlat
movsb
stos
xor
jne
pusha
mov
insb
push
pop
mov
stos
jae
push
enter
sbb
stos
repnz
andl
lock
xchg
mov
mov
repz
movsb
push
call
mov
pop
and
sbb
outsb
cmp
inc
fcompl
dec
into
mov
inc
mov
ret
mov
or
push
mov
into
fldt
sbb
xchg
cmp
adc
sbb
adc
out
lret
nop
adc
add
xorb
pushf
into
inc
xchg
shrb
outsl
jge
mov
ret
sarl
inc
and
cld
out
adc
loop
out
push
sub
fldt
pop
mov
fldt
mov
cmp
mov
test
or
and
jb
ljmp
xor
xlat
clc
or
mov
lods
lret
or
cmp
icebp
add
xor
fbstp
jmp
popf
adc
add
jo
sbb
push
sbbl
mov
adc
inc
cwtl
notb
or
inc
cmpsb
pop
scas
push
xchg
mov
inc
sbb
and
add
fninit
insb
mov
push
les
add
pop
sti
add
dec
add
fcoml
adc
mov
lret
test
fadds
cmp
xor
inc
subb
pop
mov
cltd
sti
push
mov
scas
cmpsb
loope
test
mov
xor
adc
jmp
add
js
xor
loopne
or
dec
shll
mov
lret
lcall
jle
lds
ds
stc
adc
cmp
repnz
dec
jno
iret
scas
mov
sub
sti
jp
mov
and
bound
mov
pushf
mov
test
shlb
sub
and
xchg
mov
inc
ret
mov
mov
xor
ret
push
gs
movsl
mov
cmp
mov
shll
push
push
imul
cmp
adc
jb
jnp
movsb
ds
adc
mull
or
or
mov
mov
sub
and
arpl
or
mov
push
ror
sbb
test
jae
icebp
mov
xchg
hlt
outsb
lahf
xor
dec
pop
andb
and
cmp
pop
fwait
inc
sahf
int
pusha
rorl
sub
cli
adc
or
push
xchg
scas
xchg
incb
pop
out
add
jae
shrl
test
inc
mov
sub
test
daa
or
xchg
adc
push
inc
adc
add
sahf
dec
xlat
xor
cmp
movsl
sub
fisttpll
push
mov
iret
aas
lret
in
push
dec
mov
adc
repnz
and
repz
loope
pop
idiv
fs
pop
xor
sub
push
cmp
fidivl
pushf
sbb
mov
loopne
cmp
pushf
call
xor
ljmp
adc
mov
or
out
and
mov
icebp
add
shl
jne
outsb
mov
sbb
add
cmpsl
push
aas
repnz
dec
cmp
pop
cltd
push
pop
hlt
out
cmc
pop
mov
mov
cld
push
sbb
cltd
enter
xor
icebp
loop
jmp
test
add
rclb
push
pop
mov
push
daa
cmpsl
outsl
push
jge
cmp
jl
int3
dec
fwait
or
mov
jge
stos
and
adc
xchg
cmp
jg
mov
pop
mov
mov
addb
sub
cli
sub
ficoms
xchg
inc
fcoml
out
mov
and
push
jl
dec
push
leave
inc
shrb
fwait
dec
mov
ret
mov
mov
push
dec
sarl
stos
test
add
movsb
xor
push
pop
mov
icebp
push
rcl
inc
jle
fldl
nop
jl
mov
jne
jmp
loop
popa
dec
popf
rcrl
cmpsl
dec
jmp
add
mov
repz
sbb
cmpsl
es
pop
jb
out
hlt
cmp
lock
and
xchg
cmp
out
mov
stos
leave
shrl
ficoml
add
je
xor
inc
pop
and
test
push
pop
fisubrl
lret
std
int
loope
cmc
xor
iret
mov
scas
fiaddl
movsb
popa
jae
inc
fsub
dec
in
add
sub
fmul
push
sub
adc
ss
clc
call
and
cmp
std
inc
mov
mov
jo
add
jae
imul
mov
add
jl
jnp
subb
mov
mov
push
dec
mov
dec
push
aaa
repnz
jae
sbbl
xchg
cmp
jp
jb
arpl
ljmp
push
mov
faddl
gs
mov
push
mov
enter
ficoms
stc
xor
adc
xchg
xlat
lods
mov
dec
sbb
test
jecxz
add
cld
add
jp
ss
xor
shll
call
jl
dec
push
inc
cs
inc
pushl
xchg
adc
inc
pushf
test
cli
mov
enter
sahf
xchg
daa
sub
popf
push
jb
mov
xchg
add
jno
inc
shlb
lahf
adc
test
sub
xor
repz
fistpl
stos
outsb
cmp
fistpl
sbb
ds
test
movl
outsl
xor
repz
int
pop
retw
ja
jb
mov
icebp
push
push
and
xor
sbb
push
loope
pop
mov
iret
dec
jge
sub
scas
in
mov
roll
cmp
add
push
pop
mov
cmp
stos
pushf
push
fcmovbe
aad
scas
test
leave
imul
jl
sbb
xchg
pop
mov
lods
jmp
xchg
stc
test
in
psrld
fstpt
in
sub
aam
xlat
xor
add
push
jp
shrl
pop
adc
sahf
rolb
inc
xchg
mov
adc
adc
cwtl
call
das
xor
fistpl
fmull
inc
xchg
mov
mov
js
xor
loope
mov
mov
xchg
adc
inc
shrl
repz
ds
mov
lcall
fwait
movsb
aaa
mov
pusha
andb
fimull
push
adc
adc
fs
mov
inc
mov
inc
add
shlb
test
sahf
adc
fwait
mov
push
jne
jmp
pop
mov
loope
adc
xor
add
andb
or
pop
hlt
jbe
jecxz
fistpl
aaa
hlt
stos
fwait
xchg
insb
stos
imul
sub
lock
gs
push
outsb
mov
xlat
mov
mov
mov
dec
imul
jmp
push
fisttpl
xchg
testl
pop
xchg
es
or
jl
cmp
or
sti
mov
das
or
push
xor
pop
mov
dec
xor
mov
mov
jb
mov
mov
rcrl
lcall
and
push
push
jno
addps
sbb
mov
int3
mov
movsl
jmp
enter
cmpsl
shl
and
fdivs
jb
pop
cmpsb
and
out
pushf
shll
jno
xor
jbe
and
dec
scas
push
and
push
scas
sarb
call
add
jnp
stc
adc
shl
jle
pop
and
out
push
or
pop
lret
ret
repnz
out
mov
mov
imul
pop
ficompl
inc
and
xor
std
nop
jbe
adc
pop
sub
jecxz
sbb
fdivrl
repz
cmpsb
mov
push
jb
jnp
adc
sub
aam
cmpsb
mov
pop
test
pop
sbb
push
repnz
cs
pop
stos
popl
lods
repz
mov
loope
adc
dec
ss
test
push
jp
push
scas
jp
add
push
fistpll
mov
je
add
pop
imul
inc
aam
and
or
pop
xor
das
inc
cmpsb
jp
paddb
insl
loop
xlat
mov
adc
dec
scas
adc
mov
add
mov
stc
fwait
enter
std
cli
push
or
mov
inc
xchg
xchg
jp
push
cmpsl
xchg
lret
mov
ja,pn
mov
cmp
inc
inc
test
xchg
adc
push
pusha
test
or
lcall
mov
adc
jp
test
inc
push
outsl
pop
jne
xchg
mov
lret
add
sahf
xor
push
sti
popa
adc
fcoms
rorb
add
paddusb
mov
imul
fs
mov
mov
jl
jnp
movsl
icebp
pop
xor
pusha
cmpsl
mov
sub
inc
adc
loop
outsb
shrd
lds
shr
aaa
stos
mov
push
lret
add
popa
loopne
popf
xchg
ret
int3
xchg
stos
and
into
xchg
testl
mov
pusha
lock
xchg
lods
cmp
daa
addr16
lahf
cmp
pop
loopne
push
adc
gs
jnp
xchg
jmp
pop
movsl
insb
inc
sbb
test
xor
xchg
jb
inc
dec
cmp
mov
dec
insb
in
mov
and
inc
outsb
stos
add
imul
adc
bound
jp
cld
adc
mov
imul
cmp
push
adc
inc
icebp
and
incb
dec
aad
mov
test
cmp
clc
ds
adc
pop
ljmp
shrl
sub
fisttps
arpl
cmp
fcompl
ret
loopne
lahf
mov
sbb
mov
cs
xor
or
xchg
add
cli
mov
fstpt
push
test
nop
sbb
pop
cmp
push
aaa
in
es
push
xor
scas
ss
ffree
lods
mov
sar
into
int
les
xor
test
sub
mov
outsb
movsb
xchg
mov
xlat
pusha
and
stc
mov
cmp
jo
inc
mov
pop
push
push
jecxz
divb
mov
mov
and
popf
jne
or
push
pop
inc
and
jne
jo
js
aas
in
mov
loop
cltd
cmp
rolb
mov
jnp
or
stos
bound
loope
mov
dec
pop
jns
out
subb
mov
mov
std
mov
jle
and
sub
inc
pushf
repnz
test
pop
xchg
mov
dec
call
mov
mov
xchg
ja
fldl
xchg
jg
sti
pop
aas
in
add
dec
dec
push
aad
pop
or
xchg
mov
xchg
dec
add
jns
and
inc
fnstcw
cmp
stos
xor
test
mov
jno
xlat
add
or
repz
sub
rep
or
jnp
sbb
adc
or
ss
idivb
jo
xor
jb
adc
stos
jl
mov
incl
push
mov
repz
fwait
add
inc
clc
js
pop
fisubrl
xlat
inc
mov
and
inc
scas
and
sub
mov
in
loop
push
int3
fisubl
push
mov
dec
mov
outsb
loopne
arpl
and
cmp
fstpt
and
mov
sbb
jp
int3
lods
or
bound
pop
mov
fmul
add
test
xor
inc
arpl
imul
jbe
stos
inc
jmp
xchg
pushf
or
outsb
push
jbe
pusha
push
and
aam
add
xchg
int
jmp
out
sub
adc
dec
dec
decl
sub
loope
adc
aam
pushw
sahf
mov
push
rol
mov
popa
push
xchg
mov
test
mov
test
mov
imul
iret
les
rcrl
push
es
jg
test
insb
bound
pop
mov
out
push
addr16
mov
jbe
xor
xchg
mov
sahf
dec
mov
aad
push
jbe
lcall
sbb
sbb
les
subl
mov
fwait
add
ja
push
mov
stos
loop
add
sub
xor
add
pop
adc
fnstsw
cmpsb
daa
cmpsl
push
mov
cmp
or
popa
je
test
mov
fstp
sbb
cmp
mov
xchg
inc
sahf
std
xor
mov
ljmp
nop
mov
shr
mov
mov
imul
push
jno
call
mov
lods
cmp
inc
or
adc
ficoms
testl
or
cmpsl
mov
out
jns
and
push
jl
add
xlat
ret
jno
mov
xor
mov
lods
test
testl
mov
loopne
fwait
mov
push
sbb
pop
mov
hlt
call
xchg
repnz
in
jg
sbb
imul
mov
mov
xor
shl
rcll
testb
xor
inc
mov
inc
les
dec
out
jge
inc
cmc
push
es
and
ja
add
push
sub
add
lods
xchg
outsb
icebp
ficomps
inc
iret
repz
ret
test
sbb
cmpsb
xorl
push
xor
lcall
add
aam
xchg
cltd
mov
inc
pop
and
lahf
fistpl
add
rolb
adc
test
mov
out
fisttpl
mov
cltd
jns
mov
lds
push
arpl
mov
adc
jge
xlat
arpl
mov
jnp
sub
jb
or
cmp
mov
fucom
pop
bound
pop
sub
or
and
mov
mov
push
push
inc
outsb
adc
fisubrl
popf
cmp
fstl
sub
xor
xor
insb
xchg
out
jg
cld
cmp
jbe
xor
cmp
mov
dec
pop
sti
cmp
mov
daa
push
ret
sbb
adc
loopne
pop
mov
imul
fdivp
cmpsl
jns
sub
jb
cld
inc
adc
xlat
into
mov
pop
addr16
test
cmp
inc
xor
add
push
cmp
push
js
sahf
xchg
mov
add
outsl
fdiv
fsubs
das
push
add
pop
dec
adc
dec
sub
sbb
mov
xor
push
out
pusha
and
mov
outsb
fwait
jae
lods
inc
mov
pop
mov
mov
loope
sbb
dec
mov
mov
pop
jmp
ret
mov
shlb
push
cltd
xchg
cld
stos
in
adc
rclb
or
sub
pop
or
ret
or
lret
jecxz
xchg
adc
fildll
sbb
push
mov
cmp
xchg
and
inc
pop
jl
cld
dec
rcr
xchg
stos
mov
std
insb
jp
insb
cwtl
scas
sub
or
pop
roll
and
jmp
cmpsl
sub
mov
or
sti
sbbb
xchg
push
add
push
and
xor
out
cmpsb
int3
or
sar
add
insb
data16
cmc
sub
int
aad
inc
mov
popa
jp
es
iret
sbb
sub
sbb
and
outsb
and
les
repz
jg
and
adc
in
lods
pop
je
mov
shl
in
pop
rorl
lcall
pop
or
cmp
or
leave
cmpsb
aam
sbb
jns
lods
mov
addr16
ret
fadds
and
jmp
mov
in
cli
mov
or
mov
pop
cmp
les
call
cmpsl
mov
push
pop
outsl
in
jl
xor
sub
pop
cmp
shl
jae
addr16
cmp
idivl
shll
gs
dec
ja
push
fwait
int
add
nop
cmp
int
es
sub
cmp
dec
out
push
mov
scas
ret
je
pop
mov
and
dec
jb
movsb
jecxz
and
fadds
int
push
jecxz
loope
aam
jae
adc
sub
mov
aam
mov
neg
fistpl
je
inc
movsl
icebp
fs
and
dec
imul
sti
sbb
xor
jp
rcll
pop
mov
lds
mov
or
lds
and
in
sbb
lret
movsl
mov
testl
fistl
mov
loope
sub
or
cmpsl
xchg
call
mov
mov
cmc
mov
and
pop
add
shll
adc
aad
push
jno
lcall
and
xchg
dec
pop
pop
sub
addl
rol
aas
dec
testl
dec
pop
pop
cmp
aaa
pop
in
repnz
push
xchg
push
adcl
bound
xor
shr
jo
dec
loop
pcmpeqb
es
in
es
adc
in
add
pop
out
lods
fidivrs
pop
mov
in
fmuls
test
std
jnp
std
test
loopne
fiaddl
fcmovnbe
or
push
inc
xlat
pop
mov
ljmp
insb
xor
jae
mov
inc
lods
ljmp
das
dec
mov
int
cli
push
pop
mov
adc
push
loope
aad
stos
jnp
rclb
fdivp
push
and
out
lds
iret
push
jbe
mov
push
or
and
scas
inc
sub
dec
xchg
stos
and
jno
test
popf
fwait
or
shl
or
enter
mov
fcoml
dec
push
inc
mov
push
add
cmp
jnp
mov
mov
push
icebp
xor
xor
mov
sbb
shll
rolb
push
movsl
fstpt
push
pop
pop
jb
jmp
mov
insb
push
nop
push
sub
push
sarb
shl
loope
paddw
cmc
testl
aam
hlt
icebp
test
outsl
sub
xchg
daa
push
cwtl
mov
into
loopne
and
mov
dec
adc
repz
xor
or
pop
or
inc
loope
ss
adc
mov
adc
aaa
out
jle
adc
mov
jo
orb
loope
jnp
pop
push
fmulp
mov
mov
js
cpuid
push
imul
addr16
mov
repnz
xor
js
mov
leave
mov
ljmp
dec
mov
stc
out
mov
mov
dec
push
int
mov
xchg
push
outsl
mov
inc
mov
ss
mov
and
fildl
mov
iret
inc
jle
movsl
cmpsb
pop
sbb
cmp
data16
lds
mov
test
pop
cli
cmp
dec
dec
js
das
pop
jecxz
ljmp
clc
adc
push
inc
idivb
out
xchg
insb
dec
aaa
imul
shlb
adc
sub
cmp
jp
es
xchg
iret
pop
insb
sti
xchg
out
mov
xchg
das
cmp
ret
push
adc
xor
jne
and
or
xchg
lods
jns
cmp
fs
adc
mov
dec
cmpsl
shl
stos
push
mov
mov
and
mov
sub
adc
xchg
scas
push
xor
hlt
inc
adc
mov
cmpsl
fs
jle
mov
adc
insb
add
gs
aas
fadds
dec
sub
adc
bound
jmp
shlb
jb
cli
lahf
xor
cli
sub
ret
xlat
int3
jp
cmpsb
cmc
lcall
jnp
mov
mov
lret
clc
pop
int3
sub
aaa
sti
jle
mov
push
adc
outsl
loope
dec
sbb
jno
es
enter
mov
out
outsl
inc
sti
or
enter
es
mov
push
jae
sbb
shlb
pusha
push
cmp
sub
sbb
je
inc
mov
cwtl
ret
enter
hlt
push
xor
pop
or
out
inc
cltd
scas
pop
jnp
andl
jg
mov
out
pop
out
inc
cld
cmp
cmpsl
xchg
cwtl
js
fildl
pop
ja
mov
dec
dec
aas
or
pop
push
ljmpw
mov
inc
push
stos
fists
insl
mov
mov
xlat
popf
xor
mov
shll
stos
add
int3
mov
xor
mov
pushf
mov
mov
or
ljmp
push
in
push
mov
inc
and
sbb
rorl
push
jmp
shl
adc
add
stos
xor
cld
repnz
jg
cltd
mov
or
add
push
ds
addr16
cmp
lods
scas
xchg
add
xor
lods
add
cmp
cmpsl
out
push
loope
movsb
sub
lock
in
shl
fs
lods
enter
ret
sbbb
mov
fcomps
test
sbb
mov
pop
pop
mov
xchg
and
aaa
addr16
mov
mov
adc
or
or
test
sti
adc
dec
jo
push
adc
adcl
push
je
mov
mov
push
leave
fimuls
arpl
push
fnstsw
and
das
xchg
pop
and
fisubrs
shlb
jp
inc
or
arpl
pop
gs
push
loopne
inc
dec
pushf
adc
es
daa
xor
push
pushf
fld
dec
pop
xor
lcall
cmc
imul
cmp
push
sub
sbbb
sub
jnp
push
out
rclb
pop
out
pop
sbb
and
movsb
hlt
adc
in
dec
sub
and
mov
daa
fcmovnu
or
dec
xor
xor
push
jae
movsl
cmp
rolb
insb
cmp
cmp
pop
subb
sti
nop
or
push
lret
or
dec
cld
inc
pop
scas
lea
jb
sub
popf
push
sub
mov
hlt
insl
lret
mov
or
sbb
pop
mov
cmp
filds
sti
sub
pop
inc
xor
fdivrl
pop
or
dec
or
jae
movsb
jp
js
jmp
fsts
cmp
aad
lods
inc
fldt
ret
cli
mov
mov
push
in
stc
pop
pop
sbb
mov
dec
hlt
jbe
cmpsl
dec
stos
frstor
pop
xchg
jmp
test
inc
sbb
popf
scas
rcrl
incb
sbb
int
adc
adc
lods
or
dec
push
mov
cmp
test
xorb
insl
js
loope
nop
loopne
insl
xchg
addr16
pop
call
int
nop
call
push
lods
jl
ljmp
loopne
mov
xor
fwait
dec
and
pushf
dec
cmp
adc
mov
movb
movsl
mov
inc
xchg
lcall
cmp
adc
cltd
mov
add
sub
ret
xor
add
loope
addr16
adc
ja
outsl
dec
cmpsl
adc
repz
add
ja
out
or
mov
adc
cmp
mov
shlb
imul
ret
ljmp
js
xor
mov
hlt
pop
and
xor
sub
test
iret
adc
or
ficoms
sbb
cmp
xlat
mov
rcll
pusha
mov
add
jns
testl
xchg
jns
inc
aaa
aaa
xorb
outsb
or
inc
mov
xchg
jnp
lds
push
cwtl
int
sbb
call
sub
loop
dec
mov
cmp
mov
ret
inc
pop
outsl
jnp
inc
dec
xchg
dec
aas
push
bound
xor
pop
add
mov
imul
movsb
sarl
jno
cmp
lcall
and
mov
cmp
inc
jmp
jl
leave
adc
mov
sbb
pop
ds
fdivr
mov
mov
ret
add
scas
xor
pop
dec
cwtl
scas
xor
sbb
out
push
fstps
nop
sarb
add
or
jns
test
sti
jbe
jbe
aas
lods
pop
aad
mov
pusha
rorb
pop
lret
push
mov
fs
pop
mov
or
push
xor
popa
cltd
mov
sub
dec
inc
add
bound
out
lret
inc
inc
dec
mov
adc
push
repnz
cmp
jl
sbb
movsl
addb
push
or
lock
pop
je
loopne
dec
mov
xor
sub
dec
sub
inc
add
jle
mov
sub
jne
ss
mov
repnz
mov
inc
jp
mov
in
mov
sbb
mov
xor
addr16
insl
ja
mov
or
or
lahf
and
sub
popa
sub
push
jle
xor
xchg
push
test
push
ja
xchg
jle
cmp
jnp
push
dec
cmp
or
sub
sbb
out
mov
das
je,pn
mov
iret
dec
arpl
sbb
cli
dec
or
in
dec
jnp
je,pn
lcall
or
xor
repnz
dec
roll
lock
mov
cmp
dec
push
adc
int
ret
call
sub
loop
insl
inc
dec
add
xor
ror
xchg
and
into
jbe
adc
icebp
bnd
push
jb
mov
xchg
ret
cwtl
jbe
lret
std
ret
scas
adc
inc
call
test
and
in
into
mul
adc
in
mov
or
mul
add
push
pop
dec
test
es
sub
and
sub
mov
testl
popa
xchg
ja
mov
scas
sarl
outsl
sarb
in
test
into
sub
push
pusha
and
insl
and
imul
sbb
movsl
or
xchg
jle
xchg
jp
dec
sub
sbb
daa
stc
pop
lret
and
inc
push
pop
xchg
push
insb
dec
mull
mov
sub
mov
into
jo
mov
imul
pop
or
outsb
xchg
jg
int
bound
xchg
mov
xchg
stc
aas
lcall
mov
xor
jno
shll
cmp
rcll
repnz
adc
das
inc
mov
fiadds
fwait
daa
xor
out
mov
mulb
sbb
lahf
mov
in
test
cmc
mov
mov
enter
jge
ret
outsl
xchg
ret
scas
adc
das
mov
push
mov
in
mov
int3
mov
repz
inc
xor
and
push
dec
out
xchg
cwtl
cli
shr
outsl
cmpsl
add
in
repnz
enter
jbe
dec
gs
outsl
das
jb
mov
rcrl
iret
out
sbb
cmpl
xchg
roll
pop
sub
fwait
test
xor
das
xabort
jae
pop
int3
cli
ljmp
in
sub
mov
add
push
mov
jo
rclb
shl
adc
cmp
push
or
and
fwait
mov
jp
add
push
cmpsl
xor
in
or
sbb
sbb
pop
add
xor
cmp
jge
movsb
or
pop
pushf
gs
in
in
rcr
xchg
dec
sbb
int3
cmp
ret
call
mov
pop
stos
shlb
dec
imul
cmp
aaa
int3
jae
fisubl
sbb
in
inc
lcall
shrb
movsb
int
aad
xor
cmpsb
sbb
mov
push
icebp
adc
jl
jne
push
jg
jno
mov
cs
xlat
movsb
sbb
sbb
dec
stc
pop
adc
cli
dec
mov
imul
cmp
jle
mov
cmp
jbe
ljmp
cli
es
movnti
in
pop
icebp
sahf
cli
push
out
pop
popa
xchg
jl
cwtl
add
mov
push
lahf
jmp
jnp
sbbl
cmc
mov
dec
fcomp
movsl
fisubl
into
clc
add
ja
int
add
movsb
adc
xchg
lds
pop
test
rcrb
dec
iret
cmp
scas
mov
mov
adc
mov
xchg
mov
out
xor
scas
adcl
lods
in
cmp
sbb
sbb
fucomip
pop
lcall
shl
jne
or
pusha
repnz
in
push
and
lea
mov
jbe
sub
jge
cmpsb
mov
orl
mov
fisubl
jbe
insb
jl
sbbl
xor
dec
pop
cmp
cmc
push
iret
int3
rorl
pop
repz
mov
sub
shrl
aas
icebp
jne
test
jne
dec
outsl
insl
jo
push
imul
and
gs
aas
and
pop
mov
mov
aaa
and
mov
std
cltd
imul
loop
pop
cmp
sub
sub
movsl
push
or
sub
cmp
mov
loope
lock
push
and
movsb
je
inc
cmp
sub
adc
add
fisubs
pop
cmpsb
xor
or
sti
mov
jmp
dec
pop
hlt
cld
repnz
ret
push
xor
jns
mov
push
pop
dec
sbb
xchg
iret
dec
pop
int
aaa
or
or
and
cmc
in
mov
mov
stc
dec
dec
and
sub
test
sub
int3
jmp
arpl
leave
out
push
popa
popf
repnz
push
pop
js
stos
mov
sbb
es
aaa
inc
or
cltd
gs
xor
lahf
iret
adc
pusha
lods
mov
rcrl
cmpsl
into
jle,pt
popf
in
pop
decb
mov
cmp
pop
test
dec
mov
pop
fld1
enter
sahf
pop
pop
in
fcoms
in
adc
jnp
scas
mov
mov
cmp
mov
pop
out
clc
add
sbb
in
into
push
pop
into
aam
insb
xchg
xor
push
adc
inc
mov
mov
dec
jmp
fwait
and
add
push
add
and
js
push
mov
adc
inc
fisttpl
insl
pushf
sbb
scas
jmp
cmpsb
adc
lcall
push
lcall
and
hlt
sub
xchg
xor
jb
inc
sbb
xor
inc
lods
push
into
cwtl
jle
mov
fmul
sahf
sti
jno
and
call
ds
sbb
mov
mov
jle
insl
and
inc
stc
shll
movsb
je
in
enter
movsl
push
fstpt
lds
dec
test
aaa
fwait
mov
push
push
push
inc
lock
pop
rclb
adc
in
lea
xchg
pop
pop
hlt
clc
sub
jecxz
lds
jne
insb
and
ss
xlat
je
jmp
pandn
or
xor
push
rcrl
push
or
mov
cmp
loopne
enter
mov
push
dec
lret
daa
or
pop
mov
fsts
add
notb
lock
jmp
popf
nop
in
je
leave
and
push
adc
jge
negl
imul
sahf
dec
add
sti
sub
es
popf
call
lahf
fcomip
mov
push
cmp
or
xchg
shl
pop
add
pop
push
loopne
cmpsb
jle
cmp
ljmp
int3
jmp
mov
scas
pop
in
xchg
adc
jge
fistps
inc
shl
call
jns
or
iret
sub
loopne
imul
pop
mov
data16
sbbl
jae
xor
clc
push
sub
jp
xchg
xor
int
mov
mov
jg
loop
xor
jnp
jno
mov
dec
mov
dec
add
push
aaa
das
pop
lret
inc
mov
test
out
mov
sub
lcall
bound
jae
ljmp
mov
mov
or
int
les
rolb
fs
jmp
andl
int3
pop
arpl
cld
xchg
mov
iret
pop
dec
push
loop
test
fwait
ja
dec
lcall
xor
lret
stos
or
fwait
push
sahf
cs
mov
push
push
and
sahf
jg
out
pusha
cmc
add
shr
mov
les
repz
push
pop
jmp
mov
or
xchg
fwait
mov
cmpsl
mov
fstl
pusha
lret
xchg
imul
jns
add
xor
mov
test
je
dec
stc
inc
out
ret
clc
std
bound
add
mov
jnp
je
jl
adc
aam
lcall
sub
inc
xchg
test
fwait
lret
imul
push
adc
scas
negl
pop
cli
inc
cmp
xor
push
nop
jns
adc
imul
mov
adc
jbe
cmp
sbb
pop
pop
dec
xor
stos
xchg
dec
testl
adc
inc
pand
ret
repz
jb
and
xchg
jmp
inc
jne
lahf
and
scas
test
jne
std
shlb
mov
arpl
mov
sti
push
lea
mov
pop
test
test
add
xorb
mov
or
push
adc
jge
outsl
mov
sbb
fs
sbb
or
ja
or
mov
xchg
mov
mov
xor
nop
stc
and
repz
lods
xchg
mov
popf
addr16
mov
push
mov
pop
stos
mov
les
ret
jle
push
aam
imul
lds
dec
dec
jnp
sub
insl
js
xor
xor
push
mov
out
jae
sub
ret
sahf
ds
add
addr16
add
jmp
sahf
lds
mov
mov
inc
incb
clc
scas
pop
stc
sub
add
test
outsl
mov
fimuls
pushf
nop
inc
sahf
inc
imul
mov
mov
sbb
scas
je
cltd
cmpsl
aam
mov
dec
sub
lret
sbb
jnp
ss
ret
jb
dec
inc
gs
js
stc
add
lret
add
dec
loopne
loopne
mov
shl
xchg
roll
xchg
mov
pushf
addr16
jno
imul
sbb
add
cltd
cmp
in
mov
cltd
ficoms
xchg
test
clc
popf
fmull
xchg
in
scas
pop
mov
dec
push
fs
inc
cmp
push
cmp
dec
std
clc
sahf
call
mov
or
or
into
jg
adc
push
and
lds
mov
mov
scas
stos
lea
mov
push
lods
adc
adc
mov
pop
push
sbb
mov
sbb
lcall
push
xorb
idiv
leave
jne
stos
js
mov
stos
xchg
jnp
outsb
push
sbb
cmpsl
xor
push
repz
dec
inc
add
leave
sti
out
jge
jae
movsb
lret
sbb
xchg
xchg
mov
cmp
fisubrs
fistpll
mov
inc
cmpsb
cmp
push
ds
adc
ret
aad
push
addr16
inc
addl
adc
cmc
push
push
fistpll
xchg
dec
mov
fidivrs
mov
jnp
add
mov
jo
out
mov
fisubrl
pop
inc
sub
pop
jp
fwait
push
inc
sub
fsubl
pop
dec
ja
loopne
fldt
xchg
stos
cmp
fildll
leave
arpl
inc
push
and
bound
pop
adc
mov
gs
xchg
in
and
jmp
movsb
inc
mov
inc
test
mov
test
in
sahf
test
cwtl
out
fs
add
lods
or
out
popf
pop
mov
mov
cmpsb
pop
daa
call
out
mov
lea
cs
popa
jae
xchg
mov
cmpsb
loop
dec
sbb
inc
dec
mov
aad
testl
jmp
cld
int3
adc
inc
test
loop
inc
je
and
in
xchg
mov
xor
loope
push
inc
lds
or
mov
fadd
mov
in
out
mov
hlt
out
xchg
dec
jb
imul
sub
aad
jmp
mov
je
mov
inc
rorb
cmp
or
and
xor
fldt
adc
mov
popf
sbb
lock
mov
out
lahf
shl
xor
aad
jge
xor
dec
adc
pshufw
idivl
pop
mov
xor
mov
xchg
xor
ret
push
cmp
test
scas
outsb
mov
xchg
or
addb
fisttpll
loope,pt
mov
dec
pop
gs
cmp
sub
scas
pop
and
cmp
xchg
addb
test
add
adc
push
xor
daa
lock
stc
jp
shrb
and
outsb
out
sti
mov
out
pop
cmp
or
jle
mov
test
pop
iret
xor
in
mov
test
dec
pop
xchg
bound
sbb
in
mov
popa
and
mov
cmpsl
xchg
cltd
xchg
cmp
aas
mov
andb
bound
mov
rcll
jecxz
pop
xor
mov
jg
ja
push
test
mov
mov
insl
fsubrp
shrl
scas
fisttpl
inc
pop
insb
jno
push
ror
fs
jmp
xchg
cli
jmp
xor
add
test
xchg
test
pop
lcall
test
inc
aam
jecxz
enter
loop
xchg
mov
dec
dec
push
ja
xchg
movsl
bound
cmp
pop
clc
sbb
mov
xor
push
push
add
sarb
mov
mov
jmp
bound
pop
dec
adc
aam
xchg
add
push
mov
ret
mov
inc
dec
mov
fwait
jmp
in
das
sub
jo
mov
add
in
jns
sub
pop
dec
stos
int
jmp
shlb
sbb
imul
cltd
add
inc
in
mov
sti
xchg
lret
jecxz
pop
mov
inc
cwtl
fld
mov
test
inc
xor
das
aas
shlb
push
or
insb
outsb
pop
jne
pop
aas
lcall
cltd
repnz
and
negb
ss
jo
jns
outsb
aad
mov
pop
cmpsb
scas
mov
cmp
jne
hlt
enter
add
hlt
adcl
and
repz
mov
je
push
adc
pusha
jle
jbe
mov
mov
mov
int
lret
fmul
mulb
mov
add
scas
push
aad
rcrb
fmuls
push
sarl
mov
scas
imul
fnstenv
daa
sub
jmp
loop
pop
add
pop
add
cld
pop
dec
mov
jge
loope
xor
jb
movsl
pop
pop
cmp
dec
fcmovnbe
adc
hlt
pop
popf
into
ret
pop
adc
sub
daa
inc
adcl
test
mov
dec
adc
or
cli
jb
lahf
ja
iret
sub
lcall
call
push
mov
cmp
in
mov
adc
fidivs
add
pop
pop
sbb
cmp
or
xor
sub
ret
enter
mov
cltd
lret
daa
add
mov
imull
pushf
mov
pmaxsw
add
xlat
aam
negl
jecxz
cmpb
sub
enter
std
lahf
lret
jno
add
ss
add
mov
adc
movsl
pop
std
testb
mov
mov
pushf
outsl
fnstcw
dec
push
mov
lea
sub
or
push
jno
jbe
or
dec
ret
inc
pop
cmp
insl
test
push
ret
or
lea
mov
push
xor
rclb
sbb
mov
hlt
push
mov
dec
divl
imul
sbb
ret
pushf
or
xchg
lret
data16
pop
andl
fisubrs
push
call
fs
or
mov
dec
mov
jno
ficoml
jns
ss
lock
lock
aam
cmp
mov
sbb
loop
lods
hlt
inc
jno
pop
fs
mov
outsl
cs
dec
test
sub
sbb
xchg
jne
aad
sbb
out
jbe
dec
xor
xchg
sub
les
xchg
and
in
pop
out
lahf
loopne
ret
add
lcall
mov
and
add
inc
xchg
jno
and
mov
jmp
jae
adc
fwait
sub
outsl
xchg
adc
ja
push
orps
push
sbb
movsl
addr16
mov
jl
or
xchg
rolb
loop
loopne
cwtl
mov
and
orl
fwait
mov
mov
ret
xchg
rorl
popa
inc
subb
push
movb
fistps
sbb
lret
add
inc
lahf
or
xchg
or
les
push
call
clc
mov
bound
icebp
repz
call
fcmovnbe
shll
pop
lret
xor
hlt
pop
insl
sbb
inc
stos
push
dec
cwtl
mov
ss
pop
out
in
lds
nop
ret
inc
adc
sbb
subb
push
test
ret
adc
pusha
jp
fmulp
lret
push
hlt
sbb
mov
daa
mov
outsb
jb
pop
cmp
lods
jecxz
mov
xchg
outsb
outsb
or
push
jae
sbb
dec
aaa
aam
aaa
push
int
xchg
loopne
ss
js
js
gs
jo
cwtl
and
mov
sbb
int3
pop
clc
imul
stos
call
cmp
shl
cltd
mov
push
add
jnp
inc
xchg
xchg
popa
out
lods
push
or
lods
adc
xchg
fs
lock
mov
mov
loope
fildl
pushf
or
sub
lcall
add
daa
or
mov
dec
mov
jae
dec
add
shrb
pushf
out
hlt
jmp
mov
jnp
lods
fmulp
shlb
sbb
or
enter
add
hlt
sbb
add
mov
push
dec
pop
push
xlat
sub
adc
mov
push
ret
leave
or
push
in
andb
or
adcl
mov
int
push
push
dec
mov
enter
movl
pusha
bound
or
scas
add
dec
jno
mov
add
mov
inc
ja
cwtl
jae
ret
loopne
mov
arpl
gs
xchg
mov
fisttps
push
inc
data16
sub
mov
sbb
push
pop
jg
xor
pop
add
leave
mov
sub
mov
push
or
korw
push
mov
aaa
xor
sarb
cli
rorb
pop
imul
call
fidivrl
mov
dec
cmp
loop
adc
dec
xorb
js
call
xchg
dec
inc
push
scas
aas
sbb
pusha
and
cmpsb
sbb
sbb
jb
test
pop
mov
or
mov
lods
popf
enter
out
scas
jmp
fidivrl
dec
add
xor
ljmp
pushf
shrl
aad
sub
fdivrs
mov
mov
and
fs
lret
push
add
clc
loope
jle
adc
in
inc
rcl
xor
outsb
xchg
sub
dec
movsl
stc
jno
sbb
lds
cmpl
cmpl
mov
cld
mov
or
jg
out
outsb
stos
leave
test
out
into
cmpsl
loop
xchg
or
jb
mov
push
out
aas
lcall
jl
add
cmp
int
cmpl
sub
mov
xlat
into
imul
out
hlt
mov
dec
pop
adc
and
sbb
sbb
adc
push
cmp
jbe
les
xor
sbb
cwtl
imul
adc
and
mov
sahf
aad
cmp
inc
cmpb
push
cli
and
out
pusha
cmpsl
mov
daa
or
or
lret
mov
lods
jnp
into
orb
f2xm1
cmpsb
jecxz
cmp
sub
xor
push
sub
out
jo
bound
mov
inc
lret
or
nop
or
sbb
mov
outsb
cltd
mov
pand
sbb
scas
push
lahf
sarb
or
fisttpll
test
mov
nop
mov
loope
push
nop
stos
popf
add
add
pushf
and
cmp
aas
gs
lcall
sbb
es
add
out
or
filds
pushf
stos
cltd
inc
xor
mov
or
jp
mov
dec
jns
jbe
add
in
sarl
add
adcb
int
loopne
repz
aas
js
aaa
pop
je
adc
jg
pop
mov
push
mov
xchg
xchg
push
mov
pop
add
sub
stos
loope
mov
mov
pop
xchg
and
mov
push
cmp
and
cmpsb
mov
pop
push
cmp
push
or
test
jb
mov
mov
aaa
push
mov
xchg
sbbb
mov
add
adc
xor
add
call
cmp
pop
loope
ret
fdivl
dec
pop
push
sub
fs
cmp
insl
mov
out
jge
pusha
lret
inc
sahf
je
insb
adc
or
leave
negl
adc
pop
xchg
bnd
adc
popf
jl
mov
cmc
int
out
aad
mov
sub
inc
outsb
sahf
lret
pop
pop
mov
ljmp
cmp
sbb
xor
in
cmp
ja
cli
jbe
push
cmp
rorb
sub
inc
dec
loope
add
icebp
inc
clc
aaa
lret
cmp
xor
xchg
or
push
shlb
pop
cmp
mov
push
add
clc
addr16
movsl
xchg
push
sub
test
call
pushf
inc
cld
adc
test
pop
outsl
imul
push
push
fstpl
jne
fldcw
cld
xchg
out
cmp
stc
mov
mov
pop
outsl
push
dec
pop
ficoms
xor
adc
inc
mov
lahf
std
call
ret
scas
adc
cltd
and
shll
add
int3
push
into
loopne
aaa
arpl
xchg
xchg
dec
movsl
xor
jmp
jp
insb
jl
cmp
es
jecxz
push
add
inc
sub
mov
xor
fistps
std
movsb
cmp
inc
sar
int3
jns
push
sbb
popa
mov
movsl
sub
jge
adc
adc
and
xorl
cld
aad
push
mov
sub
mull
sbb
subb
pop
ret
inc
into
lods
jle
pusha
rcl
cmpsb
pushf
or
jge
subl
sbb
movsl
cli
js
pop
fisubrl
sub
sahf
sarl
imul
sti
xchg
repnz
ficoml
in
jle
imul
mov
aad
cmp
pop
adc
dec
xchg
shll
icebp
ret
repz
xchg
pop
mov
mov
lock
cli
lock
fchs
addr16
cmp
sub
pop
xor
xchg
mov
das
jne
data16
loopne
push
adc
aad
std
lea
xchg
outsb
pop
mov
popa
cli
jo
add
xchg
das
insl
sub
push
jne
aam
stc
das
in
ret
add
mov
jmp
xchg
sub
mov
xchg
cltd
rorl
mov
mov
test
and
gs
fwait
pusha
xchg
fisttps
or
int
movsb
andb
sbb
push
mov
arpl
mov
mov
pop
int
stc
mov
add
mov
mov
pop
nop
inc
pop
mov
ss
mov
push
dec
mov
pop
stc
shll
test
nop
xchg
mov
inc
cmp
pop
popf
lds
rolb
icebp
daa
fs
pop
adc
js
enter
pop
fistpl
cwtl
scas
xor
insl
repnz
cmp
jecxz
shl
mov
jl
jo
mov
and
test
pop
int3
insl
pop
stos
in
sbb
mov
movb
in
fwait
std
out
repnz
sub
and
pop
mov
loope
sbb
mov
pop
sbb
stc
int3
push
mov
mov
xchg
popf
xchg
sub
punpckhbw
pop
push
mov
loopne
adc
test
sarl
xchg
xor
gs
data16
lock
int3
pop
dec
sub
xor
scas
pushl
inc
dec
stc
clc
enter
ja
push
push
das
jg
fdivl
mov
adc
pusha
int
or
fs
or
xchg
sbbb
fwait
push
mov
sub
test
dec
data16
cmpsl
ds
or
fwait
bound
test
mov
popf
das
cs
pop
mov
xor
ss
xchg
notl
xchg
adc
lods
mov
fcmovnbe
shll
mov
divl
ljmpw
ficompl
ficomps
mov
jae
sub
pop
insl
lret
int
push
push
lcall
repz
push
mov
xchg
je
xchg
cmp
jbe
nop
movsl
lea
sbbl
loope
fcmovnu
dec
out
std
sti
lock
push
jecxz
cmp
mov
mov
cli
mov
or
test
jae
decl
sub
aam
dec
mov
fsubrs
test
hlt
push
and
mov
xor
push
adc
ja
scas
bnd
mov
jo
jbe
nop
les
jbe
adc
xor
pop
xor
scas
outsl
lds
je
xor
xchg
loope
add
push
mov
or
cmp
fcom
test
dec
jnp,pt
fdivrs
jae
adc
or
int3
or
cmp
jb
jl
cmp
outsl
adc
pop
pushf
adc
dec
lret
pop
cmp
inc
cwtl
inc
mov
or
push
push
or
int
cmp
jge
push
jmp
arpl
mov
adc
adc
cltd
fwait
inc
pop
pop
sub
jp
dec
lods
repz
icebp
cs
jo
lahf
sarl
imul
or
jge
popf
xor
pusha
jne
fdivrs
imulb
dec
mov
jg
or
daa
and
test
int3
jo
jb
adc
sti
shll
or
popa
mov
lock
jecxz
jle
cmp
and
imul
dec
lret
cmp
mov
jl
sbb
testl
push
daa
in
dec
sbb
mov
pop
cmp
out
mov
or
add
enter
pop
xchg
pop
popf
push
adc
adc
movsl
mov
fcomip
cmpl
adc
and
push
andl
out
out
test
xor
mov
and
mov
fcomps
sub
xor
es
out
push
popa
loop
pop
lcall
mov
icebp
push
sub
mov
push
cmpsl
mov
fimuls
mov
cltd
jg
je
inc
fwait
push
jno
mov
sub
insb
loope
inc
lds
test
mov
leave
mov
xchg
mov
pop
shrl
ds
mov
lcall
lods
mov
hlt
rcrl
fildl
jbe
push
xchg
repz
fs
lods
mov
and
push
dec
add
frstor
add
jno
sbb
movsl
and
es
add
rcrl
add
xchg
call
leave
inc
mov
popa
mov
pop
into
dec
xchg
fbstp
testl
or
les
inc
leave
stc
mov
pusha
cmpl
adc
lds
adc
sub
jae
jae
std
sbb
lahf
add
mov
sub
sub
movsl
push
shlb
leave
cmp
dec
mov
sub
cmpsb
push
outsb
add
xchg
adc
jp
fnsave
adc
dec
add
clc
fwait
mov
movsl
inc
lea
imul
mov
rorb
sub
bound
jnp
outsl
inc
ret
sbb
div
sbb
push
gs
pop
xchg
xor
sbb
loopne
mov
imul
jo
and
out
hlt
rcrb
daa
adc
hlt
subb
stos
addb
mov
in
sti
or
adc
in
pop
addr16
ret
push
mov
mov
inc
outsb
sub
mov
out
push
xchg
inc
iret
mov
jbe
cmpb
mov
movsb
pop
add
mov
sub
xorb
lret
xchg
mov
xor
dec
orl
cmp
andl
jne
in
mov
pop
loop
xchg
jmp
xchg
jne
aam
icebp
adc
jl
mov
jmp
enter
or
push
inc
insb
mov
dec
sbb
lret
inc
pop
inc
insl
ss
cltd
ret
xchg
xlat
fisubrl
stc
cmp
stos
xor
rorl
test
xor
imul
jbe
pop
or
pop
sahf
adc
push
fdivs
dec
cmp
dec
jbe
sub
ret
std
sahf
xchg
inc
idivl
lcall
dec
xchg
xchg
pop
insl
dec
sbb
jge
movsb
sbb
jb
cmp
test
movsb
sbb
adc
loope
movsb
mov
push
insl
or
add
addr16
xchg
gs
fiadds
and
cvtdq2ps
test
mov
xchg
addr16
pop
cmp
stos
mov
ljmp
adc
and
ds
push
jp
mov
sbb
in
fs
xchg
fistpl
test
lea
cltd
lea
adc
fsubs
lret
xchg
mov
sar
jnp
sti
loop
xor
adc
cmp
js
jb
add
jne
push
sbb
popf
cmp
mov
pop
push
push
fnstsw
sub
dec
adc
add
lods
push
inc
sahf
xor
pop
mov
and
mov
xchg
sub
xor
jno
dec
bound
xchg
xor
xor
pop
in
div
lcall
xor
xor
xchg
pop
sti
ds
test
js
data16
dec
out
xchg
cvtpi2ps
dec
inc
enter
mov
or
lret
inc
es
push
mov
dec
sbb
out
and
xchg
dec
orl
inc
inc
sbb
mov
icebp
jl
dec
loope
scas
test
push
nop
pop
lret
sub
push
sub
inc
mov
jmp
and
inc
arpl
icebp
clc
dec
clc
ret
sbbl
nop
xor
pop
imul
call
cs
jae
dec
roll
jo
adc
or
xor
inc
mov
push
mov
imul
xor
xor
xchg
pop
ds
push
pop
mov
pusha
ljmp
push
mov
add
std
cmp
ss
sarb
mov
mov
push
subb
mov
jno
xor
xor
dec
cmp
pop
push
xchg
xor
test
sub
loope
scas
lret
ds
jecxz
pop
loope
imul
jg
sar
stos
pop
out
adc
arpl
outsl
push
mov
lock
xor
push
roll
sub
das
pop
lods
stos
add
addb
jmp
mov
mov
sar
pop
adc
test
cld
inc
mov
push
sbb
movsb
imul
inc
and
or
xchg
push
pop
ret
mov
popf
fldenv
sub
mov
xor
mov
mov
popa
lcall
gs
pop
jl,pt
push
outsb
testl
mov
push
mov
cwtl
mov
dec
mov
pop
fiadds
cltd
std
nop
pop
pop
dec
out
and
enter
dec
xor
cmpsb
lret
lret
out
add
push
fs
or
add
mov
pop
lods
pop
stos
aam
sbb
sbb
add
rcl
in
test
popf
sub
adc
clc
pop
mov
inc
sub
add
push
cs
imul
add
scas
pop
cmp
add
imul
inc
into
inc
in
cmp
mov
lret
inc
mov
add
xor
bound
lea
xor
cld
sbb
sti
inc
pop
aas
sbb
jno
inc
rcll
js
push
inc
jno
mov
neg
fsubrs
jno
mov
je,pn
pushf
jnp
dec
push
xchg
pusha
jmp
mov
std
sbb
lcall
sti
nop
sbb
data16
not
inc
in
pop
aad
sbb
lods
cwtl
lcall
xor
pop
ja
lret
push
add
xor
mov
aas
and
and
xor
out
sub
or
mov
inc
inc
imul
lds
pusha
pop
mov
xchg
or
sub
mov
bound
scas
sub
rorl
out
loope
and
popl
popf
add
out
js
mov
shl
inc
leave
std
mov
mov
popa
fimuls
es
bound
rcr
xchg
push
cltd
sbb
ja
ficoml
shlb
or
fcompl
clc
xchg
xchg
mov
push
mov
and
sahf
mov
mov
fistpll
pusha
fwait
and
pop
ljmp
lcall
pop
pop
xor
jo
xor
sub
int3
in
xorb
mov
stos
scas
mov
movsb
pop
mov
xchg
dec
cltd
adc
mov
jno
cmp
insl
faddp
cwtl
adc
inc
inc
adc
repnz
test
out
mov
hlt
push
pop
dec
scas
cmc
xlat
xor
nop
imul
lret
dec
imul
pusha
in
pop
js
out
in
fisttps
xchg
sbb
rorb
xchg
shll
lock
cmp
sub
stos
sarl
push
add
sbb
ret
scas
sbb
inc
fcoms
into
test
push
adc
fcoms
push
jmp
out
mov
ret
push
rcrb
jecxz
or
xchg
push
or
std
movsb
data16
xor
pop
into
mov
push
push
jne
jno
xchg
aaa
mov
outsl
dec
mov
dec
enter
inc
jne
incb
add
mov
and
push
addb
in
cmp
hlt
push
in
test
mov
sti
xchg
pop
fwait
pop
jno
mov
sbb
xor
xchg
test
test
xchg
out
outsb
imul
lds
leave
js
xor
mov
mov
pop
push
cmp
push
mov
in
adc
loope
test
cmpsb
leave
push
sub
pusha
cmp
pop
out
into
jno
inc
inc
scas
push
scas
test
pop
rcr
xchg
sub
pushf
mov
mov
jl,pt
popa
inc
cmp
pop
fistl
daa
fnstcw
inc
dec
inc
iret
outsl
lcall
gs
popf
sub
xchg
jo
insb
sti
clc
adc
movsl
jns
mov
xchg
or
pop
push
inc
xor
es
add
pop
fdivp
test
repz
in
aaa
fsubrs
jb
in
arpl
daa
mov
aaa
stc
test
pop
mov
outsb
iret
mov
sub
bound
icebp
gs
mov
scas
sbb
pop
jno
or
push
popf
jbe
jb
xorb
fstpl
jmp
mov
mov
fsubrl
jle
nop
xchg
mov
loop
addl
movsb
out
xorl
movsb
ss
ljmp
and
mov
adc
lret
in
sbbb
in
jmp
repz
fucomp
dec
jnp
inc
and
cmp
data16
std
push
cld
xor
mov
cmovno
daa
leave
inc
pop
xor
addr16
push
rolb
mov
add
push
call
mov
pop
cmp
test
enter
je
mov
xor
rolb
dec
pop
xchg
mov
jbe
subb
push
lret
sbb
adc
dec
adc
mov
jl
les
into
jge
xchg
ljmp
and
jo
lods
cwtl
jae
sub
mov
adc
xchg
pop
mov
xchg
and
fwait
jae
int3
add
sub
xchg
pushf
aas
cs
adc
clc
sahf
outsl
sbb
add
dec
mov
pushf
mov
cwtl
test
sahf
sub
pop
out
fdivp
arpl
adcb
jp
lea
xchg
xchg
fnstenv
xchg
xorb
xchg
adc
push
ja
shll
push
mov
inc
inc
cs
jb
add
inc
pop
pop
sbb
popa
push
fwait
mov
dec
fcmovnbe
popf
data16
or
out
sbb
mov
cltd
pop
add
cs
cmp
and
fmull
pop
mov
mov
cltd
push
iret
mov
fcom
push
and
jecxz
lcall
test
leave
mov
jns
mov
mov
xchg
fwait
dec
fadds
xor
mov
lock
aad
dec
inc
daa
fnsave
jl
xchg
push
cmp
lock
mov
mov
arpl
xchg
mov
call
loope
loopne
inc
xchg
flds
inc
lcall
fidivrs
and
adc
and
or
mov
push
cmpl
stc
icebp
mov
pop
jno
mov
xchg
sub
in
loop,pt
sbb
clc
sub
loopne
aas
sub
imul
cmp
mov
orl
xchg
lret
bound
mov
mov
movsl
pop
ja
mov
mov
scas
pop
sub
and
cli
xchg
pop
dec
fildl
popf
sub
jb
les
repz
xchg
repz
faddl
pop
enter
push
lret
mov
test
xchg
mov
add
ss
jecxz
lock
aam
push
out
orl
in
jno
aaa
or
and
dec
push
inc
push
icebp
in
sti
xor
pmaddwd
lahf
je
jnp
lock
repnz
test
dec
filds
mov
bound
add
mov
sub
loope
pushl
lods
cmp
push
das
ja
rclb
mov
ds
movsl
xchg
popf
lds
xor
jp
xor
ret
sbb
xor
lahf
pop
popf
mov
out
push
sahf
and
mov
or
inc
or
jbe
mov
shll
jge
mov
test
sbb
es
setbe
push
aaa
js
mov
int
pop
mov
push
cmpsl
or
repz
fcomp
dec
idiv
mov
out
mov
nop
int
add
mov
push
add
mov
sub
leave
and
and
int3
xor
cmpsb
mov
adc
push
mov
pop
xchg
or
enter
push
jnp
aaa
mov
fwait
and
add
rcll
les
out
mov
imul
dec
mov
mov
xor
xor
das
add
rclb
cmp
push
dec
add
or
sbb
out
lcall
pop
inc
add
ret
shr
sub
add
leave
push
fdivs
daa
fs
shrl
stos
pop
stc
shl
outsl
addl
sbb
sub
sbb
shl
push
pop
lret
int3
or
inc
mov
jae
push
push
pop
cmp
ret
fiaddl
xor
xchg
jecxz
cli
push
push
dec
mov
push
sbbb
aam
nop
stc
jo
ret
addl
imul
data16
sbb
push
adc
mov
fisubs
into
sub
mov
test
in
cltd
testb
xlat
out
adc
sbb
ljmp
mov
cltd
ss
inc
pop
xor
ds
xlat
scas
pop
sub
dec
enter
lret
nop
add
pop
xlat
jmp
insl
jp
jbe
sbb
daa
shlb
cmp
pop
sbb
pusha
cmp
insl
std
mov
fldenv
cmp
mov
push
mov
cltd
adc
xchg
data16
fs
lds
or
adc
mov
cmpsl
aaa
mov
fdivs
jmp
stos
cmp
popf
je
out
aaa
lock
and
test
mov
pop
and
aas
pop
adc
je
daa
hlt
or
cmp
test
adc
es
and
pushf
out
dec
or
orb
jl
mov
repz
bound
jne
push
sbbb
loop
xlat
sub
lahf
enter
mov
in
mov
cmp
div
pop
out
aam
outsl
mov
inc
cmc
jmp
push
jle
dec
jg
stos
movsb
insl
push
je
stc
pushl
xor
add
jbe
imul
stos
sti
ret
mov
lahf
lret
mov
gs
imul
bnd
fldenv
cmp
mov
xlat
sub
scas
movsb
cmpsb
pushf
divl
fnstcw
push
pop
adc
loopne
mov
pop
jbe
cmp
stos
ret
gs
push
test
lea
dec
les
jg
inc
xchg
inc
jnp
and
mov
sbb
pusha
gs
push
in
movsb
pusha
sbb
pop
je
inc
push
mov
xchg
lret
divb
inc
and
loope
aad
arpl
ds
lea
pop
mov
cmp
hlt
add
ds
mov
or
push
ficomps
xchg
push
insb
add
and
enter
mov
push
je
mov
ja
cmp
pop
adc
dec
inc
xchg
daa
cmp
jge
sbb
lods
inc
lds
idivl
cmp
sub
test
lods
icebp
sarb
push
cmp
test
das
ds
dec
enter
xlat
pop
mov
je
scas
mov
popa
outsb
das
std
cmp
jo
cmpsb
pop
xor
jbe
mov
inc
cmp
mov
ss
enter
lock
out
add
fildll
xchg
or
xor
cmp
push
cmp
out
fwait
mov
xchg
sbb
inc
insl
mov
ds
stos
call
jmp
es
xchg
mov
cmp
imul
pop
jge
in
jbe
dec
jle
inc
insl
loop
cmp
push
inc
jno
les
mov
test
sbb
insb
dec
or
hlt
push
lahf
in
and
mov
push
aam
stos
or
or
insl
pushf
xchg
lcall
push
xor
pop
xor
ljmp
mov
ljmp
into
fisubrs
int
scas
jno
pop
pop
in
in
and
shlb
in
sti
sub
es
repz
mov
nop
fdivl
popa
jge
stos
or
mov
les
movsb
addr16
jmp
aam
mov
lods
int3
cmp
sub
sub
pop
scas
push
cmp
mov
pusha
jbe
fistl
js
repz
and
mulb
dec
insl
xor
andl
xchg
mov
xor
and
and
loope
psrad
pop
dec
xor
inc
sub
lods
popa
push
push
es
pushf
ret
stos
jmp
ljmp
adc
jbe
inc
mov
hlt
xchg
iret
and
aas
shrb
mov
cmpsl
or
and
inc
push
add
scas
inc
inc
mov
pop
inc
lock
push
pop
xor
insl
add
aad
xchg
cmp
xor
jmp
sub
xchg
lret
adc
mov
jns
or
inc
pop
dec
aaa
enter
fwait
xchg
repz
mov
xchg
adc
pop
and
mov
pusha
pop
out
fisttps
xor
dec
add
and
inc
mov
add
cmc
sbb
ret
add
add
stos
xchg
add
fisttps
ds
daa
cmp
pop
aad
dec
xchg
fstps
mov
bound
in
jns
sub
or
dec
dec
xchg
xchg
adc
pop
push
pop
fldl
daa
negb
lea
out
mov
pop
jl
xor
xor
adc
add
xchg
arpl
add
popf
aad
jecxz
inc
clc
fwait
pop
xchg
testl
cltd
ljmp
jle
push
adc
lock
push
imul
xor
mov
aaa
fldt
lret
ljmp
jle
jne
xor
adc
pop
insb
cmp
cmp
fldl
addr16
ja
lahf
int3
lret
cltd
push
stos
aam
cmp
push
or
cmp
cltd
insl
adc
xor
pushf
in
pushf
pop
jnp
std
pop
mov
and
aad
stos
stos
cmp
and
sub
xchg
insl
mov
mov
gs
jecxz
adc
xchg
jecxz
mov
fstpt
sahf
fldln2
xor
dec
or
xchg
fsubs
aas
shrl
lods
out
or
jmp
cs
xchg
mulb
or
adc
jno
mov
cli
test
ljmp
fidivs
mov
enter
jbe
jp
outsb
dec
adc
imul
in
lods
cmc
dec
repz
into
std
xchg
scas
jg
sbb
sub
ds
cmp
sub
ds
jle
mov
mov
jbe
neg
jge
stos
cld
xchg
push
adc
adc
dec
sbb
inc
jge
xchg
out
cmc
outsb
imul
pop
std
jb
insl
and
dec
daa
arpl
int
shll
or
fdivr
push
loope
xor
cld
add
dec
pop
dec
cld
aaa
mov
adc
mov
fisubs
cmpsb
ss
ss
pushf
ret
iret
add
or
inc
iret
mov
outsb
sbb
xor
and
dec
inc
dec
mov
or
xchg
fdivr
insb
stos
xchg
loope
sbb
jne
or
in
int
sbb
outsl
jno
mov
mov
jnp
pop
out
cld
mov
push
pushf
fmull
aas
ret
push
sbb
ja
push
hlt
fiadds
cltd
push
mov
jp
cmp
pop
mov
mov
or
inc
lea
pop
popl
dec
in
gs
iret
ja
inc
cmp
je
iret
mov
sub
inc
and
and
adc
cmp
frstor
sub
add
jnp
and
fdivr
push
ss
or
sbb
or
loopne
cwtl
pop
jbe
mov
sbb
lock
inc
jl
pop
push
fisubrl
aad
sbb
jg
push
in
dec
jge
mov
dec
xlat
arpl
fldl
out
pop
icebp
dec
adc
mov
pop
cmp
lock
dec
test
add
push
pushl
cmpsb
mov
jle
push
int3
dec
lcall
jb
xchg
iret
pushf
mov
and
xor
pushf
cmp
adc
shlb
repnz
scas
cmp
pop
mov
hlt
mov
fidivrl
cmovnp
test
push
int
mov
xlat
cltd
xchg
sub
jno
pusha
mov
bound
ljmp
test
xor
pusha
ret
jp
adc
dec
mov
mov
mov
int
out
outsb
pop
xor
cmp
out
imul
sahf
fsub
jne
fiaddl
pop
xchg
xchg
js
mov
jecxz
aad
lahf
pop
fcompl
xchg
lcall
fstpl
sbb
ja
xor
mov
xor
or
scas
jo
mov
adc
insb
cmc
lds
enter
lcall
inc
rorb
adc
js
or
data16
lcall
cltd
pop
out
loopne
mov
and
jle
mov
bound
inc
fadd
sbb
xchg
mov
fdivrs
fs
cmp
sbb
aaa
call
arpl
fs
ljmp
sbb
inc
adc
mov
cld
adc
stc
and
leave
or
outsl
inc
lea
or
sub
fisubrl
sub
aaa
or
repz
pop
pusha
add
mov
leave
ss
mov
outsl
mov
xor
lcall
rclb
leave
sbb
xchg
mov
pop
and
pop
mov
jecxz
sub
imul
popa
mov
mov
sub
pop
sub
dec
les
xchg
pop
or
insb
stc
and
stos
or
cmp
shl
ljmp
call
sbb
cmpsl
adc
fcomps
mov
and
fdivp
add
lea
and
xor
in
cld
movsbl
out
jge
in
je
xchg
aas
mov
push
icebp
loope
shrl
adc
mov
push
inc
and
dec
iret
pop
sbb
scas
push
xchg
dec
sbb
or
fstl
test
rcr
test
aad
js
ficoml
scas
pop
push
out
jns
dec
lea
push
call
sbbb
leave
sahf
ret
clc
addr16
jmp
test
push
inc
jns
cmp
lock
or
inc
sarl
mov
or
or
cmp
pusha
icebp
push
xor
dec
adc
cwtl
add
bound
dec
lods
std
and
jae
xchg
dec
xor
xor
xchg
fs
shll
sbb
rcll
jg
adc
jl
into
sbb
pusha
inc
int3
lock
rorb
sbb
lret
push
pop
inc
adc
or
xchg
xor
shll
fucomi
fmuls
dec
mov
fistpll
imul
push
pop
jnp
pop
mov
test
push
fisubl
adcb
andl
xor
mov
lcall
adc
and
je
leave
xchg
xchg
pop
dec
cmpsb
dec
or
ja
hlt
jecxz
adc
jnp
int3
daa
sti
sub
nop
lods
pushf
hlt
dec
mov
dec
outsl
and
in
sub
xchg
pop
movsl
outsb
fucom
das
call
push
sbb
das
cmp
lods
push
rorb
and
add
ret
sbb
in
pop
int3
push
cs
in
cmc
test
mov
mov
movsl
mov
mov
and
push
jb
dec
dec
sub
pop
pushf
pop
push
pop
xchg
popa
sbb
fwait
pop
xchg
imul
mov
inc
ror
adc
sbb
mov
dec
insl
jb
out
inc
out
les
sub
lcall
sti
iret
into
scas
movsb
es
jl
xor
sub
inc
pop
inc
pop
in
sbb
rorl
xchg
ljmp
out
in
fisubs
sbb
xor
repz
push
jmp
les
hlt
xor
ret
mov
jne
sarb
mov
mov
ffree
jp
and
mov
add
insb
mov
fmuls
das
pop
ds
add
call
mov
out
adc
jo
in
sbb
lcall
adc
nop
es
sub
mov
mov
mov
or
pop
stc
lret
adc
xchg
jmp
sub
lods
es
nop
test
popf
xlat
cwtl
xor
sbb
stos
mov
in
out
sbb
call
je
test
pop
subl
dec
xor
mov
or
xchg
pushf
shlb
xchg
ja
push
aas
dec
or
xor
add
and
repz
lock
loope
xchg
add
adc
movsb
imul
xorl
adc
mov
jo
adc
sbb
andl
call
psubsb
push
scas
push
and
dec
xchg
sub
adc
mov
into
jbe
pop
test
jmp
sub
je
and
lds
scas
mull
in
sub
out
stos
xor
mov
cmp
lret
inc
inc
iret
bound
adc
mov
imul
or
jle
sub
xchg
outsb
xchg
imul
inc
push
shlb
mov
sahf
push
popf
inc
call
sbb
mov
xlat
jle
dec
mov
pusha
outsl
loop
cmp
imul
jae
aam
cmpsb
jns
lds
aam
imul
addr16
push
jno
push
out
adc
cmp
pop
sahf
mov
into
jnp
adc
iret
lcall
add
mov
cmpps
mov
sahf
cmpl
fwait
sti
dec
scas
adc
clc
icebp
testb
adc
push
mov
jle
shrb
popa
cmpsl
mov
jle
arpl
in
xchg
popa
mov
mov
jbe
lods
js
pusha
les
fmulp
mov
cmp
ret
in
repz
cld
mul
mov
cmpsl
jo
cwtl
shl
das
push
imul
insb
adc
out
xchg
call
out
cli
mov
add
adc
lcall
das
lret
daa
push
xchg
stos
jmp
xor
mov
jg
clc
jmp
orl
add
sbb
mov
pushf
nop
pop
leave
outsl
push
jbe
push
subl
push
dec
adc
shr
sbb
pop
sbb
cld
test
dec
adc
xchg
iret
pop
cmpsb
mov
xor
mov
xorl
adc
push
js
xor
repnz
cmp
mov
mov
jl
leave
in
cmp
or
sbbb
mov
inc
sub
jns
xchg
nop
push
cmpsl
scas
stos
mov
xor
and
lock
leave
lahf
or
push
lcall
clc
mov
rcrl
mov
mov
popf
icebp
xor
jmp
push
push
fs
and
scas
mov
test
mov
push
sbb
loope
mov
mov
mov
outsl
cmp
scas
jb
mov
pop
jno
scas
add
insb
lcall
loopne
pop
and
push
xchg
in
gs
xchg
jnp
into
cs
mov
mov
mov
ja
pusha
mov
jno
push
test
aam
or
push
or
popa
and
jno
push
mov
and
lret
adc
stos
mov
stc
mov
mov
lea
add
mov
inc
sub
repnz
cwtl
mov
xchg
xorl
mov
push
fcmove
jns
mov
add
out
dec
sahf
gs
xchg
idivb
pop
cmp
loop
push
sbb
cmpsb
nop
add
jmp
cmpl
push
push
pushl
imul
ja
lods
pop
xchg
push
jg
mov
insb
cmp
and
mov
test
fnsave
or
xlat
cltd
dec
faddl
repz
lock
jae
cmp
jecxz
fcmovb
dec
or
fcmovnu
in
cld
jno
mov
rclb
mov
cld
push
pop
test
loope
mov
xchg
std
jnp
pop
pusha
pop
jne
fiaddl
js
cmc
inc
jnp
int3
mov
adc
lock
mov
xlat
mov
call
insb
xchg
lret
adc
sub
and
aas
gs
xchg
ret
repz
jmp
test
jnp
jns
mov
jp
fsub
dec
mov
add
xchg
divl
inc
sbb
scas
out
pushf
lret
jne
mov
ljmp
sbb
sub
sbb
or
mov
or
mov
xchg
rclb
mull
in
or
xor
mov
jns
jge
inc
and
pop
mov
insl
push
roll
mov
lcall
or
iret
out
jge
pop
jl
pop
sti
jae
xchg
mov
jmp
lock
dec
arpl
out
in
pop
out
lret
mov
lret
cs
cmp
jne
sbb
dec
pop
pop
mov
xlat
mov
mov
dec
adc
lahf
cmp
andb
push
xor
in
jl
push
mov
mov
movsl
and
inc
add
cmp
jbe
sub
mov
stos
xor
lds
jo
rcll
leave
jo
cli
adc
out
mov
outsl
aas
nop
push
or
pop
jns
xor
jnp
negb
call
cmp
xchg
push
jecxz
je
shrb
adc
shrl
mov
or
jnp
dec
js
cmp
insb
je
roll
inc
pop
or
cmpsl
mov
cwtl
lock
adc
outsl
aad
outsb
aam
cli
pop
push
lea
iret
mov
push
aam
xor
mov
cltd
repnz
lret
iret
push
jno
aam
xlat
test
and
add
mov
xor
es
xchg
push
sbb
lahf
cld
test
xchg
adc
fsubrs
cmc
add
mov
mov
lock
out
or
pusha
aas
cmp
repz
loop
in
mov
lds
pop
ret
pushf
inc
mov
loop
pop
movsl
fstl
test
es
cmc
lea
fisubl
fucom
sbb
aam
repnz
call
jmp
les
stos
bound
push
test
neg
inc
shlb
aas
aam
cmp
stos
fcmovne
out
ret
inc
ret
fsubrp
ret
shlb
popa
mov
push
lahf
sub
add
xchg
icebp
push
mov
push
fstps
dec
sbb
sbb
jb
mov
clc
cld
ret
xchg
mov
fsts
mov
pop
ljmp
pop
rolb
pop
or
mov
adcl
or
xor
clc
pop
or
rorl
lods
outsb
push
jp
stos
adcb
icebp
xor
inc
rclb
cwtl
test
mov
stos
and
movsl
in
jmp
lods
sub
and
jge
and
mov
jae
jp
orb
insb
popa
push
push
adc
addr16
jge
shrl
lods
pop
xchg
jbe
scas
pop
xchg
xchg
test
xchg
outsb
mov
stos
xchg
xor
cmpsl
lahf
cmpsl
lea
sti
icebp
aas
sbb
push
dec
das
les
push
test
fdivrp
jecxz
ret
adc
mov
imul
dec
sbb
push
jecxz,pn
mov
repnz
xor
mov
dec
ret
sub
lcall
dec
inc
test
pop
andb
mov
push
outsb
jnp
or
stos
das
add
dec
xchg
rolb
mov
sbb
inc
jbe
sub
dec
jne
mov
xchg
dec
fdivrl
inc
sbb
adc
data16
mov
nop
jp
das
add
pop
push
pushf
out
xlat
inc
into
and
in
cmpsb
xor
ret
fdivrs
cs
aas
mov
or
out
push
and
and
sti
jae
push
pop
std
inc
imul
pushf
test
ds
add
ret
hlt
in
lahf
testl
or
sbb
rcl
pop
out
sbb
cld
mov
jb
cmp
ss
lea
cmpsb
xchg
out
push
jg
pop
add
jp
xor
mov
xor
inc
mov
add
cltd
testb
stc
xchg
inc
in
mov
mov
scas
rorl
jle
jnp
pushf
in
mov
xchg
cs
and
mov
pop
repnz
pop
in
sarl
xchg
adc
pop
inc
lahf
repnz
dec
add
dec
and
add
hlt
xor
sarb
push
dec
inc
inc
inc
push
divb
jnp
call
imull
pop
mov
movsl
pop
imul
addr16
dec
jl
and
pop
lods
jae
sub
in
push
sub
xchg
xchg
push
push
fadds
pusha
dec
imul
es
sahf
jmp
jl
fidivrs
cmp
adc
adc
inc
cmp
add
lods
dec
aaa
add
in
dec
imul
jnp
test
mov
sub
scas
js
mov
add
push
outsb
pop
push
cwtl
jmp
call
in
lahf
shl
enter
out
pop
adc
push
mov
lods
xchg
mov
and
dec
movl
hlt
push
pop
push
sub
sub
ljmp
hlt
pushf
lret
ror
pop
mov
sub
dec
stos
push
push
inc
popa
sub
mov
cld
repz
lret
mov
jmp
daa
fwait
imul
xor
jns
lods
hlt
pop
xor
mov
sub
cmc
mov
int
ss
test
leave
inc
mov
mov
pop
add
pop
mov
arpl
fnsave
jmp
sbb
pop
mov
rclb
push
outsl
fmulp
fnsave
ss
lret
enter
stos
cmpl
push
and
xchg
dec
pop
shll
jb
sbb
mov
jg
pop
mov
ss
rep
std
nop
jle
lahf
dec
dec
dec
pop
call
clc
sub
jge
out
sti
outsl
mov
sub
orl
cwtl
jmp
cmp
jb
rclb
movsl
shrb
cmp
ds
cmp
cwtl
sub
jg
xchg
add
and
xchg
aam
cmpsb
pop
or
xor
pop
pop
lds
sbbb
in
mov
out
cli
bound
stc
aam
sbb
in
mov
outsb
lea
push
jmp
enter
jp
xor
xor
mov
mov
pop
lds
insl
cld
cmpsb
rorl
push
mov
adc
out
inc
pushf
dec
sbb
jl
push
sub
jp
ret
aas
aas
jp
shlb
xchg
movl
mov
out
icebp
out
lahf
push
mov
sub
lcall
adc
mov
bound
push
sub
adc
dec
pop
out
jae
pop
aam
loope
lock
xchg
push
mov
popa
je
or
imul
in
cmpsl
into
movsl
cmp
inc
sbb
adcl
lcall
or
cvtps2pi
fstl
adc
lock
leave
mov
cmp
insb
xor
push
xchg
pop
push
testl
dec
mov
adc
mov
xchg
leave
inc
loopne
or
pop
fwait
scas
dec
mov
outsl
pop
push
inc
scas
mov
int
je
mov
popa
sbbb
cmp
or
xchg
push
adc
test
and
pushf
idivb
jecxz
int
popl
add
lret
popf
add
dec
mov
and
scas
into
rorb
aas
sub
loope
out
ds
push
lds
inc
hlt
outsl
push
ret
adc
jp
sbb
push
jno
dec
cmpsb
or
std
push
inc
stos
test
scas
int
adc
out
rclb
mov
jmp
shr
add
rorl
arpl
pop
jns
dec
shl
cltd
dec
invd
movsl
stos
adc
add
inc
push
fs
dec
mov
fisubrs
mov
mov
ljmp
add
pop
mov
lods
pop
xchg
icebp
jmp
dec
addl
dec
pop
xor
mov
and
ret
xor
xchg
ljmp
arpl
xor
sti
int
sahf
cmp
adc
dec
xchg
hlt
fistps
sub
cli
mov
cld
fildll
pop
mov
jb
and
outsl
mov
sub
popa
imul
xchg
lock
inc
das
xchg
cmp
mov
lods
mov
and
and
jo
fistl
fs
xchg
xorb
dec
es
jle
sub
pusha
imul
out
imul
lods
in
negl
fldenv
hlt
insl
fcomip
jo
and
jo
dec
push
lea
and
repnz
aas
pop
loope
xor
cmp
mov
bound
xor
jbe
and
iret
or
scas
inc
add
ja
sub
iret
stos
push
lods
adc
scas
push
shlb
imul
leave
shl
add
ljmp
xchg
cmp
mov
xor
push
cwtl
loope
sahf
daa
out
xor
fsts
adc
das
fmul
cmpsb
fcomps
pusha
fs
lods
scas
lds
xchg
insb
cmc
cmpsl
mov
stos
xchg
adc
pop
out
jo
ljmp
rorb
sub
xchg
aas
shr
sbb
lret
pop
xor
icebp
fcom
test
xor
add
sub
sbb
sub
lock
ret
js
mov
iret
push
mov
ljmp
sarl
mov
fstps
push
fisubl
cmp
mov
pop
icebp
sub
mov
jne
lea
xor
dec
mov
mov
push
and
push
mov
jge
enter
je
dec
ds
cli
mov
adc
fadd
lea
push
adc
xchg
dec
repz
stos
sbb
aam
jb
mov
inc
sub
mov
pop
hlt
lret
lret
sbb
mov
inc
dec
lods
xchg
loope
pop
adc
scas
inc
out
pop
loope
sti
icebp
sahf
jg
repnz
pop
idivb
fstl
cs
int
test
ljmp
sbb
cmpsb
stos
pop
in
mov
adc
movnti
adc
pop
push
jl
gs
rol
pop
push
push
dec
push
mov
pop
int
mov
pop
sbb
insl
mov
dec
xorl
sti
stos
movsb
icebp
aas
pusha
dec
adc
inc
clc
and
in
pop
mov
and
inc
adc
pop
or
clc
push
data16
jge
jno
jb
imul
sub
cmp
outsb
push
mov
pop
std
lods
add
lret
mull
hlt
inc
cmp
fstl
aas
aaa
inc
loope
loope
imul
mov
xor
xlat
mov
jae
mov
pop
jle
shl
sbb
aas
scas
sti
js
cwtl
test
in
fisubl
xchg
lock
push
cwtl
mov
pop
xor
jge
and
xchg
jg
int
pop
sbb
pop
aam
jle
andb
out
pop
iret
mov
jmp
jmp
pop
sub
and
sbbb
sub
lds
ljmp
sar
popf
hlt
xor
sub
mov
sub
fisttps
jmp
sbb
inc
mov
andb
push
lock
mov
or
and
stos
scas
and
insb
adc
sbb
loop
shlb
mov
std
mov
xor
ficompl
test
jle
fisubl
cwtl
bound
xchg
push
je
jecxz
fisubl
mov
out
stc
jns
ds
jge
inc
rclb
das
sbb
push
cmp
push
in
adc
inc
push
mov
inc
mov
sti
push
adc
out
into
sbb
inc
addr16
sarl
sbb
or
ficompl
fdivs
test
mov
pop
movsl
out
lock
pop
outsl
jp
imul
loope
cmp
lret
mov
adc
dec
mov
pop
sub
in
pop
addr16
hlt
js
out
pop
popf
data16
popa
or
mov
push
inc
pop
inc
pop
or
jb
adc
ret
arpl
cmp
neg
std
outsl
push
outsl
icebp
mov
aaa
popl
push
gs
fwait
fwait
xor
hlt
call
push
push
mov
dec
adc
pop
mov
pop
jb
sub
fbld
cli
pop
orb
xchg
add
das
into
fnsave
sbb
mov
ss
aas
ds
test
push
push
sbb
int
or
jmp
inc
ficoml
negl
pusha
inc
sub
pop
cld
add
scas
jmp
call
adc
push
in
decl
adc
sahf
daa
rcrb
sarb
cmpsl
or
stc
lods
shlb
mov
xor
xlat
mov
xchg
scas
push
test
arpl
sbb
mov
jo
int
push
incb
rorb
mov
nop
add
nop
xchg
int3
sub
cmp
mov
insl
rol
rcrb
push
jns
adc
xor
ja
outsb
out
inc
jle
data16
hlt
incb
fcmovb
mov
aad
jns
inc
xor
pusha
fs
cmc
jns
cmpsl
je
dec
push
sbb
addr16
movsb
daa
xor
cmp
jmp
cli
mov
jnp
hlt
sub
jnp
inc
jg
icebp
psubusw
pop
test
iret
fsubp
or
adc
les
fdivrl
pop
aad
lahf
pop
pushf
or
subl
lods
adcb
xchg
es
cs
xor
mov
sbb
dec
sub
and
add
loopne
scas
add
sahf
jecxz
dec
cmp
pop
cmc
push
cld
fs
pop
stc
nop
dec
fists
out
jge
sarl
stc
jle
call
inc
out
jae
push
mov
mov
int
test
add
rol
and
shlb
dec
mov
jp
cli
out
cmp
xchg
ljmp
xor
cmp
inc
and
out
iret
idivl
add
fdivrs
adc
xor
pop
or
test
sub
cmpsl
orl
call
pop
cs
fcoml
add
inc
loopne
mov
fmulp
lcall
add
cmp
je
loopne
pop
jge
push
test
jecxz
repnz
xor
mov
and
or
mov
test
imul
daa
xchg
or
ja
xchg
movsl
int3
popf
lcall
add
test
jp
xlat
cmp
cmp
cwtl
mov
pop
dec
movnti
stos
or
fs
pop
sub
jnp
and
popa
mov
push
dec
insb
loopne
adc
adc
and
cwtl
js
daa
cltd
movsb
clc
mov
aaa
pushf
sahf
insl
mov
int
pop
sbb
out
in
xchg
cli
push
xchg
cli
lcall
sub
push
dec
mov
mov
stos
int3
jnp
rcrl
out
mov
jno
xchg
leave
or
add
test
mov
daa
popa
orb
add
jl
adc
lods
jl
cmp
cmp
pushf
outsb
rcl
mulb
popa
cs
mov
push
xor
fldl
xor
xor
pushf
mov
in
shrb
mov
push
dec
out
das
in
jo
or
pop
mov
lods
adc
test
inc
scas
or
jecxz
jp
test
cmp
and
stc
mov
mov
in
sub
loop
sbb
and
sub
cld
adc
jl
mov
mov
fcompl
sti
mov
xor
inc
mov
std
lahf
mov
orb
sub
jge
push
loop
je
scas
xchg
jne
imul
rorb
sbb
sub
xlat
xor
cmp
test
jge
sub
dec
rorb
adc
leave
lea
outsl
fstp
cltd
cltd
filds
mov
lcall
lods
in
inc
lods
lock
jle
int3
rorl
xchg
add
ljmp
pusha
ljmp
mov
mull
sti
and
jno
xchg
push
loop
lret
sti
cld
sub
pushf
inc
jle
ljmp
jne
aad
scas
xchg
push
inc
mov
sub
aad
shlb
add
cmovg
in
dec
out
test
pop
test
bound
adc
stos
xchg
cmpsb
pushf
or
pop
fistps
ds
push
inc
sbb
dec
fimull
mov
dec
push
loopne
add
dec
loope
sub
jne
sub
test
rdmsr
dec
or
pusha
mov
bound
push
or
mov
mov
dec
scas
mov
popa
sub
sbb
inc
mov
stos
aad
stos
cmp
or
popf
jmp
es
push
lcall
cwtl
add
in
mov
push
fidivs
stos
and
arpl
mov
fadd
cmp
fildll
mov
adc
cli
dec
fwait
jo
push
push
js
push
add
mov
xor
dec
add
lret
xor
or
push
cs
push
add
sbbb
cltd
not
imul
mov
clc
test
and
in
sbb
xlat
nop
xlat
scas
notb
or
flds
sbb
dec
adc
pop
and
scas
sahf
ret
fwait
sub
idivl
jns
pushf
cli
into
xchg
shrb
outsl
pop
pop
dec
mov
enter
cmp
cs
lret
cwtl
stos
or
fwait
pop
rcll
fildl
lret
or
adc
bound
add
and
cmp
sub
jb
in
sti
xchg
repnz
ret
add
adc
mov
and
pop
push
pop
add
add
roll
test
inc
jg
in
xchg
push
mov
adc
imul
aas
loopne
xchg
sub
fmul
xor
insl
and
mov
cltd
sarl
cmc
mov
loop
adc
adc
or
outsl
cwtl
in
and
stos
fwait
sbb
out
mov
into
sub
aas
add
sbb
sti
xchg
lret
sub
mov
jns
pop
jns
cli
add
and
out
xchg
in
push
nop
cli
pop
popa
aam
push
outsl
ret
cld
leave
dec
fcomps
pop
in
imul
sbb
xchg
outsl
out
outsb
testb
pusha
notb
dec
fcomps
xchg
aam
fs
add
xchg
dec
in
cmp
mov
rcrb
ret
loopne
nop
push
push
pop
sub
data16
mov
scas
arpl
and
into
adc
test
jo
in
mov
mov
sub
xor
into
adc
cmpsb
adc
int
inc
adc
jnp
repnz
adc
inc
movsl
sbbb
call
rcrl
aam
aas
stos
add
and
jecxz
xchg
xor
or
mov
aam
movsl
lret
dec
inc
nop
mov
xor
push
xor
xlat
or
les
popa
movsb
and
js
in
push
xor
movsb
push
jb
jns
pop
jb
out
jne
lds
iret
out
push
or
mov
lcall
mov
popa
mov
sub
sub
es
xorb
mov
push
popa
cmp
inc
cmp
pop
xchg
movb
add
cmp
scas
hlt
movsl
dec
into
aam
das
mov
lds
inc
not
adc
std
shrb
mov
push
jp
cld
mov
add
stos
shlb
mov
aaa
pushf
les
repz
lret
xchg
push
cmp
loope
jmp
testl
push
addl
cmc
mov
lods
adcl
inc
and
or
rorl
add
sbb
mov
sarl
jne
bndldx
loop
add
pop
cli
pop
out
imul
cmc
shr
and
mov
loope
mov
push
push
cwtl
jmp
mov
loopne
push
adc
ds
movsb
cmp
jns
cmp
add
pop
mov
pop
aad
movsb
cmpsb
jmp
xchg
sub
xor
push
push
mov
fimull
pop
push
jae
icebp
fimuls
sub
cmp
or
insl
inc
out
aas
xchg
xor
data16
movsl
aaa
mov
pop
lahf
mov
lea
jg
and
mov
ret
mov
loop
in
ret
mov
cs
cmpsl
mov
push
loope
insb
cld
dec
or
inc
lahf
add
lret
inc
cmpsb
sub
xor
inc
fwait
fs
popa
movsl
xchg
mov
and
or
lgs
or
mov
add
mov
dec
mov
lahf
mov
fldt
flds
mov
mov
pop
ds
mov
push
mov
fistl
sti
inc
int3
inc
mov
mov
loopne
data16
cwtl
addr16
adcb
dec
push
jge
pop
in
mov
pushf
add
adc
xchg
sub
xor
int
adc
sub
cmp
sub
cs
mov
pop
mov
or
jle
mov
cli
cltd
pop
insb
sbb
fnstenv
bound
imul
lods
stc
adc
xchg
stos
ljmp
test
dec
xchg
das
shrl
mov
or
or
outsl
push
push
jmp
jl
je
dec
and
fadds
dec
sub
int
stos
or
lret
repnz
and
pop
cmp
pop
sbb
ss
je
cs
push
jnp
sub
pushf
je
or
add
inc
sub
dec
xor
test
lock
inc
or
in
fistpl
pusha
jmp
repnz
arpl
mov
and
mov
rol
icebp
std
ret
inc
test
out
mov
jo
or
leave
scas
cmp
arpl
jmp
mov
pop
clc
mov
mov
xchg
push
mov
in
nop
lahf
inc
sbb
push
cmp
cli
dec
mov
js
xor
fimull
loopne
les
push
xchg
mov
mov
xchg
sbb
pop
lods
fsts
ja
popf
push
mov
mov
aaa
test
push
out
ret
pop
jno
xchg
orl
mov
int
jbe
or
rcrb
adc
test
xchg
pop
and
jmp
push
jmp
inc
xchg
inc
and
adc
adc
sbb
mov
test
fnstcw
loope
lods
movsb
repnz
insl
insl
pop
mov
sbb
mov
sahf
jge
jnp
xor
mov
adc
inc
mov
int3
idivb
cmp
mov
in
xor
ljmp
xchg
xor
cld
ss
nop
pop
adc
cmp
not
adc
cmc
hlt
adc
inc
mov
and
dec
fldl
pop
cmp
mov
cmc
dec
loop
add
addr16
out
repnz
mov
fwait
push
insl
adc
sub
pushf
dec
lock
cmp
andl
sub
and
cli
cltd
ret
xchg
adc
dec
and
adc
push
lods
leave
pop
nop
andl
inc
stc
dec
lock
and
jg
sahf
or
xchg
push
sbb
imul
cmc
push
sub
inc
loope
xchg
call
or
mov
mov
and
bound
and
push
cmp
bound
ja
test
sbb
mov
pop
stc
outsb
andl
stos
mov
sbb
mov
sti
adc
repnz
and
out
es
mov
sub
cmpsl
push
adc
dec
notl
or
fs
arpl
xchg
push
stos
insb
mov
mov
xchg
cmpsb
fisubs
sahf
fcoms
stc
dec
fst
xchg
adc
push
inc
mov
test
int
push
jbe
shlb
mov
push
mov
mov
lods
imul
xor
je
int
sbbb
jbe
hlt
daa
inc
cmpsl
push
sbb
and
icebp
or
cmp
shl
add
jbe
cld
and
inc
stc
sub
push
stc
cs
and
dec
into
loope
mov
dec
lock
xchg
mov
mov
cmp
ds
dec
pop
idiv
je
add
sub
into
mov
js
outsl
add
and
jle
test
jo
aam
mov
push
or
int
loopne
stc
mov
cwtl
cmp
or
fsub
jp
jnp
xchg
or
add
in
add
xor
xchg
xchg
nop
xchg
ss
andnps
xor
lahf
scas
lret
mov
cmpsb
fiaddl
pop
xor
mov
cmp
pop
pop
pop
or
ss
dec
jae
mov
les
sub
push
add
lea
jle
push
ret
mov
sub
mov
out
xchg
xor
popf
repnz
pop
and
pop
aam
rcr
loope
mov
lahf
xchg
pop
dec
add
add
jae
fimuls
in
mov
ja
adc
iret
pop
les
ret
inc
jmp
into
jo
scas
mov
and
shrb
std
mov
or
sub
and
inc
sub
rcr
mov
xor
sub
lock
mov
jmp
cli
in
inc
inc
repnz
ret
inc
mov
out
test
add
imul
fstpt
ja
je
lods
mov
sbb
sub
jecxz
jge
mov
push
xor
lret
andb
ficoml
inc
xor
inc
cmpsb
mov
jg
push
inc
addr16
xchg
add
cmp
cmp
cld
daa
loopne
lods
jns
es
negl
js
lcall
xor
iret
or
add
bound
scas
mov
jge
movq
jge
pop
sbb
xor
cmpl
push
adc
fildl
aam
fidivs
icebp
pushf
lcall
cmpsl
popa
sub
and
push
repnz
pop
pop
xchg
mov
lret
sahf
adc
and
and
les
mov
xchg
pop
add
mov
in
xchg
rcll
div
sbb
push
mov
xchg
jb
xor
pop
push
dec
dec
jo
adc
xchg
pop
pop
cli
push
sub
dec
stos
cs
pusha
dec
in
shll
push
lret
movsl
ficoms
add
outsl
jo
cmp
push
rcrb
and
xchg
insl
popf
push
cmpsb
add
call
test
xchg
xchg
jge
mov
cmpb
insl
dec
push
mov
aas
xor
pusha
lahf
test
pop
je
cmpsl
pop
das
lea
leave
sub
mov
pusha
mov
mov
jp
jns
inc
xor
stc
daa
mov
test
call
call
fldl
pop
mov
enter
sub
repz
sbb
sbb
jne
out
rolb
out
mov
mov
xchg
dec
or
hlt
frstor
ds
pop
mov
aad
std
repz
repz
cld
imul
sbb
and
jo
je
nop
fisubrl
mov
fcompp
push
jecxz
movsb
rep
divl
jge
fstl
xor
adc
outsl
mov
scas
mov
scas
mov
test
lcall
adc
push
xchg
mov
mov
aaa
std
xchg
push
dec
jbe
lcall
lea
add
imul
xor
out
jmp
add
ds
inc
ss
mov
sete
lods
adcl
scas
xor
mov
jecxz
rcr
loop
mov
fstl
movsl
add
mov
push
push
ret
hlt
sub
dec
jno
dec
jmp
inc
pslld
mov
iret
xchg
xor
movsb
outsl
jmp
dec
addr16
push
jns
imul
in
fisttpl
lods
cld
repz
jae
in
in
mov
jno
xchg
in
in
mov
dec
pop
jle
loope
gs
outsl
sbb
or
add
jns
cmp
in
mov
mov
jecxz
mov
les
jp
out
or
cwtl
pop
int3
dec
in
aas
loope
cs
dec
test
in
test
faddl
xchg
test
scas
out
mov
jb
pop
test
xor
cmpsb
push
jbe
push
shl
leave
fsubr
dec
ss
sarb
lcall
arpl
ds
adc
mov
ret
dec
cmp
fxch
or
xor
dec
or
add
scas
addb
addb
mov
adc
cmp
inc
andl
xor
mov
fcompl
pusha
mov
adc
push
mov
stc
scas
scas
xchg
lock
in
adc
pop
mov
dec
xorl
repz
mov
push
aas
cld
push
mov
jle
rcrb
in
dec
cwtl
shrl
mov
ja
rcll
push
insl
ret
sbb
outsb
inc
aad
mov
jno
jmp
add
shl
scas
jmp
push
mov
aaa
cmp
pop
dec
nop
and
adc
enter
xor
sbb
fwait
mov
cmp
mov
or
jmp
jns
fsts
roll
xor
mov
lgs
movsb
or
rorb
sub
push
mov
jle
sbb
add
cmpb
xchg
shrl
cmovno
fildl
cmpl
push
mov
push
jge
jbe
xchg
jmp
and
and
and
hlt
leave
lods
and
ja
lcall
cmp
div
mov
xchg
test
fwait
add
fsubrp
jg
ss
lahf
sbb
mov
ret
fsubs
xchg
pop
cmc
push
sub
pop
pop
mov
sub
fwait
or
xchg
cmp
sub
mov
sub
ja
in
dec
lahf
push
ss
flds
jl
lods
cmp
mov
jns
add
insb
cmp
and
subl
bound
sub
sub
mov
pop
sub
pop
inc
xor
in
out
pop
jo
cltd
xchg
pop
cmpsl
dec
pop
int3
cmp
roll
fs
repnz
ss
mov
mov
movb
cmpsb
inc
stc
in
push
aas
push
mov
mov
add
div
cmp
fsubl
mov
jae
xor
rcrl
inc
adc
pop
mov
xor
push
popf
outsb
pop
xchg
jno
lcall
test
sub
inc
leave
je
xlat
xchg
lods
popa
pop
out
lds
roll
div
xor
mov
insl
rorb
scas
je
xchg
cmp
mov
sbbb
sbb
inc
loop
sahf
sbb
in
aas
dec
iret
cmp
into
ds
sbbb
dec
or
lods
repnz
hlt
adc
mov
gs
fstps
int
mov
daa
mov
push
mov
cmp
xchg
sbb
fdivl
mov
pop
and
imulb
jecxz
jno
in
int
and
nop
xor
imul
fidivl
mov
sbbl
add
inc
mov
pushf
pop
push
push
stc
jnp
test
lods
xor
xor
jecxz
adc
mov
add
and
cli
mov
fildll
in
hlt
mov
mov
jne
push
test
mov
jne
mov
lret
nop
mov
lods
dec
jns
das
adc
rcll
mov
les
dec
cld
cwtl
ljmp
sbb
mov
jle
loope
xchg
insl
mov
push
adc
popa
xchg
js
scas
inc
xchg
and
lcall
mulb
dec
and
in
and
insl
dec
inc
or
add
outsb
pop
dec
loopne
sbb
lcall
out
jge
xchg
sub
or
add
ljmp
jno
pop
sub
aas
sarl
mov
movsl
test
rclb
les
nop
in
lret
ljmp
aas
mov
mov
addr16
rclb
loopne
sbb
shr
xor
cmc
push
enter
into
mov
sbb
adc
leave
mov
negb
adc
adc
test
in
add
jmp
shl
inc
xor
cmc
jmp
adc
sub
cmp
inc
sbb
mov
mov
and
enter
mov
fcomp
push
mov
mov
popl
pop
mov
aam
lds
and
xchg
cmc
inc
push
nop
push
sbb
pusha
ds
lock
mov
ljmp
sahf
in
push
mov
xchg
into
test
pusha
jg
and
js
and
rcll
subb
mov
dec
mov
and
insl
adc
das
mov
jge
fbstp
lds
lret
daa
jmp
outsb
jl
mov
push
xchg
or
test
popa
pop
mov
xchg
dec
fnstenv
movsl
daa
arpl
gs
fistpl
xchg
pop
fadds
lods
or
lcall
sahf
negb
clc
repz
dec
pop
inc
pop
test
or
jo
add
mov
rorl
push
repnz
adc
and
imul
fbstp
xchg
call
fucomp
mov
xchg
mov
cld
add
cli
or
xchg
out
stos
gs
in
mov
or
or
mov
pop
stc
leave
inc
rorb
add
call
xlat
fisttps
pop
add
xor
jae
jbe
insl
push
in
es
clc
pop
xadd
cld
clc
pop
sarb
sub
mov
inc
loop
insl
mov
push
dec
ret
and
push
test
rcr
pushf
xchg
sbb
sarb
cmpsb
dec
or
je
sbb
shr
rcl
pusha
mov
jecxz
inc
test
mov
mov
pop
enter
fwait
mov
xorl
pushf
or
iret
xchg
pop
push
cltd
dec
fisubrl
movsl
loopne
jo
jg
sahf
mov
outsb
fsubp
push
clc
jle
mov
pop
mov
xchg
lock
mov
in
sub
pop
mov
rcl
in
or
xchg
cmpsl
dec
xlat
mov
faddl
xor
jmp
jae
jb
jb
ss
pop
and
rorb
xchg
adc
mov
xchg
and
scas
fwait
xchg
test
xor
mov
stos
jg
mov
push
xchg
mov
jne
sub
cmp
sti
outsb
sti
dec
add
push
push
jae
repnz
lcall
idivl
xchg
adcb
push
sahf
adc
in
push
mov
inc
es
out
cmovo
clc
push
xchg
sti
rorb
adc
add
std
sbb
sbb
hlt
cmpsb
sbb
add
xchg
sub
dec
inc
pushf
fsubs
pop
test
mov
mov
adc
jo
lods
inc
test
loopne
lods
jmp
ret
popf
fcmovnu
addl
mov
adc
pop
dec
and
aas
aam
repz
or
mov
cmp
movsl
xchg
dec
lds
adc
push
cmp
lods
jb
or
push
or
dec
fwait
jns
ja
adc
inc
pop
mov
lret
push
insl
movsl
cld
dec
lock
cmpsb
jge
sbb
push
andl
sub
fnsave
shrb
push
pop
in
adc
add
add
or
xor
pusha
jg
flds
mov
mov
rclb
jmp
insl
cmp
and
mov
enter
int
jnp
aad
xor
mov
xor
lahf
shll
jp
shlb
or
mov
mov
subb
into
movsl
mov
pop
inc
imul
hlt
lds
xchg
pop
push
cltd
inc
cmpl
das
jmp
jne
cli
push
adc
cmp
in
dec
insl
xchg
lea
popf
out
loopne
cmpb
rol
inc
sbb
mov
das
pusha
ss
clc
and
lcall
sbb
in
call
xchg
jl
cmp
jno
mov
pop
sub
push
fidivl
ss
or
mov
mov
out
shl
loope
push
fs
clc
mov
pop
cwtl
cmp
adc
pop
in
jg
xor
int3
dec
jle
lret
repnz
xorl
sub
push
into
lcall
cwtl
int
inc
pop
fsubl
pop
pusha
mov
mov
loope
fidivs
clc
cli
xchg
mov
hlt
shll
pushf
xchg
outsb
filds
inc
shll
iret
inc
es
adc
push
mov
repnz
jecxz
jae
xchg
sti
imul
icebp
ja
loopne
push
imulb
daa
popa
fwait
mov
sub
mov
fidivl
stc
push
push
pop
cmp
push
movsb
aad
in
fstpt
scas
mov
jns
shl
dec
stos
dec
dec
jns
jo
ja
loop
sbb
mov
mov
sub
data16
pop
sub
sti
test
out
lret
test
xchg
rcl
fcmovnbe
inc
cmc
xchg
enter
popf
push
int3
or
mov
test
inc
in
jp
outsl
mov
rcll
xlat
push
sub
mov
in
loop
cmp
xchg
in
push
stos
xchg
mov
idivl
nop
hlt
aas
mov
stc
inc
jbe
popa
lods
sbb
repz
mov
push
popa
xchg
cmc
mov
add
stc
cmp
ret
xlat
sub
dec
fldl
scas
or
pop
adc
adc
shrb
lea
xchg
mov
cmp
jp
lea
ljmp
mov
inc
mov
inc
shrl
movsb
push
das
in
aad
cwtl
sub
std
cmp
js
mov
cmpsl
cmp
pusha
push
xchg
push
fidivrs
jecxz
inc
pop
inc
sub
jae
mov
stc
sbb
aas
inc
dec
jno
imul
cmpsb
or
sbb
pop
push
je
dec
adc
in
lock
cld
or
ljmp
imul
negb
xchg
xchg
jne
cmp
push
pushf
loop
push
xchg
leave
movsl
pop
ss
xor
pop
jge
jecxz
adc
int3
lcall
mov
pop
jo
pop
imul
dec
cltd
scas
adc
mov
jb
dec
aaa
xor
jp
push
and
shrb
test
cmpsb
es
jp
xchg
xchg
mov
cmp
inc
jg
or
call
or
push
jle
push
xorb
lret
mov
push
and
inc
insb
xchg
jno
flds
scas
pusha
icebp
fildll
mov
and
insl
pop
int3
push
test
sub
imul
mov
mov
cli
cmpsl
loope
inc
lods
or
jge
lret
cmp
mov
inc
xor
jnp
xor
jg
cwtl
inc
jge
xor
push
mov
pop
int3
mov
clc
sbb
lret
js
push
pop
mov
and
add
cmpsl
jp
jge
call
into
jo
xor
test
pop
lods
hlt
test
addr16
sar
pusha
sbb
mov
dec
sarl
cs
int3
pop
xor
test
jge
push
int3
daa
xchg
into
and
mov
lahf
ss
xchg
mov
icebp
fs
pop
decl
xor
jecxz
inc
out
sub
addr16
mov
ds
je
dec
sti
ret
sbb
xor
xchg
push
push
shll
cli
and
sti
mov
sbb
pop
lret
push
mov
ds
push
or
and
call
inc
movsb
fsubrp
notb
clc
jl
jbe
out
mov
sbb
or
cmp
scas
jne
dec
out
or
jge
push
cwtl
mov
lret
out
cmp
icebp
sub
xchg
jnp
cmp
sub
push
mov
repnz
lock
lret
jmp
mov
nop
or
xchg
jns
sti
lea
shr
vpand
fistpll
or
in
jge
data16
xchg
mov
daa
mov
add
sbb
lds
scas
popf
pop
jge
clc
add
sub
pushf
inc
mov
mov
mov
jne
jge
test
icebp
pcmpeqd
jne
mov
xchg
clc
pusha
cmp
cmp
int3
outsb
mov
scas
jae
stos
out
xchg
mov
stos
xor
popf
or
mov
xchg
cmp
cld
punpckldq
mov
sbb
jbe
test
cwtl
xchg
xchg
lds
loop
clc
dec
rorb
fisttps
lods
enter
pop
sti
mov
data16
push
int
jl
push
rcrl
ret
lahf
cmp
cmpsb
ljmp
jge
cmp
test
jne
shll
and
jmp
mov
pusha
sbb
push
std
push
or
xchg
int
les
sarl
xor
leave
testl
cli
les
and
ss
mov
movsl
fiaddl
loopne
in
or
das
jb
lret
repz
test
lods
mov
mov
xchg
fisubs
dec
imul
loopne
xchg
out
in
ret
xchg
scas
lahf
insl
or
push
jnp
icebp
push
cli
ret
dec
out
pop
repnz
movsl
mov
mov
pop
idivb
in
jo
jmp
rolb
pushf
xchg
mov
sub
lret
lret
sbb
or
lds
fidivrs
sub
fnstsw
loopne
pop
push
jmp
xchg
or
es
jae
sbb
xchg
mov
movsb
mov
jmp
nop
jae
out
popf
adc
jae
arpl
fwait
test
mov
mov
mov
jnp
outsb
inc
adc
fstl
loop
fidivs
mov
jmp
pop
mov
adc
and
xchg
cmpl
xchg
inc
int3
add
sbb
popl
data16
cld
jno
repnz
test
lret
sbb
aaa
xlat
or
pop
or
pusha
push
fcoml
pop
cmp
call
inc
in
inc
in
mov
je
scas
dec
dec
cmp
dec
cmp
mov
xchg
ds
mov
mov
insl
or
xchg
dec
les
pop
pop
or
push
cld
mov
in
push
cmp
sbb
inc
aad
ja
repz
pop
jbe
sbbb
sub
data16
push
pop
pop
cmp
cmp
push
mov
push
js
xchg
decl
dec
fwait
cmp
adc
sbb
dec
pop
push
lret
adc
adc
adc
sub
out
sub
mov
stos
iret
rep
in
or
je
pusha
sbb
enter
push
mov
hlt
xchg
cwtl
mov
adc
sub
jecxz
js
outsl
dec
adc
into
add
add
pop
hlt
lahf
sbb
push
stos
test
test
inc
mov
jae
repz
sbb
dec
xor
js
testb
mov
sti
mov
subb
testb
insl
or
sbb
cld
insl
addb
std
leave
mov
dec
adc
cmp
fistps
mov
push
iret
pop
dec
lahf
xor
sbb
jg
adc
inc
loope
jle
jmp
loop
inc
inc
fucomip
xchg
xor
mov
mov
imul
test
push
jp
in
push
ss
sbb
ljmp
sbb
mov
cmp
ds
inc
fistl
mov
inc
stos
insl
dec
inc
jmp
std
xchg
and
cld
push
push
xor
daa
lret
jbe
fst
in
outsb
js
jo
scas
mov
iret
sub
dec
ss
cmp
icebp
push
in
in
dec
in
test
andb
lret
bound
or
je
dec
ljmp
cld
rcr
xabort
sbb
imul
inc
mov
pop
inc
and
pmaddwd
ficompl
push
jae
xor
in
and
pop
dec
test
pop
or
push
mov
mov
imul
ficomps
sahf
add
mov
add
sbb
aaa
sub
rol
push
cmc
cmpsl
sub
lcall
lahf
lahf
xor
sbb
dec
sub
mov
xchg
pop
rclb
push
cld
es
sub
test
bound
mov
repnz
or
les
test
jb
lea
pop
popa
push
jno
jg
add
test
push
adc
and
repz
test
movsb
adc
lods
jae
or
sub
pop
clc
mov
push
clc
mov
mov
mov
loope
jne
adc
jle
lret
mov
clc
lods
xor
sub
dec
fdiv
cmpsl
fcmovnu
push
test
jmp
orb
divl
add
jge
mov
imul
mov
lods
outsb
jnp
or
mov
add
je
push
add
and
loop
cwtl
lods
lods
hlt
cmc
push
pop
xchg
pop
iret
aad
arpl
xor
gs
push
cmpsb
mov
mov
cmp
je
aad
xchg
cmpsl
mov
outsb
or
push
mov
inc
mov
ja
dec
push
mov
xchg
and
sub
sbb
mov
jmp
notb
pop
rcl
cmp
mov
andl
vmwrite
mov
inc
repz
jns
push
cld
mov
ret
inc
test
mov
and
pop
sub
fiadds
hlt
or
stos
inc
dec
gs
cltd
daa
fidivrs
sbb
inc
xchg
push
in
out
mov
dec
addb
scas
jmp
and
fisttpll
or
dec
mov
mov
ret
sbb
int
mov
push
sub
test
xchg
rcrb
push
outsl
insb
inc
rorb
leave
jl
fs
fmuls
sahf
iret
sub
cmpsb
jns
mov
cwtl
fldl
or
mov
out
stc
mov
ret
push
fdivl
sbb
lods
inc
mov
das
ret
insb
cmp
js
xchg
popa
sbb
clc
ss
mov
pushf
scas
std
xchg
scas
gs
pop
adc
xor
mov
add
fwait
popf
mov
sub
mov
fs
and
cwtl
popf
sbbb
mov
adc
faddp
jne
cmp
stc
xchg
jp
es
fsts
push
or
cmp
dec
pop
xor
adc
lods
adc
jo
jno
mov
loope
or
cli
std
in
add
fwait
shlb
enter
mov
mov
rclb
or
cmpsl
pushf
std
icebp
fdivs
sti
lds
call
dec
in
add
popa
rclb
jecxz
or
test
mov
jbe
in
cmp
push
shll
jmp
xor
sbb
shll
fstp
les
dec
sub
sbb
es
std
pop
xor
jo
iret
out
mov
bound
sbb
pop
mov
sti
pushl
push
dec
mov
inc
cld
je
dec
sub
mov
xchg
mov
inc
mov
loope
pop
add
sbb
faddl
mov
pop
sbb
sub
add
in
sbb
add
jecxz
aad
fisttps
bnd
adc
push
add
insb
into
adc
or
xchg
sbb
pop
jns
clc
jg
push
mov
mov
out
cmp
mov
inc
loop
or
or
lds
daa
test
xchg
popa
ret
xchg
div
mov
pop
sub
pop
sbb
pop
cwtl
int
pop
movsb
and
fldcw
mov
ja
lret
out
cld
hlt
and
mov
xor
test
or
jl
add
or
pop
xor
xlat
pop
test
mov
xchg
aaa
xchg
loopne
int3
xchg
pop
push
dec
fcomp
in
rcl
loopne
sbb
and
jmp
int
xlat
or
cmp
mov
mov
insb
mov
lret
jb
pop
and
push
sti
shl
int3
jecxz
push
ds
mov
and
aas
addr16
cmpl
inc
sbb
outsl
and
mov
push
sti
das
gs
pop
mov
sbb
hlt
test
js
add
mov
xchg
lcall
lea
mov
mov
frstor
cmp
lcall
pop
or
clc
pop
lcall
mov
mov
iret
repnz
mov
mov
pop
pop
outsb
dec
mov
aas
push
test
xlat
icebp
imul
adc
mov
pusha
or
jnp
fnsave
sub
add
inc
push
pop
dec
push
insl
pop
and
ret
sbb
loopne
sbb
jg
sar
rcrb
mov
movsl
in
dec
pop
popa
pop
mov
jb
mov
sbb
or
es
pop
mov
testb
shll
sub
pop
mov
movsb
xlat
adc
push
push
mov
loop
inc
xchg
dec
cmpsb
fildll
in
mov
adc
cmpsb
jo
add
dec
nop
or
in
into
sbb
inc
mov
and
es
mov
lret
sahf
negb
mov
loope
pop
int3
cmp
sti
cwtl
repnz
jo
insb
inc
xor
jge
sbb
ja
push
xchg
xchg
adc
dec
lds
lods
in
je
xchg
sahf
lahf
cld
cmp
movsb
xchg
sbb
mov
ret
mov
dec
dec
mov
out
mov
scas
imul
xor
jp
stos
push
inc
subb
stos
dec
xchg
outsl
mov
or
scas
sub
jmp
das
and
hlt
fadds
and
lea
dec
or
pushl
ret
iret
mov
and
cli
pop
std
movb
mov
pop
mov
sbb
pop
in
dec
inc
outsl
lock
dec
lret
or
sbb
cld
test
popf
push
repnz
fimuls
push
lcall
lahf
sbb
aad
daa
sub
out
lahf
and
in
inc
imul
test
or
loopne
and
or
inc
in
and
xchg
dec
push
add
pop
shll
jecxz
xor
movsl
pop
aas
push
dec
push
iret
maxps
pop
dec
aas
enter
mov
or
add
test
dec
jae
ret
scas
enter
in
iret
imul
pop
mov
in
xchg
mov
sbb
mov
rolb
in
jne
xchg
lock
shrb
adc
jg
xor
addr16
sub
and
add
test
rorb
jmp
aam
fcmove
fsubp
fdivrp
cmpsl
lock
loop
jo
in
movsb
push
push
cmp
add
repnz
jno
arpl
sub
push
mov
inc
and
jne
add
pop
sti
sbb
or
int
iret
add
loope
mov
xor
cld
js
adcl
jle
cmp
clc
fidivs
mov
in
jns
push
cs
neg
cmpsl
adc
fcoml
btc
bound
jmp
dec
inc
lods
sbb
scas
dec
sarb
aaa
js
cltd
mov
mov
fdivrl
lock
xchg
mov
mov
call
test
ss
mov
jno
push
inc
ffree
adcl
rcrb
inc
test
test
xchg
dec
mov
or
shll
test
rcrl
imulb
dec
or
cmp
adc
and
mov
fidivs
shlb
mov
aaa
bound
push
into
dec
pop
mov
es
cmpsl
sti
scas
sbb
es
mov
fnstsw
leave
shr
lahf
out
push
out
and
pop
push
and
out
sahf
mov
xor
addl
add
js
mov
es
or
fwait
xchg
mov
cld
dec
sbb
lret
push
or
repz
aaa
pop
jns
mov
hlt
mov
jl
cmp
add
sub
cmp
inc
call
andb
mov
rcr
clc
add
xchg
jb
ds
ss
jecxz
push
sahf
xchg
test
inc
and
xchg
inc
and
ss
les
mov
pusha
sahf
xchg
adc
xor
inc
dec
add
cmpsl
leave
in
sub
inc
or
push
inc
dec
int3
jnp
mov
sbb
sbb
or
pop
mov
popa
jo
test
mov
xor
mov
rcrl
sbbl
cmp
mov
fnstsw
inc
mov
xchg
dec
jno
and
cwtl
clc
sub
mov
sbb
mov
imul
movsl
mov
subb
push
or
push
inc
add
test
pop
stc
data16
sub
mov
inc
fnstsw
push
das
dec
mov
or
addr16
sbb
aam
pop
push
adc
mov
lds
push
sbb
mov
js
out
cmp
mov
cmp
scas
mov
inc
jo
add
sub
gs
jns
stos
jle
cmc
test
fistpl
rolb
pop
jge
push
cmpsl
enter
inc
adc
and
hlt
cmc
mov
mov
xor
jmp
inc
repnz
mov
mov
shl
jo
mov
scas
cld
sbb
jmp
xchg
and
mov
popf
mov
nop
ds
adc
arpl
sub
xor
jbe
dec
jb
daa
dec
mov
loope
jns
je
rol
inc
or
les
js
inc
je
int3
shll
cmp
or
mov
pop
in
jp
sahf
mov
push
push
jp
rcrb
test
xchg
sar
xchg
lcall
dec
push
sarb
int3
loop
and
ret
test
scas
push
mov
nop
xor
es
mov
out
or
mulb
mov
inc
mov
jle
push
push
xor
test
and
lods
jl
mov
dec
inc
lds
xchg
xor
mov
xchg
jnp
movsb
cmp
sub
pusha
stc
dec
enter
adc
inc
mov
cmpl
lods
cmc
pop
add
xchg
inc
inc
jno
or
sub
stos
jnp
xor
js
push
cs
iret
xor
mul
adc
cs
inc
imul
pop
sub
dec
testb
sub
jge
ss
rclb
xor
add
mov
movsl
popf
jb
dec
adc
mov
sarl
mulb
push
scas
aas
lea
mov
and
out
mov
loop
movsb
arpl
mov
inc
sbb
jp
nop
out
popa
push
dec
mov
inc
movsb
xor
push
andb
mov
nop
jmp
fdivs
fcmovbe
xor
lret
cmp
test
movsl
leave
rorl
mov
scas
jge
insb
and
jbe
enter
inc
mov
jae
call
cli
push
add
movsl
les
dec
ret
aas
fistpll
out
repnz
sahf
subb
lea
stos
push
dec
aad
add
repz
fcoms
dec
out
jnp
pop
xor
test
pop
xor
scas
pop
stos
lock
loope
cmc
push
mov
or
cmp
int
pop
jmp
push
xchg
and
dec
loopne
aad
mov
xchg
add
dec
in
or
fmull
mov
enter
inc
push
lock
ds
les
sti
fcompl
inc
pop
les
rcrl
mov
jns
or
mov
sbb
fwait
rorl
sub
std
mov
push
mov
scas
rol
sbb
repnz
adc
xor
push
mov
push
imul
test
adcl
jle
adc
movsl
stos
add
and
xor
jnp
sub
cli
test
jae
in
add
xchg
out
mov
dec
jae
mov
cmp
sbbl
les
jg
xchg
ret
xchg
js
mov
xchg
mov
scas
cmc
dec
or
mov
fsubp
adc
push
pusha
push
sahf
shrl
inc
sbb
sahf
fcoms
loop
cld
enter
sub
add
mov
ds
push
mov
pop
dec
inc
cmp
lods
mov
mov
mov
dec
add
jp
mov
or
push
outsl
shll
pop
fdivs
cmp
stc
or
rcrl
dec
inc
or
test
test
imull
add
nop
lods
inc
test
mov
aaa
stos
test
pushf
sti
fs
gs
pop
and
push
sub
jecxz
mov
pop
test
push
je
jnp
bnd
xor
in
push
lahf
icebp
xor
aaa
adc
jge
lea
pop
and
iret
cld
xchg
xor
sub
les
cltd
data16
pop
cwtl
xor
stos
mov
fimuls
cwtl
es
mov
sub
push
adc
fistl
lahf
cwtl
jae
inc
mov
mov
mov
js
dec
mov
jno
mov
arpl
push
mov
lods
push
mov
das
dec
lock
mov
cmp
inc
jmp
lret
and
mov
mov
sub
xor
mov
push
mov
iret
cmpsl
bound
add
push
ljmp
inc
adc
pop
or
xchg
pop
cmc
xor
out
mov
sub
in
int3
mov
pop
pop
or
adc
inc
dec
shrl
stos
imul
pop
sbb
sbb
loope
mov
sub
stc
xchg
jg
pop
push
scas
jno
cmp
xchg
jmp
out
mov
sbb
inc
mov
jl
jmp
xchg
jecxz
adc
mov
jb
mov
mov
pusha
outsl
movsb
xchg
jle
push
adc
or
cmp
pushf
pop
dec
mov
je
loopne
sbb
xchg
adc
cmp
xchg
movsb
xchg
out
ret
fistpl
dec
lods
insb
adc
cmp
inc
daa
mov
ret
imul
sti
cld
daa
cs
cmp
in
sbb
dec
outsb
xchg
mov
jns
inc
mov
gs
mov
les
jo
sarl
das
pop
vandps
mov
les
adc
add
add
fists
and
xchg
xchg
rcr
std
mov
out
and
or
adc
dec
loop
lods
sbb
sub
sub
mov
insb
cmp
jmp
out
int
inc
adc
imul
mov
inc
cmpsb
fld
mov
pop
mov
sbb
dec
jns
inc
jbe
sbb
cmp
sbb
lea
sbbb
shrb
out
sbb
imul
inc
lods
mov
push
std
cmp
in
rcrb
mov
pop
jge
cmp
stos
mov
mov
packuswb
in
cmc
rolb
adc
push
push
nop
sub
xchg
pop
lods
jle
push
sub
xchg
fmul
ret
add
jne
js
inc
inc
xchg
inc
fwait
iret
xchg
fbld
nop
inc
sbb
shlb
insl
cwtl
mov
movl
xor
into
and
sub
fcoms
xchg
std
sahf
rcrl
xchg
xchg
push
gs
call
xor
xor
js
loopne
push
jl
lret
cmp
inc
movsl
cmp
sub
xchg
ljmp
int3
sbbb
std
push
xchg
or
cmpsl
mov
ret
arpl
jnp
push
cmp
fs
jecxz
pop
inc
wrmsr
push
dec
push
xchg
mov
stc
pop
dec
adc
mov
imul
inc
cmpsl
les
or
aad
sub
aas
cmp
mov
aam
mov
test
xorl
lcall
mov
jg
push
push
hlt
pop
mov
add
and
outsb
mov
mov
das
jns
pushl
mov
fwait
and
sar
fdivr
cwtl
ds
aas
push
push
dec
fcoms
xchg
xchg
cmp
push
mov
jo
and
out
dec
inc
jno
push
cmp
insb
fdivrl
add
lcall
push
dec
xor
mov
fs
rcll
cmp
jae
int3
and
pop
xchg
or
xor
mov
inc
call
sub
imul
out
jns
scas
gs
adc
cmpsl
mov
out
outsl
dec
adc
sub
adc
sub
adcb
mov
xchg
repnz
dec
aad
fimull
shr
pop
orb
ss
lret
popf
test
jb
mov
ljmp
cmc
pushf
xchg
les
sub
mov
dec
cmp
js
cmpsl
dec
roll
dec
inc
dec
ffree
aaa
pop
inc
mov
adc
nop
add
in
mov
test
pop
fidivrs
out
icebp
in
sarl
push
in
shlb
dec
das
movsb
add
loop
inc
add
sbbl
push
arpl
adc
inc
outsl
aam
test
out
inc
movsl
aad
stos
shl
adc
fcmovnb
fistpl
fwait
jl
add
jmp
hlt
nop
sub
outsb
lret
and
fs
xchg
cmp
ljmp
mov
cmp
add
mov
les
repz
ret
popa
fimuls
jge
mov
adcl
iret
cmpsb
jno
push
out
push
js
pop
ds
incl
push
lret
or
insl
pop
cmp
jbe
popf
cmp
cmp
xor
and
mov
clc
gs
out
aad
shl
cmp
leave
lahf
clc
xchg
add
push
ljmp
popa
loope
sahf
ret
pop
ljmp
repnz
lods
fiadds
out
adc
fucom
bsf
push
pop
cmp
shrb
and
mov
or
jbe
lds
das
push
push
jno
add
scas
iret
push
push
mov
adc
loopne
lods
ss
fcmovbe
int3
jl
xor
sbb
nop
lret
sbb
inc
pop
mov
sbb
jno
jp
or
xor
xlat
fstps
adc
pushf
adc
pop
lods
test
adc
jg
mov
loop
sahf
adc
jno
icebp
addr16
adc
mov
arpl
std
push
and
adc
in
push
data16
sbb
lret
mov
std
push
mov
jp
push
imul
sarb
ret
add
shlb
lahf
mov
addr16
out
pop
and
cmp
jns
std
mov
cmc
shrl
mov
sti
int3
popl
jbe
mov
jecxz
popf
movsb
jg
xchg
ret
or
cmc
ret
fdivs
pop
aam
inc
lods
in
repz
push
inc
mov
xor
xor
aas
in
cmp
mov
mov
mov
mov
leave
lcall
cltd
lret
add
xchg
mov
out
push
imul
sub
loope
inc
std
mov
imul
imul
and
dec
orb
outsb
fyl2xp1
js
rclb
mov
sbb
xlat
push
push
mov
pop
jbe
clc
dec
and
cld
iret
bound
cmp
vprotd
pop
pop
jmp
push
or
and
sbb
adc
popa
sbb
jbe
and
sub
out
ljmp
add
push
mov
mov
mov
out
adc
pop
mov
mov
lock
negl
ja
dec
dec
jmp
loope
cwtl
jno
mov
imul
ja
bound
and
sbb
aad
addb
xlat
aad
add
adc
nop
and
sbb
test
cli
push
out
pop
test
jmp
adc
es
lds
xor
adc
leave
mov
jecxz
pop
sbb
test
xchg
pop
jmp
sub
adc
sbbb
mov
or
lcall
sub
stos
xchg
mov
push
rcrb
push
ja
xor
jb
fmull
loope
mov
push
in
int3
clc
out
cmovle
and
dec
lea
xchg
push
sahf
jae
adc
sahf
add
and
xor
push
shll
fcmovne
jnp
jno
lret
push
aad
pop
sub
daa
jno
adc
outsb
cmp
js
dec
cmp
mov
rolb
push
xchg
repz
mov
aas
jp
pop
rolb
pinsrw
inc
sub
scas
addb
stos
movsl
sub
push
out
leave
xchg
cld
nop
jl
sbb
gs
inc
hlt
mov
xor
xlat
test
xor
adc
adc
mov
mov
jg
jge
bound
movsb
ds
das
icebp
lock
xchg
cld
push
xlat
xor
imul
test
dec
adc
push
push
pop
pop
js
insl
and
pop
sub
push
or
ret
ljmp
bound
ss
addr16
addr16
or
inc
test
jbe
test
jns
push
mov
lret
push
mov
call
mov
lcall
aad
enter
push
lret
hlt
mov
inc
cmpsl
fs
jmp
mov
pop
in
js
add
push
out
das
sub
mov
xchg
pop
negl
push
pop
sbb
into
movsb
jmp
jecxz
push
addb
mov
push
pushf
xor
pusha
add
fucomp
loope
sub
out
lods
lcall
mov
sti
xor
cmpsl
mov
and
loop
loope
ret
out
sarb
inc
cmc
jecxz
imul
or
lds
mov
loop
test
pop
and
or
jbe
sub
ret
or
iret
or
xor
adc
push
adc
or
dec
clc
and
push
mov
add
add
popf
leave
popf
mov
xor
mov
cld
loope
pop
pop
idiv
mov
int
or
ljmp
insl
mov
sbb
test
mov
sub
adc
out
hlt
lock
stos
inc
sub
or
xchg
jmp
mov
fwait
lahf
mov
push
sbb
iret
sbbl
mov
inc
dec
jl
imul
and
idivl
push
fistl
mov
les
push
sbb
insl
xorl
aaa
xchg
dec
dec
sbb
clc
sarl
shl
add
jbe
test
cmpsb
add
stos
loop
shl
sub
cmp
loop
scas
mov
nop
add
xor
push
sub
inc
adcl
imul
lods
jmp
fs
mov
lds
or
in
sbbl
stc
pop
movsl
sbb
mov
cwtl
aad
loop
dec
pop
jae
ret
inc
or
or
sbb
jnp
into
add
outsb
and
inc
pop
inc
dec
jae
bound
inc
pop
push
adc
int3
and
out
xchg
jmp
fidivrs
mov
sub
mov
push
ss
pop
or
movsb
cmpsl
add
stos
imul
idivl
xorl
movsb
mov
fcomp
into
cli
dec
push
sub
clc
jne
mov
push
and
mov
pminub
andl
jae
pop
xchg
jbe
clc
daa
cmp
hlt
jmp
scas
sarl
mov
loope
dec
inc
and
adc
sbb
pop
push
cmp
lock
xor
adc
mov
mov
test
push
mov
aad
push
mov
jo
push
hlt
push
dec
adc
in
cwtl
lods
int3
add
cltd
jne
xchg
cli
cs
xchg
pop
fildl
xchg
pop
loop
call
loope
push
testb
cmc
sti
push
dec
pushf
and
shrl
iret
js
cmp
mov
cli
lahf
fisubrl
aas
push
pop
jne
push
inc
sbb
push
mov
mov
int3
and
xlat
dec
add
jge
dec
dec
movsb
movsl
sahf
xchg
jae
cmp
inc
insb
shll
add
dec
cltd
mov
jmp
xchg
cmp
mov
test
xor
icebp
pop
inc
fsubs
loopne
adc
xchg
in
pop
stos
jo
push
add
adc
dec
loope
bound
add
std
xorl
mov
repz
jmp
lock
das
mov
sub
aaa
inc
xchg
sub
pusha
mov
cmp
cmpsb
mov
movq
add
jl
sub
jae
push
xchg
jae
shl
roll
sbbl
lret
jle
push
and
addb
ror
rorb
push
inc
sub
fisubrs
mov
fstpt
sbb
adc
test
pop
es
cltd
dec
ljmp
scas
jg
dec
test
cmp
scas
out
adc
jl
pop
mov
jge
mov
mov
ss
mov
jbe
arpl
test
xlat
test
or
push
xchg
mov
sub
dec
push
std
stos
inc
or
sub
negb
push
jmp
lret
test
in
sahf
adc
add
sahf
jnp
and
xchg
jl
pop
mov
pushf
mov
cmpsl
inc
bound
lcall
mov
xlat
test
insl
fwait
and
scas
iret
pop
mov
add
pop
testl
pusha
xchg
outsb
or
jecxz
push
adc
cli
aaa
mov
fsubs
call
seto
xchg
imulb
andb
lret
mov
insb
mov
pusha
dec
mov
sub
add
gs
xchg
sub
jl
movl
ret
sbb
push
push
stc
and
push
lret
cmp
je
mov
jp
add
xor
inc
push
mov
outsl
add
jbe
dec
xchg
xor
lock
add
enter
xor
cld
mov
add
shll
in
adc
fists
pushf
outsl
sbb
leave
pop
imulb
enter
pop
test
mov
xchg
shrl
aas
mov
cmp
std
xor
fldenv
rcr
cwtl
mov
flds
xchg
faddp
pop
lods
test
sbb
add
push
mov
rcrb
psubusw
mov
mov
pop
ds
mov
lcall
mov
test
xchg
or
les
mov
sbb
mov
dec
push
jl
mov
lods
and
out
push
imul
test
sub
nop
ss
cwtl
jno
scas
mov
bound
dec
das
lcall
pop
ljmp
sarl
inc
xchg
adc
test
mov
pop
cmp
xchg
xor
xchg
push
dec
movsb
cltd
mov
jo
test
sbb
inc
xchg
push
dec
adc
push
scas
es
cmpsb
mov
sbb
cmc
pop
push
leave
cmp
xor
mov
adc
mov
jb
out
fwait
mov
mov
stc
stos
lcall
cmpsb
mov
out
sahf
das
test
xchg
xchg
and
push
or
mov
jmp
jmp
dec
lods
mov
mov
dec
sub
scas
pop
ret
or
in
add
and
dec
lcall
shrb
sti
push
xor
shll
idiv
mov
pop
xlat
stos
cltd
aas
xchg
sarl
jno
mov
rclb
pop
and
mov
add
push
mov
popa
shrl
jns
rorl
push
mov
cli
repnz
cmc
lock
test
mov
dec
push
adc
sbb
mov
std
dec
push
das
dec
out
push
sbb
mov
push
pop
xor
leave
jne
outsl
sub
rorb
pop
clc
push
fwait
icebp
aaa
adcb
sahf
mov
es
jl
je
scas
adc
and
dec
aad
xchg
jl
cltd
dec
lahf
mov
jnp
jecxz
pop
aad
filds
scas
sub
scas
mov
lods
arpl
jecxz
mov
mov
mov
ficomps
std
add
pop
xlat
les
rolb
sbb
push
imul
xchg
nop
insb
aad
jmp
std
imul
fwait
push
mov
push
shl
xor
js
xor
push
sar
loopne
pop
mov
aad
xor
adc
cmpsl
dec
sub
gs
pop
adcl
mov
add
ret
xor
cmp
mov
dec
xchg
or
insb
call
ss
pop
or
movsl
pop
bound
cmp
or
jp
cmp
daa
movsl
xchg
cmc
das
in
adc
mov
sahf
mov
fidivs
fdivr
xchg
into
ret
repz
mov
mov
andb
push
fisubs
shrb
pop
add
fs
sarl
add
test
mov
xchg
fisttpll
and
cmpsl
sub
dec
jmp
cmp
xsavec
push
shlb
jecxz
fwait
xlat
int3
fistpll
movsb
sub
inc
push
mov
push
xor
cld
adc
out
inc
xor
test
jge
mov
aad
loope
and
pop
sahf
shll
dec
adc
int3
mov
push
mov
inc
inc
pop
mov
popa
jp
std
out
add
aam
pushf
outsb
setne
fldcw
mov
scas
and
mov
ret
mov
roll
mov
das
cmp
pop
mov
shlb
xchg
shrl
jl
push
sub
pop
adcb
fwait
outsl
fldcw
and
ds
mov
or
mov
aas
testl
xchg
loop
aam
or
mov
bndstx
mov
or
mov
xor
pop
jl
push
cs
outsb
and
sub
fsubs
call
xchg
mov
push
fidivrs
sbb
xor
test
out
bnd
sub
xchg
or
test
sub
imul
push
les
pop
sub
push
push
aaa
stos
mov
or
sub
dec
pusha
push
or
not
dec
cmpsl
push
cmp
mov
push
adc
sbb
leave
cmp
dec
iret
pop
jnp
out
xlat
das
jle
xor
xor
stos
rcll
pop
pop
pusha
fistpll
cmp
add
stos
and
aaa
fisubl
fdiv
roll
pop
les
pusha
cmp
stc
insb
addr16
lret
xor
mov
data16
pop
stos
dec
outsl
dec
insb
lea
pop
cli
dec
push
pop
jg
inc
cmpsb
or
xchg
mov
bound
push
pop
mov
xlat
into
aam
scas
addr16
loopne
cld
add
fists
or
jne
fdivr
repz
cs
ljmp
jne
or
and
inc
sub
push
fdivl
adc
es
fsin
fcoml
cli
cmpsb
aam
push
mov
mov
aam
popf
repz
sub
out
xchg
lea
repnz
cld
loopne
pop
jge
xchg
cmc
pop
inc
jno
mov
and
xor
std
int3
in
out
and
push
add
mov
dec
push
stos
jo
jb
mov
or
iret
arpl
cld
mov
push
sbb
jge
ret
aad
leave
inc
sbb
add
outsb
jecxz
insl
pop
cmpsl
ficompl
arpl
shrl
xchg
pushf
rcl
sti
loope
or
jg
fistpl
es
movsb
lret
mov
outsl
xor
xchg
out
mov
lea
dec
cmpsb
fcomp
jb
gs
ljmp
clc
sub
xchg
hlt
and
jb
mov
pop
shlb
pusha
mov
fidivs
inc
fnsetpm(287
push
aam
mov
xor
mov
add
ja
outsl
lcall
andb
dec
pop
adc
pop
subb
fmuls
jle
mov
xchg
jno
or
cmp
dec
cmp
scas
or
jmp
js
ficomps
test
jl
mov
test
adc
out
scas
xchg
cmp
jae
fisubs
fucomi
pop
cmc
push
into
push
rcl
add
or
pop
divl
add
lds
stos
fistpll
fildll
int
mov
dec
repnz
cmp
xor
sub
dec
mov
loope
mov
or
sbb
popa
cmp
push
test
jmp
popa
push
ja
sub
mov
fisttpl
mov
lock
sahf
mov
add
jle
sbb
gs
mov
inc
jbe
or
sahf
fldl
faddp
add
pmulhw
stos
pusha
push
jnp
sbb
jge
add
adc
xchg
call
xchg
mov
aad
adc
lds
sbb
pop
fbld
pop
inc
pop
inc
jg
out
aas
mov
shll
and
mull
aam
mov
cmc
xchg
rcrl
push
cmc
sub
push
cmp
fcmovnbe
push
dec
xorl
jmp
pop
dec
ljmp
push
mov
jae
push
sub
test
push
jp
stos
iret
jnp
fisubrl
testb
cmpsl
mov
pop
sti
divl
jmp
orb
add
inc
sub
mov
sbb
adc
jmp
and
stos
or
pop
cmp
jecxz
xorb
movl
mov
sar
pop
pop
dec
pop
pusha
mov
xchg
call
mov
sub
fdiv
pop
mov
int3
pushf
inc
jp
adc
adc
lret
int3
filds
gs
push
aad
rcl
movsb
addl
cs
jnp
xor
xchg
and
fwait
in
jnp
pop
js
ss
jne
jne
flds
les
addr16
bound
adc
cltd
call
shrl
or
test
popf
mov
mov
rcrl
iret
ljmp
nop
mov
xchg
jp
sub
or
lcall
movsl
pop
out
clc
push
ffree
pop
dec
cmpsl
mov
sahf
aaa
and
int
enter
or
mov
fdivrs
test
sub
bound
pop
dec
mov
jmp
push
mov
rol
jno
mov
repnz
fisubrs
jbe
mov
and
fdivp
lcall
xchg
mov
iret
ret
cld
popa
pop
decl
scas
rclb
imul
jno
test
push
cltd
ret
and
xchg
pop
in
cmpsl
pop
inc
xchg
or
adc
fisubrl
scas
pop
mov
xchg
idiv
scas
ss
imul
dec
fadds
jg
nop
bound
pop
mov
jo
jecxz
add
out
xorl
iret
mov
push
rcrl
inc
fnsave
imul
call
andl
movsb
ucomiss
dec
je
shlb
jns
mov
add
pop
popf
push
add
inc
stc
dec
dec
jmp
mov
mov
negb
pop
inc
lret
adcl
mov
lcall
outsl
xor
imul
aad
test
or
push
test
sqrtps
std
add
xor
sub
mov
idivl
mov
jecxz
mov
push
mov
xor
mov
fwait
mov
pop
cmp
addr16
xor
ja
mov
cmp
or
gs
testl
xchg
std
lahf
call
pop
push
movsb
call
lock
cli
mov
cmp
xor
lret
sub
adc
mov
stos
notl
inc
sahf
pop
pusha
es
testb
xchg
sub
addr16
or
sbb
insb
cmpsl
shl
loope
sub
ja
addr16
negb
push
cwtl
and
test
nop
xorl
or
jmp
pop
or
shl
xor
dec
mov
loopne
sub
lahf
fsubrl
arpl
xchg
cltd
jmp
nop
sti
cmp
fldl
iret
test
ljmp
mov
sub
pusha
leave
lods
xchg
and
jecxz
in
rolb
jne
ret
mov
mov
vmwrite
js
js
cmp
test
movsb
jbe
in
adc
mov
stc
xor
xor
lea
lret
ret
je
test
push
inc
insl
sub
jmp
mov
andb
mov
les
stc
inc
adc
lds
bnd
fs
faddl
pop
in
push
pop
inc
scas
sbb
shll
fs
sbb
mov
lods
sbb
jle
aad
fdivs
jbe
aam
xor
dec
popa
repnz
dec
and
ror
ds
test
sub
adc
in
xchg
das
jecxz
out
bound
mov
aas
adc
add
dec
sbb
push
push
push
and
scas
jl
popl
and
mov
sub
or
loop
dec
sbb
mov
add
mov
push
mov
push
int
into
lret
int3
xor
jl
push
and
xchg
dec
and
sub
cmpsb
pop
cmp
dec
jae
xor
insl
out
push
adc
mov
out
jp
cmp
push
push
sbb
and
push
mov
jg
xor
push
sbb
cmp
shl
sub
scas
jb
subb
cmp
fs
cmp
mov
mov
insb
call
mov
lcall
fistps
or
clc
test
lea
fs
jb
jge
rcrb
es
mov
inc
cmpsl
mov
bound
mov
fcom
dec
jno
cltd
lea
xchg
jp
mov
out
clc
les
jp
xor
loopne
or
js
lahf
icebp
mov
gs
or
add
mov
icebp
and
loop
pop
xor
add
adc
cmp
dec
adc
aas
cmp
push
mov
or
mov
adc
push
scas
in
adc
mov
shl
inc
ja
test
test
inc
lret
pop
inc
push
sub
fldcw
cmc
imul
cs
push
iret
and
loopne
push
or
and
je
sub
int
add
je
mov
adc
outsl
dec
pop
fsub
push
loopne
jl
outsl
push
ret
lds
push
xchg
test
aaa
fsubr
mov
jg
fstps
mov
push
inc
xchg
cltd
xor
xchg
push
and
loope
xor
jle
push
into
dec
enter
loopne
pushl
sbb
aaa
ret
push
mov
or
dec
nop
mov
adc
mov
sbb
inc
jg
pushf
pushf
jbe
mov
lahf
push
push
insl
or
gs
cld
xchg
sub
jnp
mov
mov
mov
sbb
outsl
sti
xchg
enter
mov
sbb
stos
ds
mov
adcl
jb
mov
dec
iret
jmp
add
pop
jb
jecxz
xchg
sub
xchg
jae
cmpsl
push
pushw
out
inc
cli
ljmp
jb
push
adc
mov
or
into
shll
insl
sub
cmp
icebp
jle
or
dec
mov
mov
or
push
ss
inc
dec
fdivl
sbb
sti
dec
cmc
mov
push
es
sub
test
cmpsb
jmp
cs
ficoml
out
mov
and
shl
mov
jle
int3
cmp
ljmp
scas
mov
lcall
aad
mov
xchg
mov
movsb
sbb
inc
push
push
mov
add
jbe
das
jo
orb
pop
dec
cld
negl
cli
xchg
dec
pop
mov
xchg
mov
xchg
loopne
test
jno
or
and
push
or
pop
scas
cmc
mov
into
repz
and
into
and
aad
adc
sti
inc
cmp
ss
or
adc
and
jecxz
orps
or
hlt
mov
dec
imul
mov
scas
out
pusha
push
movsl
jo
lds
dec
inc
gs
fistps
pushf
stc
frstor
stos
pushf
mov
xor
xor
out
shld
mov
pushf
or
cmp
sbb
push
mov
cwtl
iret
inc
test
mov
mov
fimull
pop
in
test
imull
push
test
ss
mov
adc
sub
add
xor
cmp
jnp
sti
icebp
pop
roll
arpl
aad
movb
push
or
outsl
shlb
outsl
lods
test
movsb
sbb
jl
pop
lahf
cmc
and
pop
cmp
pushf
pop
xchg
cmp
out
push
mov
adc
cmpl
loopne
mulb
cmp
adc
xor
jb
jp
mov
mov
add
xor
mov
aas
xor
outsb
lods
mov
shlb
mov
aas
inc
jg
adc
mov
aad
xor
mov
pusha
jb
and
pop
dec
rorl
popf
loope
sahf
mov
add
add
adcb
outsl
sbb
repnz
push
popa
in
pop
je
inc
icebp
fldt
orl
jbe
dec
cmp
xor
ljmp
xor
cmp
ret
outsb
inc
das
xchg
popa
int
rclb
icebp
xchg
cltd
mov
mov
push
add
std
inc
jp
lret
adc
notl
mov
push
cmc
fcomi
sub
pusha
add
jno
fistpl
insl
ljmp
testl
push
and
pop
sbb
int3
xchg
xor
pop
mov
insl
movsl
add
ficoml
push
xchg
push
cwtl
sub
mov
test
push
mov
mov
xor
outsb
jnp
and
mov
push
inc
adc
dec
jns
addr16
and
dec
fdivrs
andl
les
push
in
dec
pusha
push
arpl
push
icebp
push
mov
loopne
in
push
adc
fistl
loop
ror
pop
jl
jno
sub
mov
test
mov
fsubp
cmp
loop
xchg
fs
jns
push
push
jne
mov
les
jmp
push
fs
cmpsl
aam
cmp
popa
mov
mov
pop
inc
out
mov
sub
jl
rcrl
subb
ret
pop
sbb
add
pop
lahf
push
cmp
xor
outsl
js
add
inc
xchg
lret
xchg
mov
dec
cmp
jg
pop
push
add
push
push
pop
pusha
jl
pusha
or
cli
shr
add
shl
jne
rcrl
add
fnstcw
mov
aas
ja
cmpsl
jno
leave
inc
jb
fnstcw
std
arpl
call
andl
fwait
mov
xorb
je
mov
clc
ja
mov
lds
sub
sub
dec
cmpsb
rcrl
out
mov
aam
sbb
or
add
xchg
jns
add
mov
repz
loopne
sub
mov
iret
jmp
popf
xchg
inc
mov
fisubl
and
dec
test
pop
mull
std
xor
call
and
andb
jg
js
xchg
addr16
aad
xchg
adcb
leave
shll
imul
add
jnp
cltd
mov
cld
icebp
jbe
lods
loopne
dec
xor
repz
icebp
dec
pop
xchg
into
fs
jbe
test
rorb
aad
mov
rol
and
loopne
mov
sbb
jmp
push
or
leave
add
mov
cmpsl
out
in
ja
mov
cmc
stos
pop
ja
data16
sbb
cld
loop
push
shrb
sti
lods
enter
lods
jns
push
in
rcrl
popa
or
ljmp
add
xor
adc
insb
call
inc
sbb
or
loopnew
pushf
lea
lret
add
enter
sahf
test
lods
pop
or
in
mov
leave
push
emms
cmp
pop
pop
dec
cmp
in
cs
sbbl
mov
sahf
insl
into
fldenv
add
or
lret
sub
pop
inc
stc
in
mov
stc
ss
cmp
sbb
pop
push
pop
scas
pop
andl
aas
int
inc
or
xchg
stos
ret
and
sbbl
dec
in
add
xchg
daa
sub
sarb
hlt
in
jmp
pop
in
cmc
cmp
xchg
inc
push
and
dec
jge
out
push
add
jp
jb
dec
andl
xchg
inc
sbb
and
pop
pop
dec
push
repz
aas
movsl
cs
jecxz
fsubrs
movsb
gs
adc
sahf
jno
gs
fsubr
rcl
jbe
cmp
inc
push
into
lahf
cli
push
repnz
jg
sbb
pop
xor
push
pop
mov
loop
jno
stos
test
push
push
push
ret
cmpsb
js
or
outsb
xor
pop
push
js
fadds
test
lock
push
into
enter
shl
sbb
mov
fdivl
dec
scas
nop
add
jo
nop
xor
cmpl
shl
mov
push
and
incl
stc
jb
ja
xchg
sahf
aaa
rclb
mov
xor
mov
mov
pusha
xchg
mov
pop
cs
xor
aam
js
scas
jmp
dec
or
cmp
and
fwait
bound
sub
incl
mov
pop
js
mov
cltd
push
jne
adc
mov
pop
inc
gs
push
dec
jle
cmp
bound
in
fistpll
dec
sbb
mov
scas
rcrl
aaa
mov
movsb
aam
pop
stos
mov
repz
pop
cmp
outsb
or
fcomip
sbb
mov
into
dec
insl
fsubs
and
js
push
sub
inc
call
aad
push
lock
js
fldenv
jbe
mov
mov
mov
out
notl
pop
xor
cmp
xor
sub
sbb
jge
inc
inc
xchg
fdivl
loopne
lock
pop
xlat
push
fcoms
scas
mov
out
cli
push
push
add
jns
sarb
add
xchg
fiaddl
shlb
mov
fdiv
int
jmp
jecxz
pop
cs
mov
mov
pop
sbb
pop
sbb
int
jg
es
sahf
jnp
mov
dec
inc
or
pop
fs
aam
jge
lea
jns
dec
dec
stc
dec
inc
mov
xor
and
mov
add
ror
test
jns
je
int
std
mov
cmpsl
add
add
adc
scas
inc
xor
xchg
push
btc
adc
fadds
fs
loopne
or
cmp
ret
sahf
pop
test
mov
mov
cmp
push
hlt
dec
adc
out
in
push
enter
stos
pop
call
and
repz
inc
stos
nop
jp
push
xchg
pushf
out
adcb
push
stc
add
mov
pop
sbb
pop
jle
push
icebp
sbb
jne
sub
lea
icebp
arpl
aad
inc
add
loope
lods
popf
ss
xchg
jne
aas
xchg
mov
nop
mov
aaa
hlt
sbb
lcall
stos
push
shrb
pop
jo
stos
into
mov
iret
fimuls
mov
mov
and
inc
movb
mov
inc
insl
pop
mov
mov
mov
gs
xchg
jle
mov
dec
cmpsb
fnstsw
cmpsb
pop
push
outsb
cltd
in
test
dec
xchg
mov
push
mov
clc
add
inc
xchg
adc
push
cwtl
xor
test
call
sub
lahf
xchg
std
nop
insl
inc
lahf
mov
enter
push
jb
and
add
test
movsb
insl
dec
lret
popa
push
dec
xchg
xchg
lahf
xor
pop
jl
lods
sahf
push
pop
jecxz
int
push
mov
insl
jle
pop
jb
test
insb
and
push
xlat
xchg
lds
mov
mov
lcall
push
pop
roll
insb
mov
cli
adc
cmpsb
inc
cmpsb
int3
mov
xchg
jmp
and
fsubp
jo
mov
cmpsb
ss
popa
daa
es
test
mov
fs
inc
sub
xchg
ret
jp
popf
add
jo
cmp
loop
pushf
mov
fwait
sbb
test
clc
inc
fadd
mov
mov
jae
jle
gs
xor
aam
sbb
push
cwtl
jmp
or
arpl
dec
push
jp
out
in
xor
mov
inc
push
mov
arpl
sbb
call
ffree
imul
les
xchg
push
push
pop
adc
push
push
jb
sbb
jmp
dec
aaa
pusha
outsb
out
rolb
sbb
lods
dec
mov
addr16
mov
sbb
pop
lret
cmp
cmp
adc
call
repnz
push
and
jo
pop
inc
mov
rcrl
or
lds
xlat
inc
ljmp
pop
scas
fsubrl
fldl2t
cli
push
sub
or
dec
and
into
sub
ret
lret
outsb
cltd
adc
mov
fwait
insb
test
xchg
pop
push
call
xchg
pop
je
sti
push
mov
add
aad
jl
cmc
add
rolb
or
cld
dec
or
cmp
inc
loopne
stos
cmp
ja
in
popf
repnz
adcb
mov
fnstsw
inc
cmp
dec
xor
jg
jne
stc
shlb
mov
repnz
repnz
cmp
jg
dec
rolb
das
int3
jne
sahf
pop
mov
inc
jg
je
push
ds
fwait
mov
mov
jno
pop
js
cmpb
push
shl
popf
sub
fnsave
dec
jo
shll
cmpsb
cld
mov
nop
add
sub
ljmp
jb
mov
lea
pop
hlt
and
xchg
sarl
inc
dec
fidivs
pop
add
jge
scas
icebp
in
cmp
neg
mov
adc
sbb
pop
test
xor
flds
adc
mov
or
inc
loopne
xchg
fs
push
jo
cli
fldcw
mov
dec
xchg
fidivrl
jl
sbb
repnz
and
sub
xchg
xchg
xor
test
shll
inc
and
jo
xor
pop
jecxz
cmpsb
sub
sub
add
hlt
mov
xchg
sti
js
adc
push
sub
cmp
in
cs
or
inc
movzwl
sub
mov
mov
inc
imul
aaa
das
cmp
lods
loopne
xor
icebp
jp
fwait
dec
mov
jp
sti
push
inc
adc
sbb
outsb
push
ja
push
call
hlt
popa
out
fldenv
into
cs
aas
fsubr
loopne
ss
in
adc
mov
cmpl
push
out
orl
xchg
daa
and
sti
mov
das
jne
or
sahf
in
test
pop
mov
loope
mov
cs
inc
test
inc
enter
hlt
xchg
pop
nop
mov
jmp
scas
cmp
int
mov
ret
dec
scas
push
fcoms
push
mov
popf
xchg
dec
xor
adc
jns
jl
scas
jle
inc
cmp
sbb
int3
pop
cwtl
mov
mov
sub
mov
cmp
stos
mov
xchg
in
xchg
xchg
fdivrl
lret
lcall
mov
mov
lods
mov
out
rorl
ja
outsl
and
iret
cmc
xor
pop
add
roll
lret
lret
mov
sub
aas
pop
es
add
mov
mov
iret
cld
sahf
sub
jns
insl
psubusw
push
int
cmp
ficoml
dec
cltd
lock
push
dec
sub
test
hlt
scas
sahf
outsl
divl
out
jbe
and
test
mov
sub
jae
mov
lock
cltd
mov
adc
and
orl
rorb
popf
dec
ret
sub
into
mov
jne
mov
lcall
in
xchg
adc
orb
test
and
shl
loope
sbb
mov
fdivrs
negb
push
icebp
sub
dec
sub
push
out
loope
mov
cwtl
xor
push
aas
jno
dec
push
xlat
pop
test
push
or
mov
fsts
adc
out
test
pop
jae
addb
popa
aaa
push
cli
pop
mov
mov
cmp
cmp
pop
call
cmpsl
mov
pop
fwait
mov
inc
repz
imull
rolb
imul
test
inc
xchg
sub
negb
push
mov
pop
jmp
ds
sbb
int3
adc
sbb
pop
mov
les
scas
xor
rorl
dec
cli
xchg
push
in
ss
pop
mov
push
and
movsl
int
push
data16
cwtl
popf
pop
jg
cmpsl
scas
imul
fwait
enter
xor
fistpl
dec
test
inc
inc
sahf
and
leave
xchg
in
out
inc
out
pop
xor
out
or
into
sbb
shl
add
lahf
pop
xchg
and
sub
adc
in
push
fs
jmp
jecxz
jge
adc
loopne
div
lea
inc
and
mov
addl
imul
popf
into
nop
cmp
sub
into
dec
xchg
or
pusha
lods
std
mov
and
test
sub
cld
mov
mov
inc
pop
inc
imul
mov
pusha
iret
popf
test
or
cmp
xor
arpl
pop
xor
mov
xchg
mov
pop
add
rcll
mov
test
sahf
jl
cwtl
pop
pop
outsl
inc
sbb
rclb
jmp
xchg
jo
or
add
cltd
pusha
xlat
lret
inc
aam
aas
mov
scas
pavgb
stos
out
mov
pusha
jp
dec
das
push
into
pop
inc
fcomps
inc
pusha
push
add
lahf
push
ds
cli
cmpsb
mov
or
or
cli
mov
sbb
enter
dec
cmp
pop
fcoml
sub
pop
and
jbe
fsts
jg
cmp
ss
push
orl
mov
enter
xlat
mov
js
ret
adc
add
mov
xchg
push
sahf
or
jnp
sti
loopne
pusha
fildll
mov
push
nop
jge
push
lds
mov
lret
addr16
das
jg
fdivs
xchg
jmp
adc
jmp
mov
push
inc
incl
out
dec
xchg
sub
hlt
mov
and
sub
sbb
push
adc
inc
adc
mov
rol
jg
add
pop
jae
xor
loopne
aas
popf
push
and
dec
mulb
push
das
push
shl
jb
stc
fnstcw
push
dec
jp
ficompl
xor
push
cli
sub
push
mull
loope
aad
ret
push
fldenv
xor
ret
jl
icebp
scas
inc
or
xor
jl
aas
hlt
mov
call
push
js
lods
xchg
addr16
addr16
in
test
bound
jno
push
fcom
leave
jne
data16
inc
outsl
cmp
in
pop
sbb
ror
jp
dec
push
js
mov
cli
pop
imul
out
shrl
mov
jge
jns
out
aas
inc
ret
cli
adc
call
leave
jg
out
mov
mov
pop
outsl
add
imul
fs
insl
test
hlt
test
iret
adc
xchg
iret
pushf
in
in
mov
adc
mov
cld
mov
ret
push
jmp
enter
add
mov
cmpsl
fimull
scas
pop
cmpsl
add
adc
sub
call
sub
inc
sti
inc
dec
lods
or
insb
sub
inc
inc
les
loopne
xchg
into
and
dec
and
mov
cmpsl
insl
ffreep
cmp
jle
mov
mov
popl
enter
movsl
inc
jns
xchg
out
cmp
rcrb
shlb
addb
call
test
mov
fisubl
ds
xchg
mov
inc
popf
cmp
fs
mov
pushf
lahf
std
in
testb
cmpsb
leave
pop
jnp
test
in
pop
adc
mov
push
mov
add
mov
ret
test
add
xchg
sub
rcll
xor
stos
inc
ror
dec
mov
push
inc
jno
xchg
cmp
mov
sub
out
shrb
je
outsb
aaa
xor
dec
and
in
pop
mov
shll
and
cwtl
loop
add
or
push
jne
addr16
loopne
or
mov
jns
pop
insl
arpl
mov
pop
push
adcb
aam
pop
shll
push
xchg
jl
or
pop
jg
xchg
mov
dec
mov
lea
sub
aaa
adc
lret
cld
cmp
inc
pop
lds
into
hlt
mov
jge
es
adc
or
ss
inc
mov
outsl
jmp
or
stos
aad
popf
fs
jle
mov
mov
lret
pandn
jae
imul
fnstcw
repz
mov
mov
in
jo
std
sbb
sarl
push
sbb
jne
movsb
outsl
lahf
inc
push
lea
inc
pop
inc
sub
push
pusha
les
rcll
sbb
jge
add
xchg
sti
and
fidivrl
cmpsl
inc
insb
jns
mov
jo
daa
call
adc
clc
pop
iret
adc
test
int
and
and
ret
jmp
movsb
ret
pop
adc
movsl
dec
xor
sub
imul
adc
or
popf
fstpl
cld
push
mov
sub
jns
lods
loope
test
ret
das
pop
test
imul
jl
shrb
fbstp
punpckhwd
outsl
push
lods
dec
jnp
adc
incb
mov
pushf
push
or
inc
sub
outsb
outsb
lret
shl
jb
mov
and
sbb
or
cwtl
mov
push
cmp
adc
jno
lods
dec
fcoms
jle
jmp
xchg
addr16
and
insb
xor
fcoms
in
lock
test
sar
ljmp
outsl
imul
inc
cli
hlt
aas
js
sti
jecxz
insl
push
jbe
ficompl
jb
ja
mov
push
sub
mov
cmp
jge
and
scas
xlat
cs
test
xchg
pmulhw
jge
clc
lahf
mov
mov
imul
mov
and
mov
push
push
ret
dec
mov
or
cs
push
push
mov
xlat
add
jnp,pn
jbe
cmc
lret
adc
inc
push
jbe
mov
mov
push
inc
xor
sub
cld
mov
mov
xchg
dec
push
mov
call
dec
fildl
mov
cmpb
sub
test
or
fucomp
mov
jne
fs
push
je
inc
icebp
mov
icebp
and
shll
xchg
push
notl
add
mov
pop
and
cmp
and
stc
pop
add
adc
push
loop
sbbl
add
imul
xchg
aaa
push
cmpsb
inc
outsl
gs
cmp
pop
cld
es
add
sti
xlat
cli
into
xorl
adc
xchg
je
xchg
std
and
pop
inc
lock
add
std
into
test
gs
push
push
mov
notl
xor
fwait
adc
sti
int3
cmp
fs
and
push
icebp
outsb
mov
imul
jne
shrl
cwtl
cmp
and
lea
dec
pop
add
cmpsb
mov
fnstcw
mov
and
pop
cmpsb
iret
or
pop
adc
mov
lret
gs
mov
leave
rcrb
iret
in
cmpl
xor
push
add
sub
inc
stc
sbb
movsb
bound
pop
aas
decl
lods
dec
sbb
loop
jb
cmp
in
mov
or
sbb
cs
mov
aaa
sub
insl
dec
pop
xor
xlat
imul
jmp
jne
sarl
cmp
out
stc
leave
pop
inc
or
in
fs
dec
dec
xor
xchg
inc
loopne
push
adc
imul
mov
iret
push
dec
gs
es
mov
xchg
sub
aaa
cmp
mov
jns
aas
test
daa
pop
stos
out
std
sbb
outsl
lret
inc
add
bound
pop
adc
and
mov
add
xor
popa
xor
and
add
inc
jle
mov
pop
push
cmp
sahf
xor
pushf
xor
jl
or
enter
mov
mov
nop
int3
xchg
or
pop
jl
xchg
fstl
aaa
fisubrl
jg
ret
imul
lahf
popa
test
mov
dec
movsl
xchg
popl
cmpsb
cltd
xor
orb
push
testl
test
pusha
mov
dec
aas
out
dec
cmp
pop
mov
test
je
ficoms
add
gs
pusha
or
push
or
bound
or
ret
shrl
cmp
ljmp
hlt
cmp
xchg
jg
mov
xor
adc
jne
popa
lahf
add
out
cmp
rclb
and
and
loop
outsb
pop
jecxz
mov
jns
rol
adc
pop
ret
repnz
jne
test
adc
cmp
stc
xor
popa
nop
mov
xor
mov
sub
arpl
sub
shrb
test
pop
movsb
in
jge
xchg
loope
sbb
data16
push
xchg
adc
pop
inc
shll
sbb
xorb
push
sub
out
ljmp
fs
aad
out
push
faddl
fmull
or
stos
incl
mov
xor
movsb
test
test
push
call
inc
cs
inc
xor
dec
movsl
test
aaa
pop
dec
outsl
jecxz
sbb
imul
xchg
in
stos
push
jbe
xchg
xchg
inc
out
stc
nop
arpl
inc
dec
ljmp
mov
call
and
cltd
xchg
xchg
add
je
ja
in
mov
lahf
xchg
cmc
sub
lods
or
sub
push
mov
stos
add
fbld
cmp
dec
int
outsb
scas
arpl
or
cmp
inc
iret
jmp
jno
jecxz
cli
pop
loop
pop
push
addr16
and
mov
and
dec
bound
mov
jae
enter
mov
pop
adc
out
repnz
scas
imul
test
dec
sbb
cmp
push
shl
xchg
das
cmc
aad
jno
std
sbb
mov
pop
insl
push
lret
loop
cs
jb
adc
inc
mov
mov
stos
push
jg
ret
jns
mov
scas
imul
ret
mov
repz
imul
out
mov
adc
pop
in
mov
in
in
dec
std
scas
cld
mov
jmp
cmpsl
popf
scas
pusha
and
adc
xchg
xchg
pop
inc
loop
jecxz
push
xorl
lret
push
loopne
and
cmpsb
xor
aad
in
orl
aad
sub
jbe
push
rclb
stos
lcall
fists
and
das
les
int
dec
lds
xchg
sub
pop
es
cmp
jo
jp
js
call
ja
xchg
lods
sub
fwait
dec
inc
fdivrl
sbb
sbb
je
mov
push
cmp
dec
push
or
mov
cmc
sub
xor
xchg
pushl
inc
fld
loop
and
mov
cli
push
fcoml
jne
push
jmp
div
inc
mov
and
jg
lea
lret
mov
fstpt
add
out
jmp
jg
test
in
cli
imul
adc
jle
cs
andb
cmpsb
inc
mov
stc
sub
cmp
ret
in
aam
nop
pop
scas
fistl
inc
dec
out
lret
shl
inc
gs
xchg
xor
call
cmpl
fwait
or
inc
xor
imul
xor
sbb
sub
pop
scas
adc
cmp
pop
lcall
mov
adc
shlb
sbb
aam
cmpsl
xor
inc
push
cmp
mov
rcll
rcl
xor
or
adc
test
add
pop
adcl
aas
mov
cld
imul
rorb
ljmp
inc
mov
sub
sbb
clc
loope
mov
hlt
xlat
cltd
pop
adc
inc
lds
or
sti
aam
lret
jp
aas
push
xor
std
out
and
xor
inc
lods
add
shl
cwtl
xchg
lods
or
lea
mov
fwait
nop
rep
push
in
pop
int3
outsl
outsb
imul
jmp
lcall
inc
ret
xor
popf
mov
adc
inc
jne
xchg
add
hlt
push
mov
or
add
adc
xor
iret
insl
push
pop
sbb
jae
jge
shlb
push
jne
aam
sub
mov
sti
fldt
or
orb
sub
test
call
or
jmp
nop
xlat
sbb
js
hlt
aas
mov
dec
xchg
sahf
push
or
push
out
je
and
add
cmp
rcrb
out
push
movl
xchg
ret
jae
in
sbb
xchg
dec
sub
sub
or
stos
mov
bound
test
and
loope
cmp
loopne
add
cwtl
mov
lods
push
mov
scas
jge
and
cmp
jge
rcrb
push
outsb
mov
mov
lcall
jne
xor
dec
in
lret
pop
fcomps
dec
sub
stos
jae
stos
lods
adc
or
push
in
pop
cmp
fiaddl
fdiv
ficoml
inc
cltd
daa
inc
ret
in
rorl
push
popf
roll
push
out
push
jns
hlt
push
jl
adc
or
jo
gs
test
push
sub
out
mov
mov
jmp
pop
xchg
imul
cmpsl
ret
inc
xor
repz
dec
cli
mov
rorl
or
lret
adc
imul
lods
nop
mov
dec
lahf
jmp
loop
inc
mov
or
mov
scas
jnp
xlat
add
loop
ss
or
jbe
sti
sbb
dec
mov
xchg
outsl
iret
sbb
mov
dec
and
idivb
xor
cmp
cmp
scas
in
ss
imul
cmp
push
out
xor
cmp
stos
pop
je
xor
mov
repz
cmp
xchg
cltd
test
ljmp
inc
mov
stos
movd
stc
mov
repz
repnz
xor
leave
lahf
push
jecxz
sbb
sbb
inc
xchg
mov
pop
insb
jp
inc
sbb
xor
iret
or
jb
lds
and
dec
call
push
sub
shlb
mov
cli
jb
fistps
jecxz
loop
data16
and
push
pop
sub
int3
es
or
js
mov
xlat
sbb
repz
and
cmpsl
jns
data16
js
inc
popa
lock
jmp
mov
dec
xchg
std
call
clc
call
ss
icebp
and
push
jb
jecxz
jl
push
pop
and
insb
mov
pop
or
and
jmp
out
fisttpll
out
fidivrl
sbb
sti
lock
mov
in
sbb
ds
dec
adc
js
or
dec
jbe
sub
pop
nop
cmp
xor
mov
rolb
lret
inc
repnz
rorb
jle
pop
cli
and
sbb
push
icebp
in
fmul
nop
rolb
mov
loopne
pop
sbbb
jg
push
jecxz
out
jno
pop
popf
gs
adc
inc
movsb
and
pop
out
push
dec
mov
in
dec
fsts
push
jne
enter
or
inc
mov
and
in
mov
shlb
mov
add
repz
dec
scas
mov
dec
push
aad
data16
into
mov
pop
scas
cmp
insb
cmp
outsl
add
aam
sbb
call
js
cld
rorl
push
push
leave
push
clc
mov
sub
xor
repz
jecxz
stos
push
testl
imul
clc
mov
popf
or
loop
int
dec
and
test
orb
inc
fsubs
loop
scas
pop
addr16
jnp
xor
sub
or
aaa
push
adc
and
repz
aas
inc
push
pop
xor
lods
cmc
mov
int
xchg
mov
mov
fstps
mov
or
es
xor
mov
add
add
jp
jp
sub
cmp
pop
movsb
call
inc
xor
or
or
add
fmul
or
fs
cli
mov
push
jno
js
jno
mov
and
sbb
scas
inc
into
fsts
pop
fisubrl
int3
and
adc
ret
xchg
sahf
mov
fsts
push
push
aaa
lret
add
pop
xchg
sahf
xor
enter
or
repz
xchg
test
pop
sub
mov
aaa
add
push
add
stc
lahf
sbb
shl
push
xor
ds
in
jmp
mov
dec
js
mov
ret
push
add
mov
fcmovnu
or
sbb
jg
inc
cmpsl
and
jecxz
outsl
mov
pop
cmp
mov
pop
lods
cmc
pop
fs
pop
adcl
push
mov
push
aas
add
pusha
xchg
add
aam
insb
negb
mov
pop
rolb
add
out
and
lret
mov
or
test
lcall
fisubs
fs
pop
or
pop
iret
and
inc
flds
pop
mov
or
stos
push
roll
cmpsb
push
out
xlat
sti
outsl
gs
js
aam
inc
mov
push
dec
xchg
insb
cmp
sbb
xchg
cwtl
ljmp
pop
rcr
add
mov
pushf
fcomip
cmp
dec
ss
sbb
sub
jno
sub
add
mov
pop
push
and
addl
les
lds
out
pop
test
enterw
adcb
aas
add
pop
mov
scas
mov
sbb
in
jmp
add
jle
imul
enter
test
xchg
mov
jmp
and
cmp
out
cld
in
push
jb
xchg
sbb
fsts
outsb
mov
adc
inc
lcall
test
add
pop
shl
xor
or
mov
jle,pt
push
mov
push
cmc
mov
mov
pusha
pop
out
hlt
insb
sub
gs
jge
movsl
and
fucomp
xchg
notl
lock
mov
ss
ja
dec
rclb
daa
loopne
push
mov
ss
lcall
inc
push
aaa
or
mov
in
mov
lock
cli
sbb
push
cwtl
aaa
mov
out
cmp
xor
jb
cmp
push
inc
fistpll
out
add
int
cltd
inc
movsb
mov
jbe
movsl
mov
cmp
sti
in
xchg
sub
fnstcw
rolb
test
xchg
shl
cmpsl
dec
add
mov
in
out
lods
sbb
js
mov
aam
divb
cltd
rorb
loope
stos
imul
js
cmp
daa
push
pop
test
fildl
enter
mov
add
push
cmc
mov
push
aas
cmp
data16
cmp
inc
sub
jae
arpl
or
lret
sbb
nop
sti
scas
das
adcb
jb
and
adc
int
int3
test
rorl
clc
ljmp
fidivrl
nop
and
xchg
cwtl
shlb
inc
cmpsb
aaa
mov
inc
test
pusha
loope
mov
negb
rcr
test
rcl
outsb
xor
pop
pushf
out
push
mov
dec
incb
cmp
mov
sbb
xor
or
rcrb
movsl
xchg
xor
cld
fidivrs
jae
mov
pop
je
jns
aam
loopne
inc
xor
push
push
ljmp
push
leave
jno
dec
ja
out
lcall
push
xchg
leave
fadds
imul
ret
jb
fisttpll
lea
pop
mov
or
jns
sbb
jle
mov
lcall
jg
jbe
jecxz
mov
aad
aaa
add
jecxz
ret
pop
stos
loop
mov
mov
mov
push
sar
cmpsb
cltd
ljmp
pop
fnstsw
mov
xor
add
push
mov
and
shlb
stc
out
popa
rolb
push
mov
loop
stos
pop
imul
cmp
rcl
bound
ret
cmpsl
gs
lret
nop
mov
inc
mov
pause
pop
test
jns
or
lret
mov
sub
testl
cmp
ds
pusha
jge
loopne
push
push
scas
sub
push
movsl
and
jl
addr16
dec
out
and
popf
and
repz
pop
imull
add
jecxz
dec
dec
adc
or
subl
inc
mov
dec
into
xchg
jmp
lds
xor
push
jno
call
into
cmp
inc
out
dec
mov
cwtl
addr16
xor
pop
mov
mov
pop
lcall
cmpsb
ror
inc
scas
cld
sbb
subl
aam
jle
xchg
dec
mov
ja
push
push
in
movsb
push
or
ficoml
hlt
popf
adc
mov
jnp
mul
jle
mov
xor
inc
clc
leave
sbb
or
outsb
mov
call
mov
loop
inc
add
xor
mov
not
out
loope
xchg
and
std
mov
push
stos
subl
dec
js
addr16
xlat
xlat
xor
pushf
add
dec
and
dec
xchg
jbe
lret
push
pop
movsb
xor
sarb
inc
jmp
imul
push
mov
push
rorl
or
mov
rcl
cmp
dec
cs
add
cmpsb
xchg
lcall
in
std
and
fidivl
mov
adc
xchg
mov
sub
loop
adc
jg
pop
fbstp
add
orl
push
nop
xchg
xchg
scas
nop
dec
adc
addl
addr16
into
inc
dec
arpl
in
mov
mov
es
adc
enter
push
mov
or
adc
and
jge
sbb
faddp
jb
rcrl
adc
xchg
push
add
movsb
mov
test
mulb
xorl
mov
mov
dec
sub
outsl
inc
sbb
loop
mov
cld
lahf
sub
sub
cltd
loop
cmpb
cmp
pop
nop
pushf
push
inc
add
sbb
faddp
dec
mov
pop
lods
outsb
lods
adc
mov
sbb
add
mov
pop
jmp
cmp
sahf
clc
iret
sbb
out
or
enter
es
xchg
adc
xor
or
jnp
jo
jg
filds
andl
addb
fs
pop
imul
fstl
out
mov
add
adc
in
call
ss
and
and
cld
fptan
mov
loop
pop
jnp
dec
mov
insb
dec
mov
add
mov
and
push
push
inc
inc
icebp
cs
pop
sub
out
mov
pop
movsl
jo
outsl
jo
cmp
jmp
and
push
lahf
cld
stos
push
mov
xor
or
add
je
add
icebp
shlb
mov
mov
aas
fbld
mov
inc
cmp
push
movsb
mov
mov
mov
cmp
jle
push
lods
add
mov
push
xor
and
mov
pop
mov
jg
fisubl
int
cmpsl
mov
imul
ja
scas
lea
or
dec
xchg
xchg
lock
arpl
fcmovb
push
pop
or
sahf
repnz
push
stos
test
xlat
xchg
or
dec
in
sahf
mov
fstps
or
gs
ds
xchg
cmp
add
and
sbb
or
fistpl
adc
sub
shrl
sbb
das
xchg
sbb
jno
cmp
sub
jp
lods
sub
mov
xchg
add
mov
mov
in
xchg
xchg
lds
cld
inc
add
jns
add
mov
aas
push
sub
sbb
leave
loope
dec
jbe
sti
and
fildl
mov
gs
mov
pop
mov
cltd
insb
mov
scas
cwtl
mov
add
sub
pusha
xor
xchg
adc
cmp
xchg
mov
xchg
movsl
cmc
ret
sub
sbbb
ss
mov
cmp
popa
stos
sub
rcr
mov
loop
jle
int3
shll
mov
adc
push
ds
dec
outsb
je
cwtl
int
pop
dec
nop
adc
sub
sub
in
dec
loopne
push
mov
mov
push
dec
xchg
sbb
jl
jp
js
mov
inc
push
pop
lods
push
jmp
xor
stos
insl
inc
add
dec
test
jbe
hlt
ja
stc
pop
gs
and
cmp
stc
call
je
jns
and
out
jge
xor
icebp
inc
adc
fcomps
popa
icebp
xchg
cmp
or
cmp
push
inc
sbb
mov
or
push
dec
loope
fdivs
dec
movsl
loope
andl
stos
pop
lret
sbb
cmp
mov
jbe
mov
testb
dec
es
pop
cmpsb
sbb
rolb
pushf
lret
pop
adcb
dec
loopne
sub
xchg
into
jg
sub
cs
loop
mov
ljmp
mov
call
jmp
popl
mov
outsb
mov
xor
call
adcl
iret
popa
add
mov
sbb
ds
popa
mov
popl
shll
pop
or
lcall
lahf
aaa
aad
dec
pop
sub
or
xchg
outsb
ss
sub
mov
pop
out
jp
insb
into
push
push
fiadds
gs
movsl
push
add
fs
into
std
or
jbe
enter
cmc
and
mov
pop
mov
hlt
jecxz
in
pop
mov
jae
pop
rcrb
pop
xchg
xchg
leave
mov
pinsrw
xor
hlt
xor
adc
sar
inc
pop
jne
nop
xor
and
jle
add
int3
loopne
xchg
adc
std
mov
adc
jbe
mov
imul
fimuls
inc
push
jbe
fs
stos
mov
fs
ret
sti
sbb
cmpsb
jl
mov
in
fwait
test
cmpsb
adcl
movsb
loope
or
add
or
or
or
mov
fdivl
and
roll
loope
in
xor
dec
int3
clc
jp
pop
adc
mov
jno
push
pusha
fsubr
jnp
icebp
add
mov
and
mov
xchg
mov
pop
in
sub
jmp
cmp
movsl
fidivs
mov
shlb
or
sbb
push
inc
xor
push
xor
xchg
mov
sub
pop
or
gs
ds
outsl
loope
dec
imul
xchg
fwait
cmp
les
loop
std
dec
jnp
push
ds
testb
push
frndint
jb
or
inc
out
pop
jb
cmpsb
mov
mov
pop
dec
das
rolb
xchg
incl
or
repz
popf
dec
daa
mov
ja
ror
adc
aad
xor
int
int3
mov
popf
dec
icebp
mov
xor
in
fwait
ss
mov
inc
sub
call
pop
stos
sbb
push
es
int
cmpsl
imul
into
repnz
in
dec
dec
or
lcall
jge
push
mov
cmpsl
into
nop
lret
mov
rcrb
or
jp
mov
dec
aam
jp
or
fbstp
aaa
adc
test
cmpl
sbb
into
aaa
fdivs
cli
repnz
pop
ficompl
jbe
sbb
inc
stos
adc
ret
sbb
pop
imul
mov
fs
dec
xchg
addps
and
mov
cld
outsl
nop
xchg
loopne
scas
jecxz
and
loop
cwtl
adc
pop
sub
leave
mov
cmpsl
test
add
mov
test
xchg
mov
pushf
ret
xchg
mov
jae
leave
mov
push
in
adc
jae
jecxz
les
addr16
arpl
ja
mov
fisubl
js
stos
cmp
inc
aad
leave
xor
push
pop
lods
js
xchg
push
mov
sbb
insl
mov
inc
mov
xchg
lcall
dec
enter
mov
bswap
shll
sbb
dec
xor
mov
out
stc
pop
fiaddl
repz
movsl
push
sub
push
mov
adc
push
add
and
lods
cmc
aam
lret
sahf
lods
pop
jns
fsubr
jmp
pop
gs
mov
ds
jns
push
cwtl
fimull
cmp
pushf
shll
clc
and
rcr
fcmovnbe
nop
rclb
es
xchg
and
popa
rcrb
loopne
loopne
call
test
xor
outsb
jno
cmc
filds
mov
mov
or
lea
lock
mov
lds
mov
pop
in
xorb
dec
stos
lods
ja
sub
imul
dec
sub
add
stos
es
les
inc
cmp
jp,pn
movl
bound
sbb
andl
push
lret
inc
lahf
or
in
mov
stos
insl
enter
lock
mov
mov
adc
outsb
int
mov
lcall
sbb
pop
pop
test
cmpsb
mov
pop
adc
jle
cmp
fbstp
lock
xor
jl
mov
cmpsl
loop
stos
lock
inc
xor
add
mov
inc
lods
jne
xor
bound
stos
stc
out
or
xor
pop
jb
aam
inc
lret
adc
jbe
es
cwtl
divl
pop
mov
xchg
je
sbb
mov
inc
and
push
test
ret
push
mov
dec
jecxz
dec
dec
adc
aad
imul
ljmp
jg
jae
mov
cmc
sbb
inc
cmp
cmovns
fwait
jle
inc
enter
insb
je
or
data16
lret
or
or
aas
test
mov
lods
cmpsl
jmp
sub
push
mov
jno
pop
popa
test
push
pop
jg
fistpl
push
cmpl
popf
hlt
inc
pop
stos
sti
pushf
jecxz
mov
mov
cmp
es
push
inc
inc
fildl
mov
mov
shlb
fimull
jmp
sbb
imul
mov
xchg
clc
push
loop
pop
cmp
dec
test
fsub
mov
jge
mov
dec
push
call
or
shll
push
icebp
in
add
jl
rcrb
jl
xor
cwtl
lods
aas
popf
lock
xchg
xchg
push
fldl
fwait
push
ja
push
stc
mov
std
xchg
xchg
mov
loopne
mov
test
push
pop
mov
ret
repnz
shll
scas
out
mov
clc
stos
in
mov
mov
mov
int3
adc
pop
adc
fcomp
push
add
daa
or
xchg
daa
lods
xchg
ret
pop
sti
lret
xor
mov
pop
xchg
cmpsl
fs
icebp
cmpsb
add
sub
jbe
sub
add
push
lock
sbb
inc
cmp
test
or
adc
test
jbe
pop
sub
jo
mov
mov
mov
movsb
les
data16
sbb
repz
mov
stos
add
outsl
lret
cmpsl
insb
pop
lahf
mov
inc
push
stos
in
fimull
add
push
cmp
lea
pop
sub
outsb
or
scas
insl
fdivrs
test
stos
scas
daa
repz
push
subl
xlat
negl
cli
insb
jecxz
shlb
mov
sti
mov
inc
add
mov
dec
adc
movsb
push
adc
and
mov
fsubrl
cmp
cmpsb
clc
mov
dec
push
int
pop
ljmp
pop
xchg
jne
dec
jo
mov
in
xor
adcb
shll
mov
sbbb
sub
sub
dec
adc
cmp
mov
adc
in
rcl
xor
sbb
insb
ja
mov
stos
cmpl
mov
mov
fwait
adc
and
cld
jge
and
std
jle
mov
pop
xchg
pmulhuw
jbe
add
sbb
mov
out
dec
sub
jb
cmp
sbb
stos
outsb
mov
pop
or
scas
mov
dec
mov
scas
push
lahf
push
lods
fisubrl
jle
dec
jmp
mov
mov
mov
lcall
cltd
push
mov
inc
sub
adcb
xchg
in
cmp
inc
loop
sub
sbb
mov
cmove
fistps
pop
sub
je
in
sbb
lret
adc
and
xchg
es
and
pop
sbb
fstps
in
push
xchg
sahf
pop
xchg
adc
inc
mov
xorl
pop
xor
pop
sub
mov
iret
notl
ja
xchg
not
cmp
test
fsubl
cmp
sub
andb
stos
jns
in
lahf
popa
call
mov
adc
stc
sbb
popa
movsb
pop
popa
push
lret
push
xor
mov
dec
pop
in
inc
push
out
lret
cmp
shrb
pop
mov
bound
mov
sbb
push
aaa
or
clc
add
sub
mov
push
inc
pop
mov
inc
dec
popa
clc
out
push
pop
mov
adc
into
fstpt
frstor
xor
inc
sbb
fdivrs
xorl
aas
ror
push
hlt
or
icebp
adc
sbb
adc
repnz
enter
das
mov
add
pop
add
movsl
jle
enter
jbe
sbb
notl
or
faddl
daa
push
inc
rcrb
dec
or
push
push
sarb
mov
cli
push
ss
sbb
xchg
lock
push
lods
int3
jae
dec
cli
in
jne
sti
dec
mov
shlb
sbb
ret
cltd
int
nop
sub
inc
xlat
and
psrlw
scas
inc
aad
pushf
loope
fistpl
fld
and
adc
mov
jno
sbb
popf
mov
add
or
lds
xor
lar
inc
push
jne
imul
addl
jb
jb
dec
nop
call
push
and
mov
jnp
mov
mov
pop
loope
and
imul
fnstenv
out
jmp
adc
aas
sbb
pop
xor
mov
mov
lock
xor
insl
mov
mov
dec
stc
loope
jns
push
bts
outsb
int3
push
mov
sbb
push
leave
push
mov
fstps
stos
aam
sub
sub
sbb
inc
ss
lea
insb
add
xor
fwait
div
rdpmc
rclb
arpl
adc
fstpl
inc
xor
pop
push
ficoml
scas
imul
loopne
or
mov
dec
mov
dec
cmp
push
push
sub
icebp
jns
mov
pop
add
mov
fcmovb
xchg
cmp
rolb
mov
test
xchg
sub
dec
mov
dec
loop
jae
cwtl
mov
mov
stc
sub
dec
xchg
push
sahf
cs
mov
loopne
pop
jno
outsl
jge
pop
scas
mov
loope
repz
pop
mov
ret
pop
mov
cmpsl
jle
dec
jbe
lods
test
or
jo
push
add
aam
fldl
lret
fisubl
aaa
icebp
insb
xchg
test
push
iret
fldpi
out
scas
pushw
orl
cmp
pushf
push
aas
mov
js
test
aam
jne
push
mov
or
pop
lock
sub
fdivl
mov
fwait
sbb
adc
pop
push
or
in
add
xchg
fcmovnb
fstps
aas
test
movsb
mov
xchg
sbb
shlb
in
int3
outsb
dec
lcall
ljmp
hlt
mov
daa
lock
and
and
xor
xchg
pop
mov
test
jno
shll
sbb
sbb
lock
in
add
fwait
lret
ror
jecxz
ret
shlb
mov
gs
xchg
cli
cmp
lods
or
int
imul
jg
orl
push
std
cmp
push
sarl
testb
and
and
in
adc
mov
mov
xor
mov
fsubl
inc
leave
push
in
sub
cltd
push
idivl
test
or
mov
mov
or
adc
and
dec
int
cmp
lea
xor
int
sub
and
lret
mov
xor
dec
pushf
popf
lods
stos
test
xchg
arpl
out
sbb
xor
cmpsb
adc
idivb
mov
in
xchg
mov
out
ret
mov
cwtl
aaa
inc
cmp
fisttps
mov
cmp
inc
add
dec
cmpsb
pop
lcall
lds
push
jne
in
pop
push
arpl
sbb
push
add
xchg
push
sub
ss
cmpsb
in
aam
subl
xorl
orl
or
jecxz
xchg
movsbl
or
cld
test
fsubrl
out
cmp
aad
es
mov
xchg
dec
adc
add
mov
push
sbb
push
ret
insb
or
adc
inc
add
adc
cmp
out
mull
xchg
jle
loopne
cmovg
mov
das
lods
ja
je
mov
cmp
in
cli
xor
and
inc
insb
aaa
mov
inc
jne
dec
stos
arpl
outsb
cltd
fildll
scas
jmp
popa
scas
call
cmp
fidivl
cmpsl
lds
adc
out
xchg
mov
and
cltd
jg
cmpb
dec
ret
pushf
stc
mov
ja
xor
jo
sub
sbb
inc
and
int
mov
in
fists
xchg
je
sbb
scas
outsl
mov
xchg
sti
mov
nop
mov
mov
sbb
dec
add
mov
in
pop
sub
xchg
pop
or
dec
fnstsw
repz
pop
clc
mov
mov
add
fwait
push
add
lods
pop
ret
sbb
mov
mov
adc
out
xor
add
popa
rol
sub
inc
xchg
xorb
add
fwait
mov
test
adc
add
and
hlt
and
bound
xlat
mov
lret
nopl
mov
dec
dec
popa
ficomps
int
in
lds
adc
dec
mov
in
jne
outsb
loop
enter
cmc
jno
add
mov
popa
mov
mov
lret
cmovbe
and
xchg
rol
jae
jg
lret
test
scas
push
add
pop
or
in
lods
xchg
xchg
call
sbb
sub
mov
inc
mov
and
cwtl
and
dec
mov
sub
subl
lods
rcrb
push
je
lahf
dec
stc
and
ds
cli
push
inc
xchg
xchg
mov
cwtl
and
je
pop
les
jnp
sub
mov
pop
mov
jmp
or
lods
ficoml
ljmp
sub
sbb
dec
jg
lea
pop
aas
out
and
dec
fstpt
add
in
out
daa
push
sahf
cmpsl
xchg
and
xchg
data16
test
push
xor
imul
adc
adc
jns
xor
jae
gs
adc
jae
jmp
mov
push
sbb
bound
clc
push
js
repnz
dec
dec
cmpsl
in
jno
mov
sti
inc
sbb
sbb
mov
stc
xchg
add
adc
push
adc
int3
retw
xchg
scas
cmp
dec
andb
cs
lahf
jp
pop
and
dec
push
dec
and
inc
leave
imul
sub
dec
or
dec
pop
cs
push
push
jns
jecxz
psrlw
push
xor
jnp
repz
add
xor
outsb
and
push
cli
loopne
cmpsb
inc
fcmovb
xor
or
mov
addb
xchg
jne
addr16
mov
test
cmp
mov
pop
hlt
mov
inc
dec
xchg
lret
inc
lods
fistpl
sahf
stos
ror
jne
cmpsl
lcall
add
cmp
mov
pusha
leave
sub
stos
cli
dec
es
push
pop
cmp
into
inc
lock
jne
call
cmp
xor
mov
sbb
cmp
leave
cltd
inc
out
inc
push
jnp
or
lock
and
sbb
push
andb
outsl
inc
dec
les
xor
cs
mov
push
clc
jb
or
stc
xorl
mov
out
mov
mov
xchg
jle
push
sbb
imul
push
out
and
in
push
fistps
xchg
fimuls
cmp
repz
add
sarb
xchg
push
repnz
push
std
xchg
jge
mov
stos
and
hlt
push
pop
inc
jne
fdivr
xlat
arpl
fwait
stc
pop
mov
or
push
nop
out
popa
dec
fwait
cmp
add
jle
data16
into
pop
inc
cmp
and
sub
sbb
ret
daa
add
stc
enter
xor
clc
lock
scas
insb
xor
into
stc
push
sbb
push
call
sub
push
xchg
or
push
int3
js
mov
repz
add
xor
sub
loope
insl
xchg
inc
idivl
sti
sub
push
movsb
push
adc
out
jns
lret
adc
pop
adc
cwtl
mov
jmp
pop
mov
jmp
jno
test
sub
sbb
movsb
xchg
movsb
repnz
lret
lods
sub
orl
xor
jg
filds
popf
xor
lret
xchg
lock
push
mov
push
mov
aas
jp
push
rol
add
mov
bound
add
outsb
jg
outsl
in
ljmp
cld
cs
xor
adc
sbb
lods
icebp
fdivl
add
leave
mov
adc
stos
jbe
ljmp
bound
or
popa
push
out
sbb
adc
mov
pop
fildl
mov
mov
push
push
xchg
ds
pop
lret
push
imul
xchg
jp
add
ss
mov
scas
fildll
mov
jmp
jp,pn
scas
or
add
fsubr
sbb
in
sbb
xchg
imul
outsb
cmp
ds
cwtl
cmc
xor
jns
xor
insb
testb
adc
aad
jle
or
dec
outsb
ss
or
faddp
xchg
sbb
insl
sbb
sub
xchg
sub
ret
sti
rorl
mov
test
divb
mov
mov
push
loope
not
mov
fistps
in
add
leave
sub
mov
push
push
push
and
jno
mov
xor
pop
lahf
icebp
fnstsw
dec
push
test
cmpsb
xlat
push
gs
jmp
paddw
mov
repnz
cmp
push
nop
rcll
out
mov
dec
cli
popf
aad
xchg
fsts
jbe
xor
mov
stos
fsubrl
data16
cs
mov
cmpl
and
mov
pop
xchg
sub
inc
xor
lahf
scas
lcall
lea
rolb
mov
sbb
xor
or
push
fsubs
push
mov
cwtl
cs
sub
ret
out
je
xchg
imul
adc
fistps
mov
xchg
xchg
inc
sbb
sub
xchg
fmull
mov
and
mov
test
sub
mov
add
pop
or
mov
jae
mov
mov
push
or
push
mov
sbb
add
loope
pop
fimull
pusha
jp
mov
and
cwtl
pop
sbb
mov
mov
loop,pt
in
pop
das
push
cmpsb
jp
pop
rorb
movsl
push
and
sti
je
xlat
cmp
clc
sbb
fs
mov
mov
sbb
or
imul
inc
mov
dec
inc
jb
test
push
popf
lret
lock
jecxz
pop
testl
cmpsb
add
xor
out
mov
jae
mov
inc
adc
cmp
xchg
sbb
or
dec
jg
enter
xchg
ds
cli
je
pop
rcrl
mov
add
lods
cmp
sbb
push
out
int
adc
xor
jg
sub
cmp
loop
jle
lahf
mov
fbstp
mov
pop
mov
arpl
xchg
mov
lock
pop
cli
dec
mov
cmp
and
arpl
and
mov
cs
mov
mov
add
sarb
pop
daa
imul
jb
mov
negl
jae
cmc
pop
inc
fldl
mov
pop
das
or
mov
les
outsl
and
xlat
mov
movsl
repnz
mull
repnz
ret
jmp
mov
cmp
jne
rorb
test
sbb
and
repz
xchg
popa
sti
popf
aaa
test
cmc
mov
add
mov
dec
cmp
js
jge
shlb
popa
inc
fdivrs
push
dec
add
jo
xor
push
adc
pop
shl
data16
xor
jg,pt
sub
sub
jbe
jae
jne
xor
mov
cmp
fs
cmpsl
xchg
jle
xchg
bound
sti
cli
push
inc
inc
cltd
repnz
mov
xchg
jge
add
or
jp
sub
ja
mov
std
pop
xlat
mov
adc
dec
push
aas
push
pop
pop
cmp
sbb
pop
iret
add
jmp
add
outsb
mov
cmp
xchg
push
roll
dec
outsl
inc
jmp
add
adc
fldcw
bound
in
and
cmpsl
movsl
pop
mov
add
popf
movsl
out
jne
xchg
cld
or
adc
rcrb
push
shl
xchg
dec
inc
sub
cltd
ja
shll
pop
cmp
xor
or
pop
pop
lret
into
iret
inc
fst
lods
push
test
loopne
cmp
lahf
imul
push
xor
pop
icebp
stos
int3
sub
fwait
push
nop
jle
jecxz
lahf
lds
loope
imul
shl
stc
in
inc
and
add
inc
cmp
scas
lds
add
sbb
andb
pop
add
repnz
in
ret
arpl
pop
cmp
inc
xchg
sarb
test
loop
fisttps
mov
paddd
mov
cmc
mov
call
sahf
fwait
stos
and
or
sbb
push
pop
xchg
mov
subb
mov
push
jg
xchg
pop
sbb
fwait
aad
add
mov
xchg
xchg
rcll
mov
in
xchg
cmpsb
mov
jae
rcll
pop
jno
lock
jno
inc
es
das
inc
mov
sub
outsl
inc
mov
mov
subl
loop
or
pop
mov
cmp
inc
leave
jo
lea
jmp
lods
push
inc
mov
out
pop
hlt
sbb
movsl
scas
push
fisubl
push
aas
lea
insb
movsb
mov
adc
mulb
sub
out
data16
cmp
mov
or
popa
adc
cmpl
popf
scas
adc
and
inc
std
imul
mov
lods
and
addr16
in
add
stos
loopne
or
mov
shr
jnp
sbb
imul
push
ficomps
mov
fdecstp
xor
shrb
cmc
ret
dec
jg
dec
fadds
adc
insl
in
movsl
ret
cmp
mov
and
lods
cli
jno
add
les
add
mov
test
mov
fcompl
ret
in
and
xchg
cld
clc
xchg
cmp
sub
addb
int3
adc
sbb
decb
sub
or
xor
and
ss
and
icebp
adc
jmp
int3
cmpsb
sbb
mov
mov
push
addr16
jle
push
bound
dec
fs
mov
lods
push
mov
mov
loopne
test
enter
xor
xchg
lea
jb
cld
ficompl
lret
fisubrs
repnz
dec
lahf
inc
cmp
std
inc
inc
lret
popa
dec
pushf
push
sbb
dec
aad
loopne
push
sbb
mov
push
popf
into
xor
aas
ret
push
lock
mov
or
js
arpl
xor
xchg
jb
mov
dec
mov
pop
andb
les
out
sbb
pop
pop
mov
xor
jge
and
cld
pushf
ret
fwait
lods
jbe
push
cmp
xor
jne
pop
pop
movsb
mov
gs
popa
push
cmp
sbb
mov
or
lea
cli
xor
out
sbb
mov
aaa
loope
fwait
or
mov
imul
jmp
pusha
push
pop
add
or
leave
rorb
les
mov
dec
and
repz
inc
cs
add
adc
push
push
adc
rclb
std
repnz
enter
xchg
popf
push
mov
into
xchg
test
jecxz
rclb
add
test
repz
push
mov
int
dec
in
adc
cltd
mov
inc
iret
imul
sbb
push
lods
xchg
ja
add
ret
int
int
pushf
fdivrp
inc
sbb
jne
sub
xorl
outsb
cs
xor
xchg
shll
int
pusha
jb
sub
or
pop
fldt
cmpsb
scas
sbb
jnp
das
inc
fsts
imul
scas
xchg
or
sub
xlat
fwait
sub
and
aaa
mov
pop
fmulp
pop
inc
xor
cs
lods
dec
or
push
push
leave
xlat
aaa
sarl
cmp
pop
dec
cs
mov
mov
and
scas
cmc
mov
jmp
mov
adc
push
cltd
sub
xor
cmp
mov
add
rcr
pop
dec
and
iret
pop
fnclex
outsl
inc
sarl
mov
orl
xor
xchg
hlt
adc
in
mov
or
stos
aad
push
or
mov
and
jno
jge
sahf
icebp
fwait
pop
ljmp
mov
lock
test
dec
icebp
adc
call
push
mov
mov
sti
jmp
pop
fcoml
sahf
cmp
cmp
cmp
jmp
pop
test
mov
push
mov
adc
leave
or
scas
adc
mov
adc
jno
inc
testl
sub
je
mov
xchg
inc
std
inc
movsl
inc
addr16
fcmovne
xor
mov
mov
and
cmp
cli
add
inc
ljmp
and
outsb
pop
push
sub
add
das
mov
xchg
mov
push
rclb
das
dec
sub
pop
subb
inc
popf
mov
rcll
jge
pusha
lcall
scas
mov
ljmp
jnp
cli
jmp
lret
cmp
cmp
xor
mov
fiadds
int3
out
push
mov
enter
shr
fildl
imull
mov
mov
jae
imul
rorb
mov
pop
aad
enter
jnp
scas
mov
incl
xchg
mov
xchg
mov
xchg
push
sub
scas
in
pusha
imul
test
pop
and
push
inc
push
push
jno
test
icebp
out
gs
inc
call
loop
cmp
pop
repz
push
out
lea
adc
shr
jecxz
add
outsl
repz
add
leave
loopne
leave
mov
les
push
leave
outsb
dec
or
or
and
int3
repnz
in
or
or
and
pop
insb
mov
push
inc
mov
je
fcoml
aad
ljmp
in
push
push
stc
pop
mov
ror
mov
fwait
inc
shrb
int
fmuls
mov
add
push
test
or
aaa
xchg
and
push
jmp
add
loope
insl
mov
das
cmp
dec
rcr
mov
daa
rorl
mov
push
ret
xchg
sbb
xsha1
shlb
out
popa
add
sbb
sbb
ja
and
xchg
gs
imul
fwait
cwtl
mov
sti
out
and
fisubs
fldenv
and
and
xchg
add
sub
dec
loope
xchg
les
push
or
lods
push
add
cmp
and
lret
jl
int3
sti
jns
out
ret
mov
mov
test
sbb
xchg
pop
sub
roll
sub
fsubl
popa
push
clc
pushf
cwtl
inc
nop
add
pop
lahf
and
or
call
cmp
pop
sti
cli
xchg
stos
pop
push
shr
imul
add
mov
adc
pop
js
xchg
imul
fadds
pop
decb
sbb
cmp
xchg
cmc
incl
xor
insl
aam
inc
clc
inc
addb
stos
js
sbb
mov
pop
mov
xor
sarl
mov
pop
mov
fwait
jmp
inc
out
bound
push
push
pop
leave
ss
int
in
subb
outsb
dec
pop
pop
add
jg
loop
pop
ret
fcoml
inc
ljmp
jmp
xchg
mov
jae
mov
les
jecxz
push
add
jo
scas
cld
roll
adc
out
in
xor
pop
add
shll
fldl
mulb
arpl
pushf
push
int3
nop
jl
xchg
cmc
mov
sbb
mov
cmpsb
ds
mov
sub
lahf
add
iret
dec
lock
jno
sub
and
ret
outsl
dec
daa
mov
scas
nop
pop
jb
jne
out
sti
inc
scas
repnz
inc
mov
cmp
loope
aaa
pusha
inc
lock
mov
adc
jmp
fidivrl
push
xor
mov
pop
pop
in
adc
jl
mov
push
pop
mov
add
jmp
jl
jle
in
pop
cmpb
cmp
sub
push
pop
mov
inc
push
cmp
rorl
ret
push
cmp
fst
push
xchg
or
bound
push
add
cs
test
mov
in
aaa
inc
inc
lds
cmc
out
fsubrl
sbb
jo
push
fs
test
and
out
jae
in
dec
xchg
loopne
and
mov
imul
cmp
or
ret
fnstcw
jg
add
or
push
jno
divb
xchg
loopne
insb
mov
aaa
inc
dec
fldenv
lahf
lcall
lret
ror
mov
cmp
test
push
inc
fadd
pop
sbb
orl
repnz
and
xor
cmpsl
dec
jmp
or
mov
dec
pushf
xchg
xor
ret
leave
inc
js
jnp
jg
mov
xor
mov
inc
shl
cmpsb
add
inc
lds
xor
das
subb
ss
or
ffree
pop
mov
pop
sahf
shrb
push
leave
jb
or
sar
lcall
fs
lcall
aad
or
fcomps
push
sub
loopne
call
jbe
nop
lret
sub
inc
pslld
cmpsl
sahf
mov
jne
ds
fbstp
sub
fwait
xchg
aad
or
loopne
dec
jbe
lcall
divl
int3
fcmovnb
pushf
jae
sti
mov
aaa
adc
daa
push
xchg
xchg
test
lods
add
fldcw
rcrl
lahf
xor
gs
xchg
push
stos
test
jg
dec
mov
mov
pop
shl
in
sbb
jae
or
pop
cltd
pop
xorl
jae
daa
mov
inc
or
out
aas
ror
push
xor
pushf
push
in
push
and
cmp
mov
adc
cmp
mov
jnp
pushf
js
shl
fwait
sbb
sbb
je
nop
jmp
pop
jp
mov
add
stos
xor
fldenv
push
mov
or
xor
push
sbb
xchg
fwait
xchg
leave
cld
xlat
stos
aaa
imul
imull
mov
push
mov
adc
cmpsb
out
sbb
adc
mov
push
arpl
xchg
aad
and
mov
loop
lahf
scas
into
jp
and
cltd
jne
sbb
inc
loope
cs
cmp
pop
mov
jbe
ret
xchg
fimull
std
out
fildl
popa
dec
push
stos
iret
lahf
push
imul
movsl
xchg
insl
ret
in
out
dec
cmp
mov
clc
inc
clc
fnstcw
mov
rolb
mov
push
in
das
jns
adc
daa
nop
stos
test
inc
pushf
mov
rcrb
mov
data16
outsl
xor
outsl
dec
mov
lcall
mov
sbb
push
add
xor
rol
ljmp
mov
stos
mov
sbb
mov
stc
js
add
lcall
popf
adc
mov
imul
mov
dec
and
xchg
call
repz
gs
js
mov
fadds
out
int3
push
lock
xchg
push
hlt
in
out
out
stos
mov
enter
or
inc
mov
popa
lret
xor
sahf
in
stos
lods
or
sbb
outsb
lret
add
or
xor
sub
cmp
and
loope
xor
push
mov
cltd
lcall
shll
sub
jbe
xorl
lds
pop
mov
xor
or
jbe
dec
aam
push
in
movsl
cmpsb
je
iret
fidivl
add
mov
insb
fnsave
mov
pop
cmp
xor
cmp
sub
and
ret
into
outsl
or
mov
popf
xchg
sbb
imul
pop
dec
icebp
out
fistl
pop
lret
hlt
adc
movsl
push
shrb
adc
mov
push
inc
xchg
gs
jo
hlt
sub
out
or
stos
mov
mov
push
dec
scas
iret
and
push
call
xchg
mov
sub
add
sbb
pop
and
mov
add
push
mov
aam
iret
movsb
sbbl
bound
and
xchg
je
or
jb
mov
push
cmp
mov
xchg
jbe
dec
add
aas
lret
or
subl
mov
and
in
insl
mov
fsubrl
dec
jbe
arpl
es
sbb
jnp
in
je
xchg
xchg
mov
into
xchg
xchg
pushf
xor
lret
aaa
mov
inc
inc
sbb
sub
mov
test
xchg
inc
xchg
mov
jo
cld
mov
pushf
ds
cmp
push
lret
cmp
cli
ror
mov
cmpsb
je
std
or
sti
cwtl
insl
getsec
lret
cmpsb
xlat
ret
add
insl
data16
sbbb
stos
jnp
xor
adc
xor
xor
pop
mov
push
shrb
xor
into
cltd
cld
mov
les
mov
insl
popf
in
add
push
std
inc
push
mov
outsb
iret
daa
add
cmp
lcall
mov
mov
push
add
daa
repz
mov
xor
hlt
mov
sbb
out
int3
outsl
push
and
into
int3
movsb
push
xchg
pop
push
push
mov
mov
repz
pop
adc
mov
add
mov
out
xor
sub
pushl
fwait
adc
and
pop
icebp
jp
mov
push
xchg
loope
xchg
shlb
mov
add
push
orb
adc
pusha
fs
mov
or
push
inc
sbb
cmpsl
push
cwtl
dec
jnp
push
popf
adc
inc
xor
pop
inc
mov
or
push
inc
xchg
cmp
xchg
loope
in
sub
sbb
out
mov
mov
xlat
int
pop
push
push
sbb
imul
dec
or
clc
cmpsl
sti
inc
movsl
inc
xchg
ret
push
sahf
mov
push
mov
xchg
aam
push
adc
pop
mov
xlat
pusha
inc
mov
push
out
out
sti
test
movsb
imul
movsb
rol
shrl
cmp
pop
fwait
int
mov
mov
mov
jno
mov
xchg
iret
negb
cltd
std
ljmp
jmp
lods
jl
or
movsb
push
inc
pop
sti
adc
int3
xchg
jge,pn
add
inc
ljmp
outsb
call
fidivrs
and
mov
xchg
popa
mov
cmp
iret
loop
shlb
sub
mov
inc
pop
or
fld
sbb
loop
flds
test
pusha
es
push
xchg
pop
add
scas
pop
mov
stos
imul
out
lock
popf
ja
jo
cmpsb
bnd
cmpsl
cmp
sub
ljmp
jmp
and
sbb
test
jg
inc
arpl
dec
inc
lcall
mov
push
mov
add
or
movzbl
sbb
xchg
xor
sarl
addr16
dec
dec
push
cmpsb
popf
push
movsb
mov
jp
addb
pop
push
jae
jns
push
jne
xchg
in
mov
pop
dec
pop
or
cmp
push
push
inc
cmpsb
sbb
jle
ficomps
ror
add
jg
je
push
jmp
shlb
and
popl
sahf
cli
in
enter
out
lock
push
push
out
cmp
jle
xlat
rcrb
pop
cmp
mov
decb
xchg
data16
or
mov
movsb
or
jo
je
xchg
cltd
and
mov
sahf
jecxz
push
and
and
mov
push
lods
out
stos
les
das
mov
rcrb
xor
nop
test
lcall
jae
xchg
jnp
aas
xor
or
mull
xor
mov
test
sub
out
or
les
inc
jge
lds
push
mov
inc
ds
inc
stos
push
sti
lret
push
imul
ds
pop
cli
sahf
dec
push
lea
xor
cmpb
pop
cmp
inc
dec
mov
adc
movsl
lret
fcomps
adc
push
and
inc
mov
fisttpl
push
imul
xor
inc
jle
mov
daa
cmp
lcall
imul
jg
int3
or
xchg
inc
jle
adc
imul
loopne
jl
jg
into
fwait
inc
adc
xchg
mov
outsl
jg
ficompl
mov
xor
or
fdivrl
mov
mov
inc
xchg
test
mov
push
sbb
mov
arpl
test
adcl
bound
cmp
and
jae
arpl
sub
inc
fcmovbe
jne
bound
xchg
enter
xchg
sbb
xor
pop
pusha
and
pop
subb
cld
pop
jno
insb
mov
add
loop
ret
andl
sarl
repz
subb
add
and
cmp
mov
repz
fistl
cwtl
push
icebp
jbe
push
jp
xchg
adc
push
mov
std
pop
or
pop
into
ret
sbb
test
push
cmp
cmp
jns
jnp
or
das
mov
and
inc
lods
mov
xor
repnz
enter
testb
dec
add
jo
adc
popa
js
mov
dec
divb
dec
enter
mov
loop
insl
mov
pop
sbb
fst
jge
cli
leave
sub
lods
fs
fisubs
loop
push
adc
xchg
mov
cmc
stos
mov
or
sahf
mov
xor
jmp
flds
aaa
rcrb
inc
test
jae
jmp
test
in
dec
dec
add
fdivp
or
enter
loop
push
push
or
jns
xchg
je
cmc
inc
jle
int3
inc
dec
fadds
ja
inc
mov
sti
rcl
jmp
mov
loope
lods
adc
push
pop
cwtl
popf
xorl
jge
clc
stos
testl
jge
add
xorb
and
xor
out
test
cmp
push
out
or
sar
cs
daa
xlat
adc
cmp
or
push
loop
push
xlat
mov
dec
cld
shll
push
or
mov
sub
xchg
and
jne
mov
dec
pop
mov
inc
mov
out
test
clc
ds
das
xor
popa
int3
testl
pop
xchg
adc
pusha
and
movsl
popf
push
xchg
bound
cmp
stos
dec
mov
cmc
mov
jnp
and
inc
adc
call
fsubrp
bound
bound
xor
sbb
pop
xchg
sbb
xchg
push
dec
and
push
scas
mov
or
dec
test
jle
sahf
mov
xchg
pushf
loope
or
xlat
sub
cmp
mov
stos
xor
mov
push
fldcw
adc
scas
in
inc
xchg
push
stc
rorb
dec
cmp
fidivs
stos
add
cvtps2pd
cwtl
push
and
sub
inc
inc
push
dec
mov
dec
sbb
push
push
sbb
out
sbb
push
loop
add
push
pop
stos
jge
pop
je
jnp
xchg
push
dec
xlat
divb
loope
les
gs
mov
repz
sbbl
out
insb
dec
fstpl
ret
jns
cmp
pop
pop
pop
sub
add
dec
notb
xchg
out
ds
pop
sbb
sub
iret
sbb
mov
mov
mov
push
mov
or
push
js
cmp
mov
cmp
insl
jl
add
sahf
sti
aad
lcall
push
push
inc
inc
hlt
dec
data16
fldenv
mov
sbbb
outsb
aam
hlt
jg
xchg
cmp
push
dec
inc
xlat
xchg
cmpsl
mov
data16
lds
in
lahf
call
mov
adc
sub
and
push
push
dec
movsb
adc
sti
push
adc
sub
mov
mov
xor
jnp
adc
mov
cmp
or
ss
hlt
movsl
cld
pushf
pop
fs
lods
les
test
ss
lock
dec
inc
pop
jle
push
sub
stos
adc
xchg
hlt
aas
mov
mov
adc
xor
jnp
testl
testl
mov
jle
pop
pop
mov
sbb
xchg
adc
inc
in
loopne
push
out
cmpl
xor
enter
push
pusha
jge
mov
enter
negl
sbb
pop
sbb
in
inc
push
pop
int3
ss
mov
lcall
push
push
inc
mov
sbbl
rol
je
in
arpl
mov
or
xor
int3
bound
and
xchg
mov
sbb
hlt
test
mov
dec
or
pusha
mov
adc
mov
mov
inc
inc
mov
add
icebp
push
xor
mov
pop
xor
fistpll
mov
pop
mov
repnz
cltd
ret
fchs
adc
push
outsb
mov
lahf
arpl
dec
or
mov
ja
es
das
lds
popa
shlb
hlt
and
dec
in
inc
scas
cmp
push
cmp
jbe
cmpsl
sub
mov
fstps
mov
daa
loopne
mov
int
push
adc
and
fbstp
dec
sub
mov
jno
push
fdivl
outsb
and
outsb
inc
pop
sub
jmp
loope
out
xchg
or
xchg
std
dec
repnz
fbstp
cmp
xor
popf
and
addr16
inc
lods
mov
pop
push
push
and
push
cmpsl
sub
mov
jmp
int
rorl
arpl
scas
push
movsb
movsl
cmpsb
inc
mov
das
and
movsl
inc
shll
inc
jae
sub
dec
mov
sbb
out
aam
imul
ss
lds
xor
enter
sbb
cmp
pop
xor
mov
repnz
jl
dec
repnz
lret
add
push
ret
fsubrp
inc
xchg
repz
push
sbb
ss
jle
push
popl
in
mov
adc
les
pop
popa
mov
mov
test
mov
cs
inc
or
mov
lds
sub
leave
pushf
push
xor
and
sahf
gs
jmp
mov
mov
ja
pushf
jmp
jbe
repz
mov
stos
or
pushf
jb
rorb
iret
insl
in
xchg
sub
or
xchg
jae
inc
jp
push
lret
pop
or
mov
lcall
push
jns
xchg
cmpsl
push
fnstsw
aaa
fcomp
dec
icebp
adcb
aad
mov
and
pop
push
mov
mov
jns
in
or
add
push
in
sti
xchg
bound
sbb
dec
cmp
pop
xchg
ljmp
iret
push
decl
pop
lds
int3
cwtl
dec
inc
mov
mov
dec
jecxz
jnp
cmc
xchg
mov
mov
and
clc
mov
imul
lea
push
inc
or
mov
fwait
sarb
into
pushf
cwtl
test
scas
gs
repz
mov
xchg
jecxz
dec
rcl
pop
sti
push
je
daa
jmp
int
fwait
addr16
mull
jg
xchg
xor
inc
jl
inc
icebp
pop
cmp
push
xchg
push
ljmp
mov
int
iret
pusha
pop
mov
sbb
sbb
push
aas
inc
popa
popf
mov
pop
shrb
push
mov
cmp
fldt
lahf
cmp
aaa
fiadds
inc
out
clc
rcrl
jae
push
push
movsb
mov
jl
xlat
mov
addr16
inc
add
or
mov
mov
pop
test
lcall
in
int
testb
int3
ljmp
outsb
push
or
push
mov
pushl
add
xchg
dec
xor
inc
and
dec
xchg
inc
mov
adcb
pop
rorb
daa
jge
mov
out
dec
adc
jge
movsb
mov
ret
test
test
xchg
or
sbb
mov
pop
stos
sahf
and
fstpt
sub
or
pop
hlt
mov
lea
les
dec
in
and
out
jbe
sbb
add
mov
popf
ja
and
add
shlb
inc
int
mov
jno
imul
cmp
inc
paddq
adc
mov
mov
pop
adc
mov
and
mov
lcall
mov
or
js
rcll
popa
sub
out
pop
daa
mov
cmp
iret
rclb
and
out
cltd
mov
aaa
int3
dec
push
cltd
mov
sub
xchg
movsb
rorb
pop
xchg
push
jns
push
loope
lock
jb
xor
outsb
test
aad
les
adc
adc
jge
adc
mov
or
or
popf
cltd
fs
mov
mov
sub
jmp
dec
repz
stc
punpcklwd
xchg
push
lock
add
xor
cmpsl
imul
mov
xchg
int3
leave
cmpsb
or
sub
sbb
stc
ss
xorl
pop
mov
int3
pushf
test
loope
fadds
sbb
jl
mov
push
cmp
dec
lcall
int3
ss
xchg
movsb
hlt
ja
in
xor
bound
imul
inc
pop
lock
jmp
xchg
sub
xchg
aaa
repz
mov
mov
cmp
xor
sbb
mov
sbb
sbb
sbbb
push
mov
mov
mov
add
mov
dec
xlat
in
xor
mov
ljmp
inc
add
repz
dec
sarb
mov
popf
stos
xchg
xor
aam
mov
lock
cltd
dec
pop
das
rcr
sub
test
js
push
std
push
lods
pop
aaa
rcrl
mov
pop
ret
pop
sti
out
mov
jae
add
fcomp
inc
add
inc
adcl
enter
add
inc
hlt
cmpsl
repz
test
sub
and
cmpsb
jmp
sub
arpl
or
imul
pop
and
inc
or
int
mov
lahf
test
pop
adc
cpuid
subb
aas
rcrl
or
xor
and
pushf
es
pop
push
stos
inc
fmull
aad
mov
push
shlb
push
call
pop
push
repz
adc
dec
cmpsb
cli
mov
xor
inc
subb
pop
fistl
sahf
jns
xor
ror
or
or
test
sti
xchg
cmp
cmp
sub
outsl
lods
scas
jge
push
mov
pop
push
pushf
xor
aam
sub
mov
xchg
adc
cltd
xlat
mov
loopne
cmc
clc
cwtl
add
lcall
push
jg
cmp
popf
fwait
push
sarb
push
cmp
cmpsb
ja
daa
inc
iret
mov
test
mov
add
popf
mov
and
push
movsb
sbb
enter
cli
ret
lods
mov
scas
jmp
in
xchg
pushf
inc
adc
scas
mov
cwtl
mov
dec
mov
out
add
xchg
stos
into
fcmovne
and
mov
fdivrp
test
jae
cltd
add
sti
adc
popa
cltd
jle
or
outsb
loop
pop
and
out
subl
imul
jb
movl
fstp
cld
sahf
push
add
ljmp
mov
nop
seto
shll
lret
adc
stos
xor
enter
push
xchg
mov
nop
scas
dec
push
xchg
aad
pop
and
pop
std
pop
iret
in
pushf
sbb
pusha
repz
out
mov
lahf
cs
cs
and
add
sub
push
aas
xor
jae
dec
test
jne
das
mov
test
ljmp
cli
sbb
lret
jb
push
sub
xchg
fldt
lock
mov
xor
in
xchg
test
mov
mov
jle
subl
sar
nop
imul
test
or
in
rclb
leave
hlt
pop
arpl
adc
neg
aam
cwtl
out
pop
xor
pushf
xchg
and
mov
repnz
mov
jae
and
outsl
and
nop
xchg
add
sub
pop
sbb
xchg
inc
cmpsb
mov
mov
cmpsl
push
or
cs
pusha
mov
dec
lods
pop
push
pop
push
outsl
push
pop
sbb
mov
push
and
stos
and
jb
addr16
mov
in
test
xorb
push
int3
or
cmp
movsl
hlt
fdiv
cmp
mov
jg
or
mov
cwtl
add
xor
iret
orb
pusha
dec
mov
loope
mov
enter
pop
int3
pop
sbb
andb
mov
fbstp
push
sbb
jno
jbe
sarb
shl
clc
and
cltd
sub
mov
dec
loope
lret
push
and
lea
inc
dec
pop
dec
ss
mov
scas
in
jmp
fldenv
jmp
inc
scas
in
pushf
lea
mov
imul
sub
mov
int3
ljmp
in
ret
or
pusha
mov
cmp
push
pop
xchg
mov
insl
jecxz
icebp
pop
jl
push
xor
xchg
xchg
cli
jb
xchg
mov
jp
inc
imul
sub
dec
jb
cmp
mov
fists
push
les
call
mov
fimull
clc
mov
rol
mov
insb
out
dec
stos
cwtl
adc
mov
loopne
loop
jne
in
xchg
dec
stos
sbb
sbb
jno
dec
mov
cld
hlt
jmp
jecxz
sbb
cmpl
outsb
push
ja
adc
add
pushf
xchg
mov
outsb
sub
add
and
adc
cmp
fs
clc
xor
lock
test
nop
arpl
or
fldenv
or
repz
xchg
lcall
syscall
ds
rcll
or
es
xchg
out
shlb
addb
lea
and
sbb
hlt
jl
mov
mov
and
adc
jmp
scas
gs
mov
test
out
or
xchg
pop
loop
dec
xchg
outsb
push
stc
das
mov
mov
lods
shlb
xchg
test
xchg
mov
movsb
pop
or
out
or
pusha
xchg
jecxz
in
mov
ret
addb
mov
inc
push
cmp
lret
dec
les
push
aam
lea
lret
xor
mov
cmpsl
mov
in
int
cli
rorb
mov
stos
jle
sub
test
add
sbb
lret
jecxz
stos
sub
sbb
mov
push
pop
mov
dec
cmp
std
decb
lcall
add
push
cli
push
jl
sbb
dec
mov
fsub
lods
inc
scas
stos
in
or
out
mov
stc
sub
cli
mov
fs
dec
test
call
jns
pop
adc
xor
daa
std
adc
in
fistps
and
rol
jecxz
fnstcw
cwtl
xor
rorl
cmp
mov
dec
or
pop
push
sub
jp
clc
sbb
jnp
add
adc
mov
shll
sbb
pushl
popa
mov
in
push
mov
xor
xlat
loopne
xchg
mul
icebp
and
out
adc
std
inc
std
lret
lods
mov
loop
aad
std
inc
mov
aad
xchg
mov
in
sub
shrb
xchg
mov
adc
xorl
jns
ss
add
xchg
xor
dec
leave
jno
inc
or
push
cmp
jge
ljmp
push
popa
jl
das
cmc
call
dec
shrb
in
mov
out
mov
jecxz
lret
ret
cwtl
add
fisubrs
adc
clc
lahf
ljmp
dec
pusha
les
add
push
push
push
cmp
add
pop
clc
into
add
shlb
sub
mov
push
and
stos
xor
and
test
mov
push
enter
jle
lods
bound
push
pop
or
popw
mov
jne
loope
cwtl
andl
sbb
or
add
lcall
pushf
sub
mov
repz
cmp
sub
sbb
scas
andl
test
push
add
cmp
dec
mov
sbb
cwtl
mov
dec
sbb
lret
psllw
pop
jb
push
push
loope
xchg
out
pop
pop
cld
push
cmc
mov
aam
aad
push
sti
int3
mov
daa
sahf
push
subl
imul
leave
inc
outsb
jg
sbb
repnz
adc
test
sub
xor
insb
push
iret
sub
jle
cli
sti
cmp
push
imul
or
mov
push
sbb
push
ja
nop
and
inc
push
in
test
fdivs
into
cmp
add
insl
push
mul
orb
pushl
lahf
dec
mulb
insl
out
mov
xchg
cmp
pcmpeqw
xor
push
lods
orb
mov
mov
aaa
push
or
arpl
iret
mov
movsl
sarb
add
ljmp
call
cmp
or
cs
inc
andb
ret
mov
mov
mov
stos
dec
fisubl
sbb
test
pop
dec
aas
fisubl
pop
in
lock
js
pop
xchg
mov
mov
test
pop
loop
shl
jp
cmp
psrad
and
sbb
lret
insl
mov
mov
xor
sbb
les
pop
loope
fsub
xchg
inc
out
gs
add
sbb
fidivl
scas
gs
pop
ds
dec
jbe
les
cltd
jle
in
leave
dec
aam
iret
fwait
stos
bound
and
inc
xor
mov
fst
pop
push
cmp
mov
sbb
sub
jge
loop
pushf
or
sbb
jecxz
lock
imul
mov
mov
adc
mov
xlat
mov
pusha
bound
cmpb
insb
xor
xor
outsb
lret
repnz
fcmovne
cmp
sub
mov
add
addb
cmp
fidivrl
fwait
dec
or
xor
mov
or
fistpll
add
mov
mov
dec
lods
std
test
in
dec
mov
adc
mov
mov
cmp
mov
xchg
fidivl
push
xor
push
add
pop
inc
xchg
das
mov
jne
or
in
push
cmp
cmpsl
sbb
cmp
dec
pushl
xlat
dec
cmc
out
and
call
cli
fwait
arpl
scas
xchg
shrb
clc
imul
inc
into
push
mov
out
add
sub
outsl
cmp
inc
sti
pop
mov
dec
sbb
or
mov
sbb
repz
fsubrl
jle
pop
cld
adc
push
out
and
cmp
jae
popf
aas
sbb
jmp
scas
mov
icebp
inc
lds
roll
rcrl
xor
push
sbb
jge
sbb
popf
or
out
jmp
ds
repnz
aas
pushf
outsb
stc
sbbb
jg
add
inc
mov
js
test
dec
ss
loopne
movsb
dec
push
inc
inc
enter
lock
sbb
mov
jno
pop
add
mov
scas
insb
push
mov
jo
cmpsl
jne
clc
push
dec
les
push
cmc
add
fwait
jge
leave
cmp
lea
sar
push
into
mov
repnz
int3
cli
rorb
lds
frstor
pusha
stos
lret
movsb
lret
adc
push
mov
sarl
adc
stc
xchg
jecxz
cltd
sahf
ljmp
out
push
repnz
and
inc
xchg
ret
adc
int3
jmp
ss
xchg
fnstsw
or
sub
and
push
iret
gs
jecxz
lods
out
inc
or
imul
fisubs
ret
pop
sub
idiv
xchg
mov
mov
out
in
movsb
rolb
out
pop
insl
mov
adc
shll
push
inc
lds
adc
cmp
adc
mov
xchg
and
adc
pop
jnp
xchg
xchg
rcl
int3
sbb
push
scas
pop
mov
mov
mov
fwait
mov
xor
cmp
mov
cmp
sbb
mov
jl
sub
sub
inc
repnz
adc
cmp
add
sbb
loop
in
je
jnp
movsl
add
inc
xchg
pop
mov
roll
sub
sub
jge
andb
dec
push
pop
in
lea
cs
mov
mov
push
or
mov
cmp
iret
mov
jmp
stos
sub
push
jns
data16
fidivrl
hlt
or
sub
ds
shll
sbb
and
mov
jae
leave
aad
push
nop
or
js
repnz
sti
sbb
dec
xchg
cli
mov
cmp
movsb
jge
int3
sub
fdivl
daa
sarl
add
repz
out
cmpb
adc
bound
cmc
pop
ds
jns
inc
cmpsb
mov
mov
dec
add
imul
testb
insl
test
mov
xor
push
adc
test
test
mov
mov
mov
and
pop
xor
pop
sar
std
sbb
jae
or
pop
insb
mov
orw
stos
into
ja
xchg
insb
dec
into
mov
mov
mov
cld
dec
das
dec
add
pop
lds
fwait
mov
je
jecxz
push
jmp
bound
xor
xchg
mov
shll
sub
jbe
adc
mov
sub
leave
jle
insb
adc
pop
fidivrl
dec
pop
adc
cwtl
push
sub
clc
sti
sub
shrb
fildll
pop
fildll
test
dec
and
test
lret
loope
aaa
xor
aas
dec
pop
jae
jl
pop
mov
testl
adcl
fsubr
insb
push
and
push
or
fs
mov
cli
mov
fwait
sub
xchg
add
xchg
add
inc
xchg
rorl
shlb
inc
cmp
cld
mov
sarl
sbbl
jbe
clc
jecxz
mov
dec
mov
jmp
lock
pushf
xchg
fstpt
mov
cltd
stos
mov
out
repnz
pop
pop
subl
cmp
test
je
sbb
pushf
mov
sbb
pop
mov
xchg
clc
ljmp
mov
pop
dec
cli
push
mov
mov
mov
sahf
pop
pop
dec
cmc
and
mov
mov
negb
jge
pop
cmpsl
stos
xchg
sbb
xchg
adc
push
leave
testb
inc
or
in
mov
pop
xchg
sti
or
xor
sub
lahf
mov
inc
sub
push
pop
sarb
jb
sub
ret
dec
lcall
push
stos
jbe
divb
push
push
push
shrl
stos
test
and
ret
lock
js
and
mov
add
clc
jl
nop
xchg
test
mov
mov
sub
push
push
push
pusha
xchg
insl
rorl
aad
mov
loope
ljmp
push
insl
notb
pop
in
inc
mov
mov
nop
dec
call
sbb
inc
iret
into
add
push
sub
orl
outsl
adc
orl
pusha
xor
sub
out
mov
dec
mov
pushf
lods
lods
jno
and
mov
gs
lds
fbld
movsb
fs
out
push
inc
insb
ja
mov
push
xchg
mov
cmp
cmp
cmp
fnstenv
jp
adc
loop
mov
pop
or
mov
sahf
les
insl
dec
mov
mov
daa
mov
jl
outsb
rcl
jno
push
mov
dec
push
or
insl
sbb
into
test
leave
je
add
push
stc
addl
cmp
mov
inc
push
cmp
lods
lds
add
ss
and
pop
iret
ja
cwtl
movsl
scas
lds
in
xchg
decb
fisubl
lock
test
adc
and
xchg
push
leave
mov
and
aas
stos
shr
test
push
aas
into
push
jbe
dec
xchg
pop
mov
cld
cmp
fyl2x
in
inc
shrl
xchg
in
sbb
int3
loop
mov
adc
mov
and
xor
psubw
mov
mov
pushf
gs
xchg
nop
or
dec
jge
aaa
pop
sub
outsl
pop
enter
icebp
pop
daa
push
adc
sub
mov
jae
test
add
cmp
push
nop
xchg
mov
adc
pop
fcoml
popf
clc
mov
insb
cmp
or
rcrb
andl
xlat
jno
add
loope
and
mov
insb
mov
clc
in
xchg
xor
add
or
xchg
or
push
sub
mov
incb
loop
lcall
xchg
aam
jae
and
cmp
dec
push
lods
dec
jecxz
and
sub
addr16
push
orb
pop
out
lret
push
sbb
or
xor
lods
sub
lds
push
in
insb
loopne
std
dec
lcall
add
aad
cmpsl
add
fisubrl
dec
cmp
mov
fmuls
fisttpl
xchg
pop
sub
movsb
xchg
push
test
xchg
xor
fidivl
mov
sub
out
arpl
add
dec
inc
mov
pop
sbb
jae
es
sti
push
adc
xchg
add
mov
mov
rol
push
push
dec
inc
mov
repnz
fdivrs
xor
jns
jb
cmp
jne
ja
push
dec
hlt
mov
lret
divl
xlat
notl
nop
xchg
out
movsb
stos
imul
jmp
mov
jbe
mov
aad
mov
jns
inc
inc
daa
js
out
jmp
aam
sbb
xchg
insb
mov
popf
adc
mov
mov
push
mov
inc
rcll
mov
lock
loope
xlat
mov
fdivs
push
add
add
dec
push
xor
push
jle
cld
mov
mov
sub
negb
dec
xchg
loop
data16
and
leave
lea
push
out
lds
into
popa
cmp
int3
mov
ds
mov
loope
popa
xor
xchg
adc
notl
sbb
jecxz
sahf
rorb
mov
int3
je
rolb
sbb
add
lea
icebp
push
xchg
loop
push
push
cwtl
push
sbb
xor
pop
ficomps
dec
dec
push
aaa
mov
lods
aad
mov
in
dec
scas
cmp
xchg
data16
and
fstpt
inc
stos
lea
pusha
push
sub
add
pop
dec
mov
fdivr
mov
das
push
inc
std
and
mov
aaa
test
loop
pop
pop
add
shlb
popa
out
repz
inc
and
pop
jge
cltd
ret
and
add
push
shl
inc
mov
mov
and
fbstp
push
sub
xor
popa
cmpsb
lds
shl
xchg
sub
sub
mov
adcl
jno
lahf
subl
or
jne
sti
cmovo
xchg
rcrl
scas
dec
test
cmp
push
sub
pop
dec
fadds
fidivs
xor
fnstsw
add
lods
ljmp
or
pop
adc
pop
jb
push
aam
ss
cmp
loope
adc
inc
in
and
inc
lods
sbb
mov
test
fcomi
ja
jge
mov
sub
stos
iret
leave
push
in
fcoms
mov
push
hlt
jp
mov
push
stos
cmpsb
scas
adc
cmpl
outsb
popa
jbe
ja
fadds
xchg
mov
in
xchg
fcoml
pop
daa
nop
lods
aam
dec
pop
lahf
jecxz
lods
mov
mov
icebp
dec
xchg
enter
movsb
inc
add
scas
test
pusha
movsb
pop
outsb
loope
popf
push
fsubr
iret
pop
or
lcall
inc
xchg
outsl
push
jle
mov
add
out
push
xchg
es
sbb
push
aas
add
pop
rcl
enter
ret
popf
jmp
or
push
lahf
cli
popa
shll
scas
push
xchg
xor
loope
gs
and
cmpsb
cltd
mov
xchg
test
jne
aaa
jns
data16
jmp
jmp
adc
mov
outsl
xor
loopne
cld
repz
sbb
arpl
and
or
sbb
loop
mov
fxch
add
aad
xchg
push
mov
sbb
sahf
xchg
push
aaa
movsl
cli
push
gs
sub
inc
cmpl
xchg
jns
mov
ljmp
cmpsl
outsb
in
test
scas
and
dec
and
sbb
adc
mov
maskmovq
notl
les
jl
dec
cmp
movsl
ret
fstpl
leave
sub
ja
add
les
mov
outsb
xor
cmp
ret
push
das
dec
xchg
jp
sub
inc
jno,pn
icebp
push
jl
jmp
loope
adc
ss
pop
cmp
xchg
pop
aam
push
cs
xchg
and
daa
xchg
loope
xor
mov
xor
jmp
test
add
cmp
insb
jns
les
decl
push
hlt
push
mov
and
jmp
jo
inc
xchg
and
repz
roll
lods
push
adc
into
or
adc
mov
push
inc
das
fs
imul
and
xor
loopne
cs
fwait
or
mov
sbb
out
push
sub
pushf
cs
les
sub
ja
mov
leave
lds
mov
lahf
mov
push
and
dec
mov
bound
jo
aad
sbb
push
dec
cmpsl
fisttpll
and
mov
lds
loop
adc
adc
sar
orl
jl
cmpsb
pop
inc
inc
adc
add
test
pop
xor
dec
dec
dec
int
ds
mov
inc
sub
jl
jmp
xor
loopne
jne
push
mov
out
mov
sbb
out
lret
inc
mov
jl
mov
xor
cltd
push
cmp
or
fidivrs
lods
aaa
pop
cld
cmp
jae
lock
test
fcoms
adc
insb
xor
imul
dec
adc
cli
sub
cmp
fnstcw
scas
add
mov
pop
fdivrl
mov
out
fstps
mov
push
stos
adc
ret
push
aaa
orb
mov
push
mov
popf
and
inc
pop
aaa
sub
push
cmpsb
pushf
cwtl
cmp
aad
les
shll
lret
aad
fadds
ret
ret
fiadds
dec
lea
aad
int3
cmp
dec
cmpsl
xor
cmp
mov
add
push
incl
xchg
push
cmp
push
dec
out
js
pop
lock
xchg
push
push
xor
pop
out
roll
imul
xchg
push
jmp
loope
mov
xchg
add
andb
adc
into
test
decl
lods
or
jp
test
adc
aam
loop
and
addr16
pop
fbstp
adc
mov
push
nop
dec
or
ret
cltd
test
or
mov
mov
fs
mov
incb
insl
add
iret
mov
test
test
call
jge,pt
xchg
ds
in
outsl
js
adc
addl
repz
and
dec
outsl
jo
sbb
aaa
sub
roll
dec
and
dec
dec
mov
or
dec
push
fdivl
adc
push
iret
leave
push
push
ret
sub
inc
das
mov
pop
dec
dec
fs
add
icebp
push
hlt
loopne
pop
xor
insl
xchg
icebp
stos
fbstp
xchg
test
sub
dec
push
lret
mov
fldenv
xchg
test
fwait
cli
rep
xor
cmp
jns
cmpsb
and
iret
jo
lret
jno
or
fadd
and
cld
jbe
popa
out
pop
or
jbe
call
frstor
lret
mov
scas
sbb
daa
push
xchg
fadds
add
daa
cs
xchg
fcomps
sahf
jo
pop
lcall
pusha
fisubs
ret
call
nop
xor
leave
jne
mul
fistpll
push
sub
mov
jbe
xor
inc
pusha
xor
cld
into
nop
and
mov
sbb
add
jl
cmp
push
jg
push
lock
and
ret
inc
mulb
dec
push
std
jne
inc
mov
out
jbe
lret
mov
jb
test
or
adc
insl
pop
inc
jmp
insb
sar
cmpsl
and
and
orl
stc
popf
fisttpll
add
in
out
rcr
push
mov
sbb
shufps
adc
and
adc
cwtl
addr16
xchg
add
jnp
and
es
mov
sub
test
lcall
jne
cmpsb
adc
vpsrlq
xor
sti
sub
stc
jl
mov
aaa
mov
int
mov
mov
stc
jns
mov
ror
dec
pusha
mov
jnp
push
aad
sub
xchg
sub
push
test
add
add
and
lret
loop
jge
mov
scas
test
sub
sub
mov
pusha
xchg
cmp
jno
jecxz
scas
jl
mov
std
outsl
xchg
daa
loopne
push
orl
xsha1
cmpsb
or
pop
push
lock
adc
sti
pop
mov
push
xor
sbb
cmpsl
popf
push
mov
mov
insb
sub
stos
and
and
scas
cli
shrb
lods
divl
pusha
lods
push
mov
jo
adc
aaa
int3
sbb
rol
add
xor
add
fbstp
dec
or
push
and
pushf
mov
int3
lcall
in
add
cltd
sub
repz
mov
jns
cwtl
xchg
push
push
inc
xchg
mov
gs
add
mov
jmp
or
push
clc
les
mov
data16
dec
fisubrs
clc
dec
push
std
jmp
lcall
jb
jo
mov
int
scas
nop
shlb
mov
ret
fimuls
jp
out
dec
cmpsl
push
mov
mov
add
shlb
fwait
jbe
stos
xlat
jg
hlt
addb
pop
push
mov
roll
or
mov
div
xorl
inc
mov
fcmovnu
push
lret
lcall
sub
sub
pop
or
lds
pop
aaa
rcrl
jne
sub
hlt
push
sub
es
push
pop
nop
test
test
and
addl
in
cmpsl
or
adcl
call
pushf
pop
push
aad
pop
out
out
pushf
pop
iret
out
leave
mov
sbb
jb
xchg
push
add
xor
enter
sub
jecxz
out
xchg
sub
outsl
test
lret
repz
dec
cwtl
hlt
push
fiadds
lcall
sahf
imul
repnz
push
jnp
sahf
pop
test
clc
imul
and
and
jecxz
inc
or
pop
scas
cmpsl
enter
sub
mov
fildl
pop
mull
adc
ljmp
mov
fsubr
pop
mov
cmp
push
jno
jge
fldl
inc
adc
sti
and
jecxz
inc
ret
dec
call
test
adc
mov
jns
lods
xchg
fwait
jae
sub
inc
inc
mov
cmp
or
jmp
fwait
adc
and
cmp
addr16
aaa
jmp
pop
negl
adc
lods
filds
sete
mov
lea
mov
ret
repz
or
icebp
dec
fiaddl
setno
clc
daa
mov
aad
jge
push
lret
pop
lahf
jb
iret
gs
jecxz
pop
in
int
jmp
jnp
push
and
jnp
jne
xchg
pop
cmpsb
sbb
mov
add
dec
lods
push
pop
mov
movsl
icebp
pop
cmp
cmp
cmpsb
sbb
insl
push
adc
sarl
out
sar
in
pop
lret
jno
ss
sbb
mov
xor
fwait
dec
in
xor
dec
loope
xchg
jbe
test
dec
sbb
mov
and
inc
rcll
sbbb
add
push
add
cli
mov
data16
filds
stc
adc
and
adc
xchg
mov
mul
test
fst
lret
call
xchg
in
mov
sub
mov
cmpsl
push
adc
std
inc
adc
or
data16
lods
jge
inc
gs
clc
inc
xor
in
pushf
or
stc
sub
sarb
cmpsl
cmpb
fsubrl
mov
loopne
sub
jge
pushf
and
movsl
mov
inc
imul
mov
mov
push
movsb
popa
loope
dec
movsl
push
push
into
sbb
int3
add
loopne
xor
leave
push
sbb
cmp
dec
lods
stc
jecxz
sbb
cwtl
outsl
inc
inc
mov
movsl
jo
icebp
lock
and
mov
leave
js
push
jae
mov
and
cs
sub
push
mov
pop
out
enter
sbb
adc
mov
and
out
xor
or
pop
add
insl
jne
test
cmp
div
ficoml
dec
fldt
pop
es
mov
sub
cmp
insb
sahf
js
inc
sub
lcall
pop
push
mov
adc
push
cmovo
dec
xchg
pop
jnp
mov
bound
push
lcall
enter
bnd
daa
je
popf
pop
inc
fstpl
mulb
jae
lret
fdivrp
jle
mov
leave
mov
mov
lock
pop
jmp
cltd
dec
cltd
xchg
adc
jb
inc
push
je
xlat
enter
jbe
sti
or
das
out
push
arpl
fs
jge
sub
dec
add
mul
loope
ret
xchg
sbb
or
sub
push
add
inc
call
mov
push
shlb
aad
add
or
cmp
data16
jo
out
sub
mov
cmp
sbb
cs
leave
inc
in
xor
repnz
inc
ja
push
scas
lods
mov
lahf
dec
push
test
jmp
pop
retw
pop
lods
push
push
ret
jnp
pop
leave
icebp
sub
div
flds
or
cmp
xor
aas
outsb
ret
mov
sbb
mov
fs
push
inc
mov
lea
mov
rorb
test
leave
lahf
mov
das
jecxz
dec
nop
ret
das
jmp
imul
xchg
test
loop
inc
sub
popa
fldt
pop
add
shlb
mov
test
ja
mov
jp
test
cltd
bound
sbb
or
xor
xchg
sbb
or
in
pop
add
pop
mov
cmp
outsb
inc
out
add
icebp
jae
cld
mov
sub
je
js
sub
dec
lahf
hlt
mov
ja
or
negb
pop
jg
sbb
aaa
pop
sahf
cmpsb
out
cmpsl
fsubrl
data16
mov
mov
fprem
repnz
xor
gs
jns
sbb
mov
cmpsb
outsl
sub
incl
lods
push
mov
cmp
filds
dec
mov
dec
push
lret
repz
orb
jb
push
out
push
lcall
xchg
add
pop
rcll
adc
ljmp
sbb
inc
call
add
lret
adc
or
sub
or
mov
pop
imulb
shll
mov
arpl
pop
mov
dec
xor
loop
fs
testb
call
xlat
or
push
data16
test
dec
jb
mov
insl
shr
repz
scas
lret
fcmovnu
loope
in
sub
sti
outsb
pop
add
inc
sbb
jp
sbb
mov
ret
and
stc
add
sub
icebp
test
aaa
outsl
jle
adc
sub
push
mov
fs
cmpsl
xchg
inc
xchg
mov
add
jge
sbb
out
int
pushf
pusha
orl
negb
cmp
aas
pop
mov
sub
orb
add
pop
outsl
cmp
shrl
cmpsb
pusha
addr16
jp
ljmp
push
xchg
mov
jmp
push
jbe
ljmp
arpl
or
jle
pop
push
out
and
pop
add
pop
pop
mov
push
mov
or
cmp
mov
mov
ljmp
or
mov
pop
outsb
jne
ja
cmp
pop
adc
sub
pop
mov
data16
aam
xchg
test
sub
rcrl
jnp
jns
pop
fwait
mov
xchg
in
mov
lds
mov
pop
inc
rcrb
xor
mov
jns
insb
ror
mov
inc
add
aaa
test
and
inc
stc
pop
cmp
negb
and
cs
dec
les
out
ljmp
push
or
cwtl
push
xlat
cmc
test
lods
xchg
cmp
xchg
push
jo
insb
mov
sbb
dec
inc
lcall
repz
mov
jl
dec
cs
ds
inc
aas
outsl
push
mul
int3
je
or
jno
imul
sub
adc
add
ljmp
in
xchg
ja
sarl
ss
xchg
fildll
pop
adc
sarl
pop
in
cmpsb
cmp
clc
addr16
lock
dec
imul
sbb
pop
pop
push
inc
dec
mov
push
enter
dec
scas
jnp
fbstp
in
mov
test
inc
inc
jl
push
xchg
test
aas
xlat
fistpl
fdivs
cltd
dec
add
and
push
movsb
sbb
push
and
shll
stc
cli
outsb
jo,pt
mov
jecxz
jns
ud1
inc
push
xchg
and
rorl
push
hlt
cld
in
jb
xchg
mov
mov
addl
mov
jge
add
loopne
shlb
jl
jbe
fistl
push
sarb
xchg
mov
push
cmpsb
out
push
test
jne
push
test
outsb
mov
pop
sub
stos
jl
dec
sbb
or
add
rcrb
mov
mov
inc
movsb
in
into
xchg
ljmp
daa
outsl
addr16
sub
xor
xchg
gs
mov
ss
movsb
adc
ret
jmp
adc
cltd
int3
jne
pop
idivl
idiv
mov
enter
les
pop
insl
xchg
or
pop
lcall
test
cmpsb
pop
dec
xchg
xchg
aad
mov
pop
adcb
pop
test
shlb
cwtl
pop
cltd
pop
inc
jno
inc
cmpsb
movsb
push
test
sbb
ds
sbb
cmpsl
sahf
or
rcrb
or
imul
inc
js
pop
dec
inc
adc
sbb
xchg
enter
mov
pop
cmc
int
mov
and
or
cs
or
popa
iret
xor
mov
sbb
push
call
cmp
repz
sarl
inc
adc
mov
inc
insl
inc
scas
mov
out
leave
pop
inc
xchg
frstor
jge
lock
jbe
pop
xor
cmp
sbb
mov
or
mov
push
add
sub
test
push
adc
aas
hlt
mov
shrb
jo
movsl
push
dec
outsb
xchg
scas
add
cld
lcall
mov
mov
xchg
jle
push
or
inc
movsb
push
loopne
inc
flds
mov
out
nop
cmpb
pushf
loope
jecxz
and
jecxz
push
push
fwait
inc
sbb
add
lods
cmc
loope
sbb
push
dec
subl
mov
cwtl
jg
adc
mov
push
aas
add
pop
adc
xchg
int
sub
xchg
mov
fdivl
fnstcw
stos
cltd
faddl
shlb
sub
je
mov
adc
xor
mulb
jbe
mov
fwait
icebp
addl
inc
test
dec
mov
das
jmp
test
jbe
push
lods
dec
dec
add
bound
imul
loopne
jo
jae
sub
js
jge
shlb
pop
mov
cmpsl
lods
imul
fwait
ror
cmp
pop
xchg
mov
xchg
jmp
fistpll
pop
mov
and
addr16
divb
adc
popf
mov
pop
push
add
scas
bound
ret
test
add
test
test
or
push
inc
cltd
pop
fisttpll
dec
pusha
jp
repz
push
xlat
adc
inc
movsl
imul
and
dec
adc
arpl
fmulp
xor
aas
inc
adc
std
mulb
jg
popf
jge
leave
xor
clc
lret
jmp
push
xor
in
sub
mov
cld
add
repz
mov
stos
and
push
mov
sti
jno
pop
pop
out
xor
lret
fwait
dec
sarb
cs
mov
loopne
cmpsl
nop
dec
sub
push
bound
and
lods
into
iret
xor
pop
int
les
jno
mov
mov
ljmp
je
aaa
insl
fsubrl
add
mov
in
adc
dec
dec
in
mov
jecxz
jmp
cmpsb
inc
les
js
sub
lcall
mov
stos
mov
and
pop
push
jge
sub
cmpsl
cltd
popf
aaa
pop
cmp
aad
in
push
and
push
adc
mov
xchg
lea
mov
sub
call
leave
adc
add
jo
lds
push
and
rcl
sahf
stc
iret
fiaddl
mov
or
mov
jno
dec
xor
mov
adc
outsb
in
mov
push
jo
bound
mov
movsl
cmp
push
xor
sti
aas
xchg
xchg
in
cmc
lret
sarl
xchg
mov
adc
clc
aam
test
jl
cld
mov
pusha
jno
cwtl
sub
push
mov
mov
ljmp
mov
fnsave
divl
bound
outsb
jecxz
mov
negb
mov
stos
jp
les
jo
xchg
out
imull
test
mov
or
mov
dec
icebp
jge
std
pop
xchg
fs
popf
inc
pop
sub
loop
sti
and
xchg
mov
cld
andl
fs
jno
into
fsubl
outsb
orb
mov
or
sbb
xor
aas
iret
and
int
mov
add
popa
mov
jae
add
sub
dec
sbb
jo
ss
test
in
in
mov
imul
mov
sahf
test
xlat
call
decl
imul
sub
lahf
push
jb
test
sarb
daa
fnstenv
mov
fistl
icebp
jge
testb
out
std
test
cmp
loope
and
cmp
mov
lods
leave
add
sub
xchg
inc
mov
pop
leave
cmp
mov
in
xor
sti
mov
mov
roll
add
pop
jecxz
movsb
mov
jp
mov
ss
jb
xchg
push
std
mov
negl
add
jle
push
out
sbb
push
es
test
scas
add
jge
into
fistpl
fwait
icebp
in
rolb
es
lahf
xchg
sti
arpl
and
push
ja
rcrl
lods
test
fwait
jmp
mov
mov
push
xchg
mov
popa
lds
dec
lcall
enter
dec
push
dec
sbb
xchg
mov
cmc
mov
loope
sbb
xor
mov
push
out
xchg
xor
push
xor
add
mov
add
out
push
test
jnp
ja
ret
cmc
shll
fwait
or
mov
aaa
rol
pop
mov
in
fwait
lds
fwait
aam
add
dec
jno
jns
and
les
ret
mov
pop
sub
xchg
mov
xor
leave
enter
pop
enter
adc
into
or
iret
pop
dec
in
fnsave
rcl
gs
adc
pop
ds
call
push
fcoml
push
popa
shlb
cmp
bound
sbb
incl
mov
inc
pop
xchg
sbb
sbb
lahf
push
xchg
roll
jp
sub
cmp
mov
cwtl
dec
les
in
or
mov
enter
jns
mov
inc
loope
arpl
popa
sbb
addr16
rolb
test
sbb
mov
movsl
int3
jo
js
mov
aaa
aam
cltd
mov
jne
scas
andb
shlb
and
xor
xor
shll
notb
cmpsl
or
xchg
test
xchg
inc
or
int
or
loopne
add
jae
jg
outsb
or
lret
jp
sbb
sti
clc
mov
fisttps
addr16
xchg
ja
cs
pop
push
mov
faddp
add
jb
sbb
mov
and
push
imul
cmp
inc
lcall
xchg
jb
push
popf
shll
mov
icebp
cmp
test
call
mov
sbb
popf
xchg
aas
push
mov
jb
push
inc
pop
push
outsl
movsl
adc
fsubp
and
jns
lcall
pusha
call
cmp
jle
mov
cs
fwait
ret
inc
jp
xor
mov
fwait
movsl
scas
lret
pop
mov
nop
or
enter
mov
push
sub
dec
fsubl
mov
imul
and
cwtl
jb
and
mov
inc
fnstenvs
in
fcom
pop
push
fisttpl
push
outsb
pop
push
test
inc
push
inc
xor
pop
jl
pop
cmpsb
jmp
xchg
mov
mov
sub
mov
popa
sbb
iret
shr
outsb
imul
push
popa
pusha
sub
frstor
adc
jmp
sub
call
xor
inc
mov
mov
lock
dec
dec
dec
cmp
push
lds
cmp
lret
aam
mov
sbb
xchg
lret
lret
dec
sbb
and
rorb
inc
test
mov
xchg
sbb
lods
jg
xchg
in
dec
mov
and
arpl
pop
and
mov
mov
jp
cmpsb
xchg
and
and
shl
dec
or
aas
cmpsl
out
fwait
outsb
sbb
lahf
in
dec
mov
aaa
repnz
mov
mov
jecxz
ljmp
push
mov
ret
scas
adc
mov
jno
into
xchg
sub
popa
clc
sbb
insb
jl
push
dec
cli
shrl
jg
push
cmpsl
mull
add
and
push
lcall
sarb
add
arpl
addb
cmp
jle
fstps
xchg
jae
rcrb
jmp
push
adc
sar
fs
jg
inc
sbb
aam
ss
out
xchg
jge
sbb
mov
out
dec
adcl
add
cwtl
fcom
jae
sbb
cltd
jb
test
xor
lods
lcall
test
push
dec
adc
ds
or
int
out
jns
enter
or
mov
es
mov
leave
add
clc
inc
push
sbb
adc
jg
das
inc
and
lret
jg
xchg
sbb
ret
xchg
jp
inc
mov
out
gs
sbb
mov
sbbb
dec
test
cmpsl
and
cwtl
mov
fcomp
inc
mov
jmp
or
pop
adc
pushf
jp
mov
out
add
push
sar
adc
mov
sbb
jecxz
outsb
inc
jo
out
mov
js
jns
mov
xor
inc
imul
xor
fwait
jg
stos
lahf
lds
xor
std
inc
call
adc
les
adcb
dec
sub
rcl
aam
or
ljmp
sti
xor
pop
pop
arpl
adc
stc
arpl
outsb
daa
xlat
push
imul
mov
sbb
rorl
jne
scas
xor
scas
call
jno
and
sbb
push
lds
pop
fwait
cmc
in
int
push
cmc
imulb
and
inc
out
sub
cmpsw
and
movsl
cmp
sbb
pop
sbb
sbb
insl
cmp
sahf
inc
das
outsb
xchg
sub
mov
loop
imul
cmp
pop
xchg
push
or
push
rcl
dec
fmull
mov
test
pusha
xchg
mov
in
or
pop
dec
ret
mov
dec
ss
enter
add
fsubrl
iret
out
shl
add
shl
jae
pop
jmp
cmpsl
sub
imul
stos
sbb
enter
test
add
xchg
adc
or
cltd
xlat
outsb
mov
scas
inc
fstpt
adc
xchg
xchg
dec
push
int
and
insl
ds
adc
sub
xchg
ds
sbb
mov
inc
testb
mov
hlt
pushf
js
js
push
loop
daa
lcall
cmp
int3
dec
jne
mov
or
push
pop
in
mov
ss
fiaddl
cltd
mov
push
mov
or
clc
jnp
lock
seto
add
dec
outsb
roll
loopne
fstl
push
sub
pop
imul
and
sub
jmp
jg
xor
lods
sbb
push
xchg
pop
push
pop
scas
aad
ja
xchg
lea
fisttpl
and
lcall
stc
daa
push
jnp
mov
mov
lds
stos
mov
mov
push
ret
jecxz
or
cmpsl
dec
sahf
cwtl
dec
loopne
cmp
repz
mov
mov
fdivrl
xchg
adc
shl
and
inc
mov
push
icebp
inc
andl
xchg
test
adc
imulb
out
insl
in
adc
cltd
das
ljmp
idiv
jb
cmp
cmp
enter
in
xchg
inc
ret
add
dec
mov
add
xchg
cmp
add
mov
xchg
imul
movsl
imul
decb
jns
or
jmp
and
sbb
daa
xchg
mov
cmp
cli
sarl
out
int
fstps
xor
mov
dec
xor
mov
jnp
out
hlt
xchg
push
lret
dec
lahf
and
lahf
push
cmp
addr16
and
nop
sbb
xor
shlb
rcr
arpl
fsubrl
and
loopne
es
mov
lea
lcall
and
jb
shll
ret
pop
ret
inc
fucomi
pop
jno
sbb
mov
hlt
decl
stc
gs
fxch
mov
fstpt
xchg
push
insb
incb
xor
mov
cs
jns
or
mov
or
sbb
or
mov
mov
xor
sbb
mov
xchg
scas
jl
fmuls
shrb
jecxz
mov
and
pusha
push
or
add
fnstenv
sbb
lret
cmp
aaa
mov
mov
and
cmp
or
xlat
jp
in
mov
movsl
xor
push
in
jmp
in
dec
mov
or
xor
sub
inc
cmc
jb
pop
add
xchg
sub
out
and
inc
inc
out
mov
xchg
int3
pop
push
dec
in
adc
xchg
lods
jbe
test
sti
cwtl
and
loopne
mov
daa
clc
les
add
pop
data16
sub
fstpl
mov
adc
dec
or
cmp
jb
jae
dec
dec
hlt
push
dec
ja
mov
xchg
movsb
xchg
adc
shlb
mov
icebp
mov
cld
mov
pop
sub
pop
push
sub
jne
add
jo
jp
mov
xchg
xor
xor
out
mov
inc
dec
test
dec
inc
daa
push
inc
or
rcrl
jp
mov
mov
jmp
inc
cmp
loope
out
jnp
push
test
cmc
xor
pop
cmp
mov
pop
xor
jb
popf
inc
cmp
lds
shl
xor
xchg
cwtl
or
aaa
pop
mov
dec
mov
lods
dec
std
mov
arpl
div
push
rolb
mov
out
push
sahf
jnp
and
ss
xlat
jo
push
stc
outsl
std
into
mov
test
rcll
enter
sub
xchg
mov
add
sbb
je
push
movsb
in
mov
test
dec
mov
bnd
rcrb
insb
lret
inc
xchg
in
mov
es
adc
test
adc
push
sbb
dec
sub
xor
jle
sub
mov
loope
adc
or
mov
iret
sbb
xor
mov
xchg
ret
sub
pushf
popa
in
rolb
push
inc
push
or
div
sbb
in
imul
cmp
outsb
xchg
lock
push
and
adcl
add
popa
jmp
fwait
push
stos
addr16
sbb
mov
lods
lea
mov
jno
sub
repnz
mov
lcall
shr
or
push
lret
repnz
hlt
xchg
xor
pushw
dec
mov
push
adc
test
adc
push
cld
iret
push
hlt
test
xchg
dec
xor
sub
jbe
jmp
jb
nop
add
scas
test
gs
fld
pop
and
arpl
cs
jp
test
jg
test
pop
inc
add
scas
mov
call
mov
jle
call
mov
xchg
and
push
mov
daa
push
cmpsb
pusha
xchg
mov
inc
xor
ficompl
and
or
pop
sub
loopne
call
aaa
aas
iret
sub
add
cmp
inc
outsb
hlt
leave
sub
loope
outsl
sti
xchg
cmp
leave
jp
jne
jb
inc
jne
cli
mov
pop
and
sbb
je
les
inc
and
jge
stos
mov
das
lods
push
xchg
xchg
sbb
xchg
mov
out
movsb
lcall
xor
mov
dec
mov
jl
lret
push
jnp
push
sahf
xchg
ret
stos
je
cmc
mov
pop
in
hlt
xchg
call
ss
sbb
jmp
aaa
dec
cmpsb
or
pop
or
xchg
jne
ss
or
sarl
sub
scas
pop
imul
test
pop
jle
cmpsb
std
mov
xor
lods
sbb
mov
jle
pop
je
jbe
or
fidivrs
mov
jnp
lods
pop
mov
sub
cwtl
pop
out
jno
sarb
ss
adc
hlt
mov
popf
cmp
push
call
mov
aad
add
lahf
xor
cli
insl
pop
lahf
test
cmp
adc
jmp
or
inc
jmp
push
movsb
sbb
shrb
std
rorl
nop
inc
and
jns
or
leave
es
gs
xchg
pcmpgtd
sbb
ljmp
jnp
xor
in
dec
mov
adc
and
dec
sbbl
aad
cld
mov
xchg
frstor
lea
mov
mov
adc
loopne
pop
xchg
add
cmc
cmp
mov
xchg
add
or
ret
mov
das
or
add
in
dec
lret
divl
out
lods
leave
add
enter
mov
sub
sbb
negl
jge
push
push
jl
ja
imul
sbb
mov
shrb
pushf
add
and
sub
add
movsb
stos
lahf
xchg
xor
mov
daa
lret
je
lret
pop
pusha
ret
inc
or
mov
out
jb
cmp
movsb
mov
push
mov
add
int3
add
cld
sub
cwtl
in
and
xchg
mov
fdivr
les
fistpll
in
or
xchg
insl
jle
fsubl
test
mov
cmpsb
xor
inc
xor
jno
jp
in
orl
shlb
cmpsl
nop
repnz
and
xchg
sbbb
dec
xchg
loope
mov
push
inc
mov
jmp
lea
dec
sub
jae
hlt
movswl
emms
in
mov
fdivrs
test
cmpsb
adc
push
bound
push
fdivl
push
mov
mov
sub
addb
call
shll
jo
outsl
and
in
js
stos
ldmxcsr
mov
stos
movsb
pushf
jbe
sub
jg
mov
out
inc
push
xchg
aam
mov
xor
sub
cs
xchg
rcll
mov
data16
stos
hlt
aaa
lret
mov
mul
insb
cmp
das
mov
inc
mov
fisttps
outsl
imul
inc
fbstp
stc
lods
adc
cld
pop
enter
scas
pop
test
jp
sbb
stos
insl
clc
mov
lods
xchg
jl
xor
popf
pop
repnz
cmp
inc
mov
imul
jl
push
arpl
insl
jo
mov
sbb
xor
dec
cmp
repz
mov
mov
mov
mov
inc
and
gs
fsubs
imul
push
add
sub
inc
jae
jmp
mov
stc
dec
mov
push
ret
pop
and
inc
shll
mov
repz
mov
pop
sbb
adc
pop
aam
xchg
scas
rcr
scas
shl
jmp
lcall
push
iret
outsb
push
lret
fwait
aam
push
decl
push
jl
add
cmp
in
dec
ss
icebp
push
jbe
repnz
ftst
mov
das
mov
shlb
pusha
add
jp
cmp
pop
add
fisttps
dec
sbb
nop
daa
add
xchg
or
push
jp
std
enter
dec
xor
mov
movsb
push
data16
je
mov
leave
add
cli
mov
push
addr16
imul
imul
mov
imul
pop
aas
fmull
mov
jle
fisubrl
or
testb
sti
scas
scas
nop
leave
xlat
bound
sarl
mov
dec
jg
js
and
and
cmp
sbb
imul
shlb
push
push
inc
daa
jne
dec
or
mov
cmp
cltd
daa
sub
mov
sub
imul
pop
mov
sbb
inc
xchg
jge
clc
lcall
jl
cmpsb
jmp
test
daa
arpl
frstor
or
add
and
push
or
jp
push
pop
cmp
sub
aaa
xrelease
mov
jp
in
std
neg
cli
scas
lcall
push
and
clc
mov
aaa
loop
gs
xchg
jmp
imul
inc
mov
mov
push
or
jmp
sub
divb
testb
in
inc
pop
mov
adc
adc
icebp
in
xchg
adc
xlat
in
dec
dec
pusha
sbb
ljmp
addr16
sbb
add
mov
nop
or
outsl
jnp
mov
fstpt
rcrl
fadds
adc
iret
test
inc
pop
cmp
push
and
or
out
adc
xchg
pop
adc
mov
add
sbb
mov
push
pop
mov
push
sbbl
addr16
fidivl
cmpsb
adc
jecxz
test
cld
dec
je
xor
cmc
xor
sub
jl
cli
enter
xor
jno
data16
hlt
mov
aas
pop
and
popa
test
cmp
fsub
out
pop
rcrl
loope
add
stos
fs
shr
enter
or
lods
pop
jmp
jb
cmp
sub
pop
leave
mov
stos
xchg
in
lods
into
shll
adc
mov
imul
dec
int3
arpl
adc
mov
xchg
mov
movsb
push
test
add
call
sub
dec
jp
jne
add
xorb
dec
notl
out
mov
movsl
mov
adc
js
xchg
in
outsb
pop
aaa
int
pop
or
sub
pop
pushf
pop
add
adc
xchg
or
jp
push
push
es
mov
inc
push
push
pop
ss
mov
loop
sub
add
jp
shrl
cli
fsubrl
mov
ror
das
xchg
popf
sarb
xchg
jle
test
jp
rorl
sahf
fs
test
push
out
lcall
daa
fmulp
hlt
idiv
addb
mov
pop
scas
jns
insb
sub
test
push
xchg
cli
aaa
xchg
jns
inc
in
push
or
xchg
call
or
sub
mov
adc
mov
cltd
adc
add
jg
xor
pop
push
cmpsl
jne
sbb
gs
test
or
or
inc
das
push
sahf
js
jbe
adc
addl
jnp
push
xor
test
jbe
mov
mov
push
fcompl
mov
bnd
mov
shlb
jae
dec
jno
inc
lret
sbb
sahf
inc
arpl
mov
cmp
mov
div
les
mov
sahf
int
fisubrl
les
jle
dec
lret
pop
sub
xchg
sahf
es
xchg
int
es
cmp
test
and
daa
lahf
cmpsb
sub
sti
daa
stos
add
mov
inc
clc
mov
jmp
mov
jecxz
xor
pop
adc
popf
out
dec
cmp
pop
mov
jo
in
loope
scas
outsb
int
cli
inc
xchg
ss
dec
cmp
mov
or
rcl
add
inc
ror
jns
mov
outsb
pop
cwtl
mov
sub
xchg
data16
push
sbb
pop
pusha
xor
dec
int
cmc
rcrb
jns
addr16
mov
adc
mov
jge
inc
xor
xor
sub
fsub
popa
mov
int3
stos
sub
or
jle
jle
mov
rclb
push
sub
test
mov
clc
es
xor
pop
ret
and
es
jns
sub
and
clc
out
inc
or
xchg
decl
or
popa
mov
bound
je
fnstenv
test
lods
sbb
push
mov
outsl
pop
es
std
or
fwait
repnz
out
and
jae
jle
lods
aaa
int
sbb
testl
lea
or
cmp
aaa
pop
fbld
inc
push
jl
sub
jmp
xor
lret
nopl
call
ja
lock
pop
sub
xchg
popa
dec
sub
lods
xchg
mov
in
ja
pop
outsl
push
cli
sti
aad
jmp
test
hlt
adc
mov
imul
adc
sub
and
push
lret
push
mov
out
loopne
sbb
xor
pop
cmc
or
mov
imul
jo
xchg
lock
movsb
cmp
jge
stos
test
push
arpl
fwait
and
and
and
js
dec
pop
xor
addr16
push
lret
sub
decl
cltd
jp
mov
sbb
aam
sbb
xor
push
push
decl
xor
orb
stos
xchg
cmc
mov
out
sti
inc
stc
jecxz
sti
popf
mov
mov
cmp
inc
fwait
dec
xor
mov
cwtl
cltd
xchg
mov
daa
dec
arpl
pop
notl
mov
push
and
push
lds
inc
mov
push
dec
aaa
dec
cltd
sub
jb
push
add
sti
xchg
dec
fbld
push
out
test
sbb
jnp
repz
leave
push
cmp
sub
jo
cmp
rcr
lahf
jns
aaa
sbb
mov
loopne
push
mov
orl
gs
dec
cmc
sub
dec
xor
push
push
pusha
add
push
out
test
pop
xchg
lret
iret
data16
push
popa
fisubs
xchg
fsubs
mov
sub
shlb
xchg
xor
inc
or
ret
std
imul
pop
int
loopne
jne
test
mov
jnp
mov
or
imul
inc
pop
ljmp
int
aad
mov
cmpsb
insl
scas
inc
lods
jl
stos
jge
imul
jb
sub
add
test
ret
or
pop
mov
stc
call
dec
test
jecxz
dec
pop
or
push
push
add
adc
lea
scas
mov
insb
inc
aaa
gs
inc
cmp
mov
push
rcll
xlat
mov
dec
in
sub
aas
push
or
xchg
or
add
add
leave
mov
ljmp
cmp
cwtl
mov
jbe
ds
sbb
out
rcr
mov
push
stc
push
out
fcomps
mov
lds
jge
lahf
ret
addr16
pusha
cmp
mov
mov
vzeroall
in
pushf
push
mov
std
outsb
adcb
and
out
adc
and
cmp
push
inc
mov
adc
push
nop
mov
sbb
jnp
pushf
js
push
xchg
mov
pop
sub
pop
orb
stos
push
or
outsb
or
xchg
iret
jge
outsb
xor
xor
in
cmp
push
dec
push
mov
adc
xchg
fcmovb
jg
push
mov
mov
mov
jnp
arpl
test
push
mov
icebp
out
ret
xorl
push
lahf
lods
in
and
imul
je
push
jp
jmp
cwtl
xchg
mov
jae
cld
fimuls
iret
and
xlat
sarl
xchg
mov
jnp
add
pop
cmp
ja
js
ficompl
mov
and
mov
cli
add
nop
into
xchg
and
bound
in
mov
int3
pop
xchg
jne
mov
xor
mull
push
in
lds
ds
push
jge
cmp
pop
sahf
jnp
imul
stos
xor
jbe
mov
or
das
push
sub
pop
mov
cmp
pop
and
push
cli
sbb
adc
push
lock
movsl
cmp
loope
push
scas
lcall
lods
mov
cmc
mov
aas
inc
arpl
jbe
incl
cmp
enter
mov
les
mov
in
mov
es
ficoml
sbb
xor
mov
dec
ja
add
pop
fiaddl
bound
faddp
rcrl
pop
cmp
outsl
mulb
sub
outsl
mov
int3
and
mov
sbb
shl
xchg
mov
ds
xor
int
pop
int3
stos
fldt
jmp
or
movsb
or
adc
xor
sbb
xchg
xchg
orl
sub
aam
clc
cmp
rcl
loop
dec
pop
mov
les
mov
and
inc
mov
test
push
dec
repnz
push
xchg
dec
inc
lds
inc
push
push
mov
inc
cmp
and
mov
fcomi
push
aam
cs
out
loope
push
inc
rorb
mov
jmp
fisubs
xchg
cmpsb
idivl
and
sbb
jmp
scas
mov
xchg
mull
inc
pop
adc
push
jecxz
lods
je
repz
jmp
fs
mov
movsb
lea
push
inc
jb
imul
notl
or
mov
ja
push
lret
insb
or
mov
xchg
push
jge
sbb
inc
data16
scas
mov
aam
or
mov
push
popf
int
mov
inc
cmpsb
inc
sbb
out
xchg
mov
push
outsl
insl
popf
test
adc
push
mov
stos
push
out
adc
cli
subb
xchg
add
sbb
xlat
mov
testl
add
or
cmp
sahf
lea
pusha
popf
jo
mov
inc
pop
aad
mov
sub
jge
stc
bound
sbb
popa
subb
pop
iret
shll
or
hlt
jbe
stos
push
fcmovb
mov
xchg
dec
shrl
in
jecxz
xchg
pop
out
lea
test
icebp
push
gs
clc
cmp
sbb
add
xchg
mov
xchg
jg
movsl
int
jne
mov
inc
cli
in
inc
xchg
jmpw
mov
cli
in
mov
cmpsb
loopne
fstpt
jl
into
addl
adc
int
rcl
dec
sahf
lahf
in
ret
mov
jo
enter
xor
scas
or
pop
sti
pop
and
out
scas
lahf
inc
sbb
add
inc
sbb
jp
cmp
dec
xchg
fstps
mov
xchg
sub
lock
pop
mov
fcomp
add
push
or
push
xor
mov
test
sbb
fnstsw
fcmovbe
push
ret
or
sub
mov
and
outsl
inc
rcl
xchg
sub
in
mov
or
repnz
cmp
scas
push
lcall
out
or
gs
add
jns
jmp
clc
push
int
lret
mov
sbb
push
xchg
enter
lock
ja
or
in
dec
subl
dec
jne
test
mov
add
xchg
daa
enter
push
out
lea
jl
sahf
xor
or
jmp
mov
dec
or
pop
sub
sahf
loop
mov
xchg
pop
inc
pop
inc
jne,pn
ficomps
insb
test
mov
enter
hlt
push
adc
orb
call
test
push
push
fisubrs
inc
dec
movsb
push
mov
and
sbb
and
or
test
loopne
clc
sbb
inc
dec
cs
sbb
cltd
xor
scas
cs
mov
push
push
cmp
in
mov
cmpsb
xor
xchg
stos
cmpsl
sub
sub
pop
aas
popf
pop
out
test
xchg
push
push
cmp
dec
std
fiadds
mov
mov
outsl
xchg
enter
fldcw
mov
xchg
jne
fs
and
repz
aam
out
or
jp
cmp
pushf
in
add
jmp
outsl
sbb
xchg
pop
and
stos
cmp
xor
mov
sar
aad
das
inc
add
fcmovbe
outsb
mov
mov
sti
inc
test
imul
jl
dec
nop
mov
lret
aaa
icebp
rcll
push
cmc
addr16
jge
jl
add
ljmp
cmp
aad
mov
mov
add
and
sub
addb
ljmp
pop
fisubrl
xor
mov
mov
jmp
jge
pop
cmp
and
pop
inc
stos
test
xchg
jl
add
repz
jmp
sub
cmp
add
fdivrs
lret
cli
sbb
jmp
xchg
ret
mov
ja
ss
repnz
and
out
ja
inc
nop
inc
mov
dec
ja
inc
lds
pusha
es
jne
pop
push
dec
popa
sbb
out
push
or
divl
xchg
mov
push
pop
mov
sbb
out
shrl
sbb
mov
or
test
lds
mov
stos
divb
rcrb
fidivrl
dec
and
in
xchg
xor
mov
loopne
ljmp
lret
and
scas
out
ja
int3
mov
xorb
cmp
pop
in
ljmp
inc
cmp
fldcw
lods
fbld
mov
in
mov
dec
mov
and
cltd
out
xor
push
jno
mov
xor
imul
clc
xor
xchg
lods
je
adc
mov
mov
mov
pop
call
push
rorb
mov
sbb
sti
imul
loop
je
sub
ja
cld
decb
clc
cmp
shlb
inc
push
lods
adc
cmpl
dec
xor
into
dec
dec
push
sbb
outsl
inc
add
out
add
xor
push
jne
xor
pusha
test
or
jae
jnp
scas
sub
sub
add
call
fsubr
lods
dec
stc
mov
dec
dec
or
and
xchg
insb
cmp
mov
pop
repnz
jecxz
adc
or
xchg
mov
jb
mulb
lock
sub
shl
icebp
leave
mov
enter
inc
sti
mov
mov
jl
jmp
jmp
fs
push
sbb
jbe
mov
adc
test
xchg
rol
and
add
frstor
and
adc
cmp
lods
add
repnz
mov
mov
les
push
mov
adc
push
lock
mov
sbb
scas
sub
dec
call
xchg
mov
ficoms
cli
stos
inc
icebp
adc
rcl
xchg
xchg
sbb
daa
scas
mov
ret
into
jno
outsb
movsb
dec
ljmp
xchg
lea
repnz
repnz
pushf
imul
aaa
pop
cmc
jo
inc
pusha
cmp
xor
fisubrl
test
xor
popa
jg
sahf
xchg
das
outsl
out
add
dec
ds
adc
mov
sbb
pop
and
jne
cmp
or
gs
jns
mov
or
mov
mov
fscale
aad
cmp
and
imulb
inc
sub
fildll
outsl
dec
cmc
loop
jmp
incl
mov
cmp
out
pop
sub
stos
in
pop
push
cmp
in
outsb
mov
cli
dec
jp
jg
cwtl
cmp
or
pop
push
fwait
mov
adc
push
jmp
je
test
in
mov
jae
aas
sub
xchg
lret
jmp
cmp
and
sub
movsb
push
out
dec
push
std
xchg
stc
pusha
lahf
pop
pop
out
movsl
cmp
sub
cmpb
mov
jnp
push
aas
cmp
arpl
push
daa
pop
sub
adc
addr16
aas
pop
jg
mov
cmpl
lret
adc
ja
clc
xchg
xor
push
mov
push
sub
movsl
fmull
aaa
gs
popa
insb
insb
sub
and
adc
sub
mov
lahf
push
inc
movsb
xor
mov
es
lock
xchg
loope
cli
fcmovu
stos
xor
jecxz
adc
data16
cld
and
cltd
xchg
xor
inc
icebp
test
xor
pop
mov
push
and
iret
test
test
mull
inc
pop
inc
mov
imul
jnp
add
xchg
jne
dec
push
into
outsl
add
and
inc
mov
sahf
push
addb
mov
fldt
lret
fcmovnb
sbb
clc
or
jmp
jecxz
hlt
add
int
jge
xor
jae
and
pop
scas
push
sahf
aam
adc
test
dec
outsl
and
push
ja
cmp
iret
in
sub
ds
arpl
mov
lods
mov
out
cmp
mov
aam
sbb
jmp
lods
mov
jle
sbbl
xor
push
inc
lcall
frstor
ror
mov
es
jl
popf
jns
push
roll
jg
pop
in
call
pop
test
hlt
xor
push
bound
es
daa
jns
scas
call
sub
shrl
sarb
add
call
adc
out
enter
lahf
int3
pop
cmpsb
into
aaa
xchg
in
gs
mov
imul
es
pop
int3
adc
sbb
pcmpgtd
lret
aad
mov
shlb
loopne
cld
lods
test
popf
mov
push
hlt
cmc
sbb
add
adc
inc
mov
dec
cmp
jb
lods
je
dec
inc
movsb
dec
xor
xor
jg
sub
into
testl
pop
stc
xor
mov
out
ficoms
lcall
inc
pop
push
pop
fiaddl
cli
push
addb
mov
xor
sub
push
fistpl
data16
or
cmp
xor
xor
fdivl
jge
test
fstpl
cmp
scas
xchg
lahf
jle
pusha
cmp
dec
lahf
sbb
inc
cld
aad
jg
pop
mov
aad
xchg
cmp
mov
arpl
cmp
push
push
lret
dec
push
mov
inc
jge
cli
pop
mov
push
lret
mov
mov
push
mov
dec
ror
push
popf
jns
adc
aad
bound
mov
adc
into
into
ljmp
mov
int3
jmp
popa
out
jne
jo
push
inc
cli
sub
cmp
mov
xor
adc
dec
movb
add
or
pop
lret
jle
xor
jae
popa
int3
adc
xchg
jle
aam
mov
gs
roll
xchg
out
nop
push
inc
in
enter
pop
pop
into
std
or
test
stc
je
mov
sbb
out
pop
push
jmp
out
lea
test
icebp
jmp
pop
xor
lods
loop
popf
ja
daa
add
test
out
xchg
dec
lret
cmp
pop
scas
notb
push
outsb
mov
sbb
inc
cmp
dec
repnz
cmp
lock
dec
aad
sub
dec
mov
fildll
mov
les
pop
xchg
xchg
iret
repnz
loop
dec
ret
popf
ljmp
mov
cld
inc
add
dec
es
pushf
xchg
jecxz
sbb
outsb
mov
enter
xor
xchg
jbe
int
pop
push
lahf
das
sub
jnp
div
aad
mov
out
int3
fistpll
push
xor
test
shr
sub
jbe
mov
cmp
and
inc
icebp
jle
xchg
aaa
and
inc
cmp
ja
mov
std
xchg
cli
jns
fnsave
aas
pop
test
cld
out
xor
xorl
loopne
mov
cvtps2pd
out
mov
in
mov
add
xchg
mov
cmp
repnz
loop
les
pop
xor
movsb
xchg
push
pop
daa
pop
std
ja
pop
mov
sub
aaa
hlt
in
mov
push
out
jae
pusha
mov
js
pop
mov
ljmp
gs
xor
orb
xchg
mov
inc
mov
sbb
cmpb
inc
mov
jmp
jae
mov
or
into
mov
mov
or
idivl
dec
push
daa
jbe
jg
popa
out
addb
call
mov
ffreep
inc
dec
jecxz
jecxz
mov
xlat
xor
push
inc
pop
jns
dec
xor
scas
mov
jecxz
call
je
or
dec
sbb
mov
call
sbb
stc
ret
test
ds
test
loop
and
js
mov
push
int
lret
mov
dec
push
sti
je
xor
lret
push
mov
fdiv
sbb
movsb
or
movsl
push
cltd
adc
addr16
mov
mov
ds
adc
ret
inc
xchg
or
sub
cmc
jmp
ficomps
add
add
in
xor
lea
repz
out
mov
call
push
outsb
lods
dec
subb
push
sahf
mov
xor
clc
sbb
es
jecxz
pop
mov
mov
sub
jmp
sub
ret
mov
mov
leave
insl
cmpsl
hlt
inc
dec
or
shlb
xchg
in
xlat
mov
sbb
cmp
stc
push
cmpsb
leave
and
mov
enter
sbb
sbb
add
imul
outsw
cs
or
cmp
xchg
jp
fisubrs
mov
jle
sahf
ror
movsl
cmp
fprem1
aam
std
gs
cli
and
data16
jnp
mov
dec
mov
or
dec
dec
ja
iret
sar
adc
cs
insl
dec
jnp
jmp
xchg
lods
inc
pop
shrb
jne
out
int3
adc
out
push
adc
daa
testb
fsubrs
aam
imul
inc
mov
and
or
mov
mov
sbb
mov
lds
ds
mov
inc
insb
cmp
in
clc
mov
clc
cmp
aad
out
adc
aaa
mov
pop
imulb
leave
je
out
cmp
push
cmpsl
sbb
xchg
mov
adc
sbb
hlt
and
into
fsub
xchg
mov
xor
enter
push
loopne
lret
data16
loop
scas
mov
sbb
or
mov
mov
mov
repz
pop
push
cli
out
mov
loop
adc
push
dec
int3
mov
jle
int
jmp
xchg
inc
mov
inc
mov
aam
jae
mov
adc
pop
mov
aam
out
iret
dec
mov
xchg
aam
imul
arpl
fcoml
push
ja
js
pop
push
push
icebp
sub
fbld
lods
cmpsb
stos
push
lds
fstpl
out
jae
js
jns
xor
push
pusha
push
mov
enter
xchg
add
test
roll
cmpsb
test
inc
loop
mov
mov
je
xor
lcall
notl
cmp
xchg
cs
out
add
add
scas
xchg
and
insb
or
sar
xlat
mov
or
addl
or
pop
cmp
push
les
out
fisubrs
adc
jnp
adc
je
and
das
push
arpl
icebp
inc
cmpsb
mov
mov
icebp
dec
fildl
mov
call
mov
js
lret
aas
dec
push
pop
dec
in
and
pop
inc
jnp
fildll
in
outsb
loop
movsl
loop
stos
mov
pop
clc
stos
sbb
sbb
movsl
or
mov
pop
jb
mov
adc
div
movsl
dec
and
cwtl
outsb
mov
push
lcall
imul
xchg
mov
pop
cli
push
sub
imul
enter
dec
shlb
nop
cmpsb
mov
pop
je
and
je
fsubr
cli
mov
rclb
aam
imul
push
fidivrs
pop
xor
repz
mov
aad
mov
mov
imul
jo
xchg
lahf
inc
push
mov
inc
push
sbb
xor
insb
pop
sub
cmp
adc
sbb
test
jecxz
fadd
dec
jns
jp
ror
daa
pop
cmpl
jmp
xchg
sarb
cmp
test
jmp
cmp
or
sub
fldcw
shll
fs
ss
fxch
cmp
bound
cmc
fwait
jbe
in
xchg
mov
int
lds
jmp
and
inc
inc
mov
dec
push
sahf
hlt
fstl
lods
xchg
mov
sbb
popa
pop
call
aam
mov
test
sub
mov
sub
and
stc
mov
inc
xor
adc
adc
dec
cmpsl
cmpsl
fiaddl
cmp
lock
or
sub
test
clc
cs
xor
inc
mov
push
insl
lahf
sub
ds
adc
call
inc
addr16
subb
movl
xor
nopl
xor
push
xor
mov
ss
mov
leave
mov
mov
mov
aad
cmpsb
push
loope
mov
call
movsl
shl
int3
aad
in
xchg
sbb
xor
movsl
mov
ja
scas
lret
or
push
stos
fs
mov
add
cmp
fisttpll
cltd
mov
pop
out
outsb
jp
lock
xchg
mov
cld
pop
loop
fnstenv
push
hlt
push
movsl
xchg
inc
daa
cmp
jecxz
xchg
ljmp
xchg
bswap
call
or
and
pop
mov
sbb
aas
scas
mov
lds
cmp
mov
jge
inc
lods
aam
pop
ss
aad
xchg
mov
mov
mov
mov
cltd
jl
jg
pop
xchg
or
ficoms
fwait
dec
jmp
push
mov
mov
cmpl
inc
or
shlb
jmp
iret
or
or
loope
out
mov
mov
inc
jg
hlt
addr16
inc
test
or
mov
or
xor
sub
dec
rclb
cmp
push
pop
data16
xorl
inc
sbbl
mov
popa
repz
jno
cmc
or
into
mov
pop
add
cmp
lods
mov
loope
xor
std
lds
jnp
cmp
out
test
clc
mov
or
cmp
stos
lcall
cmpsl
lcall
xlat
sub
cld
inc
pop
subb
fwait
xor
les
cmp
roll
xor
lods
mov
aad
push
test
sbb
inc
outsl
xchg
fcomip
cmp
sub
roll
into
imull
jp
div
jne
imul
pushf
push
int3
inc
jecxz
dec
or
xchg
psubsb
pop
arpl
insl
je
scas
mov
aam
es
cli
xlat
aam
test
add
lahf
dec
stos
das
push
mov
out
or
ja
movsb
inc
mov
and
das
mov
mov
lret
test
adc
lock
add
or
scas
stos
inc
test
cltd
setb
dec
xor
call
inc
test
adc
psubsw
rcrl
stos
mov
dec
popa
adcb
ret
gs
cltd
movl
out
pop
xor
das
int3
fwait
out
jecxz
pop
jnp
gs
fsubr
mov
mov
jb
add
jb
mulps
es
mov
mov
es
insl
xchg
mov
mov
push
jg
xchg
mov
mov
out
scas
add
cmp
imul
add
lret
inc
inc
hlt
sbb
xor
pop
xor
ja,pn
jne
lods
icebp
mov
sub
dec
hlt
ret
outsl
cmc
shrb
sbb
and
sub
push
sbb
jge
pop
fldenv
cmc
xchg
jecxz
cmpsb
jno
je
inc
xor
and
clc
mov
mov
cmc
jnp
sbb
pushf
lods
fldcw
jno
clc
sub
aas
stos
shr
scas
imul
loope
das
inc
sahf
and
pop
shll
mov
test
in
out
push
in
pop
sub
mov
les
hlt
scas
fists
sub
imul
push
dec
mov
and
jmp
stos
jae
mov
in
shrb
test
mov
inc
sub
add
pop
fs
in
test
sub
fldenv
jg
sub
dec
ljmp
xor
cmp
daa
aad
cs
pop
pop
data16
mov
mov
fcoml
jmp
push
cmpb
dec
jbe
mov
add
xchg
lcall
lock
les
inc
mov
xchg
jmp
inc
es
gs
inc
into
sti
ljmp
inc
adc
mov
sbb
int3
rolb
dec
in
and
loopne
dec
loope
and
or
iret
fisubrs
cltd
cld
xchg
mov
adc
push
outsb
cmc
fidivrl
fwait
adc
cwtl
dec
mov
int
xor
jb
push
jae
dec
inc
lcall
cmp
push
sub
xor
pop
rcrl
mov
adc
icebp
jne
mov
cmp
outsb
or
mov
scas
pop
add
test
jno
in
pop
lcall
out
sub
cmp
addr16
fsub
dec
jae
lret
int
vpmacsswd
ss
mov
fcmove
pop
pop
sbb
mov
std
aaa
repz
into
jl
xchg
aad
cmpb
inc
imul
sbb
inc
adc
jbe
sti
movsl
jmp
cmp
xor
fildl
add
in
push
push
mov
dec
add
scas
jmp
or
mov
adc
xchg
insb
jnp
cld
dec
or
xchg
rorl
xchg
cld
mov
xchg
scas
xor
inc
and
lahf
jge
xor
xchg
add
xchg
rcrb
int3
add
mov
dec
cmc
inc
pop
fsubl
mov
push
sbb
mov
test
aam
sbb
and
and
cmp
adc
xor
mov
movsb
pop
ret
jb
cmpsb
fs
ss
imul
imul
popa
shr
std
sahf
test
or
loope
in
test
or
imul
rcr
inc
shll
add
cmp
pop
inc
xchg
mov
lret
xchg
add
xchg
mov
movb
push
cmc
mov
test
and
dec
rcrl
lret
iret
mov
jb
rolb
push
fiadds
inc
enter
push
fiadds
loop
push
xchg
pop
mov
sub
inc
adc
jle
push
cmp
mov
push
fsubrs
push
fwait
aaa
xchg
adc
jmp
cmp
mov
icebp
jns
cmpsl
in
lods
or
divl
rep
pop
cwtl
repnz
add
mov
mov
push
shrb
mov
movsb
dec
push
ret
enter
push
mov
rorb
push
sub
xchg
lcall
rorl
test
out
into
push
or
insb
sbb
xchg
pop
ret
enter
movsl
or
outsb
sub
cmpsb
dec
daa
dec
xchg
pop
or
jne
aad
nop
shlb
dec
mov
pop
aas
loop
cmp
addr16
push
mov
outsb
cmp
popf
adc
mov
data16
or
jbe
jmp
and
loop
dec
jnp
pop
loope
cmp
movsl
inc
xor
mov
pop
add
jecxz
out
mov
and
cltd
inc
lret
adc
insl
daa
and
jo
mov
rolb
lahf
outsl
das
jne
rol
push
fiaddl
pop
push
inc
add
mov
mov
dec
inc
sbb
aas
rolb
inc
xchg
cmpsb
lahf
jno
jecxz
movsl
stos
mov
movsl
out
dec
jecxz
jns
lock
xchg
test
cmp
ds
aad
sbb
jmp
test
dec
cmpsb
insb
ret
test
and
test
repnz
std
shrl
inc
lods
bound
jp
jb
inc
and
jmp
sbb
mov
nop
and
mov
adc
push
lea
push
and
mov
sub
jnp
lods
xchg
mov
cli
mov
das
sbb
mov
mov
jle
jae
jb
call
xchg
xchg
imul
add
push
xchg
xchg
adc
fstpl
add
sub
iret
pop
adc
pop
inc
mov
mov
sbb
inc
aas
testl
push
faddp
jne
inc
mov
iret
sbbb
into
mov
imulb
addl
adc
orb
cmp
cs
lods
icebp
movsl
push
and
cmpsl
or
rclb
orb
or
stc
ljmp
call
jns
ds
pop
hlt
inc
and
mov
dec
cmp
push
xor
jns
in
mov
fs
push
jl
test
nop
jo
mov
adc
pop
mov
outsb
push
lock
or
push
add
lods
add
mov
mov
mov
es
pop
imul
cwtl
scas
mov
sub
xchg
das
aaa
add
test
mov
cmc
inc
inc
push
xchg
cltd
push
cmp
leave
mov
scas
mov
es
sub
lea
and
cmp
fwait
in
dec
lcall
sbb
insb
pop
jo
lret
cmpsb
das
cli
inc
je
mov
lods
lds
sbb
nop
mov
add
inc
add
pop
scas
add
pop
pusha
test
sbb
pop
int
sbbl
dec
testb
inc
out
and
or
dec
pushf
push
mov
sti
inc
sbb
dec
sub
movsl
cmpsb
or
out
and
or
push
mov
call
mov
scas
popa
xor
sahf
aaa
mov
sub
xor
mov
inc
lahf
mov
sbb
lret
and
es
cld
sbb
movsb
mov
std
cs
add
stos
mov
out
jb
mov
roll
fbld
lea
jne
mov
push
aam
insl
inc
into
ss
scas
mov
shl
js
or
popf
outsl
loop
or
push
add
cwtl
push
dec
mov
sbbb
push
cwtl
mov
jo
mov
pop
mov
ss
mov
sub
notl
pop
cwtl
adc
sahf
mov
adc
ret
push
out
outsl
loope
icebp
or
adc
mov
icebp
mov
pop
push
icebp
out
jno
mov
sahf
dec
sbb
fwait
mov
push
mov
pop
outsb
sbb
mov
xchg
loopne
jo
scas
in
pushf
inc
push
mov
fs
ret
mov
or
aas
aaa
mov
adc
insl
cld
shrl
sbb
inc
int3
out
scas
scas
push
out
imul
sbb
push
hlt
cmp
int
jl
mov
sub
push
xchg
jo
xchg
pop
std
adc
out
sbb
push
adc
mov
stos
add
pop
aam
and
jecxz
jl
xor
imul
cmp
inc
lcall
aaa
cmp
jp
mov
addr16
hlt
loope
cli
testb
ds
and
daa
sahf
lcall
aad
lret
xor
mov
cli
movsl
popf
aad
les
push
ret
mov
push
and
xchg
test
repz
js
push
outsb
shl
ja
push
adc
jno
cmp
mov
jb
push
int3
repnz
imulb
jae
jo
or
or
call
cmp
mov
dec
sbb
pushf
clc
sbb
push
xor
xchg
imul
stc
addr16
out
mov
fdivs
loopne
test
pop
sbb
jl
lods
test
pop
into
adc
jo
push
mov
je
popf
jbe
pop
sub
hlt
stos
push
push
loop
cmpsl
mov
mov
jae
aad
sbb
out
sbbb
jne
adcl
pop
cmp
mov
lret
mov
loope
outsb
popf
push
scas
movsl
sahf
int
test
cld
pop
jmp
and
push
cmp
rorb
js
xchg
ljmp
xchg
jecxz
cmpsl
or
loop
push
andb
jns
jle
or
adc
icebp
mov
mov
insb
adc
pusha
sub
pop
imul
jns
fisttpl
scas
xlat
stos
outsb
mov
inc
xor
in
cmp
jg
jecxz
bound
or
push
decb
push
test
mov
jmp
push
or
jnp
aas
mov
les
inc
negb
mov
or
addr16
movsb
cmp
out
jge
mov
adc
rcll
mov
outsl
push
shll
enter
loope
loopne
inc
sub
inc
mov
inc
xchg
push
ss
lret
lods
dec
scas
cmp
bound
ds
sbb
mov
int
dec
xchg
mov
cs
and
mov
mov
pop
fwait
jno
push
das
mov
add
outsl
test
outsb
ret
rol
add
dec
xchg
adc
push
fiadds
jb
add
test
js
scas
imul
out
mov
push
sbb
push
test
inc
ss
push
pop
lds
flds
scas
jb
lds
xlat
xchg
jns
shl
mov
push
mov
lods
lods
pop
jnp
hlt
test
add
jmp
cmp
cmp
mov
fwait
ljmp
stos
or
daa
fmul
inc
int3
into
stos
dec
dec
xchg
jnp
pop
mov
cmpsl
dec
in
cwtl
stos
leave
leave
out
pop
pushl
clc
sub
sbb
xor
scas
lods
test
inc
cltd
ljmp
xor
push
stos
movsb
call
inc
pop
outsb
adc
jb
add
imul
or
int3
jb
xor
imul
mov
popf
scas
xchg
cmpsb
sub
test
dec
jno
and
sub
scas
in
mov
xor
xlat
push
subl
pop
mov
ds
scas
outsb
jecxz
mov
dec
push
nop
insb
sub
inc
std
push
cmpsb
stc
mov
mov
mov
fwait
jns
lods
arpl
aam
sub
and
push
jne
xchg
sahf
xor
pop
or
jae
mov
enter
xchg
add
loope
orb
mov
inc
xor
xorl
sbb
hlt
sahf
stc
xchg
mov
inc
jns
push
xor
and
sbb
jmp
iret
lret
lret
xor
data16
mov
pop
sbb
inc
dec
xchg
xor
cmp
out
rorl
add
xchg
xchg
xlat
icebp
cmp
out
sahf
aas
jae
in
shrb
xor
loopne
cwtl
ds
cli
lock
inc
out
xor
add
repnz
ja
add
test
rorl
test
jnp
jp
addr16
fsubrl
repz
stc
sbb
mov
xchg
out
add
xchg
push
xor
shrl
or
arpl
sub
inc
or
adc
mov
push
inc
mov
or
fildll
es
ds
cld
repz
mov
insl
mov
fs
enter
mov
mov
push
mov
push
mov
adc
and
push
cmp
test
lcall
pop
sbb
loope
jecxz
leave
test
lea
adc
je
hlt
mov
cmpsb
lea
mov
int3
and
lods
repz
sub
mov
pushf
xchg
add
mov
das
inc
mov
dec
leave
push
jle
cmc
mov
pop
add
adc
jl
mov
push
xchg
add
insl
insb
cmpsl
mov
or
fsubrl
push
and
mov
and
mov
lock
push
mov
insl
dec
ja
outsb
add
mov
out
shll
xor
cltd
or
inc
stos
push
dec
cltd
jp
ret
jp
in
push
fstps
adc
add
cwtl
add
jg
fidivrs
insb
pop
xchg
mov
push
sbb
test
push
call
lret
or
inc
test
insl
addl
inc
cltd
mov
incl
es
cmc
adc
insb
xlat
mov
fs
xor
jecxz
cmc
fdivl
das
xchg
sbb
pop
xchg
adc
or
je
into
xchg
ror
sbb
subl
sub
shrb
jns
mov
mov
push
hlt
daa
inc
xchg
clc
push
mov
pop
mov
xor
xchg
jecxz
in
pusha
add
clc
or
fadds
mov
movsb
fbld
jne
js
jno
jl
sub
lahf
ljmp
push
dec
and
js
dec
arpl
push
mov
jae
pop
cmpb
ds
je
adc
mov
scas
addb
movsb
mov
pop
xchg
sub
mov
clc
mov
push
data16
inc
lahf
fimull
mov
mov
loop
shrb
mov
lcall
arpl
out
insl
movsb
push
scas
adc
push
es
adc
mov
cwtl
xlat
add
mov
outsb
or
insb
sbb
stos
arpl
xchg
pop
mov
jecxz
test
enter
shlb
rcrl
cmp
in
into
inc
adc
pushf
es
fidivl
out
dec
arpl
push
jns
vmrun
das
sbb
call
mov
pusha
ds
or
in
dec
hlt
adc
adc
xlat
add
jae
fstpl
loopne
inc
xor
inc
lea
int3
aam
les
lock
stos
adc
popf
mov
dec
fistpll
push
adc
adc
mov
and
clc
sub
rcr
int
jl
out
pop
daa
push
out
fdivs
cmc
clc
jne
je
icebp
dec
pop
jge
pop
xchg
fistl
pop
push
scas
mov
aaa
lea
push
data16
leave
popf
inc
pop
xor
inc
dec
inc
xchg
outsb
fdivrl
pop
mov
mov
mov
in
add
fdivrl
jecxz
in
out
arpl
aad
xchg
test
or
dec
mov
sbb
inc
fldt
dec
adc
cli
lods
imul
inc
xor
loope
idivl
pop
xor
fdivp
jge
push
std
sbb
and
scas
aad
icebp
dec
mov
in
test
or
dec
mov
or
cmp
gs
loopw
pushf
enter
test
xor
out
mov
addr16
in
lret
sbb
cmp
pop
popf
jno
or
mov
sbb
lods
mov
inc
adc
jp
xchg
cmp
mov
cmpsb
mov
xchg
push
and
fmuls
cmp
inc
out
fsubs
mov
xchg
int
inc
jno
movsb
sub
sbb
push
mov
int
and
mov
push
mov
push
dec
push
shrl
or
aad
adc
stos
stos
dec
add
or
ja
mov
push
imul
gs
add
fisttps
loop
popa
adc
movsb
out
leave
or
aas
sub
filds
xchg
or
je
pop
repnz
je
mov
and
mov
xchg
add
jmp
leave
mov
adc
cmc
ja
in
xlat
add
sub
xor
ss
js
xchg
xchg
push
lods
js
cmpb
push
adc
daa
fs
cs
adc
mov
cmp
adcb
aad
push
lods
pusha
xchg
ret
push
jecxz
and
adc
loope
sbb
bound
push
mov
mov
sub
inc
lds
orb
insb
jmp
rcrl
xor
inc
mov
sbb
add
xchg
inc
fisubs
ret
cmpsl
sub
pop
andl
jmp
repz
push
push
aaa
cmp
seto
cwtl
xchg
fldcw
mov
dec
arpl
jmp
jno
xor
and
adc
aas
jge
xchg
call
adc
lret
adc
or
fucomi
in
and
jae
ds
ss
lods
popa
add
rolb
loopne
mov
mov
sahf
lock
filds
dec
inc
into
into
retw
sub
and
cli
out
mov
push
fisttps
add
vmulps
or
sub
shlb
movsl
inc
or
pop
push
nop
leave
jbe
lock
negl
mov
mov
ds
xchg
xor
xor
mov
jp
insb
das
lds
cmp
das
insb
rcrb
pop
pop
dec
mov
popa
cmpsb
mov
fsubrs
jns
ficoml
div
sub
popf
or
inc
jbe
insl
mov
arpl
sub
sub
jmp
push
sti
rcrl
add
sti
movsl
out
das
pop
dec
int
push
cmp
pop
out
sub
mov
loopne
inc
or
mov
movsl
push
xchg
aaa
xor
into
pop
push
mov
xlat
dec
out
decb
popa
inc
movsl
jg
sub
lcall
and
push
adc
and
add
clc
dec
or
mov
cmp
pop
dec
out
loop
sbb
or
jge
iret
mov
adc
leave
push
subl
sbb
xchg
into
into
cmpsb
jb
fdivr
sahf
xchg
sbb
adc
push
and
xchg
cs
lock
mov
pop
jo
push
cmp
push
add
nop
mov
jb
dec
lcall
addr16
fmuls
pushl
mov
mov
push
rorl
cmp
adc
sbb
pushf
and
adc
xchg
add
xchg
xchg
and
and
out
in
iret
sub
mov
inc
in
pop
test
test
into
in
adc
jecxz
adc
mov
fsubl
ja
insb
les
xorb
pop
lcall
pop
clc
int3
out
aaa
lods
gs
movsl
scas
negb
loopne
ljmp
add
sahf
sub
fs
std
loop
inc
aaa
inc
mov
sub
cmp
lods
les
iret
mov
gs
and
push
dec
push
xlat
mov
dec
ret
int3
std
test
dec
mov
mov
out
sub
ja
fldenv
stos
fidivs
rorb
gs
xchg
fists
mov
jae
enter
das
addr16
cs
push
std
push
fldl
cmp
mulb
push
movsb
push
das
jp
sbb
mov
mov
add
push
or
mov
and
mov
ret
sub
test
or
aaa
rcr
mov
mov
fldenv
shll
aad
jno
fisttpll
push
push
pop
insl
not
jb
xor
hlt
xchg
lcall
jb
ss
loopne
shll
inc
cli
jmp
mov
emms
sbb
inc
in
cmpsl
fucomip
jle
mov
icebp
rcll
scas
cmp
fnsave
and
jne
pop
add
addb
notl
xchg
mov
scas
mov
adc
jns
push
fcmove
mov
xor
pop
test
cld
add
lods
jae
mov
outsl
jle
sbb
lcall
and
and
cltd
nop
xchg
repnz
imul
jb
es
fnstcw
xchg
push
dec
in
xchg
imul
push
stc
rcrl
xor
movsl
jae
inc
or
xchg
in
aas
jo
aas
loop
jns
xlat
adc
movsl
mov
push
mov
xor
mov
hlt
outsb
loopne
push
mov
push
mov
outsb
mov
in
mov
stos
out
adc
inc
push
inc
cli
insl
jp
jg
lods
mov
mov
pop
aaa
xorl
daa
xchg
stos
das
jg
in
dec
sbb
jns
jo
sti
inc
sub
cmpsl
and
sub
subl
gs
lods
add
aam
inc
inc
clc
je
movsb
gs
push
mov
pop
or
mov
dec
xchg
fcompl
ret
dec
jno
out
out
stos
jle
adc
adc
sbb
inc
fiaddl
xor
mov
jno
and
mov
xchg
icebp
jle
mov
push
dec
add
es
mov
iret
stos
mov
or
add
aas
inc
fs
mov
mov
adc
loop
or
int
fbstp
pop
gs
clc
push
aas
lock
pushf
pusha
mov
icebp
sub
stos
cmp
jbe
cmp
dec
mov
std
mov
and
mov
xchg
popf
in
outsb
add
movsl
call
inc
xor
std
rolb
add
gs
push
lcall
xchg
mov
insb
cs
stos
ret
cmp
daa
xchg
jnp
in
mov
cmc
fdivs
repnz
outsl
call
push
lods
out
pop
jg
mov
stos
cs
xor
xchg
mov
jge
pop
mov
into
icebp
add
and
decb
lea
lds
enter
stos
in
popa
jmp
pop
fstpl
dec
sub
fwait
sbb
fmuls
adc
mov
mov
inc
jle
pop
rcrl
push
dec
dec
out
int
enter
adc
dec
lahf
clc
push
outsl
sbb
xlat
stc
iret
int3
bound
mov
jo
xchg
xchg
dec
push
xor
je
lahf
lcall
or
out
fucomi
inc
icebp
outsl
push
es
or
mov
inc
outsl
repnz
testl
xchg
mov
push
dec
test
lret
xchg
loopne
or
push
and
cmpsl
loope
inc
mov
sub
push
icebp
fsubr
sbb
ret
fbld
xchg
mov
push
addl
in
inc
test
sbb
outsb
cli
lahf
sbb
dec
cmp
push
icebp
push
movsb
andps
imul
xchg
icebp
sbb
rorl
sub
out
xlat
inc
popf
push
dec
xchg
mov
and
mov
sbb
jns
mov
xchg
fidivs
pusha
or
add
pop
imull
pop
mov
xor
enter
jne
push
or
inc
insb
adc
xchg
icebp
mov
cmc
int
es
sbb
jge
or
xchg
pop
fcom
ret
fimuls
pushf
into
clc
push
repnz
jno
aad
cld
lahf
iret
adc
test
cmp
xchg
popf
loope
jb
sub
dec
push
inc
jne
xchg
das
pop
cmpsb
xchg
mov
daa
ja
pusha
fildll
int
repz
test
jmp
dec
mov
rclb
rcrb
repz
leave
sub
into
or
fcomps
adc
pusha
jl
push
lret
xor
mov
out
fcompl
sub
test
data16
insb
jl
inc
orl
sub
insb
jg
add
call
int
ja
lret
push
jns
ja
fucomip
xor
mov
push
roll
lock
fwait
push
cmp
ss
add
jmp
inc
fcmovnbe
das
fisubrl
inc
and
ljmp
aam
mov
add
and
cltd
mov
dec
stos
sarb
inc
adc
mov
pusha
cmpsl
test
push
mov
out
xchg
jecxz
mov
push
xchg
lret
mov
cmc
pop
sub
adc
mov
cmpsl
sahf
loopne
hlt
cmp
push
pop
out
in
inc
ss
movsb
sti
mov
in
jne
or
sarb
dec
sub
imul
pop
add
push
int
call
pop
cmp
jnp
add
pop
jo
daa
push
addb
jno
sbb
movb
jle
xlat
pop
inc
cli
xchg
cmp
sbb
cld
fs
flds
xor
or
xor
inc
out
and
dec
mov
jg
cmp
mov
xchg
add
lds
push
add
xchg
mov
or
in
out
icebp
add
jmp
push
jo
mov
cmp
mov
inc
mov
fnsave
pop
dec
xchg
cltd
lret
je
loop
stc
xor
xchg
test
dec
add
lea
int3
aas
xor
mov
stos
cmpsb
jg
push
fwait
test
inc
int3
fsub
fwait
cmpsl
inc
fstps
add
adc
lods
pop
aad
lods
push
hlt
int3
push
inc
movsl
in
cmc
xchg
push
roll
push
mov
das
dec
jne
fcmove
test
pop
fs
ja
das
pop
cld
sbb
data16
leave
xchg
or
jle
std
add
in
imul
mov
dec
xor
pop
in
pop
add
je
les
adc
rcll
ret
xor
adc
cmp
lahf
xchg
incl
adc
sar
dec
clc
and
pop
shrl
pusha
inc
movsl
mov
mov
jle
jno
fstpl
cltd
or
or
sbb
pop
and
gs
push
pop
cmpsl
pusha
sub
nop
push
jnp
mov
fnstcw
dec
sbb
xor
arpl
stos
xchg
cs
jmp
add
lahf
sub
dec
and
cmp
in
fdivr
cmp
lret
xchg
or
cmp
xchg
mov
push
outsl
cmp
int
addb
popa
mov
mov
push
sub
mov
jbe
mov
push
pop
pushf
pop
mov
cltd
or
fld
mull
pop
mov
mov
fisttpl
int
xor
xchg
jge
lcall
fldl2e
mov
lahf
and
addl
add
dec
rorb
rol
nop
int3
gs
aad
mov
repz
js
dec
push
fwait
sub
in
cmp
xchg
sahf
inc
rcr
in
jl
add
or
push
cmpsb
jae
arpl
js
fwait
pop
test
pop
enter
dec
mov
in
lock
sbb
pop
jp
clc
lahf
into
mov
xchg
cs
jg
int3
push
stos
mov
jle
gs
ja
jnp
mov
sbb
test
mov
cli
movb
adc
dec
push
or
pusha
push
mov
sub
das
cmp
mov
rolb
add
cli
icebp
aad
call
shrb
into
in
sbb
jo
push
lret
xor
xor
cmc
outsl
mov
push
js
imul
xor
rcrb
bound
xchg
ds
inc
gs
loope
sub
mov
xor
call
sarb
leave
lret
mov
aas
int3
xchg
mov
shlb
sub
test
xor
push
clc
push
mov
mov
cli
jns
fcmovnu
lds
loopne
mov
jp
ror
fsubrl
jp
data16
addr16
mov
dec
loop
push
or
xor
push
cmp
gs
out
jbe
movsb
sub
cmpsb
mov
pop
fisubrs
mov
sbb
mov
jne
pop
mov
inc
loop
or
add
mov
lods
lods
test
outsl
dec
mov
lds
mov
mov
push
ja
cmpsb
inc
xor
fwait
gs
lods
in
inc
inc
insl
in
add
arpl
inc
insl
mov
clc
or
lock
jmp
stos
mov
mov
jno
inc
pop
outsb
test
lret
or
and
fld
movsw
xchg
xor
inc
nop
lock
mov
out
cmc
inc
mov
inc
in
push
dec
dec
imul
imul
fwait
xor
xchg
loopne
jb
add
bnd
xlat
insb
and
sbb
call
sub
inc
mov
mov
add
roll
sbb
push
dec
push
mov
test
jmp
repnz
xchg
into
adc
cs
popa
jecxz
in
andl
in
stc
jle
or
leave
jecxz
sub
pop
out
jae
dec
sahf
lret
mov
fldenv
call
lret
mov
cmp
or
or
mov
int3
ds
sbb
neg
int
hlt
dec
in
inc
lret
test
push
sbb
cwtl
add
or
dec
add
push
bound
mov
dec
lret
cmp
cld
ja
push
loopne
and
aam
ret
lcall
aas
cmp
insl
cwtl
sub
jae
add
jb
mov
jg
lret
lods
daa
and
xor
shlb
cli
jb
cs
sbb
cld
pop
mov
xor
jmp
inc
mov
inc
stos
gs
pop
and
inc
leave
dec
cmp
in
mov
nop
lock
repz
inc
sbb
lret
scas
xor
inc
sub
jl
int3
cld
add
push
cmp
das
and
dec
inc
test
xchg
inc
divl
aad
popf
lea
xchg
sbb
jo
and
or
out
and
cmp
dec
sbb
movsl
es
pop
xchg
stc
mov
mov
sub
out
pop
mov
imul
and
push
jno
cwtl
or
sub
popf
pminsw
out
fsubrp
out
out
pop
loopne
mov
sbb
lcall
xor
cmc
adc
cmp
fimull
lods
sahf
dec
xchg
mov
mov
or
mov
pop
ja
xor
mov
mov
repnz
push
test
divb
loop
ret
js
sub
xchg
aam
jge
push
mov
mov
xor
inc
repnz
cmpsl
cli
xor
cmp
lcall
lret
lods
jl
scas
jle
lcall
das
cltd
test
xorb
scas
and
inc
jecxz
imul
fwait
mov
std
movsb
pop
insb
or
rcrb
push
movsb
adc
int
xchg
cmp
jp
pop
into
jmp
stc
loopne
data16
sbb
pushf
ds
loop
xchg
xchg
in
xlat
stos
xchg
jmp
mov
inc
pop
aad
jl
xchg
jno
addr16
pop
adc
ja
rclb
sub
add
sub
xor
lret
jge
imul
xchg
daa
test
test
lahf
xchg
pop
repz
icebp
imul
jns
out
in
insl
pop
push
add
stc
int
imul
incl
ret
loopne
adc
and
cld
mov
pop
dec
sbb
sub
insl
data16
sub
leave
sub
push
push
loopne
rcrb
push
push
std
dec
inc
push
lret
int
xchg
mov
int3
mov
shrb
mov
pop
mov
mov
mov
sub
or
push
fucomp
xchg
pop
add
mov
sub
in
sub
mov
pop
push
rorb
outsb
ret
imulb
cltd
dec
rclb
movsb
mov
ja
out
leave
cmpsb
jns
pop
ja
pop
and
dec
jle
xlat
and
sub
leave
mov
test
jo
inc
ret
pop
in
or
ret
sbb
push
mov
jns
or
fildll
adc
call
in
lret
sub
fwait
add
adc
inc
mov
fcomps
sbb
jmp
nop
mov
loopne
adc
rcll
push
and
cltd
mov
cmp
or
in
repz
loopne
fnstcw
cmp
mov
cmpb
bswap
pop
adc
jecxz
cwtl
jbe
test
add
cli
dec
or
lock
nop
pop
pop
ret
mov
stc
dec
loop
fsubrl
pushf
pusha
adc
fwait
inc
mov
or
test
push
dec
in
xor
fmul
mov
inc
jecxz
icebp
out
lret
xchg
jmp
fwait
mov
sbb
imul
add
inc
insb
hlt
outsl
xlat
inc
js
dec
in
push
xchg
push
cmp
and
iret
leave
sbb
mov
add
dec
fistl
xor
xor
lock
push
addr16
shr
inc
daa
pop
xor
incl
adc
pop
push
std
push
cld
sbb
cmp
mov
add
pop
dec
xor
pop
addr16
jb
adc
cli
xchg
nop
ss
stos
and
jecxz
jno
sub
addr16
int
rcll
cld
xor
aas
adc
push
mov
dec
nop
in
shll
popa
adc
xlat
in
lret
sbb
cld
insl
iret
test
fimuls
push
std
mov
sti
imul
imul
push
mov
fmuls
repnz
ds
cmp
mov
aaa
dec
sbb
arpl
call
or
popf
orb
cmp
inc
jno
ljmp
fdivs
ret
add
cmp
mov
mov
popf
jl
movsl
ret
mov
mov
xor
test
imul
cli
cmp
stc
jg
addr16
add
xor
mov
loope
xor
icebp
push
repnz
and
cs
imul
movsl
fwait
popf
fdivr
rorb
inc
xlat
in
jne
test
sti
outsl
js
out
jle
add
xchg
xchg
rorl
out
aad
rcl
cld
clc
pop
push
jne
adc
in
test
cs
push
xchg
out
mov
push
incb
xchg
xchg
call
test
mov
mov
pop
push
popf
jl
pop
dec
xchg
push
or
mov
jle
test
jge
clc
cmp
dec
xorl
in
aam
pop
cwtl
add
add
popa
cmpsl
ret
enter
out
fidivrl
add
cmp
int3
push
sbb
cmp
mov
std
lods
jg
pop
push
push
mov
jns
jmp
inc
rorb
mov
repnz
bound
out
outsl
cmp
mov
loop
inc
jge
cmp
add
test
xchg
add
pop
movsl
adc
sub
mov
iret
lcall
and
cmpb
sbb
dec
outsl
and
leave
cmc
mov
mov
xor
jecxz
pop
mov
adc
cmp
mov
push
lods
and
es
lcall
pop
test
pop
call
outsl
pop
stos
inc
push
and
or
pop
lock
push
mov
mov
xchg
jle
pop
mov
inc
and
in
fwait
push
push
int
sahf
inc
mov
lret
imul
pop
mov
ja
pop
dec
push
mov
iret
in
std
movsb
xchg
xchg
xchg
imul
cwtl
popf
addb
jmp
shl
jmp
outsl
mov
popf
xchg
push
jbe
xchg
mov
in
mov
call
cs
cmpsl
mov
call
hlt
add
jbe
jo
movsb
inc
scas
out
and
lods
or
iret
mov
out
inc
xchg
adc
movsb
pop
pop
lahf
mov
mov
shl
fisubl
es
inc
int3
or
icebp
jl
and
cmc
mov
repz
fimuls
cmpsl
add
gs
and
add
mov
sbb
rorl
ja
nop
add
jle
aas
fidivs
sarb
lret
push
daa
pop
fwait
pop
addr16
push
fsubs
pop
lcall
negb
mov
addr16
mov
arpl
pop
or
andl
pushf
aad
xchg
add
cmpsl
and
push
sti
sub
pop
jg
mov
lret
xchg
mov
dec
push
rolb
cmpsb
stos
cld
jp
in
rcrb
rcrl
cmp
xchg
mov
adc
test
pop
or
push
ficoms
ja
jno
int3
and
or
add
es
push
loope
fldl
mov
mov
mov
scas
lahf
outsl
add
dec
cmpsb
sbb
fidivl
test
in
leave
fimull
std
mov
or
sub
sti
push
pushf
mov
iret
add
dec
inc
shl
add
push
fisubs
lcall
std
popa
psubd
or
inc
fidivrs
cmp
cmp
lret
adcb
stos
jmp
pop
cld
loopne
or
sahf
cmc
lds
mov
icebp
inc
pop
sahf
sub
dec
jmp
jne
sub
cmpsb
or
push
adc
fisubrl
lret
and
mov
stos
cmpsl
mov
shr
fisubrl
xchg
push
ljmp
cltd
pop
incl
inc
sahf
dec
sbb
ss
sti
cmp
addr16
call
cmp
pop
jns
into
cmp
jne
adc
xor
data16
cmp
push
jmp
jmp
outsl
jno
outsb
pop
lahf
jb
addr16
test
adc
mov
ret
cld
addr16
push
lahf
jp,pt
cmp
hlt
cmp
dec
and
jge
pop
jmp
dec
testb
sarl
rcr
call
inc
and
call
inc
rep
sub
test
pop
gs
pop
sbb
xor
int
sbb
xchg
fnstsw
lods
lea
test
mov
outsb
roll
adc
in
lods
ret
ret
and
push
loop
scas
mov
sbb
push
testl
aad
cmp
dec
adc
ret
lods
and
out
cli
js
jne
add
dec
fmuls
cltd
xlat
leave
or
xchg
iret
out
addb
cmc
pop
and
imul
in
mov
sub
or
mov
lcall
out
outsb
xor
sarb
jg
and
cmc
lods
cltd
imul
std
and
cmpsb
clc
dec
dec
int
sahf
out
cmp
push
mov
lds
adc
sub
ljmp
jae
dec
dec
mov
loope
dec
aad
fisubs
jmp
rcl
sti
fsubr
out
scas
pusha
xor
or
cmp
push
fstpl
xor
mov
jmp
das
push
out
xor
xchg
adc
fidivl
sub
fsubrs
gs
aaa
hlt
sbb
int3
dec
sbb
das
movsl
lcall
jne
inc
pusha
or
aam
mov
sbb
mov
shrb
adc
sub
into
outsb
mov
repnz
repz
mov
sbb
pop
dec
jl
fwait
push
and
add
daa
jp
fisubs
cwtl
into
lds
ljmp
fcoms
insb
out
test
push
mov
mov
ret
or
mov
dec
ret
inc
stc
lds
loop
popf
push
inc
jbe
push
mov
cmovl
frstor
outsb
sbb
push
es
rorl
notl
inc
cld
xchg
leave
push
push
xchg
sub
adc
or
xchg
rcrl
fisubrs
icebp
inc
pop
pop
sbb
cmc
orl
enter
flds
addr16
inc
cmpsl
jne
icebp
xor
mov
xor
mov
es
inc
es
stos
icebp
mov
cs
xor
mov
add
and
mov
cmpsl
in
insb
dec
das
push
cwtl
dec
xrstor
subl
cmp
dec
adc
sarb
mov
xchg
xchg
sub
dec
adc
ss
pop
jb
stos
fidivs
push
mov
pop
xchg
out
ds
jecxz
jl
cmp
idiv
lea
inc
in
mov
popa
cli
stos
push
xor
int
test
mov
std
pop
divl
ret
aaa
aad
mov
push
jnp
jno
pop
pop
or
fadd
movsb
adc
xchg
adc
fs
sbb
lods
cltd
loopne
lret
dec
out
xchg
loope
mov
in
scas
cwtl
pop
orl
cmpsb
scas
lcall
repz
push
outsl
fidivrl
mov
push
les
mov
inc
pop
cmp
push
sarl
dec
mov
mov
mov
adc
rorl
das
dec
adc
jl
test
out
mov
imul
cmp
sti
pop
stos
add
and
jg
dec
mov
cmp
inc
mov
dec
jge
xor
or
sbb
xchg
jns
ljmp
addr16
push
bound
rorl
je
das
jno
adc
testb
cs
jle
jmp
shll
sub
jne
add
in
xchg
pop
lea
outsl
cmpsl
jp
insl
jne
adc
push
sbb
sub
rol
pop
add
dec
subb
lock
xor
add
inc
xor
and
sbb
push
xor
jno
pop
and
stos
xchg
hlt
mov
outsb
mov
les
xor
cmp
inc
push
enter
out
loopne
int
mov
gs
mov
sub
dec
mov
xchg
inc
pop
xchg
push
push
mov
jb
xor
fdivl
jnp
inc
inc
xor
ja
jns
push
xchg
or
daa
mov
lret
xchg
cmp
hlt
in
bnd
sub
cmp
in
adc
nop
xchg
cmp
mov
sub
jg
lds
movsl
xchg
sahf
notb
xor
fwait
bound
cmc
xchg
add
cs
cmp
sbb
fildll
inc
or
jb
sub
mov
jb,pn
xlat
inc
push
mov
fdivrs
add
push
adc
outsl
shlb
jge
sbb
push
pop
inc
pop
cmp
dec
or
jo
scas
adc
sub
pop
pop
idivb
data16
cld
cmp
push
lahf
leave
or
test
inc
in
push
mov
subb
inc
inc
stc
insb
popa
push
pop
test
or
add
in
mov
repnz
cmp
sbb
cmp
popa
inc
imul
push
nop
and
ret
dec
lret
in
arpl
xchg
jno
loopne
repnz
or
jb
and
in
jge
and
repz
mov
pop
add
adc
aas
inc
or
push
sub
pop
incl
addl
je
gs
cmp
es
inc
and
or
push
pop
cmc
lahf
int
add
cmpsb
into
push
pop
aas
lahf
push
fcomp
sbb
mov
inc
int3
sub
lock
xor
push
mov
and
ja
mov
push
nop
adc
mov
xchg
cmp
fimull
mov
jb
js
rorl
in
fists
call
fnstcw
imul
jb
xor
dec
out
adc
xor
movsb
xor
inc
xchg
push
shll
cltd
push
cs
xor
pushl
inc
push
repnz
and
cmpsb
mov
xchg
adc
mov
repz
sub
insb
xchg
das
mov
xlat
and
xchg
mov
push
push
push
cmp
shll
push
mov
or
jb
arpl
call
push
negl
movsb
pop
jmp
aad
dec
adc
stos
mov
and
xor
jne
push
scas
push
bound
adc
jns
pop
add
xchg
jg
jo
add
inc
or
mov
pop
push
xchg
cmpsb
clc
out
pop
fstps
stos
jno
insb
pop
xchg
mov
lcall
aam
jp
inc
jle
xlat
sub
call
inc
outsl
sbb
jp
push
mov
sbb
and
ficoms
sbb
cmp
jecxz
arpl
pop
bound
in
addb
push
out
fbld
sub
adc
push
or
fildl
push
andb
xor
addr16
jecxz
cld
adc
jnp
inc
shlb
pop
call
pop
fldt
jle
lock
adc
fwait
xor
dec
or
jo
jmp
lods
es
stos
mov
add
lahf
loopne
ror
lea
imul
xchg
dec
and
and
fsub
and
jg
jo
insb
sbb
sub
insl
inc
mov
mov
out
sub
sub
sub
sbb
jne
push
insl
and
sub
push
push
mov
jl
add
les
aaa
push
ret
jns
ret
xchg
mov
mov
test
sub
xor
sub
inc
icebp
mov
bound
in
mov
aad
push
mov
push
arpl
adc
push
stos
lahf
jmp
xchg
jl
push
mov
dec
sbb
fidivrl
jp
push
dec
mov
dec
xor
xor
pop
mov
out
test
xor
iret
sub
jnp
js
xor
push
hlt
loop
push
stc
out
icebp
fnstcw
out
xor
xlat
and
repz
and
xchg
or
mov
addl
jmp
push
icebp
adc
push
test
or
insl
popf
inc
arpl
imul
or
push
addb
push
push
repz
mov
xchg
mov
fadds
aad
leave
daa
mov
fldcw
cli
sub
push
jb
cmp
or
test
sub
enter
xlat
jmp
mov
cmp
pop
jnp
ficomps
pop
mov
cmp
mulb
mov
int3
push
imul
inc
into
add
cltd
in
dec
push
mov
jmp
cwtl
shll
movb
inc
enter
push
pop
push
xchg
leave
hlt
jle
insl
test
sbb
pop
mov
testb
sub
jo
jge
fisttps
dec
sbb
pop
cs
fsubp
xlat
mov
sbb
and
lds
pop
lock
call
popf
pop
mov
sahf
cmp
xor
adc
pshufw
xlat
pushf
stc
add
mov
stc
int
mov
fistl
ret
mov
rolb
and
add
into
iret
cmpb
cmpsl
mov
test
in
sbb
sbb
pop
and
mov
out
adc
loopne
jno
pushf
push
pop
mov
lea
push
push
and
test
out
clc
scas
stos
lcall
inc
dec
jle
pushf
popa
cmp
mov
adc
adc
pop
mov
jl
cltd
mov
push
dec
lods
mov
jp
sbb
xchg
mov
daa
int3
mov
sbb
fidivrl
dec
lret
add
je
jl
cmpsl
xchg
push
mov
ret
arpl
test
out
ret
leave
aas
repnz
pop
xor
repz
cmpl
loope
xor
pop
scas
dec
lods
pop
push
mov
xor
andb
fisttpll
xor
test
iret
push
add
mov
in
hlt
cltd
test
sub
inc
push
int
push
lea
imul
je
push
push
fdivrl
sbb
sub
pop
sbb
les
xlat
iret
pop
dec
inc
dec
out
addb
in
mov
adc
xor
push
push
mov
outsl
cli
jp
sahf
adc
dec
ds
push
icebp
sub
cld
lret
add
rcrb
pop
in
pop
ret
enter
add
adc
cmc
mov
xchg
cmpsb
in
jecxz
jbe
imul
fsubrs
add
icebp
out
sub
pusha
loope
jmp
mov
jg
cmp
je
push
add
mov
jle
and
add
rorl
imul
rolb
mov
sti
and
arpl
pop
dec
sub
pop
mov
lods
pop
jne
aas
jge
add
inc
push
movsb
jp
pop
ss
mov
push
fs
out
jmp
jne
testb
jecxz
add
fs
jp
adc
clc
leave
adc
leave
or
orl
add
cmp
mov
out
mov
in
mov
adc
and
mov
inc
in
imul
addb
pusha
mov
add
lds
push
jge
mov
xor
jecxz
hlt
into
rorb
mov
aam
es
mov
xchg
je
aas
out
lcall
and
mov
cmpsb
xchg
pop
leave
xchg
mov
mov
adc
fstl
pop
mov
cwtl
cmp
icebp
icebp
and
fcomps
orb
jp
int
mov
jle
mov
into
lret
adc
pushf
mov
nop
or
mov
icebp
lea
bound
call
pop
out
leave
pop
inc
aaa
pop
out
stos
sti
testb
or
dec
aad
lds
roll
outsb
pop
scas
mov
jno,pt
xchg
cmp
insl
pop
loop
lds
push
or
aas
push
push
jbe
pusha
cld
pusha
test
add
ret
xchg
data16
lock
cmpsl
sub
sbb
aam
xlat
xchg
mov
pop
xor
adc
push
lds
push
js
push
sub
jb
pusha
lret
lret
cmp
and
movsb
inc
adc
sti
stc
bswap
into
lds
pop
jle
jge
add
das
or
xchg
loop
repnz
fdivl
cmpsl
inc
fsts
cmp
bound
test
mov
ljmp
inc
fcomp
sbb
pop
mov
std
add
add
scas
imul
das
in
fisttps
mov
out
mov
out
inc
cmp
push
fists
jmp
sbb
xor
jle
mov
jmp
cmpsl
push
int
rep
stos
mov
add
subb
cmpsb
push
lods
xchg
subl
mov
imul
mov
cmc
sbb
push
sub
pop
mov
and
adc
fnsave
dec
js
in
orl
push
rcrl
icebp
xor
mov
inc
push
dec
imul
push
das
mov
subb
inc
mov
mov
cmp
push
lods
test
push
inc
lret
lret
ss
das
or
in
cmp
out
cli
add
aaa
xchg
sar
xchg
orl
mov
test
jmp
inc
and
cmp
sub
adc
and
je
pop
add
push
push
cld
jg
aaa
push
inc
mov
cli
dec
add
pop
add
jno
xor
xor
mov
pushl
mov
pop
mull
push
shrb
inc
or
cld
pop
cmpsb
cmpsb
mov
inc
xor
mov
test
clc
inc
or
add
movsb
sbbl
and
mov
stos
mov
addb
fimuls
test
sahf
gs
add
aad
sbb
adc
or
xchg
push
fsubr
sbb
jecxz
pop
loope
xor
cmp
and
or
xor
shll
push
dec
adc
fwait
pop
and
sbb
xor
or
mov
xor
xor
aaa
jnp
cmpb
mov
xchg
push
push
jecxz
mov
cld
sahf
stos
xlat
add
enter
pop
das
test
cld
and
push
mov
or
adcl
push
fadd
mov
add
mov
gs
jne
outsb
rolb
push
stc
fisttps
add
cmpsl
sbb
add
mov
push
insb
loop
lret
loope
dec
sub
icebp
aas
pop
call
jae
mov
push
fnstcw
xor
subl
push
shr
jmp
cs
int
dec
cltd
xchg
repnz
push
jmp
inc
fwait
mov
pop
cmp
push
and
xchg
jg
clc
nop
lahf
jp
inc
bound
jns
cltd
push
jbe
fstps
std
cmpsb
enter
mov
mov
out
push
cmp
pop
sub
out
sbb
cmp
pop
jmp
inc
test
xchg
jns
dec
fs
mov
push
dec
test
jmp
jb
cmp
je
mov
test
cmp
adc
testb
outsl
jecxz
ss
jns
mov
test
cmpsb
inc
daa
adc
outsb
incl
jge
xchg
in
outsl
jo
jge
fidivs
movb
into
addr16
or
das
in
adc
cmp
jb
ret
sbb
aam
pop
dec
xchg
inc
gs
insb
shlb
mov
inc
mov
xor
push
xchg
or
test
push
dec
test
xchg
xor
and
jg
imul
jo
mov
orl
pop
xchg
out
daa
jns
xchg
jno
add
xlat
icebp
repz
inc
call
aad
lock
mov
xor
orb
sbb
mov
cmc
jno
test
push
xchg
xchg
daa
lcall
mov
pop
jne
sarl
cmc
hlt
loop
aad
aad
or
ss
push
pop
dec
mov
push
jnp
or
clc
xor
xchg
add
imul
and
jbe
pushf
je
push
sub
xchg
scas
arpl
out
cld
adc
push
push
push
orl
inc
cmp
std
je
mov
jo
mov
rcl
mov
in
ret
flds
mov
mov
mov
xor
les
jnp
ja
dec
fstps
int3
cmp
dec
lods
cmp
prefetcht1
push
or
stc
daa
cmp
ret
adc
imul
das
push
cmpsl
outsb
xor
lods
dec
jne
cmc
enter
test
mov
popf
sbb
mov
cmp
fisubs
addr16
mov
fimuls
push
pop
add
ret
mov
add
out
aaa
out
xchg
and
inc
and
dec
xchg
add
pop
mov
sbb
std
mov
push
aam
cmp
adc
jbe
mov
lea
push
lods
push
cmpsl
xor
rorl
ficoml
ljmp
arpl
sub
in
out
pop
adc
dec
push
inc
push
jbe
dec
stc
sbb
pop
jecxz
pop
push
outsl
adc
inc
divb
xor
push
cmp
iret
adc
mov
incb
adc
and
xor
das
in
mov
cmp
sbb
ja
or
repz
inc
jle
daa
data16
stos
sub
xor
inc
xlat
into
fadds
je
cwtl
arpl
mov
test
jo
out
js
movsb
fdivl
add
inc
xor
and
mov
push
std
jb
pop
mov
mov
aaa
mov
or
loope
aas
xor
fsubrl
adc
or
mov
inc
and
mov
jg
std
dec
jo
mov
inc
adc
mov
cmc
xor
mov
lea
push
aam
mov
xchg
inc
push
jg
sbb
gs
adc
mov
push
or
pop
xchg
pushf
cmp
jo
clc
mov
sbb
pop
testl
loopne
aad
push
test
jnp
jo
push
nop
xchg
gs
jno
sbb
pushf
and
out
pushf
jecxz
jns
fildl
cmpl
cli
cmp
call
inc
dec
or
jge
test
jp
inc
in
pop
or
out
ljmp
sub
pusha
pop
in
js
push
out
jns
adc
je
mov
std
out
fwait
push
mov
xchg
mov
xor
cmpsl
xor
shlb
gs
add
fnstcw
dec
fadd
add
xchg
xchg
sbb
ret
pop
rclb
mov
dec
push
mov
sahf
lret
movsl
or
nop
arpl
sub
and
adc
fidivl
daa
cwtl
out
stos
inc
xchg
popf
mov
jne
adc
cmpsb
pop
push
scas
xor
push
imul
mov
rolb
inc
dec
jnp
lock
popa
mov
pop
cmpl
sub
nop
loop
xor
cmp
shrb
jbe
pushf
aaa
imul
and
leave
popf
cs
cmpsb
fwait
or
mov
push
xchg
cmp
dec
enter
divb
pop
out
mov
enter
insb
lock
push
test
mov
mov
push
xchg
adcl
rolb
out
lahf
rorl
cmp
outsl
sub
sbb
mov
and
cwtl
dec
aaa
movsl
jg
push
sbb
repz
pop
ret
fmuls
test
xor
push
les
mov
movsl
es
daa
arpl
xor
adc
add
fldz
ret
dec
popa
inc
jmp
push
insb
xchg
ret
fstpt
xchg
das
or
xor
pop
cmp
or
mov
mov
sahf
imul
rcr
sbb
fcoms
lds
fucomp
push
call
dec
mov
xor
xchg
jle
out
dec
xchg
cwtl
xchg
mov
adcl
fisubs
lcall
fs
mov
jg
cmp
push
adc
xor
int
lret
dec
fadds
add
in
imul
cs
repnz
mov
sub
add
mov
mov
adcb
lret
les
sub
xor
imul
jmp
mov
mov
fwait
stos
dec
pop
seto
sbb
sbb
out
cltd
lcall
push
xchg
xor
push
push
or
adc
ss
and
aas
mov
cmp
cmpsl
mov
stos
sti
mov
mov
repnz
push
shll
jno
mov
in
adc
je
sti
add
add
mov
hlt
scas
scas
xchg
in
int3
lcall
adc
mov
mov
inc
sub
fildll
fcom
or
js
pop
dec
add
pusha
ret
test
push
or
mov
xlat
into
sub
cld
test
sbb
pop
lods
pushl
xchg
xchg
inc
lret
cli
or
adc
sbb
xor
cmp
sbb
sbb
aam
pop
lcall
mov
mov
push
push
push
adc
rorl
ss
sub
and
inc
cmpsl
in
and
and
push
inc
mov
jmp
rorb
js
push
clc
dec
test
add
cmp
adc
fcoml
out
mov
add
mov
mov
push
add
jns
inc
pushf
idivl
push
pop
push
cmp
mov
pop
popa
mov
pop
test
mov
and
sahf
pop
loope
cmp
notl
stos
inc
outsl
loopne
push
ret
arpl
push
xor
fs
mov
sti
je
mov
push
or
aam
or
arpl
mov
dec
in
cmp
xchg
clc
mov
pusha
lock
sbb
xchg
ljmp
scas
js
dec
jo
fstp
fmull
mov
inc
imul
pop
or
jno
daa
loope
rclb
or
push
mov
inc
mov
dec
mov
gs
leave
adc
mov
and
inc
ret
xlat
out
push
mov
loop
inc
adc
pop
fistpll
dec
int
bound
mov
push
xchg
xchg
imulb
xor
out
jmp
jg
mov
add
ss
xchg
lods
cli
pushf
ds
lods
mov
les
xchg
sub
or
mov
cmpsb
push
jg
ret
push
es
xlat
addr16
mov
adcb
mov
push
lods
mov
movsb
jmp
popf
dec
push
vmwrite
or
cs
push
outsb
cld
push
fistpll
out
and
cmp
cmp
inc
js
int3
xor
outsl
lret
xchg
hlt
call
mov
stos
andps
repz
pop
pop
daa
pop
lea
xor
mov
sub
and
jne
in
mov
sbb
enter
iret
test
fs
cmp
out
scas
fdivrs
jae
sbb
jp
mov
std
test
jne
movsl
icebp
push
or
imul
add
cmpsb
inc
mov
test
adc
movsb
adc
ret
add
inc
out
jnp
rcrl
xchg
pop
cs
shrl
fbld
sub
ficomps
mov
add
and
sbb
sahf
xchg
adc
loope
movsb
and
idivb
xor
push
int
pop
xor
mov
enter
cmp
hlt
in
add
gs
pop
jns
adc
lds
jo
scas
sti
pop
movsl
cmp
pop
and
hlt
mov
mov
ror
cli
add
cmp
icebp
loope
mov
push
dec
lret
pop
imul
adc
dec
xchg
or
pop
pusha
inc
xchg
ds
ffree
inc
dec
jo
pop
or
hlt
lret
movsl
cmp
or
push
iret
adc
sub
or
and
hlt
andl
xchg
cmp
dec
out
pop
imul
or
push
loope
or
daa
inc
sar
rcrb
out
jmp
mov
mov
int
inc
push
or
ja
test
stc
jb,pn
fwait
adc
sbb
mov
mov
pop
xchg
mov
jb
inc
icebp
pop
push
sbb
cltd
dec
shrl
pushaw
aam
stos
or
das
cltd
loope
cltd
aaa
push
add
cltd
sub
lret
js
inc
decb
inc
mov
insl
pop
jl
adc
dec
pop
mov
cmp
insb
sbbb
mov
and
cli
in
sub
jns
std
mov
mov
pop
or
inc
and
ja
mov
rcrl
xlat
inc
jge
add
shlb
fstl
lods
lock
add
xchg
outsb
fidivs
mov
add
inc
sub
cmpl
fcoml
push
jecxz
mov
jae
insl
dec
inc
jb
data16
sahf
movsb
xlat
sub
dec
jle
jb
mov
cmp
push
and
push
out
lods
outsl
sub
lahf
xchg
xchg
or
sub
or
inc
lock
mov
mov
ljmpw
out
outsl
cld
adc
add
stos
add
xor
out
stos
scas
push
out
dec
mov
push
adc
jp
or
out
scas
adc
or
mov
xor
mov
lahf
dec
xor
dec
jns
inc
inc
mov
jp
push
jbe
imul
pop
roll
call
mov
ret
mov
js
cmp
xchg
mov
dec
inc
mov
jbe
sub
jl
cwtl
adc
shrb
fimull
sbb
pop
push
push
push
cmpsb
add
push
and
sub
movsb
mov
xchg
popf
addb
jmp
pop
mov
pop
icebp
lods
cmp
inc
push
jns
push
inc
push
inc
enter
es
ss
pop
xchg
mov
out
rcr
ss
xor
add
push
jecxz
repz
and
add
jl
jmp
out
loop
xchg
fwait
xchg
mov
ja
inc
imul
and
out
or
fucomi
aas
or
inc
bound
aam
or
pushf
out
fildll
mov
aad
stos
daa
xlat
rcr
push
std
dec
jmp
paddusb
imul
ss
imul
mov
out
pushf
int
mov
test
pop
mov
popf
mov
pop
in
icebp
and
sub
js
add
jle
hlt
cmpsl
fcomps
cmp
je
push
lea
jno
jnp
icebp
fstpl
call
shll
mov
xchg
addl
xchg
and
xchg
in
fs
cwtl
push
xchg
and
adc
jmp
and
insl
fwait
scas
shrl
or
lahf
xchg
daa
add
sub
mov
aas
mov
push
int3
movsl
ret
sbb
loope
adc
stos
jecxz
mov
loope
mov
xor
movsb
mov
xchg
nop
je
je
aas
mov
or
sahf
mov
pusha
jecxz
movsl
cwtl
mov
xlat
shlb
je
in
add
sahf
repnz
sub
xchg
aas
mov
lcall
mov
push
out
mov
fisubs
cmpsl
xchg
dec
int
cmp
jmp
rcrb
out
jl
fiaddl
xor
stos
add
insl
push
add
rcl
jo
vpmacsdqh
test
mov
out
rcrl
and
push
loope
movsl
add
sub
pop
jno
fs
xchg
ja
test
insl
xchg
jno
add
sub
sbb
push
data16
add
xchg
or
out
pop
mov
shlb
ss
jns
adc
dec
or
out
pop
inc
or
adc
add
jg
xor
pushl
imul
loop
sahf
pushf
cmp
sbb
sbb
rclb
mov
out
mov
add
repnz
lahf
mov
dec
stos
mov
inc
push
dec
test
pop
movsl
push
stos
add
popa
in
rorl
mov
std
in
std
cmp
dec
aad
mov
test
inc
mov
lea
std
cli
lcall
inc
and
lods
loop
jo
sbb
mov
bound
mov
fdivrs
cmpsl
inc
push
xor
loop
stc
shrl
mov
mov
imul
je
mov
fldl
mov
sub
xor
mov
lock
mov
push
adc
mov
jmp
sub
jno
rcrl
pushl
push
or
add
xor
mov
in
mov
mov
and
push
sahf
loopne
pushf
imulb
inc
fisubl
push
dec
ds
jmp
lods
dec
sti
push
cmp
jecxz
insl
and
dec
dec
xor
pop
lahf
xchg
lahf
pop
pushf
out
or
push
xor
test
mov
mov
out
cmpsl
inc
and
pop
sahf
jge
cmpsl
sub
add
mov
sub
jmp
push
pop
data16
shrl
cmp
movsl
fildl
leave
vmread
jae
cmp
mov
sbb
inc
jbe
mov
fcomp
jmp
test
cmp
mov
les
lods
pop
add
mov
cli
inc
test
adc
movsb
fiaddl
push
data16
jmp
dec
add
jns
pop
inc
add
xchg
in
add
lea
inc
xor
cmp
popa
mov
idivl
adcb
push
in
mov
jmp
dec
addr16
out
repz
sbb
jbe
popa
mov
pushf
jmp
ss
jecxz
mov
insl
lahf
jmp
xchg
jp
ja
inc
mov
and
icebp
pop
addr16
fmuls
xchg
or
jb
fidivl
insb
int
adc
cmpsb
mov
push
inc
cld
jb
aaa
dec
jo
ret
pop
aaa
ja
cmpsl
adc
sub
mov
sub
mov
js
out
push
xor
sti
jae
mov
xchg
mov
in
add
jmp
mov
lret
mov
pop
push
test
cmp
push
dec
mov
pop
loopne
bound
mov
inc
dec
or
das
jecxz
inc
pushf
fbld
test
stos
scas
test
and
scas
sub
in
pop
xchg
push
push
xchg
loope
and
push
push
sub
push
inc
and
out
push
mov
je
add
popa
adc
leave
mov
push
mov
push
jmp
xchg
mov
pusha
in
jmp
push
and
xor
cli
rdmsr
or
sahf
mov
imul
lret
sbb
int
das
repz
and
andl
sbb
jmp
call
pop
stos
pop
cltd
lods
cmp
jle
jp
jbe
pop
mov
pop
imul
repz
dec
mov
leave
lock
dec
fisttpl
lahf
shlb
mov
mov
or
sub
inc
test
cltd
bnd
mov
enter
lock
imul
in
push
movsb
out
dec
dec
rcl
mov
xlat
sub
out
orb
mov
ret
movsl
xor
movsl
mov
inc
and
outsl
add
xchg
lahf
inc
pop
into
xchg
xor
lret
sub
ljmp
adc
repnz
mov
or
inc
and
rorl
pop
loop
pop
lods
call
jg
pop
stc
push
sbb
lock
push
je
lds
inc
push
out
jmp
pop
jb
scas
pop
fidivl
cmpsb
out
pop
pop
sbb
insb
push
mov
xchg
adc
scas
add
and
out
xor
and
lret
cs
mov
test
xor
es
mov
scas
pop
ja
push
cs
loop
shrl
mov
jb
fildl
mov
popa
add
movsb
add
sbb
pop
enter
cwtl
lcall
jno
inc
dec
jecxz
adc
push
lds
mov
sub
inc
das
cmp
loop
into
dec
sbb
popf
push
add
jns
fwait
jo
pop
outsl
cltd
repz
call
jae
nop
mov
scas
jp
mov
arpl
hlt
bound
xchg
lds
mov
xor
cld
xchg
ficompl
mov
cmp
outsb
aam
mov
popf
dec
and
sahf
test
jae
pushf
mov
mov
add
dec
test
rcrl
test
popf
and
arpl
mov
cmp
jge
js
mov
divb
pop
adc
or
cs
push
ficoml
inc
dec
ror
js
cmp
lahf
lock
repz
icebp
imul
cld
cld
ds
repnz
insb
aad
cmp
pop
pop
pop
jne
ficoml
sub
and
je
dec
pop
jp
shl
sub
lods
cmp
inc
pop
cmpsl
test
adc
xor
into
push
insb
pop
adc
xchg
push
cltd
jae
inc
cmpsl
jmp
ja
inc
sti
xchg
mov
subb
arpl
inc
inc
push
mov
rcrb
xor
out
scas
mov
repnz
or
lock
int
aad
push
adc
jno
dec
movsl
cmp
push
orl
dec
push
or
mov
mov
in
pop
movsb
mov
xchg
aad
imul
sub
and
int
divl
pop
sbb
dec
pop
leave
and
daa
jb
test
xchg
adc
test
xchg
and
push
pop
lock
mov
push
sbb
cmp
inc
loop
xchg
mov
cld
mov
iret
and
mov
xor
add
push
or
sbb
mov
ret
out
pop
xchg
cmp
fldenv
jg
xchg
in
mov
sti
lock
lods
repz
jg
sub
std
dec
pop
leave
mov
dec
pop
lock
call
or
mov
mov
pop
pop
jb
cmp
fdiv
sub
mov
xor
cli
cld
incb
fistps
shl
dec
mov
pop
in
in
out
cld
and
aaa
xor
mov
icebp
jno
rcrl
sbb
insb
push
mov
pop
fstps
mov
inc
mov
lahf
mov
fldl
cmc
sbb
push
mov
mov
cs
and
shll
insl
cmpsb
sarl
or
mov
cs
sub
sub
ret
mov
mov
jle
fcomp
inc
jo
loop
mov
inc
ljmp
rcrb
and
pop
sub
lahf
dec
pop
pop
loopne
ror
push
rcr
mov
pop
and
add
and
pop
mov
sub
sub
bound
xchg
shrb
add
jp
iret
clts
aaa
inc
cld
cmpsl
inc
pop
adc
cmpsb
cmpsb
mov
les
or
push
popf
cmpsl
add
xchg
out
mull
ret
cmp
fimuls
lret
mov
push
fs
fistps
pop
lret
inc
cmp
mov
fmull
std
xor
and
out
add
cld
mov
sbbb
inc
xor
mov
enter
lret
imul
xchg
add
inc
jp
cld
xchg
mov
test
mov
fmull
ja
xchg
sub
mov
jne
mov
enter
arpl
mov
and
sahf
pushf
push
mov
je
mov
add
shrb
outsb
repnz
push
bound
cmp
pop
call
in
aas
call
cltd
cltd
or
outsl
jae
in
mov
add
test
jnp
mov
inc
xchg
pop
ja
dec
cmp
lds
xchg
fsubrp
mov
xchg
loop
movsb
shrl
fxch
dec
imul
inc
rcll
into
lret
int3
jge
inc
outsl
cli
xchg
sbb
jle
pushf
fdivrs
mov
out
push
out
pop
outsl
pop
jbe
subb
push
jmp
and
and
xor
adc
mov
insl
dec
je
or
jl
jno
pop
mov
repz
cli
xor
adc
addl
inc
minps
mov
ficoms
xchg
dec
push
cmp
push
add
mov
addl
in
or
jmp
jbe
jbe
aam
dec
adc
cld
mov
mov
imul
fisubs
out
ljmp
and
leave
sub
jle
lods
dec
ljmp
inc
mov
mov
bound
nop
push
popf
std
pop
ja
xor
inc
and
jge
ret
inc
out
mov
lock
push
jbe
ja
and
mov
lods
mov
in
or
scas
loope
pop
or
ret
into
dec
push
push
je
cmp
push
bound
jecxz
push
mov
test
adc
adc
add
stc
arpl
sbb
fsubl
mov
lea
bound
push
mov
scas
addb
out
xchg
and
dec
ss
mov
stos
fs
faddl
outsb
imul
sbb
stc
sbb
incl
outsb
mov
iret
add
incl
xchg
add
push
lahf
cmp
jbe
dec
xor
adc
cmpsl
test
dec
imul
jns
xor
inc
adc
xchg
cmp
sbb
loop
jge
or
mulb
shl
xlat
add
or
xchg
out
sbb
lea
out
jmp
and
inc
stos
pop
leave
push
insb
cmovae
hlt
push
stos
xor
ficoml
pop
add
mov
xor
popa
shll
movsl
clc
repz
out
xchg
and
leave
or
adc
and
xchg
or
inc
mov
das
sbb
add
add
cmpsl
lcall
mov
push
pop
jo
fwait
inc
jb
idivl
jbe
daa
xchg
sub
prefetch
or
lds
mov
sub
sbb
cmpsl
push
inc
imul
dec
lret
mov
stos
loopne
lcall
pushf
pop
in
andl
adc
sbb
jno
push
mov
insb
sbb
push
jg
data16
xor
inc
push
inc
fidivrl
sub
loope
sbb
mov
mov
call
xchg
xor
push
adc
adc
fistl
pop
inc
jnp
adc
lcall
lret
outsl
xchg
mov
fwait
enter
jecxz
lahf
jge
jnp
and
mov
int
jge
adc
and
mov
sub
into
xchg
xor
ret
in
mov
shrl
jge
push
or
fyl2x
cmc
clc
mov
push
cmp
adc
insb
cmpsb
mov
adc
pop
add
test
push
sub
mov
xchg
adc
and
lock
dec
sbb
push
jo
stos
add
mov
pop
fcmovne
sub
mov
push
adc
shlb
ficompl
dec
loop
xchg
loope
sbb
adcb
sub
jle
mov
jo
inc
pop
in
push
add
adc
ds
int
mov
scas
out
sub
pop
mov
adc
repz
mov
mov
and
mov
inc
push
mov
aam
sub
fninit
xchg
adc
and
lds
fldenv
cmpsl
inc
sub
jecxz
xchg
pop
jne
push
nop
subl
pop
add
add
int3
sbbl
jne
sub
dec
xor
and
mov
adc
dec
pusha
xor
sub
or
lods
insb
mov
test
xor
adcb
call
outsl
adc
cmp
mov
adcl
data16
nop
sbb
addr16
xchg
scas
dec
sub
mov
mov
mov
push
mov
or
xchg
js
inc
mov
or
mov
movsb
ds
mov
divb
xor
ror
dec
mov
xchg
xor
stc
cmpsl
mov
fcmovnu
sbb
pop
dec
xor
sbb
inc
clc
jo
push
dec
mov
es
push
and
cld
dec
or
repnz
icebp
inc
je
aas
outsb
movsb
notb
adc
test
and
sar
stos
aaa
cmp
or
push
jb
jae
inc
fcomi
lret
repnz
cwtl
xor
mov
pop
inc
daa
les
js
andb
sbb
sbb
scas
addr16
imul
adc
cmp
mov
and
xor
mov
xor
paddq
add
repz
jbe
and
repnz
lret
pop
adc
mov
mov
test
dec
sbb
or
lds
sti
cmpsb
and
imul
pop
cmp
fiadds
ret
pop
or
movups
ret
and
sbb
mov
movsl
cmp
pop
xor
sti
xor
jge
repnz
imul
aad
or
mov
push
ss
inc
out
add
fsts
imul
xorb
cli
fcom
gs
movsb
dec
inc
imul
inc
xchg
xorb
inc
sbb
inc
pop
test
mov
mov
jns
out
jae
add
mov
shlb
pop
cmp
js
jnp
aaa
mov
mov
ss
adc
pop
inc
sub
and
test
xchg
mov
mov
ja
jmp
ss
pop
scas
imul
sub
jl
cmp
mov
cmpsb
testl
and
fcmovne
pop
mov
xor
pop
subb
lret
iret
push
mov
jnp
js
imul
mov
pop
mov
push
scas
jne
es
test
xchg
sbb
les
fcoms
sbb
fmuls
shll
in
loopne
jmp
add
fistpl
adc
mov
testb
je
pop
jmp
add
fs
mov
add
inc
pop
in
and
sub
pop
sub
push
mov
pop
dec
lods
xlat
into
aas
cwtl
cltd
jmp
or
and
jle
push
mov
cmp
fidivrs
repnz
orl
lock
jmp
mov
jno
and
jge
aam
popf
mov
xchg
shrb
sbb
push
jnp
call
inc
aas
xchg
xchg
loope
jle
aam
and
xlat
push
sahf
and
or
hlt
idiv
movsl
xor
repz
jg
out
insl
jmp
pop
cmpsb
inc
fcmovbe
aas
in
pop
jae
dec
leave
jg
push
outsb
rclb
insl
loope
dec
ljmp
xor
push
cmp
daa
mov
jne
outsl
ja
nop
mov
xchg
push
pop
push
xchg
mov
decb
cmp
out
insl
pop
inc
mov
stc
js
cwtl
cmp
shrl
lcall
add
jns
lret
clc
pop
shlb
jae
pop
mov
jmp
into
data16
or
inc
mov
ret
call
cmp
xchg
sbb
xchg
es
enter
andb
pop
loopne
notl
lahf
lods
adc
cwtl
push
jg
les
insb
cmpps
stos
push
rcrb
int
lret
pop
repnz
mov
push
pop
cmp
push
test
xor
mov
jae
fldl
std
xlat
insl
jbe
adc
pop
jle
or
sbb
int3
add
add
jo
imul
jb
sti
xchg
adcb
mov
fldenv
add
imul
ds
xor
sahf
mov
jae
ret
outsb
pushf
mov
jnp
xlat
outsl
jae
adc
fildll
jns
je
xor
mov
jmp
dec
adc
xor
push
sbb
out
cmpsb
push
jp
jns
mov
pop
push
out
cmpsb
sbb
imul
sahf
daa
in
es
ja
call
inc
lret
enter
aaa
std
in
sbb
iret
mov
pop
pusha
daa
mov
and
sub
cmp
jnp
lds
xor
pop
daa
in
ret
push
cld
fstps
icebp
fs
jl
loop
sbb
imul
push
add
pop
insl
ret
mov
xchg
mov
xor
jg
xor
lds
lods
addl
out
mov
lds
clc
sub
mov
aas
inc
sub
dec
cli
mov
or
dec
decl
add
dec
xor
mov
or
pmulhw
jp
lret
push
push
push
jp
adc
sbb
inc
adc
movsb
mov
mov
fsubrl
push
into
test
xor
inc
inc
mov
xor
mov
lods
push
fsubrl
mov
mov
mov
imul
sub
jae
sti
popf
xchg
adc
sbb
stos
notl
cmpsb
cltd
test
or
push
pop
lock
popf
dec
mov
push
pushf
aaa
cmp
pop
rcrb
or
imul
push
inc
aam
pop
xor
sub
mov
push
fisttps
scas
sbb
fldl
faddl
ljmp
mov
popa
out
bound
lcall
ljmp
sbb
xor
inc
in
lcall
fdivr
aaa
mov
aad
fbstp
push
sbb
push
jle
jp
cmp
pusha
lret
push
in
push
jo
pusha
int
repz
xor
lds
sbb
movsl
cmovns
mov
mov
ret
test
out
cld
xor
mov
push
sahf
inc
js
add
mov
jecxz
cli
in
push
fmul
fldl
imul
rolb
pop
ljmp
fsub
push
inc
filds
pop
adc
test
lret
add
push
repz
sub
das
cmpsb
and
adc
adc
mov
mov
rcrl
mov
pop
test
xor
sub
sub
hlt
testb
rclb
xchg
sbb
in
addr16
shlb
cmp
pop
mov
and
loop
sub
xor
push
dec
xor
xor
xor
cld
mov
aad
test
push
mov
inc
jp
mov
sbb
scas
test
push
lods
js
push
dec
std
add
dec
jo
xchg
pop
je
pop
std
mov
jp
dec
and
rcrl
dec
add
mov
cmp
pop
int3
repnz
das
scas
popf
inc
ljmp
dec
cmp
sub
sbb
jne
add
orb
xchg
dec
jl
push
sbb
push
lret
jmp
mov
or
push
mov
cmp
lea
outsb
dec
pop
ds
jl
xor
in
movsl
nop
inc
js
stos
nop
iret
xchg
and
pop
mov
stc
xchg
fisubs
sbb
ss
in
rorl
xor
mov
mov
fs
rcl
lods
mov
movsb
rorb
sbb
lcall
notl
mov
pop
in
mov
xchg
fwait
jle
xchg
stc
into
lods
and
test
mov
push
push
adc
mov
jns
in
pop
repnz
rep
inc
fs
mov
cmp
and
fnstcw
push
pop
or
mov
leave
sub
and
and
sahf
xorb
std
lcall
xchg
in
pop
dec
daa
call
test
and
leave
loope
adcb
ret
aam
adc
sbb
in
mov
fmull
dec
in
mov
mov
push
xor
into
sarl
cmp
pop
cld
das
inc
jo,pt
lahf
ret
dec
push
lea
stos
xorb
cmp
sub
lods
lea
sbb
es
inc
cmpsb
fwait
inc
in
cli
test
dec
cmp
enter
sub
imul
push
push
rcrb
in
repz
jo
sbb
test
jp
scas
aam
decl
mov
addr16
and
movsl
lock
push
pop
mov
add
clc
les
je
iret
dec
in
xchg
inc
cs
stc
sub
mov
push
lock
pop
mov
ja
mov
je
int
sbb
mov
insb
in
mov
jle
das
mov
xchg
inc
sub
shll
rolb
dec
je
cltd
ds
adc
inc
mov
or
shr
add
push
push
ret
jle
sahf
pop
sbb
ficoms
aas
daa
jbe
setg
repnz
adc
inc
sti
jmp
dec
test
jp
mov
mov
fwait
jbe
and
jbe
push
sub
pop
xchg
xor
outsl
mov
inc
mov
dec
xor
nop
pop
push
jp
xchg
dec
mov
in
test
push
test
repz
cs
int
mov
mov
mov
cmc
add
mov
stos
std
mov
repz
jp
outsb
and
mov
adc
xor
jb
mov
mov
shrl
cmp
sub
dec
int
add
clc
aaa
mov
pop
jmp
lods
and
outsb
hlt
bound
and
xchg
ficomps
ja
insb
inc
xchg
mov
pop
lods
repz
jmp
movsl
outsb
fucomip
adc
insb
xchg
out
and
xor
das
cmp
pop
push
in
call
mov
das
mov
push
in
sub
jo
shll
je
cmp
cmpsb
cmpsl
mov
das
fistl
inc
scas
ret
stc
into
push
or
mov
jg
cmp
outsl
pop
xchg
inc
cmp
adc
fists
xchg
hlt
aad
sub
or
jns
mov
fnstsw
and
roll
push
loopne
jae
jle
inc
push
lods
addb
xorb
gs
cmc
jbe
pop
ljmp
popf
jae
adc
push
jge
inc
mov
push
xchg
push
mov
cmpb
push
push
out
dec
mov
xor
jno
fs
xor
xchg
insb
pop
mov
scas
inc
inc
cli
pop
or
jae
pop
mov
insl
loope
and
pop
popf
pop
jmp
cmp
mov
mov
sti
mov
jb
xor
adc
js
int
jge
out
dec
sahf
fisubrs
and
test
inc
jns
adc
xchg
or
adc
loop
push
or
outsl
push
dec
dec
lret
sub
mov
xor
clc
fs
xchg
jb
add
mov
mov
cmp
aad
hlt
or
jns
into
push
insl
mov
push
fistpl
xchg
mov
aam
fwait
sub
push
and
adc
xchg
mov
scas
mov
dec
lods
add
lock
pop
daa
inc
cmp
jl
fnstcw
add
cmp
aas
sbbl
adc
cmp
rorb
pushf
pop
xlat
clc
lock
pop
fsubl
dec
mov
push
decb
ss
xchg
jl
push
sarb
adc
xor
cmpsb
xlat
aaa
lea
mov
inc
add
mov
outsl
rol
sub
imul
stos
xchg
mov
shll
sub
call
dec
mov
add
rcr
and
call
pusha
inc
lock
mov
xchg
cmp
pop
daa
movsb
lods
mov
xlat
xor
lret
sti
xor
stos
adc
cs
mov
es
mov
mov
dec
cltd
mov
xor
mov
or
pop
pusha
cmpsb
aas
outsl
xchg
mov
xchg
xor
push
cli
inc
int
cmc
jecxz
jb
out
pop
cmp
sbb
xor
test
jno
jno
mov
jmp
add
xor
xor
loopne
inc
aam
pop
rcll
mov
mov
push
mov
mov
repz
shll
arpl
xchg
in
arpl
gs
xchg
je
cli
sub
movb
mov
dec
mov
push
mov
je
fnstenv
mov
xchg
or
inc
pop
mov
test
sahf
adc
inc
test
jl
push
cli
jecxz
jp
in
xchg
and
adc
pusha
sbb
xor
mov
int3
mov
dec
xchg
push
or
dec
call
in
rol
mov
movsl
leave
mov
jne
push
lcall
xchg
shr
push
xchg
pop
push
das
dec
cmpb
cmp
push
mov
mov
outsb
xchg
pop
ss
rclb
loopne
insl
rcrl
jnp
leave
fldenv
push
and
lock
int3
mov
push
call
mov
leave
int
gs
not
fbld
jnp
xor
pop
adc
mov
inc
shll
and
mov
mov
mov
mov
ljmp
test
push
or
test
and
mov
jne
lret
imull
jnp
fisubrl
pop
push
dec
test
dec
jae
in
push
pop
int
roll
pop
push
mov
aas
lahf
push
scas
aas
lcall
jg
add
das
stos
push
cmp
cmpsb
dec
int
in
rcl
mov
popa
shlb
mov
ret
xchg
cmpsl
xchg
data16
outsb
adc
mov
dec
movsb
xchg
push
sbb
cltd
lret
sahf
fisttpll
movsl
dec
cld
mov
jns
loopne
lods
sbb
lods
pop
mov
cmp
cli
orl
push
adc
xchg
aad
and
ss
sub
push
xchg
nop
fstl
daa
ret
stc
lahf
pushf
pop
push
sbb
sbb
ja
int
xchg
stc
jae
lods
adc
xchg
sbb
stos
or
mov
shr
std
sahf
addl
mov
lcall
les
cs
adc
mov
les
daa
sub
ja
frndint
or
push
in
mov
ljmp
push
fs
pop
jns
call
mov
sbb
mov
sub
scas
inc
mov
sub
push
sbbb
bound
adc
jmp
ret
sub
movsl
lcall
lock
add
lret
imul
jae
in
add
adc
sub
roll
xor
fisttpll
sbb
mov
pop
and
jecxz
outsl
mov
xor
adc
dec
or
cmc
mov
into
loopne
iret
or
mov
xlat
mov
push
test
pop
bound
cmp
daa
xor
int3
cmp
or
push
inc
sahf
inc
fidivs
popf
pop
pop
cwtl
imul
aaa
and
sub
lcall
lcall
dec
push
mov
ret
sub
or
outsb
cli
jp
movsb
scas
pop
stos
fcmove
inc
and
push
or
aaa
aaa
mov
mov
xlat
lret
sub
mov
addb
xlat
gs
scas
push
mov
je
mov
sbb
push
mov
psubd
movsb
add
int
push
mov
aas
dec
push
mov
popf
sbb
push
mulb
adcb
js
dec
mov
adc
ss
bound
dec
pop
xchg
xchg
pop
cmp
lret
xchg
or
ret
fsubs
pop
rcr
bound
lods
sub
pop
mulb
xor
pop
popa
pop
pop
pop
lahf
mov
jo
adc
out
and
jecxz,pn
mov
sub
push
mov
dec
bound
lret
fadd
xlat
sbb
ret
je
in
wrmsr
int3
mov
das
ret
jg
mov
jecxz
popa
xchg
pushf
cmpsb
push
aaa
out
inc
je
mov
popa
lea
shrl
push
das
push
and
sbb
cmp
scas
fldl
xchg
sbb
cmp
ds
mov
jbe
sbb
xor
push
sahf
daa
call
popf
aad
sbb
aam
lods
pushf
cmpsb
cs
lcall
aam
sbb
push
mov
fadds
cmp
in
xor
push
test
loope
dec
lret
dec
aam
loopne
xchg
std
jnp
ja
adc
pop
adc
or
sbb
ss
adc
adc
cmp
dec
push
dec
push
lcall
mov
sub
add
lcall
mov
push
loopne
cmp
movsb
mov
xchg
cmp
pop
push
dec
or
adc
leave
jne
add
sti
push
test
xchg
in
in
leave
insl
sbb
mov
xchg
insl
sub
sub
push
adc
push
sti
clc
std
xor
int
sbb
dec
xchg
jmp
in
repz
inc
loop
sub
mov
mov
shll
test
jnp
dec
add
or
lds
pop
push
sbb
cltd
mov
mov
adc
jl
pop
clc
sub
cmp
and
or
cmpsl
pop
add
notb
xchg
jbe
jns
call
cmp
imul
ljmp
addr16
roll
iret
adc
pushf
xor
leave
into
lcall
mov
in
pop
test
lret
pushf
adc
insl
fcoms
jge
cmpl
pop
fucomip
push
test
fisubs
pop
mov
aaa
test
cld
mov
sbb
xor
mov
pop
jecxz
cmp
pop
cld
mov
int3
pop
sahf
fadds
xchg
dec
cmp
or
mov
xor
out
mov
shl
mov
lods
sub
dec
shll
jg
inc
test
sbb
push
add
jbe
bound
push
popf
or
outsl
neg
sbb
inc
fwait
sub
mov
out
xor
mov
pop
nop
cwtl
repz
push
pop
sub
shlb
loopne
fistps
xchg
inc
cld
lods
dec
mov
xlat
dec
dec
pop
add
mov
repz
push
xor
push
cmp
sub
push
outsb
jns
cmp
xor
ret
in
fwait
pop
aas
xor
cmp
cmc
mov
cmp
flds
or
loope
dec
or
inc
sbb
xchg
outsl
scas
sbb
stc
xor
loope
pushf
in
pop
lret
pusha
out
sub
in
iret
sbb
lahf
dec
mov
iret
inc
lahf
je
ret
es
adc
subl
cmc
in
add
es
ds
mov
cmp
cld
add
mov
push
mov
scas
inc
pop
scas
outsb
out
pop
pop
in
sysret
and
mov
cmp
and
clc
and
lock
fs
inc
xor
sbb
mov
mov
xchg
push
dec
sti
js,pt
mov
adc
jl
or
push
mov
pushf
cmp
xor
xlat
pop
inc
es
lret
out
cmp
jo
dec
mov
mov
cwtl
cmp
cmp
cwtl
dec
mov
mov
out
ret
imul
sub
xchg
xor
sub
test
inc
mov
shll
cmpsl
dec
adc
inc
nop
xchg
stos
sub
sub
push
cmp
pop
sub
xchg
popa
outsl
insl
xchg
cld
mul
pop
cs
arpl
xor
inc
cltd
cltd
dec
loopne
fsubl
cli
stos
jmp
pop
aaa
jne
adc
andb
push
push
lea
fsubl
cmp
lret
hlt
jns
ja
mov
callw
lahf
xor
test
leave
xchg
pop
xchg
fldln2
pop
jb
cli
cs
lret
sub
jae
jne
repz
mov
push
rcrl
and
sbb
lret
dec
add
dec
lcall
lcall
jo
push
cli
pop
test
dec
xchg
push
clc
pop
inc
mov
adcl
lret
jns
testb
dec
pop
inc
push
pop
into
aaa
arpl
stos
clc
dec
ss
iret
mov
sbb
loopne
jge
mul
test
insl
inc
out
pop
add
cmp
add
scas
mov
dec
popa
test
mov
pop
jle
lods
and
jg
into
cmp
in
jbe
mov
mov
and
fstpl
fcoml
xchg
loopne
sahf
insl
push
roll
sub
aaa
push
cwtl
xor
je
dec
cs
fsubl
sub
scas
mov
adc
lock
xchg
ljmp
iret
arpl
or
test
cld
aaa
nop
data16
push
pop
les
lods
out
xchg
out
scas
cmp
lea
decb
into
arpl
xchg
stc
and
mov
sti
jnp
outsb
je
fs
scas
add
aas
xchg
xchg
jge
jnp
cmp
add
fiadds
scas
loope
outsl
xor
dec
sbb
clc
xchg
fbld
cmp
call
push
xchg
movsb
out
sti
mov
cmp
scas
lret
inc
lcall
jo
incl
jecxz
sub
mov
cli
mov
mov
cmc
sub
sbb
in
mov
repnz
fisubrs
xchg
mov
ja
iret
or
mov
fcoms
addb
and
xchg
xor
movsb
in
mov
pop
movsl
repz
add
adc
das
inc
xchg
sub
clc
add
jno
mov
add
push
leave
loopne
lods
dec
stc
in
clc
pop
sub
and
cmpsb
out
dec
xchg
mov
inc
pop
mov
xchg
mov
filds
je
sbb
jmp
nop
push
loopne
inc
out
ficoml
and
pop
mov
inc
or
loop
lds
std
add
ss
sub
cmp
ficompl
inc
fwait
or
jecxz
pop
xor
xor
shlb
cmp
insl
ljmp
dec
xchg
adc
and
cmp
sbb
inc
call
dec
repz
hlt
scas
xor
sub
inc
aaa
arpl
adc
adc
xor
lahf
fcoml
or
and
or
inc
and
mov
or
mov
clc
or
add
ret
jns
or
jle
fwait
push
xor
cmpsb
fdiv
pop
cmp
xor
pop
pop
mov
inc
dec
pusha
lahf
dec
ss
neg
insl
test
xchg
ja
push
inc
pop
gs
mov
and
jbe
in
dec
sub
fcmovb
fcomps
push
fstps
scas
push
sub
jns
lcall
iret
and
or
popa
push
push
loope
sub
and
mov
daa
addr16
add
dec
sbb
subb
int
movsl
int3
imul
arpl
out
mov
movsb
sub
mov
push
pop
push
mov
shrb
pop
lods
mov
mov
dec
mov
fldln2
test
outsl
add
or
sbb
imul
pop
jbe
shrl
dec
push
push
push
add
xchg
fimuls
and
mov
mov
xchg
xor
jbe
test
in
or
dec
push
mov
ret
lods
inc
mov
mov
adc
std
icebp
mov
xor
jnp
or
popl
xchg
or
push
lret
outsl
jmp
mov
pusha
xorl
mov
xchg
fadd
or
das
iret
sbb
mov
sbb
adc
xor
js
sarl
jo
jbe
hlt
adc
mov
bnd
mov
xchg
push
add
sarb
ficomps
pop
or
sti
xlat
mov
mov
fbld
mov
sbb
or
std
xchg
xchg
in
mov
inc
mov
stos
xor
mov
sub
mov
and
fiaddl
js
leave
lods
testl
jae
nop
sub
fcompl
clc
adc
pop
jbe
cmp
and
pop
cmp
rorb
mov
das
enter
mov
push
out
ret
sbb
push
pop
std
test
and
loopne
mov
leave
ror
call
icebp
and
loopne
jnp
mov
jg
xchg
mov
je
ret
mov
jge
in
lock
shl
jno
mov
int
dec
mov
or
jno
push
data16
pop
lods
test
je
popf
push
sbb
mov
hlt
cs
adc
push
adc
add
inc
addr16
hlt
jg
lds
je
mov
cmpsl
jle
sub
gs
xchg
imul
aam
iret
into
arpl
cmpsl
mov
dec
not
pushf
sti
cltd
push
js
xor
mov
aam
mov
xor
je
adc
ds
stos
pop
mov
mov
nop
inc
push
xor
aam
fsubrl
push
add
and
add
adc
imul
int
dec
fnstenv
jle
movsb
and
icebp
mov
lcall
mov
and
push
cltd
pop
jle
fldl
xchg
mov
out
lahf
nop
cmpsb
mov
into
enter
lock
pop
ljmp
in
add
popa
sub
sbb
pop
add
dec
imul
lret
inc
fbld
rcrb
in
and
add
hlt
or
rol
pop
fidivl
push
adc
dec
or
push
mov
lahf
xchg
mov
lret
inc
mov
ds
ret
enter
mov
ficompl
sub
ret
jb
loop
adc
test
cmp
xchg
sti
jecxz
lods
loope
lret
sub
fs
mov
sub
cld
xor
add
inc
pop
ja
fucomp
cmp
lds
rcll
test
bound
std
gs
mov
xor
jbe
aas
cld
inc
mov
popa
jae
inc
pop
jo
sbb
sbb
cmp
sub
addr16
jle
cmp
inc
and
pop
push
mov
shr
cmp
add
mov
or
xchg
imul
add
cwtl
bound
mov
pop
daa
pushf
into
mov
cmp
and
xchg
movsb
or
mov
fwait
and
fnstenv
dec
lds
pop
pop
cmp
ret
imul
push
push
and
sarb
fnstcw
sbb
insl
aas
mov
es
lock
mov
clc
push
pop
xchg
pop
and
imul
into
dec
xor
andw
lcall
mov
xchg
xchg
enter
xor
test
or
lods
mov
xor
lods
xchg
dec
sub
mov
aaa
push
jl
pop
xor
dec
inc
mov
out
xor
into
sarb
lret
inc
hlt
jl
je
sbbl
fs
icebp
and
dec
fiaddl
lds
mov
and
mov
rorb
inc
adc
or
mov
mov
inc
add
out
hlt
jecxz
and
out
add
and
sub
xchg
sub
mov
pop
and
inc
xchg
jge
lcall
nop
inc
adc
pop
push
movsl
idivl
and
adc
and
xor
add
mov
xor
mov
gs
jbe
adc
leave
sbb
xchg
lods
nop
xor
mov
push
sbb
arpl
hlt
mov
lock
adcb
push
dec
sub
mov
mulb
outsl
sbb
push
call
cld
mov
push
pop
inc
mov
or
sub
pop
imul
mov
mov
dec
ja
aaa
mov
xchg
xchg
pop
fucomip
add
xchg
notl
stos
fistps
inc
dec
scas
mov
iret
ja
pop
in
add
loopne
mov
cmp
add
scas
cwtl
and
aam
or
icebp
lods
adc
aad
aas
pop
jnp
cmp
jae
pop
fs
mov
inc
adc
es
sahf
js
adc
and
cwtl
push
mov
cmp
sbb
add
jp
sbb
ret
xor
sbb
mov
mov
out
pavgw
pop
xchg
cmp
sbb
pusha
cltd
add
inc
in
iret
call
sahf
sbb
push
outsl
xor
cs
sbb
adc
push
stos
lahf
pusha
xchg
push
in
inc
std
or
push
mov
mov
xchg
fwait
sbb
repnz
test
scas
adc
lret
adc
pop
push
ds
xor
cmp
adc
stc
dec
sti
add
repnz
fimuls
mov
addl
push
jle
xchg
jecxz
sbb
inc
outsb
fisttps
inc
jb
mov
cli
rclb
das
daa
in
mov
pop
jno
or
iret
daa
xor
mov
xchg
test
mov
sbb
sub
adc
insl
jg
jp
lcall
and
out
push
sbb
jge
outsl
insb
jecxz
arpl
add
out
jecxz
mov
mov
xchg
lret
das
test
sub
add
pusha
cltd
ficoms
mov
das
lods
fs
pop
adc
mov
nop
add
mov
jmp
adc
popl
mov
sahf
adc
xor
fnstenv
mov
enter
or
or
xor
add
loop
call
addr16
inc
outsl
fs
sbb
fldcw
test
push
dec
add
xchg
ret
push
xor
lock
adc
adcl
jmp
jae
in
xor
sti
inc
iret
jmp
adc
pop
aam
sbb
test
insb
push
inc
push
cwtl
jbe
sti
fildll
fisubl
or
jmp
scas
test
fdivl
fwait
rorl
loopne
mov
lods
in
aad
sbb
inc
pop
pop
fmul
jecxz
push
int
pop
or
in
nop
jg
xchg
jmp
das
out
jle
in
inc
mov
mov
gs
mov
jb
mov
sub
jmp
pmaxsw
pop
push
adc
xor
and
fmuls
mov
mov
sub
mov
je
xlat
sti
or
cmp
mov
repnz
xchg
fcoml
mov
out
add
ss
push
stos
pop
push
sub
mov
jge
ja
std
pop
inc
test
aaa
jno
insl
imull
test
mov
fistpll
or
pop
outsb
sbb
fld
fiaddl
or
xchg
lds
or
or
mov
xchg
jge
rorl
jno
fstpt
aam
packuswb
inc
lock
scas
inc
imul
push
stc
repz
aam
mov
jbe
es
imul
add
inc
xor
adc
jle
adc
inc
mov
outsl
aam
cmpps
sbb
mov
sti
daa
mov
repz
push
inc
fistpl
pop
pusha
dec
popa
xorl
mov
push
push
in
scas
push
idivb
pop
or
or
sbb
xor
adc
fimuls
inc
dec
test
adc
mov
jge
rolb
and
xchg
lcall
inc
out
push
sbb
fsubl
test
js
mov
push
es
in
cltd
dec
lock
pop
inc
xlat
mov
cmp
fldenv
xchg
dec
test
fcmovu
sti
ret
sbb
sub
andl
add
jecxz
mov
jmp
cmp
mov
push
push
dec
imul
sbb
dec
and
pusha
and
clc
push
mov
xchg
xor
stos
sbb
in
pusha
add
arpl
hlt
shlb
adc
and
adc
aaa
or
out
sbb
lds
jno
loop
aad
jle
pusha
inc
push
loop
fwait
adc
cld
cmpb
mov
push
mov
mov
jp
out
idivl
inc
push
jmp
inc
dec
mov
ja
cld
push
cmp
cld
pop
fwait
loope
insl
cmp
xchg
dec
scas
movsl
jle
movsl
and
lahf
push
mov
push
sahf
cli
into
and
mov
mov
mov
test
xchg
dec
nop
jnp
fsubrs
xchg
dec
add
je
jl
mov
jge
push
mov
push
jmp
inc
andl
add
inc
push
repnz
mov
std
movsl
outsl
in
shll
imul
mov
xchg
pop
iret
sti
xchg
mov
pop
jo
mul
clc
lcall
shrl
out
or
inc
mov
stos
inc
movsb
cli
mov
cmp
rclb
popa
mov
ret
fcoms
lcall
lahf
adc
mov
fistpl
sbb
pop
pop
xchg
xor
adc
dec
push
movsl
insb
andb
jmp
mov
sub
aas
xchg
movsl
jne,pn
fnstenv
sbb
nop
out
add
add
xor
repnz
pop
int3
aas
lret
push
pusha
insb
aas
pop
xchg
stos
mov
push
popa
jbe
xchg
lret
in
adc
push
adc
fsubp
xchg
ljmp
mov
into
cmc
aad
shll
test
pushf
sbb
push
dec
mov
mov
mov
jp
push
xor
and
xchg
and
sahf
cltd
cmc
sbb
push
cld
nop
pop
dec
and
pop
fisubs
sub
xchg
sub
scas
push
pop
idivl
and
int
cmp
xchg
and
dec
mov
fsts
je
push
sbb
fmuls
int
fiadds
pop
repnz
into
fimuls
sbbl
ds
mov
xchg
sahf
inc
ret
xor
stos
das
sub
and
mov
xor
bt
repz
loopne
js
and
jnp
mov
loop
out
jo
lahf
arpl
fildl
cmp
repz
int3
inc
daa
pusha
mov
pop
popl
xchg
and
add
fcomps
pop
insb
pop
fsubl
shrl
mov
adc
negl
mov
and
jo
mov
xchg
loope
out
add
loopne
xor
add
pop
or
repz
pushaw
sbb
cltd
es
fcompl
push
jl
sub
aas
data16
cmp
fldenv
xor
push
push
xchg
mov
aam
data16
inc
fwait
ljmp
filds
dec
std
stc
cs
inc
cmp
jae
in
call
or
sbbb
stc
mov
lds
sub
push
xchg
rorl
or
xchg
xchg
lods
inc
add
hlt
mov
push
push
mov
cmp
fwait
out
out
mov
mov
andl
scas
jle
lock
cmpsl
lret
mov
dec
sbb
test
xchg
das
mov
adc
idivl
test
mov
js
out
addr16
and
cmp
xchg
sbb
insb
sub
pop
sub
cwtl
outsl
ljmp
in
aas
lret
and
imul
ds
mov
aam
push
cld
jmp
xor
dec
bound
sti
shll
mov
xchg
xchg
dec
mov
outsl
cmpsl
dec
call
repnz
out
aaa
sarb
xchg
pop
int3
push
ficomps
push
loope
pop
insl
jne
xor
lret
mov
or
ljmp
dec
lods
pop
aaa
sub
cmp
xchg
sbb
int
icebp
lock
push
stos
icebp
jo
sub
sub
mov
dec
xchg
cwtl
ret
push
push
sbb
aam
call
adc
in
mov
stos
insb
and
ja
in
rorl
push
popa
sbb
cmpsb
fprem
cmp
das
pop
addr16
gs
vpacksswb
and
cmpsl
pop
sbb
cmpsb
push
dec
dec
ret
es
clc
xchg
mov
lret
mov
and
daa
xor
fbld
lds
mov
inc
leave
xchg
sbb
xor
push
xchg
mov
inc
push
jl
mov
test
ret
hlt
adc
loopne
leave
popf
and
into
inc
mov
jmp
stos
ficomps
in
or
es
inc
lock
push
jbe
loope
adc
mov
fcompl
sti
sbb
inc
das
mov
and
aaa
dec
push
mov
adc
mov
and
sbb
sub
sbb
adc
jmp
jne
stos
cld
push
shlb
fstl
sub
cwtl
hlt
push
dec
out
sub
mov
sbb
add
sub
and
lahf
dec
stos
scas
jle
sub
inc
mov
cmp
mov
popa
mov
add
dec
mov
shlb
mov
ret
test
les
sbb
jecxz
jne
movsl
cmc
xor
jbe
outsl
xor
leave
ljmp
jnp
sbb
daa
xchg
out
inc
out
push
sti
rorb
sbb
repnz
or
mov
pop
adc
xchg
xchg
xor
add
idivb
aaa
hlt
xor
mov
dec
cmp
movsl
daa
lds
jecxz
xchg
fscale
loope
mov
call
outsb
adc
ljmp
aad
mov
or
mov
and
daa
jge
ljmp
pop
mov
test
cmp
andl
movsl
in
loope
sbb
cmc
fsubl
pop
dec
fsubrs
xchg
movsb
sbb
mov
fsts
arpl
lods
mov
popa
scas
cli
cmp
nop
adc
jp
lods
or
bound
fcmovnbe
push
or
and
push
in
cmpsb
sub
push
mov
jmp
andl
mov
add
out
jae
out
pop
outsb
popa
xchg
mov
jle
add
sysenter
inc
sub
xchg
dec
lret
or
dec
ss
hlt
and
jo
addb
outsb
push
and
ret
sub
xchg
add
xlat
add
scas
repz
rcrl
aas
nop
mov
aad
dec
dec
roll
loope
inc
lcall
or
sbb
loop
add
sbb
sub
repnz
xor
sub
les
dec
sbb
mov
in
cmp
mov
mov
xchg
dec
fldenv
sub
stos
inc
push
or
xchg
scas
mov
sub
mov
and
lds
mov
call
ljmp
outsb
lcall
or
clc
aas
inc
push
mov
mov
fdivl
jne
mov
mov
mov
in
shrb
xlat
lods
imul
mov
mov
add
fisttpl
mov
sbb
fstpt
lock
out
scas
pushl
xchg
and
sub
inc
stos
in
mov
xchg
adc
in
inc
pop
cmp
in
shrb
push
pop
fidivs
pushf
inc
aaa
mov
shll
cmp
xor
or
and
loope
outsb
fmull
enter
pop
adc
or
pop
enter
std
mov
aaa
out
pop
mov
stos
inc
push
push
call
out
lods
lcall
fldcw
cmp
andl
jg
lahf
std
mov
add
ffreep
jge
adc
adcb
xlat
mov
test
jns
mov
lods
sbb
clc
js
lea
ret
cli
inc
pop
add
mov
dec
dec
inc
mov
cmpsb
jbe
fisttpl
jg
fcomps
xchg
add
jno
lods
mov
cmp
sub
mov
jae
cmp
sub
ljmp
xlat
jl
js
sub
in
fildl
into
sub
dec
lds
nop
mov
xor
adc
inc
je
cmp
sbb
rcl
bound
sub
cmp
xchg
mov
mov
jae
and
mov
in
mov
xlat
pop
in
mov
xor
in
repnz
repz
into
jecxz
mov
inc
in
out
pop
es
lea
shlb
jg
fistpl
std
dec
mov
cmp
fiaddl
mov
push
push
xor
mov
mov
call
imul
mov
es
fsubl
or
lock
and
push
pushf
mov
addr16
test
inc
push
cltd
sti
mov
jmp
xchg
in
mov
sbb
mov
mov
xor
daa
pop
repz
rolb
inc
push
jbe
xor
sub
xlat
jmp
rcl
cmpsb
mov
addr16
out
cmp
sub
lret
loop
int
cmp
mov
and
sahf
add
pop
adc
fs
pushf
movsb
pop
inc
stos
fisubrl
cmpsl
and
xchg
and
mulb
cs
lds
insb
push
mov
jge
jae
rolb
jg
lret
jae
jmp
pop
orb
rclb
inc
loop
push
outsb
mov
jg
daa
sahf
movsb
xchg
rcll
pop
sahf
jne
dec
mov
jb
fdivs
and
icebp
jno
hlt
lret
add
mov
push
inc
jne
xchg
push
push
add
pop
stc
fisubl
mov
or
jne
das
fsts
or
jns
inc
lds
cmp
or
mov
mov
xor
jae
dec
sub
decl
jbe
mov
lds
btc
cmp
mov
mov
push
pop
and
push
inc
dec
aas
push
jb
mov
fs
sub
push
add
cli
sbb
adc
adcl
insb
nop
loope
and
pop
idiv
mov
btcl
fisttpll
push
sahf
aad
divb
adc
jmp
mov
pavgb
push
not
push
pop
imul
pop
push
js
mov
mov
jp
int3
jmp
lahf
sbb
lods
in
int
repnz
in
mov
aad
mov
stc
cmp
fistpl
insl
xchg
push
mov
sub
ja
mov
mov
mov
insl
cmp
xchg
xor
fs
add
pop
jg
out
filds
fwait
sti
js
mov
jne
and
jmp
or
scas
mov
mov
xchg
es
jno
push
pop
or
repnz
jmp
andl
mov
inc
lock
outsl
mov
xchg
pop
and
ficoml
mov
mov
hlt
jns
cmpl
int
jb
cmpsl
xor
push
test
stos
lret
ss
out
cltd
out
into
repnz
lahf
cmc
mov
rcrb
inc
or
aad
daa
cmp
in
in
jmp
mov
jle
test
push
push
outsb
insb
lock
mov
scas
xchg
lcall
je
shrb
or
xor
je
mov
or
xchg
adc
push
hlt
pusha
jae
into
inc
mov
mov
push
cmp
pop
jnp
scas
fldenv
jge
pop
fstpt
sbb
sub
adc
out
jg
pop
dec
movl
cwtl
mov
jb
pop
sub
and
jle
and
imull
stc
inc
clc
lds
std
add
pop
sbb
mov
leave
mov
fsubrs
in
das
mov
insl
lret
dec
xchg
cmpsl
out
int
jae
pop
lret
inc
mov
repz
ljmp
sub
sub
sub
pop
in
mov
pop
lahf
sub
push
and
inc
or
dec
sub
xlat
xor
cwtl
xbegin
push
inc
mov
out
xchg
jecxz
or
lahf
scas
jecxz
mov
fsub
pop
push
rcll
cld
imul
jmp
out
aas
jno
or
into
push
into
inc
mov
loop
pop
xor
push
rcll
or
cmp
cmp
and
sbb
cli
loop
and
push
mov
in
aas
jge
xor
add
pop
jne
mov
das
jnp
ss
adc
or
add
inc
test
ds
dec
out
shrl
push
cmc
fbstp
xchg
push
leave
scas
jns
mov
xchg
dec
pop
and
fdivs
scas
jns
inc
push
mov
lea
lods
mov
or
shlb
or
cmp
xchg
mov
pop
aad
dec
pop
into
pusha
jp
and
les
rcl
inc
pop
sbb
pop
popf
mov
scas
sub
gs
icebp
mov
push
push
icebp
xchg
add
cmp
dec
sbb
mov
fistpl
inc
scas
jbe
jle
fstpl
into
rcrb
mov
jbe
fs
in
sub
imul
addr16
mov
jp
adc
ja
or
sub
xor
xor
outsb
lahf
mov
movsl
adc
add
and
mov
leave
addr16
jb
dec
push
pop
mov
paddusw
jnp
jo
sbb
pop
mov
dec
add
mov
xor
cld
iret
daa
cmp
xchg
in
mov
lods
aam
aaa
mov
mov
mov
pop
push
enter
int3
flds
mov
pop
mov
add
cwtl
pusha
push
rcll
push
adc
pop
xchg
call
fmuls
out
movsl
test
subb
and
les
pop
ret
jno
lahf
inc
ret
sub
dec
pushf
sbb
jg
xchg
mov
add
lahf
dec
sub
add
icebp
jae
xchg
aas
inc
shld
inc
jge
dec
stos
aad
ja
das
int
cmpsb
jmp
ds
push
sub
push
push
test
xlat
push
sub
sbb
fs
jnp
inc
jne
mov
scas
add
xchg
fisubl
fcoml
mov
add
dec
mov
cs
push
mov
cmp
leave
sub
dec
sti
inc
pop
pop
in
sbb
dec
dec
push
loopne
je
sarl
jno
decb
jne
lahf
das
jo
repz
je
ja
jns
push
ret
jb
pop
sub
iret
cltd
and
shl
xchg
enter
cvtpi2ps
jnp
sbb
mov
dec
cltd
aam
push
pop
pop
add
mov
lds
int3
lret
aas
and
inc
pop
pop
addl
popf
jecxz
add
pop
cmpsb
pusha
fdivs
push
test
dec
or
iret
mov
push
lods
lea
mov
push
sub
lods
and
pushf
adc
rclb
int
jne
dec
movsl
ja
lahf
dec
icebp
sbb
cwtl
push
imul
jnp
or
inc
cmpxchg
cmpsl
jl
repnz
js
dec
mov
lcall
cli
cmp
sbb
test
into
insl
fwait
pop
xor
xlat
inc
mov
mov
scas
outsb
stos
ficompl
cmp
xor
fs
repnz
push
cmp
inc
jg
scas
xchg
sub
jo
xchg
or
bound
jle
out
mov
sbb
xor
fidivrl
and
std
fldl
fistl
jne
dec
scas
mov
pushf
add
aad
fisttps
fs
mov
mov
adc
jmp
pusha
pop
xor
loop
push
fcmovu
clc
lods
and
cmp
test
jo
and
jnp
xor
cmp
call
je
sub
mov
cli
dec
mov
rcll
cmp
icebp
and
xchg
mov
and
mov
imul
mov
dec
adc
in
push
enter
mov
xchg
mov
cmp
aad
jmp
mov
jmp
loopne
lods
push
popf
adc
push
int3
nop
cld
sub
hlt
outsl
aad
sahf
int
pop
out
fisttpl
mov
push
sbb
scas
loopne
testb
adc
outsl
lds
sarb
test
data16
push
mov
push
pop
je
loope
pop
movsb
sub
and
add
out
add
xor
hlt
pop
ja
add
add
ret
orb
cli
add
xchg
xor
and
cmp
dec
in
add
xchg
int
or
mov
nop
push
sbb
add
adc
das
cmpsl
fwait
push
mov
push
call
or
push
das
shll
mov
aaa
dec
cmp
ret
out
shlb
mov
adc
and
in
adc
sub
sahf
pop
jno
sbb
sub
in
ficoml
or
xor
inc
jmp
lcall
fwait
or
addl
or
scas
push
addr16
mov
sub
lret
sti
push
push
sbb
ds
mov
nop
mov
leave
cmpl
push
out
fists
sub
sub
cmp
fimull
jle
xor
movsl
out
xchg
inc
mov
popa
and
sarb
ja
or
fcmovbe
hlt
jno
rcll
cmp
pop
xchg
out
fsubrl
and
pop
mov
std
loop
xor
icebp
sub
mov
aam
div
mov
lea
jp
mov
int3
sarb
jnp
int
fisubrl
xchg
out
pmulhw
mov
fmul
mov
jo
std
cmc
and
sub
jb
cltd
xchg
sbb
mov
sbb
jbe
mov
xlat
push
pushf
cmpsl
mov
lea
mov
cli
loope
ja
dec
mov
xor
leave
les
outsb
or
std
xchg
and
mov
sub
arpl
es
std
add
and
jge
or
jns
fwait
dec
add
xor
enter
in
jle
sub
xchg
sbb
xchg
jl
cld
pop
negl
lock
in
xchg
and
aad
jae
frstor
pop
xor
mov
icebp
bound
jae
jmp
fcmovu
xchg
jb
cmp
mov
mov
shll
push
and
cmp
lds
cltd
jl
xlat
mov
inc
mov
mov
mov
jmp
scas
jg
inc
jb
xor
nop
mov
mov
out
mov
nop
cmpsb
sbb
sbb
ret
fwait
xchg
push
pop
rcr
sti
mov
pusha
sti
push
icebp
push
xchg
cmp
cmp
xor
mov
pusha
inc
and
push
fdivl
mov
std
cltd
lahf
std
mov
pop
in
xor
call
ret
ror
pop
fucom
pop
pop
mov
mov
or
push
push
pop
testl
shll
xor
lret
mov
mov
addr16
outsb
mov
cmpsb
pop
loope
frstor
xchg
lock
insl
addr16
inc
xchg
mov
dec
and
pop
pop
test
push
lcall
mov
inc
dec
mov
mov
jle
jbe
add
xor
call
scas
add
mov
adc
adc
aad
push
flds
jnp
test
dec
xor
int
fcoms
xchg
outsb
decl
cmp
inc
dec
mov
mov
lods
xor
in
fcompl
hlt
lock
sub
xlat
cs
pushf
dec
clc
nop
mov
mov
sbb
js
mov
xor
lods
pushl
xchg
scas
mov
xor
ss
cld
cmp
xchg
popl
repz
push
sub
sub
icebp
jecxz
and
test
ljmp
sbb
jno
sbbb
mov
xor
out
jmp
enter
mov
mov
aaa
xlat
call
add
mov
cwtl
loop
pop
or
xor
sub
sub
mov
hlt
sbb
mov
ljmp
in
sahf
cs
repnz
jecxz
addr16
iret
lods
and
sbb
iret
jb
int3
push
fldcw
dec
test
push
addr16
push
popf
mov
aad
rcr
mov
mov
xorb
push
sub
pop
xchg
mov
adc
stc
pop
xchg
scas
cmp
push
loopne
gs
dec
push
sbb
push
pop
dec
mov
xor
int3
out
xchg
xchg
sbb
lret
xor
nop
fcoms
sbb
pop
ret
add
aad
adc
jns
mov
cmp
add
sub
push
jg
sbb
stos
outsl
in
outsb
mov
das
clc
push
fwait
or
jle
mov
push
cmp
fistpll
ja
repz
cld
xchg
movb
jge
aaa
add
sbb
push
punpckhwd
ljmp
fidivs
pop
and
pop
sub
mov
int3
jmp
daa
test
pop
out
push
cmp
pop
sbb
mov
pop
inc
mov
iret
stos
insl
fistpll
xor
pmaxsw
fcomps
js
arpl
mov
mov
jo
cmp
adc
and
data16
das
xorb
int3
add
jne
les
fistpll
push
aam
mov
outsl
rolb
cltd
xor
out
mov
icebp
add
in
mov
fbld
push
daa
xchg
pop
mov
bound
mov
das
test
imul
add
cwtl
in
cmp
jb
xchg
mov
xchg
movsl
sahf
mov
dec
movsl
mov
movsl
clc
in
dec
jge
add
mov
or
nop
jle
sti
sbb
fnstcw
test
lret
push
hlt
mov
xchg
mov
or
xor
lret
lock
divb
test
mov
sub
fs
add
cmp
lds
sbbl
aad
add
test
jl
jbe
lock
mov
mov
leave
adc
and
mov
xchg
fisubl
push
fdivrp
negl
mov
out
rcl
mov
dec
xor
imulb
push
pop
int3
xchg
add
or
lret
ficoms
cmp
pop
shll
rep
loope
sub
js
popa
pslld
xchg
pusha
ja
mov
mov
sbb
push
jmp
pop
int
and
dec
flds
shlb
popa
movsl
rorb
idivl
in
and
dec
into
cli
push
out
mov
cld
push
andl
test
cmp
in
adcb
mov
inc
ss
repz
pop
bound
xchg
cmp
add
imul
xor
add
int3
fsubl
mov
nop
sub
into
pop
pop
sti
pop
in
xchg
mov
inc
sbb
sbb
xor
cmp
add
cmpsl
mov
jp
dec
jge
jns
enter
fs
iret
dec
mov
std
in
mov
push
test
push
add
pusha
sbb
mov
adc
data16
insb
and
dec
test
orl
int3
data16
addr16
push
mov
int
pop
and
orb
loopne
sbb
dec
mov
push
fistps
xchg
xchg
aam
push
jmp
leave
xor
pop
lcall
and
sub
fldenvs
nop
imul
xchg
nop
jge
jbe
insb
insb
dec
cmpsb
push
xor
inc
data16
fisttpll
sbb
mov
nop
sub
sarb
clc
inc
xlat
cmp
mov
mov
movsl
push
inc
dec
ljmp
cltd
or
in
inc
hlt
cltd
pcmpgtd
inc
sub
loopne
and
xor
mov
xor
and
mov
push
mov
push
mov
mov
sub
mov
xchg
ret
jle
test
push
cltd
loop
adc
daa
inc
push
mov
imul
inc
jge
nop
sub
xchg
push
stos
xor
sar
xchg
leave
inc
pop
in
loopne
push
sti
repz
push
aaa
cmp
scas
repz
cwtl
inc
hlt
pusha
enter
cmpl
adc
xor
arpl
and
mov
jne
jg
inc
subl
int3
adc
je
inc
cmp
test
sbb
gs
sub
jle
xchg
dec
add
push
xchg
mov
jecxz
or
jae
pop
sahf
or
cmp
add
sub
and
cmpsb
adc
mov
xor
dec
xor
adcb
lcall
stos
mov
mov
hlt
xchg
shll
mov
aaa
mov
adc
mov
push
inc
fstl
sub
icebp
sub
in
mov
xchg
xor
pop
lcall
cmp
loop
cmp
mov
test
movl
sub
pop
push
sub
dec
and
scas
inc
mov
lock
xchg
fmull
movsl
cltd
push
sub
push
and
imul
cmpsl
jns
fsubs
imul
movsb
repnz
push
lret
sub
cmp
lret
test
dec
fsub
xchg
xor
inc
mov
fidivl
fwait
mov
sbb
push
fstpt
sbb
xor
cmp
and
ret
xchg
cmp
rolb
jecxz
rcrb
out
sahf
fsubrs
ret
inc
dec
mov
push
mov
sti
call
add
or
mov
ds
mov
dec
shll
push
aam
adcb
out
insb
jmp
sub
inc
dec
adc
dec
xchg
jle
jb
sti
lea
scas
pmaxsw
popf
push
mov
mov
dec
scas
fistpl
add
dec
dec
xor
fnstsw
jae
push
push
mov
xchg
movsl
cmp
inc
cmpsl
aam
xor
sbb
es
cmp
js
inc
nop
add
lods
or
cmp
xchg
cmc
lcall
es
mov
pop
xchg
imul
mov
bound
fsubrs
lcall
mov
mov
dec
pop
arpl
xor
out
xor
push
and
cmp
lods
push
mov
inc
lods
subb
flds
pop
mov
imul
push
mov
ljmp
loop
add
xchg
mov
sarl
pop
mov
mov
je
push
ss
movhps
rcrl
loope
cwtl
xchg
dec
fsubl
push
fstpt
xor
push
out
jo
inc
and
adc
data16
shll
sahf
jecxz
out
ds
mov
push
or
sub
call
out
xchg
xchg
mov
lret
sub
arpl
mov
and
addr16
js
sbb
movsb
mov
adc
aam
jae
and
mov
sbb
mov
xor
mov
sbb
icebp
xchg
in
daa
cli
je
sbb
shl
inc
add
mov
ja
cmp
ror
insl
cmp
cmpxchg
mov
gs
add
or
push
dec
popf
pop
daa
mov
rcll
jecxz
cmp
movsl
mov
inc
rorb
ljmp
fsub
mov
aad
aas
sub
pusha
cmp
xor
pop
in
cmp
jno
dec
jno
out
pop
imul
inc
mov
lahf
std
rcr
cwtl
and
xchg
sub
pop
inc
push
jae
ja
cmp
mov
sahf
mov
jecxz
add
xor
mov
inc
sbb
in
divl
sbb
dec
xchg
sub
je
and
push
fidivl
xor
cmp
push
lcall
lock
mov
shlb
add
imul
sub
mov
inc
xor
insl
dec
cmp
pop
mov
and
inc
or
sub
mov
jl
adc
sti
stc
dec
mov
nop
adc
cmc
test
shll
cmp
imul
inc
xchg
movsl
rolb
xchg
and
lods
xchg
scas
adcl
es
xchg
push
jmp
mov
cmpl
lds
push
pop
mov
cmp
inc
fcoml
outsb
xor
mov
les
adc
or
loope
cwtl
or
mov
sahf
mov
jns
mull
jmp
cmp
push
rcll
cmp
mov
mov
loope
aas
enter
int3
sbb
pop
test
hlt
push
sub
lods
hlt
shl
jl
and
movsl
iret
jge
addr16
js
into
inc
xchg
jl
inc
into
outsl
movsb
cltd
inc
rclb
push
dec
in
je
fndisi(8087
xchg
cs
sar
leave
mov
movsb
sub
pop
push
xchg
stc
clc
fcompl
pop
lret
js
fisttps
push
loope
pop
das
jge
jg
cmpl
jge
sahf
ljmp
rcll
in
adc
or
adc
cmp
shll
scas
mov
xor
rcl
xchg
dec
cmp
xchg
cmc
cmp
mov
js
jo
cmpsb
sub
add
mov
shlb
xchg
inc
dec
xchg
add
push
and
and
lock
call
popf
push
mov
and
stos
mov
das
cmc
adc
lock
aaa
adc
out
cmpsl
or
add
loope
inc
scas
push
cmp
adc
hlt
shlb
pop
fistps
mov
jl
mov
aad
push
push
dec
popf
jo
aaa
mov
cmpsl
jl
lcall
or
cmp
and
repnz
mov
dec
out
iret
sbb
pop
push
mov
rorl
sahf
into
or
push
out
cmc
mov
mov
inc
and
rcrl
or
out
addl
enter
xor
imulb
sbb
addl
sbb
sub
shll
mov
pop
imull
jle
add
push
fsubr
sahf
pop
ucomiss
cli
xchg
mov
cltd
pop
or
lahf
idivl
mov
enter
leave
insb
scas
dec
movsl
or
leave
and
adc
mov
sbb
and
xchg
jmp
push
fs
and
cvtpi2ps
push
xchg
movsl
mov
ds
test
mov
xchg
rolb
xchg
xor
nop
pop
scas
popf
push
test
stc
sti
xchg
dec
pop
scas
cmp
jp
cmp
xor
pop
in
xor
cmpsl
cmp
adc
inc
decb
repz
and
push
dec
inc
ljmp
sub
bound
mov
sub
fists
cld
stos
and
jmp
insb
gs
repz
dec
mov
mov
adc
rcpps
jns
mov
mov
lret
fs
mov
and
cmc
add
mov
pop
pop
rcrb
mov
dec
je
dec
stos
hlt
xor
mov
mov
stc
mov
mov
sti
jno
lcall
sbb
dec
addr16
shrb
je
jae
adc
jbe
shlb
and
cmp
mov
ja
movsb
movsb
popa
das
sbb
stc
sbb
cmp
loope
lea
mov
fs
jge
cmp
movsl
sub
pop
dec
cs
lcall
pop
push
cmp
dec
ficompl
clc
stos
or
lahf
rcr
pusha
dec
sbb
in
les
cmp
mov
adc
inc
mov
jge
ret
testl
jl
in
addr16
loopne
mov
orb
imul
repz
or
jmp
inc
aad
cmp
pusha
fdivrs
push
clc
scas
inc
lock
cmpsl
lds
jb
jg
add
lods
dec
jnp
inc
cmpsl
das
jnp
in
outsb
cwtl
pop
cmpsb
cmp
mov
loope
push
pop
mov
jmp
cld
mov
addr16
out
ret
out
scas
jo
loope
xor
fwait
mov
jmp
sub
or
pop
mov
scas
jbe
out
or
shrl
mov
sti
jb
loop
loop
rol
leave
dec
mov
les
int
mov
cld
fs
pop
lcall
mov
ljmp
or
push
and
jecxz
push
roll
xchg
int
mov
popf
nop
stos
inc
push
pop
adc
aam
in
inc
rcll
mov
adc
popa
push
and
adc
dec
inc
jmp
imul
bound
sub
orl
ret
sti
push
or
gs
repz
or
mov
or
mov
cmpsb
pop
push
lds
roll
sarl
sbb
cmc
feni(8087
cmp
aas
decb
popa
arpl
popf
push
fstl
out
push
out
hlt
jns
cli
mov
dec
loope
ret
std
mov
xlat
pop
lods
loopne
add
pop
sarb
push
dec
das
in
lods
sti
dec
ljmp
add
shll
ror
xor
scas
xchg
pushf
pop
cli
cmp
xchg
jl
push
ja
fdivrl
js
pop
adc
outsl
inc
cmc
arpl
adc
je
test
dec
jle
xchg
std
jmp
xchg
sub
daa
ror
xchg
xor
aad
dec
out
fsubrs
popa
sbb
jge
out
cld
mov
mov
sub
cs
jg
xchg
sbb
pop
xor
shrb
fcomi
and
dec
call
jns
cmp
dec
fcomip
fmul
enter
cmp
out
int
jle
sahf
test
fbstp
push
pop
lock
jge
cwtl
orl
scas
adc
cmp
sarl
cmp
push
sldt
cmpb
ja
out
dec
adc
in
or
movsl
mov
jle
sub
lock
enter
inc
push
adc
movsb
jnp
cmp
mov
enter
dec
stc
imul
xchg
insl
sbb
sbb
adc
stos
xor
rclb
mov
loopne
push
je
gs
sbb
lods
and
loopne
aad
mov
sbbb
cmp
arpl
jnp
cwtl
push
lahf
and
lret
scas
pushf
call
sub
xchg
fstpt
lcall
mov
cmpsb
test
movsl
bound
sub
push
sbb
push
xor
push
jno
test
mov
notb
and
mov
and
rolb
arpl
cltd
arpl
jb
fdivrl
inc
out
imul
push
pop
and
push
sbb
inc
inc
scas
add
xor
mov
cmp
xchg
lea
or
inc
test
jo
test
adc
xor
adc
xchg
pop
fcos
xor
lds
push
adc
pop
inc
bound
xor
out
enter
xchg
add
mov
test
movsb
pop
fisubrs
rclb
ljmp
lret
sbb
mov
mov
mov
ficoms
arpl
adc
cs
hlt
and
rcl
pop
addr16
enter
bound
out
sbb
imul
inc
pop
sbb
lret
mov
push
stos
cmp
inc
sbb
aam
loope
lods
les
sub
pusha
lahf
xor
xchg
mov
sbb
lahf
add
jecxz
add
mov
jo
pop
pushf
pop
sbb
push
in
mov
leave
loop
push
ud2
pop
shll
mov
jae
push
pop
jbe
data16
std
cs
inc
jmp
lock
inc
mov
mov
in
data16
add
xor
imul
scas
test
rcll
clc
sarl
stc
push
pusha
pop
xchg
jl
lea
mov
mov
mov
divb
and
pop
inc
leave
xorb
rolb
jmp
push
in
sub
dec
dec
loope
imul
out
mov
shll
test
cmc
jmp
xor
cmpsl
xchg
adc
stc
and
sub
adc
daa
jle
aam
mov
out
pushf
xchg
insb
test
dec
lea
into
jno
sti
push
jecxz
lods
imul
dec
or
xor
outsb
sub
mov
ja
inc
xchg
jle
imul
sbb
lods
sbb
sarb
stc
add
aad
adc
sbb
outsl
mov
pop
mov
or
lods
pop
xchg
decl
jle
addr16
int
push
sbb
mov
xor
mov
test
xor
xor
dec
mov
cltd
mov
and
stos
sub
fidivrs
mov
aam
or
ljmp
sbb
dec
loopne
jg
inc
mov
loopne
fdivl
push
and
xchg
push
in
dec
inc
or
cltd
sub
pop
mov
loop
shlb
fildll
inc
pushf
enter
add
call
ds
mov
insl
xchg
jmp
aaa
cmp
jge
outsb
pushf
aad
xchg
lea
mov
movsb
push
ret
cmp
mov
sub
fnstsw
shrb
lret
fisubl
push
sbb
jge
in
sbb
test
jae
cmpsl
sahf
sub
leave
frndint
pop
and
inc
xchg
add
iret
mov
jl
push
inc
or
insl
loope
jmp
jp
jo
inc
cli
scas
rcrl
in
scas
sbb
lods
pop
cld
sti
pop
jo
out
add
clc
ret
ds
aaa
dec
aaa
jge
repnz
or
xchg
cmp
pusha
jns
sti
cmp
cmp
dec
and
xor
jl
inc
cmp
or
dec
jge
cmp
xor
lds
dec
inc
scas
sbbb
push
orl
movsl
pushf
cmpl
aam
and
test
add
adc
inc
lahf
or
cmpsb
mov
dec
stos
mov
stos
mov
mov
jae
loop
cmp
add
outsl
push
add
nop
imul
xor
xor
mov
in
fidivrl
jbe
mov
and
dec
jg
xchg
push
cmp
stos
adc
xchg
mov
jmp
ficompl
cmp
fs
pop
add
sub
xlat
inc
pop
and
pop
cwtl
cmp
loopne
or
shl
subb
sbb
dec
mov
ret
aam
movsl
lcall
iret
shrl
das
test
dec
sbb
movsl
sbb
jns
sbb
popa
cmp
and
cltd
fsub
jns
add
imul
or
mov
xor
es
sub
sub
mov
xlat
push
push
stc
lods
push
fcmovnb
inc
pusha
jp
and
adc
pop
fidivl
sbb
inc
adc
aad
pop
pop
es
push
adc
or
or
iret
clc
pop
inc
lock
test
mov
fwait
mov
dec
mov
inc
dec
cltd
in
mov
icebp
push
inc
cmp
dec
pop
fists
push
insb
outsl
mov
mov
push
push
jle
jb
das
in
mov
xorl
loope
xor
lahf
nop
mov
faddl
lods
lds
adc
pop
scas
and
mov
or
xrelease
fcomps
cli
xchg
test
dec
jne
out
cmp
out
add
or
add
mov
push
orl
daa
fwait
gs
inc
pusha
push
outsl
gs
cmp
push
cmp
rclb
pop
test
mov
xor
outsl
inc
xor
jle
testl
repnz
push
xor
pushf
and
inc
mov
jne
push
mov
stos
adc
popf
add
adc
movsb
fildll
mov
imul
pushf
in
enter
or
in
insl
push
fidivs
add
popa
push
sarl
in
cmpb
pop
cwtl
sahf
je
push
adc
pop
xchg
dec
ljmp
imul
cli
sbb
ret
dec
inc
pop
es
cwtl
das
pop
push
cmp
pop
push
sbb
push
sub
xor
push
roll
jns
mov
or
in
push
xchg
xchg
jecxz
push
loope
stos
sub
aas
adcb
sub
fildl
fucomp
add
scas
add
inc
cwtl
sbb
icebp
nop
adc
and
xchg
push
adc
ss
test
jb
mov
movsb
pop
jge
and
iret
fcomps
pop
dec
mov
mov
adc
lds
mov
push
popf
mov
cmp
mov
mov
in
pushf
dec
inc
jb
xorb
out
scas
jmp
andb
xor
jp
push
ljmp
push
sbb
aas
rcl
ss
and
in
popa
push
call
cld
jo
pop
clc
les
jge
arpl
hlt
jmp
xor
frndint
pusha
aam
sub
inc
and
jo
xor
sbb
popf
rcl
out
push
hlt
insl
push
ret
inc
xchg
std
sbb
inc
shlb
in
xor
inc
adc
jle
mov
add
scas
mov
add
jne
xor
inc
stos
pop
in
inc
ljmp
dec
dec
data16
popf
and
mov
jge
cmp
imul
sub
movsb
push
jge
int
movsl
sbb
sbb
cmp
cmp
add
mov
ss
roll
add
pop
inc
jle
out
imul
dec
and
call
dec
nop
scas
jecxz
inc
mov
mov
xchg
divb
test
jo
fisubrl
add
stos
add
je
jg
popa
loopne
insl
leave
les
adc
outsl
ljmp
out
dec
sub
sub
inc
mov
dec
lahf
movb
fisttpll
and
mov
cmp
dec
in
es
push
enter
pop
into
ret
add
inc
int
sbb
mov
inc
nop
adc
jnp
jp
out
sahf
pop
sbb
fdivrs
jmp
or
sub
jg
sbb
and
mov
ljmp
nop
push
shrl
and
mov
std
push
test
popf
cmp
adc
xchg
xlat
adc
sarb
imul
js
jo
inc
sti
mov
ss
test
in
lods
sub
divb
fcmove
out
popf
xchg
fidivrs
sbb
mov
adc
fwait
pop
cmp
stos
mov
into
xchg
test
sbb
subb
xchg
pop
and
outsl
mulb
es
add
scas
xchg
fnstsw
jns
adc
sbb
dec
ds
mov
fwait
xchg
cltd
iret
out
adc
jecxz
data16
movb
push
mov
push
push
pop
pop
jp
imul
sbb
and
cmp
mov
push
popa
ds
pop
pop
sbb
lahf
adc
jg
or
jmp
and
fnstsw
cmp
inc
xchg
mov
push
fmuls
pop
cmp
arpl
stc
loopne
daa
xchg
mov
test
push
stos
test
inc
mov
push
jo
test
ja
xchg
push
xchg
mov
inc
adc
jecxz
mov
lea
fst
iret
jb
push
and
call
lods
mov
xchg
es
ljmp
push
daa
lret
lcall
in
mov
inc
jle
sbb
stc
ret
adc
mov
mov
sub
lds
cmp
jl
std
sti
cmpsb
mov
andb
inc
mov
mov
pop
adc
fisubs
in
testb
cmp
push
call
pop
fdivl
into
and
in
rclb
je
mov
fisttps
repnz
dec
dec
call
xlat
insb
addb
and
inc
xor
sub
mov
cwtl
jg
push
cmp
mov
frstor
mov
lods
jmp
jp
je
je
popa
and
adc
jle
adc
cwtl
xchg
test
sub
hlt
out
and
repz
xchg
dec
dec
and
cld
out
dec
jmp
xchg
dec
fcoms
je
xchg
movsb
cmpsb
adc
dec
out
lds
aad
pop
sub
fadds
daa
test
into
dec
inc
push
xor
jae
add
sarb
mov
add
aas
cs
leave
push
subb
addb
push
or
fsubs
test
jp
cmp
sub
movsl
or
stc
mov
cmp
inc
sarl
push
adc
jnp
cmpsb
test
in
pop
in
mov
adcl
mov
mov
insb
insl
loope
subb
cmp
add
add
subb
ffreep
clc
insb
sub
sbb
cmp
stc
dec
xchg
daa
scas
lods
mov
sbb
push
pushf
add
push
dec
popa
jne
ret
outsl
jo
xor
icebp
clc
scas
loope
push
ss
imul
and
mov
into
daa
adc
fucomp
lea
imul
std
inc
xchg
lods
jp
shr
cmp
pop
sbb
lods
icebp
xchg
stos
gs
sti
mov
cmp
mov
jns
aas
lds
lods
cmp
lods
add
insl
cld
jns
adc
popa
ja
popf
std
fsubrs
int3
sti
adc
adc
sarb
test
inc
rcr
mov
jno
inc
pop
cmc
add
fildl
and
in
mov
cmpsl
adc
mov
lock
jo
pushf
mov
test
jno
es
or
xlat
pop
repnz
sub
add
mov
repz
xchg
push
or
in
fildll
mov
mov
iret
xchg
in
mov
nop
orl
xor
cwtl
or
ljmp
push
add
pop
inc
sub
sub
add
push
mov
sub
xchg
imul
imul
push
div
xchg
ret
inc
push
sub
mov
adc
and
out
xorb
adc
mov
jae
sub
sbb
adc
nop
imul
cmp
mov
ret
stos
xor
mov
mov
pusha
add
jae
je
or
ja
mov
test
leave
jl
pop
sysexit
arpl
inc
adc
outsl
pop
arpl
sbb
inc
arpl
inc
cmp
test
xchg
aam
int
add
aaa
adc
mov
adc
and
mov
subl
lret
cmpsb
mov
push
fisubl
sub
adc
in
or
inc
add
clc
sub
or
hlt
mov
push
push
das
daa
stos
dec
add
iret
fmuls
fisttpl
test
sub
rorb
inc
int
cltd
pop
pop
cmc
jns
add
mov
cltd
int
movsl
fldt
clc
jg
mov
inc
scas
and
cmp
inc
imulb
fsubl
jmp
ja
pop
leave
cmp
cli
adc
notb
icebp
sbb
fists
std
sbb
mov
pop
int
mov
pop
mov
add
lret
push
ret
pop
enter
xor
iret
inc
in
sbb
mov
xor
shlb
add
std
out
lods
xor
mov
sub
lahf
xor
cld
orl
jbe
cld
mov
pop
push
cmc
mov
test
leave
insb
jo
sbb
in
mov
imul
jne
test
dec
out
cmp
lahf
in
and
ret
shll
inc
les
aam
xchg
dec
movsb
inc
nop
push
cmp
ficompl
xor
inc
push
aam
in
pop
jo
and
cmp
cmp
push
push
insl
dec
out
xor
lret
mov
jp
jnp
aam
in
xchg
push
push
les
int
add
lahf
adc
mov
sbb
mov
dec
addr16
fwait
xchg
jnp
inc
out
sub
sub
mov
fisttpl
stos
in
mov
not
inc
mov
bound
push
adc
mov
cmp
and
cmpsb
rcrb
in
xchg
fdivrs
dec
sub
nop
int3
mov
and
lret
mov
or
mov
lods
cmc
pushf
inc
or
inc
dec
fwait
push
mov
or
out
xor
loope
mov
or
add
ds
sub
xor
mov
dec
inc
mov
fcoml
adc
push
stc
lods
mov
xor
mov
rcl
sub
leave
dec
movsl
adc
xchg
and
jo
inc
inc
fisttps
jns
mov
popa
ret
cmpl
jle
push
das
notb
dec
inc
push
or
jae
lret
pop
insb
lods
adc
jne
orb
jmp
pop
cmp
mov
cmc
mov
loope
inc
ja
mov
mov
popf
xchg
mov
cmpsl
jmp
jg
mov
lock
push
daa
loopne,pt
cmp
pop
stos
xchg
xor
loope
mov
mov
leave
pushf
cli
iret
mov
cmp
stos
pop
pop
sbb
mov
and
push
jecxz
std
or
mov
sbb
shrl
xchg
mov
cmp
add
fisttpll
loope
and
pushf
mov
xlat
sub
add
lods
ret
pop
sub
push
popf
and
into
add
idiv
xor
loop
jp
add
jb
bound
or
xchg
add
cwtl
cmp
loope
dec
xchg
test
andl
sbb
adc
cld
xchg
or
ss
daa
adc
rcrl
ja
shl
std
cwtl
jns
and
cld
xor
adc
clc
lods
movsb
jbe
std
mov
xchg
cmp
dec
or
enter
gs
add
in
sub
add
lcall
xchg
sti
xchg
pop
mov
jnp
pop
push
pop
xchg
pusha
ret
cmp
xchg
loop
nop
sbb
xchg
andl
int3
flds
pop
cld
call
push
movsl
rcr
stos
mul
sti
lods
and
in
and
xchg
inc
adc
cmp
popa
ficomps
stos
iret
int
fimuls
sbb
xchg
mov
loopne
xor
mov
cs
ja
into
fisttpll
dec
movsb
xchg
xor
sbb
push
inc
imul
sti
mov
aad
mov
push
add
rclb
daa
jl
or
jbe
mov
dec
aam
xchg
mov
cwtl
inc
arpl
sub
mov
push
cmp
xor
movsl
or
add
ss
insb
lods
xlat
arpl
jl
in
es
ret
dec
mov
jl
pop
mov
pop
sbb
adc
mov
lods
mov
cs
push
or
jge
push
js
dec
lret
cmp
pop
insl
xchg
mov
sub
jnp
xchg
setno
jecxz
add
mov
add
pop
popf
imul
jnp
or
push
add
mov
sbb
jp
std
add
cmp
jne
pop
mov
cwtl
jns
mov
jmp
ficoms
mov
mov
insb
mov
push
xor
je
ljmp
scas
push
bound
push
xchg
pop
jmp
jge
xor
fildl
idiv
les
sub
or
jo
jns
loopne
loope
lds
jle
jmp
jbe
lahf
pushf
jne
push
fstp
mov
loop
enter
push
adc
lret
lods
mov
into
outsl
pop
cwtl
mov
cmp
xor
data16
and
mov
lock
out
enter
jns
push
cmp
aas
aas
xchg
in
xchg
ffreep
test
push
and
xchg
es
push
mov
imul
insl
pusha
cmp
loop
scas
lods
into
fistps
mov
mov
cs
mov
out
push
or
fwait
rclb
mov
ret
push
mov
jl
jns
pop
add
dec
scas
sbb
or
push
mov
fs
aas
lods
sub
and
lret
add
adc
data16
bound
adc
adc
cmp
jno
outsl
test
cmp
fdivrp
adc
ss
into
add
mov
pop
or
shll
adc
cmp
sub
add
mov
mov
testb
lcall
fisubl
and
cmpsl
adc
out
or
js
xchg
adc
pop
roll
sub
xorl
call
sbbb
dec
shll
and
jp
insl
add
dec
aam
mov
xor
push
mov
cmp
test
mov
xor
lret
pop
jns
push
cmp
inc
test
fiadds
push
mov
mov
popa
ret
mov
popf
inc
cli
dec
and
fbld
sbbl
or
arpl
cmp
mov
sub
mov
stos
test
or
xor
hlt
ret
mov
dec
mov
cmp
bnd
shll
test
lret
int
mov
ret
negb
xor
fs
lahf
mov
add
iret
add
add
lds
insl
ds
vmwrite
stos
fucomi
inc
pop
movaps
push
hlt
fwait
jg
sub
stos
insb
outsb
ja
fwait
jle
lea
mov
pop
stos
test
sub
loop
add
xchg
and
inc
pop
push
andl
scas
or
mov
xchg
popl
test
je
rol
mov
icebp
xchg
pushf
sub
dec
enter
or
dec
lea
imul
sub
mov
mov
in
inc
lahf
add
pop
scas
in
add
jns
adc
movsl
out
inc
int
fistpl
clc
out
sbb
outsb
dec
or
pop
je
mov
stos
in
push
pop
and
push
mov
cmpsb
mov
sub
xor
sti
and
sub
xlat
sub
sar
mov
je
xchg
sbb
jmp
inc
out
fildll
loop
test
fstpt
xchg
gs
lods
mov
nop
scas
iret
cmp
lods
or
jle
es
mov
inc
mov
shll
cmp
jl
or
push
add
std
inc
cmc
mov
mov
stc
ja
and
xor
xor
cmp
mov
or
add
ds
orl
or
mov
jno
cmp
icebp
repz
jnp
xlat
outsl
daa
jecxz
cs
xchg
in
ret
enter
sbb
test
lahf
pop
push
jl
cmpsb
js
jne
jl
mov
push
aam
sbb
xchg
xor
inc
xchg
js
sbb
mov
pusha
xlat
es
jp
cmpsl
shlb
in
push
ret
movsb
adc
daa
jbe
or
mov
iret
xchg
in
pop
outsb
scas
dec
fsubs
push
push
fs
mov
or
daa
aad
ljmp
sub
adc
lock
popa
addr16
mov
inc
push
add
xchg
out
mov
fstl
inc
sub
mov
lret
ss
pop
push
daa
xor
xor
das
jl
fwait
pop
int
sbb
inc
jge
pop
outsl
cltd
lea
scas
pop
sti
idivl
or
test
hlt
adc
movsb
inc
pusha
insl
sti
mov
leave
shl
xor
in
es
clc
test
dec
xor
inc
insl
add
mov
adc
xchg
xor
mov
jl
mov
lock
aad
imul
sub
popa
jge
lcall
icebp
adc
xor
stc
imul
add
int3
xor
push
pop
sbb
sub
jae
int
jno
cli
mov
stc
das
enter
sub
insl
sub
adc
test
and
cmp
pop
fldl
std
xor
pushw
cmpsl
lock
adc
outsl
mov
cwtl
repnz
mov
or
fdivrp
test
jne
push
hlt
mov
in
mov
sbb
xchg
xchg
cmpsb
adc
sub
inc
addb
hlt
push
add
xchg
loop
lea
shrb
push
call
adc
popa
or
scas
xor
arpl
and
les
mov
sbb
or
pop
stos
shrb
es
lods
jecxz
xchg
cmp
jle
mov
icebp
cmp
js,pn
in
repnz
enter
pop
cmpsb
dec
das
and
jle
leave
data16
pop
mov
hlt
sbb
outsl
push
or
pop
stos
xchg
mov
fadds
jns
test
negb
adcl
jo
xor
xor
repnz
ss
out
mov
xchg
mov
inc
pusha
sub
cwtl
mov
mov
jmpw
jg
in
jg
inc
cs
lock
roll
mov
xor
lock
and
mov
imul
test
subb
and
mov
insb
loope
scas
imul
pop
sub
or
sbbl
or
rcrl
outsl
mov
sub
es
leave
sahf
loop
xor
mov
push
repz
xlat
cmp
insl
dec
cs
mov
sub
dec
sahf
lods
xchg
aas
rcpps
nop
ficoms
aam
fwait
lcall
lret
pop
sbb
push
sbb
xor
sbb
pushf
jnp
xor
sub
lods
mov
loope
adc
jp
xchg
cmp
incl
daa
rclb
sbb
out
mov
adc
push
outsb
enter
push
jne
mov
rcrb
mov
fwait
in
test
sbb
cltd
dec
jl
mulb
pushf
hlt
enter
xchg
iret
aad
test
in
and
aad
jge
outsb
jl
or
inc
shlb
lock
sbb
jmp
inc
jl
mov
dec
iret
jae
or
push
notl
int3
adc
sahf
mov
and
push
sarl
loopne
add
jl
sbb
das
int
push
adc
or
ljmp
inc
cmp
and
xchg
pop
ds
dec
jp
xchg
nop
cmp
and
mul
sub
std
mov
sub
daa
xchg
mov
lds
pop
in
or
lods
mov
inc
pop
cwtl
mov
lea
mov
adcl
out
xor
shlb
sbb
adc
mov
je
dec
das
nop
test
lds
stc
mov
jae
sti
xchg
jecxz
adc
fwait
mov
jo
mov
ja
lret
sahf
ret
out
ja
mov
mov
sub
clc
aam
fcom
mov
andl
mov
sti
ja
xchg
mov
lret
es
aam
jle
xchg
mov
pop
insb
sarb
mov
out
rcl
int
ficoms
cwtl
and
cmp
xchg
lods
mov
mov
lds
jmp
mov
adc
hlt
sbb
sub
push
pushf
and
mov
data16
lret
mov
outsl
sbb
insl
fildl
popa
outsl
jle
addr16
fidivrs
pop
nop
or
jo
nop
or
out
mov
roll
dec
arpl
rcl
mov
or
adc
mov
les
jl
sbb
into
jg
and
pop
mov
cmp
hlt
xor
inc
dec
dec
ret
xchg
xor
xchg
dec
rcrb
bound
inc
bound
jmp
andl
fnstcw
push
ljmp
mov
or
dec
cs
leave
das
sbb
mov
lea
mov
inc
add
dec
dec
inc
jb
jo
out
sbb
push
addr16
ds
inc
sbb
cs
testl
fs
ficoml
mov
cmp
add
pusha
mov
arpl
repnz
push
xchg
and
sbb
mov
test
mov
pop
xor
lret
in
mov
and
inc
push
int3
fsubrl
dec
subl
dec
arpl
fbstp
jae
rol
sub
out
cwtl
movq
inc
ja
adc
stc
inc
jnp
sbb
jg
call
xchg
fwait
out
fcmovnbe
addr16
dec
xchg
adc
shlb
push
and
mov
inc
sti
xchg
incl
add
mov
push
xchg
icebp
dec
cmp
lea
js
aaa
mov
mov
daa
mov
std
leave
inc
out
je
cltd
mov
cs
test
mov
sbb
insl
sub
sbb
outsl
jns
jmp
into
and
mov
cmovle
lods
addl
mov
inc
mov
lcall
cli
lret
fwait
pop
popa
in
fsubrs
aas
into
cmp
jp
mov
scas
daa
mov
mov
cmp
pop
ficoms
icebp
ja
cmpb
or
xchg
fcomps
pop
xchg
test
lods
icebp
call
test
andl
lret
fucomip
and
xchg
sbb
iret
das
popa
push
pop
mov
mov
cmc
mov
cs
add
in
outsb
jbe
dec
in
mov
stos
aas
arpl
lods
pop
push
je
addr16
aam
into
xchg
sbb
push
and
test
repnz
xor
clc
dec
out
fsubs
add
das
addr16
lds
push
call
add
sti
iret
testl
rep
pop
mov
add
sbb
mov
stc
int
dec
into
popf
jl
std
xor
and
xor
fisubrs
frstor
test
or
adc
xor
jo
xor
pop
stos
mov
notl
stos
sub
loopne
mov
add
mov
mov
stc
mov
incb
pop
fcompl
sub
ret
ficompl
stos
pop
xchg
jp
gs
mov
js
aas
movsl
inc
scas
adc
aam
lds
lods
stc
lcall
xor
ficomps
jg
js
rcll
daa
shlb
das
out
dec
inc
daa
mov
sti
xchg
xchg
les
push
adc
addr16
lods
lea
pop
dec
sbb
stos
pop
mov
addr16
mov
mov
add
push
in
pop
push
rcll
repnz
add
pop
jb
call
cmp
and
stos
ss
ret
dec
idivb
addr16
xchg
insl
sbb
or
mov
jbe
and
sarl
jg
inc
push
fwait
xchg
fstpl
leave
rcl
icebp
iret
scas
clc
leave
je
pusha
or
sti
out
nop
mov
mov
xor
out
add
sbbl
and
jnp
jle
xchg
shrl
aas
arpl
mov
mov
cmc
mov
call
mov
lret
arpl
daa
cli
shl
jecxz
lcall
jg
out
push
pushf
or
jno
pop
and
cmp
out
out
sbb
pop
cmpsl
cmpsl
loope
sbb
cmp
mov
in
ret
out
or
jnp
lahf
jo
in
mov
lds
jae
dec
repnz
movsl
and
ss
cmpsl
aaa
jnp
xchg
jge
mov
sbb
jne
test
dec
inc
ss
push
pop
dec
scas
mov
cmpsl
stc
mov
lret
aam
mov
jbe
outsl
nop
jbe
or
fbstp
mov
adc
mov
inc
lods
das
jb
sub
das
insb
push
mov
pop
mov
sbb
add
mov
mov
xchg
mov
push
sbbl
adc
out
pop
dec
mov
nop
insb
lds
int3
lods
gs
mov
inc
lock
adc
jg
jb
pop
fwait
pop
and
outsl
imul
sbb
scas
mov
lds
vphaddbw
or
rcr
jno
sbb
xchg
push
push
sub
lret
out
sbb
ds
call
in
xor
sti
adc
cmp
mov
mov
add
mov
adc
aad
and
pushf
xchg
pop
xchg
or
pop
notb
dec
push
sub
and
push
cmp
icebp
push
jg
jp
xchg
sbb
mov
lahf
cltd
sahf
pusha
fnstsw
arpl
mov
hlt
fldl
repz
jmp
xchg
cmpsl
lcall
pop
xchg
movb
adc
sub
xchg
imull
into
not
lret
push
std
add
adcl
ja
pop
pop
push
xchg
out
gs
xchg
sbb
xchg
ds
popa
adc
inc
push
mov
pop
std
or
xor
mov
xchg
mov
inc
add
fmulp
ss
in
jo
fisubl
dec
dec
loop
inc
data16
xchg
cmp
ja
scas
pop
xchg
add
jnp
testb
addl
inc
and
jl
out
leave
xchg
push
jge
and
mov
repnz
inc
mov
and
mov
rolb
daa
and
add
mov
add
inc
dec
das
or
mov
pop
mov
fwait
insl
adc
cmp
add
add
adc
pop
push
dec
loopne
jbe
push
sbb
fsubl
insl
pop
mov
in
and
and
cltd
dec
dec
call
push
dec
test
mov
dec
lds
shrl
dec
xchg
mov
sub
iret
lcall
cmpsb
out
xor
adc
popf
inc
bound
sub
cmpl
jbe
inc
in
pusha
mov
js
enter
pop
sbb
dec
data16
push
gs
cmpsl
mov
and
outsl
sbb
lret
push
cmc
jae
jo
imul
fisttpl
in
stos
sub
mov
subl
jmp
insb
cmp
mov
mov
jo
and
enter
dec
in
mov
imul
push
ljmp
je
pop
adc
add
sarb
sbb
mov
mov
addr16
and
fdivs
or
mov
push
stc
dec
sarb
popa
lds
jle
push
cld
ljmp
add
xadd
fs
bswap
fcoml
push
cld
inc
cltd
dec
pusha
dec
mov
test
jmp
out
fwait
aam
push
je
bound
orl
dec
icebp
or
pop
lret
rcr
lods
xchg
pusha
push
push
loopne
dec
es
mov
lea
arpl
rcrb
and
lods
test
ror
push
add
sbb
push
inc
xchg
sarb
mov
int3
es
xor
sub
fwait
lods
aad
mov
mov
popa
xchg
test
inc
loope
ret
xor
iret
loope
xchg
repnz
stos
jecxz
jns
xor
fmuls
push
push
lods
ja
push
adc
clc
lods
cmp
sub
rol
fcomps
fs
jb
add
add
popf
mov
adc
arpl
aam
popa
and
or
inc
add
repnz
mov
xchg
xorb
das
adc
and
add
cmc
jo
xor
leave
outsl
in
add
loopne
mov
dec
scas
arpl
jecxz
fsubrp
cmp
mov
jae
fdivs
sub
inc
xor
push
push
loop
xor
and
fcoms
jp
adc
ja
stos
jb
int
out
sbb
and
xchg
arpl
cmc
inc
cli
adc
mov
push
push
or
stos
pop
cmc
jmp
addl
dec
cmpsl
xor
xchg
sbb
add
add
or
ret
ds
adc
xor
std
xchg
sarb
ljmp
dec
movsl
pop
sbb
gs
fcomip
rclb
lds
sarl
xchg
decb
popa
push
sti
fnstcw
mov
je
lea
and
sbbl
mov
xor
mov
aad
inc
outsb
jns
inc
sahf
pop
loop
js
cmp
inc
push
mov
inc
mov
push
bound
adc
in
jge
aam
filds
xchg
test
cmp
push
or
cmc
stos
and
inc
inc
aam
and
bound
imulb
popa
mov
mov
leave
lds
ds
dec
and
jecxz
mov
lods
cs
inc
rcrb
loope
in
push
push
rcr
or
roll
cmpsb
bound
enter
mov
cmp
push
mov
jle
or
js
outsl
jb
outsb
nop
sub
aaa
and
push
inc
dec
inc
xchg
loope
arpl
jne
cmpsl
jp
jnp
adc
jge
insb
cmpsb
lock
jp
lods
sti
push
xor
push
repnz
mov
inc
sbb
outsl
cli
mov
jo
out
cmp
cld
xchg
jnp
mov
mov
lret
pop
shll
out
cmpsb
in
jg
add
shl
js
ret
mov
cmpsl
out
loopne
into
or
rcl
outsl
lret
pop
mov
xor
add
dec
bound
xor
xor
ror
xor
hlt
mov
cmpsb
lcall
jno
clc
lahf
inc
pop
rcrl
sub
pushf
xchg
rcrl
test
pop
xchg
push
mov
in
mov
int3
jge
sbb
out
push
xor
mov
jg
cmp
pop
push
and
adc
or
adc
dec
lds
pop
bswap
cli
leave
fsub
pusha
adc
or
bound
lods
xor
mov
js
insl
dec
rolb
insl
ljmp
sti
jle
movsb
xor
fisttpl
add
push
xor
adc
out
dec
aas
pop
std
fstpt
sbb
push
mov
mov
xchg
cwtl
data16
stos
jecxz
test
mov
xchg
insb
shlb
clc
adc
out
repz
test
fs
sub
xor
aas
and
cmp
pushf
in
add
dec
dec
mov
sbb
cmp
pop
sub
pushf
cwtl
aad
rorb
test
rolb
dec
in
adc
imul
cs
and
push
dec
loope
lahf
cmp
xor
scas
sbb
xchg
repnz
mov
sbb
int3
sbb
sub
and
les
lret
out
pop
mov
adc
lret
nop
cs
xor
enter
test
xchg
and
lahf
pop
xchg
pop
out
jns
xor
leave
fadds
push
inc
jl
hlt
mov
mov
decl
pushf
sbb
movsb
xor
mov
dec
loopne
sarb
inc
aas
adc
inc
dec
dec
arpl
std
popf
imulb
std
lcall
adc
mov
cmpsl
pop
ret
dec
pop
xchg
pop
mov
ret
add
pop
ret
aam
ficompl
stos
mov
cli
xor
add
in
popa
out
dec
icebp
xchg
insb
lahf
mov
mov
and
mov
pop
cli
pushf
sbb
push
push
mov
mov
int
inc
cmp
shll
mov
mov
popl
pop
lods
mov
cmp
cmp
int
xchg
fwait
outsl
inc
sti
addr16
cmp
mov
data16
dec
ljmp
mov
sub
fsts
xchg
loope
data16
mov
and
dec
add
cmp
pop
lcall
and
xchg
lds
mov
movsl
test
dec
loop
push
outsl
jnp
sub
dec
xor
pop
lcall
pop
xchg
loop
lret
insb
outsb
ret
cmp
add
jno
jmp
xor
rcrl
and
lods
xlat
dec
mov
mov
sti
push
mov
xlat
ss
jmp
into
out
pusha
jo
inc
fmulp
sub
jp
stc
movsb
outsl
rcrl
cmp
dec
push
mov
cmp
jo
hlt
mov
shll
xchg
jne
inc
jge
mov
ret
jns
add
outsl
rcrl
dec
inc
daa
or
sti
sbb
ljmp
or
rol
lods
sub
mov
inc
les
inc
mov
ja
ljmp
lret
jns
loopne
cmp
loope
inc
sub
jl
mov
leave
jmp
fs
dec
orb
inc
outsb
popa
xchg
or
or
repnz
xor
push
incl
push
cmp
add
pop
ja
decb
nop
loopne
out
xchg
out
mov
inc
add
scas
inc
imul
mov
pop
push
out
ja
push
jne
dec
push
rclb
xchg
sub
mov
imul
push
xchg
stc
loop
fidivrl
mov
arpl
iret
mov
pusha
insl
jmp
insl
mov
incl
fdivrp
loope
cmpsl
add
lret
mov
enter
pop
faddp
or
dec
push
cltd
pop
jne
test
jle
clc
shl
andl
mov
cmpsl
mov
inc
scas
and
mov
or
jmp
pop
or
push
ret
add
jnp
dec
xlat
cmc
popf
sbb
push
inc
nopl
ja
push
add
mov
jnp
fstpl
push
loop
jae
push
testb
dec
push
pushl
sbb
inc
xchg
jns
push
inc
movsb
les
pop
jp
sahf
cs
mov
cld
push
inc
ja
cmpsb
add
test
fwait
adc
adc
and
dec
adc
jns,pn
fs
leave
loope
cwtl
jne
push
mov
addl
outsb
in
shlb
sub
adc
cmp
mov
adc
into
cld
ljmp
jle
btr
movsb
and
cmpsb
sub
push
mov
popf
jb
ret
cld
adc
inc
xor
xor
popf
mov
sbb
sub
dec
mov
and
mov
add
dec
jl
push
xchg
mov
nop
pop
mov
cmpsl
mov
push
xchg
call
aas
ja
mov
inc
jne
dec
sbb
movl
aam
cmpsb
xor
enter
rorl
scas
inc
mul
fwait
and
push
push
repz
add
fcmovbe
mov
add
xor
rol
mov
cmp
pop
das
dec
mov
sbb
sahf
sub
or
push
add
hlt
shl
mov
lret
mov
fsubrl
movl
sahf
mov
xor
lcall
ret
jo
or
cmp
push
test
rorb
bound
mov
leave
jp
movsb
pop
mov
dec
lods
aas
ret
dec
test
sti
sbb
popa
jmp
dec
out
jmp
adc
or
adc
add
stos
out
cmc
sbb
test
sbbl
shl
mov
mov
inc
in
ljmp
xor
imul
push
add
stos
fstps
fdivs
das
scas
sbb
xchg
pop
cmp
cmpsb
pop
inc
mov
dec
cmpsl
and
jge
fsubs
add
or
aaa
iret
mov
fwait
pusha
fwait
pop
ret
psrlq
int
fcoml
pop
pop
bound
ja
lods
mov
adc
xchg
mov
sub
dec
and
fstp
jg
push
push
cs
or
ja
enter
in
inc
jle
or
xor
sub
add
mov
cmpsl
and
stc
jmp
add
loop
cmpsb
dec
pusha
push
jp
cs
subb
test
pop
stos
mov
adc
inc
int
cmpsl
jne,pt
mov
adc
mov
in
scas
cwtl
pop
rorb
sub
jo
sub
mov
jno
fisttpll
imul
cmp
fisubrl
int3
pop
push
push
mov
push
loope
sbb
add
es
xchg
rorl
stos
in
cmp
shll
popf
arpl
fwait
js
jo
repnz
sbb
mov
mov
pop
imul
mov
mov
xor
test
xor
enter
sbb
aad
inc
xchg
pop
jmp
dec
mov
lock
lret
shl
and
sub
in
adc
sub
lret
mov
in
cmp
mov
aas
adc
aad
sub
or
nop
mov
cmp
jp
xchg
out
popf
xor
ljmp
adc
cmp
pop
push
mov
inc
movsl
dec
and
sub
xchg
out
jge
lods
add
xchg
sub
xor
cmc
int3
sbb
cli
and
sub
sar
inc
sub
or
jns
lock
inc
movsl
jb
outsb
ds
loope
or
test
pop
ja
sbb
mov
cmp
mov
jg
dec
mov
out
lea
ss
sub
and
cmpsb
xor
inc
js
pop
dec
push
enter
push
and
test
notl
or
nop
or
leave
mov
dec
incl
andb
les
aad
adc
das
call
stc
mov
add
mov
lock
push
pop
ds
jbe
lods
mov
fstpt
add
mov
xchg
jno
mov
inc
push
or
or
out
xchg
je
mov
or
js
push
aaa
mov
add
addr16
cmc
sar
stc
xor
hlt
cs
cmp
outsl
xor
enter
sub
sub
ss
jo
pop
jbe
push
pop
sti
mov
scas
fimuls
lds
mov
xor
faddl
pop
ret
rorb
xchg
push
mov
xchg
enter
xchg
and
push
inc
popa
in
xchg
add
icebp
push
mov
cwtl
jp
sub
je
adc
mov
push
aaa
test
add
enter
fdiv
pop
jge
jle
xlat
cmpsb
call
mov
fwait
out
mov
mov
stc
lock
fisubrl
adc
negl
scas
fcomip
sub
aad
jbe
sbb
dec
int3
jp
je
loopne
loope
cltd
gs
sbb
vunpcklps
mov
add
add
iret
aam
insb
jo
push
jno
inc
jle
xchg
lahf
mov
rorb
sti
dec
out
mov
xchg
dec
hlt
mov
xchg
or
xchg
shll
ja
lcall
mov
sbb
loop
pop
adc
pusha
cmpsl
cwtl
mov
push
pop
scas
ret
fsts
jg
enter
fidivrs
aaa
movb
outsb
adc
or
fldenv
fidivs
push
nop
dec
cli
mov
loop
gs
outsl
mov
or
xchg
jle
ficompl
pop
ss
mov
xchg
or
cli
mov
mov
pop
inc
cmc
dec
xor
lcall
pop
adcl
push
je
call
add
cmpsb
sbb
add
jecxz
leave
mov
jl
xor
xchg
push
ret
orl
popf
rolb
fidivs
cmpsb
xor
xchg
push
enter
pop
rcrl
push
jb
push
mov
xchg
sti
popf
rcl
loopne
cwtl
mov
test
push
xchg
mov
pop
sub
push
repz
aas
and
ret
je
cli
jo
cmpsb
shl
popf
mov
sbb
lcall
loopne
clc
in
mov
lods
xchg
dec
jmp
pop
jae
inc
mov
sub
mov
je
inc
loope
ret
subl
sbb
mov
inc
stos
mov
mov
push
push
fisubrl
sbb
cltd
std
dec
leave
dec
mov
pcmpeqw
dec
or
fldl
je
jg
scas
lret
inc
inc
psubd
mov
push
or
test
jmp
ret
lea
scas
out
inc
rcrl
pop
leave
and
ds
gs
push
fdivp
add
add
inc
sub
in
rcl
cwtl
out
cld
arpl
call
mov
inc
aas
icebp
fsubrp
test
nop
jo
dec
js
mov
lcall
sub
inc
add
sub
cmp
fldenv
test
loop
or
push
lcall
sbb
dec
add
loope
fs
lods
inc
loope
stos
xchg
int3
les
cmpsl
shrl
mov
popf
mov
insb
mov
ficompl
xchg
mov
in
pop
inc
pop
push
fnstsw
xor
mov
es
mov
sti
arpl
mov
mov
fcmovb
cmp
and
xchg
xchg
loope
movsb
rcll
dec
ret
sbb
pop
outsl
xchg
pop
fiadds
jp
inc
popa
xchg
mov
hlt
adc
aaa
jecxz
rcrb
lret
fwait
sub
mov
jae
scas
test
sub
adc
aam
and
xchg
lcall
push
aam
mov
mov
cmc
testb
leave
adc
jge
lcall
xorl
icebp
decb
jmp
mov
mov
movsb
sbb
js
or
es
sbb
adc
adcb
into
mov
ljmp
mov
fsubr
repz
push
aaa
adc
sbb
test
mov
lret
add
add
ret
sub
shlb
adcl
imul
jno
xchg
mov
lds
lods
mov
lods
inc
xor
pop
fimull
mov
testb
ret
out
insb
int
test
out
add
fldt
addr16
xchg
or
stc
loop
push
pusha
scas
xor
or
cmp
mov
testb
add
mov
lret
scas
and
out
mov
jnp
push
mov
xor
in
mov
inc
add
into
loope
sbb
mov
adc
mov
ja
push
mov
mov
shll
arpl
dec
pop
mov
mov
mov
call
into
and
lods
jmp
lods
pusha
out
push
mov
je
test
mov
es
int3
out
aaa
xor
add
aam
fdivs
sbb
inc
bswap
stc
xchg
in
add
jno
orb
mov
movl
loopne
sbb
mov
into
xchg
xchg
lds
lds
scas
bnd
mov
icebp
push
adc
roll
pop
ret
cmp
fnstenv
notl
insb
aaa
push
cmp
push
mov
bound
fistpll
addr16
add
frstor
loope
xchg
and
in
test
mov
inc
imul
sub
cs
repz
push
data16
repnz
pop
in
pop
mov
rolb
data16
lret
lods
xchg
sti
addr16
xchg
int3
push
call
mov
adc
insl
das
outsl
and
mov
rcll
out
mov
xchg
xchg
add
mov
mov
and
lea
jbe
ficomps
outsb
addb
xor
nop
in
lcall
cmp
aad
cvtps2pd
xchg
mov
mov
adcb
pop
hlt
and
fwait
or
stos
sub
cmp
inc
lret
lcall
test
lret
jecxz
ret
inc
lea
imul
cwtl
sbb
add
pop
andl
sbbl
xor
out
pushf
loop
insb
xor
int
das
adc
push
xchg
add
stos
xchg
jbe
pop
sub
and
scas
mov
lret
mov
or
andb
in
fwait
imul
fcomi
insb
mov
fs
jo
hlt
icebp
xor
xor
out
mov
loope,pn
mov
jp
mov
ljmp
lds
xor
xchg
stos
aas
push
pop
push
and
push
int3
cli
ds
ss
lahf
mov
mov
popf
bnd
insl
scas
enter
fcomip
adc
loopne
add
adc
jnp
adc
jbe
cmp
push
mov
insl
mov
mov
bound
mov
pop
xchg
sarb
loope
inc
mov
mov
sub
gs
mov
andb
sbb
sbb
gs
or
ljmp
decl
jbe
stos
xchg
xchg
lds
push
cmp
mov
mov
sub
insb
dec
shr
out
xor
jo
inc
or
xchg
loope
insb
ss
xor
pop
stos
fldcw
push
lods
inc
mov
mov
loopne
jle
sub
mov
imul
mov
fmuls
mov
call
lcall
hlt
cwtl
es
fisubrs
pop
ds
sub
pop
aaa
fcoms
hlt
pop
inc
mov
movsl
and
outsl
push
xor
xchg
jno
cmpsb
cmp
xchg
pop
xchg
dec
xor
stc
push
jno
push
cmp
sbb
sbb
test
adcl
mov
int
cwtl
int3
nop
ret
mov
loopne
mov
or
aaa
ret
fcmovbe
jbe
jp
jecxz
cwtl
fwait
pop
andl
hlt
mov
js
cmpsl
into
jno
jae
enter
and
add
sbb
dec
push
jmp
inc
imulb
pop
pop
dec
push
mov
movsl
pushf
push
cs
out
inc
sub
and
push
mov
cmc
sub
rcl
out
pop
test
daa
fisubs
or
addl
ret
nop
repz
cli
lods
into
sar
xchg
jnp
adc
test
push
push
xor
imul
push
push
in
xchg
testb
aam
outsl
rorb
data16
lret
push
call
sbbl
xchg
cltd
addr16
pop
xor
data16
xchg
outsl
mov
mov
cmp
outsl
mov
inc
dec
mov
cmp
stc
sub
dec
and
inc
arpl
xor
xor
pop
test
inc
bound
fcmovne
mov
inc
rolb
cmc
fwait
jno
xchg
lea
push
push
das
cld
aaa
xchg
test
movsl
inc
xor
pop
jecxz
add
inc
fistps
cmpsb
mov
adc
stos
inc
cwtl
ret
in
jg
out
inc
and
stc
pushf
test
mov
dec
out
fidivrl
jae
ja
bound
and
mov
jno
mov
popa
adc
add
push
pminsw
imul
dec
ds
push
adc
mov
cmc
adc
xchg
lret
xor
test
dec
sarb
xchg
pop
fmull
sti
mov
cmp
jge
dec
dec
movsb
incb
mov
bound
ljmp
mov
fwait
enter
xchg
lods
testb
pop
cmpsb
add
xchg
lods
sub
sbbb
scas
jg
lock
arpl
jbe
aaa
add
push
lock
jno
sbb
jo
add
jmp
cmp
nop
add
dec
inc
mov
decl
out
sub
adc
in
orl
aam
in
xor
jo
and
divb
pop
fs
test
push
jb
pop
jbe
aam
adc
xchg
xor
dec
push
cmp
cmpsb
bound
ds
mov
jae
add
push
js
in
je
mov
test
push
mov
js
adc
sbb
icebp
imul
aad
and
repz
cmpsb
adc
mov
and
or
add
sbb
lods
bound
mov
or
icebp
fsubl
mov
add
cwtl
pop
push
add
pop
xchg
lret
jb
xor
xor
movsl
loopne
or
shlb
lock
mov
scas
mov
jg
xchg
inc
and
mov
fdivrs
into
pushf
subl
in
cmp
xchg
out
out
dec
inc
mov
out
xor
nop
insb
lods
imul
loope
into
std
lea
jns
cltd
push
mov
xchg
add
sub
inc
imul
movsb
sbb
scas
push
insb
or
push
aaa
jnp
in
push
ret
ja
sbb
mov
shll
mov
pop
shrl
daa
mov
jae
mov
je
cmp
sbb
into
pop
out
inc
mov
mov
dec
loopne
and
mov
arpl
push
in
add
add
fwait
lds
mov
gs
outsl
pop
xchg
scas
addr16
push
push
out
mov
cmpb
fsubl
xlat
mov
and
mov
sbb
mov
or
mov
push
aas
mov
xor
test
std
xor
ja
int3
cs
movsl
shll
inc
int
cltd
adc
test
cmp
in
ljmp
xchg
insb
arpl
cwtl
aam
mov
push
lods
push
mov
jecxz
fisubrs
leave
xor
dec
jg
cmc
int3
clc
lret
jle
jns
test
and
bound
jns
add
icebp
aam
or
mov
jg
imul
out
jns
std
cmp
xor
push
out
sar
push
nop
push
stc
inc
sarb
or
clc
dec
or
fs
arpl
fcompl
test
out
sbb
and
ss
pusha
rcrl
insl
mov
imul
out
fwait
iret
dec
sub
mov
stos
push
pop
inc
rcl
test
pop
scas
notb
fwait
mov
icebp
push
aad
add
dec
push
aas
pop
mov
sub
into
int3
pop
pop
clc
outsl
out
fldl
mov
jnp
add
ss
bound
out
mov
aam
pop
in
ss
xchg
test
imul
pop
sbb
cmp
jae
cmp
adc
pop
sub
xor
lock
fsubrl
cmpsl
test
pop
or
loope
cwtl
repnz
lods
xchg
cmp
repnz
mov
sub
rclb
in
add
aas
pop
sub
inc
out
or
push
lds
lahf
sti
cmp
das
insl
push
mov
pusha
cmp
daa
add
mov
outsb
push
insl
mov
das
int
and
popf
mov
repnz
lock
xchg
arpl
jae
out
mov
cld
loopne
js
repnz
sbb
dec
pop
xlat
push
imul
mov
jno
cld
pop
subb
ret
leave
sbb
ret
mov
idiv
or
mov
loop
cmp
mov
cltd
sub
mov
jnp
cltd
sbb
mov
sbb
mov
inc
cmp
adc
test
shrl
pop
sbb
or
pop
inc
adc
imul
mov
add
fbld
push
test
stos
cli
dec
sub
sub
cvttps2pi
stos
sti
jnp
shll
popa
xchg
lods
pusha
mov
cwtl
jne
pop
loop
jnp
leave
push
leave
inc
dec
ljmp
mov
negl
jno
divl
pop
pop
sbb
adc
dec
bound
mov
das
xchg
mov
push
fistl
sahf
sbb
adc
shr
mov
push
xchg
cs
or
insb
push
xchg
mov
push
pop
jae,pt
iret
or
sub
pop
mov
push
ss
daa
movsl
mov
push
and
push
mov
mov
fsubs
sub
dec
adc
xor
cmp
sub
sahf
jle
leave
pop
jae
sbbl
mov
mov
adc
leave
push
jecxz
sahf
jle
sbbl
push
test
and
and
mov
dec
push
out
sbb
repnz
cmp
mov
jl
add
sub
idivb
inc
imul
jb
cmp
pop
push
mov
rcrl
pop
and
mov
mov
pushf
fsubrs
enter
iret
push
mov
arpl
mov
fwait
push
insb
mov
xor
add
inc
mov
inc
jnp
add
xor
mov
mov
mov
setl
inc
fidivrl
arpl
daa
out
test
inc
shlb
aaa
dec
inc
cli
sub
scas
pop
pop
add
lods
jnp
dec
popa
push
std
fistpl
sbb
mov
enter
arpl
popa
jg
xchg
xchg
out
enter
add
int
cmpsl
inc
stos
lret
out
repz
lock
fisubrs
pop
sbb
insb
fists
mov
fimull
aam
mov
xchg
xor
lcall
loope
cmp
out
mov
push
cltd
dec
ja
test
fwait
cmp
push
lods
aam
xor
add
xor
out
push
adc
test
pop
popf
lret
int3
or
inc
inc
jno
mov
mov
ja
in
dec
cmp
sbb
mov
jbe
xchg
pop
nop
test
out
std
repz
push
push
pop
adc
pop
stos
popa
inc
ret
cmp
add
jb
pop
jmp
stc
jbe
xchg
dec
pop
or
add
loop
idivl
aad
fldcw
loop
sbb
lea
adc
fwait
jmp
shll
and
dec
sbb
filds
cmp
test
rcrb
push
jge
mov
xor
jns
push
es
sub
mov
mov
jns
int3
push
dec
rcl
pop
sbb
outsl
xor
fcmovnb
mov
lea
push
xchg
idivb
stos
les
pop
btc
lods
push
add
sub
lods
in
dec
lahf
jl
push
cmp
ja
and
es
inc
cmc
inc
lock
mov
cmp
hlt
lret
in
fsubp
jmp
mov
je
xchg
int3
lea
sub
push
subb
je
stos
mov
lds
sub
jno
in
mov
or
ss
lea
xchg
in
push
dec
cli
lea
adc
shll
xchg
dec
cmp
sub
inc
mov
mov
adcb
jp
lret
call
sub
loop
je
fwait
add
sub
rorb
xor
jecxz
lods
sub
mov
mov
arpl
lcall
xchg
xlat
hlt
ss
fyl2xp1
orb
jp
mov
ss
popa
testb
xchg
cmpsl
sub
jae
jbe
inc
loope
loop
cltd
sbb
mov
in
add
jnp
mov
inc
insl
pop
enter
in
mulb
daa
mov
daa
mov
push
or
jl
xchg
out
hlt
jge
xchg
jmp
mov
test
testl
test
sti
jmp
cs
jle
test
shl
ljmp
mov
jecxz
or
fsubr
mov
xchg
les
mov
xchg
mov
inc
mov
cmp
outsb
bnd
push
and
xchg
mov
dec
and
shlb
sub
test
add
dec
or
ljmp
inc
and
incb
cmp
jnp
cwtl
stc
ja
bound
cld
lods
ljmp
inc
inc
push
xor
lcall
adc
adc
repnz
adc
imul
movsl
pop
mov
rcl
jae
inc
adc
push
sbb
ss
sbb
xlat
pushf
mull
out
icebp
idivb
fs
cmp
out
ror
add
or
outsl
and
hlt
out
cmp
ds
xchg
jae
dec
push
insl
jecxz
ret
sbb
mov
push
push
sbb
rclb
jp
sub
xchg
insb
add
jbe
lock
int3
dec
out
sti
mov
push
pop
daa
pop
mov
dec
jo
push
sub
lods
mov
or
popf
pop
add
aad
ret
hlt
mov
inc
xor
in
roll
inc
push
mov
icebp
testb
divl
nop
lds
dec
dec
cs
inc
aad
cmc
mov
movsb
jmp
push
lods
outsl
pop
clc
fidivl
lret
jmp
jmp
in
fdivrs
cmp
sub
mov
sahf
mov
fs
mov
dec
inc
lret
sti
mov
xor
movsb
in
aas
stc
dec
mov
test
aad
inc
xchg
xor
jle
ljmp
and
sbb
repnz
xchg
lods
jl
cmp
mov
jg
js
adcb
sub
mov
add
call
sbb
pop
xchg
xor
subb
aaa
or
push
stos
aaa
xor
cld
bound
test
mul
gs
ja
pop
movsl
jmp
cmpsb
add
xchg
cli
mov
adc
rcr
imul
push
lds
ret
add
mov
insb
loop
mov
movsl
popf
and
cmp
insl
and
mov
test
xchg
ret
fcmovnu
out
rcrl
and
test
cmp
pop
filds
